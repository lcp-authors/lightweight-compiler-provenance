
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x40fd1]        # 445fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <free@plt-0x1a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <free@plt-0x10>:
  405020:	push   QWORD PTR [rip+0x40fe2]        # 446008 <flatcc_builder_padding_base@@Base+0xc088>
  405026:	jmp    QWORD PTR [rip+0x40fe4]        # 446010 <flatcc_builder_padding_base@@Base+0xc090>
  40502c:	nop    DWORD PTR [rax+0x0]

0000000000405030 <free@plt>:
  405030:	jmp    QWORD PTR [rip+0x40fe2]        # 446018 <free@GLIBC_2.2.5>
  405036:	push   0x0
  40503b:	jmp    405020 <free@plt-0x10>

0000000000405040 <strncpy@plt>:
  405040:	jmp    QWORD PTR [rip+0x40fda]        # 446020 <strncpy@GLIBC_2.2.5>
  405046:	push   0x1
  40504b:	jmp    405020 <free@plt-0x10>

0000000000405050 <strtod@plt>:
  405050:	jmp    QWORD PTR [rip+0x40fd2]        # 446028 <strtod@GLIBC_2.2.5>
  405056:	push   0x2
  40505b:	jmp    405020 <free@plt-0x10>

0000000000405060 <strlen@plt>:
  405060:	jmp    QWORD PTR [rip+0x40fca]        # 446030 <strlen@GLIBC_2.2.5>
  405066:	push   0x3
  40506b:	jmp    405020 <free@plt-0x10>

0000000000405070 <__stack_chk_fail@plt>:
  405070:	jmp    QWORD PTR [rip+0x40fc2]        # 446038 <__stack_chk_fail@GLIBC_2.4>
  405076:	push   0x4
  40507b:	jmp    405020 <free@plt-0x10>

0000000000405080 <__assert_fail@plt>:
  405080:	jmp    QWORD PTR [rip+0x40fba]        # 446040 <__assert_fail@GLIBC_2.2.5>
  405086:	push   0x5
  40508b:	jmp    405020 <free@plt-0x10>

0000000000405090 <memset@plt>:
  405090:	jmp    QWORD PTR [rip+0x40fb2]        # 446048 <memset@GLIBC_2.2.5>
  405096:	push   0x6
  40509b:	jmp    405020 <free@plt-0x10>

00000000004050a0 <fputc@plt>:
  4050a0:	jmp    QWORD PTR [rip+0x40faa]        # 446050 <fputc@GLIBC_2.2.5>
  4050a6:	push   0x7
  4050ab:	jmp    405020 <free@plt-0x10>

00000000004050b0 <memchr@plt>:
  4050b0:	jmp    QWORD PTR [rip+0x40fa2]        # 446058 <memchr@GLIBC_2.2.5>
  4050b6:	push   0x8
  4050bb:	jmp    405020 <free@plt-0x10>

00000000004050c0 <memcmp@plt>:
  4050c0:	jmp    QWORD PTR [rip+0x40f9a]        # 446060 <memcmp@GLIBC_2.2.5>
  4050c6:	push   0x9
  4050cb:	jmp    405020 <free@plt-0x10>

00000000004050d0 <strcmp@plt>:
  4050d0:	jmp    QWORD PTR [rip+0x40f92]        # 446068 <strcmp@GLIBC_2.2.5>
  4050d6:	push   0xa
  4050db:	jmp    405020 <free@plt-0x10>

00000000004050e0 <fprintf@plt>:
  4050e0:	jmp    QWORD PTR [rip+0x40f8a]        # 446070 <fprintf@GLIBC_2.2.5>
  4050e6:	push   0xb
  4050eb:	jmp    405020 <free@plt-0x10>

00000000004050f0 <memcpy@plt>:
  4050f0:	jmp    QWORD PTR [rip+0x40f82]        # 446078 <memcpy@GLIBC_2.14>
  4050f6:	push   0xc
  4050fb:	jmp    405020 <free@plt-0x10>

0000000000405100 <malloc@plt>:
  405100:	jmp    QWORD PTR [rip+0x40f7a]        # 446080 <malloc@GLIBC_2.2.5>
  405106:	push   0xd
  40510b:	jmp    405020 <free@plt-0x10>

0000000000405110 <realloc@plt>:
  405110:	jmp    QWORD PTR [rip+0x40f72]        # 446088 <realloc@GLIBC_2.2.5>
  405116:	push   0xe
  40511b:	jmp    405020 <free@plt-0x10>

0000000000405120 <memmove@plt>:
  405120:	jmp    QWORD PTR [rip+0x40f6a]        # 446090 <memmove@GLIBC_2.2.5>
  405126:	push   0xf
  40512b:	jmp    405020 <free@plt-0x10>

0000000000405130 <sprintf@plt>:
  405130:	jmp    QWORD PTR [rip+0x40f62]        # 446098 <sprintf@GLIBC_2.2.5>
  405136:	push   0x10
  40513b:	jmp    405020 <free@plt-0x10>

0000000000405140 <fwrite@plt>:
  405140:	jmp    QWORD PTR [rip+0x40f5a]        # 4460a0 <fwrite@GLIBC_2.2.5>
  405146:	push   0x11
  40514b:	jmp    405020 <free@plt-0x10>

0000000000405150 <posix_memalign@plt>:
  405150:	jmp    QWORD PTR [rip+0x40f52]        # 4460a8 <posix_memalign@GLIBC_2.2.5>
  405156:	push   0x12
  40515b:	jmp    405020 <free@plt-0x10>

Disassembly of section .text:

0000000000405160 <_start@@Base>:
  405160:	endbr64 
  405164:	xor    ebp,ebp
  405166:	mov    r9,rdx
  405169:	pop    rsi
  40516a:	mov    rdx,rsp
  40516d:	and    rsp,0xfffffffffffffff0
  405171:	push   rax
  405172:	push   rsp
  405173:	mov    r8,0x434ff0
  40517a:	mov    rcx,0x434f80
  405181:	mov    rdi,0x419a9f
  405188:	call   QWORD PTR [rip+0x40e4a]        # 445fd8 <__libc_start_main@GLIBC_2.2.5>
  40518e:	hlt    
  40518f:	nop
  405190:	endbr64 
  405194:	ret    
  405195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40519f:	nop
  4051a0:	mov    eax,0x446a77
  4051a5:	push   rbp
  4051a6:	sub    rax,0x446a70
  4051ac:	cmp    rax,0xe
  4051b0:	mov    rbp,rsp
  4051b3:	jbe    4051d0 <_start@@Base+0x70>
  4051b5:	mov    eax,0x0
  4051ba:	test   rax,rax
  4051bd:	je     4051d0 <_start@@Base+0x70>
  4051bf:	pop    rbp
  4051c0:	mov    edi,0x446a70
  4051c5:	jmp    rax
  4051c7:	nop    WORD PTR [rax+rax*1+0x0]
  4051d0:	pop    rbp
  4051d1:	ret    
  4051d2:	nop    DWORD PTR [rax+0x0]
  4051d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051e0:	mov    esi,0x446a70
  4051e5:	push   rbp
  4051e6:	sub    rsi,0x446a70
  4051ed:	sar    rsi,0x3
  4051f1:	mov    rbp,rsp
  4051f4:	mov    rax,rsi
  4051f7:	shr    rax,0x3f
  4051fb:	add    rsi,rax
  4051fe:	sar    rsi,1
  405201:	je     405218 <_start@@Base+0xb8>
  405203:	mov    eax,0x0
  405208:	test   rax,rax
  40520b:	je     405218 <_start@@Base+0xb8>
  40520d:	pop    rbp
  40520e:	mov    edi,0x446a70
  405213:	jmp    rax
  405215:	nop    DWORD PTR [rax]
  405218:	pop    rbp
  405219:	ret    
  40521a:	nop    WORD PTR [rax+rax*1+0x0]
  405220:	cmp    BYTE PTR [rip+0x41849],0x0        # 446a70 <__bss_start@@Base>
  405227:	jne    40523a <_start@@Base+0xda>
  405229:	push   rbp
  40522a:	mov    rbp,rsp
  40522d:	call   4051a0 <_start@@Base+0x40>
  405232:	pop    rbp
  405233:	mov    BYTE PTR [rip+0x41836],0x1        # 446a70 <__bss_start@@Base>
  40523a:	repz ret 
  40523c:	nop    DWORD PTR [rax+0x0]
  405240:	mov    edi,0x445d98
  405245:	cmp    QWORD PTR [rdi],0x0
  405249:	jne    405250 <_start@@Base+0xf0>
  40524b:	jmp    4051e0 <_start@@Base+0x80>
  40524d:	nop    DWORD PTR [rax]
  405250:	mov    eax,0x0
  405255:	test   rax,rax
  405258:	je     40524b <_start@@Base+0xeb>
  40525a:	push   rbp
  40525b:	mov    rbp,rsp
  40525e:	call   rax
  405260:	pop    rbp
  405261:	jmp    4051e0 <_start@@Base+0x80>
  405266:	push   rbp
  405267:	mov    rbp,rsp
  40526a:	mov    eax,edi
  40526c:	mov    BYTE PTR [rbp-0x4],al
  40526f:	movzx  eax,BYTE PTR [rbp-0x4]
  405273:	pop    rbp
  405274:	ret    
  405275:	push   rbp
  405276:	mov    rbp,rsp
  405279:	sub    rsp,0x10
  40527d:	mov    QWORD PTR [rbp-0x8],rdi
  405281:	mov    eax,esi
  405283:	mov    BYTE PTR [rbp-0xc],al
  405286:	movzx  eax,BYTE PTR [rbp-0xc]
  40528a:	mov    edi,eax
  40528c:	call   405266 <_start@@Base+0x106>
  405291:	mov    edx,eax
  405293:	mov    rax,QWORD PTR [rbp-0x8]
  405297:	mov    BYTE PTR [rax],dl
  405299:	nop
  40529a:	leave  
  40529b:	ret    
  40529c:	push   rbp
  40529d:	mov    rbp,rsp
  4052a0:	mov    eax,edi
  4052a2:	mov    WORD PTR [rbp-0x4],ax
  4052a6:	movzx  eax,WORD PTR [rbp-0x4]
  4052aa:	pop    rbp
  4052ab:	ret    
  4052ac:	push   rbp
  4052ad:	mov    rbp,rsp
  4052b0:	sub    rsp,0x10
  4052b4:	mov    QWORD PTR [rbp-0x8],rdi
  4052b8:	mov    eax,esi
  4052ba:	mov    WORD PTR [rbp-0xc],ax
  4052be:	movzx  eax,WORD PTR [rbp-0xc]
  4052c2:	mov    edi,eax
  4052c4:	call   40529c <_start@@Base+0x13c>
  4052c9:	mov    edx,eax
  4052cb:	mov    rax,QWORD PTR [rbp-0x8]
  4052cf:	mov    WORD PTR [rax],dx
  4052d2:	nop
  4052d3:	leave  
  4052d4:	ret    
  4052d5:	push   rbp
  4052d6:	mov    rbp,rsp
  4052d9:	mov    DWORD PTR [rbp-0x4],edi
  4052dc:	mov    eax,DWORD PTR [rbp-0x4]
  4052df:	pop    rbp
  4052e0:	ret    
  4052e1:	push   rbp
  4052e2:	mov    rbp,rsp
  4052e5:	sub    rsp,0x10
  4052e9:	mov    QWORD PTR [rbp-0x8],rdi
  4052ed:	mov    DWORD PTR [rbp-0xc],esi
  4052f0:	mov    eax,DWORD PTR [rbp-0xc]
  4052f3:	mov    edi,eax
  4052f5:	call   4052d5 <_start@@Base+0x175>
  4052fa:	mov    edx,eax
  4052fc:	mov    rax,QWORD PTR [rbp-0x8]
  405300:	mov    DWORD PTR [rax],edx
  405302:	nop
  405303:	leave  
  405304:	ret    
  405305:	push   rbp
  405306:	mov    rbp,rsp
  405309:	mov    QWORD PTR [rbp-0x8],rdi
  40530d:	mov    rax,QWORD PTR [rbp-0x8]
  405311:	pop    rbp
  405312:	ret    
  405313:	push   rbp
  405314:	mov    rbp,rsp
  405317:	sub    rsp,0x10
  40531b:	mov    QWORD PTR [rbp-0x8],rdi
  40531f:	mov    QWORD PTR [rbp-0x10],rsi
  405323:	mov    rax,QWORD PTR [rbp-0x10]
  405327:	mov    rdi,rax
  40532a:	call   405305 <_start@@Base+0x1a5>
  40532f:	mov    rdx,rax
  405332:	mov    rax,QWORD PTR [rbp-0x8]
  405336:	mov    QWORD PTR [rax],rdx
  405339:	nop
  40533a:	leave  
  40533b:	ret    
  40533c:	push   rbp
  40533d:	mov    rbp,rsp
  405340:	mov    eax,edi
  405342:	mov    BYTE PTR [rbp-0x4],al
  405345:	movzx  eax,BYTE PTR [rbp-0x4]
  405349:	pop    rbp
  40534a:	ret    
  40534b:	push   rbp
  40534c:	mov    rbp,rsp
  40534f:	sub    rsp,0x10
  405353:	mov    QWORD PTR [rbp-0x8],rdi
  405357:	mov    eax,esi
  405359:	mov    BYTE PTR [rbp-0xc],al
  40535c:	movsx  eax,BYTE PTR [rbp-0xc]
  405360:	mov    edi,eax
  405362:	call   40533c <_start@@Base+0x1dc>
  405367:	mov    edx,eax
  405369:	mov    rax,QWORD PTR [rbp-0x8]
  40536d:	mov    BYTE PTR [rax],dl
  40536f:	nop
  405370:	leave  
  405371:	ret    
  405372:	push   rbp
  405373:	mov    rbp,rsp
  405376:	mov    eax,edi
  405378:	mov    WORD PTR [rbp-0x4],ax
  40537c:	movzx  eax,WORD PTR [rbp-0x4]
  405380:	pop    rbp
  405381:	ret    
  405382:	push   rbp
  405383:	mov    rbp,rsp
  405386:	sub    rsp,0x10
  40538a:	mov    QWORD PTR [rbp-0x8],rdi
  40538e:	mov    eax,esi
  405390:	mov    WORD PTR [rbp-0xc],ax
  405394:	movsx  eax,WORD PTR [rbp-0xc]
  405398:	mov    edi,eax
  40539a:	call   405372 <_start@@Base+0x212>
  40539f:	mov    edx,eax
  4053a1:	mov    rax,QWORD PTR [rbp-0x8]
  4053a5:	mov    WORD PTR [rax],dx
  4053a8:	nop
  4053a9:	leave  
  4053aa:	ret    
  4053ab:	push   rbp
  4053ac:	mov    rbp,rsp
  4053af:	mov    DWORD PTR [rbp-0x4],edi
  4053b2:	mov    eax,DWORD PTR [rbp-0x4]
  4053b5:	pop    rbp
  4053b6:	ret    
  4053b7:	push   rbp
  4053b8:	mov    rbp,rsp
  4053bb:	sub    rsp,0x10
  4053bf:	mov    QWORD PTR [rbp-0x8],rdi
  4053c3:	mov    DWORD PTR [rbp-0xc],esi
  4053c6:	mov    eax,DWORD PTR [rbp-0xc]
  4053c9:	mov    edi,eax
  4053cb:	call   4053ab <_start@@Base+0x24b>
  4053d0:	mov    edx,eax
  4053d2:	mov    rax,QWORD PTR [rbp-0x8]
  4053d6:	mov    DWORD PTR [rax],edx
  4053d8:	nop
  4053d9:	leave  
  4053da:	ret    
  4053db:	push   rbp
  4053dc:	mov    rbp,rsp
  4053df:	mov    QWORD PTR [rbp-0x8],rdi
  4053e3:	mov    rax,QWORD PTR [rbp-0x8]
  4053e7:	pop    rbp
  4053e8:	ret    
  4053e9:	push   rbp
  4053ea:	mov    rbp,rsp
  4053ed:	sub    rsp,0x10
  4053f1:	mov    QWORD PTR [rbp-0x8],rdi
  4053f5:	mov    QWORD PTR [rbp-0x10],rsi
  4053f9:	mov    rax,QWORD PTR [rbp-0x10]
  4053fd:	mov    rdi,rax
  405400:	call   4053db <_start@@Base+0x27b>
  405405:	mov    rdx,rax
  405408:	mov    rax,QWORD PTR [rbp-0x8]
  40540c:	mov    QWORD PTR [rax],rdx
  40540f:	nop
  405410:	leave  
  405411:	ret    
  405412:	push   rbp
  405413:	mov    rbp,rsp
  405416:	vmovss DWORD PTR [rbp-0x14],xmm0
  40541b:	vmovss xmm0,DWORD PTR [rbp-0x14]
  405420:	vmovss DWORD PTR [rbp-0x4],xmm0
  405425:	mov    eax,DWORD PTR [rbp-0x4]
  405428:	mov    DWORD PTR [rbp-0x4],eax
  40542b:	vmovss xmm0,DWORD PTR [rbp-0x4]
  405430:	pop    rbp
  405431:	ret    
  405432:	push   rbp
  405433:	mov    rbp,rsp
  405436:	sub    rsp,0x10
  40543a:	mov    QWORD PTR [rbp-0x8],rdi
  40543e:	vmovss DWORD PTR [rbp-0xc],xmm0
  405443:	mov    eax,DWORD PTR [rbp-0xc]
  405446:	mov    DWORD PTR [rbp-0x10],eax
  405449:	vmovss xmm0,DWORD PTR [rbp-0x10]
  40544e:	call   405412 <_start@@Base+0x2b2>
  405453:	vmovd  edx,xmm0
  405457:	mov    rax,QWORD PTR [rbp-0x8]
  40545b:	mov    DWORD PTR [rax],edx
  40545d:	nop
  40545e:	leave  
  40545f:	ret    
  405460:	push   rbp
  405461:	mov    rbp,rsp
  405464:	vmovsd QWORD PTR [rbp-0x18],xmm0
  405469:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40546e:	vmovsd QWORD PTR [rbp-0x8],xmm0
  405473:	mov    rax,QWORD PTR [rbp-0x8]
  405477:	mov    QWORD PTR [rbp-0x8],rax
  40547b:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  405480:	pop    rbp
  405481:	ret    
  405482:	push   rbp
  405483:	mov    rbp,rsp
  405486:	sub    rsp,0x18
  40548a:	mov    QWORD PTR [rbp-0x8],rdi
  40548e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  405493:	mov    rax,QWORD PTR [rbp-0x10]
  405497:	mov    QWORD PTR [rbp-0x18],rax
  40549b:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4054a0:	call   405460 <_start@@Base+0x300>
  4054a5:	vmovq  rdx,xmm0
  4054aa:	mov    rax,QWORD PTR [rbp-0x8]
  4054ae:	mov    QWORD PTR [rax],rdx
  4054b1:	nop
  4054b2:	leave  
  4054b3:	ret    
  4054b4:	push   rbp
  4054b5:	mov    rbp,rsp
  4054b8:	mov    eax,edi
  4054ba:	mov    BYTE PTR [rbp-0x4],al
  4054bd:	movzx  eax,BYTE PTR [rbp-0x4]
  4054c1:	pop    rbp
  4054c2:	ret    
  4054c3:	push   rbp
  4054c4:	mov    rbp,rsp
  4054c7:	sub    rsp,0x10
  4054cb:	mov    QWORD PTR [rbp-0x8],rdi
  4054cf:	mov    eax,esi
  4054d1:	mov    BYTE PTR [rbp-0xc],al
  4054d4:	movzx  eax,BYTE PTR [rbp-0xc]
  4054d8:	mov    edi,eax
  4054da:	call   4054b4 <_start@@Base+0x354>
  4054df:	mov    edx,eax
  4054e1:	mov    rax,QWORD PTR [rbp-0x8]
  4054e5:	mov    BYTE PTR [rax],dl
  4054e7:	nop
  4054e8:	leave  
  4054e9:	ret    
  4054ea:	push   rbp
  4054eb:	mov    rbp,rsp
  4054ee:	sub    rsp,0x30
  4054f2:	mov    QWORD PTR [rbp-0x8],rdi
  4054f6:	mov    QWORD PTR [rbp-0x10],rsi
  4054fa:	mov    QWORD PTR [rbp-0x18],rdx
  4054fe:	mov    QWORD PTR [rbp-0x20],rcx
  405502:	mov    DWORD PTR [rbp-0x24],r8d
  405506:	mov    rax,QWORD PTR [rbp-0x8]
  40550a:	mov    edx,0x48
  40550f:	mov    esi,0x0
  405514:	mov    rdi,rax
  405517:	call   405090 <memset@plt>
  40551c:	mov    rax,QWORD PTR [rbp-0x8]
  405520:	mov    rdx,QWORD PTR [rbp-0x10]
  405524:	mov    QWORD PTR [rax],rdx
  405527:	mov    rax,QWORD PTR [rbp-0x8]
  40552b:	mov    rdx,QWORD PTR [rbp-0x18]
  40552f:	mov    QWORD PTR [rax+0x8],rdx
  405533:	mov    rax,QWORD PTR [rbp-0x8]
  405537:	mov    DWORD PTR [rax+0x18],0x1
  40553e:	mov    rax,QWORD PTR [rbp-0x8]
  405542:	mov    edx,DWORD PTR [rbp-0x24]
  405545:	mov    DWORD PTR [rax+0x10],edx
  405548:	mov    rax,QWORD PTR [rbp-0x8]
  40554c:	mov    rdx,QWORD PTR [rbp-0x18]
  405550:	mov    QWORD PTR [rax+0x28],rdx
  405554:	mov    rax,QWORD PTR [rbp-0x8]
  405558:	mov    rdx,QWORD PTR [rbp-0x20]
  40555c:	mov    QWORD PTR [rax+0x30],rdx
  405560:	mov    rax,QWORD PTR [rbp-0x8]
  405564:	mov    rdx,QWORD PTR [rbp-0x18]
  405568:	mov    QWORD PTR [rax+0x38],rdx
  40556c:	nop
  40556d:	leave  
  40556e:	ret    
  40556f:	push   rbp
  405570:	mov    rbp,rsp
  405573:	sub    rsp,0x20
  405577:	mov    QWORD PTR [rbp-0x8],rdi
  40557b:	mov    QWORD PTR [rbp-0x10],rsi
  40557f:	mov    QWORD PTR [rbp-0x18],rdx
  405583:	mov    rdx,QWORD PTR [rbp-0x18]
  405587:	mov    rax,QWORD PTR [rbp-0x10]
  40558b:	sub    rdx,rax
  40558e:	mov    rax,rdx
  405591:	cmp    rax,0x1
  405595:	jle    4055cc <_start@@Base+0x46c>
  405597:	mov    rax,QWORD PTR [rbp-0x10]
  40559b:	movzx  eax,BYTE PTR [rax]
  40559e:	cmp    al,0x20
  4055a0:	jle    4055a8 <_start@@Base+0x448>
  4055a2:	mov    rax,QWORD PTR [rbp-0x10]
  4055a6:	jmp    4055e3 <_start@@Base+0x483>
  4055a8:	mov    rax,QWORD PTR [rbp-0x10]
  4055ac:	movzx  eax,BYTE PTR [rax]
  4055af:	cmp    al,0x20
  4055b1:	jne    4055cc <_start@@Base+0x46c>
  4055b3:	mov    rax,QWORD PTR [rbp-0x10]
  4055b7:	add    rax,0x1
  4055bb:	movzx  eax,BYTE PTR [rax]
  4055be:	cmp    al,0x20
  4055c0:	jle    4055cc <_start@@Base+0x46c>
  4055c2:	mov    rax,QWORD PTR [rbp-0x10]
  4055c6:	add    rax,0x1
  4055ca:	jmp    4055e3 <_start@@Base+0x483>
  4055cc:	mov    rdx,QWORD PTR [rbp-0x18]
  4055d0:	mov    rcx,QWORD PTR [rbp-0x10]
  4055d4:	mov    rax,QWORD PTR [rbp-0x8]
  4055d8:	mov    rsi,rcx
  4055db:	mov    rdi,rax
  4055de:	call   42675a <flatcc_json_parser_space_ext@@Base>
  4055e3:	leave  
  4055e4:	ret    
  4055e5:	push   rbp
  4055e6:	mov    rbp,rsp
  4055e9:	sub    rsp,0x20
  4055ed:	mov    QWORD PTR [rbp-0x8],rdi
  4055f1:	mov    QWORD PTR [rbp-0x10],rsi
  4055f5:	mov    QWORD PTR [rbp-0x18],rdx
  4055f9:	mov    rax,QWORD PTR [rbp-0x10]
  4055fd:	cmp    rax,QWORD PTR [rbp-0x18]
  405601:	jne    405609 <_start@@Base+0x4a9>
  405603:	mov    rax,QWORD PTR [rbp-0x10]
  405607:	jmp    40565b <_start@@Base+0x4fb>
  405609:	mov    rax,QWORD PTR [rbp-0x10]
  40560d:	movzx  eax,BYTE PTR [rax]
  405610:	cmp    al,0x22
  405612:	jne    405626 <_start@@Base+0x4c6>
  405614:	add    QWORD PTR [rbp-0x10],0x1
  405619:	mov    rax,QWORD PTR [rbp-0x8]
  40561d:	mov    DWORD PTR [rax+0x14],0x0
  405624:	jmp    405657 <_start@@Base+0x4f7>
  405626:	mov    rax,QWORD PTR [rbp-0x10]
  40562a:	movzx  eax,BYTE PTR [rax]
  40562d:	cmp    al,0x2e
  40562f:	jne    40564c <_start@@Base+0x4ec>
  405631:	mov    rdx,QWORD PTR [rbp-0x18]
  405635:	mov    rsi,QWORD PTR [rbp-0x10]
  405639:	mov    rax,QWORD PTR [rbp-0x8]
  40563d:	mov    ecx,0x5
  405642:	mov    rdi,rax
  405645:	call   42665a <flatcc_json_parser_set_error@@Base>
  40564a:	jmp    40565b <_start@@Base+0x4fb>
  40564c:	mov    rax,QWORD PTR [rbp-0x8]
  405650:	mov    DWORD PTR [rax+0x14],0x1
  405657:	mov    rax,QWORD PTR [rbp-0x10]
  40565b:	leave  
  40565c:	ret    
  40565d:	push   rbp
  40565e:	mov    rbp,rsp
  405661:	mov    QWORD PTR [rbp-0x18],rdi
  405665:	mov    QWORD PTR [rbp-0x20],rsi
  405669:	mov    QWORD PTR [rbp-0x10],0x0
  405671:	mov    rdx,QWORD PTR [rbp-0x20]
  405675:	mov    rax,QWORD PTR [rbp-0x18]
  405679:	sub    rdx,rax
  40567c:	mov    rax,rdx
  40567f:	mov    QWORD PTR [rbp-0x8],rax
  405683:	cmp    QWORD PTR [rbp-0x8],0x8
  405688:	jbe    405692 <_start@@Base+0x532>
  40568a:	mov    QWORD PTR [rbp-0x8],0x8
  405692:	cmp    QWORD PTR [rbp-0x8],0x8
  405697:	ja     405773 <_start@@Base+0x613>
  40569d:	mov    rax,QWORD PTR [rbp-0x8]
  4056a1:	lea    rdx,[rax*4+0x0]
  4056a9:	lea    rax,[rip+0x30964]        # 436014 <_IO_stdin_used@@Base+0x14>
  4056b0:	mov    eax,DWORD PTR [rdx+rax*1]
  4056b3:	movsxd rdx,eax
  4056b6:	lea    rax,[rip+0x30957]        # 436014 <_IO_stdin_used@@Base+0x14>
  4056bd:	add    rax,rdx
  4056c0:	jmp    rax
  4056c2:	mov    rax,QWORD PTR [rbp-0x18]
  4056c6:	add    rax,0x7
  4056ca:	movzx  eax,BYTE PTR [rax]
  4056cd:	movsx  rax,al
  4056d1:	or     QWORD PTR [rbp-0x10],rax
  4056d5:	mov    rax,QWORD PTR [rbp-0x18]
  4056d9:	add    rax,0x6
  4056dd:	movzx  eax,BYTE PTR [rax]
  4056e0:	movsx  rax,al
  4056e4:	shl    rax,0x8
  4056e8:	or     QWORD PTR [rbp-0x10],rax
  4056ec:	mov    rax,QWORD PTR [rbp-0x18]
  4056f0:	add    rax,0x5
  4056f4:	movzx  eax,BYTE PTR [rax]
  4056f7:	movsx  rax,al
  4056fb:	shl    rax,0x10
  4056ff:	or     QWORD PTR [rbp-0x10],rax
  405703:	mov    rax,QWORD PTR [rbp-0x18]
  405707:	add    rax,0x4
  40570b:	movzx  eax,BYTE PTR [rax]
  40570e:	movsx  rax,al
  405712:	shl    rax,0x18
  405716:	or     QWORD PTR [rbp-0x10],rax
  40571a:	mov    rax,QWORD PTR [rbp-0x18]
  40571e:	add    rax,0x3
  405722:	movzx  eax,BYTE PTR [rax]
  405725:	movsx  rax,al
  405729:	shl    rax,0x20
  40572d:	or     QWORD PTR [rbp-0x10],rax
  405731:	mov    rax,QWORD PTR [rbp-0x18]
  405735:	add    rax,0x2
  405739:	movzx  eax,BYTE PTR [rax]
  40573c:	movsx  rax,al
  405740:	shl    rax,0x28
  405744:	or     QWORD PTR [rbp-0x10],rax
  405748:	mov    rax,QWORD PTR [rbp-0x18]
  40574c:	add    rax,0x1
  405750:	movzx  eax,BYTE PTR [rax]
  405753:	movsx  rax,al
  405757:	shl    rax,0x30
  40575b:	or     QWORD PTR [rbp-0x10],rax
  40575f:	mov    rax,QWORD PTR [rbp-0x18]
  405763:	movzx  eax,BYTE PTR [rax]
  405766:	movsx  rax,al
  40576a:	shl    rax,0x38
  40576e:	or     QWORD PTR [rbp-0x10],rax
  405772:	nop
  405773:	mov    rax,QWORD PTR [rbp-0x10]
  405777:	pop    rbp
  405778:	ret    
  405779:	push   rbp
  40577a:	mov    rbp,rsp
  40577d:	sub    rsp,0x20
  405781:	mov    QWORD PTR [rbp-0x18],rdi
  405785:	mov    QWORD PTR [rbp-0x20],rsi
  405789:	mov    rdx,QWORD PTR [rbp-0x20]
  40578d:	mov    rax,QWORD PTR [rbp-0x18]
  405791:	sub    rdx,rax
  405794:	mov    rax,rdx
  405797:	mov    QWORD PTR [rbp-0x8],rax
  40579b:	cmp    QWORD PTR [rbp-0x8],0x7
  4057a0:	jbe    4057ae <_start@@Base+0x64e>
  4057a2:	mov    rax,QWORD PTR [rbp-0x18]
  4057a6:	mov    rax,QWORD PTR [rax]
  4057a9:	bswap  rax
  4057ac:	jmp    4057c1 <_start@@Base+0x661>
  4057ae:	mov    rdx,QWORD PTR [rbp-0x20]
  4057b2:	mov    rax,QWORD PTR [rbp-0x18]
  4057b6:	mov    rsi,rdx
  4057b9:	mov    rdi,rax
  4057bc:	call   40565d <_start@@Base+0x4fd>
  4057c1:	leave  
  4057c2:	ret    
  4057c3:	push   rbp
  4057c4:	mov    rbp,rsp
  4057c7:	mov    QWORD PTR [rbp-0x18],rdi
  4057cb:	mov    QWORD PTR [rbp-0x20],rsi
  4057cf:	mov    QWORD PTR [rbp-0x28],rdx
  4057d3:	mov    DWORD PTR [rbp-0x2c],ecx
  4057d6:	mov    rax,QWORD PTR [rbp-0x20]
  4057da:	mov    QWORD PTR [rbp-0x8],rax
  4057de:	mov    rdx,QWORD PTR [rbp-0x28]
  4057e2:	mov    rax,QWORD PTR [rbp-0x20]
  4057e6:	sub    rdx,rax
  4057e9:	mov    eax,DWORD PTR [rbp-0x2c]
  4057ec:	cdqe   
  4057ee:	cmp    rdx,rax
  4057f1:	jg     4057f9 <_start@@Base+0x699>
  4057f3:	mov    rax,QWORD PTR [rbp-0x8]
  4057f7:	jmp    405823 <_start@@Base+0x6c3>
  4057f9:	mov    eax,DWORD PTR [rbp-0x2c]
  4057fc:	movsxd rdx,eax
  4057ff:	mov    rax,QWORD PTR [rbp-0x20]
  405803:	add    rax,rdx
  405806:	movzx  eax,BYTE PTR [rax]
  405809:	cmp    al,0x2e
  40580b:	je     405813 <_start@@Base+0x6b3>
  40580d:	mov    rax,QWORD PTR [rbp-0x8]
  405811:	jmp    405823 <_start@@Base+0x6c3>
  405813:	mov    eax,DWORD PTR [rbp-0x2c]
  405816:	cdqe   
  405818:	lea    rdx,[rax+0x1]
  40581c:	mov    rax,QWORD PTR [rbp-0x20]
  405820:	add    rax,rdx
  405823:	pop    rbp
  405824:	ret    
  405825:	push   rbp
  405826:	mov    rbp,rsp
  405829:	sub    rsp,0x20
  40582d:	mov    QWORD PTR [rbp-0x8],rdi
  405831:	mov    QWORD PTR [rbp-0x10],rsi
  405835:	mov    QWORD PTR [rbp-0x18],rdx
  405839:	mov    rdx,QWORD PTR [rbp-0x18]
  40583d:	mov    rcx,QWORD PTR [rbp-0x10]
  405841:	mov    rax,QWORD PTR [rbp-0x8]
  405845:	mov    rsi,rcx
  405848:	mov    rdi,rax
  40584b:	call   4055e5 <_start@@Base+0x485>
  405850:	mov    QWORD PTR [rbp-0x10],rax
  405854:	mov    rax,QWORD PTR [rbp-0x8]
  405858:	mov    eax,DWORD PTR [rax+0x14]
  40585b:	test   eax,eax
  40585d:	jne    40587a <_start@@Base+0x71a>
  40585f:	mov    rdx,QWORD PTR [rbp-0x18]
  405863:	mov    rcx,QWORD PTR [rbp-0x10]
  405867:	mov    rax,QWORD PTR [rbp-0x8]
  40586b:	mov    rsi,rcx
  40586e:	mov    rdi,rax
  405871:	call   40556f <_start@@Base+0x40f>
  405876:	mov    QWORD PTR [rbp-0x10],rax
  40587a:	mov    rax,QWORD PTR [rbp-0x10]
  40587e:	leave  
  40587f:	ret    
  405880:	push   rbp
  405881:	mov    rbp,rsp
  405884:	sub    rsp,0x20
  405888:	mov    QWORD PTR [rbp-0x8],rdi
  40588c:	mov    QWORD PTR [rbp-0x10],rsi
  405890:	mov    QWORD PTR [rbp-0x18],rdx
  405894:	mov    QWORD PTR [rbp-0x20],rcx
  405898:	mov    rax,QWORD PTR [rbp-0x10]
  40589c:	cmp    rax,QWORD PTR [rbp-0x18]
  4058a0:	je     4058ad <_start@@Base+0x74d>
  4058a2:	mov    rax,QWORD PTR [rbp-0x10]
  4058a6:	movzx  eax,BYTE PTR [rax]
  4058a9:	cmp    al,0x7b
  4058ab:	je     4058d2 <_start@@Base+0x772>
  4058ad:	mov    rax,QWORD PTR [rbp-0x20]
  4058b1:	mov    DWORD PTR [rax],0x0
  4058b7:	mov    rdx,QWORD PTR [rbp-0x18]
  4058bb:	mov    rsi,QWORD PTR [rbp-0x10]
  4058bf:	mov    rax,QWORD PTR [rbp-0x8]
  4058c3:	mov    ecx,0x15
  4058c8:	mov    rdi,rax
  4058cb:	call   42665a <flatcc_json_parser_set_error@@Base>
  4058d0:	jmp    40593b <_start@@Base+0x7db>
  4058d2:	mov    rax,QWORD PTR [rbp-0x10]
  4058d6:	lea    rcx,[rax+0x1]
  4058da:	mov    rdx,QWORD PTR [rbp-0x18]
  4058de:	mov    rax,QWORD PTR [rbp-0x8]
  4058e2:	mov    rsi,rcx
  4058e5:	mov    rdi,rax
  4058e8:	call   40556f <_start@@Base+0x40f>
  4058ed:	mov    QWORD PTR [rbp-0x10],rax
  4058f1:	mov    rax,QWORD PTR [rbp-0x10]
  4058f5:	cmp    rax,QWORD PTR [rbp-0x18]
  4058f9:	je     40592d <_start@@Base+0x7cd>
  4058fb:	mov    rax,QWORD PTR [rbp-0x10]
  4058ff:	movzx  eax,BYTE PTR [rax]
  405902:	cmp    al,0x7d
  405904:	jne    40592d <_start@@Base+0x7cd>
  405906:	mov    rax,QWORD PTR [rbp-0x20]
  40590a:	mov    DWORD PTR [rax],0x0
  405910:	mov    rax,QWORD PTR [rbp-0x10]
  405914:	lea    rcx,[rax+0x1]
  405918:	mov    rdx,QWORD PTR [rbp-0x18]
  40591c:	mov    rax,QWORD PTR [rbp-0x8]
  405920:	mov    rsi,rcx
  405923:	mov    rdi,rax
  405926:	call   40556f <_start@@Base+0x40f>
  40592b:	jmp    40593b <_start@@Base+0x7db>
  40592d:	mov    rax,QWORD PTR [rbp-0x20]
  405931:	mov    DWORD PTR [rax],0x1
  405937:	mov    rax,QWORD PTR [rbp-0x10]
  40593b:	leave  
  40593c:	ret    
  40593d:	push   rbp
  40593e:	mov    rbp,rsp
  405941:	sub    rsp,0x20
  405945:	mov    QWORD PTR [rbp-0x8],rdi
  405949:	mov    QWORD PTR [rbp-0x10],rsi
  40594d:	mov    QWORD PTR [rbp-0x18],rdx
  405951:	mov    QWORD PTR [rbp-0x20],rcx
  405955:	mov    rdx,QWORD PTR [rbp-0x18]
  405959:	mov    rcx,QWORD PTR [rbp-0x10]
  40595d:	mov    rax,QWORD PTR [rbp-0x8]
  405961:	mov    rsi,rcx
  405964:	mov    rdi,rax
  405967:	call   40556f <_start@@Base+0x40f>
  40596c:	mov    QWORD PTR [rbp-0x10],rax
  405970:	mov    rax,QWORD PTR [rbp-0x10]
  405974:	cmp    rax,QWORD PTR [rbp-0x18]
  405978:	jne    40598d <_start@@Base+0x82d>
  40597a:	mov    rax,QWORD PTR [rbp-0x20]
  40597e:	mov    DWORD PTR [rax],0x0
  405984:	mov    rax,QWORD PTR [rbp-0x10]
  405988:	jmp    405a79 <_start@@Base+0x919>
  40598d:	mov    rax,QWORD PTR [rbp-0x10]
  405991:	movzx  eax,BYTE PTR [rax]
  405994:	cmp    al,0x2c
  405996:	je     4059eb <_start@@Base+0x88b>
  405998:	mov    rax,QWORD PTR [rbp-0x20]
  40599c:	mov    DWORD PTR [rax],0x0
  4059a2:	mov    rax,QWORD PTR [rbp-0x10]
  4059a6:	movzx  eax,BYTE PTR [rax]
  4059a9:	cmp    al,0x7d
  4059ab:	je     4059cb <_start@@Base+0x86b>
  4059ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4059b1:	mov    rsi,QWORD PTR [rbp-0x10]
  4059b5:	mov    rax,QWORD PTR [rbp-0x8]
  4059b9:	mov    ecx,0xa
  4059be:	mov    rdi,rax
  4059c1:	call   42665a <flatcc_json_parser_set_error@@Base>
  4059c6:	jmp    405a79 <_start@@Base+0x919>
  4059cb:	mov    rax,QWORD PTR [rbp-0x10]
  4059cf:	lea    rcx,[rax+0x1]
  4059d3:	mov    rdx,QWORD PTR [rbp-0x18]
  4059d7:	mov    rax,QWORD PTR [rbp-0x8]
  4059db:	mov    rsi,rcx
  4059de:	mov    rdi,rax
  4059e1:	call   40556f <_start@@Base+0x40f>
  4059e6:	jmp    405a79 <_start@@Base+0x919>
  4059eb:	mov    rax,QWORD PTR [rbp-0x10]
  4059ef:	lea    rcx,[rax+0x1]
  4059f3:	mov    rdx,QWORD PTR [rbp-0x18]
  4059f7:	mov    rax,QWORD PTR [rbp-0x8]
  4059fb:	mov    rsi,rcx
  4059fe:	mov    rdi,rax
  405a01:	call   40556f <_start@@Base+0x40f>
  405a06:	mov    QWORD PTR [rbp-0x10],rax
  405a0a:	mov    rax,QWORD PTR [rbp-0x10]
  405a0e:	cmp    rax,QWORD PTR [rbp-0x18]
  405a12:	jne    405a39 <_start@@Base+0x8d9>
  405a14:	mov    rax,QWORD PTR [rbp-0x20]
  405a18:	mov    DWORD PTR [rax],0x0
  405a1e:	mov    rdx,QWORD PTR [rbp-0x18]
  405a22:	mov    rsi,QWORD PTR [rbp-0x10]
  405a26:	mov    rax,QWORD PTR [rbp-0x8]
  405a2a:	mov    ecx,0xa
  405a2f:	mov    rdi,rax
  405a32:	call   42665a <flatcc_json_parser_set_error@@Base>
  405a37:	jmp    405a79 <_start@@Base+0x919>
  405a39:	mov    rax,QWORD PTR [rbp-0x10]
  405a3d:	movzx  eax,BYTE PTR [rax]
  405a40:	cmp    al,0x7d
  405a42:	jne    405a6b <_start@@Base+0x90b>
  405a44:	mov    rax,QWORD PTR [rbp-0x20]
  405a48:	mov    DWORD PTR [rax],0x0
  405a4e:	mov    rax,QWORD PTR [rbp-0x10]
  405a52:	lea    rcx,[rax+0x1]
  405a56:	mov    rdx,QWORD PTR [rbp-0x18]
  405a5a:	mov    rax,QWORD PTR [rbp-0x8]
  405a5e:	mov    rsi,rcx
  405a61:	mov    rdi,rax
  405a64:	call   40556f <_start@@Base+0x40f>
  405a69:	jmp    405a79 <_start@@Base+0x919>
  405a6b:	mov    rax,QWORD PTR [rbp-0x20]
  405a6f:	mov    DWORD PTR [rax],0x1
  405a75:	mov    rax,QWORD PTR [rbp-0x10]
  405a79:	leave  
  405a7a:	ret    
  405a7b:	push   rbp
  405a7c:	mov    rbp,rsp
  405a7f:	sub    rsp,0x20
  405a83:	mov    QWORD PTR [rbp-0x8],rdi
  405a87:	mov    QWORD PTR [rbp-0x10],rsi
  405a8b:	mov    QWORD PTR [rbp-0x18],rdx
  405a8f:	mov    QWORD PTR [rbp-0x20],rcx
  405a93:	mov    rax,QWORD PTR [rbp-0x10]
  405a97:	cmp    rax,QWORD PTR [rbp-0x18]
  405a9b:	je     405aa8 <_start@@Base+0x948>
  405a9d:	mov    rax,QWORD PTR [rbp-0x10]
  405aa1:	movzx  eax,BYTE PTR [rax]
  405aa4:	cmp    al,0x5b
  405aa6:	je     405acd <_start@@Base+0x96d>
  405aa8:	mov    rax,QWORD PTR [rbp-0x20]
  405aac:	mov    DWORD PTR [rax],0x0
  405ab2:	mov    rdx,QWORD PTR [rbp-0x18]
  405ab6:	mov    rsi,QWORD PTR [rbp-0x10]
  405aba:	mov    rax,QWORD PTR [rbp-0x8]
  405abe:	mov    ecx,0x16
  405ac3:	mov    rdi,rax
  405ac6:	call   42665a <flatcc_json_parser_set_error@@Base>
  405acb:	jmp    405b36 <_start@@Base+0x9d6>
  405acd:	mov    rax,QWORD PTR [rbp-0x10]
  405ad1:	lea    rcx,[rax+0x1]
  405ad5:	mov    rdx,QWORD PTR [rbp-0x18]
  405ad9:	mov    rax,QWORD PTR [rbp-0x8]
  405add:	mov    rsi,rcx
  405ae0:	mov    rdi,rax
  405ae3:	call   40556f <_start@@Base+0x40f>
  405ae8:	mov    QWORD PTR [rbp-0x10],rax
  405aec:	mov    rax,QWORD PTR [rbp-0x10]
  405af0:	cmp    rax,QWORD PTR [rbp-0x18]
  405af4:	je     405b28 <_start@@Base+0x9c8>
  405af6:	mov    rax,QWORD PTR [rbp-0x10]
  405afa:	movzx  eax,BYTE PTR [rax]
  405afd:	cmp    al,0x5d
  405aff:	jne    405b28 <_start@@Base+0x9c8>
  405b01:	mov    rax,QWORD PTR [rbp-0x20]
  405b05:	mov    DWORD PTR [rax],0x0
  405b0b:	mov    rax,QWORD PTR [rbp-0x10]
  405b0f:	lea    rcx,[rax+0x1]
  405b13:	mov    rdx,QWORD PTR [rbp-0x18]
  405b17:	mov    rax,QWORD PTR [rbp-0x8]
  405b1b:	mov    rsi,rcx
  405b1e:	mov    rdi,rax
  405b21:	call   40556f <_start@@Base+0x40f>
  405b26:	jmp    405b36 <_start@@Base+0x9d6>
  405b28:	mov    rax,QWORD PTR [rbp-0x20]
  405b2c:	mov    DWORD PTR [rax],0x1
  405b32:	mov    rax,QWORD PTR [rbp-0x10]
  405b36:	leave  
  405b37:	ret    
  405b38:	push   rbp
  405b39:	mov    rbp,rsp
  405b3c:	sub    rsp,0x20
  405b40:	mov    QWORD PTR [rbp-0x8],rdi
  405b44:	mov    QWORD PTR [rbp-0x10],rsi
  405b48:	mov    QWORD PTR [rbp-0x18],rdx
  405b4c:	mov    QWORD PTR [rbp-0x20],rcx
  405b50:	mov    rdx,QWORD PTR [rbp-0x18]
  405b54:	mov    rcx,QWORD PTR [rbp-0x10]
  405b58:	mov    rax,QWORD PTR [rbp-0x8]
  405b5c:	mov    rsi,rcx
  405b5f:	mov    rdi,rax
  405b62:	call   40556f <_start@@Base+0x40f>
  405b67:	mov    QWORD PTR [rbp-0x10],rax
  405b6b:	mov    rax,QWORD PTR [rbp-0x10]
  405b6f:	cmp    rax,QWORD PTR [rbp-0x18]
  405b73:	jne    405b88 <_start@@Base+0xa28>
  405b75:	mov    rax,QWORD PTR [rbp-0x20]
  405b79:	mov    DWORD PTR [rax],0x0
  405b7f:	mov    rax,QWORD PTR [rbp-0x10]
  405b83:	jmp    405c74 <_start@@Base+0xb14>
  405b88:	mov    rax,QWORD PTR [rbp-0x10]
  405b8c:	movzx  eax,BYTE PTR [rax]
  405b8f:	cmp    al,0x2c
  405b91:	je     405be6 <_start@@Base+0xa86>
  405b93:	mov    rax,QWORD PTR [rbp-0x20]
  405b97:	mov    DWORD PTR [rax],0x0
  405b9d:	mov    rax,QWORD PTR [rbp-0x10]
  405ba1:	movzx  eax,BYTE PTR [rax]
  405ba4:	cmp    al,0x5d
  405ba6:	je     405bc6 <_start@@Base+0xa66>
  405ba8:	mov    rdx,QWORD PTR [rbp-0x18]
  405bac:	mov    rsi,QWORD PTR [rbp-0x10]
  405bb0:	mov    rax,QWORD PTR [rbp-0x8]
  405bb4:	mov    ecx,0x9
  405bb9:	mov    rdi,rax
  405bbc:	call   42665a <flatcc_json_parser_set_error@@Base>
  405bc1:	jmp    405c74 <_start@@Base+0xb14>
  405bc6:	mov    rax,QWORD PTR [rbp-0x10]
  405bca:	lea    rcx,[rax+0x1]
  405bce:	mov    rdx,QWORD PTR [rbp-0x18]
  405bd2:	mov    rax,QWORD PTR [rbp-0x8]
  405bd6:	mov    rsi,rcx
  405bd9:	mov    rdi,rax
  405bdc:	call   40556f <_start@@Base+0x40f>
  405be1:	jmp    405c74 <_start@@Base+0xb14>
  405be6:	mov    rax,QWORD PTR [rbp-0x10]
  405bea:	lea    rcx,[rax+0x1]
  405bee:	mov    rdx,QWORD PTR [rbp-0x18]
  405bf2:	mov    rax,QWORD PTR [rbp-0x8]
  405bf6:	mov    rsi,rcx
  405bf9:	mov    rdi,rax
  405bfc:	call   40556f <_start@@Base+0x40f>
  405c01:	mov    QWORD PTR [rbp-0x10],rax
  405c05:	mov    rax,QWORD PTR [rbp-0x10]
  405c09:	cmp    rax,QWORD PTR [rbp-0x18]
  405c0d:	jne    405c34 <_start@@Base+0xad4>
  405c0f:	mov    rax,QWORD PTR [rbp-0x20]
  405c13:	mov    DWORD PTR [rax],0x0
  405c19:	mov    rdx,QWORD PTR [rbp-0x18]
  405c1d:	mov    rsi,QWORD PTR [rbp-0x10]
  405c21:	mov    rax,QWORD PTR [rbp-0x8]
  405c25:	mov    ecx,0x9
  405c2a:	mov    rdi,rax
  405c2d:	call   42665a <flatcc_json_parser_set_error@@Base>
  405c32:	jmp    405c74 <_start@@Base+0xb14>
  405c34:	mov    rax,QWORD PTR [rbp-0x10]
  405c38:	movzx  eax,BYTE PTR [rax]
  405c3b:	cmp    al,0x5d
  405c3d:	jne    405c66 <_start@@Base+0xb06>
  405c3f:	mov    rax,QWORD PTR [rbp-0x20]
  405c43:	mov    DWORD PTR [rax],0x0
  405c49:	mov    rax,QWORD PTR [rbp-0x10]
  405c4d:	lea    rcx,[rax+0x1]
  405c51:	mov    rdx,QWORD PTR [rbp-0x18]
  405c55:	mov    rax,QWORD PTR [rbp-0x8]
  405c59:	mov    rsi,rcx
  405c5c:	mov    rdi,rax
  405c5f:	call   40556f <_start@@Base+0x40f>
  405c64:	jmp    405c74 <_start@@Base+0xb14>
  405c66:	mov    rax,QWORD PTR [rbp-0x20]
  405c6a:	mov    DWORD PTR [rax],0x1
  405c70:	mov    rax,QWORD PTR [rbp-0x10]
  405c74:	leave  
  405c75:	ret    
  405c76:	push   rbp
  405c77:	mov    rbp,rsp
  405c7a:	sub    rsp,0x30
  405c7e:	mov    QWORD PTR [rbp-0x18],rdi
  405c82:	mov    QWORD PTR [rbp-0x20],rsi
  405c86:	mov    QWORD PTR [rbp-0x28],rdx
  405c8a:	mov    DWORD PTR [rbp-0x2c],ecx
  405c8d:	mov    rax,QWORD PTR [rbp-0x20]
  405c91:	mov    QWORD PTR [rbp-0x8],rax
  405c95:	mov    rdx,QWORD PTR [rbp-0x28]
  405c99:	mov    rax,QWORD PTR [rbp-0x20]
  405c9d:	sub    rdx,rax
  405ca0:	mov    eax,DWORD PTR [rbp-0x2c]
  405ca3:	cdqe   
  405ca5:	cmp    rdx,rax
  405ca8:	jg     405cb3 <_start@@Base+0xb53>
  405caa:	mov    rax,QWORD PTR [rbp-0x8]
  405cae:	jmp    405d93 <_start@@Base+0xc33>
  405cb3:	mov    rax,QWORD PTR [rbp-0x18]
  405cb7:	mov    eax,DWORD PTR [rax+0x14]
  405cba:	test   eax,eax
  405cbc:	je     405d05 <_start@@Base+0xba5>
  405cbe:	mov    eax,DWORD PTR [rbp-0x2c]
  405cc1:	movsxd rdx,eax
  405cc4:	mov    rax,QWORD PTR [rbp-0x20]
  405cc8:	add    rax,rdx
  405ccb:	movzx  eax,BYTE PTR [rax]
  405cce:	cmp    al,0x20
  405cd0:	jle    405cef <_start@@Base+0xb8f>
  405cd2:	mov    eax,DWORD PTR [rbp-0x2c]
  405cd5:	movsxd rdx,eax
  405cd8:	mov    rax,QWORD PTR [rbp-0x20]
  405cdc:	add    rax,rdx
  405cdf:	movzx  eax,BYTE PTR [rax]
  405ce2:	cmp    al,0x3a
  405ce4:	je     405cef <_start@@Base+0xb8f>
  405ce6:	mov    rax,QWORD PTR [rbp-0x8]
  405cea:	jmp    405d93 <_start@@Base+0xc33>
  405cef:	mov    eax,DWORD PTR [rbp-0x2c]
  405cf2:	cdqe   
  405cf4:	add    QWORD PTR [rbp-0x20],rax
  405cf8:	mov    rax,QWORD PTR [rbp-0x18]
  405cfc:	mov    DWORD PTR [rax+0x14],0x0
  405d03:	jmp    405d2c <_start@@Base+0xbcc>
  405d05:	mov    eax,DWORD PTR [rbp-0x2c]
  405d08:	movsxd rdx,eax
  405d0b:	mov    rax,QWORD PTR [rbp-0x20]
  405d0f:	add    rax,rdx
  405d12:	movzx  eax,BYTE PTR [rax]
  405d15:	cmp    al,0x22
  405d17:	je     405d1f <_start@@Base+0xbbf>
  405d19:	mov    rax,QWORD PTR [rbp-0x8]
  405d1d:	jmp    405d93 <_start@@Base+0xc33>
  405d1f:	mov    eax,DWORD PTR [rbp-0x2c]
  405d22:	cdqe   
  405d24:	add    rax,0x1
  405d28:	add    QWORD PTR [rbp-0x20],rax
  405d2c:	mov    rdx,QWORD PTR [rbp-0x28]
  405d30:	mov    rcx,QWORD PTR [rbp-0x20]
  405d34:	mov    rax,QWORD PTR [rbp-0x18]
  405d38:	mov    rsi,rcx
  405d3b:	mov    rdi,rax
  405d3e:	call   40556f <_start@@Base+0x40f>
  405d43:	mov    QWORD PTR [rbp-0x20],rax
  405d47:	mov    rax,QWORD PTR [rbp-0x20]
  405d4b:	cmp    rax,QWORD PTR [rbp-0x28]
  405d4f:	je     405d7a <_start@@Base+0xc1a>
  405d51:	mov    rax,QWORD PTR [rbp-0x20]
  405d55:	movzx  eax,BYTE PTR [rax]
  405d58:	cmp    al,0x3a
  405d5a:	jne    405d7a <_start@@Base+0xc1a>
  405d5c:	add    QWORD PTR [rbp-0x20],0x1
  405d61:	mov    rdx,QWORD PTR [rbp-0x28]
  405d65:	mov    rcx,QWORD PTR [rbp-0x20]
  405d69:	mov    rax,QWORD PTR [rbp-0x18]
  405d6d:	mov    rsi,rcx
  405d70:	mov    rdi,rax
  405d73:	call   40556f <_start@@Base+0x40f>
  405d78:	jmp    405d93 <_start@@Base+0xc33>
  405d7a:	mov    rdx,QWORD PTR [rbp-0x28]
  405d7e:	mov    rsi,QWORD PTR [rbp-0x20]
  405d82:	mov    rax,QWORD PTR [rbp-0x18]
  405d86:	mov    ecx,0x4
  405d8b:	mov    rdi,rax
  405d8e:	call   42665a <flatcc_json_parser_set_error@@Base>
  405d93:	leave  
  405d94:	ret    
  405d95:	push   rbp
  405d96:	mov    rbp,rsp
  405d99:	sub    rsp,0x30
  405d9d:	mov    QWORD PTR [rbp-0x8],rdi
  405da1:	mov    QWORD PTR [rbp-0x10],rsi
  405da5:	mov    QWORD PTR [rbp-0x18],rdx
  405da9:	mov    DWORD PTR [rbp-0x1c],ecx
  405dac:	mov    QWORD PTR [rbp-0x28],r8
  405db0:	mov    QWORD PTR [rbp-0x30],r9
  405db4:	cmp    DWORD PTR [rbp-0x1c],0x0
  405db8:	je     405dd5 <_start@@Base+0xc75>
  405dba:	mov    rdx,QWORD PTR [rbp-0x18]
  405dbe:	mov    rsi,QWORD PTR [rbp-0x10]
  405dc2:	mov    rax,QWORD PTR [rbp-0x8]
  405dc6:	mov    ecx,0x8
  405dcb:	mov    rdi,rax
  405dce:	call   42665a <flatcc_json_parser_set_error@@Base>
  405dd3:	jmp    405de4 <_start@@Base+0xc84>
  405dd5:	mov    rax,QWORD PTR [rbp-0x30]
  405dd9:	mov    rdx,QWORD PTR [rbp-0x28]
  405ddd:	mov    QWORD PTR [rax],rdx
  405de0:	mov    rax,QWORD PTR [rbp-0x10]
  405de4:	leave  
  405de5:	ret    
  405de6:	push   rbp
  405de7:	mov    rbp,rsp
  405dea:	sub    rsp,0x30
  405dee:	mov    QWORD PTR [rbp-0x8],rdi
  405df2:	mov    QWORD PTR [rbp-0x10],rsi
  405df6:	mov    QWORD PTR [rbp-0x18],rdx
  405dfa:	mov    DWORD PTR [rbp-0x1c],ecx
  405dfd:	mov    QWORD PTR [rbp-0x28],r8
  405e01:	mov    QWORD PTR [rbp-0x30],r9
  405e05:	cmp    DWORD PTR [rbp-0x1c],0x0
  405e09:	je     405e26 <_start@@Base+0xcc6>
  405e0b:	mov    rdx,QWORD PTR [rbp-0x18]
  405e0f:	mov    rsi,QWORD PTR [rbp-0x10]
  405e13:	mov    rax,QWORD PTR [rbp-0x8]
  405e17:	mov    ecx,0x8
  405e1c:	mov    rdi,rax
  405e1f:	call   42665a <flatcc_json_parser_set_error@@Base>
  405e24:	jmp    405e3a <_start@@Base+0xcda>
  405e26:	cmp    QWORD PTR [rbp-0x28],0x0
  405e2b:	setne  al
  405e2e:	mov    edx,eax
  405e30:	mov    rax,QWORD PTR [rbp-0x30]
  405e34:	mov    BYTE PTR [rax],dl
  405e36:	mov    rax,QWORD PTR [rbp-0x10]
  405e3a:	leave  
  405e3b:	ret    
  405e3c:	push   rbp
  405e3d:	mov    rbp,rsp
  405e40:	sub    rsp,0x30
  405e44:	mov    QWORD PTR [rbp-0x8],rdi
  405e48:	mov    QWORD PTR [rbp-0x10],rsi
  405e4c:	mov    QWORD PTR [rbp-0x18],rdx
  405e50:	mov    DWORD PTR [rbp-0x1c],ecx
  405e53:	mov    QWORD PTR [rbp-0x28],r8
  405e57:	mov    QWORD PTR [rbp-0x30],r9
  405e5b:	cmp    DWORD PTR [rbp-0x1c],0x0
  405e5f:	je     405e7c <_start@@Base+0xd1c>
  405e61:	mov    rdx,QWORD PTR [rbp-0x18]
  405e65:	mov    rsi,QWORD PTR [rbp-0x10]
  405e69:	mov    rax,QWORD PTR [rbp-0x8]
  405e6d:	mov    ecx,0x8
  405e72:	mov    rdi,rax
  405e75:	call   42665a <flatcc_json_parser_set_error@@Base>
  405e7a:	jmp    405eb2 <_start@@Base+0xd52>
  405e7c:	mov    eax,0xffffffff
  405e81:	cmp    QWORD PTR [rbp-0x28],rax
  405e85:	jbe    405ea2 <_start@@Base+0xd42>
  405e87:	mov    rdx,QWORD PTR [rbp-0x18]
  405e8b:	mov    rsi,QWORD PTR [rbp-0x10]
  405e8f:	mov    rax,QWORD PTR [rbp-0x8]
  405e93:	mov    ecx,0x7
  405e98:	mov    rdi,rax
  405e9b:	call   42665a <flatcc_json_parser_set_error@@Base>
  405ea0:	jmp    405eb2 <_start@@Base+0xd52>
  405ea2:	mov    rax,QWORD PTR [rbp-0x28]
  405ea6:	mov    edx,eax
  405ea8:	mov    rax,QWORD PTR [rbp-0x30]
  405eac:	mov    DWORD PTR [rax],edx
  405eae:	mov    rax,QWORD PTR [rbp-0x10]
  405eb2:	leave  
  405eb3:	ret    
  405eb4:	push   rbp
  405eb5:	mov    rbp,rsp
  405eb8:	sub    rsp,0x30
  405ebc:	mov    QWORD PTR [rbp-0x8],rdi
  405ec0:	mov    QWORD PTR [rbp-0x10],rsi
  405ec4:	mov    QWORD PTR [rbp-0x18],rdx
  405ec8:	mov    DWORD PTR [rbp-0x1c],ecx
  405ecb:	mov    QWORD PTR [rbp-0x28],r8
  405ecf:	mov    QWORD PTR [rbp-0x30],r9
  405ed3:	cmp    DWORD PTR [rbp-0x1c],0x0
  405ed7:	je     405ef4 <_start@@Base+0xd94>
  405ed9:	mov    rdx,QWORD PTR [rbp-0x18]
  405edd:	mov    rsi,QWORD PTR [rbp-0x10]
  405ee1:	mov    rax,QWORD PTR [rbp-0x8]
  405ee5:	mov    ecx,0x8
  405eea:	mov    rdi,rax
  405eed:	call   42665a <flatcc_json_parser_set_error@@Base>
  405ef2:	jmp    405f2a <_start@@Base+0xdca>
  405ef4:	cmp    QWORD PTR [rbp-0x28],0xffff
  405efc:	jbe    405f19 <_start@@Base+0xdb9>
  405efe:	mov    rdx,QWORD PTR [rbp-0x18]
  405f02:	mov    rsi,QWORD PTR [rbp-0x10]
  405f06:	mov    rax,QWORD PTR [rbp-0x8]
  405f0a:	mov    ecx,0x7
  405f0f:	mov    rdi,rax
  405f12:	call   42665a <flatcc_json_parser_set_error@@Base>
  405f17:	jmp    405f2a <_start@@Base+0xdca>
  405f19:	mov    rax,QWORD PTR [rbp-0x28]
  405f1d:	mov    edx,eax
  405f1f:	mov    rax,QWORD PTR [rbp-0x30]
  405f23:	mov    WORD PTR [rax],dx
  405f26:	mov    rax,QWORD PTR [rbp-0x10]
  405f2a:	leave  
  405f2b:	ret    
  405f2c:	push   rbp
  405f2d:	mov    rbp,rsp
  405f30:	sub    rsp,0x30
  405f34:	mov    QWORD PTR [rbp-0x8],rdi
  405f38:	mov    QWORD PTR [rbp-0x10],rsi
  405f3c:	mov    QWORD PTR [rbp-0x18],rdx
  405f40:	mov    DWORD PTR [rbp-0x1c],ecx
  405f43:	mov    QWORD PTR [rbp-0x28],r8
  405f47:	mov    QWORD PTR [rbp-0x30],r9
  405f4b:	cmp    DWORD PTR [rbp-0x1c],0x0
  405f4f:	je     405f6c <_start@@Base+0xe0c>
  405f51:	mov    rdx,QWORD PTR [rbp-0x18]
  405f55:	mov    rsi,QWORD PTR [rbp-0x10]
  405f59:	mov    rax,QWORD PTR [rbp-0x8]
  405f5d:	mov    ecx,0x8
  405f62:	mov    rdi,rax
  405f65:	call   42665a <flatcc_json_parser_set_error@@Base>
  405f6a:	jmp    405fa1 <_start@@Base+0xe41>
  405f6c:	cmp    QWORD PTR [rbp-0x28],0xff
  405f74:	jbe    405f91 <_start@@Base+0xe31>
  405f76:	mov    rdx,QWORD PTR [rbp-0x18]
  405f7a:	mov    rsi,QWORD PTR [rbp-0x10]
  405f7e:	mov    rax,QWORD PTR [rbp-0x8]
  405f82:	mov    ecx,0x7
  405f87:	mov    rdi,rax
  405f8a:	call   42665a <flatcc_json_parser_set_error@@Base>
  405f8f:	jmp    405fa1 <_start@@Base+0xe41>
  405f91:	mov    rax,QWORD PTR [rbp-0x28]
  405f95:	mov    edx,eax
  405f97:	mov    rax,QWORD PTR [rbp-0x30]
  405f9b:	mov    BYTE PTR [rax],dl
  405f9d:	mov    rax,QWORD PTR [rbp-0x10]
  405fa1:	leave  
  405fa2:	ret    
  405fa3:	push   rbp
  405fa4:	mov    rbp,rsp
  405fa7:	sub    rsp,0x30
  405fab:	mov    QWORD PTR [rbp-0x8],rdi
  405faf:	mov    QWORD PTR [rbp-0x10],rsi
  405fb3:	mov    QWORD PTR [rbp-0x18],rdx
  405fb7:	mov    DWORD PTR [rbp-0x1c],ecx
  405fba:	mov    QWORD PTR [rbp-0x28],r8
  405fbe:	mov    QWORD PTR [rbp-0x30],r9
  405fc2:	cmp    DWORD PTR [rbp-0x1c],0x0
  405fc6:	je     406006 <_start@@Base+0xea6>
  405fc8:	movabs rax,0x8000000000000000
  405fd2:	cmp    QWORD PTR [rbp-0x28],rax
  405fd6:	jbe    405ff3 <_start@@Base+0xe93>
  405fd8:	mov    rdx,QWORD PTR [rbp-0x18]
  405fdc:	mov    rsi,QWORD PTR [rbp-0x10]
  405fe0:	mov    rax,QWORD PTR [rbp-0x8]
  405fe4:	mov    ecx,0x8
  405fe9:	mov    rdi,rax
  405fec:	call   42665a <flatcc_json_parser_set_error@@Base>
  405ff1:	jmp    406039 <_start@@Base+0xed9>
  405ff3:	mov    rax,QWORD PTR [rbp-0x28]
  405ff7:	neg    rax
  405ffa:	mov    rdx,rax
  405ffd:	mov    rax,QWORD PTR [rbp-0x30]
  406001:	mov    QWORD PTR [rax],rdx
  406004:	jmp    406035 <_start@@Base+0xed5>
  406006:	mov    rax,QWORD PTR [rbp-0x28]
  40600a:	test   rax,rax
  40600d:	jns    40602a <_start@@Base+0xeca>
  40600f:	mov    rdx,QWORD PTR [rbp-0x18]
  406013:	mov    rsi,QWORD PTR [rbp-0x10]
  406017:	mov    rax,QWORD PTR [rbp-0x8]
  40601b:	mov    ecx,0x7
  406020:	mov    rdi,rax
  406023:	call   42665a <flatcc_json_parser_set_error@@Base>
  406028:	jmp    406039 <_start@@Base+0xed9>
  40602a:	mov    rdx,QWORD PTR [rbp-0x28]
  40602e:	mov    rax,QWORD PTR [rbp-0x30]
  406032:	mov    QWORD PTR [rax],rdx
  406035:	mov    rax,QWORD PTR [rbp-0x10]
  406039:	leave  
  40603a:	ret    
  40603b:	push   rbp
  40603c:	mov    rbp,rsp
  40603f:	sub    rsp,0x30
  406043:	mov    QWORD PTR [rbp-0x8],rdi
  406047:	mov    QWORD PTR [rbp-0x10],rsi
  40604b:	mov    QWORD PTR [rbp-0x18],rdx
  40604f:	mov    DWORD PTR [rbp-0x1c],ecx
  406052:	mov    QWORD PTR [rbp-0x28],r8
  406056:	mov    QWORD PTR [rbp-0x30],r9
  40605a:	cmp    DWORD PTR [rbp-0x1c],0x0
  40605e:	je     406096 <_start@@Base+0xf36>
  406060:	mov    eax,0x80000000
  406065:	cmp    QWORD PTR [rbp-0x28],rax
  406069:	jbe    406086 <_start@@Base+0xf26>
  40606b:	mov    rdx,QWORD PTR [rbp-0x18]
  40606f:	mov    rsi,QWORD PTR [rbp-0x10]
  406073:	mov    rax,QWORD PTR [rbp-0x8]
  406077:	mov    ecx,0x8
  40607c:	mov    rdi,rax
  40607f:	call   42665a <flatcc_json_parser_set_error@@Base>
  406084:	jmp    4060cb <_start@@Base+0xf6b>
  406086:	mov    rax,QWORD PTR [rbp-0x28]
  40608a:	neg    eax
  40608c:	mov    edx,eax
  40608e:	mov    rax,QWORD PTR [rbp-0x30]
  406092:	mov    DWORD PTR [rax],edx
  406094:	jmp    4060c7 <_start@@Base+0xf67>
  406096:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  40609e:	jbe    4060bb <_start@@Base+0xf5b>
  4060a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4060a4:	mov    rsi,QWORD PTR [rbp-0x10]
  4060a8:	mov    rax,QWORD PTR [rbp-0x8]
  4060ac:	mov    ecx,0x7
  4060b1:	mov    rdi,rax
  4060b4:	call   42665a <flatcc_json_parser_set_error@@Base>
  4060b9:	jmp    4060cb <_start@@Base+0xf6b>
  4060bb:	mov    rax,QWORD PTR [rbp-0x28]
  4060bf:	mov    edx,eax
  4060c1:	mov    rax,QWORD PTR [rbp-0x30]
  4060c5:	mov    DWORD PTR [rax],edx
  4060c7:	mov    rax,QWORD PTR [rbp-0x10]
  4060cb:	leave  
  4060cc:	ret    
  4060cd:	push   rbp
  4060ce:	mov    rbp,rsp
  4060d1:	sub    rsp,0x30
  4060d5:	mov    QWORD PTR [rbp-0x8],rdi
  4060d9:	mov    QWORD PTR [rbp-0x10],rsi
  4060dd:	mov    QWORD PTR [rbp-0x18],rdx
  4060e1:	mov    DWORD PTR [rbp-0x1c],ecx
  4060e4:	mov    QWORD PTR [rbp-0x28],r8
  4060e8:	mov    QWORD PTR [rbp-0x30],r9
  4060ec:	cmp    DWORD PTR [rbp-0x1c],0x0
  4060f0:	je     406128 <_start@@Base+0xfc8>
  4060f2:	cmp    QWORD PTR [rbp-0x28],0x8000
  4060fa:	jbe    406117 <_start@@Base+0xfb7>
  4060fc:	mov    rdx,QWORD PTR [rbp-0x18]
  406100:	mov    rsi,QWORD PTR [rbp-0x10]
  406104:	mov    rax,QWORD PTR [rbp-0x8]
  406108:	mov    ecx,0x8
  40610d:	mov    rdi,rax
  406110:	call   42665a <flatcc_json_parser_set_error@@Base>
  406115:	jmp    40615e <_start@@Base+0xffe>
  406117:	mov    rax,QWORD PTR [rbp-0x28]
  40611b:	neg    eax
  40611d:	mov    edx,eax
  40611f:	mov    rax,QWORD PTR [rbp-0x30]
  406123:	mov    WORD PTR [rax],dx
  406126:	jmp    40615a <_start@@Base+0xffa>
  406128:	cmp    QWORD PTR [rbp-0x28],0x7fff
  406130:	jbe    40614d <_start@@Base+0xfed>
  406132:	mov    rdx,QWORD PTR [rbp-0x18]
  406136:	mov    rsi,QWORD PTR [rbp-0x10]
  40613a:	mov    rax,QWORD PTR [rbp-0x8]
  40613e:	mov    ecx,0x7
  406143:	mov    rdi,rax
  406146:	call   42665a <flatcc_json_parser_set_error@@Base>
  40614b:	jmp    40615e <_start@@Base+0xffe>
  40614d:	mov    rax,QWORD PTR [rbp-0x28]
  406151:	mov    edx,eax
  406153:	mov    rax,QWORD PTR [rbp-0x30]
  406157:	mov    WORD PTR [rax],dx
  40615a:	mov    rax,QWORD PTR [rbp-0x10]
  40615e:	leave  
  40615f:	ret    
  406160:	push   rbp
  406161:	mov    rbp,rsp
  406164:	sub    rsp,0x30
  406168:	mov    QWORD PTR [rbp-0x8],rdi
  40616c:	mov    QWORD PTR [rbp-0x10],rsi
  406170:	mov    QWORD PTR [rbp-0x18],rdx
  406174:	mov    DWORD PTR [rbp-0x1c],ecx
  406177:	mov    QWORD PTR [rbp-0x28],r8
  40617b:	mov    QWORD PTR [rbp-0x30],r9
  40617f:	cmp    DWORD PTR [rbp-0x1c],0x0
  406183:	je     4061ba <_start@@Base+0x105a>
  406185:	cmp    QWORD PTR [rbp-0x28],0x80
  40618d:	jbe    4061aa <_start@@Base+0x104a>
  40618f:	mov    rdx,QWORD PTR [rbp-0x18]
  406193:	mov    rsi,QWORD PTR [rbp-0x10]
  406197:	mov    rax,QWORD PTR [rbp-0x8]
  40619b:	mov    ecx,0x8
  4061a0:	mov    rdi,rax
  4061a3:	call   42665a <flatcc_json_parser_set_error@@Base>
  4061a8:	jmp    4061ec <_start@@Base+0x108c>
  4061aa:	mov    rax,QWORD PTR [rbp-0x28]
  4061ae:	neg    eax
  4061b0:	mov    edx,eax
  4061b2:	mov    rax,QWORD PTR [rbp-0x30]
  4061b6:	mov    BYTE PTR [rax],dl
  4061b8:	jmp    4061e8 <_start@@Base+0x1088>
  4061ba:	cmp    QWORD PTR [rbp-0x28],0x7f
  4061bf:	jbe    4061dc <_start@@Base+0x107c>
  4061c1:	mov    rdx,QWORD PTR [rbp-0x18]
  4061c5:	mov    rsi,QWORD PTR [rbp-0x10]
  4061c9:	mov    rax,QWORD PTR [rbp-0x8]
  4061cd:	mov    ecx,0x7
  4061d2:	mov    rdi,rax
  4061d5:	call   42665a <flatcc_json_parser_set_error@@Base>
  4061da:	jmp    4061ec <_start@@Base+0x108c>
  4061dc:	mov    rax,QWORD PTR [rbp-0x28]
  4061e0:	mov    edx,eax
  4061e2:	mov    rax,QWORD PTR [rbp-0x30]
  4061e6:	mov    BYTE PTR [rax],dl
  4061e8:	mov    rax,QWORD PTR [rbp-0x10]
  4061ec:	leave  
  4061ed:	ret    
  4061ee:	push   rbp
  4061ef:	mov    rbp,rsp
  4061f2:	mov    QWORD PTR [rbp-0x8],rdi
  4061f6:	mov    QWORD PTR [rbp-0x10],rsi
  4061fa:	mov    QWORD PTR [rbp-0x18],rdx
  4061fe:	mov    DWORD PTR [rbp-0x1c],ecx
  406201:	mov    QWORD PTR [rbp-0x28],r8
  406205:	mov    QWORD PTR [rbp-0x30],r9
  406209:	cmp    DWORD PTR [rbp-0x1c],0x0
  40620d:	je     40624a <_start@@Base+0x10ea>
  40620f:	mov    rax,QWORD PTR [rbp-0x28]
  406213:	test   rax,rax
  406216:	js     406223 <_start@@Base+0x10c3>
  406218:	vxorps xmm0,xmm0,xmm0
  40621c:	vcvtsi2ss xmm0,xmm0,rax
  406221:	jmp    40623c <_start@@Base+0x10dc>
  406223:	mov    rdx,rax
  406226:	shr    rdx,1
  406229:	and    eax,0x1
  40622c:	or     rdx,rax
  40622f:	vxorps xmm0,xmm0,xmm0
  406233:	vcvtsi2ss xmm0,xmm0,rdx
  406238:	vaddss xmm0,xmm0,xmm0
  40623c:	vmovss xmm1,DWORD PTR [rip+0x33cdc]        # 439f20 <_IO_stdin_used@@Base+0x3f20>
  406244:	vxorps xmm0,xmm0,xmm1
  406248:	jmp    406277 <_start@@Base+0x1117>
  40624a:	mov    rax,QWORD PTR [rbp-0x28]
  40624e:	test   rax,rax
  406251:	js     40625e <_start@@Base+0x10fe>
  406253:	vxorps xmm0,xmm0,xmm0
  406257:	vcvtsi2ss xmm0,xmm0,rax
  40625c:	jmp    406277 <_start@@Base+0x1117>
  40625e:	mov    rdx,rax
  406261:	shr    rdx,1
  406264:	and    eax,0x1
  406267:	or     rdx,rax
  40626a:	vxorps xmm0,xmm0,xmm0
  40626e:	vcvtsi2ss xmm0,xmm0,rdx
  406273:	vaddss xmm0,xmm0,xmm0
  406277:	mov    rax,QWORD PTR [rbp-0x30]
  40627b:	vmovss DWORD PTR [rax],xmm0
  40627f:	mov    rax,QWORD PTR [rbp-0x10]
  406283:	pop    rbp
  406284:	ret    
  406285:	push   rbp
  406286:	mov    rbp,rsp
  406289:	mov    QWORD PTR [rbp-0x8],rdi
  40628d:	mov    QWORD PTR [rbp-0x10],rsi
  406291:	mov    QWORD PTR [rbp-0x18],rdx
  406295:	mov    DWORD PTR [rbp-0x1c],ecx
  406298:	mov    QWORD PTR [rbp-0x28],r8
  40629c:	mov    QWORD PTR [rbp-0x30],r9
  4062a0:	cmp    DWORD PTR [rbp-0x1c],0x0
  4062a4:	je     4062e1 <_start@@Base+0x1181>
  4062a6:	mov    rax,QWORD PTR [rbp-0x28]
  4062aa:	test   rax,rax
  4062ad:	js     4062ba <_start@@Base+0x115a>
  4062af:	vxorpd xmm0,xmm0,xmm0
  4062b3:	vcvtsi2sd xmm0,xmm0,rax
  4062b8:	jmp    4062d3 <_start@@Base+0x1173>
  4062ba:	mov    rdx,rax
  4062bd:	shr    rdx,1
  4062c0:	and    eax,0x1
  4062c3:	or     rdx,rax
  4062c6:	vxorpd xmm0,xmm0,xmm0
  4062ca:	vcvtsi2sd xmm0,xmm0,rdx
  4062cf:	vaddsd xmm0,xmm0,xmm0
  4062d3:	vmovsd xmm1,QWORD PTR [rip+0x33c55]        # 439f30 <_IO_stdin_used@@Base+0x3f30>
  4062db:	vxorpd xmm0,xmm0,xmm1
  4062df:	jmp    40630e <_start@@Base+0x11ae>
  4062e1:	mov    rax,QWORD PTR [rbp-0x28]
  4062e5:	test   rax,rax
  4062e8:	js     4062f5 <_start@@Base+0x1195>
  4062ea:	vxorpd xmm0,xmm0,xmm0
  4062ee:	vcvtsi2sd xmm0,xmm0,rax
  4062f3:	jmp    40630e <_start@@Base+0x11ae>
  4062f5:	mov    rdx,rax
  4062f8:	shr    rdx,1
  4062fb:	and    eax,0x1
  4062fe:	or     rdx,rax
  406301:	vxorpd xmm0,xmm0,xmm0
  406305:	vcvtsi2sd xmm0,xmm0,rdx
  40630a:	vaddsd xmm0,xmm0,xmm0
  40630e:	mov    rax,QWORD PTR [rbp-0x30]
  406312:	vmovsd QWORD PTR [rax],xmm0
  406316:	mov    rax,QWORD PTR [rbp-0x10]
  40631a:	pop    rbp
  40631b:	ret    
  40631c:	push   rbp
  40631d:	mov    rbp,rsp
  406320:	sub    rsp,0x20
  406324:	mov    QWORD PTR [rbp-0x8],rdi
  406328:	mov    QWORD PTR [rbp-0x10],rsi
  40632c:	mov    QWORD PTR [rbp-0x18],rdx
  406330:	mov    rdx,QWORD PTR [rbp-0x18]
  406334:	mov    rax,QWORD PTR [rbp-0x10]
  406338:	sub    rdx,rax
  40633b:	mov    rax,rdx
  40633e:	cmp    rax,0x3
  406342:	jle    40636a <_start@@Base+0x120a>
  406344:	mov    rax,QWORD PTR [rbp-0x10]
  406348:	mov    edx,0x4
  40634d:	lea    rsi,[rip+0x2fce4]        # 436038 <_IO_stdin_used@@Base+0x38>
  406354:	mov    rdi,rax
  406357:	call   4050c0 <memcmp@plt>
  40635c:	test   eax,eax
  40635e:	jne    40636a <_start@@Base+0x120a>
  406360:	mov    rax,QWORD PTR [rbp-0x10]
  406364:	add    rax,0x4
  406368:	jmp    406383 <_start@@Base+0x1223>
  40636a:	mov    rdx,QWORD PTR [rbp-0x18]
  40636e:	mov    rsi,QWORD PTR [rbp-0x10]
  406372:	mov    rax,QWORD PTR [rbp-0x8]
  406376:	mov    ecx,0x1a
  40637b:	mov    rdi,rax
  40637e:	call   42665a <flatcc_json_parser_set_error@@Base>
  406383:	leave  
  406384:	ret    
  406385:	push   rbp
  406386:	mov    rbp,rsp
  406389:	sub    rsp,0x40
  40638d:	mov    QWORD PTR [rbp-0x28],rdi
  406391:	mov    QWORD PTR [rbp-0x30],rsi
  406395:	mov    QWORD PTR [rbp-0x38],rdx
  406399:	mov    QWORD PTR [rbp-0x40],rcx
  40639d:	mov    rax,QWORD PTR fs:0x28
  4063a6:	mov    QWORD PTR [rbp-0x8],rax
  4063aa:	xor    eax,eax
  4063ac:	mov    QWORD PTR [rbp-0x18],0x0
  4063b4:	mov    DWORD PTR [rbp-0x1c],0x0
  4063bb:	mov    rax,QWORD PTR [rbp-0x30]
  4063bf:	mov    QWORD PTR [rbp-0x10],rax
  4063c3:	mov    rax,QWORD PTR [rbp-0x40]
  4063c7:	mov    QWORD PTR [rax],0x0
  4063ce:	mov    rax,QWORD PTR [rbp-0x30]
  4063d2:	cmp    rax,QWORD PTR [rbp-0x38]
  4063d6:	jne    4063de <_start@@Base+0x127e>
  4063d8:	mov    rax,QWORD PTR [rbp-0x30]
  4063dc:	jmp    406436 <_start@@Base+0x12d6>
  4063de:	lea    rdi,[rbp-0x18]
  4063e2:	lea    rcx,[rbp-0x1c]
  4063e6:	mov    rdx,QWORD PTR [rbp-0x38]
  4063ea:	mov    rsi,QWORD PTR [rbp-0x30]
  4063ee:	mov    rax,QWORD PTR [rbp-0x28]
  4063f2:	mov    r8,rdi
  4063f5:	mov    rdi,rax
  4063f8:	call   427d4a <flatcc_json_parser_integer@@Base>
  4063fd:	mov    QWORD PTR [rbp-0x30],rax
  406401:	mov    rax,QWORD PTR [rbp-0x30]
  406405:	cmp    rax,QWORD PTR [rbp-0x10]
  406409:	je     406432 <_start@@Base+0x12d2>
  40640b:	mov    rdi,QWORD PTR [rbp-0x18]
  40640f:	mov    ecx,DWORD PTR [rbp-0x1c]
  406412:	mov    r8,QWORD PTR [rbp-0x40]
  406416:	mov    rdx,QWORD PTR [rbp-0x38]
  40641a:	mov    rsi,QWORD PTR [rbp-0x30]
  40641e:	mov    rax,QWORD PTR [rbp-0x28]
  406422:	mov    r9,r8
  406425:	mov    r8,rdi
  406428:	mov    rdi,rax
  40642b:	call   405d95 <_start@@Base+0xc35>
  406430:	jmp    406436 <_start@@Base+0x12d6>
  406432:	mov    rax,QWORD PTR [rbp-0x30]
  406436:	mov    rdx,QWORD PTR [rbp-0x8]
  40643a:	xor    rdx,QWORD PTR fs:0x28
  406443:	je     40644a <_start@@Base+0x12ea>
  406445:	call   405070 <__stack_chk_fail@plt>
  40644a:	leave  
  40644b:	ret    
  40644c:	push   rbp
  40644d:	mov    rbp,rsp
  406450:	sub    rsp,0x40
  406454:	mov    QWORD PTR [rbp-0x28],rdi
  406458:	mov    QWORD PTR [rbp-0x30],rsi
  40645c:	mov    QWORD PTR [rbp-0x38],rdx
  406460:	mov    QWORD PTR [rbp-0x40],rcx
  406464:	mov    rax,QWORD PTR fs:0x28
  40646d:	mov    QWORD PTR [rbp-0x8],rax
  406471:	xor    eax,eax
  406473:	mov    QWORD PTR [rbp-0x18],0x0
  40647b:	mov    DWORD PTR [rbp-0x1c],0x0
  406482:	mov    rax,QWORD PTR [rbp-0x30]
  406486:	mov    QWORD PTR [rbp-0x10],rax
  40648a:	mov    rax,QWORD PTR [rbp-0x40]
  40648e:	mov    DWORD PTR [rax],0x0
  406494:	mov    rax,QWORD PTR [rbp-0x30]
  406498:	cmp    rax,QWORD PTR [rbp-0x38]
  40649c:	jne    4064a4 <_start@@Base+0x1344>
  40649e:	mov    rax,QWORD PTR [rbp-0x30]
  4064a2:	jmp    4064fc <_start@@Base+0x139c>
  4064a4:	lea    rdi,[rbp-0x18]
  4064a8:	lea    rcx,[rbp-0x1c]
  4064ac:	mov    rdx,QWORD PTR [rbp-0x38]
  4064b0:	mov    rsi,QWORD PTR [rbp-0x30]
  4064b4:	mov    rax,QWORD PTR [rbp-0x28]
  4064b8:	mov    r8,rdi
  4064bb:	mov    rdi,rax
  4064be:	call   427d4a <flatcc_json_parser_integer@@Base>
  4064c3:	mov    QWORD PTR [rbp-0x30],rax
  4064c7:	mov    rax,QWORD PTR [rbp-0x30]
  4064cb:	cmp    rax,QWORD PTR [rbp-0x10]
  4064cf:	je     4064f8 <_start@@Base+0x1398>
  4064d1:	mov    rdi,QWORD PTR [rbp-0x18]
  4064d5:	mov    ecx,DWORD PTR [rbp-0x1c]
  4064d8:	mov    r8,QWORD PTR [rbp-0x40]
  4064dc:	mov    rdx,QWORD PTR [rbp-0x38]
  4064e0:	mov    rsi,QWORD PTR [rbp-0x30]
  4064e4:	mov    rax,QWORD PTR [rbp-0x28]
  4064e8:	mov    r9,r8
  4064eb:	mov    r8,rdi
  4064ee:	mov    rdi,rax
  4064f1:	call   405e3c <_start@@Base+0xcdc>
  4064f6:	jmp    4064fc <_start@@Base+0x139c>
  4064f8:	mov    rax,QWORD PTR [rbp-0x30]
  4064fc:	mov    rdx,QWORD PTR [rbp-0x8]
  406500:	xor    rdx,QWORD PTR fs:0x28
  406509:	je     406510 <_start@@Base+0x13b0>
  40650b:	call   405070 <__stack_chk_fail@plt>
  406510:	leave  
  406511:	ret    
  406512:	push   rbp
  406513:	mov    rbp,rsp
  406516:	sub    rsp,0x40
  40651a:	mov    QWORD PTR [rbp-0x28],rdi
  40651e:	mov    QWORD PTR [rbp-0x30],rsi
  406522:	mov    QWORD PTR [rbp-0x38],rdx
  406526:	mov    QWORD PTR [rbp-0x40],rcx
  40652a:	mov    rax,QWORD PTR fs:0x28
  406533:	mov    QWORD PTR [rbp-0x8],rax
  406537:	xor    eax,eax
  406539:	mov    QWORD PTR [rbp-0x18],0x0
  406541:	mov    DWORD PTR [rbp-0x1c],0x0
  406548:	mov    rax,QWORD PTR [rbp-0x30]
  40654c:	mov    QWORD PTR [rbp-0x10],rax
  406550:	mov    rax,QWORD PTR [rbp-0x40]
  406554:	mov    WORD PTR [rax],0x0
  406559:	mov    rax,QWORD PTR [rbp-0x30]
  40655d:	cmp    rax,QWORD PTR [rbp-0x38]
  406561:	jne    406569 <_start@@Base+0x1409>
  406563:	mov    rax,QWORD PTR [rbp-0x30]
  406567:	jmp    4065c1 <_start@@Base+0x1461>
  406569:	lea    rdi,[rbp-0x18]
  40656d:	lea    rcx,[rbp-0x1c]
  406571:	mov    rdx,QWORD PTR [rbp-0x38]
  406575:	mov    rsi,QWORD PTR [rbp-0x30]
  406579:	mov    rax,QWORD PTR [rbp-0x28]
  40657d:	mov    r8,rdi
  406580:	mov    rdi,rax
  406583:	call   427d4a <flatcc_json_parser_integer@@Base>
  406588:	mov    QWORD PTR [rbp-0x30],rax
  40658c:	mov    rax,QWORD PTR [rbp-0x30]
  406590:	cmp    rax,QWORD PTR [rbp-0x10]
  406594:	je     4065bd <_start@@Base+0x145d>
  406596:	mov    rdi,QWORD PTR [rbp-0x18]
  40659a:	mov    ecx,DWORD PTR [rbp-0x1c]
  40659d:	mov    r8,QWORD PTR [rbp-0x40]
  4065a1:	mov    rdx,QWORD PTR [rbp-0x38]
  4065a5:	mov    rsi,QWORD PTR [rbp-0x30]
  4065a9:	mov    rax,QWORD PTR [rbp-0x28]
  4065ad:	mov    r9,r8
  4065b0:	mov    r8,rdi
  4065b3:	mov    rdi,rax
  4065b6:	call   405eb4 <_start@@Base+0xd54>
  4065bb:	jmp    4065c1 <_start@@Base+0x1461>
  4065bd:	mov    rax,QWORD PTR [rbp-0x30]
  4065c1:	mov    rdx,QWORD PTR [rbp-0x8]
  4065c5:	xor    rdx,QWORD PTR fs:0x28
  4065ce:	je     4065d5 <_start@@Base+0x1475>
  4065d0:	call   405070 <__stack_chk_fail@plt>
  4065d5:	leave  
  4065d6:	ret    
  4065d7:	push   rbp
  4065d8:	mov    rbp,rsp
  4065db:	sub    rsp,0x40
  4065df:	mov    QWORD PTR [rbp-0x28],rdi
  4065e3:	mov    QWORD PTR [rbp-0x30],rsi
  4065e7:	mov    QWORD PTR [rbp-0x38],rdx
  4065eb:	mov    QWORD PTR [rbp-0x40],rcx
  4065ef:	mov    rax,QWORD PTR fs:0x28
  4065f8:	mov    QWORD PTR [rbp-0x8],rax
  4065fc:	xor    eax,eax
  4065fe:	mov    QWORD PTR [rbp-0x18],0x0
  406606:	mov    DWORD PTR [rbp-0x1c],0x0
  40660d:	mov    rax,QWORD PTR [rbp-0x30]
  406611:	mov    QWORD PTR [rbp-0x10],rax
  406615:	mov    rax,QWORD PTR [rbp-0x40]
  406619:	mov    BYTE PTR [rax],0x0
  40661c:	mov    rax,QWORD PTR [rbp-0x30]
  406620:	cmp    rax,QWORD PTR [rbp-0x38]
  406624:	jne    40662c <_start@@Base+0x14cc>
  406626:	mov    rax,QWORD PTR [rbp-0x30]
  40662a:	jmp    406684 <_start@@Base+0x1524>
  40662c:	lea    rdi,[rbp-0x18]
  406630:	lea    rcx,[rbp-0x1c]
  406634:	mov    rdx,QWORD PTR [rbp-0x38]
  406638:	mov    rsi,QWORD PTR [rbp-0x30]
  40663c:	mov    rax,QWORD PTR [rbp-0x28]
  406640:	mov    r8,rdi
  406643:	mov    rdi,rax
  406646:	call   427d4a <flatcc_json_parser_integer@@Base>
  40664b:	mov    QWORD PTR [rbp-0x30],rax
  40664f:	mov    rax,QWORD PTR [rbp-0x30]
  406653:	cmp    rax,QWORD PTR [rbp-0x10]
  406657:	je     406680 <_start@@Base+0x1520>
  406659:	mov    rdi,QWORD PTR [rbp-0x18]
  40665d:	mov    ecx,DWORD PTR [rbp-0x1c]
  406660:	mov    r8,QWORD PTR [rbp-0x40]
  406664:	mov    rdx,QWORD PTR [rbp-0x38]
  406668:	mov    rsi,QWORD PTR [rbp-0x30]
  40666c:	mov    rax,QWORD PTR [rbp-0x28]
  406670:	mov    r9,r8
  406673:	mov    r8,rdi
  406676:	mov    rdi,rax
  406679:	call   405f2c <_start@@Base+0xdcc>
  40667e:	jmp    406684 <_start@@Base+0x1524>
  406680:	mov    rax,QWORD PTR [rbp-0x30]
  406684:	mov    rdx,QWORD PTR [rbp-0x8]
  406688:	xor    rdx,QWORD PTR fs:0x28
  406691:	je     406698 <_start@@Base+0x1538>
  406693:	call   405070 <__stack_chk_fail@plt>
  406698:	leave  
  406699:	ret    
  40669a:	push   rbp
  40669b:	mov    rbp,rsp
  40669e:	sub    rsp,0x40
  4066a2:	mov    QWORD PTR [rbp-0x28],rdi
  4066a6:	mov    QWORD PTR [rbp-0x30],rsi
  4066aa:	mov    QWORD PTR [rbp-0x38],rdx
  4066ae:	mov    QWORD PTR [rbp-0x40],rcx
  4066b2:	mov    rax,QWORD PTR fs:0x28
  4066bb:	mov    QWORD PTR [rbp-0x8],rax
  4066bf:	xor    eax,eax
  4066c1:	mov    QWORD PTR [rbp-0x18],0x0
  4066c9:	mov    DWORD PTR [rbp-0x1c],0x0
  4066d0:	mov    rax,QWORD PTR [rbp-0x30]
  4066d4:	mov    QWORD PTR [rbp-0x10],rax
  4066d8:	mov    rax,QWORD PTR [rbp-0x40]
  4066dc:	mov    QWORD PTR [rax],0x0
  4066e3:	mov    rax,QWORD PTR [rbp-0x30]
  4066e7:	cmp    rax,QWORD PTR [rbp-0x38]
  4066eb:	jne    4066f3 <_start@@Base+0x1593>
  4066ed:	mov    rax,QWORD PTR [rbp-0x30]
  4066f1:	jmp    40674b <_start@@Base+0x15eb>
  4066f3:	lea    rdi,[rbp-0x18]
  4066f7:	lea    rcx,[rbp-0x1c]
  4066fb:	mov    rdx,QWORD PTR [rbp-0x38]
  4066ff:	mov    rsi,QWORD PTR [rbp-0x30]
  406703:	mov    rax,QWORD PTR [rbp-0x28]
  406707:	mov    r8,rdi
  40670a:	mov    rdi,rax
  40670d:	call   427d4a <flatcc_json_parser_integer@@Base>
  406712:	mov    QWORD PTR [rbp-0x30],rax
  406716:	mov    rax,QWORD PTR [rbp-0x30]
  40671a:	cmp    rax,QWORD PTR [rbp-0x10]
  40671e:	je     406747 <_start@@Base+0x15e7>
  406720:	mov    rdi,QWORD PTR [rbp-0x18]
  406724:	mov    ecx,DWORD PTR [rbp-0x1c]
  406727:	mov    r8,QWORD PTR [rbp-0x40]
  40672b:	mov    rdx,QWORD PTR [rbp-0x38]
  40672f:	mov    rsi,QWORD PTR [rbp-0x30]
  406733:	mov    rax,QWORD PTR [rbp-0x28]
  406737:	mov    r9,r8
  40673a:	mov    r8,rdi
  40673d:	mov    rdi,rax
  406740:	call   405fa3 <_start@@Base+0xe43>
  406745:	jmp    40674b <_start@@Base+0x15eb>
  406747:	mov    rax,QWORD PTR [rbp-0x30]
  40674b:	mov    rdx,QWORD PTR [rbp-0x8]
  40674f:	xor    rdx,QWORD PTR fs:0x28
  406758:	je     40675f <_start@@Base+0x15ff>
  40675a:	call   405070 <__stack_chk_fail@plt>
  40675f:	leave  
  406760:	ret    
  406761:	push   rbp
  406762:	mov    rbp,rsp
  406765:	sub    rsp,0x40
  406769:	mov    QWORD PTR [rbp-0x28],rdi
  40676d:	mov    QWORD PTR [rbp-0x30],rsi
  406771:	mov    QWORD PTR [rbp-0x38],rdx
  406775:	mov    QWORD PTR [rbp-0x40],rcx
  406779:	mov    rax,QWORD PTR fs:0x28
  406782:	mov    QWORD PTR [rbp-0x8],rax
  406786:	xor    eax,eax
  406788:	mov    QWORD PTR [rbp-0x18],0x0
  406790:	mov    DWORD PTR [rbp-0x1c],0x0
  406797:	mov    rax,QWORD PTR [rbp-0x30]
  40679b:	mov    QWORD PTR [rbp-0x10],rax
  40679f:	mov    rax,QWORD PTR [rbp-0x40]
  4067a3:	mov    DWORD PTR [rax],0x0
  4067a9:	mov    rax,QWORD PTR [rbp-0x30]
  4067ad:	cmp    rax,QWORD PTR [rbp-0x38]
  4067b1:	jne    4067b9 <_start@@Base+0x1659>
  4067b3:	mov    rax,QWORD PTR [rbp-0x30]
  4067b7:	jmp    406811 <_start@@Base+0x16b1>
  4067b9:	lea    rdi,[rbp-0x18]
  4067bd:	lea    rcx,[rbp-0x1c]
  4067c1:	mov    rdx,QWORD PTR [rbp-0x38]
  4067c5:	mov    rsi,QWORD PTR [rbp-0x30]
  4067c9:	mov    rax,QWORD PTR [rbp-0x28]
  4067cd:	mov    r8,rdi
  4067d0:	mov    rdi,rax
  4067d3:	call   427d4a <flatcc_json_parser_integer@@Base>
  4067d8:	mov    QWORD PTR [rbp-0x30],rax
  4067dc:	mov    rax,QWORD PTR [rbp-0x30]
  4067e0:	cmp    rax,QWORD PTR [rbp-0x10]
  4067e4:	je     40680d <_start@@Base+0x16ad>
  4067e6:	mov    rdi,QWORD PTR [rbp-0x18]
  4067ea:	mov    ecx,DWORD PTR [rbp-0x1c]
  4067ed:	mov    r8,QWORD PTR [rbp-0x40]
  4067f1:	mov    rdx,QWORD PTR [rbp-0x38]
  4067f5:	mov    rsi,QWORD PTR [rbp-0x30]
  4067f9:	mov    rax,QWORD PTR [rbp-0x28]
  4067fd:	mov    r9,r8
  406800:	mov    r8,rdi
  406803:	mov    rdi,rax
  406806:	call   40603b <_start@@Base+0xedb>
  40680b:	jmp    406811 <_start@@Base+0x16b1>
  40680d:	mov    rax,QWORD PTR [rbp-0x30]
  406811:	mov    rdx,QWORD PTR [rbp-0x8]
  406815:	xor    rdx,QWORD PTR fs:0x28
  40681e:	je     406825 <_start@@Base+0x16c5>
  406820:	call   405070 <__stack_chk_fail@plt>
  406825:	leave  
  406826:	ret    
  406827:	push   rbp
  406828:	mov    rbp,rsp
  40682b:	sub    rsp,0x40
  40682f:	mov    QWORD PTR [rbp-0x28],rdi
  406833:	mov    QWORD PTR [rbp-0x30],rsi
  406837:	mov    QWORD PTR [rbp-0x38],rdx
  40683b:	mov    QWORD PTR [rbp-0x40],rcx
  40683f:	mov    rax,QWORD PTR fs:0x28
  406848:	mov    QWORD PTR [rbp-0x8],rax
  40684c:	xor    eax,eax
  40684e:	mov    QWORD PTR [rbp-0x18],0x0
  406856:	mov    DWORD PTR [rbp-0x1c],0x0
  40685d:	mov    rax,QWORD PTR [rbp-0x30]
  406861:	mov    QWORD PTR [rbp-0x10],rax
  406865:	mov    rax,QWORD PTR [rbp-0x40]
  406869:	mov    WORD PTR [rax],0x0
  40686e:	mov    rax,QWORD PTR [rbp-0x30]
  406872:	cmp    rax,QWORD PTR [rbp-0x38]
  406876:	jne    40687e <_start@@Base+0x171e>
  406878:	mov    rax,QWORD PTR [rbp-0x30]
  40687c:	jmp    4068d6 <_start@@Base+0x1776>
  40687e:	lea    rdi,[rbp-0x18]
  406882:	lea    rcx,[rbp-0x1c]
  406886:	mov    rdx,QWORD PTR [rbp-0x38]
  40688a:	mov    rsi,QWORD PTR [rbp-0x30]
  40688e:	mov    rax,QWORD PTR [rbp-0x28]
  406892:	mov    r8,rdi
  406895:	mov    rdi,rax
  406898:	call   427d4a <flatcc_json_parser_integer@@Base>
  40689d:	mov    QWORD PTR [rbp-0x30],rax
  4068a1:	mov    rax,QWORD PTR [rbp-0x30]
  4068a5:	cmp    rax,QWORD PTR [rbp-0x10]
  4068a9:	je     4068d2 <_start@@Base+0x1772>
  4068ab:	mov    rdi,QWORD PTR [rbp-0x18]
  4068af:	mov    ecx,DWORD PTR [rbp-0x1c]
  4068b2:	mov    r8,QWORD PTR [rbp-0x40]
  4068b6:	mov    rdx,QWORD PTR [rbp-0x38]
  4068ba:	mov    rsi,QWORD PTR [rbp-0x30]
  4068be:	mov    rax,QWORD PTR [rbp-0x28]
  4068c2:	mov    r9,r8
  4068c5:	mov    r8,rdi
  4068c8:	mov    rdi,rax
  4068cb:	call   4060cd <_start@@Base+0xf6d>
  4068d0:	jmp    4068d6 <_start@@Base+0x1776>
  4068d2:	mov    rax,QWORD PTR [rbp-0x30]
  4068d6:	mov    rdx,QWORD PTR [rbp-0x8]
  4068da:	xor    rdx,QWORD PTR fs:0x28
  4068e3:	je     4068ea <_start@@Base+0x178a>
  4068e5:	call   405070 <__stack_chk_fail@plt>
  4068ea:	leave  
  4068eb:	ret    
  4068ec:	push   rbp
  4068ed:	mov    rbp,rsp
  4068f0:	sub    rsp,0x40
  4068f4:	mov    QWORD PTR [rbp-0x28],rdi
  4068f8:	mov    QWORD PTR [rbp-0x30],rsi
  4068fc:	mov    QWORD PTR [rbp-0x38],rdx
  406900:	mov    QWORD PTR [rbp-0x40],rcx
  406904:	mov    rax,QWORD PTR fs:0x28
  40690d:	mov    QWORD PTR [rbp-0x8],rax
  406911:	xor    eax,eax
  406913:	mov    QWORD PTR [rbp-0x18],0x0
  40691b:	mov    DWORD PTR [rbp-0x1c],0x0
  406922:	mov    rax,QWORD PTR [rbp-0x30]
  406926:	mov    QWORD PTR [rbp-0x10],rax
  40692a:	mov    rax,QWORD PTR [rbp-0x40]
  40692e:	mov    BYTE PTR [rax],0x0
  406931:	mov    rax,QWORD PTR [rbp-0x30]
  406935:	cmp    rax,QWORD PTR [rbp-0x38]
  406939:	jne    406941 <_start@@Base+0x17e1>
  40693b:	mov    rax,QWORD PTR [rbp-0x30]
  40693f:	jmp    406999 <_start@@Base+0x1839>
  406941:	lea    rdi,[rbp-0x18]
  406945:	lea    rcx,[rbp-0x1c]
  406949:	mov    rdx,QWORD PTR [rbp-0x38]
  40694d:	mov    rsi,QWORD PTR [rbp-0x30]
  406951:	mov    rax,QWORD PTR [rbp-0x28]
  406955:	mov    r8,rdi
  406958:	mov    rdi,rax
  40695b:	call   427d4a <flatcc_json_parser_integer@@Base>
  406960:	mov    QWORD PTR [rbp-0x30],rax
  406964:	mov    rax,QWORD PTR [rbp-0x30]
  406968:	cmp    rax,QWORD PTR [rbp-0x10]
  40696c:	je     406995 <_start@@Base+0x1835>
  40696e:	mov    rdi,QWORD PTR [rbp-0x18]
  406972:	mov    ecx,DWORD PTR [rbp-0x1c]
  406975:	mov    r8,QWORD PTR [rbp-0x40]
  406979:	mov    rdx,QWORD PTR [rbp-0x38]
  40697d:	mov    rsi,QWORD PTR [rbp-0x30]
  406981:	mov    rax,QWORD PTR [rbp-0x28]
  406985:	mov    r9,r8
  406988:	mov    r8,rdi
  40698b:	mov    rdi,rax
  40698e:	call   406160 <_start@@Base+0x1000>
  406993:	jmp    406999 <_start@@Base+0x1839>
  406995:	mov    rax,QWORD PTR [rbp-0x30]
  406999:	mov    rdx,QWORD PTR [rbp-0x8]
  40699d:	xor    rdx,QWORD PTR fs:0x28
  4069a6:	je     4069ad <_start@@Base+0x184d>
  4069a8:	call   405070 <__stack_chk_fail@plt>
  4069ad:	leave  
  4069ae:	ret    
  4069af:	push   rbp
  4069b0:	mov    rbp,rsp
  4069b3:	sub    rsp,0x40
  4069b7:	mov    QWORD PTR [rbp-0x28],rdi
  4069bb:	mov    QWORD PTR [rbp-0x30],rsi
  4069bf:	mov    QWORD PTR [rbp-0x38],rdx
  4069c3:	mov    QWORD PTR [rbp-0x40],rcx
  4069c7:	mov    rax,QWORD PTR fs:0x28
  4069d0:	mov    QWORD PTR [rbp-0x8],rax
  4069d4:	xor    eax,eax
  4069d6:	mov    rax,QWORD PTR [rbp-0x30]
  4069da:	mov    QWORD PTR [rbp-0x10],rax
  4069de:	mov    rdx,QWORD PTR [rbp-0x38]
  4069e2:	mov    rax,QWORD PTR [rbp-0x30]
  4069e6:	sub    rdx,rax
  4069e9:	mov    rax,rdx
  4069ec:	cmp    rax,0x3
  4069f0:	jle    406a1f <_start@@Base+0x18bf>
  4069f2:	mov    rax,QWORD PTR [rbp-0x30]
  4069f6:	mov    edx,0x4
  4069fb:	lea    rsi,[rip+0x2f63b]        # 43603d <_IO_stdin_used@@Base+0x3d>
  406a02:	mov    rdi,rax
  406a05:	call   4050c0 <memcmp@plt>
  406a0a:	test   eax,eax
  406a0c:	jne    406a1f <_start@@Base+0x18bf>
  406a0e:	mov    rax,QWORD PTR [rbp-0x40]
  406a12:	mov    BYTE PTR [rax],0x1
  406a15:	mov    rax,QWORD PTR [rbp-0x10]
  406a19:	add    rax,0x4
  406a1d:	jmp    406a91 <_start@@Base+0x1931>
  406a1f:	mov    rdx,QWORD PTR [rbp-0x38]
  406a23:	mov    rax,QWORD PTR [rbp-0x30]
  406a27:	sub    rdx,rax
  406a2a:	mov    rax,rdx
  406a2d:	cmp    rax,0x4
  406a31:	jle    406a60 <_start@@Base+0x1900>
  406a33:	mov    rax,QWORD PTR [rbp-0x30]
  406a37:	mov    edx,0x5
  406a3c:	lea    rsi,[rip+0x2f5ff]        # 436042 <_IO_stdin_used@@Base+0x42>
  406a43:	mov    rdi,rax
  406a46:	call   4050c0 <memcmp@plt>
  406a4b:	test   eax,eax
  406a4d:	jne    406a60 <_start@@Base+0x1900>
  406a4f:	mov    rax,QWORD PTR [rbp-0x40]
  406a53:	mov    BYTE PTR [rax],0x0
  406a56:	mov    rax,QWORD PTR [rbp-0x10]
  406a5a:	add    rax,0x5
  406a5e:	jmp    406a91 <_start@@Base+0x1931>
  406a60:	lea    rcx,[rbp-0x11]
  406a64:	mov    rdx,QWORD PTR [rbp-0x38]
  406a68:	mov    rsi,QWORD PTR [rbp-0x30]
  406a6c:	mov    rax,QWORD PTR [rbp-0x28]
  406a70:	mov    rdi,rax
  406a73:	call   4065d7 <_start@@Base+0x1477>
  406a78:	mov    QWORD PTR [rbp-0x30],rax
  406a7c:	movzx  eax,BYTE PTR [rbp-0x11]
  406a80:	test   al,al
  406a82:	setne  al
  406a85:	mov    edx,eax
  406a87:	mov    rax,QWORD PTR [rbp-0x40]
  406a8b:	mov    BYTE PTR [rax],dl
  406a8d:	mov    rax,QWORD PTR [rbp-0x30]
  406a91:	mov    rcx,QWORD PTR [rbp-0x8]
  406a95:	xor    rcx,QWORD PTR fs:0x28
  406a9e:	je     406aa5 <_start@@Base+0x1945>
  406aa0:	call   405070 <__stack_chk_fail@plt>
  406aa5:	leave  
  406aa6:	ret    
  406aa7:	push   rbp
  406aa8:	mov    rbp,rsp
  406aab:	sub    rsp,0x60
  406aaf:	mov    QWORD PTR [rbp-0x38],rdi
  406ab3:	mov    QWORD PTR [rbp-0x40],rsi
  406ab7:	mov    QWORD PTR [rbp-0x48],rdx
  406abb:	mov    QWORD PTR [rbp-0x50],rcx
  406abf:	mov    QWORD PTR [rbp-0x58],r8
  406ac3:	mov    rax,QWORD PTR fs:0x28
  406acc:	mov    QWORD PTR [rbp-0x8],rax
  406ad0:	xor    eax,eax
  406ad2:	mov    QWORD PTR [rbp-0x28],0x0
  406ada:	mov    rax,QWORD PTR [rbp-0x58]
  406ade:	mov    QWORD PTR [rax],0x0
  406ae5:	mov    rdx,QWORD PTR [rbp-0x48]
  406ae9:	mov    rcx,QWORD PTR [rbp-0x40]
  406aed:	mov    rax,QWORD PTR [rbp-0x38]
  406af1:	mov    rsi,rcx
  406af4:	mov    rdi,rax
  406af7:	call   405825 <_start@@Base+0x6c5>
  406afc:	mov    QWORD PTR [rbp-0x40],rax
  406b00:	mov    rax,QWORD PTR [rbp-0x40]
  406b04:	cmp    rax,QWORD PTR [rbp-0x48]
  406b08:	jne    406b13 <_start@@Base+0x19b3>
  406b0a:	mov    rax,QWORD PTR [rbp-0x40]
  406b0e:	jmp    406bf0 <_start@@Base+0x1a90>
  406b13:	mov    rax,QWORD PTR [rbp-0x50]
  406b17:	mov    QWORD PTR [rbp-0x18],rax
  406b1b:	mov    rax,QWORD PTR [rbp-0x18]
  406b1f:	mov    rax,QWORD PTR [rax]
  406b22:	mov    rdx,QWORD PTR [rbp-0x40]
  406b26:	mov    QWORD PTR [rbp-0x10],rdx
  406b2a:	lea    r9,[rbp-0x2c]
  406b2e:	lea    r8,[rbp-0x20]
  406b32:	lea    rcx,[rbp-0x30]
  406b36:	mov    rdx,QWORD PTR [rbp-0x48]
  406b3a:	mov    rsi,QWORD PTR [rbp-0x10]
  406b3e:	mov    rdi,QWORD PTR [rbp-0x38]
  406b42:	call   rax
  406b44:	mov    QWORD PTR [rbp-0x40],rax
  406b48:	mov    rax,QWORD PTR [rbp-0x40]
  406b4c:	cmp    rax,QWORD PTR [rbp-0x48]
  406b50:	jne    406b5b <_start@@Base+0x19fb>
  406b52:	mov    rax,QWORD PTR [rbp-0x40]
  406b56:	jmp    406bf0 <_start@@Base+0x1a90>
  406b5b:	mov    rax,QWORD PTR [rbp-0x40]
  406b5f:	cmp    rax,QWORD PTR [rbp-0x10]
  406b63:	jne    406b76 <_start@@Base+0x1a16>
  406b65:	add    QWORD PTR [rbp-0x18],0x8
  406b6a:	mov    rax,QWORD PTR [rbp-0x18]
  406b6e:	mov    rax,QWORD PTR [rax]
  406b71:	test   rax,rax
  406b74:	jne    406b1b <_start@@Base+0x19bb>
  406b76:	mov    rax,QWORD PTR [rbp-0x10]
  406b7a:	cmp    rax,QWORD PTR [rbp-0x40]
  406b7e:	jne    406b9b <_start@@Base+0x1a3b>
  406b80:	mov    rdx,QWORD PTR [rbp-0x48]
  406b84:	mov    rsi,QWORD PTR [rbp-0x40]
  406b88:	mov    rax,QWORD PTR [rbp-0x38]
  406b8c:	mov    ecx,0x17
  406b91:	mov    rdi,rax
  406b94:	call   42665a <flatcc_json_parser_set_error@@Base>
  406b99:	jmp    406bf0 <_start@@Base+0x1a90>
  406b9b:	mov    rdi,QWORD PTR [rbp-0x20]
  406b9f:	mov    ecx,DWORD PTR [rbp-0x30]
  406ba2:	lea    r8,[rbp-0x28]
  406ba6:	mov    rdx,QWORD PTR [rbp-0x48]
  406baa:	mov    rsi,QWORD PTR [rbp-0x40]
  406bae:	mov    rax,QWORD PTR [rbp-0x38]
  406bb2:	mov    r9,r8
  406bb5:	mov    r8,rdi
  406bb8:	mov    rdi,rax
  406bbb:	call   405d95 <_start@@Base+0xc35>
  406bc0:	cmp    rax,QWORD PTR [rbp-0x48]
  406bc4:	jne    406bcc <_start@@Base+0x1a6c>
  406bc6:	mov    rax,QWORD PTR [rbp-0x48]
  406bca:	jmp    406bf0 <_start@@Base+0x1a90>
  406bcc:	mov    rax,QWORD PTR [rbp-0x58]
  406bd0:	mov    rdx,QWORD PTR [rax]
  406bd3:	mov    rax,QWORD PTR [rbp-0x28]
  406bd7:	add    rdx,rax
  406bda:	mov    rax,QWORD PTR [rbp-0x58]
  406bde:	mov    QWORD PTR [rax],rdx
  406be1:	mov    eax,DWORD PTR [rbp-0x2c]
  406be4:	test   eax,eax
  406be6:	jne    406b13 <_start@@Base+0x19b3>
  406bec:	mov    rax,QWORD PTR [rbp-0x40]
  406bf0:	mov    rdi,QWORD PTR [rbp-0x8]
  406bf4:	xor    rdi,QWORD PTR fs:0x28
  406bfd:	je     406c04 <_start@@Base+0x1aa4>
  406bff:	call   405070 <__stack_chk_fail@plt>
  406c04:	leave  
  406c05:	ret    
  406c06:	push   rbp
  406c07:	mov    rbp,rsp
  406c0a:	sub    rsp,0x60
  406c0e:	mov    QWORD PTR [rbp-0x38],rdi
  406c12:	mov    QWORD PTR [rbp-0x40],rsi
  406c16:	mov    QWORD PTR [rbp-0x48],rdx
  406c1a:	mov    QWORD PTR [rbp-0x50],rcx
  406c1e:	mov    QWORD PTR [rbp-0x58],r8
  406c22:	mov    rax,QWORD PTR fs:0x28
  406c2b:	mov    QWORD PTR [rbp-0x8],rax
  406c2f:	xor    eax,eax
  406c31:	mov    DWORD PTR [rbp-0x2c],0x0
  406c38:	mov    rax,QWORD PTR [rbp-0x58]
  406c3c:	mov    DWORD PTR [rax],0x0
  406c42:	mov    rdx,QWORD PTR [rbp-0x48]
  406c46:	mov    rcx,QWORD PTR [rbp-0x40]
  406c4a:	mov    rax,QWORD PTR [rbp-0x38]
  406c4e:	mov    rsi,rcx
  406c51:	mov    rdi,rax
  406c54:	call   405825 <_start@@Base+0x6c5>
  406c59:	mov    QWORD PTR [rbp-0x40],rax
  406c5d:	mov    rax,QWORD PTR [rbp-0x40]
  406c61:	cmp    rax,QWORD PTR [rbp-0x48]
  406c65:	jne    406c70 <_start@@Base+0x1b10>
  406c67:	mov    rax,QWORD PTR [rbp-0x40]
  406c6b:	jmp    406d49 <_start@@Base+0x1be9>
  406c70:	mov    rax,QWORD PTR [rbp-0x50]
  406c74:	mov    QWORD PTR [rbp-0x18],rax
  406c78:	mov    rax,QWORD PTR [rbp-0x18]
  406c7c:	mov    rax,QWORD PTR [rax]
  406c7f:	mov    rdx,QWORD PTR [rbp-0x40]
  406c83:	mov    QWORD PTR [rbp-0x10],rdx
  406c87:	lea    r9,[rbp-0x24]
  406c8b:	lea    r8,[rbp-0x20]
  406c8f:	lea    rcx,[rbp-0x28]
  406c93:	mov    rdx,QWORD PTR [rbp-0x48]
  406c97:	mov    rsi,QWORD PTR [rbp-0x10]
  406c9b:	mov    rdi,QWORD PTR [rbp-0x38]
  406c9f:	call   rax
  406ca1:	mov    QWORD PTR [rbp-0x40],rax
  406ca5:	mov    rax,QWORD PTR [rbp-0x40]
  406ca9:	cmp    rax,QWORD PTR [rbp-0x48]
  406cad:	jne    406cb8 <_start@@Base+0x1b58>
  406caf:	mov    rax,QWORD PTR [rbp-0x40]
  406cb3:	jmp    406d49 <_start@@Base+0x1be9>
  406cb8:	mov    rax,QWORD PTR [rbp-0x40]
  406cbc:	cmp    rax,QWORD PTR [rbp-0x10]
  406cc0:	jne    406cd3 <_start@@Base+0x1b73>
  406cc2:	add    QWORD PTR [rbp-0x18],0x8
  406cc7:	mov    rax,QWORD PTR [rbp-0x18]
  406ccb:	mov    rax,QWORD PTR [rax]
  406cce:	test   rax,rax
  406cd1:	jne    406c78 <_start@@Base+0x1b18>
  406cd3:	mov    rax,QWORD PTR [rbp-0x10]
  406cd7:	cmp    rax,QWORD PTR [rbp-0x40]
  406cdb:	jne    406cf8 <_start@@Base+0x1b98>
  406cdd:	mov    rdx,QWORD PTR [rbp-0x48]
  406ce1:	mov    rsi,QWORD PTR [rbp-0x40]
  406ce5:	mov    rax,QWORD PTR [rbp-0x38]
  406ce9:	mov    ecx,0x17
  406cee:	mov    rdi,rax
  406cf1:	call   42665a <flatcc_json_parser_set_error@@Base>
  406cf6:	jmp    406d49 <_start@@Base+0x1be9>
  406cf8:	mov    rdi,QWORD PTR [rbp-0x20]
  406cfc:	mov    ecx,DWORD PTR [rbp-0x28]
  406cff:	lea    r8,[rbp-0x2c]
  406d03:	mov    rdx,QWORD PTR [rbp-0x48]
  406d07:	mov    rsi,QWORD PTR [rbp-0x40]
  406d0b:	mov    rax,QWORD PTR [rbp-0x38]
  406d0f:	mov    r9,r8
  406d12:	mov    r8,rdi
  406d15:	mov    rdi,rax
  406d18:	call   405e3c <_start@@Base+0xcdc>
  406d1d:	cmp    rax,QWORD PTR [rbp-0x48]
  406d21:	jne    406d29 <_start@@Base+0x1bc9>
  406d23:	mov    rax,QWORD PTR [rbp-0x48]
  406d27:	jmp    406d49 <_start@@Base+0x1be9>
  406d29:	mov    rax,QWORD PTR [rbp-0x58]
  406d2d:	mov    edx,DWORD PTR [rax]
  406d2f:	mov    eax,DWORD PTR [rbp-0x2c]
  406d32:	add    edx,eax
  406d34:	mov    rax,QWORD PTR [rbp-0x58]
  406d38:	mov    DWORD PTR [rax],edx
  406d3a:	mov    eax,DWORD PTR [rbp-0x24]
  406d3d:	test   eax,eax
  406d3f:	jne    406c70 <_start@@Base+0x1b10>
  406d45:	mov    rax,QWORD PTR [rbp-0x40]
  406d49:	mov    rdi,QWORD PTR [rbp-0x8]
  406d4d:	xor    rdi,QWORD PTR fs:0x28
  406d56:	je     406d5d <_start@@Base+0x1bfd>
  406d58:	call   405070 <__stack_chk_fail@plt>
  406d5d:	leave  
  406d5e:	ret    
  406d5f:	push   rbp
  406d60:	mov    rbp,rsp
  406d63:	sub    rsp,0x60
  406d67:	mov    QWORD PTR [rbp-0x38],rdi
  406d6b:	mov    QWORD PTR [rbp-0x40],rsi
  406d6f:	mov    QWORD PTR [rbp-0x48],rdx
  406d73:	mov    QWORD PTR [rbp-0x50],rcx
  406d77:	mov    QWORD PTR [rbp-0x58],r8
  406d7b:	mov    rax,QWORD PTR fs:0x28
  406d84:	mov    QWORD PTR [rbp-0x8],rax
  406d88:	xor    eax,eax
  406d8a:	mov    WORD PTR [rbp-0x2a],0x0
  406d90:	mov    rax,QWORD PTR [rbp-0x58]
  406d94:	mov    WORD PTR [rax],0x0
  406d99:	mov    rdx,QWORD PTR [rbp-0x48]
  406d9d:	mov    rcx,QWORD PTR [rbp-0x40]
  406da1:	mov    rax,QWORD PTR [rbp-0x38]
  406da5:	mov    rsi,rcx
  406da8:	mov    rdi,rax
  406dab:	call   405825 <_start@@Base+0x6c5>
  406db0:	mov    QWORD PTR [rbp-0x40],rax
  406db4:	mov    rax,QWORD PTR [rbp-0x40]
  406db8:	cmp    rax,QWORD PTR [rbp-0x48]
  406dbc:	jne    406dc7 <_start@@Base+0x1c67>
  406dbe:	mov    rax,QWORD PTR [rbp-0x40]
  406dc2:	jmp    406ea3 <_start@@Base+0x1d43>
  406dc7:	mov    rax,QWORD PTR [rbp-0x50]
  406dcb:	mov    QWORD PTR [rbp-0x18],rax
  406dcf:	mov    rax,QWORD PTR [rbp-0x18]
  406dd3:	mov    rax,QWORD PTR [rax]
  406dd6:	mov    rdx,QWORD PTR [rbp-0x40]
  406dda:	mov    QWORD PTR [rbp-0x10],rdx
  406dde:	lea    r9,[rbp-0x24]
  406de2:	lea    r8,[rbp-0x20]
  406de6:	lea    rcx,[rbp-0x28]
  406dea:	mov    rdx,QWORD PTR [rbp-0x48]
  406dee:	mov    rsi,QWORD PTR [rbp-0x10]
  406df2:	mov    rdi,QWORD PTR [rbp-0x38]
  406df6:	call   rax
  406df8:	mov    QWORD PTR [rbp-0x40],rax
  406dfc:	mov    rax,QWORD PTR [rbp-0x40]
  406e00:	cmp    rax,QWORD PTR [rbp-0x48]
  406e04:	jne    406e0f <_start@@Base+0x1caf>
  406e06:	mov    rax,QWORD PTR [rbp-0x40]
  406e0a:	jmp    406ea3 <_start@@Base+0x1d43>
  406e0f:	mov    rax,QWORD PTR [rbp-0x40]
  406e13:	cmp    rax,QWORD PTR [rbp-0x10]
  406e17:	jne    406e2a <_start@@Base+0x1cca>
  406e19:	add    QWORD PTR [rbp-0x18],0x8
  406e1e:	mov    rax,QWORD PTR [rbp-0x18]
  406e22:	mov    rax,QWORD PTR [rax]
  406e25:	test   rax,rax
  406e28:	jne    406dcf <_start@@Base+0x1c6f>
  406e2a:	mov    rax,QWORD PTR [rbp-0x10]
  406e2e:	cmp    rax,QWORD PTR [rbp-0x40]
  406e32:	jne    406e4f <_start@@Base+0x1cef>
  406e34:	mov    rdx,QWORD PTR [rbp-0x48]
  406e38:	mov    rsi,QWORD PTR [rbp-0x40]
  406e3c:	mov    rax,QWORD PTR [rbp-0x38]
  406e40:	mov    ecx,0x17
  406e45:	mov    rdi,rax
  406e48:	call   42665a <flatcc_json_parser_set_error@@Base>
  406e4d:	jmp    406ea3 <_start@@Base+0x1d43>
  406e4f:	mov    rdi,QWORD PTR [rbp-0x20]
  406e53:	mov    ecx,DWORD PTR [rbp-0x28]
  406e56:	lea    r8,[rbp-0x2a]
  406e5a:	mov    rdx,QWORD PTR [rbp-0x48]
  406e5e:	mov    rsi,QWORD PTR [rbp-0x40]
  406e62:	mov    rax,QWORD PTR [rbp-0x38]
  406e66:	mov    r9,r8
  406e69:	mov    r8,rdi
  406e6c:	mov    rdi,rax
  406e6f:	call   405eb4 <_start@@Base+0xd54>
  406e74:	cmp    rax,QWORD PTR [rbp-0x48]
  406e78:	jne    406e80 <_start@@Base+0x1d20>
  406e7a:	mov    rax,QWORD PTR [rbp-0x48]
  406e7e:	jmp    406ea3 <_start@@Base+0x1d43>
  406e80:	mov    rax,QWORD PTR [rbp-0x58]
  406e84:	movzx  edx,WORD PTR [rax]
  406e87:	movzx  eax,WORD PTR [rbp-0x2a]
  406e8b:	add    edx,eax
  406e8d:	mov    rax,QWORD PTR [rbp-0x58]
  406e91:	mov    WORD PTR [rax],dx
  406e94:	mov    eax,DWORD PTR [rbp-0x24]
  406e97:	test   eax,eax
  406e99:	jne    406dc7 <_start@@Base+0x1c67>
  406e9f:	mov    rax,QWORD PTR [rbp-0x40]
  406ea3:	mov    rdi,QWORD PTR [rbp-0x8]
  406ea7:	xor    rdi,QWORD PTR fs:0x28
  406eb0:	je     406eb7 <_start@@Base+0x1d57>
  406eb2:	call   405070 <__stack_chk_fail@plt>
  406eb7:	leave  
  406eb8:	ret    
  406eb9:	push   rbp
  406eba:	mov    rbp,rsp
  406ebd:	sub    rsp,0x60
  406ec1:	mov    QWORD PTR [rbp-0x38],rdi
  406ec5:	mov    QWORD PTR [rbp-0x40],rsi
  406ec9:	mov    QWORD PTR [rbp-0x48],rdx
  406ecd:	mov    QWORD PTR [rbp-0x50],rcx
  406ed1:	mov    QWORD PTR [rbp-0x58],r8
  406ed5:	mov    rax,QWORD PTR fs:0x28
  406ede:	mov    QWORD PTR [rbp-0x8],rax
  406ee2:	xor    eax,eax
  406ee4:	mov    BYTE PTR [rbp-0x29],0x0
  406ee8:	mov    rax,QWORD PTR [rbp-0x58]
  406eec:	mov    BYTE PTR [rax],0x0
  406eef:	mov    rdx,QWORD PTR [rbp-0x48]
  406ef3:	mov    rcx,QWORD PTR [rbp-0x40]
  406ef7:	mov    rax,QWORD PTR [rbp-0x38]
  406efb:	mov    rsi,rcx
  406efe:	mov    rdi,rax
  406f01:	call   405825 <_start@@Base+0x6c5>
  406f06:	mov    QWORD PTR [rbp-0x40],rax
  406f0a:	mov    rax,QWORD PTR [rbp-0x40]
  406f0e:	cmp    rax,QWORD PTR [rbp-0x48]
  406f12:	jne    406f1d <_start@@Base+0x1dbd>
  406f14:	mov    rax,QWORD PTR [rbp-0x40]
  406f18:	jmp    406ff8 <_start@@Base+0x1e98>
  406f1d:	mov    rax,QWORD PTR [rbp-0x50]
  406f21:	mov    QWORD PTR [rbp-0x18],rax
  406f25:	mov    rax,QWORD PTR [rbp-0x18]
  406f29:	mov    rax,QWORD PTR [rax]
  406f2c:	mov    rdx,QWORD PTR [rbp-0x40]
  406f30:	mov    QWORD PTR [rbp-0x10],rdx
  406f34:	lea    r9,[rbp-0x24]
  406f38:	lea    r8,[rbp-0x20]
  406f3c:	lea    rcx,[rbp-0x28]
  406f40:	mov    rdx,QWORD PTR [rbp-0x48]
  406f44:	mov    rsi,QWORD PTR [rbp-0x10]
  406f48:	mov    rdi,QWORD PTR [rbp-0x38]
  406f4c:	call   rax
  406f4e:	mov    QWORD PTR [rbp-0x40],rax
  406f52:	mov    rax,QWORD PTR [rbp-0x40]
  406f56:	cmp    rax,QWORD PTR [rbp-0x48]
  406f5a:	jne    406f65 <_start@@Base+0x1e05>
  406f5c:	mov    rax,QWORD PTR [rbp-0x40]
  406f60:	jmp    406ff8 <_start@@Base+0x1e98>
  406f65:	mov    rax,QWORD PTR [rbp-0x40]
  406f69:	cmp    rax,QWORD PTR [rbp-0x10]
  406f6d:	jne    406f80 <_start@@Base+0x1e20>
  406f6f:	add    QWORD PTR [rbp-0x18],0x8
  406f74:	mov    rax,QWORD PTR [rbp-0x18]
  406f78:	mov    rax,QWORD PTR [rax]
  406f7b:	test   rax,rax
  406f7e:	jne    406f25 <_start@@Base+0x1dc5>
  406f80:	mov    rax,QWORD PTR [rbp-0x10]
  406f84:	cmp    rax,QWORD PTR [rbp-0x40]
  406f88:	jne    406fa5 <_start@@Base+0x1e45>
  406f8a:	mov    rdx,QWORD PTR [rbp-0x48]
  406f8e:	mov    rsi,QWORD PTR [rbp-0x40]
  406f92:	mov    rax,QWORD PTR [rbp-0x38]
  406f96:	mov    ecx,0x17
  406f9b:	mov    rdi,rax
  406f9e:	call   42665a <flatcc_json_parser_set_error@@Base>
  406fa3:	jmp    406ff8 <_start@@Base+0x1e98>
  406fa5:	mov    rdi,QWORD PTR [rbp-0x20]
  406fa9:	mov    ecx,DWORD PTR [rbp-0x28]
  406fac:	lea    r8,[rbp-0x29]
  406fb0:	mov    rdx,QWORD PTR [rbp-0x48]
  406fb4:	mov    rsi,QWORD PTR [rbp-0x40]
  406fb8:	mov    rax,QWORD PTR [rbp-0x38]
  406fbc:	mov    r9,r8
  406fbf:	mov    r8,rdi
  406fc2:	mov    rdi,rax
  406fc5:	call   405f2c <_start@@Base+0xdcc>
  406fca:	cmp    rax,QWORD PTR [rbp-0x48]
  406fce:	jne    406fd6 <_start@@Base+0x1e76>
  406fd0:	mov    rax,QWORD PTR [rbp-0x48]
  406fd4:	jmp    406ff8 <_start@@Base+0x1e98>
  406fd6:	mov    rax,QWORD PTR [rbp-0x58]
  406fda:	movzx  edx,BYTE PTR [rax]
  406fdd:	movzx  eax,BYTE PTR [rbp-0x29]
  406fe1:	add    edx,eax
  406fe3:	mov    rax,QWORD PTR [rbp-0x58]
  406fe7:	mov    BYTE PTR [rax],dl
  406fe9:	mov    eax,DWORD PTR [rbp-0x24]
  406fec:	test   eax,eax
  406fee:	jne    406f1d <_start@@Base+0x1dbd>
  406ff4:	mov    rax,QWORD PTR [rbp-0x40]
  406ff8:	mov    rdi,QWORD PTR [rbp-0x8]
  406ffc:	xor    rdi,QWORD PTR fs:0x28
  407005:	je     40700c <_start@@Base+0x1eac>
  407007:	call   405070 <__stack_chk_fail@plt>
  40700c:	leave  
  40700d:	ret    
  40700e:	push   rbp
  40700f:	mov    rbp,rsp
  407012:	sub    rsp,0x60
  407016:	mov    QWORD PTR [rbp-0x38],rdi
  40701a:	mov    QWORD PTR [rbp-0x40],rsi
  40701e:	mov    QWORD PTR [rbp-0x48],rdx
  407022:	mov    QWORD PTR [rbp-0x50],rcx
  407026:	mov    QWORD PTR [rbp-0x58],r8
  40702a:	mov    rax,QWORD PTR fs:0x28
  407033:	mov    QWORD PTR [rbp-0x8],rax
  407037:	xor    eax,eax
  407039:	mov    QWORD PTR [rbp-0x28],0x0
  407041:	mov    rax,QWORD PTR [rbp-0x58]
  407045:	mov    QWORD PTR [rax],0x0
  40704c:	mov    rdx,QWORD PTR [rbp-0x48]
  407050:	mov    rcx,QWORD PTR [rbp-0x40]
  407054:	mov    rax,QWORD PTR [rbp-0x38]
  407058:	mov    rsi,rcx
  40705b:	mov    rdi,rax
  40705e:	call   405825 <_start@@Base+0x6c5>
  407063:	mov    QWORD PTR [rbp-0x40],rax
  407067:	mov    rax,QWORD PTR [rbp-0x40]
  40706b:	cmp    rax,QWORD PTR [rbp-0x48]
  40706f:	jne    40707a <_start@@Base+0x1f1a>
  407071:	mov    rax,QWORD PTR [rbp-0x40]
  407075:	jmp    407157 <_start@@Base+0x1ff7>
  40707a:	mov    rax,QWORD PTR [rbp-0x50]
  40707e:	mov    QWORD PTR [rbp-0x18],rax
  407082:	mov    rax,QWORD PTR [rbp-0x18]
  407086:	mov    rax,QWORD PTR [rax]
  407089:	mov    rdx,QWORD PTR [rbp-0x40]
  40708d:	mov    QWORD PTR [rbp-0x10],rdx
  407091:	lea    r9,[rbp-0x2c]
  407095:	lea    r8,[rbp-0x20]
  407099:	lea    rcx,[rbp-0x30]
  40709d:	mov    rdx,QWORD PTR [rbp-0x48]
  4070a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4070a5:	mov    rdi,QWORD PTR [rbp-0x38]
  4070a9:	call   rax
  4070ab:	mov    QWORD PTR [rbp-0x40],rax
  4070af:	mov    rax,QWORD PTR [rbp-0x40]
  4070b3:	cmp    rax,QWORD PTR [rbp-0x48]
  4070b7:	jne    4070c2 <_start@@Base+0x1f62>
  4070b9:	mov    rax,QWORD PTR [rbp-0x40]
  4070bd:	jmp    407157 <_start@@Base+0x1ff7>
  4070c2:	mov    rax,QWORD PTR [rbp-0x40]
  4070c6:	cmp    rax,QWORD PTR [rbp-0x10]
  4070ca:	jne    4070dd <_start@@Base+0x1f7d>
  4070cc:	add    QWORD PTR [rbp-0x18],0x8
  4070d1:	mov    rax,QWORD PTR [rbp-0x18]
  4070d5:	mov    rax,QWORD PTR [rax]
  4070d8:	test   rax,rax
  4070db:	jne    407082 <_start@@Base+0x1f22>
  4070dd:	mov    rax,QWORD PTR [rbp-0x10]
  4070e1:	cmp    rax,QWORD PTR [rbp-0x40]
  4070e5:	jne    407102 <_start@@Base+0x1fa2>
  4070e7:	mov    rdx,QWORD PTR [rbp-0x48]
  4070eb:	mov    rsi,QWORD PTR [rbp-0x40]
  4070ef:	mov    rax,QWORD PTR [rbp-0x38]
  4070f3:	mov    ecx,0x17
  4070f8:	mov    rdi,rax
  4070fb:	call   42665a <flatcc_json_parser_set_error@@Base>
  407100:	jmp    407157 <_start@@Base+0x1ff7>
  407102:	mov    rdi,QWORD PTR [rbp-0x20]
  407106:	mov    ecx,DWORD PTR [rbp-0x30]
  407109:	lea    r8,[rbp-0x28]
  40710d:	mov    rdx,QWORD PTR [rbp-0x48]
  407111:	mov    rsi,QWORD PTR [rbp-0x40]
  407115:	mov    rax,QWORD PTR [rbp-0x38]
  407119:	mov    r9,r8
  40711c:	mov    r8,rdi
  40711f:	mov    rdi,rax
  407122:	call   405fa3 <_start@@Base+0xe43>
  407127:	cmp    rax,QWORD PTR [rbp-0x48]
  40712b:	jne    407133 <_start@@Base+0x1fd3>
  40712d:	mov    rax,QWORD PTR [rbp-0x48]
  407131:	jmp    407157 <_start@@Base+0x1ff7>
  407133:	mov    rax,QWORD PTR [rbp-0x58]
  407137:	mov    rdx,QWORD PTR [rax]
  40713a:	mov    rax,QWORD PTR [rbp-0x28]
  40713e:	add    rdx,rax
  407141:	mov    rax,QWORD PTR [rbp-0x58]
  407145:	mov    QWORD PTR [rax],rdx
  407148:	mov    eax,DWORD PTR [rbp-0x2c]
  40714b:	test   eax,eax
  40714d:	jne    40707a <_start@@Base+0x1f1a>
  407153:	mov    rax,QWORD PTR [rbp-0x40]
  407157:	mov    rdi,QWORD PTR [rbp-0x8]
  40715b:	xor    rdi,QWORD PTR fs:0x28
  407164:	je     40716b <_start@@Base+0x200b>
  407166:	call   405070 <__stack_chk_fail@plt>
  40716b:	leave  
  40716c:	ret    
  40716d:	push   rbp
  40716e:	mov    rbp,rsp
  407171:	sub    rsp,0x60
  407175:	mov    QWORD PTR [rbp-0x38],rdi
  407179:	mov    QWORD PTR [rbp-0x40],rsi
  40717d:	mov    QWORD PTR [rbp-0x48],rdx
  407181:	mov    QWORD PTR [rbp-0x50],rcx
  407185:	mov    QWORD PTR [rbp-0x58],r8
  407189:	mov    rax,QWORD PTR fs:0x28
  407192:	mov    QWORD PTR [rbp-0x8],rax
  407196:	xor    eax,eax
  407198:	mov    DWORD PTR [rbp-0x2c],0x0
  40719f:	mov    rax,QWORD PTR [rbp-0x58]
  4071a3:	mov    DWORD PTR [rax],0x0
  4071a9:	mov    rdx,QWORD PTR [rbp-0x48]
  4071ad:	mov    rcx,QWORD PTR [rbp-0x40]
  4071b1:	mov    rax,QWORD PTR [rbp-0x38]
  4071b5:	mov    rsi,rcx
  4071b8:	mov    rdi,rax
  4071bb:	call   405825 <_start@@Base+0x6c5>
  4071c0:	mov    QWORD PTR [rbp-0x40],rax
  4071c4:	mov    rax,QWORD PTR [rbp-0x40]
  4071c8:	cmp    rax,QWORD PTR [rbp-0x48]
  4071cc:	jne    4071d7 <_start@@Base+0x2077>
  4071ce:	mov    rax,QWORD PTR [rbp-0x40]
  4071d2:	jmp    4072b0 <_start@@Base+0x2150>
  4071d7:	mov    rax,QWORD PTR [rbp-0x50]
  4071db:	mov    QWORD PTR [rbp-0x18],rax
  4071df:	mov    rax,QWORD PTR [rbp-0x18]
  4071e3:	mov    rax,QWORD PTR [rax]
  4071e6:	mov    rdx,QWORD PTR [rbp-0x40]
  4071ea:	mov    QWORD PTR [rbp-0x10],rdx
  4071ee:	lea    r9,[rbp-0x24]
  4071f2:	lea    r8,[rbp-0x20]
  4071f6:	lea    rcx,[rbp-0x28]
  4071fa:	mov    rdx,QWORD PTR [rbp-0x48]
  4071fe:	mov    rsi,QWORD PTR [rbp-0x10]
  407202:	mov    rdi,QWORD PTR [rbp-0x38]
  407206:	call   rax
  407208:	mov    QWORD PTR [rbp-0x40],rax
  40720c:	mov    rax,QWORD PTR [rbp-0x40]
  407210:	cmp    rax,QWORD PTR [rbp-0x48]
  407214:	jne    40721f <_start@@Base+0x20bf>
  407216:	mov    rax,QWORD PTR [rbp-0x40]
  40721a:	jmp    4072b0 <_start@@Base+0x2150>
  40721f:	mov    rax,QWORD PTR [rbp-0x40]
  407223:	cmp    rax,QWORD PTR [rbp-0x10]
  407227:	jne    40723a <_start@@Base+0x20da>
  407229:	add    QWORD PTR [rbp-0x18],0x8
  40722e:	mov    rax,QWORD PTR [rbp-0x18]
  407232:	mov    rax,QWORD PTR [rax]
  407235:	test   rax,rax
  407238:	jne    4071df <_start@@Base+0x207f>
  40723a:	mov    rax,QWORD PTR [rbp-0x10]
  40723e:	cmp    rax,QWORD PTR [rbp-0x40]
  407242:	jne    40725f <_start@@Base+0x20ff>
  407244:	mov    rdx,QWORD PTR [rbp-0x48]
  407248:	mov    rsi,QWORD PTR [rbp-0x40]
  40724c:	mov    rax,QWORD PTR [rbp-0x38]
  407250:	mov    ecx,0x17
  407255:	mov    rdi,rax
  407258:	call   42665a <flatcc_json_parser_set_error@@Base>
  40725d:	jmp    4072b0 <_start@@Base+0x2150>
  40725f:	mov    rdi,QWORD PTR [rbp-0x20]
  407263:	mov    ecx,DWORD PTR [rbp-0x28]
  407266:	lea    r8,[rbp-0x2c]
  40726a:	mov    rdx,QWORD PTR [rbp-0x48]
  40726e:	mov    rsi,QWORD PTR [rbp-0x40]
  407272:	mov    rax,QWORD PTR [rbp-0x38]
  407276:	mov    r9,r8
  407279:	mov    r8,rdi
  40727c:	mov    rdi,rax
  40727f:	call   40603b <_start@@Base+0xedb>
  407284:	cmp    rax,QWORD PTR [rbp-0x48]
  407288:	jne    407290 <_start@@Base+0x2130>
  40728a:	mov    rax,QWORD PTR [rbp-0x48]
  40728e:	jmp    4072b0 <_start@@Base+0x2150>
  407290:	mov    rax,QWORD PTR [rbp-0x58]
  407294:	mov    edx,DWORD PTR [rax]
  407296:	mov    eax,DWORD PTR [rbp-0x2c]
  407299:	add    edx,eax
  40729b:	mov    rax,QWORD PTR [rbp-0x58]
  40729f:	mov    DWORD PTR [rax],edx
  4072a1:	mov    eax,DWORD PTR [rbp-0x24]
  4072a4:	test   eax,eax
  4072a6:	jne    4071d7 <_start@@Base+0x2077>
  4072ac:	mov    rax,QWORD PTR [rbp-0x40]
  4072b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4072b4:	xor    rdi,QWORD PTR fs:0x28
  4072bd:	je     4072c4 <_start@@Base+0x2164>
  4072bf:	call   405070 <__stack_chk_fail@plt>
  4072c4:	leave  
  4072c5:	ret    
  4072c6:	push   rbp
  4072c7:	mov    rbp,rsp
  4072ca:	sub    rsp,0x60
  4072ce:	mov    QWORD PTR [rbp-0x38],rdi
  4072d2:	mov    QWORD PTR [rbp-0x40],rsi
  4072d6:	mov    QWORD PTR [rbp-0x48],rdx
  4072da:	mov    QWORD PTR [rbp-0x50],rcx
  4072de:	mov    QWORD PTR [rbp-0x58],r8
  4072e2:	mov    rax,QWORD PTR fs:0x28
  4072eb:	mov    QWORD PTR [rbp-0x8],rax
  4072ef:	xor    eax,eax
  4072f1:	mov    WORD PTR [rbp-0x2a],0x0
  4072f7:	mov    rax,QWORD PTR [rbp-0x58]
  4072fb:	mov    WORD PTR [rax],0x0
  407300:	mov    rdx,QWORD PTR [rbp-0x48]
  407304:	mov    rcx,QWORD PTR [rbp-0x40]
  407308:	mov    rax,QWORD PTR [rbp-0x38]
  40730c:	mov    rsi,rcx
  40730f:	mov    rdi,rax
  407312:	call   405825 <_start@@Base+0x6c5>
  407317:	mov    QWORD PTR [rbp-0x40],rax
  40731b:	mov    rax,QWORD PTR [rbp-0x40]
  40731f:	cmp    rax,QWORD PTR [rbp-0x48]
  407323:	jne    40732e <_start@@Base+0x21ce>
  407325:	mov    rax,QWORD PTR [rbp-0x40]
  407329:	jmp    40740e <_start@@Base+0x22ae>
  40732e:	mov    rax,QWORD PTR [rbp-0x50]
  407332:	mov    QWORD PTR [rbp-0x18],rax
  407336:	mov    rax,QWORD PTR [rbp-0x18]
  40733a:	mov    rax,QWORD PTR [rax]
  40733d:	mov    rdx,QWORD PTR [rbp-0x40]
  407341:	mov    QWORD PTR [rbp-0x10],rdx
  407345:	lea    r9,[rbp-0x24]
  407349:	lea    r8,[rbp-0x20]
  40734d:	lea    rcx,[rbp-0x28]
  407351:	mov    rdx,QWORD PTR [rbp-0x48]
  407355:	mov    rsi,QWORD PTR [rbp-0x10]
  407359:	mov    rdi,QWORD PTR [rbp-0x38]
  40735d:	call   rax
  40735f:	mov    QWORD PTR [rbp-0x40],rax
  407363:	mov    rax,QWORD PTR [rbp-0x40]
  407367:	cmp    rax,QWORD PTR [rbp-0x48]
  40736b:	jne    407376 <_start@@Base+0x2216>
  40736d:	mov    rax,QWORD PTR [rbp-0x40]
  407371:	jmp    40740e <_start@@Base+0x22ae>
  407376:	mov    rax,QWORD PTR [rbp-0x40]
  40737a:	cmp    rax,QWORD PTR [rbp-0x10]
  40737e:	jne    407391 <_start@@Base+0x2231>
  407380:	add    QWORD PTR [rbp-0x18],0x8
  407385:	mov    rax,QWORD PTR [rbp-0x18]
  407389:	mov    rax,QWORD PTR [rax]
  40738c:	test   rax,rax
  40738f:	jne    407336 <_start@@Base+0x21d6>
  407391:	mov    rax,QWORD PTR [rbp-0x10]
  407395:	cmp    rax,QWORD PTR [rbp-0x40]
  407399:	jne    4073b6 <_start@@Base+0x2256>
  40739b:	mov    rdx,QWORD PTR [rbp-0x48]
  40739f:	mov    rsi,QWORD PTR [rbp-0x40]
  4073a3:	mov    rax,QWORD PTR [rbp-0x38]
  4073a7:	mov    ecx,0x17
  4073ac:	mov    rdi,rax
  4073af:	call   42665a <flatcc_json_parser_set_error@@Base>
  4073b4:	jmp    40740e <_start@@Base+0x22ae>
  4073b6:	mov    rdi,QWORD PTR [rbp-0x20]
  4073ba:	mov    ecx,DWORD PTR [rbp-0x28]
  4073bd:	lea    r8,[rbp-0x2a]
  4073c1:	mov    rdx,QWORD PTR [rbp-0x48]
  4073c5:	mov    rsi,QWORD PTR [rbp-0x40]
  4073c9:	mov    rax,QWORD PTR [rbp-0x38]
  4073cd:	mov    r9,r8
  4073d0:	mov    r8,rdi
  4073d3:	mov    rdi,rax
  4073d6:	call   4060cd <_start@@Base+0xf6d>
  4073db:	cmp    rax,QWORD PTR [rbp-0x48]
  4073df:	jne    4073e7 <_start@@Base+0x2287>
  4073e1:	mov    rax,QWORD PTR [rbp-0x48]
  4073e5:	jmp    40740e <_start@@Base+0x22ae>
  4073e7:	mov    rax,QWORD PTR [rbp-0x58]
  4073eb:	movzx  eax,WORD PTR [rax]
  4073ee:	mov    edx,eax
  4073f0:	movzx  eax,WORD PTR [rbp-0x2a]
  4073f4:	add    eax,edx
  4073f6:	mov    edx,eax
  4073f8:	mov    rax,QWORD PTR [rbp-0x58]
  4073fc:	mov    WORD PTR [rax],dx
  4073ff:	mov    eax,DWORD PTR [rbp-0x24]
  407402:	test   eax,eax
  407404:	jne    40732e <_start@@Base+0x21ce>
  40740a:	mov    rax,QWORD PTR [rbp-0x40]
  40740e:	mov    rdi,QWORD PTR [rbp-0x8]
  407412:	xor    rdi,QWORD PTR fs:0x28
  40741b:	je     407422 <_start@@Base+0x22c2>
  40741d:	call   405070 <__stack_chk_fail@plt>
  407422:	leave  
  407423:	ret    
  407424:	push   rbp
  407425:	mov    rbp,rsp
  407428:	sub    rsp,0x60
  40742c:	mov    QWORD PTR [rbp-0x38],rdi
  407430:	mov    QWORD PTR [rbp-0x40],rsi
  407434:	mov    QWORD PTR [rbp-0x48],rdx
  407438:	mov    QWORD PTR [rbp-0x50],rcx
  40743c:	mov    QWORD PTR [rbp-0x58],r8
  407440:	mov    rax,QWORD PTR fs:0x28
  407449:	mov    QWORD PTR [rbp-0x8],rax
  40744d:	xor    eax,eax
  40744f:	mov    BYTE PTR [rbp-0x29],0x0
  407453:	mov    rax,QWORD PTR [rbp-0x58]
  407457:	mov    BYTE PTR [rax],0x0
  40745a:	mov    rdx,QWORD PTR [rbp-0x48]
  40745e:	mov    rcx,QWORD PTR [rbp-0x40]
  407462:	mov    rax,QWORD PTR [rbp-0x38]
  407466:	mov    rsi,rcx
  407469:	mov    rdi,rax
  40746c:	call   405825 <_start@@Base+0x6c5>
  407471:	mov    QWORD PTR [rbp-0x40],rax
  407475:	mov    rax,QWORD PTR [rbp-0x40]
  407479:	cmp    rax,QWORD PTR [rbp-0x48]
  40747d:	jne    407488 <_start@@Base+0x2328>
  40747f:	mov    rax,QWORD PTR [rbp-0x40]
  407483:	jmp    407567 <_start@@Base+0x2407>
  407488:	mov    rax,QWORD PTR [rbp-0x50]
  40748c:	mov    QWORD PTR [rbp-0x18],rax
  407490:	mov    rax,QWORD PTR [rbp-0x18]
  407494:	mov    rax,QWORD PTR [rax]
  407497:	mov    rdx,QWORD PTR [rbp-0x40]
  40749b:	mov    QWORD PTR [rbp-0x10],rdx
  40749f:	lea    r9,[rbp-0x24]
  4074a3:	lea    r8,[rbp-0x20]
  4074a7:	lea    rcx,[rbp-0x28]
  4074ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4074af:	mov    rsi,QWORD PTR [rbp-0x10]
  4074b3:	mov    rdi,QWORD PTR [rbp-0x38]
  4074b7:	call   rax
  4074b9:	mov    QWORD PTR [rbp-0x40],rax
  4074bd:	mov    rax,QWORD PTR [rbp-0x40]
  4074c1:	cmp    rax,QWORD PTR [rbp-0x48]
  4074c5:	jne    4074d0 <_start@@Base+0x2370>
  4074c7:	mov    rax,QWORD PTR [rbp-0x40]
  4074cb:	jmp    407567 <_start@@Base+0x2407>
  4074d0:	mov    rax,QWORD PTR [rbp-0x40]
  4074d4:	cmp    rax,QWORD PTR [rbp-0x10]
  4074d8:	jne    4074eb <_start@@Base+0x238b>
  4074da:	add    QWORD PTR [rbp-0x18],0x8
  4074df:	mov    rax,QWORD PTR [rbp-0x18]
  4074e3:	mov    rax,QWORD PTR [rax]
  4074e6:	test   rax,rax
  4074e9:	jne    407490 <_start@@Base+0x2330>
  4074eb:	mov    rax,QWORD PTR [rbp-0x10]
  4074ef:	cmp    rax,QWORD PTR [rbp-0x40]
  4074f3:	jne    407510 <_start@@Base+0x23b0>
  4074f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4074f9:	mov    rsi,QWORD PTR [rbp-0x40]
  4074fd:	mov    rax,QWORD PTR [rbp-0x38]
  407501:	mov    ecx,0x17
  407506:	mov    rdi,rax
  407509:	call   42665a <flatcc_json_parser_set_error@@Base>
  40750e:	jmp    407567 <_start@@Base+0x2407>
  407510:	mov    rdi,QWORD PTR [rbp-0x20]
  407514:	mov    ecx,DWORD PTR [rbp-0x28]
  407517:	lea    r8,[rbp-0x29]
  40751b:	mov    rdx,QWORD PTR [rbp-0x48]
  40751f:	mov    rsi,QWORD PTR [rbp-0x40]
  407523:	mov    rax,QWORD PTR [rbp-0x38]
  407527:	mov    r9,r8
  40752a:	mov    r8,rdi
  40752d:	mov    rdi,rax
  407530:	call   406160 <_start@@Base+0x1000>
  407535:	cmp    rax,QWORD PTR [rbp-0x48]
  407539:	jne    407541 <_start@@Base+0x23e1>
  40753b:	mov    rax,QWORD PTR [rbp-0x48]
  40753f:	jmp    407567 <_start@@Base+0x2407>
  407541:	mov    rax,QWORD PTR [rbp-0x58]
  407545:	movzx  eax,BYTE PTR [rax]
  407548:	mov    edx,eax
  40754a:	movzx  eax,BYTE PTR [rbp-0x29]
  40754e:	add    eax,edx
  407550:	mov    edx,eax
  407552:	mov    rax,QWORD PTR [rbp-0x58]
  407556:	mov    BYTE PTR [rax],dl
  407558:	mov    eax,DWORD PTR [rbp-0x24]
  40755b:	test   eax,eax
  40755d:	jne    407488 <_start@@Base+0x2328>
  407563:	mov    rax,QWORD PTR [rbp-0x40]
  407567:	mov    rdi,QWORD PTR [rbp-0x8]
  40756b:	xor    rdi,QWORD PTR fs:0x28
  407574:	je     40757b <_start@@Base+0x241b>
  407576:	call   405070 <__stack_chk_fail@plt>
  40757b:	leave  
  40757c:	ret    
  40757d:	push   rbp
  40757e:	mov    rbp,rsp
  407581:	sub    rsp,0x60
  407585:	mov    QWORD PTR [rbp-0x38],rdi
  407589:	mov    QWORD PTR [rbp-0x40],rsi
  40758d:	mov    QWORD PTR [rbp-0x48],rdx
  407591:	mov    QWORD PTR [rbp-0x50],rcx
  407595:	mov    QWORD PTR [rbp-0x58],r8
  407599:	mov    rax,QWORD PTR fs:0x28
  4075a2:	mov    QWORD PTR [rbp-0x8],rax
  4075a6:	xor    eax,eax
  4075a8:	mov    BYTE PTR [rbp-0x29],0x0
  4075ac:	mov    rax,QWORD PTR [rbp-0x58]
  4075b0:	mov    BYTE PTR [rax],0x0
  4075b3:	mov    rdx,QWORD PTR [rbp-0x48]
  4075b7:	mov    rcx,QWORD PTR [rbp-0x40]
  4075bb:	mov    rax,QWORD PTR [rbp-0x38]
  4075bf:	mov    rsi,rcx
  4075c2:	mov    rdi,rax
  4075c5:	call   405825 <_start@@Base+0x6c5>
  4075ca:	mov    QWORD PTR [rbp-0x40],rax
  4075ce:	mov    rax,QWORD PTR [rbp-0x40]
  4075d2:	cmp    rax,QWORD PTR [rbp-0x48]
  4075d6:	jne    4075e1 <_start@@Base+0x2481>
  4075d8:	mov    rax,QWORD PTR [rbp-0x40]
  4075dc:	jmp    4076bc <_start@@Base+0x255c>
  4075e1:	mov    rax,QWORD PTR [rbp-0x50]
  4075e5:	mov    QWORD PTR [rbp-0x18],rax
  4075e9:	mov    rax,QWORD PTR [rbp-0x18]
  4075ed:	mov    rax,QWORD PTR [rax]
  4075f0:	mov    rdx,QWORD PTR [rbp-0x40]
  4075f4:	mov    QWORD PTR [rbp-0x10],rdx
  4075f8:	lea    r9,[rbp-0x24]
  4075fc:	lea    r8,[rbp-0x20]
  407600:	lea    rcx,[rbp-0x28]
  407604:	mov    rdx,QWORD PTR [rbp-0x48]
  407608:	mov    rsi,QWORD PTR [rbp-0x10]
  40760c:	mov    rdi,QWORD PTR [rbp-0x38]
  407610:	call   rax
  407612:	mov    QWORD PTR [rbp-0x40],rax
  407616:	mov    rax,QWORD PTR [rbp-0x40]
  40761a:	cmp    rax,QWORD PTR [rbp-0x48]
  40761e:	jne    407629 <_start@@Base+0x24c9>
  407620:	mov    rax,QWORD PTR [rbp-0x40]
  407624:	jmp    4076bc <_start@@Base+0x255c>
  407629:	mov    rax,QWORD PTR [rbp-0x40]
  40762d:	cmp    rax,QWORD PTR [rbp-0x10]
  407631:	jne    407644 <_start@@Base+0x24e4>
  407633:	add    QWORD PTR [rbp-0x18],0x8
  407638:	mov    rax,QWORD PTR [rbp-0x18]
  40763c:	mov    rax,QWORD PTR [rax]
  40763f:	test   rax,rax
  407642:	jne    4075e9 <_start@@Base+0x2489>
  407644:	mov    rax,QWORD PTR [rbp-0x10]
  407648:	cmp    rax,QWORD PTR [rbp-0x40]
  40764c:	jne    407669 <_start@@Base+0x2509>
  40764e:	mov    rdx,QWORD PTR [rbp-0x48]
  407652:	mov    rsi,QWORD PTR [rbp-0x40]
  407656:	mov    rax,QWORD PTR [rbp-0x38]
  40765a:	mov    ecx,0x17
  40765f:	mov    rdi,rax
  407662:	call   42665a <flatcc_json_parser_set_error@@Base>
  407667:	jmp    4076bc <_start@@Base+0x255c>
  407669:	mov    rdi,QWORD PTR [rbp-0x20]
  40766d:	mov    ecx,DWORD PTR [rbp-0x28]
  407670:	lea    r8,[rbp-0x29]
  407674:	mov    rdx,QWORD PTR [rbp-0x48]
  407678:	mov    rsi,QWORD PTR [rbp-0x40]
  40767c:	mov    rax,QWORD PTR [rbp-0x38]
  407680:	mov    r9,r8
  407683:	mov    r8,rdi
  407686:	mov    rdi,rax
  407689:	call   405de6 <_start@@Base+0xc86>
  40768e:	cmp    rax,QWORD PTR [rbp-0x48]
  407692:	jne    40769a <_start@@Base+0x253a>
  407694:	mov    rax,QWORD PTR [rbp-0x48]
  407698:	jmp    4076bc <_start@@Base+0x255c>
  40769a:	mov    rax,QWORD PTR [rbp-0x58]
  40769e:	movzx  edx,BYTE PTR [rax]
  4076a1:	movzx  eax,BYTE PTR [rbp-0x29]
  4076a5:	add    edx,eax
  4076a7:	mov    rax,QWORD PTR [rbp-0x58]
  4076ab:	mov    BYTE PTR [rax],dl
  4076ad:	mov    eax,DWORD PTR [rbp-0x24]
  4076b0:	test   eax,eax
  4076b2:	jne    4075e1 <_start@@Base+0x2481>
  4076b8:	mov    rax,QWORD PTR [rbp-0x40]
  4076bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4076c0:	xor    rdi,QWORD PTR fs:0x28
  4076c9:	je     4076d0 <_start@@Base+0x2570>
  4076cb:	call   405070 <__stack_chk_fail@plt>
  4076d0:	leave  
  4076d1:	ret    
  4076d2:	push   rbp
  4076d3:	mov    rbp,rsp
  4076d6:	sub    rsp,0x60
  4076da:	mov    QWORD PTR [rbp-0x38],rdi
  4076de:	mov    QWORD PTR [rbp-0x40],rsi
  4076e2:	mov    QWORD PTR [rbp-0x48],rdx
  4076e6:	mov    QWORD PTR [rbp-0x50],rcx
  4076ea:	mov    QWORD PTR [rbp-0x58],r8
  4076ee:	mov    rax,QWORD PTR fs:0x28
  4076f7:	mov    QWORD PTR [rbp-0x8],rax
  4076fb:	xor    eax,eax
  4076fd:	vxorps xmm0,xmm0,xmm0
  407701:	vmovss DWORD PTR [rbp-0x2c],xmm0
  407706:	mov    rax,QWORD PTR [rbp-0x58]
  40770a:	vxorps xmm0,xmm0,xmm0
  40770e:	vmovss DWORD PTR [rax],xmm0
  407712:	mov    rdx,QWORD PTR [rbp-0x48]
  407716:	mov    rcx,QWORD PTR [rbp-0x40]
  40771a:	mov    rax,QWORD PTR [rbp-0x38]
  40771e:	mov    rsi,rcx
  407721:	mov    rdi,rax
  407724:	call   405825 <_start@@Base+0x6c5>
  407729:	mov    QWORD PTR [rbp-0x40],rax
  40772d:	mov    rax,QWORD PTR [rbp-0x40]
  407731:	cmp    rax,QWORD PTR [rbp-0x48]
  407735:	jne    407740 <_start@@Base+0x25e0>
  407737:	mov    rax,QWORD PTR [rbp-0x40]
  40773b:	jmp    407821 <_start@@Base+0x26c1>
  407740:	mov    rax,QWORD PTR [rbp-0x50]
  407744:	mov    QWORD PTR [rbp-0x18],rax
  407748:	mov    rax,QWORD PTR [rbp-0x18]
  40774c:	mov    rax,QWORD PTR [rax]
  40774f:	mov    rdx,QWORD PTR [rbp-0x40]
  407753:	mov    QWORD PTR [rbp-0x10],rdx
  407757:	lea    r9,[rbp-0x24]
  40775b:	lea    r8,[rbp-0x20]
  40775f:	lea    rcx,[rbp-0x28]
  407763:	mov    rdx,QWORD PTR [rbp-0x48]
  407767:	mov    rsi,QWORD PTR [rbp-0x10]
  40776b:	mov    rdi,QWORD PTR [rbp-0x38]
  40776f:	call   rax
  407771:	mov    QWORD PTR [rbp-0x40],rax
  407775:	mov    rax,QWORD PTR [rbp-0x40]
  407779:	cmp    rax,QWORD PTR [rbp-0x48]
  40777d:	jne    407788 <_start@@Base+0x2628>
  40777f:	mov    rax,QWORD PTR [rbp-0x40]
  407783:	jmp    407821 <_start@@Base+0x26c1>
  407788:	mov    rax,QWORD PTR [rbp-0x40]
  40778c:	cmp    rax,QWORD PTR [rbp-0x10]
  407790:	jne    4077a3 <_start@@Base+0x2643>
  407792:	add    QWORD PTR [rbp-0x18],0x8
  407797:	mov    rax,QWORD PTR [rbp-0x18]
  40779b:	mov    rax,QWORD PTR [rax]
  40779e:	test   rax,rax
  4077a1:	jne    407748 <_start@@Base+0x25e8>
  4077a3:	mov    rax,QWORD PTR [rbp-0x10]
  4077a7:	cmp    rax,QWORD PTR [rbp-0x40]
  4077ab:	jne    4077c8 <_start@@Base+0x2668>
  4077ad:	mov    rdx,QWORD PTR [rbp-0x48]
  4077b1:	mov    rsi,QWORD PTR [rbp-0x40]
  4077b5:	mov    rax,QWORD PTR [rbp-0x38]
  4077b9:	mov    ecx,0x17
  4077be:	mov    rdi,rax
  4077c1:	call   42665a <flatcc_json_parser_set_error@@Base>
  4077c6:	jmp    407821 <_start@@Base+0x26c1>
  4077c8:	mov    rdi,QWORD PTR [rbp-0x20]
  4077cc:	mov    ecx,DWORD PTR [rbp-0x28]
  4077cf:	lea    r8,[rbp-0x2c]
  4077d3:	mov    rdx,QWORD PTR [rbp-0x48]
  4077d7:	mov    rsi,QWORD PTR [rbp-0x40]
  4077db:	mov    rax,QWORD PTR [rbp-0x38]
  4077df:	mov    r9,r8
  4077e2:	mov    r8,rdi
  4077e5:	mov    rdi,rax
  4077e8:	call   4061ee <_start@@Base+0x108e>
  4077ed:	cmp    rax,QWORD PTR [rbp-0x48]
  4077f1:	jne    4077f9 <_start@@Base+0x2699>
  4077f3:	mov    rax,QWORD PTR [rbp-0x48]
  4077f7:	jmp    407821 <_start@@Base+0x26c1>
  4077f9:	mov    rax,QWORD PTR [rbp-0x58]
  4077fd:	vmovss xmm1,DWORD PTR [rax]
  407801:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  407806:	vaddss xmm0,xmm1,xmm0
  40780a:	mov    rax,QWORD PTR [rbp-0x58]
  40780e:	vmovss DWORD PTR [rax],xmm0
  407812:	mov    eax,DWORD PTR [rbp-0x24]
  407815:	test   eax,eax
  407817:	jne    407740 <_start@@Base+0x25e0>
  40781d:	mov    rax,QWORD PTR [rbp-0x40]
  407821:	mov    rdi,QWORD PTR [rbp-0x8]
  407825:	xor    rdi,QWORD PTR fs:0x28
  40782e:	je     407835 <_start@@Base+0x26d5>
  407830:	call   405070 <__stack_chk_fail@plt>
  407835:	leave  
  407836:	ret    
  407837:	push   rbp
  407838:	mov    rbp,rsp
  40783b:	sub    rsp,0x60
  40783f:	mov    QWORD PTR [rbp-0x38],rdi
  407843:	mov    QWORD PTR [rbp-0x40],rsi
  407847:	mov    QWORD PTR [rbp-0x48],rdx
  40784b:	mov    QWORD PTR [rbp-0x50],rcx
  40784f:	mov    QWORD PTR [rbp-0x58],r8
  407853:	mov    rax,QWORD PTR fs:0x28
  40785c:	mov    QWORD PTR [rbp-0x8],rax
  407860:	xor    eax,eax
  407862:	vxorpd xmm0,xmm0,xmm0
  407866:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40786b:	mov    rax,QWORD PTR [rbp-0x58]
  40786f:	vxorpd xmm0,xmm0,xmm0
  407873:	vmovsd QWORD PTR [rax],xmm0
  407877:	mov    rdx,QWORD PTR [rbp-0x48]
  40787b:	mov    rcx,QWORD PTR [rbp-0x40]
  40787f:	mov    rax,QWORD PTR [rbp-0x38]
  407883:	mov    rsi,rcx
  407886:	mov    rdi,rax
  407889:	call   405825 <_start@@Base+0x6c5>
  40788e:	mov    QWORD PTR [rbp-0x40],rax
  407892:	mov    rax,QWORD PTR [rbp-0x40]
  407896:	cmp    rax,QWORD PTR [rbp-0x48]
  40789a:	jne    4078a5 <_start@@Base+0x2745>
  40789c:	mov    rax,QWORD PTR [rbp-0x40]
  4078a0:	jmp    407986 <_start@@Base+0x2826>
  4078a5:	mov    rax,QWORD PTR [rbp-0x50]
  4078a9:	mov    QWORD PTR [rbp-0x18],rax
  4078ad:	mov    rax,QWORD PTR [rbp-0x18]
  4078b1:	mov    rax,QWORD PTR [rax]
  4078b4:	mov    rdx,QWORD PTR [rbp-0x40]
  4078b8:	mov    QWORD PTR [rbp-0x10],rdx
  4078bc:	lea    r9,[rbp-0x2c]
  4078c0:	lea    r8,[rbp-0x20]
  4078c4:	lea    rcx,[rbp-0x30]
  4078c8:	mov    rdx,QWORD PTR [rbp-0x48]
  4078cc:	mov    rsi,QWORD PTR [rbp-0x10]
  4078d0:	mov    rdi,QWORD PTR [rbp-0x38]
  4078d4:	call   rax
  4078d6:	mov    QWORD PTR [rbp-0x40],rax
  4078da:	mov    rax,QWORD PTR [rbp-0x40]
  4078de:	cmp    rax,QWORD PTR [rbp-0x48]
  4078e2:	jne    4078ed <_start@@Base+0x278d>
  4078e4:	mov    rax,QWORD PTR [rbp-0x40]
  4078e8:	jmp    407986 <_start@@Base+0x2826>
  4078ed:	mov    rax,QWORD PTR [rbp-0x40]
  4078f1:	cmp    rax,QWORD PTR [rbp-0x10]
  4078f5:	jne    407908 <_start@@Base+0x27a8>
  4078f7:	add    QWORD PTR [rbp-0x18],0x8
  4078fc:	mov    rax,QWORD PTR [rbp-0x18]
  407900:	mov    rax,QWORD PTR [rax]
  407903:	test   rax,rax
  407906:	jne    4078ad <_start@@Base+0x274d>
  407908:	mov    rax,QWORD PTR [rbp-0x10]
  40790c:	cmp    rax,QWORD PTR [rbp-0x40]
  407910:	jne    40792d <_start@@Base+0x27cd>
  407912:	mov    rdx,QWORD PTR [rbp-0x48]
  407916:	mov    rsi,QWORD PTR [rbp-0x40]
  40791a:	mov    rax,QWORD PTR [rbp-0x38]
  40791e:	mov    ecx,0x17
  407923:	mov    rdi,rax
  407926:	call   42665a <flatcc_json_parser_set_error@@Base>
  40792b:	jmp    407986 <_start@@Base+0x2826>
  40792d:	mov    rdi,QWORD PTR [rbp-0x20]
  407931:	mov    ecx,DWORD PTR [rbp-0x30]
  407934:	lea    r8,[rbp-0x28]
  407938:	mov    rdx,QWORD PTR [rbp-0x48]
  40793c:	mov    rsi,QWORD PTR [rbp-0x40]
  407940:	mov    rax,QWORD PTR [rbp-0x38]
  407944:	mov    r9,r8
  407947:	mov    r8,rdi
  40794a:	mov    rdi,rax
  40794d:	call   406285 <_start@@Base+0x1125>
  407952:	cmp    rax,QWORD PTR [rbp-0x48]
  407956:	jne    40795e <_start@@Base+0x27fe>
  407958:	mov    rax,QWORD PTR [rbp-0x48]
  40795c:	jmp    407986 <_start@@Base+0x2826>
  40795e:	mov    rax,QWORD PTR [rbp-0x58]
  407962:	vmovsd xmm1,QWORD PTR [rax]
  407966:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  40796b:	vaddsd xmm0,xmm1,xmm0
  40796f:	mov    rax,QWORD PTR [rbp-0x58]
  407973:	vmovsd QWORD PTR [rax],xmm0
  407977:	mov    eax,DWORD PTR [rbp-0x2c]
  40797a:	test   eax,eax
  40797c:	jne    4078a5 <_start@@Base+0x2745>
  407982:	mov    rax,QWORD PTR [rbp-0x40]
  407986:	mov    rdi,QWORD PTR [rbp-0x8]
  40798a:	xor    rdi,QWORD PTR fs:0x28
  407993:	je     40799a <_start@@Base+0x283a>
  407995:	call   405070 <__stack_chk_fail@plt>
  40799a:	leave  
  40799b:	ret    
  40799c:	push   rbp
  40799d:	mov    rbp,rsp
  4079a0:	sub    rsp,0x50
  4079a4:	mov    QWORD PTR [rbp-0x28],rdi
  4079a8:	mov    QWORD PTR [rbp-0x30],rsi
  4079ac:	mov    QWORD PTR [rbp-0x38],rdx
  4079b0:	mov    QWORD PTR [rbp-0x40],rcx
  4079b4:	mov    QWORD PTR [rbp-0x48],r8
  4079b8:	mov    QWORD PTR [rbp-0x50],r9
  4079bc:	mov    rax,QWORD PTR [rbp-0x30]
  4079c0:	mov    QWORD PTR [rbp-0x18],rax
  4079c4:	mov    rdx,QWORD PTR [rbp-0x38]
  4079c8:	mov    rax,QWORD PTR [rbp-0x30]
  4079cc:	mov    rsi,rdx
  4079cf:	mov    rdi,rax
  4079d2:	call   405779 <_start@@Base+0x619>
  4079d7:	mov    QWORD PTR [rbp-0x10],rax
  4079db:	movabs rax,0xffffff0000000000
  4079e5:	and    rax,QWORD PTR [rbp-0x10]
  4079e9:	mov    rdx,rax
  4079ec:	movabs rax,0x466f6f0000000000
  4079f6:	cmp    rdx,rax
  4079f9:	jne    407a4b <_start@@Base+0x28eb>
  4079fb:	mov    rax,QWORD PTR [rbp-0x30]
  4079ff:	mov    QWORD PTR [rbp-0x8],rax
  407a03:	mov    rcx,QWORD PTR [rbp-0x50]
  407a07:	mov    rdx,QWORD PTR [rbp-0x38]
  407a0b:	mov    rsi,QWORD PTR [rbp-0x8]
  407a0f:	mov    rax,QWORD PTR [rbp-0x28]
  407a13:	mov    r8,rcx
  407a16:	mov    ecx,0x3
  407a1b:	mov    rdi,rax
  407a1e:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  407a23:	mov    QWORD PTR [rbp-0x30],rax
  407a27:	mov    rax,QWORD PTR [rbp-0x30]
  407a2b:	cmp    rax,QWORD PTR [rbp-0x8]
  407a2f:	je     407a4e <_start@@Base+0x28ee>
  407a31:	mov    rax,QWORD PTR [rbp-0x48]
  407a35:	mov    QWORD PTR [rax],0x11
  407a3c:	mov    rax,QWORD PTR [rbp-0x40]
  407a40:	mov    DWORD PTR [rax],0x0
  407a46:	jmp    407afe <_start@@Base+0x299e>
  407a4b:	nop
  407a4c:	jmp    407a4f <_start@@Base+0x28ef>
  407a4e:	nop
  407a4f:	movabs rax,0x496e636c75646556
  407a59:	cmp    QWORD PTR [rbp-0x10],rax
  407a5d:	jne    407af8 <_start@@Base+0x2998>
  407a63:	add    QWORD PTR [rbp-0x30],0x8
  407a68:	mov    rdx,QWORD PTR [rbp-0x38]
  407a6c:	mov    rax,QWORD PTR [rbp-0x30]
  407a70:	mov    rsi,rdx
  407a73:	mov    rdi,rax
  407a76:	call   405779 <_start@@Base+0x619>
  407a7b:	mov    QWORD PTR [rbp-0x10],rax
  407a7f:	movabs rax,0xffff000000000000
  407a89:	and    rax,QWORD PTR [rbp-0x10]
  407a8d:	mov    rdx,rax
  407a90:	movabs rax,0x616c000000000000
  407a9a:	cmp    rdx,rax
  407a9d:	jne    407af2 <_start@@Base+0x2992>
  407a9f:	mov    rax,QWORD PTR [rbp-0x30]
  407aa3:	mov    QWORD PTR [rbp-0x8],rax
  407aa7:	mov    rcx,QWORD PTR [rbp-0x50]
  407aab:	mov    rdx,QWORD PTR [rbp-0x38]
  407aaf:	mov    rsi,QWORD PTR [rbp-0x8]
  407ab3:	mov    rax,QWORD PTR [rbp-0x28]
  407ab7:	mov    r8,rcx
  407aba:	mov    ecx,0x2
  407abf:	mov    rdi,rax
  407ac2:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  407ac7:	mov    QWORD PTR [rbp-0x30],rax
  407acb:	mov    rax,QWORD PTR [rbp-0x30]
  407acf:	cmp    rax,QWORD PTR [rbp-0x8]
  407ad3:	je     407aec <_start@@Base+0x298c>
  407ad5:	mov    rax,QWORD PTR [rbp-0x48]
  407ad9:	mov    QWORD PTR [rax],0x0
  407ae0:	mov    rax,QWORD PTR [rbp-0x40]
  407ae4:	mov    DWORD PTR [rax],0x0
  407aea:	jmp    407afe <_start@@Base+0x299e>
  407aec:	mov    rax,QWORD PTR [rbp-0x18]
  407af0:	jmp    407b02 <_start@@Base+0x29a2>
  407af2:	mov    rax,QWORD PTR [rbp-0x18]
  407af6:	jmp    407b02 <_start@@Base+0x29a2>
  407af8:	mov    rax,QWORD PTR [rbp-0x18]
  407afc:	jmp    407b02 <_start@@Base+0x29a2>
  407afe:	mov    rax,QWORD PTR [rbp-0x30]
  407b02:	leave  
  407b03:	ret    
  407b04:	push   rbp
  407b05:	mov    rbp,rsp
  407b08:	sub    rsp,0x30
  407b0c:	mov    QWORD PTR [rbp-0x18],rdi
  407b10:	mov    QWORD PTR [rbp-0x20],rsi
  407b14:	mov    QWORD PTR [rbp-0x28],rdx
  407b18:	mov    QWORD PTR [rbp-0x30],rcx
  407b1c:	mov    rax,QWORD PTR fs:0x28
  407b25:	mov    QWORD PTR [rbp-0x8],rax
  407b29:	xor    eax,eax
  407b2b:	lea    rcx,[rbp-0xc]
  407b2f:	mov    rdx,QWORD PTR [rbp-0x28]
  407b33:	mov    rsi,QWORD PTR [rbp-0x20]
  407b37:	mov    rax,QWORD PTR [rbp-0x18]
  407b3b:	mov    rdi,rax
  407b3e:	call   405880 <_start@@Base+0x720>
  407b43:	mov    QWORD PTR [rbp-0x20],rax
  407b47:	jmp    407b80 <_start@@Base+0x2a20>
  407b49:	mov    rdx,QWORD PTR [rbp-0x28]
  407b4d:	mov    rcx,QWORD PTR [rbp-0x20]
  407b51:	mov    rax,QWORD PTR [rbp-0x18]
  407b55:	mov    rsi,rcx
  407b58:	mov    rdi,rax
  407b5b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  407b60:	mov    QWORD PTR [rbp-0x20],rax
  407b64:	lea    rcx,[rbp-0xc]
  407b68:	mov    rdx,QWORD PTR [rbp-0x28]
  407b6c:	mov    rsi,QWORD PTR [rbp-0x20]
  407b70:	mov    rax,QWORD PTR [rbp-0x18]
  407b74:	mov    rdi,rax
  407b77:	call   40593d <_start@@Base+0x7dd>
  407b7c:	mov    QWORD PTR [rbp-0x20],rax
  407b80:	mov    eax,DWORD PTR [rbp-0xc]
  407b83:	test   eax,eax
  407b85:	jne    407b49 <_start@@Base+0x29e9>
  407b87:	mov    rax,QWORD PTR [rbp-0x20]
  407b8b:	mov    rdi,QWORD PTR [rbp-0x8]
  407b8f:	xor    rdi,QWORD PTR fs:0x28
  407b98:	je     407b9f <_start@@Base+0x2a3f>
  407b9a:	call   405070 <__stack_chk_fail@plt>
  407b9f:	leave  
  407ba0:	ret    
  407ba1:	push   rbp
  407ba2:	mov    rbp,rsp
  407ba5:	sub    rsp,0x30
  407ba9:	mov    QWORD PTR [rbp-0x18],rdi
  407bad:	mov    QWORD PTR [rbp-0x20],rsi
  407bb1:	mov    QWORD PTR [rbp-0x28],rdx
  407bb5:	mov    QWORD PTR [rbp-0x30],rcx
  407bb9:	mov    rax,QWORD PTR [rbp-0x30]
  407bbd:	mov    DWORD PTR [rax],0x0
  407bc3:	mov    rax,QWORD PTR [rbp-0x18]
  407bc7:	mov    rax,QWORD PTR [rax]
  407bca:	mov    edx,0x1
  407bcf:	mov    esi,0x0
  407bd4:	mov    rdi,rax
  407bd7:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  407bdc:	mov    QWORD PTR [rbp-0x8],rax
  407be0:	cmp    QWORD PTR [rbp-0x8],0x0
  407be5:	je     407c34 <_start@@Base+0x2ad4>
  407be7:	mov    rcx,QWORD PTR [rbp-0x8]
  407beb:	mov    rdx,QWORD PTR [rbp-0x28]
  407bef:	mov    rsi,QWORD PTR [rbp-0x20]
  407bf3:	mov    rax,QWORD PTR [rbp-0x18]
  407bf7:	mov    rdi,rax
  407bfa:	call   407b04 <_start@@Base+0x29a4>
  407bff:	mov    QWORD PTR [rbp-0x20],rax
  407c03:	mov    rax,QWORD PTR [rbp-0x20]
  407c07:	cmp    rax,QWORD PTR [rbp-0x28]
  407c0b:	je     407c35 <_start@@Base+0x2ad5>
  407c0d:	mov    rax,QWORD PTR [rbp-0x18]
  407c11:	mov    rax,QWORD PTR [rax]
  407c14:	mov    rdi,rax
  407c17:	call   41cd71 <flatcc_builder_end_struct@@Base>
  407c1c:	mov    edx,eax
  407c1e:	mov    rax,QWORD PTR [rbp-0x30]
  407c22:	mov    DWORD PTR [rax],edx
  407c24:	mov    rax,QWORD PTR [rbp-0x30]
  407c28:	mov    eax,DWORD PTR [rax]
  407c2a:	test   eax,eax
  407c2c:	je     407c35 <_start@@Base+0x2ad5>
  407c2e:	mov    rax,QWORD PTR [rbp-0x20]
  407c32:	jmp    407c4e <_start@@Base+0x2aee>
  407c34:	nop
  407c35:	mov    rdx,QWORD PTR [rbp-0x28]
  407c39:	mov    rsi,QWORD PTR [rbp-0x20]
  407c3d:	mov    rax,QWORD PTR [rbp-0x18]
  407c41:	mov    ecx,0x21
  407c46:	mov    rdi,rax
  407c49:	call   42665a <flatcc_json_parser_set_error@@Base>
  407c4e:	leave  
  407c4f:	ret    
  407c50:	push   rbp
  407c51:	mov    rbp,rsp
  407c54:	mov    QWORD PTR [rbp-0x8],rdi
  407c58:	mov    QWORD PTR [rbp-0x10],rsi
  407c5c:	mov    QWORD PTR [rbp-0x18],rdx
  407c60:	mov    QWORD PTR [rbp-0x20],rcx
  407c64:	mov    QWORD PTR [rbp-0x28],r8
  407c68:	mov    QWORD PTR [rbp-0x30],r9
  407c6c:	mov    rax,QWORD PTR [rbp-0x10]
  407c70:	pop    rbp
  407c71:	ret    
  407c72:	push   rbp
  407c73:	mov    rbp,rsp
  407c76:	mov    QWORD PTR [rbp-0x8],rdi
  407c7a:	mov    QWORD PTR [rbp-0x10],rsi
  407c7e:	mov    QWORD PTR [rbp-0x18],rdx
  407c82:	mov    QWORD PTR [rbp-0x20],rcx
  407c86:	mov    QWORD PTR [rbp-0x28],r8
  407c8a:	mov    QWORD PTR [rbp-0x30],r9
  407c8e:	mov    rax,QWORD PTR [rbp-0x10]
  407c92:	pop    rbp
  407c93:	ret    
  407c94:	push   rbp
  407c95:	mov    rbp,rsp
  407c98:	mov    QWORD PTR [rbp-0x8],rdi
  407c9c:	mov    QWORD PTR [rbp-0x10],rsi
  407ca0:	mov    QWORD PTR [rbp-0x18],rdx
  407ca4:	mov    QWORD PTR [rbp-0x20],rcx
  407ca8:	mov    QWORD PTR [rbp-0x28],r8
  407cac:	mov    QWORD PTR [rbp-0x30],r9
  407cb0:	mov    rax,QWORD PTR [rbp-0x10]
  407cb4:	pop    rbp
  407cb5:	ret    
  407cb6:	push   rbp
  407cb7:	mov    rbp,rsp
  407cba:	mov    QWORD PTR [rbp-0x8],rdi
  407cbe:	mov    QWORD PTR [rbp-0x10],rsi
  407cc2:	mov    QWORD PTR [rbp-0x18],rdx
  407cc6:	mov    QWORD PTR [rbp-0x20],rcx
  407cca:	mov    QWORD PTR [rbp-0x28],r8
  407cce:	mov    QWORD PTR [rbp-0x30],r9
  407cd2:	mov    rax,QWORD PTR [rbp-0x10]
  407cd6:	pop    rbp
  407cd7:	ret    
  407cd8:	push   rbp
  407cd9:	mov    rbp,rsp
  407cdc:	mov    QWORD PTR [rbp-0x8],rdi
  407ce0:	mov    QWORD PTR [rbp-0x10],rsi
  407ce4:	mov    QWORD PTR [rbp-0x18],rdx
  407ce8:	mov    QWORD PTR [rbp-0x20],rcx
  407cec:	mov    QWORD PTR [rbp-0x28],r8
  407cf0:	mov    QWORD PTR [rbp-0x30],r9
  407cf4:	mov    rax,QWORD PTR [rbp-0x10]
  407cf8:	pop    rbp
  407cf9:	ret    
  407cfa:	push   rbp
  407cfb:	mov    rbp,rsp
  407cfe:	sub    rsp,0x50
  407d02:	mov    QWORD PTR [rbp-0x28],rdi
  407d06:	mov    QWORD PTR [rbp-0x30],rsi
  407d0a:	mov    QWORD PTR [rbp-0x38],rdx
  407d0e:	mov    QWORD PTR [rbp-0x40],rcx
  407d12:	mov    QWORD PTR [rbp-0x48],r8
  407d16:	mov    QWORD PTR [rbp-0x50],r9
  407d1a:	mov    rax,QWORD PTR [rbp-0x30]
  407d1e:	mov    QWORD PTR [rbp-0x18],rax
  407d22:	mov    rdx,QWORD PTR [rbp-0x38]
  407d26:	mov    rax,QWORD PTR [rbp-0x30]
  407d2a:	mov    rsi,rdx
  407d2d:	mov    rdi,rax
  407d30:	call   405779 <_start@@Base+0x619>
  407d35:	mov    QWORD PTR [rbp-0x10],rax
  407d39:	movabs rax,0x46726f6d496e636c
  407d43:	cmp    QWORD PTR [rbp-0x10],rax
  407d47:	jne    407df4 <_start@@Base+0x2c94>
  407d4d:	add    QWORD PTR [rbp-0x30],0x8
  407d52:	mov    rdx,QWORD PTR [rbp-0x38]
  407d56:	mov    rax,QWORD PTR [rbp-0x30]
  407d5a:	mov    rsi,rdx
  407d5d:	mov    rdi,rax
  407d60:	call   405779 <_start@@Base+0x619>
  407d65:	mov    QWORD PTR [rbp-0x10],rax
  407d69:	movabs rax,0xffffff0000000000
  407d73:	and    rax,QWORD PTR [rbp-0x10]
  407d77:	mov    rdx,rax
  407d7a:	movabs rax,0x7564650000000000
  407d84:	cmp    rdx,rax
  407d87:	jne    407dee <_start@@Base+0x2c8e>
  407d89:	mov    rax,QWORD PTR [rbp-0x30]
  407d8d:	mov    QWORD PTR [rbp-0x8],rax
  407d91:	mov    rdx,QWORD PTR [rbp-0x38]
  407d95:	mov    rsi,QWORD PTR [rbp-0x8]
  407d99:	mov    rax,QWORD PTR [rbp-0x28]
  407d9d:	mov    ecx,0x3
  407da2:	mov    rdi,rax
  407da5:	call   4057c3 <_start@@Base+0x663>
  407daa:	mov    QWORD PTR [rbp-0x30],rax
  407dae:	mov    rax,QWORD PTR [rbp-0x30]
  407db2:	cmp    rax,QWORD PTR [rbp-0x8]
  407db6:	je     407de8 <_start@@Base+0x2c88>
  407db8:	mov    r8,QWORD PTR [rbp-0x50]
  407dbc:	mov    rdi,QWORD PTR [rbp-0x48]
  407dc0:	mov    rcx,QWORD PTR [rbp-0x40]
  407dc4:	mov    rdx,QWORD PTR [rbp-0x38]
  407dc8:	mov    rsi,QWORD PTR [rbp-0x30]
  407dcc:	mov    rax,QWORD PTR [rbp-0x28]
  407dd0:	mov    r9,r8
  407dd3:	mov    r8,rdi
  407dd6:	mov    rdi,rax
  407dd9:	call   40799c <_start@@Base+0x283c>
  407dde:	mov    QWORD PTR [rbp-0x30],rax
  407de2:	mov    rax,QWORD PTR [rbp-0x30]
  407de6:	jmp    407df8 <_start@@Base+0x2c98>
  407de8:	mov    rax,QWORD PTR [rbp-0x18]
  407dec:	jmp    407df8 <_start@@Base+0x2c98>
  407dee:	mov    rax,QWORD PTR [rbp-0x18]
  407df2:	jmp    407df8 <_start@@Base+0x2c98>
  407df4:	mov    rax,QWORD PTR [rbp-0x18]
  407df8:	leave  
  407df9:	ret    
  407dfa:	push   rbp
  407dfb:	mov    rbp,rsp
  407dfe:	sub    rsp,0x50
  407e02:	mov    QWORD PTR [rbp-0x28],rdi
  407e06:	mov    QWORD PTR [rbp-0x30],rsi
  407e0a:	mov    QWORD PTR [rbp-0x38],rdx
  407e0e:	mov    QWORD PTR [rbp-0x40],rcx
  407e12:	mov    QWORD PTR [rbp-0x48],r8
  407e16:	mov    QWORD PTR [rbp-0x50],r9
  407e1a:	mov    rax,QWORD PTR [rbp-0x30]
  407e1e:	mov    QWORD PTR [rbp-0x18],rax
  407e22:	mov    rdx,QWORD PTR [rbp-0x38]
  407e26:	mov    rax,QWORD PTR [rbp-0x30]
  407e2a:	mov    rsi,rdx
  407e2d:	mov    rdi,rax
  407e30:	call   405779 <_start@@Base+0x619>
  407e35:	mov    QWORD PTR [rbp-0x10],rax
  407e39:	movabs rax,0x4d7947616d652e4f
  407e43:	cmp    QWORD PTR [rbp-0x10],rax
  407e47:	jne    407f96 <_start@@Base+0x2e36>
  407e4d:	add    QWORD PTR [rbp-0x30],0x8
  407e52:	mov    rdx,QWORD PTR [rbp-0x38]
  407e56:	mov    rax,QWORD PTR [rbp-0x30]
  407e5a:	mov    rsi,rdx
  407e5d:	mov    rdi,rax
  407e60:	call   405779 <_start@@Base+0x619>
  407e65:	mov    QWORD PTR [rbp-0x10],rax
  407e69:	movabs rax,0x746865724e616d65
  407e73:	cmp    QWORD PTR [rbp-0x10],rax
  407e77:	jne    407f90 <_start@@Base+0x2e30>
  407e7d:	add    QWORD PTR [rbp-0x30],0x8
  407e82:	mov    rdx,QWORD PTR [rbp-0x38]
  407e86:	mov    rax,QWORD PTR [rbp-0x30]
  407e8a:	mov    rsi,rdx
  407e8d:	mov    rdi,rax
  407e90:	call   405779 <_start@@Base+0x619>
  407e95:	mov    QWORD PTR [rbp-0x10],rax
  407e99:	movabs rax,0x53706163652e4672
  407ea3:	cmp    QWORD PTR [rbp-0x10],rax
  407ea7:	jne    407f8a <_start@@Base+0x2e2a>
  407ead:	add    QWORD PTR [rbp-0x30],0x8
  407eb2:	mov    rdx,QWORD PTR [rbp-0x38]
  407eb6:	mov    rax,QWORD PTR [rbp-0x30]
  407eba:	mov    rsi,rdx
  407ebd:	mov    rdi,rax
  407ec0:	call   405779 <_start@@Base+0x619>
  407ec5:	mov    QWORD PTR [rbp-0x10],rax
  407ec9:	movabs rax,0x6f6d496e636c7564
  407ed3:	cmp    QWORD PTR [rbp-0x10],rax
  407ed7:	jne    407f84 <_start@@Base+0x2e24>
  407edd:	add    QWORD PTR [rbp-0x30],0x8
  407ee2:	mov    rdx,QWORD PTR [rbp-0x38]
  407ee6:	mov    rax,QWORD PTR [rbp-0x30]
  407eea:	mov    rsi,rdx
  407eed:	mov    rdi,rax
  407ef0:	call   405779 <_start@@Base+0x619>
  407ef5:	mov    QWORD PTR [rbp-0x10],rax
  407ef9:	movabs rax,0xff00000000000000
  407f03:	and    rax,QWORD PTR [rbp-0x10]
  407f07:	mov    rdx,rax
  407f0a:	movabs rax,0x6500000000000000
  407f14:	cmp    rdx,rax
  407f17:	jne    407f7e <_start@@Base+0x2e1e>
  407f19:	mov    rax,QWORD PTR [rbp-0x30]
  407f1d:	mov    QWORD PTR [rbp-0x8],rax
  407f21:	mov    rdx,QWORD PTR [rbp-0x38]
  407f25:	mov    rsi,QWORD PTR [rbp-0x8]
  407f29:	mov    rax,QWORD PTR [rbp-0x28]
  407f2d:	mov    ecx,0x1
  407f32:	mov    rdi,rax
  407f35:	call   4057c3 <_start@@Base+0x663>
  407f3a:	mov    QWORD PTR [rbp-0x30],rax
  407f3e:	mov    rax,QWORD PTR [rbp-0x30]
  407f42:	cmp    rax,QWORD PTR [rbp-0x8]
  407f46:	je     407f78 <_start@@Base+0x2e18>
  407f48:	mov    r8,QWORD PTR [rbp-0x50]
  407f4c:	mov    rdi,QWORD PTR [rbp-0x48]
  407f50:	mov    rcx,QWORD PTR [rbp-0x40]
  407f54:	mov    rdx,QWORD PTR [rbp-0x38]
  407f58:	mov    rsi,QWORD PTR [rbp-0x30]
  407f5c:	mov    rax,QWORD PTR [rbp-0x28]
  407f60:	mov    r9,r8
  407f63:	mov    r8,rdi
  407f66:	mov    rdi,rax
  407f69:	call   40799c <_start@@Base+0x283c>
  407f6e:	mov    QWORD PTR [rbp-0x30],rax
  407f72:	mov    rax,QWORD PTR [rbp-0x30]
  407f76:	jmp    407f9a <_start@@Base+0x2e3a>
  407f78:	mov    rax,QWORD PTR [rbp-0x18]
  407f7c:	jmp    407f9a <_start@@Base+0x2e3a>
  407f7e:	mov    rax,QWORD PTR [rbp-0x18]
  407f82:	jmp    407f9a <_start@@Base+0x2e3a>
  407f84:	mov    rax,QWORD PTR [rbp-0x18]
  407f88:	jmp    407f9a <_start@@Base+0x2e3a>
  407f8a:	mov    rax,QWORD PTR [rbp-0x18]
  407f8e:	jmp    407f9a <_start@@Base+0x2e3a>
  407f90:	mov    rax,QWORD PTR [rbp-0x18]
  407f94:	jmp    407f9a <_start@@Base+0x2e3a>
  407f96:	mov    rax,QWORD PTR [rbp-0x18]
  407f9a:	leave  
  407f9b:	ret    
  407f9c:	push   rbp
  407f9d:	mov    rbp,rsp
  407fa0:	mov    QWORD PTR [rbp-0x8],rdi
  407fa4:	mov    QWORD PTR [rbp-0x10],rsi
  407fa8:	mov    QWORD PTR [rbp-0x18],rdx
  407fac:	mov    QWORD PTR [rbp-0x20],rcx
  407fb0:	mov    QWORD PTR [rbp-0x28],r8
  407fb4:	mov    QWORD PTR [rbp-0x30],r9
  407fb8:	mov    rax,QWORD PTR [rbp-0x10]
  407fbc:	pop    rbp
  407fbd:	ret    
  407fbe:	push   rbp
  407fbf:	mov    rbp,rsp
  407fc2:	mov    QWORD PTR [rbp-0x8],rdi
  407fc6:	mov    QWORD PTR [rbp-0x10],rsi
  407fca:	mov    QWORD PTR [rbp-0x18],rdx
  407fce:	mov    QWORD PTR [rbp-0x20],rcx
  407fd2:	mov    QWORD PTR [rbp-0x28],r8
  407fd6:	mov    QWORD PTR [rbp-0x30],r9
  407fda:	mov    rax,QWORD PTR [rbp-0x10]
  407fde:	pop    rbp
  407fdf:	ret    
  407fe0:	push   rbp
  407fe1:	mov    rbp,rsp
  407fe4:	mov    QWORD PTR [rbp-0x8],rdi
  407fe8:	mov    QWORD PTR [rbp-0x10],rsi
  407fec:	mov    QWORD PTR [rbp-0x18],rdx
  407ff0:	mov    QWORD PTR [rbp-0x20],rcx
  407ff4:	mov    QWORD PTR [rbp-0x28],r8
  407ff8:	mov    QWORD PTR [rbp-0x30],r9
  407ffc:	mov    rax,QWORD PTR [rbp-0x10]
  408000:	pop    rbp
  408001:	ret    
  408002:	push   rbp
  408003:	mov    rbp,rsp
  408006:	mov    QWORD PTR [rbp-0x8],rdi
  40800a:	mov    QWORD PTR [rbp-0x10],rsi
  40800e:	mov    QWORD PTR [rbp-0x18],rdx
  408012:	mov    QWORD PTR [rbp-0x20],rcx
  408016:	mov    QWORD PTR [rbp-0x28],r8
  40801a:	mov    QWORD PTR [rbp-0x30],r9
  40801e:	mov    rax,QWORD PTR [rbp-0x10]
  408022:	pop    rbp
  408023:	ret    
  408024:	push   rbp
  408025:	mov    rbp,rsp
  408028:	mov    QWORD PTR [rbp-0x8],rdi
  40802c:	mov    QWORD PTR [rbp-0x10],rsi
  408030:	mov    QWORD PTR [rbp-0x18],rdx
  408034:	mov    QWORD PTR [rbp-0x20],rcx
  408038:	mov    QWORD PTR [rbp-0x28],r8
  40803c:	mov    QWORD PTR [rbp-0x30],r9
  408040:	mov    rax,QWORD PTR [rbp-0x10]
  408044:	pop    rbp
  408045:	ret    
  408046:	push   rbp
  408047:	mov    rbp,rsp
  40804a:	sub    rsp,0x50
  40804e:	mov    QWORD PTR [rbp-0x28],rdi
  408052:	mov    QWORD PTR [rbp-0x30],rsi
  408056:	mov    QWORD PTR [rbp-0x38],rdx
  40805a:	mov    QWORD PTR [rbp-0x40],rcx
  40805e:	mov    QWORD PTR [rbp-0x48],r8
  408062:	mov    QWORD PTR [rbp-0x50],r9
  408066:	mov    rax,QWORD PTR [rbp-0x30]
  40806a:	mov    QWORD PTR [rbp-0x18],rax
  40806e:	mov    rdx,QWORD PTR [rbp-0x38]
  408072:	mov    rax,QWORD PTR [rbp-0x30]
  408076:	mov    rsi,rdx
  408079:	mov    rdi,rax
  40807c:	call   405779 <_start@@Base+0x619>
  408081:	mov    QWORD PTR [rbp-0x10],rax
  408085:	movabs rax,0x46726f6d496e636c
  40808f:	cmp    QWORD PTR [rbp-0x10],rax
  408093:	jne    408140 <_start@@Base+0x2fe0>
  408099:	add    QWORD PTR [rbp-0x30],0x8
  40809e:	mov    rdx,QWORD PTR [rbp-0x38]
  4080a2:	mov    rax,QWORD PTR [rbp-0x30]
  4080a6:	mov    rsi,rdx
  4080a9:	mov    rdi,rax
  4080ac:	call   405779 <_start@@Base+0x619>
  4080b1:	mov    QWORD PTR [rbp-0x10],rax
  4080b5:	movabs rax,0xffffff0000000000
  4080bf:	and    rax,QWORD PTR [rbp-0x10]
  4080c3:	mov    rdx,rax
  4080c6:	movabs rax,0x7564650000000000
  4080d0:	cmp    rdx,rax
  4080d3:	jne    40813a <_start@@Base+0x2fda>
  4080d5:	mov    rax,QWORD PTR [rbp-0x30]
  4080d9:	mov    QWORD PTR [rbp-0x8],rax
  4080dd:	mov    rdx,QWORD PTR [rbp-0x38]
  4080e1:	mov    rsi,QWORD PTR [rbp-0x8]
  4080e5:	mov    rax,QWORD PTR [rbp-0x28]
  4080e9:	mov    ecx,0x3
  4080ee:	mov    rdi,rax
  4080f1:	call   4057c3 <_start@@Base+0x663>
  4080f6:	mov    QWORD PTR [rbp-0x30],rax
  4080fa:	mov    rax,QWORD PTR [rbp-0x30]
  4080fe:	cmp    rax,QWORD PTR [rbp-0x8]
  408102:	je     408134 <_start@@Base+0x2fd4>
  408104:	mov    r8,QWORD PTR [rbp-0x50]
  408108:	mov    rdi,QWORD PTR [rbp-0x48]
  40810c:	mov    rcx,QWORD PTR [rbp-0x40]
  408110:	mov    rdx,QWORD PTR [rbp-0x38]
  408114:	mov    rsi,QWORD PTR [rbp-0x30]
  408118:	mov    rax,QWORD PTR [rbp-0x28]
  40811c:	mov    r9,r8
  40811f:	mov    r8,rdi
  408122:	mov    rdi,rax
  408125:	call   40799c <_start@@Base+0x283c>
  40812a:	mov    QWORD PTR [rbp-0x30],rax
  40812e:	mov    rax,QWORD PTR [rbp-0x30]
  408132:	jmp    408144 <_start@@Base+0x2fe4>
  408134:	mov    rax,QWORD PTR [rbp-0x18]
  408138:	jmp    408144 <_start@@Base+0x2fe4>
  40813a:	mov    rax,QWORD PTR [rbp-0x18]
  40813e:	jmp    408144 <_start@@Base+0x2fe4>
  408140:	mov    rax,QWORD PTR [rbp-0x18]
  408144:	leave  
  408145:	ret    
  408146:	push   rbp
  408147:	mov    rbp,rsp
  40814a:	sub    rsp,0x50
  40814e:	mov    QWORD PTR [rbp-0x28],rdi
  408152:	mov    QWORD PTR [rbp-0x30],rsi
  408156:	mov    QWORD PTR [rbp-0x38],rdx
  40815a:	mov    QWORD PTR [rbp-0x40],rcx
  40815e:	mov    QWORD PTR [rbp-0x48],r8
  408162:	mov    QWORD PTR [rbp-0x50],r9
  408166:	mov    rax,QWORD PTR [rbp-0x30]
  40816a:	mov    QWORD PTR [rbp-0x18],rax
  40816e:	mov    rdx,QWORD PTR [rbp-0x38]
  408172:	mov    rax,QWORD PTR [rbp-0x30]
  408176:	mov    rsi,rdx
  408179:	mov    rdi,rax
  40817c:	call   405779 <_start@@Base+0x619>
  408181:	mov    QWORD PTR [rbp-0x10],rax
  408185:	movabs rax,0x4d7947616d652e4f
  40818f:	cmp    QWORD PTR [rbp-0x10],rax
  408193:	jne    4082e2 <_start@@Base+0x3182>
  408199:	add    QWORD PTR [rbp-0x30],0x8
  40819e:	mov    rdx,QWORD PTR [rbp-0x38]
  4081a2:	mov    rax,QWORD PTR [rbp-0x30]
  4081a6:	mov    rsi,rdx
  4081a9:	mov    rdi,rax
  4081ac:	call   405779 <_start@@Base+0x619>
  4081b1:	mov    QWORD PTR [rbp-0x10],rax
  4081b5:	movabs rax,0x746865724e616d65
  4081bf:	cmp    QWORD PTR [rbp-0x10],rax
  4081c3:	jne    4082dc <_start@@Base+0x317c>
  4081c9:	add    QWORD PTR [rbp-0x30],0x8
  4081ce:	mov    rdx,QWORD PTR [rbp-0x38]
  4081d2:	mov    rax,QWORD PTR [rbp-0x30]
  4081d6:	mov    rsi,rdx
  4081d9:	mov    rdi,rax
  4081dc:	call   405779 <_start@@Base+0x619>
  4081e1:	mov    QWORD PTR [rbp-0x10],rax
  4081e5:	movabs rax,0x53706163652e4672
  4081ef:	cmp    QWORD PTR [rbp-0x10],rax
  4081f3:	jne    4082d6 <_start@@Base+0x3176>
  4081f9:	add    QWORD PTR [rbp-0x30],0x8
  4081fe:	mov    rdx,QWORD PTR [rbp-0x38]
  408202:	mov    rax,QWORD PTR [rbp-0x30]
  408206:	mov    rsi,rdx
  408209:	mov    rdi,rax
  40820c:	call   405779 <_start@@Base+0x619>
  408211:	mov    QWORD PTR [rbp-0x10],rax
  408215:	movabs rax,0x6f6d496e636c7564
  40821f:	cmp    QWORD PTR [rbp-0x10],rax
  408223:	jne    4082d0 <_start@@Base+0x3170>
  408229:	add    QWORD PTR [rbp-0x30],0x8
  40822e:	mov    rdx,QWORD PTR [rbp-0x38]
  408232:	mov    rax,QWORD PTR [rbp-0x30]
  408236:	mov    rsi,rdx
  408239:	mov    rdi,rax
  40823c:	call   405779 <_start@@Base+0x619>
  408241:	mov    QWORD PTR [rbp-0x10],rax
  408245:	movabs rax,0xff00000000000000
  40824f:	and    rax,QWORD PTR [rbp-0x10]
  408253:	mov    rdx,rax
  408256:	movabs rax,0x6500000000000000
  408260:	cmp    rdx,rax
  408263:	jne    4082ca <_start@@Base+0x316a>
  408265:	mov    rax,QWORD PTR [rbp-0x30]
  408269:	mov    QWORD PTR [rbp-0x8],rax
  40826d:	mov    rdx,QWORD PTR [rbp-0x38]
  408271:	mov    rsi,QWORD PTR [rbp-0x8]
  408275:	mov    rax,QWORD PTR [rbp-0x28]
  408279:	mov    ecx,0x1
  40827e:	mov    rdi,rax
  408281:	call   4057c3 <_start@@Base+0x663>
  408286:	mov    QWORD PTR [rbp-0x30],rax
  40828a:	mov    rax,QWORD PTR [rbp-0x30]
  40828e:	cmp    rax,QWORD PTR [rbp-0x8]
  408292:	je     4082c4 <_start@@Base+0x3164>
  408294:	mov    r8,QWORD PTR [rbp-0x50]
  408298:	mov    rdi,QWORD PTR [rbp-0x48]
  40829c:	mov    rcx,QWORD PTR [rbp-0x40]
  4082a0:	mov    rdx,QWORD PTR [rbp-0x38]
  4082a4:	mov    rsi,QWORD PTR [rbp-0x30]
  4082a8:	mov    rax,QWORD PTR [rbp-0x28]
  4082ac:	mov    r9,r8
  4082af:	mov    r8,rdi
  4082b2:	mov    rdi,rax
  4082b5:	call   40799c <_start@@Base+0x283c>
  4082ba:	mov    QWORD PTR [rbp-0x30],rax
  4082be:	mov    rax,QWORD PTR [rbp-0x30]
  4082c2:	jmp    4082e6 <_start@@Base+0x3186>
  4082c4:	mov    rax,QWORD PTR [rbp-0x18]
  4082c8:	jmp    4082e6 <_start@@Base+0x3186>
  4082ca:	mov    rax,QWORD PTR [rbp-0x18]
  4082ce:	jmp    4082e6 <_start@@Base+0x3186>
  4082d0:	mov    rax,QWORD PTR [rbp-0x18]
  4082d4:	jmp    4082e6 <_start@@Base+0x3186>
  4082d6:	mov    rax,QWORD PTR [rbp-0x18]
  4082da:	jmp    4082e6 <_start@@Base+0x3186>
  4082dc:	mov    rax,QWORD PTR [rbp-0x18]
  4082e0:	jmp    4082e6 <_start@@Base+0x3186>
  4082e2:	mov    rax,QWORD PTR [rbp-0x18]
  4082e6:	leave  
  4082e7:	ret    
  4082e8:	push   rbp
  4082e9:	mov    rbp,rsp
  4082ec:	mov    QWORD PTR [rbp-0x8],rdi
  4082f0:	mov    QWORD PTR [rbp-0x10],rsi
  4082f4:	mov    QWORD PTR [rbp-0x18],rdx
  4082f8:	mov    QWORD PTR [rbp-0x20],rcx
  4082fc:	mov    QWORD PTR [rbp-0x28],r8
  408300:	mov    QWORD PTR [rbp-0x30],r9
  408304:	mov    rax,QWORD PTR [rbp-0x10]
  408308:	pop    rbp
  408309:	ret    
  40830a:	push   rbp
  40830b:	mov    rbp,rsp
  40830e:	mov    QWORD PTR [rbp-0x8],rdi
  408312:	mov    QWORD PTR [rbp-0x10],rsi
  408316:	mov    QWORD PTR [rbp-0x18],rdx
  40831a:	mov    QWORD PTR [rbp-0x20],rcx
  40831e:	mov    QWORD PTR [rbp-0x28],r8
  408322:	mov    QWORD PTR [rbp-0x30],r9
  408326:	mov    rax,QWORD PTR [rbp-0x10]
  40832a:	pop    rbp
  40832b:	ret    
  40832c:	push   rbp
  40832d:	mov    rbp,rsp
  408330:	mov    QWORD PTR [rbp-0x8],rdi
  408334:	mov    QWORD PTR [rbp-0x10],rsi
  408338:	mov    QWORD PTR [rbp-0x18],rdx
  40833c:	mov    QWORD PTR [rbp-0x20],rcx
  408340:	mov    QWORD PTR [rbp-0x28],r8
  408344:	mov    QWORD PTR [rbp-0x30],r9
  408348:	mov    rax,QWORD PTR [rbp-0x10]
  40834c:	pop    rbp
  40834d:	ret    
  40834e:	push   rbp
  40834f:	mov    rbp,rsp
  408352:	mov    QWORD PTR [rbp-0x8],rdi
  408356:	mov    QWORD PTR [rbp-0x10],rsi
  40835a:	mov    QWORD PTR [rbp-0x18],rdx
  40835e:	mov    QWORD PTR [rbp-0x20],rcx
  408362:	mov    QWORD PTR [rbp-0x28],r8
  408366:	mov    QWORD PTR [rbp-0x30],r9
  40836a:	mov    rax,QWORD PTR [rbp-0x10]
  40836e:	pop    rbp
  40836f:	ret    
  408370:	push   rbp
  408371:	mov    rbp,rsp
  408374:	mov    QWORD PTR [rbp-0x8],rdi
  408378:	mov    QWORD PTR [rbp-0x10],rsi
  40837c:	mov    QWORD PTR [rbp-0x18],rdx
  408380:	mov    QWORD PTR [rbp-0x20],rcx
  408384:	mov    QWORD PTR [rbp-0x28],r8
  408388:	mov    QWORD PTR [rbp-0x30],r9
  40838c:	mov    rax,QWORD PTR [rbp-0x10]
  408390:	pop    rbp
  408391:	ret    
  408392:	push   rbp
  408393:	mov    rbp,rsp
  408396:	mov    QWORD PTR [rbp-0x8],rdi
  40839a:	mov    QWORD PTR [rbp-0x10],rsi
  40839e:	mov    QWORD PTR [rbp-0x18],rdx
  4083a2:	mov    QWORD PTR [rbp-0x20],rcx
  4083a6:	mov    QWORD PTR [rbp-0x28],r8
  4083aa:	mov    QWORD PTR [rbp-0x30],r9
  4083ae:	mov    rax,QWORD PTR [rbp-0x10]
  4083b2:	pop    rbp
  4083b3:	ret    
  4083b4:	push   rbp
  4083b5:	mov    rbp,rsp
  4083b8:	mov    QWORD PTR [rbp-0x8],rdi
  4083bc:	mov    QWORD PTR [rbp-0x10],rsi
  4083c0:	mov    QWORD PTR [rbp-0x18],rdx
  4083c4:	mov    QWORD PTR [rbp-0x20],rcx
  4083c8:	mov    QWORD PTR [rbp-0x28],r8
  4083cc:	mov    QWORD PTR [rbp-0x30],r9
  4083d0:	mov    rax,QWORD PTR [rbp-0x10]
  4083d4:	pop    rbp
  4083d5:	ret    
  4083d6:	push   rbp
  4083d7:	mov    rbp,rsp
  4083da:	sub    rsp,0x30
  4083de:	mov    QWORD PTR [rbp-0x18],rdi
  4083e2:	mov    QWORD PTR [rbp-0x20],rsi
  4083e6:	mov    QWORD PTR [rbp-0x28],rdx
  4083ea:	mov    QWORD PTR [rbp-0x30],rcx
  4083ee:	mov    rax,QWORD PTR fs:0x28
  4083f7:	mov    QWORD PTR [rbp-0x8],rax
  4083fb:	xor    eax,eax
  4083fd:	lea    rcx,[rbp-0xc]
  408401:	mov    rdx,QWORD PTR [rbp-0x28]
  408405:	mov    rsi,QWORD PTR [rbp-0x20]
  408409:	mov    rax,QWORD PTR [rbp-0x18]
  40840d:	mov    rdi,rax
  408410:	call   405880 <_start@@Base+0x720>
  408415:	mov    QWORD PTR [rbp-0x20],rax
  408419:	jmp    408452 <_start@@Base+0x32f2>
  40841b:	mov    rdx,QWORD PTR [rbp-0x28]
  40841f:	mov    rcx,QWORD PTR [rbp-0x20]
  408423:	mov    rax,QWORD PTR [rbp-0x18]
  408427:	mov    rsi,rcx
  40842a:	mov    rdi,rax
  40842d:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  408432:	mov    QWORD PTR [rbp-0x20],rax
  408436:	lea    rcx,[rbp-0xc]
  40843a:	mov    rdx,QWORD PTR [rbp-0x28]
  40843e:	mov    rsi,QWORD PTR [rbp-0x20]
  408442:	mov    rax,QWORD PTR [rbp-0x18]
  408446:	mov    rdi,rax
  408449:	call   40593d <_start@@Base+0x7dd>
  40844e:	mov    QWORD PTR [rbp-0x20],rax
  408452:	mov    eax,DWORD PTR [rbp-0xc]
  408455:	test   eax,eax
  408457:	jne    40841b <_start@@Base+0x32bb>
  408459:	mov    rax,QWORD PTR [rbp-0x20]
  40845d:	mov    rdi,QWORD PTR [rbp-0x8]
  408461:	xor    rdi,QWORD PTR fs:0x28
  40846a:	je     408471 <_start@@Base+0x3311>
  40846c:	call   405070 <__stack_chk_fail@plt>
  408471:	leave  
  408472:	ret    
  408473:	push   rbp
  408474:	mov    rbp,rsp
  408477:	sub    rsp,0x30
  40847b:	mov    QWORD PTR [rbp-0x18],rdi
  40847f:	mov    QWORD PTR [rbp-0x20],rsi
  408483:	mov    QWORD PTR [rbp-0x28],rdx
  408487:	mov    QWORD PTR [rbp-0x30],rcx
  40848b:	mov    rax,QWORD PTR [rbp-0x30]
  40848f:	mov    DWORD PTR [rax],0x0
  408495:	mov    rax,QWORD PTR [rbp-0x18]
  408499:	mov    rax,QWORD PTR [rax]
  40849c:	mov    edx,0x1
  4084a1:	mov    esi,0x0
  4084a6:	mov    rdi,rax
  4084a9:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  4084ae:	mov    QWORD PTR [rbp-0x8],rax
  4084b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4084b7:	je     408506 <_start@@Base+0x33a6>
  4084b9:	mov    rcx,QWORD PTR [rbp-0x8]
  4084bd:	mov    rdx,QWORD PTR [rbp-0x28]
  4084c1:	mov    rsi,QWORD PTR [rbp-0x20]
  4084c5:	mov    rax,QWORD PTR [rbp-0x18]
  4084c9:	mov    rdi,rax
  4084cc:	call   4083d6 <_start@@Base+0x3276>
  4084d1:	mov    QWORD PTR [rbp-0x20],rax
  4084d5:	mov    rax,QWORD PTR [rbp-0x20]
  4084d9:	cmp    rax,QWORD PTR [rbp-0x28]
  4084dd:	je     408507 <_start@@Base+0x33a7>
  4084df:	mov    rax,QWORD PTR [rbp-0x18]
  4084e3:	mov    rax,QWORD PTR [rax]
  4084e6:	mov    rdi,rax
  4084e9:	call   41cd71 <flatcc_builder_end_struct@@Base>
  4084ee:	mov    edx,eax
  4084f0:	mov    rax,QWORD PTR [rbp-0x30]
  4084f4:	mov    DWORD PTR [rax],edx
  4084f6:	mov    rax,QWORD PTR [rbp-0x30]
  4084fa:	mov    eax,DWORD PTR [rax]
  4084fc:	test   eax,eax
  4084fe:	je     408507 <_start@@Base+0x33a7>
  408500:	mov    rax,QWORD PTR [rbp-0x20]
  408504:	jmp    408520 <_start@@Base+0x33c0>
  408506:	nop
  408507:	mov    rdx,QWORD PTR [rbp-0x28]
  40850b:	mov    rsi,QWORD PTR [rbp-0x20]
  40850f:	mov    rax,QWORD PTR [rbp-0x18]
  408513:	mov    ecx,0x21
  408518:	mov    rdi,rax
  40851b:	call   42665a <flatcc_json_parser_set_error@@Base>
  408520:	leave  
  408521:	ret    
  408522:	push   rbp
  408523:	mov    rbp,rsp
  408526:	sub    rsp,0x30
  40852a:	mov    QWORD PTR [rbp-0x18],rdi
  40852e:	mov    QWORD PTR [rbp-0x20],rsi
  408532:	mov    QWORD PTR [rbp-0x28],rdx
  408536:	mov    QWORD PTR [rbp-0x30],rcx
  40853a:	mov    rax,QWORD PTR fs:0x28
  408543:	mov    QWORD PTR [rbp-0x8],rax
  408547:	xor    eax,eax
  408549:	mov    rax,QWORD PTR [rbp-0x30]
  40854d:	mov    DWORD PTR [rax],0x0
  408553:	mov    rax,QWORD PTR [rbp-0x18]
  408557:	mov    rax,QWORD PTR [rax]
  40855a:	mov    esi,0x0
  40855f:	mov    rdi,rax
  408562:	call   41d7d7 <flatcc_builder_start_table@@Base>
  408567:	test   eax,eax
  408569:	jne    408618 <_start@@Base+0x34b8>
  40856f:	lea    rcx,[rbp-0xc]
  408573:	mov    rdx,QWORD PTR [rbp-0x28]
  408577:	mov    rsi,QWORD PTR [rbp-0x20]
  40857b:	mov    rax,QWORD PTR [rbp-0x18]
  40857f:	mov    rdi,rax
  408582:	call   405880 <_start@@Base+0x720>
  408587:	mov    QWORD PTR [rbp-0x20],rax
  40858b:	jmp    4085df <_start@@Base+0x347f>
  40858d:	mov    rdx,QWORD PTR [rbp-0x28]
  408591:	mov    rcx,QWORD PTR [rbp-0x20]
  408595:	mov    rax,QWORD PTR [rbp-0x18]
  408599:	mov    rsi,rcx
  40859c:	mov    rdi,rax
  40859f:	call   4055e5 <_start@@Base+0x485>
  4085a4:	mov    QWORD PTR [rbp-0x20],rax
  4085a8:	mov    rdx,QWORD PTR [rbp-0x28]
  4085ac:	mov    rcx,QWORD PTR [rbp-0x20]
  4085b0:	mov    rax,QWORD PTR [rbp-0x18]
  4085b4:	mov    rsi,rcx
  4085b7:	mov    rdi,rax
  4085ba:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4085bf:	mov    QWORD PTR [rbp-0x20],rax
  4085c3:	lea    rcx,[rbp-0xc]
  4085c7:	mov    rdx,QWORD PTR [rbp-0x28]
  4085cb:	mov    rsi,QWORD PTR [rbp-0x20]
  4085cf:	mov    rax,QWORD PTR [rbp-0x18]
  4085d3:	mov    rdi,rax
  4085d6:	call   40593d <_start@@Base+0x7dd>
  4085db:	mov    QWORD PTR [rbp-0x20],rax
  4085df:	mov    eax,DWORD PTR [rbp-0xc]
  4085e2:	test   eax,eax
  4085e4:	jne    40858d <_start@@Base+0x342d>
  4085e6:	mov    rax,QWORD PTR [rbp-0x18]
  4085ea:	mov    eax,DWORD PTR [rax+0x20]
  4085ed:	test   eax,eax
  4085ef:	jne    40861b <_start@@Base+0x34bb>
  4085f1:	mov    rax,QWORD PTR [rbp-0x18]
  4085f5:	mov    rax,QWORD PTR [rax]
  4085f8:	mov    rdi,rax
  4085fb:	call   41e2d9 <flatcc_builder_end_table@@Base>
  408600:	mov    edx,eax
  408602:	mov    rax,QWORD PTR [rbp-0x30]
  408606:	mov    DWORD PTR [rax],edx
  408608:	mov    rax,QWORD PTR [rbp-0x30]
  40860c:	mov    eax,DWORD PTR [rax]
  40860e:	test   eax,eax
  408610:	je     40861e <_start@@Base+0x34be>
  408612:	mov    rax,QWORD PTR [rbp-0x20]
  408616:	jmp    408638 <_start@@Base+0x34d8>
  408618:	nop
  408619:	jmp    40861f <_start@@Base+0x34bf>
  40861b:	nop
  40861c:	jmp    40861f <_start@@Base+0x34bf>
  40861e:	nop
  40861f:	mov    rdx,QWORD PTR [rbp-0x28]
  408623:	mov    rsi,QWORD PTR [rbp-0x20]
  408627:	mov    rax,QWORD PTR [rbp-0x18]
  40862b:	mov    ecx,0x21
  408630:	mov    rdi,rax
  408633:	call   42665a <flatcc_json_parser_set_error@@Base>
  408638:	mov    rdi,QWORD PTR [rbp-0x8]
  40863c:	xor    rdi,QWORD PTR fs:0x28
  408645:	je     40864c <_start@@Base+0x34ec>
  408647:	call   405070 <__stack_chk_fail@plt>
  40864c:	leave  
  40864d:	ret    
  40864e:	push   rbp
  40864f:	mov    rbp,rsp
  408652:	sub    rsp,0x30
  408656:	mov    QWORD PTR [rbp-0x18],rdi
  40865a:	mov    QWORD PTR [rbp-0x20],rsi
  40865e:	mov    QWORD PTR [rbp-0x28],rdx
  408662:	mov    QWORD PTR [rbp-0x30],rcx
  408666:	mov    rax,QWORD PTR fs:0x28
  40866f:	mov    QWORD PTR [rbp-0x8],rax
  408673:	xor    eax,eax
  408675:	mov    rax,QWORD PTR [rbp-0x30]
  408679:	mov    DWORD PTR [rax],0x0
  40867f:	mov    rax,QWORD PTR [rbp-0x18]
  408683:	mov    rax,QWORD PTR [rax]
  408686:	mov    esi,0x0
  40868b:	mov    rdi,rax
  40868e:	call   41d7d7 <flatcc_builder_start_table@@Base>
  408693:	test   eax,eax
  408695:	jne    408744 <_start@@Base+0x35e4>
  40869b:	lea    rcx,[rbp-0xc]
  40869f:	mov    rdx,QWORD PTR [rbp-0x28]
  4086a3:	mov    rsi,QWORD PTR [rbp-0x20]
  4086a7:	mov    rax,QWORD PTR [rbp-0x18]
  4086ab:	mov    rdi,rax
  4086ae:	call   405880 <_start@@Base+0x720>
  4086b3:	mov    QWORD PTR [rbp-0x20],rax
  4086b7:	jmp    40870b <_start@@Base+0x35ab>
  4086b9:	mov    rdx,QWORD PTR [rbp-0x28]
  4086bd:	mov    rcx,QWORD PTR [rbp-0x20]
  4086c1:	mov    rax,QWORD PTR [rbp-0x18]
  4086c5:	mov    rsi,rcx
  4086c8:	mov    rdi,rax
  4086cb:	call   4055e5 <_start@@Base+0x485>
  4086d0:	mov    QWORD PTR [rbp-0x20],rax
  4086d4:	mov    rdx,QWORD PTR [rbp-0x28]
  4086d8:	mov    rcx,QWORD PTR [rbp-0x20]
  4086dc:	mov    rax,QWORD PTR [rbp-0x18]
  4086e0:	mov    rsi,rcx
  4086e3:	mov    rdi,rax
  4086e6:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4086eb:	mov    QWORD PTR [rbp-0x20],rax
  4086ef:	lea    rcx,[rbp-0xc]
  4086f3:	mov    rdx,QWORD PTR [rbp-0x28]
  4086f7:	mov    rsi,QWORD PTR [rbp-0x20]
  4086fb:	mov    rax,QWORD PTR [rbp-0x18]
  4086ff:	mov    rdi,rax
  408702:	call   40593d <_start@@Base+0x7dd>
  408707:	mov    QWORD PTR [rbp-0x20],rax
  40870b:	mov    eax,DWORD PTR [rbp-0xc]
  40870e:	test   eax,eax
  408710:	jne    4086b9 <_start@@Base+0x3559>
  408712:	mov    rax,QWORD PTR [rbp-0x18]
  408716:	mov    eax,DWORD PTR [rax+0x20]
  408719:	test   eax,eax
  40871b:	jne    408747 <_start@@Base+0x35e7>
  40871d:	mov    rax,QWORD PTR [rbp-0x18]
  408721:	mov    rax,QWORD PTR [rax]
  408724:	mov    rdi,rax
  408727:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40872c:	mov    edx,eax
  40872e:	mov    rax,QWORD PTR [rbp-0x30]
  408732:	mov    DWORD PTR [rax],edx
  408734:	mov    rax,QWORD PTR [rbp-0x30]
  408738:	mov    eax,DWORD PTR [rax]
  40873a:	test   eax,eax
  40873c:	je     40874a <_start@@Base+0x35ea>
  40873e:	mov    rax,QWORD PTR [rbp-0x20]
  408742:	jmp    408764 <_start@@Base+0x3604>
  408744:	nop
  408745:	jmp    40874b <_start@@Base+0x35eb>
  408747:	nop
  408748:	jmp    40874b <_start@@Base+0x35eb>
  40874a:	nop
  40874b:	mov    rdx,QWORD PTR [rbp-0x28]
  40874f:	mov    rsi,QWORD PTR [rbp-0x20]
  408753:	mov    rax,QWORD PTR [rbp-0x18]
  408757:	mov    ecx,0x21
  40875c:	mov    rdi,rax
  40875f:	call   42665a <flatcc_json_parser_set_error@@Base>
  408764:	mov    rdi,QWORD PTR [rbp-0x8]
  408768:	xor    rdi,QWORD PTR fs:0x28
  408771:	je     408778 <_start@@Base+0x3618>
  408773:	call   405070 <__stack_chk_fail@plt>
  408778:	leave  
  408779:	ret    
  40877a:	push   rbp
  40877b:	mov    rbp,rsp
  40877e:	sub    rsp,0x30
  408782:	mov    QWORD PTR [rbp-0x8],rdi
  408786:	mov    QWORD PTR [rbp-0x10],rsi
  40878a:	mov    QWORD PTR [rbp-0x18],rdx
  40878e:	mov    eax,ecx
  408790:	mov    QWORD PTR [rbp-0x28],r8
  408794:	mov    BYTE PTR [rbp-0x1c],al
  408797:	mov    rax,QWORD PTR [rbp-0x28]
  40879b:	mov    DWORD PTR [rax],0x0
  4087a1:	movzx  eax,BYTE PTR [rbp-0x1c]
  4087a5:	test   eax,eax
  4087a7:	je     4087b0 <_start@@Base+0x3650>
  4087a9:	cmp    eax,0x1
  4087ac:	je     4087cc <_start@@Base+0x366c>
  4087ae:	jmp    4087f6 <_start@@Base+0x3696>
  4087b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4087b4:	mov    rcx,QWORD PTR [rbp-0x10]
  4087b8:	mov    rax,QWORD PTR [rbp-0x8]
  4087bc:	mov    rsi,rcx
  4087bf:	mov    rdi,rax
  4087c2:	call   40631c <_start@@Base+0x11bc>
  4087c7:	jmp    408867 <_start@@Base+0x3707>
  4087cc:	mov    rcx,QWORD PTR [rbp-0x28]
  4087d0:	mov    rdx,QWORD PTR [rbp-0x18]
  4087d4:	mov    rsi,QWORD PTR [rbp-0x10]
  4087d8:	mov    rax,QWORD PTR [rbp-0x8]
  4087dc:	mov    rdi,rax
  4087df:	call   408522 <_start@@Base+0x33c2>
  4087e4:	mov    QWORD PTR [rbp-0x10],rax
  4087e8:	nop
  4087e9:	mov    rax,QWORD PTR [rbp-0x8]
  4087ed:	mov    eax,DWORD PTR [rax+0x20]
  4087f0:	test   eax,eax
  4087f2:	je     40883e <_start@@Base+0x36de>
  4087f4:	jmp    408838 <_start@@Base+0x36d8>
  4087f6:	mov    rax,QWORD PTR [rbp-0x8]
  4087fa:	mov    eax,DWORD PTR [rax+0x10]
  4087fd:	and    eax,0x1
  408800:	test   eax,eax
  408802:	jne    40881f <_start@@Base+0x36bf>
  408804:	mov    rdx,QWORD PTR [rbp-0x18]
  408808:	mov    rsi,QWORD PTR [rbp-0x10]
  40880c:	mov    rax,QWORD PTR [rbp-0x8]
  408810:	mov    ecx,0xf
  408815:	mov    rdi,rax
  408818:	call   42665a <flatcc_json_parser_set_error@@Base>
  40881d:	jmp    408867 <_start@@Base+0x3707>
  40881f:	mov    rdx,QWORD PTR [rbp-0x18]
  408823:	mov    rcx,QWORD PTR [rbp-0x10]
  408827:	mov    rax,QWORD PTR [rbp-0x8]
  40882b:	mov    rsi,rcx
  40882e:	mov    rdi,rax
  408831:	call   427761 <flatcc_json_parser_generic_json@@Base>
  408836:	jmp    408867 <_start@@Base+0x3707>
  408838:	mov    rax,QWORD PTR [rbp-0x10]
  40883c:	jmp    408867 <_start@@Base+0x3707>
  40883e:	mov    rax,QWORD PTR [rbp-0x28]
  408842:	mov    eax,DWORD PTR [rax]
  408844:	test   eax,eax
  408846:	jne    408863 <_start@@Base+0x3703>
  408848:	mov    rdx,QWORD PTR [rbp-0x18]
  40884c:	mov    rsi,QWORD PTR [rbp-0x10]
  408850:	mov    rax,QWORD PTR [rbp-0x8]
  408854:	mov    ecx,0x21
  408859:	mov    rdi,rax
  40885c:	call   42665a <flatcc_json_parser_set_error@@Base>
  408861:	jmp    408867 <_start@@Base+0x3707>
  408863:	mov    rax,QWORD PTR [rbp-0x10]
  408867:	leave  
  408868:	ret    
  408869:	push   rbp
  40886a:	mov    rbp,rsp
  40886d:	mov    eax,edi
  40886f:	mov    BYTE PTR [rbp-0x4],al
  408872:	movzx  eax,BYTE PTR [rbp-0x4]
  408876:	test   eax,eax
  408878:	je     408881 <_start@@Base+0x3721>
  40887a:	cmp    eax,0x1
  40887d:	je     408888 <_start@@Base+0x3728>
  40887f:	jmp    40888f <_start@@Base+0x372f>
  408881:	mov    eax,0x1
  408886:	jmp    408894 <_start@@Base+0x3734>
  408888:	mov    eax,0x1
  40888d:	jmp    408894 <_start@@Base+0x3734>
  40888f:	mov    eax,0x0
  408894:	pop    rbp
  408895:	ret    
  408896:	push   rbp
  408897:	mov    rbp,rsp
  40889a:	sub    rsp,0x50
  40889e:	mov    QWORD PTR [rbp-0x28],rdi
  4088a2:	mov    QWORD PTR [rbp-0x30],rsi
  4088a6:	mov    QWORD PTR [rbp-0x38],rdx
  4088aa:	mov    QWORD PTR [rbp-0x40],rcx
  4088ae:	mov    QWORD PTR [rbp-0x48],r8
  4088b2:	mov    QWORD PTR [rbp-0x50],r9
  4088b6:	mov    rax,QWORD PTR [rbp-0x30]
  4088ba:	mov    QWORD PTR [rbp-0x18],rax
  4088be:	mov    rdx,QWORD PTR [rbp-0x38]
  4088c2:	mov    rax,QWORD PTR [rbp-0x30]
  4088c6:	mov    rsi,rdx
  4088c9:	mov    rdi,rax
  4088cc:	call   405779 <_start@@Base+0x619>
  4088d1:	mov    QWORD PTR [rbp-0x10],rax
  4088d5:	movabs rax,0x496e506172656e74
  4088df:	cmp    QWORD PTR [rbp-0x10],rax
  4088e3:	jne    4089bd <_start@@Base+0x385d>
  4088e9:	add    QWORD PTR [rbp-0x30],0x8
  4088ee:	mov    rdx,QWORD PTR [rbp-0x38]
  4088f2:	mov    rax,QWORD PTR [rbp-0x30]
  4088f6:	mov    rsi,rdx
  4088f9:	mov    rdi,rax
  4088fc:	call   405779 <_start@@Base+0x619>
  408901:	mov    QWORD PTR [rbp-0x10],rax
  408905:	movabs rax,0x4e616d6573706163
  40890f:	cmp    QWORD PTR [rbp-0x10],rax
  408913:	jne    4089b7 <_start@@Base+0x3857>
  408919:	add    QWORD PTR [rbp-0x30],0x8
  40891e:	mov    rdx,QWORD PTR [rbp-0x38]
  408922:	mov    rax,QWORD PTR [rbp-0x30]
  408926:	mov    rsi,rdx
  408929:	mov    rdi,rax
  40892c:	call   405779 <_start@@Base+0x619>
  408931:	mov    QWORD PTR [rbp-0x10],rax
  408935:	movabs rax,0xff00000000000000
  40893f:	and    rax,QWORD PTR [rbp-0x10]
  408943:	mov    rdx,rax
  408946:	movabs rax,0x6500000000000000
  408950:	cmp    rdx,rax
  408953:	jne    4089ae <_start@@Base+0x384e>
  408955:	mov    rax,QWORD PTR [rbp-0x30]
  408959:	mov    QWORD PTR [rbp-0x8],rax
  40895d:	mov    rcx,QWORD PTR [rbp-0x50]
  408961:	mov    rdx,QWORD PTR [rbp-0x38]
  408965:	mov    rsi,QWORD PTR [rbp-0x8]
  408969:	mov    rax,QWORD PTR [rbp-0x28]
  40896d:	mov    r8,rcx
  408970:	mov    ecx,0x1
  408975:	mov    rdi,rax
  408978:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  40897d:	mov    QWORD PTR [rbp-0x30],rax
  408981:	mov    rax,QWORD PTR [rbp-0x30]
  408985:	cmp    rax,QWORD PTR [rbp-0x8]
  408989:	je     4089a5 <_start@@Base+0x3845>
  40898b:	mov    rax,QWORD PTR [rbp-0x48]
  40898f:	mov    QWORD PTR [rax],0x1
  408996:	mov    rax,QWORD PTR [rbp-0x40]
  40899a:	mov    DWORD PTR [rax],0x0
  4089a0:	jmp    408a36 <_start@@Base+0x38d6>
  4089a5:	mov    rax,QWORD PTR [rbp-0x18]
  4089a9:	jmp    408a3a <_start@@Base+0x38da>
  4089ae:	mov    rax,QWORD PTR [rbp-0x18]
  4089b2:	jmp    408a3a <_start@@Base+0x38da>
  4089b7:	mov    rax,QWORD PTR [rbp-0x18]
  4089bb:	jmp    408a3a <_start@@Base+0x38da>
  4089bd:	movabs rax,0xffffffff00000000
  4089c7:	and    rax,QWORD PTR [rbp-0x10]
  4089cb:	mov    rdx,rax
  4089ce:	movabs rax,0x4e4f4e4500000000
  4089d8:	cmp    rdx,rax
  4089db:	jne    408a30 <_start@@Base+0x38d0>
  4089dd:	mov    rax,QWORD PTR [rbp-0x30]
  4089e1:	mov    QWORD PTR [rbp-0x8],rax
  4089e5:	mov    rcx,QWORD PTR [rbp-0x50]
  4089e9:	mov    rdx,QWORD PTR [rbp-0x38]
  4089ed:	mov    rsi,QWORD PTR [rbp-0x8]
  4089f1:	mov    rax,QWORD PTR [rbp-0x28]
  4089f5:	mov    r8,rcx
  4089f8:	mov    ecx,0x4
  4089fd:	mov    rdi,rax
  408a00:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408a05:	mov    QWORD PTR [rbp-0x30],rax
  408a09:	mov    rax,QWORD PTR [rbp-0x30]
  408a0d:	cmp    rax,QWORD PTR [rbp-0x8]
  408a11:	je     408a2a <_start@@Base+0x38ca>
  408a13:	mov    rax,QWORD PTR [rbp-0x48]
  408a17:	mov    QWORD PTR [rax],0x0
  408a1e:	mov    rax,QWORD PTR [rbp-0x40]
  408a22:	mov    DWORD PTR [rax],0x0
  408a28:	jmp    408a36 <_start@@Base+0x38d6>
  408a2a:	mov    rax,QWORD PTR [rbp-0x18]
  408a2e:	jmp    408a3a <_start@@Base+0x38da>
  408a30:	mov    rax,QWORD PTR [rbp-0x18]
  408a34:	jmp    408a3a <_start@@Base+0x38da>
  408a36:	mov    rax,QWORD PTR [rbp-0x30]
  408a3a:	leave  
  408a3b:	ret    
  408a3c:	push   rbp
  408a3d:	mov    rbp,rsp
  408a40:	sub    rsp,0x50
  408a44:	mov    QWORD PTR [rbp-0x28],rdi
  408a48:	mov    QWORD PTR [rbp-0x30],rsi
  408a4c:	mov    QWORD PTR [rbp-0x38],rdx
  408a50:	mov    QWORD PTR [rbp-0x40],rcx
  408a54:	mov    QWORD PTR [rbp-0x48],r8
  408a58:	mov    QWORD PTR [rbp-0x50],r9
  408a5c:	mov    rax,QWORD PTR [rbp-0x30]
  408a60:	mov    QWORD PTR [rbp-0x18],rax
  408a64:	mov    rdx,QWORD PTR [rbp-0x38]
  408a68:	mov    rax,QWORD PTR [rbp-0x30]
  408a6c:	mov    rsi,rdx
  408a6f:	mov    rdi,rax
  408a72:	call   405779 <_start@@Base+0x619>
  408a77:	mov    QWORD PTR [rbp-0x10],rax
  408a7b:	movabs rax,0x6e656731ffffffff
  408a85:	cmp    QWORD PTR [rbp-0x10],rax
  408a89:	ja     408b11 <_start@@Base+0x39b1>
  408a8f:	movabs rax,0xffffffff00000000
  408a99:	and    rax,QWORD PTR [rbp-0x10]
  408a9d:	mov    rdx,rax
  408aa0:	movabs rax,0x6e65673100000000
  408aaa:	cmp    rdx,rax
  408aad:	jne    408b08 <_start@@Base+0x39a8>
  408aaf:	mov    rax,QWORD PTR [rbp-0x30]
  408ab3:	mov    QWORD PTR [rbp-0x8],rax
  408ab7:	mov    rcx,QWORD PTR [rbp-0x50]
  408abb:	mov    rdx,QWORD PTR [rbp-0x38]
  408abf:	mov    rsi,QWORD PTR [rbp-0x8]
  408ac3:	mov    rax,QWORD PTR [rbp-0x28]
  408ac7:	mov    r8,rcx
  408aca:	mov    ecx,0x4
  408acf:	mov    rdi,rax
  408ad2:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408ad7:	mov    QWORD PTR [rbp-0x30],rax
  408adb:	mov    rax,QWORD PTR [rbp-0x30]
  408adf:	cmp    rax,QWORD PTR [rbp-0x8]
  408ae3:	je     408aff <_start@@Base+0x399f>
  408ae5:	mov    rax,QWORD PTR [rbp-0x48]
  408ae9:	mov    QWORD PTR [rax],0xfffffffffffffff4
  408af0:	mov    rax,QWORD PTR [rbp-0x40]
  408af4:	mov    DWORD PTR [rax],0x1
  408afa:	jmp    408bfd <_start@@Base+0x3a9d>
  408aff:	mov    rax,QWORD PTR [rbp-0x18]
  408b03:	jmp    408c01 <_start@@Base+0x3aa1>
  408b08:	mov    rax,QWORD PTR [rbp-0x18]
  408b0c:	jmp    408c01 <_start@@Base+0x3aa1>
  408b11:	movabs rax,0xffffffff00000000
  408b1b:	and    rax,QWORD PTR [rbp-0x10]
  408b1f:	mov    rdx,rax
  408b22:	movabs rax,0x6e65673300000000
  408b2c:	cmp    rdx,rax
  408b2f:	jne    408b84 <_start@@Base+0x3a24>
  408b31:	mov    rax,QWORD PTR [rbp-0x30]
  408b35:	mov    QWORD PTR [rbp-0x8],rax
  408b39:	mov    rcx,QWORD PTR [rbp-0x50]
  408b3d:	mov    rdx,QWORD PTR [rbp-0x38]
  408b41:	mov    rsi,QWORD PTR [rbp-0x8]
  408b45:	mov    rax,QWORD PTR [rbp-0x28]
  408b49:	mov    r8,rcx
  408b4c:	mov    ecx,0x4
  408b51:	mov    rdi,rax
  408b54:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408b59:	mov    QWORD PTR [rbp-0x30],rax
  408b5d:	mov    rax,QWORD PTR [rbp-0x30]
  408b61:	cmp    rax,QWORD PTR [rbp-0x8]
  408b65:	je     408b7e <_start@@Base+0x3a1e>
  408b67:	mov    rax,QWORD PTR [rbp-0x48]
  408b6b:	mov    QWORD PTR [rax],0xfffffffffffffff6
  408b72:	mov    rax,QWORD PTR [rbp-0x40]
  408b76:	mov    DWORD PTR [rax],0x1
  408b7c:	jmp    408bfd <_start@@Base+0x3a9d>
  408b7e:	mov    rax,QWORD PTR [rbp-0x18]
  408b82:	jmp    408c01 <_start@@Base+0x3aa1>
  408b84:	movabs rax,0xffffffff00000000
  408b8e:	and    rax,QWORD PTR [rbp-0x10]
  408b92:	mov    rdx,rax
  408b95:	movabs rax,0x6e65673200000000
  408b9f:	cmp    rdx,rax
  408ba2:	jne    408bf7 <_start@@Base+0x3a97>
  408ba4:	mov    rax,QWORD PTR [rbp-0x30]
  408ba8:	mov    QWORD PTR [rbp-0x8],rax
  408bac:	mov    rcx,QWORD PTR [rbp-0x50]
  408bb0:	mov    rdx,QWORD PTR [rbp-0x38]
  408bb4:	mov    rsi,QWORD PTR [rbp-0x8]
  408bb8:	mov    rax,QWORD PTR [rbp-0x28]
  408bbc:	mov    r8,rcx
  408bbf:	mov    ecx,0x4
  408bc4:	mov    rdi,rax
  408bc7:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408bcc:	mov    QWORD PTR [rbp-0x30],rax
  408bd0:	mov    rax,QWORD PTR [rbp-0x30]
  408bd4:	cmp    rax,QWORD PTR [rbp-0x8]
  408bd8:	je     408bf1 <_start@@Base+0x3a91>
  408bda:	mov    rax,QWORD PTR [rbp-0x48]
  408bde:	mov    QWORD PTR [rax],0xfffffffffffffff5
  408be5:	mov    rax,QWORD PTR [rbp-0x40]
  408be9:	mov    DWORD PTR [rax],0x1
  408bef:	jmp    408bfd <_start@@Base+0x3a9d>
  408bf1:	mov    rax,QWORD PTR [rbp-0x18]
  408bf5:	jmp    408c01 <_start@@Base+0x3aa1>
  408bf7:	mov    rax,QWORD PTR [rbp-0x18]
  408bfb:	jmp    408c01 <_start@@Base+0x3aa1>
  408bfd:	mov    rax,QWORD PTR [rbp-0x30]
  408c01:	leave  
  408c02:	ret    
  408c03:	push   rbp
  408c04:	mov    rbp,rsp
  408c07:	sub    rsp,0x50
  408c0b:	mov    QWORD PTR [rbp-0x28],rdi
  408c0f:	mov    QWORD PTR [rbp-0x30],rsi
  408c13:	mov    QWORD PTR [rbp-0x38],rdx
  408c17:	mov    QWORD PTR [rbp-0x40],rcx
  408c1b:	mov    QWORD PTR [rbp-0x48],r8
  408c1f:	mov    QWORD PTR [rbp-0x50],r9
  408c23:	mov    rax,QWORD PTR [rbp-0x30]
  408c27:	mov    QWORD PTR [rbp-0x18],rax
  408c2b:	mov    rdx,QWORD PTR [rbp-0x38]
  408c2f:	mov    rax,QWORD PTR [rbp-0x30]
  408c33:	mov    rsi,rdx
  408c36:	mov    rdi,rax
  408c39:	call   405779 <_start@@Base+0x619>
  408c3e:	mov    QWORD PTR [rbp-0x10],rax
  408c42:	movabs rax,0x696e7431ffffffff
  408c4c:	cmp    QWORD PTR [rbp-0x10],rax
  408c50:	ja     408cd8 <_start@@Base+0x3b78>
  408c56:	movabs rax,0xffffffff00000000
  408c60:	and    rax,QWORD PTR [rbp-0x10]
  408c64:	mov    rdx,rax
  408c67:	movabs rax,0x696e743100000000
  408c71:	cmp    rdx,rax
  408c74:	jne    408ccf <_start@@Base+0x3b6f>
  408c76:	mov    rax,QWORD PTR [rbp-0x30]
  408c7a:	mov    QWORD PTR [rbp-0x8],rax
  408c7e:	mov    rcx,QWORD PTR [rbp-0x50]
  408c82:	mov    rdx,QWORD PTR [rbp-0x38]
  408c86:	mov    rsi,QWORD PTR [rbp-0x8]
  408c8a:	mov    rax,QWORD PTR [rbp-0x28]
  408c8e:	mov    r8,rcx
  408c91:	mov    ecx,0x4
  408c96:	mov    rdi,rax
  408c99:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408c9e:	mov    QWORD PTR [rbp-0x30],rax
  408ca2:	mov    rax,QWORD PTR [rbp-0x30]
  408ca6:	cmp    rax,QWORD PTR [rbp-0x8]
  408caa:	je     408cc6 <_start@@Base+0x3b66>
  408cac:	mov    rax,QWORD PTR [rbp-0x48]
  408cb0:	mov    QWORD PTR [rax],0x2
  408cb7:	mov    rax,QWORD PTR [rbp-0x40]
  408cbb:	mov    DWORD PTR [rax],0x0
  408cc1:	jmp    408e4c <_start@@Base+0x3cec>
  408cc6:	mov    rax,QWORD PTR [rbp-0x18]
  408cca:	jmp    408e50 <_start@@Base+0x3cf0>
  408ccf:	mov    rax,QWORD PTR [rbp-0x18]
  408cd3:	jmp    408e50 <_start@@Base+0x3cf0>
  408cd8:	movabs rax,0x696e746e6566ffff
  408ce2:	cmp    QWORD PTR [rbp-0x10],rax
  408ce6:	ja     408d6e <_start@@Base+0x3c0e>
  408cec:	movabs rax,0xffffffff00000000
  408cf6:	and    rax,QWORD PTR [rbp-0x10]
  408cfa:	mov    rdx,rax
  408cfd:	movabs rax,0x696e743200000000
  408d07:	cmp    rdx,rax
  408d0a:	jne    408d65 <_start@@Base+0x3c05>
  408d0c:	mov    rax,QWORD PTR [rbp-0x30]
  408d10:	mov    QWORD PTR [rbp-0x8],rax
  408d14:	mov    rcx,QWORD PTR [rbp-0x50]
  408d18:	mov    rdx,QWORD PTR [rbp-0x38]
  408d1c:	mov    rsi,QWORD PTR [rbp-0x8]
  408d20:	mov    rax,QWORD PTR [rbp-0x28]
  408d24:	mov    r8,rcx
  408d27:	mov    ecx,0x4
  408d2c:	mov    rdi,rax
  408d2f:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408d34:	mov    QWORD PTR [rbp-0x30],rax
  408d38:	mov    rax,QWORD PTR [rbp-0x30]
  408d3c:	cmp    rax,QWORD PTR [rbp-0x8]
  408d40:	je     408d5c <_start@@Base+0x3bfc>
  408d42:	mov    rax,QWORD PTR [rbp-0x48]
  408d46:	mov    QWORD PTR [rax],0x2a
  408d4d:	mov    rax,QWORD PTR [rbp-0x40]
  408d51:	mov    DWORD PTR [rax],0x0
  408d57:	jmp    408e4c <_start@@Base+0x3cec>
  408d5c:	mov    rax,QWORD PTR [rbp-0x18]
  408d60:	jmp    408e50 <_start@@Base+0x3cf0>
  408d65:	mov    rax,QWORD PTR [rbp-0x18]
  408d69:	jmp    408e50 <_start@@Base+0x3cf0>
  408d6e:	mov    rax,QWORD PTR [rbp-0x10]
  408d72:	mov    al,0x0
  408d74:	mov    rdx,rax
  408d77:	movabs rax,0x696e746e65673200
  408d81:	cmp    rdx,rax
  408d84:	jne    408dd9 <_start@@Base+0x3c79>
  408d86:	mov    rax,QWORD PTR [rbp-0x30]
  408d8a:	mov    QWORD PTR [rbp-0x8],rax
  408d8e:	mov    rcx,QWORD PTR [rbp-0x50]
  408d92:	mov    rdx,QWORD PTR [rbp-0x38]
  408d96:	mov    rsi,QWORD PTR [rbp-0x8]
  408d9a:	mov    rax,QWORD PTR [rbp-0x28]
  408d9e:	mov    r8,rcx
  408da1:	mov    ecx,0x7
  408da6:	mov    rdi,rax
  408da9:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408dae:	mov    QWORD PTR [rbp-0x30],rax
  408db2:	mov    rax,QWORD PTR [rbp-0x30]
  408db6:	cmp    rax,QWORD PTR [rbp-0x8]
  408dba:	je     408dd3 <_start@@Base+0x3c73>
  408dbc:	mov    rax,QWORD PTR [rbp-0x48]
  408dc0:	mov    QWORD PTR [rax],0xffffffffffffffff
  408dc7:	mov    rax,QWORD PTR [rbp-0x40]
  408dcb:	mov    DWORD PTR [rax],0x1
  408dd1:	jmp    408e4c <_start@@Base+0x3cec>
  408dd3:	mov    rax,QWORD PTR [rbp-0x18]
  408dd7:	jmp    408e50 <_start@@Base+0x3cf0>
  408dd9:	mov    rax,QWORD PTR [rbp-0x10]
  408ddd:	mov    ax,0x0
  408de1:	mov    rdx,rax
  408de4:	movabs rax,0x696e746e65670000
  408dee:	cmp    rdx,rax
  408df1:	jne    408e46 <_start@@Base+0x3ce6>
  408df3:	mov    rax,QWORD PTR [rbp-0x30]
  408df7:	mov    QWORD PTR [rbp-0x8],rax
  408dfb:	mov    rcx,QWORD PTR [rbp-0x50]
  408dff:	mov    rdx,QWORD PTR [rbp-0x38]
  408e03:	mov    rsi,QWORD PTR [rbp-0x8]
  408e07:	mov    rax,QWORD PTR [rbp-0x28]
  408e0b:	mov    r8,rcx
  408e0e:	mov    ecx,0x6
  408e13:	mov    rdi,rax
  408e16:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408e1b:	mov    QWORD PTR [rbp-0x30],rax
  408e1f:	mov    rax,QWORD PTR [rbp-0x30]
  408e23:	cmp    rax,QWORD PTR [rbp-0x8]
  408e27:	je     408e40 <_start@@Base+0x3ce0>
  408e29:	mov    rax,QWORD PTR [rbp-0x48]
  408e2d:	mov    QWORD PTR [rax],0xfffffffffffffffe
  408e34:	mov    rax,QWORD PTR [rbp-0x40]
  408e38:	mov    DWORD PTR [rax],0x1
  408e3e:	jmp    408e4c <_start@@Base+0x3cec>
  408e40:	mov    rax,QWORD PTR [rbp-0x18]
  408e44:	jmp    408e50 <_start@@Base+0x3cf0>
  408e46:	mov    rax,QWORD PTR [rbp-0x18]
  408e4a:	jmp    408e50 <_start@@Base+0x3cf0>
  408e4c:	mov    rax,QWORD PTR [rbp-0x30]
  408e50:	leave  
  408e51:	ret    
  408e52:	push   rbp
  408e53:	mov    rbp,rsp
  408e56:	sub    rsp,0x50
  408e5a:	mov    QWORD PTR [rbp-0x28],rdi
  408e5e:	mov    QWORD PTR [rbp-0x30],rsi
  408e62:	mov    QWORD PTR [rbp-0x38],rdx
  408e66:	mov    QWORD PTR [rbp-0x40],rcx
  408e6a:	mov    QWORD PTR [rbp-0x48],r8
  408e6e:	mov    QWORD PTR [rbp-0x50],r9
  408e72:	mov    rax,QWORD PTR [rbp-0x30]
  408e76:	mov    QWORD PTR [rbp-0x18],rax
  408e7a:	mov    rdx,QWORD PTR [rbp-0x38]
  408e7e:	mov    rax,QWORD PTR [rbp-0x30]
  408e82:	mov    rsi,rdx
  408e85:	mov    rdi,rax
  408e88:	call   405779 <_start@@Base+0x619>
  408e8d:	mov    QWORD PTR [rbp-0x10],rax
  408e91:	movabs rax,0x68657831ffffffff
  408e9b:	cmp    QWORD PTR [rbp-0x10],rax
  408e9f:	ja     408f27 <_start@@Base+0x3dc7>
  408ea5:	movabs rax,0xffffffff00000000
  408eaf:	and    rax,QWORD PTR [rbp-0x10]
  408eb3:	mov    rdx,rax
  408eb6:	movabs rax,0x6865783100000000
  408ec0:	cmp    rdx,rax
  408ec3:	jne    408f1e <_start@@Base+0x3dbe>
  408ec5:	mov    rax,QWORD PTR [rbp-0x30]
  408ec9:	mov    QWORD PTR [rbp-0x8],rax
  408ecd:	mov    rcx,QWORD PTR [rbp-0x50]
  408ed1:	mov    rdx,QWORD PTR [rbp-0x38]
  408ed5:	mov    rsi,QWORD PTR [rbp-0x8]
  408ed9:	mov    rax,QWORD PTR [rbp-0x28]
  408edd:	mov    r8,rcx
  408ee0:	mov    ecx,0x4
  408ee5:	mov    rdi,rax
  408ee8:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408eed:	mov    QWORD PTR [rbp-0x30],rax
  408ef1:	mov    rax,QWORD PTR [rbp-0x30]
  408ef5:	cmp    rax,QWORD PTR [rbp-0x8]
  408ef9:	je     408f15 <_start@@Base+0x3db5>
  408efb:	mov    rax,QWORD PTR [rbp-0x48]
  408eff:	mov    QWORD PTR [rax],0x3
  408f06:	mov    rax,QWORD PTR [rbp-0x40]
  408f0a:	mov    DWORD PTR [rax],0x0
  408f10:	jmp    40900d <_start@@Base+0x3ead>
  408f15:	mov    rax,QWORD PTR [rbp-0x18]
  408f19:	jmp    409011 <_start@@Base+0x3eb1>
  408f1e:	mov    rax,QWORD PTR [rbp-0x18]
  408f22:	jmp    409011 <_start@@Base+0x3eb1>
  408f27:	mov    rax,QWORD PTR [rbp-0x10]
  408f2b:	mov    ax,0x0
  408f2f:	mov    rdx,rax
  408f32:	movabs rax,0x6865786e65670000
  408f3c:	cmp    rdx,rax
  408f3f:	jne    408f94 <_start@@Base+0x3e34>
  408f41:	mov    rax,QWORD PTR [rbp-0x30]
  408f45:	mov    QWORD PTR [rbp-0x8],rax
  408f49:	mov    rcx,QWORD PTR [rbp-0x50]
  408f4d:	mov    rdx,QWORD PTR [rbp-0x38]
  408f51:	mov    rsi,QWORD PTR [rbp-0x8]
  408f55:	mov    rax,QWORD PTR [rbp-0x28]
  408f59:	mov    r8,rcx
  408f5c:	mov    ecx,0x6
  408f61:	mov    rdi,rax
  408f64:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408f69:	mov    QWORD PTR [rbp-0x30],rax
  408f6d:	mov    rax,QWORD PTR [rbp-0x30]
  408f71:	cmp    rax,QWORD PTR [rbp-0x8]
  408f75:	je     408f8e <_start@@Base+0x3e2e>
  408f77:	mov    rax,QWORD PTR [rbp-0x48]
  408f7b:	mov    QWORD PTR [rax],0xfffffffffffffffe
  408f82:	mov    rax,QWORD PTR [rbp-0x40]
  408f86:	mov    DWORD PTR [rax],0x1
  408f8c:	jmp    40900d <_start@@Base+0x3ead>
  408f8e:	mov    rax,QWORD PTR [rbp-0x18]
  408f92:	jmp    409011 <_start@@Base+0x3eb1>
  408f94:	movabs rax,0xffffffff00000000
  408f9e:	and    rax,QWORD PTR [rbp-0x10]
  408fa2:	mov    rdx,rax
  408fa5:	movabs rax,0x6865783200000000
  408faf:	cmp    rdx,rax
  408fb2:	jne    409007 <_start@@Base+0x3ea7>
  408fb4:	mov    rax,QWORD PTR [rbp-0x30]
  408fb8:	mov    QWORD PTR [rbp-0x8],rax
  408fbc:	mov    rcx,QWORD PTR [rbp-0x50]
  408fc0:	mov    rdx,QWORD PTR [rbp-0x38]
  408fc4:	mov    rsi,QWORD PTR [rbp-0x8]
  408fc8:	mov    rax,QWORD PTR [rbp-0x28]
  408fcc:	mov    r8,rcx
  408fcf:	mov    ecx,0x4
  408fd4:	mov    rdi,rax
  408fd7:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  408fdc:	mov    QWORD PTR [rbp-0x30],rax
  408fe0:	mov    rax,QWORD PTR [rbp-0x30]
  408fe4:	cmp    rax,QWORD PTR [rbp-0x8]
  408fe8:	je     409001 <_start@@Base+0x3ea1>
  408fea:	mov    rax,QWORD PTR [rbp-0x48]
  408fee:	mov    QWORD PTR [rax],0x7eafbeaf
  408ff5:	mov    rax,QWORD PTR [rbp-0x40]
  408ff9:	mov    DWORD PTR [rax],0x0
  408fff:	jmp    40900d <_start@@Base+0x3ead>
  409001:	mov    rax,QWORD PTR [rbp-0x18]
  409005:	jmp    409011 <_start@@Base+0x3eb1>
  409007:	mov    rax,QWORD PTR [rbp-0x18]
  40900b:	jmp    409011 <_start@@Base+0x3eb1>
  40900d:	mov    rax,QWORD PTR [rbp-0x30]
  409011:	leave  
  409012:	ret    
  409013:	push   rbp
  409014:	mov    rbp,rsp
  409017:	sub    rsp,0x50
  40901b:	mov    QWORD PTR [rbp-0x28],rdi
  40901f:	mov    QWORD PTR [rbp-0x30],rsi
  409023:	mov    QWORD PTR [rbp-0x38],rdx
  409027:	mov    QWORD PTR [rbp-0x40],rcx
  40902b:	mov    QWORD PTR [rbp-0x48],r8
  40902f:	mov    QWORD PTR [rbp-0x50],r9
  409033:	mov    rax,QWORD PTR [rbp-0x30]
  409037:	mov    QWORD PTR [rbp-0x18],rax
  40903b:	mov    rdx,QWORD PTR [rbp-0x38]
  40903f:	mov    rax,QWORD PTR [rbp-0x30]
  409043:	mov    rsi,rdx
  409046:	mov    rdi,rax
  409049:	call   405779 <_start@@Base+0x619>
  40904e:	mov    QWORD PTR [rbp-0x10],rax
  409052:	movabs rax,0x477265656dffffff
  40905c:	cmp    QWORD PTR [rbp-0x10],rax
  409060:	ja     4090e8 <_start@@Base+0x3f88>
  409066:	movabs rax,0xffffffff00000000
  409070:	and    rax,QWORD PTR [rbp-0x10]
  409074:	mov    rdx,rax
  409077:	movabs rax,0x426c756500000000
  409081:	cmp    rdx,rax
  409084:	jne    4090df <_start@@Base+0x3f7f>
  409086:	mov    rax,QWORD PTR [rbp-0x30]
  40908a:	mov    QWORD PTR [rbp-0x8],rax
  40908e:	mov    rcx,QWORD PTR [rbp-0x50]
  409092:	mov    rdx,QWORD PTR [rbp-0x38]
  409096:	mov    rsi,QWORD PTR [rbp-0x8]
  40909a:	mov    rax,QWORD PTR [rbp-0x28]
  40909e:	mov    r8,rcx
  4090a1:	mov    ecx,0x4
  4090a6:	mov    rdi,rax
  4090a9:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  4090ae:	mov    QWORD PTR [rbp-0x30],rax
  4090b2:	mov    rax,QWORD PTR [rbp-0x30]
  4090b6:	cmp    rax,QWORD PTR [rbp-0x8]
  4090ba:	je     4090d6 <_start@@Base+0x3f76>
  4090bc:	mov    rax,QWORD PTR [rbp-0x48]
  4090c0:	mov    QWORD PTR [rax],0x8
  4090c7:	mov    rax,QWORD PTR [rbp-0x40]
  4090cb:	mov    DWORD PTR [rax],0x0
  4090d1:	jmp    4091d0 <_start@@Base+0x4070>
  4090d6:	mov    rax,QWORD PTR [rbp-0x18]
  4090da:	jmp    4091d4 <_start@@Base+0x4074>
  4090df:	mov    rax,QWORD PTR [rbp-0x18]
  4090e3:	jmp    4091d4 <_start@@Base+0x4074>
  4090e8:	movabs rax,0xffffff0000000000
  4090f2:	and    rax,QWORD PTR [rbp-0x10]
  4090f6:	mov    rdx,rax
  4090f9:	movabs rax,0x5265640000000000
  409103:	cmp    rdx,rax
  409106:	jne    40915b <_start@@Base+0x3ffb>
  409108:	mov    rax,QWORD PTR [rbp-0x30]
  40910c:	mov    QWORD PTR [rbp-0x8],rax
  409110:	mov    rcx,QWORD PTR [rbp-0x50]
  409114:	mov    rdx,QWORD PTR [rbp-0x38]
  409118:	mov    rsi,QWORD PTR [rbp-0x8]
  40911c:	mov    rax,QWORD PTR [rbp-0x28]
  409120:	mov    r8,rcx
  409123:	mov    ecx,0x3
  409128:	mov    rdi,rax
  40912b:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  409130:	mov    QWORD PTR [rbp-0x30],rax
  409134:	mov    rax,QWORD PTR [rbp-0x30]
  409138:	cmp    rax,QWORD PTR [rbp-0x8]
  40913c:	je     409155 <_start@@Base+0x3ff5>
  40913e:	mov    rax,QWORD PTR [rbp-0x48]
  409142:	mov    QWORD PTR [rax],0x1
  409149:	mov    rax,QWORD PTR [rbp-0x40]
  40914d:	mov    DWORD PTR [rax],0x0
  409153:	jmp    4091d0 <_start@@Base+0x4070>
  409155:	mov    rax,QWORD PTR [rbp-0x18]
  409159:	jmp    4091d4 <_start@@Base+0x4074>
  40915b:	mov    rax,QWORD PTR [rbp-0x10]
  40915f:	and    rax,0xffffffffff000000
  409165:	mov    rdx,rax
  409168:	movabs rax,0x477265656e000000
  409172:	cmp    rdx,rax
  409175:	jne    4091ca <_start@@Base+0x406a>
  409177:	mov    rax,QWORD PTR [rbp-0x30]
  40917b:	mov    QWORD PTR [rbp-0x8],rax
  40917f:	mov    rcx,QWORD PTR [rbp-0x50]
  409183:	mov    rdx,QWORD PTR [rbp-0x38]
  409187:	mov    rsi,QWORD PTR [rbp-0x8]
  40918b:	mov    rax,QWORD PTR [rbp-0x28]
  40918f:	mov    r8,rcx
  409192:	mov    ecx,0x5
  409197:	mov    rdi,rax
  40919a:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  40919f:	mov    QWORD PTR [rbp-0x30],rax
  4091a3:	mov    rax,QWORD PTR [rbp-0x30]
  4091a7:	cmp    rax,QWORD PTR [rbp-0x8]
  4091ab:	je     4091c4 <_start@@Base+0x4064>
  4091ad:	mov    rax,QWORD PTR [rbp-0x48]
  4091b1:	mov    QWORD PTR [rax],0x2
  4091b8:	mov    rax,QWORD PTR [rbp-0x40]
  4091bc:	mov    DWORD PTR [rax],0x0
  4091c2:	jmp    4091d0 <_start@@Base+0x4070>
  4091c4:	mov    rax,QWORD PTR [rbp-0x18]
  4091c8:	jmp    4091d4 <_start@@Base+0x4074>
  4091ca:	mov    rax,QWORD PTR [rbp-0x18]
  4091ce:	jmp    4091d4 <_start@@Base+0x4074>
  4091d0:	mov    rax,QWORD PTR [rbp-0x30]
  4091d4:	leave  
  4091d5:	ret    
  4091d6:	push   rbp
  4091d7:	mov    rbp,rsp
  4091da:	sub    rsp,0x30
  4091de:	mov    QWORD PTR [rbp-0x8],rdi
  4091e2:	mov    QWORD PTR [rbp-0x10],rsi
  4091e6:	mov    QWORD PTR [rbp-0x18],rdx
  4091ea:	mov    eax,ecx
  4091ec:	mov    QWORD PTR [rbp-0x28],r8
  4091f0:	mov    BYTE PTR [rbp-0x1c],al
  4091f3:	mov    rax,QWORD PTR [rbp-0x28]
  4091f7:	mov    DWORD PTR [rax],0x0
  4091fd:	movzx  eax,BYTE PTR [rbp-0x1c]
  409201:	cmp    eax,0x4
  409204:	ja     4092c4 <_start@@Base+0x4164>
  40920a:	mov    eax,eax
  40920c:	lea    rdx,[rax*4+0x0]
  409214:	lea    rax,[rip+0x2ce2d]        # 436048 <_IO_stdin_used@@Base+0x48>
  40921b:	mov    eax,DWORD PTR [rdx+rax*1]
  40921e:	movsxd rdx,eax
  409221:	lea    rax,[rip+0x2ce20]        # 436048 <_IO_stdin_used@@Base+0x48>
  409228:	add    rax,rdx
  40922b:	jmp    rax
  40922d:	mov    rdx,QWORD PTR [rbp-0x18]
  409231:	mov    rcx,QWORD PTR [rbp-0x10]
  409235:	mov    rax,QWORD PTR [rbp-0x8]
  409239:	mov    rsi,rcx
  40923c:	mov    rdi,rax
  40923f:	call   40631c <_start@@Base+0x11bc>
  409244:	jmp    409340 <_start@@Base+0x41e0>
  409249:	mov    rcx,QWORD PTR [rbp-0x28]
  40924d:	mov    rdx,QWORD PTR [rbp-0x18]
  409251:	mov    rsi,QWORD PTR [rbp-0x10]
  409255:	mov    rax,QWORD PTR [rbp-0x8]
  409259:	mov    rdi,rax
  40925c:	call   40e164 <_start@@Base+0x9004>
  409261:	mov    QWORD PTR [rbp-0x10],rax
  409265:	jmp    409306 <_start@@Base+0x41a6>
  40926a:	mov    rcx,QWORD PTR [rbp-0x28]
  40926e:	mov    rdx,QWORD PTR [rbp-0x18]
  409272:	mov    rsi,QWORD PTR [rbp-0x10]
  409276:	mov    rax,QWORD PTR [rbp-0x8]
  40927a:	mov    rdi,rax
  40927d:	call   409f9e <_start@@Base+0x4e3e>
  409282:	mov    QWORD PTR [rbp-0x10],rax
  409286:	jmp    409306 <_start@@Base+0x41a6>
  409288:	mov    rcx,QWORD PTR [rbp-0x28]
  40928c:	mov    rdx,QWORD PTR [rbp-0x18]
  409290:	mov    rsi,QWORD PTR [rbp-0x10]
  409294:	mov    rax,QWORD PTR [rbp-0x8]
  409298:	mov    rdi,rax
  40929b:	call   40864e <_start@@Base+0x34ee>
  4092a0:	mov    QWORD PTR [rbp-0x10],rax
  4092a4:	jmp    409306 <_start@@Base+0x41a6>
  4092a6:	mov    rcx,QWORD PTR [rbp-0x28]
  4092aa:	mov    rdx,QWORD PTR [rbp-0x18]
  4092ae:	mov    rsi,QWORD PTR [rbp-0x10]
  4092b2:	mov    rax,QWORD PTR [rbp-0x8]
  4092b6:	mov    rdi,rax
  4092b9:	call   40c029 <_start@@Base+0x6ec9>
  4092be:	mov    QWORD PTR [rbp-0x10],rax
  4092c2:	jmp    409306 <_start@@Base+0x41a6>
  4092c4:	mov    rax,QWORD PTR [rbp-0x8]
  4092c8:	mov    eax,DWORD PTR [rax+0x10]
  4092cb:	and    eax,0x1
  4092ce:	test   eax,eax
  4092d0:	jne    4092ed <_start@@Base+0x418d>
  4092d2:	mov    rdx,QWORD PTR [rbp-0x18]
  4092d6:	mov    rsi,QWORD PTR [rbp-0x10]
  4092da:	mov    rax,QWORD PTR [rbp-0x8]
  4092de:	mov    ecx,0xf
  4092e3:	mov    rdi,rax
  4092e6:	call   42665a <flatcc_json_parser_set_error@@Base>
  4092eb:	jmp    409340 <_start@@Base+0x41e0>
  4092ed:	mov    rdx,QWORD PTR [rbp-0x18]
  4092f1:	mov    rcx,QWORD PTR [rbp-0x10]
  4092f5:	mov    rax,QWORD PTR [rbp-0x8]
  4092f9:	mov    rsi,rcx
  4092fc:	mov    rdi,rax
  4092ff:	call   427761 <flatcc_json_parser_generic_json@@Base>
  409304:	jmp    409340 <_start@@Base+0x41e0>
  409306:	mov    rax,QWORD PTR [rbp-0x8]
  40930a:	mov    eax,DWORD PTR [rax+0x20]
  40930d:	test   eax,eax
  40930f:	je     409317 <_start@@Base+0x41b7>
  409311:	mov    rax,QWORD PTR [rbp-0x10]
  409315:	jmp    409340 <_start@@Base+0x41e0>
  409317:	mov    rax,QWORD PTR [rbp-0x28]
  40931b:	mov    eax,DWORD PTR [rax]
  40931d:	test   eax,eax
  40931f:	jne    40933c <_start@@Base+0x41dc>
  409321:	mov    rdx,QWORD PTR [rbp-0x18]
  409325:	mov    rsi,QWORD PTR [rbp-0x10]
  409329:	mov    rax,QWORD PTR [rbp-0x8]
  40932d:	mov    ecx,0x21
  409332:	mov    rdi,rax
  409335:	call   42665a <flatcc_json_parser_set_error@@Base>
  40933a:	jmp    409340 <_start@@Base+0x41e0>
  40933c:	mov    rax,QWORD PTR [rbp-0x10]
  409340:	leave  
  409341:	ret    
  409342:	push   rbp
  409343:	mov    rbp,rsp
  409346:	mov    eax,edi
  409348:	mov    BYTE PTR [rbp-0x4],al
  40934b:	movzx  eax,BYTE PTR [rbp-0x4]
  40934f:	cmp    eax,0x4
  409352:	ja     40939a <_start@@Base+0x423a>
  409354:	mov    eax,eax
  409356:	lea    rdx,[rax*4+0x0]
  40935e:	lea    rax,[rip+0x2ccf7]        # 43605c <_IO_stdin_used@@Base+0x5c>
  409365:	mov    eax,DWORD PTR [rdx+rax*1]
  409368:	movsxd rdx,eax
  40936b:	lea    rax,[rip+0x2ccea]        # 43605c <_IO_stdin_used@@Base+0x5c>
  409372:	add    rax,rdx
  409375:	jmp    rax
  409377:	mov    eax,0x1
  40937c:	jmp    40939f <_start@@Base+0x423f>
  40937e:	mov    eax,0x1
  409383:	jmp    40939f <_start@@Base+0x423f>
  409385:	mov    eax,0x1
  40938a:	jmp    40939f <_start@@Base+0x423f>
  40938c:	mov    eax,0x1
  409391:	jmp    40939f <_start@@Base+0x423f>
  409393:	mov    eax,0x1
  409398:	jmp    40939f <_start@@Base+0x423f>
  40939a:	mov    eax,0x0
  40939f:	pop    rbp
  4093a0:	ret    
  4093a1:	push   rbp
  4093a2:	mov    rbp,rsp
  4093a5:	sub    rsp,0x50
  4093a9:	mov    QWORD PTR [rbp-0x28],rdi
  4093ad:	mov    QWORD PTR [rbp-0x30],rsi
  4093b1:	mov    QWORD PTR [rbp-0x38],rdx
  4093b5:	mov    QWORD PTR [rbp-0x40],rcx
  4093b9:	mov    QWORD PTR [rbp-0x48],r8
  4093bd:	mov    QWORD PTR [rbp-0x50],r9
  4093c1:	mov    rax,QWORD PTR [rbp-0x30]
  4093c5:	mov    QWORD PTR [rbp-0x18],rax
  4093c9:	mov    rdx,QWORD PTR [rbp-0x38]
  4093cd:	mov    rax,QWORD PTR [rbp-0x30]
  4093d1:	mov    rsi,rdx
  4093d4:	mov    rdi,rax
  4093d7:	call   405779 <_start@@Base+0x619>
  4093dc:	mov    QWORD PTR [rbp-0x10],rax
  4093e0:	movabs rax,0x4d6f6e73746571ff
  4093ea:	cmp    QWORD PTR [rbp-0x10],rax
  4093ee:	ja     409476 <_start@@Base+0x4316>
  4093f4:	movabs rax,0xffffff0000000000
  4093fe:	and    rax,QWORD PTR [rbp-0x10]
  409402:	mov    rdx,rax
  409405:	movabs rax,0x416c740000000000
  40940f:	cmp    rdx,rax
  409412:	jne    40946d <_start@@Base+0x430d>
  409414:	mov    rax,QWORD PTR [rbp-0x30]
  409418:	mov    QWORD PTR [rbp-0x8],rax
  40941c:	mov    rcx,QWORD PTR [rbp-0x50]
  409420:	mov    rdx,QWORD PTR [rbp-0x38]
  409424:	mov    rsi,QWORD PTR [rbp-0x8]
  409428:	mov    rax,QWORD PTR [rbp-0x28]
  40942c:	mov    r8,rcx
  40942f:	mov    ecx,0x3
  409434:	mov    rdi,rax
  409437:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  40943c:	mov    QWORD PTR [rbp-0x30],rax
  409440:	mov    rax,QWORD PTR [rbp-0x30]
  409444:	cmp    rax,QWORD PTR [rbp-0x8]
  409448:	je     409464 <_start@@Base+0x4304>
  40944a:	mov    rax,QWORD PTR [rbp-0x48]
  40944e:	mov    QWORD PTR [rax],0x4
  409455:	mov    rax,QWORD PTR [rbp-0x40]
  409459:	mov    DWORD PTR [rax],0x0
  40945f:	jmp    40969a <_start@@Base+0x453a>
  409464:	mov    rax,QWORD PTR [rbp-0x18]
  409468:	jmp    40969e <_start@@Base+0x453e>
  40946d:	mov    rax,QWORD PTR [rbp-0x18]
  409471:	jmp    40969e <_start@@Base+0x453e>
  409476:	movabs rax,0x4d6f6e7374657232
  409480:	cmp    QWORD PTR [rbp-0x10],rax
  409484:	jne    4094da <_start@@Base+0x437a>
  409486:	mov    rax,QWORD PTR [rbp-0x30]
  40948a:	mov    QWORD PTR [rbp-0x8],rax
  40948e:	mov    rcx,QWORD PTR [rbp-0x50]
  409492:	mov    rdx,QWORD PTR [rbp-0x38]
  409496:	mov    rsi,QWORD PTR [rbp-0x8]
  40949a:	mov    rax,QWORD PTR [rbp-0x28]
  40949e:	mov    r8,rcx
  4094a1:	mov    ecx,0x8
  4094a6:	mov    rdi,rax
  4094a9:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  4094ae:	mov    QWORD PTR [rbp-0x30],rax
  4094b2:	mov    rax,QWORD PTR [rbp-0x30]
  4094b6:	cmp    rax,QWORD PTR [rbp-0x8]
  4094ba:	je     409542 <_start@@Base+0x43e2>
  4094c0:	mov    rax,QWORD PTR [rbp-0x48]
  4094c4:	mov    QWORD PTR [rax],0x3
  4094cb:	mov    rax,QWORD PTR [rbp-0x40]
  4094cf:	mov    DWORD PTR [rax],0x0
  4094d5:	jmp    40969a <_start@@Base+0x453a>
  4094da:	mov    rax,QWORD PTR [rbp-0x10]
  4094de:	mov    al,0x0
  4094e0:	mov    rdx,rax
  4094e3:	movabs rax,0x4d6f6e7374657200
  4094ed:	cmp    rdx,rax
  4094f0:	jne    409545 <_start@@Base+0x43e5>
  4094f2:	mov    rax,QWORD PTR [rbp-0x30]
  4094f6:	mov    QWORD PTR [rbp-0x8],rax
  4094fa:	mov    rcx,QWORD PTR [rbp-0x50]
  4094fe:	mov    rdx,QWORD PTR [rbp-0x38]
  409502:	mov    rsi,QWORD PTR [rbp-0x8]
  409506:	mov    rax,QWORD PTR [rbp-0x28]
  40950a:	mov    r8,rcx
  40950d:	mov    ecx,0x7
  409512:	mov    rdi,rax
  409515:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  40951a:	mov    QWORD PTR [rbp-0x30],rax
  40951e:	mov    rax,QWORD PTR [rbp-0x30]
  409522:	cmp    rax,QWORD PTR [rbp-0x8]
  409526:	je     409548 <_start@@Base+0x43e8>
  409528:	mov    rax,QWORD PTR [rbp-0x48]
  40952c:	mov    QWORD PTR [rax],0x1
  409533:	mov    rax,QWORD PTR [rbp-0x40]
  409537:	mov    DWORD PTR [rax],0x0
  40953d:	jmp    40969a <_start@@Base+0x453a>
  409542:	nop
  409543:	jmp    409549 <_start@@Base+0x43e9>
  409545:	nop
  409546:	jmp    409549 <_start@@Base+0x43e9>
  409548:	nop
  409549:	movabs rax,0xffffffff00000000
  409553:	and    rax,QWORD PTR [rbp-0x10]
  409557:	mov    rdx,rax
  40955a:	movabs rax,0x4e4f4e4500000000
  409564:	cmp    rdx,rax
  409567:	jne    4095b9 <_start@@Base+0x4459>
  409569:	mov    rax,QWORD PTR [rbp-0x30]
  40956d:	mov    QWORD PTR [rbp-0x8],rax
  409571:	mov    rcx,QWORD PTR [rbp-0x50]
  409575:	mov    rdx,QWORD PTR [rbp-0x38]
  409579:	mov    rsi,QWORD PTR [rbp-0x8]
  40957d:	mov    rax,QWORD PTR [rbp-0x28]
  409581:	mov    r8,rcx
  409584:	mov    ecx,0x4
  409589:	mov    rdi,rax
  40958c:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  409591:	mov    QWORD PTR [rbp-0x30],rax
  409595:	mov    rax,QWORD PTR [rbp-0x30]
  409599:	cmp    rax,QWORD PTR [rbp-0x8]
  40959d:	je     4095bc <_start@@Base+0x445c>
  40959f:	mov    rax,QWORD PTR [rbp-0x48]
  4095a3:	mov    QWORD PTR [rax],0x0
  4095aa:	mov    rax,QWORD PTR [rbp-0x40]
  4095ae:	mov    DWORD PTR [rax],0x0
  4095b4:	jmp    40969a <_start@@Base+0x453a>
  4095b9:	nop
  4095ba:	jmp    4095bd <_start@@Base+0x445d>
  4095bc:	nop
  4095bd:	movabs rax,0x5465737453696d70
  4095c7:	cmp    QWORD PTR [rbp-0x10],rax
  4095cb:	jne    409694 <_start@@Base+0x4534>
  4095d1:	add    QWORD PTR [rbp-0x30],0x8
  4095d6:	mov    rdx,QWORD PTR [rbp-0x38]
  4095da:	mov    rax,QWORD PTR [rbp-0x30]
  4095de:	mov    rsi,rdx
  4095e1:	mov    rdi,rax
  4095e4:	call   405779 <_start@@Base+0x619>
  4095e9:	mov    QWORD PTR [rbp-0x10],rax
  4095ed:	movabs rax,0x6c655461626c6557
  4095f7:	cmp    QWORD PTR [rbp-0x10],rax
  4095fb:	jne    40968e <_start@@Base+0x452e>
  409601:	add    QWORD PTR [rbp-0x30],0x8
  409606:	mov    rdx,QWORD PTR [rbp-0x38]
  40960a:	mov    rax,QWORD PTR [rbp-0x30]
  40960e:	mov    rsi,rdx
  409611:	mov    rdi,rax
  409614:	call   405779 <_start@@Base+0x619>
  409619:	mov    QWORD PTR [rbp-0x10],rax
  40961d:	mov    rax,QWORD PTR [rbp-0x10]
  409621:	mov    al,0x0
  409623:	mov    rdx,rax
  409626:	movabs rax,0x697468456e756d00
  409630:	cmp    rdx,rax
  409633:	jne    409688 <_start@@Base+0x4528>
  409635:	mov    rax,QWORD PTR [rbp-0x30]
  409639:	mov    QWORD PTR [rbp-0x8],rax
  40963d:	mov    rcx,QWORD PTR [rbp-0x50]
  409641:	mov    rdx,QWORD PTR [rbp-0x38]
  409645:	mov    rsi,QWORD PTR [rbp-0x8]
  409649:	mov    rax,QWORD PTR [rbp-0x28]
  40964d:	mov    r8,rcx
  409650:	mov    ecx,0x7
  409655:	mov    rdi,rax
  409658:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  40965d:	mov    QWORD PTR [rbp-0x30],rax
  409661:	mov    rax,QWORD PTR [rbp-0x30]
  409665:	cmp    rax,QWORD PTR [rbp-0x8]
  409669:	je     409682 <_start@@Base+0x4522>
  40966b:	mov    rax,QWORD PTR [rbp-0x48]
  40966f:	mov    QWORD PTR [rax],0x2
  409676:	mov    rax,QWORD PTR [rbp-0x40]
  40967a:	mov    DWORD PTR [rax],0x0
  409680:	jmp    40969a <_start@@Base+0x453a>
  409682:	mov    rax,QWORD PTR [rbp-0x18]
  409686:	jmp    40969e <_start@@Base+0x453e>
  409688:	mov    rax,QWORD PTR [rbp-0x18]
  40968c:	jmp    40969e <_start@@Base+0x453e>
  40968e:	mov    rax,QWORD PTR [rbp-0x18]
  409692:	jmp    40969e <_start@@Base+0x453e>
  409694:	mov    rax,QWORD PTR [rbp-0x18]
  409698:	jmp    40969e <_start@@Base+0x453e>
  40969a:	mov    rax,QWORD PTR [rbp-0x30]
  40969e:	leave  
  40969f:	ret    
  4096a0:	push   rbp
  4096a1:	mov    rbp,rsp
  4096a4:	sub    rsp,0x50
  4096a8:	mov    QWORD PTR [rbp-0x38],rdi
  4096ac:	mov    QWORD PTR [rbp-0x40],rsi
  4096b0:	mov    QWORD PTR [rbp-0x48],rdx
  4096b4:	mov    QWORD PTR [rbp-0x50],rcx
  4096b8:	mov    rax,QWORD PTR fs:0x28
  4096c1:	mov    QWORD PTR [rbp-0x8],rax
  4096c5:	xor    eax,eax
  4096c7:	lea    rcx,[rbp-0x24]
  4096cb:	mov    rdx,QWORD PTR [rbp-0x48]
  4096cf:	mov    rsi,QWORD PTR [rbp-0x40]
  4096d3:	mov    rax,QWORD PTR [rbp-0x38]
  4096d7:	mov    rdi,rax
  4096da:	call   405880 <_start@@Base+0x720>
  4096df:	mov    QWORD PTR [rbp-0x40],rax
  4096e3:	jmp    409977 <_start@@Base+0x4817>
  4096e8:	mov    rdx,QWORD PTR [rbp-0x48]
  4096ec:	mov    rcx,QWORD PTR [rbp-0x40]
  4096f0:	mov    rax,QWORD PTR [rbp-0x38]
  4096f4:	mov    rsi,rcx
  4096f7:	mov    rdi,rax
  4096fa:	call   4055e5 <_start@@Base+0x485>
  4096ff:	mov    QWORD PTR [rbp-0x40],rax
  409703:	mov    rdx,QWORD PTR [rbp-0x48]
  409707:	mov    rax,QWORD PTR [rbp-0x40]
  40970b:	mov    rsi,rdx
  40970e:	mov    rdi,rax
  409711:	call   405779 <_start@@Base+0x619>
  409716:	mov    QWORD PTR [rbp-0x20],rax
  40971a:	movabs rax,0xff00000000000000
  409724:	and    rax,QWORD PTR [rbp-0x20]
  409728:	mov    rdx,rax
  40972b:	movabs rax,0x6200000000000000
  409735:	cmp    rdx,rax
  409738:	jne    409833 <_start@@Base+0x46d3>
  40973e:	mov    rax,QWORD PTR [rbp-0x40]
  409742:	mov    QWORD PTR [rbp-0x18],rax
  409746:	mov    rdx,QWORD PTR [rbp-0x48]
  40974a:	mov    rsi,QWORD PTR [rbp-0x18]
  40974e:	mov    rax,QWORD PTR [rbp-0x38]
  409752:	mov    ecx,0x1
  409757:	mov    rdi,rax
  40975a:	call   405c76 <_start@@Base+0xb16>
  40975f:	mov    QWORD PTR [rbp-0x40],rax
  409763:	mov    rax,QWORD PTR [rbp-0x18]
  409767:	cmp    rax,QWORD PTR [rbp-0x40]
  40976b:	je     409813 <_start@@Base+0x46b3>
  409771:	mov    BYTE PTR [rbp-0x26],0x0
  409775:	mov    rax,QWORD PTR [rbp-0x50]
  409779:	add    rax,0x2
  40977d:	mov    QWORD PTR [rbp-0x10],rax
  409781:	mov    rax,QWORD PTR [rbp-0x40]
  409785:	mov    QWORD PTR [rbp-0x18],rax
  409789:	lea    rcx,[rbp-0x26]
  40978d:	mov    rdx,QWORD PTR [rbp-0x48]
  409791:	mov    rsi,QWORD PTR [rbp-0x18]
  409795:	mov    rax,QWORD PTR [rbp-0x38]
  409799:	mov    rdi,rax
  40979c:	call   4068ec <_start@@Base+0x178c>
  4097a1:	mov    QWORD PTR [rbp-0x40],rax
  4097a5:	mov    rax,QWORD PTR [rbp-0x18]
  4097a9:	cmp    rax,QWORD PTR [rbp-0x40]
  4097ad:	jne    4097f9 <_start@@Base+0x4699>
  4097af:	mov    rax,QWORD PTR [rbp-0x40]
  4097b3:	mov    QWORD PTR [rbp-0x18],rax
  4097b7:	lea    rcx,[rbp-0x26]
  4097bb:	mov    rdx,QWORD PTR [rbp-0x48]
  4097bf:	mov    rsi,QWORD PTR [rbp-0x18]
  4097c3:	mov    rax,QWORD PTR [rbp-0x38]
  4097c7:	mov    r8,rcx
  4097ca:	lea    rcx,[rip+0x3c90f]        # 4460e0 <__data_start@@Base+0x20>
  4097d1:	mov    rdi,rax
  4097d4:	call   407424 <_start@@Base+0x22c4>
  4097d9:	mov    QWORD PTR [rbp-0x40],rax
  4097dd:	mov    rax,QWORD PTR [rbp-0x40]
  4097e1:	cmp    rax,QWORD PTR [rbp-0x18]
  4097e5:	je     409988 <_start@@Base+0x4828>
  4097eb:	mov    rax,QWORD PTR [rbp-0x40]
  4097ef:	cmp    rax,QWORD PTR [rbp-0x48]
  4097f3:	je     409988 <_start@@Base+0x4828>
  4097f9:	movzx  eax,BYTE PTR [rbp-0x26]
  4097fd:	movsx  edx,al
  409800:	mov    rax,QWORD PTR [rbp-0x10]
  409804:	mov    esi,edx
  409806:	mov    rdi,rax
  409809:	call   40534b <_start@@Base+0x1eb>
  40980e:	jmp    40995b <_start@@Base+0x47fb>
  409813:	mov    rdx,QWORD PTR [rbp-0x48]
  409817:	mov    rcx,QWORD PTR [rbp-0x40]
  40981b:	mov    rax,QWORD PTR [rbp-0x38]
  40981f:	mov    rsi,rcx
  409822:	mov    rdi,rax
  409825:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40982a:	mov    QWORD PTR [rbp-0x40],rax
  40982e:	jmp    40995b <_start@@Base+0x47fb>
  409833:	movabs rax,0xff00000000000000
  40983d:	and    rax,QWORD PTR [rbp-0x20]
  409841:	mov    rdx,rax
  409844:	movabs rax,0x6100000000000000
  40984e:	cmp    rdx,rax
  409851:	jne    409940 <_start@@Base+0x47e0>
  409857:	mov    rax,QWORD PTR [rbp-0x40]
  40985b:	mov    QWORD PTR [rbp-0x18],rax
  40985f:	mov    rdx,QWORD PTR [rbp-0x48]
  409863:	mov    rsi,QWORD PTR [rbp-0x18]
  409867:	mov    rax,QWORD PTR [rbp-0x38]
  40986b:	mov    ecx,0x1
  409870:	mov    rdi,rax
  409873:	call   405c76 <_start@@Base+0xb16>
  409878:	mov    QWORD PTR [rbp-0x40],rax
  40987c:	mov    rax,QWORD PTR [rbp-0x18]
  409880:	cmp    rax,QWORD PTR [rbp-0x40]
  409884:	je     409923 <_start@@Base+0x47c3>
  40988a:	mov    WORD PTR [rbp-0x26],0x0
  409890:	mov    rax,QWORD PTR [rbp-0x50]
  409894:	mov    QWORD PTR [rbp-0x10],rax
  409898:	mov    rax,QWORD PTR [rbp-0x40]
  40989c:	mov    QWORD PTR [rbp-0x18],rax
  4098a0:	lea    rcx,[rbp-0x26]
  4098a4:	mov    rdx,QWORD PTR [rbp-0x48]
  4098a8:	mov    rsi,QWORD PTR [rbp-0x18]
  4098ac:	mov    rax,QWORD PTR [rbp-0x38]
  4098b0:	mov    rdi,rax
  4098b3:	call   406827 <_start@@Base+0x16c7>
  4098b8:	mov    QWORD PTR [rbp-0x40],rax
  4098bc:	mov    rax,QWORD PTR [rbp-0x18]
  4098c0:	cmp    rax,QWORD PTR [rbp-0x40]
  4098c4:	jne    40990c <_start@@Base+0x47ac>
  4098c6:	mov    rax,QWORD PTR [rbp-0x40]
  4098ca:	mov    QWORD PTR [rbp-0x18],rax
  4098ce:	lea    rcx,[rbp-0x26]
  4098d2:	mov    rdx,QWORD PTR [rbp-0x48]
  4098d6:	mov    rsi,QWORD PTR [rbp-0x18]
  4098da:	mov    rax,QWORD PTR [rbp-0x38]
  4098de:	mov    r8,rcx
  4098e1:	lea    rcx,[rip+0x3c818]        # 446100 <__data_start@@Base+0x40>
  4098e8:	mov    rdi,rax
  4098eb:	call   4072c6 <_start@@Base+0x2166>
  4098f0:	mov    QWORD PTR [rbp-0x40],rax
  4098f4:	mov    rax,QWORD PTR [rbp-0x40]
  4098f8:	cmp    rax,QWORD PTR [rbp-0x18]
  4098fc:	je     409988 <_start@@Base+0x4828>
  409902:	mov    rax,QWORD PTR [rbp-0x40]
  409906:	cmp    rax,QWORD PTR [rbp-0x48]
  40990a:	je     409988 <_start@@Base+0x4828>
  40990c:	movzx  eax,WORD PTR [rbp-0x26]
  409910:	movsx  edx,ax
  409913:	mov    rax,QWORD PTR [rbp-0x10]
  409917:	mov    esi,edx
  409919:	mov    rdi,rax
  40991c:	call   405382 <_start@@Base+0x222>
  409921:	jmp    40995b <_start@@Base+0x47fb>
  409923:	mov    rdx,QWORD PTR [rbp-0x48]
  409927:	mov    rcx,QWORD PTR [rbp-0x40]
  40992b:	mov    rax,QWORD PTR [rbp-0x38]
  40992f:	mov    rsi,rcx
  409932:	mov    rdi,rax
  409935:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40993a:	mov    QWORD PTR [rbp-0x40],rax
  40993e:	jmp    40995b <_start@@Base+0x47fb>
  409940:	mov    rdx,QWORD PTR [rbp-0x48]
  409944:	mov    rcx,QWORD PTR [rbp-0x40]
  409948:	mov    rax,QWORD PTR [rbp-0x38]
  40994c:	mov    rsi,rcx
  40994f:	mov    rdi,rax
  409952:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  409957:	mov    QWORD PTR [rbp-0x40],rax
  40995b:	lea    rcx,[rbp-0x24]
  40995f:	mov    rdx,QWORD PTR [rbp-0x48]
  409963:	mov    rsi,QWORD PTR [rbp-0x40]
  409967:	mov    rax,QWORD PTR [rbp-0x38]
  40996b:	mov    rdi,rax
  40996e:	call   40593d <_start@@Base+0x7dd>
  409973:	mov    QWORD PTR [rbp-0x40],rax
  409977:	mov    eax,DWORD PTR [rbp-0x24]
  40997a:	test   eax,eax
  40997c:	jne    4096e8 <_start@@Base+0x4588>
  409982:	mov    rax,QWORD PTR [rbp-0x40]
  409986:	jmp    4099a1 <_start@@Base+0x4841>
  409988:	mov    rdx,QWORD PTR [rbp-0x48]
  40998c:	mov    rsi,QWORD PTR [rbp-0x40]
  409990:	mov    rax,QWORD PTR [rbp-0x38]
  409994:	mov    ecx,0x21
  409999:	mov    rdi,rax
  40999c:	call   42665a <flatcc_json_parser_set_error@@Base>
  4099a1:	mov    rdi,QWORD PTR [rbp-0x8]
  4099a5:	xor    rdi,QWORD PTR fs:0x28
  4099ae:	je     4099b5 <_start@@Base+0x4855>
  4099b0:	call   405070 <__stack_chk_fail@plt>
  4099b5:	leave  
  4099b6:	ret    
  4099b7:	push   rbp
  4099b8:	mov    rbp,rsp
  4099bb:	sub    rsp,0x30
  4099bf:	mov    QWORD PTR [rbp-0x18],rdi
  4099c3:	mov    QWORD PTR [rbp-0x20],rsi
  4099c7:	mov    QWORD PTR [rbp-0x28],rdx
  4099cb:	mov    QWORD PTR [rbp-0x30],rcx
  4099cf:	mov    rax,QWORD PTR [rbp-0x30]
  4099d3:	mov    DWORD PTR [rax],0x0
  4099d9:	mov    rax,QWORD PTR [rbp-0x18]
  4099dd:	mov    rax,QWORD PTR [rax]
  4099e0:	mov    edx,0x2
  4099e5:	mov    esi,0x4
  4099ea:	mov    rdi,rax
  4099ed:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  4099f2:	mov    QWORD PTR [rbp-0x8],rax
  4099f6:	cmp    QWORD PTR [rbp-0x8],0x0
  4099fb:	je     409a4a <_start@@Base+0x48ea>
  4099fd:	mov    rcx,QWORD PTR [rbp-0x8]
  409a01:	mov    rdx,QWORD PTR [rbp-0x28]
  409a05:	mov    rsi,QWORD PTR [rbp-0x20]
  409a09:	mov    rax,QWORD PTR [rbp-0x18]
  409a0d:	mov    rdi,rax
  409a10:	call   4096a0 <_start@@Base+0x4540>
  409a15:	mov    QWORD PTR [rbp-0x20],rax
  409a19:	mov    rax,QWORD PTR [rbp-0x20]
  409a1d:	cmp    rax,QWORD PTR [rbp-0x28]
  409a21:	je     409a4b <_start@@Base+0x48eb>
  409a23:	mov    rax,QWORD PTR [rbp-0x18]
  409a27:	mov    rax,QWORD PTR [rax]
  409a2a:	mov    rdi,rax
  409a2d:	call   41cd71 <flatcc_builder_end_struct@@Base>
  409a32:	mov    edx,eax
  409a34:	mov    rax,QWORD PTR [rbp-0x30]
  409a38:	mov    DWORD PTR [rax],edx
  409a3a:	mov    rax,QWORD PTR [rbp-0x30]
  409a3e:	mov    eax,DWORD PTR [rax]
  409a40:	test   eax,eax
  409a42:	je     409a4b <_start@@Base+0x48eb>
  409a44:	mov    rax,QWORD PTR [rbp-0x20]
  409a48:	jmp    409a64 <_start@@Base+0x4904>
  409a4a:	nop
  409a4b:	mov    rdx,QWORD PTR [rbp-0x28]
  409a4f:	mov    rsi,QWORD PTR [rbp-0x20]
  409a53:	mov    rax,QWORD PTR [rbp-0x18]
  409a57:	mov    ecx,0x21
  409a5c:	mov    rdi,rax
  409a5f:	call   42665a <flatcc_json_parser_set_error@@Base>
  409a64:	leave  
  409a65:	ret    
  409a66:	push   rbp
  409a67:	mov    rbp,rsp
  409a6a:	sub    rsp,0x30
  409a6e:	mov    QWORD PTR [rbp-0x18],rdi
  409a72:	mov    QWORD PTR [rbp-0x20],rsi
  409a76:	mov    QWORD PTR [rbp-0x28],rdx
  409a7a:	mov    QWORD PTR [rbp-0x30],rcx
  409a7e:	mov    rax,QWORD PTR fs:0x28
  409a87:	mov    QWORD PTR [rbp-0x8],rax
  409a8b:	xor    eax,eax
  409a8d:	lea    rcx,[rbp-0xc]
  409a91:	mov    rdx,QWORD PTR [rbp-0x28]
  409a95:	mov    rsi,QWORD PTR [rbp-0x20]
  409a99:	mov    rax,QWORD PTR [rbp-0x18]
  409a9d:	mov    rdi,rax
  409aa0:	call   405880 <_start@@Base+0x720>
  409aa5:	mov    QWORD PTR [rbp-0x20],rax
  409aa9:	jmp    409ae2 <_start@@Base+0x4982>
  409aab:	mov    rdx,QWORD PTR [rbp-0x28]
  409aaf:	mov    rcx,QWORD PTR [rbp-0x20]
  409ab3:	mov    rax,QWORD PTR [rbp-0x18]
  409ab7:	mov    rsi,rcx
  409aba:	mov    rdi,rax
  409abd:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  409ac2:	mov    QWORD PTR [rbp-0x20],rax
  409ac6:	lea    rcx,[rbp-0xc]
  409aca:	mov    rdx,QWORD PTR [rbp-0x28]
  409ace:	mov    rsi,QWORD PTR [rbp-0x20]
  409ad2:	mov    rax,QWORD PTR [rbp-0x18]
  409ad6:	mov    rdi,rax
  409ad9:	call   40593d <_start@@Base+0x7dd>
  409ade:	mov    QWORD PTR [rbp-0x20],rax
  409ae2:	mov    eax,DWORD PTR [rbp-0xc]
  409ae5:	test   eax,eax
  409ae7:	jne    409aab <_start@@Base+0x494b>
  409ae9:	mov    rax,QWORD PTR [rbp-0x20]
  409aed:	mov    rdi,QWORD PTR [rbp-0x8]
  409af1:	xor    rdi,QWORD PTR fs:0x28
  409afa:	je     409b01 <_start@@Base+0x49a1>
  409afc:	call   405070 <__stack_chk_fail@plt>
  409b01:	leave  
  409b02:	ret    
  409b03:	push   rbp
  409b04:	mov    rbp,rsp
  409b07:	sub    rsp,0x30
  409b0b:	mov    QWORD PTR [rbp-0x18],rdi
  409b0f:	mov    QWORD PTR [rbp-0x20],rsi
  409b13:	mov    QWORD PTR [rbp-0x28],rdx
  409b17:	mov    QWORD PTR [rbp-0x30],rcx
  409b1b:	mov    rax,QWORD PTR [rbp-0x30]
  409b1f:	mov    DWORD PTR [rax],0x0
  409b25:	mov    rax,QWORD PTR [rbp-0x18]
  409b29:	mov    rax,QWORD PTR [rax]
  409b2c:	mov    edx,0x1
  409b31:	mov    esi,0x0
  409b36:	mov    rdi,rax
  409b39:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  409b3e:	mov    QWORD PTR [rbp-0x8],rax
  409b42:	cmp    QWORD PTR [rbp-0x8],0x0
  409b47:	je     409b96 <_start@@Base+0x4a36>
  409b49:	mov    rcx,QWORD PTR [rbp-0x8]
  409b4d:	mov    rdx,QWORD PTR [rbp-0x28]
  409b51:	mov    rsi,QWORD PTR [rbp-0x20]
  409b55:	mov    rax,QWORD PTR [rbp-0x18]
  409b59:	mov    rdi,rax
  409b5c:	call   409a66 <_start@@Base+0x4906>
  409b61:	mov    QWORD PTR [rbp-0x20],rax
  409b65:	mov    rax,QWORD PTR [rbp-0x20]
  409b69:	cmp    rax,QWORD PTR [rbp-0x28]
  409b6d:	je     409b97 <_start@@Base+0x4a37>
  409b6f:	mov    rax,QWORD PTR [rbp-0x18]
  409b73:	mov    rax,QWORD PTR [rax]
  409b76:	mov    rdi,rax
  409b79:	call   41cd71 <flatcc_builder_end_struct@@Base>
  409b7e:	mov    edx,eax
  409b80:	mov    rax,QWORD PTR [rbp-0x30]
  409b84:	mov    DWORD PTR [rax],edx
  409b86:	mov    rax,QWORD PTR [rbp-0x30]
  409b8a:	mov    eax,DWORD PTR [rax]
  409b8c:	test   eax,eax
  409b8e:	je     409b97 <_start@@Base+0x4a37>
  409b90:	mov    rax,QWORD PTR [rbp-0x20]
  409b94:	jmp    409bb0 <_start@@Base+0x4a50>
  409b96:	nop
  409b97:	mov    rdx,QWORD PTR [rbp-0x28]
  409b9b:	mov    rsi,QWORD PTR [rbp-0x20]
  409b9f:	mov    rax,QWORD PTR [rbp-0x18]
  409ba3:	mov    ecx,0x21
  409ba8:	mov    rdi,rax
  409bab:	call   42665a <flatcc_json_parser_set_error@@Base>
  409bb0:	leave  
  409bb1:	ret    
  409bb2:	push   rbp
  409bb3:	mov    rbp,rsp
  409bb6:	sub    rsp,0x30
  409bba:	mov    QWORD PTR [rbp-0x18],rdi
  409bbe:	mov    QWORD PTR [rbp-0x20],rsi
  409bc2:	mov    QWORD PTR [rbp-0x28],rdx
  409bc6:	mov    QWORD PTR [rbp-0x30],rcx
  409bca:	mov    rax,QWORD PTR fs:0x28
  409bd3:	mov    QWORD PTR [rbp-0x8],rax
  409bd7:	xor    eax,eax
  409bd9:	mov    rax,QWORD PTR [rbp-0x30]
  409bdd:	mov    DWORD PTR [rax],0x0
  409be3:	mov    rax,QWORD PTR [rbp-0x18]
  409be7:	mov    rax,QWORD PTR [rax]
  409bea:	mov    esi,0x0
  409bef:	mov    rdi,rax
  409bf2:	call   41d7d7 <flatcc_builder_start_table@@Base>
  409bf7:	test   eax,eax
  409bf9:	jne    409ca8 <_start@@Base+0x4b48>
  409bff:	lea    rcx,[rbp-0xc]
  409c03:	mov    rdx,QWORD PTR [rbp-0x28]
  409c07:	mov    rsi,QWORD PTR [rbp-0x20]
  409c0b:	mov    rax,QWORD PTR [rbp-0x18]
  409c0f:	mov    rdi,rax
  409c12:	call   405880 <_start@@Base+0x720>
  409c17:	mov    QWORD PTR [rbp-0x20],rax
  409c1b:	jmp    409c6f <_start@@Base+0x4b0f>
  409c1d:	mov    rdx,QWORD PTR [rbp-0x28]
  409c21:	mov    rcx,QWORD PTR [rbp-0x20]
  409c25:	mov    rax,QWORD PTR [rbp-0x18]
  409c29:	mov    rsi,rcx
  409c2c:	mov    rdi,rax
  409c2f:	call   4055e5 <_start@@Base+0x485>
  409c34:	mov    QWORD PTR [rbp-0x20],rax
  409c38:	mov    rdx,QWORD PTR [rbp-0x28]
  409c3c:	mov    rcx,QWORD PTR [rbp-0x20]
  409c40:	mov    rax,QWORD PTR [rbp-0x18]
  409c44:	mov    rsi,rcx
  409c47:	mov    rdi,rax
  409c4a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  409c4f:	mov    QWORD PTR [rbp-0x20],rax
  409c53:	lea    rcx,[rbp-0xc]
  409c57:	mov    rdx,QWORD PTR [rbp-0x28]
  409c5b:	mov    rsi,QWORD PTR [rbp-0x20]
  409c5f:	mov    rax,QWORD PTR [rbp-0x18]
  409c63:	mov    rdi,rax
  409c66:	call   40593d <_start@@Base+0x7dd>
  409c6b:	mov    QWORD PTR [rbp-0x20],rax
  409c6f:	mov    eax,DWORD PTR [rbp-0xc]
  409c72:	test   eax,eax
  409c74:	jne    409c1d <_start@@Base+0x4abd>
  409c76:	mov    rax,QWORD PTR [rbp-0x18]
  409c7a:	mov    eax,DWORD PTR [rax+0x20]
  409c7d:	test   eax,eax
  409c7f:	jne    409cab <_start@@Base+0x4b4b>
  409c81:	mov    rax,QWORD PTR [rbp-0x18]
  409c85:	mov    rax,QWORD PTR [rax]
  409c88:	mov    rdi,rax
  409c8b:	call   41e2d9 <flatcc_builder_end_table@@Base>
  409c90:	mov    edx,eax
  409c92:	mov    rax,QWORD PTR [rbp-0x30]
  409c96:	mov    DWORD PTR [rax],edx
  409c98:	mov    rax,QWORD PTR [rbp-0x30]
  409c9c:	mov    eax,DWORD PTR [rax]
  409c9e:	test   eax,eax
  409ca0:	je     409cae <_start@@Base+0x4b4e>
  409ca2:	mov    rax,QWORD PTR [rbp-0x20]
  409ca6:	jmp    409cc8 <_start@@Base+0x4b68>
  409ca8:	nop
  409ca9:	jmp    409caf <_start@@Base+0x4b4f>
  409cab:	nop
  409cac:	jmp    409caf <_start@@Base+0x4b4f>
  409cae:	nop
  409caf:	mov    rdx,QWORD PTR [rbp-0x28]
  409cb3:	mov    rsi,QWORD PTR [rbp-0x20]
  409cb7:	mov    rax,QWORD PTR [rbp-0x18]
  409cbb:	mov    ecx,0x21
  409cc0:	mov    rdi,rax
  409cc3:	call   42665a <flatcc_json_parser_set_error@@Base>
  409cc8:	mov    rdi,QWORD PTR [rbp-0x8]
  409ccc:	xor    rdi,QWORD PTR fs:0x28
  409cd5:	je     409cdc <_start@@Base+0x4b7c>
  409cd7:	call   405070 <__stack_chk_fail@plt>
  409cdc:	leave  
  409cdd:	ret    
  409cde:	push   rbp
  409cdf:	mov    rbp,rsp
  409ce2:	sub    rsp,0x50
  409ce6:	mov    QWORD PTR [rbp-0x38],rdi
  409cea:	mov    QWORD PTR [rbp-0x40],rsi
  409cee:	mov    QWORD PTR [rbp-0x48],rdx
  409cf2:	mov    QWORD PTR [rbp-0x50],rcx
  409cf6:	mov    rax,QWORD PTR fs:0x28
  409cff:	mov    QWORD PTR [rbp-0x8],rax
  409d03:	xor    eax,eax
  409d05:	mov    rax,QWORD PTR [rbp-0x50]
  409d09:	mov    DWORD PTR [rax],0x0
  409d0f:	mov    rax,QWORD PTR [rbp-0x38]
  409d13:	mov    rax,QWORD PTR [rax]
  409d16:	mov    esi,0x1
  409d1b:	mov    rdi,rax
  409d1e:	call   41d7d7 <flatcc_builder_start_table@@Base>
  409d23:	test   eax,eax
  409d25:	jne    409ea9 <_start@@Base+0x4d49>
  409d2b:	lea    rcx,[rbp-0x24]
  409d2f:	mov    rdx,QWORD PTR [rbp-0x48]
  409d33:	mov    rsi,QWORD PTR [rbp-0x40]
  409d37:	mov    rax,QWORD PTR [rbp-0x38]
  409d3b:	mov    rdi,rax
  409d3e:	call   405880 <_start@@Base+0x720>
  409d43:	mov    QWORD PTR [rbp-0x40],rax
  409d47:	jmp    409e6c <_start@@Base+0x4d0c>
  409d4c:	mov    rdx,QWORD PTR [rbp-0x48]
  409d50:	mov    rcx,QWORD PTR [rbp-0x40]
  409d54:	mov    rax,QWORD PTR [rbp-0x38]
  409d58:	mov    rsi,rcx
  409d5b:	mov    rdi,rax
  409d5e:	call   4055e5 <_start@@Base+0x485>
  409d63:	mov    QWORD PTR [rbp-0x40],rax
  409d67:	mov    rdx,QWORD PTR [rbp-0x48]
  409d6b:	mov    rax,QWORD PTR [rbp-0x40]
  409d6f:	mov    rsi,rdx
  409d72:	mov    rdi,rax
  409d75:	call   405779 <_start@@Base+0x619>
  409d7a:	mov    QWORD PTR [rbp-0x20],rax
  409d7e:	mov    rax,QWORD PTR [rbp-0x20]
  409d82:	and    rax,0xffffffffff000000
  409d88:	mov    rdx,rax
  409d8b:	movabs rax,0x656d707479000000
  409d95:	cmp    rdx,rax
  409d98:	jne    409e35 <_start@@Base+0x4cd5>
  409d9e:	mov    rax,QWORD PTR [rbp-0x40]
  409da2:	mov    QWORD PTR [rbp-0x18],rax
  409da6:	mov    rdx,QWORD PTR [rbp-0x48]
  409daa:	mov    rsi,QWORD PTR [rbp-0x18]
  409dae:	mov    rax,QWORD PTR [rbp-0x38]
  409db2:	mov    ecx,0x5
  409db7:	mov    rdi,rax
  409dba:	call   405c76 <_start@@Base+0xb16>
  409dbf:	mov    QWORD PTR [rbp-0x40],rax
  409dc3:	mov    rax,QWORD PTR [rbp-0x18]
  409dc7:	cmp    rax,QWORD PTR [rbp-0x40]
  409dcb:	je     409e18 <_start@@Base+0x4cb8>
  409dcd:	mov    rax,QWORD PTR [rbp-0x38]
  409dd1:	mov    rax,QWORD PTR [rax]
  409dd4:	mov    ecx,0x1
  409dd9:	mov    edx,0x0
  409dde:	mov    esi,0x0
  409de3:	mov    rdi,rax
  409de6:	call   41f93b <flatcc_builder_table_add@@Base>
  409deb:	mov    QWORD PTR [rbp-0x10],rax
  409def:	cmp    QWORD PTR [rbp-0x10],0x0
  409df4:	je     409eac <_start@@Base+0x4d4c>
  409dfa:	mov    rcx,QWORD PTR [rbp-0x10]
  409dfe:	mov    rdx,QWORD PTR [rbp-0x48]
  409e02:	mov    rsi,QWORD PTR [rbp-0x40]
  409e06:	mov    rax,QWORD PTR [rbp-0x38]
  409e0a:	mov    rdi,rax
  409e0d:	call   409a66 <_start@@Base+0x4906>
  409e12:	mov    QWORD PTR [rbp-0x40],rax
  409e16:	jmp    409e50 <_start@@Base+0x4cf0>
  409e18:	mov    rdx,QWORD PTR [rbp-0x48]
  409e1c:	mov    rcx,QWORD PTR [rbp-0x40]
  409e20:	mov    rax,QWORD PTR [rbp-0x38]
  409e24:	mov    rsi,rcx
  409e27:	mov    rdi,rax
  409e2a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  409e2f:	mov    QWORD PTR [rbp-0x40],rax
  409e33:	jmp    409e50 <_start@@Base+0x4cf0>
  409e35:	mov    rdx,QWORD PTR [rbp-0x48]
  409e39:	mov    rcx,QWORD PTR [rbp-0x40]
  409e3d:	mov    rax,QWORD PTR [rbp-0x38]
  409e41:	mov    rsi,rcx
  409e44:	mov    rdi,rax
  409e47:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  409e4c:	mov    QWORD PTR [rbp-0x40],rax
  409e50:	lea    rcx,[rbp-0x24]
  409e54:	mov    rdx,QWORD PTR [rbp-0x48]
  409e58:	mov    rsi,QWORD PTR [rbp-0x40]
  409e5c:	mov    rax,QWORD PTR [rbp-0x38]
  409e60:	mov    rdi,rax
  409e63:	call   40593d <_start@@Base+0x7dd>
  409e68:	mov    QWORD PTR [rbp-0x40],rax
  409e6c:	mov    eax,DWORD PTR [rbp-0x24]
  409e6f:	test   eax,eax
  409e71:	jne    409d4c <_start@@Base+0x4bec>
  409e77:	mov    rax,QWORD PTR [rbp-0x38]
  409e7b:	mov    eax,DWORD PTR [rax+0x20]
  409e7e:	test   eax,eax
  409e80:	jne    409eaf <_start@@Base+0x4d4f>
  409e82:	mov    rax,QWORD PTR [rbp-0x38]
  409e86:	mov    rax,QWORD PTR [rax]
  409e89:	mov    rdi,rax
  409e8c:	call   41e2d9 <flatcc_builder_end_table@@Base>
  409e91:	mov    edx,eax
  409e93:	mov    rax,QWORD PTR [rbp-0x50]
  409e97:	mov    DWORD PTR [rax],edx
  409e99:	mov    rax,QWORD PTR [rbp-0x50]
  409e9d:	mov    eax,DWORD PTR [rax]
  409e9f:	test   eax,eax
  409ea1:	je     409eb2 <_start@@Base+0x4d52>
  409ea3:	mov    rax,QWORD PTR [rbp-0x40]
  409ea7:	jmp    409ecc <_start@@Base+0x4d6c>
  409ea9:	nop
  409eaa:	jmp    409eb3 <_start@@Base+0x4d53>
  409eac:	nop
  409ead:	jmp    409eb3 <_start@@Base+0x4d53>
  409eaf:	nop
  409eb0:	jmp    409eb3 <_start@@Base+0x4d53>
  409eb2:	nop
  409eb3:	mov    rdx,QWORD PTR [rbp-0x48]
  409eb7:	mov    rsi,QWORD PTR [rbp-0x40]
  409ebb:	mov    rax,QWORD PTR [rbp-0x38]
  409ebf:	mov    ecx,0x21
  409ec4:	mov    rdi,rax
  409ec7:	call   42665a <flatcc_json_parser_set_error@@Base>
  409ecc:	mov    rdi,QWORD PTR [rbp-0x8]
  409ed0:	xor    rdi,QWORD PTR fs:0x28
  409ed9:	je     409ee0 <_start@@Base+0x4d80>
  409edb:	call   405070 <__stack_chk_fail@plt>
  409ee0:	leave  
  409ee1:	ret    
  409ee2:	push   rbp
  409ee3:	mov    rbp,rsp
  409ee6:	sub    rsp,0x50
  409eea:	mov    QWORD PTR [rbp-0x28],rdi
  409eee:	mov    QWORD PTR [rbp-0x30],rsi
  409ef2:	mov    QWORD PTR [rbp-0x38],rdx
  409ef6:	mov    QWORD PTR [rbp-0x40],rcx
  409efa:	mov    QWORD PTR [rbp-0x48],r8
  409efe:	mov    QWORD PTR [rbp-0x50],r9
  409f02:	mov    rax,QWORD PTR [rbp-0x30]
  409f06:	mov    QWORD PTR [rbp-0x18],rax
  409f0a:	mov    rdx,QWORD PTR [rbp-0x38]
  409f0e:	mov    rax,QWORD PTR [rbp-0x30]
  409f12:	mov    rsi,rdx
  409f15:	mov    rdi,rax
  409f18:	call   405779 <_start@@Base+0x619>
  409f1d:	mov    QWORD PTR [rbp-0x10],rax
  409f21:	movabs rax,0xff00000000000000
  409f2b:	and    rax,QWORD PTR [rbp-0x10]
  409f2f:	mov    rdx,rax
  409f32:	movabs rax,0x7800000000000000
  409f3c:	cmp    rdx,rax
  409f3f:	jne    409f98 <_start@@Base+0x4e38>
  409f41:	mov    rax,QWORD PTR [rbp-0x30]
  409f45:	mov    QWORD PTR [rbp-0x8],rax
  409f49:	mov    rcx,QWORD PTR [rbp-0x50]
  409f4d:	mov    rdx,QWORD PTR [rbp-0x38]
  409f51:	mov    rsi,QWORD PTR [rbp-0x8]
  409f55:	mov    rax,QWORD PTR [rbp-0x28]
  409f59:	mov    r8,rcx
  409f5c:	mov    ecx,0x1
  409f61:	mov    rdi,rax
  409f64:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  409f69:	mov    QWORD PTR [rbp-0x30],rax
  409f6d:	mov    rax,QWORD PTR [rbp-0x30]
  409f71:	cmp    rax,QWORD PTR [rbp-0x8]
  409f75:	je     409f92 <_start@@Base+0x4e32>
  409f77:	mov    rax,QWORD PTR [rbp-0x48]
  409f7b:	mov    QWORD PTR [rax],0x0
  409f82:	mov    rax,QWORD PTR [rbp-0x40]
  409f86:	mov    DWORD PTR [rax],0x0
  409f8c:	mov    rax,QWORD PTR [rbp-0x30]
  409f90:	jmp    409f9c <_start@@Base+0x4e3c>
  409f92:	mov    rax,QWORD PTR [rbp-0x18]
  409f96:	jmp    409f9c <_start@@Base+0x4e3c>
  409f98:	mov    rax,QWORD PTR [rbp-0x18]
  409f9c:	leave  
  409f9d:	ret    
  409f9e:	push   rbp
  409f9f:	mov    rbp,rsp
  409fa2:	sub    rsp,0x50
  409fa6:	mov    QWORD PTR [rbp-0x38],rdi
  409faa:	mov    QWORD PTR [rbp-0x40],rsi
  409fae:	mov    QWORD PTR [rbp-0x48],rdx
  409fb2:	mov    QWORD PTR [rbp-0x50],rcx
  409fb6:	mov    rax,QWORD PTR fs:0x28
  409fbf:	mov    QWORD PTR [rbp-0x8],rax
  409fc3:	xor    eax,eax
  409fc5:	mov    rax,QWORD PTR [rbp-0x50]
  409fc9:	mov    DWORD PTR [rax],0x0
  409fcf:	mov    rax,QWORD PTR [rbp-0x38]
  409fd3:	mov    rax,QWORD PTR [rax]
  409fd6:	mov    esi,0x4
  409fdb:	mov    rdi,rax
  409fde:	call   41d7d7 <flatcc_builder_start_table@@Base>
  409fe3:	test   eax,eax
  409fe5:	jne    40a5b8 <_start@@Base+0x5458>
  409feb:	lea    rcx,[rbp-0x24]
  409fef:	mov    rdx,QWORD PTR [rbp-0x48]
  409ff3:	mov    rsi,QWORD PTR [rbp-0x40]
  409ff7:	mov    rax,QWORD PTR [rbp-0x38]
  409ffb:	mov    rdi,rax
  409ffe:	call   405880 <_start@@Base+0x720>
  40a003:	mov    QWORD PTR [rbp-0x40],rax
  40a007:	jmp    40a57b <_start@@Base+0x541b>
  40a00c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a010:	mov    rcx,QWORD PTR [rbp-0x40]
  40a014:	mov    rax,QWORD PTR [rbp-0x38]
  40a018:	mov    rsi,rcx
  40a01b:	mov    rdi,rax
  40a01e:	call   4055e5 <_start@@Base+0x485>
  40a023:	mov    QWORD PTR [rbp-0x40],rax
  40a027:	mov    rdx,QWORD PTR [rbp-0x48]
  40a02b:	mov    rax,QWORD PTR [rbp-0x40]
  40a02f:	mov    rsi,rdx
  40a032:	mov    rdi,rax
  40a035:	call   405779 <_start@@Base+0x619>
  40a03a:	mov    QWORD PTR [rbp-0x20],rax
  40a03e:	mov    rax,QWORD PTR [rbp-0x20]
  40a042:	mov    ax,0x0
  40a046:	mov    rdx,rax
  40a049:	movabs rax,0x636f6c6f72320000
  40a053:	cmp    rdx,rax
  40a056:	jne    40a16c <_start@@Base+0x500c>
  40a05c:	mov    rax,QWORD PTR [rbp-0x40]
  40a060:	mov    QWORD PTR [rbp-0x18],rax
  40a064:	mov    rdx,QWORD PTR [rbp-0x48]
  40a068:	mov    rsi,QWORD PTR [rbp-0x18]
  40a06c:	mov    rax,QWORD PTR [rbp-0x38]
  40a070:	mov    ecx,0x6
  40a075:	mov    rdi,rax
  40a078:	call   405c76 <_start@@Base+0xb16>
  40a07d:	mov    QWORD PTR [rbp-0x40],rax
  40a081:	mov    rax,QWORD PTR [rbp-0x18]
  40a085:	cmp    rax,QWORD PTR [rbp-0x40]
  40a089:	je     40a29c <_start@@Base+0x513c>
  40a08f:	mov    BYTE PTR [rbp-0x25],0x0
  40a093:	mov    rax,QWORD PTR [rbp-0x40]
  40a097:	mov    QWORD PTR [rbp-0x18],rax
  40a09b:	lea    rcx,[rbp-0x25]
  40a09f:	mov    rdx,QWORD PTR [rbp-0x48]
  40a0a3:	mov    rsi,QWORD PTR [rbp-0x18]
  40a0a7:	mov    rax,QWORD PTR [rbp-0x38]
  40a0ab:	mov    rdi,rax
  40a0ae:	call   4068ec <_start@@Base+0x178c>
  40a0b3:	mov    QWORD PTR [rbp-0x40],rax
  40a0b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a0bb:	cmp    rax,QWORD PTR [rbp-0x40]
  40a0bf:	jne    40a10b <_start@@Base+0x4fab>
  40a0c1:	mov    rax,QWORD PTR [rbp-0x40]
  40a0c5:	mov    QWORD PTR [rbp-0x18],rax
  40a0c9:	lea    rcx,[rbp-0x25]
  40a0cd:	mov    rdx,QWORD PTR [rbp-0x48]
  40a0d1:	mov    rsi,QWORD PTR [rbp-0x18]
  40a0d5:	mov    rax,QWORD PTR [rbp-0x38]
  40a0d9:	mov    r8,rcx
  40a0dc:	lea    rcx,[rip+0x3c03d]        # 446120 <__data_start@@Base+0x60>
  40a0e3:	mov    rdi,rax
  40a0e6:	call   407424 <_start@@Base+0x22c4>
  40a0eb:	mov    QWORD PTR [rbp-0x40],rax
  40a0ef:	mov    rax,QWORD PTR [rbp-0x40]
  40a0f3:	cmp    rax,QWORD PTR [rbp-0x18]
  40a0f7:	je     40a5cb <_start@@Base+0x546b>
  40a0fd:	mov    rax,QWORD PTR [rbp-0x40]
  40a101:	cmp    rax,QWORD PTR [rbp-0x48]
  40a105:	je     40a5cb <_start@@Base+0x546b>
  40a10b:	movzx  eax,BYTE PTR [rbp-0x25]
  40a10f:	cmp    al,0x2
  40a111:	jne    40a125 <_start@@Base+0x4fc5>
  40a113:	mov    rax,QWORD PTR [rbp-0x38]
  40a117:	mov    eax,DWORD PTR [rax+0x10]
  40a11a:	and    eax,0x2
  40a11d:	test   eax,eax
  40a11f:	je     40a55e <_start@@Base+0x53fe>
  40a125:	mov    rax,QWORD PTR [rbp-0x38]
  40a129:	mov    rax,QWORD PTR [rax]
  40a12c:	mov    ecx,0x1
  40a131:	mov    edx,0x1
  40a136:	mov    esi,0x1
  40a13b:	mov    rdi,rax
  40a13e:	call   41f93b <flatcc_builder_table_add@@Base>
  40a143:	mov    QWORD PTR [rbp-0x10],rax
  40a147:	cmp    QWORD PTR [rbp-0x10],0x0
  40a14c:	je     40a5bb <_start@@Base+0x545b>
  40a152:	movzx  eax,BYTE PTR [rbp-0x25]
  40a156:	movsx  edx,al
  40a159:	mov    rax,QWORD PTR [rbp-0x10]
  40a15d:	mov    esi,edx
  40a15f:	mov    rdi,rax
  40a162:	call   40534b <_start@@Base+0x1eb>
  40a167:	jmp    40a55e <_start@@Base+0x53fe>
  40a16c:	mov    rax,QWORD PTR [rbp-0x20]
  40a170:	and    rax,0xffffffffff000000
  40a176:	mov    rdx,rax
  40a179:	movabs rax,0x636f6c6f72000000
  40a183:	cmp    rdx,rax
  40a186:	jne    40a29f <_start@@Base+0x513f>
  40a18c:	mov    rax,QWORD PTR [rbp-0x40]
  40a190:	mov    QWORD PTR [rbp-0x18],rax
  40a194:	mov    rdx,QWORD PTR [rbp-0x48]
  40a198:	mov    rsi,QWORD PTR [rbp-0x18]
  40a19c:	mov    rax,QWORD PTR [rbp-0x38]
  40a1a0:	mov    ecx,0x5
  40a1a5:	mov    rdi,rax
  40a1a8:	call   405c76 <_start@@Base+0xb16>
  40a1ad:	mov    QWORD PTR [rbp-0x40],rax
  40a1b1:	mov    rax,QWORD PTR [rbp-0x18]
  40a1b5:	cmp    rax,QWORD PTR [rbp-0x40]
  40a1b9:	je     40a2a2 <_start@@Base+0x5142>
  40a1bf:	mov    BYTE PTR [rbp-0x25],0x0
  40a1c3:	mov    rax,QWORD PTR [rbp-0x40]
  40a1c7:	mov    QWORD PTR [rbp-0x18],rax
  40a1cb:	lea    rcx,[rbp-0x25]
  40a1cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40a1d3:	mov    rsi,QWORD PTR [rbp-0x18]
  40a1d7:	mov    rax,QWORD PTR [rbp-0x38]
  40a1db:	mov    rdi,rax
  40a1de:	call   4068ec <_start@@Base+0x178c>
  40a1e3:	mov    QWORD PTR [rbp-0x40],rax
  40a1e7:	mov    rax,QWORD PTR [rbp-0x18]
  40a1eb:	cmp    rax,QWORD PTR [rbp-0x40]
  40a1ef:	jne    40a23b <_start@@Base+0x50db>
  40a1f1:	mov    rax,QWORD PTR [rbp-0x40]
  40a1f5:	mov    QWORD PTR [rbp-0x18],rax
  40a1f9:	lea    rcx,[rbp-0x25]
  40a1fd:	mov    rdx,QWORD PTR [rbp-0x48]
  40a201:	mov    rsi,QWORD PTR [rbp-0x18]
  40a205:	mov    rax,QWORD PTR [rbp-0x38]
  40a209:	mov    r8,rcx
  40a20c:	lea    rcx,[rip+0x3bf2d]        # 446140 <__data_start@@Base+0x80>
  40a213:	mov    rdi,rax
  40a216:	call   407424 <_start@@Base+0x22c4>
  40a21b:	mov    QWORD PTR [rbp-0x40],rax
  40a21f:	mov    rax,QWORD PTR [rbp-0x40]
  40a223:	cmp    rax,QWORD PTR [rbp-0x18]
  40a227:	je     40a5cb <_start@@Base+0x546b>
  40a22d:	mov    rax,QWORD PTR [rbp-0x40]
  40a231:	cmp    rax,QWORD PTR [rbp-0x48]
  40a235:	je     40a5cb <_start@@Base+0x546b>
  40a23b:	movzx  eax,BYTE PTR [rbp-0x25]
  40a23f:	cmp    al,0x2
  40a241:	jne    40a255 <_start@@Base+0x50f5>
  40a243:	mov    rax,QWORD PTR [rbp-0x38]
  40a247:	mov    eax,DWORD PTR [rax+0x10]
  40a24a:	and    eax,0x2
  40a24d:	test   eax,eax
  40a24f:	je     40a55e <_start@@Base+0x53fe>
  40a255:	mov    rax,QWORD PTR [rbp-0x38]
  40a259:	mov    rax,QWORD PTR [rax]
  40a25c:	mov    ecx,0x1
  40a261:	mov    edx,0x1
  40a266:	mov    esi,0x0
  40a26b:	mov    rdi,rax
  40a26e:	call   41f93b <flatcc_builder_table_add@@Base>
  40a273:	mov    QWORD PTR [rbp-0x10],rax
  40a277:	cmp    QWORD PTR [rbp-0x10],0x0
  40a27c:	je     40a5be <_start@@Base+0x545e>
  40a282:	movzx  eax,BYTE PTR [rbp-0x25]
  40a286:	movsx  edx,al
  40a289:	mov    rax,QWORD PTR [rbp-0x10]
  40a28d:	mov    esi,edx
  40a28f:	mov    rdi,rax
  40a292:	call   40534b <_start@@Base+0x1eb>
  40a297:	jmp    40a55e <_start@@Base+0x53fe>
  40a29c:	nop
  40a29d:	jmp    40a2a3 <_start@@Base+0x5143>
  40a29f:	nop
  40a2a0:	jmp    40a2a3 <_start@@Base+0x5143>
  40a2a2:	nop
  40a2a3:	movabs rax,0xffffff0000000000
  40a2ad:	and    rax,QWORD PTR [rbp-0x20]
  40a2b1:	mov    rdx,rax
  40a2b4:	movabs rax,0x7563320000000000
  40a2be:	cmp    rdx,rax
  40a2c1:	jne    40a3f7 <_start@@Base+0x5297>
  40a2c7:	mov    rax,QWORD PTR [rbp-0x40]
  40a2cb:	mov    QWORD PTR [rbp-0x18],rax
  40a2cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40a2d3:	mov    rsi,QWORD PTR [rbp-0x18]
  40a2d7:	mov    rax,QWORD PTR [rbp-0x38]
  40a2db:	mov    ecx,0x3
  40a2e0:	mov    rdi,rax
  40a2e3:	call   405c76 <_start@@Base+0xb16>
  40a2e8:	mov    QWORD PTR [rbp-0x40],rax
  40a2ec:	mov    rax,QWORD PTR [rbp-0x18]
  40a2f0:	cmp    rax,QWORD PTR [rbp-0x40]
  40a2f4:	je     40a3d7 <_start@@Base+0x5277>
  40a2fa:	mov    BYTE PTR [rbp-0x25],0x0
  40a2fe:	mov    rax,QWORD PTR [rbp-0x40]
  40a302:	mov    QWORD PTR [rbp-0x18],rax
  40a306:	lea    rcx,[rbp-0x25]
  40a30a:	mov    rdx,QWORD PTR [rbp-0x48]
  40a30e:	mov    rsi,QWORD PTR [rbp-0x18]
  40a312:	mov    rax,QWORD PTR [rbp-0x38]
  40a316:	mov    rdi,rax
  40a319:	call   4065d7 <_start@@Base+0x1477>
  40a31e:	mov    QWORD PTR [rbp-0x40],rax
  40a322:	mov    rax,QWORD PTR [rbp-0x18]
  40a326:	cmp    rax,QWORD PTR [rbp-0x40]
  40a32a:	jne    40a376 <_start@@Base+0x5216>
  40a32c:	mov    rax,QWORD PTR [rbp-0x40]
  40a330:	mov    QWORD PTR [rbp-0x18],rax
  40a334:	lea    rcx,[rbp-0x25]
  40a338:	mov    rdx,QWORD PTR [rbp-0x48]
  40a33c:	mov    rsi,QWORD PTR [rbp-0x18]
  40a340:	mov    rax,QWORD PTR [rbp-0x38]
  40a344:	mov    r8,rcx
  40a347:	lea    rcx,[rip+0x3be12]        # 446160 <__data_start@@Base+0xa0>
  40a34e:	mov    rdi,rax
  40a351:	call   406eb9 <_start@@Base+0x1d59>
  40a356:	mov    QWORD PTR [rbp-0x40],rax
  40a35a:	mov    rax,QWORD PTR [rbp-0x40]
  40a35e:	cmp    rax,QWORD PTR [rbp-0x18]
  40a362:	je     40a5cb <_start@@Base+0x546b>
  40a368:	mov    rax,QWORD PTR [rbp-0x40]
  40a36c:	cmp    rax,QWORD PTR [rbp-0x48]
  40a370:	je     40a5cb <_start@@Base+0x546b>
  40a376:	movzx  eax,BYTE PTR [rbp-0x25]
  40a37a:	cmp    al,0x2
  40a37c:	jne    40a390 <_start@@Base+0x5230>
  40a37e:	mov    rax,QWORD PTR [rbp-0x38]
  40a382:	mov    eax,DWORD PTR [rax+0x10]
  40a385:	and    eax,0x2
  40a388:	test   eax,eax
  40a38a:	je     40a55f <_start@@Base+0x53ff>
  40a390:	mov    rax,QWORD PTR [rbp-0x38]
  40a394:	mov    rax,QWORD PTR [rax]
  40a397:	mov    ecx,0x1
  40a39c:	mov    edx,0x1
  40a3a1:	mov    esi,0x3
  40a3a6:	mov    rdi,rax
  40a3a9:	call   41f93b <flatcc_builder_table_add@@Base>
  40a3ae:	mov    QWORD PTR [rbp-0x10],rax
  40a3b2:	cmp    QWORD PTR [rbp-0x10],0x0
  40a3b7:	je     40a5c1 <_start@@Base+0x5461>
  40a3bd:	movzx  eax,BYTE PTR [rbp-0x25]
  40a3c1:	movzx  edx,al
  40a3c4:	mov    rax,QWORD PTR [rbp-0x10]
  40a3c8:	mov    esi,edx
  40a3ca:	mov    rdi,rax
  40a3cd:	call   405275 <_start@@Base+0x115>
  40a3d2:	jmp    40a55f <_start@@Base+0x53ff>
  40a3d7:	mov    rdx,QWORD PTR [rbp-0x48]
  40a3db:	mov    rcx,QWORD PTR [rbp-0x40]
  40a3df:	mov    rax,QWORD PTR [rbp-0x38]
  40a3e3:	mov    rsi,rcx
  40a3e6:	mov    rdi,rax
  40a3e9:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40a3ee:	mov    QWORD PTR [rbp-0x40],rax
  40a3f2:	jmp    40a55f <_start@@Base+0x53ff>
  40a3f7:	movabs rax,0xffff000000000000
  40a401:	and    rax,QWORD PTR [rbp-0x20]
  40a405:	mov    rdx,rax
  40a408:	movabs rax,0x7563000000000000
  40a412:	cmp    rdx,rax
  40a415:	jne    40a541 <_start@@Base+0x53e1>
  40a41b:	mov    rax,QWORD PTR [rbp-0x40]
  40a41f:	mov    QWORD PTR [rbp-0x18],rax
  40a423:	mov    rdx,QWORD PTR [rbp-0x48]
  40a427:	mov    rsi,QWORD PTR [rbp-0x18]
  40a42b:	mov    rax,QWORD PTR [rbp-0x38]
  40a42f:	mov    ecx,0x2
  40a434:	mov    rdi,rax
  40a437:	call   405c76 <_start@@Base+0xb16>
  40a43c:	mov    QWORD PTR [rbp-0x40],rax
  40a440:	mov    rax,QWORD PTR [rbp-0x18]
  40a444:	cmp    rax,QWORD PTR [rbp-0x40]
  40a448:	je     40a524 <_start@@Base+0x53c4>
  40a44e:	mov    BYTE PTR [rbp-0x25],0x0
  40a452:	mov    rax,QWORD PTR [rbp-0x40]
  40a456:	mov    QWORD PTR [rbp-0x18],rax
  40a45a:	lea    rcx,[rbp-0x25]
  40a45e:	mov    rdx,QWORD PTR [rbp-0x48]
  40a462:	mov    rsi,QWORD PTR [rbp-0x18]
  40a466:	mov    rax,QWORD PTR [rbp-0x38]
  40a46a:	mov    rdi,rax
  40a46d:	call   4065d7 <_start@@Base+0x1477>
  40a472:	mov    QWORD PTR [rbp-0x40],rax
  40a476:	mov    rax,QWORD PTR [rbp-0x18]
  40a47a:	cmp    rax,QWORD PTR [rbp-0x40]
  40a47e:	jne    40a4ca <_start@@Base+0x536a>
  40a480:	mov    rax,QWORD PTR [rbp-0x40]
  40a484:	mov    QWORD PTR [rbp-0x18],rax
  40a488:	lea    rcx,[rbp-0x25]
  40a48c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a490:	mov    rsi,QWORD PTR [rbp-0x18]
  40a494:	mov    rax,QWORD PTR [rbp-0x38]
  40a498:	mov    r8,rcx
  40a49b:	lea    rcx,[rip+0x3bcde]        # 446180 <__data_start@@Base+0xc0>
  40a4a2:	mov    rdi,rax
  40a4a5:	call   406eb9 <_start@@Base+0x1d59>
  40a4aa:	mov    QWORD PTR [rbp-0x40],rax
  40a4ae:	mov    rax,QWORD PTR [rbp-0x40]
  40a4b2:	cmp    rax,QWORD PTR [rbp-0x18]
  40a4b6:	je     40a5cb <_start@@Base+0x546b>
  40a4bc:	mov    rax,QWORD PTR [rbp-0x40]
  40a4c0:	cmp    rax,QWORD PTR [rbp-0x48]
  40a4c4:	je     40a5cb <_start@@Base+0x546b>
  40a4ca:	movzx  eax,BYTE PTR [rbp-0x25]
  40a4ce:	cmp    al,0x2
  40a4d0:	jne    40a4e0 <_start@@Base+0x5380>
  40a4d2:	mov    rax,QWORD PTR [rbp-0x38]
  40a4d6:	mov    eax,DWORD PTR [rax+0x10]
  40a4d9:	and    eax,0x2
  40a4dc:	test   eax,eax
  40a4de:	je     40a55f <_start@@Base+0x53ff>
  40a4e0:	mov    rax,QWORD PTR [rbp-0x38]
  40a4e4:	mov    rax,QWORD PTR [rax]
  40a4e7:	mov    ecx,0x1
  40a4ec:	mov    edx,0x1
  40a4f1:	mov    esi,0x2
  40a4f6:	mov    rdi,rax
  40a4f9:	call   41f93b <flatcc_builder_table_add@@Base>
  40a4fe:	mov    QWORD PTR [rbp-0x10],rax
  40a502:	cmp    QWORD PTR [rbp-0x10],0x0
  40a507:	je     40a5c4 <_start@@Base+0x5464>
  40a50d:	movzx  eax,BYTE PTR [rbp-0x25]
  40a511:	movzx  edx,al
  40a514:	mov    rax,QWORD PTR [rbp-0x10]
  40a518:	mov    esi,edx
  40a51a:	mov    rdi,rax
  40a51d:	call   405275 <_start@@Base+0x115>
  40a522:	jmp    40a55f <_start@@Base+0x53ff>
  40a524:	mov    rdx,QWORD PTR [rbp-0x48]
  40a528:	mov    rcx,QWORD PTR [rbp-0x40]
  40a52c:	mov    rax,QWORD PTR [rbp-0x38]
  40a530:	mov    rsi,rcx
  40a533:	mov    rdi,rax
  40a536:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40a53b:	mov    QWORD PTR [rbp-0x40],rax
  40a53f:	jmp    40a55f <_start@@Base+0x53ff>
  40a541:	mov    rdx,QWORD PTR [rbp-0x48]
  40a545:	mov    rcx,QWORD PTR [rbp-0x40]
  40a549:	mov    rax,QWORD PTR [rbp-0x38]
  40a54d:	mov    rsi,rcx
  40a550:	mov    rdi,rax
  40a553:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40a558:	mov    QWORD PTR [rbp-0x40],rax
  40a55c:	jmp    40a55f <_start@@Base+0x53ff>
  40a55e:	nop
  40a55f:	lea    rcx,[rbp-0x24]
  40a563:	mov    rdx,QWORD PTR [rbp-0x48]
  40a567:	mov    rsi,QWORD PTR [rbp-0x40]
  40a56b:	mov    rax,QWORD PTR [rbp-0x38]
  40a56f:	mov    rdi,rax
  40a572:	call   40593d <_start@@Base+0x7dd>
  40a577:	mov    QWORD PTR [rbp-0x40],rax
  40a57b:	mov    eax,DWORD PTR [rbp-0x24]
  40a57e:	test   eax,eax
  40a580:	jne    40a00c <_start@@Base+0x4eac>
  40a586:	mov    rax,QWORD PTR [rbp-0x38]
  40a58a:	mov    eax,DWORD PTR [rax+0x20]
  40a58d:	test   eax,eax
  40a58f:	jne    40a5c7 <_start@@Base+0x5467>
  40a591:	mov    rax,QWORD PTR [rbp-0x38]
  40a595:	mov    rax,QWORD PTR [rax]
  40a598:	mov    rdi,rax
  40a59b:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40a5a0:	mov    edx,eax
  40a5a2:	mov    rax,QWORD PTR [rbp-0x50]
  40a5a6:	mov    DWORD PTR [rax],edx
  40a5a8:	mov    rax,QWORD PTR [rbp-0x50]
  40a5ac:	mov    eax,DWORD PTR [rax]
  40a5ae:	test   eax,eax
  40a5b0:	je     40a5ca <_start@@Base+0x546a>
  40a5b2:	mov    rax,QWORD PTR [rbp-0x40]
  40a5b6:	jmp    40a5e4 <_start@@Base+0x5484>
  40a5b8:	nop
  40a5b9:	jmp    40a5cb <_start@@Base+0x546b>
  40a5bb:	nop
  40a5bc:	jmp    40a5cb <_start@@Base+0x546b>
  40a5be:	nop
  40a5bf:	jmp    40a5cb <_start@@Base+0x546b>
  40a5c1:	nop
  40a5c2:	jmp    40a5cb <_start@@Base+0x546b>
  40a5c4:	nop
  40a5c5:	jmp    40a5cb <_start@@Base+0x546b>
  40a5c7:	nop
  40a5c8:	jmp    40a5cb <_start@@Base+0x546b>
  40a5ca:	nop
  40a5cb:	mov    rdx,QWORD PTR [rbp-0x48]
  40a5cf:	mov    rsi,QWORD PTR [rbp-0x40]
  40a5d3:	mov    rax,QWORD PTR [rbp-0x38]
  40a5d7:	mov    ecx,0x21
  40a5dc:	mov    rdi,rax
  40a5df:	call   42665a <flatcc_json_parser_set_error@@Base>
  40a5e4:	mov    rdi,QWORD PTR [rbp-0x8]
  40a5e8:	xor    rdi,QWORD PTR fs:0x28
  40a5f1:	je     40a5f8 <_start@@Base+0x5498>
  40a5f3:	call   405070 <__stack_chk_fail@plt>
  40a5f8:	leave  
  40a5f9:	ret    
  40a5fa:	push   rbp
  40a5fb:	mov    rbp,rsp
  40a5fe:	sub    rsp,0x50
  40a602:	mov    QWORD PTR [rbp-0x38],rdi
  40a606:	mov    QWORD PTR [rbp-0x40],rsi
  40a60a:	mov    QWORD PTR [rbp-0x48],rdx
  40a60e:	mov    QWORD PTR [rbp-0x50],rcx
  40a612:	mov    rax,QWORD PTR fs:0x28
  40a61b:	mov    QWORD PTR [rbp-0x8],rax
  40a61f:	xor    eax,eax
  40a621:	mov    rax,QWORD PTR [rbp-0x50]
  40a625:	mov    DWORD PTR [rax],0x0
  40a62b:	mov    rax,QWORD PTR [rbp-0x38]
  40a62f:	mov    rax,QWORD PTR [rax]
  40a632:	mov    esi,0x6
  40a637:	mov    rdi,rax
  40a63a:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40a63f:	test   eax,eax
  40a641:	jne    40aee3 <_start@@Base+0x5d83>
  40a647:	lea    rcx,[rbp-0x2c]
  40a64b:	mov    rdx,QWORD PTR [rbp-0x48]
  40a64f:	mov    rsi,QWORD PTR [rbp-0x40]
  40a653:	mov    rax,QWORD PTR [rbp-0x38]
  40a657:	mov    rdi,rax
  40a65a:	call   405880 <_start@@Base+0x720>
  40a65f:	mov    QWORD PTR [rbp-0x40],rax
  40a663:	jmp    40aea6 <_start@@Base+0x5d46>
  40a668:	mov    rdx,QWORD PTR [rbp-0x48]
  40a66c:	mov    rcx,QWORD PTR [rbp-0x40]
  40a670:	mov    rax,QWORD PTR [rbp-0x38]
  40a674:	mov    rsi,rcx
  40a677:	mov    rdi,rax
  40a67a:	call   4055e5 <_start@@Base+0x485>
  40a67f:	mov    QWORD PTR [rbp-0x40],rax
  40a683:	mov    rdx,QWORD PTR [rbp-0x48]
  40a687:	mov    rax,QWORD PTR [rbp-0x40]
  40a68b:	mov    rsi,rdx
  40a68e:	mov    rdi,rax
  40a691:	call   405779 <_start@@Base+0x619>
  40a696:	mov    QWORD PTR [rbp-0x20],rax
  40a69a:	movabs rax,0x696e6376616bffff
  40a6a4:	cmp    QWORD PTR [rbp-0x20],rax
  40a6a8:	ja     40a789 <_start@@Base+0x5629>
  40a6ae:	mov    rax,QWORD PTR [rbp-0x20]
  40a6b2:	mov    ax,0x0
  40a6b6:	mov    rdx,rax
  40a6b9:	movabs rax,0x676c6f62616c0000
  40a6c3:	cmp    rdx,rax
  40a6c6:	jne    40a769 <_start@@Base+0x5609>
  40a6cc:	mov    rax,QWORD PTR [rbp-0x40]
  40a6d0:	mov    QWORD PTR [rbp-0x18],rax
  40a6d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40a6d8:	mov    rsi,QWORD PTR [rbp-0x18]
  40a6dc:	mov    rax,QWORD PTR [rbp-0x38]
  40a6e0:	mov    ecx,0x6
  40a6e5:	mov    rdi,rax
  40a6e8:	call   405c76 <_start@@Base+0xb16>
  40a6ed:	mov    QWORD PTR [rbp-0x40],rax
  40a6f1:	mov    rax,QWORD PTR [rbp-0x18]
  40a6f5:	cmp    rax,QWORD PTR [rbp-0x40]
  40a6f9:	je     40a749 <_start@@Base+0x55e9>
  40a6fb:	mov    rax,QWORD PTR [rbp-0x38]
  40a6ff:	mov    rax,QWORD PTR [rax]
  40a702:	mov    ecx,0x1
  40a707:	mov    edx,0x0
  40a70c:	mov    esi,0x0
  40a711:	mov    rdi,rax
  40a714:	call   41f93b <flatcc_builder_table_add@@Base>
  40a719:	mov    QWORD PTR [rbp-0x10],rax
  40a71d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a722:	je     40aee6 <_start@@Base+0x5d86>
  40a728:	mov    rcx,QWORD PTR [rbp-0x10]
  40a72c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a730:	mov    rsi,QWORD PTR [rbp-0x40]
  40a734:	mov    rax,QWORD PTR [rbp-0x38]
  40a738:	mov    rdi,rax
  40a73b:	call   4083d6 <_start@@Base+0x3276>
  40a740:	mov    QWORD PTR [rbp-0x40],rax
  40a744:	jmp    40ae8a <_start@@Base+0x5d2a>
  40a749:	mov    rdx,QWORD PTR [rbp-0x48]
  40a74d:	mov    rcx,QWORD PTR [rbp-0x40]
  40a751:	mov    rax,QWORD PTR [rbp-0x38]
  40a755:	mov    rsi,rcx
  40a758:	mov    rdi,rax
  40a75b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40a760:	mov    QWORD PTR [rbp-0x40],rax
  40a764:	jmp    40ae8a <_start@@Base+0x5d2a>
  40a769:	mov    rdx,QWORD PTR [rbp-0x48]
  40a76d:	mov    rcx,QWORD PTR [rbp-0x40]
  40a771:	mov    rax,QWORD PTR [rbp-0x38]
  40a775:	mov    rsi,rcx
  40a778:	mov    rdi,rax
  40a77b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40a780:	mov    QWORD PTR [rbp-0x40],rax
  40a784:	jmp    40ae8a <_start@@Base+0x5d2a>
  40a789:	movabs rax,0x696e6376616c32ff
  40a793:	cmp    QWORD PTR [rbp-0x20],rax
  40a797:	ja     40aa5d <_start@@Base+0x58fd>
  40a79d:	mov    rax,QWORD PTR [rbp-0x20]
  40a7a1:	mov    al,0x0
  40a7a3:	mov    rdx,rax
  40a7a6:	movabs rax,0x696e6376616c3200
  40a7b0:	cmp    rdx,rax
  40a7b3:	jne    40a8ec <_start@@Base+0x578c>
  40a7b9:	mov    rax,QWORD PTR [rbp-0x40]
  40a7bd:	mov    QWORD PTR [rbp-0x18],rax
  40a7c1:	mov    rdx,QWORD PTR [rbp-0x48]
  40a7c5:	mov    rsi,QWORD PTR [rbp-0x18]
  40a7c9:	mov    rax,QWORD PTR [rbp-0x38]
  40a7cd:	mov    ecx,0x7
  40a7d2:	mov    rdi,rax
  40a7d5:	call   405c76 <_start@@Base+0xb16>
  40a7da:	mov    QWORD PTR [rbp-0x40],rax
  40a7de:	mov    rax,QWORD PTR [rbp-0x18]
  40a7e2:	cmp    rax,QWORD PTR [rbp-0x40]
  40a7e6:	je     40a8cc <_start@@Base+0x576c>
  40a7ec:	mov    QWORD PTR [rbp-0x28],0x0
  40a7f4:	mov    rax,QWORD PTR [rbp-0x40]
  40a7f8:	mov    QWORD PTR [rbp-0x18],rax
  40a7fc:	lea    rcx,[rbp-0x28]
  40a800:	mov    rdx,QWORD PTR [rbp-0x48]
  40a804:	mov    rsi,QWORD PTR [rbp-0x18]
  40a808:	mov    rax,QWORD PTR [rbp-0x38]
  40a80c:	mov    rdi,rax
  40a80f:	call   40669a <_start@@Base+0x153a>
  40a814:	mov    QWORD PTR [rbp-0x40],rax
  40a818:	mov    rax,QWORD PTR [rbp-0x18]
  40a81c:	cmp    rax,QWORD PTR [rbp-0x40]
  40a820:	jne    40a86c <_start@@Base+0x570c>
  40a822:	mov    rax,QWORD PTR [rbp-0x40]
  40a826:	mov    QWORD PTR [rbp-0x18],rax
  40a82a:	lea    rcx,[rbp-0x28]
  40a82e:	mov    rdx,QWORD PTR [rbp-0x48]
  40a832:	mov    rsi,QWORD PTR [rbp-0x18]
  40a836:	mov    rax,QWORD PTR [rbp-0x38]
  40a83a:	mov    r8,rcx
  40a83d:	lea    rcx,[rip+0x3b95c]        # 4461a0 <__data_start@@Base+0xe0>
  40a844:	mov    rdi,rax
  40a847:	call   40700e <_start@@Base+0x1eae>
  40a84c:	mov    QWORD PTR [rbp-0x40],rax
  40a850:	mov    rax,QWORD PTR [rbp-0x40]
  40a854:	cmp    rax,QWORD PTR [rbp-0x18]
  40a858:	je     40aefc <_start@@Base+0x5d9c>
  40a85e:	mov    rax,QWORD PTR [rbp-0x40]
  40a862:	cmp    rax,QWORD PTR [rbp-0x48]
  40a866:	je     40aefc <_start@@Base+0x5d9c>
  40a86c:	mov    rax,QWORD PTR [rbp-0x28]
  40a870:	test   rax,rax
  40a873:	jne    40a887 <_start@@Base+0x5727>
  40a875:	mov    rax,QWORD PTR [rbp-0x38]
  40a879:	mov    eax,DWORD PTR [rax+0x10]
  40a87c:	and    eax,0x2
  40a87f:	test   eax,eax
  40a881:	je     40ae8a <_start@@Base+0x5d2a>
  40a887:	mov    rax,QWORD PTR [rbp-0x38]
  40a88b:	mov    rax,QWORD PTR [rax]
  40a88e:	mov    ecx,0x8
  40a893:	mov    edx,0x8
  40a898:	mov    esi,0x2
  40a89d:	mov    rdi,rax
  40a8a0:	call   41f93b <flatcc_builder_table_add@@Base>
  40a8a5:	mov    QWORD PTR [rbp-0x10],rax
  40a8a9:	cmp    QWORD PTR [rbp-0x10],0x0
  40a8ae:	je     40aee9 <_start@@Base+0x5d89>
  40a8b4:	mov    rdx,QWORD PTR [rbp-0x28]
  40a8b8:	mov    rax,QWORD PTR [rbp-0x10]
  40a8bc:	mov    rsi,rdx
  40a8bf:	mov    rdi,rax
  40a8c2:	call   4053e9 <_start@@Base+0x289>
  40a8c7:	jmp    40ae8a <_start@@Base+0x5d2a>
  40a8cc:	mov    rdx,QWORD PTR [rbp-0x48]
  40a8d0:	mov    rcx,QWORD PTR [rbp-0x40]
  40a8d4:	mov    rax,QWORD PTR [rbp-0x38]
  40a8d8:	mov    rsi,rcx
  40a8db:	mov    rdi,rax
  40a8de:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40a8e3:	mov    QWORD PTR [rbp-0x40],rax
  40a8e7:	jmp    40ae8a <_start@@Base+0x5d2a>
  40a8ec:	mov    rax,QWORD PTR [rbp-0x20]
  40a8f0:	mov    ax,0x0
  40a8f4:	mov    rdx,rax
  40a8f7:	movabs rax,0x696e6376616c0000
  40a901:	cmp    rdx,rax
  40a904:	jne    40aa3d <_start@@Base+0x58dd>
  40a90a:	mov    rax,QWORD PTR [rbp-0x40]
  40a90e:	mov    QWORD PTR [rbp-0x18],rax
  40a912:	mov    rdx,QWORD PTR [rbp-0x48]
  40a916:	mov    rsi,QWORD PTR [rbp-0x18]
  40a91a:	mov    rax,QWORD PTR [rbp-0x38]
  40a91e:	mov    ecx,0x6
  40a923:	mov    rdi,rax
  40a926:	call   405c76 <_start@@Base+0xb16>
  40a92b:	mov    QWORD PTR [rbp-0x40],rax
  40a92f:	mov    rax,QWORD PTR [rbp-0x18]
  40a933:	cmp    rax,QWORD PTR [rbp-0x40]
  40a937:	je     40aa1d <_start@@Base+0x58bd>
  40a93d:	mov    QWORD PTR [rbp-0x28],0x0
  40a945:	mov    rax,QWORD PTR [rbp-0x40]
  40a949:	mov    QWORD PTR [rbp-0x18],rax
  40a94d:	lea    rcx,[rbp-0x28]
  40a951:	mov    rdx,QWORD PTR [rbp-0x48]
  40a955:	mov    rsi,QWORD PTR [rbp-0x18]
  40a959:	mov    rax,QWORD PTR [rbp-0x38]
  40a95d:	mov    rdi,rax
  40a960:	call   40669a <_start@@Base+0x153a>
  40a965:	mov    QWORD PTR [rbp-0x40],rax
  40a969:	mov    rax,QWORD PTR [rbp-0x18]
  40a96d:	cmp    rax,QWORD PTR [rbp-0x40]
  40a971:	jne    40a9bd <_start@@Base+0x585d>
  40a973:	mov    rax,QWORD PTR [rbp-0x40]
  40a977:	mov    QWORD PTR [rbp-0x18],rax
  40a97b:	lea    rcx,[rbp-0x28]
  40a97f:	mov    rdx,QWORD PTR [rbp-0x48]
  40a983:	mov    rsi,QWORD PTR [rbp-0x18]
  40a987:	mov    rax,QWORD PTR [rbp-0x38]
  40a98b:	mov    r8,rcx
  40a98e:	lea    rcx,[rip+0x3b82b]        # 4461c0 <__data_start@@Base+0x100>
  40a995:	mov    rdi,rax
  40a998:	call   40700e <_start@@Base+0x1eae>
  40a99d:	mov    QWORD PTR [rbp-0x40],rax
  40a9a1:	mov    rax,QWORD PTR [rbp-0x40]
  40a9a5:	cmp    rax,QWORD PTR [rbp-0x18]
  40a9a9:	je     40aefc <_start@@Base+0x5d9c>
  40a9af:	mov    rax,QWORD PTR [rbp-0x40]
  40a9b3:	cmp    rax,QWORD PTR [rbp-0x48]
  40a9b7:	je     40aefc <_start@@Base+0x5d9c>
  40a9bd:	mov    rax,QWORD PTR [rbp-0x28]
  40a9c1:	test   rax,rax
  40a9c4:	jne    40a9d8 <_start@@Base+0x5878>
  40a9c6:	mov    rax,QWORD PTR [rbp-0x38]
  40a9ca:	mov    eax,DWORD PTR [rax+0x10]
  40a9cd:	and    eax,0x2
  40a9d0:	test   eax,eax
  40a9d2:	je     40ae8a <_start@@Base+0x5d2a>
  40a9d8:	mov    rax,QWORD PTR [rbp-0x38]
  40a9dc:	mov    rax,QWORD PTR [rax]
  40a9df:	mov    ecx,0x8
  40a9e4:	mov    edx,0x8
  40a9e9:	mov    esi,0x1
  40a9ee:	mov    rdi,rax
  40a9f1:	call   41f93b <flatcc_builder_table_add@@Base>
  40a9f6:	mov    QWORD PTR [rbp-0x10],rax
  40a9fa:	cmp    QWORD PTR [rbp-0x10],0x0
  40a9ff:	je     40aeec <_start@@Base+0x5d8c>
  40aa05:	mov    rdx,QWORD PTR [rbp-0x28]
  40aa09:	mov    rax,QWORD PTR [rbp-0x10]
  40aa0d:	mov    rsi,rdx
  40aa10:	mov    rdi,rax
  40aa13:	call   4053e9 <_start@@Base+0x289>
  40aa18:	jmp    40ae8a <_start@@Base+0x5d2a>
  40aa1d:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa21:	mov    rcx,QWORD PTR [rbp-0x40]
  40aa25:	mov    rax,QWORD PTR [rbp-0x38]
  40aa29:	mov    rsi,rcx
  40aa2c:	mov    rdi,rax
  40aa2f:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40aa34:	mov    QWORD PTR [rbp-0x40],rax
  40aa38:	jmp    40ae8a <_start@@Base+0x5d2a>
  40aa3d:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa41:	mov    rcx,QWORD PTR [rbp-0x40]
  40aa45:	mov    rax,QWORD PTR [rbp-0x38]
  40aa49:	mov    rsi,rcx
  40aa4c:	mov    rdi,rax
  40aa4f:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40aa54:	mov    QWORD PTR [rbp-0x40],rax
  40aa58:	jmp    40ae8a <_start@@Base+0x5d2a>
  40aa5d:	movabs rax,0x696e6376616c33ff
  40aa67:	cmp    QWORD PTR [rbp-0x20],rax
  40aa6b:	ja     40abdb <_start@@Base+0x5a7b>
  40aa71:	mov    rax,QWORD PTR [rbp-0x20]
  40aa75:	mov    al,0x0
  40aa77:	mov    rdx,rax
  40aa7a:	movabs rax,0x696e6376616c3300
  40aa84:	cmp    rdx,rax
  40aa87:	jne    40abbb <_start@@Base+0x5a5b>
  40aa8d:	mov    rax,QWORD PTR [rbp-0x40]
  40aa91:	mov    QWORD PTR [rbp-0x18],rax
  40aa95:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa99:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa9d:	mov    rax,QWORD PTR [rbp-0x38]
  40aaa1:	mov    ecx,0x7
  40aaa6:	mov    rdi,rax
  40aaa9:	call   405c76 <_start@@Base+0xb16>
  40aaae:	mov    QWORD PTR [rbp-0x40],rax
  40aab2:	mov    rax,QWORD PTR [rbp-0x18]
  40aab6:	cmp    rax,QWORD PTR [rbp-0x40]
  40aaba:	je     40ab9b <_start@@Base+0x5a3b>
  40aac0:	mov    DWORD PTR [rbp-0x28],0x0
  40aac7:	mov    rax,QWORD PTR [rbp-0x40]
  40aacb:	mov    QWORD PTR [rbp-0x18],rax
  40aacf:	lea    rcx,[rbp-0x28]
  40aad3:	mov    rdx,QWORD PTR [rbp-0x48]
  40aad7:	mov    rsi,QWORD PTR [rbp-0x18]
  40aadb:	mov    rax,QWORD PTR [rbp-0x38]
  40aadf:	mov    rdi,rax
  40aae2:	call   406761 <_start@@Base+0x1601>
  40aae7:	mov    QWORD PTR [rbp-0x40],rax
  40aaeb:	mov    rax,QWORD PTR [rbp-0x18]
  40aaef:	cmp    rax,QWORD PTR [rbp-0x40]
  40aaf3:	jne    40ab3f <_start@@Base+0x59df>
  40aaf5:	mov    rax,QWORD PTR [rbp-0x40]
  40aaf9:	mov    QWORD PTR [rbp-0x18],rax
  40aafd:	lea    rcx,[rbp-0x28]
  40ab01:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab05:	mov    rsi,QWORD PTR [rbp-0x18]
  40ab09:	mov    rax,QWORD PTR [rbp-0x38]
  40ab0d:	mov    r8,rcx
  40ab10:	lea    rcx,[rip+0x3b6c9]        # 4461e0 <__data_start@@Base+0x120>
  40ab17:	mov    rdi,rax
  40ab1a:	call   40716d <_start@@Base+0x200d>
  40ab1f:	mov    QWORD PTR [rbp-0x40],rax
  40ab23:	mov    rax,QWORD PTR [rbp-0x40]
  40ab27:	cmp    rax,QWORD PTR [rbp-0x18]
  40ab2b:	je     40aefc <_start@@Base+0x5d9c>
  40ab31:	mov    rax,QWORD PTR [rbp-0x40]
  40ab35:	cmp    rax,QWORD PTR [rbp-0x48]
  40ab39:	je     40aefc <_start@@Base+0x5d9c>
  40ab3f:	mov    eax,DWORD PTR [rbp-0x28]
  40ab42:	test   eax,eax
  40ab44:	jne    40ab58 <_start@@Base+0x59f8>
  40ab46:	mov    rax,QWORD PTR [rbp-0x38]
  40ab4a:	mov    eax,DWORD PTR [rax+0x10]
  40ab4d:	and    eax,0x2
  40ab50:	test   eax,eax
  40ab52:	je     40ae8a <_start@@Base+0x5d2a>
  40ab58:	mov    rax,QWORD PTR [rbp-0x38]
  40ab5c:	mov    rax,QWORD PTR [rax]
  40ab5f:	mov    ecx,0x4
  40ab64:	mov    edx,0x4
  40ab69:	mov    esi,0x3
  40ab6e:	mov    rdi,rax
  40ab71:	call   41f93b <flatcc_builder_table_add@@Base>
  40ab76:	mov    QWORD PTR [rbp-0x10],rax
  40ab7a:	cmp    QWORD PTR [rbp-0x10],0x0
  40ab7f:	je     40aeef <_start@@Base+0x5d8f>
  40ab85:	mov    edx,DWORD PTR [rbp-0x28]
  40ab88:	mov    rax,QWORD PTR [rbp-0x10]
  40ab8c:	mov    esi,edx
  40ab8e:	mov    rdi,rax
  40ab91:	call   4053b7 <_start@@Base+0x257>
  40ab96:	jmp    40ae8a <_start@@Base+0x5d2a>
  40ab9b:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab9f:	mov    rcx,QWORD PTR [rbp-0x40]
  40aba3:	mov    rax,QWORD PTR [rbp-0x38]
  40aba7:	mov    rsi,rcx
  40abaa:	mov    rdi,rax
  40abad:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40abb2:	mov    QWORD PTR [rbp-0x40],rax
  40abb6:	jmp    40ae8a <_start@@Base+0x5d2a>
  40abbb:	mov    rdx,QWORD PTR [rbp-0x48]
  40abbf:	mov    rcx,QWORD PTR [rbp-0x40]
  40abc3:	mov    rax,QWORD PTR [rbp-0x38]
  40abc7:	mov    rsi,rcx
  40abca:	mov    rdi,rax
  40abcd:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40abd2:	mov    QWORD PTR [rbp-0x40],rax
  40abd6:	jmp    40ae8a <_start@@Base+0x5d2a>
  40abdb:	mov    rax,QWORD PTR [rbp-0x20]
  40abdf:	mov    al,0x0
  40abe1:	mov    rdx,rax
  40abe4:	movabs rax,0x696e6376616c3500
  40abee:	cmp    rdx,rax
  40abf1:	jne    40ad2a <_start@@Base+0x5bca>
  40abf7:	mov    rax,QWORD PTR [rbp-0x40]
  40abfb:	mov    QWORD PTR [rbp-0x18],rax
  40abff:	mov    rdx,QWORD PTR [rbp-0x48]
  40ac03:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac07:	mov    rax,QWORD PTR [rbp-0x38]
  40ac0b:	mov    ecx,0x7
  40ac10:	mov    rdi,rax
  40ac13:	call   405c76 <_start@@Base+0xb16>
  40ac18:	mov    QWORD PTR [rbp-0x40],rax
  40ac1c:	mov    rax,QWORD PTR [rbp-0x18]
  40ac20:	cmp    rax,QWORD PTR [rbp-0x40]
  40ac24:	je     40ad0a <_start@@Base+0x5baa>
  40ac2a:	mov    QWORD PTR [rbp-0x28],0x0
  40ac32:	mov    rax,QWORD PTR [rbp-0x40]
  40ac36:	mov    QWORD PTR [rbp-0x18],rax
  40ac3a:	lea    rcx,[rbp-0x28]
  40ac3e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ac42:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac46:	mov    rax,QWORD PTR [rbp-0x38]
  40ac4a:	mov    rdi,rax
  40ac4d:	call   40669a <_start@@Base+0x153a>
  40ac52:	mov    QWORD PTR [rbp-0x40],rax
  40ac56:	mov    rax,QWORD PTR [rbp-0x18]
  40ac5a:	cmp    rax,QWORD PTR [rbp-0x40]
  40ac5e:	jne    40acaa <_start@@Base+0x5b4a>
  40ac60:	mov    rax,QWORD PTR [rbp-0x40]
  40ac64:	mov    QWORD PTR [rbp-0x18],rax
  40ac68:	lea    rcx,[rbp-0x28]
  40ac6c:	mov    rdx,QWORD PTR [rbp-0x48]
  40ac70:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac74:	mov    rax,QWORD PTR [rbp-0x38]
  40ac78:	mov    r8,rcx
  40ac7b:	lea    rcx,[rip+0x3b57e]        # 446200 <__data_start@@Base+0x140>
  40ac82:	mov    rdi,rax
  40ac85:	call   40700e <_start@@Base+0x1eae>
  40ac8a:	mov    QWORD PTR [rbp-0x40],rax
  40ac8e:	mov    rax,QWORD PTR [rbp-0x40]
  40ac92:	cmp    rax,QWORD PTR [rbp-0x18]
  40ac96:	je     40aefc <_start@@Base+0x5d9c>
  40ac9c:	mov    rax,QWORD PTR [rbp-0x40]
  40aca0:	cmp    rax,QWORD PTR [rbp-0x48]
  40aca4:	je     40aefc <_start@@Base+0x5d9c>
  40acaa:	mov    rax,QWORD PTR [rbp-0x28]
  40acae:	test   rax,rax
  40acb1:	jne    40acc5 <_start@@Base+0x5b65>
  40acb3:	mov    rax,QWORD PTR [rbp-0x38]
  40acb7:	mov    eax,DWORD PTR [rax+0x10]
  40acba:	and    eax,0x2
  40acbd:	test   eax,eax
  40acbf:	je     40ae8a <_start@@Base+0x5d2a>
  40acc5:	mov    rax,QWORD PTR [rbp-0x38]
  40acc9:	mov    rax,QWORD PTR [rax]
  40accc:	mov    ecx,0x8
  40acd1:	mov    edx,0x8
  40acd6:	mov    esi,0x5
  40acdb:	mov    rdi,rax
  40acde:	call   41f93b <flatcc_builder_table_add@@Base>
  40ace3:	mov    QWORD PTR [rbp-0x10],rax
  40ace7:	cmp    QWORD PTR [rbp-0x10],0x0
  40acec:	je     40aef2 <_start@@Base+0x5d92>
  40acf2:	mov    rdx,QWORD PTR [rbp-0x28]
  40acf6:	mov    rax,QWORD PTR [rbp-0x10]
  40acfa:	mov    rsi,rdx
  40acfd:	mov    rdi,rax
  40ad00:	call   4053e9 <_start@@Base+0x289>
  40ad05:	jmp    40ae8a <_start@@Base+0x5d2a>
  40ad0a:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad0e:	mov    rcx,QWORD PTR [rbp-0x40]
  40ad12:	mov    rax,QWORD PTR [rbp-0x38]
  40ad16:	mov    rsi,rcx
  40ad19:	mov    rdi,rax
  40ad1c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ad21:	mov    QWORD PTR [rbp-0x40],rax
  40ad25:	jmp    40ae8a <_start@@Base+0x5d2a>
  40ad2a:	mov    rax,QWORD PTR [rbp-0x20]
  40ad2e:	mov    al,0x0
  40ad30:	mov    rdx,rax
  40ad33:	movabs rax,0x696e6376616c3400
  40ad3d:	cmp    rdx,rax
  40ad40:	jne    40ae6f <_start@@Base+0x5d0f>
  40ad46:	mov    rax,QWORD PTR [rbp-0x40]
  40ad4a:	mov    QWORD PTR [rbp-0x18],rax
  40ad4e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad52:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad56:	mov    rax,QWORD PTR [rbp-0x38]
  40ad5a:	mov    ecx,0x7
  40ad5f:	mov    rdi,rax
  40ad62:	call   405c76 <_start@@Base+0xb16>
  40ad67:	mov    QWORD PTR [rbp-0x40],rax
  40ad6b:	mov    rax,QWORD PTR [rbp-0x18]
  40ad6f:	cmp    rax,QWORD PTR [rbp-0x40]
  40ad73:	je     40ae52 <_start@@Base+0x5cf2>
  40ad79:	mov    QWORD PTR [rbp-0x28],0x0
  40ad81:	mov    rax,QWORD PTR [rbp-0x40]
  40ad85:	mov    QWORD PTR [rbp-0x18],rax
  40ad89:	lea    rcx,[rbp-0x28]
  40ad8d:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad91:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad95:	mov    rax,QWORD PTR [rbp-0x38]
  40ad99:	mov    rdi,rax
  40ad9c:	call   40669a <_start@@Base+0x153a>
  40ada1:	mov    QWORD PTR [rbp-0x40],rax
  40ada5:	mov    rax,QWORD PTR [rbp-0x18]
  40ada9:	cmp    rax,QWORD PTR [rbp-0x40]
  40adad:	jne    40adf9 <_start@@Base+0x5c99>
  40adaf:	mov    rax,QWORD PTR [rbp-0x40]
  40adb3:	mov    QWORD PTR [rbp-0x18],rax
  40adb7:	lea    rcx,[rbp-0x28]
  40adbb:	mov    rdx,QWORD PTR [rbp-0x48]
  40adbf:	mov    rsi,QWORD PTR [rbp-0x18]
  40adc3:	mov    rax,QWORD PTR [rbp-0x38]
  40adc7:	mov    r8,rcx
  40adca:	lea    rcx,[rip+0x3b44f]        # 446220 <__data_start@@Base+0x160>
  40add1:	mov    rdi,rax
  40add4:	call   40700e <_start@@Base+0x1eae>
  40add9:	mov    QWORD PTR [rbp-0x40],rax
  40addd:	mov    rax,QWORD PTR [rbp-0x40]
  40ade1:	cmp    rax,QWORD PTR [rbp-0x18]
  40ade5:	je     40aefc <_start@@Base+0x5d9c>
  40adeb:	mov    rax,QWORD PTR [rbp-0x40]
  40adef:	cmp    rax,QWORD PTR [rbp-0x48]
  40adf3:	je     40aefc <_start@@Base+0x5d9c>
  40adf9:	mov    rax,QWORD PTR [rbp-0x28]
  40adfd:	test   rax,rax
  40ae00:	jne    40ae10 <_start@@Base+0x5cb0>
  40ae02:	mov    rax,QWORD PTR [rbp-0x38]
  40ae06:	mov    eax,DWORD PTR [rax+0x10]
  40ae09:	and    eax,0x2
  40ae0c:	test   eax,eax
  40ae0e:	je     40ae8a <_start@@Base+0x5d2a>
  40ae10:	mov    rax,QWORD PTR [rbp-0x38]
  40ae14:	mov    rax,QWORD PTR [rax]
  40ae17:	mov    ecx,0x8
  40ae1c:	mov    edx,0x8
  40ae21:	mov    esi,0x4
  40ae26:	mov    rdi,rax
  40ae29:	call   41f93b <flatcc_builder_table_add@@Base>
  40ae2e:	mov    QWORD PTR [rbp-0x10],rax
  40ae32:	cmp    QWORD PTR [rbp-0x10],0x0
  40ae37:	je     40aef5 <_start@@Base+0x5d95>
  40ae3d:	mov    rdx,QWORD PTR [rbp-0x28]
  40ae41:	mov    rax,QWORD PTR [rbp-0x10]
  40ae45:	mov    rsi,rdx
  40ae48:	mov    rdi,rax
  40ae4b:	call   4053e9 <_start@@Base+0x289>
  40ae50:	jmp    40ae8a <_start@@Base+0x5d2a>
  40ae52:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae56:	mov    rcx,QWORD PTR [rbp-0x40]
  40ae5a:	mov    rax,QWORD PTR [rbp-0x38]
  40ae5e:	mov    rsi,rcx
  40ae61:	mov    rdi,rax
  40ae64:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ae69:	mov    QWORD PTR [rbp-0x40],rax
  40ae6d:	jmp    40ae8a <_start@@Base+0x5d2a>
  40ae6f:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae73:	mov    rcx,QWORD PTR [rbp-0x40]
  40ae77:	mov    rax,QWORD PTR [rbp-0x38]
  40ae7b:	mov    rsi,rcx
  40ae7e:	mov    rdi,rax
  40ae81:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ae86:	mov    QWORD PTR [rbp-0x40],rax
  40ae8a:	lea    rcx,[rbp-0x2c]
  40ae8e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae92:	mov    rsi,QWORD PTR [rbp-0x40]
  40ae96:	mov    rax,QWORD PTR [rbp-0x38]
  40ae9a:	mov    rdi,rax
  40ae9d:	call   40593d <_start@@Base+0x7dd>
  40aea2:	mov    QWORD PTR [rbp-0x40],rax
  40aea6:	mov    eax,DWORD PTR [rbp-0x2c]
  40aea9:	test   eax,eax
  40aeab:	jne    40a668 <_start@@Base+0x5508>
  40aeb1:	mov    rax,QWORD PTR [rbp-0x38]
  40aeb5:	mov    eax,DWORD PTR [rax+0x20]
  40aeb8:	test   eax,eax
  40aeba:	jne    40aef8 <_start@@Base+0x5d98>
  40aebc:	mov    rax,QWORD PTR [rbp-0x38]
  40aec0:	mov    rax,QWORD PTR [rax]
  40aec3:	mov    rdi,rax
  40aec6:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40aecb:	mov    edx,eax
  40aecd:	mov    rax,QWORD PTR [rbp-0x50]
  40aed1:	mov    DWORD PTR [rax],edx
  40aed3:	mov    rax,QWORD PTR [rbp-0x50]
  40aed7:	mov    eax,DWORD PTR [rax]
  40aed9:	test   eax,eax
  40aedb:	je     40aefb <_start@@Base+0x5d9b>
  40aedd:	mov    rax,QWORD PTR [rbp-0x40]
  40aee1:	jmp    40af15 <_start@@Base+0x5db5>
  40aee3:	nop
  40aee4:	jmp    40aefc <_start@@Base+0x5d9c>
  40aee6:	nop
  40aee7:	jmp    40aefc <_start@@Base+0x5d9c>
  40aee9:	nop
  40aeea:	jmp    40aefc <_start@@Base+0x5d9c>
  40aeec:	nop
  40aeed:	jmp    40aefc <_start@@Base+0x5d9c>
  40aeef:	nop
  40aef0:	jmp    40aefc <_start@@Base+0x5d9c>
  40aef2:	nop
  40aef3:	jmp    40aefc <_start@@Base+0x5d9c>
  40aef5:	nop
  40aef6:	jmp    40aefc <_start@@Base+0x5d9c>
  40aef8:	nop
  40aef9:	jmp    40aefc <_start@@Base+0x5d9c>
  40aefb:	nop
  40aefc:	mov    rdx,QWORD PTR [rbp-0x48]
  40af00:	mov    rsi,QWORD PTR [rbp-0x40]
  40af04:	mov    rax,QWORD PTR [rbp-0x38]
  40af08:	mov    ecx,0x21
  40af0d:	mov    rdi,rax
  40af10:	call   42665a <flatcc_json_parser_set_error@@Base>
  40af15:	mov    rdi,QWORD PTR [rbp-0x8]
  40af19:	xor    rdi,QWORD PTR fs:0x28
  40af22:	je     40af29 <_start@@Base+0x5dc9>
  40af24:	call   405070 <__stack_chk_fail@plt>
  40af29:	leave  
  40af2a:	ret    
  40af2b:	push   rbp
  40af2c:	mov    rbp,rsp
  40af2f:	sub    rsp,0x60
  40af33:	mov    QWORD PTR [rbp-0x38],rdi
  40af37:	mov    QWORD PTR [rbp-0x40],rsi
  40af3b:	mov    QWORD PTR [rbp-0x48],rdx
  40af3f:	mov    QWORD PTR [rbp-0x50],rcx
  40af43:	mov    rax,QWORD PTR fs:0x28
  40af4c:	mov    QWORD PTR [rbp-0x8],rax
  40af50:	xor    eax,eax
  40af52:	lea    rcx,[rbp-0x2c]
  40af56:	mov    rdx,QWORD PTR [rbp-0x48]
  40af5a:	mov    rsi,QWORD PTR [rbp-0x40]
  40af5e:	mov    rax,QWORD PTR [rbp-0x38]
  40af62:	mov    rdi,rax
  40af65:	call   405880 <_start@@Base+0x720>
  40af6a:	mov    QWORD PTR [rbp-0x40],rax
  40af6e:	jmp    40b695 <_start@@Base+0x6535>
  40af73:	mov    rdx,QWORD PTR [rbp-0x48]
  40af77:	mov    rcx,QWORD PTR [rbp-0x40]
  40af7b:	mov    rax,QWORD PTR [rbp-0x38]
  40af7f:	mov    rsi,rcx
  40af82:	mov    rdi,rax
  40af85:	call   4055e5 <_start@@Base+0x485>
  40af8a:	mov    QWORD PTR [rbp-0x40],rax
  40af8e:	mov    rdx,QWORD PTR [rbp-0x48]
  40af92:	mov    rax,QWORD PTR [rbp-0x40]
  40af96:	mov    rsi,rdx
  40af99:	mov    rdi,rax
  40af9c:	call   405779 <_start@@Base+0x619>
  40afa1:	mov    QWORD PTR [rbp-0x20],rax
  40afa5:	movabs rax,0x7465737432ffffff
  40afaf:	cmp    QWORD PTR [rbp-0x20],rax
  40afb3:	ja     40b20c <_start@@Base+0x60ac>
  40afb9:	mov    rax,QWORD PTR [rbp-0x20]
  40afbd:	and    rax,0xffffffffff000000
  40afc3:	mov    rdx,rax
  40afc6:	movabs rax,0x7465737432000000
  40afd0:	cmp    rdx,rax
  40afd3:	jne    40b0ce <_start@@Base+0x5f6e>
  40afd9:	mov    rax,QWORD PTR [rbp-0x40]
  40afdd:	mov    QWORD PTR [rbp-0x18],rax
  40afe1:	mov    rdx,QWORD PTR [rbp-0x48]
  40afe5:	mov    rsi,QWORD PTR [rbp-0x18]
  40afe9:	mov    rax,QWORD PTR [rbp-0x38]
  40afed:	mov    ecx,0x5
  40aff2:	mov    rdi,rax
  40aff5:	call   405c76 <_start@@Base+0xb16>
  40affa:	mov    QWORD PTR [rbp-0x40],rax
  40affe:	mov    rax,QWORD PTR [rbp-0x18]
  40b002:	cmp    rax,QWORD PTR [rbp-0x40]
  40b006:	je     40b0ae <_start@@Base+0x5f4e>
  40b00c:	mov    BYTE PTR [rbp-0x28],0x0
  40b010:	mov    rax,QWORD PTR [rbp-0x50]
  40b014:	add    rax,0x18
  40b018:	mov    QWORD PTR [rbp-0x10],rax
  40b01c:	mov    rax,QWORD PTR [rbp-0x40]
  40b020:	mov    QWORD PTR [rbp-0x18],rax
  40b024:	lea    rcx,[rbp-0x28]
  40b028:	mov    rdx,QWORD PTR [rbp-0x48]
  40b02c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b030:	mov    rax,QWORD PTR [rbp-0x38]
  40b034:	mov    rdi,rax
  40b037:	call   4068ec <_start@@Base+0x178c>
  40b03c:	mov    QWORD PTR [rbp-0x40],rax
  40b040:	mov    rax,QWORD PTR [rbp-0x18]
  40b044:	cmp    rax,QWORD PTR [rbp-0x40]
  40b048:	jne    40b094 <_start@@Base+0x5f34>
  40b04a:	mov    rax,QWORD PTR [rbp-0x40]
  40b04e:	mov    QWORD PTR [rbp-0x18],rax
  40b052:	lea    rcx,[rbp-0x28]
  40b056:	mov    rdx,QWORD PTR [rbp-0x48]
  40b05a:	mov    rsi,QWORD PTR [rbp-0x18]
  40b05e:	mov    rax,QWORD PTR [rbp-0x38]
  40b062:	mov    r8,rcx
  40b065:	lea    rcx,[rip+0x3b1d4]        # 446240 <__data_start@@Base+0x180>
  40b06c:	mov    rdi,rax
  40b06f:	call   407424 <_start@@Base+0x22c4>
  40b074:	mov    QWORD PTR [rbp-0x40],rax
  40b078:	mov    rax,QWORD PTR [rbp-0x40]
  40b07c:	cmp    rax,QWORD PTR [rbp-0x18]
  40b080:	je     40b6a6 <_start@@Base+0x6546>
  40b086:	mov    rax,QWORD PTR [rbp-0x40]
  40b08a:	cmp    rax,QWORD PTR [rbp-0x48]
  40b08e:	je     40b6a6 <_start@@Base+0x6546>
  40b094:	movzx  eax,BYTE PTR [rbp-0x28]
  40b098:	movsx  edx,al
  40b09b:	mov    rax,QWORD PTR [rbp-0x10]
  40b09f:	mov    esi,edx
  40b0a1:	mov    rdi,rax
  40b0a4:	call   40534b <_start@@Base+0x1eb>
  40b0a9:	jmp    40b679 <_start@@Base+0x6519>
  40b0ae:	mov    rdx,QWORD PTR [rbp-0x48]
  40b0b2:	mov    rcx,QWORD PTR [rbp-0x40]
  40b0b6:	mov    rax,QWORD PTR [rbp-0x38]
  40b0ba:	mov    rsi,rcx
  40b0bd:	mov    rdi,rax
  40b0c0:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b0c5:	mov    QWORD PTR [rbp-0x40],rax
  40b0c9:	jmp    40b679 <_start@@Base+0x6519>
  40b0ce:	mov    rax,QWORD PTR [rbp-0x20]
  40b0d2:	and    rax,0xffffffffff000000
  40b0d8:	mov    rdx,rax
  40b0db:	movabs rax,0x7465737431000000
  40b0e5:	cmp    rdx,rax
  40b0e8:	jne    40b1ec <_start@@Base+0x608c>
  40b0ee:	mov    rax,QWORD PTR [rbp-0x40]
  40b0f2:	mov    QWORD PTR [rbp-0x18],rax
  40b0f6:	mov    rdx,QWORD PTR [rbp-0x48]
  40b0fa:	mov    rsi,QWORD PTR [rbp-0x18]
  40b0fe:	mov    rax,QWORD PTR [rbp-0x38]
  40b102:	mov    ecx,0x5
  40b107:	mov    rdi,rax
  40b10a:	call   405c76 <_start@@Base+0xb16>
  40b10f:	mov    QWORD PTR [rbp-0x40],rax
  40b113:	mov    rax,QWORD PTR [rbp-0x18]
  40b117:	cmp    rax,QWORD PTR [rbp-0x40]
  40b11b:	je     40b1cc <_start@@Base+0x606c>
  40b121:	vxorpd xmm0,xmm0,xmm0
  40b125:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40b12a:	mov    rax,QWORD PTR [rbp-0x50]
  40b12e:	add    rax,0x10
  40b132:	mov    QWORD PTR [rbp-0x10],rax
  40b136:	mov    rax,QWORD PTR [rbp-0x40]
  40b13a:	mov    QWORD PTR [rbp-0x18],rax
  40b13e:	lea    rcx,[rbp-0x28]
  40b142:	mov    rdx,QWORD PTR [rbp-0x48]
  40b146:	mov    rsi,QWORD PTR [rbp-0x18]
  40b14a:	mov    rax,QWORD PTR [rbp-0x38]
  40b14e:	mov    rdi,rax
  40b151:	call   4274c3 <flatcc_json_parser_double@@Base>
  40b156:	mov    QWORD PTR [rbp-0x40],rax
  40b15a:	mov    rax,QWORD PTR [rbp-0x18]
  40b15e:	cmp    rax,QWORD PTR [rbp-0x40]
  40b162:	jne    40b1ae <_start@@Base+0x604e>
  40b164:	mov    rax,QWORD PTR [rbp-0x40]
  40b168:	mov    QWORD PTR [rbp-0x18],rax
  40b16c:	lea    rcx,[rbp-0x28]
  40b170:	mov    rdx,QWORD PTR [rbp-0x48]
  40b174:	mov    rsi,QWORD PTR [rbp-0x18]
  40b178:	mov    rax,QWORD PTR [rbp-0x38]
  40b17c:	mov    r8,rcx
  40b17f:	lea    rcx,[rip+0x3b0da]        # 446260 <__data_start@@Base+0x1a0>
  40b186:	mov    rdi,rax
  40b189:	call   407837 <_start@@Base+0x26d7>
  40b18e:	mov    QWORD PTR [rbp-0x40],rax
  40b192:	mov    rax,QWORD PTR [rbp-0x40]
  40b196:	cmp    rax,QWORD PTR [rbp-0x18]
  40b19a:	je     40b6a6 <_start@@Base+0x6546>
  40b1a0:	mov    rax,QWORD PTR [rbp-0x40]
  40b1a4:	cmp    rax,QWORD PTR [rbp-0x48]
  40b1a8:	je     40b6a6 <_start@@Base+0x6546>
  40b1ae:	mov    rdx,QWORD PTR [rbp-0x28]
  40b1b2:	mov    rax,QWORD PTR [rbp-0x10]
  40b1b6:	mov    QWORD PTR [rbp-0x58],rdx
  40b1ba:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  40b1bf:	mov    rdi,rax
  40b1c2:	call   405482 <_start@@Base+0x322>
  40b1c7:	jmp    40b679 <_start@@Base+0x6519>
  40b1cc:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1d0:	mov    rcx,QWORD PTR [rbp-0x40]
  40b1d4:	mov    rax,QWORD PTR [rbp-0x38]
  40b1d8:	mov    rsi,rcx
  40b1db:	mov    rdi,rax
  40b1de:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b1e3:	mov    QWORD PTR [rbp-0x40],rax
  40b1e7:	jmp    40b679 <_start@@Base+0x6519>
  40b1ec:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1f0:	mov    rcx,QWORD PTR [rbp-0x40]
  40b1f4:	mov    rax,QWORD PTR [rbp-0x38]
  40b1f8:	mov    rsi,rcx
  40b1fb:	mov    rdi,rax
  40b1fe:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b203:	mov    QWORD PTR [rbp-0x40],rax
  40b207:	jmp    40b679 <_start@@Base+0x6519>
  40b20c:	movabs rax,0x77ffffffffffffff
  40b216:	cmp    QWORD PTR [rbp-0x20],rax
  40b21a:	ja     40b2d8 <_start@@Base+0x6178>
  40b220:	mov    rax,QWORD PTR [rbp-0x20]
  40b224:	and    rax,0xffffffffff000000
  40b22a:	mov    rdx,rax
  40b22d:	movabs rax,0x7465737433000000
  40b237:	cmp    rdx,rax
  40b23a:	jne    40b2b8 <_start@@Base+0x6158>
  40b23c:	mov    rax,QWORD PTR [rbp-0x40]
  40b240:	mov    QWORD PTR [rbp-0x18],rax
  40b244:	mov    rdx,QWORD PTR [rbp-0x48]
  40b248:	mov    rsi,QWORD PTR [rbp-0x18]
  40b24c:	mov    rax,QWORD PTR [rbp-0x38]
  40b250:	mov    ecx,0x5
  40b255:	mov    rdi,rax
  40b258:	call   405c76 <_start@@Base+0xb16>
  40b25d:	mov    QWORD PTR [rbp-0x40],rax
  40b261:	mov    rax,QWORD PTR [rbp-0x18]
  40b265:	cmp    rax,QWORD PTR [rbp-0x40]
  40b269:	je     40b298 <_start@@Base+0x6138>
  40b26b:	mov    rax,QWORD PTR [rbp-0x50]
  40b26f:	add    rax,0x1a
  40b273:	mov    QWORD PTR [rbp-0x10],rax
  40b277:	mov    rcx,QWORD PTR [rbp-0x10]
  40b27b:	mov    rdx,QWORD PTR [rbp-0x48]
  40b27f:	mov    rsi,QWORD PTR [rbp-0x40]
  40b283:	mov    rax,QWORD PTR [rbp-0x38]
  40b287:	mov    rdi,rax
  40b28a:	call   4096a0 <_start@@Base+0x4540>
  40b28f:	mov    QWORD PTR [rbp-0x40],rax
  40b293:	jmp    40b679 <_start@@Base+0x6519>
  40b298:	mov    rdx,QWORD PTR [rbp-0x48]
  40b29c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b2a0:	mov    rax,QWORD PTR [rbp-0x38]
  40b2a4:	mov    rsi,rcx
  40b2a7:	mov    rdi,rax
  40b2aa:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b2af:	mov    QWORD PTR [rbp-0x40],rax
  40b2b3:	jmp    40b679 <_start@@Base+0x6519>
  40b2b8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b2bc:	mov    rcx,QWORD PTR [rbp-0x40]
  40b2c0:	mov    rax,QWORD PTR [rbp-0x38]
  40b2c4:	mov    rsi,rcx
  40b2c7:	mov    rdi,rax
  40b2ca:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b2cf:	mov    QWORD PTR [rbp-0x40],rax
  40b2d3:	jmp    40b679 <_start@@Base+0x6519>
  40b2d8:	movabs rax,0x78ffffffffffffff
  40b2e2:	cmp    QWORD PTR [rbp-0x20],rax
  40b2e6:	ja     40b428 <_start@@Base+0x62c8>
  40b2ec:	movabs rax,0xff00000000000000
  40b2f6:	and    rax,QWORD PTR [rbp-0x20]
  40b2fa:	mov    rdx,rax
  40b2fd:	movabs rax,0x7800000000000000
  40b307:	cmp    rdx,rax
  40b30a:	jne    40b408 <_start@@Base+0x62a8>
  40b310:	mov    rax,QWORD PTR [rbp-0x40]
  40b314:	mov    QWORD PTR [rbp-0x18],rax
  40b318:	mov    rdx,QWORD PTR [rbp-0x48]
  40b31c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b320:	mov    rax,QWORD PTR [rbp-0x38]
  40b324:	mov    ecx,0x1
  40b329:	mov    rdi,rax
  40b32c:	call   405c76 <_start@@Base+0xb16>
  40b331:	mov    QWORD PTR [rbp-0x40],rax
  40b335:	mov    rax,QWORD PTR [rbp-0x18]
  40b339:	cmp    rax,QWORD PTR [rbp-0x40]
  40b33d:	je     40b3e8 <_start@@Base+0x6288>
  40b343:	vxorps xmm0,xmm0,xmm0
  40b347:	vmovss DWORD PTR [rbp-0x28],xmm0
  40b34c:	mov    rax,QWORD PTR [rbp-0x50]
  40b350:	mov    QWORD PTR [rbp-0x10],rax
  40b354:	mov    rax,QWORD PTR [rbp-0x40]
  40b358:	mov    QWORD PTR [rbp-0x18],rax
  40b35c:	lea    rcx,[rbp-0x28]
  40b360:	mov    rdx,QWORD PTR [rbp-0x48]
  40b364:	mov    rsi,QWORD PTR [rbp-0x18]
  40b368:	mov    rax,QWORD PTR [rbp-0x38]
  40b36c:	mov    rdi,rax
  40b36f:	call   427612 <flatcc_json_parser_float@@Base>
  40b374:	mov    QWORD PTR [rbp-0x40],rax
  40b378:	mov    rax,QWORD PTR [rbp-0x18]
  40b37c:	cmp    rax,QWORD PTR [rbp-0x40]
  40b380:	jne    40b3cc <_start@@Base+0x626c>
  40b382:	mov    rax,QWORD PTR [rbp-0x40]
  40b386:	mov    QWORD PTR [rbp-0x18],rax
  40b38a:	lea    rcx,[rbp-0x28]
  40b38e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b392:	mov    rsi,QWORD PTR [rbp-0x18]
  40b396:	mov    rax,QWORD PTR [rbp-0x38]
  40b39a:	mov    r8,rcx
  40b39d:	lea    rcx,[rip+0x3aedc]        # 446280 <__data_start@@Base+0x1c0>
  40b3a4:	mov    rdi,rax
  40b3a7:	call   4076d2 <_start@@Base+0x2572>
  40b3ac:	mov    QWORD PTR [rbp-0x40],rax
  40b3b0:	mov    rax,QWORD PTR [rbp-0x40]
  40b3b4:	cmp    rax,QWORD PTR [rbp-0x18]
  40b3b8:	je     40b6a6 <_start@@Base+0x6546>
  40b3be:	mov    rax,QWORD PTR [rbp-0x40]
  40b3c2:	cmp    rax,QWORD PTR [rbp-0x48]
  40b3c6:	je     40b6a6 <_start@@Base+0x6546>
  40b3cc:	mov    edx,DWORD PTR [rbp-0x28]
  40b3cf:	mov    rax,QWORD PTR [rbp-0x10]
  40b3d3:	mov    DWORD PTR [rbp-0x58],edx
  40b3d6:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40b3db:	mov    rdi,rax
  40b3de:	call   405432 <_start@@Base+0x2d2>
  40b3e3:	jmp    40b679 <_start@@Base+0x6519>
  40b3e8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b3ec:	mov    rcx,QWORD PTR [rbp-0x40]
  40b3f0:	mov    rax,QWORD PTR [rbp-0x38]
  40b3f4:	mov    rsi,rcx
  40b3f7:	mov    rdi,rax
  40b3fa:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b3ff:	mov    QWORD PTR [rbp-0x40],rax
  40b403:	jmp    40b679 <_start@@Base+0x6519>
  40b408:	mov    rdx,QWORD PTR [rbp-0x48]
  40b40c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b410:	mov    rax,QWORD PTR [rbp-0x38]
  40b414:	mov    rsi,rcx
  40b417:	mov    rdi,rax
  40b41a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b41f:	mov    QWORD PTR [rbp-0x40],rax
  40b423:	jmp    40b679 <_start@@Base+0x6519>
  40b428:	movabs rax,0xff00000000000000
  40b432:	and    rax,QWORD PTR [rbp-0x20]
  40b436:	mov    rdx,rax
  40b439:	movabs rax,0x7a00000000000000
  40b443:	cmp    rdx,rax
  40b446:	jne    40b548 <_start@@Base+0x63e8>
  40b44c:	mov    rax,QWORD PTR [rbp-0x40]
  40b450:	mov    QWORD PTR [rbp-0x18],rax
  40b454:	mov    rdx,QWORD PTR [rbp-0x48]
  40b458:	mov    rsi,QWORD PTR [rbp-0x18]
  40b45c:	mov    rax,QWORD PTR [rbp-0x38]
  40b460:	mov    ecx,0x1
  40b465:	mov    rdi,rax
  40b468:	call   405c76 <_start@@Base+0xb16>
  40b46d:	mov    QWORD PTR [rbp-0x40],rax
  40b471:	mov    rax,QWORD PTR [rbp-0x18]
  40b475:	cmp    rax,QWORD PTR [rbp-0x40]
  40b479:	je     40b528 <_start@@Base+0x63c8>
  40b47f:	vxorps xmm0,xmm0,xmm0
  40b483:	vmovss DWORD PTR [rbp-0x28],xmm0
  40b488:	mov    rax,QWORD PTR [rbp-0x50]
  40b48c:	add    rax,0x8
  40b490:	mov    QWORD PTR [rbp-0x10],rax
  40b494:	mov    rax,QWORD PTR [rbp-0x40]
  40b498:	mov    QWORD PTR [rbp-0x18],rax
  40b49c:	lea    rcx,[rbp-0x28]
  40b4a0:	mov    rdx,QWORD PTR [rbp-0x48]
  40b4a4:	mov    rsi,QWORD PTR [rbp-0x18]
  40b4a8:	mov    rax,QWORD PTR [rbp-0x38]
  40b4ac:	mov    rdi,rax
  40b4af:	call   427612 <flatcc_json_parser_float@@Base>
  40b4b4:	mov    QWORD PTR [rbp-0x40],rax
  40b4b8:	mov    rax,QWORD PTR [rbp-0x18]
  40b4bc:	cmp    rax,QWORD PTR [rbp-0x40]
  40b4c0:	jne    40b50c <_start@@Base+0x63ac>
  40b4c2:	mov    rax,QWORD PTR [rbp-0x40]
  40b4c6:	mov    QWORD PTR [rbp-0x18],rax
  40b4ca:	lea    rcx,[rbp-0x28]
  40b4ce:	mov    rdx,QWORD PTR [rbp-0x48]
  40b4d2:	mov    rsi,QWORD PTR [rbp-0x18]
  40b4d6:	mov    rax,QWORD PTR [rbp-0x38]
  40b4da:	mov    r8,rcx
  40b4dd:	lea    rcx,[rip+0x3adbc]        # 4462a0 <__data_start@@Base+0x1e0>
  40b4e4:	mov    rdi,rax
  40b4e7:	call   4076d2 <_start@@Base+0x2572>
  40b4ec:	mov    QWORD PTR [rbp-0x40],rax
  40b4f0:	mov    rax,QWORD PTR [rbp-0x40]
  40b4f4:	cmp    rax,QWORD PTR [rbp-0x18]
  40b4f8:	je     40b6a6 <_start@@Base+0x6546>
  40b4fe:	mov    rax,QWORD PTR [rbp-0x40]
  40b502:	cmp    rax,QWORD PTR [rbp-0x48]
  40b506:	je     40b6a6 <_start@@Base+0x6546>
  40b50c:	mov    edx,DWORD PTR [rbp-0x28]
  40b50f:	mov    rax,QWORD PTR [rbp-0x10]
  40b513:	mov    DWORD PTR [rbp-0x58],edx
  40b516:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40b51b:	mov    rdi,rax
  40b51e:	call   405432 <_start@@Base+0x2d2>
  40b523:	jmp    40b679 <_start@@Base+0x6519>
  40b528:	mov    rdx,QWORD PTR [rbp-0x48]
  40b52c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b530:	mov    rax,QWORD PTR [rbp-0x38]
  40b534:	mov    rsi,rcx
  40b537:	mov    rdi,rax
  40b53a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b53f:	mov    QWORD PTR [rbp-0x40],rax
  40b543:	jmp    40b679 <_start@@Base+0x6519>
  40b548:	movabs rax,0xff00000000000000
  40b552:	and    rax,QWORD PTR [rbp-0x20]
  40b556:	mov    rdx,rax
  40b559:	movabs rax,0x7900000000000000
  40b563:	cmp    rdx,rax
  40b566:	jne    40b65e <_start@@Base+0x64fe>
  40b56c:	mov    rax,QWORD PTR [rbp-0x40]
  40b570:	mov    QWORD PTR [rbp-0x18],rax
  40b574:	mov    rdx,QWORD PTR [rbp-0x48]
  40b578:	mov    rsi,QWORD PTR [rbp-0x18]
  40b57c:	mov    rax,QWORD PTR [rbp-0x38]
  40b580:	mov    ecx,0x1
  40b585:	mov    rdi,rax
  40b588:	call   405c76 <_start@@Base+0xb16>
  40b58d:	mov    QWORD PTR [rbp-0x40],rax
  40b591:	mov    rax,QWORD PTR [rbp-0x18]
  40b595:	cmp    rax,QWORD PTR [rbp-0x40]
  40b599:	je     40b641 <_start@@Base+0x64e1>
  40b59f:	vxorps xmm0,xmm0,xmm0
  40b5a3:	vmovss DWORD PTR [rbp-0x28],xmm0
  40b5a8:	mov    rax,QWORD PTR [rbp-0x50]
  40b5ac:	add    rax,0x4
  40b5b0:	mov    QWORD PTR [rbp-0x10],rax
  40b5b4:	mov    rax,QWORD PTR [rbp-0x40]
  40b5b8:	mov    QWORD PTR [rbp-0x18],rax
  40b5bc:	lea    rcx,[rbp-0x28]
  40b5c0:	mov    rdx,QWORD PTR [rbp-0x48]
  40b5c4:	mov    rsi,QWORD PTR [rbp-0x18]
  40b5c8:	mov    rax,QWORD PTR [rbp-0x38]
  40b5cc:	mov    rdi,rax
  40b5cf:	call   427612 <flatcc_json_parser_float@@Base>
  40b5d4:	mov    QWORD PTR [rbp-0x40],rax
  40b5d8:	mov    rax,QWORD PTR [rbp-0x18]
  40b5dc:	cmp    rax,QWORD PTR [rbp-0x40]
  40b5e0:	jne    40b628 <_start@@Base+0x64c8>
  40b5e2:	mov    rax,QWORD PTR [rbp-0x40]
  40b5e6:	mov    QWORD PTR [rbp-0x18],rax
  40b5ea:	lea    rcx,[rbp-0x28]
  40b5ee:	mov    rdx,QWORD PTR [rbp-0x48]
  40b5f2:	mov    rsi,QWORD PTR [rbp-0x18]
  40b5f6:	mov    rax,QWORD PTR [rbp-0x38]
  40b5fa:	mov    r8,rcx
  40b5fd:	lea    rcx,[rip+0x3acbc]        # 4462c0 <__data_start@@Base+0x200>
  40b604:	mov    rdi,rax
  40b607:	call   4076d2 <_start@@Base+0x2572>
  40b60c:	mov    QWORD PTR [rbp-0x40],rax
  40b610:	mov    rax,QWORD PTR [rbp-0x40]
  40b614:	cmp    rax,QWORD PTR [rbp-0x18]
  40b618:	je     40b6a6 <_start@@Base+0x6546>
  40b61e:	mov    rax,QWORD PTR [rbp-0x40]
  40b622:	cmp    rax,QWORD PTR [rbp-0x48]
  40b626:	je     40b6a6 <_start@@Base+0x6546>
  40b628:	mov    edx,DWORD PTR [rbp-0x28]
  40b62b:	mov    rax,QWORD PTR [rbp-0x10]
  40b62f:	mov    DWORD PTR [rbp-0x58],edx
  40b632:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40b637:	mov    rdi,rax
  40b63a:	call   405432 <_start@@Base+0x2d2>
  40b63f:	jmp    40b679 <_start@@Base+0x6519>
  40b641:	mov    rdx,QWORD PTR [rbp-0x48]
  40b645:	mov    rcx,QWORD PTR [rbp-0x40]
  40b649:	mov    rax,QWORD PTR [rbp-0x38]
  40b64d:	mov    rsi,rcx
  40b650:	mov    rdi,rax
  40b653:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b658:	mov    QWORD PTR [rbp-0x40],rax
  40b65c:	jmp    40b679 <_start@@Base+0x6519>
  40b65e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b662:	mov    rcx,QWORD PTR [rbp-0x40]
  40b666:	mov    rax,QWORD PTR [rbp-0x38]
  40b66a:	mov    rsi,rcx
  40b66d:	mov    rdi,rax
  40b670:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b675:	mov    QWORD PTR [rbp-0x40],rax
  40b679:	lea    rcx,[rbp-0x2c]
  40b67d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b681:	mov    rsi,QWORD PTR [rbp-0x40]
  40b685:	mov    rax,QWORD PTR [rbp-0x38]
  40b689:	mov    rdi,rax
  40b68c:	call   40593d <_start@@Base+0x7dd>
  40b691:	mov    QWORD PTR [rbp-0x40],rax
  40b695:	mov    eax,DWORD PTR [rbp-0x2c]
  40b698:	test   eax,eax
  40b69a:	jne    40af73 <_start@@Base+0x5e13>
  40b6a0:	mov    rax,QWORD PTR [rbp-0x40]
  40b6a4:	jmp    40b6bf <_start@@Base+0x655f>
  40b6a6:	mov    rdx,QWORD PTR [rbp-0x48]
  40b6aa:	mov    rsi,QWORD PTR [rbp-0x40]
  40b6ae:	mov    rax,QWORD PTR [rbp-0x38]
  40b6b2:	mov    ecx,0x21
  40b6b7:	mov    rdi,rax
  40b6ba:	call   42665a <flatcc_json_parser_set_error@@Base>
  40b6bf:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6c3:	xor    rdi,QWORD PTR fs:0x28
  40b6cc:	je     40b6d3 <_start@@Base+0x6573>
  40b6ce:	call   405070 <__stack_chk_fail@plt>
  40b6d3:	leave  
  40b6d4:	ret    
  40b6d5:	push   rbp
  40b6d6:	mov    rbp,rsp
  40b6d9:	sub    rsp,0x30
  40b6dd:	mov    QWORD PTR [rbp-0x18],rdi
  40b6e1:	mov    QWORD PTR [rbp-0x20],rsi
  40b6e5:	mov    QWORD PTR [rbp-0x28],rdx
  40b6e9:	mov    QWORD PTR [rbp-0x30],rcx
  40b6ed:	mov    rax,QWORD PTR [rbp-0x30]
  40b6f1:	mov    DWORD PTR [rax],0x0
  40b6f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b6fb:	mov    rax,QWORD PTR [rax]
  40b6fe:	mov    edx,0x10
  40b703:	mov    esi,0x20
  40b708:	mov    rdi,rax
  40b70b:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  40b710:	mov    QWORD PTR [rbp-0x8],rax
  40b714:	cmp    QWORD PTR [rbp-0x8],0x0
  40b719:	je     40b768 <_start@@Base+0x6608>
  40b71b:	mov    rcx,QWORD PTR [rbp-0x8]
  40b71f:	mov    rdx,QWORD PTR [rbp-0x28]
  40b723:	mov    rsi,QWORD PTR [rbp-0x20]
  40b727:	mov    rax,QWORD PTR [rbp-0x18]
  40b72b:	mov    rdi,rax
  40b72e:	call   40af2b <_start@@Base+0x5dcb>
  40b733:	mov    QWORD PTR [rbp-0x20],rax
  40b737:	mov    rax,QWORD PTR [rbp-0x20]
  40b73b:	cmp    rax,QWORD PTR [rbp-0x28]
  40b73f:	je     40b769 <_start@@Base+0x6609>
  40b741:	mov    rax,QWORD PTR [rbp-0x18]
  40b745:	mov    rax,QWORD PTR [rax]
  40b748:	mov    rdi,rax
  40b74b:	call   41cd71 <flatcc_builder_end_struct@@Base>
  40b750:	mov    edx,eax
  40b752:	mov    rax,QWORD PTR [rbp-0x30]
  40b756:	mov    DWORD PTR [rax],edx
  40b758:	mov    rax,QWORD PTR [rbp-0x30]
  40b75c:	mov    eax,DWORD PTR [rax]
  40b75e:	test   eax,eax
  40b760:	je     40b769 <_start@@Base+0x6609>
  40b762:	mov    rax,QWORD PTR [rbp-0x20]
  40b766:	jmp    40b782 <_start@@Base+0x6622>
  40b768:	nop
  40b769:	mov    rdx,QWORD PTR [rbp-0x28]
  40b76d:	mov    rsi,QWORD PTR [rbp-0x20]
  40b771:	mov    rax,QWORD PTR [rbp-0x18]
  40b775:	mov    ecx,0x21
  40b77a:	mov    rdi,rax
  40b77d:	call   42665a <flatcc_json_parser_set_error@@Base>
  40b782:	leave  
  40b783:	ret    
  40b784:	push   rbp
  40b785:	mov    rbp,rsp
  40b788:	sub    rsp,0x50
  40b78c:	mov    QWORD PTR [rbp-0x38],rdi
  40b790:	mov    QWORD PTR [rbp-0x40],rsi
  40b794:	mov    QWORD PTR [rbp-0x48],rdx
  40b798:	mov    QWORD PTR [rbp-0x50],rcx
  40b79c:	mov    rax,QWORD PTR fs:0x28
  40b7a5:	mov    QWORD PTR [rbp-0x8],rax
  40b7a9:	xor    eax,eax
  40b7ab:	lea    rcx,[rbp-0x28]
  40b7af:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7b3:	mov    rsi,QWORD PTR [rbp-0x40]
  40b7b7:	mov    rax,QWORD PTR [rbp-0x38]
  40b7bb:	mov    rdi,rax
  40b7be:	call   405880 <_start@@Base+0x720>
  40b7c3:	mov    QWORD PTR [rbp-0x40],rax
  40b7c7:	jmp    40ba47 <_start@@Base+0x68e7>
  40b7cc:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7d0:	mov    rcx,QWORD PTR [rbp-0x40]
  40b7d4:	mov    rax,QWORD PTR [rbp-0x38]
  40b7d8:	mov    rsi,rcx
  40b7db:	mov    rdi,rax
  40b7de:	call   4055e5 <_start@@Base+0x485>
  40b7e3:	mov    QWORD PTR [rbp-0x40],rax
  40b7e7:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7eb:	mov    rax,QWORD PTR [rbp-0x40]
  40b7ef:	mov    rsi,rdx
  40b7f2:	mov    rdi,rax
  40b7f5:	call   405779 <_start@@Base+0x619>
  40b7fa:	mov    QWORD PTR [rbp-0x20],rax
  40b7fe:	movabs rax,0xffff000000000000
  40b808:	and    rax,QWORD PTR [rbp-0x20]
  40b80c:	mov    rdx,rax
  40b80f:	movabs rax,0x6964000000000000
  40b819:	cmp    rdx,rax
  40b81c:	jne    40b912 <_start@@Base+0x67b2>
  40b822:	mov    rax,QWORD PTR [rbp-0x40]
  40b826:	mov    QWORD PTR [rbp-0x18],rax
  40b82a:	mov    rdx,QWORD PTR [rbp-0x48]
  40b82e:	mov    rsi,QWORD PTR [rbp-0x18]
  40b832:	mov    rax,QWORD PTR [rbp-0x38]
  40b836:	mov    ecx,0x2
  40b83b:	mov    rdi,rax
  40b83e:	call   405c76 <_start@@Base+0xb16>
  40b843:	mov    QWORD PTR [rbp-0x40],rax
  40b847:	mov    rax,QWORD PTR [rbp-0x18]
  40b84b:	cmp    rax,QWORD PTR [rbp-0x40]
  40b84f:	je     40b8f2 <_start@@Base+0x6792>
  40b855:	mov    DWORD PTR [rbp-0x24],0x0
  40b85c:	mov    rax,QWORD PTR [rbp-0x50]
  40b860:	mov    QWORD PTR [rbp-0x10],rax
  40b864:	mov    rax,QWORD PTR [rbp-0x40]
  40b868:	mov    QWORD PTR [rbp-0x18],rax
  40b86c:	lea    rcx,[rbp-0x24]
  40b870:	mov    rdx,QWORD PTR [rbp-0x48]
  40b874:	mov    rsi,QWORD PTR [rbp-0x18]
  40b878:	mov    rax,QWORD PTR [rbp-0x38]
  40b87c:	mov    rdi,rax
  40b87f:	call   40644c <_start@@Base+0x12ec>
  40b884:	mov    QWORD PTR [rbp-0x40],rax
  40b888:	mov    rax,QWORD PTR [rbp-0x18]
  40b88c:	cmp    rax,QWORD PTR [rbp-0x40]
  40b890:	jne    40b8dc <_start@@Base+0x677c>
  40b892:	mov    rax,QWORD PTR [rbp-0x40]
  40b896:	mov    QWORD PTR [rbp-0x18],rax
  40b89a:	lea    rcx,[rbp-0x24]
  40b89e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8a2:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8a6:	mov    rax,QWORD PTR [rbp-0x38]
  40b8aa:	mov    r8,rcx
  40b8ad:	lea    rcx,[rip+0x3aa2c]        # 4462e0 <__data_start@@Base+0x220>
  40b8b4:	mov    rdi,rax
  40b8b7:	call   406c06 <_start@@Base+0x1aa6>
  40b8bc:	mov    QWORD PTR [rbp-0x40],rax
  40b8c0:	mov    rax,QWORD PTR [rbp-0x40]
  40b8c4:	cmp    rax,QWORD PTR [rbp-0x18]
  40b8c8:	je     40ba58 <_start@@Base+0x68f8>
  40b8ce:	mov    rax,QWORD PTR [rbp-0x40]
  40b8d2:	cmp    rax,QWORD PTR [rbp-0x48]
  40b8d6:	je     40ba58 <_start@@Base+0x68f8>
  40b8dc:	mov    edx,DWORD PTR [rbp-0x24]
  40b8df:	mov    rax,QWORD PTR [rbp-0x10]
  40b8e3:	mov    esi,edx
  40b8e5:	mov    rdi,rax
  40b8e8:	call   4052e1 <_start@@Base+0x181>
  40b8ed:	jmp    40ba2b <_start@@Base+0x68cb>
  40b8f2:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8f6:	mov    rcx,QWORD PTR [rbp-0x40]
  40b8fa:	mov    rax,QWORD PTR [rbp-0x38]
  40b8fe:	mov    rsi,rcx
  40b901:	mov    rdi,rax
  40b904:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40b909:	mov    QWORD PTR [rbp-0x40],rax
  40b90d:	jmp    40ba2b <_start@@Base+0x68cb>
  40b912:	movabs rax,0x64697374616e6365
  40b91c:	cmp    QWORD PTR [rbp-0x20],rax
  40b920:	jne    40ba10 <_start@@Base+0x68b0>
  40b926:	mov    rax,QWORD PTR [rbp-0x40]
  40b92a:	mov    QWORD PTR [rbp-0x18],rax
  40b92e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b932:	mov    rsi,QWORD PTR [rbp-0x18]
  40b936:	mov    rax,QWORD PTR [rbp-0x38]
  40b93a:	mov    ecx,0x8
  40b93f:	mov    rdi,rax
  40b942:	call   405c76 <_start@@Base+0xb16>
  40b947:	mov    QWORD PTR [rbp-0x40],rax
  40b94b:	mov    rax,QWORD PTR [rbp-0x18]
  40b94f:	cmp    rax,QWORD PTR [rbp-0x40]
  40b953:	je     40b9f3 <_start@@Base+0x6893>
  40b959:	mov    DWORD PTR [rbp-0x24],0x0
  40b960:	mov    rax,QWORD PTR [rbp-0x50]
  40b964:	add    rax,0x4
  40b968:	mov    QWORD PTR [rbp-0x10],rax
  40b96c:	mov    rax,QWORD PTR [rbp-0x40]
  40b970:	mov    QWORD PTR [rbp-0x18],rax
  40b974:	lea    rcx,[rbp-0x24]
  40b978:	mov    rdx,QWORD PTR [rbp-0x48]
  40b97c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b980:	mov    rax,QWORD PTR [rbp-0x38]
  40b984:	mov    rdi,rax
  40b987:	call   40644c <_start@@Base+0x12ec>
  40b98c:	mov    QWORD PTR [rbp-0x40],rax
  40b990:	mov    rax,QWORD PTR [rbp-0x18]
  40b994:	cmp    rax,QWORD PTR [rbp-0x40]
  40b998:	jne    40b9e0 <_start@@Base+0x6880>
  40b99a:	mov    rax,QWORD PTR [rbp-0x40]
  40b99e:	mov    QWORD PTR [rbp-0x18],rax
  40b9a2:	lea    rcx,[rbp-0x24]
  40b9a6:	mov    rdx,QWORD PTR [rbp-0x48]
  40b9aa:	mov    rsi,QWORD PTR [rbp-0x18]
  40b9ae:	mov    rax,QWORD PTR [rbp-0x38]
  40b9b2:	mov    r8,rcx
  40b9b5:	lea    rcx,[rip+0x3a944]        # 446300 <__data_start@@Base+0x240>
  40b9bc:	mov    rdi,rax
  40b9bf:	call   406c06 <_start@@Base+0x1aa6>
  40b9c4:	mov    QWORD PTR [rbp-0x40],rax
  40b9c8:	mov    rax,QWORD PTR [rbp-0x40]
  40b9cc:	cmp    rax,QWORD PTR [rbp-0x18]
  40b9d0:	je     40ba58 <_start@@Base+0x68f8>
  40b9d6:	mov    rax,QWORD PTR [rbp-0x40]
  40b9da:	cmp    rax,QWORD PTR [rbp-0x48]
  40b9de:	je     40ba58 <_start@@Base+0x68f8>
  40b9e0:	mov    edx,DWORD PTR [rbp-0x24]
  40b9e3:	mov    rax,QWORD PTR [rbp-0x10]
  40b9e7:	mov    esi,edx
  40b9e9:	mov    rdi,rax
  40b9ec:	call   4052e1 <_start@@Base+0x181>
  40b9f1:	jmp    40ba2b <_start@@Base+0x68cb>
  40b9f3:	mov    rdx,QWORD PTR [rbp-0x48]
  40b9f7:	mov    rcx,QWORD PTR [rbp-0x40]
  40b9fb:	mov    rax,QWORD PTR [rbp-0x38]
  40b9ff:	mov    rsi,rcx
  40ba02:	mov    rdi,rax
  40ba05:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ba0a:	mov    QWORD PTR [rbp-0x40],rax
  40ba0e:	jmp    40ba2b <_start@@Base+0x68cb>
  40ba10:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba14:	mov    rcx,QWORD PTR [rbp-0x40]
  40ba18:	mov    rax,QWORD PTR [rbp-0x38]
  40ba1c:	mov    rsi,rcx
  40ba1f:	mov    rdi,rax
  40ba22:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ba27:	mov    QWORD PTR [rbp-0x40],rax
  40ba2b:	lea    rcx,[rbp-0x28]
  40ba2f:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba33:	mov    rsi,QWORD PTR [rbp-0x40]
  40ba37:	mov    rax,QWORD PTR [rbp-0x38]
  40ba3b:	mov    rdi,rax
  40ba3e:	call   40593d <_start@@Base+0x7dd>
  40ba43:	mov    QWORD PTR [rbp-0x40],rax
  40ba47:	mov    eax,DWORD PTR [rbp-0x28]
  40ba4a:	test   eax,eax
  40ba4c:	jne    40b7cc <_start@@Base+0x666c>
  40ba52:	mov    rax,QWORD PTR [rbp-0x40]
  40ba56:	jmp    40ba71 <_start@@Base+0x6911>
  40ba58:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba5c:	mov    rsi,QWORD PTR [rbp-0x40]
  40ba60:	mov    rax,QWORD PTR [rbp-0x38]
  40ba64:	mov    ecx,0x21
  40ba69:	mov    rdi,rax
  40ba6c:	call   42665a <flatcc_json_parser_set_error@@Base>
  40ba71:	mov    rdi,QWORD PTR [rbp-0x8]
  40ba75:	xor    rdi,QWORD PTR fs:0x28
  40ba7e:	je     40ba85 <_start@@Base+0x6925>
  40ba80:	call   405070 <__stack_chk_fail@plt>
  40ba85:	leave  
  40ba86:	ret    
  40ba87:	push   rbp
  40ba88:	mov    rbp,rsp
  40ba8b:	sub    rsp,0x30
  40ba8f:	mov    QWORD PTR [rbp-0x18],rdi
  40ba93:	mov    QWORD PTR [rbp-0x20],rsi
  40ba97:	mov    QWORD PTR [rbp-0x28],rdx
  40ba9b:	mov    QWORD PTR [rbp-0x30],rcx
  40ba9f:	mov    rax,QWORD PTR [rbp-0x30]
  40baa3:	mov    DWORD PTR [rax],0x0
  40baa9:	mov    rax,QWORD PTR [rbp-0x18]
  40baad:	mov    rax,QWORD PTR [rax]
  40bab0:	mov    edx,0x4
  40bab5:	mov    esi,0x8
  40baba:	mov    rdi,rax
  40babd:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  40bac2:	mov    QWORD PTR [rbp-0x8],rax
  40bac6:	cmp    QWORD PTR [rbp-0x8],0x0
  40bacb:	je     40bb1a <_start@@Base+0x69ba>
  40bacd:	mov    rcx,QWORD PTR [rbp-0x8]
  40bad1:	mov    rdx,QWORD PTR [rbp-0x28]
  40bad5:	mov    rsi,QWORD PTR [rbp-0x20]
  40bad9:	mov    rax,QWORD PTR [rbp-0x18]
  40badd:	mov    rdi,rax
  40bae0:	call   40b784 <_start@@Base+0x6624>
  40bae5:	mov    QWORD PTR [rbp-0x20],rax
  40bae9:	mov    rax,QWORD PTR [rbp-0x20]
  40baed:	cmp    rax,QWORD PTR [rbp-0x28]
  40baf1:	je     40bb1b <_start@@Base+0x69bb>
  40baf3:	mov    rax,QWORD PTR [rbp-0x18]
  40baf7:	mov    rax,QWORD PTR [rax]
  40bafa:	mov    rdi,rax
  40bafd:	call   41cd71 <flatcc_builder_end_struct@@Base>
  40bb02:	mov    edx,eax
  40bb04:	mov    rax,QWORD PTR [rbp-0x30]
  40bb08:	mov    DWORD PTR [rax],edx
  40bb0a:	mov    rax,QWORD PTR [rbp-0x30]
  40bb0e:	mov    eax,DWORD PTR [rax]
  40bb10:	test   eax,eax
  40bb12:	je     40bb1b <_start@@Base+0x69bb>
  40bb14:	mov    rax,QWORD PTR [rbp-0x20]
  40bb18:	jmp    40bb34 <_start@@Base+0x69d4>
  40bb1a:	nop
  40bb1b:	mov    rdx,QWORD PTR [rbp-0x28]
  40bb1f:	mov    rsi,QWORD PTR [rbp-0x20]
  40bb23:	mov    rax,QWORD PTR [rbp-0x18]
  40bb27:	mov    ecx,0x21
  40bb2c:	mov    rdi,rax
  40bb2f:	call   42665a <flatcc_json_parser_set_error@@Base>
  40bb34:	leave  
  40bb35:	ret    
  40bb36:	push   rbp
  40bb37:	mov    rbp,rsp
  40bb3a:	sub    rsp,0x60
  40bb3e:	mov    QWORD PTR [rbp-0x48],rdi
  40bb42:	mov    QWORD PTR [rbp-0x50],rsi
  40bb46:	mov    QWORD PTR [rbp-0x58],rdx
  40bb4a:	mov    QWORD PTR [rbp-0x60],rcx
  40bb4e:	mov    rax,QWORD PTR fs:0x28
  40bb57:	mov    QWORD PTR [rbp-0x8],rax
  40bb5b:	xor    eax,eax
  40bb5d:	mov    rax,QWORD PTR [rbp-0x60]
  40bb61:	mov    DWORD PTR [rax],0x0
  40bb67:	mov    rax,QWORD PTR [rbp-0x48]
  40bb6b:	mov    rax,QWORD PTR [rax]
  40bb6e:	mov    esi,0x3
  40bb73:	mov    rdi,rax
  40bb76:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40bb7b:	test   eax,eax
  40bb7d:	jne    40bfed <_start@@Base+0x6e8d>
  40bb83:	lea    rcx,[rbp-0x38]
  40bb87:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb8b:	mov    rsi,QWORD PTR [rbp-0x50]
  40bb8f:	mov    rax,QWORD PTR [rbp-0x48]
  40bb93:	mov    rdi,rax
  40bb96:	call   405880 <_start@@Base+0x720>
  40bb9b:	mov    QWORD PTR [rbp-0x50],rax
  40bb9f:	jmp    40bfb0 <_start@@Base+0x6e50>
  40bba4:	mov    rdx,QWORD PTR [rbp-0x58]
  40bba8:	mov    rcx,QWORD PTR [rbp-0x50]
  40bbac:	mov    rax,QWORD PTR [rbp-0x48]
  40bbb0:	mov    rsi,rcx
  40bbb3:	mov    rdi,rax
  40bbb6:	call   4055e5 <_start@@Base+0x485>
  40bbbb:	mov    QWORD PTR [rbp-0x50],rax
  40bbbf:	mov    rdx,QWORD PTR [rbp-0x58]
  40bbc3:	mov    rax,QWORD PTR [rbp-0x50]
  40bbc7:	mov    rsi,rdx
  40bbca:	mov    rdi,rax
  40bbcd:	call   405779 <_start@@Base+0x619>
  40bbd2:	mov    QWORD PTR [rbp-0x28],rax
  40bbd6:	movabs rax,0x6963ffffffffffff
  40bbe0:	cmp    QWORD PTR [rbp-0x28],rax
  40bbe4:	ja     40bd5d <_start@@Base+0x6bfd>
  40bbea:	mov    rax,QWORD PTR [rbp-0x28]
  40bbee:	and    rax,0xffffffffff000000
  40bbf4:	mov    rdx,rax
  40bbf7:	movabs rax,0x636f756e74000000
  40bc01:	cmp    rdx,rax
  40bc04:	jne    40bd3d <_start@@Base+0x6bdd>
  40bc0a:	mov    rax,QWORD PTR [rbp-0x50]
  40bc0e:	mov    QWORD PTR [rbp-0x20],rax
  40bc12:	mov    rdx,QWORD PTR [rbp-0x58]
  40bc16:	mov    rsi,QWORD PTR [rbp-0x20]
  40bc1a:	mov    rax,QWORD PTR [rbp-0x48]
  40bc1e:	mov    ecx,0x5
  40bc23:	mov    rdi,rax
  40bc26:	call   405c76 <_start@@Base+0xb16>
  40bc2b:	mov    QWORD PTR [rbp-0x50],rax
  40bc2f:	mov    rax,QWORD PTR [rbp-0x20]
  40bc33:	cmp    rax,QWORD PTR [rbp-0x50]
  40bc37:	je     40bd1d <_start@@Base+0x6bbd>
  40bc3d:	mov    WORD PTR [rbp-0x30],0x0
  40bc43:	mov    rax,QWORD PTR [rbp-0x50]
  40bc47:	mov    QWORD PTR [rbp-0x20],rax
  40bc4b:	lea    rcx,[rbp-0x30]
  40bc4f:	mov    rdx,QWORD PTR [rbp-0x58]
  40bc53:	mov    rsi,QWORD PTR [rbp-0x20]
  40bc57:	mov    rax,QWORD PTR [rbp-0x48]
  40bc5b:	mov    rdi,rax
  40bc5e:	call   406512 <_start@@Base+0x13b2>
  40bc63:	mov    QWORD PTR [rbp-0x50],rax
  40bc67:	mov    rax,QWORD PTR [rbp-0x20]
  40bc6b:	cmp    rax,QWORD PTR [rbp-0x50]
  40bc6f:	jne    40bcbb <_start@@Base+0x6b5b>
  40bc71:	mov    rax,QWORD PTR [rbp-0x50]
  40bc75:	mov    QWORD PTR [rbp-0x20],rax
  40bc79:	lea    rcx,[rbp-0x30]
  40bc7d:	mov    rdx,QWORD PTR [rbp-0x58]
  40bc81:	mov    rsi,QWORD PTR [rbp-0x20]
  40bc85:	mov    rax,QWORD PTR [rbp-0x48]
  40bc89:	mov    r8,rcx
  40bc8c:	lea    rcx,[rip+0x3a68d]        # 446320 <__data_start@@Base+0x260>
  40bc93:	mov    rdi,rax
  40bc96:	call   406d5f <_start@@Base+0x1bff>
  40bc9b:	mov    QWORD PTR [rbp-0x50],rax
  40bc9f:	mov    rax,QWORD PTR [rbp-0x50]
  40bca3:	cmp    rax,QWORD PTR [rbp-0x20]
  40bca7:	je     40bffa <_start@@Base+0x6e9a>
  40bcad:	mov    rax,QWORD PTR [rbp-0x50]
  40bcb1:	cmp    rax,QWORD PTR [rbp-0x58]
  40bcb5:	je     40bffa <_start@@Base+0x6e9a>
  40bcbb:	movzx  eax,WORD PTR [rbp-0x30]
  40bcbf:	test   ax,ax
  40bcc2:	jne    40bcd6 <_start@@Base+0x6b76>
  40bcc4:	mov    rax,QWORD PTR [rbp-0x48]
  40bcc8:	mov    eax,DWORD PTR [rax+0x10]
  40bccb:	and    eax,0x2
  40bcce:	test   eax,eax
  40bcd0:	je     40bf94 <_start@@Base+0x6e34>
  40bcd6:	mov    rax,QWORD PTR [rbp-0x48]
  40bcda:	mov    rax,QWORD PTR [rax]
  40bcdd:	mov    ecx,0x2
  40bce2:	mov    edx,0x2
  40bce7:	mov    esi,0x2
  40bcec:	mov    rdi,rax
  40bcef:	call   41f93b <flatcc_builder_table_add@@Base>
  40bcf4:	mov    QWORD PTR [rbp-0x18],rax
  40bcf8:	cmp    QWORD PTR [rbp-0x18],0x0
  40bcfd:	je     40bff0 <_start@@Base+0x6e90>
  40bd03:	movzx  eax,WORD PTR [rbp-0x30]
  40bd07:	movzx  edx,ax
  40bd0a:	mov    rax,QWORD PTR [rbp-0x18]
  40bd0e:	mov    esi,edx
  40bd10:	mov    rdi,rax
  40bd13:	call   4052ac <_start@@Base+0x14c>
  40bd18:	jmp    40bf94 <_start@@Base+0x6e34>
  40bd1d:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd21:	mov    rcx,QWORD PTR [rbp-0x50]
  40bd25:	mov    rax,QWORD PTR [rbp-0x48]
  40bd29:	mov    rsi,rcx
  40bd2c:	mov    rdi,rax
  40bd2f:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40bd34:	mov    QWORD PTR [rbp-0x50],rax
  40bd38:	jmp    40bf94 <_start@@Base+0x6e34>
  40bd3d:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd41:	mov    rcx,QWORD PTR [rbp-0x50]
  40bd45:	mov    rax,QWORD PTR [rbp-0x48]
  40bd49:	mov    rsi,rcx
  40bd4c:	mov    rdi,rax
  40bd4f:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40bd54:	mov    QWORD PTR [rbp-0x50],rax
  40bd58:	jmp    40bf94 <_start@@Base+0x6e34>
  40bd5d:	movabs rax,0xffffff0000000000
  40bd67:	and    rax,QWORD PTR [rbp-0x28]
  40bd6b:	mov    rdx,rax
  40bd6e:	movabs rax,0x76616c0000000000
  40bd78:	cmp    rdx,rax
  40bd7b:	jne    40beb4 <_start@@Base+0x6d54>
  40bd81:	mov    rax,QWORD PTR [rbp-0x50]
  40bd85:	mov    QWORD PTR [rbp-0x20],rax
  40bd89:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd8d:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd91:	mov    rax,QWORD PTR [rbp-0x48]
  40bd95:	mov    ecx,0x3
  40bd9a:	mov    rdi,rax
  40bd9d:	call   405c76 <_start@@Base+0xb16>
  40bda2:	mov    QWORD PTR [rbp-0x50],rax
  40bda6:	mov    rax,QWORD PTR [rbp-0x20]
  40bdaa:	cmp    rax,QWORD PTR [rbp-0x50]
  40bdae:	je     40be94 <_start@@Base+0x6d34>
  40bdb4:	mov    QWORD PTR [rbp-0x30],0x0
  40bdbc:	mov    rax,QWORD PTR [rbp-0x50]
  40bdc0:	mov    QWORD PTR [rbp-0x20],rax
  40bdc4:	lea    rcx,[rbp-0x30]
  40bdc8:	mov    rdx,QWORD PTR [rbp-0x58]
  40bdcc:	mov    rsi,QWORD PTR [rbp-0x20]
  40bdd0:	mov    rax,QWORD PTR [rbp-0x48]
  40bdd4:	mov    rdi,rax
  40bdd7:	call   40669a <_start@@Base+0x153a>
  40bddc:	mov    QWORD PTR [rbp-0x50],rax
  40bde0:	mov    rax,QWORD PTR [rbp-0x20]
  40bde4:	cmp    rax,QWORD PTR [rbp-0x50]
  40bde8:	jne    40be34 <_start@@Base+0x6cd4>
  40bdea:	mov    rax,QWORD PTR [rbp-0x50]
  40bdee:	mov    QWORD PTR [rbp-0x20],rax
  40bdf2:	lea    rcx,[rbp-0x30]
  40bdf6:	mov    rdx,QWORD PTR [rbp-0x58]
  40bdfa:	mov    rsi,QWORD PTR [rbp-0x20]
  40bdfe:	mov    rax,QWORD PTR [rbp-0x48]
  40be02:	mov    r8,rcx
  40be05:	lea    rcx,[rip+0x3a534]        # 446340 <__data_start@@Base+0x280>
  40be0c:	mov    rdi,rax
  40be0f:	call   40700e <_start@@Base+0x1eae>
  40be14:	mov    QWORD PTR [rbp-0x50],rax
  40be18:	mov    rax,QWORD PTR [rbp-0x50]
  40be1c:	cmp    rax,QWORD PTR [rbp-0x20]
  40be20:	je     40bffa <_start@@Base+0x6e9a>
  40be26:	mov    rax,QWORD PTR [rbp-0x50]
  40be2a:	cmp    rax,QWORD PTR [rbp-0x58]
  40be2e:	je     40bffa <_start@@Base+0x6e9a>
  40be34:	mov    rax,QWORD PTR [rbp-0x30]
  40be38:	test   rax,rax
  40be3b:	jne    40be4f <_start@@Base+0x6cef>
  40be3d:	mov    rax,QWORD PTR [rbp-0x48]
  40be41:	mov    eax,DWORD PTR [rax+0x10]
  40be44:	and    eax,0x2
  40be47:	test   eax,eax
  40be49:	je     40bf94 <_start@@Base+0x6e34>
  40be4f:	mov    rax,QWORD PTR [rbp-0x48]
  40be53:	mov    rax,QWORD PTR [rax]
  40be56:	mov    ecx,0x8
  40be5b:	mov    edx,0x8
  40be60:	mov    esi,0x1
  40be65:	mov    rdi,rax
  40be68:	call   41f93b <flatcc_builder_table_add@@Base>
  40be6d:	mov    QWORD PTR [rbp-0x18],rax
  40be71:	cmp    QWORD PTR [rbp-0x18],0x0
  40be76:	je     40bff3 <_start@@Base+0x6e93>
  40be7c:	mov    rdx,QWORD PTR [rbp-0x30]
  40be80:	mov    rax,QWORD PTR [rbp-0x18]
  40be84:	mov    rsi,rdx
  40be87:	mov    rdi,rax
  40be8a:	call   4053e9 <_start@@Base+0x289>
  40be8f:	jmp    40bf94 <_start@@Base+0x6e34>
  40be94:	mov    rdx,QWORD PTR [rbp-0x58]
  40be98:	mov    rcx,QWORD PTR [rbp-0x50]
  40be9c:	mov    rax,QWORD PTR [rbp-0x48]
  40bea0:	mov    rsi,rcx
  40bea3:	mov    rdi,rax
  40bea6:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40beab:	mov    QWORD PTR [rbp-0x50],rax
  40beaf:	jmp    40bf94 <_start@@Base+0x6e34>
  40beb4:	movabs rax,0xffff000000000000
  40bebe:	and    rax,QWORD PTR [rbp-0x28]
  40bec2:	mov    rdx,rax
  40bec5:	movabs rax,0x6964000000000000
  40becf:	cmp    rdx,rax
  40bed2:	jne    40bf79 <_start@@Base+0x6e19>
  40bed8:	mov    rax,QWORD PTR [rbp-0x50]
  40bedc:	mov    QWORD PTR [rbp-0x20],rax
  40bee0:	mov    rdx,QWORD PTR [rbp-0x58]
  40bee4:	mov    rsi,QWORD PTR [rbp-0x20]
  40bee8:	mov    rax,QWORD PTR [rbp-0x48]
  40beec:	mov    ecx,0x2
  40bef1:	mov    rdi,rax
  40bef4:	call   405c76 <_start@@Base+0xb16>
  40bef9:	mov    QWORD PTR [rbp-0x50],rax
  40befd:	mov    rax,QWORD PTR [rbp-0x20]
  40bf01:	cmp    rax,QWORD PTR [rbp-0x50]
  40bf05:	je     40bf5c <_start@@Base+0x6dfc>
  40bf07:	lea    rcx,[rbp-0x34]
  40bf0b:	mov    rdx,QWORD PTR [rbp-0x58]
  40bf0f:	mov    rsi,QWORD PTR [rbp-0x50]
  40bf13:	mov    rax,QWORD PTR [rbp-0x48]
  40bf17:	mov    rdi,rax
  40bf1a:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40bf1f:	mov    QWORD PTR [rbp-0x50],rax
  40bf23:	mov    eax,DWORD PTR [rbp-0x34]
  40bf26:	test   eax,eax
  40bf28:	je     40bffa <_start@@Base+0x6e9a>
  40bf2e:	mov    rax,QWORD PTR [rbp-0x48]
  40bf32:	mov    rax,QWORD PTR [rax]
  40bf35:	mov    esi,0x0
  40bf3a:	mov    rdi,rax
  40bf3d:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40bf42:	mov    QWORD PTR [rbp-0x10],rax
  40bf46:	cmp    QWORD PTR [rbp-0x10],0x0
  40bf4b:	je     40bffa <_start@@Base+0x6e9a>
  40bf51:	mov    edx,DWORD PTR [rbp-0x34]
  40bf54:	mov    rax,QWORD PTR [rbp-0x10]
  40bf58:	mov    DWORD PTR [rax],edx
  40bf5a:	jmp    40bf94 <_start@@Base+0x6e34>
  40bf5c:	mov    rdx,QWORD PTR [rbp-0x58]
  40bf60:	mov    rcx,QWORD PTR [rbp-0x50]
  40bf64:	mov    rax,QWORD PTR [rbp-0x48]
  40bf68:	mov    rsi,rcx
  40bf6b:	mov    rdi,rax
  40bf6e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40bf73:	mov    QWORD PTR [rbp-0x50],rax
  40bf77:	jmp    40bf94 <_start@@Base+0x6e34>
  40bf79:	mov    rdx,QWORD PTR [rbp-0x58]
  40bf7d:	mov    rcx,QWORD PTR [rbp-0x50]
  40bf81:	mov    rax,QWORD PTR [rbp-0x48]
  40bf85:	mov    rsi,rcx
  40bf88:	mov    rdi,rax
  40bf8b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40bf90:	mov    QWORD PTR [rbp-0x50],rax
  40bf94:	lea    rcx,[rbp-0x38]
  40bf98:	mov    rdx,QWORD PTR [rbp-0x58]
  40bf9c:	mov    rsi,QWORD PTR [rbp-0x50]
  40bfa0:	mov    rax,QWORD PTR [rbp-0x48]
  40bfa4:	mov    rdi,rax
  40bfa7:	call   40593d <_start@@Base+0x7dd>
  40bfac:	mov    QWORD PTR [rbp-0x50],rax
  40bfb0:	mov    eax,DWORD PTR [rbp-0x38]
  40bfb3:	test   eax,eax
  40bfb5:	jne    40bba4 <_start@@Base+0x6a44>
  40bfbb:	mov    rax,QWORD PTR [rbp-0x48]
  40bfbf:	mov    eax,DWORD PTR [rax+0x20]
  40bfc2:	test   eax,eax
  40bfc4:	jne    40bff6 <_start@@Base+0x6e96>
  40bfc6:	mov    rax,QWORD PTR [rbp-0x48]
  40bfca:	mov    rax,QWORD PTR [rax]
  40bfcd:	mov    rdi,rax
  40bfd0:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40bfd5:	mov    edx,eax
  40bfd7:	mov    rax,QWORD PTR [rbp-0x60]
  40bfdb:	mov    DWORD PTR [rax],edx
  40bfdd:	mov    rax,QWORD PTR [rbp-0x60]
  40bfe1:	mov    eax,DWORD PTR [rax]
  40bfe3:	test   eax,eax
  40bfe5:	je     40bff9 <_start@@Base+0x6e99>
  40bfe7:	mov    rax,QWORD PTR [rbp-0x50]
  40bfeb:	jmp    40c013 <_start@@Base+0x6eb3>
  40bfed:	nop
  40bfee:	jmp    40bffa <_start@@Base+0x6e9a>
  40bff0:	nop
  40bff1:	jmp    40bffa <_start@@Base+0x6e9a>
  40bff3:	nop
  40bff4:	jmp    40bffa <_start@@Base+0x6e9a>
  40bff6:	nop
  40bff7:	jmp    40bffa <_start@@Base+0x6e9a>
  40bff9:	nop
  40bffa:	mov    rdx,QWORD PTR [rbp-0x58]
  40bffe:	mov    rsi,QWORD PTR [rbp-0x50]
  40c002:	mov    rax,QWORD PTR [rbp-0x48]
  40c006:	mov    ecx,0x21
  40c00b:	mov    rdi,rax
  40c00e:	call   42665a <flatcc_json_parser_set_error@@Base>
  40c013:	mov    rdi,QWORD PTR [rbp-0x8]
  40c017:	xor    rdi,QWORD PTR fs:0x28
  40c020:	je     40c027 <_start@@Base+0x6ec7>
  40c022:	call   405070 <__stack_chk_fail@plt>
  40c027:	leave  
  40c028:	ret    
  40c029:	push   rbp
  40c02a:	mov    rbp,rsp
  40c02d:	sub    rsp,0x50
  40c031:	mov    QWORD PTR [rbp-0x38],rdi
  40c035:	mov    QWORD PTR [rbp-0x40],rsi
  40c039:	mov    QWORD PTR [rbp-0x48],rdx
  40c03d:	mov    QWORD PTR [rbp-0x50],rcx
  40c041:	mov    rax,QWORD PTR fs:0x28
  40c04a:	mov    QWORD PTR [rbp-0x8],rax
  40c04e:	xor    eax,eax
  40c050:	mov    rax,QWORD PTR [rbp-0x50]
  40c054:	mov    DWORD PTR [rax],0x0
  40c05a:	mov    rax,QWORD PTR [rbp-0x38]
  40c05e:	mov    rax,QWORD PTR [rax]
  40c061:	mov    esi,0x4
  40c066:	mov    rdi,rax
  40c069:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40c06e:	test   eax,eax
  40c070:	jne    40c4a5 <_start@@Base+0x7345>
  40c076:	lea    rcx,[rbp-0x28]
  40c07a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c07e:	mov    rsi,QWORD PTR [rbp-0x40]
  40c082:	mov    rax,QWORD PTR [rbp-0x38]
  40c086:	mov    r8,rcx
  40c089:	mov    ecx,0x1
  40c08e:	mov    rdi,rax
  40c091:	call   428304 <flatcc_json_parser_prepare_unions@@Base>
  40c096:	cmp    rax,QWORD PTR [rbp-0x48]
  40c09a:	je     40c4a8 <_start@@Base+0x7348>
  40c0a0:	lea    rcx,[rbp-0x30]
  40c0a4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0a8:	mov    rsi,QWORD PTR [rbp-0x40]
  40c0ac:	mov    rax,QWORD PTR [rbp-0x38]
  40c0b0:	mov    rdi,rax
  40c0b3:	call   405880 <_start@@Base+0x720>
  40c0b8:	mov    QWORD PTR [rbp-0x40],rax
  40c0bc:	jmp    40c44c <_start@@Base+0x72ec>
  40c0c1:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0c5:	mov    rcx,QWORD PTR [rbp-0x40]
  40c0c9:	mov    rax,QWORD PTR [rbp-0x38]
  40c0cd:	mov    rsi,rcx
  40c0d0:	mov    rdi,rax
  40c0d3:	call   4055e5 <_start@@Base+0x485>
  40c0d8:	mov    QWORD PTR [rbp-0x40],rax
  40c0dc:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0e0:	mov    rax,QWORD PTR [rbp-0x40]
  40c0e4:	mov    rsi,rdx
  40c0e7:	mov    rdi,rax
  40c0ea:	call   405779 <_start@@Base+0x619>
  40c0ef:	mov    QWORD PTR [rbp-0x20],rax
  40c0f3:	movabs rax,0x6d616e79616e795f
  40c0fd:	cmp    QWORD PTR [rbp-0x20],rax
  40c101:	jne    40c205 <_start@@Base+0x70a5>
  40c107:	add    QWORD PTR [rbp-0x40],0x8
  40c10c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c110:	mov    rax,QWORD PTR [rbp-0x40]
  40c114:	mov    rsi,rdx
  40c117:	mov    rdi,rax
  40c11a:	call   405779 <_start@@Base+0x619>
  40c11f:	mov    QWORD PTR [rbp-0x20],rax
  40c123:	movabs rax,0xffffffff00000000
  40c12d:	and    rax,QWORD PTR [rbp-0x20]
  40c131:	mov    rdx,rax
  40c134:	movabs rax,0x7479706500000000
  40c13e:	cmp    rdx,rax
  40c141:	jne    40c1e5 <_start@@Base+0x7085>
  40c147:	mov    rax,QWORD PTR [rbp-0x40]
  40c14b:	mov    QWORD PTR [rbp-0x18],rax
  40c14f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c153:	mov    rsi,QWORD PTR [rbp-0x18]
  40c157:	mov    rax,QWORD PTR [rbp-0x38]
  40c15b:	mov    ecx,0x4
  40c160:	mov    rdi,rax
  40c163:	call   405c76 <_start@@Base+0xb16>
  40c168:	mov    QWORD PTR [rbp-0x40],rax
  40c16c:	mov    rax,QWORD PTR [rbp-0x18]
  40c170:	cmp    rax,QWORD PTR [rbp-0x40]
  40c174:	je     40c1c5 <_start@@Base+0x7065>
  40c176:	mov    rdi,QWORD PTR [rbp-0x28]
  40c17a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c17e:	mov    rsi,QWORD PTR [rbp-0x40]
  40c182:	mov    rax,QWORD PTR [rbp-0x38]
  40c186:	sub    rsp,0x8
  40c18a:	lea    rcx,[rip+0xffffffffffffd1b1]        # 409342 <_start@@Base+0x41e2>
  40c191:	push   rcx
  40c192:	lea    rcx,[rip+0xffffffffffffd03d]        # 4091d6 <_start@@Base+0x4076>
  40c199:	push   rcx
  40c19a:	lea    rcx,[rip+0x3a1bf]        # 446360 <__data_start@@Base+0x2a0>
  40c1a1:	push   rcx
  40c1a2:	mov    r9,rdi
  40c1a5:	mov    r8d,0x3
  40c1ab:	mov    ecx,0x0
  40c1b0:	mov    rdi,rax
  40c1b3:	call   428bbc <flatcc_json_parser_union_type_vector@@Base>
  40c1b8:	add    rsp,0x20
  40c1bc:	mov    QWORD PTR [rbp-0x40],rax
  40c1c0:	jmp    40c430 <_start@@Base+0x72d0>
  40c1c5:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1c9:	mov    rcx,QWORD PTR [rbp-0x40]
  40c1cd:	mov    rax,QWORD PTR [rbp-0x38]
  40c1d1:	mov    rsi,rcx
  40c1d4:	mov    rdi,rax
  40c1d7:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c1dc:	mov    QWORD PTR [rbp-0x40],rax
  40c1e0:	jmp    40c430 <_start@@Base+0x72d0>
  40c1e5:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1e9:	mov    rcx,QWORD PTR [rbp-0x40]
  40c1ed:	mov    rax,QWORD PTR [rbp-0x38]
  40c1f1:	mov    rsi,rcx
  40c1f4:	mov    rdi,rax
  40c1f7:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c1fc:	mov    QWORD PTR [rbp-0x40],rax
  40c200:	jmp    40c430 <_start@@Base+0x72d0>
  40c205:	mov    rax,QWORD PTR [rbp-0x20]
  40c209:	mov    al,0x0
  40c20b:	mov    rdx,rax
  40c20e:	movabs rax,0x6d616e79616e7900
  40c218:	cmp    rdx,rax
  40c21b:	jne    40c28b <_start@@Base+0x712b>
  40c21d:	mov    rax,QWORD PTR [rbp-0x40]
  40c221:	mov    QWORD PTR [rbp-0x18],rax
  40c225:	mov    rdx,QWORD PTR [rbp-0x48]
  40c229:	mov    rsi,QWORD PTR [rbp-0x18]
  40c22d:	mov    rax,QWORD PTR [rbp-0x38]
  40c231:	mov    ecx,0x7
  40c236:	mov    rdi,rax
  40c239:	call   405c76 <_start@@Base+0xb16>
  40c23e:	mov    QWORD PTR [rbp-0x40],rax
  40c242:	mov    rax,QWORD PTR [rbp-0x18]
  40c246:	cmp    rax,QWORD PTR [rbp-0x40]
  40c24a:	je     40c28e <_start@@Base+0x712e>
  40c24c:	mov    rdi,QWORD PTR [rbp-0x28]
  40c250:	mov    rdx,QWORD PTR [rbp-0x48]
  40c254:	mov    rsi,QWORD PTR [rbp-0x40]
  40c258:	mov    rax,QWORD PTR [rbp-0x38]
  40c25c:	sub    rsp,0x8
  40c260:	lea    rcx,[rip+0xffffffffffffcf6f]        # 4091d6 <_start@@Base+0x4076>
  40c267:	push   rcx
  40c268:	mov    r9,rdi
  40c26b:	mov    r8d,0x3
  40c271:	mov    ecx,0x0
  40c276:	mov    rdi,rax
  40c279:	call   428a74 <flatcc_json_parser_union_vector@@Base>
  40c27e:	add    rsp,0x10
  40c282:	mov    QWORD PTR [rbp-0x40],rax
  40c286:	jmp    40c430 <_start@@Base+0x72d0>
  40c28b:	nop
  40c28c:	jmp    40c28f <_start@@Base+0x712f>
  40c28e:	nop
  40c28f:	mov    rax,QWORD PTR [rbp-0x20]
  40c293:	mov    ax,0x0
  40c297:	mov    rdx,rax
  40c29a:	movabs rax,0x7072656669780000
  40c2a4:	cmp    rdx,rax
  40c2a7:	jne    40c354 <_start@@Base+0x71f4>
  40c2ad:	mov    rax,QWORD PTR [rbp-0x40]
  40c2b1:	mov    QWORD PTR [rbp-0x18],rax
  40c2b5:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2b9:	mov    rsi,QWORD PTR [rbp-0x18]
  40c2bd:	mov    rax,QWORD PTR [rbp-0x38]
  40c2c1:	mov    ecx,0x6
  40c2c6:	mov    rdi,rax
  40c2c9:	call   405c76 <_start@@Base+0xb16>
  40c2ce:	mov    QWORD PTR [rbp-0x40],rax
  40c2d2:	mov    rax,QWORD PTR [rbp-0x18]
  40c2d6:	cmp    rax,QWORD PTR [rbp-0x40]
  40c2da:	je     40c334 <_start@@Base+0x71d4>
  40c2dc:	lea    rcx,[rbp-0x2c]
  40c2e0:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2e4:	mov    rsi,QWORD PTR [rbp-0x40]
  40c2e8:	mov    rax,QWORD PTR [rbp-0x38]
  40c2ec:	mov    rdi,rax
  40c2ef:	call   40c4de <_start@@Base+0x737e>
  40c2f4:	mov    QWORD PTR [rbp-0x40],rax
  40c2f8:	mov    eax,DWORD PTR [rbp-0x2c]
  40c2fb:	test   eax,eax
  40c2fd:	je     40c4af <_start@@Base+0x734f>
  40c303:	mov    rax,QWORD PTR [rbp-0x38]
  40c307:	mov    rax,QWORD PTR [rax]
  40c30a:	mov    esi,0x0
  40c30f:	mov    rdi,rax
  40c312:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40c317:	mov    QWORD PTR [rbp-0x10],rax
  40c31b:	cmp    QWORD PTR [rbp-0x10],0x0
  40c320:	je     40c4af <_start@@Base+0x734f>
  40c326:	mov    edx,DWORD PTR [rbp-0x2c]
  40c329:	mov    rax,QWORD PTR [rbp-0x10]
  40c32d:	mov    DWORD PTR [rax],edx
  40c32f:	jmp    40c430 <_start@@Base+0x72d0>
  40c334:	mov    rdx,QWORD PTR [rbp-0x48]
  40c338:	mov    rcx,QWORD PTR [rbp-0x40]
  40c33c:	mov    rax,QWORD PTR [rbp-0x38]
  40c340:	mov    rsi,rcx
  40c343:	mov    rdi,rax
  40c346:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c34b:	mov    QWORD PTR [rbp-0x40],rax
  40c34f:	jmp    40c430 <_start@@Base+0x72d0>
  40c354:	mov    rax,QWORD PTR [rbp-0x20]
  40c358:	and    rax,0xffffffffff000000
  40c35e:	mov    rdx,rax
  40c361:	movabs rax,0x6d6f766965000000
  40c36b:	cmp    rdx,rax
  40c36e:	jne    40c415 <_start@@Base+0x72b5>
  40c374:	mov    rax,QWORD PTR [rbp-0x40]
  40c378:	mov    QWORD PTR [rbp-0x18],rax
  40c37c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c380:	mov    rsi,QWORD PTR [rbp-0x18]
  40c384:	mov    rax,QWORD PTR [rbp-0x38]
  40c388:	mov    ecx,0x5
  40c38d:	mov    rdi,rax
  40c390:	call   405c76 <_start@@Base+0xb16>
  40c395:	mov    QWORD PTR [rbp-0x40],rax
  40c399:	mov    rax,QWORD PTR [rbp-0x18]
  40c39d:	cmp    rax,QWORD PTR [rbp-0x40]
  40c3a1:	je     40c3f8 <_start@@Base+0x7298>
  40c3a3:	lea    rcx,[rbp-0x2c]
  40c3a7:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3ab:	mov    rsi,QWORD PTR [rbp-0x40]
  40c3af:	mov    rax,QWORD PTR [rbp-0x38]
  40c3b3:	mov    rdi,rax
  40c3b6:	call   413d18 <_start@@Base+0xebb8>
  40c3bb:	mov    QWORD PTR [rbp-0x40],rax
  40c3bf:	mov    eax,DWORD PTR [rbp-0x2c]
  40c3c2:	test   eax,eax
  40c3c4:	je     40c4af <_start@@Base+0x734f>
  40c3ca:	mov    rax,QWORD PTR [rbp-0x38]
  40c3ce:	mov    rax,QWORD PTR [rax]
  40c3d1:	mov    esi,0x1
  40c3d6:	mov    rdi,rax
  40c3d9:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40c3de:	mov    QWORD PTR [rbp-0x10],rax
  40c3e2:	cmp    QWORD PTR [rbp-0x10],0x0
  40c3e7:	je     40c4af <_start@@Base+0x734f>
  40c3ed:	mov    edx,DWORD PTR [rbp-0x2c]
  40c3f0:	mov    rax,QWORD PTR [rbp-0x10]
  40c3f4:	mov    DWORD PTR [rax],edx
  40c3f6:	jmp    40c430 <_start@@Base+0x72d0>
  40c3f8:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3fc:	mov    rcx,QWORD PTR [rbp-0x40]
  40c400:	mov    rax,QWORD PTR [rbp-0x38]
  40c404:	mov    rsi,rcx
  40c407:	mov    rdi,rax
  40c40a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c40f:	mov    QWORD PTR [rbp-0x40],rax
  40c413:	jmp    40c430 <_start@@Base+0x72d0>
  40c415:	mov    rdx,QWORD PTR [rbp-0x48]
  40c419:	mov    rcx,QWORD PTR [rbp-0x40]
  40c41d:	mov    rax,QWORD PTR [rbp-0x38]
  40c421:	mov    rsi,rcx
  40c424:	mov    rdi,rax
  40c427:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c42c:	mov    QWORD PTR [rbp-0x40],rax
  40c430:	lea    rcx,[rbp-0x30]
  40c434:	mov    rdx,QWORD PTR [rbp-0x48]
  40c438:	mov    rsi,QWORD PTR [rbp-0x40]
  40c43c:	mov    rax,QWORD PTR [rbp-0x38]
  40c440:	mov    rdi,rax
  40c443:	call   40593d <_start@@Base+0x7dd>
  40c448:	mov    QWORD PTR [rbp-0x40],rax
  40c44c:	mov    eax,DWORD PTR [rbp-0x30]
  40c44f:	test   eax,eax
  40c451:	jne    40c0c1 <_start@@Base+0x6f61>
  40c457:	mov    rax,QWORD PTR [rbp-0x38]
  40c45b:	mov    eax,DWORD PTR [rax+0x20]
  40c45e:	test   eax,eax
  40c460:	jne    40c4ab <_start@@Base+0x734b>
  40c462:	mov    rcx,QWORD PTR [rbp-0x28]
  40c466:	mov    rdx,QWORD PTR [rbp-0x48]
  40c46a:	mov    rsi,QWORD PTR [rbp-0x40]
  40c46e:	mov    rax,QWORD PTR [rbp-0x38]
  40c472:	mov    rdi,rax
  40c475:	call   4283a7 <flatcc_json_parser_finalize_unions@@Base>
  40c47a:	mov    QWORD PTR [rbp-0x40],rax
  40c47e:	mov    rax,QWORD PTR [rbp-0x38]
  40c482:	mov    rax,QWORD PTR [rax]
  40c485:	mov    rdi,rax
  40c488:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40c48d:	mov    edx,eax
  40c48f:	mov    rax,QWORD PTR [rbp-0x50]
  40c493:	mov    DWORD PTR [rax],edx
  40c495:	mov    rax,QWORD PTR [rbp-0x50]
  40c499:	mov    eax,DWORD PTR [rax]
  40c49b:	test   eax,eax
  40c49d:	je     40c4ae <_start@@Base+0x734e>
  40c49f:	mov    rax,QWORD PTR [rbp-0x40]
  40c4a3:	jmp    40c4c8 <_start@@Base+0x7368>
  40c4a5:	nop
  40c4a6:	jmp    40c4af <_start@@Base+0x734f>
  40c4a8:	nop
  40c4a9:	jmp    40c4af <_start@@Base+0x734f>
  40c4ab:	nop
  40c4ac:	jmp    40c4af <_start@@Base+0x734f>
  40c4ae:	nop
  40c4af:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4b3:	mov    rsi,QWORD PTR [rbp-0x40]
  40c4b7:	mov    rax,QWORD PTR [rbp-0x38]
  40c4bb:	mov    ecx,0x21
  40c4c0:	mov    rdi,rax
  40c4c3:	call   42665a <flatcc_json_parser_set_error@@Base>
  40c4c8:	mov    rdi,QWORD PTR [rbp-0x8]
  40c4cc:	xor    rdi,QWORD PTR fs:0x28
  40c4d5:	je     40c4dc <_start@@Base+0x737c>
  40c4d7:	call   405070 <__stack_chk_fail@plt>
  40c4dc:	leave  
  40c4dd:	ret    
  40c4de:	push   rbp
  40c4df:	mov    rbp,rsp
  40c4e2:	sub    rsp,0x50
  40c4e6:	mov    QWORD PTR [rbp-0x38],rdi
  40c4ea:	mov    QWORD PTR [rbp-0x40],rsi
  40c4ee:	mov    QWORD PTR [rbp-0x48],rdx
  40c4f2:	mov    QWORD PTR [rbp-0x50],rcx
  40c4f6:	mov    rax,QWORD PTR fs:0x28
  40c4ff:	mov    QWORD PTR [rbp-0x8],rax
  40c503:	xor    eax,eax
  40c505:	mov    rax,QWORD PTR [rbp-0x50]
  40c509:	mov    DWORD PTR [rax],0x0
  40c50f:	mov    rax,QWORD PTR [rbp-0x38]
  40c513:	mov    rax,QWORD PTR [rax]
  40c516:	mov    esi,0x3
  40c51b:	mov    rdi,rax
  40c51e:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40c523:	test   eax,eax
  40c525:	jne    40c8a2 <_start@@Base+0x7742>
  40c52b:	lea    rcx,[rbp-0x28]
  40c52f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c533:	mov    rsi,QWORD PTR [rbp-0x40]
  40c537:	mov    rax,QWORD PTR [rbp-0x38]
  40c53b:	mov    rdi,rax
  40c53e:	call   405880 <_start@@Base+0x720>
  40c543:	mov    QWORD PTR [rbp-0x40],rax
  40c547:	jmp    40c865 <_start@@Base+0x7705>
  40c54c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c550:	mov    rcx,QWORD PTR [rbp-0x40]
  40c554:	mov    rax,QWORD PTR [rbp-0x38]
  40c558:	mov    rsi,rcx
  40c55b:	mov    rdi,rax
  40c55e:	call   4055e5 <_start@@Base+0x485>
  40c563:	mov    QWORD PTR [rbp-0x40],rax
  40c567:	mov    rdx,QWORD PTR [rbp-0x48]
  40c56b:	mov    rax,QWORD PTR [rbp-0x40]
  40c56f:	mov    rsi,rdx
  40c572:	mov    rdi,rax
  40c575:	call   405779 <_start@@Base+0x619>
  40c57a:	mov    QWORD PTR [rbp-0x20],rax
  40c57e:	movabs rax,0x746573746a736f6e
  40c588:	cmp    QWORD PTR [rbp-0x20],rax
  40c58c:	jne    40c82e <_start@@Base+0x76ce>
  40c592:	add    QWORD PTR [rbp-0x40],0x8
  40c597:	mov    rdx,QWORD PTR [rbp-0x48]
  40c59b:	mov    rax,QWORD PTR [rbp-0x40]
  40c59f:	mov    rsi,rdx
  40c5a2:	mov    rdi,rax
  40c5a5:	call   405779 <_start@@Base+0x619>
  40c5aa:	mov    QWORD PTR [rbp-0x20],rax
  40c5ae:	movabs rax,0x7072656669787061
  40c5b8:	cmp    QWORD PTR [rbp-0x20],rax
  40c5bc:	jne    40c811 <_start@@Base+0x76b1>
  40c5c2:	add    QWORD PTR [rbp-0x40],0x8
  40c5c7:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5cb:	mov    rax,QWORD PTR [rbp-0x40]
  40c5cf:	mov    rsi,rdx
  40c5d2:	mov    rdi,rax
  40c5d5:	call   405779 <_start@@Base+0x619>
  40c5da:	mov    QWORD PTR [rbp-0x20],rax
  40c5de:	mov    rax,QWORD PTR [rbp-0x20]
  40c5e2:	mov    ax,0x0
  40c5e6:	mov    rdx,rax
  40c5e9:	movabs rax,0x7273696e67320000
  40c5f3:	cmp    rdx,rax
  40c5f6:	jne    40c687 <_start@@Base+0x7527>
  40c5fc:	mov    rax,QWORD PTR [rbp-0x40]
  40c600:	mov    QWORD PTR [rbp-0x18],rax
  40c604:	mov    rdx,QWORD PTR [rbp-0x48]
  40c608:	mov    rsi,QWORD PTR [rbp-0x18]
  40c60c:	mov    rax,QWORD PTR [rbp-0x38]
  40c610:	mov    ecx,0x6
  40c615:	mov    rdi,rax
  40c618:	call   405c76 <_start@@Base+0xb16>
  40c61d:	mov    QWORD PTR [rbp-0x40],rax
  40c621:	mov    rax,QWORD PTR [rbp-0x18]
  40c625:	cmp    rax,QWORD PTR [rbp-0x40]
  40c629:	je     40c72e <_start@@Base+0x75ce>
  40c62f:	lea    rcx,[rbp-0x24]
  40c633:	mov    rdx,QWORD PTR [rbp-0x48]
  40c637:	mov    rsi,QWORD PTR [rbp-0x40]
  40c63b:	mov    rax,QWORD PTR [rbp-0x38]
  40c63f:	mov    rdi,rax
  40c642:	call   40d4db <_start@@Base+0x837b>
  40c647:	mov    QWORD PTR [rbp-0x40],rax
  40c64b:	mov    eax,DWORD PTR [rbp-0x24]
  40c64e:	test   eax,eax
  40c650:	je     40c8a9 <_start@@Base+0x7749>
  40c656:	mov    rax,QWORD PTR [rbp-0x38]
  40c65a:	mov    rax,QWORD PTR [rax]
  40c65d:	mov    esi,0x1
  40c662:	mov    rdi,rax
  40c665:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40c66a:	mov    QWORD PTR [rbp-0x10],rax
  40c66e:	cmp    QWORD PTR [rbp-0x10],0x0
  40c673:	je     40c8a9 <_start@@Base+0x7749>
  40c679:	mov    edx,DWORD PTR [rbp-0x24]
  40c67c:	mov    rax,QWORD PTR [rbp-0x10]
  40c680:	mov    DWORD PTR [rax],edx
  40c682:	jmp    40c849 <_start@@Base+0x76e9>
  40c687:	mov    rax,QWORD PTR [rbp-0x20]
  40c68b:	and    rax,0xffffffffff000000
  40c691:	mov    rdx,rax
  40c694:	movabs rax,0x7273696e67000000
  40c69e:	cmp    rdx,rax
  40c6a1:	jne    40c731 <_start@@Base+0x75d1>
  40c6a7:	mov    rax,QWORD PTR [rbp-0x40]
  40c6ab:	mov    QWORD PTR [rbp-0x18],rax
  40c6af:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6b3:	mov    rsi,QWORD PTR [rbp-0x18]
  40c6b7:	mov    rax,QWORD PTR [rbp-0x38]
  40c6bb:	mov    ecx,0x5
  40c6c0:	mov    rdi,rax
  40c6c3:	call   405c76 <_start@@Base+0xb16>
  40c6c8:	mov    QWORD PTR [rbp-0x40],rax
  40c6cc:	mov    rax,QWORD PTR [rbp-0x18]
  40c6d0:	cmp    rax,QWORD PTR [rbp-0x40]
  40c6d4:	je     40c734 <_start@@Base+0x75d4>
  40c6d6:	lea    rcx,[rbp-0x24]
  40c6da:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6de:	mov    rsi,QWORD PTR [rbp-0x40]
  40c6e2:	mov    rax,QWORD PTR [rbp-0x38]
  40c6e6:	mov    rdi,rax
  40c6e9:	call   40c8d8 <_start@@Base+0x7778>
  40c6ee:	mov    QWORD PTR [rbp-0x40],rax
  40c6f2:	mov    eax,DWORD PTR [rbp-0x24]
  40c6f5:	test   eax,eax
  40c6f7:	je     40c8a9 <_start@@Base+0x7749>
  40c6fd:	mov    rax,QWORD PTR [rbp-0x38]
  40c701:	mov    rax,QWORD PTR [rax]
  40c704:	mov    esi,0x0
  40c709:	mov    rdi,rax
  40c70c:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40c711:	mov    QWORD PTR [rbp-0x10],rax
  40c715:	cmp    QWORD PTR [rbp-0x10],0x0
  40c71a:	je     40c8a9 <_start@@Base+0x7749>
  40c720:	mov    edx,DWORD PTR [rbp-0x24]
  40c723:	mov    rax,QWORD PTR [rbp-0x10]
  40c727:	mov    DWORD PTR [rax],edx
  40c729:	jmp    40c849 <_start@@Base+0x76e9>
  40c72e:	nop
  40c72f:	jmp    40c735 <_start@@Base+0x75d5>
  40c731:	nop
  40c732:	jmp    40c735 <_start@@Base+0x75d5>
  40c734:	nop
  40c735:	mov    rax,QWORD PTR [rbp-0x20]
  40c739:	mov    ax,0x0
  40c73d:	mov    rdx,rax
  40c740:	movabs rax,0x7273696e67330000
  40c74a:	cmp    rdx,rax
  40c74d:	jne    40c7f4 <_start@@Base+0x7694>
  40c753:	mov    rax,QWORD PTR [rbp-0x40]
  40c757:	mov    QWORD PTR [rbp-0x18],rax
  40c75b:	mov    rdx,QWORD PTR [rbp-0x48]
  40c75f:	mov    rsi,QWORD PTR [rbp-0x18]
  40c763:	mov    rax,QWORD PTR [rbp-0x38]
  40c767:	mov    ecx,0x6
  40c76c:	mov    rdi,rax
  40c76f:	call   405c76 <_start@@Base+0xb16>
  40c774:	mov    QWORD PTR [rbp-0x40],rax
  40c778:	mov    rax,QWORD PTR [rbp-0x18]
  40c77c:	cmp    rax,QWORD PTR [rbp-0x40]
  40c780:	je     40c7d7 <_start@@Base+0x7677>
  40c782:	lea    rcx,[rbp-0x24]
  40c786:	mov    rdx,QWORD PTR [rbp-0x48]
  40c78a:	mov    rsi,QWORD PTR [rbp-0x40]
  40c78e:	mov    rax,QWORD PTR [rbp-0x38]
  40c792:	mov    rdi,rax
  40c795:	call   40d903 <_start@@Base+0x87a3>
  40c79a:	mov    QWORD PTR [rbp-0x40],rax
  40c79e:	mov    eax,DWORD PTR [rbp-0x24]
  40c7a1:	test   eax,eax
  40c7a3:	je     40c8a9 <_start@@Base+0x7749>
  40c7a9:	mov    rax,QWORD PTR [rbp-0x38]
  40c7ad:	mov    rax,QWORD PTR [rax]
  40c7b0:	mov    esi,0x2
  40c7b5:	mov    rdi,rax
  40c7b8:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40c7bd:	mov    QWORD PTR [rbp-0x10],rax
  40c7c1:	cmp    QWORD PTR [rbp-0x10],0x0
  40c7c6:	je     40c8a9 <_start@@Base+0x7749>
  40c7cc:	mov    edx,DWORD PTR [rbp-0x24]
  40c7cf:	mov    rax,QWORD PTR [rbp-0x10]
  40c7d3:	mov    DWORD PTR [rax],edx
  40c7d5:	jmp    40c849 <_start@@Base+0x76e9>
  40c7d7:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7db:	mov    rcx,QWORD PTR [rbp-0x40]
  40c7df:	mov    rax,QWORD PTR [rbp-0x38]
  40c7e3:	mov    rsi,rcx
  40c7e6:	mov    rdi,rax
  40c7e9:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c7ee:	mov    QWORD PTR [rbp-0x40],rax
  40c7f2:	jmp    40c849 <_start@@Base+0x76e9>
  40c7f4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7f8:	mov    rcx,QWORD PTR [rbp-0x40]
  40c7fc:	mov    rax,QWORD PTR [rbp-0x38]
  40c800:	mov    rsi,rcx
  40c803:	mov    rdi,rax
  40c806:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c80b:	mov    QWORD PTR [rbp-0x40],rax
  40c80f:	jmp    40c849 <_start@@Base+0x76e9>
  40c811:	mov    rdx,QWORD PTR [rbp-0x48]
  40c815:	mov    rcx,QWORD PTR [rbp-0x40]
  40c819:	mov    rax,QWORD PTR [rbp-0x38]
  40c81d:	mov    rsi,rcx
  40c820:	mov    rdi,rax
  40c823:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c828:	mov    QWORD PTR [rbp-0x40],rax
  40c82c:	jmp    40c849 <_start@@Base+0x76e9>
  40c82e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c832:	mov    rcx,QWORD PTR [rbp-0x40]
  40c836:	mov    rax,QWORD PTR [rbp-0x38]
  40c83a:	mov    rsi,rcx
  40c83d:	mov    rdi,rax
  40c840:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40c845:	mov    QWORD PTR [rbp-0x40],rax
  40c849:	lea    rcx,[rbp-0x28]
  40c84d:	mov    rdx,QWORD PTR [rbp-0x48]
  40c851:	mov    rsi,QWORD PTR [rbp-0x40]
  40c855:	mov    rax,QWORD PTR [rbp-0x38]
  40c859:	mov    rdi,rax
  40c85c:	call   40593d <_start@@Base+0x7dd>
  40c861:	mov    QWORD PTR [rbp-0x40],rax
  40c865:	mov    eax,DWORD PTR [rbp-0x28]
  40c868:	test   eax,eax
  40c86a:	jne    40c54c <_start@@Base+0x73ec>
  40c870:	mov    rax,QWORD PTR [rbp-0x38]
  40c874:	mov    eax,DWORD PTR [rax+0x20]
  40c877:	test   eax,eax
  40c879:	jne    40c8a5 <_start@@Base+0x7745>
  40c87b:	mov    rax,QWORD PTR [rbp-0x38]
  40c87f:	mov    rax,QWORD PTR [rax]
  40c882:	mov    rdi,rax
  40c885:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40c88a:	mov    edx,eax
  40c88c:	mov    rax,QWORD PTR [rbp-0x50]
  40c890:	mov    DWORD PTR [rax],edx
  40c892:	mov    rax,QWORD PTR [rbp-0x50]
  40c896:	mov    eax,DWORD PTR [rax]
  40c898:	test   eax,eax
  40c89a:	je     40c8a8 <_start@@Base+0x7748>
  40c89c:	mov    rax,QWORD PTR [rbp-0x40]
  40c8a0:	jmp    40c8c2 <_start@@Base+0x7762>
  40c8a2:	nop
  40c8a3:	jmp    40c8a9 <_start@@Base+0x7749>
  40c8a5:	nop
  40c8a6:	jmp    40c8a9 <_start@@Base+0x7749>
  40c8a8:	nop
  40c8a9:	mov    rdx,QWORD PTR [rbp-0x48]
  40c8ad:	mov    rsi,QWORD PTR [rbp-0x40]
  40c8b1:	mov    rax,QWORD PTR [rbp-0x38]
  40c8b5:	mov    ecx,0x21
  40c8ba:	mov    rdi,rax
  40c8bd:	call   42665a <flatcc_json_parser_set_error@@Base>
  40c8c2:	mov    rdi,QWORD PTR [rbp-0x8]
  40c8c6:	xor    rdi,QWORD PTR fs:0x28
  40c8cf:	je     40c8d6 <_start@@Base+0x7776>
  40c8d1:	call   405070 <__stack_chk_fail@plt>
  40c8d6:	leave  
  40c8d7:	ret    
  40c8d8:	push   rbp
  40c8d9:	mov    rbp,rsp
  40c8dc:	sub    rsp,0x60
  40c8e0:	mov    QWORD PTR [rbp-0x48],rdi
  40c8e4:	mov    QWORD PTR [rbp-0x50],rsi
  40c8e8:	mov    QWORD PTR [rbp-0x58],rdx
  40c8ec:	mov    QWORD PTR [rbp-0x60],rcx
  40c8f0:	mov    rax,QWORD PTR fs:0x28
  40c8f9:	mov    QWORD PTR [rbp-0x8],rax
  40c8fd:	xor    eax,eax
  40c8ff:	mov    rax,QWORD PTR [rbp-0x60]
  40c903:	mov    DWORD PTR [rax],0x0
  40c909:	mov    rax,QWORD PTR [rbp-0x48]
  40c90d:	mov    rax,QWORD PTR [rax]
  40c910:	mov    esi,0x9
  40c915:	mov    rdi,rax
  40c918:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40c91d:	test   eax,eax
  40c91f:	jne    40d493 <_start@@Base+0x8333>
  40c925:	lea    rcx,[rbp-0x38]
  40c929:	mov    rdx,QWORD PTR [rbp-0x58]
  40c92d:	mov    rsi,QWORD PTR [rbp-0x50]
  40c931:	mov    rax,QWORD PTR [rbp-0x48]
  40c935:	mov    rdi,rax
  40c938:	call   405880 <_start@@Base+0x720>
  40c93d:	mov    QWORD PTR [rbp-0x50],rax
  40c941:	jmp    40d456 <_start@@Base+0x82f6>
  40c946:	mov    rdx,QWORD PTR [rbp-0x58]
  40c94a:	mov    rcx,QWORD PTR [rbp-0x50]
  40c94e:	mov    rax,QWORD PTR [rbp-0x48]
  40c952:	mov    rsi,rcx
  40c955:	mov    rdi,rax
  40c958:	call   4055e5 <_start@@Base+0x485>
  40c95d:	mov    QWORD PTR [rbp-0x50],rax
  40c961:	mov    rdx,QWORD PTR [rbp-0x58]
  40c965:	mov    rax,QWORD PTR [rbp-0x50]
  40c969:	mov    rsi,rdx
  40c96c:	mov    rdi,rax
  40c96f:	call   405779 <_start@@Base+0x619>
  40c974:	mov    QWORD PTR [rbp-0x28],rax
  40c978:	movabs rax,0x63636362ffffffff
  40c982:	cmp    QWORD PTR [rbp-0x28],rax
  40c986:	ja     40ce0f <_start@@Base+0x7caf>
  40c98c:	movabs rax,0x6161616131323334
  40c996:	cmp    QWORD PTR [rbp-0x28],rax
  40c99a:	jne    40cb2e <_start@@Base+0x79ce>
  40c9a0:	add    QWORD PTR [rbp-0x50],0x8
  40c9a5:	mov    rdx,QWORD PTR [rbp-0x58]
  40c9a9:	mov    rax,QWORD PTR [rbp-0x50]
  40c9ad:	mov    rsi,rdx
  40c9b0:	mov    rdi,rax
  40c9b3:	call   405779 <_start@@Base+0x619>
  40c9b8:	mov    QWORD PTR [rbp-0x28],rax
  40c9bc:	movabs rax,0xff00000000000000
  40c9c6:	and    rax,QWORD PTR [rbp-0x28]
  40c9ca:	mov    rdx,rax
  40c9cd:	movabs rax,0x3500000000000000
  40c9d7:	cmp    rdx,rax
  40c9da:	jne    40cb0e <_start@@Base+0x79ae>
  40c9e0:	mov    rax,QWORD PTR [rbp-0x50]
  40c9e4:	mov    QWORD PTR [rbp-0x20],rax
  40c9e8:	mov    rdx,QWORD PTR [rbp-0x58]
  40c9ec:	mov    rsi,QWORD PTR [rbp-0x20]
  40c9f0:	mov    rax,QWORD PTR [rbp-0x48]
  40c9f4:	mov    ecx,0x1
  40c9f9:	mov    rdi,rax
  40c9fc:	call   405c76 <_start@@Base+0xb16>
  40ca01:	mov    QWORD PTR [rbp-0x50],rax
  40ca05:	mov    rax,QWORD PTR [rbp-0x20]
  40ca09:	cmp    rax,QWORD PTR [rbp-0x50]
  40ca0d:	je     40caee <_start@@Base+0x798e>
  40ca13:	mov    DWORD PTR [rbp-0x30],0x0
  40ca1a:	mov    rax,QWORD PTR [rbp-0x50]
  40ca1e:	mov    QWORD PTR [rbp-0x20],rax
  40ca22:	lea    rcx,[rbp-0x30]
  40ca26:	mov    rdx,QWORD PTR [rbp-0x58]
  40ca2a:	mov    rsi,QWORD PTR [rbp-0x20]
  40ca2e:	mov    rax,QWORD PTR [rbp-0x48]
  40ca32:	mov    rdi,rax
  40ca35:	call   40644c <_start@@Base+0x12ec>
  40ca3a:	mov    QWORD PTR [rbp-0x50],rax
  40ca3e:	mov    rax,QWORD PTR [rbp-0x20]
  40ca42:	cmp    rax,QWORD PTR [rbp-0x50]
  40ca46:	jne    40ca92 <_start@@Base+0x7932>
  40ca48:	mov    rax,QWORD PTR [rbp-0x50]
  40ca4c:	mov    QWORD PTR [rbp-0x20],rax
  40ca50:	lea    rcx,[rbp-0x30]
  40ca54:	mov    rdx,QWORD PTR [rbp-0x58]
  40ca58:	mov    rsi,QWORD PTR [rbp-0x20]
  40ca5c:	mov    rax,QWORD PTR [rbp-0x48]
  40ca60:	mov    r8,rcx
  40ca63:	lea    rcx,[rip+0x39916]        # 446380 <__data_start@@Base+0x2c0>
  40ca6a:	mov    rdi,rax
  40ca6d:	call   406c06 <_start@@Base+0x1aa6>
  40ca72:	mov    QWORD PTR [rbp-0x50],rax
  40ca76:	mov    rax,QWORD PTR [rbp-0x50]
  40ca7a:	cmp    rax,QWORD PTR [rbp-0x20]
  40ca7e:	je     40d4ac <_start@@Base+0x834c>
  40ca84:	mov    rax,QWORD PTR [rbp-0x50]
  40ca88:	cmp    rax,QWORD PTR [rbp-0x58]
  40ca8c:	je     40d4ac <_start@@Base+0x834c>
  40ca92:	mov    eax,DWORD PTR [rbp-0x30]
  40ca95:	test   eax,eax
  40ca97:	jne    40caab <_start@@Base+0x794b>
  40ca99:	mov    rax,QWORD PTR [rbp-0x48]
  40ca9d:	mov    eax,DWORD PTR [rax+0x10]
  40caa0:	and    eax,0x2
  40caa3:	test   eax,eax
  40caa5:	je     40d43a <_start@@Base+0x82da>
  40caab:	mov    rax,QWORD PTR [rbp-0x48]
  40caaf:	mov    rax,QWORD PTR [rax]
  40cab2:	mov    ecx,0x4
  40cab7:	mov    edx,0x4
  40cabc:	mov    esi,0x1
  40cac1:	mov    rdi,rax
  40cac4:	call   41f93b <flatcc_builder_table_add@@Base>
  40cac9:	mov    QWORD PTR [rbp-0x18],rax
  40cacd:	cmp    QWORD PTR [rbp-0x18],0x0
  40cad2:	je     40d496 <_start@@Base+0x8336>
  40cad8:	mov    edx,DWORD PTR [rbp-0x30]
  40cadb:	mov    rax,QWORD PTR [rbp-0x18]
  40cadf:	mov    esi,edx
  40cae1:	mov    rdi,rax
  40cae4:	call   4052e1 <_start@@Base+0x181>
  40cae9:	jmp    40d43a <_start@@Base+0x82da>
  40caee:	mov    rdx,QWORD PTR [rbp-0x58]
  40caf2:	mov    rcx,QWORD PTR [rbp-0x50]
  40caf6:	mov    rax,QWORD PTR [rbp-0x48]
  40cafa:	mov    rsi,rcx
  40cafd:	mov    rdi,rax
  40cb00:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40cb05:	mov    QWORD PTR [rbp-0x50],rax
  40cb09:	jmp    40d43a <_start@@Base+0x82da>
  40cb0e:	mov    rdx,QWORD PTR [rbp-0x58]
  40cb12:	mov    rcx,QWORD PTR [rbp-0x50]
  40cb16:	mov    rax,QWORD PTR [rbp-0x48]
  40cb1a:	mov    rsi,rcx
  40cb1d:	mov    rdi,rax
  40cb20:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40cb25:	mov    QWORD PTR [rbp-0x50],rax
  40cb29:	jmp    40d43a <_start@@Base+0x82da>
  40cb2e:	movabs rax,0xffffffff00000000
  40cb38:	and    rax,QWORD PTR [rbp-0x28]
  40cb3c:	mov    rdx,rax
  40cb3f:	movabs rax,0x6161616100000000
  40cb49:	cmp    rdx,rax
  40cb4c:	jne    40cbd9 <_start@@Base+0x7a79>
  40cb52:	mov    rax,QWORD PTR [rbp-0x50]
  40cb56:	mov    QWORD PTR [rbp-0x20],rax
  40cb5a:	mov    rdx,QWORD PTR [rbp-0x58]
  40cb5e:	mov    rsi,QWORD PTR [rbp-0x20]
  40cb62:	mov    rax,QWORD PTR [rbp-0x48]
  40cb66:	mov    ecx,0x4
  40cb6b:	mov    rdi,rax
  40cb6e:	call   405c76 <_start@@Base+0xb16>
  40cb73:	mov    QWORD PTR [rbp-0x50],rax
  40cb77:	mov    rax,QWORD PTR [rbp-0x20]
  40cb7b:	cmp    rax,QWORD PTR [rbp-0x50]
  40cb7f:	je     40cbdc <_start@@Base+0x7a7c>
  40cb81:	lea    rcx,[rbp-0x34]
  40cb85:	mov    rdx,QWORD PTR [rbp-0x58]
  40cb89:	mov    rsi,QWORD PTR [rbp-0x50]
  40cb8d:	mov    rax,QWORD PTR [rbp-0x48]
  40cb91:	mov    rdi,rax
  40cb94:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40cb99:	mov    QWORD PTR [rbp-0x50],rax
  40cb9d:	mov    eax,DWORD PTR [rbp-0x34]
  40cba0:	test   eax,eax
  40cba2:	je     40d4ac <_start@@Base+0x834c>
  40cba8:	mov    rax,QWORD PTR [rbp-0x48]
  40cbac:	mov    rax,QWORD PTR [rax]
  40cbaf:	mov    esi,0x0
  40cbb4:	mov    rdi,rax
  40cbb7:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40cbbc:	mov    QWORD PTR [rbp-0x10],rax
  40cbc0:	cmp    QWORD PTR [rbp-0x10],0x0
  40cbc5:	je     40d4ac <_start@@Base+0x834c>
  40cbcb:	mov    edx,DWORD PTR [rbp-0x34]
  40cbce:	mov    rax,QWORD PTR [rbp-0x10]
  40cbd2:	mov    DWORD PTR [rax],edx
  40cbd4:	jmp    40d43a <_start@@Base+0x82da>
  40cbd9:	nop
  40cbda:	jmp    40cbdd <_start@@Base+0x7a7d>
  40cbdc:	nop
  40cbdd:	movabs rax,0x6262626231323334
  40cbe7:	cmp    QWORD PTR [rbp-0x28],rax
  40cbeb:	jne    40cd24 <_start@@Base+0x7bc4>
  40cbf1:	mov    rax,QWORD PTR [rbp-0x50]
  40cbf5:	mov    QWORD PTR [rbp-0x20],rax
  40cbf9:	mov    rdx,QWORD PTR [rbp-0x58]
  40cbfd:	mov    rsi,QWORD PTR [rbp-0x20]
  40cc01:	mov    rax,QWORD PTR [rbp-0x48]
  40cc05:	mov    ecx,0x8
  40cc0a:	mov    rdi,rax
  40cc0d:	call   405c76 <_start@@Base+0xb16>
  40cc12:	mov    QWORD PTR [rbp-0x50],rax
  40cc16:	mov    rax,QWORD PTR [rbp-0x20]
  40cc1a:	cmp    rax,QWORD PTR [rbp-0x50]
  40cc1e:	je     40cd04 <_start@@Base+0x7ba4>
  40cc24:	mov    QWORD PTR [rbp-0x30],0x0
  40cc2c:	mov    rax,QWORD PTR [rbp-0x50]
  40cc30:	mov    QWORD PTR [rbp-0x20],rax
  40cc34:	lea    rcx,[rbp-0x30]
  40cc38:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc3c:	mov    rsi,QWORD PTR [rbp-0x20]
  40cc40:	mov    rax,QWORD PTR [rbp-0x48]
  40cc44:	mov    rdi,rax
  40cc47:	call   40669a <_start@@Base+0x153a>
  40cc4c:	mov    QWORD PTR [rbp-0x50],rax
  40cc50:	mov    rax,QWORD PTR [rbp-0x20]
  40cc54:	cmp    rax,QWORD PTR [rbp-0x50]
  40cc58:	jne    40cca4 <_start@@Base+0x7b44>
  40cc5a:	mov    rax,QWORD PTR [rbp-0x50]
  40cc5e:	mov    QWORD PTR [rbp-0x20],rax
  40cc62:	lea    rcx,[rbp-0x30]
  40cc66:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc6a:	mov    rsi,QWORD PTR [rbp-0x20]
  40cc6e:	mov    rax,QWORD PTR [rbp-0x48]
  40cc72:	mov    r8,rcx
  40cc75:	lea    rcx,[rip+0x39724]        # 4463a0 <__data_start@@Base+0x2e0>
  40cc7c:	mov    rdi,rax
  40cc7f:	call   40700e <_start@@Base+0x1eae>
  40cc84:	mov    QWORD PTR [rbp-0x50],rax
  40cc88:	mov    rax,QWORD PTR [rbp-0x50]
  40cc8c:	cmp    rax,QWORD PTR [rbp-0x20]
  40cc90:	je     40d4ac <_start@@Base+0x834c>
  40cc96:	mov    rax,QWORD PTR [rbp-0x50]
  40cc9a:	cmp    rax,QWORD PTR [rbp-0x58]
  40cc9e:	je     40d4ac <_start@@Base+0x834c>
  40cca4:	mov    rax,QWORD PTR [rbp-0x30]
  40cca8:	test   rax,rax
  40ccab:	jne    40ccbf <_start@@Base+0x7b5f>
  40ccad:	mov    rax,QWORD PTR [rbp-0x48]
  40ccb1:	mov    eax,DWORD PTR [rax+0x10]
  40ccb4:	and    eax,0x2
  40ccb7:	test   eax,eax
  40ccb9:	je     40d43a <_start@@Base+0x82da>
  40ccbf:	mov    rax,QWORD PTR [rbp-0x48]
  40ccc3:	mov    rax,QWORD PTR [rax]
  40ccc6:	mov    ecx,0x8
  40cccb:	mov    edx,0x8
  40ccd0:	mov    esi,0x3
  40ccd5:	mov    rdi,rax
  40ccd8:	call   41f93b <flatcc_builder_table_add@@Base>
  40ccdd:	mov    QWORD PTR [rbp-0x18],rax
  40cce1:	cmp    QWORD PTR [rbp-0x18],0x0
  40cce6:	je     40d499 <_start@@Base+0x8339>
  40ccec:	mov    rdx,QWORD PTR [rbp-0x30]
  40ccf0:	mov    rax,QWORD PTR [rbp-0x18]
  40ccf4:	mov    rsi,rdx
  40ccf7:	mov    rdi,rax
  40ccfa:	call   4053e9 <_start@@Base+0x289>
  40ccff:	jmp    40d43a <_start@@Base+0x82da>
  40cd04:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd08:	mov    rcx,QWORD PTR [rbp-0x50]
  40cd0c:	mov    rax,QWORD PTR [rbp-0x48]
  40cd10:	mov    rsi,rcx
  40cd13:	mov    rdi,rax
  40cd16:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40cd1b:	mov    QWORD PTR [rbp-0x50],rax
  40cd1f:	jmp    40d43a <_start@@Base+0x82da>
  40cd24:	movabs rax,0xffffffff00000000
  40cd2e:	and    rax,QWORD PTR [rbp-0x28]
  40cd32:	mov    rdx,rax
  40cd35:	movabs rax,0x6262626200000000
  40cd3f:	cmp    rdx,rax
  40cd42:	jne    40cdef <_start@@Base+0x7c8f>
  40cd48:	mov    rax,QWORD PTR [rbp-0x50]
  40cd4c:	mov    QWORD PTR [rbp-0x20],rax
  40cd50:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd54:	mov    rsi,QWORD PTR [rbp-0x20]
  40cd58:	mov    rax,QWORD PTR [rbp-0x48]
  40cd5c:	mov    ecx,0x4
  40cd61:	mov    rdi,rax
  40cd64:	call   405c76 <_start@@Base+0xb16>
  40cd69:	mov    QWORD PTR [rbp-0x50],rax
  40cd6d:	mov    rax,QWORD PTR [rbp-0x20]
  40cd71:	cmp    rax,QWORD PTR [rbp-0x50]
  40cd75:	je     40cdcf <_start@@Base+0x7c6f>
  40cd77:	lea    rcx,[rbp-0x34]
  40cd7b:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd7f:	mov    rsi,QWORD PTR [rbp-0x50]
  40cd83:	mov    rax,QWORD PTR [rbp-0x48]
  40cd87:	mov    rdi,rax
  40cd8a:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40cd8f:	mov    QWORD PTR [rbp-0x50],rax
  40cd93:	mov    eax,DWORD PTR [rbp-0x34]
  40cd96:	test   eax,eax
  40cd98:	je     40d4ac <_start@@Base+0x834c>
  40cd9e:	mov    rax,QWORD PTR [rbp-0x48]
  40cda2:	mov    rax,QWORD PTR [rax]
  40cda5:	mov    esi,0x2
  40cdaa:	mov    rdi,rax
  40cdad:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40cdb2:	mov    QWORD PTR [rbp-0x10],rax
  40cdb6:	cmp    QWORD PTR [rbp-0x10],0x0
  40cdbb:	je     40d4ac <_start@@Base+0x834c>
  40cdc1:	mov    edx,DWORD PTR [rbp-0x34]
  40cdc4:	mov    rax,QWORD PTR [rbp-0x10]
  40cdc8:	mov    DWORD PTR [rax],edx
  40cdca:	jmp    40d43a <_start@@Base+0x82da>
  40cdcf:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdd3:	mov    rcx,QWORD PTR [rbp-0x50]
  40cdd7:	mov    rax,QWORD PTR [rbp-0x48]
  40cddb:	mov    rsi,rcx
  40cdde:	mov    rdi,rax
  40cde1:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40cde6:	mov    QWORD PTR [rbp-0x50],rax
  40cdea:	jmp    40d43a <_start@@Base+0x82da>
  40cdef:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdf3:	mov    rcx,QWORD PTR [rbp-0x50]
  40cdf7:	mov    rax,QWORD PTR [rbp-0x48]
  40cdfb:	mov    rsi,rcx
  40cdfe:	mov    rdi,rax
  40ce01:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ce06:	mov    QWORD PTR [rbp-0x50],rax
  40ce0a:	jmp    40d43a <_start@@Base+0x82da>
  40ce0f:	movabs rax,0x6363636331323334
  40ce19:	cmp    QWORD PTR [rbp-0x28],rax
  40ce1d:	jne    40d0c4 <_start@@Base+0x7f64>
  40ce23:	mov    rax,QWORD PTR [rbp-0x50]
  40ce27:	mov    QWORD PTR [rbp-0x20],rax
  40ce2b:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce2f:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce33:	mov    rax,QWORD PTR [rbp-0x48]
  40ce37:	mov    ecx,0x8
  40ce3c:	mov    rdi,rax
  40ce3f:	call   405c76 <_start@@Base+0xb16>
  40ce44:	mov    QWORD PTR [rbp-0x50],rax
  40ce48:	mov    rax,QWORD PTR [rbp-0x20]
  40ce4c:	cmp    rax,QWORD PTR [rbp-0x50]
  40ce50:	je     40cf36 <_start@@Base+0x7dd6>
  40ce56:	mov    QWORD PTR [rbp-0x30],0x0
  40ce5e:	mov    rax,QWORD PTR [rbp-0x50]
  40ce62:	mov    QWORD PTR [rbp-0x20],rax
  40ce66:	lea    rcx,[rbp-0x30]
  40ce6a:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce6e:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce72:	mov    rax,QWORD PTR [rbp-0x48]
  40ce76:	mov    rdi,rax
  40ce79:	call   40669a <_start@@Base+0x153a>
  40ce7e:	mov    QWORD PTR [rbp-0x50],rax
  40ce82:	mov    rax,QWORD PTR [rbp-0x20]
  40ce86:	cmp    rax,QWORD PTR [rbp-0x50]
  40ce8a:	jne    40ced6 <_start@@Base+0x7d76>
  40ce8c:	mov    rax,QWORD PTR [rbp-0x50]
  40ce90:	mov    QWORD PTR [rbp-0x20],rax
  40ce94:	lea    rcx,[rbp-0x30]
  40ce98:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce9c:	mov    rsi,QWORD PTR [rbp-0x20]
  40cea0:	mov    rax,QWORD PTR [rbp-0x48]
  40cea4:	mov    r8,rcx
  40cea7:	lea    rcx,[rip+0x39512]        # 4463c0 <__data_start@@Base+0x300>
  40ceae:	mov    rdi,rax
  40ceb1:	call   40700e <_start@@Base+0x1eae>
  40ceb6:	mov    QWORD PTR [rbp-0x50],rax
  40ceba:	mov    rax,QWORD PTR [rbp-0x50]
  40cebe:	cmp    rax,QWORD PTR [rbp-0x20]
  40cec2:	je     40d4ac <_start@@Base+0x834c>
  40cec8:	mov    rax,QWORD PTR [rbp-0x50]
  40cecc:	cmp    rax,QWORD PTR [rbp-0x58]
  40ced0:	je     40d4ac <_start@@Base+0x834c>
  40ced6:	mov    rax,QWORD PTR [rbp-0x30]
  40ceda:	test   rax,rax
  40cedd:	jne    40cef1 <_start@@Base+0x7d91>
  40cedf:	mov    rax,QWORD PTR [rbp-0x48]
  40cee3:	mov    eax,DWORD PTR [rax+0x10]
  40cee6:	and    eax,0x2
  40cee9:	test   eax,eax
  40ceeb:	je     40d43a <_start@@Base+0x82da>
  40cef1:	mov    rax,QWORD PTR [rbp-0x48]
  40cef5:	mov    rax,QWORD PTR [rax]
  40cef8:	mov    ecx,0x8
  40cefd:	mov    edx,0x8
  40cf02:	mov    esi,0x5
  40cf07:	mov    rdi,rax
  40cf0a:	call   41f93b <flatcc_builder_table_add@@Base>
  40cf0f:	mov    QWORD PTR [rbp-0x18],rax
  40cf13:	cmp    QWORD PTR [rbp-0x18],0x0
  40cf18:	je     40d49c <_start@@Base+0x833c>
  40cf1e:	mov    rdx,QWORD PTR [rbp-0x30]
  40cf22:	mov    rax,QWORD PTR [rbp-0x18]
  40cf26:	mov    rsi,rdx
  40cf29:	mov    rdi,rax
  40cf2c:	call   4053e9 <_start@@Base+0x289>
  40cf31:	jmp    40d43a <_start@@Base+0x82da>
  40cf36:	add    QWORD PTR [rbp-0x50],0x8
  40cf3b:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf3f:	mov    rax,QWORD PTR [rbp-0x50]
  40cf43:	mov    rsi,rdx
  40cf46:	mov    rdi,rax
  40cf49:	call   405779 <_start@@Base+0x619>
  40cf4e:	mov    QWORD PTR [rbp-0x28],rax
  40cf52:	movabs rax,0xff00000000000000
  40cf5c:	and    rax,QWORD PTR [rbp-0x28]
  40cf60:	mov    rdx,rax
  40cf63:	movabs rax,0x3500000000000000
  40cf6d:	cmp    rdx,rax
  40cf70:	jne    40d0a4 <_start@@Base+0x7f44>
  40cf76:	mov    rax,QWORD PTR [rbp-0x50]
  40cf7a:	mov    QWORD PTR [rbp-0x20],rax
  40cf7e:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf82:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf86:	mov    rax,QWORD PTR [rbp-0x48]
  40cf8a:	mov    ecx,0x1
  40cf8f:	mov    rdi,rax
  40cf92:	call   405c76 <_start@@Base+0xb16>
  40cf97:	mov    QWORD PTR [rbp-0x50],rax
  40cf9b:	mov    rax,QWORD PTR [rbp-0x20]
  40cf9f:	cmp    rax,QWORD PTR [rbp-0x50]
  40cfa3:	je     40d084 <_start@@Base+0x7f24>
  40cfa9:	mov    DWORD PTR [rbp-0x30],0x0
  40cfb0:	mov    rax,QWORD PTR [rbp-0x50]
  40cfb4:	mov    QWORD PTR [rbp-0x20],rax
  40cfb8:	lea    rcx,[rbp-0x30]
  40cfbc:	mov    rdx,QWORD PTR [rbp-0x58]
  40cfc0:	mov    rsi,QWORD PTR [rbp-0x20]
  40cfc4:	mov    rax,QWORD PTR [rbp-0x48]
  40cfc8:	mov    rdi,rax
  40cfcb:	call   40644c <_start@@Base+0x12ec>
  40cfd0:	mov    QWORD PTR [rbp-0x50],rax
  40cfd4:	mov    rax,QWORD PTR [rbp-0x20]
  40cfd8:	cmp    rax,QWORD PTR [rbp-0x50]
  40cfdc:	jne    40d028 <_start@@Base+0x7ec8>
  40cfde:	mov    rax,QWORD PTR [rbp-0x50]
  40cfe2:	mov    QWORD PTR [rbp-0x20],rax
  40cfe6:	lea    rcx,[rbp-0x30]
  40cfea:	mov    rdx,QWORD PTR [rbp-0x58]
  40cfee:	mov    rsi,QWORD PTR [rbp-0x20]
  40cff2:	mov    rax,QWORD PTR [rbp-0x48]
  40cff6:	mov    r8,rcx
  40cff9:	lea    rcx,[rip+0x393e0]        # 4463e0 <__data_start@@Base+0x320>
  40d000:	mov    rdi,rax
  40d003:	call   406c06 <_start@@Base+0x1aa6>
  40d008:	mov    QWORD PTR [rbp-0x50],rax
  40d00c:	mov    rax,QWORD PTR [rbp-0x50]
  40d010:	cmp    rax,QWORD PTR [rbp-0x20]
  40d014:	je     40d4ac <_start@@Base+0x834c>
  40d01a:	mov    rax,QWORD PTR [rbp-0x50]
  40d01e:	cmp    rax,QWORD PTR [rbp-0x58]
  40d022:	je     40d4ac <_start@@Base+0x834c>
  40d028:	mov    eax,DWORD PTR [rbp-0x30]
  40d02b:	test   eax,eax
  40d02d:	jne    40d041 <_start@@Base+0x7ee1>
  40d02f:	mov    rax,QWORD PTR [rbp-0x48]
  40d033:	mov    eax,DWORD PTR [rax+0x10]
  40d036:	and    eax,0x2
  40d039:	test   eax,eax
  40d03b:	je     40d43a <_start@@Base+0x82da>
  40d041:	mov    rax,QWORD PTR [rbp-0x48]
  40d045:	mov    rax,QWORD PTR [rax]
  40d048:	mov    ecx,0x4
  40d04d:	mov    edx,0x4
  40d052:	mov    esi,0x6
  40d057:	mov    rdi,rax
  40d05a:	call   41f93b <flatcc_builder_table_add@@Base>
  40d05f:	mov    QWORD PTR [rbp-0x18],rax
  40d063:	cmp    QWORD PTR [rbp-0x18],0x0
  40d068:	je     40d49f <_start@@Base+0x833f>
  40d06e:	mov    edx,DWORD PTR [rbp-0x30]
  40d071:	mov    rax,QWORD PTR [rbp-0x18]
  40d075:	mov    esi,edx
  40d077:	mov    rdi,rax
  40d07a:	call   4052e1 <_start@@Base+0x181>
  40d07f:	jmp    40d43a <_start@@Base+0x82da>
  40d084:	mov    rdx,QWORD PTR [rbp-0x58]
  40d088:	mov    rcx,QWORD PTR [rbp-0x50]
  40d08c:	mov    rax,QWORD PTR [rbp-0x48]
  40d090:	mov    rsi,rcx
  40d093:	mov    rdi,rax
  40d096:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d09b:	mov    QWORD PTR [rbp-0x50],rax
  40d09f:	jmp    40d43a <_start@@Base+0x82da>
  40d0a4:	mov    rdx,QWORD PTR [rbp-0x58]
  40d0a8:	mov    rcx,QWORD PTR [rbp-0x50]
  40d0ac:	mov    rax,QWORD PTR [rbp-0x48]
  40d0b0:	mov    rsi,rcx
  40d0b3:	mov    rdi,rax
  40d0b6:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d0bb:	mov    QWORD PTR [rbp-0x50],rax
  40d0bf:	jmp    40d43a <_start@@Base+0x82da>
  40d0c4:	movabs rax,0xffffffff00000000
  40d0ce:	and    rax,QWORD PTR [rbp-0x28]
  40d0d2:	mov    rdx,rax
  40d0d5:	movabs rax,0x6363636300000000
  40d0df:	cmp    rdx,rax
  40d0e2:	jne    40d16f <_start@@Base+0x800f>
  40d0e8:	mov    rax,QWORD PTR [rbp-0x50]
  40d0ec:	mov    QWORD PTR [rbp-0x20],rax
  40d0f0:	mov    rdx,QWORD PTR [rbp-0x58]
  40d0f4:	mov    rsi,QWORD PTR [rbp-0x20]
  40d0f8:	mov    rax,QWORD PTR [rbp-0x48]
  40d0fc:	mov    ecx,0x4
  40d101:	mov    rdi,rax
  40d104:	call   405c76 <_start@@Base+0xb16>
  40d109:	mov    QWORD PTR [rbp-0x50],rax
  40d10d:	mov    rax,QWORD PTR [rbp-0x20]
  40d111:	cmp    rax,QWORD PTR [rbp-0x50]
  40d115:	je     40d172 <_start@@Base+0x8012>
  40d117:	lea    rcx,[rbp-0x34]
  40d11b:	mov    rdx,QWORD PTR [rbp-0x58]
  40d11f:	mov    rsi,QWORD PTR [rbp-0x50]
  40d123:	mov    rax,QWORD PTR [rbp-0x48]
  40d127:	mov    rdi,rax
  40d12a:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40d12f:	mov    QWORD PTR [rbp-0x50],rax
  40d133:	mov    eax,DWORD PTR [rbp-0x34]
  40d136:	test   eax,eax
  40d138:	je     40d4ac <_start@@Base+0x834c>
  40d13e:	mov    rax,QWORD PTR [rbp-0x48]
  40d142:	mov    rax,QWORD PTR [rax]
  40d145:	mov    esi,0x4
  40d14a:	mov    rdi,rax
  40d14d:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40d152:	mov    QWORD PTR [rbp-0x10],rax
  40d156:	cmp    QWORD PTR [rbp-0x10],0x0
  40d15b:	je     40d4ac <_start@@Base+0x834c>
  40d161:	mov    edx,DWORD PTR [rbp-0x34]
  40d164:	mov    rax,QWORD PTR [rbp-0x10]
  40d168:	mov    DWORD PTR [rax],edx
  40d16a:	jmp    40d43a <_start@@Base+0x82da>
  40d16f:	nop
  40d170:	jmp    40d173 <_start@@Base+0x8013>
  40d172:	nop
  40d173:	movabs rax,0x6464646431323334
  40d17d:	cmp    QWORD PTR [rbp-0x28],rax
  40d181:	jne    40d41f <_start@@Base+0x82bf>
  40d187:	mov    rax,QWORD PTR [rbp-0x50]
  40d18b:	mov    QWORD PTR [rbp-0x20],rax
  40d18f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d193:	mov    rsi,QWORD PTR [rbp-0x20]
  40d197:	mov    rax,QWORD PTR [rbp-0x48]
  40d19b:	mov    ecx,0x8
  40d1a0:	mov    rdi,rax
  40d1a3:	call   405c76 <_start@@Base+0xb16>
  40d1a8:	mov    QWORD PTR [rbp-0x50],rax
  40d1ac:	mov    rax,QWORD PTR [rbp-0x20]
  40d1b0:	cmp    rax,QWORD PTR [rbp-0x50]
  40d1b4:	je     40d29a <_start@@Base+0x813a>
  40d1ba:	mov    QWORD PTR [rbp-0x30],0x0
  40d1c2:	mov    rax,QWORD PTR [rbp-0x50]
  40d1c6:	mov    QWORD PTR [rbp-0x20],rax
  40d1ca:	lea    rcx,[rbp-0x30]
  40d1ce:	mov    rdx,QWORD PTR [rbp-0x58]
  40d1d2:	mov    rsi,QWORD PTR [rbp-0x20]
  40d1d6:	mov    rax,QWORD PTR [rbp-0x48]
  40d1da:	mov    rdi,rax
  40d1dd:	call   40669a <_start@@Base+0x153a>
  40d1e2:	mov    QWORD PTR [rbp-0x50],rax
  40d1e6:	mov    rax,QWORD PTR [rbp-0x20]
  40d1ea:	cmp    rax,QWORD PTR [rbp-0x50]
  40d1ee:	jne    40d23a <_start@@Base+0x80da>
  40d1f0:	mov    rax,QWORD PTR [rbp-0x50]
  40d1f4:	mov    QWORD PTR [rbp-0x20],rax
  40d1f8:	lea    rcx,[rbp-0x30]
  40d1fc:	mov    rdx,QWORD PTR [rbp-0x58]
  40d200:	mov    rsi,QWORD PTR [rbp-0x20]
  40d204:	mov    rax,QWORD PTR [rbp-0x48]
  40d208:	mov    r8,rcx
  40d20b:	lea    rcx,[rip+0x391ee]        # 446400 <__data_start@@Base+0x340>
  40d212:	mov    rdi,rax
  40d215:	call   40700e <_start@@Base+0x1eae>
  40d21a:	mov    QWORD PTR [rbp-0x50],rax
  40d21e:	mov    rax,QWORD PTR [rbp-0x50]
  40d222:	cmp    rax,QWORD PTR [rbp-0x20]
  40d226:	je     40d4ac <_start@@Base+0x834c>
  40d22c:	mov    rax,QWORD PTR [rbp-0x50]
  40d230:	cmp    rax,QWORD PTR [rbp-0x58]
  40d234:	je     40d4ac <_start@@Base+0x834c>
  40d23a:	mov    rax,QWORD PTR [rbp-0x30]
  40d23e:	test   rax,rax
  40d241:	jne    40d255 <_start@@Base+0x80f5>
  40d243:	mov    rax,QWORD PTR [rbp-0x48]
  40d247:	mov    eax,DWORD PTR [rax+0x10]
  40d24a:	and    eax,0x2
  40d24d:	test   eax,eax
  40d24f:	je     40d43a <_start@@Base+0x82da>
  40d255:	mov    rax,QWORD PTR [rbp-0x48]
  40d259:	mov    rax,QWORD PTR [rax]
  40d25c:	mov    ecx,0x8
  40d261:	mov    edx,0x8
  40d266:	mov    esi,0x7
  40d26b:	mov    rdi,rax
  40d26e:	call   41f93b <flatcc_builder_table_add@@Base>
  40d273:	mov    QWORD PTR [rbp-0x18],rax
  40d277:	cmp    QWORD PTR [rbp-0x18],0x0
  40d27c:	je     40d4a2 <_start@@Base+0x8342>
  40d282:	mov    rdx,QWORD PTR [rbp-0x30]
  40d286:	mov    rax,QWORD PTR [rbp-0x18]
  40d28a:	mov    rsi,rdx
  40d28d:	mov    rdi,rax
  40d290:	call   4053e9 <_start@@Base+0x289>
  40d295:	jmp    40d43a <_start@@Base+0x82da>
  40d29a:	add    QWORD PTR [rbp-0x50],0x8
  40d29f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d2a3:	mov    rax,QWORD PTR [rbp-0x50]
  40d2a7:	mov    rsi,rdx
  40d2aa:	mov    rdi,rax
  40d2ad:	call   405779 <_start@@Base+0x619>
  40d2b2:	mov    QWORD PTR [rbp-0x28],rax
  40d2b6:	movabs rax,0xff00000000000000
  40d2c0:	and    rax,QWORD PTR [rbp-0x28]
  40d2c4:	mov    rdx,rax
  40d2c7:	movabs rax,0x3500000000000000
  40d2d1:	cmp    rdx,rax
  40d2d4:	jne    40d402 <_start@@Base+0x82a2>
  40d2da:	mov    rax,QWORD PTR [rbp-0x50]
  40d2de:	mov    QWORD PTR [rbp-0x20],rax
  40d2e2:	mov    rdx,QWORD PTR [rbp-0x58]
  40d2e6:	mov    rsi,QWORD PTR [rbp-0x20]
  40d2ea:	mov    rax,QWORD PTR [rbp-0x48]
  40d2ee:	mov    ecx,0x1
  40d2f3:	mov    rdi,rax
  40d2f6:	call   405c76 <_start@@Base+0xb16>
  40d2fb:	mov    QWORD PTR [rbp-0x50],rax
  40d2ff:	mov    rax,QWORD PTR [rbp-0x20]
  40d303:	cmp    rax,QWORD PTR [rbp-0x50]
  40d307:	je     40d3e5 <_start@@Base+0x8285>
  40d30d:	mov    DWORD PTR [rbp-0x30],0x0
  40d314:	mov    rax,QWORD PTR [rbp-0x50]
  40d318:	mov    QWORD PTR [rbp-0x20],rax
  40d31c:	lea    rcx,[rbp-0x30]
  40d320:	mov    rdx,QWORD PTR [rbp-0x58]
  40d324:	mov    rsi,QWORD PTR [rbp-0x20]
  40d328:	mov    rax,QWORD PTR [rbp-0x48]
  40d32c:	mov    rdi,rax
  40d32f:	call   40644c <_start@@Base+0x12ec>
  40d334:	mov    QWORD PTR [rbp-0x50],rax
  40d338:	mov    rax,QWORD PTR [rbp-0x20]
  40d33c:	cmp    rax,QWORD PTR [rbp-0x50]
  40d340:	jne    40d38c <_start@@Base+0x822c>
  40d342:	mov    rax,QWORD PTR [rbp-0x50]
  40d346:	mov    QWORD PTR [rbp-0x20],rax
  40d34a:	lea    rcx,[rbp-0x30]
  40d34e:	mov    rdx,QWORD PTR [rbp-0x58]
  40d352:	mov    rsi,QWORD PTR [rbp-0x20]
  40d356:	mov    rax,QWORD PTR [rbp-0x48]
  40d35a:	mov    r8,rcx
  40d35d:	lea    rcx,[rip+0x390bc]        # 446420 <__data_start@@Base+0x360>
  40d364:	mov    rdi,rax
  40d367:	call   406c06 <_start@@Base+0x1aa6>
  40d36c:	mov    QWORD PTR [rbp-0x50],rax
  40d370:	mov    rax,QWORD PTR [rbp-0x50]
  40d374:	cmp    rax,QWORD PTR [rbp-0x20]
  40d378:	je     40d4ac <_start@@Base+0x834c>
  40d37e:	mov    rax,QWORD PTR [rbp-0x50]
  40d382:	cmp    rax,QWORD PTR [rbp-0x58]
  40d386:	je     40d4ac <_start@@Base+0x834c>
  40d38c:	mov    eax,DWORD PTR [rbp-0x30]
  40d38f:	test   eax,eax
  40d391:	jne    40d3a5 <_start@@Base+0x8245>
  40d393:	mov    rax,QWORD PTR [rbp-0x48]
  40d397:	mov    eax,DWORD PTR [rax+0x10]
  40d39a:	and    eax,0x2
  40d39d:	test   eax,eax
  40d39f:	je     40d43a <_start@@Base+0x82da>
  40d3a5:	mov    rax,QWORD PTR [rbp-0x48]
  40d3a9:	mov    rax,QWORD PTR [rax]
  40d3ac:	mov    ecx,0x4
  40d3b1:	mov    edx,0x4
  40d3b6:	mov    esi,0x8
  40d3bb:	mov    rdi,rax
  40d3be:	call   41f93b <flatcc_builder_table_add@@Base>
  40d3c3:	mov    QWORD PTR [rbp-0x18],rax
  40d3c7:	cmp    QWORD PTR [rbp-0x18],0x0
  40d3cc:	je     40d4a5 <_start@@Base+0x8345>
  40d3d2:	mov    edx,DWORD PTR [rbp-0x30]
  40d3d5:	mov    rax,QWORD PTR [rbp-0x18]
  40d3d9:	mov    esi,edx
  40d3db:	mov    rdi,rax
  40d3de:	call   4052e1 <_start@@Base+0x181>
  40d3e3:	jmp    40d43a <_start@@Base+0x82da>
  40d3e5:	mov    rdx,QWORD PTR [rbp-0x58]
  40d3e9:	mov    rcx,QWORD PTR [rbp-0x50]
  40d3ed:	mov    rax,QWORD PTR [rbp-0x48]
  40d3f1:	mov    rsi,rcx
  40d3f4:	mov    rdi,rax
  40d3f7:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d3fc:	mov    QWORD PTR [rbp-0x50],rax
  40d400:	jmp    40d43a <_start@@Base+0x82da>
  40d402:	mov    rdx,QWORD PTR [rbp-0x58]
  40d406:	mov    rcx,QWORD PTR [rbp-0x50]
  40d40a:	mov    rax,QWORD PTR [rbp-0x48]
  40d40e:	mov    rsi,rcx
  40d411:	mov    rdi,rax
  40d414:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d419:	mov    QWORD PTR [rbp-0x50],rax
  40d41d:	jmp    40d43a <_start@@Base+0x82da>
  40d41f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d423:	mov    rcx,QWORD PTR [rbp-0x50]
  40d427:	mov    rax,QWORD PTR [rbp-0x48]
  40d42b:	mov    rsi,rcx
  40d42e:	mov    rdi,rax
  40d431:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d436:	mov    QWORD PTR [rbp-0x50],rax
  40d43a:	lea    rcx,[rbp-0x38]
  40d43e:	mov    rdx,QWORD PTR [rbp-0x58]
  40d442:	mov    rsi,QWORD PTR [rbp-0x50]
  40d446:	mov    rax,QWORD PTR [rbp-0x48]
  40d44a:	mov    rdi,rax
  40d44d:	call   40593d <_start@@Base+0x7dd>
  40d452:	mov    QWORD PTR [rbp-0x50],rax
  40d456:	mov    eax,DWORD PTR [rbp-0x38]
  40d459:	test   eax,eax
  40d45b:	jne    40c946 <_start@@Base+0x77e6>
  40d461:	mov    rax,QWORD PTR [rbp-0x48]
  40d465:	mov    eax,DWORD PTR [rax+0x20]
  40d468:	test   eax,eax
  40d46a:	jne    40d4a8 <_start@@Base+0x8348>
  40d46c:	mov    rax,QWORD PTR [rbp-0x48]
  40d470:	mov    rax,QWORD PTR [rax]
  40d473:	mov    rdi,rax
  40d476:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40d47b:	mov    edx,eax
  40d47d:	mov    rax,QWORD PTR [rbp-0x60]
  40d481:	mov    DWORD PTR [rax],edx
  40d483:	mov    rax,QWORD PTR [rbp-0x60]
  40d487:	mov    eax,DWORD PTR [rax]
  40d489:	test   eax,eax
  40d48b:	je     40d4ab <_start@@Base+0x834b>
  40d48d:	mov    rax,QWORD PTR [rbp-0x50]
  40d491:	jmp    40d4c5 <_start@@Base+0x8365>
  40d493:	nop
  40d494:	jmp    40d4ac <_start@@Base+0x834c>
  40d496:	nop
  40d497:	jmp    40d4ac <_start@@Base+0x834c>
  40d499:	nop
  40d49a:	jmp    40d4ac <_start@@Base+0x834c>
  40d49c:	nop
  40d49d:	jmp    40d4ac <_start@@Base+0x834c>
  40d49f:	nop
  40d4a0:	jmp    40d4ac <_start@@Base+0x834c>
  40d4a2:	nop
  40d4a3:	jmp    40d4ac <_start@@Base+0x834c>
  40d4a5:	nop
  40d4a6:	jmp    40d4ac <_start@@Base+0x834c>
  40d4a8:	nop
  40d4a9:	jmp    40d4ac <_start@@Base+0x834c>
  40d4ab:	nop
  40d4ac:	mov    rdx,QWORD PTR [rbp-0x58]
  40d4b0:	mov    rsi,QWORD PTR [rbp-0x50]
  40d4b4:	mov    rax,QWORD PTR [rbp-0x48]
  40d4b8:	mov    ecx,0x21
  40d4bd:	mov    rdi,rax
  40d4c0:	call   42665a <flatcc_json_parser_set_error@@Base>
  40d4c5:	mov    rdi,QWORD PTR [rbp-0x8]
  40d4c9:	xor    rdi,QWORD PTR fs:0x28
  40d4d2:	je     40d4d9 <_start@@Base+0x8379>
  40d4d4:	call   405070 <__stack_chk_fail@plt>
  40d4d9:	leave  
  40d4da:	ret    
  40d4db:	push   rbp
  40d4dc:	mov    rbp,rsp
  40d4df:	sub    rsp,0x50
  40d4e3:	mov    QWORD PTR [rbp-0x38],rdi
  40d4e7:	mov    QWORD PTR [rbp-0x40],rsi
  40d4eb:	mov    QWORD PTR [rbp-0x48],rdx
  40d4ef:	mov    QWORD PTR [rbp-0x50],rcx
  40d4f3:	mov    rax,QWORD PTR fs:0x28
  40d4fc:	mov    QWORD PTR [rbp-0x8],rax
  40d500:	xor    eax,eax
  40d502:	mov    rax,QWORD PTR [rbp-0x50]
  40d506:	mov    DWORD PTR [rax],0x0
  40d50c:	mov    rax,QWORD PTR [rbp-0x38]
  40d510:	mov    rax,QWORD PTR [rax]
  40d513:	mov    esi,0x2
  40d518:	mov    rdi,rax
  40d51b:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40d520:	test   eax,eax
  40d522:	jne    40d8c7 <_start@@Base+0x8767>
  40d528:	lea    rcx,[rbp-0x2c]
  40d52c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d530:	mov    rsi,QWORD PTR [rbp-0x40]
  40d534:	mov    rax,QWORD PTR [rbp-0x38]
  40d538:	mov    rdi,rax
  40d53b:	call   405880 <_start@@Base+0x720>
  40d540:	mov    QWORD PTR [rbp-0x40],rax
  40d544:	jmp    40d88a <_start@@Base+0x872a>
  40d549:	mov    rdx,QWORD PTR [rbp-0x48]
  40d54d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d551:	mov    rax,QWORD PTR [rbp-0x38]
  40d555:	mov    rsi,rcx
  40d558:	mov    rdi,rax
  40d55b:	call   4055e5 <_start@@Base+0x485>
  40d560:	mov    QWORD PTR [rbp-0x40],rax
  40d564:	mov    rdx,QWORD PTR [rbp-0x48]
  40d568:	mov    rax,QWORD PTR [rbp-0x40]
  40d56c:	mov    rsi,rdx
  40d56f:	mov    rdi,rax
  40d572:	call   405779 <_start@@Base+0x619>
  40d577:	mov    QWORD PTR [rbp-0x20],rax
  40d57b:	movabs rax,0x616161615f626262
  40d585:	cmp    QWORD PTR [rbp-0x20],rax
  40d589:	jne    40d853 <_start@@Base+0x86f3>
  40d58f:	add    QWORD PTR [rbp-0x40],0x8
  40d594:	mov    rdx,QWORD PTR [rbp-0x48]
  40d598:	mov    rax,QWORD PTR [rbp-0x40]
  40d59c:	mov    rsi,rdx
  40d59f:	mov    rdi,rax
  40d5a2:	call   405779 <_start@@Base+0x619>
  40d5a7:	mov    QWORD PTR [rbp-0x20],rax
  40d5ab:	mov    rax,QWORD PTR [rbp-0x20]
  40d5af:	mov    al,0x0
  40d5b1:	mov    rdx,rax
  40d5b4:	movabs rax,0x625f737465707300
  40d5be:	cmp    rdx,rax
  40d5c1:	jne    40d6fa <_start@@Base+0x859a>
  40d5c7:	mov    rax,QWORD PTR [rbp-0x40]
  40d5cb:	mov    QWORD PTR [rbp-0x18],rax
  40d5cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40d5d3:	mov    rsi,QWORD PTR [rbp-0x18]
  40d5d7:	mov    rax,QWORD PTR [rbp-0x38]
  40d5db:	mov    ecx,0x7
  40d5e0:	mov    rdi,rax
  40d5e3:	call   405c76 <_start@@Base+0xb16>
  40d5e8:	mov    QWORD PTR [rbp-0x40],rax
  40d5ec:	mov    rax,QWORD PTR [rbp-0x18]
  40d5f0:	cmp    rax,QWORD PTR [rbp-0x40]
  40d5f4:	je     40d6da <_start@@Base+0x857a>
  40d5fa:	mov    QWORD PTR [rbp-0x28],0x0
  40d602:	mov    rax,QWORD PTR [rbp-0x40]
  40d606:	mov    QWORD PTR [rbp-0x18],rax
  40d60a:	lea    rcx,[rbp-0x28]
  40d60e:	mov    rdx,QWORD PTR [rbp-0x48]
  40d612:	mov    rsi,QWORD PTR [rbp-0x18]
  40d616:	mov    rax,QWORD PTR [rbp-0x38]
  40d61a:	mov    rdi,rax
  40d61d:	call   40669a <_start@@Base+0x153a>
  40d622:	mov    QWORD PTR [rbp-0x40],rax
  40d626:	mov    rax,QWORD PTR [rbp-0x18]
  40d62a:	cmp    rax,QWORD PTR [rbp-0x40]
  40d62e:	jne    40d67a <_start@@Base+0x851a>
  40d630:	mov    rax,QWORD PTR [rbp-0x40]
  40d634:	mov    QWORD PTR [rbp-0x18],rax
  40d638:	lea    rcx,[rbp-0x28]
  40d63c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d640:	mov    rsi,QWORD PTR [rbp-0x18]
  40d644:	mov    rax,QWORD PTR [rbp-0x38]
  40d648:	mov    r8,rcx
  40d64b:	lea    rcx,[rip+0x38dee]        # 446440 <__data_start@@Base+0x380>
  40d652:	mov    rdi,rax
  40d655:	call   40700e <_start@@Base+0x1eae>
  40d65a:	mov    QWORD PTR [rbp-0x40],rax
  40d65e:	mov    rax,QWORD PTR [rbp-0x40]
  40d662:	cmp    rax,QWORD PTR [rbp-0x18]
  40d666:	je     40d8d4 <_start@@Base+0x8774>
  40d66c:	mov    rax,QWORD PTR [rbp-0x40]
  40d670:	cmp    rax,QWORD PTR [rbp-0x48]
  40d674:	je     40d8d4 <_start@@Base+0x8774>
  40d67a:	mov    rax,QWORD PTR [rbp-0x28]
  40d67e:	test   rax,rax
  40d681:	jne    40d695 <_start@@Base+0x8535>
  40d683:	mov    rax,QWORD PTR [rbp-0x38]
  40d687:	mov    eax,DWORD PTR [rax+0x10]
  40d68a:	and    eax,0x2
  40d68d:	test   eax,eax
  40d68f:	je     40d86e <_start@@Base+0x870e>
  40d695:	mov    rax,QWORD PTR [rbp-0x38]
  40d699:	mov    rax,QWORD PTR [rax]
  40d69c:	mov    ecx,0x8
  40d6a1:	mov    edx,0x8
  40d6a6:	mov    esi,0x0
  40d6ab:	mov    rdi,rax
  40d6ae:	call   41f93b <flatcc_builder_table_add@@Base>
  40d6b3:	mov    QWORD PTR [rbp-0x10],rax
  40d6b7:	cmp    QWORD PTR [rbp-0x10],0x0
  40d6bc:	je     40d8ca <_start@@Base+0x876a>
  40d6c2:	mov    rdx,QWORD PTR [rbp-0x28]
  40d6c6:	mov    rax,QWORD PTR [rbp-0x10]
  40d6ca:	mov    rsi,rdx
  40d6cd:	mov    rdi,rax
  40d6d0:	call   4053e9 <_start@@Base+0x289>
  40d6d5:	jmp    40d86e <_start@@Base+0x870e>
  40d6da:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6de:	mov    rcx,QWORD PTR [rbp-0x40]
  40d6e2:	mov    rax,QWORD PTR [rbp-0x38]
  40d6e6:	mov    rsi,rcx
  40d6e9:	mov    rdi,rax
  40d6ec:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d6f1:	mov    QWORD PTR [rbp-0x40],rax
  40d6f5:	jmp    40d86e <_start@@Base+0x870e>
  40d6fa:	movabs rax,0x625f73746172745f
  40d704:	cmp    QWORD PTR [rbp-0x20],rax
  40d708:	jne    40d836 <_start@@Base+0x86d6>
  40d70e:	mov    rax,QWORD PTR [rbp-0x40]
  40d712:	mov    QWORD PTR [rbp-0x18],rax
  40d716:	mov    rdx,QWORD PTR [rbp-0x48]
  40d71a:	mov    rsi,QWORD PTR [rbp-0x18]
  40d71e:	mov    rax,QWORD PTR [rbp-0x38]
  40d722:	mov    ecx,0x8
  40d727:	mov    rdi,rax
  40d72a:	call   405c76 <_start@@Base+0xb16>
  40d72f:	mov    QWORD PTR [rbp-0x40],rax
  40d733:	mov    rax,QWORD PTR [rbp-0x18]
  40d737:	cmp    rax,QWORD PTR [rbp-0x40]
  40d73b:	je     40d819 <_start@@Base+0x86b9>
  40d741:	mov    DWORD PTR [rbp-0x28],0x0
  40d748:	mov    rax,QWORD PTR [rbp-0x40]
  40d74c:	mov    QWORD PTR [rbp-0x18],rax
  40d750:	lea    rcx,[rbp-0x28]
  40d754:	mov    rdx,QWORD PTR [rbp-0x48]
  40d758:	mov    rsi,QWORD PTR [rbp-0x18]
  40d75c:	mov    rax,QWORD PTR [rbp-0x38]
  40d760:	mov    rdi,rax
  40d763:	call   40644c <_start@@Base+0x12ec>
  40d768:	mov    QWORD PTR [rbp-0x40],rax
  40d76c:	mov    rax,QWORD PTR [rbp-0x18]
  40d770:	cmp    rax,QWORD PTR [rbp-0x40]
  40d774:	jne    40d7c0 <_start@@Base+0x8660>
  40d776:	mov    rax,QWORD PTR [rbp-0x40]
  40d77a:	mov    QWORD PTR [rbp-0x18],rax
  40d77e:	lea    rcx,[rbp-0x28]
  40d782:	mov    rdx,QWORD PTR [rbp-0x48]
  40d786:	mov    rsi,QWORD PTR [rbp-0x18]
  40d78a:	mov    rax,QWORD PTR [rbp-0x38]
  40d78e:	mov    r8,rcx
  40d791:	lea    rcx,[rip+0x38cc8]        # 446460 <__data_start@@Base+0x3a0>
  40d798:	mov    rdi,rax
  40d79b:	call   406c06 <_start@@Base+0x1aa6>
  40d7a0:	mov    QWORD PTR [rbp-0x40],rax
  40d7a4:	mov    rax,QWORD PTR [rbp-0x40]
  40d7a8:	cmp    rax,QWORD PTR [rbp-0x18]
  40d7ac:	je     40d8d4 <_start@@Base+0x8774>
  40d7b2:	mov    rax,QWORD PTR [rbp-0x40]
  40d7b6:	cmp    rax,QWORD PTR [rbp-0x48]
  40d7ba:	je     40d8d4 <_start@@Base+0x8774>
  40d7c0:	mov    eax,DWORD PTR [rbp-0x28]
  40d7c3:	test   eax,eax
  40d7c5:	jne    40d7d9 <_start@@Base+0x8679>
  40d7c7:	mov    rax,QWORD PTR [rbp-0x38]
  40d7cb:	mov    eax,DWORD PTR [rax+0x10]
  40d7ce:	and    eax,0x2
  40d7d1:	test   eax,eax
  40d7d3:	je     40d86e <_start@@Base+0x870e>
  40d7d9:	mov    rax,QWORD PTR [rbp-0x38]
  40d7dd:	mov    rax,QWORD PTR [rax]
  40d7e0:	mov    ecx,0x4
  40d7e5:	mov    edx,0x4
  40d7ea:	mov    esi,0x1
  40d7ef:	mov    rdi,rax
  40d7f2:	call   41f93b <flatcc_builder_table_add@@Base>
  40d7f7:	mov    QWORD PTR [rbp-0x10],rax
  40d7fb:	cmp    QWORD PTR [rbp-0x10],0x0
  40d800:	je     40d8cd <_start@@Base+0x876d>
  40d806:	mov    edx,DWORD PTR [rbp-0x28]
  40d809:	mov    rax,QWORD PTR [rbp-0x10]
  40d80d:	mov    esi,edx
  40d80f:	mov    rdi,rax
  40d812:	call   4052e1 <_start@@Base+0x181>
  40d817:	jmp    40d86e <_start@@Base+0x870e>
  40d819:	mov    rdx,QWORD PTR [rbp-0x48]
  40d81d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d821:	mov    rax,QWORD PTR [rbp-0x38]
  40d825:	mov    rsi,rcx
  40d828:	mov    rdi,rax
  40d82b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d830:	mov    QWORD PTR [rbp-0x40],rax
  40d834:	jmp    40d86e <_start@@Base+0x870e>
  40d836:	mov    rdx,QWORD PTR [rbp-0x48]
  40d83a:	mov    rcx,QWORD PTR [rbp-0x40]
  40d83e:	mov    rax,QWORD PTR [rbp-0x38]
  40d842:	mov    rsi,rcx
  40d845:	mov    rdi,rax
  40d848:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d84d:	mov    QWORD PTR [rbp-0x40],rax
  40d851:	jmp    40d86e <_start@@Base+0x870e>
  40d853:	mov    rdx,QWORD PTR [rbp-0x48]
  40d857:	mov    rcx,QWORD PTR [rbp-0x40]
  40d85b:	mov    rax,QWORD PTR [rbp-0x38]
  40d85f:	mov    rsi,rcx
  40d862:	mov    rdi,rax
  40d865:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40d86a:	mov    QWORD PTR [rbp-0x40],rax
  40d86e:	lea    rcx,[rbp-0x2c]
  40d872:	mov    rdx,QWORD PTR [rbp-0x48]
  40d876:	mov    rsi,QWORD PTR [rbp-0x40]
  40d87a:	mov    rax,QWORD PTR [rbp-0x38]
  40d87e:	mov    rdi,rax
  40d881:	call   40593d <_start@@Base+0x7dd>
  40d886:	mov    QWORD PTR [rbp-0x40],rax
  40d88a:	mov    eax,DWORD PTR [rbp-0x2c]
  40d88d:	test   eax,eax
  40d88f:	jne    40d549 <_start@@Base+0x83e9>
  40d895:	mov    rax,QWORD PTR [rbp-0x38]
  40d899:	mov    eax,DWORD PTR [rax+0x20]
  40d89c:	test   eax,eax
  40d89e:	jne    40d8d0 <_start@@Base+0x8770>
  40d8a0:	mov    rax,QWORD PTR [rbp-0x38]
  40d8a4:	mov    rax,QWORD PTR [rax]
  40d8a7:	mov    rdi,rax
  40d8aa:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40d8af:	mov    edx,eax
  40d8b1:	mov    rax,QWORD PTR [rbp-0x50]
  40d8b5:	mov    DWORD PTR [rax],edx
  40d8b7:	mov    rax,QWORD PTR [rbp-0x50]
  40d8bb:	mov    eax,DWORD PTR [rax]
  40d8bd:	test   eax,eax
  40d8bf:	je     40d8d3 <_start@@Base+0x8773>
  40d8c1:	mov    rax,QWORD PTR [rbp-0x40]
  40d8c5:	jmp    40d8ed <_start@@Base+0x878d>
  40d8c7:	nop
  40d8c8:	jmp    40d8d4 <_start@@Base+0x8774>
  40d8ca:	nop
  40d8cb:	jmp    40d8d4 <_start@@Base+0x8774>
  40d8cd:	nop
  40d8ce:	jmp    40d8d4 <_start@@Base+0x8774>
  40d8d0:	nop
  40d8d1:	jmp    40d8d4 <_start@@Base+0x8774>
  40d8d3:	nop
  40d8d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8d8:	mov    rsi,QWORD PTR [rbp-0x40]
  40d8dc:	mov    rax,QWORD PTR [rbp-0x38]
  40d8e0:	mov    ecx,0x21
  40d8e5:	mov    rdi,rax
  40d8e8:	call   42665a <flatcc_json_parser_set_error@@Base>
  40d8ed:	mov    rdi,QWORD PTR [rbp-0x8]
  40d8f1:	xor    rdi,QWORD PTR fs:0x28
  40d8fa:	je     40d901 <_start@@Base+0x87a1>
  40d8fc:	call   405070 <__stack_chk_fail@plt>
  40d901:	leave  
  40d902:	ret    
  40d903:	push   rbp
  40d904:	mov    rbp,rsp
  40d907:	sub    rsp,0x50
  40d90b:	mov    QWORD PTR [rbp-0x38],rdi
  40d90f:	mov    QWORD PTR [rbp-0x40],rsi
  40d913:	mov    QWORD PTR [rbp-0x48],rdx
  40d917:	mov    QWORD PTR [rbp-0x50],rcx
  40d91b:	mov    rax,QWORD PTR fs:0x28
  40d924:	mov    QWORD PTR [rbp-0x8],rax
  40d928:	xor    eax,eax
  40d92a:	mov    rax,QWORD PTR [rbp-0x50]
  40d92e:	mov    DWORD PTR [rax],0x0
  40d934:	mov    rax,QWORD PTR [rbp-0x38]
  40d938:	mov    rax,QWORD PTR [rax]
  40d93b:	mov    esi,0x2
  40d940:	mov    rdi,rax
  40d943:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40d948:	test   eax,eax
  40d94a:	jne    40dd4b <_start@@Base+0x8beb>
  40d950:	lea    rcx,[rbp-0x2c]
  40d954:	mov    rdx,QWORD PTR [rbp-0x48]
  40d958:	mov    rsi,QWORD PTR [rbp-0x40]
  40d95c:	mov    rax,QWORD PTR [rbp-0x38]
  40d960:	mov    rdi,rax
  40d963:	call   405880 <_start@@Base+0x720>
  40d968:	mov    QWORD PTR [rbp-0x40],rax
  40d96c:	jmp    40dd0e <_start@@Base+0x8bae>
  40d971:	mov    rdx,QWORD PTR [rbp-0x48]
  40d975:	mov    rcx,QWORD PTR [rbp-0x40]
  40d979:	mov    rax,QWORD PTR [rbp-0x38]
  40d97d:	mov    rsi,rcx
  40d980:	mov    rdi,rax
  40d983:	call   4055e5 <_start@@Base+0x485>
  40d988:	mov    QWORD PTR [rbp-0x40],rax
  40d98c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d990:	mov    rax,QWORD PTR [rbp-0x40]
  40d994:	mov    rsi,rdx
  40d997:	mov    rdi,rax
  40d99a:	call   405779 <_start@@Base+0x619>
  40d99f:	mov    QWORD PTR [rbp-0x20],rax
  40d9a3:	movabs rax,0x616161615f626262
  40d9ad:	cmp    QWORD PTR [rbp-0x20],rax
  40d9b1:	jne    40dcd7 <_start@@Base+0x8b77>
  40d9b7:	add    QWORD PTR [rbp-0x40],0x8
  40d9bc:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9c0:	mov    rax,QWORD PTR [rbp-0x40]
  40d9c4:	mov    rsi,rdx
  40d9c7:	mov    rdi,rax
  40d9ca:	call   405779 <_start@@Base+0x619>
  40d9cf:	mov    QWORD PTR [rbp-0x20],rax
  40d9d3:	movabs rax,0x625f73746172745f
  40d9dd:	cmp    QWORD PTR [rbp-0x20],rax
  40d9e1:	jne    40db71 <_start@@Base+0x8a11>
  40d9e7:	add    QWORD PTR [rbp-0x40],0x8
  40d9ec:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9f0:	mov    rax,QWORD PTR [rbp-0x40]
  40d9f4:	mov    rsi,rdx
  40d9f7:	mov    rdi,rax
  40d9fa:	call   405779 <_start@@Base+0x619>
  40d9ff:	mov    QWORD PTR [rbp-0x20],rax
  40da03:	mov    rax,QWORD PTR [rbp-0x20]
  40da07:	and    rax,0xffffffffff000000
  40da0d:	mov    rdx,rax
  40da10:	movabs rax,0x7374657073000000
  40da1a:	cmp    rdx,rax
  40da1d:	jne    40db51 <_start@@Base+0x89f1>
  40da23:	mov    rax,QWORD PTR [rbp-0x40]
  40da27:	mov    QWORD PTR [rbp-0x18],rax
  40da2b:	mov    rdx,QWORD PTR [rbp-0x48]
  40da2f:	mov    rsi,QWORD PTR [rbp-0x18]
  40da33:	mov    rax,QWORD PTR [rbp-0x38]
  40da37:	mov    ecx,0x5
  40da3c:	mov    rdi,rax
  40da3f:	call   405c76 <_start@@Base+0xb16>
  40da44:	mov    QWORD PTR [rbp-0x40],rax
  40da48:	mov    rax,QWORD PTR [rbp-0x18]
  40da4c:	cmp    rax,QWORD PTR [rbp-0x40]
  40da50:	je     40db31 <_start@@Base+0x89d1>
  40da56:	mov    DWORD PTR [rbp-0x28],0x0
  40da5d:	mov    rax,QWORD PTR [rbp-0x40]
  40da61:	mov    QWORD PTR [rbp-0x18],rax
  40da65:	lea    rcx,[rbp-0x28]
  40da69:	mov    rdx,QWORD PTR [rbp-0x48]
  40da6d:	mov    rsi,QWORD PTR [rbp-0x18]
  40da71:	mov    rax,QWORD PTR [rbp-0x38]
  40da75:	mov    rdi,rax
  40da78:	call   40644c <_start@@Base+0x12ec>
  40da7d:	mov    QWORD PTR [rbp-0x40],rax
  40da81:	mov    rax,QWORD PTR [rbp-0x18]
  40da85:	cmp    rax,QWORD PTR [rbp-0x40]
  40da89:	jne    40dad5 <_start@@Base+0x8975>
  40da8b:	mov    rax,QWORD PTR [rbp-0x40]
  40da8f:	mov    QWORD PTR [rbp-0x18],rax
  40da93:	lea    rcx,[rbp-0x28]
  40da97:	mov    rdx,QWORD PTR [rbp-0x48]
  40da9b:	mov    rsi,QWORD PTR [rbp-0x18]
  40da9f:	mov    rax,QWORD PTR [rbp-0x38]
  40daa3:	mov    r8,rcx
  40daa6:	lea    rcx,[rip+0x389d3]        # 446480 <__data_start@@Base+0x3c0>
  40daad:	mov    rdi,rax
  40dab0:	call   406c06 <_start@@Base+0x1aa6>
  40dab5:	mov    QWORD PTR [rbp-0x40],rax
  40dab9:	mov    rax,QWORD PTR [rbp-0x40]
  40dabd:	cmp    rax,QWORD PTR [rbp-0x18]
  40dac1:	je     40dd58 <_start@@Base+0x8bf8>
  40dac7:	mov    rax,QWORD PTR [rbp-0x40]
  40dacb:	cmp    rax,QWORD PTR [rbp-0x48]
  40dacf:	je     40dd58 <_start@@Base+0x8bf8>
  40dad5:	mov    eax,DWORD PTR [rbp-0x28]
  40dad8:	test   eax,eax
  40dada:	jne    40daee <_start@@Base+0x898e>
  40dadc:	mov    rax,QWORD PTR [rbp-0x38]
  40dae0:	mov    eax,DWORD PTR [rax+0x10]
  40dae3:	and    eax,0x2
  40dae6:	test   eax,eax
  40dae8:	je     40dcf2 <_start@@Base+0x8b92>
  40daee:	mov    rax,QWORD PTR [rbp-0x38]
  40daf2:	mov    rax,QWORD PTR [rax]
  40daf5:	mov    ecx,0x4
  40dafa:	mov    edx,0x4
  40daff:	mov    esi,0x1
  40db04:	mov    rdi,rax
  40db07:	call   41f93b <flatcc_builder_table_add@@Base>
  40db0c:	mov    QWORD PTR [rbp-0x10],rax
  40db10:	cmp    QWORD PTR [rbp-0x10],0x0
  40db15:	je     40dd4e <_start@@Base+0x8bee>
  40db1b:	mov    edx,DWORD PTR [rbp-0x28]
  40db1e:	mov    rax,QWORD PTR [rbp-0x10]
  40db22:	mov    esi,edx
  40db24:	mov    rdi,rax
  40db27:	call   4052e1 <_start@@Base+0x181>
  40db2c:	jmp    40dcf2 <_start@@Base+0x8b92>
  40db31:	mov    rdx,QWORD PTR [rbp-0x48]
  40db35:	mov    rcx,QWORD PTR [rbp-0x40]
  40db39:	mov    rax,QWORD PTR [rbp-0x38]
  40db3d:	mov    rsi,rcx
  40db40:	mov    rdi,rax
  40db43:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40db48:	mov    QWORD PTR [rbp-0x40],rax
  40db4c:	jmp    40dcf2 <_start@@Base+0x8b92>
  40db51:	mov    rdx,QWORD PTR [rbp-0x48]
  40db55:	mov    rcx,QWORD PTR [rbp-0x40]
  40db59:	mov    rax,QWORD PTR [rbp-0x38]
  40db5d:	mov    rsi,rcx
  40db60:	mov    rdi,rax
  40db63:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40db68:	mov    QWORD PTR [rbp-0x40],rax
  40db6c:	jmp    40dcf2 <_start@@Base+0x8b92>
  40db71:	mov    rax,QWORD PTR [rbp-0x20]
  40db75:	mov    al,0x0
  40db77:	mov    rdx,rax
  40db7a:	movabs rax,0x625f737465707300
  40db84:	cmp    rdx,rax
  40db87:	jne    40dcba <_start@@Base+0x8b5a>
  40db8d:	mov    rax,QWORD PTR [rbp-0x40]
  40db91:	mov    QWORD PTR [rbp-0x18],rax
  40db95:	mov    rdx,QWORD PTR [rbp-0x48]
  40db99:	mov    rsi,QWORD PTR [rbp-0x18]
  40db9d:	mov    rax,QWORD PTR [rbp-0x38]
  40dba1:	mov    ecx,0x7
  40dba6:	mov    rdi,rax
  40dba9:	call   405c76 <_start@@Base+0xb16>
  40dbae:	mov    QWORD PTR [rbp-0x40],rax
  40dbb2:	mov    rax,QWORD PTR [rbp-0x18]
  40dbb6:	cmp    rax,QWORD PTR [rbp-0x40]
  40dbba:	je     40dc9d <_start@@Base+0x8b3d>
  40dbc0:	mov    QWORD PTR [rbp-0x28],0x0
  40dbc8:	mov    rax,QWORD PTR [rbp-0x40]
  40dbcc:	mov    QWORD PTR [rbp-0x18],rax
  40dbd0:	lea    rcx,[rbp-0x28]
  40dbd4:	mov    rdx,QWORD PTR [rbp-0x48]
  40dbd8:	mov    rsi,QWORD PTR [rbp-0x18]
  40dbdc:	mov    rax,QWORD PTR [rbp-0x38]
  40dbe0:	mov    rdi,rax
  40dbe3:	call   40669a <_start@@Base+0x153a>
  40dbe8:	mov    QWORD PTR [rbp-0x40],rax
  40dbec:	mov    rax,QWORD PTR [rbp-0x18]
  40dbf0:	cmp    rax,QWORD PTR [rbp-0x40]
  40dbf4:	jne    40dc40 <_start@@Base+0x8ae0>
  40dbf6:	mov    rax,QWORD PTR [rbp-0x40]
  40dbfa:	mov    QWORD PTR [rbp-0x18],rax
  40dbfe:	lea    rcx,[rbp-0x28]
  40dc02:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc06:	mov    rsi,QWORD PTR [rbp-0x18]
  40dc0a:	mov    rax,QWORD PTR [rbp-0x38]
  40dc0e:	mov    r8,rcx
  40dc11:	lea    rcx,[rip+0x38888]        # 4464a0 <__data_start@@Base+0x3e0>
  40dc18:	mov    rdi,rax
  40dc1b:	call   40700e <_start@@Base+0x1eae>
  40dc20:	mov    QWORD PTR [rbp-0x40],rax
  40dc24:	mov    rax,QWORD PTR [rbp-0x40]
  40dc28:	cmp    rax,QWORD PTR [rbp-0x18]
  40dc2c:	je     40dd58 <_start@@Base+0x8bf8>
  40dc32:	mov    rax,QWORD PTR [rbp-0x40]
  40dc36:	cmp    rax,QWORD PTR [rbp-0x48]
  40dc3a:	je     40dd58 <_start@@Base+0x8bf8>
  40dc40:	mov    rax,QWORD PTR [rbp-0x28]
  40dc44:	test   rax,rax
  40dc47:	jne    40dc5b <_start@@Base+0x8afb>
  40dc49:	mov    rax,QWORD PTR [rbp-0x38]
  40dc4d:	mov    eax,DWORD PTR [rax+0x10]
  40dc50:	and    eax,0x2
  40dc53:	test   eax,eax
  40dc55:	je     40dcf2 <_start@@Base+0x8b92>
  40dc5b:	mov    rax,QWORD PTR [rbp-0x38]
  40dc5f:	mov    rax,QWORD PTR [rax]
  40dc62:	mov    ecx,0x8
  40dc67:	mov    edx,0x8
  40dc6c:	mov    esi,0x0
  40dc71:	mov    rdi,rax
  40dc74:	call   41f93b <flatcc_builder_table_add@@Base>
  40dc79:	mov    QWORD PTR [rbp-0x10],rax
  40dc7d:	cmp    QWORD PTR [rbp-0x10],0x0
  40dc82:	je     40dd51 <_start@@Base+0x8bf1>
  40dc88:	mov    rdx,QWORD PTR [rbp-0x28]
  40dc8c:	mov    rax,QWORD PTR [rbp-0x10]
  40dc90:	mov    rsi,rdx
  40dc93:	mov    rdi,rax
  40dc96:	call   4053e9 <_start@@Base+0x289>
  40dc9b:	jmp    40dcf2 <_start@@Base+0x8b92>
  40dc9d:	mov    rdx,QWORD PTR [rbp-0x48]
  40dca1:	mov    rcx,QWORD PTR [rbp-0x40]
  40dca5:	mov    rax,QWORD PTR [rbp-0x38]
  40dca9:	mov    rsi,rcx
  40dcac:	mov    rdi,rax
  40dcaf:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40dcb4:	mov    QWORD PTR [rbp-0x40],rax
  40dcb8:	jmp    40dcf2 <_start@@Base+0x8b92>
  40dcba:	mov    rdx,QWORD PTR [rbp-0x48]
  40dcbe:	mov    rcx,QWORD PTR [rbp-0x40]
  40dcc2:	mov    rax,QWORD PTR [rbp-0x38]
  40dcc6:	mov    rsi,rcx
  40dcc9:	mov    rdi,rax
  40dccc:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40dcd1:	mov    QWORD PTR [rbp-0x40],rax
  40dcd5:	jmp    40dcf2 <_start@@Base+0x8b92>
  40dcd7:	mov    rdx,QWORD PTR [rbp-0x48]
  40dcdb:	mov    rcx,QWORD PTR [rbp-0x40]
  40dcdf:	mov    rax,QWORD PTR [rbp-0x38]
  40dce3:	mov    rsi,rcx
  40dce6:	mov    rdi,rax
  40dce9:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40dcee:	mov    QWORD PTR [rbp-0x40],rax
  40dcf2:	lea    rcx,[rbp-0x2c]
  40dcf6:	mov    rdx,QWORD PTR [rbp-0x48]
  40dcfa:	mov    rsi,QWORD PTR [rbp-0x40]
  40dcfe:	mov    rax,QWORD PTR [rbp-0x38]
  40dd02:	mov    rdi,rax
  40dd05:	call   40593d <_start@@Base+0x7dd>
  40dd0a:	mov    QWORD PTR [rbp-0x40],rax
  40dd0e:	mov    eax,DWORD PTR [rbp-0x2c]
  40dd11:	test   eax,eax
  40dd13:	jne    40d971 <_start@@Base+0x8811>
  40dd19:	mov    rax,QWORD PTR [rbp-0x38]
  40dd1d:	mov    eax,DWORD PTR [rax+0x20]
  40dd20:	test   eax,eax
  40dd22:	jne    40dd54 <_start@@Base+0x8bf4>
  40dd24:	mov    rax,QWORD PTR [rbp-0x38]
  40dd28:	mov    rax,QWORD PTR [rax]
  40dd2b:	mov    rdi,rax
  40dd2e:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40dd33:	mov    edx,eax
  40dd35:	mov    rax,QWORD PTR [rbp-0x50]
  40dd39:	mov    DWORD PTR [rax],edx
  40dd3b:	mov    rax,QWORD PTR [rbp-0x50]
  40dd3f:	mov    eax,DWORD PTR [rax]
  40dd41:	test   eax,eax
  40dd43:	je     40dd57 <_start@@Base+0x8bf7>
  40dd45:	mov    rax,QWORD PTR [rbp-0x40]
  40dd49:	jmp    40dd71 <_start@@Base+0x8c11>
  40dd4b:	nop
  40dd4c:	jmp    40dd58 <_start@@Base+0x8bf8>
  40dd4e:	nop
  40dd4f:	jmp    40dd58 <_start@@Base+0x8bf8>
  40dd51:	nop
  40dd52:	jmp    40dd58 <_start@@Base+0x8bf8>
  40dd54:	nop
  40dd55:	jmp    40dd58 <_start@@Base+0x8bf8>
  40dd57:	nop
  40dd58:	mov    rdx,QWORD PTR [rbp-0x48]
  40dd5c:	mov    rsi,QWORD PTR [rbp-0x40]
  40dd60:	mov    rax,QWORD PTR [rbp-0x38]
  40dd64:	mov    ecx,0x21
  40dd69:	mov    rdi,rax
  40dd6c:	call   42665a <flatcc_json_parser_set_error@@Base>
  40dd71:	mov    rdi,QWORD PTR [rbp-0x8]
  40dd75:	xor    rdi,QWORD PTR fs:0x28
  40dd7e:	je     40dd85 <_start@@Base+0x8c25>
  40dd80:	call   405070 <__stack_chk_fail@plt>
  40dd85:	leave  
  40dd86:	ret    
  40dd87:	push   rbp
  40dd88:	mov    rbp,rsp
  40dd8b:	sub    rsp,0x50
  40dd8f:	mov    QWORD PTR [rbp-0x38],rdi
  40dd93:	mov    QWORD PTR [rbp-0x40],rsi
  40dd97:	mov    QWORD PTR [rbp-0x48],rdx
  40dd9b:	mov    QWORD PTR [rbp-0x50],rcx
  40dd9f:	mov    rax,QWORD PTR fs:0x28
  40dda8:	mov    QWORD PTR [rbp-0x8],rax
  40ddac:	xor    eax,eax
  40ddae:	mov    rax,QWORD PTR [rbp-0x50]
  40ddb2:	mov    DWORD PTR [rax],0x0
  40ddb8:	mov    rax,QWORD PTR [rbp-0x38]
  40ddbc:	mov    rax,QWORD PTR [rax]
  40ddbf:	mov    esi,0x3
  40ddc4:	mov    rdi,rax
  40ddc7:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40ddcc:	test   eax,eax
  40ddce:	jne    40e12e <_start@@Base+0x8fce>
  40ddd4:	lea    rcx,[rbp-0x28]
  40ddd8:	mov    rdx,QWORD PTR [rbp-0x48]
  40dddc:	mov    rsi,QWORD PTR [rbp-0x40]
  40dde0:	mov    rax,QWORD PTR [rbp-0x38]
  40dde4:	mov    rdi,rax
  40dde7:	call   405880 <_start@@Base+0x720>
  40ddec:	mov    QWORD PTR [rbp-0x40],rax
  40ddf0:	jmp    40e0f1 <_start@@Base+0x8f91>
  40ddf5:	mov    rdx,QWORD PTR [rbp-0x48]
  40ddf9:	mov    rcx,QWORD PTR [rbp-0x40]
  40ddfd:	mov    rax,QWORD PTR [rbp-0x38]
  40de01:	mov    rsi,rcx
  40de04:	mov    rdi,rax
  40de07:	call   4055e5 <_start@@Base+0x485>
  40de0c:	mov    QWORD PTR [rbp-0x40],rax
  40de10:	mov    rdx,QWORD PTR [rbp-0x48]
  40de14:	mov    rax,QWORD PTR [rbp-0x40]
  40de18:	mov    rsi,rdx
  40de1b:	mov    rdi,rax
  40de1e:	call   405779 <_start@@Base+0x619>
  40de23:	mov    QWORD PTR [rbp-0x20],rax
  40de27:	movabs rax,0x6e6573746563ffff
  40de31:	cmp    QWORD PTR [rbp-0x20],rax
  40de35:	ja     40df2c <_start@@Base+0x8dcc>
  40de3b:	movabs rax,0xffffffff00000000
  40de45:	and    rax,QWORD PTR [rbp-0x20]
  40de49:	mov    rdx,rax
  40de4c:	movabs rax,0x6461746100000000
  40de56:	cmp    rdx,rax
  40de59:	jne    40df0c <_start@@Base+0x8dac>
  40de5f:	mov    rax,QWORD PTR [rbp-0x40]
  40de63:	mov    QWORD PTR [rbp-0x18],rax
  40de67:	mov    rdx,QWORD PTR [rbp-0x48]
  40de6b:	mov    rsi,QWORD PTR [rbp-0x18]
  40de6f:	mov    rax,QWORD PTR [rbp-0x38]
  40de73:	mov    ecx,0x4
  40de78:	mov    rdi,rax
  40de7b:	call   405c76 <_start@@Base+0xb16>
  40de80:	mov    QWORD PTR [rbp-0x40],rax
  40de84:	mov    rax,QWORD PTR [rbp-0x18]
  40de88:	cmp    rax,QWORD PTR [rbp-0x40]
  40de8c:	je     40deec <_start@@Base+0x8d8c>
  40de8e:	lea    rcx,[rbp-0x24]
  40de92:	mov    rdx,QWORD PTR [rbp-0x48]
  40de96:	mov    rsi,QWORD PTR [rbp-0x40]
  40de9a:	mov    rax,QWORD PTR [rbp-0x38]
  40de9e:	mov    r8d,0x0
  40dea4:	mov    rdi,rax
  40dea7:	call   427ea4 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40deac:	mov    QWORD PTR [rbp-0x40],rax
  40deb0:	mov    eax,DWORD PTR [rbp-0x24]
  40deb3:	test   eax,eax
  40deb5:	je     40e135 <_start@@Base+0x8fd5>
  40debb:	mov    rax,QWORD PTR [rbp-0x38]
  40debf:	mov    rax,QWORD PTR [rax]
  40dec2:	mov    esi,0x0
  40dec7:	mov    rdi,rax
  40deca:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40decf:	mov    QWORD PTR [rbp-0x10],rax
  40ded3:	cmp    QWORD PTR [rbp-0x10],0x0
  40ded8:	je     40e135 <_start@@Base+0x8fd5>
  40dede:	mov    edx,DWORD PTR [rbp-0x24]
  40dee1:	mov    rax,QWORD PTR [rbp-0x10]
  40dee5:	mov    DWORD PTR [rax],edx
  40dee7:	jmp    40e0d5 <_start@@Base+0x8f75>
  40deec:	mov    rdx,QWORD PTR [rbp-0x48]
  40def0:	mov    rcx,QWORD PTR [rbp-0x40]
  40def4:	mov    rax,QWORD PTR [rbp-0x38]
  40def8:	mov    rsi,rcx
  40defb:	mov    rdi,rax
  40defe:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40df03:	mov    QWORD PTR [rbp-0x40],rax
  40df07:	jmp    40e0d5 <_start@@Base+0x8f75>
  40df0c:	mov    rdx,QWORD PTR [rbp-0x48]
  40df10:	mov    rcx,QWORD PTR [rbp-0x40]
  40df14:	mov    rax,QWORD PTR [rbp-0x38]
  40df18:	mov    rsi,rcx
  40df1b:	mov    rdi,rax
  40df1e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40df23:	mov    QWORD PTR [rbp-0x40],rax
  40df27:	jmp    40e0d5 <_start@@Base+0x8f75>
  40df2c:	mov    rax,QWORD PTR [rbp-0x20]
  40df30:	mov    al,0x0
  40df32:	mov    rdx,rax
  40df35:	movabs rax,0x75726c6461746100
  40df3f:	cmp    rdx,rax
  40df42:	jne    40dff5 <_start@@Base+0x8e95>
  40df48:	mov    rax,QWORD PTR [rbp-0x40]
  40df4c:	mov    QWORD PTR [rbp-0x18],rax
  40df50:	mov    rdx,QWORD PTR [rbp-0x48]
  40df54:	mov    rsi,QWORD PTR [rbp-0x18]
  40df58:	mov    rax,QWORD PTR [rbp-0x38]
  40df5c:	mov    ecx,0x7
  40df61:	mov    rdi,rax
  40df64:	call   405c76 <_start@@Base+0xb16>
  40df69:	mov    QWORD PTR [rbp-0x40],rax
  40df6d:	mov    rax,QWORD PTR [rbp-0x18]
  40df71:	cmp    rax,QWORD PTR [rbp-0x40]
  40df75:	je     40dfd5 <_start@@Base+0x8e75>
  40df77:	lea    rcx,[rbp-0x24]
  40df7b:	mov    rdx,QWORD PTR [rbp-0x48]
  40df7f:	mov    rsi,QWORD PTR [rbp-0x40]
  40df83:	mov    rax,QWORD PTR [rbp-0x38]
  40df87:	mov    r8d,0x1
  40df8d:	mov    rdi,rax
  40df90:	call   427ea4 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40df95:	mov    QWORD PTR [rbp-0x40],rax
  40df99:	mov    eax,DWORD PTR [rbp-0x24]
  40df9c:	test   eax,eax
  40df9e:	je     40e135 <_start@@Base+0x8fd5>
  40dfa4:	mov    rax,QWORD PTR [rbp-0x38]
  40dfa8:	mov    rax,QWORD PTR [rax]
  40dfab:	mov    esi,0x1
  40dfb0:	mov    rdi,rax
  40dfb3:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40dfb8:	mov    QWORD PTR [rbp-0x10],rax
  40dfbc:	cmp    QWORD PTR [rbp-0x10],0x0
  40dfc1:	je     40e135 <_start@@Base+0x8fd5>
  40dfc7:	mov    edx,DWORD PTR [rbp-0x24]
  40dfca:	mov    rax,QWORD PTR [rbp-0x10]
  40dfce:	mov    DWORD PTR [rax],edx
  40dfd0:	jmp    40e0d5 <_start@@Base+0x8f75>
  40dfd5:	mov    rdx,QWORD PTR [rbp-0x48]
  40dfd9:	mov    rcx,QWORD PTR [rbp-0x40]
  40dfdd:	mov    rax,QWORD PTR [rbp-0x38]
  40dfe1:	mov    rsi,rcx
  40dfe4:	mov    rdi,rax
  40dfe7:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40dfec:	mov    QWORD PTR [rbp-0x40],rax
  40dff0:	jmp    40e0d5 <_start@@Base+0x8f75>
  40dff5:	mov    rax,QWORD PTR [rbp-0x20]
  40dff9:	mov    ax,0x0
  40dffd:	mov    rdx,rax
  40e000:	movabs rax,0x6e65737465640000
  40e00a:	cmp    rdx,rax
  40e00d:	jne    40e0ba <_start@@Base+0x8f5a>
  40e013:	mov    rax,QWORD PTR [rbp-0x40]
  40e017:	mov    QWORD PTR [rbp-0x18],rax
  40e01b:	mov    rdx,QWORD PTR [rbp-0x48]
  40e01f:	mov    rsi,QWORD PTR [rbp-0x18]
  40e023:	mov    rax,QWORD PTR [rbp-0x38]
  40e027:	mov    ecx,0x6
  40e02c:	mov    rdi,rax
  40e02f:	call   405c76 <_start@@Base+0xb16>
  40e034:	mov    QWORD PTR [rbp-0x40],rax
  40e038:	mov    rax,QWORD PTR [rbp-0x18]
  40e03c:	cmp    rax,QWORD PTR [rbp-0x40]
  40e040:	je     40e09d <_start@@Base+0x8f3d>
  40e042:	lea    rcx,[rbp-0x24]
  40e046:	mov    rdx,QWORD PTR [rbp-0x48]
  40e04a:	mov    rsi,QWORD PTR [rbp-0x40]
  40e04e:	mov    rax,QWORD PTR [rbp-0x38]
  40e052:	mov    r8d,0x0
  40e058:	mov    rdi,rax
  40e05b:	call   427ea4 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40e060:	mov    QWORD PTR [rbp-0x40],rax
  40e064:	mov    eax,DWORD PTR [rbp-0x24]
  40e067:	test   eax,eax
  40e069:	je     40e135 <_start@@Base+0x8fd5>
  40e06f:	mov    rax,QWORD PTR [rbp-0x38]
  40e073:	mov    rax,QWORD PTR [rax]
  40e076:	mov    esi,0x2
  40e07b:	mov    rdi,rax
  40e07e:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40e083:	mov    QWORD PTR [rbp-0x10],rax
  40e087:	cmp    QWORD PTR [rbp-0x10],0x0
  40e08c:	je     40e135 <_start@@Base+0x8fd5>
  40e092:	mov    edx,DWORD PTR [rbp-0x24]
  40e095:	mov    rax,QWORD PTR [rbp-0x10]
  40e099:	mov    DWORD PTR [rax],edx
  40e09b:	jmp    40e0d5 <_start@@Base+0x8f75>
  40e09d:	mov    rdx,QWORD PTR [rbp-0x48]
  40e0a1:	mov    rcx,QWORD PTR [rbp-0x40]
  40e0a5:	mov    rax,QWORD PTR [rbp-0x38]
  40e0a9:	mov    rsi,rcx
  40e0ac:	mov    rdi,rax
  40e0af:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e0b4:	mov    QWORD PTR [rbp-0x40],rax
  40e0b8:	jmp    40e0d5 <_start@@Base+0x8f75>
  40e0ba:	mov    rdx,QWORD PTR [rbp-0x48]
  40e0be:	mov    rcx,QWORD PTR [rbp-0x40]
  40e0c2:	mov    rax,QWORD PTR [rbp-0x38]
  40e0c6:	mov    rsi,rcx
  40e0c9:	mov    rdi,rax
  40e0cc:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e0d1:	mov    QWORD PTR [rbp-0x40],rax
  40e0d5:	lea    rcx,[rbp-0x28]
  40e0d9:	mov    rdx,QWORD PTR [rbp-0x48]
  40e0dd:	mov    rsi,QWORD PTR [rbp-0x40]
  40e0e1:	mov    rax,QWORD PTR [rbp-0x38]
  40e0e5:	mov    rdi,rax
  40e0e8:	call   40593d <_start@@Base+0x7dd>
  40e0ed:	mov    QWORD PTR [rbp-0x40],rax
  40e0f1:	mov    eax,DWORD PTR [rbp-0x28]
  40e0f4:	test   eax,eax
  40e0f6:	jne    40ddf5 <_start@@Base+0x8c95>
  40e0fc:	mov    rax,QWORD PTR [rbp-0x38]
  40e100:	mov    eax,DWORD PTR [rax+0x20]
  40e103:	test   eax,eax
  40e105:	jne    40e131 <_start@@Base+0x8fd1>
  40e107:	mov    rax,QWORD PTR [rbp-0x38]
  40e10b:	mov    rax,QWORD PTR [rax]
  40e10e:	mov    rdi,rax
  40e111:	call   41e2d9 <flatcc_builder_end_table@@Base>
  40e116:	mov    edx,eax
  40e118:	mov    rax,QWORD PTR [rbp-0x50]
  40e11c:	mov    DWORD PTR [rax],edx
  40e11e:	mov    rax,QWORD PTR [rbp-0x50]
  40e122:	mov    eax,DWORD PTR [rax]
  40e124:	test   eax,eax
  40e126:	je     40e134 <_start@@Base+0x8fd4>
  40e128:	mov    rax,QWORD PTR [rbp-0x40]
  40e12c:	jmp    40e14e <_start@@Base+0x8fee>
  40e12e:	nop
  40e12f:	jmp    40e135 <_start@@Base+0x8fd5>
  40e131:	nop
  40e132:	jmp    40e135 <_start@@Base+0x8fd5>
  40e134:	nop
  40e135:	mov    rdx,QWORD PTR [rbp-0x48]
  40e139:	mov    rsi,QWORD PTR [rbp-0x40]
  40e13d:	mov    rax,QWORD PTR [rbp-0x38]
  40e141:	mov    ecx,0x21
  40e146:	mov    rdi,rax
  40e149:	call   42665a <flatcc_json_parser_set_error@@Base>
  40e14e:	mov    rdi,QWORD PTR [rbp-0x8]
  40e152:	xor    rdi,QWORD PTR fs:0x28
  40e15b:	je     40e162 <_start@@Base+0x9002>
  40e15d:	call   405070 <__stack_chk_fail@plt>
  40e162:	leave  
  40e163:	ret    
  40e164:	push   rbp
  40e165:	mov    rbp,rsp
  40e168:	sub    rsp,0x70
  40e16c:	mov    QWORD PTR [rbp-0x48],rdi
  40e170:	mov    QWORD PTR [rbp-0x50],rsi
  40e174:	mov    QWORD PTR [rbp-0x58],rdx
  40e178:	mov    QWORD PTR [rbp-0x60],rcx
  40e17c:	mov    rax,QWORD PTR fs:0x28
  40e185:	mov    QWORD PTR [rbp-0x8],rax
  40e189:	xor    eax,eax
  40e18b:	mov    rax,QWORD PTR [rbp-0x60]
  40e18f:	mov    DWORD PTR [rax],0x0
  40e195:	mov    rax,QWORD PTR [rbp-0x48]
  40e199:	mov    rax,QWORD PTR [rax]
  40e19c:	mov    esi,0x24
  40e1a1:	mov    rdi,rax
  40e1a4:	call   41d7d7 <flatcc_builder_start_table@@Base>
  40e1a9:	test   eax,eax
  40e1ab:	jne    411906 <_start@@Base+0xc7a6>
  40e1b1:	lea    rcx,[rbp-0x38]
  40e1b5:	mov    rdx,QWORD PTR [rbp-0x58]
  40e1b9:	mov    rsi,QWORD PTR [rbp-0x50]
  40e1bd:	mov    rax,QWORD PTR [rbp-0x48]
  40e1c1:	mov    r8,rcx
  40e1c4:	mov    ecx,0x1
  40e1c9:	mov    rdi,rax
  40e1cc:	call   428304 <flatcc_json_parser_prepare_unions@@Base>
  40e1d1:	cmp    rax,QWORD PTR [rbp-0x58]
  40e1d5:	je     411909 <_start@@Base+0xc7a9>
  40e1db:	lea    rcx,[rbp-0x40]
  40e1df:	mov    rdx,QWORD PTR [rbp-0x58]
  40e1e3:	mov    rsi,QWORD PTR [rbp-0x50]
  40e1e7:	mov    rax,QWORD PTR [rbp-0x48]
  40e1eb:	mov    rdi,rax
  40e1ee:	call   405880 <_start@@Base+0x720>
  40e1f3:	mov    QWORD PTR [rbp-0x50],rax
  40e1f7:	jmp    411868 <_start@@Base+0xc708>
  40e1fc:	mov    rdx,QWORD PTR [rbp-0x58]
  40e200:	mov    rcx,QWORD PTR [rbp-0x50]
  40e204:	mov    rax,QWORD PTR [rbp-0x48]
  40e208:	mov    rsi,rcx
  40e20b:	mov    rdi,rax
  40e20e:	call   4055e5 <_start@@Base+0x485>
  40e213:	mov    QWORD PTR [rbp-0x50],rax
  40e217:	mov    rdx,QWORD PTR [rbp-0x58]
  40e21b:	mov    rax,QWORD PTR [rbp-0x50]
  40e21f:	mov    rsi,rdx
  40e222:	mov    rdi,rax
  40e225:	call   405779 <_start@@Base+0x619>
  40e22a:	mov    QWORD PTR [rbp-0x28],rax
  40e22e:	movabs rax,0x7465737461727260
  40e238:	cmp    QWORD PTR [rbp-0x28],rax
  40e23c:	ja     40f39f <_start@@Base+0xa23f>
  40e242:	movabs rax,0x6e616d64ffffffff
  40e24c:	cmp    QWORD PTR [rbp-0x28],rax
  40e250:	ja     40ebf7 <_start@@Base+0x9a97>
  40e256:	movabs rax,0x666c6577ffffffff
  40e260:	cmp    QWORD PTR [rbp-0x28],rax
  40e264:	ja     40e4a1 <_start@@Base+0x9341>
  40e26a:	mov    rax,QWORD PTR [rbp-0x28]
  40e26e:	and    rax,0xffffffffff000000
  40e274:	mov    rdx,rax
  40e277:	movabs rax,0x656e656d79000000
  40e281:	cmp    rdx,rax
  40e284:	jne    40e331 <_start@@Base+0x91d1>
  40e28a:	mov    rax,QWORD PTR [rbp-0x50]
  40e28e:	mov    QWORD PTR [rbp-0x20],rax
  40e292:	mov    rdx,QWORD PTR [rbp-0x58]
  40e296:	mov    rsi,QWORD PTR [rbp-0x20]
  40e29a:	mov    rax,QWORD PTR [rbp-0x48]
  40e29e:	mov    ecx,0x5
  40e2a3:	mov    rdi,rax
  40e2a6:	call   405c76 <_start@@Base+0xb16>
  40e2ab:	mov    QWORD PTR [rbp-0x50],rax
  40e2af:	mov    rax,QWORD PTR [rbp-0x20]
  40e2b3:	cmp    rax,QWORD PTR [rbp-0x50]
  40e2b7:	je     40e311 <_start@@Base+0x91b1>
  40e2b9:	lea    rcx,[rbp-0x3c]
  40e2bd:	mov    rdx,QWORD PTR [rbp-0x58]
  40e2c1:	mov    rsi,QWORD PTR [rbp-0x50]
  40e2c5:	mov    rax,QWORD PTR [rbp-0x48]
  40e2c9:	mov    rdi,rax
  40e2cc:	call   40e164 <_start@@Base+0x9004>
  40e2d1:	mov    QWORD PTR [rbp-0x50],rax
  40e2d5:	mov    eax,DWORD PTR [rbp-0x3c]
  40e2d8:	test   eax,eax
  40e2da:	je     411985 <_start@@Base+0xc825>
  40e2e0:	mov    rax,QWORD PTR [rbp-0x48]
  40e2e4:	mov    rax,QWORD PTR [rax]
  40e2e7:	mov    esi,0xc
  40e2ec:	mov    rdi,rax
  40e2ef:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40e2f4:	mov    QWORD PTR [rbp-0x18],rax
  40e2f8:	cmp    QWORD PTR [rbp-0x18],0x0
  40e2fd:	je     411985 <_start@@Base+0xc825>
  40e303:	mov    edx,DWORD PTR [rbp-0x3c]
  40e306:	mov    rax,QWORD PTR [rbp-0x18]
  40e30a:	mov    DWORD PTR [rax],edx
  40e30c:	jmp    41184c <_start@@Base+0xc6ec>
  40e311:	mov    rdx,QWORD PTR [rbp-0x58]
  40e315:	mov    rcx,QWORD PTR [rbp-0x50]
  40e319:	mov    rax,QWORD PTR [rbp-0x48]
  40e31d:	mov    rsi,rcx
  40e320:	mov    rdi,rax
  40e323:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e328:	mov    QWORD PTR [rbp-0x50],rax
  40e32c:	jmp    41184c <_start@@Base+0xc6ec>
  40e331:	mov    rax,QWORD PTR [rbp-0x28]
  40e335:	and    rax,0xffffffffff000000
  40e33b:	mov    rdx,rax
  40e33e:	movabs rax,0x636f6c6f72000000
  40e348:	cmp    rdx,rax
  40e34b:	jne    40e481 <_start@@Base+0x9321>
  40e351:	mov    rax,QWORD PTR [rbp-0x50]
  40e355:	mov    QWORD PTR [rbp-0x20],rax
  40e359:	mov    rdx,QWORD PTR [rbp-0x58]
  40e35d:	mov    rsi,QWORD PTR [rbp-0x20]
  40e361:	mov    rax,QWORD PTR [rbp-0x48]
  40e365:	mov    ecx,0x5
  40e36a:	mov    rdi,rax
  40e36d:	call   405c76 <_start@@Base+0xb16>
  40e372:	mov    QWORD PTR [rbp-0x50],rax
  40e376:	mov    rax,QWORD PTR [rbp-0x20]
  40e37a:	cmp    rax,QWORD PTR [rbp-0x50]
  40e37e:	je     40e461 <_start@@Base+0x9301>
  40e384:	mov    BYTE PTR [rbp-0x30],0x0
  40e388:	mov    rax,QWORD PTR [rbp-0x50]
  40e38c:	mov    QWORD PTR [rbp-0x20],rax
  40e390:	lea    rcx,[rbp-0x30]
  40e394:	mov    rdx,QWORD PTR [rbp-0x58]
  40e398:	mov    rsi,QWORD PTR [rbp-0x20]
  40e39c:	mov    rax,QWORD PTR [rbp-0x48]
  40e3a0:	mov    rdi,rax
  40e3a3:	call   4068ec <_start@@Base+0x178c>
  40e3a8:	mov    QWORD PTR [rbp-0x50],rax
  40e3ac:	mov    rax,QWORD PTR [rbp-0x20]
  40e3b0:	cmp    rax,QWORD PTR [rbp-0x50]
  40e3b4:	jne    40e400 <_start@@Base+0x92a0>
  40e3b6:	mov    rax,QWORD PTR [rbp-0x50]
  40e3ba:	mov    QWORD PTR [rbp-0x20],rax
  40e3be:	lea    rcx,[rbp-0x30]
  40e3c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e3c6:	mov    rsi,QWORD PTR [rbp-0x20]
  40e3ca:	mov    rax,QWORD PTR [rbp-0x48]
  40e3ce:	mov    r8,rcx
  40e3d1:	lea    rcx,[rip+0x380e8]        # 4464c0 <__data_start@@Base+0x400>
  40e3d8:	mov    rdi,rax
  40e3db:	call   407424 <_start@@Base+0x22c4>
  40e3e0:	mov    QWORD PTR [rbp-0x50],rax
  40e3e4:	mov    rax,QWORD PTR [rbp-0x50]
  40e3e8:	cmp    rax,QWORD PTR [rbp-0x20]
  40e3ec:	je     411985 <_start@@Base+0xc825>
  40e3f2:	mov    rax,QWORD PTR [rbp-0x50]
  40e3f6:	cmp    rax,QWORD PTR [rbp-0x58]
  40e3fa:	je     411985 <_start@@Base+0xc825>
  40e400:	movzx  eax,BYTE PTR [rbp-0x30]
  40e404:	cmp    al,0x8
  40e406:	jne    40e41a <_start@@Base+0x92ba>
  40e408:	mov    rax,QWORD PTR [rbp-0x48]
  40e40c:	mov    eax,DWORD PTR [rax+0x10]
  40e40f:	and    eax,0x2
  40e412:	test   eax,eax
  40e414:	je     41184c <_start@@Base+0xc6ec>
  40e41a:	mov    rax,QWORD PTR [rbp-0x48]
  40e41e:	mov    rax,QWORD PTR [rax]
  40e421:	mov    ecx,0x1
  40e426:	mov    edx,0x1
  40e42b:	mov    esi,0x6
  40e430:	mov    rdi,rax
  40e433:	call   41f93b <flatcc_builder_table_add@@Base>
  40e438:	mov    QWORD PTR [rbp-0x10],rax
  40e43c:	cmp    QWORD PTR [rbp-0x10],0x0
  40e441:	je     41190c <_start@@Base+0xc7ac>
  40e447:	movzx  eax,BYTE PTR [rbp-0x30]
  40e44b:	movsx  edx,al
  40e44e:	mov    rax,QWORD PTR [rbp-0x10]
  40e452:	mov    esi,edx
  40e454:	mov    rdi,rax
  40e457:	call   40534b <_start@@Base+0x1eb>
  40e45c:	jmp    41184c <_start@@Base+0xc6ec>
  40e461:	mov    rdx,QWORD PTR [rbp-0x58]
  40e465:	mov    rcx,QWORD PTR [rbp-0x50]
  40e469:	mov    rax,QWORD PTR [rbp-0x48]
  40e46d:	mov    rsi,rcx
  40e470:	mov    rdi,rax
  40e473:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e478:	mov    QWORD PTR [rbp-0x50],rax
  40e47c:	jmp    41184c <_start@@Base+0xc6ec>
  40e481:	mov    rdx,QWORD PTR [rbp-0x58]
  40e485:	mov    rcx,QWORD PTR [rbp-0x50]
  40e489:	mov    rax,QWORD PTR [rbp-0x48]
  40e48d:	mov    rsi,rcx
  40e490:	mov    rdi,rax
  40e493:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e498:	mov    QWORD PTR [rbp-0x50],rax
  40e49c:	jmp    41184c <_start@@Base+0xc6ec>
  40e4a1:	movabs rax,0x686fffffffffffff
  40e4ab:	cmp    QWORD PTR [rbp-0x28],rax
  40e4af:	ja     40e6bc <_start@@Base+0x955c>
  40e4b5:	movabs rax,0xffffffff00000000
  40e4bf:	and    rax,QWORD PTR [rbp-0x28]
  40e4c3:	mov    rdx,rax
  40e4c6:	movabs rax,0x666c657800000000
  40e4d0:	cmp    rdx,rax
  40e4d3:	jne    40e69c <_start@@Base+0x953c>
  40e4d9:	mov    rax,QWORD PTR [rbp-0x50]
  40e4dd:	mov    QWORD PTR [rbp-0x20],rax
  40e4e1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4e5:	mov    rsi,QWORD PTR [rbp-0x20]
  40e4e9:	mov    rax,QWORD PTR [rbp-0x48]
  40e4ed:	mov    ecx,0x4
  40e4f2:	mov    rdi,rax
  40e4f5:	call   405c76 <_start@@Base+0xb16>
  40e4fa:	mov    QWORD PTR [rbp-0x50],rax
  40e4fe:	mov    rax,QWORD PTR [rbp-0x20]
  40e502:	cmp    rax,QWORD PTR [rbp-0x50]
  40e506:	je     40e67c <_start@@Base+0x951c>
  40e50c:	mov    rax,QWORD PTR [rbp-0x48]
  40e510:	mov    rax,QWORD PTR [rax]
  40e513:	mov    ecx,0xffffffff
  40e518:	mov    edx,0x1
  40e51d:	mov    esi,0x1
  40e522:	mov    rdi,rax
  40e525:	call   41d59d <flatcc_builder_start_vector@@Base>
  40e52a:	test   eax,eax
  40e52c:	jne    41190f <_start@@Base+0xc7af>
  40e532:	lea    rcx,[rbp-0x40]
  40e536:	mov    rdx,QWORD PTR [rbp-0x58]
  40e53a:	mov    rsi,QWORD PTR [rbp-0x50]
  40e53e:	mov    rax,QWORD PTR [rbp-0x48]
  40e542:	mov    rdi,rax
  40e545:	call   405a7b <_start@@Base+0x91b>
  40e54a:	mov    QWORD PTR [rbp-0x50],rax
  40e54e:	jmp    40e623 <_start@@Base+0x94c3>
  40e553:	mov    BYTE PTR [rbp-0x30],0x0
  40e557:	mov    rax,QWORD PTR [rbp-0x48]
  40e55b:	mov    rax,QWORD PTR [rax]
  40e55e:	mov    esi,0x1
  40e563:	mov    rdi,rax
  40e566:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  40e56b:	mov    QWORD PTR [rbp-0x10],rax
  40e56f:	cmp    QWORD PTR [rbp-0x10],0x0
  40e574:	je     411912 <_start@@Base+0xc7b2>
  40e57a:	mov    rax,QWORD PTR [rbp-0x50]
  40e57e:	mov    QWORD PTR [rbp-0x20],rax
  40e582:	lea    rcx,[rbp-0x30]
  40e586:	mov    rdx,QWORD PTR [rbp-0x58]
  40e58a:	mov    rsi,QWORD PTR [rbp-0x20]
  40e58e:	mov    rax,QWORD PTR [rbp-0x48]
  40e592:	mov    rdi,rax
  40e595:	call   4065d7 <_start@@Base+0x1477>
  40e59a:	mov    QWORD PTR [rbp-0x50],rax
  40e59e:	mov    rax,QWORD PTR [rbp-0x20]
  40e5a2:	cmp    rax,QWORD PTR [rbp-0x50]
  40e5a6:	jne    40e5f2 <_start@@Base+0x9492>
  40e5a8:	mov    rax,QWORD PTR [rbp-0x50]
  40e5ac:	mov    QWORD PTR [rbp-0x20],rax
  40e5b0:	lea    rcx,[rbp-0x30]
  40e5b4:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5b8:	mov    rsi,QWORD PTR [rbp-0x20]
  40e5bc:	mov    rax,QWORD PTR [rbp-0x48]
  40e5c0:	mov    r8,rcx
  40e5c3:	lea    rcx,[rip+0x37f16]        # 4464e0 <__data_start@@Base+0x420>
  40e5ca:	mov    rdi,rax
  40e5cd:	call   406eb9 <_start@@Base+0x1d59>
  40e5d2:	mov    QWORD PTR [rbp-0x50],rax
  40e5d6:	mov    rax,QWORD PTR [rbp-0x50]
  40e5da:	cmp    rax,QWORD PTR [rbp-0x20]
  40e5de:	je     411912 <_start@@Base+0xc7b2>
  40e5e4:	mov    rax,QWORD PTR [rbp-0x50]
  40e5e8:	cmp    rax,QWORD PTR [rbp-0x58]
  40e5ec:	je     411912 <_start@@Base+0xc7b2>
  40e5f2:	movzx  eax,BYTE PTR [rbp-0x30]
  40e5f6:	movzx  edx,al
  40e5f9:	mov    rax,QWORD PTR [rbp-0x10]
  40e5fd:	mov    esi,edx
  40e5ff:	mov    rdi,rax
  40e602:	call   405275 <_start@@Base+0x115>
  40e607:	lea    rcx,[rbp-0x40]
  40e60b:	mov    rdx,QWORD PTR [rbp-0x58]
  40e60f:	mov    rsi,QWORD PTR [rbp-0x50]
  40e613:	mov    rax,QWORD PTR [rbp-0x48]
  40e617:	mov    rdi,rax
  40e61a:	call   405b38 <_start@@Base+0x9d8>
  40e61f:	mov    QWORD PTR [rbp-0x50],rax
  40e623:	mov    eax,DWORD PTR [rbp-0x40]
  40e626:	test   eax,eax
  40e628:	jne    40e553 <_start@@Base+0x93f3>
  40e62e:	mov    rax,QWORD PTR [rbp-0x48]
  40e632:	mov    rax,QWORD PTR [rax]
  40e635:	mov    rdi,rax
  40e638:	call   41e773 <flatcc_builder_end_vector@@Base>
  40e63d:	mov    DWORD PTR [rbp-0x3c],eax
  40e640:	mov    eax,DWORD PTR [rbp-0x3c]
  40e643:	test   eax,eax
  40e645:	je     411985 <_start@@Base+0xc825>
  40e64b:	mov    rax,QWORD PTR [rbp-0x48]
  40e64f:	mov    rax,QWORD PTR [rax]
  40e652:	mov    esi,0x1e
  40e657:	mov    rdi,rax
  40e65a:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40e65f:	mov    QWORD PTR [rbp-0x18],rax
  40e663:	cmp    QWORD PTR [rbp-0x18],0x0
  40e668:	je     411985 <_start@@Base+0xc825>
  40e66e:	mov    edx,DWORD PTR [rbp-0x3c]
  40e671:	mov    rax,QWORD PTR [rbp-0x18]
  40e675:	mov    DWORD PTR [rax],edx
  40e677:	jmp    41184c <_start@@Base+0xc6ec>
  40e67c:	mov    rdx,QWORD PTR [rbp-0x58]
  40e680:	mov    rcx,QWORD PTR [rbp-0x50]
  40e684:	mov    rax,QWORD PTR [rbp-0x48]
  40e688:	mov    rsi,rcx
  40e68b:	mov    rdi,rax
  40e68e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e693:	mov    QWORD PTR [rbp-0x50],rax
  40e697:	jmp    41184c <_start@@Base+0xc6ec>
  40e69c:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6a0:	mov    rcx,QWORD PTR [rbp-0x50]
  40e6a4:	mov    rax,QWORD PTR [rbp-0x48]
  40e6a8:	mov    rsi,rcx
  40e6ab:	mov    rdi,rax
  40e6ae:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e6b3:	mov    QWORD PTR [rbp-0x50],rax
  40e6b7:	jmp    41184c <_start@@Base+0xc6ec>
  40e6bc:	movabs rax,0x696e76656e746f71
  40e6c6:	cmp    QWORD PTR [rbp-0x28],rax
  40e6ca:	ja     40e848 <_start@@Base+0x96e8>
  40e6d0:	movabs rax,0xffff000000000000
  40e6da:	and    rax,QWORD PTR [rbp-0x28]
  40e6de:	mov    rdx,rax
  40e6e1:	movabs rax,0x6870000000000000
  40e6eb:	cmp    rdx,rax
  40e6ee:	jne    40e828 <_start@@Base+0x96c8>
  40e6f4:	mov    rax,QWORD PTR [rbp-0x50]
  40e6f8:	mov    QWORD PTR [rbp-0x20],rax
  40e6fc:	mov    rdx,QWORD PTR [rbp-0x58]
  40e700:	mov    rsi,QWORD PTR [rbp-0x20]
  40e704:	mov    rax,QWORD PTR [rbp-0x48]
  40e708:	mov    ecx,0x2
  40e70d:	mov    rdi,rax
  40e710:	call   405c76 <_start@@Base+0xb16>
  40e715:	mov    QWORD PTR [rbp-0x50],rax
  40e719:	mov    rax,QWORD PTR [rbp-0x20]
  40e71d:	cmp    rax,QWORD PTR [rbp-0x50]
  40e721:	je     40e808 <_start@@Base+0x96a8>
  40e727:	mov    WORD PTR [rbp-0x30],0x0
  40e72d:	mov    rax,QWORD PTR [rbp-0x50]
  40e731:	mov    QWORD PTR [rbp-0x20],rax
  40e735:	lea    rcx,[rbp-0x30]
  40e739:	mov    rdx,QWORD PTR [rbp-0x58]
  40e73d:	mov    rsi,QWORD PTR [rbp-0x20]
  40e741:	mov    rax,QWORD PTR [rbp-0x48]
  40e745:	mov    rdi,rax
  40e748:	call   406827 <_start@@Base+0x16c7>
  40e74d:	mov    QWORD PTR [rbp-0x50],rax
  40e751:	mov    rax,QWORD PTR [rbp-0x20]
  40e755:	cmp    rax,QWORD PTR [rbp-0x50]
  40e759:	jne    40e7a5 <_start@@Base+0x9645>
  40e75b:	mov    rax,QWORD PTR [rbp-0x50]
  40e75f:	mov    QWORD PTR [rbp-0x20],rax
  40e763:	lea    rcx,[rbp-0x30]
  40e767:	mov    rdx,QWORD PTR [rbp-0x58]
  40e76b:	mov    rsi,QWORD PTR [rbp-0x20]
  40e76f:	mov    rax,QWORD PTR [rbp-0x48]
  40e773:	mov    r8,rcx
  40e776:	lea    rcx,[rip+0x37d83]        # 446500 <__data_start@@Base+0x440>
  40e77d:	mov    rdi,rax
  40e780:	call   4072c6 <_start@@Base+0x2166>
  40e785:	mov    QWORD PTR [rbp-0x50],rax
  40e789:	mov    rax,QWORD PTR [rbp-0x50]
  40e78d:	cmp    rax,QWORD PTR [rbp-0x20]
  40e791:	je     411985 <_start@@Base+0xc825>
  40e797:	mov    rax,QWORD PTR [rbp-0x50]
  40e79b:	cmp    rax,QWORD PTR [rbp-0x58]
  40e79f:	je     411985 <_start@@Base+0xc825>
  40e7a5:	movzx  eax,WORD PTR [rbp-0x30]
  40e7a9:	cmp    ax,0x64
  40e7ad:	jne    40e7c1 <_start@@Base+0x9661>
  40e7af:	mov    rax,QWORD PTR [rbp-0x48]
  40e7b3:	mov    eax,DWORD PTR [rax+0x10]
  40e7b6:	and    eax,0x2
  40e7b9:	test   eax,eax
  40e7bb:	je     41184c <_start@@Base+0xc6ec>
  40e7c1:	mov    rax,QWORD PTR [rbp-0x48]
  40e7c5:	mov    rax,QWORD PTR [rax]
  40e7c8:	mov    ecx,0x2
  40e7cd:	mov    edx,0x2
  40e7d2:	mov    esi,0x2
  40e7d7:	mov    rdi,rax
  40e7da:	call   41f93b <flatcc_builder_table_add@@Base>
  40e7df:	mov    QWORD PTR [rbp-0x10],rax
  40e7e3:	cmp    QWORD PTR [rbp-0x10],0x0
  40e7e8:	je     411915 <_start@@Base+0xc7b5>
  40e7ee:	movzx  eax,WORD PTR [rbp-0x30]
  40e7f2:	movsx  edx,ax
  40e7f5:	mov    rax,QWORD PTR [rbp-0x10]
  40e7f9:	mov    esi,edx
  40e7fb:	mov    rdi,rax
  40e7fe:	call   405382 <_start@@Base+0x222>
  40e803:	jmp    41184c <_start@@Base+0xc6ec>
  40e808:	mov    rdx,QWORD PTR [rbp-0x58]
  40e80c:	mov    rcx,QWORD PTR [rbp-0x50]
  40e810:	mov    rax,QWORD PTR [rbp-0x48]
  40e814:	mov    rsi,rcx
  40e817:	mov    rdi,rax
  40e81a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e81f:	mov    QWORD PTR [rbp-0x50],rax
  40e823:	jmp    41184c <_start@@Base+0xc6ec>
  40e828:	mov    rdx,QWORD PTR [rbp-0x58]
  40e82c:	mov    rcx,QWORD PTR [rbp-0x50]
  40e830:	mov    rax,QWORD PTR [rbp-0x48]
  40e834:	mov    rsi,rcx
  40e837:	mov    rdi,rax
  40e83a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40e83f:	mov    QWORD PTR [rbp-0x50],rax
  40e843:	jmp    41184c <_start@@Base+0xc6ec>
  40e848:	movabs rax,0x696e76656e746f72
  40e852:	cmp    QWORD PTR [rbp-0x28],rax
  40e856:	jne    40ea7f <_start@@Base+0x991f>
  40e85c:	add    QWORD PTR [rbp-0x50],0x8
  40e861:	mov    rdx,QWORD PTR [rbp-0x58]
  40e865:	mov    rax,QWORD PTR [rbp-0x50]
  40e869:	mov    rsi,rdx
  40e86c:	mov    rdi,rax
  40e86f:	call   405779 <_start@@Base+0x619>
  40e874:	mov    QWORD PTR [rbp-0x28],rax
  40e878:	movabs rax,0xff00000000000000
  40e882:	and    rax,QWORD PTR [rbp-0x28]
  40e886:	mov    rdx,rax
  40e889:	movabs rax,0x7900000000000000
  40e893:	cmp    rdx,rax
  40e896:	jne    40ea5f <_start@@Base+0x98ff>
  40e89c:	mov    rax,QWORD PTR [rbp-0x50]
  40e8a0:	mov    QWORD PTR [rbp-0x20],rax
  40e8a4:	mov    rdx,QWORD PTR [rbp-0x58]
  40e8a8:	mov    rsi,QWORD PTR [rbp-0x20]
  40e8ac:	mov    rax,QWORD PTR [rbp-0x48]
  40e8b0:	mov    ecx,0x1
  40e8b5:	mov    rdi,rax
  40e8b8:	call   405c76 <_start@@Base+0xb16>
  40e8bd:	mov    QWORD PTR [rbp-0x50],rax
  40e8c1:	mov    rax,QWORD PTR [rbp-0x20]
  40e8c5:	cmp    rax,QWORD PTR [rbp-0x50]
  40e8c9:	je     40ea3f <_start@@Base+0x98df>
  40e8cf:	mov    rax,QWORD PTR [rbp-0x48]
  40e8d3:	mov    rax,QWORD PTR [rax]
  40e8d6:	mov    ecx,0xffffffff
  40e8db:	mov    edx,0x1
  40e8e0:	mov    esi,0x1
  40e8e5:	mov    rdi,rax
  40e8e8:	call   41d59d <flatcc_builder_start_vector@@Base>
  40e8ed:	test   eax,eax
  40e8ef:	jne    411918 <_start@@Base+0xc7b8>
  40e8f5:	lea    rcx,[rbp-0x40]
  40e8f9:	mov    rdx,QWORD PTR [rbp-0x58]
  40e8fd:	mov    rsi,QWORD PTR [rbp-0x50]
  40e901:	mov    rax,QWORD PTR [rbp-0x48]
  40e905:	mov    rdi,rax
  40e908:	call   405a7b <_start@@Base+0x91b>
  40e90d:	mov    QWORD PTR [rbp-0x50],rax
  40e911:	jmp    40e9e6 <_start@@Base+0x9886>
  40e916:	mov    BYTE PTR [rbp-0x30],0x0
  40e91a:	mov    rax,QWORD PTR [rbp-0x48]
  40e91e:	mov    rax,QWORD PTR [rax]
  40e921:	mov    esi,0x1
  40e926:	mov    rdi,rax
  40e929:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  40e92e:	mov    QWORD PTR [rbp-0x10],rax
  40e932:	cmp    QWORD PTR [rbp-0x10],0x0
  40e937:	je     41191b <_start@@Base+0xc7bb>
  40e93d:	mov    rax,QWORD PTR [rbp-0x50]
  40e941:	mov    QWORD PTR [rbp-0x20],rax
  40e945:	lea    rcx,[rbp-0x30]
  40e949:	mov    rdx,QWORD PTR [rbp-0x58]
  40e94d:	mov    rsi,QWORD PTR [rbp-0x20]
  40e951:	mov    rax,QWORD PTR [rbp-0x48]
  40e955:	mov    rdi,rax
  40e958:	call   4065d7 <_start@@Base+0x1477>
  40e95d:	mov    QWORD PTR [rbp-0x50],rax
  40e961:	mov    rax,QWORD PTR [rbp-0x20]
  40e965:	cmp    rax,QWORD PTR [rbp-0x50]
  40e969:	jne    40e9b5 <_start@@Base+0x9855>
  40e96b:	mov    rax,QWORD PTR [rbp-0x50]
  40e96f:	mov    QWORD PTR [rbp-0x20],rax
  40e973:	lea    rcx,[rbp-0x30]
  40e977:	mov    rdx,QWORD PTR [rbp-0x58]
  40e97b:	mov    rsi,QWORD PTR [rbp-0x20]
  40e97f:	mov    rax,QWORD PTR [rbp-0x48]
  40e983:	mov    r8,rcx
  40e986:	lea    rcx,[rip+0x37b93]        # 446520 <__data_start@@Base+0x460>
  40e98d:	mov    rdi,rax
  40e990:	call   406eb9 <_start@@Base+0x1d59>
  40e995:	mov    QWORD PTR [rbp-0x50],rax
  40e999:	mov    rax,QWORD PTR [rbp-0x50]
  40e99d:	cmp    rax,QWORD PTR [rbp-0x20]
  40e9a1:	je     41191b <_start@@Base+0xc7bb>
  40e9a7:	mov    rax,QWORD PTR [rbp-0x50]
  40e9ab:	cmp    rax,QWORD PTR [rbp-0x58]
  40e9af:	je     41191b <_start@@Base+0xc7bb>
  40e9b5:	movzx  eax,BYTE PTR [rbp-0x30]
  40e9b9:	movzx  edx,al
  40e9bc:	mov    rax,QWORD PTR [rbp-0x10]
  40e9c0:	mov    esi,edx
  40e9c2:	mov    rdi,rax
  40e9c5:	call   405275 <_start@@Base+0x115>
  40e9ca:	lea    rcx,[rbp-0x40]
  40e9ce:	mov    rdx,QWORD PTR [rbp-0x58]
  40e9d2:	mov    rsi,QWORD PTR [rbp-0x50]
  40e9d6:	mov    rax,QWORD PTR [rbp-0x48]
  40e9da:	mov    rdi,rax
  40e9dd:	call   405b38 <_start@@Base+0x9d8>
  40e9e2:	mov    QWORD PTR [rbp-0x50],rax
  40e9e6:	mov    eax,DWORD PTR [rbp-0x40]
  40e9e9:	test   eax,eax
  40e9eb:	jne    40e916 <_start@@Base+0x97b6>
  40e9f1:	mov    rax,QWORD PTR [rbp-0x48]
  40e9f5:	mov    rax,QWORD PTR [rax]
  40e9f8:	mov    rdi,rax
  40e9fb:	call   41e773 <flatcc_builder_end_vector@@Base>
  40ea00:	mov    DWORD PTR [rbp-0x3c],eax
  40ea03:	mov    eax,DWORD PTR [rbp-0x3c]
  40ea06:	test   eax,eax
  40ea08:	je     411985 <_start@@Base+0xc825>
  40ea0e:	mov    rax,QWORD PTR [rbp-0x48]
  40ea12:	mov    rax,QWORD PTR [rax]
  40ea15:	mov    esi,0x5
  40ea1a:	mov    rdi,rax
  40ea1d:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40ea22:	mov    QWORD PTR [rbp-0x18],rax
  40ea26:	cmp    QWORD PTR [rbp-0x18],0x0
  40ea2b:	je     411985 <_start@@Base+0xc825>
  40ea31:	mov    edx,DWORD PTR [rbp-0x3c]
  40ea34:	mov    rax,QWORD PTR [rbp-0x18]
  40ea38:	mov    DWORD PTR [rax],edx
  40ea3a:	jmp    41184c <_start@@Base+0xc6ec>
  40ea3f:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea43:	mov    rcx,QWORD PTR [rbp-0x50]
  40ea47:	mov    rax,QWORD PTR [rbp-0x48]
  40ea4b:	mov    rsi,rcx
  40ea4e:	mov    rdi,rax
  40ea51:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ea56:	mov    QWORD PTR [rbp-0x50],rax
  40ea5a:	jmp    41184c <_start@@Base+0xc6ec>
  40ea5f:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea63:	mov    rcx,QWORD PTR [rbp-0x50]
  40ea67:	mov    rax,QWORD PTR [rbp-0x48]
  40ea6b:	mov    rsi,rcx
  40ea6e:	mov    rdi,rax
  40ea71:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ea76:	mov    QWORD PTR [rbp-0x50],rax
  40ea7a:	jmp    41184c <_start@@Base+0xc6ec>
  40ea7f:	movabs rax,0xffffffff00000000
  40ea89:	and    rax,QWORD PTR [rbp-0x28]
  40ea8d:	mov    rdx,rax
  40ea90:	movabs rax,0x6d616e6100000000
  40ea9a:	cmp    rdx,rax
  40ea9d:	jne    40ebd7 <_start@@Base+0x9a77>
  40eaa3:	mov    rax,QWORD PTR [rbp-0x50]
  40eaa7:	mov    QWORD PTR [rbp-0x20],rax
  40eaab:	mov    rdx,QWORD PTR [rbp-0x58]
  40eaaf:	mov    rsi,QWORD PTR [rbp-0x20]
  40eab3:	mov    rax,QWORD PTR [rbp-0x48]
  40eab7:	mov    ecx,0x4
  40eabc:	mov    rdi,rax
  40eabf:	call   405c76 <_start@@Base+0xb16>
  40eac4:	mov    QWORD PTR [rbp-0x50],rax
  40eac8:	mov    rax,QWORD PTR [rbp-0x20]
  40eacc:	cmp    rax,QWORD PTR [rbp-0x50]
  40ead0:	je     40ebb7 <_start@@Base+0x9a57>
  40ead6:	mov    WORD PTR [rbp-0x30],0x0
  40eadc:	mov    rax,QWORD PTR [rbp-0x50]
  40eae0:	mov    QWORD PTR [rbp-0x20],rax
  40eae4:	lea    rcx,[rbp-0x30]
  40eae8:	mov    rdx,QWORD PTR [rbp-0x58]
  40eaec:	mov    rsi,QWORD PTR [rbp-0x20]
  40eaf0:	mov    rax,QWORD PTR [rbp-0x48]
  40eaf4:	mov    rdi,rax
  40eaf7:	call   406827 <_start@@Base+0x16c7>
  40eafc:	mov    QWORD PTR [rbp-0x50],rax
  40eb00:	mov    rax,QWORD PTR [rbp-0x20]
  40eb04:	cmp    rax,QWORD PTR [rbp-0x50]
  40eb08:	jne    40eb54 <_start@@Base+0x99f4>
  40eb0a:	mov    rax,QWORD PTR [rbp-0x50]
  40eb0e:	mov    QWORD PTR [rbp-0x20],rax
  40eb12:	lea    rcx,[rbp-0x30]
  40eb16:	mov    rdx,QWORD PTR [rbp-0x58]
  40eb1a:	mov    rsi,QWORD PTR [rbp-0x20]
  40eb1e:	mov    rax,QWORD PTR [rbp-0x48]
  40eb22:	mov    r8,rcx
  40eb25:	lea    rcx,[rip+0x37a14]        # 446540 <__data_start@@Base+0x480>
  40eb2c:	mov    rdi,rax
  40eb2f:	call   4072c6 <_start@@Base+0x2166>
  40eb34:	mov    QWORD PTR [rbp-0x50],rax
  40eb38:	mov    rax,QWORD PTR [rbp-0x50]
  40eb3c:	cmp    rax,QWORD PTR [rbp-0x20]
  40eb40:	je     411985 <_start@@Base+0xc825>
  40eb46:	mov    rax,QWORD PTR [rbp-0x50]
  40eb4a:	cmp    rax,QWORD PTR [rbp-0x58]
  40eb4e:	je     411985 <_start@@Base+0xc825>
  40eb54:	movzx  eax,WORD PTR [rbp-0x30]
  40eb58:	cmp    ax,0x96
  40eb5c:	jne    40eb70 <_start@@Base+0x9a10>
  40eb5e:	mov    rax,QWORD PTR [rbp-0x48]
  40eb62:	mov    eax,DWORD PTR [rax+0x10]
  40eb65:	and    eax,0x2
  40eb68:	test   eax,eax
  40eb6a:	je     41184c <_start@@Base+0xc6ec>
  40eb70:	mov    rax,QWORD PTR [rbp-0x48]
  40eb74:	mov    rax,QWORD PTR [rax]
  40eb77:	mov    ecx,0x2
  40eb7c:	mov    edx,0x2
  40eb81:	mov    esi,0x1
  40eb86:	mov    rdi,rax
  40eb89:	call   41f93b <flatcc_builder_table_add@@Base>
  40eb8e:	mov    QWORD PTR [rbp-0x10],rax
  40eb92:	cmp    QWORD PTR [rbp-0x10],0x0
  40eb97:	je     41191e <_start@@Base+0xc7be>
  40eb9d:	movzx  eax,WORD PTR [rbp-0x30]
  40eba1:	movsx  edx,ax
  40eba4:	mov    rax,QWORD PTR [rbp-0x10]
  40eba8:	mov    esi,edx
  40ebaa:	mov    rdi,rax
  40ebad:	call   405382 <_start@@Base+0x222>
  40ebb2:	jmp    41184c <_start@@Base+0xc6ec>
  40ebb7:	mov    rdx,QWORD PTR [rbp-0x58]
  40ebbb:	mov    rcx,QWORD PTR [rbp-0x50]
  40ebbf:	mov    rax,QWORD PTR [rbp-0x48]
  40ebc3:	mov    rsi,rcx
  40ebc6:	mov    rdi,rax
  40ebc9:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ebce:	mov    QWORD PTR [rbp-0x50],rax
  40ebd2:	jmp    41184c <_start@@Base+0xc6ec>
  40ebd7:	mov    rdx,QWORD PTR [rbp-0x58]
  40ebdb:	mov    rcx,QWORD PTR [rbp-0x50]
  40ebdf:	mov    rax,QWORD PTR [rbp-0x48]
  40ebe3:	mov    rsi,rcx
  40ebe6:	mov    rdi,rax
  40ebe9:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ebee:	mov    QWORD PTR [rbp-0x50],rax
  40ebf2:	jmp    41184c <_start@@Base+0xc6ec>
  40ebf7:	movabs rax,0x74657373ffffffff
  40ec01:	cmp    QWORD PTR [rbp-0x28],rax
  40ec05:	ja     40ef52 <_start@@Base+0x9df2>
  40ec0b:	movabs rax,0x706172656e745f6d
  40ec15:	cmp    QWORD PTR [rbp-0x28],rax
  40ec19:	ja     40ed0a <_start@@Base+0x9baa>
  40ec1f:	movabs rax,0xffffffff00000000
  40ec29:	and    rax,QWORD PTR [rbp-0x28]
  40ec2d:	mov    rdx,rax
  40ec30:	movabs rax,0x6e616d6500000000
  40ec3a:	cmp    rdx,rax
  40ec3d:	jne    40ecea <_start@@Base+0x9b8a>
  40ec43:	mov    rax,QWORD PTR [rbp-0x50]
  40ec47:	mov    QWORD PTR [rbp-0x20],rax
  40ec4b:	mov    rdx,QWORD PTR [rbp-0x58]
  40ec4f:	mov    rsi,QWORD PTR [rbp-0x20]
  40ec53:	mov    rax,QWORD PTR [rbp-0x48]
  40ec57:	mov    ecx,0x4
  40ec5c:	mov    rdi,rax
  40ec5f:	call   405c76 <_start@@Base+0xb16>
  40ec64:	mov    QWORD PTR [rbp-0x50],rax
  40ec68:	mov    rax,QWORD PTR [rbp-0x20]
  40ec6c:	cmp    rax,QWORD PTR [rbp-0x50]
  40ec70:	je     40ecca <_start@@Base+0x9b6a>
  40ec72:	lea    rcx,[rbp-0x3c]
  40ec76:	mov    rdx,QWORD PTR [rbp-0x58]
  40ec7a:	mov    rsi,QWORD PTR [rbp-0x50]
  40ec7e:	mov    rax,QWORD PTR [rbp-0x48]
  40ec82:	mov    rdi,rax
  40ec85:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40ec8a:	mov    QWORD PTR [rbp-0x50],rax
  40ec8e:	mov    eax,DWORD PTR [rbp-0x3c]
  40ec91:	test   eax,eax
  40ec93:	je     411985 <_start@@Base+0xc825>
  40ec99:	mov    rax,QWORD PTR [rbp-0x48]
  40ec9d:	mov    rax,QWORD PTR [rax]
  40eca0:	mov    esi,0x3
  40eca5:	mov    rdi,rax
  40eca8:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40ecad:	mov    QWORD PTR [rbp-0x18],rax
  40ecb1:	cmp    QWORD PTR [rbp-0x18],0x0
  40ecb6:	je     411985 <_start@@Base+0xc825>
  40ecbc:	mov    edx,DWORD PTR [rbp-0x3c]
  40ecbf:	mov    rax,QWORD PTR [rbp-0x18]
  40ecc3:	mov    DWORD PTR [rax],edx
  40ecc5:	jmp    41184c <_start@@Base+0xc6ec>
  40ecca:	mov    rdx,QWORD PTR [rbp-0x58]
  40ecce:	mov    rcx,QWORD PTR [rbp-0x50]
  40ecd2:	mov    rax,QWORD PTR [rbp-0x48]
  40ecd6:	mov    rsi,rcx
  40ecd9:	mov    rdi,rax
  40ecdc:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ece1:	mov    QWORD PTR [rbp-0x50],rax
  40ece5:	jmp    41184c <_start@@Base+0xc6ec>
  40ecea:	mov    rdx,QWORD PTR [rbp-0x58]
  40ecee:	mov    rcx,QWORD PTR [rbp-0x50]
  40ecf2:	mov    rax,QWORD PTR [rbp-0x48]
  40ecf6:	mov    rsi,rcx
  40ecf9:	mov    rdi,rax
  40ecfc:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ed01:	mov    QWORD PTR [rbp-0x50],rax
  40ed05:	jmp    41184c <_start@@Base+0xc6ec>
  40ed0a:	movabs rax,0x706172656e745f6e
  40ed14:	cmp    QWORD PTR [rbp-0x28],rax
  40ed18:	jne    40ee71 <_start@@Base+0x9d11>
  40ed1e:	add    QWORD PTR [rbp-0x50],0x8
  40ed23:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed27:	mov    rax,QWORD PTR [rbp-0x50]
  40ed2b:	mov    rsi,rdx
  40ed2e:	mov    rdi,rax
  40ed31:	call   405779 <_start@@Base+0x619>
  40ed36:	mov    QWORD PTR [rbp-0x28],rax
  40ed3a:	movabs rax,0x616d657370616365
  40ed44:	cmp    QWORD PTR [rbp-0x28],rax
  40ed48:	jne    40ee51 <_start@@Base+0x9cf1>
  40ed4e:	add    QWORD PTR [rbp-0x50],0x8
  40ed53:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed57:	mov    rax,QWORD PTR [rbp-0x50]
  40ed5b:	mov    rsi,rdx
  40ed5e:	mov    rdi,rax
  40ed61:	call   405779 <_start@@Base+0x619>
  40ed66:	mov    QWORD PTR [rbp-0x28],rax
  40ed6a:	mov    rax,QWORD PTR [rbp-0x28]
  40ed6e:	and    rax,0xffffffffff000000
  40ed74:	mov    rdx,rax
  40ed77:	movabs rax,0x5f74657374000000
  40ed81:	cmp    rdx,rax
  40ed84:	jne    40ee31 <_start@@Base+0x9cd1>
  40ed8a:	mov    rax,QWORD PTR [rbp-0x50]
  40ed8e:	mov    QWORD PTR [rbp-0x20],rax
  40ed92:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed96:	mov    rsi,QWORD PTR [rbp-0x20]
  40ed9a:	mov    rax,QWORD PTR [rbp-0x48]
  40ed9e:	mov    ecx,0x5
  40eda3:	mov    rdi,rax
  40eda6:	call   405c76 <_start@@Base+0xb16>
  40edab:	mov    QWORD PTR [rbp-0x50],rax
  40edaf:	mov    rax,QWORD PTR [rbp-0x20]
  40edb3:	cmp    rax,QWORD PTR [rbp-0x50]
  40edb7:	je     40ee11 <_start@@Base+0x9cb1>
  40edb9:	lea    rcx,[rbp-0x3c]
  40edbd:	mov    rdx,QWORD PTR [rbp-0x58]
  40edc1:	mov    rsi,QWORD PTR [rbp-0x50]
  40edc5:	mov    rax,QWORD PTR [rbp-0x48]
  40edc9:	mov    rdi,rax
  40edcc:	call   408522 <_start@@Base+0x33c2>
  40edd1:	mov    QWORD PTR [rbp-0x50],rax
  40edd5:	mov    eax,DWORD PTR [rbp-0x3c]
  40edd8:	test   eax,eax
  40edda:	je     411985 <_start@@Base+0xc825>
  40ede0:	mov    rax,QWORD PTR [rbp-0x48]
  40ede4:	mov    rax,QWORD PTR [rax]
  40ede7:	mov    esi,0x22
  40edec:	mov    rdi,rax
  40edef:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40edf4:	mov    QWORD PTR [rbp-0x18],rax
  40edf8:	cmp    QWORD PTR [rbp-0x18],0x0
  40edfd:	je     411985 <_start@@Base+0xc825>
  40ee03:	mov    edx,DWORD PTR [rbp-0x3c]
  40ee06:	mov    rax,QWORD PTR [rbp-0x18]
  40ee0a:	mov    DWORD PTR [rax],edx
  40ee0c:	jmp    41184c <_start@@Base+0xc6ec>
  40ee11:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee15:	mov    rcx,QWORD PTR [rbp-0x50]
  40ee19:	mov    rax,QWORD PTR [rbp-0x48]
  40ee1d:	mov    rsi,rcx
  40ee20:	mov    rdi,rax
  40ee23:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ee28:	mov    QWORD PTR [rbp-0x50],rax
  40ee2c:	jmp    41184c <_start@@Base+0xc6ec>
  40ee31:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee35:	mov    rcx,QWORD PTR [rbp-0x50]
  40ee39:	mov    rax,QWORD PTR [rbp-0x48]
  40ee3d:	mov    rsi,rcx
  40ee40:	mov    rdi,rax
  40ee43:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ee48:	mov    QWORD PTR [rbp-0x50],rax
  40ee4c:	jmp    41184c <_start@@Base+0xc6ec>
  40ee51:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee55:	mov    rcx,QWORD PTR [rbp-0x50]
  40ee59:	mov    rax,QWORD PTR [rbp-0x48]
  40ee5d:	mov    rsi,rcx
  40ee60:	mov    rdi,rax
  40ee63:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ee68:	mov    QWORD PTR [rbp-0x50],rax
  40ee6c:	jmp    41184c <_start@@Base+0xc6ec>
  40ee71:	movabs rax,0xffffff0000000000
  40ee7b:	and    rax,QWORD PTR [rbp-0x28]
  40ee7f:	mov    rdx,rax
  40ee82:	movabs rax,0x706f730000000000
  40ee8c:	cmp    rdx,rax
  40ee8f:	jne    40ef32 <_start@@Base+0x9dd2>
  40ee95:	mov    rax,QWORD PTR [rbp-0x50]
  40ee99:	mov    QWORD PTR [rbp-0x20],rax
  40ee9d:	mov    rdx,QWORD PTR [rbp-0x58]
  40eea1:	mov    rsi,QWORD PTR [rbp-0x20]
  40eea5:	mov    rax,QWORD PTR [rbp-0x48]
  40eea9:	mov    ecx,0x3
  40eeae:	mov    rdi,rax
  40eeb1:	call   405c76 <_start@@Base+0xb16>
  40eeb6:	mov    QWORD PTR [rbp-0x50],rax
  40eeba:	mov    rax,QWORD PTR [rbp-0x20]
  40eebe:	cmp    rax,QWORD PTR [rbp-0x50]
  40eec2:	je     40ef12 <_start@@Base+0x9db2>
  40eec4:	mov    rax,QWORD PTR [rbp-0x48]
  40eec8:	mov    rax,QWORD PTR [rax]
  40eecb:	mov    ecx,0x10
  40eed0:	mov    edx,0x20
  40eed5:	mov    esi,0x0
  40eeda:	mov    rdi,rax
  40eedd:	call   41f93b <flatcc_builder_table_add@@Base>
  40eee2:	mov    QWORD PTR [rbp-0x10],rax
  40eee6:	cmp    QWORD PTR [rbp-0x10],0x0
  40eeeb:	je     411921 <_start@@Base+0xc7c1>
  40eef1:	mov    rcx,QWORD PTR [rbp-0x10]
  40eef5:	mov    rdx,QWORD PTR [rbp-0x58]
  40eef9:	mov    rsi,QWORD PTR [rbp-0x50]
  40eefd:	mov    rax,QWORD PTR [rbp-0x48]
  40ef01:	mov    rdi,rax
  40ef04:	call   40af2b <_start@@Base+0x5dcb>
  40ef09:	mov    QWORD PTR [rbp-0x50],rax
  40ef0d:	jmp    41184c <_start@@Base+0xc6ec>
  40ef12:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef16:	mov    rcx,QWORD PTR [rbp-0x50]
  40ef1a:	mov    rax,QWORD PTR [rbp-0x48]
  40ef1e:	mov    rsi,rcx
  40ef21:	mov    rdi,rax
  40ef24:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ef29:	mov    QWORD PTR [rbp-0x50],rax
  40ef2d:	jmp    41184c <_start@@Base+0xc6ec>
  40ef32:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef36:	mov    rcx,QWORD PTR [rbp-0x50]
  40ef3a:	mov    rax,QWORD PTR [rbp-0x48]
  40ef3e:	mov    rsi,rcx
  40ef41:	mov    rdi,rax
  40ef44:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ef49:	mov    QWORD PTR [rbp-0x50],rax
  40ef4d:	jmp    41184c <_start@@Base+0xc6ec>
  40ef52:	mov    rax,QWORD PTR [rbp-0x28]
  40ef56:	and    rax,0xffffffffff000000
  40ef5c:	mov    rdx,rax
  40ef5f:	movabs rax,0x7465737434000000
  40ef69:	cmp    rdx,rax
  40ef6c:	jne    40f099 <_start@@Base+0x9f39>
  40ef72:	mov    rax,QWORD PTR [rbp-0x50]
  40ef76:	mov    QWORD PTR [rbp-0x20],rax
  40ef7a:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef7e:	mov    rsi,QWORD PTR [rbp-0x20]
  40ef82:	mov    rax,QWORD PTR [rbp-0x48]
  40ef86:	mov    ecx,0x5
  40ef8b:	mov    rdi,rax
  40ef8e:	call   405c76 <_start@@Base+0xb16>
  40ef93:	mov    QWORD PTR [rbp-0x50],rax
  40ef97:	mov    rax,QWORD PTR [rbp-0x20]
  40ef9b:	cmp    rax,QWORD PTR [rbp-0x50]
  40ef9f:	je     40f127 <_start@@Base+0x9fc7>
  40efa5:	mov    rax,QWORD PTR [rbp-0x48]
  40efa9:	mov    rax,QWORD PTR [rax]
  40efac:	mov    ecx,0x3fffffff
  40efb1:	mov    edx,0x2
  40efb6:	mov    esi,0x4
  40efbb:	mov    rdi,rax
  40efbe:	call   41d59d <flatcc_builder_start_vector@@Base>
  40efc3:	test   eax,eax
  40efc5:	jne    411924 <_start@@Base+0xc7c4>
  40efcb:	lea    rcx,[rbp-0x40]
  40efcf:	mov    rdx,QWORD PTR [rbp-0x58]
  40efd3:	mov    rsi,QWORD PTR [rbp-0x50]
  40efd7:	mov    rax,QWORD PTR [rbp-0x48]
  40efdb:	mov    rdi,rax
  40efde:	call   405a7b <_start@@Base+0x91b>
  40efe3:	mov    QWORD PTR [rbp-0x50],rax
  40efe7:	jmp    40f044 <_start@@Base+0x9ee4>
  40efe9:	mov    rax,QWORD PTR [rbp-0x48]
  40efed:	mov    rax,QWORD PTR [rax]
  40eff0:	mov    esi,0x1
  40eff5:	mov    rdi,rax
  40eff8:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  40effd:	mov    QWORD PTR [rbp-0x10],rax
  40f001:	cmp    QWORD PTR [rbp-0x10],0x0
  40f006:	je     411927 <_start@@Base+0xc7c7>
  40f00c:	mov    rcx,QWORD PTR [rbp-0x10]
  40f010:	mov    rdx,QWORD PTR [rbp-0x58]
  40f014:	mov    rsi,QWORD PTR [rbp-0x50]
  40f018:	mov    rax,QWORD PTR [rbp-0x48]
  40f01c:	mov    rdi,rax
  40f01f:	call   4096a0 <_start@@Base+0x4540>
  40f024:	mov    QWORD PTR [rbp-0x50],rax
  40f028:	lea    rcx,[rbp-0x40]
  40f02c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f030:	mov    rsi,QWORD PTR [rbp-0x50]
  40f034:	mov    rax,QWORD PTR [rbp-0x48]
  40f038:	mov    rdi,rax
  40f03b:	call   405b38 <_start@@Base+0x9d8>
  40f040:	mov    QWORD PTR [rbp-0x50],rax
  40f044:	mov    eax,DWORD PTR [rbp-0x40]
  40f047:	test   eax,eax
  40f049:	jne    40efe9 <_start@@Base+0x9e89>
  40f04b:	mov    rax,QWORD PTR [rbp-0x48]
  40f04f:	mov    rax,QWORD PTR [rax]
  40f052:	mov    rdi,rax
  40f055:	call   41e773 <flatcc_builder_end_vector@@Base>
  40f05a:	mov    DWORD PTR [rbp-0x3c],eax
  40f05d:	mov    eax,DWORD PTR [rbp-0x3c]
  40f060:	test   eax,eax
  40f062:	je     411985 <_start@@Base+0xc825>
  40f068:	mov    rax,QWORD PTR [rbp-0x48]
  40f06c:	mov    rax,QWORD PTR [rax]
  40f06f:	mov    esi,0x9
  40f074:	mov    rdi,rax
  40f077:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40f07c:	mov    QWORD PTR [rbp-0x18],rax
  40f080:	cmp    QWORD PTR [rbp-0x18],0x0
  40f085:	je     411985 <_start@@Base+0xc825>
  40f08b:	mov    edx,DWORD PTR [rbp-0x3c]
  40f08e:	mov    rax,QWORD PTR [rbp-0x18]
  40f092:	mov    DWORD PTR [rax],edx
  40f094:	jmp    41184c <_start@@Base+0xc6ec>
  40f099:	movabs rax,0xffffffff00000000
  40f0a3:	and    rax,QWORD PTR [rbp-0x28]
  40f0a7:	mov    rdx,rax
  40f0aa:	movabs rax,0x7465737400000000
  40f0b4:	cmp    rdx,rax
  40f0b7:	jne    40f12a <_start@@Base+0x9fca>
  40f0b9:	mov    rax,QWORD PTR [rbp-0x50]
  40f0bd:	mov    QWORD PTR [rbp-0x20],rax
  40f0c1:	mov    rdx,QWORD PTR [rbp-0x58]
  40f0c5:	mov    rsi,QWORD PTR [rbp-0x20]
  40f0c9:	mov    rax,QWORD PTR [rbp-0x48]
  40f0cd:	mov    ecx,0x4
  40f0d2:	mov    rdi,rax
  40f0d5:	call   405c76 <_start@@Base+0xb16>
  40f0da:	mov    QWORD PTR [rbp-0x50],rax
  40f0de:	mov    rax,QWORD PTR [rbp-0x20]
  40f0e2:	cmp    rax,QWORD PTR [rbp-0x50]
  40f0e6:	je     40f12d <_start@@Base+0x9fcd>
  40f0e8:	mov    rdi,QWORD PTR [rbp-0x38]
  40f0ec:	mov    rdx,QWORD PTR [rbp-0x58]
  40f0f0:	mov    rsi,QWORD PTR [rbp-0x50]
  40f0f4:	mov    rax,QWORD PTR [rbp-0x48]
  40f0f8:	sub    rsp,0x8
  40f0fc:	lea    rcx,[rip+0xffffffffffffa0d3]        # 4091d6 <_start@@Base+0x4076>
  40f103:	push   rcx
  40f104:	mov    r9,rdi
  40f107:	mov    r8d,0x8
  40f10d:	mov    ecx,0x0
  40f112:	mov    rdi,rax
  40f115:	call   42841f <flatcc_json_parser_union@@Base>
  40f11a:	add    rsp,0x10
  40f11e:	mov    QWORD PTR [rbp-0x50],rax
  40f122:	jmp    41184c <_start@@Base+0xc6ec>
  40f127:	nop
  40f128:	jmp    40f12e <_start@@Base+0x9fce>
  40f12a:	nop
  40f12b:	jmp    40f12e <_start@@Base+0x9fce>
  40f12d:	nop
  40f12e:	mov    rax,QWORD PTR [rbp-0x28]
  40f132:	and    rax,0xffffffffff000000
  40f138:	mov    rdx,rax
  40f13b:	movabs rax,0x7465737435000000
  40f145:	cmp    rdx,rax
  40f148:	jne    40f275 <_start@@Base+0xa115>
  40f14e:	mov    rax,QWORD PTR [rbp-0x50]
  40f152:	mov    QWORD PTR [rbp-0x20],rax
  40f156:	mov    rdx,QWORD PTR [rbp-0x58]
  40f15a:	mov    rsi,QWORD PTR [rbp-0x20]
  40f15e:	mov    rax,QWORD PTR [rbp-0x48]
  40f162:	mov    ecx,0x5
  40f167:	mov    rdi,rax
  40f16a:	call   405c76 <_start@@Base+0xb16>
  40f16f:	mov    QWORD PTR [rbp-0x50],rax
  40f173:	mov    rax,QWORD PTR [rbp-0x20]
  40f177:	cmp    rax,QWORD PTR [rbp-0x50]
  40f17b:	je     40f278 <_start@@Base+0xa118>
  40f181:	mov    rax,QWORD PTR [rbp-0x48]
  40f185:	mov    rax,QWORD PTR [rax]
  40f188:	mov    ecx,0x3fffffff
  40f18d:	mov    edx,0x2
  40f192:	mov    esi,0x4
  40f197:	mov    rdi,rax
  40f19a:	call   41d59d <flatcc_builder_start_vector@@Base>
  40f19f:	test   eax,eax
  40f1a1:	jne    41192a <_start@@Base+0xc7ca>
  40f1a7:	lea    rcx,[rbp-0x40]
  40f1ab:	mov    rdx,QWORD PTR [rbp-0x58]
  40f1af:	mov    rsi,QWORD PTR [rbp-0x50]
  40f1b3:	mov    rax,QWORD PTR [rbp-0x48]
  40f1b7:	mov    rdi,rax
  40f1ba:	call   405a7b <_start@@Base+0x91b>
  40f1bf:	mov    QWORD PTR [rbp-0x50],rax
  40f1c3:	jmp    40f220 <_start@@Base+0xa0c0>
  40f1c5:	mov    rax,QWORD PTR [rbp-0x48]
  40f1c9:	mov    rax,QWORD PTR [rax]
  40f1cc:	mov    esi,0x1
  40f1d1:	mov    rdi,rax
  40f1d4:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  40f1d9:	mov    QWORD PTR [rbp-0x10],rax
  40f1dd:	cmp    QWORD PTR [rbp-0x10],0x0
  40f1e2:	je     41192d <_start@@Base+0xc7cd>
  40f1e8:	mov    rcx,QWORD PTR [rbp-0x10]
  40f1ec:	mov    rdx,QWORD PTR [rbp-0x58]
  40f1f0:	mov    rsi,QWORD PTR [rbp-0x50]
  40f1f4:	mov    rax,QWORD PTR [rbp-0x48]
  40f1f8:	mov    rdi,rax
  40f1fb:	call   4096a0 <_start@@Base+0x4540>
  40f200:	mov    QWORD PTR [rbp-0x50],rax
  40f204:	lea    rcx,[rbp-0x40]
  40f208:	mov    rdx,QWORD PTR [rbp-0x58]
  40f20c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f210:	mov    rax,QWORD PTR [rbp-0x48]
  40f214:	mov    rdi,rax
  40f217:	call   405b38 <_start@@Base+0x9d8>
  40f21c:	mov    QWORD PTR [rbp-0x50],rax
  40f220:	mov    eax,DWORD PTR [rbp-0x40]
  40f223:	test   eax,eax
  40f225:	jne    40f1c5 <_start@@Base+0xa065>
  40f227:	mov    rax,QWORD PTR [rbp-0x48]
  40f22b:	mov    rax,QWORD PTR [rax]
  40f22e:	mov    rdi,rax
  40f231:	call   41e773 <flatcc_builder_end_vector@@Base>
  40f236:	mov    DWORD PTR [rbp-0x3c],eax
  40f239:	mov    eax,DWORD PTR [rbp-0x3c]
  40f23c:	test   eax,eax
  40f23e:	je     411985 <_start@@Base+0xc825>
  40f244:	mov    rax,QWORD PTR [rbp-0x48]
  40f248:	mov    rax,QWORD PTR [rax]
  40f24b:	mov    esi,0x1f
  40f250:	mov    rdi,rax
  40f253:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40f258:	mov    QWORD PTR [rbp-0x18],rax
  40f25c:	cmp    QWORD PTR [rbp-0x18],0x0
  40f261:	je     411985 <_start@@Base+0xc825>
  40f267:	mov    edx,DWORD PTR [rbp-0x3c]
  40f26a:	mov    rax,QWORD PTR [rbp-0x18]
  40f26e:	mov    DWORD PTR [rax],edx
  40f270:	jmp    41184c <_start@@Base+0xc6ec>
  40f275:	nop
  40f276:	jmp    40f279 <_start@@Base+0xa119>
  40f278:	nop
  40f279:	movabs rax,0x746573745f747970
  40f283:	cmp    QWORD PTR [rbp-0x28],rax
  40f287:	jne    40f37f <_start@@Base+0xa21f>
  40f28d:	add    QWORD PTR [rbp-0x50],0x8
  40f292:	mov    rdx,QWORD PTR [rbp-0x58]
  40f296:	mov    rax,QWORD PTR [rbp-0x50]
  40f29a:	mov    rsi,rdx
  40f29d:	mov    rdi,rax
  40f2a0:	call   405779 <_start@@Base+0x619>
  40f2a5:	mov    QWORD PTR [rbp-0x28],rax
  40f2a9:	movabs rax,0xff00000000000000
  40f2b3:	and    rax,QWORD PTR [rbp-0x28]
  40f2b7:	mov    rdx,rax
  40f2ba:	movabs rax,0x6500000000000000
  40f2c4:	cmp    rdx,rax
  40f2c7:	jne    40f35f <_start@@Base+0xa1ff>
  40f2cd:	mov    rax,QWORD PTR [rbp-0x50]
  40f2d1:	mov    QWORD PTR [rbp-0x20],rax
  40f2d5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f2d9:	mov    rsi,QWORD PTR [rbp-0x20]
  40f2dd:	mov    rax,QWORD PTR [rbp-0x48]
  40f2e1:	mov    ecx,0x1
  40f2e6:	mov    rdi,rax
  40f2e9:	call   405c76 <_start@@Base+0xb16>
  40f2ee:	mov    QWORD PTR [rbp-0x50],rax
  40f2f2:	mov    rax,QWORD PTR [rbp-0x20]
  40f2f6:	cmp    rax,QWORD PTR [rbp-0x50]
  40f2fa:	je     40f33f <_start@@Base+0xa1df>
  40f2fc:	mov    rdi,QWORD PTR [rbp-0x38]
  40f300:	mov    rdx,QWORD PTR [rbp-0x58]
  40f304:	mov    rsi,QWORD PTR [rbp-0x50]
  40f308:	mov    rax,QWORD PTR [rbp-0x48]
  40f30c:	lea    rcx,[rip+0xffffffffffff9ec3]        # 4091d6 <_start@@Base+0x4076>
  40f313:	push   rcx
  40f314:	lea    rcx,[rip+0x37245]        # 446560 <__data_start@@Base+0x4a0>
  40f31b:	push   rcx
  40f31c:	mov    r9,rdi
  40f31f:	mov    r8d,0x8
  40f325:	mov    ecx,0x0
  40f32a:	mov    rdi,rax
  40f32d:	call   4285f8 <flatcc_json_parser_union_type@@Base>
  40f332:	add    rsp,0x10
  40f336:	mov    QWORD PTR [rbp-0x50],rax
  40f33a:	jmp    41184c <_start@@Base+0xc6ec>
  40f33f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f343:	mov    rcx,QWORD PTR [rbp-0x50]
  40f347:	mov    rax,QWORD PTR [rbp-0x48]
  40f34b:	mov    rsi,rcx
  40f34e:	mov    rdi,rax
  40f351:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f356:	mov    QWORD PTR [rbp-0x50],rax
  40f35a:	jmp    41184c <_start@@Base+0xc6ec>
  40f35f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f363:	mov    rcx,QWORD PTR [rbp-0x50]
  40f367:	mov    rax,QWORD PTR [rbp-0x48]
  40f36b:	mov    rsi,rcx
  40f36e:	mov    rdi,rax
  40f371:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f376:	mov    QWORD PTR [rbp-0x50],rax
  40f37a:	jmp    41184c <_start@@Base+0xc6ec>
  40f37f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f383:	mov    rcx,QWORD PTR [rbp-0x50]
  40f387:	mov    rax,QWORD PTR [rbp-0x48]
  40f38b:	mov    rsi,rcx
  40f38e:	mov    rdi,rax
  40f391:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f396:	mov    QWORD PTR [rbp-0x50],rax
  40f39a:	jmp    41184c <_start@@Base+0xc6ec>
  40f39f:	movabs rax,0x746573746632ffff
  40f3a9:	cmp    QWORD PTR [rbp-0x28],rax
  40f3ad:	ja     410365 <_start@@Base+0xb205>
  40f3b3:	movabs rax,0x7465737461727261
  40f3bd:	cmp    QWORD PTR [rbp-0x28],rax
  40f3c1:	jne    40fc95 <_start@@Base+0xab35>
  40f3c7:	add    QWORD PTR [rbp-0x50],0x8
  40f3cc:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3d0:	mov    rax,QWORD PTR [rbp-0x50]
  40f3d4:	mov    rsi,rdx
  40f3d7:	mov    rdi,rax
  40f3da:	call   405779 <_start@@Base+0x619>
  40f3df:	mov    QWORD PTR [rbp-0x28],rax
  40f3e3:	movabs rax,0x796f66737472696d
  40f3ed:	cmp    QWORD PTR [rbp-0x28],rax
  40f3f1:	ja     40f785 <_start@@Base+0xa625>
  40f3f7:	movabs rax,0x796f66626f6f6c73
  40f401:	cmp    QWORD PTR [rbp-0x28],rax
  40f405:	jne    40f5ae <_start@@Base+0xa44e>
  40f40b:	mov    rax,QWORD PTR [rbp-0x50]
  40f40f:	mov    QWORD PTR [rbp-0x20],rax
  40f413:	mov    rdx,QWORD PTR [rbp-0x58]
  40f417:	mov    rsi,QWORD PTR [rbp-0x20]
  40f41b:	mov    rax,QWORD PTR [rbp-0x48]
  40f41f:	mov    ecx,0x8
  40f424:	mov    rdi,rax
  40f427:	call   405c76 <_start@@Base+0xb16>
  40f42c:	mov    QWORD PTR [rbp-0x50],rax
  40f430:	mov    rax,QWORD PTR [rbp-0x20]
  40f434:	cmp    rax,QWORD PTR [rbp-0x50]
  40f438:	je     40f5b1 <_start@@Base+0xa451>
  40f43e:	mov    rax,QWORD PTR [rbp-0x48]
  40f442:	mov    rax,QWORD PTR [rax]
  40f445:	mov    ecx,0xffffffff
  40f44a:	mov    edx,0x1
  40f44f:	mov    esi,0x1
  40f454:	mov    rdi,rax
  40f457:	call   41d59d <flatcc_builder_start_vector@@Base>
  40f45c:	test   eax,eax
  40f45e:	jne    411930 <_start@@Base+0xc7d0>
  40f464:	lea    rcx,[rbp-0x40]
  40f468:	mov    rdx,QWORD PTR [rbp-0x58]
  40f46c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f470:	mov    rax,QWORD PTR [rbp-0x48]
  40f474:	mov    rdi,rax
  40f477:	call   405a7b <_start@@Base+0x91b>
  40f47c:	mov    QWORD PTR [rbp-0x50],rax
  40f480:	jmp    40f555 <_start@@Base+0xa3f5>
  40f485:	mov    BYTE PTR [rbp-0x30],0x0
  40f489:	mov    rax,QWORD PTR [rbp-0x48]
  40f48d:	mov    rax,QWORD PTR [rax]
  40f490:	mov    esi,0x1
  40f495:	mov    rdi,rax
  40f498:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  40f49d:	mov    QWORD PTR [rbp-0x10],rax
  40f4a1:	cmp    QWORD PTR [rbp-0x10],0x0
  40f4a6:	je     411933 <_start@@Base+0xc7d3>
  40f4ac:	mov    rax,QWORD PTR [rbp-0x50]
  40f4b0:	mov    QWORD PTR [rbp-0x20],rax
  40f4b4:	lea    rcx,[rbp-0x30]
  40f4b8:	mov    rdx,QWORD PTR [rbp-0x58]
  40f4bc:	mov    rsi,QWORD PTR [rbp-0x20]
  40f4c0:	mov    rax,QWORD PTR [rbp-0x48]
  40f4c4:	mov    rdi,rax
  40f4c7:	call   4069af <_start@@Base+0x184f>
  40f4cc:	mov    QWORD PTR [rbp-0x50],rax
  40f4d0:	mov    rax,QWORD PTR [rbp-0x20]
  40f4d4:	cmp    rax,QWORD PTR [rbp-0x50]
  40f4d8:	jne    40f524 <_start@@Base+0xa3c4>
  40f4da:	mov    rax,QWORD PTR [rbp-0x50]
  40f4de:	mov    QWORD PTR [rbp-0x20],rax
  40f4e2:	lea    rcx,[rbp-0x30]
  40f4e6:	mov    rdx,QWORD PTR [rbp-0x58]
  40f4ea:	mov    rsi,QWORD PTR [rbp-0x20]
  40f4ee:	mov    rax,QWORD PTR [rbp-0x48]
  40f4f2:	mov    r8,rcx
  40f4f5:	lea    rcx,[rip+0x37084]        # 446580 <__data_start@@Base+0x4c0>
  40f4fc:	mov    rdi,rax
  40f4ff:	call   40757d <_start@@Base+0x241d>
  40f504:	mov    QWORD PTR [rbp-0x50],rax
  40f508:	mov    rax,QWORD PTR [rbp-0x50]
  40f50c:	cmp    rax,QWORD PTR [rbp-0x20]
  40f510:	je     411933 <_start@@Base+0xc7d3>
  40f516:	mov    rax,QWORD PTR [rbp-0x50]
  40f51a:	cmp    rax,QWORD PTR [rbp-0x58]
  40f51e:	je     411933 <_start@@Base+0xc7d3>
  40f524:	movzx  eax,BYTE PTR [rbp-0x30]
  40f528:	movzx  edx,al
  40f52b:	mov    rax,QWORD PTR [rbp-0x10]
  40f52f:	mov    esi,edx
  40f531:	mov    rdi,rax
  40f534:	call   4054c3 <_start@@Base+0x363>
  40f539:	lea    rcx,[rbp-0x40]
  40f53d:	mov    rdx,QWORD PTR [rbp-0x58]
  40f541:	mov    rsi,QWORD PTR [rbp-0x50]
  40f545:	mov    rax,QWORD PTR [rbp-0x48]
  40f549:	mov    rdi,rax
  40f54c:	call   405b38 <_start@@Base+0x9d8>
  40f551:	mov    QWORD PTR [rbp-0x50],rax
  40f555:	mov    eax,DWORD PTR [rbp-0x40]
  40f558:	test   eax,eax
  40f55a:	jne    40f485 <_start@@Base+0xa325>
  40f560:	mov    rax,QWORD PTR [rbp-0x48]
  40f564:	mov    rax,QWORD PTR [rax]
  40f567:	mov    rdi,rax
  40f56a:	call   41e773 <flatcc_builder_end_vector@@Base>
  40f56f:	mov    DWORD PTR [rbp-0x3c],eax
  40f572:	mov    eax,DWORD PTR [rbp-0x3c]
  40f575:	test   eax,eax
  40f577:	je     411985 <_start@@Base+0xc825>
  40f57d:	mov    rax,QWORD PTR [rbp-0x48]
  40f581:	mov    rax,QWORD PTR [rax]
  40f584:	mov    esi,0x18
  40f589:	mov    rdi,rax
  40f58c:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40f591:	mov    QWORD PTR [rbp-0x18],rax
  40f595:	cmp    QWORD PTR [rbp-0x18],0x0
  40f59a:	je     411985 <_start@@Base+0xc825>
  40f5a0:	mov    edx,DWORD PTR [rbp-0x3c]
  40f5a3:	mov    rax,QWORD PTR [rbp-0x18]
  40f5a7:	mov    DWORD PTR [rax],edx
  40f5a9:	jmp    41184c <_start@@Base+0xc6ec>
  40f5ae:	nop
  40f5af:	jmp    40f5b2 <_start@@Base+0xa452>
  40f5b1:	nop
  40f5b2:	movabs rax,0x796f66736f727465
  40f5bc:	cmp    QWORD PTR [rbp-0x28],rax
  40f5c0:	jne    40f765 <_start@@Base+0xa605>
  40f5c6:	add    QWORD PTR [rbp-0x50],0x8
  40f5cb:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5cf:	mov    rax,QWORD PTR [rbp-0x50]
  40f5d3:	mov    rsi,rdx
  40f5d6:	mov    rdi,rax
  40f5d9:	call   405779 <_start@@Base+0x619>
  40f5de:	mov    QWORD PTR [rbp-0x28],rax
  40f5e2:	mov    rax,QWORD PTR [rbp-0x28]
  40f5e6:	mov    al,0x0
  40f5e8:	mov    rdx,rax
  40f5eb:	movabs rax,0x6473747275637400
  40f5f5:	cmp    rdx,rax
  40f5f8:	jne    40f745 <_start@@Base+0xa5e5>
  40f5fe:	mov    rax,QWORD PTR [rbp-0x50]
  40f602:	mov    QWORD PTR [rbp-0x20],rax
  40f606:	mov    rdx,QWORD PTR [rbp-0x58]
  40f60a:	mov    rsi,QWORD PTR [rbp-0x20]
  40f60e:	mov    rax,QWORD PTR [rbp-0x48]
  40f612:	mov    ecx,0x7
  40f617:	mov    rdi,rax
  40f61a:	call   405c76 <_start@@Base+0xb16>
  40f61f:	mov    QWORD PTR [rbp-0x50],rax
  40f623:	mov    rax,QWORD PTR [rbp-0x20]
  40f627:	cmp    rax,QWORD PTR [rbp-0x50]
  40f62b:	je     40f725 <_start@@Base+0xa5c5>
  40f631:	mov    rax,QWORD PTR [rbp-0x48]
  40f635:	mov    rax,QWORD PTR [rax]
  40f638:	mov    ecx,0x1fffffff
  40f63d:	mov    edx,0x4
  40f642:	mov    esi,0x8
  40f647:	mov    rdi,rax
  40f64a:	call   41d59d <flatcc_builder_start_vector@@Base>
  40f64f:	test   eax,eax
  40f651:	jne    411936 <_start@@Base+0xc7d6>
  40f657:	lea    rcx,[rbp-0x40]
  40f65b:	mov    rdx,QWORD PTR [rbp-0x58]
  40f65f:	mov    rsi,QWORD PTR [rbp-0x50]
  40f663:	mov    rax,QWORD PTR [rbp-0x48]
  40f667:	mov    rdi,rax
  40f66a:	call   405a7b <_start@@Base+0x91b>
  40f66f:	mov    QWORD PTR [rbp-0x50],rax
  40f673:	jmp    40f6d0 <_start@@Base+0xa570>
  40f675:	mov    rax,QWORD PTR [rbp-0x48]
  40f679:	mov    rax,QWORD PTR [rax]
  40f67c:	mov    esi,0x1
  40f681:	mov    rdi,rax
  40f684:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  40f689:	mov    QWORD PTR [rbp-0x10],rax
  40f68d:	cmp    QWORD PTR [rbp-0x10],0x0
  40f692:	je     411939 <_start@@Base+0xc7d9>
  40f698:	mov    rcx,QWORD PTR [rbp-0x10]
  40f69c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6a0:	mov    rsi,QWORD PTR [rbp-0x50]
  40f6a4:	mov    rax,QWORD PTR [rbp-0x48]
  40f6a8:	mov    rdi,rax
  40f6ab:	call   40b784 <_start@@Base+0x6624>
  40f6b0:	mov    QWORD PTR [rbp-0x50],rax
  40f6b4:	lea    rcx,[rbp-0x40]
  40f6b8:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6bc:	mov    rsi,QWORD PTR [rbp-0x50]
  40f6c0:	mov    rax,QWORD PTR [rbp-0x48]
  40f6c4:	mov    rdi,rax
  40f6c7:	call   405b38 <_start@@Base+0x9d8>
  40f6cc:	mov    QWORD PTR [rbp-0x50],rax
  40f6d0:	mov    eax,DWORD PTR [rbp-0x40]
  40f6d3:	test   eax,eax
  40f6d5:	jne    40f675 <_start@@Base+0xa515>
  40f6d7:	mov    rax,QWORD PTR [rbp-0x48]
  40f6db:	mov    rax,QWORD PTR [rax]
  40f6de:	mov    rdi,rax
  40f6e1:	call   41e773 <flatcc_builder_end_vector@@Base>
  40f6e6:	mov    DWORD PTR [rbp-0x3c],eax
  40f6e9:	mov    eax,DWORD PTR [rbp-0x3c]
  40f6ec:	test   eax,eax
  40f6ee:	je     411985 <_start@@Base+0xc825>
  40f6f4:	mov    rax,QWORD PTR [rbp-0x48]
  40f6f8:	mov    rax,QWORD PTR [rax]
  40f6fb:	mov    esi,0x1d
  40f700:	mov    rdi,rax
  40f703:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40f708:	mov    QWORD PTR [rbp-0x18],rax
  40f70c:	cmp    QWORD PTR [rbp-0x18],0x0
  40f711:	je     411985 <_start@@Base+0xc825>
  40f717:	mov    edx,DWORD PTR [rbp-0x3c]
  40f71a:	mov    rax,QWORD PTR [rbp-0x18]
  40f71e:	mov    DWORD PTR [rax],edx
  40f720:	jmp    41184c <_start@@Base+0xc6ec>
  40f725:	mov    rdx,QWORD PTR [rbp-0x58]
  40f729:	mov    rcx,QWORD PTR [rbp-0x50]
  40f72d:	mov    rax,QWORD PTR [rbp-0x48]
  40f731:	mov    rsi,rcx
  40f734:	mov    rdi,rax
  40f737:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f73c:	mov    QWORD PTR [rbp-0x50],rax
  40f740:	jmp    41184c <_start@@Base+0xc6ec>
  40f745:	mov    rdx,QWORD PTR [rbp-0x58]
  40f749:	mov    rcx,QWORD PTR [rbp-0x50]
  40f74d:	mov    rax,QWORD PTR [rbp-0x48]
  40f751:	mov    rsi,rcx
  40f754:	mov    rdi,rax
  40f757:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f75c:	mov    QWORD PTR [rbp-0x50],rax
  40f760:	jmp    41184c <_start@@Base+0xc6ec>
  40f765:	mov    rdx,QWORD PTR [rbp-0x58]
  40f769:	mov    rcx,QWORD PTR [rbp-0x50]
  40f76d:	mov    rax,QWORD PTR [rbp-0x48]
  40f771:	mov    rsi,rcx
  40f774:	mov    rdi,rax
  40f777:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f77c:	mov    QWORD PTR [rbp-0x50],rax
  40f780:	jmp    41184c <_start@@Base+0xc6ec>
  40f785:	movabs rax,0x796f66737472696e
  40f78f:	cmp    QWORD PTR [rbp-0x28],rax
  40f793:	jne    40fab5 <_start@@Base+0xa955>
  40f799:	add    QWORD PTR [rbp-0x50],0x8
  40f79e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7a2:	mov    rax,QWORD PTR [rbp-0x50]
  40f7a6:	mov    rsi,rdx
  40f7a9:	mov    rdi,rax
  40f7ac:	call   405779 <_start@@Base+0x619>
  40f7b1:	mov    QWORD PTR [rbp-0x28],rax
  40f7b5:	movabs rax,0xffff000000000000
  40f7bf:	and    rax,QWORD PTR [rbp-0x28]
  40f7c3:	mov    rdx,rax
  40f7c6:	movabs rax,0x6732000000000000
  40f7d0:	cmp    rdx,rax
  40f7d3:	jne    40f925 <_start@@Base+0xa7c5>
  40f7d9:	mov    rax,QWORD PTR [rbp-0x50]
  40f7dd:	mov    QWORD PTR [rbp-0x20],rax
  40f7e1:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7e5:	mov    rsi,QWORD PTR [rbp-0x20]
  40f7e9:	mov    rax,QWORD PTR [rbp-0x48]
  40f7ed:	mov    ecx,0x2
  40f7f2:	mov    rdi,rax
  40f7f5:	call   405c76 <_start@@Base+0xb16>
  40f7fa:	mov    QWORD PTR [rbp-0x50],rax
  40f7fe:	mov    rax,QWORD PTR [rbp-0x20]
  40f802:	cmp    rax,QWORD PTR [rbp-0x50]
  40f806:	je     40f905 <_start@@Base+0xa7a5>
  40f80c:	mov    rax,QWORD PTR [rbp-0x48]
  40f810:	mov    rax,QWORD PTR [rax]
  40f813:	mov    rdi,rax
  40f816:	call   41d63b <flatcc_builder_start_offset_vector@@Base>
  40f81b:	test   eax,eax
  40f81d:	jne    41193c <_start@@Base+0xc7dc>
  40f823:	lea    rcx,[rbp-0x40]
  40f827:	mov    rdx,QWORD PTR [rbp-0x58]
  40f82b:	mov    rsi,QWORD PTR [rbp-0x50]
  40f82f:	mov    rax,QWORD PTR [rbp-0x48]
  40f833:	mov    rdi,rax
  40f836:	call   405a7b <_start@@Base+0x91b>
  40f83b:	mov    QWORD PTR [rbp-0x50],rax
  40f83f:	jmp    40f8b0 <_start@@Base+0xa750>
  40f841:	lea    rcx,[rbp-0x3c]
  40f845:	mov    rdx,QWORD PTR [rbp-0x58]
  40f849:	mov    rsi,QWORD PTR [rbp-0x50]
  40f84d:	mov    rax,QWORD PTR [rbp-0x48]
  40f851:	mov    rdi,rax
  40f854:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40f859:	mov    QWORD PTR [rbp-0x50],rax
  40f85d:	mov    eax,DWORD PTR [rbp-0x3c]
  40f860:	test   eax,eax
  40f862:	je     411985 <_start@@Base+0xc825>
  40f868:	mov    rax,QWORD PTR [rbp-0x48]
  40f86c:	mov    rax,QWORD PTR [rax]
  40f86f:	mov    esi,0x1
  40f874:	mov    rdi,rax
  40f877:	call   41d04b <flatcc_builder_extend_offset_vector@@Base>
  40f87c:	mov    QWORD PTR [rbp-0x18],rax
  40f880:	cmp    QWORD PTR [rbp-0x18],0x0
  40f885:	je     411985 <_start@@Base+0xc825>
  40f88b:	mov    edx,DWORD PTR [rbp-0x3c]
  40f88e:	mov    rax,QWORD PTR [rbp-0x18]
  40f892:	mov    DWORD PTR [rax],edx
  40f894:	lea    rcx,[rbp-0x40]
  40f898:	mov    rdx,QWORD PTR [rbp-0x58]
  40f89c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f8a0:	mov    rax,QWORD PTR [rbp-0x48]
  40f8a4:	mov    rdi,rax
  40f8a7:	call   405b38 <_start@@Base+0x9d8>
  40f8ac:	mov    QWORD PTR [rbp-0x50],rax
  40f8b0:	mov    eax,DWORD PTR [rbp-0x40]
  40f8b3:	test   eax,eax
  40f8b5:	jne    40f841 <_start@@Base+0xa6e1>
  40f8b7:	mov    rax,QWORD PTR [rbp-0x48]
  40f8bb:	mov    rax,QWORD PTR [rax]
  40f8be:	mov    rdi,rax
  40f8c1:	call   41ec2d <flatcc_builder_end_offset_vector@@Base>
  40f8c6:	mov    DWORD PTR [rbp-0x3c],eax
  40f8c9:	mov    eax,DWORD PTR [rbp-0x3c]
  40f8cc:	test   eax,eax
  40f8ce:	je     411985 <_start@@Base+0xc825>
  40f8d4:	mov    rax,QWORD PTR [rbp-0x48]
  40f8d8:	mov    rax,QWORD PTR [rax]
  40f8db:	mov    esi,0x1c
  40f8e0:	mov    rdi,rax
  40f8e3:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40f8e8:	mov    QWORD PTR [rbp-0x18],rax
  40f8ec:	cmp    QWORD PTR [rbp-0x18],0x0
  40f8f1:	je     411985 <_start@@Base+0xc825>
  40f8f7:	mov    edx,DWORD PTR [rbp-0x3c]
  40f8fa:	mov    rax,QWORD PTR [rbp-0x18]
  40f8fe:	mov    DWORD PTR [rax],edx
  40f900:	jmp    41184c <_start@@Base+0xc6ec>
  40f905:	mov    rdx,QWORD PTR [rbp-0x58]
  40f909:	mov    rcx,QWORD PTR [rbp-0x50]
  40f90d:	mov    rax,QWORD PTR [rbp-0x48]
  40f911:	mov    rsi,rcx
  40f914:	mov    rdi,rax
  40f917:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40f91c:	mov    QWORD PTR [rbp-0x50],rax
  40f920:	jmp    41184c <_start@@Base+0xc6ec>
  40f925:	movabs rax,0xff00000000000000
  40f92f:	and    rax,QWORD PTR [rbp-0x28]
  40f933:	mov    rdx,rax
  40f936:	movabs rax,0x6700000000000000
  40f940:	cmp    rdx,rax
  40f943:	jne    40fa95 <_start@@Base+0xa935>
  40f949:	mov    rax,QWORD PTR [rbp-0x50]
  40f94d:	mov    QWORD PTR [rbp-0x20],rax
  40f951:	mov    rdx,QWORD PTR [rbp-0x58]
  40f955:	mov    rsi,QWORD PTR [rbp-0x20]
  40f959:	mov    rax,QWORD PTR [rbp-0x48]
  40f95d:	mov    ecx,0x1
  40f962:	mov    rdi,rax
  40f965:	call   405c76 <_start@@Base+0xb16>
  40f96a:	mov    QWORD PTR [rbp-0x50],rax
  40f96e:	mov    rax,QWORD PTR [rbp-0x20]
  40f972:	cmp    rax,QWORD PTR [rbp-0x50]
  40f976:	je     40fa75 <_start@@Base+0xa915>
  40f97c:	mov    rax,QWORD PTR [rbp-0x48]
  40f980:	mov    rax,QWORD PTR [rax]
  40f983:	mov    rdi,rax
  40f986:	call   41d63b <flatcc_builder_start_offset_vector@@Base>
  40f98b:	test   eax,eax
  40f98d:	jne    41193f <_start@@Base+0xc7df>
  40f993:	lea    rcx,[rbp-0x40]
  40f997:	mov    rdx,QWORD PTR [rbp-0x58]
  40f99b:	mov    rsi,QWORD PTR [rbp-0x50]
  40f99f:	mov    rax,QWORD PTR [rbp-0x48]
  40f9a3:	mov    rdi,rax
  40f9a6:	call   405a7b <_start@@Base+0x91b>
  40f9ab:	mov    QWORD PTR [rbp-0x50],rax
  40f9af:	jmp    40fa20 <_start@@Base+0xa8c0>
  40f9b1:	lea    rcx,[rbp-0x3c]
  40f9b5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9b9:	mov    rsi,QWORD PTR [rbp-0x50]
  40f9bd:	mov    rax,QWORD PTR [rbp-0x48]
  40f9c1:	mov    rdi,rax
  40f9c4:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  40f9c9:	mov    QWORD PTR [rbp-0x50],rax
  40f9cd:	mov    eax,DWORD PTR [rbp-0x3c]
  40f9d0:	test   eax,eax
  40f9d2:	je     411985 <_start@@Base+0xc825>
  40f9d8:	mov    rax,QWORD PTR [rbp-0x48]
  40f9dc:	mov    rax,QWORD PTR [rax]
  40f9df:	mov    esi,0x1
  40f9e4:	mov    rdi,rax
  40f9e7:	call   41d04b <flatcc_builder_extend_offset_vector@@Base>
  40f9ec:	mov    QWORD PTR [rbp-0x18],rax
  40f9f0:	cmp    QWORD PTR [rbp-0x18],0x0
  40f9f5:	je     411985 <_start@@Base+0xc825>
  40f9fb:	mov    edx,DWORD PTR [rbp-0x3c]
  40f9fe:	mov    rax,QWORD PTR [rbp-0x18]
  40fa02:	mov    DWORD PTR [rax],edx
  40fa04:	lea    rcx,[rbp-0x40]
  40fa08:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa0c:	mov    rsi,QWORD PTR [rbp-0x50]
  40fa10:	mov    rax,QWORD PTR [rbp-0x48]
  40fa14:	mov    rdi,rax
  40fa17:	call   405b38 <_start@@Base+0x9d8>
  40fa1c:	mov    QWORD PTR [rbp-0x50],rax
  40fa20:	mov    eax,DWORD PTR [rbp-0x40]
  40fa23:	test   eax,eax
  40fa25:	jne    40f9b1 <_start@@Base+0xa851>
  40fa27:	mov    rax,QWORD PTR [rbp-0x48]
  40fa2b:	mov    rax,QWORD PTR [rax]
  40fa2e:	mov    rdi,rax
  40fa31:	call   41ec2d <flatcc_builder_end_offset_vector@@Base>
  40fa36:	mov    DWORD PTR [rbp-0x3c],eax
  40fa39:	mov    eax,DWORD PTR [rbp-0x3c]
  40fa3c:	test   eax,eax
  40fa3e:	je     411985 <_start@@Base+0xc825>
  40fa44:	mov    rax,QWORD PTR [rbp-0x48]
  40fa48:	mov    rax,QWORD PTR [rax]
  40fa4b:	mov    esi,0xa
  40fa50:	mov    rdi,rax
  40fa53:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40fa58:	mov    QWORD PTR [rbp-0x18],rax
  40fa5c:	cmp    QWORD PTR [rbp-0x18],0x0
  40fa61:	je     411985 <_start@@Base+0xc825>
  40fa67:	mov    edx,DWORD PTR [rbp-0x3c]
  40fa6a:	mov    rax,QWORD PTR [rbp-0x18]
  40fa6e:	mov    DWORD PTR [rax],edx
  40fa70:	jmp    41184c <_start@@Base+0xc6ec>
  40fa75:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa79:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa7d:	mov    rax,QWORD PTR [rbp-0x48]
  40fa81:	mov    rsi,rcx
  40fa84:	mov    rdi,rax
  40fa87:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40fa8c:	mov    QWORD PTR [rbp-0x50],rax
  40fa90:	jmp    41184c <_start@@Base+0xc6ec>
  40fa95:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa99:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa9d:	mov    rax,QWORD PTR [rbp-0x48]
  40faa1:	mov    rsi,rcx
  40faa4:	mov    rdi,rax
  40faa7:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40faac:	mov    QWORD PTR [rbp-0x50],rax
  40fab0:	jmp    41184c <_start@@Base+0xc6ec>
  40fab5:	movabs rax,0x796f667461626c65
  40fabf:	cmp    QWORD PTR [rbp-0x28],rax
  40fac3:	jne    40fc75 <_start@@Base+0xab15>
  40fac9:	add    QWORD PTR [rbp-0x50],0x8
  40face:	mov    rdx,QWORD PTR [rbp-0x58]
  40fad2:	mov    rax,QWORD PTR [rbp-0x50]
  40fad6:	mov    rsi,rdx
  40fad9:	mov    rdi,rax
  40fadc:	call   405779 <_start@@Base+0x619>
  40fae1:	mov    QWORD PTR [rbp-0x28],rax
  40fae5:	movabs rax,0xff00000000000000
  40faef:	and    rax,QWORD PTR [rbp-0x28]
  40faf3:	mov    rdx,rax
  40faf6:	movabs rax,0x7300000000000000
  40fb00:	cmp    rdx,rax
  40fb03:	jne    40fc55 <_start@@Base+0xaaf5>
  40fb09:	mov    rax,QWORD PTR [rbp-0x50]
  40fb0d:	mov    QWORD PTR [rbp-0x20],rax
  40fb11:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb15:	mov    rsi,QWORD PTR [rbp-0x20]
  40fb19:	mov    rax,QWORD PTR [rbp-0x48]
  40fb1d:	mov    ecx,0x1
  40fb22:	mov    rdi,rax
  40fb25:	call   405c76 <_start@@Base+0xb16>
  40fb2a:	mov    QWORD PTR [rbp-0x50],rax
  40fb2e:	mov    rax,QWORD PTR [rbp-0x20]
  40fb32:	cmp    rax,QWORD PTR [rbp-0x50]
  40fb36:	je     40fc35 <_start@@Base+0xaad5>
  40fb3c:	mov    rax,QWORD PTR [rbp-0x48]
  40fb40:	mov    rax,QWORD PTR [rax]
  40fb43:	mov    rdi,rax
  40fb46:	call   41d63b <flatcc_builder_start_offset_vector@@Base>
  40fb4b:	test   eax,eax
  40fb4d:	jne    411942 <_start@@Base+0xc7e2>
  40fb53:	lea    rcx,[rbp-0x40]
  40fb57:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb5b:	mov    rsi,QWORD PTR [rbp-0x50]
  40fb5f:	mov    rax,QWORD PTR [rbp-0x48]
  40fb63:	mov    rdi,rax
  40fb66:	call   405a7b <_start@@Base+0x91b>
  40fb6b:	mov    QWORD PTR [rbp-0x50],rax
  40fb6f:	jmp    40fbe0 <_start@@Base+0xaa80>
  40fb71:	lea    rcx,[rbp-0x3c]
  40fb75:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb79:	mov    rsi,QWORD PTR [rbp-0x50]
  40fb7d:	mov    rax,QWORD PTR [rbp-0x48]
  40fb81:	mov    rdi,rax
  40fb84:	call   40e164 <_start@@Base+0x9004>
  40fb89:	mov    QWORD PTR [rbp-0x50],rax
  40fb8d:	mov    eax,DWORD PTR [rbp-0x3c]
  40fb90:	test   eax,eax
  40fb92:	je     411985 <_start@@Base+0xc825>
  40fb98:	mov    rax,QWORD PTR [rbp-0x48]
  40fb9c:	mov    rax,QWORD PTR [rax]
  40fb9f:	mov    esi,0x1
  40fba4:	mov    rdi,rax
  40fba7:	call   41d04b <flatcc_builder_extend_offset_vector@@Base>
  40fbac:	mov    QWORD PTR [rbp-0x18],rax
  40fbb0:	cmp    QWORD PTR [rbp-0x18],0x0
  40fbb5:	je     411985 <_start@@Base+0xc825>
  40fbbb:	mov    edx,DWORD PTR [rbp-0x3c]
  40fbbe:	mov    rax,QWORD PTR [rbp-0x18]
  40fbc2:	mov    DWORD PTR [rax],edx
  40fbc4:	lea    rcx,[rbp-0x40]
  40fbc8:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbcc:	mov    rsi,QWORD PTR [rbp-0x50]
  40fbd0:	mov    rax,QWORD PTR [rbp-0x48]
  40fbd4:	mov    rdi,rax
  40fbd7:	call   405b38 <_start@@Base+0x9d8>
  40fbdc:	mov    QWORD PTR [rbp-0x50],rax
  40fbe0:	mov    eax,DWORD PTR [rbp-0x40]
  40fbe3:	test   eax,eax
  40fbe5:	jne    40fb71 <_start@@Base+0xaa11>
  40fbe7:	mov    rax,QWORD PTR [rbp-0x48]
  40fbeb:	mov    rax,QWORD PTR [rax]
  40fbee:	mov    rdi,rax
  40fbf1:	call   41ec2d <flatcc_builder_end_offset_vector@@Base>
  40fbf6:	mov    DWORD PTR [rbp-0x3c],eax
  40fbf9:	mov    eax,DWORD PTR [rbp-0x3c]
  40fbfc:	test   eax,eax
  40fbfe:	je     411985 <_start@@Base+0xc825>
  40fc04:	mov    rax,QWORD PTR [rbp-0x48]
  40fc08:	mov    rax,QWORD PTR [rax]
  40fc0b:	mov    esi,0xb
  40fc10:	mov    rdi,rax
  40fc13:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40fc18:	mov    QWORD PTR [rbp-0x18],rax
  40fc1c:	cmp    QWORD PTR [rbp-0x18],0x0
  40fc21:	je     411985 <_start@@Base+0xc825>
  40fc27:	mov    edx,DWORD PTR [rbp-0x3c]
  40fc2a:	mov    rax,QWORD PTR [rbp-0x18]
  40fc2e:	mov    DWORD PTR [rax],edx
  40fc30:	jmp    41184c <_start@@Base+0xc6ec>
  40fc35:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc39:	mov    rcx,QWORD PTR [rbp-0x50]
  40fc3d:	mov    rax,QWORD PTR [rbp-0x48]
  40fc41:	mov    rsi,rcx
  40fc44:	mov    rdi,rax
  40fc47:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40fc4c:	mov    QWORD PTR [rbp-0x50],rax
  40fc50:	jmp    41184c <_start@@Base+0xc6ec>
  40fc55:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc59:	mov    rcx,QWORD PTR [rbp-0x50]
  40fc5d:	mov    rax,QWORD PTR [rbp-0x48]
  40fc61:	mov    rsi,rcx
  40fc64:	mov    rdi,rax
  40fc67:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40fc6c:	mov    QWORD PTR [rbp-0x50],rax
  40fc70:	jmp    41184c <_start@@Base+0xc6ec>
  40fc75:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc79:	mov    rcx,QWORD PTR [rbp-0x50]
  40fc7d:	mov    rax,QWORD PTR [rbp-0x48]
  40fc81:	mov    rsi,rcx
  40fc84:	mov    rdi,rax
  40fc87:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40fc8c:	mov    QWORD PTR [rbp-0x50],rax
  40fc90:	jmp    41184c <_start@@Base+0xc6ec>
  40fc95:	movabs rax,0x74657374656d7073
  40fc9f:	cmp    QWORD PTR [rbp-0x28],rax
  40fca3:	ja     40ff28 <_start@@Base+0xadc8>
  40fca9:	movabs rax,0x7465737462617365
  40fcb3:	cmp    QWORD PTR [rbp-0x28],rax
  40fcb7:	jne    40fdc4 <_start@@Base+0xac64>
  40fcbd:	add    QWORD PTR [rbp-0x50],0x8
  40fcc2:	mov    rdx,QWORD PTR [rbp-0x58]
  40fcc6:	mov    rax,QWORD PTR [rbp-0x50]
  40fcca:	mov    rsi,rdx
  40fccd:	mov    rdi,rax
  40fcd0:	call   405779 <_start@@Base+0x619>
  40fcd5:	mov    QWORD PTR [rbp-0x28],rax
  40fcd9:	movabs rax,0xffff000000000000
  40fce3:	and    rax,QWORD PTR [rbp-0x28]
  40fce7:	mov    rdx,rax
  40fcea:	movabs rax,0x3634000000000000
  40fcf4:	cmp    rdx,rax
  40fcf7:	jne    40fda4 <_start@@Base+0xac44>
  40fcfd:	mov    rax,QWORD PTR [rbp-0x50]
  40fd01:	mov    QWORD PTR [rbp-0x20],rax
  40fd05:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd09:	mov    rsi,QWORD PTR [rbp-0x20]
  40fd0d:	mov    rax,QWORD PTR [rbp-0x48]
  40fd11:	mov    ecx,0x2
  40fd16:	mov    rdi,rax
  40fd19:	call   405c76 <_start@@Base+0xb16>
  40fd1e:	mov    QWORD PTR [rbp-0x50],rax
  40fd22:	mov    rax,QWORD PTR [rbp-0x20]
  40fd26:	cmp    rax,QWORD PTR [rbp-0x50]
  40fd2a:	je     40fd84 <_start@@Base+0xac24>
  40fd2c:	lea    rcx,[rbp-0x3c]
  40fd30:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd34:	mov    rsi,QWORD PTR [rbp-0x50]
  40fd38:	mov    rax,QWORD PTR [rbp-0x48]
  40fd3c:	mov    rdi,rax
  40fd3f:	call   40dd87 <_start@@Base+0x8c27>
  40fd44:	mov    QWORD PTR [rbp-0x50],rax
  40fd48:	mov    eax,DWORD PTR [rbp-0x3c]
  40fd4b:	test   eax,eax
  40fd4d:	je     411985 <_start@@Base+0xc825>
  40fd53:	mov    rax,QWORD PTR [rbp-0x48]
  40fd57:	mov    rax,QWORD PTR [rax]
  40fd5a:	mov    esi,0x23
  40fd5f:	mov    rdi,rax
  40fd62:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40fd67:	mov    QWORD PTR [rbp-0x18],rax
  40fd6b:	cmp    QWORD PTR [rbp-0x18],0x0
  40fd70:	je     411985 <_start@@Base+0xc825>
  40fd76:	mov    edx,DWORD PTR [rbp-0x3c]
  40fd79:	mov    rax,QWORD PTR [rbp-0x18]
  40fd7d:	mov    DWORD PTR [rax],edx
  40fd7f:	jmp    41184c <_start@@Base+0xc6ec>
  40fd84:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd88:	mov    rcx,QWORD PTR [rbp-0x50]
  40fd8c:	mov    rax,QWORD PTR [rbp-0x48]
  40fd90:	mov    rsi,rcx
  40fd93:	mov    rdi,rax
  40fd96:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40fd9b:	mov    QWORD PTR [rbp-0x50],rax
  40fd9f:	jmp    41184c <_start@@Base+0xc6ec>
  40fda4:	mov    rdx,QWORD PTR [rbp-0x58]
  40fda8:	mov    rcx,QWORD PTR [rbp-0x50]
  40fdac:	mov    rax,QWORD PTR [rbp-0x48]
  40fdb0:	mov    rsi,rcx
  40fdb3:	mov    rdi,rax
  40fdb6:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40fdbb:	mov    QWORD PTR [rbp-0x50],rax
  40fdbf:	jmp    41184c <_start@@Base+0xc6ec>
  40fdc4:	movabs rax,0x74657374626f6f6c
  40fdce:	cmp    QWORD PTR [rbp-0x28],rax
  40fdd2:	jne    40ff08 <_start@@Base+0xada8>
  40fdd8:	mov    rax,QWORD PTR [rbp-0x50]
  40fddc:	mov    QWORD PTR [rbp-0x20],rax
  40fde0:	mov    rdx,QWORD PTR [rbp-0x58]
  40fde4:	mov    rsi,QWORD PTR [rbp-0x20]
  40fde8:	mov    rax,QWORD PTR [rbp-0x48]
  40fdec:	mov    ecx,0x8
  40fdf1:	mov    rdi,rax
  40fdf4:	call   405c76 <_start@@Base+0xb16>
  40fdf9:	mov    QWORD PTR [rbp-0x50],rax
  40fdfd:	mov    rax,QWORD PTR [rbp-0x20]
  40fe01:	cmp    rax,QWORD PTR [rbp-0x50]
  40fe05:	je     40fee8 <_start@@Base+0xad88>
  40fe0b:	mov    BYTE PTR [rbp-0x30],0x0
  40fe0f:	mov    rax,QWORD PTR [rbp-0x50]
  40fe13:	mov    QWORD PTR [rbp-0x20],rax
  40fe17:	lea    rcx,[rbp-0x30]
  40fe1b:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe1f:	mov    rsi,QWORD PTR [rbp-0x20]
  40fe23:	mov    rax,QWORD PTR [rbp-0x48]
  40fe27:	mov    rdi,rax
  40fe2a:	call   4069af <_start@@Base+0x184f>
  40fe2f:	mov    QWORD PTR [rbp-0x50],rax
  40fe33:	mov    rax,QWORD PTR [rbp-0x20]
  40fe37:	cmp    rax,QWORD PTR [rbp-0x50]
  40fe3b:	jne    40fe87 <_start@@Base+0xad27>
  40fe3d:	mov    rax,QWORD PTR [rbp-0x50]
  40fe41:	mov    QWORD PTR [rbp-0x20],rax
  40fe45:	lea    rcx,[rbp-0x30]
  40fe49:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe4d:	mov    rsi,QWORD PTR [rbp-0x20]
  40fe51:	mov    rax,QWORD PTR [rbp-0x48]
  40fe55:	mov    r8,rcx
  40fe58:	lea    rcx,[rip+0x36741]        # 4465a0 <__data_start@@Base+0x4e0>
  40fe5f:	mov    rdi,rax
  40fe62:	call   40757d <_start@@Base+0x241d>
  40fe67:	mov    QWORD PTR [rbp-0x50],rax
  40fe6b:	mov    rax,QWORD PTR [rbp-0x50]
  40fe6f:	cmp    rax,QWORD PTR [rbp-0x20]
  40fe73:	je     411985 <_start@@Base+0xc825>
  40fe79:	mov    rax,QWORD PTR [rbp-0x50]
  40fe7d:	cmp    rax,QWORD PTR [rbp-0x58]
  40fe81:	je     411985 <_start@@Base+0xc825>
  40fe87:	movzx  eax,BYTE PTR [rbp-0x30]
  40fe8b:	cmp    al,0x1
  40fe8d:	jne    40fea1 <_start@@Base+0xad41>
  40fe8f:	mov    rax,QWORD PTR [rbp-0x48]
  40fe93:	mov    eax,DWORD PTR [rax+0x10]
  40fe96:	and    eax,0x2
  40fe99:	test   eax,eax
  40fe9b:	je     41184c <_start@@Base+0xc6ec>
  40fea1:	mov    rax,QWORD PTR [rbp-0x48]
  40fea5:	mov    rax,QWORD PTR [rax]
  40fea8:	mov    ecx,0x1
  40fead:	mov    edx,0x1
  40feb2:	mov    esi,0xf
  40feb7:	mov    rdi,rax
  40feba:	call   41f93b <flatcc_builder_table_add@@Base>
  40febf:	mov    QWORD PTR [rbp-0x10],rax
  40fec3:	cmp    QWORD PTR [rbp-0x10],0x0
  40fec8:	je     411945 <_start@@Base+0xc7e5>
  40fece:	movzx  eax,BYTE PTR [rbp-0x30]
  40fed2:	movzx  edx,al
  40fed5:	mov    rax,QWORD PTR [rbp-0x10]
  40fed9:	mov    esi,edx
  40fedb:	mov    rdi,rax
  40fede:	call   4054c3 <_start@@Base+0x363>
  40fee3:	jmp    41184c <_start@@Base+0xc6ec>
  40fee8:	mov    rdx,QWORD PTR [rbp-0x58]
  40feec:	mov    rcx,QWORD PTR [rbp-0x50]
  40fef0:	mov    rax,QWORD PTR [rbp-0x48]
  40fef4:	mov    rsi,rcx
  40fef7:	mov    rdi,rax
  40fefa:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40feff:	mov    QWORD PTR [rbp-0x50],rax
  40ff03:	jmp    41184c <_start@@Base+0xc6ec>
  40ff08:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff0c:	mov    rcx,QWORD PTR [rbp-0x50]
  40ff10:	mov    rax,QWORD PTR [rbp-0x48]
  40ff14:	mov    rsi,rcx
  40ff17:	mov    rdi,rax
  40ff1a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  40ff1f:	mov    QWORD PTR [rbp-0x50],rax
  40ff23:	jmp    41184c <_start@@Base+0xc6ec>
  40ff28:	movabs rax,0x7465737465ffffff
  40ff32:	cmp    QWORD PTR [rbp-0x28],rax
  40ff36:	ja     410077 <_start@@Base+0xaf17>
  40ff3c:	movabs rax,0x74657374656d7074
  40ff46:	cmp    QWORD PTR [rbp-0x28],rax
  40ff4a:	jne    410057 <_start@@Base+0xaef7>
  40ff50:	add    QWORD PTR [rbp-0x50],0x8
  40ff55:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff59:	mov    rax,QWORD PTR [rbp-0x50]
  40ff5d:	mov    rsi,rdx
  40ff60:	mov    rdi,rax
  40ff63:	call   405779 <_start@@Base+0x619>
  40ff68:	mov    QWORD PTR [rbp-0x28],rax
  40ff6c:	movabs rax,0xff00000000000000
  40ff76:	and    rax,QWORD PTR [rbp-0x28]
  40ff7a:	mov    rdx,rax
  40ff7d:	movabs rax,0x7900000000000000
  40ff87:	cmp    rdx,rax
  40ff8a:	jne    410037 <_start@@Base+0xaed7>
  40ff90:	mov    rax,QWORD PTR [rbp-0x50]
  40ff94:	mov    QWORD PTR [rbp-0x20],rax
  40ff98:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff9c:	mov    rsi,QWORD PTR [rbp-0x20]
  40ffa0:	mov    rax,QWORD PTR [rbp-0x48]
  40ffa4:	mov    ecx,0x1
  40ffa9:	mov    rdi,rax
  40ffac:	call   405c76 <_start@@Base+0xb16>
  40ffb1:	mov    QWORD PTR [rbp-0x50],rax
  40ffb5:	mov    rax,QWORD PTR [rbp-0x20]
  40ffb9:	cmp    rax,QWORD PTR [rbp-0x50]
  40ffbd:	je     410017 <_start@@Base+0xaeb7>
  40ffbf:	lea    rcx,[rbp-0x3c]
  40ffc3:	mov    rdx,QWORD PTR [rbp-0x58]
  40ffc7:	mov    rsi,QWORD PTR [rbp-0x50]
  40ffcb:	mov    rax,QWORD PTR [rbp-0x48]
  40ffcf:	mov    rdi,rax
  40ffd2:	call   40bb36 <_start@@Base+0x69d6>
  40ffd7:	mov    QWORD PTR [rbp-0x50],rax
  40ffdb:	mov    eax,DWORD PTR [rbp-0x3c]
  40ffde:	test   eax,eax
  40ffe0:	je     411985 <_start@@Base+0xc825>
  40ffe6:	mov    rax,QWORD PTR [rbp-0x48]
  40ffea:	mov    rax,QWORD PTR [rax]
  40ffed:	mov    esi,0xe
  40fff2:	mov    rdi,rax
  40fff5:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  40fffa:	mov    QWORD PTR [rbp-0x18],rax
  40fffe:	cmp    QWORD PTR [rbp-0x18],0x0
  410003:	je     411985 <_start@@Base+0xc825>
  410009:	mov    edx,DWORD PTR [rbp-0x3c]
  41000c:	mov    rax,QWORD PTR [rbp-0x18]
  410010:	mov    DWORD PTR [rax],edx
  410012:	jmp    41184c <_start@@Base+0xc6ec>
  410017:	mov    rdx,QWORD PTR [rbp-0x58]
  41001b:	mov    rcx,QWORD PTR [rbp-0x50]
  41001f:	mov    rax,QWORD PTR [rbp-0x48]
  410023:	mov    rsi,rcx
  410026:	mov    rdi,rax
  410029:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41002e:	mov    QWORD PTR [rbp-0x50],rax
  410032:	jmp    41184c <_start@@Base+0xc6ec>
  410037:	mov    rdx,QWORD PTR [rbp-0x58]
  41003b:	mov    rcx,QWORD PTR [rbp-0x50]
  41003f:	mov    rax,QWORD PTR [rbp-0x48]
  410043:	mov    rsi,rcx
  410046:	mov    rdi,rax
  410049:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41004e:	mov    QWORD PTR [rbp-0x50],rax
  410052:	jmp    41184c <_start@@Base+0xc6ec>
  410057:	mov    rdx,QWORD PTR [rbp-0x58]
  41005b:	mov    rcx,QWORD PTR [rbp-0x50]
  41005f:	mov    rax,QWORD PTR [rbp-0x48]
  410063:	mov    rsi,rcx
  410066:	mov    rdi,rax
  410069:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41006e:	mov    QWORD PTR [rbp-0x50],rax
  410072:	jmp    41184c <_start@@Base+0xc6ec>
  410077:	mov    rax,QWORD PTR [rbp-0x28]
  41007b:	mov    ax,0x0
  41007f:	mov    rdx,rax
  410082:	movabs rax,0x7465737466320000
  41008c:	cmp    rdx,rax
  41008f:	jne    4101dd <_start@@Base+0xb07d>
  410095:	mov    rax,QWORD PTR [rbp-0x50]
  410099:	mov    QWORD PTR [rbp-0x20],rax
  41009d:	mov    rdx,QWORD PTR [rbp-0x58]
  4100a1:	mov    rsi,QWORD PTR [rbp-0x20]
  4100a5:	mov    rax,QWORD PTR [rbp-0x48]
  4100a9:	mov    ecx,0x6
  4100ae:	mov    rdi,rax
  4100b1:	call   405c76 <_start@@Base+0xb16>
  4100b6:	mov    QWORD PTR [rbp-0x50],rax
  4100ba:	mov    rax,QWORD PTR [rbp-0x20]
  4100be:	cmp    rax,QWORD PTR [rbp-0x50]
  4100c2:	je     4101bd <_start@@Base+0xb05d>
  4100c8:	vxorps xmm0,xmm0,xmm0
  4100cc:	vmovss DWORD PTR [rbp-0x30],xmm0
  4100d1:	mov    rax,QWORD PTR [rbp-0x50]
  4100d5:	mov    QWORD PTR [rbp-0x20],rax
  4100d9:	lea    rcx,[rbp-0x30]
  4100dd:	mov    rdx,QWORD PTR [rbp-0x58]
  4100e1:	mov    rsi,QWORD PTR [rbp-0x20]
  4100e5:	mov    rax,QWORD PTR [rbp-0x48]
  4100e9:	mov    rdi,rax
  4100ec:	call   427612 <flatcc_json_parser_float@@Base>
  4100f1:	mov    QWORD PTR [rbp-0x50],rax
  4100f5:	mov    rax,QWORD PTR [rbp-0x20]
  4100f9:	cmp    rax,QWORD PTR [rbp-0x50]
  4100fd:	jne    410149 <_start@@Base+0xafe9>
  4100ff:	mov    rax,QWORD PTR [rbp-0x50]
  410103:	mov    QWORD PTR [rbp-0x20],rax
  410107:	lea    rcx,[rbp-0x30]
  41010b:	mov    rdx,QWORD PTR [rbp-0x58]
  41010f:	mov    rsi,QWORD PTR [rbp-0x20]
  410113:	mov    rax,QWORD PTR [rbp-0x48]
  410117:	mov    r8,rcx
  41011a:	lea    rcx,[rip+0x3649f]        # 4465c0 <__data_start@@Base+0x500>
  410121:	mov    rdi,rax
  410124:	call   4076d2 <_start@@Base+0x2572>
  410129:	mov    QWORD PTR [rbp-0x50],rax
  41012d:	mov    rax,QWORD PTR [rbp-0x50]
  410131:	cmp    rax,QWORD PTR [rbp-0x20]
  410135:	je     411985 <_start@@Base+0xc825>
  41013b:	mov    rax,QWORD PTR [rbp-0x50]
  41013f:	cmp    rax,QWORD PTR [rbp-0x58]
  410143:	je     411985 <_start@@Base+0xc825>
  410149:	vmovss xmm0,DWORD PTR [rbp-0x30]
  41014e:	vucomiss xmm0,DWORD PTR [rip+0x29dea]        # 439f40 <_IO_stdin_used@@Base+0x3f40>
  410156:	jp     410174 <_start@@Base+0xb014>
  410158:	vucomiss xmm0,DWORD PTR [rip+0x29de0]        # 439f40 <_IO_stdin_used@@Base+0x3f40>
  410160:	jne    410174 <_start@@Base+0xb014>
  410162:	mov    rax,QWORD PTR [rbp-0x48]
  410166:	mov    eax,DWORD PTR [rax+0x10]
  410169:	and    eax,0x2
  41016c:	test   eax,eax
  41016e:	je     41184c <_start@@Base+0xc6ec>
  410174:	mov    rax,QWORD PTR [rbp-0x48]
  410178:	mov    rax,QWORD PTR [rax]
  41017b:	mov    ecx,0x4
  410180:	mov    edx,0x4
  410185:	mov    esi,0x1a
  41018a:	mov    rdi,rax
  41018d:	call   41f93b <flatcc_builder_table_add@@Base>
  410192:	mov    QWORD PTR [rbp-0x10],rax
  410196:	cmp    QWORD PTR [rbp-0x10],0x0
  41019b:	je     411948 <_start@@Base+0xc7e8>
  4101a1:	mov    edx,DWORD PTR [rbp-0x30]
  4101a4:	mov    rax,QWORD PTR [rbp-0x10]
  4101a8:	mov    DWORD PTR [rbp-0x68],edx
  4101ab:	vmovss xmm0,DWORD PTR [rbp-0x68]
  4101b0:	mov    rdi,rax
  4101b3:	call   405432 <_start@@Base+0x2d2>
  4101b8:	jmp    41184c <_start@@Base+0xc6ec>
  4101bd:	mov    rdx,QWORD PTR [rbp-0x58]
  4101c1:	mov    rcx,QWORD PTR [rbp-0x50]
  4101c5:	mov    rax,QWORD PTR [rbp-0x48]
  4101c9:	mov    rsi,rcx
  4101cc:	mov    rdi,rax
  4101cf:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4101d4:	mov    QWORD PTR [rbp-0x50],rax
  4101d8:	jmp    41184c <_start@@Base+0xc6ec>
  4101dd:	mov    rax,QWORD PTR [rbp-0x28]
  4101e1:	and    rax,0xffffffffff000000
  4101e7:	mov    rdx,rax
  4101ea:	movabs rax,0x7465737466000000
  4101f4:	cmp    rdx,rax
  4101f7:	jne    410345 <_start@@Base+0xb1e5>
  4101fd:	mov    rax,QWORD PTR [rbp-0x50]
  410201:	mov    QWORD PTR [rbp-0x20],rax
  410205:	mov    rdx,QWORD PTR [rbp-0x58]
  410209:	mov    rsi,QWORD PTR [rbp-0x20]
  41020d:	mov    rax,QWORD PTR [rbp-0x48]
  410211:	mov    ecx,0x5
  410216:	mov    rdi,rax
  410219:	call   405c76 <_start@@Base+0xb16>
  41021e:	mov    QWORD PTR [rbp-0x50],rax
  410222:	mov    rax,QWORD PTR [rbp-0x20]
  410226:	cmp    rax,QWORD PTR [rbp-0x50]
  41022a:	je     410325 <_start@@Base+0xb1c5>
  410230:	vxorps xmm0,xmm0,xmm0
  410234:	vmovss DWORD PTR [rbp-0x30],xmm0
  410239:	mov    rax,QWORD PTR [rbp-0x50]
  41023d:	mov    QWORD PTR [rbp-0x20],rax
  410241:	lea    rcx,[rbp-0x30]
  410245:	mov    rdx,QWORD PTR [rbp-0x58]
  410249:	mov    rsi,QWORD PTR [rbp-0x20]
  41024d:	mov    rax,QWORD PTR [rbp-0x48]
  410251:	mov    rdi,rax
  410254:	call   427612 <flatcc_json_parser_float@@Base>
  410259:	mov    QWORD PTR [rbp-0x50],rax
  41025d:	mov    rax,QWORD PTR [rbp-0x20]
  410261:	cmp    rax,QWORD PTR [rbp-0x50]
  410265:	jne    4102b1 <_start@@Base+0xb151>
  410267:	mov    rax,QWORD PTR [rbp-0x50]
  41026b:	mov    QWORD PTR [rbp-0x20],rax
  41026f:	lea    rcx,[rbp-0x30]
  410273:	mov    rdx,QWORD PTR [rbp-0x58]
  410277:	mov    rsi,QWORD PTR [rbp-0x20]
  41027b:	mov    rax,QWORD PTR [rbp-0x48]
  41027f:	mov    r8,rcx
  410282:	lea    rcx,[rip+0x36357]        # 4465e0 <__data_start@@Base+0x520>
  410289:	mov    rdi,rax
  41028c:	call   4076d2 <_start@@Base+0x2572>
  410291:	mov    QWORD PTR [rbp-0x50],rax
  410295:	mov    rax,QWORD PTR [rbp-0x50]
  410299:	cmp    rax,QWORD PTR [rbp-0x20]
  41029d:	je     411985 <_start@@Base+0xc825>
  4102a3:	mov    rax,QWORD PTR [rbp-0x50]
  4102a7:	cmp    rax,QWORD PTR [rbp-0x58]
  4102ab:	je     411985 <_start@@Base+0xc825>
  4102b1:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4102b6:	vucomiss xmm0,DWORD PTR [rip+0x29c86]        # 439f44 <_IO_stdin_used@@Base+0x3f44>
  4102be:	jp     4102dc <_start@@Base+0xb17c>
  4102c0:	vucomiss xmm0,DWORD PTR [rip+0x29c7c]        # 439f44 <_IO_stdin_used@@Base+0x3f44>
  4102c8:	jne    4102dc <_start@@Base+0xb17c>
  4102ca:	mov    rax,QWORD PTR [rbp-0x48]
  4102ce:	mov    eax,DWORD PTR [rax+0x10]
  4102d1:	and    eax,0x2
  4102d4:	test   eax,eax
  4102d6:	je     41184c <_start@@Base+0xc6ec>
  4102dc:	mov    rax,QWORD PTR [rbp-0x48]
  4102e0:	mov    rax,QWORD PTR [rax]
  4102e3:	mov    ecx,0x4
  4102e8:	mov    edx,0x4
  4102ed:	mov    esi,0x19
  4102f2:	mov    rdi,rax
  4102f5:	call   41f93b <flatcc_builder_table_add@@Base>
  4102fa:	mov    QWORD PTR [rbp-0x10],rax
  4102fe:	cmp    QWORD PTR [rbp-0x10],0x0
  410303:	je     41194b <_start@@Base+0xc7eb>
  410309:	mov    edx,DWORD PTR [rbp-0x30]
  41030c:	mov    rax,QWORD PTR [rbp-0x10]
  410310:	mov    DWORD PTR [rbp-0x68],edx
  410313:	vmovss xmm0,DWORD PTR [rbp-0x68]
  410318:	mov    rdi,rax
  41031b:	call   405432 <_start@@Base+0x2d2>
  410320:	jmp    41184c <_start@@Base+0xc6ec>
  410325:	mov    rdx,QWORD PTR [rbp-0x58]
  410329:	mov    rcx,QWORD PTR [rbp-0x50]
  41032d:	mov    rax,QWORD PTR [rbp-0x48]
  410331:	mov    rsi,rcx
  410334:	mov    rdi,rax
  410337:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41033c:	mov    QWORD PTR [rbp-0x50],rax
  410340:	jmp    41184c <_start@@Base+0xc6ec>
  410345:	mov    rdx,QWORD PTR [rbp-0x58]
  410349:	mov    rcx,QWORD PTR [rbp-0x50]
  41034d:	mov    rax,QWORD PTR [rbp-0x48]
  410351:	mov    rsi,rcx
  410354:	mov    rdi,rax
  410357:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41035c:	mov    QWORD PTR [rbp-0x50],rax
  410360:	jmp    41184c <_start@@Base+0xc6ec>
  410365:	movabs rax,0x7465737468617367
  41036f:	cmp    QWORD PTR [rbp-0x28],rax
  410373:	ja     4104ff <_start@@Base+0xb39f>
  410379:	mov    rax,QWORD PTR [rbp-0x28]
  41037d:	mov    ax,0x0
  410381:	mov    rdx,rax
  410384:	movabs rax,0x7465737466330000
  41038e:	cmp    rdx,rax
  410391:	jne    4104df <_start@@Base+0xb37f>
  410397:	mov    rax,QWORD PTR [rbp-0x50]
  41039b:	mov    QWORD PTR [rbp-0x20],rax
  41039f:	mov    rdx,QWORD PTR [rbp-0x58]
  4103a3:	mov    rsi,QWORD PTR [rbp-0x20]
  4103a7:	mov    rax,QWORD PTR [rbp-0x48]
  4103ab:	mov    ecx,0x6
  4103b0:	mov    rdi,rax
  4103b3:	call   405c76 <_start@@Base+0xb16>
  4103b8:	mov    QWORD PTR [rbp-0x50],rax
  4103bc:	mov    rax,QWORD PTR [rbp-0x20]
  4103c0:	cmp    rax,QWORD PTR [rbp-0x50]
  4103c4:	je     4104bf <_start@@Base+0xb35f>
  4103ca:	vxorps xmm0,xmm0,xmm0
  4103ce:	vmovss DWORD PTR [rbp-0x30],xmm0
  4103d3:	mov    rax,QWORD PTR [rbp-0x50]
  4103d7:	mov    QWORD PTR [rbp-0x20],rax
  4103db:	lea    rcx,[rbp-0x30]
  4103df:	mov    rdx,QWORD PTR [rbp-0x58]
  4103e3:	mov    rsi,QWORD PTR [rbp-0x20]
  4103e7:	mov    rax,QWORD PTR [rbp-0x48]
  4103eb:	mov    rdi,rax
  4103ee:	call   427612 <flatcc_json_parser_float@@Base>
  4103f3:	mov    QWORD PTR [rbp-0x50],rax
  4103f7:	mov    rax,QWORD PTR [rbp-0x20]
  4103fb:	cmp    rax,QWORD PTR [rbp-0x50]
  4103ff:	jne    41044b <_start@@Base+0xb2eb>
  410401:	mov    rax,QWORD PTR [rbp-0x50]
  410405:	mov    QWORD PTR [rbp-0x20],rax
  410409:	lea    rcx,[rbp-0x30]
  41040d:	mov    rdx,QWORD PTR [rbp-0x58]
  410411:	mov    rsi,QWORD PTR [rbp-0x20]
  410415:	mov    rax,QWORD PTR [rbp-0x48]
  410419:	mov    r8,rcx
  41041c:	lea    rcx,[rip+0x361dd]        # 446600 <__data_start@@Base+0x540>
  410423:	mov    rdi,rax
  410426:	call   4076d2 <_start@@Base+0x2572>
  41042b:	mov    QWORD PTR [rbp-0x50],rax
  41042f:	mov    rax,QWORD PTR [rbp-0x50]
  410433:	cmp    rax,QWORD PTR [rbp-0x20]
  410437:	je     411985 <_start@@Base+0xc825>
  41043d:	mov    rax,QWORD PTR [rbp-0x50]
  410441:	cmp    rax,QWORD PTR [rbp-0x58]
  410445:	je     411985 <_start@@Base+0xc825>
  41044b:	vmovss xmm0,DWORD PTR [rbp-0x30]
  410450:	vxorps xmm1,xmm1,xmm1
  410454:	vucomiss xmm0,xmm1
  410458:	jp     410476 <_start@@Base+0xb316>
  41045a:	vxorps xmm1,xmm1,xmm1
  41045e:	vucomiss xmm0,xmm1
  410462:	jne    410476 <_start@@Base+0xb316>
  410464:	mov    rax,QWORD PTR [rbp-0x48]
  410468:	mov    eax,DWORD PTR [rax+0x10]
  41046b:	and    eax,0x2
  41046e:	test   eax,eax
  410470:	je     41184c <_start@@Base+0xc6ec>
  410476:	mov    rax,QWORD PTR [rbp-0x48]
  41047a:	mov    rax,QWORD PTR [rax]
  41047d:	mov    ecx,0x4
  410482:	mov    edx,0x4
  410487:	mov    esi,0x1b
  41048c:	mov    rdi,rax
  41048f:	call   41f93b <flatcc_builder_table_add@@Base>
  410494:	mov    QWORD PTR [rbp-0x10],rax
  410498:	cmp    QWORD PTR [rbp-0x10],0x0
  41049d:	je     41194e <_start@@Base+0xc7ee>
  4104a3:	mov    edx,DWORD PTR [rbp-0x30]
  4104a6:	mov    rax,QWORD PTR [rbp-0x10]
  4104aa:	mov    DWORD PTR [rbp-0x68],edx
  4104ad:	vmovss xmm0,DWORD PTR [rbp-0x68]
  4104b2:	mov    rdi,rax
  4104b5:	call   405432 <_start@@Base+0x2d2>
  4104ba:	jmp    41184c <_start@@Base+0xc6ec>
  4104bf:	mov    rdx,QWORD PTR [rbp-0x58]
  4104c3:	mov    rcx,QWORD PTR [rbp-0x50]
  4104c7:	mov    rax,QWORD PTR [rbp-0x48]
  4104cb:	mov    rsi,rcx
  4104ce:	mov    rdi,rax
  4104d1:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4104d6:	mov    QWORD PTR [rbp-0x50],rax
  4104da:	jmp    41184c <_start@@Base+0xc6ec>
  4104df:	mov    rdx,QWORD PTR [rbp-0x58]
  4104e3:	mov    rcx,QWORD PTR [rbp-0x50]
  4104e7:	mov    rax,QWORD PTR [rbp-0x48]
  4104eb:	mov    rsi,rcx
  4104ee:	mov    rdi,rax
  4104f1:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4104f6:	mov    QWORD PTR [rbp-0x50],rax
  4104fa:	jmp    41184c <_start@@Base+0xc6ec>
  4104ff:	movabs rax,0x7465737468617368
  410509:	cmp    QWORD PTR [rbp-0x28],rax
  41050d:	jne    41108b <_start@@Base+0xbf2b>
  410513:	add    QWORD PTR [rbp-0x50],0x8
  410518:	mov    rdx,QWORD PTR [rbp-0x58]
  41051c:	mov    rax,QWORD PTR [rbp-0x50]
  410520:	mov    rsi,rdx
  410523:	mov    rdi,rax
  410526:	call   405779 <_start@@Base+0x619>
  41052b:	mov    QWORD PTR [rbp-0x28],rax
  41052f:	movabs rax,0x7336345f666e7630
  410539:	cmp    QWORD PTR [rbp-0x28],rax
  41053d:	ja     410813 <_start@@Base+0xb6b3>
  410543:	movabs rax,0x7333325f666e7631
  41054d:	cmp    QWORD PTR [rbp-0x28],rax
  410551:	jne    4107f3 <_start@@Base+0xb693>
  410557:	mov    rax,QWORD PTR [rbp-0x50]
  41055b:	mov    QWORD PTR [rbp-0x20],rax
  41055f:	mov    rdx,QWORD PTR [rbp-0x58]
  410563:	mov    rsi,QWORD PTR [rbp-0x20]
  410567:	mov    rax,QWORD PTR [rbp-0x48]
  41056b:	mov    ecx,0x8
  410570:	mov    rdi,rax
  410573:	call   405c76 <_start@@Base+0xb16>
  410578:	mov    QWORD PTR [rbp-0x50],rax
  41057c:	mov    rax,QWORD PTR [rbp-0x20]
  410580:	cmp    rax,QWORD PTR [rbp-0x50]
  410584:	je     410665 <_start@@Base+0xb505>
  41058a:	mov    DWORD PTR [rbp-0x30],0x0
  410591:	mov    rax,QWORD PTR [rbp-0x50]
  410595:	mov    QWORD PTR [rbp-0x20],rax
  410599:	lea    rcx,[rbp-0x30]
  41059d:	mov    rdx,QWORD PTR [rbp-0x58]
  4105a1:	mov    rsi,QWORD PTR [rbp-0x20]
  4105a5:	mov    rax,QWORD PTR [rbp-0x48]
  4105a9:	mov    rdi,rax
  4105ac:	call   406761 <_start@@Base+0x1601>
  4105b1:	mov    QWORD PTR [rbp-0x50],rax
  4105b5:	mov    rax,QWORD PTR [rbp-0x20]
  4105b9:	cmp    rax,QWORD PTR [rbp-0x50]
  4105bd:	jne    410609 <_start@@Base+0xb4a9>
  4105bf:	mov    rax,QWORD PTR [rbp-0x50]
  4105c3:	mov    QWORD PTR [rbp-0x20],rax
  4105c7:	lea    rcx,[rbp-0x30]
  4105cb:	mov    rdx,QWORD PTR [rbp-0x58]
  4105cf:	mov    rsi,QWORD PTR [rbp-0x20]
  4105d3:	mov    rax,QWORD PTR [rbp-0x48]
  4105d7:	mov    r8,rcx
  4105da:	lea    rcx,[rip+0x3603f]        # 446620 <__data_start@@Base+0x560>
  4105e1:	mov    rdi,rax
  4105e4:	call   40716d <_start@@Base+0x200d>
  4105e9:	mov    QWORD PTR [rbp-0x50],rax
  4105ed:	mov    rax,QWORD PTR [rbp-0x50]
  4105f1:	cmp    rax,QWORD PTR [rbp-0x20]
  4105f5:	je     411985 <_start@@Base+0xc825>
  4105fb:	mov    rax,QWORD PTR [rbp-0x50]
  4105ff:	cmp    rax,QWORD PTR [rbp-0x58]
  410603:	je     411985 <_start@@Base+0xc825>
  410609:	mov    eax,DWORD PTR [rbp-0x30]
  41060c:	test   eax,eax
  41060e:	jne    410622 <_start@@Base+0xb4c2>
  410610:	mov    rax,QWORD PTR [rbp-0x48]
  410614:	mov    eax,DWORD PTR [rax+0x10]
  410617:	and    eax,0x2
  41061a:	test   eax,eax
  41061c:	je     41184c <_start@@Base+0xc6ec>
  410622:	mov    rax,QWORD PTR [rbp-0x48]
  410626:	mov    rax,QWORD PTR [rax]
  410629:	mov    ecx,0x4
  41062e:	mov    edx,0x4
  410633:	mov    esi,0x10
  410638:	mov    rdi,rax
  41063b:	call   41f93b <flatcc_builder_table_add@@Base>
  410640:	mov    QWORD PTR [rbp-0x10],rax
  410644:	cmp    QWORD PTR [rbp-0x10],0x0
  410649:	je     411951 <_start@@Base+0xc7f1>
  41064f:	mov    edx,DWORD PTR [rbp-0x30]
  410652:	mov    rax,QWORD PTR [rbp-0x10]
  410656:	mov    esi,edx
  410658:	mov    rdi,rax
  41065b:	call   4053b7 <_start@@Base+0x257>
  410660:	jmp    41184c <_start@@Base+0xc6ec>
  410665:	add    QWORD PTR [rbp-0x50],0x8
  41066a:	mov    rdx,QWORD PTR [rbp-0x58]
  41066e:	mov    rax,QWORD PTR [rbp-0x50]
  410672:	mov    rsi,rdx
  410675:	mov    rdi,rax
  410678:	call   405779 <_start@@Base+0x619>
  41067d:	mov    QWORD PTR [rbp-0x28],rax
  410681:	movabs rax,0xff00000000000000
  41068b:	and    rax,QWORD PTR [rbp-0x28]
  41068f:	mov    rdx,rax
  410692:	movabs rax,0x6100000000000000
  41069c:	cmp    rdx,rax
  41069f:	jne    4107d3 <_start@@Base+0xb673>
  4106a5:	mov    rax,QWORD PTR [rbp-0x50]
  4106a9:	mov    QWORD PTR [rbp-0x20],rax
  4106ad:	mov    rdx,QWORD PTR [rbp-0x58]
  4106b1:	mov    rsi,QWORD PTR [rbp-0x20]
  4106b5:	mov    rax,QWORD PTR [rbp-0x48]
  4106b9:	mov    ecx,0x1
  4106be:	mov    rdi,rax
  4106c1:	call   405c76 <_start@@Base+0xb16>
  4106c6:	mov    QWORD PTR [rbp-0x50],rax
  4106ca:	mov    rax,QWORD PTR [rbp-0x20]
  4106ce:	cmp    rax,QWORD PTR [rbp-0x50]
  4106d2:	je     4107b3 <_start@@Base+0xb653>
  4106d8:	mov    DWORD PTR [rbp-0x30],0x0
  4106df:	mov    rax,QWORD PTR [rbp-0x50]
  4106e3:	mov    QWORD PTR [rbp-0x20],rax
  4106e7:	lea    rcx,[rbp-0x30]
  4106eb:	mov    rdx,QWORD PTR [rbp-0x58]
  4106ef:	mov    rsi,QWORD PTR [rbp-0x20]
  4106f3:	mov    rax,QWORD PTR [rbp-0x48]
  4106f7:	mov    rdi,rax
  4106fa:	call   406761 <_start@@Base+0x1601>
  4106ff:	mov    QWORD PTR [rbp-0x50],rax
  410703:	mov    rax,QWORD PTR [rbp-0x20]
  410707:	cmp    rax,QWORD PTR [rbp-0x50]
  41070b:	jne    410757 <_start@@Base+0xb5f7>
  41070d:	mov    rax,QWORD PTR [rbp-0x50]
  410711:	mov    QWORD PTR [rbp-0x20],rax
  410715:	lea    rcx,[rbp-0x30]
  410719:	mov    rdx,QWORD PTR [rbp-0x58]
  41071d:	mov    rsi,QWORD PTR [rbp-0x20]
  410721:	mov    rax,QWORD PTR [rbp-0x48]
  410725:	mov    r8,rcx
  410728:	lea    rcx,[rip+0x35f11]        # 446640 <__data_start@@Base+0x580>
  41072f:	mov    rdi,rax
  410732:	call   40716d <_start@@Base+0x200d>
  410737:	mov    QWORD PTR [rbp-0x50],rax
  41073b:	mov    rax,QWORD PTR [rbp-0x50]
  41073f:	cmp    rax,QWORD PTR [rbp-0x20]
  410743:	je     411985 <_start@@Base+0xc825>
  410749:	mov    rax,QWORD PTR [rbp-0x50]
  41074d:	cmp    rax,QWORD PTR [rbp-0x58]
  410751:	je     411985 <_start@@Base+0xc825>
  410757:	mov    eax,DWORD PTR [rbp-0x30]
  41075a:	test   eax,eax
  41075c:	jne    410770 <_start@@Base+0xb610>
  41075e:	mov    rax,QWORD PTR [rbp-0x48]
  410762:	mov    eax,DWORD PTR [rax+0x10]
  410765:	and    eax,0x2
  410768:	test   eax,eax
  41076a:	je     41184c <_start@@Base+0xc6ec>
  410770:	mov    rax,QWORD PTR [rbp-0x48]
  410774:	mov    rax,QWORD PTR [rax]
  410777:	mov    ecx,0x4
  41077c:	mov    edx,0x4
  410781:	mov    esi,0x14
  410786:	mov    rdi,rax
  410789:	call   41f93b <flatcc_builder_table_add@@Base>
  41078e:	mov    QWORD PTR [rbp-0x10],rax
  410792:	cmp    QWORD PTR [rbp-0x10],0x0
  410797:	je     411954 <_start@@Base+0xc7f4>
  41079d:	mov    edx,DWORD PTR [rbp-0x30]
  4107a0:	mov    rax,QWORD PTR [rbp-0x10]
  4107a4:	mov    esi,edx
  4107a6:	mov    rdi,rax
  4107a9:	call   4053b7 <_start@@Base+0x257>
  4107ae:	jmp    41184c <_start@@Base+0xc6ec>
  4107b3:	mov    rdx,QWORD PTR [rbp-0x58]
  4107b7:	mov    rcx,QWORD PTR [rbp-0x50]
  4107bb:	mov    rax,QWORD PTR [rbp-0x48]
  4107bf:	mov    rsi,rcx
  4107c2:	mov    rdi,rax
  4107c5:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4107ca:	mov    QWORD PTR [rbp-0x50],rax
  4107ce:	jmp    41184c <_start@@Base+0xc6ec>
  4107d3:	mov    rdx,QWORD PTR [rbp-0x58]
  4107d7:	mov    rcx,QWORD PTR [rbp-0x50]
  4107db:	mov    rax,QWORD PTR [rbp-0x48]
  4107df:	mov    rsi,rcx
  4107e2:	mov    rdi,rax
  4107e5:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4107ea:	mov    QWORD PTR [rbp-0x50],rax
  4107ee:	jmp    41184c <_start@@Base+0xc6ec>
  4107f3:	mov    rdx,QWORD PTR [rbp-0x58]
  4107f7:	mov    rcx,QWORD PTR [rbp-0x50]
  4107fb:	mov    rax,QWORD PTR [rbp-0x48]
  4107ff:	mov    rsi,rcx
  410802:	mov    rdi,rax
  410805:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41080a:	mov    QWORD PTR [rbp-0x50],rax
  41080e:	jmp    41184c <_start@@Base+0xc6ec>
  410813:	movabs rax,0x7533325f666e7630
  41081d:	cmp    QWORD PTR [rbp-0x28],rax
  410821:	ja     410b01 <_start@@Base+0xb9a1>
  410827:	movabs rax,0x7336345f666e7631
  410831:	cmp    QWORD PTR [rbp-0x28],rax
  410835:	jne    410ae1 <_start@@Base+0xb981>
  41083b:	mov    rax,QWORD PTR [rbp-0x50]
  41083f:	mov    QWORD PTR [rbp-0x20],rax
  410843:	mov    rdx,QWORD PTR [rbp-0x58]
  410847:	mov    rsi,QWORD PTR [rbp-0x20]
  41084b:	mov    rax,QWORD PTR [rbp-0x48]
  41084f:	mov    ecx,0x8
  410854:	mov    rdi,rax
  410857:	call   405c76 <_start@@Base+0xb16>
  41085c:	mov    QWORD PTR [rbp-0x50],rax
  410860:	mov    rax,QWORD PTR [rbp-0x20]
  410864:	cmp    rax,QWORD PTR [rbp-0x50]
  410868:	je     41094e <_start@@Base+0xb7ee>
  41086e:	mov    QWORD PTR [rbp-0x30],0x0
  410876:	mov    rax,QWORD PTR [rbp-0x50]
  41087a:	mov    QWORD PTR [rbp-0x20],rax
  41087e:	lea    rcx,[rbp-0x30]
  410882:	mov    rdx,QWORD PTR [rbp-0x58]
  410886:	mov    rsi,QWORD PTR [rbp-0x20]
  41088a:	mov    rax,QWORD PTR [rbp-0x48]
  41088e:	mov    rdi,rax
  410891:	call   40669a <_start@@Base+0x153a>
  410896:	mov    QWORD PTR [rbp-0x50],rax
  41089a:	mov    rax,QWORD PTR [rbp-0x20]
  41089e:	cmp    rax,QWORD PTR [rbp-0x50]
  4108a2:	jne    4108ee <_start@@Base+0xb78e>
  4108a4:	mov    rax,QWORD PTR [rbp-0x50]
  4108a8:	mov    QWORD PTR [rbp-0x20],rax
  4108ac:	lea    rcx,[rbp-0x30]
  4108b0:	mov    rdx,QWORD PTR [rbp-0x58]
  4108b4:	mov    rsi,QWORD PTR [rbp-0x20]
  4108b8:	mov    rax,QWORD PTR [rbp-0x48]
  4108bc:	mov    r8,rcx
  4108bf:	lea    rcx,[rip+0x35d9a]        # 446660 <__data_start@@Base+0x5a0>
  4108c6:	mov    rdi,rax
  4108c9:	call   40700e <_start@@Base+0x1eae>
  4108ce:	mov    QWORD PTR [rbp-0x50],rax
  4108d2:	mov    rax,QWORD PTR [rbp-0x50]
  4108d6:	cmp    rax,QWORD PTR [rbp-0x20]
  4108da:	je     411985 <_start@@Base+0xc825>
  4108e0:	mov    rax,QWORD PTR [rbp-0x50]
  4108e4:	cmp    rax,QWORD PTR [rbp-0x58]
  4108e8:	je     411985 <_start@@Base+0xc825>
  4108ee:	mov    rax,QWORD PTR [rbp-0x30]
  4108f2:	test   rax,rax
  4108f5:	jne    410909 <_start@@Base+0xb7a9>
  4108f7:	mov    rax,QWORD PTR [rbp-0x48]
  4108fb:	mov    eax,DWORD PTR [rax+0x10]
  4108fe:	and    eax,0x2
  410901:	test   eax,eax
  410903:	je     41184c <_start@@Base+0xc6ec>
  410909:	mov    rax,QWORD PTR [rbp-0x48]
  41090d:	mov    rax,QWORD PTR [rax]
  410910:	mov    ecx,0x8
  410915:	mov    edx,0x8
  41091a:	mov    esi,0x12
  41091f:	mov    rdi,rax
  410922:	call   41f93b <flatcc_builder_table_add@@Base>
  410927:	mov    QWORD PTR [rbp-0x10],rax
  41092b:	cmp    QWORD PTR [rbp-0x10],0x0
  410930:	je     411957 <_start@@Base+0xc7f7>
  410936:	mov    rdx,QWORD PTR [rbp-0x30]
  41093a:	mov    rax,QWORD PTR [rbp-0x10]
  41093e:	mov    rsi,rdx
  410941:	mov    rdi,rax
  410944:	call   4053e9 <_start@@Base+0x289>
  410949:	jmp    41184c <_start@@Base+0xc6ec>
  41094e:	add    QWORD PTR [rbp-0x50],0x8
  410953:	mov    rdx,QWORD PTR [rbp-0x58]
  410957:	mov    rax,QWORD PTR [rbp-0x50]
  41095b:	mov    rsi,rdx
  41095e:	mov    rdi,rax
  410961:	call   405779 <_start@@Base+0x619>
  410966:	mov    QWORD PTR [rbp-0x28],rax
  41096a:	movabs rax,0xff00000000000000
  410974:	and    rax,QWORD PTR [rbp-0x28]
  410978:	mov    rdx,rax
  41097b:	movabs rax,0x6100000000000000
  410985:	cmp    rdx,rax
  410988:	jne    410ac1 <_start@@Base+0xb961>
  41098e:	mov    rax,QWORD PTR [rbp-0x50]
  410992:	mov    QWORD PTR [rbp-0x20],rax
  410996:	mov    rdx,QWORD PTR [rbp-0x58]
  41099a:	mov    rsi,QWORD PTR [rbp-0x20]
  41099e:	mov    rax,QWORD PTR [rbp-0x48]
  4109a2:	mov    ecx,0x1
  4109a7:	mov    rdi,rax
  4109aa:	call   405c76 <_start@@Base+0xb16>
  4109af:	mov    QWORD PTR [rbp-0x50],rax
  4109b3:	mov    rax,QWORD PTR [rbp-0x20]
  4109b7:	cmp    rax,QWORD PTR [rbp-0x50]
  4109bb:	je     410aa1 <_start@@Base+0xb941>
  4109c1:	mov    QWORD PTR [rbp-0x30],0x0
  4109c9:	mov    rax,QWORD PTR [rbp-0x50]
  4109cd:	mov    QWORD PTR [rbp-0x20],rax
  4109d1:	lea    rcx,[rbp-0x30]
  4109d5:	mov    rdx,QWORD PTR [rbp-0x58]
  4109d9:	mov    rsi,QWORD PTR [rbp-0x20]
  4109dd:	mov    rax,QWORD PTR [rbp-0x48]
  4109e1:	mov    rdi,rax
  4109e4:	call   40669a <_start@@Base+0x153a>
  4109e9:	mov    QWORD PTR [rbp-0x50],rax
  4109ed:	mov    rax,QWORD PTR [rbp-0x20]
  4109f1:	cmp    rax,QWORD PTR [rbp-0x50]
  4109f5:	jne    410a41 <_start@@Base+0xb8e1>
  4109f7:	mov    rax,QWORD PTR [rbp-0x50]
  4109fb:	mov    QWORD PTR [rbp-0x20],rax
  4109ff:	lea    rcx,[rbp-0x30]
  410a03:	mov    rdx,QWORD PTR [rbp-0x58]
  410a07:	mov    rsi,QWORD PTR [rbp-0x20]
  410a0b:	mov    rax,QWORD PTR [rbp-0x48]
  410a0f:	mov    r8,rcx
  410a12:	lea    rcx,[rip+0x35c67]        # 446680 <__data_start@@Base+0x5c0>
  410a19:	mov    rdi,rax
  410a1c:	call   40700e <_start@@Base+0x1eae>
  410a21:	mov    QWORD PTR [rbp-0x50],rax
  410a25:	mov    rax,QWORD PTR [rbp-0x50]
  410a29:	cmp    rax,QWORD PTR [rbp-0x20]
  410a2d:	je     411985 <_start@@Base+0xc825>
  410a33:	mov    rax,QWORD PTR [rbp-0x50]
  410a37:	cmp    rax,QWORD PTR [rbp-0x58]
  410a3b:	je     411985 <_start@@Base+0xc825>
  410a41:	mov    rax,QWORD PTR [rbp-0x30]
  410a45:	test   rax,rax
  410a48:	jne    410a5c <_start@@Base+0xb8fc>
  410a4a:	mov    rax,QWORD PTR [rbp-0x48]
  410a4e:	mov    eax,DWORD PTR [rax+0x10]
  410a51:	and    eax,0x2
  410a54:	test   eax,eax
  410a56:	je     41184c <_start@@Base+0xc6ec>
  410a5c:	mov    rax,QWORD PTR [rbp-0x48]
  410a60:	mov    rax,QWORD PTR [rax]
  410a63:	mov    ecx,0x8
  410a68:	mov    edx,0x8
  410a6d:	mov    esi,0x16
  410a72:	mov    rdi,rax
  410a75:	call   41f93b <flatcc_builder_table_add@@Base>
  410a7a:	mov    QWORD PTR [rbp-0x10],rax
  410a7e:	cmp    QWORD PTR [rbp-0x10],0x0
  410a83:	je     41195a <_start@@Base+0xc7fa>
  410a89:	mov    rdx,QWORD PTR [rbp-0x30]
  410a8d:	mov    rax,QWORD PTR [rbp-0x10]
  410a91:	mov    rsi,rdx
  410a94:	mov    rdi,rax
  410a97:	call   4053e9 <_start@@Base+0x289>
  410a9c:	jmp    41184c <_start@@Base+0xc6ec>
  410aa1:	mov    rdx,QWORD PTR [rbp-0x58]
  410aa5:	mov    rcx,QWORD PTR [rbp-0x50]
  410aa9:	mov    rax,QWORD PTR [rbp-0x48]
  410aad:	mov    rsi,rcx
  410ab0:	mov    rdi,rax
  410ab3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  410ab8:	mov    QWORD PTR [rbp-0x50],rax
  410abc:	jmp    41184c <_start@@Base+0xc6ec>
  410ac1:	mov    rdx,QWORD PTR [rbp-0x58]
  410ac5:	mov    rcx,QWORD PTR [rbp-0x50]
  410ac9:	mov    rax,QWORD PTR [rbp-0x48]
  410acd:	mov    rsi,rcx
  410ad0:	mov    rdi,rax
  410ad3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  410ad8:	mov    QWORD PTR [rbp-0x50],rax
  410adc:	jmp    41184c <_start@@Base+0xc6ec>
  410ae1:	mov    rdx,QWORD PTR [rbp-0x58]
  410ae5:	mov    rcx,QWORD PTR [rbp-0x50]
  410ae9:	mov    rax,QWORD PTR [rbp-0x48]
  410aed:	mov    rsi,rcx
  410af0:	mov    rdi,rax
  410af3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  410af8:	mov    QWORD PTR [rbp-0x50],rax
  410afc:	jmp    41184c <_start@@Base+0xc6ec>
  410b01:	movabs rax,0x7533325f666e7631
  410b0b:	cmp    QWORD PTR [rbp-0x28],rax
  410b0f:	jne    410db1 <_start@@Base+0xbc51>
  410b15:	mov    rax,QWORD PTR [rbp-0x50]
  410b19:	mov    QWORD PTR [rbp-0x20],rax
  410b1d:	mov    rdx,QWORD PTR [rbp-0x58]
  410b21:	mov    rsi,QWORD PTR [rbp-0x20]
  410b25:	mov    rax,QWORD PTR [rbp-0x48]
  410b29:	mov    ecx,0x8
  410b2e:	mov    rdi,rax
  410b31:	call   405c76 <_start@@Base+0xb16>
  410b36:	mov    QWORD PTR [rbp-0x50],rax
  410b3a:	mov    rax,QWORD PTR [rbp-0x20]
  410b3e:	cmp    rax,QWORD PTR [rbp-0x50]
  410b42:	je     410c23 <_start@@Base+0xbac3>
  410b48:	mov    DWORD PTR [rbp-0x30],0x0
  410b4f:	mov    rax,QWORD PTR [rbp-0x50]
  410b53:	mov    QWORD PTR [rbp-0x20],rax
  410b57:	lea    rcx,[rbp-0x30]
  410b5b:	mov    rdx,QWORD PTR [rbp-0x58]
  410b5f:	mov    rsi,QWORD PTR [rbp-0x20]
  410b63:	mov    rax,QWORD PTR [rbp-0x48]
  410b67:	mov    rdi,rax
  410b6a:	call   40644c <_start@@Base+0x12ec>
  410b6f:	mov    QWORD PTR [rbp-0x50],rax
  410b73:	mov    rax,QWORD PTR [rbp-0x20]
  410b77:	cmp    rax,QWORD PTR [rbp-0x50]
  410b7b:	jne    410bc7 <_start@@Base+0xba67>
  410b7d:	mov    rax,QWORD PTR [rbp-0x50]
  410b81:	mov    QWORD PTR [rbp-0x20],rax
  410b85:	lea    rcx,[rbp-0x30]
  410b89:	mov    rdx,QWORD PTR [rbp-0x58]
  410b8d:	mov    rsi,QWORD PTR [rbp-0x20]
  410b91:	mov    rax,QWORD PTR [rbp-0x48]
  410b95:	mov    r8,rcx
  410b98:	lea    rcx,[rip+0x35b01]        # 4466a0 <__data_start@@Base+0x5e0>
  410b9f:	mov    rdi,rax
  410ba2:	call   406c06 <_start@@Base+0x1aa6>
  410ba7:	mov    QWORD PTR [rbp-0x50],rax
  410bab:	mov    rax,QWORD PTR [rbp-0x50]
  410baf:	cmp    rax,QWORD PTR [rbp-0x20]
  410bb3:	je     411985 <_start@@Base+0xc825>
  410bb9:	mov    rax,QWORD PTR [rbp-0x50]
  410bbd:	cmp    rax,QWORD PTR [rbp-0x58]
  410bc1:	je     411985 <_start@@Base+0xc825>
  410bc7:	mov    eax,DWORD PTR [rbp-0x30]
  410bca:	test   eax,eax
  410bcc:	jne    410be0 <_start@@Base+0xba80>
  410bce:	mov    rax,QWORD PTR [rbp-0x48]
  410bd2:	mov    eax,DWORD PTR [rax+0x10]
  410bd5:	and    eax,0x2
  410bd8:	test   eax,eax
  410bda:	je     41184c <_start@@Base+0xc6ec>
  410be0:	mov    rax,QWORD PTR [rbp-0x48]
  410be4:	mov    rax,QWORD PTR [rax]
  410be7:	mov    ecx,0x4
  410bec:	mov    edx,0x4
  410bf1:	mov    esi,0x11
  410bf6:	mov    rdi,rax
  410bf9:	call   41f93b <flatcc_builder_table_add@@Base>
  410bfe:	mov    QWORD PTR [rbp-0x10],rax
  410c02:	cmp    QWORD PTR [rbp-0x10],0x0
  410c07:	je     41195d <_start@@Base+0xc7fd>
  410c0d:	mov    edx,DWORD PTR [rbp-0x30]
  410c10:	mov    rax,QWORD PTR [rbp-0x10]
  410c14:	mov    esi,edx
  410c16:	mov    rdi,rax
  410c19:	call   4052e1 <_start@@Base+0x181>
  410c1e:	jmp    41184c <_start@@Base+0xc6ec>
  410c23:	add    QWORD PTR [rbp-0x50],0x8
  410c28:	mov    rdx,QWORD PTR [rbp-0x58]
  410c2c:	mov    rax,QWORD PTR [rbp-0x50]
  410c30:	mov    rsi,rdx
  410c33:	mov    rdi,rax
  410c36:	call   405779 <_start@@Base+0x619>
  410c3b:	mov    QWORD PTR [rbp-0x28],rax
  410c3f:	movabs rax,0xff00000000000000
  410c49:	and    rax,QWORD PTR [rbp-0x28]
  410c4d:	mov    rdx,rax
  410c50:	movabs rax,0x6100000000000000
  410c5a:	cmp    rdx,rax
  410c5d:	jne    410d91 <_start@@Base+0xbc31>
  410c63:	mov    rax,QWORD PTR [rbp-0x50]
  410c67:	mov    QWORD PTR [rbp-0x20],rax
  410c6b:	mov    rdx,QWORD PTR [rbp-0x58]
  410c6f:	mov    rsi,QWORD PTR [rbp-0x20]
  410c73:	mov    rax,QWORD PTR [rbp-0x48]
  410c77:	mov    ecx,0x1
  410c7c:	mov    rdi,rax
  410c7f:	call   405c76 <_start@@Base+0xb16>
  410c84:	mov    QWORD PTR [rbp-0x50],rax
  410c88:	mov    rax,QWORD PTR [rbp-0x20]
  410c8c:	cmp    rax,QWORD PTR [rbp-0x50]
  410c90:	je     410d71 <_start@@Base+0xbc11>
  410c96:	mov    DWORD PTR [rbp-0x30],0x0
  410c9d:	mov    rax,QWORD PTR [rbp-0x50]
  410ca1:	mov    QWORD PTR [rbp-0x20],rax
  410ca5:	lea    rcx,[rbp-0x30]
  410ca9:	mov    rdx,QWORD PTR [rbp-0x58]
  410cad:	mov    rsi,QWORD PTR [rbp-0x20]
  410cb1:	mov    rax,QWORD PTR [rbp-0x48]
  410cb5:	mov    rdi,rax
  410cb8:	call   40644c <_start@@Base+0x12ec>
  410cbd:	mov    QWORD PTR [rbp-0x50],rax
  410cc1:	mov    rax,QWORD PTR [rbp-0x20]
  410cc5:	cmp    rax,QWORD PTR [rbp-0x50]
  410cc9:	jne    410d15 <_start@@Base+0xbbb5>
  410ccb:	mov    rax,QWORD PTR [rbp-0x50]
  410ccf:	mov    QWORD PTR [rbp-0x20],rax
  410cd3:	lea    rcx,[rbp-0x30]
  410cd7:	mov    rdx,QWORD PTR [rbp-0x58]
  410cdb:	mov    rsi,QWORD PTR [rbp-0x20]
  410cdf:	mov    rax,QWORD PTR [rbp-0x48]
  410ce3:	mov    r8,rcx
  410ce6:	lea    rcx,[rip+0x359d3]        # 4466c0 <__data_start@@Base+0x600>
  410ced:	mov    rdi,rax
  410cf0:	call   406c06 <_start@@Base+0x1aa6>
  410cf5:	mov    QWORD PTR [rbp-0x50],rax
  410cf9:	mov    rax,QWORD PTR [rbp-0x50]
  410cfd:	cmp    rax,QWORD PTR [rbp-0x20]
  410d01:	je     411985 <_start@@Base+0xc825>
  410d07:	mov    rax,QWORD PTR [rbp-0x50]
  410d0b:	cmp    rax,QWORD PTR [rbp-0x58]
  410d0f:	je     411985 <_start@@Base+0xc825>
  410d15:	mov    eax,DWORD PTR [rbp-0x30]
  410d18:	test   eax,eax
  410d1a:	jne    410d2e <_start@@Base+0xbbce>
  410d1c:	mov    rax,QWORD PTR [rbp-0x48]
  410d20:	mov    eax,DWORD PTR [rax+0x10]
  410d23:	and    eax,0x2
  410d26:	test   eax,eax
  410d28:	je     41184c <_start@@Base+0xc6ec>
  410d2e:	mov    rax,QWORD PTR [rbp-0x48]
  410d32:	mov    rax,QWORD PTR [rax]
  410d35:	mov    ecx,0x4
  410d3a:	mov    edx,0x4
  410d3f:	mov    esi,0x15
  410d44:	mov    rdi,rax
  410d47:	call   41f93b <flatcc_builder_table_add@@Base>
  410d4c:	mov    QWORD PTR [rbp-0x10],rax
  410d50:	cmp    QWORD PTR [rbp-0x10],0x0
  410d55:	je     411960 <_start@@Base+0xc800>
  410d5b:	mov    edx,DWORD PTR [rbp-0x30]
  410d5e:	mov    rax,QWORD PTR [rbp-0x10]
  410d62:	mov    esi,edx
  410d64:	mov    rdi,rax
  410d67:	call   4052e1 <_start@@Base+0x181>
  410d6c:	jmp    41184c <_start@@Base+0xc6ec>
  410d71:	mov    rdx,QWORD PTR [rbp-0x58]
  410d75:	mov    rcx,QWORD PTR [rbp-0x50]
  410d79:	mov    rax,QWORD PTR [rbp-0x48]
  410d7d:	mov    rsi,rcx
  410d80:	mov    rdi,rax
  410d83:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  410d88:	mov    QWORD PTR [rbp-0x50],rax
  410d8c:	jmp    41184c <_start@@Base+0xc6ec>
  410d91:	mov    rdx,QWORD PTR [rbp-0x58]
  410d95:	mov    rcx,QWORD PTR [rbp-0x50]
  410d99:	mov    rax,QWORD PTR [rbp-0x48]
  410d9d:	mov    rsi,rcx
  410da0:	mov    rdi,rax
  410da3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  410da8:	mov    QWORD PTR [rbp-0x50],rax
  410dac:	jmp    41184c <_start@@Base+0xc6ec>
  410db1:	movabs rax,0x7536345f666e7631
  410dbb:	cmp    QWORD PTR [rbp-0x28],rax
  410dbf:	jne    41106b <_start@@Base+0xbf0b>
  410dc5:	mov    rax,QWORD PTR [rbp-0x50]
  410dc9:	mov    QWORD PTR [rbp-0x20],rax
  410dcd:	mov    rdx,QWORD PTR [rbp-0x58]
  410dd1:	mov    rsi,QWORD PTR [rbp-0x20]
  410dd5:	mov    rax,QWORD PTR [rbp-0x48]
  410dd9:	mov    ecx,0x8
  410dde:	mov    rdi,rax
  410de1:	call   405c76 <_start@@Base+0xb16>
  410de6:	mov    QWORD PTR [rbp-0x50],rax
  410dea:	mov    rax,QWORD PTR [rbp-0x20]
  410dee:	cmp    rax,QWORD PTR [rbp-0x50]
  410df2:	je     410ed8 <_start@@Base+0xbd78>
  410df8:	mov    QWORD PTR [rbp-0x30],0x0
  410e00:	mov    rax,QWORD PTR [rbp-0x50]
  410e04:	mov    QWORD PTR [rbp-0x20],rax
  410e08:	lea    rcx,[rbp-0x30]
  410e0c:	mov    rdx,QWORD PTR [rbp-0x58]
  410e10:	mov    rsi,QWORD PTR [rbp-0x20]
  410e14:	mov    rax,QWORD PTR [rbp-0x48]
  410e18:	mov    rdi,rax
  410e1b:	call   406385 <_start@@Base+0x1225>
  410e20:	mov    QWORD PTR [rbp-0x50],rax
  410e24:	mov    rax,QWORD PTR [rbp-0x20]
  410e28:	cmp    rax,QWORD PTR [rbp-0x50]
  410e2c:	jne    410e78 <_start@@Base+0xbd18>
  410e2e:	mov    rax,QWORD PTR [rbp-0x50]
  410e32:	mov    QWORD PTR [rbp-0x20],rax
  410e36:	lea    rcx,[rbp-0x30]
  410e3a:	mov    rdx,QWORD PTR [rbp-0x58]
  410e3e:	mov    rsi,QWORD PTR [rbp-0x20]
  410e42:	mov    rax,QWORD PTR [rbp-0x48]
  410e46:	mov    r8,rcx
  410e49:	lea    rcx,[rip+0x35890]        # 4466e0 <__data_start@@Base+0x620>
  410e50:	mov    rdi,rax
  410e53:	call   406aa7 <_start@@Base+0x1947>
  410e58:	mov    QWORD PTR [rbp-0x50],rax
  410e5c:	mov    rax,QWORD PTR [rbp-0x50]
  410e60:	cmp    rax,QWORD PTR [rbp-0x20]
  410e64:	je     411985 <_start@@Base+0xc825>
  410e6a:	mov    rax,QWORD PTR [rbp-0x50]
  410e6e:	cmp    rax,QWORD PTR [rbp-0x58]
  410e72:	je     411985 <_start@@Base+0xc825>
  410e78:	mov    rax,QWORD PTR [rbp-0x30]
  410e7c:	test   rax,rax
  410e7f:	jne    410e93 <_start@@Base+0xbd33>
  410e81:	mov    rax,QWORD PTR [rbp-0x48]
  410e85:	mov    eax,DWORD PTR [rax+0x10]
  410e88:	and    eax,0x2
  410e8b:	test   eax,eax
  410e8d:	je     41184c <_start@@Base+0xc6ec>
  410e93:	mov    rax,QWORD PTR [rbp-0x48]
  410e97:	mov    rax,QWORD PTR [rax]
  410e9a:	mov    ecx,0x8
  410e9f:	mov    edx,0x8
  410ea4:	mov    esi,0x13
  410ea9:	mov    rdi,rax
  410eac:	call   41f93b <flatcc_builder_table_add@@Base>
  410eb1:	mov    QWORD PTR [rbp-0x10],rax
  410eb5:	cmp    QWORD PTR [rbp-0x10],0x0
  410eba:	je     411963 <_start@@Base+0xc803>
  410ec0:	mov    rdx,QWORD PTR [rbp-0x30]
  410ec4:	mov    rax,QWORD PTR [rbp-0x10]
  410ec8:	mov    rsi,rdx
  410ecb:	mov    rdi,rax
  410ece:	call   405313 <_start@@Base+0x1b3>
  410ed3:	jmp    41184c <_start@@Base+0xc6ec>
  410ed8:	add    QWORD PTR [rbp-0x50],0x8
  410edd:	mov    rdx,QWORD PTR [rbp-0x58]
  410ee1:	mov    rax,QWORD PTR [rbp-0x50]
  410ee5:	mov    rsi,rdx
  410ee8:	mov    rdi,rax
  410eeb:	call   405779 <_start@@Base+0x619>
  410ef0:	mov    QWORD PTR [rbp-0x28],rax
  410ef4:	movabs rax,0xff00000000000000
  410efe:	and    rax,QWORD PTR [rbp-0x28]
  410f02:	mov    rdx,rax
  410f05:	movabs rax,0x6100000000000000
  410f0f:	cmp    rdx,rax
  410f12:	jne    41104b <_start@@Base+0xbeeb>
  410f18:	mov    rax,QWORD PTR [rbp-0x50]
  410f1c:	mov    QWORD PTR [rbp-0x20],rax
  410f20:	mov    rdx,QWORD PTR [rbp-0x58]
  410f24:	mov    rsi,QWORD PTR [rbp-0x20]
  410f28:	mov    rax,QWORD PTR [rbp-0x48]
  410f2c:	mov    ecx,0x1
  410f31:	mov    rdi,rax
  410f34:	call   405c76 <_start@@Base+0xb16>
  410f39:	mov    QWORD PTR [rbp-0x50],rax
  410f3d:	mov    rax,QWORD PTR [rbp-0x20]
  410f41:	cmp    rax,QWORD PTR [rbp-0x50]
  410f45:	je     41102b <_start@@Base+0xbecb>
  410f4b:	mov    QWORD PTR [rbp-0x30],0x0
  410f53:	mov    rax,QWORD PTR [rbp-0x50]
  410f57:	mov    QWORD PTR [rbp-0x20],rax
  410f5b:	lea    rcx,[rbp-0x30]
  410f5f:	mov    rdx,QWORD PTR [rbp-0x58]
  410f63:	mov    rsi,QWORD PTR [rbp-0x20]
  410f67:	mov    rax,QWORD PTR [rbp-0x48]
  410f6b:	mov    rdi,rax
  410f6e:	call   406385 <_start@@Base+0x1225>
  410f73:	mov    QWORD PTR [rbp-0x50],rax
  410f77:	mov    rax,QWORD PTR [rbp-0x20]
  410f7b:	cmp    rax,QWORD PTR [rbp-0x50]
  410f7f:	jne    410fcb <_start@@Base+0xbe6b>
  410f81:	mov    rax,QWORD PTR [rbp-0x50]
  410f85:	mov    QWORD PTR [rbp-0x20],rax
  410f89:	lea    rcx,[rbp-0x30]
  410f8d:	mov    rdx,QWORD PTR [rbp-0x58]
  410f91:	mov    rsi,QWORD PTR [rbp-0x20]
  410f95:	mov    rax,QWORD PTR [rbp-0x48]
  410f99:	mov    r8,rcx
  410f9c:	lea    rcx,[rip+0x3575d]        # 446700 <__data_start@@Base+0x640>
  410fa3:	mov    rdi,rax
  410fa6:	call   406aa7 <_start@@Base+0x1947>
  410fab:	mov    QWORD PTR [rbp-0x50],rax
  410faf:	mov    rax,QWORD PTR [rbp-0x50]
  410fb3:	cmp    rax,QWORD PTR [rbp-0x20]
  410fb7:	je     411985 <_start@@Base+0xc825>
  410fbd:	mov    rax,QWORD PTR [rbp-0x50]
  410fc1:	cmp    rax,QWORD PTR [rbp-0x58]
  410fc5:	je     411985 <_start@@Base+0xc825>
  410fcb:	mov    rax,QWORD PTR [rbp-0x30]
  410fcf:	test   rax,rax
  410fd2:	jne    410fe6 <_start@@Base+0xbe86>
  410fd4:	mov    rax,QWORD PTR [rbp-0x48]
  410fd8:	mov    eax,DWORD PTR [rax+0x10]
  410fdb:	and    eax,0x2
  410fde:	test   eax,eax
  410fe0:	je     41184c <_start@@Base+0xc6ec>
  410fe6:	mov    rax,QWORD PTR [rbp-0x48]
  410fea:	mov    rax,QWORD PTR [rax]
  410fed:	mov    ecx,0x8
  410ff2:	mov    edx,0x8
  410ff7:	mov    esi,0x17
  410ffc:	mov    rdi,rax
  410fff:	call   41f93b <flatcc_builder_table_add@@Base>
  411004:	mov    QWORD PTR [rbp-0x10],rax
  411008:	cmp    QWORD PTR [rbp-0x10],0x0
  41100d:	je     411966 <_start@@Base+0xc806>
  411013:	mov    rdx,QWORD PTR [rbp-0x30]
  411017:	mov    rax,QWORD PTR [rbp-0x10]
  41101b:	mov    rsi,rdx
  41101e:	mov    rdi,rax
  411021:	call   405313 <_start@@Base+0x1b3>
  411026:	jmp    41184c <_start@@Base+0xc6ec>
  41102b:	mov    rdx,QWORD PTR [rbp-0x58]
  41102f:	mov    rcx,QWORD PTR [rbp-0x50]
  411033:	mov    rax,QWORD PTR [rbp-0x48]
  411037:	mov    rsi,rcx
  41103a:	mov    rdi,rax
  41103d:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411042:	mov    QWORD PTR [rbp-0x50],rax
  411046:	jmp    41184c <_start@@Base+0xc6ec>
  41104b:	mov    rdx,QWORD PTR [rbp-0x58]
  41104f:	mov    rcx,QWORD PTR [rbp-0x50]
  411053:	mov    rax,QWORD PTR [rbp-0x48]
  411057:	mov    rsi,rcx
  41105a:	mov    rdi,rax
  41105d:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411062:	mov    QWORD PTR [rbp-0x50],rax
  411066:	jmp    41184c <_start@@Base+0xc6ec>
  41106b:	mov    rdx,QWORD PTR [rbp-0x58]
  41106f:	mov    rcx,QWORD PTR [rbp-0x50]
  411073:	mov    rax,QWORD PTR [rbp-0x48]
  411077:	mov    rsi,rcx
  41107a:	mov    rdi,rax
  41107d:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411082:	mov    QWORD PTR [rbp-0x50],rax
  411086:	jmp    41184c <_start@@Base+0xc6ec>
  41108b:	movabs rax,0x766563746f725f6e
  411095:	cmp    QWORD PTR [rbp-0x28],rax
  411099:	ja     4113c9 <_start@@Base+0xc269>
  41109f:	movabs rax,0x746573746e657374
  4110a9:	cmp    QWORD PTR [rbp-0x28],rax
  4110ad:	jne    4113a9 <_start@@Base+0xc249>
  4110b3:	add    QWORD PTR [rbp-0x50],0x8
  4110b8:	mov    rdx,QWORD PTR [rbp-0x58]
  4110bc:	mov    rax,QWORD PTR [rbp-0x50]
  4110c0:	mov    rsi,rdx
  4110c3:	mov    rdi,rax
  4110c6:	call   405779 <_start@@Base+0x619>
  4110cb:	mov    QWORD PTR [rbp-0x28],rax
  4110cf:	movabs rax,0x6564666c61746275
  4110d9:	cmp    QWORD PTR [rbp-0x28],rax
  4110dd:	jne    411389 <_start@@Base+0xc229>
  4110e3:	add    QWORD PTR [rbp-0x50],0x8
  4110e8:	mov    rdx,QWORD PTR [rbp-0x58]
  4110ec:	mov    rax,QWORD PTR [rbp-0x50]
  4110f0:	mov    rsi,rdx
  4110f3:	mov    rdi,rax
  4110f6:	call   405779 <_start@@Base+0x619>
  4110fb:	mov    QWORD PTR [rbp-0x28],rax
  4110ff:	movabs rax,0xffffffff00000000
  411109:	and    rax,QWORD PTR [rbp-0x28]
  41110d:	mov    rdx,rax
  411110:	movabs rax,0x6666657200000000
  41111a:	cmp    rdx,rax
  41111d:	jne    411369 <_start@@Base+0xc209>
  411123:	mov    rax,QWORD PTR [rbp-0x50]
  411127:	mov    QWORD PTR [rbp-0x20],rax
  41112b:	mov    rdx,QWORD PTR [rbp-0x58]
  41112f:	mov    rsi,QWORD PTR [rbp-0x20]
  411133:	mov    rax,QWORD PTR [rbp-0x48]
  411137:	mov    ecx,0x4
  41113c:	mov    rdi,rax
  41113f:	call   405c76 <_start@@Base+0xb16>
  411144:	mov    QWORD PTR [rbp-0x50],rax
  411148:	mov    rax,QWORD PTR [rbp-0x20]
  41114c:	cmp    rax,QWORD PTR [rbp-0x50]
  411150:	je     411349 <_start@@Base+0xc1e9>
  411156:	mov    rax,QWORD PTR [rbp-0x50]
  41115a:	cmp    rax,QWORD PTR [rbp-0x58]
  41115e:	je     4112a9 <_start@@Base+0xc149>
  411164:	mov    rax,QWORD PTR [rbp-0x50]
  411168:	movzx  eax,BYTE PTR [rax]
  41116b:	cmp    al,0x5b
  41116d:	jne    4112a9 <_start@@Base+0xc149>
  411173:	mov    rax,QWORD PTR [rbp-0x48]
  411177:	mov    rax,QWORD PTR [rax]
  41117a:	mov    ecx,0xffffffff
  41117f:	mov    edx,0x1
  411184:	mov    esi,0x1
  411189:	mov    rdi,rax
  41118c:	call   41d59d <flatcc_builder_start_vector@@Base>
  411191:	test   eax,eax
  411193:	jne    411969 <_start@@Base+0xc809>
  411199:	lea    rcx,[rbp-0x40]
  41119d:	mov    rdx,QWORD PTR [rbp-0x58]
  4111a1:	mov    rsi,QWORD PTR [rbp-0x50]
  4111a5:	mov    rax,QWORD PTR [rbp-0x48]
  4111a9:	mov    rdi,rax
  4111ac:	call   405a7b <_start@@Base+0x91b>
  4111b1:	mov    QWORD PTR [rbp-0x50],rax
  4111b5:	jmp    41128a <_start@@Base+0xc12a>
  4111ba:	mov    BYTE PTR [rbp-0x30],0x0
  4111be:	mov    rax,QWORD PTR [rbp-0x48]
  4111c2:	mov    rax,QWORD PTR [rax]
  4111c5:	mov    esi,0x1
  4111ca:	mov    rdi,rax
  4111cd:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  4111d2:	mov    QWORD PTR [rbp-0x10],rax
  4111d6:	cmp    QWORD PTR [rbp-0x10],0x0
  4111db:	je     41196c <_start@@Base+0xc80c>
  4111e1:	mov    rax,QWORD PTR [rbp-0x50]
  4111e5:	mov    QWORD PTR [rbp-0x20],rax
  4111e9:	lea    rcx,[rbp-0x30]
  4111ed:	mov    rdx,QWORD PTR [rbp-0x58]
  4111f1:	mov    rsi,QWORD PTR [rbp-0x20]
  4111f5:	mov    rax,QWORD PTR [rbp-0x48]
  4111f9:	mov    rdi,rax
  4111fc:	call   4065d7 <_start@@Base+0x1477>
  411201:	mov    QWORD PTR [rbp-0x50],rax
  411205:	mov    rax,QWORD PTR [rbp-0x20]
  411209:	cmp    rax,QWORD PTR [rbp-0x50]
  41120d:	jne    411259 <_start@@Base+0xc0f9>
  41120f:	mov    rax,QWORD PTR [rbp-0x50]
  411213:	mov    QWORD PTR [rbp-0x20],rax
  411217:	lea    rcx,[rbp-0x30]
  41121b:	mov    rdx,QWORD PTR [rbp-0x58]
  41121f:	mov    rsi,QWORD PTR [rbp-0x20]
  411223:	mov    rax,QWORD PTR [rbp-0x48]
  411227:	mov    r8,rcx
  41122a:	lea    rcx,[rip+0x354ef]        # 446720 <__data_start@@Base+0x660>
  411231:	mov    rdi,rax
  411234:	call   406eb9 <_start@@Base+0x1d59>
  411239:	mov    QWORD PTR [rbp-0x50],rax
  41123d:	mov    rax,QWORD PTR [rbp-0x50]
  411241:	cmp    rax,QWORD PTR [rbp-0x20]
  411245:	je     41196c <_start@@Base+0xc80c>
  41124b:	mov    rax,QWORD PTR [rbp-0x50]
  41124f:	cmp    rax,QWORD PTR [rbp-0x58]
  411253:	je     41196c <_start@@Base+0xc80c>
  411259:	movzx  eax,BYTE PTR [rbp-0x30]
  41125d:	movzx  edx,al
  411260:	mov    rax,QWORD PTR [rbp-0x10]
  411264:	mov    esi,edx
  411266:	mov    rdi,rax
  411269:	call   405275 <_start@@Base+0x115>
  41126e:	lea    rcx,[rbp-0x40]
  411272:	mov    rdx,QWORD PTR [rbp-0x58]
  411276:	mov    rsi,QWORD PTR [rbp-0x50]
  41127a:	mov    rax,QWORD PTR [rbp-0x48]
  41127e:	mov    rdi,rax
  411281:	call   405b38 <_start@@Base+0x9d8>
  411286:	mov    QWORD PTR [rbp-0x50],rax
  41128a:	mov    eax,DWORD PTR [rbp-0x40]
  41128d:	test   eax,eax
  41128f:	jne    4111ba <_start@@Base+0xc05a>
  411295:	mov    rax,QWORD PTR [rbp-0x48]
  411299:	mov    rax,QWORD PTR [rax]
  41129c:	mov    rdi,rax
  41129f:	call   41e773 <flatcc_builder_end_vector@@Base>
  4112a4:	mov    DWORD PTR [rbp-0x3c],eax
  4112a7:	jmp    41130d <_start@@Base+0xc1ad>
  4112a9:	mov    rax,QWORD PTR [rbp-0x48]
  4112ad:	mov    rax,QWORD PTR [rax]
  4112b0:	mov    ecx,0x0
  4112b5:	mov    edx,0x0
  4112ba:	mov    esi,0x0
  4112bf:	mov    rdi,rax
  4112c2:	call   41ca72 <flatcc_builder_start_buffer@@Base>
  4112c7:	test   eax,eax
  4112c9:	jne    41196f <_start@@Base+0xc80f>
  4112cf:	lea    rcx,[rbp-0x3c]
  4112d3:	mov    rdx,QWORD PTR [rbp-0x58]
  4112d7:	mov    rsi,QWORD PTR [rbp-0x50]
  4112db:	mov    rax,QWORD PTR [rbp-0x48]
  4112df:	mov    rdi,rax
  4112e2:	call   40e164 <_start@@Base+0x9004>
  4112e7:	mov    QWORD PTR [rbp-0x50],rax
  4112eb:	mov    eax,DWORD PTR [rbp-0x3c]
  4112ee:	test   eax,eax
  4112f0:	je     411972 <_start@@Base+0xc812>
  4112f6:	mov    edx,DWORD PTR [rbp-0x3c]
  4112f9:	mov    rax,QWORD PTR [rbp-0x48]
  4112fd:	mov    rax,QWORD PTR [rax]
  411300:	mov    esi,edx
  411302:	mov    rdi,rax
  411305:	call   41cbbb <flatcc_builder_end_buffer@@Base>
  41130a:	mov    DWORD PTR [rbp-0x3c],eax
  41130d:	mov    eax,DWORD PTR [rbp-0x3c]
  411310:	test   eax,eax
  411312:	je     411985 <_start@@Base+0xc825>
  411318:	mov    rax,QWORD PTR [rbp-0x48]
  41131c:	mov    rax,QWORD PTR [rax]
  41131f:	mov    esi,0xd
  411324:	mov    rdi,rax
  411327:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  41132c:	mov    QWORD PTR [rbp-0x18],rax
  411330:	cmp    QWORD PTR [rbp-0x18],0x0
  411335:	je     411985 <_start@@Base+0xc825>
  41133b:	mov    edx,DWORD PTR [rbp-0x3c]
  41133e:	mov    rax,QWORD PTR [rbp-0x18]
  411342:	mov    DWORD PTR [rax],edx
  411344:	jmp    41184c <_start@@Base+0xc6ec>
  411349:	mov    rdx,QWORD PTR [rbp-0x58]
  41134d:	mov    rcx,QWORD PTR [rbp-0x50]
  411351:	mov    rax,QWORD PTR [rbp-0x48]
  411355:	mov    rsi,rcx
  411358:	mov    rdi,rax
  41135b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411360:	mov    QWORD PTR [rbp-0x50],rax
  411364:	jmp    41184c <_start@@Base+0xc6ec>
  411369:	mov    rdx,QWORD PTR [rbp-0x58]
  41136d:	mov    rcx,QWORD PTR [rbp-0x50]
  411371:	mov    rax,QWORD PTR [rbp-0x48]
  411375:	mov    rsi,rcx
  411378:	mov    rdi,rax
  41137b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411380:	mov    QWORD PTR [rbp-0x50],rax
  411384:	jmp    41184c <_start@@Base+0xc6ec>
  411389:	mov    rdx,QWORD PTR [rbp-0x58]
  41138d:	mov    rcx,QWORD PTR [rbp-0x50]
  411391:	mov    rax,QWORD PTR [rbp-0x48]
  411395:	mov    rsi,rcx
  411398:	mov    rdi,rax
  41139b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4113a0:	mov    QWORD PTR [rbp-0x50],rax
  4113a4:	jmp    41184c <_start@@Base+0xc6ec>
  4113a9:	mov    rdx,QWORD PTR [rbp-0x58]
  4113ad:	mov    rcx,QWORD PTR [rbp-0x50]
  4113b1:	mov    rax,QWORD PTR [rbp-0x48]
  4113b5:	mov    rsi,rcx
  4113b8:	mov    rdi,rax
  4113bb:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4113c0:	mov    QWORD PTR [rbp-0x50],rax
  4113c4:	jmp    41184c <_start@@Base+0xc6ec>
  4113c9:	movabs rax,0x766563746f725f6f
  4113d3:	cmp    QWORD PTR [rbp-0x28],rax
  4113d7:	jne    411831 <_start@@Base+0xc6d1>
  4113dd:	add    QWORD PTR [rbp-0x50],0x8
  4113e2:	mov    rdx,QWORD PTR [rbp-0x58]
  4113e6:	mov    rax,QWORD PTR [rbp-0x50]
  4113ea:	mov    rsi,rdx
  4113ed:	mov    rdi,rax
  4113f0:	call   405779 <_start@@Base+0x619>
  4113f5:	mov    QWORD PTR [rbp-0x28],rax
  4113f9:	movabs rax,0x665f646f75626c65
  411403:	cmp    QWORD PTR [rbp-0x28],rax
  411407:	jne    411639 <_start@@Base+0xc4d9>
  41140d:	add    QWORD PTR [rbp-0x50],0x8
  411412:	mov    rdx,QWORD PTR [rbp-0x58]
  411416:	mov    rax,QWORD PTR [rbp-0x50]
  41141a:	mov    rsi,rdx
  41141d:	mov    rdi,rax
  411420:	call   405779 <_start@@Base+0x619>
  411425:	mov    QWORD PTR [rbp-0x28],rax
  411429:	movabs rax,0xff00000000000000
  411433:	and    rax,QWORD PTR [rbp-0x28]
  411437:	mov    rdx,rax
  41143a:	movabs rax,0x7300000000000000
  411444:	cmp    rdx,rax
  411447:	jne    411619 <_start@@Base+0xc4b9>
  41144d:	mov    rax,QWORD PTR [rbp-0x50]
  411451:	mov    QWORD PTR [rbp-0x20],rax
  411455:	mov    rdx,QWORD PTR [rbp-0x58]
  411459:	mov    rsi,QWORD PTR [rbp-0x20]
  41145d:	mov    rax,QWORD PTR [rbp-0x48]
  411461:	mov    ecx,0x1
  411466:	mov    rdi,rax
  411469:	call   405c76 <_start@@Base+0xb16>
  41146e:	mov    QWORD PTR [rbp-0x50],rax
  411472:	mov    rax,QWORD PTR [rbp-0x20]
  411476:	cmp    rax,QWORD PTR [rbp-0x50]
  41147a:	je     4115f9 <_start@@Base+0xc499>
  411480:	mov    rax,QWORD PTR [rbp-0x48]
  411484:	mov    rax,QWORD PTR [rax]
  411487:	mov    ecx,0x1fffffff
  41148c:	mov    edx,0x8
  411491:	mov    esi,0x8
  411496:	mov    rdi,rax
  411499:	call   41d59d <flatcc_builder_start_vector@@Base>
  41149e:	test   eax,eax
  4114a0:	jne    411975 <_start@@Base+0xc815>
  4114a6:	lea    rcx,[rbp-0x40]
  4114aa:	mov    rdx,QWORD PTR [rbp-0x58]
  4114ae:	mov    rsi,QWORD PTR [rbp-0x50]
  4114b2:	mov    rax,QWORD PTR [rbp-0x48]
  4114b6:	mov    rdi,rax
  4114b9:	call   405a7b <_start@@Base+0x91b>
  4114be:	mov    QWORD PTR [rbp-0x50],rax
  4114c2:	jmp    4115a0 <_start@@Base+0xc440>
  4114c7:	vxorpd xmm0,xmm0,xmm0
  4114cb:	vmovsd QWORD PTR [rbp-0x30],xmm0
  4114d0:	mov    rax,QWORD PTR [rbp-0x48]
  4114d4:	mov    rax,QWORD PTR [rax]
  4114d7:	mov    esi,0x1
  4114dc:	mov    rdi,rax
  4114df:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  4114e4:	mov    QWORD PTR [rbp-0x10],rax
  4114e8:	cmp    QWORD PTR [rbp-0x10],0x0
  4114ed:	je     411978 <_start@@Base+0xc818>
  4114f3:	mov    rax,QWORD PTR [rbp-0x50]
  4114f7:	mov    QWORD PTR [rbp-0x20],rax
  4114fb:	lea    rcx,[rbp-0x30]
  4114ff:	mov    rdx,QWORD PTR [rbp-0x58]
  411503:	mov    rsi,QWORD PTR [rbp-0x20]
  411507:	mov    rax,QWORD PTR [rbp-0x48]
  41150b:	mov    rdi,rax
  41150e:	call   4274c3 <flatcc_json_parser_double@@Base>
  411513:	mov    QWORD PTR [rbp-0x50],rax
  411517:	mov    rax,QWORD PTR [rbp-0x20]
  41151b:	cmp    rax,QWORD PTR [rbp-0x50]
  41151f:	jne    41156b <_start@@Base+0xc40b>
  411521:	mov    rax,QWORD PTR [rbp-0x50]
  411525:	mov    QWORD PTR [rbp-0x20],rax
  411529:	lea    rcx,[rbp-0x30]
  41152d:	mov    rdx,QWORD PTR [rbp-0x58]
  411531:	mov    rsi,QWORD PTR [rbp-0x20]
  411535:	mov    rax,QWORD PTR [rbp-0x48]
  411539:	mov    r8,rcx
  41153c:	lea    rcx,[rip+0x351fd]        # 446740 <__data_start@@Base+0x680>
  411543:	mov    rdi,rax
  411546:	call   407837 <_start@@Base+0x26d7>
  41154b:	mov    QWORD PTR [rbp-0x50],rax
  41154f:	mov    rax,QWORD PTR [rbp-0x50]
  411553:	cmp    rax,QWORD PTR [rbp-0x20]
  411557:	je     411978 <_start@@Base+0xc818>
  41155d:	mov    rax,QWORD PTR [rbp-0x50]
  411561:	cmp    rax,QWORD PTR [rbp-0x58]
  411565:	je     411978 <_start@@Base+0xc818>
  41156b:	mov    rdx,QWORD PTR [rbp-0x30]
  41156f:	mov    rax,QWORD PTR [rbp-0x10]
  411573:	mov    QWORD PTR [rbp-0x68],rdx
  411577:	vmovsd xmm0,QWORD PTR [rbp-0x68]
  41157c:	mov    rdi,rax
  41157f:	call   405482 <_start@@Base+0x322>
  411584:	lea    rcx,[rbp-0x40]
  411588:	mov    rdx,QWORD PTR [rbp-0x58]
  41158c:	mov    rsi,QWORD PTR [rbp-0x50]
  411590:	mov    rax,QWORD PTR [rbp-0x48]
  411594:	mov    rdi,rax
  411597:	call   405b38 <_start@@Base+0x9d8>
  41159c:	mov    QWORD PTR [rbp-0x50],rax
  4115a0:	mov    eax,DWORD PTR [rbp-0x40]
  4115a3:	test   eax,eax
  4115a5:	jne    4114c7 <_start@@Base+0xc367>
  4115ab:	mov    rax,QWORD PTR [rbp-0x48]
  4115af:	mov    rax,QWORD PTR [rax]
  4115b2:	mov    rdi,rax
  4115b5:	call   41e773 <flatcc_builder_end_vector@@Base>
  4115ba:	mov    DWORD PTR [rbp-0x3c],eax
  4115bd:	mov    eax,DWORD PTR [rbp-0x3c]
  4115c0:	test   eax,eax
  4115c2:	je     411985 <_start@@Base+0xc825>
  4115c8:	mov    rax,QWORD PTR [rbp-0x48]
  4115cc:	mov    rax,QWORD PTR [rax]
  4115cf:	mov    esi,0x21
  4115d4:	mov    rdi,rax
  4115d7:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  4115dc:	mov    QWORD PTR [rbp-0x18],rax
  4115e0:	cmp    QWORD PTR [rbp-0x18],0x0
  4115e5:	je     411985 <_start@@Base+0xc825>
  4115eb:	mov    edx,DWORD PTR [rbp-0x3c]
  4115ee:	mov    rax,QWORD PTR [rbp-0x18]
  4115f2:	mov    DWORD PTR [rax],edx
  4115f4:	jmp    41184c <_start@@Base+0xc6ec>
  4115f9:	mov    rdx,QWORD PTR [rbp-0x58]
  4115fd:	mov    rcx,QWORD PTR [rbp-0x50]
  411601:	mov    rax,QWORD PTR [rbp-0x48]
  411605:	mov    rsi,rcx
  411608:	mov    rdi,rax
  41160b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411610:	mov    QWORD PTR [rbp-0x50],rax
  411614:	jmp    41184c <_start@@Base+0xc6ec>
  411619:	mov    rdx,QWORD PTR [rbp-0x58]
  41161d:	mov    rcx,QWORD PTR [rbp-0x50]
  411621:	mov    rax,QWORD PTR [rbp-0x48]
  411625:	mov    rsi,rcx
  411628:	mov    rdi,rax
  41162b:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411630:	mov    QWORD PTR [rbp-0x50],rax
  411634:	jmp    41184c <_start@@Base+0xc6ec>
  411639:	mov    rax,QWORD PTR [rbp-0x28]
  41163d:	mov    al,0x0
  41163f:	mov    rdx,rax
  411642:	movabs rax,0x665f6c6f6e677300
  41164c:	cmp    rdx,rax
  41164f:	jne    411814 <_start@@Base+0xc6b4>
  411655:	mov    rax,QWORD PTR [rbp-0x50]
  411659:	mov    QWORD PTR [rbp-0x20],rax
  41165d:	mov    rdx,QWORD PTR [rbp-0x58]
  411661:	mov    rsi,QWORD PTR [rbp-0x20]
  411665:	mov    rax,QWORD PTR [rbp-0x48]
  411669:	mov    ecx,0x7
  41166e:	mov    rdi,rax
  411671:	call   405c76 <_start@@Base+0xb16>
  411676:	mov    QWORD PTR [rbp-0x50],rax
  41167a:	mov    rax,QWORD PTR [rbp-0x20]
  41167e:	cmp    rax,QWORD PTR [rbp-0x50]
  411682:	je     4117f7 <_start@@Base+0xc697>
  411688:	mov    rax,QWORD PTR [rbp-0x48]
  41168c:	mov    rax,QWORD PTR [rax]
  41168f:	mov    ecx,0x1fffffff
  411694:	mov    edx,0x8
  411699:	mov    esi,0x8
  41169e:	mov    rdi,rax
  4116a1:	call   41d59d <flatcc_builder_start_vector@@Base>
  4116a6:	test   eax,eax
  4116a8:	jne    41197b <_start@@Base+0xc81b>
  4116ae:	lea    rcx,[rbp-0x40]
  4116b2:	mov    rdx,QWORD PTR [rbp-0x58]
  4116b6:	mov    rsi,QWORD PTR [rbp-0x50]
  4116ba:	mov    rax,QWORD PTR [rbp-0x48]
  4116be:	mov    rdi,rax
  4116c1:	call   405a7b <_start@@Base+0x91b>
  4116c6:	mov    QWORD PTR [rbp-0x50],rax
  4116ca:	jmp    4117a1 <_start@@Base+0xc641>
  4116cf:	mov    QWORD PTR [rbp-0x30],0x0
  4116d7:	mov    rax,QWORD PTR [rbp-0x48]
  4116db:	mov    rax,QWORD PTR [rax]
  4116de:	mov    esi,0x1
  4116e3:	mov    rdi,rax
  4116e6:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  4116eb:	mov    QWORD PTR [rbp-0x10],rax
  4116ef:	cmp    QWORD PTR [rbp-0x10],0x0
  4116f4:	je     41197e <_start@@Base+0xc81e>
  4116fa:	mov    rax,QWORD PTR [rbp-0x50]
  4116fe:	mov    QWORD PTR [rbp-0x20],rax
  411702:	lea    rcx,[rbp-0x30]
  411706:	mov    rdx,QWORD PTR [rbp-0x58]
  41170a:	mov    rsi,QWORD PTR [rbp-0x20]
  41170e:	mov    rax,QWORD PTR [rbp-0x48]
  411712:	mov    rdi,rax
  411715:	call   40669a <_start@@Base+0x153a>
  41171a:	mov    QWORD PTR [rbp-0x50],rax
  41171e:	mov    rax,QWORD PTR [rbp-0x20]
  411722:	cmp    rax,QWORD PTR [rbp-0x50]
  411726:	jne    411772 <_start@@Base+0xc612>
  411728:	mov    rax,QWORD PTR [rbp-0x50]
  41172c:	mov    QWORD PTR [rbp-0x20],rax
  411730:	lea    rcx,[rbp-0x30]
  411734:	mov    rdx,QWORD PTR [rbp-0x58]
  411738:	mov    rsi,QWORD PTR [rbp-0x20]
  41173c:	mov    rax,QWORD PTR [rbp-0x48]
  411740:	mov    r8,rcx
  411743:	lea    rcx,[rip+0x35016]        # 446760 <__data_start@@Base+0x6a0>
  41174a:	mov    rdi,rax
  41174d:	call   40700e <_start@@Base+0x1eae>
  411752:	mov    QWORD PTR [rbp-0x50],rax
  411756:	mov    rax,QWORD PTR [rbp-0x50]
  41175a:	cmp    rax,QWORD PTR [rbp-0x20]
  41175e:	je     41197e <_start@@Base+0xc81e>
  411764:	mov    rax,QWORD PTR [rbp-0x50]
  411768:	cmp    rax,QWORD PTR [rbp-0x58]
  41176c:	je     41197e <_start@@Base+0xc81e>
  411772:	mov    rdx,QWORD PTR [rbp-0x30]
  411776:	mov    rax,QWORD PTR [rbp-0x10]
  41177a:	mov    rsi,rdx
  41177d:	mov    rdi,rax
  411780:	call   4053e9 <_start@@Base+0x289>
  411785:	lea    rcx,[rbp-0x40]
  411789:	mov    rdx,QWORD PTR [rbp-0x58]
  41178d:	mov    rsi,QWORD PTR [rbp-0x50]
  411791:	mov    rax,QWORD PTR [rbp-0x48]
  411795:	mov    rdi,rax
  411798:	call   405b38 <_start@@Base+0x9d8>
  41179d:	mov    QWORD PTR [rbp-0x50],rax
  4117a1:	mov    eax,DWORD PTR [rbp-0x40]
  4117a4:	test   eax,eax
  4117a6:	jne    4116cf <_start@@Base+0xc56f>
  4117ac:	mov    rax,QWORD PTR [rbp-0x48]
  4117b0:	mov    rax,QWORD PTR [rax]
  4117b3:	mov    rdi,rax
  4117b6:	call   41e773 <flatcc_builder_end_vector@@Base>
  4117bb:	mov    DWORD PTR [rbp-0x3c],eax
  4117be:	mov    eax,DWORD PTR [rbp-0x3c]
  4117c1:	test   eax,eax
  4117c3:	je     411985 <_start@@Base+0xc825>
  4117c9:	mov    rax,QWORD PTR [rbp-0x48]
  4117cd:	mov    rax,QWORD PTR [rax]
  4117d0:	mov    esi,0x20
  4117d5:	mov    rdi,rax
  4117d8:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  4117dd:	mov    QWORD PTR [rbp-0x18],rax
  4117e1:	cmp    QWORD PTR [rbp-0x18],0x0
  4117e6:	je     411985 <_start@@Base+0xc825>
  4117ec:	mov    edx,DWORD PTR [rbp-0x3c]
  4117ef:	mov    rax,QWORD PTR [rbp-0x18]
  4117f3:	mov    DWORD PTR [rax],edx
  4117f5:	jmp    41184c <_start@@Base+0xc6ec>
  4117f7:	mov    rdx,QWORD PTR [rbp-0x58]
  4117fb:	mov    rcx,QWORD PTR [rbp-0x50]
  4117ff:	mov    rax,QWORD PTR [rbp-0x48]
  411803:	mov    rsi,rcx
  411806:	mov    rdi,rax
  411809:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41180e:	mov    QWORD PTR [rbp-0x50],rax
  411812:	jmp    41184c <_start@@Base+0xc6ec>
  411814:	mov    rdx,QWORD PTR [rbp-0x58]
  411818:	mov    rcx,QWORD PTR [rbp-0x50]
  41181c:	mov    rax,QWORD PTR [rbp-0x48]
  411820:	mov    rsi,rcx
  411823:	mov    rdi,rax
  411826:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41182b:	mov    QWORD PTR [rbp-0x50],rax
  41182f:	jmp    41184c <_start@@Base+0xc6ec>
  411831:	mov    rdx,QWORD PTR [rbp-0x58]
  411835:	mov    rcx,QWORD PTR [rbp-0x50]
  411839:	mov    rax,QWORD PTR [rbp-0x48]
  41183d:	mov    rsi,rcx
  411840:	mov    rdi,rax
  411843:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411848:	mov    QWORD PTR [rbp-0x50],rax
  41184c:	lea    rcx,[rbp-0x40]
  411850:	mov    rdx,QWORD PTR [rbp-0x58]
  411854:	mov    rsi,QWORD PTR [rbp-0x50]
  411858:	mov    rax,QWORD PTR [rbp-0x48]
  41185c:	mov    rdi,rax
  41185f:	call   40593d <_start@@Base+0x7dd>
  411864:	mov    QWORD PTR [rbp-0x50],rax
  411868:	mov    eax,DWORD PTR [rbp-0x40]
  41186b:	test   eax,eax
  41186d:	jne    40e1fc <_start@@Base+0x909c>
  411873:	mov    rax,QWORD PTR [rbp-0x48]
  411877:	mov    eax,DWORD PTR [rax+0x20]
  41187a:	test   eax,eax
  41187c:	jne    411981 <_start@@Base+0xc821>
  411882:	mov    rax,QWORD PTR [rbp-0x48]
  411886:	mov    rax,QWORD PTR [rax]
  411889:	mov    esi,0x3
  41188e:	mov    rdi,rax
  411891:	call   41e0a7 <flatcc_builder_check_required_field@@Base>
  411896:	test   eax,eax
  411898:	jne    4118bc <_start@@Base+0xc75c>
  41189a:	mov    rdx,QWORD PTR [rbp-0x58]
  41189e:	mov    rsi,QWORD PTR [rbp-0x50]
  4118a2:	mov    rax,QWORD PTR [rbp-0x48]
  4118a6:	mov    ecx,0x1d
  4118ab:	mov    rdi,rax
  4118ae:	call   42665a <flatcc_json_parser_set_error@@Base>
  4118b3:	mov    QWORD PTR [rbp-0x50],rax
  4118b7:	jmp    411985 <_start@@Base+0xc825>
  4118bc:	mov    rcx,QWORD PTR [rbp-0x38]
  4118c0:	mov    rdx,QWORD PTR [rbp-0x58]
  4118c4:	mov    rsi,QWORD PTR [rbp-0x50]
  4118c8:	mov    rax,QWORD PTR [rbp-0x48]
  4118cc:	mov    rdi,rax
  4118cf:	call   4283a7 <flatcc_json_parser_finalize_unions@@Base>
  4118d4:	mov    QWORD PTR [rbp-0x50],rax
  4118d8:	mov    rax,QWORD PTR [rbp-0x48]
  4118dc:	mov    rax,QWORD PTR [rax]
  4118df:	mov    rdi,rax
  4118e2:	call   41e2d9 <flatcc_builder_end_table@@Base>
  4118e7:	mov    edx,eax
  4118e9:	mov    rax,QWORD PTR [rbp-0x60]
  4118ed:	mov    DWORD PTR [rax],edx
  4118ef:	mov    rax,QWORD PTR [rbp-0x60]
  4118f3:	mov    eax,DWORD PTR [rax]
  4118f5:	test   eax,eax
  4118f7:	je     411984 <_start@@Base+0xc824>
  4118fd:	mov    rax,QWORD PTR [rbp-0x50]
  411901:	jmp    41199e <_start@@Base+0xc83e>
  411906:	nop
  411907:	jmp    411985 <_start@@Base+0xc825>
  411909:	nop
  41190a:	jmp    411985 <_start@@Base+0xc825>
  41190c:	nop
  41190d:	jmp    411985 <_start@@Base+0xc825>
  41190f:	nop
  411910:	jmp    411985 <_start@@Base+0xc825>
  411912:	nop
  411913:	jmp    411985 <_start@@Base+0xc825>
  411915:	nop
  411916:	jmp    411985 <_start@@Base+0xc825>
  411918:	nop
  411919:	jmp    411985 <_start@@Base+0xc825>
  41191b:	nop
  41191c:	jmp    411985 <_start@@Base+0xc825>
  41191e:	nop
  41191f:	jmp    411985 <_start@@Base+0xc825>
  411921:	nop
  411922:	jmp    411985 <_start@@Base+0xc825>
  411924:	nop
  411925:	jmp    411985 <_start@@Base+0xc825>
  411927:	nop
  411928:	jmp    411985 <_start@@Base+0xc825>
  41192a:	nop
  41192b:	jmp    411985 <_start@@Base+0xc825>
  41192d:	nop
  41192e:	jmp    411985 <_start@@Base+0xc825>
  411930:	nop
  411931:	jmp    411985 <_start@@Base+0xc825>
  411933:	nop
  411934:	jmp    411985 <_start@@Base+0xc825>
  411936:	nop
  411937:	jmp    411985 <_start@@Base+0xc825>
  411939:	nop
  41193a:	jmp    411985 <_start@@Base+0xc825>
  41193c:	nop
  41193d:	jmp    411985 <_start@@Base+0xc825>
  41193f:	nop
  411940:	jmp    411985 <_start@@Base+0xc825>
  411942:	nop
  411943:	jmp    411985 <_start@@Base+0xc825>
  411945:	nop
  411946:	jmp    411985 <_start@@Base+0xc825>
  411948:	nop
  411949:	jmp    411985 <_start@@Base+0xc825>
  41194b:	nop
  41194c:	jmp    411985 <_start@@Base+0xc825>
  41194e:	nop
  41194f:	jmp    411985 <_start@@Base+0xc825>
  411951:	nop
  411952:	jmp    411985 <_start@@Base+0xc825>
  411954:	nop
  411955:	jmp    411985 <_start@@Base+0xc825>
  411957:	nop
  411958:	jmp    411985 <_start@@Base+0xc825>
  41195a:	nop
  41195b:	jmp    411985 <_start@@Base+0xc825>
  41195d:	nop
  41195e:	jmp    411985 <_start@@Base+0xc825>
  411960:	nop
  411961:	jmp    411985 <_start@@Base+0xc825>
  411963:	nop
  411964:	jmp    411985 <_start@@Base+0xc825>
  411966:	nop
  411967:	jmp    411985 <_start@@Base+0xc825>
  411969:	nop
  41196a:	jmp    411985 <_start@@Base+0xc825>
  41196c:	nop
  41196d:	jmp    411985 <_start@@Base+0xc825>
  41196f:	nop
  411970:	jmp    411985 <_start@@Base+0xc825>
  411972:	nop
  411973:	jmp    411985 <_start@@Base+0xc825>
  411975:	nop
  411976:	jmp    411985 <_start@@Base+0xc825>
  411978:	nop
  411979:	jmp    411985 <_start@@Base+0xc825>
  41197b:	nop
  41197c:	jmp    411985 <_start@@Base+0xc825>
  41197e:	nop
  41197f:	jmp    411985 <_start@@Base+0xc825>
  411981:	nop
  411982:	jmp    411985 <_start@@Base+0xc825>
  411984:	nop
  411985:	mov    rdx,QWORD PTR [rbp-0x58]
  411989:	mov    rsi,QWORD PTR [rbp-0x50]
  41198d:	mov    rax,QWORD PTR [rbp-0x48]
  411991:	mov    ecx,0x21
  411996:	mov    rdi,rax
  411999:	call   42665a <flatcc_json_parser_set_error@@Base>
  41199e:	mov    rdi,QWORD PTR [rbp-0x8]
  4119a2:	xor    rdi,QWORD PTR fs:0x28
  4119ab:	je     4119b2 <_start@@Base+0xc852>
  4119ad:	call   405070 <__stack_chk_fail@plt>
  4119b2:	leave  
  4119b3:	ret    
  4119b4:	push   rbp
  4119b5:	mov    rbp,rsp
  4119b8:	sub    rsp,0x70
  4119bc:	mov    QWORD PTR [rbp-0x48],rdi
  4119c0:	mov    QWORD PTR [rbp-0x50],rsi
  4119c4:	mov    QWORD PTR [rbp-0x58],rdx
  4119c8:	mov    QWORD PTR [rbp-0x60],rcx
  4119cc:	mov    rax,QWORD PTR fs:0x28
  4119d5:	mov    QWORD PTR [rbp-0x8],rax
  4119d9:	xor    eax,eax
  4119db:	mov    rax,QWORD PTR [rbp-0x60]
  4119df:	mov    DWORD PTR [rax],0x0
  4119e5:	mov    rax,QWORD PTR [rbp-0x48]
  4119e9:	mov    rax,QWORD PTR [rax]
  4119ec:	mov    esi,0xc
  4119f1:	mov    rdi,rax
  4119f4:	call   41d7d7 <flatcc_builder_start_table@@Base>
  4119f9:	test   eax,eax
  4119fb:	jne    412d85 <_start@@Base+0xdc25>
  411a01:	lea    rcx,[rbp-0x38]
  411a05:	mov    rdx,QWORD PTR [rbp-0x58]
  411a09:	mov    rsi,QWORD PTR [rbp-0x50]
  411a0d:	mov    rax,QWORD PTR [rbp-0x48]
  411a11:	mov    rdi,rax
  411a14:	call   405880 <_start@@Base+0x720>
  411a19:	mov    QWORD PTR [rbp-0x50],rax
  411a1d:	jmp    412d48 <_start@@Base+0xdbe8>
  411a22:	mov    rdx,QWORD PTR [rbp-0x58]
  411a26:	mov    rcx,QWORD PTR [rbp-0x50]
  411a2a:	mov    rax,QWORD PTR [rbp-0x48]
  411a2e:	mov    rsi,rcx
  411a31:	mov    rdi,rax
  411a34:	call   4055e5 <_start@@Base+0x485>
  411a39:	mov    QWORD PTR [rbp-0x50],rax
  411a3d:	mov    rdx,QWORD PTR [rbp-0x58]
  411a41:	mov    rax,QWORD PTR [rbp-0x50]
  411a45:	mov    rsi,rdx
  411a48:	mov    rdi,rax
  411a4b:	call   405779 <_start@@Base+0x619>
  411a50:	mov    QWORD PTR [rbp-0x28],rax
  411a54:	movabs rax,0x6937ffffffffffff
  411a5e:	cmp    QWORD PTR [rbp-0x28],rax
  411a62:	ja     4121ca <_start@@Base+0xd06a>
  411a68:	movabs rax,0x693135ffffffffff
  411a72:	cmp    QWORD PTR [rbp-0x28],rax
  411a76:	ja     411d76 <_start@@Base+0xcc16>
  411a7c:	movabs rax,0xffffff0000000000
  411a86:	and    rax,QWORD PTR [rbp-0x28]
  411a8a:	mov    rdx,rax
  411a8d:	movabs rax,0x6636340000000000
  411a97:	cmp    rdx,rax
  411a9a:	jne    411bea <_start@@Base+0xca8a>
  411aa0:	mov    rax,QWORD PTR [rbp-0x50]
  411aa4:	mov    QWORD PTR [rbp-0x20],rax
  411aa8:	mov    rdx,QWORD PTR [rbp-0x58]
  411aac:	mov    rsi,QWORD PTR [rbp-0x20]
  411ab0:	mov    rax,QWORD PTR [rbp-0x48]
  411ab4:	mov    ecx,0x3
  411ab9:	mov    rdi,rax
  411abc:	call   405c76 <_start@@Base+0xb16>
  411ac1:	mov    QWORD PTR [rbp-0x50],rax
  411ac5:	mov    rax,QWORD PTR [rbp-0x20]
  411ac9:	cmp    rax,QWORD PTR [rbp-0x50]
  411acd:	je     411bca <_start@@Base+0xca6a>
  411ad3:	vxorpd xmm0,xmm0,xmm0
  411ad7:	vmovsd QWORD PTR [rbp-0x30],xmm0
  411adc:	mov    rax,QWORD PTR [rbp-0x50]
  411ae0:	mov    QWORD PTR [rbp-0x20],rax
  411ae4:	lea    rcx,[rbp-0x30]
  411ae8:	mov    rdx,QWORD PTR [rbp-0x58]
  411aec:	mov    rsi,QWORD PTR [rbp-0x20]
  411af0:	mov    rax,QWORD PTR [rbp-0x48]
  411af4:	mov    rdi,rax
  411af7:	call   4274c3 <flatcc_json_parser_double@@Base>
  411afc:	mov    QWORD PTR [rbp-0x50],rax
  411b00:	mov    rax,QWORD PTR [rbp-0x20]
  411b04:	cmp    rax,QWORD PTR [rbp-0x50]
  411b08:	jne    411b54 <_start@@Base+0xc9f4>
  411b0a:	mov    rax,QWORD PTR [rbp-0x50]
  411b0e:	mov    QWORD PTR [rbp-0x20],rax
  411b12:	lea    rcx,[rbp-0x30]
  411b16:	mov    rdx,QWORD PTR [rbp-0x58]
  411b1a:	mov    rsi,QWORD PTR [rbp-0x20]
  411b1e:	mov    rax,QWORD PTR [rbp-0x48]
  411b22:	mov    r8,rcx
  411b25:	lea    rcx,[rip+0x34c54]        # 446780 <__data_start@@Base+0x6c0>
  411b2c:	mov    rdi,rax
  411b2f:	call   407837 <_start@@Base+0x26d7>
  411b34:	mov    QWORD PTR [rbp-0x50],rax
  411b38:	mov    rax,QWORD PTR [rbp-0x50]
  411b3c:	cmp    rax,QWORD PTR [rbp-0x20]
  411b40:	je     412db6 <_start@@Base+0xdc56>
  411b46:	mov    rax,QWORD PTR [rbp-0x50]
  411b4a:	cmp    rax,QWORD PTR [rbp-0x58]
  411b4e:	je     412db6 <_start@@Base+0xdc56>
  411b54:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  411b59:	vxorpd xmm1,xmm1,xmm1
  411b5d:	vucomisd xmm0,xmm1
  411b61:	jp     411b7f <_start@@Base+0xca1f>
  411b63:	vxorpd xmm1,xmm1,xmm1
  411b67:	vucomisd xmm0,xmm1
  411b6b:	jne    411b7f <_start@@Base+0xca1f>
  411b6d:	mov    rax,QWORD PTR [rbp-0x48]
  411b71:	mov    eax,DWORD PTR [rax+0x10]
  411b74:	and    eax,0x2
  411b77:	test   eax,eax
  411b79:	je     412d2c <_start@@Base+0xdbcc>
  411b7f:	mov    rax,QWORD PTR [rbp-0x48]
  411b83:	mov    rax,QWORD PTR [rax]
  411b86:	mov    ecx,0x8
  411b8b:	mov    edx,0x8
  411b90:	mov    esi,0x9
  411b95:	mov    rdi,rax
  411b98:	call   41f93b <flatcc_builder_table_add@@Base>
  411b9d:	mov    QWORD PTR [rbp-0x18],rax
  411ba1:	cmp    QWORD PTR [rbp-0x18],0x0
  411ba6:	je     412d88 <_start@@Base+0xdc28>
  411bac:	mov    rdx,QWORD PTR [rbp-0x30]
  411bb0:	mov    rax,QWORD PTR [rbp-0x18]
  411bb4:	mov    QWORD PTR [rbp-0x68],rdx
  411bb8:	vmovsd xmm0,QWORD PTR [rbp-0x68]
  411bbd:	mov    rdi,rax
  411bc0:	call   405482 <_start@@Base+0x322>
  411bc5:	jmp    412d2c <_start@@Base+0xdbcc>
  411bca:	mov    rdx,QWORD PTR [rbp-0x58]
  411bce:	mov    rcx,QWORD PTR [rbp-0x50]
  411bd2:	mov    rax,QWORD PTR [rbp-0x48]
  411bd6:	mov    rsi,rcx
  411bd9:	mov    rdi,rax
  411bdc:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411be1:	mov    QWORD PTR [rbp-0x50],rax
  411be5:	jmp    412d2c <_start@@Base+0xdbcc>
  411bea:	movabs rax,0xffffff0000000000
  411bf4:	and    rax,QWORD PTR [rbp-0x28]
  411bf8:	mov    rdx,rax
  411bfb:	movabs rax,0x6633320000000000
  411c05:	cmp    rdx,rax
  411c08:	jne    411d56 <_start@@Base+0xcbf6>
  411c0e:	mov    rax,QWORD PTR [rbp-0x50]
  411c12:	mov    QWORD PTR [rbp-0x20],rax
  411c16:	mov    rdx,QWORD PTR [rbp-0x58]
  411c1a:	mov    rsi,QWORD PTR [rbp-0x20]
  411c1e:	mov    rax,QWORD PTR [rbp-0x48]
  411c22:	mov    ecx,0x3
  411c27:	mov    rdi,rax
  411c2a:	call   405c76 <_start@@Base+0xb16>
  411c2f:	mov    QWORD PTR [rbp-0x50],rax
  411c33:	mov    rax,QWORD PTR [rbp-0x20]
  411c37:	cmp    rax,QWORD PTR [rbp-0x50]
  411c3b:	je     411d36 <_start@@Base+0xcbd6>
  411c41:	vxorps xmm0,xmm0,xmm0
  411c45:	vmovss DWORD PTR [rbp-0x30],xmm0
  411c4a:	mov    rax,QWORD PTR [rbp-0x50]
  411c4e:	mov    QWORD PTR [rbp-0x20],rax
  411c52:	lea    rcx,[rbp-0x30]
  411c56:	mov    rdx,QWORD PTR [rbp-0x58]
  411c5a:	mov    rsi,QWORD PTR [rbp-0x20]
  411c5e:	mov    rax,QWORD PTR [rbp-0x48]
  411c62:	mov    rdi,rax
  411c65:	call   427612 <flatcc_json_parser_float@@Base>
  411c6a:	mov    QWORD PTR [rbp-0x50],rax
  411c6e:	mov    rax,QWORD PTR [rbp-0x20]
  411c72:	cmp    rax,QWORD PTR [rbp-0x50]
  411c76:	jne    411cc2 <_start@@Base+0xcb62>
  411c78:	mov    rax,QWORD PTR [rbp-0x50]
  411c7c:	mov    QWORD PTR [rbp-0x20],rax
  411c80:	lea    rcx,[rbp-0x30]
  411c84:	mov    rdx,QWORD PTR [rbp-0x58]
  411c88:	mov    rsi,QWORD PTR [rbp-0x20]
  411c8c:	mov    rax,QWORD PTR [rbp-0x48]
  411c90:	mov    r8,rcx
  411c93:	lea    rcx,[rip+0x34b06]        # 4467a0 <__data_start@@Base+0x6e0>
  411c9a:	mov    rdi,rax
  411c9d:	call   4076d2 <_start@@Base+0x2572>
  411ca2:	mov    QWORD PTR [rbp-0x50],rax
  411ca6:	mov    rax,QWORD PTR [rbp-0x50]
  411caa:	cmp    rax,QWORD PTR [rbp-0x20]
  411cae:	je     412db6 <_start@@Base+0xdc56>
  411cb4:	mov    rax,QWORD PTR [rbp-0x50]
  411cb8:	cmp    rax,QWORD PTR [rbp-0x58]
  411cbc:	je     412db6 <_start@@Base+0xdc56>
  411cc2:	vmovss xmm0,DWORD PTR [rbp-0x30]
  411cc7:	vxorps xmm1,xmm1,xmm1
  411ccb:	vucomiss xmm0,xmm1
  411ccf:	jp     411ced <_start@@Base+0xcb8d>
  411cd1:	vxorps xmm1,xmm1,xmm1
  411cd5:	vucomiss xmm0,xmm1
  411cd9:	jne    411ced <_start@@Base+0xcb8d>
  411cdb:	mov    rax,QWORD PTR [rbp-0x48]
  411cdf:	mov    eax,DWORD PTR [rax+0x10]
  411ce2:	and    eax,0x2
  411ce5:	test   eax,eax
  411ce7:	je     412d2c <_start@@Base+0xdbcc>
  411ced:	mov    rax,QWORD PTR [rbp-0x48]
  411cf1:	mov    rax,QWORD PTR [rax]
  411cf4:	mov    ecx,0x4
  411cf9:	mov    edx,0x4
  411cfe:	mov    esi,0x8
  411d03:	mov    rdi,rax
  411d06:	call   41f93b <flatcc_builder_table_add@@Base>
  411d0b:	mov    QWORD PTR [rbp-0x18],rax
  411d0f:	cmp    QWORD PTR [rbp-0x18],0x0
  411d14:	je     412d8b <_start@@Base+0xdc2b>
  411d1a:	mov    edx,DWORD PTR [rbp-0x30]
  411d1d:	mov    rax,QWORD PTR [rbp-0x18]
  411d21:	mov    DWORD PTR [rbp-0x68],edx
  411d24:	vmovss xmm0,DWORD PTR [rbp-0x68]
  411d29:	mov    rdi,rax
  411d2c:	call   405432 <_start@@Base+0x2d2>
  411d31:	jmp    412d2c <_start@@Base+0xdbcc>
  411d36:	mov    rdx,QWORD PTR [rbp-0x58]
  411d3a:	mov    rcx,QWORD PTR [rbp-0x50]
  411d3e:	mov    rax,QWORD PTR [rbp-0x48]
  411d42:	mov    rsi,rcx
  411d45:	mov    rdi,rax
  411d48:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411d4d:	mov    QWORD PTR [rbp-0x50],rax
  411d51:	jmp    412d2c <_start@@Base+0xdbcc>
  411d56:	mov    rdx,QWORD PTR [rbp-0x58]
  411d5a:	mov    rcx,QWORD PTR [rbp-0x50]
  411d5e:	mov    rax,QWORD PTR [rbp-0x48]
  411d62:	mov    rsi,rcx
  411d65:	mov    rdi,rax
  411d68:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411d6d:	mov    QWORD PTR [rbp-0x50],rax
  411d71:	jmp    412d2c <_start@@Base+0xdbcc>
  411d76:	movabs rax,0x693331ffffffffff
  411d80:	cmp    QWORD PTR [rbp-0x28],rax
  411d84:	ja     411f01 <_start@@Base+0xcda1>
  411d8a:	movabs rax,0xffffff0000000000
  411d94:	and    rax,QWORD PTR [rbp-0x28]
  411d98:	mov    rdx,rax
  411d9b:	movabs rax,0x6931360000000000
  411da5:	cmp    rdx,rax
  411da8:	jne    411ee1 <_start@@Base+0xcd81>
  411dae:	mov    rax,QWORD PTR [rbp-0x50]
  411db2:	mov    QWORD PTR [rbp-0x20],rax
  411db6:	mov    rdx,QWORD PTR [rbp-0x58]
  411dba:	mov    rsi,QWORD PTR [rbp-0x20]
  411dbe:	mov    rax,QWORD PTR [rbp-0x48]
  411dc2:	mov    ecx,0x3
  411dc7:	mov    rdi,rax
  411dca:	call   405c76 <_start@@Base+0xb16>
  411dcf:	mov    QWORD PTR [rbp-0x50],rax
  411dd3:	mov    rax,QWORD PTR [rbp-0x20]
  411dd7:	cmp    rax,QWORD PTR [rbp-0x50]
  411ddb:	je     411ec1 <_start@@Base+0xcd61>
  411de1:	mov    WORD PTR [rbp-0x30],0x0
  411de7:	mov    rax,QWORD PTR [rbp-0x50]
  411deb:	mov    QWORD PTR [rbp-0x20],rax
  411def:	lea    rcx,[rbp-0x30]
  411df3:	mov    rdx,QWORD PTR [rbp-0x58]
  411df7:	mov    rsi,QWORD PTR [rbp-0x20]
  411dfb:	mov    rax,QWORD PTR [rbp-0x48]
  411dff:	mov    rdi,rax
  411e02:	call   406827 <_start@@Base+0x16c7>
  411e07:	mov    QWORD PTR [rbp-0x50],rax
  411e0b:	mov    rax,QWORD PTR [rbp-0x20]
  411e0f:	cmp    rax,QWORD PTR [rbp-0x50]
  411e13:	jne    411e5f <_start@@Base+0xccff>
  411e15:	mov    rax,QWORD PTR [rbp-0x50]
  411e19:	mov    QWORD PTR [rbp-0x20],rax
  411e1d:	lea    rcx,[rbp-0x30]
  411e21:	mov    rdx,QWORD PTR [rbp-0x58]
  411e25:	mov    rsi,QWORD PTR [rbp-0x20]
  411e29:	mov    rax,QWORD PTR [rbp-0x48]
  411e2d:	mov    r8,rcx
  411e30:	lea    rcx,[rip+0x34989]        # 4467c0 <__data_start@@Base+0x700>
  411e37:	mov    rdi,rax
  411e3a:	call   4072c6 <_start@@Base+0x2166>
  411e3f:	mov    QWORD PTR [rbp-0x50],rax
  411e43:	mov    rax,QWORD PTR [rbp-0x50]
  411e47:	cmp    rax,QWORD PTR [rbp-0x20]
  411e4b:	je     412db6 <_start@@Base+0xdc56>
  411e51:	mov    rax,QWORD PTR [rbp-0x50]
  411e55:	cmp    rax,QWORD PTR [rbp-0x58]
  411e59:	je     412db6 <_start@@Base+0xdc56>
  411e5f:	movzx  eax,WORD PTR [rbp-0x30]
  411e63:	test   ax,ax
  411e66:	jne    411e7a <_start@@Base+0xcd1a>
  411e68:	mov    rax,QWORD PTR [rbp-0x48]
  411e6c:	mov    eax,DWORD PTR [rax+0x10]
  411e6f:	and    eax,0x2
  411e72:	test   eax,eax
  411e74:	je     412d2c <_start@@Base+0xdbcc>
  411e7a:	mov    rax,QWORD PTR [rbp-0x48]
  411e7e:	mov    rax,QWORD PTR [rax]
  411e81:	mov    ecx,0x2
  411e86:	mov    edx,0x2
  411e8b:	mov    esi,0x2
  411e90:	mov    rdi,rax
  411e93:	call   41f93b <flatcc_builder_table_add@@Base>
  411e98:	mov    QWORD PTR [rbp-0x18],rax
  411e9c:	cmp    QWORD PTR [rbp-0x18],0x0
  411ea1:	je     412d8e <_start@@Base+0xdc2e>
  411ea7:	movzx  eax,WORD PTR [rbp-0x30]
  411eab:	movsx  edx,ax
  411eae:	mov    rax,QWORD PTR [rbp-0x18]
  411eb2:	mov    esi,edx
  411eb4:	mov    rdi,rax
  411eb7:	call   405382 <_start@@Base+0x222>
  411ebc:	jmp    412d2c <_start@@Base+0xdbcc>
  411ec1:	mov    rdx,QWORD PTR [rbp-0x58]
  411ec5:	mov    rcx,QWORD PTR [rbp-0x50]
  411ec9:	mov    rax,QWORD PTR [rbp-0x48]
  411ecd:	mov    rsi,rcx
  411ed0:	mov    rdi,rax
  411ed3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411ed8:	mov    QWORD PTR [rbp-0x50],rax
  411edc:	jmp    412d2c <_start@@Base+0xdbcc>
  411ee1:	mov    rdx,QWORD PTR [rbp-0x58]
  411ee5:	mov    rcx,QWORD PTR [rbp-0x50]
  411ee9:	mov    rax,QWORD PTR [rbp-0x48]
  411eed:	mov    rsi,rcx
  411ef0:	mov    rdi,rax
  411ef3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  411ef8:	mov    QWORD PTR [rbp-0x50],rax
  411efc:	jmp    412d2c <_start@@Base+0xdbcc>
  411f01:	movabs rax,0xffffff0000000000
  411f0b:	and    rax,QWORD PTR [rbp-0x28]
  411f0f:	mov    rdx,rax
  411f12:	movabs rax,0x6936340000000000
  411f1c:	cmp    rdx,rax
  411f1f:	jne    412058 <_start@@Base+0xcef8>
  411f25:	mov    rax,QWORD PTR [rbp-0x50]
  411f29:	mov    QWORD PTR [rbp-0x20],rax
  411f2d:	mov    rdx,QWORD PTR [rbp-0x58]
  411f31:	mov    rsi,QWORD PTR [rbp-0x20]
  411f35:	mov    rax,QWORD PTR [rbp-0x48]
  411f39:	mov    ecx,0x3
  411f3e:	mov    rdi,rax
  411f41:	call   405c76 <_start@@Base+0xb16>
  411f46:	mov    QWORD PTR [rbp-0x50],rax
  411f4a:	mov    rax,QWORD PTR [rbp-0x20]
  411f4e:	cmp    rax,QWORD PTR [rbp-0x50]
  411f52:	je     412038 <_start@@Base+0xced8>
  411f58:	mov    QWORD PTR [rbp-0x30],0x0
  411f60:	mov    rax,QWORD PTR [rbp-0x50]
  411f64:	mov    QWORD PTR [rbp-0x20],rax
  411f68:	lea    rcx,[rbp-0x30]
  411f6c:	mov    rdx,QWORD PTR [rbp-0x58]
  411f70:	mov    rsi,QWORD PTR [rbp-0x20]
  411f74:	mov    rax,QWORD PTR [rbp-0x48]
  411f78:	mov    rdi,rax
  411f7b:	call   40669a <_start@@Base+0x153a>
  411f80:	mov    QWORD PTR [rbp-0x50],rax
  411f84:	mov    rax,QWORD PTR [rbp-0x20]
  411f88:	cmp    rax,QWORD PTR [rbp-0x50]
  411f8c:	jne    411fd8 <_start@@Base+0xce78>
  411f8e:	mov    rax,QWORD PTR [rbp-0x50]
  411f92:	mov    QWORD PTR [rbp-0x20],rax
  411f96:	lea    rcx,[rbp-0x30]
  411f9a:	mov    rdx,QWORD PTR [rbp-0x58]
  411f9e:	mov    rsi,QWORD PTR [rbp-0x20]
  411fa2:	mov    rax,QWORD PTR [rbp-0x48]
  411fa6:	mov    r8,rcx
  411fa9:	lea    rcx,[rip+0x34830]        # 4467e0 <__data_start@@Base+0x720>
  411fb0:	mov    rdi,rax
  411fb3:	call   40700e <_start@@Base+0x1eae>
  411fb8:	mov    QWORD PTR [rbp-0x50],rax
  411fbc:	mov    rax,QWORD PTR [rbp-0x50]
  411fc0:	cmp    rax,QWORD PTR [rbp-0x20]
  411fc4:	je     412db6 <_start@@Base+0xdc56>
  411fca:	mov    rax,QWORD PTR [rbp-0x50]
  411fce:	cmp    rax,QWORD PTR [rbp-0x58]
  411fd2:	je     412db6 <_start@@Base+0xdc56>
  411fd8:	mov    rax,QWORD PTR [rbp-0x30]
  411fdc:	test   rax,rax
  411fdf:	jne    411ff3 <_start@@Base+0xce93>
  411fe1:	mov    rax,QWORD PTR [rbp-0x48]
  411fe5:	mov    eax,DWORD PTR [rax+0x10]
  411fe8:	and    eax,0x2
  411feb:	test   eax,eax
  411fed:	je     412d2c <_start@@Base+0xdbcc>
  411ff3:	mov    rax,QWORD PTR [rbp-0x48]
  411ff7:	mov    rax,QWORD PTR [rax]
  411ffa:	mov    ecx,0x8
  411fff:	mov    edx,0x8
  412004:	mov    esi,0x6
  412009:	mov    rdi,rax
  41200c:	call   41f93b <flatcc_builder_table_add@@Base>
  412011:	mov    QWORD PTR [rbp-0x18],rax
  412015:	cmp    QWORD PTR [rbp-0x18],0x0
  41201a:	je     412d91 <_start@@Base+0xdc31>
  412020:	mov    rdx,QWORD PTR [rbp-0x30]
  412024:	mov    rax,QWORD PTR [rbp-0x18]
  412028:	mov    rsi,rdx
  41202b:	mov    rdi,rax
  41202e:	call   4053e9 <_start@@Base+0x289>
  412033:	jmp    412d2c <_start@@Base+0xdbcc>
  412038:	mov    rdx,QWORD PTR [rbp-0x58]
  41203c:	mov    rcx,QWORD PTR [rbp-0x50]
  412040:	mov    rax,QWORD PTR [rbp-0x48]
  412044:	mov    rsi,rcx
  412047:	mov    rdi,rax
  41204a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41204f:	mov    QWORD PTR [rbp-0x50],rax
  412053:	jmp    412d2c <_start@@Base+0xdbcc>
  412058:	movabs rax,0xffffff0000000000
  412062:	and    rax,QWORD PTR [rbp-0x28]
  412066:	mov    rdx,rax
  412069:	movabs rax,0x6933320000000000
  412073:	cmp    rdx,rax
  412076:	jne    4121aa <_start@@Base+0xd04a>
  41207c:	mov    rax,QWORD PTR [rbp-0x50]
  412080:	mov    QWORD PTR [rbp-0x20],rax
  412084:	mov    rdx,QWORD PTR [rbp-0x58]
  412088:	mov    rsi,QWORD PTR [rbp-0x20]
  41208c:	mov    rax,QWORD PTR [rbp-0x48]
  412090:	mov    ecx,0x3
  412095:	mov    rdi,rax
  412098:	call   405c76 <_start@@Base+0xb16>
  41209d:	mov    QWORD PTR [rbp-0x50],rax
  4120a1:	mov    rax,QWORD PTR [rbp-0x20]
  4120a5:	cmp    rax,QWORD PTR [rbp-0x50]
  4120a9:	je     41218a <_start@@Base+0xd02a>
  4120af:	mov    DWORD PTR [rbp-0x30],0x0
  4120b6:	mov    rax,QWORD PTR [rbp-0x50]
  4120ba:	mov    QWORD PTR [rbp-0x20],rax
  4120be:	lea    rcx,[rbp-0x30]
  4120c2:	mov    rdx,QWORD PTR [rbp-0x58]
  4120c6:	mov    rsi,QWORD PTR [rbp-0x20]
  4120ca:	mov    rax,QWORD PTR [rbp-0x48]
  4120ce:	mov    rdi,rax
  4120d1:	call   406761 <_start@@Base+0x1601>
  4120d6:	mov    QWORD PTR [rbp-0x50],rax
  4120da:	mov    rax,QWORD PTR [rbp-0x20]
  4120de:	cmp    rax,QWORD PTR [rbp-0x50]
  4120e2:	jne    41212e <_start@@Base+0xcfce>
  4120e4:	mov    rax,QWORD PTR [rbp-0x50]
  4120e8:	mov    QWORD PTR [rbp-0x20],rax
  4120ec:	lea    rcx,[rbp-0x30]
  4120f0:	mov    rdx,QWORD PTR [rbp-0x58]
  4120f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4120f8:	mov    rax,QWORD PTR [rbp-0x48]
  4120fc:	mov    r8,rcx
  4120ff:	lea    rcx,[rip+0x346fa]        # 446800 <__data_start@@Base+0x740>
  412106:	mov    rdi,rax
  412109:	call   40716d <_start@@Base+0x200d>
  41210e:	mov    QWORD PTR [rbp-0x50],rax
  412112:	mov    rax,QWORD PTR [rbp-0x50]
  412116:	cmp    rax,QWORD PTR [rbp-0x20]
  41211a:	je     412db6 <_start@@Base+0xdc56>
  412120:	mov    rax,QWORD PTR [rbp-0x50]
  412124:	cmp    rax,QWORD PTR [rbp-0x58]
  412128:	je     412db6 <_start@@Base+0xdc56>
  41212e:	mov    eax,DWORD PTR [rbp-0x30]
  412131:	test   eax,eax
  412133:	jne    412147 <_start@@Base+0xcfe7>
  412135:	mov    rax,QWORD PTR [rbp-0x48]
  412139:	mov    eax,DWORD PTR [rax+0x10]
  41213c:	and    eax,0x2
  41213f:	test   eax,eax
  412141:	je     412d2c <_start@@Base+0xdbcc>
  412147:	mov    rax,QWORD PTR [rbp-0x48]
  41214b:	mov    rax,QWORD PTR [rax]
  41214e:	mov    ecx,0x4
  412153:	mov    edx,0x4
  412158:	mov    esi,0x4
  41215d:	mov    rdi,rax
  412160:	call   41f93b <flatcc_builder_table_add@@Base>
  412165:	mov    QWORD PTR [rbp-0x18],rax
  412169:	cmp    QWORD PTR [rbp-0x18],0x0
  41216e:	je     412d94 <_start@@Base+0xdc34>
  412174:	mov    edx,DWORD PTR [rbp-0x30]
  412177:	mov    rax,QWORD PTR [rbp-0x18]
  41217b:	mov    esi,edx
  41217d:	mov    rdi,rax
  412180:	call   4053b7 <_start@@Base+0x257>
  412185:	jmp    412d2c <_start@@Base+0xdbcc>
  41218a:	mov    rdx,QWORD PTR [rbp-0x58]
  41218e:	mov    rcx,QWORD PTR [rbp-0x50]
  412192:	mov    rax,QWORD PTR [rbp-0x48]
  412196:	mov    rsi,rcx
  412199:	mov    rdi,rax
  41219c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4121a1:	mov    QWORD PTR [rbp-0x50],rax
  4121a5:	jmp    412d2c <_start@@Base+0xdbcc>
  4121aa:	mov    rdx,QWORD PTR [rbp-0x58]
  4121ae:	mov    rcx,QWORD PTR [rbp-0x50]
  4121b2:	mov    rax,QWORD PTR [rbp-0x48]
  4121b6:	mov    rsi,rcx
  4121b9:	mov    rdi,rax
  4121bc:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4121c1:	mov    QWORD PTR [rbp-0x50],rax
  4121c5:	jmp    412d2c <_start@@Base+0xdbcc>
  4121ca:	movabs rax,0x753633ffffffffff
  4121d4:	cmp    QWORD PTR [rbp-0x28],rax
  4121d8:	ja     41262f <_start@@Base+0xd4cf>
  4121de:	movabs rax,0x753135ffffffffff
  4121e8:	cmp    QWORD PTR [rbp-0x28],rax
  4121ec:	ja     412366 <_start@@Base+0xd206>
  4121f2:	movabs rax,0xffff000000000000
  4121fc:	and    rax,QWORD PTR [rbp-0x28]
  412200:	mov    rdx,rax
  412203:	movabs rax,0x6938000000000000
  41220d:	cmp    rdx,rax
  412210:	jne    412346 <_start@@Base+0xd1e6>
  412216:	mov    rax,QWORD PTR [rbp-0x50]
  41221a:	mov    QWORD PTR [rbp-0x20],rax
  41221e:	mov    rdx,QWORD PTR [rbp-0x58]
  412222:	mov    rsi,QWORD PTR [rbp-0x20]
  412226:	mov    rax,QWORD PTR [rbp-0x48]
  41222a:	mov    ecx,0x2
  41222f:	mov    rdi,rax
  412232:	call   405c76 <_start@@Base+0xb16>
  412237:	mov    QWORD PTR [rbp-0x50],rax
  41223b:	mov    rax,QWORD PTR [rbp-0x20]
  41223f:	cmp    rax,QWORD PTR [rbp-0x50]
  412243:	je     412326 <_start@@Base+0xd1c6>
  412249:	mov    BYTE PTR [rbp-0x30],0x0
  41224d:	mov    rax,QWORD PTR [rbp-0x50]
  412251:	mov    QWORD PTR [rbp-0x20],rax
  412255:	lea    rcx,[rbp-0x30]
  412259:	mov    rdx,QWORD PTR [rbp-0x58]
  41225d:	mov    rsi,QWORD PTR [rbp-0x20]
  412261:	mov    rax,QWORD PTR [rbp-0x48]
  412265:	mov    rdi,rax
  412268:	call   4068ec <_start@@Base+0x178c>
  41226d:	mov    QWORD PTR [rbp-0x50],rax
  412271:	mov    rax,QWORD PTR [rbp-0x20]
  412275:	cmp    rax,QWORD PTR [rbp-0x50]
  412279:	jne    4122c5 <_start@@Base+0xd165>
  41227b:	mov    rax,QWORD PTR [rbp-0x50]
  41227f:	mov    QWORD PTR [rbp-0x20],rax
  412283:	lea    rcx,[rbp-0x30]
  412287:	mov    rdx,QWORD PTR [rbp-0x58]
  41228b:	mov    rsi,QWORD PTR [rbp-0x20]
  41228f:	mov    rax,QWORD PTR [rbp-0x48]
  412293:	mov    r8,rcx
  412296:	lea    rcx,[rip+0x34583]        # 446820 <__data_start@@Base+0x760>
  41229d:	mov    rdi,rax
  4122a0:	call   407424 <_start@@Base+0x22c4>
  4122a5:	mov    QWORD PTR [rbp-0x50],rax
  4122a9:	mov    rax,QWORD PTR [rbp-0x50]
  4122ad:	cmp    rax,QWORD PTR [rbp-0x20]
  4122b1:	je     412db6 <_start@@Base+0xdc56>
  4122b7:	mov    rax,QWORD PTR [rbp-0x50]
  4122bb:	cmp    rax,QWORD PTR [rbp-0x58]
  4122bf:	je     412db6 <_start@@Base+0xdc56>
  4122c5:	movzx  eax,BYTE PTR [rbp-0x30]
  4122c9:	test   al,al
  4122cb:	jne    4122df <_start@@Base+0xd17f>
  4122cd:	mov    rax,QWORD PTR [rbp-0x48]
  4122d1:	mov    eax,DWORD PTR [rax+0x10]
  4122d4:	and    eax,0x2
  4122d7:	test   eax,eax
  4122d9:	je     412d2c <_start@@Base+0xdbcc>
  4122df:	mov    rax,QWORD PTR [rbp-0x48]
  4122e3:	mov    rax,QWORD PTR [rax]
  4122e6:	mov    ecx,0x1
  4122eb:	mov    edx,0x1
  4122f0:	mov    esi,0x0
  4122f5:	mov    rdi,rax
  4122f8:	call   41f93b <flatcc_builder_table_add@@Base>
  4122fd:	mov    QWORD PTR [rbp-0x18],rax
  412301:	cmp    QWORD PTR [rbp-0x18],0x0
  412306:	je     412d97 <_start@@Base+0xdc37>
  41230c:	movzx  eax,BYTE PTR [rbp-0x30]
  412310:	movsx  edx,al
  412313:	mov    rax,QWORD PTR [rbp-0x18]
  412317:	mov    esi,edx
  412319:	mov    rdi,rax
  41231c:	call   40534b <_start@@Base+0x1eb>
  412321:	jmp    412d2c <_start@@Base+0xdbcc>
  412326:	mov    rdx,QWORD PTR [rbp-0x58]
  41232a:	mov    rcx,QWORD PTR [rbp-0x50]
  41232e:	mov    rax,QWORD PTR [rbp-0x48]
  412332:	mov    rsi,rcx
  412335:	mov    rdi,rax
  412338:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41233d:	mov    QWORD PTR [rbp-0x50],rax
  412341:	jmp    412d2c <_start@@Base+0xdbcc>
  412346:	mov    rdx,QWORD PTR [rbp-0x58]
  41234a:	mov    rcx,QWORD PTR [rbp-0x50]
  41234e:	mov    rax,QWORD PTR [rbp-0x48]
  412352:	mov    rsi,rcx
  412355:	mov    rdi,rax
  412358:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41235d:	mov    QWORD PTR [rbp-0x50],rax
  412361:	jmp    412d2c <_start@@Base+0xdbcc>
  412366:	movabs rax,0xffffff0000000000
  412370:	and    rax,QWORD PTR [rbp-0x28]
  412374:	mov    rdx,rax
  412377:	movabs rax,0x7533320000000000
  412381:	cmp    rdx,rax
  412384:	jne    4124b8 <_start@@Base+0xd358>
  41238a:	mov    rax,QWORD PTR [rbp-0x50]
  41238e:	mov    QWORD PTR [rbp-0x20],rax
  412392:	mov    rdx,QWORD PTR [rbp-0x58]
  412396:	mov    rsi,QWORD PTR [rbp-0x20]
  41239a:	mov    rax,QWORD PTR [rbp-0x48]
  41239e:	mov    ecx,0x3
  4123a3:	mov    rdi,rax
  4123a6:	call   405c76 <_start@@Base+0xb16>
  4123ab:	mov    QWORD PTR [rbp-0x50],rax
  4123af:	mov    rax,QWORD PTR [rbp-0x20]
  4123b3:	cmp    rax,QWORD PTR [rbp-0x50]
  4123b7:	je     412498 <_start@@Base+0xd338>
  4123bd:	mov    DWORD PTR [rbp-0x30],0x0
  4123c4:	mov    rax,QWORD PTR [rbp-0x50]
  4123c8:	mov    QWORD PTR [rbp-0x20],rax
  4123cc:	lea    rcx,[rbp-0x30]
  4123d0:	mov    rdx,QWORD PTR [rbp-0x58]
  4123d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4123d8:	mov    rax,QWORD PTR [rbp-0x48]
  4123dc:	mov    rdi,rax
  4123df:	call   40644c <_start@@Base+0x12ec>
  4123e4:	mov    QWORD PTR [rbp-0x50],rax
  4123e8:	mov    rax,QWORD PTR [rbp-0x20]
  4123ec:	cmp    rax,QWORD PTR [rbp-0x50]
  4123f0:	jne    41243c <_start@@Base+0xd2dc>
  4123f2:	mov    rax,QWORD PTR [rbp-0x50]
  4123f6:	mov    QWORD PTR [rbp-0x20],rax
  4123fa:	lea    rcx,[rbp-0x30]
  4123fe:	mov    rdx,QWORD PTR [rbp-0x58]
  412402:	mov    rsi,QWORD PTR [rbp-0x20]
  412406:	mov    rax,QWORD PTR [rbp-0x48]
  41240a:	mov    r8,rcx
  41240d:	lea    rcx,[rip+0x3442c]        # 446840 <__data_start@@Base+0x780>
  412414:	mov    rdi,rax
  412417:	call   406c06 <_start@@Base+0x1aa6>
  41241c:	mov    QWORD PTR [rbp-0x50],rax
  412420:	mov    rax,QWORD PTR [rbp-0x50]
  412424:	cmp    rax,QWORD PTR [rbp-0x20]
  412428:	je     412db6 <_start@@Base+0xdc56>
  41242e:	mov    rax,QWORD PTR [rbp-0x50]
  412432:	cmp    rax,QWORD PTR [rbp-0x58]
  412436:	je     412db6 <_start@@Base+0xdc56>
  41243c:	mov    eax,DWORD PTR [rbp-0x30]
  41243f:	test   eax,eax
  412441:	jne    412455 <_start@@Base+0xd2f5>
  412443:	mov    rax,QWORD PTR [rbp-0x48]
  412447:	mov    eax,DWORD PTR [rax+0x10]
  41244a:	and    eax,0x2
  41244d:	test   eax,eax
  41244f:	je     412d2c <_start@@Base+0xdbcc>
  412455:	mov    rax,QWORD PTR [rbp-0x48]
  412459:	mov    rax,QWORD PTR [rax]
  41245c:	mov    ecx,0x4
  412461:	mov    edx,0x4
  412466:	mov    esi,0x5
  41246b:	mov    rdi,rax
  41246e:	call   41f93b <flatcc_builder_table_add@@Base>
  412473:	mov    QWORD PTR [rbp-0x18],rax
  412477:	cmp    QWORD PTR [rbp-0x18],0x0
  41247c:	je     412d9a <_start@@Base+0xdc3a>
  412482:	mov    edx,DWORD PTR [rbp-0x30]
  412485:	mov    rax,QWORD PTR [rbp-0x18]
  412489:	mov    esi,edx
  41248b:	mov    rdi,rax
  41248e:	call   4052e1 <_start@@Base+0x181>
  412493:	jmp    412d2c <_start@@Base+0xdbcc>
  412498:	mov    rdx,QWORD PTR [rbp-0x58]
  41249c:	mov    rcx,QWORD PTR [rbp-0x50]
  4124a0:	mov    rax,QWORD PTR [rbp-0x48]
  4124a4:	mov    rsi,rcx
  4124a7:	mov    rdi,rax
  4124aa:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4124af:	mov    QWORD PTR [rbp-0x50],rax
  4124b3:	jmp    412d2c <_start@@Base+0xdbcc>
  4124b8:	movabs rax,0xffffff0000000000
  4124c2:	and    rax,QWORD PTR [rbp-0x28]
  4124c6:	mov    rdx,rax
  4124c9:	movabs rax,0x7531360000000000
  4124d3:	cmp    rdx,rax
  4124d6:	jne    41260f <_start@@Base+0xd4af>
  4124dc:	mov    rax,QWORD PTR [rbp-0x50]
  4124e0:	mov    QWORD PTR [rbp-0x20],rax
  4124e4:	mov    rdx,QWORD PTR [rbp-0x58]
  4124e8:	mov    rsi,QWORD PTR [rbp-0x20]
  4124ec:	mov    rax,QWORD PTR [rbp-0x48]
  4124f0:	mov    ecx,0x3
  4124f5:	mov    rdi,rax
  4124f8:	call   405c76 <_start@@Base+0xb16>
  4124fd:	mov    QWORD PTR [rbp-0x50],rax
  412501:	mov    rax,QWORD PTR [rbp-0x20]
  412505:	cmp    rax,QWORD PTR [rbp-0x50]
  412509:	je     4125ef <_start@@Base+0xd48f>
  41250f:	mov    WORD PTR [rbp-0x30],0x0
  412515:	mov    rax,QWORD PTR [rbp-0x50]
  412519:	mov    QWORD PTR [rbp-0x20],rax
  41251d:	lea    rcx,[rbp-0x30]
  412521:	mov    rdx,QWORD PTR [rbp-0x58]
  412525:	mov    rsi,QWORD PTR [rbp-0x20]
  412529:	mov    rax,QWORD PTR [rbp-0x48]
  41252d:	mov    rdi,rax
  412530:	call   406512 <_start@@Base+0x13b2>
  412535:	mov    QWORD PTR [rbp-0x50],rax
  412539:	mov    rax,QWORD PTR [rbp-0x20]
  41253d:	cmp    rax,QWORD PTR [rbp-0x50]
  412541:	jne    41258d <_start@@Base+0xd42d>
  412543:	mov    rax,QWORD PTR [rbp-0x50]
  412547:	mov    QWORD PTR [rbp-0x20],rax
  41254b:	lea    rcx,[rbp-0x30]
  41254f:	mov    rdx,QWORD PTR [rbp-0x58]
  412553:	mov    rsi,QWORD PTR [rbp-0x20]
  412557:	mov    rax,QWORD PTR [rbp-0x48]
  41255b:	mov    r8,rcx
  41255e:	lea    rcx,[rip+0x342fb]        # 446860 <__data_start@@Base+0x7a0>
  412565:	mov    rdi,rax
  412568:	call   406d5f <_start@@Base+0x1bff>
  41256d:	mov    QWORD PTR [rbp-0x50],rax
  412571:	mov    rax,QWORD PTR [rbp-0x50]
  412575:	cmp    rax,QWORD PTR [rbp-0x20]
  412579:	je     412db6 <_start@@Base+0xdc56>
  41257f:	mov    rax,QWORD PTR [rbp-0x50]
  412583:	cmp    rax,QWORD PTR [rbp-0x58]
  412587:	je     412db6 <_start@@Base+0xdc56>
  41258d:	movzx  eax,WORD PTR [rbp-0x30]
  412591:	test   ax,ax
  412594:	jne    4125a8 <_start@@Base+0xd448>
  412596:	mov    rax,QWORD PTR [rbp-0x48]
  41259a:	mov    eax,DWORD PTR [rax+0x10]
  41259d:	and    eax,0x2
  4125a0:	test   eax,eax
  4125a2:	je     412d2c <_start@@Base+0xdbcc>
  4125a8:	mov    rax,QWORD PTR [rbp-0x48]
  4125ac:	mov    rax,QWORD PTR [rax]
  4125af:	mov    ecx,0x2
  4125b4:	mov    edx,0x2
  4125b9:	mov    esi,0x3
  4125be:	mov    rdi,rax
  4125c1:	call   41f93b <flatcc_builder_table_add@@Base>
  4125c6:	mov    QWORD PTR [rbp-0x18],rax
  4125ca:	cmp    QWORD PTR [rbp-0x18],0x0
  4125cf:	je     412d9d <_start@@Base+0xdc3d>
  4125d5:	movzx  eax,WORD PTR [rbp-0x30]
  4125d9:	movzx  edx,ax
  4125dc:	mov    rax,QWORD PTR [rbp-0x18]
  4125e0:	mov    esi,edx
  4125e2:	mov    rdi,rax
  4125e5:	call   4052ac <_start@@Base+0x14c>
  4125ea:	jmp    412d2c <_start@@Base+0xdbcc>
  4125ef:	mov    rdx,QWORD PTR [rbp-0x58]
  4125f3:	mov    rcx,QWORD PTR [rbp-0x50]
  4125f7:	mov    rax,QWORD PTR [rbp-0x48]
  4125fb:	mov    rsi,rcx
  4125fe:	mov    rdi,rax
  412601:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412606:	mov    QWORD PTR [rbp-0x50],rax
  41260a:	jmp    412d2c <_start@@Base+0xdbcc>
  41260f:	mov    rdx,QWORD PTR [rbp-0x58]
  412613:	mov    rcx,QWORD PTR [rbp-0x50]
  412617:	mov    rax,QWORD PTR [rbp-0x48]
  41261b:	mov    rsi,rcx
  41261e:	mov    rdi,rax
  412621:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412626:	mov    QWORD PTR [rbp-0x50],rax
  41262a:	jmp    412d2c <_start@@Base+0xdbcc>
  41262f:	movabs rax,0x7537ffffffffffff
  412639:	cmp    QWORD PTR [rbp-0x28],rax
  41263d:	ja     4127ba <_start@@Base+0xd65a>
  412643:	movabs rax,0xffffff0000000000
  41264d:	and    rax,QWORD PTR [rbp-0x28]
  412651:	mov    rdx,rax
  412654:	movabs rax,0x7536340000000000
  41265e:	cmp    rdx,rax
  412661:	jne    41279a <_start@@Base+0xd63a>
  412667:	mov    rax,QWORD PTR [rbp-0x50]
  41266b:	mov    QWORD PTR [rbp-0x20],rax
  41266f:	mov    rdx,QWORD PTR [rbp-0x58]
  412673:	mov    rsi,QWORD PTR [rbp-0x20]
  412677:	mov    rax,QWORD PTR [rbp-0x48]
  41267b:	mov    ecx,0x3
  412680:	mov    rdi,rax
  412683:	call   405c76 <_start@@Base+0xb16>
  412688:	mov    QWORD PTR [rbp-0x50],rax
  41268c:	mov    rax,QWORD PTR [rbp-0x20]
  412690:	cmp    rax,QWORD PTR [rbp-0x50]
  412694:	je     41277a <_start@@Base+0xd61a>
  41269a:	mov    QWORD PTR [rbp-0x30],0x0
  4126a2:	mov    rax,QWORD PTR [rbp-0x50]
  4126a6:	mov    QWORD PTR [rbp-0x20],rax
  4126aa:	lea    rcx,[rbp-0x30]
  4126ae:	mov    rdx,QWORD PTR [rbp-0x58]
  4126b2:	mov    rsi,QWORD PTR [rbp-0x20]
  4126b6:	mov    rax,QWORD PTR [rbp-0x48]
  4126ba:	mov    rdi,rax
  4126bd:	call   406385 <_start@@Base+0x1225>
  4126c2:	mov    QWORD PTR [rbp-0x50],rax
  4126c6:	mov    rax,QWORD PTR [rbp-0x20]
  4126ca:	cmp    rax,QWORD PTR [rbp-0x50]
  4126ce:	jne    41271a <_start@@Base+0xd5ba>
  4126d0:	mov    rax,QWORD PTR [rbp-0x50]
  4126d4:	mov    QWORD PTR [rbp-0x20],rax
  4126d8:	lea    rcx,[rbp-0x30]
  4126dc:	mov    rdx,QWORD PTR [rbp-0x58]
  4126e0:	mov    rsi,QWORD PTR [rbp-0x20]
  4126e4:	mov    rax,QWORD PTR [rbp-0x48]
  4126e8:	mov    r8,rcx
  4126eb:	lea    rcx,[rip+0x3418e]        # 446880 <__data_start@@Base+0x7c0>
  4126f2:	mov    rdi,rax
  4126f5:	call   406aa7 <_start@@Base+0x1947>
  4126fa:	mov    QWORD PTR [rbp-0x50],rax
  4126fe:	mov    rax,QWORD PTR [rbp-0x50]
  412702:	cmp    rax,QWORD PTR [rbp-0x20]
  412706:	je     412db6 <_start@@Base+0xdc56>
  41270c:	mov    rax,QWORD PTR [rbp-0x50]
  412710:	cmp    rax,QWORD PTR [rbp-0x58]
  412714:	je     412db6 <_start@@Base+0xdc56>
  41271a:	mov    rax,QWORD PTR [rbp-0x30]
  41271e:	test   rax,rax
  412721:	jne    412735 <_start@@Base+0xd5d5>
  412723:	mov    rax,QWORD PTR [rbp-0x48]
  412727:	mov    eax,DWORD PTR [rax+0x10]
  41272a:	and    eax,0x2
  41272d:	test   eax,eax
  41272f:	je     412d2c <_start@@Base+0xdbcc>
  412735:	mov    rax,QWORD PTR [rbp-0x48]
  412739:	mov    rax,QWORD PTR [rax]
  41273c:	mov    ecx,0x8
  412741:	mov    edx,0x8
  412746:	mov    esi,0x7
  41274b:	mov    rdi,rax
  41274e:	call   41f93b <flatcc_builder_table_add@@Base>
  412753:	mov    QWORD PTR [rbp-0x18],rax
  412757:	cmp    QWORD PTR [rbp-0x18],0x0
  41275c:	je     412da0 <_start@@Base+0xdc40>
  412762:	mov    rdx,QWORD PTR [rbp-0x30]
  412766:	mov    rax,QWORD PTR [rbp-0x18]
  41276a:	mov    rsi,rdx
  41276d:	mov    rdi,rax
  412770:	call   405313 <_start@@Base+0x1b3>
  412775:	jmp    412d2c <_start@@Base+0xdbcc>
  41277a:	mov    rdx,QWORD PTR [rbp-0x58]
  41277e:	mov    rcx,QWORD PTR [rbp-0x50]
  412782:	mov    rax,QWORD PTR [rbp-0x48]
  412786:	mov    rsi,rcx
  412789:	mov    rdi,rax
  41278c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412791:	mov    QWORD PTR [rbp-0x50],rax
  412795:	jmp    412d2c <_start@@Base+0xdbcc>
  41279a:	mov    rdx,QWORD PTR [rbp-0x58]
  41279e:	mov    rcx,QWORD PTR [rbp-0x50]
  4127a2:	mov    rax,QWORD PTR [rbp-0x48]
  4127a6:	mov    rsi,rcx
  4127a9:	mov    rdi,rax
  4127ac:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4127b1:	mov    QWORD PTR [rbp-0x50],rax
  4127b5:	jmp    412d2c <_start@@Base+0xdbcc>
  4127ba:	movabs rax,0x7637ffffffffffff
  4127c4:	cmp    QWORD PTR [rbp-0x28],rax
  4127c8:	ja     412942 <_start@@Base+0xd7e2>
  4127ce:	movabs rax,0xffff000000000000
  4127d8:	and    rax,QWORD PTR [rbp-0x28]
  4127dc:	mov    rdx,rax
  4127df:	movabs rax,0x7538000000000000
  4127e9:	cmp    rdx,rax
  4127ec:	jne    412922 <_start@@Base+0xd7c2>
  4127f2:	mov    rax,QWORD PTR [rbp-0x50]
  4127f6:	mov    QWORD PTR [rbp-0x20],rax
  4127fa:	mov    rdx,QWORD PTR [rbp-0x58]
  4127fe:	mov    rsi,QWORD PTR [rbp-0x20]
  412802:	mov    rax,QWORD PTR [rbp-0x48]
  412806:	mov    ecx,0x2
  41280b:	mov    rdi,rax
  41280e:	call   405c76 <_start@@Base+0xb16>
  412813:	mov    QWORD PTR [rbp-0x50],rax
  412817:	mov    rax,QWORD PTR [rbp-0x20]
  41281b:	cmp    rax,QWORD PTR [rbp-0x50]
  41281f:	je     412902 <_start@@Base+0xd7a2>
  412825:	mov    BYTE PTR [rbp-0x30],0x0
  412829:	mov    rax,QWORD PTR [rbp-0x50]
  41282d:	mov    QWORD PTR [rbp-0x20],rax
  412831:	lea    rcx,[rbp-0x30]
  412835:	mov    rdx,QWORD PTR [rbp-0x58]
  412839:	mov    rsi,QWORD PTR [rbp-0x20]
  41283d:	mov    rax,QWORD PTR [rbp-0x48]
  412841:	mov    rdi,rax
  412844:	call   4065d7 <_start@@Base+0x1477>
  412849:	mov    QWORD PTR [rbp-0x50],rax
  41284d:	mov    rax,QWORD PTR [rbp-0x20]
  412851:	cmp    rax,QWORD PTR [rbp-0x50]
  412855:	jne    4128a1 <_start@@Base+0xd741>
  412857:	mov    rax,QWORD PTR [rbp-0x50]
  41285b:	mov    QWORD PTR [rbp-0x20],rax
  41285f:	lea    rcx,[rbp-0x30]
  412863:	mov    rdx,QWORD PTR [rbp-0x58]
  412867:	mov    rsi,QWORD PTR [rbp-0x20]
  41286b:	mov    rax,QWORD PTR [rbp-0x48]
  41286f:	mov    r8,rcx
  412872:	lea    rcx,[rip+0x34027]        # 4468a0 <__data_start@@Base+0x7e0>
  412879:	mov    rdi,rax
  41287c:	call   406eb9 <_start@@Base+0x1d59>
  412881:	mov    QWORD PTR [rbp-0x50],rax
  412885:	mov    rax,QWORD PTR [rbp-0x50]
  412889:	cmp    rax,QWORD PTR [rbp-0x20]
  41288d:	je     412db6 <_start@@Base+0xdc56>
  412893:	mov    rax,QWORD PTR [rbp-0x50]
  412897:	cmp    rax,QWORD PTR [rbp-0x58]
  41289b:	je     412db6 <_start@@Base+0xdc56>
  4128a1:	movzx  eax,BYTE PTR [rbp-0x30]
  4128a5:	test   al,al
  4128a7:	jne    4128bb <_start@@Base+0xd75b>
  4128a9:	mov    rax,QWORD PTR [rbp-0x48]
  4128ad:	mov    eax,DWORD PTR [rax+0x10]
  4128b0:	and    eax,0x2
  4128b3:	test   eax,eax
  4128b5:	je     412d2c <_start@@Base+0xdbcc>
  4128bb:	mov    rax,QWORD PTR [rbp-0x48]
  4128bf:	mov    rax,QWORD PTR [rax]
  4128c2:	mov    ecx,0x1
  4128c7:	mov    edx,0x1
  4128cc:	mov    esi,0x1
  4128d1:	mov    rdi,rax
  4128d4:	call   41f93b <flatcc_builder_table_add@@Base>
  4128d9:	mov    QWORD PTR [rbp-0x18],rax
  4128dd:	cmp    QWORD PTR [rbp-0x18],0x0
  4128e2:	je     412da3 <_start@@Base+0xdc43>
  4128e8:	movzx  eax,BYTE PTR [rbp-0x30]
  4128ec:	movzx  edx,al
  4128ef:	mov    rax,QWORD PTR [rbp-0x18]
  4128f3:	mov    esi,edx
  4128f5:	mov    rdi,rax
  4128f8:	call   405275 <_start@@Base+0x115>
  4128fd:	jmp    412d2c <_start@@Base+0xdbcc>
  412902:	mov    rdx,QWORD PTR [rbp-0x58]
  412906:	mov    rcx,QWORD PTR [rbp-0x50]
  41290a:	mov    rax,QWORD PTR [rbp-0x48]
  41290e:	mov    rsi,rcx
  412911:	mov    rdi,rax
  412914:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412919:	mov    QWORD PTR [rbp-0x50],rax
  41291d:	jmp    412d2c <_start@@Base+0xdbcc>
  412922:	mov    rdx,QWORD PTR [rbp-0x58]
  412926:	mov    rcx,QWORD PTR [rbp-0x50]
  41292a:	mov    rax,QWORD PTR [rbp-0x48]
  41292e:	mov    rsi,rcx
  412931:	mov    rdi,rax
  412934:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412939:	mov    QWORD PTR [rbp-0x50],rax
  41293d:	jmp    412d2c <_start@@Base+0xdbcc>
  412942:	movabs rax,0xffffffff00000000
  41294c:	and    rax,QWORD PTR [rbp-0x28]
  412950:	mov    rdx,rax
  412953:	movabs rax,0x7666363400000000
  41295d:	cmp    rdx,rax
  412960:	jne    412b31 <_start@@Base+0xd9d1>
  412966:	mov    rax,QWORD PTR [rbp-0x50]
  41296a:	mov    QWORD PTR [rbp-0x20],rax
  41296e:	mov    rdx,QWORD PTR [rbp-0x58]
  412972:	mov    rsi,QWORD PTR [rbp-0x20]
  412976:	mov    rax,QWORD PTR [rbp-0x48]
  41297a:	mov    ecx,0x4
  41297f:	mov    rdi,rax
  412982:	call   405c76 <_start@@Base+0xb16>
  412987:	mov    QWORD PTR [rbp-0x50],rax
  41298b:	mov    rax,QWORD PTR [rbp-0x20]
  41298f:	cmp    rax,QWORD PTR [rbp-0x50]
  412993:	je     412b11 <_start@@Base+0xd9b1>
  412999:	mov    rax,QWORD PTR [rbp-0x48]
  41299d:	mov    rax,QWORD PTR [rax]
  4129a0:	mov    ecx,0x1fffffff
  4129a5:	mov    edx,0x8
  4129aa:	mov    esi,0x8
  4129af:	mov    rdi,rax
  4129b2:	call   41d59d <flatcc_builder_start_vector@@Base>
  4129b7:	test   eax,eax
  4129b9:	jne    412da6 <_start@@Base+0xdc46>
  4129bf:	lea    rcx,[rbp-0x38]
  4129c3:	mov    rdx,QWORD PTR [rbp-0x58]
  4129c7:	mov    rsi,QWORD PTR [rbp-0x50]
  4129cb:	mov    rax,QWORD PTR [rbp-0x48]
  4129cf:	mov    rdi,rax
  4129d2:	call   405a7b <_start@@Base+0x91b>
  4129d7:	mov    QWORD PTR [rbp-0x50],rax
  4129db:	jmp    412ab9 <_start@@Base+0xd959>
  4129e0:	vxorpd xmm0,xmm0,xmm0
  4129e4:	vmovsd QWORD PTR [rbp-0x30],xmm0
  4129e9:	mov    rax,QWORD PTR [rbp-0x48]
  4129ed:	mov    rax,QWORD PTR [rax]
  4129f0:	mov    esi,0x1
  4129f5:	mov    rdi,rax
  4129f8:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  4129fd:	mov    QWORD PTR [rbp-0x18],rax
  412a01:	cmp    QWORD PTR [rbp-0x18],0x0
  412a06:	je     412da9 <_start@@Base+0xdc49>
  412a0c:	mov    rax,QWORD PTR [rbp-0x50]
  412a10:	mov    QWORD PTR [rbp-0x20],rax
  412a14:	lea    rcx,[rbp-0x30]
  412a18:	mov    rdx,QWORD PTR [rbp-0x58]
  412a1c:	mov    rsi,QWORD PTR [rbp-0x20]
  412a20:	mov    rax,QWORD PTR [rbp-0x48]
  412a24:	mov    rdi,rax
  412a27:	call   4274c3 <flatcc_json_parser_double@@Base>
  412a2c:	mov    QWORD PTR [rbp-0x50],rax
  412a30:	mov    rax,QWORD PTR [rbp-0x20]
  412a34:	cmp    rax,QWORD PTR [rbp-0x50]
  412a38:	jne    412a84 <_start@@Base+0xd924>
  412a3a:	mov    rax,QWORD PTR [rbp-0x50]
  412a3e:	mov    QWORD PTR [rbp-0x20],rax
  412a42:	lea    rcx,[rbp-0x30]
  412a46:	mov    rdx,QWORD PTR [rbp-0x58]
  412a4a:	mov    rsi,QWORD PTR [rbp-0x20]
  412a4e:	mov    rax,QWORD PTR [rbp-0x48]
  412a52:	mov    r8,rcx
  412a55:	lea    rcx,[rip+0x33e64]        # 4468c0 <__data_start@@Base+0x800>
  412a5c:	mov    rdi,rax
  412a5f:	call   407837 <_start@@Base+0x26d7>
  412a64:	mov    QWORD PTR [rbp-0x50],rax
  412a68:	mov    rax,QWORD PTR [rbp-0x50]
  412a6c:	cmp    rax,QWORD PTR [rbp-0x20]
  412a70:	je     412da9 <_start@@Base+0xdc49>
  412a76:	mov    rax,QWORD PTR [rbp-0x50]
  412a7a:	cmp    rax,QWORD PTR [rbp-0x58]
  412a7e:	je     412da9 <_start@@Base+0xdc49>
  412a84:	mov    rdx,QWORD PTR [rbp-0x30]
  412a88:	mov    rax,QWORD PTR [rbp-0x18]
  412a8c:	mov    QWORD PTR [rbp-0x68],rdx
  412a90:	vmovsd xmm0,QWORD PTR [rbp-0x68]
  412a95:	mov    rdi,rax
  412a98:	call   405482 <_start@@Base+0x322>
  412a9d:	lea    rcx,[rbp-0x38]
  412aa1:	mov    rdx,QWORD PTR [rbp-0x58]
  412aa5:	mov    rsi,QWORD PTR [rbp-0x50]
  412aa9:	mov    rax,QWORD PTR [rbp-0x48]
  412aad:	mov    rdi,rax
  412ab0:	call   405b38 <_start@@Base+0x9d8>
  412ab5:	mov    QWORD PTR [rbp-0x50],rax
  412ab9:	mov    eax,DWORD PTR [rbp-0x38]
  412abc:	test   eax,eax
  412abe:	jne    4129e0 <_start@@Base+0xd880>
  412ac4:	mov    rax,QWORD PTR [rbp-0x48]
  412ac8:	mov    rax,QWORD PTR [rax]
  412acb:	mov    rdi,rax
  412ace:	call   41e773 <flatcc_builder_end_vector@@Base>
  412ad3:	mov    DWORD PTR [rbp-0x34],eax
  412ad6:	cmp    DWORD PTR [rbp-0x34],0x0
  412ada:	je     412db6 <_start@@Base+0xdc56>
  412ae0:	mov    rax,QWORD PTR [rbp-0x48]
  412ae4:	mov    rax,QWORD PTR [rax]
  412ae7:	mov    esi,0xb
  412aec:	mov    rdi,rax
  412aef:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  412af4:	mov    QWORD PTR [rbp-0x10],rax
  412af8:	cmp    QWORD PTR [rbp-0x10],0x0
  412afd:	je     412db6 <_start@@Base+0xdc56>
  412b03:	mov    rax,QWORD PTR [rbp-0x10]
  412b07:	mov    edx,DWORD PTR [rbp-0x34]
  412b0a:	mov    DWORD PTR [rax],edx
  412b0c:	jmp    412d2c <_start@@Base+0xdbcc>
  412b11:	mov    rdx,QWORD PTR [rbp-0x58]
  412b15:	mov    rcx,QWORD PTR [rbp-0x50]
  412b19:	mov    rax,QWORD PTR [rbp-0x48]
  412b1d:	mov    rsi,rcx
  412b20:	mov    rdi,rax
  412b23:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412b28:	mov    QWORD PTR [rbp-0x50],rax
  412b2c:	jmp    412d2c <_start@@Base+0xdbcc>
  412b31:	movabs rax,0xffff000000000000
  412b3b:	and    rax,QWORD PTR [rbp-0x28]
  412b3f:	mov    rdx,rax
  412b42:	movabs rax,0x7638000000000000
  412b4c:	cmp    rdx,rax
  412b4f:	jne    412d11 <_start@@Base+0xdbb1>
  412b55:	mov    rax,QWORD PTR [rbp-0x50]
  412b59:	mov    QWORD PTR [rbp-0x20],rax
  412b5d:	mov    rdx,QWORD PTR [rbp-0x58]
  412b61:	mov    rsi,QWORD PTR [rbp-0x20]
  412b65:	mov    rax,QWORD PTR [rbp-0x48]
  412b69:	mov    ecx,0x2
  412b6e:	mov    rdi,rax
  412b71:	call   405c76 <_start@@Base+0xb16>
  412b76:	mov    QWORD PTR [rbp-0x50],rax
  412b7a:	mov    rax,QWORD PTR [rbp-0x20]
  412b7e:	cmp    rax,QWORD PTR [rbp-0x50]
  412b82:	je     412cf4 <_start@@Base+0xdb94>
  412b88:	mov    rax,QWORD PTR [rbp-0x48]
  412b8c:	mov    rax,QWORD PTR [rax]
  412b8f:	mov    ecx,0xffffffff
  412b94:	mov    edx,0x1
  412b99:	mov    esi,0x1
  412b9e:	mov    rdi,rax
  412ba1:	call   41d59d <flatcc_builder_start_vector@@Base>
  412ba6:	test   eax,eax
  412ba8:	jne    412dac <_start@@Base+0xdc4c>
  412bae:	lea    rcx,[rbp-0x38]
  412bb2:	mov    rdx,QWORD PTR [rbp-0x58]
  412bb6:	mov    rsi,QWORD PTR [rbp-0x50]
  412bba:	mov    rax,QWORD PTR [rbp-0x48]
  412bbe:	mov    rdi,rax
  412bc1:	call   405a7b <_start@@Base+0x91b>
  412bc6:	mov    QWORD PTR [rbp-0x50],rax
  412bca:	jmp    412c9f <_start@@Base+0xdb3f>
  412bcf:	mov    BYTE PTR [rbp-0x30],0x0
  412bd3:	mov    rax,QWORD PTR [rbp-0x48]
  412bd7:	mov    rax,QWORD PTR [rax]
  412bda:	mov    esi,0x1
  412bdf:	mov    rdi,rax
  412be2:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  412be7:	mov    QWORD PTR [rbp-0x18],rax
  412beb:	cmp    QWORD PTR [rbp-0x18],0x0
  412bf0:	je     412daf <_start@@Base+0xdc4f>
  412bf6:	mov    rax,QWORD PTR [rbp-0x50]
  412bfa:	mov    QWORD PTR [rbp-0x20],rax
  412bfe:	lea    rcx,[rbp-0x30]
  412c02:	mov    rdx,QWORD PTR [rbp-0x58]
  412c06:	mov    rsi,QWORD PTR [rbp-0x20]
  412c0a:	mov    rax,QWORD PTR [rbp-0x48]
  412c0e:	mov    rdi,rax
  412c11:	call   4068ec <_start@@Base+0x178c>
  412c16:	mov    QWORD PTR [rbp-0x50],rax
  412c1a:	mov    rax,QWORD PTR [rbp-0x20]
  412c1e:	cmp    rax,QWORD PTR [rbp-0x50]
  412c22:	jne    412c6e <_start@@Base+0xdb0e>
  412c24:	mov    rax,QWORD PTR [rbp-0x50]
  412c28:	mov    QWORD PTR [rbp-0x20],rax
  412c2c:	lea    rcx,[rbp-0x30]
  412c30:	mov    rdx,QWORD PTR [rbp-0x58]
  412c34:	mov    rsi,QWORD PTR [rbp-0x20]
  412c38:	mov    rax,QWORD PTR [rbp-0x48]
  412c3c:	mov    r8,rcx
  412c3f:	lea    rcx,[rip+0x33c9a]        # 4468e0 <__data_start@@Base+0x820>
  412c46:	mov    rdi,rax
  412c49:	call   407424 <_start@@Base+0x22c4>
  412c4e:	mov    QWORD PTR [rbp-0x50],rax
  412c52:	mov    rax,QWORD PTR [rbp-0x50]
  412c56:	cmp    rax,QWORD PTR [rbp-0x20]
  412c5a:	je     412daf <_start@@Base+0xdc4f>
  412c60:	mov    rax,QWORD PTR [rbp-0x50]
  412c64:	cmp    rax,QWORD PTR [rbp-0x58]
  412c68:	je     412daf <_start@@Base+0xdc4f>
  412c6e:	movzx  eax,BYTE PTR [rbp-0x30]
  412c72:	movsx  edx,al
  412c75:	mov    rax,QWORD PTR [rbp-0x18]
  412c79:	mov    esi,edx
  412c7b:	mov    rdi,rax
  412c7e:	call   40534b <_start@@Base+0x1eb>
  412c83:	lea    rcx,[rbp-0x38]
  412c87:	mov    rdx,QWORD PTR [rbp-0x58]
  412c8b:	mov    rsi,QWORD PTR [rbp-0x50]
  412c8f:	mov    rax,QWORD PTR [rbp-0x48]
  412c93:	mov    rdi,rax
  412c96:	call   405b38 <_start@@Base+0x9d8>
  412c9b:	mov    QWORD PTR [rbp-0x50],rax
  412c9f:	mov    eax,DWORD PTR [rbp-0x38]
  412ca2:	test   eax,eax
  412ca4:	jne    412bcf <_start@@Base+0xda6f>
  412caa:	mov    rax,QWORD PTR [rbp-0x48]
  412cae:	mov    rax,QWORD PTR [rax]
  412cb1:	mov    rdi,rax
  412cb4:	call   41e773 <flatcc_builder_end_vector@@Base>
  412cb9:	mov    DWORD PTR [rbp-0x34],eax
  412cbc:	cmp    DWORD PTR [rbp-0x34],0x0
  412cc0:	je     412db6 <_start@@Base+0xdc56>
  412cc6:	mov    rax,QWORD PTR [rbp-0x48]
  412cca:	mov    rax,QWORD PTR [rax]
  412ccd:	mov    esi,0xa
  412cd2:	mov    rdi,rax
  412cd5:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  412cda:	mov    QWORD PTR [rbp-0x10],rax
  412cde:	cmp    QWORD PTR [rbp-0x10],0x0
  412ce3:	je     412db6 <_start@@Base+0xdc56>
  412ce9:	mov    rax,QWORD PTR [rbp-0x10]
  412ced:	mov    edx,DWORD PTR [rbp-0x34]
  412cf0:	mov    DWORD PTR [rax],edx
  412cf2:	jmp    412d2c <_start@@Base+0xdbcc>
  412cf4:	mov    rdx,QWORD PTR [rbp-0x58]
  412cf8:	mov    rcx,QWORD PTR [rbp-0x50]
  412cfc:	mov    rax,QWORD PTR [rbp-0x48]
  412d00:	mov    rsi,rcx
  412d03:	mov    rdi,rax
  412d06:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412d0b:	mov    QWORD PTR [rbp-0x50],rax
  412d0f:	jmp    412d2c <_start@@Base+0xdbcc>
  412d11:	mov    rdx,QWORD PTR [rbp-0x58]
  412d15:	mov    rcx,QWORD PTR [rbp-0x50]
  412d19:	mov    rax,QWORD PTR [rbp-0x48]
  412d1d:	mov    rsi,rcx
  412d20:	mov    rdi,rax
  412d23:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  412d28:	mov    QWORD PTR [rbp-0x50],rax
  412d2c:	lea    rcx,[rbp-0x38]
  412d30:	mov    rdx,QWORD PTR [rbp-0x58]
  412d34:	mov    rsi,QWORD PTR [rbp-0x50]
  412d38:	mov    rax,QWORD PTR [rbp-0x48]
  412d3c:	mov    rdi,rax
  412d3f:	call   40593d <_start@@Base+0x7dd>
  412d44:	mov    QWORD PTR [rbp-0x50],rax
  412d48:	mov    eax,DWORD PTR [rbp-0x38]
  412d4b:	test   eax,eax
  412d4d:	jne    411a22 <_start@@Base+0xc8c2>
  412d53:	mov    rax,QWORD PTR [rbp-0x48]
  412d57:	mov    eax,DWORD PTR [rax+0x20]
  412d5a:	test   eax,eax
  412d5c:	jne    412db2 <_start@@Base+0xdc52>
  412d5e:	mov    rax,QWORD PTR [rbp-0x48]
  412d62:	mov    rax,QWORD PTR [rax]
  412d65:	mov    rdi,rax
  412d68:	call   41e2d9 <flatcc_builder_end_table@@Base>
  412d6d:	mov    edx,eax
  412d6f:	mov    rax,QWORD PTR [rbp-0x60]
  412d73:	mov    DWORD PTR [rax],edx
  412d75:	mov    rax,QWORD PTR [rbp-0x60]
  412d79:	mov    eax,DWORD PTR [rax]
  412d7b:	test   eax,eax
  412d7d:	je     412db5 <_start@@Base+0xdc55>
  412d7f:	mov    rax,QWORD PTR [rbp-0x50]
  412d83:	jmp    412dcf <_start@@Base+0xdc6f>
  412d85:	nop
  412d86:	jmp    412db6 <_start@@Base+0xdc56>
  412d88:	nop
  412d89:	jmp    412db6 <_start@@Base+0xdc56>
  412d8b:	nop
  412d8c:	jmp    412db6 <_start@@Base+0xdc56>
  412d8e:	nop
  412d8f:	jmp    412db6 <_start@@Base+0xdc56>
  412d91:	nop
  412d92:	jmp    412db6 <_start@@Base+0xdc56>
  412d94:	nop
  412d95:	jmp    412db6 <_start@@Base+0xdc56>
  412d97:	nop
  412d98:	jmp    412db6 <_start@@Base+0xdc56>
  412d9a:	nop
  412d9b:	jmp    412db6 <_start@@Base+0xdc56>
  412d9d:	nop
  412d9e:	jmp    412db6 <_start@@Base+0xdc56>
  412da0:	nop
  412da1:	jmp    412db6 <_start@@Base+0xdc56>
  412da3:	nop
  412da4:	jmp    412db6 <_start@@Base+0xdc56>
  412da6:	nop
  412da7:	jmp    412db6 <_start@@Base+0xdc56>
  412da9:	nop
  412daa:	jmp    412db6 <_start@@Base+0xdc56>
  412dac:	nop
  412dad:	jmp    412db6 <_start@@Base+0xdc56>
  412daf:	nop
  412db0:	jmp    412db6 <_start@@Base+0xdc56>
  412db2:	nop
  412db3:	jmp    412db6 <_start@@Base+0xdc56>
  412db5:	nop
  412db6:	mov    rdx,QWORD PTR [rbp-0x58]
  412dba:	mov    rsi,QWORD PTR [rbp-0x50]
  412dbe:	mov    rax,QWORD PTR [rbp-0x48]
  412dc2:	mov    ecx,0x21
  412dc7:	mov    rdi,rax
  412dca:	call   42665a <flatcc_json_parser_set_error@@Base>
  412dcf:	mov    rdi,QWORD PTR [rbp-0x8]
  412dd3:	xor    rdi,QWORD PTR fs:0x28
  412ddc:	je     412de3 <_start@@Base+0xdc83>
  412dde:	call   405070 <__stack_chk_fail@plt>
  412de3:	leave  
  412de4:	ret    
  412de5:	push   rbp
  412de6:	mov    rbp,rsp
  412de9:	sub    rsp,0x50
  412ded:	mov    QWORD PTR [rbp-0x38],rdi
  412df1:	mov    QWORD PTR [rbp-0x40],rsi
  412df5:	mov    QWORD PTR [rbp-0x48],rdx
  412df9:	mov    QWORD PTR [rbp-0x50],rcx
  412dfd:	mov    rax,QWORD PTR fs:0x28
  412e06:	mov    QWORD PTR [rbp-0x8],rax
  412e0a:	xor    eax,eax
  412e0c:	mov    rax,QWORD PTR [rbp-0x50]
  412e10:	mov    DWORD PTR [rax],0x0
  412e16:	mov    rax,QWORD PTR [rbp-0x38]
  412e1a:	mov    rax,QWORD PTR [rax]
  412e1d:	mov    esi,0x1
  412e22:	mov    rdi,rax
  412e25:	call   41d7d7 <flatcc_builder_start_table@@Base>
  412e2a:	test   eax,eax
  412e2c:	jne    4130df <_start@@Base+0xdf7f>
  412e32:	lea    rcx,[rbp-0x28]
  412e36:	mov    rdx,QWORD PTR [rbp-0x48]
  412e3a:	mov    rsi,QWORD PTR [rbp-0x40]
  412e3e:	mov    rax,QWORD PTR [rbp-0x38]
  412e42:	mov    rdi,rax
  412e45:	call   405880 <_start@@Base+0x720>
  412e4a:	mov    QWORD PTR [rbp-0x40],rax
  412e4e:	jmp    4130a2 <_start@@Base+0xdf42>
  412e53:	mov    rdx,QWORD PTR [rbp-0x48]
  412e57:	mov    rcx,QWORD PTR [rbp-0x40]
  412e5b:	mov    rax,QWORD PTR [rbp-0x38]
  412e5f:	mov    rsi,rcx
  412e62:	mov    rdi,rax
  412e65:	call   4055e5 <_start@@Base+0x485>
  412e6a:	mov    QWORD PTR [rbp-0x40],rax
  412e6e:	mov    rdx,QWORD PTR [rbp-0x48]
  412e72:	mov    rax,QWORD PTR [rbp-0x40]
  412e76:	mov    rsi,rdx
  412e79:	mov    rdi,rax
  412e7c:	call   405779 <_start@@Base+0x619>
  412e81:	mov    QWORD PTR [rbp-0x20],rax
  412e85:	movabs rax,0x73776f72645f6174
  412e8f:	cmp    QWORD PTR [rbp-0x20],rax
  412e93:	jne    41306b <_start@@Base+0xdf0b>
  412e99:	add    QWORD PTR [rbp-0x40],0x8
  412e9e:	mov    rdx,QWORD PTR [rbp-0x48]
  412ea2:	mov    rax,QWORD PTR [rbp-0x40]
  412ea6:	mov    rsi,rdx
  412ea9:	mov    rdi,rax
  412eac:	call   405779 <_start@@Base+0x619>
  412eb1:	mov    QWORD PTR [rbp-0x20],rax
  412eb5:	movabs rax,0x7461636b5f64616d
  412ebf:	cmp    QWORD PTR [rbp-0x20],rax
  412ec3:	jne    41304e <_start@@Base+0xdeee>
  412ec9:	add    QWORD PTR [rbp-0x40],0x8
  412ece:	mov    rdx,QWORD PTR [rbp-0x48]
  412ed2:	mov    rax,QWORD PTR [rbp-0x40]
  412ed6:	mov    rsi,rdx
  412ed9:	mov    rdi,rax
  412edc:	call   405779 <_start@@Base+0x619>
  412ee1:	mov    QWORD PTR [rbp-0x20],rax
  412ee5:	movabs rax,0xffffff0000000000
  412eef:	and    rax,QWORD PTR [rbp-0x20]
  412ef3:	mov    rdx,rax
  412ef6:	movabs rax,0x6167650000000000
  412f00:	cmp    rdx,rax
  412f03:	jne    413031 <_start@@Base+0xded1>
  412f09:	mov    rax,QWORD PTR [rbp-0x40]
  412f0d:	mov    QWORD PTR [rbp-0x18],rax
  412f11:	mov    rdx,QWORD PTR [rbp-0x48]
  412f15:	mov    rsi,QWORD PTR [rbp-0x18]
  412f19:	mov    rax,QWORD PTR [rbp-0x38]
  412f1d:	mov    ecx,0x3
  412f22:	mov    rdi,rax
  412f25:	call   405c76 <_start@@Base+0xb16>
  412f2a:	mov    QWORD PTR [rbp-0x40],rax
  412f2e:	mov    rax,QWORD PTR [rbp-0x18]
  412f32:	cmp    rax,QWORD PTR [rbp-0x40]
  412f36:	je     413014 <_start@@Base+0xdeb4>
  412f3c:	mov    DWORD PTR [rbp-0x24],0x0
  412f43:	mov    rax,QWORD PTR [rbp-0x40]
  412f47:	mov    QWORD PTR [rbp-0x18],rax
  412f4b:	lea    rcx,[rbp-0x24]
  412f4f:	mov    rdx,QWORD PTR [rbp-0x48]
  412f53:	mov    rsi,QWORD PTR [rbp-0x18]
  412f57:	mov    rax,QWORD PTR [rbp-0x38]
  412f5b:	mov    rdi,rax
  412f5e:	call   406761 <_start@@Base+0x1601>
  412f63:	mov    QWORD PTR [rbp-0x40],rax
  412f67:	mov    rax,QWORD PTR [rbp-0x18]
  412f6b:	cmp    rax,QWORD PTR [rbp-0x40]
  412f6f:	jne    412fbb <_start@@Base+0xde5b>
  412f71:	mov    rax,QWORD PTR [rbp-0x40]
  412f75:	mov    QWORD PTR [rbp-0x18],rax
  412f79:	lea    rcx,[rbp-0x24]
  412f7d:	mov    rdx,QWORD PTR [rbp-0x48]
  412f81:	mov    rsi,QWORD PTR [rbp-0x18]
  412f85:	mov    rax,QWORD PTR [rbp-0x38]
  412f89:	mov    r8,rcx
  412f8c:	lea    rcx,[rip+0x3396d]        # 446900 <__data_start@@Base+0x840>
  412f93:	mov    rdi,rax
  412f96:	call   40716d <_start@@Base+0x200d>
  412f9b:	mov    QWORD PTR [rbp-0x40],rax
  412f9f:	mov    rax,QWORD PTR [rbp-0x40]
  412fa3:	cmp    rax,QWORD PTR [rbp-0x18]
  412fa7:	je     4130e9 <_start@@Base+0xdf89>
  412fad:	mov    rax,QWORD PTR [rbp-0x40]
  412fb1:	cmp    rax,QWORD PTR [rbp-0x48]
  412fb5:	je     4130e9 <_start@@Base+0xdf89>
  412fbb:	mov    eax,DWORD PTR [rbp-0x24]
  412fbe:	test   eax,eax
  412fc0:	jne    412fd4 <_start@@Base+0xde74>
  412fc2:	mov    rax,QWORD PTR [rbp-0x38]
  412fc6:	mov    eax,DWORD PTR [rax+0x10]
  412fc9:	and    eax,0x2
  412fcc:	test   eax,eax
  412fce:	je     413086 <_start@@Base+0xdf26>
  412fd4:	mov    rax,QWORD PTR [rbp-0x38]
  412fd8:	mov    rax,QWORD PTR [rax]
  412fdb:	mov    ecx,0x4
  412fe0:	mov    edx,0x4
  412fe5:	mov    esi,0x0
  412fea:	mov    rdi,rax
  412fed:	call   41f93b <flatcc_builder_table_add@@Base>
  412ff2:	mov    QWORD PTR [rbp-0x10],rax
  412ff6:	cmp    QWORD PTR [rbp-0x10],0x0
  412ffb:	je     4130e2 <_start@@Base+0xdf82>
  413001:	mov    edx,DWORD PTR [rbp-0x24]
  413004:	mov    rax,QWORD PTR [rbp-0x10]
  413008:	mov    esi,edx
  41300a:	mov    rdi,rax
  41300d:	call   4053b7 <_start@@Base+0x257>
  413012:	jmp    413086 <_start@@Base+0xdf26>
  413014:	mov    rdx,QWORD PTR [rbp-0x48]
  413018:	mov    rcx,QWORD PTR [rbp-0x40]
  41301c:	mov    rax,QWORD PTR [rbp-0x38]
  413020:	mov    rsi,rcx
  413023:	mov    rdi,rax
  413026:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41302b:	mov    QWORD PTR [rbp-0x40],rax
  41302f:	jmp    413086 <_start@@Base+0xdf26>
  413031:	mov    rdx,QWORD PTR [rbp-0x48]
  413035:	mov    rcx,QWORD PTR [rbp-0x40]
  413039:	mov    rax,QWORD PTR [rbp-0x38]
  41303d:	mov    rsi,rcx
  413040:	mov    rdi,rax
  413043:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413048:	mov    QWORD PTR [rbp-0x40],rax
  41304c:	jmp    413086 <_start@@Base+0xdf26>
  41304e:	mov    rdx,QWORD PTR [rbp-0x48]
  413052:	mov    rcx,QWORD PTR [rbp-0x40]
  413056:	mov    rax,QWORD PTR [rbp-0x38]
  41305a:	mov    rsi,rcx
  41305d:	mov    rdi,rax
  413060:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413065:	mov    QWORD PTR [rbp-0x40],rax
  413069:	jmp    413086 <_start@@Base+0xdf26>
  41306b:	mov    rdx,QWORD PTR [rbp-0x48]
  41306f:	mov    rcx,QWORD PTR [rbp-0x40]
  413073:	mov    rax,QWORD PTR [rbp-0x38]
  413077:	mov    rsi,rcx
  41307a:	mov    rdi,rax
  41307d:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413082:	mov    QWORD PTR [rbp-0x40],rax
  413086:	lea    rcx,[rbp-0x28]
  41308a:	mov    rdx,QWORD PTR [rbp-0x48]
  41308e:	mov    rsi,QWORD PTR [rbp-0x40]
  413092:	mov    rax,QWORD PTR [rbp-0x38]
  413096:	mov    rdi,rax
  413099:	call   40593d <_start@@Base+0x7dd>
  41309e:	mov    QWORD PTR [rbp-0x40],rax
  4130a2:	mov    eax,DWORD PTR [rbp-0x28]
  4130a5:	test   eax,eax
  4130a7:	jne    412e53 <_start@@Base+0xdcf3>
  4130ad:	mov    rax,QWORD PTR [rbp-0x38]
  4130b1:	mov    eax,DWORD PTR [rax+0x20]
  4130b4:	test   eax,eax
  4130b6:	jne    4130e5 <_start@@Base+0xdf85>
  4130b8:	mov    rax,QWORD PTR [rbp-0x38]
  4130bc:	mov    rax,QWORD PTR [rax]
  4130bf:	mov    rdi,rax
  4130c2:	call   41e2d9 <flatcc_builder_end_table@@Base>
  4130c7:	mov    edx,eax
  4130c9:	mov    rax,QWORD PTR [rbp-0x50]
  4130cd:	mov    DWORD PTR [rax],edx
  4130cf:	mov    rax,QWORD PTR [rbp-0x50]
  4130d3:	mov    eax,DWORD PTR [rax]
  4130d5:	test   eax,eax
  4130d7:	je     4130e8 <_start@@Base+0xdf88>
  4130d9:	mov    rax,QWORD PTR [rbp-0x40]
  4130dd:	jmp    413102 <_start@@Base+0xdfa2>
  4130df:	nop
  4130e0:	jmp    4130e9 <_start@@Base+0xdf89>
  4130e2:	nop
  4130e3:	jmp    4130e9 <_start@@Base+0xdf89>
  4130e5:	nop
  4130e6:	jmp    4130e9 <_start@@Base+0xdf89>
  4130e8:	nop
  4130e9:	mov    rdx,QWORD PTR [rbp-0x48]
  4130ed:	mov    rsi,QWORD PTR [rbp-0x40]
  4130f1:	mov    rax,QWORD PTR [rbp-0x38]
  4130f5:	mov    ecx,0x21
  4130fa:	mov    rdi,rax
  4130fd:	call   42665a <flatcc_json_parser_set_error@@Base>
  413102:	mov    rdi,QWORD PTR [rbp-0x8]
  413106:	xor    rdi,QWORD PTR fs:0x28
  41310f:	je     413116 <_start@@Base+0xdfb6>
  413111:	call   405070 <__stack_chk_fail@plt>
  413116:	leave  
  413117:	ret    
  413118:	push   rbp
  413119:	mov    rbp,rsp
  41311c:	sub    rsp,0x50
  413120:	mov    QWORD PTR [rbp-0x38],rdi
  413124:	mov    QWORD PTR [rbp-0x40],rsi
  413128:	mov    QWORD PTR [rbp-0x48],rdx
  41312c:	mov    QWORD PTR [rbp-0x50],rcx
  413130:	mov    rax,QWORD PTR fs:0x28
  413139:	mov    QWORD PTR [rbp-0x8],rax
  41313d:	xor    eax,eax
  41313f:	lea    rcx,[rbp-0x24]
  413143:	mov    rdx,QWORD PTR [rbp-0x48]
  413147:	mov    rsi,QWORD PTR [rbp-0x40]
  41314b:	mov    rax,QWORD PTR [rbp-0x38]
  41314f:	mov    rdi,rax
  413152:	call   405880 <_start@@Base+0x720>
  413157:	mov    QWORD PTR [rbp-0x40],rax
  41315b:	jmp    413327 <_start@@Base+0xe1c7>
  413160:	mov    rdx,QWORD PTR [rbp-0x48]
  413164:	mov    rcx,QWORD PTR [rbp-0x40]
  413168:	mov    rax,QWORD PTR [rbp-0x38]
  41316c:	mov    rsi,rcx
  41316f:	mov    rdi,rax
  413172:	call   4055e5 <_start@@Base+0x485>
  413177:	mov    QWORD PTR [rbp-0x40],rax
  41317b:	mov    rdx,QWORD PTR [rbp-0x48]
  41317f:	mov    rax,QWORD PTR [rbp-0x40]
  413183:	mov    rsi,rdx
  413186:	mov    rdi,rax
  413189:	call   405779 <_start@@Base+0x619>
  41318e:	mov    QWORD PTR [rbp-0x20],rax
  413192:	movabs rax,0x686169725f6c656e
  41319c:	cmp    QWORD PTR [rbp-0x20],rax
  4131a0:	jne    4132f0 <_start@@Base+0xe190>
  4131a6:	add    QWORD PTR [rbp-0x40],0x8
  4131ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4131af:	mov    rax,QWORD PTR [rbp-0x40]
  4131b3:	mov    rsi,rdx
  4131b6:	mov    rdi,rax
  4131b9:	call   405779 <_start@@Base+0x619>
  4131be:	mov    QWORD PTR [rbp-0x20],rax
  4131c2:	movabs rax,0xffffff0000000000
  4131cc:	and    rax,QWORD PTR [rbp-0x20]
  4131d0:	mov    rdx,rax
  4131d3:	movabs rax,0x6774680000000000
  4131dd:	cmp    rdx,rax
  4131e0:	jne    4132d3 <_start@@Base+0xe173>
  4131e6:	mov    rax,QWORD PTR [rbp-0x40]
  4131ea:	mov    QWORD PTR [rbp-0x18],rax
  4131ee:	mov    rdx,QWORD PTR [rbp-0x48]
  4131f2:	mov    rsi,QWORD PTR [rbp-0x18]
  4131f6:	mov    rax,QWORD PTR [rbp-0x38]
  4131fa:	mov    ecx,0x3
  4131ff:	mov    rdi,rax
  413202:	call   405c76 <_start@@Base+0xb16>
  413207:	mov    QWORD PTR [rbp-0x40],rax
  41320b:	mov    rax,QWORD PTR [rbp-0x18]
  41320f:	cmp    rax,QWORD PTR [rbp-0x40]
  413213:	je     4132b6 <_start@@Base+0xe156>
  413219:	mov    WORD PTR [rbp-0x26],0x0
  41321f:	mov    rax,QWORD PTR [rbp-0x50]
  413223:	mov    QWORD PTR [rbp-0x10],rax
  413227:	mov    rax,QWORD PTR [rbp-0x40]
  41322b:	mov    QWORD PTR [rbp-0x18],rax
  41322f:	lea    rcx,[rbp-0x26]
  413233:	mov    rdx,QWORD PTR [rbp-0x48]
  413237:	mov    rsi,QWORD PTR [rbp-0x18]
  41323b:	mov    rax,QWORD PTR [rbp-0x38]
  41323f:	mov    rdi,rax
  413242:	call   406512 <_start@@Base+0x13b2>
  413247:	mov    QWORD PTR [rbp-0x40],rax
  41324b:	mov    rax,QWORD PTR [rbp-0x18]
  41324f:	cmp    rax,QWORD PTR [rbp-0x40]
  413253:	jne    41329f <_start@@Base+0xe13f>
  413255:	mov    rax,QWORD PTR [rbp-0x40]
  413259:	mov    QWORD PTR [rbp-0x18],rax
  41325d:	lea    rcx,[rbp-0x26]
  413261:	mov    rdx,QWORD PTR [rbp-0x48]
  413265:	mov    rsi,QWORD PTR [rbp-0x18]
  413269:	mov    rax,QWORD PTR [rbp-0x38]
  41326d:	mov    r8,rcx
  413270:	lea    rcx,[rip+0x336a9]        # 446920 <__data_start@@Base+0x860>
  413277:	mov    rdi,rax
  41327a:	call   406d5f <_start@@Base+0x1bff>
  41327f:	mov    QWORD PTR [rbp-0x40],rax
  413283:	mov    rax,QWORD PTR [rbp-0x40]
  413287:	cmp    rax,QWORD PTR [rbp-0x18]
  41328b:	je     413338 <_start@@Base+0xe1d8>
  413291:	mov    rax,QWORD PTR [rbp-0x40]
  413295:	cmp    rax,QWORD PTR [rbp-0x48]
  413299:	je     413338 <_start@@Base+0xe1d8>
  41329f:	movzx  eax,WORD PTR [rbp-0x26]
  4132a3:	movzx  edx,ax
  4132a6:	mov    rax,QWORD PTR [rbp-0x10]
  4132aa:	mov    esi,edx
  4132ac:	mov    rdi,rax
  4132af:	call   4052ac <_start@@Base+0x14c>
  4132b4:	jmp    41330b <_start@@Base+0xe1ab>
  4132b6:	mov    rdx,QWORD PTR [rbp-0x48]
  4132ba:	mov    rcx,QWORD PTR [rbp-0x40]
  4132be:	mov    rax,QWORD PTR [rbp-0x38]
  4132c2:	mov    rsi,rcx
  4132c5:	mov    rdi,rax
  4132c8:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4132cd:	mov    QWORD PTR [rbp-0x40],rax
  4132d1:	jmp    41330b <_start@@Base+0xe1ab>
  4132d3:	mov    rdx,QWORD PTR [rbp-0x48]
  4132d7:	mov    rcx,QWORD PTR [rbp-0x40]
  4132db:	mov    rax,QWORD PTR [rbp-0x38]
  4132df:	mov    rsi,rcx
  4132e2:	mov    rdi,rax
  4132e5:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4132ea:	mov    QWORD PTR [rbp-0x40],rax
  4132ee:	jmp    41330b <_start@@Base+0xe1ab>
  4132f0:	mov    rdx,QWORD PTR [rbp-0x48]
  4132f4:	mov    rcx,QWORD PTR [rbp-0x40]
  4132f8:	mov    rax,QWORD PTR [rbp-0x38]
  4132fc:	mov    rsi,rcx
  4132ff:	mov    rdi,rax
  413302:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413307:	mov    QWORD PTR [rbp-0x40],rax
  41330b:	lea    rcx,[rbp-0x24]
  41330f:	mov    rdx,QWORD PTR [rbp-0x48]
  413313:	mov    rsi,QWORD PTR [rbp-0x40]
  413317:	mov    rax,QWORD PTR [rbp-0x38]
  41331b:	mov    rdi,rax
  41331e:	call   40593d <_start@@Base+0x7dd>
  413323:	mov    QWORD PTR [rbp-0x40],rax
  413327:	mov    eax,DWORD PTR [rbp-0x24]
  41332a:	test   eax,eax
  41332c:	jne    413160 <_start@@Base+0xe000>
  413332:	mov    rax,QWORD PTR [rbp-0x40]
  413336:	jmp    413351 <_start@@Base+0xe1f1>
  413338:	mov    rdx,QWORD PTR [rbp-0x48]
  41333c:	mov    rsi,QWORD PTR [rbp-0x40]
  413340:	mov    rax,QWORD PTR [rbp-0x38]
  413344:	mov    ecx,0x21
  413349:	mov    rdi,rax
  41334c:	call   42665a <flatcc_json_parser_set_error@@Base>
  413351:	mov    rdi,QWORD PTR [rbp-0x8]
  413355:	xor    rdi,QWORD PTR fs:0x28
  41335e:	je     413365 <_start@@Base+0xe205>
  413360:	call   405070 <__stack_chk_fail@plt>
  413365:	leave  
  413366:	ret    
  413367:	push   rbp
  413368:	mov    rbp,rsp
  41336b:	sub    rsp,0x30
  41336f:	mov    QWORD PTR [rbp-0x18],rdi
  413373:	mov    QWORD PTR [rbp-0x20],rsi
  413377:	mov    QWORD PTR [rbp-0x28],rdx
  41337b:	mov    QWORD PTR [rbp-0x30],rcx
  41337f:	mov    rax,QWORD PTR [rbp-0x30]
  413383:	mov    DWORD PTR [rax],0x0
  413389:	mov    rax,QWORD PTR [rbp-0x18]
  41338d:	mov    rax,QWORD PTR [rax]
  413390:	mov    edx,0x2
  413395:	mov    esi,0x2
  41339a:	mov    rdi,rax
  41339d:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  4133a2:	mov    QWORD PTR [rbp-0x8],rax
  4133a6:	cmp    QWORD PTR [rbp-0x8],0x0
  4133ab:	je     4133fa <_start@@Base+0xe29a>
  4133ad:	mov    rcx,QWORD PTR [rbp-0x8]
  4133b1:	mov    rdx,QWORD PTR [rbp-0x28]
  4133b5:	mov    rsi,QWORD PTR [rbp-0x20]
  4133b9:	mov    rax,QWORD PTR [rbp-0x18]
  4133bd:	mov    rdi,rax
  4133c0:	call   413118 <_start@@Base+0xdfb8>
  4133c5:	mov    QWORD PTR [rbp-0x20],rax
  4133c9:	mov    rax,QWORD PTR [rbp-0x20]
  4133cd:	cmp    rax,QWORD PTR [rbp-0x28]
  4133d1:	je     4133fb <_start@@Base+0xe29b>
  4133d3:	mov    rax,QWORD PTR [rbp-0x18]
  4133d7:	mov    rax,QWORD PTR [rax]
  4133da:	mov    rdi,rax
  4133dd:	call   41cd71 <flatcc_builder_end_struct@@Base>
  4133e2:	mov    edx,eax
  4133e4:	mov    rax,QWORD PTR [rbp-0x30]
  4133e8:	mov    DWORD PTR [rax],edx
  4133ea:	mov    rax,QWORD PTR [rbp-0x30]
  4133ee:	mov    eax,DWORD PTR [rax]
  4133f0:	test   eax,eax
  4133f2:	je     4133fb <_start@@Base+0xe29b>
  4133f4:	mov    rax,QWORD PTR [rbp-0x20]
  4133f8:	jmp    413414 <_start@@Base+0xe2b4>
  4133fa:	nop
  4133fb:	mov    rdx,QWORD PTR [rbp-0x28]
  4133ff:	mov    rsi,QWORD PTR [rbp-0x20]
  413403:	mov    rax,QWORD PTR [rbp-0x18]
  413407:	mov    ecx,0x21
  41340c:	mov    rdi,rax
  41340f:	call   42665a <flatcc_json_parser_set_error@@Base>
  413414:	leave  
  413415:	ret    
  413416:	push   rbp
  413417:	mov    rbp,rsp
  41341a:	sub    rsp,0x50
  41341e:	mov    QWORD PTR [rbp-0x38],rdi
  413422:	mov    QWORD PTR [rbp-0x40],rsi
  413426:	mov    QWORD PTR [rbp-0x48],rdx
  41342a:	mov    QWORD PTR [rbp-0x50],rcx
  41342e:	mov    rax,QWORD PTR fs:0x28
  413437:	mov    QWORD PTR [rbp-0x8],rax
  41343b:	xor    eax,eax
  41343d:	lea    rcx,[rbp-0x28]
  413441:	mov    rdx,QWORD PTR [rbp-0x48]
  413445:	mov    rsi,QWORD PTR [rbp-0x40]
  413449:	mov    rax,QWORD PTR [rbp-0x38]
  41344d:	mov    rdi,rax
  413450:	call   405880 <_start@@Base+0x720>
  413455:	mov    QWORD PTR [rbp-0x40],rax
  413459:	jmp    413622 <_start@@Base+0xe4c2>
  41345e:	mov    rdx,QWORD PTR [rbp-0x48]
  413462:	mov    rcx,QWORD PTR [rbp-0x40]
  413466:	mov    rax,QWORD PTR [rbp-0x38]
  41346a:	mov    rsi,rcx
  41346d:	mov    rdi,rax
  413470:	call   4055e5 <_start@@Base+0x485>
  413475:	mov    QWORD PTR [rbp-0x40],rax
  413479:	mov    rdx,QWORD PTR [rbp-0x48]
  41347d:	mov    rax,QWORD PTR [rbp-0x40]
  413481:	mov    rsi,rdx
  413484:	mov    rdi,rax
  413487:	call   405779 <_start@@Base+0x619>
  41348c:	mov    QWORD PTR [rbp-0x20],rax
  413490:	movabs rax,0x626f6f6b735f7265
  41349a:	cmp    QWORD PTR [rbp-0x20],rax
  41349e:	jne    4135eb <_start@@Base+0xe48b>
  4134a4:	add    QWORD PTR [rbp-0x40],0x8
  4134a9:	mov    rdx,QWORD PTR [rbp-0x48]
  4134ad:	mov    rax,QWORD PTR [rbp-0x40]
  4134b1:	mov    rsi,rdx
  4134b4:	mov    rdi,rax
  4134b7:	call   405779 <_start@@Base+0x619>
  4134bc:	mov    QWORD PTR [rbp-0x20],rax
  4134c0:	movabs rax,0xffff000000000000
  4134ca:	and    rax,QWORD PTR [rbp-0x20]
  4134ce:	mov    rdx,rax
  4134d1:	movabs rax,0x6164000000000000
  4134db:	cmp    rdx,rax
  4134de:	jne    4135ce <_start@@Base+0xe46e>
  4134e4:	mov    rax,QWORD PTR [rbp-0x40]
  4134e8:	mov    QWORD PTR [rbp-0x18],rax
  4134ec:	mov    rdx,QWORD PTR [rbp-0x48]
  4134f0:	mov    rsi,QWORD PTR [rbp-0x18]
  4134f4:	mov    rax,QWORD PTR [rbp-0x38]
  4134f8:	mov    ecx,0x2
  4134fd:	mov    rdi,rax
  413500:	call   405c76 <_start@@Base+0xb16>
  413505:	mov    QWORD PTR [rbp-0x40],rax
  413509:	mov    rax,QWORD PTR [rbp-0x18]
  41350d:	cmp    rax,QWORD PTR [rbp-0x40]
  413511:	je     4135b1 <_start@@Base+0xe451>
  413517:	mov    DWORD PTR [rbp-0x24],0x0
  41351e:	mov    rax,QWORD PTR [rbp-0x50]
  413522:	mov    QWORD PTR [rbp-0x10],rax
  413526:	mov    rax,QWORD PTR [rbp-0x40]
  41352a:	mov    QWORD PTR [rbp-0x18],rax
  41352e:	lea    rcx,[rbp-0x24]
  413532:	mov    rdx,QWORD PTR [rbp-0x48]
  413536:	mov    rsi,QWORD PTR [rbp-0x18]
  41353a:	mov    rax,QWORD PTR [rbp-0x38]
  41353e:	mov    rdi,rax
  413541:	call   406761 <_start@@Base+0x1601>
  413546:	mov    QWORD PTR [rbp-0x40],rax
  41354a:	mov    rax,QWORD PTR [rbp-0x18]
  41354e:	cmp    rax,QWORD PTR [rbp-0x40]
  413552:	jne    41359e <_start@@Base+0xe43e>
  413554:	mov    rax,QWORD PTR [rbp-0x40]
  413558:	mov    QWORD PTR [rbp-0x18],rax
  41355c:	lea    rcx,[rbp-0x24]
  413560:	mov    rdx,QWORD PTR [rbp-0x48]
  413564:	mov    rsi,QWORD PTR [rbp-0x18]
  413568:	mov    rax,QWORD PTR [rbp-0x38]
  41356c:	mov    r8,rcx
  41356f:	lea    rcx,[rip+0x333ca]        # 446940 <__data_start@@Base+0x880>
  413576:	mov    rdi,rax
  413579:	call   40716d <_start@@Base+0x200d>
  41357e:	mov    QWORD PTR [rbp-0x40],rax
  413582:	mov    rax,QWORD PTR [rbp-0x40]
  413586:	cmp    rax,QWORD PTR [rbp-0x18]
  41358a:	je     413633 <_start@@Base+0xe4d3>
  413590:	mov    rax,QWORD PTR [rbp-0x40]
  413594:	cmp    rax,QWORD PTR [rbp-0x48]
  413598:	je     413633 <_start@@Base+0xe4d3>
  41359e:	mov    edx,DWORD PTR [rbp-0x24]
  4135a1:	mov    rax,QWORD PTR [rbp-0x10]
  4135a5:	mov    esi,edx
  4135a7:	mov    rdi,rax
  4135aa:	call   4053b7 <_start@@Base+0x257>
  4135af:	jmp    413606 <_start@@Base+0xe4a6>
  4135b1:	mov    rdx,QWORD PTR [rbp-0x48]
  4135b5:	mov    rcx,QWORD PTR [rbp-0x40]
  4135b9:	mov    rax,QWORD PTR [rbp-0x38]
  4135bd:	mov    rsi,rcx
  4135c0:	mov    rdi,rax
  4135c3:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4135c8:	mov    QWORD PTR [rbp-0x40],rax
  4135cc:	jmp    413606 <_start@@Base+0xe4a6>
  4135ce:	mov    rdx,QWORD PTR [rbp-0x48]
  4135d2:	mov    rcx,QWORD PTR [rbp-0x40]
  4135d6:	mov    rax,QWORD PTR [rbp-0x38]
  4135da:	mov    rsi,rcx
  4135dd:	mov    rdi,rax
  4135e0:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4135e5:	mov    QWORD PTR [rbp-0x40],rax
  4135e9:	jmp    413606 <_start@@Base+0xe4a6>
  4135eb:	mov    rdx,QWORD PTR [rbp-0x48]
  4135ef:	mov    rcx,QWORD PTR [rbp-0x40]
  4135f3:	mov    rax,QWORD PTR [rbp-0x38]
  4135f7:	mov    rsi,rcx
  4135fa:	mov    rdi,rax
  4135fd:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413602:	mov    QWORD PTR [rbp-0x40],rax
  413606:	lea    rcx,[rbp-0x28]
  41360a:	mov    rdx,QWORD PTR [rbp-0x48]
  41360e:	mov    rsi,QWORD PTR [rbp-0x40]
  413612:	mov    rax,QWORD PTR [rbp-0x38]
  413616:	mov    rdi,rax
  413619:	call   40593d <_start@@Base+0x7dd>
  41361e:	mov    QWORD PTR [rbp-0x40],rax
  413622:	mov    eax,DWORD PTR [rbp-0x28]
  413625:	test   eax,eax
  413627:	jne    41345e <_start@@Base+0xe2fe>
  41362d:	mov    rax,QWORD PTR [rbp-0x40]
  413631:	jmp    41364c <_start@@Base+0xe4ec>
  413633:	mov    rdx,QWORD PTR [rbp-0x48]
  413637:	mov    rsi,QWORD PTR [rbp-0x40]
  41363b:	mov    rax,QWORD PTR [rbp-0x38]
  41363f:	mov    ecx,0x21
  413644:	mov    rdi,rax
  413647:	call   42665a <flatcc_json_parser_set_error@@Base>
  41364c:	mov    rdi,QWORD PTR [rbp-0x8]
  413650:	xor    rdi,QWORD PTR fs:0x28
  413659:	je     413660 <_start@@Base+0xe500>
  41365b:	call   405070 <__stack_chk_fail@plt>
  413660:	leave  
  413661:	ret    
  413662:	push   rbp
  413663:	mov    rbp,rsp
  413666:	sub    rsp,0x30
  41366a:	mov    QWORD PTR [rbp-0x18],rdi
  41366e:	mov    QWORD PTR [rbp-0x20],rsi
  413672:	mov    QWORD PTR [rbp-0x28],rdx
  413676:	mov    QWORD PTR [rbp-0x30],rcx
  41367a:	mov    rax,QWORD PTR [rbp-0x30]
  41367e:	mov    DWORD PTR [rax],0x0
  413684:	mov    rax,QWORD PTR [rbp-0x18]
  413688:	mov    rax,QWORD PTR [rax]
  41368b:	mov    edx,0x4
  413690:	mov    esi,0x4
  413695:	mov    rdi,rax
  413698:	call   41ccf7 <flatcc_builder_start_struct@@Base>
  41369d:	mov    QWORD PTR [rbp-0x8],rax
  4136a1:	cmp    QWORD PTR [rbp-0x8],0x0
  4136a6:	je     4136f5 <_start@@Base+0xe595>
  4136a8:	mov    rcx,QWORD PTR [rbp-0x8]
  4136ac:	mov    rdx,QWORD PTR [rbp-0x28]
  4136b0:	mov    rsi,QWORD PTR [rbp-0x20]
  4136b4:	mov    rax,QWORD PTR [rbp-0x18]
  4136b8:	mov    rdi,rax
  4136bb:	call   413416 <_start@@Base+0xe2b6>
  4136c0:	mov    QWORD PTR [rbp-0x20],rax
  4136c4:	mov    rax,QWORD PTR [rbp-0x20]
  4136c8:	cmp    rax,QWORD PTR [rbp-0x28]
  4136cc:	je     4136f6 <_start@@Base+0xe596>
  4136ce:	mov    rax,QWORD PTR [rbp-0x18]
  4136d2:	mov    rax,QWORD PTR [rax]
  4136d5:	mov    rdi,rax
  4136d8:	call   41cd71 <flatcc_builder_end_struct@@Base>
  4136dd:	mov    edx,eax
  4136df:	mov    rax,QWORD PTR [rbp-0x30]
  4136e3:	mov    DWORD PTR [rax],edx
  4136e5:	mov    rax,QWORD PTR [rbp-0x30]
  4136e9:	mov    eax,DWORD PTR [rax]
  4136eb:	test   eax,eax
  4136ed:	je     4136f6 <_start@@Base+0xe596>
  4136ef:	mov    rax,QWORD PTR [rbp-0x20]
  4136f3:	jmp    41370f <_start@@Base+0xe5af>
  4136f5:	nop
  4136f6:	mov    rdx,QWORD PTR [rbp-0x28]
  4136fa:	mov    rsi,QWORD PTR [rbp-0x20]
  4136fe:	mov    rax,QWORD PTR [rbp-0x18]
  413702:	mov    ecx,0x21
  413707:	mov    rdi,rax
  41370a:	call   42665a <flatcc_json_parser_set_error@@Base>
  41370f:	leave  
  413710:	ret    
  413711:	push   rbp
  413712:	mov    rbp,rsp
  413715:	sub    rsp,0x30
  413719:	mov    QWORD PTR [rbp-0x8],rdi
  41371d:	mov    QWORD PTR [rbp-0x10],rsi
  413721:	mov    QWORD PTR [rbp-0x18],rdx
  413725:	mov    eax,ecx
  413727:	mov    QWORD PTR [rbp-0x28],r8
  41372b:	mov    BYTE PTR [rbp-0x1c],al
  41372e:	mov    rax,QWORD PTR [rbp-0x28]
  413732:	mov    DWORD PTR [rax],0x0
  413738:	movzx  eax,BYTE PTR [rbp-0x1c]
  41373c:	cmp    eax,0x9
  41373f:	je     4137dd <_start@@Base+0xe67d>
  413745:	cmp    eax,0x9
  413748:	jg     41375d <_start@@Base+0xe5fd>
  41374a:	cmp    eax,0x2
  41374d:	je     41379b <_start@@Base+0xe63b>
  41374f:	cmp    eax,0x8
  413752:	je     4137bc <_start@@Base+0xe65c>
  413754:	test   eax,eax
  413756:	je     41377f <_start@@Base+0xe61f>
  413758:	jmp    413858 <_start@@Base+0xe6f8>
  41375d:	cmp    eax,0xb
  413760:	je     41381c <_start@@Base+0xe6bc>
  413766:	cmp    eax,0xb
  413769:	jl     4137fe <_start@@Base+0xe69e>
  41376f:	cmp    eax,0xff
  413774:	je     41383a <_start@@Base+0xe6da>
  41377a:	jmp    413858 <_start@@Base+0xe6f8>
  41377f:	mov    rdx,QWORD PTR [rbp-0x18]
  413783:	mov    rcx,QWORD PTR [rbp-0x10]
  413787:	mov    rax,QWORD PTR [rbp-0x8]
  41378b:	mov    rsi,rcx
  41378e:	mov    rdi,rax
  413791:	call   40631c <_start@@Base+0x11bc>
  413796:	jmp    4138d4 <_start@@Base+0xe774>
  41379b:	mov    rcx,QWORD PTR [rbp-0x28]
  41379f:	mov    rdx,QWORD PTR [rbp-0x18]
  4137a3:	mov    rsi,QWORD PTR [rbp-0x10]
  4137a7:	mov    rax,QWORD PTR [rbp-0x8]
  4137ab:	mov    rdi,rax
  4137ae:	call   412de5 <_start@@Base+0xdc85>
  4137b3:	mov    QWORD PTR [rbp-0x10],rax
  4137b7:	jmp    41389a <_start@@Base+0xe73a>
  4137bc:	mov    rcx,QWORD PTR [rbp-0x28]
  4137c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4137c4:	mov    rsi,QWORD PTR [rbp-0x10]
  4137c8:	mov    rax,QWORD PTR [rbp-0x8]
  4137cc:	mov    rdi,rax
  4137cf:	call   413367 <_start@@Base+0xe207>
  4137d4:	mov    QWORD PTR [rbp-0x10],rax
  4137d8:	jmp    41389a <_start@@Base+0xe73a>
  4137dd:	mov    rcx,QWORD PTR [rbp-0x28]
  4137e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4137e5:	mov    rsi,QWORD PTR [rbp-0x10]
  4137e9:	mov    rax,QWORD PTR [rbp-0x8]
  4137ed:	mov    rdi,rax
  4137f0:	call   413662 <_start@@Base+0xe502>
  4137f5:	mov    QWORD PTR [rbp-0x10],rax
  4137f9:	jmp    41389a <_start@@Base+0xe73a>
  4137fe:	mov    rcx,QWORD PTR [rbp-0x28]
  413802:	mov    rdx,QWORD PTR [rbp-0x18]
  413806:	mov    rsi,QWORD PTR [rbp-0x10]
  41380a:	mov    rax,QWORD PTR [rbp-0x8]
  41380e:	mov    rdi,rax
  413811:	call   413662 <_start@@Base+0xe502>
  413816:	mov    QWORD PTR [rbp-0x10],rax
  41381a:	jmp    41389a <_start@@Base+0xe73a>
  41381c:	mov    rcx,QWORD PTR [rbp-0x28]
  413820:	mov    rdx,QWORD PTR [rbp-0x18]
  413824:	mov    rsi,QWORD PTR [rbp-0x10]
  413828:	mov    rax,QWORD PTR [rbp-0x8]
  41382c:	mov    rdi,rax
  41382f:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  413834:	mov    QWORD PTR [rbp-0x10],rax
  413838:	jmp    41389a <_start@@Base+0xe73a>
  41383a:	mov    rcx,QWORD PTR [rbp-0x28]
  41383e:	mov    rdx,QWORD PTR [rbp-0x18]
  413842:	mov    rsi,QWORD PTR [rbp-0x10]
  413846:	mov    rax,QWORD PTR [rbp-0x8]
  41384a:	mov    rdi,rax
  41384d:	call   4280f9 <flatcc_json_parser_build_string@@Base>
  413852:	mov    QWORD PTR [rbp-0x10],rax
  413856:	jmp    41389a <_start@@Base+0xe73a>
  413858:	mov    rax,QWORD PTR [rbp-0x8]
  41385c:	mov    eax,DWORD PTR [rax+0x10]
  41385f:	and    eax,0x1
  413862:	test   eax,eax
  413864:	jne    413881 <_start@@Base+0xe721>
  413866:	mov    rdx,QWORD PTR [rbp-0x18]
  41386a:	mov    rsi,QWORD PTR [rbp-0x10]
  41386e:	mov    rax,QWORD PTR [rbp-0x8]
  413872:	mov    ecx,0xf
  413877:	mov    rdi,rax
  41387a:	call   42665a <flatcc_json_parser_set_error@@Base>
  41387f:	jmp    4138d4 <_start@@Base+0xe774>
  413881:	mov    rdx,QWORD PTR [rbp-0x18]
  413885:	mov    rcx,QWORD PTR [rbp-0x10]
  413889:	mov    rax,QWORD PTR [rbp-0x8]
  41388d:	mov    rsi,rcx
  413890:	mov    rdi,rax
  413893:	call   427761 <flatcc_json_parser_generic_json@@Base>
  413898:	jmp    4138d4 <_start@@Base+0xe774>
  41389a:	mov    rax,QWORD PTR [rbp-0x8]
  41389e:	mov    eax,DWORD PTR [rax+0x20]
  4138a1:	test   eax,eax
  4138a3:	je     4138ab <_start@@Base+0xe74b>
  4138a5:	mov    rax,QWORD PTR [rbp-0x10]
  4138a9:	jmp    4138d4 <_start@@Base+0xe774>
  4138ab:	mov    rax,QWORD PTR [rbp-0x28]
  4138af:	mov    eax,DWORD PTR [rax]
  4138b1:	test   eax,eax
  4138b3:	jne    4138d0 <_start@@Base+0xe770>
  4138b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4138b9:	mov    rsi,QWORD PTR [rbp-0x10]
  4138bd:	mov    rax,QWORD PTR [rbp-0x8]
  4138c1:	mov    ecx,0x21
  4138c6:	mov    rdi,rax
  4138c9:	call   42665a <flatcc_json_parser_set_error@@Base>
  4138ce:	jmp    4138d4 <_start@@Base+0xe774>
  4138d0:	mov    rax,QWORD PTR [rbp-0x10]
  4138d4:	leave  
  4138d5:	ret    
  4138d6:	push   rbp
  4138d7:	mov    rbp,rsp
  4138da:	mov    eax,edi
  4138dc:	mov    BYTE PTR [rbp-0x4],al
  4138df:	movzx  eax,BYTE PTR [rbp-0x4]
  4138e3:	cmp    eax,0x9
  4138e6:	je     413925 <_start@@Base+0xe7c5>
  4138e8:	cmp    eax,0x9
  4138eb:	jg     4138fd <_start@@Base+0xe79d>
  4138ed:	cmp    eax,0x2
  4138f0:	je     413917 <_start@@Base+0xe7b7>
  4138f2:	cmp    eax,0x8
  4138f5:	je     41391e <_start@@Base+0xe7be>
  4138f7:	test   eax,eax
  4138f9:	je     413910 <_start@@Base+0xe7b0>
  4138fb:	jmp    413941 <_start@@Base+0xe7e1>
  4138fd:	cmp    eax,0xb
  413900:	je     413933 <_start@@Base+0xe7d3>
  413902:	cmp    eax,0xb
  413905:	jl     41392c <_start@@Base+0xe7cc>
  413907:	cmp    eax,0xff
  41390c:	je     41393a <_start@@Base+0xe7da>
  41390e:	jmp    413941 <_start@@Base+0xe7e1>
  413910:	mov    eax,0x1
  413915:	jmp    413946 <_start@@Base+0xe7e6>
  413917:	mov    eax,0x1
  41391c:	jmp    413946 <_start@@Base+0xe7e6>
  41391e:	mov    eax,0x1
  413923:	jmp    413946 <_start@@Base+0xe7e6>
  413925:	mov    eax,0x1
  41392a:	jmp    413946 <_start@@Base+0xe7e6>
  41392c:	mov    eax,0x1
  413931:	jmp    413946 <_start@@Base+0xe7e6>
  413933:	mov    eax,0x1
  413938:	jmp    413946 <_start@@Base+0xe7e6>
  41393a:	mov    eax,0x1
  41393f:	jmp    413946 <_start@@Base+0xe7e6>
  413941:	mov    eax,0x0
  413946:	pop    rbp
  413947:	ret    
  413948:	push   rbp
  413949:	mov    rbp,rsp
  41394c:	sub    rsp,0x50
  413950:	mov    QWORD PTR [rbp-0x28],rdi
  413954:	mov    QWORD PTR [rbp-0x30],rsi
  413958:	mov    QWORD PTR [rbp-0x38],rdx
  41395c:	mov    QWORD PTR [rbp-0x40],rcx
  413960:	mov    QWORD PTR [rbp-0x48],r8
  413964:	mov    QWORD PTR [rbp-0x50],r9
  413968:	mov    rax,QWORD PTR [rbp-0x30]
  41396c:	mov    QWORD PTR [rbp-0x18],rax
  413970:	mov    rdx,QWORD PTR [rbp-0x38]
  413974:	mov    rax,QWORD PTR [rbp-0x30]
  413978:	mov    rsi,rdx
  41397b:	mov    rdi,rax
  41397e:	call   405779 <_start@@Base+0x619>
  413983:	mov    QWORD PTR [rbp-0x10],rax
  413987:	movabs rax,0x4e4f4e44ffffffff
  413991:	cmp    QWORD PTR [rbp-0x10],rax
  413995:	ja     413b18 <_start@@Base+0xe9b8>
  41399b:	movabs rax,0x426f6f6b46616dff
  4139a5:	cmp    QWORD PTR [rbp-0x10],rax
  4139a9:	ja     413a29 <_start@@Base+0xe8c9>
  4139ab:	mov    rax,QWORD PTR [rbp-0x10]
  4139af:	and    rax,0xffffffffff000000
  4139b5:	mov    rdx,rax
  4139b8:	movabs rax,0x42656c6c65000000
  4139c2:	cmp    rdx,rax
  4139c5:	jne    413a20 <_start@@Base+0xe8c0>
  4139c7:	mov    rax,QWORD PTR [rbp-0x30]
  4139cb:	mov    QWORD PTR [rbp-0x8],rax
  4139cf:	mov    rcx,QWORD PTR [rbp-0x50]
  4139d3:	mov    rdx,QWORD PTR [rbp-0x38]
  4139d7:	mov    rsi,QWORD PTR [rbp-0x8]
  4139db:	mov    rax,QWORD PTR [rbp-0x28]
  4139df:	mov    r8,rcx
  4139e2:	mov    ecx,0x5
  4139e7:	mov    rdi,rax
  4139ea:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  4139ef:	mov    QWORD PTR [rbp-0x30],rax
  4139f3:	mov    rax,QWORD PTR [rbp-0x30]
  4139f7:	cmp    rax,QWORD PTR [rbp-0x8]
  4139fb:	je     413a17 <_start@@Base+0xe8b7>
  4139fd:	mov    rax,QWORD PTR [rbp-0x48]
  413a01:	mov    QWORD PTR [rax],0x9
  413a08:	mov    rax,QWORD PTR [rbp-0x40]
  413a0c:	mov    DWORD PTR [rax],0x0
  413a12:	jmp    413d12 <_start@@Base+0xebb2>
  413a17:	mov    rax,QWORD PTR [rbp-0x18]
  413a1b:	jmp    413d16 <_start@@Base+0xebb6>
  413a20:	mov    rax,QWORD PTR [rbp-0x18]
  413a24:	jmp    413d16 <_start@@Base+0xebb6>
  413a29:	mov    rax,QWORD PTR [rbp-0x10]
  413a2d:	and    rax,0xffffffffff000000
  413a33:	mov    rdx,rax
  413a36:	movabs rax,0x4d754c616e000000
  413a40:	cmp    rdx,rax
  413a43:	jne    413a9e <_start@@Base+0xe93e>
  413a45:	mov    rax,QWORD PTR [rbp-0x30]
  413a49:	mov    QWORD PTR [rbp-0x8],rax
  413a4d:	mov    rcx,QWORD PTR [rbp-0x50]
  413a51:	mov    rdx,QWORD PTR [rbp-0x38]
  413a55:	mov    rsi,QWORD PTR [rbp-0x8]
  413a59:	mov    rax,QWORD PTR [rbp-0x28]
  413a5d:	mov    r8,rcx
  413a60:	mov    ecx,0x5
  413a65:	mov    rdi,rax
  413a68:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  413a6d:	mov    QWORD PTR [rbp-0x30],rax
  413a71:	mov    rax,QWORD PTR [rbp-0x30]
  413a75:	cmp    rax,QWORD PTR [rbp-0x8]
  413a79:	je     413a95 <_start@@Base+0xe935>
  413a7b:	mov    rax,QWORD PTR [rbp-0x48]
  413a7f:	mov    QWORD PTR [rax],0x2
  413a86:	mov    rax,QWORD PTR [rbp-0x40]
  413a8a:	mov    DWORD PTR [rax],0x0
  413a90:	jmp    413d12 <_start@@Base+0xebb2>
  413a95:	mov    rax,QWORD PTR [rbp-0x18]
  413a99:	jmp    413d16 <_start@@Base+0xebb6>
  413a9e:	mov    rax,QWORD PTR [rbp-0x10]
  413aa2:	mov    al,0x0
  413aa4:	mov    rdx,rax
  413aa7:	movabs rax,0x426f6f6b46616e00
  413ab1:	cmp    rdx,rax
  413ab4:	jne    413b0f <_start@@Base+0xe9af>
  413ab6:	mov    rax,QWORD PTR [rbp-0x30]
  413aba:	mov    QWORD PTR [rbp-0x8],rax
  413abe:	mov    rcx,QWORD PTR [rbp-0x50]
  413ac2:	mov    rdx,QWORD PTR [rbp-0x38]
  413ac6:	mov    rsi,QWORD PTR [rbp-0x8]
  413aca:	mov    rax,QWORD PTR [rbp-0x28]
  413ace:	mov    r8,rcx
  413ad1:	mov    ecx,0x7
  413ad6:	mov    rdi,rax
  413ad9:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  413ade:	mov    QWORD PTR [rbp-0x30],rax
  413ae2:	mov    rax,QWORD PTR [rbp-0x30]
  413ae6:	cmp    rax,QWORD PTR [rbp-0x8]
  413aea:	je     413b06 <_start@@Base+0xe9a6>
  413aec:	mov    rax,QWORD PTR [rbp-0x48]
  413af0:	mov    QWORD PTR [rax],0xa
  413af7:	mov    rax,QWORD PTR [rbp-0x40]
  413afb:	mov    DWORD PTR [rax],0x0
  413b01:	jmp    413d12 <_start@@Base+0xebb2>
  413b06:	mov    rax,QWORD PTR [rbp-0x18]
  413b0a:	jmp    413d16 <_start@@Base+0xebb6>
  413b0f:	mov    rax,QWORD PTR [rbp-0x18]
  413b13:	jmp    413d16 <_start@@Base+0xebb6>
  413b18:	movabs rax,0x4f74686571ffffff
  413b22:	cmp    QWORD PTR [rbp-0x10],rax
  413b26:	ja     413bae <_start@@Base+0xea4e>
  413b2c:	movabs rax,0xffffffff00000000
  413b36:	and    rax,QWORD PTR [rbp-0x10]
  413b3a:	mov    rdx,rax
  413b3d:	movabs rax,0x4e4f4e4500000000
  413b47:	cmp    rdx,rax
  413b4a:	jne    413ba5 <_start@@Base+0xea45>
  413b4c:	mov    rax,QWORD PTR [rbp-0x30]
  413b50:	mov    QWORD PTR [rbp-0x8],rax
  413b54:	mov    rcx,QWORD PTR [rbp-0x50]
  413b58:	mov    rdx,QWORD PTR [rbp-0x38]
  413b5c:	mov    rsi,QWORD PTR [rbp-0x8]
  413b60:	mov    rax,QWORD PTR [rbp-0x28]
  413b64:	mov    r8,rcx
  413b67:	mov    ecx,0x4
  413b6c:	mov    rdi,rax
  413b6f:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  413b74:	mov    QWORD PTR [rbp-0x30],rax
  413b78:	mov    rax,QWORD PTR [rbp-0x30]
  413b7c:	cmp    rax,QWORD PTR [rbp-0x8]
  413b80:	je     413b9c <_start@@Base+0xea3c>
  413b82:	mov    rax,QWORD PTR [rbp-0x48]
  413b86:	mov    QWORD PTR [rax],0x0
  413b8d:	mov    rax,QWORD PTR [rbp-0x40]
  413b91:	mov    DWORD PTR [rax],0x0
  413b97:	jmp    413d12 <_start@@Base+0xebb2>
  413b9c:	mov    rax,QWORD PTR [rbp-0x18]
  413ba0:	jmp    413d16 <_start@@Base+0xebb6>
  413ba5:	mov    rax,QWORD PTR [rbp-0x18]
  413ba9:	jmp    413d16 <_start@@Base+0xebb6>
  413bae:	movabs rax,0x526170756e7a656b
  413bb8:	cmp    QWORD PTR [rbp-0x10],rax
  413bbc:	ja     413c3c <_start@@Base+0xeadc>
  413bbe:	mov    rax,QWORD PTR [rbp-0x10]
  413bc2:	and    rax,0xffffffffff000000
  413bc8:	mov    rdx,rax
  413bcb:	movabs rax,0x4f74686572000000
  413bd5:	cmp    rdx,rax
  413bd8:	jne    413c33 <_start@@Base+0xead3>
  413bda:	mov    rax,QWORD PTR [rbp-0x30]
  413bde:	mov    QWORD PTR [rbp-0x8],rax
  413be2:	mov    rcx,QWORD PTR [rbp-0x50]
  413be6:	mov    rdx,QWORD PTR [rbp-0x38]
  413bea:	mov    rsi,QWORD PTR [rbp-0x8]
  413bee:	mov    rax,QWORD PTR [rbp-0x28]
  413bf2:	mov    r8,rcx
  413bf5:	mov    ecx,0x5
  413bfa:	mov    rdi,rax
  413bfd:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  413c02:	mov    QWORD PTR [rbp-0x30],rax
  413c06:	mov    rax,QWORD PTR [rbp-0x30]
  413c0a:	cmp    rax,QWORD PTR [rbp-0x8]
  413c0e:	je     413c2a <_start@@Base+0xeaca>
  413c10:	mov    rax,QWORD PTR [rbp-0x48]
  413c14:	mov    QWORD PTR [rax],0xb
  413c1b:	mov    rax,QWORD PTR [rbp-0x40]
  413c1f:	mov    DWORD PTR [rax],0x0
  413c25:	jmp    413d12 <_start@@Base+0xebb2>
  413c2a:	mov    rax,QWORD PTR [rbp-0x18]
  413c2e:	jmp    413d16 <_start@@Base+0xebb6>
  413c33:	mov    rax,QWORD PTR [rbp-0x18]
  413c37:	jmp    413d16 <_start@@Base+0xebb6>
  413c3c:	mov    rax,QWORD PTR [rbp-0x10]
  413c40:	mov    ax,0x0
  413c44:	mov    rdx,rax
  413c47:	movabs rax,0x556e757365640000
  413c51:	cmp    rdx,rax
  413c54:	jne    413ca9 <_start@@Base+0xeb49>
  413c56:	mov    rax,QWORD PTR [rbp-0x30]
  413c5a:	mov    QWORD PTR [rbp-0x8],rax
  413c5e:	mov    rcx,QWORD PTR [rbp-0x50]
  413c62:	mov    rdx,QWORD PTR [rbp-0x38]
  413c66:	mov    rsi,QWORD PTR [rbp-0x8]
  413c6a:	mov    rax,QWORD PTR [rbp-0x28]
  413c6e:	mov    r8,rcx
  413c71:	mov    ecx,0x6
  413c76:	mov    rdi,rax
  413c79:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  413c7e:	mov    QWORD PTR [rbp-0x30],rax
  413c82:	mov    rax,QWORD PTR [rbp-0x30]
  413c86:	cmp    rax,QWORD PTR [rbp-0x8]
  413c8a:	je     413ca3 <_start@@Base+0xeb43>
  413c8c:	mov    rax,QWORD PTR [rbp-0x48]
  413c90:	mov    QWORD PTR [rax],0xff
  413c97:	mov    rax,QWORD PTR [rbp-0x40]
  413c9b:	mov    DWORD PTR [rax],0x0
  413ca1:	jmp    413d12 <_start@@Base+0xebb2>
  413ca3:	mov    rax,QWORD PTR [rbp-0x18]
  413ca7:	jmp    413d16 <_start@@Base+0xebb6>
  413ca9:	movabs rax,0x526170756e7a656c
  413cb3:	cmp    QWORD PTR [rbp-0x10],rax
  413cb7:	jne    413d0c <_start@@Base+0xebac>
  413cb9:	mov    rax,QWORD PTR [rbp-0x30]
  413cbd:	mov    QWORD PTR [rbp-0x8],rax
  413cc1:	mov    rcx,QWORD PTR [rbp-0x50]
  413cc5:	mov    rdx,QWORD PTR [rbp-0x38]
  413cc9:	mov    rsi,QWORD PTR [rbp-0x8]
  413ccd:	mov    rax,QWORD PTR [rbp-0x28]
  413cd1:	mov    r8,rcx
  413cd4:	mov    ecx,0x8
  413cd9:	mov    rdi,rax
  413cdc:	call   426f38 <flatcc_json_parser_match_constant@@Base>
  413ce1:	mov    QWORD PTR [rbp-0x30],rax
  413ce5:	mov    rax,QWORD PTR [rbp-0x30]
  413ce9:	cmp    rax,QWORD PTR [rbp-0x8]
  413ced:	je     413d06 <_start@@Base+0xeba6>
  413cef:	mov    rax,QWORD PTR [rbp-0x48]
  413cf3:	mov    QWORD PTR [rax],0x8
  413cfa:	mov    rax,QWORD PTR [rbp-0x40]
  413cfe:	mov    DWORD PTR [rax],0x0
  413d04:	jmp    413d12 <_start@@Base+0xebb2>
  413d06:	mov    rax,QWORD PTR [rbp-0x18]
  413d0a:	jmp    413d16 <_start@@Base+0xebb6>
  413d0c:	mov    rax,QWORD PTR [rbp-0x18]
  413d10:	jmp    413d16 <_start@@Base+0xebb6>
  413d12:	mov    rax,QWORD PTR [rbp-0x30]
  413d16:	leave  
  413d17:	ret    
  413d18:	push   rbp
  413d19:	mov    rbp,rsp
  413d1c:	sub    rsp,0x50
  413d20:	mov    QWORD PTR [rbp-0x38],rdi
  413d24:	mov    QWORD PTR [rbp-0x40],rsi
  413d28:	mov    QWORD PTR [rbp-0x48],rdx
  413d2c:	mov    QWORD PTR [rbp-0x50],rcx
  413d30:	mov    rax,QWORD PTR fs:0x28
  413d39:	mov    QWORD PTR [rbp-0x8],rax
  413d3d:	xor    eax,eax
  413d3f:	mov    rax,QWORD PTR [rbp-0x50]
  413d43:	mov    DWORD PTR [rax],0x0
  413d49:	mov    rax,QWORD PTR [rbp-0x38]
  413d4d:	mov    rax,QWORD PTR [rax]
  413d50:	mov    esi,0xa
  413d55:	mov    rdi,rax
  413d58:	call   41d7d7 <flatcc_builder_start_table@@Base>
  413d5d:	test   eax,eax
  413d5f:	jne    4147a5 <_start@@Base+0xf645>
  413d65:	lea    rcx,[rbp-0x20]
  413d69:	mov    rdx,QWORD PTR [rbp-0x48]
  413d6d:	mov    rsi,QWORD PTR [rbp-0x40]
  413d71:	mov    rax,QWORD PTR [rbp-0x38]
  413d75:	mov    r8,rcx
  413d78:	mov    ecx,0x5
  413d7d:	mov    rdi,rax
  413d80:	call   428304 <flatcc_json_parser_prepare_unions@@Base>
  413d85:	cmp    rax,QWORD PTR [rbp-0x48]
  413d89:	je     4147a8 <_start@@Base+0xf648>
  413d8f:	lea    rcx,[rbp-0x24]
  413d93:	mov    rdx,QWORD PTR [rbp-0x48]
  413d97:	mov    rsi,QWORD PTR [rbp-0x40]
  413d9b:	mov    rax,QWORD PTR [rbp-0x38]
  413d9f:	mov    rdi,rax
  413da2:	call   405880 <_start@@Base+0x720>
  413da7:	mov    QWORD PTR [rbp-0x40],rax
  413dab:	jmp    41474c <_start@@Base+0xf5ec>
  413db0:	mov    rdx,QWORD PTR [rbp-0x48]
  413db4:	mov    rcx,QWORD PTR [rbp-0x40]
  413db8:	mov    rax,QWORD PTR [rbp-0x38]
  413dbc:	mov    rsi,rcx
  413dbf:	mov    rdi,rax
  413dc2:	call   4055e5 <_start@@Base+0x485>
  413dc7:	mov    QWORD PTR [rbp-0x40],rax
  413dcb:	mov    rdx,QWORD PTR [rbp-0x48]
  413dcf:	mov    rax,QWORD PTR [rbp-0x40]
  413dd3:	mov    rsi,rdx
  413dd6:	mov    rdi,rax
  413dd9:	call   405779 <_start@@Base+0x619>
  413dde:	mov    QWORD PTR [rbp-0x18],rax
  413de2:	movabs rax,0x6368617261637464
  413dec:	cmp    QWORD PTR [rbp-0x18],rax
  413df0:	ja     41417a <_start@@Base+0xf01a>
  413df6:	movabs rax,0x616e7461676f6e69
  413e00:	cmp    QWORD PTR [rbp-0x18],rax
  413e04:	jne    413fa6 <_start@@Base+0xee46>
  413e0a:	add    QWORD PTR [rbp-0x40],0x8
  413e0f:	mov    rdx,QWORD PTR [rbp-0x48]
  413e13:	mov    rax,QWORD PTR [rbp-0x40]
  413e17:	mov    rsi,rdx
  413e1a:	mov    rdi,rax
  413e1d:	call   405779 <_start@@Base+0x619>
  413e22:	mov    QWORD PTR [rbp-0x18],rax
  413e26:	mov    rax,QWORD PTR [rbp-0x18]
  413e2a:	mov    al,0x0
  413e2c:	mov    rdx,rax
  413e2f:	movabs rax,0x73745f7479706500
  413e39:	cmp    rdx,rax
  413e3c:	jne    413ed4 <_start@@Base+0xed74>
  413e42:	mov    rax,QWORD PTR [rbp-0x40]
  413e46:	mov    QWORD PTR [rbp-0x10],rax
  413e4a:	mov    rdx,QWORD PTR [rbp-0x48]
  413e4e:	mov    rsi,QWORD PTR [rbp-0x10]
  413e52:	mov    rax,QWORD PTR [rbp-0x38]
  413e56:	mov    ecx,0x7
  413e5b:	mov    rdi,rax
  413e5e:	call   405c76 <_start@@Base+0xb16>
  413e63:	mov    QWORD PTR [rbp-0x40],rax
  413e67:	mov    rax,QWORD PTR [rbp-0x10]
  413e6b:	cmp    rax,QWORD PTR [rbp-0x40]
  413e6f:	je     413eb4 <_start@@Base+0xed54>
  413e71:	mov    rdi,QWORD PTR [rbp-0x20]
  413e75:	mov    rdx,QWORD PTR [rbp-0x48]
  413e79:	mov    rsi,QWORD PTR [rbp-0x40]
  413e7d:	mov    rax,QWORD PTR [rbp-0x38]
  413e81:	lea    rcx,[rip+0xfffffffffffff889]        # 413711 <_start@@Base+0xe5b1>
  413e88:	push   rcx
  413e89:	lea    rcx,[rip+0x32ad0]        # 446960 <__data_start@@Base+0x8a0>
  413e90:	push   rcx
  413e91:	mov    r9,rdi
  413e94:	mov    r8d,0x3
  413e9a:	mov    ecx,0x1
  413e9f:	mov    rdi,rax
  413ea2:	call   4285f8 <flatcc_json_parser_union_type@@Base>
  413ea7:	add    rsp,0x10
  413eab:	mov    QWORD PTR [rbp-0x40],rax
  413eaf:	jmp    414730 <_start@@Base+0xf5d0>
  413eb4:	mov    rdx,QWORD PTR [rbp-0x48]
  413eb8:	mov    rcx,QWORD PTR [rbp-0x40]
  413ebc:	mov    rax,QWORD PTR [rbp-0x38]
  413ec0:	mov    rsi,rcx
  413ec3:	mov    rdi,rax
  413ec6:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413ecb:	mov    QWORD PTR [rbp-0x40],rax
  413ecf:	jmp    414730 <_start@@Base+0xf5d0>
  413ed4:	movabs rax,0xffff000000000000
  413ede:	and    rax,QWORD PTR [rbp-0x18]
  413ee2:	mov    rdx,rax
  413ee5:	movabs rax,0x7374000000000000
  413eef:	cmp    rdx,rax
  413ef2:	jne    413f86 <_start@@Base+0xee26>
  413ef8:	mov    rax,QWORD PTR [rbp-0x40]
  413efc:	mov    QWORD PTR [rbp-0x10],rax
  413f00:	mov    rdx,QWORD PTR [rbp-0x48]
  413f04:	mov    rsi,QWORD PTR [rbp-0x10]
  413f08:	mov    rax,QWORD PTR [rbp-0x38]
  413f0c:	mov    ecx,0x2
  413f11:	mov    rdi,rax
  413f14:	call   405c76 <_start@@Base+0xb16>
  413f19:	mov    QWORD PTR [rbp-0x40],rax
  413f1d:	mov    rax,QWORD PTR [rbp-0x10]
  413f21:	cmp    rax,QWORD PTR [rbp-0x40]
  413f25:	je     413f66 <_start@@Base+0xee06>
  413f27:	mov    rdi,QWORD PTR [rbp-0x20]
  413f2b:	mov    rdx,QWORD PTR [rbp-0x48]
  413f2f:	mov    rsi,QWORD PTR [rbp-0x40]
  413f33:	mov    rax,QWORD PTR [rbp-0x38]
  413f37:	sub    rsp,0x8
  413f3b:	lea    rcx,[rip+0xfffffffffffff7cf]        # 413711 <_start@@Base+0xe5b1>
  413f42:	push   rcx
  413f43:	mov    r9,rdi
  413f46:	mov    r8d,0x3
  413f4c:	mov    ecx,0x1
  413f51:	mov    rdi,rax
  413f54:	call   42841f <flatcc_json_parser_union@@Base>
  413f59:	add    rsp,0x10
  413f5d:	mov    QWORD PTR [rbp-0x40],rax
  413f61:	jmp    414730 <_start@@Base+0xf5d0>
  413f66:	mov    rdx,QWORD PTR [rbp-0x48]
  413f6a:	mov    rcx,QWORD PTR [rbp-0x40]
  413f6e:	mov    rax,QWORD PTR [rbp-0x38]
  413f72:	mov    rsi,rcx
  413f75:	mov    rdi,rax
  413f78:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413f7d:	mov    QWORD PTR [rbp-0x40],rax
  413f81:	jmp    414730 <_start@@Base+0xf5d0>
  413f86:	mov    rdx,QWORD PTR [rbp-0x48]
  413f8a:	mov    rcx,QWORD PTR [rbp-0x40]
  413f8e:	mov    rax,QWORD PTR [rbp-0x38]
  413f92:	mov    rsi,rcx
  413f95:	mov    rdi,rax
  413f98:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  413f9d:	mov    QWORD PTR [rbp-0x40],rax
  413fa1:	jmp    414730 <_start@@Base+0xf5d0>
  413fa6:	movabs rax,0x63616d656f5f7479
  413fb0:	cmp    QWORD PTR [rbp-0x18],rax
  413fb4:	jne    4140ac <_start@@Base+0xef4c>
  413fba:	add    QWORD PTR [rbp-0x40],0x8
  413fbf:	mov    rdx,QWORD PTR [rbp-0x48]
  413fc3:	mov    rax,QWORD PTR [rbp-0x40]
  413fc7:	mov    rsi,rdx
  413fca:	mov    rdi,rax
  413fcd:	call   405779 <_start@@Base+0x619>
  413fd2:	mov    QWORD PTR [rbp-0x18],rax
  413fd6:	movabs rax,0xffff000000000000
  413fe0:	and    rax,QWORD PTR [rbp-0x18]
  413fe4:	mov    rdx,rax
  413fe7:	movabs rax,0x7065000000000000
  413ff1:	cmp    rdx,rax
  413ff4:	jne    41408c <_start@@Base+0xef2c>
  413ffa:	mov    rax,QWORD PTR [rbp-0x40]
  413ffe:	mov    QWORD PTR [rbp-0x10],rax
  414002:	mov    rdx,QWORD PTR [rbp-0x48]
  414006:	mov    rsi,QWORD PTR [rbp-0x10]
  41400a:	mov    rax,QWORD PTR [rbp-0x38]
  41400e:	mov    ecx,0x2
  414013:	mov    rdi,rax
  414016:	call   405c76 <_start@@Base+0xb16>
  41401b:	mov    QWORD PTR [rbp-0x40],rax
  41401f:	mov    rax,QWORD PTR [rbp-0x10]
  414023:	cmp    rax,QWORD PTR [rbp-0x40]
  414027:	je     41406c <_start@@Base+0xef0c>
  414029:	mov    rdi,QWORD PTR [rbp-0x20]
  41402d:	mov    rdx,QWORD PTR [rbp-0x48]
  414031:	mov    rsi,QWORD PTR [rbp-0x40]
  414035:	mov    rax,QWORD PTR [rbp-0x38]
  414039:	lea    rcx,[rip+0xfffffffffffff6d1]        # 413711 <_start@@Base+0xe5b1>
  414040:	push   rcx
  414041:	lea    rcx,[rip+0x32938]        # 446980 <__data_start@@Base+0x8c0>
  414048:	push   rcx
  414049:	mov    r9,rdi
  41404c:	mov    r8d,0x7
  414052:	mov    ecx,0x3
  414057:	mov    rdi,rax
  41405a:	call   4285f8 <flatcc_json_parser_union_type@@Base>
  41405f:	add    rsp,0x10
  414063:	mov    QWORD PTR [rbp-0x40],rax
  414067:	jmp    414730 <_start@@Base+0xf5d0>
  41406c:	mov    rdx,QWORD PTR [rbp-0x48]
  414070:	mov    rcx,QWORD PTR [rbp-0x40]
  414074:	mov    rax,QWORD PTR [rbp-0x38]
  414078:	mov    rsi,rcx
  41407b:	mov    rdi,rax
  41407e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414083:	mov    QWORD PTR [rbp-0x40],rax
  414087:	jmp    414730 <_start@@Base+0xf5d0>
  41408c:	mov    rdx,QWORD PTR [rbp-0x48]
  414090:	mov    rcx,QWORD PTR [rbp-0x40]
  414094:	mov    rax,QWORD PTR [rbp-0x38]
  414098:	mov    rsi,rcx
  41409b:	mov    rdi,rax
  41409e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4140a3:	mov    QWORD PTR [rbp-0x40],rax
  4140a7:	jmp    414730 <_start@@Base+0xf5d0>
  4140ac:	mov    rax,QWORD PTR [rbp-0x18]
  4140b0:	and    rax,0xffffffffff000000
  4140b6:	mov    rdx,rax
  4140b9:	movabs rax,0x63616d656f000000
  4140c3:	cmp    rdx,rax
  4140c6:	jne    41415a <_start@@Base+0xeffa>
  4140cc:	mov    rax,QWORD PTR [rbp-0x40]
  4140d0:	mov    QWORD PTR [rbp-0x10],rax
  4140d4:	mov    rdx,QWORD PTR [rbp-0x48]
  4140d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4140dc:	mov    rax,QWORD PTR [rbp-0x38]
  4140e0:	mov    ecx,0x5
  4140e5:	mov    rdi,rax
  4140e8:	call   405c76 <_start@@Base+0xb16>
  4140ed:	mov    QWORD PTR [rbp-0x40],rax
  4140f1:	mov    rax,QWORD PTR [rbp-0x10]
  4140f5:	cmp    rax,QWORD PTR [rbp-0x40]
  4140f9:	je     41413a <_start@@Base+0xefda>
  4140fb:	mov    rdi,QWORD PTR [rbp-0x20]
  4140ff:	mov    rdx,QWORD PTR [rbp-0x48]
  414103:	mov    rsi,QWORD PTR [rbp-0x40]
  414107:	mov    rax,QWORD PTR [rbp-0x38]
  41410b:	sub    rsp,0x8
  41410f:	lea    rcx,[rip+0xfffffffffffff5fb]        # 413711 <_start@@Base+0xe5b1>
  414116:	push   rcx
  414117:	mov    r9,rdi
  41411a:	mov    r8d,0x7
  414120:	mov    ecx,0x3
  414125:	mov    rdi,rax
  414128:	call   42841f <flatcc_json_parser_union@@Base>
  41412d:	add    rsp,0x10
  414131:	mov    QWORD PTR [rbp-0x40],rax
  414135:	jmp    414730 <_start@@Base+0xf5d0>
  41413a:	mov    rdx,QWORD PTR [rbp-0x48]
  41413e:	mov    rcx,QWORD PTR [rbp-0x40]
  414142:	mov    rax,QWORD PTR [rbp-0x38]
  414146:	mov    rsi,rcx
  414149:	mov    rdi,rax
  41414c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414151:	mov    QWORD PTR [rbp-0x40],rax
  414155:	jmp    414730 <_start@@Base+0xf5d0>
  41415a:	mov    rdx,QWORD PTR [rbp-0x48]
  41415e:	mov    rcx,QWORD PTR [rbp-0x40]
  414162:	mov    rax,QWORD PTR [rbp-0x38]
  414166:	mov    rsi,rcx
  414169:	mov    rdi,rax
  41416c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414171:	mov    QWORD PTR [rbp-0x40],rax
  414175:	jmp    414730 <_start@@Base+0xf5d0>
  41417a:	movabs rax,0x6d61696e5f636860
  414184:	cmp    QWORD PTR [rbp-0x18],rax
  414188:	ja     41436a <_start@@Base+0xf20a>
  41418e:	movabs rax,0x6368617261637465
  414198:	cmp    QWORD PTR [rbp-0x18],rax
  41419c:	jne    41434a <_start@@Base+0xf1ea>
  4141a2:	add    QWORD PTR [rbp-0x40],0x8
  4141a7:	mov    rdx,QWORD PTR [rbp-0x48]
  4141ab:	mov    rax,QWORD PTR [rbp-0x40]
  4141af:	mov    rsi,rdx
  4141b2:	mov    rdi,rax
  4141b5:	call   405779 <_start@@Base+0x619>
  4141ba:	mov    QWORD PTR [rbp-0x18],rax
  4141be:	mov    rax,QWORD PTR [rbp-0x18]
  4141c2:	mov    al,0x0
  4141c4:	mov    rdx,rax
  4141c7:	movabs rax,0x72735f7479706500
  4141d1:	cmp    rdx,rax
  4141d4:	jne    414278 <_start@@Base+0xf118>
  4141da:	mov    rax,QWORD PTR [rbp-0x40]
  4141de:	mov    QWORD PTR [rbp-0x10],rax
  4141e2:	mov    rdx,QWORD PTR [rbp-0x48]
  4141e6:	mov    rsi,QWORD PTR [rbp-0x10]
  4141ea:	mov    rax,QWORD PTR [rbp-0x38]
  4141ee:	mov    ecx,0x7
  4141f3:	mov    rdi,rax
  4141f6:	call   405c76 <_start@@Base+0xb16>
  4141fb:	mov    QWORD PTR [rbp-0x40],rax
  4141ff:	mov    rax,QWORD PTR [rbp-0x10]
  414203:	cmp    rax,QWORD PTR [rbp-0x40]
  414207:	je     414258 <_start@@Base+0xf0f8>
  414209:	mov    rdi,QWORD PTR [rbp-0x20]
  41420d:	mov    rdx,QWORD PTR [rbp-0x48]
  414211:	mov    rsi,QWORD PTR [rbp-0x40]
  414215:	mov    rax,QWORD PTR [rbp-0x38]
  414219:	sub    rsp,0x8
  41421d:	lea    rcx,[rip+0xfffffffffffff6b2]        # 4138d6 <_start@@Base+0xe776>
  414224:	push   rcx
  414225:	lea    rcx,[rip+0xfffffffffffff4e5]        # 413711 <_start@@Base+0xe5b1>
  41422c:	push   rcx
  41422d:	lea    rcx,[rip+0x3276c]        # 4469a0 <__data_start@@Base+0x8e0>
  414234:	push   rcx
  414235:	mov    r9,rdi
  414238:	mov    r8d,0x9
  41423e:	mov    ecx,0x4
  414243:	mov    rdi,rax
  414246:	call   428bbc <flatcc_json_parser_union_type_vector@@Base>
  41424b:	add    rsp,0x20
  41424f:	mov    QWORD PTR [rbp-0x40],rax
  414253:	jmp    414730 <_start@@Base+0xf5d0>
  414258:	mov    rdx,QWORD PTR [rbp-0x48]
  41425c:	mov    rcx,QWORD PTR [rbp-0x40]
  414260:	mov    rax,QWORD PTR [rbp-0x38]
  414264:	mov    rsi,rcx
  414267:	mov    rdi,rax
  41426a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41426f:	mov    QWORD PTR [rbp-0x40],rax
  414273:	jmp    414730 <_start@@Base+0xf5d0>
  414278:	movabs rax,0xffff000000000000
  414282:	and    rax,QWORD PTR [rbp-0x18]
  414286:	mov    rdx,rax
  414289:	movabs rax,0x7273000000000000
  414293:	cmp    rdx,rax
  414296:	jne    41432a <_start@@Base+0xf1ca>
  41429c:	mov    rax,QWORD PTR [rbp-0x40]
  4142a0:	mov    QWORD PTR [rbp-0x10],rax
  4142a4:	mov    rdx,QWORD PTR [rbp-0x48]
  4142a8:	mov    rsi,QWORD PTR [rbp-0x10]
  4142ac:	mov    rax,QWORD PTR [rbp-0x38]
  4142b0:	mov    ecx,0x2
  4142b5:	mov    rdi,rax
  4142b8:	call   405c76 <_start@@Base+0xb16>
  4142bd:	mov    QWORD PTR [rbp-0x40],rax
  4142c1:	mov    rax,QWORD PTR [rbp-0x10]
  4142c5:	cmp    rax,QWORD PTR [rbp-0x40]
  4142c9:	je     41430a <_start@@Base+0xf1aa>
  4142cb:	mov    rdi,QWORD PTR [rbp-0x20]
  4142cf:	mov    rdx,QWORD PTR [rbp-0x48]
  4142d3:	mov    rsi,QWORD PTR [rbp-0x40]
  4142d7:	mov    rax,QWORD PTR [rbp-0x38]
  4142db:	sub    rsp,0x8
  4142df:	lea    rcx,[rip+0xfffffffffffff42b]        # 413711 <_start@@Base+0xe5b1>
  4142e6:	push   rcx
  4142e7:	mov    r9,rdi
  4142ea:	mov    r8d,0x9
  4142f0:	mov    ecx,0x4
  4142f5:	mov    rdi,rax
  4142f8:	call   428a74 <flatcc_json_parser_union_vector@@Base>
  4142fd:	add    rsp,0x10
  414301:	mov    QWORD PTR [rbp-0x40],rax
  414305:	jmp    414730 <_start@@Base+0xf5d0>
  41430a:	mov    rdx,QWORD PTR [rbp-0x48]
  41430e:	mov    rcx,QWORD PTR [rbp-0x40]
  414312:	mov    rax,QWORD PTR [rbp-0x38]
  414316:	mov    rsi,rcx
  414319:	mov    rdi,rax
  41431c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414321:	mov    QWORD PTR [rbp-0x40],rax
  414325:	jmp    414730 <_start@@Base+0xf5d0>
  41432a:	mov    rdx,QWORD PTR [rbp-0x48]
  41432e:	mov    rcx,QWORD PTR [rbp-0x40]
  414332:	mov    rax,QWORD PTR [rbp-0x38]
  414336:	mov    rsi,rcx
  414339:	mov    rdi,rax
  41433c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414341:	mov    QWORD PTR [rbp-0x40],rax
  414345:	jmp    414730 <_start@@Base+0xf5d0>
  41434a:	mov    rdx,QWORD PTR [rbp-0x48]
  41434e:	mov    rcx,QWORD PTR [rbp-0x40]
  414352:	mov    rax,QWORD PTR [rbp-0x38]
  414356:	mov    rsi,rcx
  414359:	mov    rdi,rax
  41435c:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414361:	mov    QWORD PTR [rbp-0x40],rax
  414365:	jmp    414730 <_start@@Base+0xf5d0>
  41436a:	movabs rax,0x6d61696e5f636861
  414374:	cmp    QWORD PTR [rbp-0x18],rax
  414378:	jne    41456c <_start@@Base+0xf40c>
  41437e:	add    QWORD PTR [rbp-0x40],0x8
  414383:	mov    rdx,QWORD PTR [rbp-0x48]
  414387:	mov    rax,QWORD PTR [rbp-0x40]
  41438b:	mov    rsi,rdx
  41438e:	mov    rdi,rax
  414391:	call   405779 <_start@@Base+0x619>
  414396:	mov    QWORD PTR [rbp-0x18],rax
  41439a:	movabs rax,0x7261637465725f74
  4143a4:	cmp    QWORD PTR [rbp-0x18],rax
  4143a8:	jne    4144a0 <_start@@Base+0xf340>
  4143ae:	add    QWORD PTR [rbp-0x40],0x8
  4143b3:	mov    rdx,QWORD PTR [rbp-0x48]
  4143b7:	mov    rax,QWORD PTR [rbp-0x40]
  4143bb:	mov    rsi,rdx
  4143be:	mov    rdi,rax
  4143c1:	call   405779 <_start@@Base+0x619>
  4143c6:	mov    QWORD PTR [rbp-0x18],rax
  4143ca:	movabs rax,0xffffff0000000000
  4143d4:	and    rax,QWORD PTR [rbp-0x18]
  4143d8:	mov    rdx,rax
  4143db:	movabs rax,0x7970650000000000
  4143e5:	cmp    rdx,rax
  4143e8:	jne    414480 <_start@@Base+0xf320>
  4143ee:	mov    rax,QWORD PTR [rbp-0x40]
  4143f2:	mov    QWORD PTR [rbp-0x10],rax
  4143f6:	mov    rdx,QWORD PTR [rbp-0x48]
  4143fa:	mov    rsi,QWORD PTR [rbp-0x10]
  4143fe:	mov    rax,QWORD PTR [rbp-0x38]
  414402:	mov    ecx,0x3
  414407:	mov    rdi,rax
  41440a:	call   405c76 <_start@@Base+0xb16>
  41440f:	mov    QWORD PTR [rbp-0x40],rax
  414413:	mov    rax,QWORD PTR [rbp-0x10]
  414417:	cmp    rax,QWORD PTR [rbp-0x40]
  41441b:	je     414460 <_start@@Base+0xf300>
  41441d:	mov    rdi,QWORD PTR [rbp-0x20]
  414421:	mov    rdx,QWORD PTR [rbp-0x48]
  414425:	mov    rsi,QWORD PTR [rbp-0x40]
  414429:	mov    rax,QWORD PTR [rbp-0x38]
  41442d:	lea    rcx,[rip+0xfffffffffffff2dd]        # 413711 <_start@@Base+0xe5b1>
  414434:	push   rcx
  414435:	lea    rcx,[rip+0x32584]        # 4469c0 <__data_start@@Base+0x900>
  41443c:	push   rcx
  41443d:	mov    r9,rdi
  414440:	mov    r8d,0x1
  414446:	mov    ecx,0x0
  41444b:	mov    rdi,rax
  41444e:	call   4285f8 <flatcc_json_parser_union_type@@Base>
  414453:	add    rsp,0x10
  414457:	mov    QWORD PTR [rbp-0x40],rax
  41445b:	jmp    414730 <_start@@Base+0xf5d0>
  414460:	mov    rdx,QWORD PTR [rbp-0x48]
  414464:	mov    rcx,QWORD PTR [rbp-0x40]
  414468:	mov    rax,QWORD PTR [rbp-0x38]
  41446c:	mov    rsi,rcx
  41446f:	mov    rdi,rax
  414472:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414477:	mov    QWORD PTR [rbp-0x40],rax
  41447b:	jmp    414730 <_start@@Base+0xf5d0>
  414480:	mov    rdx,QWORD PTR [rbp-0x48]
  414484:	mov    rcx,QWORD PTR [rbp-0x40]
  414488:	mov    rax,QWORD PTR [rbp-0x38]
  41448c:	mov    rsi,rcx
  41448f:	mov    rdi,rax
  414492:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414497:	mov    QWORD PTR [rbp-0x40],rax
  41449b:	jmp    414730 <_start@@Base+0xf5d0>
  4144a0:	mov    rax,QWORD PTR [rbp-0x18]
  4144a4:	mov    ax,0x0
  4144a8:	mov    rdx,rax
  4144ab:	movabs rax,0x7261637465720000
  4144b5:	cmp    rdx,rax
  4144b8:	jne    41454c <_start@@Base+0xf3ec>
  4144be:	mov    rax,QWORD PTR [rbp-0x40]
  4144c2:	mov    QWORD PTR [rbp-0x10],rax
  4144c6:	mov    rdx,QWORD PTR [rbp-0x48]
  4144ca:	mov    rsi,QWORD PTR [rbp-0x10]
  4144ce:	mov    rax,QWORD PTR [rbp-0x38]
  4144d2:	mov    ecx,0x6
  4144d7:	mov    rdi,rax
  4144da:	call   405c76 <_start@@Base+0xb16>
  4144df:	mov    QWORD PTR [rbp-0x40],rax
  4144e3:	mov    rax,QWORD PTR [rbp-0x10]
  4144e7:	cmp    rax,QWORD PTR [rbp-0x40]
  4144eb:	je     41452c <_start@@Base+0xf3cc>
  4144ed:	mov    rdi,QWORD PTR [rbp-0x20]
  4144f1:	mov    rdx,QWORD PTR [rbp-0x48]
  4144f5:	mov    rsi,QWORD PTR [rbp-0x40]
  4144f9:	mov    rax,QWORD PTR [rbp-0x38]
  4144fd:	sub    rsp,0x8
  414501:	lea    rcx,[rip+0xfffffffffffff209]        # 413711 <_start@@Base+0xe5b1>
  414508:	push   rcx
  414509:	mov    r9,rdi
  41450c:	mov    r8d,0x1
  414512:	mov    ecx,0x0
  414517:	mov    rdi,rax
  41451a:	call   42841f <flatcc_json_parser_union@@Base>
  41451f:	add    rsp,0x10
  414523:	mov    QWORD PTR [rbp-0x40],rax
  414527:	jmp    414730 <_start@@Base+0xf5d0>
  41452c:	mov    rdx,QWORD PTR [rbp-0x48]
  414530:	mov    rcx,QWORD PTR [rbp-0x40]
  414534:	mov    rax,QWORD PTR [rbp-0x38]
  414538:	mov    rsi,rcx
  41453b:	mov    rdi,rax
  41453e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414543:	mov    QWORD PTR [rbp-0x40],rax
  414547:	jmp    414730 <_start@@Base+0xf5d0>
  41454c:	mov    rdx,QWORD PTR [rbp-0x48]
  414550:	mov    rcx,QWORD PTR [rbp-0x40]
  414554:	mov    rax,QWORD PTR [rbp-0x38]
  414558:	mov    rsi,rcx
  41455b:	mov    rdi,rax
  41455e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414563:	mov    QWORD PTR [rbp-0x40],rax
  414567:	jmp    414730 <_start@@Base+0xf5d0>
  41456c:	movabs rax,0x736964655f6b6963
  414576:	cmp    QWORD PTR [rbp-0x18],rax
  41457a:	jne    414715 <_start@@Base+0xf5b5>
  414580:	add    QWORD PTR [rbp-0x40],0x8
  414585:	mov    rdx,QWORD PTR [rbp-0x48]
  414589:	mov    rax,QWORD PTR [rbp-0x40]
  41458d:	mov    rsi,rdx
  414590:	mov    rdi,rax
  414593:	call   405779 <_start@@Base+0x619>
  414598:	mov    QWORD PTR [rbp-0x18],rax
  41459c:	mov    rax,QWORD PTR [rbp-0x18]
  4145a0:	mov    ax,0x0
  4145a4:	mov    rdx,rax
  4145a7:	movabs rax,0x6b5f747970650000
  4145b1:	cmp    rdx,rax
  4145b4:	jne    41464c <_start@@Base+0xf4ec>
  4145ba:	mov    rax,QWORD PTR [rbp-0x40]
  4145be:	mov    QWORD PTR [rbp-0x10],rax
  4145c2:	mov    rdx,QWORD PTR [rbp-0x48]
  4145c6:	mov    rsi,QWORD PTR [rbp-0x10]
  4145ca:	mov    rax,QWORD PTR [rbp-0x38]
  4145ce:	mov    ecx,0x6
  4145d3:	mov    rdi,rax
  4145d6:	call   405c76 <_start@@Base+0xb16>
  4145db:	mov    QWORD PTR [rbp-0x40],rax
  4145df:	mov    rax,QWORD PTR [rbp-0x10]
  4145e3:	cmp    rax,QWORD PTR [rbp-0x40]
  4145e7:	je     41462c <_start@@Base+0xf4cc>
  4145e9:	mov    rdi,QWORD PTR [rbp-0x20]
  4145ed:	mov    rdx,QWORD PTR [rbp-0x48]
  4145f1:	mov    rsi,QWORD PTR [rbp-0x40]
  4145f5:	mov    rax,QWORD PTR [rbp-0x38]
  4145f9:	lea    rcx,[rip+0xfffffffffffff111]        # 413711 <_start@@Base+0xe5b1>
  414600:	push   rcx
  414601:	lea    rcx,[rip+0x323d8]        # 4469e0 <__data_start@@Base+0x920>
  414608:	push   rcx
  414609:	mov    r9,rdi
  41460c:	mov    r8d,0x5
  414612:	mov    ecx,0x2
  414617:	mov    rdi,rax
  41461a:	call   4285f8 <flatcc_json_parser_union_type@@Base>
  41461f:	add    rsp,0x10
  414623:	mov    QWORD PTR [rbp-0x40],rax
  414627:	jmp    414730 <_start@@Base+0xf5d0>
  41462c:	mov    rdx,QWORD PTR [rbp-0x48]
  414630:	mov    rcx,QWORD PTR [rbp-0x40]
  414634:	mov    rax,QWORD PTR [rbp-0x38]
  414638:	mov    rsi,rcx
  41463b:	mov    rdi,rax
  41463e:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  414643:	mov    QWORD PTR [rbp-0x40],rax
  414647:	jmp    414730 <_start@@Base+0xf5d0>
  41464c:	movabs rax,0xff00000000000000
  414656:	and    rax,QWORD PTR [rbp-0x18]
  41465a:	mov    rdx,rax
  41465d:	movabs rax,0x6b00000000000000
  414667:	cmp    rdx,rax
  41466a:	jne    4146f8 <_start@@Base+0xf598>
  414670:	mov    rax,QWORD PTR [rbp-0x40]
  414674:	mov    QWORD PTR [rbp-0x10],rax
  414678:	mov    rdx,QWORD PTR [rbp-0x48]
  41467c:	mov    rsi,QWORD PTR [rbp-0x10]
  414680:	mov    rax,QWORD PTR [rbp-0x38]
  414684:	mov    ecx,0x1
  414689:	mov    rdi,rax
  41468c:	call   405c76 <_start@@Base+0xb16>
  414691:	mov    QWORD PTR [rbp-0x40],rax
  414695:	mov    rax,QWORD PTR [rbp-0x10]
  414699:	cmp    rax,QWORD PTR [rbp-0x40]
  41469d:	je     4146db <_start@@Base+0xf57b>
  41469f:	mov    rdi,QWORD PTR [rbp-0x20]
  4146a3:	mov    rdx,QWORD PTR [rbp-0x48]
  4146a7:	mov    rsi,QWORD PTR [rbp-0x40]
  4146ab:	mov    rax,QWORD PTR [rbp-0x38]
  4146af:	sub    rsp,0x8
  4146b3:	lea    rcx,[rip+0xfffffffffffff057]        # 413711 <_start@@Base+0xe5b1>
  4146ba:	push   rcx
  4146bb:	mov    r9,rdi
  4146be:	mov    r8d,0x5
  4146c4:	mov    ecx,0x2
  4146c9:	mov    rdi,rax
  4146cc:	call   42841f <flatcc_json_parser_union@@Base>
  4146d1:	add    rsp,0x10
  4146d5:	mov    QWORD PTR [rbp-0x40],rax
  4146d9:	jmp    414730 <_start@@Base+0xf5d0>
  4146db:	mov    rdx,QWORD PTR [rbp-0x48]
  4146df:	mov    rcx,QWORD PTR [rbp-0x40]
  4146e3:	mov    rax,QWORD PTR [rbp-0x38]
  4146e7:	mov    rsi,rcx
  4146ea:	mov    rdi,rax
  4146ed:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  4146f2:	mov    QWORD PTR [rbp-0x40],rax
  4146f6:	jmp    414730 <_start@@Base+0xf5d0>
  4146f8:	mov    rdx,QWORD PTR [rbp-0x48]
  4146fc:	mov    rcx,QWORD PTR [rbp-0x40]
  414700:	mov    rax,QWORD PTR [rbp-0x38]
  414704:	mov    rsi,rcx
  414707:	mov    rdi,rax
  41470a:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41470f:	mov    QWORD PTR [rbp-0x40],rax
  414713:	jmp    414730 <_start@@Base+0xf5d0>
  414715:	mov    rdx,QWORD PTR [rbp-0x48]
  414719:	mov    rcx,QWORD PTR [rbp-0x40]
  41471d:	mov    rax,QWORD PTR [rbp-0x38]
  414721:	mov    rsi,rcx
  414724:	mov    rdi,rax
  414727:	call   427153 <flatcc_json_parser_unmatched_symbol@@Base>
  41472c:	mov    QWORD PTR [rbp-0x40],rax
  414730:	lea    rcx,[rbp-0x24]
  414734:	mov    rdx,QWORD PTR [rbp-0x48]
  414738:	mov    rsi,QWORD PTR [rbp-0x40]
  41473c:	mov    rax,QWORD PTR [rbp-0x38]
  414740:	mov    rdi,rax
  414743:	call   40593d <_start@@Base+0x7dd>
  414748:	mov    QWORD PTR [rbp-0x40],rax
  41474c:	mov    eax,DWORD PTR [rbp-0x24]
  41474f:	test   eax,eax
  414751:	jne    413db0 <_start@@Base+0xec50>
  414757:	mov    rax,QWORD PTR [rbp-0x38]
  41475b:	mov    eax,DWORD PTR [rax+0x20]
  41475e:	test   eax,eax
  414760:	jne    4147ab <_start@@Base+0xf64b>
  414762:	mov    rcx,QWORD PTR [rbp-0x20]
  414766:	mov    rdx,QWORD PTR [rbp-0x48]
  41476a:	mov    rsi,QWORD PTR [rbp-0x40]
  41476e:	mov    rax,QWORD PTR [rbp-0x38]
  414772:	mov    rdi,rax
  414775:	call   4283a7 <flatcc_json_parser_finalize_unions@@Base>
  41477a:	mov    QWORD PTR [rbp-0x40],rax
  41477e:	mov    rax,QWORD PTR [rbp-0x38]
  414782:	mov    rax,QWORD PTR [rax]
  414785:	mov    rdi,rax
  414788:	call   41e2d9 <flatcc_builder_end_table@@Base>
  41478d:	mov    edx,eax
  41478f:	mov    rax,QWORD PTR [rbp-0x50]
  414793:	mov    DWORD PTR [rax],edx
  414795:	mov    rax,QWORD PTR [rbp-0x50]
  414799:	mov    eax,DWORD PTR [rax]
  41479b:	test   eax,eax
  41479d:	je     4147ae <_start@@Base+0xf64e>
  41479f:	mov    rax,QWORD PTR [rbp-0x40]
  4147a3:	jmp    4147c8 <_start@@Base+0xf668>
  4147a5:	nop
  4147a6:	jmp    4147af <_start@@Base+0xf64f>
  4147a8:	nop
  4147a9:	jmp    4147af <_start@@Base+0xf64f>
  4147ab:	nop
  4147ac:	jmp    4147af <_start@@Base+0xf64f>
  4147ae:	nop
  4147af:	mov    rdx,QWORD PTR [rbp-0x48]
  4147b3:	mov    rsi,QWORD PTR [rbp-0x40]
  4147b7:	mov    rax,QWORD PTR [rbp-0x38]
  4147bb:	mov    ecx,0x21
  4147c0:	mov    rdi,rax
  4147c3:	call   42665a <flatcc_json_parser_set_error@@Base>
  4147c8:	mov    rdi,QWORD PTR [rbp-0x8]
  4147cc:	xor    rdi,QWORD PTR fs:0x28
  4147d5:	je     4147dc <_start@@Base+0xf67c>
  4147d7:	call   405070 <__stack_chk_fail@plt>
  4147dc:	leave  
  4147dd:	ret    
  4147de:	push   rbp
  4147df:	mov    rbp,rsp
  4147e2:	mov    QWORD PTR [rbp-0x8],rdi
  4147e6:	mov    QWORD PTR [rbp-0x10],rsi
  4147ea:	mov    QWORD PTR [rbp-0x18],rdx
  4147ee:	mov    QWORD PTR [rbp-0x20],rcx
  4147f2:	mov    QWORD PTR [rbp-0x28],r8
  4147f6:	mov    QWORD PTR [rbp-0x30],r9
  4147fa:	mov    rax,QWORD PTR [rbp-0x10]
  4147fe:	pop    rbp
  4147ff:	ret    
  414800:	push   rbp
  414801:	mov    rbp,rsp
  414804:	sub    rsp,0x50
  414808:	mov    QWORD PTR [rbp-0x28],rdi
  41480c:	mov    QWORD PTR [rbp-0x30],rsi
  414810:	mov    QWORD PTR [rbp-0x38],rdx
  414814:	mov    QWORD PTR [rbp-0x40],rcx
  414818:	mov    QWORD PTR [rbp-0x48],r8
  41481c:	mov    QWORD PTR [rbp-0x50],r9
  414820:	mov    rax,QWORD PTR [rbp-0x30]
  414824:	mov    QWORD PTR [rbp-0x18],rax
  414828:	mov    rdx,QWORD PTR [rbp-0x38]
  41482c:	mov    rax,QWORD PTR [rbp-0x30]
  414830:	mov    rsi,rdx
  414833:	mov    rdi,rax
  414836:	call   405779 <_start@@Base+0x619>
  41483b:	mov    QWORD PTR [rbp-0x10],rax
  41483f:	movabs rax,0x6865785f656e756c
  414849:	cmp    QWORD PTR [rbp-0x10],rax
  41484d:	ja     414a0a <_start@@Base+0xf8aa>
  414853:	movabs rax,0x436f6c6f71ffffff
  41485d:	cmp    QWORD PTR [rbp-0x10],rax
  414861:	ja     4148f7 <_start@@Base+0xf797>
  414867:	movabs rax,0xffffff0000000000
  414871:	and    rax,QWORD PTR [rbp-0x10]
  414875:	mov    rdx,rax
  414878:	movabs rax,0x416e790000000000
  414882:	cmp    rdx,rax
  414885:	jne    4148ee <_start@@Base+0xf78e>
  414887:	mov    rax,QWORD PTR [rbp-0x30]
  41488b:	mov    QWORD PTR [rbp-0x8],rax
  41488f:	mov    rdx,QWORD PTR [rbp-0x38]
  414893:	mov    rsi,QWORD PTR [rbp-0x8]
  414897:	mov    rax,QWORD PTR [rbp-0x28]
  41489b:	mov    ecx,0x3
  4148a0:	mov    rdi,rax
  4148a3:	call   4057c3 <_start@@Base+0x663>
  4148a8:	mov    QWORD PTR [rbp-0x30],rax
  4148ac:	mov    rax,QWORD PTR [rbp-0x30]
  4148b0:	cmp    rax,QWORD PTR [rbp-0x8]
  4148b4:	je     4148e5 <_start@@Base+0xf785>
  4148b6:	mov    r8,QWORD PTR [rbp-0x50]
  4148ba:	mov    rdi,QWORD PTR [rbp-0x48]
  4148be:	mov    rcx,QWORD PTR [rbp-0x40]
  4148c2:	mov    rdx,QWORD PTR [rbp-0x38]
  4148c6:	mov    rsi,QWORD PTR [rbp-0x30]
  4148ca:	mov    rax,QWORD PTR [rbp-0x28]
  4148ce:	mov    r9,r8
  4148d1:	mov    r8,rdi
  4148d4:	mov    rdi,rax
  4148d7:	call   4093a1 <_start@@Base+0x4241>
  4148dc:	mov    QWORD PTR [rbp-0x30],rax
  4148e0:	jmp    414c61 <_start@@Base+0xfb01>
  4148e5:	mov    rax,QWORD PTR [rbp-0x18]
  4148e9:	jmp    414c65 <_start@@Base+0xfb05>
  4148ee:	mov    rax,QWORD PTR [rbp-0x18]
  4148f2:	jmp    414c65 <_start@@Base+0xfb05>
  4148f7:	movabs rax,0xffffff0000000000
  414901:	and    rax,QWORD PTR [rbp-0x10]
  414905:	mov    rdx,rax
  414908:	movabs rax,0x466f6f0000000000
  414912:	cmp    rdx,rax
  414915:	jne    41497e <_start@@Base+0xf81e>
  414917:	mov    rax,QWORD PTR [rbp-0x30]
  41491b:	mov    QWORD PTR [rbp-0x8],rax
  41491f:	mov    rdx,QWORD PTR [rbp-0x38]
  414923:	mov    rsi,QWORD PTR [rbp-0x8]
  414927:	mov    rax,QWORD PTR [rbp-0x28]
  41492b:	mov    ecx,0x3
  414930:	mov    rdi,rax
  414933:	call   4057c3 <_start@@Base+0x663>
  414938:	mov    QWORD PTR [rbp-0x30],rax
  41493c:	mov    rax,QWORD PTR [rbp-0x30]
  414940:	cmp    rax,QWORD PTR [rbp-0x8]
  414944:	je     414975 <_start@@Base+0xf815>
  414946:	mov    r8,QWORD PTR [rbp-0x50]
  41494a:	mov    rdi,QWORD PTR [rbp-0x48]
  41494e:	mov    rcx,QWORD PTR [rbp-0x40]
  414952:	mov    rdx,QWORD PTR [rbp-0x38]
  414956:	mov    rsi,QWORD PTR [rbp-0x30]
  41495a:	mov    rax,QWORD PTR [rbp-0x28]
  41495e:	mov    r9,r8
  414961:	mov    r8,rdi
  414964:	mov    rdi,rax
  414967:	call   408896 <_start@@Base+0x3736>
  41496c:	mov    QWORD PTR [rbp-0x30],rax
  414970:	jmp    414c61 <_start@@Base+0xfb01>
  414975:	mov    rax,QWORD PTR [rbp-0x18]
  414979:	jmp    414c65 <_start@@Base+0xfb05>
  41497e:	mov    rax,QWORD PTR [rbp-0x10]
  414982:	and    rax,0xffffffffff000000
  414988:	mov    rdx,rax
  41498b:	movabs rax,0x436f6c6f72000000
  414995:	cmp    rdx,rax
  414998:	jne    414a01 <_start@@Base+0xf8a1>
  41499a:	mov    rax,QWORD PTR [rbp-0x30]
  41499e:	mov    QWORD PTR [rbp-0x8],rax
  4149a2:	mov    rdx,QWORD PTR [rbp-0x38]
  4149a6:	mov    rsi,QWORD PTR [rbp-0x8]
  4149aa:	mov    rax,QWORD PTR [rbp-0x28]
  4149ae:	mov    ecx,0x5
  4149b3:	mov    rdi,rax
  4149b6:	call   4057c3 <_start@@Base+0x663>
  4149bb:	mov    QWORD PTR [rbp-0x30],rax
  4149bf:	mov    rax,QWORD PTR [rbp-0x30]
  4149c3:	cmp    rax,QWORD PTR [rbp-0x8]
  4149c7:	je     4149f8 <_start@@Base+0xf898>
  4149c9:	mov    r8,QWORD PTR [rbp-0x50]
  4149cd:	mov    rdi,QWORD PTR [rbp-0x48]
  4149d1:	mov    rcx,QWORD PTR [rbp-0x40]
  4149d5:	mov    rdx,QWORD PTR [rbp-0x38]
  4149d9:	mov    rsi,QWORD PTR [rbp-0x30]
  4149dd:	mov    rax,QWORD PTR [rbp-0x28]
  4149e1:	mov    r9,r8
  4149e4:	mov    r8,rdi
  4149e7:	mov    rdi,rax
  4149ea:	call   409013 <_start@@Base+0x3eb3>
  4149ef:	mov    QWORD PTR [rbp-0x30],rax
  4149f3:	jmp    414c61 <_start@@Base+0xfb01>
  4149f8:	mov    rax,QWORD PTR [rbp-0x18]
  4149fc:	jmp    414c65 <_start@@Base+0xfb05>
  414a01:	mov    rax,QWORD PTR [rbp-0x18]
  414a05:	jmp    414c65 <_start@@Base+0xfb05>
  414a0a:	movabs rax,0x696e745f656e756c
  414a14:	cmp    QWORD PTR [rbp-0x10],rax
  414a18:	ja     414a9e <_start@@Base+0xf93e>
  414a1e:	movabs rax,0x6865785f656e756d
  414a28:	cmp    QWORD PTR [rbp-0x10],rax
  414a2c:	jne    414a95 <_start@@Base+0xf935>
  414a2e:	mov    rax,QWORD PTR [rbp-0x30]
  414a32:	mov    QWORD PTR [rbp-0x8],rax
  414a36:	mov    rdx,QWORD PTR [rbp-0x38]
  414a3a:	mov    rsi,QWORD PTR [rbp-0x8]
  414a3e:	mov    rax,QWORD PTR [rbp-0x28]
  414a42:	mov    ecx,0x8
  414a47:	mov    rdi,rax
  414a4a:	call   4057c3 <_start@@Base+0x663>
  414a4f:	mov    QWORD PTR [rbp-0x30],rax
  414a53:	mov    rax,QWORD PTR [rbp-0x30]
  414a57:	cmp    rax,QWORD PTR [rbp-0x8]
  414a5b:	je     414a8c <_start@@Base+0xf92c>
  414a5d:	mov    r8,QWORD PTR [rbp-0x50]
  414a61:	mov    rdi,QWORD PTR [rbp-0x48]
  414a65:	mov    rcx,QWORD PTR [rbp-0x40]
  414a69:	mov    rdx,QWORD PTR [rbp-0x38]
  414a6d:	mov    rsi,QWORD PTR [rbp-0x30]
  414a71:	mov    rax,QWORD PTR [rbp-0x28]
  414a75:	mov    r9,r8
  414a78:	mov    r8,rdi
  414a7b:	mov    rdi,rax
  414a7e:	call   408e52 <_start@@Base+0x3cf2>
  414a83:	mov    QWORD PTR [rbp-0x30],rax
  414a87:	jmp    414c61 <_start@@Base+0xfb01>
  414a8c:	mov    rax,QWORD PTR [rbp-0x18]
  414a90:	jmp    414c65 <_start@@Base+0xfb05>
  414a95:	mov    rax,QWORD PTR [rbp-0x18]
  414a99:	jmp    414c65 <_start@@Base+0xfb05>
  414a9e:	movabs rax,0x6e65675f656e756c
  414aa8:	cmp    QWORD PTR [rbp-0x10],rax
  414aac:	ja     414b32 <_start@@Base+0xf9d2>
  414ab2:	movabs rax,0x696e745f656e756d
  414abc:	cmp    QWORD PTR [rbp-0x10],rax
  414ac0:	jne    414b29 <_start@@Base+0xf9c9>
  414ac2:	mov    rax,QWORD PTR [rbp-0x30]
  414ac6:	mov    QWORD PTR [rbp-0x8],rax
  414aca:	mov    rdx,QWORD PTR [rbp-0x38]
  414ace:	mov    rsi,QWORD PTR [rbp-0x8]
  414ad2:	mov    rax,QWORD PTR [rbp-0x28]
  414ad6:	mov    ecx,0x8
  414adb:	mov    rdi,rax
  414ade:	call   4057c3 <_start@@Base+0x663>
  414ae3:	mov    QWORD PTR [rbp-0x30],rax
  414ae7:	mov    rax,QWORD PTR [rbp-0x30]
  414aeb:	cmp    rax,QWORD PTR [rbp-0x8]
  414aef:	je     414b20 <_start@@Base+0xf9c0>
  414af1:	mov    r8,QWORD PTR [rbp-0x50]
  414af5:	mov    rdi,QWORD PTR [rbp-0x48]
  414af9:	mov    rcx,QWORD PTR [rbp-0x40]
  414afd:	mov    rdx,QWORD PTR [rbp-0x38]
  414b01:	mov    rsi,QWORD PTR [rbp-0x30]
  414b05:	mov    rax,QWORD PTR [rbp-0x28]
  414b09:	mov    r9,r8
  414b0c:	mov    r8,rdi
  414b0f:	mov    rdi,rax
  414b12:	call   408c03 <_start@@Base+0x3aa3>
  414b17:	mov    QWORD PTR [rbp-0x30],rax
  414b1b:	jmp    414c61 <_start@@Base+0xfb01>
  414b20:	mov    rax,QWORD PTR [rbp-0x18]
  414b24:	jmp    414c65 <_start@@Base+0xfb05>
  414b29:	mov    rax,QWORD PTR [rbp-0x18]
  414b2d:	jmp    414c65 <_start@@Base+0xfb05>
  414b32:	movabs rax,0x6e65675f656e756d
  414b3c:	cmp    QWORD PTR [rbp-0x10],rax
  414b40:	jne    414ba0 <_start@@Base+0xfa40>
  414b42:	mov    rax,QWORD PTR [rbp-0x30]
  414b46:	mov    QWORD PTR [rbp-0x8],rax
  414b4a:	mov    rdx,QWORD PTR [rbp-0x38]
  414b4e:	mov    rsi,QWORD PTR [rbp-0x8]
  414b52:	mov    rax,QWORD PTR [rbp-0x28]
  414b56:	mov    ecx,0x8
  414b5b:	mov    rdi,rax
  414b5e:	call   4057c3 <_start@@Base+0x663>
  414b63:	mov    QWORD PTR [rbp-0x30],rax
  414b67:	mov    rax,QWORD PTR [rbp-0x30]
  414b6b:	cmp    rax,QWORD PTR [rbp-0x8]
  414b6f:	je     414ba3 <_start@@Base+0xfa43>
  414b71:	mov    r8,QWORD PTR [rbp-0x50]
  414b75:	mov    rdi,QWORD PTR [rbp-0x48]
  414b79:	mov    rcx,QWORD PTR [rbp-0x40]
  414b7d:	mov    rdx,QWORD PTR [rbp-0x38]
  414b81:	mov    rsi,QWORD PTR [rbp-0x30]
  414b85:	mov    rax,QWORD PTR [rbp-0x28]
  414b89:	mov    r9,r8
  414b8c:	mov    r8,rdi
  414b8f:	mov    rdi,rax
  414b92:	call   408a3c <_start@@Base+0x38dc>
  414b97:	mov    QWORD PTR [rbp-0x30],rax
  414b9b:	jmp    414c61 <_start@@Base+0xfb01>
  414ba0:	nop
  414ba1:	jmp    414ba4 <_start@@Base+0xfa44>
  414ba3:	nop
  414ba4:	movabs rax,0x6e6f74656d707479
  414bae:	cmp    QWORD PTR [rbp-0x10],rax
  414bb2:	jne    414c5b <_start@@Base+0xfafb>
  414bb8:	add    QWORD PTR [rbp-0x30],0x8
  414bbd:	mov    rdx,QWORD PTR [rbp-0x38]
  414bc1:	mov    rax,QWORD PTR [rbp-0x30]
  414bc5:	mov    rsi,rdx
  414bc8:	mov    rdi,rax
  414bcb:	call   405779 <_start@@Base+0x619>
  414bd0:	mov    QWORD PTR [rbp-0x10],rax
  414bd4:	movabs rax,0xffffffff00000000
  414bde:	and    rax,QWORD PTR [rbp-0x10]
  414be2:	mov    rdx,rax
  414be5:	movabs rax,0x656e756d00000000
  414bef:	cmp    rdx,rax
  414bf2:	jne    414c55 <_start@@Base+0xfaf5>
  414bf4:	mov    rax,QWORD PTR [rbp-0x30]
  414bf8:	mov    QWORD PTR [rbp-0x8],rax
  414bfc:	mov    rdx,QWORD PTR [rbp-0x38]
  414c00:	mov    rsi,QWORD PTR [rbp-0x8]
  414c04:	mov    rax,QWORD PTR [rbp-0x28]
  414c08:	mov    ecx,0x4
  414c0d:	mov    rdi,rax
  414c10:	call   4057c3 <_start@@Base+0x663>
  414c15:	mov    QWORD PTR [rbp-0x30],rax
  414c19:	mov    rax,QWORD PTR [rbp-0x30]
  414c1d:	cmp    rax,QWORD PTR [rbp-0x8]
  414c21:	je     414c4f <_start@@Base+0xfaef>
  414c23:	mov    r8,QWORD PTR [rbp-0x50]
  414c27:	mov    rdi,QWORD PTR [rbp-0x48]
  414c2b:	mov    rcx,QWORD PTR [rbp-0x40]
  414c2f:	mov    rdx,QWORD PTR [rbp-0x38]
  414c33:	mov    rsi,QWORD PTR [rbp-0x30]
  414c37:	mov    rax,QWORD PTR [rbp-0x28]
  414c3b:	mov    r9,r8
  414c3e:	mov    r8,rdi
  414c41:	mov    rdi,rax
  414c44:	call   409ee2 <_start@@Base+0x4d82>
  414c49:	mov    QWORD PTR [rbp-0x30],rax
  414c4d:	jmp    414c61 <_start@@Base+0xfb01>
  414c4f:	mov    rax,QWORD PTR [rbp-0x18]
  414c53:	jmp    414c65 <_start@@Base+0xfb05>
  414c55:	mov    rax,QWORD PTR [rbp-0x18]
  414c59:	jmp    414c65 <_start@@Base+0xfb05>
  414c5b:	mov    rax,QWORD PTR [rbp-0x18]
  414c5f:	jmp    414c65 <_start@@Base+0xfb05>
  414c61:	mov    rax,QWORD PTR [rbp-0x30]
  414c65:	leave  
  414c66:	ret    
  414c67:	push   rbp
  414c68:	mov    rbp,rsp
  414c6b:	mov    QWORD PTR [rbp-0x8],rdi
  414c6f:	mov    QWORD PTR [rbp-0x10],rsi
  414c73:	mov    QWORD PTR [rbp-0x18],rdx
  414c77:	mov    QWORD PTR [rbp-0x20],rcx
  414c7b:	mov    QWORD PTR [rbp-0x28],r8
  414c7f:	mov    QWORD PTR [rbp-0x30],r9
  414c83:	mov    rax,QWORD PTR [rbp-0x10]
  414c87:	pop    rbp
  414c88:	ret    
  414c89:	push   rbp
  414c8a:	mov    rbp,rsp
  414c8d:	mov    QWORD PTR [rbp-0x8],rdi
  414c91:	mov    QWORD PTR [rbp-0x10],rsi
  414c95:	mov    QWORD PTR [rbp-0x18],rdx
  414c99:	mov    QWORD PTR [rbp-0x20],rcx
  414c9d:	mov    QWORD PTR [rbp-0x28],r8
  414ca1:	mov    QWORD PTR [rbp-0x30],r9
  414ca5:	mov    rax,QWORD PTR [rbp-0x10]
  414ca9:	pop    rbp
  414caa:	ret    
  414cab:	push   rbp
  414cac:	mov    rbp,rsp
  414caf:	sub    rsp,0x50
  414cb3:	mov    QWORD PTR [rbp-0x28],rdi
  414cb7:	mov    QWORD PTR [rbp-0x30],rsi
  414cbb:	mov    QWORD PTR [rbp-0x38],rdx
  414cbf:	mov    QWORD PTR [rbp-0x40],rcx
  414cc3:	mov    QWORD PTR [rbp-0x48],r8
  414cc7:	mov    QWORD PTR [rbp-0x50],r9
  414ccb:	mov    rax,QWORD PTR [rbp-0x30]
  414ccf:	mov    QWORD PTR [rbp-0x18],rax
  414cd3:	mov    rdx,QWORD PTR [rbp-0x38]
  414cd7:	mov    rax,QWORD PTR [rbp-0x30]
  414cdb:	mov    rsi,rdx
  414cde:	mov    rdi,rax
  414ce1:	call   405779 <_start@@Base+0x619>
  414ce6:	mov    QWORD PTR [rbp-0x10],rax
  414cea:	movabs rax,0x4368617261637465
  414cf4:	cmp    QWORD PTR [rbp-0x10],rax
  414cf8:	jne    414da5 <_start@@Base+0xfc45>
  414cfe:	add    QWORD PTR [rbp-0x30],0x8
  414d03:	mov    rdx,QWORD PTR [rbp-0x38]
  414d07:	mov    rax,QWORD PTR [rbp-0x30]
  414d0b:	mov    rsi,rdx
  414d0e:	mov    rdi,rax
  414d11:	call   405779 <_start@@Base+0x619>
  414d16:	mov    QWORD PTR [rbp-0x10],rax
  414d1a:	movabs rax,0xff00000000000000
  414d24:	and    rax,QWORD PTR [rbp-0x10]
  414d28:	mov    rdx,rax
  414d2b:	movabs rax,0x7200000000000000
  414d35:	cmp    rdx,rax
  414d38:	jne    414d9f <_start@@Base+0xfc3f>
  414d3a:	mov    rax,QWORD PTR [rbp-0x30]
  414d3e:	mov    QWORD PTR [rbp-0x8],rax
  414d42:	mov    rdx,QWORD PTR [rbp-0x38]
  414d46:	mov    rsi,QWORD PTR [rbp-0x8]
  414d4a:	mov    rax,QWORD PTR [rbp-0x28]
  414d4e:	mov    ecx,0x1
  414d53:	mov    rdi,rax
  414d56:	call   4057c3 <_start@@Base+0x663>
  414d5b:	mov    QWORD PTR [rbp-0x30],rax
  414d5f:	mov    rax,QWORD PTR [rbp-0x30]
  414d63:	cmp    rax,QWORD PTR [rbp-0x8]
  414d67:	je     414d99 <_start@@Base+0xfc39>
  414d69:	mov    r8,QWORD PTR [rbp-0x50]
  414d6d:	mov    rdi,QWORD PTR [rbp-0x48]
  414d71:	mov    rcx,QWORD PTR [rbp-0x40]
  414d75:	mov    rdx,QWORD PTR [rbp-0x38]
  414d79:	mov    rsi,QWORD PTR [rbp-0x30]
  414d7d:	mov    rax,QWORD PTR [rbp-0x28]
  414d81:	mov    r9,r8
  414d84:	mov    r8,rdi
  414d87:	mov    rdi,rax
  414d8a:	call   413948 <_start@@Base+0xe7e8>
  414d8f:	mov    QWORD PTR [rbp-0x30],rax
  414d93:	mov    rax,QWORD PTR [rbp-0x30]
  414d97:	jmp    414da9 <_start@@Base+0xfc49>
  414d99:	mov    rax,QWORD PTR [rbp-0x18]
  414d9d:	jmp    414da9 <_start@@Base+0xfc49>
  414d9f:	mov    rax,QWORD PTR [rbp-0x18]
  414da3:	jmp    414da9 <_start@@Base+0xfc49>
  414da5:	mov    rax,QWORD PTR [rbp-0x18]
  414da9:	leave  
  414daa:	ret    
  414dab:	push   rbp
  414dac:	mov    rbp,rsp
  414daf:	sub    rsp,0x50
  414db3:	mov    QWORD PTR [rbp-0x28],rdi
  414db7:	mov    QWORD PTR [rbp-0x30],rsi
  414dbb:	mov    QWORD PTR [rbp-0x38],rdx
  414dbf:	mov    QWORD PTR [rbp-0x40],rcx
  414dc3:	mov    QWORD PTR [rbp-0x48],r8
  414dc7:	mov    QWORD PTR [rbp-0x50],r9
  414dcb:	mov    rax,QWORD PTR [rbp-0x30]
  414dcf:	mov    QWORD PTR [rbp-0x18],rax
  414dd3:	mov    rdx,QWORD PTR [rbp-0x38]
  414dd7:	mov    rax,QWORD PTR [rbp-0x30]
  414ddb:	mov    rsi,rdx
  414dde:	mov    rdi,rax
  414de1:	call   405779 <_start@@Base+0x619>
  414de6:	mov    QWORD PTR [rbp-0x10],rax
  414dea:	movabs rax,0x46726f6d496e636c
  414df4:	cmp    QWORD PTR [rbp-0x10],rax
  414df8:	jne    414ea5 <_start@@Base+0xfd45>
  414dfe:	add    QWORD PTR [rbp-0x30],0x8
  414e03:	mov    rdx,QWORD PTR [rbp-0x38]
  414e07:	mov    rax,QWORD PTR [rbp-0x30]
  414e0b:	mov    rsi,rdx
  414e0e:	mov    rdi,rax
  414e11:	call   405779 <_start@@Base+0x619>
  414e16:	mov    QWORD PTR [rbp-0x10],rax
  414e1a:	movabs rax,0xffffff0000000000
  414e24:	and    rax,QWORD PTR [rbp-0x10]
  414e28:	mov    rdx,rax
  414e2b:	movabs rax,0x7564650000000000
  414e35:	cmp    rdx,rax
  414e38:	jne    414e9f <_start@@Base+0xfd3f>
  414e3a:	mov    rax,QWORD PTR [rbp-0x30]
  414e3e:	mov    QWORD PTR [rbp-0x8],rax
  414e42:	mov    rdx,QWORD PTR [rbp-0x38]
  414e46:	mov    rsi,QWORD PTR [rbp-0x8]
  414e4a:	mov    rax,QWORD PTR [rbp-0x28]
  414e4e:	mov    ecx,0x3
  414e53:	mov    rdi,rax
  414e56:	call   4057c3 <_start@@Base+0x663>
  414e5b:	mov    QWORD PTR [rbp-0x30],rax
  414e5f:	mov    rax,QWORD PTR [rbp-0x30]
  414e63:	cmp    rax,QWORD PTR [rbp-0x8]
  414e67:	je     414e99 <_start@@Base+0xfd39>
  414e69:	mov    r8,QWORD PTR [rbp-0x50]
  414e6d:	mov    rdi,QWORD PTR [rbp-0x48]
  414e71:	mov    rcx,QWORD PTR [rbp-0x40]
  414e75:	mov    rdx,QWORD PTR [rbp-0x38]
  414e79:	mov    rsi,QWORD PTR [rbp-0x30]
  414e7d:	mov    rax,QWORD PTR [rbp-0x28]
  414e81:	mov    r9,r8
  414e84:	mov    r8,rdi
  414e87:	mov    rdi,rax
  414e8a:	call   40799c <_start@@Base+0x283c>
  414e8f:	mov    QWORD PTR [rbp-0x30],rax
  414e93:	mov    rax,QWORD PTR [rbp-0x30]
  414e97:	jmp    414ea9 <_start@@Base+0xfd49>
  414e99:	mov    rax,QWORD PTR [rbp-0x18]
  414e9d:	jmp    414ea9 <_start@@Base+0xfd49>
  414e9f:	mov    rax,QWORD PTR [rbp-0x18]
  414ea3:	jmp    414ea9 <_start@@Base+0xfd49>
  414ea5:	mov    rax,QWORD PTR [rbp-0x18]
  414ea9:	leave  
  414eaa:	ret    
  414eab:	push   rbp
  414eac:	mov    rbp,rsp
  414eaf:	sub    rsp,0x50
  414eb3:	mov    QWORD PTR [rbp-0x28],rdi
  414eb7:	mov    QWORD PTR [rbp-0x30],rsi
  414ebb:	mov    QWORD PTR [rbp-0x38],rdx
  414ebf:	mov    QWORD PTR [rbp-0x40],rcx
  414ec3:	mov    QWORD PTR [rbp-0x48],r8
  414ec7:	mov    QWORD PTR [rbp-0x50],r9
  414ecb:	mov    rax,QWORD PTR [rbp-0x30]
  414ecf:	mov    QWORD PTR [rbp-0x18],rax
  414ed3:	mov    rdx,QWORD PTR [rbp-0x38]
  414ed7:	mov    rax,QWORD PTR [rbp-0x30]
  414edb:	mov    rsi,rdx
  414ede:	mov    rdi,rax
  414ee1:	call   405779 <_start@@Base+0x619>
  414ee6:	mov    QWORD PTR [rbp-0x10],rax
  414eea:	movabs rax,0x4d7947616d652e44
  414ef4:	cmp    QWORD PTR [rbp-0x10],rax
  414ef8:	ja     415000 <_start@@Base+0xfea0>
  414efe:	movabs rax,0x46616e746173792e
  414f08:	cmp    QWORD PTR [rbp-0x10],rax
  414f0c:	jne    414ff7 <_start@@Base+0xfe97>
  414f12:	add    QWORD PTR [rbp-0x30],0x8
  414f17:	mov    rdx,QWORD PTR [rbp-0x38]
  414f1b:	mov    rax,QWORD PTR [rbp-0x30]
  414f1f:	mov    rsi,rdx
  414f22:	mov    rdi,rax
  414f25:	call   405779 <_start@@Base+0x619>
  414f2a:	mov    QWORD PTR [rbp-0x10],rax
  414f2e:	movabs rax,0x4368617261637465
  414f38:	cmp    QWORD PTR [rbp-0x10],rax
  414f3c:	jne    414fee <_start@@Base+0xfe8e>
  414f42:	add    QWORD PTR [rbp-0x30],0x8
  414f47:	mov    rdx,QWORD PTR [rbp-0x38]
  414f4b:	mov    rax,QWORD PTR [rbp-0x30]
  414f4f:	mov    rsi,rdx
  414f52:	mov    rdi,rax
  414f55:	call   405779 <_start@@Base+0x619>
  414f5a:	mov    QWORD PTR [rbp-0x10],rax
  414f5e:	movabs rax,0xff00000000000000
  414f68:	and    rax,QWORD PTR [rbp-0x10]
  414f6c:	mov    rdx,rax
  414f6f:	movabs rax,0x7200000000000000
  414f79:	cmp    rdx,rax
  414f7c:	jne    414fe5 <_start@@Base+0xfe85>
  414f7e:	mov    rax,QWORD PTR [rbp-0x30]
  414f82:	mov    QWORD PTR [rbp-0x8],rax
  414f86:	mov    rdx,QWORD PTR [rbp-0x38]
  414f8a:	mov    rsi,QWORD PTR [rbp-0x8]
  414f8e:	mov    rax,QWORD PTR [rbp-0x28]
  414f92:	mov    ecx,0x1
  414f97:	mov    rdi,rax
  414f9a:	call   4057c3 <_start@@Base+0x663>
  414f9f:	mov    QWORD PTR [rbp-0x30],rax
  414fa3:	mov    rax,QWORD PTR [rbp-0x30]
  414fa7:	cmp    rax,QWORD PTR [rbp-0x8]
  414fab:	je     414fdc <_start@@Base+0xfe7c>
  414fad:	mov    r8,QWORD PTR [rbp-0x50]
  414fb1:	mov    rdi,QWORD PTR [rbp-0x48]
  414fb5:	mov    rcx,QWORD PTR [rbp-0x40]
  414fb9:	mov    rdx,QWORD PTR [rbp-0x38]
  414fbd:	mov    rsi,QWORD PTR [rbp-0x30]
  414fc1:	mov    rax,QWORD PTR [rbp-0x28]
  414fc5:	mov    r9,r8
  414fc8:	mov    r8,rdi
  414fcb:	mov    rdi,rax
  414fce:	call   413948 <_start@@Base+0xe7e8>
  414fd3:	mov    QWORD PTR [rbp-0x30],rax
  414fd7:	jmp    41572f <_start@@Base+0x105cf>
  414fdc:	mov    rax,QWORD PTR [rbp-0x18]
  414fe0:	jmp    415733 <_start@@Base+0x105d3>
  414fe5:	mov    rax,QWORD PTR [rbp-0x18]
  414fe9:	jmp    415733 <_start@@Base+0x105d3>
  414fee:	mov    rax,QWORD PTR [rbp-0x18]
  414ff2:	jmp    415733 <_start@@Base+0x105d3>
  414ff7:	mov    rax,QWORD PTR [rbp-0x18]
  414ffb:	jmp    415733 <_start@@Base+0x105d3>
  415000:	movabs rax,0x4d7947616d652e45
  41500a:	cmp    QWORD PTR [rbp-0x10],rax
  41500e:	jne    4155d0 <_start@@Base+0x10470>
  415014:	add    QWORD PTR [rbp-0x30],0x8
  415019:	mov    rdx,QWORD PTR [rbp-0x38]
  41501d:	mov    rax,QWORD PTR [rbp-0x30]
  415021:	mov    rsi,rdx
  415024:	mov    rdi,rax
  415027:	call   405779 <_start@@Base+0x619>
  41502c:	mov    QWORD PTR [rbp-0x10],rax
  415030:	movabs rax,0x78616d706c652e67
  41503a:	cmp    QWORD PTR [rbp-0x10],rax
  41503e:	ja     4152aa <_start@@Base+0x1014a>
  415044:	movabs rax,0x78616d706c652e42
  41504e:	cmp    QWORD PTR [rbp-0x10],rax
  415052:	ja     415121 <_start@@Base+0xffc1>
  415058:	movabs rax,0x78616d706c652e41
  415062:	cmp    QWORD PTR [rbp-0x10],rax
  415066:	jne    415118 <_start@@Base+0xffb8>
  41506c:	add    QWORD PTR [rbp-0x30],0x8
  415071:	mov    rdx,QWORD PTR [rbp-0x38]
  415075:	mov    rax,QWORD PTR [rbp-0x30]
  415079:	mov    rsi,rdx
  41507c:	mov    rdi,rax
  41507f:	call   405779 <_start@@Base+0x619>
  415084:	mov    QWORD PTR [rbp-0x10],rax
  415088:	movabs rax,0xffff000000000000
  415092:	and    rax,QWORD PTR [rbp-0x10]
  415096:	mov    rdx,rax
  415099:	movabs rax,0x6e79000000000000
  4150a3:	cmp    rdx,rax
  4150a6:	jne    41510f <_start@@Base+0xffaf>
  4150a8:	mov    rax,QWORD PTR [rbp-0x30]
  4150ac:	mov    QWORD PTR [rbp-0x8],rax
  4150b0:	mov    rdx,QWORD PTR [rbp-0x38]
  4150b4:	mov    rsi,QWORD PTR [rbp-0x8]
  4150b8:	mov    rax,QWORD PTR [rbp-0x28]
  4150bc:	mov    ecx,0x2
  4150c1:	mov    rdi,rax
  4150c4:	call   4057c3 <_start@@Base+0x663>
  4150c9:	mov    QWORD PTR [rbp-0x30],rax
  4150cd:	mov    rax,QWORD PTR [rbp-0x30]
  4150d1:	cmp    rax,QWORD PTR [rbp-0x8]
  4150d5:	je     415106 <_start@@Base+0xffa6>
  4150d7:	mov    r8,QWORD PTR [rbp-0x50]
  4150db:	mov    rdi,QWORD PTR [rbp-0x48]
  4150df:	mov    rcx,QWORD PTR [rbp-0x40]
  4150e3:	mov    rdx,QWORD PTR [rbp-0x38]
  4150e7:	mov    rsi,QWORD PTR [rbp-0x30]
  4150eb:	mov    rax,QWORD PTR [rbp-0x28]
  4150ef:	mov    r9,r8
  4150f2:	mov    r8,rdi
  4150f5:	mov    rdi,rax
  4150f8:	call   4093a1 <_start@@Base+0x4241>
  4150fd:	mov    QWORD PTR [rbp-0x30],rax
  415101:	jmp    41572f <_start@@Base+0x105cf>
  415106:	mov    rax,QWORD PTR [rbp-0x18]
  41510a:	jmp    415733 <_start@@Base+0x105d3>
  41510f:	mov    rax,QWORD PTR [rbp-0x18]
  415113:	jmp    415733 <_start@@Base+0x105d3>
  415118:	mov    rax,QWORD PTR [rbp-0x18]
  41511c:	jmp    415733 <_start@@Base+0x105d3>
  415121:	movabs rax,0x78616d706c652e43
  41512b:	cmp    QWORD PTR [rbp-0x10],rax
  41512f:	jne    4151e1 <_start@@Base+0x10081>
  415135:	add    QWORD PTR [rbp-0x30],0x8
  41513a:	mov    rdx,QWORD PTR [rbp-0x38]
  41513e:	mov    rax,QWORD PTR [rbp-0x30]
  415142:	mov    rsi,rdx
  415145:	mov    rdi,rax
  415148:	call   405779 <_start@@Base+0x619>
  41514d:	mov    QWORD PTR [rbp-0x10],rax
  415151:	movabs rax,0xffffffff00000000
  41515b:	and    rax,QWORD PTR [rbp-0x10]
  41515f:	mov    rdx,rax
  415162:	movabs rax,0x6f6c6f7200000000
  41516c:	cmp    rdx,rax
  41516f:	jne    4151d8 <_start@@Base+0x10078>
  415171:	mov    rax,QWORD PTR [rbp-0x30]
  415175:	mov    QWORD PTR [rbp-0x8],rax
  415179:	mov    rdx,QWORD PTR [rbp-0x38]
  41517d:	mov    rsi,QWORD PTR [rbp-0x8]
  415181:	mov    rax,QWORD PTR [rbp-0x28]
  415185:	mov    ecx,0x4
  41518a:	mov    rdi,rax
  41518d:	call   4057c3 <_start@@Base+0x663>
  415192:	mov    QWORD PTR [rbp-0x30],rax
  415196:	mov    rax,QWORD PTR [rbp-0x30]
  41519a:	cmp    rax,QWORD PTR [rbp-0x8]
  41519e:	je     4151cf <_start@@Base+0x1006f>
  4151a0:	mov    r8,QWORD PTR [rbp-0x50]
  4151a4:	mov    rdi,QWORD PTR [rbp-0x48]
  4151a8:	mov    rcx,QWORD PTR [rbp-0x40]
  4151ac:	mov    rdx,QWORD PTR [rbp-0x38]
  4151b0:	mov    rsi,QWORD PTR [rbp-0x30]
  4151b4:	mov    rax,QWORD PTR [rbp-0x28]
  4151b8:	mov    r9,r8
  4151bb:	mov    r8,rdi
  4151be:	mov    rdi,rax
  4151c1:	call   409013 <_start@@Base+0x3eb3>
  4151c6:	mov    QWORD PTR [rbp-0x30],rax
  4151ca:	jmp    41572f <_start@@Base+0x105cf>
  4151cf:	mov    rax,QWORD PTR [rbp-0x18]
  4151d3:	jmp    415733 <_start@@Base+0x105d3>
  4151d8:	mov    rax,QWORD PTR [rbp-0x18]
  4151dc:	jmp    415733 <_start@@Base+0x105d3>
  4151e1:	movabs rax,0x78616d706c652e46
  4151eb:	cmp    QWORD PTR [rbp-0x10],rax
  4151ef:	jne    4152a1 <_start@@Base+0x10141>
  4151f5:	add    QWORD PTR [rbp-0x30],0x8
  4151fa:	mov    rdx,QWORD PTR [rbp-0x38]
  4151fe:	mov    rax,QWORD PTR [rbp-0x30]
  415202:	mov    rsi,rdx
  415205:	mov    rdi,rax
  415208:	call   405779 <_start@@Base+0x619>
  41520d:	mov    QWORD PTR [rbp-0x10],rax
  415211:	movabs rax,0xffff000000000000
  41521b:	and    rax,QWORD PTR [rbp-0x10]
  41521f:	mov    rdx,rax
  415222:	movabs rax,0x6f6f000000000000
  41522c:	cmp    rdx,rax
  41522f:	jne    415298 <_start@@Base+0x10138>
  415231:	mov    rax,QWORD PTR [rbp-0x30]
  415235:	mov    QWORD PTR [rbp-0x8],rax
  415239:	mov    rdx,QWORD PTR [rbp-0x38]
  41523d:	mov    rsi,QWORD PTR [rbp-0x8]
  415241:	mov    rax,QWORD PTR [rbp-0x28]
  415245:	mov    ecx,0x2
  41524a:	mov    rdi,rax
  41524d:	call   4057c3 <_start@@Base+0x663>
  415252:	mov    QWORD PTR [rbp-0x30],rax
  415256:	mov    rax,QWORD PTR [rbp-0x30]
  41525a:	cmp    rax,QWORD PTR [rbp-0x8]
  41525e:	je     41528f <_start@@Base+0x1012f>
  415260:	mov    r8,QWORD PTR [rbp-0x50]
  415264:	mov    rdi,QWORD PTR [rbp-0x48]
  415268:	mov    rcx,QWORD PTR [rbp-0x40]
  41526c:	mov    rdx,QWORD PTR [rbp-0x38]
  415270:	mov    rsi,QWORD PTR [rbp-0x30]
  415274:	mov    rax,QWORD PTR [rbp-0x28]
  415278:	mov    r9,r8
  41527b:	mov    r8,rdi
  41527e:	mov    rdi,rax
  415281:	call   408896 <_start@@Base+0x3736>
  415286:	mov    QWORD PTR [rbp-0x30],rax
  41528a:	jmp    41572f <_start@@Base+0x105cf>
  41528f:	mov    rax,QWORD PTR [rbp-0x18]
  415293:	jmp    415733 <_start@@Base+0x105d3>
  415298:	mov    rax,QWORD PTR [rbp-0x18]
  41529c:	jmp    415733 <_start@@Base+0x105d3>
  4152a1:	mov    rax,QWORD PTR [rbp-0x18]
  4152a5:	jmp    415733 <_start@@Base+0x105d3>
  4152aa:	movabs rax,0x78616d706c652e68
  4152b4:	cmp    QWORD PTR [rbp-0x10],rax
  4152b8:	ja     41537f <_start@@Base+0x1021f>
  4152be:	movabs rax,0x78616d706c652e68
  4152c8:	cmp    QWORD PTR [rbp-0x10],rax
  4152cc:	jne    415376 <_start@@Base+0x10216>
  4152d2:	add    QWORD PTR [rbp-0x30],0x8
  4152d7:	mov    rdx,QWORD PTR [rbp-0x38]
  4152db:	mov    rax,QWORD PTR [rbp-0x30]
  4152df:	mov    rsi,rdx
  4152e2:	mov    rdi,rax
  4152e5:	call   405779 <_start@@Base+0x619>
  4152ea:	mov    QWORD PTR [rbp-0x10],rax
  4152ee:	mov    rax,QWORD PTR [rbp-0x10]
  4152f2:	mov    al,0x0
  4152f4:	mov    rdx,rax
  4152f7:	movabs rax,0x65785f656e756d00
  415301:	cmp    rdx,rax
  415304:	jne    41536d <_start@@Base+0x1020d>
  415306:	mov    rax,QWORD PTR [rbp-0x30]
  41530a:	mov    QWORD PTR [rbp-0x8],rax
  41530e:	mov    rdx,QWORD PTR [rbp-0x38]
  415312:	mov    rsi,QWORD PTR [rbp-0x8]
  415316:	mov    rax,QWORD PTR [rbp-0x28]
  41531a:	mov    ecx,0x7
  41531f:	mov    rdi,rax
  415322:	call   4057c3 <_start@@Base+0x663>
  415327:	mov    QWORD PTR [rbp-0x30],rax
  41532b:	mov    rax,QWORD PTR [rbp-0x30]
  41532f:	cmp    rax,QWORD PTR [rbp-0x8]
  415333:	je     415364 <_start@@Base+0x10204>
  415335:	mov    r8,QWORD PTR [rbp-0x50]
  415339:	mov    rdi,QWORD PTR [rbp-0x48]
  41533d:	mov    rcx,QWORD PTR [rbp-0x40]
  415341:	mov    rdx,QWORD PTR [rbp-0x38]
  415345:	mov    rsi,QWORD PTR [rbp-0x30]
  415349:	mov    rax,QWORD PTR [rbp-0x28]
  41534d:	mov    r9,r8
  415350:	mov    r8,rdi
  415353:	mov    rdi,rax
  415356:	call   408e52 <_start@@Base+0x3cf2>
  41535b:	mov    QWORD PTR [rbp-0x30],rax
  41535f:	jmp    41572f <_start@@Base+0x105cf>
  415364:	mov    rax,QWORD PTR [rbp-0x18]
  415368:	jmp    415733 <_start@@Base+0x105d3>
  41536d:	mov    rax,QWORD PTR [rbp-0x18]
  415371:	jmp    415733 <_start@@Base+0x105d3>
  415376:	mov    rax,QWORD PTR [rbp-0x18]
  41537a:	jmp    415733 <_start@@Base+0x105d3>
  41537f:	movabs rax,0x78616d706c652e6d
  415389:	cmp    QWORD PTR [rbp-0x10],rax
  41538d:	ja     415454 <_start@@Base+0x102f4>
  415393:	movabs rax,0x78616d706c652e69
  41539d:	cmp    QWORD PTR [rbp-0x10],rax
  4153a1:	jne    41544b <_start@@Base+0x102eb>
  4153a7:	add    QWORD PTR [rbp-0x30],0x8
  4153ac:	mov    rdx,QWORD PTR [rbp-0x38]
  4153b0:	mov    rax,QWORD PTR [rbp-0x30]
  4153b4:	mov    rsi,rdx
  4153b7:	mov    rdi,rax
  4153ba:	call   405779 <_start@@Base+0x619>
  4153bf:	mov    QWORD PTR [rbp-0x10],rax
  4153c3:	mov    rax,QWORD PTR [rbp-0x10]
  4153c7:	mov    al,0x0
  4153c9:	mov    rdx,rax
  4153cc:	movabs rax,0x6e745f656e756d00
  4153d6:	cmp    rdx,rax
  4153d9:	jne    415442 <_start@@Base+0x102e2>
  4153db:	mov    rax,QWORD PTR [rbp-0x30]
  4153df:	mov    QWORD PTR [rbp-0x8],rax
  4153e3:	mov    rdx,QWORD PTR [rbp-0x38]
  4153e7:	mov    rsi,QWORD PTR [rbp-0x8]
  4153eb:	mov    rax,QWORD PTR [rbp-0x28]
  4153ef:	mov    ecx,0x7
  4153f4:	mov    rdi,rax
  4153f7:	call   4057c3 <_start@@Base+0x663>
  4153fc:	mov    QWORD PTR [rbp-0x30],rax
  415400:	mov    rax,QWORD PTR [rbp-0x30]
  415404:	cmp    rax,QWORD PTR [rbp-0x8]
  415408:	je     415439 <_start@@Base+0x102d9>
  41540a:	mov    r8,QWORD PTR [rbp-0x50]
  41540e:	mov    rdi,QWORD PTR [rbp-0x48]
  415412:	mov    rcx,QWORD PTR [rbp-0x40]
  415416:	mov    rdx,QWORD PTR [rbp-0x38]
  41541a:	mov    rsi,QWORD PTR [rbp-0x30]
  41541e:	mov    rax,QWORD PTR [rbp-0x28]
  415422:	mov    r9,r8
  415425:	mov    r8,rdi
  415428:	mov    rdi,rax
  41542b:	call   408c03 <_start@@Base+0x3aa3>
  415430:	mov    QWORD PTR [rbp-0x30],rax
  415434:	jmp    41572f <_start@@Base+0x105cf>
  415439:	mov    rax,QWORD PTR [rbp-0x18]
  41543d:	jmp    415733 <_start@@Base+0x105d3>
  415442:	mov    rax,QWORD PTR [rbp-0x18]
  415446:	jmp    415733 <_start@@Base+0x105d3>
  41544b:	mov    rax,QWORD PTR [rbp-0x18]
  41544f:	jmp    415733 <_start@@Base+0x105d3>
  415454:	movabs rax,0x78616d706c652e6e
  41545e:	cmp    QWORD PTR [rbp-0x10],rax
  415462:	jne    4155c7 <_start@@Base+0x10467>
  415468:	add    QWORD PTR [rbp-0x30],0x8
  41546d:	mov    rdx,QWORD PTR [rbp-0x38]
  415471:	mov    rax,QWORD PTR [rbp-0x30]
  415475:	mov    rsi,rdx
  415478:	mov    rdi,rax
  41547b:	call   405779 <_start@@Base+0x619>
  415480:	mov    QWORD PTR [rbp-0x10],rax
  415484:	mov    rax,QWORD PTR [rbp-0x10]
  415488:	mov    al,0x0
  41548a:	mov    rdx,rax
  41548d:	movabs rax,0x65675f656e756d00
  415497:	cmp    rdx,rax
  41549a:	jne    4154fa <_start@@Base+0x1039a>
  41549c:	mov    rax,QWORD PTR [rbp-0x30]
  4154a0:	mov    QWORD PTR [rbp-0x8],rax
  4154a4:	mov    rdx,QWORD PTR [rbp-0x38]
  4154a8:	mov    rsi,QWORD PTR [rbp-0x8]
  4154ac:	mov    rax,QWORD PTR [rbp-0x28]
  4154b0:	mov    ecx,0x7
  4154b5:	mov    rdi,rax
  4154b8:	call   4057c3 <_start@@Base+0x663>
  4154bd:	mov    QWORD PTR [rbp-0x30],rax
  4154c1:	mov    rax,QWORD PTR [rbp-0x30]
  4154c5:	cmp    rax,QWORD PTR [rbp-0x8]
  4154c9:	je     4154fd <_start@@Base+0x1039d>
  4154cb:	mov    r8,QWORD PTR [rbp-0x50]
  4154cf:	mov    rdi,QWORD PTR [rbp-0x48]
  4154d3:	mov    rcx,QWORD PTR [rbp-0x40]
  4154d7:	mov    rdx,QWORD PTR [rbp-0x38]
  4154db:	mov    rsi,QWORD PTR [rbp-0x30]
  4154df:	mov    rax,QWORD PTR [rbp-0x28]
  4154e3:	mov    r9,r8
  4154e6:	mov    r8,rdi
  4154e9:	mov    rdi,rax
  4154ec:	call   408a3c <_start@@Base+0x38dc>
  4154f1:	mov    QWORD PTR [rbp-0x30],rax
  4154f5:	jmp    41572f <_start@@Base+0x105cf>
  4154fa:	nop
  4154fb:	jmp    4154fe <_start@@Base+0x1039e>
  4154fd:	nop
  4154fe:	movabs rax,0x6f74656d70747965
  415508:	cmp    QWORD PTR [rbp-0x10],rax
  41550c:	jne    4155be <_start@@Base+0x1045e>
  415512:	add    QWORD PTR [rbp-0x30],0x8
  415517:	mov    rdx,QWORD PTR [rbp-0x38]
  41551b:	mov    rax,QWORD PTR [rbp-0x30]
  41551f:	mov    rsi,rdx
  415522:	mov    rdi,rax
  415525:	call   405779 <_start@@Base+0x619>
  41552a:	mov    QWORD PTR [rbp-0x10],rax
  41552e:	movabs rax,0xffffff0000000000
  415538:	and    rax,QWORD PTR [rbp-0x10]
  41553c:	mov    rdx,rax
  41553f:	movabs rax,0x6e756d0000000000
  415549:	cmp    rdx,rax
  41554c:	jne    4155b5 <_start@@Base+0x10455>
  41554e:	mov    rax,QWORD PTR [rbp-0x30]
  415552:	mov    QWORD PTR [rbp-0x8],rax
  415556:	mov    rdx,QWORD PTR [rbp-0x38]
  41555a:	mov    rsi,QWORD PTR [rbp-0x8]
  41555e:	mov    rax,QWORD PTR [rbp-0x28]
  415562:	mov    ecx,0x3
  415567:	mov    rdi,rax
  41556a:	call   4057c3 <_start@@Base+0x663>
  41556f:	mov    QWORD PTR [rbp-0x30],rax
  415573:	mov    rax,QWORD PTR [rbp-0x30]
  415577:	cmp    rax,QWORD PTR [rbp-0x8]
  41557b:	je     4155ac <_start@@Base+0x1044c>
  41557d:	mov    r8,QWORD PTR [rbp-0x50]
  415581:	mov    rdi,QWORD PTR [rbp-0x48]
  415585:	mov    rcx,QWORD PTR [rbp-0x40]
  415589:	mov    rdx,QWORD PTR [rbp-0x38]
  41558d:	mov    rsi,QWORD PTR [rbp-0x30]
  415591:	mov    rax,QWORD PTR [rbp-0x28]
  415595:	mov    r9,r8
  415598:	mov    r8,rdi
  41559b:	mov    rdi,rax
  41559e:	call   409ee2 <_start@@Base+0x4d82>
  4155a3:	mov    QWORD PTR [rbp-0x30],rax
  4155a7:	jmp    41572f <_start@@Base+0x105cf>
  4155ac:	mov    rax,QWORD PTR [rbp-0x18]
  4155b0:	jmp    415733 <_start@@Base+0x105d3>
  4155b5:	mov    rax,QWORD PTR [rbp-0x18]
  4155b9:	jmp    415733 <_start@@Base+0x105d3>
  4155be:	mov    rax,QWORD PTR [rbp-0x18]
  4155c2:	jmp    415733 <_start@@Base+0x105d3>
  4155c7:	mov    rax,QWORD PTR [rbp-0x18]
  4155cb:	jmp    415733 <_start@@Base+0x105d3>
  4155d0:	movabs rax,0x4d7947616d652e4f
  4155da:	cmp    QWORD PTR [rbp-0x10],rax
  4155de:	jne    415729 <_start@@Base+0x105c9>
  4155e4:	add    QWORD PTR [rbp-0x30],0x8
  4155e9:	mov    rdx,QWORD PTR [rbp-0x38]
  4155ed:	mov    rax,QWORD PTR [rbp-0x30]
  4155f1:	mov    rsi,rdx
  4155f4:	mov    rdi,rax
  4155f7:	call   405779 <_start@@Base+0x619>
  4155fc:	mov    QWORD PTR [rbp-0x10],rax
  415600:	movabs rax,0x746865724e616d65
  41560a:	cmp    QWORD PTR [rbp-0x10],rax
  41560e:	jne    415723 <_start@@Base+0x105c3>
  415614:	add    QWORD PTR [rbp-0x30],0x8
  415619:	mov    rdx,QWORD PTR [rbp-0x38]
  41561d:	mov    rax,QWORD PTR [rbp-0x30]
  415621:	mov    rsi,rdx
  415624:	mov    rdi,rax
  415627:	call   405779 <_start@@Base+0x619>
  41562c:	mov    QWORD PTR [rbp-0x10],rax
  415630:	movabs rax,0x53706163652e4672
  41563a:	cmp    QWORD PTR [rbp-0x10],rax
  41563e:	jne    41571d <_start@@Base+0x105bd>
  415644:	add    QWORD PTR [rbp-0x30],0x8
  415649:	mov    rdx,QWORD PTR [rbp-0x38]
  41564d:	mov    rax,QWORD PTR [rbp-0x30]
  415651:	mov    rsi,rdx
  415654:	mov    rdi,rax
  415657:	call   405779 <_start@@Base+0x619>
  41565c:	mov    QWORD PTR [rbp-0x10],rax
  415660:	movabs rax,0x6f6d496e636c7564
  41566a:	cmp    QWORD PTR [rbp-0x10],rax
  41566e:	jne    415717 <_start@@Base+0x105b7>
  415674:	add    QWORD PTR [rbp-0x30],0x8
  415679:	mov    rdx,QWORD PTR [rbp-0x38]
  41567d:	mov    rax,QWORD PTR [rbp-0x30]
  415681:	mov    rsi,rdx
  415684:	mov    rdi,rax
  415687:	call   405779 <_start@@Base+0x619>
  41568c:	mov    QWORD PTR [rbp-0x10],rax
  415690:	movabs rax,0xff00000000000000
  41569a:	and    rax,QWORD PTR [rbp-0x10]
  41569e:	mov    rdx,rax
  4156a1:	movabs rax,0x6500000000000000
  4156ab:	cmp    rdx,rax
  4156ae:	jne    415711 <_start@@Base+0x105b1>
  4156b0:	mov    rax,QWORD PTR [rbp-0x30]
  4156b4:	mov    QWORD PTR [rbp-0x8],rax
  4156b8:	mov    rdx,QWORD PTR [rbp-0x38]
  4156bc:	mov    rsi,QWORD PTR [rbp-0x8]
  4156c0:	mov    rax,QWORD PTR [rbp-0x28]
  4156c4:	mov    ecx,0x1
  4156c9:	mov    rdi,rax
  4156cc:	call   4057c3 <_start@@Base+0x663>
  4156d1:	mov    QWORD PTR [rbp-0x30],rax
  4156d5:	mov    rax,QWORD PTR [rbp-0x30]
  4156d9:	cmp    rax,QWORD PTR [rbp-0x8]
  4156dd:	je     41570b <_start@@Base+0x105ab>
  4156df:	mov    r8,QWORD PTR [rbp-0x50]
  4156e3:	mov    rdi,QWORD PTR [rbp-0x48]
  4156e7:	mov    rcx,QWORD PTR [rbp-0x40]
  4156eb:	mov    rdx,QWORD PTR [rbp-0x38]
  4156ef:	mov    rsi,QWORD PTR [rbp-0x30]
  4156f3:	mov    rax,QWORD PTR [rbp-0x28]
  4156f7:	mov    r9,r8
  4156fa:	mov    r8,rdi
  4156fd:	mov    rdi,rax
  415700:	call   40799c <_start@@Base+0x283c>
  415705:	mov    QWORD PTR [rbp-0x30],rax
  415709:	jmp    41572f <_start@@Base+0x105cf>
  41570b:	mov    rax,QWORD PTR [rbp-0x18]
  41570f:	jmp    415733 <_start@@Base+0x105d3>
  415711:	mov    rax,QWORD PTR [rbp-0x18]
  415715:	jmp    415733 <_start@@Base+0x105d3>
  415717:	mov    rax,QWORD PTR [rbp-0x18]
  41571b:	jmp    415733 <_start@@Base+0x105d3>
  41571d:	mov    rax,QWORD PTR [rbp-0x18]
  415721:	jmp    415733 <_start@@Base+0x105d3>
  415723:	mov    rax,QWORD PTR [rbp-0x18]
  415727:	jmp    415733 <_start@@Base+0x105d3>
  415729:	mov    rax,QWORD PTR [rbp-0x18]
  41572d:	jmp    415733 <_start@@Base+0x105d3>
  41572f:	mov    rax,QWORD PTR [rbp-0x30]
  415733:	leave  
  415734:	ret    
  415735:	push   rbp
  415736:	mov    rbp,rsp
  415739:	sub    rsp,0x90
  415740:	mov    QWORD PTR [rbp-0x68],rdi
  415744:	mov    QWORD PTR [rbp-0x70],rsi
  415748:	mov    QWORD PTR [rbp-0x78],rdx
  41574c:	mov    QWORD PTR [rbp-0x80],rcx
  415750:	mov    DWORD PTR [rbp-0x84],r8d
  415757:	mov    rax,QWORD PTR fs:0x28
  415760:	mov    QWORD PTR [rbp-0x8],rax
  415764:	xor    eax,eax
  415766:	cmp    QWORD PTR [rbp-0x70],0x0
  41576b:	jne    415773 <_start@@Base+0x10613>
  41576d:	lea    rax,[rbp-0x50]
  415771:	jmp    415777 <_start@@Base+0x10617>
  415773:	mov    rax,QWORD PTR [rbp-0x70]
  415777:	mov    QWORD PTR [rbp-0x70],rax
  41577b:	mov    rdx,QWORD PTR [rbp-0x78]
  41577f:	mov    rax,QWORD PTR [rbp-0x80]
  415783:	lea    rcx,[rdx+rax*1]
  415787:	mov    edi,DWORD PTR [rbp-0x84]
  41578d:	mov    rdx,QWORD PTR [rbp-0x78]
  415791:	mov    rsi,QWORD PTR [rbp-0x68]
  415795:	mov    rax,QWORD PTR [rbp-0x70]
  415799:	mov    r8d,edi
  41579c:	mov    rdi,rax
  41579f:	call   4054ea <_start@@Base+0x38a>
  4157a4:	mov    rax,QWORD PTR [rbp-0x68]
  4157a8:	mov    ecx,0x0
  4157ad:	mov    edx,0x0
  4157b2:	lea    rsi,[rip+0x208b7]        # 436070 <_IO_stdin_used@@Base+0x70>
  4157b9:	mov    rdi,rax
  4157bc:	call   41ca72 <flatcc_builder_start_buffer@@Base>
  4157c1:	test   eax,eax
  4157c3:	je     4157cc <_start@@Base+0x1066c>
  4157c5:	mov    eax,0xffffffff
  4157ca:	jmp    415833 <_start@@Base+0x106d3>
  4157cc:	mov    rdx,QWORD PTR [rbp-0x78]
  4157d0:	mov    rax,QWORD PTR [rbp-0x80]
  4157d4:	lea    rdi,[rdx+rax*1]
  4157d8:	lea    rdx,[rbp-0x54]
  4157dc:	mov    rsi,QWORD PTR [rbp-0x78]
  4157e0:	mov    rax,QWORD PTR [rbp-0x70]
  4157e4:	mov    rcx,rdx
  4157e7:	mov    rdx,rdi
  4157ea:	mov    rdi,rax
  4157ed:	call   40e164 <_start@@Base+0x9004>
  4157f2:	mov    rax,QWORD PTR [rbp-0x70]
  4157f6:	mov    eax,DWORD PTR [rax+0x20]
  4157f9:	test   eax,eax
  4157fb:	je     415806 <_start@@Base+0x106a6>
  4157fd:	mov    rax,QWORD PTR [rbp-0x70]
  415801:	mov    eax,DWORD PTR [rax+0x20]
  415804:	jmp    415833 <_start@@Base+0x106d3>
  415806:	mov    edx,DWORD PTR [rbp-0x54]
  415809:	mov    rax,QWORD PTR [rbp-0x68]
  41580d:	mov    esi,edx
  41580f:	mov    rdi,rax
  415812:	call   41cbbb <flatcc_builder_end_buffer@@Base>
  415817:	test   eax,eax
  415819:	jne    415822 <_start@@Base+0x106c2>
  41581b:	mov    eax,0xffffffff
  415820:	jmp    415833 <_start@@Base+0x106d3>
  415822:	mov    rax,QWORD PTR [rbp-0x70]
  415826:	mov    rdx,QWORD PTR [rbp-0x78]
  41582a:	mov    QWORD PTR [rax+0x40],rdx
  41582e:	mov    eax,0x0
  415833:	mov    rcx,QWORD PTR [rbp-0x8]
  415837:	xor    rcx,QWORD PTR fs:0x28
  415840:	je     415847 <_start@@Base+0x106e7>
  415842:	call   405070 <__stack_chk_fail@plt>
  415847:	leave  
  415848:	ret    
  415849:	push   rbp
  41584a:	mov    rbp,rsp
  41584d:	mov    QWORD PTR [rbp-0x8],rdi
  415851:	mov    DWORD PTR [rbp-0xc],esi
  415854:	cmp    DWORD PTR [rbp-0xc],0x0
  415858:	setne  al
  41585b:	mov    edx,eax
  41585d:	mov    rax,QWORD PTR [rbp-0x8]
  415861:	mov    BYTE PTR [rax+0x32],dl
  415864:	nop
  415865:	pop    rbp
  415866:	ret    
  415867:	push   rbp
  415868:	mov    rbp,rsp
  41586b:	mov    QWORD PTR [rbp-0x8],rdi
  41586f:	mov    DWORD PTR [rbp-0xc],esi
  415872:	cmp    DWORD PTR [rbp-0xc],0x0
  415876:	setne  al
  415879:	mov    edx,eax
  41587b:	mov    rax,QWORD PTR [rbp-0x8]
  41587f:	mov    BYTE PTR [rax+0x33],dl
  415882:	nop
  415883:	pop    rbp
  415884:	ret    
  415885:	push   rbp
  415886:	mov    rbp,rsp
  415889:	mov    QWORD PTR [rbp-0x8],rdi
  41588d:	mov    eax,esi
  41588f:	mov    BYTE PTR [rbp-0xc],al
  415892:	mov    rax,QWORD PTR [rbp-0x8]
  415896:	movzx  edx,BYTE PTR [rbp-0xc]
  41589a:	mov    BYTE PTR [rax+0x31],dl
  41589d:	nop
  41589e:	pop    rbp
  41589f:	ret    
  4158a0:	push   rbp
  4158a1:	mov    rbp,rsp
  4158a4:	sub    rsp,0x8
  4158a8:	mov    QWORD PTR [rbp-0x8],rdi
  4158ac:	mov    rax,QWORD PTR [rbp-0x8]
  4158b0:	mov    esi,0x2
  4158b5:	mov    rdi,rax
  4158b8:	call   415885 <_start@@Base+0x10725>
  4158bd:	mov    rax,QWORD PTR [rbp-0x8]
  4158c1:	mov    esi,0x1
  4158c6:	mov    rdi,rax
  4158c9:	call   415849 <_start@@Base+0x106e9>
  4158ce:	mov    rax,QWORD PTR [rbp-0x8]
  4158d2:	mov    esi,0x0
  4158d7:	mov    rdi,rax
  4158da:	call   415867 <_start@@Base+0x10707>
  4158df:	nop
  4158e0:	leave  
  4158e1:	ret    
  4158e2:	push   rbp
  4158e3:	mov    rbp,rsp
  4158e6:	sub    rsp,0x10
  4158ea:	mov    QWORD PTR [rbp-0x8],rdi
  4158ee:	mov    DWORD PTR [rbp-0xc],esi
  4158f1:	mov    eax,DWORD PTR [rbp-0xc]
  4158f4:	and    eax,0x1
  4158f7:	test   eax,eax
  4158f9:	setne  al
  4158fc:	mov    edx,eax
  4158fe:	mov    rax,QWORD PTR [rbp-0x8]
  415902:	mov    BYTE PTR [rax+0x32],dl
  415905:	mov    eax,DWORD PTR [rbp-0xc]
  415908:	and    eax,0x2
  41590b:	test   eax,eax
  41590d:	setne  al
  415910:	mov    edx,eax
  415912:	mov    rax,QWORD PTR [rbp-0x8]
  415916:	mov    BYTE PTR [rax+0x33],dl
  415919:	mov    eax,DWORD PTR [rbp-0xc]
  41591c:	and    eax,0x4
  41591f:	test   eax,eax
  415921:	setne  al
  415924:	mov    edx,eax
  415926:	mov    rax,QWORD PTR [rbp-0x8]
  41592a:	mov    BYTE PTR [rax+0x34],dl
  41592d:	mov    eax,DWORD PTR [rbp-0xc]
  415930:	and    eax,0x8
  415933:	test   eax,eax
  415935:	setne  al
  415938:	mov    edx,eax
  41593a:	mov    rax,QWORD PTR [rbp-0x8]
  41593e:	mov    BYTE PTR [rax+0x35],dl
  415941:	mov    eax,DWORD PTR [rbp-0xc]
  415944:	and    eax,0x10
  415947:	test   eax,eax
  415949:	je     41595c <_start@@Base+0x107fc>
  41594b:	mov    rax,QWORD PTR [rbp-0x8]
  41594f:	mov    esi,0x2
  415954:	mov    rdi,rax
  415957:	call   415885 <_start@@Base+0x10725>
  41595c:	mov    eax,DWORD PTR [rbp-0xc]
  41595f:	and    eax,0x20
  415962:	test   eax,eax
  415964:	je     415972 <_start@@Base+0x10812>
  415966:	mov    rax,QWORD PTR [rbp-0x8]
  41596a:	mov    rdi,rax
  41596d:	call   4158a0 <_start@@Base+0x10740>
  415972:	nop
  415973:	leave  
  415974:	ret    
  415975:	push   rbp
  415976:	mov    rbp,rsp
  415979:	sub    rsp,0x10
  41597d:	mov    QWORD PTR [rbp-0x8],rdi
  415981:	mov    QWORD PTR [rbp-0x10],rsi
  415985:	mov    rax,QWORD PTR [rbp-0x10]
  415989:	test   rax,rax
  41598c:	je     415996 <_start@@Base+0x10836>
  41598e:	cmp    rax,0x11
  415992:	je     4159b0 <_start@@Base+0x10850>
  415994:	jmp    4159ca <_start@@Base+0x1086a>
  415996:	mov    rax,QWORD PTR [rbp-0x8]
  41599a:	mov    edx,0xa
  41599f:	lea    rsi,[rip+0x206cf]        # 436075 <_IO_stdin_used@@Base+0x75>
  4159a6:	mov    rdi,rax
  4159a9:	call   42d60a <flatcc_json_printer_enum@@Base>
  4159ae:	jmp    4159de <_start@@Base+0x1087e>
  4159b0:	mov    rax,QWORD PTR [rbp-0x8]
  4159b4:	mov    edx,0x3
  4159b9:	lea    rsi,[rip+0x206c0]        # 436080 <_IO_stdin_used@@Base+0x80>
  4159c0:	mov    rdi,rax
  4159c3:	call   42d60a <flatcc_json_printer_enum@@Base>
  4159c8:	jmp    4159de <_start@@Base+0x1087e>
  4159ca:	mov    rdx,QWORD PTR [rbp-0x10]
  4159ce:	mov    rax,QWORD PTR [rbp-0x8]
  4159d2:	mov    rsi,rdx
  4159d5:	mov    rdi,rax
  4159d8:	call   42d53e <flatcc_json_printer_int64@@Base>
  4159dd:	nop
  4159de:	nop
  4159df:	leave  
  4159e0:	ret    
  4159e1:	push   rbp
  4159e2:	mov    rbp,rsp
  4159e5:	mov    QWORD PTR [rbp-0x8],rdi
  4159e9:	mov    QWORD PTR [rbp-0x10],rsi
  4159ed:	nop
  4159ee:	pop    rbp
  4159ef:	ret    
  4159f0:	push   rbp
  4159f1:	mov    rbp,rsp
  4159f4:	sub    rsp,0x10
  4159f8:	mov    QWORD PTR [rbp-0x8],rdi
  4159fc:	mov    DWORD PTR [rbp-0xc],esi
  4159ff:	mov    eax,DWORD PTR [rbp-0xc]
  415a02:	cmp    eax,0xfffffff5
  415a05:	je     415a2b <_start@@Base+0x108cb>
  415a07:	cmp    eax,0xfffffff6
  415a0a:	je     415a45 <_start@@Base+0x108e5>
  415a0c:	cmp    eax,0xfffffff4
  415a0f:	jne    415a5f <_start@@Base+0x108ff>
  415a11:	mov    rax,QWORD PTR [rbp-0x8]
  415a15:	mov    edx,0x4
  415a1a:	lea    rsi,[rip+0x20663]        # 436084 <_IO_stdin_used@@Base+0x84>
  415a21:	mov    rdi,rax
  415a24:	call   42d60a <flatcc_json_printer_enum@@Base>
  415a29:	jmp    415a71 <_start@@Base+0x10911>
  415a2b:	mov    rax,QWORD PTR [rbp-0x8]
  415a2f:	mov    edx,0x4
  415a34:	lea    rsi,[rip+0x2064e]        # 436089 <_IO_stdin_used@@Base+0x89>
  415a3b:	mov    rdi,rax
  415a3e:	call   42d60a <flatcc_json_printer_enum@@Base>
  415a43:	jmp    415a71 <_start@@Base+0x10911>
  415a45:	mov    rax,QWORD PTR [rbp-0x8]
  415a49:	mov    edx,0x4
  415a4e:	lea    rsi,[rip+0x20639]        # 43608e <_IO_stdin_used@@Base+0x8e>
  415a55:	mov    rdi,rax
  415a58:	call   42d60a <flatcc_json_printer_enum@@Base>
  415a5d:	jmp    415a71 <_start@@Base+0x10911>
  415a5f:	mov    edx,DWORD PTR [rbp-0xc]
  415a62:	mov    rax,QWORD PTR [rbp-0x8]
  415a66:	mov    esi,edx
  415a68:	mov    rdi,rax
  415a6b:	call   42d4ff <flatcc_json_printer_int32@@Base>
  415a70:	nop
  415a71:	nop
  415a72:	leave  
  415a73:	ret    
  415a74:	push   rbp
  415a75:	mov    rbp,rsp
  415a78:	sub    rsp,0x10
  415a7c:	mov    QWORD PTR [rbp-0x8],rdi
  415a80:	mov    DWORD PTR [rbp-0xc],esi
  415a83:	mov    eax,DWORD PTR [rbp-0xc]
  415a86:	cmp    eax,0xffffffff
  415a89:	je     415abd <_start@@Base+0x1095d>
  415a8b:	cmp    eax,0xffffffff
  415a8e:	jg     415a97 <_start@@Base+0x10937>
  415a90:	cmp    eax,0xfffffffe
  415a93:	je     415aa3 <_start@@Base+0x10943>
  415a95:	jmp    415b0b <_start@@Base+0x109ab>
  415a97:	cmp    eax,0x2
  415a9a:	je     415ad7 <_start@@Base+0x10977>
  415a9c:	cmp    eax,0x2a
  415a9f:	je     415af1 <_start@@Base+0x10991>
  415aa1:	jmp    415b0b <_start@@Base+0x109ab>
  415aa3:	mov    rax,QWORD PTR [rbp-0x8]
  415aa7:	mov    edx,0x6
  415aac:	lea    rsi,[rip+0x205e0]        # 436093 <_IO_stdin_used@@Base+0x93>
  415ab3:	mov    rdi,rax
  415ab6:	call   42d60a <flatcc_json_printer_enum@@Base>
  415abb:	jmp    415b1d <_start@@Base+0x109bd>
  415abd:	mov    rax,QWORD PTR [rbp-0x8]
  415ac1:	mov    edx,0x7
  415ac6:	lea    rsi,[rip+0x205cd]        # 43609a <_IO_stdin_used@@Base+0x9a>
  415acd:	mov    rdi,rax
  415ad0:	call   42d60a <flatcc_json_printer_enum@@Base>
  415ad5:	jmp    415b1d <_start@@Base+0x109bd>
  415ad7:	mov    rax,QWORD PTR [rbp-0x8]
  415adb:	mov    edx,0x4
  415ae0:	lea    rsi,[rip+0x205bb]        # 4360a2 <_IO_stdin_used@@Base+0xa2>
  415ae7:	mov    rdi,rax
  415aea:	call   42d60a <flatcc_json_printer_enum@@Base>
  415aef:	jmp    415b1d <_start@@Base+0x109bd>
  415af1:	mov    rax,QWORD PTR [rbp-0x8]
  415af5:	mov    edx,0x4
  415afa:	lea    rsi,[rip+0x205a6]        # 4360a7 <_IO_stdin_used@@Base+0xa7>
  415b01:	mov    rdi,rax
  415b04:	call   42d60a <flatcc_json_printer_enum@@Base>
  415b09:	jmp    415b1d <_start@@Base+0x109bd>
  415b0b:	mov    edx,DWORD PTR [rbp-0xc]
  415b0e:	mov    rax,QWORD PTR [rbp-0x8]
  415b12:	mov    esi,edx
  415b14:	mov    rdi,rax
  415b17:	call   42d4ff <flatcc_json_printer_int32@@Base>
  415b1c:	nop
  415b1d:	nop
  415b1e:	leave  
  415b1f:	ret    
  415b20:	push   rbp
  415b21:	mov    rbp,rsp
  415b24:	sub    rsp,0x10
  415b28:	mov    QWORD PTR [rbp-0x8],rdi
  415b2c:	mov    DWORD PTR [rbp-0xc],esi
  415b2f:	mov    eax,DWORD PTR [rbp-0xc]
  415b32:	cmp    eax,0x3
  415b35:	je     415b5d <_start@@Base+0x109fd>
  415b37:	cmp    eax,0x7eafbeaf
  415b3c:	je     415b77 <_start@@Base+0x10a17>
  415b3e:	cmp    eax,0xfffffffe
  415b41:	jne    415b91 <_start@@Base+0x10a31>
  415b43:	mov    rax,QWORD PTR [rbp-0x8]
  415b47:	mov    edx,0x6
  415b4c:	lea    rsi,[rip+0x20559]        # 4360ac <_IO_stdin_used@@Base+0xac>
  415b53:	mov    rdi,rax
  415b56:	call   42d60a <flatcc_json_printer_enum@@Base>
  415b5b:	jmp    415ba3 <_start@@Base+0x10a43>
  415b5d:	mov    rax,QWORD PTR [rbp-0x8]
  415b61:	mov    edx,0x4
  415b66:	lea    rsi,[rip+0x20546]        # 4360b3 <_IO_stdin_used@@Base+0xb3>
  415b6d:	mov    rdi,rax
  415b70:	call   42d60a <flatcc_json_printer_enum@@Base>
  415b75:	jmp    415ba3 <_start@@Base+0x10a43>
  415b77:	mov    rax,QWORD PTR [rbp-0x8]
  415b7b:	mov    edx,0x4
  415b80:	lea    rsi,[rip+0x20531]        # 4360b8 <_IO_stdin_used@@Base+0xb8>
  415b87:	mov    rdi,rax
  415b8a:	call   42d60a <flatcc_json_printer_enum@@Base>
  415b8f:	jmp    415ba3 <_start@@Base+0x10a43>
  415b91:	mov    edx,DWORD PTR [rbp-0xc]
  415b94:	mov    rax,QWORD PTR [rbp-0x8]
  415b98:	mov    esi,edx
  415b9a:	mov    rdi,rax
  415b9d:	call   42d4ff <flatcc_json_printer_int32@@Base>
  415ba2:	nop
  415ba3:	nop
  415ba4:	leave  
  415ba5:	ret    
  415ba6:	push   rbp
  415ba7:	mov    rbp,rsp
  415baa:	sub    rsp,0x20
  415bae:	mov    QWORD PTR [rbp-0x18],rdi
  415bb2:	mov    eax,esi
  415bb4:	mov    BYTE PTR [rbp-0x1c],al
  415bb7:	movzx  eax,BYTE PTR [rbp-0x1c]
  415bbb:	mov    BYTE PTR [rbp-0x9],al
  415bbe:	movzx  eax,BYTE PTR [rbp-0x9]
  415bc2:	movzx  edx,BYTE PTR [rbp-0x9]
  415bc6:	sub    edx,0x1
  415bc9:	and    eax,edx
  415bcb:	test   eax,eax
  415bcd:	setne  al
  415bd0:	movzx  eax,al
  415bd3:	mov    DWORD PTR [rbp-0x4],eax
  415bd6:	mov    DWORD PTR [rbp-0x8],0x0
  415bdd:	movzx  eax,BYTE PTR [rbp-0x9]
  415be1:	and    eax,0xf4
  415be6:	test   eax,eax
  415be8:	jne    415bf0 <_start@@Base+0x10a90>
  415bea:	cmp    BYTE PTR [rbp-0x9],0x0
  415bee:	jne    415c07 <_start@@Base+0x10aa7>
  415bf0:	movsx  edx,BYTE PTR [rbp-0x1c]
  415bf4:	mov    rax,QWORD PTR [rbp-0x18]
  415bf8:	mov    esi,edx
  415bfa:	mov    rdi,rax
  415bfd:	call   42d47a <flatcc_json_printer_int8@@Base>
  415c02:	jmp    415caa <_start@@Base+0x10b4a>
  415c07:	mov    edx,DWORD PTR [rbp-0x4]
  415c0a:	mov    rax,QWORD PTR [rbp-0x18]
  415c0e:	mov    esi,edx
  415c10:	mov    rdi,rax
  415c13:	call   42d639 <flatcc_json_printer_delimit_enum_flags@@Base>
  415c18:	movzx  eax,BYTE PTR [rbp-0x9]
  415c1c:	and    eax,0x1
  415c1f:	test   eax,eax
  415c21:	je     415c43 <_start@@Base+0x10ae3>
  415c23:	mov    eax,DWORD PTR [rbp-0x8]
  415c26:	lea    edx,[rax+0x1]
  415c29:	mov    DWORD PTR [rbp-0x8],edx
  415c2c:	mov    rdi,QWORD PTR [rbp-0x18]
  415c30:	mov    ecx,0x3
  415c35:	lea    rdx,[rip+0x20481]        # 4360bd <_IO_stdin_used@@Base+0xbd>
  415c3c:	mov    esi,eax
  415c3e:	call   42d68b <flatcc_json_printer_enum_flag@@Base>
  415c43:	movzx  eax,BYTE PTR [rbp-0x9]
  415c47:	and    eax,0x2
  415c4a:	test   eax,eax
  415c4c:	je     415c6e <_start@@Base+0x10b0e>
  415c4e:	mov    eax,DWORD PTR [rbp-0x8]
  415c51:	lea    edx,[rax+0x1]
  415c54:	mov    DWORD PTR [rbp-0x8],edx
  415c57:	mov    rdi,QWORD PTR [rbp-0x18]
  415c5b:	mov    ecx,0x5
  415c60:	lea    rdx,[rip+0x2045a]        # 4360c1 <_IO_stdin_used@@Base+0xc1>
  415c67:	mov    esi,eax
  415c69:	call   42d68b <flatcc_json_printer_enum_flag@@Base>
  415c6e:	movzx  eax,BYTE PTR [rbp-0x9]
  415c72:	and    eax,0x8
  415c75:	test   eax,eax
  415c77:	je     415c99 <_start@@Base+0x10b39>
  415c79:	mov    eax,DWORD PTR [rbp-0x8]
  415c7c:	lea    edx,[rax+0x1]
  415c7f:	mov    DWORD PTR [rbp-0x8],edx
  415c82:	mov    rdi,QWORD PTR [rbp-0x18]
  415c86:	mov    ecx,0x4
  415c8b:	lea    rdx,[rip+0x20435]        # 4360c7 <_IO_stdin_used@@Base+0xc7>
  415c92:	mov    esi,eax
  415c94:	call   42d68b <flatcc_json_printer_enum_flag@@Base>
  415c99:	mov    edx,DWORD PTR [rbp-0x4]
  415c9c:	mov    rax,QWORD PTR [rbp-0x18]
  415ca0:	mov    esi,edx
  415ca2:	mov    rdi,rax
  415ca5:	call   42d639 <flatcc_json_printer_delimit_enum_flags@@Base>
  415caa:	leave  
  415cab:	ret    
  415cac:	push   rbp
  415cad:	mov    rbp,rsp
  415cb0:	sub    rsp,0x10
  415cb4:	mov    QWORD PTR [rbp-0x8],rdi
  415cb8:	mov    DWORD PTR [rbp-0xc],esi
  415cbb:	mov    eax,DWORD PTR [rbp-0xc]
  415cbe:	test   eax,eax
  415cc0:	jne    415cdc <_start@@Base+0x10b7c>
  415cc2:	mov    rax,QWORD PTR [rbp-0x8]
  415cc6:	mov    edx,0x1
  415ccb:	lea    rsi,[rip+0x203fa]        # 4360cc <_IO_stdin_used@@Base+0xcc>
  415cd2:	mov    rdi,rax
  415cd5:	call   42d60a <flatcc_json_printer_enum@@Base>
  415cda:	jmp    415cee <_start@@Base+0x10b8e>
  415cdc:	mov    edx,DWORD PTR [rbp-0xc]
  415cdf:	mov    rax,QWORD PTR [rbp-0x8]
  415ce3:	mov    esi,edx
  415ce5:	mov    rdi,rax
  415ce8:	call   42d4ff <flatcc_json_printer_int32@@Base>
  415ced:	nop
  415cee:	nop
  415cef:	leave  
  415cf0:	ret    
  415cf1:	push   rbp
  415cf2:	mov    rbp,rsp
  415cf5:	sub    rsp,0x10
  415cf9:	mov    QWORD PTR [rbp-0x8],rdi
  415cfd:	mov    eax,esi
  415cff:	mov    BYTE PTR [rbp-0xc],al
  415d02:	movzx  eax,BYTE PTR [rbp-0xc]
  415d06:	cmp    eax,0x1
  415d09:	jne    415d25 <_start@@Base+0x10bc5>
  415d0b:	mov    rax,QWORD PTR [rbp-0x8]
  415d0f:	mov    edx,0x11
  415d14:	lea    rsi,[rip+0x203b3]        # 4360ce <_IO_stdin_used@@Base+0xce>
  415d1b:	mov    rdi,rax
  415d1e:	call   42d60a <flatcc_json_printer_enum@@Base>
  415d23:	jmp    415d3e <_start@@Base+0x10bde>
  415d25:	mov    rax,QWORD PTR [rbp-0x8]
  415d29:	mov    edx,0x4
  415d2e:	lea    rsi,[rip+0x203ab]        # 4360e0 <_IO_stdin_used@@Base+0xe0>
  415d35:	mov    rdi,rax
  415d38:	call   42d60a <flatcc_json_printer_enum@@Base>
  415d3d:	nop
  415d3e:	nop
  415d3f:	leave  
  415d40:	ret    
  415d41:	push   rbp
  415d42:	mov    rbp,rsp
  415d45:	sub    rsp,0x10
  415d49:	mov    QWORD PTR [rbp-0x8],rdi
  415d4d:	mov    QWORD PTR [rbp-0x10],rsi
  415d51:	mov    rax,QWORD PTR [rbp-0x10]
  415d55:	movzx  eax,BYTE PTR [rax+0xc]
  415d59:	movzx  eax,al
  415d5c:	cmp    eax,0x1
  415d5f:	je     415d63 <_start@@Base+0x10c03>
  415d61:	jmp    415d7e <_start@@Base+0x10c1e>
  415d63:	mov    rcx,QWORD PTR [rbp-0x10]
  415d67:	mov    rax,QWORD PTR [rbp-0x8]
  415d6b:	lea    rdx,[rip+0x5d8]        # 41634a <_start@@Base+0x111ea>
  415d72:	mov    rsi,rcx
  415d75:	mov    rdi,rax
  415d78:	call   433ff1 <flatcc_json_printer_union_table@@Base>
  415d7d:	nop
  415d7e:	nop
  415d7f:	leave  
  415d80:	ret    
  415d81:	push   rbp
  415d82:	mov    rbp,rsp
  415d85:	sub    rsp,0x10
  415d89:	mov    QWORD PTR [rbp-0x8],rdi
  415d8d:	mov    eax,esi
  415d8f:	mov    BYTE PTR [rbp-0xc],al
  415d92:	movzx  eax,BYTE PTR [rbp-0xc]
  415d96:	cmp    eax,0x2
  415d99:	je     415dcd <_start@@Base+0x10c6d>
  415d9b:	cmp    eax,0x2
  415d9e:	jg     415da7 <_start@@Base+0x10c47>
  415da0:	cmp    eax,0x1
  415da3:	je     415db3 <_start@@Base+0x10c53>
  415da5:	jmp    415e1b <_start@@Base+0x10cbb>
  415da7:	cmp    eax,0x3
  415daa:	je     415de7 <_start@@Base+0x10c87>
  415dac:	cmp    eax,0x4
  415daf:	je     415e01 <_start@@Base+0x10ca1>
  415db1:	jmp    415e1b <_start@@Base+0x10cbb>
  415db3:	mov    rax,QWORD PTR [rbp-0x8]
  415db7:	mov    edx,0x7
  415dbc:	lea    rsi,[rip+0x20322]        # 4360e5 <_IO_stdin_used@@Base+0xe5>
  415dc3:	mov    rdi,rax
  415dc6:	call   42d60a <flatcc_json_printer_enum@@Base>
  415dcb:	jmp    415e34 <_start@@Base+0x10cd4>
  415dcd:	mov    rax,QWORD PTR [rbp-0x8]
  415dd1:	mov    edx,0x17
  415dd6:	lea    rsi,[rip+0x20310]        # 4360ed <_IO_stdin_used@@Base+0xed>
  415ddd:	mov    rdi,rax
  415de0:	call   42d60a <flatcc_json_printer_enum@@Base>
  415de5:	jmp    415e34 <_start@@Base+0x10cd4>
  415de7:	mov    rax,QWORD PTR [rbp-0x8]
  415deb:	mov    edx,0x8
  415df0:	lea    rsi,[rip+0x2030e]        # 436105 <_IO_stdin_used@@Base+0x105>
  415df7:	mov    rdi,rax
  415dfa:	call   42d60a <flatcc_json_printer_enum@@Base>
  415dff:	jmp    415e34 <_start@@Base+0x10cd4>
  415e01:	mov    rax,QWORD PTR [rbp-0x8]
  415e05:	mov    edx,0x3
  415e0a:	lea    rsi,[rip+0x202fd]        # 43610e <_IO_stdin_used@@Base+0x10e>
  415e11:	mov    rdi,rax
  415e14:	call   42d60a <flatcc_json_printer_enum@@Base>
  415e19:	jmp    415e34 <_start@@Base+0x10cd4>
  415e1b:	mov    rax,QWORD PTR [rbp-0x8]
  415e1f:	mov    edx,0x4
  415e24:	lea    rsi,[rip+0x202b5]        # 4360e0 <_IO_stdin_used@@Base+0xe0>
  415e2b:	mov    rdi,rax
  415e2e:	call   42d60a <flatcc_json_printer_enum@@Base>
  415e33:	nop
  415e34:	nop
  415e35:	leave  
  415e36:	ret    
  415e37:	push   rbp
  415e38:	mov    rbp,rsp
  415e3b:	sub    rsp,0x10
  415e3f:	mov    QWORD PTR [rbp-0x8],rdi
  415e43:	mov    QWORD PTR [rbp-0x10],rsi
  415e47:	mov    rax,QWORD PTR [rbp-0x10]
  415e4b:	movzx  eax,BYTE PTR [rax+0xc]
  415e4f:	movzx  eax,al
  415e52:	cmp    eax,0x2
  415e55:	je     415e8b <_start@@Base+0x10d2b>
  415e57:	cmp    eax,0x2
  415e5a:	jg     415e63 <_start@@Base+0x10d03>
  415e5c:	cmp    eax,0x1
  415e5f:	je     415e6f <_start@@Base+0x10d0f>
  415e61:	jmp    415ede <_start@@Base+0x10d7e>
  415e63:	cmp    eax,0x3
  415e66:	je     415ea7 <_start@@Base+0x10d47>
  415e68:	cmp    eax,0x4
  415e6b:	je     415ec3 <_start@@Base+0x10d63>
  415e6d:	jmp    415ede <_start@@Base+0x10d7e>
  415e6f:	mov    rcx,QWORD PTR [rbp-0x10]
  415e73:	mov    rax,QWORD PTR [rbp-0x8]
  415e77:	lea    rdx,[rip+0xba7]        # 416a25 <_start@@Base+0x118c5>
  415e7e:	mov    rsi,rcx
  415e81:	mov    rdi,rax
  415e84:	call   433ff1 <flatcc_json_printer_union_table@@Base>
  415e89:	jmp    415ede <_start@@Base+0x10d7e>
  415e8b:	mov    rcx,QWORD PTR [rbp-0x10]
  415e8f:	mov    rax,QWORD PTR [rbp-0x8]
  415e93:	lea    rdx,[rip+0x519]        # 4163b3 <_start@@Base+0x11253>
  415e9a:	mov    rsi,rcx
  415e9d:	mov    rdi,rax
  415ea0:	call   433ff1 <flatcc_json_printer_union_table@@Base>
  415ea5:	jmp    415ede <_start@@Base+0x10d7e>
  415ea7:	mov    rcx,QWORD PTR [rbp-0x10]
  415eab:	mov    rax,QWORD PTR [rbp-0x8]
  415eaf:	lea    rdx,[rip+0x4a3]        # 416359 <_start@@Base+0x111f9>
  415eb6:	mov    rsi,rcx
  415eb9:	mov    rdi,rax
  415ebc:	call   433ff1 <flatcc_json_printer_union_table@@Base>
  415ec1:	jmp    415ede <_start@@Base+0x10d7e>
  415ec3:	mov    rcx,QWORD PTR [rbp-0x10]
  415ec7:	mov    rax,QWORD PTR [rbp-0x8]
  415ecb:	lea    rdx,[rip+0x76d]        # 41663f <_start@@Base+0x114df>
  415ed2:	mov    rsi,rcx
  415ed5:	mov    rdi,rax
  415ed8:	call   433ff1 <flatcc_json_printer_union_table@@Base>
  415edd:	nop
  415ede:	nop
  415edf:	leave  
  415ee0:	ret    
  415ee1:	push   rbp
  415ee2:	mov    rbp,rsp
  415ee5:	sub    rsp,0x10
  415ee9:	mov    QWORD PTR [rbp-0x8],rdi
  415eed:	mov    eax,esi
  415eef:	mov    BYTE PTR [rbp-0xc],al
  415ef2:	movzx  eax,BYTE PTR [rbp-0xc]
  415ef6:	cmp    eax,0x9
  415ef9:	je     415f67 <_start@@Base+0x10e07>
  415efb:	cmp    eax,0x9
  415efe:	jg     415f0f <_start@@Base+0x10daf>
  415f00:	cmp    eax,0x2
  415f03:	je     415f2d <_start@@Base+0x10dcd>
  415f05:	cmp    eax,0x8
  415f08:	je     415f4a <_start@@Base+0x10dea>
  415f0a:	jmp    415fcf <_start@@Base+0x10e6f>
  415f0f:	cmp    eax,0xb
  415f12:	je     415f9b <_start@@Base+0x10e3b>
  415f18:	cmp    eax,0xb
  415f1b:	jl     415f81 <_start@@Base+0x10e21>
  415f1d:	cmp    eax,0xff
  415f22:	je     415fb5 <_start@@Base+0x10e55>
  415f28:	jmp    415fcf <_start@@Base+0x10e6f>
  415f2d:	mov    rax,QWORD PTR [rbp-0x8]
  415f31:	mov    edx,0x5
  415f36:	lea    rsi,[rip+0x201d5]        # 436112 <_IO_stdin_used@@Base+0x112>
  415f3d:	mov    rdi,rax
  415f40:	call   42d60a <flatcc_json_printer_enum@@Base>
  415f45:	jmp    415fe8 <_start@@Base+0x10e88>
  415f4a:	mov    rax,QWORD PTR [rbp-0x8]
  415f4e:	mov    edx,0x8
  415f53:	lea    rsi,[rip+0x201be]        # 436118 <_IO_stdin_used@@Base+0x118>
  415f5a:	mov    rdi,rax
  415f5d:	call   42d60a <flatcc_json_printer_enum@@Base>
  415f62:	jmp    415fe8 <_start@@Base+0x10e88>
  415f67:	mov    rax,QWORD PTR [rbp-0x8]
  415f6b:	mov    edx,0x5
  415f70:	lea    rsi,[rip+0x201aa]        # 436121 <_IO_stdin_used@@Base+0x121>
  415f77:	mov    rdi,rax
  415f7a:	call   42d60a <flatcc_json_printer_enum@@Base>
  415f7f:	jmp    415fe8 <_start@@Base+0x10e88>
  415f81:	mov    rax,QWORD PTR [rbp-0x8]
  415f85:	mov    edx,0x7
  415f8a:	lea    rsi,[rip+0x20196]        # 436127 <_IO_stdin_used@@Base+0x127>
  415f91:	mov    rdi,rax
  415f94:	call   42d60a <flatcc_json_printer_enum@@Base>
  415f99:	jmp    415fe8 <_start@@Base+0x10e88>
  415f9b:	mov    rax,QWORD PTR [rbp-0x8]
  415f9f:	mov    edx,0x5
  415fa4:	lea    rsi,[rip+0x20184]        # 43612f <_IO_stdin_used@@Base+0x12f>
  415fab:	mov    rdi,rax
  415fae:	call   42d60a <flatcc_json_printer_enum@@Base>
  415fb3:	jmp    415fe8 <_start@@Base+0x10e88>
  415fb5:	mov    rax,QWORD PTR [rbp-0x8]
  415fb9:	mov    edx,0x6
  415fbe:	lea    rsi,[rip+0x20170]        # 436135 <_IO_stdin_used@@Base+0x135>
  415fc5:	mov    rdi,rax
  415fc8:	call   42d60a <flatcc_json_printer_enum@@Base>
  415fcd:	jmp    415fe8 <_start@@Base+0x10e88>
  415fcf:	mov    rax,QWORD PTR [rbp-0x8]
  415fd3:	mov    edx,0x4
  415fd8:	lea    rsi,[rip+0x20101]        # 4360e0 <_IO_stdin_used@@Base+0xe0>
  415fdf:	mov    rdi,rax
  415fe2:	call   42d60a <flatcc_json_printer_enum@@Base>
  415fe7:	nop
  415fe8:	nop
  415fe9:	leave  
  415fea:	ret    
  415feb:	push   rbp
  415fec:	mov    rbp,rsp
  415fef:	sub    rsp,0x10
  415ff3:	mov    QWORD PTR [rbp-0x8],rdi
  415ff7:	mov    QWORD PTR [rbp-0x10],rsi
  415ffb:	mov    rax,QWORD PTR [rbp-0x10]
  415fff:	movzx  eax,BYTE PTR [rax+0xc]
  416003:	movzx  eax,al
  416006:	cmp    eax,0x9
  416009:	je     416075 <_start@@Base+0x10f15>
  41600b:	cmp    eax,0x9
  41600e:	jg     41601f <_start@@Base+0x10ebf>
  416010:	cmp    eax,0x2
  416013:	je     41603d <_start@@Base+0x10edd>
  416015:	cmp    eax,0x8
  416018:	je     416059 <_start@@Base+0x10ef9>
  41601a:	jmp    4160d6 <_start@@Base+0x10f76>
  41601f:	cmp    eax,0xb
  416022:	je     4160ad <_start@@Base+0x10f4d>
  416028:	cmp    eax,0xb
  41602b:	jl     416091 <_start@@Base+0x10f31>
  41602d:	cmp    eax,0xff
  416032:	je     4160c2 <_start@@Base+0x10f62>
  416038:	jmp    4160d6 <_start@@Base+0x10f76>
  41603d:	mov    rcx,QWORD PTR [rbp-0x10]
  416041:	mov    rax,QWORD PTR [rbp-0x8]
  416045:	lea    rdx,[rip+0x1191]        # 4171dd <_start@@Base+0x1207d>
  41604c:	mov    rsi,rcx
  41604f:	mov    rdi,rax
  416052:	call   433ff1 <flatcc_json_printer_union_table@@Base>
  416057:	jmp    4160d6 <_start@@Base+0x10f76>
  416059:	mov    rcx,QWORD PTR [rbp-0x10]
  41605d:	mov    rax,QWORD PTR [rbp-0x8]
  416061:	lea    rdx,[rip+0x26e]        # 4162d6 <_start@@Base+0x11176>
  416068:	mov    rsi,rcx
  41606b:	mov    rdi,rax
  41606e:	call   43403c <flatcc_json_printer_union_struct@@Base>
  416073:	jmp    4160d6 <_start@@Base+0x10f76>
  416075:	mov    rcx,QWORD PTR [rbp-0x10]
  416079:	mov    rax,QWORD PTR [rbp-0x8]
  41607d:	lea    rdx,[rip+0x28c]        # 416310 <_start@@Base+0x111b0>
  416084:	mov    rsi,rcx
  416087:	mov    rdi,rax
  41608a:	call   43403c <flatcc_json_printer_union_struct@@Base>
  41608f:	jmp    4160d6 <_start@@Base+0x10f76>
  416091:	mov    rcx,QWORD PTR [rbp-0x10]
  416095:	mov    rax,QWORD PTR [rbp-0x8]
  416099:	lea    rdx,[rip+0x270]        # 416310 <_start@@Base+0x111b0>
  4160a0:	mov    rsi,rcx
  4160a3:	mov    rdi,rax
  4160a6:	call   43403c <flatcc_json_printer_union_struct@@Base>
  4160ab:	jmp    4160d6 <_start@@Base+0x10f76>
  4160ad:	mov    rdx,QWORD PTR [rbp-0x10]
  4160b1:	mov    rax,QWORD PTR [rbp-0x8]
  4160b5:	mov    rsi,rdx
  4160b8:	mov    rdi,rax
  4160bb:	call   4340f4 <flatcc_json_printer_union_string@@Base>
  4160c0:	jmp    4160d6 <_start@@Base+0x10f76>
  4160c2:	mov    rdx,QWORD PTR [rbp-0x10]
  4160c6:	mov    rax,QWORD PTR [rbp-0x8]
  4160ca:	mov    rsi,rdx
  4160cd:	mov    rdi,rax
  4160d0:	call   4340f4 <flatcc_json_printer_union_string@@Base>
  4160d5:	nop
  4160d6:	nop
  4160d7:	leave  
  4160d8:	ret    
  4160d9:	push   rbp
  4160da:	mov    rbp,rsp
  4160dd:	mov    QWORD PTR [rbp-0x8],rdi
  4160e1:	mov    QWORD PTR [rbp-0x10],rsi
  4160e5:	nop
  4160e6:	pop    rbp
  4160e7:	ret    
  4160e8:	push   rbp
  4160e9:	mov    rbp,rsp
  4160ec:	sub    rsp,0x10
  4160f0:	mov    QWORD PTR [rbp-0x8],rdi
  4160f4:	mov    QWORD PTR [rbp-0x10],rsi
  4160f8:	mov    rdx,QWORD PTR [rbp-0x10]
  4160fc:	mov    rax,QWORD PTR [rbp-0x8]
  416100:	mov    r9d,0x1
  416106:	lea    r8,[rip+0x2002f]        # 43613c <_IO_stdin_used@@Base+0x13c>
  41610d:	mov    ecx,0x0
  416112:	mov    esi,0x0
  416117:	mov    rdi,rax
  41611a:	call   42f120 <flatcc_json_printer_int16_struct_field@@Base>
  41611f:	mov    rdx,QWORD PTR [rbp-0x10]
  416123:	mov    rax,QWORD PTR [rbp-0x8]
  416127:	mov    r9d,0x1
  41612d:	lea    r8,[rip+0x2000a]        # 43613e <_IO_stdin_used@@Base+0x13e>
  416134:	mov    ecx,0x2
  416139:	mov    esi,0x1
  41613e:	mov    rdi,rax
  416141:	call   42f084 <flatcc_json_printer_int8_struct_field@@Base>
  416146:	nop
  416147:	leave  
  416148:	ret    
  416149:	push   rbp
  41614a:	mov    rbp,rsp
  41614d:	mov    QWORD PTR [rbp-0x8],rdi
  416151:	mov    QWORD PTR [rbp-0x10],rsi
  416155:	nop
  416156:	pop    rbp
  416157:	ret    
  416158:	push   rbp
  416159:	mov    rbp,rsp
  41615c:	sub    rsp,0x10
  416160:	mov    QWORD PTR [rbp-0x8],rdi
  416164:	mov    QWORD PTR [rbp-0x10],rsi
  416168:	mov    rdx,QWORD PTR [rbp-0x10]
  41616c:	mov    rax,QWORD PTR [rbp-0x8]
  416170:	mov    r9d,0x1
  416176:	lea    r8,[rip+0x1ff4f]        # 4360cc <_IO_stdin_used@@Base+0xcc>
  41617d:	mov    ecx,0x0
  416182:	mov    esi,0x0
  416187:	mov    rdi,rax
  41618a:	call   42f392 <flatcc_json_printer_float_struct_field@@Base>
  41618f:	mov    rdx,QWORD PTR [rbp-0x10]
  416193:	mov    rax,QWORD PTR [rbp-0x8]
  416197:	mov    r9d,0x1
  41619d:	lea    r8,[rip+0x1ff9c]        # 436140 <_IO_stdin_used@@Base+0x140>
  4161a4:	mov    ecx,0x4
  4161a9:	mov    esi,0x1
  4161ae:	mov    rdi,rax
  4161b1:	call   42f392 <flatcc_json_printer_float_struct_field@@Base>
  4161b6:	mov    rdx,QWORD PTR [rbp-0x10]
  4161ba:	mov    rax,QWORD PTR [rbp-0x8]
  4161be:	mov    r9d,0x1
  4161c4:	lea    r8,[rip+0x1ff77]        # 436142 <_IO_stdin_used@@Base+0x142>
  4161cb:	mov    ecx,0x8
  4161d0:	mov    esi,0x2
  4161d5:	mov    rdi,rax
  4161d8:	call   42f392 <flatcc_json_printer_float_struct_field@@Base>
  4161dd:	mov    rdx,QWORD PTR [rbp-0x10]
  4161e1:	mov    rax,QWORD PTR [rbp-0x8]
  4161e5:	mov    r9d,0x5
  4161eb:	lea    r8,[rip+0x1ff52]        # 436144 <_IO_stdin_used@@Base+0x144>
  4161f2:	mov    ecx,0x10
  4161f7:	mov    esi,0x3
  4161fc:	mov    rdi,rax
  4161ff:	call   42f431 <flatcc_json_printer_double_struct_field@@Base>
  416204:	mov    rdx,QWORD PTR [rbp-0x10]
  416208:	mov    rax,QWORD PTR [rbp-0x8]
  41620c:	sub    rsp,0x8
  416210:	lea    rcx,[rip+0xfffffffffffff98f]        # 415ba6 <_start@@Base+0x10a46>
  416217:	push   rcx
  416218:	mov    r9d,0x5
  41621e:	lea    r8,[rip+0x1ff25]        # 43614a <_IO_stdin_used@@Base+0x14a>
  416225:	mov    ecx,0x18
  41622a:	mov    esi,0x4
  41622f:	mov    rdi,rax
  416232:	call   42f7d0 <flatcc_json_printer_int8_enum_struct_field@@Base>
  416237:	add    rsp,0x10
  41623b:	mov    rdx,QWORD PTR [rbp-0x10]
  41623f:	mov    rax,QWORD PTR [rbp-0x8]
  416243:	sub    rsp,0x8
  416247:	lea    rcx,[rip+0xfffffffffffffe9a]        # 4160e8 <_start@@Base+0x10f88>
  41624e:	push   rcx
  41624f:	mov    r9d,0x5
  416255:	lea    r8,[rip+0x1fef4]        # 436150 <_IO_stdin_used@@Base+0x150>
  41625c:	mov    ecx,0x1a
  416261:	mov    esi,0x5
  416266:	mov    rdi,rax
  416269:	call   434128 <flatcc_json_printer_embedded_struct_field@@Base>
  41626e:	add    rsp,0x10
  416272:	nop
  416273:	leave  
  416274:	ret    
  416275:	push   rbp
  416276:	mov    rbp,rsp
  416279:	sub    rsp,0x10
  41627d:	mov    QWORD PTR [rbp-0x8],rdi
  416281:	mov    QWORD PTR [rbp-0x10],rsi
  416285:	mov    rdx,QWORD PTR [rbp-0x10]
  416289:	mov    rax,QWORD PTR [rbp-0x8]
  41628d:	mov    r9d,0x2
  416293:	lea    r8,[rip+0x1febc]        # 436156 <_IO_stdin_used@@Base+0x156>
  41629a:	mov    ecx,0x0
  41629f:	mov    esi,0x0
  4162a4:	mov    rdi,rax
  4162a7:	call   42ef4b <flatcc_json_printer_uint32_struct_field@@Base>
  4162ac:	mov    rdx,QWORD PTR [rbp-0x10]
  4162b0:	mov    rax,QWORD PTR [rbp-0x8]
  4162b4:	mov    r9d,0x8
  4162ba:	lea    r8,[rip+0x1fe98]        # 436159 <_IO_stdin_used@@Base+0x159>
  4162c1:	mov    ecx,0x4
  4162c6:	mov    esi,0x1
  4162cb:	mov    rdi,rax
  4162ce:	call   42ef4b <flatcc_json_printer_uint32_struct_field@@Base>
  4162d3:	nop
  4162d4:	leave  
  4162d5:	ret    
  4162d6:	push   rbp
  4162d7:	mov    rbp,rsp
  4162da:	sub    rsp,0x10
  4162de:	mov    QWORD PTR [rbp-0x8],rdi
  4162e2:	mov    QWORD PTR [rbp-0x10],rsi
  4162e6:	mov    rdx,QWORD PTR [rbp-0x10]
  4162ea:	mov    rax,QWORD PTR [rbp-0x8]
  4162ee:	mov    r9d,0xb
  4162f4:	lea    r8,[rip+0x1fe67]        # 436162 <_IO_stdin_used@@Base+0x162>
  4162fb:	mov    ecx,0x0
  416300:	mov    esi,0x0
  416305:	mov    rdi,rax
  416308:	call   42eeae <flatcc_json_printer_uint16_struct_field@@Base>
  41630d:	nop
  41630e:	leave  
  41630f:	ret    
  416310:	push   rbp
  416311:	mov    rbp,rsp
  416314:	sub    rsp,0x10
  416318:	mov    QWORD PTR [rbp-0x8],rdi
  41631c:	mov    QWORD PTR [rbp-0x10],rsi
  416320:	mov    rdx,QWORD PTR [rbp-0x10]
  416324:	mov    rax,QWORD PTR [rbp-0x8]
  416328:	mov    r9d,0xa
  41632e:	lea    r8,[rip+0x1fe39]        # 43616e <_IO_stdin_used@@Base+0x16e>
  416335:	mov    ecx,0x0
  41633a:	mov    esi,0x0
  41633f:	mov    rdi,rax
  416342:	call   42f1bd <flatcc_json_printer_int32_struct_field@@Base>
  416347:	nop
  416348:	leave  
  416349:	ret    
  41634a:	push   rbp
  41634b:	mov    rbp,rsp
  41634e:	mov    QWORD PTR [rbp-0x8],rdi
  416352:	mov    QWORD PTR [rbp-0x10],rsi
  416356:	nop
  416357:	pop    rbp
  416358:	ret    
  416359:	push   rbp
  41635a:	mov    rbp,rsp
  41635d:	mov    QWORD PTR [rbp-0x8],rdi
  416361:	mov    QWORD PTR [rbp-0x10],rsi
  416365:	nop
  416366:	pop    rbp
  416367:	ret    
  416368:	push   rbp
  416369:	mov    rbp,rsp
  41636c:	mov    QWORD PTR [rbp-0x8],rdi
  416370:	mov    QWORD PTR [rbp-0x10],rsi
  416374:	nop
  416375:	pop    rbp
  416376:	ret    
  416377:	push   rbp
  416378:	mov    rbp,rsp
  41637b:	sub    rsp,0x10
  41637f:	mov    QWORD PTR [rbp-0x8],rdi
  416383:	mov    QWORD PTR [rbp-0x10],rsi
  416387:	mov    rsi,QWORD PTR [rbp-0x10]
  41638b:	mov    rax,QWORD PTR [rbp-0x8]
  41638f:	lea    r9,[rip+0xfffffffffffffdb3]        # 416149 <_start@@Base+0x10fe9>
  416396:	mov    r8d,0x5
  41639c:	lea    rcx,[rip+0x1fdd6]        # 436179 <_IO_stdin_used@@Base+0x179>
  4163a3:	mov    edx,0x0
  4163a8:	mov    rdi,rax
  4163ab:	call   43421b <flatcc_json_printer_struct_field@@Base>
  4163b0:	nop
  4163b1:	leave  
  4163b2:	ret    
  4163b3:	push   rbp
  4163b4:	mov    rbp,rsp
  4163b7:	sub    rsp,0x10
  4163bb:	mov    QWORD PTR [rbp-0x8],rdi
  4163bf:	mov    QWORD PTR [rbp-0x10],rsi
  4163c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4163c7:	mov    rax,QWORD PTR [rbp-0x8]
  4163cb:	sub    rsp,0x8
  4163cf:	lea    rdx,[rip+0xfffffffffffff7d0]        # 415ba6 <_start@@Base+0x10a46>
  4163d6:	push   rdx
  4163d7:	mov    r9d,0x2
  4163dd:	mov    r8d,0x5
  4163e3:	lea    rcx,[rip+0x1fd95]        # 43617f <_IO_stdin_used@@Base+0x17f>
  4163ea:	mov    edx,0x0
  4163ef:	mov    rdi,rax
  4163f2:	call   42e8a3 <flatcc_json_printer_int8_enum_field@@Base>
  4163f7:	add    rsp,0x10
  4163fb:	mov    rsi,QWORD PTR [rbp-0x10]
  4163ff:	mov    rax,QWORD PTR [rbp-0x8]
  416403:	sub    rsp,0x8
  416407:	lea    rdx,[rip+0xfffffffffffff798]        # 415ba6 <_start@@Base+0x10a46>
  41640e:	push   rdx
  41640f:	mov    r9d,0x2
  416415:	mov    r8d,0x6
  41641b:	lea    rcx,[rip+0x1fd63]        # 436185 <_IO_stdin_used@@Base+0x185>
  416422:	mov    edx,0x1
  416427:	mov    rdi,rax
  41642a:	call   42e8a3 <flatcc_json_printer_int8_enum_field@@Base>
  41642f:	add    rsp,0x10
  416433:	mov    rsi,QWORD PTR [rbp-0x10]
  416437:	mov    rax,QWORD PTR [rbp-0x8]
  41643b:	mov    r9d,0x2
  416441:	mov    r8d,0x2
  416447:	lea    rcx,[rip+0x1fd3e]        # 43618c <_IO_stdin_used@@Base+0x18c>
  41644e:	mov    edx,0x2
  416453:	mov    rdi,rax
  416456:	call   42d9b7 <flatcc_json_printer_uint8_field@@Base>
  41645b:	mov    rsi,QWORD PTR [rbp-0x10]
  41645f:	mov    rax,QWORD PTR [rbp-0x8]
  416463:	mov    r9d,0x2
  416469:	mov    r8d,0x3
  41646f:	lea    rcx,[rip+0x1fd19]        # 43618f <_IO_stdin_used@@Base+0x18f>
  416476:	mov    edx,0x3
  41647b:	mov    rdi,rax
  41647e:	call   42d9b7 <flatcc_json_printer_uint8_field@@Base>
  416483:	nop
  416484:	leave  
  416485:	ret    
  416486:	push   rbp
  416487:	mov    rbp,rsp
  41648a:	sub    rsp,0x10
  41648e:	mov    QWORD PTR [rbp-0x8],rdi
  416492:	mov    QWORD PTR [rbp-0x10],rsi
  416496:	mov    rsi,QWORD PTR [rbp-0x10]
  41649a:	mov    rax,QWORD PTR [rbp-0x8]
  41649e:	lea    r9,[rip+0xfffffffffffffc34]        # 4160d9 <_start@@Base+0x10f79>
  4164a5:	mov    r8d,0x6
  4164ab:	lea    rcx,[rip+0x1fce1]        # 436193 <_IO_stdin_used@@Base+0x193>
  4164b2:	mov    edx,0x0
  4164b7:	mov    rdi,rax
  4164ba:	call   43421b <flatcc_json_printer_struct_field@@Base>
  4164bf:	mov    rsi,QWORD PTR [rbp-0x10]
  4164c3:	mov    rax,QWORD PTR [rbp-0x8]
  4164c7:	sub    rsp,0x8
  4164cb:	lea    rdx,[rip+0xfffffffffffff4a3]        # 415975 <_start@@Base+0x10815>
  4164d2:	push   rdx
  4164d3:	mov    r9d,0x0
  4164d9:	mov    r8d,0x6
  4164df:	lea    rcx,[rip+0x1fcb4]        # 43619a <_IO_stdin_used@@Base+0x19a>
  4164e6:	mov    edx,0x1
  4164eb:	mov    rdi,rax
  4164ee:	call   42ebe3 <flatcc_json_printer_int64_enum_field@@Base>
  4164f3:	add    rsp,0x10
  4164f7:	mov    rsi,QWORD PTR [rbp-0x10]
  4164fb:	mov    rax,QWORD PTR [rbp-0x8]
  4164ff:	sub    rsp,0x8
  416503:	lea    rdx,[rip+0xfffffffffffff46b]        # 415975 <_start@@Base+0x10815>
  41650a:	push   rdx
  41650b:	mov    r9d,0x0
  416511:	mov    r8d,0x7
  416517:	lea    rcx,[rip+0x1fc83]        # 4361a1 <_IO_stdin_used@@Base+0x1a1>
  41651e:	mov    edx,0x2
  416523:	mov    rdi,rax
  416526:	call   42ebe3 <flatcc_json_printer_int64_enum_field@@Base>
  41652b:	add    rsp,0x10
  41652f:	mov    rsi,QWORD PTR [rbp-0x10]
  416533:	mov    rax,QWORD PTR [rbp-0x8]
  416537:	mov    r9d,0x0
  41653d:	mov    r8d,0x7
  416543:	lea    rcx,[rip+0x1fc5f]        # 4361a9 <_IO_stdin_used@@Base+0x1a9>
  41654a:	mov    edx,0x3
  41654f:	mov    rdi,rax
  416552:	call   42df62 <flatcc_json_printer_int32_field@@Base>
  416557:	mov    rsi,QWORD PTR [rbp-0x10]
  41655b:	mov    rax,QWORD PTR [rbp-0x8]
  41655f:	sub    rsp,0x8
  416563:	lea    rdx,[rip+0xfffffffffffff40b]        # 415975 <_start@@Base+0x10815>
  41656a:	push   rdx
  41656b:	mov    r9d,0x0
  416571:	mov    r8d,0x7
  416577:	lea    rcx,[rip+0x1fc33]        # 4361b1 <_IO_stdin_used@@Base+0x1b1>
  41657e:	mov    edx,0x4
  416583:	mov    rdi,rax
  416586:	call   42ebe3 <flatcc_json_printer_int64_enum_field@@Base>
  41658b:	add    rsp,0x10
  41658f:	mov    rsi,QWORD PTR [rbp-0x10]
  416593:	mov    rax,QWORD PTR [rbp-0x8]
  416597:	mov    r9d,0x0
  41659d:	mov    r8d,0x7
  4165a3:	lea    rcx,[rip+0x1fc0f]        # 4361b9 <_IO_stdin_used@@Base+0x1b9>
  4165aa:	mov    edx,0x5
  4165af:	mov    rdi,rax
  4165b2:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  4165b7:	nop
  4165b8:	leave  
  4165b9:	ret    
  4165ba:	push   rbp
  4165bb:	mov    rbp,rsp
  4165be:	sub    rsp,0x10
  4165c2:	mov    QWORD PTR [rbp-0x8],rdi
  4165c6:	mov    QWORD PTR [rbp-0x10],rsi
  4165ca:	mov    rsi,QWORD PTR [rbp-0x10]
  4165ce:	mov    rax,QWORD PTR [rbp-0x8]
  4165d2:	mov    r8d,0x2
  4165d8:	lea    rcx,[rip+0x1fb77]        # 436156 <_IO_stdin_used@@Base+0x156>
  4165df:	mov    edx,0x0
  4165e4:	mov    rdi,rax
  4165e7:	call   42d862 <flatcc_json_printer_string_field@@Base>
  4165ec:	mov    rsi,QWORD PTR [rbp-0x10]
  4165f0:	mov    rax,QWORD PTR [rbp-0x8]
  4165f4:	mov    r9d,0x0
  4165fa:	mov    r8d,0x3
  416600:	lea    rcx,[rip+0x1fbba]        # 4361c1 <_IO_stdin_used@@Base+0x1c1>
  416607:	mov    edx,0x1
  41660c:	mov    rdi,rax
  41660f:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  416614:	mov    rsi,QWORD PTR [rbp-0x10]
  416618:	mov    rax,QWORD PTR [rbp-0x8]
  41661c:	mov    r9d,0x0
  416622:	mov    r8d,0x5
  416628:	lea    rcx,[rip+0x1fb96]        # 4361c5 <_IO_stdin_used@@Base+0x1c5>
  41662f:	mov    edx,0x2
  416634:	mov    rdi,rax
  416637:	call   42daa8 <flatcc_json_printer_uint16_field@@Base>
  41663c:	nop
  41663d:	leave  
  41663e:	ret    
  41663f:	push   rbp
  416640:	mov    rbp,rsp
  416643:	sub    rsp,0x10
  416647:	mov    QWORD PTR [rbp-0x8],rdi
  41664b:	mov    QWORD PTR [rbp-0x10],rsi
  41664f:	mov    rsi,QWORD PTR [rbp-0x10]
  416653:	mov    rax,QWORD PTR [rbp-0x8]
  416657:	lea    r9,[rip+0x7f]        # 4166dd <_start@@Base+0x1157d>
  41665e:	mov    r8d,0x6
  416664:	lea    rcx,[rip+0x1fb60]        # 4361cb <_IO_stdin_used@@Base+0x1cb>
  41666b:	mov    edx,0x0
  416670:	mov    rdi,rax
  416673:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416678:	mov    rsi,QWORD PTR [rbp-0x10]
  41667c:	mov    rax,QWORD PTR [rbp-0x8]
  416680:	lea    r9,[rip+0xb91]        # 417218 <_start@@Base+0x120b8>
  416687:	mov    r8d,0x5
  41668d:	lea    rcx,[rip+0x1fb3e]        # 4361d2 <_IO_stdin_used@@Base+0x1d2>
  416694:	mov    edx,0x1
  416699:	mov    rdi,rax
  41669c:	call   433c5b <flatcc_json_printer_table_field@@Base>
  4166a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4166a5:	mov    rax,QWORD PTR [rbp-0x8]
  4166a9:	sub    rsp,0x8
  4166ad:	lea    rdx,[rip+0xfffffffffffff783]        # 415e37 <_start@@Base+0x10cd7>
  4166b4:	push   rdx
  4166b5:	lea    r9,[rip+0xfffffffffffff6c5]        # 415d81 <_start@@Base+0x10c21>
  4166bc:	mov    r8d,0x7
  4166c2:	lea    rcx,[rip+0x1fb0f]        # 4361d8 <_IO_stdin_used@@Base+0x1d8>
  4166c9:	mov    edx,0x3
  4166ce:	mov    rdi,rax
  4166d1:	call   433780 <flatcc_json_printer_union_vector_field@@Base>
  4166d6:	add    rsp,0x10
  4166da:	nop
  4166db:	leave  
  4166dc:	ret    
  4166dd:	push   rbp
  4166de:	mov    rbp,rsp
  4166e1:	sub    rsp,0x10
  4166e5:	mov    QWORD PTR [rbp-0x8],rdi
  4166e9:	mov    QWORD PTR [rbp-0x10],rsi
  4166ed:	mov    rsi,QWORD PTR [rbp-0x10]
  4166f1:	mov    rax,QWORD PTR [rbp-0x8]
  4166f5:	lea    r9,[rip+0x6f]        # 41676b <_start@@Base+0x1160b>
  4166fc:	mov    r8d,0x15
  416702:	lea    rcx,[rip+0x1fad7]        # 4361e0 <_IO_stdin_used@@Base+0x1e0>
  416709:	mov    edx,0x0
  41670e:	mov    rdi,rax
  416711:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416716:	mov    rsi,QWORD PTR [rbp-0x10]
  41671a:	mov    rax,QWORD PTR [rbp-0x8]
  41671e:	lea    r9,[rip+0x1af]        # 4168d4 <_start@@Base+0x11774>
  416725:	mov    r8d,0x16
  41672b:	lea    rcx,[rip+0x1fac4]        # 4361f6 <_IO_stdin_used@@Base+0x1f6>
  416732:	mov    edx,0x1
  416737:	mov    rdi,rax
  41673a:	call   433c5b <flatcc_json_printer_table_field@@Base>
  41673f:	mov    rsi,QWORD PTR [rbp-0x10]
  416743:	mov    rax,QWORD PTR [rbp-0x8]
  416747:	lea    r9,[rip+0x1e9]        # 416937 <_start@@Base+0x117d7>
  41674e:	mov    r8d,0x16
  416754:	lea    rcx,[rip+0x1fab2]        # 43620d <_IO_stdin_used@@Base+0x20d>
  41675b:	mov    edx,0x2
  416760:	mov    rdi,rax
  416763:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416768:	nop
  416769:	leave  
  41676a:	ret    
  41676b:	push   rbp
  41676c:	mov    rbp,rsp
  41676f:	sub    rsp,0x10
  416773:	mov    QWORD PTR [rbp-0x8],rdi
  416777:	mov    QWORD PTR [rbp-0x10],rsi
  41677b:	mov    rsi,QWORD PTR [rbp-0x10]
  41677f:	mov    rax,QWORD PTR [rbp-0x8]
  416783:	mov    r8d,0x4
  416789:	lea    rcx,[rip+0x1fa94]        # 436224 <_IO_stdin_used@@Base+0x224>
  416790:	mov    edx,0x0
  416795:	mov    rdi,rax
  416798:	call   42d862 <flatcc_json_printer_string_field@@Base>
  41679d:	mov    rsi,QWORD PTR [rbp-0x10]
  4167a1:	mov    rax,QWORD PTR [rbp-0x8]
  4167a5:	mov    r9d,0x0
  4167ab:	mov    r8d,0x9
  4167b1:	lea    rcx,[rip+0x1fa71]        # 436229 <_IO_stdin_used@@Base+0x229>
  4167b8:	mov    edx,0x1
  4167bd:	mov    rdi,rax
  4167c0:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  4167c5:	mov    rsi,QWORD PTR [rbp-0x10]
  4167c9:	mov    rax,QWORD PTR [rbp-0x8]
  4167cd:	mov    r8d,0x4
  4167d3:	lea    rcx,[rip+0x1fa59]        # 436233 <_IO_stdin_used@@Base+0x233>
  4167da:	mov    edx,0x2
  4167df:	mov    rdi,rax
  4167e2:	call   42d862 <flatcc_json_printer_string_field@@Base>
  4167e7:	mov    rsi,QWORD PTR [rbp-0x10]
  4167eb:	mov    rax,QWORD PTR [rbp-0x8]
  4167ef:	mov    r9d,0x0
  4167f5:	mov    r8d,0x8
  4167fb:	lea    rcx,[rip+0x1fa36]        # 436238 <_IO_stdin_used@@Base+0x238>
  416802:	mov    edx,0x3
  416807:	mov    rdi,rax
  41680a:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  41680f:	mov    rsi,QWORD PTR [rbp-0x10]
  416813:	mov    rax,QWORD PTR [rbp-0x8]
  416817:	mov    r8d,0x4
  41681d:	lea    rcx,[rip+0x1fa1d]        # 436241 <_IO_stdin_used@@Base+0x241>
  416824:	mov    edx,0x4
  416829:	mov    rdi,rax
  41682c:	call   42d862 <flatcc_json_printer_string_field@@Base>
  416831:	mov    rsi,QWORD PTR [rbp-0x10]
  416835:	mov    rax,QWORD PTR [rbp-0x8]
  416839:	mov    r9d,0x0
  41683f:	mov    r8d,0x8
  416845:	lea    rcx,[rip+0x1f9fa]        # 436246 <_IO_stdin_used@@Base+0x246>
  41684c:	mov    edx,0x5
  416851:	mov    rdi,rax
  416854:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  416859:	mov    rsi,QWORD PTR [rbp-0x10]
  41685d:	mov    rax,QWORD PTR [rbp-0x8]
  416861:	mov    r9d,0x0
  416867:	mov    r8d,0x9
  41686d:	lea    rcx,[rip+0x1f9db]        # 43624f <_IO_stdin_used@@Base+0x24f>
  416874:	mov    edx,0x6
  416879:	mov    rdi,rax
  41687c:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  416881:	mov    rsi,QWORD PTR [rbp-0x10]
  416885:	mov    rax,QWORD PTR [rbp-0x8]
  416889:	mov    r9d,0x0
  41688f:	mov    r8d,0x8
  416895:	lea    rcx,[rip+0x1f9bd]        # 436259 <_IO_stdin_used@@Base+0x259>
  41689c:	mov    edx,0x7
  4168a1:	mov    rdi,rax
  4168a4:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  4168a9:	mov    rsi,QWORD PTR [rbp-0x10]
  4168ad:	mov    rax,QWORD PTR [rbp-0x8]
  4168b1:	mov    r9d,0x0
  4168b7:	mov    r8d,0x9
  4168bd:	lea    rcx,[rip+0x1f99e]        # 436262 <_IO_stdin_used@@Base+0x262>
  4168c4:	mov    edx,0x8
  4168c9:	mov    rdi,rax
  4168cc:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  4168d1:	nop
  4168d2:	leave  
  4168d3:	ret    
  4168d4:	push   rbp
  4168d5:	mov    rbp,rsp
  4168d8:	sub    rsp,0x10
  4168dc:	mov    QWORD PTR [rbp-0x8],rdi
  4168e0:	mov    QWORD PTR [rbp-0x10],rsi
  4168e4:	mov    rsi,QWORD PTR [rbp-0x10]
  4168e8:	mov    rax,QWORD PTR [rbp-0x8]
  4168ec:	mov    r9d,0x0
  4168f2:	mov    r8d,0xf
  4168f8:	lea    rcx,[rip+0x1f96d]        # 43626c <_IO_stdin_used@@Base+0x26c>
  4168ff:	mov    edx,0x0
  416904:	mov    rdi,rax
  416907:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  41690c:	mov    rsi,QWORD PTR [rbp-0x10]
  416910:	mov    rax,QWORD PTR [rbp-0x8]
  416914:	mov    r9d,0x0
  41691a:	mov    r8d,0x10
  416920:	lea    rcx,[rip+0x1f955]        # 43627c <_IO_stdin_used@@Base+0x27c>
  416927:	mov    edx,0x1
  41692c:	mov    rdi,rax
  41692f:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  416934:	nop
  416935:	leave  
  416936:	ret    
  416937:	push   rbp
  416938:	mov    rbp,rsp
  41693b:	sub    rsp,0x10
  41693f:	mov    QWORD PTR [rbp-0x8],rdi
  416943:	mov    QWORD PTR [rbp-0x10],rsi
  416947:	mov    rsi,QWORD PTR [rbp-0x10]
  41694b:	mov    rax,QWORD PTR [rbp-0x8]
  41694f:	mov    r9d,0x0
  416955:	mov    r8d,0xf
  41695b:	lea    rcx,[rip+0x1f90a]        # 43626c <_IO_stdin_used@@Base+0x26c>
  416962:	mov    edx,0x0
  416967:	mov    rdi,rax
  41696a:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  41696f:	mov    rsi,QWORD PTR [rbp-0x10]
  416973:	mov    rax,QWORD PTR [rbp-0x8]
  416977:	mov    r9d,0x0
  41697d:	mov    r8d,0x15
  416983:	lea    rcx,[rip+0x1f903]        # 43628d <_IO_stdin_used@@Base+0x28d>
  41698a:	mov    edx,0x1
  41698f:	mov    rdi,rax
  416992:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  416997:	nop
  416998:	leave  
  416999:	ret    
  41699a:	push   rbp
  41699b:	mov    rbp,rsp
  41699e:	sub    rsp,0x10
  4169a2:	mov    QWORD PTR [rbp-0x8],rdi
  4169a6:	mov    QWORD PTR [rbp-0x10],rsi
  4169aa:	mov    rsi,QWORD PTR [rbp-0x10]
  4169ae:	mov    rax,QWORD PTR [rbp-0x8]
  4169b2:	mov    r9d,0x0
  4169b8:	mov    r8d,0x4
  4169be:	lea    rcx,[rip+0x1f8de]        # 4362a3 <_IO_stdin_used@@Base+0x2a3>
  4169c5:	mov    edx,0x0
  4169ca:	mov    rdi,rax
  4169cd:	call   42d8ff <flatcc_json_printer_uint8_vector_base64_field@@Base>
  4169d2:	mov    rsi,QWORD PTR [rbp-0x10]
  4169d6:	mov    rax,QWORD PTR [rbp-0x8]
  4169da:	mov    r9d,0x1
  4169e0:	mov    r8d,0x7
  4169e6:	lea    rcx,[rip+0x1f8bb]        # 4362a8 <_IO_stdin_used@@Base+0x2a8>
  4169ed:	mov    edx,0x1
  4169f2:	mov    rdi,rax
  4169f5:	call   42d8ff <flatcc_json_printer_uint8_vector_base64_field@@Base>
  4169fa:	mov    rsi,QWORD PTR [rbp-0x10]
  4169fe:	mov    rax,QWORD PTR [rbp-0x8]
  416a02:	mov    r9d,0x0
  416a08:	mov    r8d,0x6
  416a0e:	lea    rcx,[rip+0x1f89b]        # 4362b0 <_IO_stdin_used@@Base+0x2b0>
  416a15:	mov    edx,0x2
  416a1a:	mov    rdi,rax
  416a1d:	call   42d8ff <flatcc_json_printer_uint8_vector_base64_field@@Base>
  416a22:	nop
  416a23:	leave  
  416a24:	ret    
  416a25:	push   rbp
  416a26:	mov    rbp,rsp
  416a29:	sub    rsp,0x10
  416a2d:	mov    QWORD PTR [rbp-0x8],rdi
  416a31:	mov    QWORD PTR [rbp-0x10],rsi
  416a35:	mov    rsi,QWORD PTR [rbp-0x10]
  416a39:	mov    rax,QWORD PTR [rbp-0x8]
  416a3d:	lea    r9,[rip+0xfffffffffffff714]        # 416158 <_start@@Base+0x10ff8>
  416a44:	mov    r8d,0x3
  416a4a:	lea    rcx,[rip+0x1f866]        # 4362b7 <_IO_stdin_used@@Base+0x2b7>
  416a51:	mov    edx,0x0
  416a56:	mov    rdi,rax
  416a59:	call   43421b <flatcc_json_printer_struct_field@@Base>
  416a5e:	mov    rsi,QWORD PTR [rbp-0x10]
  416a62:	mov    rax,QWORD PTR [rbp-0x8]
  416a66:	mov    r9d,0x96
  416a6c:	mov    r8d,0x4
  416a72:	lea    rcx,[rip+0x1f842]        # 4362bb <_IO_stdin_used@@Base+0x2bb>
  416a79:	mov    edx,0x1
  416a7e:	mov    rdi,rax
  416a81:	call   42de6d <flatcc_json_printer_int16_field@@Base>
  416a86:	mov    rsi,QWORD PTR [rbp-0x10]
  416a8a:	mov    rax,QWORD PTR [rbp-0x8]
  416a8e:	mov    r9d,0x64
  416a94:	mov    r8d,0x2
  416a9a:	lea    rcx,[rip+0x1f81f]        # 4362c0 <_IO_stdin_used@@Base+0x2c0>
  416aa1:	mov    edx,0x2
  416aa6:	mov    rdi,rax
  416aa9:	call   42de6d <flatcc_json_printer_int16_field@@Base>
  416aae:	mov    rsi,QWORD PTR [rbp-0x10]
  416ab2:	mov    rax,QWORD PTR [rbp-0x8]
  416ab6:	mov    r8d,0x4
  416abc:	lea    rcx,[rip+0x1f800]        # 4362c3 <_IO_stdin_used@@Base+0x2c3>
  416ac3:	mov    edx,0x3
  416ac8:	mov    rdi,rax
  416acb:	call   42d862 <flatcc_json_printer_string_field@@Base>
  416ad0:	mov    rsi,QWORD PTR [rbp-0x10]
  416ad4:	mov    rax,QWORD PTR [rbp-0x8]
  416ad8:	mov    r8d,0x9
  416ade:	lea    rcx,[rip+0x1f7e3]        # 4362c8 <_IO_stdin_used@@Base+0x2c8>
  416ae5:	mov    edx,0x5
  416aea:	mov    rdi,rax
  416aed:	call   42fdf5 <flatcc_json_printer_uint8_vector_field@@Base>
  416af2:	mov    rsi,QWORD PTR [rbp-0x10]
  416af6:	mov    rax,QWORD PTR [rbp-0x8]
  416afa:	sub    rsp,0x8
  416afe:	lea    rdx,[rip+0xfffffffffffff0a1]        # 415ba6 <_start@@Base+0x10a46>
  416b05:	push   rdx
  416b06:	mov    r9d,0x8
  416b0c:	mov    r8d,0x5
  416b12:	lea    rcx,[rip+0x1f666]        # 43617f <_IO_stdin_used@@Base+0x17f>
  416b19:	mov    edx,0x6
  416b1e:	mov    rdi,rax
  416b21:	call   42e8a3 <flatcc_json_printer_int8_enum_field@@Base>
  416b26:	add    rsp,0x10
  416b2a:	mov    rsi,QWORD PTR [rbp-0x10]
  416b2e:	mov    rax,QWORD PTR [rbp-0x8]
  416b32:	sub    rsp,0x8
  416b36:	lea    rdx,[rip+0xfffffffffffff2fa]        # 415e37 <_start@@Base+0x10cd7>
  416b3d:	push   rdx
  416b3e:	lea    r9,[rip+0xfffffffffffff23c]        # 415d81 <_start@@Base+0x10c21>
  416b45:	mov    r8d,0x4
  416b4b:	lea    rcx,[rip+0x1f780]        # 4362d2 <_IO_stdin_used@@Base+0x2d2>
  416b52:	mov    edx,0x8
  416b57:	mov    rdi,rax
  416b5a:	call   433d0f <flatcc_json_printer_union_field@@Base>
  416b5f:	add    rsp,0x10
  416b63:	mov    rsi,QWORD PTR [rbp-0x10]
  416b67:	mov    rax,QWORD PTR [rbp-0x8]
  416b6b:	sub    rsp,0x8
  416b6f:	lea    rdx,[rip+0xfffffffffffff572]        # 4160e8 <_start@@Base+0x10f88>
  416b76:	push   rdx
  416b77:	mov    r9d,0x4
  416b7d:	mov    r8d,0x5
  416b83:	lea    rcx,[rip+0x1f74d]        # 4362d7 <_IO_stdin_used@@Base+0x2d7>
  416b8a:	mov    edx,0x9
  416b8f:	mov    rdi,rax
  416b92:	call   43309f <flatcc_json_printer_struct_vector_field@@Base>
  416b97:	add    rsp,0x10
  416b9b:	mov    rsi,QWORD PTR [rbp-0x10]
  416b9f:	mov    rax,QWORD PTR [rbp-0x8]
  416ba3:	mov    r8d,0x11
  416ba9:	lea    rcx,[rip+0x1f72d]        # 4362dd <_IO_stdin_used@@Base+0x2dd>
  416bb0:	mov    edx,0xa
  416bb5:	mov    rdi,rax
  416bb8:	call   4333ac <flatcc_json_printer_string_vector_field@@Base>
  416bbd:	mov    rsi,QWORD PTR [rbp-0x10]
  416bc1:	mov    rax,QWORD PTR [rbp-0x8]
  416bc5:	lea    r9,[rip+0xfffffffffffffe59]        # 416a25 <_start@@Base+0x118c5>
  416bcc:	mov    r8d,0x11
  416bd2:	lea    rcx,[rip+0x1f716]        # 4362ef <_IO_stdin_used@@Base+0x2ef>
  416bd9:	mov    edx,0xb
  416bde:	mov    rdi,rax
  416be1:	call   4335c5 <flatcc_json_printer_table_vector_field@@Base>
  416be6:	mov    rsi,QWORD PTR [rbp-0x10]
  416bea:	mov    rax,QWORD PTR [rbp-0x8]
  416bee:	lea    r9,[rip+0xfffffffffffffe30]        # 416a25 <_start@@Base+0x118c5>
  416bf5:	mov    r8d,0x5
  416bfb:	lea    rcx,[rip+0x1f6ff]        # 436301 <_IO_stdin_used@@Base+0x301>
  416c02:	mov    edx,0xc
  416c07:	mov    rdi,rax
  416c0a:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416c0f:	mov    rsi,QWORD PTR [rbp-0x10]
  416c13:	mov    rax,QWORD PTR [rbp-0x8]
  416c17:	sub    rsp,0x8
  416c1b:	lea    rdx,[rip+0xfffffffffffffe03]        # 416a25 <_start@@Base+0x118c5>
  416c22:	push   rdx
  416c23:	mov    r9d,0x0
  416c29:	mov    r8d,0x14
  416c2f:	lea    rcx,[rip+0x1f6d1]        # 436307 <_IO_stdin_used@@Base+0x307>
  416c36:	mov    edx,0xd
  416c3b:	mov    rdi,rax
  416c3e:	call   4347f6 <flatcc_json_printer_table_as_nested_root@@Base>
  416c43:	add    rsp,0x10
  416c47:	mov    rsi,QWORD PTR [rbp-0x10]
  416c4b:	mov    rax,QWORD PTR [rbp-0x8]
  416c4f:	lea    r9,[rip+0xfffffffffffff964]        # 4165ba <_start@@Base+0x1145a>
  416c56:	mov    r8d,0x9
  416c5c:	lea    rcx,[rip+0x1f6b9]        # 43631c <_IO_stdin_used@@Base+0x31c>
  416c63:	mov    edx,0xe
  416c68:	mov    rdi,rax
  416c6b:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416c70:	mov    rsi,QWORD PTR [rbp-0x10]
  416c74:	mov    rax,QWORD PTR [rbp-0x8]
  416c78:	mov    r9d,0x1
  416c7e:	mov    r8d,0x8
  416c84:	lea    rcx,[rip+0x1f69b]        # 436326 <_IO_stdin_used@@Base+0x326>
  416c8b:	mov    edx,0xf
  416c90:	mov    rdi,rax
  416c93:	call   42e141 <flatcc_json_printer_bool_field@@Base>
  416c98:	mov    rsi,QWORD PTR [rbp-0x10]
  416c9c:	mov    rax,QWORD PTR [rbp-0x8]
  416ca0:	mov    r9d,0x0
  416ca6:	mov    r8d,0x10
  416cac:	lea    rcx,[rip+0x1f67c]        # 43632f <_IO_stdin_used@@Base+0x32f>
  416cb3:	mov    edx,0x10
  416cb8:	mov    rdi,rax
  416cbb:	call   42df62 <flatcc_json_printer_int32_field@@Base>
  416cc0:	mov    rsi,QWORD PTR [rbp-0x10]
  416cc4:	mov    rax,QWORD PTR [rbp-0x8]
  416cc8:	mov    r9d,0x0
  416cce:	mov    r8d,0x10
  416cd4:	lea    rcx,[rip+0x1f665]        # 436340 <_IO_stdin_used@@Base+0x340>
  416cdb:	mov    edx,0x11
  416ce0:	mov    rdi,rax
  416ce3:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  416ce8:	mov    rsi,QWORD PTR [rbp-0x10]
  416cec:	mov    rax,QWORD PTR [rbp-0x8]
  416cf0:	mov    r9d,0x0
  416cf6:	mov    r8d,0x10
  416cfc:	lea    rcx,[rip+0x1f64e]        # 436351 <_IO_stdin_used@@Base+0x351>
  416d03:	mov    edx,0x12
  416d08:	mov    rdi,rax
  416d0b:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  416d10:	mov    rsi,QWORD PTR [rbp-0x10]
  416d14:	mov    rax,QWORD PTR [rbp-0x8]
  416d18:	mov    r9d,0x0
  416d1e:	mov    r8d,0x10
  416d24:	lea    rcx,[rip+0x1f637]        # 436362 <_IO_stdin_used@@Base+0x362>
  416d2b:	mov    edx,0x13
  416d30:	mov    rdi,rax
  416d33:	call   42dc89 <flatcc_json_printer_uint64_field@@Base>
  416d38:	mov    rsi,QWORD PTR [rbp-0x10]
  416d3c:	mov    rax,QWORD PTR [rbp-0x8]
  416d40:	mov    r9d,0x0
  416d46:	mov    r8d,0x11
  416d4c:	lea    rcx,[rip+0x1f620]        # 436373 <_IO_stdin_used@@Base+0x373>
  416d53:	mov    edx,0x14
  416d58:	mov    rdi,rax
  416d5b:	call   42df62 <flatcc_json_printer_int32_field@@Base>
  416d60:	mov    rsi,QWORD PTR [rbp-0x10]
  416d64:	mov    rax,QWORD PTR [rbp-0x8]
  416d68:	mov    r9d,0x0
  416d6e:	mov    r8d,0x11
  416d74:	lea    rcx,[rip+0x1f60a]        # 436385 <_IO_stdin_used@@Base+0x385>
  416d7b:	mov    edx,0x15
  416d80:	mov    rdi,rax
  416d83:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  416d88:	mov    rsi,QWORD PTR [rbp-0x10]
  416d8c:	mov    rax,QWORD PTR [rbp-0x8]
  416d90:	mov    r9d,0x0
  416d96:	mov    r8d,0x11
  416d9c:	lea    rcx,[rip+0x1f5f4]        # 436397 <_IO_stdin_used@@Base+0x397>
  416da3:	mov    edx,0x16
  416da8:	mov    rdi,rax
  416dab:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  416db0:	mov    rsi,QWORD PTR [rbp-0x10]
  416db4:	mov    rax,QWORD PTR [rbp-0x8]
  416db8:	mov    r9d,0x0
  416dbe:	mov    r8d,0x11
  416dc4:	lea    rcx,[rip+0x1f5de]        # 4363a9 <_IO_stdin_used@@Base+0x3a9>
  416dcb:	mov    edx,0x17
  416dd0:	mov    rdi,rax
  416dd3:	call   42dc89 <flatcc_json_printer_uint64_field@@Base>
  416dd8:	mov    rsi,QWORD PTR [rbp-0x10]
  416ddc:	mov    rax,QWORD PTR [rbp-0x8]
  416de0:	mov    r8d,0x10
  416de6:	lea    rcx,[rip+0x1f5ce]        # 4363bb <_IO_stdin_used@@Base+0x3bb>
  416ded:	mov    edx,0x18
  416df2:	mov    rdi,rax
  416df5:	call   43116d <flatcc_json_printer_bool_vector_field@@Base>
  416dfa:	mov    rsi,QWORD PTR [rbp-0x10]
  416dfe:	mov    rax,QWORD PTR [rbp-0x8]
  416e02:	vmovss xmm0,DWORD PTR [rip+0x2313a]        # 439f44 <_IO_stdin_used@@Base+0x3f44>
  416e0a:	mov    r8d,0x5
  416e10:	lea    rcx,[rip+0x1f5b5]        # 4363cc <_IO_stdin_used@@Base+0x3cc>
  416e17:	mov    edx,0x19
  416e1c:	mov    rdi,rax
  416e1f:	call   42e232 <flatcc_json_printer_float_field@@Base>
  416e24:	mov    rsi,QWORD PTR [rbp-0x10]
  416e28:	mov    rax,QWORD PTR [rbp-0x8]
  416e2c:	vmovss xmm0,DWORD PTR [rip+0x2310c]        # 439f40 <_IO_stdin_used@@Base+0x3f40>
  416e34:	mov    r8d,0x6
  416e3a:	lea    rcx,[rip+0x1f591]        # 4363d2 <_IO_stdin_used@@Base+0x3d2>
  416e41:	mov    edx,0x1a
  416e46:	mov    rdi,rax
  416e49:	call   42e232 <flatcc_json_printer_float_field@@Base>
  416e4e:	mov    rsi,QWORD PTR [rbp-0x10]
  416e52:	mov    rax,QWORD PTR [rbp-0x8]
  416e56:	vxorps xmm0,xmm0,xmm0
  416e5a:	mov    r8d,0x6
  416e60:	lea    rcx,[rip+0x1f572]        # 4363d9 <_IO_stdin_used@@Base+0x3d9>
  416e67:	mov    edx,0x1b
  416e6c:	mov    rdi,rax
  416e6f:	call   42e232 <flatcc_json_printer_float_field@@Base>
  416e74:	mov    rsi,QWORD PTR [rbp-0x10]
  416e78:	mov    rax,QWORD PTR [rbp-0x8]
  416e7c:	mov    r8d,0x12
  416e82:	lea    rcx,[rip+0x1f557]        # 4363e0 <_IO_stdin_used@@Base+0x3e0>
  416e89:	mov    edx,0x1c
  416e8e:	mov    rdi,rax
  416e91:	call   4333ac <flatcc_json_printer_string_vector_field@@Base>
  416e96:	mov    rsi,QWORD PTR [rbp-0x10]
  416e9a:	mov    rax,QWORD PTR [rbp-0x8]
  416e9e:	sub    rsp,0x8
  416ea2:	lea    rdx,[rip+0xfffffffffffff3cc]        # 416275 <_start@@Base+0x11115>
  416ea9:	push   rdx
  416eaa:	mov    r9d,0x8
  416eb0:	mov    r8d,0x17
  416eb6:	lea    rcx,[rip+0x1f536]        # 4363f3 <_IO_stdin_used@@Base+0x3f3>
  416ebd:	mov    edx,0x1d
  416ec2:	mov    rdi,rax
  416ec5:	call   43309f <flatcc_json_printer_struct_vector_field@@Base>
  416eca:	add    rsp,0x10
  416ece:	mov    rsi,QWORD PTR [rbp-0x10]
  416ed2:	mov    rax,QWORD PTR [rbp-0x8]
  416ed6:	mov    r8d,0x4
  416edc:	lea    rcx,[rip+0x1f528]        # 43640b <_IO_stdin_used@@Base+0x40b>
  416ee3:	mov    edx,0x1e
  416ee8:	mov    rdi,rax
  416eeb:	call   42fdf5 <flatcc_json_printer_uint8_vector_field@@Base>
  416ef0:	mov    rsi,QWORD PTR [rbp-0x10]
  416ef4:	mov    rax,QWORD PTR [rbp-0x8]
  416ef8:	sub    rsp,0x8
  416efc:	lea    rdx,[rip+0xfffffffffffff1e5]        # 4160e8 <_start@@Base+0x10f88>
  416f03:	push   rdx
  416f04:	mov    r9d,0x4
  416f0a:	mov    r8d,0x5
  416f10:	lea    rcx,[rip+0x1f4f9]        # 436410 <_IO_stdin_used@@Base+0x410>
  416f17:	mov    edx,0x1f
  416f1c:	mov    rdi,rax
  416f1f:	call   43309f <flatcc_json_printer_struct_vector_field@@Base>
  416f24:	add    rsp,0x10
  416f28:	mov    rsi,QWORD PTR [rbp-0x10]
  416f2c:	mov    rax,QWORD PTR [rbp-0x8]
  416f30:	mov    r8d,0xf
  416f36:	lea    rcx,[rip+0x1f4d9]        # 436416 <_IO_stdin_used@@Base+0x416>
  416f3d:	mov    edx,0x20
  416f42:	mov    rdi,rax
  416f45:	call   430eff <flatcc_json_printer_int64_vector_field@@Base>
  416f4a:	mov    rsi,QWORD PTR [rbp-0x10]
  416f4e:	mov    rax,QWORD PTR [rbp-0x8]
  416f52:	mov    r8d,0x11
  416f58:	lea    rcx,[rip+0x1f4c7]        # 436426 <_IO_stdin_used@@Base+0x426>
  416f5f:	mov    edx,0x21
  416f64:	mov    rdi,rax
  416f67:	call   43164f <flatcc_json_printer_double_vector_field@@Base>
  416f6c:	mov    rsi,QWORD PTR [rbp-0x10]
  416f70:	mov    rax,QWORD PTR [rbp-0x8]
  416f74:	lea    r9,[rip+0xfffffffffffff3cf]        # 41634a <_start@@Base+0x111ea>
  416f7b:	mov    r8d,0x15
  416f81:	lea    rcx,[rip+0x1f4b0]        # 436438 <_IO_stdin_used@@Base+0x438>
  416f88:	mov    edx,0x22
  416f8d:	mov    rdi,rax
  416f90:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416f95:	mov    rsi,QWORD PTR [rbp-0x10]
  416f99:	mov    rax,QWORD PTR [rbp-0x8]
  416f9d:	lea    r9,[rip+0xfffffffffffff9f6]        # 41699a <_start@@Base+0x1183a>
  416fa4:	mov    r8d,0xa
  416faa:	lea    rcx,[rip+0x1f49d]        # 43644e <_IO_stdin_used@@Base+0x44e>
  416fb1:	mov    edx,0x23
  416fb6:	mov    rdi,rax
  416fb9:	call   433c5b <flatcc_json_printer_table_field@@Base>
  416fbe:	nop
  416fbf:	leave  
  416fc0:	ret    
  416fc1:	push   rbp
  416fc2:	mov    rbp,rsp
  416fc5:	sub    rsp,0x20
  416fc9:	mov    QWORD PTR [rbp-0x8],rdi
  416fcd:	mov    QWORD PTR [rbp-0x10],rsi
  416fd1:	mov    QWORD PTR [rbp-0x18],rdx
  416fd5:	mov    QWORD PTR [rbp-0x20],rcx
  416fd9:	mov    rcx,QWORD PTR [rbp-0x20]
  416fdd:	mov    rdx,QWORD PTR [rbp-0x18]
  416fe1:	mov    rsi,QWORD PTR [rbp-0x10]
  416fe5:	mov    rax,QWORD PTR [rbp-0x8]
  416fe9:	lea    r8,[rip+0xfffffffffffffa35]        # 416a25 <_start@@Base+0x118c5>
  416ff0:	mov    rdi,rax
  416ff3:	call   43459b <flatcc_json_printer_table_as_root@@Base>
  416ff8:	leave  
  416ff9:	ret    
  416ffa:	push   rbp
  416ffb:	mov    rbp,rsp
  416ffe:	sub    rsp,0x10
  417002:	mov    QWORD PTR [rbp-0x8],rdi
  417006:	mov    QWORD PTR [rbp-0x10],rsi
  41700a:	mov    rsi,QWORD PTR [rbp-0x10]
  41700e:	mov    rax,QWORD PTR [rbp-0x8]
  417012:	mov    r9d,0x0
  417018:	mov    r8d,0x2
  41701e:	lea    rcx,[rip+0x1f434]        # 436459 <_IO_stdin_used@@Base+0x459>
  417025:	mov    edx,0x0
  41702a:	mov    rdi,rax
  41702d:	call   42dd7c <flatcc_json_printer_int8_field@@Base>
  417032:	mov    rsi,QWORD PTR [rbp-0x10]
  417036:	mov    rax,QWORD PTR [rbp-0x8]
  41703a:	mov    r9d,0x0
  417040:	mov    r8d,0x2
  417046:	lea    rcx,[rip+0x1f40f]        # 43645c <_IO_stdin_used@@Base+0x45c>
  41704d:	mov    edx,0x1
  417052:	mov    rdi,rax
  417055:	call   42d9b7 <flatcc_json_printer_uint8_field@@Base>
  41705a:	mov    rsi,QWORD PTR [rbp-0x10]
  41705e:	mov    rax,QWORD PTR [rbp-0x8]
  417062:	mov    r9d,0x0
  417068:	mov    r8d,0x3
  41706e:	lea    rcx,[rip+0x1f3ea]        # 43645f <_IO_stdin_used@@Base+0x45f>
  417075:	mov    edx,0x2
  41707a:	mov    rdi,rax
  41707d:	call   42de6d <flatcc_json_printer_int16_field@@Base>
  417082:	mov    rsi,QWORD PTR [rbp-0x10]
  417086:	mov    rax,QWORD PTR [rbp-0x8]
  41708a:	mov    r9d,0x0
  417090:	mov    r8d,0x3
  417096:	lea    rcx,[rip+0x1f3c6]        # 436463 <_IO_stdin_used@@Base+0x463>
  41709d:	mov    edx,0x3
  4170a2:	mov    rdi,rax
  4170a5:	call   42daa8 <flatcc_json_printer_uint16_field@@Base>
  4170aa:	mov    rsi,QWORD PTR [rbp-0x10]
  4170ae:	mov    rax,QWORD PTR [rbp-0x8]
  4170b2:	mov    r9d,0x0
  4170b8:	mov    r8d,0x3
  4170be:	lea    rcx,[rip+0x1f3a2]        # 436467 <_IO_stdin_used@@Base+0x467>
  4170c5:	mov    edx,0x4
  4170ca:	mov    rdi,rax
  4170cd:	call   42df62 <flatcc_json_printer_int32_field@@Base>
  4170d2:	mov    rsi,QWORD PTR [rbp-0x10]
  4170d6:	mov    rax,QWORD PTR [rbp-0x8]
  4170da:	mov    r9d,0x0
  4170e0:	mov    r8d,0x3
  4170e6:	lea    rcx,[rip+0x1f37e]        # 43646b <_IO_stdin_used@@Base+0x46b>
  4170ed:	mov    edx,0x5
  4170f2:	mov    rdi,rax
  4170f5:	call   42db9d <flatcc_json_printer_uint32_field@@Base>
  4170fa:	mov    rsi,QWORD PTR [rbp-0x10]
  4170fe:	mov    rax,QWORD PTR [rbp-0x8]
  417102:	mov    r9d,0x0
  417108:	mov    r8d,0x3
  41710e:	lea    rcx,[rip+0x1f35a]        # 43646f <_IO_stdin_used@@Base+0x46f>
  417115:	mov    edx,0x6
  41711a:	mov    rdi,rax
  41711d:	call   42e04e <flatcc_json_printer_int64_field@@Base>
  417122:	mov    rsi,QWORD PTR [rbp-0x10]
  417126:	mov    rax,QWORD PTR [rbp-0x8]
  41712a:	mov    r9d,0x0
  417130:	mov    r8d,0x3
  417136:	lea    rcx,[rip+0x1f336]        # 436473 <_IO_stdin_used@@Base+0x473>
  41713d:	mov    edx,0x7
  417142:	mov    rdi,rax
  417145:	call   42dc89 <flatcc_json_printer_uint64_field@@Base>
  41714a:	mov    rsi,QWORD PTR [rbp-0x10]
  41714e:	mov    rax,QWORD PTR [rbp-0x8]
  417152:	vxorps xmm0,xmm0,xmm0
  417156:	mov    r8d,0x3
  41715c:	lea    rcx,[rip+0x1f314]        # 436477 <_IO_stdin_used@@Base+0x477>
  417163:	mov    edx,0x8
  417168:	mov    rdi,rax
  41716b:	call   42e232 <flatcc_json_printer_float_field@@Base>
  417170:	mov    rsi,QWORD PTR [rbp-0x10]
  417174:	mov    rax,QWORD PTR [rbp-0x8]
  417178:	vxorpd xmm0,xmm0,xmm0
  41717c:	mov    r8d,0x3
  417182:	lea    rcx,[rip+0x1f2f2]        # 43647b <_IO_stdin_used@@Base+0x47b>
  417189:	mov    edx,0x9
  41718e:	mov    rdi,rax
  417191:	call   42e337 <flatcc_json_printer_double_field@@Base>
  417196:	mov    rsi,QWORD PTR [rbp-0x10]
  41719a:	mov    rax,QWORD PTR [rbp-0x8]
  41719e:	mov    r8d,0x2
  4171a4:	lea    rcx,[rip+0x1f2d4]        # 43647f <_IO_stdin_used@@Base+0x47f>
  4171ab:	mov    edx,0xa
  4171b0:	mov    rdi,rax
  4171b3:	call   4307b3 <flatcc_json_printer_int8_vector_field@@Base>
  4171b8:	mov    rsi,QWORD PTR [rbp-0x10]
  4171bc:	mov    rax,QWORD PTR [rbp-0x8]
  4171c0:	mov    r8d,0x4
  4171c6:	lea    rcx,[rip+0x1f2b5]        # 436482 <_IO_stdin_used@@Base+0x482>
  4171cd:	mov    edx,0xb
  4171d2:	mov    rdi,rax
  4171d5:	call   43164f <flatcc_json_printer_double_vector_field@@Base>
  4171da:	nop
  4171db:	leave  
  4171dc:	ret    
  4171dd:	push   rbp
  4171de:	mov    rbp,rsp
  4171e1:	sub    rsp,0x10
  4171e5:	mov    QWORD PTR [rbp-0x8],rdi
  4171e9:	mov    QWORD PTR [rbp-0x10],rsi
  4171ed:	mov    rsi,QWORD PTR [rbp-0x10]
  4171f1:	mov    rax,QWORD PTR [rbp-0x8]
  4171f5:	mov    r9d,0x0
  4171fb:	mov    r8d,0x13
  417201:	lea    rcx,[rip+0x1f27f]        # 436487 <_IO_stdin_used@@Base+0x487>
  417208:	mov    edx,0x0
  41720d:	mov    rdi,rax
  417210:	call   42df62 <flatcc_json_printer_int32_field@@Base>
  417215:	nop
  417216:	leave  
  417217:	ret    
  417218:	push   rbp
  417219:	mov    rbp,rsp
  41721c:	sub    rsp,0x10
  417220:	mov    QWORD PTR [rbp-0x8],rdi
  417224:	mov    QWORD PTR [rbp-0x10],rsi
  417228:	mov    rsi,QWORD PTR [rbp-0x10]
  41722c:	mov    rax,QWORD PTR [rbp-0x8]
  417230:	sub    rsp,0x8
  417234:	lea    rdx,[rip+0xffffffffffffedb0]        # 415feb <_start@@Base+0x10e8b>
  41723b:	push   rdx
  41723c:	lea    r9,[rip+0xffffffffffffec9e]        # 415ee1 <_start@@Base+0x10d81>
  417243:	mov    r8d,0xe
  417249:	lea    rcx,[rip+0x1f24b]        # 43649b <_IO_stdin_used@@Base+0x49b>
  417250:	mov    edx,0x1
  417255:	mov    rdi,rax
  417258:	call   433d0f <flatcc_json_printer_union_field@@Base>
  41725d:	add    rsp,0x10
  417261:	mov    rsi,QWORD PTR [rbp-0x10]
  417265:	mov    rax,QWORD PTR [rbp-0x8]
  417269:	sub    rsp,0x8
  41726d:	lea    rdx,[rip+0xffffffffffffed77]        # 415feb <_start@@Base+0x10e8b>
  417274:	push   rdx
  417275:	lea    r9,[rip+0xffffffffffffec65]        # 415ee1 <_start@@Base+0x10d81>
  41727c:	mov    r8d,0xa
  417282:	lea    rcx,[rip+0x1f221]        # 4364aa <_IO_stdin_used@@Base+0x4aa>
  417289:	mov    edx,0x3
  41728e:	mov    rdi,rax
  417291:	call   433d0f <flatcc_json_printer_union_field@@Base>
  417296:	add    rsp,0x10
  41729a:	mov    rsi,QWORD PTR [rbp-0x10]
  41729e:	mov    rax,QWORD PTR [rbp-0x8]
  4172a2:	sub    rsp,0x8
  4172a6:	lea    rdx,[rip+0xffffffffffffed3e]        # 415feb <_start@@Base+0x10e8b>
  4172ad:	push   rdx
  4172ae:	lea    r9,[rip+0xffffffffffffec2c]        # 415ee1 <_start@@Base+0x10d81>
  4172b5:	mov    r8d,0x9
  4172bb:	lea    rcx,[rip+0x1f1f3]        # 4364b5 <_IO_stdin_used@@Base+0x4b5>
  4172c2:	mov    edx,0x5
  4172c7:	mov    rdi,rax
  4172ca:	call   433d0f <flatcc_json_printer_union_field@@Base>
  4172cf:	add    rsp,0x10
  4172d3:	mov    rsi,QWORD PTR [rbp-0x10]
  4172d7:	mov    rax,QWORD PTR [rbp-0x8]
  4172db:	sub    rsp,0x8
  4172df:	lea    rdx,[rip+0xffffffffffffed05]        # 415feb <_start@@Base+0x10e8b>
  4172e6:	push   rdx
  4172e7:	lea    r9,[rip+0xffffffffffffebf3]        # 415ee1 <_start@@Base+0x10d81>
  4172ee:	mov    r8d,0x5
  4172f4:	lea    rcx,[rip+0x1f1c4]        # 4364bf <_IO_stdin_used@@Base+0x4bf>
  4172fb:	mov    edx,0x7
  417300:	mov    rdi,rax
  417303:	call   433d0f <flatcc_json_printer_union_field@@Base>
  417308:	add    rsp,0x10
  41730c:	mov    rsi,QWORD PTR [rbp-0x10]
  417310:	mov    rax,QWORD PTR [rbp-0x8]
  417314:	sub    rsp,0x8
  417318:	lea    rdx,[rip+0xffffffffffffeccc]        # 415feb <_start@@Base+0x10e8b>
  41731f:	push   rdx
  417320:	lea    r9,[rip+0xffffffffffffebba]        # 415ee1 <_start@@Base+0x10d81>
  417327:	mov    r8d,0xa
  41732d:	lea    rcx,[rip+0x1f191]        # 4364c5 <_IO_stdin_used@@Base+0x4c5>
  417334:	mov    edx,0x9
  417339:	mov    rdi,rax
  41733c:	call   433780 <flatcc_json_printer_union_vector_field@@Base>
  417341:	add    rsp,0x10
  417345:	nop
  417346:	leave  
  417347:	ret    
  417348:	push   rbp
  417349:	mov    rbp,rsp
  41734c:	add    rsp,0xffffffffffffff80
  417350:	mov    QWORD PTR [rbp-0x68],rdi
  417354:	mov    QWORD PTR [rbp-0x70],rsi
  417358:	mov    QWORD PTR [rbp-0x78],rdx
  41735c:	mov    rax,QWORD PTR fs:0x28
  417365:	mov    QWORD PTR [rbp-0x8],rax
  417369:	xor    eax,eax
  41736b:	cmp    QWORD PTR [rbp-0x68],0x0
  417370:	jne    41738b <_start@@Base+0x1222b>
  417372:	lea    rax,[rbp-0x60]
  417376:	mov    QWORD PTR [rbp-0x68],rax
  41737a:	mov    rax,QWORD PTR [rbp-0x68]
  41737e:	mov    esi,0x0
  417383:	mov    rdi,rax
  417386:	call   434a3d <flatcc_json_printer_init@@Base>
  41738b:	mov    rdx,QWORD PTR [rbp-0x78]
  41738f:	mov    rsi,QWORD PTR [rbp-0x70]
  417393:	mov    rax,QWORD PTR [rbp-0x68]
  417397:	lea    rcx,[rip+0x1ecd2]        # 436070 <_IO_stdin_used@@Base+0x70>
  41739e:	mov    rdi,rax
  4173a1:	call   416fc1 <_start@@Base+0x11e61>
  4173a6:	mov    rcx,QWORD PTR [rbp-0x8]
  4173aa:	xor    rcx,QWORD PTR fs:0x28
  4173b3:	je     4173ba <_start@@Base+0x1225a>
  4173b5:	call   405070 <__stack_chk_fail@plt>
  4173ba:	leave  
  4173bb:	ret    
  4173bc:	push   rbp
  4173bd:	mov    rbp,rsp
  4173c0:	sub    rsp,0x10
  4173c4:	mov    QWORD PTR [rbp-0x8],rdi
  4173c8:	mov    rax,QWORD PTR [rbp-0x8]
  4173cc:	movzx  eax,BYTE PTR [rax+0x10]
  4173d0:	movzx  eax,al
  4173d3:	cmp    eax,0x1
  4173d6:	jne    4173ed <_start@@Base+0x1228d>
  4173d8:	mov    rax,QWORD PTR [rbp-0x8]
  4173dc:	lea    rsi,[rip+0x163]        # 417546 <_start@@Base+0x123e6>
  4173e3:	mov    rdi,rax
  4173e6:	call   421e59 <flatcc_verify_union_table@@Base>
  4173eb:	jmp    4173f2 <_start@@Base+0x12292>
  4173ed:	mov    eax,0x0
  4173f2:	leave  
  4173f3:	ret    
  4173f4:	push   rbp
  4173f5:	mov    rbp,rsp
  4173f8:	sub    rsp,0x10
  4173fc:	mov    QWORD PTR [rbp-0x8],rdi
  417400:	mov    rax,QWORD PTR [rbp-0x8]
  417404:	movzx  eax,BYTE PTR [rax+0x10]
  417408:	movzx  eax,al
  41740b:	cmp    eax,0x2
  41740e:	je     41743d <_start@@Base+0x122dd>
  417410:	cmp    eax,0x2
  417413:	jg     41741c <_start@@Base+0x122bc>
  417415:	cmp    eax,0x1
  417418:	je     417428 <_start@@Base+0x122c8>
  41741a:	jmp    41747c <_start@@Base+0x1231c>
  41741c:	cmp    eax,0x3
  41741f:	je     417452 <_start@@Base+0x122f2>
  417421:	cmp    eax,0x4
  417424:	je     417467 <_start@@Base+0x12307>
  417426:	jmp    41747c <_start@@Base+0x1231c>
  417428:	mov    rax,QWORD PTR [rbp-0x8]
  41742c:	lea    rsi,[rip+0x7fd]        # 417c30 <_start@@Base+0x12ad0>
  417433:	mov    rdi,rax
  417436:	call   421e59 <flatcc_verify_union_table@@Base>
  41743b:	jmp    417481 <_start@@Base+0x12321>
  41743d:	mov    rax,QWORD PTR [rbp-0x8]
  417441:	lea    rsi,[rip+0x167]        # 4175af <_start@@Base+0x1244f>
  417448:	mov    rdi,rax
  41744b:	call   421e59 <flatcc_verify_union_table@@Base>
  417450:	jmp    417481 <_start@@Base+0x12321>
  417452:	mov    rax,QWORD PTR [rbp-0x8]
  417456:	lea    rsi,[rip+0xf8]        # 417555 <_start@@Base+0x123f5>
  41745d:	mov    rdi,rax
  417460:	call   421e59 <flatcc_verify_union_table@@Base>
  417465:	jmp    417481 <_start@@Base+0x12321>
  417467:	mov    rax,QWORD PTR [rbp-0x8]
  41746b:	lea    rsi,[rip+0x392]        # 417804 <_start@@Base+0x126a4>
  417472:	mov    rdi,rax
  417475:	call   421e59 <flatcc_verify_union_table@@Base>
  41747a:	jmp    417481 <_start@@Base+0x12321>
  41747c:	mov    eax,0x0
  417481:	leave  
  417482:	ret    
  417483:	push   rbp
  417484:	mov    rbp,rsp
  417487:	sub    rsp,0x10
  41748b:	mov    QWORD PTR [rbp-0x8],rdi
  41748f:	mov    rax,QWORD PTR [rbp-0x8]
  417493:	movzx  eax,BYTE PTR [rax+0x10]
  417497:	movzx  eax,al
  41749a:	cmp    eax,0x9
  41749d:	je     4174f3 <_start@@Base+0x12393>
  41749f:	cmp    eax,0x9
  4174a2:	jg     4174b3 <_start@@Base+0x12353>
  4174a4:	cmp    eax,0x2
  4174a7:	je     4174c6 <_start@@Base+0x12366>
  4174a9:	cmp    eax,0x8
  4174ac:	je     4174db <_start@@Base+0x1237b>
  4174ae:	jmp    41753f <_start@@Base+0x123df>
  4174b3:	cmp    eax,0xb
  4174b6:	je     417523 <_start@@Base+0x123c3>
  4174b8:	cmp    eax,0xb
  4174bb:	jl     41750b <_start@@Base+0x123ab>
  4174bd:	cmp    eax,0xff
  4174c2:	je     417531 <_start@@Base+0x123d1>
  4174c4:	jmp    41753f <_start@@Base+0x123df>
  4174c6:	mov    rax,QWORD PTR [rbp-0x8]
  4174ca:	lea    rsi,[rip+0xfdd]        # 4184ae <_start@@Base+0x1334e>
  4174d1:	mov    rdi,rax
  4174d4:	call   421e59 <flatcc_verify_union_table@@Base>
  4174d9:	jmp    417544 <_start@@Base+0x123e4>
  4174db:	mov    rax,QWORD PTR [rbp-0x8]
  4174df:	mov    edx,0x2
  4174e4:	mov    esi,0x2
  4174e9:	mov    rdi,rax
  4174ec:	call   421ea0 <flatcc_verify_union_struct@@Base>
  4174f1:	jmp    417544 <_start@@Base+0x123e4>
  4174f3:	mov    rax,QWORD PTR [rbp-0x8]
  4174f7:	mov    edx,0x4
  4174fc:	mov    esi,0x4
  417501:	mov    rdi,rax
  417504:	call   421ea0 <flatcc_verify_union_struct@@Base>
  417509:	jmp    417544 <_start@@Base+0x123e4>
  41750b:	mov    rax,QWORD PTR [rbp-0x8]
  41750f:	mov    edx,0x4
  417514:	mov    esi,0x4
  417519:	mov    rdi,rax
  41751c:	call   421ea0 <flatcc_verify_union_struct@@Base>
  417521:	jmp    417544 <_start@@Base+0x123e4>
  417523:	mov    rax,QWORD PTR [rbp-0x8]
  417527:	mov    rdi,rax
  41752a:	call   421ee3 <flatcc_verify_union_string@@Base>
  41752f:	jmp    417544 <_start@@Base+0x123e4>
  417531:	mov    rax,QWORD PTR [rbp-0x8]
  417535:	mov    rdi,rax
  417538:	call   421ee3 <flatcc_verify_union_string@@Base>
  41753d:	jmp    417544 <_start@@Base+0x123e4>
  41753f:	mov    eax,0x0
  417544:	leave  
  417545:	ret    
  417546:	push   rbp
  417547:	mov    rbp,rsp
  41754a:	mov    QWORD PTR [rbp-0x8],rdi
  41754e:	mov    eax,0x0
  417553:	pop    rbp
  417554:	ret    
  417555:	push   rbp
  417556:	mov    rbp,rsp
  417559:	mov    QWORD PTR [rbp-0x8],rdi
  41755d:	mov    eax,0x0
  417562:	pop    rbp
  417563:	ret    
  417564:	push   rbp
  417565:	mov    rbp,rsp
  417568:	mov    QWORD PTR [rbp-0x8],rdi
  41756c:	mov    eax,0x0
  417571:	pop    rbp
  417572:	ret    
  417573:	push   rbp
  417574:	mov    rbp,rsp
  417577:	sub    rsp,0x20
  41757b:	mov    QWORD PTR [rbp-0x18],rdi
  41757f:	mov    rax,QWORD PTR [rbp-0x18]
  417583:	mov    ecx,0x1
  417588:	mov    edx,0x0
  41758d:	mov    esi,0x0
  417592:	mov    rdi,rax
  417595:	call   421a90 <flatcc_verify_field@@Base>
  41759a:	mov    DWORD PTR [rbp-0x4],eax
  41759d:	cmp    DWORD PTR [rbp-0x4],0x0
  4175a1:	je     4175a8 <_start@@Base+0x12448>
  4175a3:	mov    eax,DWORD PTR [rbp-0x4]
  4175a6:	jmp    4175ad <_start@@Base+0x1244d>
  4175a8:	mov    eax,0x0
  4175ad:	leave  
  4175ae:	ret    
  4175af:	push   rbp
  4175b0:	mov    rbp,rsp
  4175b3:	sub    rsp,0x20
  4175b7:	mov    QWORD PTR [rbp-0x18],rdi
  4175bb:	mov    rax,QWORD PTR [rbp-0x18]
  4175bf:	mov    ecx,0x1
  4175c4:	mov    edx,0x1
  4175c9:	mov    esi,0x0
  4175ce:	mov    rdi,rax
  4175d1:	call   421a90 <flatcc_verify_field@@Base>
  4175d6:	mov    DWORD PTR [rbp-0x4],eax
  4175d9:	cmp    DWORD PTR [rbp-0x4],0x0
  4175dd:	je     4175e7 <_start@@Base+0x12487>
  4175df:	mov    eax,DWORD PTR [rbp-0x4]
  4175e2:	jmp    417667 <_start@@Base+0x12507>
  4175e7:	mov    rax,QWORD PTR [rbp-0x18]
  4175eb:	mov    ecx,0x1
  4175f0:	mov    edx,0x1
  4175f5:	mov    esi,0x1
  4175fa:	mov    rdi,rax
  4175fd:	call   421a90 <flatcc_verify_field@@Base>
  417602:	mov    DWORD PTR [rbp-0x4],eax
  417605:	cmp    DWORD PTR [rbp-0x4],0x0
  417609:	je     417610 <_start@@Base+0x124b0>
  41760b:	mov    eax,DWORD PTR [rbp-0x4]
  41760e:	jmp    417667 <_start@@Base+0x12507>
  417610:	mov    rax,QWORD PTR [rbp-0x18]
  417614:	mov    ecx,0x1
  417619:	mov    edx,0x1
  41761e:	mov    esi,0x2
  417623:	mov    rdi,rax
  417626:	call   421a90 <flatcc_verify_field@@Base>
  41762b:	mov    DWORD PTR [rbp-0x4],eax
  41762e:	cmp    DWORD PTR [rbp-0x4],0x0
  417632:	je     417639 <_start@@Base+0x124d9>
  417634:	mov    eax,DWORD PTR [rbp-0x4]
  417637:	jmp    417667 <_start@@Base+0x12507>
  417639:	mov    rax,QWORD PTR [rbp-0x18]
  41763d:	mov    ecx,0x1
  417642:	mov    edx,0x1
  417647:	mov    esi,0x3
  41764c:	mov    rdi,rax
  41764f:	call   421a90 <flatcc_verify_field@@Base>
  417654:	mov    DWORD PTR [rbp-0x4],eax
  417657:	cmp    DWORD PTR [rbp-0x4],0x0
  41765b:	je     417662 <_start@@Base+0x12502>
  41765d:	mov    eax,DWORD PTR [rbp-0x4]
  417660:	jmp    417667 <_start@@Base+0x12507>
  417662:	mov    eax,0x0
  417667:	leave  
  417668:	ret    
  417669:	push   rbp
  41766a:	mov    rbp,rsp
  41766d:	sub    rsp,0x20
  417671:	mov    QWORD PTR [rbp-0x18],rdi
  417675:	mov    rax,QWORD PTR [rbp-0x18]
  417679:	mov    ecx,0x1
  41767e:	mov    edx,0x0
  417683:	mov    esi,0x0
  417688:	mov    rdi,rax
  41768b:	call   421a90 <flatcc_verify_field@@Base>
  417690:	mov    DWORD PTR [rbp-0x4],eax
  417693:	cmp    DWORD PTR [rbp-0x4],0x0
  417697:	je     4176a1 <_start@@Base+0x12541>
  417699:	mov    eax,DWORD PTR [rbp-0x4]
  41769c:	jmp    417779 <_start@@Base+0x12619>
  4176a1:	mov    rax,QWORD PTR [rbp-0x18]
  4176a5:	mov    ecx,0x8
  4176aa:	mov    edx,0x8
  4176af:	mov    esi,0x1
  4176b4:	mov    rdi,rax
  4176b7:	call   421a90 <flatcc_verify_field@@Base>
  4176bc:	mov    DWORD PTR [rbp-0x4],eax
  4176bf:	cmp    DWORD PTR [rbp-0x4],0x0
  4176c3:	je     4176cd <_start@@Base+0x1256d>
  4176c5:	mov    eax,DWORD PTR [rbp-0x4]
  4176c8:	jmp    417779 <_start@@Base+0x12619>
  4176cd:	mov    rax,QWORD PTR [rbp-0x18]
  4176d1:	mov    ecx,0x8
  4176d6:	mov    edx,0x8
  4176db:	mov    esi,0x2
  4176e0:	mov    rdi,rax
  4176e3:	call   421a90 <flatcc_verify_field@@Base>
  4176e8:	mov    DWORD PTR [rbp-0x4],eax
  4176eb:	cmp    DWORD PTR [rbp-0x4],0x0
  4176ef:	je     4176f9 <_start@@Base+0x12599>
  4176f1:	mov    eax,DWORD PTR [rbp-0x4]
  4176f4:	jmp    417779 <_start@@Base+0x12619>
  4176f9:	mov    rax,QWORD PTR [rbp-0x18]
  4176fd:	mov    ecx,0x4
  417702:	mov    edx,0x4
  417707:	mov    esi,0x3
  41770c:	mov    rdi,rax
  41770f:	call   421a90 <flatcc_verify_field@@Base>
  417714:	mov    DWORD PTR [rbp-0x4],eax
  417717:	cmp    DWORD PTR [rbp-0x4],0x0
  41771b:	je     417722 <_start@@Base+0x125c2>
  41771d:	mov    eax,DWORD PTR [rbp-0x4]
  417720:	jmp    417779 <_start@@Base+0x12619>
  417722:	mov    rax,QWORD PTR [rbp-0x18]
  417726:	mov    ecx,0x8
  41772b:	mov    edx,0x8
  417730:	mov    esi,0x4
  417735:	mov    rdi,rax
  417738:	call   421a90 <flatcc_verify_field@@Base>
  41773d:	mov    DWORD PTR [rbp-0x4],eax
  417740:	cmp    DWORD PTR [rbp-0x4],0x0
  417744:	je     41774b <_start@@Base+0x125eb>
  417746:	mov    eax,DWORD PTR [rbp-0x4]
  417749:	jmp    417779 <_start@@Base+0x12619>
  41774b:	mov    rax,QWORD PTR [rbp-0x18]
  41774f:	mov    ecx,0x8
  417754:	mov    edx,0x8
  417759:	mov    esi,0x5
  41775e:	mov    rdi,rax
  417761:	call   421a90 <flatcc_verify_field@@Base>
  417766:	mov    DWORD PTR [rbp-0x4],eax
  417769:	cmp    DWORD PTR [rbp-0x4],0x0
  41776d:	je     417774 <_start@@Base+0x12614>
  41776f:	mov    eax,DWORD PTR [rbp-0x4]
  417772:	jmp    417779 <_start@@Base+0x12619>
  417774:	mov    eax,0x0
  417779:	leave  
  41777a:	ret    
  41777b:	push   rbp
  41777c:	mov    rbp,rsp
  41777f:	sub    rsp,0x20
  417783:	mov    QWORD PTR [rbp-0x18],rdi
  417787:	mov    rax,QWORD PTR [rbp-0x18]
  41778b:	mov    edx,0x0
  417790:	mov    esi,0x0
  417795:	mov    rdi,rax
  417798:	call   421afb <flatcc_verify_string_field@@Base>
  41779d:	mov    DWORD PTR [rbp-0x4],eax
  4177a0:	cmp    DWORD PTR [rbp-0x4],0x0
  4177a4:	je     4177ab <_start@@Base+0x1264b>
  4177a6:	mov    eax,DWORD PTR [rbp-0x4]
  4177a9:	jmp    417802 <_start@@Base+0x126a2>
  4177ab:	mov    rax,QWORD PTR [rbp-0x18]
  4177af:	mov    ecx,0x8
  4177b4:	mov    edx,0x8
  4177b9:	mov    esi,0x1
  4177be:	mov    rdi,rax
  4177c1:	call   421a90 <flatcc_verify_field@@Base>
  4177c6:	mov    DWORD PTR [rbp-0x4],eax
  4177c9:	cmp    DWORD PTR [rbp-0x4],0x0
  4177cd:	je     4177d4 <_start@@Base+0x12674>
  4177cf:	mov    eax,DWORD PTR [rbp-0x4]
  4177d2:	jmp    417802 <_start@@Base+0x126a2>
  4177d4:	mov    rax,QWORD PTR [rbp-0x18]
  4177d8:	mov    ecx,0x2
  4177dd:	mov    edx,0x2
  4177e2:	mov    esi,0x2
  4177e7:	mov    rdi,rax
  4177ea:	call   421a90 <flatcc_verify_field@@Base>
  4177ef:	mov    DWORD PTR [rbp-0x4],eax
  4177f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4177f6:	je     4177fd <_start@@Base+0x1269d>
  4177f8:	mov    eax,DWORD PTR [rbp-0x4]
  4177fb:	jmp    417802 <_start@@Base+0x126a2>
  4177fd:	mov    eax,0x0
  417802:	leave  
  417803:	ret    
  417804:	push   rbp
  417805:	mov    rbp,rsp
  417808:	sub    rsp,0x20
  41780c:	mov    QWORD PTR [rbp-0x18],rdi
  417810:	mov    rax,QWORD PTR [rbp-0x18]
  417814:	lea    rcx,[rip+0x7d]        # 417898 <_start@@Base+0x12738>
  41781b:	mov    edx,0x0
  417820:	mov    esi,0x0
  417825:	mov    rdi,rax
  417828:	call   421cf5 <flatcc_verify_table_field@@Base>
  41782d:	mov    DWORD PTR [rbp-0x4],eax
  417830:	cmp    DWORD PTR [rbp-0x4],0x0
  417834:	je     41783b <_start@@Base+0x126db>
  417836:	mov    eax,DWORD PTR [rbp-0x4]
  417839:	jmp    417896 <_start@@Base+0x12736>
  41783b:	mov    rax,QWORD PTR [rbp-0x18]
  41783f:	lea    rcx,[rip+0xca4]        # 4184ea <_start@@Base+0x1338a>
  417846:	mov    edx,0x0
  41784b:	mov    esi,0x1
  417850:	mov    rdi,rax
  417853:	call   421cf5 <flatcc_verify_table_field@@Base>
  417858:	mov    DWORD PTR [rbp-0x4],eax
  41785b:	cmp    DWORD PTR [rbp-0x4],0x0
  41785f:	je     417866 <_start@@Base+0x12706>
  417861:	mov    eax,DWORD PTR [rbp-0x4]
  417864:	jmp    417896 <_start@@Base+0x12736>
  417866:	mov    rax,QWORD PTR [rbp-0x18]
  41786a:	lea    rcx,[rip+0xfffffffffffffb83]        # 4173f4 <_start@@Base+0x12294>
  417871:	mov    edx,0x0
  417876:	mov    esi,0x3
  41787b:	mov    rdi,rax
  41787e:	call   422709 <flatcc_verify_union_vector_field@@Base>
  417883:	mov    DWORD PTR [rbp-0x4],eax
  417886:	cmp    DWORD PTR [rbp-0x4],0x0
  41788a:	je     417891 <_start@@Base+0x12731>
  41788c:	mov    eax,DWORD PTR [rbp-0x4]
  41788f:	jmp    417896 <_start@@Base+0x12736>
  417891:	mov    eax,0x0
  417896:	leave  
  417897:	ret    
  417898:	push   rbp
  417899:	mov    rbp,rsp
  41789c:	sub    rsp,0x20
  4178a0:	mov    QWORD PTR [rbp-0x18],rdi
  4178a4:	mov    rax,QWORD PTR [rbp-0x18]
  4178a8:	lea    rcx,[rip+0x7d]        # 41792c <_start@@Base+0x127cc>
  4178af:	mov    edx,0x0
  4178b4:	mov    esi,0x0
  4178b9:	mov    rdi,rax
  4178bc:	call   421cf5 <flatcc_verify_table_field@@Base>
  4178c1:	mov    DWORD PTR [rbp-0x4],eax
  4178c4:	cmp    DWORD PTR [rbp-0x4],0x0
  4178c8:	je     4178cf <_start@@Base+0x1276f>
  4178ca:	mov    eax,DWORD PTR [rbp-0x4]
  4178cd:	jmp    41792a <_start@@Base+0x127ca>
  4178cf:	mov    rax,QWORD PTR [rbp-0x18]
  4178d3:	lea    rcx,[rip+0x1d9]        # 417ab3 <_start@@Base+0x12953>
  4178da:	mov    edx,0x0
  4178df:	mov    esi,0x1
  4178e4:	mov    rdi,rax
  4178e7:	call   421cf5 <flatcc_verify_table_field@@Base>
  4178ec:	mov    DWORD PTR [rbp-0x4],eax
  4178ef:	cmp    DWORD PTR [rbp-0x4],0x0
  4178f3:	je     4178fa <_start@@Base+0x1279a>
  4178f5:	mov    eax,DWORD PTR [rbp-0x4]
  4178f8:	jmp    41792a <_start@@Base+0x127ca>
  4178fa:	mov    rax,QWORD PTR [rbp-0x18]
  4178fe:	lea    rcx,[rip+0x213]        # 417b18 <_start@@Base+0x129b8>
  417905:	mov    edx,0x0
  41790a:	mov    esi,0x2
  41790f:	mov    rdi,rax
  417912:	call   421cf5 <flatcc_verify_table_field@@Base>
  417917:	mov    DWORD PTR [rbp-0x4],eax
  41791a:	cmp    DWORD PTR [rbp-0x4],0x0
  41791e:	je     417925 <_start@@Base+0x127c5>
  417920:	mov    eax,DWORD PTR [rbp-0x4]
  417923:	jmp    41792a <_start@@Base+0x127ca>
  417925:	mov    eax,0x0
  41792a:	leave  
  41792b:	ret    
  41792c:	push   rbp
  41792d:	mov    rbp,rsp
  417930:	sub    rsp,0x20
  417934:	mov    QWORD PTR [rbp-0x18],rdi
  417938:	mov    rax,QWORD PTR [rbp-0x18]
  41793c:	mov    edx,0x0
  417941:	mov    esi,0x0
  417946:	mov    rdi,rax
  417949:	call   421afb <flatcc_verify_string_field@@Base>
  41794e:	mov    DWORD PTR [rbp-0x4],eax
  417951:	cmp    DWORD PTR [rbp-0x4],0x0
  417955:	je     41795f <_start@@Base+0x127ff>
  417957:	mov    eax,DWORD PTR [rbp-0x4]
  41795a:	jmp    417ab1 <_start@@Base+0x12951>
  41795f:	mov    rax,QWORD PTR [rbp-0x18]
  417963:	mov    ecx,0x4
  417968:	mov    edx,0x4
  41796d:	mov    esi,0x1
  417972:	mov    rdi,rax
  417975:	call   421a90 <flatcc_verify_field@@Base>
  41797a:	mov    DWORD PTR [rbp-0x4],eax
  41797d:	cmp    DWORD PTR [rbp-0x4],0x0
  417981:	je     41798b <_start@@Base+0x1282b>
  417983:	mov    eax,DWORD PTR [rbp-0x4]
  417986:	jmp    417ab1 <_start@@Base+0x12951>
  41798b:	mov    rax,QWORD PTR [rbp-0x18]
  41798f:	mov    edx,0x0
  417994:	mov    esi,0x2
  417999:	mov    rdi,rax
  41799c:	call   421afb <flatcc_verify_string_field@@Base>
  4179a1:	mov    DWORD PTR [rbp-0x4],eax
  4179a4:	cmp    DWORD PTR [rbp-0x4],0x0
  4179a8:	je     4179b2 <_start@@Base+0x12852>
  4179aa:	mov    eax,DWORD PTR [rbp-0x4]
  4179ad:	jmp    417ab1 <_start@@Base+0x12951>
  4179b2:	mov    rax,QWORD PTR [rbp-0x18]
  4179b6:	mov    ecx,0x8
  4179bb:	mov    edx,0x8
  4179c0:	mov    esi,0x3
  4179c5:	mov    rdi,rax
  4179c8:	call   421a90 <flatcc_verify_field@@Base>
  4179cd:	mov    DWORD PTR [rbp-0x4],eax
  4179d0:	cmp    DWORD PTR [rbp-0x4],0x0
  4179d4:	je     4179de <_start@@Base+0x1287e>
  4179d6:	mov    eax,DWORD PTR [rbp-0x4]
  4179d9:	jmp    417ab1 <_start@@Base+0x12951>
  4179de:	mov    rax,QWORD PTR [rbp-0x18]
  4179e2:	mov    edx,0x0
  4179e7:	mov    esi,0x4
  4179ec:	mov    rdi,rax
  4179ef:	call   421afb <flatcc_verify_string_field@@Base>
  4179f4:	mov    DWORD PTR [rbp-0x4],eax
  4179f7:	cmp    DWORD PTR [rbp-0x4],0x0
  4179fb:	je     417a05 <_start@@Base+0x128a5>
  4179fd:	mov    eax,DWORD PTR [rbp-0x4]
  417a00:	jmp    417ab1 <_start@@Base+0x12951>
  417a05:	mov    rax,QWORD PTR [rbp-0x18]
  417a09:	mov    ecx,0x8
  417a0e:	mov    edx,0x8
  417a13:	mov    esi,0x5
  417a18:	mov    rdi,rax
  417a1b:	call   421a90 <flatcc_verify_field@@Base>
  417a20:	mov    DWORD PTR [rbp-0x4],eax
  417a23:	cmp    DWORD PTR [rbp-0x4],0x0
  417a27:	je     417a31 <_start@@Base+0x128d1>
  417a29:	mov    eax,DWORD PTR [rbp-0x4]
  417a2c:	jmp    417ab1 <_start@@Base+0x12951>
  417a31:	mov    rax,QWORD PTR [rbp-0x18]
  417a35:	mov    ecx,0x4
  417a3a:	mov    edx,0x4
  417a3f:	mov    esi,0x6
  417a44:	mov    rdi,rax
  417a47:	call   421a90 <flatcc_verify_field@@Base>
  417a4c:	mov    DWORD PTR [rbp-0x4],eax
  417a4f:	cmp    DWORD PTR [rbp-0x4],0x0
  417a53:	je     417a5a <_start@@Base+0x128fa>
  417a55:	mov    eax,DWORD PTR [rbp-0x4]
  417a58:	jmp    417ab1 <_start@@Base+0x12951>
  417a5a:	mov    rax,QWORD PTR [rbp-0x18]
  417a5e:	mov    ecx,0x8
  417a63:	mov    edx,0x8
  417a68:	mov    esi,0x7
  417a6d:	mov    rdi,rax
  417a70:	call   421a90 <flatcc_verify_field@@Base>
  417a75:	mov    DWORD PTR [rbp-0x4],eax
  417a78:	cmp    DWORD PTR [rbp-0x4],0x0
  417a7c:	je     417a83 <_start@@Base+0x12923>
  417a7e:	mov    eax,DWORD PTR [rbp-0x4]
  417a81:	jmp    417ab1 <_start@@Base+0x12951>
  417a83:	mov    rax,QWORD PTR [rbp-0x18]
  417a87:	mov    ecx,0x4
  417a8c:	mov    edx,0x4
  417a91:	mov    esi,0x8
  417a96:	mov    rdi,rax
  417a99:	call   421a90 <flatcc_verify_field@@Base>
  417a9e:	mov    DWORD PTR [rbp-0x4],eax
  417aa1:	cmp    DWORD PTR [rbp-0x4],0x0
  417aa5:	je     417aac <_start@@Base+0x1294c>
  417aa7:	mov    eax,DWORD PTR [rbp-0x4]
  417aaa:	jmp    417ab1 <_start@@Base+0x12951>
  417aac:	mov    eax,0x0
  417ab1:	leave  
  417ab2:	ret    
  417ab3:	push   rbp
  417ab4:	mov    rbp,rsp
  417ab7:	sub    rsp,0x20
  417abb:	mov    QWORD PTR [rbp-0x18],rdi
  417abf:	mov    rax,QWORD PTR [rbp-0x18]
  417ac3:	mov    ecx,0x8
  417ac8:	mov    edx,0x8
  417acd:	mov    esi,0x0
  417ad2:	mov    rdi,rax
  417ad5:	call   421a90 <flatcc_verify_field@@Base>
  417ada:	mov    DWORD PTR [rbp-0x4],eax
  417add:	cmp    DWORD PTR [rbp-0x4],0x0
  417ae1:	je     417ae8 <_start@@Base+0x12988>
  417ae3:	mov    eax,DWORD PTR [rbp-0x4]
  417ae6:	jmp    417b16 <_start@@Base+0x129b6>
  417ae8:	mov    rax,QWORD PTR [rbp-0x18]
  417aec:	mov    ecx,0x4
  417af1:	mov    edx,0x4
  417af6:	mov    esi,0x1
  417afb:	mov    rdi,rax
  417afe:	call   421a90 <flatcc_verify_field@@Base>
  417b03:	mov    DWORD PTR [rbp-0x4],eax
  417b06:	cmp    DWORD PTR [rbp-0x4],0x0
  417b0a:	je     417b11 <_start@@Base+0x129b1>
  417b0c:	mov    eax,DWORD PTR [rbp-0x4]
  417b0f:	jmp    417b16 <_start@@Base+0x129b6>
  417b11:	mov    eax,0x0
  417b16:	leave  
  417b17:	ret    
  417b18:	push   rbp
  417b19:	mov    rbp,rsp
  417b1c:	sub    rsp,0x20
  417b20:	mov    QWORD PTR [rbp-0x18],rdi
  417b24:	mov    rax,QWORD PTR [rbp-0x18]
  417b28:	mov    ecx,0x8
  417b2d:	mov    edx,0x8
  417b32:	mov    esi,0x0
  417b37:	mov    rdi,rax
  417b3a:	call   421a90 <flatcc_verify_field@@Base>
  417b3f:	mov    DWORD PTR [rbp-0x4],eax
  417b42:	cmp    DWORD PTR [rbp-0x4],0x0
  417b46:	je     417b4d <_start@@Base+0x129ed>
  417b48:	mov    eax,DWORD PTR [rbp-0x4]
  417b4b:	jmp    417b7b <_start@@Base+0x12a1b>
  417b4d:	mov    rax,QWORD PTR [rbp-0x18]
  417b51:	mov    ecx,0x4
  417b56:	mov    edx,0x4
  417b5b:	mov    esi,0x1
  417b60:	mov    rdi,rax
  417b63:	call   421a90 <flatcc_verify_field@@Base>
  417b68:	mov    DWORD PTR [rbp-0x4],eax
  417b6b:	cmp    DWORD PTR [rbp-0x4],0x0
  417b6f:	je     417b76 <_start@@Base+0x12a16>
  417b71:	mov    eax,DWORD PTR [rbp-0x4]
  417b74:	jmp    417b7b <_start@@Base+0x12a1b>
  417b76:	mov    eax,0x0
  417b7b:	leave  
  417b7c:	ret    
  417b7d:	push   rbp
  417b7e:	mov    rbp,rsp
  417b81:	sub    rsp,0x20
  417b85:	mov    QWORD PTR [rbp-0x18],rdi
  417b89:	mov    rax,QWORD PTR [rbp-0x18]
  417b8d:	mov    r9d,0xffffffff
  417b93:	mov    r8d,0x1
  417b99:	mov    ecx,0x1
  417b9e:	mov    edx,0x0
  417ba3:	mov    esi,0x0
  417ba8:	mov    rdi,rax
  417bab:	call   421b90 <flatcc_verify_vector_field@@Base>
  417bb0:	mov    DWORD PTR [rbp-0x4],eax
  417bb3:	cmp    DWORD PTR [rbp-0x4],0x0
  417bb7:	je     417bbe <_start@@Base+0x12a5e>
  417bb9:	mov    eax,DWORD PTR [rbp-0x4]
  417bbc:	jmp    417c2e <_start@@Base+0x12ace>
  417bbe:	mov    rax,QWORD PTR [rbp-0x18]
  417bc2:	mov    r9d,0xffffffff
  417bc8:	mov    r8d,0x1
  417bce:	mov    ecx,0x1
  417bd3:	mov    edx,0x0
  417bd8:	mov    esi,0x1
  417bdd:	mov    rdi,rax
  417be0:	call   421b90 <flatcc_verify_vector_field@@Base>
  417be5:	mov    DWORD PTR [rbp-0x4],eax
  417be8:	cmp    DWORD PTR [rbp-0x4],0x0
  417bec:	je     417bf3 <_start@@Base+0x12a93>
  417bee:	mov    eax,DWORD PTR [rbp-0x4]
  417bf1:	jmp    417c2e <_start@@Base+0x12ace>
  417bf3:	mov    rax,QWORD PTR [rbp-0x18]
  417bf7:	lea    r9,[rip+0x32]        # 417c30 <_start@@Base+0x12ad0>
  417bfe:	mov    r8d,0x1
  417c04:	mov    ecx,0x0
  417c09:	mov    edx,0x0
  417c0e:	mov    esi,0x2
  417c13:	mov    rdi,rax
  417c16:	call   4223bf <flatcc_verify_table_as_nested_root@@Base>
  417c1b:	mov    DWORD PTR [rbp-0x4],eax
  417c1e:	cmp    DWORD PTR [rbp-0x4],0x0
  417c22:	je     417c29 <_start@@Base+0x12ac9>
  417c24:	mov    eax,DWORD PTR [rbp-0x4]
  417c27:	jmp    417c2e <_start@@Base+0x12ace>
  417c29:	mov    eax,0x0
  417c2e:	leave  
  417c2f:	ret    
  417c30:	push   rbp
  417c31:	mov    rbp,rsp
  417c34:	sub    rsp,0x20
  417c38:	mov    QWORD PTR [rbp-0x18],rdi
  417c3c:	mov    rax,QWORD PTR [rbp-0x18]
  417c40:	mov    ecx,0x10
  417c45:	mov    edx,0x20
  417c4a:	mov    esi,0x0
  417c4f:	mov    rdi,rax
  417c52:	call   421a90 <flatcc_verify_field@@Base>
  417c57:	mov    DWORD PTR [rbp-0x4],eax
  417c5a:	cmp    DWORD PTR [rbp-0x4],0x0
  417c5e:	je     417c68 <_start@@Base+0x12b08>
  417c60:	mov    eax,DWORD PTR [rbp-0x4]
  417c63:	jmp    41827a <_start@@Base+0x1311a>
  417c68:	mov    rax,QWORD PTR [rbp-0x18]
  417c6c:	mov    ecx,0x2
  417c71:	mov    edx,0x2
  417c76:	mov    esi,0x2
  417c7b:	mov    rdi,rax
  417c7e:	call   421a90 <flatcc_verify_field@@Base>
  417c83:	mov    DWORD PTR [rbp-0x4],eax
  417c86:	cmp    DWORD PTR [rbp-0x4],0x0
  417c8a:	je     417c94 <_start@@Base+0x12b34>
  417c8c:	mov    eax,DWORD PTR [rbp-0x4]
  417c8f:	jmp    41827a <_start@@Base+0x1311a>
  417c94:	mov    rax,QWORD PTR [rbp-0x18]
  417c98:	mov    ecx,0x2
  417c9d:	mov    edx,0x2
  417ca2:	mov    esi,0x1
  417ca7:	mov    rdi,rax
  417caa:	call   421a90 <flatcc_verify_field@@Base>
  417caf:	mov    DWORD PTR [rbp-0x4],eax
  417cb2:	cmp    DWORD PTR [rbp-0x4],0x0
  417cb6:	je     417cc0 <_start@@Base+0x12b60>
  417cb8:	mov    eax,DWORD PTR [rbp-0x4]
  417cbb:	jmp    41827a <_start@@Base+0x1311a>
  417cc0:	mov    rax,QWORD PTR [rbp-0x18]
  417cc4:	mov    edx,0x1
  417cc9:	mov    esi,0x3
  417cce:	mov    rdi,rax
  417cd1:	call   421afb <flatcc_verify_string_field@@Base>
  417cd6:	mov    DWORD PTR [rbp-0x4],eax
  417cd9:	cmp    DWORD PTR [rbp-0x4],0x0
  417cdd:	je     417ce7 <_start@@Base+0x12b87>
  417cdf:	mov    eax,DWORD PTR [rbp-0x4]
  417ce2:	jmp    41827a <_start@@Base+0x1311a>
  417ce7:	mov    rax,QWORD PTR [rbp-0x18]
  417ceb:	mov    ecx,0x1
  417cf0:	mov    edx,0x1
  417cf5:	mov    esi,0x6
  417cfa:	mov    rdi,rax
  417cfd:	call   421a90 <flatcc_verify_field@@Base>
  417d02:	mov    DWORD PTR [rbp-0x4],eax
  417d05:	cmp    DWORD PTR [rbp-0x4],0x0
  417d09:	je     417d13 <_start@@Base+0x12bb3>
  417d0b:	mov    eax,DWORD PTR [rbp-0x4]
  417d0e:	jmp    41827a <_start@@Base+0x1311a>
  417d13:	mov    rax,QWORD PTR [rbp-0x18]
  417d17:	mov    r9d,0xffffffff
  417d1d:	mov    r8d,0x1
  417d23:	mov    ecx,0x1
  417d28:	mov    edx,0x0
  417d2d:	mov    esi,0x5
  417d32:	mov    rdi,rax
  417d35:	call   421b90 <flatcc_verify_vector_field@@Base>
  417d3a:	mov    DWORD PTR [rbp-0x4],eax
  417d3d:	cmp    DWORD PTR [rbp-0x4],0x0
  417d41:	je     417d4b <_start@@Base+0x12beb>
  417d43:	mov    eax,DWORD PTR [rbp-0x4]
  417d46:	jmp    41827a <_start@@Base+0x1311a>
  417d4b:	mov    rax,QWORD PTR [rbp-0x18]
  417d4f:	lea    rcx,[rip+0xfffffffffffffeda]        # 417c30 <_start@@Base+0x12ad0>
  417d56:	mov    edx,0x0
  417d5b:	mov    esi,0xb
  417d60:	mov    rdi,rax
  417d63:	call   421da7 <flatcc_verify_table_vector_field@@Base>
  417d68:	mov    DWORD PTR [rbp-0x4],eax
  417d6b:	cmp    DWORD PTR [rbp-0x4],0x0
  417d6f:	je     417d79 <_start@@Base+0x12c19>
  417d71:	mov    eax,DWORD PTR [rbp-0x4]
  417d74:	jmp    41827a <_start@@Base+0x1311a>
  417d79:	mov    rax,QWORD PTR [rbp-0x18]
  417d7d:	mov    edx,0x0
  417d82:	mov    esi,0xa
  417d87:	mov    rdi,rax
  417d8a:	call   421c60 <flatcc_verify_string_vector_field@@Base>
  417d8f:	mov    DWORD PTR [rbp-0x4],eax
  417d92:	cmp    DWORD PTR [rbp-0x4],0x0
  417d96:	je     417da0 <_start@@Base+0x12c40>
  417d98:	mov    eax,DWORD PTR [rbp-0x4]
  417d9b:	jmp    41827a <_start@@Base+0x1311a>
  417da0:	mov    rax,QWORD PTR [rbp-0x18]
  417da4:	mov    edx,0x0
  417da9:	mov    esi,0x1c
  417dae:	mov    rdi,rax
  417db1:	call   421c60 <flatcc_verify_string_vector_field@@Base>
  417db6:	mov    DWORD PTR [rbp-0x4],eax
  417db9:	cmp    DWORD PTR [rbp-0x4],0x0
  417dbd:	je     417dc7 <_start@@Base+0x12c67>
  417dbf:	mov    eax,DWORD PTR [rbp-0x4]
  417dc2:	jmp    41827a <_start@@Base+0x1311a>
  417dc7:	mov    rax,QWORD PTR [rbp-0x18]
  417dcb:	mov    r9d,0xffffffff
  417dd1:	mov    r8d,0x1
  417dd7:	mov    ecx,0x1
  417ddc:	mov    edx,0x0
  417de1:	mov    esi,0x18
  417de6:	mov    rdi,rax
  417de9:	call   421b90 <flatcc_verify_vector_field@@Base>
  417dee:	mov    DWORD PTR [rbp-0x4],eax
  417df1:	cmp    DWORD PTR [rbp-0x4],0x0
  417df5:	je     417dff <_start@@Base+0x12c9f>
  417df7:	mov    eax,DWORD PTR [rbp-0x4]
  417dfa:	jmp    41827a <_start@@Base+0x1311a>
  417dff:	mov    rax,QWORD PTR [rbp-0x18]
  417e03:	mov    r9d,0x1fffffff
  417e09:	mov    r8d,0x4
  417e0f:	mov    ecx,0x8
  417e14:	mov    edx,0x0
  417e19:	mov    esi,0x1d
  417e1e:	mov    rdi,rax
  417e21:	call   421b90 <flatcc_verify_vector_field@@Base>
  417e26:	mov    DWORD PTR [rbp-0x4],eax
  417e29:	cmp    DWORD PTR [rbp-0x4],0x0
  417e2d:	je     417e37 <_start@@Base+0x12cd7>
  417e2f:	mov    eax,DWORD PTR [rbp-0x4]
  417e32:	jmp    41827a <_start@@Base+0x1311a>
  417e37:	mov    rax,QWORD PTR [rbp-0x18]
  417e3b:	lea    rcx,[rip+0xfffffffffffffdee]        # 417c30 <_start@@Base+0x12ad0>
  417e42:	mov    edx,0x0
  417e47:	mov    esi,0xc
  417e4c:	mov    rdi,rax
  417e4f:	call   421cf5 <flatcc_verify_table_field@@Base>
  417e54:	mov    DWORD PTR [rbp-0x4],eax
  417e57:	cmp    DWORD PTR [rbp-0x4],0x0
  417e5b:	je     417e65 <_start@@Base+0x12d05>
  417e5d:	mov    eax,DWORD PTR [rbp-0x4]
  417e60:	jmp    41827a <_start@@Base+0x1311a>
  417e65:	mov    rax,QWORD PTR [rbp-0x18]
  417e69:	lea    rcx,[rip+0xfffffffffffff584]        # 4173f4 <_start@@Base+0x12294>
  417e70:	mov    edx,0x0
  417e75:	mov    esi,0x8
  417e7a:	mov    rdi,rax
  417e7d:	call   422502 <flatcc_verify_union_field@@Base>
  417e82:	mov    DWORD PTR [rbp-0x4],eax
  417e85:	cmp    DWORD PTR [rbp-0x4],0x0
  417e89:	je     417e93 <_start@@Base+0x12d33>
  417e8b:	mov    eax,DWORD PTR [rbp-0x4]
  417e8e:	jmp    41827a <_start@@Base+0x1311a>
  417e93:	mov    rax,QWORD PTR [rbp-0x18]
  417e97:	mov    r9d,0x3fffffff
  417e9d:	mov    r8d,0x2
  417ea3:	mov    ecx,0x4
  417ea8:	mov    edx,0x0
  417ead:	mov    esi,0x9
  417eb2:	mov    rdi,rax
  417eb5:	call   421b90 <flatcc_verify_vector_field@@Base>
  417eba:	mov    DWORD PTR [rbp-0x4],eax
  417ebd:	cmp    DWORD PTR [rbp-0x4],0x0
  417ec1:	je     417ecb <_start@@Base+0x12d6b>
  417ec3:	mov    eax,DWORD PTR [rbp-0x4]
  417ec6:	jmp    41827a <_start@@Base+0x1311a>
  417ecb:	mov    rax,QWORD PTR [rbp-0x18]
  417ecf:	mov    r9d,0x3fffffff
  417ed5:	mov    r8d,0x2
  417edb:	mov    ecx,0x4
  417ee0:	mov    edx,0x0
  417ee5:	mov    esi,0x1f
  417eea:	mov    rdi,rax
  417eed:	call   421b90 <flatcc_verify_vector_field@@Base>
  417ef2:	mov    DWORD PTR [rbp-0x4],eax
  417ef5:	cmp    DWORD PTR [rbp-0x4],0x0
  417ef9:	je     417f03 <_start@@Base+0x12da3>
  417efb:	mov    eax,DWORD PTR [rbp-0x4]
  417efe:	jmp    41827a <_start@@Base+0x1311a>
  417f03:	mov    rax,QWORD PTR [rbp-0x18]
  417f07:	lea    r9,[rip+0xfffffffffffffd22]        # 417c30 <_start@@Base+0x12ad0>
  417f0e:	mov    r8d,0x1
  417f14:	mov    ecx,0x0
  417f19:	mov    edx,0x0
  417f1e:	mov    esi,0xd
  417f23:	mov    rdi,rax
  417f26:	call   4223bf <flatcc_verify_table_as_nested_root@@Base>
  417f2b:	mov    DWORD PTR [rbp-0x4],eax
  417f2e:	cmp    DWORD PTR [rbp-0x4],0x0
  417f32:	je     417f3c <_start@@Base+0x12ddc>
  417f34:	mov    eax,DWORD PTR [rbp-0x4]
  417f37:	jmp    41827a <_start@@Base+0x1311a>
  417f3c:	mov    rax,QWORD PTR [rbp-0x18]
  417f40:	lea    rcx,[rip+0xfffffffffffff834]        # 41777b <_start@@Base+0x1261b>
  417f47:	mov    edx,0x0
  417f4c:	mov    esi,0xe
  417f51:	mov    rdi,rax
  417f54:	call   421cf5 <flatcc_verify_table_field@@Base>
  417f59:	mov    DWORD PTR [rbp-0x4],eax
  417f5c:	cmp    DWORD PTR [rbp-0x4],0x0
  417f60:	je     417f6a <_start@@Base+0x12e0a>
  417f62:	mov    eax,DWORD PTR [rbp-0x4]
  417f65:	jmp    41827a <_start@@Base+0x1311a>
  417f6a:	mov    rax,QWORD PTR [rbp-0x18]
  417f6e:	mov    ecx,0x1
  417f73:	mov    edx,0x1
  417f78:	mov    esi,0xf
  417f7d:	mov    rdi,rax
  417f80:	call   421a90 <flatcc_verify_field@@Base>
  417f85:	mov    DWORD PTR [rbp-0x4],eax
  417f88:	cmp    DWORD PTR [rbp-0x4],0x0
  417f8c:	je     417f96 <_start@@Base+0x12e36>
  417f8e:	mov    eax,DWORD PTR [rbp-0x4]
  417f91:	jmp    41827a <_start@@Base+0x1311a>
  417f96:	mov    rax,QWORD PTR [rbp-0x18]
  417f9a:	mov    ecx,0x4
  417f9f:	mov    edx,0x4
  417fa4:	mov    esi,0x10
  417fa9:	mov    rdi,rax
  417fac:	call   421a90 <flatcc_verify_field@@Base>
  417fb1:	mov    DWORD PTR [rbp-0x4],eax
  417fb4:	cmp    DWORD PTR [rbp-0x4],0x0
  417fb8:	je     417fc2 <_start@@Base+0x12e62>
  417fba:	mov    eax,DWORD PTR [rbp-0x4]
  417fbd:	jmp    41827a <_start@@Base+0x1311a>
  417fc2:	mov    rax,QWORD PTR [rbp-0x18]
  417fc6:	mov    ecx,0x4
  417fcb:	mov    edx,0x4
  417fd0:	mov    esi,0x11
  417fd5:	mov    rdi,rax
  417fd8:	call   421a90 <flatcc_verify_field@@Base>
  417fdd:	mov    DWORD PTR [rbp-0x4],eax
  417fe0:	cmp    DWORD PTR [rbp-0x4],0x0
  417fe4:	je     417fee <_start@@Base+0x12e8e>
  417fe6:	mov    eax,DWORD PTR [rbp-0x4]
  417fe9:	jmp    41827a <_start@@Base+0x1311a>
  417fee:	mov    rax,QWORD PTR [rbp-0x18]
  417ff2:	mov    ecx,0x8
  417ff7:	mov    edx,0x8
  417ffc:	mov    esi,0x12
  418001:	mov    rdi,rax
  418004:	call   421a90 <flatcc_verify_field@@Base>
  418009:	mov    DWORD PTR [rbp-0x4],eax
  41800c:	cmp    DWORD PTR [rbp-0x4],0x0
  418010:	je     41801a <_start@@Base+0x12eba>
  418012:	mov    eax,DWORD PTR [rbp-0x4]
  418015:	jmp    41827a <_start@@Base+0x1311a>
  41801a:	mov    rax,QWORD PTR [rbp-0x18]
  41801e:	mov    ecx,0x8
  418023:	mov    edx,0x8
  418028:	mov    esi,0x13
  41802d:	mov    rdi,rax
  418030:	call   421a90 <flatcc_verify_field@@Base>
  418035:	mov    DWORD PTR [rbp-0x4],eax
  418038:	cmp    DWORD PTR [rbp-0x4],0x0
  41803c:	je     418046 <_start@@Base+0x12ee6>
  41803e:	mov    eax,DWORD PTR [rbp-0x4]
  418041:	jmp    41827a <_start@@Base+0x1311a>
  418046:	mov    rax,QWORD PTR [rbp-0x18]
  41804a:	mov    ecx,0x4
  41804f:	mov    edx,0x4
  418054:	mov    esi,0x14
  418059:	mov    rdi,rax
  41805c:	call   421a90 <flatcc_verify_field@@Base>
  418061:	mov    DWORD PTR [rbp-0x4],eax
  418064:	cmp    DWORD PTR [rbp-0x4],0x0
  418068:	je     418072 <_start@@Base+0x12f12>
  41806a:	mov    eax,DWORD PTR [rbp-0x4]
  41806d:	jmp    41827a <_start@@Base+0x1311a>
  418072:	mov    rax,QWORD PTR [rbp-0x18]
  418076:	mov    ecx,0x4
  41807b:	mov    edx,0x4
  418080:	mov    esi,0x15
  418085:	mov    rdi,rax
  418088:	call   421a90 <flatcc_verify_field@@Base>
  41808d:	mov    DWORD PTR [rbp-0x4],eax
  418090:	cmp    DWORD PTR [rbp-0x4],0x0
  418094:	je     41809e <_start@@Base+0x12f3e>
  418096:	mov    eax,DWORD PTR [rbp-0x4]
  418099:	jmp    41827a <_start@@Base+0x1311a>
  41809e:	mov    rax,QWORD PTR [rbp-0x18]
  4180a2:	mov    ecx,0x8
  4180a7:	mov    edx,0x8
  4180ac:	mov    esi,0x16
  4180b1:	mov    rdi,rax
  4180b4:	call   421a90 <flatcc_verify_field@@Base>
  4180b9:	mov    DWORD PTR [rbp-0x4],eax
  4180bc:	cmp    DWORD PTR [rbp-0x4],0x0
  4180c0:	je     4180ca <_start@@Base+0x12f6a>
  4180c2:	mov    eax,DWORD PTR [rbp-0x4]
  4180c5:	jmp    41827a <_start@@Base+0x1311a>
  4180ca:	mov    rax,QWORD PTR [rbp-0x18]
  4180ce:	mov    ecx,0x8
  4180d3:	mov    edx,0x8
  4180d8:	mov    esi,0x17
  4180dd:	mov    rdi,rax
  4180e0:	call   421a90 <flatcc_verify_field@@Base>
  4180e5:	mov    DWORD PTR [rbp-0x4],eax
  4180e8:	cmp    DWORD PTR [rbp-0x4],0x0
  4180ec:	je     4180f6 <_start@@Base+0x12f96>
  4180ee:	mov    eax,DWORD PTR [rbp-0x4]
  4180f1:	jmp    41827a <_start@@Base+0x1311a>
  4180f6:	mov    rax,QWORD PTR [rbp-0x18]
  4180fa:	mov    ecx,0x4
  4180ff:	mov    edx,0x4
  418104:	mov    esi,0x19
  418109:	mov    rdi,rax
  41810c:	call   421a90 <flatcc_verify_field@@Base>
  418111:	mov    DWORD PTR [rbp-0x4],eax
  418114:	cmp    DWORD PTR [rbp-0x4],0x0
  418118:	je     418122 <_start@@Base+0x12fc2>
  41811a:	mov    eax,DWORD PTR [rbp-0x4]
  41811d:	jmp    41827a <_start@@Base+0x1311a>
  418122:	mov    rax,QWORD PTR [rbp-0x18]
  418126:	mov    ecx,0x4
  41812b:	mov    edx,0x4
  418130:	mov    esi,0x1a
  418135:	mov    rdi,rax
  418138:	call   421a90 <flatcc_verify_field@@Base>
  41813d:	mov    DWORD PTR [rbp-0x4],eax
  418140:	cmp    DWORD PTR [rbp-0x4],0x0
  418144:	je     41814e <_start@@Base+0x12fee>
  418146:	mov    eax,DWORD PTR [rbp-0x4]
  418149:	jmp    41827a <_start@@Base+0x1311a>
  41814e:	mov    rax,QWORD PTR [rbp-0x18]
  418152:	mov    ecx,0x4
  418157:	mov    edx,0x4
  41815c:	mov    esi,0x1b
  418161:	mov    rdi,rax
  418164:	call   421a90 <flatcc_verify_field@@Base>
  418169:	mov    DWORD PTR [rbp-0x4],eax
  41816c:	cmp    DWORD PTR [rbp-0x4],0x0
  418170:	je     41817a <_start@@Base+0x1301a>
  418172:	mov    eax,DWORD PTR [rbp-0x4]
  418175:	jmp    41827a <_start@@Base+0x1311a>
  41817a:	mov    rax,QWORD PTR [rbp-0x18]
  41817e:	mov    r9d,0xffffffff
  418184:	mov    r8d,0x1
  41818a:	mov    ecx,0x1
  41818f:	mov    edx,0x0
  418194:	mov    esi,0x1e
  418199:	mov    rdi,rax
  41819c:	call   421b90 <flatcc_verify_vector_field@@Base>
  4181a1:	mov    DWORD PTR [rbp-0x4],eax
  4181a4:	cmp    DWORD PTR [rbp-0x4],0x0
  4181a8:	je     4181b2 <_start@@Base+0x13052>
  4181aa:	mov    eax,DWORD PTR [rbp-0x4]
  4181ad:	jmp    41827a <_start@@Base+0x1311a>
  4181b2:	mov    rax,QWORD PTR [rbp-0x18]
  4181b6:	mov    r9d,0x1fffffff
  4181bc:	mov    r8d,0x8
  4181c2:	mov    ecx,0x8
  4181c7:	mov    edx,0x0
  4181cc:	mov    esi,0x20
  4181d1:	mov    rdi,rax
  4181d4:	call   421b90 <flatcc_verify_vector_field@@Base>
  4181d9:	mov    DWORD PTR [rbp-0x4],eax
  4181dc:	cmp    DWORD PTR [rbp-0x4],0x0
  4181e0:	je     4181ea <_start@@Base+0x1308a>
  4181e2:	mov    eax,DWORD PTR [rbp-0x4]
  4181e5:	jmp    41827a <_start@@Base+0x1311a>
  4181ea:	mov    rax,QWORD PTR [rbp-0x18]
  4181ee:	mov    r9d,0x1fffffff
  4181f4:	mov    r8d,0x8
  4181fa:	mov    ecx,0x8
  4181ff:	mov    edx,0x0
  418204:	mov    esi,0x21
  418209:	mov    rdi,rax
  41820c:	call   421b90 <flatcc_verify_vector_field@@Base>
  418211:	mov    DWORD PTR [rbp-0x4],eax
  418214:	cmp    DWORD PTR [rbp-0x4],0x0
  418218:	je     41821f <_start@@Base+0x130bf>
  41821a:	mov    eax,DWORD PTR [rbp-0x4]
  41821d:	jmp    41827a <_start@@Base+0x1311a>
  41821f:	mov    rax,QWORD PTR [rbp-0x18]
  418223:	lea    rcx,[rip+0xfffffffffffff31c]        # 417546 <_start@@Base+0x123e6>
  41822a:	mov    edx,0x0
  41822f:	mov    esi,0x22
  418234:	mov    rdi,rax
  418237:	call   421cf5 <flatcc_verify_table_field@@Base>
  41823c:	mov    DWORD PTR [rbp-0x4],eax
  41823f:	cmp    DWORD PTR [rbp-0x4],0x0
  418243:	je     41824a <_start@@Base+0x130ea>
  418245:	mov    eax,DWORD PTR [rbp-0x4]
  418248:	jmp    41827a <_start@@Base+0x1311a>
  41824a:	mov    rax,QWORD PTR [rbp-0x18]
  41824e:	lea    rcx,[rip+0xfffffffffffff928]        # 417b7d <_start@@Base+0x12a1d>
  418255:	mov    edx,0x0
  41825a:	mov    esi,0x23
  41825f:	mov    rdi,rax
  418262:	call   421cf5 <flatcc_verify_table_field@@Base>
  418267:	mov    DWORD PTR [rbp-0x4],eax
  41826a:	cmp    DWORD PTR [rbp-0x4],0x0
  41826e:	je     418275 <_start@@Base+0x13115>
  418270:	mov    eax,DWORD PTR [rbp-0x4]
  418273:	jmp    41827a <_start@@Base+0x1311a>
  418275:	mov    eax,0x0
  41827a:	leave  
  41827b:	ret    
  41827c:	push   rbp
  41827d:	mov    rbp,rsp
  418280:	sub    rsp,0x20
  418284:	mov    QWORD PTR [rbp-0x18],rdi
  418288:	mov    rax,QWORD PTR [rbp-0x18]
  41828c:	mov    ecx,0x1
  418291:	mov    edx,0x1
  418296:	mov    esi,0x0
  41829b:	mov    rdi,rax
  41829e:	call   421a90 <flatcc_verify_field@@Base>
  4182a3:	mov    DWORD PTR [rbp-0x4],eax
  4182a6:	cmp    DWORD PTR [rbp-0x4],0x0
  4182aa:	je     4182b4 <_start@@Base+0x13154>
  4182ac:	mov    eax,DWORD PTR [rbp-0x4]
  4182af:	jmp    4184ac <_start@@Base+0x1334c>
  4182b4:	mov    rax,QWORD PTR [rbp-0x18]
  4182b8:	mov    ecx,0x1
  4182bd:	mov    edx,0x1
  4182c2:	mov    esi,0x1
  4182c7:	mov    rdi,rax
  4182ca:	call   421a90 <flatcc_verify_field@@Base>
  4182cf:	mov    DWORD PTR [rbp-0x4],eax
  4182d2:	cmp    DWORD PTR [rbp-0x4],0x0
  4182d6:	je     4182e0 <_start@@Base+0x13180>
  4182d8:	mov    eax,DWORD PTR [rbp-0x4]
  4182db:	jmp    4184ac <_start@@Base+0x1334c>
  4182e0:	mov    rax,QWORD PTR [rbp-0x18]
  4182e4:	mov    ecx,0x2
  4182e9:	mov    edx,0x2
  4182ee:	mov    esi,0x2
  4182f3:	mov    rdi,rax
  4182f6:	call   421a90 <flatcc_verify_field@@Base>
  4182fb:	mov    DWORD PTR [rbp-0x4],eax
  4182fe:	cmp    DWORD PTR [rbp-0x4],0x0
  418302:	je     41830c <_start@@Base+0x131ac>
  418304:	mov    eax,DWORD PTR [rbp-0x4]
  418307:	jmp    4184ac <_start@@Base+0x1334c>
  41830c:	mov    rax,QWORD PTR [rbp-0x18]
  418310:	mov    ecx,0x2
  418315:	mov    edx,0x2
  41831a:	mov    esi,0x3
  41831f:	mov    rdi,rax
  418322:	call   421a90 <flatcc_verify_field@@Base>
  418327:	mov    DWORD PTR [rbp-0x4],eax
  41832a:	cmp    DWORD PTR [rbp-0x4],0x0
  41832e:	je     418338 <_start@@Base+0x131d8>
  418330:	mov    eax,DWORD PTR [rbp-0x4]
  418333:	jmp    4184ac <_start@@Base+0x1334c>
  418338:	mov    rax,QWORD PTR [rbp-0x18]
  41833c:	mov    ecx,0x4
  418341:	mov    edx,0x4
  418346:	mov    esi,0x4
  41834b:	mov    rdi,rax
  41834e:	call   421a90 <flatcc_verify_field@@Base>
  418353:	mov    DWORD PTR [rbp-0x4],eax
  418356:	cmp    DWORD PTR [rbp-0x4],0x0
  41835a:	je     418364 <_start@@Base+0x13204>
  41835c:	mov    eax,DWORD PTR [rbp-0x4]
  41835f:	jmp    4184ac <_start@@Base+0x1334c>
  418364:	mov    rax,QWORD PTR [rbp-0x18]
  418368:	mov    ecx,0x4
  41836d:	mov    edx,0x4
  418372:	mov    esi,0x5
  418377:	mov    rdi,rax
  41837a:	call   421a90 <flatcc_verify_field@@Base>
  41837f:	mov    DWORD PTR [rbp-0x4],eax
  418382:	cmp    DWORD PTR [rbp-0x4],0x0
  418386:	je     418390 <_start@@Base+0x13230>
  418388:	mov    eax,DWORD PTR [rbp-0x4]
  41838b:	jmp    4184ac <_start@@Base+0x1334c>
  418390:	mov    rax,QWORD PTR [rbp-0x18]
  418394:	mov    ecx,0x8
  418399:	mov    edx,0x8
  41839e:	mov    esi,0x6
  4183a3:	mov    rdi,rax
  4183a6:	call   421a90 <flatcc_verify_field@@Base>
  4183ab:	mov    DWORD PTR [rbp-0x4],eax
  4183ae:	cmp    DWORD PTR [rbp-0x4],0x0
  4183b2:	je     4183bc <_start@@Base+0x1325c>
  4183b4:	mov    eax,DWORD PTR [rbp-0x4]
  4183b7:	jmp    4184ac <_start@@Base+0x1334c>
  4183bc:	mov    rax,QWORD PTR [rbp-0x18]
  4183c0:	mov    ecx,0x8
  4183c5:	mov    edx,0x8
  4183ca:	mov    esi,0x7
  4183cf:	mov    rdi,rax
  4183d2:	call   421a90 <flatcc_verify_field@@Base>
  4183d7:	mov    DWORD PTR [rbp-0x4],eax
  4183da:	cmp    DWORD PTR [rbp-0x4],0x0
  4183de:	je     4183e8 <_start@@Base+0x13288>
  4183e0:	mov    eax,DWORD PTR [rbp-0x4]
  4183e3:	jmp    4184ac <_start@@Base+0x1334c>
  4183e8:	mov    rax,QWORD PTR [rbp-0x18]
  4183ec:	mov    ecx,0x4
  4183f1:	mov    edx,0x4
  4183f6:	mov    esi,0x8
  4183fb:	mov    rdi,rax
  4183fe:	call   421a90 <flatcc_verify_field@@Base>
  418403:	mov    DWORD PTR [rbp-0x4],eax
  418406:	cmp    DWORD PTR [rbp-0x4],0x0
  41840a:	je     418414 <_start@@Base+0x132b4>
  41840c:	mov    eax,DWORD PTR [rbp-0x4]
  41840f:	jmp    4184ac <_start@@Base+0x1334c>
  418414:	mov    rax,QWORD PTR [rbp-0x18]
  418418:	mov    ecx,0x8
  41841d:	mov    edx,0x8
  418422:	mov    esi,0x9
  418427:	mov    rdi,rax
  41842a:	call   421a90 <flatcc_verify_field@@Base>
  41842f:	mov    DWORD PTR [rbp-0x4],eax
  418432:	cmp    DWORD PTR [rbp-0x4],0x0
  418436:	je     41843d <_start@@Base+0x132dd>
  418438:	mov    eax,DWORD PTR [rbp-0x4]
  41843b:	jmp    4184ac <_start@@Base+0x1334c>
  41843d:	mov    rax,QWORD PTR [rbp-0x18]
  418441:	mov    r9d,0xffffffff
  418447:	mov    r8d,0x1
  41844d:	mov    ecx,0x1
  418452:	mov    edx,0x0
  418457:	mov    esi,0xa
  41845c:	mov    rdi,rax
  41845f:	call   421b90 <flatcc_verify_vector_field@@Base>
  418464:	mov    DWORD PTR [rbp-0x4],eax
  418467:	cmp    DWORD PTR [rbp-0x4],0x0
  41846b:	je     418472 <_start@@Base+0x13312>
  41846d:	mov    eax,DWORD PTR [rbp-0x4]
  418470:	jmp    4184ac <_start@@Base+0x1334c>
  418472:	mov    rax,QWORD PTR [rbp-0x18]
  418476:	mov    r9d,0x1fffffff
  41847c:	mov    r8d,0x8
  418482:	mov    ecx,0x8
  418487:	mov    edx,0x0
  41848c:	mov    esi,0xb
  418491:	mov    rdi,rax
  418494:	call   421b90 <flatcc_verify_vector_field@@Base>
  418499:	mov    DWORD PTR [rbp-0x4],eax
  41849c:	cmp    DWORD PTR [rbp-0x4],0x0
  4184a0:	je     4184a7 <_start@@Base+0x13347>
  4184a2:	mov    eax,DWORD PTR [rbp-0x4]
  4184a5:	jmp    4184ac <_start@@Base+0x1334c>
  4184a7:	mov    eax,0x0
  4184ac:	leave  
  4184ad:	ret    
  4184ae:	push   rbp
  4184af:	mov    rbp,rsp
  4184b2:	sub    rsp,0x20
  4184b6:	mov    QWORD PTR [rbp-0x18],rdi
  4184ba:	mov    rax,QWORD PTR [rbp-0x18]
  4184be:	mov    ecx,0x4
  4184c3:	mov    edx,0x4
  4184c8:	mov    esi,0x0
  4184cd:	mov    rdi,rax
  4184d0:	call   421a90 <flatcc_verify_field@@Base>
  4184d5:	mov    DWORD PTR [rbp-0x4],eax
  4184d8:	cmp    DWORD PTR [rbp-0x4],0x0
  4184dc:	je     4184e3 <_start@@Base+0x13383>
  4184de:	mov    eax,DWORD PTR [rbp-0x4]
  4184e1:	jmp    4184e8 <_start@@Base+0x13388>
  4184e3:	mov    eax,0x0
  4184e8:	leave  
  4184e9:	ret    
  4184ea:	push   rbp
  4184eb:	mov    rbp,rsp
  4184ee:	sub    rsp,0x20
  4184f2:	mov    QWORD PTR [rbp-0x18],rdi
  4184f6:	mov    rax,QWORD PTR [rbp-0x18]
  4184fa:	lea    rcx,[rip+0xffffffffffffef82]        # 417483 <_start@@Base+0x12323>
  418501:	mov    edx,0x0
  418506:	mov    esi,0x1
  41850b:	mov    rdi,rax
  41850e:	call   422502 <flatcc_verify_union_field@@Base>
  418513:	mov    DWORD PTR [rbp-0x4],eax
  418516:	cmp    DWORD PTR [rbp-0x4],0x0
  41851a:	je     418524 <_start@@Base+0x133c4>
  41851c:	mov    eax,DWORD PTR [rbp-0x4]
  41851f:	jmp    4185d8 <_start@@Base+0x13478>
  418524:	mov    rax,QWORD PTR [rbp-0x18]
  418528:	lea    rcx,[rip+0xffffffffffffef54]        # 417483 <_start@@Base+0x12323>
  41852f:	mov    edx,0x0
  418534:	mov    esi,0x3
  418539:	mov    rdi,rax
  41853c:	call   422502 <flatcc_verify_union_field@@Base>
  418541:	mov    DWORD PTR [rbp-0x4],eax
  418544:	cmp    DWORD PTR [rbp-0x4],0x0
  418548:	je     418552 <_start@@Base+0x133f2>
  41854a:	mov    eax,DWORD PTR [rbp-0x4]
  41854d:	jmp    4185d8 <_start@@Base+0x13478>
  418552:	mov    rax,QWORD PTR [rbp-0x18]
  418556:	lea    rcx,[rip+0xffffffffffffef26]        # 417483 <_start@@Base+0x12323>
  41855d:	mov    edx,0x0
  418562:	mov    esi,0x5
  418567:	mov    rdi,rax
  41856a:	call   422502 <flatcc_verify_union_field@@Base>
  41856f:	mov    DWORD PTR [rbp-0x4],eax
  418572:	cmp    DWORD PTR [rbp-0x4],0x0
  418576:	je     41857d <_start@@Base+0x1341d>
  418578:	mov    eax,DWORD PTR [rbp-0x4]
  41857b:	jmp    4185d8 <_start@@Base+0x13478>
  41857d:	mov    rax,QWORD PTR [rbp-0x18]
  418581:	lea    rcx,[rip+0xffffffffffffeefb]        # 417483 <_start@@Base+0x12323>
  418588:	mov    edx,0x0
  41858d:	mov    esi,0x7
  418592:	mov    rdi,rax
  418595:	call   422502 <flatcc_verify_union_field@@Base>
  41859a:	mov    DWORD PTR [rbp-0x4],eax
  41859d:	cmp    DWORD PTR [rbp-0x4],0x0
  4185a1:	je     4185a8 <_start@@Base+0x13448>
  4185a3:	mov    eax,DWORD PTR [rbp-0x4]
  4185a6:	jmp    4185d8 <_start@@Base+0x13478>
  4185a8:	mov    rax,QWORD PTR [rbp-0x18]
  4185ac:	lea    rcx,[rip+0xffffffffffffeed0]        # 417483 <_start@@Base+0x12323>
  4185b3:	mov    edx,0x0
  4185b8:	mov    esi,0x9
  4185bd:	mov    rdi,rax
  4185c0:	call   422709 <flatcc_verify_union_vector_field@@Base>
  4185c5:	mov    DWORD PTR [rbp-0x4],eax
  4185c8:	cmp    DWORD PTR [rbp-0x4],0x0
  4185cc:	je     4185d3 <_start@@Base+0x13473>
  4185ce:	mov    eax,DWORD PTR [rbp-0x4]
  4185d1:	jmp    4185d8 <_start@@Base+0x13478>
  4185d3:	mov    eax,0x0
  4185d8:	leave  
  4185d9:	ret    
  4185da:	push   rbp
  4185db:	mov    rbp,rsp
  4185de:	sub    rsp,0x50
  4185e2:	mov    QWORD PTR [rbp-0x38],rdi
  4185e6:	mov    QWORD PTR [rbp-0x40],rsi
  4185ea:	mov    QWORD PTR [rbp-0x48],rdx
  4185ee:	mov    QWORD PTR [rbp-0x50],rcx
  4185f2:	mov    rax,QWORD PTR fs:0x28
  4185fb:	mov    QWORD PTR [rbp-0x8],rax
  4185ff:	xor    eax,eax
  418601:	mov    rax,QWORD PTR [rbp-0x40]
  418605:	mov    QWORD PTR [rbp-0x28],rax
  418609:	cmp    QWORD PTR [rbp-0x38],0x0
  41860e:	je     41862c <_start@@Base+0x134cc>
  418610:	mov    rdx,QWORD PTR [rbp-0x38]
  418614:	mov    rax,QWORD PTR [rbp-0x50]
  418618:	lea    rsi,[rip+0x1deb1]        # 4364d0 <_IO_stdin_used@@Base+0x4d0>
  41861f:	mov    rdi,rax
  418622:	mov    eax,0x0
  418627:	call   4050e0 <fprintf@plt>
  41862c:	mov    DWORD PTR [rbp-0x2c],0x0
  418633:	jmp    418724 <_start@@Base+0x135c4>
  418638:	mov    eax,DWORD PTR [rbp-0x2c]
  41863b:	and    eax,0xf
  41863e:	test   eax,eax
  418640:	jne    418681 <_start@@Base+0x13521>
  418642:	cmp    DWORD PTR [rbp-0x2c],0x0
  418646:	je     418664 <_start@@Base+0x13504>
  418648:	lea    rdx,[rbp-0x20]
  41864c:	mov    rax,QWORD PTR [rbp-0x50]
  418650:	lea    rsi,[rip+0x1de7e]        # 4364d5 <_IO_stdin_used@@Base+0x4d5>
  418657:	mov    rdi,rax
  41865a:	mov    eax,0x0
  41865f:	call   4050e0 <fprintf@plt>
  418664:	mov    edx,DWORD PTR [rbp-0x2c]
  418667:	mov    rax,QWORD PTR [rbp-0x50]
  41866b:	lea    rsi,[rip+0x1de69]        # 4364db <_IO_stdin_used@@Base+0x4db>
  418672:	mov    rdi,rax
  418675:	mov    eax,0x0
  41867a:	call   4050e0 <fprintf@plt>
  41867f:	jmp    41869c <_start@@Base+0x1353c>
  418681:	mov    eax,DWORD PTR [rbp-0x2c]
  418684:	and    eax,0x7
  418687:	test   eax,eax
  418689:	jne    41869c <_start@@Base+0x1353c>
  41868b:	mov    rax,QWORD PTR [rbp-0x50]
  41868f:	mov    rsi,rax
  418692:	mov    edi,0x20
  418697:	call   4050a0 <fputc@plt>
  41869c:	mov    edx,DWORD PTR [rbp-0x2c]
  41869f:	mov    rax,QWORD PTR [rbp-0x28]
  4186a3:	add    rax,rdx
  4186a6:	movzx  eax,BYTE PTR [rax]
  4186a9:	movzx  edx,al
  4186ac:	mov    rax,QWORD PTR [rbp-0x50]
  4186b0:	lea    rsi,[rip+0x1de2c]        # 4364e3 <_IO_stdin_used@@Base+0x4e3>
  4186b7:	mov    rdi,rax
  4186ba:	mov    eax,0x0
  4186bf:	call   4050e0 <fprintf@plt>
  4186c4:	mov    edx,DWORD PTR [rbp-0x2c]
  4186c7:	mov    rax,QWORD PTR [rbp-0x28]
  4186cb:	add    rax,rdx
  4186ce:	movzx  eax,BYTE PTR [rax]
  4186d1:	cmp    al,0x1f
  4186d3:	jbe    4186e6 <_start@@Base+0x13586>
  4186d5:	mov    edx,DWORD PTR [rbp-0x2c]
  4186d8:	mov    rax,QWORD PTR [rbp-0x28]
  4186dc:	add    rax,rdx
  4186df:	movzx  eax,BYTE PTR [rax]
  4186e2:	cmp    al,0x7e
  4186e4:	jbe    4186f5 <_start@@Base+0x13595>
  4186e6:	mov    eax,DWORD PTR [rbp-0x2c]
  4186e9:	and    eax,0xf
  4186ec:	mov    eax,eax
  4186ee:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  4186f3:	jmp    418710 <_start@@Base+0x135b0>
  4186f5:	mov    eax,DWORD PTR [rbp-0x2c]
  4186f8:	and    eax,0xf
  4186fb:	mov    ecx,eax
  4186fd:	mov    edx,DWORD PTR [rbp-0x2c]
  418700:	mov    rax,QWORD PTR [rbp-0x28]
  418704:	add    rax,rdx
  418707:	movzx  eax,BYTE PTR [rax]
  41870a:	mov    edx,ecx
  41870c:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  418710:	mov    eax,DWORD PTR [rbp-0x2c]
  418713:	and    eax,0xf
  418716:	add    eax,0x1
  418719:	mov    eax,eax
  41871b:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  418720:	add    DWORD PTR [rbp-0x2c],0x1
  418724:	mov    rax,QWORD PTR [rbp-0x48]
  418728:	cmp    eax,DWORD PTR [rbp-0x2c]
  41872b:	ja     418638 <_start@@Base+0x134d8>
  418731:	jmp    418754 <_start@@Base+0x135f4>
  418733:	mov    rax,QWORD PTR [rbp-0x50]
  418737:	mov    rcx,rax
  41873a:	mov    edx,0x3
  41873f:	mov    esi,0x1
  418744:	lea    rdi,[rip+0x1dd9e]        # 4364e9 <_IO_stdin_used@@Base+0x4e9>
  41874b:	call   405140 <fwrite@plt>
  418750:	add    DWORD PTR [rbp-0x2c],0x1
  418754:	mov    eax,DWORD PTR [rbp-0x2c]
  418757:	and    eax,0xf
  41875a:	test   eax,eax
  41875c:	jne    418733 <_start@@Base+0x135d3>
  41875e:	lea    rdx,[rbp-0x20]
  418762:	mov    rax,QWORD PTR [rbp-0x50]
  418766:	lea    rsi,[rip+0x1dd68]        # 4364d5 <_IO_stdin_used@@Base+0x4d5>
  41876d:	mov    rdi,rax
  418770:	mov    eax,0x0
  418775:	call   4050e0 <fprintf@plt>
  41877a:	nop
  41877b:	mov    rax,QWORD PTR [rbp-0x8]
  41877f:	xor    rax,QWORD PTR fs:0x28
  418788:	je     41878f <_start@@Base+0x1362f>
  41878a:	call   405070 <__stack_chk_fail@plt>
  41878f:	leave  
  418790:	ret    

0000000000418791 <test_json@@Base>:
  418791:	push   rbp
  418792:	mov    rbp,rsp
  418795:	push   r12
  418797:	push   rbx
  418798:	sub    rsp,0x2a0
  41879f:	mov    QWORD PTR [rbp-0x288],rdi
  4187a6:	mov    QWORD PTR [rbp-0x290],rsi
  4187ad:	mov    QWORD PTR [rbp-0x298],rdx
  4187b4:	mov    DWORD PTR [rbp-0x29c],ecx
  4187ba:	mov    DWORD PTR [rbp-0x2a0],r8d
  4187c1:	mov    DWORD PTR [rbp-0x2a4],r9d
  4187c8:	mov    rax,QWORD PTR fs:0x28
  4187d1:	mov    QWORD PTR [rbp-0x18],rax
  4187d5:	xor    eax,eax
  4187d7:	mov    DWORD PTR [rbp-0x274],0xffffffff
  4187e1:	mov    QWORD PTR [rbp-0x258],0x0
  4187ec:	mov    QWORD PTR [rbp-0x250],0x0
  4187f7:	lea    rax,[rbp-0x1a0]
  4187fe:	mov    QWORD PTR [rbp-0x248],rax
  418805:	mov    rax,QWORD PTR [rbp-0x248]
  41880c:	mov    rdi,rax
  41880f:	call   41b598 <flatcc_builder_init@@Base>
  418814:	lea    rax,[rbp-0x1f0]
  41881b:	mov    esi,0x0
  418820:	mov    rdi,rax
  418823:	call   434da6 <flatcc_json_printer_init_dynamic_buffer@@Base>
  418828:	mov    edx,DWORD PTR [rbp-0x2a4]
  41882e:	lea    rax,[rbp-0x1f0]
  418835:	mov    esi,edx
  418837:	mov    rdi,rax
  41883a:	call   4158e2 <_start@@Base+0x10782>
  41883f:	mov    rax,QWORD PTR [rbp-0x288]
  418846:	mov    rbx,QWORD PTR [rax+0x8]
  41884a:	mov    rax,QWORD PTR [rbp-0x288]
  418851:	mov    r12,QWORD PTR [rax]
  418854:	mov    rax,QWORD PTR [rbp-0x290]
  41885b:	mov    rdi,rax
  41885e:	call   405060 <strlen@plt>
  418863:	mov    rdi,rax
  418866:	mov    ecx,DWORD PTR [rbp-0x2a0]
  41886c:	mov    rdx,QWORD PTR [rbp-0x290]
  418873:	lea    rsi,[rbp-0x240]
  41887a:	mov    rax,QWORD PTR [rbp-0x248]
  418881:	sub    rsp,0x8
  418885:	push   rbx
  418886:	mov    r9,r12
  418889:	mov    r8d,ecx
  41888c:	mov    rcx,rdi
  41888f:	mov    rdi,rax
  418892:	call   429066 <flatcc_json_parser_table_as_root@@Base>
  418897:	add    rsp,0x10
  41889b:	mov    DWORD PTR [rbp-0x26c],eax
  4188a1:	mov    eax,DWORD PTR [rbp-0x26c]
  4188a7:	cmp    eax,DWORD PTR [rbp-0x29c]
  4188ad:	je     418a70 <test_json@@Base+0x2df>
  4188b3:	cmp    DWORD PTR [rbp-0x29c],0x0
  4188ba:	je     4189b4 <test_json@@Base+0x223>
  4188c0:	cmp    DWORD PTR [rbp-0x26c],0x0
  4188c7:	je     418959 <test_json@@Base+0x1c8>
  4188cd:	mov    eax,DWORD PTR [rbp-0x26c]
  4188d3:	mov    edi,eax
  4188d5:	call   4264a2 <flatcc_json_parser_error_string@@Base>
  4188da:	mov    rdx,rax
  4188dd:	mov    rax,QWORD PTR [rip+0x2d704]        # 445fe8 <stderr@GLIBC_2.2.5>
  4188e4:	mov    rax,QWORD PTR [rax]
  4188e7:	mov    rcx,rdx
  4188ea:	mov    edx,DWORD PTR [rbp+0x10]
  4188ed:	lea    rsi,[rip+0x1dc04]        # 4364f8 <_IO_stdin_used@@Base+0x4f8>
  4188f4:	mov    rdi,rax
  4188f7:	mov    eax,0x0
  4188fc:	call   4050e0 <fprintf@plt>
  418901:	mov    eax,DWORD PTR [rbp-0x29c]
  418907:	mov    edi,eax
  418909:	call   4264a2 <flatcc_json_parser_error_string@@Base>
  41890e:	mov    rdx,rax
  418911:	mov    rax,QWORD PTR [rip+0x2d6d0]        # 445fe8 <stderr@GLIBC_2.2.5>
  418918:	mov    rax,QWORD PTR [rax]
  41891b:	lea    rsi,[rip+0x1dbfe]        # 436520 <_IO_stdin_used@@Base+0x520>
  418922:	mov    rdi,rax
  418925:	mov    eax,0x0
  41892a:	call   4050e0 <fprintf@plt>
  41892f:	mov    rax,QWORD PTR [rip+0x2d6b2]        # 445fe8 <stderr@GLIBC_2.2.5>
  418936:	mov    rax,QWORD PTR [rax]
  418939:	mov    rdx,QWORD PTR [rbp-0x290]
  418940:	lea    rsi,[rip+0x1dbf8]        # 43653f <_IO_stdin_used@@Base+0x53f>
  418947:	mov    rdi,rax
  41894a:	mov    eax,0x0
  41894f:	call   4050e0 <fprintf@plt>
  418954:	jmp    418a0d <test_json@@Base+0x27c>
  418959:	mov    eax,DWORD PTR [rbp-0x29c]
  41895f:	mov    edi,eax
  418961:	call   4264a2 <flatcc_json_parser_error_string@@Base>
  418966:	mov    rdx,rax
  418969:	mov    rax,QWORD PTR [rip+0x2d678]        # 445fe8 <stderr@GLIBC_2.2.5>
  418970:	mov    rax,QWORD PTR [rax]
  418973:	mov    rcx,rdx
  418976:	mov    edx,DWORD PTR [rbp+0x10]
  418979:	lea    rsi,[rip+0x1dbc8]        # 436548 <_IO_stdin_used@@Base+0x548>
  418980:	mov    rdi,rax
  418983:	mov    eax,0x0
  418988:	call   4050e0 <fprintf@plt>
  41898d:	mov    rax,QWORD PTR [rip+0x2d654]        # 445fe8 <stderr@GLIBC_2.2.5>
  418994:	mov    rax,QWORD PTR [rax]
  418997:	mov    rdx,QWORD PTR [rbp-0x290]
  41899e:	lea    rsi,[rip+0x1db9a]        # 43653f <_IO_stdin_used@@Base+0x53f>
  4189a5:	mov    rdi,rax
  4189a8:	mov    eax,0x0
  4189ad:	call   4050e0 <fprintf@plt>
  4189b2:	jmp    418a0d <test_json@@Base+0x27c>
  4189b4:	mov    eax,DWORD PTR [rbp-0x26c]
  4189ba:	mov    edi,eax
  4189bc:	call   4264a2 <flatcc_json_parser_error_string@@Base>
  4189c1:	mov    rdx,rax
  4189c4:	mov    rax,QWORD PTR [rip+0x2d61d]        # 445fe8 <stderr@GLIBC_2.2.5>
  4189cb:	mov    rax,QWORD PTR [rax]
  4189ce:	mov    rcx,rdx
  4189d1:	mov    edx,DWORD PTR [rbp+0x10]
  4189d4:	lea    rsi,[rip+0x1dbad]        # 436588 <_IO_stdin_used@@Base+0x588>
  4189db:	mov    rdi,rax
  4189de:	mov    eax,0x0
  4189e3:	call   4050e0 <fprintf@plt>
  4189e8:	mov    rax,QWORD PTR [rip+0x2d5f9]        # 445fe8 <stderr@GLIBC_2.2.5>
  4189ef:	mov    rax,QWORD PTR [rax]
  4189f2:	mov    rdx,QWORD PTR [rbp-0x290]
  4189f9:	lea    rsi,[rip+0x1db3f]        # 43653f <_IO_stdin_used@@Base+0x53f>
  418a00:	mov    rdi,rax
  418a03:	mov    eax,0x0
  418a08:	call   4050e0 <fprintf@plt>
  418a0d:	mov    DWORD PTR [rbp-0x270],0x0
  418a17:	jmp    418a37 <test_json@@Base+0x2a6>
  418a19:	mov    rax,QWORD PTR [rip+0x2d5c8]        # 445fe8 <stderr@GLIBC_2.2.5>
  418a20:	mov    rax,QWORD PTR [rax]
  418a23:	mov    rsi,rax
  418a26:	mov    edi,0x20
  418a2b:	call   4050a0 <fputc@plt>
  418a30:	add    DWORD PTR [rbp-0x270],0x1
  418a37:	mov    eax,DWORD PTR [rbp-0x224]
  418a3d:	sub    eax,0x1
  418a40:	cmp    eax,DWORD PTR [rbp-0x270]
  418a46:	jg     418a19 <test_json@@Base+0x288>
  418a48:	mov    rax,QWORD PTR [rip+0x2d599]        # 445fe8 <stderr@GLIBC_2.2.5>
  418a4f:	mov    rax,QWORD PTR [rax]
  418a52:	mov    rcx,rax
  418a55:	mov    edx,0x2
  418a5a:	mov    esi,0x1
  418a5f:	lea    rdi,[rip+0x1db43]        # 4365a9 <_IO_stdin_used@@Base+0x5a9>
  418a66:	call   405140 <fwrite@plt>
  418a6b:	jmp    418c80 <test_json@@Base+0x4ef>
  418a70:	cmp    DWORD PTR [rbp-0x29c],0x0
  418a77:	je     418a88 <test_json@@Base+0x2f7>
  418a79:	mov    DWORD PTR [rbp-0x274],0x0
  418a83:	jmp    418c3c <test_json@@Base+0x4ab>
  418a88:	lea    rdx,[rbp-0x268]
  418a8f:	mov    rax,QWORD PTR [rbp-0x248]
  418a96:	mov    rsi,rdx
  418a99:	mov    rdi,rax
  418a9c:	call   41ff9f <flatcc_builder_finalize_aligned_buffer@@Base>
  418aa1:	mov    QWORD PTR [rbp-0x258],rax
  418aa8:	mov    rax,QWORD PTR [rbp-0x288]
  418aaf:	mov    rcx,QWORD PTR [rax+0x18]
  418ab3:	mov    rax,QWORD PTR [rbp-0x288]
  418aba:	mov    rdx,QWORD PTR [rax]
  418abd:	mov    rsi,QWORD PTR [rbp-0x268]
  418ac4:	mov    rax,QWORD PTR [rbp-0x258]
  418acb:	mov    rdi,rax
  418ace:	call   4221c5 <flatcc_verify_table_as_root@@Base>
  418ad3:	mov    DWORD PTR [rbp-0x274],eax
  418ad9:	cmp    DWORD PTR [rbp-0x274],0x0
  418ae0:	je     418b22 <test_json@@Base+0x391>
  418ae2:	mov    eax,DWORD PTR [rbp-0x274]
  418ae8:	mov    edi,eax
  418aea:	call   420c93 <flatcc_verify_error_string@@Base>
  418aef:	mov    rdx,rax
  418af2:	mov    rax,QWORD PTR [rip+0x2d4ef]        # 445fe8 <stderr@GLIBC_2.2.5>
  418af9:	mov    rax,QWORD PTR [rax]
  418afc:	mov    r8,rdx
  418aff:	mov    ecx,DWORD PTR [rbp+0x10]
  418b02:	lea    rdx,[rip+0x1daa7]        # 4365b0 <_IO_stdin_used@@Base+0x5b0>
  418b09:	lea    rsi,[rip+0x1db08]        # 436618 <_IO_stdin_used@@Base+0x618>
  418b10:	mov    rdi,rax
  418b13:	mov    eax,0x0
  418b18:	call   4050e0 <fprintf@plt>
  418b1d:	jmp    418c80 <test_json@@Base+0x4ef>
  418b22:	mov    rax,QWORD PTR [rbp-0x288]
  418b29:	mov    rdi,QWORD PTR [rax+0x10]
  418b2d:	mov    rax,QWORD PTR [rbp-0x288]
  418b34:	mov    rcx,QWORD PTR [rax]
  418b37:	mov    rdx,QWORD PTR [rbp-0x268]
  418b3e:	mov    rsi,QWORD PTR [rbp-0x258]
  418b45:	lea    rax,[rbp-0x1f0]
  418b4c:	mov    r8,rdi
  418b4f:	mov    rdi,rax
  418b52:	call   43459b <flatcc_json_printer_table_as_root@@Base>
  418b57:	lea    rdx,[rbp-0x260]
  418b5e:	lea    rax,[rbp-0x1f0]
  418b65:	mov    rsi,rdx
  418b68:	mov    rdi,rax
  418b6b:	call   434e8b <flatcc_json_printer_get_buffer@@Base>
  418b70:	mov    QWORD PTR [rbp-0x250],rax
  418b77:	cmp    QWORD PTR [rbp-0x250],0x0
  418b7f:	je     418ba2 <test_json@@Base+0x411>
  418b81:	mov    rdx,QWORD PTR [rbp-0x250]
  418b88:	mov    rax,QWORD PTR [rbp-0x298]
  418b8f:	mov    rsi,rdx
  418b92:	mov    rdi,rax
  418b95:	call   4050d0 <strcmp@plt>
  418b9a:	test   eax,eax
  418b9c:	je     418c32 <test_json@@Base+0x4a1>
  418ba2:	mov    rax,QWORD PTR [rip+0x2d43f]        # 445fe8 <stderr@GLIBC_2.2.5>
  418ba9:	mov    rax,QWORD PTR [rax]
  418bac:	mov    edx,DWORD PTR [rbp+0x10]
  418baf:	lea    rsi,[rip+0x1da8a]        # 436640 <_IO_stdin_used@@Base+0x640>
  418bb6:	mov    rdi,rax
  418bb9:	mov    eax,0x0
  418bbe:	call   4050e0 <fprintf@plt>
  418bc3:	mov    rax,QWORD PTR [rip+0x2d41e]        # 445fe8 <stderr@GLIBC_2.2.5>
  418bca:	mov    rax,QWORD PTR [rax]
  418bcd:	mov    rdx,QWORD PTR [rbp-0x250]
  418bd4:	lea    rsi,[rip+0x1d964]        # 43653f <_IO_stdin_used@@Base+0x53f>
  418bdb:	mov    rdi,rax
  418bde:	mov    eax,0x0
  418be3:	call   4050e0 <fprintf@plt>
  418be8:	mov    rax,QWORD PTR [rip+0x2d3f9]        # 445fe8 <stderr@GLIBC_2.2.5>
  418bef:	mov    rax,QWORD PTR [rax]
  418bf2:	mov    rcx,rax
  418bf5:	mov    edx,0xa
  418bfa:	mov    esi,0x1
  418bff:	lea    rdi,[rip+0x1da6f]        # 436675 <_IO_stdin_used@@Base+0x675>
  418c06:	call   405140 <fwrite@plt>
  418c0b:	mov    rax,QWORD PTR [rip+0x2d3d6]        # 445fe8 <stderr@GLIBC_2.2.5>
  418c12:	mov    rax,QWORD PTR [rax]
  418c15:	mov    rdx,QWORD PTR [rbp-0x298]
  418c1c:	lea    rsi,[rip+0x1d91c]        # 43653f <_IO_stdin_used@@Base+0x53f>
  418c23:	mov    rdi,rax
  418c26:	mov    eax,0x0
  418c2b:	call   4050e0 <fprintf@plt>
  418c30:	jmp    418c80 <test_json@@Base+0x4ef>
  418c32:	mov    DWORD PTR [rbp-0x274],0x0
  418c3c:	mov    rax,QWORD PTR [rbp-0x258]
  418c43:	mov    rdi,rax
  418c46:	call   420096 <flatcc_builder_aligned_free@@Base>
  418c4b:	mov    rax,QWORD PTR [rbp-0x248]
  418c52:	mov    rdi,rax
  418c55:	call   41b7fc <flatcc_builder_clear@@Base>
  418c5a:	lea    rax,[rbp-0x1f0]
  418c61:	mov    rdi,rax
  418c64:	call   434f26 <flatcc_json_printer_clear@@Base>
  418c69:	mov    eax,DWORD PTR [rbp-0x274]
  418c6f:	mov    rbx,QWORD PTR [rbp-0x18]
  418c73:	xor    rbx,QWORD PTR fs:0x28
  418c7c:	je     418cc5 <test_json@@Base+0x534>
  418c7e:	jmp    418cc0 <test_json@@Base+0x52f>
  418c80:	cmp    QWORD PTR [rbp-0x258],0x0
  418c88:	je     418cb1 <test_json@@Base+0x520>
  418c8a:	mov    rax,QWORD PTR [rip+0x2d357]        # 445fe8 <stderr@GLIBC_2.2.5>
  418c91:	mov    rcx,QWORD PTR [rax]
  418c94:	mov    rdx,QWORD PTR [rbp-0x268]
  418c9b:	mov    rax,QWORD PTR [rbp-0x258]
  418ca2:	mov    rsi,rax
  418ca5:	lea    rdi,[rip+0x1d9d4]        # 436680 <_IO_stdin_used@@Base+0x680>
  418cac:	call   4185da <_start@@Base+0x1347a>
  418cb1:	mov    DWORD PTR [rbp-0x274],0xffffffff
  418cbb:	jmp    418c3c <test_json@@Base+0x4ab>
  418cc0:	call   405070 <__stack_chk_fail@plt>
  418cc5:	lea    rsp,[rbp-0x10]
  418cc9:	pop    rbx
  418cca:	pop    r12
  418ccc:	pop    rbp
  418ccd:	ret    

0000000000418cce <edge_case_tests@@Base>:
  418cce:	push   rbp
  418ccf:	mov    rbp,rsp
  418cd2:	sub    rsp,0x10
  418cd6:	mov    DWORD PTR [rbp-0xc],0x0
  418cdd:	lea    rax,[rip+0x2d0bc]        # 445da0 <flatcc_builder_padding_base@@Base+0xbe20>
  418ce4:	mov    QWORD PTR [rbp-0x8],rax
  418ce8:	mov    rax,QWORD PTR [rbp-0x8]
  418cec:	sub    rsp,0x8
  418cf0:	push   0x9b
  418cf5:	mov    r9d,0x0
  418cfb:	mov    r8d,0x0
  418d01:	mov    ecx,0x0
  418d06:	lea    rdx,[rip+0x1d981]        # 43668e <_IO_stdin_used@@Base+0x68e>
  418d0d:	lea    rsi,[rip+0x1d99c]        # 4366b0 <_IO_stdin_used@@Base+0x6b0>
  418d14:	mov    rdi,rax
  418d17:	call   418791 <test_json@@Base>
  418d1c:	add    rsp,0x10
  418d20:	or     DWORD PTR [rbp-0xc],eax
  418d23:	mov    rax,QWORD PTR [rbp-0x8]
  418d27:	sub    rsp,0x8
  418d2b:	push   0xa8
  418d30:	mov    r9d,0x0
  418d36:	mov    r8d,0x2
  418d3c:	mov    ecx,0x0
  418d41:	lea    rdx,[rip+0x1d9a0]        # 4366e8 <_IO_stdin_used@@Base+0x6e8>
  418d48:	lea    rsi,[rip+0x1d9c1]        # 436710 <_IO_stdin_used@@Base+0x710>
  418d4f:	mov    rdi,rax
  418d52:	call   418791 <test_json@@Base>
  418d57:	add    rsp,0x10
  418d5b:	or     DWORD PTR [rbp-0xc],eax
  418d5e:	mov    rax,QWORD PTR [rbp-0x8]
  418d62:	sub    rsp,0x8
  418d66:	push   0xac
  418d6b:	mov    r9d,0x2
  418d71:	mov    r8d,0x0
  418d77:	mov    ecx,0x0
  418d7c:	lea    rdx,[rip+0x1d9ae]        # 436731 <_IO_stdin_used@@Base+0x731>
  418d83:	lea    rsi,[rip+0x1d9c6]        # 436750 <_IO_stdin_used@@Base+0x750>
  418d8a:	mov    rdi,rax
  418d8d:	call   418791 <test_json@@Base>
  418d92:	add    rsp,0x10
  418d96:	or     DWORD PTR [rbp-0xc],eax
  418d99:	mov    rax,QWORD PTR [rbp-0x8]
  418d9d:	sub    rsp,0x8
  418da1:	push   0xb0
  418da6:	mov    r9d,0x4
  418dac:	mov    r8d,0x2
  418db2:	mov    ecx,0x0
  418db7:	lea    rdx,[rip+0x1d9b9]        # 436777 <_IO_stdin_used@@Base+0x777>
  418dbe:	lea    rsi,[rip+0x1d94b]        # 436710 <_IO_stdin_used@@Base+0x710>
  418dc5:	mov    rdi,rax
  418dc8:	call   418791 <test_json@@Base>
  418dcd:	add    rsp,0x10
  418dd1:	or     DWORD PTR [rbp-0xc],eax
  418dd4:	mov    rax,QWORD PTR [rbp-0x8]
  418dd8:	sub    rsp,0x8
  418ddc:	push   0xb4
  418de1:	mov    r9d,0x8
  418de7:	mov    r8d,0x0
  418ded:	mov    ecx,0x0
  418df2:	lea    rdx,[rip+0x1d997]        # 436790 <_IO_stdin_used@@Base+0x790>
  418df9:	lea    rsi,[rip+0x1daa8]        # 4368a8 <_IO_stdin_used@@Base+0x8a8>
  418e00:	mov    rdi,rax
  418e03:	call   418791 <test_json@@Base>
  418e08:	add    rsp,0x10
  418e0c:	or     DWORD PTR [rbp-0xc],eax
  418e0f:	mov    rax,QWORD PTR [rbp-0x8]
  418e13:	sub    rsp,0x8
  418e17:	push   0xc3
  418e1c:	mov    r9d,0x0
  418e22:	mov    r8d,0x2
  418e28:	mov    ecx,0x0
  418e2d:	lea    rdx,[rip+0x1d8b4]        # 4366e8 <_IO_stdin_used@@Base+0x6e8>
  418e34:	lea    rsi,[rip+0x1da95]        # 4368d0 <_IO_stdin_used@@Base+0x8d0>
  418e3b:	mov    rdi,rax
  418e3e:	call   418791 <test_json@@Base>
  418e43:	add    rsp,0x10
  418e47:	or     DWORD PTR [rbp-0xc],eax
  418e4a:	mov    rax,QWORD PTR [rbp-0x8]
  418e4e:	sub    rsp,0x8
  418e52:	push   0xc7
  418e57:	mov    r9d,0x0
  418e5d:	mov    r8d,0x1
  418e63:	mov    ecx,0x0
  418e68:	lea    rdx,[rip+0x1da87]        # 4368f6 <_IO_stdin_used@@Base+0x8f6>
  418e6f:	lea    rsi,[rip+0x1daa2]        # 436918 <_IO_stdin_used@@Base+0x918>
  418e76:	mov    rdi,rax
  418e79:	call   418791 <test_json@@Base>
  418e7e:	add    rsp,0x10
  418e82:	or     DWORD PTR [rbp-0xc],eax
  418e85:	mov    rax,QWORD PTR [rbp-0x8]
  418e89:	sub    rsp,0x8
  418e8d:	push   0xcb
  418e92:	mov    r9d,0x1
  418e98:	mov    r8d,0x1
  418e9e:	mov    ecx,0x0
  418ea3:	lea    rdx,[rip+0x1daa0]        # 43694a <_IO_stdin_used@@Base+0x94a>
  418eaa:	lea    rsi,[rip+0x1da67]        # 436918 <_IO_stdin_used@@Base+0x918>
  418eb1:	mov    rdi,rax
  418eb4:	call   418791 <test_json@@Base>
  418eb9:	add    rsp,0x10
  418ebd:	or     DWORD PTR [rbp-0xc],eax
  418ec0:	mov    rax,QWORD PTR [rbp-0x8]
  418ec4:	sub    rsp,0x8
  418ec8:	push   0xd1
  418ecd:	mov    r9d,0x0
  418ed3:	mov    r8d,0x1
  418ed9:	mov    ecx,0x0
  418ede:	lea    rdx,[rip+0x1da11]        # 4368f6 <_IO_stdin_used@@Base+0x8f6>
  418ee5:	lea    rsi,[rip+0x1da7c]        # 436968 <_IO_stdin_used@@Base+0x968>
  418eec:	mov    rdi,rax
  418eef:	call   418791 <test_json@@Base>
  418ef4:	add    rsp,0x10
  418ef8:	or     DWORD PTR [rbp-0xc],eax
  418efb:	mov    rax,QWORD PTR [rbp-0x8]
  418eff:	sub    rsp,0x8
  418f03:	push   0xd9
  418f08:	mov    r9d,0x0
  418f0e:	mov    r8d,0x2
  418f14:	mov    ecx,0x0
  418f19:	lea    rdx,[rip+0x1d7c8]        # 4366e8 <_IO_stdin_used@@Base+0x6e8>
  418f20:	lea    rsi,[rip+0x1dab2]        # 4369d9 <_IO_stdin_used@@Base+0x9d9>
  418f27:	mov    rdi,rax
  418f2a:	call   418791 <test_json@@Base>
  418f2f:	add    rsp,0x10
  418f33:	or     DWORD PTR [rbp-0xc],eax
  418f36:	mov    rax,QWORD PTR [rbp-0x8]
  418f3a:	sub    rsp,0x8
  418f3e:	push   0xdd
  418f43:	mov    r9d,0x2
  418f49:	mov    r8d,0x0
  418f4f:	mov    ecx,0x0
  418f54:	lea    rdx,[rip+0x1d7d6]        # 436731 <_IO_stdin_used@@Base+0x731>
  418f5b:	lea    rsi,[rip+0x1da96]        # 4369f8 <_IO_stdin_used@@Base+0x9f8>
  418f62:	mov    rdi,rax
  418f65:	call   418791 <test_json@@Base>
  418f6a:	add    rsp,0x10
  418f6e:	or     DWORD PTR [rbp-0xc],eax
  418f71:	mov    rax,QWORD PTR [rbp-0x8]
  418f75:	sub    rsp,0x8
  418f79:	push   0xe1
  418f7e:	mov    r9d,0x4
  418f84:	mov    r8d,0x2
  418f8a:	mov    ecx,0x0
  418f8f:	lea    rdx,[rip+0x1d7e1]        # 436777 <_IO_stdin_used@@Base+0x777>
  418f96:	lea    rsi,[rip+0x1da3c]        # 4369d9 <_IO_stdin_used@@Base+0x9d9>
  418f9d:	mov    rdi,rax
  418fa0:	call   418791 <test_json@@Base>
  418fa5:	add    rsp,0x10
  418fa9:	or     DWORD PTR [rbp-0xc],eax
  418fac:	mov    rax,QWORD PTR [rbp-0x8]
  418fb0:	sub    rsp,0x8
  418fb4:	push   0xe5
  418fb9:	mov    r9d,0x8
  418fbf:	mov    r8d,0x0
  418fc5:	mov    ecx,0x0
  418fca:	lea    rdx,[rip+0x1da4f]        # 436a20 <_IO_stdin_used@@Base+0xa20>
  418fd1:	lea    rsi,[rip+0x1db5f]        # 436b37 <_IO_stdin_used@@Base+0xb37>
  418fd8:	mov    rdi,rax
  418fdb:	call   418791 <test_json@@Base>
  418fe0:	add    rsp,0x10
  418fe4:	or     DWORD PTR [rbp-0xc],eax
  418fe7:	mov    rax,QWORD PTR [rbp-0x8]
  418feb:	sub    rsp,0x8
  418fef:	push   0xe9
  418ff4:	mov    r9d,0x0
  418ffa:	mov    r8d,0x2
  419000:	mov    ecx,0x0
  419005:	lea    rdx,[rip+0x1d6dc]        # 4366e8 <_IO_stdin_used@@Base+0x6e8>
  41900c:	lea    rsi,[rip+0x1db3d]        # 436b50 <_IO_stdin_used@@Base+0xb50>
  419013:	mov    rdi,rax
  419016:	call   418791 <test_json@@Base>
  41901b:	add    rsp,0x10
  41901f:	or     DWORD PTR [rbp-0xc],eax
  419022:	mov    rax,QWORD PTR [rbp-0x8]
  419026:	sub    rsp,0x8
  41902a:	push   0xed
  41902f:	mov    r9d,0x0
  419035:	mov    r8d,0x1
  41903b:	mov    ecx,0x0
  419040:	lea    rdx,[rip+0x1d8af]        # 4368f6 <_IO_stdin_used@@Base+0x8f6>
  419047:	lea    rsi,[rip+0x1db22]        # 436b70 <_IO_stdin_used@@Base+0xb70>
  41904e:	mov    rdi,rax
  419051:	call   418791 <test_json@@Base>
  419056:	add    rsp,0x10
  41905a:	or     DWORD PTR [rbp-0xc],eax
  41905d:	mov    rax,QWORD PTR [rbp-0x8]
  419061:	sub    rsp,0x8
  419065:	push   0xf1
  41906a:	mov    r9d,0x1
  419070:	mov    r8d,0x1
  419076:	mov    ecx,0x0
  41907b:	lea    rdx,[rip+0x1d8c8]        # 43694a <_IO_stdin_used@@Base+0x94a>
  419082:	lea    rsi,[rip+0x1dae7]        # 436b70 <_IO_stdin_used@@Base+0xb70>
  419089:	mov    rdi,rax
  41908c:	call   418791 <test_json@@Base>
  419091:	add    rsp,0x10
  419095:	or     DWORD PTR [rbp-0xc],eax
  419098:	mov    rax,QWORD PTR [rbp-0x8]
  41909c:	sub    rsp,0x8
  4190a0:	push   0xf7
  4190a5:	mov    r9d,0x0
  4190ab:	mov    r8d,0x1
  4190b1:	mov    ecx,0x0
  4190b6:	lea    rdx,[rip+0x1d839]        # 4368f6 <_IO_stdin_used@@Base+0x8f6>
  4190bd:	lea    rsi,[rip+0x1dadc]        # 436ba0 <_IO_stdin_used@@Base+0xba0>
  4190c4:	mov    rdi,rax
  4190c7:	call   418791 <test_json@@Base>
  4190cc:	add    rsp,0x10
  4190d0:	or     DWORD PTR [rbp-0xc],eax
  4190d3:	mov    eax,DWORD PTR [rbp-0xc]
  4190d6:	leave  
  4190d7:	ret    

00000000004190d8 <error_case_tests@@Base>:
  4190d8:	push   rbp
  4190d9:	mov    rbp,rsp
  4190dc:	sub    rsp,0x10
  4190e0:	mov    DWORD PTR [rbp-0xc],0x0
  4190e7:	lea    rax,[rip+0x2ccb2]        # 445da0 <flatcc_builder_padding_base@@Base+0xbe20>
  4190ee:	mov    QWORD PTR [rbp-0x8],rax
  4190f2:	mov    rax,QWORD PTR [rbp-0x8]
  4190f6:	sub    rsp,0x8
  4190fa:	push   0x11d
  4190ff:	mov    r9d,0x0
  419105:	mov    r8d,0x0
  41910b:	mov    ecx,0xd
  419110:	mov    edx,0x0
  419115:	lea    rsi,[rip+0x1dae3]        # 436bff <_IO_stdin_used@@Base+0xbff>
  41911c:	mov    rdi,rax
  41911f:	call   418791 <test_json@@Base>
  419124:	add    rsp,0x10
  419128:	or     DWORD PTR [rbp-0xc],eax
  41912b:	mov    rax,QWORD PTR [rbp-0x8]
  41912f:	sub    rsp,0x8
  419133:	push   0x11f
  419138:	mov    r9d,0x0
  41913e:	mov    r8d,0x0
  419144:	mov    ecx,0xd
  419149:	mov    edx,0x0
  41914e:	lea    rsi,[rip+0x1dacb]        # 436c20 <_IO_stdin_used@@Base+0xc20>
  419155:	mov    rdi,rax
  419158:	call   418791 <test_json@@Base>
  41915d:	add    rsp,0x10
  419161:	or     DWORD PTR [rbp-0xc],eax
  419164:	mov    rax,QWORD PTR [rbp-0x8]
  419168:	sub    rsp,0x8
  41916c:	push   0x121
  419171:	mov    r9d,0x0
  419177:	mov    r8d,0x0
  41917d:	mov    ecx,0xd
  419182:	mov    edx,0x0
  419187:	lea    rsi,[rip+0x1dafa]        # 436c88 <_IO_stdin_used@@Base+0xc88>
  41918e:	mov    rdi,rax
  419191:	call   418791 <test_json@@Base>
  419196:	add    rsp,0x10
  41919a:	or     DWORD PTR [rbp-0xc],eax
  41919d:	mov    rax,QWORD PTR [rbp-0x8]
  4191a1:	sub    rsp,0x8
  4191a5:	push   0x123
  4191aa:	mov    r9d,0x0
  4191b0:	mov    r8d,0x0
  4191b6:	mov    ecx,0xd
  4191bb:	mov    edx,0x0
  4191c0:	lea    rsi,[rip+0x1db21]        # 436ce8 <_IO_stdin_used@@Base+0xce8>
  4191c7:	mov    rdi,rax
  4191ca:	call   418791 <test_json@@Base>
  4191cf:	add    rsp,0x10
  4191d3:	or     DWORD PTR [rbp-0xc],eax
  4191d6:	mov    rax,QWORD PTR [rbp-0x8]
  4191da:	sub    rsp,0x8
  4191de:	push   0x125
  4191e3:	mov    r9d,0x0
  4191e9:	mov    r8d,0x0
  4191ef:	mov    ecx,0xd
  4191f4:	mov    edx,0x0
  4191f9:	lea    rsi,[rip+0x1db40]        # 436d40 <_IO_stdin_used@@Base+0xd40>
  419200:	mov    rdi,rax
  419203:	call   418791 <test_json@@Base>
  419208:	add    rsp,0x10
  41920c:	or     DWORD PTR [rbp-0xc],eax
  41920f:	mov    rax,QWORD PTR [rbp-0x8]
  419213:	sub    rsp,0x8
  419217:	push   0x128
  41921c:	mov    r9d,0x0
  419222:	mov    r8d,0x0
  419228:	mov    ecx,0xd
  41922d:	mov    edx,0x0
  419232:	lea    rsi,[rip+0x1db5f]        # 436d98 <_IO_stdin_used@@Base+0xd98>
  419239:	mov    rdi,rax
  41923c:	call   418791 <test_json@@Base>
  419241:	add    rsp,0x10
  419245:	or     DWORD PTR [rbp-0xc],eax
  419248:	mov    rax,QWORD PTR [rbp-0x8]
  41924c:	sub    rsp,0x8
  419250:	push   0x12b
  419255:	mov    r9d,0x0
  41925b:	mov    r8d,0x0
  419261:	mov    ecx,0xd
  419266:	mov    edx,0x0
  41926b:	lea    rsi,[rip+0x1dbc6]        # 436e38 <_IO_stdin_used@@Base+0xe38>
  419272:	mov    rdi,rax
  419275:	call   418791 <test_json@@Base>
  41927a:	add    rsp,0x10
  41927e:	or     DWORD PTR [rbp-0xc],eax
  419281:	mov    rax,QWORD PTR [rbp-0x8]
  419285:	sub    rsp,0x8
  419289:	push   0x12f
  41928e:	mov    r9d,0x0
  419294:	mov    r8d,0x0
  41929a:	mov    ecx,0xd
  41929f:	mov    edx,0x0
  4192a4:	lea    rsi,[rip+0x1dc2d]        # 436ed8 <_IO_stdin_used@@Base+0xed8>
  4192ab:	mov    rdi,rax
  4192ae:	call   418791 <test_json@@Base>
  4192b3:	add    rsp,0x10
  4192b7:	or     DWORD PTR [rbp-0xc],eax
  4192ba:	mov    rax,QWORD PTR [rbp-0x8]
  4192be:	sub    rsp,0x8
  4192c2:	push   0x133
  4192c7:	mov    r9d,0x0
  4192cd:	mov    r8d,0x0
  4192d3:	mov    ecx,0xd
  4192d8:	mov    edx,0x0
  4192dd:	lea    rsi,[rip+0x1dcbc]        # 436fa0 <_IO_stdin_used@@Base+0xfa0>
  4192e4:	mov    rdi,rax
  4192e7:	call   418791 <test_json@@Base>
  4192ec:	add    rsp,0x10
  4192f0:	or     DWORD PTR [rbp-0xc],eax
  4192f3:	mov    rax,QWORD PTR [rbp-0x8]
  4192f7:	sub    rsp,0x8
  4192fb:	push   0x142
  419300:	mov    r9d,0x0
  419306:	mov    r8d,0x0
  41930c:	mov    ecx,0xd
  419311:	mov    edx,0x0
  419316:	lea    rsi,[rip+0x1dd4a]        # 437067 <_IO_stdin_used@@Base+0x1067>
  41931d:	mov    rdi,rax
  419320:	call   418791 <test_json@@Base>
  419325:	add    rsp,0x10
  419329:	or     DWORD PTR [rbp-0xc],eax
  41932c:	mov    rax,QWORD PTR [rbp-0x8]
  419330:	sub    rsp,0x8
  419334:	push   0x144
  419339:	mov    r9d,0x0
  41933f:	mov    r8d,0x0
  419345:	mov    ecx,0xd
  41934a:	mov    edx,0x0
  41934f:	lea    rsi,[rip+0x1dd2a]        # 437080 <_IO_stdin_used@@Base+0x1080>
  419356:	mov    rdi,rax
  419359:	call   418791 <test_json@@Base>
  41935e:	add    rsp,0x10
  419362:	or     DWORD PTR [rbp-0xc],eax
  419365:	mov    rax,QWORD PTR [rbp-0x8]
  419369:	sub    rsp,0x8
  41936d:	push   0x146
  419372:	mov    r9d,0x0
  419378:	mov    r8d,0x0
  41937e:	mov    ecx,0xd
  419383:	mov    edx,0x0
  419388:	lea    rsi,[rip+0x1dd49]        # 4370d8 <_IO_stdin_used@@Base+0x10d8>
  41938f:	mov    rdi,rax
  419392:	call   418791 <test_json@@Base>
  419397:	add    rsp,0x10
  41939b:	or     DWORD PTR [rbp-0xc],eax
  41939e:	mov    rax,QWORD PTR [rbp-0x8]
  4193a2:	sub    rsp,0x8
  4193a6:	push   0x148
  4193ab:	mov    r9d,0x0
  4193b1:	mov    r8d,0x0
  4193b7:	mov    ecx,0xd
  4193bc:	mov    edx,0x0
  4193c1:	lea    rsi,[rip+0x1dd68]        # 437130 <_IO_stdin_used@@Base+0x1130>
  4193c8:	mov    rdi,rax
  4193cb:	call   418791 <test_json@@Base>
  4193d0:	add    rsp,0x10
  4193d4:	or     DWORD PTR [rbp-0xc],eax
  4193d7:	mov    rax,QWORD PTR [rbp-0x8]
  4193db:	sub    rsp,0x8
  4193df:	push   0x14a
  4193e4:	mov    r9d,0x0
  4193ea:	mov    r8d,0x0
  4193f0:	mov    ecx,0xd
  4193f5:	mov    edx,0x0
  4193fa:	lea    rsi,[rip+0x1dd7f]        # 437180 <_IO_stdin_used@@Base+0x1180>
  419401:	mov    rdi,rax
  419404:	call   418791 <test_json@@Base>
  419409:	add    rsp,0x10
  41940d:	or     DWORD PTR [rbp-0xc],eax
  419410:	mov    rax,QWORD PTR [rbp-0x8]
  419414:	sub    rsp,0x8
  419418:	push   0x14d
  41941d:	mov    r9d,0x0
  419423:	mov    r8d,0x0
  419429:	mov    ecx,0xd
  41942e:	mov    edx,0x0
  419433:	lea    rsi,[rip+0x1dd96]        # 4371d0 <_IO_stdin_used@@Base+0x11d0>
  41943a:	mov    rdi,rax
  41943d:	call   418791 <test_json@@Base>
  419442:	add    rsp,0x10
  419446:	or     DWORD PTR [rbp-0xc],eax
  419449:	mov    rax,QWORD PTR [rbp-0x8]
  41944d:	sub    rsp,0x8
  419451:	push   0x150
  419456:	mov    r9d,0x0
  41945c:	mov    r8d,0x0
  419462:	mov    ecx,0xd
  419467:	mov    edx,0x0
  41946c:	lea    rsi,[rip+0x1dded]        # 437260 <_IO_stdin_used@@Base+0x1260>
  419473:	mov    rdi,rax
  419476:	call   418791 <test_json@@Base>
  41947b:	add    rsp,0x10
  41947f:	or     DWORD PTR [rbp-0xc],eax
  419482:	mov    rax,QWORD PTR [rbp-0x8]
  419486:	sub    rsp,0x8
  41948a:	push   0x154
  41948f:	mov    r9d,0x0
  419495:	mov    r8d,0x0
  41949b:	mov    ecx,0xd
  4194a0:	mov    edx,0x0
  4194a5:	lea    rsi,[rip+0x1de44]        # 4372f0 <_IO_stdin_used@@Base+0x12f0>
  4194ac:	mov    rdi,rax
  4194af:	call   418791 <test_json@@Base>
  4194b4:	add    rsp,0x10
  4194b8:	or     DWORD PTR [rbp-0xc],eax
  4194bb:	mov    rax,QWORD PTR [rbp-0x8]
  4194bf:	sub    rsp,0x8
  4194c3:	push   0x158
  4194c8:	mov    r9d,0x0
  4194ce:	mov    r8d,0x0
  4194d4:	mov    ecx,0xd
  4194d9:	mov    edx,0x0
  4194de:	lea    rsi,[rip+0x1debb]        # 4373a0 <_IO_stdin_used@@Base+0x13a0>
  4194e5:	mov    rdi,rax
  4194e8:	call   418791 <test_json@@Base>
  4194ed:	add    rsp,0x10
  4194f1:	or     DWORD PTR [rbp-0xc],eax
  4194f4:	mov    eax,DWORD PTR [rbp-0xc]
  4194f7:	leave  
  4194f8:	ret    

00000000004194f9 <base64_tests@@Base>:
  4194f9:	push   rbp
  4194fa:	mov    rbp,rsp
  4194fd:	sub    rsp,0x10
  419501:	mov    DWORD PTR [rbp-0xc],0x0
  419508:	lea    rax,[rip+0x2c891]        # 445da0 <flatcc_builder_padding_base@@Base+0xbe20>
  41950f:	mov    QWORD PTR [rbp-0x8],rax
  419513:	mov    rax,QWORD PTR [rbp-0x8]
  419517:	sub    rsp,0x8
  41951b:	push   0x171
  419520:	mov    r9d,0x0
  419526:	mov    r8d,0x0
  41952c:	mov    ecx,0x0
  419531:	lea    rdx,[rip+0x1d23f]        # 436777 <_IO_stdin_used@@Base+0x777>
  419538:	lea    rsi,[rip+0x1df10]        # 43744f <_IO_stdin_used@@Base+0x144f>
  41953f:	mov    rdi,rax
  419542:	call   418791 <test_json@@Base>
  419547:	add    rsp,0x10
  41954b:	or     DWORD PTR [rbp-0xc],eax
  41954e:	mov    rax,QWORD PTR [rbp-0x8]
  419552:	sub    rsp,0x8
  419556:	push   0x174
  41955b:	mov    r9d,0x0
  419561:	mov    r8d,0x0
  419567:	mov    ecx,0x0
  41956c:	lea    rdx,[rip+0x1def5]        # 437468 <_IO_stdin_used@@Base+0x1468>
  419573:	lea    rsi,[rip+0x1df16]        # 437490 <_IO_stdin_used@@Base+0x1490>
  41957a:	mov    rdi,rax
  41957d:	call   418791 <test_json@@Base>
  419582:	add    rsp,0x10
  419586:	or     DWORD PTR [rbp-0xc],eax
  419589:	mov    rax,QWORD PTR [rbp-0x8]
  41958d:	sub    rsp,0x8
  419591:	push   0x178
  419596:	mov    r9d,0x0
  41959c:	mov    r8d,0x0
  4195a2:	mov    ecx,0x0
  4195a7:	lea    rdx,[rip+0x1df0a]        # 4374b8 <_IO_stdin_used@@Base+0x14b8>
  4195ae:	lea    rsi,[rip+0x1dfbb]        # 437570 <_IO_stdin_used@@Base+0x1570>
  4195b5:	mov    rdi,rax
  4195b8:	call   418791 <test_json@@Base>
  4195bd:	add    rsp,0x10
  4195c1:	or     DWORD PTR [rbp-0xc],eax
  4195c4:	mov    rax,QWORD PTR [rbp-0x8]
  4195c8:	sub    rsp,0x8
  4195cc:	push   0x17b
  4195d1:	mov    r9d,0x0
  4195d7:	mov    r8d,0x0
  4195dd:	mov    ecx,0x0
  4195e2:	lea    rdx,[rip+0x1e047]        # 437630 <_IO_stdin_used@@Base+0x1630>
  4195e9:	lea    rsi,[rip+0x1e0f8]        # 4376e8 <_IO_stdin_used@@Base+0x16e8>
  4195f0:	mov    rdi,rax
  4195f3:	call   418791 <test_json@@Base>
  4195f8:	add    rsp,0x10
  4195fc:	or     DWORD PTR [rbp-0xc],eax
  4195ff:	mov    rax,QWORD PTR [rbp-0x8]
  419603:	sub    rsp,0x8
  419607:	push   0x17e
  41960c:	mov    r9d,0x0
  419612:	mov    r8d,0x0
  419618:	mov    ecx,0x0
  41961d:	lea    rdx,[rip+0x1de94]        # 4374b8 <_IO_stdin_used@@Base+0x14b8>
  419624:	lea    rsi,[rip+0x1e17d]        # 4377a8 <_IO_stdin_used@@Base+0x17a8>
  41962b:	mov    rdi,rax
  41962e:	call   418791 <test_json@@Base>
  419633:	add    rsp,0x10
  419637:	or     DWORD PTR [rbp-0xc],eax
  41963a:	mov    rax,QWORD PTR [rbp-0x8]
  41963e:	sub    rsp,0x8
  419642:	push   0x181
  419647:	mov    r9d,0x0
  41964d:	mov    r8d,0x0
  419653:	mov    ecx,0x0
  419658:	lea    rdx,[rip+0x1dfd1]        # 437630 <_IO_stdin_used@@Base+0x1630>
  41965f:	lea    rsi,[rip+0x1e1fa]        # 437860 <_IO_stdin_used@@Base+0x1860>
  419666:	mov    rdi,rax
  419669:	call   418791 <test_json@@Base>
  41966e:	add    rsp,0x10
  419672:	or     DWORD PTR [rbp-0xc],eax
  419675:	mov    rax,QWORD PTR [rbp-0x8]
  419679:	sub    rsp,0x8
  41967d:	push   0x184
  419682:	mov    r9d,0x0
  419688:	mov    r8d,0x0
  41968e:	mov    ecx,0x1f
  419693:	mov    edx,0x0
  419698:	lea    rsi,[rip+0x1e281]        # 437920 <_IO_stdin_used@@Base+0x1920>
  41969f:	mov    rdi,rax
  4196a2:	call   418791 <test_json@@Base>
  4196a7:	add    rsp,0x10
  4196ab:	or     DWORD PTR [rbp-0xc],eax
  4196ae:	mov    rax,QWORD PTR [rbp-0x8]
  4196b2:	sub    rsp,0x8
  4196b6:	push   0x187
  4196bb:	mov    r9d,0x0
  4196c1:	mov    r8d,0x0
  4196c7:	mov    ecx,0x20
  4196cc:	mov    edx,0x0
  4196d1:	lea    rsi,[rip+0x1e308]        # 4379e0 <_IO_stdin_used@@Base+0x19e0>
  4196d8:	mov    rdi,rax
  4196db:	call   418791 <test_json@@Base>
  4196e0:	add    rsp,0x10
  4196e4:	or     DWORD PTR [rbp-0xc],eax
  4196e7:	mov    rax,QWORD PTR [rbp-0x8]
  4196eb:	sub    rsp,0x8
  4196ef:	push   0x196
  4196f4:	mov    r9d,0x0
  4196fa:	mov    r8d,0x0
  419700:	mov    ecx,0x0
  419705:	lea    rdx,[rip+0x1e394]        # 437aa0 <_IO_stdin_used@@Base+0x1aa0>
  41970c:	lea    rsi,[rip+0x1e465]        # 437b78 <_IO_stdin_used@@Base+0x1b78>
  419713:	mov    rdi,rax
  419716:	call   418791 <test_json@@Base>
  41971b:	add    rsp,0x10
  41971f:	or     DWORD PTR [rbp-0xc],eax
  419722:	mov    rax,QWORD PTR [rbp-0x8]
  419726:	sub    rsp,0x8
  41972a:	push   0x1a3
  41972f:	mov    r9d,0x0
  419735:	mov    r8d,0x0
  41973b:	mov    ecx,0x0
  419740:	lea    rdx,[rip+0x1e359]        # 437aa0 <_IO_stdin_used@@Base+0x1aa0>
  419747:	lea    rsi,[rip+0x1e4fa]        # 437c48 <_IO_stdin_used@@Base+0x1c48>
  41974e:	mov    rdi,rax
  419751:	call   418791 <test_json@@Base>
  419756:	add    rsp,0x10
  41975a:	or     DWORD PTR [rbp-0xc],eax
  41975d:	mov    eax,DWORD PTR [rbp-0xc]
  419760:	leave  
  419761:	ret    

0000000000419762 <mixed_type_union_tests@@Base>:
  419762:	push   rbp
  419763:	mov    rbp,rsp
  419766:	sub    rsp,0x10
  41976a:	mov    DWORD PTR [rbp-0xc],0x0
  419771:	lea    rax,[rip+0x2c668]        # 445de0 <flatcc_builder_padding_base@@Base+0xbe60>
  419778:	mov    QWORD PTR [rbp-0x8],rax
  41977c:	mov    rax,QWORD PTR [rbp-0x8]
  419780:	sub    rsp,0x8
  419784:	push   0x1b0
  419789:	mov    r9d,0x0
  41978f:	mov    r8d,0x0
  419795:	mov    ecx,0x0
  41979a:	lea    rdx,[rip+0x1e577]        # 437d18 <_IO_stdin_used@@Base+0x1d18>
  4197a1:	lea    rsi,[rip+0x1e5b8]        # 437d60 <_IO_stdin_used@@Base+0x1d60>
  4197a8:	mov    rdi,rax
  4197ab:	call   418791 <test_json@@Base>
  4197b0:	add    rsp,0x10
  4197b4:	or     DWORD PTR [rbp-0xc],eax
  4197b7:	mov    rax,QWORD PTR [rbp-0x8]
  4197bb:	sub    rsp,0x8
  4197bf:	push   0x1b5
  4197c4:	mov    r9d,0x0
  4197ca:	mov    r8d,0x0
  4197d0:	mov    ecx,0x0
  4197d5:	lea    rdx,[rip+0x1e5d4]        # 437db0 <_IO_stdin_used@@Base+0x1db0>
  4197dc:	lea    rsi,[rip+0x1e645]        # 437e28 <_IO_stdin_used@@Base+0x1e28>
  4197e3:	mov    rdi,rax
  4197e6:	call   418791 <test_json@@Base>
  4197eb:	add    rsp,0x10
  4197ef:	or     DWORD PTR [rbp-0xc],eax
  4197f2:	mov    rax,QWORD PTR [rbp-0x8]
  4197f6:	sub    rsp,0x8
  4197fa:	push   0x1ba
  4197ff:	mov    r9d,0x0
  419805:	mov    r8d,0x0
  41980b:	mov    ecx,0x0
  419810:	lea    rdx,[rip+0x1e599]        # 437db0 <_IO_stdin_used@@Base+0x1db0>
  419817:	lea    rsi,[rip+0x1e692]        # 437eb0 <_IO_stdin_used@@Base+0x1eb0>
  41981e:	mov    rdi,rax
  419821:	call   418791 <test_json@@Base>
  419826:	add    rsp,0x10
  41982a:	or     DWORD PTR [rbp-0xc],eax
  41982d:	mov    rax,QWORD PTR [rbp-0x8]
  419831:	sub    rsp,0x8
  419835:	push   0x1c1
  41983a:	mov    r9d,0x0
  419840:	mov    r8d,0x0
  419846:	mov    ecx,0x0
  41984b:	lea    rdx,[rip+0x1e6f6]        # 437f48 <_IO_stdin_used@@Base+0x1f48>
  419852:	lea    rsi,[rip+0x1e7af]        # 438008 <_IO_stdin_used@@Base+0x2008>
  419859:	mov    rdi,rax
  41985c:	call   418791 <test_json@@Base>
  419861:	add    rsp,0x10
  419865:	or     DWORD PTR [rbp-0xc],eax
  419868:	mov    rax,QWORD PTR [rbp-0x8]
  41986c:	sub    rsp,0x8
  419870:	push   0x1ca
  419875:	mov    r9d,0x0
  41987b:	mov    r8d,0x0
  419881:	mov    ecx,0x0
  419886:	lea    rdx,[rip+0x1e85b]        # 4380e8 <_IO_stdin_used@@Base+0x20e8>
  41988d:	lea    rsi,[rip+0x1e934]        # 4381c8 <_IO_stdin_used@@Base+0x21c8>
  419894:	mov    rdi,rax
  419897:	call   418791 <test_json@@Base>
  41989c:	add    rsp,0x10
  4198a0:	or     DWORD PTR [rbp-0xc],eax
  4198a3:	mov    rax,QWORD PTR [rbp-0x8]
  4198a7:	sub    rsp,0x8
  4198ab:	push   0x1d5
  4198b0:	mov    r9d,0x0
  4198b6:	mov    r8d,0x0
  4198bc:	mov    ecx,0x0
  4198c1:	lea    rdx,[rip+0x1ea08]        # 4382d0 <_IO_stdin_used@@Base+0x22d0>
  4198c8:	lea    rsi,[rip+0x1eb49]        # 438418 <_IO_stdin_used@@Base+0x2418>
  4198cf:	mov    rdi,rax
  4198d2:	call   418791 <test_json@@Base>
  4198d7:	add    rsp,0x10
  4198db:	or     DWORD PTR [rbp-0xc],eax
  4198de:	mov    rax,QWORD PTR [rbp-0x8]
  4198e2:	sub    rsp,0x8
  4198e6:	push   0x1da
  4198eb:	mov    r9d,0x0
  4198f1:	mov    r8d,0x0
  4198f7:	mov    ecx,0x0
  4198fc:	lea    rdx,[rip+0x1e4ad]        # 437db0 <_IO_stdin_used@@Base+0x1db0>
  419903:	lea    rsi,[rip+0x1ec96]        # 4385a0 <_IO_stdin_used@@Base+0x25a0>
  41990a:	mov    rdi,rax
  41990d:	call   418791 <test_json@@Base>
  419912:	add    rsp,0x10
  419916:	or     DWORD PTR [rbp-0xc],eax
  419919:	mov    eax,DWORD PTR [rbp-0xc]
  41991c:	leave  
  41991d:	ret    

000000000041991e <union_vector_tests@@Base>:
  41991e:	push   rbp
  41991f:	mov    rbp,rsp
  419922:	sub    rsp,0x10
  419926:	mov    DWORD PTR [rbp-0xc],0x0
  41992d:	lea    rax,[rip+0x2c48c]        # 445dc0 <flatcc_builder_padding_base@@Base+0xbe40>
  419934:	mov    QWORD PTR [rbp-0x8],rax
  419938:	mov    rax,QWORD PTR [rbp-0x8]
  41993c:	sub    rsp,0x8
  419940:	push   0x1e5
  419945:	mov    r9d,0x0
  41994b:	mov    r8d,0x0
  419951:	mov    ecx,0x0
  419956:	lea    rdx,[rip+0x1ecd3]        # 438630 <_IO_stdin_used@@Base+0x2630>
  41995d:	lea    rsi,[rip+0x1ed04]        # 438668 <_IO_stdin_used@@Base+0x2668>
  419964:	mov    rdi,rax
  419967:	call   418791 <test_json@@Base>
  41996c:	add    rsp,0x10
  419970:	or     DWORD PTR [rbp-0xc],eax
  419973:	mov    rax,QWORD PTR [rbp-0x8]
  419977:	sub    rsp,0x8
  41997b:	push   0x1e8
  419980:	mov    r9d,0x0
  419986:	mov    r8d,0x0
  41998c:	mov    ecx,0x0
  419991:	lea    rdx,[rip+0x1ed10]        # 4386a8 <_IO_stdin_used@@Base+0x26a8>
  419998:	lea    rsi,[rip+0x1ed39]        # 4386d8 <_IO_stdin_used@@Base+0x26d8>
  41999f:	mov    rdi,rax
  4199a2:	call   418791 <test_json@@Base>
  4199a7:	add    rsp,0x10
  4199ab:	or     DWORD PTR [rbp-0xc],eax
  4199ae:	mov    rax,QWORD PTR [rbp-0x8]
  4199b2:	sub    rsp,0x8
  4199b6:	push   0x1eb
  4199bb:	mov    r9d,0x0
  4199c1:	mov    r8d,0x0
  4199c7:	mov    ecx,0x0
  4199cc:	lea    rdx,[rip+0x1ed3d]        # 438710 <_IO_stdin_used@@Base+0x2710>
  4199d3:	lea    rsi,[rip+0x1ed7e]        # 438758 <_IO_stdin_used@@Base+0x2758>
  4199da:	mov    rdi,rax
  4199dd:	call   418791 <test_json@@Base>
  4199e2:	add    rsp,0x10
  4199e6:	or     DWORD PTR [rbp-0xc],eax
  4199e9:	mov    rax,QWORD PTR [rbp-0x8]
  4199ed:	sub    rsp,0x8
  4199f1:	push   0x1ee
  4199f6:	mov    r9d,0x0
  4199fc:	mov    r8d,0x0
  419a02:	mov    ecx,0x0
  419a07:	lea    rdx,[rip+0x1ed9a]        # 4387a8 <_IO_stdin_used@@Base+0x27a8>
  419a0e:	lea    rsi,[rip+0x1ee03]        # 438818 <_IO_stdin_used@@Base+0x2818>
  419a15:	mov    rdi,rax
  419a18:	call   418791 <test_json@@Base>
  419a1d:	add    rsp,0x10
  419a21:	or     DWORD PTR [rbp-0xc],eax
  419a24:	mov    rax,QWORD PTR [rbp-0x8]
  419a28:	sub    rsp,0x8
  419a2c:	push   0x1f1
  419a31:	mov    r9d,0x0
  419a37:	mov    r8d,0x0
  419a3d:	mov    ecx,0x0
  419a42:	lea    rdx,[rip+0x1ebe7]        # 438630 <_IO_stdin_used@@Base+0x2630>
  419a49:	lea    rsi,[rip+0x1ee48]        # 438898 <_IO_stdin_used@@Base+0x2898>
  419a50:	mov    rdi,rax
  419a53:	call   418791 <test_json@@Base>
  419a58:	add    rsp,0x10
  419a5c:	or     DWORD PTR [rbp-0xc],eax
  419a5f:	mov    rax,QWORD PTR [rbp-0x8]
  419a63:	sub    rsp,0x8
  419a67:	push   0x1f4
  419a6c:	mov    r9d,0x0
  419a72:	mov    r8d,0x0
  419a78:	mov    ecx,0x0
  419a7d:	lea    rdx,[rip+0x1ee54]        # 4388d8 <_IO_stdin_used@@Base+0x28d8>
  419a84:	lea    rsi,[rip+0x1eead]        # 438938 <_IO_stdin_used@@Base+0x2938>
  419a8b:	mov    rdi,rax
  419a8e:	call   418791 <test_json@@Base>
  419a93:	add    rsp,0x10
  419a97:	or     DWORD PTR [rbp-0xc],eax
  419a9a:	mov    eax,DWORD PTR [rbp-0xc]
  419a9d:	leave  
  419a9e:	ret    

0000000000419a9f <main@@Base>:
  419a9f:	push   rbp
  419aa0:	mov    rbp,rsp
  419aa3:	sub    rsp,0x10
  419aa7:	mov    DWORD PTR [rbp-0xc],0x0
  419aae:	lea    rax,[rip+0x2c2eb]        # 445da0 <flatcc_builder_padding_base@@Base+0xbe20>
  419ab5:	mov    QWORD PTR [rbp-0x8],rax
  419ab9:	mov    eax,0x0
  419abe:	call   418cce <edge_case_tests@@Base>
  419ac3:	or     DWORD PTR [rbp-0xc],eax
  419ac6:	mov    eax,0x0
  419acb:	call   4190d8 <error_case_tests@@Base>
  419ad0:	or     DWORD PTR [rbp-0xc],eax
  419ad3:	mov    eax,0x0
  419ad8:	call   41991e <union_vector_tests@@Base>
  419add:	or     DWORD PTR [rbp-0xc],eax
  419ae0:	mov    eax,0x0
  419ae5:	call   4194f9 <base64_tests@@Base>
  419aea:	or     DWORD PTR [rbp-0xc],eax
  419aed:	mov    eax,0x0
  419af2:	call   419762 <mixed_type_union_tests@@Base>
  419af7:	or     DWORD PTR [rbp-0xc],eax
  419afa:	mov    rax,QWORD PTR [rbp-0x8]
  419afe:	sub    rsp,0x8
  419b02:	push   0x20d
  419b07:	mov    r9d,0x0
  419b0d:	mov    r8d,0x0
  419b13:	mov    ecx,0x0
  419b18:	lea    rdx,[rip+0x1cc58]        # 436777 <_IO_stdin_used@@Base+0x777>
  419b1f:	lea    rsi,[rip+0x1ee78]        # 43899e <_IO_stdin_used@@Base+0x299e>
  419b26:	mov    rdi,rax
  419b29:	call   418791 <test_json@@Base>
  419b2e:	add    rsp,0x10
  419b32:	or     DWORD PTR [rbp-0xc],eax
  419b35:	mov    rax,QWORD PTR [rbp-0x8]
  419b39:	sub    rsp,0x8
  419b3d:	push   0x210
  419b42:	mov    r9d,0x0
  419b48:	mov    r8d,0x0
  419b4e:	mov    ecx,0x0
  419b53:	lea    rdx,[rip+0x1ee5e]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  419b5a:	lea    rsi,[rip+0x1ee7f]        # 4389e0 <_IO_stdin_used@@Base+0x29e0>
  419b61:	mov    rdi,rax
  419b64:	call   418791 <test_json@@Base>
  419b69:	add    rsp,0x10
  419b6d:	or     DWORD PTR [rbp-0xc],eax
  419b70:	mov    rax,QWORD PTR [rbp-0x8]
  419b74:	sub    rsp,0x8
  419b78:	push   0x213
  419b7d:	mov    r9d,0x0
  419b83:	mov    r8d,0x0
  419b89:	mov    ecx,0x0
  419b8e:	lea    rdx,[rip+0x1ee73]        # 438a08 <_IO_stdin_used@@Base+0x2a08>
  419b95:	lea    rsi,[rip+0x1ee94]        # 438a30 <_IO_stdin_used@@Base+0x2a30>
  419b9c:	mov    rdi,rax
  419b9f:	call   418791 <test_json@@Base>
  419ba4:	add    rsp,0x10
  419ba8:	or     DWORD PTR [rbp-0xc],eax
  419bab:	mov    rax,QWORD PTR [rbp-0x8]
  419baf:	sub    rsp,0x8
  419bb3:	push   0x216
  419bb8:	mov    r9d,0x0
  419bbe:	mov    r8d,0x0
  419bc4:	mov    ecx,0x0
  419bc9:	lea    rdx,[rip+0x1ee88]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  419bd0:	lea    rsi,[rip+0x1eeb1]        # 438a88 <_IO_stdin_used@@Base+0x2a88>
  419bd7:	mov    rdi,rax
  419bda:	call   418791 <test_json@@Base>
  419bdf:	add    rsp,0x10
  419be3:	or     DWORD PTR [rbp-0xc],eax
  419be6:	mov    rax,QWORD PTR [rbp-0x8]
  419bea:	sub    rsp,0x8
  419bee:	push   0x219
  419bf3:	mov    r9d,0x0
  419bf9:	mov    r8d,0x0
  419bff:	mov    ecx,0x0
  419c04:	lea    rdx,[rip+0x1ee4d]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  419c0b:	lea    rsi,[rip+0x1eeae]        # 438ac0 <_IO_stdin_used@@Base+0x2ac0>
  419c12:	mov    rdi,rax
  419c15:	call   418791 <test_json@@Base>
  419c1a:	add    rsp,0x10
  419c1e:	or     DWORD PTR [rbp-0xc],eax
  419c21:	mov    rax,QWORD PTR [rbp-0x8]
  419c25:	sub    rsp,0x8
  419c29:	push   0x21c
  419c2e:	mov    r9d,0x0
  419c34:	mov    r8d,0x0
  419c3a:	mov    ecx,0x0
  419c3f:	lea    rdx,[rip+0x1ed72]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  419c46:	lea    rsi,[rip+0x1eeb3]        # 438b00 <_IO_stdin_used@@Base+0x2b00>
  419c4d:	mov    rdi,rax
  419c50:	call   418791 <test_json@@Base>
  419c55:	add    rsp,0x10
  419c59:	or     DWORD PTR [rbp-0xc],eax
  419c5c:	mov    rax,QWORD PTR [rbp-0x8]
  419c60:	sub    rsp,0x8
  419c64:	push   0x21f
  419c69:	mov    r9d,0x0
  419c6f:	mov    r8d,0x0
  419c75:	mov    ecx,0x0
  419c7a:	lea    rdx,[rip+0x1ed87]        # 438a08 <_IO_stdin_used@@Base+0x2a08>
  419c81:	lea    rsi,[rip+0x1eea0]        # 438b28 <_IO_stdin_used@@Base+0x2b28>
  419c88:	mov    rdi,rax
  419c8b:	call   418791 <test_json@@Base>
  419c90:	add    rsp,0x10
  419c94:	or     DWORD PTR [rbp-0xc],eax
  419c97:	mov    rax,QWORD PTR [rbp-0x8]
  419c9b:	sub    rsp,0x8
  419c9f:	push   0x223
  419ca4:	mov    r9d,0x0
  419caa:	mov    r8d,0x0
  419cb0:	mov    ecx,0x0
  419cb5:	lea    rdx,[rip+0x1cabb]        # 436777 <_IO_stdin_used@@Base+0x777>
  419cbc:	lea    rsi,[rip+0x1ee95]        # 438b58 <_IO_stdin_used@@Base+0x2b58>
  419cc3:	mov    rdi,rax
  419cc6:	call   418791 <test_json@@Base>
  419ccb:	add    rsp,0x10
  419ccf:	or     DWORD PTR [rbp-0xc],eax
  419cd2:	mov    rax,QWORD PTR [rbp-0x8]
  419cd6:	sub    rsp,0x8
  419cda:	push   0x227
  419cdf:	mov    r9d,0x0
  419ce5:	mov    r8d,0x0
  419ceb:	mov    ecx,0x0
  419cf0:	lea    rdx,[rip+0x1ca80]        # 436777 <_IO_stdin_used@@Base+0x777>
  419cf7:	lea    rsi,[rip+0x1ca12]        # 436710 <_IO_stdin_used@@Base+0x710>
  419cfe:	mov    rdi,rax
  419d01:	call   418791 <test_json@@Base>
  419d06:	add    rsp,0x10
  419d0a:	or     DWORD PTR [rbp-0xc],eax
  419d0d:	mov    rax,QWORD PTR [rbp-0x8]
  419d11:	sub    rsp,0x8
  419d15:	push   0x22b
  419d1a:	mov    r9d,0x0
  419d20:	mov    r8d,0x0
  419d26:	mov    ecx,0x0
  419d2b:	lea    rdx,[rip+0x1ca45]        # 436777 <_IO_stdin_used@@Base+0x777>
  419d32:	lea    rsi,[rip+0x1ee46]        # 438b7f <_IO_stdin_used@@Base+0x2b7f>
  419d39:	mov    rdi,rax
  419d3c:	call   418791 <test_json@@Base>
  419d41:	add    rsp,0x10
  419d45:	or     DWORD PTR [rbp-0xc],eax
  419d48:	mov    rax,QWORD PTR [rbp-0x8]
  419d4c:	sub    rsp,0x8
  419d50:	push   0x22e
  419d55:	mov    r9d,0x0
  419d5b:	mov    r8d,0x0
  419d61:	mov    ecx,0x0
  419d66:	lea    rdx,[rip+0x1ec4b]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  419d6d:	lea    rsi,[rip+0x1ee24]        # 438b98 <_IO_stdin_used@@Base+0x2b98>
  419d74:	mov    rdi,rax
  419d77:	call   418791 <test_json@@Base>
  419d7c:	add    rsp,0x10
  419d80:	or     DWORD PTR [rbp-0xc],eax
  419d83:	mov    rax,QWORD PTR [rbp-0x8]
  419d87:	sub    rsp,0x8
  419d8b:	push   0x231
  419d90:	mov    r9d,0x0
  419d96:	mov    r8d,0x0
  419d9c:	mov    ecx,0x0
  419da1:	lea    rdx,[rip+0x1ec60]        # 438a08 <_IO_stdin_used@@Base+0x2a08>
  419da8:	lea    rsi,[rip+0x1ee11]        # 438bc0 <_IO_stdin_used@@Base+0x2bc0>
  419daf:	mov    rdi,rax
  419db2:	call   418791 <test_json@@Base>
  419db7:	add    rsp,0x10
  419dbb:	or     DWORD PTR [rbp-0xc],eax
  419dbe:	mov    rax,QWORD PTR [rbp-0x8]
  419dc2:	sub    rsp,0x8
  419dc6:	push   0x234
  419dcb:	mov    r9d,0x0
  419dd1:	mov    r8d,0x0
  419dd7:	mov    ecx,0x0
  419ddc:	lea    rdx,[rip+0x1ec75]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  419de3:	lea    rsi,[rip+0x1edfe]        # 438be8 <_IO_stdin_used@@Base+0x2be8>
  419dea:	mov    rdi,rax
  419ded:	call   418791 <test_json@@Base>
  419df2:	add    rsp,0x10
  419df6:	or     DWORD PTR [rbp-0xc],eax
  419df9:	mov    rax,QWORD PTR [rbp-0x8]
  419dfd:	sub    rsp,0x8
  419e01:	push   0x237
  419e06:	mov    r9d,0x0
  419e0c:	mov    r8d,0x0
  419e12:	mov    ecx,0x0
  419e17:	lea    rdx,[rip+0x1ec3a]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  419e1e:	lea    rsi,[rip+0x1edf3]        # 438c18 <_IO_stdin_used@@Base+0x2c18>
  419e25:	mov    rdi,rax
  419e28:	call   418791 <test_json@@Base>
  419e2d:	add    rsp,0x10
  419e31:	or     DWORD PTR [rbp-0xc],eax
  419e34:	mov    rax,QWORD PTR [rbp-0x8]
  419e38:	sub    rsp,0x8
  419e3c:	push   0x23a
  419e41:	mov    r9d,0x0
  419e47:	mov    r8d,0x0
  419e4d:	mov    ecx,0x0
  419e52:	lea    rdx,[rip+0x1eb5f]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  419e59:	lea    rsi,[rip+0x1edf0]        # 438c50 <_IO_stdin_used@@Base+0x2c50>
  419e60:	mov    rdi,rax
  419e63:	call   418791 <test_json@@Base>
  419e68:	add    rsp,0x10
  419e6c:	or     DWORD PTR [rbp-0xc],eax
  419e6f:	mov    rax,QWORD PTR [rbp-0x8]
  419e73:	sub    rsp,0x8
  419e77:	push   0x23d
  419e7c:	mov    r9d,0x0
  419e82:	mov    r8d,0x0
  419e88:	mov    ecx,0x0
  419e8d:	lea    rdx,[rip+0x1eb74]        # 438a08 <_IO_stdin_used@@Base+0x2a08>
  419e94:	lea    rsi,[rip+0x1edd5]        # 438c70 <_IO_stdin_used@@Base+0x2c70>
  419e9b:	mov    rdi,rax
  419e9e:	call   418791 <test_json@@Base>
  419ea3:	add    rsp,0x10
  419ea7:	or     DWORD PTR [rbp-0xc],eax
  419eaa:	mov    rax,QWORD PTR [rbp-0x8]
  419eae:	sub    rsp,0x8
  419eb2:	push   0x241
  419eb7:	mov    r9d,0x0
  419ebd:	mov    r8d,0x0
  419ec3:	mov    ecx,0x0
  419ec8:	lea    rdx,[rip+0x1c8a8]        # 436777 <_IO_stdin_used@@Base+0x777>
  419ecf:	lea    rsi,[rip+0x1edc2]        # 438c98 <_IO_stdin_used@@Base+0x2c98>
  419ed6:	mov    rdi,rax
  419ed9:	call   418791 <test_json@@Base>
  419ede:	add    rsp,0x10
  419ee2:	or     DWORD PTR [rbp-0xc],eax
  419ee5:	mov    rax,QWORD PTR [rbp-0x8]
  419ee9:	sub    rsp,0x8
  419eed:	push   0x245
  419ef2:	mov    r9d,0x0
  419ef8:	mov    r8d,0x0
  419efe:	mov    ecx,0x0
  419f03:	lea    rdx,[rip+0x1c86d]        # 436777 <_IO_stdin_used@@Base+0x777>
  419f0a:	lea    rsi,[rip+0x1cac8]        # 4369d9 <_IO_stdin_used@@Base+0x9d9>
  419f11:	mov    rdi,rax
  419f14:	call   418791 <test_json@@Base>
  419f19:	add    rsp,0x10
  419f1d:	or     DWORD PTR [rbp-0xc],eax
  419f20:	mov    rax,QWORD PTR [rbp-0x8]
  419f24:	sub    rsp,0x8
  419f28:	push   0x249
  419f2d:	mov    r9d,0x0
  419f33:	mov    r8d,0x0
  419f39:	mov    ecx,0x0
  419f3e:	lea    rdx,[rip+0x1ed7b]        # 438cc0 <_IO_stdin_used@@Base+0x2cc0>
  419f45:	lea    rsi,[rip+0x1ed9c]        # 438ce8 <_IO_stdin_used@@Base+0x2ce8>
  419f4c:	mov    rdi,rax
  419f4f:	call   418791 <test_json@@Base>
  419f54:	add    rsp,0x10
  419f58:	or     DWORD PTR [rbp-0xc],eax
  419f5b:	mov    rax,QWORD PTR [rbp-0x8]
  419f5f:	sub    rsp,0x8
  419f63:	push   0x24f
  419f68:	mov    r9d,0x0
  419f6e:	mov    r8d,0x0
  419f74:	mov    ecx,0x0
  419f79:	lea    rdx,[rip+0x1ed40]        # 438cc0 <_IO_stdin_used@@Base+0x2cc0>
  419f80:	lea    rsi,[rip+0x1ed89]        # 438d10 <_IO_stdin_used@@Base+0x2d10>
  419f87:	mov    rdi,rax
  419f8a:	call   418791 <test_json@@Base>
  419f8f:	add    rsp,0x10
  419f93:	or     DWORD PTR [rbp-0xc],eax
  419f96:	mov    rax,QWORD PTR [rbp-0x8]
  419f9a:	sub    rsp,0x8
  419f9e:	push   0x252
  419fa3:	mov    r9d,0x0
  419fa9:	mov    r8d,0x0
  419faf:	mov    ecx,0x0
  419fb4:	lea    rdx,[rip+0x1ed05]        # 438cc0 <_IO_stdin_used@@Base+0x2cc0>
  419fbb:	lea    rsi,[rip+0x1ed76]        # 438d38 <_IO_stdin_used@@Base+0x2d38>
  419fc2:	mov    rdi,rax
  419fc5:	call   418791 <test_json@@Base>
  419fca:	add    rsp,0x10
  419fce:	or     DWORD PTR [rbp-0xc],eax
  419fd1:	mov    rax,QWORD PTR [rbp-0x8]
  419fd5:	sub    rsp,0x8
  419fd9:	push   0x255
  419fde:	mov    r9d,0x0
  419fe4:	mov    r8d,0x0
  419fea:	mov    ecx,0x0
  419fef:	lea    rdx,[rip+0x1ea62]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  419ff6:	lea    rsi,[rip+0x1ed63]        # 438d60 <_IO_stdin_used@@Base+0x2d60>
  419ffd:	mov    rdi,rax
  41a000:	call   418791 <test_json@@Base>
  41a005:	add    rsp,0x10
  41a009:	or     DWORD PTR [rbp-0xc],eax
  41a00c:	mov    rax,QWORD PTR [rbp-0x8]
  41a010:	sub    rsp,0x8
  41a014:	push   0x259
  41a019:	mov    r9d,0x0
  41a01f:	mov    r8d,0x0
  41a025:	mov    ecx,0x0
  41a02a:	lea    rdx,[rip+0x1e987]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  41a031:	lea    rsi,[rip+0x1ed58]        # 438d90 <_IO_stdin_used@@Base+0x2d90>
  41a038:	mov    rdi,rax
  41a03b:	call   418791 <test_json@@Base>
  41a040:	add    rsp,0x10
  41a044:	or     DWORD PTR [rbp-0xc],eax
  41a047:	mov    rax,QWORD PTR [rbp-0x8]
  41a04b:	sub    rsp,0x8
  41a04f:	push   0x25c
  41a054:	mov    r9d,0x0
  41a05a:	mov    r8d,0x0
  41a060:	mov    ecx,0x0
  41a065:	lea    rdx,[rip+0x1e99c]        # 438a08 <_IO_stdin_used@@Base+0x2a08>
  41a06c:	lea    rsi,[rip+0x1ed45]        # 438db8 <_IO_stdin_used@@Base+0x2db8>
  41a073:	mov    rdi,rax
  41a076:	call   418791 <test_json@@Base>
  41a07b:	add    rsp,0x10
  41a07f:	or     DWORD PTR [rbp-0xc],eax
  41a082:	mov    rax,QWORD PTR [rbp-0x8]
  41a086:	sub    rsp,0x8
  41a08a:	push   0x25f
  41a08f:	mov    r9d,0x0
  41a095:	mov    r8d,0x0
  41a09b:	mov    ecx,0x0
  41a0a0:	lea    rdx,[rip+0x1ed39]        # 438de0 <_IO_stdin_used@@Base+0x2de0>
  41a0a7:	lea    rsi,[rip+0x1ed5a]        # 438e08 <_IO_stdin_used@@Base+0x2e08>
  41a0ae:	mov    rdi,rax
  41a0b1:	call   418791 <test_json@@Base>
  41a0b6:	add    rsp,0x10
  41a0ba:	or     DWORD PTR [rbp-0xc],eax
  41a0bd:	mov    rax,QWORD PTR [rbp-0x8]
  41a0c1:	sub    rsp,0x8
  41a0c5:	push   0x262
  41a0ca:	mov    r9d,0x0
  41a0d0:	mov    r8d,0x0
  41a0d6:	mov    ecx,0x0
  41a0db:	lea    rdx,[rip+0x1e976]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  41a0e2:	lea    rsi,[rip+0x1ed47]        # 438e30 <_IO_stdin_used@@Base+0x2e30>
  41a0e9:	mov    rdi,rax
  41a0ec:	call   418791 <test_json@@Base>
  41a0f1:	add    rsp,0x10
  41a0f5:	or     DWORD PTR [rbp-0xc],eax
  41a0f8:	mov    rax,QWORD PTR [rbp-0x8]
  41a0fc:	sub    rsp,0x8
  41a100:	push   0x265
  41a105:	mov    r9d,0x0
  41a10b:	mov    r8d,0x0
  41a111:	mov    ecx,0x0
  41a116:	lea    rdx,[rip+0x1ed35]        # 438e52 <_IO_stdin_used@@Base+0x2e52>
  41a11d:	lea    rsi,[rip+0x1ed4c]        # 438e70 <_IO_stdin_used@@Base+0x2e70>
  41a124:	mov    rdi,rax
  41a127:	call   418791 <test_json@@Base>
  41a12c:	add    rsp,0x10
  41a130:	or     DWORD PTR [rbp-0xc],eax
  41a133:	mov    rax,QWORD PTR [rbp-0x8]
  41a137:	sub    rsp,0x8
  41a13b:	push   0x268
  41a140:	mov    r9d,0x0
  41a146:	mov    r8d,0x0
  41a14c:	mov    ecx,0x0
  41a151:	lea    rdx,[rip+0x1ed3a]        # 438e92 <_IO_stdin_used@@Base+0x2e92>
  41a158:	lea    rsi,[rip+0x1ed51]        # 438eb0 <_IO_stdin_used@@Base+0x2eb0>
  41a15f:	mov    rdi,rax
  41a162:	call   418791 <test_json@@Base>
  41a167:	add    rsp,0x10
  41a16b:	or     DWORD PTR [rbp-0xc],eax
  41a16e:	mov    rax,QWORD PTR [rbp-0x8]
  41a172:	sub    rsp,0x8
  41a176:	push   0x26b
  41a17b:	mov    r9d,0x0
  41a181:	mov    r8d,0x0
  41a187:	mov    ecx,0x0
  41a18c:	lea    rdx,[rip+0x1ed3f]        # 438ed2 <_IO_stdin_used@@Base+0x2ed2>
  41a193:	lea    rsi,[rip+0x1ed56]        # 438ef0 <_IO_stdin_used@@Base+0x2ef0>
  41a19a:	mov    rdi,rax
  41a19d:	call   418791 <test_json@@Base>
  41a1a2:	add    rsp,0x10
  41a1a6:	or     DWORD PTR [rbp-0xc],eax
  41a1a9:	mov    rax,QWORD PTR [rbp-0x8]
  41a1ad:	sub    rsp,0x8
  41a1b1:	push   0x26e
  41a1b6:	mov    r9d,0x0
  41a1bc:	mov    r8d,0x0
  41a1c2:	mov    ecx,0x0
  41a1c7:	lea    rdx,[rip+0x1e7ea]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  41a1ce:	lea    rsi,[rip+0x1ed43]        # 438f18 <_IO_stdin_used@@Base+0x2f18>
  41a1d5:	mov    rdi,rax
  41a1d8:	call   418791 <test_json@@Base>
  41a1dd:	add    rsp,0x10
  41a1e1:	or     DWORD PTR [rbp-0xc],eax
  41a1e4:	mov    rax,QWORD PTR [rbp-0x8]
  41a1e8:	sub    rsp,0x8
  41a1ec:	push   0x271
  41a1f1:	mov    r9d,0x0
  41a1f7:	mov    r8d,0x0
  41a1fd:	mov    ecx,0x0
  41a202:	lea    rdx,[rip+0x1e7af]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  41a209:	lea    rsi,[rip+0x1ed38]        # 438f48 <_IO_stdin_used@@Base+0x2f48>
  41a210:	mov    rdi,rax
  41a213:	call   418791 <test_json@@Base>
  41a218:	add    rsp,0x10
  41a21c:	or     DWORD PTR [rbp-0xc],eax
  41a21f:	mov    rax,QWORD PTR [rbp-0x8]
  41a223:	sub    rsp,0x8
  41a227:	push   0x274
  41a22c:	mov    r9d,0x0
  41a232:	mov    r8d,0x0
  41a238:	mov    ecx,0x0
  41a23d:	lea    rdx,[rip+0x1ed3e]        # 438f82 <_IO_stdin_used@@Base+0x2f82>
  41a244:	lea    rsi,[rip+0x1ed55]        # 438fa0 <_IO_stdin_used@@Base+0x2fa0>
  41a24b:	mov    rdi,rax
  41a24e:	call   418791 <test_json@@Base>
  41a253:	add    rsp,0x10
  41a257:	or     DWORD PTR [rbp-0xc],eax
  41a25a:	mov    rax,QWORD PTR [rbp-0x8]
  41a25e:	sub    rsp,0x8
  41a262:	push   0x277
  41a267:	mov    r9d,0x0
  41a26d:	mov    r8d,0x0
  41a273:	mov    ecx,0x0
  41a278:	lea    rdx,[rip+0x1ed03]        # 438f82 <_IO_stdin_used@@Base+0x2f82>
  41a27f:	lea    rsi,[rip+0x1ed1a]        # 438fa0 <_IO_stdin_used@@Base+0x2fa0>
  41a286:	mov    rdi,rax
  41a289:	call   418791 <test_json@@Base>
  41a28e:	add    rsp,0x10
  41a292:	or     DWORD PTR [rbp-0xc],eax
  41a295:	mov    rax,QWORD PTR [rbp-0x8]
  41a299:	sub    rsp,0x8
  41a29d:	push   0x27a
  41a2a2:	mov    r9d,0x0
  41a2a8:	mov    r8d,0x0
  41a2ae:	mov    ecx,0x0
  41a2b3:	lea    rdx,[rip+0x1ed16]        # 438fd0 <_IO_stdin_used@@Base+0x2fd0>
  41a2ba:	lea    rsi,[rip+0x1ed57]        # 439018 <_IO_stdin_used@@Base+0x3018>
  41a2c1:	mov    rdi,rax
  41a2c4:	call   418791 <test_json@@Base>
  41a2c9:	add    rsp,0x10
  41a2cd:	or     DWORD PTR [rbp-0xc],eax
  41a2d0:	mov    rax,QWORD PTR [rbp-0x8]
  41a2d4:	sub    rsp,0x8
  41a2d8:	push   0x27e
  41a2dd:	mov    r9d,0x0
  41a2e3:	mov    r8d,0x0
  41a2e9:	mov    ecx,0x0
  41a2ee:	lea    rdx,[rip+0x1ed7b]        # 439070 <_IO_stdin_used@@Base+0x3070>
  41a2f5:	lea    rsi,[rip+0x1edc4]        # 4390c0 <_IO_stdin_used@@Base+0x30c0>
  41a2fc:	mov    rdi,rax
  41a2ff:	call   418791 <test_json@@Base>
  41a304:	add    rsp,0x10
  41a308:	or     DWORD PTR [rbp-0xc],eax
  41a30b:	mov    rax,QWORD PTR [rbp-0x8]
  41a30f:	sub    rsp,0x8
  41a313:	push   0x282
  41a318:	mov    r9d,0x0
  41a31e:	mov    r8d,0x0
  41a324:	mov    ecx,0x0
  41a329:	lea    rdx,[rip+0x1ede8]        # 439118 <_IO_stdin_used@@Base+0x3118>
  41a330:	lea    rsi,[rip+0x1ee49]        # 439180 <_IO_stdin_used@@Base+0x3180>
  41a337:	mov    rdi,rax
  41a33a:	call   418791 <test_json@@Base>
  41a33f:	add    rsp,0x10
  41a343:	or     DWORD PTR [rbp-0xc],eax
  41a346:	mov    rax,QWORD PTR [rbp-0x8]
  41a34a:	sub    rsp,0x8
  41a34e:	push   0x286
  41a353:	mov    r9d,0x0
  41a359:	mov    r8d,0x0
  41a35f:	mov    ecx,0x0
  41a364:	lea    rdx,[rip+0x1c40c]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a36b:	lea    rsi,[rip+0x1ee7e]        # 4391f0 <_IO_stdin_used@@Base+0x31f0>
  41a372:	mov    rdi,rax
  41a375:	call   418791 <test_json@@Base>
  41a37a:	add    rsp,0x10
  41a37e:	or     DWORD PTR [rbp-0xc],eax
  41a381:	mov    rax,QWORD PTR [rbp-0x8]
  41a385:	sub    rsp,0x8
  41a389:	push   0x289
  41a38e:	mov    r9d,0x0
  41a394:	mov    r8d,0x0
  41a39a:	mov    ecx,0x0
  41a39f:	lea    rdx,[rip+0x1c3d1]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a3a6:	lea    rsi,[rip+0x1ee73]        # 439220 <_IO_stdin_used@@Base+0x3220>
  41a3ad:	mov    rdi,rax
  41a3b0:	call   418791 <test_json@@Base>
  41a3b5:	add    rsp,0x10
  41a3b9:	or     DWORD PTR [rbp-0xc],eax
  41a3bc:	mov    rax,QWORD PTR [rbp-0x8]
  41a3c0:	sub    rsp,0x8
  41a3c4:	push   0x28d
  41a3c9:	mov    r9d,0x0
  41a3cf:	mov    r8d,0x0
  41a3d5:	mov    ecx,0x0
  41a3da:	lea    rdx,[rip+0x1e5d7]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  41a3e1:	lea    rsi,[rip+0x1ee5e]        # 439246 <_IO_stdin_used@@Base+0x3246>
  41a3e8:	mov    rdi,rax
  41a3eb:	call   418791 <test_json@@Base>
  41a3f0:	add    rsp,0x10
  41a3f4:	or     DWORD PTR [rbp-0xc],eax
  41a3f7:	mov    rax,QWORD PTR [rbp-0x8]
  41a3fb:	sub    rsp,0x8
  41a3ff:	push   0x290
  41a404:	mov    r9d,0x0
  41a40a:	mov    r8d,0x0
  41a410:	mov    ecx,0x0
  41a415:	lea    rdx,[rip+0x1e5ec]        # 438a08 <_IO_stdin_used@@Base+0x2a08>
  41a41c:	lea    rsi,[rip+0x1ee40]        # 439263 <_IO_stdin_used@@Base+0x3263>
  41a423:	mov    rdi,rax
  41a426:	call   418791 <test_json@@Base>
  41a42b:	add    rsp,0x10
  41a42f:	or     DWORD PTR [rbp-0xc],eax
  41a432:	mov    rax,QWORD PTR [rbp-0x8]
  41a436:	sub    rsp,0x8
  41a43a:	push   0x293
  41a43f:	mov    r9d,0x0
  41a445:	mov    r8d,0x0
  41a44b:	mov    ecx,0x0
  41a450:	lea    rdx,[rip+0x1e989]        # 438de0 <_IO_stdin_used@@Base+0x2de0>
  41a457:	lea    rsi,[rip+0x1ee22]        # 439280 <_IO_stdin_used@@Base+0x3280>
  41a45e:	mov    rdi,rax
  41a461:	call   418791 <test_json@@Base>
  41a466:	add    rsp,0x10
  41a46a:	or     DWORD PTR [rbp-0xc],eax
  41a46d:	mov    rax,QWORD PTR [rbp-0x8]
  41a471:	sub    rsp,0x8
  41a475:	push   0x296
  41a47a:	mov    r9d,0x0
  41a480:	mov    r8d,0x0
  41a486:	mov    ecx,0x0
  41a48b:	lea    rdx,[rip+0x1e5c6]        # 438a58 <_IO_stdin_used@@Base+0x2a58>
  41a492:	lea    rsi,[rip+0x1ee04]        # 43929d <_IO_stdin_used@@Base+0x329d>
  41a499:	mov    rdi,rax
  41a49c:	call   418791 <test_json@@Base>
  41a4a1:	add    rsp,0x10
  41a4a5:	or     DWORD PTR [rbp-0xc],eax
  41a4a8:	mov    rax,QWORD PTR [rbp-0x8]
  41a4ac:	sub    rsp,0x8
  41a4b0:	push   0x299
  41a4b5:	mov    r9d,0x0
  41a4bb:	mov    r8d,0x0
  41a4c1:	mov    ecx,0x0
  41a4c6:	lea    rdx,[rip+0x1e985]        # 438e52 <_IO_stdin_used@@Base+0x2e52>
  41a4cd:	lea    rsi,[rip+0x1ede7]        # 4392bb <_IO_stdin_used@@Base+0x32bb>
  41a4d4:	mov    rdi,rax
  41a4d7:	call   418791 <test_json@@Base>
  41a4dc:	add    rsp,0x10
  41a4e0:	or     DWORD PTR [rbp-0xc],eax
  41a4e3:	mov    rax,QWORD PTR [rbp-0x8]
  41a4e7:	sub    rsp,0x8
  41a4eb:	push   0x29c
  41a4f0:	mov    r9d,0x0
  41a4f6:	mov    r8d,0x0
  41a4fc:	mov    ecx,0x0
  41a501:	lea    rdx,[rip+0x1e98a]        # 438e92 <_IO_stdin_used@@Base+0x2e92>
  41a508:	lea    rsi,[rip+0x1edca]        # 4392d9 <_IO_stdin_used@@Base+0x32d9>
  41a50f:	mov    rdi,rax
  41a512:	call   418791 <test_json@@Base>
  41a517:	add    rsp,0x10
  41a51b:	or     DWORD PTR [rbp-0xc],eax
  41a51e:	mov    rax,QWORD PTR [rbp-0x8]
  41a522:	sub    rsp,0x8
  41a526:	push   0x29f
  41a52b:	mov    r9d,0x0
  41a531:	mov    r8d,0x0
  41a537:	mov    ecx,0x0
  41a53c:	lea    rdx,[rip+0x1e98f]        # 438ed2 <_IO_stdin_used@@Base+0x2ed2>
  41a543:	lea    rsi,[rip+0x1edad]        # 4392f7 <_IO_stdin_used@@Base+0x32f7>
  41a54a:	mov    rdi,rax
  41a54d:	call   418791 <test_json@@Base>
  41a552:	add    rsp,0x10
  41a556:	or     DWORD PTR [rbp-0xc],eax
  41a559:	mov    rax,QWORD PTR [rbp-0x8]
  41a55d:	sub    rsp,0x8
  41a561:	push   0x2a2
  41a566:	mov    r9d,0x0
  41a56c:	mov    r8d,0x0
  41a572:	mov    ecx,0x0
  41a577:	lea    rdx,[rip+0x1e43a]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  41a57e:	lea    rsi,[rip+0x1ed93]        # 439318 <_IO_stdin_used@@Base+0x3318>
  41a585:	mov    rdi,rax
  41a588:	call   418791 <test_json@@Base>
  41a58d:	add    rsp,0x10
  41a591:	or     DWORD PTR [rbp-0xc],eax
  41a594:	mov    rax,QWORD PTR [rbp-0x8]
  41a598:	sub    rsp,0x8
  41a59c:	push   0x2a5
  41a5a1:	mov    r9d,0x0
  41a5a7:	mov    r8d,0x0
  41a5ad:	mov    ecx,0x0
  41a5b2:	lea    rdx,[rip+0x1e3ff]        # 4389b8 <_IO_stdin_used@@Base+0x29b8>
  41a5b9:	lea    rsi,[rip+0x1ed80]        # 439340 <_IO_stdin_used@@Base+0x3340>
  41a5c0:	mov    rdi,rax
  41a5c3:	call   418791 <test_json@@Base>
  41a5c8:	add    rsp,0x10
  41a5cc:	or     DWORD PTR [rbp-0xc],eax
  41a5cf:	mov    rax,QWORD PTR [rbp-0x8]
  41a5d3:	sub    rsp,0x8
  41a5d7:	push   0x2a8
  41a5dc:	mov    r9d,0x0
  41a5e2:	mov    r8d,0x0
  41a5e8:	mov    ecx,0x0
  41a5ed:	lea    rdx,[rip+0x1e98e]        # 438f82 <_IO_stdin_used@@Base+0x2f82>
  41a5f4:	lea    rsi,[rip+0x1ed7d]        # 439378 <_IO_stdin_used@@Base+0x3378>
  41a5fb:	mov    rdi,rax
  41a5fe:	call   418791 <test_json@@Base>
  41a603:	add    rsp,0x10
  41a607:	or     DWORD PTR [rbp-0xc],eax
  41a60a:	mov    rax,QWORD PTR [rbp-0x8]
  41a60e:	sub    rsp,0x8
  41a612:	push   0x2ab
  41a617:	mov    r9d,0x0
  41a61d:	mov    r8d,0x0
  41a623:	mov    ecx,0x0
  41a628:	lea    rdx,[rip+0x1e953]        # 438f82 <_IO_stdin_used@@Base+0x2f82>
  41a62f:	lea    rsi,[rip+0x1ed42]        # 439378 <_IO_stdin_used@@Base+0x3378>
  41a636:	mov    rdi,rax
  41a639:	call   418791 <test_json@@Base>
  41a63e:	add    rsp,0x10
  41a642:	or     DWORD PTR [rbp-0xc],eax
  41a645:	mov    rax,QWORD PTR [rbp-0x8]
  41a649:	sub    rsp,0x8
  41a64d:	push   0x2ae
  41a652:	mov    r9d,0x0
  41a658:	mov    r8d,0x0
  41a65e:	mov    ecx,0x0
  41a663:	lea    rdx,[rip+0x1e966]        # 438fd0 <_IO_stdin_used@@Base+0x2fd0>
  41a66a:	lea    rsi,[rip+0x1ed2f]        # 4393a0 <_IO_stdin_used@@Base+0x33a0>
  41a671:	mov    rdi,rax
  41a674:	call   418791 <test_json@@Base>
  41a679:	add    rsp,0x10
  41a67d:	or     DWORD PTR [rbp-0xc],eax
  41a680:	mov    rax,QWORD PTR [rbp-0x8]
  41a684:	sub    rsp,0x8
  41a688:	push   0x2b2
  41a68d:	mov    r9d,0x0
  41a693:	mov    r8d,0x0
  41a699:	mov    ecx,0x0
  41a69e:	lea    rdx,[rip+0x1e9cb]        # 439070 <_IO_stdin_used@@Base+0x3070>
  41a6a5:	lea    rsi,[rip+0x1ed3c]        # 4393e8 <_IO_stdin_used@@Base+0x33e8>
  41a6ac:	mov    rdi,rax
  41a6af:	call   418791 <test_json@@Base>
  41a6b4:	add    rsp,0x10
  41a6b8:	or     DWORD PTR [rbp-0xc],eax
  41a6bb:	mov    rax,QWORD PTR [rbp-0x8]
  41a6bf:	sub    rsp,0x8
  41a6c3:	push   0x2b6
  41a6c8:	mov    r9d,0x0
  41a6ce:	mov    r8d,0x0
  41a6d4:	mov    ecx,0x0
  41a6d9:	lea    rdx,[rip+0x1ea38]        # 439118 <_IO_stdin_used@@Base+0x3118>
  41a6e0:	lea    rsi,[rip+0x1ed51]        # 439438 <_IO_stdin_used@@Base+0x3438>
  41a6e7:	mov    rdi,rax
  41a6ea:	call   418791 <test_json@@Base>
  41a6ef:	add    rsp,0x10
  41a6f3:	or     DWORD PTR [rbp-0xc],eax
  41a6f6:	mov    rax,QWORD PTR [rbp-0x8]
  41a6fa:	sub    rsp,0x8
  41a6fe:	push   0x2ba
  41a703:	mov    r9d,0x0
  41a709:	mov    r8d,0x0
  41a70f:	mov    ecx,0x0
  41a714:	lea    rdx,[rip+0x1c05c]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a71b:	lea    rsi,[rip+0x1ed76]        # 439498 <_IO_stdin_used@@Base+0x3498>
  41a722:	mov    rdi,rax
  41a725:	call   418791 <test_json@@Base>
  41a72a:	add    rsp,0x10
  41a72e:	or     DWORD PTR [rbp-0xc],eax
  41a731:	mov    rax,QWORD PTR [rbp-0x8]
  41a735:	sub    rsp,0x8
  41a739:	push   0x2bd
  41a73e:	mov    r9d,0x0
  41a744:	mov    r8d,0x0
  41a74a:	mov    ecx,0x0
  41a74f:	lea    rdx,[rip+0x1c021]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a756:	lea    rsi,[rip+0x1ed63]        # 4394c0 <_IO_stdin_used@@Base+0x34c0>
  41a75d:	mov    rdi,rax
  41a760:	call   418791 <test_json@@Base>
  41a765:	add    rsp,0x10
  41a769:	or     DWORD PTR [rbp-0xc],eax
  41a76c:	mov    rax,QWORD PTR [rbp-0x8]
  41a770:	sub    rsp,0x8
  41a774:	push   0x2c7
  41a779:	mov    r9d,0x0
  41a77f:	mov    r8d,0x0
  41a785:	mov    ecx,0x0
  41a78a:	lea    rdx,[rip+0x1ed57]        # 4394e8 <_IO_stdin_used@@Base+0x34e8>
  41a791:	lea    rsi,[rip+0x1edb0]        # 439548 <_IO_stdin_used@@Base+0x3548>
  41a798:	mov    rdi,rax
  41a79b:	call   418791 <test_json@@Base>
  41a7a0:	add    rsp,0x10
  41a7a4:	or     DWORD PTR [rbp-0xc],eax
  41a7a7:	mov    rax,QWORD PTR [rbp-0x8]
  41a7ab:	sub    rsp,0x8
  41a7af:	push   0x2cc
  41a7b4:	mov    r9d,0x0
  41a7ba:	mov    r8d,0x0
  41a7c0:	mov    ecx,0x0
  41a7c5:	lea    rdx,[rip+0x1ed1c]        # 4394e8 <_IO_stdin_used@@Base+0x34e8>
  41a7cc:	lea    rsi,[rip+0x1edd5]        # 4395a8 <_IO_stdin_used@@Base+0x35a8>
  41a7d3:	mov    rdi,rax
  41a7d6:	call   418791 <test_json@@Base>
  41a7db:	add    rsp,0x10
  41a7df:	or     DWORD PTR [rbp-0xc],eax
  41a7e2:	mov    rax,QWORD PTR [rbp-0x8]
  41a7e6:	sub    rsp,0x8
  41a7ea:	push   0x2db
  41a7ef:	mov    r9d,0x0
  41a7f5:	mov    r8d,0x0
  41a7fb:	mov    ecx,0x0
  41a800:	lea    rdx,[rip+0x1ee11]        # 439618 <_IO_stdin_used@@Base+0x3618>
  41a807:	lea    rsi,[rip+0x1ee3a]        # 439648 <_IO_stdin_used@@Base+0x3648>
  41a80e:	mov    rdi,rax
  41a811:	call   418791 <test_json@@Base>
  41a816:	add    rsp,0x10
  41a81a:	or     DWORD PTR [rbp-0xc],eax
  41a81d:	mov    rax,QWORD PTR [rbp-0x8]
  41a821:	sub    rsp,0x8
  41a825:	push   0x2de
  41a82a:	mov    r9d,0x0
  41a830:	mov    r8d,0x0
  41a836:	mov    ecx,0x0
  41a83b:	lea    rdx,[rip+0x1ee43]        # 439685 <_IO_stdin_used@@Base+0x3685>
  41a842:	lea    rsi,[rip+0x1ee4e]        # 439697 <_IO_stdin_used@@Base+0x3697>
  41a849:	mov    rdi,rax
  41a84c:	call   418791 <test_json@@Base>
  41a851:	add    rsp,0x10
  41a855:	or     DWORD PTR [rbp-0xc],eax
  41a858:	mov    rax,QWORD PTR [rbp-0x8]
  41a85c:	sub    rsp,0x8
  41a860:	push   0x2e2
  41a865:	mov    r9d,0x0
  41a86b:	mov    r8d,0x0
  41a871:	mov    ecx,0x0
  41a876:	lea    rdx,[rip+0x1ee3b]        # 4396b8 <_IO_stdin_used@@Base+0x36b8>
  41a87d:	lea    rsi,[rip+0x1ee7c]        # 439700 <_IO_stdin_used@@Base+0x3700>
  41a884:	mov    rdi,rax
  41a887:	call   418791 <test_json@@Base>
  41a88c:	add    rsp,0x10
  41a890:	or     DWORD PTR [rbp-0xc],eax
  41a893:	mov    rax,QWORD PTR [rbp-0x8]
  41a897:	sub    rsp,0x8
  41a89b:	push   0x2ee
  41a8a0:	mov    r9d,0x0
  41a8a6:	mov    r8d,0x0
  41a8ac:	mov    ecx,0x0
  41a8b1:	lea    rdx,[rip+0x1ee00]        # 4396b8 <_IO_stdin_used@@Base+0x36b8>
  41a8b8:	lea    rsi,[rip+0x1ee89]        # 439748 <_IO_stdin_used@@Base+0x3748>
  41a8bf:	mov    rdi,rax
  41a8c2:	call   418791 <test_json@@Base>
  41a8c7:	add    rsp,0x10
  41a8cb:	or     DWORD PTR [rbp-0xc],eax
  41a8ce:	mov    rax,QWORD PTR [rbp-0x8]
  41a8d2:	sub    rsp,0x8
  41a8d6:	push   0x2fe
  41a8db:	mov    r9d,0x0
  41a8e1:	mov    r8d,0x0
  41a8e7:	mov    ecx,0x0
  41a8ec:	lea    rdx,[rip+0x1eef5]        # 4397e8 <_IO_stdin_used@@Base+0x37e8>
  41a8f3:	lea    rsi,[rip+0x1ef16]        # 439810 <_IO_stdin_used@@Base+0x3810>
  41a8fa:	mov    rdi,rax
  41a8fd:	call   418791 <test_json@@Base>
  41a902:	add    rsp,0x10
  41a906:	or     DWORD PTR [rbp-0xc],eax
  41a909:	mov    rax,QWORD PTR [rbp-0x8]
  41a90d:	sub    rsp,0x8
  41a911:	push   0x302
  41a916:	mov    r9d,0x0
  41a91c:	mov    r8d,0x0
  41a922:	mov    ecx,0x0
  41a927:	lea    rdx,[rip+0x1ef0a]        # 439838 <_IO_stdin_used@@Base+0x3838>
  41a92e:	lea    rsi,[rip+0x1ef33]        # 439868 <_IO_stdin_used@@Base+0x3868>
  41a935:	mov    rdi,rax
  41a938:	call   418791 <test_json@@Base>
  41a93d:	add    rsp,0x10
  41a941:	or     DWORD PTR [rbp-0xc],eax
  41a944:	mov    rax,QWORD PTR [rbp-0x8]
  41a948:	sub    rsp,0x8
  41a94c:	push   0x308
  41a951:	mov    r9d,0x0
  41a957:	mov    r8d,0x0
  41a95d:	mov    ecx,0x0
  41a962:	lea    rdx,[rip+0x1ef2f]        # 439898 <_IO_stdin_used@@Base+0x3898>
  41a969:	lea    rsi,[rip+0x1ef98]        # 439908 <_IO_stdin_used@@Base+0x3908>
  41a970:	mov    rdi,rax
  41a973:	call   418791 <test_json@@Base>
  41a978:	add    rsp,0x10
  41a97c:	or     DWORD PTR [rbp-0xc],eax
  41a97f:	mov    rax,QWORD PTR [rbp-0x8]
  41a983:	sub    rsp,0x8
  41a987:	push   0x30d
  41a98c:	mov    r9d,0x0
  41a992:	mov    r8d,0x0
  41a998:	mov    ecx,0x0
  41a99d:	lea    rdx,[rip+0x1bdd3]        # 436777 <_IO_stdin_used@@Base+0x777>
  41a9a4:	lea    rsi,[rip+0x1efdd]        # 439988 <_IO_stdin_used@@Base+0x3988>
  41a9ab:	mov    rdi,rax
  41a9ae:	call   418791 <test_json@@Base>
  41a9b3:	add    rsp,0x10
  41a9b7:	or     DWORD PTR [rbp-0xc],eax
  41a9ba:	mov    rax,QWORD PTR [rbp-0x8]
  41a9be:	sub    rsp,0x8
  41a9c2:	push   0x312
  41a9c7:	mov    r9d,0x0
  41a9cd:	mov    r8d,0x0
  41a9d3:	mov    ecx,0x0
  41a9d8:	lea    rdx,[rip+0x1f021]        # 439a00 <_IO_stdin_used@@Base+0x3a00>
  41a9df:	lea    rsi,[rip+0x1f08a]        # 439a70 <_IO_stdin_used@@Base+0x3a70>
  41a9e6:	mov    rdi,rax
  41a9e9:	call   418791 <test_json@@Base>
  41a9ee:	add    rsp,0x10
  41a9f2:	or     DWORD PTR [rbp-0xc],eax
  41a9f5:	mov    rax,QWORD PTR [rbp-0x8]
  41a9f9:	sub    rsp,0x8
  41a9fd:	push   0x317
  41aa02:	mov    r9d,0x0
  41aa08:	mov    r8d,0x0
  41aa0e:	mov    ecx,0x0
  41aa13:	lea    rdx,[rip+0x1f0d6]        # 439af0 <_IO_stdin_used@@Base+0x3af0>
  41aa1a:	lea    rsi,[rip+0x1f14f]        # 439b70 <_IO_stdin_used@@Base+0x3b70>
  41aa21:	mov    rdi,rax
  41aa24:	call   418791 <test_json@@Base>
  41aa29:	add    rsp,0x10
  41aa2d:	or     DWORD PTR [rbp-0xc],eax
  41aa30:	mov    rax,QWORD PTR [rbp-0x8]
  41aa34:	sub    rsp,0x8
  41aa38:	push   0x31c
  41aa3d:	mov    r9d,0x0
  41aa43:	mov    r8d,0x0
  41aa49:	mov    ecx,0x0
  41aa4e:	lea    rdx,[rip+0x1f1ab]        # 439c00 <_IO_stdin_used@@Base+0x3c00>
  41aa55:	lea    rsi,[rip+0x1f214]        # 439c70 <_IO_stdin_used@@Base+0x3c70>
  41aa5c:	mov    rdi,rax
  41aa5f:	call   418791 <test_json@@Base>
  41aa64:	add    rsp,0x10
  41aa68:	or     DWORD PTR [rbp-0xc],eax
  41aa6b:	mov    rax,QWORD PTR [rbp-0x8]
  41aa6f:	sub    rsp,0x8
  41aa73:	push   0x321
  41aa78:	mov    r9d,0x0
  41aa7e:	mov    r8d,0x0
  41aa84:	mov    ecx,0x0
  41aa89:	lea    rdx,[rip+0x1f260]        # 439cf0 <_IO_stdin_used@@Base+0x3cf0>
  41aa90:	lea    rsi,[rip+0x1f2d9]        # 439d70 <_IO_stdin_used@@Base+0x3d70>
  41aa97:	mov    rdi,rax
  41aa9a:	call   418791 <test_json@@Base>
  41aa9f:	add    rsp,0x10
  41aaa3:	or     DWORD PTR [rbp-0xc],eax
  41aaa6:	mov    rax,QWORD PTR [rbp-0x8]
  41aaaa:	sub    rsp,0x8
  41aaae:	push   0x326
  41aab3:	mov    r9d,0x0
  41aab9:	mov    r8d,0x0
  41aabf:	mov    ecx,0x0
  41aac4:	lea    rdx,[rip+0x1f335]        # 439e00 <_IO_stdin_used@@Base+0x3e00>
  41aacb:	lea    rsi,[rip+0x1f3b6]        # 439e88 <_IO_stdin_used@@Base+0x3e88>
  41aad2:	mov    rdi,rax
  41aad5:	call   418791 <test_json@@Base>
  41aada:	add    rsp,0x10
  41aade:	or     DWORD PTR [rbp-0xc],eax
  41aae1:	cmp    DWORD PTR [rbp-0xc],0x0
  41aae5:	je     41aaee <main@@Base+0x104f>
  41aae7:	mov    eax,0xffffffff
  41aaec:	jmp    41aaf3 <main@@Base+0x1054>
  41aaee:	mov    eax,0x0
  41aaf3:	leave  
  41aaf4:	ret    
  41aaf5:	push   rbp
  41aaf6:	mov    rbp,rsp
  41aaf9:	sub    rsp,0x30
  41aafd:	mov    QWORD PTR [rbp-0x28],rdi
  41ab01:	mov    QWORD PTR [rbp-0x30],rsi
  41ab05:	mov    rax,QWORD PTR fs:0x28
  41ab0e:	mov    QWORD PTR [rbp-0x8],rax
  41ab12:	xor    eax,eax
  41ab14:	mov    QWORD PTR [rbp-0x10],0x0
  41ab1c:	cmp    QWORD PTR [rbp-0x28],0x7
  41ab21:	ja     41ab2b <main@@Base+0x108c>
  41ab23:	mov    QWORD PTR [rbp-0x28],0x8
  41ab2b:	mov    rdx,QWORD PTR [rbp-0x30]
  41ab2f:	mov    rcx,QWORD PTR [rbp-0x28]
  41ab33:	lea    rax,[rbp-0x10]
  41ab37:	mov    rsi,rcx
  41ab3a:	mov    rdi,rax
  41ab3d:	call   405150 <posix_memalign@plt>
  41ab42:	mov    DWORD PTR [rbp-0x14],eax
  41ab45:	cmp    DWORD PTR [rbp-0x14],0x0
  41ab49:	je     41ab68 <main@@Base+0x10c9>
  41ab4b:	mov    rax,QWORD PTR [rbp-0x10]
  41ab4f:	test   rax,rax
  41ab52:	je     41ab68 <main@@Base+0x10c9>
  41ab54:	mov    rax,QWORD PTR [rbp-0x10]
  41ab58:	mov    rdi,rax
  41ab5b:	call   405030 <free@plt>
  41ab60:	mov    QWORD PTR [rbp-0x10],0x0
  41ab68:	mov    rax,QWORD PTR [rbp-0x10]
  41ab6c:	mov    rcx,QWORD PTR [rbp-0x8]
  41ab70:	xor    rcx,QWORD PTR fs:0x28
  41ab79:	je     41ab80 <main@@Base+0x10e1>
  41ab7b:	call   405070 <__stack_chk_fail@plt>
  41ab80:	leave  
  41ab81:	ret    
  41ab82:	push   rbp
  41ab83:	mov    rbp,rsp
  41ab86:	mov    DWORD PTR [rbp-0x4],edi
  41ab89:	mov    eax,DWORD PTR [rbp-0x4]
  41ab8c:	pop    rbp
  41ab8d:	ret    
  41ab8e:	push   rbp
  41ab8f:	mov    rbp,rsp
  41ab92:	mov    eax,edi
  41ab94:	mov    BYTE PTR [rbp-0x4],al
  41ab97:	movzx  eax,BYTE PTR [rbp-0x4]
  41ab9b:	pop    rbp
  41ab9c:	ret    
  41ab9d:	push   rbp
  41ab9e:	mov    rbp,rsp
  41aba1:	mov    DWORD PTR [rbp-0x4],edi
  41aba4:	mov    eax,DWORD PTR [rbp-0x4]
  41aba7:	pop    rbp
  41aba8:	ret    
  41aba9:	push   rbp
  41abaa:	mov    rbp,rsp
  41abad:	mov    QWORD PTR [rbp-0x8],rdi
  41abb1:	mov    QWORD PTR [rbp-0x10],rsi
  41abb5:	mov    rax,QWORD PTR [rbp-0x8]
  41abb9:	mov    rdx,QWORD PTR [rax]
  41abbc:	mov    rax,QWORD PTR [rbp-0x8]
  41abc0:	mov    rax,QWORD PTR [rax+0x8]
  41abc4:	cmp    rdx,rax
  41abc7:	jne    41abe9 <main@@Base+0x114a>
  41abc9:	cmp    QWORD PTR [rbp-0x10],0x0
  41abce:	je     41abdf <main@@Base+0x1140>
  41abd0:	mov    rax,QWORD PTR [rbp-0x8]
  41abd4:	mov    rdx,QWORD PTR [rax+0x30]
  41abd8:	mov    rax,QWORD PTR [rbp-0x10]
  41abdc:	mov    QWORD PTR [rax],rdx
  41abdf:	mov    rax,QWORD PTR [rbp-0x8]
  41abe3:	mov    rax,QWORD PTR [rax+0x10]
  41abe7:	jmp    41ac00 <main@@Base+0x1161>
  41abe9:	cmp    QWORD PTR [rbp-0x10],0x0
  41abee:	je     41abfb <main@@Base+0x115c>
  41abf0:	mov    rax,QWORD PTR [rbp-0x10]
  41abf4:	mov    QWORD PTR [rax],0x0
  41abfb:	mov    eax,0x0
  41ac00:	pop    rbp
  41ac01:	ret    
  41ac02:	push   rbp
  41ac03:	mov    rbp,rsp
  41ac06:	sub    rsp,0x20
  41ac0a:	mov    QWORD PTR [rbp-0x18],rdi
  41ac0e:	mov    QWORD PTR [rbp-0x20],rsi
  41ac12:	mov    rdx,QWORD PTR [rbp-0x20]
  41ac16:	mov    rax,QWORD PTR [rbp-0x18]
  41ac1a:	mov    esi,0x0
  41ac1f:	mov    rdi,rax
  41ac22:	call   4050b0 <memchr@plt>
  41ac27:	mov    QWORD PTR [rbp-0x8],rax
  41ac2b:	cmp    QWORD PTR [rbp-0x8],0x0
  41ac30:	je     41ac42 <main@@Base+0x11a3>
  41ac32:	mov    rdx,QWORD PTR [rbp-0x8]
  41ac36:	mov    rax,QWORD PTR [rbp-0x18]
  41ac3a:	sub    rdx,rax
  41ac3d:	mov    rax,rdx
  41ac40:	jmp    41ac46 <main@@Base+0x11a7>
  41ac42:	mov    rax,QWORD PTR [rbp-0x20]
  41ac46:	leave  
  41ac47:	ret    

000000000041ac48 <flatcc_builder_default_alloc@@Base>:
  41ac48:	push   rbp
  41ac49:	mov    rbp,rsp
  41ac4c:	sub    rsp,0x30
  41ac50:	mov    QWORD PTR [rbp-0x18],rdi
  41ac54:	mov    QWORD PTR [rbp-0x20],rsi
  41ac58:	mov    QWORD PTR [rbp-0x28],rdx
  41ac5c:	mov    DWORD PTR [rbp-0x2c],ecx
  41ac5f:	mov    DWORD PTR [rbp-0x30],r8d
  41ac63:	cmp    QWORD PTR [rbp-0x28],0x0
  41ac68:	jne    41aca6 <flatcc_builder_default_alloc@@Base+0x5e>
  41ac6a:	mov    rax,QWORD PTR [rbp-0x20]
  41ac6e:	mov    rax,QWORD PTR [rax]
  41ac71:	test   rax,rax
  41ac74:	je     41ac9c <flatcc_builder_default_alloc@@Base+0x54>
  41ac76:	mov    rax,QWORD PTR [rbp-0x20]
  41ac7a:	mov    rax,QWORD PTR [rax]
  41ac7d:	mov    rdi,rax
  41ac80:	call   405030 <free@plt>
  41ac85:	mov    rax,QWORD PTR [rbp-0x20]
  41ac89:	mov    QWORD PTR [rax],0x0
  41ac90:	mov    rax,QWORD PTR [rbp-0x20]
  41ac94:	mov    QWORD PTR [rax+0x8],0x0
  41ac9c:	mov    eax,0x0
  41aca1:	jmp    41adb3 <flatcc_builder_default_alloc@@Base+0x16b>
  41aca6:	mov    eax,DWORD PTR [rbp-0x30]
  41aca9:	cmp    eax,0x4
  41acac:	je     41acda <flatcc_builder_default_alloc@@Base+0x92>
  41acae:	cmp    eax,0x4
  41acb1:	jg     41acba <flatcc_builder_default_alloc@@Base+0x72>
  41acb3:	cmp    eax,0x1
  41acb6:	je     41acc6 <flatcc_builder_default_alloc@@Base+0x7e>
  41acb8:	jmp    41acee <flatcc_builder_default_alloc@@Base+0xa6>
  41acba:	cmp    eax,0x5
  41acbd:	je     41acd0 <flatcc_builder_default_alloc@@Base+0x88>
  41acbf:	cmp    eax,0x7
  41acc2:	je     41ace4 <flatcc_builder_default_alloc@@Base+0x9c>
  41acc4:	jmp    41acee <flatcc_builder_default_alloc@@Base+0xa6>
  41acc6:	mov    QWORD PTR [rbp-0x10],0x100
  41acce:	jmp    41acf7 <flatcc_builder_default_alloc@@Base+0xaf>
  41acd0:	mov    rax,QWORD PTR [rbp-0x28]
  41acd4:	mov    QWORD PTR [rbp-0x10],rax
  41acd8:	jmp    41acf7 <flatcc_builder_default_alloc@@Base+0xaf>
  41acda:	mov    QWORD PTR [rbp-0x10],0x120
  41ace2:	jmp    41acf7 <flatcc_builder_default_alloc@@Base+0xaf>
  41ace4:	mov    QWORD PTR [rbp-0x10],0x40
  41acec:	jmp    41acf7 <flatcc_builder_default_alloc@@Base+0xaf>
  41acee:	mov    QWORD PTR [rbp-0x10],0x20
  41acf6:	nop
  41acf7:	jmp    41acfd <flatcc_builder_default_alloc@@Base+0xb5>
  41acf9:	shl    QWORD PTR [rbp-0x10],1
  41acfd:	mov    rax,QWORD PTR [rbp-0x10]
  41ad01:	cmp    rax,QWORD PTR [rbp-0x28]
  41ad05:	jb     41acf9 <flatcc_builder_default_alloc@@Base+0xb1>
  41ad07:	mov    rax,QWORD PTR [rbp-0x20]
  41ad0b:	mov    rax,QWORD PTR [rax+0x8]
  41ad0f:	cmp    rax,QWORD PTR [rbp-0x28]
  41ad13:	jb     41ad30 <flatcc_builder_default_alloc@@Base+0xe8>
  41ad15:	mov    rax,QWORD PTR [rbp-0x20]
  41ad19:	mov    rax,QWORD PTR [rax+0x8]
  41ad1d:	shr    rax,1
  41ad20:	cmp    rax,QWORD PTR [rbp-0x10]
  41ad24:	jb     41ad30 <flatcc_builder_default_alloc@@Base+0xe8>
  41ad26:	mov    eax,0x0
  41ad2b:	jmp    41adb3 <flatcc_builder_default_alloc@@Base+0x16b>
  41ad30:	mov    rax,QWORD PTR [rbp-0x20]
  41ad34:	mov    rax,QWORD PTR [rax]
  41ad37:	mov    rdx,QWORD PTR [rbp-0x10]
  41ad3b:	mov    rsi,rdx
  41ad3e:	mov    rdi,rax
  41ad41:	call   405110 <realloc@plt>
  41ad46:	mov    QWORD PTR [rbp-0x8],rax
  41ad4a:	cmp    QWORD PTR [rbp-0x8],0x0
  41ad4f:	jne    41ad58 <flatcc_builder_default_alloc@@Base+0x110>
  41ad51:	mov    eax,0xffffffff
  41ad56:	jmp    41adb3 <flatcc_builder_default_alloc@@Base+0x16b>
  41ad58:	cmp    DWORD PTR [rbp-0x2c],0x0
  41ad5c:	je     41ad97 <flatcc_builder_default_alloc@@Base+0x14f>
  41ad5e:	mov    rax,QWORD PTR [rbp-0x20]
  41ad62:	mov    rax,QWORD PTR [rax+0x8]
  41ad66:	cmp    rax,QWORD PTR [rbp-0x10]
  41ad6a:	jae    41ad97 <flatcc_builder_default_alloc@@Base+0x14f>
  41ad6c:	mov    rax,QWORD PTR [rbp-0x20]
  41ad70:	mov    rax,QWORD PTR [rax+0x8]
  41ad74:	mov    rdx,QWORD PTR [rbp-0x10]
  41ad78:	sub    rdx,rax
  41ad7b:	mov    rax,QWORD PTR [rbp-0x20]
  41ad7f:	mov    rcx,QWORD PTR [rax+0x8]
  41ad83:	mov    rax,QWORD PTR [rbp-0x8]
  41ad87:	add    rax,rcx
  41ad8a:	mov    esi,0x0
  41ad8f:	mov    rdi,rax
  41ad92:	call   405090 <memset@plt>
  41ad97:	mov    rax,QWORD PTR [rbp-0x20]
  41ad9b:	mov    rdx,QWORD PTR [rbp-0x8]
  41ad9f:	mov    QWORD PTR [rax],rdx
  41ada2:	mov    rax,QWORD PTR [rbp-0x20]
  41ada6:	mov    rdx,QWORD PTR [rbp-0x10]
  41adaa:	mov    QWORD PTR [rax+0x8],rdx
  41adae:	mov    eax,0x0
  41adb3:	leave  
  41adb4:	ret    
  41adb5:	push   rbp
  41adb6:	mov    rbp,rsp
  41adb9:	mov    QWORD PTR [rbp-0x18],rdi
  41adbd:	mov    DWORD PTR [rbp-0x1c],esi
  41adc0:	mov    rax,QWORD PTR [rbp-0x18]
  41adc4:	add    rax,0x58
  41adc8:	add    rax,0x10
  41adcc:	mov    QWORD PTR [rbp-0x8],rax
  41add0:	mov    rax,QWORD PTR [rbp-0x18]
  41add4:	mov    rdx,QWORD PTR [rax+0x68]
  41add8:	mov    rax,QWORD PTR [rbp-0x18]
  41addc:	mov    eax,DWORD PTR [rax+0x28]
  41addf:	mov    eax,eax
  41ade1:	add    rdx,rax
  41ade4:	mov    rax,QWORD PTR [rbp-0x18]
  41ade8:	mov    QWORD PTR [rax+0x18],rdx
  41adec:	mov    rax,QWORD PTR [rbp-0x8]
  41adf0:	mov    rax,QWORD PTR [rax+0x8]
  41adf4:	mov    edx,eax
  41adf6:	mov    rax,QWORD PTR [rbp-0x18]
  41adfa:	mov    eax,DWORD PTR [rax+0x28]
  41adfd:	sub    edx,eax
  41adff:	mov    rax,QWORD PTR [rbp-0x18]
  41ae03:	mov    DWORD PTR [rax+0x24],edx
  41ae06:	mov    rax,QWORD PTR [rbp-0x18]
  41ae0a:	mov    eax,DWORD PTR [rax+0x24]
  41ae0d:	cmp    eax,DWORD PTR [rbp-0x1c]
  41ae10:	jbe    41ae1c <flatcc_builder_default_alloc@@Base+0x1d4>
  41ae12:	mov    rax,QWORD PTR [rbp-0x18]
  41ae16:	mov    edx,DWORD PTR [rbp-0x1c]
  41ae19:	mov    DWORD PTR [rax+0x24],edx
  41ae1c:	mov    rax,QWORD PTR [rbp-0x18]
  41ae20:	mov    rax,QWORD PTR [rax+0x30]
  41ae24:	mov    edx,DWORD PTR [rbp-0x1c]
  41ae27:	mov    DWORD PTR [rax+0x4],edx
  41ae2a:	nop
  41ae2b:	pop    rbp
  41ae2c:	ret    
  41ae2d:	push   rbp
  41ae2e:	mov    rbp,rsp
  41ae31:	sub    rsp,0x30
  41ae35:	mov    QWORD PTR [rbp-0x18],rdi
  41ae39:	mov    QWORD PTR [rbp-0x20],rsi
  41ae3d:	mov    DWORD PTR [rbp-0x24],edx
  41ae40:	mov    rax,QWORD PTR [rbp-0x18]
  41ae44:	add    rax,0x58
  41ae48:	add    rax,0x10
  41ae4c:	mov    QWORD PTR [rbp-0x8],rax
  41ae50:	mov    rax,QWORD PTR [rbp-0x18]
  41ae54:	mov    rax,QWORD PTR [rax+0x50]
  41ae58:	mov    rdx,QWORD PTR [rbp-0x18]
  41ae5c:	mov    edx,DWORD PTR [rdx+0x28]
  41ae5f:	mov    ecx,edx
  41ae61:	mov    rdx,QWORD PTR [rbp-0x20]
  41ae65:	lea    r9,[rcx+rdx*1]
  41ae69:	mov    rdx,QWORD PTR [rbp-0x18]
  41ae6d:	mov    rdi,QWORD PTR [rdx+0x40]
  41ae71:	mov    rsi,QWORD PTR [rbp-0x8]
  41ae75:	mov    r8d,0x1
  41ae7b:	mov    ecx,0x1
  41ae80:	mov    rdx,r9
  41ae83:	call   rax
  41ae85:	test   eax,eax
  41ae87:	je     41ae90 <flatcc_builder_default_alloc@@Base+0x248>
  41ae89:	mov    eax,0xffffffff
  41ae8e:	jmp    41aea6 <flatcc_builder_default_alloc@@Base+0x25e>
  41ae90:	mov    edx,DWORD PTR [rbp-0x24]
  41ae93:	mov    rax,QWORD PTR [rbp-0x18]
  41ae97:	mov    esi,edx
  41ae99:	mov    rdi,rax
  41ae9c:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41aea1:	mov    eax,0x0
  41aea6:	leave  
  41aea7:	ret    
  41aea8:	push   rbp
  41aea9:	mov    rbp,rsp
  41aeac:	sub    rsp,0x20
  41aeb0:	mov    QWORD PTR [rbp-0x18],rdi
  41aeb4:	mov    DWORD PTR [rbp-0x1c],esi
  41aeb7:	mov    rax,QWORD PTR [rbp-0x18]
  41aebb:	mov    eax,DWORD PTR [rax+0x20]
  41aebe:	mov    eax,eax
  41aec0:	mov    QWORD PTR [rbp-0x8],rax
  41aec4:	mov    rax,QWORD PTR [rbp-0x18]
  41aec8:	mov    edx,DWORD PTR [rax+0x20]
  41aecb:	mov    eax,DWORD PTR [rbp-0x1c]
  41aece:	add    edx,eax
  41aed0:	mov    rax,QWORD PTR [rbp-0x18]
  41aed4:	mov    DWORD PTR [rax+0x20],edx
  41aed7:	mov    rax,QWORD PTR [rbp-0x18]
  41aedb:	mov    edx,DWORD PTR [rax+0x20]
  41aede:	mov    rax,QWORD PTR [rbp-0x18]
  41aee2:	mov    eax,DWORD PTR [rax+0x24]
  41aee5:	cmp    edx,eax
  41aee7:	jb     41af14 <flatcc_builder_default_alloc@@Base+0x2cc>
  41aee9:	mov    rax,QWORD PTR [rbp-0x18]
  41aeed:	mov    eax,DWORD PTR [rax+0x20]
  41aef0:	add    eax,0x1
  41aef3:	mov    ecx,eax
  41aef5:	mov    rax,QWORD PTR [rbp-0x18]
  41aef9:	mov    edx,0xfffffffc
  41aefe:	mov    rsi,rcx
  41af01:	mov    rdi,rax
  41af04:	call   41ae2d <flatcc_builder_default_alloc@@Base+0x1e5>
  41af09:	test   eax,eax
  41af0b:	je     41af14 <flatcc_builder_default_alloc@@Base+0x2cc>
  41af0d:	mov    eax,0x0
  41af12:	jmp    41af23 <flatcc_builder_default_alloc@@Base+0x2db>
  41af14:	mov    rax,QWORD PTR [rbp-0x18]
  41af18:	mov    rdx,QWORD PTR [rax+0x18]
  41af1c:	mov    rax,QWORD PTR [rbp-0x8]
  41af20:	add    rax,rdx
  41af23:	leave  
  41af24:	ret    
  41af25:	push   rbp
  41af26:	mov    rbp,rsp
  41af29:	sub    rsp,0x10
  41af2d:	mov    QWORD PTR [rbp-0x8],rdi
  41af31:	mov    DWORD PTR [rbp-0xc],esi
  41af34:	mov    rax,QWORD PTR [rbp-0x8]
  41af38:	mov    eax,DWORD PTR [rax+0x20]
  41af3b:	sub    eax,DWORD PTR [rbp-0xc]
  41af3e:	mov    edx,eax
  41af40:	mov    rax,QWORD PTR [rbp-0x8]
  41af44:	mov    DWORD PTR [rax+0x20],edx
  41af47:	mov    eax,DWORD PTR [rbp-0xc]
  41af4a:	mov    rdx,QWORD PTR [rbp-0x8]
  41af4e:	mov    rcx,QWORD PTR [rdx+0x18]
  41af52:	mov    rdx,QWORD PTR [rbp-0x8]
  41af56:	mov    edx,DWORD PTR [rdx+0x20]
  41af59:	mov    edx,edx
  41af5b:	add    rcx,rdx
  41af5e:	mov    rdx,rax
  41af61:	mov    esi,0x0
  41af66:	mov    rdi,rcx
  41af69:	call   405090 <memset@plt>
  41af6e:	nop
  41af6f:	leave  
  41af70:	ret    
  41af71:	push   rbp
  41af72:	mov    rbp,rsp
  41af75:	sub    rsp,0x30
  41af79:	mov    QWORD PTR [rbp-0x18],rdi
  41af7d:	mov    QWORD PTR [rbp-0x20],rsi
  41af81:	mov    DWORD PTR [rbp-0x24],edx
  41af84:	mov    edx,DWORD PTR [rbp-0x24]
  41af87:	mov    rax,QWORD PTR [rbp-0x18]
  41af8b:	mov    esi,edx
  41af8d:	mov    rdi,rax
  41af90:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41af95:	mov    QWORD PTR [rbp-0x8],rax
  41af99:	cmp    QWORD PTR [rbp-0x8],0x0
  41af9e:	jne    41afa7 <flatcc_builder_default_alloc@@Base+0x35f>
  41afa0:	mov    eax,0x0
  41afa5:	jmp    41afc1 <flatcc_builder_default_alloc@@Base+0x379>
  41afa7:	mov    edx,DWORD PTR [rbp-0x24]
  41afaa:	mov    rcx,QWORD PTR [rbp-0x20]
  41afae:	mov    rax,QWORD PTR [rbp-0x8]
  41afb2:	mov    rsi,rcx
  41afb5:	mov    rdi,rax
  41afb8:	call   4050f0 <memcpy@plt>
  41afbd:	mov    rax,QWORD PTR [rbp-0x8]
  41afc1:	leave  
  41afc2:	ret    
  41afc3:	push   rbp
  41afc4:	mov    rbp,rsp
  41afc7:	sub    rsp,0x30
  41afcb:	mov    QWORD PTR [rbp-0x18],rdi
  41afcf:	mov    DWORD PTR [rbp-0x1c],esi
  41afd2:	mov    eax,ecx
  41afd4:	mov    WORD PTR [rbp-0x20],dx
  41afd8:	mov    WORD PTR [rbp-0x24],ax
  41afdc:	mov    rax,QWORD PTR [rbp-0x18]
  41afe0:	mov    edx,DWORD PTR [rax+0x20]
  41afe3:	movzx  eax,WORD PTR [rbp-0x20]
  41afe7:	add    eax,edx
  41afe9:	lea    edx,[rax-0x1]
  41afec:	movzx  eax,WORD PTR [rbp-0x20]
  41aff0:	neg    eax
  41aff2:	and    eax,edx
  41aff4:	mov    DWORD PTR [rbp-0x4],eax
  41aff7:	mov    edx,DWORD PTR [rbp-0x4]
  41affa:	mov    eax,DWORD PTR [rbp-0x1c]
  41affd:	add    edx,eax
  41afff:	mov    rax,QWORD PTR [rbp-0x18]
  41b003:	mov    DWORD PTR [rax+0x20],edx
  41b006:	mov    rax,QWORD PTR [rbp-0x18]
  41b00a:	mov    edx,DWORD PTR [rax+0x20]
  41b00d:	mov    rax,QWORD PTR [rbp-0x18]
  41b011:	mov    eax,DWORD PTR [rax+0x24]
  41b014:	cmp    edx,eax
  41b016:	jb     41b043 <flatcc_builder_default_alloc@@Base+0x3fb>
  41b018:	mov    rax,QWORD PTR [rbp-0x18]
  41b01c:	mov    eax,DWORD PTR [rax+0x20]
  41b01f:	add    eax,0x1
  41b022:	mov    ecx,eax
  41b024:	mov    rax,QWORD PTR [rbp-0x18]
  41b028:	mov    edx,0xfffc
  41b02d:	mov    rsi,rcx
  41b030:	mov    rdi,rax
  41b033:	call   41ae2d <flatcc_builder_default_alloc@@Base+0x1e5>
  41b038:	test   eax,eax
  41b03a:	je     41b043 <flatcc_builder_default_alloc@@Base+0x3fb>
  41b03c:	mov    eax,0x0
  41b041:	jmp    41b089 <flatcc_builder_default_alloc@@Base+0x441>
  41b043:	mov    rax,QWORD PTR [rbp-0x18]
  41b047:	mov    rax,QWORD PTR [rax+0x8]
  41b04b:	movzx  edx,WORD PTR [rbp-0x24]
  41b04f:	add    rdx,rdx
  41b052:	add    rax,rdx
  41b055:	mov    edx,DWORD PTR [rbp-0x4]
  41b058:	add    edx,0x4
  41b05b:	mov    WORD PTR [rax],dx
  41b05e:	mov    rax,QWORD PTR [rbp-0x18]
  41b062:	movzx  eax,WORD PTR [rax+0x10]
  41b066:	cmp    ax,WORD PTR [rbp-0x24]
  41b06a:	ja     41b07b <flatcc_builder_default_alloc@@Base+0x433>
  41b06c:	movzx  eax,WORD PTR [rbp-0x24]
  41b070:	lea    edx,[rax+0x1]
  41b073:	mov    rax,QWORD PTR [rbp-0x18]
  41b077:	mov    WORD PTR [rax+0x10],dx
  41b07b:	mov    rax,QWORD PTR [rbp-0x18]
  41b07f:	mov    rdx,QWORD PTR [rax+0x18]
  41b083:	mov    eax,DWORD PTR [rbp-0x4]
  41b086:	add    rax,rdx
  41b089:	leave  
  41b08a:	ret    
  41b08b:	push   rbp
  41b08c:	mov    rbp,rsp
  41b08f:	sub    rsp,0x20
  41b093:	mov    QWORD PTR [rbp-0x18],rdi
  41b097:	mov    eax,esi
  41b099:	mov    WORD PTR [rbp-0x1c],ax
  41b09d:	mov    rax,QWORD PTR [rbp-0x18]
  41b0a1:	mov    eax,DWORD PTR [rax+0x20]
  41b0a4:	add    eax,0x3
  41b0a7:	and    eax,0xfffffffc
  41b0aa:	mov    DWORD PTR [rbp-0x4],eax
  41b0ad:	mov    eax,DWORD PTR [rbp-0x4]
  41b0b0:	lea    edx,[rax+0x4]
  41b0b3:	mov    rax,QWORD PTR [rbp-0x18]
  41b0b7:	mov    DWORD PTR [rax+0x20],edx
  41b0ba:	mov    rax,QWORD PTR [rbp-0x18]
  41b0be:	mov    edx,DWORD PTR [rax+0x20]
  41b0c1:	mov    rax,QWORD PTR [rbp-0x18]
  41b0c5:	mov    eax,DWORD PTR [rax+0x24]
  41b0c8:	cmp    edx,eax
  41b0ca:	jbe    41b0f4 <flatcc_builder_default_alloc@@Base+0x4ac>
  41b0cc:	mov    rax,QWORD PTR [rbp-0x18]
  41b0d0:	mov    eax,DWORD PTR [rax+0x20]
  41b0d3:	mov    ecx,eax
  41b0d5:	mov    rax,QWORD PTR [rbp-0x18]
  41b0d9:	mov    edx,0xfffc
  41b0de:	mov    rsi,rcx
  41b0e1:	mov    rdi,rax
  41b0e4:	call   41ae2d <flatcc_builder_default_alloc@@Base+0x1e5>
  41b0e9:	test   eax,eax
  41b0eb:	je     41b0f4 <flatcc_builder_default_alloc@@Base+0x4ac>
  41b0ed:	mov    eax,0x0
  41b0f2:	jmp    41b152 <flatcc_builder_default_alloc@@Base+0x50a>
  41b0f4:	mov    rax,QWORD PTR [rbp-0x18]
  41b0f8:	mov    rax,QWORD PTR [rax+0x8]
  41b0fc:	movzx  edx,WORD PTR [rbp-0x1c]
  41b100:	add    rdx,rdx
  41b103:	add    rax,rdx
  41b106:	mov    edx,DWORD PTR [rbp-0x4]
  41b109:	add    edx,0x4
  41b10c:	mov    WORD PTR [rax],dx
  41b10f:	mov    rax,QWORD PTR [rbp-0x18]
  41b113:	movzx  eax,WORD PTR [rax+0x10]
  41b117:	cmp    ax,WORD PTR [rbp-0x1c]
  41b11b:	ja     41b12c <flatcc_builder_default_alloc@@Base+0x4e4>
  41b11d:	movzx  eax,WORD PTR [rbp-0x1c]
  41b121:	lea    edx,[rax+0x1]
  41b124:	mov    rax,QWORD PTR [rbp-0x18]
  41b128:	mov    WORD PTR [rax+0x10],dx
  41b12c:	mov    rax,QWORD PTR [rbp-0x18]
  41b130:	mov    rax,QWORD PTR [rax]
  41b133:	lea    rcx,[rax+0x2]
  41b137:	mov    rdx,QWORD PTR [rbp-0x18]
  41b13b:	mov    QWORD PTR [rdx],rcx
  41b13e:	mov    edx,DWORD PTR [rbp-0x4]
  41b141:	mov    WORD PTR [rax],dx
  41b144:	mov    rax,QWORD PTR [rbp-0x18]
  41b148:	mov    rdx,QWORD PTR [rax+0x18]
  41b14c:	mov    eax,DWORD PTR [rbp-0x4]
  41b14f:	add    rax,rdx
  41b152:	leave  
  41b153:	ret    
  41b154:	push   rbp
  41b155:	mov    rbp,rsp
  41b158:	sub    rsp,0x30
  41b15c:	mov    QWORD PTR [rbp-0x18],rdi
  41b160:	mov    DWORD PTR [rbp-0x1c],esi
  41b163:	mov    QWORD PTR [rbp-0x28],rdx
  41b167:	mov    QWORD PTR [rbp-0x30],rcx
  41b16b:	mov    DWORD PTR [rbp-0x20],r8d
  41b16f:	mov    rax,QWORD PTR [rbp-0x18]
  41b173:	lea    rdx,[rax+0x58]
  41b177:	mov    eax,DWORD PTR [rbp-0x1c]
  41b17a:	cdqe   
  41b17c:	shl    rax,0x4
  41b180:	add    rax,rdx
  41b183:	mov    QWORD PTR [rbp-0x8],rax
  41b187:	mov    rdx,QWORD PTR [rbp-0x28]
  41b18b:	mov    rax,QWORD PTR [rbp-0x30]
  41b18f:	add    rdx,rax
  41b192:	mov    rax,QWORD PTR [rbp-0x8]
  41b196:	mov    rax,QWORD PTR [rax+0x8]
  41b19a:	cmp    rdx,rax
  41b19d:	jbe    41b1f2 <flatcc_builder_default_alloc@@Base+0x5aa>
  41b19f:	mov    rax,QWORD PTR [rbp-0x18]
  41b1a3:	mov    rax,QWORD PTR [rax+0x50]
  41b1a7:	mov    rcx,QWORD PTR [rbp-0x28]
  41b1ab:	mov    rdx,QWORD PTR [rbp-0x30]
  41b1af:	lea    r9,[rcx+rdx*1]
  41b1b3:	mov    rdx,QWORD PTR [rbp-0x18]
  41b1b7:	mov    rdi,QWORD PTR [rdx+0x40]
  41b1bb:	mov    ecx,DWORD PTR [rbp-0x1c]
  41b1be:	mov    edx,DWORD PTR [rbp-0x20]
  41b1c1:	mov    rsi,QWORD PTR [rbp-0x8]
  41b1c5:	mov    r8d,ecx
  41b1c8:	mov    ecx,edx
  41b1ca:	mov    rdx,r9
  41b1cd:	call   rax
  41b1cf:	test   eax,eax
  41b1d1:	je     41b1f2 <flatcc_builder_default_alloc@@Base+0x5aa>
  41b1d3:	lea    rcx,[rip+0x1f3fe]        # 43a5d8 <flatcc_builder_padding_base@@Base+0x658>
  41b1da:	mov    edx,0x134
  41b1df:	lea    rsi,[rip+0x1ef9a]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41b1e6:	lea    rdi,[rip+0x1eff3]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41b1ed:	call   405080 <__assert_fail@plt>
  41b1f2:	mov    rax,QWORD PTR [rbp-0x8]
  41b1f6:	mov    rax,QWORD PTR [rax]
  41b1f9:	mov    rdx,rax
  41b1fc:	mov    rax,QWORD PTR [rbp-0x28]
  41b200:	add    rax,rdx
  41b203:	leave  
  41b204:	ret    
  41b205:	push   rbp
  41b206:	mov    rbp,rsp
  41b209:	sub    rsp,0x20
  41b20d:	mov    QWORD PTR [rbp-0x18],rdi
  41b211:	mov    DWORD PTR [rbp-0x1c],esi
  41b214:	mov    rax,QWORD PTR [rbp-0x18]
  41b218:	mov    rax,QWORD PTR [rax+0x30]
  41b21c:	mov    edx,DWORD PTR [rax+0x10]
  41b21f:	mov    rax,QWORD PTR [rbp-0x18]
  41b223:	mov    rax,QWORD PTR [rax+0x30]
  41b227:	movzx  eax,WORD PTR [rax+0x1c]
  41b22b:	movzx  eax,ax
  41b22e:	add    eax,eax
  41b230:	add    eax,edx
  41b232:	mov    DWORD PTR [rbp-0x8],eax
  41b235:	mov    eax,DWORD PTR [rbp-0x1c]
  41b238:	add    eax,0x2
  41b23b:	cdqe   
  41b23d:	add    eax,eax
  41b23f:	mov    DWORD PTR [rbp-0x4],eax
  41b242:	mov    ecx,DWORD PTR [rbp-0x4]
  41b245:	mov    edx,DWORD PTR [rbp-0x8]
  41b248:	mov    rax,QWORD PTR [rbp-0x18]
  41b24c:	mov    r8d,0x1
  41b252:	mov    esi,0x0
  41b257:	mov    rdi,rax
  41b25a:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41b25f:	mov    rdx,rax
  41b262:	mov    rax,QWORD PTR [rbp-0x18]
  41b266:	mov    QWORD PTR [rax+0x8],rdx
  41b26a:	mov    rax,QWORD PTR [rbp-0x18]
  41b26e:	mov    rax,QWORD PTR [rax+0x8]
  41b272:	test   rax,rax
  41b275:	jne    41b27e <flatcc_builder_default_alloc@@Base+0x636>
  41b277:	mov    eax,0xffffffff
  41b27c:	jmp    41b2ec <flatcc_builder_default_alloc@@Base+0x6a4>
  41b27e:	mov    rax,QWORD PTR [rbp-0x18]
  41b282:	mov    rax,QWORD PTR [rax+0x8]
  41b286:	lea    rdx,[rax+0x4]
  41b28a:	mov    rax,QWORD PTR [rbp-0x18]
  41b28e:	mov    QWORD PTR [rax+0x8],rdx
  41b292:	mov    rax,QWORD PTR [rbp-0x18]
  41b296:	mov    rax,QWORD PTR [rax+0x30]
  41b29a:	mov    eax,DWORD PTR [rax+0x14]
  41b29d:	mov    DWORD PTR [rbp-0x8],eax
  41b2a0:	mov    eax,DWORD PTR [rbp-0x1c]
  41b2a3:	cdqe   
  41b2a5:	add    eax,eax
  41b2a7:	add    eax,0x1
  41b2aa:	mov    DWORD PTR [rbp-0x4],eax
  41b2ad:	mov    ecx,DWORD PTR [rbp-0x4]
  41b2b0:	mov    edx,DWORD PTR [rbp-0x8]
  41b2b3:	mov    rax,QWORD PTR [rbp-0x18]
  41b2b7:	mov    r8d,0x0
  41b2bd:	mov    esi,0x3
  41b2c2:	mov    rdi,rax
  41b2c5:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41b2ca:	mov    rdx,rax
  41b2cd:	mov    rax,QWORD PTR [rbp-0x18]
  41b2d1:	mov    QWORD PTR [rax],rdx
  41b2d4:	mov    rax,QWORD PTR [rbp-0x18]
  41b2d8:	mov    rax,QWORD PTR [rax]
  41b2db:	test   rax,rax
  41b2de:	jne    41b2e7 <flatcc_builder_default_alloc@@Base+0x69f>
  41b2e0:	mov    eax,0xffffffff
  41b2e5:	jmp    41b2ec <flatcc_builder_default_alloc@@Base+0x6a4>
  41b2e7:	mov    eax,0x0
  41b2ec:	leave  
  41b2ed:	ret    
  41b2ee:	push   rbp
  41b2ef:	mov    rbp,rsp
  41b2f2:	sub    rsp,0x30
  41b2f6:	mov    QWORD PTR [rbp-0x28],rdi
  41b2fa:	mov    rax,QWORD PTR [rbp-0x28]
  41b2fe:	add    rax,0x58
  41b302:	add    rax,0x50
  41b306:	mov    QWORD PTR [rbp-0x8],rax
  41b30a:	mov    rax,QWORD PTR [rbp-0x28]
  41b30e:	mov    eax,DWORD PTR [rax+0xe4]
  41b314:	test   eax,eax
  41b316:	je     41b337 <flatcc_builder_default_alloc@@Base+0x6ef>
  41b318:	lea    rcx,[rip+0x1f2a9]        # 43a5c8 <flatcc_builder_padding_base@@Base+0x648>
  41b31f:	mov    edx,0x156
  41b324:	lea    rsi,[rip+0x1ee55]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41b32b:	lea    rdi,[rip+0x1eeb0]        # 43a1e2 <flatcc_builder_padding_base@@Base+0x262>
  41b332:	call   405080 <__assert_fail@plt>
  41b337:	mov    rax,QWORD PTR [rbp-0x28]
  41b33b:	mov    eax,DWORD PTR [rax+0xe4]
  41b341:	mov    edx,eax
  41b343:	mov    rax,QWORD PTR [rbp-0x28]
  41b347:	mov    r8d,0x0
  41b34d:	mov    ecx,0x10
  41b352:	mov    esi,0x6
  41b357:	mov    rdi,rax
  41b35a:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41b35f:	test   rax,rax
  41b362:	jne    41b36e <flatcc_builder_default_alloc@@Base+0x726>
  41b364:	mov    eax,0xffffffff
  41b369:	jmp    41b410 <flatcc_builder_default_alloc@@Base+0x7c8>
  41b36e:	mov    rax,QWORD PTR [rbp-0x28]
  41b372:	mov    DWORD PTR [rax+0xe4],0x10
  41b37c:	mov    QWORD PTR [rbp-0x18],0x100
  41b384:	mov    rax,QWORD PTR [rbp-0x28]
  41b388:	mov    rax,QWORD PTR [rax+0x50]
  41b38c:	mov    rdx,QWORD PTR [rbp-0x28]
  41b390:	mov    rdi,QWORD PTR [rdx+0x40]
  41b394:	mov    rdx,QWORD PTR [rbp-0x18]
  41b398:	mov    rsi,QWORD PTR [rbp-0x8]
  41b39c:	mov    r8d,0x5
  41b3a2:	mov    ecx,0x1
  41b3a7:	call   rax
  41b3a9:	test   eax,eax
  41b3ab:	je     41b3b8 <flatcc_builder_default_alloc@@Base+0x770>
  41b3ad:	mov    eax,0xffffffff
  41b3b2:	jmp    41b410 <flatcc_builder_default_alloc@@Base+0x7c8>
  41b3b4:	shl    QWORD PTR [rbp-0x18],1
  41b3b8:	mov    rax,QWORD PTR [rbp-0x18]
  41b3bc:	lea    rdx,[rax+rax*1]
  41b3c0:	mov    rax,QWORD PTR [rbp-0x8]
  41b3c4:	mov    rax,QWORD PTR [rax+0x8]
  41b3c8:	cmp    rdx,rax
  41b3cb:	jbe    41b3b4 <flatcc_builder_default_alloc@@Base+0x76c>
  41b3cd:	mov    rax,QWORD PTR [rbp-0x18]
  41b3d1:	shr    rax,0x2
  41b3d5:	mov    QWORD PTR [rbp-0x18],rax
  41b3d9:	mov    QWORD PTR [rbp-0x10],0x0
  41b3e1:	jmp    41b3e8 <flatcc_builder_default_alloc@@Base+0x7a0>
  41b3e3:	add    QWORD PTR [rbp-0x10],0x1
  41b3e8:	mov    rax,QWORD PTR [rbp-0x10]
  41b3ec:	mov    edx,0x1
  41b3f1:	shlx   rax,rdx,rax
  41b3f6:	cmp    rax,QWORD PTR [rbp-0x18]
  41b3fa:	jb     41b3e3 <flatcc_builder_default_alloc@@Base+0x79b>
  41b3fc:	mov    rax,QWORD PTR [rbp-0x28]
  41b400:	mov    rdx,QWORD PTR [rbp-0x10]
  41b404:	mov    QWORD PTR [rax+0xd8],rdx
  41b40b:	mov    eax,0x0
  41b410:	leave  
  41b411:	ret    
  41b412:	push   rbp
  41b413:	mov    rbp,rsp
  41b416:	sub    rsp,0x20
  41b41a:	mov    QWORD PTR [rbp-0x18],rdi
  41b41e:	mov    DWORD PTR [rbp-0x1c],esi
  41b421:	mov    rax,QWORD PTR [rbp-0x18]
  41b425:	mov    rax,QWORD PTR [rax+0xd8]
  41b42c:	test   rax,rax
  41b42f:	jne    41b448 <flatcc_builder_default_alloc@@Base+0x800>
  41b431:	mov    rax,QWORD PTR [rbp-0x18]
  41b435:	mov    rdi,rax
  41b438:	call   41b2ee <flatcc_builder_default_alloc@@Base+0x6a6>
  41b43d:	test   eax,eax
  41b43f:	je     41b448 <flatcc_builder_default_alloc@@Base+0x800>
  41b441:	mov    eax,0x0
  41b446:	jmp    41b484 <flatcc_builder_default_alloc@@Base+0x83c>
  41b448:	mov    rax,QWORD PTR [rbp-0x18]
  41b44c:	mov    rax,QWORD PTR [rax+0xa8]
  41b453:	mov    QWORD PTR [rbp-0x8],rax
  41b457:	mov    rax,QWORD PTR [rbp-0x18]
  41b45b:	mov    rax,QWORD PTR [rax+0xd8]
  41b462:	mov    edx,0x20
  41b467:	sub    edx,eax
  41b469:	mov    eax,edx
  41b46b:	mov    edx,DWORD PTR [rbp-0x1c]
  41b46e:	shrx   eax,edx,eax
  41b473:	mov    eax,eax
  41b475:	lea    rdx,[rax*4+0x0]
  41b47d:	mov    rax,QWORD PTR [rbp-0x8]
  41b481:	add    rax,rdx
  41b484:	leave  
  41b485:	ret    

000000000041b486 <flatcc_builder_flush_vtable_cache@@Base>:
  41b486:	push   rbp
  41b487:	mov    rbp,rsp
  41b48a:	sub    rsp,0x20
  41b48e:	mov    QWORD PTR [rbp-0x18],rdi
  41b492:	mov    rax,QWORD PTR [rbp-0x18]
  41b496:	add    rax,0x58
  41b49a:	add    rax,0x50
  41b49e:	mov    QWORD PTR [rbp-0x8],rax
  41b4a2:	mov    rax,QWORD PTR [rbp-0x18]
  41b4a6:	mov    rax,QWORD PTR [rax+0xd8]
  41b4ad:	test   rax,rax
  41b4b0:	je     41b4ec <flatcc_builder_flush_vtable_cache@@Base+0x66>
  41b4b2:	mov    rax,QWORD PTR [rbp-0x8]
  41b4b6:	mov    rdx,QWORD PTR [rax+0x8]
  41b4ba:	mov    rax,QWORD PTR [rbp-0x8]
  41b4be:	mov    rax,QWORD PTR [rax]
  41b4c1:	mov    esi,0x0
  41b4c6:	mov    rdi,rax
  41b4c9:	call   405090 <memset@plt>
  41b4ce:	mov    rax,QWORD PTR [rbp-0x18]
  41b4d2:	mov    DWORD PTR [rax+0xe4],0x10
  41b4dc:	mov    rax,QWORD PTR [rbp-0x18]
  41b4e0:	mov    DWORD PTR [rax+0xe0],0x0
  41b4ea:	jmp    41b4ed <flatcc_builder_flush_vtable_cache@@Base+0x67>
  41b4ec:	nop
  41b4ed:	leave  
  41b4ee:	ret    

000000000041b4ef <flatcc_builder_custom_init@@Base>:
  41b4ef:	push   rbp
  41b4f0:	mov    rbp,rsp
  41b4f3:	sub    rsp,0x30
  41b4f7:	mov    QWORD PTR [rbp-0x8],rdi
  41b4fb:	mov    QWORD PTR [rbp-0x10],rsi
  41b4ff:	mov    QWORD PTR [rbp-0x18],rdx
  41b503:	mov    QWORD PTR [rbp-0x20],rcx
  41b507:	mov    QWORD PTR [rbp-0x28],r8
  41b50b:	mov    rax,QWORD PTR [rbp-0x8]
  41b50f:	mov    edx,0x188
  41b514:	mov    esi,0x0
  41b519:	mov    rdi,rax
  41b51c:	call   405090 <memset@plt>
  41b521:	cmp    QWORD PTR [rbp-0x10],0x0
  41b526:	jne    41b54f <flatcc_builder_custom_init@@Base+0x60>
  41b528:	mov    rax,QWORD PTR [rbp-0x8]
  41b52c:	mov    DWORD PTR [rax+0x128],0x1
  41b536:	mov    rax,0x420922
  41b53d:	mov    QWORD PTR [rbp-0x10],rax
  41b541:	mov    rax,QWORD PTR [rbp-0x8]
  41b545:	add    rax,0x130
  41b54b:	mov    QWORD PTR [rbp-0x18],rax
  41b54f:	cmp    QWORD PTR [rbp-0x20],0x0
  41b554:	jne    41b561 <flatcc_builder_custom_init@@Base+0x72>
  41b556:	mov    rax,0x41ac48
  41b55d:	mov    QWORD PTR [rbp-0x20],rax
  41b561:	mov    rax,QWORD PTR [rbp-0x8]
  41b565:	mov    rdx,QWORD PTR [rbp-0x28]
  41b569:	mov    QWORD PTR [rax+0x40],rdx
  41b56d:	mov    rax,QWORD PTR [rbp-0x8]
  41b571:	mov    rdx,QWORD PTR [rbp-0x20]
  41b575:	mov    QWORD PTR [rax+0x50],rdx
  41b579:	mov    rax,QWORD PTR [rbp-0x8]
  41b57d:	mov    rdx,QWORD PTR [rbp-0x18]
  41b581:	mov    QWORD PTR [rax+0x38],rdx
  41b585:	mov    rax,QWORD PTR [rbp-0x8]
  41b589:	mov    rdx,QWORD PTR [rbp-0x10]
  41b58d:	mov    QWORD PTR [rax+0x48],rdx
  41b591:	mov    eax,0x0
  41b596:	leave  
  41b597:	ret    

000000000041b598 <flatcc_builder_init@@Base>:
  41b598:	push   rbp
  41b599:	mov    rbp,rsp
  41b59c:	sub    rsp,0x10
  41b5a0:	mov    QWORD PTR [rbp-0x8],rdi
  41b5a4:	mov    rax,QWORD PTR [rbp-0x8]
  41b5a8:	mov    r8d,0x0
  41b5ae:	mov    ecx,0x0
  41b5b3:	mov    edx,0x0
  41b5b8:	mov    esi,0x0
  41b5bd:	mov    rdi,rax
  41b5c0:	call   41b4ef <flatcc_builder_custom_init@@Base>
  41b5c5:	leave  
  41b5c6:	ret    

000000000041b5c7 <flatcc_builder_custom_reset@@Base>:
  41b5c7:	push   rbp
  41b5c8:	mov    rbp,rsp
  41b5cb:	sub    rsp,0x20
  41b5cf:	mov    QWORD PTR [rbp-0x18],rdi
  41b5d3:	mov    DWORD PTR [rbp-0x1c],esi
  41b5d6:	mov    DWORD PTR [rbp-0x20],edx
  41b5d9:	mov    DWORD PTR [rbp-0xc],0x0
  41b5e0:	jmp    41b697 <flatcc_builder_custom_reset@@Base+0xd0>
  41b5e5:	mov    rax,QWORD PTR [rbp-0x18]
  41b5e9:	lea    rdx,[rax+0x58]
  41b5ed:	mov    eax,DWORD PTR [rbp-0xc]
  41b5f0:	cdqe   
  41b5f2:	shl    rax,0x4
  41b5f6:	add    rax,rdx
  41b5f9:	mov    QWORD PTR [rbp-0x8],rax
  41b5fd:	mov    rax,QWORD PTR [rbp-0x8]
  41b601:	mov    rax,QWORD PTR [rax]
  41b604:	test   rax,rax
  41b607:	je     41b667 <flatcc_builder_custom_reset@@Base+0xa0>
  41b609:	cmp    DWORD PTR [rbp-0xc],0x5
  41b60d:	je     41b649 <flatcc_builder_custom_reset@@Base+0x82>
  41b60f:	cmp    DWORD PTR [rbp-0x20],0x0
  41b613:	je     41b649 <flatcc_builder_custom_reset@@Base+0x82>
  41b615:	mov    rax,QWORD PTR [rbp-0x18]
  41b619:	mov    rax,QWORD PTR [rax+0x50]
  41b61d:	mov    rdx,QWORD PTR [rbp-0x18]
  41b621:	mov    rdi,QWORD PTR [rdx+0x40]
  41b625:	mov    edx,DWORD PTR [rbp-0xc]
  41b628:	mov    rsi,QWORD PTR [rbp-0x8]
  41b62c:	mov    r8d,edx
  41b62f:	mov    ecx,0x1
  41b634:	mov    edx,0x1
  41b639:	call   rax
  41b63b:	test   eax,eax
  41b63d:	je     41b649 <flatcc_builder_custom_reset@@Base+0x82>
  41b63f:	mov    eax,0xffffffff
  41b644:	jmp    41b7d6 <flatcc_builder_custom_reset@@Base+0x20f>
  41b649:	mov    rax,QWORD PTR [rbp-0x8]
  41b64d:	mov    rdx,QWORD PTR [rax+0x8]
  41b651:	mov    rax,QWORD PTR [rbp-0x8]
  41b655:	mov    rax,QWORD PTR [rax]
  41b658:	mov    esi,0x0
  41b65d:	mov    rdi,rax
  41b660:	call   405090 <memset@plt>
  41b665:	jmp    41b693 <flatcc_builder_custom_reset@@Base+0xcc>
  41b667:	mov    rax,QWORD PTR [rbp-0x8]
  41b66b:	mov    rax,QWORD PTR [rax+0x8]
  41b66f:	test   rax,rax
  41b672:	je     41b693 <flatcc_builder_custom_reset@@Base+0xcc>
  41b674:	lea    rcx,[rip+0x1ef75]        # 43a5f0 <flatcc_builder_padding_base@@Base+0x670>
  41b67b:	mov    edx,0x1b2
  41b680:	lea    rsi,[rip+0x1eaf9]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41b687:	lea    rdi,[rip+0x1eb63]        # 43a1f1 <flatcc_builder_padding_base@@Base+0x271>
  41b68e:	call   405080 <__assert_fail@plt>
  41b693:	add    DWORD PTR [rbp-0xc],0x1
  41b697:	cmp    DWORD PTR [rbp-0xc],0x7
  41b69b:	jle    41b5e5 <flatcc_builder_custom_reset@@Base+0x1e>
  41b6a1:	mov    rax,QWORD PTR [rbp-0x18]
  41b6a5:	mov    DWORD PTR [rax+0xe0],0x0
  41b6af:	mov    rax,QWORD PTR [rbp-0x18]
  41b6b3:	mov    eax,DWORD PTR [rax+0xe4]
  41b6b9:	test   eax,eax
  41b6bb:	je     41b6cb <flatcc_builder_custom_reset@@Base+0x104>
  41b6bd:	mov    rax,QWORD PTR [rbp-0x18]
  41b6c1:	mov    DWORD PTR [rax+0xe4],0x10
  41b6cb:	mov    rax,QWORD PTR [rbp-0x18]
  41b6cf:	mov    WORD PTR [rax+0xe8],0x0
  41b6d8:	mov    rax,QWORD PTR [rbp-0x18]
  41b6dc:	mov    DWORD PTR [rax+0xf0],0x0
  41b6e6:	mov    rax,QWORD PTR [rbp-0x18]
  41b6ea:	mov    DWORD PTR [rax+0xf4],0x0
  41b6f4:	mov    rax,QWORD PTR [rbp-0x18]
  41b6f8:	mov    DWORD PTR [rax+0x104],0x0
  41b702:	mov    rax,QWORD PTR [rbp-0x18]
  41b706:	mov    DWORD PTR [rax+0x108],0x0
  41b710:	mov    rax,QWORD PTR [rbp-0x18]
  41b714:	mov    DWORD PTR [rax+0x20],0x0
  41b71b:	mov    rax,QWORD PTR [rbp-0x18]
  41b71f:	mov    DWORD PTR [rax+0x24],0x0
  41b726:	mov    rax,QWORD PTR [rbp-0x18]
  41b72a:	mov    DWORD PTR [rax+0xfc],0x0
  41b734:	mov    rax,QWORD PTR [rbp-0x18]
  41b738:	mov    DWORD PTR [rax+0x100],0x0
  41b742:	mov    rax,QWORD PTR [rbp-0x18]
  41b746:	mov    rdx,QWORD PTR [rax+0x68]
  41b74a:	mov    rax,QWORD PTR [rbp-0x18]
  41b74e:	mov    QWORD PTR [rax+0x18],rdx
  41b752:	mov    rax,QWORD PTR [rbp-0x18]
  41b756:	mov    rdx,QWORD PTR [rax+0x88]
  41b75d:	mov    rax,QWORD PTR [rbp-0x18]
  41b761:	mov    QWORD PTR [rax],rdx
  41b764:	mov    rax,QWORD PTR [rbp-0x18]
  41b768:	mov    rdx,QWORD PTR [rax+0x58]
  41b76c:	mov    rax,QWORD PTR [rbp-0x18]
  41b770:	mov    QWORD PTR [rax+0x8],rdx
  41b774:	mov    rax,QWORD PTR [rbp-0x18]
  41b778:	mov    QWORD PTR [rax+0x30],0x0
  41b780:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b784:	je     41b7b1 <flatcc_builder_custom_reset@@Base+0x1ea>
  41b786:	mov    rax,QWORD PTR [rbp-0x18]
  41b78a:	mov    QWORD PTR [rax+0x118],0x0
  41b795:	mov    rax,QWORD PTR [rbp-0x18]
  41b799:	mov    DWORD PTR [rax+0x120],0x0
  41b7a3:	mov    rax,QWORD PTR [rbp-0x18]
  41b7a7:	mov    DWORD PTR [rax+0x124],0x0
  41b7b1:	mov    rax,QWORD PTR [rbp-0x18]
  41b7b5:	mov    eax,DWORD PTR [rax+0x128]
  41b7bb:	test   eax,eax
  41b7bd:	je     41b7d1 <flatcc_builder_custom_reset@@Base+0x20a>
  41b7bf:	mov    rax,QWORD PTR [rbp-0x18]
  41b7c3:	add    rax,0x130
  41b7c9:	mov    rdi,rax
  41b7cc:	call   420707 <flatcc_emitter_reset@@Base>
  41b7d1:	mov    eax,0x0
  41b7d6:	leave  
  41b7d7:	ret    

000000000041b7d8 <flatcc_builder_reset@@Base>:
  41b7d8:	push   rbp
  41b7d9:	mov    rbp,rsp
  41b7dc:	sub    rsp,0x10
  41b7e0:	mov    QWORD PTR [rbp-0x8],rdi
  41b7e4:	mov    rax,QWORD PTR [rbp-0x8]
  41b7e8:	mov    edx,0x0
  41b7ed:	mov    esi,0x0
  41b7f2:	mov    rdi,rax
  41b7f5:	call   41b5c7 <flatcc_builder_custom_reset@@Base>
  41b7fa:	leave  
  41b7fb:	ret    

000000000041b7fc <flatcc_builder_clear@@Base>:
  41b7fc:	push   rbp
  41b7fd:	mov    rbp,rsp
  41b800:	sub    rsp,0x20
  41b804:	mov    QWORD PTR [rbp-0x18],rdi
  41b808:	mov    DWORD PTR [rbp-0xc],0x0
  41b80f:	jmp    41b853 <flatcc_builder_clear@@Base+0x57>
  41b811:	mov    rax,QWORD PTR [rbp-0x18]
  41b815:	lea    rdx,[rax+0x58]
  41b819:	mov    eax,DWORD PTR [rbp-0xc]
  41b81c:	cdqe   
  41b81e:	shl    rax,0x4
  41b822:	add    rax,rdx
  41b825:	mov    QWORD PTR [rbp-0x8],rax
  41b829:	mov    rax,QWORD PTR [rbp-0x18]
  41b82d:	mov    rax,QWORD PTR [rax+0x50]
  41b831:	mov    rdx,QWORD PTR [rbp-0x18]
  41b835:	mov    rdi,QWORD PTR [rdx+0x40]
  41b839:	mov    edx,DWORD PTR [rbp-0xc]
  41b83c:	mov    rsi,QWORD PTR [rbp-0x8]
  41b840:	mov    r8d,edx
  41b843:	mov    ecx,0x0
  41b848:	mov    edx,0x0
  41b84d:	call   rax
  41b84f:	add    DWORD PTR [rbp-0xc],0x1
  41b853:	cmp    DWORD PTR [rbp-0xc],0x7
  41b857:	jle    41b811 <flatcc_builder_clear@@Base+0x15>
  41b859:	mov    rax,QWORD PTR [rbp-0x18]
  41b85d:	mov    eax,DWORD PTR [rax+0x128]
  41b863:	test   eax,eax
  41b865:	je     41b879 <flatcc_builder_clear@@Base+0x7d>
  41b867:	mov    rax,QWORD PTR [rbp-0x18]
  41b86b:	add    rax,0x130
  41b871:	mov    rdi,rax
  41b874:	call   420893 <flatcc_emitter_clear@@Base>
  41b879:	mov    rax,QWORD PTR [rbp-0x18]
  41b87d:	mov    edx,0x188
  41b882:	mov    esi,0x0
  41b887:	mov    rdi,rax
  41b88a:	call   405090 <memset@plt>
  41b88f:	nop
  41b890:	leave  
  41b891:	ret    
  41b892:	push   rbp
  41b893:	mov    rbp,rsp
  41b896:	mov    QWORD PTR [rbp-0x8],rdi
  41b89a:	mov    eax,esi
  41b89c:	mov    WORD PTR [rbp-0xc],ax
  41b8a0:	mov    rax,QWORD PTR [rbp-0x8]
  41b8a4:	movzx  eax,WORD PTR [rax+0xe8]
  41b8ab:	cmp    ax,WORD PTR [rbp-0xc]
  41b8af:	jae    41b8c0 <flatcc_builder_clear@@Base+0xc4>
  41b8b1:	mov    rax,QWORD PTR [rbp-0x8]
  41b8b5:	movzx  edx,WORD PTR [rbp-0xc]
  41b8b9:	mov    WORD PTR [rax+0xe8],dx
  41b8c0:	nop
  41b8c1:	pop    rbp
  41b8c2:	ret    
  41b8c3:	push   rbp
  41b8c4:	mov    rbp,rsp
  41b8c7:	mov    QWORD PTR [rbp-0x8],rdi
  41b8cb:	mov    eax,esi
  41b8cd:	mov    WORD PTR [rbp-0xc],ax
  41b8d1:	mov    rax,QWORD PTR [rbp-0x8]
  41b8d5:	movzx  eax,WORD PTR [rax]
  41b8d8:	cmp    ax,WORD PTR [rbp-0xc]
  41b8dc:	jae    41b8e9 <flatcc_builder_clear@@Base+0xed>
  41b8de:	mov    rax,QWORD PTR [rbp-0x8]
  41b8e2:	movzx  edx,WORD PTR [rbp-0xc]
  41b8e6:	mov    WORD PTR [rax],dx
  41b8e9:	nop
  41b8ea:	pop    rbp
  41b8eb:	ret    

000000000041b8ec <flatcc_builder_enter_user_frame_ptr@@Base>:
  41b8ec:	push   rbp
  41b8ed:	mov    rbp,rsp
  41b8f0:	sub    rsp,0x20
  41b8f4:	mov    QWORD PTR [rbp-0x18],rdi
  41b8f8:	mov    QWORD PTR [rbp-0x20],rsi
  41b8fc:	mov    rax,QWORD PTR [rbp-0x20]
  41b900:	add    rax,0x7
  41b904:	and    rax,0xfffffffffffffff8
  41b908:	add    rax,0x8
  41b90c:	mov    QWORD PTR [rbp-0x20],rax
  41b910:	mov    rax,QWORD PTR [rbp-0x18]
  41b914:	mov    rdx,QWORD PTR [rax+0x180]
  41b91b:	mov    rcx,QWORD PTR [rbp-0x20]
  41b91f:	mov    rax,QWORD PTR [rbp-0x18]
  41b923:	mov    r8d,0x0
  41b929:	mov    esi,0x7
  41b92e:	mov    rdi,rax
  41b931:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41b936:	mov    QWORD PTR [rbp-0x8],rax
  41b93a:	cmp    QWORD PTR [rbp-0x8],0x0
  41b93f:	jne    41b948 <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  41b941:	mov    eax,0x0
  41b946:	jmp    41b9b2 <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  41b948:	mov    rdx,QWORD PTR [rbp-0x20]
  41b94c:	mov    rax,QWORD PTR [rbp-0x8]
  41b950:	mov    esi,0x0
  41b955:	mov    rdi,rax
  41b958:	call   405090 <memset@plt>
  41b95d:	mov    rax,QWORD PTR [rbp-0x8]
  41b961:	lea    rdx,[rax+0x8]
  41b965:	mov    QWORD PTR [rbp-0x8],rdx
  41b969:	mov    rdx,QWORD PTR [rbp-0x18]
  41b96d:	mov    rdx,QWORD PTR [rdx+0x178]
  41b974:	mov    QWORD PTR [rax],rdx
  41b977:	mov    rax,QWORD PTR [rbp-0x18]
  41b97b:	mov    rax,QWORD PTR [rax+0x180]
  41b982:	lea    rdx,[rax+0x8]
  41b986:	mov    rax,QWORD PTR [rbp-0x18]
  41b98a:	mov    QWORD PTR [rax+0x178],rdx
  41b991:	mov    rax,QWORD PTR [rbp-0x18]
  41b995:	mov    rdx,QWORD PTR [rax+0x180]
  41b99c:	mov    rax,QWORD PTR [rbp-0x20]
  41b9a0:	add    rdx,rax
  41b9a3:	mov    rax,QWORD PTR [rbp-0x18]
  41b9a7:	mov    QWORD PTR [rax+0x180],rdx
  41b9ae:	mov    rax,QWORD PTR [rbp-0x8]
  41b9b2:	leave  
  41b9b3:	ret    

000000000041b9b4 <flatcc_builder_enter_user_frame@@Base>:
  41b9b4:	push   rbp
  41b9b5:	mov    rbp,rsp
  41b9b8:	sub    rsp,0x20
  41b9bc:	mov    QWORD PTR [rbp-0x18],rdi
  41b9c0:	mov    QWORD PTR [rbp-0x20],rsi
  41b9c4:	mov    rax,QWORD PTR [rbp-0x20]
  41b9c8:	add    rax,0x7
  41b9cc:	and    rax,0xfffffffffffffff8
  41b9d0:	add    rax,0x8
  41b9d4:	mov    QWORD PTR [rbp-0x20],rax
  41b9d8:	mov    rax,QWORD PTR [rbp-0x18]
  41b9dc:	mov    rdx,QWORD PTR [rax+0x180]
  41b9e3:	mov    rcx,QWORD PTR [rbp-0x20]
  41b9e7:	mov    rax,QWORD PTR [rbp-0x18]
  41b9eb:	mov    r8d,0x0
  41b9f1:	mov    esi,0x7
  41b9f6:	mov    rdi,rax
  41b9f9:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41b9fe:	mov    QWORD PTR [rbp-0x8],rax
  41ba02:	cmp    QWORD PTR [rbp-0x8],0x0
  41ba07:	jne    41ba10 <flatcc_builder_enter_user_frame@@Base+0x5c>
  41ba09:	mov    eax,0x0
  41ba0e:	jmp    41ba81 <flatcc_builder_enter_user_frame@@Base+0xcd>
  41ba10:	mov    rdx,QWORD PTR [rbp-0x20]
  41ba14:	mov    rax,QWORD PTR [rbp-0x8]
  41ba18:	mov    esi,0x0
  41ba1d:	mov    rdi,rax
  41ba20:	call   405090 <memset@plt>
  41ba25:	mov    rax,QWORD PTR [rbp-0x8]
  41ba29:	lea    rdx,[rax+0x8]
  41ba2d:	mov    QWORD PTR [rbp-0x8],rdx
  41ba31:	mov    rdx,QWORD PTR [rbp-0x18]
  41ba35:	mov    rdx,QWORD PTR [rdx+0x178]
  41ba3c:	mov    QWORD PTR [rax],rdx
  41ba3f:	mov    rax,QWORD PTR [rbp-0x18]
  41ba43:	mov    rax,QWORD PTR [rax+0x180]
  41ba4a:	lea    rdx,[rax+0x8]
  41ba4e:	mov    rax,QWORD PTR [rbp-0x18]
  41ba52:	mov    QWORD PTR [rax+0x178],rdx
  41ba59:	mov    rax,QWORD PTR [rbp-0x18]
  41ba5d:	mov    rdx,QWORD PTR [rax+0x180]
  41ba64:	mov    rax,QWORD PTR [rbp-0x20]
  41ba68:	add    rdx,rax
  41ba6b:	mov    rax,QWORD PTR [rbp-0x18]
  41ba6f:	mov    QWORD PTR [rax+0x180],rdx
  41ba76:	mov    rax,QWORD PTR [rbp-0x18]
  41ba7a:	mov    rax,QWORD PTR [rax+0x178]
  41ba81:	leave  
  41ba82:	ret    

000000000041ba83 <flatcc_builder_exit_user_frame@@Base>:
  41ba83:	push   rbp
  41ba84:	mov    rbp,rsp
  41ba87:	sub    rsp,0x20
  41ba8b:	mov    QWORD PTR [rbp-0x18],rdi
  41ba8f:	mov    rax,QWORD PTR [rbp-0x18]
  41ba93:	mov    rax,QWORD PTR [rax+0x178]
  41ba9a:	test   rax,rax
  41ba9d:	jne    41babe <flatcc_builder_exit_user_frame@@Base+0x3b>
  41ba9f:	lea    rcx,[rip+0x1eb6a]        # 43a610 <flatcc_builder_padding_base@@Base+0x690>
  41baa6:	mov    edx,0x21e
  41baab:	lea    rsi,[rip+0x1e6ce]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41bab2:	lea    rdi,[rip+0x1e74a]        # 43a203 <flatcc_builder_padding_base@@Base+0x283>
  41bab9:	call   405080 <__assert_fail@plt>
  41babe:	mov    rax,QWORD PTR [rbp-0x18]
  41bac2:	mov    rdx,QWORD PTR [rax+0xc8]
  41bac9:	mov    rax,QWORD PTR [rbp-0x18]
  41bacd:	mov    rax,QWORD PTR [rax+0x178]
  41bad4:	mov    eax,eax
  41bad6:	add    rax,rdx
  41bad9:	mov    QWORD PTR [rbp-0x8],rax
  41badd:	mov    rax,QWORD PTR [rbp-0x18]
  41bae1:	mov    rax,QWORD PTR [rax+0x178]
  41bae8:	lea    rdx,[rax-0x8]
  41baec:	mov    rax,QWORD PTR [rbp-0x18]
  41baf0:	mov    QWORD PTR [rax+0x180],rdx
  41baf7:	mov    rax,QWORD PTR [rbp-0x8]
  41bafb:	mov    rdx,QWORD PTR [rax-0x8]
  41baff:	mov    rax,QWORD PTR [rbp-0x18]
  41bb03:	mov    QWORD PTR [rax+0x178],rdx
  41bb0a:	mov    rax,QWORD PTR [rbp-0x18]
  41bb0e:	mov    rax,QWORD PTR [rax+0x178]
  41bb15:	leave  
  41bb16:	ret    

000000000041bb17 <flatcc_builder_exit_user_frame_at@@Base>:
  41bb17:	push   rbp
  41bb18:	mov    rbp,rsp
  41bb1b:	sub    rsp,0x10
  41bb1f:	mov    QWORD PTR [rbp-0x8],rdi
  41bb23:	mov    QWORD PTR [rbp-0x10],rsi
  41bb27:	mov    rax,QWORD PTR [rbp-0x8]
  41bb2b:	mov    rax,QWORD PTR [rax+0x178]
  41bb32:	cmp    rax,QWORD PTR [rbp-0x10]
  41bb36:	jae    41bb57 <flatcc_builder_exit_user_frame_at@@Base+0x40>
  41bb38:	lea    rcx,[rip+0x1eb01]        # 43a640 <flatcc_builder_padding_base@@Base+0x6c0>
  41bb3f:	mov    edx,0x227
  41bb44:	lea    rsi,[rip+0x1e635]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41bb4b:	lea    rdi,[rip+0x1e6ce]        # 43a220 <flatcc_builder_padding_base@@Base+0x2a0>
  41bb52:	call   405080 <__assert_fail@plt>
  41bb57:	mov    rax,QWORD PTR [rbp-0x8]
  41bb5b:	mov    rdx,QWORD PTR [rbp-0x10]
  41bb5f:	mov    QWORD PTR [rax+0x178],rdx
  41bb66:	mov    rax,QWORD PTR [rbp-0x8]
  41bb6a:	mov    rdi,rax
  41bb6d:	call   41ba83 <flatcc_builder_exit_user_frame@@Base>
  41bb72:	leave  
  41bb73:	ret    

000000000041bb74 <flatcc_builder_get_current_user_frame@@Base>:
  41bb74:	push   rbp
  41bb75:	mov    rbp,rsp
  41bb78:	mov    QWORD PTR [rbp-0x8],rdi
  41bb7c:	mov    rax,QWORD PTR [rbp-0x8]
  41bb80:	mov    rax,QWORD PTR [rax+0x178]
  41bb87:	pop    rbp
  41bb88:	ret    

000000000041bb89 <flatcc_builder_get_user_frame_ptr@@Base>:
  41bb89:	push   rbp
  41bb8a:	mov    rbp,rsp
  41bb8d:	mov    QWORD PTR [rbp-0x8],rdi
  41bb91:	mov    QWORD PTR [rbp-0x10],rsi
  41bb95:	mov    rax,QWORD PTR [rbp-0x8]
  41bb99:	mov    rax,QWORD PTR [rax+0xc8]
  41bba0:	mov    rdx,QWORD PTR [rbp-0x10]
  41bba4:	mov    edx,edx
  41bba6:	add    rax,rdx
  41bba9:	pop    rbp
  41bbaa:	ret    
  41bbab:	push   rbp
  41bbac:	mov    rbp,rsp
  41bbaf:	sub    rsp,0x10
  41bbb3:	mov    QWORD PTR [rbp-0x8],rdi
  41bbb7:	mov    eax,esi
  41bbb9:	mov    WORD PTR [rbp-0xc],ax
  41bbbd:	mov    rax,QWORD PTR [rbp-0x8]
  41bbc1:	mov    eax,DWORD PTR [rax+0x104]
  41bbc7:	lea    edx,[rax+0x1]
  41bbca:	mov    rax,QWORD PTR [rbp-0x8]
  41bbce:	mov    DWORD PTR [rax+0x104],edx
  41bbd4:	mov    rax,QWORD PTR [rbp-0x8]
  41bbd8:	mov    edx,DWORD PTR [rax+0x104]
  41bbde:	mov    rax,QWORD PTR [rbp-0x8]
  41bbe2:	mov    eax,DWORD PTR [rax+0x108]
  41bbe8:	cmp    edx,eax
  41bbea:	jle    41bce6 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  41bbf0:	mov    rax,QWORD PTR [rbp-0x8]
  41bbf4:	mov    eax,DWORD PTR [rax+0x120]
  41bbfa:	test   eax,eax
  41bbfc:	jle    41bc20 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  41bbfe:	mov    rax,QWORD PTR [rbp-0x8]
  41bc02:	mov    edx,DWORD PTR [rax+0x104]
  41bc08:	mov    rax,QWORD PTR [rbp-0x8]
  41bc0c:	mov    eax,DWORD PTR [rax+0x120]
  41bc12:	cmp    edx,eax
  41bc14:	jle    41bc20 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  41bc16:	mov    eax,0xffffffff
  41bc1b:	jmp    41bd81 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  41bc20:	mov    rax,QWORD PTR [rbp-0x8]
  41bc24:	mov    eax,DWORD PTR [rax+0x104]
  41bc2a:	sub    eax,0x1
  41bc2d:	movsxd rdx,eax
  41bc30:	mov    rax,rdx
  41bc33:	shl    rax,0x3
  41bc37:	add    rax,rdx
  41bc3a:	shl    rax,0x2
  41bc3e:	mov    rdx,rax
  41bc41:	mov    rax,QWORD PTR [rbp-0x8]
  41bc45:	mov    r8d,0x0
  41bc4b:	mov    ecx,0x24
  41bc50:	mov    esi,0x4
  41bc55:	mov    rdi,rax
  41bc58:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41bc5d:	mov    rdx,rax
  41bc60:	mov    rax,QWORD PTR [rbp-0x8]
  41bc64:	mov    QWORD PTR [rax+0x30],rdx
  41bc68:	mov    rax,QWORD PTR [rbp-0x8]
  41bc6c:	mov    rax,QWORD PTR [rax+0x30]
  41bc70:	test   rax,rax
  41bc73:	jne    41bc7f <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  41bc75:	mov    eax,0xffffffff
  41bc7a:	jmp    41bd81 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  41bc7f:	mov    rax,QWORD PTR [rbp-0x8]
  41bc83:	mov    rax,QWORD PTR [rax+0xa0]
  41bc8a:	movabs rdx,0xe38e38e38e38e38f
  41bc94:	mul    rdx
  41bc97:	mov    rax,rdx
  41bc9a:	shr    rax,0x5
  41bc9e:	mov    edx,eax
  41bca0:	mov    rax,QWORD PTR [rbp-0x8]
  41bca4:	mov    DWORD PTR [rax+0x108],edx
  41bcaa:	mov    rax,QWORD PTR [rbp-0x8]
  41bcae:	mov    eax,DWORD PTR [rax+0x120]
  41bcb4:	test   eax,eax
  41bcb6:	jle    41bcfa <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  41bcb8:	mov    rax,QWORD PTR [rbp-0x8]
  41bcbc:	mov    edx,DWORD PTR [rax+0x120]
  41bcc2:	mov    rax,QWORD PTR [rbp-0x8]
  41bcc6:	mov    eax,DWORD PTR [rax+0x108]
  41bccc:	cmp    edx,eax
  41bcce:	jge    41bcfa <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  41bcd0:	mov    rax,QWORD PTR [rbp-0x8]
  41bcd4:	mov    edx,DWORD PTR [rax+0x120]
  41bcda:	mov    rax,QWORD PTR [rbp-0x8]
  41bcde:	mov    DWORD PTR [rax+0x108],edx
  41bce4:	jmp    41bcfa <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  41bce6:	mov    rax,QWORD PTR [rbp-0x8]
  41bcea:	mov    rax,QWORD PTR [rax+0x30]
  41bcee:	lea    rdx,[rax+0x24]
  41bcf2:	mov    rax,QWORD PTR [rbp-0x8]
  41bcf6:	mov    QWORD PTR [rax+0x30],rdx
  41bcfa:	mov    rax,QWORD PTR [rbp-0x8]
  41bcfe:	mov    rax,QWORD PTR [rax+0x30]
  41bd02:	mov    rdx,QWORD PTR [rbp-0x8]
  41bd06:	mov    edx,DWORD PTR [rdx+0x20]
  41bd09:	mov    DWORD PTR [rax+0x8],edx
  41bd0c:	mov    rax,QWORD PTR [rbp-0x8]
  41bd10:	mov    rax,QWORD PTR [rax+0x30]
  41bd14:	mov    rdx,QWORD PTR [rbp-0x8]
  41bd18:	movzx  edx,WORD PTR [rdx+0xea]
  41bd1f:	mov    WORD PTR [rax+0xc],dx
  41bd23:	mov    rax,QWORD PTR [rbp-0x8]
  41bd27:	movzx  edx,WORD PTR [rbp-0xc]
  41bd2b:	mov    WORD PTR [rax+0xea],dx
  41bd32:	mov    rax,QWORD PTR [rbp-0x8]
  41bd36:	mov    rax,QWORD PTR [rax+0x30]
  41bd3a:	mov    rdx,QWORD PTR [rbp-0x8]
  41bd3e:	mov    edx,DWORD PTR [rdx+0x28]
  41bd41:	mov    DWORD PTR [rax],edx
  41bd43:	mov    rax,QWORD PTR [rbp-0x8]
  41bd47:	mov    rax,QWORD PTR [rax+0x30]
  41bd4b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41bd52:	mov    rax,QWORD PTR [rbp-0x8]
  41bd56:	mov    edx,DWORD PTR [rax+0x28]
  41bd59:	mov    rax,QWORD PTR [rbp-0x8]
  41bd5d:	mov    eax,DWORD PTR [rax+0x20]
  41bd60:	add    eax,edx
  41bd62:	add    eax,0x7
  41bd65:	and    eax,0xfffffff8
  41bd68:	mov    edx,eax
  41bd6a:	mov    rax,QWORD PTR [rbp-0x8]
  41bd6e:	mov    DWORD PTR [rax+0x28],edx
  41bd71:	mov    rax,QWORD PTR [rbp-0x8]
  41bd75:	mov    DWORD PTR [rax+0x20],0x0
  41bd7c:	mov    eax,0x0
  41bd81:	leave  
  41bd82:	ret    
  41bd83:	push   rbp
  41bd84:	mov    rbp,rsp
  41bd87:	sub    rsp,0x10
  41bd8b:	mov    QWORD PTR [rbp-0x8],rdi
  41bd8f:	mov    rax,QWORD PTR [rbp-0x8]
  41bd93:	mov    eax,DWORD PTR [rax+0x20]
  41bd96:	mov    edx,eax
  41bd98:	mov    rax,QWORD PTR [rbp-0x8]
  41bd9c:	mov    rax,QWORD PTR [rax+0x18]
  41bda0:	mov    esi,0x0
  41bda5:	mov    rdi,rax
  41bda8:	call   405090 <memset@plt>
  41bdad:	mov    rax,QWORD PTR [rbp-0x8]
  41bdb1:	mov    rax,QWORD PTR [rax+0x30]
  41bdb5:	mov    edx,DWORD PTR [rax+0x8]
  41bdb8:	mov    rax,QWORD PTR [rbp-0x8]
  41bdbc:	mov    DWORD PTR [rax+0x20],edx
  41bdbf:	mov    rax,QWORD PTR [rbp-0x8]
  41bdc3:	mov    rax,QWORD PTR [rax+0x30]
  41bdc7:	mov    edx,DWORD PTR [rax]
  41bdc9:	mov    rax,QWORD PTR [rbp-0x8]
  41bdcd:	mov    DWORD PTR [rax+0x28],edx
  41bdd0:	mov    rax,QWORD PTR [rbp-0x8]
  41bdd4:	mov    rax,QWORD PTR [rax+0x30]
  41bdd8:	mov    edx,DWORD PTR [rax+0x4]
  41bddb:	mov    rax,QWORD PTR [rbp-0x8]
  41bddf:	mov    esi,edx
  41bde1:	mov    rdi,rax
  41bde4:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41bde9:	mov    rax,QWORD PTR [rbp-0x8]
  41bded:	movzx  eax,WORD PTR [rax+0xea]
  41bdf4:	movzx  edx,ax
  41bdf7:	mov    rax,QWORD PTR [rbp-0x8]
  41bdfb:	mov    esi,edx
  41bdfd:	mov    rdi,rax
  41be00:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41be05:	mov    rax,QWORD PTR [rbp-0x8]
  41be09:	mov    rax,QWORD PTR [rax+0x30]
  41be0d:	movzx  edx,WORD PTR [rax+0xc]
  41be11:	mov    rax,QWORD PTR [rbp-0x8]
  41be15:	mov    WORD PTR [rax+0xea],dx
  41be1c:	mov    rax,QWORD PTR [rbp-0x8]
  41be20:	mov    rax,QWORD PTR [rax+0x30]
  41be24:	lea    rdx,[rax-0x24]
  41be28:	mov    rax,QWORD PTR [rbp-0x8]
  41be2c:	mov    QWORD PTR [rax+0x30],rdx
  41be30:	mov    rax,QWORD PTR [rbp-0x8]
  41be34:	mov    eax,DWORD PTR [rax+0x104]
  41be3a:	lea    edx,[rax-0x1]
  41be3d:	mov    rax,QWORD PTR [rbp-0x8]
  41be41:	mov    DWORD PTR [rax+0x104],edx
  41be47:	nop
  41be48:	leave  
  41be49:	ret    
  41be4a:	push   rbp
  41be4b:	mov    rbp,rsp
  41be4e:	mov    QWORD PTR [rbp-0x8],rdi
  41be52:	mov    DWORD PTR [rbp-0xc],esi
  41be55:	mov    eax,edx
  41be57:	mov    WORD PTR [rbp-0x10],ax
  41be5b:	mov    rax,QWORD PTR [rbp-0x8]
  41be5f:	mov    eax,DWORD PTR [rax+0xf0]
  41be65:	sub    eax,DWORD PTR [rbp-0xc]
  41be68:	movzx  edx,WORD PTR [rbp-0x10]
  41be6c:	sub    edx,0x1
  41be6f:	and    eax,edx
  41be71:	pop    rbp
  41be72:	ret    
  41be73:	push   rbp
  41be74:	mov    rbp,rsp
  41be77:	mov    QWORD PTR [rbp-0x8],rdi
  41be7b:	mov    eax,esi
  41be7d:	mov    WORD PTR [rbp-0xc],ax
  41be81:	mov    rax,QWORD PTR [rbp-0x8]
  41be85:	mov    eax,DWORD PTR [rax+0xf4]
  41be8b:	movzx  edx,WORD PTR [rbp-0xc]
  41be8f:	sub    edx,0x1
  41be92:	and    eax,edx
  41be94:	pop    rbp
  41be95:	ret    
  41be96:	push   rbp
  41be97:	mov    rbp,rsp
  41be9a:	sub    rsp,0x20
  41be9e:	mov    QWORD PTR [rbp-0x18],rdi
  41bea2:	mov    QWORD PTR [rbp-0x20],rsi
  41bea6:	mov    rax,QWORD PTR [rbp-0x18]
  41beaa:	mov    edx,DWORD PTR [rax+0xf0]
  41beb0:	mov    rax,QWORD PTR [rbp-0x20]
  41beb4:	mov    rax,QWORD PTR [rax]
  41beb7:	sub    edx,eax
  41beb9:	mov    eax,edx
  41bebb:	mov    DWORD PTR [rbp-0x4],eax
  41bebe:	mov    rax,QWORD PTR [rbp-0x20]
  41bec2:	mov    rax,QWORD PTR [rax]
  41bec5:	cmp    rax,0x10
  41bec9:	jbe    41bee0 <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  41becb:	mov    rax,QWORD PTR [rbp-0x20]
  41becf:	mov    rax,QWORD PTR [rax]
  41bed2:	lea    rdx,[rax-0x10]
  41bed6:	mov    eax,0xffffffff
  41bedb:	cmp    rdx,rax
  41bede:	ja     41beef <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  41bee0:	mov    rax,QWORD PTR [rbp-0x18]
  41bee4:	mov    eax,DWORD PTR [rax+0xf0]
  41beea:	cmp    eax,DWORD PTR [rbp-0x4]
  41beed:	jg     41bf0e <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  41beef:	lea    rcx,[rip+0x1e792]        # 43a688 <flatcc_builder_padding_base@@Base+0x708>
  41bef6:	mov    edx,0x287
  41befb:	lea    rsi,[rip+0x1e27e]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41bf02:	lea    rdi,[rip+0x1e2d7]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41bf09:	call   405080 <__assert_fail@plt>
  41bf0e:	mov    rax,QWORD PTR [rbp-0x18]
  41bf12:	mov    rax,QWORD PTR [rax+0x48]
  41bf16:	mov    rdx,QWORD PTR [rbp-0x20]
  41bf1a:	mov    r8,QWORD PTR [rdx]
  41bf1d:	mov    rdx,QWORD PTR [rbp-0x20]
  41bf21:	mov    edx,DWORD PTR [rdx+0x8]
  41bf24:	mov    rcx,QWORD PTR [rbp-0x20]
  41bf28:	lea    rsi,[rcx+0x10]
  41bf2c:	mov    rcx,QWORD PTR [rbp-0x18]
  41bf30:	mov    rdi,QWORD PTR [rcx+0x38]
  41bf34:	mov    ecx,DWORD PTR [rbp-0x4]
  41bf37:	call   rax
  41bf39:	test   eax,eax
  41bf3b:	je     41bf5c <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  41bf3d:	lea    rcx,[rip+0x1e744]        # 43a688 <flatcc_builder_padding_base@@Base+0x708>
  41bf44:	mov    edx,0x28b
  41bf49:	lea    rsi,[rip+0x1e230]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41bf50:	lea    rdi,[rip+0x1e289]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41bf57:	call   405080 <__assert_fail@plt>
  41bf5c:	mov    rax,QWORD PTR [rbp-0x18]
  41bf60:	mov    edx,DWORD PTR [rbp-0x4]
  41bf63:	mov    DWORD PTR [rax+0xf0],edx
  41bf69:	mov    rax,QWORD PTR [rbp-0x18]
  41bf6d:	mov    eax,DWORD PTR [rax+0xf0]
  41bf73:	leave  
  41bf74:	ret    
  41bf75:	push   rbp
  41bf76:	mov    rbp,rsp
  41bf79:	sub    rsp,0x20
  41bf7d:	mov    QWORD PTR [rbp-0x18],rdi
  41bf81:	mov    QWORD PTR [rbp-0x20],rsi
  41bf85:	mov    rax,QWORD PTR [rbp-0x18]
  41bf89:	mov    eax,DWORD PTR [rax+0xf4]
  41bf8f:	mov    DWORD PTR [rbp-0x4],eax
  41bf92:	mov    rax,QWORD PTR [rbp-0x20]
  41bf96:	mov    rax,QWORD PTR [rax]
  41bf99:	mov    edx,eax
  41bf9b:	mov    eax,DWORD PTR [rbp-0x4]
  41bf9e:	add    edx,eax
  41bfa0:	mov    rax,QWORD PTR [rbp-0x18]
  41bfa4:	mov    DWORD PTR [rax+0xf4],edx
  41bfaa:	mov    rax,QWORD PTR [rbp-0x18]
  41bfae:	mov    eax,DWORD PTR [rax+0xf4]
  41bfb4:	cmp    eax,DWORD PTR [rbp-0x4]
  41bfb7:	jge    41bfd8 <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  41bfb9:	lea    rcx,[rip+0x1e6b8]        # 43a678 <flatcc_builder_padding_base@@Base+0x6f8>
  41bfc0:	mov    edx,0x2a1
  41bfc5:	lea    rsi,[rip+0x1e1b4]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41bfcc:	lea    rdi,[rip+0x1e20d]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41bfd3:	call   405080 <__assert_fail@plt>
  41bfd8:	mov    rax,QWORD PTR [rbp-0x18]
  41bfdc:	mov    rax,QWORD PTR [rax+0x48]
  41bfe0:	mov    rdx,QWORD PTR [rbp-0x20]
  41bfe4:	mov    r8,QWORD PTR [rdx]
  41bfe7:	mov    rdx,QWORD PTR [rbp-0x20]
  41bfeb:	mov    edx,DWORD PTR [rdx+0x8]
  41bfee:	mov    rcx,QWORD PTR [rbp-0x20]
  41bff2:	lea    rsi,[rcx+0x10]
  41bff6:	mov    rcx,QWORD PTR [rbp-0x18]
  41bffa:	mov    rdi,QWORD PTR [rcx+0x38]
  41bffe:	mov    ecx,DWORD PTR [rbp-0x4]
  41c001:	call   rax
  41c003:	test   eax,eax
  41c005:	je     41c026 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  41c007:	lea    rcx,[rip+0x1e66a]        # 43a678 <flatcc_builder_padding_base@@Base+0x6f8>
  41c00e:	mov    edx,0x2a5
  41c013:	lea    rsi,[rip+0x1e166]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41c01a:	lea    rdi,[rip+0x1e1bf]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41c021:	call   405080 <__assert_fail@plt>
  41c026:	mov    eax,DWORD PTR [rbp-0x4]
  41c029:	add    eax,0x1
  41c02c:	leave  
  41c02d:	ret    
  41c02e:	push   rbp
  41c02f:	mov    rbp,rsp
  41c032:	sub    rsp,0xd0
  41c039:	mov    QWORD PTR [rbp-0xb8],rdi
  41c040:	mov    QWORD PTR [rbp-0xc0],rsi
  41c047:	mov    eax,edx
  41c049:	mov    DWORD PTR [rbp-0xc8],ecx
  41c04f:	mov    WORD PTR [rbp-0xc4],ax
  41c056:	mov    rax,QWORD PTR fs:0x28
  41c05f:	mov    QWORD PTR [rbp-0x8],rax
  41c063:	xor    eax,eax
  41c065:	cmp    WORD PTR [rbp-0xc4],0x0
  41c06d:	jne    41c099 <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  41c06f:	mov    rax,QWORD PTR [rbp-0xb8]
  41c076:	movzx  eax,WORD PTR [rax+0xec]
  41c07d:	test   ax,ax
  41c080:	je     41c092 <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  41c082:	mov    rax,QWORD PTR [rbp-0xb8]
  41c089:	movzx  eax,WORD PTR [rax+0xec]
  41c090:	jmp    41c0a0 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  41c092:	mov    eax,0x1
  41c097:	jmp    41c0a0 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  41c099:	movzx  eax,WORD PTR [rbp-0xc4]
  41c0a0:	mov    WORD PTR [rbp-0xc4],ax
  41c0a7:	mov    rax,QWORD PTR [rbp-0xc0]
  41c0ae:	mov    esi,0x4
  41c0b3:	mov    rdi,rax
  41c0b6:	call   41b8c3 <flatcc_builder_clear@@Base+0xc7>
  41c0bb:	movzx  edx,WORD PTR [rbp-0xc4]
  41c0c2:	mov    rax,QWORD PTR [rbp-0xc0]
  41c0c9:	mov    esi,edx
  41c0cb:	mov    rdi,rax
  41c0ce:	call   41b8c3 <flatcc_builder_clear@@Base+0xc7>
  41c0d3:	cmp    DWORD PTR [rbp-0xc8],0x0
  41c0da:	jne    41c1d0 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  41c0e0:	movzx  edx,WORD PTR [rbp-0xc4]
  41c0e7:	mov    rax,QWORD PTR [rbp-0xb8]
  41c0ee:	mov    esi,edx
  41c0f0:	mov    rdi,rax
  41c0f3:	call   41be73 <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  41c0f8:	mov    eax,eax
  41c0fa:	mov    QWORD PTR [rbp-0xa8],rax
  41c101:	cmp    QWORD PTR [rbp-0xa8],0x0
  41c109:	je     41c1d0 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  41c10f:	mov    QWORD PTR [rbp-0xa0],0x0
  41c11a:	mov    DWORD PTR [rbp-0x98],0x0
  41c124:	cmp    QWORD PTR [rbp-0xa8],0x0
  41c12c:	je     41c194 <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  41c12e:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c135:	mov    rax,QWORD PTR [rbp-0xa8]
  41c13c:	add    rax,rdx
  41c13f:	mov    QWORD PTR [rbp-0xa0],rax
  41c146:	mov    eax,DWORD PTR [rbp-0x98]
  41c14c:	cdqe   
  41c14e:	shl    rax,0x4
  41c152:	add    rax,rbp
  41c155:	sub    rax,0x90
  41c15b:	mov    rdx,0x439f80
  41c162:	mov    QWORD PTR [rax],rdx
  41c165:	mov    eax,DWORD PTR [rbp-0x98]
  41c16b:	cdqe   
  41c16d:	shl    rax,0x4
  41c171:	add    rax,rbp
  41c174:	lea    rdx,[rax-0x88]
  41c17b:	mov    rax,QWORD PTR [rbp-0xa8]
  41c182:	mov    QWORD PTR [rdx],rax
  41c185:	mov    eax,DWORD PTR [rbp-0x98]
  41c18b:	add    eax,0x1
  41c18e:	mov    DWORD PTR [rbp-0x98],eax
  41c194:	lea    rdx,[rbp-0xa0]
  41c19b:	mov    rax,QWORD PTR [rbp-0xb8]
  41c1a2:	mov    rsi,rdx
  41c1a5:	mov    rdi,rax
  41c1a8:	call   41bf75 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  41c1ad:	test   eax,eax
  41c1af:	jne    41c1d0 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  41c1b1:	lea    rcx,[rip+0x1e4b0]        # 43a668 <flatcc_builder_padding_base@@Base+0x6e8>
  41c1b8:	mov    edx,0x2be
  41c1bd:	lea    rsi,[rip+0x1dfbc]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41c1c4:	lea    rdi,[rip+0x1e015]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41c1cb:	call   405080 <__assert_fail@plt>
  41c1d0:	mov    eax,0x0
  41c1d5:	mov    rcx,QWORD PTR [rbp-0x8]
  41c1d9:	xor    rcx,QWORD PTR fs:0x28
  41c1e2:	je     41c1e9 <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  41c1e4:	call   405070 <__stack_chk_fail@plt>
  41c1e9:	leave  
  41c1ea:	ret    

000000000041c1eb <flatcc_builder_embed_buffer@@Base>:
  41c1eb:	push   rbp
  41c1ec:	mov    rbp,rsp
  41c1ef:	sub    rsp,0xe0
  41c1f6:	mov    QWORD PTR [rbp-0xb8],rdi
  41c1fd:	mov    eax,esi
  41c1ff:	mov    QWORD PTR [rbp-0xc8],rdx
  41c206:	mov    QWORD PTR [rbp-0xd0],rcx
  41c20d:	mov    edx,r8d
  41c210:	mov    DWORD PTR [rbp-0xd4],r9d
  41c217:	mov    WORD PTR [rbp-0xbc],ax
  41c21e:	mov    WORD PTR [rbp-0xc0],dx
  41c225:	mov    rax,QWORD PTR fs:0x28
  41c22e:	mov    QWORD PTR [rbp-0x8],rax
  41c232:	xor    eax,eax
  41c234:	mov    eax,DWORD PTR [rbp-0xd4]
  41c23a:	and    eax,0x2
  41c23d:	mov    DWORD PTR [rbp-0xa8],eax
  41c243:	mov    rax,QWORD PTR [rbp-0xb8]
  41c24a:	mov    eax,DWORD PTR [rax+0x100]
  41c250:	test   eax,eax
  41c252:	setne  al
  41c255:	movzx  ecx,al
  41c258:	movzx  edx,WORD PTR [rbp-0xbc]
  41c25f:	lea    rsi,[rbp-0xc0]
  41c266:	mov    rax,QWORD PTR [rbp-0xb8]
  41c26d:	mov    rdi,rax
  41c270:	call   41c02e <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  41c275:	test   eax,eax
  41c277:	je     41c283 <flatcc_builder_embed_buffer@@Base+0x98>
  41c279:	mov    eax,0x0
  41c27e:	jmp    41c45d <flatcc_builder_embed_buffer@@Base+0x272>
  41c283:	movzx  eax,WORD PTR [rbp-0xc0]
  41c28a:	movzx  edx,ax
  41c28d:	mov    rax,QWORD PTR [rbp-0xd0]
  41c294:	mov    ecx,eax
  41c296:	cmp    DWORD PTR [rbp-0xa8],0x0
  41c29d:	je     41c2a6 <flatcc_builder_embed_buffer@@Base+0xbb>
  41c29f:	mov    eax,0x4
  41c2a4:	jmp    41c2ab <flatcc_builder_embed_buffer@@Base+0xc0>
  41c2a6:	mov    eax,0x0
  41c2ab:	add    ecx,eax
  41c2ad:	mov    rax,QWORD PTR [rbp-0xb8]
  41c2b4:	mov    esi,ecx
  41c2b6:	mov    rdi,rax
  41c2b9:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41c2be:	mov    DWORD PTR [rbp-0xa4],eax
  41c2c4:	mov    rax,QWORD PTR [rbp-0xd0]
  41c2cb:	mov    edx,eax
  41c2cd:	mov    eax,DWORD PTR [rbp-0xa4]
  41c2d3:	add    eax,edx
  41c2d5:	mov    edi,eax
  41c2d7:	call   41ab82 <main@@Base+0x10e3>
  41c2dc:	mov    DWORD PTR [rbp-0xac],eax
  41c2e2:	mov    QWORD PTR [rbp-0xa0],0x0
  41c2ed:	mov    DWORD PTR [rbp-0x98],0x0
  41c2f7:	mov    rax,QWORD PTR [rbp-0xb8]
  41c2fe:	mov    eax,DWORD PTR [rax+0x100]
  41c304:	test   eax,eax
  41c306:	je     41c365 <flatcc_builder_embed_buffer@@Base+0x17a>
  41c308:	mov    rax,QWORD PTR [rbp-0xa0]
  41c30f:	add    rax,0x4
  41c313:	mov    QWORD PTR [rbp-0xa0],rax
  41c31a:	mov    eax,DWORD PTR [rbp-0x98]
  41c320:	cdqe   
  41c322:	shl    rax,0x4
  41c326:	add    rax,rbp
  41c329:	lea    rdx,[rax-0x90]
  41c330:	lea    rax,[rbp-0xac]
  41c337:	mov    QWORD PTR [rdx],rax
  41c33a:	mov    eax,DWORD PTR [rbp-0x98]
  41c340:	cdqe   
  41c342:	shl    rax,0x4
  41c346:	add    rax,rbp
  41c349:	sub    rax,0x88
  41c34f:	mov    QWORD PTR [rax],0x4
  41c356:	mov    eax,DWORD PTR [rbp-0x98]
  41c35c:	add    eax,0x1
  41c35f:	mov    DWORD PTR [rbp-0x98],eax
  41c365:	cmp    QWORD PTR [rbp-0xd0],0x0
  41c36d:	je     41c3d6 <flatcc_builder_embed_buffer@@Base+0x1eb>
  41c36f:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c376:	mov    rax,QWORD PTR [rbp-0xd0]
  41c37d:	add    rax,rdx
  41c380:	mov    QWORD PTR [rbp-0xa0],rax
  41c387:	mov    eax,DWORD PTR [rbp-0x98]
  41c38d:	cdqe   
  41c38f:	shl    rax,0x4
  41c393:	add    rax,rbp
  41c396:	lea    rdx,[rax-0x90]
  41c39d:	mov    rax,QWORD PTR [rbp-0xc8]
  41c3a4:	mov    QWORD PTR [rdx],rax
  41c3a7:	mov    eax,DWORD PTR [rbp-0x98]
  41c3ad:	cdqe   
  41c3af:	shl    rax,0x4
  41c3b3:	add    rax,rbp
  41c3b6:	lea    rdx,[rax-0x88]
  41c3bd:	mov    rax,QWORD PTR [rbp-0xd0]
  41c3c4:	mov    QWORD PTR [rdx],rax
  41c3c7:	mov    eax,DWORD PTR [rbp-0x98]
  41c3cd:	add    eax,0x1
  41c3d0:	mov    DWORD PTR [rbp-0x98],eax
  41c3d6:	cmp    DWORD PTR [rbp-0xa4],0x0
  41c3dd:	je     41c444 <flatcc_builder_embed_buffer@@Base+0x259>
  41c3df:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c3e6:	mov    eax,DWORD PTR [rbp-0xa4]
  41c3ec:	add    rax,rdx
  41c3ef:	mov    QWORD PTR [rbp-0xa0],rax
  41c3f6:	mov    eax,DWORD PTR [rbp-0x98]
  41c3fc:	cdqe   
  41c3fe:	shl    rax,0x4
  41c402:	add    rax,rbp
  41c405:	sub    rax,0x90
  41c40b:	mov    rdx,0x439f80
  41c412:	mov    QWORD PTR [rax],rdx
  41c415:	mov    edx,DWORD PTR [rbp-0x98]
  41c41b:	mov    eax,DWORD PTR [rbp-0xa4]
  41c421:	movsxd rdx,edx
  41c424:	shl    rdx,0x4
  41c428:	add    rdx,rbp
  41c42b:	sub    rdx,0x88
  41c432:	mov    QWORD PTR [rdx],rax
  41c435:	mov    eax,DWORD PTR [rbp-0x98]
  41c43b:	add    eax,0x1
  41c43e:	mov    DWORD PTR [rbp-0x98],eax
  41c444:	lea    rdx,[rbp-0xa0]
  41c44b:	mov    rax,QWORD PTR [rbp-0xb8]
  41c452:	mov    rsi,rdx
  41c455:	mov    rdi,rax
  41c458:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41c45d:	mov    rdi,QWORD PTR [rbp-0x8]
  41c461:	xor    rdi,QWORD PTR fs:0x28
  41c46a:	je     41c471 <flatcc_builder_embed_buffer@@Base+0x286>
  41c46c:	call   405070 <__stack_chk_fail@plt>
  41c471:	leave  
  41c472:	ret    

000000000041c473 <flatcc_builder_create_buffer@@Base>:
  41c473:	push   rbp
  41c474:	mov    rbp,rsp
  41c477:	sub    rsp,0xf0
  41c47e:	mov    QWORD PTR [rbp-0xd8],rdi
  41c485:	mov    QWORD PTR [rbp-0xe0],rsi
  41c48c:	mov    eax,edx
  41c48e:	mov    DWORD PTR [rbp-0xe8],ecx
  41c494:	mov    edx,r8d
  41c497:	mov    DWORD PTR [rbp-0xf0],r9d
  41c49e:	mov    WORD PTR [rbp-0xe4],ax
  41c4a5:	mov    WORD PTR [rbp-0xec],dx
  41c4ac:	mov    rax,QWORD PTR fs:0x28
  41c4b5:	mov    QWORD PTR [rbp-0x8],rax
  41c4b9:	xor    eax,eax
  41c4bb:	mov    DWORD PTR [rbp-0xb8],0x0
  41c4c5:	mov    DWORD PTR [rbp-0xbc],0x0
  41c4cf:	mov    eax,DWORD PTR [rbp-0xf0]
  41c4d5:	and    eax,0x1
  41c4d8:	test   eax,eax
  41c4da:	setne  al
  41c4dd:	movzx  eax,al
  41c4e0:	mov    DWORD PTR [rbp-0xb4],eax
  41c4e6:	mov    eax,DWORD PTR [rbp-0xf0]
  41c4ec:	and    eax,0x2
  41c4ef:	test   eax,eax
  41c4f1:	setne  al
  41c4f4:	movzx  eax,al
  41c4f7:	mov    DWORD PTR [rbp-0xb0],eax
  41c4fd:	movzx  edx,WORD PTR [rbp-0xe4]
  41c504:	mov    ecx,DWORD PTR [rbp-0xb4]
  41c50a:	lea    rsi,[rbp-0xec]
  41c511:	mov    rax,QWORD PTR [rbp-0xd8]
  41c518:	mov    rdi,rax
  41c51b:	call   41c02e <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  41c520:	test   eax,eax
  41c522:	je     41c52e <flatcc_builder_create_buffer@@Base+0xbb>
  41c524:	mov    eax,0x0
  41c529:	jmp    41c894 <flatcc_builder_create_buffer@@Base+0x421>
  41c52e:	movzx  eax,WORD PTR [rbp-0xec]
  41c535:	movzx  edx,ax
  41c538:	mov    rax,QWORD PTR [rbp-0xd8]
  41c53f:	mov    esi,edx
  41c541:	mov    rdi,rax
  41c544:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41c549:	cmp    QWORD PTR [rbp-0xe0],0x0
  41c551:	je     41c588 <flatcc_builder_create_buffer@@Base+0x115>
  41c553:	mov    rax,QWORD PTR [rbp-0xe0]
  41c55a:	mov    eax,DWORD PTR [rax]
  41c55c:	mov    DWORD PTR [rbp-0xbc],eax
  41c562:	mov    eax,DWORD PTR [rbp-0xbc]
  41c568:	mov    edi,eax
  41c56a:	call   41ab9d <main@@Base+0x10fe>
  41c56f:	mov    DWORD PTR [rbp-0xbc],eax
  41c575:	mov    eax,DWORD PTR [rbp-0xbc]
  41c57b:	mov    edi,eax
  41c57d:	call   41ab82 <main@@Base+0x10e3>
  41c582:	mov    DWORD PTR [rbp-0xbc],eax
  41c588:	mov    eax,DWORD PTR [rbp-0xbc]
  41c58e:	test   eax,eax
  41c590:	je     41c599 <flatcc_builder_create_buffer@@Base+0x126>
  41c592:	mov    eax,0x4
  41c597:	jmp    41c59e <flatcc_builder_create_buffer@@Base+0x12b>
  41c599:	mov    eax,0x0
  41c59e:	mov    DWORD PTR [rbp-0xb8],eax
  41c5a4:	movzx  eax,WORD PTR [rbp-0xec]
  41c5ab:	movzx  edx,ax
  41c5ae:	cmp    DWORD PTR [rbp-0xb0],0x0
  41c5b5:	je     41c5be <flatcc_builder_create_buffer@@Base+0x14b>
  41c5b7:	mov    ecx,0x4
  41c5bc:	jmp    41c5c3 <flatcc_builder_create_buffer@@Base+0x150>
  41c5be:	mov    ecx,0x0
  41c5c3:	mov    eax,DWORD PTR [rbp-0xb8]
  41c5c9:	add    eax,ecx
  41c5cb:	lea    ecx,[rax+0x4]
  41c5ce:	mov    rax,QWORD PTR [rbp-0xd8]
  41c5d5:	mov    esi,ecx
  41c5d7:	mov    rdi,rax
  41c5da:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41c5df:	mov    DWORD PTR [rbp-0xac],eax
  41c5e5:	mov    QWORD PTR [rbp-0xa0],0x0
  41c5f0:	mov    DWORD PTR [rbp-0x98],0x0
  41c5fa:	cmp    DWORD PTR [rbp-0xb4],0x0
  41c601:	jne    41c60c <flatcc_builder_create_buffer@@Base+0x199>
  41c603:	cmp    DWORD PTR [rbp-0xb0],0x0
  41c60a:	je     41c669 <flatcc_builder_create_buffer@@Base+0x1f6>
  41c60c:	mov    rax,QWORD PTR [rbp-0xa0]
  41c613:	add    rax,0x4
  41c617:	mov    QWORD PTR [rbp-0xa0],rax
  41c61e:	mov    eax,DWORD PTR [rbp-0x98]
  41c624:	cdqe   
  41c626:	shl    rax,0x4
  41c62a:	add    rax,rbp
  41c62d:	lea    rdx,[rax-0x90]
  41c634:	lea    rax,[rbp-0xc0]
  41c63b:	mov    QWORD PTR [rdx],rax
  41c63e:	mov    eax,DWORD PTR [rbp-0x98]
  41c644:	cdqe   
  41c646:	shl    rax,0x4
  41c64a:	add    rax,rbp
  41c64d:	sub    rax,0x88
  41c653:	mov    QWORD PTR [rax],0x4
  41c65a:	mov    eax,DWORD PTR [rbp-0x98]
  41c660:	add    eax,0x1
  41c663:	mov    DWORD PTR [rbp-0x98],eax
  41c669:	mov    rax,QWORD PTR [rbp-0xa0]
  41c670:	add    rax,0x4
  41c674:	mov    QWORD PTR [rbp-0xa0],rax
  41c67b:	mov    eax,DWORD PTR [rbp-0x98]
  41c681:	cdqe   
  41c683:	shl    rax,0x4
  41c687:	add    rax,rbp
  41c68a:	lea    rdx,[rax-0x90]
  41c691:	lea    rax,[rbp-0xc4]
  41c698:	mov    QWORD PTR [rdx],rax
  41c69b:	mov    eax,DWORD PTR [rbp-0x98]
  41c6a1:	cdqe   
  41c6a3:	shl    rax,0x4
  41c6a7:	add    rax,rbp
  41c6aa:	sub    rax,0x88
  41c6b0:	mov    QWORD PTR [rax],0x4
  41c6b7:	mov    eax,DWORD PTR [rbp-0x98]
  41c6bd:	add    eax,0x1
  41c6c0:	mov    DWORD PTR [rbp-0x98],eax
  41c6c6:	cmp    DWORD PTR [rbp-0xb8],0x0
  41c6cd:	je     41c735 <flatcc_builder_create_buffer@@Base+0x2c2>
  41c6cf:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c6d6:	mov    eax,DWORD PTR [rbp-0xb8]
  41c6dc:	add    rax,rdx
  41c6df:	mov    QWORD PTR [rbp-0xa0],rax
  41c6e6:	mov    eax,DWORD PTR [rbp-0x98]
  41c6ec:	cdqe   
  41c6ee:	shl    rax,0x4
  41c6f2:	add    rax,rbp
  41c6f5:	lea    rdx,[rax-0x90]
  41c6fc:	lea    rax,[rbp-0xbc]
  41c703:	mov    QWORD PTR [rdx],rax
  41c706:	mov    edx,DWORD PTR [rbp-0x98]
  41c70c:	mov    eax,DWORD PTR [rbp-0xb8]
  41c712:	movsxd rdx,edx
  41c715:	shl    rdx,0x4
  41c719:	add    rdx,rbp
  41c71c:	sub    rdx,0x88
  41c723:	mov    QWORD PTR [rdx],rax
  41c726:	mov    eax,DWORD PTR [rbp-0x98]
  41c72c:	add    eax,0x1
  41c72f:	mov    DWORD PTR [rbp-0x98],eax
  41c735:	cmp    DWORD PTR [rbp-0xac],0x0
  41c73c:	je     41c7a3 <flatcc_builder_create_buffer@@Base+0x330>
  41c73e:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c745:	mov    eax,DWORD PTR [rbp-0xac]
  41c74b:	add    rax,rdx
  41c74e:	mov    QWORD PTR [rbp-0xa0],rax
  41c755:	mov    eax,DWORD PTR [rbp-0x98]
  41c75b:	cdqe   
  41c75d:	shl    rax,0x4
  41c761:	add    rax,rbp
  41c764:	sub    rax,0x90
  41c76a:	mov    rdx,0x439f80
  41c771:	mov    QWORD PTR [rax],rdx
  41c774:	mov    edx,DWORD PTR [rbp-0x98]
  41c77a:	mov    eax,DWORD PTR [rbp-0xac]
  41c780:	movsxd rdx,edx
  41c783:	shl    rdx,0x4
  41c787:	add    rdx,rbp
  41c78a:	sub    rdx,0x88
  41c791:	mov    QWORD PTR [rdx],rax
  41c794:	mov    eax,DWORD PTR [rbp-0x98]
  41c79a:	add    eax,0x1
  41c79d:	mov    DWORD PTR [rbp-0x98],eax
  41c7a3:	mov    rax,QWORD PTR [rbp-0xd8]
  41c7aa:	mov    eax,DWORD PTR [rax+0xf0]
  41c7b0:	mov    edx,eax
  41c7b2:	mov    rax,QWORD PTR [rbp-0xa0]
  41c7b9:	sub    edx,eax
  41c7bb:	mov    eax,edx
  41c7bd:	cmp    DWORD PTR [rbp-0xb4],0x0
  41c7c4:	jne    41c7cf <flatcc_builder_create_buffer@@Base+0x35c>
  41c7c6:	cmp    DWORD PTR [rbp-0xb0],0x0
  41c7cd:	je     41c7d6 <flatcc_builder_create_buffer@@Base+0x363>
  41c7cf:	mov    edx,0x4
  41c7d4:	jmp    41c7db <flatcc_builder_create_buffer@@Base+0x368>
  41c7d6:	mov    edx,0x0
  41c7db:	add    eax,edx
  41c7dd:	mov    DWORD PTR [rbp-0xa8],eax
  41c7e3:	cmp    DWORD PTR [rbp-0xb4],0x0
  41c7ea:	je     41c80e <flatcc_builder_create_buffer@@Base+0x39b>
  41c7ec:	mov    rax,QWORD PTR [rbp-0xd8]
  41c7f3:	mov    eax,DWORD PTR [rax+0xf8]
  41c7f9:	sub    eax,DWORD PTR [rbp-0xa8]
  41c7ff:	mov    edi,eax
  41c801:	call   41ab82 <main@@Base+0x10e3>
  41c806:	mov    DWORD PTR [rbp-0xc0],eax
  41c80c:	jmp    41c82e <flatcc_builder_create_buffer@@Base+0x3bb>
  41c80e:	mov    rax,QWORD PTR [rbp-0xd8]
  41c815:	mov    eax,DWORD PTR [rax+0xf4]
  41c81b:	sub    eax,DWORD PTR [rbp-0xa8]
  41c821:	mov    edi,eax
  41c823:	call   41ab82 <main@@Base+0x10e3>
  41c828:	mov    DWORD PTR [rbp-0xc0],eax
  41c82e:	mov    eax,DWORD PTR [rbp-0xe8]
  41c834:	sub    eax,DWORD PTR [rbp-0xa8]
  41c83a:	mov    edi,eax
  41c83c:	call   41ab82 <main@@Base+0x10e3>
  41c841:	mov    DWORD PTR [rbp-0xc4],eax
  41c847:	lea    rdx,[rbp-0xa0]
  41c84e:	mov    rax,QWORD PTR [rbp-0xd8]
  41c855:	mov    rsi,rdx
  41c858:	mov    rdi,rax
  41c85b:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41c860:	mov    DWORD PTR [rbp-0xa4],eax
  41c866:	cmp    DWORD PTR [rbp-0xa4],0x0
  41c86d:	jne    41c88e <flatcc_builder_create_buffer@@Base+0x41b>
  41c86f:	lea    rcx,[rip+0x1de2a]        # 43a6a0 <flatcc_builder_padding_base@@Base+0x720>
  41c876:	mov    edx,0x304
  41c87b:	lea    rsi,[rip+0x1d8fe]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41c882:	lea    rdi,[rip+0x1d957]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41c889:	call   405080 <__assert_fail@plt>
  41c88e:	mov    eax,DWORD PTR [rbp-0xa4]
  41c894:	mov    rsi,QWORD PTR [rbp-0x8]
  41c898:	xor    rsi,QWORD PTR fs:0x28
  41c8a1:	je     41c8a8 <flatcc_builder_create_buffer@@Base+0x435>
  41c8a3:	call   405070 <__stack_chk_fail@plt>
  41c8a8:	leave  
  41c8a9:	ret    

000000000041c8aa <flatcc_builder_create_struct@@Base>:
  41c8aa:	push   rbp
  41c8ab:	mov    rbp,rsp
  41c8ae:	sub    rsp,0xd0
  41c8b5:	mov    QWORD PTR [rbp-0xb8],rdi
  41c8bc:	mov    QWORD PTR [rbp-0xc0],rsi
  41c8c3:	mov    QWORD PTR [rbp-0xc8],rdx
  41c8ca:	mov    eax,ecx
  41c8cc:	mov    WORD PTR [rbp-0xcc],ax
  41c8d3:	mov    rax,QWORD PTR fs:0x28
  41c8dc:	mov    QWORD PTR [rbp-0x8],rax
  41c8e0:	xor    eax,eax
  41c8e2:	cmp    WORD PTR [rbp-0xcc],0x0
  41c8ea:	jne    41c90b <flatcc_builder_create_struct@@Base+0x61>
  41c8ec:	lea    rcx,[rip+0x1ddcd]        # 43a6c0 <flatcc_builder_padding_base@@Base+0x740>
  41c8f3:	mov    edx,0x30f
  41c8f8:	lea    rsi,[rip+0x1d881]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41c8ff:	lea    rdi,[rip+0x1d939]        # 43a23f <flatcc_builder_padding_base@@Base+0x2bf>
  41c906:	call   405080 <__assert_fail@plt>
  41c90b:	movzx  edx,WORD PTR [rbp-0xcc]
  41c912:	mov    rax,QWORD PTR [rbp-0xb8]
  41c919:	mov    esi,edx
  41c91b:	mov    rdi,rax
  41c91e:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41c923:	movzx  edx,WORD PTR [rbp-0xcc]
  41c92a:	mov    rax,QWORD PTR [rbp-0xc8]
  41c931:	mov    ecx,eax
  41c933:	mov    rax,QWORD PTR [rbp-0xb8]
  41c93a:	mov    esi,ecx
  41c93c:	mov    rdi,rax
  41c93f:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41c944:	mov    eax,eax
  41c946:	mov    QWORD PTR [rbp-0xa8],rax
  41c94d:	mov    QWORD PTR [rbp-0xa0],0x0
  41c958:	mov    DWORD PTR [rbp-0x98],0x0
  41c962:	cmp    QWORD PTR [rbp-0xc8],0x0
  41c96a:	je     41c9d3 <flatcc_builder_create_struct@@Base+0x129>
  41c96c:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c973:	mov    rax,QWORD PTR [rbp-0xc8]
  41c97a:	add    rax,rdx
  41c97d:	mov    QWORD PTR [rbp-0xa0],rax
  41c984:	mov    eax,DWORD PTR [rbp-0x98]
  41c98a:	cdqe   
  41c98c:	shl    rax,0x4
  41c990:	add    rax,rbp
  41c993:	lea    rdx,[rax-0x90]
  41c99a:	mov    rax,QWORD PTR [rbp-0xc0]
  41c9a1:	mov    QWORD PTR [rdx],rax
  41c9a4:	mov    eax,DWORD PTR [rbp-0x98]
  41c9aa:	cdqe   
  41c9ac:	shl    rax,0x4
  41c9b0:	add    rax,rbp
  41c9b3:	lea    rdx,[rax-0x88]
  41c9ba:	mov    rax,QWORD PTR [rbp-0xc8]
  41c9c1:	mov    QWORD PTR [rdx],rax
  41c9c4:	mov    eax,DWORD PTR [rbp-0x98]
  41c9ca:	add    eax,0x1
  41c9cd:	mov    DWORD PTR [rbp-0x98],eax
  41c9d3:	cmp    QWORD PTR [rbp-0xa8],0x0
  41c9db:	je     41ca43 <flatcc_builder_create_struct@@Base+0x199>
  41c9dd:	mov    rdx,QWORD PTR [rbp-0xa0]
  41c9e4:	mov    rax,QWORD PTR [rbp-0xa8]
  41c9eb:	add    rax,rdx
  41c9ee:	mov    QWORD PTR [rbp-0xa0],rax
  41c9f5:	mov    eax,DWORD PTR [rbp-0x98]
  41c9fb:	cdqe   
  41c9fd:	shl    rax,0x4
  41ca01:	add    rax,rbp
  41ca04:	sub    rax,0x90
  41ca0a:	mov    rdx,0x439f80
  41ca11:	mov    QWORD PTR [rax],rdx
  41ca14:	mov    eax,DWORD PTR [rbp-0x98]
  41ca1a:	cdqe   
  41ca1c:	shl    rax,0x4
  41ca20:	add    rax,rbp
  41ca23:	lea    rdx,[rax-0x88]
  41ca2a:	mov    rax,QWORD PTR [rbp-0xa8]
  41ca31:	mov    QWORD PTR [rdx],rax
  41ca34:	mov    eax,DWORD PTR [rbp-0x98]
  41ca3a:	add    eax,0x1
  41ca3d:	mov    DWORD PTR [rbp-0x98],eax
  41ca43:	lea    rdx,[rbp-0xa0]
  41ca4a:	mov    rax,QWORD PTR [rbp-0xb8]
  41ca51:	mov    rsi,rdx
  41ca54:	mov    rdi,rax
  41ca57:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41ca5c:	mov    rcx,QWORD PTR [rbp-0x8]
  41ca60:	xor    rcx,QWORD PTR fs:0x28
  41ca69:	je     41ca70 <flatcc_builder_create_struct@@Base+0x1c6>
  41ca6b:	call   405070 <__stack_chk_fail@plt>
  41ca70:	leave  
  41ca71:	ret    

000000000041ca72 <flatcc_builder_start_buffer@@Base>:
  41ca72:	push   rbp
  41ca73:	mov    rbp,rsp
  41ca76:	sub    rsp,0x20
  41ca7a:	mov    QWORD PTR [rbp-0x8],rdi
  41ca7e:	mov    QWORD PTR [rbp-0x10],rsi
  41ca82:	mov    eax,edx
  41ca84:	mov    DWORD PTR [rbp-0x18],ecx
  41ca87:	mov    WORD PTR [rbp-0x14],ax
  41ca8b:	mov    rax,QWORD PTR [rbp-0x8]
  41ca8f:	movzx  eax,WORD PTR [rax+0xe8]
  41ca96:	movzx  edx,ax
  41ca99:	mov    rax,QWORD PTR [rbp-0x8]
  41ca9d:	mov    esi,edx
  41ca9f:	mov    rdi,rax
  41caa2:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41caa7:	test   eax,eax
  41caa9:	je     41cab5 <flatcc_builder_start_buffer@@Base+0x43>
  41caab:	mov    eax,0xffffffff
  41cab0:	jmp    41cbb9 <flatcc_builder_start_buffer@@Base+0x147>
  41cab5:	mov    rax,QWORD PTR [rbp-0x8]
  41cab9:	mov    WORD PTR [rax+0xe8],0x1
  41cac2:	mov    rax,QWORD PTR [rbp-0x8]
  41cac6:	mov    rax,QWORD PTR [rax+0x30]
  41caca:	mov    rdx,QWORD PTR [rbp-0x8]
  41cace:	movzx  edx,WORD PTR [rdx+0xec]
  41cad5:	mov    WORD PTR [rax+0x22],dx
  41cad9:	mov    rax,QWORD PTR [rbp-0x8]
  41cadd:	movzx  edx,WORD PTR [rbp-0x14]
  41cae1:	mov    WORD PTR [rax+0xec],dx
  41cae8:	mov    rax,QWORD PTR [rbp-0x8]
  41caec:	mov    rax,QWORD PTR [rax+0x30]
  41caf0:	mov    rdx,QWORD PTR [rbp-0x8]
  41caf4:	movzx  edx,WORD PTR [rdx+0x10c]
  41cafb:	mov    WORD PTR [rax+0x20],dx
  41caff:	mov    eax,DWORD PTR [rbp-0x18]
  41cb02:	mov    edx,eax
  41cb04:	mov    rax,QWORD PTR [rbp-0x8]
  41cb08:	mov    WORD PTR [rax+0x10c],dx
  41cb0f:	mov    rax,QWORD PTR [rbp-0x8]
  41cb13:	mov    rax,QWORD PTR [rax+0x30]
  41cb17:	mov    rdx,QWORD PTR [rbp-0x8]
  41cb1b:	mov    edx,DWORD PTR [rdx+0xf8]
  41cb21:	mov    DWORD PTR [rax+0x14],edx
  41cb24:	mov    rax,QWORD PTR [rbp-0x8]
  41cb28:	mov    rax,QWORD PTR [rax+0x30]
  41cb2c:	mov    rdx,QWORD PTR [rbp-0x8]
  41cb30:	mov    edx,DWORD PTR [rdx+0x100]
  41cb36:	mov    DWORD PTR [rax+0x1c],edx
  41cb39:	mov    rax,QWORD PTR [rbp-0x8]
  41cb3d:	mov    edx,DWORD PTR [rax+0xf0]
  41cb43:	mov    rax,QWORD PTR [rbp-0x8]
  41cb47:	mov    DWORD PTR [rax+0xf8],edx
  41cb4d:	mov    rax,QWORD PTR [rbp-0x8]
  41cb51:	mov    eax,DWORD PTR [rax+0xfc]
  41cb57:	lea    ecx,[rax+0x1]
  41cb5a:	mov    rdx,QWORD PTR [rbp-0x8]
  41cb5e:	mov    DWORD PTR [rdx+0xfc],ecx
  41cb64:	mov    rdx,QWORD PTR [rbp-0x8]
  41cb68:	mov    DWORD PTR [rdx+0x100],eax
  41cb6e:	mov    rax,QWORD PTR [rbp-0x8]
  41cb72:	mov    rax,QWORD PTR [rax+0x30]
  41cb76:	mov    rdx,QWORD PTR [rbp-0x8]
  41cb7a:	mov    edx,DWORD PTR [rdx+0x110]
  41cb80:	mov    DWORD PTR [rax+0x10],edx
  41cb83:	cmp    QWORD PTR [rbp-0x10],0x0
  41cb88:	je     41cb90 <flatcc_builder_start_buffer@@Base+0x11e>
  41cb8a:	mov    rax,QWORD PTR [rbp-0x10]
  41cb8e:	jmp    41cb97 <flatcc_builder_start_buffer@@Base+0x125>
  41cb90:	mov    rax,0x439f80
  41cb97:	mov    rdx,QWORD PTR [rbp-0x8]
  41cb9b:	add    rdx,0x110
  41cba2:	mov    eax,DWORD PTR [rax]
  41cba4:	mov    DWORD PTR [rdx],eax
  41cba6:	mov    rax,QWORD PTR [rbp-0x8]
  41cbaa:	mov    rax,QWORD PTR [rax+0x30]
  41cbae:	mov    WORD PTR [rax+0xe],0x1
  41cbb4:	mov    eax,0x0
  41cbb9:	leave  
  41cbba:	ret    

000000000041cbbb <flatcc_builder_end_buffer@@Base>:
  41cbbb:	push   rbp
  41cbbc:	mov    rbp,rsp
  41cbbf:	sub    rsp,0x20
  41cbc3:	mov    QWORD PTR [rbp-0x18],rdi
  41cbc7:	mov    DWORD PTR [rbp-0x1c],esi
  41cbca:	mov    rax,QWORD PTR [rbp-0x18]
  41cbce:	movzx  eax,WORD PTR [rax+0x10c]
  41cbd5:	movzx  eax,ax
  41cbd8:	and    eax,0x2
  41cbdb:	mov    DWORD PTR [rbp-0x8],eax
  41cbde:	mov    rax,QWORD PTR [rbp-0x18]
  41cbe2:	mov    eax,DWORD PTR [rax+0x100]
  41cbe8:	test   eax,eax
  41cbea:	setne  al
  41cbed:	movzx  eax,al
  41cbf0:	or     DWORD PTR [rbp-0x8],eax
  41cbf3:	mov    rax,QWORD PTR [rbp-0x18]
  41cbf7:	mov    rax,QWORD PTR [rax+0x30]
  41cbfb:	movzx  eax,WORD PTR [rax+0xe]
  41cbff:	cmp    ax,0x1
  41cc03:	je     41cc24 <flatcc_builder_end_buffer@@Base+0x69>
  41cc05:	lea    rcx,[rip+0x1dad4]        # 43a6e0 <flatcc_builder_padding_base@@Base+0x760>
  41cc0c:	mov    edx,0x346
  41cc11:	lea    rsi,[rip+0x1d568]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41cc18:	lea    rdi,[rip+0x1d631]        # 43a250 <flatcc_builder_padding_base@@Base+0x2d0>
  41cc1f:	call   405080 <__assert_fail@plt>
  41cc24:	mov    rax,QWORD PTR [rbp-0x18]
  41cc28:	movzx  eax,WORD PTR [rax+0xec]
  41cc2f:	movzx  edx,ax
  41cc32:	mov    rax,QWORD PTR [rbp-0x18]
  41cc36:	mov    esi,edx
  41cc38:	mov    rdi,rax
  41cc3b:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41cc40:	mov    rax,QWORD PTR [rbp-0x18]
  41cc44:	movzx  eax,WORD PTR [rax+0xe8]
  41cc4b:	movzx  edi,ax
  41cc4e:	mov    rax,QWORD PTR [rbp-0x18]
  41cc52:	movzx  eax,WORD PTR [rax+0xec]
  41cc59:	movzx  edx,ax
  41cc5c:	mov    rax,QWORD PTR [rbp-0x18]
  41cc60:	lea    rsi,[rax+0x110]
  41cc67:	mov    r8d,DWORD PTR [rbp-0x8]
  41cc6b:	mov    ecx,DWORD PTR [rbp-0x1c]
  41cc6e:	mov    rax,QWORD PTR [rbp-0x18]
  41cc72:	mov    r9d,r8d
  41cc75:	mov    r8d,edi
  41cc78:	mov    rdi,rax
  41cc7b:	call   41c473 <flatcc_builder_create_buffer@@Base>
  41cc80:	mov    DWORD PTR [rbp-0x4],eax
  41cc83:	cmp    DWORD PTR [rbp-0x4],0x0
  41cc87:	jne    41cc90 <flatcc_builder_end_buffer@@Base+0xd5>
  41cc89:	mov    eax,0x0
  41cc8e:	jmp    41ccf5 <flatcc_builder_end_buffer@@Base+0x13a>
  41cc90:	mov    rax,QWORD PTR [rbp-0x18]
  41cc94:	mov    rax,QWORD PTR [rax+0x30]
  41cc98:	mov    edx,DWORD PTR [rax+0x14]
  41cc9b:	mov    rax,QWORD PTR [rbp-0x18]
  41cc9f:	mov    DWORD PTR [rax+0xf8],edx
  41cca5:	mov    rax,QWORD PTR [rbp-0x18]
  41cca9:	mov    rax,QWORD PTR [rax+0x30]
  41ccad:	mov    edx,DWORD PTR [rax+0x1c]
  41ccb0:	mov    rax,QWORD PTR [rbp-0x18]
  41ccb4:	mov    DWORD PTR [rax+0x100],edx
  41ccba:	mov    rax,QWORD PTR [rbp-0x18]
  41ccbe:	mov    rax,QWORD PTR [rax+0x30]
  41ccc2:	mov    edx,DWORD PTR [rax+0x10]
  41ccc5:	mov    rax,QWORD PTR [rbp-0x18]
  41ccc9:	mov    DWORD PTR [rax+0x110],edx
  41cccf:	mov    rax,QWORD PTR [rbp-0x18]
  41ccd3:	mov    rax,QWORD PTR [rax+0x30]
  41ccd7:	movzx  edx,WORD PTR [rax+0x20]
  41ccdb:	mov    rax,QWORD PTR [rbp-0x18]
  41ccdf:	mov    WORD PTR [rax+0x10c],dx
  41cce6:	mov    rax,QWORD PTR [rbp-0x18]
  41ccea:	mov    rdi,rax
  41cced:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41ccf2:	mov    eax,DWORD PTR [rbp-0x4]
  41ccf5:	leave  
  41ccf6:	ret    

000000000041ccf7 <flatcc_builder_start_struct@@Base>:
  41ccf7:	push   rbp
  41ccf8:	mov    rbp,rsp
  41ccfb:	sub    rsp,0x20
  41ccff:	mov    QWORD PTR [rbp-0x8],rdi
  41cd03:	mov    QWORD PTR [rbp-0x10],rsi
  41cd07:	mov    eax,edx
  41cd09:	mov    WORD PTR [rbp-0x14],ax
  41cd0d:	movzx  edx,WORD PTR [rbp-0x14]
  41cd11:	mov    rax,QWORD PTR [rbp-0x8]
  41cd15:	mov    esi,edx
  41cd17:	mov    rdi,rax
  41cd1a:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41cd1f:	test   eax,eax
  41cd21:	je     41cd2a <flatcc_builder_start_struct@@Base+0x33>
  41cd23:	mov    eax,0x0
  41cd28:	jmp    41cd5d <flatcc_builder_start_struct@@Base+0x66>
  41cd2a:	mov    rax,QWORD PTR [rbp-0x8]
  41cd2e:	mov    rax,QWORD PTR [rax+0x30]
  41cd32:	mov    WORD PTR [rax+0xe],0x2
  41cd38:	mov    rax,QWORD PTR [rbp-0x8]
  41cd3c:	mov    esi,0xfffffffc
  41cd41:	mov    rdi,rax
  41cd44:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41cd49:	mov    rax,QWORD PTR [rbp-0x10]
  41cd4d:	mov    edx,eax
  41cd4f:	mov    rax,QWORD PTR [rbp-0x8]
  41cd53:	mov    esi,edx
  41cd55:	mov    rdi,rax
  41cd58:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41cd5d:	leave  
  41cd5e:	ret    

000000000041cd5f <flatcc_builder_struct_edit@@Base>:
  41cd5f:	push   rbp
  41cd60:	mov    rbp,rsp
  41cd63:	mov    QWORD PTR [rbp-0x8],rdi
  41cd67:	mov    rax,QWORD PTR [rbp-0x8]
  41cd6b:	mov    rax,QWORD PTR [rax+0x18]
  41cd6f:	pop    rbp
  41cd70:	ret    

000000000041cd71 <flatcc_builder_end_struct@@Base>:
  41cd71:	push   rbp
  41cd72:	mov    rbp,rsp
  41cd75:	sub    rsp,0x20
  41cd79:	mov    QWORD PTR [rbp-0x18],rdi
  41cd7d:	mov    rax,QWORD PTR [rbp-0x18]
  41cd81:	mov    rax,QWORD PTR [rax+0x30]
  41cd85:	movzx  eax,WORD PTR [rax+0xe]
  41cd89:	cmp    ax,0x2
  41cd8d:	je     41cdae <flatcc_builder_end_struct@@Base+0x3d>
  41cd8f:	lea    rcx,[rip+0x1d96a]        # 43a700 <flatcc_builder_padding_base@@Base+0x780>
  41cd96:	mov    edx,0x368
  41cd9b:	lea    rsi,[rip+0x1d3de]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41cda2:	lea    rdi,[rip+0x1d4d7]        # 43a280 <flatcc_builder_padding_base@@Base+0x300>
  41cda9:	call   405080 <__assert_fail@plt>
  41cdae:	mov    rax,QWORD PTR [rbp-0x18]
  41cdb2:	movzx  eax,WORD PTR [rax+0xea]
  41cdb9:	movzx  edx,ax
  41cdbc:	mov    rax,QWORD PTR [rbp-0x18]
  41cdc0:	mov    eax,DWORD PTR [rax+0x20]
  41cdc3:	mov    edi,eax
  41cdc5:	mov    rax,QWORD PTR [rbp-0x18]
  41cdc9:	mov    rsi,QWORD PTR [rax+0x18]
  41cdcd:	mov    rax,QWORD PTR [rbp-0x18]
  41cdd1:	mov    ecx,edx
  41cdd3:	mov    rdx,rdi
  41cdd6:	mov    rdi,rax
  41cdd9:	call   41c8aa <flatcc_builder_create_struct@@Base>
  41cdde:	mov    DWORD PTR [rbp-0x4],eax
  41cde1:	cmp    DWORD PTR [rbp-0x4],0x0
  41cde5:	jne    41cdee <flatcc_builder_end_struct@@Base+0x7d>
  41cde7:	mov    eax,0x0
  41cdec:	jmp    41cdfd <flatcc_builder_end_struct@@Base+0x8c>
  41cdee:	mov    rax,QWORD PTR [rbp-0x18]
  41cdf2:	mov    rdi,rax
  41cdf5:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41cdfa:	mov    eax,DWORD PTR [rbp-0x4]
  41cdfd:	leave  
  41cdfe:	ret    
  41cdff:	push   rbp
  41ce00:	mov    rbp,rsp
  41ce03:	sub    rsp,0x20
  41ce07:	mov    QWORD PTR [rbp-0x18],rdi
  41ce0b:	mov    DWORD PTR [rbp-0x1c],esi
  41ce0e:	mov    DWORD PTR [rbp-0x20],edx
  41ce11:	mov    rax,QWORD PTR [rbp-0x18]
  41ce15:	mov    rax,QWORD PTR [rax+0x30]
  41ce19:	mov    eax,DWORD PTR [rax+0x14]
  41ce1c:	mov    DWORD PTR [rbp-0x8],eax
  41ce1f:	mov    edx,DWORD PTR [rbp-0x8]
  41ce22:	mov    eax,DWORD PTR [rbp-0x1c]
  41ce25:	add    eax,edx
  41ce27:	mov    DWORD PTR [rbp-0x4],eax
  41ce2a:	mov    eax,DWORD PTR [rbp-0x8]
  41ce2d:	cmp    eax,DWORD PTR [rbp-0x4]
  41ce30:	ja     41ce3a <flatcc_builder_end_struct@@Base+0xc9>
  41ce32:	mov    eax,DWORD PTR [rbp-0x4]
  41ce35:	cmp    eax,DWORD PTR [rbp-0x20]
  41ce38:	jbe    41ce70 <flatcc_builder_end_struct@@Base+0xff>
  41ce3a:	mov    eax,DWORD PTR [rbp-0x8]
  41ce3d:	cmp    eax,DWORD PTR [rbp-0x4]
  41ce40:	ja     41ce4a <flatcc_builder_end_struct@@Base+0xd9>
  41ce42:	mov    eax,DWORD PTR [rbp-0x4]
  41ce45:	cmp    eax,DWORD PTR [rbp-0x20]
  41ce48:	jbe    41ce69 <flatcc_builder_end_struct@@Base+0xf8>
  41ce4a:	lea    rcx,[rip+0x1d8cf]        # 43a720 <flatcc_builder_padding_base@@Base+0x7a0>
  41ce51:	mov    edx,0x37c
  41ce56:	lea    rsi,[rip+0x1d323]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ce5d:	lea    rdi,[rip+0x1d448]        # 43a2ac <flatcc_builder_padding_base@@Base+0x32c>
  41ce64:	call   405080 <__assert_fail@plt>
  41ce69:	mov    eax,0xffffffff
  41ce6e:	jmp    41ce83 <flatcc_builder_end_struct@@Base+0x112>
  41ce70:	mov    rax,QWORD PTR [rbp-0x18]
  41ce74:	mov    rax,QWORD PTR [rax+0x30]
  41ce78:	mov    edx,DWORD PTR [rbp-0x4]
  41ce7b:	mov    DWORD PTR [rax+0x14],edx
  41ce7e:	mov    eax,0x0
  41ce83:	leave  
  41ce84:	ret    

000000000041ce85 <flatcc_builder_extend_vector@@Base>:
  41ce85:	push   rbp
  41ce86:	mov    rbp,rsp
  41ce89:	sub    rsp,0x10
  41ce8d:	mov    QWORD PTR [rbp-0x8],rdi
  41ce91:	mov    QWORD PTR [rbp-0x10],rsi
  41ce95:	mov    rax,QWORD PTR [rbp-0x8]
  41ce99:	mov    rax,QWORD PTR [rax+0x30]
  41ce9d:	mov    edx,DWORD PTR [rax+0x18]
  41cea0:	mov    rax,QWORD PTR [rbp-0x10]
  41cea4:	mov    ecx,eax
  41cea6:	mov    rax,QWORD PTR [rbp-0x8]
  41ceaa:	mov    esi,ecx
  41ceac:	mov    rdi,rax
  41ceaf:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41ceb4:	test   eax,eax
  41ceb6:	je     41cebf <flatcc_builder_extend_vector@@Base+0x3a>
  41ceb8:	mov    eax,0x0
  41cebd:	jmp    41cedf <flatcc_builder_extend_vector@@Base+0x5a>
  41cebf:	mov    rax,QWORD PTR [rbp-0x8]
  41cec3:	mov    rax,QWORD PTR [rax+0x30]
  41cec7:	mov    eax,DWORD PTR [rax+0x10]
  41ceca:	mov    rdx,QWORD PTR [rbp-0x10]
  41cece:	imul   edx,eax
  41ced1:	mov    rax,QWORD PTR [rbp-0x8]
  41ced5:	mov    esi,edx
  41ced7:	mov    rdi,rax
  41ceda:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41cedf:	leave  
  41cee0:	ret    

000000000041cee1 <flatcc_builder_vector_push@@Base>:
  41cee1:	push   rbp
  41cee2:	mov    rbp,rsp
  41cee5:	sub    rsp,0x10
  41cee9:	mov    QWORD PTR [rbp-0x8],rdi
  41ceed:	mov    QWORD PTR [rbp-0x10],rsi
  41cef1:	mov    rax,QWORD PTR [rbp-0x8]
  41cef5:	mov    rax,QWORD PTR [rax+0x30]
  41cef9:	movzx  eax,WORD PTR [rax+0xe]
  41cefd:	cmp    ax,0x4
  41cf01:	je     41cf22 <flatcc_builder_vector_push@@Base+0x41>
  41cf03:	lea    rcx,[rip+0x1d836]        # 43a740 <flatcc_builder_padding_base@@Base+0x7c0>
  41cf0a:	mov    edx,0x38b
  41cf0f:	lea    rsi,[rip+0x1d26a]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41cf16:	lea    rdi,[rip+0x1d3ab]        # 43a2c8 <flatcc_builder_padding_base@@Base+0x348>
  41cf1d:	call   405080 <__assert_fail@plt>
  41cf22:	mov    rax,QWORD PTR [rbp-0x8]
  41cf26:	mov    rax,QWORD PTR [rax+0x30]
  41cf2a:	mov    edx,DWORD PTR [rax+0x14]
  41cf2d:	mov    rax,QWORD PTR [rbp-0x8]
  41cf31:	mov    rax,QWORD PTR [rax+0x30]
  41cf35:	mov    eax,DWORD PTR [rax+0x18]
  41cf38:	cmp    edx,eax
  41cf3a:	jbe    41cf7c <flatcc_builder_vector_push@@Base+0x9b>
  41cf3c:	mov    rax,QWORD PTR [rbp-0x8]
  41cf40:	mov    rax,QWORD PTR [rax+0x30]
  41cf44:	mov    edx,DWORD PTR [rax+0x14]
  41cf47:	mov    rax,QWORD PTR [rbp-0x8]
  41cf4b:	mov    rax,QWORD PTR [rax+0x30]
  41cf4f:	mov    eax,DWORD PTR [rax+0x18]
  41cf52:	cmp    edx,eax
  41cf54:	jbe    41cf75 <flatcc_builder_vector_push@@Base+0x94>
  41cf56:	lea    rcx,[rip+0x1d7e3]        # 43a740 <flatcc_builder_padding_base@@Base+0x7c0>
  41cf5d:	mov    edx,0x38c
  41cf62:	lea    rsi,[rip+0x1d217]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41cf69:	lea    rdi,[rip+0x1d388]        # 43a2f8 <flatcc_builder_padding_base@@Base+0x378>
  41cf70:	call   405080 <__assert_fail@plt>
  41cf75:	mov    eax,0x0
  41cf7a:	jmp    41cfb3 <flatcc_builder_vector_push@@Base+0xd2>
  41cf7c:	mov    rax,QWORD PTR [rbp-0x8]
  41cf80:	mov    rax,QWORD PTR [rax+0x30]
  41cf84:	mov    rdx,QWORD PTR [rbp-0x8]
  41cf88:	mov    rdx,QWORD PTR [rdx+0x30]
  41cf8c:	mov    edx,DWORD PTR [rdx+0x14]
  41cf8f:	add    edx,0x1
  41cf92:	mov    DWORD PTR [rax+0x14],edx
  41cf95:	mov    rax,QWORD PTR [rbp-0x8]
  41cf99:	mov    rax,QWORD PTR [rax+0x30]
  41cf9d:	mov    edx,DWORD PTR [rax+0x10]
  41cfa0:	mov    rcx,QWORD PTR [rbp-0x10]
  41cfa4:	mov    rax,QWORD PTR [rbp-0x8]
  41cfa8:	mov    rsi,rcx
  41cfab:	mov    rdi,rax
  41cfae:	call   41af71 <flatcc_builder_default_alloc@@Base+0x329>
  41cfb3:	leave  
  41cfb4:	ret    

000000000041cfb5 <flatcc_builder_append_vector@@Base>:
  41cfb5:	push   rbp
  41cfb6:	mov    rbp,rsp
  41cfb9:	sub    rsp,0x20
  41cfbd:	mov    QWORD PTR [rbp-0x8],rdi
  41cfc1:	mov    QWORD PTR [rbp-0x10],rsi
  41cfc5:	mov    QWORD PTR [rbp-0x18],rdx
  41cfc9:	mov    rax,QWORD PTR [rbp-0x8]
  41cfcd:	mov    rax,QWORD PTR [rax+0x30]
  41cfd1:	movzx  eax,WORD PTR [rax+0xe]
  41cfd5:	cmp    ax,0x4
  41cfd9:	je     41cffa <flatcc_builder_append_vector@@Base+0x45>
  41cfdb:	lea    rcx,[rip+0x1d77e]        # 43a760 <flatcc_builder_padding_base@@Base+0x7e0>
  41cfe2:	mov    edx,0x393
  41cfe7:	lea    rsi,[rip+0x1d192]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41cfee:	lea    rdi,[rip+0x1d2d3]        # 43a2c8 <flatcc_builder_padding_base@@Base+0x348>
  41cff5:	call   405080 <__assert_fail@plt>
  41cffa:	mov    rax,QWORD PTR [rbp-0x8]
  41cffe:	mov    rax,QWORD PTR [rax+0x30]
  41d002:	mov    edx,DWORD PTR [rax+0x18]
  41d005:	mov    rax,QWORD PTR [rbp-0x18]
  41d009:	mov    ecx,eax
  41d00b:	mov    rax,QWORD PTR [rbp-0x8]
  41d00f:	mov    esi,ecx
  41d011:	mov    rdi,rax
  41d014:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41d019:	test   eax,eax
  41d01b:	je     41d024 <flatcc_builder_append_vector@@Base+0x6f>
  41d01d:	mov    eax,0x0
  41d022:	jmp    41d049 <flatcc_builder_append_vector@@Base+0x94>
  41d024:	mov    rax,QWORD PTR [rbp-0x8]
  41d028:	mov    rax,QWORD PTR [rax+0x30]
  41d02c:	mov    eax,DWORD PTR [rax+0x10]
  41d02f:	mov    rdx,QWORD PTR [rbp-0x18]
  41d033:	imul   edx,eax
  41d036:	mov    rcx,QWORD PTR [rbp-0x10]
  41d03a:	mov    rax,QWORD PTR [rbp-0x8]
  41d03e:	mov    rsi,rcx
  41d041:	mov    rdi,rax
  41d044:	call   41af71 <flatcc_builder_default_alloc@@Base+0x329>
  41d049:	leave  
  41d04a:	ret    

000000000041d04b <flatcc_builder_extend_offset_vector@@Base>:
  41d04b:	push   rbp
  41d04c:	mov    rbp,rsp
  41d04f:	sub    rsp,0x10
  41d053:	mov    QWORD PTR [rbp-0x8],rdi
  41d057:	mov    QWORD PTR [rbp-0x10],rsi
  41d05b:	mov    rax,QWORD PTR [rbp-0x10]
  41d05f:	mov    ecx,eax
  41d061:	mov    rax,QWORD PTR [rbp-0x8]
  41d065:	mov    edx,0x3fffffff
  41d06a:	mov    esi,ecx
  41d06c:	mov    rdi,rax
  41d06f:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41d074:	test   eax,eax
  41d076:	je     41d07f <flatcc_builder_extend_offset_vector@@Base+0x34>
  41d078:	mov    eax,0x0
  41d07d:	jmp    41d098 <flatcc_builder_extend_offset_vector@@Base+0x4d>
  41d07f:	mov    rax,QWORD PTR [rbp-0x10]
  41d083:	lea    edx,[rax*4+0x0]
  41d08a:	mov    rax,QWORD PTR [rbp-0x8]
  41d08e:	mov    esi,edx
  41d090:	mov    rdi,rax
  41d093:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41d098:	leave  
  41d099:	ret    

000000000041d09a <flatcc_builder_offset_vector_push@@Base>:
  41d09a:	push   rbp
  41d09b:	mov    rbp,rsp
  41d09e:	sub    rsp,0x20
  41d0a2:	mov    QWORD PTR [rbp-0x18],rdi
  41d0a6:	mov    DWORD PTR [rbp-0x1c],esi
  41d0a9:	mov    rax,QWORD PTR [rbp-0x18]
  41d0ad:	mov    rax,QWORD PTR [rax+0x30]
  41d0b1:	movzx  eax,WORD PTR [rax+0xe]
  41d0b5:	cmp    ax,0x5
  41d0b9:	je     41d0da <flatcc_builder_offset_vector_push@@Base+0x40>
  41d0bb:	lea    rcx,[rip+0x1d6be]        # 43a780 <flatcc_builder_padding_base@@Base+0x800>
  41d0c2:	mov    edx,0x3a6
  41d0c7:	lea    rsi,[rip+0x1d0b2]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d0ce:	lea    rdi,[rip+0x1d263]        # 43a338 <flatcc_builder_padding_base@@Base+0x3b8>
  41d0d5:	call   405080 <__assert_fail@plt>
  41d0da:	mov    rax,QWORD PTR [rbp-0x18]
  41d0de:	mov    rax,QWORD PTR [rax+0x30]
  41d0e2:	mov    eax,DWORD PTR [rax+0x14]
  41d0e5:	cmp    eax,0x3fffffff
  41d0ea:	jne    41d0f3 <flatcc_builder_offset_vector_push@@Base+0x59>
  41d0ec:	mov    eax,0x0
  41d0f1:	jmp    41d13c <flatcc_builder_offset_vector_push@@Base+0xa2>
  41d0f3:	mov    rax,QWORD PTR [rbp-0x18]
  41d0f7:	mov    rax,QWORD PTR [rax+0x30]
  41d0fb:	mov    rdx,QWORD PTR [rbp-0x18]
  41d0ff:	mov    rdx,QWORD PTR [rdx+0x30]
  41d103:	mov    edx,DWORD PTR [rdx+0x14]
  41d106:	add    edx,0x1
  41d109:	mov    DWORD PTR [rax+0x14],edx
  41d10c:	mov    rax,QWORD PTR [rbp-0x18]
  41d110:	mov    esi,0x4
  41d115:	mov    rdi,rax
  41d118:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41d11d:	mov    QWORD PTR [rbp-0x8],rax
  41d121:	cmp    QWORD PTR [rbp-0x8],0x0
  41d126:	jne    41d12f <flatcc_builder_offset_vector_push@@Base+0x95>
  41d128:	mov    eax,0x0
  41d12d:	jmp    41d13c <flatcc_builder_offset_vector_push@@Base+0xa2>
  41d12f:	mov    rax,QWORD PTR [rbp-0x8]
  41d133:	mov    edx,DWORD PTR [rbp-0x1c]
  41d136:	mov    DWORD PTR [rax],edx
  41d138:	mov    rax,QWORD PTR [rbp-0x8]
  41d13c:	leave  
  41d13d:	ret    

000000000041d13e <flatcc_builder_append_offset_vector@@Base>:
  41d13e:	push   rbp
  41d13f:	mov    rbp,rsp
  41d142:	sub    rsp,0x20
  41d146:	mov    QWORD PTR [rbp-0x8],rdi
  41d14a:	mov    QWORD PTR [rbp-0x10],rsi
  41d14e:	mov    QWORD PTR [rbp-0x18],rdx
  41d152:	mov    rax,QWORD PTR [rbp-0x8]
  41d156:	mov    rax,QWORD PTR [rax+0x30]
  41d15a:	movzx  eax,WORD PTR [rax+0xe]
  41d15e:	cmp    ax,0x5
  41d162:	je     41d183 <flatcc_builder_append_offset_vector@@Base+0x45>
  41d164:	lea    rcx,[rip+0x1d655]        # 43a7c0 <flatcc_builder_padding_base@@Base+0x840>
  41d16b:	mov    edx,0x3b4
  41d170:	lea    rsi,[rip+0x1d009]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d177:	lea    rdi,[rip+0x1d1ba]        # 43a338 <flatcc_builder_padding_base@@Base+0x3b8>
  41d17e:	call   405080 <__assert_fail@plt>
  41d183:	mov    rax,QWORD PTR [rbp-0x18]
  41d187:	mov    ecx,eax
  41d189:	mov    rax,QWORD PTR [rbp-0x8]
  41d18d:	mov    edx,0x3fffffff
  41d192:	mov    esi,ecx
  41d194:	mov    rdi,rax
  41d197:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41d19c:	test   eax,eax
  41d19e:	je     41d1a7 <flatcc_builder_append_offset_vector@@Base+0x69>
  41d1a0:	mov    eax,0x0
  41d1a5:	jmp    41d1c5 <flatcc_builder_append_offset_vector@@Base+0x87>
  41d1a7:	mov    rax,QWORD PTR [rbp-0x18]
  41d1ab:	lea    edx,[rax*4+0x0]
  41d1b2:	mov    rcx,QWORD PTR [rbp-0x10]
  41d1b6:	mov    rax,QWORD PTR [rbp-0x8]
  41d1ba:	mov    rsi,rcx
  41d1bd:	mov    rdi,rax
  41d1c0:	call   41af71 <flatcc_builder_default_alloc@@Base+0x329>
  41d1c5:	leave  
  41d1c6:	ret    

000000000041d1c7 <flatcc_builder_extend_string@@Base>:
  41d1c7:	push   rbp
  41d1c8:	mov    rbp,rsp
  41d1cb:	sub    rsp,0x10
  41d1cf:	mov    QWORD PTR [rbp-0x8],rdi
  41d1d3:	mov    QWORD PTR [rbp-0x10],rsi
  41d1d7:	mov    rax,QWORD PTR [rbp-0x8]
  41d1db:	mov    rax,QWORD PTR [rax+0x30]
  41d1df:	movzx  eax,WORD PTR [rax+0xe]
  41d1e3:	cmp    ax,0x6
  41d1e7:	je     41d208 <flatcc_builder_extend_string@@Base+0x41>
  41d1e9:	lea    rcx,[rip+0x1d600]        # 43a7f0 <flatcc_builder_padding_base@@Base+0x870>
  41d1f0:	mov    edx,0x3bd
  41d1f5:	lea    rsi,[rip+0x1cf84]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d1fc:	lea    rdi,[rip+0x1d16d]        # 43a370 <flatcc_builder_padding_base@@Base+0x3f0>
  41d203:	call   405080 <__assert_fail@plt>
  41d208:	mov    rax,QWORD PTR [rbp-0x10]
  41d20c:	mov    ecx,eax
  41d20e:	mov    rax,QWORD PTR [rbp-0x8]
  41d212:	mov    edx,0xffffffff
  41d217:	mov    esi,ecx
  41d219:	mov    rdi,rax
  41d21c:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41d221:	test   eax,eax
  41d223:	je     41d22c <flatcc_builder_extend_string@@Base+0x65>
  41d225:	mov    eax,0x0
  41d22a:	jmp    41d240 <flatcc_builder_extend_string@@Base+0x79>
  41d22c:	mov    rax,QWORD PTR [rbp-0x10]
  41d230:	mov    edx,eax
  41d232:	mov    rax,QWORD PTR [rbp-0x8]
  41d236:	mov    esi,edx
  41d238:	mov    rdi,rax
  41d23b:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41d240:	leave  
  41d241:	ret    

000000000041d242 <flatcc_builder_append_string@@Base>:
  41d242:	push   rbp
  41d243:	mov    rbp,rsp
  41d246:	sub    rsp,0x20
  41d24a:	mov    QWORD PTR [rbp-0x8],rdi
  41d24e:	mov    QWORD PTR [rbp-0x10],rsi
  41d252:	mov    QWORD PTR [rbp-0x18],rdx
  41d256:	mov    rax,QWORD PTR [rbp-0x8]
  41d25a:	mov    rax,QWORD PTR [rax+0x30]
  41d25e:	movzx  eax,WORD PTR [rax+0xe]
  41d262:	cmp    ax,0x6
  41d266:	je     41d287 <flatcc_builder_append_string@@Base+0x45>
  41d268:	lea    rcx,[rip+0x1d5a1]        # 43a810 <flatcc_builder_padding_base@@Base+0x890>
  41d26f:	mov    edx,0x3c6
  41d274:	lea    rsi,[rip+0x1cf05]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d27b:	lea    rdi,[rip+0x1d0ee]        # 43a370 <flatcc_builder_padding_base@@Base+0x3f0>
  41d282:	call   405080 <__assert_fail@plt>
  41d287:	mov    rax,QWORD PTR [rbp-0x18]
  41d28b:	mov    ecx,eax
  41d28d:	mov    rax,QWORD PTR [rbp-0x8]
  41d291:	mov    edx,0xffffffff
  41d296:	mov    esi,ecx
  41d298:	mov    rdi,rax
  41d29b:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41d2a0:	test   eax,eax
  41d2a2:	je     41d2ab <flatcc_builder_append_string@@Base+0x69>
  41d2a4:	mov    eax,0x0
  41d2a9:	jmp    41d2c4 <flatcc_builder_append_string@@Base+0x82>
  41d2ab:	mov    rax,QWORD PTR [rbp-0x18]
  41d2af:	mov    edx,eax
  41d2b1:	mov    rcx,QWORD PTR [rbp-0x10]
  41d2b5:	mov    rax,QWORD PTR [rbp-0x8]
  41d2b9:	mov    rsi,rcx
  41d2bc:	mov    rdi,rax
  41d2bf:	call   41af71 <flatcc_builder_default_alloc@@Base+0x329>
  41d2c4:	leave  
  41d2c5:	ret    

000000000041d2c6 <flatcc_builder_append_string_str@@Base>:
  41d2c6:	push   rbp
  41d2c7:	mov    rbp,rsp
  41d2ca:	sub    rsp,0x10
  41d2ce:	mov    QWORD PTR [rbp-0x8],rdi
  41d2d2:	mov    QWORD PTR [rbp-0x10],rsi
  41d2d6:	mov    rax,QWORD PTR [rbp-0x10]
  41d2da:	mov    rdi,rax
  41d2dd:	call   405060 <strlen@plt>
  41d2e2:	mov    rdx,rax
  41d2e5:	mov    rcx,QWORD PTR [rbp-0x10]
  41d2e9:	mov    rax,QWORD PTR [rbp-0x8]
  41d2ed:	mov    rsi,rcx
  41d2f0:	mov    rdi,rax
  41d2f3:	call   41d242 <flatcc_builder_append_string@@Base>
  41d2f8:	leave  
  41d2f9:	ret    

000000000041d2fa <flatcc_builder_append_string_strn@@Base>:
  41d2fa:	push   rbp
  41d2fb:	mov    rbp,rsp
  41d2fe:	sub    rsp,0x20
  41d302:	mov    QWORD PTR [rbp-0x8],rdi
  41d306:	mov    QWORD PTR [rbp-0x10],rsi
  41d30a:	mov    QWORD PTR [rbp-0x18],rdx
  41d30e:	mov    rdx,QWORD PTR [rbp-0x18]
  41d312:	mov    rax,QWORD PTR [rbp-0x10]
  41d316:	mov    rsi,rdx
  41d319:	mov    rdi,rax
  41d31c:	call   41ac02 <main@@Base+0x1163>
  41d321:	mov    rdx,rax
  41d324:	mov    rcx,QWORD PTR [rbp-0x10]
  41d328:	mov    rax,QWORD PTR [rbp-0x8]
  41d32c:	mov    rsi,rcx
  41d32f:	mov    rdi,rax
  41d332:	call   41d242 <flatcc_builder_append_string@@Base>
  41d337:	leave  
  41d338:	ret    

000000000041d339 <flatcc_builder_truncate_vector@@Base>:
  41d339:	push   rbp
  41d33a:	mov    rbp,rsp
  41d33d:	sub    rsp,0x10
  41d341:	mov    QWORD PTR [rbp-0x8],rdi
  41d345:	mov    QWORD PTR [rbp-0x10],rsi
  41d349:	mov    rax,QWORD PTR [rbp-0x8]
  41d34d:	mov    rax,QWORD PTR [rax+0x30]
  41d351:	movzx  eax,WORD PTR [rax+0xe]
  41d355:	cmp    ax,0x4
  41d359:	je     41d37a <flatcc_builder_truncate_vector@@Base+0x41>
  41d35b:	lea    rcx,[rip+0x1d4ce]        # 43a830 <flatcc_builder_padding_base@@Base+0x8b0>
  41d362:	mov    edx,0x3d9
  41d367:	lea    rsi,[rip+0x1ce12]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d36e:	lea    rdi,[rip+0x1cf53]        # 43a2c8 <flatcc_builder_padding_base@@Base+0x348>
  41d375:	call   405080 <__assert_fail@plt>
  41d37a:	mov    rax,QWORD PTR [rbp-0x8]
  41d37e:	mov    rax,QWORD PTR [rax+0x30]
  41d382:	mov    eax,DWORD PTR [rax+0x14]
  41d385:	mov    eax,eax
  41d387:	cmp    rax,QWORD PTR [rbp-0x10]
  41d38b:	jae    41d3c6 <flatcc_builder_truncate_vector@@Base+0x8d>
  41d38d:	mov    rax,QWORD PTR [rbp-0x8]
  41d391:	mov    rax,QWORD PTR [rax+0x30]
  41d395:	mov    eax,DWORD PTR [rax+0x14]
  41d398:	mov    eax,eax
  41d39a:	cmp    rax,QWORD PTR [rbp-0x10]
  41d39e:	jae    41d3bf <flatcc_builder_truncate_vector@@Base+0x86>
  41d3a0:	lea    rcx,[rip+0x1d489]        # 43a830 <flatcc_builder_padding_base@@Base+0x8b0>
  41d3a7:	mov    edx,0x3da
  41d3ac:	lea    rsi,[rip+0x1cdcd]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d3b3:	lea    rdi,[rip+0x1cfe6]        # 43a3a0 <flatcc_builder_padding_base@@Base+0x420>
  41d3ba:	call   405080 <__assert_fail@plt>
  41d3bf:	mov    eax,0xffffffff
  41d3c4:	jmp    41d407 <flatcc_builder_truncate_vector@@Base+0xce>
  41d3c6:	mov    rax,QWORD PTR [rbp-0x8]
  41d3ca:	mov    rax,QWORD PTR [rax+0x30]
  41d3ce:	mov    rdx,QWORD PTR [rbp-0x8]
  41d3d2:	mov    rdx,QWORD PTR [rdx+0x30]
  41d3d6:	mov    edx,DWORD PTR [rdx+0x14]
  41d3d9:	mov    rcx,QWORD PTR [rbp-0x10]
  41d3dd:	sub    edx,ecx
  41d3df:	mov    DWORD PTR [rax+0x14],edx
  41d3e2:	mov    rax,QWORD PTR [rbp-0x8]
  41d3e6:	mov    rax,QWORD PTR [rax+0x30]
  41d3ea:	mov    eax,DWORD PTR [rax+0x10]
  41d3ed:	mov    rdx,QWORD PTR [rbp-0x10]
  41d3f1:	imul   edx,eax
  41d3f4:	mov    rax,QWORD PTR [rbp-0x8]
  41d3f8:	mov    esi,edx
  41d3fa:	mov    rdi,rax
  41d3fd:	call   41af25 <flatcc_builder_default_alloc@@Base+0x2dd>
  41d402:	mov    eax,0x0
  41d407:	leave  
  41d408:	ret    

000000000041d409 <flatcc_builder_truncate_offset_vector@@Base>:
  41d409:	push   rbp
  41d40a:	mov    rbp,rsp
  41d40d:	sub    rsp,0x10
  41d411:	mov    QWORD PTR [rbp-0x8],rdi
  41d415:	mov    QWORD PTR [rbp-0x10],rsi
  41d419:	mov    rax,QWORD PTR [rbp-0x8]
  41d41d:	mov    rax,QWORD PTR [rax+0x30]
  41d421:	movzx  eax,WORD PTR [rax+0xe]
  41d425:	cmp    ax,0x5
  41d429:	je     41d44a <flatcc_builder_truncate_offset_vector@@Base+0x41>
  41d42b:	lea    rcx,[rip+0x1d42e]        # 43a860 <flatcc_builder_padding_base@@Base+0x8e0>
  41d432:	mov    edx,0x3e2
  41d437:	lea    rsi,[rip+0x1cd42]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d43e:	lea    rdi,[rip+0x1cef3]        # 43a338 <flatcc_builder_padding_base@@Base+0x3b8>
  41d445:	call   405080 <__assert_fail@plt>
  41d44a:	mov    rax,QWORD PTR [rbp-0x8]
  41d44e:	mov    rax,QWORD PTR [rax+0x30]
  41d452:	mov    eax,DWORD PTR [rax+0x14]
  41d455:	mov    rdx,QWORD PTR [rbp-0x10]
  41d459:	cmp    eax,edx
  41d45b:	jae    41d496 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  41d45d:	mov    rax,QWORD PTR [rbp-0x8]
  41d461:	mov    rax,QWORD PTR [rax+0x30]
  41d465:	mov    eax,DWORD PTR [rax+0x14]
  41d468:	mov    rdx,QWORD PTR [rbp-0x10]
  41d46c:	cmp    eax,edx
  41d46e:	jae    41d48f <flatcc_builder_truncate_offset_vector@@Base+0x86>
  41d470:	lea    rcx,[rip+0x1d3e9]        # 43a860 <flatcc_builder_padding_base@@Base+0x8e0>
  41d477:	mov    edx,0x3e3
  41d47c:	lea    rsi,[rip+0x1ccfd]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d483:	lea    rdi,[rip+0x1cf3e]        # 43a3c8 <flatcc_builder_padding_base@@Base+0x448>
  41d48a:	call   405080 <__assert_fail@plt>
  41d48f:	mov    eax,0xffffffff
  41d494:	jmp    41d4d7 <flatcc_builder_truncate_offset_vector@@Base+0xce>
  41d496:	mov    rax,QWORD PTR [rbp-0x8]
  41d49a:	mov    rax,QWORD PTR [rax+0x30]
  41d49e:	mov    rdx,QWORD PTR [rbp-0x8]
  41d4a2:	mov    rdx,QWORD PTR [rdx+0x30]
  41d4a6:	mov    edx,DWORD PTR [rdx+0x14]
  41d4a9:	mov    rcx,QWORD PTR [rbp-0x10]
  41d4ad:	sub    edx,ecx
  41d4af:	mov    DWORD PTR [rax+0x14],edx
  41d4b2:	mov    rax,QWORD PTR [rbp-0x8]
  41d4b6:	mov    rax,QWORD PTR [rax+0x30]
  41d4ba:	mov    eax,DWORD PTR [rax+0x10]
  41d4bd:	mov    rdx,QWORD PTR [rbp-0x10]
  41d4c1:	imul   edx,eax
  41d4c4:	mov    rax,QWORD PTR [rbp-0x8]
  41d4c8:	mov    esi,edx
  41d4ca:	mov    rdi,rax
  41d4cd:	call   41af25 <flatcc_builder_default_alloc@@Base+0x2dd>
  41d4d2:	mov    eax,0x0
  41d4d7:	leave  
  41d4d8:	ret    

000000000041d4d9 <flatcc_builder_truncate_string@@Base>:
  41d4d9:	push   rbp
  41d4da:	mov    rbp,rsp
  41d4dd:	sub    rsp,0x10
  41d4e1:	mov    QWORD PTR [rbp-0x8],rdi
  41d4e5:	mov    QWORD PTR [rbp-0x10],rsi
  41d4e9:	mov    rax,QWORD PTR [rbp-0x8]
  41d4ed:	mov    rax,QWORD PTR [rax+0x30]
  41d4f1:	movzx  eax,WORD PTR [rax+0xe]
  41d4f5:	cmp    ax,0x6
  41d4f9:	je     41d51a <flatcc_builder_truncate_string@@Base+0x41>
  41d4fb:	lea    rcx,[rip+0x1d38e]        # 43a890 <flatcc_builder_padding_base@@Base+0x910>
  41d502:	mov    edx,0x3eb
  41d507:	lea    rsi,[rip+0x1cc72]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d50e:	lea    rdi,[rip+0x1ce5b]        # 43a370 <flatcc_builder_padding_base@@Base+0x3f0>
  41d515:	call   405080 <__assert_fail@plt>
  41d51a:	mov    rax,QWORD PTR [rbp-0x8]
  41d51e:	mov    rax,QWORD PTR [rax+0x30]
  41d522:	mov    eax,DWORD PTR [rax+0x14]
  41d525:	mov    eax,eax
  41d527:	cmp    rax,QWORD PTR [rbp-0x10]
  41d52b:	jae    41d566 <flatcc_builder_truncate_string@@Base+0x8d>
  41d52d:	mov    rax,QWORD PTR [rbp-0x8]
  41d531:	mov    rax,QWORD PTR [rax+0x30]
  41d535:	mov    eax,DWORD PTR [rax+0x14]
  41d538:	mov    eax,eax
  41d53a:	cmp    rax,QWORD PTR [rbp-0x10]
  41d53e:	jae    41d55f <flatcc_builder_truncate_string@@Base+0x86>
  41d540:	lea    rcx,[rip+0x1d349]        # 43a890 <flatcc_builder_padding_base@@Base+0x910>
  41d547:	mov    edx,0x3ec
  41d54c:	lea    rsi,[rip+0x1cc2d]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d553:	lea    rdi,[rip+0x1ceae]        # 43a408 <flatcc_builder_padding_base@@Base+0x488>
  41d55a:	call   405080 <__assert_fail@plt>
  41d55f:	mov    eax,0xffffffff
  41d564:	jmp    41d59b <flatcc_builder_truncate_string@@Base+0xc2>
  41d566:	mov    rax,QWORD PTR [rbp-0x8]
  41d56a:	mov    rax,QWORD PTR [rax+0x30]
  41d56e:	mov    rdx,QWORD PTR [rbp-0x8]
  41d572:	mov    rdx,QWORD PTR [rdx+0x30]
  41d576:	mov    edx,DWORD PTR [rdx+0x14]
  41d579:	mov    rcx,QWORD PTR [rbp-0x10]
  41d57d:	sub    edx,ecx
  41d57f:	mov    DWORD PTR [rax+0x14],edx
  41d582:	mov    rax,QWORD PTR [rbp-0x10]
  41d586:	mov    edx,eax
  41d588:	mov    rax,QWORD PTR [rbp-0x8]
  41d58c:	mov    esi,edx
  41d58e:	mov    rdi,rax
  41d591:	call   41af25 <flatcc_builder_default_alloc@@Base+0x2dd>
  41d596:	mov    eax,0x0
  41d59b:	leave  
  41d59c:	ret    

000000000041d59d <flatcc_builder_start_vector@@Base>:
  41d59d:	push   rbp
  41d59e:	mov    rbp,rsp
  41d5a1:	sub    rsp,0x20
  41d5a5:	mov    QWORD PTR [rbp-0x8],rdi
  41d5a9:	mov    QWORD PTR [rbp-0x10],rsi
  41d5ad:	mov    eax,edx
  41d5af:	mov    QWORD PTR [rbp-0x20],rcx
  41d5b3:	mov    WORD PTR [rbp-0x14],ax
  41d5b7:	lea    rax,[rbp-0x14]
  41d5bb:	mov    esi,0x4
  41d5c0:	mov    rdi,rax
  41d5c3:	call   41b8c3 <flatcc_builder_clear@@Base+0xc7>
  41d5c8:	movzx  eax,WORD PTR [rbp-0x14]
  41d5cc:	movzx  edx,ax
  41d5cf:	mov    rax,QWORD PTR [rbp-0x8]
  41d5d3:	mov    esi,edx
  41d5d5:	mov    rdi,rax
  41d5d8:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41d5dd:	test   eax,eax
  41d5df:	je     41d5e8 <flatcc_builder_start_vector@@Base+0x4b>
  41d5e1:	mov    eax,0xffffffff
  41d5e6:	jmp    41d639 <flatcc_builder_start_vector@@Base+0x9c>
  41d5e8:	mov    rax,QWORD PTR [rbp-0x8]
  41d5ec:	mov    rax,QWORD PTR [rax+0x30]
  41d5f0:	mov    rdx,QWORD PTR [rbp-0x10]
  41d5f4:	mov    DWORD PTR [rax+0x10],edx
  41d5f7:	mov    rax,QWORD PTR [rbp-0x8]
  41d5fb:	mov    rax,QWORD PTR [rax+0x30]
  41d5ff:	mov    DWORD PTR [rax+0x14],0x0
  41d606:	mov    rax,QWORD PTR [rbp-0x8]
  41d60a:	mov    rax,QWORD PTR [rax+0x30]
  41d60e:	mov    rdx,QWORD PTR [rbp-0x20]
  41d612:	mov    DWORD PTR [rax+0x18],edx
  41d615:	mov    rax,QWORD PTR [rbp-0x8]
  41d619:	mov    rax,QWORD PTR [rax+0x30]
  41d61d:	mov    WORD PTR [rax+0xe],0x4
  41d623:	mov    rax,QWORD PTR [rbp-0x8]
  41d627:	mov    esi,0xfffffffc
  41d62c:	mov    rdi,rax
  41d62f:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41d634:	mov    eax,0x0
  41d639:	leave  
  41d63a:	ret    

000000000041d63b <flatcc_builder_start_offset_vector@@Base>:
  41d63b:	push   rbp
  41d63c:	mov    rbp,rsp
  41d63f:	sub    rsp,0x10
  41d643:	mov    QWORD PTR [rbp-0x8],rdi
  41d647:	mov    rax,QWORD PTR [rbp-0x8]
  41d64b:	mov    esi,0x4
  41d650:	mov    rdi,rax
  41d653:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41d658:	test   eax,eax
  41d65a:	je     41d663 <flatcc_builder_start_offset_vector@@Base+0x28>
  41d65c:	mov    eax,0xffffffff
  41d661:	jmp    41d6a5 <flatcc_builder_start_offset_vector@@Base+0x6a>
  41d663:	mov    rax,QWORD PTR [rbp-0x8]
  41d667:	mov    rax,QWORD PTR [rax+0x30]
  41d66b:	mov    DWORD PTR [rax+0x10],0x4
  41d672:	mov    rax,QWORD PTR [rbp-0x8]
  41d676:	mov    rax,QWORD PTR [rax+0x30]
  41d67a:	mov    DWORD PTR [rax+0x14],0x0
  41d681:	mov    rax,QWORD PTR [rbp-0x8]
  41d685:	mov    rax,QWORD PTR [rax+0x30]
  41d689:	mov    WORD PTR [rax+0xe],0x5
  41d68f:	mov    rax,QWORD PTR [rbp-0x8]
  41d693:	mov    esi,0xfffffffc
  41d698:	mov    rdi,rax
  41d69b:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41d6a0:	mov    eax,0x0
  41d6a5:	leave  
  41d6a6:	ret    

000000000041d6a7 <flatcc_builder_create_offset_vector@@Base>:
  41d6a7:	push   rbp
  41d6a8:	mov    rbp,rsp
  41d6ab:	sub    rsp,0x30
  41d6af:	mov    QWORD PTR [rbp-0x18],rdi
  41d6b3:	mov    QWORD PTR [rbp-0x20],rsi
  41d6b7:	mov    QWORD PTR [rbp-0x28],rdx
  41d6bb:	mov    rax,QWORD PTR [rbp-0x18]
  41d6bf:	mov    rdi,rax
  41d6c2:	call   41d63b <flatcc_builder_start_offset_vector@@Base>
  41d6c7:	test   eax,eax
  41d6c9:	je     41d6d2 <flatcc_builder_create_offset_vector@@Base+0x2b>
  41d6cb:	mov    eax,0x0
  41d6d0:	jmp    41d722 <flatcc_builder_create_offset_vector@@Base+0x7b>
  41d6d2:	mov    rdx,QWORD PTR [rbp-0x28]
  41d6d6:	mov    rax,QWORD PTR [rbp-0x18]
  41d6da:	mov    rsi,rdx
  41d6dd:	mov    rdi,rax
  41d6e0:	call   41d04b <flatcc_builder_extend_offset_vector@@Base>
  41d6e5:	mov    QWORD PTR [rbp-0x8],rax
  41d6e9:	cmp    QWORD PTR [rbp-0x8],0x0
  41d6ee:	jne    41d6f7 <flatcc_builder_create_offset_vector@@Base+0x50>
  41d6f0:	mov    eax,0x0
  41d6f5:	jmp    41d722 <flatcc_builder_create_offset_vector@@Base+0x7b>
  41d6f7:	mov    rax,QWORD PTR [rbp-0x28]
  41d6fb:	lea    rdx,[rax*4+0x0]
  41d703:	mov    rcx,QWORD PTR [rbp-0x20]
  41d707:	mov    rax,QWORD PTR [rbp-0x8]
  41d70b:	mov    rsi,rcx
  41d70e:	mov    rdi,rax
  41d711:	call   4050f0 <memcpy@plt>
  41d716:	mov    rax,QWORD PTR [rbp-0x18]
  41d71a:	mov    rdi,rax
  41d71d:	call   41ec2d <flatcc_builder_end_offset_vector@@Base>
  41d722:	leave  
  41d723:	ret    

000000000041d724 <flatcc_builder_start_string@@Base>:
  41d724:	push   rbp
  41d725:	mov    rbp,rsp
  41d728:	sub    rsp,0x10
  41d72c:	mov    QWORD PTR [rbp-0x8],rdi
  41d730:	mov    rax,QWORD PTR [rbp-0x8]
  41d734:	mov    esi,0x1
  41d739:	mov    rdi,rax
  41d73c:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41d741:	test   eax,eax
  41d743:	je     41d74c <flatcc_builder_start_string@@Base+0x28>
  41d745:	mov    eax,0xffffffff
  41d74a:	jmp    41d78e <flatcc_builder_start_string@@Base+0x6a>
  41d74c:	mov    rax,QWORD PTR [rbp-0x8]
  41d750:	mov    rax,QWORD PTR [rax+0x30]
  41d754:	mov    DWORD PTR [rax+0x10],0x1
  41d75b:	mov    rax,QWORD PTR [rbp-0x8]
  41d75f:	mov    rax,QWORD PTR [rax+0x30]
  41d763:	mov    DWORD PTR [rax+0x14],0x0
  41d76a:	mov    rax,QWORD PTR [rbp-0x8]
  41d76e:	mov    rax,QWORD PTR [rax+0x30]
  41d772:	mov    WORD PTR [rax+0xe],0x6
  41d778:	mov    rax,QWORD PTR [rbp-0x8]
  41d77c:	mov    esi,0xfffffffc
  41d781:	mov    rdi,rax
  41d784:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41d789:	mov    eax,0x0
  41d78e:	leave  
  41d78f:	ret    

000000000041d790 <flatcc_builder_reserve_table@@Base>:
  41d790:	push   rbp
  41d791:	mov    rbp,rsp
  41d794:	sub    rsp,0x10
  41d798:	mov    QWORD PTR [rbp-0x8],rdi
  41d79c:	mov    DWORD PTR [rbp-0xc],esi
  41d79f:	cmp    DWORD PTR [rbp-0xc],0x0
  41d7a3:	jns    41d7c4 <flatcc_builder_reserve_table@@Base+0x34>
  41d7a5:	lea    rcx,[rip+0x1d104]        # 43a8b0 <flatcc_builder_padding_base@@Base+0x930>
  41d7ac:	mov    edx,0x429
  41d7b1:	lea    rsi,[rip+0x1c9c8]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41d7b8:	lea    rdi,[rip+0x1cc6b]        # 43a42a <flatcc_builder_padding_base@@Base+0x4aa>
  41d7bf:	call   405080 <__assert_fail@plt>
  41d7c4:	mov    edx,DWORD PTR [rbp-0xc]
  41d7c7:	mov    rax,QWORD PTR [rbp-0x8]
  41d7cb:	mov    esi,edx
  41d7cd:	mov    rdi,rax
  41d7d0:	call   41b205 <flatcc_builder_default_alloc@@Base+0x5bd>
  41d7d5:	leave  
  41d7d6:	ret    

000000000041d7d7 <flatcc_builder_start_table@@Base>:
  41d7d7:	push   rbp
  41d7d8:	mov    rbp,rsp
  41d7db:	sub    rsp,0x10
  41d7df:	mov    QWORD PTR [rbp-0x8],rdi
  41d7e3:	mov    DWORD PTR [rbp-0xc],esi
  41d7e6:	mov    rax,QWORD PTR [rbp-0x8]
  41d7ea:	mov    esi,0x4
  41d7ef:	mov    rdi,rax
  41d7f2:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41d7f7:	test   eax,eax
  41d7f9:	je     41d805 <flatcc_builder_start_table@@Base+0x2e>
  41d7fb:	mov    eax,0xffffffff
  41d800:	jmp    41d8d5 <flatcc_builder_start_table@@Base+0xfe>
  41d805:	mov    rax,QWORD PTR [rbp-0x8]
  41d809:	mov    rax,QWORD PTR [rax+0x30]
  41d80d:	mov    rdx,QWORD PTR [rbp-0x8]
  41d811:	mov    rdx,QWORD PTR [rdx+0x8]
  41d815:	mov    rcx,rdx
  41d818:	mov    rdx,QWORD PTR [rbp-0x8]
  41d81c:	mov    rdx,QWORD PTR [rdx+0x58]
  41d820:	sub    rcx,rdx
  41d823:	mov    rdx,rcx
  41d826:	mov    DWORD PTR [rax+0x10],edx
  41d829:	mov    rax,QWORD PTR [rbp-0x8]
  41d82d:	mov    rax,QWORD PTR [rax+0x30]
  41d831:	mov    rdx,QWORD PTR [rbp-0x8]
  41d835:	mov    rdx,QWORD PTR [rdx]
  41d838:	mov    rcx,rdx
  41d83b:	mov    rdx,QWORD PTR [rbp-0x8]
  41d83f:	mov    rdx,QWORD PTR [rdx+0x88]
  41d846:	sub    rcx,rdx
  41d849:	mov    rdx,rcx
  41d84c:	mov    DWORD PTR [rax+0x14],edx
  41d84f:	mov    rax,QWORD PTR [rbp-0x8]
  41d853:	mov    rax,QWORD PTR [rax+0x30]
  41d857:	mov    rdx,QWORD PTR [rbp-0x8]
  41d85b:	mov    edx,DWORD PTR [rdx+0x14]
  41d85e:	mov    DWORD PTR [rax+0x18],edx
  41d861:	mov    rax,QWORD PTR [rbp-0x8]
  41d865:	mov    rax,QWORD PTR [rax+0x30]
  41d869:	mov    rdx,QWORD PTR [rbp-0x8]
  41d86d:	movzx  edx,WORD PTR [rdx+0x10]
  41d871:	mov    WORD PTR [rax+0x1c],dx
  41d875:	mov    rax,QWORD PTR [rbp-0x8]
  41d879:	mov    DWORD PTR [rax+0x14],0x0
  41d880:	mov    rax,QWORD PTR [rbp-0x8]
  41d884:	mov    DWORD PTR [rax+0x14],0x2f693b52
  41d88b:	mov    rax,QWORD PTR [rbp-0x8]
  41d88f:	mov    WORD PTR [rax+0x10],0x0
  41d895:	mov    rax,QWORD PTR [rbp-0x8]
  41d899:	mov    rax,QWORD PTR [rax+0x30]
  41d89d:	mov    WORD PTR [rax+0xe],0x3
  41d8a3:	mov    edx,DWORD PTR [rbp-0xc]
  41d8a6:	mov    rax,QWORD PTR [rbp-0x8]
  41d8aa:	mov    esi,edx
  41d8ac:	mov    rdi,rax
  41d8af:	call   41b205 <flatcc_builder_default_alloc@@Base+0x5bd>
  41d8b4:	test   eax,eax
  41d8b6:	je     41d8bf <flatcc_builder_start_table@@Base+0xe8>
  41d8b8:	mov    eax,0xffffffff
  41d8bd:	jmp    41d8d5 <flatcc_builder_start_table@@Base+0xfe>
  41d8bf:	mov    rax,QWORD PTR [rbp-0x8]
  41d8c3:	mov    esi,0xfffc
  41d8c8:	mov    rdi,rax
  41d8cb:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41d8d0:	mov    eax,0x0
  41d8d5:	leave  
  41d8d6:	ret    

000000000041d8d7 <flatcc_builder_create_vtable@@Base>:
  41d8d7:	push   rbp
  41d8d8:	mov    rbp,rsp
  41d8db:	sub    rsp,0xd0
  41d8e2:	mov    QWORD PTR [rbp-0xb8],rdi
  41d8e9:	mov    QWORD PTR [rbp-0xc0],rsi
  41d8f0:	mov    eax,edx
  41d8f2:	mov    WORD PTR [rbp-0xc4],ax
  41d8f9:	mov    rax,QWORD PTR fs:0x28
  41d902:	mov    QWORD PTR [rbp-0x8],rax
  41d906:	xor    eax,eax
  41d908:	mov    QWORD PTR [rbp-0xa0],0x0
  41d913:	mov    DWORD PTR [rbp-0x98],0x0
  41d91d:	cmp    WORD PTR [rbp-0xc4],0x0
  41d925:	je     41d98f <flatcc_builder_create_vtable@@Base+0xb8>
  41d927:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d92e:	movzx  eax,WORD PTR [rbp-0xc4]
  41d935:	add    rax,rdx
  41d938:	mov    QWORD PTR [rbp-0xa0],rax
  41d93f:	mov    eax,DWORD PTR [rbp-0x98]
  41d945:	cdqe   
  41d947:	shl    rax,0x4
  41d94b:	add    rax,rbp
  41d94e:	lea    rdx,[rax-0x90]
  41d955:	mov    rax,QWORD PTR [rbp-0xc0]
  41d95c:	mov    QWORD PTR [rdx],rax
  41d95f:	mov    edx,DWORD PTR [rbp-0x98]
  41d965:	movzx  eax,WORD PTR [rbp-0xc4]
  41d96c:	movsxd rdx,edx
  41d96f:	shl    rdx,0x4
  41d973:	add    rdx,rbp
  41d976:	sub    rdx,0x88
  41d97d:	mov    QWORD PTR [rdx],rax
  41d980:	mov    eax,DWORD PTR [rbp-0x98]
  41d986:	add    eax,0x1
  41d989:	mov    DWORD PTR [rbp-0x98],eax
  41d98f:	mov    rax,QWORD PTR [rbp-0xb8]
  41d996:	mov    eax,DWORD PTR [rax+0x100]
  41d99c:	test   eax,eax
  41d99e:	jne    41d9e0 <flatcc_builder_create_vtable@@Base+0x109>
  41d9a0:	mov    rax,QWORD PTR [rbp-0xb8]
  41d9a7:	mov    eax,DWORD PTR [rax+0x124]
  41d9ad:	test   eax,eax
  41d9af:	jne    41d9e0 <flatcc_builder_create_vtable@@Base+0x109>
  41d9b1:	lea    rdx,[rbp-0xa0]
  41d9b8:	mov    rax,QWORD PTR [rbp-0xb8]
  41d9bf:	mov    rsi,rdx
  41d9c2:	mov    rdi,rax
  41d9c5:	call   41bf75 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  41d9ca:	mov    DWORD PTR [rbp-0xa4],eax
  41d9d0:	cmp    DWORD PTR [rbp-0xa4],0x0
  41d9d7:	jne    41da16 <flatcc_builder_create_vtable@@Base+0x13f>
  41d9d9:	mov    eax,0x0
  41d9de:	jmp    41da1c <flatcc_builder_create_vtable@@Base+0x145>
  41d9e0:	lea    rdx,[rbp-0xa0]
  41d9e7:	mov    rax,QWORD PTR [rbp-0xb8]
  41d9ee:	mov    rsi,rdx
  41d9f1:	mov    rdi,rax
  41d9f4:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41d9f9:	mov    DWORD PTR [rbp-0xa4],eax
  41d9ff:	cmp    DWORD PTR [rbp-0xa4],0x0
  41da06:	jne    41da0f <flatcc_builder_create_vtable@@Base+0x138>
  41da08:	mov    eax,0x0
  41da0d:	jmp    41da1c <flatcc_builder_create_vtable@@Base+0x145>
  41da0f:	add    DWORD PTR [rbp-0xa4],0x1
  41da16:	mov    eax,DWORD PTR [rbp-0xa4]
  41da1c:	mov    rcx,QWORD PTR [rbp-0x8]
  41da20:	xor    rcx,QWORD PTR fs:0x28
  41da29:	je     41da30 <flatcc_builder_create_vtable@@Base+0x159>
  41da2b:	call   405070 <__stack_chk_fail@plt>
  41da30:	leave  
  41da31:	ret    

000000000041da32 <flatcc_builder_create_cached_vtable@@Base>:
  41da32:	push   rbp
  41da33:	mov    rbp,rsp
  41da36:	sub    rsp,0x50
  41da3a:	mov    QWORD PTR [rbp-0x38],rdi
  41da3e:	mov    QWORD PTR [rbp-0x40],rsi
  41da42:	mov    eax,edx
  41da44:	mov    DWORD PTR [rbp-0x48],ecx
  41da47:	mov    WORD PTR [rbp-0x44],ax
  41da4b:	mov    edx,DWORD PTR [rbp-0x48]
  41da4e:	mov    rax,QWORD PTR [rbp-0x38]
  41da52:	mov    esi,edx
  41da54:	mov    rdi,rax
  41da57:	call   41b412 <flatcc_builder_default_alloc@@Base+0x7ca>
  41da5c:	mov    QWORD PTR [rbp-0x18],rax
  41da60:	cmp    QWORD PTR [rbp-0x18],0x0
  41da65:	jne    41da71 <flatcc_builder_create_cached_vtable@@Base+0x3f>
  41da67:	mov    eax,0x0
  41da6c:	jmp    41dd12 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41da71:	mov    rax,QWORD PTR [rbp-0x18]
  41da75:	mov    QWORD PTR [rbp-0x20],rax
  41da79:	mov    rax,QWORD PTR [rbp-0x20]
  41da7d:	mov    eax,DWORD PTR [rax]
  41da7f:	mov    DWORD PTR [rbp-0x2c],eax
  41da82:	mov    QWORD PTR [rbp-0x28],0x0
  41da8a:	jmp    41db69 <flatcc_builder_create_cached_vtable@@Base+0x137>
  41da8f:	mov    rax,QWORD PTR [rbp-0x38]
  41da93:	mov    rdx,QWORD PTR [rax+0xb8]
  41da9a:	mov    eax,DWORD PTR [rbp-0x2c]
  41da9d:	add    rax,rdx
  41daa0:	mov    QWORD PTR [rbp-0x10],rax
  41daa4:	mov    rax,QWORD PTR [rbp-0x38]
  41daa8:	mov    rdx,QWORD PTR [rax+0x78]
  41daac:	mov    rax,QWORD PTR [rbp-0x10]
  41dab0:	mov    eax,DWORD PTR [rax+0x8]
  41dab3:	mov    eax,eax
  41dab5:	add    rax,rdx
  41dab8:	mov    QWORD PTR [rbp-0x8],rax
  41dabc:	mov    rax,QWORD PTR [rbp-0x8]
  41dac0:	movzx  eax,WORD PTR [rax]
  41dac3:	cmp    ax,WORD PTR [rbp-0x44]
  41dac7:	jne    41dae4 <flatcc_builder_create_cached_vtable@@Base+0xb2>
  41dac9:	movzx  edx,WORD PTR [rbp-0x44]
  41dacd:	mov    rcx,QWORD PTR [rbp-0x8]
  41dad1:	mov    rax,QWORD PTR [rbp-0x40]
  41dad5:	mov    rsi,rcx
  41dad8:	mov    rdi,rax
  41dadb:	call   4050c0 <memcmp@plt>
  41dae0:	test   eax,eax
  41dae2:	je     41dafc <flatcc_builder_create_cached_vtable@@Base+0xca>
  41dae4:	mov    rax,QWORD PTR [rbp-0x10]
  41dae8:	add    rax,0xc
  41daec:	mov    QWORD PTR [rbp-0x20],rax
  41daf0:	mov    rax,QWORD PTR [rbp-0x10]
  41daf4:	mov    eax,DWORD PTR [rax+0xc]
  41daf7:	mov    DWORD PTR [rbp-0x2c],eax
  41dafa:	jmp    41db69 <flatcc_builder_create_cached_vtable@@Base+0x137>
  41dafc:	mov    rax,QWORD PTR [rbp-0x10]
  41db00:	mov    edx,DWORD PTR [rax+0x4]
  41db03:	mov    rax,QWORD PTR [rbp-0x38]
  41db07:	mov    eax,DWORD PTR [rax+0x100]
  41db0d:	cmp    edx,eax
  41db0f:	je     41db31 <flatcc_builder_create_cached_vtable@@Base+0xff>
  41db11:	mov    rax,QWORD PTR [rbp-0x10]
  41db15:	mov    QWORD PTR [rbp-0x28],rax
  41db19:	mov    rax,QWORD PTR [rbp-0x10]
  41db1d:	add    rax,0xc
  41db21:	mov    QWORD PTR [rbp-0x20],rax
  41db25:	mov    rax,QWORD PTR [rbp-0x10]
  41db29:	mov    eax,DWORD PTR [rax+0xc]
  41db2c:	mov    DWORD PTR [rbp-0x2c],eax
  41db2f:	jmp    41db69 <flatcc_builder_create_cached_vtable@@Base+0x137>
  41db31:	mov    rax,QWORD PTR [rbp-0x20]
  41db35:	cmp    rax,QWORD PTR [rbp-0x18]
  41db39:	je     41db5e <flatcc_builder_create_cached_vtable@@Base+0x12c>
  41db3b:	mov    rax,QWORD PTR [rbp-0x10]
  41db3f:	mov    edx,DWORD PTR [rax+0xc]
  41db42:	mov    rax,QWORD PTR [rbp-0x20]
  41db46:	mov    DWORD PTR [rax],edx
  41db48:	mov    rax,QWORD PTR [rbp-0x18]
  41db4c:	mov    edx,DWORD PTR [rax]
  41db4e:	mov    rax,QWORD PTR [rbp-0x10]
  41db52:	mov    DWORD PTR [rax+0xc],edx
  41db55:	mov    rax,QWORD PTR [rbp-0x18]
  41db59:	mov    edx,DWORD PTR [rbp-0x2c]
  41db5c:	mov    DWORD PTR [rax],edx
  41db5e:	mov    rax,QWORD PTR [rbp-0x10]
  41db62:	mov    eax,DWORD PTR [rax]
  41db64:	jmp    41dd12 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41db69:	cmp    DWORD PTR [rbp-0x2c],0x0
  41db6d:	jne    41da8f <flatcc_builder_create_cached_vtable@@Base+0x5d>
  41db73:	mov    rax,QWORD PTR [rbp-0x38]
  41db77:	mov    eax,DWORD PTR [rax+0xe4]
  41db7d:	mov    edx,eax
  41db7f:	mov    rax,QWORD PTR [rbp-0x38]
  41db83:	mov    r8d,0x0
  41db89:	mov    ecx,0x10
  41db8e:	mov    esi,0x6
  41db93:	mov    rdi,rax
  41db96:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41db9b:	mov    QWORD PTR [rbp-0x10],rax
  41db9f:	cmp    QWORD PTR [rbp-0x10],0x0
  41dba4:	jne    41dbb0 <flatcc_builder_create_cached_vtable@@Base+0x17e>
  41dba6:	mov    eax,0x0
  41dbab:	jmp    41dd12 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41dbb0:	mov    rax,QWORD PTR [rbp-0x38]
  41dbb4:	mov    eax,DWORD PTR [rax+0xe4]
  41dbba:	mov    DWORD PTR [rbp-0x2c],eax
  41dbbd:	mov    rax,QWORD PTR [rbp-0x38]
  41dbc1:	mov    eax,DWORD PTR [rax+0xe4]
  41dbc7:	lea    edx,[rax+0x10]
  41dbca:	mov    rax,QWORD PTR [rbp-0x38]
  41dbce:	mov    DWORD PTR [rax+0xe4],edx
  41dbd4:	mov    rax,QWORD PTR [rbp-0x38]
  41dbd8:	mov    edx,DWORD PTR [rax+0x100]
  41dbde:	mov    rax,QWORD PTR [rbp-0x10]
  41dbe2:	mov    DWORD PTR [rax+0x4],edx
  41dbe5:	mov    rax,QWORD PTR [rbp-0x18]
  41dbe9:	mov    edx,DWORD PTR [rax]
  41dbeb:	mov    rax,QWORD PTR [rbp-0x10]
  41dbef:	mov    DWORD PTR [rax+0xc],edx
  41dbf2:	mov    rax,QWORD PTR [rbp-0x18]
  41dbf6:	mov    edx,DWORD PTR [rbp-0x2c]
  41dbf9:	mov    DWORD PTR [rax],edx
  41dbfb:	movzx  edx,WORD PTR [rbp-0x44]
  41dbff:	mov    rcx,QWORD PTR [rbp-0x40]
  41dc03:	mov    rax,QWORD PTR [rbp-0x38]
  41dc07:	mov    rsi,rcx
  41dc0a:	mov    rdi,rax
  41dc0d:	call   41d8d7 <flatcc_builder_create_vtable@@Base>
  41dc12:	mov    edx,eax
  41dc14:	mov    rax,QWORD PTR [rbp-0x10]
  41dc18:	mov    DWORD PTR [rax],edx
  41dc1a:	mov    rax,QWORD PTR [rbp-0x10]
  41dc1e:	mov    eax,DWORD PTR [rax]
  41dc20:	test   eax,eax
  41dc22:	jne    41dc2e <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  41dc24:	mov    eax,0x0
  41dc29:	jmp    41dd12 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41dc2e:	cmp    QWORD PTR [rbp-0x28],0x0
  41dc33:	je     41dc48 <flatcc_builder_create_cached_vtable@@Base+0x216>
  41dc35:	mov    rax,QWORD PTR [rbp-0x28]
  41dc39:	mov    edx,DWORD PTR [rax+0x8]
  41dc3c:	mov    rax,QWORD PTR [rbp-0x10]
  41dc40:	mov    DWORD PTR [rax+0x8],edx
  41dc43:	jmp    41dd0c <flatcc_builder_create_cached_vtable@@Base+0x2da>
  41dc48:	mov    rax,QWORD PTR [rbp-0x38]
  41dc4c:	mov    rax,QWORD PTR [rax+0x118]
  41dc53:	test   rax,rax
  41dc56:	je     41dc8b <flatcc_builder_create_cached_vtable@@Base+0x259>
  41dc58:	mov    rax,QWORD PTR [rbp-0x38]
  41dc5c:	mov    rdx,QWORD PTR [rax+0x118]
  41dc63:	mov    rax,QWORD PTR [rbp-0x38]
  41dc67:	mov    ecx,DWORD PTR [rax+0xe0]
  41dc6d:	movzx  eax,WORD PTR [rbp-0x44]
  41dc71:	add    eax,ecx
  41dc73:	mov    eax,eax
  41dc75:	cmp    rdx,rax
  41dc78:	jae    41dc8b <flatcc_builder_create_cached_vtable@@Base+0x259>
  41dc7a:	mov    rax,QWORD PTR [rbp-0x38]
  41dc7e:	mov    rdi,rax
  41dc81:	call   41b486 <flatcc_builder_flush_vtable_cache@@Base>
  41dc86:	jmp    41dd0c <flatcc_builder_create_cached_vtable@@Base+0x2da>
  41dc8b:	movzx  edx,WORD PTR [rbp-0x44]
  41dc8f:	mov    rax,QWORD PTR [rbp-0x38]
  41dc93:	mov    eax,DWORD PTR [rax+0xe0]
  41dc99:	mov    esi,eax
  41dc9b:	mov    rax,QWORD PTR [rbp-0x38]
  41dc9f:	mov    r8d,0x0
  41dca5:	mov    rcx,rdx
  41dca8:	mov    rdx,rsi
  41dcab:	mov    esi,0x2
  41dcb0:	mov    rdi,rax
  41dcb3:	call   41b154 <flatcc_builder_default_alloc@@Base+0x50c>
  41dcb8:	mov    QWORD PTR [rbp-0x8],rax
  41dcbc:	cmp    QWORD PTR [rbp-0x8],0x0
  41dcc1:	jne    41dcca <flatcc_builder_create_cached_vtable@@Base+0x298>
  41dcc3:	mov    eax,0xffffffff
  41dcc8:	jmp    41dd12 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41dcca:	mov    rax,QWORD PTR [rbp-0x38]
  41dcce:	mov    edx,DWORD PTR [rax+0xe0]
  41dcd4:	mov    rax,QWORD PTR [rbp-0x10]
  41dcd8:	mov    DWORD PTR [rax+0x8],edx
  41dcdb:	mov    rax,QWORD PTR [rbp-0x38]
  41dcdf:	mov    edx,DWORD PTR [rax+0xe0]
  41dce5:	movzx  eax,WORD PTR [rbp-0x44]
  41dce9:	add    edx,eax
  41dceb:	mov    rax,QWORD PTR [rbp-0x38]
  41dcef:	mov    DWORD PTR [rax+0xe0],edx
  41dcf5:	movzx  edx,WORD PTR [rbp-0x44]
  41dcf9:	mov    rcx,QWORD PTR [rbp-0x40]
  41dcfd:	mov    rax,QWORD PTR [rbp-0x8]
  41dd01:	mov    rsi,rcx
  41dd04:	mov    rdi,rax
  41dd07:	call   4050f0 <memcpy@plt>
  41dd0c:	mov    rax,QWORD PTR [rbp-0x10]
  41dd10:	mov    eax,DWORD PTR [rax]
  41dd12:	leave  
  41dd13:	ret    

000000000041dd14 <flatcc_builder_create_table@@Base>:
  41dd14:	push   rbp
  41dd15:	mov    rbp,rsp
  41dd18:	sub    rsp,0x100
  41dd1f:	mov    QWORD PTR [rbp-0xd8],rdi
  41dd26:	mov    QWORD PTR [rbp-0xe0],rsi
  41dd2d:	mov    QWORD PTR [rbp-0xe8],rdx
  41dd34:	mov    eax,ecx
  41dd36:	mov    QWORD PTR [rbp-0xf8],r8
  41dd3d:	mov    DWORD PTR [rbp-0xf0],r9d
  41dd44:	mov    WORD PTR [rbp-0xec],ax
  41dd4b:	mov    rax,QWORD PTR fs:0x28
  41dd54:	mov    QWORD PTR [rbp-0x8],rax
  41dd58:	xor    eax,eax
  41dd5a:	cmp    DWORD PTR [rbp-0xf0],0x0
  41dd61:	jns    41dd82 <flatcc_builder_create_table@@Base+0x6e>
  41dd63:	lea    rcx,[rip+0x1cb66]        # 43a8d0 <flatcc_builder_padding_base@@Base+0x950>
  41dd6a:	mov    edx,0x4d5
  41dd6f:	lea    rsi,[rip+0x1c40a]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41dd76:	lea    rdi,[rip+0x1c6b8]        # 43a435 <flatcc_builder_padding_base@@Base+0x4b5>
  41dd7d:	call   405080 <__assert_fail@plt>
  41dd82:	mov    eax,DWORD PTR [rbp+0x10]
  41dd85:	and    eax,0x1
  41dd88:	test   eax,eax
  41dd8a:	jne    41ddab <flatcc_builder_create_table@@Base+0x97>
  41dd8c:	lea    rcx,[rip+0x1cb3d]        # 43a8d0 <flatcc_builder_padding_base@@Base+0x950>
  41dd93:	mov    edx,0x4db
  41dd98:	lea    rsi,[rip+0x1c3e1]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41dd9f:	lea    rdi,[rip+0x1c6a1]        # 43a447 <flatcc_builder_padding_base@@Base+0x4c7>
  41dda6:	call   405080 <__assert_fail@plt>
  41ddab:	lea    rax,[rbp-0xec]
  41ddb2:	mov    esi,0x4
  41ddb7:	mov    rdi,rax
  41ddba:	call   41b8c3 <flatcc_builder_clear@@Base+0xc7>
  41ddbf:	movzx  eax,WORD PTR [rbp-0xec]
  41ddc6:	movzx  edx,ax
  41ddc9:	mov    rax,QWORD PTR [rbp-0xd8]
  41ddd0:	mov    esi,edx
  41ddd2:	mov    rdi,rax
  41ddd5:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41ddda:	movzx  eax,WORD PTR [rbp-0xec]
  41dde1:	movzx  edx,ax
  41dde4:	mov    rax,QWORD PTR [rbp-0xe8]
  41ddeb:	mov    ecx,eax
  41dded:	mov    rax,QWORD PTR [rbp-0xd8]
  41ddf4:	mov    esi,ecx
  41ddf6:	mov    rdi,rax
  41ddf9:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41ddfe:	mov    DWORD PTR [rbp-0xbc],eax
  41de04:	mov    rax,QWORD PTR [rbp-0xd8]
  41de0b:	mov    eax,DWORD PTR [rax+0xf0]
  41de11:	mov    edx,eax
  41de13:	mov    rax,QWORD PTR [rbp-0xe8]
  41de1a:	mov    ecx,eax
  41de1c:	mov    eax,DWORD PTR [rbp-0xbc]
  41de22:	add    eax,ecx
  41de24:	sub    edx,eax
  41de26:	mov    eax,edx
  41de28:	sub    eax,0x4
  41de2b:	mov    DWORD PTR [rbp-0xb8],eax
  41de31:	mov    eax,DWORD PTR [rbp+0x10]
  41de34:	sub    eax,0x1
  41de37:	mov    DWORD PTR [rbp-0xb4],eax
  41de3d:	mov    eax,DWORD PTR [rbp-0xb8]
  41de43:	sub    eax,DWORD PTR [rbp-0xb4]
  41de49:	mov    DWORD PTR [rbp-0xb0],eax
  41de4f:	mov    eax,DWORD PTR [rbp-0xb8]
  41de55:	sub    eax,DWORD PTR [rbp-0xb0]
  41de5b:	cmp    eax,DWORD PTR [rbp-0xb4]
  41de61:	je     41de6d <flatcc_builder_create_table@@Base+0x159>
  41de63:	mov    eax,0xffffffff
  41de68:	jmp    41e091 <flatcc_builder_create_table@@Base+0x37d>
  41de6d:	mov    eax,DWORD PTR [rbp-0xb0]
  41de73:	mov    edi,eax
  41de75:	call   41ab82 <main@@Base+0x10e3>
  41de7a:	mov    DWORD PTR [rbp-0xc4],eax
  41de80:	mov    DWORD PTR [rbp-0xc0],0x0
  41de8a:	jmp    41df15 <flatcc_builder_create_table@@Base+0x201>
  41de8f:	mov    eax,DWORD PTR [rbp-0xc0]
  41de95:	cdqe   
  41de97:	lea    rdx,[rax+rax*1]
  41de9b:	mov    rax,QWORD PTR [rbp-0xf8]
  41dea2:	add    rax,rdx
  41dea5:	movzx  eax,WORD PTR [rax]
  41dea8:	movzx  edx,ax
  41deab:	mov    rax,QWORD PTR [rbp-0xe0]
  41deb2:	add    rax,rdx
  41deb5:	mov    QWORD PTR [rbp-0xa8],rax
  41debc:	mov    rax,QWORD PTR [rbp-0xa8]
  41dec3:	mov    eax,DWORD PTR [rax]
  41dec5:	sub    eax,DWORD PTR [rbp-0xb8]
  41decb:	mov    edx,eax
  41decd:	mov    eax,DWORD PTR [rbp-0xc0]
  41ded3:	cdqe   
  41ded5:	lea    rcx,[rax+rax*1]
  41ded9:	mov    rax,QWORD PTR [rbp-0xf8]
  41dee0:	add    rax,rcx
  41dee3:	movzx  eax,WORD PTR [rax]
  41dee6:	movzx  eax,ax
  41dee9:	sub    edx,eax
  41deeb:	mov    eax,edx
  41deed:	sub    eax,0x4
  41def0:	mov    DWORD PTR [rbp-0xac],eax
  41def6:	mov    eax,DWORD PTR [rbp-0xac]
  41defc:	mov    edi,eax
  41defe:	call   41ab82 <main@@Base+0x10e3>
  41df03:	mov    edx,eax
  41df05:	mov    rax,QWORD PTR [rbp-0xa8]
  41df0c:	mov    DWORD PTR [rax],edx
  41df0e:	add    DWORD PTR [rbp-0xc0],0x1
  41df15:	mov    eax,DWORD PTR [rbp-0xc0]
  41df1b:	cmp    eax,DWORD PTR [rbp-0xf0]
  41df21:	jl     41de8f <flatcc_builder_create_table@@Base+0x17b>
  41df27:	mov    QWORD PTR [rbp-0xa0],0x0
  41df32:	mov    DWORD PTR [rbp-0x98],0x0
  41df3c:	mov    rax,QWORD PTR [rbp-0xa0]
  41df43:	add    rax,0x4
  41df47:	mov    QWORD PTR [rbp-0xa0],rax
  41df4e:	mov    eax,DWORD PTR [rbp-0x98]
  41df54:	cdqe   
  41df56:	shl    rax,0x4
  41df5a:	add    rax,rbp
  41df5d:	lea    rdx,[rax-0x90]
  41df64:	lea    rax,[rbp-0xc4]
  41df6b:	mov    QWORD PTR [rdx],rax
  41df6e:	mov    eax,DWORD PTR [rbp-0x98]
  41df74:	cdqe   
  41df76:	shl    rax,0x4
  41df7a:	add    rax,rbp
  41df7d:	sub    rax,0x88
  41df83:	mov    QWORD PTR [rax],0x4
  41df8a:	mov    eax,DWORD PTR [rbp-0x98]
  41df90:	add    eax,0x1
  41df93:	mov    DWORD PTR [rbp-0x98],eax
  41df99:	cmp    QWORD PTR [rbp-0xe8],0x0
  41dfa1:	je     41e00a <flatcc_builder_create_table@@Base+0x2f6>
  41dfa3:	mov    rdx,QWORD PTR [rbp-0xa0]
  41dfaa:	mov    rax,QWORD PTR [rbp-0xe8]
  41dfb1:	add    rax,rdx
  41dfb4:	mov    QWORD PTR [rbp-0xa0],rax
  41dfbb:	mov    eax,DWORD PTR [rbp-0x98]
  41dfc1:	cdqe   
  41dfc3:	shl    rax,0x4
  41dfc7:	add    rax,rbp
  41dfca:	lea    rdx,[rax-0x90]
  41dfd1:	mov    rax,QWORD PTR [rbp-0xe0]
  41dfd8:	mov    QWORD PTR [rdx],rax
  41dfdb:	mov    eax,DWORD PTR [rbp-0x98]
  41dfe1:	cdqe   
  41dfe3:	shl    rax,0x4
  41dfe7:	add    rax,rbp
  41dfea:	lea    rdx,[rax-0x88]
  41dff1:	mov    rax,QWORD PTR [rbp-0xe8]
  41dff8:	mov    QWORD PTR [rdx],rax
  41dffb:	mov    eax,DWORD PTR [rbp-0x98]
  41e001:	add    eax,0x1
  41e004:	mov    DWORD PTR [rbp-0x98],eax
  41e00a:	cmp    DWORD PTR [rbp-0xbc],0x0
  41e011:	je     41e078 <flatcc_builder_create_table@@Base+0x364>
  41e013:	mov    rdx,QWORD PTR [rbp-0xa0]
  41e01a:	mov    eax,DWORD PTR [rbp-0xbc]
  41e020:	add    rax,rdx
  41e023:	mov    QWORD PTR [rbp-0xa0],rax
  41e02a:	mov    eax,DWORD PTR [rbp-0x98]
  41e030:	cdqe   
  41e032:	shl    rax,0x4
  41e036:	add    rax,rbp
  41e039:	sub    rax,0x90
  41e03f:	mov    rdx,0x439f80
  41e046:	mov    QWORD PTR [rax],rdx
  41e049:	mov    edx,DWORD PTR [rbp-0x98]
  41e04f:	mov    eax,DWORD PTR [rbp-0xbc]
  41e055:	movsxd rdx,edx
  41e058:	shl    rdx,0x4
  41e05c:	add    rdx,rbp
  41e05f:	sub    rdx,0x88
  41e066:	mov    QWORD PTR [rdx],rax
  41e069:	mov    eax,DWORD PTR [rbp-0x98]
  41e06f:	add    eax,0x1
  41e072:	mov    DWORD PTR [rbp-0x98],eax
  41e078:	lea    rdx,[rbp-0xa0]
  41e07f:	mov    rax,QWORD PTR [rbp-0xd8]
  41e086:	mov    rsi,rdx
  41e089:	mov    rdi,rax
  41e08c:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41e091:	mov    rsi,QWORD PTR [rbp-0x8]
  41e095:	xor    rsi,QWORD PTR fs:0x28
  41e09e:	je     41e0a5 <flatcc_builder_create_table@@Base+0x391>
  41e0a0:	call   405070 <__stack_chk_fail@plt>
  41e0a5:	leave  
  41e0a6:	ret    

000000000041e0a7 <flatcc_builder_check_required_field@@Base>:
  41e0a7:	push   rbp
  41e0a8:	mov    rbp,rsp
  41e0ab:	sub    rsp,0x10
  41e0af:	mov    QWORD PTR [rbp-0x8],rdi
  41e0b3:	mov    eax,esi
  41e0b5:	mov    WORD PTR [rbp-0xc],ax
  41e0b9:	mov    rax,QWORD PTR [rbp-0x8]
  41e0bd:	mov    rax,QWORD PTR [rax+0x30]
  41e0c1:	movzx  eax,WORD PTR [rax+0xe]
  41e0c5:	cmp    ax,0x3
  41e0c9:	je     41e0ea <flatcc_builder_check_required_field@@Base+0x43>
  41e0cb:	lea    rcx,[rip+0x1c82e]        # 43a900 <flatcc_builder_padding_base@@Base+0x980>
  41e0d2:	mov    edx,0x4f8
  41e0d7:	lea    rsi,[rip+0x1c0a2]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41e0de:	lea    rdi,[rip+0x1c373]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41e0e5:	call   405080 <__assert_fail@plt>
  41e0ea:	mov    rax,QWORD PTR [rbp-0x8]
  41e0ee:	movzx  eax,WORD PTR [rax+0x10]
  41e0f2:	cmp    ax,WORD PTR [rbp-0xc]
  41e0f6:	jbe    41e119 <flatcc_builder_check_required_field@@Base+0x72>
  41e0f8:	mov    rax,QWORD PTR [rbp-0x8]
  41e0fc:	mov    rax,QWORD PTR [rax+0x8]
  41e100:	movzx  edx,WORD PTR [rbp-0xc]
  41e104:	add    rdx,rdx
  41e107:	add    rax,rdx
  41e10a:	movzx  eax,WORD PTR [rax]
  41e10d:	test   ax,ax
  41e110:	je     41e119 <flatcc_builder_check_required_field@@Base+0x72>
  41e112:	mov    eax,0x1
  41e117:	jmp    41e11e <flatcc_builder_check_required_field@@Base+0x77>
  41e119:	mov    eax,0x0
  41e11e:	leave  
  41e11f:	ret    

000000000041e120 <flatcc_builder_check_union_field@@Base>:
  41e120:	push   rbp
  41e121:	mov    rbp,rsp
  41e124:	sub    rsp,0x10
  41e128:	mov    QWORD PTR [rbp-0x8],rdi
  41e12c:	mov    eax,esi
  41e12e:	mov    WORD PTR [rbp-0xc],ax
  41e132:	mov    rax,QWORD PTR [rbp-0x8]
  41e136:	mov    rax,QWORD PTR [rax+0x30]
  41e13a:	movzx  eax,WORD PTR [rax+0xe]
  41e13e:	cmp    ax,0x3
  41e142:	je     41e163 <flatcc_builder_check_union_field@@Base+0x43>
  41e144:	lea    rcx,[rip+0x1c7f5]        # 43a940 <flatcc_builder_padding_base@@Base+0x9c0>
  41e14b:	mov    edx,0x4ff
  41e150:	lea    rsi,[rip+0x1c029]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41e157:	lea    rdi,[rip+0x1c2fa]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41e15e:	call   405080 <__assert_fail@plt>
  41e163:	cmp    WORD PTR [rbp-0xc],0x0
  41e168:	je     41e178 <flatcc_builder_check_union_field@@Base+0x58>
  41e16a:	mov    rax,QWORD PTR [rbp-0x8]
  41e16e:	movzx  eax,WORD PTR [rax+0x10]
  41e172:	cmp    ax,WORD PTR [rbp-0xc]
  41e176:	ja     41e182 <flatcc_builder_check_union_field@@Base+0x62>
  41e178:	mov    eax,0x0
  41e17d:	jmp    41e22c <flatcc_builder_check_union_field@@Base+0x10c>
  41e182:	mov    rax,QWORD PTR [rbp-0x8]
  41e186:	mov    rax,QWORD PTR [rax+0x8]
  41e18a:	movzx  edx,WORD PTR [rbp-0xc]
  41e18e:	add    rdx,rdx
  41e191:	sub    rdx,0x2
  41e195:	add    rax,rdx
  41e198:	movzx  eax,WORD PTR [rax]
  41e19b:	test   ax,ax
  41e19e:	jne    41e1c0 <flatcc_builder_check_union_field@@Base+0xa0>
  41e1a0:	mov    rax,QWORD PTR [rbp-0x8]
  41e1a4:	mov    rax,QWORD PTR [rax+0x8]
  41e1a8:	movzx  edx,WORD PTR [rbp-0xc]
  41e1ac:	add    rdx,rdx
  41e1af:	add    rax,rdx
  41e1b2:	movzx  eax,WORD PTR [rax]
  41e1b5:	test   ax,ax
  41e1b8:	sete   al
  41e1bb:	movzx  eax,al
  41e1be:	jmp    41e22c <flatcc_builder_check_union_field@@Base+0x10c>
  41e1c0:	mov    rax,QWORD PTR [rbp-0x8]
  41e1c4:	mov    rdx,QWORD PTR [rax+0x18]
  41e1c8:	mov    rax,QWORD PTR [rbp-0x8]
  41e1cc:	mov    rax,QWORD PTR [rax+0x8]
  41e1d0:	movzx  ecx,WORD PTR [rbp-0xc]
  41e1d4:	add    rcx,rcx
  41e1d7:	sub    rcx,0x2
  41e1db:	add    rax,rcx
  41e1de:	movzx  eax,WORD PTR [rax]
  41e1e1:	movzx  eax,ax
  41e1e4:	add    rax,rdx
  41e1e7:	movzx  eax,BYTE PTR [rax]
  41e1ea:	test   al,al
  41e1ec:	je     41e20e <flatcc_builder_check_union_field@@Base+0xee>
  41e1ee:	mov    rax,QWORD PTR [rbp-0x8]
  41e1f2:	mov    rax,QWORD PTR [rax+0x8]
  41e1f6:	movzx  edx,WORD PTR [rbp-0xc]
  41e1fa:	add    rdx,rdx
  41e1fd:	add    rax,rdx
  41e200:	movzx  eax,WORD PTR [rax]
  41e203:	test   ax,ax
  41e206:	setne  al
  41e209:	movzx  eax,al
  41e20c:	jmp    41e22c <flatcc_builder_check_union_field@@Base+0x10c>
  41e20e:	mov    rax,QWORD PTR [rbp-0x8]
  41e212:	mov    rax,QWORD PTR [rax+0x8]
  41e216:	movzx  edx,WORD PTR [rbp-0xc]
  41e21a:	add    rdx,rdx
  41e21d:	add    rax,rdx
  41e220:	movzx  eax,WORD PTR [rax]
  41e223:	test   ax,ax
  41e226:	sete   al
  41e229:	movzx  eax,al
  41e22c:	leave  
  41e22d:	ret    

000000000041e22e <flatcc_builder_check_required@@Base>:
  41e22e:	push   rbp
  41e22f:	mov    rbp,rsp
  41e232:	sub    rsp,0x30
  41e236:	mov    QWORD PTR [rbp-0x18],rdi
  41e23a:	mov    QWORD PTR [rbp-0x20],rsi
  41e23e:	mov    DWORD PTR [rbp-0x24],edx
  41e241:	mov    rax,QWORD PTR [rbp-0x18]
  41e245:	mov    rax,QWORD PTR [rax+0x30]
  41e249:	movzx  eax,WORD PTR [rax+0xe]
  41e24d:	cmp    ax,0x3
  41e251:	je     41e272 <flatcc_builder_check_required@@Base+0x44>
  41e253:	lea    rcx,[rip+0x1c716]        # 43a970 <flatcc_builder_padding_base@@Base+0x9f0>
  41e25a:	mov    edx,0x511
  41e25f:	lea    rsi,[rip+0x1bf1a]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41e266:	lea    rdi,[rip+0x1c1eb]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41e26d:	call   405080 <__assert_fail@plt>
  41e272:	mov    rax,QWORD PTR [rbp-0x18]
  41e276:	movzx  eax,WORD PTR [rax+0x10]
  41e27a:	movzx  eax,ax
  41e27d:	cmp    eax,DWORD PTR [rbp-0x24]
  41e280:	jge    41e289 <flatcc_builder_check_required@@Base+0x5b>
  41e282:	mov    eax,0x0
  41e287:	jmp    41e2d7 <flatcc_builder_check_required@@Base+0xa9>
  41e289:	mov    DWORD PTR [rbp-0x4],0x0
  41e290:	jmp    41e2ca <flatcc_builder_check_required@@Base+0x9c>
  41e292:	mov    rax,QWORD PTR [rbp-0x18]
  41e296:	mov    rax,QWORD PTR [rax+0x8]
  41e29a:	mov    edx,DWORD PTR [rbp-0x4]
  41e29d:	movsxd rdx,edx
  41e2a0:	lea    rcx,[rdx+rdx*1]
  41e2a4:	mov    rdx,QWORD PTR [rbp-0x20]
  41e2a8:	add    rdx,rcx
  41e2ab:	movzx  edx,WORD PTR [rdx]
  41e2ae:	movzx  edx,dx
  41e2b1:	add    rdx,rdx
  41e2b4:	add    rax,rdx
  41e2b7:	movzx  eax,WORD PTR [rax]
  41e2ba:	test   ax,ax
  41e2bd:	jne    41e2c6 <flatcc_builder_check_required@@Base+0x98>
  41e2bf:	mov    eax,0x0
  41e2c4:	jmp    41e2d7 <flatcc_builder_check_required@@Base+0xa9>
  41e2c6:	add    DWORD PTR [rbp-0x4],0x1
  41e2ca:	mov    eax,DWORD PTR [rbp-0x4]
  41e2cd:	cmp    eax,DWORD PTR [rbp-0x24]
  41e2d0:	jl     41e292 <flatcc_builder_check_required@@Base+0x64>
  41e2d2:	mov    eax,0x1
  41e2d7:	leave  
  41e2d8:	ret    

000000000041e2d9 <flatcc_builder_end_table@@Base>:
  41e2d9:	push   rbp
  41e2da:	mov    rbp,rsp
  41e2dd:	sub    rsp,0x30
  41e2e1:	mov    QWORD PTR [rbp-0x28],rdi
  41e2e5:	mov    rax,QWORD PTR [rbp-0x28]
  41e2e9:	mov    rax,QWORD PTR [rax+0x30]
  41e2ed:	movzx  eax,WORD PTR [rax+0xe]
  41e2f1:	cmp    ax,0x3
  41e2f5:	je     41e316 <flatcc_builder_end_table@@Base+0x3d>
  41e2f7:	lea    rcx,[rip+0x1c692]        # 43a990 <flatcc_builder_padding_base@@Base+0xa10>
  41e2fe:	mov    edx,0x525
  41e303:	lea    rsi,[rip+0x1be76]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41e30a:	lea    rdi,[rip+0x1c147]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41e311:	call   405080 <__assert_fail@plt>
  41e316:	mov    rax,QWORD PTR [rbp-0x28]
  41e31a:	mov    rax,QWORD PTR [rax+0x8]
  41e31e:	sub    rax,0x4
  41e322:	mov    QWORD PTR [rbp-0x10],rax
  41e326:	mov    rax,QWORD PTR [rbp-0x28]
  41e32a:	movzx  eax,WORD PTR [rax+0x10]
  41e32e:	movzx  eax,ax
  41e331:	add    eax,0x2
  41e334:	cdqe   
  41e336:	add    eax,eax
  41e338:	mov    WORD PTR [rbp-0x1e],ax
  41e33c:	mov    rax,QWORD PTR [rbp-0x10]
  41e340:	movzx  edx,WORD PTR [rbp-0x1e]
  41e344:	mov    WORD PTR [rax],dx
  41e347:	mov    rax,QWORD PTR [rbp-0x10]
  41e34b:	lea    rdx,[rax+0x2]
  41e34f:	mov    rax,QWORD PTR [rbp-0x28]
  41e353:	mov    eax,DWORD PTR [rax+0x20]
  41e356:	add    eax,0x4
  41e359:	mov    WORD PTR [rdx],ax
  41e35c:	mov    rax,QWORD PTR [rbp-0x10]
  41e360:	movzx  eax,WORD PTR [rax]
  41e363:	movzx  edx,ax
  41e366:	mov    rax,QWORD PTR [rbp-0x28]
  41e36a:	mov    eax,DWORD PTR [rax+0x14]
  41e36d:	xor    eax,edx
  41e36f:	imul   edx,eax,0x9e3779b1
  41e375:	mov    rax,QWORD PTR [rbp-0x10]
  41e379:	add    rax,0x2
  41e37d:	movzx  eax,WORD PTR [rax]
  41e380:	movzx  eax,ax
  41e383:	xor    eax,edx
  41e385:	imul   edx,eax,0x9e3779b1
  41e38b:	mov    rax,QWORD PTR [rbp-0x28]
  41e38f:	mov    DWORD PTR [rax+0x14],edx
  41e392:	mov    rax,QWORD PTR [rbp-0x28]
  41e396:	mov    ecx,DWORD PTR [rax+0x14]
  41e399:	movzx  edx,WORD PTR [rbp-0x1e]
  41e39d:	mov    rsi,QWORD PTR [rbp-0x10]
  41e3a1:	mov    rax,QWORD PTR [rbp-0x28]
  41e3a5:	mov    rdi,rax
  41e3a8:	call   41da32 <flatcc_builder_create_cached_vtable@@Base>
  41e3ad:	mov    DWORD PTR [rbp-0x1c],eax
  41e3b0:	cmp    DWORD PTR [rbp-0x1c],0x0
  41e3b4:	jne    41e3c0 <flatcc_builder_end_table@@Base+0xe7>
  41e3b6:	mov    eax,0x0
  41e3bb:	jmp    41e4e0 <flatcc_builder_end_table@@Base+0x207>
  41e3c0:	movzx  edx,WORD PTR [rbp-0x1e]
  41e3c4:	mov    rax,QWORD PTR [rbp-0x10]
  41e3c8:	mov    esi,0x0
  41e3cd:	mov    rdi,rax
  41e3d0:	call   405090 <memset@plt>
  41e3d5:	mov    rax,QWORD PTR [rbp-0x28]
  41e3d9:	mov    rdx,QWORD PTR [rax+0x88]
  41e3e0:	mov    rax,QWORD PTR [rbp-0x28]
  41e3e4:	mov    rax,QWORD PTR [rax+0x30]
  41e3e8:	mov    eax,DWORD PTR [rax+0x14]
  41e3eb:	mov    eax,eax
  41e3ed:	add    rax,rdx
  41e3f0:	mov    QWORD PTR [rbp-0x8],rax
  41e3f4:	mov    rax,QWORD PTR [rbp-0x28]
  41e3f8:	mov    rax,QWORD PTR [rax]
  41e3fb:	mov    rdx,rax
  41e3fe:	mov    rax,QWORD PTR [rbp-0x8]
  41e402:	sub    rdx,rax
  41e405:	mov    rax,rdx
  41e408:	sar    rax,1
  41e40b:	mov    DWORD PTR [rbp-0x18],eax
  41e40e:	mov    rax,QWORD PTR [rbp-0x28]
  41e412:	movzx  eax,WORD PTR [rax+0xea]
  41e419:	movzx  edx,ax
  41e41c:	mov    rax,QWORD PTR [rbp-0x28]
  41e420:	mov    eax,DWORD PTR [rax+0x20]
  41e423:	mov    r10d,eax
  41e426:	mov    rax,QWORD PTR [rbp-0x28]
  41e42a:	mov    rsi,QWORD PTR [rax+0x18]
  41e42e:	mov    r8d,DWORD PTR [rbp-0x18]
  41e432:	mov    rdi,QWORD PTR [rbp-0x8]
  41e436:	mov    rax,QWORD PTR [rbp-0x28]
  41e43a:	sub    rsp,0x8
  41e43e:	mov    ecx,DWORD PTR [rbp-0x1c]
  41e441:	push   rcx
  41e442:	mov    r9d,r8d
  41e445:	mov    r8,rdi
  41e448:	mov    ecx,edx
  41e44a:	mov    rdx,r10
  41e44d:	mov    rdi,rax
  41e450:	call   41dd14 <flatcc_builder_create_table@@Base>
  41e455:	add    rsp,0x10
  41e459:	mov    DWORD PTR [rbp-0x14],eax
  41e45c:	cmp    DWORD PTR [rbp-0x14],0x0
  41e460:	jne    41e469 <flatcc_builder_end_table@@Base+0x190>
  41e462:	mov    eax,0x0
  41e467:	jmp    41e4e0 <flatcc_builder_end_table@@Base+0x207>
  41e469:	mov    rax,QWORD PTR [rbp-0x28]
  41e46d:	mov    rax,QWORD PTR [rax+0x30]
  41e471:	mov    edx,DWORD PTR [rax+0x18]
  41e474:	mov    rax,QWORD PTR [rbp-0x28]
  41e478:	mov    DWORD PTR [rax+0x14],edx
  41e47b:	mov    rax,QWORD PTR [rbp-0x28]
  41e47f:	mov    rax,QWORD PTR [rax+0x30]
  41e483:	movzx  edx,WORD PTR [rax+0x1c]
  41e487:	mov    rax,QWORD PTR [rbp-0x28]
  41e48b:	mov    WORD PTR [rax+0x10],dx
  41e48f:	mov    rax,QWORD PTR [rbp-0x28]
  41e493:	mov    rdx,QWORD PTR [rax+0x58]
  41e497:	mov    rax,QWORD PTR [rbp-0x28]
  41e49b:	mov    rax,QWORD PTR [rax+0x30]
  41e49f:	mov    eax,DWORD PTR [rax+0x10]
  41e4a2:	mov    eax,eax
  41e4a4:	add    rdx,rax
  41e4a7:	mov    rax,QWORD PTR [rbp-0x28]
  41e4ab:	mov    QWORD PTR [rax+0x8],rdx
  41e4af:	mov    rax,QWORD PTR [rbp-0x28]
  41e4b3:	mov    rdx,QWORD PTR [rax+0x88]
  41e4ba:	mov    rax,QWORD PTR [rbp-0x28]
  41e4be:	mov    rax,QWORD PTR [rax+0x30]
  41e4c2:	mov    eax,DWORD PTR [rax+0x14]
  41e4c5:	mov    eax,eax
  41e4c7:	add    rdx,rax
  41e4ca:	mov    rax,QWORD PTR [rbp-0x28]
  41e4ce:	mov    QWORD PTR [rax],rdx
  41e4d1:	mov    rax,QWORD PTR [rbp-0x28]
  41e4d5:	mov    rdi,rax
  41e4d8:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41e4dd:	mov    eax,DWORD PTR [rbp-0x14]
  41e4e0:	leave  
  41e4e1:	ret    

000000000041e4e2 <flatcc_builder_create_vector@@Base>:
  41e4e2:	push   rbp
  41e4e3:	mov    rbp,rsp
  41e4e6:	sub    rsp,0xe0
  41e4ed:	mov    QWORD PTR [rbp-0xb8],rdi
  41e4f4:	mov    QWORD PTR [rbp-0xc0],rsi
  41e4fb:	mov    QWORD PTR [rbp-0xc8],rdx
  41e502:	mov    QWORD PTR [rbp-0xd0],rcx
  41e509:	mov    eax,r8d
  41e50c:	mov    QWORD PTR [rbp-0xe0],r9
  41e513:	mov    WORD PTR [rbp-0xd4],ax
  41e51a:	mov    rax,QWORD PTR fs:0x28
  41e523:	mov    QWORD PTR [rbp-0x8],rax
  41e527:	xor    eax,eax
  41e529:	mov    rax,QWORD PTR [rbp-0xc8]
  41e530:	cmp    rax,QWORD PTR [rbp-0xe0]
  41e537:	jbe    41e572 <flatcc_builder_create_vector@@Base+0x90>
  41e539:	mov    rax,QWORD PTR [rbp-0xc8]
  41e540:	cmp    rax,QWORD PTR [rbp-0xe0]
  41e547:	jbe    41e568 <flatcc_builder_create_vector@@Base+0x86>
  41e549:	lea    rcx,[rip+0x1c460]        # 43a9b0 <flatcc_builder_padding_base@@Base+0xa30>
  41e550:	mov    edx,0x555
  41e555:	lea    rsi,[rip+0x1bc24]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41e55c:	lea    rdi,[rip+0x1bf20]        # 43a483 <flatcc_builder_padding_base@@Base+0x503>
  41e563:	call   405080 <__assert_fail@plt>
  41e568:	mov    eax,0x0
  41e56d:	jmp    41e75d <flatcc_builder_create_vector@@Base+0x27b>
  41e572:	lea    rax,[rbp-0xd4]
  41e579:	mov    esi,0x4
  41e57e:	mov    rdi,rax
  41e581:	call   41b8c3 <flatcc_builder_clear@@Base+0xc7>
  41e586:	movzx  eax,WORD PTR [rbp-0xd4]
  41e58d:	movzx  edx,ax
  41e590:	mov    rax,QWORD PTR [rbp-0xb8]
  41e597:	mov    esi,edx
  41e599:	mov    rdi,rax
  41e59c:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41e5a1:	mov    rax,QWORD PTR [rbp-0xc8]
  41e5a8:	mov    edx,eax
  41e5aa:	mov    rax,QWORD PTR [rbp-0xd0]
  41e5b1:	imul   eax,edx
  41e5b4:	mov    DWORD PTR [rbp-0xa8],eax
  41e5ba:	mov    rax,QWORD PTR [rbp-0xc8]
  41e5c1:	mov    edi,eax
  41e5c3:	call   41ab82 <main@@Base+0x10e3>
  41e5c8:	mov    DWORD PTR [rbp-0xac],eax
  41e5ce:	movzx  eax,WORD PTR [rbp-0xd4]
  41e5d5:	movzx  edx,ax
  41e5d8:	mov    ecx,DWORD PTR [rbp-0xa8]
  41e5de:	mov    rax,QWORD PTR [rbp-0xb8]
  41e5e5:	mov    esi,ecx
  41e5e7:	mov    rdi,rax
  41e5ea:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41e5ef:	mov    DWORD PTR [rbp-0xa4],eax
  41e5f5:	mov    QWORD PTR [rbp-0xa0],0x0
  41e600:	mov    DWORD PTR [rbp-0x98],0x0
  41e60a:	mov    rax,QWORD PTR [rbp-0xa0]
  41e611:	add    rax,0x4
  41e615:	mov    QWORD PTR [rbp-0xa0],rax
  41e61c:	mov    eax,DWORD PTR [rbp-0x98]
  41e622:	cdqe   
  41e624:	shl    rax,0x4
  41e628:	add    rax,rbp
  41e62b:	lea    rdx,[rax-0x90]
  41e632:	lea    rax,[rbp-0xac]
  41e639:	mov    QWORD PTR [rdx],rax
  41e63c:	mov    eax,DWORD PTR [rbp-0x98]
  41e642:	cdqe   
  41e644:	shl    rax,0x4
  41e648:	add    rax,rbp
  41e64b:	sub    rax,0x88
  41e651:	mov    QWORD PTR [rax],0x4
  41e658:	mov    eax,DWORD PTR [rbp-0x98]
  41e65e:	add    eax,0x1
  41e661:	mov    DWORD PTR [rbp-0x98],eax
  41e667:	cmp    DWORD PTR [rbp-0xa8],0x0
  41e66e:	je     41e6d6 <flatcc_builder_create_vector@@Base+0x1f4>
  41e670:	mov    rdx,QWORD PTR [rbp-0xa0]
  41e677:	mov    eax,DWORD PTR [rbp-0xa8]
  41e67d:	add    rax,rdx
  41e680:	mov    QWORD PTR [rbp-0xa0],rax
  41e687:	mov    eax,DWORD PTR [rbp-0x98]
  41e68d:	cdqe   
  41e68f:	shl    rax,0x4
  41e693:	add    rax,rbp
  41e696:	lea    rdx,[rax-0x90]
  41e69d:	mov    rax,QWORD PTR [rbp-0xc0]
  41e6a4:	mov    QWORD PTR [rdx],rax
  41e6a7:	mov    edx,DWORD PTR [rbp-0x98]
  41e6ad:	mov    eax,DWORD PTR [rbp-0xa8]
  41e6b3:	movsxd rdx,edx
  41e6b6:	shl    rdx,0x4
  41e6ba:	add    rdx,rbp
  41e6bd:	sub    rdx,0x88
  41e6c4:	mov    QWORD PTR [rdx],rax
  41e6c7:	mov    eax,DWORD PTR [rbp-0x98]
  41e6cd:	add    eax,0x1
  41e6d0:	mov    DWORD PTR [rbp-0x98],eax
  41e6d6:	cmp    DWORD PTR [rbp-0xa4],0x0
  41e6dd:	je     41e744 <flatcc_builder_create_vector@@Base+0x262>
  41e6df:	mov    rdx,QWORD PTR [rbp-0xa0]
  41e6e6:	mov    eax,DWORD PTR [rbp-0xa4]
  41e6ec:	add    rax,rdx
  41e6ef:	mov    QWORD PTR [rbp-0xa0],rax
  41e6f6:	mov    eax,DWORD PTR [rbp-0x98]
  41e6fc:	cdqe   
  41e6fe:	shl    rax,0x4
  41e702:	add    rax,rbp
  41e705:	sub    rax,0x90
  41e70b:	mov    rdx,0x439f80
  41e712:	mov    QWORD PTR [rax],rdx
  41e715:	mov    edx,DWORD PTR [rbp-0x98]
  41e71b:	mov    eax,DWORD PTR [rbp-0xa4]
  41e721:	movsxd rdx,edx
  41e724:	shl    rdx,0x4
  41e728:	add    rdx,rbp
  41e72b:	sub    rdx,0x88
  41e732:	mov    QWORD PTR [rdx],rax
  41e735:	mov    eax,DWORD PTR [rbp-0x98]
  41e73b:	add    eax,0x1
  41e73e:	mov    DWORD PTR [rbp-0x98],eax
  41e744:	lea    rdx,[rbp-0xa0]
  41e74b:	mov    rax,QWORD PTR [rbp-0xb8]
  41e752:	mov    rsi,rdx
  41e755:	mov    rdi,rax
  41e758:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41e75d:	mov    rcx,QWORD PTR [rbp-0x8]
  41e761:	xor    rcx,QWORD PTR fs:0x28
  41e76a:	je     41e771 <flatcc_builder_create_vector@@Base+0x28f>
  41e76c:	call   405070 <__stack_chk_fail@plt>
  41e771:	leave  
  41e772:	ret    

000000000041e773 <flatcc_builder_end_vector@@Base>:
  41e773:	push   rbp
  41e774:	mov    rbp,rsp
  41e777:	sub    rsp,0x20
  41e77b:	mov    QWORD PTR [rbp-0x18],rdi
  41e77f:	mov    rax,QWORD PTR [rbp-0x18]
  41e783:	mov    rax,QWORD PTR [rax+0x30]
  41e787:	movzx  eax,WORD PTR [rax+0xe]
  41e78b:	cmp    ax,0x4
  41e78f:	je     41e7b0 <flatcc_builder_end_vector@@Base+0x3d>
  41e791:	lea    rcx,[rip+0x1c238]        # 43a9d0 <flatcc_builder_padding_base@@Base+0xa50>
  41e798:	mov    edx,0x578
  41e79d:	lea    rsi,[rip+0x1b9dc]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41e7a4:	lea    rdi,[rip+0x1bb1d]        # 43a2c8 <flatcc_builder_padding_base@@Base+0x348>
  41e7ab:	call   405080 <__assert_fail@plt>
  41e7b0:	mov    rax,QWORD PTR [rbp-0x18]
  41e7b4:	mov    rax,QWORD PTR [rax+0x30]
  41e7b8:	mov    eax,DWORD PTR [rax+0x18]
  41e7bb:	mov    r8d,eax
  41e7be:	mov    rax,QWORD PTR [rbp-0x18]
  41e7c2:	movzx  eax,WORD PTR [rax+0xea]
  41e7c9:	movzx  edx,ax
  41e7cc:	mov    rax,QWORD PTR [rbp-0x18]
  41e7d0:	mov    rax,QWORD PTR [rax+0x30]
  41e7d4:	mov    eax,DWORD PTR [rax+0x10]
  41e7d7:	mov    ecx,eax
  41e7d9:	mov    rax,QWORD PTR [rbp-0x18]
  41e7dd:	mov    rax,QWORD PTR [rax+0x30]
  41e7e1:	mov    eax,DWORD PTR [rax+0x14]
  41e7e4:	mov    edi,eax
  41e7e6:	mov    rax,QWORD PTR [rbp-0x18]
  41e7ea:	mov    rsi,QWORD PTR [rax+0x18]
  41e7ee:	mov    rax,QWORD PTR [rbp-0x18]
  41e7f2:	mov    r9,r8
  41e7f5:	mov    r8d,edx
  41e7f8:	mov    rdx,rdi
  41e7fb:	mov    rdi,rax
  41e7fe:	call   41e4e2 <flatcc_builder_create_vector@@Base>
  41e803:	mov    DWORD PTR [rbp-0x4],eax
  41e806:	cmp    DWORD PTR [rbp-0x4],0x0
  41e80a:	jne    41e813 <flatcc_builder_end_vector@@Base+0xa0>
  41e80c:	mov    eax,0x0
  41e811:	jmp    41e822 <flatcc_builder_end_vector@@Base+0xaf>
  41e813:	mov    rax,QWORD PTR [rbp-0x18]
  41e817:	mov    rdi,rax
  41e81a:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41e81f:	mov    eax,DWORD PTR [rbp-0x4]
  41e822:	leave  
  41e823:	ret    

000000000041e824 <flatcc_builder_vector_count@@Base>:
  41e824:	push   rbp
  41e825:	mov    rbp,rsp
  41e828:	mov    QWORD PTR [rbp-0x8],rdi
  41e82c:	mov    rax,QWORD PTR [rbp-0x8]
  41e830:	mov    rax,QWORD PTR [rax+0x30]
  41e834:	mov    eax,DWORD PTR [rax+0x14]
  41e837:	mov    eax,eax
  41e839:	pop    rbp
  41e83a:	ret    

000000000041e83b <flatcc_builder_vector_edit@@Base>:
  41e83b:	push   rbp
  41e83c:	mov    rbp,rsp
  41e83f:	mov    QWORD PTR [rbp-0x8],rdi
  41e843:	mov    rax,QWORD PTR [rbp-0x8]
  41e847:	mov    rax,QWORD PTR [rax+0x18]
  41e84b:	pop    rbp
  41e84c:	ret    
  41e84d:	push   rbp
  41e84e:	mov    rbp,rsp
  41e851:	push   rbx
  41e852:	sub    rsp,0xe8
  41e859:	mov    QWORD PTR [rbp-0xd8],rdi
  41e860:	mov    QWORD PTR [rbp-0xe0],rsi
  41e867:	mov    QWORD PTR [rbp-0xe8],rdx
  41e86e:	mov    QWORD PTR [rbp-0xf0],rcx
  41e875:	mov    rax,QWORD PTR fs:0x28
  41e87e:	mov    QWORD PTR [rbp-0x18],rax
  41e882:	xor    eax,eax
  41e884:	mov    rax,QWORD PTR [rbp-0xe8]
  41e88b:	cmp    eax,0x3fffffff
  41e890:	jbe    41e89c <flatcc_builder_vector_edit@@Base+0x61>
  41e892:	mov    eax,0x0
  41e897:	jmp    41ebe0 <flatcc_builder_vector_edit@@Base+0x3a5>
  41e89c:	mov    rax,QWORD PTR [rbp-0xd8]
  41e8a3:	mov    esi,0x4
  41e8a8:	mov    rdi,rax
  41e8ab:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41e8b0:	mov    rax,QWORD PTR [rbp-0xe8]
  41e8b7:	shl    eax,0x2
  41e8ba:	mov    DWORD PTR [rbp-0xc0],eax
  41e8c0:	mov    rax,QWORD PTR [rbp-0xe8]
  41e8c7:	mov    edi,eax
  41e8c9:	call   41ab82 <main@@Base+0x10e3>
  41e8ce:	mov    DWORD PTR [rbp-0xc8],eax
  41e8d4:	mov    ecx,DWORD PTR [rbp-0xc0]
  41e8da:	mov    rax,QWORD PTR [rbp-0xd8]
  41e8e1:	mov    edx,0x4
  41e8e6:	mov    esi,ecx
  41e8e8:	mov    rdi,rax
  41e8eb:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41e8f0:	mov    DWORD PTR [rbp-0xbc],eax
  41e8f6:	mov    QWORD PTR [rbp-0xb0],0x0
  41e901:	mov    DWORD PTR [rbp-0xa8],0x0
  41e90b:	mov    rax,QWORD PTR [rbp-0xb0]
  41e912:	add    rax,0x4
  41e916:	mov    QWORD PTR [rbp-0xb0],rax
  41e91d:	mov    eax,DWORD PTR [rbp-0xa8]
  41e923:	cdqe   
  41e925:	shl    rax,0x4
  41e929:	lea    rbx,[rbp-0x10]
  41e92d:	add    rax,rbx
  41e930:	lea    rdx,[rax-0x90]
  41e937:	lea    rax,[rbp-0xc8]
  41e93e:	mov    QWORD PTR [rdx],rax
  41e941:	mov    eax,DWORD PTR [rbp-0xa8]
  41e947:	cdqe   
  41e949:	shl    rax,0x4
  41e94d:	lea    rbx,[rbp-0x10]
  41e951:	add    rax,rbx
  41e954:	sub    rax,0x88
  41e95a:	mov    QWORD PTR [rax],0x4
  41e961:	mov    eax,DWORD PTR [rbp-0xa8]
  41e967:	add    eax,0x1
  41e96a:	mov    DWORD PTR [rbp-0xa8],eax
  41e970:	cmp    DWORD PTR [rbp-0xc0],0x0
  41e977:	je     41e9e7 <flatcc_builder_vector_edit@@Base+0x1ac>
  41e979:	mov    rdx,QWORD PTR [rbp-0xb0]
  41e980:	mov    eax,DWORD PTR [rbp-0xc0]
  41e986:	add    rax,rdx
  41e989:	mov    QWORD PTR [rbp-0xb0],rax
  41e990:	mov    eax,DWORD PTR [rbp-0xa8]
  41e996:	cdqe   
  41e998:	shl    rax,0x4
  41e99c:	lea    rcx,[rbp-0x10]
  41e9a0:	add    rax,rcx
  41e9a3:	lea    rdx,[rax-0x90]
  41e9aa:	mov    rax,QWORD PTR [rbp-0xe0]
  41e9b1:	mov    QWORD PTR [rdx],rax
  41e9b4:	mov    edx,DWORD PTR [rbp-0xa8]
  41e9ba:	mov    eax,DWORD PTR [rbp-0xc0]
  41e9c0:	movsxd rdx,edx
  41e9c3:	shl    rdx,0x4
  41e9c7:	lea    rbx,[rbp-0x10]
  41e9cb:	add    rdx,rbx
  41e9ce:	sub    rdx,0x88
  41e9d5:	mov    QWORD PTR [rdx],rax
  41e9d8:	mov    eax,DWORD PTR [rbp-0xa8]
  41e9de:	add    eax,0x1
  41e9e1:	mov    DWORD PTR [rbp-0xa8],eax
  41e9e7:	cmp    DWORD PTR [rbp-0xbc],0x0
  41e9ee:	je     41ea5d <flatcc_builder_vector_edit@@Base+0x222>
  41e9f0:	mov    rdx,QWORD PTR [rbp-0xb0]
  41e9f7:	mov    eax,DWORD PTR [rbp-0xbc]
  41e9fd:	add    rax,rdx
  41ea00:	mov    QWORD PTR [rbp-0xb0],rax
  41ea07:	mov    eax,DWORD PTR [rbp-0xa8]
  41ea0d:	cdqe   
  41ea0f:	shl    rax,0x4
  41ea13:	lea    rsi,[rbp-0x10]
  41ea17:	add    rax,rsi
  41ea1a:	sub    rax,0x90
  41ea20:	mov    rdx,0x439f80
  41ea27:	mov    QWORD PTR [rax],rdx
  41ea2a:	mov    edx,DWORD PTR [rbp-0xa8]
  41ea30:	mov    eax,DWORD PTR [rbp-0xbc]
  41ea36:	movsxd rdx,edx
  41ea39:	shl    rdx,0x4
  41ea3d:	lea    rcx,[rbp-0x10]
  41ea41:	add    rdx,rcx
  41ea44:	sub    rdx,0x88
  41ea4b:	mov    QWORD PTR [rdx],rax
  41ea4e:	mov    eax,DWORD PTR [rbp-0xa8]
  41ea54:	add    eax,0x1
  41ea57:	mov    DWORD PTR [rbp-0xa8],eax
  41ea5d:	mov    rax,QWORD PTR [rbp-0xd8]
  41ea64:	mov    eax,DWORD PTR [rax+0xf0]
  41ea6a:	mov    edx,eax
  41ea6c:	mov    rax,QWORD PTR [rbp-0xb0]
  41ea73:	sub    edx,eax
  41ea75:	mov    eax,edx
  41ea77:	mov    DWORD PTR [rbp-0xb8],eax
  41ea7d:	mov    DWORD PTR [rbp-0xc4],0x0
  41ea87:	jmp    41ebb4 <flatcc_builder_vector_edit@@Base+0x379>
  41ea8c:	mov    eax,DWORD PTR [rbp-0xc4]
  41ea92:	lea    rdx,[rax*4+0x0]
  41ea9a:	mov    rax,QWORD PTR [rbp-0xe0]
  41eaa1:	add    rax,rdx
  41eaa4:	mov    eax,DWORD PTR [rax]
  41eaa6:	test   eax,eax
  41eaa8:	je     41eb4e <flatcc_builder_vector_edit@@Base+0x313>
  41eaae:	mov    eax,DWORD PTR [rbp-0xc4]
  41eab4:	lea    rdx,[rax*4+0x0]
  41eabc:	mov    rax,QWORD PTR [rbp-0xe0]
  41eac3:	add    rax,rdx
  41eac6:	mov    eax,DWORD PTR [rax]
  41eac8:	sub    eax,DWORD PTR [rbp-0xb8]
  41eace:	mov    edx,DWORD PTR [rbp-0xc4]
  41ead4:	shl    edx,0x2
  41ead7:	sub    eax,edx
  41ead9:	sub    eax,0x4
  41eadc:	mov    DWORD PTR [rbp-0xb4],eax
  41eae2:	mov    eax,DWORD PTR [rbp-0xc4]
  41eae8:	lea    rdx,[rax*4+0x0]
  41eaf0:	mov    rax,QWORD PTR [rbp-0xe0]
  41eaf7:	lea    rbx,[rdx+rax*1]
  41eafb:	mov    eax,DWORD PTR [rbp-0xb4]
  41eb01:	mov    edi,eax
  41eb03:	call   41ab82 <main@@Base+0x10e3>
  41eb08:	mov    DWORD PTR [rbx],eax
  41eb0a:	cmp    QWORD PTR [rbp-0xf0],0x0
  41eb12:	je     41ebad <flatcc_builder_vector_edit@@Base+0x372>
  41eb18:	mov    edx,DWORD PTR [rbp-0xc4]
  41eb1e:	mov    rax,QWORD PTR [rbp-0xf0]
  41eb25:	add    rax,rdx
  41eb28:	movzx  eax,BYTE PTR [rax]
  41eb2b:	test   al,al
  41eb2d:	jne    41ebad <flatcc_builder_vector_edit@@Base+0x372>
  41eb2f:	lea    rcx,[rip+0x1beba]        # 43a9f0 <flatcc_builder_padding_base@@Base+0xa70>
  41eb36:	mov    edx,0x5b1
  41eb3b:	lea    rsi,[rip+0x1b63e]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41eb42:	lea    rdi,[rip+0x1b94d]        # 43a496 <flatcc_builder_padding_base@@Base+0x516>
  41eb49:	call   405080 <__assert_fail@plt>
  41eb4e:	cmp    QWORD PTR [rbp-0xf0],0x0
  41eb56:	je     41eb8e <flatcc_builder_vector_edit@@Base+0x353>
  41eb58:	mov    edx,DWORD PTR [rbp-0xc4]
  41eb5e:	mov    rax,QWORD PTR [rbp-0xf0]
  41eb65:	add    rax,rdx
  41eb68:	movzx  eax,BYTE PTR [rax]
  41eb6b:	test   al,al
  41eb6d:	je     41ebad <flatcc_builder_vector_edit@@Base+0x372>
  41eb6f:	lea    rcx,[rip+0x1be7a]        # 43a9f0 <flatcc_builder_padding_base@@Base+0xa70>
  41eb76:	mov    edx,0x5b5
  41eb7b:	lea    rsi,[rip+0x1b5fe]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41eb82:	lea    rdi,[rip+0x1b91b]        # 43a4a4 <flatcc_builder_padding_base@@Base+0x524>
  41eb89:	call   405080 <__assert_fail@plt>
  41eb8e:	lea    rcx,[rip+0x1be5b]        # 43a9f0 <flatcc_builder_padding_base@@Base+0xa70>
  41eb95:	mov    edx,0x5b7
  41eb9a:	lea    rsi,[rip+0x1b5df]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41eba1:	lea    rdi,[rip+0x1b638]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41eba8:	call   405080 <__assert_fail@plt>
  41ebad:	add    DWORD PTR [rbp-0xc4],0x1
  41ebb4:	mov    rax,QWORD PTR [rbp-0xe8]
  41ebbb:	cmp    eax,DWORD PTR [rbp-0xc4]
  41ebc1:	ja     41ea8c <flatcc_builder_vector_edit@@Base+0x251>
  41ebc7:	lea    rdx,[rbp-0xb0]
  41ebce:	mov    rax,QWORD PTR [rbp-0xd8]
  41ebd5:	mov    rsi,rdx
  41ebd8:	mov    rdi,rax
  41ebdb:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41ebe0:	mov    rbx,QWORD PTR [rbp-0x18]
  41ebe4:	xor    rbx,QWORD PTR fs:0x28
  41ebed:	je     41ebf4 <flatcc_builder_vector_edit@@Base+0x3b9>
  41ebef:	call   405070 <__stack_chk_fail@plt>
  41ebf4:	add    rsp,0xe8
  41ebfb:	pop    rbx
  41ebfc:	pop    rbp
  41ebfd:	ret    

000000000041ebfe <flatcc_builder_create_offset_vector_direct@@Base>:
  41ebfe:	push   rbp
  41ebff:	mov    rbp,rsp
  41ec02:	sub    rsp,0x20
  41ec06:	mov    QWORD PTR [rbp-0x8],rdi
  41ec0a:	mov    QWORD PTR [rbp-0x10],rsi
  41ec0e:	mov    QWORD PTR [rbp-0x18],rdx
  41ec12:	mov    rdx,QWORD PTR [rbp-0x18]
  41ec16:	mov    rsi,QWORD PTR [rbp-0x10]
  41ec1a:	mov    rax,QWORD PTR [rbp-0x8]
  41ec1e:	mov    ecx,0x0
  41ec23:	mov    rdi,rax
  41ec26:	call   41e84d <flatcc_builder_vector_edit@@Base+0x12>
  41ec2b:	leave  
  41ec2c:	ret    

000000000041ec2d <flatcc_builder_end_offset_vector@@Base>:
  41ec2d:	push   rbp
  41ec2e:	mov    rbp,rsp
  41ec31:	sub    rsp,0x20
  41ec35:	mov    QWORD PTR [rbp-0x18],rdi
  41ec39:	mov    rax,QWORD PTR [rbp-0x18]
  41ec3d:	mov    rax,QWORD PTR [rax+0x30]
  41ec41:	movzx  eax,WORD PTR [rax+0xe]
  41ec45:	cmp    ax,0x5
  41ec49:	je     41ec6a <flatcc_builder_end_offset_vector@@Base+0x3d>
  41ec4b:	lea    rcx,[rip+0x1bdce]        # 43aa20 <flatcc_builder_padding_base@@Base+0xaa0>
  41ec52:	mov    edx,0x5c8
  41ec57:	lea    rsi,[rip+0x1b522]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ec5e:	lea    rdi,[rip+0x1b6d3]        # 43a338 <flatcc_builder_padding_base@@Base+0x3b8>
  41ec65:	call   405080 <__assert_fail@plt>
  41ec6a:	mov    rax,QWORD PTR [rbp-0x18]
  41ec6e:	mov    rax,QWORD PTR [rax+0x30]
  41ec72:	mov    eax,DWORD PTR [rax+0x14]
  41ec75:	mov    edx,eax
  41ec77:	mov    rax,QWORD PTR [rbp-0x18]
  41ec7b:	mov    rcx,QWORD PTR [rax+0x18]
  41ec7f:	mov    rax,QWORD PTR [rbp-0x18]
  41ec83:	mov    rsi,rcx
  41ec86:	mov    rdi,rax
  41ec89:	call   41ebfe <flatcc_builder_create_offset_vector_direct@@Base>
  41ec8e:	mov    DWORD PTR [rbp-0x4],eax
  41ec91:	cmp    DWORD PTR [rbp-0x4],0x0
  41ec95:	jne    41ec9e <flatcc_builder_end_offset_vector@@Base+0x71>
  41ec97:	mov    eax,0x0
  41ec9c:	jmp    41ecad <flatcc_builder_end_offset_vector@@Base+0x80>
  41ec9e:	mov    rax,QWORD PTR [rbp-0x18]
  41eca2:	mov    rdi,rax
  41eca5:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41ecaa:	mov    eax,DWORD PTR [rbp-0x4]
  41ecad:	leave  
  41ecae:	ret    

000000000041ecaf <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41ecaf:	push   rbp
  41ecb0:	mov    rbp,rsp
  41ecb3:	sub    rsp,0x20
  41ecb7:	mov    QWORD PTR [rbp-0x18],rdi
  41ecbb:	mov    QWORD PTR [rbp-0x20],rsi
  41ecbf:	mov    rax,QWORD PTR [rbp-0x18]
  41ecc3:	mov    rax,QWORD PTR [rax+0x30]
  41ecc7:	movzx  eax,WORD PTR [rax+0xe]
  41eccb:	cmp    ax,0x5
  41eccf:	je     41ecf0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  41ecd1:	lea    rcx,[rip+0x1bd88]        # 43aa60 <flatcc_builder_padding_base@@Base+0xae0>
  41ecd8:	mov    edx,0x5d5
  41ecdd:	lea    rsi,[rip+0x1b49c]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ece4:	lea    rdi,[rip+0x1b64d]        # 43a338 <flatcc_builder_padding_base@@Base+0x3b8>
  41eceb:	call   405080 <__assert_fail@plt>
  41ecf0:	mov    rax,QWORD PTR [rbp-0x18]
  41ecf4:	mov    rax,QWORD PTR [rax+0x30]
  41ecf8:	mov    eax,DWORD PTR [rax+0x14]
  41ecfb:	mov    edi,eax
  41ecfd:	mov    rax,QWORD PTR [rbp-0x18]
  41ed01:	mov    rsi,QWORD PTR [rax+0x18]
  41ed05:	mov    rdx,QWORD PTR [rbp-0x20]
  41ed09:	mov    rax,QWORD PTR [rbp-0x18]
  41ed0d:	mov    rcx,rdx
  41ed10:	mov    rdx,rdi
  41ed13:	mov    rdi,rax
  41ed16:	call   41e84d <flatcc_builder_vector_edit@@Base+0x12>
  41ed1b:	mov    DWORD PTR [rbp-0x4],eax
  41ed1e:	cmp    DWORD PTR [rbp-0x4],0x0
  41ed22:	jne    41ed2b <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  41ed24:	mov    eax,0x0
  41ed29:	jmp    41ed3a <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  41ed2b:	mov    rax,QWORD PTR [rbp-0x18]
  41ed2f:	mov    rdi,rax
  41ed32:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41ed37:	mov    eax,DWORD PTR [rbp-0x4]
  41ed3a:	leave  
  41ed3b:	ret    

000000000041ed3c <flatcc_builder_offset_vector_edit@@Base>:
  41ed3c:	push   rbp
  41ed3d:	mov    rbp,rsp
  41ed40:	mov    QWORD PTR [rbp-0x8],rdi
  41ed44:	mov    rax,QWORD PTR [rbp-0x8]
  41ed48:	mov    rax,QWORD PTR [rax+0x18]
  41ed4c:	pop    rbp
  41ed4d:	ret    

000000000041ed4e <flatcc_builder_offset_vector_count@@Base>:
  41ed4e:	push   rbp
  41ed4f:	mov    rbp,rsp
  41ed52:	mov    QWORD PTR [rbp-0x8],rdi
  41ed56:	mov    rax,QWORD PTR [rbp-0x8]
  41ed5a:	mov    rax,QWORD PTR [rax+0x30]
  41ed5e:	mov    eax,DWORD PTR [rax+0x14]
  41ed61:	mov    eax,eax
  41ed63:	pop    rbp
  41ed64:	ret    

000000000041ed65 <flatcc_builder_table_add_union@@Base>:
  41ed65:	push   rbp
  41ed66:	mov    rbp,rsp
  41ed69:	sub    rsp,0x30
  41ed6d:	mov    QWORD PTR [rbp-0x18],rdi
  41ed71:	mov    DWORD PTR [rbp-0x1c],esi
  41ed74:	mov    QWORD PTR [rbp-0x24],rdx
  41ed78:	mov    rax,QWORD PTR [rbp-0x18]
  41ed7c:	mov    rax,QWORD PTR [rax+0x30]
  41ed80:	movzx  eax,WORD PTR [rax+0xe]
  41ed84:	cmp    ax,0x3
  41ed88:	je     41eda9 <flatcc_builder_table_add_union@@Base+0x44>
  41ed8a:	lea    rcx,[rip+0x1bcff]        # 43aa90 <flatcc_builder_padding_base@@Base+0xb10>
  41ed91:	mov    edx,0x5ee
  41ed96:	lea    rsi,[rip+0x1b3e3]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ed9d:	lea    rdi,[rip+0x1b6b4]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41eda4:	call   405080 <__assert_fail@plt>
  41eda9:	movzx  eax,BYTE PTR [rbp-0x24]
  41edad:	test   al,al
  41edaf:	jne    41edf0 <flatcc_builder_table_add_union@@Base+0x8b>
  41edb1:	mov    eax,DWORD PTR [rbp-0x20]
  41edb4:	test   eax,eax
  41edb6:	je     41edf0 <flatcc_builder_table_add_union@@Base+0x8b>
  41edb8:	movzx  eax,BYTE PTR [rbp-0x24]
  41edbc:	test   al,al
  41edbe:	jne    41ede6 <flatcc_builder_table_add_union@@Base+0x81>
  41edc0:	mov    eax,DWORD PTR [rbp-0x20]
  41edc3:	test   eax,eax
  41edc5:	je     41ede6 <flatcc_builder_table_add_union@@Base+0x81>
  41edc7:	lea    rcx,[rip+0x1bcc2]        # 43aa90 <flatcc_builder_padding_base@@Base+0xb10>
  41edce:	mov    edx,0x5ef
  41edd3:	lea    rsi,[rip+0x1b3a6]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41edda:	lea    rdi,[rip+0x1b6d7]        # 43a4b8 <flatcc_builder_padding_base@@Base+0x538>
  41ede1:	call   405080 <__assert_fail@plt>
  41ede6:	mov    eax,0xffffffff
  41edeb:	jmp    41eeb8 <flatcc_builder_table_add_union@@Base+0x153>
  41edf0:	mov    eax,DWORD PTR [rbp-0x20]
  41edf3:	test   eax,eax
  41edf5:	je     41ee49 <flatcc_builder_table_add_union@@Base+0xe4>
  41edf7:	mov    edx,DWORD PTR [rbp-0x1c]
  41edfa:	mov    rax,QWORD PTR [rbp-0x18]
  41edfe:	mov    esi,edx
  41ee00:	mov    rdi,rax
  41ee03:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  41ee08:	mov    QWORD PTR [rbp-0x10],rax
  41ee0c:	cmp    QWORD PTR [rbp-0x10],0x0
  41ee11:	jne    41ee40 <flatcc_builder_table_add_union@@Base+0xdb>
  41ee13:	cmp    QWORD PTR [rbp-0x10],0x0
  41ee18:	jne    41ee39 <flatcc_builder_table_add_union@@Base+0xd4>
  41ee1a:	lea    rcx,[rip+0x1bc6f]        # 43aa90 <flatcc_builder_padding_base@@Base+0xb10>
  41ee21:	mov    edx,0x5f2
  41ee26:	lea    rsi,[rip+0x1b353]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ee2d:	lea    rdi,[rip+0x1b6a6]        # 43a4da <flatcc_builder_padding_base@@Base+0x55a>
  41ee34:	call   405080 <__assert_fail@plt>
  41ee39:	mov    eax,0xffffffff
  41ee3e:	jmp    41eeb8 <flatcc_builder_table_add_union@@Base+0x153>
  41ee40:	mov    edx,DWORD PTR [rbp-0x20]
  41ee43:	mov    rax,QWORD PTR [rbp-0x10]
  41ee47:	mov    DWORD PTR [rax],edx
  41ee49:	mov    eax,DWORD PTR [rbp-0x1c]
  41ee4c:	lea    esi,[rax-0x1]
  41ee4f:	mov    rax,QWORD PTR [rbp-0x18]
  41ee53:	mov    ecx,0x1
  41ee58:	mov    edx,0x1
  41ee5d:	mov    rdi,rax
  41ee60:	call   41f93b <flatcc_builder_table_add@@Base>
  41ee65:	mov    QWORD PTR [rbp-0x8],rax
  41ee69:	cmp    QWORD PTR [rbp-0x8],0x0
  41ee6e:	jne    41ee9d <flatcc_builder_table_add_union@@Base+0x138>
  41ee70:	cmp    QWORD PTR [rbp-0x8],0x0
  41ee75:	jne    41ee96 <flatcc_builder_table_add_union@@Base+0x131>
  41ee77:	lea    rcx,[rip+0x1bc12]        # 43aa90 <flatcc_builder_padding_base@@Base+0xb10>
  41ee7e:	mov    edx,0x5f6
  41ee83:	lea    rsi,[rip+0x1b2f6]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ee8a:	lea    rdi,[rip+0x1b653]        # 43a4e4 <flatcc_builder_padding_base@@Base+0x564>
  41ee91:	call   405080 <__assert_fail@plt>
  41ee96:	mov    eax,0xffffffff
  41ee9b:	jmp    41eeb8 <flatcc_builder_table_add_union@@Base+0x153>
  41ee9d:	movzx  eax,BYTE PTR [rbp-0x24]
  41eea1:	movzx  eax,al
  41eea4:	mov    edi,eax
  41eea6:	call   41ab8e <main@@Base+0x10ef>
  41eeab:	mov    edx,eax
  41eead:	mov    rax,QWORD PTR [rbp-0x8]
  41eeb1:	mov    BYTE PTR [rax],dl
  41eeb3:	mov    eax,0x0
  41eeb8:	leave  
  41eeb9:	ret    

000000000041eeba <flatcc_builder_table_add_union_vector@@Base>:
  41eeba:	push   rbp
  41eebb:	mov    rbp,rsp
  41eebe:	sub    rsp,0x30
  41eec2:	mov    QWORD PTR [rbp-0x18],rdi
  41eec6:	mov    DWORD PTR [rbp-0x1c],esi
  41eec9:	mov    QWORD PTR [rbp-0x24],rdx
  41eecd:	mov    rax,QWORD PTR [rbp-0x18]
  41eed1:	mov    rax,QWORD PTR [rax+0x30]
  41eed5:	movzx  eax,WORD PTR [rax+0xe]
  41eed9:	cmp    ax,0x3
  41eedd:	je     41eefe <flatcc_builder_table_add_union_vector@@Base+0x44>
  41eedf:	lea    rcx,[rip+0x1bbda]        # 43aac0 <flatcc_builder_padding_base@@Base+0xb40>
  41eee6:	mov    edx,0x600
  41eeeb:	lea    rsi,[rip+0x1b28e]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41eef2:	lea    rdi,[rip+0x1b55f]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41eef9:	call   405080 <__assert_fail@plt>
  41eefe:	mov    eax,DWORD PTR [rbp-0x24]
  41ef01:	test   eax,eax
  41ef03:	sete   dl
  41ef06:	mov    eax,DWORD PTR [rbp-0x20]
  41ef09:	test   eax,eax
  41ef0b:	sete   al
  41ef0e:	xor    eax,edx
  41ef10:	test   al,al
  41ef12:	je     41ef53 <flatcc_builder_table_add_union_vector@@Base+0x99>
  41ef14:	mov    eax,DWORD PTR [rbp-0x24]
  41ef17:	test   eax,eax
  41ef19:	setne  dl
  41ef1c:	mov    eax,DWORD PTR [rbp-0x20]
  41ef1f:	test   eax,eax
  41ef21:	sete   al
  41ef24:	xor    eax,edx
  41ef26:	test   al,al
  41ef28:	jne    41ef49 <flatcc_builder_table_add_union_vector@@Base+0x8f>
  41ef2a:	lea    rcx,[rip+0x1bb8f]        # 43aac0 <flatcc_builder_padding_base@@Base+0xb40>
  41ef31:	mov    edx,0x601
  41ef36:	lea    rsi,[rip+0x1b243]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ef3d:	lea    rdi,[rip+0x1b5ac]        # 43a4f0 <flatcc_builder_padding_base@@Base+0x570>
  41ef44:	call   405080 <__assert_fail@plt>
  41ef49:	mov    eax,0xffffffff
  41ef4e:	jmp    41f00a <flatcc_builder_table_add_union_vector@@Base+0x150>
  41ef53:	mov    eax,DWORD PTR [rbp-0x24]
  41ef56:	test   eax,eax
  41ef58:	je     41f005 <flatcc_builder_table_add_union_vector@@Base+0x14b>
  41ef5e:	mov    eax,DWORD PTR [rbp-0x1c]
  41ef61:	lea    edx,[rax-0x1]
  41ef64:	mov    rax,QWORD PTR [rbp-0x18]
  41ef68:	mov    esi,edx
  41ef6a:	mov    rdi,rax
  41ef6d:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  41ef72:	mov    QWORD PTR [rbp-0x8],rax
  41ef76:	cmp    QWORD PTR [rbp-0x8],0x0
  41ef7b:	jne    41efaa <flatcc_builder_table_add_union_vector@@Base+0xf0>
  41ef7d:	cmp    QWORD PTR [rbp-0x8],0x0
  41ef82:	jne    41efa3 <flatcc_builder_table_add_union_vector@@Base+0xe9>
  41ef84:	lea    rcx,[rip+0x1bb35]        # 43aac0 <flatcc_builder_padding_base@@Base+0xb40>
  41ef8b:	mov    edx,0x604
  41ef90:	lea    rsi,[rip+0x1b1e9]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ef97:	lea    rdi,[rip+0x1b53c]        # 43a4da <flatcc_builder_padding_base@@Base+0x55a>
  41ef9e:	call   405080 <__assert_fail@plt>
  41efa3:	mov    eax,0xffffffff
  41efa8:	jmp    41f00a <flatcc_builder_table_add_union_vector@@Base+0x150>
  41efaa:	mov    edx,DWORD PTR [rbp-0x24]
  41efad:	mov    rax,QWORD PTR [rbp-0x8]
  41efb1:	mov    DWORD PTR [rax],edx
  41efb3:	mov    edx,DWORD PTR [rbp-0x1c]
  41efb6:	mov    rax,QWORD PTR [rbp-0x18]
  41efba:	mov    esi,edx
  41efbc:	mov    rdi,rax
  41efbf:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  41efc4:	mov    QWORD PTR [rbp-0x8],rax
  41efc8:	cmp    QWORD PTR [rbp-0x8],0x0
  41efcd:	jne    41effc <flatcc_builder_table_add_union_vector@@Base+0x142>
  41efcf:	cmp    QWORD PTR [rbp-0x8],0x0
  41efd4:	jne    41eff5 <flatcc_builder_table_add_union_vector@@Base+0x13b>
  41efd6:	lea    rcx,[rip+0x1bae3]        # 43aac0 <flatcc_builder_padding_base@@Base+0xb40>
  41efdd:	mov    edx,0x608
  41efe2:	lea    rsi,[rip+0x1b197]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41efe9:	lea    rdi,[rip+0x1b4ea]        # 43a4da <flatcc_builder_padding_base@@Base+0x55a>
  41eff0:	call   405080 <__assert_fail@plt>
  41eff5:	mov    eax,0xffffffff
  41effa:	jmp    41f00a <flatcc_builder_table_add_union_vector@@Base+0x150>
  41effc:	mov    edx,DWORD PTR [rbp-0x20]
  41efff:	mov    rax,QWORD PTR [rbp-0x8]
  41f003:	mov    DWORD PTR [rax],edx
  41f005:	mov    eax,0x0
  41f00a:	leave  
  41f00b:	ret    

000000000041f00c <flatcc_builder_create_union_vector@@Base>:
  41f00c:	push   rbp
  41f00d:	mov    rbp,rsp
  41f010:	sub    rsp,0x40
  41f014:	mov    QWORD PTR [rbp-0x28],rdi
  41f018:	mov    QWORD PTR [rbp-0x30],rsi
  41f01c:	mov    QWORD PTR [rbp-0x38],rdx
  41f020:	mov    DWORD PTR [rbp-0x8],0x0
  41f027:	mov    DWORD PTR [rbp-0x4],0x0
  41f02e:	mov    rax,QWORD PTR [rbp-0x28]
  41f032:	mov    rdi,rax
  41f035:	call   41d63b <flatcc_builder_start_offset_vector@@Base>
  41f03a:	test   eax,eax
  41f03c:	je     41f047 <flatcc_builder_create_union_vector@@Base+0x3b>
  41f03e:	mov    rax,QWORD PTR [rbp-0x8]
  41f042:	jmp    41f133 <flatcc_builder_create_union_vector@@Base+0x127>
  41f047:	mov    rdx,QWORD PTR [rbp-0x38]
  41f04b:	mov    rax,QWORD PTR [rbp-0x28]
  41f04f:	mov    rsi,rdx
  41f052:	mov    rdi,rax
  41f055:	call   41d04b <flatcc_builder_extend_offset_vector@@Base>
  41f05a:	test   rax,rax
  41f05d:	jne    41f068 <flatcc_builder_create_union_vector@@Base+0x5c>
  41f05f:	mov    rax,QWORD PTR [rbp-0x8]
  41f063:	jmp    41f133 <flatcc_builder_create_union_vector@@Base+0x127>
  41f068:	mov    rax,QWORD PTR [rbp-0x38]
  41f06c:	mov    edx,eax
  41f06e:	mov    rax,QWORD PTR [rbp-0x28]
  41f072:	mov    esi,edx
  41f074:	mov    rdi,rax
  41f077:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41f07c:	mov    QWORD PTR [rbp-0x18],rax
  41f080:	cmp    QWORD PTR [rbp-0x18],0x0
  41f085:	jne    41f090 <flatcc_builder_create_union_vector@@Base+0x84>
  41f087:	mov    rax,QWORD PTR [rbp-0x8]
  41f08b:	jmp    41f133 <flatcc_builder_create_union_vector@@Base+0x127>
  41f090:	mov    rax,QWORD PTR [rbp-0x28]
  41f094:	mov    rdi,rax
  41f097:	call   41ed3c <flatcc_builder_offset_vector_edit@@Base>
  41f09c:	mov    QWORD PTR [rbp-0x10],rax
  41f0a0:	mov    QWORD PTR [rbp-0x20],0x0
  41f0a8:	jmp    41f0fd <flatcc_builder_create_union_vector@@Base+0xf1>
  41f0aa:	mov    rdx,QWORD PTR [rbp-0x18]
  41f0ae:	mov    rax,QWORD PTR [rbp-0x20]
  41f0b2:	add    rdx,rax
  41f0b5:	mov    rax,QWORD PTR [rbp-0x20]
  41f0b9:	lea    rcx,[rax*8+0x0]
  41f0c1:	mov    rax,QWORD PTR [rbp-0x30]
  41f0c5:	add    rax,rcx
  41f0c8:	movzx  eax,BYTE PTR [rax]
  41f0cb:	mov    BYTE PTR [rdx],al
  41f0cd:	mov    rax,QWORD PTR [rbp-0x20]
  41f0d1:	lea    rdx,[rax*4+0x0]
  41f0d9:	mov    rax,QWORD PTR [rbp-0x10]
  41f0dd:	add    rdx,rax
  41f0e0:	mov    rax,QWORD PTR [rbp-0x20]
  41f0e4:	lea    rcx,[rax*8+0x0]
  41f0ec:	mov    rax,QWORD PTR [rbp-0x30]
  41f0f0:	add    rax,rcx
  41f0f3:	mov    eax,DWORD PTR [rax+0x4]
  41f0f6:	mov    DWORD PTR [rdx],eax
  41f0f8:	add    QWORD PTR [rbp-0x20],0x1
  41f0fd:	mov    rax,QWORD PTR [rbp-0x20]
  41f101:	cmp    rax,QWORD PTR [rbp-0x38]
  41f105:	jb     41f0aa <flatcc_builder_create_union_vector@@Base+0x9e>
  41f107:	mov    rcx,QWORD PTR [rbp-0x38]
  41f10b:	mov    rdx,QWORD PTR [rbp-0x10]
  41f10f:	mov    rsi,QWORD PTR [rbp-0x18]
  41f113:	mov    rax,QWORD PTR [rbp-0x28]
  41f117:	mov    rdi,rax
  41f11a:	call   41f135 <flatcc_builder_create_union_vector_direct@@Base>
  41f11f:	mov    QWORD PTR [rbp-0x8],rax
  41f123:	mov    rax,QWORD PTR [rbp-0x28]
  41f127:	mov    rdi,rax
  41f12a:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41f12f:	mov    rax,QWORD PTR [rbp-0x8]
  41f133:	leave  
  41f134:	ret    

000000000041f135 <flatcc_builder_create_union_vector_direct@@Base>:
  41f135:	push   rbp
  41f136:	mov    rbp,rsp
  41f139:	sub    rsp,0x30
  41f13d:	mov    QWORD PTR [rbp-0x18],rdi
  41f141:	mov    QWORD PTR [rbp-0x20],rsi
  41f145:	mov    QWORD PTR [rbp-0x28],rdx
  41f149:	mov    QWORD PTR [rbp-0x30],rcx
  41f14d:	mov    DWORD PTR [rbp-0x8],0x0
  41f154:	mov    DWORD PTR [rbp-0x4],0x0
  41f15b:	mov    rcx,QWORD PTR [rbp-0x20]
  41f15f:	mov    rdx,QWORD PTR [rbp-0x30]
  41f163:	mov    rsi,QWORD PTR [rbp-0x28]
  41f167:	mov    rax,QWORD PTR [rbp-0x18]
  41f16b:	mov    rdi,rax
  41f16e:	call   41e84d <flatcc_builder_vector_edit@@Base+0x12>
  41f173:	mov    DWORD PTR [rbp-0x4],eax
  41f176:	mov    eax,DWORD PTR [rbp-0x4]
  41f179:	test   eax,eax
  41f17b:	jne    41f183 <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  41f17d:	mov    rax,QWORD PTR [rbp-0x8]
  41f181:	jmp    41f1bc <flatcc_builder_create_union_vector_direct@@Base+0x87>
  41f183:	mov    rdx,QWORD PTR [rbp-0x30]
  41f187:	mov    rsi,QWORD PTR [rbp-0x20]
  41f18b:	mov    rax,QWORD PTR [rbp-0x18]
  41f18f:	mov    r9d,0xffffffff
  41f195:	mov    r8d,0x1
  41f19b:	mov    ecx,0x1
  41f1a0:	mov    rdi,rax
  41f1a3:	call   41e4e2 <flatcc_builder_create_vector@@Base>
  41f1a8:	mov    DWORD PTR [rbp-0x8],eax
  41f1ab:	mov    eax,DWORD PTR [rbp-0x8]
  41f1ae:	test   eax,eax
  41f1b0:	jne    41f1b8 <flatcc_builder_create_union_vector_direct@@Base+0x83>
  41f1b2:	mov    rax,QWORD PTR [rbp-0x8]
  41f1b6:	jmp    41f1bc <flatcc_builder_create_union_vector_direct@@Base+0x87>
  41f1b8:	mov    rax,QWORD PTR [rbp-0x8]
  41f1bc:	leave  
  41f1bd:	ret    

000000000041f1be <flatcc_builder_start_union_vector@@Base>:
  41f1be:	push   rbp
  41f1bf:	mov    rbp,rsp
  41f1c2:	sub    rsp,0x10
  41f1c6:	mov    QWORD PTR [rbp-0x8],rdi
  41f1ca:	mov    rax,QWORD PTR [rbp-0x8]
  41f1ce:	mov    esi,0x4
  41f1d3:	mov    rdi,rax
  41f1d6:	call   41bbab <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41f1db:	test   eax,eax
  41f1dd:	je     41f1e6 <flatcc_builder_start_union_vector@@Base+0x28>
  41f1df:	mov    eax,0xffffffff
  41f1e4:	jmp    41f228 <flatcc_builder_start_union_vector@@Base+0x6a>
  41f1e6:	mov    rax,QWORD PTR [rbp-0x8]
  41f1ea:	mov    rax,QWORD PTR [rax+0x30]
  41f1ee:	mov    DWORD PTR [rax+0x10],0x8
  41f1f5:	mov    rax,QWORD PTR [rbp-0x8]
  41f1f9:	mov    rax,QWORD PTR [rax+0x30]
  41f1fd:	mov    DWORD PTR [rax+0x14],0x0
  41f204:	mov    rax,QWORD PTR [rbp-0x8]
  41f208:	mov    rax,QWORD PTR [rax+0x30]
  41f20c:	mov    WORD PTR [rax+0xe],0x7
  41f212:	mov    rax,QWORD PTR [rbp-0x8]
  41f216:	mov    esi,0xfffffffc
  41f21b:	mov    rdi,rax
  41f21e:	call   41adb5 <flatcc_builder_default_alloc@@Base+0x16d>
  41f223:	mov    eax,0x0
  41f228:	leave  
  41f229:	ret    

000000000041f22a <flatcc_builder_end_union_vector@@Base>:
  41f22a:	push   rbp
  41f22b:	mov    rbp,rsp
  41f22e:	sub    rsp,0x40
  41f232:	mov    QWORD PTR [rbp-0x38],rdi
  41f236:	mov    DWORD PTR [rbp-0x8],0x0
  41f23d:	mov    DWORD PTR [rbp-0x4],0x0
  41f244:	mov    rax,QWORD PTR [rbp-0x38]
  41f248:	mov    rax,QWORD PTR [rax+0x30]
  41f24c:	movzx  eax,WORD PTR [rax+0xe]
  41f250:	cmp    ax,0x7
  41f254:	je     41f275 <flatcc_builder_end_union_vector@@Base+0x4b>
  41f256:	lea    rcx,[rip+0x1b8a3]        # 43ab00 <flatcc_builder_padding_base@@Base+0xb80>
  41f25d:	mov    edx,0x651
  41f262:	lea    rsi,[rip+0x1af17]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f269:	lea    rdi,[rip+0x1b2a8]        # 43a518 <flatcc_builder_padding_base@@Base+0x598>
  41f270:	call   405080 <__assert_fail@plt>
  41f275:	mov    rax,QWORD PTR [rbp-0x38]
  41f279:	mov    rdi,rax
  41f27c:	call   41f382 <flatcc_builder_union_vector_count@@Base>
  41f281:	mov    QWORD PTR [rbp-0x28],rax
  41f285:	mov    rax,QWORD PTR [rbp-0x28]
  41f289:	mov    edx,eax
  41f28b:	mov    eax,edx
  41f28d:	shl    eax,0x2
  41f290:	add    edx,eax
  41f292:	mov    rax,QWORD PTR [rbp-0x38]
  41f296:	mov    esi,edx
  41f298:	mov    rdi,rax
  41f29b:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41f2a0:	mov    QWORD PTR [rbp-0x20],rax
  41f2a4:	cmp    QWORD PTR [rbp-0x20],0x0
  41f2a9:	jne    41f2b4 <flatcc_builder_end_union_vector@@Base+0x8a>
  41f2ab:	mov    rax,QWORD PTR [rbp-0x8]
  41f2af:	jmp    41f36e <flatcc_builder_end_union_vector@@Base+0x144>
  41f2b4:	mov    rax,QWORD PTR [rbp-0x28]
  41f2b8:	lea    rdx,[rax*4+0x0]
  41f2c0:	mov    rax,QWORD PTR [rbp-0x20]
  41f2c4:	add    rax,rdx
  41f2c7:	mov    QWORD PTR [rbp-0x18],rax
  41f2cb:	mov    rax,QWORD PTR [rbp-0x38]
  41f2cf:	mov    rdi,rax
  41f2d2:	call   41f370 <flatcc_builder_union_vector_edit@@Base>
  41f2d7:	mov    QWORD PTR [rbp-0x10],rax
  41f2db:	mov    QWORD PTR [rbp-0x30],0x0
  41f2e3:	jmp    41f338 <flatcc_builder_end_union_vector@@Base+0x10e>
  41f2e5:	mov    rdx,QWORD PTR [rbp-0x18]
  41f2e9:	mov    rax,QWORD PTR [rbp-0x30]
  41f2ed:	add    rdx,rax
  41f2f0:	mov    rax,QWORD PTR [rbp-0x30]
  41f2f4:	lea    rcx,[rax*8+0x0]
  41f2fc:	mov    rax,QWORD PTR [rbp-0x10]
  41f300:	add    rax,rcx
  41f303:	movzx  eax,BYTE PTR [rax]
  41f306:	mov    BYTE PTR [rdx],al
  41f308:	mov    rax,QWORD PTR [rbp-0x30]
  41f30c:	lea    rdx,[rax*4+0x0]
  41f314:	mov    rax,QWORD PTR [rbp-0x20]
  41f318:	add    rdx,rax
  41f31b:	mov    rax,QWORD PTR [rbp-0x30]
  41f31f:	lea    rcx,[rax*8+0x0]
  41f327:	mov    rax,QWORD PTR [rbp-0x10]
  41f32b:	add    rax,rcx
  41f32e:	mov    eax,DWORD PTR [rax+0x4]
  41f331:	mov    DWORD PTR [rdx],eax
  41f333:	add    QWORD PTR [rbp-0x30],0x1
  41f338:	mov    rax,QWORD PTR [rbp-0x30]
  41f33c:	cmp    rax,QWORD PTR [rbp-0x28]
  41f340:	jb     41f2e5 <flatcc_builder_end_union_vector@@Base+0xbb>
  41f342:	mov    rcx,QWORD PTR [rbp-0x28]
  41f346:	mov    rdx,QWORD PTR [rbp-0x20]
  41f34a:	mov    rsi,QWORD PTR [rbp-0x18]
  41f34e:	mov    rax,QWORD PTR [rbp-0x38]
  41f352:	mov    rdi,rax
  41f355:	call   41f135 <flatcc_builder_create_union_vector_direct@@Base>
  41f35a:	mov    QWORD PTR [rbp-0x8],rax
  41f35e:	mov    rax,QWORD PTR [rbp-0x38]
  41f362:	mov    rdi,rax
  41f365:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41f36a:	mov    rax,QWORD PTR [rbp-0x8]
  41f36e:	leave  
  41f36f:	ret    

000000000041f370 <flatcc_builder_union_vector_edit@@Base>:
  41f370:	push   rbp
  41f371:	mov    rbp,rsp
  41f374:	mov    QWORD PTR [rbp-0x8],rdi
  41f378:	mov    rax,QWORD PTR [rbp-0x8]
  41f37c:	mov    rax,QWORD PTR [rax+0x18]
  41f380:	pop    rbp
  41f381:	ret    

000000000041f382 <flatcc_builder_union_vector_count@@Base>:
  41f382:	push   rbp
  41f383:	mov    rbp,rsp
  41f386:	mov    QWORD PTR [rbp-0x8],rdi
  41f38a:	mov    rax,QWORD PTR [rbp-0x8]
  41f38e:	mov    rax,QWORD PTR [rax+0x30]
  41f392:	mov    eax,DWORD PTR [rax+0x14]
  41f395:	mov    eax,eax
  41f397:	pop    rbp
  41f398:	ret    

000000000041f399 <flatcc_builder_extend_union_vector@@Base>:
  41f399:	push   rbp
  41f39a:	mov    rbp,rsp
  41f39d:	sub    rsp,0x10
  41f3a1:	mov    QWORD PTR [rbp-0x8],rdi
  41f3a5:	mov    QWORD PTR [rbp-0x10],rsi
  41f3a9:	mov    rax,QWORD PTR [rbp-0x10]
  41f3ad:	mov    ecx,eax
  41f3af:	mov    rax,QWORD PTR [rbp-0x8]
  41f3b3:	mov    edx,0x1fffffff
  41f3b8:	mov    esi,ecx
  41f3ba:	mov    rdi,rax
  41f3bd:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41f3c2:	test   eax,eax
  41f3c4:	je     41f3cd <flatcc_builder_extend_union_vector@@Base+0x34>
  41f3c6:	mov    eax,0x0
  41f3cb:	jmp    41f3e6 <flatcc_builder_extend_union_vector@@Base+0x4d>
  41f3cd:	mov    rax,QWORD PTR [rbp-0x10]
  41f3d1:	lea    edx,[rax*8+0x0]
  41f3d8:	mov    rax,QWORD PTR [rbp-0x8]
  41f3dc:	mov    esi,edx
  41f3de:	mov    rdi,rax
  41f3e1:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41f3e6:	leave  
  41f3e7:	ret    

000000000041f3e8 <flatcc_builder_truncate_union_vector@@Base>:
  41f3e8:	push   rbp
  41f3e9:	mov    rbp,rsp
  41f3ec:	sub    rsp,0x10
  41f3f0:	mov    QWORD PTR [rbp-0x8],rdi
  41f3f4:	mov    QWORD PTR [rbp-0x10],rsi
  41f3f8:	mov    rax,QWORD PTR [rbp-0x8]
  41f3fc:	mov    rax,QWORD PTR [rax+0x30]
  41f400:	movzx  eax,WORD PTR [rax+0xe]
  41f404:	cmp    ax,0x7
  41f408:	je     41f429 <flatcc_builder_truncate_union_vector@@Base+0x41>
  41f40a:	lea    rcx,[rip+0x1b70f]        # 43ab20 <flatcc_builder_padding_base@@Base+0xba0>
  41f411:	mov    edx,0x681
  41f416:	lea    rsi,[rip+0x1ad63]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f41d:	lea    rdi,[rip+0x1b0f4]        # 43a518 <flatcc_builder_padding_base@@Base+0x598>
  41f424:	call   405080 <__assert_fail@plt>
  41f429:	mov    rax,QWORD PTR [rbp-0x8]
  41f42d:	mov    rax,QWORD PTR [rax+0x30]
  41f431:	mov    eax,DWORD PTR [rax+0x14]
  41f434:	mov    rdx,QWORD PTR [rbp-0x10]
  41f438:	cmp    eax,edx
  41f43a:	jae    41f475 <flatcc_builder_truncate_union_vector@@Base+0x8d>
  41f43c:	mov    rax,QWORD PTR [rbp-0x8]
  41f440:	mov    rax,QWORD PTR [rax+0x30]
  41f444:	mov    eax,DWORD PTR [rax+0x14]
  41f447:	mov    rdx,QWORD PTR [rbp-0x10]
  41f44b:	cmp    eax,edx
  41f44d:	jae    41f46e <flatcc_builder_truncate_union_vector@@Base+0x86>
  41f44f:	lea    rcx,[rip+0x1b6ca]        # 43ab20 <flatcc_builder_padding_base@@Base+0xba0>
  41f456:	mov    edx,0x682
  41f45b:	lea    rsi,[rip+0x1ad1e]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f462:	lea    rdi,[rip+0x1af5f]        # 43a3c8 <flatcc_builder_padding_base@@Base+0x448>
  41f469:	call   405080 <__assert_fail@plt>
  41f46e:	mov    eax,0xffffffff
  41f473:	jmp    41f4b6 <flatcc_builder_truncate_union_vector@@Base+0xce>
  41f475:	mov    rax,QWORD PTR [rbp-0x8]
  41f479:	mov    rax,QWORD PTR [rax+0x30]
  41f47d:	mov    rdx,QWORD PTR [rbp-0x8]
  41f481:	mov    rdx,QWORD PTR [rdx+0x30]
  41f485:	mov    edx,DWORD PTR [rdx+0x14]
  41f488:	mov    rcx,QWORD PTR [rbp-0x10]
  41f48c:	sub    edx,ecx
  41f48e:	mov    DWORD PTR [rax+0x14],edx
  41f491:	mov    rax,QWORD PTR [rbp-0x8]
  41f495:	mov    rax,QWORD PTR [rax+0x30]
  41f499:	mov    eax,DWORD PTR [rax+0x10]
  41f49c:	mov    rdx,QWORD PTR [rbp-0x10]
  41f4a0:	imul   edx,eax
  41f4a3:	mov    rax,QWORD PTR [rbp-0x8]
  41f4a7:	mov    esi,edx
  41f4a9:	mov    rdi,rax
  41f4ac:	call   41af25 <flatcc_builder_default_alloc@@Base+0x2dd>
  41f4b1:	mov    eax,0x0
  41f4b6:	leave  
  41f4b7:	ret    

000000000041f4b8 <flatcc_builder_union_vector_push@@Base>:
  41f4b8:	push   rbp
  41f4b9:	mov    rbp,rsp
  41f4bc:	sub    rsp,0x20
  41f4c0:	mov    QWORD PTR [rbp-0x18],rdi
  41f4c4:	mov    QWORD PTR [rbp-0x20],rsi
  41f4c8:	mov    rax,QWORD PTR [rbp-0x18]
  41f4cc:	mov    rax,QWORD PTR [rax+0x30]
  41f4d0:	movzx  eax,WORD PTR [rax+0xe]
  41f4d4:	cmp    ax,0x7
  41f4d8:	je     41f4f9 <flatcc_builder_union_vector_push@@Base+0x41>
  41f4da:	lea    rcx,[rip+0x1b67f]        # 43ab60 <flatcc_builder_padding_base@@Base+0xbe0>
  41f4e1:	mov    edx,0x68d
  41f4e6:	lea    rsi,[rip+0x1ac93]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f4ed:	lea    rdi,[rip+0x1b024]        # 43a518 <flatcc_builder_padding_base@@Base+0x598>
  41f4f4:	call   405080 <__assert_fail@plt>
  41f4f9:	mov    rax,QWORD PTR [rbp-0x18]
  41f4fd:	mov    rax,QWORD PTR [rax+0x30]
  41f501:	mov    eax,DWORD PTR [rax+0x14]
  41f504:	cmp    eax,0x1fffffff
  41f509:	jne    41f512 <flatcc_builder_union_vector_push@@Base+0x5a>
  41f50b:	mov    eax,0x0
  41f510:	jmp    41f55d <flatcc_builder_union_vector_push@@Base+0xa5>
  41f512:	mov    rax,QWORD PTR [rbp-0x18]
  41f516:	mov    rax,QWORD PTR [rax+0x30]
  41f51a:	mov    rdx,QWORD PTR [rbp-0x18]
  41f51e:	mov    rdx,QWORD PTR [rdx+0x30]
  41f522:	mov    edx,DWORD PTR [rdx+0x14]
  41f525:	add    edx,0x1
  41f528:	mov    DWORD PTR [rax+0x14],edx
  41f52b:	mov    rax,QWORD PTR [rbp-0x18]
  41f52f:	mov    esi,0x8
  41f534:	mov    rdi,rax
  41f537:	call   41aea8 <flatcc_builder_default_alloc@@Base+0x260>
  41f53c:	mov    QWORD PTR [rbp-0x8],rax
  41f540:	cmp    QWORD PTR [rbp-0x8],0x0
  41f545:	jne    41f54e <flatcc_builder_union_vector_push@@Base+0x96>
  41f547:	mov    eax,0x0
  41f54c:	jmp    41f55d <flatcc_builder_union_vector_push@@Base+0xa5>
  41f54e:	mov    rax,QWORD PTR [rbp-0x8]
  41f552:	mov    rdx,QWORD PTR [rbp-0x20]
  41f556:	mov    QWORD PTR [rax],rdx
  41f559:	mov    rax,QWORD PTR [rbp-0x8]
  41f55d:	leave  
  41f55e:	ret    

000000000041f55f <flatcc_builder_append_union_vector@@Base>:
  41f55f:	push   rbp
  41f560:	mov    rbp,rsp
  41f563:	sub    rsp,0x20
  41f567:	mov    QWORD PTR [rbp-0x8],rdi
  41f56b:	mov    QWORD PTR [rbp-0x10],rsi
  41f56f:	mov    QWORD PTR [rbp-0x18],rdx
  41f573:	mov    rax,QWORD PTR [rbp-0x8]
  41f577:	mov    rax,QWORD PTR [rax+0x30]
  41f57b:	movzx  eax,WORD PTR [rax+0xe]
  41f57f:	cmp    ax,0x7
  41f583:	je     41f5a4 <flatcc_builder_append_union_vector@@Base+0x45>
  41f585:	lea    rcx,[rip+0x1b614]        # 43aba0 <flatcc_builder_padding_base@@Base+0xc20>
  41f58c:	mov    edx,0x69c
  41f591:	lea    rsi,[rip+0x1abe8]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f598:	lea    rdi,[rip+0x1af79]        # 43a518 <flatcc_builder_padding_base@@Base+0x598>
  41f59f:	call   405080 <__assert_fail@plt>
  41f5a4:	mov    rax,QWORD PTR [rbp-0x18]
  41f5a8:	mov    ecx,eax
  41f5aa:	mov    rax,QWORD PTR [rbp-0x8]
  41f5ae:	mov    edx,0x1fffffff
  41f5b3:	mov    esi,ecx
  41f5b5:	mov    rdi,rax
  41f5b8:	call   41cdff <flatcc_builder_end_struct@@Base+0x8e>
  41f5bd:	test   eax,eax
  41f5bf:	je     41f5c8 <flatcc_builder_append_union_vector@@Base+0x69>
  41f5c1:	mov    eax,0x0
  41f5c6:	jmp    41f5e6 <flatcc_builder_append_union_vector@@Base+0x87>
  41f5c8:	mov    rax,QWORD PTR [rbp-0x18]
  41f5cc:	lea    edx,[rax*8+0x0]
  41f5d3:	mov    rcx,QWORD PTR [rbp-0x10]
  41f5d7:	mov    rax,QWORD PTR [rbp-0x8]
  41f5db:	mov    rsi,rcx
  41f5de:	mov    rdi,rax
  41f5e1:	call   41af71 <flatcc_builder_default_alloc@@Base+0x329>
  41f5e6:	leave  
  41f5e7:	ret    

000000000041f5e8 <flatcc_builder_create_string@@Base>:
  41f5e8:	push   rbp
  41f5e9:	mov    rbp,rsp
  41f5ec:	sub    rsp,0xd0
  41f5f3:	mov    QWORD PTR [rbp-0xb8],rdi
  41f5fa:	mov    QWORD PTR [rbp-0xc0],rsi
  41f601:	mov    QWORD PTR [rbp-0xc8],rdx
  41f608:	mov    rax,QWORD PTR fs:0x28
  41f611:	mov    QWORD PTR [rbp-0x8],rax
  41f615:	xor    eax,eax
  41f617:	mov    eax,0xffffffff
  41f61c:	cmp    QWORD PTR [rbp-0xc8],rax
  41f623:	jbe    41f62f <flatcc_builder_create_string@@Base+0x47>
  41f625:	mov    eax,0x0
  41f62a:	jmp    41f7d6 <flatcc_builder_create_string@@Base+0x1ee>
  41f62f:	mov    rax,QWORD PTR [rbp-0xc8]
  41f636:	mov    edi,eax
  41f638:	call   41ab82 <main@@Base+0x10e3>
  41f63d:	mov    DWORD PTR [rbp-0xa8],eax
  41f643:	mov    rax,QWORD PTR [rbp-0xc8]
  41f64a:	lea    ecx,[rax+0x1]
  41f64d:	mov    rax,QWORD PTR [rbp-0xb8]
  41f654:	mov    edx,0x4
  41f659:	mov    esi,ecx
  41f65b:	mov    rdi,rax
  41f65e:	call   41be4a <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41f663:	add    eax,0x1
  41f666:	mov    DWORD PTR [rbp-0xa4],eax
  41f66c:	mov    QWORD PTR [rbp-0xa0],0x0
  41f677:	mov    DWORD PTR [rbp-0x98],0x0
  41f681:	mov    rax,QWORD PTR [rbp-0xa0]
  41f688:	add    rax,0x4
  41f68c:	mov    QWORD PTR [rbp-0xa0],rax
  41f693:	mov    eax,DWORD PTR [rbp-0x98]
  41f699:	cdqe   
  41f69b:	shl    rax,0x4
  41f69f:	add    rax,rbp
  41f6a2:	lea    rdx,[rax-0x90]
  41f6a9:	lea    rax,[rbp-0xa8]
  41f6b0:	mov    QWORD PTR [rdx],rax
  41f6b3:	mov    eax,DWORD PTR [rbp-0x98]
  41f6b9:	cdqe   
  41f6bb:	shl    rax,0x4
  41f6bf:	add    rax,rbp
  41f6c2:	sub    rax,0x88
  41f6c8:	mov    QWORD PTR [rax],0x4
  41f6cf:	mov    eax,DWORD PTR [rbp-0x98]
  41f6d5:	add    eax,0x1
  41f6d8:	mov    DWORD PTR [rbp-0x98],eax
  41f6de:	cmp    QWORD PTR [rbp-0xc8],0x0
  41f6e6:	je     41f74f <flatcc_builder_create_string@@Base+0x167>
  41f6e8:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f6ef:	mov    rax,QWORD PTR [rbp-0xc8]
  41f6f6:	add    rax,rdx
  41f6f9:	mov    QWORD PTR [rbp-0xa0],rax
  41f700:	mov    eax,DWORD PTR [rbp-0x98]
  41f706:	cdqe   
  41f708:	shl    rax,0x4
  41f70c:	add    rax,rbp
  41f70f:	lea    rdx,[rax-0x90]
  41f716:	mov    rax,QWORD PTR [rbp-0xc0]
  41f71d:	mov    QWORD PTR [rdx],rax
  41f720:	mov    eax,DWORD PTR [rbp-0x98]
  41f726:	cdqe   
  41f728:	shl    rax,0x4
  41f72c:	add    rax,rbp
  41f72f:	lea    rdx,[rax-0x88]
  41f736:	mov    rax,QWORD PTR [rbp-0xc8]
  41f73d:	mov    QWORD PTR [rdx],rax
  41f740:	mov    eax,DWORD PTR [rbp-0x98]
  41f746:	add    eax,0x1
  41f749:	mov    DWORD PTR [rbp-0x98],eax
  41f74f:	cmp    DWORD PTR [rbp-0xa4],0x0
  41f756:	je     41f7bd <flatcc_builder_create_string@@Base+0x1d5>
  41f758:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f75f:	mov    eax,DWORD PTR [rbp-0xa4]
  41f765:	add    rax,rdx
  41f768:	mov    QWORD PTR [rbp-0xa0],rax
  41f76f:	mov    eax,DWORD PTR [rbp-0x98]
  41f775:	cdqe   
  41f777:	shl    rax,0x4
  41f77b:	add    rax,rbp
  41f77e:	sub    rax,0x90
  41f784:	mov    rdx,0x439f80
  41f78b:	mov    QWORD PTR [rax],rdx
  41f78e:	mov    edx,DWORD PTR [rbp-0x98]
  41f794:	mov    eax,DWORD PTR [rbp-0xa4]
  41f79a:	movsxd rdx,edx
  41f79d:	shl    rdx,0x4
  41f7a1:	add    rdx,rbp
  41f7a4:	sub    rdx,0x88
  41f7ab:	mov    QWORD PTR [rdx],rax
  41f7ae:	mov    eax,DWORD PTR [rbp-0x98]
  41f7b4:	add    eax,0x1
  41f7b7:	mov    DWORD PTR [rbp-0x98],eax
  41f7bd:	lea    rdx,[rbp-0xa0]
  41f7c4:	mov    rax,QWORD PTR [rbp-0xb8]
  41f7cb:	mov    rsi,rdx
  41f7ce:	mov    rdi,rax
  41f7d1:	call   41be96 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41f7d6:	mov    rcx,QWORD PTR [rbp-0x8]
  41f7da:	xor    rcx,QWORD PTR fs:0x28
  41f7e3:	je     41f7ea <flatcc_builder_create_string@@Base+0x202>
  41f7e5:	call   405070 <__stack_chk_fail@plt>
  41f7ea:	leave  
  41f7eb:	ret    

000000000041f7ec <flatcc_builder_create_string_str@@Base>:
  41f7ec:	push   rbp
  41f7ed:	mov    rbp,rsp
  41f7f0:	sub    rsp,0x10
  41f7f4:	mov    QWORD PTR [rbp-0x8],rdi
  41f7f8:	mov    QWORD PTR [rbp-0x10],rsi
  41f7fc:	mov    rax,QWORD PTR [rbp-0x10]
  41f800:	mov    rdi,rax
  41f803:	call   405060 <strlen@plt>
  41f808:	mov    rdx,rax
  41f80b:	mov    rcx,QWORD PTR [rbp-0x10]
  41f80f:	mov    rax,QWORD PTR [rbp-0x8]
  41f813:	mov    rsi,rcx
  41f816:	mov    rdi,rax
  41f819:	call   41f5e8 <flatcc_builder_create_string@@Base>
  41f81e:	leave  
  41f81f:	ret    

000000000041f820 <flatcc_builder_create_string_strn@@Base>:
  41f820:	push   rbp
  41f821:	mov    rbp,rsp
  41f824:	sub    rsp,0x20
  41f828:	mov    QWORD PTR [rbp-0x8],rdi
  41f82c:	mov    QWORD PTR [rbp-0x10],rsi
  41f830:	mov    QWORD PTR [rbp-0x18],rdx
  41f834:	mov    rdx,QWORD PTR [rbp-0x18]
  41f838:	mov    rax,QWORD PTR [rbp-0x10]
  41f83c:	mov    rsi,rdx
  41f83f:	mov    rdi,rax
  41f842:	call   41ac02 <main@@Base+0x1163>
  41f847:	mov    rdx,rax
  41f84a:	mov    rcx,QWORD PTR [rbp-0x10]
  41f84e:	mov    rax,QWORD PTR [rbp-0x8]
  41f852:	mov    rsi,rcx
  41f855:	mov    rdi,rax
  41f858:	call   41f5e8 <flatcc_builder_create_string@@Base>
  41f85d:	leave  
  41f85e:	ret    

000000000041f85f <flatcc_builder_end_string@@Base>:
  41f85f:	push   rbp
  41f860:	mov    rbp,rsp
  41f863:	sub    rsp,0x20
  41f867:	mov    QWORD PTR [rbp-0x18],rdi
  41f86b:	mov    rax,QWORD PTR [rbp-0x18]
  41f86f:	mov    rax,QWORD PTR [rax+0x30]
  41f873:	movzx  eax,WORD PTR [rax+0xe]
  41f877:	cmp    ax,0x6
  41f87b:	je     41f89c <flatcc_builder_end_string@@Base+0x3d>
  41f87d:	lea    rcx,[rip+0x1b34c]        # 43abd0 <flatcc_builder_padding_base@@Base+0xc50>
  41f884:	mov    edx,0x6c4
  41f889:	lea    rsi,[rip+0x1a8f0]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f890:	lea    rdi,[rip+0x1aad9]        # 43a370 <flatcc_builder_padding_base@@Base+0x3f0>
  41f897:	call   405080 <__assert_fail@plt>
  41f89c:	mov    rax,QWORD PTR [rbp-0x18]
  41f8a0:	mov    rax,QWORD PTR [rax+0x30]
  41f8a4:	mov    edx,DWORD PTR [rax+0x14]
  41f8a7:	mov    rax,QWORD PTR [rbp-0x18]
  41f8ab:	mov    eax,DWORD PTR [rax+0x20]
  41f8ae:	cmp    edx,eax
  41f8b0:	je     41f8d1 <flatcc_builder_end_string@@Base+0x72>
  41f8b2:	lea    rcx,[rip+0x1b317]        # 43abd0 <flatcc_builder_padding_base@@Base+0xc50>
  41f8b9:	mov    edx,0x6c5
  41f8be:	lea    rsi,[rip+0x1a8bb]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f8c5:	lea    rdi,[rip+0x1ac84]        # 43a550 <flatcc_builder_padding_base@@Base+0x5d0>
  41f8cc:	call   405080 <__assert_fail@plt>
  41f8d1:	mov    rax,QWORD PTR [rbp-0x18]
  41f8d5:	mov    eax,DWORD PTR [rax+0x20]
  41f8d8:	mov    edx,eax
  41f8da:	mov    rax,QWORD PTR [rbp-0x18]
  41f8de:	mov    rcx,QWORD PTR [rax+0x18]
  41f8e2:	mov    rax,QWORD PTR [rbp-0x18]
  41f8e6:	mov    rsi,rcx
  41f8e9:	mov    rdi,rax
  41f8ec:	call   41f5e8 <flatcc_builder_create_string@@Base>
  41f8f1:	mov    DWORD PTR [rbp-0x4],eax
  41f8f4:	cmp    DWORD PTR [rbp-0x4],0x0
  41f8f8:	jne    41f901 <flatcc_builder_end_string@@Base+0xa2>
  41f8fa:	mov    eax,0x0
  41f8ff:	jmp    41f910 <flatcc_builder_end_string@@Base+0xb1>
  41f901:	mov    rax,QWORD PTR [rbp-0x18]
  41f905:	mov    rdi,rax
  41f908:	call   41bd83 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41f90d:	mov    eax,DWORD PTR [rbp-0x4]
  41f910:	leave  
  41f911:	ret    

000000000041f912 <flatcc_builder_string_edit@@Base>:
  41f912:	push   rbp
  41f913:	mov    rbp,rsp
  41f916:	mov    QWORD PTR [rbp-0x8],rdi
  41f91a:	mov    rax,QWORD PTR [rbp-0x8]
  41f91e:	mov    rax,QWORD PTR [rax+0x18]
  41f922:	pop    rbp
  41f923:	ret    

000000000041f924 <flatcc_builder_string_len@@Base>:
  41f924:	push   rbp
  41f925:	mov    rbp,rsp
  41f928:	mov    QWORD PTR [rbp-0x8],rdi
  41f92c:	mov    rax,QWORD PTR [rbp-0x8]
  41f930:	mov    rax,QWORD PTR [rax+0x30]
  41f934:	mov    eax,DWORD PTR [rax+0x14]
  41f937:	mov    eax,eax
  41f939:	pop    rbp
  41f93a:	ret    

000000000041f93b <flatcc_builder_table_add@@Base>:
  41f93b:	push   rbp
  41f93c:	mov    rbp,rsp
  41f93f:	sub    rsp,0x20
  41f943:	mov    QWORD PTR [rbp-0x8],rdi
  41f947:	mov    DWORD PTR [rbp-0xc],esi
  41f94a:	mov    QWORD PTR [rbp-0x18],rdx
  41f94e:	mov    eax,ecx
  41f950:	mov    WORD PTR [rbp-0x10],ax
  41f954:	mov    rax,QWORD PTR [rbp-0x8]
  41f958:	mov    rax,QWORD PTR [rax+0x30]
  41f95c:	movzx  eax,WORD PTR [rax+0xe]
  41f960:	cmp    ax,0x3
  41f964:	je     41f985 <flatcc_builder_table_add@@Base+0x4a>
  41f966:	lea    rcx,[rip+0x1b283]        # 43abf0 <flatcc_builder_padding_base@@Base+0xc70>
  41f96d:	mov    edx,0x6ed
  41f972:	lea    rsi,[rip+0x1a807]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f979:	lea    rdi,[rip+0x1aad8]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41f980:	call   405080 <__assert_fail@plt>
  41f985:	cmp    DWORD PTR [rbp-0xc],0x0
  41f989:	js     41f994 <flatcc_builder_table_add@@Base+0x59>
  41f98b:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41f992:	jle    41f9b3 <flatcc_builder_table_add@@Base+0x78>
  41f994:	lea    rcx,[rip+0x1b255]        # 43abf0 <flatcc_builder_padding_base@@Base+0xc70>
  41f99b:	mov    edx,0x6ee
  41f9a0:	lea    rsi,[rip+0x1a7d9]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41f9a7:	lea    rdi,[rip+0x1abca]        # 43a578 <flatcc_builder_padding_base@@Base+0x5f8>
  41f9ae:	call   405080 <__assert_fail@plt>
  41f9b3:	mov    rax,QWORD PTR [rbp-0x8]
  41f9b7:	movzx  eax,WORD PTR [rax+0xea]
  41f9be:	cmp    ax,WORD PTR [rbp-0x10]
  41f9c2:	jae    41f9d3 <flatcc_builder_table_add@@Base+0x98>
  41f9c4:	mov    rax,QWORD PTR [rbp-0x8]
  41f9c8:	movzx  edx,WORD PTR [rbp-0x10]
  41f9cc:	mov    WORD PTR [rax+0xea],dx
  41f9d3:	mov    rax,QWORD PTR [rbp-0x8]
  41f9d7:	mov    rax,QWORD PTR [rax+0x8]
  41f9db:	mov    edx,DWORD PTR [rbp-0xc]
  41f9de:	movsxd rdx,edx
  41f9e1:	add    rdx,rdx
  41f9e4:	add    rax,rdx
  41f9e7:	movzx  eax,WORD PTR [rax]
  41f9ea:	test   ax,ax
  41f9ed:	je     41fa0e <flatcc_builder_table_add@@Base+0xd3>
  41f9ef:	lea    rcx,[rip+0x1b1fa]        # 43abf0 <flatcc_builder_padding_base@@Base+0xc70>
  41f9f6:	mov    edx,0x6f8
  41f9fb:	lea    rsi,[rip+0x1a77e]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41fa02:	lea    rdi,[rip+0x1a7d7]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41fa09:	call   405080 <__assert_fail@plt>
  41fa0e:	mov    rax,QWORD PTR [rbp-0x8]
  41fa12:	mov    edx,DWORD PTR [rax+0x14]
  41fa15:	mov    eax,DWORD PTR [rbp-0xc]
  41fa18:	xor    eax,edx
  41fa1a:	imul   eax,eax,0x9e3779b1
  41fa20:	mov    rdx,QWORD PTR [rbp-0x18]
  41fa24:	xor    eax,edx
  41fa26:	imul   edx,eax,0x9e3779b1
  41fa2c:	mov    rax,QWORD PTR [rbp-0x8]
  41fa30:	mov    DWORD PTR [rax+0x14],edx
  41fa33:	mov    eax,DWORD PTR [rbp-0xc]
  41fa36:	movzx  ecx,ax
  41fa39:	movzx  edx,WORD PTR [rbp-0x10]
  41fa3d:	mov    rax,QWORD PTR [rbp-0x18]
  41fa41:	mov    esi,eax
  41fa43:	mov    rax,QWORD PTR [rbp-0x8]
  41fa47:	mov    rdi,rax
  41fa4a:	call   41afc3 <flatcc_builder_default_alloc@@Base+0x37b>
  41fa4f:	leave  
  41fa50:	ret    

000000000041fa51 <flatcc_builder_table_edit@@Base>:
  41fa51:	push   rbp
  41fa52:	mov    rbp,rsp
  41fa55:	sub    rsp,0x10
  41fa59:	mov    QWORD PTR [rbp-0x8],rdi
  41fa5d:	mov    QWORD PTR [rbp-0x10],rsi
  41fa61:	mov    rax,QWORD PTR [rbp-0x8]
  41fa65:	mov    rax,QWORD PTR [rax+0x30]
  41fa69:	movzx  eax,WORD PTR [rax+0xe]
  41fa6d:	cmp    ax,0x3
  41fa71:	je     41fa92 <flatcc_builder_table_edit@@Base+0x41>
  41fa73:	lea    rcx,[rip+0x1b196]        # 43ac10 <flatcc_builder_padding_base@@Base+0xc90>
  41fa7a:	mov    edx,0x702
  41fa7f:	lea    rsi,[rip+0x1a6fa]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41fa86:	lea    rdi,[rip+0x1a9cb]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41fa8d:	call   405080 <__assert_fail@plt>
  41fa92:	mov    rax,QWORD PTR [rbp-0x8]
  41fa96:	mov    rdx,QWORD PTR [rax+0x18]
  41fa9a:	mov    rax,QWORD PTR [rbp-0x8]
  41fa9e:	mov    eax,DWORD PTR [rax+0x20]
  41faa1:	mov    eax,eax
  41faa3:	sub    rax,QWORD PTR [rbp-0x10]
  41faa7:	add    rax,rdx
  41faaa:	leave  
  41faab:	ret    

000000000041faac <flatcc_builder_table_add_copy@@Base>:
  41faac:	push   rbp
  41faad:	mov    rbp,rsp
  41fab0:	sub    rsp,0x30
  41fab4:	mov    QWORD PTR [rbp-0x18],rdi
  41fab8:	mov    DWORD PTR [rbp-0x1c],esi
  41fabb:	mov    QWORD PTR [rbp-0x28],rdx
  41fabf:	mov    QWORD PTR [rbp-0x30],rcx
  41fac3:	mov    eax,r8d
  41fac6:	mov    WORD PTR [rbp-0x20],ax
  41faca:	movzx  ecx,WORD PTR [rbp-0x20]
  41face:	mov    rdx,QWORD PTR [rbp-0x30]
  41fad2:	mov    esi,DWORD PTR [rbp-0x1c]
  41fad5:	mov    rax,QWORD PTR [rbp-0x18]
  41fad9:	mov    rdi,rax
  41fadc:	call   41f93b <flatcc_builder_table_add@@Base>
  41fae1:	mov    QWORD PTR [rbp-0x8],rax
  41fae5:	cmp    QWORD PTR [rbp-0x8],0x0
  41faea:	je     41fb03 <flatcc_builder_table_add_copy@@Base+0x57>
  41faec:	mov    rdx,QWORD PTR [rbp-0x30]
  41faf0:	mov    rcx,QWORD PTR [rbp-0x28]
  41faf4:	mov    rax,QWORD PTR [rbp-0x8]
  41faf8:	mov    rsi,rcx
  41fafb:	mov    rdi,rax
  41fafe:	call   4050f0 <memcpy@plt>
  41fb03:	mov    rax,QWORD PTR [rbp-0x8]
  41fb07:	leave  
  41fb08:	ret    

000000000041fb09 <flatcc_builder_table_add_offset@@Base>:
  41fb09:	push   rbp
  41fb0a:	mov    rbp,rsp
  41fb0d:	sub    rsp,0x10
  41fb11:	mov    QWORD PTR [rbp-0x8],rdi
  41fb15:	mov    DWORD PTR [rbp-0xc],esi
  41fb18:	mov    rax,QWORD PTR [rbp-0x8]
  41fb1c:	mov    rax,QWORD PTR [rax+0x30]
  41fb20:	movzx  eax,WORD PTR [rax+0xe]
  41fb24:	cmp    ax,0x3
  41fb28:	je     41fb49 <flatcc_builder_table_add_offset@@Base+0x40>
  41fb2a:	lea    rcx,[rip+0x1b10f]        # 43ac40 <flatcc_builder_padding_base@@Base+0xcc0>
  41fb31:	mov    edx,0x713
  41fb36:	lea    rsi,[rip+0x1a643]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41fb3d:	lea    rdi,[rip+0x1a914]        # 43a458 <flatcc_builder_padding_base@@Base+0x4d8>
  41fb44:	call   405080 <__assert_fail@plt>
  41fb49:	cmp    DWORD PTR [rbp-0xc],0x0
  41fb4d:	js     41fb58 <flatcc_builder_table_add_offset@@Base+0x4f>
  41fb4f:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41fb56:	jle    41fb77 <flatcc_builder_table_add_offset@@Base+0x6e>
  41fb58:	lea    rcx,[rip+0x1b0e1]        # 43ac40 <flatcc_builder_padding_base@@Base+0xcc0>
  41fb5f:	mov    edx,0x714
  41fb64:	lea    rsi,[rip+0x1a615]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41fb6b:	lea    rdi,[rip+0x1aa06]        # 43a578 <flatcc_builder_padding_base@@Base+0x5f8>
  41fb72:	call   405080 <__assert_fail@plt>
  41fb77:	mov    rax,QWORD PTR [rbp-0x8]
  41fb7b:	mov    rax,QWORD PTR [rax+0x8]
  41fb7f:	mov    edx,DWORD PTR [rbp-0xc]
  41fb82:	movsxd rdx,edx
  41fb85:	add    rdx,rdx
  41fb88:	add    rax,rdx
  41fb8b:	movzx  eax,WORD PTR [rax]
  41fb8e:	test   ax,ax
  41fb91:	je     41fbb2 <flatcc_builder_table_add_offset@@Base+0xa9>
  41fb93:	lea    rcx,[rip+0x1b0a6]        # 43ac40 <flatcc_builder_padding_base@@Base+0xcc0>
  41fb9a:	mov    edx,0x71b
  41fb9f:	lea    rsi,[rip+0x1a5da]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41fba6:	lea    rdi,[rip+0x1a633]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41fbad:	call   405080 <__assert_fail@plt>
  41fbb2:	mov    rax,QWORD PTR [rbp-0x8]
  41fbb6:	mov    edx,DWORD PTR [rax+0x14]
  41fbb9:	mov    eax,DWORD PTR [rbp-0xc]
  41fbbc:	xor    eax,edx
  41fbbe:	imul   eax,eax,0x9e3779b1
  41fbc4:	xor    eax,0x4
  41fbc7:	imul   edx,eax,0x9e3779b1
  41fbcd:	mov    rax,QWORD PTR [rbp-0x8]
  41fbd1:	mov    DWORD PTR [rax+0x14],edx
  41fbd4:	mov    eax,DWORD PTR [rbp-0xc]
  41fbd7:	movzx  edx,ax
  41fbda:	mov    rax,QWORD PTR [rbp-0x8]
  41fbde:	mov    esi,edx
  41fbe0:	mov    rdi,rax
  41fbe3:	call   41b08b <flatcc_builder_default_alloc@@Base+0x443>
  41fbe8:	leave  
  41fbe9:	ret    

000000000041fbea <flatcc_builder_push_buffer_alignment@@Base>:
  41fbea:	push   rbp
  41fbeb:	mov    rbp,rsp
  41fbee:	mov    QWORD PTR [rbp-0x18],rdi
  41fbf2:	mov    rax,QWORD PTR [rbp-0x18]
  41fbf6:	movzx  eax,WORD PTR [rax+0xe8]
  41fbfd:	mov    WORD PTR [rbp-0x2],ax
  41fc01:	mov    rax,QWORD PTR [rbp-0x18]
  41fc05:	mov    WORD PTR [rax+0xe8],0x4
  41fc0e:	movzx  eax,WORD PTR [rbp-0x2]
  41fc12:	pop    rbp
  41fc13:	ret    

000000000041fc14 <flatcc_builder_pop_buffer_alignment@@Base>:
  41fc14:	push   rbp
  41fc15:	mov    rbp,rsp
  41fc18:	sub    rsp,0x10
  41fc1c:	mov    QWORD PTR [rbp-0x8],rdi
  41fc20:	mov    eax,esi
  41fc22:	mov    WORD PTR [rbp-0xc],ax
  41fc26:	movzx  edx,WORD PTR [rbp-0xc]
  41fc2a:	mov    rax,QWORD PTR [rbp-0x8]
  41fc2e:	mov    esi,edx
  41fc30:	mov    rdi,rax
  41fc33:	call   41b892 <flatcc_builder_clear@@Base+0x96>
  41fc38:	nop
  41fc39:	leave  
  41fc3a:	ret    

000000000041fc3b <flatcc_builder_get_buffer_alignment@@Base>:
  41fc3b:	push   rbp
  41fc3c:	mov    rbp,rsp
  41fc3f:	mov    QWORD PTR [rbp-0x8],rdi
  41fc43:	mov    rax,QWORD PTR [rbp-0x8]
  41fc47:	movzx  eax,WORD PTR [rax+0xe8]
  41fc4e:	pop    rbp
  41fc4f:	ret    

000000000041fc50 <flatcc_builder_set_vtable_clustering@@Base>:
  41fc50:	push   rbp
  41fc51:	mov    rbp,rsp
  41fc54:	mov    QWORD PTR [rbp-0x8],rdi
  41fc58:	mov    DWORD PTR [rbp-0xc],esi
  41fc5b:	cmp    DWORD PTR [rbp-0xc],0x0
  41fc5f:	sete   al
  41fc62:	movzx  edx,al
  41fc65:	mov    rax,QWORD PTR [rbp-0x8]
  41fc69:	mov    DWORD PTR [rax+0x124],edx
  41fc6f:	nop
  41fc70:	pop    rbp
  41fc71:	ret    

000000000041fc72 <flatcc_builder_set_block_align@@Base>:
  41fc72:	push   rbp
  41fc73:	mov    rbp,rsp
  41fc76:	mov    QWORD PTR [rbp-0x8],rdi
  41fc7a:	mov    eax,esi
  41fc7c:	mov    WORD PTR [rbp-0xc],ax
  41fc80:	mov    rax,QWORD PTR [rbp-0x8]
  41fc84:	movzx  edx,WORD PTR [rbp-0xc]
  41fc88:	mov    WORD PTR [rax+0xec],dx
  41fc8f:	nop
  41fc90:	pop    rbp
  41fc91:	ret    

000000000041fc92 <flatcc_builder_get_level@@Base>:
  41fc92:	push   rbp
  41fc93:	mov    rbp,rsp
  41fc96:	mov    QWORD PTR [rbp-0x8],rdi
  41fc9a:	mov    rax,QWORD PTR [rbp-0x8]
  41fc9e:	mov    eax,DWORD PTR [rax+0x104]
  41fca4:	pop    rbp
  41fca5:	ret    

000000000041fca6 <flatcc_builder_set_max_level@@Base>:
  41fca6:	push   rbp
  41fca7:	mov    rbp,rsp
  41fcaa:	mov    QWORD PTR [rbp-0x8],rdi
  41fcae:	mov    DWORD PTR [rbp-0xc],esi
  41fcb1:	mov    rax,QWORD PTR [rbp-0x8]
  41fcb5:	mov    edx,DWORD PTR [rbp-0xc]
  41fcb8:	mov    DWORD PTR [rax+0x120],edx
  41fcbe:	mov    rax,QWORD PTR [rbp-0x8]
  41fcc2:	mov    edx,DWORD PTR [rax+0x108]
  41fcc8:	mov    rax,QWORD PTR [rbp-0x8]
  41fccc:	mov    eax,DWORD PTR [rax+0x120]
  41fcd2:	cmp    edx,eax
  41fcd4:	jge    41fcea <flatcc_builder_set_max_level@@Base+0x44>
  41fcd6:	mov    rax,QWORD PTR [rbp-0x8]
  41fcda:	mov    edx,DWORD PTR [rax+0x120]
  41fce0:	mov    rax,QWORD PTR [rbp-0x8]
  41fce4:	mov    DWORD PTR [rax+0x108],edx
  41fcea:	nop
  41fceb:	pop    rbp
  41fcec:	ret    

000000000041fced <flatcc_builder_get_buffer_size@@Base>:
  41fced:	push   rbp
  41fcee:	mov    rbp,rsp
  41fcf1:	mov    QWORD PTR [rbp-0x8],rdi
  41fcf5:	mov    rax,QWORD PTR [rbp-0x8]
  41fcf9:	mov    edx,DWORD PTR [rax+0xf4]
  41fcff:	mov    rax,QWORD PTR [rbp-0x8]
  41fd03:	mov    eax,DWORD PTR [rax+0xf0]
  41fd09:	sub    edx,eax
  41fd0b:	mov    eax,edx
  41fd0d:	cdqe   
  41fd0f:	pop    rbp
  41fd10:	ret    

000000000041fd11 <flatcc_builder_get_buffer_start@@Base>:
  41fd11:	push   rbp
  41fd12:	mov    rbp,rsp
  41fd15:	mov    QWORD PTR [rbp-0x8],rdi
  41fd19:	mov    rax,QWORD PTR [rbp-0x8]
  41fd1d:	mov    eax,DWORD PTR [rax+0xf0]
  41fd23:	pop    rbp
  41fd24:	ret    

000000000041fd25 <flatcc_builder_get_buffer_end@@Base>:
  41fd25:	push   rbp
  41fd26:	mov    rbp,rsp
  41fd29:	mov    QWORD PTR [rbp-0x8],rdi
  41fd2d:	mov    rax,QWORD PTR [rbp-0x8]
  41fd31:	mov    eax,DWORD PTR [rax+0xf4]
  41fd37:	pop    rbp
  41fd38:	ret    

000000000041fd39 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41fd39:	push   rbp
  41fd3a:	mov    rbp,rsp
  41fd3d:	mov    QWORD PTR [rbp-0x8],rdi
  41fd41:	mov    QWORD PTR [rbp-0x10],rsi
  41fd45:	mov    rax,QWORD PTR [rbp-0x8]
  41fd49:	mov    rdx,QWORD PTR [rbp-0x10]
  41fd4d:	mov    QWORD PTR [rax+0x118],rdx
  41fd54:	nop
  41fd55:	pop    rbp
  41fd56:	ret    

000000000041fd57 <flatcc_builder_set_identifier@@Base>:
  41fd57:	push   rbp
  41fd58:	mov    rbp,rsp
  41fd5b:	mov    QWORD PTR [rbp-0x8],rdi
  41fd5f:	mov    QWORD PTR [rbp-0x10],rsi
  41fd63:	cmp    QWORD PTR [rbp-0x10],0x0
  41fd68:	je     41fd70 <flatcc_builder_set_identifier@@Base+0x19>
  41fd6a:	mov    rax,QWORD PTR [rbp-0x10]
  41fd6e:	jmp    41fd77 <flatcc_builder_set_identifier@@Base+0x20>
  41fd70:	mov    rax,0x439f80
  41fd77:	mov    rdx,QWORD PTR [rbp-0x8]
  41fd7b:	add    rdx,0x110
  41fd82:	mov    eax,DWORD PTR [rax]
  41fd84:	mov    DWORD PTR [rdx],eax
  41fd86:	nop
  41fd87:	pop    rbp
  41fd88:	ret    

000000000041fd89 <flatcc_builder_get_type@@Base>:
  41fd89:	push   rbp
  41fd8a:	mov    rbp,rsp
  41fd8d:	mov    QWORD PTR [rbp-0x8],rdi
  41fd91:	mov    rax,QWORD PTR [rbp-0x8]
  41fd95:	mov    rax,QWORD PTR [rax+0x30]
  41fd99:	test   rax,rax
  41fd9c:	je     41fdaf <flatcc_builder_get_type@@Base+0x26>
  41fd9e:	mov    rax,QWORD PTR [rbp-0x8]
  41fda2:	mov    rax,QWORD PTR [rax+0x30]
  41fda6:	movzx  eax,WORD PTR [rax+0xe]
  41fdaa:	movzx  eax,ax
  41fdad:	jmp    41fdb4 <flatcc_builder_get_type@@Base+0x2b>
  41fdaf:	mov    eax,0x0
  41fdb4:	pop    rbp
  41fdb5:	ret    

000000000041fdb6 <flatcc_builder_get_type_at@@Base>:
  41fdb6:	push   rbp
  41fdb7:	mov    rbp,rsp
  41fdba:	mov    QWORD PTR [rbp-0x8],rdi
  41fdbe:	mov    DWORD PTR [rbp-0xc],esi
  41fdc1:	cmp    DWORD PTR [rbp-0xc],0x0
  41fdc5:	jle    41fdd6 <flatcc_builder_get_type_at@@Base+0x20>
  41fdc7:	mov    rax,QWORD PTR [rbp-0x8]
  41fdcb:	mov    eax,DWORD PTR [rax+0x104]
  41fdd1:	cmp    eax,DWORD PTR [rbp-0xc]
  41fdd4:	jge    41fddd <flatcc_builder_get_type_at@@Base+0x27>
  41fdd6:	mov    eax,0x0
  41fddb:	jmp    41fe11 <flatcc_builder_get_type_at@@Base+0x5b>
  41fddd:	mov    rax,QWORD PTR [rbp-0x8]
  41fde1:	mov    rcx,QWORD PTR [rax+0x30]
  41fde5:	mov    rax,QWORD PTR [rbp-0x8]
  41fde9:	mov    eax,DWORD PTR [rax+0x104]
  41fdef:	mov    edx,DWORD PTR [rbp-0xc]
  41fdf2:	sub    edx,eax
  41fdf4:	mov    eax,edx
  41fdf6:	movsxd rdx,eax
  41fdf9:	mov    rax,rdx
  41fdfc:	shl    rax,0x3
  41fe00:	add    rax,rdx
  41fe03:	shl    rax,0x2
  41fe07:	add    rax,rcx
  41fe0a:	movzx  eax,WORD PTR [rax+0xe]
  41fe0e:	movzx  eax,ax
  41fe11:	pop    rbp
  41fe12:	ret    

000000000041fe13 <flatcc_builder_get_direct_buffer@@Base>:
  41fe13:	push   rbp
  41fe14:	mov    rbp,rsp
  41fe17:	sub    rsp,0x10
  41fe1b:	mov    QWORD PTR [rbp-0x8],rdi
  41fe1f:	mov    QWORD PTR [rbp-0x10],rsi
  41fe23:	mov    rax,QWORD PTR [rbp-0x8]
  41fe27:	mov    eax,DWORD PTR [rax+0x128]
  41fe2d:	test   eax,eax
  41fe2f:	je     41fe4d <flatcc_builder_get_direct_buffer@@Base+0x3a>
  41fe31:	mov    rax,QWORD PTR [rbp-0x8]
  41fe35:	lea    rdx,[rax+0x130]
  41fe3c:	mov    rax,QWORD PTR [rbp-0x10]
  41fe40:	mov    rsi,rax
  41fe43:	mov    rdi,rdx
  41fe46:	call   41aba9 <main@@Base+0x110a>
  41fe4b:	jmp    41fe64 <flatcc_builder_get_direct_buffer@@Base+0x51>
  41fe4d:	cmp    QWORD PTR [rbp-0x10],0x0
  41fe52:	je     41fe5f <flatcc_builder_get_direct_buffer@@Base+0x4c>
  41fe54:	mov    rax,QWORD PTR [rbp-0x10]
  41fe58:	mov    QWORD PTR [rax],0x0
  41fe5f:	mov    eax,0x0
  41fe64:	leave  
  41fe65:	ret    

000000000041fe66 <flatcc_builder_copy_buffer@@Base>:
  41fe66:	push   rbp
  41fe67:	mov    rbp,rsp
  41fe6a:	sub    rsp,0x20
  41fe6e:	mov    QWORD PTR [rbp-0x8],rdi
  41fe72:	mov    QWORD PTR [rbp-0x10],rsi
  41fe76:	mov    QWORD PTR [rbp-0x18],rdx
  41fe7a:	mov    rax,QWORD PTR [rbp-0x8]
  41fe7e:	mov    eax,DWORD PTR [rax+0x128]
  41fe84:	test   eax,eax
  41fe86:	jne    41fe8f <flatcc_builder_copy_buffer@@Base+0x29>
  41fe88:	mov    eax,0x0
  41fe8d:	jmp    41fedb <flatcc_builder_copy_buffer@@Base+0x75>
  41fe8f:	mov    rax,QWORD PTR [rbp-0x8]
  41fe93:	lea    rcx,[rax+0x130]
  41fe9a:	mov    rdx,QWORD PTR [rbp-0x18]
  41fe9e:	mov    rax,QWORD PTR [rbp-0x10]
  41fea2:	mov    rsi,rax
  41fea5:	mov    rdi,rcx
  41fea8:	call   420ad8 <flatcc_emitter_copy_buffer@@Base>
  41fead:	mov    QWORD PTR [rbp-0x10],rax
  41feb1:	cmp    QWORD PTR [rbp-0x10],0x0
  41feb6:	jne    41fed7 <flatcc_builder_copy_buffer@@Base+0x71>
  41feb8:	lea    rcx,[rip+0x1ada1]        # 43ac60 <flatcc_builder_padding_base@@Base+0xce0>
  41febf:	mov    edx,0x786
  41fec4:	lea    rsi,[rip+0x1a2b5]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41fecb:	lea    rdi,[rip+0x1a6ea]        # 43a5bc <flatcc_builder_padding_base@@Base+0x63c>
  41fed2:	call   405080 <__assert_fail@plt>
  41fed7:	mov    rax,QWORD PTR [rbp-0x10]
  41fedb:	leave  
  41fedc:	ret    

000000000041fedd <flatcc_builder_finalize_buffer@@Base>:
  41fedd:	push   rbp
  41fede:	mov    rbp,rsp
  41fee1:	sub    rsp,0x20
  41fee5:	mov    QWORD PTR [rbp-0x18],rdi
  41fee9:	mov    QWORD PTR [rbp-0x20],rsi
  41feed:	mov    rax,QWORD PTR [rbp-0x18]
  41fef1:	mov    rdi,rax
  41fef4:	call   41fced <flatcc_builder_get_buffer_size@@Base>
  41fef9:	mov    QWORD PTR [rbp-0x10],rax
  41fefd:	cmp    QWORD PTR [rbp-0x20],0x0
  41ff02:	je     41ff0f <flatcc_builder_finalize_buffer@@Base+0x32>
  41ff04:	mov    rax,QWORD PTR [rbp-0x20]
  41ff08:	mov    rdx,QWORD PTR [rbp-0x10]
  41ff0c:	mov    QWORD PTR [rax],rdx
  41ff0f:	mov    rax,QWORD PTR [rbp-0x10]
  41ff13:	mov    rdi,rax
  41ff16:	call   405100 <malloc@plt>
  41ff1b:	mov    QWORD PTR [rbp-0x8],rax
  41ff1f:	cmp    QWORD PTR [rbp-0x8],0x0
  41ff24:	jne    41ff45 <flatcc_builder_finalize_buffer@@Base+0x68>
  41ff26:	lea    rcx,[rip+0x1ad53]        # 43ac80 <flatcc_builder_padding_base@@Base+0xd00>
  41ff2d:	mov    edx,0x798
  41ff32:	lea    rsi,[rip+0x1a247]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ff39:	lea    rdi,[rip+0x1a2a0]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41ff40:	call   405080 <__assert_fail@plt>
  41ff45:	mov    rdx,QWORD PTR [rbp-0x10]
  41ff49:	mov    rcx,QWORD PTR [rbp-0x8]
  41ff4d:	mov    rax,QWORD PTR [rbp-0x18]
  41ff51:	mov    rsi,rcx
  41ff54:	mov    rdi,rax
  41ff57:	call   41fe66 <flatcc_builder_copy_buffer@@Base>
  41ff5c:	test   rax,rax
  41ff5f:	jne    41ff80 <flatcc_builder_finalize_buffer@@Base+0xa3>
  41ff61:	lea    rcx,[rip+0x1ad18]        # 43ac80 <flatcc_builder_padding_base@@Base+0xd00>
  41ff68:	mov    edx,0x79c
  41ff6d:	lea    rsi,[rip+0x1a20c]        # 43a180 <flatcc_builder_padding_base@@Base+0x200>
  41ff74:	lea    rdi,[rip+0x1a265]        # 43a1e0 <flatcc_builder_padding_base@@Base+0x260>
  41ff7b:	call   405080 <__assert_fail@plt>
  41ff80:	cmp    QWORD PTR [rbp-0x8],0x0
  41ff85:	jne    41ff99 <flatcc_builder_finalize_buffer@@Base+0xbc>
  41ff87:	cmp    QWORD PTR [rbp-0x20],0x0
  41ff8c:	je     41ff99 <flatcc_builder_finalize_buffer@@Base+0xbc>
  41ff8e:	mov    rax,QWORD PTR [rbp-0x20]
  41ff92:	mov    QWORD PTR [rax],0x0
  41ff99:	mov    rax,QWORD PTR [rbp-0x8]
  41ff9d:	leave  
  41ff9e:	ret    

000000000041ff9f <flatcc_builder_finalize_aligned_buffer@@Base>:
  41ff9f:	push   rbp
  41ffa0:	mov    rbp,rsp
  41ffa3:	sub    rsp,0x30
  41ffa7:	mov    QWORD PTR [rbp-0x28],rdi
  41ffab:	mov    QWORD PTR [rbp-0x30],rsi
  41ffaf:	mov    rax,QWORD PTR [rbp-0x28]
  41ffb3:	mov    rdi,rax
  41ffb6:	call   41fced <flatcc_builder_get_buffer_size@@Base>
  41ffbb:	mov    QWORD PTR [rbp-0x10],rax
  41ffbf:	cmp    QWORD PTR [rbp-0x30],0x0
  41ffc4:	je     41ffd1 <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  41ffc6:	mov    rax,QWORD PTR [rbp-0x30]
  41ffca:	mov    rdx,QWORD PTR [rbp-0x10]
  41ffce:	mov    QWORD PTR [rax],rdx
  41ffd1:	mov    rax,QWORD PTR [rbp-0x28]
  41ffd5:	mov    rdi,rax
  41ffd8:	call   41fc3b <flatcc_builder_get_buffer_alignment@@Base>
  41ffdd:	movzx  eax,ax
  41ffe0:	mov    QWORD PTR [rbp-0x8],rax
  41ffe4:	mov    rdx,QWORD PTR [rbp-0x10]
  41ffe8:	mov    rax,QWORD PTR [rbp-0x8]
  41ffec:	add    rax,rdx
  41ffef:	lea    rdx,[rax-0x1]
  41fff3:	mov    rax,QWORD PTR [rbp-0x8]
  41fff7:	neg    rax
  41fffa:	and    rax,rdx
  41fffd:	mov    QWORD PTR [rbp-0x10],rax
  420001:	mov    rdx,QWORD PTR [rbp-0x10]
  420005:	mov    rax,QWORD PTR [rbp-0x8]
  420009:	mov    rsi,rdx
  42000c:	mov    rdi,rax
  42000f:	call   41aaf5 <main@@Base+0x1056>
  420014:	mov    QWORD PTR [rbp-0x18],rax
  420018:	cmp    QWORD PTR [rbp-0x18],0x0
  42001d:	je     420051 <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  42001f:	mov    rdx,QWORD PTR [rbp-0x10]
  420023:	mov    rcx,QWORD PTR [rbp-0x18]
  420027:	mov    rax,QWORD PTR [rbp-0x28]
  42002b:	mov    rsi,rcx
  42002e:	mov    rdi,rax
  420031:	call   41fe66 <flatcc_builder_copy_buffer@@Base>
  420036:	test   rax,rax
  420039:	jne    420052 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  42003b:	mov    rax,QWORD PTR [rbp-0x18]
  42003f:	mov    rdi,rax
  420042:	call   405030 <free@plt>
  420047:	mov    QWORD PTR [rbp-0x18],0x0
  42004f:	jmp    420052 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  420051:	nop
  420052:	cmp    QWORD PTR [rbp-0x18],0x0
  420057:	jne    42006b <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  420059:	cmp    QWORD PTR [rbp-0x30],0x0
  42005e:	je     42006b <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  420060:	mov    rax,QWORD PTR [rbp-0x30]
  420064:	mov    QWORD PTR [rax],0x0
  42006b:	mov    rax,QWORD PTR [rbp-0x18]
  42006f:	leave  
  420070:	ret    

0000000000420071 <flatcc_builder_aligned_alloc@@Base>:
  420071:	push   rbp
  420072:	mov    rbp,rsp
  420075:	sub    rsp,0x10
  420079:	mov    QWORD PTR [rbp-0x8],rdi
  42007d:	mov    QWORD PTR [rbp-0x10],rsi
  420081:	mov    rdx,QWORD PTR [rbp-0x10]
  420085:	mov    rax,QWORD PTR [rbp-0x8]
  420089:	mov    rsi,rdx
  42008c:	mov    rdi,rax
  42008f:	call   41aaf5 <main@@Base+0x1056>
  420094:	leave  
  420095:	ret    

0000000000420096 <flatcc_builder_aligned_free@@Base>:
  420096:	push   rbp
  420097:	mov    rbp,rsp
  42009a:	sub    rsp,0x10
  42009e:	mov    QWORD PTR [rbp-0x8],rdi
  4200a2:	mov    rax,QWORD PTR [rbp-0x8]
  4200a6:	mov    rdi,rax
  4200a9:	call   405030 <free@plt>
  4200ae:	nop
  4200af:	leave  
  4200b0:	ret    

00000000004200b1 <flatcc_builder_get_emit_context@@Base>:
  4200b1:	push   rbp
  4200b2:	mov    rbp,rsp
  4200b5:	mov    QWORD PTR [rbp-0x8],rdi
  4200b9:	mov    rax,QWORD PTR [rbp-0x8]
  4200bd:	mov    rax,QWORD PTR [rax+0x38]
  4200c1:	pop    rbp
  4200c2:	ret    
  4200c3:	push   rbp
  4200c4:	mov    rbp,rsp
  4200c7:	sub    rsp,0x20
  4200cb:	mov    QWORD PTR [rbp-0x18],rdi
  4200cf:	mov    QWORD PTR [rbp-0x8],0x0
  4200d7:	mov    rax,QWORD PTR [rbp-0x18]
  4200db:	mov    rax,QWORD PTR [rax]
  4200de:	test   rax,rax
  4200e1:	je     42013f <flatcc_builder_get_emit_context@@Base+0x8e>
  4200e3:	mov    rax,QWORD PTR [rbp-0x18]
  4200e7:	mov    rax,QWORD PTR [rax]
  4200ea:	mov    rdx,QWORD PTR [rax+0xb88]
  4200f1:	mov    rax,QWORD PTR [rbp-0x18]
  4200f5:	mov    rax,QWORD PTR [rax+0x8]
  4200f9:	cmp    rdx,rax
  4200fc:	je     42013f <flatcc_builder_get_emit_context@@Base+0x8e>
  4200fe:	mov    rax,QWORD PTR [rbp-0x18]
  420102:	mov    rax,QWORD PTR [rax]
  420105:	mov    rax,QWORD PTR [rax+0xb88]
  42010c:	mov    rdx,QWORD PTR [rbp-0x18]
  420110:	mov    rdx,QWORD PTR [rdx]
  420113:	mov    edx,DWORD PTR [rdx+0xb90]
  420119:	sub    edx,0xb80
  42011f:	mov    DWORD PTR [rax+0xb90],edx
  420125:	mov    rax,QWORD PTR [rbp-0x18]
  420129:	mov    rax,QWORD PTR [rax]
  42012c:	mov    rdx,QWORD PTR [rax+0xb88]
  420133:	mov    rax,QWORD PTR [rbp-0x18]
  420137:	mov    QWORD PTR [rax],rdx
  42013a:	jmp    420277 <flatcc_builder_get_emit_context@@Base+0x1c6>
  42013f:	mov    edi,0xb98
  420144:	call   405100 <malloc@plt>
  420149:	mov    QWORD PTR [rbp-0x8],rax
  42014d:	cmp    QWORD PTR [rbp-0x8],0x0
  420152:	jne    42015e <flatcc_builder_get_emit_context@@Base+0xad>
  420154:	mov    eax,0xffffffff
  420159:	jmp    4202c5 <flatcc_builder_get_emit_context@@Base+0x214>
  42015e:	mov    rax,QWORD PTR [rbp-0x18]
  420162:	mov    rax,QWORD PTR [rax+0x38]
  420166:	lea    rdx,[rax+0xb80]
  42016d:	mov    rax,QWORD PTR [rbp-0x18]
  420171:	mov    QWORD PTR [rax+0x38],rdx
  420175:	mov    rax,QWORD PTR [rbp-0x18]
  420179:	mov    rax,QWORD PTR [rax]
  42017c:	test   rax,rax
  42017f:	je     4201db <flatcc_builder_get_emit_context@@Base+0x12a>
  420181:	mov    rax,QWORD PTR [rbp-0x18]
  420185:	mov    rdx,QWORD PTR [rax+0x8]
  420189:	mov    rax,QWORD PTR [rbp-0x8]
  42018d:	mov    QWORD PTR [rax+0xb88],rdx
  420194:	mov    rax,QWORD PTR [rbp-0x18]
  420198:	mov    rdx,QWORD PTR [rax]
  42019b:	mov    rax,QWORD PTR [rbp-0x8]
  42019f:	mov    QWORD PTR [rax+0xb80],rdx
  4201a6:	mov    rax,QWORD PTR [rbp-0x18]
  4201aa:	mov    rax,QWORD PTR [rax]
  4201ad:	mov    rdx,QWORD PTR [rbp-0x8]
  4201b1:	mov    QWORD PTR [rax+0xb88],rdx
  4201b8:	mov    rax,QWORD PTR [rbp-0x18]
  4201bc:	mov    rax,QWORD PTR [rax+0x8]
  4201c0:	mov    rdx,QWORD PTR [rbp-0x8]
  4201c4:	mov    QWORD PTR [rax+0xb80],rdx
  4201cb:	mov    rax,QWORD PTR [rbp-0x18]
  4201cf:	mov    rdx,QWORD PTR [rbp-0x8]
  4201d3:	mov    QWORD PTR [rax],rdx
  4201d6:	jmp    420277 <flatcc_builder_get_emit_context@@Base+0x1c6>
  4201db:	mov    rax,QWORD PTR [rbp-0x18]
  4201df:	mov    rdx,QWORD PTR [rbp-0x8]
  4201e3:	mov    QWORD PTR [rax],rdx
  4201e6:	mov    rax,QWORD PTR [rbp-0x18]
  4201ea:	mov    rdx,QWORD PTR [rbp-0x8]
  4201ee:	mov    QWORD PTR [rax+0x8],rdx
  4201f2:	mov    rax,QWORD PTR [rbp-0x8]
  4201f6:	mov    rdx,QWORD PTR [rbp-0x8]
  4201fa:	mov    QWORD PTR [rax+0xb80],rdx
  420201:	mov    rax,QWORD PTR [rbp-0x8]
  420205:	mov    rdx,QWORD PTR [rbp-0x8]
  420209:	mov    QWORD PTR [rax+0xb88],rdx
  420210:	mov    rax,QWORD PTR [rbp-0x18]
  420214:	mov    rax,QWORD PTR [rax]
  420217:	lea    rdx,[rax+0x5c0]
  42021e:	mov    rax,QWORD PTR [rbp-0x18]
  420222:	mov    QWORD PTR [rax+0x10],rdx
  420226:	mov    rax,QWORD PTR [rbp-0x18]
  42022a:	mov    rdx,QWORD PTR [rax+0x10]
  42022e:	mov    rax,QWORD PTR [rbp-0x18]
  420232:	mov    QWORD PTR [rax+0x20],rdx
  420236:	mov    rax,QWORD PTR [rbp-0x18]
  42023a:	mov    QWORD PTR [rax+0x18],0x5c0
  420242:	mov    rax,QWORD PTR [rbp-0x18]
  420246:	mov    rax,QWORD PTR [rax+0x18]
  42024a:	mov    edx,0xb80
  42024f:	sub    rdx,rax
  420252:	mov    rax,QWORD PTR [rbp-0x18]
  420256:	mov    QWORD PTR [rax+0x28],rdx
  42025a:	mov    rax,QWORD PTR [rbp-0x18]
  42025e:	mov    rax,QWORD PTR [rax+0x18]
  420262:	neg    eax
  420264:	mov    edx,eax
  420266:	mov    rax,QWORD PTR [rbp-0x8]
  42026a:	mov    DWORD PTR [rax+0xb90],edx
  420270:	mov    eax,0x0
  420275:	jmp    4202c5 <flatcc_builder_get_emit_context@@Base+0x214>
  420277:	mov    rax,QWORD PTR [rbp-0x18]
  42027b:	mov    rax,QWORD PTR [rax]
  42027e:	lea    rdx,[rax+0xb80]
  420285:	mov    rax,QWORD PTR [rbp-0x18]
  420289:	mov    QWORD PTR [rax+0x10],rdx
  42028d:	mov    rax,QWORD PTR [rbp-0x18]
  420291:	mov    QWORD PTR [rax+0x18],0xb80
  420299:	mov    rax,QWORD PTR [rbp-0x18]
  42029d:	mov    rax,QWORD PTR [rax]
  4202a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4202a4:	mov    rdx,QWORD PTR [rdx]
  4202a7:	mov    rdx,QWORD PTR [rdx+0xb80]
  4202ae:	mov    edx,DWORD PTR [rdx+0xb90]
  4202b4:	sub    edx,0xb80
  4202ba:	mov    DWORD PTR [rax+0xb90],edx
  4202c0:	mov    eax,0x0
  4202c5:	leave  
  4202c6:	ret    
  4202c7:	push   rbp
  4202c8:	mov    rbp,rsp
  4202cb:	sub    rsp,0x20
  4202cf:	mov    QWORD PTR [rbp-0x18],rdi
  4202d3:	mov    QWORD PTR [rbp-0x8],0x0
  4202db:	mov    rax,QWORD PTR [rbp-0x18]
  4202df:	mov    rax,QWORD PTR [rax+0x8]
  4202e3:	test   rax,rax
  4202e6:	je     42031f <flatcc_builder_get_emit_context@@Base+0x26e>
  4202e8:	mov    rax,QWORD PTR [rbp-0x18]
  4202ec:	mov    rax,QWORD PTR [rax+0x8]
  4202f0:	mov    rdx,QWORD PTR [rax+0xb80]
  4202f7:	mov    rax,QWORD PTR [rbp-0x18]
  4202fb:	mov    rax,QWORD PTR [rax]
  4202fe:	cmp    rdx,rax
  420301:	je     42031f <flatcc_builder_get_emit_context@@Base+0x26e>
  420303:	mov    rax,QWORD PTR [rbp-0x18]
  420307:	mov    rax,QWORD PTR [rax+0x8]
  42030b:	mov    rdx,QWORD PTR [rax+0xb80]
  420312:	mov    rax,QWORD PTR [rbp-0x18]
  420316:	mov    QWORD PTR [rax+0x8],rdx
  42031a:	jmp    420459 <flatcc_builder_get_emit_context@@Base+0x3a8>
  42031f:	mov    edi,0xb98
  420324:	call   405100 <malloc@plt>
  420329:	mov    QWORD PTR [rbp-0x8],rax
  42032d:	cmp    QWORD PTR [rbp-0x8],0x0
  420332:	jne    42033e <flatcc_builder_get_emit_context@@Base+0x28d>
  420334:	mov    eax,0xffffffff
  420339:	jmp    4204a6 <flatcc_builder_get_emit_context@@Base+0x3f5>
  42033e:	mov    rax,QWORD PTR [rbp-0x18]
  420342:	mov    rax,QWORD PTR [rax+0x38]
  420346:	lea    rdx,[rax+0xb80]
  42034d:	mov    rax,QWORD PTR [rbp-0x18]
  420351:	mov    QWORD PTR [rax+0x38],rdx
  420355:	mov    rax,QWORD PTR [rbp-0x18]
  420359:	mov    rax,QWORD PTR [rax+0x8]
  42035d:	test   rax,rax
  420360:	je     4203bd <flatcc_builder_get_emit_context@@Base+0x30c>
  420362:	mov    rax,QWORD PTR [rbp-0x18]
  420366:	mov    rdx,QWORD PTR [rax+0x8]
  42036a:	mov    rax,QWORD PTR [rbp-0x8]
  42036e:	mov    QWORD PTR [rax+0xb88],rdx
  420375:	mov    rax,QWORD PTR [rbp-0x18]
  420379:	mov    rdx,QWORD PTR [rax]
  42037c:	mov    rax,QWORD PTR [rbp-0x8]
  420380:	mov    QWORD PTR [rax+0xb80],rdx
  420387:	mov    rax,QWORD PTR [rbp-0x18]
  42038b:	mov    rax,QWORD PTR [rax]
  42038e:	mov    rdx,QWORD PTR [rbp-0x8]
  420392:	mov    QWORD PTR [rax+0xb88],rdx
  420399:	mov    rax,QWORD PTR [rbp-0x18]
  42039d:	mov    rax,QWORD PTR [rax+0x8]
  4203a1:	mov    rdx,QWORD PTR [rbp-0x8]
  4203a5:	mov    QWORD PTR [rax+0xb80],rdx
  4203ac:	mov    rax,QWORD PTR [rbp-0x18]
  4203b0:	mov    rdx,QWORD PTR [rbp-0x8]
  4203b4:	mov    QWORD PTR [rax+0x8],rdx
  4203b8:	jmp    420459 <flatcc_builder_get_emit_context@@Base+0x3a8>
  4203bd:	mov    rax,QWORD PTR [rbp-0x18]
  4203c1:	mov    rdx,QWORD PTR [rbp-0x8]
  4203c5:	mov    QWORD PTR [rax],rdx
  4203c8:	mov    rax,QWORD PTR [rbp-0x18]
  4203cc:	mov    rdx,QWORD PTR [rbp-0x8]
  4203d0:	mov    QWORD PTR [rax+0x8],rdx
  4203d4:	mov    rax,QWORD PTR [rbp-0x8]
  4203d8:	mov    rdx,QWORD PTR [rbp-0x8]
  4203dc:	mov    QWORD PTR [rax+0xb80],rdx
  4203e3:	mov    rax,QWORD PTR [rbp-0x8]
  4203e7:	mov    rdx,QWORD PTR [rbp-0x8]
  4203eb:	mov    QWORD PTR [rax+0xb88],rdx
  4203f2:	mov    rax,QWORD PTR [rbp-0x18]
  4203f6:	mov    rax,QWORD PTR [rax]
  4203f9:	lea    rdx,[rax+0x5c0]
  420400:	mov    rax,QWORD PTR [rbp-0x18]
  420404:	mov    QWORD PTR [rax+0x10],rdx
  420408:	mov    rax,QWORD PTR [rbp-0x18]
  42040c:	mov    rdx,QWORD PTR [rax+0x10]
  420410:	mov    rax,QWORD PTR [rbp-0x18]
  420414:	mov    QWORD PTR [rax+0x20],rdx
  420418:	mov    rax,QWORD PTR [rbp-0x18]
  42041c:	mov    QWORD PTR [rax+0x18],0x5c0
  420424:	mov    rax,QWORD PTR [rbp-0x18]
  420428:	mov    rax,QWORD PTR [rax+0x18]
  42042c:	mov    edx,0xb80
  420431:	sub    rdx,rax
  420434:	mov    rax,QWORD PTR [rbp-0x18]
  420438:	mov    QWORD PTR [rax+0x28],rdx
  42043c:	mov    rax,QWORD PTR [rbp-0x18]
  420440:	mov    rax,QWORD PTR [rax+0x18]
  420444:	neg    eax
  420446:	mov    edx,eax
  420448:	mov    rax,QWORD PTR [rbp-0x8]
  42044c:	mov    DWORD PTR [rax+0xb90],edx
  420452:	mov    eax,0x0
  420457:	jmp    4204a6 <flatcc_builder_get_emit_context@@Base+0x3f5>
  420459:	mov    rax,QWORD PTR [rbp-0x18]
  42045d:	mov    rax,QWORD PTR [rax+0x8]
  420461:	mov    rdx,rax
  420464:	mov    rax,QWORD PTR [rbp-0x18]
  420468:	mov    QWORD PTR [rax+0x20],rdx
  42046c:	mov    rax,QWORD PTR [rbp-0x18]
  420470:	mov    QWORD PTR [rax+0x28],0xb80
  420478:	mov    rax,QWORD PTR [rbp-0x18]
  42047c:	mov    rax,QWORD PTR [rax+0x8]
  420480:	mov    rdx,QWORD PTR [rbp-0x18]
  420484:	mov    rdx,QWORD PTR [rdx+0x8]
  420488:	mov    rdx,QWORD PTR [rdx+0xb88]
  42048f:	mov    edx,DWORD PTR [rdx+0xb90]
  420495:	add    edx,0xb80
  42049b:	mov    DWORD PTR [rax+0xb90],edx
  4204a1:	mov    eax,0x0
  4204a6:	leave  
  4204a7:	ret    
  4204a8:	push   rbp
  4204a9:	mov    rbp,rsp
  4204ac:	sub    rsp,0x30
  4204b0:	mov    QWORD PTR [rbp-0x18],rdi
  4204b4:	mov    QWORD PTR [rbp-0x20],rsi
  4204b8:	mov    QWORD PTR [rbp-0x28],rdx
  4204bc:	mov    rax,QWORD PTR [rbp-0x28]
  4204c0:	add    QWORD PTR [rbp-0x20],rax
  4204c4:	jmp    420568 <flatcc_builder_get_emit_context@@Base+0x4b7>
  4204c9:	mov    rax,QWORD PTR [rbp-0x28]
  4204cd:	mov    QWORD PTR [rbp-0x8],rax
  4204d1:	mov    rax,QWORD PTR [rbp-0x18]
  4204d5:	mov    rax,QWORD PTR [rax+0x18]
  4204d9:	cmp    rax,QWORD PTR [rbp-0x8]
  4204dd:	jae    420509 <flatcc_builder_get_emit_context@@Base+0x458>
  4204df:	mov    rax,QWORD PTR [rbp-0x18]
  4204e3:	mov    rax,QWORD PTR [rax+0x18]
  4204e7:	mov    QWORD PTR [rbp-0x8],rax
  4204eb:	cmp    QWORD PTR [rbp-0x8],0x0
  4204f0:	jne    420509 <flatcc_builder_get_emit_context@@Base+0x458>
  4204f2:	mov    rax,QWORD PTR [rbp-0x18]
  4204f6:	mov    rdi,rax
  4204f9:	call   4200c3 <flatcc_builder_get_emit_context@@Base+0x12>
  4204fe:	test   eax,eax
  420500:	je     420568 <flatcc_builder_get_emit_context@@Base+0x4b7>
  420502:	mov    eax,0xffffffff
  420507:	jmp    420578 <flatcc_builder_get_emit_context@@Base+0x4c7>
  420509:	mov    rax,QWORD PTR [rbp-0x18]
  42050d:	mov    rax,QWORD PTR [rax+0x10]
  420511:	mov    rdx,QWORD PTR [rbp-0x8]
  420515:	neg    rdx
  420518:	add    rdx,rax
  42051b:	mov    rax,QWORD PTR [rbp-0x18]
  42051f:	mov    QWORD PTR [rax+0x10],rdx
  420523:	mov    rax,QWORD PTR [rbp-0x18]
  420527:	mov    rax,QWORD PTR [rax+0x18]
  42052b:	sub    rax,QWORD PTR [rbp-0x8]
  42052f:	mov    rdx,rax
  420532:	mov    rax,QWORD PTR [rbp-0x18]
  420536:	mov    QWORD PTR [rax+0x18],rdx
  42053a:	mov    rax,QWORD PTR [rbp-0x8]
  42053e:	neg    rax
  420541:	add    QWORD PTR [rbp-0x20],rax
  420545:	mov    rax,QWORD PTR [rbp-0x8]
  420549:	sub    QWORD PTR [rbp-0x28],rax
  42054d:	mov    rax,QWORD PTR [rbp-0x18]
  420551:	mov    rax,QWORD PTR [rax+0x10]
  420555:	mov    rdx,QWORD PTR [rbp-0x8]
  420559:	mov    rcx,QWORD PTR [rbp-0x20]
  42055d:	mov    rsi,rcx
  420560:	mov    rdi,rax
  420563:	call   4050f0 <memcpy@plt>
  420568:	cmp    QWORD PTR [rbp-0x28],0x0
  42056d:	jne    4204c9 <flatcc_builder_get_emit_context@@Base+0x418>
  420573:	mov    eax,0x0
  420578:	leave  
  420579:	ret    
  42057a:	push   rbp
  42057b:	mov    rbp,rsp
  42057e:	sub    rsp,0x30
  420582:	mov    QWORD PTR [rbp-0x18],rdi
  420586:	mov    QWORD PTR [rbp-0x20],rsi
  42058a:	mov    QWORD PTR [rbp-0x28],rdx
  42058e:	jmp    42062c <flatcc_builder_get_emit_context@@Base+0x57b>
  420593:	mov    rax,QWORD PTR [rbp-0x28]
  420597:	mov    QWORD PTR [rbp-0x8],rax
  42059b:	mov    rax,QWORD PTR [rbp-0x18]
  42059f:	mov    rax,QWORD PTR [rax+0x28]
  4205a3:	cmp    rax,QWORD PTR [rbp-0x8]
  4205a7:	jae    4205d3 <flatcc_builder_get_emit_context@@Base+0x522>
  4205a9:	mov    rax,QWORD PTR [rbp-0x18]
  4205ad:	mov    rax,QWORD PTR [rax+0x28]
  4205b1:	mov    QWORD PTR [rbp-0x8],rax
  4205b5:	cmp    QWORD PTR [rbp-0x8],0x0
  4205ba:	jne    4205d3 <flatcc_builder_get_emit_context@@Base+0x522>
  4205bc:	mov    rax,QWORD PTR [rbp-0x18]
  4205c0:	mov    rdi,rax
  4205c3:	call   4202c7 <flatcc_builder_get_emit_context@@Base+0x216>
  4205c8:	test   eax,eax
  4205ca:	je     42062c <flatcc_builder_get_emit_context@@Base+0x57b>
  4205cc:	mov    eax,0xffffffff
  4205d1:	jmp    42063c <flatcc_builder_get_emit_context@@Base+0x58b>
  4205d3:	mov    rax,QWORD PTR [rbp-0x18]
  4205d7:	mov    rax,QWORD PTR [rax+0x20]
  4205db:	mov    rdx,QWORD PTR [rbp-0x8]
  4205df:	mov    rcx,QWORD PTR [rbp-0x20]
  4205e3:	mov    rsi,rcx
  4205e6:	mov    rdi,rax
  4205e9:	call   4050f0 <memcpy@plt>
  4205ee:	mov    rax,QWORD PTR [rbp-0x8]
  4205f2:	sub    QWORD PTR [rbp-0x28],rax
  4205f6:	mov    rax,QWORD PTR [rbp-0x8]
  4205fa:	add    QWORD PTR [rbp-0x20],rax
  4205fe:	mov    rax,QWORD PTR [rbp-0x18]
  420602:	mov    rdx,QWORD PTR [rax+0x20]
  420606:	mov    rax,QWORD PTR [rbp-0x8]
  42060a:	add    rdx,rax
  42060d:	mov    rax,QWORD PTR [rbp-0x18]
  420611:	mov    QWORD PTR [rax+0x20],rdx
  420615:	mov    rax,QWORD PTR [rbp-0x18]
  420619:	mov    rax,QWORD PTR [rax+0x28]
  42061d:	sub    rax,QWORD PTR [rbp-0x8]
  420621:	mov    rdx,rax
  420624:	mov    rax,QWORD PTR [rbp-0x18]
  420628:	mov    QWORD PTR [rax+0x28],rdx
  42062c:	cmp    QWORD PTR [rbp-0x28],0x0
  420631:	jne    420593 <flatcc_builder_get_emit_context@@Base+0x4e2>
  420637:	mov    eax,0x0
  42063c:	leave  
  42063d:	ret    

000000000042063e <flatcc_emitter_recycle_page@@Base>:
  42063e:	push   rbp
  42063f:	mov    rbp,rsp
  420642:	mov    QWORD PTR [rbp-0x8],rdi
  420646:	mov    QWORD PTR [rbp-0x10],rsi
  42064a:	mov    rax,QWORD PTR [rbp-0x8]
  42064e:	mov    rax,QWORD PTR [rax]
  420651:	cmp    rax,QWORD PTR [rbp-0x10]
  420655:	je     420665 <flatcc_emitter_recycle_page@@Base+0x27>
  420657:	mov    rax,QWORD PTR [rbp-0x8]
  42065b:	mov    rax,QWORD PTR [rax+0x8]
  42065f:	cmp    rax,QWORD PTR [rbp-0x10]
  420663:	jne    42066f <flatcc_emitter_recycle_page@@Base+0x31>
  420665:	mov    eax,0xffffffff
  42066a:	jmp    420705 <flatcc_emitter_recycle_page@@Base+0xc7>
  42066f:	mov    rax,QWORD PTR [rbp-0x10]
  420673:	mov    rax,QWORD PTR [rax+0xb80]
  42067a:	mov    rdx,QWORD PTR [rbp-0x10]
  42067e:	mov    rdx,QWORD PTR [rdx+0xb88]
  420685:	mov    QWORD PTR [rax+0xb88],rdx
  42068c:	mov    rax,QWORD PTR [rbp-0x10]
  420690:	mov    rax,QWORD PTR [rax+0xb88]
  420697:	mov    rdx,QWORD PTR [rbp-0x10]
  42069b:	mov    rdx,QWORD PTR [rdx+0xb80]
  4206a2:	mov    QWORD PTR [rax+0xb80],rdx
  4206a9:	mov    rax,QWORD PTR [rbp-0x8]
  4206ad:	mov    rax,QWORD PTR [rax]
  4206b0:	mov    rdx,QWORD PTR [rax+0xb88]
  4206b7:	mov    rax,QWORD PTR [rbp-0x10]
  4206bb:	mov    QWORD PTR [rax+0xb88],rdx
  4206c2:	mov    rax,QWORD PTR [rbp-0x8]
  4206c6:	mov    rdx,QWORD PTR [rax]
  4206c9:	mov    rax,QWORD PTR [rbp-0x10]
  4206cd:	mov    QWORD PTR [rax+0xb80],rdx
  4206d4:	mov    rax,QWORD PTR [rbp-0x10]
  4206d8:	mov    rax,QWORD PTR [rax+0xb88]
  4206df:	mov    rdx,QWORD PTR [rbp-0x10]
  4206e3:	mov    QWORD PTR [rax+0xb80],rdx
  4206ea:	mov    rax,QWORD PTR [rbp-0x10]
  4206ee:	mov    rax,QWORD PTR [rax+0xb80]
  4206f5:	mov    rdx,QWORD PTR [rbp-0x10]
  4206f9:	mov    QWORD PTR [rax+0xb88],rdx
  420700:	mov    eax,0x0
  420705:	pop    rbp
  420706:	ret    

0000000000420707 <flatcc_emitter_reset@@Base>:
  420707:	push   rbp
  420708:	mov    rbp,rsp
  42070b:	sub    rsp,0x20
  42070f:	mov    QWORD PTR [rbp-0x18],rdi
  420713:	mov    rax,QWORD PTR [rbp-0x18]
  420717:	mov    rax,QWORD PTR [rax]
  42071a:	mov    QWORD PTR [rbp-0x8],rax
  42071e:	mov    rax,QWORD PTR [rbp-0x18]
  420722:	mov    rax,QWORD PTR [rax]
  420725:	test   rax,rax
  420728:	je     420890 <flatcc_emitter_reset@@Base+0x189>
  42072e:	mov    rax,QWORD PTR [rbp-0x18]
  420732:	mov    rdx,QWORD PTR [rax]
  420735:	mov    rax,QWORD PTR [rbp-0x18]
  420739:	mov    QWORD PTR [rax+0x8],rdx
  42073d:	mov    rax,QWORD PTR [rbp-0x18]
  420741:	mov    rax,QWORD PTR [rax]
  420744:	lea    rdx,[rax+0x5c0]
  42074b:	mov    rax,QWORD PTR [rbp-0x18]
  42074f:	mov    QWORD PTR [rax+0x10],rdx
  420753:	mov    rax,QWORD PTR [rbp-0x18]
  420757:	mov    rdx,QWORD PTR [rax+0x10]
  42075b:	mov    rax,QWORD PTR [rbp-0x18]
  42075f:	mov    QWORD PTR [rax+0x20],rdx
  420763:	mov    rax,QWORD PTR [rbp-0x18]
  420767:	mov    QWORD PTR [rax+0x18],0x5c0
  42076f:	mov    rax,QWORD PTR [rbp-0x18]
  420773:	mov    QWORD PTR [rax+0x28],0x5c0
  42077b:	mov    rax,QWORD PTR [rbp-0x18]
  42077f:	mov    rax,QWORD PTR [rax]
  420782:	mov    rdx,QWORD PTR [rbp-0x18]
  420786:	mov    rdx,QWORD PTR [rdx+0x18]
  42078a:	neg    edx
  42078c:	mov    DWORD PTR [rax+0xb90],edx
  420792:	mov    rax,QWORD PTR [rbp-0x18]
  420796:	mov    rax,QWORD PTR [rax+0x40]
  42079a:	test   rax,rax
  42079d:	jne    4207af <flatcc_emitter_reset@@Base+0xa8>
  42079f:	mov    rax,QWORD PTR [rbp-0x18]
  4207a3:	mov    rdx,QWORD PTR [rax+0x30]
  4207a7:	mov    rax,QWORD PTR [rbp-0x18]
  4207ab:	mov    QWORD PTR [rax+0x40],rdx
  4207af:	mov    rax,QWORD PTR [rbp-0x18]
  4207b3:	mov    rdx,QWORD PTR [rax+0x40]
  4207b7:	mov    rax,rdx
  4207ba:	add    rax,rax
  4207bd:	add    rax,rdx
  4207c0:	shr    rax,0x2
  4207c4:	mov    rdx,rax
  4207c7:	mov    rax,QWORD PTR [rbp-0x18]
  4207cb:	mov    rax,QWORD PTR [rax+0x30]
  4207cf:	shr    rax,0x2
  4207d3:	add    rdx,rax
  4207d6:	mov    rax,QWORD PTR [rbp-0x18]
  4207da:	mov    QWORD PTR [rax+0x40],rdx
  4207de:	mov    rax,QWORD PTR [rbp-0x18]
  4207e2:	mov    QWORD PTR [rax+0x30],0x0
  4207ea:	jmp    420856 <flatcc_emitter_reset@@Base+0x14f>
  4207ec:	mov    rax,QWORD PTR [rbp-0x18]
  4207f0:	mov    rax,QWORD PTR [rax+0x8]
  4207f4:	mov    rax,QWORD PTR [rax+0xb80]
  4207fb:	mov    QWORD PTR [rbp-0x8],rax
  4207ff:	mov    rax,QWORD PTR [rbp-0x18]
  420803:	mov    rax,QWORD PTR [rax+0x8]
  420807:	mov    rdx,QWORD PTR [rbp-0x8]
  42080b:	mov    rdx,QWORD PTR [rdx+0xb80]
  420812:	mov    QWORD PTR [rax+0xb80],rdx
  420819:	mov    rax,QWORD PTR [rbp-0x8]
  42081d:	mov    rax,QWORD PTR [rax+0xb80]
  420824:	mov    rdx,QWORD PTR [rbp-0x18]
  420828:	mov    rdx,QWORD PTR [rdx+0x8]
  42082c:	mov    QWORD PTR [rax+0xb88],rdx
  420833:	mov    rax,QWORD PTR [rbp-0x8]
  420837:	mov    rdi,rax
  42083a:	call   405030 <free@plt>
  42083f:	mov    rax,QWORD PTR [rbp-0x18]
  420843:	mov    rax,QWORD PTR [rax+0x38]
  420847:	lea    rdx,[rax-0xb80]
  42084e:	mov    rax,QWORD PTR [rbp-0x18]
  420852:	mov    QWORD PTR [rax+0x38],rdx
  420856:	mov    rax,QWORD PTR [rbp-0x18]
  42085a:	mov    rax,QWORD PTR [rax+0x40]
  42085e:	lea    rdx,[rax+rax*1]
  420862:	mov    rax,QWORD PTR [rbp-0x18]
  420866:	mov    rax,QWORD PTR [rax+0x38]
  42086a:	cmp    rdx,rax
  42086d:	jae    420891 <flatcc_emitter_reset@@Base+0x18a>
  42086f:	mov    rax,QWORD PTR [rbp-0x18]
  420873:	mov    rax,QWORD PTR [rax+0x8]
  420877:	mov    rdx,QWORD PTR [rax+0xb80]
  42087e:	mov    rax,QWORD PTR [rbp-0x18]
  420882:	mov    rax,QWORD PTR [rax]
  420885:	cmp    rdx,rax
  420888:	jne    4207ec <flatcc_emitter_reset@@Base+0xe5>
  42088e:	jmp    420891 <flatcc_emitter_reset@@Base+0x18a>
  420890:	nop
  420891:	leave  
  420892:	ret    

0000000000420893 <flatcc_emitter_clear@@Base>:
  420893:	push   rbp
  420894:	mov    rbp,rsp
  420897:	sub    rsp,0x20
  42089b:	mov    QWORD PTR [rbp-0x18],rdi
  42089f:	mov    rax,QWORD PTR [rbp-0x18]
  4208a3:	mov    rax,QWORD PTR [rax]
  4208a6:	mov    QWORD PTR [rbp-0x8],rax
  4208aa:	cmp    QWORD PTR [rbp-0x8],0x0
  4208af:	je     42091f <flatcc_emitter_clear@@Base+0x8c>
  4208b1:	mov    rax,QWORD PTR [rbp-0x8]
  4208b5:	mov    rax,QWORD PTR [rax+0xb88]
  4208bc:	mov    QWORD PTR [rax+0xb80],0x0
  4208c7:	jmp    4208eb <flatcc_emitter_clear@@Base+0x58>
  4208c9:	mov    rax,QWORD PTR [rbp-0x8]
  4208cd:	mov    rax,QWORD PTR [rax+0xb80]
  4208d4:	mov    QWORD PTR [rbp-0x8],rax
  4208d8:	mov    rax,QWORD PTR [rbp-0x8]
  4208dc:	mov    rax,QWORD PTR [rax+0xb88]
  4208e3:	mov    rdi,rax
  4208e6:	call   405030 <free@plt>
  4208eb:	mov    rax,QWORD PTR [rbp-0x8]
  4208ef:	mov    rax,QWORD PTR [rax+0xb80]
  4208f6:	test   rax,rax
  4208f9:	jne    4208c9 <flatcc_emitter_clear@@Base+0x36>
  4208fb:	mov    rax,QWORD PTR [rbp-0x8]
  4208ff:	mov    rdi,rax
  420902:	call   405030 <free@plt>
  420907:	mov    rax,QWORD PTR [rbp-0x18]
  42090b:	mov    edx,0x48
  420910:	mov    esi,0x0
  420915:	mov    rdi,rax
  420918:	call   405090 <memset@plt>
  42091d:	jmp    420920 <flatcc_emitter_clear@@Base+0x8d>
  42091f:	nop
  420920:	leave  
  420921:	ret    

0000000000420922 <flatcc_emitter@@Base>:
  420922:	push   rbp
  420923:	mov    rbp,rsp
  420926:	sub    rsp,0x30
  42092a:	mov    QWORD PTR [rbp-0x18],rdi
  42092e:	mov    QWORD PTR [rbp-0x20],rsi
  420932:	mov    DWORD PTR [rbp-0x24],edx
  420935:	mov    DWORD PTR [rbp-0x28],ecx
  420938:	mov    QWORD PTR [rbp-0x30],r8
  42093c:	mov    rax,QWORD PTR [rbp-0x18]
  420940:	mov    QWORD PTR [rbp-0x8],rax
  420944:	mov    rax,QWORD PTR [rbp-0x8]
  420948:	mov    rdx,QWORD PTR [rax+0x30]
  42094c:	mov    rax,QWORD PTR [rbp-0x30]
  420950:	add    rdx,rax
  420953:	mov    rax,QWORD PTR [rbp-0x8]
  420957:	mov    QWORD PTR [rax+0x30],rdx
  42095b:	cmp    DWORD PTR [rbp-0x28],0x0
  42095f:	jns    420a07 <flatcc_emitter@@Base+0xe5>
  420965:	mov    rax,QWORD PTR [rbp-0x8]
  420969:	mov    rax,QWORD PTR [rax+0x18]
  42096d:	cmp    rax,QWORD PTR [rbp-0x30]
  420971:	jb     4209b5 <flatcc_emitter@@Base+0x93>
  420973:	mov    rax,QWORD PTR [rbp-0x8]
  420977:	mov    rax,QWORD PTR [rax+0x10]
  42097b:	mov    rdx,QWORD PTR [rbp-0x30]
  42097f:	neg    rdx
  420982:	add    rdx,rax
  420985:	mov    rax,QWORD PTR [rbp-0x8]
  420989:	mov    QWORD PTR [rax+0x10],rdx
  42098d:	mov    rax,QWORD PTR [rbp-0x8]
  420991:	mov    rax,QWORD PTR [rax+0x18]
  420995:	sub    rax,QWORD PTR [rbp-0x30]
  420999:	mov    rdx,rax
  42099c:	mov    rax,QWORD PTR [rbp-0x8]
  4209a0:	mov    QWORD PTR [rax+0x18],rdx
  4209a4:	mov    rax,QWORD PTR [rbp-0x8]
  4209a8:	mov    rax,QWORD PTR [rax+0x10]
  4209ac:	mov    QWORD PTR [rbp-0x10],rax
  4209b0:	jmp    420a93 <flatcc_emitter@@Base+0x171>
  4209b5:	mov    eax,DWORD PTR [rbp-0x24]
  4209b8:	cdqe   
  4209ba:	shl    rax,0x4
  4209be:	add    QWORD PTR [rbp-0x20],rax
  4209c2:	jmp    4209f5 <flatcc_emitter@@Base+0xd3>
  4209c4:	sub    QWORD PTR [rbp-0x20],0x10
  4209c9:	mov    rax,QWORD PTR [rbp-0x20]
  4209cd:	mov    rdx,QWORD PTR [rax+0x8]
  4209d1:	mov    rax,QWORD PTR [rbp-0x20]
  4209d5:	mov    rcx,QWORD PTR [rax]
  4209d8:	mov    rax,QWORD PTR [rbp-0x8]
  4209dc:	mov    rsi,rcx
  4209df:	mov    rdi,rax
  4209e2:	call   4204a8 <flatcc_builder_get_emit_context@@Base+0x3f7>
  4209e7:	test   eax,eax
  4209e9:	je     4209f5 <flatcc_emitter@@Base+0xd3>
  4209eb:	mov    eax,0xffffffff
  4209f0:	jmp    420ad6 <flatcc_emitter@@Base+0x1b4>
  4209f5:	mov    eax,DWORD PTR [rbp-0x24]
  4209f8:	lea    edx,[rax-0x1]
  4209fb:	mov    DWORD PTR [rbp-0x24],edx
  4209fe:	test   eax,eax
  420a00:	jne    4209c4 <flatcc_emitter@@Base+0xa2>
  420a02:	jmp    420a8c <flatcc_emitter@@Base+0x16a>
  420a07:	mov    rax,QWORD PTR [rbp-0x8]
  420a0b:	mov    rax,QWORD PTR [rax+0x28]
  420a0f:	cmp    rax,QWORD PTR [rbp-0x30]
  420a13:	jb     420a7f <flatcc_emitter@@Base+0x15d>
  420a15:	mov    rax,QWORD PTR [rbp-0x8]
  420a19:	mov    rax,QWORD PTR [rax+0x20]
  420a1d:	mov    QWORD PTR [rbp-0x10],rax
  420a21:	mov    rax,QWORD PTR [rbp-0x8]
  420a25:	mov    rdx,QWORD PTR [rax+0x20]
  420a29:	mov    rax,QWORD PTR [rbp-0x30]
  420a2d:	add    rdx,rax
  420a30:	mov    rax,QWORD PTR [rbp-0x8]
  420a34:	mov    QWORD PTR [rax+0x20],rdx
  420a38:	mov    rax,QWORD PTR [rbp-0x8]
  420a3c:	mov    rax,QWORD PTR [rax+0x28]
  420a40:	sub    rax,QWORD PTR [rbp-0x30]
  420a44:	mov    rdx,rax
  420a47:	mov    rax,QWORD PTR [rbp-0x8]
  420a4b:	mov    QWORD PTR [rax+0x28],rdx
  420a4f:	jmp    420a93 <flatcc_emitter@@Base+0x171>
  420a51:	mov    rax,QWORD PTR [rbp-0x20]
  420a55:	mov    rdx,QWORD PTR [rax+0x8]
  420a59:	mov    rax,QWORD PTR [rbp-0x20]
  420a5d:	mov    rcx,QWORD PTR [rax]
  420a60:	mov    rax,QWORD PTR [rbp-0x8]
  420a64:	mov    rsi,rcx
  420a67:	mov    rdi,rax
  420a6a:	call   42057a <flatcc_builder_get_emit_context@@Base+0x4c9>
  420a6f:	test   eax,eax
  420a71:	je     420a7a <flatcc_emitter@@Base+0x158>
  420a73:	mov    eax,0xffffffff
  420a78:	jmp    420ad6 <flatcc_emitter@@Base+0x1b4>
  420a7a:	add    QWORD PTR [rbp-0x20],0x10
  420a7f:	mov    eax,DWORD PTR [rbp-0x24]
  420a82:	lea    edx,[rax-0x1]
  420a85:	mov    DWORD PTR [rbp-0x24],edx
  420a88:	test   eax,eax
  420a8a:	jne    420a51 <flatcc_emitter@@Base+0x12f>
  420a8c:	mov    eax,0x0
  420a91:	jmp    420ad6 <flatcc_emitter@@Base+0x1b4>
  420a93:	jmp    420ac4 <flatcc_emitter@@Base+0x1a2>
  420a95:	mov    rax,QWORD PTR [rbp-0x20]
  420a99:	mov    rdx,QWORD PTR [rax+0x8]
  420a9d:	mov    rax,QWORD PTR [rbp-0x20]
  420aa1:	mov    rcx,QWORD PTR [rax]
  420aa4:	mov    rax,QWORD PTR [rbp-0x10]
  420aa8:	mov    rsi,rcx
  420aab:	mov    rdi,rax
  420aae:	call   4050f0 <memcpy@plt>
  420ab3:	mov    rax,QWORD PTR [rbp-0x20]
  420ab7:	mov    rax,QWORD PTR [rax+0x8]
  420abb:	add    QWORD PTR [rbp-0x10],rax
  420abf:	add    QWORD PTR [rbp-0x20],0x10
  420ac4:	mov    eax,DWORD PTR [rbp-0x24]
  420ac7:	lea    edx,[rax-0x1]
  420aca:	mov    DWORD PTR [rbp-0x24],edx
  420acd:	test   eax,eax
  420acf:	jne    420a95 <flatcc_emitter@@Base+0x173>
  420ad1:	mov    eax,0x0
  420ad6:	leave  
  420ad7:	ret    

0000000000420ad8 <flatcc_emitter_copy_buffer@@Base>:
  420ad8:	push   rbp
  420ad9:	mov    rbp,rsp
  420adc:	sub    rsp,0x30
  420ae0:	mov    QWORD PTR [rbp-0x18],rdi
  420ae4:	mov    QWORD PTR [rbp-0x20],rsi
  420ae8:	mov    QWORD PTR [rbp-0x28],rdx
  420aec:	mov    rax,QWORD PTR [rbp-0x18]
  420af0:	mov    rax,QWORD PTR [rax+0x30]
  420af4:	cmp    rax,QWORD PTR [rbp-0x28]
  420af8:	jbe    420b04 <flatcc_emitter_copy_buffer@@Base+0x2c>
  420afa:	mov    eax,0x0
  420aff:	jmp    420c08 <flatcc_emitter_copy_buffer@@Base+0x130>
  420b04:	mov    rax,QWORD PTR [rbp-0x18]
  420b08:	mov    rax,QWORD PTR [rax]
  420b0b:	test   rax,rax
  420b0e:	jne    420b1a <flatcc_emitter_copy_buffer@@Base+0x42>
  420b10:	mov    eax,0x0
  420b15:	jmp    420c08 <flatcc_emitter_copy_buffer@@Base+0x130>
  420b1a:	mov    rax,QWORD PTR [rbp-0x18]
  420b1e:	mov    rdx,QWORD PTR [rax]
  420b21:	mov    rax,QWORD PTR [rbp-0x18]
  420b25:	mov    rax,QWORD PTR [rax+0x8]
  420b29:	cmp    rdx,rax
  420b2c:	jne    420b56 <flatcc_emitter_copy_buffer@@Base+0x7e>
  420b2e:	mov    rax,QWORD PTR [rbp-0x18]
  420b32:	mov    rdx,QWORD PTR [rax+0x30]
  420b36:	mov    rax,QWORD PTR [rbp-0x18]
  420b3a:	mov    rcx,QWORD PTR [rax+0x10]
  420b3e:	mov    rax,QWORD PTR [rbp-0x20]
  420b42:	mov    rsi,rcx
  420b45:	mov    rdi,rax
  420b48:	call   4050f0 <memcpy@plt>
  420b4d:	mov    rax,QWORD PTR [rbp-0x20]
  420b51:	jmp    420c08 <flatcc_emitter_copy_buffer@@Base+0x130>
  420b56:	mov    rax,QWORD PTR [rbp-0x18]
  420b5a:	mov    rax,QWORD PTR [rax+0x18]
  420b5e:	mov    edx,0xb80
  420b63:	sub    rdx,rax
  420b66:	mov    rax,rdx
  420b69:	mov    QWORD PTR [rbp-0x8],rax
  420b6d:	mov    rax,QWORD PTR [rbp-0x18]
  420b71:	mov    rcx,QWORD PTR [rax+0x10]
  420b75:	mov    rdx,QWORD PTR [rbp-0x8]
  420b79:	mov    rax,QWORD PTR [rbp-0x20]
  420b7d:	mov    rsi,rcx
  420b80:	mov    rdi,rax
  420b83:	call   4050f0 <memcpy@plt>
  420b88:	mov    rax,QWORD PTR [rbp-0x8]
  420b8c:	add    QWORD PTR [rbp-0x20],rax
  420b90:	mov    rax,QWORD PTR [rbp-0x18]
  420b94:	mov    rax,QWORD PTR [rax]
  420b97:	mov    rax,QWORD PTR [rax+0xb80]
  420b9e:	mov    QWORD PTR [rbp-0x10],rax
  420ba2:	jmp    420bd3 <flatcc_emitter_copy_buffer@@Base+0xfb>
  420ba4:	mov    rcx,QWORD PTR [rbp-0x10]
  420ba8:	mov    rax,QWORD PTR [rbp-0x20]
  420bac:	mov    edx,0xb80
  420bb1:	mov    rsi,rcx
  420bb4:	mov    rdi,rax
  420bb7:	call   4050f0 <memcpy@plt>
  420bbc:	add    QWORD PTR [rbp-0x20],0xb80
  420bc4:	mov    rax,QWORD PTR [rbp-0x10]
  420bc8:	mov    rax,QWORD PTR [rax+0xb80]
  420bcf:	mov    QWORD PTR [rbp-0x10],rax
  420bd3:	mov    rax,QWORD PTR [rbp-0x18]
  420bd7:	mov    rax,QWORD PTR [rax+0x8]
  420bdb:	cmp    rax,QWORD PTR [rbp-0x10]
  420bdf:	jne    420ba4 <flatcc_emitter_copy_buffer@@Base+0xcc>
  420be1:	mov    rax,QWORD PTR [rbp-0x18]
  420be5:	mov    rax,QWORD PTR [rax+0x28]
  420be9:	mov    edx,0xb80
  420bee:	sub    rdx,rax
  420bf1:	mov    rcx,QWORD PTR [rbp-0x10]
  420bf5:	mov    rax,QWORD PTR [rbp-0x20]
  420bf9:	mov    rsi,rcx
  420bfc:	mov    rdi,rax
  420bff:	call   4050f0 <memcpy@plt>
  420c04:	mov    rax,QWORD PTR [rbp-0x20]
  420c08:	leave  
  420c09:	ret    
  420c0a:	push   rbp
  420c0b:	mov    rbp,rsp
  420c0e:	mov    DWORD PTR [rbp-0x4],edi
  420c11:	mov    eax,DWORD PTR [rbp-0x4]
  420c14:	pop    rbp
  420c15:	ret    
  420c16:	push   rbp
  420c17:	mov    rbp,rsp
  420c1a:	sub    rsp,0x8
  420c1e:	mov    QWORD PTR [rbp-0x8],rdi
  420c22:	mov    rax,QWORD PTR [rbp-0x8]
  420c26:	mov    eax,DWORD PTR [rax]
  420c28:	mov    edi,eax
  420c2a:	call   420c0a <flatcc_emitter_copy_buffer@@Base+0x132>
  420c2f:	leave  
  420c30:	ret    
  420c31:	push   rbp
  420c32:	mov    rbp,rsp
  420c35:	mov    eax,edi
  420c37:	mov    WORD PTR [rbp-0x4],ax
  420c3b:	movzx  eax,WORD PTR [rbp-0x4]
  420c3f:	pop    rbp
  420c40:	ret    
  420c41:	push   rbp
  420c42:	mov    rbp,rsp
  420c45:	sub    rsp,0x8
  420c49:	mov    QWORD PTR [rbp-0x8],rdi
  420c4d:	mov    rax,QWORD PTR [rbp-0x8]
  420c51:	movzx  eax,WORD PTR [rax]
  420c54:	movzx  eax,ax
  420c57:	mov    edi,eax
  420c59:	call   420c31 <flatcc_emitter_copy_buffer@@Base+0x159>
  420c5e:	leave  
  420c5f:	ret    
  420c60:	push   rbp
  420c61:	mov    rbp,rsp
  420c64:	mov    DWORD PTR [rbp-0x4],edi
  420c67:	mov    eax,DWORD PTR [rbp-0x4]
  420c6a:	pop    rbp
  420c6b:	ret    
  420c6c:	push   rbp
  420c6d:	mov    rbp,rsp
  420c70:	mov    DWORD PTR [rbp-0x4],edi
  420c73:	mov    eax,DWORD PTR [rbp-0x4]
  420c76:	pop    rbp
  420c77:	ret    
  420c78:	push   rbp
  420c79:	mov    rbp,rsp
  420c7c:	sub    rsp,0x8
  420c80:	mov    QWORD PTR [rbp-0x8],rdi
  420c84:	mov    rax,QWORD PTR [rbp-0x8]
  420c88:	mov    eax,DWORD PTR [rax]
  420c8a:	mov    edi,eax
  420c8c:	call   420c60 <flatcc_emitter_copy_buffer@@Base+0x188>
  420c91:	leave  
  420c92:	ret    

0000000000420c93 <flatcc_verify_error_string@@Base>:
  420c93:	push   rbp
  420c94:	mov    rbp,rsp
  420c97:	mov    DWORD PTR [rbp-0x4],edi
  420c9a:	cmp    DWORD PTR [rbp-0x4],0x24
  420c9e:	ja     420e5a <flatcc_verify_error_string@@Base+0x1c7>
  420ca4:	mov    eax,DWORD PTR [rbp-0x4]
  420ca7:	lea    rdx,[rax*4+0x0]
  420caf:	lea    rax,[rip+0x1a49a]        # 43b150 <flatcc_builder_padding_base@@Base+0x11d0>
  420cb6:	mov    eax,DWORD PTR [rdx+rax*1]
  420cb9:	movsxd rdx,eax
  420cbc:	lea    rax,[rip+0x1a48d]        # 43b150 <flatcc_builder_padding_base@@Base+0x11d0>
  420cc3:	add    rax,rdx
  420cc6:	jmp    rax
  420cc8:	lea    rax,[rip+0x19fdb]        # 43acaa <flatcc_builder_padding_base@@Base+0xd2a>
  420ccf:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420cd4:	lea    rax,[rip+0x19fd2]        # 43acad <flatcc_builder_padding_base@@Base+0xd2d>
  420cdb:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420ce0:	lea    rax,[rip+0x19fde]        # 43acc5 <flatcc_builder_padding_base@@Base+0xd45>
  420ce7:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420cec:	lea    rax,[rip+0x19fe6]        # 43acd9 <flatcc_builder_padding_base@@Base+0xd59>
  420cf3:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420cf8:	lea    rax,[rip+0x19ff4]        # 43acf3 <flatcc_builder_padding_base@@Base+0xd73>
  420cff:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d04:	lea    rax,[rip+0x1a005]        # 43ad10 <flatcc_builder_padding_base@@Base+0xd90>
  420d0b:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d10:	lea    rax,[rip+0x1a021]        # 43ad38 <flatcc_builder_padding_base@@Base+0xdb8>
  420d17:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d1c:	lea    rax,[rip+0x1a034]        # 43ad57 <flatcc_builder_padding_base@@Base+0xdd7>
  420d23:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d28:	lea    rax,[rip+0x1a043]        # 43ad72 <flatcc_builder_padding_base@@Base+0xdf2>
  420d2f:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d34:	lea    rax,[rip+0x1a04b]        # 43ad86 <flatcc_builder_padding_base@@Base+0xe06>
  420d3b:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d40:	lea    rax,[rip+0x1a053]        # 43ad9a <flatcc_builder_padding_base@@Base+0xe1a>
  420d47:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d4c:	lea    rax,[rip+0x1a05c]        # 43adaf <flatcc_builder_padding_base@@Base+0xe2f>
  420d53:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d58:	lea    rax,[rip+0x1a061]        # 43adc0 <flatcc_builder_padding_base@@Base+0xe40>
  420d5f:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d64:	lea    rax,[rip+0x1a06d]        # 43add8 <flatcc_builder_padding_base@@Base+0xe58>
  420d6b:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d70:	lea    rax,[rip+0x1a07a]        # 43adf1 <flatcc_builder_padding_base@@Base+0xe71>
  420d77:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d7c:	lea    rax,[rip+0x1a08d]        # 43ae10 <flatcc_builder_padding_base@@Base+0xe90>
  420d83:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d88:	lea    rax,[rip+0x1a0a9]        # 43ae38 <flatcc_builder_padding_base@@Base+0xeb8>
  420d8f:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420d94:	lea    rax,[rip+0x1a0c5]        # 43ae60 <flatcc_builder_padding_base@@Base+0xee0>
  420d9b:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420da0:	lea    rax,[rip+0x1a0e1]        # 43ae88 <flatcc_builder_padding_base@@Base+0xf08>
  420da7:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420dac:	lea    rax,[rip+0x1a0ed]        # 43aea0 <flatcc_builder_padding_base@@Base+0xf20>
  420db3:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420db8:	lea    rax,[rip+0x1a108]        # 43aec7 <flatcc_builder_padding_base@@Base+0xf47>
  420dbf:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420dc4:	lea    rax,[rip+0x1a115]        # 43aee0 <flatcc_builder_padding_base@@Base+0xf60>
  420dcb:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420dd0:	lea    rax,[rip+0x1a139]        # 43af10 <flatcc_builder_padding_base@@Base+0xf90>
  420dd7:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420ddc:	lea    rax,[rip+0x1a165]        # 43af48 <flatcc_builder_padding_base@@Base+0xfc8>
  420de3:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420de5:	lea    rax,[rip+0x1a18c]        # 43af78 <flatcc_builder_padding_base@@Base+0xff8>
  420dec:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420dee:	lea    rax,[rip+0x1a1b3]        # 43afa8 <flatcc_builder_padding_base@@Base+0x1028>
  420df5:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420df7:	lea    rax,[rip+0x1a1d9]        # 43afd7 <flatcc_builder_padding_base@@Base+0x1057>
  420dfe:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e00:	lea    rax,[rip+0x1a1e4]        # 43afeb <flatcc_builder_padding_base@@Base+0x106b>
  420e07:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e09:	lea    rax,[rip+0x1a1f6]        # 43b006 <flatcc_builder_padding_base@@Base+0x1086>
  420e10:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e12:	lea    rax,[rip+0x1a207]        # 43b020 <flatcc_builder_padding_base@@Base+0x10a0>
  420e19:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e1b:	lea    rax,[rip+0x1a226]        # 43b048 <flatcc_builder_padding_base@@Base+0x10c8>
  420e22:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e24:	lea    rax,[rip+0x1a243]        # 43b06e <flatcc_builder_padding_base@@Base+0x10ee>
  420e2b:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e2d:	lea    rax,[rip+0x1a254]        # 43b088 <flatcc_builder_padding_base@@Base+0x1108>
  420e34:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e36:	lea    rax,[rip+0x1a273]        # 43b0b0 <flatcc_builder_padding_base@@Base+0x1130>
  420e3d:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e3f:	lea    rax,[rip+0x1a292]        # 43b0d8 <flatcc_builder_padding_base@@Base+0x1158>
  420e46:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e48:	lea    rax,[rip+0x1a2c1]        # 43b110 <flatcc_builder_padding_base@@Base+0x1190>
  420e4f:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e51:	lea    rax,[rip+0x1a2e0]        # 43b138 <flatcc_builder_padding_base@@Base+0x11b8>
  420e58:	jmp    420e61 <flatcc_verify_error_string@@Base+0x1ce>
  420e5a:	lea    rax,[rip+0x1a2e5]        # 43b146 <flatcc_builder_padding_base@@Base+0x11c6>
  420e61:	pop    rbp
  420e62:	ret    
  420e63:	push   rbp
  420e64:	mov    rbp,rsp
  420e67:	sub    rsp,0x10
  420e6b:	mov    QWORD PTR [rbp-0x8],rdi
  420e6f:	mov    DWORD PTR [rbp-0xc],esi
  420e72:	mov    edx,DWORD PTR [rbp-0xc]
  420e75:	mov    rax,QWORD PTR [rbp-0x8]
  420e79:	add    rax,rdx
  420e7c:	mov    rdi,rax
  420e7f:	call   420c16 <flatcc_emitter_copy_buffer@@Base+0x13e>
  420e84:	leave  
  420e85:	ret    
  420e86:	push   rbp
  420e87:	mov    rbp,rsp
  420e8a:	sub    rsp,0x20
  420e8e:	mov    QWORD PTR [rbp-0x18],rdi
  420e92:	mov    rax,QWORD PTR fs:0x28
  420e9b:	mov    QWORD PTR [rbp-0x8],rax
  420e9f:	xor    eax,eax
  420ea1:	mov    DWORD PTR [rbp-0xc],0x0
  420ea8:	mov    rcx,QWORD PTR [rbp-0x18]
  420eac:	lea    rax,[rbp-0xc]
  420eb0:	mov    edx,0x4
  420eb5:	mov    rsi,rcx
  420eb8:	mov    rdi,rax
  420ebb:	call   405040 <strncpy@plt>
  420ec0:	mov    eax,DWORD PTR [rbp-0xc]
  420ec3:	mov    edi,eax
  420ec5:	call   420c6c <flatcc_emitter_copy_buffer@@Base+0x194>
  420eca:	mov    rdx,QWORD PTR [rbp-0x8]
  420ece:	xor    rdx,QWORD PTR fs:0x28
  420ed7:	je     420ede <flatcc_verify_error_string@@Base+0x24b>
  420ed9:	call   405070 <__stack_chk_fail@plt>
  420ede:	leave  
  420edf:	ret    
  420ee0:	push   rbp
  420ee1:	mov    rbp,rsp
  420ee4:	sub    rsp,0x10
  420ee8:	mov    QWORD PTR [rbp-0x8],rdi
  420eec:	mov    DWORD PTR [rbp-0xc],esi
  420eef:	mov    edx,DWORD PTR [rbp-0xc]
  420ef2:	mov    rax,QWORD PTR [rbp-0x8]
  420ef6:	add    rax,rdx
  420ef9:	mov    rdi,rax
  420efc:	call   420c78 <flatcc_emitter_copy_buffer@@Base+0x1a0>
  420f01:	leave  
  420f02:	ret    
  420f03:	push   rbp
  420f04:	mov    rbp,rsp
  420f07:	sub    rsp,0x10
  420f0b:	mov    QWORD PTR [rbp-0x8],rdi
  420f0f:	mov    DWORD PTR [rbp-0xc],esi
  420f12:	mov    edx,DWORD PTR [rbp-0xc]
  420f15:	mov    rax,QWORD PTR [rbp-0x8]
  420f19:	add    rax,rdx
  420f1c:	mov    rdi,rax
  420f1f:	call   420c41 <flatcc_emitter_copy_buffer@@Base+0x169>
  420f24:	leave  
  420f25:	ret    
  420f26:	push   rbp
  420f27:	mov    rbp,rsp
  420f2a:	mov    DWORD PTR [rbp-0x14],edi
  420f2d:	mov    DWORD PTR [rbp-0x18],esi
  420f30:	mov    DWORD PTR [rbp-0x1c],edx
  420f33:	mov    edx,DWORD PTR [rbp-0x18]
  420f36:	mov    eax,DWORD PTR [rbp-0x1c]
  420f39:	add    eax,edx
  420f3b:	mov    DWORD PTR [rbp-0x4],eax
  420f3e:	mov    eax,DWORD PTR [rbp-0x4]
  420f41:	cmp    eax,DWORD PTR [rbp-0x18]
  420f44:	jbe    420f67 <flatcc_verify_error_string@@Base+0x2d4>
  420f46:	mov    eax,DWORD PTR [rbp-0x4]
  420f49:	lea    rdx,[rax+0x4]
  420f4d:	mov    eax,DWORD PTR [rbp-0x14]
  420f50:	cmp    rdx,rax
  420f53:	ja     420f67 <flatcc_verify_error_string@@Base+0x2d4>
  420f55:	mov    eax,DWORD PTR [rbp-0x4]
  420f58:	and    eax,0x3
  420f5b:	test   rax,rax
  420f5e:	jne    420f67 <flatcc_verify_error_string@@Base+0x2d4>
  420f60:	mov    eax,0x1
  420f65:	jmp    420f6c <flatcc_verify_error_string@@Base+0x2d9>
  420f67:	mov    eax,0x0
  420f6c:	pop    rbp
  420f6d:	ret    
  420f6e:	push   rbp
  420f6f:	mov    rbp,rsp
  420f72:	mov    DWORD PTR [rbp-0x14],edi
  420f75:	mov    DWORD PTR [rbp-0x18],esi
  420f78:	mov    DWORD PTR [rbp-0x1c],edx
  420f7b:	mov    eax,ecx
  420f7d:	mov    WORD PTR [rbp-0x20],ax
  420f81:	mov    edx,DWORD PTR [rbp-0x18]
  420f84:	mov    eax,DWORD PTR [rbp-0x1c]
  420f87:	add    eax,edx
  420f89:	mov    DWORD PTR [rbp-0x4],eax
  420f8c:	mov    eax,0x4
  420f91:	cmp    WORD PTR [rbp-0x20],0x4
  420f96:	cmovae ax,WORD PTR [rbp-0x20]
  420f9b:	mov    WORD PTR [rbp-0x20],ax
  420f9f:	mov    eax,DWORD PTR [rbp-0x4]
  420fa2:	cmp    eax,DWORD PTR [rbp-0x18]
  420fa5:	jbe    420fd8 <flatcc_verify_error_string@@Base+0x345>
  420fa7:	mov    eax,DWORD PTR [rbp-0x4]
  420faa:	lea    rdx,[rax+0x4]
  420fae:	mov    eax,DWORD PTR [rbp-0x14]
  420fb1:	cmp    rdx,rax
  420fb4:	ja     420fd8 <flatcc_verify_error_string@@Base+0x345>
  420fb6:	mov    eax,DWORD PTR [rbp-0x4]
  420fb9:	lea    rdx,[rax+0x4]
  420fbd:	movzx  eax,WORD PTR [rbp-0x20]
  420fc1:	sub    eax,0x1
  420fc4:	or     eax,0x3
  420fc7:	cdqe   
  420fc9:	and    rax,rdx
  420fcc:	test   rax,rax
  420fcf:	jne    420fd8 <flatcc_verify_error_string@@Base+0x345>
  420fd1:	mov    eax,0x1
  420fd6:	jmp    420fdd <flatcc_verify_error_string@@Base+0x34a>
  420fd8:	mov    eax,0x0
  420fdd:	pop    rbp
  420fde:	ret    
  420fdf:	push   rbp
  420fe0:	mov    rbp,rsp
  420fe3:	mov    DWORD PTR [rbp-0x14],edi
  420fe6:	mov    DWORD PTR [rbp-0x18],esi
  420fe9:	mov    DWORD PTR [rbp-0x1c],edx
  420fec:	mov    DWORD PTR [rbp-0x20],ecx
  420fef:	mov    eax,r8d
  420ff2:	mov    WORD PTR [rbp-0x24],ax
  420ff6:	cmp    DWORD PTR [rbp-0x1c],0x0
  420ffa:	je     421009 <flatcc_verify_error_string@@Base+0x376>
  420ffc:	mov    edx,DWORD PTR [rbp-0x18]
  420fff:	mov    eax,DWORD PTR [rbp-0x1c]
  421002:	add    eax,edx
  421004:	cmp    eax,DWORD PTR [rbp-0x14]
  421007:	jbe    421010 <flatcc_verify_error_string@@Base+0x37d>
  421009:	mov    eax,0x12
  42100e:	jmp    42107f <flatcc_verify_error_string@@Base+0x3ec>
  421010:	mov    eax,DWORD PTR [rbp-0x1c]
  421013:	add    DWORD PTR [rbp-0x18],eax
  421016:	mov    edx,DWORD PTR [rbp-0x18]
  421019:	mov    eax,DWORD PTR [rbp-0x20]
  42101c:	add    eax,edx
  42101e:	cmp    eax,DWORD PTR [rbp-0x18]
  421021:	setae  al
  421024:	movzx  eax,al
  421027:	mov    DWORD PTR [rbp-0xc],eax
  42102a:	cmp    DWORD PTR [rbp-0xc],0x0
  42102e:	jne    421037 <flatcc_verify_error_string@@Base+0x3a4>
  421030:	mov    eax,0xa
  421035:	jmp    42107f <flatcc_verify_error_string@@Base+0x3ec>
  421037:	mov    edx,DWORD PTR [rbp-0x18]
  42103a:	mov    eax,DWORD PTR [rbp-0x20]
  42103d:	add    eax,edx
  42103f:	cmp    eax,DWORD PTR [rbp-0x14]
  421042:	setbe  al
  421045:	movzx  eax,al
  421048:	mov    DWORD PTR [rbp-0x8],eax
  42104b:	cmp    DWORD PTR [rbp-0x8],0x0
  42104f:	jne    421058 <flatcc_verify_error_string@@Base+0x3c5>
  421051:	mov    eax,0x9
  421056:	jmp    42107f <flatcc_verify_error_string@@Base+0x3ec>
  421058:	movzx  eax,WORD PTR [rbp-0x24]
  42105c:	sub    eax,0x1
  42105f:	and    eax,DWORD PTR [rbp-0x18]
  421062:	test   eax,eax
  421064:	sete   al
  421067:	movzx  eax,al
  42106a:	mov    DWORD PTR [rbp-0x4],eax
  42106d:	cmp    DWORD PTR [rbp-0x4],0x0
  421071:	jne    42107a <flatcc_verify_error_string@@Base+0x3e7>
  421073:	mov    eax,0xb
  421078:	jmp    42107f <flatcc_verify_error_string@@Base+0x3ec>
  42107a:	mov    eax,0x0
  42107f:	pop    rbp
  421080:	ret    
  421081:	push   rbp
  421082:	mov    rbp,rsp
  421085:	sub    rsp,0x20
  421089:	mov    QWORD PTR [rbp-0x18],rdi
  42108d:	mov    eax,esi
  42108f:	mov    WORD PTR [rbp-0x1c],ax
  421093:	movzx  eax,WORD PTR [rbp-0x1c]
  421097:	add    eax,0x2
  42109a:	cdqe   
  42109c:	add    eax,eax
  42109e:	mov    WORD PTR [rbp-0x2],ax
  4210a2:	mov    rax,QWORD PTR [rbp-0x18]
  4210a6:	movzx  eax,WORD PTR [rax+0x1e]
  4210aa:	cmp    ax,WORD PTR [rbp-0x2]
  4210ae:	ja     4210b7 <flatcc_verify_error_string@@Base+0x424>
  4210b0:	mov    eax,0x0
  4210b5:	jmp    4210d0 <flatcc_verify_error_string@@Base+0x43d>
  4210b7:	movzx  edx,WORD PTR [rbp-0x2]
  4210bb:	mov    rax,QWORD PTR [rbp-0x18]
  4210bf:	mov    rax,QWORD PTR [rax+0x10]
  4210c3:	mov    esi,edx
  4210c5:	mov    rdi,rax
  4210c8:	call   420f03 <flatcc_verify_error_string@@Base+0x270>
  4210cd:	movzx  eax,ax
  4210d0:	leave  
  4210d1:	ret    
  4210d2:	push   rbp
  4210d3:	mov    rbp,rsp
  4210d6:	sub    rsp,0x20
  4210da:	mov    QWORD PTR [rbp-0x18],rdi
  4210de:	mov    eax,esi
  4210e0:	mov    WORD PTR [rbp-0x1c],ax
  4210e4:	movzx  edx,WORD PTR [rbp-0x1c]
  4210e8:	mov    rax,QWORD PTR [rbp-0x18]
  4210ec:	mov    esi,edx
  4210ee:	mov    rdi,rax
  4210f1:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  4210f6:	mov    WORD PTR [rbp-0x2],ax
  4210fa:	cmp    WORD PTR [rbp-0x2],0x0
  4210ff:	je     42111d <flatcc_verify_error_string@@Base+0x48a>
  421101:	mov    rax,QWORD PTR [rbp-0x18]
  421105:	mov    rdx,QWORD PTR [rax]
  421108:	mov    rax,QWORD PTR [rbp-0x18]
  42110c:	mov    eax,DWORD PTR [rax+0x18]
  42110f:	mov    ecx,eax
  421111:	movzx  eax,WORD PTR [rbp-0x2]
  421115:	add    rax,rcx
  421118:	add    rax,rdx
  42111b:	jmp    421122 <flatcc_verify_error_string@@Base+0x48f>
  42111d:	mov    eax,0x0
  421122:	leave  
  421123:	ret    
  421124:	push   rbp
  421125:	mov    rbp,rsp
  421128:	sub    rsp,0x38
  42112c:	mov    QWORD PTR [rbp-0x28],rdi
  421130:	mov    eax,esi
  421132:	mov    DWORD PTR [rbp-0x30],edx
  421135:	mov    DWORD PTR [rbp-0x34],ecx
  421138:	mov    edx,r8d
  42113b:	mov    WORD PTR [rbp-0x2c],ax
  42113f:	mov    WORD PTR [rbp-0x38],dx
  421143:	mov    rax,QWORD PTR [rbp-0x28]
  421147:	mov    rax,QWORD PTR [rax]
  42114a:	mov    DWORD PTR [rbp-0x1c],eax
  42114d:	movzx  edx,WORD PTR [rbp-0x2c]
  421151:	mov    rax,QWORD PTR [rbp-0x28]
  421155:	mov    esi,edx
  421157:	mov    rdi,rax
  42115a:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  42115f:	mov    WORD PTR [rbp-0x1e],ax
  421163:	cmp    WORD PTR [rbp-0x1e],0x0
  421168:	jne    421191 <flatcc_verify_error_string@@Base+0x4fe>
  42116a:	cmp    DWORD PTR [rbp-0x30],0x0
  42116e:	sete   al
  421171:	movzx  eax,al
  421174:	mov    DWORD PTR [rbp-0x18],eax
  421177:	cmp    DWORD PTR [rbp-0x18],0x0
  42117b:	jne    421187 <flatcc_verify_error_string@@Base+0x4f4>
  42117d:	mov    eax,0x4
  421182:	jmp    421211 <flatcc_verify_error_string@@Base+0x57e>
  421187:	mov    eax,0x0
  42118c:	jmp    421211 <flatcc_verify_error_string@@Base+0x57e>
  421191:	movzx  eax,WORD PTR [rbp-0x1e]
  421195:	mov    DWORD PTR [rbp-0x14],eax
  421198:	mov    edx,DWORD PTR [rbp-0x14]
  42119b:	mov    eax,DWORD PTR [rbp-0x34]
  42119e:	add    eax,edx
  4211a0:	mov    DWORD PTR [rbp-0x10],eax
  4211a3:	mov    rax,QWORD PTR [rbp-0x28]
  4211a7:	movzx  eax,WORD PTR [rax+0x1c]
  4211ab:	movzx  eax,ax
  4211ae:	cmp    eax,DWORD PTR [rbp-0x10]
  4211b1:	setae  al
  4211b4:	movzx  eax,al
  4211b7:	mov    DWORD PTR [rbp-0xc],eax
  4211ba:	cmp    DWORD PTR [rbp-0xc],0x0
  4211be:	jne    4211c7 <flatcc_verify_error_string@@Base+0x534>
  4211c0:	mov    eax,0xd
  4211c5:	jmp    421211 <flatcc_verify_error_string@@Base+0x57e>
  4211c7:	mov    DWORD PTR [rbp-0x8],0x1
  4211ce:	cmp    DWORD PTR [rbp-0x8],0x0
  4211d2:	jne    4211db <flatcc_verify_error_string@@Base+0x548>
  4211d4:	mov    eax,0xe
  4211d9:	jmp    421211 <flatcc_verify_error_string@@Base+0x57e>
  4211db:	mov    rax,QWORD PTR [rbp-0x28]
  4211df:	mov    edx,DWORD PTR [rax+0x18]
  4211e2:	mov    eax,DWORD PTR [rbp-0x1c]
  4211e5:	add    eax,edx
  4211e7:	add    DWORD PTR [rbp-0x14],eax
  4211ea:	movzx  eax,WORD PTR [rbp-0x38]
  4211ee:	sub    eax,0x1
  4211f1:	and    eax,DWORD PTR [rbp-0x14]
  4211f4:	test   eax,eax
  4211f6:	sete   al
  4211f9:	movzx  eax,al
  4211fc:	mov    DWORD PTR [rbp-0x4],eax
  4211ff:	cmp    DWORD PTR [rbp-0x4],0x0
  421203:	jne    42120c <flatcc_verify_error_string@@Base+0x579>
  421205:	mov    eax,0xc
  42120a:	jmp    421211 <flatcc_verify_error_string@@Base+0x57e>
  42120c:	mov    eax,0x0
  421211:	leave  
  421212:	ret    
  421213:	push   rbp
  421214:	mov    rbp,rsp
  421217:	sub    rsp,0x38
  42121b:	mov    QWORD PTR [rbp-0x28],rdi
  42121f:	mov    eax,esi
  421221:	mov    DWORD PTR [rbp-0x30],edx
  421224:	mov    QWORD PTR [rbp-0x38],rcx
  421228:	mov    WORD PTR [rbp-0x2c],ax
  42122c:	movzx  edx,WORD PTR [rbp-0x2c]
  421230:	mov    rax,QWORD PTR [rbp-0x28]
  421234:	mov    esi,edx
  421236:	mov    rdi,rax
  421239:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  42123e:	mov    WORD PTR [rbp-0x16],ax
  421242:	cmp    WORD PTR [rbp-0x16],0x0
  421247:	jne    42126a <flatcc_verify_error_string@@Base+0x5d7>
  421249:	mov    rax,QWORD PTR [rbp-0x38]
  42124d:	mov    DWORD PTR [rax],0x0
  421253:	cmp    DWORD PTR [rbp-0x30],0x0
  421257:	je     421263 <flatcc_verify_error_string@@Base+0x5d0>
  421259:	mov    eax,0x4
  42125e:	jmp    4212e9 <flatcc_verify_error_string@@Base+0x656>
  421263:	mov    eax,0x0
  421268:	jmp    4212e9 <flatcc_verify_error_string@@Base+0x656>
  42126a:	movzx  eax,WORD PTR [rbp-0x16]
  42126e:	mov    DWORD PTR [rbp-0x14],eax
  421271:	mov    eax,DWORD PTR [rbp-0x14]
  421274:	add    eax,0x4
  421277:	mov    DWORD PTR [rbp-0x10],eax
  42127a:	mov    rax,QWORD PTR [rbp-0x28]
  42127e:	movzx  eax,WORD PTR [rax+0x1c]
  421282:	movzx  eax,ax
  421285:	cmp    eax,DWORD PTR [rbp-0x10]
  421288:	setae  al
  42128b:	movzx  eax,al
  42128e:	mov    DWORD PTR [rbp-0xc],eax
  421291:	cmp    DWORD PTR [rbp-0xc],0x0
  421295:	jne    42129e <flatcc_verify_error_string@@Base+0x60b>
  421297:	mov    eax,0xd
  42129c:	jmp    4212e9 <flatcc_verify_error_string@@Base+0x656>
  42129e:	mov    DWORD PTR [rbp-0x8],0x1
  4212a5:	cmp    DWORD PTR [rbp-0x8],0x0
  4212a9:	jne    4212b2 <flatcc_verify_error_string@@Base+0x61f>
  4212ab:	mov    eax,0xe
  4212b0:	jmp    4212e9 <flatcc_verify_error_string@@Base+0x656>
  4212b2:	mov    rax,QWORD PTR [rbp-0x28]
  4212b6:	mov    eax,DWORD PTR [rax+0x18]
  4212b9:	add    DWORD PTR [rbp-0x14],eax
  4212bc:	mov    eax,DWORD PTR [rbp-0x14]
  4212bf:	and    eax,0x3
  4212c2:	test   rax,rax
  4212c5:	sete   al
  4212c8:	movzx  eax,al
  4212cb:	mov    DWORD PTR [rbp-0x4],eax
  4212ce:	cmp    DWORD PTR [rbp-0x4],0x0
  4212d2:	jne    4212db <flatcc_verify_error_string@@Base+0x648>
  4212d4:	mov    eax,0xc
  4212d9:	jmp    4212e9 <flatcc_verify_error_string@@Base+0x656>
  4212db:	mov    rax,QWORD PTR [rbp-0x38]
  4212df:	mov    edx,DWORD PTR [rbp-0x14]
  4212e2:	mov    DWORD PTR [rax],edx
  4212e4:	mov    eax,0x0
  4212e9:	leave  
  4212ea:	ret    
  4212eb:	push   rbp
  4212ec:	mov    rbp,rsp
  4212ef:	sub    rsp,0x28
  4212f3:	mov    QWORD PTR [rbp-0x18],rdi
  4212f7:	mov    DWORD PTR [rbp-0x1c],esi
  4212fa:	mov    DWORD PTR [rbp-0x20],edx
  4212fd:	mov    DWORD PTR [rbp-0x24],ecx
  421300:	mov    edx,DWORD PTR [rbp-0x24]
  421303:	mov    ecx,DWORD PTR [rbp-0x20]
  421306:	mov    eax,DWORD PTR [rbp-0x1c]
  421309:	mov    esi,ecx
  42130b:	mov    edi,eax
  42130d:	call   420f26 <flatcc_verify_error_string@@Base+0x293>
  421312:	mov    DWORD PTR [rbp-0x10],eax
  421315:	cmp    DWORD PTR [rbp-0x10],0x0
  421319:	jne    421322 <flatcc_verify_error_string@@Base+0x68f>
  42131b:	mov    eax,0x11
  421320:	jmp    421394 <flatcc_verify_error_string@@Base+0x701>
  421322:	mov    eax,DWORD PTR [rbp-0x24]
  421325:	add    DWORD PTR [rbp-0x20],eax
  421328:	mov    edx,DWORD PTR [rbp-0x20]
  42132b:	mov    rax,QWORD PTR [rbp-0x18]
  42132f:	mov    esi,edx
  421331:	mov    rdi,rax
  421334:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421339:	mov    DWORD PTR [rbp-0xc],eax
  42133c:	add    DWORD PTR [rbp-0x20],0x4
  421340:	mov    eax,DWORD PTR [rbp-0x1c]
  421343:	sub    eax,DWORD PTR [rbp-0x20]
  421346:	mov    edx,DWORD PTR [rbp-0xc]
  421349:	add    edx,0x1
  42134c:	cmp    eax,edx
  42134e:	setae  al
  421351:	movzx  eax,al
  421354:	mov    DWORD PTR [rbp-0x8],eax
  421357:	cmp    DWORD PTR [rbp-0x8],0x0
  42135b:	jne    421364 <flatcc_verify_error_string@@Base+0x6d1>
  42135d:	mov    eax,0x8
  421362:	jmp    421394 <flatcc_verify_error_string@@Base+0x701>
  421364:	mov    edx,DWORD PTR [rbp-0x20]
  421367:	mov    eax,DWORD PTR [rbp-0xc]
  42136a:	add    rdx,rax
  42136d:	mov    rax,QWORD PTR [rbp-0x18]
  421371:	add    rax,rdx
  421374:	movzx  eax,BYTE PTR [rax]
  421377:	test   al,al
  421379:	sete   al
  42137c:	movzx  eax,al
  42137f:	mov    DWORD PTR [rbp-0x4],eax
  421382:	cmp    DWORD PTR [rbp-0x4],0x0
  421386:	jne    42138f <flatcc_verify_error_string@@Base+0x6fc>
  421388:	mov    eax,0x7
  42138d:	jmp    421394 <flatcc_verify_error_string@@Base+0x701>
  42138f:	mov    eax,0x0
  421394:	leave  
  421395:	ret    
  421396:	push   rbp
  421397:	mov    rbp,rsp
  42139a:	sub    rsp,0x30
  42139e:	mov    QWORD PTR [rbp-0x18],rdi
  4213a2:	mov    DWORD PTR [rbp-0x1c],esi
  4213a5:	mov    DWORD PTR [rbp-0x20],edx
  4213a8:	mov    DWORD PTR [rbp-0x24],ecx
  4213ab:	mov    DWORD PTR [rbp-0x28],r8d
  4213af:	mov    eax,r9d
  4213b2:	mov    WORD PTR [rbp-0x2c],ax
  4213b6:	movzx  ecx,WORD PTR [rbp-0x2c]
  4213ba:	mov    edx,DWORD PTR [rbp-0x24]
  4213bd:	mov    esi,DWORD PTR [rbp-0x20]
  4213c0:	mov    eax,DWORD PTR [rbp-0x1c]
  4213c3:	mov    edi,eax
  4213c5:	call   420f6e <flatcc_verify_error_string@@Base+0x2db>
  4213ca:	mov    DWORD PTR [rbp-0x10],eax
  4213cd:	cmp    DWORD PTR [rbp-0x10],0x0
  4213d1:	jne    4213da <flatcc_verify_error_string@@Base+0x747>
  4213d3:	mov    eax,0x10
  4213d8:	jmp    421440 <flatcc_verify_error_string@@Base+0x7ad>
  4213da:	mov    eax,DWORD PTR [rbp-0x24]
  4213dd:	add    DWORD PTR [rbp-0x20],eax
  4213e0:	mov    edx,DWORD PTR [rbp-0x20]
  4213e3:	mov    rax,QWORD PTR [rbp-0x18]
  4213e7:	mov    esi,edx
  4213e9:	mov    rdi,rax
  4213ec:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4213f1:	mov    DWORD PTR [rbp-0xc],eax
  4213f4:	add    DWORD PTR [rbp-0x20],0x4
  4213f8:	mov    eax,DWORD PTR [rbp-0xc]
  4213fb:	cmp    eax,DWORD PTR [rbp+0x10]
  4213fe:	setbe  al
  421401:	movzx  eax,al
  421404:	mov    DWORD PTR [rbp-0x8],eax
  421407:	cmp    DWORD PTR [rbp-0x8],0x0
  42140b:	jne    421414 <flatcc_verify_error_string@@Base+0x781>
  42140d:	mov    eax,0x19
  421412:	jmp    421440 <flatcc_verify_error_string@@Base+0x7ad>
  421414:	mov    eax,DWORD PTR [rbp-0x1c]
  421417:	sub    eax,DWORD PTR [rbp-0x20]
  42141a:	mov    edx,eax
  42141c:	mov    eax,DWORD PTR [rbp-0xc]
  42141f:	imul   eax,DWORD PTR [rbp-0x28]
  421423:	cmp    edx,eax
  421425:	setae  al
  421428:	movzx  eax,al
  42142b:	mov    DWORD PTR [rbp-0x4],eax
  42142e:	cmp    DWORD PTR [rbp-0x4],0x0
  421432:	jne    42143b <flatcc_verify_error_string@@Base+0x7a8>
  421434:	mov    eax,0x1a
  421439:	jmp    421440 <flatcc_verify_error_string@@Base+0x7ad>
  42143b:	mov    eax,0x0
  421440:	leave  
  421441:	ret    
  421442:	push   rbp
  421443:	mov    rbp,rsp
  421446:	sub    rsp,0x28
  42144a:	mov    QWORD PTR [rbp-0x18],rdi
  42144e:	mov    DWORD PTR [rbp-0x1c],esi
  421451:	mov    DWORD PTR [rbp-0x20],edx
  421454:	mov    DWORD PTR [rbp-0x24],ecx
  421457:	mov    ecx,DWORD PTR [rbp-0x24]
  42145a:	mov    edx,DWORD PTR [rbp-0x20]
  42145d:	mov    esi,DWORD PTR [rbp-0x1c]
  421460:	mov    rax,QWORD PTR [rbp-0x18]
  421464:	push   0x3fffffff
  421469:	mov    r9d,0x4
  42146f:	mov    r8d,0x4
  421475:	mov    rdi,rax
  421478:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  42147d:	add    rsp,0x8
  421481:	test   eax,eax
  421483:	je     4214b4 <flatcc_verify_error_string@@Base+0x821>
  421485:	mov    ecx,DWORD PTR [rbp-0x24]
  421488:	mov    edx,DWORD PTR [rbp-0x20]
  42148b:	mov    esi,DWORD PTR [rbp-0x1c]
  42148e:	mov    rax,QWORD PTR [rbp-0x18]
  421492:	push   0x3fffffff
  421497:	mov    r9d,0x4
  42149d:	mov    r8d,0x4
  4214a3:	mov    rdi,rax
  4214a6:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  4214ab:	add    rsp,0x8
  4214af:	jmp    421540 <flatcc_verify_error_string@@Base+0x8ad>
  4214b4:	mov    eax,DWORD PTR [rbp-0x24]
  4214b7:	add    DWORD PTR [rbp-0x20],eax
  4214ba:	mov    edx,DWORD PTR [rbp-0x20]
  4214bd:	mov    rax,QWORD PTR [rbp-0x18]
  4214c1:	mov    esi,edx
  4214c3:	mov    rdi,rax
  4214c6:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4214cb:	mov    DWORD PTR [rbp-0x4],eax
  4214ce:	add    DWORD PTR [rbp-0x20],0x4
  4214d2:	mov    DWORD PTR [rbp-0x8],0x0
  4214d9:	jmp    421533 <flatcc_verify_error_string@@Base+0x8a0>
  4214db:	mov    edx,DWORD PTR [rbp-0x20]
  4214de:	mov    rax,QWORD PTR [rbp-0x18]
  4214e2:	mov    esi,edx
  4214e4:	mov    rdi,rax
  4214e7:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4214ec:	mov    ecx,eax
  4214ee:	mov    edx,DWORD PTR [rbp-0x20]
  4214f1:	mov    esi,DWORD PTR [rbp-0x1c]
  4214f4:	mov    rax,QWORD PTR [rbp-0x18]
  4214f8:	mov    rdi,rax
  4214fb:	call   4212eb <flatcc_verify_error_string@@Base+0x658>
  421500:	test   eax,eax
  421502:	je     42152b <flatcc_verify_error_string@@Base+0x898>
  421504:	mov    edx,DWORD PTR [rbp-0x20]
  421507:	mov    rax,QWORD PTR [rbp-0x18]
  42150b:	mov    esi,edx
  42150d:	mov    rdi,rax
  421510:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421515:	mov    ecx,eax
  421517:	mov    edx,DWORD PTR [rbp-0x20]
  42151a:	mov    esi,DWORD PTR [rbp-0x1c]
  42151d:	mov    rax,QWORD PTR [rbp-0x18]
  421521:	mov    rdi,rax
  421524:	call   4212eb <flatcc_verify_error_string@@Base+0x658>
  421529:	jmp    421540 <flatcc_verify_error_string@@Base+0x8ad>
  42152b:	add    DWORD PTR [rbp-0x8],0x1
  42152f:	add    DWORD PTR [rbp-0x20],0x4
  421533:	mov    eax,DWORD PTR [rbp-0x8]
  421536:	cmp    eax,DWORD PTR [rbp-0x4]
  421539:	jb     4214db <flatcc_verify_error_string@@Base+0x848>
  42153b:	mov    eax,0x0
  421540:	leave  
  421541:	ret    
  421542:	push   rbp
  421543:	mov    rbp,rsp
  421546:	push   rbx
  421547:	sub    rsp,0x88
  42154e:	mov    QWORD PTR [rbp-0x78],rdi
  421552:	mov    DWORD PTR [rbp-0x7c],esi
  421555:	mov    DWORD PTR [rbp-0x80],edx
  421558:	mov    DWORD PTR [rbp-0x84],ecx
  42155e:	mov    DWORD PTR [rbp-0x88],r8d
  421565:	mov    QWORD PTR [rbp-0x90],r9
  42156c:	mov    rax,QWORD PTR fs:0x28
  421575:	mov    QWORD PTR [rbp-0x18],rax
  421579:	xor    eax,eax
  42157b:	mov    eax,DWORD PTR [rbp-0x88]
  421581:	sub    eax,0x1
  421584:	mov    DWORD PTR [rbp-0x34],eax
  421587:	mov    eax,DWORD PTR [rbp-0x34]
  42158a:	mov    DWORD PTR [rbp-0x68],eax
  42158d:	cmp    DWORD PTR [rbp-0x68],0x0
  421591:	jne    42159d <flatcc_verify_error_string@@Base+0x90a>
  421593:	mov    eax,0x3
  421598:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  42159d:	mov    edx,DWORD PTR [rbp-0x84]
  4215a3:	mov    ecx,DWORD PTR [rbp-0x80]
  4215a6:	mov    eax,DWORD PTR [rbp-0x7c]
  4215a9:	mov    esi,ecx
  4215ab:	mov    edi,eax
  4215ad:	call   420f26 <flatcc_verify_error_string@@Base+0x293>
  4215b2:	mov    DWORD PTR [rbp-0x64],eax
  4215b5:	cmp    DWORD PTR [rbp-0x64],0x0
  4215b9:	jne    4215c5 <flatcc_verify_error_string@@Base+0x932>
  4215bb:	mov    eax,0xf
  4215c0:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  4215c5:	mov    edx,DWORD PTR [rbp-0x80]
  4215c8:	mov    eax,DWORD PTR [rbp-0x84]
  4215ce:	add    eax,edx
  4215d0:	mov    DWORD PTR [rbp-0x28],eax
  4215d3:	mov    ebx,DWORD PTR [rbp-0x28]
  4215d6:	mov    edx,DWORD PTR [rbp-0x28]
  4215d9:	mov    rax,QWORD PTR [rbp-0x78]
  4215dd:	mov    esi,edx
  4215df:	mov    rdi,rax
  4215e2:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4215e7:	sub    ebx,eax
  4215e9:	mov    eax,ebx
  4215eb:	mov    DWORD PTR [rbp-0x60],eax
  4215ee:	mov    eax,DWORD PTR [rbp-0x60]
  4215f1:	test   eax,eax
  4215f3:	js     421607 <flatcc_verify_error_string@@Base+0x974>
  4215f5:	mov    eax,DWORD PTR [rbp-0x60]
  4215f8:	and    eax,0x1
  4215fb:	test   rax,rax
  4215fe:	jne    421607 <flatcc_verify_error_string@@Base+0x974>
  421600:	mov    eax,0x1
  421605:	jmp    42160c <flatcc_verify_error_string@@Base+0x979>
  421607:	mov    eax,0x0
  42160c:	mov    DWORD PTR [rbp-0x5c],eax
  42160f:	cmp    DWORD PTR [rbp-0x5c],0x0
  421613:	jne    42161f <flatcc_verify_error_string@@Base+0x98c>
  421615:	mov    eax,0x1d
  42161a:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  42161f:	mov    eax,DWORD PTR [rbp-0x60]
  421622:	lea    rdx,[rax+0x2]
  421626:	mov    eax,DWORD PTR [rbp-0x7c]
  421629:	cmp    rdx,rax
  42162c:	setbe  al
  42162f:	movzx  eax,al
  421632:	mov    DWORD PTR [rbp-0x58],eax
  421635:	cmp    DWORD PTR [rbp-0x58],0x0
  421639:	jne    421645 <flatcc_verify_error_string@@Base+0x9b2>
  42163b:	mov    eax,0x1b
  421640:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  421645:	mov    edx,DWORD PTR [rbp-0x60]
  421648:	mov    rax,QWORD PTR [rbp-0x78]
  42164c:	mov    esi,edx
  42164e:	mov    rdi,rax
  421651:	call   420f03 <flatcc_verify_error_string@@Base+0x270>
  421656:	mov    WORD PTR [rbp-0x22],ax
  42165a:	movzx  eax,WORD PTR [rbp-0x22]
  42165e:	movzx  edx,ax
  421661:	mov    eax,DWORD PTR [rbp-0x60]
  421664:	add    eax,edx
  421666:	mov    DWORD PTR [rbp-0x54],eax
  421669:	mov    eax,DWORD PTR [rbp-0x54]
  42166c:	cmp    eax,DWORD PTR [rbp-0x7c]
  42166f:	ja     421687 <flatcc_verify_error_string@@Base+0x9f4>
  421671:	movzx  eax,WORD PTR [rbp-0x22]
  421675:	movzx  eax,ax
  421678:	and    eax,0x1
  42167b:	test   rax,rax
  42167e:	jne    421687 <flatcc_verify_error_string@@Base+0x9f4>
  421680:	mov    eax,0x1
  421685:	jmp    42168c <flatcc_verify_error_string@@Base+0x9f9>
  421687:	mov    eax,0x0
  42168c:	mov    DWORD PTR [rbp-0x50],eax
  42168f:	cmp    DWORD PTR [rbp-0x50],0x0
  421693:	jne    42169f <flatcc_verify_error_string@@Base+0xa0c>
  421695:	mov    eax,0x1e
  42169a:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  42169f:	mov    DWORD PTR [rbp-0x4c],0x1
  4216a6:	cmp    DWORD PTR [rbp-0x4c],0x0
  4216aa:	jne    4216b6 <flatcc_verify_error_string@@Base+0xa23>
  4216ac:	mov    eax,0x1f
  4216b1:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  4216b6:	movzx  eax,WORD PTR [rbp-0x22]
  4216ba:	cmp    ax,0x3
  4216be:	seta   al
  4216c1:	movzx  eax,al
  4216c4:	mov    DWORD PTR [rbp-0x48],eax
  4216c7:	cmp    DWORD PTR [rbp-0x48],0x0
  4216cb:	jne    4216d4 <flatcc_verify_error_string@@Base+0xa41>
  4216cd:	mov    eax,0x1c
  4216d2:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  4216d4:	mov    eax,DWORD PTR [rbp-0x60]
  4216d7:	lea    edx,[rax+0x2]
  4216da:	mov    rax,QWORD PTR [rbp-0x78]
  4216de:	mov    esi,edx
  4216e0:	mov    rdi,rax
  4216e3:	call   420f03 <flatcc_verify_error_string@@Base+0x270>
  4216e8:	mov    WORD PTR [rbp-0x24],ax
  4216ec:	mov    eax,DWORD PTR [rbp-0x28]
  4216ef:	mov    edx,DWORD PTR [rbp-0x7c]
  4216f2:	sub    edx,eax
  4216f4:	movzx  eax,WORD PTR [rbp-0x24]
  4216f8:	movzx  eax,ax
  4216fb:	cmp    edx,eax
  4216fd:	setae  al
  421700:	movzx  eax,al
  421703:	mov    DWORD PTR [rbp-0x44],eax
  421706:	cmp    DWORD PTR [rbp-0x44],0x0
  42170a:	jne    421713 <flatcc_verify_error_string@@Base+0xa80>
  42170c:	mov    eax,0x14
  421711:	jmp    42173f <flatcc_verify_error_string@@Base+0xaac>
  421713:	mov    edx,DWORD PTR [rbp-0x60]
  421716:	mov    rax,QWORD PTR [rbp-0x78]
  42171a:	add    rax,rdx
  42171d:	mov    QWORD PTR [rbp-0x30],rax
  421721:	mov    rax,QWORD PTR [rbp-0x78]
  421725:	mov    QWORD PTR [rbp-0x40],rax
  421729:	mov    eax,DWORD PTR [rbp-0x7c]
  42172c:	mov    DWORD PTR [rbp-0x38],eax
  42172f:	lea    rdx,[rbp-0x40]
  421733:	mov    rax,QWORD PTR [rbp-0x90]
  42173a:	mov    rdi,rdx
  42173d:	call   rax
  42173f:	mov    rcx,QWORD PTR [rbp-0x18]
  421743:	xor    rcx,QWORD PTR fs:0x28
  42174c:	je     421753 <flatcc_verify_error_string@@Base+0xac0>
  42174e:	call   405070 <__stack_chk_fail@plt>
  421753:	add    rsp,0x88
  42175a:	pop    rbx
  42175b:	pop    rbp
  42175c:	ret    
  42175d:	push   rbp
  42175e:	mov    rbp,rsp
  421761:	sub    rsp,0x30
  421765:	mov    QWORD PTR [rbp-0x18],rdi
  421769:	mov    DWORD PTR [rbp-0x1c],esi
  42176c:	mov    DWORD PTR [rbp-0x20],edx
  42176f:	mov    DWORD PTR [rbp-0x24],ecx
  421772:	mov    DWORD PTR [rbp-0x28],r8d
  421776:	mov    QWORD PTR [rbp-0x30],r9
  42177a:	mov    eax,DWORD PTR [rbp-0x28]
  42177d:	lea    edx,[rax-0x1]
  421780:	mov    DWORD PTR [rbp-0x28],edx
  421783:	test   eax,eax
  421785:	setg   al
  421788:	movzx  eax,al
  42178b:	mov    DWORD PTR [rbp-0x8],eax
  42178e:	cmp    DWORD PTR [rbp-0x8],0x0
  421792:	jne    42179e <flatcc_verify_error_string@@Base+0xb0b>
  421794:	mov    eax,0x3
  421799:	jmp    4218ad <flatcc_verify_error_string@@Base+0xc1a>
  42179e:	mov    ecx,DWORD PTR [rbp-0x24]
  4217a1:	mov    edx,DWORD PTR [rbp-0x20]
  4217a4:	mov    esi,DWORD PTR [rbp-0x1c]
  4217a7:	mov    rax,QWORD PTR [rbp-0x18]
  4217ab:	push   0x3fffffff
  4217b0:	mov    r9d,0x4
  4217b6:	mov    r8d,0x4
  4217bc:	mov    rdi,rax
  4217bf:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  4217c4:	add    rsp,0x8
  4217c8:	test   eax,eax
  4217ca:	je     4217fb <flatcc_verify_error_string@@Base+0xb68>
  4217cc:	mov    ecx,DWORD PTR [rbp-0x24]
  4217cf:	mov    edx,DWORD PTR [rbp-0x20]
  4217d2:	mov    esi,DWORD PTR [rbp-0x1c]
  4217d5:	mov    rax,QWORD PTR [rbp-0x18]
  4217d9:	push   0x3fffffff
  4217de:	mov    r9d,0x4
  4217e4:	mov    r8d,0x4
  4217ea:	mov    rdi,rax
  4217ed:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  4217f2:	add    rsp,0x8
  4217f6:	jmp    4218ad <flatcc_verify_error_string@@Base+0xc1a>
  4217fb:	mov    eax,DWORD PTR [rbp-0x24]
  4217fe:	add    DWORD PTR [rbp-0x20],eax
  421801:	mov    edx,DWORD PTR [rbp-0x20]
  421804:	mov    rax,QWORD PTR [rbp-0x18]
  421808:	mov    esi,edx
  42180a:	mov    rdi,rax
  42180d:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421812:	mov    DWORD PTR [rbp-0x4],eax
  421815:	add    DWORD PTR [rbp-0x20],0x4
  421819:	mov    DWORD PTR [rbp-0xc],0x0
  421820:	jmp    42189c <flatcc_verify_error_string@@Base+0xc09>
  421822:	mov    edx,DWORD PTR [rbp-0x20]
  421825:	mov    rax,QWORD PTR [rbp-0x18]
  421829:	mov    esi,edx
  42182b:	mov    rdi,rax
  42182e:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421833:	mov    r10d,eax
  421836:	mov    rdi,QWORD PTR [rbp-0x30]
  42183a:	mov    ecx,DWORD PTR [rbp-0x28]
  42183d:	mov    edx,DWORD PTR [rbp-0x20]
  421840:	mov    esi,DWORD PTR [rbp-0x1c]
  421843:	mov    rax,QWORD PTR [rbp-0x18]
  421847:	mov    r9,rdi
  42184a:	mov    r8d,ecx
  42184d:	mov    ecx,r10d
  421850:	mov    rdi,rax
  421853:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  421858:	test   eax,eax
  42185a:	je     421894 <flatcc_verify_error_string@@Base+0xc01>
  42185c:	mov    edx,DWORD PTR [rbp-0x20]
  42185f:	mov    rax,QWORD PTR [rbp-0x18]
  421863:	mov    esi,edx
  421865:	mov    rdi,rax
  421868:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  42186d:	mov    r10d,eax
  421870:	mov    rdi,QWORD PTR [rbp-0x30]
  421874:	mov    ecx,DWORD PTR [rbp-0x28]
  421877:	mov    edx,DWORD PTR [rbp-0x20]
  42187a:	mov    esi,DWORD PTR [rbp-0x1c]
  42187d:	mov    rax,QWORD PTR [rbp-0x18]
  421881:	mov    r9,rdi
  421884:	mov    r8d,ecx
  421887:	mov    ecx,r10d
  42188a:	mov    rdi,rax
  42188d:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  421892:	jmp    4218ad <flatcc_verify_error_string@@Base+0xc1a>
  421894:	add    DWORD PTR [rbp-0xc],0x1
  421898:	add    DWORD PTR [rbp-0x20],0x4
  42189c:	mov    eax,DWORD PTR [rbp-0xc]
  42189f:	cmp    eax,DWORD PTR [rbp-0x4]
  4218a2:	jb     421822 <flatcc_verify_error_string@@Base+0xb8f>
  4218a8:	mov    eax,0x0
  4218ad:	leave  
  4218ae:	ret    
  4218af:	push   rbp
  4218b0:	mov    rbp,rsp
  4218b3:	add    rsp,0xffffffffffffff80
  4218b7:	mov    QWORD PTR [rbp-0x58],rdi
  4218bb:	mov    DWORD PTR [rbp-0x5c],esi
  4218be:	mov    DWORD PTR [rbp-0x60],edx
  4218c1:	mov    DWORD PTR [rbp-0x64],ecx
  4218c4:	mov    DWORD PTR [rbp-0x68],r8d
  4218c8:	mov    QWORD PTR [rbp-0x70],r9
  4218cc:	mov    rax,QWORD PTR [rbp+0x18]
  4218d0:	mov    QWORD PTR [rbp-0x78],rax
  4218d4:	mov    rax,QWORD PTR fs:0x28
  4218dd:	mov    QWORD PTR [rbp-0x8],rax
  4218e1:	xor    eax,eax
  4218e3:	mov    eax,DWORD PTR [rbp+0x10]
  4218e6:	lea    edx,[rax-0x1]
  4218e9:	mov    DWORD PTR [rbp+0x10],edx
  4218ec:	test   eax,eax
  4218ee:	setg   al
  4218f1:	movzx  eax,al
  4218f4:	mov    DWORD PTR [rbp-0x48],eax
  4218f7:	cmp    DWORD PTR [rbp-0x48],0x0
  4218fb:	jne    421907 <flatcc_verify_error_string@@Base+0xc74>
  4218fd:	mov    eax,0x3
  421902:	jmp    421a7a <flatcc_verify_error_string@@Base+0xde7>
  421907:	mov    ecx,DWORD PTR [rbp-0x64]
  42190a:	mov    edx,DWORD PTR [rbp-0x60]
  42190d:	mov    esi,DWORD PTR [rbp-0x5c]
  421910:	mov    rax,QWORD PTR [rbp-0x58]
  421914:	push   0x3fffffff
  421919:	mov    r9d,0x4
  42191f:	mov    r8d,0x4
  421925:	mov    rdi,rax
  421928:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  42192d:	add    rsp,0x8
  421931:	test   eax,eax
  421933:	je     421964 <flatcc_verify_error_string@@Base+0xcd1>
  421935:	mov    ecx,DWORD PTR [rbp-0x64]
  421938:	mov    edx,DWORD PTR [rbp-0x60]
  42193b:	mov    esi,DWORD PTR [rbp-0x5c]
  42193e:	mov    rax,QWORD PTR [rbp-0x58]
  421942:	push   0x3fffffff
  421947:	mov    r9d,0x4
  42194d:	mov    r8d,0x4
  421953:	mov    rdi,rax
  421956:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  42195b:	add    rsp,0x8
  42195f:	jmp    421a7a <flatcc_verify_error_string@@Base+0xde7>
  421964:	mov    eax,DWORD PTR [rbp-0x64]
  421967:	add    DWORD PTR [rbp-0x60],eax
  42196a:	mov    edx,DWORD PTR [rbp-0x60]
  42196d:	mov    rax,QWORD PTR [rbp-0x58]
  421971:	mov    esi,edx
  421973:	mov    rdi,rax
  421976:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  42197b:	mov    DWORD PTR [rbp-0x44],eax
  42197e:	mov    eax,DWORD PTR [rbp-0x44]
  421981:	cmp    eax,DWORD PTR [rbp-0x68]
  421984:	sete   al
  421987:	movzx  eax,al
  42198a:	mov    DWORD PTR [rbp-0x40],eax
  42198d:	cmp    DWORD PTR [rbp-0x40],0x0
  421991:	jne    42199d <flatcc_verify_error_string@@Base+0xd0a>
  421993:	mov    eax,0x22
  421998:	jmp    421a7a <flatcc_verify_error_string@@Base+0xde7>
  42199d:	add    DWORD PTR [rbp-0x60],0x4
  4219a1:	mov    rax,QWORD PTR [rbp-0x58]
  4219a5:	mov    QWORD PTR [rbp-0x30],rax
  4219a9:	mov    eax,DWORD PTR [rbp-0x5c]
  4219ac:	mov    DWORD PTR [rbp-0x28],eax
  4219af:	mov    eax,DWORD PTR [rbp+0x10]
  4219b2:	mov    DWORD PTR [rbp-0x24],eax
  4219b5:	mov    DWORD PTR [rbp-0x4c],0x0
  4219bc:	jmp    421a69 <flatcc_verify_error_string@@Base+0xdd6>
  4219c1:	mov    edx,DWORD PTR [rbp-0x60]
  4219c4:	mov    rax,QWORD PTR [rbp-0x58]
  4219c8:	mov    esi,edx
  4219ca:	mov    rdi,rax
  4219cd:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4219d2:	mov    DWORD PTR [rbp-0x3c],eax
  4219d5:	cmp    DWORD PTR [rbp-0x3c],0x0
  4219d9:	jne    421a00 <flatcc_verify_error_string@@Base+0xd6d>
  4219db:	mov    edx,DWORD PTR [rbp-0x4c]
  4219de:	mov    rax,QWORD PTR [rbp-0x70]
  4219e2:	add    rax,rdx
  4219e5:	movzx  eax,BYTE PTR [rax]
  4219e8:	test   al,al
  4219ea:	sete   al
  4219ed:	movzx  eax,al
  4219f0:	mov    DWORD PTR [rbp-0x34],eax
  4219f3:	cmp    DWORD PTR [rbp-0x34],0x0
  4219f7:	jne    421a61 <flatcc_verify_error_string@@Base+0xdce>
  4219f9:	mov    eax,0x20
  4219fe:	jmp    421a7a <flatcc_verify_error_string@@Base+0xde7>
  421a00:	mov    edx,DWORD PTR [rbp-0x4c]
  421a03:	mov    rax,QWORD PTR [rbp-0x70]
  421a07:	add    rax,rdx
  421a0a:	movzx  eax,BYTE PTR [rax]
  421a0d:	test   al,al
  421a0f:	setne  al
  421a12:	movzx  eax,al
  421a15:	mov    DWORD PTR [rbp-0x38],eax
  421a18:	cmp    DWORD PTR [rbp-0x38],0x0
  421a1c:	jne    421a25 <flatcc_verify_error_string@@Base+0xd92>
  421a1e:	mov    eax,0x21
  421a23:	jmp    421a7a <flatcc_verify_error_string@@Base+0xde7>
  421a25:	mov    edx,DWORD PTR [rbp-0x4c]
  421a28:	mov    rax,QWORD PTR [rbp-0x70]
  421a2c:	add    rax,rdx
  421a2f:	movzx  eax,BYTE PTR [rax]
  421a32:	mov    BYTE PTR [rbp-0x20],al
  421a35:	mov    eax,DWORD PTR [rbp-0x60]
  421a38:	mov    DWORD PTR [rbp-0x1c],eax
  421a3b:	mov    eax,DWORD PTR [rbp-0x3c]
  421a3e:	mov    DWORD PTR [rbp-0x18],eax
  421a41:	lea    rdx,[rbp-0x30]
  421a45:	mov    rax,QWORD PTR [rbp-0x78]
  421a49:	mov    rdi,rdx
  421a4c:	call   rax
  421a4e:	test   eax,eax
  421a50:	je     421a61 <flatcc_verify_error_string@@Base+0xdce>
  421a52:	lea    rdx,[rbp-0x30]
  421a56:	mov    rax,QWORD PTR [rbp-0x78]
  421a5a:	mov    rdi,rdx
  421a5d:	call   rax
  421a5f:	jmp    421a7a <flatcc_verify_error_string@@Base+0xde7>
  421a61:	add    DWORD PTR [rbp-0x4c],0x1
  421a65:	add    DWORD PTR [rbp-0x60],0x4
  421a69:	mov    eax,DWORD PTR [rbp-0x4c]
  421a6c:	cmp    eax,DWORD PTR [rbp-0x44]
  421a6f:	jb     4219c1 <flatcc_verify_error_string@@Base+0xd2e>
  421a75:	mov    eax,0x0
  421a7a:	mov    rcx,QWORD PTR [rbp-0x8]
  421a7e:	xor    rcx,QWORD PTR fs:0x28
  421a87:	je     421a8e <flatcc_verify_error_string@@Base+0xdfb>
  421a89:	call   405070 <__stack_chk_fail@plt>
  421a8e:	leave  
  421a8f:	ret    

0000000000421a90 <flatcc_verify_field@@Base>:
  421a90:	push   rbp
  421a91:	mov    rbp,rsp
  421a94:	sub    rsp,0x18
  421a98:	mov    QWORD PTR [rbp-0x8],rdi
  421a9c:	mov    QWORD PTR [rbp-0x18],rdx
  421aa0:	mov    eax,ecx
  421aa2:	mov    WORD PTR [rbp-0xc],si
  421aa6:	mov    WORD PTR [rbp-0x10],ax
  421aaa:	movzx  edx,WORD PTR [rbp-0x10]
  421aae:	mov    rax,QWORD PTR [rbp-0x18]
  421ab2:	mov    ecx,eax
  421ab4:	movzx  esi,WORD PTR [rbp-0xc]
  421ab8:	mov    rax,QWORD PTR [rbp-0x8]
  421abc:	mov    r8d,edx
  421abf:	mov    edx,0x0
  421ac4:	mov    rdi,rax
  421ac7:	call   421124 <flatcc_verify_error_string@@Base+0x491>
  421acc:	test   eax,eax
  421ace:	je     421af4 <flatcc_verify_field@@Base+0x64>
  421ad0:	movzx  edx,WORD PTR [rbp-0x10]
  421ad4:	mov    rax,QWORD PTR [rbp-0x18]
  421ad8:	mov    ecx,eax
  421ada:	movzx  esi,WORD PTR [rbp-0xc]
  421ade:	mov    rax,QWORD PTR [rbp-0x8]
  421ae2:	mov    r8d,edx
  421ae5:	mov    edx,0x0
  421aea:	mov    rdi,rax
  421aed:	call   421124 <flatcc_verify_error_string@@Base+0x491>
  421af2:	jmp    421af9 <flatcc_verify_field@@Base+0x69>
  421af4:	mov    eax,0x0
  421af9:	leave  
  421afa:	ret    

0000000000421afb <flatcc_verify_string_field@@Base>:
  421afb:	push   rbp
  421afc:	mov    rbp,rsp
  421aff:	sub    rsp,0x20
  421b03:	mov    QWORD PTR [rbp-0x18],rdi
  421b07:	mov    eax,esi
  421b09:	mov    DWORD PTR [rbp-0x20],edx
  421b0c:	mov    WORD PTR [rbp-0x1c],ax
  421b10:	mov    rax,QWORD PTR fs:0x28
  421b19:	mov    QWORD PTR [rbp-0x8],rax
  421b1d:	xor    eax,eax
  421b1f:	movzx  esi,WORD PTR [rbp-0x1c]
  421b23:	lea    rcx,[rbp-0x10]
  421b27:	mov    edx,DWORD PTR [rbp-0x20]
  421b2a:	mov    rax,QWORD PTR [rbp-0x18]
  421b2e:	mov    rdi,rax
  421b31:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  421b36:	mov    DWORD PTR [rbp-0xc],eax
  421b39:	cmp    DWORD PTR [rbp-0xc],0x0
  421b3d:	jne    421b46 <flatcc_verify_string_field@@Base+0x4b>
  421b3f:	mov    eax,DWORD PTR [rbp-0x10]
  421b42:	test   eax,eax
  421b44:	jne    421b4b <flatcc_verify_string_field@@Base+0x50>
  421b46:	mov    eax,DWORD PTR [rbp-0xc]
  421b49:	jmp    421b7a <flatcc_verify_string_field@@Base+0x7f>
  421b4b:	mov    edx,DWORD PTR [rbp-0x10]
  421b4e:	mov    rax,QWORD PTR [rbp-0x18]
  421b52:	mov    rax,QWORD PTR [rax]
  421b55:	mov    esi,edx
  421b57:	mov    rdi,rax
  421b5a:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421b5f:	mov    ecx,eax
  421b61:	mov    edx,DWORD PTR [rbp-0x10]
  421b64:	mov    rax,QWORD PTR [rbp-0x18]
  421b68:	mov    esi,DWORD PTR [rax+0x8]
  421b6b:	mov    rax,QWORD PTR [rbp-0x18]
  421b6f:	mov    rax,QWORD PTR [rax]
  421b72:	mov    rdi,rax
  421b75:	call   4212eb <flatcc_verify_error_string@@Base+0x658>
  421b7a:	mov    rdi,QWORD PTR [rbp-0x8]
  421b7e:	xor    rdi,QWORD PTR fs:0x28
  421b87:	je     421b8e <flatcc_verify_string_field@@Base+0x93>
  421b89:	call   405070 <__stack_chk_fail@plt>
  421b8e:	leave  
  421b8f:	ret    

0000000000421b90 <flatcc_verify_vector_field@@Base>:
  421b90:	push   rbp
  421b91:	mov    rbp,rsp
  421b94:	push   r13
  421b96:	push   r12
  421b98:	push   rbx
  421b99:	sub    rsp,0x48
  421b9d:	mov    QWORD PTR [rbp-0x38],rdi
  421ba1:	mov    eax,esi
  421ba3:	mov    DWORD PTR [rbp-0x40],edx
  421ba6:	mov    QWORD PTR [rbp-0x48],rcx
  421baa:	mov    edx,r8d
  421bad:	mov    QWORD PTR [rbp-0x58],r9
  421bb1:	mov    WORD PTR [rbp-0x3c],ax
  421bb5:	mov    WORD PTR [rbp-0x4c],dx
  421bb9:	mov    rax,QWORD PTR fs:0x28
  421bc2:	mov    QWORD PTR [rbp-0x28],rax
  421bc6:	xor    eax,eax
  421bc8:	movzx  esi,WORD PTR [rbp-0x3c]
  421bcc:	lea    rcx,[rbp-0x30]
  421bd0:	mov    edx,DWORD PTR [rbp-0x40]
  421bd3:	mov    rax,QWORD PTR [rbp-0x38]
  421bd7:	mov    rdi,rax
  421bda:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  421bdf:	mov    DWORD PTR [rbp-0x2c],eax
  421be2:	cmp    DWORD PTR [rbp-0x2c],0x0
  421be6:	jne    421bef <flatcc_verify_vector_field@@Base+0x5f>
  421be8:	mov    eax,DWORD PTR [rbp-0x30]
  421beb:	test   eax,eax
  421bed:	jne    421bf4 <flatcc_verify_vector_field@@Base+0x64>
  421bef:	mov    eax,DWORD PTR [rbp-0x2c]
  421bf2:	jmp    421c41 <flatcc_verify_vector_field@@Base+0xb1>
  421bf4:	mov    rax,QWORD PTR [rbp-0x58]
  421bf8:	mov    r12d,eax
  421bfb:	movzx  ebx,WORD PTR [rbp-0x4c]
  421bff:	mov    rax,QWORD PTR [rbp-0x48]
  421c03:	mov    r13d,eax
  421c06:	mov    edx,DWORD PTR [rbp-0x30]
  421c09:	mov    rax,QWORD PTR [rbp-0x38]
  421c0d:	mov    rax,QWORD PTR [rax]
  421c10:	mov    esi,edx
  421c12:	mov    rdi,rax
  421c15:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421c1a:	mov    ecx,eax
  421c1c:	mov    edx,DWORD PTR [rbp-0x30]
  421c1f:	mov    rax,QWORD PTR [rbp-0x38]
  421c23:	mov    esi,DWORD PTR [rax+0x8]
  421c26:	mov    rax,QWORD PTR [rbp-0x38]
  421c2a:	mov    rax,QWORD PTR [rax]
  421c2d:	push   r12
  421c2f:	mov    r9d,ebx
  421c32:	mov    r8d,r13d
  421c35:	mov    rdi,rax
  421c38:	call   421396 <flatcc_verify_error_string@@Base+0x703>
  421c3d:	add    rsp,0x8
  421c41:	mov    rbx,QWORD PTR [rbp-0x28]
  421c45:	xor    rbx,QWORD PTR fs:0x28
  421c4e:	je     421c55 <flatcc_verify_vector_field@@Base+0xc5>
  421c50:	call   405070 <__stack_chk_fail@plt>
  421c55:	lea    rsp,[rbp-0x18]
  421c59:	pop    rbx
  421c5a:	pop    r12
  421c5c:	pop    r13
  421c5e:	pop    rbp
  421c5f:	ret    

0000000000421c60 <flatcc_verify_string_vector_field@@Base>:
  421c60:	push   rbp
  421c61:	mov    rbp,rsp
  421c64:	sub    rsp,0x20
  421c68:	mov    QWORD PTR [rbp-0x18],rdi
  421c6c:	mov    eax,esi
  421c6e:	mov    DWORD PTR [rbp-0x20],edx
  421c71:	mov    WORD PTR [rbp-0x1c],ax
  421c75:	mov    rax,QWORD PTR fs:0x28
  421c7e:	mov    QWORD PTR [rbp-0x8],rax
  421c82:	xor    eax,eax
  421c84:	movzx  esi,WORD PTR [rbp-0x1c]
  421c88:	lea    rcx,[rbp-0x10]
  421c8c:	mov    edx,DWORD PTR [rbp-0x20]
  421c8f:	mov    rax,QWORD PTR [rbp-0x18]
  421c93:	mov    rdi,rax
  421c96:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  421c9b:	mov    DWORD PTR [rbp-0xc],eax
  421c9e:	cmp    DWORD PTR [rbp-0xc],0x0
  421ca2:	jne    421cab <flatcc_verify_string_vector_field@@Base+0x4b>
  421ca4:	mov    eax,DWORD PTR [rbp-0x10]
  421ca7:	test   eax,eax
  421ca9:	jne    421cb0 <flatcc_verify_string_vector_field@@Base+0x50>
  421cab:	mov    eax,DWORD PTR [rbp-0xc]
  421cae:	jmp    421cdf <flatcc_verify_string_vector_field@@Base+0x7f>
  421cb0:	mov    edx,DWORD PTR [rbp-0x10]
  421cb3:	mov    rax,QWORD PTR [rbp-0x18]
  421cb7:	mov    rax,QWORD PTR [rax]
  421cba:	mov    esi,edx
  421cbc:	mov    rdi,rax
  421cbf:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421cc4:	mov    ecx,eax
  421cc6:	mov    edx,DWORD PTR [rbp-0x10]
  421cc9:	mov    rax,QWORD PTR [rbp-0x18]
  421ccd:	mov    esi,DWORD PTR [rax+0x8]
  421cd0:	mov    rax,QWORD PTR [rbp-0x18]
  421cd4:	mov    rax,QWORD PTR [rax]
  421cd7:	mov    rdi,rax
  421cda:	call   421442 <flatcc_verify_error_string@@Base+0x7af>
  421cdf:	mov    rdi,QWORD PTR [rbp-0x8]
  421ce3:	xor    rdi,QWORD PTR fs:0x28
  421cec:	je     421cf3 <flatcc_verify_string_vector_field@@Base+0x93>
  421cee:	call   405070 <__stack_chk_fail@plt>
  421cf3:	leave  
  421cf4:	ret    

0000000000421cf5 <flatcc_verify_table_field@@Base>:
  421cf5:	push   rbp
  421cf6:	mov    rbp,rsp
  421cf9:	push   rbx
  421cfa:	sub    rsp,0x38
  421cfe:	mov    QWORD PTR [rbp-0x28],rdi
  421d02:	mov    eax,esi
  421d04:	mov    DWORD PTR [rbp-0x30],edx
  421d07:	mov    QWORD PTR [rbp-0x38],rcx
  421d0b:	mov    WORD PTR [rbp-0x2c],ax
  421d0f:	mov    rax,QWORD PTR fs:0x28
  421d18:	mov    QWORD PTR [rbp-0x18],rax
  421d1c:	xor    eax,eax
  421d1e:	movzx  esi,WORD PTR [rbp-0x2c]
  421d22:	lea    rcx,[rbp-0x20]
  421d26:	mov    edx,DWORD PTR [rbp-0x30]
  421d29:	mov    rax,QWORD PTR [rbp-0x28]
  421d2d:	mov    rdi,rax
  421d30:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  421d35:	mov    DWORD PTR [rbp-0x1c],eax
  421d38:	cmp    DWORD PTR [rbp-0x1c],0x0
  421d3c:	jne    421d45 <flatcc_verify_table_field@@Base+0x50>
  421d3e:	mov    eax,DWORD PTR [rbp-0x20]
  421d41:	test   eax,eax
  421d43:	jne    421d4a <flatcc_verify_table_field@@Base+0x55>
  421d45:	mov    eax,DWORD PTR [rbp-0x1c]
  421d48:	jmp    421d8c <flatcc_verify_table_field@@Base+0x97>
  421d4a:	mov    rax,QWORD PTR [rbp-0x28]
  421d4e:	mov    ebx,DWORD PTR [rax+0xc]
  421d51:	mov    edx,DWORD PTR [rbp-0x20]
  421d54:	mov    rax,QWORD PTR [rbp-0x28]
  421d58:	mov    rax,QWORD PTR [rax]
  421d5b:	mov    esi,edx
  421d5d:	mov    rdi,rax
  421d60:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421d65:	mov    edi,eax
  421d67:	mov    edx,DWORD PTR [rbp-0x20]
  421d6a:	mov    rax,QWORD PTR [rbp-0x28]
  421d6e:	mov    esi,DWORD PTR [rax+0x8]
  421d71:	mov    rax,QWORD PTR [rbp-0x28]
  421d75:	mov    rax,QWORD PTR [rax]
  421d78:	mov    rcx,QWORD PTR [rbp-0x38]
  421d7c:	mov    r9,rcx
  421d7f:	mov    r8d,ebx
  421d82:	mov    ecx,edi
  421d84:	mov    rdi,rax
  421d87:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  421d8c:	mov    rbx,QWORD PTR [rbp-0x18]
  421d90:	xor    rbx,QWORD PTR fs:0x28
  421d99:	je     421da0 <flatcc_verify_table_field@@Base+0xab>
  421d9b:	call   405070 <__stack_chk_fail@plt>
  421da0:	add    rsp,0x38
  421da4:	pop    rbx
  421da5:	pop    rbp
  421da6:	ret    

0000000000421da7 <flatcc_verify_table_vector_field@@Base>:
  421da7:	push   rbp
  421da8:	mov    rbp,rsp
  421dab:	push   rbx
  421dac:	sub    rsp,0x38
  421db0:	mov    QWORD PTR [rbp-0x28],rdi
  421db4:	mov    eax,esi
  421db6:	mov    DWORD PTR [rbp-0x30],edx
  421db9:	mov    QWORD PTR [rbp-0x38],rcx
  421dbd:	mov    WORD PTR [rbp-0x2c],ax
  421dc1:	mov    rax,QWORD PTR fs:0x28
  421dca:	mov    QWORD PTR [rbp-0x18],rax
  421dce:	xor    eax,eax
  421dd0:	movzx  esi,WORD PTR [rbp-0x2c]
  421dd4:	lea    rcx,[rbp-0x20]
  421dd8:	mov    edx,DWORD PTR [rbp-0x30]
  421ddb:	mov    rax,QWORD PTR [rbp-0x28]
  421ddf:	mov    rdi,rax
  421de2:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  421de7:	mov    DWORD PTR [rbp-0x1c],eax
  421dea:	cmp    DWORD PTR [rbp-0x1c],0x0
  421dee:	jne    421df7 <flatcc_verify_table_vector_field@@Base+0x50>
  421df0:	mov    eax,DWORD PTR [rbp-0x20]
  421df3:	test   eax,eax
  421df5:	jne    421dfc <flatcc_verify_table_vector_field@@Base+0x55>
  421df7:	mov    eax,DWORD PTR [rbp-0x1c]
  421dfa:	jmp    421e3e <flatcc_verify_table_vector_field@@Base+0x97>
  421dfc:	mov    rax,QWORD PTR [rbp-0x28]
  421e00:	mov    ebx,DWORD PTR [rax+0xc]
  421e03:	mov    edx,DWORD PTR [rbp-0x20]
  421e06:	mov    rax,QWORD PTR [rbp-0x28]
  421e0a:	mov    rax,QWORD PTR [rax]
  421e0d:	mov    esi,edx
  421e0f:	mov    rdi,rax
  421e12:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  421e17:	mov    edi,eax
  421e19:	mov    edx,DWORD PTR [rbp-0x20]
  421e1c:	mov    rax,QWORD PTR [rbp-0x28]
  421e20:	mov    esi,DWORD PTR [rax+0x8]
  421e23:	mov    rax,QWORD PTR [rbp-0x28]
  421e27:	mov    rax,QWORD PTR [rax]
  421e2a:	mov    rcx,QWORD PTR [rbp-0x38]
  421e2e:	mov    r9,rcx
  421e31:	mov    r8d,ebx
  421e34:	mov    ecx,edi
  421e36:	mov    rdi,rax
  421e39:	call   42175d <flatcc_verify_error_string@@Base+0xaca>
  421e3e:	mov    rbx,QWORD PTR [rbp-0x18]
  421e42:	xor    rbx,QWORD PTR fs:0x28
  421e4b:	je     421e52 <flatcc_verify_table_vector_field@@Base+0xab>
  421e4d:	call   405070 <__stack_chk_fail@plt>
  421e52:	add    rsp,0x38
  421e56:	pop    rbx
  421e57:	pop    rbp
  421e58:	ret    

0000000000421e59 <flatcc_verify_union_table@@Base>:
  421e59:	push   rbp
  421e5a:	mov    rbp,rsp
  421e5d:	sub    rsp,0x10
  421e61:	mov    QWORD PTR [rbp-0x8],rdi
  421e65:	mov    QWORD PTR [rbp-0x10],rsi
  421e69:	mov    rax,QWORD PTR [rbp-0x8]
  421e6d:	mov    edi,DWORD PTR [rax+0xc]
  421e70:	mov    rax,QWORD PTR [rbp-0x8]
  421e74:	mov    ecx,DWORD PTR [rax+0x18]
  421e77:	mov    rax,QWORD PTR [rbp-0x8]
  421e7b:	mov    edx,DWORD PTR [rax+0x14]
  421e7e:	mov    rax,QWORD PTR [rbp-0x8]
  421e82:	mov    esi,DWORD PTR [rax+0x8]
  421e85:	mov    rax,QWORD PTR [rbp-0x8]
  421e89:	mov    rax,QWORD PTR [rax]
  421e8c:	mov    r8,QWORD PTR [rbp-0x10]
  421e90:	mov    r9,r8
  421e93:	mov    r8d,edi
  421e96:	mov    rdi,rax
  421e99:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  421e9e:	leave  
  421e9f:	ret    

0000000000421ea0 <flatcc_verify_union_struct@@Base>:
  421ea0:	push   rbp
  421ea1:	mov    rbp,rsp
  421ea4:	sub    rsp,0x18
  421ea8:	mov    QWORD PTR [rbp-0x8],rdi
  421eac:	mov    QWORD PTR [rbp-0x10],rsi
  421eb0:	mov    eax,edx
  421eb2:	mov    WORD PTR [rbp-0x14],ax
  421eb6:	movzx  ecx,WORD PTR [rbp-0x14]
  421eba:	mov    rax,QWORD PTR [rbp-0x10]
  421ebe:	mov    edi,eax
  421ec0:	mov    rax,QWORD PTR [rbp-0x8]
  421ec4:	mov    edx,DWORD PTR [rax+0x18]
  421ec7:	mov    rax,QWORD PTR [rbp-0x8]
  421ecb:	mov    esi,DWORD PTR [rax+0x14]
  421ece:	mov    rax,QWORD PTR [rbp-0x8]
  421ed2:	mov    eax,DWORD PTR [rax+0x8]
  421ed5:	mov    r8d,ecx
  421ed8:	mov    ecx,edi
  421eda:	mov    edi,eax
  421edc:	call   420fdf <flatcc_verify_error_string@@Base+0x34c>
  421ee1:	leave  
  421ee2:	ret    

0000000000421ee3 <flatcc_verify_union_string@@Base>:
  421ee3:	push   rbp
  421ee4:	mov    rbp,rsp
  421ee7:	sub    rsp,0x8
  421eeb:	mov    QWORD PTR [rbp-0x8],rdi
  421eef:	mov    rax,QWORD PTR [rbp-0x8]
  421ef3:	mov    ecx,DWORD PTR [rax+0x18]
  421ef6:	mov    rax,QWORD PTR [rbp-0x8]
  421efa:	mov    edx,DWORD PTR [rax+0x14]
  421efd:	mov    rax,QWORD PTR [rbp-0x8]
  421f01:	mov    esi,DWORD PTR [rax+0x8]
  421f04:	mov    rax,QWORD PTR [rbp-0x8]
  421f08:	mov    rax,QWORD PTR [rax]
  421f0b:	mov    rdi,rax
  421f0e:	call   4212eb <flatcc_verify_error_string@@Base+0x658>
  421f13:	leave  
  421f14:	ret    

0000000000421f15 <flatcc_verify_buffer_header@@Base>:
  421f15:	push   rbp
  421f16:	mov    rbp,rsp
  421f19:	sub    rsp,0x40
  421f1d:	mov    QWORD PTR [rbp-0x28],rdi
  421f21:	mov    QWORD PTR [rbp-0x30],rsi
  421f25:	mov    QWORD PTR [rbp-0x38],rdx
  421f29:	mov    rax,QWORD PTR [rbp-0x28]
  421f2d:	and    eax,0x3
  421f30:	test   rax,rax
  421f33:	sete   al
  421f36:	movzx  eax,al
  421f39:	mov    DWORD PTR [rbp-0x18],eax
  421f3c:	cmp    DWORD PTR [rbp-0x18],0x0
  421f40:	jne    421f4c <flatcc_verify_buffer_header@@Base+0x37>
  421f42:	mov    eax,0x5
  421f47:	jmp    421fdf <flatcc_verify_buffer_header@@Base+0xca>
  421f4c:	mov    eax,0xfffffff7
  421f51:	cmp    QWORD PTR [rbp-0x30],rax
  421f55:	setbe  al
  421f58:	movzx  eax,al
  421f5b:	mov    DWORD PTR [rbp-0x14],eax
  421f5e:	cmp    DWORD PTR [rbp-0x14],0x0
  421f62:	jne    421f6b <flatcc_verify_buffer_header@@Base+0x56>
  421f64:	mov    eax,0x6
  421f69:	jmp    421fdf <flatcc_verify_buffer_header@@Base+0xca>
  421f6b:	cmp    QWORD PTR [rbp-0x30],0x7
  421f70:	seta   al
  421f73:	movzx  eax,al
  421f76:	mov    DWORD PTR [rbp-0x10],eax
  421f79:	cmp    DWORD PTR [rbp-0x10],0x0
  421f7d:	jne    421f86 <flatcc_verify_buffer_header@@Base+0x71>
  421f7f:	mov    eax,0x1
  421f84:	jmp    421fdf <flatcc_verify_buffer_header@@Base+0xca>
  421f86:	cmp    QWORD PTR [rbp-0x38],0x0
  421f8b:	je     421fda <flatcc_verify_buffer_header@@Base+0xc5>
  421f8d:	mov    rax,QWORD PTR [rbp-0x38]
  421f91:	mov    rdi,rax
  421f94:	call   420e86 <flatcc_verify_error_string@@Base+0x1f3>
  421f99:	mov    DWORD PTR [rbp-0xc],eax
  421f9c:	mov    rax,QWORD PTR [rbp-0x28]
  421fa0:	mov    esi,0x4
  421fa5:	mov    rdi,rax
  421fa8:	call   420ee0 <flatcc_verify_error_string@@Base+0x24d>
  421fad:	mov    DWORD PTR [rbp-0x8],eax
  421fb0:	cmp    DWORD PTR [rbp-0xc],0x0
  421fb4:	je     421fbe <flatcc_verify_buffer_header@@Base+0xa9>
  421fb6:	mov    eax,DWORD PTR [rbp-0x8]
  421fb9:	cmp    eax,DWORD PTR [rbp-0xc]
  421fbc:	jne    421fc5 <flatcc_verify_buffer_header@@Base+0xb0>
  421fbe:	mov    eax,0x1
  421fc3:	jmp    421fca <flatcc_verify_buffer_header@@Base+0xb5>
  421fc5:	mov    eax,0x0
  421fca:	mov    DWORD PTR [rbp-0x4],eax
  421fcd:	cmp    DWORD PTR [rbp-0x4],0x0
  421fd1:	jne    421fda <flatcc_verify_buffer_header@@Base+0xc5>
  421fd3:	mov    eax,0x2
  421fd8:	jmp    421fdf <flatcc_verify_buffer_header@@Base+0xca>
  421fda:	mov    eax,0x0
  421fdf:	leave  
  421fe0:	ret    

0000000000421fe1 <flatcc_verify_typed_buffer_header@@Base>:
  421fe1:	push   rbp
  421fe2:	mov    rbp,rsp
  421fe5:	sub    rsp,0x38
  421fe9:	mov    QWORD PTR [rbp-0x28],rdi
  421fed:	mov    QWORD PTR [rbp-0x30],rsi
  421ff1:	mov    DWORD PTR [rbp-0x34],edx
  421ff4:	mov    rax,QWORD PTR [rbp-0x28]
  421ff8:	and    eax,0x3
  421ffb:	test   rax,rax
  421ffe:	sete   al
  422001:	movzx  eax,al
  422004:	mov    DWORD PTR [rbp-0x18],eax
  422007:	cmp    DWORD PTR [rbp-0x18],0x0
  42200b:	jne    422017 <flatcc_verify_typed_buffer_header@@Base+0x36>
  42200d:	mov    eax,0x5
  422012:	jmp    4220a0 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  422017:	mov    eax,0xfffffff7
  42201c:	cmp    QWORD PTR [rbp-0x30],rax
  422020:	setbe  al
  422023:	movzx  eax,al
  422026:	mov    DWORD PTR [rbp-0x14],eax
  422029:	cmp    DWORD PTR [rbp-0x14],0x0
  42202d:	jne    422036 <flatcc_verify_typed_buffer_header@@Base+0x55>
  42202f:	mov    eax,0x6
  422034:	jmp    4220a0 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  422036:	cmp    QWORD PTR [rbp-0x30],0x7
  42203b:	seta   al
  42203e:	movzx  eax,al
  422041:	mov    DWORD PTR [rbp-0x10],eax
  422044:	cmp    DWORD PTR [rbp-0x10],0x0
  422048:	jne    422051 <flatcc_verify_typed_buffer_header@@Base+0x70>
  42204a:	mov    eax,0x1
  42204f:	jmp    4220a0 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  422051:	cmp    DWORD PTR [rbp-0x34],0x0
  422055:	je     42209b <flatcc_verify_typed_buffer_header@@Base+0xba>
  422057:	mov    eax,DWORD PTR [rbp-0x34]
  42205a:	mov    DWORD PTR [rbp-0xc],eax
  42205d:	mov    rax,QWORD PTR [rbp-0x28]
  422061:	mov    esi,0x4
  422066:	mov    rdi,rax
  422069:	call   420ee0 <flatcc_verify_error_string@@Base+0x24d>
  42206e:	mov    DWORD PTR [rbp-0x8],eax
  422071:	cmp    DWORD PTR [rbp-0xc],0x0
  422075:	je     42207f <flatcc_verify_typed_buffer_header@@Base+0x9e>
  422077:	mov    eax,DWORD PTR [rbp-0x8]
  42207a:	cmp    eax,DWORD PTR [rbp-0xc]
  42207d:	jne    422086 <flatcc_verify_typed_buffer_header@@Base+0xa5>
  42207f:	mov    eax,0x1
  422084:	jmp    42208b <flatcc_verify_typed_buffer_header@@Base+0xaa>
  422086:	mov    eax,0x0
  42208b:	mov    DWORD PTR [rbp-0x4],eax
  42208e:	cmp    DWORD PTR [rbp-0x4],0x0
  422092:	jne    42209b <flatcc_verify_typed_buffer_header@@Base+0xba>
  422094:	mov    eax,0x2
  422099:	jmp    4220a0 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  42209b:	mov    eax,0x0
  4220a0:	leave  
  4220a1:	ret    

00000000004220a2 <flatcc_verify_struct_as_root@@Base>:
  4220a2:	push   rbp
  4220a3:	mov    rbp,rsp
  4220a6:	push   r12
  4220a8:	push   rbx
  4220a9:	sub    rsp,0x30
  4220ad:	mov    QWORD PTR [rbp-0x18],rdi
  4220b1:	mov    QWORD PTR [rbp-0x20],rsi
  4220b5:	mov    QWORD PTR [rbp-0x28],rdx
  4220b9:	mov    QWORD PTR [rbp-0x30],rcx
  4220bd:	mov    eax,r8d
  4220c0:	mov    WORD PTR [rbp-0x34],ax
  4220c4:	mov    rdx,QWORD PTR [rbp-0x28]
  4220c8:	mov    rcx,QWORD PTR [rbp-0x20]
  4220cc:	mov    rax,QWORD PTR [rbp-0x18]
  4220d0:	mov    rsi,rcx
  4220d3:	mov    rdi,rax
  4220d6:	call   421f15 <flatcc_verify_buffer_header@@Base>
  4220db:	test   eax,eax
  4220dd:	je     4220f8 <flatcc_verify_struct_as_root@@Base+0x56>
  4220df:	mov    rdx,QWORD PTR [rbp-0x28]
  4220e3:	mov    rcx,QWORD PTR [rbp-0x20]
  4220e7:	mov    rax,QWORD PTR [rbp-0x18]
  4220eb:	mov    rsi,rcx
  4220ee:	mov    rdi,rax
  4220f1:	call   421f15 <flatcc_verify_buffer_header@@Base>
  4220f6:	jmp    42212c <flatcc_verify_struct_as_root@@Base+0x8a>
  4220f8:	movzx  ebx,WORD PTR [rbp-0x34]
  4220fc:	mov    rax,QWORD PTR [rbp-0x30]
  422100:	mov    r12d,eax
  422103:	mov    rax,QWORD PTR [rbp-0x18]
  422107:	mov    esi,0x0
  42210c:	mov    rdi,rax
  42210f:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  422114:	mov    edx,eax
  422116:	mov    rax,QWORD PTR [rbp-0x20]
  42211a:	mov    r8d,ebx
  42211d:	mov    ecx,r12d
  422120:	mov    esi,0x0
  422125:	mov    edi,eax
  422127:	call   420fdf <flatcc_verify_error_string@@Base+0x34c>
  42212c:	add    rsp,0x30
  422130:	pop    rbx
  422131:	pop    r12
  422133:	pop    rbp
  422134:	ret    

0000000000422135 <flatcc_verify_struct_as_typed_root@@Base>:
  422135:	push   rbp
  422136:	mov    rbp,rsp
  422139:	push   r12
  42213b:	push   rbx
  42213c:	sub    rsp,0x20
  422140:	mov    QWORD PTR [rbp-0x18],rdi
  422144:	mov    QWORD PTR [rbp-0x20],rsi
  422148:	mov    DWORD PTR [rbp-0x24],edx
  42214b:	mov    QWORD PTR [rbp-0x30],rcx
  42214f:	mov    eax,r8d
  422152:	mov    WORD PTR [rbp-0x28],ax
  422156:	mov    edx,DWORD PTR [rbp-0x24]
  422159:	mov    rcx,QWORD PTR [rbp-0x20]
  42215d:	mov    rax,QWORD PTR [rbp-0x18]
  422161:	mov    rsi,rcx
  422164:	mov    rdi,rax
  422167:	call   421fe1 <flatcc_verify_typed_buffer_header@@Base>
  42216c:	test   eax,eax
  42216e:	je     422188 <flatcc_verify_struct_as_typed_root@@Base+0x53>
  422170:	mov    edx,DWORD PTR [rbp-0x24]
  422173:	mov    rcx,QWORD PTR [rbp-0x20]
  422177:	mov    rax,QWORD PTR [rbp-0x18]
  42217b:	mov    rsi,rcx
  42217e:	mov    rdi,rax
  422181:	call   421fe1 <flatcc_verify_typed_buffer_header@@Base>
  422186:	jmp    4221bc <flatcc_verify_struct_as_typed_root@@Base+0x87>
  422188:	movzx  ebx,WORD PTR [rbp-0x28]
  42218c:	mov    rax,QWORD PTR [rbp-0x30]
  422190:	mov    r12d,eax
  422193:	mov    rax,QWORD PTR [rbp-0x18]
  422197:	mov    esi,0x0
  42219c:	mov    rdi,rax
  42219f:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4221a4:	mov    edx,eax
  4221a6:	mov    rax,QWORD PTR [rbp-0x20]
  4221aa:	mov    r8d,ebx
  4221ad:	mov    ecx,r12d
  4221b0:	mov    esi,0x0
  4221b5:	mov    edi,eax
  4221b7:	call   420fdf <flatcc_verify_error_string@@Base+0x34c>
  4221bc:	add    rsp,0x20
  4221c0:	pop    rbx
  4221c1:	pop    r12
  4221c3:	pop    rbp
  4221c4:	ret    

00000000004221c5 <flatcc_verify_table_as_root@@Base>:
  4221c5:	push   rbp
  4221c6:	mov    rbp,rsp
  4221c9:	sub    rsp,0x20
  4221cd:	mov    QWORD PTR [rbp-0x8],rdi
  4221d1:	mov    QWORD PTR [rbp-0x10],rsi
  4221d5:	mov    QWORD PTR [rbp-0x18],rdx
  4221d9:	mov    QWORD PTR [rbp-0x20],rcx
  4221dd:	mov    rax,QWORD PTR [rbp-0x10]
  4221e1:	mov    ecx,eax
  4221e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4221e7:	mov    rax,QWORD PTR [rbp-0x8]
  4221eb:	mov    rsi,rcx
  4221ee:	mov    rdi,rax
  4221f1:	call   421f15 <flatcc_verify_buffer_header@@Base>
  4221f6:	test   eax,eax
  4221f8:	je     422215 <flatcc_verify_table_as_root@@Base+0x50>
  4221fa:	mov    rax,QWORD PTR [rbp-0x10]
  4221fe:	mov    ecx,eax
  422200:	mov    rdx,QWORD PTR [rbp-0x18]
  422204:	mov    rax,QWORD PTR [rbp-0x8]
  422208:	mov    rsi,rcx
  42220b:	mov    rdi,rax
  42220e:	call   421f15 <flatcc_verify_buffer_header@@Base>
  422213:	jmp    42224c <flatcc_verify_table_as_root@@Base+0x87>
  422215:	mov    rax,QWORD PTR [rbp-0x8]
  422219:	mov    esi,0x0
  42221e:	mov    rdi,rax
  422221:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  422226:	mov    ecx,eax
  422228:	mov    rax,QWORD PTR [rbp-0x10]
  42222c:	mov    esi,eax
  42222e:	mov    rdx,QWORD PTR [rbp-0x20]
  422232:	mov    rax,QWORD PTR [rbp-0x8]
  422236:	mov    r9,rdx
  422239:	mov    r8d,0x64
  42223f:	mov    edx,0x0
  422244:	mov    rdi,rax
  422247:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  42224c:	leave  
  42224d:	ret    

000000000042224e <flatcc_verify_table_as_typed_root@@Base>:
  42224e:	push   rbp
  42224f:	mov    rbp,rsp
  422252:	sub    rsp,0x20
  422256:	mov    QWORD PTR [rbp-0x8],rdi
  42225a:	mov    QWORD PTR [rbp-0x10],rsi
  42225e:	mov    DWORD PTR [rbp-0x14],edx
  422261:	mov    QWORD PTR [rbp-0x20],rcx
  422265:	mov    rax,QWORD PTR [rbp-0x10]
  422269:	mov    ecx,eax
  42226b:	mov    edx,DWORD PTR [rbp-0x14]
  42226e:	mov    rax,QWORD PTR [rbp-0x8]
  422272:	mov    rsi,rcx
  422275:	mov    rdi,rax
  422278:	call   421fe1 <flatcc_verify_typed_buffer_header@@Base>
  42227d:	test   eax,eax
  42227f:	je     42229b <flatcc_verify_table_as_typed_root@@Base+0x4d>
  422281:	mov    rax,QWORD PTR [rbp-0x10]
  422285:	mov    ecx,eax
  422287:	mov    edx,DWORD PTR [rbp-0x14]
  42228a:	mov    rax,QWORD PTR [rbp-0x8]
  42228e:	mov    rsi,rcx
  422291:	mov    rdi,rax
  422294:	call   421fe1 <flatcc_verify_typed_buffer_header@@Base>
  422299:	jmp    4222d2 <flatcc_verify_table_as_typed_root@@Base+0x84>
  42229b:	mov    rax,QWORD PTR [rbp-0x8]
  42229f:	mov    esi,0x0
  4222a4:	mov    rdi,rax
  4222a7:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4222ac:	mov    ecx,eax
  4222ae:	mov    rax,QWORD PTR [rbp-0x10]
  4222b2:	mov    esi,eax
  4222b4:	mov    rdx,QWORD PTR [rbp-0x20]
  4222b8:	mov    rax,QWORD PTR [rbp-0x8]
  4222bc:	mov    r9,rdx
  4222bf:	mov    r8d,0x64
  4222c5:	mov    edx,0x0
  4222ca:	mov    rdi,rax
  4222cd:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  4222d2:	leave  
  4222d3:	ret    

00000000004222d4 <flatcc_verify_struct_as_nested_root@@Base>:
  4222d4:	push   rbp
  4222d5:	mov    rbp,rsp
  4222d8:	sub    rsp,0x40
  4222dc:	mov    QWORD PTR [rbp-0x18],rdi
  4222e0:	mov    eax,esi
  4222e2:	mov    DWORD PTR [rbp-0x20],edx
  4222e5:	mov    QWORD PTR [rbp-0x28],rcx
  4222e9:	mov    QWORD PTR [rbp-0x30],r8
  4222ed:	mov    edx,r9d
  4222f0:	mov    WORD PTR [rbp-0x1c],ax
  4222f4:	mov    WORD PTR [rbp-0x34],dx
  4222f8:	movzx  ecx,WORD PTR [rbp-0x34]
  4222fc:	movzx  esi,WORD PTR [rbp-0x1c]
  422300:	mov    edx,DWORD PTR [rbp-0x20]
  422303:	mov    rax,QWORD PTR [rbp-0x18]
  422307:	mov    r9d,0xffffffff
  42230d:	mov    r8d,0x1
  422313:	mov    rdi,rax
  422316:	call   421b90 <flatcc_verify_vector_field@@Base>
  42231b:	test   eax,eax
  42231d:	je     422344 <flatcc_verify_struct_as_nested_root@@Base+0x70>
  42231f:	movzx  ecx,WORD PTR [rbp-0x34]
  422323:	movzx  esi,WORD PTR [rbp-0x1c]
  422327:	mov    edx,DWORD PTR [rbp-0x20]
  42232a:	mov    rax,QWORD PTR [rbp-0x18]
  42232e:	mov    r9d,0xffffffff
  422334:	mov    r8d,0x1
  42233a:	mov    rdi,rax
  42233d:	call   421b90 <flatcc_verify_vector_field@@Base>
  422342:	jmp    4223bd <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  422344:	movzx  edx,WORD PTR [rbp-0x1c]
  422348:	mov    rax,QWORD PTR [rbp-0x18]
  42234c:	mov    esi,edx
  42234e:	mov    rdi,rax
  422351:	call   4210d2 <flatcc_verify_error_string@@Base+0x43f>
  422356:	mov    QWORD PTR [rbp-0x8],rax
  42235a:	cmp    QWORD PTR [rbp-0x8],0x0
  42235f:	jne    422368 <flatcc_verify_struct_as_nested_root@@Base+0x94>
  422361:	mov    eax,0x0
  422366:	jmp    4223bd <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  422368:	mov    rax,QWORD PTR [rbp-0x8]
  42236c:	mov    esi,0x0
  422371:	mov    rdi,rax
  422374:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  422379:	mov    edx,eax
  42237b:	mov    rax,QWORD PTR [rbp-0x8]
  42237f:	add    rax,rdx
  422382:	mov    QWORD PTR [rbp-0x8],rax
  422386:	mov    rax,QWORD PTR [rbp-0x8]
  42238a:	mov    esi,0x0
  42238f:	mov    rdi,rax
  422392:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  422397:	mov    DWORD PTR [rbp-0xc],eax
  42239a:	add    QWORD PTR [rbp-0x8],0x4
  42239f:	movzx  edi,WORD PTR [rbp-0x34]
  4223a3:	mov    esi,DWORD PTR [rbp-0xc]
  4223a6:	mov    rcx,QWORD PTR [rbp-0x30]
  4223aa:	mov    rdx,QWORD PTR [rbp-0x28]
  4223ae:	mov    rax,QWORD PTR [rbp-0x8]
  4223b2:	mov    r8d,edi
  4223b5:	mov    rdi,rax
  4223b8:	call   4220a2 <flatcc_verify_struct_as_root@@Base>
  4223bd:	leave  
  4223be:	ret    

00000000004223bf <flatcc_verify_table_as_nested_root@@Base>:
  4223bf:	push   rbp
  4223c0:	mov    rbp,rsp
  4223c3:	push   rbx
  4223c4:	sub    rsp,0x48
  4223c8:	mov    QWORD PTR [rbp-0x28],rdi
  4223cc:	mov    eax,esi
  4223ce:	mov    DWORD PTR [rbp-0x30],edx
  4223d1:	mov    QWORD PTR [rbp-0x38],rcx
  4223d5:	mov    edx,r8d
  4223d8:	mov    QWORD PTR [rbp-0x48],r9
  4223dc:	mov    WORD PTR [rbp-0x2c],ax
  4223e0:	mov    WORD PTR [rbp-0x3c],dx
  4223e4:	movzx  ecx,WORD PTR [rbp-0x3c]
  4223e8:	movzx  esi,WORD PTR [rbp-0x2c]
  4223ec:	mov    edx,DWORD PTR [rbp-0x30]
  4223ef:	mov    rax,QWORD PTR [rbp-0x28]
  4223f3:	mov    r9d,0xffffffff
  4223f9:	mov    r8d,0x1
  4223ff:	mov    rdi,rax
  422402:	call   421b90 <flatcc_verify_vector_field@@Base>
  422407:	test   eax,eax
  422409:	je     422433 <flatcc_verify_table_as_nested_root@@Base+0x74>
  42240b:	movzx  ecx,WORD PTR [rbp-0x3c]
  42240f:	movzx  esi,WORD PTR [rbp-0x2c]
  422413:	mov    edx,DWORD PTR [rbp-0x30]
  422416:	mov    rax,QWORD PTR [rbp-0x28]
  42241a:	mov    r9d,0xffffffff
  422420:	mov    r8d,0x1
  422426:	mov    rdi,rax
  422429:	call   421b90 <flatcc_verify_vector_field@@Base>
  42242e:	jmp    4224fb <flatcc_verify_table_as_nested_root@@Base+0x13c>
  422433:	movzx  edx,WORD PTR [rbp-0x2c]
  422437:	mov    rax,QWORD PTR [rbp-0x28]
  42243b:	mov    esi,edx
  42243d:	mov    rdi,rax
  422440:	call   4210d2 <flatcc_verify_error_string@@Base+0x43f>
  422445:	mov    QWORD PTR [rbp-0x18],rax
  422449:	cmp    QWORD PTR [rbp-0x18],0x0
  42244e:	jne    42245a <flatcc_verify_table_as_nested_root@@Base+0x9b>
  422450:	mov    eax,0x0
  422455:	jmp    4224fb <flatcc_verify_table_as_nested_root@@Base+0x13c>
  42245a:	mov    rax,QWORD PTR [rbp-0x18]
  42245e:	mov    esi,0x0
  422463:	mov    rdi,rax
  422466:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  42246b:	mov    edx,eax
  42246d:	mov    rax,QWORD PTR [rbp-0x18]
  422471:	add    rax,rdx
  422474:	mov    QWORD PTR [rbp-0x18],rax
  422478:	mov    rax,QWORD PTR [rbp-0x18]
  42247c:	mov    esi,0x0
  422481:	mov    rdi,rax
  422484:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  422489:	mov    DWORD PTR [rbp-0x1c],eax
  42248c:	add    QWORD PTR [rbp-0x18],0x4
  422491:	mov    ecx,DWORD PTR [rbp-0x1c]
  422494:	mov    rdx,QWORD PTR [rbp-0x38]
  422498:	mov    rax,QWORD PTR [rbp-0x18]
  42249c:	mov    rsi,rcx
  42249f:	mov    rdi,rax
  4224a2:	call   421f15 <flatcc_verify_buffer_header@@Base>
  4224a7:	test   eax,eax
  4224a9:	je     4224c3 <flatcc_verify_table_as_nested_root@@Base+0x104>
  4224ab:	mov    ecx,DWORD PTR [rbp-0x1c]
  4224ae:	mov    rdx,QWORD PTR [rbp-0x38]
  4224b2:	mov    rax,QWORD PTR [rbp-0x18]
  4224b6:	mov    rsi,rcx
  4224b9:	mov    rdi,rax
  4224bc:	call   421f15 <flatcc_verify_buffer_header@@Base>
  4224c1:	jmp    4224fb <flatcc_verify_table_as_nested_root@@Base+0x13c>
  4224c3:	mov    rax,QWORD PTR [rbp-0x28]
  4224c7:	mov    ebx,DWORD PTR [rax+0xc]
  4224ca:	mov    rax,QWORD PTR [rbp-0x18]
  4224ce:	mov    esi,0x0
  4224d3:	mov    rdi,rax
  4224d6:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4224db:	mov    ecx,eax
  4224dd:	mov    rdx,QWORD PTR [rbp-0x48]
  4224e1:	mov    esi,DWORD PTR [rbp-0x1c]
  4224e4:	mov    rax,QWORD PTR [rbp-0x18]
  4224e8:	mov    r9,rdx
  4224eb:	mov    r8d,ebx
  4224ee:	mov    edx,0x0
  4224f3:	mov    rdi,rax
  4224f6:	call   421542 <flatcc_verify_error_string@@Base+0x8af>
  4224fb:	add    rsp,0x48
  4224ff:	pop    rbx
  422500:	pop    rbp
  422501:	ret    

0000000000422502 <flatcc_verify_union_field@@Base>:
  422502:	push   rbp
  422503:	mov    rbp,rsp
  422506:	sub    rsp,0x70
  42250a:	mov    QWORD PTR [rbp-0x58],rdi
  42250e:	mov    eax,esi
  422510:	mov    DWORD PTR [rbp-0x60],edx
  422513:	mov    QWORD PTR [rbp-0x68],rcx
  422517:	mov    WORD PTR [rbp-0x5c],ax
  42251b:	mov    rax,QWORD PTR fs:0x28
  422524:	mov    QWORD PTR [rbp-0x8],rax
  422528:	xor    eax,eax
  42252a:	movzx  eax,WORD PTR [rbp-0x5c]
  42252e:	sub    eax,0x1
  422531:	movzx  edx,ax
  422534:	mov    rax,QWORD PTR [rbp-0x58]
  422538:	mov    esi,edx
  42253a:	mov    rdi,rax
  42253d:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  422542:	mov    WORD PTR [rbp-0x50],ax
  422546:	cmp    WORD PTR [rbp-0x50],0x0
  42254b:	jne    4225a8 <flatcc_verify_union_field@@Base+0xa6>
  42254d:	movzx  edx,WORD PTR [rbp-0x5c]
  422551:	mov    rax,QWORD PTR [rbp-0x58]
  422555:	mov    esi,edx
  422557:	mov    rdi,rax
  42255a:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  42255f:	mov    WORD PTR [rbp-0x4e],ax
  422563:	cmp    WORD PTR [rbp-0x4e],0x0
  422568:	sete   al
  42256b:	movzx  eax,al
  42256e:	mov    DWORD PTR [rbp-0x48],eax
  422571:	cmp    DWORD PTR [rbp-0x48],0x0
  422575:	jne    422581 <flatcc_verify_union_field@@Base+0x7f>
  422577:	mov    eax,0x17
  42257c:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  422581:	cmp    DWORD PTR [rbp-0x60],0x0
  422585:	sete   al
  422588:	movzx  eax,al
  42258b:	mov    DWORD PTR [rbp-0x44],eax
  42258e:	cmp    DWORD PTR [rbp-0x44],0x0
  422592:	jne    42259e <flatcc_verify_union_field@@Base+0x9c>
  422594:	mov    eax,0x15
  422599:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  42259e:	mov    eax,0x0
  4225a3:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  4225a8:	movzx  eax,WORD PTR [rbp-0x5c]
  4225ac:	sub    eax,0x1
  4225af:	movzx  esi,ax
  4225b2:	mov    rax,QWORD PTR [rbp-0x58]
  4225b6:	mov    r8d,0x1
  4225bc:	mov    ecx,0x1
  4225c1:	mov    edx,0x0
  4225c6:	mov    rdi,rax
  4225c9:	call   421124 <flatcc_verify_error_string@@Base+0x491>
  4225ce:	test   eax,eax
  4225d0:	je     4225fd <flatcc_verify_union_field@@Base+0xfb>
  4225d2:	movzx  eax,WORD PTR [rbp-0x5c]
  4225d6:	sub    eax,0x1
  4225d9:	movzx  esi,ax
  4225dc:	mov    rax,QWORD PTR [rbp-0x58]
  4225e0:	mov    r8d,0x1
  4225e6:	mov    ecx,0x1
  4225eb:	mov    edx,0x0
  4225f0:	mov    rdi,rax
  4225f3:	call   421124 <flatcc_verify_error_string@@Base+0x491>
  4225f8:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  4225fd:	movzx  edx,WORD PTR [rbp-0x5c]
  422601:	mov    rax,QWORD PTR [rbp-0x58]
  422605:	mov    esi,edx
  422607:	mov    rdi,rax
  42260a:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  42260f:	mov    WORD PTR [rbp-0x4e],ax
  422613:	mov    rax,QWORD PTR [rbp-0x58]
  422617:	mov    rdx,QWORD PTR [rax]
  42261a:	mov    rax,QWORD PTR [rbp-0x58]
  42261e:	mov    eax,DWORD PTR [rax+0x18]
  422621:	mov    ecx,eax
  422623:	movzx  eax,WORD PTR [rbp-0x50]
  422627:	add    rax,rcx
  42262a:	add    rax,rdx
  42262d:	mov    QWORD PTR [rbp-0x38],rax
  422631:	mov    rax,QWORD PTR [rbp-0x38]
  422635:	movzx  eax,BYTE PTR [rax]
  422638:	test   al,al
  42263a:	jne    422643 <flatcc_verify_union_field@@Base+0x141>
  42263c:	cmp    WORD PTR [rbp-0x4e],0x0
  422641:	jne    42264a <flatcc_verify_union_field@@Base+0x148>
  422643:	mov    eax,0x1
  422648:	jmp    42264f <flatcc_verify_union_field@@Base+0x14d>
  42264a:	mov    eax,0x0
  42264f:	mov    DWORD PTR [rbp-0x40],eax
  422652:	cmp    DWORD PTR [rbp-0x40],0x0
  422656:	jne    422662 <flatcc_verify_union_field@@Base+0x160>
  422658:	mov    eax,0x18
  42265d:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  422662:	mov    rax,QWORD PTR [rbp-0x38]
  422666:	movzx  eax,BYTE PTR [rax]
  422669:	test   al,al
  42266b:	jne    422674 <flatcc_verify_union_field@@Base+0x172>
  42266d:	mov    eax,0x0
  422672:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  422674:	movzx  esi,WORD PTR [rbp-0x5c]
  422678:	lea    rcx,[rbp-0x4c]
  42267c:	mov    edx,DWORD PTR [rbp-0x60]
  42267f:	mov    rax,QWORD PTR [rbp-0x58]
  422683:	mov    rdi,rax
  422686:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  42268b:	mov    DWORD PTR [rbp-0x3c],eax
  42268e:	cmp    DWORD PTR [rbp-0x3c],0x0
  422692:	jne    42269b <flatcc_verify_union_field@@Base+0x199>
  422694:	mov    eax,DWORD PTR [rbp-0x4c]
  422697:	test   eax,eax
  422699:	jne    4226a0 <flatcc_verify_union_field@@Base+0x19e>
  42269b:	mov    eax,DWORD PTR [rbp-0x3c]
  42269e:	jmp    4226f3 <flatcc_verify_union_field@@Base+0x1f1>
  4226a0:	mov    rax,QWORD PTR [rbp-0x58]
  4226a4:	mov    rax,QWORD PTR [rax]
  4226a7:	mov    QWORD PTR [rbp-0x30],rax
  4226ab:	mov    rax,QWORD PTR [rbp-0x58]
  4226af:	mov    eax,DWORD PTR [rax+0x8]
  4226b2:	mov    DWORD PTR [rbp-0x28],eax
  4226b5:	mov    rax,QWORD PTR [rbp-0x58]
  4226b9:	mov    eax,DWORD PTR [rax+0xc]
  4226bc:	mov    DWORD PTR [rbp-0x24],eax
  4226bf:	mov    eax,DWORD PTR [rbp-0x4c]
  4226c2:	mov    DWORD PTR [rbp-0x1c],eax
  4226c5:	mov    edx,DWORD PTR [rbp-0x4c]
  4226c8:	mov    rax,QWORD PTR [rbp-0x58]
  4226cc:	mov    rax,QWORD PTR [rax]
  4226cf:	mov    esi,edx
  4226d1:	mov    rdi,rax
  4226d4:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  4226d9:	mov    DWORD PTR [rbp-0x18],eax
  4226dc:	mov    rax,QWORD PTR [rbp-0x38]
  4226e0:	movzx  eax,BYTE PTR [rax]
  4226e3:	mov    BYTE PTR [rbp-0x20],al
  4226e6:	lea    rdx,[rbp-0x30]
  4226ea:	mov    rax,QWORD PTR [rbp-0x68]
  4226ee:	mov    rdi,rdx
  4226f1:	call   rax
  4226f3:	mov    rcx,QWORD PTR [rbp-0x8]
  4226f7:	xor    rcx,QWORD PTR fs:0x28
  422700:	je     422707 <flatcc_verify_union_field@@Base+0x205>
  422702:	call   405070 <__stack_chk_fail@plt>
  422707:	leave  
  422708:	ret    

0000000000422709 <flatcc_verify_union_vector_field@@Base>:
  422709:	push   rbp
  42270a:	mov    rbp,rsp
  42270d:	push   rbx
  42270e:	sub    rsp,0x58
  422712:	mov    QWORD PTR [rbp-0x48],rdi
  422716:	mov    eax,esi
  422718:	mov    DWORD PTR [rbp-0x50],edx
  42271b:	mov    QWORD PTR [rbp-0x58],rcx
  42271f:	mov    WORD PTR [rbp-0x4c],ax
  422723:	mov    rax,QWORD PTR fs:0x28
  42272c:	mov    QWORD PTR [rbp-0x18],rax
  422730:	xor    eax,eax
  422732:	movzx  eax,WORD PTR [rbp-0x4c]
  422736:	sub    eax,0x1
  422739:	movzx  edx,ax
  42273c:	mov    rax,QWORD PTR [rbp-0x48]
  422740:	mov    esi,edx
  422742:	mov    rdi,rax
  422745:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  42274a:	mov    WORD PTR [rbp-0x3c],ax
  42274e:	cmp    WORD PTR [rbp-0x3c],0x0
  422753:	jne    42278f <flatcc_verify_union_vector_field@@Base+0x86>
  422755:	movzx  edx,WORD PTR [rbp-0x4c]
  422759:	mov    rax,QWORD PTR [rbp-0x48]
  42275d:	mov    esi,edx
  42275f:	mov    rdi,rax
  422762:	call   421081 <flatcc_verify_error_string@@Base+0x3ee>
  422767:	mov    WORD PTR [rbp-0x3a],ax
  42276b:	cmp    WORD PTR [rbp-0x3a],0x0
  422770:	jne    42278f <flatcc_verify_union_vector_field@@Base+0x86>
  422772:	cmp    DWORD PTR [rbp-0x50],0x0
  422776:	sete   al
  422779:	movzx  eax,al
  42277c:	mov    DWORD PTR [rbp-0x34],eax
  42277f:	cmp    DWORD PTR [rbp-0x34],0x0
  422783:	jne    42278f <flatcc_verify_union_vector_field@@Base+0x86>
  422785:	mov    eax,0x16
  42278a:	jmp    4228d3 <flatcc_verify_union_vector_field@@Base+0x1ca>
  42278f:	movzx  eax,WORD PTR [rbp-0x4c]
  422793:	sub    eax,0x1
  422796:	movzx  esi,ax
  422799:	mov    edx,DWORD PTR [rbp-0x50]
  42279c:	mov    rax,QWORD PTR [rbp-0x48]
  4227a0:	mov    r9d,0xffffffff
  4227a6:	mov    r8d,0x1
  4227ac:	mov    ecx,0x1
  4227b1:	mov    rdi,rax
  4227b4:	call   421b90 <flatcc_verify_vector_field@@Base>
  4227b9:	test   eax,eax
  4227bb:	je     4227ec <flatcc_verify_union_vector_field@@Base+0xe3>
  4227bd:	movzx  eax,WORD PTR [rbp-0x4c]
  4227c1:	sub    eax,0x1
  4227c4:	movzx  esi,ax
  4227c7:	mov    edx,DWORD PTR [rbp-0x50]
  4227ca:	mov    rax,QWORD PTR [rbp-0x48]
  4227ce:	mov    r9d,0xffffffff
  4227d4:	mov    r8d,0x1
  4227da:	mov    ecx,0x1
  4227df:	mov    rdi,rax
  4227e2:	call   421b90 <flatcc_verify_vector_field@@Base>
  4227e7:	jmp    4228d3 <flatcc_verify_union_vector_field@@Base+0x1ca>
  4227ec:	movzx  eax,WORD PTR [rbp-0x4c]
  4227f0:	sub    eax,0x1
  4227f3:	movzx  edx,ax
  4227f6:	mov    rax,QWORD PTR [rbp-0x48]
  4227fa:	mov    esi,edx
  4227fc:	mov    rdi,rax
  4227ff:	call   4210d2 <flatcc_verify_error_string@@Base+0x43f>
  422804:	mov    QWORD PTR [rbp-0x28],rax
  422808:	cmp    QWORD PTR [rbp-0x28],0x0
  42280d:	jne    422819 <flatcc_verify_union_vector_field@@Base+0x110>
  42280f:	mov    eax,0x0
  422814:	jmp    4228d3 <flatcc_verify_union_vector_field@@Base+0x1ca>
  422819:	mov    rax,QWORD PTR [rbp-0x28]
  42281d:	mov    esi,0x0
  422822:	mov    rdi,rax
  422825:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  42282a:	mov    edx,eax
  42282c:	mov    rax,QWORD PTR [rbp-0x28]
  422830:	add    rax,rdx
  422833:	mov    QWORD PTR [rbp-0x28],rax
  422837:	mov    rax,QWORD PTR [rbp-0x28]
  42283b:	mov    esi,0x0
  422840:	mov    rdi,rax
  422843:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  422848:	mov    DWORD PTR [rbp-0x30],eax
  42284b:	add    QWORD PTR [rbp-0x28],0x4
  422850:	mov    rax,QWORD PTR [rbp-0x28]
  422854:	mov    QWORD PTR [rbp-0x20],rax
  422858:	movzx  esi,WORD PTR [rbp-0x4c]
  42285c:	lea    rcx,[rbp-0x38]
  422860:	mov    edx,DWORD PTR [rbp-0x50]
  422863:	mov    rax,QWORD PTR [rbp-0x48]
  422867:	mov    rdi,rax
  42286a:	call   421213 <flatcc_verify_error_string@@Base+0x580>
  42286f:	mov    DWORD PTR [rbp-0x2c],eax
  422872:	cmp    DWORD PTR [rbp-0x2c],0x0
  422876:	jne    42287f <flatcc_verify_union_vector_field@@Base+0x176>
  422878:	mov    eax,DWORD PTR [rbp-0x38]
  42287b:	test   eax,eax
  42287d:	jne    422884 <flatcc_verify_union_vector_field@@Base+0x17b>
  42287f:	mov    eax,DWORD PTR [rbp-0x2c]
  422882:	jmp    4228d3 <flatcc_verify_union_vector_field@@Base+0x1ca>
  422884:	mov    rax,QWORD PTR [rbp-0x48]
  422888:	mov    ebx,DWORD PTR [rax+0xc]
  42288b:	mov    edx,DWORD PTR [rbp-0x38]
  42288e:	mov    rax,QWORD PTR [rbp-0x48]
  422892:	mov    rax,QWORD PTR [rax]
  422895:	mov    esi,edx
  422897:	mov    rdi,rax
  42289a:	call   420e63 <flatcc_verify_error_string@@Base+0x1d0>
  42289f:	mov    r10d,eax
  4228a2:	mov    edx,DWORD PTR [rbp-0x38]
  4228a5:	mov    rax,QWORD PTR [rbp-0x48]
  4228a9:	mov    esi,DWORD PTR [rax+0x8]
  4228ac:	mov    rax,QWORD PTR [rbp-0x48]
  4228b0:	mov    rax,QWORD PTR [rax]
  4228b3:	mov    rdi,QWORD PTR [rbp-0x20]
  4228b7:	mov    ecx,DWORD PTR [rbp-0x30]
  4228ba:	push   QWORD PTR [rbp-0x58]
  4228bd:	push   rbx
  4228be:	mov    r9,rdi
  4228c1:	mov    r8d,ecx
  4228c4:	mov    ecx,r10d
  4228c7:	mov    rdi,rax
  4228ca:	call   4218af <flatcc_verify_error_string@@Base+0xc1c>
  4228cf:	add    rsp,0x10
  4228d3:	mov    rbx,QWORD PTR [rbp-0x18]
  4228d7:	xor    rbx,QWORD PTR fs:0x28
  4228e0:	je     4228e7 <flatcc_verify_union_vector_field@@Base+0x1de>
  4228e2:	call   405070 <__stack_chk_fail@plt>
  4228e7:	mov    rbx,QWORD PTR [rbp-0x8]
  4228eb:	leave  
  4228ec:	ret    
  4228ed:	push   rbp
  4228ee:	mov    rbp,rsp
  4228f1:	mov    eax,edi
  4228f3:	mov    BYTE PTR [rbp-0x4],al
  4228f6:	movzx  eax,BYTE PTR [rbp-0x4]
  4228fa:	pop    rbp
  4228fb:	ret    
  4228fc:	push   rbp
  4228fd:	mov    rbp,rsp
  422900:	sub    rsp,0x10
  422904:	mov    QWORD PTR [rbp-0x8],rdi
  422908:	mov    eax,esi
  42290a:	mov    BYTE PTR [rbp-0xc],al
  42290d:	movzx  eax,BYTE PTR [rbp-0xc]
  422911:	mov    edi,eax
  422913:	call   4228ed <flatcc_verify_union_vector_field@@Base+0x1e4>
  422918:	mov    edx,eax
  42291a:	mov    rax,QWORD PTR [rbp-0x8]
  42291e:	mov    BYTE PTR [rax],dl
  422920:	nop
  422921:	leave  
  422922:	ret    
  422923:	push   rbp
  422924:	mov    rbp,rsp
  422927:	sub    rsp,0x30
  42292b:	mov    QWORD PTR [rbp-0x8],rdi
  42292f:	mov    QWORD PTR [rbp-0x10],rsi
  422933:	mov    QWORD PTR [rbp-0x18],rdx
  422937:	mov    QWORD PTR [rbp-0x20],rcx
  42293b:	mov    DWORD PTR [rbp-0x24],r8d
  42293f:	mov    rax,QWORD PTR [rbp-0x8]
  422943:	mov    edx,0x48
  422948:	mov    esi,0x0
  42294d:	mov    rdi,rax
  422950:	call   405090 <memset@plt>
  422955:	mov    rax,QWORD PTR [rbp-0x8]
  422959:	mov    rdx,QWORD PTR [rbp-0x10]
  42295d:	mov    QWORD PTR [rax],rdx
  422960:	mov    rax,QWORD PTR [rbp-0x8]
  422964:	mov    rdx,QWORD PTR [rbp-0x18]
  422968:	mov    QWORD PTR [rax+0x8],rdx
  42296c:	mov    rax,QWORD PTR [rbp-0x8]
  422970:	mov    DWORD PTR [rax+0x18],0x1
  422977:	mov    rax,QWORD PTR [rbp-0x8]
  42297b:	mov    edx,DWORD PTR [rbp-0x24]
  42297e:	mov    DWORD PTR [rax+0x10],edx
  422981:	mov    rax,QWORD PTR [rbp-0x8]
  422985:	mov    rdx,QWORD PTR [rbp-0x18]
  422989:	mov    QWORD PTR [rax+0x28],rdx
  42298d:	mov    rax,QWORD PTR [rbp-0x8]
  422991:	mov    rdx,QWORD PTR [rbp-0x20]
  422995:	mov    QWORD PTR [rax+0x30],rdx
  422999:	mov    rax,QWORD PTR [rbp-0x8]
  42299d:	mov    rdx,QWORD PTR [rbp-0x18]
  4229a1:	mov    QWORD PTR [rax+0x38],rdx
  4229a5:	nop
  4229a6:	leave  
  4229a7:	ret    
  4229a8:	push   rbp
  4229a9:	mov    rbp,rsp
  4229ac:	sub    rsp,0x20
  4229b0:	mov    QWORD PTR [rbp-0x8],rdi
  4229b4:	mov    QWORD PTR [rbp-0x10],rsi
  4229b8:	mov    QWORD PTR [rbp-0x18],rdx
  4229bc:	mov    rdx,QWORD PTR [rbp-0x18]
  4229c0:	mov    rax,QWORD PTR [rbp-0x10]
  4229c4:	sub    rdx,rax
  4229c7:	mov    rax,rdx
  4229ca:	cmp    rax,0x1
  4229ce:	jle    422a05 <flatcc_verify_union_vector_field@@Base+0x2fc>
  4229d0:	mov    rax,QWORD PTR [rbp-0x10]
  4229d4:	movzx  eax,BYTE PTR [rax]
  4229d7:	cmp    al,0x20
  4229d9:	jle    4229e1 <flatcc_verify_union_vector_field@@Base+0x2d8>
  4229db:	mov    rax,QWORD PTR [rbp-0x10]
  4229df:	jmp    422a1c <flatcc_verify_union_vector_field@@Base+0x313>
  4229e1:	mov    rax,QWORD PTR [rbp-0x10]
  4229e5:	movzx  eax,BYTE PTR [rax]
  4229e8:	cmp    al,0x20
  4229ea:	jne    422a05 <flatcc_verify_union_vector_field@@Base+0x2fc>
  4229ec:	mov    rax,QWORD PTR [rbp-0x10]
  4229f0:	add    rax,0x1
  4229f4:	movzx  eax,BYTE PTR [rax]
  4229f7:	cmp    al,0x20
  4229f9:	jle    422a05 <flatcc_verify_union_vector_field@@Base+0x2fc>
  4229fb:	mov    rax,QWORD PTR [rbp-0x10]
  4229ff:	add    rax,0x1
  422a03:	jmp    422a1c <flatcc_verify_union_vector_field@@Base+0x313>
  422a05:	mov    rdx,QWORD PTR [rbp-0x18]
  422a09:	mov    rcx,QWORD PTR [rbp-0x10]
  422a0d:	mov    rax,QWORD PTR [rbp-0x8]
  422a11:	mov    rsi,rcx
  422a14:	mov    rdi,rax
  422a17:	call   42675a <flatcc_json_parser_space_ext@@Base>
  422a1c:	leave  
  422a1d:	ret    
  422a1e:	push   rbp
  422a1f:	mov    rbp,rsp
  422a22:	sub    rsp,0x20
  422a26:	mov    QWORD PTR [rbp-0x8],rdi
  422a2a:	mov    QWORD PTR [rbp-0x10],rsi
  422a2e:	mov    QWORD PTR [rbp-0x18],rdx
  422a32:	mov    rax,QWORD PTR [rbp-0x10]
  422a36:	cmp    rax,QWORD PTR [rbp-0x18]
  422a3a:	je     422a47 <flatcc_verify_union_vector_field@@Base+0x33e>
  422a3c:	mov    rax,QWORD PTR [rbp-0x10]
  422a40:	movzx  eax,BYTE PTR [rax]
  422a43:	cmp    al,0x22
  422a45:	je     422a62 <flatcc_verify_union_vector_field@@Base+0x359>
  422a47:	mov    rdx,QWORD PTR [rbp-0x18]
  422a4b:	mov    rsi,QWORD PTR [rbp-0x10]
  422a4f:	mov    rax,QWORD PTR [rbp-0x8]
  422a53:	mov    ecx,0x10
  422a58:	mov    rdi,rax
  422a5b:	call   42665a <flatcc_json_parser_set_error@@Base>
  422a60:	jmp    422a6b <flatcc_verify_union_vector_field@@Base+0x362>
  422a62:	add    QWORD PTR [rbp-0x10],0x1
  422a67:	mov    rax,QWORD PTR [rbp-0x10]
  422a6b:	leave  
  422a6c:	ret    
  422a6d:	push   rbp
  422a6e:	mov    rbp,rsp
  422a71:	sub    rsp,0x20
  422a75:	mov    QWORD PTR [rbp-0x8],rdi
  422a79:	mov    QWORD PTR [rbp-0x10],rsi
  422a7d:	mov    QWORD PTR [rbp-0x18],rdx
  422a81:	mov    rax,QWORD PTR [rbp-0x10]
  422a85:	cmp    rax,QWORD PTR [rbp-0x18]
  422a89:	je     422a96 <flatcc_verify_union_vector_field@@Base+0x38d>
  422a8b:	mov    rax,QWORD PTR [rbp-0x10]
  422a8f:	movzx  eax,BYTE PTR [rax]
  422a92:	cmp    al,0x22
  422a94:	je     422ab1 <flatcc_verify_union_vector_field@@Base+0x3a8>
  422a96:	mov    rdx,QWORD PTR [rbp-0x18]
  422a9a:	mov    rsi,QWORD PTR [rbp-0x10]
  422a9e:	mov    rax,QWORD PTR [rbp-0x8]
  422aa2:	mov    ecx,0x14
  422aa7:	mov    rdi,rax
  422aaa:	call   42665a <flatcc_json_parser_set_error@@Base>
  422aaf:	jmp    422aba <flatcc_verify_union_vector_field@@Base+0x3b1>
  422ab1:	add    QWORD PTR [rbp-0x10],0x1
  422ab6:	mov    rax,QWORD PTR [rbp-0x10]
  422aba:	leave  
  422abb:	ret    
  422abc:	push   rbp
  422abd:	mov    rbp,rsp
  422ac0:	sub    rsp,0x20
  422ac4:	mov    QWORD PTR [rbp-0x8],rdi
  422ac8:	mov    QWORD PTR [rbp-0x10],rsi
  422acc:	mov    QWORD PTR [rbp-0x18],rdx
  422ad0:	mov    rax,QWORD PTR [rbp-0x10]
  422ad4:	cmp    rax,QWORD PTR [rbp-0x18]
  422ad8:	jne    422ae0 <flatcc_verify_union_vector_field@@Base+0x3d7>
  422ada:	mov    rax,QWORD PTR [rbp-0x10]
  422ade:	jmp    422b32 <flatcc_verify_union_vector_field@@Base+0x429>
  422ae0:	mov    rax,QWORD PTR [rbp-0x10]
  422ae4:	movzx  eax,BYTE PTR [rax]
  422ae7:	cmp    al,0x22
  422ae9:	jne    422afd <flatcc_verify_union_vector_field@@Base+0x3f4>
  422aeb:	add    QWORD PTR [rbp-0x10],0x1
  422af0:	mov    rax,QWORD PTR [rbp-0x8]
  422af4:	mov    DWORD PTR [rax+0x14],0x0
  422afb:	jmp    422b2e <flatcc_verify_union_vector_field@@Base+0x425>
  422afd:	mov    rax,QWORD PTR [rbp-0x10]
  422b01:	movzx  eax,BYTE PTR [rax]
  422b04:	cmp    al,0x2e
  422b06:	jne    422b23 <flatcc_verify_union_vector_field@@Base+0x41a>
  422b08:	mov    rdx,QWORD PTR [rbp-0x18]
  422b0c:	mov    rsi,QWORD PTR [rbp-0x10]
  422b10:	mov    rax,QWORD PTR [rbp-0x8]
  422b14:	mov    ecx,0x5
  422b19:	mov    rdi,rax
  422b1c:	call   42665a <flatcc_json_parser_set_error@@Base>
  422b21:	jmp    422b32 <flatcc_verify_union_vector_field@@Base+0x429>
  422b23:	mov    rax,QWORD PTR [rbp-0x8]
  422b27:	mov    DWORD PTR [rax+0x14],0x1
  422b2e:	mov    rax,QWORD PTR [rbp-0x10]
  422b32:	leave  
  422b33:	ret    
  422b34:	push   rbp
  422b35:	mov    rbp,rsp
  422b38:	sub    rsp,0x30
  422b3c:	mov    QWORD PTR [rbp-0x18],rdi
  422b40:	mov    QWORD PTR [rbp-0x20],rsi
  422b44:	mov    QWORD PTR [rbp-0x28],rdx
  422b48:	mov    BYTE PTR [rbp-0x2],0x0
  422b4c:	mov    rax,QWORD PTR [rbp-0x18]
  422b50:	mov    eax,DWORD PTR [rax+0x14]
  422b53:	test   eax,eax
  422b55:	je     422c0f <flatcc_verify_union_vector_field@@Base+0x506>
  422b5b:	jmp    422ba9 <flatcc_verify_union_vector_field@@Base+0x4a0>
  422b5d:	mov    rax,QWORD PTR [rbp-0x20]
  422b61:	movzx  eax,BYTE PTR [rax]
  422b64:	mov    BYTE PTR [rbp-0x1],al
  422b67:	movzx  eax,BYTE PTR [rbp-0x1]
  422b6b:	mov    BYTE PTR [rbp-0x2],al
  422b6e:	cmp    BYTE PTR [rbp-0x1],0x5f
  422b72:	je     422b8c <flatcc_verify_union_vector_field@@Base+0x483>
  422b74:	cmp    BYTE PTR [rbp-0x1],0x2e
  422b78:	je     422b8c <flatcc_verify_union_vector_field@@Base+0x483>
  422b7a:	cmp    BYTE PTR [rbp-0x1],0x0
  422b7e:	js     422b8c <flatcc_verify_union_vector_field@@Base+0x483>
  422b80:	cmp    BYTE PTR [rbp-0x1],0x2f
  422b84:	jle    422b93 <flatcc_verify_union_vector_field@@Base+0x48a>
  422b86:	cmp    BYTE PTR [rbp-0x1],0x39
  422b8a:	jg     422b93 <flatcc_verify_union_vector_field@@Base+0x48a>
  422b8c:	add    QWORD PTR [rbp-0x20],0x1
  422b91:	jmp    422ba9 <flatcc_verify_union_vector_field@@Base+0x4a0>
  422b93:	or     BYTE PTR [rbp-0x1],0x20
  422b97:	cmp    BYTE PTR [rbp-0x1],0x60
  422b9b:	jle    422bc0 <flatcc_verify_union_vector_field@@Base+0x4b7>
  422b9d:	cmp    BYTE PTR [rbp-0x1],0x7a
  422ba1:	jg     422bc0 <flatcc_verify_union_vector_field@@Base+0x4b7>
  422ba3:	add    QWORD PTR [rbp-0x20],0x1
  422ba8:	nop
  422ba9:	mov    rax,QWORD PTR [rbp-0x20]
  422bad:	cmp    rax,QWORD PTR [rbp-0x28]
  422bb1:	je     422bc1 <flatcc_verify_union_vector_field@@Base+0x4b8>
  422bb3:	mov    rax,QWORD PTR [rbp-0x20]
  422bb7:	movzx  eax,BYTE PTR [rax]
  422bba:	cmp    al,0x20
  422bbc:	jg     422b5d <flatcc_verify_union_vector_field@@Base+0x454>
  422bbe:	jmp    422bc1 <flatcc_verify_union_vector_field@@Base+0x4b8>
  422bc0:	nop
  422bc1:	cmp    BYTE PTR [rbp-0x2],0x2e
  422bc5:	jne    422c5c <flatcc_verify_union_vector_field@@Base+0x553>
  422bcb:	mov    rdx,QWORD PTR [rbp-0x28]
  422bcf:	mov    rsi,QWORD PTR [rbp-0x20]
  422bd3:	mov    rax,QWORD PTR [rbp-0x18]
  422bd7:	mov    ecx,0x5
  422bdc:	mov    rdi,rax
  422bdf:	call   42665a <flatcc_json_parser_set_error@@Base>
  422be4:	jmp    422c60 <flatcc_verify_union_vector_field@@Base+0x557>
  422be6:	mov    rax,QWORD PTR [rbp-0x20]
  422bea:	movzx  eax,BYTE PTR [rax]
  422bed:	cmp    al,0x5c
  422bef:	jne    422c0a <flatcc_verify_union_vector_field@@Base+0x501>
  422bf1:	mov    rdx,QWORD PTR [rbp-0x28]
  422bf5:	mov    rax,QWORD PTR [rbp-0x20]
  422bf9:	sub    rdx,rax
  422bfc:	mov    rax,rdx
  422bff:	cmp    rax,0x1
  422c03:	jle    422c26 <flatcc_verify_union_vector_field@@Base+0x51d>
  422c05:	add    QWORD PTR [rbp-0x20],0x1
  422c0a:	add    QWORD PTR [rbp-0x20],0x1
  422c0f:	mov    rax,QWORD PTR [rbp-0x20]
  422c13:	cmp    rax,QWORD PTR [rbp-0x28]
  422c17:	je     422c27 <flatcc_verify_union_vector_field@@Base+0x51e>
  422c19:	mov    rax,QWORD PTR [rbp-0x20]
  422c1d:	movzx  eax,BYTE PTR [rax]
  422c20:	cmp    al,0x22
  422c22:	jne    422be6 <flatcc_verify_union_vector_field@@Base+0x4dd>
  422c24:	jmp    422c27 <flatcc_verify_union_vector_field@@Base+0x51e>
  422c26:	nop
  422c27:	mov    rax,QWORD PTR [rbp-0x20]
  422c2b:	cmp    rax,QWORD PTR [rbp-0x28]
  422c2f:	je     422c3c <flatcc_verify_union_vector_field@@Base+0x533>
  422c31:	mov    rax,QWORD PTR [rbp-0x20]
  422c35:	movzx  eax,BYTE PTR [rax]
  422c38:	cmp    al,0x22
  422c3a:	je     422c57 <flatcc_verify_union_vector_field@@Base+0x54e>
  422c3c:	mov    rdx,QWORD PTR [rbp-0x28]
  422c40:	mov    rsi,QWORD PTR [rbp-0x20]
  422c44:	mov    rax,QWORD PTR [rbp-0x18]
  422c48:	mov    ecx,0x14
  422c4d:	mov    rdi,rax
  422c50:	call   42665a <flatcc_json_parser_set_error@@Base>
  422c55:	jmp    422c60 <flatcc_verify_union_vector_field@@Base+0x557>
  422c57:	add    QWORD PTR [rbp-0x20],0x1
  422c5c:	mov    rax,QWORD PTR [rbp-0x20]
  422c60:	leave  
  422c61:	ret    
  422c62:	push   rbp
  422c63:	mov    rbp,rsp
  422c66:	sub    rsp,0x20
  422c6a:	mov    QWORD PTR [rbp-0x8],rdi
  422c6e:	mov    QWORD PTR [rbp-0x10],rsi
  422c72:	mov    QWORD PTR [rbp-0x18],rdx
  422c76:	mov    rdx,QWORD PTR [rbp-0x18]
  422c7a:	mov    rcx,QWORD PTR [rbp-0x10]
  422c7e:	mov    rax,QWORD PTR [rbp-0x8]
  422c82:	mov    rsi,rcx
  422c85:	mov    rdi,rax
  422c88:	call   422abc <flatcc_verify_union_vector_field@@Base+0x3b3>
  422c8d:	mov    QWORD PTR [rbp-0x10],rax
  422c91:	mov    rax,QWORD PTR [rbp-0x8]
  422c95:	mov    eax,DWORD PTR [rax+0x14]
  422c98:	test   eax,eax
  422c9a:	jne    422cb7 <flatcc_verify_union_vector_field@@Base+0x5ae>
  422c9c:	mov    rdx,QWORD PTR [rbp-0x18]
  422ca0:	mov    rcx,QWORD PTR [rbp-0x10]
  422ca4:	mov    rax,QWORD PTR [rbp-0x8]
  422ca8:	mov    rsi,rcx
  422cab:	mov    rdi,rax
  422cae:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422cb3:	mov    QWORD PTR [rbp-0x10],rax
  422cb7:	mov    rax,QWORD PTR [rbp-0x10]
  422cbb:	leave  
  422cbc:	ret    
  422cbd:	push   rbp
  422cbe:	mov    rbp,rsp
  422cc1:	sub    rsp,0x20
  422cc5:	mov    QWORD PTR [rbp-0x8],rdi
  422cc9:	mov    QWORD PTR [rbp-0x10],rsi
  422ccd:	mov    QWORD PTR [rbp-0x18],rdx
  422cd1:	mov    QWORD PTR [rbp-0x20],rcx
  422cd5:	mov    rdx,QWORD PTR [rbp-0x18]
  422cd9:	mov    rcx,QWORD PTR [rbp-0x10]
  422cdd:	mov    rax,QWORD PTR [rbp-0x8]
  422ce1:	mov    rsi,rcx
  422ce4:	mov    rdi,rax
  422ce7:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422cec:	mov    QWORD PTR [rbp-0x10],rax
  422cf0:	mov    rax,QWORD PTR [rbp-0x10]
  422cf4:	cmp    rax,QWORD PTR [rbp-0x18]
  422cf8:	jne    422d0d <flatcc_verify_union_vector_field@@Base+0x604>
  422cfa:	mov    rax,QWORD PTR [rbp-0x20]
  422cfe:	mov    DWORD PTR [rax],0x0
  422d04:	mov    rax,QWORD PTR [rbp-0x10]
  422d08:	jmp    422df9 <flatcc_verify_union_vector_field@@Base+0x6f0>
  422d0d:	mov    rax,QWORD PTR [rbp-0x10]
  422d11:	movzx  eax,BYTE PTR [rax]
  422d14:	cmp    al,0x2c
  422d16:	je     422d6b <flatcc_verify_union_vector_field@@Base+0x662>
  422d18:	mov    rax,QWORD PTR [rbp-0x20]
  422d1c:	mov    DWORD PTR [rax],0x0
  422d22:	mov    rax,QWORD PTR [rbp-0x10]
  422d26:	movzx  eax,BYTE PTR [rax]
  422d29:	cmp    al,0x7d
  422d2b:	je     422d4b <flatcc_verify_union_vector_field@@Base+0x642>
  422d2d:	mov    rdx,QWORD PTR [rbp-0x18]
  422d31:	mov    rsi,QWORD PTR [rbp-0x10]
  422d35:	mov    rax,QWORD PTR [rbp-0x8]
  422d39:	mov    ecx,0xa
  422d3e:	mov    rdi,rax
  422d41:	call   42665a <flatcc_json_parser_set_error@@Base>
  422d46:	jmp    422df9 <flatcc_verify_union_vector_field@@Base+0x6f0>
  422d4b:	mov    rax,QWORD PTR [rbp-0x10]
  422d4f:	lea    rcx,[rax+0x1]
  422d53:	mov    rdx,QWORD PTR [rbp-0x18]
  422d57:	mov    rax,QWORD PTR [rbp-0x8]
  422d5b:	mov    rsi,rcx
  422d5e:	mov    rdi,rax
  422d61:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422d66:	jmp    422df9 <flatcc_verify_union_vector_field@@Base+0x6f0>
  422d6b:	mov    rax,QWORD PTR [rbp-0x10]
  422d6f:	lea    rcx,[rax+0x1]
  422d73:	mov    rdx,QWORD PTR [rbp-0x18]
  422d77:	mov    rax,QWORD PTR [rbp-0x8]
  422d7b:	mov    rsi,rcx
  422d7e:	mov    rdi,rax
  422d81:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422d86:	mov    QWORD PTR [rbp-0x10],rax
  422d8a:	mov    rax,QWORD PTR [rbp-0x10]
  422d8e:	cmp    rax,QWORD PTR [rbp-0x18]
  422d92:	jne    422db9 <flatcc_verify_union_vector_field@@Base+0x6b0>
  422d94:	mov    rax,QWORD PTR [rbp-0x20]
  422d98:	mov    DWORD PTR [rax],0x0
  422d9e:	mov    rdx,QWORD PTR [rbp-0x18]
  422da2:	mov    rsi,QWORD PTR [rbp-0x10]
  422da6:	mov    rax,QWORD PTR [rbp-0x8]
  422daa:	mov    ecx,0xa
  422daf:	mov    rdi,rax
  422db2:	call   42665a <flatcc_json_parser_set_error@@Base>
  422db7:	jmp    422df9 <flatcc_verify_union_vector_field@@Base+0x6f0>
  422db9:	mov    rax,QWORD PTR [rbp-0x10]
  422dbd:	movzx  eax,BYTE PTR [rax]
  422dc0:	cmp    al,0x7d
  422dc2:	jne    422deb <flatcc_verify_union_vector_field@@Base+0x6e2>
  422dc4:	mov    rax,QWORD PTR [rbp-0x20]
  422dc8:	mov    DWORD PTR [rax],0x0
  422dce:	mov    rax,QWORD PTR [rbp-0x10]
  422dd2:	lea    rcx,[rax+0x1]
  422dd6:	mov    rdx,QWORD PTR [rbp-0x18]
  422dda:	mov    rax,QWORD PTR [rbp-0x8]
  422dde:	mov    rsi,rcx
  422de1:	mov    rdi,rax
  422de4:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422de9:	jmp    422df9 <flatcc_verify_union_vector_field@@Base+0x6f0>
  422deb:	mov    rax,QWORD PTR [rbp-0x20]
  422def:	mov    DWORD PTR [rax],0x1
  422df5:	mov    rax,QWORD PTR [rbp-0x10]
  422df9:	leave  
  422dfa:	ret    
  422dfb:	push   rbp
  422dfc:	mov    rbp,rsp
  422dff:	sub    rsp,0x20
  422e03:	mov    QWORD PTR [rbp-0x8],rdi
  422e07:	mov    QWORD PTR [rbp-0x10],rsi
  422e0b:	mov    QWORD PTR [rbp-0x18],rdx
  422e0f:	mov    QWORD PTR [rbp-0x20],rcx
  422e13:	mov    rax,QWORD PTR [rbp-0x10]
  422e17:	cmp    rax,QWORD PTR [rbp-0x18]
  422e1b:	je     422e28 <flatcc_verify_union_vector_field@@Base+0x71f>
  422e1d:	mov    rax,QWORD PTR [rbp-0x10]
  422e21:	movzx  eax,BYTE PTR [rax]
  422e24:	cmp    al,0x5b
  422e26:	je     422e4d <flatcc_verify_union_vector_field@@Base+0x744>
  422e28:	mov    rax,QWORD PTR [rbp-0x20]
  422e2c:	mov    DWORD PTR [rax],0x0
  422e32:	mov    rdx,QWORD PTR [rbp-0x18]
  422e36:	mov    rsi,QWORD PTR [rbp-0x10]
  422e3a:	mov    rax,QWORD PTR [rbp-0x8]
  422e3e:	mov    ecx,0x16
  422e43:	mov    rdi,rax
  422e46:	call   42665a <flatcc_json_parser_set_error@@Base>
  422e4b:	jmp    422eb6 <flatcc_verify_union_vector_field@@Base+0x7ad>
  422e4d:	mov    rax,QWORD PTR [rbp-0x10]
  422e51:	lea    rcx,[rax+0x1]
  422e55:	mov    rdx,QWORD PTR [rbp-0x18]
  422e59:	mov    rax,QWORD PTR [rbp-0x8]
  422e5d:	mov    rsi,rcx
  422e60:	mov    rdi,rax
  422e63:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422e68:	mov    QWORD PTR [rbp-0x10],rax
  422e6c:	mov    rax,QWORD PTR [rbp-0x10]
  422e70:	cmp    rax,QWORD PTR [rbp-0x18]
  422e74:	je     422ea8 <flatcc_verify_union_vector_field@@Base+0x79f>
  422e76:	mov    rax,QWORD PTR [rbp-0x10]
  422e7a:	movzx  eax,BYTE PTR [rax]
  422e7d:	cmp    al,0x5d
  422e7f:	jne    422ea8 <flatcc_verify_union_vector_field@@Base+0x79f>
  422e81:	mov    rax,QWORD PTR [rbp-0x20]
  422e85:	mov    DWORD PTR [rax],0x0
  422e8b:	mov    rax,QWORD PTR [rbp-0x10]
  422e8f:	lea    rcx,[rax+0x1]
  422e93:	mov    rdx,QWORD PTR [rbp-0x18]
  422e97:	mov    rax,QWORD PTR [rbp-0x8]
  422e9b:	mov    rsi,rcx
  422e9e:	mov    rdi,rax
  422ea1:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422ea6:	jmp    422eb6 <flatcc_verify_union_vector_field@@Base+0x7ad>
  422ea8:	mov    rax,QWORD PTR [rbp-0x20]
  422eac:	mov    DWORD PTR [rax],0x1
  422eb2:	mov    rax,QWORD PTR [rbp-0x10]
  422eb6:	leave  
  422eb7:	ret    
  422eb8:	push   rbp
  422eb9:	mov    rbp,rsp
  422ebc:	sub    rsp,0x20
  422ec0:	mov    QWORD PTR [rbp-0x8],rdi
  422ec4:	mov    QWORD PTR [rbp-0x10],rsi
  422ec8:	mov    QWORD PTR [rbp-0x18],rdx
  422ecc:	mov    QWORD PTR [rbp-0x20],rcx
  422ed0:	mov    rdx,QWORD PTR [rbp-0x18]
  422ed4:	mov    rcx,QWORD PTR [rbp-0x10]
  422ed8:	mov    rax,QWORD PTR [rbp-0x8]
  422edc:	mov    rsi,rcx
  422edf:	mov    rdi,rax
  422ee2:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422ee7:	mov    QWORD PTR [rbp-0x10],rax
  422eeb:	mov    rax,QWORD PTR [rbp-0x10]
  422eef:	cmp    rax,QWORD PTR [rbp-0x18]
  422ef3:	jne    422f08 <flatcc_verify_union_vector_field@@Base+0x7ff>
  422ef5:	mov    rax,QWORD PTR [rbp-0x20]
  422ef9:	mov    DWORD PTR [rax],0x0
  422eff:	mov    rax,QWORD PTR [rbp-0x10]
  422f03:	jmp    422ff4 <flatcc_verify_union_vector_field@@Base+0x8eb>
  422f08:	mov    rax,QWORD PTR [rbp-0x10]
  422f0c:	movzx  eax,BYTE PTR [rax]
  422f0f:	cmp    al,0x2c
  422f11:	je     422f66 <flatcc_verify_union_vector_field@@Base+0x85d>
  422f13:	mov    rax,QWORD PTR [rbp-0x20]
  422f17:	mov    DWORD PTR [rax],0x0
  422f1d:	mov    rax,QWORD PTR [rbp-0x10]
  422f21:	movzx  eax,BYTE PTR [rax]
  422f24:	cmp    al,0x5d
  422f26:	je     422f46 <flatcc_verify_union_vector_field@@Base+0x83d>
  422f28:	mov    rdx,QWORD PTR [rbp-0x18]
  422f2c:	mov    rsi,QWORD PTR [rbp-0x10]
  422f30:	mov    rax,QWORD PTR [rbp-0x8]
  422f34:	mov    ecx,0x9
  422f39:	mov    rdi,rax
  422f3c:	call   42665a <flatcc_json_parser_set_error@@Base>
  422f41:	jmp    422ff4 <flatcc_verify_union_vector_field@@Base+0x8eb>
  422f46:	mov    rax,QWORD PTR [rbp-0x10]
  422f4a:	lea    rcx,[rax+0x1]
  422f4e:	mov    rdx,QWORD PTR [rbp-0x18]
  422f52:	mov    rax,QWORD PTR [rbp-0x8]
  422f56:	mov    rsi,rcx
  422f59:	mov    rdi,rax
  422f5c:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422f61:	jmp    422ff4 <flatcc_verify_union_vector_field@@Base+0x8eb>
  422f66:	mov    rax,QWORD PTR [rbp-0x10]
  422f6a:	lea    rcx,[rax+0x1]
  422f6e:	mov    rdx,QWORD PTR [rbp-0x18]
  422f72:	mov    rax,QWORD PTR [rbp-0x8]
  422f76:	mov    rsi,rcx
  422f79:	mov    rdi,rax
  422f7c:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422f81:	mov    QWORD PTR [rbp-0x10],rax
  422f85:	mov    rax,QWORD PTR [rbp-0x10]
  422f89:	cmp    rax,QWORD PTR [rbp-0x18]
  422f8d:	jne    422fb4 <flatcc_verify_union_vector_field@@Base+0x8ab>
  422f8f:	mov    rax,QWORD PTR [rbp-0x20]
  422f93:	mov    DWORD PTR [rax],0x0
  422f99:	mov    rdx,QWORD PTR [rbp-0x18]
  422f9d:	mov    rsi,QWORD PTR [rbp-0x10]
  422fa1:	mov    rax,QWORD PTR [rbp-0x8]
  422fa5:	mov    ecx,0x9
  422faa:	mov    rdi,rax
  422fad:	call   42665a <flatcc_json_parser_set_error@@Base>
  422fb2:	jmp    422ff4 <flatcc_verify_union_vector_field@@Base+0x8eb>
  422fb4:	mov    rax,QWORD PTR [rbp-0x10]
  422fb8:	movzx  eax,BYTE PTR [rax]
  422fbb:	cmp    al,0x5d
  422fbd:	jne    422fe6 <flatcc_verify_union_vector_field@@Base+0x8dd>
  422fbf:	mov    rax,QWORD PTR [rbp-0x20]
  422fc3:	mov    DWORD PTR [rax],0x0
  422fc9:	mov    rax,QWORD PTR [rbp-0x10]
  422fcd:	lea    rcx,[rax+0x1]
  422fd1:	mov    rdx,QWORD PTR [rbp-0x18]
  422fd5:	mov    rax,QWORD PTR [rbp-0x8]
  422fd9:	mov    rsi,rcx
  422fdc:	mov    rdi,rax
  422fdf:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  422fe4:	jmp    422ff4 <flatcc_verify_union_vector_field@@Base+0x8eb>
  422fe6:	mov    rax,QWORD PTR [rbp-0x20]
  422fea:	mov    DWORD PTR [rax],0x1
  422ff0:	mov    rax,QWORD PTR [rbp-0x10]
  422ff4:	leave  
  422ff5:	ret    
  422ff6:	push   rbp
  422ff7:	mov    rbp,rsp
  422ffa:	sub    rsp,0x30
  422ffe:	mov    QWORD PTR [rbp-0x8],rdi
  423002:	mov    QWORD PTR [rbp-0x10],rsi
  423006:	mov    QWORD PTR [rbp-0x18],rdx
  42300a:	mov    DWORD PTR [rbp-0x1c],ecx
  42300d:	mov    QWORD PTR [rbp-0x28],r8
  423011:	mov    QWORD PTR [rbp-0x30],r9
  423015:	cmp    DWORD PTR [rbp-0x1c],0x0
  423019:	je     423036 <flatcc_verify_union_vector_field@@Base+0x92d>
  42301b:	mov    rdx,QWORD PTR [rbp-0x18]
  42301f:	mov    rsi,QWORD PTR [rbp-0x10]
  423023:	mov    rax,QWORD PTR [rbp-0x8]
  423027:	mov    ecx,0x8
  42302c:	mov    rdi,rax
  42302f:	call   42665a <flatcc_json_parser_set_error@@Base>
  423034:	jmp    423045 <flatcc_verify_union_vector_field@@Base+0x93c>
  423036:	mov    rax,QWORD PTR [rbp-0x30]
  42303a:	mov    rdx,QWORD PTR [rbp-0x28]
  42303e:	mov    QWORD PTR [rax],rdx
  423041:	mov    rax,QWORD PTR [rbp-0x10]
  423045:	leave  
  423046:	ret    
  423047:	push   rbp
  423048:	mov    rbp,rsp
  42304b:	sub    rsp,0x30
  42304f:	mov    QWORD PTR [rbp-0x8],rdi
  423053:	mov    QWORD PTR [rbp-0x10],rsi
  423057:	mov    QWORD PTR [rbp-0x18],rdx
  42305b:	mov    DWORD PTR [rbp-0x1c],ecx
  42305e:	mov    QWORD PTR [rbp-0x28],r8
  423062:	mov    QWORD PTR [rbp-0x30],r9
  423066:	cmp    DWORD PTR [rbp-0x1c],0x0
  42306a:	je     423087 <flatcc_verify_union_vector_field@@Base+0x97e>
  42306c:	mov    rdx,QWORD PTR [rbp-0x18]
  423070:	mov    rsi,QWORD PTR [rbp-0x10]
  423074:	mov    rax,QWORD PTR [rbp-0x8]
  423078:	mov    ecx,0x8
  42307d:	mov    rdi,rax
  423080:	call   42665a <flatcc_json_parser_set_error@@Base>
  423085:	jmp    42309b <flatcc_verify_union_vector_field@@Base+0x992>
  423087:	cmp    QWORD PTR [rbp-0x28],0x0
  42308c:	setne  al
  42308f:	mov    edx,eax
  423091:	mov    rax,QWORD PTR [rbp-0x30]
  423095:	mov    BYTE PTR [rax],dl
  423097:	mov    rax,QWORD PTR [rbp-0x10]
  42309b:	leave  
  42309c:	ret    
  42309d:	push   rbp
  42309e:	mov    rbp,rsp
  4230a1:	sub    rsp,0x30
  4230a5:	mov    QWORD PTR [rbp-0x8],rdi
  4230a9:	mov    QWORD PTR [rbp-0x10],rsi
  4230ad:	mov    QWORD PTR [rbp-0x18],rdx
  4230b1:	mov    DWORD PTR [rbp-0x1c],ecx
  4230b4:	mov    QWORD PTR [rbp-0x28],r8
  4230b8:	mov    QWORD PTR [rbp-0x30],r9
  4230bc:	cmp    DWORD PTR [rbp-0x1c],0x0
  4230c0:	je     4230dd <flatcc_verify_union_vector_field@@Base+0x9d4>
  4230c2:	mov    rdx,QWORD PTR [rbp-0x18]
  4230c6:	mov    rsi,QWORD PTR [rbp-0x10]
  4230ca:	mov    rax,QWORD PTR [rbp-0x8]
  4230ce:	mov    ecx,0x8
  4230d3:	mov    rdi,rax
  4230d6:	call   42665a <flatcc_json_parser_set_error@@Base>
  4230db:	jmp    423113 <flatcc_verify_union_vector_field@@Base+0xa0a>
  4230dd:	mov    eax,0xffffffff
  4230e2:	cmp    QWORD PTR [rbp-0x28],rax
  4230e6:	jbe    423103 <flatcc_verify_union_vector_field@@Base+0x9fa>
  4230e8:	mov    rdx,QWORD PTR [rbp-0x18]
  4230ec:	mov    rsi,QWORD PTR [rbp-0x10]
  4230f0:	mov    rax,QWORD PTR [rbp-0x8]
  4230f4:	mov    ecx,0x7
  4230f9:	mov    rdi,rax
  4230fc:	call   42665a <flatcc_json_parser_set_error@@Base>
  423101:	jmp    423113 <flatcc_verify_union_vector_field@@Base+0xa0a>
  423103:	mov    rax,QWORD PTR [rbp-0x28]
  423107:	mov    edx,eax
  423109:	mov    rax,QWORD PTR [rbp-0x30]
  42310d:	mov    DWORD PTR [rax],edx
  42310f:	mov    rax,QWORD PTR [rbp-0x10]
  423113:	leave  
  423114:	ret    
  423115:	push   rbp
  423116:	mov    rbp,rsp
  423119:	sub    rsp,0x30
  42311d:	mov    QWORD PTR [rbp-0x8],rdi
  423121:	mov    QWORD PTR [rbp-0x10],rsi
  423125:	mov    QWORD PTR [rbp-0x18],rdx
  423129:	mov    DWORD PTR [rbp-0x1c],ecx
  42312c:	mov    QWORD PTR [rbp-0x28],r8
  423130:	mov    QWORD PTR [rbp-0x30],r9
  423134:	cmp    DWORD PTR [rbp-0x1c],0x0
  423138:	je     423155 <flatcc_verify_union_vector_field@@Base+0xa4c>
  42313a:	mov    rdx,QWORD PTR [rbp-0x18]
  42313e:	mov    rsi,QWORD PTR [rbp-0x10]
  423142:	mov    rax,QWORD PTR [rbp-0x8]
  423146:	mov    ecx,0x8
  42314b:	mov    rdi,rax
  42314e:	call   42665a <flatcc_json_parser_set_error@@Base>
  423153:	jmp    42318b <flatcc_verify_union_vector_field@@Base+0xa82>
  423155:	cmp    QWORD PTR [rbp-0x28],0xffff
  42315d:	jbe    42317a <flatcc_verify_union_vector_field@@Base+0xa71>
  42315f:	mov    rdx,QWORD PTR [rbp-0x18]
  423163:	mov    rsi,QWORD PTR [rbp-0x10]
  423167:	mov    rax,QWORD PTR [rbp-0x8]
  42316b:	mov    ecx,0x7
  423170:	mov    rdi,rax
  423173:	call   42665a <flatcc_json_parser_set_error@@Base>
  423178:	jmp    42318b <flatcc_verify_union_vector_field@@Base+0xa82>
  42317a:	mov    rax,QWORD PTR [rbp-0x28]
  42317e:	mov    edx,eax
  423180:	mov    rax,QWORD PTR [rbp-0x30]
  423184:	mov    WORD PTR [rax],dx
  423187:	mov    rax,QWORD PTR [rbp-0x10]
  42318b:	leave  
  42318c:	ret    
  42318d:	push   rbp
  42318e:	mov    rbp,rsp
  423191:	sub    rsp,0x30
  423195:	mov    QWORD PTR [rbp-0x8],rdi
  423199:	mov    QWORD PTR [rbp-0x10],rsi
  42319d:	mov    QWORD PTR [rbp-0x18],rdx
  4231a1:	mov    DWORD PTR [rbp-0x1c],ecx
  4231a4:	mov    QWORD PTR [rbp-0x28],r8
  4231a8:	mov    QWORD PTR [rbp-0x30],r9
  4231ac:	cmp    DWORD PTR [rbp-0x1c],0x0
  4231b0:	je     4231cd <flatcc_verify_union_vector_field@@Base+0xac4>
  4231b2:	mov    rdx,QWORD PTR [rbp-0x18]
  4231b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4231ba:	mov    rax,QWORD PTR [rbp-0x8]
  4231be:	mov    ecx,0x8
  4231c3:	mov    rdi,rax
  4231c6:	call   42665a <flatcc_json_parser_set_error@@Base>
  4231cb:	jmp    423202 <flatcc_verify_union_vector_field@@Base+0xaf9>
  4231cd:	cmp    QWORD PTR [rbp-0x28],0xff
  4231d5:	jbe    4231f2 <flatcc_verify_union_vector_field@@Base+0xae9>
  4231d7:	mov    rdx,QWORD PTR [rbp-0x18]
  4231db:	mov    rsi,QWORD PTR [rbp-0x10]
  4231df:	mov    rax,QWORD PTR [rbp-0x8]
  4231e3:	mov    ecx,0x7
  4231e8:	mov    rdi,rax
  4231eb:	call   42665a <flatcc_json_parser_set_error@@Base>
  4231f0:	jmp    423202 <flatcc_verify_union_vector_field@@Base+0xaf9>
  4231f2:	mov    rax,QWORD PTR [rbp-0x28]
  4231f6:	mov    edx,eax
  4231f8:	mov    rax,QWORD PTR [rbp-0x30]
  4231fc:	mov    BYTE PTR [rax],dl
  4231fe:	mov    rax,QWORD PTR [rbp-0x10]
  423202:	leave  
  423203:	ret    
  423204:	push   rbp
  423205:	mov    rbp,rsp
  423208:	sub    rsp,0x30
  42320c:	mov    QWORD PTR [rbp-0x8],rdi
  423210:	mov    QWORD PTR [rbp-0x10],rsi
  423214:	mov    QWORD PTR [rbp-0x18],rdx
  423218:	mov    DWORD PTR [rbp-0x1c],ecx
  42321b:	mov    QWORD PTR [rbp-0x28],r8
  42321f:	mov    QWORD PTR [rbp-0x30],r9
  423223:	cmp    DWORD PTR [rbp-0x1c],0x0
  423227:	je     423267 <flatcc_verify_union_vector_field@@Base+0xb5e>
  423229:	movabs rax,0x8000000000000000
  423233:	cmp    QWORD PTR [rbp-0x28],rax
  423237:	jbe    423254 <flatcc_verify_union_vector_field@@Base+0xb4b>
  423239:	mov    rdx,QWORD PTR [rbp-0x18]
  42323d:	mov    rsi,QWORD PTR [rbp-0x10]
  423241:	mov    rax,QWORD PTR [rbp-0x8]
  423245:	mov    ecx,0x8
  42324a:	mov    rdi,rax
  42324d:	call   42665a <flatcc_json_parser_set_error@@Base>
  423252:	jmp    42329a <flatcc_verify_union_vector_field@@Base+0xb91>
  423254:	mov    rax,QWORD PTR [rbp-0x28]
  423258:	neg    rax
  42325b:	mov    rdx,rax
  42325e:	mov    rax,QWORD PTR [rbp-0x30]
  423262:	mov    QWORD PTR [rax],rdx
  423265:	jmp    423296 <flatcc_verify_union_vector_field@@Base+0xb8d>
  423267:	mov    rax,QWORD PTR [rbp-0x28]
  42326b:	test   rax,rax
  42326e:	jns    42328b <flatcc_verify_union_vector_field@@Base+0xb82>
  423270:	mov    rdx,QWORD PTR [rbp-0x18]
  423274:	mov    rsi,QWORD PTR [rbp-0x10]
  423278:	mov    rax,QWORD PTR [rbp-0x8]
  42327c:	mov    ecx,0x7
  423281:	mov    rdi,rax
  423284:	call   42665a <flatcc_json_parser_set_error@@Base>
  423289:	jmp    42329a <flatcc_verify_union_vector_field@@Base+0xb91>
  42328b:	mov    rdx,QWORD PTR [rbp-0x28]
  42328f:	mov    rax,QWORD PTR [rbp-0x30]
  423293:	mov    QWORD PTR [rax],rdx
  423296:	mov    rax,QWORD PTR [rbp-0x10]
  42329a:	leave  
  42329b:	ret    
  42329c:	push   rbp
  42329d:	mov    rbp,rsp
  4232a0:	sub    rsp,0x30
  4232a4:	mov    QWORD PTR [rbp-0x8],rdi
  4232a8:	mov    QWORD PTR [rbp-0x10],rsi
  4232ac:	mov    QWORD PTR [rbp-0x18],rdx
  4232b0:	mov    DWORD PTR [rbp-0x1c],ecx
  4232b3:	mov    QWORD PTR [rbp-0x28],r8
  4232b7:	mov    QWORD PTR [rbp-0x30],r9
  4232bb:	cmp    DWORD PTR [rbp-0x1c],0x0
  4232bf:	je     4232f7 <flatcc_verify_union_vector_field@@Base+0xbee>
  4232c1:	mov    eax,0x80000000
  4232c6:	cmp    QWORD PTR [rbp-0x28],rax
  4232ca:	jbe    4232e7 <flatcc_verify_union_vector_field@@Base+0xbde>
  4232cc:	mov    rdx,QWORD PTR [rbp-0x18]
  4232d0:	mov    rsi,QWORD PTR [rbp-0x10]
  4232d4:	mov    rax,QWORD PTR [rbp-0x8]
  4232d8:	mov    ecx,0x8
  4232dd:	mov    rdi,rax
  4232e0:	call   42665a <flatcc_json_parser_set_error@@Base>
  4232e5:	jmp    42332c <flatcc_verify_union_vector_field@@Base+0xc23>
  4232e7:	mov    rax,QWORD PTR [rbp-0x28]
  4232eb:	neg    eax
  4232ed:	mov    edx,eax
  4232ef:	mov    rax,QWORD PTR [rbp-0x30]
  4232f3:	mov    DWORD PTR [rax],edx
  4232f5:	jmp    423328 <flatcc_verify_union_vector_field@@Base+0xc1f>
  4232f7:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  4232ff:	jbe    42331c <flatcc_verify_union_vector_field@@Base+0xc13>
  423301:	mov    rdx,QWORD PTR [rbp-0x18]
  423305:	mov    rsi,QWORD PTR [rbp-0x10]
  423309:	mov    rax,QWORD PTR [rbp-0x8]
  42330d:	mov    ecx,0x7
  423312:	mov    rdi,rax
  423315:	call   42665a <flatcc_json_parser_set_error@@Base>
  42331a:	jmp    42332c <flatcc_verify_union_vector_field@@Base+0xc23>
  42331c:	mov    rax,QWORD PTR [rbp-0x28]
  423320:	mov    edx,eax
  423322:	mov    rax,QWORD PTR [rbp-0x30]
  423326:	mov    DWORD PTR [rax],edx
  423328:	mov    rax,QWORD PTR [rbp-0x10]
  42332c:	leave  
  42332d:	ret    
  42332e:	push   rbp
  42332f:	mov    rbp,rsp
  423332:	sub    rsp,0x30
  423336:	mov    QWORD PTR [rbp-0x8],rdi
  42333a:	mov    QWORD PTR [rbp-0x10],rsi
  42333e:	mov    QWORD PTR [rbp-0x18],rdx
  423342:	mov    DWORD PTR [rbp-0x1c],ecx
  423345:	mov    QWORD PTR [rbp-0x28],r8
  423349:	mov    QWORD PTR [rbp-0x30],r9
  42334d:	cmp    DWORD PTR [rbp-0x1c],0x0
  423351:	je     423389 <flatcc_verify_union_vector_field@@Base+0xc80>
  423353:	cmp    QWORD PTR [rbp-0x28],0x8000
  42335b:	jbe    423378 <flatcc_verify_union_vector_field@@Base+0xc6f>
  42335d:	mov    rdx,QWORD PTR [rbp-0x18]
  423361:	mov    rsi,QWORD PTR [rbp-0x10]
  423365:	mov    rax,QWORD PTR [rbp-0x8]
  423369:	mov    ecx,0x8
  42336e:	mov    rdi,rax
  423371:	call   42665a <flatcc_json_parser_set_error@@Base>
  423376:	jmp    4233bf <flatcc_verify_union_vector_field@@Base+0xcb6>
  423378:	mov    rax,QWORD PTR [rbp-0x28]
  42337c:	neg    eax
  42337e:	mov    edx,eax
  423380:	mov    rax,QWORD PTR [rbp-0x30]
  423384:	mov    WORD PTR [rax],dx
  423387:	jmp    4233bb <flatcc_verify_union_vector_field@@Base+0xcb2>
  423389:	cmp    QWORD PTR [rbp-0x28],0x7fff
  423391:	jbe    4233ae <flatcc_verify_union_vector_field@@Base+0xca5>
  423393:	mov    rdx,QWORD PTR [rbp-0x18]
  423397:	mov    rsi,QWORD PTR [rbp-0x10]
  42339b:	mov    rax,QWORD PTR [rbp-0x8]
  42339f:	mov    ecx,0x7
  4233a4:	mov    rdi,rax
  4233a7:	call   42665a <flatcc_json_parser_set_error@@Base>
  4233ac:	jmp    4233bf <flatcc_verify_union_vector_field@@Base+0xcb6>
  4233ae:	mov    rax,QWORD PTR [rbp-0x28]
  4233b2:	mov    edx,eax
  4233b4:	mov    rax,QWORD PTR [rbp-0x30]
  4233b8:	mov    WORD PTR [rax],dx
  4233bb:	mov    rax,QWORD PTR [rbp-0x10]
  4233bf:	leave  
  4233c0:	ret    
  4233c1:	push   rbp
  4233c2:	mov    rbp,rsp
  4233c5:	sub    rsp,0x30
  4233c9:	mov    QWORD PTR [rbp-0x8],rdi
  4233cd:	mov    QWORD PTR [rbp-0x10],rsi
  4233d1:	mov    QWORD PTR [rbp-0x18],rdx
  4233d5:	mov    DWORD PTR [rbp-0x1c],ecx
  4233d8:	mov    QWORD PTR [rbp-0x28],r8
  4233dc:	mov    QWORD PTR [rbp-0x30],r9
  4233e0:	cmp    DWORD PTR [rbp-0x1c],0x0
  4233e4:	je     42341b <flatcc_verify_union_vector_field@@Base+0xd12>
  4233e6:	cmp    QWORD PTR [rbp-0x28],0x80
  4233ee:	jbe    42340b <flatcc_verify_union_vector_field@@Base+0xd02>
  4233f0:	mov    rdx,QWORD PTR [rbp-0x18]
  4233f4:	mov    rsi,QWORD PTR [rbp-0x10]
  4233f8:	mov    rax,QWORD PTR [rbp-0x8]
  4233fc:	mov    ecx,0x8
  423401:	mov    rdi,rax
  423404:	call   42665a <flatcc_json_parser_set_error@@Base>
  423409:	jmp    42344d <flatcc_verify_union_vector_field@@Base+0xd44>
  42340b:	mov    rax,QWORD PTR [rbp-0x28]
  42340f:	neg    eax
  423411:	mov    edx,eax
  423413:	mov    rax,QWORD PTR [rbp-0x30]
  423417:	mov    BYTE PTR [rax],dl
  423419:	jmp    423449 <flatcc_verify_union_vector_field@@Base+0xd40>
  42341b:	cmp    QWORD PTR [rbp-0x28],0x7f
  423420:	jbe    42343d <flatcc_verify_union_vector_field@@Base+0xd34>
  423422:	mov    rdx,QWORD PTR [rbp-0x18]
  423426:	mov    rsi,QWORD PTR [rbp-0x10]
  42342a:	mov    rax,QWORD PTR [rbp-0x8]
  42342e:	mov    ecx,0x7
  423433:	mov    rdi,rax
  423436:	call   42665a <flatcc_json_parser_set_error@@Base>
  42343b:	jmp    42344d <flatcc_verify_union_vector_field@@Base+0xd44>
  42343d:	mov    rax,QWORD PTR [rbp-0x28]
  423441:	mov    edx,eax
  423443:	mov    rax,QWORD PTR [rbp-0x30]
  423447:	mov    BYTE PTR [rax],dl
  423449:	mov    rax,QWORD PTR [rbp-0x10]
  42344d:	leave  
  42344e:	ret    
  42344f:	push   rbp
  423450:	mov    rbp,rsp
  423453:	mov    QWORD PTR [rbp-0x8],rdi
  423457:	mov    QWORD PTR [rbp-0x10],rsi
  42345b:	mov    QWORD PTR [rbp-0x18],rdx
  42345f:	mov    DWORD PTR [rbp-0x1c],ecx
  423462:	mov    QWORD PTR [rbp-0x28],r8
  423466:	mov    QWORD PTR [rbp-0x30],r9
  42346a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42346e:	je     4234ab <flatcc_verify_union_vector_field@@Base+0xda2>
  423470:	mov    rax,QWORD PTR [rbp-0x28]
  423474:	test   rax,rax
  423477:	js     423484 <flatcc_verify_union_vector_field@@Base+0xd7b>
  423479:	vxorps xmm0,xmm0,xmm0
  42347d:	vcvtsi2ss xmm0,xmm0,rax
  423482:	jmp    42349d <flatcc_verify_union_vector_field@@Base+0xd94>
  423484:	mov    rdx,rax
  423487:	shr    rdx,1
  42348a:	and    eax,0x1
  42348d:	or     rdx,rax
  423490:	vxorps xmm0,xmm0,xmm0
  423494:	vcvtsi2ss xmm0,xmm0,rdx
  423499:	vaddss xmm0,xmm0,xmm0
  42349d:	vmovss xmm1,DWORD PTR [rip+0x1908b]        # 43c530 <flatcc_builder_padding_base@@Base+0x25b0>
  4234a5:	vxorps xmm0,xmm0,xmm1
  4234a9:	jmp    4234d8 <flatcc_verify_union_vector_field@@Base+0xdcf>
  4234ab:	mov    rax,QWORD PTR [rbp-0x28]
  4234af:	test   rax,rax
  4234b2:	js     4234bf <flatcc_verify_union_vector_field@@Base+0xdb6>
  4234b4:	vxorps xmm0,xmm0,xmm0
  4234b8:	vcvtsi2ss xmm0,xmm0,rax
  4234bd:	jmp    4234d8 <flatcc_verify_union_vector_field@@Base+0xdcf>
  4234bf:	mov    rdx,rax
  4234c2:	shr    rdx,1
  4234c5:	and    eax,0x1
  4234c8:	or     rdx,rax
  4234cb:	vxorps xmm0,xmm0,xmm0
  4234cf:	vcvtsi2ss xmm0,xmm0,rdx
  4234d4:	vaddss xmm0,xmm0,xmm0
  4234d8:	mov    rax,QWORD PTR [rbp-0x30]
  4234dc:	vmovss DWORD PTR [rax],xmm0
  4234e0:	mov    rax,QWORD PTR [rbp-0x10]
  4234e4:	pop    rbp
  4234e5:	ret    
  4234e6:	push   rbp
  4234e7:	mov    rbp,rsp
  4234ea:	mov    QWORD PTR [rbp-0x8],rdi
  4234ee:	mov    QWORD PTR [rbp-0x10],rsi
  4234f2:	mov    QWORD PTR [rbp-0x18],rdx
  4234f6:	mov    DWORD PTR [rbp-0x1c],ecx
  4234f9:	mov    QWORD PTR [rbp-0x28],r8
  4234fd:	mov    QWORD PTR [rbp-0x30],r9
  423501:	cmp    DWORD PTR [rbp-0x1c],0x0
  423505:	je     423542 <flatcc_verify_union_vector_field@@Base+0xe39>
  423507:	mov    rax,QWORD PTR [rbp-0x28]
  42350b:	test   rax,rax
  42350e:	js     42351b <flatcc_verify_union_vector_field@@Base+0xe12>
  423510:	vxorpd xmm0,xmm0,xmm0
  423514:	vcvtsi2sd xmm0,xmm0,rax
  423519:	jmp    423534 <flatcc_verify_union_vector_field@@Base+0xe2b>
  42351b:	mov    rdx,rax
  42351e:	shr    rdx,1
  423521:	and    eax,0x1
  423524:	or     rdx,rax
  423527:	vxorpd xmm0,xmm0,xmm0
  42352b:	vcvtsi2sd xmm0,xmm0,rdx
  423530:	vaddsd xmm0,xmm0,xmm0
  423534:	vmovsd xmm1,QWORD PTR [rip+0x19004]        # 43c540 <flatcc_builder_padding_base@@Base+0x25c0>
  42353c:	vxorpd xmm0,xmm0,xmm1
  423540:	jmp    42356f <flatcc_verify_union_vector_field@@Base+0xe66>
  423542:	mov    rax,QWORD PTR [rbp-0x28]
  423546:	test   rax,rax
  423549:	js     423556 <flatcc_verify_union_vector_field@@Base+0xe4d>
  42354b:	vxorpd xmm0,xmm0,xmm0
  42354f:	vcvtsi2sd xmm0,xmm0,rax
  423554:	jmp    42356f <flatcc_verify_union_vector_field@@Base+0xe66>
  423556:	mov    rdx,rax
  423559:	shr    rdx,1
  42355c:	and    eax,0x1
  42355f:	or     rdx,rax
  423562:	vxorpd xmm0,xmm0,xmm0
  423566:	vcvtsi2sd xmm0,xmm0,rdx
  42356b:	vaddsd xmm0,xmm0,xmm0
  42356f:	mov    rax,QWORD PTR [rbp-0x30]
  423573:	vmovsd QWORD PTR [rax],xmm0
  423577:	mov    rax,QWORD PTR [rbp-0x10]
  42357b:	pop    rbp
  42357c:	ret    
  42357d:	push   rbp
  42357e:	mov    rbp,rsp
  423581:	sub    rsp,0x40
  423585:	mov    QWORD PTR [rbp-0x28],rdi
  423589:	mov    QWORD PTR [rbp-0x30],rsi
  42358d:	mov    QWORD PTR [rbp-0x38],rdx
  423591:	mov    QWORD PTR [rbp-0x40],rcx
  423595:	mov    rax,QWORD PTR fs:0x28
  42359e:	mov    QWORD PTR [rbp-0x8],rax
  4235a2:	xor    eax,eax
  4235a4:	mov    QWORD PTR [rbp-0x18],0x0
  4235ac:	mov    DWORD PTR [rbp-0x1c],0x0
  4235b3:	mov    rax,QWORD PTR [rbp-0x30]
  4235b7:	mov    QWORD PTR [rbp-0x10],rax
  4235bb:	mov    rax,QWORD PTR [rbp-0x40]
  4235bf:	mov    BYTE PTR [rax],0x0
  4235c2:	mov    rax,QWORD PTR [rbp-0x30]
  4235c6:	cmp    rax,QWORD PTR [rbp-0x38]
  4235ca:	jne    4235d2 <flatcc_verify_union_vector_field@@Base+0xec9>
  4235cc:	mov    rax,QWORD PTR [rbp-0x30]
  4235d0:	jmp    42362a <flatcc_verify_union_vector_field@@Base+0xf21>
  4235d2:	lea    rdi,[rbp-0x18]
  4235d6:	lea    rcx,[rbp-0x1c]
  4235da:	mov    rdx,QWORD PTR [rbp-0x38]
  4235de:	mov    rsi,QWORD PTR [rbp-0x30]
  4235e2:	mov    rax,QWORD PTR [rbp-0x28]
  4235e6:	mov    r8,rdi
  4235e9:	mov    rdi,rax
  4235ec:	call   427d4a <flatcc_json_parser_integer@@Base>
  4235f1:	mov    QWORD PTR [rbp-0x30],rax
  4235f5:	mov    rax,QWORD PTR [rbp-0x30]
  4235f9:	cmp    rax,QWORD PTR [rbp-0x10]
  4235fd:	je     423626 <flatcc_verify_union_vector_field@@Base+0xf1d>
  4235ff:	mov    rdi,QWORD PTR [rbp-0x18]
  423603:	mov    ecx,DWORD PTR [rbp-0x1c]
  423606:	mov    r8,QWORD PTR [rbp-0x40]
  42360a:	mov    rdx,QWORD PTR [rbp-0x38]
  42360e:	mov    rsi,QWORD PTR [rbp-0x30]
  423612:	mov    rax,QWORD PTR [rbp-0x28]
  423616:	mov    r9,r8
  423619:	mov    r8,rdi
  42361c:	mov    rdi,rax
  42361f:	call   42318d <flatcc_verify_union_vector_field@@Base+0xa84>
  423624:	jmp    42362a <flatcc_verify_union_vector_field@@Base+0xf21>
  423626:	mov    rax,QWORD PTR [rbp-0x30]
  42362a:	mov    rdx,QWORD PTR [rbp-0x8]
  42362e:	xor    rdx,QWORD PTR fs:0x28
  423637:	je     42363e <flatcc_verify_union_vector_field@@Base+0xf35>
  423639:	call   405070 <__stack_chk_fail@plt>
  42363e:	leave  
  42363f:	ret    
  423640:	push   rbp
  423641:	mov    rbp,rsp
  423644:	sub    rsp,0x60
  423648:	mov    QWORD PTR [rbp-0x38],rdi
  42364c:	mov    QWORD PTR [rbp-0x40],rsi
  423650:	mov    QWORD PTR [rbp-0x48],rdx
  423654:	mov    QWORD PTR [rbp-0x50],rcx
  423658:	mov    QWORD PTR [rbp-0x58],r8
  42365c:	mov    rax,QWORD PTR fs:0x28
  423665:	mov    QWORD PTR [rbp-0x8],rax
  423669:	xor    eax,eax
  42366b:	mov    QWORD PTR [rbp-0x28],0x0
  423673:	mov    rax,QWORD PTR [rbp-0x58]
  423677:	mov    QWORD PTR [rax],0x0
  42367e:	mov    rdx,QWORD PTR [rbp-0x48]
  423682:	mov    rcx,QWORD PTR [rbp-0x40]
  423686:	mov    rax,QWORD PTR [rbp-0x38]
  42368a:	mov    rsi,rcx
  42368d:	mov    rdi,rax
  423690:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  423695:	mov    QWORD PTR [rbp-0x40],rax
  423699:	mov    rax,QWORD PTR [rbp-0x40]
  42369d:	cmp    rax,QWORD PTR [rbp-0x48]
  4236a1:	jne    4236ac <flatcc_verify_union_vector_field@@Base+0xfa3>
  4236a3:	mov    rax,QWORD PTR [rbp-0x40]
  4236a7:	jmp    423789 <flatcc_verify_union_vector_field@@Base+0x1080>
  4236ac:	mov    rax,QWORD PTR [rbp-0x50]
  4236b0:	mov    QWORD PTR [rbp-0x18],rax
  4236b4:	mov    rax,QWORD PTR [rbp-0x18]
  4236b8:	mov    rax,QWORD PTR [rax]
  4236bb:	mov    rdx,QWORD PTR [rbp-0x40]
  4236bf:	mov    QWORD PTR [rbp-0x10],rdx
  4236c3:	lea    r9,[rbp-0x2c]
  4236c7:	lea    r8,[rbp-0x20]
  4236cb:	lea    rcx,[rbp-0x30]
  4236cf:	mov    rdx,QWORD PTR [rbp-0x48]
  4236d3:	mov    rsi,QWORD PTR [rbp-0x10]
  4236d7:	mov    rdi,QWORD PTR [rbp-0x38]
  4236db:	call   rax
  4236dd:	mov    QWORD PTR [rbp-0x40],rax
  4236e1:	mov    rax,QWORD PTR [rbp-0x40]
  4236e5:	cmp    rax,QWORD PTR [rbp-0x48]
  4236e9:	jne    4236f4 <flatcc_verify_union_vector_field@@Base+0xfeb>
  4236eb:	mov    rax,QWORD PTR [rbp-0x40]
  4236ef:	jmp    423789 <flatcc_verify_union_vector_field@@Base+0x1080>
  4236f4:	mov    rax,QWORD PTR [rbp-0x40]
  4236f8:	cmp    rax,QWORD PTR [rbp-0x10]
  4236fc:	jne    42370f <flatcc_verify_union_vector_field@@Base+0x1006>
  4236fe:	add    QWORD PTR [rbp-0x18],0x8
  423703:	mov    rax,QWORD PTR [rbp-0x18]
  423707:	mov    rax,QWORD PTR [rax]
  42370a:	test   rax,rax
  42370d:	jne    4236b4 <flatcc_verify_union_vector_field@@Base+0xfab>
  42370f:	mov    rax,QWORD PTR [rbp-0x10]
  423713:	cmp    rax,QWORD PTR [rbp-0x40]
  423717:	jne    423734 <flatcc_verify_union_vector_field@@Base+0x102b>
  423719:	mov    rdx,QWORD PTR [rbp-0x48]
  42371d:	mov    rsi,QWORD PTR [rbp-0x40]
  423721:	mov    rax,QWORD PTR [rbp-0x38]
  423725:	mov    ecx,0x17
  42372a:	mov    rdi,rax
  42372d:	call   42665a <flatcc_json_parser_set_error@@Base>
  423732:	jmp    423789 <flatcc_verify_union_vector_field@@Base+0x1080>
  423734:	mov    rdi,QWORD PTR [rbp-0x20]
  423738:	mov    ecx,DWORD PTR [rbp-0x30]
  42373b:	lea    r8,[rbp-0x28]
  42373f:	mov    rdx,QWORD PTR [rbp-0x48]
  423743:	mov    rsi,QWORD PTR [rbp-0x40]
  423747:	mov    rax,QWORD PTR [rbp-0x38]
  42374b:	mov    r9,r8
  42374e:	mov    r8,rdi
  423751:	mov    rdi,rax
  423754:	call   422ff6 <flatcc_verify_union_vector_field@@Base+0x8ed>
  423759:	cmp    rax,QWORD PTR [rbp-0x48]
  42375d:	jne    423765 <flatcc_verify_union_vector_field@@Base+0x105c>
  42375f:	mov    rax,QWORD PTR [rbp-0x48]
  423763:	jmp    423789 <flatcc_verify_union_vector_field@@Base+0x1080>
  423765:	mov    rax,QWORD PTR [rbp-0x58]
  423769:	mov    rdx,QWORD PTR [rax]
  42376c:	mov    rax,QWORD PTR [rbp-0x28]
  423770:	add    rdx,rax
  423773:	mov    rax,QWORD PTR [rbp-0x58]
  423777:	mov    QWORD PTR [rax],rdx
  42377a:	mov    eax,DWORD PTR [rbp-0x2c]
  42377d:	test   eax,eax
  42377f:	jne    4236ac <flatcc_verify_union_vector_field@@Base+0xfa3>
  423785:	mov    rax,QWORD PTR [rbp-0x40]
  423789:	mov    rdi,QWORD PTR [rbp-0x8]
  42378d:	xor    rdi,QWORD PTR fs:0x28
  423796:	je     42379d <flatcc_verify_union_vector_field@@Base+0x1094>
  423798:	call   405070 <__stack_chk_fail@plt>
  42379d:	leave  
  42379e:	ret    
  42379f:	push   rbp
  4237a0:	mov    rbp,rsp
  4237a3:	sub    rsp,0x60
  4237a7:	mov    QWORD PTR [rbp-0x38],rdi
  4237ab:	mov    QWORD PTR [rbp-0x40],rsi
  4237af:	mov    QWORD PTR [rbp-0x48],rdx
  4237b3:	mov    QWORD PTR [rbp-0x50],rcx
  4237b7:	mov    QWORD PTR [rbp-0x58],r8
  4237bb:	mov    rax,QWORD PTR fs:0x28
  4237c4:	mov    QWORD PTR [rbp-0x8],rax
  4237c8:	xor    eax,eax
  4237ca:	mov    DWORD PTR [rbp-0x2c],0x0
  4237d1:	mov    rax,QWORD PTR [rbp-0x58]
  4237d5:	mov    DWORD PTR [rax],0x0
  4237db:	mov    rdx,QWORD PTR [rbp-0x48]
  4237df:	mov    rcx,QWORD PTR [rbp-0x40]
  4237e3:	mov    rax,QWORD PTR [rbp-0x38]
  4237e7:	mov    rsi,rcx
  4237ea:	mov    rdi,rax
  4237ed:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  4237f2:	mov    QWORD PTR [rbp-0x40],rax
  4237f6:	mov    rax,QWORD PTR [rbp-0x40]
  4237fa:	cmp    rax,QWORD PTR [rbp-0x48]
  4237fe:	jne    423809 <flatcc_verify_union_vector_field@@Base+0x1100>
  423800:	mov    rax,QWORD PTR [rbp-0x40]
  423804:	jmp    4238e2 <flatcc_verify_union_vector_field@@Base+0x11d9>
  423809:	mov    rax,QWORD PTR [rbp-0x50]
  42380d:	mov    QWORD PTR [rbp-0x18],rax
  423811:	mov    rax,QWORD PTR [rbp-0x18]
  423815:	mov    rax,QWORD PTR [rax]
  423818:	mov    rdx,QWORD PTR [rbp-0x40]
  42381c:	mov    QWORD PTR [rbp-0x10],rdx
  423820:	lea    r9,[rbp-0x24]
  423824:	lea    r8,[rbp-0x20]
  423828:	lea    rcx,[rbp-0x28]
  42382c:	mov    rdx,QWORD PTR [rbp-0x48]
  423830:	mov    rsi,QWORD PTR [rbp-0x10]
  423834:	mov    rdi,QWORD PTR [rbp-0x38]
  423838:	call   rax
  42383a:	mov    QWORD PTR [rbp-0x40],rax
  42383e:	mov    rax,QWORD PTR [rbp-0x40]
  423842:	cmp    rax,QWORD PTR [rbp-0x48]
  423846:	jne    423851 <flatcc_verify_union_vector_field@@Base+0x1148>
  423848:	mov    rax,QWORD PTR [rbp-0x40]
  42384c:	jmp    4238e2 <flatcc_verify_union_vector_field@@Base+0x11d9>
  423851:	mov    rax,QWORD PTR [rbp-0x40]
  423855:	cmp    rax,QWORD PTR [rbp-0x10]
  423859:	jne    42386c <flatcc_verify_union_vector_field@@Base+0x1163>
  42385b:	add    QWORD PTR [rbp-0x18],0x8
  423860:	mov    rax,QWORD PTR [rbp-0x18]
  423864:	mov    rax,QWORD PTR [rax]
  423867:	test   rax,rax
  42386a:	jne    423811 <flatcc_verify_union_vector_field@@Base+0x1108>
  42386c:	mov    rax,QWORD PTR [rbp-0x10]
  423870:	cmp    rax,QWORD PTR [rbp-0x40]
  423874:	jne    423891 <flatcc_verify_union_vector_field@@Base+0x1188>
  423876:	mov    rdx,QWORD PTR [rbp-0x48]
  42387a:	mov    rsi,QWORD PTR [rbp-0x40]
  42387e:	mov    rax,QWORD PTR [rbp-0x38]
  423882:	mov    ecx,0x17
  423887:	mov    rdi,rax
  42388a:	call   42665a <flatcc_json_parser_set_error@@Base>
  42388f:	jmp    4238e2 <flatcc_verify_union_vector_field@@Base+0x11d9>
  423891:	mov    rdi,QWORD PTR [rbp-0x20]
  423895:	mov    ecx,DWORD PTR [rbp-0x28]
  423898:	lea    r8,[rbp-0x2c]
  42389c:	mov    rdx,QWORD PTR [rbp-0x48]
  4238a0:	mov    rsi,QWORD PTR [rbp-0x40]
  4238a4:	mov    rax,QWORD PTR [rbp-0x38]
  4238a8:	mov    r9,r8
  4238ab:	mov    r8,rdi
  4238ae:	mov    rdi,rax
  4238b1:	call   42309d <flatcc_verify_union_vector_field@@Base+0x994>
  4238b6:	cmp    rax,QWORD PTR [rbp-0x48]
  4238ba:	jne    4238c2 <flatcc_verify_union_vector_field@@Base+0x11b9>
  4238bc:	mov    rax,QWORD PTR [rbp-0x48]
  4238c0:	jmp    4238e2 <flatcc_verify_union_vector_field@@Base+0x11d9>
  4238c2:	mov    rax,QWORD PTR [rbp-0x58]
  4238c6:	mov    edx,DWORD PTR [rax]
  4238c8:	mov    eax,DWORD PTR [rbp-0x2c]
  4238cb:	add    edx,eax
  4238cd:	mov    rax,QWORD PTR [rbp-0x58]
  4238d1:	mov    DWORD PTR [rax],edx
  4238d3:	mov    eax,DWORD PTR [rbp-0x24]
  4238d6:	test   eax,eax
  4238d8:	jne    423809 <flatcc_verify_union_vector_field@@Base+0x1100>
  4238de:	mov    rax,QWORD PTR [rbp-0x40]
  4238e2:	mov    rdi,QWORD PTR [rbp-0x8]
  4238e6:	xor    rdi,QWORD PTR fs:0x28
  4238ef:	je     4238f6 <flatcc_verify_union_vector_field@@Base+0x11ed>
  4238f1:	call   405070 <__stack_chk_fail@plt>
  4238f6:	leave  
  4238f7:	ret    
  4238f8:	push   rbp
  4238f9:	mov    rbp,rsp
  4238fc:	sub    rsp,0x60
  423900:	mov    QWORD PTR [rbp-0x38],rdi
  423904:	mov    QWORD PTR [rbp-0x40],rsi
  423908:	mov    QWORD PTR [rbp-0x48],rdx
  42390c:	mov    QWORD PTR [rbp-0x50],rcx
  423910:	mov    QWORD PTR [rbp-0x58],r8
  423914:	mov    rax,QWORD PTR fs:0x28
  42391d:	mov    QWORD PTR [rbp-0x8],rax
  423921:	xor    eax,eax
  423923:	mov    WORD PTR [rbp-0x2a],0x0
  423929:	mov    rax,QWORD PTR [rbp-0x58]
  42392d:	mov    WORD PTR [rax],0x0
  423932:	mov    rdx,QWORD PTR [rbp-0x48]
  423936:	mov    rcx,QWORD PTR [rbp-0x40]
  42393a:	mov    rax,QWORD PTR [rbp-0x38]
  42393e:	mov    rsi,rcx
  423941:	mov    rdi,rax
  423944:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  423949:	mov    QWORD PTR [rbp-0x40],rax
  42394d:	mov    rax,QWORD PTR [rbp-0x40]
  423951:	cmp    rax,QWORD PTR [rbp-0x48]
  423955:	jne    423960 <flatcc_verify_union_vector_field@@Base+0x1257>
  423957:	mov    rax,QWORD PTR [rbp-0x40]
  42395b:	jmp    423a3c <flatcc_verify_union_vector_field@@Base+0x1333>
  423960:	mov    rax,QWORD PTR [rbp-0x50]
  423964:	mov    QWORD PTR [rbp-0x18],rax
  423968:	mov    rax,QWORD PTR [rbp-0x18]
  42396c:	mov    rax,QWORD PTR [rax]
  42396f:	mov    rdx,QWORD PTR [rbp-0x40]
  423973:	mov    QWORD PTR [rbp-0x10],rdx
  423977:	lea    r9,[rbp-0x24]
  42397b:	lea    r8,[rbp-0x20]
  42397f:	lea    rcx,[rbp-0x28]
  423983:	mov    rdx,QWORD PTR [rbp-0x48]
  423987:	mov    rsi,QWORD PTR [rbp-0x10]
  42398b:	mov    rdi,QWORD PTR [rbp-0x38]
  42398f:	call   rax
  423991:	mov    QWORD PTR [rbp-0x40],rax
  423995:	mov    rax,QWORD PTR [rbp-0x40]
  423999:	cmp    rax,QWORD PTR [rbp-0x48]
  42399d:	jne    4239a8 <flatcc_verify_union_vector_field@@Base+0x129f>
  42399f:	mov    rax,QWORD PTR [rbp-0x40]
  4239a3:	jmp    423a3c <flatcc_verify_union_vector_field@@Base+0x1333>
  4239a8:	mov    rax,QWORD PTR [rbp-0x40]
  4239ac:	cmp    rax,QWORD PTR [rbp-0x10]
  4239b0:	jne    4239c3 <flatcc_verify_union_vector_field@@Base+0x12ba>
  4239b2:	add    QWORD PTR [rbp-0x18],0x8
  4239b7:	mov    rax,QWORD PTR [rbp-0x18]
  4239bb:	mov    rax,QWORD PTR [rax]
  4239be:	test   rax,rax
  4239c1:	jne    423968 <flatcc_verify_union_vector_field@@Base+0x125f>
  4239c3:	mov    rax,QWORD PTR [rbp-0x10]
  4239c7:	cmp    rax,QWORD PTR [rbp-0x40]
  4239cb:	jne    4239e8 <flatcc_verify_union_vector_field@@Base+0x12df>
  4239cd:	mov    rdx,QWORD PTR [rbp-0x48]
  4239d1:	mov    rsi,QWORD PTR [rbp-0x40]
  4239d5:	mov    rax,QWORD PTR [rbp-0x38]
  4239d9:	mov    ecx,0x17
  4239de:	mov    rdi,rax
  4239e1:	call   42665a <flatcc_json_parser_set_error@@Base>
  4239e6:	jmp    423a3c <flatcc_verify_union_vector_field@@Base+0x1333>
  4239e8:	mov    rdi,QWORD PTR [rbp-0x20]
  4239ec:	mov    ecx,DWORD PTR [rbp-0x28]
  4239ef:	lea    r8,[rbp-0x2a]
  4239f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4239f7:	mov    rsi,QWORD PTR [rbp-0x40]
  4239fb:	mov    rax,QWORD PTR [rbp-0x38]
  4239ff:	mov    r9,r8
  423a02:	mov    r8,rdi
  423a05:	mov    rdi,rax
  423a08:	call   423115 <flatcc_verify_union_vector_field@@Base+0xa0c>
  423a0d:	cmp    rax,QWORD PTR [rbp-0x48]
  423a11:	jne    423a19 <flatcc_verify_union_vector_field@@Base+0x1310>
  423a13:	mov    rax,QWORD PTR [rbp-0x48]
  423a17:	jmp    423a3c <flatcc_verify_union_vector_field@@Base+0x1333>
  423a19:	mov    rax,QWORD PTR [rbp-0x58]
  423a1d:	movzx  edx,WORD PTR [rax]
  423a20:	movzx  eax,WORD PTR [rbp-0x2a]
  423a24:	add    edx,eax
  423a26:	mov    rax,QWORD PTR [rbp-0x58]
  423a2a:	mov    WORD PTR [rax],dx
  423a2d:	mov    eax,DWORD PTR [rbp-0x24]
  423a30:	test   eax,eax
  423a32:	jne    423960 <flatcc_verify_union_vector_field@@Base+0x1257>
  423a38:	mov    rax,QWORD PTR [rbp-0x40]
  423a3c:	mov    rdi,QWORD PTR [rbp-0x8]
  423a40:	xor    rdi,QWORD PTR fs:0x28
  423a49:	je     423a50 <flatcc_verify_union_vector_field@@Base+0x1347>
  423a4b:	call   405070 <__stack_chk_fail@plt>
  423a50:	leave  
  423a51:	ret    
  423a52:	push   rbp
  423a53:	mov    rbp,rsp
  423a56:	sub    rsp,0x60
  423a5a:	mov    QWORD PTR [rbp-0x38],rdi
  423a5e:	mov    QWORD PTR [rbp-0x40],rsi
  423a62:	mov    QWORD PTR [rbp-0x48],rdx
  423a66:	mov    QWORD PTR [rbp-0x50],rcx
  423a6a:	mov    QWORD PTR [rbp-0x58],r8
  423a6e:	mov    rax,QWORD PTR fs:0x28
  423a77:	mov    QWORD PTR [rbp-0x8],rax
  423a7b:	xor    eax,eax
  423a7d:	mov    BYTE PTR [rbp-0x29],0x0
  423a81:	mov    rax,QWORD PTR [rbp-0x58]
  423a85:	mov    BYTE PTR [rax],0x0
  423a88:	mov    rdx,QWORD PTR [rbp-0x48]
  423a8c:	mov    rcx,QWORD PTR [rbp-0x40]
  423a90:	mov    rax,QWORD PTR [rbp-0x38]
  423a94:	mov    rsi,rcx
  423a97:	mov    rdi,rax
  423a9a:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  423a9f:	mov    QWORD PTR [rbp-0x40],rax
  423aa3:	mov    rax,QWORD PTR [rbp-0x40]
  423aa7:	cmp    rax,QWORD PTR [rbp-0x48]
  423aab:	jne    423ab6 <flatcc_verify_union_vector_field@@Base+0x13ad>
  423aad:	mov    rax,QWORD PTR [rbp-0x40]
  423ab1:	jmp    423b91 <flatcc_verify_union_vector_field@@Base+0x1488>
  423ab6:	mov    rax,QWORD PTR [rbp-0x50]
  423aba:	mov    QWORD PTR [rbp-0x18],rax
  423abe:	mov    rax,QWORD PTR [rbp-0x18]
  423ac2:	mov    rax,QWORD PTR [rax]
  423ac5:	mov    rdx,QWORD PTR [rbp-0x40]
  423ac9:	mov    QWORD PTR [rbp-0x10],rdx
  423acd:	lea    r9,[rbp-0x24]
  423ad1:	lea    r8,[rbp-0x20]
  423ad5:	lea    rcx,[rbp-0x28]
  423ad9:	mov    rdx,QWORD PTR [rbp-0x48]
  423add:	mov    rsi,QWORD PTR [rbp-0x10]
  423ae1:	mov    rdi,QWORD PTR [rbp-0x38]
  423ae5:	call   rax
  423ae7:	mov    QWORD PTR [rbp-0x40],rax
  423aeb:	mov    rax,QWORD PTR [rbp-0x40]
  423aef:	cmp    rax,QWORD PTR [rbp-0x48]
  423af3:	jne    423afe <flatcc_verify_union_vector_field@@Base+0x13f5>
  423af5:	mov    rax,QWORD PTR [rbp-0x40]
  423af9:	jmp    423b91 <flatcc_verify_union_vector_field@@Base+0x1488>
  423afe:	mov    rax,QWORD PTR [rbp-0x40]
  423b02:	cmp    rax,QWORD PTR [rbp-0x10]
  423b06:	jne    423b19 <flatcc_verify_union_vector_field@@Base+0x1410>
  423b08:	add    QWORD PTR [rbp-0x18],0x8
  423b0d:	mov    rax,QWORD PTR [rbp-0x18]
  423b11:	mov    rax,QWORD PTR [rax]
  423b14:	test   rax,rax
  423b17:	jne    423abe <flatcc_verify_union_vector_field@@Base+0x13b5>
  423b19:	mov    rax,QWORD PTR [rbp-0x10]
  423b1d:	cmp    rax,QWORD PTR [rbp-0x40]
  423b21:	jne    423b3e <flatcc_verify_union_vector_field@@Base+0x1435>
  423b23:	mov    rdx,QWORD PTR [rbp-0x48]
  423b27:	mov    rsi,QWORD PTR [rbp-0x40]
  423b2b:	mov    rax,QWORD PTR [rbp-0x38]
  423b2f:	mov    ecx,0x17
  423b34:	mov    rdi,rax
  423b37:	call   42665a <flatcc_json_parser_set_error@@Base>
  423b3c:	jmp    423b91 <flatcc_verify_union_vector_field@@Base+0x1488>
  423b3e:	mov    rdi,QWORD PTR [rbp-0x20]
  423b42:	mov    ecx,DWORD PTR [rbp-0x28]
  423b45:	lea    r8,[rbp-0x29]
  423b49:	mov    rdx,QWORD PTR [rbp-0x48]
  423b4d:	mov    rsi,QWORD PTR [rbp-0x40]
  423b51:	mov    rax,QWORD PTR [rbp-0x38]
  423b55:	mov    r9,r8
  423b58:	mov    r8,rdi
  423b5b:	mov    rdi,rax
  423b5e:	call   42318d <flatcc_verify_union_vector_field@@Base+0xa84>
  423b63:	cmp    rax,QWORD PTR [rbp-0x48]
  423b67:	jne    423b6f <flatcc_verify_union_vector_field@@Base+0x1466>
  423b69:	mov    rax,QWORD PTR [rbp-0x48]
  423b6d:	jmp    423b91 <flatcc_verify_union_vector_field@@Base+0x1488>
  423b6f:	mov    rax,QWORD PTR [rbp-0x58]
  423b73:	movzx  edx,BYTE PTR [rax]
  423b76:	movzx  eax,BYTE PTR [rbp-0x29]
  423b7a:	add    edx,eax
  423b7c:	mov    rax,QWORD PTR [rbp-0x58]
  423b80:	mov    BYTE PTR [rax],dl
  423b82:	mov    eax,DWORD PTR [rbp-0x24]
  423b85:	test   eax,eax
  423b87:	jne    423ab6 <flatcc_verify_union_vector_field@@Base+0x13ad>
  423b8d:	mov    rax,QWORD PTR [rbp-0x40]
  423b91:	mov    rdi,QWORD PTR [rbp-0x8]
  423b95:	xor    rdi,QWORD PTR fs:0x28
  423b9e:	je     423ba5 <flatcc_verify_union_vector_field@@Base+0x149c>
  423ba0:	call   405070 <__stack_chk_fail@plt>
  423ba5:	leave  
  423ba6:	ret    
  423ba7:	push   rbp
  423ba8:	mov    rbp,rsp
  423bab:	sub    rsp,0x60
  423baf:	mov    QWORD PTR [rbp-0x38],rdi
  423bb3:	mov    QWORD PTR [rbp-0x40],rsi
  423bb7:	mov    QWORD PTR [rbp-0x48],rdx
  423bbb:	mov    QWORD PTR [rbp-0x50],rcx
  423bbf:	mov    QWORD PTR [rbp-0x58],r8
  423bc3:	mov    rax,QWORD PTR fs:0x28
  423bcc:	mov    QWORD PTR [rbp-0x8],rax
  423bd0:	xor    eax,eax
  423bd2:	mov    QWORD PTR [rbp-0x28],0x0
  423bda:	mov    rax,QWORD PTR [rbp-0x58]
  423bde:	mov    QWORD PTR [rax],0x0
  423be5:	mov    rdx,QWORD PTR [rbp-0x48]
  423be9:	mov    rcx,QWORD PTR [rbp-0x40]
  423bed:	mov    rax,QWORD PTR [rbp-0x38]
  423bf1:	mov    rsi,rcx
  423bf4:	mov    rdi,rax
  423bf7:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  423bfc:	mov    QWORD PTR [rbp-0x40],rax
  423c00:	mov    rax,QWORD PTR [rbp-0x40]
  423c04:	cmp    rax,QWORD PTR [rbp-0x48]
  423c08:	jne    423c13 <flatcc_verify_union_vector_field@@Base+0x150a>
  423c0a:	mov    rax,QWORD PTR [rbp-0x40]
  423c0e:	jmp    423cf0 <flatcc_verify_union_vector_field@@Base+0x15e7>
  423c13:	mov    rax,QWORD PTR [rbp-0x50]
  423c17:	mov    QWORD PTR [rbp-0x18],rax
  423c1b:	mov    rax,QWORD PTR [rbp-0x18]
  423c1f:	mov    rax,QWORD PTR [rax]
  423c22:	mov    rdx,QWORD PTR [rbp-0x40]
  423c26:	mov    QWORD PTR [rbp-0x10],rdx
  423c2a:	lea    r9,[rbp-0x2c]
  423c2e:	lea    r8,[rbp-0x20]
  423c32:	lea    rcx,[rbp-0x30]
  423c36:	mov    rdx,QWORD PTR [rbp-0x48]
  423c3a:	mov    rsi,QWORD PTR [rbp-0x10]
  423c3e:	mov    rdi,QWORD PTR [rbp-0x38]
  423c42:	call   rax
  423c44:	mov    QWORD PTR [rbp-0x40],rax
  423c48:	mov    rax,QWORD PTR [rbp-0x40]
  423c4c:	cmp    rax,QWORD PTR [rbp-0x48]
  423c50:	jne    423c5b <flatcc_verify_union_vector_field@@Base+0x1552>
  423c52:	mov    rax,QWORD PTR [rbp-0x40]
  423c56:	jmp    423cf0 <flatcc_verify_union_vector_field@@Base+0x15e7>
  423c5b:	mov    rax,QWORD PTR [rbp-0x40]
  423c5f:	cmp    rax,QWORD PTR [rbp-0x10]
  423c63:	jne    423c76 <flatcc_verify_union_vector_field@@Base+0x156d>
  423c65:	add    QWORD PTR [rbp-0x18],0x8
  423c6a:	mov    rax,QWORD PTR [rbp-0x18]
  423c6e:	mov    rax,QWORD PTR [rax]
  423c71:	test   rax,rax
  423c74:	jne    423c1b <flatcc_verify_union_vector_field@@Base+0x1512>
  423c76:	mov    rax,QWORD PTR [rbp-0x10]
  423c7a:	cmp    rax,QWORD PTR [rbp-0x40]
  423c7e:	jne    423c9b <flatcc_verify_union_vector_field@@Base+0x1592>
  423c80:	mov    rdx,QWORD PTR [rbp-0x48]
  423c84:	mov    rsi,QWORD PTR [rbp-0x40]
  423c88:	mov    rax,QWORD PTR [rbp-0x38]
  423c8c:	mov    ecx,0x17
  423c91:	mov    rdi,rax
  423c94:	call   42665a <flatcc_json_parser_set_error@@Base>
  423c99:	jmp    423cf0 <flatcc_verify_union_vector_field@@Base+0x15e7>
  423c9b:	mov    rdi,QWORD PTR [rbp-0x20]
  423c9f:	mov    ecx,DWORD PTR [rbp-0x30]
  423ca2:	lea    r8,[rbp-0x28]
  423ca6:	mov    rdx,QWORD PTR [rbp-0x48]
  423caa:	mov    rsi,QWORD PTR [rbp-0x40]
  423cae:	mov    rax,QWORD PTR [rbp-0x38]
  423cb2:	mov    r9,r8
  423cb5:	mov    r8,rdi
  423cb8:	mov    rdi,rax
  423cbb:	call   423204 <flatcc_verify_union_vector_field@@Base+0xafb>
  423cc0:	cmp    rax,QWORD PTR [rbp-0x48]
  423cc4:	jne    423ccc <flatcc_verify_union_vector_field@@Base+0x15c3>
  423cc6:	mov    rax,QWORD PTR [rbp-0x48]
  423cca:	jmp    423cf0 <flatcc_verify_union_vector_field@@Base+0x15e7>
  423ccc:	mov    rax,QWORD PTR [rbp-0x58]
  423cd0:	mov    rdx,QWORD PTR [rax]
  423cd3:	mov    rax,QWORD PTR [rbp-0x28]
  423cd7:	add    rdx,rax
  423cda:	mov    rax,QWORD PTR [rbp-0x58]
  423cde:	mov    QWORD PTR [rax],rdx
  423ce1:	mov    eax,DWORD PTR [rbp-0x2c]
  423ce4:	test   eax,eax
  423ce6:	jne    423c13 <flatcc_verify_union_vector_field@@Base+0x150a>
  423cec:	mov    rax,QWORD PTR [rbp-0x40]
  423cf0:	mov    rdi,QWORD PTR [rbp-0x8]
  423cf4:	xor    rdi,QWORD PTR fs:0x28
  423cfd:	je     423d04 <flatcc_verify_union_vector_field@@Base+0x15fb>
  423cff:	call   405070 <__stack_chk_fail@plt>
  423d04:	leave  
  423d05:	ret    
  423d06:	push   rbp
  423d07:	mov    rbp,rsp
  423d0a:	sub    rsp,0x60
  423d0e:	mov    QWORD PTR [rbp-0x38],rdi
  423d12:	mov    QWORD PTR [rbp-0x40],rsi
  423d16:	mov    QWORD PTR [rbp-0x48],rdx
  423d1a:	mov    QWORD PTR [rbp-0x50],rcx
  423d1e:	mov    QWORD PTR [rbp-0x58],r8
  423d22:	mov    rax,QWORD PTR fs:0x28
  423d2b:	mov    QWORD PTR [rbp-0x8],rax
  423d2f:	xor    eax,eax
  423d31:	mov    DWORD PTR [rbp-0x2c],0x0
  423d38:	mov    rax,QWORD PTR [rbp-0x58]
  423d3c:	mov    DWORD PTR [rax],0x0
  423d42:	mov    rdx,QWORD PTR [rbp-0x48]
  423d46:	mov    rcx,QWORD PTR [rbp-0x40]
  423d4a:	mov    rax,QWORD PTR [rbp-0x38]
  423d4e:	mov    rsi,rcx
  423d51:	mov    rdi,rax
  423d54:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  423d59:	mov    QWORD PTR [rbp-0x40],rax
  423d5d:	mov    rax,QWORD PTR [rbp-0x40]
  423d61:	cmp    rax,QWORD PTR [rbp-0x48]
  423d65:	jne    423d70 <flatcc_verify_union_vector_field@@Base+0x1667>
  423d67:	mov    rax,QWORD PTR [rbp-0x40]
  423d6b:	jmp    423e49 <flatcc_verify_union_vector_field@@Base+0x1740>
  423d70:	mov    rax,QWORD PTR [rbp-0x50]
  423d74:	mov    QWORD PTR [rbp-0x18],rax
  423d78:	mov    rax,QWORD PTR [rbp-0x18]
  423d7c:	mov    rax,QWORD PTR [rax]
  423d7f:	mov    rdx,QWORD PTR [rbp-0x40]
  423d83:	mov    QWORD PTR [rbp-0x10],rdx
  423d87:	lea    r9,[rbp-0x24]
  423d8b:	lea    r8,[rbp-0x20]
  423d8f:	lea    rcx,[rbp-0x28]
  423d93:	mov    rdx,QWORD PTR [rbp-0x48]
  423d97:	mov    rsi,QWORD PTR [rbp-0x10]
  423d9b:	mov    rdi,QWORD PTR [rbp-0x38]
  423d9f:	call   rax
  423da1:	mov    QWORD PTR [rbp-0x40],rax
  423da5:	mov    rax,QWORD PTR [rbp-0x40]
  423da9:	cmp    rax,QWORD PTR [rbp-0x48]
  423dad:	jne    423db8 <flatcc_verify_union_vector_field@@Base+0x16af>
  423daf:	mov    rax,QWORD PTR [rbp-0x40]
  423db3:	jmp    423e49 <flatcc_verify_union_vector_field@@Base+0x1740>
  423db8:	mov    rax,QWORD PTR [rbp-0x40]
  423dbc:	cmp    rax,QWORD PTR [rbp-0x10]
  423dc0:	jne    423dd3 <flatcc_verify_union_vector_field@@Base+0x16ca>
  423dc2:	add    QWORD PTR [rbp-0x18],0x8
  423dc7:	mov    rax,QWORD PTR [rbp-0x18]
  423dcb:	mov    rax,QWORD PTR [rax]
  423dce:	test   rax,rax
  423dd1:	jne    423d78 <flatcc_verify_union_vector_field@@Base+0x166f>
  423dd3:	mov    rax,QWORD PTR [rbp-0x10]
  423dd7:	cmp    rax,QWORD PTR [rbp-0x40]
  423ddb:	jne    423df8 <flatcc_verify_union_vector_field@@Base+0x16ef>
  423ddd:	mov    rdx,QWORD PTR [rbp-0x48]
  423de1:	mov    rsi,QWORD PTR [rbp-0x40]
  423de5:	mov    rax,QWORD PTR [rbp-0x38]
  423de9:	mov    ecx,0x17
  423dee:	mov    rdi,rax
  423df1:	call   42665a <flatcc_json_parser_set_error@@Base>
  423df6:	jmp    423e49 <flatcc_verify_union_vector_field@@Base+0x1740>
  423df8:	mov    rdi,QWORD PTR [rbp-0x20]
  423dfc:	mov    ecx,DWORD PTR [rbp-0x28]
  423dff:	lea    r8,[rbp-0x2c]
  423e03:	mov    rdx,QWORD PTR [rbp-0x48]
  423e07:	mov    rsi,QWORD PTR [rbp-0x40]
  423e0b:	mov    rax,QWORD PTR [rbp-0x38]
  423e0f:	mov    r9,r8
  423e12:	mov    r8,rdi
  423e15:	mov    rdi,rax
  423e18:	call   42329c <flatcc_verify_union_vector_field@@Base+0xb93>
  423e1d:	cmp    rax,QWORD PTR [rbp-0x48]
  423e21:	jne    423e29 <flatcc_verify_union_vector_field@@Base+0x1720>
  423e23:	mov    rax,QWORD PTR [rbp-0x48]
  423e27:	jmp    423e49 <flatcc_verify_union_vector_field@@Base+0x1740>
  423e29:	mov    rax,QWORD PTR [rbp-0x58]
  423e2d:	mov    edx,DWORD PTR [rax]
  423e2f:	mov    eax,DWORD PTR [rbp-0x2c]
  423e32:	add    edx,eax
  423e34:	mov    rax,QWORD PTR [rbp-0x58]
  423e38:	mov    DWORD PTR [rax],edx
  423e3a:	mov    eax,DWORD PTR [rbp-0x24]
  423e3d:	test   eax,eax
  423e3f:	jne    423d70 <flatcc_verify_union_vector_field@@Base+0x1667>
  423e45:	mov    rax,QWORD PTR [rbp-0x40]
  423e49:	mov    rdi,QWORD PTR [rbp-0x8]
  423e4d:	xor    rdi,QWORD PTR fs:0x28
  423e56:	je     423e5d <flatcc_verify_union_vector_field@@Base+0x1754>
  423e58:	call   405070 <__stack_chk_fail@plt>
  423e5d:	leave  
  423e5e:	ret    
  423e5f:	push   rbp
  423e60:	mov    rbp,rsp
  423e63:	sub    rsp,0x60
  423e67:	mov    QWORD PTR [rbp-0x38],rdi
  423e6b:	mov    QWORD PTR [rbp-0x40],rsi
  423e6f:	mov    QWORD PTR [rbp-0x48],rdx
  423e73:	mov    QWORD PTR [rbp-0x50],rcx
  423e77:	mov    QWORD PTR [rbp-0x58],r8
  423e7b:	mov    rax,QWORD PTR fs:0x28
  423e84:	mov    QWORD PTR [rbp-0x8],rax
  423e88:	xor    eax,eax
  423e8a:	mov    WORD PTR [rbp-0x2a],0x0
  423e90:	mov    rax,QWORD PTR [rbp-0x58]
  423e94:	mov    WORD PTR [rax],0x0
  423e99:	mov    rdx,QWORD PTR [rbp-0x48]
  423e9d:	mov    rcx,QWORD PTR [rbp-0x40]
  423ea1:	mov    rax,QWORD PTR [rbp-0x38]
  423ea5:	mov    rsi,rcx
  423ea8:	mov    rdi,rax
  423eab:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  423eb0:	mov    QWORD PTR [rbp-0x40],rax
  423eb4:	mov    rax,QWORD PTR [rbp-0x40]
  423eb8:	cmp    rax,QWORD PTR [rbp-0x48]
  423ebc:	jne    423ec7 <flatcc_verify_union_vector_field@@Base+0x17be>
  423ebe:	mov    rax,QWORD PTR [rbp-0x40]
  423ec2:	jmp    423fa7 <flatcc_verify_union_vector_field@@Base+0x189e>
  423ec7:	mov    rax,QWORD PTR [rbp-0x50]
  423ecb:	mov    QWORD PTR [rbp-0x18],rax
  423ecf:	mov    rax,QWORD PTR [rbp-0x18]
  423ed3:	mov    rax,QWORD PTR [rax]
  423ed6:	mov    rdx,QWORD PTR [rbp-0x40]
  423eda:	mov    QWORD PTR [rbp-0x10],rdx
  423ede:	lea    r9,[rbp-0x24]
  423ee2:	lea    r8,[rbp-0x20]
  423ee6:	lea    rcx,[rbp-0x28]
  423eea:	mov    rdx,QWORD PTR [rbp-0x48]
  423eee:	mov    rsi,QWORD PTR [rbp-0x10]
  423ef2:	mov    rdi,QWORD PTR [rbp-0x38]
  423ef6:	call   rax
  423ef8:	mov    QWORD PTR [rbp-0x40],rax
  423efc:	mov    rax,QWORD PTR [rbp-0x40]
  423f00:	cmp    rax,QWORD PTR [rbp-0x48]
  423f04:	jne    423f0f <flatcc_verify_union_vector_field@@Base+0x1806>
  423f06:	mov    rax,QWORD PTR [rbp-0x40]
  423f0a:	jmp    423fa7 <flatcc_verify_union_vector_field@@Base+0x189e>
  423f0f:	mov    rax,QWORD PTR [rbp-0x40]
  423f13:	cmp    rax,QWORD PTR [rbp-0x10]
  423f17:	jne    423f2a <flatcc_verify_union_vector_field@@Base+0x1821>
  423f19:	add    QWORD PTR [rbp-0x18],0x8
  423f1e:	mov    rax,QWORD PTR [rbp-0x18]
  423f22:	mov    rax,QWORD PTR [rax]
  423f25:	test   rax,rax
  423f28:	jne    423ecf <flatcc_verify_union_vector_field@@Base+0x17c6>
  423f2a:	mov    rax,QWORD PTR [rbp-0x10]
  423f2e:	cmp    rax,QWORD PTR [rbp-0x40]
  423f32:	jne    423f4f <flatcc_verify_union_vector_field@@Base+0x1846>
  423f34:	mov    rdx,QWORD PTR [rbp-0x48]
  423f38:	mov    rsi,QWORD PTR [rbp-0x40]
  423f3c:	mov    rax,QWORD PTR [rbp-0x38]
  423f40:	mov    ecx,0x17
  423f45:	mov    rdi,rax
  423f48:	call   42665a <flatcc_json_parser_set_error@@Base>
  423f4d:	jmp    423fa7 <flatcc_verify_union_vector_field@@Base+0x189e>
  423f4f:	mov    rdi,QWORD PTR [rbp-0x20]
  423f53:	mov    ecx,DWORD PTR [rbp-0x28]
  423f56:	lea    r8,[rbp-0x2a]
  423f5a:	mov    rdx,QWORD PTR [rbp-0x48]
  423f5e:	mov    rsi,QWORD PTR [rbp-0x40]
  423f62:	mov    rax,QWORD PTR [rbp-0x38]
  423f66:	mov    r9,r8
  423f69:	mov    r8,rdi
  423f6c:	mov    rdi,rax
  423f6f:	call   42332e <flatcc_verify_union_vector_field@@Base+0xc25>
  423f74:	cmp    rax,QWORD PTR [rbp-0x48]
  423f78:	jne    423f80 <flatcc_verify_union_vector_field@@Base+0x1877>
  423f7a:	mov    rax,QWORD PTR [rbp-0x48]
  423f7e:	jmp    423fa7 <flatcc_verify_union_vector_field@@Base+0x189e>
  423f80:	mov    rax,QWORD PTR [rbp-0x58]
  423f84:	movzx  eax,WORD PTR [rax]
  423f87:	mov    edx,eax
  423f89:	movzx  eax,WORD PTR [rbp-0x2a]
  423f8d:	add    eax,edx
  423f8f:	mov    edx,eax
  423f91:	mov    rax,QWORD PTR [rbp-0x58]
  423f95:	mov    WORD PTR [rax],dx
  423f98:	mov    eax,DWORD PTR [rbp-0x24]
  423f9b:	test   eax,eax
  423f9d:	jne    423ec7 <flatcc_verify_union_vector_field@@Base+0x17be>
  423fa3:	mov    rax,QWORD PTR [rbp-0x40]
  423fa7:	mov    rdi,QWORD PTR [rbp-0x8]
  423fab:	xor    rdi,QWORD PTR fs:0x28
  423fb4:	je     423fbb <flatcc_verify_union_vector_field@@Base+0x18b2>
  423fb6:	call   405070 <__stack_chk_fail@plt>
  423fbb:	leave  
  423fbc:	ret    
  423fbd:	push   rbp
  423fbe:	mov    rbp,rsp
  423fc1:	sub    rsp,0x60
  423fc5:	mov    QWORD PTR [rbp-0x38],rdi
  423fc9:	mov    QWORD PTR [rbp-0x40],rsi
  423fcd:	mov    QWORD PTR [rbp-0x48],rdx
  423fd1:	mov    QWORD PTR [rbp-0x50],rcx
  423fd5:	mov    QWORD PTR [rbp-0x58],r8
  423fd9:	mov    rax,QWORD PTR fs:0x28
  423fe2:	mov    QWORD PTR [rbp-0x8],rax
  423fe6:	xor    eax,eax
  423fe8:	mov    BYTE PTR [rbp-0x29],0x0
  423fec:	mov    rax,QWORD PTR [rbp-0x58]
  423ff0:	mov    BYTE PTR [rax],0x0
  423ff3:	mov    rdx,QWORD PTR [rbp-0x48]
  423ff7:	mov    rcx,QWORD PTR [rbp-0x40]
  423ffb:	mov    rax,QWORD PTR [rbp-0x38]
  423fff:	mov    rsi,rcx
  424002:	mov    rdi,rax
  424005:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  42400a:	mov    QWORD PTR [rbp-0x40],rax
  42400e:	mov    rax,QWORD PTR [rbp-0x40]
  424012:	cmp    rax,QWORD PTR [rbp-0x48]
  424016:	jne    424021 <flatcc_verify_union_vector_field@@Base+0x1918>
  424018:	mov    rax,QWORD PTR [rbp-0x40]
  42401c:	jmp    424100 <flatcc_verify_union_vector_field@@Base+0x19f7>
  424021:	mov    rax,QWORD PTR [rbp-0x50]
  424025:	mov    QWORD PTR [rbp-0x18],rax
  424029:	mov    rax,QWORD PTR [rbp-0x18]
  42402d:	mov    rax,QWORD PTR [rax]
  424030:	mov    rdx,QWORD PTR [rbp-0x40]
  424034:	mov    QWORD PTR [rbp-0x10],rdx
  424038:	lea    r9,[rbp-0x24]
  42403c:	lea    r8,[rbp-0x20]
  424040:	lea    rcx,[rbp-0x28]
  424044:	mov    rdx,QWORD PTR [rbp-0x48]
  424048:	mov    rsi,QWORD PTR [rbp-0x10]
  42404c:	mov    rdi,QWORD PTR [rbp-0x38]
  424050:	call   rax
  424052:	mov    QWORD PTR [rbp-0x40],rax
  424056:	mov    rax,QWORD PTR [rbp-0x40]
  42405a:	cmp    rax,QWORD PTR [rbp-0x48]
  42405e:	jne    424069 <flatcc_verify_union_vector_field@@Base+0x1960>
  424060:	mov    rax,QWORD PTR [rbp-0x40]
  424064:	jmp    424100 <flatcc_verify_union_vector_field@@Base+0x19f7>
  424069:	mov    rax,QWORD PTR [rbp-0x40]
  42406d:	cmp    rax,QWORD PTR [rbp-0x10]
  424071:	jne    424084 <flatcc_verify_union_vector_field@@Base+0x197b>
  424073:	add    QWORD PTR [rbp-0x18],0x8
  424078:	mov    rax,QWORD PTR [rbp-0x18]
  42407c:	mov    rax,QWORD PTR [rax]
  42407f:	test   rax,rax
  424082:	jne    424029 <flatcc_verify_union_vector_field@@Base+0x1920>
  424084:	mov    rax,QWORD PTR [rbp-0x10]
  424088:	cmp    rax,QWORD PTR [rbp-0x40]
  42408c:	jne    4240a9 <flatcc_verify_union_vector_field@@Base+0x19a0>
  42408e:	mov    rdx,QWORD PTR [rbp-0x48]
  424092:	mov    rsi,QWORD PTR [rbp-0x40]
  424096:	mov    rax,QWORD PTR [rbp-0x38]
  42409a:	mov    ecx,0x17
  42409f:	mov    rdi,rax
  4240a2:	call   42665a <flatcc_json_parser_set_error@@Base>
  4240a7:	jmp    424100 <flatcc_verify_union_vector_field@@Base+0x19f7>
  4240a9:	mov    rdi,QWORD PTR [rbp-0x20]
  4240ad:	mov    ecx,DWORD PTR [rbp-0x28]
  4240b0:	lea    r8,[rbp-0x29]
  4240b4:	mov    rdx,QWORD PTR [rbp-0x48]
  4240b8:	mov    rsi,QWORD PTR [rbp-0x40]
  4240bc:	mov    rax,QWORD PTR [rbp-0x38]
  4240c0:	mov    r9,r8
  4240c3:	mov    r8,rdi
  4240c6:	mov    rdi,rax
  4240c9:	call   4233c1 <flatcc_verify_union_vector_field@@Base+0xcb8>
  4240ce:	cmp    rax,QWORD PTR [rbp-0x48]
  4240d2:	jne    4240da <flatcc_verify_union_vector_field@@Base+0x19d1>
  4240d4:	mov    rax,QWORD PTR [rbp-0x48]
  4240d8:	jmp    424100 <flatcc_verify_union_vector_field@@Base+0x19f7>
  4240da:	mov    rax,QWORD PTR [rbp-0x58]
  4240de:	movzx  eax,BYTE PTR [rax]
  4240e1:	mov    edx,eax
  4240e3:	movzx  eax,BYTE PTR [rbp-0x29]
  4240e7:	add    eax,edx
  4240e9:	mov    edx,eax
  4240eb:	mov    rax,QWORD PTR [rbp-0x58]
  4240ef:	mov    BYTE PTR [rax],dl
  4240f1:	mov    eax,DWORD PTR [rbp-0x24]
  4240f4:	test   eax,eax
  4240f6:	jne    424021 <flatcc_verify_union_vector_field@@Base+0x1918>
  4240fc:	mov    rax,QWORD PTR [rbp-0x40]
  424100:	mov    rdi,QWORD PTR [rbp-0x8]
  424104:	xor    rdi,QWORD PTR fs:0x28
  42410d:	je     424114 <flatcc_verify_union_vector_field@@Base+0x1a0b>
  42410f:	call   405070 <__stack_chk_fail@plt>
  424114:	leave  
  424115:	ret    
  424116:	push   rbp
  424117:	mov    rbp,rsp
  42411a:	sub    rsp,0x60
  42411e:	mov    QWORD PTR [rbp-0x38],rdi
  424122:	mov    QWORD PTR [rbp-0x40],rsi
  424126:	mov    QWORD PTR [rbp-0x48],rdx
  42412a:	mov    QWORD PTR [rbp-0x50],rcx
  42412e:	mov    QWORD PTR [rbp-0x58],r8
  424132:	mov    rax,QWORD PTR fs:0x28
  42413b:	mov    QWORD PTR [rbp-0x8],rax
  42413f:	xor    eax,eax
  424141:	mov    BYTE PTR [rbp-0x29],0x0
  424145:	mov    rax,QWORD PTR [rbp-0x58]
  424149:	mov    BYTE PTR [rax],0x0
  42414c:	mov    rdx,QWORD PTR [rbp-0x48]
  424150:	mov    rcx,QWORD PTR [rbp-0x40]
  424154:	mov    rax,QWORD PTR [rbp-0x38]
  424158:	mov    rsi,rcx
  42415b:	mov    rdi,rax
  42415e:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  424163:	mov    QWORD PTR [rbp-0x40],rax
  424167:	mov    rax,QWORD PTR [rbp-0x40]
  42416b:	cmp    rax,QWORD PTR [rbp-0x48]
  42416f:	jne    42417a <flatcc_verify_union_vector_field@@Base+0x1a71>
  424171:	mov    rax,QWORD PTR [rbp-0x40]
  424175:	jmp    424255 <flatcc_verify_union_vector_field@@Base+0x1b4c>
  42417a:	mov    rax,QWORD PTR [rbp-0x50]
  42417e:	mov    QWORD PTR [rbp-0x18],rax
  424182:	mov    rax,QWORD PTR [rbp-0x18]
  424186:	mov    rax,QWORD PTR [rax]
  424189:	mov    rdx,QWORD PTR [rbp-0x40]
  42418d:	mov    QWORD PTR [rbp-0x10],rdx
  424191:	lea    r9,[rbp-0x24]
  424195:	lea    r8,[rbp-0x20]
  424199:	lea    rcx,[rbp-0x28]
  42419d:	mov    rdx,QWORD PTR [rbp-0x48]
  4241a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4241a5:	mov    rdi,QWORD PTR [rbp-0x38]
  4241a9:	call   rax
  4241ab:	mov    QWORD PTR [rbp-0x40],rax
  4241af:	mov    rax,QWORD PTR [rbp-0x40]
  4241b3:	cmp    rax,QWORD PTR [rbp-0x48]
  4241b7:	jne    4241c2 <flatcc_verify_union_vector_field@@Base+0x1ab9>
  4241b9:	mov    rax,QWORD PTR [rbp-0x40]
  4241bd:	jmp    424255 <flatcc_verify_union_vector_field@@Base+0x1b4c>
  4241c2:	mov    rax,QWORD PTR [rbp-0x40]
  4241c6:	cmp    rax,QWORD PTR [rbp-0x10]
  4241ca:	jne    4241dd <flatcc_verify_union_vector_field@@Base+0x1ad4>
  4241cc:	add    QWORD PTR [rbp-0x18],0x8
  4241d1:	mov    rax,QWORD PTR [rbp-0x18]
  4241d5:	mov    rax,QWORD PTR [rax]
  4241d8:	test   rax,rax
  4241db:	jne    424182 <flatcc_verify_union_vector_field@@Base+0x1a79>
  4241dd:	mov    rax,QWORD PTR [rbp-0x10]
  4241e1:	cmp    rax,QWORD PTR [rbp-0x40]
  4241e5:	jne    424202 <flatcc_verify_union_vector_field@@Base+0x1af9>
  4241e7:	mov    rdx,QWORD PTR [rbp-0x48]
  4241eb:	mov    rsi,QWORD PTR [rbp-0x40]
  4241ef:	mov    rax,QWORD PTR [rbp-0x38]
  4241f3:	mov    ecx,0x17
  4241f8:	mov    rdi,rax
  4241fb:	call   42665a <flatcc_json_parser_set_error@@Base>
  424200:	jmp    424255 <flatcc_verify_union_vector_field@@Base+0x1b4c>
  424202:	mov    rdi,QWORD PTR [rbp-0x20]
  424206:	mov    ecx,DWORD PTR [rbp-0x28]
  424209:	lea    r8,[rbp-0x29]
  42420d:	mov    rdx,QWORD PTR [rbp-0x48]
  424211:	mov    rsi,QWORD PTR [rbp-0x40]
  424215:	mov    rax,QWORD PTR [rbp-0x38]
  424219:	mov    r9,r8
  42421c:	mov    r8,rdi
  42421f:	mov    rdi,rax
  424222:	call   423047 <flatcc_verify_union_vector_field@@Base+0x93e>
  424227:	cmp    rax,QWORD PTR [rbp-0x48]
  42422b:	jne    424233 <flatcc_verify_union_vector_field@@Base+0x1b2a>
  42422d:	mov    rax,QWORD PTR [rbp-0x48]
  424231:	jmp    424255 <flatcc_verify_union_vector_field@@Base+0x1b4c>
  424233:	mov    rax,QWORD PTR [rbp-0x58]
  424237:	movzx  edx,BYTE PTR [rax]
  42423a:	movzx  eax,BYTE PTR [rbp-0x29]
  42423e:	add    edx,eax
  424240:	mov    rax,QWORD PTR [rbp-0x58]
  424244:	mov    BYTE PTR [rax],dl
  424246:	mov    eax,DWORD PTR [rbp-0x24]
  424249:	test   eax,eax
  42424b:	jne    42417a <flatcc_verify_union_vector_field@@Base+0x1a71>
  424251:	mov    rax,QWORD PTR [rbp-0x40]
  424255:	mov    rdi,QWORD PTR [rbp-0x8]
  424259:	xor    rdi,QWORD PTR fs:0x28
  424262:	je     424269 <flatcc_verify_union_vector_field@@Base+0x1b60>
  424264:	call   405070 <__stack_chk_fail@plt>
  424269:	leave  
  42426a:	ret    
  42426b:	push   rbp
  42426c:	mov    rbp,rsp
  42426f:	sub    rsp,0x60
  424273:	mov    QWORD PTR [rbp-0x38],rdi
  424277:	mov    QWORD PTR [rbp-0x40],rsi
  42427b:	mov    QWORD PTR [rbp-0x48],rdx
  42427f:	mov    QWORD PTR [rbp-0x50],rcx
  424283:	mov    QWORD PTR [rbp-0x58],r8
  424287:	mov    rax,QWORD PTR fs:0x28
  424290:	mov    QWORD PTR [rbp-0x8],rax
  424294:	xor    eax,eax
  424296:	vxorps xmm0,xmm0,xmm0
  42429a:	vmovss DWORD PTR [rbp-0x2c],xmm0
  42429f:	mov    rax,QWORD PTR [rbp-0x58]
  4242a3:	vxorps xmm0,xmm0,xmm0
  4242a7:	vmovss DWORD PTR [rax],xmm0
  4242ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4242af:	mov    rcx,QWORD PTR [rbp-0x40]
  4242b3:	mov    rax,QWORD PTR [rbp-0x38]
  4242b7:	mov    rsi,rcx
  4242ba:	mov    rdi,rax
  4242bd:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  4242c2:	mov    QWORD PTR [rbp-0x40],rax
  4242c6:	mov    rax,QWORD PTR [rbp-0x40]
  4242ca:	cmp    rax,QWORD PTR [rbp-0x48]
  4242ce:	jne    4242d9 <flatcc_verify_union_vector_field@@Base+0x1bd0>
  4242d0:	mov    rax,QWORD PTR [rbp-0x40]
  4242d4:	jmp    4243ba <flatcc_verify_union_vector_field@@Base+0x1cb1>
  4242d9:	mov    rax,QWORD PTR [rbp-0x50]
  4242dd:	mov    QWORD PTR [rbp-0x18],rax
  4242e1:	mov    rax,QWORD PTR [rbp-0x18]
  4242e5:	mov    rax,QWORD PTR [rax]
  4242e8:	mov    rdx,QWORD PTR [rbp-0x40]
  4242ec:	mov    QWORD PTR [rbp-0x10],rdx
  4242f0:	lea    r9,[rbp-0x24]
  4242f4:	lea    r8,[rbp-0x20]
  4242f8:	lea    rcx,[rbp-0x28]
  4242fc:	mov    rdx,QWORD PTR [rbp-0x48]
  424300:	mov    rsi,QWORD PTR [rbp-0x10]
  424304:	mov    rdi,QWORD PTR [rbp-0x38]
  424308:	call   rax
  42430a:	mov    QWORD PTR [rbp-0x40],rax
  42430e:	mov    rax,QWORD PTR [rbp-0x40]
  424312:	cmp    rax,QWORD PTR [rbp-0x48]
  424316:	jne    424321 <flatcc_verify_union_vector_field@@Base+0x1c18>
  424318:	mov    rax,QWORD PTR [rbp-0x40]
  42431c:	jmp    4243ba <flatcc_verify_union_vector_field@@Base+0x1cb1>
  424321:	mov    rax,QWORD PTR [rbp-0x40]
  424325:	cmp    rax,QWORD PTR [rbp-0x10]
  424329:	jne    42433c <flatcc_verify_union_vector_field@@Base+0x1c33>
  42432b:	add    QWORD PTR [rbp-0x18],0x8
  424330:	mov    rax,QWORD PTR [rbp-0x18]
  424334:	mov    rax,QWORD PTR [rax]
  424337:	test   rax,rax
  42433a:	jne    4242e1 <flatcc_verify_union_vector_field@@Base+0x1bd8>
  42433c:	mov    rax,QWORD PTR [rbp-0x10]
  424340:	cmp    rax,QWORD PTR [rbp-0x40]
  424344:	jne    424361 <flatcc_verify_union_vector_field@@Base+0x1c58>
  424346:	mov    rdx,QWORD PTR [rbp-0x48]
  42434a:	mov    rsi,QWORD PTR [rbp-0x40]
  42434e:	mov    rax,QWORD PTR [rbp-0x38]
  424352:	mov    ecx,0x17
  424357:	mov    rdi,rax
  42435a:	call   42665a <flatcc_json_parser_set_error@@Base>
  42435f:	jmp    4243ba <flatcc_verify_union_vector_field@@Base+0x1cb1>
  424361:	mov    rdi,QWORD PTR [rbp-0x20]
  424365:	mov    ecx,DWORD PTR [rbp-0x28]
  424368:	lea    r8,[rbp-0x2c]
  42436c:	mov    rdx,QWORD PTR [rbp-0x48]
  424370:	mov    rsi,QWORD PTR [rbp-0x40]
  424374:	mov    rax,QWORD PTR [rbp-0x38]
  424378:	mov    r9,r8
  42437b:	mov    r8,rdi
  42437e:	mov    rdi,rax
  424381:	call   42344f <flatcc_verify_union_vector_field@@Base+0xd46>
  424386:	cmp    rax,QWORD PTR [rbp-0x48]
  42438a:	jne    424392 <flatcc_verify_union_vector_field@@Base+0x1c89>
  42438c:	mov    rax,QWORD PTR [rbp-0x48]
  424390:	jmp    4243ba <flatcc_verify_union_vector_field@@Base+0x1cb1>
  424392:	mov    rax,QWORD PTR [rbp-0x58]
  424396:	vmovss xmm1,DWORD PTR [rax]
  42439a:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  42439f:	vaddss xmm0,xmm1,xmm0
  4243a3:	mov    rax,QWORD PTR [rbp-0x58]
  4243a7:	vmovss DWORD PTR [rax],xmm0
  4243ab:	mov    eax,DWORD PTR [rbp-0x24]
  4243ae:	test   eax,eax
  4243b0:	jne    4242d9 <flatcc_verify_union_vector_field@@Base+0x1bd0>
  4243b6:	mov    rax,QWORD PTR [rbp-0x40]
  4243ba:	mov    rdi,QWORD PTR [rbp-0x8]
  4243be:	xor    rdi,QWORD PTR fs:0x28
  4243c7:	je     4243ce <flatcc_verify_union_vector_field@@Base+0x1cc5>
  4243c9:	call   405070 <__stack_chk_fail@plt>
  4243ce:	leave  
  4243cf:	ret    
  4243d0:	push   rbp
  4243d1:	mov    rbp,rsp
  4243d4:	sub    rsp,0x60
  4243d8:	mov    QWORD PTR [rbp-0x38],rdi
  4243dc:	mov    QWORD PTR [rbp-0x40],rsi
  4243e0:	mov    QWORD PTR [rbp-0x48],rdx
  4243e4:	mov    QWORD PTR [rbp-0x50],rcx
  4243e8:	mov    QWORD PTR [rbp-0x58],r8
  4243ec:	mov    rax,QWORD PTR fs:0x28
  4243f5:	mov    QWORD PTR [rbp-0x8],rax
  4243f9:	xor    eax,eax
  4243fb:	vxorpd xmm0,xmm0,xmm0
  4243ff:	vmovsd QWORD PTR [rbp-0x28],xmm0
  424404:	mov    rax,QWORD PTR [rbp-0x58]
  424408:	vxorpd xmm0,xmm0,xmm0
  42440c:	vmovsd QWORD PTR [rax],xmm0
  424410:	mov    rdx,QWORD PTR [rbp-0x48]
  424414:	mov    rcx,QWORD PTR [rbp-0x40]
  424418:	mov    rax,QWORD PTR [rbp-0x38]
  42441c:	mov    rsi,rcx
  42441f:	mov    rdi,rax
  424422:	call   422c62 <flatcc_verify_union_vector_field@@Base+0x559>
  424427:	mov    QWORD PTR [rbp-0x40],rax
  42442b:	mov    rax,QWORD PTR [rbp-0x40]
  42442f:	cmp    rax,QWORD PTR [rbp-0x48]
  424433:	jne    42443e <flatcc_verify_union_vector_field@@Base+0x1d35>
  424435:	mov    rax,QWORD PTR [rbp-0x40]
  424439:	jmp    42451f <flatcc_verify_union_vector_field@@Base+0x1e16>
  42443e:	mov    rax,QWORD PTR [rbp-0x50]
  424442:	mov    QWORD PTR [rbp-0x18],rax
  424446:	mov    rax,QWORD PTR [rbp-0x18]
  42444a:	mov    rax,QWORD PTR [rax]
  42444d:	mov    rdx,QWORD PTR [rbp-0x40]
  424451:	mov    QWORD PTR [rbp-0x10],rdx
  424455:	lea    r9,[rbp-0x2c]
  424459:	lea    r8,[rbp-0x20]
  42445d:	lea    rcx,[rbp-0x30]
  424461:	mov    rdx,QWORD PTR [rbp-0x48]
  424465:	mov    rsi,QWORD PTR [rbp-0x10]
  424469:	mov    rdi,QWORD PTR [rbp-0x38]
  42446d:	call   rax
  42446f:	mov    QWORD PTR [rbp-0x40],rax
  424473:	mov    rax,QWORD PTR [rbp-0x40]
  424477:	cmp    rax,QWORD PTR [rbp-0x48]
  42447b:	jne    424486 <flatcc_verify_union_vector_field@@Base+0x1d7d>
  42447d:	mov    rax,QWORD PTR [rbp-0x40]
  424481:	jmp    42451f <flatcc_verify_union_vector_field@@Base+0x1e16>
  424486:	mov    rax,QWORD PTR [rbp-0x40]
  42448a:	cmp    rax,QWORD PTR [rbp-0x10]
  42448e:	jne    4244a1 <flatcc_verify_union_vector_field@@Base+0x1d98>
  424490:	add    QWORD PTR [rbp-0x18],0x8
  424495:	mov    rax,QWORD PTR [rbp-0x18]
  424499:	mov    rax,QWORD PTR [rax]
  42449c:	test   rax,rax
  42449f:	jne    424446 <flatcc_verify_union_vector_field@@Base+0x1d3d>
  4244a1:	mov    rax,QWORD PTR [rbp-0x10]
  4244a5:	cmp    rax,QWORD PTR [rbp-0x40]
  4244a9:	jne    4244c6 <flatcc_verify_union_vector_field@@Base+0x1dbd>
  4244ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4244af:	mov    rsi,QWORD PTR [rbp-0x40]
  4244b3:	mov    rax,QWORD PTR [rbp-0x38]
  4244b7:	mov    ecx,0x17
  4244bc:	mov    rdi,rax
  4244bf:	call   42665a <flatcc_json_parser_set_error@@Base>
  4244c4:	jmp    42451f <flatcc_verify_union_vector_field@@Base+0x1e16>
  4244c6:	mov    rdi,QWORD PTR [rbp-0x20]
  4244ca:	mov    ecx,DWORD PTR [rbp-0x30]
  4244cd:	lea    r8,[rbp-0x28]
  4244d1:	mov    rdx,QWORD PTR [rbp-0x48]
  4244d5:	mov    rsi,QWORD PTR [rbp-0x40]
  4244d9:	mov    rax,QWORD PTR [rbp-0x38]
  4244dd:	mov    r9,r8
  4244e0:	mov    r8,rdi
  4244e3:	mov    rdi,rax
  4244e6:	call   4234e6 <flatcc_verify_union_vector_field@@Base+0xddd>
  4244eb:	cmp    rax,QWORD PTR [rbp-0x48]
  4244ef:	jne    4244f7 <flatcc_verify_union_vector_field@@Base+0x1dee>
  4244f1:	mov    rax,QWORD PTR [rbp-0x48]
  4244f5:	jmp    42451f <flatcc_verify_union_vector_field@@Base+0x1e16>
  4244f7:	mov    rax,QWORD PTR [rbp-0x58]
  4244fb:	vmovsd xmm1,QWORD PTR [rax]
  4244ff:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  424504:	vaddsd xmm0,xmm1,xmm0
  424508:	mov    rax,QWORD PTR [rbp-0x58]
  42450c:	vmovsd QWORD PTR [rax],xmm0
  424510:	mov    eax,DWORD PTR [rbp-0x2c]
  424513:	test   eax,eax
  424515:	jne    42443e <flatcc_verify_union_vector_field@@Base+0x1d35>
  42451b:	mov    rax,QWORD PTR [rbp-0x40]
  42451f:	mov    rdi,QWORD PTR [rbp-0x8]
  424523:	xor    rdi,QWORD PTR fs:0x28
  42452c:	je     424533 <flatcc_verify_union_vector_field@@Base+0x1e2a>
  42452e:	call   405070 <__stack_chk_fail@plt>
  424533:	leave  
  424534:	ret    
  424535:	push   rbp
  424536:	mov    rbp,rsp
  424539:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42453e:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  424543:	vmovsd QWORD PTR [rbp-0x8],xmm0
  424548:	mov    rax,QWORD PTR [rbp-0x8]
  42454c:	pop    rbp
  42454d:	ret    
  42454e:	push   rbp
  42454f:	mov    rbp,rsp
  424552:	mov    QWORD PTR [rbp-0x18],rdi
  424556:	mov    rax,QWORD PTR [rbp-0x18]
  42455a:	mov    QWORD PTR [rbp-0x8],rax
  42455e:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  424563:	pop    rbp
  424564:	ret    
  424565:	push   rbp
  424566:	mov    rbp,rsp
  424569:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42456e:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  424573:	vcvttsd2si eax,xmm0
  424577:	mov    DWORD PTR [rbp-0x4],eax
  42457a:	vxorpd xmm0,xmm0,xmm0
  42457e:	vucomisd xmm0,QWORD PTR [rbp-0x18]
  424583:	jbe    42458a <flatcc_verify_union_vector_field@@Base+0x1e81>
  424585:	mov    eax,DWORD PTR [rbp-0x4]
  424588:	jmp    4245bb <flatcc_verify_union_vector_field@@Base+0x1eb2>
  42458a:	vxorpd xmm0,xmm0,xmm0
  42458e:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  424593:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  424598:	vsubsd xmm0,xmm1,xmm0
  42459c:	vxorpd xmm1,xmm1,xmm1
  4245a0:	vucomisd xmm0,xmm1
  4245a4:	jp     4245b0 <flatcc_verify_union_vector_field@@Base+0x1ea7>
  4245a6:	vxorpd xmm1,xmm1,xmm1
  4245aa:	vucomisd xmm0,xmm1
  4245ae:	je     4245b8 <flatcc_verify_union_vector_field@@Base+0x1eaf>
  4245b0:	mov    eax,DWORD PTR [rbp-0x4]
  4245b3:	add    eax,0x1
  4245b6:	jmp    4245bb <flatcc_verify_union_vector_field@@Base+0x1eb2>
  4245b8:	mov    eax,DWORD PTR [rbp-0x4]
  4245bb:	pop    rbp
  4245bc:	ret    
  4245bd:	push   rbp
  4245be:	mov    rbp,rsp
  4245c1:	sub    rsp,0x20
  4245c5:	mov    DWORD PTR [rbp-0x14],edi
  4245c8:	mov    QWORD PTR [rbp-0x20],rsi
  4245cc:	mov    eax,DWORD PTR [rbp-0x14]
  4245cf:	add    eax,0x3f
  4245d2:	vxorpd xmm0,xmm0,xmm0
  4245d6:	vcvtsi2sd xmm0,xmm0,eax
  4245da:	vmovsd xmm1,QWORD PTR [rip+0x17f76]        # 43c558 <flatcc_builder_padding_base@@Base+0x25d8>
  4245e2:	vmulsd xmm0,xmm0,xmm1
  4245e6:	call   424565 <flatcc_verify_union_vector_field@@Base+0x1e5c>
  4245eb:	mov    DWORD PTR [rbp-0x8],eax
  4245ee:	mov    eax,DWORD PTR [rbp-0x8]
  4245f1:	add    eax,0x15b
  4245f6:	lea    edx,[rax+0x7]
  4245f9:	test   eax,eax
  4245fb:	cmovs  eax,edx
  4245fe:	sar    eax,0x3
  424601:	add    eax,0x1
  424604:	mov    DWORD PTR [rbp-0x4],eax
  424607:	mov    eax,DWORD PTR [rbp-0x4]
  42460a:	cdqe   
  42460c:	shl    rax,0x4
  424610:	mov    rdx,rax
  424613:	lea    rax,[rip+0x16c06]        # 43b220 <flatcc_builder_padding_base@@Base+0x12a0>
  42461a:	mov    rdx,QWORD PTR [rdx+rax*1]
  42461e:	mov    rax,QWORD PTR [rbp-0x20]
  424622:	mov    QWORD PTR [rax],rdx
  424625:	mov    eax,DWORD PTR [rbp-0x4]
  424628:	cdqe   
  42462a:	shl    rax,0x4
  42462e:	mov    rdx,rax
  424631:	lea    rax,[rip+0x16bf0]        # 43b228 <flatcc_builder_padding_base@@Base+0x12a8>
  424638:	movzx  eax,WORD PTR [rdx+rax*1]
  42463c:	movsx  edx,ax
  42463f:	mov    rax,QWORD PTR [rbp-0x20]
  424643:	mov    DWORD PTR [rax+0x8],edx
  424646:	mov    eax,DWORD PTR [rbp-0x4]
  424649:	cdqe   
  42464b:	shl    rax,0x4
  42464f:	mov    rdx,rax
  424652:	lea    rax,[rip+0x16bd1]        # 43b22a <flatcc_builder_padding_base@@Base+0x12aa>
  424659:	movzx  eax,WORD PTR [rdx+rax*1]
  42465d:	cwde   
  42465e:	leave  
  42465f:	ret    
  424660:	push   rbp
  424661:	mov    rbp,rsp
  424664:	sub    rsp,0x30
  424668:	mov    rax,rdi
  42466b:	mov    r8,rsi
  42466e:	mov    rsi,rax
  424671:	mov    rdi,rdx
  424674:	mov    rdi,r8
  424677:	mov    QWORD PTR [rbp-0x20],rsi
  42467b:	mov    QWORD PTR [rbp-0x18],rdi
  42467f:	mov    QWORD PTR [rbp-0x30],rdx
  424683:	mov    QWORD PTR [rbp-0x28],rcx
  424687:	mov    rdx,QWORD PTR [rbp-0x20]
  42468b:	mov    rax,QWORD PTR [rbp-0x30]
  42468f:	sub    rdx,rax
  424692:	mov    rax,rdx
  424695:	mov    QWORD PTR [rbp-0x10],rax
  424699:	mov    eax,DWORD PTR [rbp-0x18]
  42469c:	mov    DWORD PTR [rbp-0x8],eax
  42469f:	mov    edx,DWORD PTR [rbp-0x18]
  4246a2:	mov    eax,DWORD PTR [rbp-0x28]
  4246a5:	cmp    edx,eax
  4246a7:	jne    4246b6 <flatcc_verify_union_vector_field@@Base+0x1fad>
  4246a9:	mov    rdx,QWORD PTR [rbp-0x20]
  4246ad:	mov    rax,QWORD PTR [rbp-0x30]
  4246b1:	cmp    rdx,rax
  4246b4:	jae    4246d5 <flatcc_verify_union_vector_field@@Base+0x1fcc>
  4246b6:	lea    rcx,[rip+0x17973]        # 43c030 <flatcc_builder_padding_base@@Base+0x20b0>
  4246bd:	mov    edx,0xef
  4246c2:	lea    rsi,[rip+0x170c7]        # 43b790 <flatcc_builder_padding_base@@Base+0x1810>
  4246c9:	lea    rdi,[rip+0x17130]        # 43b800 <flatcc_builder_padding_base@@Base+0x1880>
  4246d0:	call   405080 <__assert_fail@plt>
  4246d5:	mov    rax,QWORD PTR [rbp-0x10]
  4246d9:	mov    rdx,QWORD PTR [rbp-0x8]
  4246dd:	leave  
  4246de:	ret    
  4246df:	push   rbp
  4246e0:	mov    rbp,rsp
  4246e3:	sub    rsp,0x8
  4246e7:	mov    rax,rdi
  4246ea:	mov    r8,rsi
  4246ed:	mov    rsi,rax
  4246f0:	mov    rdi,rdx
  4246f3:	mov    rdi,r8
  4246f6:	mov    QWORD PTR [rbp-0x70],rsi
  4246fa:	mov    QWORD PTR [rbp-0x68],rdi
  4246fe:	mov    QWORD PTR [rbp-0x80],rdx
  424702:	mov    QWORD PTR [rbp-0x78],rcx
  424706:	mov    rax,QWORD PTR [rbp-0x70]
  42470a:	shr    rax,0x20
  42470e:	mov    QWORD PTR [rbp-0x58],rax
  424712:	mov    rax,QWORD PTR [rbp-0x70]
  424716:	and    eax,0xffffffff
  424719:	mov    QWORD PTR [rbp-0x50],rax
  42471d:	mov    rax,QWORD PTR [rbp-0x80]
  424721:	shr    rax,0x20
  424725:	mov    QWORD PTR [rbp-0x48],rax
  424729:	mov    rax,QWORD PTR [rbp-0x80]
  42472d:	and    eax,0xffffffff
  424730:	mov    QWORD PTR [rbp-0x40],rax
  424734:	mov    rax,QWORD PTR [rbp-0x58]
  424738:	imul   rax,QWORD PTR [rbp-0x48]
  42473d:	mov    QWORD PTR [rbp-0x38],rax
  424741:	mov    rax,QWORD PTR [rbp-0x50]
  424745:	imul   rax,QWORD PTR [rbp-0x48]
  42474a:	mov    QWORD PTR [rbp-0x30],rax
  42474e:	mov    rax,QWORD PTR [rbp-0x58]
  424752:	imul   rax,QWORD PTR [rbp-0x40]
  424757:	mov    QWORD PTR [rbp-0x28],rax
  42475b:	mov    rax,QWORD PTR [rbp-0x50]
  42475f:	imul   rax,QWORD PTR [rbp-0x40]
  424764:	mov    QWORD PTR [rbp-0x20],rax
  424768:	mov    rax,QWORD PTR [rbp-0x20]
  42476c:	shr    rax,0x20
  424770:	mov    rdx,QWORD PTR [rbp-0x28]
  424774:	mov    edx,edx
  424776:	add    rax,rdx
  424779:	mov    rdx,QWORD PTR [rbp-0x30]
  42477d:	mov    edx,edx
  42477f:	add    rax,rdx
  424782:	mov    QWORD PTR [rbp-0x18],rax
  424786:	mov    eax,0x80000000
  42478b:	add    QWORD PTR [rbp-0x18],rax
  42478f:	mov    rax,QWORD PTR [rbp-0x28]
  424793:	shr    rax,0x20
  424797:	mov    rdx,rax
  42479a:	mov    rax,QWORD PTR [rbp-0x38]
  42479e:	add    rdx,rax
  4247a1:	mov    rax,QWORD PTR [rbp-0x30]
  4247a5:	shr    rax,0x20
  4247a9:	add    rdx,rax
  4247ac:	mov    rax,QWORD PTR [rbp-0x18]
  4247b0:	shr    rax,0x20
  4247b4:	add    rax,rdx
  4247b7:	mov    QWORD PTR [rbp-0x10],rax
  4247bb:	mov    edx,DWORD PTR [rbp-0x68]
  4247be:	mov    eax,DWORD PTR [rbp-0x78]
  4247c1:	add    eax,edx
  4247c3:	add    eax,0x40
  4247c6:	mov    DWORD PTR [rbp-0x8],eax
  4247c9:	mov    rax,QWORD PTR [rbp-0x10]
  4247cd:	mov    rdx,QWORD PTR [rbp-0x8]
  4247d1:	leave  
  4247d2:	ret    
  4247d3:	push   rbp
  4247d4:	mov    rbp,rsp
  4247d7:	sub    rsp,0x10
  4247db:	mov    rax,rdi
  4247de:	mov    rcx,rsi
  4247e1:	mov    rdx,rcx
  4247e4:	mov    QWORD PTR [rbp-0x10],rax
  4247e8:	mov    QWORD PTR [rbp-0x8],rdx
  4247ec:	mov    rax,QWORD PTR [rbp-0x10]
  4247f0:	test   rax,rax
  4247f3:	jne    424829 <flatcc_verify_union_vector_field@@Base+0x2120>
  4247f5:	lea    rcx,[rip+0x17854]        # 43c050 <flatcc_builder_padding_base@@Base+0x20d0>
  4247fc:	mov    edx,0x104
  424801:	lea    rsi,[rip+0x16f88]        # 43b790 <flatcc_builder_padding_base@@Base+0x1810>
  424808:	lea    rdi,[rip+0x1700a]        # 43b819 <flatcc_builder_padding_base@@Base+0x1899>
  42480f:	call   405080 <__assert_fail@plt>
  424814:	mov    rax,QWORD PTR [rbp-0x10]
  424818:	shl    rax,0xa
  42481c:	mov    QWORD PTR [rbp-0x10],rax
  424820:	mov    eax,DWORD PTR [rbp-0x8]
  424823:	sub    eax,0xa
  424826:	mov    DWORD PTR [rbp-0x8],eax
  424829:	mov    rdx,QWORD PTR [rbp-0x10]
  42482d:	movabs rax,0xffc0000000000000
  424837:	and    rax,rdx
  42483a:	test   rax,rax
  42483d:	je     424814 <flatcc_verify_union_vector_field@@Base+0x210b>
  42483f:	jmp    424855 <flatcc_verify_union_vector_field@@Base+0x214c>
  424841:	mov    rax,QWORD PTR [rbp-0x10]
  424845:	add    rax,rax
  424848:	mov    QWORD PTR [rbp-0x10],rax
  42484c:	mov    eax,DWORD PTR [rbp-0x8]
  42484f:	sub    eax,0x1
  424852:	mov    DWORD PTR [rbp-0x8],eax
  424855:	mov    rax,QWORD PTR [rbp-0x10]
  424859:	test   rax,rax
  42485c:	jns    424841 <flatcc_verify_union_vector_field@@Base+0x2138>
  42485e:	mov    rax,QWORD PTR [rbp-0x10]
  424862:	mov    rdx,QWORD PTR [rbp-0x8]
  424866:	leave  
  424867:	ret    
  424868:	push   rbp
  424869:	mov    rbp,rsp
  42486c:	sub    rsp,0x30
  424870:	vmovsd QWORD PTR [rbp-0x28],xmm0
  424875:	mov    rax,QWORD PTR [rbp-0x28]
  424879:	mov    QWORD PTR [rbp-0x30],rax
  42487d:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  424882:	call   424535 <flatcc_verify_union_vector_field@@Base+0x1e2c>
  424887:	mov    QWORD PTR [rbp-0x18],rax
  42488b:	movabs rax,0x7ff0000000000000
  424895:	and    rax,QWORD PTR [rbp-0x18]
  424899:	test   rax,rax
  42489c:	jne    4248b9 <flatcc_verify_union_vector_field@@Base+0x21b0>
  42489e:	movabs rax,0xfffffffffffff
  4248a8:	and    rax,QWORD PTR [rbp-0x18]
  4248ac:	mov    QWORD PTR [rbp-0x10],rax
  4248b0:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  4248b7:	jmp    4248f0 <flatcc_verify_union_vector_field@@Base+0x21e7>
  4248b9:	movabs rax,0xfffffffffffff
  4248c3:	and    rax,QWORD PTR [rbp-0x18]
  4248c7:	mov    rdx,rax
  4248ca:	movabs rax,0x10000000000000
  4248d4:	add    rax,rdx
  4248d7:	mov    QWORD PTR [rbp-0x10],rax
  4248db:	mov    rax,QWORD PTR [rbp-0x18]
  4248df:	shr    rax,0x34
  4248e3:	and    eax,0x7ff
  4248e8:	sub    eax,0x433
  4248ed:	mov    DWORD PTR [rbp-0x8],eax
  4248f0:	mov    rax,QWORD PTR [rbp-0x10]
  4248f4:	mov    rdx,QWORD PTR [rbp-0x8]
  4248f8:	leave  
  4248f9:	ret    
  4248fa:	push   rbp
  4248fb:	mov    rbp,rsp
  4248fe:	sub    rsp,0x60
  424902:	mov    rax,rdi
  424905:	mov    rcx,rsi
  424908:	mov    rdx,rcx
  42490b:	mov    QWORD PTR [rbp-0x50],rax
  42490f:	mov    QWORD PTR [rbp-0x48],rdx
  424913:	movabs rax,0x10000000000000
  42491d:	mov    QWORD PTR [rbp-0x20],rax
  424921:	movabs rax,0xfffffffffffff
  42492b:	mov    QWORD PTR [rbp-0x18],rax
  42492f:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  424936:	mov    DWORD PTR [rbp-0x30],0x433
  42493d:	mov    DWORD PTR [rbp-0x2c],0x34
  424944:	mov    rax,QWORD PTR [rbp-0x50]
  424948:	mov    rdx,QWORD PTR [rbp-0x48]
  42494c:	mov    QWORD PTR [rbp-0x10],rax
  424950:	mov    QWORD PTR [rbp-0x8],rdx
  424954:	jmp    42496a <flatcc_verify_union_vector_field@@Base+0x2261>
  424956:	mov    rax,QWORD PTR [rbp-0x10]
  42495a:	shr    rax,1
  42495d:	mov    QWORD PTR [rbp-0x10],rax
  424961:	mov    eax,DWORD PTR [rbp-0x8]
  424964:	add    eax,0x1
  424967:	mov    DWORD PTR [rbp-0x8],eax
  42496a:	mov    rax,QWORD PTR [rbp-0x10]
  42496e:	mov    rcx,QWORD PTR [rbp-0x20]
  424972:	mov    rdx,QWORD PTR [rbp-0x18]
  424976:	add    rdx,rcx
  424979:	cmp    rax,rdx
  42497c:	ja     424956 <flatcc_verify_union_vector_field@@Base+0x224d>
  42497e:	mov    eax,DWORD PTR [rbp-0x8]
  424981:	cmp    eax,DWORD PTR [rbp-0x34]
  424984:	jge    4249a3 <flatcc_verify_union_vector_field@@Base+0x229a>
  424986:	mov    rax,QWORD PTR [rip+0x17bc3]        # 43c550 <flatcc_builder_padding_base@@Base+0x25d0>
  42498d:	jmp    424a0c <flatcc_verify_union_vector_field@@Base+0x2303>
  42498f:	mov    rax,QWORD PTR [rbp-0x10]
  424993:	add    rax,rax
  424996:	mov    QWORD PTR [rbp-0x10],rax
  42499a:	mov    eax,DWORD PTR [rbp-0x8]
  42499d:	sub    eax,0x1
  4249a0:	mov    DWORD PTR [rbp-0x8],eax
  4249a3:	mov    eax,DWORD PTR [rbp-0x8]
  4249a6:	cmp    eax,DWORD PTR [rbp-0x34]
  4249a9:	jle    4249b8 <flatcc_verify_union_vector_field@@Base+0x22af>
  4249ab:	mov    rax,QWORD PTR [rbp-0x10]
  4249af:	and    rax,QWORD PTR [rbp-0x20]
  4249b3:	test   rax,rax
  4249b6:	je     42498f <flatcc_verify_union_vector_field@@Base+0x2286>
  4249b8:	mov    eax,DWORD PTR [rbp-0x8]
  4249bb:	cmp    eax,DWORD PTR [rbp-0x34]
  4249be:	jne    4249d7 <flatcc_verify_union_vector_field@@Base+0x22ce>
  4249c0:	mov    rax,QWORD PTR [rbp-0x10]
  4249c4:	and    rax,QWORD PTR [rbp-0x20]
  4249c8:	test   rax,rax
  4249cb:	jne    4249d7 <flatcc_verify_union_vector_field@@Base+0x22ce>
  4249cd:	mov    QWORD PTR [rbp-0x28],0x0
  4249d5:	jmp    4249e5 <flatcc_verify_union_vector_field@@Base+0x22dc>
  4249d7:	mov    edx,DWORD PTR [rbp-0x8]
  4249da:	mov    eax,DWORD PTR [rbp-0x30]
  4249dd:	add    eax,edx
  4249df:	cdqe   
  4249e1:	mov    QWORD PTR [rbp-0x28],rax
  4249e5:	mov    rax,QWORD PTR [rbp-0x10]
  4249e9:	and    rax,QWORD PTR [rbp-0x18]
  4249ed:	mov    rdx,rax
  4249f0:	mov    eax,DWORD PTR [rbp-0x2c]
  4249f3:	mov    rcx,QWORD PTR [rbp-0x28]
  4249f7:	shlx   rax,rcx,rax
  4249fc:	or     rax,rdx
  4249ff:	mov    rdi,rax
  424a02:	call   42454e <flatcc_verify_union_vector_field@@Base+0x1e45>
  424a07:	vmovq  rax,xmm0
  424a0c:	mov    QWORD PTR [rbp-0x58],rax
  424a10:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  424a15:	leave  
  424a16:	ret    
  424a17:	push   rbp
  424a18:	mov    rbp,rsp
  424a1b:	mov    DWORD PTR [rbp-0x14],edi
  424a1e:	mov    DWORD PTR [rbp-0x18],esi
  424a21:	mov    QWORD PTR [rbp-0x20],rdx
  424a25:	mov    eax,DWORD PTR [rbp-0x18]
  424a28:	add    eax,0x1
  424a2b:	imul   eax,eax,0x4d1
  424a31:	sar    eax,0xc
  424a34:	add    eax,0x1
  424a37:	mov    DWORD PTR [rbp-0x4],eax
  424a3a:	mov    eax,DWORD PTR [rbp-0x4]
  424a3d:	cdqe   
  424a3f:	lea    rdx,[rax*4+0x0]
  424a47:	lea    rax,[rip+0x16df2]        # 43b840 <flatcc_builder_padding_base@@Base+0x18c0>
  424a4e:	mov    eax,DWORD PTR [rdx+rax*1]
  424a51:	cmp    eax,DWORD PTR [rbp-0x14]
  424a54:	jbe    424a5a <flatcc_verify_union_vector_field@@Base+0x2351>
  424a56:	sub    DWORD PTR [rbp-0x4],0x1
  424a5a:	mov    eax,DWORD PTR [rbp-0x4]
  424a5d:	cdqe   
  424a5f:	lea    rdx,[rax*4+0x0]
  424a67:	lea    rax,[rip+0x16dd2]        # 43b840 <flatcc_builder_padding_base@@Base+0x18c0>
  424a6e:	mov    edx,DWORD PTR [rdx+rax*1]
  424a71:	mov    rax,QWORD PTR [rbp-0x20]
  424a75:	mov    DWORD PTR [rax],edx
  424a77:	mov    eax,DWORD PTR [rbp-0x4]
  424a7a:	pop    rbp
  424a7b:	ret    
  424a7c:	push   rbp
  424a7d:	mov    rbp,rsp
  424a80:	sub    rsp,0x20
  424a84:	mov    DWORD PTR [rbp-0x14],edi
  424a87:	mov    QWORD PTR [rbp-0x20],rsi
  424a8b:	mov    DWORD PTR [rbp-0x10],0x15c
  424a92:	mov    DWORD PTR [rbp-0xc],0x8
  424a99:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  424aa0:	jge    424ac1 <flatcc_verify_union_vector_field@@Base+0x23b8>
  424aa2:	lea    rcx,[rip+0x175c7]        # 43c070 <flatcc_builder_padding_base@@Base+0x20f0>
  424aa9:	mov    edx,0x50
  424aae:	lea    rsi,[rip+0x16dbb]        # 43b870 <flatcc_builder_padding_base@@Base+0x18f0>
  424ab5:	lea    rdi,[rip+0x16e2c]        # 43b8e8 <flatcc_builder_padding_base@@Base+0x1968>
  424abc:	call   405080 <__assert_fail@plt>
  424ac1:	mov    eax,DWORD PTR [rbp-0xc]
  424ac4:	add    eax,0x154
  424ac9:	cmp    eax,DWORD PTR [rbp-0x14]
  424acc:	jg     424aed <flatcc_verify_union_vector_field@@Base+0x23e4>
  424ace:	lea    rcx,[rip+0x1759b]        # 43c070 <flatcc_builder_padding_base@@Base+0x20f0>
  424ad5:	mov    edx,0x51
  424ada:	lea    rsi,[rip+0x16d8f]        # 43b870 <flatcc_builder_padding_base@@Base+0x18f0>
  424ae1:	lea    rdi,[rip+0x16e20]        # 43b908 <flatcc_builder_padding_base@@Base+0x1988>
  424ae8:	call   405080 <__assert_fail@plt>
  424aed:	mov    edx,DWORD PTR [rbp-0x14]
  424af0:	mov    eax,DWORD PTR [rbp-0x10]
  424af3:	add    eax,edx
  424af5:	cdq    
  424af6:	idiv   DWORD PTR [rbp-0xc]
  424af9:	mov    DWORD PTR [rbp-0x8],eax
  424afc:	mov    eax,DWORD PTR [rbp-0x8]
  424aff:	cdqe   
  424b01:	shl    rax,0x4
  424b05:	mov    rdx,rax
  424b08:	lea    rax,[rip+0x1671b]        # 43b22a <flatcc_builder_padding_base@@Base+0x12aa>
  424b0f:	movzx  eax,WORD PTR [rdx+rax*1]
  424b13:	cwde   
  424b14:	mov    DWORD PTR [rbp-0x4],eax
  424b17:	mov    eax,DWORD PTR [rbp-0x8]
  424b1a:	cdqe   
  424b1c:	shl    rax,0x4
  424b20:	mov    rdx,rax
  424b23:	lea    rax,[rip+0x166f6]        # 43b220 <flatcc_builder_padding_base@@Base+0x12a0>
  424b2a:	mov    rdx,QWORD PTR [rdx+rax*1]
  424b2e:	mov    rax,QWORD PTR [rbp-0x20]
  424b32:	mov    QWORD PTR [rax],rdx
  424b35:	mov    eax,DWORD PTR [rbp-0x8]
  424b38:	cdqe   
  424b3a:	shl    rax,0x4
  424b3e:	mov    rdx,rax
  424b41:	lea    rax,[rip+0x166e0]        # 43b228 <flatcc_builder_padding_base@@Base+0x12a8>
  424b48:	movzx  eax,WORD PTR [rdx+rax*1]
  424b4c:	movsx  edx,ax
  424b4f:	mov    rax,QWORD PTR [rbp-0x20]
  424b53:	mov    DWORD PTR [rax+0x8],edx
  424b56:	mov    eax,DWORD PTR [rbp-0x4]
  424b59:	cmp    eax,DWORD PTR [rbp-0x14]
  424b5c:	jle    424b7d <flatcc_verify_union_vector_field@@Base+0x2474>
  424b5e:	lea    rcx,[rip+0x1750b]        # 43c070 <flatcc_builder_padding_base@@Base+0x20f0>
  424b65:	mov    edx,0x58
  424b6a:	lea    rsi,[rip+0x16cff]        # 43b870 <flatcc_builder_padding_base@@Base+0x18f0>
  424b71:	lea    rdi,[rip+0x16dbb]        # 43b933 <flatcc_builder_padding_base@@Base+0x19b3>
  424b78:	call   405080 <__assert_fail@plt>
  424b7d:	mov    edx,DWORD PTR [rbp-0x4]
  424b80:	mov    eax,DWORD PTR [rbp-0xc]
  424b83:	add    eax,edx
  424b85:	cmp    eax,DWORD PTR [rbp-0x14]
  424b88:	jg     424ba9 <flatcc_verify_union_vector_field@@Base+0x24a0>
  424b8a:	lea    rcx,[rip+0x174df]        # 43c070 <flatcc_builder_padding_base@@Base+0x20f0>
  424b91:	mov    edx,0x59
  424b96:	lea    rsi,[rip+0x16cd3]        # 43b870 <flatcc_builder_padding_base@@Base+0x18f0>
  424b9d:	lea    rdi,[rip+0x16d9e]        # 43b942 <flatcc_builder_padding_base@@Base+0x19c2>
  424ba4:	call   405080 <__assert_fail@plt>
  424ba9:	mov    eax,DWORD PTR [rbp-0x4]
  424bac:	leave  
  424bad:	ret    

0000000000424bae <grisu3_diy_fp_encode_double@@Base>:
  424bae:	push   rbp
  424baf:	mov    rbp,rsp
  424bb2:	sub    rsp,0xb0
  424bb9:	mov    QWORD PTR [rbp-0x98],rdi
  424bc0:	mov    DWORD PTR [rbp-0x9c],esi
  424bc6:	mov    DWORD PTR [rbp-0xa0],edx
  424bcc:	mov    DWORD PTR [rbp-0xa4],ecx
  424bd2:	mov    QWORD PTR [rbp-0xb0],r8
  424bd9:	mov    rax,QWORD PTR fs:0x28
  424be2:	mov    QWORD PTR [rbp-0x8],rax
  424be6:	xor    eax,eax
  424be8:	mov    DWORD PTR [rbp-0x7c],0x3
  424bef:	mov    eax,DWORD PTR [rbp-0x7c]
  424bf2:	mov    edx,0x1
  424bf7:	shlx   eax,edx,eax
  424bfc:	mov    DWORD PTR [rbp-0x78],eax
  424bff:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  424c06:	movabs rax,0x10000000000000
  424c10:	mov    QWORD PTR [rbp-0x48],rax
  424c14:	mov    DWORD PTR [rbp-0x70],0x40
  424c1b:	mov    DWORD PTR [rbp-0x6c],0x13
  424c22:	cmp    DWORD PTR [rbp-0xa4],0x0
  424c29:	je     424c39 <grisu3_diy_fp_encode_double@@Base+0x8b>
  424c2b:	mov    eax,DWORD PTR [rbp-0x78]
  424c2e:	mov    edx,eax
  424c30:	shr    edx,0x1f
  424c33:	add    eax,edx
  424c35:	sar    eax,1
  424c37:	jmp    424c3e <grisu3_diy_fp_encode_double@@Base+0x90>
  424c39:	mov    eax,0x0
  424c3e:	mov    DWORD PTR [rbp-0x84],eax
  424c44:	mov    eax,DWORD PTR [rbp-0x9c]
  424c4a:	sub    eax,DWORD PTR [rbp-0xa0]
  424c50:	mov    DWORD PTR [rbp-0x68],eax
  424c53:	mov    rax,QWORD PTR [rbp-0x98]
  424c5a:	mov    QWORD PTR [rbp-0x40],rax
  424c5e:	mov    DWORD PTR [rbp-0x38],0x0
  424c65:	mov    rdx,QWORD PTR [rbp-0x40]
  424c69:	mov    rax,QWORD PTR [rbp-0x38]
  424c6d:	mov    rdi,rdx
  424c70:	mov    rsi,rax
  424c73:	call   4247d3 <flatcc_verify_union_vector_field@@Base+0x20ca>
  424c78:	mov    QWORD PTR [rbp-0x40],rax
  424c7c:	mov    QWORD PTR [rbp-0x38],rdx
  424c80:	mov    eax,DWORD PTR [rbp-0x38]
  424c83:	neg    eax
  424c85:	mov    ecx,eax
  424c87:	shl    DWORD PTR [rbp-0x84],cl
  424c8d:	lea    rdx,[rbp-0x30]
  424c91:	mov    eax,DWORD PTR [rbp-0x68]
  424c94:	mov    rsi,rdx
  424c97:	mov    edi,eax
  424c99:	call   424a7c <flatcc_verify_union_vector_field@@Base+0x2373>
  424c9e:	mov    DWORD PTR [rbp-0x64],eax
  424ca1:	mov    eax,DWORD PTR [rbp-0x64]
  424ca4:	cmp    eax,DWORD PTR [rbp-0x68]
  424ca7:	je     424d42 <grisu3_diy_fp_encode_double@@Base+0x194>
  424cad:	mov    eax,DWORD PTR [rbp-0x68]
  424cb0:	sub    eax,DWORD PTR [rbp-0x64]
  424cb3:	sub    eax,0x1
  424cb6:	mov    DWORD PTR [rbp-0x60],eax
  424cb9:	cmp    DWORD PTR [rbp-0x60],0x0
  424cbd:	js     424cc5 <grisu3_diy_fp_encode_double@@Base+0x117>
  424cbf:	cmp    DWORD PTR [rbp-0x60],0x6
  424cc3:	jle    424ce4 <grisu3_diy_fp_encode_double@@Base+0x136>
  424cc5:	lea    rcx,[rip+0x173c4]        # 43c090 <flatcc_builder_padding_base@@Base+0x2110>
  424ccc:	mov    edx,0xb9
  424cd1:	lea    rsi,[rip+0x16b98]        # 43b870 <flatcc_builder_padding_base@@Base+0x18f0>
  424cd8:	lea    rdi,[rip+0x16c7e]        # 43b95d <flatcc_builder_padding_base@@Base+0x19dd>
  424cdf:	call   405080 <__assert_fail@plt>
  424ce4:	mov    eax,DWORD PTR [rbp-0x60]
  424ce7:	cdqe   
  424ce9:	shl    rax,0x4
  424ced:	mov    rdx,rax
  424cf0:	lea    rax,[rip+0x21d09]        # 446a00 <__data_start@@Base+0x940>
  424cf7:	lea    rdx,[rdx+rax*1]
  424cfb:	mov    rax,QWORD PTR [rdx]
  424cfe:	mov    rdx,QWORD PTR [rdx+0x8]
  424d02:	mov    rdi,QWORD PTR [rbp-0x40]
  424d06:	mov    rsi,QWORD PTR [rbp-0x38]
  424d0a:	mov    rcx,rdx
  424d0d:	mov    rdx,rax
  424d10:	call   4246df <flatcc_verify_union_vector_field@@Base+0x1fd6>
  424d15:	mov    QWORD PTR [rbp-0x40],rax
  424d19:	mov    QWORD PTR [rbp-0x38],rdx
  424d1d:	mov    eax,DWORD PTR [rbp-0xa0]
  424d23:	lea    edx,[rax+0x1]
  424d26:	mov    eax,DWORD PTR [rbp-0x60]
  424d29:	add    eax,edx
  424d2b:	cmp    eax,DWORD PTR [rbp-0x6c]
  424d2e:	jle    424d42 <grisu3_diy_fp_encode_double@@Base+0x194>
  424d30:	mov    eax,DWORD PTR [rbp-0x78]
  424d33:	mov    edx,eax
  424d35:	shr    edx,0x1f
  424d38:	add    eax,edx
  424d3a:	sar    eax,1
  424d3c:	add    DWORD PTR [rbp-0x84],eax
  424d42:	mov    rax,QWORD PTR [rbp-0x30]
  424d46:	mov    rdx,QWORD PTR [rbp-0x28]
  424d4a:	mov    rdi,QWORD PTR [rbp-0x40]
  424d4e:	mov    rsi,QWORD PTR [rbp-0x38]
  424d52:	mov    rcx,rdx
  424d55:	mov    rdx,rax
  424d58:	call   4246df <flatcc_verify_union_vector_field@@Base+0x1fd6>
  424d5d:	mov    QWORD PTR [rbp-0x40],rax
  424d61:	mov    QWORD PTR [rbp-0x38],rdx
  424d65:	cmp    DWORD PTR [rbp-0x84],0x0
  424d6c:	setne  al
  424d6f:	movzx  edx,al
  424d72:	mov    eax,DWORD PTR [rbp-0x78]
  424d75:	add    eax,edx
  424d77:	add    DWORD PTR [rbp-0x84],eax
  424d7d:	mov    eax,DWORD PTR [rbp-0x38]
  424d80:	mov    DWORD PTR [rbp-0x5c],eax
  424d83:	mov    rdx,QWORD PTR [rbp-0x40]
  424d87:	mov    rax,QWORD PTR [rbp-0x38]
  424d8b:	mov    rdi,rdx
  424d8e:	mov    rsi,rax
  424d91:	call   4247d3 <flatcc_verify_union_vector_field@@Base+0x20ca>
  424d96:	mov    QWORD PTR [rbp-0x40],rax
  424d9a:	mov    QWORD PTR [rbp-0x38],rdx
  424d9e:	mov    eax,DWORD PTR [rbp-0x38]
  424da1:	mov    edx,DWORD PTR [rbp-0x5c]
  424da4:	sub    edx,eax
  424da6:	mov    eax,edx
  424da8:	mov    ecx,eax
  424daa:	shl    DWORD PTR [rbp-0x84],cl
  424db0:	mov    edx,DWORD PTR [rbp-0x38]
  424db3:	mov    eax,DWORD PTR [rbp-0x70]
  424db6:	add    eax,edx
  424db8:	mov    DWORD PTR [rbp-0x58],eax
  424dbb:	mov    edx,DWORD PTR [rbp-0x70]
  424dbe:	mov    eax,DWORD PTR [rbp-0x74]
  424dc1:	add    eax,edx
  424dc3:	cmp    eax,DWORD PTR [rbp-0x58]
  424dc6:	jle    424ddf <grisu3_diy_fp_encode_double@@Base+0x231>
  424dc8:	mov    eax,DWORD PTR [rbp-0x58]
  424dcb:	cmp    eax,DWORD PTR [rbp-0x74]
  424dce:	jle    424dd8 <grisu3_diy_fp_encode_double@@Base+0x22a>
  424dd0:	mov    eax,DWORD PTR [rbp-0x58]
  424dd3:	sub    eax,DWORD PTR [rbp-0x74]
  424dd6:	jmp    424de2 <grisu3_diy_fp_encode_double@@Base+0x234>
  424dd8:	mov    eax,0x0
  424ddd:	jmp    424de2 <grisu3_diy_fp_encode_double@@Base+0x234>
  424ddf:	mov    eax,DWORD PTR [rbp-0x70]
  424de2:	mov    DWORD PTR [rbp-0x58],eax
  424de5:	mov    eax,DWORD PTR [rbp-0x70]
  424de8:	sub    eax,DWORD PTR [rbp-0x58]
  424deb:	mov    DWORD PTR [rbp-0x80],eax
  424dee:	mov    edx,DWORD PTR [rbp-0x80]
  424df1:	mov    eax,DWORD PTR [rbp-0x7c]
  424df4:	add    eax,edx
  424df6:	cmp    eax,DWORD PTR [rbp-0x70]
  424df9:	jl     424e49 <grisu3_diy_fp_encode_double@@Base+0x29b>
  424dfb:	mov    edx,DWORD PTR [rbp-0x80]
  424dfe:	mov    eax,DWORD PTR [rbp-0x7c]
  424e01:	add    eax,edx
  424e03:	sub    eax,DWORD PTR [rbp-0x70]
  424e06:	sub    eax,0x1
  424e09:	mov    DWORD PTR [rbp-0x54],eax
  424e0c:	mov    rdx,QWORD PTR [rbp-0x40]
  424e10:	mov    eax,DWORD PTR [rbp-0x54]
  424e13:	shrx   rax,rdx,rax
  424e18:	mov    QWORD PTR [rbp-0x40],rax
  424e1c:	mov    edx,DWORD PTR [rbp-0x38]
  424e1f:	mov    eax,DWORD PTR [rbp-0x54]
  424e22:	add    eax,edx
  424e24:	mov    DWORD PTR [rbp-0x38],eax
  424e27:	mov    eax,DWORD PTR [rbp-0x54]
  424e2a:	mov    edx,DWORD PTR [rbp-0x84]
  424e30:	sarx   eax,edx,eax
  424e35:	lea    edx,[rax+0x1]
  424e38:	mov    eax,DWORD PTR [rbp-0x78]
  424e3b:	add    eax,edx
  424e3d:	mov    DWORD PTR [rbp-0x84],eax
  424e43:	mov    eax,DWORD PTR [rbp-0x54]
  424e46:	sub    DWORD PTR [rbp-0x80],eax
  424e49:	mov    rdx,QWORD PTR [rbp-0x40]
  424e4d:	mov    eax,DWORD PTR [rbp-0x80]
  424e50:	shrx   rax,rdx,rax
  424e55:	mov    QWORD PTR [rbp-0x20],rax
  424e59:	mov    edx,DWORD PTR [rbp-0x38]
  424e5c:	mov    eax,DWORD PTR [rbp-0x80]
  424e5f:	add    eax,edx
  424e61:	mov    DWORD PTR [rbp-0x18],eax
  424e64:	mov    rax,QWORD PTR [rbp-0x40]
  424e68:	mov    edx,DWORD PTR [rbp-0x80]
  424e6b:	sub    edx,0x1
  424e6e:	mov    ecx,0x1
  424e73:	shlx   rdx,rcx,rdx
  424e78:	and    rax,rdx
  424e7b:	mov    edx,eax
  424e7d:	mov    eax,DWORD PTR [rbp-0x78]
  424e80:	cdqe   
  424e82:	imul   eax,edx
  424e85:	mov    DWORD PTR [rbp-0x50],eax
  424e88:	mov    eax,DWORD PTR [rbp-0x78]
  424e8b:	movsxd rdx,eax
  424e8e:	mov    eax,DWORD PTR [rbp-0x80]
  424e91:	sub    eax,0x1
  424e94:	shlx   rax,rdx,rax
  424e99:	mov    DWORD PTR [rbp-0x4c],eax
  424e9c:	mov    edx,DWORD PTR [rbp-0x4c]
  424e9f:	mov    eax,DWORD PTR [rbp-0x84]
  424ea5:	add    eax,edx
  424ea7:	cmp    eax,DWORD PTR [rbp-0x80]
  424eaa:	jg     424edf <grisu3_diy_fp_encode_double@@Base+0x331>
  424eac:	mov    rax,QWORD PTR [rbp-0x20]
  424eb0:	add    rax,0x1
  424eb4:	mov    QWORD PTR [rbp-0x20],rax
  424eb8:	mov    rax,QWORD PTR [rbp-0x20]
  424ebc:	mov    rdx,QWORD PTR [rbp-0x48]
  424ec0:	add    rdx,rdx
  424ec3:	and    rax,rdx
  424ec6:	test   rax,rax
  424ec9:	je     424edf <grisu3_diy_fp_encode_double@@Base+0x331>
  424ecb:	mov    rax,QWORD PTR [rbp-0x20]
  424ecf:	shr    rax,1
  424ed2:	mov    QWORD PTR [rbp-0x20],rax
  424ed6:	mov    eax,DWORD PTR [rbp-0x18]
  424ed9:	add    eax,0x1
  424edc:	mov    DWORD PTR [rbp-0x18],eax
  424edf:	mov    rdx,QWORD PTR [rbp-0x20]
  424ee3:	mov    rax,QWORD PTR [rbp-0x18]
  424ee7:	mov    rdi,rdx
  424eea:	mov    rsi,rax
  424eed:	call   4248fa <flatcc_verify_union_vector_field@@Base+0x21f1>
  424ef2:	vmovq  rdx,xmm0
  424ef7:	mov    rax,QWORD PTR [rbp-0xb0]
  424efe:	mov    QWORD PTR [rax],rdx
  424f01:	mov    eax,DWORD PTR [rbp-0x4c]
  424f04:	sub    eax,DWORD PTR [rbp-0x84]
  424f0a:	cmp    eax,DWORD PTR [rbp-0x50]
  424f0d:	jge    424f1f <grisu3_diy_fp_encode_double@@Base+0x371>
  424f0f:	mov    edx,DWORD PTR [rbp-0x4c]
  424f12:	mov    eax,DWORD PTR [rbp-0x84]
  424f18:	add    eax,edx
  424f1a:	cmp    eax,DWORD PTR [rbp-0x50]
  424f1d:	jg     424f26 <grisu3_diy_fp_encode_double@@Base+0x378>
  424f1f:	mov    eax,0x1
  424f24:	jmp    424f2b <grisu3_diy_fp_encode_double@@Base+0x37d>
  424f26:	mov    eax,0x0
  424f2b:	mov    rcx,QWORD PTR [rbp-0x8]
  424f2f:	xor    rcx,QWORD PTR fs:0x28
  424f38:	je     424f3f <grisu3_diy_fp_encode_double@@Base+0x391>
  424f3a:	call   405070 <__stack_chk_fail@plt>
  424f3f:	leave  
  424f40:	ret    
  424f41:	push   rbp
  424f42:	mov    rbp,rsp
  424f45:	sub    rsp,0x50
  424f49:	mov    QWORD PTR [rbp-0x28],rdi
  424f4d:	mov    QWORD PTR [rbp-0x30],rsi
  424f51:	mov    DWORD PTR [rbp-0x34],edx
  424f54:	mov    QWORD PTR [rbp-0x40],rcx
  424f58:	mov    DWORD PTR [rbp-0x38],r8d
  424f5c:	mov    DWORD PTR [rbp-0x44],r9d
  424f60:	mov    rax,QWORD PTR [rbp+0x18]
  424f64:	mov    QWORD PTR [rbp-0x50],rax
  424f68:	mov    rax,QWORD PTR fs:0x28
  424f71:	mov    QWORD PTR [rbp-0x8],rax
  424f75:	xor    eax,eax
  424f77:	mov    DWORD PTR [rbp-0x20],0x135
  424f7e:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  424f85:	cmp    QWORD PTR [rbp-0x40],0x0
  424f8a:	je     424f94 <grisu3_diy_fp_encode_double@@Base+0x3e6>
  424f8c:	mov    eax,DWORD PTR [rbp-0x38]
  424f8f:	cmp    eax,DWORD PTR [rbp-0x1c]
  424f92:	jge    424fa5 <grisu3_diy_fp_encode_double@@Base+0x3f7>
  424f94:	mov    rax,QWORD PTR [rbp-0x50]
  424f98:	vxorpd xmm0,xmm0,xmm0
  424f9c:	vmovsd QWORD PTR [rax],xmm0
  424fa0:	jmp    425557 <grisu3_diy_fp_encode_double@@Base+0x9a9>
  424fa5:	mov    eax,DWORD PTR [rbp-0x38]
  424fa8:	sub    eax,0x1
  424fab:	cmp    eax,DWORD PTR [rbp-0x20]
  424fae:	jle    424fd0 <grisu3_diy_fp_encode_double@@Base+0x422>
  424fb0:	movabs rdi,0x7ff0000000000000
  424fba:	call   42454e <flatcc_verify_union_vector_field@@Base+0x1e45>
  424fbf:	vmovq  rdx,xmm0
  424fc4:	mov    rax,QWORD PTR [rbp-0x50]
  424fc8:	mov    QWORD PTR [rax],rdx
  424fcb:	jmp    425557 <grisu3_diy_fp_encode_double@@Base+0x9a9>
  424fd0:	movabs rax,0x1fffffffffffff
  424fda:	cmp    QWORD PTR [rbp-0x40],rax
  424fde:	ja     425501 <grisu3_diy_fp_encode_double@@Base+0x953>
  424fe4:	cmp    DWORD PTR [rbp-0x38],0x0
  424fe8:	js     425501 <grisu3_diy_fp_encode_double@@Base+0x953>
  424fee:	cmp    DWORD PTR [rbp-0x38],0x16
  424ff2:	jg     425501 <grisu3_diy_fp_encode_double@@Base+0x953>
  424ff8:	mov    rax,QWORD PTR [rbp-0x40]
  424ffc:	test   rax,rax
  424fff:	js     42500c <grisu3_diy_fp_encode_double@@Base+0x45e>
  425001:	vxorpd xmm0,xmm0,xmm0
  425005:	vcvtsi2sd xmm0,xmm0,rax
  42500a:	jmp    425025 <grisu3_diy_fp_encode_double@@Base+0x477>
  42500c:	mov    rdx,rax
  42500f:	shr    rdx,1
  425012:	and    eax,0x1
  425015:	or     rdx,rax
  425018:	vxorpd xmm0,xmm0,xmm0
  42501c:	vcvtsi2sd xmm0,xmm0,rdx
  425021:	vaddsd xmm0,xmm0,xmm0
  425025:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42502a:	mov    eax,DWORD PTR [rbp-0x38]
  42502d:	sub    eax,DWORD PTR [rbp-0x44]
  425030:	add    eax,0x16
  425033:	cmp    eax,0x2c
  425036:	ja     4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42503c:	mov    eax,eax
  42503e:	lea    rdx,[rax*4+0x0]
  425046:	lea    rax,[rip+0x1692f]        # 43b97c <flatcc_builder_padding_base@@Base+0x19fc>
  42504d:	mov    eax,DWORD PTR [rdx+rax*1]
  425050:	movsxd rdx,eax
  425053:	lea    rax,[rip+0x16922]        # 43b97c <flatcc_builder_padding_base@@Base+0x19fc>
  42505a:	add    rax,rdx
  42505d:	jmp    rax
  42505f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425064:	vmovsd xmm1,QWORD PTR [rip+0x174f4]        # 43c560 <flatcc_builder_padding_base@@Base+0x25e0>
  42506c:	vdivsd xmm0,xmm0,xmm1
  425070:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425075:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42507a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42507f:	vmovsd xmm1,QWORD PTR [rip+0x174e1]        # 43c568 <flatcc_builder_padding_base@@Base+0x25e8>
  425087:	vdivsd xmm0,xmm0,xmm1
  42508b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425090:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425095:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42509a:	vmovsd xmm1,QWORD PTR [rip+0x174ce]        # 43c570 <flatcc_builder_padding_base@@Base+0x25f0>
  4250a2:	vdivsd xmm0,xmm0,xmm1
  4250a6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4250ab:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4250b0:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4250b5:	vmovsd xmm1,QWORD PTR [rip+0x174bb]        # 43c578 <flatcc_builder_padding_base@@Base+0x25f8>
  4250bd:	vdivsd xmm0,xmm0,xmm1
  4250c1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4250c6:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4250cb:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4250d0:	vmovsd xmm1,QWORD PTR [rip+0x174a8]        # 43c580 <flatcc_builder_padding_base@@Base+0x2600>
  4250d8:	vdivsd xmm0,xmm0,xmm1
  4250dc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4250e1:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4250e6:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4250eb:	vmovsd xmm1,QWORD PTR [rip+0x17495]        # 43c588 <flatcc_builder_padding_base@@Base+0x2608>
  4250f3:	vdivsd xmm0,xmm0,xmm1
  4250f7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4250fc:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425101:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425106:	vmovsd xmm1,QWORD PTR [rip+0x17482]        # 43c590 <flatcc_builder_padding_base@@Base+0x2610>
  42510e:	vdivsd xmm0,xmm0,xmm1
  425112:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425117:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42511c:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425121:	vmovsd xmm1,QWORD PTR [rip+0x1746f]        # 43c598 <flatcc_builder_padding_base@@Base+0x2618>
  425129:	vdivsd xmm0,xmm0,xmm1
  42512d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425132:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425137:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42513c:	vmovsd xmm1,QWORD PTR [rip+0x1745c]        # 43c5a0 <flatcc_builder_padding_base@@Base+0x2620>
  425144:	vdivsd xmm0,xmm0,xmm1
  425148:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42514d:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425152:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425157:	vmovsd xmm1,QWORD PTR [rip+0x17449]        # 43c5a8 <flatcc_builder_padding_base@@Base+0x2628>
  42515f:	vdivsd xmm0,xmm0,xmm1
  425163:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425168:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42516d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425172:	vmovsd xmm1,QWORD PTR [rip+0x17436]        # 43c5b0 <flatcc_builder_padding_base@@Base+0x2630>
  42517a:	vdivsd xmm0,xmm0,xmm1
  42517e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425183:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425188:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42518d:	vmovsd xmm1,QWORD PTR [rip+0x17423]        # 43c5b8 <flatcc_builder_padding_base@@Base+0x2638>
  425195:	vdivsd xmm0,xmm0,xmm1
  425199:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42519e:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4251a3:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4251a8:	vmovsd xmm1,QWORD PTR [rip+0x17410]        # 43c5c0 <flatcc_builder_padding_base@@Base+0x2640>
  4251b0:	vdivsd xmm0,xmm0,xmm1
  4251b4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4251b9:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4251be:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4251c3:	vmovsd xmm1,QWORD PTR [rip+0x173fd]        # 43c5c8 <flatcc_builder_padding_base@@Base+0x2648>
  4251cb:	vdivsd xmm0,xmm0,xmm1
  4251cf:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4251d4:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4251d9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4251de:	vmovsd xmm1,QWORD PTR [rip+0x173ea]        # 43c5d0 <flatcc_builder_padding_base@@Base+0x2650>
  4251e6:	vdivsd xmm0,xmm0,xmm1
  4251ea:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4251ef:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4251f4:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4251f9:	vmovsd xmm1,QWORD PTR [rip+0x173d7]        # 43c5d8 <flatcc_builder_padding_base@@Base+0x2658>
  425201:	vdivsd xmm0,xmm0,xmm1
  425205:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42520a:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42520f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425214:	vmovsd xmm1,QWORD PTR [rip+0x173c4]        # 43c5e0 <flatcc_builder_padding_base@@Base+0x2660>
  42521c:	vdivsd xmm0,xmm0,xmm1
  425220:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425225:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42522a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42522f:	vmovsd xmm1,QWORD PTR [rip+0x173b1]        # 43c5e8 <flatcc_builder_padding_base@@Base+0x2668>
  425237:	vdivsd xmm0,xmm0,xmm1
  42523b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425240:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425245:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42524a:	vmovsd xmm1,QWORD PTR [rip+0x1739e]        # 43c5f0 <flatcc_builder_padding_base@@Base+0x2670>
  425252:	vdivsd xmm0,xmm0,xmm1
  425256:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42525b:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425260:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425265:	vmovsd xmm1,QWORD PTR [rip+0x1738b]        # 43c5f8 <flatcc_builder_padding_base@@Base+0x2678>
  42526d:	vdivsd xmm0,xmm0,xmm1
  425271:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425276:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42527b:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  425280:	vmovsd xmm1,QWORD PTR [rip+0x17378]        # 43c600 <flatcc_builder_padding_base@@Base+0x2680>
  425288:	vdivsd xmm0,xmm0,xmm1
  42528c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425291:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425296:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42529b:	vmovsd xmm1,QWORD PTR [rip+0x17365]        # 43c608 <flatcc_builder_padding_base@@Base+0x2688>
  4252a3:	vdivsd xmm0,xmm0,xmm1
  4252a7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4252ac:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4252b1:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4252b6:	vmovsd xmm0,QWORD PTR [rip+0x1734a]        # 43c608 <flatcc_builder_padding_base@@Base+0x2688>
  4252be:	vmulsd xmm0,xmm1,xmm0
  4252c2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4252c7:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4252cc:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4252d1:	vmovsd xmm0,QWORD PTR [rip+0x17327]        # 43c600 <flatcc_builder_padding_base@@Base+0x2680>
  4252d9:	vmulsd xmm0,xmm1,xmm0
  4252dd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4252e2:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4252e7:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4252ec:	vmovsd xmm0,QWORD PTR [rip+0x17304]        # 43c5f8 <flatcc_builder_padding_base@@Base+0x2678>
  4252f4:	vmulsd xmm0,xmm1,xmm0
  4252f8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4252fd:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425302:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425307:	vmovsd xmm0,QWORD PTR [rip+0x172e1]        # 43c5f0 <flatcc_builder_padding_base@@Base+0x2670>
  42530f:	vmulsd xmm0,xmm1,xmm0
  425313:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425318:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42531d:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425322:	vmovsd xmm0,QWORD PTR [rip+0x172be]        # 43c5e8 <flatcc_builder_padding_base@@Base+0x2668>
  42532a:	vmulsd xmm0,xmm1,xmm0
  42532e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425333:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425338:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42533d:	vmovsd xmm0,QWORD PTR [rip+0x1729b]        # 43c5e0 <flatcc_builder_padding_base@@Base+0x2660>
  425345:	vmulsd xmm0,xmm1,xmm0
  425349:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42534e:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425353:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425358:	vmovsd xmm0,QWORD PTR [rip+0x17278]        # 43c5d8 <flatcc_builder_padding_base@@Base+0x2658>
  425360:	vmulsd xmm0,xmm1,xmm0
  425364:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425369:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42536e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425373:	vmovsd xmm0,QWORD PTR [rip+0x17255]        # 43c5d0 <flatcc_builder_padding_base@@Base+0x2650>
  42537b:	vmulsd xmm0,xmm1,xmm0
  42537f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425384:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425389:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42538e:	vmovsd xmm0,QWORD PTR [rip+0x17232]        # 43c5c8 <flatcc_builder_padding_base@@Base+0x2648>
  425396:	vmulsd xmm0,xmm1,xmm0
  42539a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42539f:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4253a4:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4253a9:	vmovsd xmm0,QWORD PTR [rip+0x1720f]        # 43c5c0 <flatcc_builder_padding_base@@Base+0x2640>
  4253b1:	vmulsd xmm0,xmm1,xmm0
  4253b5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4253ba:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4253bf:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4253c4:	vmovsd xmm0,QWORD PTR [rip+0x171ec]        # 43c5b8 <flatcc_builder_padding_base@@Base+0x2638>
  4253cc:	vmulsd xmm0,xmm1,xmm0
  4253d0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4253d5:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4253da:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4253df:	vmovsd xmm0,QWORD PTR [rip+0x171c9]        # 43c5b0 <flatcc_builder_padding_base@@Base+0x2630>
  4253e7:	vmulsd xmm0,xmm1,xmm0
  4253eb:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4253f0:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4253f5:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4253fa:	vmovsd xmm0,QWORD PTR [rip+0x171a6]        # 43c5a8 <flatcc_builder_padding_base@@Base+0x2628>
  425402:	vmulsd xmm0,xmm1,xmm0
  425406:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42540b:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425410:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425415:	vmovsd xmm0,QWORD PTR [rip+0x17183]        # 43c5a0 <flatcc_builder_padding_base@@Base+0x2620>
  42541d:	vmulsd xmm0,xmm1,xmm0
  425421:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425426:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  42542b:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425430:	vmovsd xmm0,QWORD PTR [rip+0x17160]        # 43c598 <flatcc_builder_padding_base@@Base+0x2618>
  425438:	vmulsd xmm0,xmm1,xmm0
  42543c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425441:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425446:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42544b:	vmovsd xmm0,QWORD PTR [rip+0x1713d]        # 43c590 <flatcc_builder_padding_base@@Base+0x2610>
  425453:	vmulsd xmm0,xmm1,xmm0
  425457:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42545c:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425461:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425466:	vmovsd xmm0,QWORD PTR [rip+0x1711a]        # 43c588 <flatcc_builder_padding_base@@Base+0x2608>
  42546e:	vmulsd xmm0,xmm1,xmm0
  425472:	vmovsd QWORD PTR [rbp-0x10],xmm0
  425477:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425479:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42547e:	vmovsd xmm0,QWORD PTR [rip+0x170fa]        # 43c580 <flatcc_builder_padding_base@@Base+0x2600>
  425486:	vmulsd xmm0,xmm1,xmm0
  42548a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42548f:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  425491:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  425496:	vmovsd xmm0,QWORD PTR [rip+0x170da]        # 43c578 <flatcc_builder_padding_base@@Base+0x25f8>
  42549e:	vmulsd xmm0,xmm1,xmm0
  4254a2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4254a7:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4254a9:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4254ae:	vmovsd xmm0,QWORD PTR [rip+0x170ba]        # 43c570 <flatcc_builder_padding_base@@Base+0x25f0>
  4254b6:	vmulsd xmm0,xmm1,xmm0
  4254ba:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4254bf:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4254c1:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4254c6:	vmovsd xmm0,QWORD PTR [rip+0x1709a]        # 43c568 <flatcc_builder_padding_base@@Base+0x25e8>
  4254ce:	vmulsd xmm0,xmm1,xmm0
  4254d2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4254d7:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4254d9:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4254de:	vmovsd xmm0,QWORD PTR [rip+0x1707a]        # 43c560 <flatcc_builder_padding_base@@Base+0x25e0>
  4254e6:	vmulsd xmm0,xmm1,xmm0
  4254ea:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4254ef:	jmp    4254f2 <grisu3_diy_fp_encode_double@@Base+0x944>
  4254f1:	nop
  4254f2:	mov    rax,QWORD PTR [rbp-0x50]
  4254f6:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4254fb:	vmovsd QWORD PTR [rax],xmm0
  4254ff:	jmp    425557 <grisu3_diy_fp_encode_double@@Base+0x9a9>
  425501:	mov    rcx,QWORD PTR [rbp-0x50]
  425505:	mov    edx,DWORD PTR [rbp-0x44]
  425508:	mov    esi,DWORD PTR [rbp-0x38]
  42550b:	mov    rax,QWORD PTR [rbp-0x40]
  42550f:	mov    r8,rcx
  425512:	mov    ecx,DWORD PTR [rbp+0x10]
  425515:	mov    rdi,rax
  425518:	call   424bae <grisu3_diy_fp_encode_double@@Base>
  42551d:	test   eax,eax
  42551f:	jne    425556 <grisu3_diy_fp_encode_double@@Base+0x9a8>
  425521:	lea    rdx,[rbp-0x18]
  425525:	mov    rax,QWORD PTR [rbp-0x28]
  425529:	mov    rsi,rdx
  42552c:	mov    rdi,rax
  42552f:	call   405050 <strtod@plt>
  425534:	vmovq  rdx,xmm0
  425539:	mov    rax,QWORD PTR [rbp-0x50]
  42553d:	mov    QWORD PTR [rax],rdx
  425540:	mov    rax,QWORD PTR [rbp-0x18]
  425544:	cmp    rax,QWORD PTR [rbp-0x30]
  425548:	jae    425550 <grisu3_diy_fp_encode_double@@Base+0x9a2>
  42554a:	mov    rax,QWORD PTR [rbp-0x18]
  42554e:	jmp    42557d <grisu3_diy_fp_encode_double@@Base+0x9cf>
  425550:	mov    rax,QWORD PTR [rbp-0x30]
  425554:	jmp    42557d <grisu3_diy_fp_encode_double@@Base+0x9cf>
  425556:	nop
  425557:	cmp    DWORD PTR [rbp-0x34],0x0
  42555b:	je     425579 <grisu3_diy_fp_encode_double@@Base+0x9cb>
  42555d:	mov    rax,QWORD PTR [rbp-0x50]
  425561:	vmovsd xmm1,QWORD PTR [rax]
  425565:	vmovsd xmm0,QWORD PTR [rip+0x16fd3]        # 43c540 <flatcc_builder_padding_base@@Base+0x25c0>
  42556d:	vxorpd xmm0,xmm0,xmm1
  425571:	mov    rax,QWORD PTR [rbp-0x50]
  425575:	vmovsd QWORD PTR [rax],xmm0
  425579:	mov    rax,QWORD PTR [rbp-0x30]
  42557d:	mov    rcx,QWORD PTR [rbp-0x8]
  425581:	xor    rcx,QWORD PTR fs:0x28
  42558a:	je     425591 <grisu3_diy_fp_encode_double@@Base+0x9e3>
  42558c:	call   405070 <__stack_chk_fail@plt>
  425591:	leave  
  425592:	ret    
  425593:	push   rbp
  425594:	mov    rbp,rsp
  425597:	mov    QWORD PTR [rbp-0x8],rdi
  42559b:	mov    QWORD PTR [rbp-0x10],rsi
  42559f:	mov    DWORD PTR [rbp-0x14],edx
  4255a2:	mov    QWORD PTR [rbp-0x20],rcx
  4255a6:	mov    rax,QWORD PTR [rbp-0x20]
  4255aa:	vxorpd xmm0,xmm0,xmm0
  4255ae:	vmovsd QWORD PTR [rax],xmm0
  4255b2:	mov    rax,QWORD PTR [rbp-0x8]
  4255b6:	pop    rbp
  4255b7:	ret    
  4255b8:	push   rbp
  4255b9:	mov    rbp,rsp
  4255bc:	sub    rsp,0x60
  4255c0:	mov    QWORD PTR [rbp-0x48],rdi
  4255c4:	mov    DWORD PTR [rbp-0x4c],esi
  4255c7:	mov    QWORD PTR [rbp-0x58],rdx
  4255cb:	mov    DWORD PTR [rbp-0x38],0x0
  4255d2:	mov    DWORD PTR [rbp-0x34],0x0
  4255d9:	mov    QWORD PTR [rbp-0x18],0x0
  4255e1:	mov    DWORD PTR [rbp-0x30],0x0
  4255e8:	mov    DWORD PTR [rbp-0x2c],0x0
  4255ef:	mov    DWORD PTR [rbp-0x28],0x0
  4255f6:	mov    DWORD PTR [rbp-0x24],0x0
  4255fd:	mov    rax,QWORD PTR [rbp-0x58]
  425601:	vxorpd xmm0,xmm0,xmm0
  425605:	vmovsd QWORD PTR [rax],xmm0
  425609:	mov    eax,DWORD PTR [rbp-0x4c]
  42560c:	cdqe   
  42560e:	lea    rdx,[rax+0x1]
  425612:	mov    rax,QWORD PTR [rbp-0x48]
  425616:	add    rax,rdx
  425619:	mov    QWORD PTR [rbp-0x20],rax
  42561d:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  425624:	jle    425634 <grisu3_diy_fp_encode_double@@Base+0xa86>
  425626:	mov    rax,QWORD PTR [rbp-0x48]
  42562a:	add    rax,0x3e9
  425630:	mov    QWORD PTR [rbp-0x20],rax
  425634:	mov    rax,QWORD PTR [rbp-0x48]
  425638:	cmp    rax,QWORD PTR [rbp-0x20]
  42563c:	jne    425647 <grisu3_diy_fp_encode_double@@Base+0xa99>
  42563e:	mov    rax,QWORD PTR [rbp-0x48]
  425642:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  425647:	mov    rax,QWORD PTR [rbp-0x48]
  42564b:	mov    QWORD PTR [rbp-0x10],rax
  42564f:	mov    rax,QWORD PTR [rbp-0x48]
  425653:	movzx  eax,BYTE PTR [rax]
  425656:	cmp    al,0x2d
  425658:	jne    42567a <grisu3_diy_fp_encode_double@@Base+0xacc>
  42565a:	add    QWORD PTR [rbp-0x48],0x1
  42565f:	mov    DWORD PTR [rbp-0x38],0x1
  425666:	mov    rax,QWORD PTR [rbp-0x48]
  42566a:	cmp    rax,QWORD PTR [rbp-0x20]
  42566e:	jne    42567a <grisu3_diy_fp_encode_double@@Base+0xacc>
  425670:	mov    eax,0x0
  425675:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  42567a:	mov    rax,QWORD PTR [rbp-0x48]
  42567e:	movzx  eax,BYTE PTR [rax]
  425681:	cmp    al,0x30
  425683:	jne    4256f5 <grisu3_diy_fp_encode_double@@Base+0xb47>
  425685:	add    QWORD PTR [rbp-0x48],0x1
  42568a:	mov    rax,QWORD PTR [rbp-0x48]
  42568e:	cmp    rax,QWORD PTR [rbp-0x20]
  425692:	je     4256de <grisu3_diy_fp_encode_double@@Base+0xb30>
  425694:	mov    rax,QWORD PTR [rbp-0x48]
  425698:	movzx  eax,BYTE PTR [rax]
  42569b:	or     eax,0x20
  42569e:	cmp    al,0x78
  4256a0:	jne    4256de <grisu3_diy_fp_encode_double@@Base+0xb30>
  4256a2:	mov    rcx,QWORD PTR [rbp-0x58]
  4256a6:	mov    edx,DWORD PTR [rbp-0x38]
  4256a9:	mov    rsi,QWORD PTR [rbp-0x20]
  4256ad:	mov    rax,QWORD PTR [rbp-0x48]
  4256b1:	mov    rdi,rax
  4256b4:	call   425593 <grisu3_diy_fp_encode_double@@Base+0x9e5>
  4256b9:	mov    QWORD PTR [rbp-0x8],rax
  4256bd:	mov    rax,QWORD PTR [rbp-0x8]
  4256c1:	cmp    rax,QWORD PTR [rbp-0x48]
  4256c5:	jne    4256d0 <grisu3_diy_fp_encode_double@@Base+0xb22>
  4256c7:	mov    rax,QWORD PTR [rbp-0x10]
  4256cb:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  4256d0:	mov    rax,QWORD PTR [rbp-0x8]
  4256d4:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  4256d9:	add    QWORD PTR [rbp-0x48],0x1
  4256de:	mov    rax,QWORD PTR [rbp-0x48]
  4256e2:	cmp    rax,QWORD PTR [rbp-0x20]
  4256e6:	je     42573f <grisu3_diy_fp_encode_double@@Base+0xb91>
  4256e8:	mov    rax,QWORD PTR [rbp-0x48]
  4256ec:	movzx  eax,BYTE PTR [rax]
  4256ef:	cmp    al,0x30
  4256f1:	je     4256d9 <grisu3_diy_fp_encode_double@@Base+0xb2b>
  4256f3:	jmp    42573f <grisu3_diy_fp_encode_double@@Base+0xb91>
  4256f5:	mov    rax,QWORD PTR [rbp-0x48]
  4256f9:	movzx  eax,BYTE PTR [rax]
  4256fc:	cmp    al,0x30
  4256fe:	jle    42570b <grisu3_diy_fp_encode_double@@Base+0xb5d>
  425700:	mov    rax,QWORD PTR [rbp-0x48]
  425704:	movzx  eax,BYTE PTR [rax]
  425707:	cmp    al,0x39
  425709:	jle    425724 <grisu3_diy_fp_encode_double@@Base+0xb76>
  42570b:	cmp    DWORD PTR [rbp-0x38],0x0
  42570f:	jne    42571a <grisu3_diy_fp_encode_double@@Base+0xb6c>
  425711:	mov    rax,QWORD PTR [rbp-0x10]
  425715:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  42571a:	mov    eax,0x0
  42571f:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  425724:	mov    rax,QWORD PTR [rbp-0x48]
  425728:	lea    rdx,[rax+0x1]
  42572c:	mov    QWORD PTR [rbp-0x48],rdx
  425730:	movzx  eax,BYTE PTR [rax]
  425733:	movsx  eax,al
  425736:	sub    eax,0x30
  425739:	cdqe   
  42573b:	mov    QWORD PTR [rbp-0x18],rax
  42573f:	mov    rax,QWORD PTR [rbp-0x48]
  425743:	mov    QWORD PTR [rbp-0x8],rax
  425747:	jmp    4257a7 <grisu3_diy_fp_encode_double@@Base+0xbf9>
  425749:	movabs rax,0x1999999999999998
  425753:	cmp    QWORD PTR [rbp-0x18],rax
  425757:	jbe    425775 <grisu3_diy_fp_encode_double@@Base+0xbc7>
  425759:	mov    rax,QWORD PTR [rbp-0x48]
  42575d:	movzx  eax,BYTE PTR [rax]
  425760:	cmp    al,0x34
  425762:	setg   al
  425765:	movzx  eax,al
  425768:	add    QWORD PTR [rbp-0x18],rax
  42576c:	mov    DWORD PTR [rbp-0x24],0x1
  425773:	jmp    4257c7 <grisu3_diy_fp_encode_double@@Base+0xc19>
  425775:	mov    rdx,QWORD PTR [rbp-0x18]
  425779:	mov    rax,rdx
  42577c:	shl    rax,0x2
  425780:	add    rax,rdx
  425783:	add    rax,rax
  425786:	mov    rcx,rax
  425789:	mov    rax,QWORD PTR [rbp-0x48]
  42578d:	lea    rdx,[rax+0x1]
  425791:	mov    QWORD PTR [rbp-0x48],rdx
  425795:	movzx  eax,BYTE PTR [rax]
  425798:	movsx  rax,al
  42579c:	add    rax,rcx
  42579f:	sub    rax,0x30
  4257a3:	mov    QWORD PTR [rbp-0x18],rax
  4257a7:	mov    rax,QWORD PTR [rbp-0x48]
  4257ab:	cmp    rax,QWORD PTR [rbp-0x20]
  4257af:	je     4257c7 <grisu3_diy_fp_encode_double@@Base+0xc19>
  4257b1:	mov    rax,QWORD PTR [rbp-0x48]
  4257b5:	movzx  eax,BYTE PTR [rax]
  4257b8:	cmp    al,0x2f
  4257ba:	jle    4257c7 <grisu3_diy_fp_encode_double@@Base+0xc19>
  4257bc:	mov    rax,QWORD PTR [rbp-0x48]
  4257c0:	movzx  eax,BYTE PTR [rax]
  4257c3:	cmp    al,0x39
  4257c5:	jle    425749 <grisu3_diy_fp_encode_double@@Base+0xb9b>
  4257c7:	mov    rdx,QWORD PTR [rbp-0x48]
  4257cb:	mov    rax,QWORD PTR [rbp-0x8]
  4257cf:	sub    rdx,rax
  4257d2:	mov    rax,rdx
  4257d5:	mov    DWORD PTR [rbp-0x28],eax
  4257d8:	jmp    4257e3 <grisu3_diy_fp_encode_double@@Base+0xc35>
  4257da:	add    DWORD PTR [rbp-0x30],0x1
  4257de:	add    QWORD PTR [rbp-0x48],0x1
  4257e3:	mov    rax,QWORD PTR [rbp-0x48]
  4257e7:	cmp    rax,QWORD PTR [rbp-0x20]
  4257eb:	je     4257f8 <grisu3_diy_fp_encode_double@@Base+0xc4a>
  4257ed:	mov    rax,QWORD PTR [rbp-0x48]
  4257f1:	movzx  eax,BYTE PTR [rax]
  4257f4:	cmp    al,0x30
  4257f6:	je     4257da <grisu3_diy_fp_encode_double@@Base+0xc2c>
  4257f8:	mov    rax,QWORD PTR [rbp-0x48]
  4257fc:	cmp    rax,QWORD PTR [rbp-0x20]
  425800:	je     425853 <grisu3_diy_fp_encode_double@@Base+0xca5>
  425802:	mov    rax,QWORD PTR [rbp-0x48]
  425806:	movzx  eax,BYTE PTR [rax]
  425809:	cmp    al,0x30
  42580b:	jle    425853 <grisu3_diy_fp_encode_double@@Base+0xca5>
  42580d:	mov    rax,QWORD PTR [rbp-0x48]
  425811:	movzx  eax,BYTE PTR [rax]
  425814:	cmp    al,0x39
  425816:	jg     425853 <grisu3_diy_fp_encode_double@@Base+0xca5>
  425818:	mov    DWORD PTR [rbp-0x24],0x1
  42581f:	add    DWORD PTR [rbp-0x30],0x1
  425823:	add    QWORD PTR [rbp-0x48],0x1
  425828:	jmp    425833 <grisu3_diy_fp_encode_double@@Base+0xc85>
  42582a:	add    DWORD PTR [rbp-0x30],0x1
  42582e:	add    QWORD PTR [rbp-0x48],0x1
  425833:	mov    rax,QWORD PTR [rbp-0x48]
  425837:	cmp    rax,QWORD PTR [rbp-0x20]
  42583b:	je     425853 <grisu3_diy_fp_encode_double@@Base+0xca5>
  42583d:	mov    rax,QWORD PTR [rbp-0x48]
  425841:	movzx  eax,BYTE PTR [rax]
  425844:	cmp    al,0x2f
  425846:	jle    425853 <grisu3_diy_fp_encode_double@@Base+0xca5>
  425848:	mov    rax,QWORD PTR [rbp-0x48]
  42584c:	movzx  eax,BYTE PTR [rax]
  42584f:	cmp    al,0x39
  425851:	jle    42582a <grisu3_diy_fp_encode_double@@Base+0xc7c>
  425853:	mov    rax,QWORD PTR [rbp-0x48]
  425857:	cmp    rax,QWORD PTR [rbp-0x20]
  42585b:	je     4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  425861:	mov    rax,QWORD PTR [rbp-0x48]
  425865:	movzx  eax,BYTE PTR [rax]
  425868:	cmp    al,0x2e
  42586a:	jne    4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  425870:	add    QWORD PTR [rbp-0x48],0x1
  425875:	mov    rax,QWORD PTR [rbp-0x48]
  425879:	mov    QWORD PTR [rbp-0x8],rax
  42587d:	mov    rax,QWORD PTR [rbp-0x48]
  425881:	movzx  eax,BYTE PTR [rax]
  425884:	cmp    al,0x2f
  425886:	jle    425893 <grisu3_diy_fp_encode_double@@Base+0xce5>
  425888:	mov    rax,QWORD PTR [rbp-0x48]
  42588c:	movzx  eax,BYTE PTR [rax]
  42588f:	cmp    al,0x39
  425891:	jle    425905 <grisu3_diy_fp_encode_double@@Base+0xd57>
  425893:	mov    eax,0x0
  425898:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  42589d:	movabs rax,0x1999999999999998
  4258a7:	cmp    QWORD PTR [rbp-0x18],rax
  4258ab:	jbe    4258cf <grisu3_diy_fp_encode_double@@Base+0xd21>
  4258ad:	cmp    DWORD PTR [rbp-0x24],0x0
  4258b1:	jne    42592b <grisu3_diy_fp_encode_double@@Base+0xd7d>
  4258b3:	mov    rax,QWORD PTR [rbp-0x48]
  4258b7:	movzx  eax,BYTE PTR [rax]
  4258ba:	cmp    al,0x34
  4258bc:	setg   al
  4258bf:	movzx  eax,al
  4258c2:	add    QWORD PTR [rbp-0x18],rax
  4258c6:	mov    DWORD PTR [rbp-0x24],0x1
  4258cd:	jmp    42592b <grisu3_diy_fp_encode_double@@Base+0xd7d>
  4258cf:	mov    rdx,QWORD PTR [rbp-0x18]
  4258d3:	mov    rax,rdx
  4258d6:	shl    rax,0x2
  4258da:	add    rax,rdx
  4258dd:	add    rax,rax
  4258e0:	mov    rcx,rax
  4258e3:	mov    rax,QWORD PTR [rbp-0x48]
  4258e7:	lea    rdx,[rax+0x1]
  4258eb:	mov    QWORD PTR [rbp-0x48],rdx
  4258ef:	movzx  eax,BYTE PTR [rax]
  4258f2:	movsx  rax,al
  4258f6:	add    rax,rcx
  4258f9:	sub    rax,0x30
  4258fd:	mov    QWORD PTR [rbp-0x18],rax
  425901:	sub    DWORD PTR [rbp-0x30],0x1
  425905:	mov    rax,QWORD PTR [rbp-0x48]
  425909:	cmp    rax,QWORD PTR [rbp-0x20]
  42590d:	je     42592c <grisu3_diy_fp_encode_double@@Base+0xd7e>
  42590f:	mov    rax,QWORD PTR [rbp-0x48]
  425913:	movzx  eax,BYTE PTR [rax]
  425916:	cmp    al,0x2f
  425918:	jle    42592c <grisu3_diy_fp_encode_double@@Base+0xd7e>
  42591a:	mov    rax,QWORD PTR [rbp-0x48]
  42591e:	movzx  eax,BYTE PTR [rax]
  425921:	cmp    al,0x39
  425923:	jle    42589d <grisu3_diy_fp_encode_double@@Base+0xcef>
  425929:	jmp    42592c <grisu3_diy_fp_encode_double@@Base+0xd7e>
  42592b:	nop
  42592c:	mov    rdx,QWORD PTR [rbp-0x48]
  425930:	mov    rax,QWORD PTR [rbp-0x8]
  425934:	sub    rdx,rax
  425937:	mov    rax,rdx
  42593a:	add    DWORD PTR [rbp-0x28],eax
  42593d:	jmp    425948 <grisu3_diy_fp_encode_double@@Base+0xd9a>
  42593f:	add    DWORD PTR [rbp-0x30],0x1
  425943:	add    QWORD PTR [rbp-0x48],0x1
  425948:	mov    rax,QWORD PTR [rbp-0x48]
  42594c:	cmp    rax,QWORD PTR [rbp-0x20]
  425950:	je     42595d <grisu3_diy_fp_encode_double@@Base+0xdaf>
  425952:	mov    rax,QWORD PTR [rbp-0x48]
  425956:	movzx  eax,BYTE PTR [rax]
  425959:	cmp    al,0x30
  42595b:	je     42593f <grisu3_diy_fp_encode_double@@Base+0xd91>
  42595d:	mov    rax,QWORD PTR [rbp-0x48]
  425961:	cmp    rax,QWORD PTR [rbp-0x20]
  425965:	je     4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  425967:	mov    rax,QWORD PTR [rbp-0x48]
  42596b:	movzx  eax,BYTE PTR [rax]
  42596e:	cmp    al,0x30
  425970:	jle    4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  425972:	mov    rax,QWORD PTR [rbp-0x48]
  425976:	movzx  eax,BYTE PTR [rax]
  425979:	cmp    al,0x39
  42597b:	jg     4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  42597d:	mov    DWORD PTR [rbp-0x24],0x1
  425984:	add    QWORD PTR [rbp-0x48],0x1
  425989:	jmp    425990 <grisu3_diy_fp_encode_double@@Base+0xde2>
  42598b:	add    QWORD PTR [rbp-0x48],0x1
  425990:	mov    rax,QWORD PTR [rbp-0x48]
  425994:	cmp    rax,QWORD PTR [rbp-0x20]
  425998:	je     4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  42599a:	mov    rax,QWORD PTR [rbp-0x48]
  42599e:	movzx  eax,BYTE PTR [rax]
  4259a1:	cmp    al,0x2f
  4259a3:	jle    4259b0 <grisu3_diy_fp_encode_double@@Base+0xe02>
  4259a5:	mov    rax,QWORD PTR [rbp-0x48]
  4259a9:	movzx  eax,BYTE PTR [rax]
  4259ac:	cmp    al,0x39
  4259ae:	jle    42598b <grisu3_diy_fp_encode_double@@Base+0xddd>
  4259b0:	mov    eax,DWORD PTR [rbp-0x28]
  4259b3:	add    DWORD PTR [rbp-0x30],eax
  4259b6:	mov    rax,QWORD PTR [rbp-0x48]
  4259ba:	cmp    rax,QWORD PTR [rbp-0x20]
  4259be:	je     425ad0 <grisu3_diy_fp_encode_double@@Base+0xf22>
  4259c4:	mov    rax,QWORD PTR [rbp-0x48]
  4259c8:	movzx  eax,BYTE PTR [rax]
  4259cb:	or     eax,0x20
  4259ce:	cmp    al,0x65
  4259d0:	jne    425ad0 <grisu3_diy_fp_encode_double@@Base+0xf22>
  4259d6:	mov    rdx,QWORD PTR [rbp-0x20]
  4259da:	mov    rax,QWORD PTR [rbp-0x48]
  4259de:	sub    rdx,rax
  4259e1:	mov    rax,rdx
  4259e4:	cmp    rax,0x1
  4259e8:	jg     4259f4 <grisu3_diy_fp_encode_double@@Base+0xe46>
  4259ea:	mov    eax,0x0
  4259ef:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  4259f4:	add    QWORD PTR [rbp-0x48],0x1
  4259f9:	mov    rax,QWORD PTR [rbp-0x48]
  4259fd:	movzx  eax,BYTE PTR [rax]
  425a00:	cmp    al,0x2b
  425a02:	jne    425a1d <grisu3_diy_fp_encode_double@@Base+0xe6f>
  425a04:	add    QWORD PTR [rbp-0x48],0x1
  425a09:	mov    rax,QWORD PTR [rbp-0x48]
  425a0d:	cmp    rax,QWORD PTR [rbp-0x20]
  425a11:	jne    425a48 <grisu3_diy_fp_encode_double@@Base+0xe9a>
  425a13:	mov    eax,0x0
  425a18:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  425a1d:	mov    rax,QWORD PTR [rbp-0x48]
  425a21:	movzx  eax,BYTE PTR [rax]
  425a24:	cmp    al,0x2d
  425a26:	jne    425a48 <grisu3_diy_fp_encode_double@@Base+0xe9a>
  425a28:	mov    DWORD PTR [rbp-0x34],0x1
  425a2f:	add    QWORD PTR [rbp-0x48],0x1
  425a34:	mov    rax,QWORD PTR [rbp-0x48]
  425a38:	cmp    rax,QWORD PTR [rbp-0x20]
  425a3c:	jne    425a48 <grisu3_diy_fp_encode_double@@Base+0xe9a>
  425a3e:	mov    eax,0x0
  425a43:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  425a48:	mov    rax,QWORD PTR [rbp-0x48]
  425a4c:	movzx  eax,BYTE PTR [rax]
  425a4f:	cmp    al,0x2f
  425a51:	jle    425a5e <grisu3_diy_fp_encode_double@@Base+0xeb0>
  425a53:	mov    rax,QWORD PTR [rbp-0x48]
  425a57:	movzx  eax,BYTE PTR [rax]
  425a5a:	cmp    al,0x39
  425a5c:	jle    425a68 <grisu3_diy_fp_encode_double@@Base+0xeba>
  425a5e:	mov    eax,0x0
  425a63:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  425a68:	mov    rax,QWORD PTR [rbp-0x48]
  425a6c:	lea    rdx,[rax+0x1]
  425a70:	mov    QWORD PTR [rbp-0x48],rdx
  425a74:	movzx  eax,BYTE PTR [rax]
  425a77:	movsx  eax,al
  425a7a:	sub    eax,0x30
  425a7d:	mov    DWORD PTR [rbp-0x2c],eax
  425a80:	jmp    425ab0 <grisu3_diy_fp_encode_double@@Base+0xf02>
  425a82:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  425a89:	jg     425aab <grisu3_diy_fp_encode_double@@Base+0xefd>
  425a8b:	mov    edx,DWORD PTR [rbp-0x2c]
  425a8e:	mov    eax,edx
  425a90:	shl    eax,0x2
  425a93:	add    eax,edx
  425a95:	add    eax,eax
  425a97:	mov    edx,eax
  425a99:	mov    rax,QWORD PTR [rbp-0x48]
  425a9d:	movzx  eax,BYTE PTR [rax]
  425aa0:	movsx  eax,al
  425aa3:	add    eax,edx
  425aa5:	sub    eax,0x30
  425aa8:	mov    DWORD PTR [rbp-0x2c],eax
  425aab:	add    QWORD PTR [rbp-0x48],0x1
  425ab0:	mov    rax,QWORD PTR [rbp-0x48]
  425ab4:	cmp    rax,QWORD PTR [rbp-0x20]
  425ab8:	je     425ad0 <grisu3_diy_fp_encode_double@@Base+0xf22>
  425aba:	mov    rax,QWORD PTR [rbp-0x48]
  425abe:	movzx  eax,BYTE PTR [rax]
  425ac1:	cmp    al,0x2f
  425ac3:	jle    425ad0 <grisu3_diy_fp_encode_double@@Base+0xf22>
  425ac5:	mov    rax,QWORD PTR [rbp-0x48]
  425ac9:	movzx  eax,BYTE PTR [rax]
  425acc:	cmp    al,0x39
  425ace:	jle    425a82 <grisu3_diy_fp_encode_double@@Base+0xed4>
  425ad0:	cmp    DWORD PTR [rbp-0x34],0x0
  425ad4:	je     425add <grisu3_diy_fp_encode_double@@Base+0xf2f>
  425ad6:	mov    eax,DWORD PTR [rbp-0x2c]
  425ad9:	neg    eax
  425adb:	jmp    425ae0 <grisu3_diy_fp_encode_double@@Base+0xf32>
  425add:	mov    eax,DWORD PTR [rbp-0x2c]
  425ae0:	add    DWORD PTR [rbp-0x30],eax
  425ae3:	mov    rax,QWORD PTR [rbp-0x48]
  425ae7:	cmp    rax,QWORD PTR [rbp-0x20]
  425aeb:	jne    425af4 <grisu3_diy_fp_encode_double@@Base+0xf46>
  425aed:	mov    eax,0x0
  425af2:	jmp    425b1e <grisu3_diy_fp_encode_double@@Base+0xf70>
  425af4:	mov    r9d,DWORD PTR [rbp-0x28]
  425af8:	mov    r8d,DWORD PTR [rbp-0x30]
  425afc:	mov    rcx,QWORD PTR [rbp-0x18]
  425b00:	mov    edx,DWORD PTR [rbp-0x38]
  425b03:	mov    rsi,QWORD PTR [rbp-0x48]
  425b07:	mov    rax,QWORD PTR [rbp-0x10]
  425b0b:	push   QWORD PTR [rbp-0x58]
  425b0e:	mov    edi,DWORD PTR [rbp-0x24]
  425b11:	push   rdi
  425b12:	mov    rdi,rax
  425b15:	call   424f41 <grisu3_diy_fp_encode_double@@Base+0x393>
  425b1a:	add    rsp,0x10
  425b1e:	leave  
  425b1f:	ret    
  425b20:	push   rbp
  425b21:	mov    rbp,rsp
  425b24:	sub    rsp,0x20
  425b28:	mov    QWORD PTR [rbp-0x8],rdi
  425b2c:	mov    DWORD PTR [rbp-0xc],esi
  425b2f:	mov    QWORD PTR [rbp-0x18],rdx
  425b33:	mov    rdx,QWORD PTR [rbp-0x18]
  425b37:	mov    ecx,DWORD PTR [rbp-0xc]
  425b3a:	mov    rax,QWORD PTR [rbp-0x8]
  425b3e:	mov    esi,ecx
  425b40:	mov    rdi,rax
  425b43:	call   4255b8 <grisu3_diy_fp_encode_double@@Base+0xa0a>
  425b48:	leave  
  425b49:	ret    
  425b4a:	push   rbp
  425b4b:	mov    rbp,rsp
  425b4e:	sub    rsp,0x40
  425b52:	mov    QWORD PTR [rbp-0x28],rdi
  425b56:	mov    DWORD PTR [rbp-0x2c],esi
  425b59:	mov    QWORD PTR [rbp-0x38],rdx
  425b5d:	mov    rax,QWORD PTR fs:0x28
  425b66:	mov    QWORD PTR [rbp-0x8],rax
  425b6a:	xor    eax,eax
  425b6c:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  425b73:	lea    rdx,[rbp-0x18]
  425b77:	mov    ecx,DWORD PTR [rbp-0x2c]
  425b7a:	mov    rax,QWORD PTR [rbp-0x28]
  425b7e:	mov    esi,ecx
  425b80:	mov    rdi,rax
  425b83:	call   425b20 <grisu3_diy_fp_encode_double@@Base+0xf72>
  425b88:	mov    QWORD PTR [rbp-0x10],rax
  425b8c:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  425b91:	vcvtsd2ss xmm0,xmm0,xmm0
  425b95:	mov    rax,QWORD PTR [rbp-0x38]
  425b99:	vmovss DWORD PTR [rax],xmm0
  425b9d:	mov    rax,QWORD PTR [rbp-0x38]
  425ba1:	vmovss xmm1,DWORD PTR [rax]
  425ba5:	vmovss xmm0,DWORD PTR [rip+0x16a63]        # 43c610 <flatcc_builder_padding_base@@Base+0x2690>
  425bad:	vandps xmm0,xmm0,xmm1
  425bb1:	vucomiss xmm0,DWORD PTR [rip+0x16a67]        # 43c620 <flatcc_builder_padding_base@@Base+0x26a0>
  425bb9:	setbe  al
  425bbc:	xor    eax,0x1
  425bbf:	test   al,al
  425bc1:	je     425bca <grisu3_diy_fp_encode_double@@Base+0x101c>
  425bc3:	mov    eax,0x1
  425bc8:	jmp    425bcf <grisu3_diy_fp_encode_double@@Base+0x1021>
  425bca:	mov    eax,0x0
  425bcf:	test   al,al
  425bd1:	je     425c08 <grisu3_diy_fp_encode_double@@Base+0x105a>
  425bd3:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  425bd8:	vxorpd xmm0,xmm0,xmm0
  425bdc:	vucomisd xmm0,xmm1
  425be0:	jbe    425bf5 <grisu3_diy_fp_encode_double@@Base+0x1047>
  425be2:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  425be7:	vmovss xmm0,DWORD PTR [rip+0x16941]        # 43c530 <flatcc_builder_padding_base@@Base+0x25b0>
  425bef:	vxorps xmm0,xmm0,xmm1
  425bf3:	jmp    425bfa <grisu3_diy_fp_encode_double@@Base+0x104c>
  425bf5:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  425bfa:	mov    rax,QWORD PTR [rbp-0x38]
  425bfe:	vmovss DWORD PTR [rax],xmm0
  425c02:	mov    rax,QWORD PTR [rbp-0x28]
  425c06:	jmp    425c0c <grisu3_diy_fp_encode_double@@Base+0x105e>
  425c08:	mov    rax,QWORD PTR [rbp-0x10]
  425c0c:	mov    rcx,QWORD PTR [rbp-0x8]
  425c10:	xor    rcx,QWORD PTR fs:0x28
  425c19:	je     425c20 <grisu3_diy_fp_encode_double@@Base+0x1072>
  425c1b:	call   405070 <__stack_chk_fail@plt>
  425c20:	leave  
  425c21:	ret    
  425c22:	push   rbp
  425c23:	mov    rbp,rsp
  425c26:	mov    DWORD PTR [rbp-0x4],edi
  425c29:	cmp    DWORD PTR [rbp-0x4],0x5
  425c2d:	ja     425c89 <grisu3_diy_fp_encode_double@@Base+0x10db>
  425c2f:	mov    eax,DWORD PTR [rbp-0x4]
  425c32:	lea    rdx,[rax*4+0x0]
  425c3a:	lea    rax,[rip+0x15e5b]        # 43ba9c <flatcc_builder_padding_base@@Base+0x1b1c>
  425c41:	mov    eax,DWORD PTR [rdx+rax*1]
  425c44:	movsxd rdx,eax
  425c47:	lea    rax,[rip+0x15e4e]        # 43ba9c <flatcc_builder_padding_base@@Base+0x1b1c>
  425c4e:	add    rax,rdx
  425c51:	jmp    rax
  425c53:	lea    rax,[rip+0x15dd6]        # 43ba30 <flatcc_builder_padding_base@@Base+0x1ab0>
  425c5a:	jmp    425c90 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  425c5c:	lea    rax,[rip+0x15dd0]        # 43ba33 <flatcc_builder_padding_base@@Base+0x1ab3>
  425c63:	jmp    425c90 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  425c65:	lea    rax,[rip+0x15dd8]        # 43ba44 <flatcc_builder_padding_base@@Base+0x1ac4>
  425c6c:	jmp    425c90 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  425c6e:	lea    rax,[rip+0x15ddc]        # 43ba51 <flatcc_builder_padding_base@@Base+0x1ad1>
  425c75:	jmp    425c90 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  425c77:	lea    rax,[rip+0x15de4]        # 43ba62 <flatcc_builder_padding_base@@Base+0x1ae2>
  425c7e:	jmp    425c90 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  425c80:	lea    rax,[rip+0x15def]        # 43ba76 <flatcc_builder_padding_base@@Base+0x1af6>
  425c87:	jmp    425c90 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  425c89:	lea    rax,[rip+0x15dfb]        # 43ba8b <flatcc_builder_padding_base@@Base+0x1b0b>
  425c90:	pop    rbp
  425c91:	ret    
  425c92:	push   rbp
  425c93:	mov    rbp,rsp
  425c96:	mov    QWORD PTR [rbp-0x28],rdi
  425c9a:	mov    DWORD PTR [rbp-0x2c],esi
  425c9d:	mov    rcx,QWORD PTR [rbp-0x28]
  425ca1:	movabs rdx,0xaaaaaaaaaaaaaaab
  425cab:	mov    rax,rcx
  425cae:	mul    rdx
  425cb1:	shr    rdx,1
  425cb4:	mov    rax,rdx
  425cb7:	add    rax,rax
  425cba:	add    rax,rdx
  425cbd:	sub    rcx,rax
  425cc0:	mov    rax,rcx
  425cc3:	mov    QWORD PTR [rbp-0x8],rax
  425cc7:	mov    rax,QWORD PTR [rbp-0x28]
  425ccb:	shl    rax,0x2
  425ccf:	movabs rdx,0xaaaaaaaaaaaaaaab
  425cd9:	mul    rdx
  425cdc:	mov    rax,rdx
  425cdf:	shr    rax,1
  425ce2:	add    rax,0x3
  425ce6:	and    rax,0xfffffffffffffffc
  425cea:	mov    QWORD PTR [rbp-0x10],rax
  425cee:	mov    eax,DWORD PTR [rbp-0x2c]
  425cf1:	and    eax,0x80
  425cf6:	mov    DWORD PTR [rbp-0x14],eax
  425cf9:	cmp    DWORD PTR [rbp-0x14],0x0
  425cfd:	jne    425d1e <grisu3_diy_fp_encode_double@@Base+0x1170>
  425cff:	mov    rax,QWORD PTR [rbp-0x8]
  425d03:	cmp    rax,0x1
  425d07:	je     425d18 <grisu3_diy_fp_encode_double@@Base+0x116a>
  425d09:	cmp    rax,0x2
  425d0d:	je     425d11 <grisu3_diy_fp_encode_double@@Base+0x1163>
  425d0f:	jmp    425d1e <grisu3_diy_fp_encode_double@@Base+0x1170>
  425d11:	sub    QWORD PTR [rbp-0x10],0x1
  425d16:	jmp    425d1e <grisu3_diy_fp_encode_double@@Base+0x1170>
  425d18:	sub    QWORD PTR [rbp-0x10],0x2
  425d1d:	nop
  425d1e:	mov    rax,QWORD PTR [rbp-0x10]
  425d22:	pop    rbp
  425d23:	ret    
  425d24:	push   rbp
  425d25:	mov    rbp,rsp
  425d28:	mov    QWORD PTR [rbp-0x18],rdi
  425d2c:	mov    rax,QWORD PTR [rbp-0x18]
  425d30:	and    eax,0x3
  425d33:	mov    QWORD PTR [rbp-0x10],rax
  425d37:	mov    rax,QWORD PTR [rbp-0x18]
  425d3b:	shr    rax,0x2
  425d3f:	mov    rdx,rax
  425d42:	mov    rax,rdx
  425d45:	add    rax,rax
  425d48:	add    rax,rdx
  425d4b:	mov    QWORD PTR [rbp-0x8],rax
  425d4f:	mov    rax,QWORD PTR [rbp-0x10]
  425d53:	cmp    rax,0x2
  425d57:	je     425d69 <grisu3_diy_fp_encode_double@@Base+0x11bb>
  425d59:	cmp    rax,0x3
  425d5d:	jne    425d73 <grisu3_diy_fp_encode_double@@Base+0x11c5>
  425d5f:	mov    rax,QWORD PTR [rbp-0x8]
  425d63:	add    rax,0x2
  425d67:	jmp    425d77 <grisu3_diy_fp_encode_double@@Base+0x11c9>
  425d69:	mov    rax,QWORD PTR [rbp-0x8]
  425d6d:	add    rax,0x1
  425d71:	jmp    425d77 <grisu3_diy_fp_encode_double@@Base+0x11c9>
  425d73:	mov    rax,QWORD PTR [rbp-0x8]
  425d77:	pop    rbp
  425d78:	ret    
  425d79:	push   rbp
  425d7a:	mov    rbp,rsp
  425d7d:	mov    QWORD PTR [rbp-0x38],rdi
  425d81:	mov    QWORD PTR [rbp-0x40],rsi
  425d85:	mov    QWORD PTR [rbp-0x48],rdx
  425d89:	mov    QWORD PTR [rbp-0x50],rcx
  425d8d:	mov    DWORD PTR [rbp-0x54],r8d
  425d91:	lea    rax,[rip+0x15d20]        # 43bab8 <flatcc_builder_padding_base@@Base+0x1b38>
  425d98:	mov    QWORD PTR [rbp-0x18],rax
  425d9c:	lea    rax,[rip+0x15d5d]        # 43bb00 <flatcc_builder_padding_base@@Base+0x1b80>
  425da3:	mov    QWORD PTR [rbp-0x10],rax
  425da7:	mov    rax,QWORD PTR [rbp-0x38]
  425dab:	mov    QWORD PTR [rbp-0x8],rax
  425daf:	mov    eax,DWORD PTR [rbp-0x54]
  425db2:	and    eax,0x80
  425db7:	mov    DWORD PTR [rbp-0x2c],eax
  425dba:	mov    QWORD PTR [rbp-0x20],0x0
  425dc2:	mov    DWORD PTR [rbp-0x30],0x3
  425dc9:	cmp    QWORD PTR [rbp-0x50],0x0
  425dce:	jne    425ddc <grisu3_diy_fp_encode_double@@Base+0x122e>
  425dd0:	mov    DWORD PTR [rbp-0x30],0x2
  425dd7:	jmp    42603d <grisu3_diy_fp_encode_double@@Base+0x148f>
  425ddc:	mov    rax,QWORD PTR [rbp-0x50]
  425de0:	mov    rax,QWORD PTR [rax]
  425de3:	mov    QWORD PTR [rbp-0x20],rax
  425de7:	and    DWORD PTR [rbp-0x54],0xffffff1f
  425dee:	mov    eax,DWORD PTR [rbp-0x54]
  425df1:	test   eax,eax
  425df3:	je     425dff <grisu3_diy_fp_encode_double@@Base+0x1251>
  425df5:	cmp    eax,0x1
  425df8:	je     425e09 <grisu3_diy_fp_encode_double@@Base+0x125b>
  425dfa:	jmp    42603d <grisu3_diy_fp_encode_double@@Base+0x148f>
  425dff:	mov    rax,QWORD PTR [rbp-0x18]
  425e03:	mov    QWORD PTR [rbp-0x28],rax
  425e07:	jmp    425e12 <grisu3_diy_fp_encode_double@@Base+0x1264>
  425e09:	mov    rax,QWORD PTR [rbp-0x10]
  425e0d:	mov    QWORD PTR [rbp-0x28],rax
  425e11:	nop
  425e12:	mov    DWORD PTR [rbp-0x30],0x0
  425e19:	jmp    425eee <grisu3_diy_fp_encode_double@@Base+0x1340>
  425e1e:	mov    rax,QWORD PTR [rbp-0x40]
  425e22:	movzx  eax,BYTE PTR [rax]
  425e25:	shr    al,0x2
  425e28:	movzx  edx,al
  425e2b:	mov    rax,QWORD PTR [rbp-0x28]
  425e2f:	add    rax,rdx
  425e32:	movzx  edx,BYTE PTR [rax]
  425e35:	mov    rax,QWORD PTR [rbp-0x38]
  425e39:	mov    BYTE PTR [rax],dl
  425e3b:	mov    rax,QWORD PTR [rbp-0x38]
  425e3f:	lea    rdx,[rax+0x1]
  425e43:	mov    rax,QWORD PTR [rbp-0x40]
  425e47:	movzx  eax,BYTE PTR [rax]
  425e4a:	movzx  eax,al
  425e4d:	shl    eax,0x4
  425e50:	and    eax,0x30
  425e53:	mov    ecx,eax
  425e55:	mov    rax,QWORD PTR [rbp-0x40]
  425e59:	add    rax,0x1
  425e5d:	movzx  eax,BYTE PTR [rax]
  425e60:	shr    al,0x4
  425e63:	movzx  eax,al
  425e66:	or     eax,ecx
  425e68:	movsxd rcx,eax
  425e6b:	mov    rax,QWORD PTR [rbp-0x28]
  425e6f:	add    rax,rcx
  425e72:	movzx  eax,BYTE PTR [rax]
  425e75:	mov    BYTE PTR [rdx],al
  425e77:	mov    rax,QWORD PTR [rbp-0x38]
  425e7b:	lea    rdx,[rax+0x2]
  425e7f:	mov    rax,QWORD PTR [rbp-0x40]
  425e83:	add    rax,0x1
  425e87:	movzx  eax,BYTE PTR [rax]
  425e8a:	movzx  eax,al
  425e8d:	shl    eax,0x2
  425e90:	and    eax,0x3c
  425e93:	mov    ecx,eax
  425e95:	mov    rax,QWORD PTR [rbp-0x40]
  425e99:	add    rax,0x2
  425e9d:	movzx  eax,BYTE PTR [rax]
  425ea0:	shr    al,0x6
  425ea3:	movzx  eax,al
  425ea6:	or     eax,ecx
  425ea8:	movsxd rcx,eax
  425eab:	mov    rax,QWORD PTR [rbp-0x28]
  425eaf:	add    rax,rcx
  425eb2:	movzx  eax,BYTE PTR [rax]
  425eb5:	mov    BYTE PTR [rdx],al
  425eb7:	mov    rax,QWORD PTR [rbp-0x38]
  425ebb:	lea    rdx,[rax+0x3]
  425ebf:	mov    rax,QWORD PTR [rbp-0x40]
  425ec3:	add    rax,0x2
  425ec7:	movzx  eax,BYTE PTR [rax]
  425eca:	movzx  eax,al
  425ecd:	and    eax,0x3f
  425ed0:	mov    rcx,rax
  425ed3:	mov    rax,QWORD PTR [rbp-0x28]
  425ed7:	add    rax,rcx
  425eda:	movzx  eax,BYTE PTR [rax]
  425edd:	mov    BYTE PTR [rdx],al
  425edf:	sub    QWORD PTR [rbp-0x20],0x3
  425ee4:	add    QWORD PTR [rbp-0x38],0x4
  425ee9:	add    QWORD PTR [rbp-0x40],0x3
  425eee:	cmp    QWORD PTR [rbp-0x20],0x2
  425ef3:	ja     425e1e <grisu3_diy_fp_encode_double@@Base+0x1270>
  425ef9:	mov    rax,QWORD PTR [rbp-0x20]
  425efd:	cmp    rax,0x1
  425f01:	je     425fb7 <grisu3_diy_fp_encode_double@@Base+0x1409>
  425f07:	cmp    rax,0x2
  425f0b:	jne    426028 <grisu3_diy_fp_encode_double@@Base+0x147a>
  425f11:	mov    rax,QWORD PTR [rbp-0x40]
  425f15:	movzx  eax,BYTE PTR [rax]
  425f18:	shr    al,0x2
  425f1b:	movzx  edx,al
  425f1e:	mov    rax,QWORD PTR [rbp-0x28]
  425f22:	add    rax,rdx
  425f25:	movzx  edx,BYTE PTR [rax]
  425f28:	mov    rax,QWORD PTR [rbp-0x38]
  425f2c:	mov    BYTE PTR [rax],dl
  425f2e:	mov    rax,QWORD PTR [rbp-0x38]
  425f32:	lea    rdx,[rax+0x1]
  425f36:	mov    rax,QWORD PTR [rbp-0x40]
  425f3a:	movzx  eax,BYTE PTR [rax]
  425f3d:	movzx  eax,al
  425f40:	shl    eax,0x4
  425f43:	and    eax,0x30
  425f46:	mov    ecx,eax
  425f48:	mov    rax,QWORD PTR [rbp-0x40]
  425f4c:	add    rax,0x1
  425f50:	movzx  eax,BYTE PTR [rax]
  425f53:	shr    al,0x4
  425f56:	movzx  eax,al
  425f59:	or     eax,ecx
  425f5b:	movsxd rcx,eax
  425f5e:	mov    rax,QWORD PTR [rbp-0x28]
  425f62:	add    rax,rcx
  425f65:	movzx  eax,BYTE PTR [rax]
  425f68:	mov    BYTE PTR [rdx],al
  425f6a:	mov    rax,QWORD PTR [rbp-0x38]
  425f6e:	lea    rdx,[rax+0x2]
  425f72:	mov    rax,QWORD PTR [rbp-0x40]
  425f76:	add    rax,0x1
  425f7a:	movzx  eax,BYTE PTR [rax]
  425f7d:	movzx  eax,al
  425f80:	shl    eax,0x2
  425f83:	cdqe   
  425f85:	and    eax,0x3c
  425f88:	mov    rcx,rax
  425f8b:	mov    rax,QWORD PTR [rbp-0x28]
  425f8f:	add    rax,rcx
  425f92:	movzx  eax,BYTE PTR [rax]
  425f95:	mov    BYTE PTR [rdx],al
  425f97:	add    QWORD PTR [rbp-0x38],0x3
  425f9c:	cmp    DWORD PTR [rbp-0x2c],0x0
  425fa0:	je     426031 <grisu3_diy_fp_encode_double@@Base+0x1483>
  425fa6:	mov    rax,QWORD PTR [rbp-0x38]
  425faa:	lea    rdx,[rax+0x1]
  425fae:	mov    QWORD PTR [rbp-0x38],rdx
  425fb2:	mov    BYTE PTR [rax],0x3d
  425fb5:	jmp    426031 <grisu3_diy_fp_encode_double@@Base+0x1483>
  425fb7:	mov    rax,QWORD PTR [rbp-0x40]
  425fbb:	movzx  eax,BYTE PTR [rax]
  425fbe:	shr    al,0x2
  425fc1:	movzx  edx,al
  425fc4:	mov    rax,QWORD PTR [rbp-0x28]
  425fc8:	add    rax,rdx
  425fcb:	movzx  edx,BYTE PTR [rax]
  425fce:	mov    rax,QWORD PTR [rbp-0x38]
  425fd2:	mov    BYTE PTR [rax],dl
  425fd4:	mov    rax,QWORD PTR [rbp-0x38]
  425fd8:	lea    rdx,[rax+0x1]
  425fdc:	mov    rax,QWORD PTR [rbp-0x40]
  425fe0:	movzx  eax,BYTE PTR [rax]
  425fe3:	movzx  eax,al
  425fe6:	shl    eax,0x4
  425fe9:	cdqe   
  425feb:	and    eax,0x30
  425fee:	mov    rcx,rax
  425ff1:	mov    rax,QWORD PTR [rbp-0x28]
  425ff5:	add    rax,rcx
  425ff8:	movzx  eax,BYTE PTR [rax]
  425ffb:	mov    BYTE PTR [rdx],al
  425ffd:	add    QWORD PTR [rbp-0x38],0x2
  426002:	cmp    DWORD PTR [rbp-0x2c],0x0
  426006:	je     426034 <grisu3_diy_fp_encode_double@@Base+0x1486>
  426008:	mov    rax,QWORD PTR [rbp-0x38]
  42600c:	lea    rdx,[rax+0x1]
  426010:	mov    QWORD PTR [rbp-0x38],rdx
  426014:	mov    BYTE PTR [rax],0x3d
  426017:	mov    rax,QWORD PTR [rbp-0x38]
  42601b:	lea    rdx,[rax+0x1]
  42601f:	mov    QWORD PTR [rbp-0x38],rdx
  426023:	mov    BYTE PTR [rax],0x3d
  426026:	jmp    426034 <grisu3_diy_fp_encode_double@@Base+0x1486>
  426028:	mov    DWORD PTR [rbp-0x2c],0x0
  42602f:	jmp    426035 <grisu3_diy_fp_encode_double@@Base+0x1487>
  426031:	nop
  426032:	jmp    426035 <grisu3_diy_fp_encode_double@@Base+0x1487>
  426034:	nop
  426035:	mov    QWORD PTR [rbp-0x20],0x0
  42603d:	cmp    QWORD PTR [rbp-0x48],0x0
  426042:	je     42605c <grisu3_diy_fp_encode_double@@Base+0x14ae>
  426044:	mov    rdx,QWORD PTR [rbp-0x38]
  426048:	mov    rax,QWORD PTR [rbp-0x8]
  42604c:	sub    rdx,rax
  42604f:	mov    rax,rdx
  426052:	mov    rdx,rax
  426055:	mov    rax,QWORD PTR [rbp-0x48]
  426059:	mov    QWORD PTR [rax],rdx
  42605c:	cmp    QWORD PTR [rbp-0x50],0x0
  426061:	je     426078 <grisu3_diy_fp_encode_double@@Base+0x14ca>
  426063:	mov    rax,QWORD PTR [rbp-0x50]
  426067:	mov    rax,QWORD PTR [rax]
  42606a:	sub    rax,QWORD PTR [rbp-0x20]
  42606e:	mov    rdx,rax
  426071:	mov    rax,QWORD PTR [rbp-0x50]
  426075:	mov    QWORD PTR [rax],rdx
  426078:	mov    eax,DWORD PTR [rbp-0x30]
  42607b:	pop    rbp
  42607c:	ret    
  42607d:	push   rbp
  42607e:	mov    rbp,rsp
  426081:	add    rsp,0xffffffffffffff80
  426085:	mov    QWORD PTR [rbp-0x58],rdi
  426089:	mov    QWORD PTR [rbp-0x60],rsi
  42608d:	mov    QWORD PTR [rbp-0x68],rdx
  426091:	mov    QWORD PTR [rbp-0x70],rcx
  426095:	mov    DWORD PTR [rbp-0x74],r8d
  426099:	mov    rax,QWORD PTR fs:0x28
  4260a2:	mov    QWORD PTR [rbp-0x8],rax
  4260a6:	xor    eax,eax
  4260a8:	mov    DWORD PTR [rbp-0x50],0x0
  4260af:	mov    rax,QWORD PTR [rbp-0x58]
  4260b3:	mov    QWORD PTR [rbp-0x18],rax
  4260b7:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  4260bf:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  4260c7:	lea    rax,[rip+0x15ff2]        # 43c0c0 <flatcc_builder_padding_base@@Base+0x2140>
  4260ce:	mov    QWORD PTR [rbp-0x20],rax
  4260d2:	mov    eax,DWORD PTR [rbp-0x74]
  4260d5:	and    eax,0x20
  4260d8:	mov    DWORD PTR [rbp-0x4c],eax
  4260db:	cmp    QWORD PTR [rbp-0x70],0x0
  4260e0:	je     4260ed <grisu3_diy_fp_encode_double@@Base+0x153f>
  4260e2:	mov    rax,QWORD PTR [rbp-0x70]
  4260e6:	mov    rax,QWORD PTR [rax]
  4260e9:	mov    QWORD PTR [rbp-0x30],rax
  4260ed:	mov    rax,QWORD PTR [rbp-0x30]
  4260f1:	mov    QWORD PTR [rbp-0x28],rax
  4260f5:	and    DWORD PTR [rbp-0x74],0xffffff1f
  4260fc:	mov    eax,DWORD PTR [rbp-0x74]
  4260ff:	test   eax,eax
  426101:	je     42610a <grisu3_diy_fp_encode_double@@Base+0x155c>
  426103:	cmp    eax,0x1
  426106:	je     426126 <grisu3_diy_fp_encode_double@@Base+0x1578>
  426108:	jmp    426142 <grisu3_diy_fp_encode_double@@Base+0x1594>
  42610a:	cmp    DWORD PTR [rbp-0x4c],0x0
  42610e:	je     426119 <grisu3_diy_fp_encode_double@@Base+0x156b>
  426110:	lea    rax,[rip+0x160a9]        # 43c1c0 <flatcc_builder_padding_base@@Base+0x2240>
  426117:	jmp    426120 <grisu3_diy_fp_encode_double@@Base+0x1572>
  426119:	lea    rax,[rip+0x15fa0]        # 43c0c0 <flatcc_builder_padding_base@@Base+0x2140>
  426120:	mov    QWORD PTR [rbp-0x20],rax
  426124:	jmp    42614e <grisu3_diy_fp_encode_double@@Base+0x15a0>
  426126:	cmp    DWORD PTR [rbp-0x4c],0x0
  42612a:	je     426135 <grisu3_diy_fp_encode_double@@Base+0x1587>
  42612c:	lea    rax,[rip+0x1618d]        # 43c2c0 <flatcc_builder_padding_base@@Base+0x2340>
  426133:	jmp    42613c <grisu3_diy_fp_encode_double@@Base+0x158e>
  426135:	lea    rax,[rip+0x16284]        # 43c3c0 <flatcc_builder_padding_base@@Base+0x2440>
  42613c:	mov    QWORD PTR [rbp-0x20],rax
  426140:	jmp    42614e <grisu3_diy_fp_encode_double@@Base+0x15a0>
  426142:	mov    DWORD PTR [rbp-0x50],0x3
  426149:	jmp    42634b <grisu3_diy_fp_encode_double@@Base+0x179d>
  42614e:	cmp    QWORD PTR [rbp-0x68],0x0
  426153:	je     426340 <grisu3_diy_fp_encode_double@@Base+0x1792>
  426159:	mov    rax,QWORD PTR [rbp-0x68]
  42615d:	mov    rax,QWORD PTR [rax]
  426160:	test   rax,rax
  426163:	je     426340 <grisu3_diy_fp_encode_double@@Base+0x1792>
  426169:	mov    rax,QWORD PTR [rbp-0x68]
  42616d:	mov    rax,QWORD PTR [rax]
  426170:	mov    QWORD PTR [rbp-0x38],rax
  426174:	jmp    426340 <grisu3_diy_fp_encode_double@@Base+0x1792>
  426179:	mov    QWORD PTR [rbp-0x48],0x0
  426181:	jmp    4262b6 <grisu3_diy_fp_encode_double@@Base+0x1708>
  426186:	mov    rax,QWORD PTR [rbp-0x30]
  42618a:	cmp    rax,QWORD PTR [rbp-0x48]
  42618e:	jne    4261a5 <grisu3_diy_fp_encode_double@@Base+0x15f7>
  426190:	mov    rax,QWORD PTR [rbp-0x48]
  426194:	mov    QWORD PTR [rbp-0x40],rax
  426198:	mov    rax,QWORD PTR [rbp-0x48]
  42619c:	sub    QWORD PTR [rbp-0x30],rax
  4261a0:	jmp    4263a1 <grisu3_diy_fp_encode_double@@Base+0x17f3>
  4261a5:	mov    rdx,QWORD PTR [rbp-0x60]
  4261a9:	mov    rax,QWORD PTR [rbp-0x48]
  4261ad:	add    rax,rdx
  4261b0:	movzx  eax,BYTE PTR [rax]
  4261b3:	movzx  edx,al
  4261b6:	mov    rax,QWORD PTR [rbp-0x20]
  4261ba:	add    rax,rdx
  4261bd:	movzx  eax,BYTE PTR [rax]
  4261c0:	lea    rcx,[rbp-0xc]
  4261c4:	mov    rdx,QWORD PTR [rbp-0x48]
  4261c8:	add    rdx,rcx
  4261cb:	mov    BYTE PTR [rdx],al
  4261cd:	lea    rdx,[rbp-0xc]
  4261d1:	mov    rax,QWORD PTR [rbp-0x48]
  4261d5:	add    rax,rdx
  4261d8:	movzx  edx,BYTE PTR [rax]
  4261db:	movzx  eax,BYTE PTR [rip+0x162de]        # 43c4c0 <flatcc_builder_padding_base@@Base+0x2540>
  4261e2:	cmp    dl,al
  4261e4:	jb     4262b1 <grisu3_diy_fp_encode_double@@Base+0x1703>
  4261ea:	lea    rdx,[rbp-0xc]
  4261ee:	mov    rax,QWORD PTR [rbp-0x48]
  4261f2:	add    rax,rdx
  4261f5:	movzx  edx,BYTE PTR [rax]
  4261f8:	movzx  eax,BYTE PTR [rip+0x162c2]        # 43c4c1 <flatcc_builder_padding_base@@Base+0x2541>
  4261ff:	cmp    dl,al
  426201:	jne    426217 <grisu3_diy_fp_encode_double@@Base+0x1669>
  426203:	add    QWORD PTR [rbp-0x60],0x1
  426208:	sub    QWORD PTR [rbp-0x30],0x1
  42620d:	sub    QWORD PTR [rbp-0x48],0x1
  426212:	jmp    4262b1 <grisu3_diy_fp_encode_double@@Base+0x1703>
  426217:	mov    rax,QWORD PTR [rbp-0x48]
  42621b:	mov    QWORD PTR [rbp-0x40],rax
  42621f:	lea    rdx,[rbp-0xc]
  426223:	mov    rax,QWORD PTR [rbp-0x48]
  426227:	add    rax,rdx
  42622a:	movzx  edx,BYTE PTR [rax]
  42622d:	movzx  eax,BYTE PTR [rip+0x1628e]        # 43c4c2 <flatcc_builder_padding_base@@Base+0x2542>
  426234:	cmp    dl,al
  426236:	jne    4262a4 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  426238:	add    QWORD PTR [rbp-0x48],0x1
  42623d:	jmp    426290 <grisu3_diy_fp_encode_double@@Base+0x16e2>
  42623f:	mov    rdx,QWORD PTR [rbp-0x60]
  426243:	mov    rax,QWORD PTR [rbp-0x48]
  426247:	add    rax,rdx
  42624a:	movzx  eax,BYTE PTR [rax]
  42624d:	movzx  edx,al
  426250:	mov    rax,QWORD PTR [rbp-0x20]
  426254:	add    rax,rdx
  426257:	movzx  edx,BYTE PTR [rax]
  42625a:	movzx  eax,BYTE PTR [rip+0x16261]        # 43c4c2 <flatcc_builder_padding_base@@Base+0x2542>
  426261:	cmp    dl,al
  426263:	je     42628b <grisu3_diy_fp_encode_double@@Base+0x16dd>
  426265:	mov    rdx,QWORD PTR [rbp-0x60]
  426269:	mov    rax,QWORD PTR [rbp-0x48]
  42626d:	add    rax,rdx
  426270:	movzx  eax,BYTE PTR [rax]
  426273:	movzx  edx,al
  426276:	mov    rax,QWORD PTR [rbp-0x20]
  42627a:	add    rax,rdx
  42627d:	movzx  edx,BYTE PTR [rax]
  426280:	movzx  eax,BYTE PTR [rip+0x1623a]        # 43c4c1 <flatcc_builder_padding_base@@Base+0x2541>
  426287:	cmp    dl,al
  426289:	jne    4262a3 <grisu3_diy_fp_encode_double@@Base+0x16f5>
  42628b:	add    QWORD PTR [rbp-0x48],0x1
  426290:	mov    rax,QWORD PTR [rbp-0x48]
  426294:	cmp    rax,QWORD PTR [rbp-0x30]
  426298:	jae    4262a4 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  42629a:	cmp    QWORD PTR [rbp-0x48],0x7
  42629f:	jbe    42623f <grisu3_diy_fp_encode_double@@Base+0x1691>
  4262a1:	jmp    4262a4 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  4262a3:	nop
  4262a4:	mov    rax,QWORD PTR [rbp-0x48]
  4262a8:	sub    QWORD PTR [rbp-0x30],rax
  4262ac:	jmp    4263a1 <grisu3_diy_fp_encode_double@@Base+0x17f3>
  4262b1:	add    QWORD PTR [rbp-0x48],0x1
  4262b6:	cmp    QWORD PTR [rbp-0x48],0x3
  4262bb:	jbe    426186 <grisu3_diy_fp_encode_double@@Base+0x15d8>
  4262c1:	cmp    QWORD PTR [rbp-0x38],0x2
  4262c6:	jbe    426488 <grisu3_diy_fp_encode_double@@Base+0x18da>
  4262cc:	movzx  eax,BYTE PTR [rbp-0xc]
  4262d0:	movzx  eax,al
  4262d3:	shl    eax,0x2
  4262d6:	mov    edx,eax
  4262d8:	movzx  eax,BYTE PTR [rbp-0xb]
  4262dc:	shr    al,0x4
  4262df:	or     eax,edx
  4262e1:	mov    edx,eax
  4262e3:	mov    rax,QWORD PTR [rbp-0x58]
  4262e7:	mov    BYTE PTR [rax],dl
  4262e9:	mov    rax,QWORD PTR [rbp-0x58]
  4262ed:	add    rax,0x1
  4262f1:	movzx  edx,BYTE PTR [rbp-0xb]
  4262f5:	movzx  edx,dl
  4262f8:	shl    edx,0x4
  4262fb:	mov    ecx,edx
  4262fd:	movzx  edx,BYTE PTR [rbp-0xa]
  426301:	shr    dl,0x2
  426304:	or     edx,ecx
  426306:	mov    BYTE PTR [rax],dl
  426308:	mov    rax,QWORD PTR [rbp-0x58]
  42630c:	add    rax,0x2
  426310:	movzx  edx,BYTE PTR [rbp-0xa]
  426314:	movzx  edx,dl
  426317:	shl    edx,0x6
  42631a:	mov    ecx,edx
  42631c:	movzx  edx,BYTE PTR [rbp-0x9]
  426320:	or     edx,ecx
  426322:	mov    BYTE PTR [rax],dl
  426324:	add    QWORD PTR [rbp-0x58],0x3
  426329:	add    QWORD PTR [rbp-0x60],0x4
  42632e:	sub    QWORD PTR [rbp-0x38],0x3
  426333:	sub    QWORD PTR [rbp-0x30],0x4
  426338:	mov    rax,QWORD PTR [rbp-0x30]
  42633c:	mov    QWORD PTR [rbp-0x28],rax
  426340:	cmp    QWORD PTR [rbp-0x38],0x0
  426345:	jne    426179 <grisu3_diy_fp_encode_double@@Base+0x15cb>
  42634b:	cmp    QWORD PTR [rbp-0x68],0x0
  426350:	je     42636a <grisu3_diy_fp_encode_double@@Base+0x17bc>
  426352:	mov    rdx,QWORD PTR [rbp-0x58]
  426356:	mov    rax,QWORD PTR [rbp-0x18]
  42635a:	sub    rdx,rax
  42635d:	mov    rax,rdx
  426360:	mov    rdx,rax
  426363:	mov    rax,QWORD PTR [rbp-0x68]
  426367:	mov    QWORD PTR [rax],rdx
  42636a:	cmp    QWORD PTR [rbp-0x70],0x0
  42636f:	je     426386 <grisu3_diy_fp_encode_double@@Base+0x17d8>
  426371:	mov    rax,QWORD PTR [rbp-0x70]
  426375:	mov    rax,QWORD PTR [rax]
  426378:	sub    rax,QWORD PTR [rbp-0x28]
  42637c:	mov    rdx,rax
  42637f:	mov    rax,QWORD PTR [rbp-0x70]
  426383:	mov    QWORD PTR [rax],rdx
  426386:	mov    eax,DWORD PTR [rbp-0x50]
  426389:	mov    rsi,QWORD PTR [rbp-0x8]
  42638d:	xor    rsi,QWORD PTR fs:0x28
  426396:	je     4264a0 <grisu3_diy_fp_encode_double@@Base+0x18f2>
  42639c:	jmp    42649b <grisu3_diy_fp_encode_double@@Base+0x18ed>
  4263a1:	mov    rax,QWORD PTR [rbp-0x40]
  4263a5:	cmp    rax,0x2
  4263a9:	je     4263bf <grisu3_diy_fp_encode_double@@Base+0x1811>
  4263ab:	cmp    rax,0x3
  4263af:	je     426403 <grisu3_diy_fp_encode_double@@Base+0x1855>
  4263b1:	test   rax,rax
  4263b4:	je     42646a <grisu3_diy_fp_encode_double@@Base+0x18bc>
  4263ba:	jmp    42645e <grisu3_diy_fp_encode_double@@Base+0x18b0>
  4263bf:	movzx  eax,BYTE PTR [rbp-0xb]
  4263c3:	movzx  eax,al
  4263c6:	shl    eax,0x4
  4263c9:	movzx  eax,al
  4263cc:	test   eax,eax
  4263ce:	jne    426478 <grisu3_diy_fp_encode_double@@Base+0x18ca>
  4263d4:	cmp    QWORD PTR [rbp-0x38],0x0
  4263d9:	je     42648b <grisu3_diy_fp_encode_double@@Base+0x18dd>
  4263df:	movzx  eax,BYTE PTR [rbp-0xc]
  4263e3:	movzx  eax,al
  4263e6:	shl    eax,0x2
  4263e9:	mov    edx,eax
  4263eb:	movzx  eax,BYTE PTR [rbp-0xb]
  4263ef:	shr    al,0x4
  4263f2:	or     eax,edx
  4263f4:	mov    edx,eax
  4263f6:	mov    rax,QWORD PTR [rbp-0x58]
  4263fa:	mov    BYTE PTR [rax],dl
  4263fc:	add    QWORD PTR [rbp-0x58],0x1
  426401:	jmp    42646b <grisu3_diy_fp_encode_double@@Base+0x18bd>
  426403:	movzx  eax,BYTE PTR [rbp-0xa]
  426407:	movzx  eax,al
  42640a:	shl    eax,0x6
  42640d:	movzx  eax,al
  426410:	test   eax,eax
  426412:	jne    42647b <grisu3_diy_fp_encode_double@@Base+0x18cd>
  426414:	cmp    QWORD PTR [rbp-0x38],0x1
  426419:	jbe    42648e <grisu3_diy_fp_encode_double@@Base+0x18e0>
  42641b:	movzx  eax,BYTE PTR [rbp-0xc]
  42641f:	movzx  eax,al
  426422:	shl    eax,0x2
  426425:	mov    edx,eax
  426427:	movzx  eax,BYTE PTR [rbp-0xb]
  42642b:	shr    al,0x4
  42642e:	or     eax,edx
  426430:	mov    edx,eax
  426432:	mov    rax,QWORD PTR [rbp-0x58]
  426436:	mov    BYTE PTR [rax],dl
  426438:	mov    rax,QWORD PTR [rbp-0x58]
  42643c:	add    rax,0x1
  426440:	movzx  edx,BYTE PTR [rbp-0xb]
  426444:	movzx  edx,dl
  426447:	shl    edx,0x4
  42644a:	mov    ecx,edx
  42644c:	movzx  edx,BYTE PTR [rbp-0xa]
  426450:	shr    dl,0x2
  426453:	or     edx,ecx
  426455:	mov    BYTE PTR [rax],dl
  426457:	add    QWORD PTR [rbp-0x58],0x2
  42645c:	jmp    42646b <grisu3_diy_fp_encode_double@@Base+0x18bd>
  42645e:	mov    DWORD PTR [rbp-0x50],0x4
  426465:	jmp    42634b <grisu3_diy_fp_encode_double@@Base+0x179d>
  42646a:	nop
  42646b:	mov    rax,QWORD PTR [rbp-0x30]
  42646f:	mov    QWORD PTR [rbp-0x28],rax
  426473:	jmp    42634b <grisu3_diy_fp_encode_double@@Base+0x179d>
  426478:	nop
  426479:	jmp    42647c <grisu3_diy_fp_encode_double@@Base+0x18ce>
  42647b:	nop
  42647c:	mov    DWORD PTR [rbp-0x50],0x5
  426483:	jmp    42634b <grisu3_diy_fp_encode_double@@Base+0x179d>
  426488:	nop
  426489:	jmp    42648f <grisu3_diy_fp_encode_double@@Base+0x18e1>
  42648b:	nop
  42648c:	jmp    42648f <grisu3_diy_fp_encode_double@@Base+0x18e1>
  42648e:	nop
  42648f:	mov    DWORD PTR [rbp-0x50],0x1
  426496:	jmp    42634b <grisu3_diy_fp_encode_double@@Base+0x179d>
  42649b:	call   405070 <__stack_chk_fail@plt>
  4264a0:	leave  
  4264a1:	ret    

00000000004264a2 <flatcc_json_parser_error_string@@Base>:
  4264a2:	push   rbp
  4264a3:	mov    rbp,rsp
  4264a6:	mov    DWORD PTR [rbp-0x4],edi
  4264a9:	cmp    DWORD PTR [rbp-0x4],0x22
  4264ad:	ja     426651 <flatcc_json_parser_error_string@@Base+0x1af>
  4264b3:	mov    eax,DWORD PTR [rbp-0x4]
  4264b6:	lea    rdx,[rax*4+0x0]
  4264be:	lea    rax,[rip+0x1590b]        # 43bdd0 <flatcc_builder_padding_base@@Base+0x1e50>
  4264c5:	mov    eax,DWORD PTR [rdx+rax*1]
  4264c8:	movsxd rdx,eax
  4264cb:	lea    rax,[rip+0x158fe]        # 43bdd0 <flatcc_builder_padding_base@@Base+0x1e50>
  4264d2:	add    rax,rdx
  4264d5:	jmp    rax
  4264d7:	lea    rax,[rip+0x15552]        # 43ba30 <flatcc_builder_padding_base@@Base+0x1ab0>
  4264de:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4264e3:	lea    rax,[rip+0x15657]        # 43bb41 <flatcc_builder_padding_base@@Base+0x1bc1>
  4264ea:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4264ef:	lea    rax,[rip+0x1564f]        # 43bb45 <flatcc_builder_padding_base@@Base+0x1bc5>
  4264f6:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4264fb:	lea    rax,[rip+0x15650]        # 43bb52 <flatcc_builder_padding_base@@Base+0x1bd2>
  426502:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426507:	lea    rax,[rip+0x15653]        # 43bb61 <flatcc_builder_padding_base@@Base+0x1be1>
  42650e:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426513:	lea    rax,[rip+0x15656]        # 43bb70 <flatcc_builder_padding_base@@Base+0x1bf0>
  42651a:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42651f:	lea    rax,[rip+0x1565f]        # 43bb85 <flatcc_builder_padding_base@@Base+0x1c05>
  426526:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42652b:	lea    rax,[rip+0x15663]        # 43bb95 <flatcc_builder_padding_base@@Base+0x1c15>
  426532:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426537:	lea    rax,[rip+0x15660]        # 43bb9e <flatcc_builder_padding_base@@Base+0x1c1e>
  42653e:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426543:	lea    rax,[rip+0x1565e]        # 43bba8 <flatcc_builder_padding_base@@Base+0x1c28>
  42654a:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42654f:	lea    rax,[rip+0x15663]        # 43bbb9 <flatcc_builder_padding_base@@Base+0x1c39>
  426556:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42655b:	lea    rax,[rip+0x15669]        # 43bbcb <flatcc_builder_padding_base@@Base+0x1c4b>
  426562:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426567:	lea    rax,[rip+0x1566c]        # 43bbda <flatcc_builder_padding_base@@Base+0x1c5a>
  42656e:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426573:	lea    rax,[rip+0x15671]        # 43bbeb <flatcc_builder_padding_base@@Base+0x1c6b>
  42657a:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42657f:	lea    rax,[rip+0x15674]        # 43bbfa <flatcc_builder_padding_base@@Base+0x1c7a>
  426586:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42658b:	lea    rax,[rip+0x15681]        # 43bc13 <flatcc_builder_padding_base@@Base+0x1c93>
  426592:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426597:	lea    rax,[rip+0x15688]        # 43bc26 <flatcc_builder_padding_base@@Base+0x1ca6>
  42659e:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265a3:	lea    rax,[rip+0x1568c]        # 43bc36 <flatcc_builder_padding_base@@Base+0x1cb6>
  4265aa:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265af:	lea    rax,[rip+0x15692]        # 43bc48 <flatcc_builder_padding_base@@Base+0x1cc8>
  4265b6:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265bb:	lea    rax,[rip+0x15695]        # 43bc57 <flatcc_builder_padding_base@@Base+0x1cd7>
  4265c2:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265c7:	lea    rax,[rip+0x15696]        # 43bc64 <flatcc_builder_padding_base@@Base+0x1ce4>
  4265ce:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265d3:	lea    rax,[rip+0x1569e]        # 43bc78 <flatcc_builder_padding_base@@Base+0x1cf8>
  4265da:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265dc:	lea    rax,[rip+0x156a5]        # 43bc88 <flatcc_builder_padding_base@@Base+0x1d08>
  4265e3:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265e5:	lea    rax,[rip+0x156ac]        # 43bc98 <flatcc_builder_padding_base@@Base+0x1d18>
  4265ec:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265ee:	lea    rax,[rip+0x156c7]        # 43bcbc <flatcc_builder_padding_base@@Base+0x1d3c>
  4265f5:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  4265f7:	lea    rax,[rip+0x156d2]        # 43bcd0 <flatcc_builder_padding_base@@Base+0x1d50>
  4265fe:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426600:	lea    rax,[rip+0x156e9]        # 43bcf0 <flatcc_builder_padding_base@@Base+0x1d70>
  426607:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426609:	lea    rax,[rip+0x156ff]        # 43bd0f <flatcc_builder_padding_base@@Base+0x1d8f>
  426610:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426612:	lea    rax,[rip+0x15711]        # 43bd2a <flatcc_builder_padding_base@@Base+0x1daa>
  426619:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42661b:	lea    rax,[rip+0x15722]        # 43bd44 <flatcc_builder_padding_base@@Base+0x1dc4>
  426622:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426624:	lea    rax,[rip+0x15730]        # 43bd5b <flatcc_builder_padding_base@@Base+0x1ddb>
  42662b:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42662d:	lea    rax,[rip+0x15744]        # 43bd78 <flatcc_builder_padding_base@@Base+0x1df8>
  426634:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426636:	lea    rax,[rip+0x15752]        # 43bd8f <flatcc_builder_padding_base@@Base+0x1e0f>
  42663d:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  42663f:	lea    rax,[rip+0x15763]        # 43bda9 <flatcc_builder_padding_base@@Base+0x1e29>
  426646:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426648:	lea    rax,[rip+0x15768]        # 43bdb7 <flatcc_builder_padding_base@@Base+0x1e37>
  42664f:	jmp    426658 <flatcc_json_parser_error_string@@Base+0x1b6>
  426651:	lea    rax,[rip+0x1576d]        # 43bdc5 <flatcc_builder_padding_base@@Base+0x1e45>
  426658:	pop    rbp
  426659:	ret    

000000000042665a <flatcc_json_parser_set_error@@Base>:
  42665a:	push   rbp
  42665b:	mov    rbp,rsp
  42665e:	mov    QWORD PTR [rbp-0x8],rdi
  426662:	mov    QWORD PTR [rbp-0x10],rsi
  426666:	mov    QWORD PTR [rbp-0x18],rdx
  42666a:	mov    DWORD PTR [rbp-0x1c],ecx
  42666d:	mov    rax,QWORD PTR [rbp-0x8]
  426671:	mov    eax,DWORD PTR [rax+0x20]
  426674:	test   eax,eax
  426676:	jne    4266ac <flatcc_json_parser_set_error@@Base+0x52>
  426678:	mov    rax,QWORD PTR [rbp-0x8]
  42667c:	mov    edx,DWORD PTR [rbp-0x1c]
  42667f:	mov    DWORD PTR [rax+0x20],edx
  426682:	mov    rdx,QWORD PTR [rbp-0x10]
  426686:	mov    rax,QWORD PTR [rbp-0x8]
  42668a:	mov    rax,QWORD PTR [rax+0x8]
  42668e:	sub    rdx,rax
  426691:	mov    rax,rdx
  426694:	add    eax,0x1
  426697:	mov    edx,eax
  426699:	mov    rax,QWORD PTR [rbp-0x8]
  42669d:	mov    DWORD PTR [rax+0x1c],edx
  4266a0:	mov    rax,QWORD PTR [rbp-0x8]
  4266a4:	mov    rdx,QWORD PTR [rbp-0x10]
  4266a8:	mov    QWORD PTR [rax+0x38],rdx
  4266ac:	mov    rax,QWORD PTR [rbp-0x18]
  4266b0:	pop    rbp
  4266b1:	ret    

00000000004266b2 <flatcc_json_parser_string_part@@Base>:
  4266b2:	push   rbp
  4266b3:	mov    rbp,rsp
  4266b6:	sub    rsp,0x20
  4266ba:	mov    QWORD PTR [rbp-0x8],rdi
  4266be:	mov    QWORD PTR [rbp-0x10],rsi
  4266c2:	mov    QWORD PTR [rbp-0x18],rdx
  4266c6:	jmp    4266cd <flatcc_json_parser_string_part@@Base+0x1b>
  4266c8:	add    QWORD PTR [rbp-0x10],0x1
  4266cd:	mov    rax,QWORD PTR [rbp-0x10]
  4266d1:	cmp    rax,QWORD PTR [rbp-0x18]
  4266d5:	je     4266f8 <flatcc_json_parser_string_part@@Base+0x46>
  4266d7:	mov    rax,QWORD PTR [rbp-0x10]
  4266db:	movzx  eax,BYTE PTR [rax]
  4266de:	cmp    al,0x22
  4266e0:	je     4266f8 <flatcc_json_parser_string_part@@Base+0x46>
  4266e2:	mov    rax,QWORD PTR [rbp-0x10]
  4266e6:	movzx  eax,BYTE PTR [rax]
  4266e9:	cmp    al,0x1f
  4266eb:	jbe    4266f8 <flatcc_json_parser_string_part@@Base+0x46>
  4266ed:	mov    rax,QWORD PTR [rbp-0x10]
  4266f1:	movzx  eax,BYTE PTR [rax]
  4266f4:	cmp    al,0x5c
  4266f6:	jne    4266c8 <flatcc_json_parser_string_part@@Base+0x16>
  4266f8:	mov    rax,QWORD PTR [rbp-0x10]
  4266fc:	cmp    rax,QWORD PTR [rbp-0x18]
  426700:	jne    42671d <flatcc_json_parser_string_part@@Base+0x6b>
  426702:	mov    rdx,QWORD PTR [rbp-0x18]
  426706:	mov    rsi,QWORD PTR [rbp-0x10]
  42670a:	mov    rax,QWORD PTR [rbp-0x8]
  42670e:	mov    ecx,0x14
  426713:	mov    rdi,rax
  426716:	call   42665a <flatcc_json_parser_set_error@@Base>
  42671b:	jmp    426758 <flatcc_json_parser_string_part@@Base+0xa6>
  42671d:	mov    rax,QWORD PTR [rbp-0x10]
  426721:	movzx  eax,BYTE PTR [rax]
  426724:	cmp    al,0x22
  426726:	jne    42672e <flatcc_json_parser_string_part@@Base+0x7c>
  426728:	mov    rax,QWORD PTR [rbp-0x10]
  42672c:	jmp    426758 <flatcc_json_parser_string_part@@Base+0xa6>
  42672e:	mov    rax,QWORD PTR [rbp-0x10]
  426732:	movzx  eax,BYTE PTR [rax]
  426735:	cmp    al,0x1f
  426737:	jg     426754 <flatcc_json_parser_string_part@@Base+0xa2>
  426739:	mov    rdx,QWORD PTR [rbp-0x18]
  42673d:	mov    rsi,QWORD PTR [rbp-0x10]
  426741:	mov    rax,QWORD PTR [rbp-0x8]
  426745:	mov    ecx,0x11
  42674a:	mov    rdi,rax
  42674d:	call   42665a <flatcc_json_parser_set_error@@Base>
  426752:	jmp    426758 <flatcc_json_parser_string_part@@Base+0xa6>
  426754:	mov    rax,QWORD PTR [rbp-0x10]
  426758:	leave  
  426759:	ret    

000000000042675a <flatcc_json_parser_space_ext@@Base>:
  42675a:	push   rbp
  42675b:	mov    rbp,rsp
  42675e:	sub    rsp,0x20
  426762:	mov    QWORD PTR [rbp-0x8],rdi
  426766:	mov    QWORD PTR [rbp-0x10],rsi
  42676a:	mov    QWORD PTR [rbp-0x18],rdx
  42676e:	nop
  42676f:	mov    rdx,QWORD PTR [rbp-0x18]
  426773:	mov    rax,QWORD PTR [rbp-0x10]
  426777:	sub    rdx,rax
  42677a:	mov    rax,rdx
  42677d:	cmp    rax,0xf
  426781:	jle    4267d5 <flatcc_json_parser_space_ext@@Base+0x7b>
  426783:	mov    rax,QWORD PTR [rbp-0x10]
  426787:	movzx  eax,BYTE PTR [rax]
  42678a:	cmp    al,0x20
  42678c:	jle    426797 <flatcc_json_parser_space_ext@@Base+0x3d>
  42678e:	mov    rax,QWORD PTR [rbp-0x10]
  426792:	jmp    4268b6 <flatcc_json_parser_space_ext@@Base+0x15c>
  426797:	mov    rax,QWORD PTR [rbp-0x10]
  42679b:	movzx  eax,WORD PTR [rax]
  42679e:	cmp    ax,0x2020
  4267a2:	jne    4267a9 <flatcc_json_parser_space_ext@@Base+0x4f>
  4267a4:	add    QWORD PTR [rbp-0x10],0x2
  4267a9:	mov    rax,QWORD PTR [rbp-0x10]
  4267ad:	movzx  eax,BYTE PTR [rax]
  4267b0:	cmp    al,0x20
  4267b2:	jne    4267b9 <flatcc_json_parser_space_ext@@Base+0x5f>
  4267b4:	add    QWORD PTR [rbp-0x10],0x1
  4267b9:	mov    rax,QWORD PTR [rbp-0x10]
  4267bd:	movzx  eax,BYTE PTR [rax]
  4267c0:	cmp    al,0x20
  4267c2:	jle    4267cd <flatcc_json_parser_space_ext@@Base+0x73>
  4267c4:	mov    rax,QWORD PTR [rbp-0x10]
  4267c8:	jmp    4268b6 <flatcc_json_parser_space_ext@@Base+0x15c>
  4267cd:	nop
  4267ce:	jmp    4267d5 <flatcc_json_parser_space_ext@@Base+0x7b>
  4267d0:	add    QWORD PTR [rbp-0x10],0x1
  4267d5:	mov    rax,QWORD PTR [rbp-0x10]
  4267d9:	cmp    rax,QWORD PTR [rbp-0x18]
  4267dd:	je     426899 <flatcc_json_parser_space_ext@@Base+0x13f>
  4267e3:	mov    rax,QWORD PTR [rbp-0x10]
  4267e7:	movzx  eax,BYTE PTR [rax]
  4267ea:	cmp    al,0x20
  4267ec:	je     4267d0 <flatcc_json_parser_space_ext@@Base+0x76>
  4267ee:	jmp    426899 <flatcc_json_parser_space_ext@@Base+0x13f>
  4267f3:	mov    rax,QWORD PTR [rbp-0x10]
  4267f7:	movzx  eax,BYTE PTR [rax]
  4267fa:	movsx  eax,al
  4267fd:	cmp    eax,0xa
  426800:	je     426853 <flatcc_json_parser_space_ext@@Base+0xf9>
  426802:	cmp    eax,0xa
  426805:	jg     42680e <flatcc_json_parser_space_ext@@Base+0xb4>
  426807:	cmp    eax,0x9
  42680a:	je     426877 <flatcc_json_parser_space_ext@@Base+0x11d>
  42680c:	jmp    42687e <flatcc_json_parser_space_ext@@Base+0x124>
  42680e:	cmp    eax,0xd
  426811:	je     42681e <flatcc_json_parser_space_ext@@Base+0xc4>
  426813:	cmp    eax,0x20
  426816:	je     42676e <flatcc_json_parser_space_ext@@Base+0x14>
  42681c:	jmp    42687e <flatcc_json_parser_space_ext@@Base+0x124>
  42681e:	mov    rdx,QWORD PTR [rbp-0x18]
  426822:	mov    rax,QWORD PTR [rbp-0x10]
  426826:	sub    rdx,rax
  426829:	mov    rax,rdx
  42682c:	cmp    rax,0x1
  426830:	jle    426848 <flatcc_json_parser_space_ext@@Base+0xee>
  426832:	mov    rax,QWORD PTR [rbp-0x10]
  426836:	add    rax,0x1
  42683a:	movzx  eax,BYTE PTR [rax]
  42683d:	cmp    al,0xa
  42683f:	jne    426848 <flatcc_json_parser_space_ext@@Base+0xee>
  426841:	mov    eax,0x1
  426846:	jmp    42684d <flatcc_json_parser_space_ext@@Base+0xf3>
  426848:	mov    eax,0x0
  42684d:	cdqe   
  42684f:	add    QWORD PTR [rbp-0x10],rax
  426853:	mov    rax,QWORD PTR [rbp-0x8]
  426857:	mov    eax,DWORD PTR [rax+0x18]
  42685a:	lea    edx,[rax+0x1]
  42685d:	mov    rax,QWORD PTR [rbp-0x8]
  426861:	mov    DWORD PTR [rax+0x18],edx
  426864:	add    QWORD PTR [rbp-0x10],0x1
  426869:	mov    rax,QWORD PTR [rbp-0x8]
  42686d:	mov    rdx,QWORD PTR [rbp-0x10]
  426871:	mov    QWORD PTR [rax+0x8],rdx
  426875:	jmp    426899 <flatcc_json_parser_space_ext@@Base+0x13f>
  426877:	add    QWORD PTR [rbp-0x10],0x1
  42687c:	jmp    426899 <flatcc_json_parser_space_ext@@Base+0x13f>
  42687e:	mov    rdx,QWORD PTR [rbp-0x18]
  426882:	mov    rsi,QWORD PTR [rbp-0x10]
  426886:	mov    rax,QWORD PTR [rbp-0x8]
  42688a:	mov    ecx,0x5
  42688f:	mov    rdi,rax
  426892:	call   42665a <flatcc_json_parser_set_error@@Base>
  426897:	jmp    4268b6 <flatcc_json_parser_space_ext@@Base+0x15c>
  426899:	mov    rax,QWORD PTR [rbp-0x10]
  42689d:	cmp    rax,QWORD PTR [rbp-0x18]
  4268a1:	je     4268b2 <flatcc_json_parser_space_ext@@Base+0x158>
  4268a3:	mov    rax,QWORD PTR [rbp-0x10]
  4268a7:	movzx  eax,BYTE PTR [rax]
  4268aa:	cmp    al,0x20
  4268ac:	jle    4267f3 <flatcc_json_parser_space_ext@@Base+0x99>
  4268b2:	mov    rax,QWORD PTR [rbp-0x10]
  4268b6:	leave  
  4268b7:	ret    

00000000004268b8 <flatcc_json_parser_string_escape@@Base>:
  4268b8:	push   rbp
  4268b9:	mov    rbp,rsp
  4268bc:	sub    rsp,0x30
  4268c0:	mov    QWORD PTR [rbp-0x18],rdi
  4268c4:	mov    QWORD PTR [rbp-0x20],rsi
  4268c8:	mov    QWORD PTR [rbp-0x28],rdx
  4268cc:	mov    QWORD PTR [rbp-0x30],rcx
  4268d0:	mov    rdx,QWORD PTR [rbp-0x28]
  4268d4:	mov    rax,QWORD PTR [rbp-0x20]
  4268d8:	sub    rdx,rax
  4268db:	mov    rax,rdx
  4268de:	cmp    rax,0x1
  4268e2:	jle    4268ef <flatcc_json_parser_string_escape@@Base+0x37>
  4268e4:	mov    rax,QWORD PTR [rbp-0x20]
  4268e8:	movzx  eax,BYTE PTR [rax]
  4268eb:	cmp    al,0x5c
  4268ed:	je     426914 <flatcc_json_parser_string_escape@@Base+0x5c>
  4268ef:	mov    rax,QWORD PTR [rbp-0x30]
  4268f3:	mov    BYTE PTR [rax],0x0
  4268f6:	mov    rdx,QWORD PTR [rbp-0x28]
  4268fa:	mov    rsi,QWORD PTR [rbp-0x20]
  4268fe:	mov    rax,QWORD PTR [rbp-0x18]
  426902:	mov    ecx,0x12
  426907:	mov    rdi,rax
  42690a:	call   42665a <flatcc_json_parser_set_error@@Base>
  42690f:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426914:	mov    rax,QWORD PTR [rbp-0x20]
  426918:	add    rax,0x1
  42691c:	movzx  eax,BYTE PTR [rax]
  42691f:	movsx  eax,al
  426922:	sub    eax,0x22
  426925:	cmp    eax,0x56
  426928:	ja     426e73 <flatcc_json_parser_string_escape@@Base+0x5bb>
  42692e:	mov    eax,eax
  426930:	lea    rdx,[rax*4+0x0]
  426938:	lea    rax,[rip+0x1551d]        # 43be5c <flatcc_builder_padding_base@@Base+0x1edc>
  42693f:	mov    eax,DWORD PTR [rdx+rax*1]
  426942:	movsxd rdx,eax
  426945:	lea    rax,[rip+0x15510]        # 43be5c <flatcc_builder_padding_base@@Base+0x1edc>
  42694c:	add    rax,rdx
  42694f:	jmp    rax
  426951:	mov    BYTE PTR [rbp-0x6],0x0
  426955:	mov    rax,QWORD PTR [rbp-0x30]
  426959:	mov    BYTE PTR [rax],0x1
  42695c:	mov    rdx,QWORD PTR [rbp-0x28]
  426960:	mov    rax,QWORD PTR [rbp-0x20]
  426964:	sub    rdx,rax
  426967:	mov    rax,rdx
  42696a:	cmp    rax,0x3
  42696e:	jg     426995 <flatcc_json_parser_string_escape@@Base+0xdd>
  426970:	mov    rax,QWORD PTR [rbp-0x30]
  426974:	mov    BYTE PTR [rax],0x0
  426977:	mov    rdx,QWORD PTR [rbp-0x28]
  42697b:	mov    rsi,QWORD PTR [rbp-0x20]
  42697f:	mov    rax,QWORD PTR [rbp-0x18]
  426983:	mov    ecx,0x12
  426988:	mov    rdi,rax
  42698b:	call   42665a <flatcc_json_parser_set_error@@Base>
  426990:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426995:	mov    rax,QWORD PTR [rbp-0x20]
  426999:	movzx  eax,BYTE PTR [rax+0x2]
  42699d:	mov    BYTE PTR [rbp-0x5],al
  4269a0:	cmp    BYTE PTR [rbp-0x5],0x2f
  4269a4:	jle    4269bb <flatcc_json_parser_string_escape@@Base+0x103>
  4269a6:	cmp    BYTE PTR [rbp-0x5],0x39
  4269aa:	jg     4269bb <flatcc_json_parser_string_escape@@Base+0x103>
  4269ac:	movsx  eax,BYTE PTR [rbp-0x5]
  4269b0:	sub    eax,0x30
  4269b3:	shl    eax,0x4
  4269b6:	or     BYTE PTR [rbp-0x6],al
  4269b9:	jmp    4269ff <flatcc_json_parser_string_escape@@Base+0x147>
  4269bb:	or     BYTE PTR [rbp-0x5],0x20
  4269bf:	cmp    BYTE PTR [rbp-0x5],0x60
  4269c3:	jle    4269da <flatcc_json_parser_string_escape@@Base+0x122>
  4269c5:	cmp    BYTE PTR [rbp-0x5],0x66
  4269c9:	jg     4269da <flatcc_json_parser_string_escape@@Base+0x122>
  4269cb:	movsx  eax,BYTE PTR [rbp-0x5]
  4269cf:	sub    eax,0x57
  4269d2:	shl    eax,0x4
  4269d5:	or     BYTE PTR [rbp-0x6],al
  4269d8:	jmp    4269ff <flatcc_json_parser_string_escape@@Base+0x147>
  4269da:	mov    rax,QWORD PTR [rbp-0x30]
  4269de:	mov    BYTE PTR [rax],0x0
  4269e1:	mov    rdx,QWORD PTR [rbp-0x28]
  4269e5:	mov    rsi,QWORD PTR [rbp-0x20]
  4269e9:	mov    rax,QWORD PTR [rbp-0x18]
  4269ed:	mov    ecx,0x12
  4269f2:	mov    rdi,rax
  4269f5:	call   42665a <flatcc_json_parser_set_error@@Base>
  4269fa:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  4269ff:	mov    rax,QWORD PTR [rbp-0x20]
  426a03:	movzx  eax,BYTE PTR [rax+0x3]
  426a07:	mov    BYTE PTR [rbp-0x5],al
  426a0a:	cmp    BYTE PTR [rbp-0x5],0x2f
  426a0e:	jle    426a22 <flatcc_json_parser_string_escape@@Base+0x16a>
  426a10:	cmp    BYTE PTR [rbp-0x5],0x39
  426a14:	jg     426a22 <flatcc_json_parser_string_escape@@Base+0x16a>
  426a16:	movzx  eax,BYTE PTR [rbp-0x5]
  426a1a:	sub    eax,0x30
  426a1d:	or     BYTE PTR [rbp-0x6],al
  426a20:	jmp    426a63 <flatcc_json_parser_string_escape@@Base+0x1ab>
  426a22:	or     BYTE PTR [rbp-0x5],0x20
  426a26:	cmp    BYTE PTR [rbp-0x5],0x60
  426a2a:	jle    426a3e <flatcc_json_parser_string_escape@@Base+0x186>
  426a2c:	cmp    BYTE PTR [rbp-0x5],0x66
  426a30:	jg     426a3e <flatcc_json_parser_string_escape@@Base+0x186>
  426a32:	movzx  eax,BYTE PTR [rbp-0x5]
  426a36:	sub    eax,0x57
  426a39:	or     BYTE PTR [rbp-0x6],al
  426a3c:	jmp    426a63 <flatcc_json_parser_string_escape@@Base+0x1ab>
  426a3e:	mov    rax,QWORD PTR [rbp-0x30]
  426a42:	mov    BYTE PTR [rax],0x0
  426a45:	mov    rdx,QWORD PTR [rbp-0x28]
  426a49:	mov    rsi,QWORD PTR [rbp-0x20]
  426a4d:	mov    rax,QWORD PTR [rbp-0x18]
  426a51:	mov    ecx,0x12
  426a56:	mov    rdi,rax
  426a59:	call   42665a <flatcc_json_parser_set_error@@Base>
  426a5e:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426a63:	mov    rax,QWORD PTR [rbp-0x30]
  426a67:	lea    rdx,[rax+0x1]
  426a6b:	movzx  eax,BYTE PTR [rbp-0x6]
  426a6f:	mov    BYTE PTR [rdx],al
  426a71:	mov    rax,QWORD PTR [rbp-0x20]
  426a75:	add    rax,0x4
  426a79:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426a7e:	mov    rdx,QWORD PTR [rbp-0x28]
  426a82:	mov    rax,QWORD PTR [rbp-0x20]
  426a86:	sub    rdx,rax
  426a89:	mov    rax,rdx
  426a8c:	cmp    rax,0x5
  426a90:	jg     426ab7 <flatcc_json_parser_string_escape@@Base+0x1ff>
  426a92:	mov    rax,QWORD PTR [rbp-0x30]
  426a96:	mov    BYTE PTR [rax],0x0
  426a99:	mov    rdx,QWORD PTR [rbp-0x28]
  426a9d:	mov    rsi,QWORD PTR [rbp-0x20]
  426aa1:	mov    rax,QWORD PTR [rbp-0x18]
  426aa5:	mov    ecx,0x12
  426aaa:	mov    rdi,rax
  426aad:	call   42665a <flatcc_json_parser_set_error@@Base>
  426ab2:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426ab7:	mov    WORD PTR [rbp-0x4],0x0
  426abd:	mov    rax,QWORD PTR [rbp-0x20]
  426ac1:	movzx  eax,BYTE PTR [rax+0x2]
  426ac5:	mov    BYTE PTR [rbp-0x5],al
  426ac8:	cmp    BYTE PTR [rbp-0x5],0x2f
  426acc:	jle    426aed <flatcc_json_parser_string_escape@@Base+0x235>
  426ace:	cmp    BYTE PTR [rbp-0x5],0x39
  426ad2:	jg     426aed <flatcc_json_parser_string_escape@@Base+0x235>
  426ad4:	movsx  ax,BYTE PTR [rbp-0x5]
  426ad9:	sub    eax,0x30
  426adc:	mov    WORD PTR [rbp-0x2],ax
  426ae0:	movzx  eax,WORD PTR [rbp-0x2]
  426ae4:	shl    eax,0xc
  426ae7:	mov    WORD PTR [rbp-0x4],ax
  426aeb:	jmp    426b43 <flatcc_json_parser_string_escape@@Base+0x28b>
  426aed:	or     BYTE PTR [rbp-0x5],0x20
  426af1:	cmp    BYTE PTR [rbp-0x5],0x60
  426af5:	jle    426b1e <flatcc_json_parser_string_escape@@Base+0x266>
  426af7:	cmp    BYTE PTR [rbp-0x5],0x66
  426afb:	jg     426b1e <flatcc_json_parser_string_escape@@Base+0x266>
  426afd:	movsx  ax,BYTE PTR [rbp-0x5]
  426b02:	sub    eax,0x57
  426b05:	mov    WORD PTR [rbp-0x2],ax
  426b09:	movzx  eax,WORD PTR [rbp-0x2]
  426b0d:	shl    eax,0xc
  426b10:	mov    edx,eax
  426b12:	movzx  eax,WORD PTR [rbp-0x4]
  426b16:	or     eax,edx
  426b18:	mov    WORD PTR [rbp-0x4],ax
  426b1c:	jmp    426b43 <flatcc_json_parser_string_escape@@Base+0x28b>
  426b1e:	mov    rax,QWORD PTR [rbp-0x30]
  426b22:	mov    BYTE PTR [rax],0x0
  426b25:	mov    rdx,QWORD PTR [rbp-0x28]
  426b29:	mov    rsi,QWORD PTR [rbp-0x20]
  426b2d:	mov    rax,QWORD PTR [rbp-0x18]
  426b31:	mov    ecx,0x12
  426b36:	mov    rdi,rax
  426b39:	call   42665a <flatcc_json_parser_set_error@@Base>
  426b3e:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426b43:	mov    rax,QWORD PTR [rbp-0x20]
  426b47:	movzx  eax,BYTE PTR [rax+0x3]
  426b4b:	mov    BYTE PTR [rbp-0x5],al
  426b4e:	cmp    BYTE PTR [rbp-0x5],0x2f
  426b52:	jle    426b7b <flatcc_json_parser_string_escape@@Base+0x2c3>
  426b54:	cmp    BYTE PTR [rbp-0x5],0x39
  426b58:	jg     426b7b <flatcc_json_parser_string_escape@@Base+0x2c3>
  426b5a:	movsx  ax,BYTE PTR [rbp-0x5]
  426b5f:	sub    eax,0x30
  426b62:	mov    WORD PTR [rbp-0x2],ax
  426b66:	movzx  eax,WORD PTR [rbp-0x2]
  426b6a:	shl    eax,0x8
  426b6d:	mov    edx,eax
  426b6f:	movzx  eax,WORD PTR [rbp-0x4]
  426b73:	or     eax,edx
  426b75:	mov    WORD PTR [rbp-0x4],ax
  426b79:	jmp    426bd1 <flatcc_json_parser_string_escape@@Base+0x319>
  426b7b:	or     BYTE PTR [rbp-0x5],0x20
  426b7f:	cmp    BYTE PTR [rbp-0x5],0x60
  426b83:	jle    426bac <flatcc_json_parser_string_escape@@Base+0x2f4>
  426b85:	cmp    BYTE PTR [rbp-0x5],0x66
  426b89:	jg     426bac <flatcc_json_parser_string_escape@@Base+0x2f4>
  426b8b:	movsx  ax,BYTE PTR [rbp-0x5]
  426b90:	sub    eax,0x57
  426b93:	mov    WORD PTR [rbp-0x2],ax
  426b97:	movzx  eax,WORD PTR [rbp-0x2]
  426b9b:	shl    eax,0x8
  426b9e:	mov    edx,eax
  426ba0:	movzx  eax,WORD PTR [rbp-0x4]
  426ba4:	or     eax,edx
  426ba6:	mov    WORD PTR [rbp-0x4],ax
  426baa:	jmp    426bd1 <flatcc_json_parser_string_escape@@Base+0x319>
  426bac:	mov    rax,QWORD PTR [rbp-0x30]
  426bb0:	mov    BYTE PTR [rax],0x0
  426bb3:	mov    rdx,QWORD PTR [rbp-0x28]
  426bb7:	mov    rsi,QWORD PTR [rbp-0x20]
  426bbb:	mov    rax,QWORD PTR [rbp-0x18]
  426bbf:	mov    ecx,0x12
  426bc4:	mov    rdi,rax
  426bc7:	call   42665a <flatcc_json_parser_set_error@@Base>
  426bcc:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426bd1:	mov    rax,QWORD PTR [rbp-0x20]
  426bd5:	movzx  eax,BYTE PTR [rax+0x4]
  426bd9:	mov    BYTE PTR [rbp-0x5],al
  426bdc:	cmp    BYTE PTR [rbp-0x5],0x2f
  426be0:	jle    426c09 <flatcc_json_parser_string_escape@@Base+0x351>
  426be2:	cmp    BYTE PTR [rbp-0x5],0x39
  426be6:	jg     426c09 <flatcc_json_parser_string_escape@@Base+0x351>
  426be8:	movsx  ax,BYTE PTR [rbp-0x5]
  426bed:	sub    eax,0x30
  426bf0:	mov    WORD PTR [rbp-0x2],ax
  426bf4:	movzx  eax,WORD PTR [rbp-0x2]
  426bf8:	shl    eax,0x4
  426bfb:	mov    edx,eax
  426bfd:	movzx  eax,WORD PTR [rbp-0x4]
  426c01:	or     eax,edx
  426c03:	mov    WORD PTR [rbp-0x4],ax
  426c07:	jmp    426c5f <flatcc_json_parser_string_escape@@Base+0x3a7>
  426c09:	or     BYTE PTR [rbp-0x5],0x20
  426c0d:	cmp    BYTE PTR [rbp-0x5],0x60
  426c11:	jle    426c3a <flatcc_json_parser_string_escape@@Base+0x382>
  426c13:	cmp    BYTE PTR [rbp-0x5],0x66
  426c17:	jg     426c3a <flatcc_json_parser_string_escape@@Base+0x382>
  426c19:	movsx  ax,BYTE PTR [rbp-0x5]
  426c1e:	sub    eax,0x57
  426c21:	mov    WORD PTR [rbp-0x2],ax
  426c25:	movzx  eax,WORD PTR [rbp-0x2]
  426c29:	shl    eax,0x4
  426c2c:	mov    edx,eax
  426c2e:	movzx  eax,WORD PTR [rbp-0x4]
  426c32:	or     eax,edx
  426c34:	mov    WORD PTR [rbp-0x4],ax
  426c38:	jmp    426c5f <flatcc_json_parser_string_escape@@Base+0x3a7>
  426c3a:	mov    rax,QWORD PTR [rbp-0x30]
  426c3e:	mov    BYTE PTR [rax],0x0
  426c41:	mov    rdx,QWORD PTR [rbp-0x28]
  426c45:	mov    rsi,QWORD PTR [rbp-0x20]
  426c49:	mov    rax,QWORD PTR [rbp-0x18]
  426c4d:	mov    ecx,0x12
  426c52:	mov    rdi,rax
  426c55:	call   42665a <flatcc_json_parser_set_error@@Base>
  426c5a:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426c5f:	mov    rax,QWORD PTR [rbp-0x20]
  426c63:	movzx  eax,BYTE PTR [rax+0x5]
  426c67:	mov    BYTE PTR [rbp-0x5],al
  426c6a:	cmp    BYTE PTR [rbp-0x5],0x2f
  426c6e:	jle    426c8c <flatcc_json_parser_string_escape@@Base+0x3d4>
  426c70:	cmp    BYTE PTR [rbp-0x5],0x39
  426c74:	jg     426c8c <flatcc_json_parser_string_escape@@Base+0x3d4>
  426c76:	movsx  ax,BYTE PTR [rbp-0x5]
  426c7b:	sub    eax,0x30
  426c7e:	mov    WORD PTR [rbp-0x2],ax
  426c82:	movzx  eax,WORD PTR [rbp-0x2]
  426c86:	or     WORD PTR [rbp-0x4],ax
  426c8a:	jmp    426cd7 <flatcc_json_parser_string_escape@@Base+0x41f>
  426c8c:	or     BYTE PTR [rbp-0x5],0x20
  426c90:	cmp    BYTE PTR [rbp-0x5],0x60
  426c94:	jle    426cb2 <flatcc_json_parser_string_escape@@Base+0x3fa>
  426c96:	cmp    BYTE PTR [rbp-0x5],0x66
  426c9a:	jg     426cb2 <flatcc_json_parser_string_escape@@Base+0x3fa>
  426c9c:	movsx  ax,BYTE PTR [rbp-0x5]
  426ca1:	sub    eax,0x57
  426ca4:	mov    WORD PTR [rbp-0x2],ax
  426ca8:	movzx  eax,WORD PTR [rbp-0x2]
  426cac:	or     WORD PTR [rbp-0x4],ax
  426cb0:	jmp    426cd7 <flatcc_json_parser_string_escape@@Base+0x41f>
  426cb2:	mov    rax,QWORD PTR [rbp-0x30]
  426cb6:	mov    BYTE PTR [rax],0x0
  426cb9:	mov    rdx,QWORD PTR [rbp-0x28]
  426cbd:	mov    rsi,QWORD PTR [rbp-0x20]
  426cc1:	mov    rax,QWORD PTR [rbp-0x18]
  426cc5:	mov    ecx,0x12
  426cca:	mov    rdi,rax
  426ccd:	call   42665a <flatcc_json_parser_set_error@@Base>
  426cd2:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426cd7:	cmp    WORD PTR [rbp-0x4],0x7f
  426cdc:	ja     426cf8 <flatcc_json_parser_string_escape@@Base+0x440>
  426cde:	mov    rax,QWORD PTR [rbp-0x30]
  426ce2:	mov    BYTE PTR [rax],0x1
  426ce5:	mov    rax,QWORD PTR [rbp-0x30]
  426ce9:	add    rax,0x1
  426ced:	movzx  edx,WORD PTR [rbp-0x4]
  426cf1:	mov    BYTE PTR [rax],dl
  426cf3:	jmp    426d7a <flatcc_json_parser_string_escape@@Base+0x4c2>
  426cf8:	cmp    WORD PTR [rbp-0x4],0x7ff
  426cfe:	ja     426d32 <flatcc_json_parser_string_escape@@Base+0x47a>
  426d00:	mov    rax,QWORD PTR [rbp-0x30]
  426d04:	mov    BYTE PTR [rax],0x2
  426d07:	mov    rax,QWORD PTR [rbp-0x30]
  426d0b:	add    rax,0x1
  426d0f:	movzx  edx,WORD PTR [rbp-0x4]
  426d13:	shr    dx,0x6
  426d17:	or     edx,0xffffffc0
  426d1a:	mov    BYTE PTR [rax],dl
  426d1c:	mov    rax,QWORD PTR [rbp-0x30]
  426d20:	add    rax,0x2
  426d24:	movzx  edx,WORD PTR [rbp-0x4]
  426d28:	and    edx,0x3f
  426d2b:	or     edx,0xffffff80
  426d2e:	mov    BYTE PTR [rax],dl
  426d30:	jmp    426d7a <flatcc_json_parser_string_escape@@Base+0x4c2>
  426d32:	mov    rax,QWORD PTR [rbp-0x30]
  426d36:	mov    BYTE PTR [rax],0x3
  426d39:	mov    rax,QWORD PTR [rbp-0x30]
  426d3d:	add    rax,0x1
  426d41:	movzx  edx,WORD PTR [rbp-0x4]
  426d45:	shr    dx,0xc
  426d49:	or     edx,0xffffffe0
  426d4c:	mov    BYTE PTR [rax],dl
  426d4e:	mov    rax,QWORD PTR [rbp-0x30]
  426d52:	add    rax,0x2
  426d56:	movzx  edx,WORD PTR [rbp-0x4]
  426d5a:	shr    dx,0x6
  426d5e:	and    edx,0x3f
  426d61:	or     edx,0xffffff80
  426d64:	mov    BYTE PTR [rax],dl
  426d66:	mov    rax,QWORD PTR [rbp-0x30]
  426d6a:	add    rax,0x3
  426d6e:	movzx  edx,WORD PTR [rbp-0x4]
  426d72:	and    edx,0x3f
  426d75:	or     edx,0xffffff80
  426d78:	mov    BYTE PTR [rax],dl
  426d7a:	mov    rax,QWORD PTR [rbp-0x20]
  426d7e:	add    rax,0x6
  426d82:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426d87:	mov    rax,QWORD PTR [rbp-0x30]
  426d8b:	mov    BYTE PTR [rax],0x1
  426d8e:	mov    rax,QWORD PTR [rbp-0x30]
  426d92:	add    rax,0x1
  426d96:	mov    BYTE PTR [rax],0x9
  426d99:	mov    rax,QWORD PTR [rbp-0x20]
  426d9d:	add    rax,0x2
  426da1:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426da6:	mov    rax,QWORD PTR [rbp-0x30]
  426daa:	mov    BYTE PTR [rax],0x1
  426dad:	mov    rax,QWORD PTR [rbp-0x30]
  426db1:	add    rax,0x1
  426db5:	mov    BYTE PTR [rax],0xa
  426db8:	mov    rax,QWORD PTR [rbp-0x20]
  426dbc:	add    rax,0x2
  426dc0:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426dc5:	mov    rax,QWORD PTR [rbp-0x30]
  426dc9:	mov    BYTE PTR [rax],0x1
  426dcc:	mov    rax,QWORD PTR [rbp-0x30]
  426dd0:	add    rax,0x1
  426dd4:	mov    BYTE PTR [rax],0xd
  426dd7:	mov    rax,QWORD PTR [rbp-0x20]
  426ddb:	add    rax,0x2
  426ddf:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426de4:	mov    rax,QWORD PTR [rbp-0x30]
  426de8:	mov    BYTE PTR [rax],0x1
  426deb:	mov    rax,QWORD PTR [rbp-0x30]
  426def:	add    rax,0x1
  426df3:	mov    BYTE PTR [rax],0x8
  426df6:	mov    rax,QWORD PTR [rbp-0x20]
  426dfa:	add    rax,0x2
  426dfe:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426e03:	mov    rax,QWORD PTR [rbp-0x30]
  426e07:	mov    BYTE PTR [rax],0x1
  426e0a:	mov    rax,QWORD PTR [rbp-0x30]
  426e0e:	add    rax,0x1
  426e12:	mov    BYTE PTR [rax],0xc
  426e15:	mov    rax,QWORD PTR [rbp-0x20]
  426e19:	add    rax,0x2
  426e1d:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426e1f:	mov    rax,QWORD PTR [rbp-0x30]
  426e23:	mov    BYTE PTR [rax],0x1
  426e26:	mov    rax,QWORD PTR [rbp-0x30]
  426e2a:	add    rax,0x1
  426e2e:	mov    BYTE PTR [rax],0x22
  426e31:	mov    rax,QWORD PTR [rbp-0x20]
  426e35:	add    rax,0x2
  426e39:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426e3b:	mov    rax,QWORD PTR [rbp-0x30]
  426e3f:	mov    BYTE PTR [rax],0x1
  426e42:	mov    rax,QWORD PTR [rbp-0x30]
  426e46:	add    rax,0x1
  426e4a:	mov    BYTE PTR [rax],0x5c
  426e4d:	mov    rax,QWORD PTR [rbp-0x20]
  426e51:	add    rax,0x2
  426e55:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426e57:	mov    rax,QWORD PTR [rbp-0x30]
  426e5b:	mov    BYTE PTR [rax],0x1
  426e5e:	mov    rax,QWORD PTR [rbp-0x30]
  426e62:	add    rax,0x1
  426e66:	mov    BYTE PTR [rax],0x2f
  426e69:	mov    rax,QWORD PTR [rbp-0x20]
  426e6d:	add    rax,0x2
  426e71:	jmp    426e93 <flatcc_json_parser_string_escape@@Base+0x5db>
  426e73:	mov    rax,QWORD PTR [rbp-0x30]
  426e77:	mov    BYTE PTR [rax],0x0
  426e7a:	mov    rdx,QWORD PTR [rbp-0x28]
  426e7e:	mov    rsi,QWORD PTR [rbp-0x20]
  426e82:	mov    rax,QWORD PTR [rbp-0x18]
  426e86:	mov    ecx,0x12
  426e8b:	mov    rdi,rax
  426e8e:	call   42665a <flatcc_json_parser_set_error@@Base>
  426e93:	leave  
  426e94:	ret    

0000000000426e95 <flatcc_json_parser_skip_constant@@Base>:
  426e95:	push   rbp
  426e96:	mov    rbp,rsp
  426e99:	sub    rsp,0x30
  426e9d:	mov    QWORD PTR [rbp-0x18],rdi
  426ea1:	mov    QWORD PTR [rbp-0x20],rsi
  426ea5:	mov    QWORD PTR [rbp-0x28],rdx
  426ea9:	jmp    426f24 <flatcc_json_parser_skip_constant@@Base+0x8f>
  426eab:	mov    rax,QWORD PTR [rbp-0x20]
  426eaf:	movzx  eax,BYTE PTR [rax]
  426eb2:	mov    BYTE PTR [rbp-0x9],al
  426eb5:	cmp    BYTE PTR [rbp-0x9],0x0
  426eb9:	js     426ed3 <flatcc_json_parser_skip_constant@@Base+0x3e>
  426ebb:	cmp    BYTE PTR [rbp-0x9],0x5f
  426ebf:	je     426ed3 <flatcc_json_parser_skip_constant@@Base+0x3e>
  426ec1:	cmp    BYTE PTR [rbp-0x9],0x2f
  426ec5:	jle    426ecd <flatcc_json_parser_skip_constant@@Base+0x38>
  426ec7:	cmp    BYTE PTR [rbp-0x9],0x39
  426ecb:	jle    426ed3 <flatcc_json_parser_skip_constant@@Base+0x3e>
  426ecd:	cmp    BYTE PTR [rbp-0x9],0x2e
  426ed1:	jne    426eda <flatcc_json_parser_skip_constant@@Base+0x45>
  426ed3:	add    QWORD PTR [rbp-0x20],0x1
  426ed8:	jmp    426f24 <flatcc_json_parser_skip_constant@@Base+0x8f>
  426eda:	or     BYTE PTR [rbp-0x9],0x20
  426ede:	cmp    BYTE PTR [rbp-0x9],0x60
  426ee2:	jle    426ef1 <flatcc_json_parser_skip_constant@@Base+0x5c>
  426ee4:	cmp    BYTE PTR [rbp-0x9],0x7a
  426ee8:	jg     426ef1 <flatcc_json_parser_skip_constant@@Base+0x5c>
  426eea:	add    QWORD PTR [rbp-0x20],0x1
  426eef:	jmp    426f24 <flatcc_json_parser_skip_constant@@Base+0x8f>
  426ef1:	mov    rax,QWORD PTR [rbp-0x20]
  426ef5:	mov    QWORD PTR [rbp-0x8],rax
  426ef9:	mov    rdx,QWORD PTR [rbp-0x28]
  426efd:	mov    rcx,QWORD PTR [rbp-0x8]
  426f01:	mov    rax,QWORD PTR [rbp-0x18]
  426f05:	mov    rsi,rcx
  426f08:	mov    rdi,rax
  426f0b:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  426f10:	mov    QWORD PTR [rbp-0x20],rax
  426f14:	mov    rax,QWORD PTR [rbp-0x20]
  426f18:	cmp    rax,QWORD PTR [rbp-0x8]
  426f1c:	jne    426f24 <flatcc_json_parser_skip_constant@@Base+0x8f>
  426f1e:	mov    rax,QWORD PTR [rbp-0x20]
  426f22:	jmp    426f36 <flatcc_json_parser_skip_constant@@Base+0xa1>
  426f24:	mov    rax,QWORD PTR [rbp-0x20]
  426f28:	cmp    rax,QWORD PTR [rbp-0x28]
  426f2c:	jne    426eab <flatcc_json_parser_skip_constant@@Base+0x16>
  426f32:	mov    rax,QWORD PTR [rbp-0x20]
  426f36:	leave  
  426f37:	ret    

0000000000426f38 <flatcc_json_parser_match_constant@@Base>:
  426f38:	push   rbp
  426f39:	mov    rbp,rsp
  426f3c:	sub    rsp,0x50
  426f40:	mov    QWORD PTR [rbp-0x28],rdi
  426f44:	mov    QWORD PTR [rbp-0x30],rsi
  426f48:	mov    QWORD PTR [rbp-0x38],rdx
  426f4c:	mov    DWORD PTR [rbp-0x3c],ecx
  426f4f:	mov    QWORD PTR [rbp-0x48],r8
  426f53:	mov    rax,QWORD PTR [rbp-0x30]
  426f57:	mov    QWORD PTR [rbp-0x10],rax
  426f5b:	mov    eax,DWORD PTR [rbp-0x3c]
  426f5e:	movsxd rdx,eax
  426f61:	mov    rax,QWORD PTR [rbp-0x30]
  426f65:	add    rax,rdx
  426f68:	mov    QWORD PTR [rbp-0x8],rax
  426f6c:	mov    rdx,QWORD PTR [rbp-0x38]
  426f70:	mov    rax,QWORD PTR [rbp-0x30]
  426f74:	sub    rdx,rax
  426f77:	mov    eax,DWORD PTR [rbp-0x3c]
  426f7a:	cdqe   
  426f7c:	cmp    rdx,rax
  426f7f:	jg     426f94 <flatcc_json_parser_match_constant@@Base+0x5c>
  426f81:	mov    rax,QWORD PTR [rbp-0x48]
  426f85:	mov    DWORD PTR [rax],0x0
  426f8b:	mov    rax,QWORD PTR [rbp-0x30]
  426f8f:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  426f94:	mov    rax,QWORD PTR [rbp-0x28]
  426f98:	mov    eax,DWORD PTR [rax+0x14]
  426f9b:	test   eax,eax
  426f9d:	je     42706e <flatcc_json_parser_match_constant@@Base+0x136>
  426fa3:	mov    rdx,QWORD PTR [rbp-0x38]
  426fa7:	mov    rcx,QWORD PTR [rbp-0x8]
  426fab:	mov    rax,QWORD PTR [rbp-0x28]
  426faf:	mov    rsi,rcx
  426fb2:	mov    rdi,rax
  426fb5:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  426fba:	mov    QWORD PTR [rbp-0x30],rax
  426fbe:	mov    rax,QWORD PTR [rbp-0x30]
  426fc2:	cmp    rax,QWORD PTR [rbp-0x38]
  426fc6:	jne    426fdb <flatcc_json_parser_match_constant@@Base+0xa3>
  426fc8:	mov    rax,QWORD PTR [rbp-0x48]
  426fcc:	mov    DWORD PTR [rax],0x0
  426fd2:	mov    rax,QWORD PTR [rbp-0x30]
  426fd6:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  426fdb:	mov    rax,QWORD PTR [rbp-0x30]
  426fdf:	cmp    rax,QWORD PTR [rbp-0x8]
  426fe3:	je     427031 <flatcc_json_parser_match_constant@@Base+0xf9>
  426fe5:	mov    rax,QWORD PTR [rbp-0x30]
  426fe9:	movzx  eax,BYTE PTR [rax]
  426fec:	mov    BYTE PTR [rbp-0x11],al
  426fef:	cmp    BYTE PTR [rbp-0x11],0x5f
  426ff3:	je     426ffb <flatcc_json_parser_match_constant@@Base+0xc3>
  426ff5:	cmp    BYTE PTR [rbp-0x11],0x0
  426ff9:	jns    42700e <flatcc_json_parser_match_constant@@Base+0xd6>
  426ffb:	mov    rax,QWORD PTR [rbp-0x48]
  426fff:	mov    DWORD PTR [rax],0x1
  427005:	mov    rax,QWORD PTR [rbp-0x30]
  427009:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  42700e:	or     BYTE PTR [rbp-0x11],0x20
  427012:	cmp    BYTE PTR [rbp-0x11],0x60
  427016:	jle    427031 <flatcc_json_parser_match_constant@@Base+0xf9>
  427018:	cmp    BYTE PTR [rbp-0x11],0x7a
  42701c:	jg     427031 <flatcc_json_parser_match_constant@@Base+0xf9>
  42701e:	mov    rax,QWORD PTR [rbp-0x48]
  427022:	mov    DWORD PTR [rax],0x1
  427028:	mov    rax,QWORD PTR [rbp-0x30]
  42702c:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  427031:	mov    rax,QWORD PTR [rbp-0x48]
  427035:	mov    DWORD PTR [rax],0x0
  42703b:	mov    rax,QWORD PTR [rbp-0x30]
  42703f:	movzx  eax,BYTE PTR [rax]
  427042:	cmp    al,0x2c
  427044:	je     42705c <flatcc_json_parser_match_constant@@Base+0x124>
  427046:	mov    rax,QWORD PTR [rbp-0x30]
  42704a:	movzx  eax,BYTE PTR [rax]
  42704d:	cmp    al,0x7d
  42704f:	je     42705c <flatcc_json_parser_match_constant@@Base+0x124>
  427051:	mov    rax,QWORD PTR [rbp-0x30]
  427055:	movzx  eax,BYTE PTR [rax]
  427058:	cmp    al,0x5d
  42705a:	jne    427065 <flatcc_json_parser_match_constant@@Base+0x12d>
  42705c:	mov    rax,QWORD PTR [rbp-0x30]
  427060:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  427065:	mov    rax,QWORD PTR [rbp-0x10]
  427069:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  42706e:	mov    rax,QWORD PTR [rbp-0x8]
  427072:	mov    QWORD PTR [rbp-0x30],rax
  427076:	mov    rax,QWORD PTR [rbp-0x30]
  42707a:	movzx  eax,BYTE PTR [rax]
  42707d:	cmp    al,0x20
  42707f:	jne    4270da <flatcc_json_parser_match_constant@@Base+0x1a2>
  427081:	add    QWORD PTR [rbp-0x30],0x1
  427086:	jmp    42708d <flatcc_json_parser_match_constant@@Base+0x155>
  427088:	add    QWORD PTR [rbp-0x30],0x1
  42708d:	mov    rax,QWORD PTR [rbp-0x30]
  427091:	cmp    rax,QWORD PTR [rbp-0x38]
  427095:	je     4270a2 <flatcc_json_parser_match_constant@@Base+0x16a>
  427097:	mov    rax,QWORD PTR [rbp-0x30]
  42709b:	movzx  eax,BYTE PTR [rax]
  42709e:	cmp    al,0x20
  4270a0:	je     427088 <flatcc_json_parser_match_constant@@Base+0x150>
  4270a2:	mov    rax,QWORD PTR [rbp-0x30]
  4270a6:	cmp    rax,QWORD PTR [rbp-0x38]
  4270aa:	jne    4270bf <flatcc_json_parser_match_constant@@Base+0x187>
  4270ac:	mov    rax,QWORD PTR [rbp-0x48]
  4270b0:	mov    DWORD PTR [rax],0x0
  4270b6:	mov    rax,QWORD PTR [rbp-0x30]
  4270ba:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  4270bf:	mov    rax,QWORD PTR [rbp-0x30]
  4270c3:	movzx  eax,BYTE PTR [rax]
  4270c6:	cmp    al,0x22
  4270c8:	je     4270da <flatcc_json_parser_match_constant@@Base+0x1a2>
  4270ca:	mov    rax,QWORD PTR [rbp-0x48]
  4270ce:	mov    DWORD PTR [rax],0x1
  4270d4:	mov    rax,QWORD PTR [rbp-0x30]
  4270d8:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  4270da:	mov    rax,QWORD PTR [rbp-0x30]
  4270de:	movzx  eax,BYTE PTR [rax]
  4270e1:	movsx  eax,al
  4270e4:	cmp    eax,0x22
  4270e7:	je     427113 <flatcc_json_parser_match_constant@@Base+0x1db>
  4270e9:	cmp    eax,0x5c
  4270ec:	jne    427143 <flatcc_json_parser_match_constant@@Base+0x20b>
  4270ee:	mov    rax,QWORD PTR [rbp-0x48]
  4270f2:	mov    DWORD PTR [rax],0x0
  4270f8:	mov    rdx,QWORD PTR [rbp-0x38]
  4270fc:	mov    rsi,QWORD PTR [rbp-0x30]
  427100:	mov    rax,QWORD PTR [rbp-0x28]
  427104:	mov    ecx,0x12
  427109:	mov    rdi,rax
  42710c:	call   42665a <flatcc_json_parser_set_error@@Base>
  427111:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  427113:	mov    rax,QWORD PTR [rbp-0x30]
  427117:	lea    rcx,[rax+0x1]
  42711b:	mov    rax,QWORD PTR [rbp-0x28]
  42711f:	mov    edx,0x0
  427124:	mov    rsi,rcx
  427127:	mov    rdi,rax
  42712a:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  42712f:	mov    QWORD PTR [rbp-0x30],rax
  427133:	mov    rax,QWORD PTR [rbp-0x48]
  427137:	mov    DWORD PTR [rax],0x0
  42713d:	mov    rax,QWORD PTR [rbp-0x30]
  427141:	jmp    427151 <flatcc_json_parser_match_constant@@Base+0x219>
  427143:	mov    rax,QWORD PTR [rbp-0x48]
  427147:	mov    DWORD PTR [rax],0x0
  42714d:	mov    rax,QWORD PTR [rbp-0x10]
  427151:	leave  
  427152:	ret    

0000000000427153 <flatcc_json_parser_unmatched_symbol@@Base>:
  427153:	push   rbp
  427154:	mov    rbp,rsp
  427157:	sub    rsp,0x20
  42715b:	mov    QWORD PTR [rbp-0x8],rdi
  42715f:	mov    QWORD PTR [rbp-0x10],rsi
  427163:	mov    QWORD PTR [rbp-0x18],rdx
  427167:	mov    rax,QWORD PTR [rbp-0x8]
  42716b:	mov    eax,DWORD PTR [rax+0x10]
  42716e:	and    eax,0x1
  427171:	test   eax,eax
  427173:	je     427218 <flatcc_json_parser_unmatched_symbol@@Base+0xc5>
  427179:	mov    rdx,QWORD PTR [rbp-0x18]
  42717d:	mov    rcx,QWORD PTR [rbp-0x10]
  427181:	mov    rax,QWORD PTR [rbp-0x8]
  427185:	mov    rsi,rcx
  427188:	mov    rdi,rax
  42718b:	call   422b34 <flatcc_verify_union_vector_field@@Base+0x42b>
  427190:	mov    QWORD PTR [rbp-0x10],rax
  427194:	mov    rdx,QWORD PTR [rbp-0x18]
  427198:	mov    rcx,QWORD PTR [rbp-0x10]
  42719c:	mov    rax,QWORD PTR [rbp-0x8]
  4271a0:	mov    rsi,rcx
  4271a3:	mov    rdi,rax
  4271a6:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  4271ab:	mov    QWORD PTR [rbp-0x10],rax
  4271af:	mov    rax,QWORD PTR [rbp-0x10]
  4271b3:	cmp    rax,QWORD PTR [rbp-0x18]
  4271b7:	je     4271fd <flatcc_json_parser_unmatched_symbol@@Base+0xaa>
  4271b9:	mov    rax,QWORD PTR [rbp-0x10]
  4271bd:	movzx  eax,BYTE PTR [rax]
  4271c0:	cmp    al,0x3a
  4271c2:	jne    4271fd <flatcc_json_parser_unmatched_symbol@@Base+0xaa>
  4271c4:	add    QWORD PTR [rbp-0x10],0x1
  4271c9:	mov    rdx,QWORD PTR [rbp-0x18]
  4271cd:	mov    rcx,QWORD PTR [rbp-0x10]
  4271d1:	mov    rax,QWORD PTR [rbp-0x8]
  4271d5:	mov    rsi,rcx
  4271d8:	mov    rdi,rax
  4271db:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  4271e0:	mov    QWORD PTR [rbp-0x10],rax
  4271e4:	mov    rdx,QWORD PTR [rbp-0x18]
  4271e8:	mov    rcx,QWORD PTR [rbp-0x10]
  4271ec:	mov    rax,QWORD PTR [rbp-0x8]
  4271f0:	mov    rsi,rcx
  4271f3:	mov    rdi,rax
  4271f6:	call   427761 <flatcc_json_parser_generic_json@@Base>
  4271fb:	jmp    427231 <flatcc_json_parser_unmatched_symbol@@Base+0xde>
  4271fd:	mov    rdx,QWORD PTR [rbp-0x18]
  427201:	mov    rsi,QWORD PTR [rbp-0x10]
  427205:	mov    rax,QWORD PTR [rbp-0x8]
  427209:	mov    ecx,0x4
  42720e:	mov    rdi,rax
  427211:	call   42665a <flatcc_json_parser_set_error@@Base>
  427216:	jmp    427231 <flatcc_json_parser_unmatched_symbol@@Base+0xde>
  427218:	mov    rdx,QWORD PTR [rbp-0x18]
  42721c:	mov    rsi,QWORD PTR [rbp-0x10]
  427220:	mov    rax,QWORD PTR [rbp-0x8]
  427224:	mov    ecx,0xd
  427229:	mov    rdi,rax
  42722c:	call   42665a <flatcc_json_parser_set_error@@Base>
  427231:	leave  
  427232:	ret    
  427233:	push   rbp
  427234:	mov    rbp,rsp
  427237:	sub    rsp,0x20
  42723b:	mov    QWORD PTR [rbp-0x8],rdi
  42723f:	mov    QWORD PTR [rbp-0x10],rsi
  427243:	mov    QWORD PTR [rbp-0x18],rdx
  427247:	mov    rax,QWORD PTR [rbp-0x10]
  42724b:	cmp    rax,QWORD PTR [rbp-0x18]
  42724f:	jne    42725a <flatcc_json_parser_unmatched_symbol@@Base+0x107>
  427251:	mov    rax,QWORD PTR [rbp-0x10]
  427255:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  42725a:	mov    rax,QWORD PTR [rbp-0x10]
  42725e:	movzx  eax,BYTE PTR [rax]
  427261:	cmp    al,0x2d
  427263:	jne    427292 <flatcc_json_parser_unmatched_symbol@@Base+0x13f>
  427265:	add    QWORD PTR [rbp-0x10],0x1
  42726a:	mov    rax,QWORD PTR [rbp-0x10]
  42726e:	cmp    rax,QWORD PTR [rbp-0x18]
  427272:	jne    427292 <flatcc_json_parser_unmatched_symbol@@Base+0x13f>
  427274:	mov    rdx,QWORD PTR [rbp-0x18]
  427278:	mov    rsi,QWORD PTR [rbp-0x10]
  42727c:	mov    rax,QWORD PTR [rbp-0x8]
  427280:	mov    ecx,0x6
  427285:	mov    rdi,rax
  427288:	call   42665a <flatcc_json_parser_set_error@@Base>
  42728d:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  427292:	mov    rax,QWORD PTR [rbp-0x10]
  427296:	movzx  eax,BYTE PTR [rax]
  427299:	cmp    al,0x30
  42729b:	jne    4272a4 <flatcc_json_parser_unmatched_symbol@@Base+0x151>
  42729d:	add    QWORD PTR [rbp-0x10],0x1
  4272a2:	jmp    427304 <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  4272a4:	mov    rax,QWORD PTR [rbp-0x10]
  4272a8:	movzx  eax,BYTE PTR [rax]
  4272ab:	cmp    al,0x30
  4272ad:	jle    4272ba <flatcc_json_parser_unmatched_symbol@@Base+0x167>
  4272af:	mov    rax,QWORD PTR [rbp-0x10]
  4272b3:	movzx  eax,BYTE PTR [rax]
  4272b6:	cmp    al,0x39
  4272b8:	jle    4272d8 <flatcc_json_parser_unmatched_symbol@@Base+0x185>
  4272ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4272be:	mov    rsi,QWORD PTR [rbp-0x10]
  4272c2:	mov    rax,QWORD PTR [rbp-0x8]
  4272c6:	mov    ecx,0x6
  4272cb:	mov    rdi,rax
  4272ce:	call   42665a <flatcc_json_parser_set_error@@Base>
  4272d3:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4272d8:	add    QWORD PTR [rbp-0x10],0x1
  4272dd:	jmp    4272e4 <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  4272df:	add    QWORD PTR [rbp-0x10],0x1
  4272e4:	mov    rax,QWORD PTR [rbp-0x10]
  4272e8:	cmp    rax,QWORD PTR [rbp-0x18]
  4272ec:	je     427304 <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  4272ee:	mov    rax,QWORD PTR [rbp-0x10]
  4272f2:	movzx  eax,BYTE PTR [rax]
  4272f5:	cmp    al,0x2f
  4272f7:	jle    427304 <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  4272f9:	mov    rax,QWORD PTR [rbp-0x10]
  4272fd:	movzx  eax,BYTE PTR [rax]
  427300:	cmp    al,0x39
  427302:	jle    4272df <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
  427304:	mov    rax,QWORD PTR [rbp-0x10]
  427308:	cmp    rax,QWORD PTR [rbp-0x18]
  42730c:	je     42737e <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  42730e:	mov    rax,QWORD PTR [rbp-0x10]
  427312:	movzx  eax,BYTE PTR [rax]
  427315:	cmp    al,0x2e
  427317:	jne    42737e <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  427319:	add    QWORD PTR [rbp-0x10],0x1
  42731e:	mov    rax,QWORD PTR [rbp-0x10]
  427322:	movzx  eax,BYTE PTR [rax]
  427325:	cmp    al,0x2f
  427327:	jle    427334 <flatcc_json_parser_unmatched_symbol@@Base+0x1e1>
  427329:	mov    rax,QWORD PTR [rbp-0x10]
  42732d:	movzx  eax,BYTE PTR [rax]
  427330:	cmp    al,0x39
  427332:	jle    427352 <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  427334:	mov    rdx,QWORD PTR [rbp-0x18]
  427338:	mov    rsi,QWORD PTR [rbp-0x10]
  42733c:	mov    rax,QWORD PTR [rbp-0x8]
  427340:	mov    ecx,0x6
  427345:	mov    rdi,rax
  427348:	call   42665a <flatcc_json_parser_set_error@@Base>
  42734d:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  427352:	add    QWORD PTR [rbp-0x10],0x1
  427357:	jmp    42735e <flatcc_json_parser_unmatched_symbol@@Base+0x20b>
  427359:	add    QWORD PTR [rbp-0x10],0x1
  42735e:	mov    rax,QWORD PTR [rbp-0x10]
  427362:	cmp    rax,QWORD PTR [rbp-0x18]
  427366:	je     42737e <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  427368:	mov    rax,QWORD PTR [rbp-0x10]
  42736c:	movzx  eax,BYTE PTR [rax]
  42736f:	cmp    al,0x2f
  427371:	jle    42737e <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  427373:	mov    rax,QWORD PTR [rbp-0x10]
  427377:	movzx  eax,BYTE PTR [rax]
  42737a:	cmp    al,0x39
  42737c:	jle    427359 <flatcc_json_parser_unmatched_symbol@@Base+0x206>
  42737e:	mov    rax,QWORD PTR [rbp-0x10]
  427382:	cmp    rax,QWORD PTR [rbp-0x18]
  427386:	je     427458 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  42738c:	mov    rax,QWORD PTR [rbp-0x10]
  427390:	movzx  eax,BYTE PTR [rax]
  427393:	cmp    al,0x65
  427395:	je     4273a6 <flatcc_json_parser_unmatched_symbol@@Base+0x253>
  427397:	mov    rax,QWORD PTR [rbp-0x10]
  42739b:	movzx  eax,BYTE PTR [rax]
  42739e:	cmp    al,0x45
  4273a0:	jne    427458 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  4273a6:	add    QWORD PTR [rbp-0x10],0x1
  4273ab:	mov    rax,QWORD PTR [rbp-0x10]
  4273af:	cmp    rax,QWORD PTR [rbp-0x18]
  4273b3:	jne    4273d3 <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  4273b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4273b9:	mov    rsi,QWORD PTR [rbp-0x10]
  4273bd:	mov    rax,QWORD PTR [rbp-0x8]
  4273c1:	mov    ecx,0x6
  4273c6:	mov    rdi,rax
  4273c9:	call   42665a <flatcc_json_parser_set_error@@Base>
  4273ce:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4273d3:	mov    rax,QWORD PTR [rbp-0x10]
  4273d7:	movzx  eax,BYTE PTR [rax]
  4273da:	cmp    al,0x2b
  4273dc:	je     4273e9 <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  4273de:	mov    rax,QWORD PTR [rbp-0x10]
  4273e2:	movzx  eax,BYTE PTR [rax]
  4273e5:	cmp    al,0x2d
  4273e7:	jne    4273ee <flatcc_json_parser_unmatched_symbol@@Base+0x29b>
  4273e9:	add    QWORD PTR [rbp-0x10],0x1
  4273ee:	mov    rax,QWORD PTR [rbp-0x10]
  4273f2:	cmp    rax,QWORD PTR [rbp-0x18]
  4273f6:	je     42740e <flatcc_json_parser_unmatched_symbol@@Base+0x2bb>
  4273f8:	mov    rax,QWORD PTR [rbp-0x10]
  4273fc:	movzx  eax,BYTE PTR [rax]
  4273ff:	cmp    al,0x2f
  427401:	jle    42740e <flatcc_json_parser_unmatched_symbol@@Base+0x2bb>
  427403:	mov    rax,QWORD PTR [rbp-0x10]
  427407:	movzx  eax,BYTE PTR [rax]
  42740a:	cmp    al,0x39
  42740c:	jle    42742c <flatcc_json_parser_unmatched_symbol@@Base+0x2d9>
  42740e:	mov    rdx,QWORD PTR [rbp-0x18]
  427412:	mov    rsi,QWORD PTR [rbp-0x10]
  427416:	mov    rax,QWORD PTR [rbp-0x8]
  42741a:	mov    ecx,0x6
  42741f:	mov    rdi,rax
  427422:	call   42665a <flatcc_json_parser_set_error@@Base>
  427427:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  42742c:	add    QWORD PTR [rbp-0x10],0x1
  427431:	jmp    427438 <flatcc_json_parser_unmatched_symbol@@Base+0x2e5>
  427433:	add    QWORD PTR [rbp-0x10],0x1
  427438:	mov    rax,QWORD PTR [rbp-0x10]
  42743c:	cmp    rax,QWORD PTR [rbp-0x18]
  427440:	je     427458 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  427442:	mov    rax,QWORD PTR [rbp-0x10]
  427446:	movzx  eax,BYTE PTR [rax]
  427449:	cmp    al,0x2f
  42744b:	jle    427458 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  42744d:	mov    rax,QWORD PTR [rbp-0x10]
  427451:	movzx  eax,BYTE PTR [rax]
  427454:	cmp    al,0x39
  427456:	jle    427433 <flatcc_json_parser_unmatched_symbol@@Base+0x2e0>
  427458:	mov    rax,QWORD PTR [rbp-0x10]
  42745c:	cmp    rax,QWORD PTR [rbp-0x18]
  427460:	je     4274a8 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  427462:	mov    rax,QWORD PTR [rbp-0x10]
  427466:	movzx  eax,BYTE PTR [rax]
  427469:	movsx  eax,al
  42746c:	cmp    eax,0x20
  42746f:	je     4274a2 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  427471:	cmp    eax,0x20
  427474:	jg     427487 <flatcc_json_parser_unmatched_symbol@@Base+0x334>
  427476:	cmp    eax,0x9
  427479:	jl     4274a8 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  42747b:	cmp    eax,0xb
  42747e:	jle    4274a2 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  427480:	cmp    eax,0xd
  427483:	je     4274a2 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  427485:	jmp    4274a8 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  427487:	cmp    eax,0x3a
  42748a:	je     4274a2 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  42748c:	cmp    eax,0x3a
  42748f:	jg     427498 <flatcc_json_parser_unmatched_symbol@@Base+0x345>
  427491:	cmp    eax,0x2c
  427494:	je     4274a2 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  427496:	jmp    4274a8 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  427498:	cmp    eax,0x5d
  42749b:	je     4274a2 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  42749d:	cmp    eax,0x7d
  4274a0:	jne    4274a8 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  4274a2:	mov    rax,QWORD PTR [rbp-0x10]
  4274a6:	jmp    4274c1 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4274a8:	mov    rdx,QWORD PTR [rbp-0x18]
  4274ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4274b0:	mov    rax,QWORD PTR [rbp-0x8]
  4274b4:	mov    ecx,0x6
  4274b9:	mov    rdi,rax
  4274bc:	call   42665a <flatcc_json_parser_set_error@@Base>
  4274c1:	leave  
  4274c2:	ret    

00000000004274c3 <flatcc_json_parser_double@@Base>:
  4274c3:	push   rbp
  4274c4:	mov    rbp,rsp
  4274c7:	sub    rsp,0x30
  4274cb:	mov    QWORD PTR [rbp-0x18],rdi
  4274cf:	mov    QWORD PTR [rbp-0x20],rsi
  4274d3:	mov    QWORD PTR [rbp-0x28],rdx
  4274d7:	mov    QWORD PTR [rbp-0x30],rcx
  4274db:	mov    rax,QWORD PTR [rbp-0x30]
  4274df:	vxorpd xmm0,xmm0,xmm0
  4274e3:	vmovsd QWORD PTR [rax],xmm0
  4274e7:	mov    rax,QWORD PTR [rbp-0x20]
  4274eb:	cmp    rax,QWORD PTR [rbp-0x28]
  4274ef:	jne    4274fa <flatcc_json_parser_double@@Base+0x37>
  4274f1:	mov    rax,QWORD PTR [rbp-0x20]
  4274f5:	jmp    427610 <flatcc_json_parser_double@@Base+0x14d>
  4274fa:	mov    rax,QWORD PTR [rbp-0x20]
  4274fe:	mov    QWORD PTR [rbp-0x10],rax
  427502:	mov    rax,QWORD PTR [rbp-0x20]
  427506:	movzx  eax,BYTE PTR [rax]
  427509:	cmp    al,0x2d
  42750b:	jne    427512 <flatcc_json_parser_double@@Base+0x4f>
  42750d:	add    QWORD PTR [rbp-0x10],0x1
  427512:	mov    rdx,QWORD PTR [rbp-0x28]
  427516:	mov    rax,QWORD PTR [rbp-0x10]
  42751a:	sub    rdx,rax
  42751d:	mov    rax,rdx
  427520:	cmp    rax,0x1
  427524:	jle    427569 <flatcc_json_parser_double@@Base+0xa6>
  427526:	mov    rax,QWORD PTR [rbp-0x10]
  42752a:	movzx  eax,BYTE PTR [rax]
  42752d:	cmp    al,0x2e
  42752f:	je     42754b <flatcc_json_parser_double@@Base+0x88>
  427531:	mov    rax,QWORD PTR [rbp-0x10]
  427535:	movzx  eax,BYTE PTR [rax]
  427538:	cmp    al,0x30
  42753a:	jne    427569 <flatcc_json_parser_double@@Base+0xa6>
  42753c:	mov    rax,QWORD PTR [rbp-0x10]
  427540:	add    rax,0x1
  427544:	movzx  eax,BYTE PTR [rax]
  427547:	cmp    al,0x30
  427549:	jne    427569 <flatcc_json_parser_double@@Base+0xa6>
  42754b:	mov    rdx,QWORD PTR [rbp-0x28]
  42754f:	mov    rsi,QWORD PTR [rbp-0x20]
  427553:	mov    rax,QWORD PTR [rbp-0x18]
  427557:	mov    ecx,0x6
  42755c:	mov    rdi,rax
  42755f:	call   42665a <flatcc_json_parser_set_error@@Base>
  427564:	jmp    427610 <flatcc_json_parser_double@@Base+0x14d>
  427569:	mov    rdx,QWORD PTR [rbp-0x28]
  42756d:	mov    rax,QWORD PTR [rbp-0x20]
  427571:	sub    rdx,rax
  427574:	mov    rax,rdx
  427577:	mov    ecx,eax
  427579:	mov    rdx,QWORD PTR [rbp-0x30]
  42757d:	mov    rax,QWORD PTR [rbp-0x20]
  427581:	mov    esi,ecx
  427583:	mov    rdi,rax
  427586:	call   425b20 <grisu3_diy_fp_encode_double@@Base+0xf72>
  42758b:	mov    QWORD PTR [rbp-0x8],rax
  42758f:	cmp    QWORD PTR [rbp-0x8],0x0
  427594:	je     4275a0 <flatcc_json_parser_double@@Base+0xdd>
  427596:	mov    rax,QWORD PTR [rbp-0x8]
  42759a:	cmp    rax,QWORD PTR [rbp-0x20]
  42759e:	jne    42760c <flatcc_json_parser_double@@Base+0x149>
  4275a0:	mov    rax,QWORD PTR [rbp-0x30]
  4275a4:	vmovsd xmm1,QWORD PTR [rax]
  4275a8:	vmovsd xmm0,QWORD PTR [rip+0x15080]        # 43c630 <flatcc_builder_padding_base@@Base+0x26b0>
  4275b0:	vandpd xmm0,xmm0,xmm1
  4275b4:	vucomisd xmm0,QWORD PTR [rip+0x15084]        # 43c640 <flatcc_builder_padding_base@@Base+0x26c0>
  4275bc:	setbe  al
  4275bf:	xor    eax,0x1
  4275c2:	test   al,al
  4275c4:	je     4275cd <flatcc_json_parser_double@@Base+0x10a>
  4275c6:	mov    eax,0x1
  4275cb:	jmp    4275d2 <flatcc_json_parser_double@@Base+0x10f>
  4275cd:	mov    eax,0x0
  4275d2:	test   al,al
  4275d4:	je     4275f1 <flatcc_json_parser_double@@Base+0x12e>
  4275d6:	mov    rdx,QWORD PTR [rbp-0x28]
  4275da:	mov    rsi,QWORD PTR [rbp-0x20]
  4275de:	mov    rax,QWORD PTR [rbp-0x18]
  4275e2:	mov    ecx,0x7
  4275e7:	mov    rdi,rax
  4275ea:	call   42665a <flatcc_json_parser_set_error@@Base>
  4275ef:	jmp    427610 <flatcc_json_parser_double@@Base+0x14d>
  4275f1:	mov    rdx,QWORD PTR [rbp-0x28]
  4275f5:	mov    rsi,QWORD PTR [rbp-0x20]
  4275f9:	mov    rax,QWORD PTR [rbp-0x18]
  4275fd:	mov    ecx,0x6
  427602:	mov    rdi,rax
  427605:	call   42665a <flatcc_json_parser_set_error@@Base>
  42760a:	jmp    427610 <flatcc_json_parser_double@@Base+0x14d>
  42760c:	mov    rax,QWORD PTR [rbp-0x8]
  427610:	leave  
  427611:	ret    

0000000000427612 <flatcc_json_parser_float@@Base>:
  427612:	push   rbp
  427613:	mov    rbp,rsp
  427616:	sub    rsp,0x30
  42761a:	mov    QWORD PTR [rbp-0x18],rdi
  42761e:	mov    QWORD PTR [rbp-0x20],rsi
  427622:	mov    QWORD PTR [rbp-0x28],rdx
  427626:	mov    QWORD PTR [rbp-0x30],rcx
  42762a:	mov    rax,QWORD PTR [rbp-0x30]
  42762e:	vxorps xmm0,xmm0,xmm0
  427632:	vmovss DWORD PTR [rax],xmm0
  427636:	mov    rax,QWORD PTR [rbp-0x20]
  42763a:	cmp    rax,QWORD PTR [rbp-0x28]
  42763e:	jne    427649 <flatcc_json_parser_float@@Base+0x37>
  427640:	mov    rax,QWORD PTR [rbp-0x20]
  427644:	jmp    42775f <flatcc_json_parser_float@@Base+0x14d>
  427649:	mov    rax,QWORD PTR [rbp-0x20]
  42764d:	mov    QWORD PTR [rbp-0x10],rax
  427651:	mov    rax,QWORD PTR [rbp-0x20]
  427655:	movzx  eax,BYTE PTR [rax]
  427658:	cmp    al,0x2d
  42765a:	jne    427661 <flatcc_json_parser_float@@Base+0x4f>
  42765c:	add    QWORD PTR [rbp-0x10],0x1
  427661:	mov    rdx,QWORD PTR [rbp-0x28]
  427665:	mov    rax,QWORD PTR [rbp-0x10]
  427669:	sub    rdx,rax
  42766c:	mov    rax,rdx
  42766f:	cmp    rax,0x1
  427673:	jle    4276b8 <flatcc_json_parser_float@@Base+0xa6>
  427675:	mov    rax,QWORD PTR [rbp-0x10]
  427679:	movzx  eax,BYTE PTR [rax]
  42767c:	cmp    al,0x2e
  42767e:	je     42769a <flatcc_json_parser_float@@Base+0x88>
  427680:	mov    rax,QWORD PTR [rbp-0x10]
  427684:	movzx  eax,BYTE PTR [rax]
  427687:	cmp    al,0x30
  427689:	jne    4276b8 <flatcc_json_parser_float@@Base+0xa6>
  42768b:	mov    rax,QWORD PTR [rbp-0x10]
  42768f:	add    rax,0x1
  427693:	movzx  eax,BYTE PTR [rax]
  427696:	cmp    al,0x30
  427698:	jne    4276b8 <flatcc_json_parser_float@@Base+0xa6>
  42769a:	mov    rdx,QWORD PTR [rbp-0x28]
  42769e:	mov    rsi,QWORD PTR [rbp-0x20]
  4276a2:	mov    rax,QWORD PTR [rbp-0x18]
  4276a6:	mov    ecx,0x6
  4276ab:	mov    rdi,rax
  4276ae:	call   42665a <flatcc_json_parser_set_error@@Base>
  4276b3:	jmp    42775f <flatcc_json_parser_float@@Base+0x14d>
  4276b8:	mov    rdx,QWORD PTR [rbp-0x28]
  4276bc:	mov    rax,QWORD PTR [rbp-0x20]
  4276c0:	sub    rdx,rax
  4276c3:	mov    rax,rdx
  4276c6:	mov    ecx,eax
  4276c8:	mov    rdx,QWORD PTR [rbp-0x30]
  4276cc:	mov    rax,QWORD PTR [rbp-0x20]
  4276d0:	mov    esi,ecx
  4276d2:	mov    rdi,rax
  4276d5:	call   425b4a <grisu3_diy_fp_encode_double@@Base+0xf9c>
  4276da:	mov    QWORD PTR [rbp-0x8],rax
  4276de:	cmp    QWORD PTR [rbp-0x8],0x0
  4276e3:	je     4276ef <flatcc_json_parser_float@@Base+0xdd>
  4276e5:	mov    rax,QWORD PTR [rbp-0x8]
  4276e9:	cmp    rax,QWORD PTR [rbp-0x20]
  4276ed:	jne    42775b <flatcc_json_parser_float@@Base+0x149>
  4276ef:	mov    rax,QWORD PTR [rbp-0x30]
  4276f3:	vmovss xmm1,DWORD PTR [rax]
  4276f7:	vmovss xmm0,DWORD PTR [rip+0x14f11]        # 43c610 <flatcc_builder_padding_base@@Base+0x2690>
  4276ff:	vandps xmm0,xmm0,xmm1
  427703:	vucomiss xmm0,DWORD PTR [rip+0x14f15]        # 43c620 <flatcc_builder_padding_base@@Base+0x26a0>
  42770b:	setbe  al
  42770e:	xor    eax,0x1
  427711:	test   al,al
  427713:	je     42771c <flatcc_json_parser_float@@Base+0x10a>
  427715:	mov    eax,0x1
  42771a:	jmp    427721 <flatcc_json_parser_float@@Base+0x10f>
  42771c:	mov    eax,0x0
  427721:	test   al,al
  427723:	je     427740 <flatcc_json_parser_float@@Base+0x12e>
  427725:	mov    rdx,QWORD PTR [rbp-0x28]
  427729:	mov    rsi,QWORD PTR [rbp-0x20]
  42772d:	mov    rax,QWORD PTR [rbp-0x18]
  427731:	mov    ecx,0x7
  427736:	mov    rdi,rax
  427739:	call   42665a <flatcc_json_parser_set_error@@Base>
  42773e:	jmp    42775f <flatcc_json_parser_float@@Base+0x14d>
  427740:	mov    rdx,QWORD PTR [rbp-0x28]
  427744:	mov    rsi,QWORD PTR [rbp-0x20]
  427748:	mov    rax,QWORD PTR [rbp-0x18]
  42774c:	mov    ecx,0x6
  427751:	mov    rdi,rax
  427754:	call   42665a <flatcc_json_parser_set_error@@Base>
  427759:	jmp    42775f <flatcc_json_parser_float@@Base+0x14d>
  42775b:	mov    rax,QWORD PTR [rbp-0x8]
  42775f:	leave  
  427760:	ret    

0000000000427761 <flatcc_json_parser_generic_json@@Base>:
  427761:	push   rbp
  427762:	mov    rbp,rsp
  427765:	sub    rsp,0x260
  42776c:	mov    QWORD PTR [rbp-0x248],rdi
  427773:	mov    QWORD PTR [rbp-0x250],rsi
  42777a:	mov    QWORD PTR [rbp-0x258],rdx
  427781:	mov    rax,QWORD PTR fs:0x28
  42778a:	mov    QWORD PTR [rbp-0x8],rax
  42778e:	xor    eax,eax
  427790:	mov    DWORD PTR [rbp-0x234],0x0
  42779a:	lea    rax,[rbp-0x210]
  4277a1:	mov    QWORD PTR [rbp-0x230],rax
  4277a8:	mov    rax,QWORD PTR [rbp-0x230]
  4277af:	add    rax,0x200
  4277b5:	mov    QWORD PTR [rbp-0x228],rax
  4277bc:	mov    rax,QWORD PTR [rbp-0x250]
  4277c3:	cmp    rax,QWORD PTR [rbp-0x258]
  4277ca:	jne    4277d8 <flatcc_json_parser_generic_json@@Base+0x77>
  4277cc:	mov    rax,QWORD PTR [rbp-0x250]
  4277d3:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  4277d8:	lea    rax,[rbp-0x210]
  4277df:	cmp    QWORD PTR [rbp-0x230],rax
  4277e6:	je     42790e <flatcc_json_parser_generic_json@@Base+0x1ad>
  4277ec:	mov    rax,QWORD PTR [rbp-0x230]
  4277f3:	sub    rax,0x1
  4277f7:	movzx  eax,BYTE PTR [rax]
  4277fa:	cmp    al,0x7d
  4277fc:	jne    42790e <flatcc_json_parser_generic_json@@Base+0x1ad>
  427802:	mov    rdx,QWORD PTR [rbp-0x258]
  427809:	mov    rcx,QWORD PTR [rbp-0x250]
  427810:	mov    rax,QWORD PTR [rbp-0x248]
  427817:	mov    rsi,rcx
  42781a:	mov    rdi,rax
  42781d:	call   422abc <flatcc_verify_union_vector_field@@Base+0x3b3>
  427822:	mov    QWORD PTR [rbp-0x250],rax
  427829:	mov    rdx,QWORD PTR [rbp-0x258]
  427830:	mov    rcx,QWORD PTR [rbp-0x250]
  427837:	mov    rax,QWORD PTR [rbp-0x248]
  42783e:	mov    rsi,rcx
  427841:	mov    rdi,rax
  427844:	call   422b34 <flatcc_verify_union_vector_field@@Base+0x42b>
  427849:	mov    QWORD PTR [rbp-0x250],rax
  427850:	mov    rdx,QWORD PTR [rbp-0x258]
  427857:	mov    rcx,QWORD PTR [rbp-0x250]
  42785e:	mov    rax,QWORD PTR [rbp-0x248]
  427865:	mov    rsi,rcx
  427868:	mov    rdi,rax
  42786b:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  427870:	mov    QWORD PTR [rbp-0x250],rax
  427877:	mov    rax,QWORD PTR [rbp-0x250]
  42787e:	cmp    rax,QWORD PTR [rbp-0x258]
  427885:	jne    4278ae <flatcc_json_parser_generic_json@@Base+0x14d>
  427887:	mov    rdx,QWORD PTR [rbp-0x258]
  42788e:	mov    rsi,QWORD PTR [rbp-0x250]
  427895:	mov    rax,QWORD PTR [rbp-0x248]
  42789c:	mov    ecx,0xa
  4278a1:	mov    rdi,rax
  4278a4:	call   42665a <flatcc_json_parser_set_error@@Base>
  4278a9:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  4278ae:	mov    rax,QWORD PTR [rbp-0x250]
  4278b5:	movzx  eax,BYTE PTR [rax]
  4278b8:	cmp    al,0x3a
  4278ba:	je     4278e3 <flatcc_json_parser_generic_json@@Base+0x182>
  4278bc:	mov    rdx,QWORD PTR [rbp-0x258]
  4278c3:	mov    rsi,QWORD PTR [rbp-0x250]
  4278ca:	mov    rax,QWORD PTR [rbp-0x248]
  4278d1:	mov    ecx,0x4
  4278d6:	mov    rdi,rax
  4278d9:	call   42665a <flatcc_json_parser_set_error@@Base>
  4278de:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  4278e3:	mov    rax,QWORD PTR [rbp-0x250]
  4278ea:	lea    rcx,[rax+0x1]
  4278ee:	mov    rdx,QWORD PTR [rbp-0x258]
  4278f5:	mov    rax,QWORD PTR [rbp-0x248]
  4278fc:	mov    rsi,rcx
  4278ff:	mov    rdi,rax
  427902:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  427907:	mov    QWORD PTR [rbp-0x250],rax
  42790e:	mov    rax,QWORD PTR [rbp-0x250]
  427915:	movzx  eax,BYTE PTR [rax]
  427918:	movsx  eax,al
  42791b:	cmp    eax,0x39
  42791e:	jg     42793c <flatcc_json_parser_generic_json@@Base+0x1db>
  427920:	cmp    eax,0x30
  427923:	jge    427a3d <flatcc_json_parser_generic_json@@Base+0x2dc>
  427929:	cmp    eax,0x22
  42792c:	je     427953 <flatcc_json_parser_generic_json@@Base+0x1f2>
  42792e:	cmp    eax,0x2d
  427931:	je     427a3d <flatcc_json_parser_generic_json@@Base+0x2dc>
  427937:	jmp    427ba9 <flatcc_json_parser_generic_json@@Base+0x448>
  42793c:	cmp    eax,0x5b
  42793f:	je     427a69 <flatcc_json_parser_generic_json@@Base+0x308>
  427945:	cmp    eax,0x7b
  427948:	je     427b0b <flatcc_json_parser_generic_json@@Base+0x3aa>
  42794e:	jmp    427ba9 <flatcc_json_parser_generic_json@@Base+0x448>
  427953:	mov    rdx,QWORD PTR [rbp-0x258]
  42795a:	mov    rcx,QWORD PTR [rbp-0x250]
  427961:	mov    rax,QWORD PTR [rbp-0x248]
  427968:	mov    rsi,rcx
  42796b:	mov    rdi,rax
  42796e:	call   422a1e <flatcc_verify_union_vector_field@@Base+0x315>
  427973:	mov    QWORD PTR [rbp-0x250],rax
  42797a:	jmp    4279ec <flatcc_json_parser_generic_json@@Base+0x28b>
  42797c:	mov    rdx,QWORD PTR [rbp-0x258]
  427983:	mov    rcx,QWORD PTR [rbp-0x250]
  42798a:	mov    rax,QWORD PTR [rbp-0x248]
  427991:	mov    rsi,rcx
  427994:	mov    rdi,rax
  427997:	call   4266b2 <flatcc_json_parser_string_part@@Base>
  42799c:	mov    QWORD PTR [rbp-0x250],rax
  4279a3:	mov    rax,QWORD PTR [rbp-0x250]
  4279aa:	cmp    rax,QWORD PTR [rbp-0x258]
  4279b1:	je     4279c1 <flatcc_json_parser_generic_json@@Base+0x260>
  4279b3:	mov    rax,QWORD PTR [rbp-0x250]
  4279ba:	movzx  eax,BYTE PTR [rax]
  4279bd:	cmp    al,0x22
  4279bf:	je     427a10 <flatcc_json_parser_generic_json@@Base+0x2af>
  4279c1:	lea    rcx,[rbp-0x214]
  4279c8:	mov    rdx,QWORD PTR [rbp-0x258]
  4279cf:	mov    rsi,QWORD PTR [rbp-0x250]
  4279d6:	mov    rax,QWORD PTR [rbp-0x248]
  4279dd:	mov    rdi,rax
  4279e0:	call   4268b8 <flatcc_json_parser_string_escape@@Base>
  4279e5:	mov    QWORD PTR [rbp-0x250],rax
  4279ec:	mov    rax,QWORD PTR [rbp-0x250]
  4279f3:	cmp    rax,QWORD PTR [rbp-0x258]
  4279fa:	je     427a11 <flatcc_json_parser_generic_json@@Base+0x2b0>
  4279fc:	mov    rax,QWORD PTR [rbp-0x250]
  427a03:	movzx  eax,BYTE PTR [rax]
  427a06:	cmp    al,0x22
  427a08:	jne    42797c <flatcc_json_parser_generic_json@@Base+0x21b>
  427a0e:	jmp    427a11 <flatcc_json_parser_generic_json@@Base+0x2b0>
  427a10:	nop
  427a11:	mov    rdx,QWORD PTR [rbp-0x258]
  427a18:	mov    rcx,QWORD PTR [rbp-0x250]
  427a1f:	mov    rax,QWORD PTR [rbp-0x248]
  427a26:	mov    rsi,rcx
  427a29:	mov    rdi,rax
  427a2c:	call   422a6d <flatcc_verify_union_vector_field@@Base+0x364>
  427a31:	mov    QWORD PTR [rbp-0x250],rax
  427a38:	jmp    427c22 <flatcc_json_parser_generic_json@@Base+0x4c1>
  427a3d:	mov    rdx,QWORD PTR [rbp-0x258]
  427a44:	mov    rcx,QWORD PTR [rbp-0x250]
  427a4b:	mov    rax,QWORD PTR [rbp-0x248]
  427a52:	mov    rsi,rcx
  427a55:	mov    rdi,rax
  427a58:	call   427233 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
  427a5d:	mov    QWORD PTR [rbp-0x250],rax
  427a64:	jmp    427c22 <flatcc_json_parser_generic_json@@Base+0x4c1>
  427a69:	mov    rax,QWORD PTR [rbp-0x230]
  427a70:	cmp    rax,QWORD PTR [rbp-0x228]
  427a77:	jne    427aa0 <flatcc_json_parser_generic_json@@Base+0x33f>
  427a79:	mov    rdx,QWORD PTR [rbp-0x258]
  427a80:	mov    rsi,QWORD PTR [rbp-0x250]
  427a87:	mov    rax,QWORD PTR [rbp-0x248]
  427a8e:	mov    ecx,0x2
  427a93:	mov    rdi,rax
  427a96:	call   42665a <flatcc_json_parser_set_error@@Base>
  427a9b:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  427aa0:	mov    rax,QWORD PTR [rbp-0x230]
  427aa7:	lea    rdx,[rax+0x1]
  427aab:	mov    QWORD PTR [rbp-0x230],rdx
  427ab2:	mov    BYTE PTR [rax],0x5d
  427ab5:	mov    rax,QWORD PTR [rbp-0x250]
  427abc:	lea    rcx,[rax+0x1]
  427ac0:	mov    rdx,QWORD PTR [rbp-0x258]
  427ac7:	mov    rax,QWORD PTR [rbp-0x248]
  427ace:	mov    rsi,rcx
  427ad1:	mov    rdi,rax
  427ad4:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  427ad9:	mov    QWORD PTR [rbp-0x250],rax
  427ae0:	mov    rax,QWORD PTR [rbp-0x250]
  427ae7:	cmp    rax,QWORD PTR [rbp-0x258]
  427aee:	je     4277bc <flatcc_json_parser_generic_json@@Base+0x5b>
  427af4:	mov    rax,QWORD PTR [rbp-0x250]
  427afb:	movzx  eax,BYTE PTR [rax]
  427afe:	cmp    al,0x5d
  427b00:	je     427c15 <flatcc_json_parser_generic_json@@Base+0x4b4>
  427b06:	jmp    4277bc <flatcc_json_parser_generic_json@@Base+0x5b>
  427b0b:	mov    rax,QWORD PTR [rbp-0x230]
  427b12:	cmp    rax,QWORD PTR [rbp-0x228]
  427b19:	jne    427b42 <flatcc_json_parser_generic_json@@Base+0x3e1>
  427b1b:	mov    rdx,QWORD PTR [rbp-0x258]
  427b22:	mov    rsi,QWORD PTR [rbp-0x250]
  427b29:	mov    rax,QWORD PTR [rbp-0x248]
  427b30:	mov    ecx,0x2
  427b35:	mov    rdi,rax
  427b38:	call   42665a <flatcc_json_parser_set_error@@Base>
  427b3d:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  427b42:	mov    rax,QWORD PTR [rbp-0x230]
  427b49:	lea    rdx,[rax+0x1]
  427b4d:	mov    QWORD PTR [rbp-0x230],rdx
  427b54:	mov    BYTE PTR [rax],0x7d
  427b57:	mov    rax,QWORD PTR [rbp-0x250]
  427b5e:	lea    rcx,[rax+0x1]
  427b62:	mov    rdx,QWORD PTR [rbp-0x258]
  427b69:	mov    rax,QWORD PTR [rbp-0x248]
  427b70:	mov    rsi,rcx
  427b73:	mov    rdi,rax
  427b76:	call   4229a8 <flatcc_verify_union_vector_field@@Base+0x29f>
  427b7b:	mov    QWORD PTR [rbp-0x250],rax
  427b82:	mov    rax,QWORD PTR [rbp-0x250]
  427b89:	cmp    rax,QWORD PTR [rbp-0x258]
  427b90:	je     4277bc <flatcc_json_parser_generic_json@@Base+0x5b>
  427b96:	mov    rax,QWORD PTR [rbp-0x250]
  427b9d:	movzx  eax,BYTE PTR [rax]
  427ba0:	cmp    al,0x7d
  427ba2:	je     427c1b <flatcc_json_parser_generic_json@@Base+0x4ba>
  427ba4:	jmp    4277bc <flatcc_json_parser_generic_json@@Base+0x5b>
  427ba9:	mov    rax,QWORD PTR [rbp-0x250]
  427bb0:	mov    QWORD PTR [rbp-0x220],rax
  427bb7:	mov    rdx,QWORD PTR [rbp-0x258]
  427bbe:	mov    rcx,QWORD PTR [rbp-0x220]
  427bc5:	mov    rax,QWORD PTR [rbp-0x248]
  427bcc:	mov    rsi,rcx
  427bcf:	mov    rdi,rax
  427bd2:	call   426e95 <flatcc_json_parser_skip_constant@@Base>
  427bd7:	mov    QWORD PTR [rbp-0x250],rax
  427bde:	mov    rax,QWORD PTR [rbp-0x220]
  427be5:	cmp    rax,QWORD PTR [rbp-0x250]
  427bec:	jne    427c21 <flatcc_json_parser_generic_json@@Base+0x4c0>
  427bee:	mov    rdx,QWORD PTR [rbp-0x258]
  427bf5:	mov    rsi,QWORD PTR [rbp-0x250]
  427bfc:	mov    rax,QWORD PTR [rbp-0x248]
  427c03:	mov    ecx,0x5
  427c08:	mov    rdi,rax
  427c0b:	call   42665a <flatcc_json_parser_set_error@@Base>
  427c10:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  427c15:	nop
  427c16:	jmp    427cac <flatcc_json_parser_generic_json@@Base+0x54b>
  427c1b:	nop
  427c1c:	jmp    427cac <flatcc_json_parser_generic_json@@Base+0x54b>
  427c21:	nop
  427c22:	jmp    427cac <flatcc_json_parser_generic_json@@Base+0x54b>
  427c27:	sub    QWORD PTR [rbp-0x230],0x1
  427c2f:	mov    rax,QWORD PTR [rbp-0x230]
  427c36:	movzx  eax,BYTE PTR [rax]
  427c39:	cmp    al,0x5d
  427c3b:	jne    427c6a <flatcc_json_parser_generic_json@@Base+0x509>
  427c3d:	lea    rcx,[rbp-0x234]
  427c44:	mov    rdx,QWORD PTR [rbp-0x258]
  427c4b:	mov    rsi,QWORD PTR [rbp-0x250]
  427c52:	mov    rax,QWORD PTR [rbp-0x248]
  427c59:	mov    rdi,rax
  427c5c:	call   422eb8 <flatcc_verify_union_vector_field@@Base+0x7af>
  427c61:	mov    QWORD PTR [rbp-0x250],rax
  427c68:	jmp    427c95 <flatcc_json_parser_generic_json@@Base+0x534>
  427c6a:	lea    rcx,[rbp-0x234]
  427c71:	mov    rdx,QWORD PTR [rbp-0x258]
  427c78:	mov    rsi,QWORD PTR [rbp-0x250]
  427c7f:	mov    rax,QWORD PTR [rbp-0x248]
  427c86:	mov    rdi,rax
  427c89:	call   422cbd <flatcc_verify_union_vector_field@@Base+0x5b4>
  427c8e:	mov    QWORD PTR [rbp-0x250],rax
  427c95:	mov    eax,DWORD PTR [rbp-0x234]
  427c9b:	test   eax,eax
  427c9d:	je     427cac <flatcc_json_parser_generic_json@@Base+0x54b>
  427c9f:	add    QWORD PTR [rbp-0x230],0x1
  427ca7:	jmp    4277bc <flatcc_json_parser_generic_json@@Base+0x5b>
  427cac:	mov    rax,QWORD PTR [rbp-0x250]
  427cb3:	cmp    rax,QWORD PTR [rbp-0x258]
  427cba:	je     427cd0 <flatcc_json_parser_generic_json@@Base+0x56f>
  427cbc:	lea    rax,[rbp-0x210]
  427cc3:	cmp    QWORD PTR [rbp-0x230],rax
  427cca:	jne    427c27 <flatcc_json_parser_generic_json@@Base+0x4c6>
  427cd0:	mov    rax,QWORD PTR [rbp-0x250]
  427cd7:	cmp    rax,QWORD PTR [rbp-0x258]
  427cde:	jne    427d2d <flatcc_json_parser_generic_json@@Base+0x5cc>
  427ce0:	lea    rax,[rbp-0x210]
  427ce7:	cmp    QWORD PTR [rbp-0x230],rax
  427cee:	je     427d2d <flatcc_json_parser_generic_json@@Base+0x5cc>
  427cf0:	mov    rax,QWORD PTR [rbp-0x230]
  427cf7:	sub    rax,0x1
  427cfb:	movzx  eax,BYTE PTR [rax]
  427cfe:	cmp    al,0x5d
  427d00:	jne    427d09 <flatcc_json_parser_generic_json@@Base+0x5a8>
  427d02:	mov    ecx,0x9
  427d07:	jmp    427d0e <flatcc_json_parser_generic_json@@Base+0x5ad>
  427d09:	mov    ecx,0xa
  427d0e:	mov    rdx,QWORD PTR [rbp-0x258]
  427d15:	mov    rsi,QWORD PTR [rbp-0x250]
  427d1c:	mov    rax,QWORD PTR [rbp-0x248]
  427d23:	mov    rdi,rax
  427d26:	call   42665a <flatcc_json_parser_set_error@@Base>
  427d2b:	jmp    427d34 <flatcc_json_parser_generic_json@@Base+0x5d3>
  427d2d:	mov    rax,QWORD PTR [rbp-0x250]
  427d34:	mov    rdi,QWORD PTR [rbp-0x8]
  427d38:	xor    rdi,QWORD PTR fs:0x28
  427d41:	je     427d48 <flatcc_json_parser_generic_json@@Base+0x5e7>
  427d43:	call   405070 <__stack_chk_fail@plt>
  427d48:	leave  
  427d49:	ret    

0000000000427d4a <flatcc_json_parser_integer@@Base>:
  427d4a:	push   rbp
  427d4b:	mov    rbp,rsp
  427d4e:	sub    rsp,0x50
  427d52:	mov    QWORD PTR [rbp-0x28],rdi
  427d56:	mov    QWORD PTR [rbp-0x30],rsi
  427d5a:	mov    QWORD PTR [rbp-0x38],rdx
  427d5e:	mov    QWORD PTR [rbp-0x40],rcx
  427d62:	mov    QWORD PTR [rbp-0x48],r8
  427d66:	mov    QWORD PTR [rbp-0x18],0x0
  427d6e:	mov    rax,QWORD PTR [rbp-0x30]
  427d72:	cmp    rax,QWORD PTR [rbp-0x38]
  427d76:	jne    427d81 <flatcc_json_parser_integer@@Base+0x37>
  427d78:	mov    rax,QWORD PTR [rbp-0x30]
  427d7c:	jmp    427ea2 <flatcc_json_parser_integer@@Base+0x158>
  427d81:	mov    rax,QWORD PTR [rbp-0x30]
  427d85:	mov    QWORD PTR [rbp-0x10],rax
  427d89:	mov    rax,QWORD PTR [rbp-0x30]
  427d8d:	movzx  eax,BYTE PTR [rax]
  427d90:	cmp    al,0x2d
  427d92:	sete   al
  427d95:	movzx  edx,al
  427d98:	mov    rax,QWORD PTR [rbp-0x40]
  427d9c:	mov    DWORD PTR [rax],edx
  427d9e:	mov    rax,QWORD PTR [rbp-0x40]
  427da2:	mov    eax,DWORD PTR [rax]
  427da4:	cdqe   
  427da6:	add    QWORD PTR [rbp-0x30],rax
  427daa:	jmp    427e19 <flatcc_json_parser_integer@@Base+0xcf>
  427dac:	mov    rax,QWORD PTR [rbp-0x18]
  427db0:	mov    QWORD PTR [rbp-0x8],rax
  427db4:	mov    rdx,QWORD PTR [rbp-0x18]
  427db8:	mov    rax,rdx
  427dbb:	shl    rax,0x2
  427dbf:	add    rax,rdx
  427dc2:	add    rax,rax
  427dc5:	mov    rdx,rax
  427dc8:	mov    rax,QWORD PTR [rbp-0x30]
  427dcc:	movzx  eax,BYTE PTR [rax]
  427dcf:	movsx  rax,al
  427dd3:	add    rax,rdx
  427dd6:	sub    rax,0x30
  427dda:	mov    QWORD PTR [rbp-0x18],rax
  427dde:	mov    rax,QWORD PTR [rbp-0x8]
  427de2:	cmp    rax,QWORD PTR [rbp-0x18]
  427de6:	jbe    427e14 <flatcc_json_parser_integer@@Base+0xca>
  427de8:	cmp    QWORD PTR [rbp-0x40],0x0
  427ded:	je     427df6 <flatcc_json_parser_integer@@Base+0xac>
  427def:	mov    ecx,0x8
  427df4:	jmp    427dfb <flatcc_json_parser_integer@@Base+0xb1>
  427df6:	mov    ecx,0x7
  427dfb:	mov    rdx,QWORD PTR [rbp-0x38]
  427dff:	mov    rsi,QWORD PTR [rbp-0x30]
  427e03:	mov    rax,QWORD PTR [rbp-0x28]
  427e07:	mov    rdi,rax
  427e0a:	call   42665a <flatcc_json_parser_set_error@@Base>
  427e0f:	jmp    427ea2 <flatcc_json_parser_integer@@Base+0x158>
  427e14:	add    QWORD PTR [rbp-0x30],0x1
  427e19:	mov    rax,QWORD PTR [rbp-0x30]
  427e1d:	cmp    rax,QWORD PTR [rbp-0x38]
  427e21:	je     427e3d <flatcc_json_parser_integer@@Base+0xf3>
  427e23:	mov    rax,QWORD PTR [rbp-0x30]
  427e27:	movzx  eax,BYTE PTR [rax]
  427e2a:	cmp    al,0x2f
  427e2c:	jle    427e3d <flatcc_json_parser_integer@@Base+0xf3>
  427e2e:	mov    rax,QWORD PTR [rbp-0x30]
  427e32:	movzx  eax,BYTE PTR [rax]
  427e35:	cmp    al,0x39
  427e37:	jle    427dac <flatcc_json_parser_integer@@Base+0x62>
  427e3d:	mov    rax,QWORD PTR [rbp-0x30]
  427e41:	cmp    rax,QWORD PTR [rbp-0x10]
  427e45:	jne    427e4d <flatcc_json_parser_integer@@Base+0x103>
  427e47:	mov    rax,QWORD PTR [rbp-0x30]
  427e4b:	jmp    427ea2 <flatcc_json_parser_integer@@Base+0x158>
  427e4d:	mov    rax,QWORD PTR [rbp-0x30]
  427e51:	cmp    rax,QWORD PTR [rbp-0x38]
  427e55:	je     427e93 <flatcc_json_parser_integer@@Base+0x149>
  427e57:	mov    rax,QWORD PTR [rbp-0x30]
  427e5b:	movzx  eax,BYTE PTR [rax]
  427e5e:	cmp    al,0x65
  427e60:	je     427e78 <flatcc_json_parser_integer@@Base+0x12e>
  427e62:	mov    rax,QWORD PTR [rbp-0x30]
  427e66:	movzx  eax,BYTE PTR [rax]
  427e69:	cmp    al,0x45
  427e6b:	je     427e78 <flatcc_json_parser_integer@@Base+0x12e>
  427e6d:	mov    rax,QWORD PTR [rbp-0x30]
  427e71:	movzx  eax,BYTE PTR [rax]
  427e74:	cmp    al,0x2e
  427e76:	jne    427e93 <flatcc_json_parser_integer@@Base+0x149>
  427e78:	mov    rdx,QWORD PTR [rbp-0x38]
  427e7c:	mov    rsi,QWORD PTR [rbp-0x30]
  427e80:	mov    rax,QWORD PTR [rbp-0x28]
  427e84:	mov    ecx,0xc
  427e89:	mov    rdi,rax
  427e8c:	call   42665a <flatcc_json_parser_set_error@@Base>
  427e91:	jmp    427ea2 <flatcc_json_parser_integer@@Base+0x158>
  427e93:	mov    rax,QWORD PTR [rbp-0x48]
  427e97:	mov    rdx,QWORD PTR [rbp-0x18]
  427e9b:	mov    QWORD PTR [rax],rdx
  427e9e:	mov    rax,QWORD PTR [rbp-0x30]
  427ea2:	leave  
  427ea3:	ret    

0000000000427ea4 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  427ea4:	push   rbp
  427ea5:	mov    rbp,rsp
  427ea8:	sub    rsp,0x70
  427eac:	mov    QWORD PTR [rbp-0x48],rdi
  427eb0:	mov    QWORD PTR [rbp-0x50],rsi
  427eb4:	mov    QWORD PTR [rbp-0x58],rdx
  427eb8:	mov    QWORD PTR [rbp-0x60],rcx
  427ebc:	mov    DWORD PTR [rbp-0x64],r8d
  427ec0:	mov    rax,QWORD PTR fs:0x28
  427ec9:	mov    QWORD PTR [rbp-0x8],rax
  427ecd:	xor    eax,eax
  427ecf:	cmp    DWORD PTR [rbp-0x64],0x0
  427ed3:	setne  al
  427ed6:	movzx  eax,al
  427ed9:	mov    DWORD PTR [rbp-0x38],eax
  427edc:	mov    rdx,QWORD PTR [rbp-0x58]
  427ee0:	mov    rcx,QWORD PTR [rbp-0x50]
  427ee4:	mov    rax,QWORD PTR [rbp-0x48]
  427ee8:	mov    rsi,rcx
  427eeb:	mov    rdi,rax
  427eee:	call   422a1e <flatcc_verify_union_vector_field@@Base+0x315>
  427ef3:	mov    QWORD PTR [rbp-0x50],rax
  427ef7:	mov    rax,QWORD PTR [rbp-0x50]
  427efb:	mov    QWORD PTR [rbp-0x20],rax
  427eff:	mov    rdx,QWORD PTR [rbp-0x58]
  427f03:	mov    rcx,QWORD PTR [rbp-0x20]
  427f07:	mov    rax,QWORD PTR [rbp-0x48]
  427f0b:	mov    rsi,rcx
  427f0e:	mov    rdi,rax
  427f11:	call   4266b2 <flatcc_json_parser_string_part@@Base>
  427f16:	mov    QWORD PTR [rbp-0x50],rax
  427f1a:	mov    rax,QWORD PTR [rbp-0x50]
  427f1e:	cmp    rax,QWORD PTR [rbp-0x58]
  427f22:	je     4280b3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  427f28:	mov    rax,QWORD PTR [rbp-0x50]
  427f2c:	movzx  eax,BYTE PTR [rax]
  427f2f:	cmp    al,0x22
  427f31:	jne    4280b3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  427f37:	mov    rdx,QWORD PTR [rbp-0x50]
  427f3b:	mov    rax,QWORD PTR [rbp-0x20]
  427f3f:	sub    rdx,rax
  427f42:	mov    rax,rdx
  427f45:	mov    rdi,rax
  427f48:	call   425d24 <grisu3_diy_fp_encode_double@@Base+0x1176>
  427f4d:	mov    QWORD PTR [rbp-0x18],rax
  427f51:	mov    rax,QWORD PTR [rbp-0x48]
  427f55:	mov    rax,QWORD PTR [rax]
  427f58:	mov    ecx,0xffffffff
  427f5d:	mov    edx,0x1
  427f62:	mov    esi,0x1
  427f67:	mov    rdi,rax
  427f6a:	call   41d59d <flatcc_builder_start_vector@@Base>
  427f6f:	test   eax,eax
  427f71:	jne    428084 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e0>
  427f77:	mov    rax,QWORD PTR [rbp-0x48]
  427f7b:	mov    rax,QWORD PTR [rax]
  427f7e:	mov    rdx,QWORD PTR [rbp-0x18]
  427f82:	mov    rsi,rdx
  427f85:	mov    rdi,rax
  427f88:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  427f8d:	mov    QWORD PTR [rbp-0x10],rax
  427f91:	cmp    QWORD PTR [rbp-0x10],0x0
  427f96:	je     428087 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e3>
  427f9c:	mov    rdx,QWORD PTR [rbp-0x50]
  427fa0:	mov    rax,QWORD PTR [rbp-0x20]
  427fa4:	sub    rdx,rax
  427fa7:	mov    rax,rdx
  427faa:	mov    QWORD PTR [rbp-0x28],rax
  427fae:	mov    rax,QWORD PTR [rbp-0x18]
  427fb2:	mov    QWORD PTR [rbp-0x30],rax
  427fb6:	mov    edi,DWORD PTR [rbp-0x38]
  427fb9:	lea    rcx,[rbp-0x28]
  427fbd:	lea    rdx,[rbp-0x30]
  427fc1:	mov    rsi,QWORD PTR [rbp-0x20]
  427fc5:	mov    rax,QWORD PTR [rbp-0x10]
  427fc9:	mov    r8d,edi
  427fcc:	mov    rdi,rax
  427fcf:	call   42607d <grisu3_diy_fp_encode_double@@Base+0x14cf>
  427fd4:	mov    DWORD PTR [rbp-0x34],eax
  427fd7:	cmp    DWORD PTR [rbp-0x34],0x0
  427fdb:	je     427ff1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  427fdd:	mov    rdx,QWORD PTR [rbp-0x28]
  427fe1:	mov    rax,QWORD PTR [rbp-0x20]
  427fe5:	add    rax,rdx
  427fe8:	mov    QWORD PTR [rbp-0x50],rax
  427fec:	jmp    4280b3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  427ff1:	mov    rdx,QWORD PTR [rbp-0x50]
  427ff5:	mov    rax,QWORD PTR [rbp-0x20]
  427ff9:	sub    rdx,rax
  427ffc:	mov    rax,rdx
  427fff:	mov    rdx,rax
  428002:	mov    rax,QWORD PTR [rbp-0x28]
  428006:	cmp    rdx,rax
  428009:	je     42801f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17b>
  42800b:	mov    rdx,QWORD PTR [rbp-0x28]
  42800f:	mov    rax,QWORD PTR [rbp-0x20]
  428013:	add    rax,rdx
  428016:	mov    QWORD PTR [rbp-0x50],rax
  42801a:	jmp    4280b3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  42801f:	mov    rax,QWORD PTR [rbp-0x30]
  428023:	cmp    rax,QWORD PTR [rbp-0x18]
  428027:	jae    42804a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1a6>
  428029:	mov    rax,QWORD PTR [rbp-0x30]
  42802d:	mov    rdx,QWORD PTR [rbp-0x18]
  428031:	sub    rdx,rax
  428034:	mov    rax,QWORD PTR [rbp-0x48]
  428038:	mov    rax,QWORD PTR [rax]
  42803b:	mov    rsi,rdx
  42803e:	mov    rdi,rax
  428041:	call   41d339 <flatcc_builder_truncate_vector@@Base>
  428046:	test   eax,eax
  428048:	jne    42808a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e6>
  42804a:	mov    rax,QWORD PTR [rbp-0x48]
  42804e:	mov    rax,QWORD PTR [rax]
  428051:	mov    rdi,rax
  428054:	call   41e773 <flatcc_builder_end_vector@@Base>
  428059:	mov    edx,eax
  42805b:	mov    rax,QWORD PTR [rbp-0x60]
  42805f:	mov    DWORD PTR [rax],edx
  428061:	mov    rax,QWORD PTR [rbp-0x60]
  428065:	mov    eax,DWORD PTR [rax]
  428067:	test   eax,eax
  428069:	je     42808d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e9>
  42806b:	mov    rdx,QWORD PTR [rbp-0x58]
  42806f:	mov    rcx,QWORD PTR [rbp-0x50]
  428073:	mov    rax,QWORD PTR [rbp-0x48]
  428077:	mov    rsi,rcx
  42807a:	mov    rdi,rax
  42807d:	call   422a6d <flatcc_verify_union_vector_field@@Base+0x364>
  428082:	jmp    4280e3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x23f>
  428084:	nop
  428085:	jmp    42808e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  428087:	nop
  428088:	jmp    42808e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  42808a:	nop
  42808b:	jmp    42808e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  42808d:	nop
  42808e:	mov    rax,QWORD PTR [rbp-0x60]
  428092:	mov    DWORD PTR [rax],0x0
  428098:	mov    rdx,QWORD PTR [rbp-0x58]
  42809c:	mov    rsi,QWORD PTR [rbp-0x50]
  4280a0:	mov    rax,QWORD PTR [rbp-0x48]
  4280a4:	mov    ecx,0x21
  4280a9:	mov    rdi,rax
  4280ac:	call   42665a <flatcc_json_parser_set_error@@Base>
  4280b1:	jmp    4280e3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x23f>
  4280b3:	mov    rax,QWORD PTR [rbp-0x60]
  4280b7:	mov    DWORD PTR [rax],0x0
  4280bd:	cmp    DWORD PTR [rbp-0x64],0x0
  4280c1:	je     4280ca <flatcc_json_parser_build_uint8_vector_base64@@Base+0x226>
  4280c3:	mov    ecx,0x20
  4280c8:	jmp    4280cf <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22b>
  4280ca:	mov    ecx,0x1f
  4280cf:	mov    rdx,QWORD PTR [rbp-0x58]
  4280d3:	mov    rsi,QWORD PTR [rbp-0x50]
  4280d7:	mov    rax,QWORD PTR [rbp-0x48]
  4280db:	mov    rdi,rax
  4280de:	call   42665a <flatcc_json_parser_set_error@@Base>
  4280e3:	mov    rdi,QWORD PTR [rbp-0x8]
  4280e7:	xor    rdi,QWORD PTR fs:0x28
  4280f0:	je     4280f7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x253>
  4280f2:	call   405070 <__stack_chk_fail@plt>
  4280f7:	leave  
  4280f8:	ret    

00000000004280f9 <flatcc_json_parser_build_string@@Base>:
  4280f9:	push   rbp
  4280fa:	mov    rbp,rsp
  4280fd:	sub    rsp,0x40
  428101:	mov    QWORD PTR [rbp-0x28],rdi
  428105:	mov    QWORD PTR [rbp-0x30],rsi
  428109:	mov    QWORD PTR [rbp-0x38],rdx
  42810d:	mov    QWORD PTR [rbp-0x40],rcx
  428111:	mov    rax,QWORD PTR fs:0x28
  42811a:	mov    QWORD PTR [rbp-0x8],rax
  42811e:	xor    eax,eax
  428120:	mov    rdx,QWORD PTR [rbp-0x38]
  428124:	mov    rcx,QWORD PTR [rbp-0x30]
  428128:	mov    rax,QWORD PTR [rbp-0x28]
  42812c:	mov    rsi,rcx
  42812f:	mov    rdi,rax
  428132:	call   422a1e <flatcc_verify_union_vector_field@@Base+0x315>
  428137:	mov    QWORD PTR [rbp-0x30],rax
  42813b:	mov    rax,QWORD PTR [rbp-0x30]
  42813f:	mov    QWORD PTR [rbp-0x18],rax
  428143:	mov    rdx,QWORD PTR [rbp-0x38]
  428147:	mov    rcx,QWORD PTR [rbp-0x18]
  42814b:	mov    rax,QWORD PTR [rbp-0x28]
  42814f:	mov    rsi,rcx
  428152:	mov    rdi,rax
  428155:	call   4266b2 <flatcc_json_parser_string_part@@Base>
  42815a:	mov    QWORD PTR [rbp-0x30],rax
  42815e:	mov    rax,QWORD PTR [rbp-0x30]
  428162:	cmp    rax,QWORD PTR [rbp-0x38]
  428166:	je     4281a7 <flatcc_json_parser_build_string@@Base+0xae>
  428168:	mov    rax,QWORD PTR [rbp-0x30]
  42816c:	movzx  eax,BYTE PTR [rax]
  42816f:	cmp    al,0x22
  428171:	jne    4281a7 <flatcc_json_parser_build_string@@Base+0xae>
  428173:	mov    rdx,QWORD PTR [rbp-0x30]
  428177:	mov    rax,QWORD PTR [rbp-0x18]
  42817b:	sub    rdx,rax
  42817e:	mov    rax,rdx
  428181:	mov    rdx,rax
  428184:	mov    rax,QWORD PTR [rbp-0x28]
  428188:	mov    rax,QWORD PTR [rax]
  42818b:	mov    rcx,QWORD PTR [rbp-0x18]
  42818f:	mov    rsi,rcx
  428192:	mov    rdi,rax
  428195:	call   41f5e8 <flatcc_builder_create_string@@Base>
  42819a:	mov    edx,eax
  42819c:	mov    rax,QWORD PTR [rbp-0x40]
  4281a0:	mov    DWORD PTR [rax],edx
  4281a2:	jmp    4282c3 <flatcc_json_parser_build_string@@Base+0x1ca>
  4281a7:	mov    rax,QWORD PTR [rbp-0x28]
  4281ab:	mov    rax,QWORD PTR [rax]
  4281ae:	mov    rdi,rax
  4281b1:	call   41d724 <flatcc_builder_start_string@@Base>
  4281b6:	test   eax,eax
  4281b8:	jne    4282e0 <flatcc_json_parser_build_string@@Base+0x1e7>
  4281be:	mov    rdx,QWORD PTR [rbp-0x30]
  4281c2:	mov    rax,QWORD PTR [rbp-0x18]
  4281c6:	sub    rdx,rax
  4281c9:	mov    rax,rdx
  4281cc:	mov    rdx,rax
  4281cf:	mov    rax,QWORD PTR [rbp-0x28]
  4281d3:	mov    rax,QWORD PTR [rax]
  4281d6:	mov    rcx,QWORD PTR [rbp-0x18]
  4281da:	mov    rsi,rcx
  4281dd:	mov    rdi,rax
  4281e0:	call   41d242 <flatcc_builder_append_string@@Base>
  4281e5:	test   rax,rax
  4281e8:	je     4282e0 <flatcc_json_parser_build_string@@Base+0x1e7>
  4281ee:	jmp    428293 <flatcc_json_parser_build_string@@Base+0x19a>
  4281f3:	lea    rcx,[rbp-0xc]
  4281f7:	mov    rdx,QWORD PTR [rbp-0x38]
  4281fb:	mov    rsi,QWORD PTR [rbp-0x30]
  4281ff:	mov    rax,QWORD PTR [rbp-0x28]
  428203:	mov    rdi,rax
  428206:	call   4268b8 <flatcc_json_parser_string_escape@@Base>
  42820b:	mov    QWORD PTR [rbp-0x30],rax
  42820f:	movzx  eax,BYTE PTR [rbp-0xc]
  428213:	movsx  rdx,al
  428217:	lea    rax,[rbp-0xc]
  42821b:	add    rax,0x1
  42821f:	mov    rcx,QWORD PTR [rbp-0x28]
  428223:	mov    rcx,QWORD PTR [rcx]
  428226:	mov    rsi,rax
  428229:	mov    rdi,rcx
  42822c:	call   41d242 <flatcc_builder_append_string@@Base>
  428231:	test   rax,rax
  428234:	je     4282dc <flatcc_json_parser_build_string@@Base+0x1e3>
  42823a:	mov    rax,QWORD PTR [rbp-0x30]
  42823e:	mov    QWORD PTR [rbp-0x18],rax
  428242:	mov    rdx,QWORD PTR [rbp-0x38]
  428246:	mov    rcx,QWORD PTR [rbp-0x18]
  42824a:	mov    rax,QWORD PTR [rbp-0x28]
  42824e:	mov    rsi,rcx
  428251:	mov    rdi,rax
  428254:	call   4266b2 <flatcc_json_parser_string_part@@Base>
  428259:	mov    QWORD PTR [rbp-0x30],rax
  42825d:	mov    rax,QWORD PTR [rbp-0x30]
  428261:	cmp    rax,QWORD PTR [rbp-0x38]
  428265:	je     428293 <flatcc_json_parser_build_string@@Base+0x19a>
  428267:	mov    rdx,QWORD PTR [rbp-0x30]
  42826b:	mov    rax,QWORD PTR [rbp-0x18]
  42826f:	sub    rdx,rax
  428272:	mov    rax,rdx
  428275:	mov    rdx,rax
  428278:	mov    rax,QWORD PTR [rbp-0x28]
  42827c:	mov    rax,QWORD PTR [rax]
  42827f:	mov    rcx,QWORD PTR [rbp-0x18]
  428283:	mov    rsi,rcx
  428286:	mov    rdi,rax
  428289:	call   41d242 <flatcc_builder_append_string@@Base>
  42828e:	test   rax,rax
  428291:	je     4282df <flatcc_json_parser_build_string@@Base+0x1e6>
  428293:	mov    rax,QWORD PTR [rbp-0x30]
  428297:	cmp    rax,QWORD PTR [rbp-0x38]
  42829b:	je     4282ac <flatcc_json_parser_build_string@@Base+0x1b3>
  42829d:	mov    rax,QWORD PTR [rbp-0x30]
  4282a1:	movzx  eax,BYTE PTR [rax]
  4282a4:	cmp    al,0x22
  4282a6:	jne    4281f3 <flatcc_json_parser_build_string@@Base+0xfa>
  4282ac:	mov    rax,QWORD PTR [rbp-0x28]
  4282b0:	mov    rax,QWORD PTR [rax]
  4282b3:	mov    rdi,rax
  4282b6:	call   41f85f <flatcc_builder_end_string@@Base>
  4282bb:	mov    edx,eax
  4282bd:	mov    rax,QWORD PTR [rbp-0x40]
  4282c1:	mov    DWORD PTR [rax],edx
  4282c3:	mov    rdx,QWORD PTR [rbp-0x38]
  4282c7:	mov    rcx,QWORD PTR [rbp-0x30]
  4282cb:	mov    rax,QWORD PTR [rbp-0x28]
  4282cf:	mov    rsi,rcx
  4282d2:	mov    rdi,rax
  4282d5:	call   422a6d <flatcc_verify_union_vector_field@@Base+0x364>
  4282da:	jmp    4282ee <flatcc_json_parser_build_string@@Base+0x1f5>
  4282dc:	nop
  4282dd:	jmp    4282e0 <flatcc_json_parser_build_string@@Base+0x1e7>
  4282df:	nop
  4282e0:	mov    rax,QWORD PTR [rbp-0x40]
  4282e4:	mov    DWORD PTR [rax],0x0
  4282ea:	mov    rax,QWORD PTR [rbp-0x30]
  4282ee:	mov    rsi,QWORD PTR [rbp-0x8]
  4282f2:	xor    rsi,QWORD PTR fs:0x28
  4282fb:	je     428302 <flatcc_json_parser_build_string@@Base+0x209>
  4282fd:	call   405070 <__stack_chk_fail@plt>
  428302:	leave  
  428303:	ret    

0000000000428304 <flatcc_json_parser_prepare_unions@@Base>:
  428304:	push   rbp
  428305:	mov    rbp,rsp
  428308:	sub    rsp,0x40
  42830c:	mov    QWORD PTR [rbp-0x18],rdi
  428310:	mov    QWORD PTR [rbp-0x20],rsi
  428314:	mov    QWORD PTR [rbp-0x28],rdx
  428318:	mov    QWORD PTR [rbp-0x30],rcx
  42831c:	mov    QWORD PTR [rbp-0x38],r8
  428320:	mov    rdx,QWORD PTR [rbp-0x30]
  428324:	mov    rax,rdx
  428327:	shl    rax,0x2
  42832b:	add    rax,rdx
  42832e:	shl    rax,0x3
  428332:	lea    rdx,[rax+0x10]
  428336:	mov    rax,QWORD PTR [rbp-0x18]
  42833a:	mov    rax,QWORD PTR [rax]
  42833d:	mov    rsi,rdx
  428340:	mov    rdi,rax
  428343:	call   41b9b4 <flatcc_builder_enter_user_frame@@Base>
  428348:	mov    rdx,rax
  42834b:	mov    rax,QWORD PTR [rbp-0x38]
  42834f:	mov    QWORD PTR [rax],rdx
  428352:	mov    rax,QWORD PTR [rbp-0x38]
  428356:	mov    rax,QWORD PTR [rax]
  428359:	test   rax,rax
  42835c:	jne    428379 <flatcc_json_parser_prepare_unions@@Base+0x75>
  42835e:	mov    rdx,QWORD PTR [rbp-0x28]
  428362:	mov    rsi,QWORD PTR [rbp-0x20]
  428366:	mov    rax,QWORD PTR [rbp-0x18]
  42836a:	mov    ecx,0x21
  42836f:	mov    rdi,rax
  428372:	call   42665a <flatcc_json_parser_set_error@@Base>
  428377:	jmp    4283a5 <flatcc_json_parser_prepare_unions@@Base+0xa1>
  428379:	mov    rax,QWORD PTR [rbp-0x38]
  42837d:	mov    rdx,QWORD PTR [rax]
  428380:	mov    rax,QWORD PTR [rbp-0x18]
  428384:	mov    rax,QWORD PTR [rax]
  428387:	mov    rsi,rdx
  42838a:	mov    rdi,rax
  42838d:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428392:	mov    QWORD PTR [rbp-0x8],rax
  428396:	mov    rax,QWORD PTR [rbp-0x8]
  42839a:	mov    rdx,QWORD PTR [rbp-0x30]
  42839e:	mov    QWORD PTR [rax],rdx
  4283a1:	mov    rax,QWORD PTR [rbp-0x20]
  4283a5:	leave  
  4283a6:	ret    

00000000004283a7 <flatcc_json_parser_finalize_unions@@Base>:
  4283a7:	push   rbp
  4283a8:	mov    rbp,rsp
  4283ab:	sub    rsp,0x30
  4283af:	mov    QWORD PTR [rbp-0x18],rdi
  4283b3:	mov    QWORD PTR [rbp-0x20],rsi
  4283b7:	mov    QWORD PTR [rbp-0x28],rdx
  4283bb:	mov    QWORD PTR [rbp-0x30],rcx
  4283bf:	mov    rax,QWORD PTR [rbp-0x18]
  4283c3:	mov    rax,QWORD PTR [rax]
  4283c6:	mov    rdx,QWORD PTR [rbp-0x30]
  4283ca:	mov    rsi,rdx
  4283cd:	mov    rdi,rax
  4283d0:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  4283d5:	mov    QWORD PTR [rbp-0x8],rax
  4283d9:	mov    rax,QWORD PTR [rbp-0x8]
  4283dd:	mov    rax,QWORD PTR [rax+0x8]
  4283e1:	test   rax,rax
  4283e4:	je     428403 <flatcc_json_parser_finalize_unions@@Base+0x5c>
  4283e6:	mov    rdx,QWORD PTR [rbp-0x28]
  4283ea:	mov    rsi,QWORD PTR [rbp-0x20]
  4283ee:	mov    rax,QWORD PTR [rbp-0x18]
  4283f2:	mov    ecx,0x1b
  4283f7:	mov    rdi,rax
  4283fa:	call   42665a <flatcc_json_parser_set_error@@Base>
  4283ff:	mov    QWORD PTR [rbp-0x20],rax
  428403:	mov    rax,QWORD PTR [rbp-0x18]
  428407:	mov    rax,QWORD PTR [rax]
  42840a:	mov    rdx,QWORD PTR [rbp-0x30]
  42840e:	mov    rsi,rdx
  428411:	mov    rdi,rax
  428414:	call   41bb17 <flatcc_builder_exit_user_frame_at@@Base>
  428419:	mov    rax,QWORD PTR [rbp-0x20]
  42841d:	leave  
  42841e:	ret    

000000000042841f <flatcc_json_parser_union@@Base>:
  42841f:	push   rbp
  428420:	mov    rbp,rsp
  428423:	sub    rsp,0x60
  428427:	mov    QWORD PTR [rbp-0x28],rdi
  42842b:	mov    QWORD PTR [rbp-0x30],rsi
  42842f:	mov    QWORD PTR [rbp-0x38],rdx
  428433:	mov    QWORD PTR [rbp-0x40],rcx
  428437:	mov    eax,r8d
  42843a:	mov    QWORD PTR [rbp-0x50],r9
  42843e:	mov    WORD PTR [rbp-0x44],ax
  428442:	mov    rax,QWORD PTR [rbp+0x10]
  428446:	mov    QWORD PTR [rbp-0x58],rax
  42844a:	mov    rax,QWORD PTR fs:0x28
  428453:	mov    QWORD PTR [rbp-0x8],rax
  428457:	xor    eax,eax
  428459:	mov    rax,QWORD PTR [rbp-0x28]
  42845d:	mov    rax,QWORD PTR [rax]
  428460:	mov    rdx,QWORD PTR [rbp-0x50]
  428464:	mov    rsi,rdx
  428467:	mov    rdi,rax
  42846a:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  42846f:	mov    QWORD PTR [rbp-0x20],rax
  428473:	mov    rdx,QWORD PTR [rbp-0x40]
  428477:	mov    rax,rdx
  42847a:	shl    rax,0x2
  42847e:	add    rax,rdx
  428481:	shl    rax,0x3
  428485:	mov    rdx,QWORD PTR [rbp-0x20]
  428489:	add    rax,rdx
  42848c:	add    rax,0x10
  428490:	mov    QWORD PTR [rbp-0x18],rax
  428494:	mov    rax,QWORD PTR [rbp-0x18]
  428498:	mov    rax,QWORD PTR [rax]
  42849b:	test   rax,rax
  42849e:	je     4284be <flatcc_json_parser_union@@Base+0x9f>
  4284a0:	mov    rdx,QWORD PTR [rbp-0x38]
  4284a4:	mov    rsi,QWORD PTR [rbp-0x30]
  4284a8:	mov    rax,QWORD PTR [rbp-0x28]
  4284ac:	mov    ecx,0x1c
  4284b1:	mov    rdi,rax
  4284b4:	call   42665a <flatcc_json_parser_set_error@@Base>
  4284b9:	jmp    4285e2 <flatcc_json_parser_union@@Base+0x1c3>
  4284be:	mov    rax,QWORD PTR [rbp-0x18]
  4284c2:	movzx  eax,BYTE PTR [rax+0x14]
  4284c6:	test   al,al
  4284c8:	jne    42852a <flatcc_json_parser_union@@Base+0x10b>
  4284ca:	mov    rax,QWORD PTR [rbp-0x20]
  4284ce:	mov    rax,QWORD PTR [rax+0x8]
  4284d2:	lea    rdx,[rax+0x1]
  4284d6:	mov    rax,QWORD PTR [rbp-0x20]
  4284da:	mov    QWORD PTR [rax+0x8],rdx
  4284de:	mov    rax,QWORD PTR [rbp-0x28]
  4284e2:	mov    edx,DWORD PTR [rax+0x18]
  4284e5:	mov    rax,QWORD PTR [rbp-0x18]
  4284e9:	mov    DWORD PTR [rax+0x10],edx
  4284ec:	mov    rax,QWORD PTR [rbp-0x28]
  4284f0:	mov    rdx,QWORD PTR [rax+0x8]
  4284f4:	mov    rax,QWORD PTR [rbp-0x18]
  4284f8:	mov    QWORD PTR [rax+0x8],rdx
  4284fc:	mov    rax,QWORD PTR [rbp-0x18]
  428500:	mov    rdx,QWORD PTR [rbp-0x30]
  428504:	mov    QWORD PTR [rax],rdx
  428507:	mov    rax,QWORD PTR [rbp-0x18]
  42850b:	mov    rcx,QWORD PTR [rax]
  42850e:	mov    rdx,QWORD PTR [rbp-0x38]
  428512:	mov    rax,QWORD PTR [rbp-0x28]
  428516:	mov    rsi,rcx
  428519:	mov    rdi,rax
  42851c:	call   427761 <flatcc_json_parser_generic_json@@Base>
  428521:	mov    QWORD PTR [rbp-0x30],rax
  428525:	jmp    4285de <flatcc_json_parser_union@@Base+0x1bf>
  42852a:	mov    rax,QWORD PTR [rbp-0x18]
  42852e:	movzx  eax,BYTE PTR [rax+0x15]
  428532:	mov    BYTE PTR [rbp-0x10],al
  428535:	mov    rax,QWORD PTR [rbp-0x18]
  428539:	movzx  eax,BYTE PTR [rax+0x15]
  42853d:	test   al,al
  42853f:	jne    42855f <flatcc_json_parser_union@@Base+0x140>
  428541:	mov    rdx,QWORD PTR [rbp-0x38]
  428545:	mov    rsi,QWORD PTR [rbp-0x30]
  428549:	mov    rax,QWORD PTR [rbp-0x28]
  42854d:	mov    ecx,0x19
  428552:	mov    rdi,rax
  428555:	call   42665a <flatcc_json_parser_set_error@@Base>
  42855a:	jmp    4285e2 <flatcc_json_parser_union@@Base+0x1c3>
  42855f:	mov    rax,QWORD PTR [rbp-0x20]
  428563:	mov    rax,QWORD PTR [rax+0x8]
  428567:	lea    rdx,[rax-0x1]
  42856b:	mov    rax,QWORD PTR [rbp-0x20]
  42856f:	mov    QWORD PTR [rax+0x8],rdx
  428573:	mov    rax,QWORD PTR [rbp-0x18]
  428577:	movzx  eax,BYTE PTR [rax+0x15]
  42857b:	movzx  ecx,al
  42857e:	lea    rax,[rbp-0x10]
  428582:	lea    r8,[rax+0x4]
  428586:	mov    rdx,QWORD PTR [rbp-0x38]
  42858a:	mov    rsi,QWORD PTR [rbp-0x30]
  42858e:	mov    rdi,QWORD PTR [rbp-0x28]
  428592:	mov    rax,QWORD PTR [rbp-0x58]
  428596:	call   rax
  428598:	mov    QWORD PTR [rbp-0x30],rax
  42859c:	mov    rax,QWORD PTR [rbp-0x30]
  4285a0:	cmp    rax,QWORD PTR [rbp-0x38]
  4285a4:	je     4285de <flatcc_json_parser_union@@Base+0x1bf>
  4285a6:	movzx  ecx,WORD PTR [rbp-0x44]
  4285aa:	mov    rax,QWORD PTR [rbp-0x28]
  4285ae:	mov    rax,QWORD PTR [rax]
  4285b1:	mov    rdx,QWORD PTR [rbp-0x10]
  4285b5:	mov    esi,ecx
  4285b7:	mov    rdi,rax
  4285ba:	call   41ed65 <flatcc_builder_table_add_union@@Base>
  4285bf:	test   eax,eax
  4285c1:	je     4285de <flatcc_json_parser_union@@Base+0x1bf>
  4285c3:	mov    rdx,QWORD PTR [rbp-0x38]
  4285c7:	mov    rsi,QWORD PTR [rbp-0x30]
  4285cb:	mov    rax,QWORD PTR [rbp-0x28]
  4285cf:	mov    ecx,0x1c
  4285d4:	mov    rdi,rax
  4285d7:	call   42665a <flatcc_json_parser_set_error@@Base>
  4285dc:	jmp    4285e2 <flatcc_json_parser_union@@Base+0x1c3>
  4285de:	mov    rax,QWORD PTR [rbp-0x30]
  4285e2:	mov    rdi,QWORD PTR [rbp-0x8]
  4285e6:	xor    rdi,QWORD PTR fs:0x28
  4285ef:	je     4285f6 <flatcc_json_parser_union@@Base+0x1d7>
  4285f1:	call   405070 <__stack_chk_fail@plt>
  4285f6:	leave  
  4285f7:	ret    

00000000004285f8 <flatcc_json_parser_union_type@@Base>:
  4285f8:	push   rbp
  4285f9:	mov    rbp,rsp
  4285fc:	add    rsp,0xffffffffffffff80
  428600:	mov    QWORD PTR [rbp-0x48],rdi
  428604:	mov    QWORD PTR [rbp-0x50],rsi
  428608:	mov    QWORD PTR [rbp-0x58],rdx
  42860c:	mov    QWORD PTR [rbp-0x60],rcx
  428610:	mov    eax,r8d
  428613:	mov    QWORD PTR [rbp-0x70],r9
  428617:	mov    WORD PTR [rbp-0x64],ax
  42861b:	mov    rax,QWORD PTR [rbp+0x10]
  42861f:	mov    QWORD PTR [rbp-0x78],rax
  428623:	mov    rax,QWORD PTR [rbp+0x18]
  428627:	mov    QWORD PTR [rbp-0x80],rax
  42862b:	mov    rax,QWORD PTR fs:0x28
  428634:	mov    QWORD PTR [rbp-0x8],rax
  428638:	xor    eax,eax
  42863a:	mov    rax,QWORD PTR [rbp-0x48]
  42863e:	mov    rax,QWORD PTR [rax]
  428641:	mov    rdx,QWORD PTR [rbp-0x70]
  428645:	mov    rsi,rdx
  428648:	mov    rdi,rax
  42864b:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428650:	mov    QWORD PTR [rbp-0x30],rax
  428654:	mov    rax,QWORD PTR [rbp-0x30]
  428658:	lea    rcx,[rax+0x10]
  42865c:	mov    rdx,QWORD PTR [rbp-0x60]
  428660:	mov    rax,rdx
  428663:	shl    rax,0x2
  428667:	add    rax,rdx
  42866a:	shl    rax,0x3
  42866e:	add    rax,rcx
  428671:	mov    QWORD PTR [rbp-0x28],rax
  428675:	mov    rax,QWORD PTR [rbp-0x28]
  428679:	movzx  eax,BYTE PTR [rax+0x14]
  42867d:	test   al,al
  42867f:	je     42869f <flatcc_json_parser_union_type@@Base+0xa7>
  428681:	mov    rdx,QWORD PTR [rbp-0x58]
  428685:	mov    rsi,QWORD PTR [rbp-0x50]
  428689:	mov    rax,QWORD PTR [rbp-0x48]
  42868d:	mov    ecx,0x1c
  428692:	mov    rdi,rax
  428695:	call   42665a <flatcc_json_parser_set_error@@Base>
  42869a:	jmp    42883d <flatcc_json_parser_union_type@@Base+0x245>
  42869f:	mov    rax,QWORD PTR [rbp-0x28]
  4286a3:	mov    BYTE PTR [rax+0x14],0x1
  4286a7:	mov    rax,QWORD PTR [rbp-0x28]
  4286ab:	lea    rcx,[rax+0x15]
  4286af:	mov    rax,QWORD PTR [rbp-0x50]
  4286b3:	mov    QWORD PTR [rbp-0x20],rax
  4286b7:	mov    rdx,QWORD PTR [rbp-0x58]
  4286bb:	mov    rsi,QWORD PTR [rbp-0x20]
  4286bf:	mov    rax,QWORD PTR [rbp-0x48]
  4286c3:	mov    rdi,rax
  4286c6:	call   42357d <flatcc_verify_union_vector_field@@Base+0xe74>
  4286cb:	mov    QWORD PTR [rbp-0x50],rax
  4286cf:	mov    rax,QWORD PTR [rbp-0x20]
  4286d3:	cmp    rax,QWORD PTR [rbp-0x50]
  4286d7:	jne    428700 <flatcc_json_parser_union_type@@Base+0x108>
  4286d9:	mov    rax,QWORD PTR [rbp-0x28]
  4286dd:	lea    rdi,[rax+0x15]
  4286e1:	mov    rcx,QWORD PTR [rbp-0x78]
  4286e5:	mov    rdx,QWORD PTR [rbp-0x58]
  4286e9:	mov    rsi,QWORD PTR [rbp-0x50]
  4286ed:	mov    rax,QWORD PTR [rbp-0x48]
  4286f1:	mov    r8,rdi
  4286f4:	mov    rdi,rax
  4286f7:	call   423a52 <flatcc_verify_union_vector_field@@Base+0x1349>
  4286fc:	mov    QWORD PTR [rbp-0x50],rax
  428700:	mov    rax,QWORD PTR [rbp-0x28]
  428704:	mov    rax,QWORD PTR [rax]
  428707:	test   rax,rax
  42870a:	jne    428738 <flatcc_json_parser_union_type@@Base+0x140>
  42870c:	mov    rax,QWORD PTR [rbp-0x30]
  428710:	mov    rdx,QWORD PTR [rax+0x8]
  428714:	mov    rax,QWORD PTR [rbp-0x28]
  428718:	movzx  eax,BYTE PTR [rax+0x15]
  42871c:	test   al,al
  42871e:	setne  al
  428721:	movzx  eax,al
  428724:	add    rdx,rax
  428727:	mov    rax,QWORD PTR [rbp-0x30]
  42872b:	mov    QWORD PTR [rax+0x8],rdx
  42872f:	mov    rax,QWORD PTR [rbp-0x50]
  428733:	jmp    42883d <flatcc_json_parser_union_type@@Base+0x245>
  428738:	mov    rax,QWORD PTR [rbp-0x30]
  42873c:	mov    rax,QWORD PTR [rax+0x8]
  428740:	test   rax,rax
  428743:	jne    428764 <flatcc_json_parser_union_type@@Base+0x16c>
  428745:	lea    rcx,[rip+0x13d84]        # 43c4d0 <flatcc_builder_padding_base@@Base+0x2550>
  42874c:	mov    edx,0x3c5
  428751:	lea    rsi,[rip+0x13860]        # 43bfb8 <flatcc_builder_padding_base@@Base+0x2038>
  428758:	lea    rdi,[rip+0x138bd]        # 43c01c <flatcc_builder_padding_base@@Base+0x209c>
  42875f:	call   405080 <__assert_fail@plt>
  428764:	mov    rax,QWORD PTR [rbp-0x30]
  428768:	mov    rax,QWORD PTR [rax+0x8]
  42876c:	lea    rdx,[rax-0x1]
  428770:	mov    rax,QWORD PTR [rbp-0x30]
  428774:	mov    QWORD PTR [rax+0x8],rdx
  428778:	mov    rax,QWORD PTR [rbp-0x48]
  42877c:	mov    eax,DWORD PTR [rax+0x18]
  42877f:	mov    DWORD PTR [rbp-0x34],eax
  428782:	mov    rax,QWORD PTR [rbp-0x48]
  428786:	mov    rax,QWORD PTR [rax+0x8]
  42878a:	mov    QWORD PTR [rbp-0x18],rax
  42878e:	mov    rax,QWORD PTR [rbp-0x28]
  428792:	mov    edx,DWORD PTR [rax+0x10]
  428795:	mov    rax,QWORD PTR [rbp-0x48]
  428799:	mov    DWORD PTR [rax+0x18],edx
  42879c:	mov    rax,QWORD PTR [rbp-0x28]
  4287a0:	mov    rdx,QWORD PTR [rax+0x8]
  4287a4:	mov    rax,QWORD PTR [rbp-0x48]
  4287a8:	mov    QWORD PTR [rax+0x8],rdx
  4287ac:	mov    rax,QWORD PTR [rbp-0x28]
  4287b0:	movzx  eax,BYTE PTR [rax+0x15]
  4287b4:	mov    BYTE PTR [rbp-0x10],al
  4287b7:	mov    rax,QWORD PTR [rbp-0x28]
  4287bb:	movzx  eax,BYTE PTR [rax+0x15]
  4287bf:	movzx  ecx,al
  4287c2:	mov    rax,QWORD PTR [rbp-0x28]
  4287c6:	mov    rsi,QWORD PTR [rax]
  4287c9:	lea    rax,[rbp-0x10]
  4287cd:	lea    r8,[rax+0x4]
  4287d1:	mov    rdx,QWORD PTR [rbp-0x58]
  4287d5:	mov    rdi,QWORD PTR [rbp-0x48]
  4287d9:	mov    rax,QWORD PTR [rbp-0x80]
  4287dd:	call   rax
  4287df:	cmp    rax,QWORD PTR [rbp-0x58]
  4287e3:	jne    4287eb <flatcc_json_parser_union_type@@Base+0x1f3>
  4287e5:	mov    rax,QWORD PTR [rbp-0x58]
  4287e9:	jmp    42883d <flatcc_json_parser_union_type@@Base+0x245>
  4287eb:	movzx  ecx,WORD PTR [rbp-0x64]
  4287ef:	mov    rax,QWORD PTR [rbp-0x48]
  4287f3:	mov    rax,QWORD PTR [rax]
  4287f6:	mov    rdx,QWORD PTR [rbp-0x10]
  4287fa:	mov    esi,ecx
  4287fc:	mov    rdi,rax
  4287ff:	call   41ed65 <flatcc_builder_table_add_union@@Base>
  428804:	test   eax,eax
  428806:	je     428823 <flatcc_json_parser_union_type@@Base+0x22b>
  428808:	mov    rdx,QWORD PTR [rbp-0x58]
  42880c:	mov    rsi,QWORD PTR [rbp-0x50]
  428810:	mov    rax,QWORD PTR [rbp-0x48]
  428814:	mov    ecx,0x1c
  428819:	mov    rdi,rax
  42881c:	call   42665a <flatcc_json_parser_set_error@@Base>
  428821:	jmp    42883d <flatcc_json_parser_union_type@@Base+0x245>
  428823:	mov    rax,QWORD PTR [rbp-0x48]
  428827:	mov    edx,DWORD PTR [rbp-0x34]
  42882a:	mov    DWORD PTR [rax+0x18],edx
  42882d:	mov    rax,QWORD PTR [rbp-0x48]
  428831:	mov    rdx,QWORD PTR [rbp-0x18]
  428835:	mov    QWORD PTR [rax+0x8],rdx
  428839:	mov    rax,QWORD PTR [rbp-0x50]
  42883d:	mov    rdi,QWORD PTR [rbp-0x8]
  428841:	xor    rdi,QWORD PTR fs:0x28
  42884a:	je     428851 <flatcc_json_parser_union_type@@Base+0x259>
  42884c:	call   405070 <__stack_chk_fail@plt>
  428851:	leave  
  428852:	ret    
  428853:	push   rbp
  428854:	mov    rbp,rsp
  428857:	sub    rsp,0x60
  42885b:	mov    QWORD PTR [rbp-0x38],rdi
  42885f:	mov    QWORD PTR [rbp-0x40],rsi
  428863:	mov    QWORD PTR [rbp-0x48],rdx
  428867:	mov    QWORD PTR [rbp-0x50],rcx
  42886b:	mov    DWORD PTR [rbp-0x54],r8d
  42886f:	mov    eax,r9d
  428872:	mov    WORD PTR [rbp-0x58],ax
  428876:	mov    rax,QWORD PTR [rbp+0x10]
  42887a:	mov    QWORD PTR [rbp-0x60],rax
  42887e:	mov    rax,QWORD PTR fs:0x28
  428887:	mov    QWORD PTR [rbp-0x8],rax
  42888b:	xor    eax,eax
  42888d:	mov    DWORD PTR [rbp-0x28],0x0
  428894:	mov    rax,QWORD PTR [rbp-0x38]
  428898:	mov    rax,QWORD PTR [rax]
  42889b:	mov    rdi,rax
  42889e:	call   41d63b <flatcc_builder_start_offset_vector@@Base>
  4288a3:	test   eax,eax
  4288a5:	jne    428a3b <flatcc_json_parser_union_type@@Base+0x443>
  4288ab:	lea    rcx,[rbp-0x24]
  4288af:	mov    rdx,QWORD PTR [rbp-0x48]
  4288b3:	mov    rsi,QWORD PTR [rbp-0x40]
  4288b7:	mov    rax,QWORD PTR [rbp-0x38]
  4288bb:	mov    rdi,rax
  4288be:	call   422dfb <flatcc_verify_union_vector_field@@Base+0x6f2>
  4288c3:	mov    QWORD PTR [rbp-0x40],rax
  4288c7:	mov    QWORD PTR [rbp-0x20],0x0
  4288cf:	jmp    4289a0 <flatcc_json_parser_union_type@@Base+0x3a8>
  4288d4:	mov    eax,DWORD PTR [rbp-0x54]
  4288d7:	cmp    rax,QWORD PTR [rbp-0x20]
  4288db:	jne    4288fb <flatcc_json_parser_union_type@@Base+0x303>
  4288dd:	mov    rdx,QWORD PTR [rbp-0x48]
  4288e1:	mov    rsi,QWORD PTR [rbp-0x40]
  4288e5:	mov    rax,QWORD PTR [rbp-0x38]
  4288e9:	mov    ecx,0x1e
  4288ee:	mov    rdi,rax
  4288f1:	call   42665a <flatcc_json_parser_set_error@@Base>
  4288f6:	jmp    428a5e <flatcc_json_parser_union_type@@Base+0x466>
  4288fb:	mov    rax,QWORD PTR [rbp-0x38]
  4288ff:	mov    rax,QWORD PTR [rax]
  428902:	mov    rdx,QWORD PTR [rbp-0x50]
  428906:	mov    rsi,rdx
  428909:	mov    rdi,rax
  42890c:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428911:	mov    QWORD PTR [rbp-0x18],rax
  428915:	mov    rdx,QWORD PTR [rbp-0x18]
  428919:	mov    rax,QWORD PTR [rbp-0x20]
  42891d:	add    rax,rdx
  428920:	movzx  eax,BYTE PTR [rax]
  428923:	movzx  ecx,al
  428926:	lea    r8,[rbp-0x28]
  42892a:	mov    rdx,QWORD PTR [rbp-0x48]
  42892e:	mov    rsi,QWORD PTR [rbp-0x40]
  428932:	mov    rdi,QWORD PTR [rbp-0x38]
  428936:	mov    rax,QWORD PTR [rbp-0x60]
  42893a:	call   rax
  42893c:	mov    QWORD PTR [rbp-0x40],rax
  428940:	mov    rax,QWORD PTR [rbp-0x40]
  428944:	cmp    rax,QWORD PTR [rbp-0x48]
  428948:	jne    428953 <flatcc_json_parser_union_type@@Base+0x35b>
  42894a:	mov    rax,QWORD PTR [rbp-0x40]
  42894e:	jmp    428a5e <flatcc_json_parser_union_type@@Base+0x466>
  428953:	mov    rax,QWORD PTR [rbp-0x38]
  428957:	mov    rax,QWORD PTR [rax]
  42895a:	mov    esi,0x1
  42895f:	mov    rdi,rax
  428962:	call   41d04b <flatcc_builder_extend_offset_vector@@Base>
  428967:	mov    QWORD PTR [rbp-0x10],rax
  42896b:	cmp    QWORD PTR [rbp-0x10],0x0
  428970:	je     428a3e <flatcc_json_parser_union_type@@Base+0x446>
  428976:	mov    edx,DWORD PTR [rbp-0x28]
  428979:	mov    rax,QWORD PTR [rbp-0x10]
  42897d:	mov    DWORD PTR [rax],edx
  42897f:	lea    rcx,[rbp-0x24]
  428983:	mov    rdx,QWORD PTR [rbp-0x48]
  428987:	mov    rsi,QWORD PTR [rbp-0x40]
  42898b:	mov    rax,QWORD PTR [rbp-0x38]
  42898f:	mov    rdi,rax
  428992:	call   422eb8 <flatcc_verify_union_vector_field@@Base+0x7af>
  428997:	mov    QWORD PTR [rbp-0x40],rax
  42899b:	add    QWORD PTR [rbp-0x20],0x1
  4289a0:	mov    eax,DWORD PTR [rbp-0x24]
  4289a3:	test   eax,eax
  4289a5:	jne    4288d4 <flatcc_json_parser_union_type@@Base+0x2dc>
  4289ab:	mov    eax,DWORD PTR [rbp-0x54]
  4289ae:	cmp    rax,QWORD PTR [rbp-0x20]
  4289b2:	je     4289d2 <flatcc_json_parser_union_type@@Base+0x3da>
  4289b4:	mov    rdx,QWORD PTR [rbp-0x48]
  4289b8:	mov    rsi,QWORD PTR [rbp-0x40]
  4289bc:	mov    rax,QWORD PTR [rbp-0x38]
  4289c0:	mov    ecx,0x1e
  4289c5:	mov    rdi,rax
  4289c8:	call   42665a <flatcc_json_parser_set_error@@Base>
  4289cd:	jmp    428a5e <flatcc_json_parser_union_type@@Base+0x466>
  4289d2:	mov    rax,QWORD PTR [rbp-0x38]
  4289d6:	mov    rax,QWORD PTR [rax]
  4289d9:	mov    rdx,QWORD PTR [rbp-0x50]
  4289dd:	mov    rsi,rdx
  4289e0:	mov    rdi,rax
  4289e3:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  4289e8:	mov    QWORD PTR [rbp-0x18],rax
  4289ec:	mov    rax,QWORD PTR [rbp-0x38]
  4289f0:	mov    rax,QWORD PTR [rax]
  4289f3:	mov    rdx,QWORD PTR [rbp-0x18]
  4289f7:	mov    rsi,rdx
  4289fa:	mov    rdi,rax
  4289fd:	call   41ecaf <flatcc_builder_end_offset_vector_for_unions@@Base>
  428a02:	mov    DWORD PTR [rbp-0x28],eax
  428a05:	mov    eax,DWORD PTR [rbp-0x28]
  428a08:	test   eax,eax
  428a0a:	je     428a41 <flatcc_json_parser_union_type@@Base+0x449>
  428a0c:	movzx  edx,WORD PTR [rbp-0x58]
  428a10:	mov    rax,QWORD PTR [rbp-0x38]
  428a14:	mov    rax,QWORD PTR [rax]
  428a17:	mov    esi,edx
  428a19:	mov    rdi,rax
  428a1c:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  428a21:	mov    QWORD PTR [rbp-0x10],rax
  428a25:	cmp    QWORD PTR [rbp-0x10],0x0
  428a2a:	je     428a44 <flatcc_json_parser_union_type@@Base+0x44c>
  428a2c:	mov    edx,DWORD PTR [rbp-0x28]
  428a2f:	mov    rax,QWORD PTR [rbp-0x10]
  428a33:	mov    DWORD PTR [rax],edx
  428a35:	mov    rax,QWORD PTR [rbp-0x40]
  428a39:	jmp    428a5e <flatcc_json_parser_union_type@@Base+0x466>
  428a3b:	nop
  428a3c:	jmp    428a45 <flatcc_json_parser_union_type@@Base+0x44d>
  428a3e:	nop
  428a3f:	jmp    428a45 <flatcc_json_parser_union_type@@Base+0x44d>
  428a41:	nop
  428a42:	jmp    428a45 <flatcc_json_parser_union_type@@Base+0x44d>
  428a44:	nop
  428a45:	mov    rdx,QWORD PTR [rbp-0x48]
  428a49:	mov    rsi,QWORD PTR [rbp-0x40]
  428a4d:	mov    rax,QWORD PTR [rbp-0x38]
  428a51:	mov    ecx,0x21
  428a56:	mov    rdi,rax
  428a59:	call   42665a <flatcc_json_parser_set_error@@Base>
  428a5e:	mov    rcx,QWORD PTR [rbp-0x8]
  428a62:	xor    rcx,QWORD PTR fs:0x28
  428a6b:	je     428a72 <flatcc_json_parser_union_type@@Base+0x47a>
  428a6d:	call   405070 <__stack_chk_fail@plt>
  428a72:	leave  
  428a73:	ret    

0000000000428a74 <flatcc_json_parser_union_vector@@Base>:
  428a74:	push   rbp
  428a75:	mov    rbp,rsp
  428a78:	sub    rsp,0x40
  428a7c:	mov    QWORD PTR [rbp-0x18],rdi
  428a80:	mov    QWORD PTR [rbp-0x20],rsi
  428a84:	mov    QWORD PTR [rbp-0x28],rdx
  428a88:	mov    QWORD PTR [rbp-0x30],rcx
  428a8c:	mov    eax,r8d
  428a8f:	mov    QWORD PTR [rbp-0x40],r9
  428a93:	mov    WORD PTR [rbp-0x34],ax
  428a97:	mov    rax,QWORD PTR [rbp-0x18]
  428a9b:	mov    rax,QWORD PTR [rax]
  428a9e:	mov    rdx,QWORD PTR [rbp-0x40]
  428aa2:	mov    rsi,rdx
  428aa5:	mov    rdi,rax
  428aa8:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428aad:	mov    QWORD PTR [rbp-0x10],rax
  428ab1:	mov    rax,QWORD PTR [rbp-0x10]
  428ab5:	lea    rcx,[rax+0x10]
  428ab9:	mov    rdx,QWORD PTR [rbp-0x30]
  428abd:	mov    rax,rdx
  428ac0:	shl    rax,0x2
  428ac4:	add    rax,rdx
  428ac7:	shl    rax,0x3
  428acb:	add    rax,rcx
  428ace:	mov    QWORD PTR [rbp-0x8],rax
  428ad2:	mov    rax,QWORD PTR [rbp-0x8]
  428ad6:	mov    rax,QWORD PTR [rax]
  428ad9:	test   rax,rax
  428adc:	je     428afc <flatcc_json_parser_union_vector@@Base+0x88>
  428ade:	mov    rdx,QWORD PTR [rbp-0x28]
  428ae2:	mov    rsi,QWORD PTR [rbp-0x20]
  428ae6:	mov    rax,QWORD PTR [rbp-0x18]
  428aea:	mov    ecx,0x1c
  428aef:	mov    rdi,rax
  428af2:	call   42665a <flatcc_json_parser_set_error@@Base>
  428af7:	jmp    428bba <flatcc_json_parser_union_vector@@Base+0x146>
  428afc:	mov    rax,QWORD PTR [rbp-0x8]
  428b00:	movzx  eax,BYTE PTR [rax+0x14]
  428b04:	test   al,al
  428b06:	jne    428b65 <flatcc_json_parser_union_vector@@Base+0xf1>
  428b08:	mov    rax,QWORD PTR [rbp-0x10]
  428b0c:	mov    rax,QWORD PTR [rax+0x8]
  428b10:	lea    rdx,[rax+0x1]
  428b14:	mov    rax,QWORD PTR [rbp-0x10]
  428b18:	mov    QWORD PTR [rax+0x8],rdx
  428b1c:	mov    rax,QWORD PTR [rbp-0x18]
  428b20:	mov    edx,DWORD PTR [rax+0x18]
  428b23:	mov    rax,QWORD PTR [rbp-0x8]
  428b27:	mov    DWORD PTR [rax+0x10],edx
  428b2a:	mov    rax,QWORD PTR [rbp-0x18]
  428b2e:	mov    rdx,QWORD PTR [rax+0x8]
  428b32:	mov    rax,QWORD PTR [rbp-0x8]
  428b36:	mov    QWORD PTR [rax+0x8],rdx
  428b3a:	mov    rax,QWORD PTR [rbp-0x8]
  428b3e:	mov    rdx,QWORD PTR [rbp-0x20]
  428b42:	mov    QWORD PTR [rax],rdx
  428b45:	mov    rax,QWORD PTR [rbp-0x8]
  428b49:	mov    rcx,QWORD PTR [rax]
  428b4c:	mov    rdx,QWORD PTR [rbp-0x28]
  428b50:	mov    rax,QWORD PTR [rbp-0x18]
  428b54:	mov    rsi,rcx
  428b57:	mov    rdi,rax
  428b5a:	call   427761 <flatcc_json_parser_generic_json@@Base>
  428b5f:	mov    QWORD PTR [rbp-0x20],rax
  428b63:	jmp    428bb6 <flatcc_json_parser_union_vector@@Base+0x142>
  428b65:	mov    rax,QWORD PTR [rbp-0x10]
  428b69:	mov    rax,QWORD PTR [rax+0x8]
  428b6d:	lea    rdx,[rax-0x1]
  428b71:	mov    rax,QWORD PTR [rbp-0x10]
  428b75:	mov    QWORD PTR [rax+0x8],rdx
  428b79:	movzx  r8d,WORD PTR [rbp-0x34]
  428b7e:	mov    rax,QWORD PTR [rbp-0x8]
  428b82:	mov    edi,DWORD PTR [rax+0x18]
  428b85:	mov    rax,QWORD PTR [rbp-0x8]
  428b89:	mov    rcx,QWORD PTR [rax+0x20]
  428b8d:	mov    rdx,QWORD PTR [rbp-0x28]
  428b91:	mov    rsi,QWORD PTR [rbp-0x20]
  428b95:	mov    rax,QWORD PTR [rbp-0x18]
  428b99:	sub    rsp,0x8
  428b9d:	push   QWORD PTR [rbp+0x10]
  428ba0:	mov    r9d,r8d
  428ba3:	mov    r8d,edi
  428ba6:	mov    rdi,rax
  428ba9:	call   428853 <flatcc_json_parser_union_type@@Base+0x25b>
  428bae:	add    rsp,0x10
  428bb2:	mov    QWORD PTR [rbp-0x20],rax
  428bb6:	mov    rax,QWORD PTR [rbp-0x20]
  428bba:	leave  
  428bbb:	ret    

0000000000428bbc <flatcc_json_parser_union_type_vector@@Base>:
  428bbc:	push   rbp
  428bbd:	mov    rbp,rsp
  428bc0:	sub    rsp,0xc0
  428bc7:	mov    QWORD PTR [rbp-0x78],rdi
  428bcb:	mov    QWORD PTR [rbp-0x80],rsi
  428bcf:	mov    QWORD PTR [rbp-0x88],rdx
  428bd6:	mov    QWORD PTR [rbp-0x90],rcx
  428bdd:	mov    eax,r8d
  428be0:	mov    QWORD PTR [rbp-0xa0],r9
  428be7:	mov    WORD PTR [rbp-0x94],ax
  428bee:	mov    rax,QWORD PTR [rbp+0x10]
  428bf2:	mov    QWORD PTR [rbp-0xa8],rax
  428bf9:	mov    rax,QWORD PTR [rbp+0x18]
  428bfd:	mov    QWORD PTR [rbp-0xb0],rax
  428c04:	mov    rax,QWORD PTR [rbp+0x20]
  428c08:	mov    QWORD PTR [rbp-0xb8],rax
  428c0f:	mov    rax,QWORD PTR fs:0x28
  428c18:	mov    QWORD PTR [rbp-0x8],rax
  428c1c:	xor    eax,eax
  428c1e:	mov    rax,QWORD PTR [rbp-0x78]
  428c22:	mov    rax,QWORD PTR [rax]
  428c25:	mov    rdx,QWORD PTR [rbp-0xa0]
  428c2c:	mov    rsi,rdx
  428c2f:	mov    rdi,rax
  428c32:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428c37:	mov    QWORD PTR [rbp-0x50],rax
  428c3b:	mov    rax,QWORD PTR [rbp-0x50]
  428c3f:	lea    rcx,[rax+0x10]
  428c43:	mov    rdx,QWORD PTR [rbp-0x90]
  428c4a:	mov    rax,rdx
  428c4d:	shl    rax,0x2
  428c51:	add    rax,rdx
  428c54:	shl    rax,0x3
  428c58:	add    rax,rcx
  428c5b:	mov    QWORD PTR [rbp-0x48],rax
  428c5f:	mov    rax,QWORD PTR [rbp-0x48]
  428c63:	movzx  eax,BYTE PTR [rax+0x14]
  428c67:	test   al,al
  428c69:	je     428c8c <flatcc_json_parser_union_type_vector@@Base+0xd0>
  428c6b:	mov    rdx,QWORD PTR [rbp-0x88]
  428c72:	mov    rsi,QWORD PTR [rbp-0x80]
  428c76:	mov    rax,QWORD PTR [rbp-0x78]
  428c7a:	mov    ecx,0x1c
  428c7f:	mov    rdi,rax
  428c82:	call   42665a <flatcc_json_parser_set_error@@Base>
  428c87:	jmp    429050 <flatcc_json_parser_union_type_vector@@Base+0x494>
  428c8c:	mov    rax,QWORD PTR [rbp-0x48]
  428c90:	mov    BYTE PTR [rax+0x14],0x1
  428c94:	mov    rax,QWORD PTR [rbp-0x78]
  428c98:	mov    rax,QWORD PTR [rax]
  428c9b:	mov    ecx,0xffffffff
  428ca0:	mov    edx,0x1
  428ca5:	mov    esi,0x1
  428caa:	mov    rdi,rax
  428cad:	call   41d59d <flatcc_builder_start_vector@@Base>
  428cb2:	test   eax,eax
  428cb4:	jne    42902a <flatcc_json_parser_union_type_vector@@Base+0x46e>
  428cba:	lea    rcx,[rbp-0x60]
  428cbe:	mov    rdx,QWORD PTR [rbp-0x88]
  428cc5:	mov    rsi,QWORD PTR [rbp-0x80]
  428cc9:	mov    rax,QWORD PTR [rbp-0x78]
  428ccd:	mov    rdi,rax
  428cd0:	call   422dfb <flatcc_verify_union_vector_field@@Base+0x6f2>
  428cd5:	mov    QWORD PTR [rbp-0x80],rax
  428cd9:	jmp    428dff <flatcc_json_parser_union_type_vector@@Base+0x243>
  428cde:	mov    rax,QWORD PTR [rbp-0x78]
  428ce2:	mov    rax,QWORD PTR [rax]
  428ce5:	mov    esi,0x1
  428cea:	mov    rdi,rax
  428ced:	call   41ce85 <flatcc_builder_extend_vector@@Base>
  428cf2:	mov    QWORD PTR [rbp-0x40],rax
  428cf6:	cmp    QWORD PTR [rbp-0x40],0x0
  428cfb:	je     42902d <flatcc_json_parser_union_type_vector@@Base+0x471>
  428d01:	mov    rax,QWORD PTR [rbp-0x80]
  428d05:	mov    QWORD PTR [rbp-0x38],rax
  428d09:	lea    rcx,[rbp-0x61]
  428d0d:	mov    rdx,QWORD PTR [rbp-0x88]
  428d14:	mov    rsi,QWORD PTR [rbp-0x38]
  428d18:	mov    rax,QWORD PTR [rbp-0x78]
  428d1c:	mov    rdi,rax
  428d1f:	call   42357d <flatcc_verify_union_vector_field@@Base+0xe74>
  428d24:	mov    QWORD PTR [rbp-0x80],rax
  428d28:	mov    rax,QWORD PTR [rbp-0x38]
  428d2c:	cmp    rax,QWORD PTR [rbp-0x80]
  428d30:	jne    428d82 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  428d32:	mov    rax,QWORD PTR [rbp-0x80]
  428d36:	mov    QWORD PTR [rbp-0x38],rax
  428d3a:	lea    rdi,[rbp-0x61]
  428d3e:	mov    rcx,QWORD PTR [rbp-0xa8]
  428d45:	mov    rdx,QWORD PTR [rbp-0x88]
  428d4c:	mov    rsi,QWORD PTR [rbp-0x38]
  428d50:	mov    rax,QWORD PTR [rbp-0x78]
  428d54:	mov    r8,rdi
  428d57:	mov    rdi,rax
  428d5a:	call   423a52 <flatcc_verify_union_vector_field@@Base+0x1349>
  428d5f:	mov    QWORD PTR [rbp-0x80],rax
  428d63:	mov    rax,QWORD PTR [rbp-0x80]
  428d67:	cmp    rax,QWORD PTR [rbp-0x38]
  428d6b:	je     429034 <flatcc_json_parser_union_type_vector@@Base+0x478>
  428d71:	mov    rax,QWORD PTR [rbp-0x80]
  428d75:	cmp    rax,QWORD PTR [rbp-0x88]
  428d7c:	je     429034 <flatcc_json_parser_union_type_vector@@Base+0x478>
  428d82:	movzx  eax,BYTE PTR [rbp-0x61]
  428d86:	movzx  edx,al
  428d89:	mov    rax,QWORD PTR [rbp-0xb8]
  428d90:	mov    edi,edx
  428d92:	call   rax
  428d94:	test   eax,eax
  428d96:	jne    428dcb <flatcc_json_parser_union_type_vector@@Base+0x20f>
  428d98:	mov    rax,QWORD PTR [rbp-0x78]
  428d9c:	mov    eax,DWORD PTR [rax+0x10]
  428d9f:	and    eax,0x1
  428da2:	test   eax,eax
  428da4:	jne    428dc7 <flatcc_json_parser_union_type_vector@@Base+0x20b>
  428da6:	mov    rdx,QWORD PTR [rbp-0x88]
  428dad:	mov    rsi,QWORD PTR [rbp-0x80]
  428db1:	mov    rax,QWORD PTR [rbp-0x78]
  428db5:	mov    ecx,0xf
  428dba:	mov    rdi,rax
  428dbd:	call   42665a <flatcc_json_parser_set_error@@Base>
  428dc2:	jmp    429050 <flatcc_json_parser_union_type_vector@@Base+0x494>
  428dc7:	mov    BYTE PTR [rbp-0x61],0x0
  428dcb:	movzx  eax,BYTE PTR [rbp-0x61]
  428dcf:	movzx  edx,al
  428dd2:	mov    rax,QWORD PTR [rbp-0x40]
  428dd6:	mov    esi,edx
  428dd8:	mov    rdi,rax
  428ddb:	call   4228fc <flatcc_verify_union_vector_field@@Base+0x1f3>
  428de0:	lea    rcx,[rbp-0x60]
  428de4:	mov    rdx,QWORD PTR [rbp-0x88]
  428deb:	mov    rsi,QWORD PTR [rbp-0x80]
  428def:	mov    rax,QWORD PTR [rbp-0x78]
  428df3:	mov    rdi,rax
  428df6:	call   422eb8 <flatcc_verify_union_vector_field@@Base+0x7af>
  428dfb:	mov    QWORD PTR [rbp-0x80],rax
  428dff:	mov    eax,DWORD PTR [rbp-0x60]
  428e02:	test   eax,eax
  428e04:	jne    428cde <flatcc_json_parser_union_type_vector@@Base+0x122>
  428e0a:	mov    rax,QWORD PTR [rbp-0x78]
  428e0e:	mov    rax,QWORD PTR [rax]
  428e11:	mov    rdi,rax
  428e14:	call   41e824 <flatcc_builder_vector_count@@Base>
  428e19:	mov    DWORD PTR [rbp-0x5c],eax
  428e1c:	mov    rax,QWORD PTR [rbp-0x48]
  428e20:	mov    edx,DWORD PTR [rbp-0x5c]
  428e23:	mov    DWORD PTR [rax+0x18],edx
  428e26:	mov    eax,DWORD PTR [rbp-0x5c]
  428e29:	mov    QWORD PTR [rbp-0x30],rax
  428e2d:	mov    rax,QWORD PTR [rbp-0x78]
  428e31:	mov    rax,QWORD PTR [rax]
  428e34:	mov    rdx,QWORD PTR [rbp-0x30]
  428e38:	mov    rsi,rdx
  428e3b:	mov    rdi,rax
  428e3e:	call   41b9b4 <flatcc_builder_enter_user_frame@@Base>
  428e43:	mov    QWORD PTR [rbp-0x28],rax
  428e47:	mov    rax,QWORD PTR [rbp-0x78]
  428e4b:	mov    rax,QWORD PTR [rax]
  428e4e:	mov    rdx,QWORD PTR [rbp-0x28]
  428e52:	mov    rsi,rdx
  428e55:	mov    rdi,rax
  428e58:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428e5d:	mov    QWORD PTR [rbp-0x20],rax
  428e61:	mov    rax,QWORD PTR [rbp-0x78]
  428e65:	mov    rax,QWORD PTR [rax]
  428e68:	mov    rdi,rax
  428e6b:	call   41e83b <flatcc_builder_vector_edit@@Base>
  428e70:	mov    rcx,rax
  428e73:	mov    rdx,QWORD PTR [rbp-0x30]
  428e77:	mov    rax,QWORD PTR [rbp-0x20]
  428e7b:	mov    rsi,rcx
  428e7e:	mov    rdi,rax
  428e81:	call   4050f0 <memcpy@plt>
  428e86:	mov    rax,QWORD PTR [rbp-0x78]
  428e8a:	mov    rax,QWORD PTR [rax]
  428e8d:	mov    rdi,rax
  428e90:	call   41e773 <flatcc_builder_end_vector@@Base>
  428e95:	mov    DWORD PTR [rbp-0x58],eax
  428e98:	cmp    DWORD PTR [rbp-0x58],0x0
  428e9c:	je     429030 <flatcc_json_parser_union_type_vector@@Base+0x474>
  428ea2:	movzx  eax,WORD PTR [rbp-0x94]
  428ea9:	lea    edx,[rax-0x1]
  428eac:	mov    rax,QWORD PTR [rbp-0x78]
  428eb0:	mov    rax,QWORD PTR [rax]
  428eb3:	mov    esi,edx
  428eb5:	mov    rdi,rax
  428eb8:	call   41fb09 <flatcc_builder_table_add_offset@@Base>
  428ebd:	mov    QWORD PTR [rbp-0x18],rax
  428ec1:	cmp    QWORD PTR [rbp-0x18],0x0
  428ec6:	je     429033 <flatcc_json_parser_union_type_vector@@Base+0x477>
  428ecc:	mov    rax,QWORD PTR [rbp-0x18]
  428ed0:	mov    edx,DWORD PTR [rbp-0x58]
  428ed3:	mov    DWORD PTR [rax],edx
  428ed5:	mov    rax,QWORD PTR [rbp-0x78]
  428ed9:	mov    rax,QWORD PTR [rax]
  428edc:	mov    rdx,QWORD PTR [rbp-0xa0]
  428ee3:	mov    rsi,rdx
  428ee6:	mov    rdi,rax
  428ee9:	call   41bb89 <flatcc_builder_get_user_frame_ptr@@Base>
  428eee:	mov    QWORD PTR [rbp-0x50],rax
  428ef2:	mov    rax,QWORD PTR [rbp-0x50]
  428ef6:	lea    rcx,[rax+0x10]
  428efa:	mov    rdx,QWORD PTR [rbp-0x90]
  428f01:	mov    rax,rdx
  428f04:	shl    rax,0x2
  428f08:	add    rax,rdx
  428f0b:	shl    rax,0x3
  428f0f:	add    rax,rcx
  428f12:	mov    QWORD PTR [rbp-0x48],rax
  428f16:	mov    rax,QWORD PTR [rbp-0x48]
  428f1a:	mov    rdx,QWORD PTR [rbp-0x28]
  428f1e:	mov    QWORD PTR [rax+0x20],rdx
  428f22:	mov    rax,QWORD PTR [rbp-0x48]
  428f26:	mov    rax,QWORD PTR [rax]
  428f29:	test   rax,rax
  428f2c:	jne    428f4b <flatcc_json_parser_union_type_vector@@Base+0x38f>
  428f2e:	mov    rax,QWORD PTR [rbp-0x50]
  428f32:	mov    rax,QWORD PTR [rax+0x8]
  428f36:	lea    rdx,[rax+0x1]
  428f3a:	mov    rax,QWORD PTR [rbp-0x50]
  428f3e:	mov    QWORD PTR [rax+0x8],rdx
  428f42:	mov    rax,QWORD PTR [rbp-0x80]
  428f46:	jmp    429050 <flatcc_json_parser_union_type_vector@@Base+0x494>
  428f4b:	mov    rax,QWORD PTR [rbp-0x50]
  428f4f:	mov    rax,QWORD PTR [rax+0x8]
  428f53:	test   rax,rax
  428f56:	jne    428f77 <flatcc_json_parser_union_type_vector@@Base+0x3bb>
  428f58:	lea    rcx,[rip+0x135a1]        # 43c500 <flatcc_builder_padding_base@@Base+0x2580>
  428f5f:	mov    edx,0x462
  428f64:	lea    rsi,[rip+0x1304d]        # 43bfb8 <flatcc_builder_padding_base@@Base+0x2038>
  428f6b:	lea    rdi,[rip+0x130aa]        # 43c01c <flatcc_builder_padding_base@@Base+0x209c>
  428f72:	call   405080 <__assert_fail@plt>
  428f77:	mov    rax,QWORD PTR [rbp-0x50]
  428f7b:	mov    rax,QWORD PTR [rax+0x8]
  428f7f:	lea    rdx,[rax-0x1]
  428f83:	mov    rax,QWORD PTR [rbp-0x50]
  428f87:	mov    QWORD PTR [rax+0x8],rdx
  428f8b:	mov    rax,QWORD PTR [rbp-0x78]
  428f8f:	mov    eax,DWORD PTR [rax+0x18]
  428f92:	mov    DWORD PTR [rbp-0x54],eax
  428f95:	mov    rax,QWORD PTR [rbp-0x78]
  428f99:	mov    rax,QWORD PTR [rax+0x8]
  428f9d:	mov    QWORD PTR [rbp-0x10],rax
  428fa1:	mov    rax,QWORD PTR [rbp-0x48]
  428fa5:	mov    edx,DWORD PTR [rax+0x10]
  428fa8:	mov    rax,QWORD PTR [rbp-0x78]
  428fac:	mov    DWORD PTR [rax+0x18],edx
  428faf:	mov    rax,QWORD PTR [rbp-0x48]
  428fb3:	mov    rdx,QWORD PTR [rax+0x8]
  428fb7:	mov    rax,QWORD PTR [rbp-0x78]
  428fbb:	mov    QWORD PTR [rax+0x8],rdx
  428fbf:	movzx  r8d,WORD PTR [rbp-0x94]
  428fc7:	mov    rax,QWORD PTR [rbp-0x48]
  428fcb:	mov    rsi,QWORD PTR [rax]
  428fce:	mov    edi,DWORD PTR [rbp-0x5c]
  428fd1:	mov    rcx,QWORD PTR [rbp-0x28]
  428fd5:	mov    rdx,QWORD PTR [rbp-0x88]
  428fdc:	mov    rax,QWORD PTR [rbp-0x78]
  428fe0:	sub    rsp,0x8
  428fe4:	push   QWORD PTR [rbp-0xb0]
  428fea:	mov    r9d,r8d
  428fed:	mov    r8d,edi
  428ff0:	mov    rdi,rax
  428ff3:	call   428853 <flatcc_json_parser_union_type@@Base+0x25b>
  428ff8:	add    rsp,0x10
  428ffc:	cmp    rax,QWORD PTR [rbp-0x88]
  429003:	jne    42900e <flatcc_json_parser_union_type_vector@@Base+0x452>
  429005:	mov    rax,QWORD PTR [rbp-0x88]
  42900c:	jmp    429050 <flatcc_json_parser_union_type_vector@@Base+0x494>
  42900e:	mov    rax,QWORD PTR [rbp-0x78]
  429012:	mov    edx,DWORD PTR [rbp-0x54]
  429015:	mov    DWORD PTR [rax+0x18],edx
  429018:	mov    rax,QWORD PTR [rbp-0x78]
  42901c:	mov    rdx,QWORD PTR [rbp-0x10]
  429020:	mov    QWORD PTR [rax+0x8],rdx
  429024:	mov    rax,QWORD PTR [rbp-0x80]
  429028:	jmp    429050 <flatcc_json_parser_union_type_vector@@Base+0x494>
  42902a:	nop
  42902b:	jmp    429034 <flatcc_json_parser_union_type_vector@@Base+0x478>
  42902d:	nop
  42902e:	jmp    429034 <flatcc_json_parser_union_type_vector@@Base+0x478>
  429030:	nop
  429031:	jmp    429034 <flatcc_json_parser_union_type_vector@@Base+0x478>
  429033:	nop
  429034:	mov    rdx,QWORD PTR [rbp-0x88]
  42903b:	mov    rsi,QWORD PTR [rbp-0x80]
  42903f:	mov    rax,QWORD PTR [rbp-0x78]
  429043:	mov    ecx,0x21
  429048:	mov    rdi,rax
  42904b:	call   42665a <flatcc_json_parser_set_error@@Base>
  429050:	mov    rcx,QWORD PTR [rbp-0x8]
  429054:	xor    rcx,QWORD PTR fs:0x28
  42905d:	je     429064 <flatcc_json_parser_union_type_vector@@Base+0x4a8>
  42905f:	call   405070 <__stack_chk_fail@plt>
  429064:	leave  
  429065:	ret    

0000000000429066 <flatcc_json_parser_table_as_root@@Base>:
  429066:	push   rbp
  429067:	mov    rbp,rsp
  42906a:	sub    rsp,0xa0
  429071:	mov    QWORD PTR [rbp-0x68],rdi
  429075:	mov    QWORD PTR [rbp-0x70],rsi
  429079:	mov    QWORD PTR [rbp-0x78],rdx
  42907d:	mov    QWORD PTR [rbp-0x80],rcx
  429081:	mov    DWORD PTR [rbp-0x84],r8d
  429088:	mov    QWORD PTR [rbp-0x90],r9
  42908f:	mov    rax,QWORD PTR [rbp+0x10]
  429093:	mov    QWORD PTR [rbp-0x98],rax
  42909a:	mov    rax,QWORD PTR fs:0x28
  4290a3:	mov    QWORD PTR [rbp-0x8],rax
  4290a7:	xor    eax,eax
  4290a9:	mov    eax,DWORD PTR [rbp-0x84]
  4290af:	and    eax,0x4
  4290b2:	test   eax,eax
  4290b4:	je     4290bd <flatcc_json_parser_table_as_root@@Base+0x57>
  4290b6:	mov    eax,0x2
  4290bb:	jmp    4290c2 <flatcc_json_parser_table_as_root@@Base+0x5c>
  4290bd:	mov    eax,0x0
  4290c2:	mov    DWORD PTR [rbp-0x54],eax
  4290c5:	cmp    QWORD PTR [rbp-0x70],0x0
  4290ca:	jne    4290d2 <flatcc_json_parser_table_as_root@@Base+0x6c>
  4290cc:	lea    rax,[rbp-0x50]
  4290d0:	jmp    4290d6 <flatcc_json_parser_table_as_root@@Base+0x70>
  4290d2:	mov    rax,QWORD PTR [rbp-0x70]
  4290d6:	mov    QWORD PTR [rbp-0x70],rax
  4290da:	mov    rdx,QWORD PTR [rbp-0x78]
  4290de:	mov    rax,QWORD PTR [rbp-0x80]
  4290e2:	lea    rcx,[rdx+rax*1]
  4290e6:	mov    edi,DWORD PTR [rbp-0x84]
  4290ec:	mov    rdx,QWORD PTR [rbp-0x78]
  4290f0:	mov    rsi,QWORD PTR [rbp-0x68]
  4290f4:	mov    rax,QWORD PTR [rbp-0x70]
  4290f8:	mov    r8d,edi
  4290fb:	mov    rdi,rax
  4290fe:	call   422923 <flatcc_verify_union_vector_field@@Base+0x21a>
  429103:	mov    edx,DWORD PTR [rbp-0x54]
  429106:	mov    rsi,QWORD PTR [rbp-0x90]
  42910d:	mov    rax,QWORD PTR [rbp-0x68]
  429111:	mov    ecx,edx
  429113:	mov    edx,0x0
  429118:	mov    rdi,rax
  42911b:	call   41ca72 <flatcc_builder_start_buffer@@Base>
  429120:	test   eax,eax
  429122:	je     42912b <flatcc_json_parser_table_as_root@@Base+0xc5>
  429124:	mov    eax,0xffffffff
  429129:	jmp    429193 <flatcc_json_parser_table_as_root@@Base+0x12d>
  42912b:	mov    rdx,QWORD PTR [rbp-0x78]
  42912f:	mov    rax,QWORD PTR [rbp-0x80]
  429133:	lea    r8,[rdx+rax*1]
  429137:	lea    rdx,[rbp-0x58]
  42913b:	mov    rsi,QWORD PTR [rbp-0x78]
  42913f:	mov    rdi,QWORD PTR [rbp-0x70]
  429143:	mov    rax,QWORD PTR [rbp-0x98]
  42914a:	mov    rcx,rdx
  42914d:	mov    rdx,r8
  429150:	call   rax
  429152:	mov    rax,QWORD PTR [rbp-0x70]
  429156:	mov    eax,DWORD PTR [rax+0x20]
  429159:	test   eax,eax
  42915b:	je     429166 <flatcc_json_parser_table_as_root@@Base+0x100>
  42915d:	mov    rax,QWORD PTR [rbp-0x70]
  429161:	mov    eax,DWORD PTR [rax+0x20]
  429164:	jmp    429193 <flatcc_json_parser_table_as_root@@Base+0x12d>
  429166:	mov    edx,DWORD PTR [rbp-0x58]
  429169:	mov    rax,QWORD PTR [rbp-0x68]
  42916d:	mov    esi,edx
  42916f:	mov    rdi,rax
  429172:	call   41cbbb <flatcc_builder_end_buffer@@Base>
  429177:	test   eax,eax
  429179:	jne    429182 <flatcc_json_parser_table_as_root@@Base+0x11c>
  42917b:	mov    eax,0xffffffff
  429180:	jmp    429193 <flatcc_json_parser_table_as_root@@Base+0x12d>
  429182:	mov    rax,QWORD PTR [rbp-0x70]
  429186:	mov    rdx,QWORD PTR [rbp-0x78]
  42918a:	mov    QWORD PTR [rax+0x40],rdx
  42918e:	mov    eax,0x0
  429193:	mov    rcx,QWORD PTR [rbp-0x8]
  429197:	xor    rcx,QWORD PTR fs:0x28
  4291a0:	je     4291a7 <flatcc_json_parser_table_as_root@@Base+0x141>
  4291a2:	call   405070 <__stack_chk_fail@plt>
  4291a7:	leave  
  4291a8:	ret    

00000000004291a9 <flatcc_json_parser_struct_as_root@@Base>:
  4291a9:	push   rbp
  4291aa:	mov    rbp,rsp
  4291ad:	sub    rsp,0xa0
  4291b4:	mov    QWORD PTR [rbp-0x68],rdi
  4291b8:	mov    QWORD PTR [rbp-0x70],rsi
  4291bc:	mov    QWORD PTR [rbp-0x78],rdx
  4291c0:	mov    QWORD PTR [rbp-0x80],rcx
  4291c4:	mov    DWORD PTR [rbp-0x84],r8d
  4291cb:	mov    QWORD PTR [rbp-0x90],r9
  4291d2:	mov    rax,QWORD PTR [rbp+0x10]
  4291d6:	mov    QWORD PTR [rbp-0x98],rax
  4291dd:	mov    rax,QWORD PTR fs:0x28
  4291e6:	mov    QWORD PTR [rbp-0x8],rax
  4291ea:	xor    eax,eax
  4291ec:	mov    eax,DWORD PTR [rbp-0x84]
  4291f2:	and    eax,0x4
  4291f5:	test   eax,eax
  4291f7:	je     429200 <flatcc_json_parser_struct_as_root@@Base+0x57>
  4291f9:	mov    eax,0x2
  4291fe:	jmp    429205 <flatcc_json_parser_struct_as_root@@Base+0x5c>
  429200:	mov    eax,0x0
  429205:	mov    DWORD PTR [rbp-0x54],eax
  429208:	cmp    QWORD PTR [rbp-0x70],0x0
  42920d:	jne    429215 <flatcc_json_parser_struct_as_root@@Base+0x6c>
  42920f:	lea    rax,[rbp-0x50]
  429213:	jmp    429219 <flatcc_json_parser_struct_as_root@@Base+0x70>
  429215:	mov    rax,QWORD PTR [rbp-0x70]
  429219:	mov    QWORD PTR [rbp-0x70],rax
  42921d:	mov    rdx,QWORD PTR [rbp-0x78]
  429221:	mov    rax,QWORD PTR [rbp-0x80]
  429225:	lea    rcx,[rdx+rax*1]
  429229:	mov    edi,DWORD PTR [rbp-0x84]
  42922f:	mov    rdx,QWORD PTR [rbp-0x78]
  429233:	mov    rsi,QWORD PTR [rbp-0x68]
  429237:	mov    rax,QWORD PTR [rbp-0x70]
  42923b:	mov    r8d,edi
  42923e:	mov    rdi,rax
  429241:	call   422923 <flatcc_verify_union_vector_field@@Base+0x21a>
  429246:	mov    edx,DWORD PTR [rbp-0x54]
  429249:	mov    rsi,QWORD PTR [rbp-0x90]
  429250:	mov    rax,QWORD PTR [rbp-0x68]
  429254:	mov    ecx,edx
  429256:	mov    edx,0x0
  42925b:	mov    rdi,rax
  42925e:	call   41ca72 <flatcc_builder_start_buffer@@Base>
  429263:	test   eax,eax
  429265:	je     42926e <flatcc_json_parser_struct_as_root@@Base+0xc5>
  429267:	mov    eax,0xffffffff
  42926c:	jmp    4292d6 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  42926e:	mov    rdx,QWORD PTR [rbp-0x78]
  429272:	mov    rax,QWORD PTR [rbp-0x80]
  429276:	lea    r8,[rdx+rax*1]
  42927a:	lea    rdx,[rbp-0x58]
  42927e:	mov    rsi,QWORD PTR [rbp-0x78]
  429282:	mov    rdi,QWORD PTR [rbp-0x70]
  429286:	mov    rax,QWORD PTR [rbp-0x98]
  42928d:	mov    rcx,rdx
  429290:	mov    rdx,r8
  429293:	call   rax
  429295:	mov    rax,QWORD PTR [rbp-0x70]
  429299:	mov    eax,DWORD PTR [rax+0x20]
  42929c:	test   eax,eax
  42929e:	je     4292a9 <flatcc_json_parser_struct_as_root@@Base+0x100>
  4292a0:	mov    rax,QWORD PTR [rbp-0x70]
  4292a4:	mov    eax,DWORD PTR [rax+0x20]
  4292a7:	jmp    4292d6 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  4292a9:	mov    edx,DWORD PTR [rbp-0x58]
  4292ac:	mov    rax,QWORD PTR [rbp-0x68]
  4292b0:	mov    esi,edx
  4292b2:	mov    rdi,rax
  4292b5:	call   41cbbb <flatcc_builder_end_buffer@@Base>
  4292ba:	test   eax,eax
  4292bc:	jne    4292c5 <flatcc_json_parser_struct_as_root@@Base+0x11c>
  4292be:	mov    eax,0xffffffff
  4292c3:	jmp    4292d6 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  4292c5:	mov    rax,QWORD PTR [rbp-0x70]
  4292c9:	mov    rdx,QWORD PTR [rbp-0x78]
  4292cd:	mov    QWORD PTR [rax+0x40],rdx
  4292d1:	mov    eax,0x0
  4292d6:	mov    rcx,QWORD PTR [rbp-0x8]
  4292da:	xor    rcx,QWORD PTR fs:0x28
  4292e3:	je     4292ea <flatcc_json_parser_struct_as_root@@Base+0x141>
  4292e5:	call   405070 <__stack_chk_fail@plt>
  4292ea:	leave  
  4292eb:	ret    
  4292ec:	push   rbp
  4292ed:	mov    rbp,rsp
  4292f0:	mov    eax,edi
  4292f2:	mov    BYTE PTR [rbp-0x4],al
  4292f5:	movzx  eax,BYTE PTR [rbp-0x4]
  4292f9:	pop    rbp
  4292fa:	ret    
  4292fb:	push   rbp
  4292fc:	mov    rbp,rsp
  4292ff:	sub    rsp,0x8
  429303:	mov    QWORD PTR [rbp-0x8],rdi
  429307:	mov    rax,QWORD PTR [rbp-0x8]
  42930b:	movzx  eax,BYTE PTR [rax]
  42930e:	movzx  eax,al
  429311:	mov    edi,eax
  429313:	call   4292ec <flatcc_json_parser_struct_as_root@@Base+0x143>
  429318:	leave  
  429319:	ret    
  42931a:	push   rbp
  42931b:	mov    rbp,rsp
  42931e:	mov    eax,edi
  429320:	mov    WORD PTR [rbp-0x4],ax
  429324:	movzx  eax,WORD PTR [rbp-0x4]
  429328:	pop    rbp
  429329:	ret    
  42932a:	push   rbp
  42932b:	mov    rbp,rsp
  42932e:	sub    rsp,0x8
  429332:	mov    QWORD PTR [rbp-0x8],rdi
  429336:	mov    rax,QWORD PTR [rbp-0x8]
  42933a:	movzx  eax,WORD PTR [rax]
  42933d:	movzx  eax,ax
  429340:	mov    edi,eax
  429342:	call   42931a <flatcc_json_parser_struct_as_root@@Base+0x171>
  429347:	leave  
  429348:	ret    
  429349:	push   rbp
  42934a:	mov    rbp,rsp
  42934d:	mov    DWORD PTR [rbp-0x4],edi
  429350:	mov    eax,DWORD PTR [rbp-0x4]
  429353:	pop    rbp
  429354:	ret    
  429355:	push   rbp
  429356:	mov    rbp,rsp
  429359:	sub    rsp,0x8
  42935d:	mov    QWORD PTR [rbp-0x8],rdi
  429361:	mov    rax,QWORD PTR [rbp-0x8]
  429365:	mov    eax,DWORD PTR [rax]
  429367:	mov    edi,eax
  429369:	call   429349 <flatcc_json_parser_struct_as_root@@Base+0x1a0>
  42936e:	leave  
  42936f:	ret    
  429370:	push   rbp
  429371:	mov    rbp,rsp
  429374:	mov    QWORD PTR [rbp-0x8],rdi
  429378:	mov    rax,QWORD PTR [rbp-0x8]
  42937c:	pop    rbp
  42937d:	ret    
  42937e:	push   rbp
  42937f:	mov    rbp,rsp
  429382:	sub    rsp,0x8
  429386:	mov    QWORD PTR [rbp-0x8],rdi
  42938a:	mov    rax,QWORD PTR [rbp-0x8]
  42938e:	mov    rax,QWORD PTR [rax]
  429391:	mov    rdi,rax
  429394:	call   429370 <flatcc_json_parser_struct_as_root@@Base+0x1c7>
  429399:	leave  
  42939a:	ret    
  42939b:	push   rbp
  42939c:	mov    rbp,rsp
  42939f:	mov    eax,edi
  4293a1:	mov    BYTE PTR [rbp-0x4],al
  4293a4:	movzx  eax,BYTE PTR [rbp-0x4]
  4293a8:	pop    rbp
  4293a9:	ret    
  4293aa:	push   rbp
  4293ab:	mov    rbp,rsp
  4293ae:	sub    rsp,0x8
  4293b2:	mov    QWORD PTR [rbp-0x8],rdi
  4293b6:	mov    rax,QWORD PTR [rbp-0x8]
  4293ba:	movzx  eax,BYTE PTR [rax]
  4293bd:	movsx  eax,al
  4293c0:	mov    edi,eax
  4293c2:	call   42939b <flatcc_json_parser_struct_as_root@@Base+0x1f2>
  4293c7:	leave  
  4293c8:	ret    
  4293c9:	push   rbp
  4293ca:	mov    rbp,rsp
  4293cd:	mov    eax,edi
  4293cf:	mov    WORD PTR [rbp-0x4],ax
  4293d3:	movzx  eax,WORD PTR [rbp-0x4]
  4293d7:	pop    rbp
  4293d8:	ret    
  4293d9:	push   rbp
  4293da:	mov    rbp,rsp
  4293dd:	sub    rsp,0x8
  4293e1:	mov    QWORD PTR [rbp-0x8],rdi
  4293e5:	mov    rax,QWORD PTR [rbp-0x8]
  4293e9:	movzx  eax,WORD PTR [rax]
  4293ec:	cwde   
  4293ed:	mov    edi,eax
  4293ef:	call   4293c9 <flatcc_json_parser_struct_as_root@@Base+0x220>
  4293f4:	leave  
  4293f5:	ret    
  4293f6:	push   rbp
  4293f7:	mov    rbp,rsp
  4293fa:	mov    DWORD PTR [rbp-0x4],edi
  4293fd:	mov    eax,DWORD PTR [rbp-0x4]
  429400:	pop    rbp
  429401:	ret    
  429402:	push   rbp
  429403:	mov    rbp,rsp
  429406:	sub    rsp,0x8
  42940a:	mov    QWORD PTR [rbp-0x8],rdi
  42940e:	mov    rax,QWORD PTR [rbp-0x8]
  429412:	mov    eax,DWORD PTR [rax]
  429414:	mov    edi,eax
  429416:	call   4293f6 <flatcc_json_parser_struct_as_root@@Base+0x24d>
  42941b:	leave  
  42941c:	ret    
  42941d:	push   rbp
  42941e:	mov    rbp,rsp
  429421:	mov    QWORD PTR [rbp-0x8],rdi
  429425:	mov    rax,QWORD PTR [rbp-0x8]
  429429:	pop    rbp
  42942a:	ret    
  42942b:	push   rbp
  42942c:	mov    rbp,rsp
  42942f:	sub    rsp,0x8
  429433:	mov    QWORD PTR [rbp-0x8],rdi
  429437:	mov    rax,QWORD PTR [rbp-0x8]
  42943b:	mov    rax,QWORD PTR [rax]
  42943e:	mov    rdi,rax
  429441:	call   42941d <flatcc_json_parser_struct_as_root@@Base+0x274>
  429446:	leave  
  429447:	ret    
  429448:	push   rbp
  429449:	mov    rbp,rsp
  42944c:	vmovss DWORD PTR [rbp-0x14],xmm0
  429451:	vmovss xmm0,DWORD PTR [rbp-0x14]
  429456:	vmovss DWORD PTR [rbp-0x4],xmm0
  42945b:	mov    eax,DWORD PTR [rbp-0x4]
  42945e:	mov    DWORD PTR [rbp-0x4],eax
  429461:	vmovss xmm0,DWORD PTR [rbp-0x4]
  429466:	pop    rbp
  429467:	ret    
  429468:	push   rbp
  429469:	mov    rbp,rsp
  42946c:	sub    rsp,0x10
  429470:	mov    QWORD PTR [rbp-0x8],rdi
  429474:	mov    rax,QWORD PTR [rbp-0x8]
  429478:	mov    eax,DWORD PTR [rax]
  42947a:	mov    DWORD PTR [rbp-0xc],eax
  42947d:	vmovss xmm0,DWORD PTR [rbp-0xc]
  429482:	call   429448 <flatcc_json_parser_struct_as_root@@Base+0x29f>
  429487:	leave  
  429488:	ret    
  429489:	push   rbp
  42948a:	mov    rbp,rsp
  42948d:	vmovsd QWORD PTR [rbp-0x18],xmm0
  429492:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  429497:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42949c:	mov    rax,QWORD PTR [rbp-0x8]
  4294a0:	mov    QWORD PTR [rbp-0x8],rax
  4294a4:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4294a9:	pop    rbp
  4294aa:	ret    
  4294ab:	push   rbp
  4294ac:	mov    rbp,rsp
  4294af:	sub    rsp,0x10
  4294b3:	mov    QWORD PTR [rbp-0x8],rdi
  4294b7:	mov    rax,QWORD PTR [rbp-0x8]
  4294bb:	mov    rax,QWORD PTR [rax]
  4294be:	mov    QWORD PTR [rbp-0x10],rax
  4294c2:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4294c7:	call   429489 <flatcc_json_parser_struct_as_root@@Base+0x2e0>
  4294cc:	vmovq  rax,xmm0
  4294d1:	mov    QWORD PTR [rbp-0x10],rax
  4294d5:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4294da:	leave  
  4294db:	ret    
  4294dc:	push   rbp
  4294dd:	mov    rbp,rsp
  4294e0:	mov    eax,edi
  4294e2:	mov    BYTE PTR [rbp-0x4],al
  4294e5:	movzx  eax,BYTE PTR [rbp-0x4]
  4294e9:	pop    rbp
  4294ea:	ret    
  4294eb:	push   rbp
  4294ec:	mov    rbp,rsp
  4294ef:	sub    rsp,0x8
  4294f3:	mov    QWORD PTR [rbp-0x8],rdi
  4294f7:	mov    rax,QWORD PTR [rbp-0x8]
  4294fb:	movzx  eax,BYTE PTR [rax]
  4294fe:	movzx  eax,al
  429501:	mov    edi,eax
  429503:	call   4294dc <flatcc_json_parser_struct_as_root@@Base+0x333>
  429508:	leave  
  429509:	ret    
  42950a:	push   rbp
  42950b:	mov    rbp,rsp
  42950e:	mov    DWORD PTR [rbp-0x4],edi
  429511:	mov    eax,DWORD PTR [rbp-0x4]
  429514:	pop    rbp
  429515:	ret    
  429516:	push   rbp
  429517:	mov    rbp,rsp
  42951a:	sub    rsp,0x8
  42951e:	mov    QWORD PTR [rbp-0x8],rdi
  429522:	mov    rax,QWORD PTR [rbp-0x8]
  429526:	mov    eax,DWORD PTR [rax]
  429528:	mov    edi,eax
  42952a:	call   42950a <flatcc_json_parser_struct_as_root@@Base+0x361>
  42952f:	leave  
  429530:	ret    
  429531:	push   rbp
  429532:	mov    rbp,rsp
  429535:	mov    DWORD PTR [rbp-0x4],edi
  429538:	mov    eax,DWORD PTR [rbp-0x4]
  42953b:	pop    rbp
  42953c:	ret    
  42953d:	push   rbp
  42953e:	mov    rbp,rsp
  429541:	sub    rsp,0x8
  429545:	mov    QWORD PTR [rbp-0x8],rdi
  429549:	mov    rax,QWORD PTR [rbp-0x8]
  42954d:	mov    eax,DWORD PTR [rax]
  42954f:	mov    edi,eax
  429551:	call   429531 <flatcc_json_parser_struct_as_root@@Base+0x388>
  429556:	leave  
  429557:	ret    
  429558:	push   rbp
  429559:	mov    rbp,rsp
  42955c:	mov    eax,edi
  42955e:	mov    WORD PTR [rbp-0x4],ax
  429562:	movzx  eax,WORD PTR [rbp-0x4]
  429566:	pop    rbp
  429567:	ret    
  429568:	push   rbp
  429569:	mov    rbp,rsp
  42956c:	sub    rsp,0x8
  429570:	mov    QWORD PTR [rbp-0x8],rdi
  429574:	mov    rax,QWORD PTR [rbp-0x8]
  429578:	movzx  eax,WORD PTR [rax]
  42957b:	movzx  eax,ax
  42957e:	mov    edi,eax
  429580:	call   429558 <flatcc_json_parser_struct_as_root@@Base+0x3af>
  429585:	leave  
  429586:	ret    
  429587:	push   rbp
  429588:	mov    rbp,rsp
  42958b:	mov    eax,edi
  42958d:	mov    BYTE PTR [rbp-0x4],al
  429590:	movzx  eax,BYTE PTR [rbp-0x4]
  429594:	pop    rbp
  429595:	ret    
  429596:	push   rbp
  429597:	mov    rbp,rsp
  42959a:	sub    rsp,0x8
  42959e:	mov    QWORD PTR [rbp-0x8],rdi
  4295a2:	mov    rax,QWORD PTR [rbp-0x8]
  4295a6:	movzx  eax,BYTE PTR [rax]
  4295a9:	movzx  eax,al
  4295ac:	mov    edi,eax
  4295ae:	call   429587 <flatcc_json_parser_struct_as_root@@Base+0x3de>
  4295b3:	leave  
  4295b4:	ret    
  4295b5:	push   rbp
  4295b6:	mov    rbp,rsp
  4295b9:	mov    DWORD PTR [rbp-0x4],edi
  4295bc:	mov    eax,DWORD PTR [rbp-0x4]
  4295bf:	pop    rbp
  4295c0:	ret    
  4295c1:	push   rbp
  4295c2:	mov    rbp,rsp
  4295c5:	mov    DWORD PTR [rbp-0x4],edi
  4295c8:	mov    eax,DWORD PTR [rbp-0x4]
  4295cb:	pop    rbp
  4295cc:	ret    
  4295cd:	push   rbp
  4295ce:	mov    rbp,rsp
  4295d1:	sub    rsp,0x8
  4295d5:	mov    QWORD PTR [rbp-0x8],rdi
  4295d9:	mov    rax,QWORD PTR [rbp-0x8]
  4295dd:	mov    eax,DWORD PTR [rax]
  4295df:	mov    edi,eax
  4295e1:	call   4295b5 <flatcc_json_parser_struct_as_root@@Base+0x40c>
  4295e6:	leave  
  4295e7:	ret    
  4295e8:	push   rbp
  4295e9:	mov    rbp,rsp
  4295ec:	mov    QWORD PTR [rbp-0x8],rdi
  4295f0:	mov    DWORD PTR [rbp-0xc],esi
  4295f3:	mov    rax,QWORD PTR [rbp-0x8]
  4295f7:	mov    eax,DWORD PTR [rax+0x3c]
  4295fa:	test   eax,eax
  4295fc:	jne    429608 <flatcc_json_parser_struct_as_root@@Base+0x45f>
  4295fe:	mov    rax,QWORD PTR [rbp-0x8]
  429602:	mov    edx,DWORD PTR [rbp-0xc]
  429605:	mov    DWORD PTR [rax+0x3c],edx
  429608:	nop
  429609:	pop    rbp
  42960a:	ret    
  42960b:	push   rbp
  42960c:	mov    rbp,rsp
  42960f:	mov    QWORD PTR [rbp-0x8],rdi
  429613:	mov    rax,QWORD PTR [rbp-0x8]
  429617:	mov    eax,DWORD PTR [rax+0x3c]
  42961a:	pop    rbp
  42961b:	ret    
  42961c:	push   rbp
  42961d:	mov    rbp,rsp
  429620:	sub    rsp,0x10
  429624:	mov    QWORD PTR [rbp-0x8],rdi
  429628:	mov    rax,QWORD PTR [rbp-0x8]
  42962c:	mov    rdx,QWORD PTR [rax+0x28]
  429630:	mov    rax,QWORD PTR [rbp-0x8]
  429634:	mov    rax,QWORD PTR [rax+0x20]
  429638:	cmp    rdx,rax
  42963b:	jb     429653 <flatcc_json_parser_struct_as_root@@Base+0x4aa>
  42963d:	mov    rax,QWORD PTR [rbp-0x8]
  429641:	mov    rax,QWORD PTR [rax+0x48]
  429645:	mov    rdx,QWORD PTR [rbp-0x8]
  429649:	mov    esi,0x0
  42964e:	mov    rdi,rdx
  429651:	call   rax
  429653:	nop
  429654:	leave  
  429655:	ret    
  429656:	push   rbp
  429657:	mov    rbp,rsp
  42965a:	sub    rsp,0x10
  42965e:	mov    DWORD PTR [rbp-0x4],edi
  429661:	mov    QWORD PTR [rbp-0x10],rsi
  429665:	cmp    DWORD PTR [rbp-0x4],0x0
  429669:	je     42968a <flatcc_json_parser_struct_as_root@@Base+0x4e1>
  42966b:	mov    rax,QWORD PTR [rbp-0x10]
  42966f:	mov    edx,0x5
  429674:	lea    rsi,[rip+0x130ce]        # 43c749 <flatcc_builder_padding_base@@Base+0x27c9>
  42967b:	mov    rdi,rax
  42967e:	call   4050f0 <memcpy@plt>
  429683:	mov    eax,0x4
  429688:	jmp    4296a7 <flatcc_json_parser_struct_as_root@@Base+0x4fe>
  42968a:	mov    rax,QWORD PTR [rbp-0x10]
  42968e:	mov    edx,0x6
  429693:	lea    rsi,[rip+0x130b5]        # 43c74f <flatcc_builder_padding_base@@Base+0x27cf>
  42969a:	mov    rdi,rax
  42969d:	call   4050f0 <memcpy@plt>
  4296a2:	mov    eax,0x5
  4296a7:	leave  
  4296a8:	ret    
  4296a9:	push   rbp
  4296aa:	mov    rbp,rsp
  4296ad:	mov    eax,edi
  4296af:	mov    QWORD PTR [rbp-0x20],rsi
  4296b3:	mov    BYTE PTR [rbp-0x14],al
  4296b6:	cmp    BYTE PTR [rbp-0x14],0x63
  4296ba:	jbe    429753 <flatcc_json_parser_struct_as_root@@Base+0x5aa>
  4296c0:	add    QWORD PTR [rbp-0x20],0x3
  4296c5:	mov    rax,QWORD PTR [rbp-0x20]
  4296c9:	mov    BYTE PTR [rax],0x0
  4296cc:	sub    QWORD PTR [rbp-0x20],0x2
  4296d1:	movzx  ecx,BYTE PTR [rbp-0x14]
  4296d5:	movzx  edx,cl
  4296d8:	mov    eax,edx
  4296da:	shl    eax,0x2
  4296dd:	add    eax,edx
  4296df:	shl    eax,0x3
  4296e2:	add    eax,edx
  4296e4:	shr    ax,0x8
  4296e8:	shr    al,0x4
  4296eb:	mov    edx,0x64
  4296f0:	imul   eax,edx
  4296f3:	sub    ecx,eax
  4296f5:	mov    eax,ecx
  4296f7:	movzx  eax,al
  4296fa:	add    eax,eax
  4296fc:	movsxd rdx,eax
  4296ff:	lea    rax,[rip+0x12f7a]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429706:	add    rax,rdx
  429709:	mov    QWORD PTR [rbp-0x8],rax
  42970d:	movzx  eax,BYTE PTR [rbp-0x14]
  429711:	movzx  edx,al
  429714:	mov    eax,edx
  429716:	shl    eax,0x2
  429719:	add    eax,edx
  42971b:	shl    eax,0x3
  42971e:	add    eax,edx
  429720:	shr    ax,0x8
  429724:	shr    al,0x4
  429727:	mov    BYTE PTR [rbp-0x14],al
  42972a:	mov    rax,QWORD PTR [rbp-0x8]
  42972e:	movzx  edx,WORD PTR [rax]
  429731:	mov    rax,QWORD PTR [rbp-0x20]
  429735:	mov    WORD PTR [rax],dx
  429738:	mov    rax,QWORD PTR [rbp-0x20]
  42973c:	sub    rax,0x1
  429740:	movzx  edx,BYTE PTR [rbp-0x14]
  429744:	add    edx,0x30
  429747:	mov    BYTE PTR [rax],dl
  429749:	mov    eax,0x3
  42974e:	jmp    4297f7 <flatcc_json_parser_struct_as_root@@Base+0x64e>
  429753:	cmp    BYTE PTR [rbp-0x14],0x9
  429757:	jbe    4297d8 <flatcc_json_parser_struct_as_root@@Base+0x62f>
  429759:	add    QWORD PTR [rbp-0x20],0x2
  42975e:	mov    rax,QWORD PTR [rbp-0x20]
  429762:	mov    BYTE PTR [rax],0x0
  429765:	sub    QWORD PTR [rbp-0x20],0x2
  42976a:	movzx  ecx,BYTE PTR [rbp-0x14]
  42976e:	movzx  edx,cl
  429771:	mov    eax,edx
  429773:	shl    eax,0x2
  429776:	add    eax,edx
  429778:	shl    eax,0x3
  42977b:	add    eax,edx
  42977d:	shr    ax,0x8
  429781:	shr    al,0x4
  429784:	mov    edx,0x64
  429789:	imul   eax,edx
  42978c:	sub    ecx,eax
  42978e:	mov    eax,ecx
  429790:	movzx  eax,al
  429793:	add    eax,eax
  429795:	movsxd rdx,eax
  429798:	lea    rax,[rip+0x12ee1]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42979f:	add    rax,rdx
  4297a2:	mov    QWORD PTR [rbp-0x8],rax
  4297a6:	movzx  eax,BYTE PTR [rbp-0x14]
  4297aa:	movzx  edx,al
  4297ad:	mov    eax,edx
  4297af:	shl    eax,0x2
  4297b2:	add    eax,edx
  4297b4:	shl    eax,0x3
  4297b7:	add    eax,edx
  4297b9:	shr    ax,0x8
  4297bd:	shr    al,0x4
  4297c0:	mov    BYTE PTR [rbp-0x14],al
  4297c3:	mov    rax,QWORD PTR [rbp-0x8]
  4297c7:	movzx  edx,WORD PTR [rax]
  4297ca:	mov    rax,QWORD PTR [rbp-0x20]
  4297ce:	mov    WORD PTR [rax],dx
  4297d1:	mov    eax,0x2
  4297d6:	jmp    4297f7 <flatcc_json_parser_struct_as_root@@Base+0x64e>
  4297d8:	mov    rax,QWORD PTR [rbp-0x20]
  4297dc:	add    rax,0x1
  4297e0:	mov    BYTE PTR [rax],0x0
  4297e3:	movzx  eax,BYTE PTR [rbp-0x14]
  4297e7:	add    eax,0x30
  4297ea:	mov    edx,eax
  4297ec:	mov    rax,QWORD PTR [rbp-0x20]
  4297f0:	mov    BYTE PTR [rax],dl
  4297f2:	mov    eax,0x1
  4297f7:	pop    rbp
  4297f8:	ret    
  4297f9:	push   rbp
  4297fa:	mov    rbp,rsp
  4297fd:	mov    eax,edi
  4297ff:	mov    QWORD PTR [rbp-0x20],rsi
  429803:	mov    WORD PTR [rbp-0x14],ax
  429807:	mov    DWORD PTR [rbp-0xc],0x0
  42980e:	cmp    WORD PTR [rbp-0x14],0x3e7
  429814:	jbe    429830 <flatcc_json_parser_struct_as_root@@Base+0x687>
  429816:	cmp    WORD PTR [rbp-0x14],0x270f
  42981c:	jbe    429827 <flatcc_json_parser_struct_as_root@@Base+0x67e>
  42981e:	mov    DWORD PTR [rbp-0xc],0x5
  429825:	jmp    429857 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  429827:	mov    DWORD PTR [rbp-0xc],0x4
  42982e:	jmp    429857 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  429830:	cmp    WORD PTR [rbp-0x14],0x63
  429835:	jbe    429840 <flatcc_json_parser_struct_as_root@@Base+0x697>
  429837:	mov    DWORD PTR [rbp-0xc],0x3
  42983e:	jmp    429857 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  429840:	cmp    WORD PTR [rbp-0x14],0x9
  429845:	jbe    429850 <flatcc_json_parser_struct_as_root@@Base+0x6a7>
  429847:	mov    DWORD PTR [rbp-0xc],0x2
  42984e:	jmp    429857 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  429850:	mov    DWORD PTR [rbp-0xc],0x1
  429857:	mov    eax,DWORD PTR [rbp-0xc]
  42985a:	cdqe   
  42985c:	add    QWORD PTR [rbp-0x20],rax
  429860:	mov    rax,QWORD PTR [rbp-0x20]
  429864:	mov    BYTE PTR [rax],0x0
  429867:	mov    eax,DWORD PTR [rbp-0xc]
  42986a:	and    eax,0x1
  42986d:	test   eax,eax
  42986f:	je     429996 <flatcc_json_parser_struct_as_root@@Base+0x7ed>
  429875:	mov    eax,DWORD PTR [rbp-0xc]
  429878:	cmp    eax,0x3
  42987b:	je     42990a <flatcc_json_parser_struct_as_root@@Base+0x761>
  429881:	cmp    eax,0x5
  429884:	je     429894 <flatcc_json_parser_struct_as_root@@Base+0x6eb>
  429886:	cmp    eax,0x1
  429889:	je     429980 <flatcc_json_parser_struct_as_root@@Base+0x7d7>
  42988f:	jmp    429a93 <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  429894:	sub    QWORD PTR [rbp-0x20],0x2
  429899:	movzx  ecx,WORD PTR [rbp-0x14]
  42989d:	mov    eax,ecx
  42989f:	shr    ax,0x2
  4298a3:	movzx  eax,ax
  4298a6:	imul   eax,eax,0x147b
  4298ac:	shr    eax,0x10
  4298af:	mov    edx,eax
  4298b1:	shr    dx,1
  4298b4:	mov    eax,edx
  4298b6:	shl    eax,0x2
  4298b9:	add    eax,edx
  4298bb:	lea    edx,[rax*4+0x0]
  4298c2:	add    eax,edx
  4298c4:	shl    eax,0x2
  4298c7:	sub    ecx,eax
  4298c9:	mov    edx,ecx
  4298cb:	movzx  eax,dx
  4298ce:	add    eax,eax
  4298d0:	movsxd rdx,eax
  4298d3:	lea    rax,[rip+0x12da6]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  4298da:	add    rax,rdx
  4298dd:	mov    QWORD PTR [rbp-0x8],rax
  4298e1:	movzx  eax,WORD PTR [rbp-0x14]
  4298e5:	shr    ax,0x2
  4298e9:	movzx  eax,ax
  4298ec:	imul   eax,eax,0x147b
  4298f2:	shr    eax,0x10
  4298f5:	shr    ax,1
  4298f8:	mov    WORD PTR [rbp-0x14],ax
  4298fc:	mov    rax,QWORD PTR [rbp-0x8]
  429900:	movzx  edx,WORD PTR [rax]
  429903:	mov    rax,QWORD PTR [rbp-0x20]
  429907:	mov    WORD PTR [rax],dx
  42990a:	sub    QWORD PTR [rbp-0x20],0x2
  42990f:	movzx  ecx,WORD PTR [rbp-0x14]
  429913:	mov    eax,ecx
  429915:	shr    ax,0x2
  429919:	movzx  eax,ax
  42991c:	imul   eax,eax,0x147b
  429922:	shr    eax,0x10
  429925:	mov    edx,eax
  429927:	shr    dx,1
  42992a:	mov    eax,edx
  42992c:	shl    eax,0x2
  42992f:	add    eax,edx
  429931:	lea    edx,[rax*4+0x0]
  429938:	add    eax,edx
  42993a:	shl    eax,0x2
  42993d:	sub    ecx,eax
  42993f:	mov    edx,ecx
  429941:	movzx  eax,dx
  429944:	add    eax,eax
  429946:	movsxd rdx,eax
  429949:	lea    rax,[rip+0x12d30]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429950:	add    rax,rdx
  429953:	mov    QWORD PTR [rbp-0x8],rax
  429957:	movzx  eax,WORD PTR [rbp-0x14]
  42995b:	shr    ax,0x2
  42995f:	movzx  eax,ax
  429962:	imul   eax,eax,0x147b
  429968:	shr    eax,0x10
  42996b:	shr    ax,1
  42996e:	mov    WORD PTR [rbp-0x14],ax
  429972:	mov    rax,QWORD PTR [rbp-0x8]
  429976:	movzx  edx,WORD PTR [rax]
  429979:	mov    rax,QWORD PTR [rbp-0x20]
  42997d:	mov    WORD PTR [rax],dx
  429980:	mov    rax,QWORD PTR [rbp-0x20]
  429984:	sub    rax,0x1
  429988:	movzx  edx,WORD PTR [rbp-0x14]
  42998c:	add    edx,0x30
  42998f:	mov    BYTE PTR [rax],dl
  429991:	jmp    429a93 <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  429996:	mov    eax,DWORD PTR [rbp-0xc]
  429999:	cmp    eax,0x2
  42999c:	je     429a1d <flatcc_json_parser_struct_as_root@@Base+0x874>
  42999e:	cmp    eax,0x4
  4299a1:	jne    429a93 <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  4299a7:	sub    QWORD PTR [rbp-0x20],0x2
  4299ac:	movzx  ecx,WORD PTR [rbp-0x14]
  4299b0:	mov    eax,ecx
  4299b2:	shr    ax,0x2
  4299b6:	movzx  eax,ax
  4299b9:	imul   eax,eax,0x147b
  4299bf:	shr    eax,0x10
  4299c2:	mov    edx,eax
  4299c4:	shr    dx,1
  4299c7:	mov    eax,edx
  4299c9:	shl    eax,0x2
  4299cc:	add    eax,edx
  4299ce:	lea    edx,[rax*4+0x0]
  4299d5:	add    eax,edx
  4299d7:	shl    eax,0x2
  4299da:	sub    ecx,eax
  4299dc:	mov    edx,ecx
  4299de:	movzx  eax,dx
  4299e1:	add    eax,eax
  4299e3:	movsxd rdx,eax
  4299e6:	lea    rax,[rip+0x12c93]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  4299ed:	add    rax,rdx
  4299f0:	mov    QWORD PTR [rbp-0x8],rax
  4299f4:	movzx  eax,WORD PTR [rbp-0x14]
  4299f8:	shr    ax,0x2
  4299fc:	movzx  eax,ax
  4299ff:	imul   eax,eax,0x147b
  429a05:	shr    eax,0x10
  429a08:	shr    ax,1
  429a0b:	mov    WORD PTR [rbp-0x14],ax
  429a0f:	mov    rax,QWORD PTR [rbp-0x8]
  429a13:	movzx  edx,WORD PTR [rax]
  429a16:	mov    rax,QWORD PTR [rbp-0x20]
  429a1a:	mov    WORD PTR [rax],dx
  429a1d:	sub    QWORD PTR [rbp-0x20],0x2
  429a22:	movzx  ecx,WORD PTR [rbp-0x14]
  429a26:	mov    eax,ecx
  429a28:	shr    ax,0x2
  429a2c:	movzx  eax,ax
  429a2f:	imul   eax,eax,0x147b
  429a35:	shr    eax,0x10
  429a38:	mov    edx,eax
  429a3a:	shr    dx,1
  429a3d:	mov    eax,edx
  429a3f:	shl    eax,0x2
  429a42:	add    eax,edx
  429a44:	lea    edx,[rax*4+0x0]
  429a4b:	add    eax,edx
  429a4d:	shl    eax,0x2
  429a50:	sub    ecx,eax
  429a52:	mov    edx,ecx
  429a54:	movzx  eax,dx
  429a57:	add    eax,eax
  429a59:	movsxd rdx,eax
  429a5c:	lea    rax,[rip+0x12c1d]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429a63:	add    rax,rdx
  429a66:	mov    QWORD PTR [rbp-0x8],rax
  429a6a:	movzx  eax,WORD PTR [rbp-0x14]
  429a6e:	shr    ax,0x2
  429a72:	movzx  eax,ax
  429a75:	imul   eax,eax,0x147b
  429a7b:	shr    eax,0x10
  429a7e:	shr    ax,1
  429a81:	mov    WORD PTR [rbp-0x14],ax
  429a85:	mov    rax,QWORD PTR [rbp-0x8]
  429a89:	movzx  edx,WORD PTR [rax]
  429a8c:	mov    rax,QWORD PTR [rbp-0x20]
  429a90:	mov    WORD PTR [rax],dx
  429a93:	mov    eax,DWORD PTR [rbp-0xc]
  429a96:	pop    rbp
  429a97:	ret    
  429a98:	push   rbp
  429a99:	mov    rbp,rsp
  429a9c:	mov    DWORD PTR [rbp-0x14],edi
  429a9f:	mov    QWORD PTR [rbp-0x20],rsi
  429aa3:	mov    DWORD PTR [rbp-0xc],0x0
  429aaa:	cmp    DWORD PTR [rbp-0x14],0x270f
  429ab1:	jbe    429b16 <flatcc_json_parser_struct_as_root@@Base+0x96d>
  429ab3:	cmp    DWORD PTR [rbp-0x14],0x98967f
  429aba:	jbe    429ae9 <flatcc_json_parser_struct_as_root@@Base+0x940>
  429abc:	cmp    DWORD PTR [rbp-0x14],0x3b9ac9ff
  429ac3:	jbe    429ace <flatcc_json_parser_struct_as_root@@Base+0x925>
  429ac5:	mov    DWORD PTR [rbp-0xc],0xa
  429acc:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429ace:	cmp    DWORD PTR [rbp-0x14],0x5f5e0ff
  429ad5:	jbe    429ae0 <flatcc_json_parser_struct_as_root@@Base+0x937>
  429ad7:	mov    DWORD PTR [rbp-0xc],0x9
  429ade:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429ae0:	mov    DWORD PTR [rbp-0xc],0x8
  429ae7:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429ae9:	cmp    DWORD PTR [rbp-0x14],0xf423f
  429af0:	jbe    429afb <flatcc_json_parser_struct_as_root@@Base+0x952>
  429af2:	mov    DWORD PTR [rbp-0xc],0x7
  429af9:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429afb:	cmp    DWORD PTR [rbp-0x14],0x1869f
  429b02:	jbe    429b0d <flatcc_json_parser_struct_as_root@@Base+0x964>
  429b04:	mov    DWORD PTR [rbp-0xc],0x6
  429b0b:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429b0d:	mov    DWORD PTR [rbp-0xc],0x5
  429b14:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429b16:	cmp    DWORD PTR [rbp-0x14],0x63
  429b1a:	jbe    429b37 <flatcc_json_parser_struct_as_root@@Base+0x98e>
  429b1c:	cmp    DWORD PTR [rbp-0x14],0x3e7
  429b23:	jbe    429b2e <flatcc_json_parser_struct_as_root@@Base+0x985>
  429b25:	mov    DWORD PTR [rbp-0xc],0x4
  429b2c:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429b2e:	mov    DWORD PTR [rbp-0xc],0x3
  429b35:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429b37:	cmp    DWORD PTR [rbp-0x14],0x9
  429b3b:	jbe    429b46 <flatcc_json_parser_struct_as_root@@Base+0x99d>
  429b3d:	mov    DWORD PTR [rbp-0xc],0x2
  429b44:	jmp    429b4d <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429b46:	mov    DWORD PTR [rbp-0xc],0x1
  429b4d:	mov    eax,DWORD PTR [rbp-0xc]
  429b50:	cdqe   
  429b52:	add    QWORD PTR [rbp-0x20],rax
  429b56:	mov    rax,QWORD PTR [rbp-0x20]
  429b5a:	mov    BYTE PTR [rax],0x0
  429b5d:	mov    eax,DWORD PTR [rbp-0xc]
  429b60:	and    eax,0x1
  429b63:	test   eax,eax
  429b65:	je     429cea <flatcc_json_parser_struct_as_root@@Base+0xb41>
  429b6b:	cmp    DWORD PTR [rbp-0xc],0x9
  429b6f:	ja     429ea3 <flatcc_json_parser_struct_as_root@@Base+0xcfa>
  429b75:	mov    eax,DWORD PTR [rbp-0xc]
  429b78:	lea    rdx,[rax*4+0x0]
  429b80:	lea    rax,[rip+0x12bd1]        # 43c758 <flatcc_builder_padding_base@@Base+0x27d8>
  429b87:	mov    eax,DWORD PTR [rdx+rax*1]
  429b8a:	movsxd rdx,eax
  429b8d:	lea    rax,[rip+0x12bc4]        # 43c758 <flatcc_builder_padding_base@@Base+0x27d8>
  429b94:	add    rax,rdx
  429b97:	jmp    rax
  429b99:	sub    QWORD PTR [rbp-0x20],0x2
  429b9e:	mov    ecx,DWORD PTR [rbp-0x14]
  429ba1:	mov    edx,0x51eb851f
  429ba6:	mov    eax,ecx
  429ba8:	mul    edx
  429baa:	mov    eax,edx
  429bac:	shr    eax,0x5
  429baf:	imul   eax,eax,0x64
  429bb2:	sub    ecx,eax
  429bb4:	mov    eax,ecx
  429bb6:	add    eax,eax
  429bb8:	mov    edx,eax
  429bba:	lea    rax,[rip+0x12abf]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429bc1:	add    rax,rdx
  429bc4:	mov    QWORD PTR [rbp-0x8],rax
  429bc8:	mov    eax,DWORD PTR [rbp-0x14]
  429bcb:	mov    edx,0x51eb851f
  429bd0:	mul    edx
  429bd2:	mov    eax,edx
  429bd4:	shr    eax,0x5
  429bd7:	mov    DWORD PTR [rbp-0x14],eax
  429bda:	mov    rax,QWORD PTR [rbp-0x8]
  429bde:	movzx  edx,WORD PTR [rax]
  429be1:	mov    rax,QWORD PTR [rbp-0x20]
  429be5:	mov    WORD PTR [rax],dx
  429be8:	sub    QWORD PTR [rbp-0x20],0x2
  429bed:	mov    ecx,DWORD PTR [rbp-0x14]
  429bf0:	mov    edx,0x51eb851f
  429bf5:	mov    eax,ecx
  429bf7:	mul    edx
  429bf9:	mov    eax,edx
  429bfb:	shr    eax,0x5
  429bfe:	imul   eax,eax,0x64
  429c01:	sub    ecx,eax
  429c03:	mov    eax,ecx
  429c05:	add    eax,eax
  429c07:	mov    edx,eax
  429c09:	lea    rax,[rip+0x12a70]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429c10:	add    rax,rdx
  429c13:	mov    QWORD PTR [rbp-0x8],rax
  429c17:	mov    eax,DWORD PTR [rbp-0x14]
  429c1a:	mov    edx,0x51eb851f
  429c1f:	mul    edx
  429c21:	mov    eax,edx
  429c23:	shr    eax,0x5
  429c26:	mov    DWORD PTR [rbp-0x14],eax
  429c29:	mov    rax,QWORD PTR [rbp-0x8]
  429c2d:	movzx  edx,WORD PTR [rax]
  429c30:	mov    rax,QWORD PTR [rbp-0x20]
  429c34:	mov    WORD PTR [rax],dx
  429c37:	sub    QWORD PTR [rbp-0x20],0x2
  429c3c:	mov    ecx,DWORD PTR [rbp-0x14]
  429c3f:	mov    edx,0x51eb851f
  429c44:	mov    eax,ecx
  429c46:	mul    edx
  429c48:	mov    eax,edx
  429c4a:	shr    eax,0x5
  429c4d:	imul   eax,eax,0x64
  429c50:	sub    ecx,eax
  429c52:	mov    eax,ecx
  429c54:	add    eax,eax
  429c56:	mov    edx,eax
  429c58:	lea    rax,[rip+0x12a21]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429c5f:	add    rax,rdx
  429c62:	mov    QWORD PTR [rbp-0x8],rax
  429c66:	mov    eax,DWORD PTR [rbp-0x14]
  429c69:	mov    edx,0x51eb851f
  429c6e:	mul    edx
  429c70:	mov    eax,edx
  429c72:	shr    eax,0x5
  429c75:	mov    DWORD PTR [rbp-0x14],eax
  429c78:	mov    rax,QWORD PTR [rbp-0x8]
  429c7c:	movzx  edx,WORD PTR [rax]
  429c7f:	mov    rax,QWORD PTR [rbp-0x20]
  429c83:	mov    WORD PTR [rax],dx
  429c86:	sub    QWORD PTR [rbp-0x20],0x2
  429c8b:	mov    ecx,DWORD PTR [rbp-0x14]
  429c8e:	mov    edx,0x51eb851f
  429c93:	mov    eax,ecx
  429c95:	mul    edx
  429c97:	mov    eax,edx
  429c99:	shr    eax,0x5
  429c9c:	imul   eax,eax,0x64
  429c9f:	sub    ecx,eax
  429ca1:	mov    eax,ecx
  429ca3:	add    eax,eax
  429ca5:	mov    edx,eax
  429ca7:	lea    rax,[rip+0x129d2]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429cae:	add    rax,rdx
  429cb1:	mov    QWORD PTR [rbp-0x8],rax
  429cb5:	mov    eax,DWORD PTR [rbp-0x14]
  429cb8:	mov    edx,0x51eb851f
  429cbd:	mul    edx
  429cbf:	mov    eax,edx
  429cc1:	shr    eax,0x5
  429cc4:	mov    DWORD PTR [rbp-0x14],eax
  429cc7:	mov    rax,QWORD PTR [rbp-0x8]
  429ccb:	movzx  edx,WORD PTR [rax]
  429cce:	mov    rax,QWORD PTR [rbp-0x20]
  429cd2:	mov    WORD PTR [rax],dx
  429cd5:	mov    rax,QWORD PTR [rbp-0x20]
  429cd9:	sub    rax,0x1
  429cdd:	mov    edx,DWORD PTR [rbp-0x14]
  429ce0:	add    edx,0x30
  429ce3:	mov    BYTE PTR [rax],dl
  429ce5:	jmp    429ea3 <flatcc_json_parser_struct_as_root@@Base+0xcfa>
  429cea:	cmp    DWORD PTR [rbp-0xc],0xa
  429cee:	ja     429ea3 <flatcc_json_parser_struct_as_root@@Base+0xcfa>
  429cf4:	mov    eax,DWORD PTR [rbp-0xc]
  429cf7:	lea    rdx,[rax*4+0x0]
  429cff:	lea    rax,[rip+0x12a7a]        # 43c780 <flatcc_builder_padding_base@@Base+0x2800>
  429d06:	mov    eax,DWORD PTR [rdx+rax*1]
  429d09:	movsxd rdx,eax
  429d0c:	lea    rax,[rip+0x12a6d]        # 43c780 <flatcc_builder_padding_base@@Base+0x2800>
  429d13:	add    rax,rdx
  429d16:	jmp    rax
  429d18:	sub    QWORD PTR [rbp-0x20],0x2
  429d1d:	mov    ecx,DWORD PTR [rbp-0x14]
  429d20:	mov    edx,0x51eb851f
  429d25:	mov    eax,ecx
  429d27:	mul    edx
  429d29:	mov    eax,edx
  429d2b:	shr    eax,0x5
  429d2e:	imul   eax,eax,0x64
  429d31:	sub    ecx,eax
  429d33:	mov    eax,ecx
  429d35:	add    eax,eax
  429d37:	mov    edx,eax
  429d39:	lea    rax,[rip+0x12940]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429d40:	add    rax,rdx
  429d43:	mov    QWORD PTR [rbp-0x8],rax
  429d47:	mov    eax,DWORD PTR [rbp-0x14]
  429d4a:	mov    edx,0x51eb851f
  429d4f:	mul    edx
  429d51:	mov    eax,edx
  429d53:	shr    eax,0x5
  429d56:	mov    DWORD PTR [rbp-0x14],eax
  429d59:	mov    rax,QWORD PTR [rbp-0x8]
  429d5d:	movzx  edx,WORD PTR [rax]
  429d60:	mov    rax,QWORD PTR [rbp-0x20]
  429d64:	mov    WORD PTR [rax],dx
  429d67:	sub    QWORD PTR [rbp-0x20],0x2
  429d6c:	mov    ecx,DWORD PTR [rbp-0x14]
  429d6f:	mov    edx,0x51eb851f
  429d74:	mov    eax,ecx
  429d76:	mul    edx
  429d78:	mov    eax,edx
  429d7a:	shr    eax,0x5
  429d7d:	imul   eax,eax,0x64
  429d80:	sub    ecx,eax
  429d82:	mov    eax,ecx
  429d84:	add    eax,eax
  429d86:	mov    edx,eax
  429d88:	lea    rax,[rip+0x128f1]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429d8f:	add    rax,rdx
  429d92:	mov    QWORD PTR [rbp-0x8],rax
  429d96:	mov    eax,DWORD PTR [rbp-0x14]
  429d99:	mov    edx,0x51eb851f
  429d9e:	mul    edx
  429da0:	mov    eax,edx
  429da2:	shr    eax,0x5
  429da5:	mov    DWORD PTR [rbp-0x14],eax
  429da8:	mov    rax,QWORD PTR [rbp-0x8]
  429dac:	movzx  edx,WORD PTR [rax]
  429daf:	mov    rax,QWORD PTR [rbp-0x20]
  429db3:	mov    WORD PTR [rax],dx
  429db6:	sub    QWORD PTR [rbp-0x20],0x2
  429dbb:	mov    ecx,DWORD PTR [rbp-0x14]
  429dbe:	mov    edx,0x51eb851f
  429dc3:	mov    eax,ecx
  429dc5:	mul    edx
  429dc7:	mov    eax,edx
  429dc9:	shr    eax,0x5
  429dcc:	imul   eax,eax,0x64
  429dcf:	sub    ecx,eax
  429dd1:	mov    eax,ecx
  429dd3:	add    eax,eax
  429dd5:	mov    edx,eax
  429dd7:	lea    rax,[rip+0x128a2]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429dde:	add    rax,rdx
  429de1:	mov    QWORD PTR [rbp-0x8],rax
  429de5:	mov    eax,DWORD PTR [rbp-0x14]
  429de8:	mov    edx,0x51eb851f
  429ded:	mul    edx
  429def:	mov    eax,edx
  429df1:	shr    eax,0x5
  429df4:	mov    DWORD PTR [rbp-0x14],eax
  429df7:	mov    rax,QWORD PTR [rbp-0x8]
  429dfb:	movzx  edx,WORD PTR [rax]
  429dfe:	mov    rax,QWORD PTR [rbp-0x20]
  429e02:	mov    WORD PTR [rax],dx
  429e05:	sub    QWORD PTR [rbp-0x20],0x2
  429e0a:	mov    ecx,DWORD PTR [rbp-0x14]
  429e0d:	mov    edx,0x51eb851f
  429e12:	mov    eax,ecx
  429e14:	mul    edx
  429e16:	mov    eax,edx
  429e18:	shr    eax,0x5
  429e1b:	imul   eax,eax,0x64
  429e1e:	sub    ecx,eax
  429e20:	mov    eax,ecx
  429e22:	add    eax,eax
  429e24:	mov    edx,eax
  429e26:	lea    rax,[rip+0x12853]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429e2d:	add    rax,rdx
  429e30:	mov    QWORD PTR [rbp-0x8],rax
  429e34:	mov    eax,DWORD PTR [rbp-0x14]
  429e37:	mov    edx,0x51eb851f
  429e3c:	mul    edx
  429e3e:	mov    eax,edx
  429e40:	shr    eax,0x5
  429e43:	mov    DWORD PTR [rbp-0x14],eax
  429e46:	mov    rax,QWORD PTR [rbp-0x8]
  429e4a:	movzx  edx,WORD PTR [rax]
  429e4d:	mov    rax,QWORD PTR [rbp-0x20]
  429e51:	mov    WORD PTR [rax],dx
  429e54:	sub    QWORD PTR [rbp-0x20],0x2
  429e59:	mov    ecx,DWORD PTR [rbp-0x14]
  429e5c:	mov    edx,0x51eb851f
  429e61:	mov    eax,ecx
  429e63:	mul    edx
  429e65:	mov    eax,edx
  429e67:	shr    eax,0x5
  429e6a:	imul   eax,eax,0x64
  429e6d:	sub    ecx,eax
  429e6f:	mov    eax,ecx
  429e71:	add    eax,eax
  429e73:	mov    edx,eax
  429e75:	lea    rax,[rip+0x12804]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  429e7c:	add    rax,rdx
  429e7f:	mov    QWORD PTR [rbp-0x8],rax
  429e83:	mov    eax,DWORD PTR [rbp-0x14]
  429e86:	mov    edx,0x51eb851f
  429e8b:	mul    edx
  429e8d:	mov    eax,edx
  429e8f:	shr    eax,0x5
  429e92:	mov    DWORD PTR [rbp-0x14],eax
  429e95:	mov    rax,QWORD PTR [rbp-0x8]
  429e99:	movzx  edx,WORD PTR [rax]
  429e9c:	mov    rax,QWORD PTR [rbp-0x20]
  429ea0:	mov    WORD PTR [rax],dx
  429ea3:	mov    eax,DWORD PTR [rbp-0xc]
  429ea6:	pop    rbp
  429ea7:	ret    
  429ea8:	push   rbp
  429ea9:	mov    rbp,rsp
  429eac:	sub    rsp,0x30
  429eb0:	mov    QWORD PTR [rbp-0x28],rdi
  429eb4:	mov    QWORD PTR [rbp-0x30],rsi
  429eb8:	mov    DWORD PTR [rbp-0x14],0x0
  429ebf:	mov    QWORD PTR [rbp-0x10],0x3b9aca00
  429ec7:	mov    rax,QWORD PTR [rbp-0x28]
  429ecb:	cmp    rax,QWORD PTR [rbp-0x10]
  429ecf:	jae    429eea <flatcc_json_parser_struct_as_root@@Base+0xd41>
  429ed1:	mov    rax,QWORD PTR [rbp-0x28]
  429ed5:	mov    edx,eax
  429ed7:	mov    rax,QWORD PTR [rbp-0x30]
  429edb:	mov    rsi,rax
  429ede:	mov    edi,edx
  429ee0:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  429ee5:	jmp    42a87b <flatcc_json_parser_struct_as_root@@Base+0x16d2>
  429eea:	mov    rax,QWORD PTR [rbp-0x10]
  429eee:	imul   rax,rax,0x2710
  429ef5:	cmp    rax,QWORD PTR [rbp-0x28]
  429ef9:	ja     429fba <flatcc_json_parser_struct_as_root@@Base+0xe11>
  429eff:	mov    rax,QWORD PTR [rbp-0x10]
  429f03:	imul   rax,rax,0x989680
  429f0a:	cmp    rax,QWORD PTR [rbp-0x28]
  429f0e:	ja     429f7a <flatcc_json_parser_struct_as_root@@Base+0xdd1>
  429f10:	mov    rax,QWORD PTR [rbp-0x10]
  429f14:	imul   rax,rax,0x3b9aca00
  429f1b:	cmp    rax,QWORD PTR [rbp-0x28]
  429f1f:	ja     429f51 <flatcc_json_parser_struct_as_root@@Base+0xda8>
  429f21:	mov    rdx,QWORD PTR [rbp-0x10]
  429f25:	movabs rax,0x2540be400
  429f2f:	imul   rax,rdx
  429f33:	cmp    rax,QWORD PTR [rbp-0x28]
  429f37:	ja     429f45 <flatcc_json_parser_struct_as_root@@Base+0xd9c>
  429f39:	mov    DWORD PTR [rbp-0x14],0x14
  429f40:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429f45:	mov    DWORD PTR [rbp-0x14],0x13
  429f4c:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429f51:	mov    rax,QWORD PTR [rbp-0x10]
  429f55:	imul   rax,rax,0x5f5e100
  429f5c:	cmp    rax,QWORD PTR [rbp-0x28]
  429f60:	ja     429f6e <flatcc_json_parser_struct_as_root@@Base+0xdc5>
  429f62:	mov    DWORD PTR [rbp-0x14],0x12
  429f69:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429f6e:	mov    DWORD PTR [rbp-0x14],0x11
  429f75:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429f7a:	mov    rax,QWORD PTR [rbp-0x10]
  429f7e:	imul   rax,rax,0xf4240
  429f85:	cmp    rax,QWORD PTR [rbp-0x28]
  429f89:	ja     429f97 <flatcc_json_parser_struct_as_root@@Base+0xdee>
  429f8b:	mov    DWORD PTR [rbp-0x14],0x10
  429f92:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429f97:	mov    rax,QWORD PTR [rbp-0x10]
  429f9b:	imul   rax,rax,0x186a0
  429fa2:	cmp    rax,QWORD PTR [rbp-0x28]
  429fa6:	ja     429fb1 <flatcc_json_parser_struct_as_root@@Base+0xe08>
  429fa8:	mov    DWORD PTR [rbp-0x14],0xf
  429faf:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429fb1:	mov    DWORD PTR [rbp-0x14],0xe
  429fb8:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429fba:	mov    rdx,QWORD PTR [rbp-0x10]
  429fbe:	mov    rax,rdx
  429fc1:	shl    rax,0x2
  429fc5:	add    rax,rdx
  429fc8:	lea    rdx,[rax*4+0x0]
  429fd0:	add    rax,rdx
  429fd3:	shl    rax,0x2
  429fd7:	cmp    rax,QWORD PTR [rbp-0x28]
  429fdb:	ja     42a000 <flatcc_json_parser_struct_as_root@@Base+0xe57>
  429fdd:	mov    rax,QWORD PTR [rbp-0x10]
  429fe1:	imul   rax,rax,0x3e8
  429fe8:	cmp    rax,QWORD PTR [rbp-0x28]
  429fec:	ja     429ff7 <flatcc_json_parser_struct_as_root@@Base+0xe4e>
  429fee:	mov    DWORD PTR [rbp-0x14],0xd
  429ff5:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429ff7:	mov    DWORD PTR [rbp-0x14],0xc
  429ffe:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  42a000:	mov    rdx,QWORD PTR [rbp-0x10]
  42a004:	mov    rax,rdx
  42a007:	shl    rax,0x2
  42a00b:	add    rax,rdx
  42a00e:	add    rax,rax
  42a011:	cmp    rax,QWORD PTR [rbp-0x28]
  42a015:	ja     42a020 <flatcc_json_parser_struct_as_root@@Base+0xe77>
  42a017:	mov    DWORD PTR [rbp-0x14],0xb
  42a01e:	jmp    42a027 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  42a020:	mov    DWORD PTR [rbp-0x14],0xa
  42a027:	mov    eax,DWORD PTR [rbp-0x14]
  42a02a:	cdqe   
  42a02c:	add    QWORD PTR [rbp-0x30],rax
  42a030:	mov    rax,QWORD PTR [rbp-0x30]
  42a034:	mov    BYTE PTR [rax],0x0
  42a037:	mov    eax,DWORD PTR [rbp-0x14]
  42a03a:	and    eax,0x1
  42a03d:	test   eax,eax
  42a03f:	je     42a350 <flatcc_json_parser_struct_as_root@@Base+0x11a7>
  42a045:	mov    eax,DWORD PTR [rbp-0x14]
  42a048:	sub    eax,0xb
  42a04b:	cmp    eax,0x8
  42a04e:	ja     42a67c <flatcc_json_parser_struct_as_root@@Base+0x14d3>
  42a054:	mov    eax,eax
  42a056:	lea    rdx,[rax*4+0x0]
  42a05e:	lea    rax,[rip+0x12747]        # 43c7ac <flatcc_builder_padding_base@@Base+0x282c>
  42a065:	mov    eax,DWORD PTR [rdx+rax*1]
  42a068:	movsxd rdx,eax
  42a06b:	lea    rax,[rip+0x1273a]        # 43c7ac <flatcc_builder_padding_base@@Base+0x282c>
  42a072:	add    rax,rdx
  42a075:	jmp    rax
  42a077:	sub    QWORD PTR [rbp-0x30],0x2
  42a07c:	mov    rcx,QWORD PTR [rbp-0x28]
  42a080:	mov    rax,rcx
  42a083:	shr    rax,0x2
  42a087:	movabs rdx,0x28f5c28f5c28f5c3
  42a091:	mul    rdx
  42a094:	shr    rdx,0x2
  42a098:	mov    rax,rdx
  42a09b:	shl    rax,0x2
  42a09f:	add    rax,rdx
  42a0a2:	lea    rdx,[rax*4+0x0]
  42a0aa:	add    rax,rdx
  42a0ad:	shl    rax,0x2
  42a0b1:	sub    rcx,rax
  42a0b4:	mov    rdx,rcx
  42a0b7:	add    rdx,rdx
  42a0ba:	lea    rax,[rip+0x125bf]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a0c1:	add    rax,rdx
  42a0c4:	mov    QWORD PTR [rbp-0x8],rax
  42a0c8:	mov    rax,QWORD PTR [rbp-0x28]
  42a0cc:	shr    rax,0x2
  42a0d0:	movabs rdx,0x28f5c28f5c28f5c3
  42a0da:	mul    rdx
  42a0dd:	mov    rax,rdx
  42a0e0:	shr    rax,0x2
  42a0e4:	mov    QWORD PTR [rbp-0x28],rax
  42a0e8:	mov    rax,QWORD PTR [rbp-0x8]
  42a0ec:	movzx  edx,WORD PTR [rax]
  42a0ef:	mov    rax,QWORD PTR [rbp-0x30]
  42a0f3:	mov    WORD PTR [rax],dx
  42a0f6:	sub    QWORD PTR [rbp-0x30],0x2
  42a0fb:	mov    rcx,QWORD PTR [rbp-0x28]
  42a0ff:	mov    rax,rcx
  42a102:	shr    rax,0x2
  42a106:	movabs rdx,0x28f5c28f5c28f5c3
  42a110:	mul    rdx
  42a113:	shr    rdx,0x2
  42a117:	mov    rax,rdx
  42a11a:	shl    rax,0x2
  42a11e:	add    rax,rdx
  42a121:	lea    rdx,[rax*4+0x0]
  42a129:	add    rax,rdx
  42a12c:	shl    rax,0x2
  42a130:	sub    rcx,rax
  42a133:	mov    rdx,rcx
  42a136:	add    rdx,rdx
  42a139:	lea    rax,[rip+0x12540]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a140:	add    rax,rdx
  42a143:	mov    QWORD PTR [rbp-0x8],rax
  42a147:	mov    rax,QWORD PTR [rbp-0x28]
  42a14b:	shr    rax,0x2
  42a14f:	movabs rdx,0x28f5c28f5c28f5c3
  42a159:	mul    rdx
  42a15c:	mov    rax,rdx
  42a15f:	shr    rax,0x2
  42a163:	mov    QWORD PTR [rbp-0x28],rax
  42a167:	mov    rax,QWORD PTR [rbp-0x8]
  42a16b:	movzx  edx,WORD PTR [rax]
  42a16e:	mov    rax,QWORD PTR [rbp-0x30]
  42a172:	mov    WORD PTR [rax],dx
  42a175:	sub    QWORD PTR [rbp-0x30],0x2
  42a17a:	mov    rcx,QWORD PTR [rbp-0x28]
  42a17e:	mov    rax,rcx
  42a181:	shr    rax,0x2
  42a185:	movabs rdx,0x28f5c28f5c28f5c3
  42a18f:	mul    rdx
  42a192:	shr    rdx,0x2
  42a196:	mov    rax,rdx
  42a199:	shl    rax,0x2
  42a19d:	add    rax,rdx
  42a1a0:	lea    rdx,[rax*4+0x0]
  42a1a8:	add    rax,rdx
  42a1ab:	shl    rax,0x2
  42a1af:	sub    rcx,rax
  42a1b2:	mov    rdx,rcx
  42a1b5:	add    rdx,rdx
  42a1b8:	lea    rax,[rip+0x124c1]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a1bf:	add    rax,rdx
  42a1c2:	mov    QWORD PTR [rbp-0x8],rax
  42a1c6:	mov    rax,QWORD PTR [rbp-0x28]
  42a1ca:	shr    rax,0x2
  42a1ce:	movabs rdx,0x28f5c28f5c28f5c3
  42a1d8:	mul    rdx
  42a1db:	mov    rax,rdx
  42a1de:	shr    rax,0x2
  42a1e2:	mov    QWORD PTR [rbp-0x28],rax
  42a1e6:	mov    rax,QWORD PTR [rbp-0x8]
  42a1ea:	movzx  edx,WORD PTR [rax]
  42a1ed:	mov    rax,QWORD PTR [rbp-0x30]
  42a1f1:	mov    WORD PTR [rax],dx
  42a1f4:	sub    QWORD PTR [rbp-0x30],0x2
  42a1f9:	mov    rcx,QWORD PTR [rbp-0x28]
  42a1fd:	mov    rax,rcx
  42a200:	shr    rax,0x2
  42a204:	movabs rdx,0x28f5c28f5c28f5c3
  42a20e:	mul    rdx
  42a211:	shr    rdx,0x2
  42a215:	mov    rax,rdx
  42a218:	shl    rax,0x2
  42a21c:	add    rax,rdx
  42a21f:	lea    rdx,[rax*4+0x0]
  42a227:	add    rax,rdx
  42a22a:	shl    rax,0x2
  42a22e:	sub    rcx,rax
  42a231:	mov    rdx,rcx
  42a234:	add    rdx,rdx
  42a237:	lea    rax,[rip+0x12442]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a23e:	add    rax,rdx
  42a241:	mov    QWORD PTR [rbp-0x8],rax
  42a245:	mov    rax,QWORD PTR [rbp-0x28]
  42a249:	shr    rax,0x2
  42a24d:	movabs rdx,0x28f5c28f5c28f5c3
  42a257:	mul    rdx
  42a25a:	mov    rax,rdx
  42a25d:	shr    rax,0x2
  42a261:	mov    QWORD PTR [rbp-0x28],rax
  42a265:	mov    rax,QWORD PTR [rbp-0x8]
  42a269:	movzx  edx,WORD PTR [rax]
  42a26c:	mov    rax,QWORD PTR [rbp-0x30]
  42a270:	mov    WORD PTR [rax],dx
  42a273:	sub    QWORD PTR [rbp-0x30],0x2
  42a278:	mov    rcx,QWORD PTR [rbp-0x28]
  42a27c:	mov    rax,rcx
  42a27f:	shr    rax,0x2
  42a283:	movabs rdx,0x28f5c28f5c28f5c3
  42a28d:	mul    rdx
  42a290:	shr    rdx,0x2
  42a294:	mov    rax,rdx
  42a297:	shl    rax,0x2
  42a29b:	add    rax,rdx
  42a29e:	lea    rdx,[rax*4+0x0]
  42a2a6:	add    rax,rdx
  42a2a9:	shl    rax,0x2
  42a2ad:	sub    rcx,rax
  42a2b0:	mov    rdx,rcx
  42a2b3:	add    rdx,rdx
  42a2b6:	lea    rax,[rip+0x123c3]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a2bd:	add    rax,rdx
  42a2c0:	mov    QWORD PTR [rbp-0x8],rax
  42a2c4:	mov    rax,QWORD PTR [rbp-0x28]
  42a2c8:	shr    rax,0x2
  42a2cc:	movabs rdx,0x28f5c28f5c28f5c3
  42a2d6:	mul    rdx
  42a2d9:	mov    rax,rdx
  42a2dc:	shr    rax,0x2
  42a2e0:	mov    QWORD PTR [rbp-0x28],rax
  42a2e4:	mov    rax,QWORD PTR [rbp-0x8]
  42a2e8:	movzx  edx,WORD PTR [rax]
  42a2eb:	mov    rax,QWORD PTR [rbp-0x30]
  42a2ef:	mov    WORD PTR [rax],dx
  42a2f2:	sub    QWORD PTR [rbp-0x30],0x1
  42a2f7:	mov    rcx,QWORD PTR [rbp-0x28]
  42a2fb:	movabs rdx,0xcccccccccccccccd
  42a305:	mov    rax,rcx
  42a308:	mul    rdx
  42a30b:	shr    rdx,0x3
  42a30f:	mov    rax,rdx
  42a312:	shl    rax,0x2
  42a316:	add    rax,rdx
  42a319:	add    rax,rax
  42a31c:	sub    rcx,rax
  42a31f:	mov    rdx,rcx
  42a322:	mov    eax,edx
  42a324:	add    eax,0x30
  42a327:	mov    edx,eax
  42a329:	mov    rax,QWORD PTR [rbp-0x30]
  42a32d:	mov    BYTE PTR [rax],dl
  42a32f:	mov    rax,QWORD PTR [rbp-0x28]
  42a333:	movabs rdx,0xcccccccccccccccd
  42a33d:	mul    rdx
  42a340:	mov    rax,rdx
  42a343:	shr    rax,0x3
  42a347:	mov    QWORD PTR [rbp-0x28],rax
  42a34b:	jmp    42a67c <flatcc_json_parser_struct_as_root@@Base+0x14d3>
  42a350:	mov    eax,DWORD PTR [rbp-0x14]
  42a353:	sub    eax,0xa
  42a356:	cmp    eax,0xa
  42a359:	ja     42a67c <flatcc_json_parser_struct_as_root@@Base+0x14d3>
  42a35f:	mov    eax,eax
  42a361:	lea    rdx,[rax*4+0x0]
  42a369:	lea    rax,[rip+0x12460]        # 43c7d0 <flatcc_builder_padding_base@@Base+0x2850>
  42a370:	mov    eax,DWORD PTR [rdx+rax*1]
  42a373:	movsxd rdx,eax
  42a376:	lea    rax,[rip+0x12453]        # 43c7d0 <flatcc_builder_padding_base@@Base+0x2850>
  42a37d:	add    rax,rdx
  42a380:	jmp    rax
  42a382:	sub    QWORD PTR [rbp-0x30],0x2
  42a387:	mov    rcx,QWORD PTR [rbp-0x28]
  42a38b:	mov    rax,rcx
  42a38e:	shr    rax,0x2
  42a392:	movabs rdx,0x28f5c28f5c28f5c3
  42a39c:	mul    rdx
  42a39f:	shr    rdx,0x2
  42a3a3:	mov    rax,rdx
  42a3a6:	shl    rax,0x2
  42a3aa:	add    rax,rdx
  42a3ad:	lea    rdx,[rax*4+0x0]
  42a3b5:	add    rax,rdx
  42a3b8:	shl    rax,0x2
  42a3bc:	sub    rcx,rax
  42a3bf:	mov    rdx,rcx
  42a3c2:	add    rdx,rdx
  42a3c5:	lea    rax,[rip+0x122b4]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a3cc:	add    rax,rdx
  42a3cf:	mov    QWORD PTR [rbp-0x8],rax
  42a3d3:	mov    rax,QWORD PTR [rbp-0x28]
  42a3d7:	shr    rax,0x2
  42a3db:	movabs rdx,0x28f5c28f5c28f5c3
  42a3e5:	mul    rdx
  42a3e8:	mov    rax,rdx
  42a3eb:	shr    rax,0x2
  42a3ef:	mov    QWORD PTR [rbp-0x28],rax
  42a3f3:	mov    rax,QWORD PTR [rbp-0x8]
  42a3f7:	movzx  edx,WORD PTR [rax]
  42a3fa:	mov    rax,QWORD PTR [rbp-0x30]
  42a3fe:	mov    WORD PTR [rax],dx
  42a401:	sub    QWORD PTR [rbp-0x30],0x2
  42a406:	mov    rcx,QWORD PTR [rbp-0x28]
  42a40a:	mov    rax,rcx
  42a40d:	shr    rax,0x2
  42a411:	movabs rdx,0x28f5c28f5c28f5c3
  42a41b:	mul    rdx
  42a41e:	shr    rdx,0x2
  42a422:	mov    rax,rdx
  42a425:	shl    rax,0x2
  42a429:	add    rax,rdx
  42a42c:	lea    rdx,[rax*4+0x0]
  42a434:	add    rax,rdx
  42a437:	shl    rax,0x2
  42a43b:	sub    rcx,rax
  42a43e:	mov    rdx,rcx
  42a441:	add    rdx,rdx
  42a444:	lea    rax,[rip+0x12235]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a44b:	add    rax,rdx
  42a44e:	mov    QWORD PTR [rbp-0x8],rax
  42a452:	mov    rax,QWORD PTR [rbp-0x28]
  42a456:	shr    rax,0x2
  42a45a:	movabs rdx,0x28f5c28f5c28f5c3
  42a464:	mul    rdx
  42a467:	mov    rax,rdx
  42a46a:	shr    rax,0x2
  42a46e:	mov    QWORD PTR [rbp-0x28],rax
  42a472:	mov    rax,QWORD PTR [rbp-0x8]
  42a476:	movzx  edx,WORD PTR [rax]
  42a479:	mov    rax,QWORD PTR [rbp-0x30]
  42a47d:	mov    WORD PTR [rax],dx
  42a480:	sub    QWORD PTR [rbp-0x30],0x2
  42a485:	mov    rcx,QWORD PTR [rbp-0x28]
  42a489:	mov    rax,rcx
  42a48c:	shr    rax,0x2
  42a490:	movabs rdx,0x28f5c28f5c28f5c3
  42a49a:	mul    rdx
  42a49d:	shr    rdx,0x2
  42a4a1:	mov    rax,rdx
  42a4a4:	shl    rax,0x2
  42a4a8:	add    rax,rdx
  42a4ab:	lea    rdx,[rax*4+0x0]
  42a4b3:	add    rax,rdx
  42a4b6:	shl    rax,0x2
  42a4ba:	sub    rcx,rax
  42a4bd:	mov    rdx,rcx
  42a4c0:	add    rdx,rdx
  42a4c3:	lea    rax,[rip+0x121b6]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a4ca:	add    rax,rdx
  42a4cd:	mov    QWORD PTR [rbp-0x8],rax
  42a4d1:	mov    rax,QWORD PTR [rbp-0x28]
  42a4d5:	shr    rax,0x2
  42a4d9:	movabs rdx,0x28f5c28f5c28f5c3
  42a4e3:	mul    rdx
  42a4e6:	mov    rax,rdx
  42a4e9:	shr    rax,0x2
  42a4ed:	mov    QWORD PTR [rbp-0x28],rax
  42a4f1:	mov    rax,QWORD PTR [rbp-0x8]
  42a4f5:	movzx  edx,WORD PTR [rax]
  42a4f8:	mov    rax,QWORD PTR [rbp-0x30]
  42a4fc:	mov    WORD PTR [rax],dx
  42a4ff:	sub    QWORD PTR [rbp-0x30],0x2
  42a504:	mov    rcx,QWORD PTR [rbp-0x28]
  42a508:	mov    rax,rcx
  42a50b:	shr    rax,0x2
  42a50f:	movabs rdx,0x28f5c28f5c28f5c3
  42a519:	mul    rdx
  42a51c:	shr    rdx,0x2
  42a520:	mov    rax,rdx
  42a523:	shl    rax,0x2
  42a527:	add    rax,rdx
  42a52a:	lea    rdx,[rax*4+0x0]
  42a532:	add    rax,rdx
  42a535:	shl    rax,0x2
  42a539:	sub    rcx,rax
  42a53c:	mov    rdx,rcx
  42a53f:	add    rdx,rdx
  42a542:	lea    rax,[rip+0x12137]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a549:	add    rax,rdx
  42a54c:	mov    QWORD PTR [rbp-0x8],rax
  42a550:	mov    rax,QWORD PTR [rbp-0x28]
  42a554:	shr    rax,0x2
  42a558:	movabs rdx,0x28f5c28f5c28f5c3
  42a562:	mul    rdx
  42a565:	mov    rax,rdx
  42a568:	shr    rax,0x2
  42a56c:	mov    QWORD PTR [rbp-0x28],rax
  42a570:	mov    rax,QWORD PTR [rbp-0x8]
  42a574:	movzx  edx,WORD PTR [rax]
  42a577:	mov    rax,QWORD PTR [rbp-0x30]
  42a57b:	mov    WORD PTR [rax],dx
  42a57e:	sub    QWORD PTR [rbp-0x30],0x2
  42a583:	mov    rcx,QWORD PTR [rbp-0x28]
  42a587:	mov    rax,rcx
  42a58a:	shr    rax,0x2
  42a58e:	movabs rdx,0x28f5c28f5c28f5c3
  42a598:	mul    rdx
  42a59b:	shr    rdx,0x2
  42a59f:	mov    rax,rdx
  42a5a2:	shl    rax,0x2
  42a5a6:	add    rax,rdx
  42a5a9:	lea    rdx,[rax*4+0x0]
  42a5b1:	add    rax,rdx
  42a5b4:	shl    rax,0x2
  42a5b8:	sub    rcx,rax
  42a5bb:	mov    rdx,rcx
  42a5be:	add    rdx,rdx
  42a5c1:	lea    rax,[rip+0x120b8]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a5c8:	add    rax,rdx
  42a5cb:	mov    QWORD PTR [rbp-0x8],rax
  42a5cf:	mov    rax,QWORD PTR [rbp-0x28]
  42a5d3:	shr    rax,0x2
  42a5d7:	movabs rdx,0x28f5c28f5c28f5c3
  42a5e1:	mul    rdx
  42a5e4:	mov    rax,rdx
  42a5e7:	shr    rax,0x2
  42a5eb:	mov    QWORD PTR [rbp-0x28],rax
  42a5ef:	mov    rax,QWORD PTR [rbp-0x8]
  42a5f3:	movzx  edx,WORD PTR [rax]
  42a5f6:	mov    rax,QWORD PTR [rbp-0x30]
  42a5fa:	mov    WORD PTR [rax],dx
  42a5fd:	sub    QWORD PTR [rbp-0x30],0x2
  42a602:	mov    rcx,QWORD PTR [rbp-0x28]
  42a606:	mov    rax,rcx
  42a609:	shr    rax,0x2
  42a60d:	movabs rdx,0x28f5c28f5c28f5c3
  42a617:	mul    rdx
  42a61a:	shr    rdx,0x2
  42a61e:	mov    rax,rdx
  42a621:	shl    rax,0x2
  42a625:	add    rax,rdx
  42a628:	lea    rdx,[rax*4+0x0]
  42a630:	add    rax,rdx
  42a633:	shl    rax,0x2
  42a637:	sub    rcx,rax
  42a63a:	mov    rdx,rcx
  42a63d:	add    rdx,rdx
  42a640:	lea    rax,[rip+0x12039]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a647:	add    rax,rdx
  42a64a:	mov    QWORD PTR [rbp-0x8],rax
  42a64e:	mov    rax,QWORD PTR [rbp-0x28]
  42a652:	shr    rax,0x2
  42a656:	movabs rdx,0x28f5c28f5c28f5c3
  42a660:	mul    rdx
  42a663:	mov    rax,rdx
  42a666:	shr    rax,0x2
  42a66a:	mov    QWORD PTR [rbp-0x28],rax
  42a66e:	mov    rax,QWORD PTR [rbp-0x8]
  42a672:	movzx  edx,WORD PTR [rax]
  42a675:	mov    rax,QWORD PTR [rbp-0x30]
  42a679:	mov    WORD PTR [rax],dx
  42a67c:	sub    QWORD PTR [rbp-0x30],0x2
  42a681:	mov    rcx,QWORD PTR [rbp-0x28]
  42a685:	mov    rax,rcx
  42a688:	shr    rax,0x2
  42a68c:	movabs rdx,0x28f5c28f5c28f5c3
  42a696:	mul    rdx
  42a699:	shr    rdx,0x2
  42a69d:	mov    rax,rdx
  42a6a0:	shl    rax,0x2
  42a6a4:	add    rax,rdx
  42a6a7:	lea    rdx,[rax*4+0x0]
  42a6af:	add    rax,rdx
  42a6b2:	shl    rax,0x2
  42a6b6:	sub    rcx,rax
  42a6b9:	mov    rdx,rcx
  42a6bc:	add    rdx,rdx
  42a6bf:	lea    rax,[rip+0x11fba]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a6c6:	add    rax,rdx
  42a6c9:	mov    QWORD PTR [rbp-0x8],rax
  42a6cd:	mov    rax,QWORD PTR [rbp-0x28]
  42a6d1:	shr    rax,0x2
  42a6d5:	movabs rdx,0x28f5c28f5c28f5c3
  42a6df:	mul    rdx
  42a6e2:	mov    rax,rdx
  42a6e5:	shr    rax,0x2
  42a6e9:	mov    QWORD PTR [rbp-0x28],rax
  42a6ed:	mov    rax,QWORD PTR [rbp-0x8]
  42a6f1:	movzx  edx,WORD PTR [rax]
  42a6f4:	mov    rax,QWORD PTR [rbp-0x30]
  42a6f8:	mov    WORD PTR [rax],dx
  42a6fb:	sub    QWORD PTR [rbp-0x30],0x2
  42a700:	mov    rcx,QWORD PTR [rbp-0x28]
  42a704:	mov    rax,rcx
  42a707:	shr    rax,0x2
  42a70b:	movabs rdx,0x28f5c28f5c28f5c3
  42a715:	mul    rdx
  42a718:	shr    rdx,0x2
  42a71c:	mov    rax,rdx
  42a71f:	shl    rax,0x2
  42a723:	add    rax,rdx
  42a726:	lea    rdx,[rax*4+0x0]
  42a72e:	add    rax,rdx
  42a731:	shl    rax,0x2
  42a735:	sub    rcx,rax
  42a738:	mov    rdx,rcx
  42a73b:	add    rdx,rdx
  42a73e:	lea    rax,[rip+0x11f3b]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a745:	add    rax,rdx
  42a748:	mov    QWORD PTR [rbp-0x8],rax
  42a74c:	mov    rax,QWORD PTR [rbp-0x28]
  42a750:	shr    rax,0x2
  42a754:	movabs rdx,0x28f5c28f5c28f5c3
  42a75e:	mul    rdx
  42a761:	mov    rax,rdx
  42a764:	shr    rax,0x2
  42a768:	mov    QWORD PTR [rbp-0x28],rax
  42a76c:	mov    rax,QWORD PTR [rbp-0x8]
  42a770:	movzx  edx,WORD PTR [rax]
  42a773:	mov    rax,QWORD PTR [rbp-0x30]
  42a777:	mov    WORD PTR [rax],dx
  42a77a:	sub    QWORD PTR [rbp-0x30],0x2
  42a77f:	mov    rcx,QWORD PTR [rbp-0x28]
  42a783:	mov    rax,rcx
  42a786:	shr    rax,0x2
  42a78a:	movabs rdx,0x28f5c28f5c28f5c3
  42a794:	mul    rdx
  42a797:	shr    rdx,0x2
  42a79b:	mov    rax,rdx
  42a79e:	shl    rax,0x2
  42a7a2:	add    rax,rdx
  42a7a5:	lea    rdx,[rax*4+0x0]
  42a7ad:	add    rax,rdx
  42a7b0:	shl    rax,0x2
  42a7b4:	sub    rcx,rax
  42a7b7:	mov    rdx,rcx
  42a7ba:	add    rdx,rdx
  42a7bd:	lea    rax,[rip+0x11ebc]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a7c4:	add    rax,rdx
  42a7c7:	mov    QWORD PTR [rbp-0x8],rax
  42a7cb:	mov    rax,QWORD PTR [rbp-0x28]
  42a7cf:	shr    rax,0x2
  42a7d3:	movabs rdx,0x28f5c28f5c28f5c3
  42a7dd:	mul    rdx
  42a7e0:	mov    rax,rdx
  42a7e3:	shr    rax,0x2
  42a7e7:	mov    QWORD PTR [rbp-0x28],rax
  42a7eb:	mov    rax,QWORD PTR [rbp-0x8]
  42a7ef:	movzx  edx,WORD PTR [rax]
  42a7f2:	mov    rax,QWORD PTR [rbp-0x30]
  42a7f6:	mov    WORD PTR [rax],dx
  42a7f9:	sub    QWORD PTR [rbp-0x30],0x2
  42a7fe:	mov    rcx,QWORD PTR [rbp-0x28]
  42a802:	mov    rax,rcx
  42a805:	shr    rax,0x2
  42a809:	movabs rdx,0x28f5c28f5c28f5c3
  42a813:	mul    rdx
  42a816:	shr    rdx,0x2
  42a81a:	mov    rax,rdx
  42a81d:	shl    rax,0x2
  42a821:	add    rax,rdx
  42a824:	lea    rdx,[rax*4+0x0]
  42a82c:	add    rax,rdx
  42a82f:	shl    rax,0x2
  42a833:	sub    rcx,rax
  42a836:	mov    rdx,rcx
  42a839:	add    rdx,rdx
  42a83c:	lea    rax,[rip+0x11e3d]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42a843:	add    rax,rdx
  42a846:	mov    QWORD PTR [rbp-0x8],rax
  42a84a:	mov    rax,QWORD PTR [rbp-0x28]
  42a84e:	shr    rax,0x2
  42a852:	movabs rdx,0x28f5c28f5c28f5c3
  42a85c:	mul    rdx
  42a85f:	mov    rax,rdx
  42a862:	shr    rax,0x2
  42a866:	mov    QWORD PTR [rbp-0x28],rax
  42a86a:	mov    rax,QWORD PTR [rbp-0x8]
  42a86e:	movzx  edx,WORD PTR [rax]
  42a871:	mov    rax,QWORD PTR [rbp-0x30]
  42a875:	mov    WORD PTR [rax],dx
  42a878:	mov    eax,DWORD PTR [rbp-0x14]
  42a87b:	leave  
  42a87c:	ret    
  42a87d:	push   rbp
  42a87e:	mov    rbp,rsp
  42a881:	sub    rsp,0x20
  42a885:	mov    eax,edi
  42a887:	mov    QWORD PTR [rbp-0x20],rsi
  42a88b:	mov    BYTE PTR [rbp-0x14],al
  42a88e:	movzx  eax,BYTE PTR [rbp-0x14]
  42a892:	shr    al,0x7
  42a895:	movzx  eax,al
  42a898:	mov    DWORD PTR [rbp-0x4],eax
  42a89b:	cmp    DWORD PTR [rbp-0x4],0x0
  42a89f:	je     42a8b9 <flatcc_json_parser_struct_as_root@@Base+0x1710>
  42a8a1:	mov    rax,QWORD PTR [rbp-0x20]
  42a8a5:	lea    rdx,[rax+0x1]
  42a8a9:	mov    QWORD PTR [rbp-0x20],rdx
  42a8ad:	mov    BYTE PTR [rax],0x2d
  42a8b0:	movzx  eax,BYTE PTR [rbp-0x14]
  42a8b4:	neg    eax
  42a8b6:	mov    BYTE PTR [rbp-0x14],al
  42a8b9:	movzx  eax,BYTE PTR [rbp-0x14]
  42a8bd:	movzx  eax,al
  42a8c0:	mov    rdx,QWORD PTR [rbp-0x20]
  42a8c4:	mov    rsi,rdx
  42a8c7:	mov    edi,eax
  42a8c9:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42a8ce:	mov    edx,eax
  42a8d0:	mov    eax,DWORD PTR [rbp-0x4]
  42a8d3:	add    eax,edx
  42a8d5:	leave  
  42a8d6:	ret    
  42a8d7:	push   rbp
  42a8d8:	mov    rbp,rsp
  42a8db:	sub    rsp,0x20
  42a8df:	mov    eax,edi
  42a8e1:	mov    QWORD PTR [rbp-0x20],rsi
  42a8e5:	mov    WORD PTR [rbp-0x14],ax
  42a8e9:	movzx  eax,WORD PTR [rbp-0x14]
  42a8ed:	shr    ax,0xf
  42a8f1:	movzx  eax,al
  42a8f4:	mov    DWORD PTR [rbp-0x4],eax
  42a8f7:	cmp    DWORD PTR [rbp-0x4],0x0
  42a8fb:	je     42a916 <flatcc_json_parser_struct_as_root@@Base+0x176d>
  42a8fd:	mov    rax,QWORD PTR [rbp-0x20]
  42a901:	lea    rdx,[rax+0x1]
  42a905:	mov    QWORD PTR [rbp-0x20],rdx
  42a909:	mov    BYTE PTR [rax],0x2d
  42a90c:	movzx  eax,WORD PTR [rbp-0x14]
  42a910:	neg    eax
  42a912:	mov    WORD PTR [rbp-0x14],ax
  42a916:	movzx  eax,WORD PTR [rbp-0x14]
  42a91a:	movzx  eax,ax
  42a91d:	mov    rdx,QWORD PTR [rbp-0x20]
  42a921:	mov    rsi,rdx
  42a924:	mov    edi,eax
  42a926:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42a92b:	mov    edx,eax
  42a92d:	mov    eax,DWORD PTR [rbp-0x4]
  42a930:	add    eax,edx
  42a932:	leave  
  42a933:	ret    
  42a934:	push   rbp
  42a935:	mov    rbp,rsp
  42a938:	sub    rsp,0x20
  42a93c:	mov    DWORD PTR [rbp-0x14],edi
  42a93f:	mov    QWORD PTR [rbp-0x20],rsi
  42a943:	mov    eax,DWORD PTR [rbp-0x14]
  42a946:	shr    eax,0x1f
  42a949:	movzx  eax,al
  42a94c:	mov    DWORD PTR [rbp-0x4],eax
  42a94f:	cmp    DWORD PTR [rbp-0x4],0x0
  42a953:	je     42a967 <flatcc_json_parser_struct_as_root@@Base+0x17be>
  42a955:	mov    rax,QWORD PTR [rbp-0x20]
  42a959:	lea    rdx,[rax+0x1]
  42a95d:	mov    QWORD PTR [rbp-0x20],rdx
  42a961:	mov    BYTE PTR [rax],0x2d
  42a964:	neg    DWORD PTR [rbp-0x14]
  42a967:	mov    eax,DWORD PTR [rbp-0x14]
  42a96a:	mov    rdx,QWORD PTR [rbp-0x20]
  42a96e:	mov    rsi,rdx
  42a971:	mov    edi,eax
  42a973:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42a978:	mov    edx,eax
  42a97a:	mov    eax,DWORD PTR [rbp-0x4]
  42a97d:	add    eax,edx
  42a97f:	leave  
  42a980:	ret    
  42a981:	push   rbp
  42a982:	mov    rbp,rsp
  42a985:	sub    rsp,0x20
  42a989:	mov    QWORD PTR [rbp-0x18],rdi
  42a98d:	mov    QWORD PTR [rbp-0x20],rsi
  42a991:	mov    rax,QWORD PTR [rbp-0x18]
  42a995:	shr    rax,0x3f
  42a999:	movzx  eax,al
  42a99c:	mov    DWORD PTR [rbp-0x4],eax
  42a99f:	cmp    DWORD PTR [rbp-0x4],0x0
  42a9a3:	je     42a9b8 <flatcc_json_parser_struct_as_root@@Base+0x180f>
  42a9a5:	mov    rax,QWORD PTR [rbp-0x20]
  42a9a9:	lea    rdx,[rax+0x1]
  42a9ad:	mov    QWORD PTR [rbp-0x20],rdx
  42a9b1:	mov    BYTE PTR [rax],0x2d
  42a9b4:	neg    QWORD PTR [rbp-0x18]
  42a9b8:	mov    rax,QWORD PTR [rbp-0x18]
  42a9bc:	mov    rdx,QWORD PTR [rbp-0x20]
  42a9c0:	mov    rsi,rdx
  42a9c3:	mov    rdi,rax
  42a9c6:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42a9cb:	mov    edx,eax
  42a9cd:	mov    eax,DWORD PTR [rbp-0x4]
  42a9d0:	add    eax,edx
  42a9d2:	leave  
  42a9d3:	ret    
  42a9d4:	push   rbp
  42a9d5:	mov    rbp,rsp
  42a9d8:	sub    rsp,0x50
  42a9dc:	mov    DWORD PTR [rbp-0x44],edi
  42a9df:	mov    QWORD PTR [rbp-0x50],rsi
  42a9e3:	mov    rax,QWORD PTR fs:0x28
  42a9ec:	mov    QWORD PTR [rbp-0x8],rax
  42a9f0:	xor    eax,eax
  42a9f2:	lea    rax,[rbp-0x20]
  42a9f6:	add    rax,0x14
  42a9fa:	mov    QWORD PTR [rbp-0x30],rax
  42a9fe:	mov    rax,QWORD PTR [rbp-0x30]
  42aa02:	mov    QWORD PTR [rbp-0x28],rax
  42aa06:	jmp    42aa53 <flatcc_json_parser_struct_as_root@@Base+0x18aa>
  42aa08:	sub    QWORD PTR [rbp-0x30],0x2
  42aa0d:	mov    ecx,DWORD PTR [rbp-0x44]
  42aa10:	mov    edx,0x51eb851f
  42aa15:	mov    eax,ecx
  42aa17:	mul    edx
  42aa19:	mov    eax,edx
  42aa1b:	shr    eax,0x5
  42aa1e:	imul   eax,eax,0x64
  42aa21:	sub    ecx,eax
  42aa23:	mov    eax,ecx
  42aa25:	add    eax,eax
  42aa27:	mov    DWORD PTR [rbp-0x38],eax
  42aa2a:	mov    eax,DWORD PTR [rbp-0x44]
  42aa2d:	mov    edx,0x51eb851f
  42aa32:	mul    edx
  42aa34:	mov    eax,edx
  42aa36:	shr    eax,0x5
  42aa39:	mov    DWORD PTR [rbp-0x44],eax
  42aa3c:	mov    edx,DWORD PTR [rbp-0x38]
  42aa3f:	lea    rax,[rip+0x11c3a]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42aa46:	add    rax,rdx
  42aa49:	movzx  edx,WORD PTR [rax]
  42aa4c:	mov    rax,QWORD PTR [rbp-0x30]
  42aa50:	mov    WORD PTR [rax],dx
  42aa53:	cmp    DWORD PTR [rbp-0x44],0x63
  42aa57:	ja     42aa08 <flatcc_json_parser_struct_as_root@@Base+0x185f>
  42aa59:	sub    QWORD PTR [rbp-0x30],0x2
  42aa5e:	mov    eax,DWORD PTR [rbp-0x44]
  42aa61:	add    eax,eax
  42aa63:	mov    DWORD PTR [rbp-0x38],eax
  42aa66:	mov    edx,DWORD PTR [rbp-0x38]
  42aa69:	lea    rax,[rip+0x11c10]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42aa70:	add    rax,rdx
  42aa73:	movzx  edx,WORD PTR [rax]
  42aa76:	mov    rax,QWORD PTR [rbp-0x30]
  42aa7a:	mov    WORD PTR [rax],dx
  42aa7d:	cmp    DWORD PTR [rbp-0x44],0x9
  42aa81:	ja     42aa88 <flatcc_json_parser_struct_as_root@@Base+0x18df>
  42aa83:	add    QWORD PTR [rbp-0x30],0x1
  42aa88:	mov    rdx,QWORD PTR [rbp-0x28]
  42aa8c:	mov    rax,QWORD PTR [rbp-0x30]
  42aa90:	sub    rdx,rax
  42aa93:	mov    rax,rdx
  42aa96:	mov    DWORD PTR [rbp-0x34],eax
  42aa99:	jmp    42aab8 <flatcc_json_parser_struct_as_root@@Base+0x190f>
  42aa9b:	mov    rax,QWORD PTR [rbp-0x50]
  42aa9f:	lea    rdx,[rax+0x1]
  42aaa3:	mov    QWORD PTR [rbp-0x50],rdx
  42aaa7:	mov    rdx,QWORD PTR [rbp-0x30]
  42aaab:	lea    rcx,[rdx+0x1]
  42aaaf:	mov    QWORD PTR [rbp-0x30],rcx
  42aab3:	movzx  edx,BYTE PTR [rdx]
  42aab6:	mov    BYTE PTR [rax],dl
  42aab8:	mov    rax,QWORD PTR [rbp-0x30]
  42aabc:	cmp    rax,QWORD PTR [rbp-0x28]
  42aac0:	jne    42aa9b <flatcc_json_parser_struct_as_root@@Base+0x18f2>
  42aac2:	mov    rax,QWORD PTR [rbp-0x50]
  42aac6:	mov    BYTE PTR [rax],0x0
  42aac9:	mov    eax,DWORD PTR [rbp-0x34]
  42aacc:	mov    rsi,QWORD PTR [rbp-0x8]
  42aad0:	xor    rsi,QWORD PTR fs:0x28
  42aad9:	je     42aae0 <flatcc_json_parser_struct_as_root@@Base+0x1937>
  42aadb:	call   405070 <__stack_chk_fail@plt>
  42aae0:	leave  
  42aae1:	ret    
  42aae2:	push   rbp
  42aae3:	mov    rbp,rsp
  42aae6:	sub    rsp,0x20
  42aaea:	mov    DWORD PTR [rbp-0x14],edi
  42aaed:	mov    QWORD PTR [rbp-0x20],rsi
  42aaf1:	mov    eax,DWORD PTR [rbp-0x14]
  42aaf4:	shr    eax,0x1f
  42aaf7:	movzx  eax,al
  42aafa:	mov    DWORD PTR [rbp-0x4],eax
  42aafd:	cmp    DWORD PTR [rbp-0x4],0x0
  42ab01:	je     42ab15 <flatcc_json_parser_struct_as_root@@Base+0x196c>
  42ab03:	mov    rax,QWORD PTR [rbp-0x20]
  42ab07:	lea    rdx,[rax+0x1]
  42ab0b:	mov    QWORD PTR [rbp-0x20],rdx
  42ab0f:	mov    BYTE PTR [rax],0x2d
  42ab12:	neg    DWORD PTR [rbp-0x14]
  42ab15:	mov    eax,DWORD PTR [rbp-0x14]
  42ab18:	mov    rdx,QWORD PTR [rbp-0x20]
  42ab1c:	mov    rsi,rdx
  42ab1f:	mov    edi,eax
  42ab21:	call   42a9d4 <flatcc_json_parser_struct_as_root@@Base+0x182b>
  42ab26:	mov    edx,eax
  42ab28:	mov    eax,DWORD PTR [rbp-0x4]
  42ab2b:	add    eax,edx
  42ab2d:	leave  
  42ab2e:	ret    
  42ab2f:	push   rbp
  42ab30:	mov    rbp,rsp
  42ab33:	sub    rsp,0x50
  42ab37:	mov    QWORD PTR [rbp-0x48],rdi
  42ab3b:	mov    QWORD PTR [rbp-0x50],rsi
  42ab3f:	mov    rax,QWORD PTR fs:0x28
  42ab48:	mov    QWORD PTR [rbp-0x8],rax
  42ab4c:	xor    eax,eax
  42ab4e:	lea    rax,[rbp-0x20]
  42ab52:	add    rax,0x14
  42ab56:	mov    QWORD PTR [rbp-0x30],rax
  42ab5a:	mov    rax,QWORD PTR [rbp-0x30]
  42ab5e:	mov    QWORD PTR [rbp-0x28],rax
  42ab62:	jmp    42abe2 <flatcc_json_parser_struct_as_root@@Base+0x1a39>
  42ab64:	sub    QWORD PTR [rbp-0x30],0x2
  42ab69:	mov    rcx,QWORD PTR [rbp-0x48]
  42ab6d:	mov    rax,rcx
  42ab70:	shr    rax,0x2
  42ab74:	movabs rdx,0x28f5c28f5c28f5c3
  42ab7e:	mul    rdx
  42ab81:	shr    rdx,0x2
  42ab85:	mov    rax,rdx
  42ab88:	shl    rax,0x2
  42ab8c:	add    rax,rdx
  42ab8f:	lea    rdx,[rax*4+0x0]
  42ab97:	add    rax,rdx
  42ab9a:	shl    rax,0x2
  42ab9e:	sub    rcx,rax
  42aba1:	mov    rdx,rcx
  42aba4:	mov    eax,edx
  42aba6:	add    eax,eax
  42aba8:	mov    DWORD PTR [rbp-0x38],eax
  42abab:	mov    rax,QWORD PTR [rbp-0x48]
  42abaf:	shr    rax,0x2
  42abb3:	movabs rdx,0x28f5c28f5c28f5c3
  42abbd:	mul    rdx
  42abc0:	mov    rax,rdx
  42abc3:	shr    rax,0x2
  42abc7:	mov    QWORD PTR [rbp-0x48],rax
  42abcb:	mov    edx,DWORD PTR [rbp-0x38]
  42abce:	lea    rax,[rip+0x11aab]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42abd5:	add    rax,rdx
  42abd8:	movzx  edx,WORD PTR [rax]
  42abdb:	mov    rax,QWORD PTR [rbp-0x30]
  42abdf:	mov    WORD PTR [rax],dx
  42abe2:	cmp    QWORD PTR [rbp-0x48],0x63
  42abe7:	ja     42ab64 <flatcc_json_parser_struct_as_root@@Base+0x19bb>
  42abed:	sub    QWORD PTR [rbp-0x30],0x2
  42abf2:	mov    rax,QWORD PTR [rbp-0x48]
  42abf6:	add    eax,eax
  42abf8:	mov    DWORD PTR [rbp-0x38],eax
  42abfb:	mov    edx,DWORD PTR [rbp-0x38]
  42abfe:	lea    rax,[rip+0x11a7b]        # 43c680 <flatcc_builder_padding_base@@Base+0x2700>
  42ac05:	add    rax,rdx
  42ac08:	movzx  edx,WORD PTR [rax]
  42ac0b:	mov    rax,QWORD PTR [rbp-0x30]
  42ac0f:	mov    WORD PTR [rax],dx
  42ac12:	cmp    QWORD PTR [rbp-0x48],0x9
  42ac17:	ja     42ac1e <flatcc_json_parser_struct_as_root@@Base+0x1a75>
  42ac19:	add    QWORD PTR [rbp-0x30],0x1
  42ac1e:	mov    rdx,QWORD PTR [rbp-0x28]
  42ac22:	mov    rax,QWORD PTR [rbp-0x30]
  42ac26:	sub    rdx,rax
  42ac29:	mov    rax,rdx
  42ac2c:	mov    DWORD PTR [rbp-0x34],eax
  42ac2f:	jmp    42ac4e <flatcc_json_parser_struct_as_root@@Base+0x1aa5>
  42ac31:	mov    rax,QWORD PTR [rbp-0x50]
  42ac35:	lea    rdx,[rax+0x1]
  42ac39:	mov    QWORD PTR [rbp-0x50],rdx
  42ac3d:	mov    rdx,QWORD PTR [rbp-0x30]
  42ac41:	lea    rcx,[rdx+0x1]
  42ac45:	mov    QWORD PTR [rbp-0x30],rcx
  42ac49:	movzx  edx,BYTE PTR [rdx]
  42ac4c:	mov    BYTE PTR [rax],dl
  42ac4e:	mov    rax,QWORD PTR [rbp-0x30]
  42ac52:	cmp    rax,QWORD PTR [rbp-0x28]
  42ac56:	jne    42ac31 <flatcc_json_parser_struct_as_root@@Base+0x1a88>
  42ac58:	mov    rax,QWORD PTR [rbp-0x50]
  42ac5c:	mov    BYTE PTR [rax],0x0
  42ac5f:	mov    eax,DWORD PTR [rbp-0x34]
  42ac62:	mov    rsi,QWORD PTR [rbp-0x8]
  42ac66:	xor    rsi,QWORD PTR fs:0x28
  42ac6f:	je     42ac76 <flatcc_json_parser_struct_as_root@@Base+0x1acd>
  42ac71:	call   405070 <__stack_chk_fail@plt>
  42ac76:	leave  
  42ac77:	ret    
  42ac78:	push   rbp
  42ac79:	mov    rbp,rsp
  42ac7c:	sub    rsp,0x20
  42ac80:	mov    QWORD PTR [rbp-0x18],rdi
  42ac84:	mov    QWORD PTR [rbp-0x20],rsi
  42ac88:	mov    rax,QWORD PTR [rbp-0x18]
  42ac8c:	shr    rax,0x3f
  42ac90:	movzx  eax,al
  42ac93:	mov    DWORD PTR [rbp-0x4],eax
  42ac96:	cmp    DWORD PTR [rbp-0x4],0x0
  42ac9a:	je     42acaf <flatcc_json_parser_struct_as_root@@Base+0x1b06>
  42ac9c:	mov    rax,QWORD PTR [rbp-0x20]
  42aca0:	lea    rdx,[rax+0x1]
  42aca4:	mov    QWORD PTR [rbp-0x20],rdx
  42aca8:	mov    BYTE PTR [rax],0x2d
  42acab:	neg    QWORD PTR [rbp-0x18]
  42acaf:	mov    rax,QWORD PTR [rbp-0x18]
  42acb3:	mov    rdx,QWORD PTR [rbp-0x20]
  42acb7:	mov    rsi,rdx
  42acba:	mov    rdi,rax
  42acbd:	call   42ab2f <flatcc_json_parser_struct_as_root@@Base+0x1986>
  42acc2:	mov    edx,eax
  42acc4:	mov    eax,DWORD PTR [rbp-0x4]
  42acc7:	add    eax,edx
  42acc9:	leave  
  42acca:	ret    
  42accb:	push   rbp
  42accc:	mov    rbp,rsp
  42accf:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42acd4:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42acd9:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42acde:	mov    rax,QWORD PTR [rbp-0x8]
  42ace2:	pop    rbp
  42ace3:	ret    
  42ace4:	push   rbp
  42ace5:	mov    rbp,rsp
  42ace8:	mov    QWORD PTR [rbp-0x18],rdi
  42acec:	mov    rax,QWORD PTR [rbp-0x18]
  42acf0:	mov    QWORD PTR [rbp-0x8],rax
  42acf4:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42acf9:	pop    rbp
  42acfa:	ret    
  42acfb:	push   rbp
  42acfc:	mov    rbp,rsp
  42acff:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42ad04:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42ad09:	vcvttsd2si eax,xmm0
  42ad0d:	mov    DWORD PTR [rbp-0x4],eax
  42ad10:	vxorpd xmm0,xmm0,xmm0
  42ad14:	vucomisd xmm0,QWORD PTR [rbp-0x18]
  42ad19:	jbe    42ad20 <flatcc_json_parser_struct_as_root@@Base+0x1b77>
  42ad1b:	mov    eax,DWORD PTR [rbp-0x4]
  42ad1e:	jmp    42ad51 <flatcc_json_parser_struct_as_root@@Base+0x1ba8>
  42ad20:	vxorpd xmm0,xmm0,xmm0
  42ad24:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  42ad29:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42ad2e:	vsubsd xmm0,xmm1,xmm0
  42ad32:	vxorpd xmm1,xmm1,xmm1
  42ad36:	vucomisd xmm0,xmm1
  42ad3a:	jp     42ad46 <flatcc_json_parser_struct_as_root@@Base+0x1b9d>
  42ad3c:	vxorpd xmm1,xmm1,xmm1
  42ad40:	vucomisd xmm0,xmm1
  42ad44:	je     42ad4e <flatcc_json_parser_struct_as_root@@Base+0x1ba5>
  42ad46:	mov    eax,DWORD PTR [rbp-0x4]
  42ad49:	add    eax,0x1
  42ad4c:	jmp    42ad51 <flatcc_json_parser_struct_as_root@@Base+0x1ba8>
  42ad4e:	mov    eax,DWORD PTR [rbp-0x4]
  42ad51:	pop    rbp
  42ad52:	ret    
  42ad53:	push   rbp
  42ad54:	mov    rbp,rsp
  42ad57:	sub    rsp,0x20
  42ad5b:	mov    DWORD PTR [rbp-0x14],edi
  42ad5e:	mov    QWORD PTR [rbp-0x20],rsi
  42ad62:	mov    eax,DWORD PTR [rbp-0x14]
  42ad65:	add    eax,0x3f
  42ad68:	vxorpd xmm0,xmm0,xmm0
  42ad6c:	vcvtsi2sd xmm0,xmm0,eax
  42ad70:	vmovsd xmm1,QWORD PTR [rip+0x12970]        # 43d6e8 <flatcc_builder_padding_base@@Base+0x3768>
  42ad78:	vmulsd xmm0,xmm0,xmm1
  42ad7c:	call   42acfb <flatcc_json_parser_struct_as_root@@Base+0x1b52>
  42ad81:	mov    DWORD PTR [rbp-0x8],eax
  42ad84:	mov    eax,DWORD PTR [rbp-0x8]
  42ad87:	add    eax,0x15b
  42ad8c:	lea    edx,[rax+0x7]
  42ad8f:	test   eax,eax
  42ad91:	cmovs  eax,edx
  42ad94:	sar    eax,0x3
  42ad97:	add    eax,0x1
  42ad9a:	mov    DWORD PTR [rbp-0x4],eax
  42ad9d:	mov    eax,DWORD PTR [rbp-0x4]
  42ada0:	cdqe   
  42ada2:	shl    rax,0x4
  42ada6:	mov    rdx,rax
  42ada9:	lea    rax,[rip+0x11a50]        # 43c800 <flatcc_builder_padding_base@@Base+0x2880>
  42adb0:	mov    rdx,QWORD PTR [rdx+rax*1]
  42adb4:	mov    rax,QWORD PTR [rbp-0x20]
  42adb8:	mov    QWORD PTR [rax],rdx
  42adbb:	mov    eax,DWORD PTR [rbp-0x4]
  42adbe:	cdqe   
  42adc0:	shl    rax,0x4
  42adc4:	mov    rdx,rax
  42adc7:	lea    rax,[rip+0x11a3a]        # 43c808 <flatcc_builder_padding_base@@Base+0x2888>
  42adce:	movzx  eax,WORD PTR [rdx+rax*1]
  42add2:	movsx  edx,ax
  42add5:	mov    rax,QWORD PTR [rbp-0x20]
  42add9:	mov    DWORD PTR [rax+0x8],edx
  42addc:	mov    eax,DWORD PTR [rbp-0x4]
  42addf:	cdqe   
  42ade1:	shl    rax,0x4
  42ade5:	mov    rdx,rax
  42ade8:	lea    rax,[rip+0x11a1b]        # 43c80a <flatcc_builder_padding_base@@Base+0x288a>
  42adef:	movzx  eax,WORD PTR [rdx+rax*1]
  42adf3:	cwde   
  42adf4:	leave  
  42adf5:	ret    
  42adf6:	push   rbp
  42adf7:	mov    rbp,rsp
  42adfa:	sub    rsp,0x30
  42adfe:	mov    rax,rdi
  42ae01:	mov    r8,rsi
  42ae04:	mov    rsi,rax
  42ae07:	mov    rdi,rdx
  42ae0a:	mov    rdi,r8
  42ae0d:	mov    QWORD PTR [rbp-0x20],rsi
  42ae11:	mov    QWORD PTR [rbp-0x18],rdi
  42ae15:	mov    QWORD PTR [rbp-0x30],rdx
  42ae19:	mov    QWORD PTR [rbp-0x28],rcx
  42ae1d:	mov    rdx,QWORD PTR [rbp-0x20]
  42ae21:	mov    rax,QWORD PTR [rbp-0x30]
  42ae25:	sub    rdx,rax
  42ae28:	mov    rax,rdx
  42ae2b:	mov    QWORD PTR [rbp-0x10],rax
  42ae2f:	mov    eax,DWORD PTR [rbp-0x18]
  42ae32:	mov    DWORD PTR [rbp-0x8],eax
  42ae35:	mov    edx,DWORD PTR [rbp-0x18]
  42ae38:	mov    eax,DWORD PTR [rbp-0x28]
  42ae3b:	cmp    edx,eax
  42ae3d:	jne    42ae4c <flatcc_json_parser_struct_as_root@@Base+0x1ca3>
  42ae3f:	mov    rdx,QWORD PTR [rbp-0x20]
  42ae43:	mov    rax,QWORD PTR [rbp-0x30]
  42ae47:	cmp    rdx,rax
  42ae4a:	jae    42ae6b <flatcc_json_parser_struct_as_root@@Base+0x1cc2>
  42ae4c:	lea    rcx,[rip+0x1233d]        # 43d190 <flatcc_builder_padding_base@@Base+0x3210>
  42ae53:	mov    edx,0xef
  42ae58:	lea    rsi,[rip+0x11f11]        # 43cd70 <flatcc_builder_padding_base@@Base+0x2df0>
  42ae5f:	lea    rdi,[rip+0x11f7a]        # 43cde0 <flatcc_builder_padding_base@@Base+0x2e60>
  42ae66:	call   405080 <__assert_fail@plt>
  42ae6b:	mov    rax,QWORD PTR [rbp-0x10]
  42ae6f:	mov    rdx,QWORD PTR [rbp-0x8]
  42ae73:	leave  
  42ae74:	ret    
  42ae75:	push   rbp
  42ae76:	mov    rbp,rsp
  42ae79:	sub    rsp,0x8
  42ae7d:	mov    rax,rdi
  42ae80:	mov    r8,rsi
  42ae83:	mov    rsi,rax
  42ae86:	mov    rdi,rdx
  42ae89:	mov    rdi,r8
  42ae8c:	mov    QWORD PTR [rbp-0x70],rsi
  42ae90:	mov    QWORD PTR [rbp-0x68],rdi
  42ae94:	mov    QWORD PTR [rbp-0x80],rdx
  42ae98:	mov    QWORD PTR [rbp-0x78],rcx
  42ae9c:	mov    rax,QWORD PTR [rbp-0x70]
  42aea0:	shr    rax,0x20
  42aea4:	mov    QWORD PTR [rbp-0x58],rax
  42aea8:	mov    rax,QWORD PTR [rbp-0x70]
  42aeac:	and    eax,0xffffffff
  42aeaf:	mov    QWORD PTR [rbp-0x50],rax
  42aeb3:	mov    rax,QWORD PTR [rbp-0x80]
  42aeb7:	shr    rax,0x20
  42aebb:	mov    QWORD PTR [rbp-0x48],rax
  42aebf:	mov    rax,QWORD PTR [rbp-0x80]
  42aec3:	and    eax,0xffffffff
  42aec6:	mov    QWORD PTR [rbp-0x40],rax
  42aeca:	mov    rax,QWORD PTR [rbp-0x58]
  42aece:	imul   rax,QWORD PTR [rbp-0x48]
  42aed3:	mov    QWORD PTR [rbp-0x38],rax
  42aed7:	mov    rax,QWORD PTR [rbp-0x50]
  42aedb:	imul   rax,QWORD PTR [rbp-0x48]
  42aee0:	mov    QWORD PTR [rbp-0x30],rax
  42aee4:	mov    rax,QWORD PTR [rbp-0x58]
  42aee8:	imul   rax,QWORD PTR [rbp-0x40]
  42aeed:	mov    QWORD PTR [rbp-0x28],rax
  42aef1:	mov    rax,QWORD PTR [rbp-0x50]
  42aef5:	imul   rax,QWORD PTR [rbp-0x40]
  42aefa:	mov    QWORD PTR [rbp-0x20],rax
  42aefe:	mov    rax,QWORD PTR [rbp-0x20]
  42af02:	shr    rax,0x20
  42af06:	mov    rdx,QWORD PTR [rbp-0x28]
  42af0a:	mov    edx,edx
  42af0c:	add    rax,rdx
  42af0f:	mov    rdx,QWORD PTR [rbp-0x30]
  42af13:	mov    edx,edx
  42af15:	add    rax,rdx
  42af18:	mov    QWORD PTR [rbp-0x18],rax
  42af1c:	mov    eax,0x80000000
  42af21:	add    QWORD PTR [rbp-0x18],rax
  42af25:	mov    rax,QWORD PTR [rbp-0x28]
  42af29:	shr    rax,0x20
  42af2d:	mov    rdx,rax
  42af30:	mov    rax,QWORD PTR [rbp-0x38]
  42af34:	add    rdx,rax
  42af37:	mov    rax,QWORD PTR [rbp-0x30]
  42af3b:	shr    rax,0x20
  42af3f:	add    rdx,rax
  42af42:	mov    rax,QWORD PTR [rbp-0x18]
  42af46:	shr    rax,0x20
  42af4a:	add    rax,rdx
  42af4d:	mov    QWORD PTR [rbp-0x10],rax
  42af51:	mov    edx,DWORD PTR [rbp-0x68]
  42af54:	mov    eax,DWORD PTR [rbp-0x78]
  42af57:	add    eax,edx
  42af59:	add    eax,0x40
  42af5c:	mov    DWORD PTR [rbp-0x8],eax
  42af5f:	mov    rax,QWORD PTR [rbp-0x10]
  42af63:	mov    rdx,QWORD PTR [rbp-0x8]
  42af67:	leave  
  42af68:	ret    
  42af69:	push   rbp
  42af6a:	mov    rbp,rsp
  42af6d:	sub    rsp,0x10
  42af71:	mov    rax,rdi
  42af74:	mov    rcx,rsi
  42af77:	mov    rdx,rcx
  42af7a:	mov    QWORD PTR [rbp-0x10],rax
  42af7e:	mov    QWORD PTR [rbp-0x8],rdx
  42af82:	mov    rax,QWORD PTR [rbp-0x10]
  42af86:	test   rax,rax
  42af89:	jne    42afbf <flatcc_json_parser_struct_as_root@@Base+0x1e16>
  42af8b:	lea    rcx,[rip+0x1221e]        # 43d1b0 <flatcc_builder_padding_base@@Base+0x3230>
  42af92:	mov    edx,0x104
  42af97:	lea    rsi,[rip+0x11dd2]        # 43cd70 <flatcc_builder_padding_base@@Base+0x2df0>
  42af9e:	lea    rdi,[rip+0x11e54]        # 43cdf9 <flatcc_builder_padding_base@@Base+0x2e79>
  42afa5:	call   405080 <__assert_fail@plt>
  42afaa:	mov    rax,QWORD PTR [rbp-0x10]
  42afae:	shl    rax,0xa
  42afb2:	mov    QWORD PTR [rbp-0x10],rax
  42afb6:	mov    eax,DWORD PTR [rbp-0x8]
  42afb9:	sub    eax,0xa
  42afbc:	mov    DWORD PTR [rbp-0x8],eax
  42afbf:	mov    rdx,QWORD PTR [rbp-0x10]
  42afc3:	movabs rax,0xffc0000000000000
  42afcd:	and    rax,rdx
  42afd0:	test   rax,rax
  42afd3:	je     42afaa <flatcc_json_parser_struct_as_root@@Base+0x1e01>
  42afd5:	jmp    42afeb <flatcc_json_parser_struct_as_root@@Base+0x1e42>
  42afd7:	mov    rax,QWORD PTR [rbp-0x10]
  42afdb:	add    rax,rax
  42afde:	mov    QWORD PTR [rbp-0x10],rax
  42afe2:	mov    eax,DWORD PTR [rbp-0x8]
  42afe5:	sub    eax,0x1
  42afe8:	mov    DWORD PTR [rbp-0x8],eax
  42afeb:	mov    rax,QWORD PTR [rbp-0x10]
  42afef:	test   rax,rax
  42aff2:	jns    42afd7 <flatcc_json_parser_struct_as_root@@Base+0x1e2e>
  42aff4:	mov    rax,QWORD PTR [rbp-0x10]
  42aff8:	mov    rdx,QWORD PTR [rbp-0x8]
  42affc:	leave  
  42affd:	ret    
  42affe:	push   rbp
  42afff:	mov    rbp,rsp
  42b002:	sub    rsp,0x30
  42b006:	vmovsd QWORD PTR [rbp-0x28],xmm0
  42b00b:	mov    rax,QWORD PTR [rbp-0x28]
  42b00f:	mov    QWORD PTR [rbp-0x30],rax
  42b013:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  42b018:	call   42accb <flatcc_json_parser_struct_as_root@@Base+0x1b22>
  42b01d:	mov    QWORD PTR [rbp-0x18],rax
  42b021:	movabs rax,0x7ff0000000000000
  42b02b:	and    rax,QWORD PTR [rbp-0x18]
  42b02f:	test   rax,rax
  42b032:	jne    42b04f <flatcc_json_parser_struct_as_root@@Base+0x1ea6>
  42b034:	movabs rax,0xfffffffffffff
  42b03e:	and    rax,QWORD PTR [rbp-0x18]
  42b042:	mov    QWORD PTR [rbp-0x10],rax
  42b046:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  42b04d:	jmp    42b086 <flatcc_json_parser_struct_as_root@@Base+0x1edd>
  42b04f:	movabs rax,0xfffffffffffff
  42b059:	and    rax,QWORD PTR [rbp-0x18]
  42b05d:	mov    rdx,rax
  42b060:	movabs rax,0x10000000000000
  42b06a:	add    rax,rdx
  42b06d:	mov    QWORD PTR [rbp-0x10],rax
  42b071:	mov    rax,QWORD PTR [rbp-0x18]
  42b075:	shr    rax,0x34
  42b079:	and    eax,0x7ff
  42b07e:	sub    eax,0x433
  42b083:	mov    DWORD PTR [rbp-0x8],eax
  42b086:	mov    rax,QWORD PTR [rbp-0x10]
  42b08a:	mov    rdx,QWORD PTR [rbp-0x8]
  42b08e:	leave  
  42b08f:	ret    
  42b090:	push   rbp
  42b091:	mov    rbp,rsp
  42b094:	sub    rsp,0x60
  42b098:	mov    rax,rdi
  42b09b:	mov    rcx,rsi
  42b09e:	mov    rdx,rcx
  42b0a1:	mov    QWORD PTR [rbp-0x50],rax
  42b0a5:	mov    QWORD PTR [rbp-0x48],rdx
  42b0a9:	movabs rax,0x10000000000000
  42b0b3:	mov    QWORD PTR [rbp-0x20],rax
  42b0b7:	movabs rax,0xfffffffffffff
  42b0c1:	mov    QWORD PTR [rbp-0x18],rax
  42b0c5:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  42b0cc:	mov    DWORD PTR [rbp-0x30],0x433
  42b0d3:	mov    DWORD PTR [rbp-0x2c],0x34
  42b0da:	mov    rax,QWORD PTR [rbp-0x50]
  42b0de:	mov    rdx,QWORD PTR [rbp-0x48]
  42b0e2:	mov    QWORD PTR [rbp-0x10],rax
  42b0e6:	mov    QWORD PTR [rbp-0x8],rdx
  42b0ea:	jmp    42b100 <flatcc_json_parser_struct_as_root@@Base+0x1f57>
  42b0ec:	mov    rax,QWORD PTR [rbp-0x10]
  42b0f0:	shr    rax,1
  42b0f3:	mov    QWORD PTR [rbp-0x10],rax
  42b0f7:	mov    eax,DWORD PTR [rbp-0x8]
  42b0fa:	add    eax,0x1
  42b0fd:	mov    DWORD PTR [rbp-0x8],eax
  42b100:	mov    rax,QWORD PTR [rbp-0x10]
  42b104:	mov    rcx,QWORD PTR [rbp-0x20]
  42b108:	mov    rdx,QWORD PTR [rbp-0x18]
  42b10c:	add    rdx,rcx
  42b10f:	cmp    rax,rdx
  42b112:	ja     42b0ec <flatcc_json_parser_struct_as_root@@Base+0x1f43>
  42b114:	mov    eax,DWORD PTR [rbp-0x8]
  42b117:	cmp    eax,DWORD PTR [rbp-0x34]
  42b11a:	jge    42b139 <flatcc_json_parser_struct_as_root@@Base+0x1f90>
  42b11c:	mov    rax,QWORD PTR [rip+0x125bd]        # 43d6e0 <flatcc_builder_padding_base@@Base+0x3760>
  42b123:	jmp    42b1a2 <flatcc_json_parser_struct_as_root@@Base+0x1ff9>
  42b125:	mov    rax,QWORD PTR [rbp-0x10]
  42b129:	add    rax,rax
  42b12c:	mov    QWORD PTR [rbp-0x10],rax
  42b130:	mov    eax,DWORD PTR [rbp-0x8]
  42b133:	sub    eax,0x1
  42b136:	mov    DWORD PTR [rbp-0x8],eax
  42b139:	mov    eax,DWORD PTR [rbp-0x8]
  42b13c:	cmp    eax,DWORD PTR [rbp-0x34]
  42b13f:	jle    42b14e <flatcc_json_parser_struct_as_root@@Base+0x1fa5>
  42b141:	mov    rax,QWORD PTR [rbp-0x10]
  42b145:	and    rax,QWORD PTR [rbp-0x20]
  42b149:	test   rax,rax
  42b14c:	je     42b125 <flatcc_json_parser_struct_as_root@@Base+0x1f7c>
  42b14e:	mov    eax,DWORD PTR [rbp-0x8]
  42b151:	cmp    eax,DWORD PTR [rbp-0x34]
  42b154:	jne    42b16d <flatcc_json_parser_struct_as_root@@Base+0x1fc4>
  42b156:	mov    rax,QWORD PTR [rbp-0x10]
  42b15a:	and    rax,QWORD PTR [rbp-0x20]
  42b15e:	test   rax,rax
  42b161:	jne    42b16d <flatcc_json_parser_struct_as_root@@Base+0x1fc4>
  42b163:	mov    QWORD PTR [rbp-0x28],0x0
  42b16b:	jmp    42b17b <flatcc_json_parser_struct_as_root@@Base+0x1fd2>
  42b16d:	mov    edx,DWORD PTR [rbp-0x8]
  42b170:	mov    eax,DWORD PTR [rbp-0x30]
  42b173:	add    eax,edx
  42b175:	cdqe   
  42b177:	mov    QWORD PTR [rbp-0x28],rax
  42b17b:	mov    rax,QWORD PTR [rbp-0x10]
  42b17f:	and    rax,QWORD PTR [rbp-0x18]
  42b183:	mov    rdx,rax
  42b186:	mov    eax,DWORD PTR [rbp-0x2c]
  42b189:	mov    rcx,QWORD PTR [rbp-0x28]
  42b18d:	shlx   rax,rcx,rax
  42b192:	or     rax,rdx
  42b195:	mov    rdi,rax
  42b198:	call   42ace4 <flatcc_json_parser_struct_as_root@@Base+0x1b3b>
  42b19d:	vmovq  rax,xmm0
  42b1a2:	mov    QWORD PTR [rbp-0x58],rax
  42b1a6:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  42b1ab:	leave  
  42b1ac:	ret    
  42b1ad:	push   rbp
  42b1ae:	mov    rbp,rsp
  42b1b1:	mov    DWORD PTR [rbp-0x14],edi
  42b1b4:	mov    DWORD PTR [rbp-0x18],esi
  42b1b7:	mov    QWORD PTR [rbp-0x20],rdx
  42b1bb:	mov    eax,DWORD PTR [rbp-0x18]
  42b1be:	add    eax,0x1
  42b1c1:	imul   eax,eax,0x4d1
  42b1c7:	sar    eax,0xc
  42b1ca:	add    eax,0x1
  42b1cd:	mov    DWORD PTR [rbp-0x4],eax
  42b1d0:	mov    eax,DWORD PTR [rbp-0x4]
  42b1d3:	cdqe   
  42b1d5:	lea    rdx,[rax*4+0x0]
  42b1dd:	lea    rax,[rip+0x11c3c]        # 43ce20 <flatcc_builder_padding_base@@Base+0x2ea0>
  42b1e4:	mov    eax,DWORD PTR [rdx+rax*1]
  42b1e7:	cmp    eax,DWORD PTR [rbp-0x14]
  42b1ea:	jbe    42b1f0 <flatcc_json_parser_struct_as_root@@Base+0x2047>
  42b1ec:	sub    DWORD PTR [rbp-0x4],0x1
  42b1f0:	mov    eax,DWORD PTR [rbp-0x4]
  42b1f3:	cdqe   
  42b1f5:	lea    rdx,[rax*4+0x0]
  42b1fd:	lea    rax,[rip+0x11c1c]        # 43ce20 <flatcc_builder_padding_base@@Base+0x2ea0>
  42b204:	mov    edx,DWORD PTR [rdx+rax*1]
  42b207:	mov    rax,QWORD PTR [rbp-0x20]
  42b20b:	mov    DWORD PTR [rax],edx
  42b20d:	mov    eax,DWORD PTR [rbp-0x4]
  42b210:	pop    rbp
  42b211:	ret    
  42b212:	push   rbp
  42b213:	mov    rbp,rsp
  42b216:	mov    QWORD PTR [rbp-0x18],rdi
  42b21a:	mov    DWORD PTR [rbp-0x1c],esi
  42b21d:	mov    QWORD PTR [rbp-0x28],rdx
  42b221:	mov    QWORD PTR [rbp-0x30],rcx
  42b225:	mov    QWORD PTR [rbp-0x38],r8
  42b229:	mov    QWORD PTR [rbp-0x40],r9
  42b22d:	mov    rax,QWORD PTR [rbp-0x28]
  42b231:	sub    rax,QWORD PTR [rbp+0x10]
  42b235:	mov    QWORD PTR [rbp-0x10],rax
  42b239:	mov    rdx,QWORD PTR [rbp-0x28]
  42b23d:	mov    rax,QWORD PTR [rbp+0x10]
  42b241:	add    rax,rdx
  42b244:	mov    QWORD PTR [rbp-0x8],rax
  42b248:	jmp    42b26a <flatcc_json_parser_struct_as_root@@Base+0x20c1>
  42b24a:	mov    eax,DWORD PTR [rbp-0x1c]
  42b24d:	cdqe   
  42b24f:	lea    rdx,[rax-0x1]
  42b253:	mov    rax,QWORD PTR [rbp-0x18]
  42b257:	add    rax,rdx
  42b25a:	movzx  edx,BYTE PTR [rax]
  42b25d:	sub    edx,0x1
  42b260:	mov    BYTE PTR [rax],dl
  42b262:	mov    rax,QWORD PTR [rbp-0x40]
  42b266:	add    QWORD PTR [rbp-0x38],rax
  42b26a:	mov    rax,QWORD PTR [rbp-0x38]
  42b26e:	cmp    rax,QWORD PTR [rbp-0x10]
  42b272:	jae    42b2b2 <flatcc_json_parser_struct_as_root@@Base+0x2109>
  42b274:	mov    rax,QWORD PTR [rbp-0x30]
  42b278:	sub    rax,QWORD PTR [rbp-0x38]
  42b27c:	cmp    rax,QWORD PTR [rbp-0x40]
  42b280:	jb     42b2b2 <flatcc_json_parser_struct_as_root@@Base+0x2109>
  42b282:	mov    rdx,QWORD PTR [rbp-0x38]
  42b286:	mov    rax,QWORD PTR [rbp-0x40]
  42b28a:	add    rax,rdx
  42b28d:	cmp    rax,QWORD PTR [rbp-0x10]
  42b291:	jb     42b24a <flatcc_json_parser_struct_as_root@@Base+0x20a1>
  42b293:	mov    rax,QWORD PTR [rbp-0x10]
  42b297:	sub    rax,QWORD PTR [rbp-0x38]
  42b29b:	mov    rdx,rax
  42b29e:	mov    rcx,QWORD PTR [rbp-0x38]
  42b2a2:	mov    rax,QWORD PTR [rbp-0x40]
  42b2a6:	add    rax,rcx
  42b2a9:	sub    rax,QWORD PTR [rbp-0x10]
  42b2ad:	cmp    rdx,rax
  42b2b0:	jae    42b24a <flatcc_json_parser_struct_as_root@@Base+0x20a1>
  42b2b2:	mov    rax,QWORD PTR [rbp-0x38]
  42b2b6:	cmp    rax,QWORD PTR [rbp-0x8]
  42b2ba:	jae    42b301 <flatcc_json_parser_struct_as_root@@Base+0x2158>
  42b2bc:	mov    rax,QWORD PTR [rbp-0x30]
  42b2c0:	sub    rax,QWORD PTR [rbp-0x38]
  42b2c4:	cmp    rax,QWORD PTR [rbp-0x40]
  42b2c8:	jb     42b301 <flatcc_json_parser_struct_as_root@@Base+0x2158>
  42b2ca:	mov    rdx,QWORD PTR [rbp-0x38]
  42b2ce:	mov    rax,QWORD PTR [rbp-0x40]
  42b2d2:	add    rax,rdx
  42b2d5:	cmp    rax,QWORD PTR [rbp-0x8]
  42b2d9:	jb     42b2fa <flatcc_json_parser_struct_as_root@@Base+0x2151>
  42b2db:	mov    rax,QWORD PTR [rbp-0x8]
  42b2df:	sub    rax,QWORD PTR [rbp-0x38]
  42b2e3:	mov    rdx,rax
  42b2e6:	mov    rcx,QWORD PTR [rbp-0x38]
  42b2ea:	mov    rax,QWORD PTR [rbp-0x40]
  42b2ee:	add    rax,rcx
  42b2f1:	sub    rax,QWORD PTR [rbp-0x8]
  42b2f5:	cmp    rdx,rax
  42b2f8:	jbe    42b301 <flatcc_json_parser_struct_as_root@@Base+0x2158>
  42b2fa:	mov    eax,0x0
  42b2ff:	jmp    42b333 <flatcc_json_parser_struct_as_root@@Base+0x218a>
  42b301:	mov    rax,QWORD PTR [rbp+0x10]
  42b305:	add    rax,rax
  42b308:	cmp    rax,QWORD PTR [rbp-0x38]
  42b30c:	ja     42b32e <flatcc_json_parser_struct_as_root@@Base+0x2185>
  42b30e:	mov    rax,QWORD PTR [rbp+0x10]
  42b312:	lea    rdx,[rax*4+0x0]
  42b31a:	mov    rax,QWORD PTR [rbp-0x30]
  42b31e:	sub    rax,rdx
  42b321:	cmp    rax,QWORD PTR [rbp-0x38]
  42b325:	jb     42b32e <flatcc_json_parser_struct_as_root@@Base+0x2185>
  42b327:	mov    eax,0x1
  42b32c:	jmp    42b333 <flatcc_json_parser_struct_as_root@@Base+0x218a>
  42b32e:	mov    eax,0x0
  42b333:	pop    rbp
  42b334:	ret    
  42b335:	push   rbp
  42b336:	mov    rbp,rsp
  42b339:	push   r12
  42b33b:	push   rbx
  42b33c:	sub    rsp,0xd0
  42b343:	mov    rax,rdi
  42b346:	mov    r10,rsi
  42b349:	mov    rsi,rax
  42b34c:	mov    rdi,rdx
  42b34f:	mov    rdi,r10
  42b352:	mov    QWORD PTR [rbp-0xa0],rsi
  42b359:	mov    QWORD PTR [rbp-0x98],rdi
  42b360:	mov    QWORD PTR [rbp-0xb0],rdx
  42b367:	mov    QWORD PTR [rbp-0xa8],rcx
  42b36e:	mov    QWORD PTR [rbp-0xc0],r8
  42b375:	mov    QWORD PTR [rbp-0xb8],r9
  42b37c:	mov    rax,QWORD PTR [rbp+0x10]
  42b380:	mov    QWORD PTR [rbp-0xc8],rax
  42b387:	mov    rax,QWORD PTR [rbp+0x18]
  42b38b:	mov    QWORD PTR [rbp-0xd0],rax
  42b392:	mov    rax,QWORD PTR [rbp+0x20]
  42b396:	mov    QWORD PTR [rbp-0xd8],rax
  42b39d:	mov    rax,QWORD PTR fs:0x28
  42b3a6:	mov    QWORD PTR [rbp-0x18],rax
  42b3aa:	xor    eax,eax
  42b3ac:	mov    QWORD PTR [rbp-0x78],0x1
  42b3b4:	mov    rax,QWORD PTR [rbp-0xa0]
  42b3bb:	sub    rax,QWORD PTR [rbp-0x78]
  42b3bf:	mov    QWORD PTR [rbp-0x60],rax
  42b3c3:	mov    eax,DWORD PTR [rbp-0x98]
  42b3c9:	mov    DWORD PTR [rbp-0x58],eax
  42b3cc:	mov    rdx,QWORD PTR [rbp-0xc0]
  42b3d3:	mov    rax,QWORD PTR [rbp-0x78]
  42b3d7:	add    rax,rdx
  42b3da:	mov    QWORD PTR [rbp-0x50],rax
  42b3de:	mov    eax,DWORD PTR [rbp-0xb8]
  42b3e4:	mov    DWORD PTR [rbp-0x48],eax
  42b3e7:	mov    rax,QWORD PTR [rbp-0x60]
  42b3eb:	mov    rdx,QWORD PTR [rbp-0x58]
  42b3ef:	mov    rdi,QWORD PTR [rbp-0x50]
  42b3f3:	mov    rsi,QWORD PTR [rbp-0x48]
  42b3f7:	mov    rcx,rdx
  42b3fa:	mov    rdx,rax
  42b3fd:	call   42adf6 <flatcc_json_parser_struct_as_root@@Base+0x1c4d>
  42b402:	mov    QWORD PTR [rbp-0x40],rax
  42b406:	mov    QWORD PTR [rbp-0x38],rdx
  42b40a:	mov    eax,DWORD PTR [rbp-0xa8]
  42b410:	neg    eax
  42b412:	mov    edx,0x1
  42b417:	shlx   rax,rdx,rax
  42b41c:	mov    QWORD PTR [rbp-0x30],rax
  42b420:	mov    eax,DWORD PTR [rbp-0xa8]
  42b426:	mov    DWORD PTR [rbp-0x28],eax
  42b429:	mov    rdx,QWORD PTR [rbp-0x50]
  42b42d:	mov    eax,DWORD PTR [rbp-0x28]
  42b430:	neg    eax
  42b432:	shrx   rax,rdx,rax
  42b437:	mov    DWORD PTR [rbp-0x84],eax
  42b43d:	mov    rax,QWORD PTR [rbp-0x50]
  42b441:	mov    rdx,QWORD PTR [rbp-0x30]
  42b445:	sub    rdx,0x1
  42b449:	and    rax,rdx
  42b44c:	mov    QWORD PTR [rbp-0x70],rax
  42b450:	mov    eax,DWORD PTR [rbp-0x28]
  42b453:	lea    ecx,[rax+0x40]
  42b456:	lea    rdx,[rbp-0x88]
  42b45d:	mov    eax,DWORD PTR [rbp-0x84]
  42b463:	mov    esi,ecx
  42b465:	mov    edi,eax
  42b467:	call   42b1ad <flatcc_json_parser_struct_as_root@@Base+0x2004>
  42b46c:	mov    edx,eax
  42b46e:	mov    rax,QWORD PTR [rbp-0xd8]
  42b475:	mov    DWORD PTR [rax],edx
  42b477:	mov    rax,QWORD PTR [rbp-0xd0]
  42b47e:	mov    DWORD PTR [rax],0x0
  42b484:	jmp    42b5af <flatcc_json_parser_struct_as_root@@Base+0x2406>
  42b489:	mov    ebx,DWORD PTR [rbp-0x88]
  42b48f:	mov    eax,DWORD PTR [rbp-0x84]
  42b495:	mov    edx,0x0
  42b49a:	div    ebx
  42b49c:	mov    DWORD PTR [rbp-0x80],eax
  42b49f:	mov    rax,QWORD PTR [rbp-0xd0]
  42b4a6:	mov    eax,DWORD PTR [rax]
  42b4a8:	movsxd rdx,eax
  42b4ab:	mov    rax,QWORD PTR [rbp-0xc8]
  42b4b2:	add    rax,rdx
  42b4b5:	mov    edx,DWORD PTR [rbp-0x80]
  42b4b8:	add    edx,0x30
  42b4bb:	mov    BYTE PTR [rax],dl
  42b4bd:	mov    rax,QWORD PTR [rbp-0xd0]
  42b4c4:	mov    eax,DWORD PTR [rax]
  42b4c6:	lea    edx,[rax+0x1]
  42b4c9:	mov    rax,QWORD PTR [rbp-0xd0]
  42b4d0:	mov    DWORD PTR [rax],edx
  42b4d2:	mov    ecx,DWORD PTR [rbp-0x88]
  42b4d8:	mov    eax,DWORD PTR [rbp-0x84]
  42b4de:	mov    edx,0x0
  42b4e3:	div    ecx
  42b4e5:	mov    DWORD PTR [rbp-0x84],edx
  42b4eb:	mov    rax,QWORD PTR [rbp-0xd8]
  42b4f2:	mov    eax,DWORD PTR [rax]
  42b4f4:	lea    edx,[rax-0x1]
  42b4f7:	mov    rax,QWORD PTR [rbp-0xd8]
  42b4fe:	mov    DWORD PTR [rax],edx
  42b500:	mov    edx,DWORD PTR [rbp-0x84]
  42b506:	mov    eax,DWORD PTR [rbp-0x28]
  42b509:	neg    eax
  42b50b:	shlx   rdx,rdx,rax
  42b510:	mov    rax,QWORD PTR [rbp-0x70]
  42b514:	add    rax,rdx
  42b517:	mov    QWORD PTR [rbp-0x68],rax
  42b51b:	mov    rax,QWORD PTR [rbp-0x40]
  42b51f:	cmp    rax,QWORD PTR [rbp-0x68]
  42b523:	jbe    42b597 <flatcc_json_parser_struct_as_root@@Base+0x23ee>
  42b525:	mov    eax,DWORD PTR [rbp-0x88]
  42b52b:	mov    edx,eax
  42b52d:	mov    eax,DWORD PTR [rbp-0x28]
  42b530:	neg    eax
  42b532:	shlx   r12,rdx,rax
  42b537:	mov    rbx,QWORD PTR [rbp-0x40]
  42b53b:	mov    rax,QWORD PTR [rbp-0xb0]
  42b542:	mov    rdx,QWORD PTR [rbp-0xa8]
  42b549:	mov    rdi,QWORD PTR [rbp-0x50]
  42b54d:	mov    rsi,QWORD PTR [rbp-0x48]
  42b551:	mov    rcx,rdx
  42b554:	mov    rdx,rax
  42b557:	call   42adf6 <flatcc_json_parser_struct_as_root@@Base+0x1c4d>
  42b55c:	mov    rdi,rax
  42b55f:	mov    rax,QWORD PTR [rbp-0xd0]
  42b566:	mov    esi,DWORD PTR [rax]
  42b568:	mov    rdx,QWORD PTR [rbp-0x68]
  42b56c:	mov    rax,QWORD PTR [rbp-0xc8]
  42b573:	sub    rsp,0x8
  42b577:	push   QWORD PTR [rbp-0x78]
  42b57a:	mov    r9,r12
  42b57d:	mov    r8,rdx
  42b580:	mov    rcx,rbx
  42b583:	mov    rdx,rdi
  42b586:	mov    rdi,rax
  42b589:	call   42b212 <flatcc_json_parser_struct_as_root@@Base+0x2069>
  42b58e:	add    rsp,0x10
  42b592:	jmp    42b6d3 <flatcc_json_parser_struct_as_root@@Base+0x252a>
  42b597:	mov    eax,DWORD PTR [rbp-0x88]
  42b59d:	mov    edx,0xcccccccd
  42b5a2:	mul    edx
  42b5a4:	mov    eax,edx
  42b5a6:	shr    eax,0x3
  42b5a9:	mov    DWORD PTR [rbp-0x88],eax
  42b5af:	mov    rax,QWORD PTR [rbp-0xd8]
  42b5b6:	mov    eax,DWORD PTR [rax]
  42b5b8:	test   eax,eax
  42b5ba:	jg     42b489 <flatcc_json_parser_struct_as_root@@Base+0x22e0>
  42b5c0:	mov    rdx,QWORD PTR [rbp-0x70]
  42b5c4:	mov    rax,rdx
  42b5c7:	shl    rax,0x2
  42b5cb:	add    rax,rdx
  42b5ce:	add    rax,rax
  42b5d1:	mov    QWORD PTR [rbp-0x70],rax
  42b5d5:	mov    rdx,QWORD PTR [rbp-0x78]
  42b5d9:	mov    rax,rdx
  42b5dc:	shl    rax,0x2
  42b5e0:	add    rax,rdx
  42b5e3:	add    rax,rax
  42b5e6:	mov    QWORD PTR [rbp-0x78],rax
  42b5ea:	mov    rdx,QWORD PTR [rbp-0x40]
  42b5ee:	mov    rax,rdx
  42b5f1:	shl    rax,0x2
  42b5f5:	add    rax,rdx
  42b5f8:	add    rax,rax
  42b5fb:	mov    QWORD PTR [rbp-0x40],rax
  42b5ff:	mov    eax,DWORD PTR [rbp-0x28]
  42b602:	neg    eax
  42b604:	mov    rdx,QWORD PTR [rbp-0x70]
  42b608:	shrx   rax,rdx,rax
  42b60d:	mov    DWORD PTR [rbp-0x7c],eax
  42b610:	mov    rax,QWORD PTR [rbp-0xd0]
  42b617:	mov    eax,DWORD PTR [rax]
  42b619:	movsxd rdx,eax
  42b61c:	mov    rax,QWORD PTR [rbp-0xc8]
  42b623:	add    rax,rdx
  42b626:	mov    edx,DWORD PTR [rbp-0x7c]
  42b629:	add    edx,0x30
  42b62c:	mov    BYTE PTR [rax],dl
  42b62e:	mov    rax,QWORD PTR [rbp-0xd0]
  42b635:	mov    eax,DWORD PTR [rax]
  42b637:	lea    edx,[rax+0x1]
  42b63a:	mov    rax,QWORD PTR [rbp-0xd0]
  42b641:	mov    DWORD PTR [rax],edx
  42b643:	mov    rax,QWORD PTR [rbp-0x30]
  42b647:	sub    rax,0x1
  42b64b:	and    QWORD PTR [rbp-0x70],rax
  42b64f:	mov    rax,QWORD PTR [rbp-0xd8]
  42b656:	mov    eax,DWORD PTR [rax]
  42b658:	lea    edx,[rax-0x1]
  42b65b:	mov    rax,QWORD PTR [rbp-0xd8]
  42b662:	mov    DWORD PTR [rax],edx
  42b664:	mov    rax,QWORD PTR [rbp-0x40]
  42b668:	cmp    rax,QWORD PTR [rbp-0x70]
  42b66c:	jbe    42b5c0 <flatcc_json_parser_struct_as_root@@Base+0x2417>
  42b672:	mov    r12,QWORD PTR [rbp-0x30]
  42b676:	mov    rbx,QWORD PTR [rbp-0x40]
  42b67a:	mov    rax,QWORD PTR [rbp-0xb0]
  42b681:	mov    rdx,QWORD PTR [rbp-0xa8]
  42b688:	mov    rdi,QWORD PTR [rbp-0x50]
  42b68c:	mov    rsi,QWORD PTR [rbp-0x48]
  42b690:	mov    rcx,rdx
  42b693:	mov    rdx,rax
  42b696:	call   42adf6 <flatcc_json_parser_struct_as_root@@Base+0x1c4d>
  42b69b:	imul   rax,QWORD PTR [rbp-0x78]
  42b6a0:	mov    rdx,rax
  42b6a3:	mov    rax,QWORD PTR [rbp-0xd0]
  42b6aa:	mov    esi,DWORD PTR [rax]
  42b6ac:	mov    rcx,QWORD PTR [rbp-0x70]
  42b6b0:	mov    rax,QWORD PTR [rbp-0xc8]
  42b6b7:	sub    rsp,0x8
  42b6bb:	push   QWORD PTR [rbp-0x78]
  42b6be:	mov    r9,r12
  42b6c1:	mov    r8,rcx
  42b6c4:	mov    rcx,rbx
  42b6c7:	mov    rdi,rax
  42b6ca:	call   42b212 <flatcc_json_parser_struct_as_root@@Base+0x2069>
  42b6cf:	add    rsp,0x10
  42b6d3:	mov    rbx,QWORD PTR [rbp-0x18]
  42b6d7:	xor    rbx,QWORD PTR fs:0x28
  42b6e0:	je     42b6e7 <flatcc_json_parser_struct_as_root@@Base+0x253e>
  42b6e2:	call   405070 <__stack_chk_fail@plt>
  42b6e7:	lea    rsp,[rbp-0x10]
  42b6eb:	pop    rbx
  42b6ec:	pop    r12
  42b6ee:	pop    rbp
  42b6ef:	ret    
  42b6f0:	push   rbp
  42b6f1:	mov    rbp,rsp
  42b6f4:	push   rbx
  42b6f5:	sub    rsp,0xc8
  42b6fc:	vmovsd QWORD PTR [rbp-0xa8],xmm0
  42b704:	mov    QWORD PTR [rbp-0xb0],rdi
  42b70b:	mov    QWORD PTR [rbp-0xb8],rsi
  42b712:	mov    QWORD PTR [rbp-0xc0],rdx
  42b719:	mov    rax,QWORD PTR fs:0x28
  42b722:	mov    QWORD PTR [rbp-0x18],rax
  42b726:	xor    eax,eax
  42b728:	mov    rax,QWORD PTR [rbp-0xa8]
  42b72f:	mov    QWORD PTR [rbp-0xc8],rax
  42b736:	vmovsd xmm0,QWORD PTR [rbp-0xc8]
  42b73e:	call   42affe <flatcc_json_parser_struct_as_root@@Base+0x1e55>
  42b743:	mov    QWORD PTR [rbp-0x80],rax
  42b747:	mov    QWORD PTR [rbp-0x78],rdx
  42b74b:	mov    rdx,QWORD PTR [rbp-0x80]
  42b74f:	mov    rax,QWORD PTR [rbp-0x78]
  42b753:	mov    rdi,rdx
  42b756:	mov    rsi,rax
  42b759:	call   42af69 <flatcc_json_parser_struct_as_root@@Base+0x1dc0>
  42b75e:	mov    QWORD PTR [rbp-0x70],rax
  42b762:	mov    QWORD PTR [rbp-0x68],rdx
  42b766:	mov    rax,QWORD PTR [rbp-0x80]
  42b76a:	add    rax,rax
  42b76d:	add    rax,0x1
  42b771:	mov    QWORD PTR [rbp-0x60],rax
  42b775:	mov    eax,DWORD PTR [rbp-0x78]
  42b778:	sub    eax,0x1
  42b77b:	mov    DWORD PTR [rbp-0x58],eax
  42b77e:	mov    rdx,QWORD PTR [rbp-0x60]
  42b782:	mov    rax,QWORD PTR [rbp-0x58]
  42b786:	mov    rdi,rdx
  42b789:	mov    rsi,rax
  42b78c:	call   42af69 <flatcc_json_parser_struct_as_root@@Base+0x1dc0>
  42b791:	mov    QWORD PTR [rbp-0x50],rax
  42b795:	mov    QWORD PTR [rbp-0x48],rdx
  42b799:	mov    rax,QWORD PTR [rbp-0xa8]
  42b7a0:	mov    QWORD PTR [rbp-0xc8],rax
  42b7a7:	vmovsd xmm0,QWORD PTR [rbp-0xc8]
  42b7af:	call   42accb <flatcc_json_parser_struct_as_root@@Base+0x1b22>
  42b7b4:	mov    QWORD PTR [rbp-0x88],rax
  42b7bb:	vmovsd xmm0,QWORD PTR [rbp-0xa8]
  42b7c3:	vxorpd xmm1,xmm1,xmm1
  42b7c7:	vucomisd xmm0,xmm1
  42b7cb:	seta   al
  42b7ce:	xor    eax,0x1
  42b7d1:	test   al,al
  42b7d3:	jne    42b7ef <flatcc_json_parser_struct_as_root@@Base+0x2646>
  42b7d5:	vmovsd xmm0,QWORD PTR [rip+0x11f13]        # 43d6f0 <flatcc_builder_padding_base@@Base+0x3770>
  42b7dd:	vucomisd xmm0,QWORD PTR [rbp-0xa8]
  42b7e5:	setae  al
  42b7e8:	xor    eax,0x1
  42b7eb:	test   al,al
  42b7ed:	je     42b80e <flatcc_json_parser_struct_as_root@@Base+0x2665>
  42b7ef:	lea    rcx,[rip+0x119d2]        # 43d1c8 <flatcc_builder_padding_base@@Base+0x3248>
  42b7f6:	mov    edx,0x8a
  42b7fb:	lea    rsi,[rip+0x1164e]        # 43ce50 <flatcc_builder_padding_base@@Base+0x2ed0>
  42b802:	lea    rdi,[rip+0x116bf]        # 43cec8 <flatcc_builder_padding_base@@Base+0x2f48>
  42b809:	call   405080 <__assert_fail@plt>
  42b80e:	movabs rax,0xfffffffffffff
  42b818:	and    rax,QWORD PTR [rbp-0x88]
  42b81f:	test   rax,rax
  42b822:	jne    42b855 <flatcc_json_parser_struct_as_root@@Base+0x26ac>
  42b824:	movabs rax,0x7ff0000000000000
  42b82e:	and    rax,QWORD PTR [rbp-0x88]
  42b835:	test   rax,rax
  42b838:	je     42b855 <flatcc_json_parser_struct_as_root@@Base+0x26ac>
  42b83a:	mov    rax,QWORD PTR [rbp-0x80]
  42b83e:	shl    rax,0x2
  42b842:	sub    rax,0x1
  42b846:	mov    QWORD PTR [rbp-0x40],rax
  42b84a:	mov    eax,DWORD PTR [rbp-0x78]
  42b84d:	sub    eax,0x2
  42b850:	mov    DWORD PTR [rbp-0x38],eax
  42b853:	jmp    42b86d <flatcc_json_parser_struct_as_root@@Base+0x26c4>
  42b855:	mov    rax,QWORD PTR [rbp-0x80]
  42b859:	add    rax,rax
  42b85c:	sub    rax,0x1
  42b860:	mov    QWORD PTR [rbp-0x40],rax
  42b864:	mov    eax,DWORD PTR [rbp-0x78]
  42b867:	sub    eax,0x1
  42b86a:	mov    DWORD PTR [rbp-0x38],eax
  42b86d:	mov    rdx,QWORD PTR [rbp-0x40]
  42b871:	mov    ecx,DWORD PTR [rbp-0x38]
  42b874:	mov    eax,DWORD PTR [rbp-0x48]
  42b877:	sub    ecx,eax
  42b879:	mov    eax,ecx
  42b87b:	shlx   rax,rdx,rax
  42b880:	mov    QWORD PTR [rbp-0x40],rax
  42b884:	mov    eax,DWORD PTR [rbp-0x48]
  42b887:	mov    DWORD PTR [rbp-0x38],eax
  42b88a:	mov    eax,DWORD PTR [rbp-0x68]
  42b88d:	mov    edx,0xffffff84
  42b892:	sub    edx,eax
  42b894:	lea    rax,[rbp-0x30]
  42b898:	mov    rsi,rax
  42b89b:	mov    edi,edx
  42b89d:	call   42ad53 <flatcc_json_parser_struct_as_root@@Base+0x1baa>
  42b8a2:	mov    DWORD PTR [rbp-0x90],eax
  42b8a8:	mov    rax,QWORD PTR [rbp-0x30]
  42b8ac:	mov    rdx,QWORD PTR [rbp-0x28]
  42b8b0:	mov    rdi,QWORD PTR [rbp-0x70]
  42b8b4:	mov    rsi,QWORD PTR [rbp-0x68]
  42b8b8:	mov    rcx,rdx
  42b8bb:	mov    rdx,rax
  42b8be:	call   42ae75 <flatcc_json_parser_struct_as_root@@Base+0x1ccc>
  42b8c3:	mov    QWORD PTR [rbp-0x70],rax
  42b8c7:	mov    QWORD PTR [rbp-0x68],rdx
  42b8cb:	mov    rax,QWORD PTR [rbp-0x30]
  42b8cf:	mov    rdx,QWORD PTR [rbp-0x28]
  42b8d3:	mov    rdi,QWORD PTR [rbp-0x40]
  42b8d7:	mov    rsi,QWORD PTR [rbp-0x38]
  42b8db:	mov    rcx,rdx
  42b8de:	mov    rdx,rax
  42b8e1:	call   42ae75 <flatcc_json_parser_struct_as_root@@Base+0x1ccc>
  42b8e6:	mov    QWORD PTR [rbp-0x40],rax
  42b8ea:	mov    QWORD PTR [rbp-0x38],rdx
  42b8ee:	mov    rax,QWORD PTR [rbp-0x30]
  42b8f2:	mov    rdx,QWORD PTR [rbp-0x28]
  42b8f6:	mov    rdi,QWORD PTR [rbp-0x50]
  42b8fa:	mov    rsi,QWORD PTR [rbp-0x48]
  42b8fe:	mov    rcx,rdx
  42b901:	mov    rdx,rax
  42b904:	call   42ae75 <flatcc_json_parser_struct_as_root@@Base+0x1ccc>
  42b909:	mov    QWORD PTR [rbp-0x50],rax
  42b90d:	mov    QWORD PTR [rbp-0x48],rdx
  42b911:	mov    rcx,QWORD PTR [rbp-0x50]
  42b915:	mov    rbx,QWORD PTR [rbp-0x48]
  42b919:	mov    rax,QWORD PTR [rbp-0x70]
  42b91d:	mov    rdx,QWORD PTR [rbp-0x68]
  42b921:	mov    rdi,QWORD PTR [rbp-0x40]
  42b925:	mov    rsi,QWORD PTR [rbp-0x38]
  42b929:	sub    rsp,0x8
  42b92d:	lea    r8,[rbp-0x94]
  42b934:	push   r8
  42b936:	push   QWORD PTR [rbp-0xb8]
  42b93c:	push   QWORD PTR [rbp-0xb0]
  42b942:	mov    r8,rcx
  42b945:	mov    r9,rbx
  42b948:	mov    rcx,rdx
  42b94b:	mov    rdx,rax
  42b94e:	call   42b335 <flatcc_json_parser_struct_as_root@@Base+0x218c>
  42b953:	add    rsp,0x20
  42b957:	mov    DWORD PTR [rbp-0x8c],eax
  42b95d:	mov    eax,DWORD PTR [rbp-0x94]
  42b963:	sub    eax,DWORD PTR [rbp-0x90]
  42b969:	mov    edx,eax
  42b96b:	mov    rax,QWORD PTR [rbp-0xc0]
  42b972:	mov    DWORD PTR [rax],edx
  42b974:	mov    eax,DWORD PTR [rbp-0x8c]
  42b97a:	mov    rbx,QWORD PTR [rbp-0x18]
  42b97e:	xor    rbx,QWORD PTR fs:0x28
  42b987:	je     42b98e <flatcc_json_parser_struct_as_root@@Base+0x27e5>
  42b989:	call   405070 <__stack_chk_fail@plt>
  42b98e:	mov    rbx,QWORD PTR [rbp-0x8]
  42b992:	leave  
  42b993:	ret    
  42b994:	push   rbp
  42b995:	mov    rbp,rsp
  42b998:	mov    DWORD PTR [rbp-0x34],edi
  42b99b:	mov    QWORD PTR [rbp-0x40],rsi
  42b99f:	mov    rax,QWORD PTR [rbp-0x40]
  42b9a3:	mov    QWORD PTR [rbp-0x8],rax
  42b9a7:	cmp    DWORD PTR [rbp-0x34],0x0
  42b9ab:	jns    42b9bf <flatcc_json_parser_struct_as_root@@Base+0x2816>
  42b9ad:	mov    rax,QWORD PTR [rbp-0x40]
  42b9b1:	lea    rdx,[rax+0x1]
  42b9b5:	mov    QWORD PTR [rbp-0x40],rdx
  42b9b9:	mov    BYTE PTR [rax],0x2d
  42b9bc:	neg    DWORD PTR [rbp-0x34]
  42b9bf:	mov    rax,QWORD PTR [rbp-0x40]
  42b9c3:	mov    QWORD PTR [rbp-0x10],rax
  42b9c7:	mov    ecx,DWORD PTR [rbp-0x34]
  42b9ca:	mov    edx,0x66666667
  42b9cf:	mov    eax,ecx
  42b9d1:	imul   edx
  42b9d3:	sar    edx,0x2
  42b9d6:	mov    eax,ecx
  42b9d8:	sar    eax,0x1f
  42b9db:	sub    edx,eax
  42b9dd:	mov    eax,edx
  42b9df:	mov    DWORD PTR [rbp-0x1c],eax
  42b9e2:	mov    edx,DWORD PTR [rbp-0x1c]
  42b9e5:	mov    eax,edx
  42b9e7:	shl    eax,0x2
  42b9ea:	add    eax,edx
  42b9ec:	add    eax,eax
  42b9ee:	neg    eax
  42b9f0:	mov    edx,eax
  42b9f2:	mov    eax,DWORD PTR [rbp-0x34]
  42b9f5:	add    eax,edx
  42b9f7:	mov    DWORD PTR [rbp-0x18],eax
  42b9fa:	mov    rax,QWORD PTR [rbp-0x10]
  42b9fe:	lea    rdx,[rax+0x1]
  42ba02:	mov    QWORD PTR [rbp-0x10],rdx
  42ba06:	mov    edx,DWORD PTR [rbp-0x18]
  42ba09:	add    edx,0x30
  42ba0c:	mov    BYTE PTR [rax],dl
  42ba0e:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ba12:	je     42ba1c <flatcc_json_parser_struct_as_root@@Base+0x2873>
  42ba14:	mov    eax,DWORD PTR [rbp-0x1c]
  42ba17:	mov    DWORD PTR [rbp-0x34],eax
  42ba1a:	jmp    42b9c7 <flatcc_json_parser_struct_as_root@@Base+0x281e>
  42ba1c:	nop
  42ba1d:	mov    rax,QWORD PTR [rbp-0x10]
  42ba21:	mov    BYTE PTR [rax],0x0
  42ba24:	mov    rdx,QWORD PTR [rbp-0x10]
  42ba28:	mov    rax,QWORD PTR [rbp-0x40]
  42ba2c:	sub    rdx,rax
  42ba2f:	mov    rax,rdx
  42ba32:	mov    DWORD PTR [rbp-0x14],eax
  42ba35:	mov    DWORD PTR [rbp-0x20],0x0
  42ba3c:	jmp    42ba93 <flatcc_json_parser_struct_as_root@@Base+0x28ea>
  42ba3e:	mov    eax,DWORD PTR [rbp-0x20]
  42ba41:	movsxd rdx,eax
  42ba44:	mov    rax,QWORD PTR [rbp-0x40]
  42ba48:	add    rax,rdx
  42ba4b:	movzx  eax,BYTE PTR [rax]
  42ba4e:	mov    BYTE PTR [rbp-0x21],al
  42ba51:	mov    eax,DWORD PTR [rbp-0x20]
  42ba54:	movsxd rdx,eax
  42ba57:	mov    rax,QWORD PTR [rbp-0x40]
  42ba5b:	add    rdx,rax
  42ba5e:	mov    eax,DWORD PTR [rbp-0x14]
  42ba61:	sub    eax,0x1
  42ba64:	sub    eax,DWORD PTR [rbp-0x20]
  42ba67:	movsxd rcx,eax
  42ba6a:	mov    rax,QWORD PTR [rbp-0x40]
  42ba6e:	add    rax,rcx
  42ba71:	movzx  eax,BYTE PTR [rax]
  42ba74:	mov    BYTE PTR [rdx],al
  42ba76:	mov    eax,DWORD PTR [rbp-0x14]
  42ba79:	sub    eax,0x1
  42ba7c:	sub    eax,DWORD PTR [rbp-0x20]
  42ba7f:	movsxd rdx,eax
  42ba82:	mov    rax,QWORD PTR [rbp-0x40]
  42ba86:	add    rdx,rax
  42ba89:	movzx  eax,BYTE PTR [rbp-0x21]
  42ba8d:	mov    BYTE PTR [rdx],al
  42ba8f:	add    DWORD PTR [rbp-0x20],0x1
  42ba93:	mov    eax,DWORD PTR [rbp-0x14]
  42ba96:	mov    edx,eax
  42ba98:	shr    edx,0x1f
  42ba9b:	add    eax,edx
  42ba9d:	sar    eax,1
  42ba9f:	cmp    eax,DWORD PTR [rbp-0x20]
  42baa2:	jg     42ba3e <flatcc_json_parser_struct_as_root@@Base+0x2895>
  42baa4:	mov    rdx,QWORD PTR [rbp-0x10]
  42baa8:	mov    rax,QWORD PTR [rbp-0x8]
  42baac:	sub    rdx,rax
  42baaf:	mov    rax,rdx
  42bab2:	pop    rbp
  42bab3:	ret    
  42bab4:	push   rbp
  42bab5:	mov    rbp,rsp
  42bab8:	sub    rsp,0x50
  42babc:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42bac1:	mov    QWORD PTR [rbp-0x40],rdi
  42bac5:	mov    rax,QWORD PTR fs:0x28
  42bace:	mov    QWORD PTR [rbp-0x8],rax
  42bad2:	xor    eax,eax
  42bad4:	mov    rax,QWORD PTR [rbp-0x38]
  42bad8:	mov    QWORD PTR [rbp-0x48],rax
  42badc:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  42bae1:	call   42accb <flatcc_json_parser_struct_as_root@@Base+0x1b22>
  42bae6:	mov    QWORD PTR [rbp-0x18],rax
  42baea:	mov    rax,QWORD PTR [rbp-0x40]
  42baee:	mov    QWORD PTR [rbp-0x10],rax
  42baf2:	cmp    QWORD PTR [rbp-0x40],0x0
  42baf7:	jne    42bb18 <flatcc_json_parser_struct_as_root@@Base+0x296f>
  42baf9:	lea    rcx,[rip+0x116d0]        # 43d1d0 <flatcc_builder_padding_base@@Base+0x3250>
  42bb00:	mov    edx,0xbd
  42bb05:	lea    rsi,[rip+0x11344]        # 43ce50 <flatcc_builder_padding_base@@Base+0x2ed0>
  42bb0c:	lea    rdi,[rip+0x113da]        # 43ceed <flatcc_builder_padding_base@@Base+0x2f6d>
  42bb13:	call   405080 <__assert_fail@plt>
  42bb18:	mov    rax,QWORD PTR [rbp-0x18]
  42bb1c:	lea    rdx,[rax+rax*1]
  42bb20:	movabs rax,0xffe0000000000000
  42bb2a:	cmp    rdx,rax
  42bb2d:	jbe    42bb5c <flatcc_json_parser_struct_as_root@@Base+0x29b3>
  42bb2f:	mov    rax,QWORD PTR [rbp-0x18]
  42bb33:	mov    ecx,eax
  42bb35:	mov    rax,QWORD PTR [rbp-0x18]
  42bb39:	shr    rax,0x20
  42bb3d:	mov    edx,eax
  42bb3f:	mov    rax,QWORD PTR [rbp-0x40]
  42bb43:	lea    rsi,[rip+0x113a7]        # 43cef1 <flatcc_builder_padding_base@@Base+0x2f71>
  42bb4a:	mov    rdi,rax
  42bb4d:	mov    eax,0x0
  42bb52:	call   405130 <sprintf@plt>
  42bb57:	jmp    42bebd <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42bb5c:	mov    rax,QWORD PTR [rbp-0x18]
  42bb60:	test   rax,rax
  42bb63:	jns    42bb98 <flatcc_json_parser_struct_as_root@@Base+0x29ef>
  42bb65:	mov    rax,QWORD PTR [rbp-0x10]
  42bb69:	lea    rdx,[rax+0x1]
  42bb6d:	mov    QWORD PTR [rbp-0x10],rdx
  42bb71:	mov    BYTE PTR [rax],0x2d
  42bb74:	vmovsd xmm1,QWORD PTR [rbp-0x38]
  42bb79:	vmovsd xmm0,QWORD PTR [rip+0x11b7f]        # 43d700 <flatcc_builder_padding_base@@Base+0x3780>
  42bb81:	vxorpd xmm0,xmm0,xmm1
  42bb85:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42bb8a:	movabs rax,0x8000000000000000
  42bb94:	xor    QWORD PTR [rbp-0x18],rax
  42bb98:	cmp    QWORD PTR [rbp-0x18],0x0
  42bb9d:	jne    42bbc8 <flatcc_json_parser_struct_as_root@@Base+0x2a1f>
  42bb9f:	mov    rax,QWORD PTR [rbp-0x10]
  42bba3:	lea    rdx,[rax+0x1]
  42bba7:	mov    QWORD PTR [rbp-0x10],rdx
  42bbab:	mov    BYTE PTR [rax],0x30
  42bbae:	mov    rax,QWORD PTR [rbp-0x10]
  42bbb2:	mov    BYTE PTR [rax],0x0
  42bbb5:	mov    rdx,QWORD PTR [rbp-0x10]
  42bbb9:	mov    rax,QWORD PTR [rbp-0x40]
  42bbbd:	sub    rdx,rax
  42bbc0:	mov    rax,rdx
  42bbc3:	jmp    42bebd <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42bbc8:	movabs rax,0x7ff0000000000000
  42bbd2:	cmp    QWORD PTR [rbp-0x18],rax
  42bbd6:	jne    42bc1f <flatcc_json_parser_struct_as_root@@Base+0x2a76>
  42bbd8:	mov    rax,QWORD PTR [rbp-0x10]
  42bbdc:	lea    rdx,[rax+0x1]
  42bbe0:	mov    QWORD PTR [rbp-0x10],rdx
  42bbe4:	mov    BYTE PTR [rax],0x69
  42bbe7:	mov    rax,QWORD PTR [rbp-0x10]
  42bbeb:	lea    rdx,[rax+0x1]
  42bbef:	mov    QWORD PTR [rbp-0x10],rdx
  42bbf3:	mov    BYTE PTR [rax],0x6e
  42bbf6:	mov    rax,QWORD PTR [rbp-0x10]
  42bbfa:	lea    rdx,[rax+0x1]
  42bbfe:	mov    QWORD PTR [rbp-0x10],rdx
  42bc02:	mov    BYTE PTR [rax],0x66
  42bc05:	mov    rax,QWORD PTR [rbp-0x10]
  42bc09:	mov    BYTE PTR [rax],0x0
  42bc0c:	mov    rdx,QWORD PTR [rbp-0x10]
  42bc10:	mov    rax,QWORD PTR [rbp-0x40]
  42bc14:	sub    rdx,rax
  42bc17:	mov    rax,rdx
  42bc1a:	jmp    42bebd <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42bc1f:	lea    rdx,[rbp-0x2c]
  42bc23:	lea    rsi,[rbp-0x28]
  42bc27:	mov    rcx,QWORD PTR [rbp-0x10]
  42bc2b:	mov    rax,QWORD PTR [rbp-0x38]
  42bc2f:	mov    rdi,rcx
  42bc32:	mov    QWORD PTR [rbp-0x48],rax
  42bc36:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  42bc3b:	call   42b6f0 <flatcc_json_parser_struct_as_root@@Base+0x2547>
  42bc40:	mov    DWORD PTR [rbp-0x20],eax
  42bc43:	cmp    DWORD PTR [rbp-0x20],0x0
  42bc47:	jne    42bc85 <flatcc_json_parser_struct_as_root@@Base+0x2adc>
  42bc49:	mov    rdx,QWORD PTR [rbp-0x38]
  42bc4d:	mov    rax,QWORD PTR [rbp-0x10]
  42bc51:	mov    QWORD PTR [rbp-0x48],rdx
  42bc55:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  42bc5a:	lea    rsi,[rip+0x1129e]        # 43ceff <flatcc_builder_padding_base@@Base+0x2f7f>
  42bc61:	mov    rdi,rax
  42bc64:	mov    eax,0x1
  42bc69:	call   405130 <sprintf@plt>
  42bc6e:	mov    ecx,eax
  42bc70:	mov    rdx,QWORD PTR [rbp-0x10]
  42bc74:	mov    rax,QWORD PTR [rbp-0x40]
  42bc78:	sub    rdx,rax
  42bc7b:	mov    rax,rdx
  42bc7e:	add    eax,ecx
  42bc80:	jmp    42bebd <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42bc85:	mov    eax,DWORD PTR [rbp-0x2c]
  42bc88:	neg    eax
  42bc8a:	mov    edx,eax
  42bc8c:	mov    eax,DWORD PTR [rbp-0x28]
  42bc8f:	sub    eax,0x1
  42bc92:	mov    ecx,0x1
  42bc97:	test   eax,eax
  42bc99:	cmovle eax,ecx
  42bc9c:	cmp    edx,eax
  42bc9e:	cmovle eax,edx
  42bca1:	mov    DWORD PTR [rbp-0x1c],eax
  42bca4:	mov    eax,DWORD PTR [rbp-0x2c]
  42bca7:	test   eax,eax
  42bca9:	jns    42bd5d <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
  42bcaf:	mov    edx,DWORD PTR [rbp-0x28]
  42bcb2:	mov    eax,DWORD PTR [rbp-0x2c]
  42bcb5:	add    eax,edx
  42bcb7:	cmp    eax,0xfffffffe
  42bcba:	jl     42bd5d <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
  42bcc0:	mov    eax,DWORD PTR [rbp-0x2c]
  42bcc3:	neg    eax
  42bcc5:	mov    edx,eax
  42bcc7:	mov    eax,DWORD PTR [rbp-0x28]
  42bcca:	cmp    edx,eax
  42bccc:	jl     42bd5d <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
  42bcd2:	mov    eax,DWORD PTR [rbp-0x28]
  42bcd5:	movsxd rdx,eax
  42bcd8:	mov    eax,DWORD PTR [rbp-0x2c]
  42bcdb:	cdqe   
  42bcdd:	neg    rax
  42bce0:	mov    rcx,rax
  42bce3:	mov    eax,DWORD PTR [rbp-0x28]
  42bce6:	cdqe   
  42bce8:	sub    rcx,rax
  42bceb:	mov    rax,rcx
  42bcee:	lea    rcx,[rax+0x2]
  42bcf2:	mov    rax,QWORD PTR [rbp-0x10]
  42bcf6:	add    rcx,rax
  42bcf9:	mov    rax,QWORD PTR [rbp-0x10]
  42bcfd:	mov    rsi,rax
  42bd00:	mov    rdi,rcx
  42bd03:	call   405120 <memmove@plt>
  42bd08:	mov    rax,QWORD PTR [rbp-0x10]
  42bd0c:	mov    BYTE PTR [rax],0x30
  42bd0f:	mov    rax,QWORD PTR [rbp-0x10]
  42bd13:	add    rax,0x1
  42bd17:	mov    BYTE PTR [rax],0x2e
  42bd1a:	mov    DWORD PTR [rbp-0x24],0x2
  42bd21:	jmp    42bd37 <flatcc_json_parser_struct_as_root@@Base+0x2b8e>
  42bd23:	mov    eax,DWORD PTR [rbp-0x24]
  42bd26:	movsxd rdx,eax
  42bd29:	mov    rax,QWORD PTR [rbp-0x10]
  42bd2d:	add    rax,rdx
  42bd30:	mov    BYTE PTR [rax],0x30
  42bd33:	add    DWORD PTR [rbp-0x24],0x1
  42bd37:	mov    eax,DWORD PTR [rbp-0x2c]
  42bd3a:	mov    edx,0x2
  42bd3f:	sub    edx,eax
  42bd41:	mov    eax,DWORD PTR [rbp-0x28]
  42bd44:	sub    edx,eax
  42bd46:	mov    eax,edx
  42bd48:	cmp    eax,DWORD PTR [rbp-0x24]
  42bd4b:	jg     42bd23 <flatcc_json_parser_struct_as_root@@Base+0x2b7a>
  42bd4d:	mov    edx,DWORD PTR [rbp-0x28]
  42bd50:	mov    eax,DWORD PTR [rbp-0x24]
  42bd53:	add    eax,edx
  42bd55:	mov    DWORD PTR [rbp-0x28],eax
  42bd58:	jmp    42be93 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42bd5d:	mov    eax,DWORD PTR [rbp-0x2c]
  42bd60:	test   eax,eax
  42bd62:	jns    42be1c <flatcc_json_parser_struct_as_root@@Base+0x2c73>
  42bd68:	mov    eax,DWORD PTR [rbp-0x28]
  42bd6b:	cmp    eax,0x1
  42bd6e:	jle    42be1c <flatcc_json_parser_struct_as_root@@Base+0x2c73>
  42bd74:	mov    DWORD PTR [rbp-0x24],0x0
  42bd7b:	jmp    42bda9 <flatcc_json_parser_struct_as_root@@Base+0x2c00>
  42bd7d:	mov    eax,DWORD PTR [rbp-0x28]
  42bd80:	sub    eax,DWORD PTR [rbp-0x24]
  42bd83:	movsxd rdx,eax
  42bd86:	mov    rax,QWORD PTR [rbp-0x10]
  42bd8a:	add    rdx,rax
  42bd8d:	mov    eax,DWORD PTR [rbp-0x28]
  42bd90:	sub    eax,DWORD PTR [rbp-0x24]
  42bd93:	cdqe   
  42bd95:	lea    rcx,[rax-0x1]
  42bd99:	mov    rax,QWORD PTR [rbp-0x10]
  42bd9d:	add    rax,rcx
  42bda0:	movzx  eax,BYTE PTR [rax]
  42bda3:	mov    BYTE PTR [rdx],al
  42bda5:	add    DWORD PTR [rbp-0x24],0x1
  42bda9:	mov    eax,DWORD PTR [rbp-0x24]
  42bdac:	cmp    eax,DWORD PTR [rbp-0x1c]
  42bdaf:	jl     42bd7d <flatcc_json_parser_struct_as_root@@Base+0x2bd4>
  42bdb1:	mov    eax,DWORD PTR [rbp-0x28]
  42bdb4:	lea    edx,[rax+0x1]
  42bdb7:	mov    DWORD PTR [rbp-0x28],edx
  42bdba:	sub    eax,DWORD PTR [rbp-0x1c]
  42bdbd:	movsxd rdx,eax
  42bdc0:	mov    rax,QWORD PTR [rbp-0x10]
  42bdc4:	add    rax,rdx
  42bdc7:	mov    BYTE PTR [rax],0x2e
  42bdca:	mov    edx,DWORD PTR [rbp-0x2c]
  42bdcd:	mov    eax,DWORD PTR [rbp-0x1c]
  42bdd0:	add    eax,edx
  42bdd2:	mov    DWORD PTR [rbp-0x2c],eax
  42bdd5:	mov    eax,DWORD PTR [rbp-0x2c]
  42bdd8:	test   eax,eax
  42bdda:	je     42be93 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42bde0:	mov    eax,DWORD PTR [rbp-0x28]
  42bde3:	lea    edx,[rax+0x1]
  42bde6:	mov    DWORD PTR [rbp-0x28],edx
  42bde9:	movsxd rdx,eax
  42bdec:	mov    rax,QWORD PTR [rbp-0x10]
  42bdf0:	add    rax,rdx
  42bdf3:	mov    BYTE PTR [rax],0x65
  42bdf6:	mov    eax,DWORD PTR [rbp-0x28]
  42bdf9:	movsxd rdx,eax
  42bdfc:	mov    rax,QWORD PTR [rbp-0x10]
  42be00:	add    rdx,rax
  42be03:	mov    eax,DWORD PTR [rbp-0x2c]
  42be06:	mov    rsi,rdx
  42be09:	mov    edi,eax
  42be0b:	call   42b994 <flatcc_json_parser_struct_as_root@@Base+0x27eb>
  42be10:	mov    edx,eax
  42be12:	mov    eax,DWORD PTR [rbp-0x28]
  42be15:	add    eax,edx
  42be17:	mov    DWORD PTR [rbp-0x28],eax
  42be1a:	jmp    42be93 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42be1c:	mov    eax,DWORD PTR [rbp-0x2c]
  42be1f:	test   eax,eax
  42be21:	js     42be2b <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42be23:	mov    eax,DWORD PTR [rbp-0x2c]
  42be26:	cmp    eax,0x2
  42be29:	jle    42be67 <flatcc_json_parser_struct_as_root@@Base+0x2cbe>
  42be2b:	mov    eax,DWORD PTR [rbp-0x28]
  42be2e:	lea    edx,[rax+0x1]
  42be31:	mov    DWORD PTR [rbp-0x28],edx
  42be34:	movsxd rdx,eax
  42be37:	mov    rax,QWORD PTR [rbp-0x10]
  42be3b:	add    rax,rdx
  42be3e:	mov    BYTE PTR [rax],0x65
  42be41:	mov    eax,DWORD PTR [rbp-0x28]
  42be44:	movsxd rdx,eax
  42be47:	mov    rax,QWORD PTR [rbp-0x10]
  42be4b:	add    rdx,rax
  42be4e:	mov    eax,DWORD PTR [rbp-0x2c]
  42be51:	mov    rsi,rdx
  42be54:	mov    edi,eax
  42be56:	call   42b994 <flatcc_json_parser_struct_as_root@@Base+0x27eb>
  42be5b:	mov    edx,eax
  42be5d:	mov    eax,DWORD PTR [rbp-0x28]
  42be60:	add    eax,edx
  42be62:	mov    DWORD PTR [rbp-0x28],eax
  42be65:	jmp    42be93 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42be67:	mov    eax,DWORD PTR [rbp-0x2c]
  42be6a:	test   eax,eax
  42be6c:	jle    42be93 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42be6e:	jmp    42be86 <flatcc_json_parser_struct_as_root@@Base+0x2cdd>
  42be70:	mov    eax,DWORD PTR [rbp-0x28]
  42be73:	lea    edx,[rax+0x1]
  42be76:	mov    DWORD PTR [rbp-0x28],edx
  42be79:	movsxd rdx,eax
  42be7c:	mov    rax,QWORD PTR [rbp-0x10]
  42be80:	add    rax,rdx
  42be83:	mov    BYTE PTR [rax],0x30
  42be86:	mov    eax,DWORD PTR [rbp-0x2c]
  42be89:	lea    edx,[rax-0x1]
  42be8c:	mov    DWORD PTR [rbp-0x2c],edx
  42be8f:	test   eax,eax
  42be91:	jg     42be70 <flatcc_json_parser_struct_as_root@@Base+0x2cc7>
  42be93:	mov    eax,DWORD PTR [rbp-0x28]
  42be96:	movsxd rdx,eax
  42be99:	mov    rax,QWORD PTR [rbp-0x10]
  42be9d:	add    rax,rdx
  42bea0:	mov    BYTE PTR [rax],0x0
  42bea3:	mov    eax,DWORD PTR [rbp-0x28]
  42bea6:	movsxd rdx,eax
  42bea9:	mov    rax,QWORD PTR [rbp-0x10]
  42bead:	add    rax,rdx
  42beb0:	mov    rdx,rax
  42beb3:	mov    rax,QWORD PTR [rbp-0x40]
  42beb7:	sub    rdx,rax
  42beba:	mov    rax,rdx
  42bebd:	mov    rdi,QWORD PTR [rbp-0x8]
  42bec1:	xor    rdi,QWORD PTR fs:0x28
  42beca:	je     42bed1 <flatcc_json_parser_struct_as_root@@Base+0x2d28>
  42becc:	call   405070 <__stack_chk_fail@plt>
  42bed1:	leave  
  42bed2:	ret    
  42bed3:	push   rbp
  42bed4:	mov    rbp,rsp
  42bed7:	mov    DWORD PTR [rbp-0x4],edi
  42beda:	cmp    DWORD PTR [rbp-0x4],0x5
  42bede:	ja     42bf3a <flatcc_json_parser_struct_as_root@@Base+0x2d91>
  42bee0:	mov    eax,DWORD PTR [rbp-0x4]
  42bee3:	lea    rdx,[rax*4+0x0]
  42beeb:	lea    rax,[rip+0x1107e]        # 43cf70 <flatcc_builder_padding_base@@Base+0x2ff0>
  42bef2:	mov    eax,DWORD PTR [rdx+rax*1]
  42bef5:	movsxd rdx,eax
  42bef8:	lea    rax,[rip+0x11071]        # 43cf70 <flatcc_builder_padding_base@@Base+0x2ff0>
  42beff:	add    rax,rdx
  42bf02:	jmp    rax
  42bf04:	lea    rax,[rip+0x10ffa]        # 43cf05 <flatcc_builder_padding_base@@Base+0x2f85>
  42bf0b:	jmp    42bf41 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42bf0d:	lea    rax,[rip+0x10ff4]        # 43cf08 <flatcc_builder_padding_base@@Base+0x2f88>
  42bf14:	jmp    42bf41 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42bf16:	lea    rax,[rip+0x10ffc]        # 43cf19 <flatcc_builder_padding_base@@Base+0x2f99>
  42bf1d:	jmp    42bf41 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42bf1f:	lea    rax,[rip+0x11000]        # 43cf26 <flatcc_builder_padding_base@@Base+0x2fa6>
  42bf26:	jmp    42bf41 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42bf28:	lea    rax,[rip+0x11008]        # 43cf37 <flatcc_builder_padding_base@@Base+0x2fb7>
  42bf2f:	jmp    42bf41 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42bf31:	lea    rax,[rip+0x11013]        # 43cf4b <flatcc_builder_padding_base@@Base+0x2fcb>
  42bf38:	jmp    42bf41 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42bf3a:	lea    rax,[rip+0x1101f]        # 43cf60 <flatcc_builder_padding_base@@Base+0x2fe0>
  42bf41:	pop    rbp
  42bf42:	ret    
  42bf43:	push   rbp
  42bf44:	mov    rbp,rsp
  42bf47:	mov    QWORD PTR [rbp-0x28],rdi
  42bf4b:	mov    DWORD PTR [rbp-0x2c],esi
  42bf4e:	mov    rcx,QWORD PTR [rbp-0x28]
  42bf52:	movabs rdx,0xaaaaaaaaaaaaaaab
  42bf5c:	mov    rax,rcx
  42bf5f:	mul    rdx
  42bf62:	shr    rdx,1
  42bf65:	mov    rax,rdx
  42bf68:	add    rax,rax
  42bf6b:	add    rax,rdx
  42bf6e:	sub    rcx,rax
  42bf71:	mov    rax,rcx
  42bf74:	mov    QWORD PTR [rbp-0x8],rax
  42bf78:	mov    rax,QWORD PTR [rbp-0x28]
  42bf7c:	shl    rax,0x2
  42bf80:	movabs rdx,0xaaaaaaaaaaaaaaab
  42bf8a:	mul    rdx
  42bf8d:	mov    rax,rdx
  42bf90:	shr    rax,1
  42bf93:	add    rax,0x3
  42bf97:	and    rax,0xfffffffffffffffc
  42bf9b:	mov    QWORD PTR [rbp-0x10],rax
  42bf9f:	mov    eax,DWORD PTR [rbp-0x2c]
  42bfa2:	and    eax,0x80
  42bfa7:	mov    DWORD PTR [rbp-0x14],eax
  42bfaa:	cmp    DWORD PTR [rbp-0x14],0x0
  42bfae:	jne    42bfcf <flatcc_json_parser_struct_as_root@@Base+0x2e26>
  42bfb0:	mov    rax,QWORD PTR [rbp-0x8]
  42bfb4:	cmp    rax,0x1
  42bfb8:	je     42bfc9 <flatcc_json_parser_struct_as_root@@Base+0x2e20>
  42bfba:	cmp    rax,0x2
  42bfbe:	je     42bfc2 <flatcc_json_parser_struct_as_root@@Base+0x2e19>
  42bfc0:	jmp    42bfcf <flatcc_json_parser_struct_as_root@@Base+0x2e26>
  42bfc2:	sub    QWORD PTR [rbp-0x10],0x1
  42bfc7:	jmp    42bfcf <flatcc_json_parser_struct_as_root@@Base+0x2e26>
  42bfc9:	sub    QWORD PTR [rbp-0x10],0x2
  42bfce:	nop
  42bfcf:	mov    rax,QWORD PTR [rbp-0x10]
  42bfd3:	pop    rbp
  42bfd4:	ret    
  42bfd5:	push   rbp
  42bfd6:	mov    rbp,rsp
  42bfd9:	mov    QWORD PTR [rbp-0x18],rdi
  42bfdd:	mov    rax,QWORD PTR [rbp-0x18]
  42bfe1:	and    eax,0x3
  42bfe4:	mov    QWORD PTR [rbp-0x10],rax
  42bfe8:	mov    rax,QWORD PTR [rbp-0x18]
  42bfec:	shr    rax,0x2
  42bff0:	mov    rdx,rax
  42bff3:	mov    rax,rdx
  42bff6:	add    rax,rax
  42bff9:	add    rax,rdx
  42bffc:	mov    QWORD PTR [rbp-0x8],rax
  42c000:	mov    rax,QWORD PTR [rbp-0x10]
  42c004:	cmp    rax,0x2
  42c008:	je     42c01a <flatcc_json_parser_struct_as_root@@Base+0x2e71>
  42c00a:	cmp    rax,0x3
  42c00e:	jne    42c024 <flatcc_json_parser_struct_as_root@@Base+0x2e7b>
  42c010:	mov    rax,QWORD PTR [rbp-0x8]
  42c014:	add    rax,0x2
  42c018:	jmp    42c028 <flatcc_json_parser_struct_as_root@@Base+0x2e7f>
  42c01a:	mov    rax,QWORD PTR [rbp-0x8]
  42c01e:	add    rax,0x1
  42c022:	jmp    42c028 <flatcc_json_parser_struct_as_root@@Base+0x2e7f>
  42c024:	mov    rax,QWORD PTR [rbp-0x8]
  42c028:	pop    rbp
  42c029:	ret    
  42c02a:	push   rbp
  42c02b:	mov    rbp,rsp
  42c02e:	mov    QWORD PTR [rbp-0x38],rdi
  42c032:	mov    QWORD PTR [rbp-0x40],rsi
  42c036:	mov    QWORD PTR [rbp-0x48],rdx
  42c03a:	mov    QWORD PTR [rbp-0x50],rcx
  42c03e:	mov    DWORD PTR [rbp-0x54],r8d
  42c042:	lea    rax,[rip+0x10f3f]        # 43cf88 <flatcc_builder_padding_base@@Base+0x3008>
  42c049:	mov    QWORD PTR [rbp-0x18],rax
  42c04d:	lea    rax,[rip+0x10f7c]        # 43cfd0 <flatcc_builder_padding_base@@Base+0x3050>
  42c054:	mov    QWORD PTR [rbp-0x10],rax
  42c058:	mov    rax,QWORD PTR [rbp-0x38]
  42c05c:	mov    QWORD PTR [rbp-0x8],rax
  42c060:	mov    eax,DWORD PTR [rbp-0x54]
  42c063:	and    eax,0x80
  42c068:	mov    DWORD PTR [rbp-0x2c],eax
  42c06b:	mov    QWORD PTR [rbp-0x20],0x0
  42c073:	mov    DWORD PTR [rbp-0x30],0x3
  42c07a:	cmp    QWORD PTR [rbp-0x50],0x0
  42c07f:	jne    42c08d <flatcc_json_parser_struct_as_root@@Base+0x2ee4>
  42c081:	mov    DWORD PTR [rbp-0x30],0x2
  42c088:	jmp    42c2ee <flatcc_json_parser_struct_as_root@@Base+0x3145>
  42c08d:	mov    rax,QWORD PTR [rbp-0x50]
  42c091:	mov    rax,QWORD PTR [rax]
  42c094:	mov    QWORD PTR [rbp-0x20],rax
  42c098:	and    DWORD PTR [rbp-0x54],0xffffff1f
  42c09f:	mov    eax,DWORD PTR [rbp-0x54]
  42c0a2:	test   eax,eax
  42c0a4:	je     42c0b0 <flatcc_json_parser_struct_as_root@@Base+0x2f07>
  42c0a6:	cmp    eax,0x1
  42c0a9:	je     42c0ba <flatcc_json_parser_struct_as_root@@Base+0x2f11>
  42c0ab:	jmp    42c2ee <flatcc_json_parser_struct_as_root@@Base+0x3145>
  42c0b0:	mov    rax,QWORD PTR [rbp-0x18]
  42c0b4:	mov    QWORD PTR [rbp-0x28],rax
  42c0b8:	jmp    42c0c3 <flatcc_json_parser_struct_as_root@@Base+0x2f1a>
  42c0ba:	mov    rax,QWORD PTR [rbp-0x10]
  42c0be:	mov    QWORD PTR [rbp-0x28],rax
  42c0c2:	nop
  42c0c3:	mov    DWORD PTR [rbp-0x30],0x0
  42c0ca:	jmp    42c19f <flatcc_json_parser_struct_as_root@@Base+0x2ff6>
  42c0cf:	mov    rax,QWORD PTR [rbp-0x40]
  42c0d3:	movzx  eax,BYTE PTR [rax]
  42c0d6:	shr    al,0x2
  42c0d9:	movzx  edx,al
  42c0dc:	mov    rax,QWORD PTR [rbp-0x28]
  42c0e0:	add    rax,rdx
  42c0e3:	movzx  edx,BYTE PTR [rax]
  42c0e6:	mov    rax,QWORD PTR [rbp-0x38]
  42c0ea:	mov    BYTE PTR [rax],dl
  42c0ec:	mov    rax,QWORD PTR [rbp-0x38]
  42c0f0:	lea    rdx,[rax+0x1]
  42c0f4:	mov    rax,QWORD PTR [rbp-0x40]
  42c0f8:	movzx  eax,BYTE PTR [rax]
  42c0fb:	movzx  eax,al
  42c0fe:	shl    eax,0x4
  42c101:	and    eax,0x30
  42c104:	mov    ecx,eax
  42c106:	mov    rax,QWORD PTR [rbp-0x40]
  42c10a:	add    rax,0x1
  42c10e:	movzx  eax,BYTE PTR [rax]
  42c111:	shr    al,0x4
  42c114:	movzx  eax,al
  42c117:	or     eax,ecx
  42c119:	movsxd rcx,eax
  42c11c:	mov    rax,QWORD PTR [rbp-0x28]
  42c120:	add    rax,rcx
  42c123:	movzx  eax,BYTE PTR [rax]
  42c126:	mov    BYTE PTR [rdx],al
  42c128:	mov    rax,QWORD PTR [rbp-0x38]
  42c12c:	lea    rdx,[rax+0x2]
  42c130:	mov    rax,QWORD PTR [rbp-0x40]
  42c134:	add    rax,0x1
  42c138:	movzx  eax,BYTE PTR [rax]
  42c13b:	movzx  eax,al
  42c13e:	shl    eax,0x2
  42c141:	and    eax,0x3c
  42c144:	mov    ecx,eax
  42c146:	mov    rax,QWORD PTR [rbp-0x40]
  42c14a:	add    rax,0x2
  42c14e:	movzx  eax,BYTE PTR [rax]
  42c151:	shr    al,0x6
  42c154:	movzx  eax,al
  42c157:	or     eax,ecx
  42c159:	movsxd rcx,eax
  42c15c:	mov    rax,QWORD PTR [rbp-0x28]
  42c160:	add    rax,rcx
  42c163:	movzx  eax,BYTE PTR [rax]
  42c166:	mov    BYTE PTR [rdx],al
  42c168:	mov    rax,QWORD PTR [rbp-0x38]
  42c16c:	lea    rdx,[rax+0x3]
  42c170:	mov    rax,QWORD PTR [rbp-0x40]
  42c174:	add    rax,0x2
  42c178:	movzx  eax,BYTE PTR [rax]
  42c17b:	movzx  eax,al
  42c17e:	and    eax,0x3f
  42c181:	mov    rcx,rax
  42c184:	mov    rax,QWORD PTR [rbp-0x28]
  42c188:	add    rax,rcx
  42c18b:	movzx  eax,BYTE PTR [rax]
  42c18e:	mov    BYTE PTR [rdx],al
  42c190:	sub    QWORD PTR [rbp-0x20],0x3
  42c195:	add    QWORD PTR [rbp-0x38],0x4
  42c19a:	add    QWORD PTR [rbp-0x40],0x3
  42c19f:	cmp    QWORD PTR [rbp-0x20],0x2
  42c1a4:	ja     42c0cf <flatcc_json_parser_struct_as_root@@Base+0x2f26>
  42c1aa:	mov    rax,QWORD PTR [rbp-0x20]
  42c1ae:	cmp    rax,0x1
  42c1b2:	je     42c268 <flatcc_json_parser_struct_as_root@@Base+0x30bf>
  42c1b8:	cmp    rax,0x2
  42c1bc:	jne    42c2d9 <flatcc_json_parser_struct_as_root@@Base+0x3130>
  42c1c2:	mov    rax,QWORD PTR [rbp-0x40]
  42c1c6:	movzx  eax,BYTE PTR [rax]
  42c1c9:	shr    al,0x2
  42c1cc:	movzx  edx,al
  42c1cf:	mov    rax,QWORD PTR [rbp-0x28]
  42c1d3:	add    rax,rdx
  42c1d6:	movzx  edx,BYTE PTR [rax]
  42c1d9:	mov    rax,QWORD PTR [rbp-0x38]
  42c1dd:	mov    BYTE PTR [rax],dl
  42c1df:	mov    rax,QWORD PTR [rbp-0x38]
  42c1e3:	lea    rdx,[rax+0x1]
  42c1e7:	mov    rax,QWORD PTR [rbp-0x40]
  42c1eb:	movzx  eax,BYTE PTR [rax]
  42c1ee:	movzx  eax,al
  42c1f1:	shl    eax,0x4
  42c1f4:	and    eax,0x30
  42c1f7:	mov    ecx,eax
  42c1f9:	mov    rax,QWORD PTR [rbp-0x40]
  42c1fd:	add    rax,0x1
  42c201:	movzx  eax,BYTE PTR [rax]
  42c204:	shr    al,0x4
  42c207:	movzx  eax,al
  42c20a:	or     eax,ecx
  42c20c:	movsxd rcx,eax
  42c20f:	mov    rax,QWORD PTR [rbp-0x28]
  42c213:	add    rax,rcx
  42c216:	movzx  eax,BYTE PTR [rax]
  42c219:	mov    BYTE PTR [rdx],al
  42c21b:	mov    rax,QWORD PTR [rbp-0x38]
  42c21f:	lea    rdx,[rax+0x2]
  42c223:	mov    rax,QWORD PTR [rbp-0x40]
  42c227:	add    rax,0x1
  42c22b:	movzx  eax,BYTE PTR [rax]
  42c22e:	movzx  eax,al
  42c231:	shl    eax,0x2
  42c234:	cdqe   
  42c236:	and    eax,0x3c
  42c239:	mov    rcx,rax
  42c23c:	mov    rax,QWORD PTR [rbp-0x28]
  42c240:	add    rax,rcx
  42c243:	movzx  eax,BYTE PTR [rax]
  42c246:	mov    BYTE PTR [rdx],al
  42c248:	add    QWORD PTR [rbp-0x38],0x3
  42c24d:	cmp    DWORD PTR [rbp-0x2c],0x0
  42c251:	je     42c2e2 <flatcc_json_parser_struct_as_root@@Base+0x3139>
  42c257:	mov    rax,QWORD PTR [rbp-0x38]
  42c25b:	lea    rdx,[rax+0x1]
  42c25f:	mov    QWORD PTR [rbp-0x38],rdx
  42c263:	mov    BYTE PTR [rax],0x3d
  42c266:	jmp    42c2e2 <flatcc_json_parser_struct_as_root@@Base+0x3139>
  42c268:	mov    rax,QWORD PTR [rbp-0x40]
  42c26c:	movzx  eax,BYTE PTR [rax]
  42c26f:	shr    al,0x2
  42c272:	movzx  edx,al
  42c275:	mov    rax,QWORD PTR [rbp-0x28]
  42c279:	add    rax,rdx
  42c27c:	movzx  edx,BYTE PTR [rax]
  42c27f:	mov    rax,QWORD PTR [rbp-0x38]
  42c283:	mov    BYTE PTR [rax],dl
  42c285:	mov    rax,QWORD PTR [rbp-0x38]
  42c289:	lea    rdx,[rax+0x1]
  42c28d:	mov    rax,QWORD PTR [rbp-0x40]
  42c291:	movzx  eax,BYTE PTR [rax]
  42c294:	movzx  eax,al
  42c297:	shl    eax,0x4
  42c29a:	cdqe   
  42c29c:	and    eax,0x30
  42c29f:	mov    rcx,rax
  42c2a2:	mov    rax,QWORD PTR [rbp-0x28]
  42c2a6:	add    rax,rcx
  42c2a9:	movzx  eax,BYTE PTR [rax]
  42c2ac:	mov    BYTE PTR [rdx],al
  42c2ae:	add    QWORD PTR [rbp-0x38],0x2
  42c2b3:	cmp    DWORD PTR [rbp-0x2c],0x0
  42c2b7:	je     42c2e5 <flatcc_json_parser_struct_as_root@@Base+0x313c>
  42c2b9:	mov    rax,QWORD PTR [rbp-0x38]
  42c2bd:	lea    rdx,[rax+0x1]
  42c2c1:	mov    QWORD PTR [rbp-0x38],rdx
  42c2c5:	mov    BYTE PTR [rax],0x3d
  42c2c8:	mov    rax,QWORD PTR [rbp-0x38]
  42c2cc:	lea    rdx,[rax+0x1]
  42c2d0:	mov    QWORD PTR [rbp-0x38],rdx
  42c2d4:	mov    BYTE PTR [rax],0x3d
  42c2d7:	jmp    42c2e5 <flatcc_json_parser_struct_as_root@@Base+0x313c>
  42c2d9:	mov    DWORD PTR [rbp-0x2c],0x0
  42c2e0:	jmp    42c2e6 <flatcc_json_parser_struct_as_root@@Base+0x313d>
  42c2e2:	nop
  42c2e3:	jmp    42c2e6 <flatcc_json_parser_struct_as_root@@Base+0x313d>
  42c2e5:	nop
  42c2e6:	mov    QWORD PTR [rbp-0x20],0x0
  42c2ee:	cmp    QWORD PTR [rbp-0x48],0x0
  42c2f3:	je     42c30d <flatcc_json_parser_struct_as_root@@Base+0x3164>
  42c2f5:	mov    rdx,QWORD PTR [rbp-0x38]
  42c2f9:	mov    rax,QWORD PTR [rbp-0x8]
  42c2fd:	sub    rdx,rax
  42c300:	mov    rax,rdx
  42c303:	mov    rdx,rax
  42c306:	mov    rax,QWORD PTR [rbp-0x48]
  42c30a:	mov    QWORD PTR [rax],rdx
  42c30d:	cmp    QWORD PTR [rbp-0x50],0x0
  42c312:	je     42c329 <flatcc_json_parser_struct_as_root@@Base+0x3180>
  42c314:	mov    rax,QWORD PTR [rbp-0x50]
  42c318:	mov    rax,QWORD PTR [rax]
  42c31b:	sub    rax,QWORD PTR [rbp-0x20]
  42c31f:	mov    rdx,rax
  42c322:	mov    rax,QWORD PTR [rbp-0x50]
  42c326:	mov    QWORD PTR [rax],rdx
  42c329:	mov    eax,DWORD PTR [rbp-0x30]
  42c32c:	pop    rbp
  42c32d:	ret    
  42c32e:	push   rbp
  42c32f:	mov    rbp,rsp
  42c332:	add    rsp,0xffffffffffffff80
  42c336:	mov    QWORD PTR [rbp-0x58],rdi
  42c33a:	mov    QWORD PTR [rbp-0x60],rsi
  42c33e:	mov    QWORD PTR [rbp-0x68],rdx
  42c342:	mov    QWORD PTR [rbp-0x70],rcx
  42c346:	mov    DWORD PTR [rbp-0x74],r8d
  42c34a:	mov    rax,QWORD PTR fs:0x28
  42c353:	mov    QWORD PTR [rbp-0x8],rax
  42c357:	xor    eax,eax
  42c359:	mov    DWORD PTR [rbp-0x50],0x0
  42c360:	mov    rax,QWORD PTR [rbp-0x58]
  42c364:	mov    QWORD PTR [rbp-0x18],rax
  42c368:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  42c370:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  42c378:	lea    rax,[rip+0x10e81]        # 43d200 <flatcc_builder_padding_base@@Base+0x3280>
  42c37f:	mov    QWORD PTR [rbp-0x20],rax
  42c383:	mov    eax,DWORD PTR [rbp-0x74]
  42c386:	and    eax,0x20
  42c389:	mov    DWORD PTR [rbp-0x4c],eax
  42c38c:	cmp    QWORD PTR [rbp-0x70],0x0
  42c391:	je     42c39e <flatcc_json_parser_struct_as_root@@Base+0x31f5>
  42c393:	mov    rax,QWORD PTR [rbp-0x70]
  42c397:	mov    rax,QWORD PTR [rax]
  42c39a:	mov    QWORD PTR [rbp-0x30],rax
  42c39e:	mov    rax,QWORD PTR [rbp-0x30]
  42c3a2:	mov    QWORD PTR [rbp-0x28],rax
  42c3a6:	and    DWORD PTR [rbp-0x74],0xffffff1f
  42c3ad:	mov    eax,DWORD PTR [rbp-0x74]
  42c3b0:	test   eax,eax
  42c3b2:	je     42c3bb <flatcc_json_parser_struct_as_root@@Base+0x3212>
  42c3b4:	cmp    eax,0x1
  42c3b7:	je     42c3d7 <flatcc_json_parser_struct_as_root@@Base+0x322e>
  42c3b9:	jmp    42c3f3 <flatcc_json_parser_struct_as_root@@Base+0x324a>
  42c3bb:	cmp    DWORD PTR [rbp-0x4c],0x0
  42c3bf:	je     42c3ca <flatcc_json_parser_struct_as_root@@Base+0x3221>
  42c3c1:	lea    rax,[rip+0x10f38]        # 43d300 <flatcc_builder_padding_base@@Base+0x3380>
  42c3c8:	jmp    42c3d1 <flatcc_json_parser_struct_as_root@@Base+0x3228>
  42c3ca:	lea    rax,[rip+0x10e2f]        # 43d200 <flatcc_builder_padding_base@@Base+0x3280>
  42c3d1:	mov    QWORD PTR [rbp-0x20],rax
  42c3d5:	jmp    42c3ff <flatcc_json_parser_struct_as_root@@Base+0x3256>
  42c3d7:	cmp    DWORD PTR [rbp-0x4c],0x0
  42c3db:	je     42c3e6 <flatcc_json_parser_struct_as_root@@Base+0x323d>
  42c3dd:	lea    rax,[rip+0x1101c]        # 43d400 <flatcc_builder_padding_base@@Base+0x3480>
  42c3e4:	jmp    42c3ed <flatcc_json_parser_struct_as_root@@Base+0x3244>
  42c3e6:	lea    rax,[rip+0x11113]        # 43d500 <flatcc_builder_padding_base@@Base+0x3580>
  42c3ed:	mov    QWORD PTR [rbp-0x20],rax
  42c3f1:	jmp    42c3ff <flatcc_json_parser_struct_as_root@@Base+0x3256>
  42c3f3:	mov    DWORD PTR [rbp-0x50],0x3
  42c3fa:	jmp    42c5fc <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42c3ff:	cmp    QWORD PTR [rbp-0x68],0x0
  42c404:	je     42c5f1 <flatcc_json_parser_struct_as_root@@Base+0x3448>
  42c40a:	mov    rax,QWORD PTR [rbp-0x68]
  42c40e:	mov    rax,QWORD PTR [rax]
  42c411:	test   rax,rax
  42c414:	je     42c5f1 <flatcc_json_parser_struct_as_root@@Base+0x3448>
  42c41a:	mov    rax,QWORD PTR [rbp-0x68]
  42c41e:	mov    rax,QWORD PTR [rax]
  42c421:	mov    QWORD PTR [rbp-0x38],rax
  42c425:	jmp    42c5f1 <flatcc_json_parser_struct_as_root@@Base+0x3448>
  42c42a:	mov    QWORD PTR [rbp-0x48],0x0
  42c432:	jmp    42c567 <flatcc_json_parser_struct_as_root@@Base+0x33be>
  42c437:	mov    rax,QWORD PTR [rbp-0x30]
  42c43b:	cmp    rax,QWORD PTR [rbp-0x48]
  42c43f:	jne    42c456 <flatcc_json_parser_struct_as_root@@Base+0x32ad>
  42c441:	mov    rax,QWORD PTR [rbp-0x48]
  42c445:	mov    QWORD PTR [rbp-0x40],rax
  42c449:	mov    rax,QWORD PTR [rbp-0x48]
  42c44d:	sub    QWORD PTR [rbp-0x30],rax
  42c451:	jmp    42c652 <flatcc_json_parser_struct_as_root@@Base+0x34a9>
  42c456:	mov    rdx,QWORD PTR [rbp-0x60]
  42c45a:	mov    rax,QWORD PTR [rbp-0x48]
  42c45e:	add    rax,rdx
  42c461:	movzx  eax,BYTE PTR [rax]
  42c464:	movzx  edx,al
  42c467:	mov    rax,QWORD PTR [rbp-0x20]
  42c46b:	add    rax,rdx
  42c46e:	movzx  eax,BYTE PTR [rax]
  42c471:	lea    rcx,[rbp-0xc]
  42c475:	mov    rdx,QWORD PTR [rbp-0x48]
  42c479:	add    rdx,rcx
  42c47c:	mov    BYTE PTR [rdx],al
  42c47e:	lea    rdx,[rbp-0xc]
  42c482:	mov    rax,QWORD PTR [rbp-0x48]
  42c486:	add    rax,rdx
  42c489:	movzx  edx,BYTE PTR [rax]
  42c48c:	movzx  eax,BYTE PTR [rip+0x1116d]        # 43d600 <flatcc_builder_padding_base@@Base+0x3680>
  42c493:	cmp    dl,al
  42c495:	jb     42c562 <flatcc_json_parser_struct_as_root@@Base+0x33b9>
  42c49b:	lea    rdx,[rbp-0xc]
  42c49f:	mov    rax,QWORD PTR [rbp-0x48]
  42c4a3:	add    rax,rdx
  42c4a6:	movzx  edx,BYTE PTR [rax]
  42c4a9:	movzx  eax,BYTE PTR [rip+0x11151]        # 43d601 <flatcc_builder_padding_base@@Base+0x3681>
  42c4b0:	cmp    dl,al
  42c4b2:	jne    42c4c8 <flatcc_json_parser_struct_as_root@@Base+0x331f>
  42c4b4:	add    QWORD PTR [rbp-0x60],0x1
  42c4b9:	sub    QWORD PTR [rbp-0x30],0x1
  42c4be:	sub    QWORD PTR [rbp-0x48],0x1
  42c4c3:	jmp    42c562 <flatcc_json_parser_struct_as_root@@Base+0x33b9>
  42c4c8:	mov    rax,QWORD PTR [rbp-0x48]
  42c4cc:	mov    QWORD PTR [rbp-0x40],rax
  42c4d0:	lea    rdx,[rbp-0xc]
  42c4d4:	mov    rax,QWORD PTR [rbp-0x48]
  42c4d8:	add    rax,rdx
  42c4db:	movzx  edx,BYTE PTR [rax]
  42c4de:	movzx  eax,BYTE PTR [rip+0x1111d]        # 43d602 <flatcc_builder_padding_base@@Base+0x3682>
  42c4e5:	cmp    dl,al
  42c4e7:	jne    42c555 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42c4e9:	add    QWORD PTR [rbp-0x48],0x1
  42c4ee:	jmp    42c541 <flatcc_json_parser_struct_as_root@@Base+0x3398>
  42c4f0:	mov    rdx,QWORD PTR [rbp-0x60]
  42c4f4:	mov    rax,QWORD PTR [rbp-0x48]
  42c4f8:	add    rax,rdx
  42c4fb:	movzx  eax,BYTE PTR [rax]
  42c4fe:	movzx  edx,al
  42c501:	mov    rax,QWORD PTR [rbp-0x20]
  42c505:	add    rax,rdx
  42c508:	movzx  edx,BYTE PTR [rax]
  42c50b:	movzx  eax,BYTE PTR [rip+0x110f0]        # 43d602 <flatcc_builder_padding_base@@Base+0x3682>
  42c512:	cmp    dl,al
  42c514:	je     42c53c <flatcc_json_parser_struct_as_root@@Base+0x3393>
  42c516:	mov    rdx,QWORD PTR [rbp-0x60]
  42c51a:	mov    rax,QWORD PTR [rbp-0x48]
  42c51e:	add    rax,rdx
  42c521:	movzx  eax,BYTE PTR [rax]
  42c524:	movzx  edx,al
  42c527:	mov    rax,QWORD PTR [rbp-0x20]
  42c52b:	add    rax,rdx
  42c52e:	movzx  edx,BYTE PTR [rax]
  42c531:	movzx  eax,BYTE PTR [rip+0x110c9]        # 43d601 <flatcc_builder_padding_base@@Base+0x3681>
  42c538:	cmp    dl,al
  42c53a:	jne    42c554 <flatcc_json_parser_struct_as_root@@Base+0x33ab>
  42c53c:	add    QWORD PTR [rbp-0x48],0x1
  42c541:	mov    rax,QWORD PTR [rbp-0x48]
  42c545:	cmp    rax,QWORD PTR [rbp-0x30]
  42c549:	jae    42c555 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42c54b:	cmp    QWORD PTR [rbp-0x48],0x7
  42c550:	jbe    42c4f0 <flatcc_json_parser_struct_as_root@@Base+0x3347>
  42c552:	jmp    42c555 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42c554:	nop
  42c555:	mov    rax,QWORD PTR [rbp-0x48]
  42c559:	sub    QWORD PTR [rbp-0x30],rax
  42c55d:	jmp    42c652 <flatcc_json_parser_struct_as_root@@Base+0x34a9>
  42c562:	add    QWORD PTR [rbp-0x48],0x1
  42c567:	cmp    QWORD PTR [rbp-0x48],0x3
  42c56c:	jbe    42c437 <flatcc_json_parser_struct_as_root@@Base+0x328e>
  42c572:	cmp    QWORD PTR [rbp-0x38],0x2
  42c577:	jbe    42c739 <flatcc_json_parser_struct_as_root@@Base+0x3590>
  42c57d:	movzx  eax,BYTE PTR [rbp-0xc]
  42c581:	movzx  eax,al
  42c584:	shl    eax,0x2
  42c587:	mov    edx,eax
  42c589:	movzx  eax,BYTE PTR [rbp-0xb]
  42c58d:	shr    al,0x4
  42c590:	or     eax,edx
  42c592:	mov    edx,eax
  42c594:	mov    rax,QWORD PTR [rbp-0x58]
  42c598:	mov    BYTE PTR [rax],dl
  42c59a:	mov    rax,QWORD PTR [rbp-0x58]
  42c59e:	add    rax,0x1
  42c5a2:	movzx  edx,BYTE PTR [rbp-0xb]
  42c5a6:	movzx  edx,dl
  42c5a9:	shl    edx,0x4
  42c5ac:	mov    ecx,edx
  42c5ae:	movzx  edx,BYTE PTR [rbp-0xa]
  42c5b2:	shr    dl,0x2
  42c5b5:	or     edx,ecx
  42c5b7:	mov    BYTE PTR [rax],dl
  42c5b9:	mov    rax,QWORD PTR [rbp-0x58]
  42c5bd:	add    rax,0x2
  42c5c1:	movzx  edx,BYTE PTR [rbp-0xa]
  42c5c5:	movzx  edx,dl
  42c5c8:	shl    edx,0x6
  42c5cb:	mov    ecx,edx
  42c5cd:	movzx  edx,BYTE PTR [rbp-0x9]
  42c5d1:	or     edx,ecx
  42c5d3:	mov    BYTE PTR [rax],dl
  42c5d5:	add    QWORD PTR [rbp-0x58],0x3
  42c5da:	add    QWORD PTR [rbp-0x60],0x4
  42c5df:	sub    QWORD PTR [rbp-0x38],0x3
  42c5e4:	sub    QWORD PTR [rbp-0x30],0x4
  42c5e9:	mov    rax,QWORD PTR [rbp-0x30]
  42c5ed:	mov    QWORD PTR [rbp-0x28],rax
  42c5f1:	cmp    QWORD PTR [rbp-0x38],0x0
  42c5f6:	jne    42c42a <flatcc_json_parser_struct_as_root@@Base+0x3281>
  42c5fc:	cmp    QWORD PTR [rbp-0x68],0x0
  42c601:	je     42c61b <flatcc_json_parser_struct_as_root@@Base+0x3472>
  42c603:	mov    rdx,QWORD PTR [rbp-0x58]
  42c607:	mov    rax,QWORD PTR [rbp-0x18]
  42c60b:	sub    rdx,rax
  42c60e:	mov    rax,rdx
  42c611:	mov    rdx,rax
  42c614:	mov    rax,QWORD PTR [rbp-0x68]
  42c618:	mov    QWORD PTR [rax],rdx
  42c61b:	cmp    QWORD PTR [rbp-0x70],0x0
  42c620:	je     42c637 <flatcc_json_parser_struct_as_root@@Base+0x348e>
  42c622:	mov    rax,QWORD PTR [rbp-0x70]
  42c626:	mov    rax,QWORD PTR [rax]
  42c629:	sub    rax,QWORD PTR [rbp-0x28]
  42c62d:	mov    rdx,rax
  42c630:	mov    rax,QWORD PTR [rbp-0x70]
  42c634:	mov    QWORD PTR [rax],rdx
  42c637:	mov    eax,DWORD PTR [rbp-0x50]
  42c63a:	mov    rsi,QWORD PTR [rbp-0x8]
  42c63e:	xor    rsi,QWORD PTR fs:0x28
  42c647:	je     42c751 <flatcc_json_parser_struct_as_root@@Base+0x35a8>
  42c64d:	jmp    42c74c <flatcc_json_parser_struct_as_root@@Base+0x35a3>
  42c652:	mov    rax,QWORD PTR [rbp-0x40]
  42c656:	cmp    rax,0x2
  42c65a:	je     42c670 <flatcc_json_parser_struct_as_root@@Base+0x34c7>
  42c65c:	cmp    rax,0x3
  42c660:	je     42c6b4 <flatcc_json_parser_struct_as_root@@Base+0x350b>
  42c662:	test   rax,rax
  42c665:	je     42c71b <flatcc_json_parser_struct_as_root@@Base+0x3572>
  42c66b:	jmp    42c70f <flatcc_json_parser_struct_as_root@@Base+0x3566>
  42c670:	movzx  eax,BYTE PTR [rbp-0xb]
  42c674:	movzx  eax,al
  42c677:	shl    eax,0x4
  42c67a:	movzx  eax,al
  42c67d:	test   eax,eax
  42c67f:	jne    42c729 <flatcc_json_parser_struct_as_root@@Base+0x3580>
  42c685:	cmp    QWORD PTR [rbp-0x38],0x0
  42c68a:	je     42c73c <flatcc_json_parser_struct_as_root@@Base+0x3593>
  42c690:	movzx  eax,BYTE PTR [rbp-0xc]
  42c694:	movzx  eax,al
  42c697:	shl    eax,0x2
  42c69a:	mov    edx,eax
  42c69c:	movzx  eax,BYTE PTR [rbp-0xb]
  42c6a0:	shr    al,0x4
  42c6a3:	or     eax,edx
  42c6a5:	mov    edx,eax
  42c6a7:	mov    rax,QWORD PTR [rbp-0x58]
  42c6ab:	mov    BYTE PTR [rax],dl
  42c6ad:	add    QWORD PTR [rbp-0x58],0x1
  42c6b2:	jmp    42c71c <flatcc_json_parser_struct_as_root@@Base+0x3573>
  42c6b4:	movzx  eax,BYTE PTR [rbp-0xa]
  42c6b8:	movzx  eax,al
  42c6bb:	shl    eax,0x6
  42c6be:	movzx  eax,al
  42c6c1:	test   eax,eax
  42c6c3:	jne    42c72c <flatcc_json_parser_struct_as_root@@Base+0x3583>
  42c6c5:	cmp    QWORD PTR [rbp-0x38],0x1
  42c6ca:	jbe    42c73f <flatcc_json_parser_struct_as_root@@Base+0x3596>
  42c6cc:	movzx  eax,BYTE PTR [rbp-0xc]
  42c6d0:	movzx  eax,al
  42c6d3:	shl    eax,0x2
  42c6d6:	mov    edx,eax
  42c6d8:	movzx  eax,BYTE PTR [rbp-0xb]
  42c6dc:	shr    al,0x4
  42c6df:	or     eax,edx
  42c6e1:	mov    edx,eax
  42c6e3:	mov    rax,QWORD PTR [rbp-0x58]
  42c6e7:	mov    BYTE PTR [rax],dl
  42c6e9:	mov    rax,QWORD PTR [rbp-0x58]
  42c6ed:	add    rax,0x1
  42c6f1:	movzx  edx,BYTE PTR [rbp-0xb]
  42c6f5:	movzx  edx,dl
  42c6f8:	shl    edx,0x4
  42c6fb:	mov    ecx,edx
  42c6fd:	movzx  edx,BYTE PTR [rbp-0xa]
  42c701:	shr    dl,0x2
  42c704:	or     edx,ecx
  42c706:	mov    BYTE PTR [rax],dl
  42c708:	add    QWORD PTR [rbp-0x58],0x2
  42c70d:	jmp    42c71c <flatcc_json_parser_struct_as_root@@Base+0x3573>
  42c70f:	mov    DWORD PTR [rbp-0x50],0x4
  42c716:	jmp    42c5fc <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42c71b:	nop
  42c71c:	mov    rax,QWORD PTR [rbp-0x30]
  42c720:	mov    QWORD PTR [rbp-0x28],rax
  42c724:	jmp    42c5fc <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42c729:	nop
  42c72a:	jmp    42c72d <flatcc_json_parser_struct_as_root@@Base+0x3584>
  42c72c:	nop
  42c72d:	mov    DWORD PTR [rbp-0x50],0x5
  42c734:	jmp    42c5fc <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42c739:	nop
  42c73a:	jmp    42c740 <flatcc_json_parser_struct_as_root@@Base+0x3597>
  42c73c:	nop
  42c73d:	jmp    42c740 <flatcc_json_parser_struct_as_root@@Base+0x3597>
  42c73f:	nop
  42c740:	mov    DWORD PTR [rbp-0x50],0x1
  42c747:	jmp    42c5fc <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42c74c:	call   405070 <__stack_chk_fail@plt>
  42c751:	leave  
  42c752:	ret    

000000000042c753 <flatcc_json_printer_error_string@@Base>:
  42c753:	push   rbp
  42c754:	mov    rbp,rsp
  42c757:	mov    DWORD PTR [rbp-0x4],edi
  42c75a:	mov    eax,DWORD PTR [rbp-0x4]
  42c75d:	cmp    eax,0x1
  42c760:	je     42c782 <flatcc_json_printer_error_string@@Base+0x2f>
  42c762:	cmp    eax,0x1
  42c765:	jg     42c76d <flatcc_json_printer_error_string@@Base+0x1a>
  42c767:	test   eax,eax
  42c769:	je     42c779 <flatcc_json_printer_error_string@@Base+0x26>
  42c76b:	jmp    42c79d <flatcc_json_printer_error_string@@Base+0x4a>
  42c76d:	cmp    eax,0x2
  42c770:	je     42c78b <flatcc_json_printer_error_string@@Base+0x38>
  42c772:	cmp    eax,0x3
  42c775:	je     42c794 <flatcc_json_printer_error_string@@Base+0x41>
  42c777:	jmp    42c79d <flatcc_json_printer_error_string@@Base+0x4a>
  42c779:	lea    rax,[rip+0x10785]        # 43cf05 <flatcc_builder_padding_base@@Base+0x2f85>
  42c780:	jmp    42c7a4 <flatcc_json_printer_error_string@@Base+0x51>
  42c782:	lea    rax,[rip+0x10888]        # 43d011 <flatcc_builder_padding_base@@Base+0x3091>
  42c789:	jmp    42c7a4 <flatcc_json_printer_error_string@@Base+0x51>
  42c78b:	lea    rax,[rip+0x10889]        # 43d01b <flatcc_builder_padding_base@@Base+0x309b>
  42c792:	jmp    42c7a4 <flatcc_json_printer_error_string@@Base+0x51>
  42c794:	lea    rax,[rip+0x1088f]        # 43d02a <flatcc_builder_padding_base@@Base+0x30aa>
  42c79b:	jmp    42c7a4 <flatcc_json_printer_error_string@@Base+0x51>
  42c79d:	lea    rax,[rip+0x1088f]        # 43d033 <flatcc_builder_padding_base@@Base+0x30b3>
  42c7a4:	pop    rbp
  42c7a5:	ret    
  42c7a6:	push   rbp
  42c7a7:	mov    rbp,rsp
  42c7aa:	sub    rsp,0x8
  42c7ae:	mov    QWORD PTR [rbp-0x8],rdi
  42c7b2:	mov    rax,QWORD PTR [rbp-0x8]
  42c7b6:	mov    rdi,rax
  42c7b9:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42c7be:	mov    edx,eax
  42c7c0:	mov    rax,QWORD PTR [rbp-0x8]
  42c7c4:	add    rax,rdx
  42c7c7:	leave  
  42c7c8:	ret    
  42c7c9:	push   rbp
  42c7ca:	mov    rbp,rsp
  42c7cd:	sub    rsp,0x10
  42c7d1:	mov    QWORD PTR [rbp-0x8],rdi
  42c7d5:	mov    DWORD PTR [rbp-0xc],esi
  42c7d8:	mov    edx,DWORD PTR [rbp-0xc]
  42c7db:	mov    rax,QWORD PTR [rbp-0x8]
  42c7df:	add    rax,rdx
  42c7e2:	mov    rdi,rax
  42c7e5:	call   429568 <flatcc_json_parser_struct_as_root@@Base+0x3bf>
  42c7ea:	leave  
  42c7eb:	ret    
  42c7ec:	push   rbp
  42c7ed:	mov    rbp,rsp
  42c7f0:	sub    rsp,0x20
  42c7f4:	mov    QWORD PTR [rbp-0x18],rdi
  42c7f8:	mov    DWORD PTR [rbp-0x1c],esi
  42c7fb:	mov    eax,DWORD PTR [rbp-0x1c]
  42c7fe:	add    eax,0x2
  42c801:	cdqe   
  42c803:	add    eax,eax
  42c805:	mov    DWORD PTR [rbp-0x4],eax
  42c808:	mov    rax,QWORD PTR [rbp-0x18]
  42c80c:	mov    eax,DWORD PTR [rax+0x10]
  42c80f:	cmp    eax,DWORD PTR [rbp-0x4]
  42c812:	jg     42c81b <flatcc_json_printer_error_string@@Base+0xc8>
  42c814:	mov    eax,0x0
  42c819:	jmp    42c852 <flatcc_json_printer_error_string@@Base+0xff>
  42c81b:	mov    edx,DWORD PTR [rbp-0x4]
  42c81e:	mov    rax,QWORD PTR [rbp-0x18]
  42c822:	mov    rax,QWORD PTR [rax+0x8]
  42c826:	mov    esi,edx
  42c828:	mov    rdi,rax
  42c82b:	call   42c7c9 <flatcc_json_printer_error_string@@Base+0x76>
  42c830:	movzx  eax,ax
  42c833:	mov    DWORD PTR [rbp-0x4],eax
  42c836:	cmp    DWORD PTR [rbp-0x4],0x0
  42c83a:	jne    42c843 <flatcc_json_printer_error_string@@Base+0xf0>
  42c83c:	mov    eax,0x0
  42c841:	jmp    42c852 <flatcc_json_printer_error_string@@Base+0xff>
  42c843:	mov    rax,QWORD PTR [rbp-0x18]
  42c847:	mov    rdx,QWORD PTR [rax]
  42c84a:	mov    eax,DWORD PTR [rbp-0x4]
  42c84d:	cdqe   
  42c84f:	add    rax,rdx
  42c852:	leave  
  42c853:	ret    

000000000042c854 <flatcc_json_printer_fmt_float@@Base>:
  42c854:	push   rbp
  42c855:	mov    rbp,rsp
  42c858:	sub    rsp,0x10
  42c85c:	mov    QWORD PTR [rbp-0x8],rdi
  42c860:	vmovss DWORD PTR [rbp-0xc],xmm0
  42c865:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0xc]
  42c86a:	mov    rax,QWORD PTR [rbp-0x8]
  42c86e:	mov    rdi,rax
  42c871:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42c876:	leave  
  42c877:	ret    

000000000042c878 <flatcc_json_printer_fmt_double@@Base>:
  42c878:	push   rbp
  42c879:	mov    rbp,rsp
  42c87c:	sub    rsp,0x20
  42c880:	mov    QWORD PTR [rbp-0x8],rdi
  42c884:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42c889:	mov    rdx,QWORD PTR [rbp-0x8]
  42c88d:	mov    rax,QWORD PTR [rbp-0x10]
  42c891:	mov    rdi,rdx
  42c894:	mov    QWORD PTR [rbp-0x18],rax
  42c898:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42c89d:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42c8a2:	leave  
  42c8a3:	ret    

000000000042c8a4 <flatcc_json_printer_fmt_bool@@Base>:
  42c8a4:	push   rbp
  42c8a5:	mov    rbp,rsp
  42c8a8:	sub    rsp,0x10
  42c8ac:	mov    QWORD PTR [rbp-0x8],rdi
  42c8b0:	mov    DWORD PTR [rbp-0xc],esi
  42c8b3:	cmp    DWORD PTR [rbp-0xc],0x0
  42c8b7:	je     42c8d8 <flatcc_json_printer_fmt_bool@@Base+0x34>
  42c8b9:	mov    rax,QWORD PTR [rbp-0x8]
  42c8bd:	mov    edx,0x4
  42c8c2:	lea    rsi,[rip+0x10772]        # 43d03b <flatcc_builder_padding_base@@Base+0x30bb>
  42c8c9:	mov    rdi,rax
  42c8cc:	call   4050f0 <memcpy@plt>
  42c8d1:	mov    eax,0x4
  42c8d6:	jmp    42c8f5 <flatcc_json_printer_fmt_bool@@Base+0x51>
  42c8d8:	mov    rax,QWORD PTR [rbp-0x8]
  42c8dc:	mov    edx,0x5
  42c8e1:	lea    rsi,[rip+0x10758]        # 43d040 <flatcc_builder_padding_base@@Base+0x30c0>
  42c8e8:	mov    rdi,rax
  42c8eb:	call   4050f0 <memcpy@plt>
  42c8f0:	mov    eax,0x5
  42c8f5:	leave  
  42c8f6:	ret    
  42c8f7:	push   rbp
  42c8f8:	mov    rbp,rsp
  42c8fb:	sub    rsp,0x30
  42c8ff:	mov    QWORD PTR [rbp-0x18],rdi
  42c903:	mov    QWORD PTR [rbp-0x20],rsi
  42c907:	mov    QWORD PTR [rbp-0x28],rdx
  42c90b:	mov    rax,QWORD PTR [rbp-0x18]
  42c90f:	mov    rdx,QWORD PTR [rax+0x28]
  42c913:	mov    rax,QWORD PTR [rbp-0x18]
  42c917:	mov    rax,QWORD PTR [rax+0x20]
  42c91b:	cmp    rdx,rax
  42c91e:	jb     42c936 <flatcc_json_printer_fmt_bool@@Base+0x92>
  42c920:	mov    rax,QWORD PTR [rbp-0x18]
  42c924:	mov    rax,QWORD PTR [rax+0x48]
  42c928:	mov    rdx,QWORD PTR [rbp-0x18]
  42c92c:	mov    esi,0x0
  42c931:	mov    rdi,rdx
  42c934:	call   rax
  42c936:	mov    rax,QWORD PTR [rbp-0x18]
  42c93a:	mov    rax,QWORD PTR [rax+0x20]
  42c93e:	mov    rdx,rax
  42c941:	mov    rax,QWORD PTR [rbp-0x18]
  42c945:	mov    rax,QWORD PTR [rax+0x28]
  42c949:	sub    rdx,rax
  42c94c:	mov    rax,rdx
  42c94f:	mov    QWORD PTR [rbp-0x8],rax
  42c953:	jmp    42c9ca <flatcc_json_printer_fmt_bool@@Base+0x126>
  42c955:	mov    rax,QWORD PTR [rbp-0x18]
  42c959:	mov    rax,QWORD PTR [rax+0x28]
  42c95d:	mov    rdx,QWORD PTR [rbp-0x8]
  42c961:	mov    rcx,QWORD PTR [rbp-0x20]
  42c965:	mov    rsi,rcx
  42c968:	mov    rdi,rax
  42c96b:	call   4050f0 <memcpy@plt>
  42c970:	mov    rax,QWORD PTR [rbp-0x18]
  42c974:	mov    rdx,QWORD PTR [rax+0x28]
  42c978:	mov    rax,QWORD PTR [rbp-0x8]
  42c97c:	add    rdx,rax
  42c97f:	mov    rax,QWORD PTR [rbp-0x18]
  42c983:	mov    QWORD PTR [rax+0x28],rdx
  42c987:	mov    rax,QWORD PTR [rbp-0x8]
  42c98b:	add    QWORD PTR [rbp-0x20],rax
  42c98f:	mov    rax,QWORD PTR [rbp-0x8]
  42c993:	sub    QWORD PTR [rbp-0x28],rax
  42c997:	mov    rax,QWORD PTR [rbp-0x18]
  42c99b:	mov    rax,QWORD PTR [rax+0x48]
  42c99f:	mov    rdx,QWORD PTR [rbp-0x18]
  42c9a3:	mov    esi,0x0
  42c9a8:	mov    rdi,rdx
  42c9ab:	call   rax
  42c9ad:	mov    rax,QWORD PTR [rbp-0x18]
  42c9b1:	mov    rax,QWORD PTR [rax+0x20]
  42c9b5:	mov    rdx,rax
  42c9b8:	mov    rax,QWORD PTR [rbp-0x18]
  42c9bc:	mov    rax,QWORD PTR [rax+0x28]
  42c9c0:	sub    rdx,rax
  42c9c3:	mov    rax,rdx
  42c9c6:	mov    QWORD PTR [rbp-0x8],rax
  42c9ca:	mov    rax,QWORD PTR [rbp-0x28]
  42c9ce:	cmp    rax,QWORD PTR [rbp-0x8]
  42c9d2:	ja     42c955 <flatcc_json_printer_fmt_bool@@Base+0xb1>
  42c9d4:	mov    rax,QWORD PTR [rbp-0x18]
  42c9d8:	mov    rax,QWORD PTR [rax+0x28]
  42c9dc:	mov    rdx,QWORD PTR [rbp-0x28]
  42c9e0:	mov    rcx,QWORD PTR [rbp-0x20]
  42c9e4:	mov    rsi,rcx
  42c9e7:	mov    rdi,rax
  42c9ea:	call   4050f0 <memcpy@plt>
  42c9ef:	mov    rax,QWORD PTR [rbp-0x18]
  42c9f3:	mov    rdx,QWORD PTR [rax+0x28]
  42c9f7:	mov    rax,QWORD PTR [rbp-0x28]
  42c9fb:	add    rdx,rax
  42c9fe:	mov    rax,QWORD PTR [rbp-0x18]
  42ca02:	mov    QWORD PTR [rax+0x28],rdx
  42ca06:	nop
  42ca07:	leave  
  42ca08:	ret    
  42ca09:	push   rbp
  42ca0a:	mov    rbp,rsp
  42ca0d:	sub    rsp,0x20
  42ca11:	mov    QWORD PTR [rbp-0x8],rdi
  42ca15:	mov    QWORD PTR [rbp-0x10],rsi
  42ca19:	mov    QWORD PTR [rbp-0x18],rdx
  42ca1d:	mov    rax,QWORD PTR [rbp-0x8]
  42ca21:	mov    rdx,QWORD PTR [rax+0x28]
  42ca25:	mov    rax,QWORD PTR [rbp-0x18]
  42ca29:	add    rdx,rax
  42ca2c:	mov    rax,QWORD PTR [rbp-0x8]
  42ca30:	mov    rax,QWORD PTR [rax+0x20]
  42ca34:	cmp    rdx,rax
  42ca37:	jb     42ca52 <flatcc_json_printer_fmt_bool@@Base+0x1ae>
  42ca39:	mov    rdx,QWORD PTR [rbp-0x18]
  42ca3d:	mov    rcx,QWORD PTR [rbp-0x10]
  42ca41:	mov    rax,QWORD PTR [rbp-0x8]
  42ca45:	mov    rsi,rcx
  42ca48:	mov    rdi,rax
  42ca4b:	call   42c8f7 <flatcc_json_printer_fmt_bool@@Base+0x53>
  42ca50:	jmp    42ca84 <flatcc_json_printer_fmt_bool@@Base+0x1e0>
  42ca52:	mov    rax,QWORD PTR [rbp-0x8]
  42ca56:	mov    rax,QWORD PTR [rax+0x28]
  42ca5a:	mov    rdx,QWORD PTR [rbp-0x18]
  42ca5e:	mov    rcx,QWORD PTR [rbp-0x10]
  42ca62:	mov    rsi,rcx
  42ca65:	mov    rdi,rax
  42ca68:	call   4050f0 <memcpy@plt>
  42ca6d:	mov    rax,QWORD PTR [rbp-0x8]
  42ca71:	mov    rdx,QWORD PTR [rax+0x28]
  42ca75:	mov    rax,QWORD PTR [rbp-0x18]
  42ca79:	add    rdx,rax
  42ca7c:	mov    rax,QWORD PTR [rbp-0x8]
  42ca80:	mov    QWORD PTR [rax+0x28],rdx
  42ca84:	nop
  42ca85:	leave  
  42ca86:	ret    
  42ca87:	push   rbp
  42ca88:	mov    rbp,rsp
  42ca8b:	sub    rsp,0x40
  42ca8f:	mov    QWORD PTR [rbp-0x28],rdi
  42ca93:	mov    QWORD PTR [rbp-0x30],rsi
  42ca97:	mov    QWORD PTR [rbp-0x38],rdx
  42ca9b:	mov    rax,QWORD PTR [rbp-0x30]
  42ca9f:	mov    QWORD PTR [rbp-0x10],rax
  42caa3:	mov    rax,QWORD PTR [rbp-0x28]
  42caa7:	mov    rax,QWORD PTR [rax+0x28]
  42caab:	lea    rcx,[rax+0x1]
  42caaf:	mov    rdx,QWORD PTR [rbp-0x28]
  42cab3:	mov    QWORD PTR [rdx+0x28],rcx
  42cab7:	mov    BYTE PTR [rax],0x22
  42caba:	mov    rax,QWORD PTR [rbp-0x10]
  42cabe:	movzx  eax,BYTE PTR [rax]
  42cac1:	mov    BYTE PTR [rbp-0x12],al
  42cac4:	jmp    42cad5 <flatcc_json_printer_fmt_bool@@Base+0x231>
  42cac6:	add    QWORD PTR [rbp-0x10],0x1
  42cacb:	mov    rax,QWORD PTR [rbp-0x10]
  42cacf:	movzx  eax,BYTE PTR [rax]
  42cad2:	mov    BYTE PTR [rbp-0x12],al
  42cad5:	cmp    BYTE PTR [rbp-0x12],0x1f
  42cad9:	jbe    42cae7 <flatcc_json_printer_fmt_bool@@Base+0x243>
  42cadb:	cmp    BYTE PTR [rbp-0x12],0x22
  42cadf:	je     42cae7 <flatcc_json_printer_fmt_bool@@Base+0x243>
  42cae1:	cmp    BYTE PTR [rbp-0x12],0x5c
  42cae5:	jne    42cac6 <flatcc_json_printer_fmt_bool@@Base+0x222>
  42cae7:	mov    rdx,QWORD PTR [rbp-0x10]
  42caeb:	mov    rax,QWORD PTR [rbp-0x30]
  42caef:	sub    rdx,rax
  42caf2:	mov    rax,rdx
  42caf5:	mov    QWORD PTR [rbp-0x8],rax
  42caf9:	mov    rdx,QWORD PTR [rbp-0x8]
  42cafd:	mov    rcx,QWORD PTR [rbp-0x30]
  42cb01:	mov    rax,QWORD PTR [rbp-0x28]
  42cb05:	mov    rsi,rcx
  42cb08:	mov    rdi,rax
  42cb0b:	call   42ca09 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42cb10:	mov    rax,QWORD PTR [rbp-0x8]
  42cb14:	sub    QWORD PTR [rbp-0x38],rax
  42cb18:	cmp    QWORD PTR [rbp-0x38],0x0
  42cb1d:	je     42cd14 <flatcc_json_printer_fmt_bool@@Base+0x470>
  42cb23:	mov    rax,QWORD PTR [rbp-0x8]
  42cb27:	add    QWORD PTR [rbp-0x30],rax
  42cb2b:	mov    rax,QWORD PTR [rbp-0x28]
  42cb2f:	mov    rax,QWORD PTR [rax+0x28]
  42cb33:	lea    rcx,[rax+0x1]
  42cb37:	mov    rdx,QWORD PTR [rbp-0x28]
  42cb3b:	mov    QWORD PTR [rdx+0x28],rcx
  42cb3f:	mov    BYTE PTR [rax],0x5c
  42cb42:	movzx  eax,BYTE PTR [rbp-0x12]
  42cb46:	cmp    eax,0xc
  42cb49:	je     42cbd8 <flatcc_json_printer_fmt_bool@@Base+0x334>
  42cb4f:	cmp    eax,0xc
  42cb52:	jg     42cb70 <flatcc_json_printer_fmt_bool@@Base+0x2cc>
  42cb54:	cmp    eax,0x9
  42cb57:	je     42cbbc <flatcc_json_printer_fmt_bool@@Base+0x318>
  42cb59:	cmp    eax,0xa
  42cb5c:	je     42cc10 <flatcc_json_printer_fmt_bool@@Base+0x36c>
  42cb62:	cmp    eax,0x8
  42cb65:	je     42cc2c <flatcc_json_printer_fmt_bool@@Base+0x388>
  42cb6b:	jmp    42cc48 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
  42cb70:	cmp    eax,0x22
  42cb73:	je     42cb84 <flatcc_json_printer_fmt_bool@@Base+0x2e0>
  42cb75:	cmp    eax,0x5c
  42cb78:	je     42cba0 <flatcc_json_printer_fmt_bool@@Base+0x2fc>
  42cb7a:	cmp    eax,0xd
  42cb7d:	je     42cbf4 <flatcc_json_printer_fmt_bool@@Base+0x350>
  42cb7f:	jmp    42cc48 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
  42cb84:	mov    rax,QWORD PTR [rbp-0x28]
  42cb88:	mov    rax,QWORD PTR [rax+0x28]
  42cb8c:	lea    rcx,[rax+0x1]
  42cb90:	mov    rdx,QWORD PTR [rbp-0x28]
  42cb94:	mov    QWORD PTR [rdx+0x28],rcx
  42cb98:	mov    BYTE PTR [rax],0x22
  42cb9b:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cba0:	mov    rax,QWORD PTR [rbp-0x28]
  42cba4:	mov    rax,QWORD PTR [rax+0x28]
  42cba8:	lea    rcx,[rax+0x1]
  42cbac:	mov    rdx,QWORD PTR [rbp-0x28]
  42cbb0:	mov    QWORD PTR [rdx+0x28],rcx
  42cbb4:	mov    BYTE PTR [rax],0x5c
  42cbb7:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cbbc:	mov    rax,QWORD PTR [rbp-0x28]
  42cbc0:	mov    rax,QWORD PTR [rax+0x28]
  42cbc4:	lea    rcx,[rax+0x1]
  42cbc8:	mov    rdx,QWORD PTR [rbp-0x28]
  42cbcc:	mov    QWORD PTR [rdx+0x28],rcx
  42cbd0:	mov    BYTE PTR [rax],0x74
  42cbd3:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cbd8:	mov    rax,QWORD PTR [rbp-0x28]
  42cbdc:	mov    rax,QWORD PTR [rax+0x28]
  42cbe0:	lea    rcx,[rax+0x1]
  42cbe4:	mov    rdx,QWORD PTR [rbp-0x28]
  42cbe8:	mov    QWORD PTR [rdx+0x28],rcx
  42cbec:	mov    BYTE PTR [rax],0x66
  42cbef:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cbf4:	mov    rax,QWORD PTR [rbp-0x28]
  42cbf8:	mov    rax,QWORD PTR [rax+0x28]
  42cbfc:	lea    rcx,[rax+0x1]
  42cc00:	mov    rdx,QWORD PTR [rbp-0x28]
  42cc04:	mov    QWORD PTR [rdx+0x28],rcx
  42cc08:	mov    BYTE PTR [rax],0x72
  42cc0b:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cc10:	mov    rax,QWORD PTR [rbp-0x28]
  42cc14:	mov    rax,QWORD PTR [rax+0x28]
  42cc18:	lea    rcx,[rax+0x1]
  42cc1c:	mov    rdx,QWORD PTR [rbp-0x28]
  42cc20:	mov    QWORD PTR [rdx+0x28],rcx
  42cc24:	mov    BYTE PTR [rax],0x6e
  42cc27:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cc2c:	mov    rax,QWORD PTR [rbp-0x28]
  42cc30:	mov    rax,QWORD PTR [rax+0x28]
  42cc34:	lea    rcx,[rax+0x1]
  42cc38:	mov    rdx,QWORD PTR [rbp-0x28]
  42cc3c:	mov    QWORD PTR [rdx+0x28],rcx
  42cc40:	mov    BYTE PTR [rax],0x62
  42cc43:	jmp    42cd00 <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42cc48:	mov    rax,QWORD PTR [rbp-0x28]
  42cc4c:	mov    rax,QWORD PTR [rax+0x28]
  42cc50:	lea    rcx,[rax+0x1]
  42cc54:	mov    rdx,QWORD PTR [rbp-0x28]
  42cc58:	mov    QWORD PTR [rdx+0x28],rcx
  42cc5c:	mov    BYTE PTR [rax],0x75
  42cc5f:	mov    rax,QWORD PTR [rbp-0x28]
  42cc63:	mov    rax,QWORD PTR [rax+0x28]
  42cc67:	lea    rcx,[rax+0x1]
  42cc6b:	mov    rdx,QWORD PTR [rbp-0x28]
  42cc6f:	mov    QWORD PTR [rdx+0x28],rcx
  42cc73:	mov    BYTE PTR [rax],0x30
  42cc76:	mov    rax,QWORD PTR [rbp-0x28]
  42cc7a:	mov    rax,QWORD PTR [rax+0x28]
  42cc7e:	lea    rcx,[rax+0x1]
  42cc82:	mov    rdx,QWORD PTR [rbp-0x28]
  42cc86:	mov    QWORD PTR [rdx+0x28],rcx
  42cc8a:	mov    BYTE PTR [rax],0x30
  42cc8d:	movzx  eax,BYTE PTR [rbp-0x12]
  42cc91:	shr    al,0x4
  42cc94:	mov    BYTE PTR [rbp-0x11],al
  42cc97:	cmp    BYTE PTR [rbp-0x11],0x9
  42cc9b:	ja     42cca4 <flatcc_json_printer_fmt_bool@@Base+0x400>
  42cc9d:	mov    eax,0x30
  42cca2:	jmp    42cca9 <flatcc_json_printer_fmt_bool@@Base+0x405>
  42cca4:	mov    eax,0x57
  42cca9:	add    BYTE PTR [rbp-0x11],al
  42ccac:	mov    rax,QWORD PTR [rbp-0x28]
  42ccb0:	mov    rax,QWORD PTR [rax+0x28]
  42ccb4:	lea    rcx,[rax+0x1]
  42ccb8:	mov    rdx,QWORD PTR [rbp-0x28]
  42ccbc:	mov    QWORD PTR [rdx+0x28],rcx
  42ccc0:	movzx  edx,BYTE PTR [rbp-0x11]
  42ccc4:	mov    BYTE PTR [rax],dl
  42ccc6:	movzx  eax,BYTE PTR [rbp-0x12]
  42ccca:	and    eax,0xf
  42cccd:	mov    BYTE PTR [rbp-0x11],al
  42ccd0:	cmp    BYTE PTR [rbp-0x11],0x9
  42ccd4:	ja     42ccdd <flatcc_json_printer_fmt_bool@@Base+0x439>
  42ccd6:	mov    eax,0x30
  42ccdb:	jmp    42cce2 <flatcc_json_printer_fmt_bool@@Base+0x43e>
  42ccdd:	mov    eax,0x57
  42cce2:	add    BYTE PTR [rbp-0x11],al
  42cce5:	mov    rax,QWORD PTR [rbp-0x28]
  42cce9:	mov    rax,QWORD PTR [rax+0x28]
  42cced:	lea    rcx,[rax+0x1]
  42ccf1:	mov    rdx,QWORD PTR [rbp-0x28]
  42ccf5:	mov    QWORD PTR [rdx+0x28],rcx
  42ccf9:	movzx  edx,BYTE PTR [rbp-0x11]
  42ccfd:	mov    BYTE PTR [rax],dl
  42ccff:	nop
  42cd00:	add    QWORD PTR [rbp-0x10],0x1
  42cd05:	sub    QWORD PTR [rbp-0x38],0x1
  42cd0a:	add    QWORD PTR [rbp-0x30],0x1
  42cd0f:	jmp    42caba <flatcc_json_printer_fmt_bool@@Base+0x216>
  42cd14:	nop
  42cd15:	mov    rax,QWORD PTR [rbp-0x28]
  42cd19:	mov    rax,QWORD PTR [rax+0x28]
  42cd1d:	lea    rcx,[rax+0x1]
  42cd21:	mov    rdx,QWORD PTR [rbp-0x28]
  42cd25:	mov    QWORD PTR [rdx+0x28],rcx
  42cd29:	mov    BYTE PTR [rax],0x22
  42cd2c:	nop
  42cd2d:	leave  
  42cd2e:	ret    
  42cd2f:	push   rbp
  42cd30:	mov    rbp,rsp
  42cd33:	sub    rsp,0x60
  42cd37:	mov    QWORD PTR [rbp-0x48],rdi
  42cd3b:	mov    QWORD PTR [rbp-0x50],rsi
  42cd3f:	mov    DWORD PTR [rbp-0x54],edx
  42cd42:	mov    rax,QWORD PTR fs:0x28
  42cd4b:	mov    QWORD PTR [rbp-0x8],rax
  42cd4f:	xor    eax,eax
  42cd51:	mov    eax,DWORD PTR [rbp-0x54]
  42cd54:	and    al,0x7f
  42cd56:	mov    DWORD PTR [rbp-0x3c],eax
  42cd59:	mov    rax,QWORD PTR [rbp-0x50]
  42cd5d:	mov    rdi,rax
  42cd60:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42cd65:	mov    eax,eax
  42cd67:	mov    QWORD PTR [rbp-0x38],rax
  42cd6b:	mov    rax,QWORD PTR [rbp-0x50]
  42cd6f:	add    rax,0x4
  42cd73:	mov    QWORD PTR [rbp-0x20],rax
  42cd77:	mov    rax,QWORD PTR [rbp-0x48]
  42cd7b:	mov    rax,QWORD PTR [rax+0x28]
  42cd7f:	lea    rcx,[rax+0x1]
  42cd83:	mov    rdx,QWORD PTR [rbp-0x48]
  42cd87:	mov    QWORD PTR [rdx+0x28],rcx
  42cd8b:	mov    BYTE PTR [rax],0x22
  42cd8e:	mov    rax,QWORD PTR [rbp-0x38]
  42cd92:	mov    edx,DWORD PTR [rbp-0x54]
  42cd95:	mov    esi,edx
  42cd97:	mov    rdi,rax
  42cd9a:	call   42bf43 <flatcc_json_parser_struct_as_root@@Base+0x2d9a>
  42cd9f:	mov    QWORD PTR [rbp-0x28],rax
  42cda3:	mov    rax,QWORD PTR [rbp-0x48]
  42cda7:	mov    rdx,QWORD PTR [rax+0x28]
  42cdab:	mov    rax,QWORD PTR [rbp-0x28]
  42cdaf:	add    rdx,rax
  42cdb2:	mov    rax,QWORD PTR [rbp-0x48]
  42cdb6:	mov    rax,QWORD PTR [rax+0x20]
  42cdba:	cmp    rdx,rax
  42cdbd:	jb     42cecb <flatcc_json_printer_fmt_bool@@Base+0x627>
  42cdc3:	mov    rax,QWORD PTR [rbp-0x48]
  42cdc7:	mov    rax,QWORD PTR [rax+0x48]
  42cdcb:	mov    rdx,QWORD PTR [rbp-0x48]
  42cdcf:	mov    esi,0x0
  42cdd4:	mov    rdi,rdx
  42cdd7:	call   rax
  42cdd9:	jmp    42cecb <flatcc_json_printer_fmt_bool@@Base+0x627>
  42cdde:	mov    rax,QWORD PTR [rbp-0x48]
  42cde2:	mov    rax,QWORD PTR [rax+0x20]
  42cde6:	mov    rdx,rax
  42cde9:	mov    rax,QWORD PTR [rbp-0x48]
  42cded:	mov    rax,QWORD PTR [rax+0x28]
  42cdf1:	sub    rdx,rax
  42cdf4:	mov    rax,rdx
  42cdf7:	and    rax,0xfffffffffffffffc
  42cdfb:	mov    QWORD PTR [rbp-0x18],rax
  42cdff:	mov    rdx,QWORD PTR [rbp-0x18]
  42ce03:	mov    rax,rdx
  42ce06:	add    rax,rax
  42ce09:	add    rax,rdx
  42ce0c:	shr    rax,0x2
  42ce10:	mov    QWORD PTR [rbp-0x10],rax
  42ce14:	cmp    QWORD PTR [rbp-0x10],0x0
  42ce19:	jne    42ce3a <flatcc_json_printer_fmt_bool@@Base+0x596>
  42ce1b:	lea    rcx,[rip+0x107fe]        # 43d620 <flatcc_builder_padding_base@@Base+0x36a0>
  42ce22:	mov    edx,0x115
  42ce27:	lea    rsi,[rip+0x1021a]        # 43d048 <flatcc_builder_padding_base@@Base+0x30c8>
  42ce2e:	lea    rdi,[rip+0x10278]        # 43d0ad <flatcc_builder_padding_base@@Base+0x312d>
  42ce35:	call   405080 <__assert_fail@plt>
  42ce3a:	mov    rdx,QWORD PTR [rbp-0x18]
  42ce3e:	mov    rax,rdx
  42ce41:	add    rax,rax
  42ce44:	add    rax,rdx
  42ce47:	shr    rax,0x2
  42ce4b:	mov    QWORD PTR [rbp-0x30],rax
  42ce4f:	mov    rax,QWORD PTR [rbp-0x48]
  42ce53:	mov    rax,QWORD PTR [rax+0x28]
  42ce57:	mov    ecx,DWORD PTR [rbp-0x3c]
  42ce5a:	lea    rdx,[rbp-0x30]
  42ce5e:	mov    rsi,QWORD PTR [rbp-0x20]
  42ce62:	mov    r8d,ecx
  42ce65:	mov    rcx,rdx
  42ce68:	mov    edx,0x0
  42ce6d:	mov    rdi,rax
  42ce70:	call   42c02a <flatcc_json_parser_struct_as_root@@Base+0x2e81>
  42ce75:	mov    rax,QWORD PTR [rbp-0x48]
  42ce79:	mov    rdx,QWORD PTR [rax+0x28]
  42ce7d:	mov    rax,QWORD PTR [rbp-0x18]
  42ce81:	add    rdx,rax
  42ce84:	mov    rax,QWORD PTR [rbp-0x48]
  42ce88:	mov    QWORD PTR [rax+0x28],rdx
  42ce8c:	mov    rax,QWORD PTR [rbp-0x10]
  42ce90:	add    QWORD PTR [rbp-0x20],rax
  42ce94:	mov    rax,QWORD PTR [rbp-0x38]
  42ce98:	sub    rax,QWORD PTR [rbp-0x10]
  42ce9c:	mov    QWORD PTR [rbp-0x38],rax
  42cea0:	mov    rax,QWORD PTR [rbp-0x48]
  42cea4:	mov    rax,QWORD PTR [rax+0x48]
  42cea8:	mov    rdx,QWORD PTR [rbp-0x48]
  42ceac:	mov    esi,0x0
  42ceb1:	mov    rdi,rdx
  42ceb4:	call   rax
  42ceb6:	mov    rax,QWORD PTR [rbp-0x38]
  42ceba:	mov    edx,DWORD PTR [rbp-0x54]
  42cebd:	mov    esi,edx
  42cebf:	mov    rdi,rax
  42cec2:	call   42bf43 <flatcc_json_parser_struct_as_root@@Base+0x2d9a>
  42cec7:	mov    QWORD PTR [rbp-0x28],rax
  42cecb:	mov    rax,QWORD PTR [rbp-0x48]
  42cecf:	mov    rdx,QWORD PTR [rax+0x28]
  42ced3:	mov    rax,QWORD PTR [rbp-0x28]
  42ced7:	add    rdx,rax
  42ceda:	mov    rax,QWORD PTR [rbp-0x48]
  42cede:	mov    rax,QWORD PTR [rax+0x20]
  42cee2:	cmp    rdx,rax
  42cee5:	ja     42cdde <flatcc_json_printer_fmt_bool@@Base+0x53a>
  42ceeb:	mov    rax,QWORD PTR [rbp-0x48]
  42ceef:	mov    rax,QWORD PTR [rax+0x28]
  42cef3:	mov    ecx,DWORD PTR [rbp-0x54]
  42cef6:	lea    rdx,[rbp-0x38]
  42cefa:	mov    rsi,QWORD PTR [rbp-0x20]
  42cefe:	mov    r8d,ecx
  42cf01:	mov    rcx,rdx
  42cf04:	mov    edx,0x0
  42cf09:	mov    rdi,rax
  42cf0c:	call   42c02a <flatcc_json_parser_struct_as_root@@Base+0x2e81>
  42cf11:	mov    rax,QWORD PTR [rbp-0x48]
  42cf15:	mov    rdx,QWORD PTR [rax+0x28]
  42cf19:	mov    rax,QWORD PTR [rbp-0x28]
  42cf1d:	add    rdx,rax
  42cf20:	mov    rax,QWORD PTR [rbp-0x48]
  42cf24:	mov    QWORD PTR [rax+0x28],rdx
  42cf28:	mov    rax,QWORD PTR [rbp-0x48]
  42cf2c:	mov    rax,QWORD PTR [rax+0x28]
  42cf30:	lea    rcx,[rax+0x1]
  42cf34:	mov    rdx,QWORD PTR [rbp-0x48]
  42cf38:	mov    QWORD PTR [rdx+0x28],rcx
  42cf3c:	mov    BYTE PTR [rax],0x22
  42cf3f:	nop
  42cf40:	mov    rax,QWORD PTR [rbp-0x8]
  42cf44:	xor    rax,QWORD PTR fs:0x28
  42cf4d:	je     42cf54 <flatcc_json_printer_fmt_bool@@Base+0x6b0>
  42cf4f:	call   405070 <__stack_chk_fail@plt>
  42cf54:	leave  
  42cf55:	ret    
  42cf56:	push   rbp
  42cf57:	mov    rbp,rsp
  42cf5a:	sub    rsp,0x20
  42cf5e:	mov    QWORD PTR [rbp-0x18],rdi
  42cf62:	mov    QWORD PTR [rbp-0x20],rsi
  42cf66:	mov    rax,QWORD PTR [rbp-0x18]
  42cf6a:	mov    rdx,QWORD PTR [rax+0x28]
  42cf6e:	mov    rax,QWORD PTR [rbp-0x18]
  42cf72:	mov    rax,QWORD PTR [rax+0x20]
  42cf76:	cmp    rdx,rax
  42cf79:	jb     42cf91 <flatcc_json_printer_fmt_bool@@Base+0x6ed>
  42cf7b:	mov    rax,QWORD PTR [rbp-0x18]
  42cf7f:	mov    rax,QWORD PTR [rax+0x48]
  42cf83:	mov    rdx,QWORD PTR [rbp-0x18]
  42cf87:	mov    esi,0x0
  42cf8c:	mov    rdi,rdx
  42cf8f:	call   rax
  42cf91:	mov    rax,QWORD PTR [rbp-0x18]
  42cf95:	mov    rax,QWORD PTR [rax+0x20]
  42cf99:	mov    rdx,rax
  42cf9c:	mov    rax,QWORD PTR [rbp-0x18]
  42cfa0:	mov    rax,QWORD PTR [rax+0x28]
  42cfa4:	sub    rdx,rax
  42cfa7:	mov    rax,rdx
  42cfaa:	mov    QWORD PTR [rbp-0x8],rax
  42cfae:	jmp    42d01b <flatcc_json_printer_fmt_bool@@Base+0x777>
  42cfb0:	mov    rax,QWORD PTR [rbp-0x18]
  42cfb4:	mov    rax,QWORD PTR [rax+0x28]
  42cfb8:	mov    rdx,QWORD PTR [rbp-0x8]
  42cfbc:	mov    esi,0x20
  42cfc1:	mov    rdi,rax
  42cfc4:	call   405090 <memset@plt>
  42cfc9:	mov    rax,QWORD PTR [rbp-0x18]
  42cfcd:	mov    rdx,QWORD PTR [rax+0x28]
  42cfd1:	mov    rax,QWORD PTR [rbp-0x8]
  42cfd5:	add    rdx,rax
  42cfd8:	mov    rax,QWORD PTR [rbp-0x18]
  42cfdc:	mov    QWORD PTR [rax+0x28],rdx
  42cfe0:	mov    rax,QWORD PTR [rbp-0x8]
  42cfe4:	sub    QWORD PTR [rbp-0x20],rax
  42cfe8:	mov    rax,QWORD PTR [rbp-0x18]
  42cfec:	mov    rax,QWORD PTR [rax+0x48]
  42cff0:	mov    rdx,QWORD PTR [rbp-0x18]
  42cff4:	mov    esi,0x0
  42cff9:	mov    rdi,rdx
  42cffc:	call   rax
  42cffe:	mov    rax,QWORD PTR [rbp-0x18]
  42d002:	mov    rax,QWORD PTR [rax+0x20]
  42d006:	mov    rdx,rax
  42d009:	mov    rax,QWORD PTR [rbp-0x18]
  42d00d:	mov    rax,QWORD PTR [rax+0x28]
  42d011:	sub    rdx,rax
  42d014:	mov    rax,rdx
  42d017:	mov    QWORD PTR [rbp-0x8],rax
  42d01b:	mov    rax,QWORD PTR [rbp-0x20]
  42d01f:	cmp    rax,QWORD PTR [rbp-0x8]
  42d023:	ja     42cfb0 <flatcc_json_printer_fmt_bool@@Base+0x70c>
  42d025:	mov    rax,QWORD PTR [rbp-0x18]
  42d029:	mov    rax,QWORD PTR [rax+0x28]
  42d02d:	mov    rdx,QWORD PTR [rbp-0x20]
  42d031:	mov    esi,0x20
  42d036:	mov    rdi,rax
  42d039:	call   405090 <memset@plt>
  42d03e:	mov    rax,QWORD PTR [rbp-0x18]
  42d042:	mov    rdx,QWORD PTR [rax+0x28]
  42d046:	mov    rax,QWORD PTR [rbp-0x20]
  42d04a:	add    rdx,rax
  42d04d:	mov    rax,QWORD PTR [rbp-0x18]
  42d051:	mov    QWORD PTR [rax+0x28],rdx
  42d055:	nop
  42d056:	leave  
  42d057:	ret    
  42d058:	push   rbp
  42d059:	mov    rbp,rsp
  42d05c:	sub    rsp,0x20
  42d060:	mov    QWORD PTR [rbp-0x18],rdi
  42d064:	mov    rax,QWORD PTR [rbp-0x18]
  42d068:	mov    edx,DWORD PTR [rax+0x38]
  42d06b:	mov    rax,QWORD PTR [rbp-0x18]
  42d06f:	movzx  eax,BYTE PTR [rax+0x31]
  42d073:	movzx  eax,al
  42d076:	imul   eax,edx
  42d079:	cdqe   
  42d07b:	mov    QWORD PTR [rbp-0x8],rax
  42d07f:	mov    rax,QWORD PTR [rbp-0x18]
  42d083:	mov    rdx,QWORD PTR [rax+0x28]
  42d087:	mov    rax,QWORD PTR [rbp-0x8]
  42d08b:	add    rdx,rax
  42d08e:	mov    rax,QWORD PTR [rbp-0x18]
  42d092:	mov    rax,QWORD PTR [rax+0x20]
  42d096:	cmp    rdx,rax
  42d099:	jbe    42d0b0 <flatcc_json_printer_fmt_bool@@Base+0x80c>
  42d09b:	mov    rdx,QWORD PTR [rbp-0x8]
  42d09f:	mov    rax,QWORD PTR [rbp-0x18]
  42d0a3:	mov    rsi,rdx
  42d0a6:	mov    rdi,rax
  42d0a9:	call   42cf56 <flatcc_json_printer_fmt_bool@@Base+0x6b2>
  42d0ae:	jmp    42d0e0 <flatcc_json_printer_fmt_bool@@Base+0x83c>
  42d0b0:	mov    rax,QWORD PTR [rbp-0x18]
  42d0b4:	mov    rax,QWORD PTR [rax+0x28]
  42d0b8:	mov    rdx,QWORD PTR [rbp-0x8]
  42d0bc:	mov    esi,0x20
  42d0c1:	mov    rdi,rax
  42d0c4:	call   405090 <memset@plt>
  42d0c9:	mov    rax,QWORD PTR [rbp-0x18]
  42d0cd:	mov    rdx,QWORD PTR [rax+0x28]
  42d0d1:	mov    rax,QWORD PTR [rbp-0x8]
  42d0d5:	add    rdx,rax
  42d0d8:	mov    rax,QWORD PTR [rbp-0x18]
  42d0dc:	mov    QWORD PTR [rax+0x28],rdx
  42d0e0:	nop
  42d0e1:	leave  
  42d0e2:	ret    

000000000042d0e3 <flatcc_json_printer_string@@Base>:
  42d0e3:	push   rbp
  42d0e4:	mov    rbp,rsp
  42d0e7:	sub    rsp,0x20
  42d0eb:	mov    QWORD PTR [rbp-0x8],rdi
  42d0ef:	mov    QWORD PTR [rbp-0x10],rsi
  42d0f3:	mov    DWORD PTR [rbp-0x14],edx
  42d0f6:	mov    eax,DWORD PTR [rbp-0x14]
  42d0f9:	movsxd rdx,eax
  42d0fc:	mov    rcx,QWORD PTR [rbp-0x10]
  42d100:	mov    rax,QWORD PTR [rbp-0x8]
  42d104:	mov    rsi,rcx
  42d107:	mov    rdi,rax
  42d10a:	call   42ca87 <flatcc_json_printer_fmt_bool@@Base+0x1e3>
  42d10f:	nop
  42d110:	leave  
  42d111:	ret    

000000000042d112 <flatcc_json_printer_write@@Base>:
  42d112:	push   rbp
  42d113:	mov    rbp,rsp
  42d116:	sub    rsp,0x20
  42d11a:	mov    QWORD PTR [rbp-0x8],rdi
  42d11e:	mov    QWORD PTR [rbp-0x10],rsi
  42d122:	mov    DWORD PTR [rbp-0x14],edx
  42d125:	mov    eax,DWORD PTR [rbp-0x14]
  42d128:	movsxd rdx,eax
  42d12b:	mov    rcx,QWORD PTR [rbp-0x10]
  42d12f:	mov    rax,QWORD PTR [rbp-0x8]
  42d133:	mov    rsi,rcx
  42d136:	mov    rdi,rax
  42d139:	call   42ca09 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42d13e:	nop
  42d13f:	leave  
  42d140:	ret    

000000000042d141 <flatcc_json_printer_nl@@Base>:
  42d141:	push   rbp
  42d142:	mov    rbp,rsp
  42d145:	sub    rsp,0x10
  42d149:	mov    QWORD PTR [rbp-0x8],rdi
  42d14d:	mov    rax,QWORD PTR [rbp-0x8]
  42d151:	mov    rax,QWORD PTR [rax+0x28]
  42d155:	lea    rcx,[rax+0x1]
  42d159:	mov    rdx,QWORD PTR [rbp-0x8]
  42d15d:	mov    QWORD PTR [rdx+0x28],rcx
  42d161:	mov    BYTE PTR [rax],0xa
  42d164:	mov    rax,QWORD PTR [rbp-0x8]
  42d168:	mov    rdi,rax
  42d16b:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  42d170:	nop
  42d171:	leave  
  42d172:	ret    

000000000042d173 <flatcc_json_printer_char@@Base>:
  42d173:	push   rbp
  42d174:	mov    rbp,rsp
  42d177:	mov    QWORD PTR [rbp-0x8],rdi
  42d17b:	mov    eax,esi
  42d17d:	mov    BYTE PTR [rbp-0xc],al
  42d180:	mov    rax,QWORD PTR [rbp-0x8]
  42d184:	mov    rax,QWORD PTR [rax+0x28]
  42d188:	lea    rcx,[rax+0x1]
  42d18c:	mov    rdx,QWORD PTR [rbp-0x8]
  42d190:	mov    QWORD PTR [rdx+0x28],rcx
  42d194:	movzx  edx,BYTE PTR [rbp-0xc]
  42d198:	mov    BYTE PTR [rax],dl
  42d19a:	nop
  42d19b:	pop    rbp
  42d19c:	ret    

000000000042d19d <flatcc_json_printer_indent@@Base>:
  42d19d:	push   rbp
  42d19e:	mov    rbp,rsp
  42d1a1:	sub    rsp,0x10
  42d1a5:	mov    QWORD PTR [rbp-0x8],rdi
  42d1a9:	mov    rax,QWORD PTR [rbp-0x8]
  42d1ad:	mov    rdi,rax
  42d1b0:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42d1b5:	nop
  42d1b6:	leave  
  42d1b7:	ret    

000000000042d1b8 <flatcc_json_printer_add_level@@Base>:
  42d1b8:	push   rbp
  42d1b9:	mov    rbp,rsp
  42d1bc:	mov    QWORD PTR [rbp-0x8],rdi
  42d1c0:	mov    DWORD PTR [rbp-0xc],esi
  42d1c3:	mov    rax,QWORD PTR [rbp-0x8]
  42d1c7:	mov    edx,DWORD PTR [rax+0x38]
  42d1ca:	mov    eax,DWORD PTR [rbp-0xc]
  42d1cd:	add    edx,eax
  42d1cf:	mov    rax,QWORD PTR [rbp-0x8]
  42d1d3:	mov    DWORD PTR [rax+0x38],edx
  42d1d6:	nop
  42d1d7:	pop    rbp
  42d1d8:	ret    

000000000042d1d9 <flatcc_json_printer_get_level@@Base>:
  42d1d9:	push   rbp
  42d1da:	mov    rbp,rsp
  42d1dd:	mov    QWORD PTR [rbp-0x8],rdi
  42d1e1:	mov    rax,QWORD PTR [rbp-0x8]
  42d1e5:	mov    eax,DWORD PTR [rax+0x38]
  42d1e8:	pop    rbp
  42d1e9:	ret    
  42d1ea:	push   rbp
  42d1eb:	mov    rbp,rsp
  42d1ee:	sub    rsp,0x20
  42d1f2:	mov    QWORD PTR [rbp-0x8],rdi
  42d1f6:	mov    QWORD PTR [rbp-0x10],rsi
  42d1fa:	mov    QWORD PTR [rbp-0x18],rdx
  42d1fe:	mov    rax,QWORD PTR [rbp-0x8]
  42d202:	mov    rax,QWORD PTR [rax+0x28]
  42d206:	mov    BYTE PTR [rax],0x22
  42d209:	mov    rax,QWORD PTR [rbp-0x8]
  42d20d:	mov    rdx,QWORD PTR [rax+0x28]
  42d211:	mov    rax,QWORD PTR [rbp-0x8]
  42d215:	movzx  eax,BYTE PTR [rax+0x32]
  42d219:	test   al,al
  42d21b:	sete   al
  42d21e:	movzx  eax,al
  42d221:	add    rdx,rax
  42d224:	mov    rax,QWORD PTR [rbp-0x8]
  42d228:	mov    QWORD PTR [rax+0x28],rdx
  42d22c:	mov    rax,QWORD PTR [rbp-0x8]
  42d230:	mov    rdx,QWORD PTR [rax+0x28]
  42d234:	mov    rax,QWORD PTR [rbp-0x18]
  42d238:	add    rdx,rax
  42d23b:	mov    rax,QWORD PTR [rbp-0x8]
  42d23f:	mov    rax,QWORD PTR [rax+0x20]
  42d243:	cmp    rdx,rax
  42d246:	jae    42d27c <flatcc_json_printer_get_level@@Base+0xa3>
  42d248:	mov    rax,QWORD PTR [rbp-0x8]
  42d24c:	mov    rax,QWORD PTR [rax+0x28]
  42d250:	mov    rdx,QWORD PTR [rbp-0x18]
  42d254:	mov    rcx,QWORD PTR [rbp-0x10]
  42d258:	mov    rsi,rcx
  42d25b:	mov    rdi,rax
  42d25e:	call   4050f0 <memcpy@plt>
  42d263:	mov    rax,QWORD PTR [rbp-0x8]
  42d267:	mov    rdx,QWORD PTR [rax+0x28]
  42d26b:	mov    rax,QWORD PTR [rbp-0x18]
  42d26f:	add    rdx,rax
  42d272:	mov    rax,QWORD PTR [rbp-0x8]
  42d276:	mov    QWORD PTR [rax+0x28],rdx
  42d27a:	jmp    42d293 <flatcc_json_printer_get_level@@Base+0xba>
  42d27c:	mov    rdx,QWORD PTR [rbp-0x18]
  42d280:	mov    rcx,QWORD PTR [rbp-0x10]
  42d284:	mov    rax,QWORD PTR [rbp-0x8]
  42d288:	mov    rsi,rcx
  42d28b:	mov    rdi,rax
  42d28e:	call   42ca09 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42d293:	mov    rax,QWORD PTR [rbp-0x8]
  42d297:	mov    rax,QWORD PTR [rax+0x28]
  42d29b:	mov    BYTE PTR [rax],0x22
  42d29e:	mov    rax,QWORD PTR [rbp-0x8]
  42d2a2:	mov    rdx,QWORD PTR [rax+0x28]
  42d2a6:	mov    rax,QWORD PTR [rbp-0x8]
  42d2aa:	movzx  eax,BYTE PTR [rax+0x32]
  42d2ae:	test   al,al
  42d2b0:	sete   al
  42d2b3:	movzx  eax,al
  42d2b6:	add    rdx,rax
  42d2b9:	mov    rax,QWORD PTR [rbp-0x8]
  42d2bd:	mov    QWORD PTR [rax+0x28],rdx
  42d2c1:	nop
  42d2c2:	leave  
  42d2c3:	ret    
  42d2c4:	push   rbp
  42d2c5:	mov    rbp,rsp
  42d2c8:	sub    rsp,0x20
  42d2cc:	mov    QWORD PTR [rbp-0x8],rdi
  42d2d0:	mov    QWORD PTR [rbp-0x10],rsi
  42d2d4:	mov    QWORD PTR [rbp-0x18],rdx
  42d2d8:	mov    rax,QWORD PTR [rbp-0x8]
  42d2dc:	movzx  eax,BYTE PTR [rax+0x31]
  42d2e0:	test   al,al
  42d2e2:	je     42d309 <flatcc_json_printer_get_level@@Base+0x130>
  42d2e4:	mov    rax,QWORD PTR [rbp-0x8]
  42d2e8:	mov    rax,QWORD PTR [rax+0x28]
  42d2ec:	lea    rcx,[rax+0x1]
  42d2f0:	mov    rdx,QWORD PTR [rbp-0x8]
  42d2f4:	mov    QWORD PTR [rdx+0x28],rcx
  42d2f8:	mov    BYTE PTR [rax],0xa
  42d2fb:	mov    rax,QWORD PTR [rbp-0x8]
  42d2ff:	mov    rdi,rax
  42d302:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42d307:	jmp    42d315 <flatcc_json_printer_get_level@@Base+0x13c>
  42d309:	mov    rax,QWORD PTR [rbp-0x8]
  42d30d:	mov    rdi,rax
  42d310:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  42d315:	mov    rdx,QWORD PTR [rbp-0x18]
  42d319:	mov    rcx,QWORD PTR [rbp-0x10]
  42d31d:	mov    rax,QWORD PTR [rbp-0x8]
  42d321:	mov    rsi,rcx
  42d324:	mov    rdi,rax
  42d327:	call   42d1ea <flatcc_json_printer_get_level@@Base+0x11>
  42d32c:	mov    rax,QWORD PTR [rbp-0x8]
  42d330:	mov    rax,QWORD PTR [rax+0x28]
  42d334:	lea    rcx,[rax+0x1]
  42d338:	mov    rdx,QWORD PTR [rbp-0x8]
  42d33c:	mov    QWORD PTR [rdx+0x28],rcx
  42d340:	mov    BYTE PTR [rax],0x3a
  42d343:	mov    rax,QWORD PTR [rbp-0x8]
  42d347:	mov    rax,QWORD PTR [rax+0x28]
  42d34b:	mov    BYTE PTR [rax],0x20
  42d34e:	mov    rax,QWORD PTR [rbp-0x8]
  42d352:	mov    rdx,QWORD PTR [rax+0x28]
  42d356:	mov    rax,QWORD PTR [rbp-0x8]
  42d35a:	movzx  eax,BYTE PTR [rax+0x31]
  42d35e:	test   al,al
  42d360:	setne  al
  42d363:	movzx  eax,al
  42d366:	add    rdx,rax
  42d369:	mov    rax,QWORD PTR [rbp-0x8]
  42d36d:	mov    QWORD PTR [rax+0x28],rdx
  42d371:	nop
  42d372:	leave  
  42d373:	ret    

000000000042d374 <flatcc_json_printer_uint8@@Base>:
  42d374:	push   rbp
  42d375:	mov    rbp,rsp
  42d378:	sub    rsp,0x10
  42d37c:	mov    QWORD PTR [rbp-0x8],rdi
  42d380:	mov    eax,esi
  42d382:	mov    BYTE PTR [rbp-0xc],al
  42d385:	mov    rax,QWORD PTR [rbp-0x8]
  42d389:	mov    rdx,QWORD PTR [rax+0x28]
  42d38d:	movzx  eax,BYTE PTR [rbp-0xc]
  42d391:	mov    rsi,rdx
  42d394:	mov    edi,eax
  42d396:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42d39b:	mov    ecx,eax
  42d39d:	mov    rax,QWORD PTR [rbp-0x8]
  42d3a1:	mov    rdx,QWORD PTR [rax+0x28]
  42d3a5:	movsxd rax,ecx
  42d3a8:	add    rdx,rax
  42d3ab:	mov    rax,QWORD PTR [rbp-0x8]
  42d3af:	mov    QWORD PTR [rax+0x28],rdx
  42d3b3:	nop
  42d3b4:	leave  
  42d3b5:	ret    

000000000042d3b6 <flatcc_json_printer_uint16@@Base>:
  42d3b6:	push   rbp
  42d3b7:	mov    rbp,rsp
  42d3ba:	sub    rsp,0x10
  42d3be:	mov    QWORD PTR [rbp-0x8],rdi
  42d3c2:	mov    eax,esi
  42d3c4:	mov    WORD PTR [rbp-0xc],ax
  42d3c8:	mov    rax,QWORD PTR [rbp-0x8]
  42d3cc:	mov    rdx,QWORD PTR [rax+0x28]
  42d3d0:	movzx  eax,WORD PTR [rbp-0xc]
  42d3d4:	mov    rsi,rdx
  42d3d7:	mov    edi,eax
  42d3d9:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42d3de:	mov    ecx,eax
  42d3e0:	mov    rax,QWORD PTR [rbp-0x8]
  42d3e4:	mov    rdx,QWORD PTR [rax+0x28]
  42d3e8:	movsxd rax,ecx
  42d3eb:	add    rdx,rax
  42d3ee:	mov    rax,QWORD PTR [rbp-0x8]
  42d3f2:	mov    QWORD PTR [rax+0x28],rdx
  42d3f6:	nop
  42d3f7:	leave  
  42d3f8:	ret    

000000000042d3f9 <flatcc_json_printer_uint32@@Base>:
  42d3f9:	push   rbp
  42d3fa:	mov    rbp,rsp
  42d3fd:	sub    rsp,0x10
  42d401:	mov    QWORD PTR [rbp-0x8],rdi
  42d405:	mov    DWORD PTR [rbp-0xc],esi
  42d408:	mov    rax,QWORD PTR [rbp-0x8]
  42d40c:	mov    rdx,QWORD PTR [rax+0x28]
  42d410:	mov    eax,DWORD PTR [rbp-0xc]
  42d413:	mov    rsi,rdx
  42d416:	mov    edi,eax
  42d418:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42d41d:	mov    ecx,eax
  42d41f:	mov    rax,QWORD PTR [rbp-0x8]
  42d423:	mov    rdx,QWORD PTR [rax+0x28]
  42d427:	movsxd rax,ecx
  42d42a:	add    rdx,rax
  42d42d:	mov    rax,QWORD PTR [rbp-0x8]
  42d431:	mov    QWORD PTR [rax+0x28],rdx
  42d435:	nop
  42d436:	leave  
  42d437:	ret    

000000000042d438 <flatcc_json_printer_uint64@@Base>:
  42d438:	push   rbp
  42d439:	mov    rbp,rsp
  42d43c:	sub    rsp,0x10
  42d440:	mov    QWORD PTR [rbp-0x8],rdi
  42d444:	mov    QWORD PTR [rbp-0x10],rsi
  42d448:	mov    rax,QWORD PTR [rbp-0x8]
  42d44c:	mov    rdx,QWORD PTR [rax+0x28]
  42d450:	mov    rax,QWORD PTR [rbp-0x10]
  42d454:	mov    rsi,rdx
  42d457:	mov    rdi,rax
  42d45a:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42d45f:	mov    ecx,eax
  42d461:	mov    rax,QWORD PTR [rbp-0x8]
  42d465:	mov    rdx,QWORD PTR [rax+0x28]
  42d469:	movsxd rax,ecx
  42d46c:	add    rdx,rax
  42d46f:	mov    rax,QWORD PTR [rbp-0x8]
  42d473:	mov    QWORD PTR [rax+0x28],rdx
  42d477:	nop
  42d478:	leave  
  42d479:	ret    

000000000042d47a <flatcc_json_printer_int8@@Base>:
  42d47a:	push   rbp
  42d47b:	mov    rbp,rsp
  42d47e:	sub    rsp,0x10
  42d482:	mov    QWORD PTR [rbp-0x8],rdi
  42d486:	mov    eax,esi
  42d488:	mov    BYTE PTR [rbp-0xc],al
  42d48b:	mov    rax,QWORD PTR [rbp-0x8]
  42d48f:	mov    rdx,QWORD PTR [rax+0x28]
  42d493:	movsx  eax,BYTE PTR [rbp-0xc]
  42d497:	mov    rsi,rdx
  42d49a:	mov    edi,eax
  42d49c:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42d4a1:	mov    ecx,eax
  42d4a3:	mov    rax,QWORD PTR [rbp-0x8]
  42d4a7:	mov    rdx,QWORD PTR [rax+0x28]
  42d4ab:	movsxd rax,ecx
  42d4ae:	add    rdx,rax
  42d4b1:	mov    rax,QWORD PTR [rbp-0x8]
  42d4b5:	mov    QWORD PTR [rax+0x28],rdx
  42d4b9:	nop
  42d4ba:	leave  
  42d4bb:	ret    

000000000042d4bc <flatcc_json_printer_int16@@Base>:
  42d4bc:	push   rbp
  42d4bd:	mov    rbp,rsp
  42d4c0:	sub    rsp,0x10
  42d4c4:	mov    QWORD PTR [rbp-0x8],rdi
  42d4c8:	mov    eax,esi
  42d4ca:	mov    WORD PTR [rbp-0xc],ax
  42d4ce:	mov    rax,QWORD PTR [rbp-0x8]
  42d4d2:	mov    rdx,QWORD PTR [rax+0x28]
  42d4d6:	movsx  eax,WORD PTR [rbp-0xc]
  42d4da:	mov    rsi,rdx
  42d4dd:	mov    edi,eax
  42d4df:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42d4e4:	mov    ecx,eax
  42d4e6:	mov    rax,QWORD PTR [rbp-0x8]
  42d4ea:	mov    rdx,QWORD PTR [rax+0x28]
  42d4ee:	movsxd rax,ecx
  42d4f1:	add    rdx,rax
  42d4f4:	mov    rax,QWORD PTR [rbp-0x8]
  42d4f8:	mov    QWORD PTR [rax+0x28],rdx
  42d4fc:	nop
  42d4fd:	leave  
  42d4fe:	ret    

000000000042d4ff <flatcc_json_printer_int32@@Base>:
  42d4ff:	push   rbp
  42d500:	mov    rbp,rsp
  42d503:	sub    rsp,0x10
  42d507:	mov    QWORD PTR [rbp-0x8],rdi
  42d50b:	mov    DWORD PTR [rbp-0xc],esi
  42d50e:	mov    rax,QWORD PTR [rbp-0x8]
  42d512:	mov    rdx,QWORD PTR [rax+0x28]
  42d516:	mov    eax,DWORD PTR [rbp-0xc]
  42d519:	mov    rsi,rdx
  42d51c:	mov    edi,eax
  42d51e:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42d523:	mov    ecx,eax
  42d525:	mov    rax,QWORD PTR [rbp-0x8]
  42d529:	mov    rdx,QWORD PTR [rax+0x28]
  42d52d:	movsxd rax,ecx
  42d530:	add    rdx,rax
  42d533:	mov    rax,QWORD PTR [rbp-0x8]
  42d537:	mov    QWORD PTR [rax+0x28],rdx
  42d53b:	nop
  42d53c:	leave  
  42d53d:	ret    

000000000042d53e <flatcc_json_printer_int64@@Base>:
  42d53e:	push   rbp
  42d53f:	mov    rbp,rsp
  42d542:	sub    rsp,0x10
  42d546:	mov    QWORD PTR [rbp-0x8],rdi
  42d54a:	mov    QWORD PTR [rbp-0x10],rsi
  42d54e:	mov    rax,QWORD PTR [rbp-0x8]
  42d552:	mov    rdx,QWORD PTR [rax+0x28]
  42d556:	mov    rax,QWORD PTR [rbp-0x10]
  42d55a:	mov    rsi,rdx
  42d55d:	mov    rdi,rax
  42d560:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42d565:	mov    ecx,eax
  42d567:	mov    rax,QWORD PTR [rbp-0x8]
  42d56b:	mov    rdx,QWORD PTR [rax+0x28]
  42d56f:	movsxd rax,ecx
  42d572:	add    rdx,rax
  42d575:	mov    rax,QWORD PTR [rbp-0x8]
  42d579:	mov    QWORD PTR [rax+0x28],rdx
  42d57d:	nop
  42d57e:	leave  
  42d57f:	ret    

000000000042d580 <flatcc_json_printer_float@@Base>:
  42d580:	push   rbp
  42d581:	mov    rbp,rsp
  42d584:	sub    rsp,0x10
  42d588:	mov    QWORD PTR [rbp-0x8],rdi
  42d58c:	vmovss DWORD PTR [rbp-0xc],xmm0
  42d591:	mov    rax,QWORD PTR [rbp-0x8]
  42d595:	mov    rax,QWORD PTR [rax+0x28]
  42d599:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0xc]
  42d59e:	mov    rdi,rax
  42d5a1:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42d5a6:	mov    ecx,eax
  42d5a8:	mov    rax,QWORD PTR [rbp-0x8]
  42d5ac:	mov    rdx,QWORD PTR [rax+0x28]
  42d5b0:	movsxd rax,ecx
  42d5b3:	add    rdx,rax
  42d5b6:	mov    rax,QWORD PTR [rbp-0x8]
  42d5ba:	mov    QWORD PTR [rax+0x28],rdx
  42d5be:	nop
  42d5bf:	leave  
  42d5c0:	ret    

000000000042d5c1 <flatcc_json_printer_double@@Base>:
  42d5c1:	push   rbp
  42d5c2:	mov    rbp,rsp
  42d5c5:	sub    rsp,0x20
  42d5c9:	mov    QWORD PTR [rbp-0x8],rdi
  42d5cd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42d5d2:	mov    rax,QWORD PTR [rbp-0x8]
  42d5d6:	mov    rdx,QWORD PTR [rax+0x28]
  42d5da:	mov    rax,QWORD PTR [rbp-0x10]
  42d5de:	mov    rdi,rdx
  42d5e1:	mov    QWORD PTR [rbp-0x18],rax
  42d5e5:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42d5ea:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42d5ef:	mov    ecx,eax
  42d5f1:	mov    rax,QWORD PTR [rbp-0x8]
  42d5f5:	mov    rdx,QWORD PTR [rax+0x28]
  42d5f9:	movsxd rax,ecx
  42d5fc:	add    rdx,rax
  42d5ff:	mov    rax,QWORD PTR [rbp-0x8]
  42d603:	mov    QWORD PTR [rax+0x28],rdx
  42d607:	nop
  42d608:	leave  
  42d609:	ret    

000000000042d60a <flatcc_json_printer_enum@@Base>:
  42d60a:	push   rbp
  42d60b:	mov    rbp,rsp
  42d60e:	sub    rsp,0x20
  42d612:	mov    QWORD PTR [rbp-0x8],rdi
  42d616:	mov    QWORD PTR [rbp-0x10],rsi
  42d61a:	mov    DWORD PTR [rbp-0x14],edx
  42d61d:	mov    eax,DWORD PTR [rbp-0x14]
  42d620:	movsxd rdx,eax
  42d623:	mov    rcx,QWORD PTR [rbp-0x10]
  42d627:	mov    rax,QWORD PTR [rbp-0x8]
  42d62b:	mov    rsi,rcx
  42d62e:	mov    rdi,rax
  42d631:	call   42d1ea <flatcc_json_printer_get_level@@Base+0x11>
  42d636:	nop
  42d637:	leave  
  42d638:	ret    

000000000042d639 <flatcc_json_printer_delimit_enum_flags@@Base>:
  42d639:	push   rbp
  42d63a:	mov    rbp,rsp
  42d63d:	mov    QWORD PTR [rbp-0x18],rdi
  42d641:	mov    DWORD PTR [rbp-0x1c],esi
  42d644:	mov    rax,QWORD PTR [rbp-0x18]
  42d648:	movzx  eax,BYTE PTR [rax+0x32]
  42d64c:	test   al,al
  42d64e:	je     42d656 <flatcc_json_printer_delimit_enum_flags@@Base+0x1d>
  42d650:	cmp    DWORD PTR [rbp-0x1c],0x0
  42d654:	je     42d65d <flatcc_json_printer_delimit_enum_flags@@Base+0x24>
  42d656:	mov    eax,0x1
  42d65b:	jmp    42d662 <flatcc_json_printer_delimit_enum_flags@@Base+0x29>
  42d65d:	mov    eax,0x0
  42d662:	mov    DWORD PTR [rbp-0x4],eax
  42d665:	mov    rax,QWORD PTR [rbp-0x18]
  42d669:	mov    rax,QWORD PTR [rax+0x28]
  42d66d:	mov    BYTE PTR [rax],0x22
  42d670:	mov    rax,QWORD PTR [rbp-0x18]
  42d674:	mov    rdx,QWORD PTR [rax+0x28]
  42d678:	mov    eax,DWORD PTR [rbp-0x4]
  42d67b:	cdqe   
  42d67d:	add    rdx,rax
  42d680:	mov    rax,QWORD PTR [rbp-0x18]
  42d684:	mov    QWORD PTR [rax+0x28],rdx
  42d688:	nop
  42d689:	pop    rbp
  42d68a:	ret    

000000000042d68b <flatcc_json_printer_enum_flag@@Base>:
  42d68b:	push   rbp
  42d68c:	mov    rbp,rsp
  42d68f:	sub    rsp,0x20
  42d693:	mov    QWORD PTR [rbp-0x8],rdi
  42d697:	mov    DWORD PTR [rbp-0xc],esi
  42d69a:	mov    QWORD PTR [rbp-0x18],rdx
  42d69e:	mov    DWORD PTR [rbp-0x10],ecx
  42d6a1:	mov    rax,QWORD PTR [rbp-0x8]
  42d6a5:	mov    rax,QWORD PTR [rax+0x28]
  42d6a9:	mov    BYTE PTR [rax],0x20
  42d6ac:	mov    rax,QWORD PTR [rbp-0x8]
  42d6b0:	mov    rdx,QWORD PTR [rax+0x28]
  42d6b4:	cmp    DWORD PTR [rbp-0xc],0x0
  42d6b8:	setg   al
  42d6bb:	movzx  eax,al
  42d6be:	add    rdx,rax
  42d6c1:	mov    rax,QWORD PTR [rbp-0x8]
  42d6c5:	mov    QWORD PTR [rax+0x28],rdx
  42d6c9:	mov    eax,DWORD PTR [rbp-0x10]
  42d6cc:	movsxd rdx,eax
  42d6cf:	mov    rcx,QWORD PTR [rbp-0x18]
  42d6d3:	mov    rax,QWORD PTR [rbp-0x8]
  42d6d7:	mov    rsi,rcx
  42d6da:	mov    rdi,rax
  42d6dd:	call   42ca09 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42d6e2:	nop
  42d6e3:	leave  
  42d6e4:	ret    
  42d6e5:	push   rbp
  42d6e6:	mov    rbp,rsp
  42d6e9:	sub    rsp,0x20
  42d6ed:	mov    QWORD PTR [rbp-0x18],rdi
  42d6f1:	mov    QWORD PTR [rbp-0x20],rsi
  42d6f5:	mov    rax,QWORD PTR [rbp-0x20]
  42d6f9:	mov    rdi,rax
  42d6fc:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42d701:	mov    eax,eax
  42d703:	mov    QWORD PTR [rbp-0x10],rax
  42d707:	mov    rax,QWORD PTR [rbp-0x20]
  42d70b:	add    rax,0x4
  42d70f:	mov    QWORD PTR [rbp-0x8],rax
  42d713:	mov    rdx,QWORD PTR [rbp-0x10]
  42d717:	mov    rcx,QWORD PTR [rbp-0x8]
  42d71b:	mov    rax,QWORD PTR [rbp-0x18]
  42d71f:	mov    rsi,rcx
  42d722:	mov    rdi,rax
  42d725:	call   42ca87 <flatcc_json_printer_fmt_bool@@Base+0x1e3>
  42d72a:	nop
  42d72b:	leave  
  42d72c:	ret    
  42d72d:	push   rbp
  42d72e:	mov    rbp,rsp
  42d731:	sub    rsp,0x50
  42d735:	mov    QWORD PTR [rbp-0x38],rdi
  42d739:	mov    QWORD PTR [rbp-0x40],rsi
  42d73d:	mov    DWORD PTR [rbp-0x44],edx
  42d740:	mov    QWORD PTR [rbp-0x50],rcx
  42d744:	mov    rax,QWORD PTR fs:0x28
  42d74d:	mov    QWORD PTR [rbp-0x8],rax
  42d751:	xor    eax,eax
  42d753:	sub    DWORD PTR [rbp-0x44],0x1
  42d757:	cmp    DWORD PTR [rbp-0x44],0x0
  42d75b:	jne    42d773 <flatcc_json_printer_enum_flag@@Base+0xe8>
  42d75d:	mov    rax,QWORD PTR [rbp-0x38]
  42d761:	mov    esi,0x2
  42d766:	mov    rdi,rax
  42d769:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  42d76e:	jmp    42d84c <flatcc_json_printer_enum_flag@@Base+0x1c1>
  42d773:	mov    rax,QWORD PTR [rbp-0x38]
  42d777:	mov    eax,DWORD PTR [rax+0x38]
  42d77a:	lea    edx,[rax+0x1]
  42d77d:	mov    rax,QWORD PTR [rbp-0x38]
  42d781:	mov    DWORD PTR [rax+0x38],edx
  42d784:	mov    rax,QWORD PTR [rbp-0x38]
  42d788:	mov    rax,QWORD PTR [rax+0x28]
  42d78c:	lea    rcx,[rax+0x1]
  42d790:	mov    rdx,QWORD PTR [rbp-0x38]
  42d794:	mov    QWORD PTR [rdx+0x28],rcx
  42d798:	mov    BYTE PTR [rax],0x7b
  42d79b:	mov    DWORD PTR [rbp-0x18],0x0
  42d7a2:	mov    eax,DWORD PTR [rbp-0x44]
  42d7a5:	mov    DWORD PTR [rbp-0x1c],eax
  42d7a8:	mov    rax,QWORD PTR [rbp-0x40]
  42d7ac:	mov    QWORD PTR [rbp-0x30],rax
  42d7b0:	mov    rax,QWORD PTR [rbp-0x40]
  42d7b4:	mov    rdi,rax
  42d7b7:	call   42953d <flatcc_json_parser_struct_as_root@@Base+0x394>
  42d7bc:	cdqe   
  42d7be:	neg    rax
  42d7c1:	mov    rdx,rax
  42d7c4:	mov    rax,QWORD PTR [rbp-0x40]
  42d7c8:	add    rax,rdx
  42d7cb:	mov    QWORD PTR [rbp-0x28],rax
  42d7cf:	mov    rax,QWORD PTR [rbp-0x28]
  42d7d3:	mov    rdi,rax
  42d7d6:	call   429568 <flatcc_json_parser_struct_as_root@@Base+0x3bf>
  42d7db:	movzx  eax,ax
  42d7de:	mov    DWORD PTR [rbp-0x20],eax
  42d7e1:	lea    rcx,[rbp-0x30]
  42d7e5:	mov    rdx,QWORD PTR [rbp-0x38]
  42d7e9:	mov    rax,QWORD PTR [rbp-0x50]
  42d7ed:	mov    rsi,rcx
  42d7f0:	mov    rdi,rdx
  42d7f3:	call   rax
  42d7f5:	mov    rax,QWORD PTR [rbp-0x38]
  42d7f9:	movzx  eax,BYTE PTR [rax+0x31]
  42d7fd:	test   al,al
  42d7ff:	je     42d835 <flatcc_json_printer_enum_flag@@Base+0x1aa>
  42d801:	mov    rax,QWORD PTR [rbp-0x38]
  42d805:	mov    rax,QWORD PTR [rax+0x28]
  42d809:	lea    rcx,[rax+0x1]
  42d80d:	mov    rdx,QWORD PTR [rbp-0x38]
  42d811:	mov    QWORD PTR [rdx+0x28],rcx
  42d815:	mov    BYTE PTR [rax],0xa
  42d818:	mov    rax,QWORD PTR [rbp-0x38]
  42d81c:	mov    eax,DWORD PTR [rax+0x38]
  42d81f:	lea    edx,[rax-0x1]
  42d822:	mov    rax,QWORD PTR [rbp-0x38]
  42d826:	mov    DWORD PTR [rax+0x38],edx
  42d829:	mov    rax,QWORD PTR [rbp-0x38]
  42d82d:	mov    rdi,rax
  42d830:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42d835:	mov    rax,QWORD PTR [rbp-0x38]
  42d839:	mov    rax,QWORD PTR [rax+0x28]
  42d83d:	lea    rcx,[rax+0x1]
  42d841:	mov    rdx,QWORD PTR [rbp-0x38]
  42d845:	mov    QWORD PTR [rdx+0x28],rcx
  42d849:	mov    BYTE PTR [rax],0x7d
  42d84c:	mov    rax,QWORD PTR [rbp-0x8]
  42d850:	xor    rax,QWORD PTR fs:0x28
  42d859:	je     42d860 <flatcc_json_printer_enum_flag@@Base+0x1d5>
  42d85b:	call   405070 <__stack_chk_fail@plt>
  42d860:	leave  
  42d861:	ret    

000000000042d862 <flatcc_json_printer_string_field@@Base>:
  42d862:	push   rbp
  42d863:	mov    rbp,rsp
  42d866:	sub    rsp,0x30
  42d86a:	mov    QWORD PTR [rbp-0x18],rdi
  42d86e:	mov    QWORD PTR [rbp-0x20],rsi
  42d872:	mov    DWORD PTR [rbp-0x24],edx
  42d875:	mov    QWORD PTR [rbp-0x30],rcx
  42d879:	mov    DWORD PTR [rbp-0x28],r8d
  42d87d:	mov    edx,DWORD PTR [rbp-0x24]
  42d880:	mov    rax,QWORD PTR [rbp-0x20]
  42d884:	mov    esi,edx
  42d886:	mov    rdi,rax
  42d889:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42d88e:	mov    QWORD PTR [rbp-0x8],rax
  42d892:	cmp    QWORD PTR [rbp-0x8],0x0
  42d897:	je     42d8fc <flatcc_json_printer_string_field@@Base+0x9a>
  42d899:	mov    rax,QWORD PTR [rbp-0x20]
  42d89d:	mov    eax,DWORD PTR [rax+0x18]
  42d8a0:	lea    ecx,[rax+0x1]
  42d8a3:	mov    rdx,QWORD PTR [rbp-0x20]
  42d8a7:	mov    DWORD PTR [rdx+0x18],ecx
  42d8aa:	test   eax,eax
  42d8ac:	je     42d8c5 <flatcc_json_printer_string_field@@Base+0x63>
  42d8ae:	mov    rax,QWORD PTR [rbp-0x18]
  42d8b2:	mov    rax,QWORD PTR [rax+0x28]
  42d8b6:	lea    rcx,[rax+0x1]
  42d8ba:	mov    rdx,QWORD PTR [rbp-0x18]
  42d8be:	mov    QWORD PTR [rdx+0x28],rcx
  42d8c2:	mov    BYTE PTR [rax],0x2c
  42d8c5:	mov    eax,DWORD PTR [rbp-0x28]
  42d8c8:	movsxd rdx,eax
  42d8cb:	mov    rcx,QWORD PTR [rbp-0x30]
  42d8cf:	mov    rax,QWORD PTR [rbp-0x18]
  42d8d3:	mov    rsi,rcx
  42d8d6:	mov    rdi,rax
  42d8d9:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42d8de:	mov    rax,QWORD PTR [rbp-0x8]
  42d8e2:	mov    rdi,rax
  42d8e5:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  42d8ea:	mov    rdx,rax
  42d8ed:	mov    rax,QWORD PTR [rbp-0x18]
  42d8f1:	mov    rsi,rdx
  42d8f4:	mov    rdi,rax
  42d8f7:	call   42d6e5 <flatcc_json_printer_enum_flag@@Base+0x5a>
  42d8fc:	nop
  42d8fd:	leave  
  42d8fe:	ret    

000000000042d8ff <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  42d8ff:	push   rbp
  42d900:	mov    rbp,rsp
  42d903:	sub    rsp,0x40
  42d907:	mov    QWORD PTR [rbp-0x18],rdi
  42d90b:	mov    QWORD PTR [rbp-0x20],rsi
  42d90f:	mov    DWORD PTR [rbp-0x24],edx
  42d912:	mov    QWORD PTR [rbp-0x30],rcx
  42d916:	mov    DWORD PTR [rbp-0x28],r8d
  42d91a:	mov    DWORD PTR [rbp-0x34],r9d
  42d91e:	mov    edx,DWORD PTR [rbp-0x24]
  42d921:	mov    rax,QWORD PTR [rbp-0x20]
  42d925:	mov    esi,edx
  42d927:	mov    rdi,rax
  42d92a:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42d92f:	mov    QWORD PTR [rbp-0x8],rax
  42d933:	cmp    DWORD PTR [rbp-0x34],0x0
  42d937:	setne  al
  42d93a:	movzx  eax,al
  42d93d:	mov    DWORD PTR [rbp-0xc],eax
  42d940:	or     DWORD PTR [rbp-0xc],0x80
  42d947:	cmp    QWORD PTR [rbp-0x8],0x0
  42d94c:	je     42d9b4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb5>
  42d94e:	mov    rax,QWORD PTR [rbp-0x20]
  42d952:	mov    eax,DWORD PTR [rax+0x18]
  42d955:	lea    ecx,[rax+0x1]
  42d958:	mov    rdx,QWORD PTR [rbp-0x20]
  42d95c:	mov    DWORD PTR [rdx+0x18],ecx
  42d95f:	test   eax,eax
  42d961:	je     42d97a <flatcc_json_printer_uint8_vector_base64_field@@Base+0x7b>
  42d963:	mov    rax,QWORD PTR [rbp-0x18]
  42d967:	mov    rax,QWORD PTR [rax+0x28]
  42d96b:	lea    rcx,[rax+0x1]
  42d96f:	mov    rdx,QWORD PTR [rbp-0x18]
  42d973:	mov    QWORD PTR [rdx+0x28],rcx
  42d977:	mov    BYTE PTR [rax],0x2c
  42d97a:	mov    eax,DWORD PTR [rbp-0x28]
  42d97d:	movsxd rdx,eax
  42d980:	mov    rcx,QWORD PTR [rbp-0x30]
  42d984:	mov    rax,QWORD PTR [rbp-0x18]
  42d988:	mov    rsi,rcx
  42d98b:	mov    rdi,rax
  42d98e:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42d993:	mov    rax,QWORD PTR [rbp-0x8]
  42d997:	mov    rdi,rax
  42d99a:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  42d99f:	mov    rcx,rax
  42d9a2:	mov    edx,DWORD PTR [rbp-0xc]
  42d9a5:	mov    rax,QWORD PTR [rbp-0x18]
  42d9a9:	mov    rsi,rcx
  42d9ac:	mov    rdi,rax
  42d9af:	call   42cd2f <flatcc_json_printer_fmt_bool@@Base+0x48b>
  42d9b4:	nop
  42d9b5:	leave  
  42d9b6:	ret    

000000000042d9b7 <flatcc_json_printer_uint8_field@@Base>:
  42d9b7:	push   rbp
  42d9b8:	mov    rbp,rsp
  42d9bb:	sub    rsp,0x40
  42d9bf:	mov    QWORD PTR [rbp-0x18],rdi
  42d9c3:	mov    QWORD PTR [rbp-0x20],rsi
  42d9c7:	mov    DWORD PTR [rbp-0x24],edx
  42d9ca:	mov    QWORD PTR [rbp-0x30],rcx
  42d9ce:	mov    DWORD PTR [rbp-0x28],r8d
  42d9d2:	mov    eax,r9d
  42d9d5:	mov    BYTE PTR [rbp-0x34],al
  42d9d8:	mov    edx,DWORD PTR [rbp-0x24]
  42d9db:	mov    rax,QWORD PTR [rbp-0x20]
  42d9df:	mov    esi,edx
  42d9e1:	mov    rdi,rax
  42d9e4:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42d9e9:	mov    QWORD PTR [rbp-0x8],rax
  42d9ed:	cmp    QWORD PTR [rbp-0x8],0x0
  42d9f2:	je     42da1d <flatcc_json_printer_uint8_field@@Base+0x66>
  42d9f4:	mov    rax,QWORD PTR [rbp-0x8]
  42d9f8:	mov    rdi,rax
  42d9fb:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  42da00:	mov    BYTE PTR [rbp-0x9],al
  42da03:	movzx  eax,BYTE PTR [rbp-0x9]
  42da07:	cmp    al,BYTE PTR [rbp-0x34]
  42da0a:	jne    42da30 <flatcc_json_printer_uint8_field@@Base+0x79>
  42da0c:	mov    rax,QWORD PTR [rbp-0x18]
  42da10:	movzx  eax,BYTE PTR [rax+0x34]
  42da14:	test   al,al
  42da16:	je     42da30 <flatcc_json_printer_uint8_field@@Base+0x79>
  42da18:	jmp    42daa6 <flatcc_json_printer_uint8_field@@Base+0xef>
  42da1d:	mov    rax,QWORD PTR [rbp-0x18]
  42da21:	movzx  eax,BYTE PTR [rax+0x35]
  42da25:	test   al,al
  42da27:	je     42daa5 <flatcc_json_printer_uint8_field@@Base+0xee>
  42da29:	movzx  eax,BYTE PTR [rbp-0x34]
  42da2d:	mov    BYTE PTR [rbp-0x9],al
  42da30:	mov    rax,QWORD PTR [rbp-0x20]
  42da34:	mov    eax,DWORD PTR [rax+0x18]
  42da37:	lea    ecx,[rax+0x1]
  42da3a:	mov    rdx,QWORD PTR [rbp-0x20]
  42da3e:	mov    DWORD PTR [rdx+0x18],ecx
  42da41:	test   eax,eax
  42da43:	je     42da5c <flatcc_json_printer_uint8_field@@Base+0xa5>
  42da45:	mov    rax,QWORD PTR [rbp-0x18]
  42da49:	mov    rax,QWORD PTR [rax+0x28]
  42da4d:	lea    rcx,[rax+0x1]
  42da51:	mov    rdx,QWORD PTR [rbp-0x18]
  42da55:	mov    QWORD PTR [rdx+0x28],rcx
  42da59:	mov    BYTE PTR [rax],0x2c
  42da5c:	mov    eax,DWORD PTR [rbp-0x28]
  42da5f:	movsxd rdx,eax
  42da62:	mov    rcx,QWORD PTR [rbp-0x30]
  42da66:	mov    rax,QWORD PTR [rbp-0x18]
  42da6a:	mov    rsi,rcx
  42da6d:	mov    rdi,rax
  42da70:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42da75:	mov    rax,QWORD PTR [rbp-0x18]
  42da79:	mov    rdx,QWORD PTR [rax+0x28]
  42da7d:	movzx  eax,BYTE PTR [rbp-0x9]
  42da81:	mov    rsi,rdx
  42da84:	mov    edi,eax
  42da86:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42da8b:	mov    ecx,eax
  42da8d:	mov    rax,QWORD PTR [rbp-0x18]
  42da91:	mov    rdx,QWORD PTR [rax+0x28]
  42da95:	movsxd rax,ecx
  42da98:	add    rdx,rax
  42da9b:	mov    rax,QWORD PTR [rbp-0x18]
  42da9f:	mov    QWORD PTR [rax+0x28],rdx
  42daa3:	jmp    42daa6 <flatcc_json_printer_uint8_field@@Base+0xef>
  42daa5:	nop
  42daa6:	leave  
  42daa7:	ret    

000000000042daa8 <flatcc_json_printer_uint16_field@@Base>:
  42daa8:	push   rbp
  42daa9:	mov    rbp,rsp
  42daac:	sub    rsp,0x40
  42dab0:	mov    QWORD PTR [rbp-0x18],rdi
  42dab4:	mov    QWORD PTR [rbp-0x20],rsi
  42dab8:	mov    DWORD PTR [rbp-0x24],edx
  42dabb:	mov    QWORD PTR [rbp-0x30],rcx
  42dabf:	mov    DWORD PTR [rbp-0x28],r8d
  42dac3:	mov    eax,r9d
  42dac6:	mov    WORD PTR [rbp-0x34],ax
  42daca:	mov    edx,DWORD PTR [rbp-0x24]
  42dacd:	mov    rax,QWORD PTR [rbp-0x20]
  42dad1:	mov    esi,edx
  42dad3:	mov    rdi,rax
  42dad6:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42dadb:	mov    QWORD PTR [rbp-0x8],rax
  42dadf:	cmp    QWORD PTR [rbp-0x8],0x0
  42dae4:	je     42db11 <flatcc_json_printer_uint16_field@@Base+0x69>
  42dae6:	mov    rax,QWORD PTR [rbp-0x8]
  42daea:	mov    rdi,rax
  42daed:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  42daf2:	mov    WORD PTR [rbp-0xa],ax
  42daf6:	movzx  eax,WORD PTR [rbp-0xa]
  42dafa:	cmp    ax,WORD PTR [rbp-0x34]
  42dafe:	jne    42db25 <flatcc_json_printer_uint16_field@@Base+0x7d>
  42db00:	mov    rax,QWORD PTR [rbp-0x18]
  42db04:	movzx  eax,BYTE PTR [rax+0x34]
  42db08:	test   al,al
  42db0a:	je     42db25 <flatcc_json_printer_uint16_field@@Base+0x7d>
  42db0c:	jmp    42db9b <flatcc_json_printer_uint16_field@@Base+0xf3>
  42db11:	mov    rax,QWORD PTR [rbp-0x18]
  42db15:	movzx  eax,BYTE PTR [rax+0x35]
  42db19:	test   al,al
  42db1b:	je     42db9a <flatcc_json_printer_uint16_field@@Base+0xf2>
  42db1d:	movzx  eax,WORD PTR [rbp-0x34]
  42db21:	mov    WORD PTR [rbp-0xa],ax
  42db25:	mov    rax,QWORD PTR [rbp-0x20]
  42db29:	mov    eax,DWORD PTR [rax+0x18]
  42db2c:	lea    ecx,[rax+0x1]
  42db2f:	mov    rdx,QWORD PTR [rbp-0x20]
  42db33:	mov    DWORD PTR [rdx+0x18],ecx
  42db36:	test   eax,eax
  42db38:	je     42db51 <flatcc_json_printer_uint16_field@@Base+0xa9>
  42db3a:	mov    rax,QWORD PTR [rbp-0x18]
  42db3e:	mov    rax,QWORD PTR [rax+0x28]
  42db42:	lea    rcx,[rax+0x1]
  42db46:	mov    rdx,QWORD PTR [rbp-0x18]
  42db4a:	mov    QWORD PTR [rdx+0x28],rcx
  42db4e:	mov    BYTE PTR [rax],0x2c
  42db51:	mov    eax,DWORD PTR [rbp-0x28]
  42db54:	movsxd rdx,eax
  42db57:	mov    rcx,QWORD PTR [rbp-0x30]
  42db5b:	mov    rax,QWORD PTR [rbp-0x18]
  42db5f:	mov    rsi,rcx
  42db62:	mov    rdi,rax
  42db65:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42db6a:	mov    rax,QWORD PTR [rbp-0x18]
  42db6e:	mov    rdx,QWORD PTR [rax+0x28]
  42db72:	movzx  eax,WORD PTR [rbp-0xa]
  42db76:	mov    rsi,rdx
  42db79:	mov    edi,eax
  42db7b:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42db80:	mov    ecx,eax
  42db82:	mov    rax,QWORD PTR [rbp-0x18]
  42db86:	mov    rdx,QWORD PTR [rax+0x28]
  42db8a:	movsxd rax,ecx
  42db8d:	add    rdx,rax
  42db90:	mov    rax,QWORD PTR [rbp-0x18]
  42db94:	mov    QWORD PTR [rax+0x28],rdx
  42db98:	jmp    42db9b <flatcc_json_printer_uint16_field@@Base+0xf3>
  42db9a:	nop
  42db9b:	leave  
  42db9c:	ret    

000000000042db9d <flatcc_json_printer_uint32_field@@Base>:
  42db9d:	push   rbp
  42db9e:	mov    rbp,rsp
  42dba1:	sub    rsp,0x40
  42dba5:	mov    QWORD PTR [rbp-0x18],rdi
  42dba9:	mov    QWORD PTR [rbp-0x20],rsi
  42dbad:	mov    DWORD PTR [rbp-0x24],edx
  42dbb0:	mov    QWORD PTR [rbp-0x30],rcx
  42dbb4:	mov    DWORD PTR [rbp-0x28],r8d
  42dbb8:	mov    DWORD PTR [rbp-0x34],r9d
  42dbbc:	mov    edx,DWORD PTR [rbp-0x24]
  42dbbf:	mov    rax,QWORD PTR [rbp-0x20]
  42dbc3:	mov    esi,edx
  42dbc5:	mov    rdi,rax
  42dbc8:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42dbcd:	mov    QWORD PTR [rbp-0x8],rax
  42dbd1:	cmp    QWORD PTR [rbp-0x8],0x0
  42dbd6:	je     42dc00 <flatcc_json_printer_uint32_field@@Base+0x63>
  42dbd8:	mov    rax,QWORD PTR [rbp-0x8]
  42dbdc:	mov    rdi,rax
  42dbdf:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42dbe4:	mov    DWORD PTR [rbp-0xc],eax
  42dbe7:	mov    eax,DWORD PTR [rbp-0xc]
  42dbea:	cmp    eax,DWORD PTR [rbp-0x34]
  42dbed:	jne    42dc12 <flatcc_json_printer_uint32_field@@Base+0x75>
  42dbef:	mov    rax,QWORD PTR [rbp-0x18]
  42dbf3:	movzx  eax,BYTE PTR [rax+0x34]
  42dbf7:	test   al,al
  42dbf9:	je     42dc12 <flatcc_json_printer_uint32_field@@Base+0x75>
  42dbfb:	jmp    42dc87 <flatcc_json_printer_uint32_field@@Base+0xea>
  42dc00:	mov    rax,QWORD PTR [rbp-0x18]
  42dc04:	movzx  eax,BYTE PTR [rax+0x35]
  42dc08:	test   al,al
  42dc0a:	je     42dc86 <flatcc_json_printer_uint32_field@@Base+0xe9>
  42dc0c:	mov    eax,DWORD PTR [rbp-0x34]
  42dc0f:	mov    DWORD PTR [rbp-0xc],eax
  42dc12:	mov    rax,QWORD PTR [rbp-0x20]
  42dc16:	mov    eax,DWORD PTR [rax+0x18]
  42dc19:	lea    ecx,[rax+0x1]
  42dc1c:	mov    rdx,QWORD PTR [rbp-0x20]
  42dc20:	mov    DWORD PTR [rdx+0x18],ecx
  42dc23:	test   eax,eax
  42dc25:	je     42dc3e <flatcc_json_printer_uint32_field@@Base+0xa1>
  42dc27:	mov    rax,QWORD PTR [rbp-0x18]
  42dc2b:	mov    rax,QWORD PTR [rax+0x28]
  42dc2f:	lea    rcx,[rax+0x1]
  42dc33:	mov    rdx,QWORD PTR [rbp-0x18]
  42dc37:	mov    QWORD PTR [rdx+0x28],rcx
  42dc3b:	mov    BYTE PTR [rax],0x2c
  42dc3e:	mov    eax,DWORD PTR [rbp-0x28]
  42dc41:	movsxd rdx,eax
  42dc44:	mov    rcx,QWORD PTR [rbp-0x30]
  42dc48:	mov    rax,QWORD PTR [rbp-0x18]
  42dc4c:	mov    rsi,rcx
  42dc4f:	mov    rdi,rax
  42dc52:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42dc57:	mov    rax,QWORD PTR [rbp-0x18]
  42dc5b:	mov    rdx,QWORD PTR [rax+0x28]
  42dc5f:	mov    eax,DWORD PTR [rbp-0xc]
  42dc62:	mov    rsi,rdx
  42dc65:	mov    edi,eax
  42dc67:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42dc6c:	mov    ecx,eax
  42dc6e:	mov    rax,QWORD PTR [rbp-0x18]
  42dc72:	mov    rdx,QWORD PTR [rax+0x28]
  42dc76:	movsxd rax,ecx
  42dc79:	add    rdx,rax
  42dc7c:	mov    rax,QWORD PTR [rbp-0x18]
  42dc80:	mov    QWORD PTR [rax+0x28],rdx
  42dc84:	jmp    42dc87 <flatcc_json_printer_uint32_field@@Base+0xea>
  42dc86:	nop
  42dc87:	leave  
  42dc88:	ret    

000000000042dc89 <flatcc_json_printer_uint64_field@@Base>:
  42dc89:	push   rbp
  42dc8a:	mov    rbp,rsp
  42dc8d:	sub    rsp,0x40
  42dc91:	mov    QWORD PTR [rbp-0x18],rdi
  42dc95:	mov    QWORD PTR [rbp-0x20],rsi
  42dc99:	mov    DWORD PTR [rbp-0x24],edx
  42dc9c:	mov    QWORD PTR [rbp-0x30],rcx
  42dca0:	mov    DWORD PTR [rbp-0x28],r8d
  42dca4:	mov    QWORD PTR [rbp-0x38],r9
  42dca8:	mov    edx,DWORD PTR [rbp-0x24]
  42dcab:	mov    rax,QWORD PTR [rbp-0x20]
  42dcaf:	mov    esi,edx
  42dcb1:	mov    rdi,rax
  42dcb4:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42dcb9:	mov    QWORD PTR [rbp-0x8],rax
  42dcbd:	cmp    QWORD PTR [rbp-0x8],0x0
  42dcc2:	je     42dcef <flatcc_json_printer_uint64_field@@Base+0x66>
  42dcc4:	mov    rax,QWORD PTR [rbp-0x8]
  42dcc8:	mov    rdi,rax
  42dccb:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42dcd0:	mov    QWORD PTR [rbp-0x10],rax
  42dcd4:	mov    rax,QWORD PTR [rbp-0x10]
  42dcd8:	cmp    rax,QWORD PTR [rbp-0x38]
  42dcdc:	jne    42dd03 <flatcc_json_printer_uint64_field@@Base+0x7a>
  42dcde:	mov    rax,QWORD PTR [rbp-0x18]
  42dce2:	movzx  eax,BYTE PTR [rax+0x34]
  42dce6:	test   al,al
  42dce8:	je     42dd03 <flatcc_json_printer_uint64_field@@Base+0x7a>
  42dcea:	jmp    42dd7a <flatcc_json_printer_uint64_field@@Base+0xf1>
  42dcef:	mov    rax,QWORD PTR [rbp-0x18]
  42dcf3:	movzx  eax,BYTE PTR [rax+0x35]
  42dcf7:	test   al,al
  42dcf9:	je     42dd79 <flatcc_json_printer_uint64_field@@Base+0xf0>
  42dcfb:	mov    rax,QWORD PTR [rbp-0x38]
  42dcff:	mov    QWORD PTR [rbp-0x10],rax
  42dd03:	mov    rax,QWORD PTR [rbp-0x20]
  42dd07:	mov    eax,DWORD PTR [rax+0x18]
  42dd0a:	lea    ecx,[rax+0x1]
  42dd0d:	mov    rdx,QWORD PTR [rbp-0x20]
  42dd11:	mov    DWORD PTR [rdx+0x18],ecx
  42dd14:	test   eax,eax
  42dd16:	je     42dd2f <flatcc_json_printer_uint64_field@@Base+0xa6>
  42dd18:	mov    rax,QWORD PTR [rbp-0x18]
  42dd1c:	mov    rax,QWORD PTR [rax+0x28]
  42dd20:	lea    rcx,[rax+0x1]
  42dd24:	mov    rdx,QWORD PTR [rbp-0x18]
  42dd28:	mov    QWORD PTR [rdx+0x28],rcx
  42dd2c:	mov    BYTE PTR [rax],0x2c
  42dd2f:	mov    eax,DWORD PTR [rbp-0x28]
  42dd32:	movsxd rdx,eax
  42dd35:	mov    rcx,QWORD PTR [rbp-0x30]
  42dd39:	mov    rax,QWORD PTR [rbp-0x18]
  42dd3d:	mov    rsi,rcx
  42dd40:	mov    rdi,rax
  42dd43:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42dd48:	mov    rax,QWORD PTR [rbp-0x18]
  42dd4c:	mov    rdx,QWORD PTR [rax+0x28]
  42dd50:	mov    rax,QWORD PTR [rbp-0x10]
  42dd54:	mov    rsi,rdx
  42dd57:	mov    rdi,rax
  42dd5a:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42dd5f:	mov    ecx,eax
  42dd61:	mov    rax,QWORD PTR [rbp-0x18]
  42dd65:	mov    rdx,QWORD PTR [rax+0x28]
  42dd69:	movsxd rax,ecx
  42dd6c:	add    rdx,rax
  42dd6f:	mov    rax,QWORD PTR [rbp-0x18]
  42dd73:	mov    QWORD PTR [rax+0x28],rdx
  42dd77:	jmp    42dd7a <flatcc_json_printer_uint64_field@@Base+0xf1>
  42dd79:	nop
  42dd7a:	leave  
  42dd7b:	ret    

000000000042dd7c <flatcc_json_printer_int8_field@@Base>:
  42dd7c:	push   rbp
  42dd7d:	mov    rbp,rsp
  42dd80:	sub    rsp,0x40
  42dd84:	mov    QWORD PTR [rbp-0x18],rdi
  42dd88:	mov    QWORD PTR [rbp-0x20],rsi
  42dd8c:	mov    DWORD PTR [rbp-0x24],edx
  42dd8f:	mov    QWORD PTR [rbp-0x30],rcx
  42dd93:	mov    DWORD PTR [rbp-0x28],r8d
  42dd97:	mov    eax,r9d
  42dd9a:	mov    BYTE PTR [rbp-0x34],al
  42dd9d:	mov    edx,DWORD PTR [rbp-0x24]
  42dda0:	mov    rax,QWORD PTR [rbp-0x20]
  42dda4:	mov    esi,edx
  42dda6:	mov    rdi,rax
  42dda9:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42ddae:	mov    QWORD PTR [rbp-0x8],rax
  42ddb2:	cmp    QWORD PTR [rbp-0x8],0x0
  42ddb7:	je     42dde2 <flatcc_json_printer_int8_field@@Base+0x66>
  42ddb9:	mov    rax,QWORD PTR [rbp-0x8]
  42ddbd:	mov    rdi,rax
  42ddc0:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  42ddc5:	mov    BYTE PTR [rbp-0x9],al
  42ddc8:	movzx  eax,BYTE PTR [rbp-0x9]
  42ddcc:	cmp    al,BYTE PTR [rbp-0x34]
  42ddcf:	jne    42ddf5 <flatcc_json_printer_int8_field@@Base+0x79>
  42ddd1:	mov    rax,QWORD PTR [rbp-0x18]
  42ddd5:	movzx  eax,BYTE PTR [rax+0x34]
  42ddd9:	test   al,al
  42dddb:	je     42ddf5 <flatcc_json_printer_int8_field@@Base+0x79>
  42dddd:	jmp    42de6b <flatcc_json_printer_int8_field@@Base+0xef>
  42dde2:	mov    rax,QWORD PTR [rbp-0x18]
  42dde6:	movzx  eax,BYTE PTR [rax+0x35]
  42ddea:	test   al,al
  42ddec:	je     42de6a <flatcc_json_printer_int8_field@@Base+0xee>
  42ddee:	movzx  eax,BYTE PTR [rbp-0x34]
  42ddf2:	mov    BYTE PTR [rbp-0x9],al
  42ddf5:	mov    rax,QWORD PTR [rbp-0x20]
  42ddf9:	mov    eax,DWORD PTR [rax+0x18]
  42ddfc:	lea    ecx,[rax+0x1]
  42ddff:	mov    rdx,QWORD PTR [rbp-0x20]
  42de03:	mov    DWORD PTR [rdx+0x18],ecx
  42de06:	test   eax,eax
  42de08:	je     42de21 <flatcc_json_printer_int8_field@@Base+0xa5>
  42de0a:	mov    rax,QWORD PTR [rbp-0x18]
  42de0e:	mov    rax,QWORD PTR [rax+0x28]
  42de12:	lea    rcx,[rax+0x1]
  42de16:	mov    rdx,QWORD PTR [rbp-0x18]
  42de1a:	mov    QWORD PTR [rdx+0x28],rcx
  42de1e:	mov    BYTE PTR [rax],0x2c
  42de21:	mov    eax,DWORD PTR [rbp-0x28]
  42de24:	movsxd rdx,eax
  42de27:	mov    rcx,QWORD PTR [rbp-0x30]
  42de2b:	mov    rax,QWORD PTR [rbp-0x18]
  42de2f:	mov    rsi,rcx
  42de32:	mov    rdi,rax
  42de35:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42de3a:	mov    rax,QWORD PTR [rbp-0x18]
  42de3e:	mov    rdx,QWORD PTR [rax+0x28]
  42de42:	movsx  eax,BYTE PTR [rbp-0x9]
  42de46:	mov    rsi,rdx
  42de49:	mov    edi,eax
  42de4b:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42de50:	mov    ecx,eax
  42de52:	mov    rax,QWORD PTR [rbp-0x18]
  42de56:	mov    rdx,QWORD PTR [rax+0x28]
  42de5a:	movsxd rax,ecx
  42de5d:	add    rdx,rax
  42de60:	mov    rax,QWORD PTR [rbp-0x18]
  42de64:	mov    QWORD PTR [rax+0x28],rdx
  42de68:	jmp    42de6b <flatcc_json_printer_int8_field@@Base+0xef>
  42de6a:	nop
  42de6b:	leave  
  42de6c:	ret    

000000000042de6d <flatcc_json_printer_int16_field@@Base>:
  42de6d:	push   rbp
  42de6e:	mov    rbp,rsp
  42de71:	sub    rsp,0x40
  42de75:	mov    QWORD PTR [rbp-0x18],rdi
  42de79:	mov    QWORD PTR [rbp-0x20],rsi
  42de7d:	mov    DWORD PTR [rbp-0x24],edx
  42de80:	mov    QWORD PTR [rbp-0x30],rcx
  42de84:	mov    DWORD PTR [rbp-0x28],r8d
  42de88:	mov    eax,r9d
  42de8b:	mov    WORD PTR [rbp-0x34],ax
  42de8f:	mov    edx,DWORD PTR [rbp-0x24]
  42de92:	mov    rax,QWORD PTR [rbp-0x20]
  42de96:	mov    esi,edx
  42de98:	mov    rdi,rax
  42de9b:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42dea0:	mov    QWORD PTR [rbp-0x8],rax
  42dea4:	cmp    QWORD PTR [rbp-0x8],0x0
  42dea9:	je     42ded6 <flatcc_json_printer_int16_field@@Base+0x69>
  42deab:	mov    rax,QWORD PTR [rbp-0x8]
  42deaf:	mov    rdi,rax
  42deb2:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42deb7:	mov    WORD PTR [rbp-0xa],ax
  42debb:	movzx  eax,WORD PTR [rbp-0xa]
  42debf:	cmp    ax,WORD PTR [rbp-0x34]
  42dec3:	jne    42deea <flatcc_json_printer_int16_field@@Base+0x7d>
  42dec5:	mov    rax,QWORD PTR [rbp-0x18]
  42dec9:	movzx  eax,BYTE PTR [rax+0x34]
  42decd:	test   al,al
  42decf:	je     42deea <flatcc_json_printer_int16_field@@Base+0x7d>
  42ded1:	jmp    42df60 <flatcc_json_printer_int16_field@@Base+0xf3>
  42ded6:	mov    rax,QWORD PTR [rbp-0x18]
  42deda:	movzx  eax,BYTE PTR [rax+0x35]
  42dede:	test   al,al
  42dee0:	je     42df5f <flatcc_json_printer_int16_field@@Base+0xf2>
  42dee2:	movzx  eax,WORD PTR [rbp-0x34]
  42dee6:	mov    WORD PTR [rbp-0xa],ax
  42deea:	mov    rax,QWORD PTR [rbp-0x20]
  42deee:	mov    eax,DWORD PTR [rax+0x18]
  42def1:	lea    ecx,[rax+0x1]
  42def4:	mov    rdx,QWORD PTR [rbp-0x20]
  42def8:	mov    DWORD PTR [rdx+0x18],ecx
  42defb:	test   eax,eax
  42defd:	je     42df16 <flatcc_json_printer_int16_field@@Base+0xa9>
  42deff:	mov    rax,QWORD PTR [rbp-0x18]
  42df03:	mov    rax,QWORD PTR [rax+0x28]
  42df07:	lea    rcx,[rax+0x1]
  42df0b:	mov    rdx,QWORD PTR [rbp-0x18]
  42df0f:	mov    QWORD PTR [rdx+0x28],rcx
  42df13:	mov    BYTE PTR [rax],0x2c
  42df16:	mov    eax,DWORD PTR [rbp-0x28]
  42df19:	movsxd rdx,eax
  42df1c:	mov    rcx,QWORD PTR [rbp-0x30]
  42df20:	mov    rax,QWORD PTR [rbp-0x18]
  42df24:	mov    rsi,rcx
  42df27:	mov    rdi,rax
  42df2a:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42df2f:	mov    rax,QWORD PTR [rbp-0x18]
  42df33:	mov    rdx,QWORD PTR [rax+0x28]
  42df37:	movsx  eax,WORD PTR [rbp-0xa]
  42df3b:	mov    rsi,rdx
  42df3e:	mov    edi,eax
  42df40:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42df45:	mov    ecx,eax
  42df47:	mov    rax,QWORD PTR [rbp-0x18]
  42df4b:	mov    rdx,QWORD PTR [rax+0x28]
  42df4f:	movsxd rax,ecx
  42df52:	add    rdx,rax
  42df55:	mov    rax,QWORD PTR [rbp-0x18]
  42df59:	mov    QWORD PTR [rax+0x28],rdx
  42df5d:	jmp    42df60 <flatcc_json_printer_int16_field@@Base+0xf3>
  42df5f:	nop
  42df60:	leave  
  42df61:	ret    

000000000042df62 <flatcc_json_printer_int32_field@@Base>:
  42df62:	push   rbp
  42df63:	mov    rbp,rsp
  42df66:	sub    rsp,0x40
  42df6a:	mov    QWORD PTR [rbp-0x18],rdi
  42df6e:	mov    QWORD PTR [rbp-0x20],rsi
  42df72:	mov    DWORD PTR [rbp-0x24],edx
  42df75:	mov    QWORD PTR [rbp-0x30],rcx
  42df79:	mov    DWORD PTR [rbp-0x28],r8d
  42df7d:	mov    DWORD PTR [rbp-0x34],r9d
  42df81:	mov    edx,DWORD PTR [rbp-0x24]
  42df84:	mov    rax,QWORD PTR [rbp-0x20]
  42df88:	mov    esi,edx
  42df8a:	mov    rdi,rax
  42df8d:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42df92:	mov    QWORD PTR [rbp-0x8],rax
  42df96:	cmp    QWORD PTR [rbp-0x8],0x0
  42df9b:	je     42dfc5 <flatcc_json_printer_int32_field@@Base+0x63>
  42df9d:	mov    rax,QWORD PTR [rbp-0x8]
  42dfa1:	mov    rdi,rax
  42dfa4:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42dfa9:	mov    DWORD PTR [rbp-0xc],eax
  42dfac:	mov    eax,DWORD PTR [rbp-0xc]
  42dfaf:	cmp    eax,DWORD PTR [rbp-0x34]
  42dfb2:	jne    42dfd7 <flatcc_json_printer_int32_field@@Base+0x75>
  42dfb4:	mov    rax,QWORD PTR [rbp-0x18]
  42dfb8:	movzx  eax,BYTE PTR [rax+0x34]
  42dfbc:	test   al,al
  42dfbe:	je     42dfd7 <flatcc_json_printer_int32_field@@Base+0x75>
  42dfc0:	jmp    42e04c <flatcc_json_printer_int32_field@@Base+0xea>
  42dfc5:	mov    rax,QWORD PTR [rbp-0x18]
  42dfc9:	movzx  eax,BYTE PTR [rax+0x35]
  42dfcd:	test   al,al
  42dfcf:	je     42e04b <flatcc_json_printer_int32_field@@Base+0xe9>
  42dfd1:	mov    eax,DWORD PTR [rbp-0x34]
  42dfd4:	mov    DWORD PTR [rbp-0xc],eax
  42dfd7:	mov    rax,QWORD PTR [rbp-0x20]
  42dfdb:	mov    eax,DWORD PTR [rax+0x18]
  42dfde:	lea    ecx,[rax+0x1]
  42dfe1:	mov    rdx,QWORD PTR [rbp-0x20]
  42dfe5:	mov    DWORD PTR [rdx+0x18],ecx
  42dfe8:	test   eax,eax
  42dfea:	je     42e003 <flatcc_json_printer_int32_field@@Base+0xa1>
  42dfec:	mov    rax,QWORD PTR [rbp-0x18]
  42dff0:	mov    rax,QWORD PTR [rax+0x28]
  42dff4:	lea    rcx,[rax+0x1]
  42dff8:	mov    rdx,QWORD PTR [rbp-0x18]
  42dffc:	mov    QWORD PTR [rdx+0x28],rcx
  42e000:	mov    BYTE PTR [rax],0x2c
  42e003:	mov    eax,DWORD PTR [rbp-0x28]
  42e006:	movsxd rdx,eax
  42e009:	mov    rcx,QWORD PTR [rbp-0x30]
  42e00d:	mov    rax,QWORD PTR [rbp-0x18]
  42e011:	mov    rsi,rcx
  42e014:	mov    rdi,rax
  42e017:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e01c:	mov    rax,QWORD PTR [rbp-0x18]
  42e020:	mov    rdx,QWORD PTR [rax+0x28]
  42e024:	mov    eax,DWORD PTR [rbp-0xc]
  42e027:	mov    rsi,rdx
  42e02a:	mov    edi,eax
  42e02c:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42e031:	mov    ecx,eax
  42e033:	mov    rax,QWORD PTR [rbp-0x18]
  42e037:	mov    rdx,QWORD PTR [rax+0x28]
  42e03b:	movsxd rax,ecx
  42e03e:	add    rdx,rax
  42e041:	mov    rax,QWORD PTR [rbp-0x18]
  42e045:	mov    QWORD PTR [rax+0x28],rdx
  42e049:	jmp    42e04c <flatcc_json_printer_int32_field@@Base+0xea>
  42e04b:	nop
  42e04c:	leave  
  42e04d:	ret    

000000000042e04e <flatcc_json_printer_int64_field@@Base>:
  42e04e:	push   rbp
  42e04f:	mov    rbp,rsp
  42e052:	sub    rsp,0x40
  42e056:	mov    QWORD PTR [rbp-0x18],rdi
  42e05a:	mov    QWORD PTR [rbp-0x20],rsi
  42e05e:	mov    DWORD PTR [rbp-0x24],edx
  42e061:	mov    QWORD PTR [rbp-0x30],rcx
  42e065:	mov    DWORD PTR [rbp-0x28],r8d
  42e069:	mov    QWORD PTR [rbp-0x38],r9
  42e06d:	mov    edx,DWORD PTR [rbp-0x24]
  42e070:	mov    rax,QWORD PTR [rbp-0x20]
  42e074:	mov    esi,edx
  42e076:	mov    rdi,rax
  42e079:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e07e:	mov    QWORD PTR [rbp-0x8],rax
  42e082:	cmp    QWORD PTR [rbp-0x8],0x0
  42e087:	je     42e0b4 <flatcc_json_printer_int64_field@@Base+0x66>
  42e089:	mov    rax,QWORD PTR [rbp-0x8]
  42e08d:	mov    rdi,rax
  42e090:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  42e095:	mov    QWORD PTR [rbp-0x10],rax
  42e099:	mov    rax,QWORD PTR [rbp-0x10]
  42e09d:	cmp    rax,QWORD PTR [rbp-0x38]
  42e0a1:	jne    42e0c8 <flatcc_json_printer_int64_field@@Base+0x7a>
  42e0a3:	mov    rax,QWORD PTR [rbp-0x18]
  42e0a7:	movzx  eax,BYTE PTR [rax+0x34]
  42e0ab:	test   al,al
  42e0ad:	je     42e0c8 <flatcc_json_printer_int64_field@@Base+0x7a>
  42e0af:	jmp    42e13f <flatcc_json_printer_int64_field@@Base+0xf1>
  42e0b4:	mov    rax,QWORD PTR [rbp-0x18]
  42e0b8:	movzx  eax,BYTE PTR [rax+0x35]
  42e0bc:	test   al,al
  42e0be:	je     42e13e <flatcc_json_printer_int64_field@@Base+0xf0>
  42e0c0:	mov    rax,QWORD PTR [rbp-0x38]
  42e0c4:	mov    QWORD PTR [rbp-0x10],rax
  42e0c8:	mov    rax,QWORD PTR [rbp-0x20]
  42e0cc:	mov    eax,DWORD PTR [rax+0x18]
  42e0cf:	lea    ecx,[rax+0x1]
  42e0d2:	mov    rdx,QWORD PTR [rbp-0x20]
  42e0d6:	mov    DWORD PTR [rdx+0x18],ecx
  42e0d9:	test   eax,eax
  42e0db:	je     42e0f4 <flatcc_json_printer_int64_field@@Base+0xa6>
  42e0dd:	mov    rax,QWORD PTR [rbp-0x18]
  42e0e1:	mov    rax,QWORD PTR [rax+0x28]
  42e0e5:	lea    rcx,[rax+0x1]
  42e0e9:	mov    rdx,QWORD PTR [rbp-0x18]
  42e0ed:	mov    QWORD PTR [rdx+0x28],rcx
  42e0f1:	mov    BYTE PTR [rax],0x2c
  42e0f4:	mov    eax,DWORD PTR [rbp-0x28]
  42e0f7:	movsxd rdx,eax
  42e0fa:	mov    rcx,QWORD PTR [rbp-0x30]
  42e0fe:	mov    rax,QWORD PTR [rbp-0x18]
  42e102:	mov    rsi,rcx
  42e105:	mov    rdi,rax
  42e108:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e10d:	mov    rax,QWORD PTR [rbp-0x18]
  42e111:	mov    rdx,QWORD PTR [rax+0x28]
  42e115:	mov    rax,QWORD PTR [rbp-0x10]
  42e119:	mov    rsi,rdx
  42e11c:	mov    rdi,rax
  42e11f:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42e124:	mov    ecx,eax
  42e126:	mov    rax,QWORD PTR [rbp-0x18]
  42e12a:	mov    rdx,QWORD PTR [rax+0x28]
  42e12e:	movsxd rax,ecx
  42e131:	add    rdx,rax
  42e134:	mov    rax,QWORD PTR [rbp-0x18]
  42e138:	mov    QWORD PTR [rax+0x28],rdx
  42e13c:	jmp    42e13f <flatcc_json_printer_int64_field@@Base+0xf1>
  42e13e:	nop
  42e13f:	leave  
  42e140:	ret    

000000000042e141 <flatcc_json_printer_bool_field@@Base>:
  42e141:	push   rbp
  42e142:	mov    rbp,rsp
  42e145:	sub    rsp,0x40
  42e149:	mov    QWORD PTR [rbp-0x18],rdi
  42e14d:	mov    QWORD PTR [rbp-0x20],rsi
  42e151:	mov    DWORD PTR [rbp-0x24],edx
  42e154:	mov    QWORD PTR [rbp-0x30],rcx
  42e158:	mov    DWORD PTR [rbp-0x28],r8d
  42e15c:	mov    eax,r9d
  42e15f:	mov    BYTE PTR [rbp-0x34],al
  42e162:	mov    edx,DWORD PTR [rbp-0x24]
  42e165:	mov    rax,QWORD PTR [rbp-0x20]
  42e169:	mov    esi,edx
  42e16b:	mov    rdi,rax
  42e16e:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e173:	mov    QWORD PTR [rbp-0x8],rax
  42e177:	cmp    QWORD PTR [rbp-0x8],0x0
  42e17c:	je     42e1a7 <flatcc_json_printer_bool_field@@Base+0x66>
  42e17e:	mov    rax,QWORD PTR [rbp-0x8]
  42e182:	mov    rdi,rax
  42e185:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  42e18a:	mov    BYTE PTR [rbp-0x9],al
  42e18d:	movzx  eax,BYTE PTR [rbp-0x9]
  42e191:	cmp    al,BYTE PTR [rbp-0x34]
  42e194:	jne    42e1ba <flatcc_json_printer_bool_field@@Base+0x79>
  42e196:	mov    rax,QWORD PTR [rbp-0x18]
  42e19a:	movzx  eax,BYTE PTR [rax+0x34]
  42e19e:	test   al,al
  42e1a0:	je     42e1ba <flatcc_json_printer_bool_field@@Base+0x79>
  42e1a2:	jmp    42e230 <flatcc_json_printer_bool_field@@Base+0xef>
  42e1a7:	mov    rax,QWORD PTR [rbp-0x18]
  42e1ab:	movzx  eax,BYTE PTR [rax+0x35]
  42e1af:	test   al,al
  42e1b1:	je     42e22f <flatcc_json_printer_bool_field@@Base+0xee>
  42e1b3:	movzx  eax,BYTE PTR [rbp-0x34]
  42e1b7:	mov    BYTE PTR [rbp-0x9],al
  42e1ba:	mov    rax,QWORD PTR [rbp-0x20]
  42e1be:	mov    eax,DWORD PTR [rax+0x18]
  42e1c1:	lea    ecx,[rax+0x1]
  42e1c4:	mov    rdx,QWORD PTR [rbp-0x20]
  42e1c8:	mov    DWORD PTR [rdx+0x18],ecx
  42e1cb:	test   eax,eax
  42e1cd:	je     42e1e6 <flatcc_json_printer_bool_field@@Base+0xa5>
  42e1cf:	mov    rax,QWORD PTR [rbp-0x18]
  42e1d3:	mov    rax,QWORD PTR [rax+0x28]
  42e1d7:	lea    rcx,[rax+0x1]
  42e1db:	mov    rdx,QWORD PTR [rbp-0x18]
  42e1df:	mov    QWORD PTR [rdx+0x28],rcx
  42e1e3:	mov    BYTE PTR [rax],0x2c
  42e1e6:	mov    eax,DWORD PTR [rbp-0x28]
  42e1e9:	movsxd rdx,eax
  42e1ec:	mov    rcx,QWORD PTR [rbp-0x30]
  42e1f0:	mov    rax,QWORD PTR [rbp-0x18]
  42e1f4:	mov    rsi,rcx
  42e1f7:	mov    rdi,rax
  42e1fa:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e1ff:	mov    rax,QWORD PTR [rbp-0x18]
  42e203:	mov    rdx,QWORD PTR [rax+0x28]
  42e207:	movzx  eax,BYTE PTR [rbp-0x9]
  42e20b:	mov    rsi,rdx
  42e20e:	mov    edi,eax
  42e210:	call   429656 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42e215:	mov    ecx,eax
  42e217:	mov    rax,QWORD PTR [rbp-0x18]
  42e21b:	mov    rdx,QWORD PTR [rax+0x28]
  42e21f:	movsxd rax,ecx
  42e222:	add    rdx,rax
  42e225:	mov    rax,QWORD PTR [rbp-0x18]
  42e229:	mov    QWORD PTR [rax+0x28],rdx
  42e22d:	jmp    42e230 <flatcc_json_printer_bool_field@@Base+0xef>
  42e22f:	nop
  42e230:	leave  
  42e231:	ret    

000000000042e232 <flatcc_json_printer_float_field@@Base>:
  42e232:	push   rbp
  42e233:	mov    rbp,rsp
  42e236:	sub    rsp,0x40
  42e23a:	mov    QWORD PTR [rbp-0x18],rdi
  42e23e:	mov    QWORD PTR [rbp-0x20],rsi
  42e242:	mov    DWORD PTR [rbp-0x24],edx
  42e245:	mov    QWORD PTR [rbp-0x30],rcx
  42e249:	mov    DWORD PTR [rbp-0x28],r8d
  42e24d:	vmovss DWORD PTR [rbp-0x34],xmm0
  42e252:	mov    edx,DWORD PTR [rbp-0x24]
  42e255:	mov    rax,QWORD PTR [rbp-0x20]
  42e259:	mov    esi,edx
  42e25b:	mov    rdi,rax
  42e25e:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e263:	mov    QWORD PTR [rbp-0x8],rax
  42e267:	cmp    QWORD PTR [rbp-0x8],0x0
  42e26c:	je     42e2aa <flatcc_json_printer_float_field@@Base+0x78>
  42e26e:	mov    rax,QWORD PTR [rbp-0x8]
  42e272:	mov    rdi,rax
  42e275:	call   429468 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  42e27a:	vmovd  eax,xmm0
  42e27e:	mov    DWORD PTR [rbp-0xc],eax
  42e281:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42e286:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42e28b:	jp     42e2c0 <flatcc_json_printer_float_field@@Base+0x8e>
  42e28d:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42e292:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42e297:	jne    42e2c0 <flatcc_json_printer_float_field@@Base+0x8e>
  42e299:	mov    rax,QWORD PTR [rbp-0x18]
  42e29d:	movzx  eax,BYTE PTR [rax+0x34]
  42e2a1:	test   al,al
  42e2a3:	je     42e2c0 <flatcc_json_printer_float_field@@Base+0x8e>
  42e2a5:	jmp    42e335 <flatcc_json_printer_float_field@@Base+0x103>
  42e2aa:	mov    rax,QWORD PTR [rbp-0x18]
  42e2ae:	movzx  eax,BYTE PTR [rax+0x35]
  42e2b2:	test   al,al
  42e2b4:	je     42e334 <flatcc_json_printer_float_field@@Base+0x102>
  42e2b6:	vmovss xmm0,DWORD PTR [rbp-0x34]
  42e2bb:	vmovss DWORD PTR [rbp-0xc],xmm0
  42e2c0:	mov    rax,QWORD PTR [rbp-0x20]
  42e2c4:	mov    eax,DWORD PTR [rax+0x18]
  42e2c7:	lea    ecx,[rax+0x1]
  42e2ca:	mov    rdx,QWORD PTR [rbp-0x20]
  42e2ce:	mov    DWORD PTR [rdx+0x18],ecx
  42e2d1:	test   eax,eax
  42e2d3:	je     42e2ec <flatcc_json_printer_float_field@@Base+0xba>
  42e2d5:	mov    rax,QWORD PTR [rbp-0x18]
  42e2d9:	mov    rax,QWORD PTR [rax+0x28]
  42e2dd:	lea    rcx,[rax+0x1]
  42e2e1:	mov    rdx,QWORD PTR [rbp-0x18]
  42e2e5:	mov    QWORD PTR [rdx+0x28],rcx
  42e2e9:	mov    BYTE PTR [rax],0x2c
  42e2ec:	mov    eax,DWORD PTR [rbp-0x28]
  42e2ef:	movsxd rdx,eax
  42e2f2:	mov    rcx,QWORD PTR [rbp-0x30]
  42e2f6:	mov    rax,QWORD PTR [rbp-0x18]
  42e2fa:	mov    rsi,rcx
  42e2fd:	mov    rdi,rax
  42e300:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e305:	mov    rax,QWORD PTR [rbp-0x18]
  42e309:	mov    rax,QWORD PTR [rax+0x28]
  42e30d:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0xc]
  42e312:	mov    rdi,rax
  42e315:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42e31a:	mov    ecx,eax
  42e31c:	mov    rax,QWORD PTR [rbp-0x18]
  42e320:	mov    rdx,QWORD PTR [rax+0x28]
  42e324:	movsxd rax,ecx
  42e327:	add    rdx,rax
  42e32a:	mov    rax,QWORD PTR [rbp-0x18]
  42e32e:	mov    QWORD PTR [rax+0x28],rdx
  42e332:	jmp    42e335 <flatcc_json_printer_float_field@@Base+0x103>
  42e334:	nop
  42e335:	leave  
  42e336:	ret    

000000000042e337 <flatcc_json_printer_double_field@@Base>:
  42e337:	push   rbp
  42e338:	mov    rbp,rsp
  42e33b:	sub    rsp,0x40
  42e33f:	mov    QWORD PTR [rbp-0x18],rdi
  42e343:	mov    QWORD PTR [rbp-0x20],rsi
  42e347:	mov    DWORD PTR [rbp-0x24],edx
  42e34a:	mov    QWORD PTR [rbp-0x30],rcx
  42e34e:	mov    DWORD PTR [rbp-0x28],r8d
  42e352:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42e357:	mov    edx,DWORD PTR [rbp-0x24]
  42e35a:	mov    rax,QWORD PTR [rbp-0x20]
  42e35e:	mov    esi,edx
  42e360:	mov    rdi,rax
  42e363:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e368:	mov    QWORD PTR [rbp-0x8],rax
  42e36c:	cmp    QWORD PTR [rbp-0x8],0x0
  42e371:	je     42e3b1 <flatcc_json_printer_double_field@@Base+0x7a>
  42e373:	mov    rax,QWORD PTR [rbp-0x8]
  42e377:	mov    rdi,rax
  42e37a:	call   4294ab <flatcc_json_parser_struct_as_root@@Base+0x302>
  42e37f:	vmovq  rax,xmm0
  42e384:	mov    QWORD PTR [rbp-0x10],rax
  42e388:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42e38d:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42e392:	jp     42e3cb <flatcc_json_printer_double_field@@Base+0x94>
  42e394:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42e399:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42e39e:	jne    42e3cb <flatcc_json_printer_double_field@@Base+0x94>
  42e3a0:	mov    rax,QWORD PTR [rbp-0x18]
  42e3a4:	movzx  eax,BYTE PTR [rax+0x34]
  42e3a8:	test   al,al
  42e3aa:	je     42e3cb <flatcc_json_printer_double_field@@Base+0x94>
  42e3ac:	jmp    42e448 <flatcc_json_printer_double_field@@Base+0x111>
  42e3b1:	mov    rax,QWORD PTR [rbp-0x18]
  42e3b5:	movzx  eax,BYTE PTR [rax+0x35]
  42e3b9:	test   al,al
  42e3bb:	je     42e447 <flatcc_json_printer_double_field@@Base+0x110>
  42e3c1:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  42e3c6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42e3cb:	mov    rax,QWORD PTR [rbp-0x20]
  42e3cf:	mov    eax,DWORD PTR [rax+0x18]
  42e3d2:	lea    ecx,[rax+0x1]
  42e3d5:	mov    rdx,QWORD PTR [rbp-0x20]
  42e3d9:	mov    DWORD PTR [rdx+0x18],ecx
  42e3dc:	test   eax,eax
  42e3de:	je     42e3f7 <flatcc_json_printer_double_field@@Base+0xc0>
  42e3e0:	mov    rax,QWORD PTR [rbp-0x18]
  42e3e4:	mov    rax,QWORD PTR [rax+0x28]
  42e3e8:	lea    rcx,[rax+0x1]
  42e3ec:	mov    rdx,QWORD PTR [rbp-0x18]
  42e3f0:	mov    QWORD PTR [rdx+0x28],rcx
  42e3f4:	mov    BYTE PTR [rax],0x2c
  42e3f7:	mov    eax,DWORD PTR [rbp-0x28]
  42e3fa:	movsxd rdx,eax
  42e3fd:	mov    rcx,QWORD PTR [rbp-0x30]
  42e401:	mov    rax,QWORD PTR [rbp-0x18]
  42e405:	mov    rsi,rcx
  42e408:	mov    rdi,rax
  42e40b:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e410:	mov    rax,QWORD PTR [rbp-0x18]
  42e414:	mov    rdx,QWORD PTR [rax+0x28]
  42e418:	mov    rax,QWORD PTR [rbp-0x10]
  42e41c:	mov    rdi,rdx
  42e41f:	mov    QWORD PTR [rbp-0x40],rax
  42e423:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  42e428:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42e42d:	mov    ecx,eax
  42e42f:	mov    rax,QWORD PTR [rbp-0x18]
  42e433:	mov    rdx,QWORD PTR [rax+0x28]
  42e437:	movsxd rax,ecx
  42e43a:	add    rdx,rax
  42e43d:	mov    rax,QWORD PTR [rbp-0x18]
  42e441:	mov    QWORD PTR [rax+0x28],rdx
  42e445:	jmp    42e448 <flatcc_json_printer_double_field@@Base+0x111>
  42e447:	nop
  42e448:	leave  
  42e449:	ret    

000000000042e44a <flatcc_json_printer_uint8_enum_field@@Base>:
  42e44a:	push   rbp
  42e44b:	mov    rbp,rsp
  42e44e:	sub    rsp,0x40
  42e452:	mov    QWORD PTR [rbp-0x18],rdi
  42e456:	mov    QWORD PTR [rbp-0x20],rsi
  42e45a:	mov    DWORD PTR [rbp-0x24],edx
  42e45d:	mov    QWORD PTR [rbp-0x30],rcx
  42e461:	mov    DWORD PTR [rbp-0x28],r8d
  42e465:	mov    eax,r9d
  42e468:	mov    BYTE PTR [rbp-0x34],al
  42e46b:	mov    edx,DWORD PTR [rbp-0x24]
  42e46e:	mov    rax,QWORD PTR [rbp-0x20]
  42e472:	mov    esi,edx
  42e474:	mov    rdi,rax
  42e477:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e47c:	mov    QWORD PTR [rbp-0x8],rax
  42e480:	cmp    QWORD PTR [rbp-0x8],0x0
  42e485:	je     42e4b0 <flatcc_json_printer_uint8_enum_field@@Base+0x66>
  42e487:	mov    rax,QWORD PTR [rbp-0x8]
  42e48b:	mov    rdi,rax
  42e48e:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  42e493:	mov    BYTE PTR [rbp-0x9],al
  42e496:	movzx  eax,BYTE PTR [rbp-0x9]
  42e49a:	cmp    al,BYTE PTR [rbp-0x34]
  42e49d:	jne    42e4c7 <flatcc_json_printer_uint8_enum_field@@Base+0x7d>
  42e49f:	mov    rax,QWORD PTR [rbp-0x18]
  42e4a3:	movzx  eax,BYTE PTR [rax+0x34]
  42e4a7:	test   al,al
  42e4a9:	je     42e4c7 <flatcc_json_printer_uint8_enum_field@@Base+0x7d>
  42e4ab:	jmp    42e55e <flatcc_json_printer_uint8_enum_field@@Base+0x114>
  42e4b0:	mov    rax,QWORD PTR [rbp-0x18]
  42e4b4:	movzx  eax,BYTE PTR [rax+0x35]
  42e4b8:	test   al,al
  42e4ba:	je     42e55d <flatcc_json_printer_uint8_enum_field@@Base+0x113>
  42e4c0:	movzx  eax,BYTE PTR [rbp-0x34]
  42e4c4:	mov    BYTE PTR [rbp-0x9],al
  42e4c7:	mov    rax,QWORD PTR [rbp-0x20]
  42e4cb:	mov    eax,DWORD PTR [rax+0x18]
  42e4ce:	lea    ecx,[rax+0x1]
  42e4d1:	mov    rdx,QWORD PTR [rbp-0x20]
  42e4d5:	mov    DWORD PTR [rdx+0x18],ecx
  42e4d8:	test   eax,eax
  42e4da:	je     42e4f3 <flatcc_json_printer_uint8_enum_field@@Base+0xa9>
  42e4dc:	mov    rax,QWORD PTR [rbp-0x18]
  42e4e0:	mov    rax,QWORD PTR [rax+0x28]
  42e4e4:	lea    rcx,[rax+0x1]
  42e4e8:	mov    rdx,QWORD PTR [rbp-0x18]
  42e4ec:	mov    QWORD PTR [rdx+0x28],rcx
  42e4f0:	mov    BYTE PTR [rax],0x2c
  42e4f3:	mov    eax,DWORD PTR [rbp-0x28]
  42e4f6:	movsxd rdx,eax
  42e4f9:	mov    rcx,QWORD PTR [rbp-0x30]
  42e4fd:	mov    rax,QWORD PTR [rbp-0x18]
  42e501:	mov    rsi,rcx
  42e504:	mov    rdi,rax
  42e507:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e50c:	mov    rax,QWORD PTR [rbp-0x18]
  42e510:	movzx  eax,BYTE PTR [rax+0x33]
  42e514:	test   al,al
  42e516:	je     42e548 <flatcc_json_printer_uint8_enum_field@@Base+0xfe>
  42e518:	mov    rax,QWORD PTR [rbp-0x18]
  42e51c:	mov    rdx,QWORD PTR [rax+0x28]
  42e520:	movzx  eax,BYTE PTR [rbp-0x9]
  42e524:	mov    rsi,rdx
  42e527:	mov    edi,eax
  42e529:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42e52e:	mov    ecx,eax
  42e530:	mov    rax,QWORD PTR [rbp-0x18]
  42e534:	mov    rdx,QWORD PTR [rax+0x28]
  42e538:	movsxd rax,ecx
  42e53b:	add    rdx,rax
  42e53e:	mov    rax,QWORD PTR [rbp-0x18]
  42e542:	mov    QWORD PTR [rax+0x28],rdx
  42e546:	jmp    42e55e <flatcc_json_printer_uint8_enum_field@@Base+0x114>
  42e548:	movzx  ecx,BYTE PTR [rbp-0x9]
  42e54c:	mov    rdx,QWORD PTR [rbp-0x18]
  42e550:	mov    rax,QWORD PTR [rbp+0x10]
  42e554:	mov    esi,ecx
  42e556:	mov    rdi,rdx
  42e559:	call   rax
  42e55b:	jmp    42e55e <flatcc_json_printer_uint8_enum_field@@Base+0x114>
  42e55d:	nop
  42e55e:	leave  
  42e55f:	ret    

000000000042e560 <flatcc_json_printer_uint16_enum_field@@Base>:
  42e560:	push   rbp
  42e561:	mov    rbp,rsp
  42e564:	sub    rsp,0x40
  42e568:	mov    QWORD PTR [rbp-0x18],rdi
  42e56c:	mov    QWORD PTR [rbp-0x20],rsi
  42e570:	mov    DWORD PTR [rbp-0x24],edx
  42e573:	mov    QWORD PTR [rbp-0x30],rcx
  42e577:	mov    DWORD PTR [rbp-0x28],r8d
  42e57b:	mov    eax,r9d
  42e57e:	mov    WORD PTR [rbp-0x34],ax
  42e582:	mov    edx,DWORD PTR [rbp-0x24]
  42e585:	mov    rax,QWORD PTR [rbp-0x20]
  42e589:	mov    esi,edx
  42e58b:	mov    rdi,rax
  42e58e:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e593:	mov    QWORD PTR [rbp-0x8],rax
  42e597:	cmp    QWORD PTR [rbp-0x8],0x0
  42e59c:	je     42e5c9 <flatcc_json_printer_uint16_enum_field@@Base+0x69>
  42e59e:	mov    rax,QWORD PTR [rbp-0x8]
  42e5a2:	mov    rdi,rax
  42e5a5:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  42e5aa:	mov    WORD PTR [rbp-0xa],ax
  42e5ae:	movzx  eax,WORD PTR [rbp-0xa]
  42e5b2:	cmp    ax,WORD PTR [rbp-0x34]
  42e5b6:	jne    42e5e1 <flatcc_json_printer_uint16_enum_field@@Base+0x81>
  42e5b8:	mov    rax,QWORD PTR [rbp-0x18]
  42e5bc:	movzx  eax,BYTE PTR [rax+0x34]
  42e5c0:	test   al,al
  42e5c2:	je     42e5e1 <flatcc_json_printer_uint16_enum_field@@Base+0x81>
  42e5c4:	jmp    42e678 <flatcc_json_printer_uint16_enum_field@@Base+0x118>
  42e5c9:	mov    rax,QWORD PTR [rbp-0x18]
  42e5cd:	movzx  eax,BYTE PTR [rax+0x35]
  42e5d1:	test   al,al
  42e5d3:	je     42e677 <flatcc_json_printer_uint16_enum_field@@Base+0x117>
  42e5d9:	movzx  eax,WORD PTR [rbp-0x34]
  42e5dd:	mov    WORD PTR [rbp-0xa],ax
  42e5e1:	mov    rax,QWORD PTR [rbp-0x20]
  42e5e5:	mov    eax,DWORD PTR [rax+0x18]
  42e5e8:	lea    ecx,[rax+0x1]
  42e5eb:	mov    rdx,QWORD PTR [rbp-0x20]
  42e5ef:	mov    DWORD PTR [rdx+0x18],ecx
  42e5f2:	test   eax,eax
  42e5f4:	je     42e60d <flatcc_json_printer_uint16_enum_field@@Base+0xad>
  42e5f6:	mov    rax,QWORD PTR [rbp-0x18]
  42e5fa:	mov    rax,QWORD PTR [rax+0x28]
  42e5fe:	lea    rcx,[rax+0x1]
  42e602:	mov    rdx,QWORD PTR [rbp-0x18]
  42e606:	mov    QWORD PTR [rdx+0x28],rcx
  42e60a:	mov    BYTE PTR [rax],0x2c
  42e60d:	mov    eax,DWORD PTR [rbp-0x28]
  42e610:	movsxd rdx,eax
  42e613:	mov    rcx,QWORD PTR [rbp-0x30]
  42e617:	mov    rax,QWORD PTR [rbp-0x18]
  42e61b:	mov    rsi,rcx
  42e61e:	mov    rdi,rax
  42e621:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e626:	mov    rax,QWORD PTR [rbp-0x18]
  42e62a:	movzx  eax,BYTE PTR [rax+0x33]
  42e62e:	test   al,al
  42e630:	je     42e662 <flatcc_json_printer_uint16_enum_field@@Base+0x102>
  42e632:	mov    rax,QWORD PTR [rbp-0x18]
  42e636:	mov    rdx,QWORD PTR [rax+0x28]
  42e63a:	movzx  eax,WORD PTR [rbp-0xa]
  42e63e:	mov    rsi,rdx
  42e641:	mov    edi,eax
  42e643:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42e648:	mov    ecx,eax
  42e64a:	mov    rax,QWORD PTR [rbp-0x18]
  42e64e:	mov    rdx,QWORD PTR [rax+0x28]
  42e652:	movsxd rax,ecx
  42e655:	add    rdx,rax
  42e658:	mov    rax,QWORD PTR [rbp-0x18]
  42e65c:	mov    QWORD PTR [rax+0x28],rdx
  42e660:	jmp    42e678 <flatcc_json_printer_uint16_enum_field@@Base+0x118>
  42e662:	movzx  ecx,WORD PTR [rbp-0xa]
  42e666:	mov    rdx,QWORD PTR [rbp-0x18]
  42e66a:	mov    rax,QWORD PTR [rbp+0x10]
  42e66e:	mov    esi,ecx
  42e670:	mov    rdi,rdx
  42e673:	call   rax
  42e675:	jmp    42e678 <flatcc_json_printer_uint16_enum_field@@Base+0x118>
  42e677:	nop
  42e678:	leave  
  42e679:	ret    

000000000042e67a <flatcc_json_printer_uint32_enum_field@@Base>:
  42e67a:	push   rbp
  42e67b:	mov    rbp,rsp
  42e67e:	sub    rsp,0x40
  42e682:	mov    QWORD PTR [rbp-0x18],rdi
  42e686:	mov    QWORD PTR [rbp-0x20],rsi
  42e68a:	mov    DWORD PTR [rbp-0x24],edx
  42e68d:	mov    QWORD PTR [rbp-0x30],rcx
  42e691:	mov    DWORD PTR [rbp-0x28],r8d
  42e695:	mov    DWORD PTR [rbp-0x34],r9d
  42e699:	mov    edx,DWORD PTR [rbp-0x24]
  42e69c:	mov    rax,QWORD PTR [rbp-0x20]
  42e6a0:	mov    esi,edx
  42e6a2:	mov    rdi,rax
  42e6a5:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e6aa:	mov    QWORD PTR [rbp-0x8],rax
  42e6ae:	cmp    QWORD PTR [rbp-0x8],0x0
  42e6b3:	je     42e6dd <flatcc_json_printer_uint32_enum_field@@Base+0x63>
  42e6b5:	mov    rax,QWORD PTR [rbp-0x8]
  42e6b9:	mov    rdi,rax
  42e6bc:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42e6c1:	mov    DWORD PTR [rbp-0xc],eax
  42e6c4:	mov    eax,DWORD PTR [rbp-0xc]
  42e6c7:	cmp    eax,DWORD PTR [rbp-0x34]
  42e6ca:	jne    42e6f3 <flatcc_json_printer_uint32_enum_field@@Base+0x79>
  42e6cc:	mov    rax,QWORD PTR [rbp-0x18]
  42e6d0:	movzx  eax,BYTE PTR [rax+0x34]
  42e6d4:	test   al,al
  42e6d6:	je     42e6f3 <flatcc_json_printer_uint32_enum_field@@Base+0x79>
  42e6d8:	jmp    42e788 <flatcc_json_printer_uint32_enum_field@@Base+0x10e>
  42e6dd:	mov    rax,QWORD PTR [rbp-0x18]
  42e6e1:	movzx  eax,BYTE PTR [rax+0x35]
  42e6e5:	test   al,al
  42e6e7:	je     42e787 <flatcc_json_printer_uint32_enum_field@@Base+0x10d>
  42e6ed:	mov    eax,DWORD PTR [rbp-0x34]
  42e6f0:	mov    DWORD PTR [rbp-0xc],eax
  42e6f3:	mov    rax,QWORD PTR [rbp-0x20]
  42e6f7:	mov    eax,DWORD PTR [rax+0x18]
  42e6fa:	lea    ecx,[rax+0x1]
  42e6fd:	mov    rdx,QWORD PTR [rbp-0x20]
  42e701:	mov    DWORD PTR [rdx+0x18],ecx
  42e704:	test   eax,eax
  42e706:	je     42e71f <flatcc_json_printer_uint32_enum_field@@Base+0xa5>
  42e708:	mov    rax,QWORD PTR [rbp-0x18]
  42e70c:	mov    rax,QWORD PTR [rax+0x28]
  42e710:	lea    rcx,[rax+0x1]
  42e714:	mov    rdx,QWORD PTR [rbp-0x18]
  42e718:	mov    QWORD PTR [rdx+0x28],rcx
  42e71c:	mov    BYTE PTR [rax],0x2c
  42e71f:	mov    eax,DWORD PTR [rbp-0x28]
  42e722:	movsxd rdx,eax
  42e725:	mov    rcx,QWORD PTR [rbp-0x30]
  42e729:	mov    rax,QWORD PTR [rbp-0x18]
  42e72d:	mov    rsi,rcx
  42e730:	mov    rdi,rax
  42e733:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e738:	mov    rax,QWORD PTR [rbp-0x18]
  42e73c:	movzx  eax,BYTE PTR [rax+0x33]
  42e740:	test   al,al
  42e742:	je     42e773 <flatcc_json_printer_uint32_enum_field@@Base+0xf9>
  42e744:	mov    rax,QWORD PTR [rbp-0x18]
  42e748:	mov    rdx,QWORD PTR [rax+0x28]
  42e74c:	mov    eax,DWORD PTR [rbp-0xc]
  42e74f:	mov    rsi,rdx
  42e752:	mov    edi,eax
  42e754:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42e759:	mov    ecx,eax
  42e75b:	mov    rax,QWORD PTR [rbp-0x18]
  42e75f:	mov    rdx,QWORD PTR [rax+0x28]
  42e763:	movsxd rax,ecx
  42e766:	add    rdx,rax
  42e769:	mov    rax,QWORD PTR [rbp-0x18]
  42e76d:	mov    QWORD PTR [rax+0x28],rdx
  42e771:	jmp    42e788 <flatcc_json_printer_uint32_enum_field@@Base+0x10e>
  42e773:	mov    ecx,DWORD PTR [rbp-0xc]
  42e776:	mov    rdx,QWORD PTR [rbp-0x18]
  42e77a:	mov    rax,QWORD PTR [rbp+0x10]
  42e77e:	mov    esi,ecx
  42e780:	mov    rdi,rdx
  42e783:	call   rax
  42e785:	jmp    42e788 <flatcc_json_printer_uint32_enum_field@@Base+0x10e>
  42e787:	nop
  42e788:	leave  
  42e789:	ret    

000000000042e78a <flatcc_json_printer_uint64_enum_field@@Base>:
  42e78a:	push   rbp
  42e78b:	mov    rbp,rsp
  42e78e:	sub    rsp,0x40
  42e792:	mov    QWORD PTR [rbp-0x18],rdi
  42e796:	mov    QWORD PTR [rbp-0x20],rsi
  42e79a:	mov    DWORD PTR [rbp-0x24],edx
  42e79d:	mov    QWORD PTR [rbp-0x30],rcx
  42e7a1:	mov    DWORD PTR [rbp-0x28],r8d
  42e7a5:	mov    QWORD PTR [rbp-0x38],r9
  42e7a9:	mov    edx,DWORD PTR [rbp-0x24]
  42e7ac:	mov    rax,QWORD PTR [rbp-0x20]
  42e7b0:	mov    esi,edx
  42e7b2:	mov    rdi,rax
  42e7b5:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e7ba:	mov    QWORD PTR [rbp-0x8],rax
  42e7be:	cmp    QWORD PTR [rbp-0x8],0x0
  42e7c3:	je     42e7f0 <flatcc_json_printer_uint64_enum_field@@Base+0x66>
  42e7c5:	mov    rax,QWORD PTR [rbp-0x8]
  42e7c9:	mov    rdi,rax
  42e7cc:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42e7d1:	mov    QWORD PTR [rbp-0x10],rax
  42e7d5:	mov    rax,QWORD PTR [rbp-0x10]
  42e7d9:	cmp    rax,QWORD PTR [rbp-0x38]
  42e7dd:	jne    42e808 <flatcc_json_printer_uint64_enum_field@@Base+0x7e>
  42e7df:	mov    rax,QWORD PTR [rbp-0x18]
  42e7e3:	movzx  eax,BYTE PTR [rax+0x34]
  42e7e7:	test   al,al
  42e7e9:	je     42e808 <flatcc_json_printer_uint64_enum_field@@Base+0x7e>
  42e7eb:	jmp    42e8a1 <flatcc_json_printer_uint64_enum_field@@Base+0x117>
  42e7f0:	mov    rax,QWORD PTR [rbp-0x18]
  42e7f4:	movzx  eax,BYTE PTR [rax+0x35]
  42e7f8:	test   al,al
  42e7fa:	je     42e8a0 <flatcc_json_printer_uint64_enum_field@@Base+0x116>
  42e800:	mov    rax,QWORD PTR [rbp-0x38]
  42e804:	mov    QWORD PTR [rbp-0x10],rax
  42e808:	mov    rax,QWORD PTR [rbp-0x20]
  42e80c:	mov    eax,DWORD PTR [rax+0x18]
  42e80f:	lea    ecx,[rax+0x1]
  42e812:	mov    rdx,QWORD PTR [rbp-0x20]
  42e816:	mov    DWORD PTR [rdx+0x18],ecx
  42e819:	test   eax,eax
  42e81b:	je     42e834 <flatcc_json_printer_uint64_enum_field@@Base+0xaa>
  42e81d:	mov    rax,QWORD PTR [rbp-0x18]
  42e821:	mov    rax,QWORD PTR [rax+0x28]
  42e825:	lea    rcx,[rax+0x1]
  42e829:	mov    rdx,QWORD PTR [rbp-0x18]
  42e82d:	mov    QWORD PTR [rdx+0x28],rcx
  42e831:	mov    BYTE PTR [rax],0x2c
  42e834:	mov    eax,DWORD PTR [rbp-0x28]
  42e837:	movsxd rdx,eax
  42e83a:	mov    rcx,QWORD PTR [rbp-0x30]
  42e83e:	mov    rax,QWORD PTR [rbp-0x18]
  42e842:	mov    rsi,rcx
  42e845:	mov    rdi,rax
  42e848:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e84d:	mov    rax,QWORD PTR [rbp-0x18]
  42e851:	movzx  eax,BYTE PTR [rax+0x33]
  42e855:	test   al,al
  42e857:	je     42e88a <flatcc_json_printer_uint64_enum_field@@Base+0x100>
  42e859:	mov    rax,QWORD PTR [rbp-0x18]
  42e85d:	mov    rdx,QWORD PTR [rax+0x28]
  42e861:	mov    rax,QWORD PTR [rbp-0x10]
  42e865:	mov    rsi,rdx
  42e868:	mov    rdi,rax
  42e86b:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42e870:	mov    ecx,eax
  42e872:	mov    rax,QWORD PTR [rbp-0x18]
  42e876:	mov    rdx,QWORD PTR [rax+0x28]
  42e87a:	movsxd rax,ecx
  42e87d:	add    rdx,rax
  42e880:	mov    rax,QWORD PTR [rbp-0x18]
  42e884:	mov    QWORD PTR [rax+0x28],rdx
  42e888:	jmp    42e8a1 <flatcc_json_printer_uint64_enum_field@@Base+0x117>
  42e88a:	mov    rcx,QWORD PTR [rbp-0x10]
  42e88e:	mov    rdx,QWORD PTR [rbp-0x18]
  42e892:	mov    rax,QWORD PTR [rbp+0x10]
  42e896:	mov    rsi,rcx
  42e899:	mov    rdi,rdx
  42e89c:	call   rax
  42e89e:	jmp    42e8a1 <flatcc_json_printer_uint64_enum_field@@Base+0x117>
  42e8a0:	nop
  42e8a1:	leave  
  42e8a2:	ret    

000000000042e8a3 <flatcc_json_printer_int8_enum_field@@Base>:
  42e8a3:	push   rbp
  42e8a4:	mov    rbp,rsp
  42e8a7:	sub    rsp,0x40
  42e8ab:	mov    QWORD PTR [rbp-0x18],rdi
  42e8af:	mov    QWORD PTR [rbp-0x20],rsi
  42e8b3:	mov    DWORD PTR [rbp-0x24],edx
  42e8b6:	mov    QWORD PTR [rbp-0x30],rcx
  42e8ba:	mov    DWORD PTR [rbp-0x28],r8d
  42e8be:	mov    eax,r9d
  42e8c1:	mov    BYTE PTR [rbp-0x34],al
  42e8c4:	mov    edx,DWORD PTR [rbp-0x24]
  42e8c7:	mov    rax,QWORD PTR [rbp-0x20]
  42e8cb:	mov    esi,edx
  42e8cd:	mov    rdi,rax
  42e8d0:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e8d5:	mov    QWORD PTR [rbp-0x8],rax
  42e8d9:	cmp    QWORD PTR [rbp-0x8],0x0
  42e8de:	je     42e909 <flatcc_json_printer_int8_enum_field@@Base+0x66>
  42e8e0:	mov    rax,QWORD PTR [rbp-0x8]
  42e8e4:	mov    rdi,rax
  42e8e7:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  42e8ec:	mov    BYTE PTR [rbp-0x9],al
  42e8ef:	movzx  eax,BYTE PTR [rbp-0x9]
  42e8f3:	cmp    al,BYTE PTR [rbp-0x34]
  42e8f6:	jne    42e920 <flatcc_json_printer_int8_enum_field@@Base+0x7d>
  42e8f8:	mov    rax,QWORD PTR [rbp-0x18]
  42e8fc:	movzx  eax,BYTE PTR [rax+0x34]
  42e900:	test   al,al
  42e902:	je     42e920 <flatcc_json_printer_int8_enum_field@@Base+0x7d>
  42e904:	jmp    42e9b7 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  42e909:	mov    rax,QWORD PTR [rbp-0x18]
  42e90d:	movzx  eax,BYTE PTR [rax+0x35]
  42e911:	test   al,al
  42e913:	je     42e9b6 <flatcc_json_printer_int8_enum_field@@Base+0x113>
  42e919:	movzx  eax,BYTE PTR [rbp-0x34]
  42e91d:	mov    BYTE PTR [rbp-0x9],al
  42e920:	mov    rax,QWORD PTR [rbp-0x20]
  42e924:	mov    eax,DWORD PTR [rax+0x18]
  42e927:	lea    ecx,[rax+0x1]
  42e92a:	mov    rdx,QWORD PTR [rbp-0x20]
  42e92e:	mov    DWORD PTR [rdx+0x18],ecx
  42e931:	test   eax,eax
  42e933:	je     42e94c <flatcc_json_printer_int8_enum_field@@Base+0xa9>
  42e935:	mov    rax,QWORD PTR [rbp-0x18]
  42e939:	mov    rax,QWORD PTR [rax+0x28]
  42e93d:	lea    rcx,[rax+0x1]
  42e941:	mov    rdx,QWORD PTR [rbp-0x18]
  42e945:	mov    QWORD PTR [rdx+0x28],rcx
  42e949:	mov    BYTE PTR [rax],0x2c
  42e94c:	mov    eax,DWORD PTR [rbp-0x28]
  42e94f:	movsxd rdx,eax
  42e952:	mov    rcx,QWORD PTR [rbp-0x30]
  42e956:	mov    rax,QWORD PTR [rbp-0x18]
  42e95a:	mov    rsi,rcx
  42e95d:	mov    rdi,rax
  42e960:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42e965:	mov    rax,QWORD PTR [rbp-0x18]
  42e969:	movzx  eax,BYTE PTR [rax+0x33]
  42e96d:	test   al,al
  42e96f:	je     42e9a1 <flatcc_json_printer_int8_enum_field@@Base+0xfe>
  42e971:	mov    rax,QWORD PTR [rbp-0x18]
  42e975:	mov    rdx,QWORD PTR [rax+0x28]
  42e979:	movsx  eax,BYTE PTR [rbp-0x9]
  42e97d:	mov    rsi,rdx
  42e980:	mov    edi,eax
  42e982:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42e987:	mov    ecx,eax
  42e989:	mov    rax,QWORD PTR [rbp-0x18]
  42e98d:	mov    rdx,QWORD PTR [rax+0x28]
  42e991:	movsxd rax,ecx
  42e994:	add    rdx,rax
  42e997:	mov    rax,QWORD PTR [rbp-0x18]
  42e99b:	mov    QWORD PTR [rax+0x28],rdx
  42e99f:	jmp    42e9b7 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  42e9a1:	movsx  ecx,BYTE PTR [rbp-0x9]
  42e9a5:	mov    rdx,QWORD PTR [rbp-0x18]
  42e9a9:	mov    rax,QWORD PTR [rbp+0x10]
  42e9ad:	mov    esi,ecx
  42e9af:	mov    rdi,rdx
  42e9b2:	call   rax
  42e9b4:	jmp    42e9b7 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  42e9b6:	nop
  42e9b7:	leave  
  42e9b8:	ret    

000000000042e9b9 <flatcc_json_printer_int16_enum_field@@Base>:
  42e9b9:	push   rbp
  42e9ba:	mov    rbp,rsp
  42e9bd:	sub    rsp,0x40
  42e9c1:	mov    QWORD PTR [rbp-0x18],rdi
  42e9c5:	mov    QWORD PTR [rbp-0x20],rsi
  42e9c9:	mov    DWORD PTR [rbp-0x24],edx
  42e9cc:	mov    QWORD PTR [rbp-0x30],rcx
  42e9d0:	mov    DWORD PTR [rbp-0x28],r8d
  42e9d4:	mov    eax,r9d
  42e9d7:	mov    WORD PTR [rbp-0x34],ax
  42e9db:	mov    edx,DWORD PTR [rbp-0x24]
  42e9de:	mov    rax,QWORD PTR [rbp-0x20]
  42e9e2:	mov    esi,edx
  42e9e4:	mov    rdi,rax
  42e9e7:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42e9ec:	mov    QWORD PTR [rbp-0x8],rax
  42e9f0:	cmp    QWORD PTR [rbp-0x8],0x0
  42e9f5:	je     42ea22 <flatcc_json_printer_int16_enum_field@@Base+0x69>
  42e9f7:	mov    rax,QWORD PTR [rbp-0x8]
  42e9fb:	mov    rdi,rax
  42e9fe:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42ea03:	mov    WORD PTR [rbp-0xa],ax
  42ea07:	movzx  eax,WORD PTR [rbp-0xa]
  42ea0b:	cmp    ax,WORD PTR [rbp-0x34]
  42ea0f:	jne    42ea3a <flatcc_json_printer_int16_enum_field@@Base+0x81>
  42ea11:	mov    rax,QWORD PTR [rbp-0x18]
  42ea15:	movzx  eax,BYTE PTR [rax+0x34]
  42ea19:	test   al,al
  42ea1b:	je     42ea3a <flatcc_json_printer_int16_enum_field@@Base+0x81>
  42ea1d:	jmp    42ead1 <flatcc_json_printer_int16_enum_field@@Base+0x118>
  42ea22:	mov    rax,QWORD PTR [rbp-0x18]
  42ea26:	movzx  eax,BYTE PTR [rax+0x35]
  42ea2a:	test   al,al
  42ea2c:	je     42ead0 <flatcc_json_printer_int16_enum_field@@Base+0x117>
  42ea32:	movzx  eax,WORD PTR [rbp-0x34]
  42ea36:	mov    WORD PTR [rbp-0xa],ax
  42ea3a:	mov    rax,QWORD PTR [rbp-0x20]
  42ea3e:	mov    eax,DWORD PTR [rax+0x18]
  42ea41:	lea    ecx,[rax+0x1]
  42ea44:	mov    rdx,QWORD PTR [rbp-0x20]
  42ea48:	mov    DWORD PTR [rdx+0x18],ecx
  42ea4b:	test   eax,eax
  42ea4d:	je     42ea66 <flatcc_json_printer_int16_enum_field@@Base+0xad>
  42ea4f:	mov    rax,QWORD PTR [rbp-0x18]
  42ea53:	mov    rax,QWORD PTR [rax+0x28]
  42ea57:	lea    rcx,[rax+0x1]
  42ea5b:	mov    rdx,QWORD PTR [rbp-0x18]
  42ea5f:	mov    QWORD PTR [rdx+0x28],rcx
  42ea63:	mov    BYTE PTR [rax],0x2c
  42ea66:	mov    eax,DWORD PTR [rbp-0x28]
  42ea69:	movsxd rdx,eax
  42ea6c:	mov    rcx,QWORD PTR [rbp-0x30]
  42ea70:	mov    rax,QWORD PTR [rbp-0x18]
  42ea74:	mov    rsi,rcx
  42ea77:	mov    rdi,rax
  42ea7a:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42ea7f:	mov    rax,QWORD PTR [rbp-0x18]
  42ea83:	movzx  eax,BYTE PTR [rax+0x33]
  42ea87:	test   al,al
  42ea89:	je     42eabb <flatcc_json_printer_int16_enum_field@@Base+0x102>
  42ea8b:	mov    rax,QWORD PTR [rbp-0x18]
  42ea8f:	mov    rdx,QWORD PTR [rax+0x28]
  42ea93:	movsx  eax,WORD PTR [rbp-0xa]
  42ea97:	mov    rsi,rdx
  42ea9a:	mov    edi,eax
  42ea9c:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42eaa1:	mov    ecx,eax
  42eaa3:	mov    rax,QWORD PTR [rbp-0x18]
  42eaa7:	mov    rdx,QWORD PTR [rax+0x28]
  42eaab:	movsxd rax,ecx
  42eaae:	add    rdx,rax
  42eab1:	mov    rax,QWORD PTR [rbp-0x18]
  42eab5:	mov    QWORD PTR [rax+0x28],rdx
  42eab9:	jmp    42ead1 <flatcc_json_printer_int16_enum_field@@Base+0x118>
  42eabb:	movsx  ecx,WORD PTR [rbp-0xa]
  42eabf:	mov    rdx,QWORD PTR [rbp-0x18]
  42eac3:	mov    rax,QWORD PTR [rbp+0x10]
  42eac7:	mov    esi,ecx
  42eac9:	mov    rdi,rdx
  42eacc:	call   rax
  42eace:	jmp    42ead1 <flatcc_json_printer_int16_enum_field@@Base+0x118>
  42ead0:	nop
  42ead1:	leave  
  42ead2:	ret    

000000000042ead3 <flatcc_json_printer_int32_enum_field@@Base>:
  42ead3:	push   rbp
  42ead4:	mov    rbp,rsp
  42ead7:	sub    rsp,0x40
  42eadb:	mov    QWORD PTR [rbp-0x18],rdi
  42eadf:	mov    QWORD PTR [rbp-0x20],rsi
  42eae3:	mov    DWORD PTR [rbp-0x24],edx
  42eae6:	mov    QWORD PTR [rbp-0x30],rcx
  42eaea:	mov    DWORD PTR [rbp-0x28],r8d
  42eaee:	mov    DWORD PTR [rbp-0x34],r9d
  42eaf2:	mov    edx,DWORD PTR [rbp-0x24]
  42eaf5:	mov    rax,QWORD PTR [rbp-0x20]
  42eaf9:	mov    esi,edx
  42eafb:	mov    rdi,rax
  42eafe:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42eb03:	mov    QWORD PTR [rbp-0x8],rax
  42eb07:	cmp    QWORD PTR [rbp-0x8],0x0
  42eb0c:	je     42eb36 <flatcc_json_printer_int32_enum_field@@Base+0x63>
  42eb0e:	mov    rax,QWORD PTR [rbp-0x8]
  42eb12:	mov    rdi,rax
  42eb15:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42eb1a:	mov    DWORD PTR [rbp-0xc],eax
  42eb1d:	mov    eax,DWORD PTR [rbp-0xc]
  42eb20:	cmp    eax,DWORD PTR [rbp-0x34]
  42eb23:	jne    42eb4c <flatcc_json_printer_int32_enum_field@@Base+0x79>
  42eb25:	mov    rax,QWORD PTR [rbp-0x18]
  42eb29:	movzx  eax,BYTE PTR [rax+0x34]
  42eb2d:	test   al,al
  42eb2f:	je     42eb4c <flatcc_json_printer_int32_enum_field@@Base+0x79>
  42eb31:	jmp    42ebe1 <flatcc_json_printer_int32_enum_field@@Base+0x10e>
  42eb36:	mov    rax,QWORD PTR [rbp-0x18]
  42eb3a:	movzx  eax,BYTE PTR [rax+0x35]
  42eb3e:	test   al,al
  42eb40:	je     42ebe0 <flatcc_json_printer_int32_enum_field@@Base+0x10d>
  42eb46:	mov    eax,DWORD PTR [rbp-0x34]
  42eb49:	mov    DWORD PTR [rbp-0xc],eax
  42eb4c:	mov    rax,QWORD PTR [rbp-0x20]
  42eb50:	mov    eax,DWORD PTR [rax+0x18]
  42eb53:	lea    ecx,[rax+0x1]
  42eb56:	mov    rdx,QWORD PTR [rbp-0x20]
  42eb5a:	mov    DWORD PTR [rdx+0x18],ecx
  42eb5d:	test   eax,eax
  42eb5f:	je     42eb78 <flatcc_json_printer_int32_enum_field@@Base+0xa5>
  42eb61:	mov    rax,QWORD PTR [rbp-0x18]
  42eb65:	mov    rax,QWORD PTR [rax+0x28]
  42eb69:	lea    rcx,[rax+0x1]
  42eb6d:	mov    rdx,QWORD PTR [rbp-0x18]
  42eb71:	mov    QWORD PTR [rdx+0x28],rcx
  42eb75:	mov    BYTE PTR [rax],0x2c
  42eb78:	mov    eax,DWORD PTR [rbp-0x28]
  42eb7b:	movsxd rdx,eax
  42eb7e:	mov    rcx,QWORD PTR [rbp-0x30]
  42eb82:	mov    rax,QWORD PTR [rbp-0x18]
  42eb86:	mov    rsi,rcx
  42eb89:	mov    rdi,rax
  42eb8c:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42eb91:	mov    rax,QWORD PTR [rbp-0x18]
  42eb95:	movzx  eax,BYTE PTR [rax+0x33]
  42eb99:	test   al,al
  42eb9b:	je     42ebcc <flatcc_json_printer_int32_enum_field@@Base+0xf9>
  42eb9d:	mov    rax,QWORD PTR [rbp-0x18]
  42eba1:	mov    rdx,QWORD PTR [rax+0x28]
  42eba5:	mov    eax,DWORD PTR [rbp-0xc]
  42eba8:	mov    rsi,rdx
  42ebab:	mov    edi,eax
  42ebad:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42ebb2:	mov    ecx,eax
  42ebb4:	mov    rax,QWORD PTR [rbp-0x18]
  42ebb8:	mov    rdx,QWORD PTR [rax+0x28]
  42ebbc:	movsxd rax,ecx
  42ebbf:	add    rdx,rax
  42ebc2:	mov    rax,QWORD PTR [rbp-0x18]
  42ebc6:	mov    QWORD PTR [rax+0x28],rdx
  42ebca:	jmp    42ebe1 <flatcc_json_printer_int32_enum_field@@Base+0x10e>
  42ebcc:	mov    ecx,DWORD PTR [rbp-0xc]
  42ebcf:	mov    rdx,QWORD PTR [rbp-0x18]
  42ebd3:	mov    rax,QWORD PTR [rbp+0x10]
  42ebd7:	mov    esi,ecx
  42ebd9:	mov    rdi,rdx
  42ebdc:	call   rax
  42ebde:	jmp    42ebe1 <flatcc_json_printer_int32_enum_field@@Base+0x10e>
  42ebe0:	nop
  42ebe1:	leave  
  42ebe2:	ret    

000000000042ebe3 <flatcc_json_printer_int64_enum_field@@Base>:
  42ebe3:	push   rbp
  42ebe4:	mov    rbp,rsp
  42ebe7:	sub    rsp,0x40
  42ebeb:	mov    QWORD PTR [rbp-0x18],rdi
  42ebef:	mov    QWORD PTR [rbp-0x20],rsi
  42ebf3:	mov    DWORD PTR [rbp-0x24],edx
  42ebf6:	mov    QWORD PTR [rbp-0x30],rcx
  42ebfa:	mov    DWORD PTR [rbp-0x28],r8d
  42ebfe:	mov    QWORD PTR [rbp-0x38],r9
  42ec02:	mov    edx,DWORD PTR [rbp-0x24]
  42ec05:	mov    rax,QWORD PTR [rbp-0x20]
  42ec09:	mov    esi,edx
  42ec0b:	mov    rdi,rax
  42ec0e:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42ec13:	mov    QWORD PTR [rbp-0x8],rax
  42ec17:	cmp    QWORD PTR [rbp-0x8],0x0
  42ec1c:	je     42ec49 <flatcc_json_printer_int64_enum_field@@Base+0x66>
  42ec1e:	mov    rax,QWORD PTR [rbp-0x8]
  42ec22:	mov    rdi,rax
  42ec25:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  42ec2a:	mov    QWORD PTR [rbp-0x10],rax
  42ec2e:	mov    rax,QWORD PTR [rbp-0x10]
  42ec32:	cmp    rax,QWORD PTR [rbp-0x38]
  42ec36:	jne    42ec61 <flatcc_json_printer_int64_enum_field@@Base+0x7e>
  42ec38:	mov    rax,QWORD PTR [rbp-0x18]
  42ec3c:	movzx  eax,BYTE PTR [rax+0x34]
  42ec40:	test   al,al
  42ec42:	je     42ec61 <flatcc_json_printer_int64_enum_field@@Base+0x7e>
  42ec44:	jmp    42ecfa <flatcc_json_printer_int64_enum_field@@Base+0x117>
  42ec49:	mov    rax,QWORD PTR [rbp-0x18]
  42ec4d:	movzx  eax,BYTE PTR [rax+0x35]
  42ec51:	test   al,al
  42ec53:	je     42ecf9 <flatcc_json_printer_int64_enum_field@@Base+0x116>
  42ec59:	mov    rax,QWORD PTR [rbp-0x38]
  42ec5d:	mov    QWORD PTR [rbp-0x10],rax
  42ec61:	mov    rax,QWORD PTR [rbp-0x20]
  42ec65:	mov    eax,DWORD PTR [rax+0x18]
  42ec68:	lea    ecx,[rax+0x1]
  42ec6b:	mov    rdx,QWORD PTR [rbp-0x20]
  42ec6f:	mov    DWORD PTR [rdx+0x18],ecx
  42ec72:	test   eax,eax
  42ec74:	je     42ec8d <flatcc_json_printer_int64_enum_field@@Base+0xaa>
  42ec76:	mov    rax,QWORD PTR [rbp-0x18]
  42ec7a:	mov    rax,QWORD PTR [rax+0x28]
  42ec7e:	lea    rcx,[rax+0x1]
  42ec82:	mov    rdx,QWORD PTR [rbp-0x18]
  42ec86:	mov    QWORD PTR [rdx+0x28],rcx
  42ec8a:	mov    BYTE PTR [rax],0x2c
  42ec8d:	mov    eax,DWORD PTR [rbp-0x28]
  42ec90:	movsxd rdx,eax
  42ec93:	mov    rcx,QWORD PTR [rbp-0x30]
  42ec97:	mov    rax,QWORD PTR [rbp-0x18]
  42ec9b:	mov    rsi,rcx
  42ec9e:	mov    rdi,rax
  42eca1:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42eca6:	mov    rax,QWORD PTR [rbp-0x18]
  42ecaa:	movzx  eax,BYTE PTR [rax+0x33]
  42ecae:	test   al,al
  42ecb0:	je     42ece3 <flatcc_json_printer_int64_enum_field@@Base+0x100>
  42ecb2:	mov    rax,QWORD PTR [rbp-0x18]
  42ecb6:	mov    rdx,QWORD PTR [rax+0x28]
  42ecba:	mov    rax,QWORD PTR [rbp-0x10]
  42ecbe:	mov    rsi,rdx
  42ecc1:	mov    rdi,rax
  42ecc4:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42ecc9:	mov    ecx,eax
  42eccb:	mov    rax,QWORD PTR [rbp-0x18]
  42eccf:	mov    rdx,QWORD PTR [rax+0x28]
  42ecd3:	movsxd rax,ecx
  42ecd6:	add    rdx,rax
  42ecd9:	mov    rax,QWORD PTR [rbp-0x18]
  42ecdd:	mov    QWORD PTR [rax+0x28],rdx
  42ece1:	jmp    42ecfa <flatcc_json_printer_int64_enum_field@@Base+0x117>
  42ece3:	mov    rcx,QWORD PTR [rbp-0x10]
  42ece7:	mov    rdx,QWORD PTR [rbp-0x18]
  42eceb:	mov    rax,QWORD PTR [rbp+0x10]
  42ecef:	mov    rsi,rcx
  42ecf2:	mov    rdi,rdx
  42ecf5:	call   rax
  42ecf7:	jmp    42ecfa <flatcc_json_printer_int64_enum_field@@Base+0x117>
  42ecf9:	nop
  42ecfa:	leave  
  42ecfb:	ret    

000000000042ecfc <flatcc_json_printer_bool_enum_field@@Base>:
  42ecfc:	push   rbp
  42ecfd:	mov    rbp,rsp
  42ed00:	sub    rsp,0x40
  42ed04:	mov    QWORD PTR [rbp-0x18],rdi
  42ed08:	mov    QWORD PTR [rbp-0x20],rsi
  42ed0c:	mov    DWORD PTR [rbp-0x24],edx
  42ed0f:	mov    QWORD PTR [rbp-0x30],rcx
  42ed13:	mov    DWORD PTR [rbp-0x28],r8d
  42ed17:	mov    eax,r9d
  42ed1a:	mov    BYTE PTR [rbp-0x34],al
  42ed1d:	mov    edx,DWORD PTR [rbp-0x24]
  42ed20:	mov    rax,QWORD PTR [rbp-0x20]
  42ed24:	mov    esi,edx
  42ed26:	mov    rdi,rax
  42ed29:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42ed2e:	mov    QWORD PTR [rbp-0x8],rax
  42ed32:	cmp    QWORD PTR [rbp-0x8],0x0
  42ed37:	je     42ed62 <flatcc_json_printer_bool_enum_field@@Base+0x66>
  42ed39:	mov    rax,QWORD PTR [rbp-0x8]
  42ed3d:	mov    rdi,rax
  42ed40:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  42ed45:	mov    BYTE PTR [rbp-0x9],al
  42ed48:	movzx  eax,BYTE PTR [rbp-0x9]
  42ed4c:	cmp    al,BYTE PTR [rbp-0x34]
  42ed4f:	jne    42ed79 <flatcc_json_printer_bool_enum_field@@Base+0x7d>
  42ed51:	mov    rax,QWORD PTR [rbp-0x18]
  42ed55:	movzx  eax,BYTE PTR [rax+0x34]
  42ed59:	test   al,al
  42ed5b:	je     42ed79 <flatcc_json_printer_bool_enum_field@@Base+0x7d>
  42ed5d:	jmp    42ee10 <flatcc_json_printer_bool_enum_field@@Base+0x114>
  42ed62:	mov    rax,QWORD PTR [rbp-0x18]
  42ed66:	movzx  eax,BYTE PTR [rax+0x35]
  42ed6a:	test   al,al
  42ed6c:	je     42ee0f <flatcc_json_printer_bool_enum_field@@Base+0x113>
  42ed72:	movzx  eax,BYTE PTR [rbp-0x34]
  42ed76:	mov    BYTE PTR [rbp-0x9],al
  42ed79:	mov    rax,QWORD PTR [rbp-0x20]
  42ed7d:	mov    eax,DWORD PTR [rax+0x18]
  42ed80:	lea    ecx,[rax+0x1]
  42ed83:	mov    rdx,QWORD PTR [rbp-0x20]
  42ed87:	mov    DWORD PTR [rdx+0x18],ecx
  42ed8a:	test   eax,eax
  42ed8c:	je     42eda5 <flatcc_json_printer_bool_enum_field@@Base+0xa9>
  42ed8e:	mov    rax,QWORD PTR [rbp-0x18]
  42ed92:	mov    rax,QWORD PTR [rax+0x28]
  42ed96:	lea    rcx,[rax+0x1]
  42ed9a:	mov    rdx,QWORD PTR [rbp-0x18]
  42ed9e:	mov    QWORD PTR [rdx+0x28],rcx
  42eda2:	mov    BYTE PTR [rax],0x2c
  42eda5:	mov    eax,DWORD PTR [rbp-0x28]
  42eda8:	movsxd rdx,eax
  42edab:	mov    rcx,QWORD PTR [rbp-0x30]
  42edaf:	mov    rax,QWORD PTR [rbp-0x18]
  42edb3:	mov    rsi,rcx
  42edb6:	mov    rdi,rax
  42edb9:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42edbe:	mov    rax,QWORD PTR [rbp-0x18]
  42edc2:	movzx  eax,BYTE PTR [rax+0x33]
  42edc6:	test   al,al
  42edc8:	je     42edfa <flatcc_json_printer_bool_enum_field@@Base+0xfe>
  42edca:	mov    rax,QWORD PTR [rbp-0x18]
  42edce:	mov    rdx,QWORD PTR [rax+0x28]
  42edd2:	movzx  eax,BYTE PTR [rbp-0x9]
  42edd6:	mov    rsi,rdx
  42edd9:	mov    edi,eax
  42eddb:	call   429656 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42ede0:	mov    ecx,eax
  42ede2:	mov    rax,QWORD PTR [rbp-0x18]
  42ede6:	mov    rdx,QWORD PTR [rax+0x28]
  42edea:	movsxd rax,ecx
  42eded:	add    rdx,rax
  42edf0:	mov    rax,QWORD PTR [rbp-0x18]
  42edf4:	mov    QWORD PTR [rax+0x28],rdx
  42edf8:	jmp    42ee10 <flatcc_json_printer_bool_enum_field@@Base+0x114>
  42edfa:	movzx  ecx,BYTE PTR [rbp-0x9]
  42edfe:	mov    rdx,QWORD PTR [rbp-0x18]
  42ee02:	mov    rax,QWORD PTR [rbp+0x10]
  42ee06:	mov    esi,ecx
  42ee08:	mov    rdi,rdx
  42ee0b:	call   rax
  42ee0d:	jmp    42ee10 <flatcc_json_printer_bool_enum_field@@Base+0x114>
  42ee0f:	nop
  42ee10:	leave  
  42ee11:	ret    

000000000042ee12 <flatcc_json_printer_uint8_struct_field@@Base>:
  42ee12:	push   rbp
  42ee13:	mov    rbp,rsp
  42ee16:	sub    rsp,0x40
  42ee1a:	mov    QWORD PTR [rbp-0x18],rdi
  42ee1e:	mov    DWORD PTR [rbp-0x1c],esi
  42ee21:	mov    QWORD PTR [rbp-0x28],rdx
  42ee25:	mov    QWORD PTR [rbp-0x30],rcx
  42ee29:	mov    QWORD PTR [rbp-0x38],r8
  42ee2d:	mov    DWORD PTR [rbp-0x20],r9d
  42ee31:	mov    rdx,QWORD PTR [rbp-0x28]
  42ee35:	mov    rax,QWORD PTR [rbp-0x30]
  42ee39:	add    rax,rdx
  42ee3c:	mov    rdi,rax
  42ee3f:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  42ee44:	mov    BYTE PTR [rbp-0x1],al
  42ee47:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ee4b:	je     42ee64 <flatcc_json_printer_uint8_struct_field@@Base+0x52>
  42ee4d:	mov    rax,QWORD PTR [rbp-0x18]
  42ee51:	mov    rax,QWORD PTR [rax+0x28]
  42ee55:	lea    rcx,[rax+0x1]
  42ee59:	mov    rdx,QWORD PTR [rbp-0x18]
  42ee5d:	mov    QWORD PTR [rdx+0x28],rcx
  42ee61:	mov    BYTE PTR [rax],0x2c
  42ee64:	mov    eax,DWORD PTR [rbp-0x20]
  42ee67:	movsxd rdx,eax
  42ee6a:	mov    rcx,QWORD PTR [rbp-0x38]
  42ee6e:	mov    rax,QWORD PTR [rbp-0x18]
  42ee72:	mov    rsi,rcx
  42ee75:	mov    rdi,rax
  42ee78:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42ee7d:	mov    rax,QWORD PTR [rbp-0x18]
  42ee81:	mov    rdx,QWORD PTR [rax+0x28]
  42ee85:	movzx  eax,BYTE PTR [rbp-0x1]
  42ee89:	mov    rsi,rdx
  42ee8c:	mov    edi,eax
  42ee8e:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42ee93:	mov    ecx,eax
  42ee95:	mov    rax,QWORD PTR [rbp-0x18]
  42ee99:	mov    rdx,QWORD PTR [rax+0x28]
  42ee9d:	movsxd rax,ecx
  42eea0:	add    rdx,rax
  42eea3:	mov    rax,QWORD PTR [rbp-0x18]
  42eea7:	mov    QWORD PTR [rax+0x28],rdx
  42eeab:	nop
  42eeac:	leave  
  42eead:	ret    

000000000042eeae <flatcc_json_printer_uint16_struct_field@@Base>:
  42eeae:	push   rbp
  42eeaf:	mov    rbp,rsp
  42eeb2:	sub    rsp,0x40
  42eeb6:	mov    QWORD PTR [rbp-0x18],rdi
  42eeba:	mov    DWORD PTR [rbp-0x1c],esi
  42eebd:	mov    QWORD PTR [rbp-0x28],rdx
  42eec1:	mov    QWORD PTR [rbp-0x30],rcx
  42eec5:	mov    QWORD PTR [rbp-0x38],r8
  42eec9:	mov    DWORD PTR [rbp-0x20],r9d
  42eecd:	mov    rdx,QWORD PTR [rbp-0x28]
  42eed1:	mov    rax,QWORD PTR [rbp-0x30]
  42eed5:	add    rax,rdx
  42eed8:	mov    rdi,rax
  42eedb:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  42eee0:	mov    WORD PTR [rbp-0x2],ax
  42eee4:	cmp    DWORD PTR [rbp-0x1c],0x0
  42eee8:	je     42ef01 <flatcc_json_printer_uint16_struct_field@@Base+0x53>
  42eeea:	mov    rax,QWORD PTR [rbp-0x18]
  42eeee:	mov    rax,QWORD PTR [rax+0x28]
  42eef2:	lea    rcx,[rax+0x1]
  42eef6:	mov    rdx,QWORD PTR [rbp-0x18]
  42eefa:	mov    QWORD PTR [rdx+0x28],rcx
  42eefe:	mov    BYTE PTR [rax],0x2c
  42ef01:	mov    eax,DWORD PTR [rbp-0x20]
  42ef04:	movsxd rdx,eax
  42ef07:	mov    rcx,QWORD PTR [rbp-0x38]
  42ef0b:	mov    rax,QWORD PTR [rbp-0x18]
  42ef0f:	mov    rsi,rcx
  42ef12:	mov    rdi,rax
  42ef15:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42ef1a:	mov    rax,QWORD PTR [rbp-0x18]
  42ef1e:	mov    rdx,QWORD PTR [rax+0x28]
  42ef22:	movzx  eax,WORD PTR [rbp-0x2]
  42ef26:	mov    rsi,rdx
  42ef29:	mov    edi,eax
  42ef2b:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42ef30:	mov    ecx,eax
  42ef32:	mov    rax,QWORD PTR [rbp-0x18]
  42ef36:	mov    rdx,QWORD PTR [rax+0x28]
  42ef3a:	movsxd rax,ecx
  42ef3d:	add    rdx,rax
  42ef40:	mov    rax,QWORD PTR [rbp-0x18]
  42ef44:	mov    QWORD PTR [rax+0x28],rdx
  42ef48:	nop
  42ef49:	leave  
  42ef4a:	ret    

000000000042ef4b <flatcc_json_printer_uint32_struct_field@@Base>:
  42ef4b:	push   rbp
  42ef4c:	mov    rbp,rsp
  42ef4f:	sub    rsp,0x40
  42ef53:	mov    QWORD PTR [rbp-0x18],rdi
  42ef57:	mov    DWORD PTR [rbp-0x1c],esi
  42ef5a:	mov    QWORD PTR [rbp-0x28],rdx
  42ef5e:	mov    QWORD PTR [rbp-0x30],rcx
  42ef62:	mov    QWORD PTR [rbp-0x38],r8
  42ef66:	mov    DWORD PTR [rbp-0x20],r9d
  42ef6a:	mov    rdx,QWORD PTR [rbp-0x28]
  42ef6e:	mov    rax,QWORD PTR [rbp-0x30]
  42ef72:	add    rax,rdx
  42ef75:	mov    rdi,rax
  42ef78:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42ef7d:	mov    DWORD PTR [rbp-0x4],eax
  42ef80:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ef84:	je     42ef9d <flatcc_json_printer_uint32_struct_field@@Base+0x52>
  42ef86:	mov    rax,QWORD PTR [rbp-0x18]
  42ef8a:	mov    rax,QWORD PTR [rax+0x28]
  42ef8e:	lea    rcx,[rax+0x1]
  42ef92:	mov    rdx,QWORD PTR [rbp-0x18]
  42ef96:	mov    QWORD PTR [rdx+0x28],rcx
  42ef9a:	mov    BYTE PTR [rax],0x2c
  42ef9d:	mov    eax,DWORD PTR [rbp-0x20]
  42efa0:	movsxd rdx,eax
  42efa3:	mov    rcx,QWORD PTR [rbp-0x38]
  42efa7:	mov    rax,QWORD PTR [rbp-0x18]
  42efab:	mov    rsi,rcx
  42efae:	mov    rdi,rax
  42efb1:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42efb6:	mov    rax,QWORD PTR [rbp-0x18]
  42efba:	mov    rdx,QWORD PTR [rax+0x28]
  42efbe:	mov    eax,DWORD PTR [rbp-0x4]
  42efc1:	mov    rsi,rdx
  42efc4:	mov    edi,eax
  42efc6:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42efcb:	mov    ecx,eax
  42efcd:	mov    rax,QWORD PTR [rbp-0x18]
  42efd1:	mov    rdx,QWORD PTR [rax+0x28]
  42efd5:	movsxd rax,ecx
  42efd8:	add    rdx,rax
  42efdb:	mov    rax,QWORD PTR [rbp-0x18]
  42efdf:	mov    QWORD PTR [rax+0x28],rdx
  42efe3:	nop
  42efe4:	leave  
  42efe5:	ret    

000000000042efe6 <flatcc_json_printer_uint64_struct_field@@Base>:
  42efe6:	push   rbp
  42efe7:	mov    rbp,rsp
  42efea:	sub    rsp,0x40
  42efee:	mov    QWORD PTR [rbp-0x18],rdi
  42eff2:	mov    DWORD PTR [rbp-0x1c],esi
  42eff5:	mov    QWORD PTR [rbp-0x28],rdx
  42eff9:	mov    QWORD PTR [rbp-0x30],rcx
  42effd:	mov    QWORD PTR [rbp-0x38],r8
  42f001:	mov    DWORD PTR [rbp-0x20],r9d
  42f005:	mov    rdx,QWORD PTR [rbp-0x28]
  42f009:	mov    rax,QWORD PTR [rbp-0x30]
  42f00d:	add    rax,rdx
  42f010:	mov    rdi,rax
  42f013:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42f018:	mov    QWORD PTR [rbp-0x8],rax
  42f01c:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f020:	je     42f039 <flatcc_json_printer_uint64_struct_field@@Base+0x53>
  42f022:	mov    rax,QWORD PTR [rbp-0x18]
  42f026:	mov    rax,QWORD PTR [rax+0x28]
  42f02a:	lea    rcx,[rax+0x1]
  42f02e:	mov    rdx,QWORD PTR [rbp-0x18]
  42f032:	mov    QWORD PTR [rdx+0x28],rcx
  42f036:	mov    BYTE PTR [rax],0x2c
  42f039:	mov    eax,DWORD PTR [rbp-0x20]
  42f03c:	movsxd rdx,eax
  42f03f:	mov    rcx,QWORD PTR [rbp-0x38]
  42f043:	mov    rax,QWORD PTR [rbp-0x18]
  42f047:	mov    rsi,rcx
  42f04a:	mov    rdi,rax
  42f04d:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f052:	mov    rax,QWORD PTR [rbp-0x18]
  42f056:	mov    rdx,QWORD PTR [rax+0x28]
  42f05a:	mov    rax,QWORD PTR [rbp-0x8]
  42f05e:	mov    rsi,rdx
  42f061:	mov    rdi,rax
  42f064:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42f069:	mov    ecx,eax
  42f06b:	mov    rax,QWORD PTR [rbp-0x18]
  42f06f:	mov    rdx,QWORD PTR [rax+0x28]
  42f073:	movsxd rax,ecx
  42f076:	add    rdx,rax
  42f079:	mov    rax,QWORD PTR [rbp-0x18]
  42f07d:	mov    QWORD PTR [rax+0x28],rdx
  42f081:	nop
  42f082:	leave  
  42f083:	ret    

000000000042f084 <flatcc_json_printer_int8_struct_field@@Base>:
  42f084:	push   rbp
  42f085:	mov    rbp,rsp
  42f088:	sub    rsp,0x40
  42f08c:	mov    QWORD PTR [rbp-0x18],rdi
  42f090:	mov    DWORD PTR [rbp-0x1c],esi
  42f093:	mov    QWORD PTR [rbp-0x28],rdx
  42f097:	mov    QWORD PTR [rbp-0x30],rcx
  42f09b:	mov    QWORD PTR [rbp-0x38],r8
  42f09f:	mov    DWORD PTR [rbp-0x20],r9d
  42f0a3:	mov    rdx,QWORD PTR [rbp-0x28]
  42f0a7:	mov    rax,QWORD PTR [rbp-0x30]
  42f0ab:	add    rax,rdx
  42f0ae:	mov    rdi,rax
  42f0b1:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  42f0b6:	mov    BYTE PTR [rbp-0x1],al
  42f0b9:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f0bd:	je     42f0d6 <flatcc_json_printer_int8_struct_field@@Base+0x52>
  42f0bf:	mov    rax,QWORD PTR [rbp-0x18]
  42f0c3:	mov    rax,QWORD PTR [rax+0x28]
  42f0c7:	lea    rcx,[rax+0x1]
  42f0cb:	mov    rdx,QWORD PTR [rbp-0x18]
  42f0cf:	mov    QWORD PTR [rdx+0x28],rcx
  42f0d3:	mov    BYTE PTR [rax],0x2c
  42f0d6:	mov    eax,DWORD PTR [rbp-0x20]
  42f0d9:	movsxd rdx,eax
  42f0dc:	mov    rcx,QWORD PTR [rbp-0x38]
  42f0e0:	mov    rax,QWORD PTR [rbp-0x18]
  42f0e4:	mov    rsi,rcx
  42f0e7:	mov    rdi,rax
  42f0ea:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f0ef:	mov    rax,QWORD PTR [rbp-0x18]
  42f0f3:	mov    rdx,QWORD PTR [rax+0x28]
  42f0f7:	movsx  eax,BYTE PTR [rbp-0x1]
  42f0fb:	mov    rsi,rdx
  42f0fe:	mov    edi,eax
  42f100:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42f105:	mov    ecx,eax
  42f107:	mov    rax,QWORD PTR [rbp-0x18]
  42f10b:	mov    rdx,QWORD PTR [rax+0x28]
  42f10f:	movsxd rax,ecx
  42f112:	add    rdx,rax
  42f115:	mov    rax,QWORD PTR [rbp-0x18]
  42f119:	mov    QWORD PTR [rax+0x28],rdx
  42f11d:	nop
  42f11e:	leave  
  42f11f:	ret    

000000000042f120 <flatcc_json_printer_int16_struct_field@@Base>:
  42f120:	push   rbp
  42f121:	mov    rbp,rsp
  42f124:	sub    rsp,0x40
  42f128:	mov    QWORD PTR [rbp-0x18],rdi
  42f12c:	mov    DWORD PTR [rbp-0x1c],esi
  42f12f:	mov    QWORD PTR [rbp-0x28],rdx
  42f133:	mov    QWORD PTR [rbp-0x30],rcx
  42f137:	mov    QWORD PTR [rbp-0x38],r8
  42f13b:	mov    DWORD PTR [rbp-0x20],r9d
  42f13f:	mov    rdx,QWORD PTR [rbp-0x28]
  42f143:	mov    rax,QWORD PTR [rbp-0x30]
  42f147:	add    rax,rdx
  42f14a:	mov    rdi,rax
  42f14d:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42f152:	mov    WORD PTR [rbp-0x2],ax
  42f156:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f15a:	je     42f173 <flatcc_json_printer_int16_struct_field@@Base+0x53>
  42f15c:	mov    rax,QWORD PTR [rbp-0x18]
  42f160:	mov    rax,QWORD PTR [rax+0x28]
  42f164:	lea    rcx,[rax+0x1]
  42f168:	mov    rdx,QWORD PTR [rbp-0x18]
  42f16c:	mov    QWORD PTR [rdx+0x28],rcx
  42f170:	mov    BYTE PTR [rax],0x2c
  42f173:	mov    eax,DWORD PTR [rbp-0x20]
  42f176:	movsxd rdx,eax
  42f179:	mov    rcx,QWORD PTR [rbp-0x38]
  42f17d:	mov    rax,QWORD PTR [rbp-0x18]
  42f181:	mov    rsi,rcx
  42f184:	mov    rdi,rax
  42f187:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f18c:	mov    rax,QWORD PTR [rbp-0x18]
  42f190:	mov    rdx,QWORD PTR [rax+0x28]
  42f194:	movsx  eax,WORD PTR [rbp-0x2]
  42f198:	mov    rsi,rdx
  42f19b:	mov    edi,eax
  42f19d:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42f1a2:	mov    ecx,eax
  42f1a4:	mov    rax,QWORD PTR [rbp-0x18]
  42f1a8:	mov    rdx,QWORD PTR [rax+0x28]
  42f1ac:	movsxd rax,ecx
  42f1af:	add    rdx,rax
  42f1b2:	mov    rax,QWORD PTR [rbp-0x18]
  42f1b6:	mov    QWORD PTR [rax+0x28],rdx
  42f1ba:	nop
  42f1bb:	leave  
  42f1bc:	ret    

000000000042f1bd <flatcc_json_printer_int32_struct_field@@Base>:
  42f1bd:	push   rbp
  42f1be:	mov    rbp,rsp
  42f1c1:	sub    rsp,0x40
  42f1c5:	mov    QWORD PTR [rbp-0x18],rdi
  42f1c9:	mov    DWORD PTR [rbp-0x1c],esi
  42f1cc:	mov    QWORD PTR [rbp-0x28],rdx
  42f1d0:	mov    QWORD PTR [rbp-0x30],rcx
  42f1d4:	mov    QWORD PTR [rbp-0x38],r8
  42f1d8:	mov    DWORD PTR [rbp-0x20],r9d
  42f1dc:	mov    rdx,QWORD PTR [rbp-0x28]
  42f1e0:	mov    rax,QWORD PTR [rbp-0x30]
  42f1e4:	add    rax,rdx
  42f1e7:	mov    rdi,rax
  42f1ea:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42f1ef:	mov    DWORD PTR [rbp-0x4],eax
  42f1f2:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f1f6:	je     42f20f <flatcc_json_printer_int32_struct_field@@Base+0x52>
  42f1f8:	mov    rax,QWORD PTR [rbp-0x18]
  42f1fc:	mov    rax,QWORD PTR [rax+0x28]
  42f200:	lea    rcx,[rax+0x1]
  42f204:	mov    rdx,QWORD PTR [rbp-0x18]
  42f208:	mov    QWORD PTR [rdx+0x28],rcx
  42f20c:	mov    BYTE PTR [rax],0x2c
  42f20f:	mov    eax,DWORD PTR [rbp-0x20]
  42f212:	movsxd rdx,eax
  42f215:	mov    rcx,QWORD PTR [rbp-0x38]
  42f219:	mov    rax,QWORD PTR [rbp-0x18]
  42f21d:	mov    rsi,rcx
  42f220:	mov    rdi,rax
  42f223:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f228:	mov    rax,QWORD PTR [rbp-0x18]
  42f22c:	mov    rdx,QWORD PTR [rax+0x28]
  42f230:	mov    eax,DWORD PTR [rbp-0x4]
  42f233:	mov    rsi,rdx
  42f236:	mov    edi,eax
  42f238:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42f23d:	mov    ecx,eax
  42f23f:	mov    rax,QWORD PTR [rbp-0x18]
  42f243:	mov    rdx,QWORD PTR [rax+0x28]
  42f247:	movsxd rax,ecx
  42f24a:	add    rdx,rax
  42f24d:	mov    rax,QWORD PTR [rbp-0x18]
  42f251:	mov    QWORD PTR [rax+0x28],rdx
  42f255:	nop
  42f256:	leave  
  42f257:	ret    

000000000042f258 <flatcc_json_printer_int64_struct_field@@Base>:
  42f258:	push   rbp
  42f259:	mov    rbp,rsp
  42f25c:	sub    rsp,0x40
  42f260:	mov    QWORD PTR [rbp-0x18],rdi
  42f264:	mov    DWORD PTR [rbp-0x1c],esi
  42f267:	mov    QWORD PTR [rbp-0x28],rdx
  42f26b:	mov    QWORD PTR [rbp-0x30],rcx
  42f26f:	mov    QWORD PTR [rbp-0x38],r8
  42f273:	mov    DWORD PTR [rbp-0x20],r9d
  42f277:	mov    rdx,QWORD PTR [rbp-0x28]
  42f27b:	mov    rax,QWORD PTR [rbp-0x30]
  42f27f:	add    rax,rdx
  42f282:	mov    rdi,rax
  42f285:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  42f28a:	mov    QWORD PTR [rbp-0x8],rax
  42f28e:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f292:	je     42f2ab <flatcc_json_printer_int64_struct_field@@Base+0x53>
  42f294:	mov    rax,QWORD PTR [rbp-0x18]
  42f298:	mov    rax,QWORD PTR [rax+0x28]
  42f29c:	lea    rcx,[rax+0x1]
  42f2a0:	mov    rdx,QWORD PTR [rbp-0x18]
  42f2a4:	mov    QWORD PTR [rdx+0x28],rcx
  42f2a8:	mov    BYTE PTR [rax],0x2c
  42f2ab:	mov    eax,DWORD PTR [rbp-0x20]
  42f2ae:	movsxd rdx,eax
  42f2b1:	mov    rcx,QWORD PTR [rbp-0x38]
  42f2b5:	mov    rax,QWORD PTR [rbp-0x18]
  42f2b9:	mov    rsi,rcx
  42f2bc:	mov    rdi,rax
  42f2bf:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f2c4:	mov    rax,QWORD PTR [rbp-0x18]
  42f2c8:	mov    rdx,QWORD PTR [rax+0x28]
  42f2cc:	mov    rax,QWORD PTR [rbp-0x8]
  42f2d0:	mov    rsi,rdx
  42f2d3:	mov    rdi,rax
  42f2d6:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42f2db:	mov    ecx,eax
  42f2dd:	mov    rax,QWORD PTR [rbp-0x18]
  42f2e1:	mov    rdx,QWORD PTR [rax+0x28]
  42f2e5:	movsxd rax,ecx
  42f2e8:	add    rdx,rax
  42f2eb:	mov    rax,QWORD PTR [rbp-0x18]
  42f2ef:	mov    QWORD PTR [rax+0x28],rdx
  42f2f3:	nop
  42f2f4:	leave  
  42f2f5:	ret    

000000000042f2f6 <flatcc_json_printer_bool_struct_field@@Base>:
  42f2f6:	push   rbp
  42f2f7:	mov    rbp,rsp
  42f2fa:	sub    rsp,0x40
  42f2fe:	mov    QWORD PTR [rbp-0x18],rdi
  42f302:	mov    DWORD PTR [rbp-0x1c],esi
  42f305:	mov    QWORD PTR [rbp-0x28],rdx
  42f309:	mov    QWORD PTR [rbp-0x30],rcx
  42f30d:	mov    QWORD PTR [rbp-0x38],r8
  42f311:	mov    DWORD PTR [rbp-0x20],r9d
  42f315:	mov    rdx,QWORD PTR [rbp-0x28]
  42f319:	mov    rax,QWORD PTR [rbp-0x30]
  42f31d:	add    rax,rdx
  42f320:	mov    rdi,rax
  42f323:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  42f328:	mov    BYTE PTR [rbp-0x1],al
  42f32b:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f32f:	je     42f348 <flatcc_json_printer_bool_struct_field@@Base+0x52>
  42f331:	mov    rax,QWORD PTR [rbp-0x18]
  42f335:	mov    rax,QWORD PTR [rax+0x28]
  42f339:	lea    rcx,[rax+0x1]
  42f33d:	mov    rdx,QWORD PTR [rbp-0x18]
  42f341:	mov    QWORD PTR [rdx+0x28],rcx
  42f345:	mov    BYTE PTR [rax],0x2c
  42f348:	mov    eax,DWORD PTR [rbp-0x20]
  42f34b:	movsxd rdx,eax
  42f34e:	mov    rcx,QWORD PTR [rbp-0x38]
  42f352:	mov    rax,QWORD PTR [rbp-0x18]
  42f356:	mov    rsi,rcx
  42f359:	mov    rdi,rax
  42f35c:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f361:	mov    rax,QWORD PTR [rbp-0x18]
  42f365:	mov    rdx,QWORD PTR [rax+0x28]
  42f369:	movzx  eax,BYTE PTR [rbp-0x1]
  42f36d:	mov    rsi,rdx
  42f370:	mov    edi,eax
  42f372:	call   429656 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42f377:	mov    ecx,eax
  42f379:	mov    rax,QWORD PTR [rbp-0x18]
  42f37d:	mov    rdx,QWORD PTR [rax+0x28]
  42f381:	movsxd rax,ecx
  42f384:	add    rdx,rax
  42f387:	mov    rax,QWORD PTR [rbp-0x18]
  42f38b:	mov    QWORD PTR [rax+0x28],rdx
  42f38f:	nop
  42f390:	leave  
  42f391:	ret    

000000000042f392 <flatcc_json_printer_float_struct_field@@Base>:
  42f392:	push   rbp
  42f393:	mov    rbp,rsp
  42f396:	sub    rsp,0x40
  42f39a:	mov    QWORD PTR [rbp-0x18],rdi
  42f39e:	mov    DWORD PTR [rbp-0x1c],esi
  42f3a1:	mov    QWORD PTR [rbp-0x28],rdx
  42f3a5:	mov    QWORD PTR [rbp-0x30],rcx
  42f3a9:	mov    QWORD PTR [rbp-0x38],r8
  42f3ad:	mov    DWORD PTR [rbp-0x20],r9d
  42f3b1:	mov    rdx,QWORD PTR [rbp-0x28]
  42f3b5:	mov    rax,QWORD PTR [rbp-0x30]
  42f3b9:	add    rax,rdx
  42f3bc:	mov    rdi,rax
  42f3bf:	call   429468 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  42f3c4:	vmovd  eax,xmm0
  42f3c8:	mov    DWORD PTR [rbp-0x4],eax
  42f3cb:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f3cf:	je     42f3e8 <flatcc_json_printer_float_struct_field@@Base+0x56>
  42f3d1:	mov    rax,QWORD PTR [rbp-0x18]
  42f3d5:	mov    rax,QWORD PTR [rax+0x28]
  42f3d9:	lea    rcx,[rax+0x1]
  42f3dd:	mov    rdx,QWORD PTR [rbp-0x18]
  42f3e1:	mov    QWORD PTR [rdx+0x28],rcx
  42f3e5:	mov    BYTE PTR [rax],0x2c
  42f3e8:	mov    eax,DWORD PTR [rbp-0x20]
  42f3eb:	movsxd rdx,eax
  42f3ee:	mov    rcx,QWORD PTR [rbp-0x38]
  42f3f2:	mov    rax,QWORD PTR [rbp-0x18]
  42f3f6:	mov    rsi,rcx
  42f3f9:	mov    rdi,rax
  42f3fc:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f401:	mov    rax,QWORD PTR [rbp-0x18]
  42f405:	mov    rax,QWORD PTR [rax+0x28]
  42f409:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  42f40e:	mov    rdi,rax
  42f411:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42f416:	mov    ecx,eax
  42f418:	mov    rax,QWORD PTR [rbp-0x18]
  42f41c:	mov    rdx,QWORD PTR [rax+0x28]
  42f420:	movsxd rax,ecx
  42f423:	add    rdx,rax
  42f426:	mov    rax,QWORD PTR [rbp-0x18]
  42f42a:	mov    QWORD PTR [rax+0x28],rdx
  42f42e:	nop
  42f42f:	leave  
  42f430:	ret    

000000000042f431 <flatcc_json_printer_double_struct_field@@Base>:
  42f431:	push   rbp
  42f432:	mov    rbp,rsp
  42f435:	sub    rsp,0x40
  42f439:	mov    QWORD PTR [rbp-0x18],rdi
  42f43d:	mov    DWORD PTR [rbp-0x1c],esi
  42f440:	mov    QWORD PTR [rbp-0x28],rdx
  42f444:	mov    QWORD PTR [rbp-0x30],rcx
  42f448:	mov    QWORD PTR [rbp-0x38],r8
  42f44c:	mov    DWORD PTR [rbp-0x20],r9d
  42f450:	mov    rdx,QWORD PTR [rbp-0x28]
  42f454:	mov    rax,QWORD PTR [rbp-0x30]
  42f458:	add    rax,rdx
  42f45b:	mov    rdi,rax
  42f45e:	call   4294ab <flatcc_json_parser_struct_as_root@@Base+0x302>
  42f463:	vmovq  rax,xmm0
  42f468:	mov    QWORD PTR [rbp-0x8],rax
  42f46c:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f470:	je     42f489 <flatcc_json_printer_double_struct_field@@Base+0x58>
  42f472:	mov    rax,QWORD PTR [rbp-0x18]
  42f476:	mov    rax,QWORD PTR [rax+0x28]
  42f47a:	lea    rcx,[rax+0x1]
  42f47e:	mov    rdx,QWORD PTR [rbp-0x18]
  42f482:	mov    QWORD PTR [rdx+0x28],rcx
  42f486:	mov    BYTE PTR [rax],0x2c
  42f489:	mov    eax,DWORD PTR [rbp-0x20]
  42f48c:	movsxd rdx,eax
  42f48f:	mov    rcx,QWORD PTR [rbp-0x38]
  42f493:	mov    rax,QWORD PTR [rbp-0x18]
  42f497:	mov    rsi,rcx
  42f49a:	mov    rdi,rax
  42f49d:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f4a2:	mov    rax,QWORD PTR [rbp-0x18]
  42f4a6:	mov    rdx,QWORD PTR [rax+0x28]
  42f4aa:	mov    rax,QWORD PTR [rbp-0x8]
  42f4ae:	mov    rdi,rdx
  42f4b1:	mov    QWORD PTR [rbp-0x40],rax
  42f4b5:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  42f4ba:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42f4bf:	mov    ecx,eax
  42f4c1:	mov    rax,QWORD PTR [rbp-0x18]
  42f4c5:	mov    rdx,QWORD PTR [rax+0x28]
  42f4c9:	movsxd rax,ecx
  42f4cc:	add    rdx,rax
  42f4cf:	mov    rax,QWORD PTR [rbp-0x18]
  42f4d3:	mov    QWORD PTR [rax+0x28],rdx
  42f4d7:	nop
  42f4d8:	leave  
  42f4d9:	ret    

000000000042f4da <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  42f4da:	push   rbp
  42f4db:	mov    rbp,rsp
  42f4de:	sub    rsp,0x40
  42f4e2:	mov    QWORD PTR [rbp-0x18],rdi
  42f4e6:	mov    DWORD PTR [rbp-0x1c],esi
  42f4e9:	mov    QWORD PTR [rbp-0x28],rdx
  42f4ed:	mov    QWORD PTR [rbp-0x30],rcx
  42f4f1:	mov    QWORD PTR [rbp-0x38],r8
  42f4f5:	mov    DWORD PTR [rbp-0x20],r9d
  42f4f9:	mov    rdx,QWORD PTR [rbp-0x28]
  42f4fd:	mov    rax,QWORD PTR [rbp-0x30]
  42f501:	add    rax,rdx
  42f504:	mov    rdi,rax
  42f507:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  42f50c:	mov    BYTE PTR [rbp-0x1],al
  42f50f:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f513:	je     42f52c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x52>
  42f515:	mov    rax,QWORD PTR [rbp-0x18]
  42f519:	mov    rax,QWORD PTR [rax+0x28]
  42f51d:	lea    rcx,[rax+0x1]
  42f521:	mov    rdx,QWORD PTR [rbp-0x18]
  42f525:	mov    QWORD PTR [rdx+0x28],rcx
  42f529:	mov    BYTE PTR [rax],0x2c
  42f52c:	mov    eax,DWORD PTR [rbp-0x20]
  42f52f:	movsxd rdx,eax
  42f532:	mov    rcx,QWORD PTR [rbp-0x38]
  42f536:	mov    rax,QWORD PTR [rbp-0x18]
  42f53a:	mov    rsi,rcx
  42f53d:	mov    rdi,rax
  42f540:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f545:	mov    rax,QWORD PTR [rbp-0x18]
  42f549:	movzx  eax,BYTE PTR [rax+0x33]
  42f54d:	test   al,al
  42f54f:	je     42f581 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa7>
  42f551:	mov    rax,QWORD PTR [rbp-0x18]
  42f555:	mov    rdx,QWORD PTR [rax+0x28]
  42f559:	movzx  eax,BYTE PTR [rbp-0x1]
  42f55d:	mov    rsi,rdx
  42f560:	mov    edi,eax
  42f562:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42f567:	mov    ecx,eax
  42f569:	mov    rax,QWORD PTR [rbp-0x18]
  42f56d:	mov    rdx,QWORD PTR [rax+0x28]
  42f571:	movsxd rax,ecx
  42f574:	add    rdx,rax
  42f577:	mov    rax,QWORD PTR [rbp-0x18]
  42f57b:	mov    QWORD PTR [rax+0x28],rdx
  42f57f:	jmp    42f594 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xba>
  42f581:	movzx  ecx,BYTE PTR [rbp-0x1]
  42f585:	mov    rdx,QWORD PTR [rbp-0x18]
  42f589:	mov    rax,QWORD PTR [rbp+0x10]
  42f58d:	mov    esi,ecx
  42f58f:	mov    rdi,rdx
  42f592:	call   rax
  42f594:	nop
  42f595:	leave  
  42f596:	ret    

000000000042f597 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  42f597:	push   rbp
  42f598:	mov    rbp,rsp
  42f59b:	sub    rsp,0x40
  42f59f:	mov    QWORD PTR [rbp-0x18],rdi
  42f5a3:	mov    DWORD PTR [rbp-0x1c],esi
  42f5a6:	mov    QWORD PTR [rbp-0x28],rdx
  42f5aa:	mov    QWORD PTR [rbp-0x30],rcx
  42f5ae:	mov    QWORD PTR [rbp-0x38],r8
  42f5b2:	mov    DWORD PTR [rbp-0x20],r9d
  42f5b6:	mov    rdx,QWORD PTR [rbp-0x28]
  42f5ba:	mov    rax,QWORD PTR [rbp-0x30]
  42f5be:	add    rax,rdx
  42f5c1:	mov    rdi,rax
  42f5c4:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  42f5c9:	mov    WORD PTR [rbp-0x2],ax
  42f5cd:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f5d1:	je     42f5ea <flatcc_json_printer_uint16_enum_struct_field@@Base+0x53>
  42f5d3:	mov    rax,QWORD PTR [rbp-0x18]
  42f5d7:	mov    rax,QWORD PTR [rax+0x28]
  42f5db:	lea    rcx,[rax+0x1]
  42f5df:	mov    rdx,QWORD PTR [rbp-0x18]
  42f5e3:	mov    QWORD PTR [rdx+0x28],rcx
  42f5e7:	mov    BYTE PTR [rax],0x2c
  42f5ea:	mov    eax,DWORD PTR [rbp-0x20]
  42f5ed:	movsxd rdx,eax
  42f5f0:	mov    rcx,QWORD PTR [rbp-0x38]
  42f5f4:	mov    rax,QWORD PTR [rbp-0x18]
  42f5f8:	mov    rsi,rcx
  42f5fb:	mov    rdi,rax
  42f5fe:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f603:	mov    rax,QWORD PTR [rbp-0x18]
  42f607:	movzx  eax,BYTE PTR [rax+0x33]
  42f60b:	test   al,al
  42f60d:	je     42f63f <flatcc_json_printer_uint16_enum_struct_field@@Base+0xa8>
  42f60f:	mov    rax,QWORD PTR [rbp-0x18]
  42f613:	mov    rdx,QWORD PTR [rax+0x28]
  42f617:	movzx  eax,WORD PTR [rbp-0x2]
  42f61b:	mov    rsi,rdx
  42f61e:	mov    edi,eax
  42f620:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42f625:	mov    ecx,eax
  42f627:	mov    rax,QWORD PTR [rbp-0x18]
  42f62b:	mov    rdx,QWORD PTR [rax+0x28]
  42f62f:	movsxd rax,ecx
  42f632:	add    rdx,rax
  42f635:	mov    rax,QWORD PTR [rbp-0x18]
  42f639:	mov    QWORD PTR [rax+0x28],rdx
  42f63d:	jmp    42f652 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xbb>
  42f63f:	movzx  ecx,WORD PTR [rbp-0x2]
  42f643:	mov    rdx,QWORD PTR [rbp-0x18]
  42f647:	mov    rax,QWORD PTR [rbp+0x10]
  42f64b:	mov    esi,ecx
  42f64d:	mov    rdi,rdx
  42f650:	call   rax
  42f652:	nop
  42f653:	leave  
  42f654:	ret    

000000000042f655 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  42f655:	push   rbp
  42f656:	mov    rbp,rsp
  42f659:	sub    rsp,0x40
  42f65d:	mov    QWORD PTR [rbp-0x18],rdi
  42f661:	mov    DWORD PTR [rbp-0x1c],esi
  42f664:	mov    QWORD PTR [rbp-0x28],rdx
  42f668:	mov    QWORD PTR [rbp-0x30],rcx
  42f66c:	mov    QWORD PTR [rbp-0x38],r8
  42f670:	mov    DWORD PTR [rbp-0x20],r9d
  42f674:	mov    rdx,QWORD PTR [rbp-0x28]
  42f678:	mov    rax,QWORD PTR [rbp-0x30]
  42f67c:	add    rax,rdx
  42f67f:	mov    rdi,rax
  42f682:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42f687:	mov    DWORD PTR [rbp-0x4],eax
  42f68a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f68e:	je     42f6a7 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x52>
  42f690:	mov    rax,QWORD PTR [rbp-0x18]
  42f694:	mov    rax,QWORD PTR [rax+0x28]
  42f698:	lea    rcx,[rax+0x1]
  42f69c:	mov    rdx,QWORD PTR [rbp-0x18]
  42f6a0:	mov    QWORD PTR [rdx+0x28],rcx
  42f6a4:	mov    BYTE PTR [rax],0x2c
  42f6a7:	mov    eax,DWORD PTR [rbp-0x20]
  42f6aa:	movsxd rdx,eax
  42f6ad:	mov    rcx,QWORD PTR [rbp-0x38]
  42f6b1:	mov    rax,QWORD PTR [rbp-0x18]
  42f6b5:	mov    rsi,rcx
  42f6b8:	mov    rdi,rax
  42f6bb:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f6c0:	mov    rax,QWORD PTR [rbp-0x18]
  42f6c4:	movzx  eax,BYTE PTR [rax+0x33]
  42f6c8:	test   al,al
  42f6ca:	je     42f6fb <flatcc_json_printer_uint32_enum_struct_field@@Base+0xa6>
  42f6cc:	mov    rax,QWORD PTR [rbp-0x18]
  42f6d0:	mov    rdx,QWORD PTR [rax+0x28]
  42f6d4:	mov    eax,DWORD PTR [rbp-0x4]
  42f6d7:	mov    rsi,rdx
  42f6da:	mov    edi,eax
  42f6dc:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42f6e1:	mov    ecx,eax
  42f6e3:	mov    rax,QWORD PTR [rbp-0x18]
  42f6e7:	mov    rdx,QWORD PTR [rax+0x28]
  42f6eb:	movsxd rax,ecx
  42f6ee:	add    rdx,rax
  42f6f1:	mov    rax,QWORD PTR [rbp-0x18]
  42f6f5:	mov    QWORD PTR [rax+0x28],rdx
  42f6f9:	jmp    42f70d <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb8>
  42f6fb:	mov    ecx,DWORD PTR [rbp-0x4]
  42f6fe:	mov    rdx,QWORD PTR [rbp-0x18]
  42f702:	mov    rax,QWORD PTR [rbp+0x10]
  42f706:	mov    esi,ecx
  42f708:	mov    rdi,rdx
  42f70b:	call   rax
  42f70d:	nop
  42f70e:	leave  
  42f70f:	ret    

000000000042f710 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  42f710:	push   rbp
  42f711:	mov    rbp,rsp
  42f714:	sub    rsp,0x40
  42f718:	mov    QWORD PTR [rbp-0x18],rdi
  42f71c:	mov    DWORD PTR [rbp-0x1c],esi
  42f71f:	mov    QWORD PTR [rbp-0x28],rdx
  42f723:	mov    QWORD PTR [rbp-0x30],rcx
  42f727:	mov    QWORD PTR [rbp-0x38],r8
  42f72b:	mov    DWORD PTR [rbp-0x20],r9d
  42f72f:	mov    rdx,QWORD PTR [rbp-0x28]
  42f733:	mov    rax,QWORD PTR [rbp-0x30]
  42f737:	add    rax,rdx
  42f73a:	mov    rdi,rax
  42f73d:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42f742:	mov    QWORD PTR [rbp-0x8],rax
  42f746:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f74a:	je     42f763 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x53>
  42f74c:	mov    rax,QWORD PTR [rbp-0x18]
  42f750:	mov    rax,QWORD PTR [rax+0x28]
  42f754:	lea    rcx,[rax+0x1]
  42f758:	mov    rdx,QWORD PTR [rbp-0x18]
  42f75c:	mov    QWORD PTR [rdx+0x28],rcx
  42f760:	mov    BYTE PTR [rax],0x2c
  42f763:	mov    eax,DWORD PTR [rbp-0x20]
  42f766:	movsxd rdx,eax
  42f769:	mov    rcx,QWORD PTR [rbp-0x38]
  42f76d:	mov    rax,QWORD PTR [rbp-0x18]
  42f771:	mov    rsi,rcx
  42f774:	mov    rdi,rax
  42f777:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f77c:	mov    rax,QWORD PTR [rbp-0x18]
  42f780:	movzx  eax,BYTE PTR [rax+0x33]
  42f784:	test   al,al
  42f786:	je     42f7b9 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xa9>
  42f788:	mov    rax,QWORD PTR [rbp-0x18]
  42f78c:	mov    rdx,QWORD PTR [rax+0x28]
  42f790:	mov    rax,QWORD PTR [rbp-0x8]
  42f794:	mov    rsi,rdx
  42f797:	mov    rdi,rax
  42f79a:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42f79f:	mov    ecx,eax
  42f7a1:	mov    rax,QWORD PTR [rbp-0x18]
  42f7a5:	mov    rdx,QWORD PTR [rax+0x28]
  42f7a9:	movsxd rax,ecx
  42f7ac:	add    rdx,rax
  42f7af:	mov    rax,QWORD PTR [rbp-0x18]
  42f7b3:	mov    QWORD PTR [rax+0x28],rdx
  42f7b7:	jmp    42f7cd <flatcc_json_printer_uint64_enum_struct_field@@Base+0xbd>
  42f7b9:	mov    rcx,QWORD PTR [rbp-0x8]
  42f7bd:	mov    rdx,QWORD PTR [rbp-0x18]
  42f7c1:	mov    rax,QWORD PTR [rbp+0x10]
  42f7c5:	mov    rsi,rcx
  42f7c8:	mov    rdi,rdx
  42f7cb:	call   rax
  42f7cd:	nop
  42f7ce:	leave  
  42f7cf:	ret    

000000000042f7d0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  42f7d0:	push   rbp
  42f7d1:	mov    rbp,rsp
  42f7d4:	sub    rsp,0x40
  42f7d8:	mov    QWORD PTR [rbp-0x18],rdi
  42f7dc:	mov    DWORD PTR [rbp-0x1c],esi
  42f7df:	mov    QWORD PTR [rbp-0x28],rdx
  42f7e3:	mov    QWORD PTR [rbp-0x30],rcx
  42f7e7:	mov    QWORD PTR [rbp-0x38],r8
  42f7eb:	mov    DWORD PTR [rbp-0x20],r9d
  42f7ef:	mov    rdx,QWORD PTR [rbp-0x28]
  42f7f3:	mov    rax,QWORD PTR [rbp-0x30]
  42f7f7:	add    rax,rdx
  42f7fa:	mov    rdi,rax
  42f7fd:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  42f802:	mov    BYTE PTR [rbp-0x1],al
  42f805:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f809:	je     42f822 <flatcc_json_printer_int8_enum_struct_field@@Base+0x52>
  42f80b:	mov    rax,QWORD PTR [rbp-0x18]
  42f80f:	mov    rax,QWORD PTR [rax+0x28]
  42f813:	lea    rcx,[rax+0x1]
  42f817:	mov    rdx,QWORD PTR [rbp-0x18]
  42f81b:	mov    QWORD PTR [rdx+0x28],rcx
  42f81f:	mov    BYTE PTR [rax],0x2c
  42f822:	mov    eax,DWORD PTR [rbp-0x20]
  42f825:	movsxd rdx,eax
  42f828:	mov    rcx,QWORD PTR [rbp-0x38]
  42f82c:	mov    rax,QWORD PTR [rbp-0x18]
  42f830:	mov    rsi,rcx
  42f833:	mov    rdi,rax
  42f836:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f83b:	mov    rax,QWORD PTR [rbp-0x18]
  42f83f:	movzx  eax,BYTE PTR [rax+0x33]
  42f843:	test   al,al
  42f845:	je     42f877 <flatcc_json_printer_int8_enum_struct_field@@Base+0xa7>
  42f847:	mov    rax,QWORD PTR [rbp-0x18]
  42f84b:	mov    rdx,QWORD PTR [rax+0x28]
  42f84f:	movsx  eax,BYTE PTR [rbp-0x1]
  42f853:	mov    rsi,rdx
  42f856:	mov    edi,eax
  42f858:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42f85d:	mov    ecx,eax
  42f85f:	mov    rax,QWORD PTR [rbp-0x18]
  42f863:	mov    rdx,QWORD PTR [rax+0x28]
  42f867:	movsxd rax,ecx
  42f86a:	add    rdx,rax
  42f86d:	mov    rax,QWORD PTR [rbp-0x18]
  42f871:	mov    QWORD PTR [rax+0x28],rdx
  42f875:	jmp    42f88a <flatcc_json_printer_int8_enum_struct_field@@Base+0xba>
  42f877:	movsx  ecx,BYTE PTR [rbp-0x1]
  42f87b:	mov    rdx,QWORD PTR [rbp-0x18]
  42f87f:	mov    rax,QWORD PTR [rbp+0x10]
  42f883:	mov    esi,ecx
  42f885:	mov    rdi,rdx
  42f888:	call   rax
  42f88a:	nop
  42f88b:	leave  
  42f88c:	ret    

000000000042f88d <flatcc_json_printer_int16_enum_struct_field@@Base>:
  42f88d:	push   rbp
  42f88e:	mov    rbp,rsp
  42f891:	sub    rsp,0x40
  42f895:	mov    QWORD PTR [rbp-0x18],rdi
  42f899:	mov    DWORD PTR [rbp-0x1c],esi
  42f89c:	mov    QWORD PTR [rbp-0x28],rdx
  42f8a0:	mov    QWORD PTR [rbp-0x30],rcx
  42f8a4:	mov    QWORD PTR [rbp-0x38],r8
  42f8a8:	mov    DWORD PTR [rbp-0x20],r9d
  42f8ac:	mov    rdx,QWORD PTR [rbp-0x28]
  42f8b0:	mov    rax,QWORD PTR [rbp-0x30]
  42f8b4:	add    rax,rdx
  42f8b7:	mov    rdi,rax
  42f8ba:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42f8bf:	mov    WORD PTR [rbp-0x2],ax
  42f8c3:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f8c7:	je     42f8e0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x53>
  42f8c9:	mov    rax,QWORD PTR [rbp-0x18]
  42f8cd:	mov    rax,QWORD PTR [rax+0x28]
  42f8d1:	lea    rcx,[rax+0x1]
  42f8d5:	mov    rdx,QWORD PTR [rbp-0x18]
  42f8d9:	mov    QWORD PTR [rdx+0x28],rcx
  42f8dd:	mov    BYTE PTR [rax],0x2c
  42f8e0:	mov    eax,DWORD PTR [rbp-0x20]
  42f8e3:	movsxd rdx,eax
  42f8e6:	mov    rcx,QWORD PTR [rbp-0x38]
  42f8ea:	mov    rax,QWORD PTR [rbp-0x18]
  42f8ee:	mov    rsi,rcx
  42f8f1:	mov    rdi,rax
  42f8f4:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f8f9:	mov    rax,QWORD PTR [rbp-0x18]
  42f8fd:	movzx  eax,BYTE PTR [rax+0x33]
  42f901:	test   al,al
  42f903:	je     42f935 <flatcc_json_printer_int16_enum_struct_field@@Base+0xa8>
  42f905:	mov    rax,QWORD PTR [rbp-0x18]
  42f909:	mov    rdx,QWORD PTR [rax+0x28]
  42f90d:	movsx  eax,WORD PTR [rbp-0x2]
  42f911:	mov    rsi,rdx
  42f914:	mov    edi,eax
  42f916:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42f91b:	mov    ecx,eax
  42f91d:	mov    rax,QWORD PTR [rbp-0x18]
  42f921:	mov    rdx,QWORD PTR [rax+0x28]
  42f925:	movsxd rax,ecx
  42f928:	add    rdx,rax
  42f92b:	mov    rax,QWORD PTR [rbp-0x18]
  42f92f:	mov    QWORD PTR [rax+0x28],rdx
  42f933:	jmp    42f948 <flatcc_json_printer_int16_enum_struct_field@@Base+0xbb>
  42f935:	movsx  ecx,WORD PTR [rbp-0x2]
  42f939:	mov    rdx,QWORD PTR [rbp-0x18]
  42f93d:	mov    rax,QWORD PTR [rbp+0x10]
  42f941:	mov    esi,ecx
  42f943:	mov    rdi,rdx
  42f946:	call   rax
  42f948:	nop
  42f949:	leave  
  42f94a:	ret    

000000000042f94b <flatcc_json_printer_int32_enum_struct_field@@Base>:
  42f94b:	push   rbp
  42f94c:	mov    rbp,rsp
  42f94f:	sub    rsp,0x40
  42f953:	mov    QWORD PTR [rbp-0x18],rdi
  42f957:	mov    DWORD PTR [rbp-0x1c],esi
  42f95a:	mov    QWORD PTR [rbp-0x28],rdx
  42f95e:	mov    QWORD PTR [rbp-0x30],rcx
  42f962:	mov    QWORD PTR [rbp-0x38],r8
  42f966:	mov    DWORD PTR [rbp-0x20],r9d
  42f96a:	mov    rdx,QWORD PTR [rbp-0x28]
  42f96e:	mov    rax,QWORD PTR [rbp-0x30]
  42f972:	add    rax,rdx
  42f975:	mov    rdi,rax
  42f978:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42f97d:	mov    DWORD PTR [rbp-0x4],eax
  42f980:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f984:	je     42f99d <flatcc_json_printer_int32_enum_struct_field@@Base+0x52>
  42f986:	mov    rax,QWORD PTR [rbp-0x18]
  42f98a:	mov    rax,QWORD PTR [rax+0x28]
  42f98e:	lea    rcx,[rax+0x1]
  42f992:	mov    rdx,QWORD PTR [rbp-0x18]
  42f996:	mov    QWORD PTR [rdx+0x28],rcx
  42f99a:	mov    BYTE PTR [rax],0x2c
  42f99d:	mov    eax,DWORD PTR [rbp-0x20]
  42f9a0:	movsxd rdx,eax
  42f9a3:	mov    rcx,QWORD PTR [rbp-0x38]
  42f9a7:	mov    rax,QWORD PTR [rbp-0x18]
  42f9ab:	mov    rsi,rcx
  42f9ae:	mov    rdi,rax
  42f9b1:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42f9b6:	mov    rax,QWORD PTR [rbp-0x18]
  42f9ba:	movzx  eax,BYTE PTR [rax+0x33]
  42f9be:	test   al,al
  42f9c0:	je     42f9f1 <flatcc_json_printer_int32_enum_struct_field@@Base+0xa6>
  42f9c2:	mov    rax,QWORD PTR [rbp-0x18]
  42f9c6:	mov    rdx,QWORD PTR [rax+0x28]
  42f9ca:	mov    eax,DWORD PTR [rbp-0x4]
  42f9cd:	mov    rsi,rdx
  42f9d0:	mov    edi,eax
  42f9d2:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42f9d7:	mov    ecx,eax
  42f9d9:	mov    rax,QWORD PTR [rbp-0x18]
  42f9dd:	mov    rdx,QWORD PTR [rax+0x28]
  42f9e1:	movsxd rax,ecx
  42f9e4:	add    rdx,rax
  42f9e7:	mov    rax,QWORD PTR [rbp-0x18]
  42f9eb:	mov    QWORD PTR [rax+0x28],rdx
  42f9ef:	jmp    42fa03 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb8>
  42f9f1:	mov    ecx,DWORD PTR [rbp-0x4]
  42f9f4:	mov    rdx,QWORD PTR [rbp-0x18]
  42f9f8:	mov    rax,QWORD PTR [rbp+0x10]
  42f9fc:	mov    esi,ecx
  42f9fe:	mov    rdi,rdx
  42fa01:	call   rax
  42fa03:	nop
  42fa04:	leave  
  42fa05:	ret    

000000000042fa06 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  42fa06:	push   rbp
  42fa07:	mov    rbp,rsp
  42fa0a:	sub    rsp,0x40
  42fa0e:	mov    QWORD PTR [rbp-0x18],rdi
  42fa12:	mov    DWORD PTR [rbp-0x1c],esi
  42fa15:	mov    QWORD PTR [rbp-0x28],rdx
  42fa19:	mov    QWORD PTR [rbp-0x30],rcx
  42fa1d:	mov    QWORD PTR [rbp-0x38],r8
  42fa21:	mov    DWORD PTR [rbp-0x20],r9d
  42fa25:	mov    rdx,QWORD PTR [rbp-0x28]
  42fa29:	mov    rax,QWORD PTR [rbp-0x30]
  42fa2d:	add    rax,rdx
  42fa30:	mov    rdi,rax
  42fa33:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  42fa38:	mov    QWORD PTR [rbp-0x8],rax
  42fa3c:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fa40:	je     42fa59 <flatcc_json_printer_int64_enum_struct_field@@Base+0x53>
  42fa42:	mov    rax,QWORD PTR [rbp-0x18]
  42fa46:	mov    rax,QWORD PTR [rax+0x28]
  42fa4a:	lea    rcx,[rax+0x1]
  42fa4e:	mov    rdx,QWORD PTR [rbp-0x18]
  42fa52:	mov    QWORD PTR [rdx+0x28],rcx
  42fa56:	mov    BYTE PTR [rax],0x2c
  42fa59:	mov    eax,DWORD PTR [rbp-0x20]
  42fa5c:	movsxd rdx,eax
  42fa5f:	mov    rcx,QWORD PTR [rbp-0x38]
  42fa63:	mov    rax,QWORD PTR [rbp-0x18]
  42fa67:	mov    rsi,rcx
  42fa6a:	mov    rdi,rax
  42fa6d:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42fa72:	mov    rax,QWORD PTR [rbp-0x18]
  42fa76:	movzx  eax,BYTE PTR [rax+0x33]
  42fa7a:	test   al,al
  42fa7c:	je     42faaf <flatcc_json_printer_int64_enum_struct_field@@Base+0xa9>
  42fa7e:	mov    rax,QWORD PTR [rbp-0x18]
  42fa82:	mov    rdx,QWORD PTR [rax+0x28]
  42fa86:	mov    rax,QWORD PTR [rbp-0x8]
  42fa8a:	mov    rsi,rdx
  42fa8d:	mov    rdi,rax
  42fa90:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42fa95:	mov    ecx,eax
  42fa97:	mov    rax,QWORD PTR [rbp-0x18]
  42fa9b:	mov    rdx,QWORD PTR [rax+0x28]
  42fa9f:	movsxd rax,ecx
  42faa2:	add    rdx,rax
  42faa5:	mov    rax,QWORD PTR [rbp-0x18]
  42faa9:	mov    QWORD PTR [rax+0x28],rdx
  42faad:	jmp    42fac3 <flatcc_json_printer_int64_enum_struct_field@@Base+0xbd>
  42faaf:	mov    rcx,QWORD PTR [rbp-0x8]
  42fab3:	mov    rdx,QWORD PTR [rbp-0x18]
  42fab7:	mov    rax,QWORD PTR [rbp+0x10]
  42fabb:	mov    rsi,rcx
  42fabe:	mov    rdi,rdx
  42fac1:	call   rax
  42fac3:	nop
  42fac4:	leave  
  42fac5:	ret    

000000000042fac6 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  42fac6:	push   rbp
  42fac7:	mov    rbp,rsp
  42faca:	sub    rsp,0x40
  42face:	mov    QWORD PTR [rbp-0x18],rdi
  42fad2:	mov    DWORD PTR [rbp-0x1c],esi
  42fad5:	mov    QWORD PTR [rbp-0x28],rdx
  42fad9:	mov    QWORD PTR [rbp-0x30],rcx
  42fadd:	mov    QWORD PTR [rbp-0x38],r8
  42fae1:	mov    DWORD PTR [rbp-0x20],r9d
  42fae5:	mov    rdx,QWORD PTR [rbp-0x28]
  42fae9:	mov    rax,QWORD PTR [rbp-0x30]
  42faed:	add    rax,rdx
  42faf0:	mov    rdi,rax
  42faf3:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  42faf8:	mov    BYTE PTR [rbp-0x1],al
  42fafb:	cmp    DWORD PTR [rbp-0x1c],0x0
  42faff:	je     42fb18 <flatcc_json_printer_bool_enum_struct_field@@Base+0x52>
  42fb01:	mov    rax,QWORD PTR [rbp-0x18]
  42fb05:	mov    rax,QWORD PTR [rax+0x28]
  42fb09:	lea    rcx,[rax+0x1]
  42fb0d:	mov    rdx,QWORD PTR [rbp-0x18]
  42fb11:	mov    QWORD PTR [rdx+0x28],rcx
  42fb15:	mov    BYTE PTR [rax],0x2c
  42fb18:	mov    eax,DWORD PTR [rbp-0x20]
  42fb1b:	movsxd rdx,eax
  42fb1e:	mov    rcx,QWORD PTR [rbp-0x38]
  42fb22:	mov    rax,QWORD PTR [rbp-0x18]
  42fb26:	mov    rsi,rcx
  42fb29:	mov    rdi,rax
  42fb2c:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42fb31:	mov    rax,QWORD PTR [rbp-0x18]
  42fb35:	movzx  eax,BYTE PTR [rax+0x33]
  42fb39:	test   al,al
  42fb3b:	je     42fb6d <flatcc_json_printer_bool_enum_struct_field@@Base+0xa7>
  42fb3d:	mov    rax,QWORD PTR [rbp-0x18]
  42fb41:	mov    rdx,QWORD PTR [rax+0x28]
  42fb45:	movzx  eax,BYTE PTR [rbp-0x1]
  42fb49:	mov    rsi,rdx
  42fb4c:	mov    edi,eax
  42fb4e:	call   429656 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42fb53:	mov    ecx,eax
  42fb55:	mov    rax,QWORD PTR [rbp-0x18]
  42fb59:	mov    rdx,QWORD PTR [rax+0x28]
  42fb5d:	movsxd rax,ecx
  42fb60:	add    rdx,rax
  42fb63:	mov    rax,QWORD PTR [rbp-0x18]
  42fb67:	mov    QWORD PTR [rax+0x28],rdx
  42fb6b:	jmp    42fb80 <flatcc_json_printer_bool_enum_struct_field@@Base+0xba>
  42fb6d:	movzx  ecx,BYTE PTR [rbp-0x1]
  42fb71:	mov    rdx,QWORD PTR [rbp-0x18]
  42fb75:	mov    rax,QWORD PTR [rbp+0x10]
  42fb79:	mov    esi,ecx
  42fb7b:	mov    rdi,rdx
  42fb7e:	call   rax
  42fb80:	nop
  42fb81:	leave  
  42fb82:	ret    

000000000042fb83 <flatcc_json_printer_utype_vector_field@@Base>:
  42fb83:	push   rbp
  42fb84:	mov    rbp,rsp
  42fb87:	push   rbx
  42fb88:	sub    rsp,0x38
  42fb8c:	mov    QWORD PTR [rbp-0x28],rdi
  42fb90:	mov    QWORD PTR [rbp-0x30],rsi
  42fb94:	mov    DWORD PTR [rbp-0x34],edx
  42fb97:	mov    QWORD PTR [rbp-0x40],rcx
  42fb9b:	mov    DWORD PTR [rbp-0x38],r8d
  42fb9f:	mov    edx,DWORD PTR [rbp-0x34]
  42fba2:	mov    rax,QWORD PTR [rbp-0x30]
  42fba6:	mov    esi,edx
  42fba8:	mov    rdi,rax
  42fbab:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42fbb0:	mov    QWORD PTR [rbp-0x18],rax
  42fbb4:	cmp    QWORD PTR [rbp-0x18],0x0
  42fbb9:	je     42fded <flatcc_json_printer_utype_vector_field@@Base+0x26a>
  42fbbf:	mov    rax,QWORD PTR [rbp-0x30]
  42fbc3:	mov    eax,DWORD PTR [rax+0x18]
  42fbc6:	lea    ecx,[rax+0x1]
  42fbc9:	mov    rdx,QWORD PTR [rbp-0x30]
  42fbcd:	mov    DWORD PTR [rdx+0x18],ecx
  42fbd0:	test   eax,eax
  42fbd2:	je     42fbeb <flatcc_json_printer_utype_vector_field@@Base+0x68>
  42fbd4:	mov    rax,QWORD PTR [rbp-0x28]
  42fbd8:	mov    rax,QWORD PTR [rax+0x28]
  42fbdc:	lea    rcx,[rax+0x1]
  42fbe0:	mov    rdx,QWORD PTR [rbp-0x28]
  42fbe4:	mov    QWORD PTR [rdx+0x28],rcx
  42fbe8:	mov    BYTE PTR [rax],0x2c
  42fbeb:	mov    rax,QWORD PTR [rbp-0x18]
  42fbef:	mov    rdi,rax
  42fbf2:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  42fbf7:	mov    QWORD PTR [rbp-0x18],rax
  42fbfb:	mov    rax,QWORD PTR [rbp-0x18]
  42fbff:	mov    rdi,rax
  42fc02:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42fc07:	mov    DWORD PTR [rbp-0x1c],eax
  42fc0a:	mov    rax,QWORD PTR [rbp-0x18]
  42fc0e:	add    rax,0x4
  42fc12:	mov    QWORD PTR [rbp-0x18],rax
  42fc16:	mov    eax,DWORD PTR [rbp-0x38]
  42fc19:	movsxd rdx,eax
  42fc1c:	mov    rcx,QWORD PTR [rbp-0x40]
  42fc20:	mov    rax,QWORD PTR [rbp-0x28]
  42fc24:	mov    rsi,rcx
  42fc27:	mov    rdi,rax
  42fc2a:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42fc2f:	mov    rax,QWORD PTR [rbp-0x28]
  42fc33:	mov    eax,DWORD PTR [rax+0x38]
  42fc36:	lea    edx,[rax+0x1]
  42fc39:	mov    rax,QWORD PTR [rbp-0x28]
  42fc3d:	mov    DWORD PTR [rax+0x38],edx
  42fc40:	mov    rax,QWORD PTR [rbp-0x28]
  42fc44:	mov    rax,QWORD PTR [rax+0x28]
  42fc48:	lea    rcx,[rax+0x1]
  42fc4c:	mov    rdx,QWORD PTR [rbp-0x28]
  42fc50:	mov    QWORD PTR [rdx+0x28],rcx
  42fc54:	mov    BYTE PTR [rax],0x5b
  42fc57:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fc5b:	je     42fd85 <flatcc_json_printer_utype_vector_field@@Base+0x202>
  42fc61:	mov    rax,QWORD PTR [rbp-0x28]
  42fc65:	movzx  eax,BYTE PTR [rax+0x31]
  42fc69:	test   al,al
  42fc6b:	je     42fc92 <flatcc_json_printer_utype_vector_field@@Base+0x10f>
  42fc6d:	mov    rax,QWORD PTR [rbp-0x28]
  42fc71:	mov    rax,QWORD PTR [rax+0x28]
  42fc75:	lea    rcx,[rax+0x1]
  42fc79:	mov    rdx,QWORD PTR [rbp-0x28]
  42fc7d:	mov    QWORD PTR [rdx+0x28],rcx
  42fc81:	mov    BYTE PTR [rax],0xa
  42fc84:	mov    rax,QWORD PTR [rbp-0x28]
  42fc88:	mov    rdi,rax
  42fc8b:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fc90:	jmp    42fc9e <flatcc_json_printer_utype_vector_field@@Base+0x11b>
  42fc92:	mov    rax,QWORD PTR [rbp-0x28]
  42fc96:	mov    rdi,rax
  42fc99:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  42fc9e:	mov    rax,QWORD PTR [rbp-0x28]
  42fca2:	mov    rbx,QWORD PTR [rax+0x28]
  42fca6:	mov    rax,QWORD PTR [rbp-0x18]
  42fcaa:	mov    rdi,rax
  42fcad:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  42fcb2:	movzx  eax,al
  42fcb5:	mov    rsi,rbx
  42fcb8:	mov    edi,eax
  42fcba:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42fcbf:	mov    ecx,eax
  42fcc1:	mov    rax,QWORD PTR [rbp-0x28]
  42fcc5:	mov    rdx,QWORD PTR [rax+0x28]
  42fcc9:	movsxd rax,ecx
  42fccc:	add    rdx,rax
  42fccf:	mov    rax,QWORD PTR [rbp-0x28]
  42fcd3:	mov    QWORD PTR [rax+0x28],rdx
  42fcd7:	mov    rax,QWORD PTR [rbp-0x18]
  42fcdb:	add    rax,0x1
  42fcdf:	mov    QWORD PTR [rbp-0x18],rax
  42fce3:	sub    DWORD PTR [rbp-0x1c],0x1
  42fce7:	jmp    42fd85 <flatcc_json_printer_utype_vector_field@@Base+0x202>
  42fcec:	mov    rax,QWORD PTR [rbp-0x28]
  42fcf0:	mov    rax,QWORD PTR [rax+0x28]
  42fcf4:	lea    rcx,[rax+0x1]
  42fcf8:	mov    rdx,QWORD PTR [rbp-0x28]
  42fcfc:	mov    QWORD PTR [rdx+0x28],rcx
  42fd00:	mov    BYTE PTR [rax],0x2c
  42fd03:	mov    rax,QWORD PTR [rbp-0x28]
  42fd07:	movzx  eax,BYTE PTR [rax+0x31]
  42fd0b:	test   al,al
  42fd0d:	je     42fd34 <flatcc_json_printer_utype_vector_field@@Base+0x1b1>
  42fd0f:	mov    rax,QWORD PTR [rbp-0x28]
  42fd13:	mov    rax,QWORD PTR [rax+0x28]
  42fd17:	lea    rcx,[rax+0x1]
  42fd1b:	mov    rdx,QWORD PTR [rbp-0x28]
  42fd1f:	mov    QWORD PTR [rdx+0x28],rcx
  42fd23:	mov    BYTE PTR [rax],0xa
  42fd26:	mov    rax,QWORD PTR [rbp-0x28]
  42fd2a:	mov    rdi,rax
  42fd2d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fd32:	jmp    42fd40 <flatcc_json_printer_utype_vector_field@@Base+0x1bd>
  42fd34:	mov    rax,QWORD PTR [rbp-0x28]
  42fd38:	mov    rdi,rax
  42fd3b:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  42fd40:	mov    rax,QWORD PTR [rbp-0x28]
  42fd44:	mov    rbx,QWORD PTR [rax+0x28]
  42fd48:	mov    rax,QWORD PTR [rbp-0x18]
  42fd4c:	mov    rdi,rax
  42fd4f:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  42fd54:	movzx  eax,al
  42fd57:	mov    rsi,rbx
  42fd5a:	mov    edi,eax
  42fd5c:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42fd61:	mov    ecx,eax
  42fd63:	mov    rax,QWORD PTR [rbp-0x28]
  42fd67:	mov    rdx,QWORD PTR [rax+0x28]
  42fd6b:	movsxd rax,ecx
  42fd6e:	add    rdx,rax
  42fd71:	mov    rax,QWORD PTR [rbp-0x28]
  42fd75:	mov    QWORD PTR [rax+0x28],rdx
  42fd79:	mov    rax,QWORD PTR [rbp-0x18]
  42fd7d:	add    rax,0x1
  42fd81:	mov    QWORD PTR [rbp-0x18],rax
  42fd85:	mov    eax,DWORD PTR [rbp-0x1c]
  42fd88:	lea    edx,[rax-0x1]
  42fd8b:	mov    DWORD PTR [rbp-0x1c],edx
  42fd8e:	test   eax,eax
  42fd90:	jne    42fcec <flatcc_json_printer_utype_vector_field@@Base+0x169>
  42fd96:	mov    rax,QWORD PTR [rbp-0x28]
  42fd9a:	movzx  eax,BYTE PTR [rax+0x31]
  42fd9e:	test   al,al
  42fda0:	je     42fdd6 <flatcc_json_printer_utype_vector_field@@Base+0x253>
  42fda2:	mov    rax,QWORD PTR [rbp-0x28]
  42fda6:	mov    rax,QWORD PTR [rax+0x28]
  42fdaa:	lea    rcx,[rax+0x1]
  42fdae:	mov    rdx,QWORD PTR [rbp-0x28]
  42fdb2:	mov    QWORD PTR [rdx+0x28],rcx
  42fdb6:	mov    BYTE PTR [rax],0xa
  42fdb9:	mov    rax,QWORD PTR [rbp-0x28]
  42fdbd:	mov    eax,DWORD PTR [rax+0x38]
  42fdc0:	lea    edx,[rax-0x1]
  42fdc3:	mov    rax,QWORD PTR [rbp-0x28]
  42fdc7:	mov    DWORD PTR [rax+0x38],edx
  42fdca:	mov    rax,QWORD PTR [rbp-0x28]
  42fdce:	mov    rdi,rax
  42fdd1:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fdd6:	mov    rax,QWORD PTR [rbp-0x28]
  42fdda:	mov    rax,QWORD PTR [rax+0x28]
  42fdde:	lea    rcx,[rax+0x1]
  42fde2:	mov    rdx,QWORD PTR [rbp-0x28]
  42fde6:	mov    QWORD PTR [rdx+0x28],rcx
  42fdea:	mov    BYTE PTR [rax],0x5d
  42fded:	nop
  42fdee:	add    rsp,0x38
  42fdf2:	pop    rbx
  42fdf3:	pop    rbp
  42fdf4:	ret    

000000000042fdf5 <flatcc_json_printer_uint8_vector_field@@Base>:
  42fdf5:	push   rbp
  42fdf6:	mov    rbp,rsp
  42fdf9:	push   rbx
  42fdfa:	sub    rsp,0x38
  42fdfe:	mov    QWORD PTR [rbp-0x28],rdi
  42fe02:	mov    QWORD PTR [rbp-0x30],rsi
  42fe06:	mov    DWORD PTR [rbp-0x34],edx
  42fe09:	mov    QWORD PTR [rbp-0x40],rcx
  42fe0d:	mov    DWORD PTR [rbp-0x38],r8d
  42fe11:	mov    edx,DWORD PTR [rbp-0x34]
  42fe14:	mov    rax,QWORD PTR [rbp-0x30]
  42fe18:	mov    esi,edx
  42fe1a:	mov    rdi,rax
  42fe1d:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  42fe22:	mov    QWORD PTR [rbp-0x18],rax
  42fe26:	cmp    QWORD PTR [rbp-0x18],0x0
  42fe2b:	je     43005f <flatcc_json_printer_uint8_vector_field@@Base+0x26a>
  42fe31:	mov    rax,QWORD PTR [rbp-0x30]
  42fe35:	mov    eax,DWORD PTR [rax+0x18]
  42fe38:	lea    ecx,[rax+0x1]
  42fe3b:	mov    rdx,QWORD PTR [rbp-0x30]
  42fe3f:	mov    DWORD PTR [rdx+0x18],ecx
  42fe42:	test   eax,eax
  42fe44:	je     42fe5d <flatcc_json_printer_uint8_vector_field@@Base+0x68>
  42fe46:	mov    rax,QWORD PTR [rbp-0x28]
  42fe4a:	mov    rax,QWORD PTR [rax+0x28]
  42fe4e:	lea    rcx,[rax+0x1]
  42fe52:	mov    rdx,QWORD PTR [rbp-0x28]
  42fe56:	mov    QWORD PTR [rdx+0x28],rcx
  42fe5a:	mov    BYTE PTR [rax],0x2c
  42fe5d:	mov    rax,QWORD PTR [rbp-0x18]
  42fe61:	mov    rdi,rax
  42fe64:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  42fe69:	mov    QWORD PTR [rbp-0x18],rax
  42fe6d:	mov    rax,QWORD PTR [rbp-0x18]
  42fe71:	mov    rdi,rax
  42fe74:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42fe79:	mov    DWORD PTR [rbp-0x1c],eax
  42fe7c:	mov    rax,QWORD PTR [rbp-0x18]
  42fe80:	add    rax,0x4
  42fe84:	mov    QWORD PTR [rbp-0x18],rax
  42fe88:	mov    eax,DWORD PTR [rbp-0x38]
  42fe8b:	movsxd rdx,eax
  42fe8e:	mov    rcx,QWORD PTR [rbp-0x40]
  42fe92:	mov    rax,QWORD PTR [rbp-0x28]
  42fe96:	mov    rsi,rcx
  42fe99:	mov    rdi,rax
  42fe9c:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  42fea1:	mov    rax,QWORD PTR [rbp-0x28]
  42fea5:	mov    eax,DWORD PTR [rax+0x38]
  42fea8:	lea    edx,[rax+0x1]
  42feab:	mov    rax,QWORD PTR [rbp-0x28]
  42feaf:	mov    DWORD PTR [rax+0x38],edx
  42feb2:	mov    rax,QWORD PTR [rbp-0x28]
  42feb6:	mov    rax,QWORD PTR [rax+0x28]
  42feba:	lea    rcx,[rax+0x1]
  42febe:	mov    rdx,QWORD PTR [rbp-0x28]
  42fec2:	mov    QWORD PTR [rdx+0x28],rcx
  42fec6:	mov    BYTE PTR [rax],0x5b
  42fec9:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fecd:	je     42fff7 <flatcc_json_printer_uint8_vector_field@@Base+0x202>
  42fed3:	mov    rax,QWORD PTR [rbp-0x28]
  42fed7:	movzx  eax,BYTE PTR [rax+0x31]
  42fedb:	test   al,al
  42fedd:	je     42ff04 <flatcc_json_printer_uint8_vector_field@@Base+0x10f>
  42fedf:	mov    rax,QWORD PTR [rbp-0x28]
  42fee3:	mov    rax,QWORD PTR [rax+0x28]
  42fee7:	lea    rcx,[rax+0x1]
  42feeb:	mov    rdx,QWORD PTR [rbp-0x28]
  42feef:	mov    QWORD PTR [rdx+0x28],rcx
  42fef3:	mov    BYTE PTR [rax],0xa
  42fef6:	mov    rax,QWORD PTR [rbp-0x28]
  42fefa:	mov    rdi,rax
  42fefd:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42ff02:	jmp    42ff10 <flatcc_json_printer_uint8_vector_field@@Base+0x11b>
  42ff04:	mov    rax,QWORD PTR [rbp-0x28]
  42ff08:	mov    rdi,rax
  42ff0b:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  42ff10:	mov    rax,QWORD PTR [rbp-0x28]
  42ff14:	mov    rbx,QWORD PTR [rax+0x28]
  42ff18:	mov    rax,QWORD PTR [rbp-0x18]
  42ff1c:	mov    rdi,rax
  42ff1f:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  42ff24:	movzx  eax,al
  42ff27:	mov    rsi,rbx
  42ff2a:	mov    edi,eax
  42ff2c:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42ff31:	mov    ecx,eax
  42ff33:	mov    rax,QWORD PTR [rbp-0x28]
  42ff37:	mov    rdx,QWORD PTR [rax+0x28]
  42ff3b:	movsxd rax,ecx
  42ff3e:	add    rdx,rax
  42ff41:	mov    rax,QWORD PTR [rbp-0x28]
  42ff45:	mov    QWORD PTR [rax+0x28],rdx
  42ff49:	mov    rax,QWORD PTR [rbp-0x18]
  42ff4d:	add    rax,0x1
  42ff51:	mov    QWORD PTR [rbp-0x18],rax
  42ff55:	sub    DWORD PTR [rbp-0x1c],0x1
  42ff59:	jmp    42fff7 <flatcc_json_printer_uint8_vector_field@@Base+0x202>
  42ff5e:	mov    rax,QWORD PTR [rbp-0x28]
  42ff62:	mov    rax,QWORD PTR [rax+0x28]
  42ff66:	lea    rcx,[rax+0x1]
  42ff6a:	mov    rdx,QWORD PTR [rbp-0x28]
  42ff6e:	mov    QWORD PTR [rdx+0x28],rcx
  42ff72:	mov    BYTE PTR [rax],0x2c
  42ff75:	mov    rax,QWORD PTR [rbp-0x28]
  42ff79:	movzx  eax,BYTE PTR [rax+0x31]
  42ff7d:	test   al,al
  42ff7f:	je     42ffa6 <flatcc_json_printer_uint8_vector_field@@Base+0x1b1>
  42ff81:	mov    rax,QWORD PTR [rbp-0x28]
  42ff85:	mov    rax,QWORD PTR [rax+0x28]
  42ff89:	lea    rcx,[rax+0x1]
  42ff8d:	mov    rdx,QWORD PTR [rbp-0x28]
  42ff91:	mov    QWORD PTR [rdx+0x28],rcx
  42ff95:	mov    BYTE PTR [rax],0xa
  42ff98:	mov    rax,QWORD PTR [rbp-0x28]
  42ff9c:	mov    rdi,rax
  42ff9f:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42ffa4:	jmp    42ffb2 <flatcc_json_printer_uint8_vector_field@@Base+0x1bd>
  42ffa6:	mov    rax,QWORD PTR [rbp-0x28]
  42ffaa:	mov    rdi,rax
  42ffad:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  42ffb2:	mov    rax,QWORD PTR [rbp-0x28]
  42ffb6:	mov    rbx,QWORD PTR [rax+0x28]
  42ffba:	mov    rax,QWORD PTR [rbp-0x18]
  42ffbe:	mov    rdi,rax
  42ffc1:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  42ffc6:	movzx  eax,al
  42ffc9:	mov    rsi,rbx
  42ffcc:	mov    edi,eax
  42ffce:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42ffd3:	mov    ecx,eax
  42ffd5:	mov    rax,QWORD PTR [rbp-0x28]
  42ffd9:	mov    rdx,QWORD PTR [rax+0x28]
  42ffdd:	movsxd rax,ecx
  42ffe0:	add    rdx,rax
  42ffe3:	mov    rax,QWORD PTR [rbp-0x28]
  42ffe7:	mov    QWORD PTR [rax+0x28],rdx
  42ffeb:	mov    rax,QWORD PTR [rbp-0x18]
  42ffef:	add    rax,0x1
  42fff3:	mov    QWORD PTR [rbp-0x18],rax
  42fff7:	mov    eax,DWORD PTR [rbp-0x1c]
  42fffa:	lea    edx,[rax-0x1]
  42fffd:	mov    DWORD PTR [rbp-0x1c],edx
  430000:	test   eax,eax
  430002:	jne    42ff5e <flatcc_json_printer_uint8_vector_field@@Base+0x169>
  430008:	mov    rax,QWORD PTR [rbp-0x28]
  43000c:	movzx  eax,BYTE PTR [rax+0x31]
  430010:	test   al,al
  430012:	je     430048 <flatcc_json_printer_uint8_vector_field@@Base+0x253>
  430014:	mov    rax,QWORD PTR [rbp-0x28]
  430018:	mov    rax,QWORD PTR [rax+0x28]
  43001c:	lea    rcx,[rax+0x1]
  430020:	mov    rdx,QWORD PTR [rbp-0x28]
  430024:	mov    QWORD PTR [rdx+0x28],rcx
  430028:	mov    BYTE PTR [rax],0xa
  43002b:	mov    rax,QWORD PTR [rbp-0x28]
  43002f:	mov    eax,DWORD PTR [rax+0x38]
  430032:	lea    edx,[rax-0x1]
  430035:	mov    rax,QWORD PTR [rbp-0x28]
  430039:	mov    DWORD PTR [rax+0x38],edx
  43003c:	mov    rax,QWORD PTR [rbp-0x28]
  430040:	mov    rdi,rax
  430043:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430048:	mov    rax,QWORD PTR [rbp-0x28]
  43004c:	mov    rax,QWORD PTR [rax+0x28]
  430050:	lea    rcx,[rax+0x1]
  430054:	mov    rdx,QWORD PTR [rbp-0x28]
  430058:	mov    QWORD PTR [rdx+0x28],rcx
  43005c:	mov    BYTE PTR [rax],0x5d
  43005f:	nop
  430060:	add    rsp,0x38
  430064:	pop    rbx
  430065:	pop    rbp
  430066:	ret    

0000000000430067 <flatcc_json_printer_uint16_vector_field@@Base>:
  430067:	push   rbp
  430068:	mov    rbp,rsp
  43006b:	push   rbx
  43006c:	sub    rsp,0x38
  430070:	mov    QWORD PTR [rbp-0x28],rdi
  430074:	mov    QWORD PTR [rbp-0x30],rsi
  430078:	mov    DWORD PTR [rbp-0x34],edx
  43007b:	mov    QWORD PTR [rbp-0x40],rcx
  43007f:	mov    DWORD PTR [rbp-0x38],r8d
  430083:	mov    edx,DWORD PTR [rbp-0x34]
  430086:	mov    rax,QWORD PTR [rbp-0x30]
  43008a:	mov    esi,edx
  43008c:	mov    rdi,rax
  43008f:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  430094:	mov    QWORD PTR [rbp-0x18],rax
  430098:	cmp    QWORD PTR [rbp-0x18],0x0
  43009d:	je     4302d1 <flatcc_json_printer_uint16_vector_field@@Base+0x26a>
  4300a3:	mov    rax,QWORD PTR [rbp-0x30]
  4300a7:	mov    eax,DWORD PTR [rax+0x18]
  4300aa:	lea    ecx,[rax+0x1]
  4300ad:	mov    rdx,QWORD PTR [rbp-0x30]
  4300b1:	mov    DWORD PTR [rdx+0x18],ecx
  4300b4:	test   eax,eax
  4300b6:	je     4300cf <flatcc_json_printer_uint16_vector_field@@Base+0x68>
  4300b8:	mov    rax,QWORD PTR [rbp-0x28]
  4300bc:	mov    rax,QWORD PTR [rax+0x28]
  4300c0:	lea    rcx,[rax+0x1]
  4300c4:	mov    rdx,QWORD PTR [rbp-0x28]
  4300c8:	mov    QWORD PTR [rdx+0x28],rcx
  4300cc:	mov    BYTE PTR [rax],0x2c
  4300cf:	mov    rax,QWORD PTR [rbp-0x18]
  4300d3:	mov    rdi,rax
  4300d6:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4300db:	mov    QWORD PTR [rbp-0x18],rax
  4300df:	mov    rax,QWORD PTR [rbp-0x18]
  4300e3:	mov    rdi,rax
  4300e6:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4300eb:	mov    DWORD PTR [rbp-0x1c],eax
  4300ee:	mov    rax,QWORD PTR [rbp-0x18]
  4300f2:	add    rax,0x4
  4300f6:	mov    QWORD PTR [rbp-0x18],rax
  4300fa:	mov    eax,DWORD PTR [rbp-0x38]
  4300fd:	movsxd rdx,eax
  430100:	mov    rcx,QWORD PTR [rbp-0x40]
  430104:	mov    rax,QWORD PTR [rbp-0x28]
  430108:	mov    rsi,rcx
  43010b:	mov    rdi,rax
  43010e:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  430113:	mov    rax,QWORD PTR [rbp-0x28]
  430117:	mov    eax,DWORD PTR [rax+0x38]
  43011a:	lea    edx,[rax+0x1]
  43011d:	mov    rax,QWORD PTR [rbp-0x28]
  430121:	mov    DWORD PTR [rax+0x38],edx
  430124:	mov    rax,QWORD PTR [rbp-0x28]
  430128:	mov    rax,QWORD PTR [rax+0x28]
  43012c:	lea    rcx,[rax+0x1]
  430130:	mov    rdx,QWORD PTR [rbp-0x28]
  430134:	mov    QWORD PTR [rdx+0x28],rcx
  430138:	mov    BYTE PTR [rax],0x5b
  43013b:	cmp    DWORD PTR [rbp-0x1c],0x0
  43013f:	je     430269 <flatcc_json_printer_uint16_vector_field@@Base+0x202>
  430145:	mov    rax,QWORD PTR [rbp-0x28]
  430149:	movzx  eax,BYTE PTR [rax+0x31]
  43014d:	test   al,al
  43014f:	je     430176 <flatcc_json_printer_uint16_vector_field@@Base+0x10f>
  430151:	mov    rax,QWORD PTR [rbp-0x28]
  430155:	mov    rax,QWORD PTR [rax+0x28]
  430159:	lea    rcx,[rax+0x1]
  43015d:	mov    rdx,QWORD PTR [rbp-0x28]
  430161:	mov    QWORD PTR [rdx+0x28],rcx
  430165:	mov    BYTE PTR [rax],0xa
  430168:	mov    rax,QWORD PTR [rbp-0x28]
  43016c:	mov    rdi,rax
  43016f:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430174:	jmp    430182 <flatcc_json_printer_uint16_vector_field@@Base+0x11b>
  430176:	mov    rax,QWORD PTR [rbp-0x28]
  43017a:	mov    rdi,rax
  43017d:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430182:	mov    rax,QWORD PTR [rbp-0x28]
  430186:	mov    rbx,QWORD PTR [rax+0x28]
  43018a:	mov    rax,QWORD PTR [rbp-0x18]
  43018e:	mov    rdi,rax
  430191:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  430196:	movzx  eax,ax
  430199:	mov    rsi,rbx
  43019c:	mov    edi,eax
  43019e:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  4301a3:	mov    ecx,eax
  4301a5:	mov    rax,QWORD PTR [rbp-0x28]
  4301a9:	mov    rdx,QWORD PTR [rax+0x28]
  4301ad:	movsxd rax,ecx
  4301b0:	add    rdx,rax
  4301b3:	mov    rax,QWORD PTR [rbp-0x28]
  4301b7:	mov    QWORD PTR [rax+0x28],rdx
  4301bb:	mov    rax,QWORD PTR [rbp-0x18]
  4301bf:	add    rax,0x2
  4301c3:	mov    QWORD PTR [rbp-0x18],rax
  4301c7:	sub    DWORD PTR [rbp-0x1c],0x1
  4301cb:	jmp    430269 <flatcc_json_printer_uint16_vector_field@@Base+0x202>
  4301d0:	mov    rax,QWORD PTR [rbp-0x28]
  4301d4:	mov    rax,QWORD PTR [rax+0x28]
  4301d8:	lea    rcx,[rax+0x1]
  4301dc:	mov    rdx,QWORD PTR [rbp-0x28]
  4301e0:	mov    QWORD PTR [rdx+0x28],rcx
  4301e4:	mov    BYTE PTR [rax],0x2c
  4301e7:	mov    rax,QWORD PTR [rbp-0x28]
  4301eb:	movzx  eax,BYTE PTR [rax+0x31]
  4301ef:	test   al,al
  4301f1:	je     430218 <flatcc_json_printer_uint16_vector_field@@Base+0x1b1>
  4301f3:	mov    rax,QWORD PTR [rbp-0x28]
  4301f7:	mov    rax,QWORD PTR [rax+0x28]
  4301fb:	lea    rcx,[rax+0x1]
  4301ff:	mov    rdx,QWORD PTR [rbp-0x28]
  430203:	mov    QWORD PTR [rdx+0x28],rcx
  430207:	mov    BYTE PTR [rax],0xa
  43020a:	mov    rax,QWORD PTR [rbp-0x28]
  43020e:	mov    rdi,rax
  430211:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430216:	jmp    430224 <flatcc_json_printer_uint16_vector_field@@Base+0x1bd>
  430218:	mov    rax,QWORD PTR [rbp-0x28]
  43021c:	mov    rdi,rax
  43021f:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430224:	mov    rax,QWORD PTR [rbp-0x28]
  430228:	mov    rbx,QWORD PTR [rax+0x28]
  43022c:	mov    rax,QWORD PTR [rbp-0x18]
  430230:	mov    rdi,rax
  430233:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  430238:	movzx  eax,ax
  43023b:	mov    rsi,rbx
  43023e:	mov    edi,eax
  430240:	call   4297f9 <flatcc_json_parser_struct_as_root@@Base+0x650>
  430245:	mov    ecx,eax
  430247:	mov    rax,QWORD PTR [rbp-0x28]
  43024b:	mov    rdx,QWORD PTR [rax+0x28]
  43024f:	movsxd rax,ecx
  430252:	add    rdx,rax
  430255:	mov    rax,QWORD PTR [rbp-0x28]
  430259:	mov    QWORD PTR [rax+0x28],rdx
  43025d:	mov    rax,QWORD PTR [rbp-0x18]
  430261:	add    rax,0x2
  430265:	mov    QWORD PTR [rbp-0x18],rax
  430269:	mov    eax,DWORD PTR [rbp-0x1c]
  43026c:	lea    edx,[rax-0x1]
  43026f:	mov    DWORD PTR [rbp-0x1c],edx
  430272:	test   eax,eax
  430274:	jne    4301d0 <flatcc_json_printer_uint16_vector_field@@Base+0x169>
  43027a:	mov    rax,QWORD PTR [rbp-0x28]
  43027e:	movzx  eax,BYTE PTR [rax+0x31]
  430282:	test   al,al
  430284:	je     4302ba <flatcc_json_printer_uint16_vector_field@@Base+0x253>
  430286:	mov    rax,QWORD PTR [rbp-0x28]
  43028a:	mov    rax,QWORD PTR [rax+0x28]
  43028e:	lea    rcx,[rax+0x1]
  430292:	mov    rdx,QWORD PTR [rbp-0x28]
  430296:	mov    QWORD PTR [rdx+0x28],rcx
  43029a:	mov    BYTE PTR [rax],0xa
  43029d:	mov    rax,QWORD PTR [rbp-0x28]
  4302a1:	mov    eax,DWORD PTR [rax+0x38]
  4302a4:	lea    edx,[rax-0x1]
  4302a7:	mov    rax,QWORD PTR [rbp-0x28]
  4302ab:	mov    DWORD PTR [rax+0x38],edx
  4302ae:	mov    rax,QWORD PTR [rbp-0x28]
  4302b2:	mov    rdi,rax
  4302b5:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4302ba:	mov    rax,QWORD PTR [rbp-0x28]
  4302be:	mov    rax,QWORD PTR [rax+0x28]
  4302c2:	lea    rcx,[rax+0x1]
  4302c6:	mov    rdx,QWORD PTR [rbp-0x28]
  4302ca:	mov    QWORD PTR [rdx+0x28],rcx
  4302ce:	mov    BYTE PTR [rax],0x5d
  4302d1:	nop
  4302d2:	add    rsp,0x38
  4302d6:	pop    rbx
  4302d7:	pop    rbp
  4302d8:	ret    

00000000004302d9 <flatcc_json_printer_uint32_vector_field@@Base>:
  4302d9:	push   rbp
  4302da:	mov    rbp,rsp
  4302dd:	push   rbx
  4302de:	sub    rsp,0x38
  4302e2:	mov    QWORD PTR [rbp-0x28],rdi
  4302e6:	mov    QWORD PTR [rbp-0x30],rsi
  4302ea:	mov    DWORD PTR [rbp-0x34],edx
  4302ed:	mov    QWORD PTR [rbp-0x40],rcx
  4302f1:	mov    DWORD PTR [rbp-0x38],r8d
  4302f5:	mov    edx,DWORD PTR [rbp-0x34]
  4302f8:	mov    rax,QWORD PTR [rbp-0x30]
  4302fc:	mov    esi,edx
  4302fe:	mov    rdi,rax
  430301:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  430306:	mov    QWORD PTR [rbp-0x18],rax
  43030a:	cmp    QWORD PTR [rbp-0x18],0x0
  43030f:	je     43053d <flatcc_json_printer_uint32_vector_field@@Base+0x264>
  430315:	mov    rax,QWORD PTR [rbp-0x30]
  430319:	mov    eax,DWORD PTR [rax+0x18]
  43031c:	lea    ecx,[rax+0x1]
  43031f:	mov    rdx,QWORD PTR [rbp-0x30]
  430323:	mov    DWORD PTR [rdx+0x18],ecx
  430326:	test   eax,eax
  430328:	je     430341 <flatcc_json_printer_uint32_vector_field@@Base+0x68>
  43032a:	mov    rax,QWORD PTR [rbp-0x28]
  43032e:	mov    rax,QWORD PTR [rax+0x28]
  430332:	lea    rcx,[rax+0x1]
  430336:	mov    rdx,QWORD PTR [rbp-0x28]
  43033a:	mov    QWORD PTR [rdx+0x28],rcx
  43033e:	mov    BYTE PTR [rax],0x2c
  430341:	mov    rax,QWORD PTR [rbp-0x18]
  430345:	mov    rdi,rax
  430348:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  43034d:	mov    QWORD PTR [rbp-0x18],rax
  430351:	mov    rax,QWORD PTR [rbp-0x18]
  430355:	mov    rdi,rax
  430358:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43035d:	mov    DWORD PTR [rbp-0x1c],eax
  430360:	mov    rax,QWORD PTR [rbp-0x18]
  430364:	add    rax,0x4
  430368:	mov    QWORD PTR [rbp-0x18],rax
  43036c:	mov    eax,DWORD PTR [rbp-0x38]
  43036f:	movsxd rdx,eax
  430372:	mov    rcx,QWORD PTR [rbp-0x40]
  430376:	mov    rax,QWORD PTR [rbp-0x28]
  43037a:	mov    rsi,rcx
  43037d:	mov    rdi,rax
  430380:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  430385:	mov    rax,QWORD PTR [rbp-0x28]
  430389:	mov    eax,DWORD PTR [rax+0x38]
  43038c:	lea    edx,[rax+0x1]
  43038f:	mov    rax,QWORD PTR [rbp-0x28]
  430393:	mov    DWORD PTR [rax+0x38],edx
  430396:	mov    rax,QWORD PTR [rbp-0x28]
  43039a:	mov    rax,QWORD PTR [rax+0x28]
  43039e:	lea    rcx,[rax+0x1]
  4303a2:	mov    rdx,QWORD PTR [rbp-0x28]
  4303a6:	mov    QWORD PTR [rdx+0x28],rcx
  4303aa:	mov    BYTE PTR [rax],0x5b
  4303ad:	cmp    DWORD PTR [rbp-0x1c],0x0
  4303b1:	je     4304d5 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
  4303b7:	mov    rax,QWORD PTR [rbp-0x28]
  4303bb:	movzx  eax,BYTE PTR [rax+0x31]
  4303bf:	test   al,al
  4303c1:	je     4303e8 <flatcc_json_printer_uint32_vector_field@@Base+0x10f>
  4303c3:	mov    rax,QWORD PTR [rbp-0x28]
  4303c7:	mov    rax,QWORD PTR [rax+0x28]
  4303cb:	lea    rcx,[rax+0x1]
  4303cf:	mov    rdx,QWORD PTR [rbp-0x28]
  4303d3:	mov    QWORD PTR [rdx+0x28],rcx
  4303d7:	mov    BYTE PTR [rax],0xa
  4303da:	mov    rax,QWORD PTR [rbp-0x28]
  4303de:	mov    rdi,rax
  4303e1:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4303e6:	jmp    4303f4 <flatcc_json_printer_uint32_vector_field@@Base+0x11b>
  4303e8:	mov    rax,QWORD PTR [rbp-0x28]
  4303ec:	mov    rdi,rax
  4303ef:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4303f4:	mov    rax,QWORD PTR [rbp-0x28]
  4303f8:	mov    rbx,QWORD PTR [rax+0x28]
  4303fc:	mov    rax,QWORD PTR [rbp-0x18]
  430400:	mov    rdi,rax
  430403:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  430408:	mov    rsi,rbx
  43040b:	mov    edi,eax
  43040d:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  430412:	mov    ecx,eax
  430414:	mov    rax,QWORD PTR [rbp-0x28]
  430418:	mov    rdx,QWORD PTR [rax+0x28]
  43041c:	movsxd rax,ecx
  43041f:	add    rdx,rax
  430422:	mov    rax,QWORD PTR [rbp-0x28]
  430426:	mov    QWORD PTR [rax+0x28],rdx
  43042a:	mov    rax,QWORD PTR [rbp-0x18]
  43042e:	add    rax,0x4
  430432:	mov    QWORD PTR [rbp-0x18],rax
  430436:	sub    DWORD PTR [rbp-0x1c],0x1
  43043a:	jmp    4304d5 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
  43043f:	mov    rax,QWORD PTR [rbp-0x28]
  430443:	mov    rax,QWORD PTR [rax+0x28]
  430447:	lea    rcx,[rax+0x1]
  43044b:	mov    rdx,QWORD PTR [rbp-0x28]
  43044f:	mov    QWORD PTR [rdx+0x28],rcx
  430453:	mov    BYTE PTR [rax],0x2c
  430456:	mov    rax,QWORD PTR [rbp-0x28]
  43045a:	movzx  eax,BYTE PTR [rax+0x31]
  43045e:	test   al,al
  430460:	je     430487 <flatcc_json_printer_uint32_vector_field@@Base+0x1ae>
  430462:	mov    rax,QWORD PTR [rbp-0x28]
  430466:	mov    rax,QWORD PTR [rax+0x28]
  43046a:	lea    rcx,[rax+0x1]
  43046e:	mov    rdx,QWORD PTR [rbp-0x28]
  430472:	mov    QWORD PTR [rdx+0x28],rcx
  430476:	mov    BYTE PTR [rax],0xa
  430479:	mov    rax,QWORD PTR [rbp-0x28]
  43047d:	mov    rdi,rax
  430480:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430485:	jmp    430493 <flatcc_json_printer_uint32_vector_field@@Base+0x1ba>
  430487:	mov    rax,QWORD PTR [rbp-0x28]
  43048b:	mov    rdi,rax
  43048e:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430493:	mov    rax,QWORD PTR [rbp-0x28]
  430497:	mov    rbx,QWORD PTR [rax+0x28]
  43049b:	mov    rax,QWORD PTR [rbp-0x18]
  43049f:	mov    rdi,rax
  4304a2:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  4304a7:	mov    rsi,rbx
  4304aa:	mov    edi,eax
  4304ac:	call   429a98 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  4304b1:	mov    ecx,eax
  4304b3:	mov    rax,QWORD PTR [rbp-0x28]
  4304b7:	mov    rdx,QWORD PTR [rax+0x28]
  4304bb:	movsxd rax,ecx
  4304be:	add    rdx,rax
  4304c1:	mov    rax,QWORD PTR [rbp-0x28]
  4304c5:	mov    QWORD PTR [rax+0x28],rdx
  4304c9:	mov    rax,QWORD PTR [rbp-0x18]
  4304cd:	add    rax,0x4
  4304d1:	mov    QWORD PTR [rbp-0x18],rax
  4304d5:	mov    eax,DWORD PTR [rbp-0x1c]
  4304d8:	lea    edx,[rax-0x1]
  4304db:	mov    DWORD PTR [rbp-0x1c],edx
  4304de:	test   eax,eax
  4304e0:	jne    43043f <flatcc_json_printer_uint32_vector_field@@Base+0x166>
  4304e6:	mov    rax,QWORD PTR [rbp-0x28]
  4304ea:	movzx  eax,BYTE PTR [rax+0x31]
  4304ee:	test   al,al
  4304f0:	je     430526 <flatcc_json_printer_uint32_vector_field@@Base+0x24d>
  4304f2:	mov    rax,QWORD PTR [rbp-0x28]
  4304f6:	mov    rax,QWORD PTR [rax+0x28]
  4304fa:	lea    rcx,[rax+0x1]
  4304fe:	mov    rdx,QWORD PTR [rbp-0x28]
  430502:	mov    QWORD PTR [rdx+0x28],rcx
  430506:	mov    BYTE PTR [rax],0xa
  430509:	mov    rax,QWORD PTR [rbp-0x28]
  43050d:	mov    eax,DWORD PTR [rax+0x38]
  430510:	lea    edx,[rax-0x1]
  430513:	mov    rax,QWORD PTR [rbp-0x28]
  430517:	mov    DWORD PTR [rax+0x38],edx
  43051a:	mov    rax,QWORD PTR [rbp-0x28]
  43051e:	mov    rdi,rax
  430521:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430526:	mov    rax,QWORD PTR [rbp-0x28]
  43052a:	mov    rax,QWORD PTR [rax+0x28]
  43052e:	lea    rcx,[rax+0x1]
  430532:	mov    rdx,QWORD PTR [rbp-0x28]
  430536:	mov    QWORD PTR [rdx+0x28],rcx
  43053a:	mov    BYTE PTR [rax],0x5d
  43053d:	nop
  43053e:	add    rsp,0x38
  430542:	pop    rbx
  430543:	pop    rbp
  430544:	ret    

0000000000430545 <flatcc_json_printer_uint64_vector_field@@Base>:
  430545:	push   rbp
  430546:	mov    rbp,rsp
  430549:	push   rbx
  43054a:	sub    rsp,0x38
  43054e:	mov    QWORD PTR [rbp-0x28],rdi
  430552:	mov    QWORD PTR [rbp-0x30],rsi
  430556:	mov    DWORD PTR [rbp-0x34],edx
  430559:	mov    QWORD PTR [rbp-0x40],rcx
  43055d:	mov    DWORD PTR [rbp-0x38],r8d
  430561:	mov    edx,DWORD PTR [rbp-0x34]
  430564:	mov    rax,QWORD PTR [rbp-0x30]
  430568:	mov    esi,edx
  43056a:	mov    rdi,rax
  43056d:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  430572:	mov    QWORD PTR [rbp-0x18],rax
  430576:	cmp    QWORD PTR [rbp-0x18],0x0
  43057b:	je     4307ab <flatcc_json_printer_uint64_vector_field@@Base+0x266>
  430581:	mov    rax,QWORD PTR [rbp-0x30]
  430585:	mov    eax,DWORD PTR [rax+0x18]
  430588:	lea    ecx,[rax+0x1]
  43058b:	mov    rdx,QWORD PTR [rbp-0x30]
  43058f:	mov    DWORD PTR [rdx+0x18],ecx
  430592:	test   eax,eax
  430594:	je     4305ad <flatcc_json_printer_uint64_vector_field@@Base+0x68>
  430596:	mov    rax,QWORD PTR [rbp-0x28]
  43059a:	mov    rax,QWORD PTR [rax+0x28]
  43059e:	lea    rcx,[rax+0x1]
  4305a2:	mov    rdx,QWORD PTR [rbp-0x28]
  4305a6:	mov    QWORD PTR [rdx+0x28],rcx
  4305aa:	mov    BYTE PTR [rax],0x2c
  4305ad:	mov    rax,QWORD PTR [rbp-0x18]
  4305b1:	mov    rdi,rax
  4305b4:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4305b9:	mov    QWORD PTR [rbp-0x18],rax
  4305bd:	mov    rax,QWORD PTR [rbp-0x18]
  4305c1:	mov    rdi,rax
  4305c4:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4305c9:	mov    DWORD PTR [rbp-0x1c],eax
  4305cc:	mov    rax,QWORD PTR [rbp-0x18]
  4305d0:	add    rax,0x4
  4305d4:	mov    QWORD PTR [rbp-0x18],rax
  4305d8:	mov    eax,DWORD PTR [rbp-0x38]
  4305db:	movsxd rdx,eax
  4305de:	mov    rcx,QWORD PTR [rbp-0x40]
  4305e2:	mov    rax,QWORD PTR [rbp-0x28]
  4305e6:	mov    rsi,rcx
  4305e9:	mov    rdi,rax
  4305ec:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  4305f1:	mov    rax,QWORD PTR [rbp-0x28]
  4305f5:	mov    eax,DWORD PTR [rax+0x38]
  4305f8:	lea    edx,[rax+0x1]
  4305fb:	mov    rax,QWORD PTR [rbp-0x28]
  4305ff:	mov    DWORD PTR [rax+0x38],edx
  430602:	mov    rax,QWORD PTR [rbp-0x28]
  430606:	mov    rax,QWORD PTR [rax+0x28]
  43060a:	lea    rcx,[rax+0x1]
  43060e:	mov    rdx,QWORD PTR [rbp-0x28]
  430612:	mov    QWORD PTR [rdx+0x28],rcx
  430616:	mov    BYTE PTR [rax],0x5b
  430619:	cmp    DWORD PTR [rbp-0x1c],0x0
  43061d:	je     430743 <flatcc_json_printer_uint64_vector_field@@Base+0x1fe>
  430623:	mov    rax,QWORD PTR [rbp-0x28]
  430627:	movzx  eax,BYTE PTR [rax+0x31]
  43062b:	test   al,al
  43062d:	je     430654 <flatcc_json_printer_uint64_vector_field@@Base+0x10f>
  43062f:	mov    rax,QWORD PTR [rbp-0x28]
  430633:	mov    rax,QWORD PTR [rax+0x28]
  430637:	lea    rcx,[rax+0x1]
  43063b:	mov    rdx,QWORD PTR [rbp-0x28]
  43063f:	mov    QWORD PTR [rdx+0x28],rcx
  430643:	mov    BYTE PTR [rax],0xa
  430646:	mov    rax,QWORD PTR [rbp-0x28]
  43064a:	mov    rdi,rax
  43064d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430652:	jmp    430660 <flatcc_json_printer_uint64_vector_field@@Base+0x11b>
  430654:	mov    rax,QWORD PTR [rbp-0x28]
  430658:	mov    rdi,rax
  43065b:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430660:	mov    rax,QWORD PTR [rbp-0x28]
  430664:	mov    rbx,QWORD PTR [rax+0x28]
  430668:	mov    rax,QWORD PTR [rbp-0x18]
  43066c:	mov    rdi,rax
  43066f:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  430674:	mov    rsi,rbx
  430677:	mov    rdi,rax
  43067a:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  43067f:	mov    ecx,eax
  430681:	mov    rax,QWORD PTR [rbp-0x28]
  430685:	mov    rdx,QWORD PTR [rax+0x28]
  430689:	movsxd rax,ecx
  43068c:	add    rdx,rax
  43068f:	mov    rax,QWORD PTR [rbp-0x28]
  430693:	mov    QWORD PTR [rax+0x28],rdx
  430697:	mov    rax,QWORD PTR [rbp-0x18]
  43069b:	add    rax,0x8
  43069f:	mov    QWORD PTR [rbp-0x18],rax
  4306a3:	sub    DWORD PTR [rbp-0x1c],0x1
  4306a7:	jmp    430743 <flatcc_json_printer_uint64_vector_field@@Base+0x1fe>
  4306ac:	mov    rax,QWORD PTR [rbp-0x28]
  4306b0:	mov    rax,QWORD PTR [rax+0x28]
  4306b4:	lea    rcx,[rax+0x1]
  4306b8:	mov    rdx,QWORD PTR [rbp-0x28]
  4306bc:	mov    QWORD PTR [rdx+0x28],rcx
  4306c0:	mov    BYTE PTR [rax],0x2c
  4306c3:	mov    rax,QWORD PTR [rbp-0x28]
  4306c7:	movzx  eax,BYTE PTR [rax+0x31]
  4306cb:	test   al,al
  4306cd:	je     4306f4 <flatcc_json_printer_uint64_vector_field@@Base+0x1af>
  4306cf:	mov    rax,QWORD PTR [rbp-0x28]
  4306d3:	mov    rax,QWORD PTR [rax+0x28]
  4306d7:	lea    rcx,[rax+0x1]
  4306db:	mov    rdx,QWORD PTR [rbp-0x28]
  4306df:	mov    QWORD PTR [rdx+0x28],rcx
  4306e3:	mov    BYTE PTR [rax],0xa
  4306e6:	mov    rax,QWORD PTR [rbp-0x28]
  4306ea:	mov    rdi,rax
  4306ed:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4306f2:	jmp    430700 <flatcc_json_printer_uint64_vector_field@@Base+0x1bb>
  4306f4:	mov    rax,QWORD PTR [rbp-0x28]
  4306f8:	mov    rdi,rax
  4306fb:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430700:	mov    rax,QWORD PTR [rbp-0x28]
  430704:	mov    rbx,QWORD PTR [rax+0x28]
  430708:	mov    rax,QWORD PTR [rbp-0x18]
  43070c:	mov    rdi,rax
  43070f:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  430714:	mov    rsi,rbx
  430717:	mov    rdi,rax
  43071a:	call   429ea8 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  43071f:	mov    ecx,eax
  430721:	mov    rax,QWORD PTR [rbp-0x28]
  430725:	mov    rdx,QWORD PTR [rax+0x28]
  430729:	movsxd rax,ecx
  43072c:	add    rdx,rax
  43072f:	mov    rax,QWORD PTR [rbp-0x28]
  430733:	mov    QWORD PTR [rax+0x28],rdx
  430737:	mov    rax,QWORD PTR [rbp-0x18]
  43073b:	add    rax,0x8
  43073f:	mov    QWORD PTR [rbp-0x18],rax
  430743:	mov    eax,DWORD PTR [rbp-0x1c]
  430746:	lea    edx,[rax-0x1]
  430749:	mov    DWORD PTR [rbp-0x1c],edx
  43074c:	test   eax,eax
  43074e:	jne    4306ac <flatcc_json_printer_uint64_vector_field@@Base+0x167>
  430754:	mov    rax,QWORD PTR [rbp-0x28]
  430758:	movzx  eax,BYTE PTR [rax+0x31]
  43075c:	test   al,al
  43075e:	je     430794 <flatcc_json_printer_uint64_vector_field@@Base+0x24f>
  430760:	mov    rax,QWORD PTR [rbp-0x28]
  430764:	mov    rax,QWORD PTR [rax+0x28]
  430768:	lea    rcx,[rax+0x1]
  43076c:	mov    rdx,QWORD PTR [rbp-0x28]
  430770:	mov    QWORD PTR [rdx+0x28],rcx
  430774:	mov    BYTE PTR [rax],0xa
  430777:	mov    rax,QWORD PTR [rbp-0x28]
  43077b:	mov    eax,DWORD PTR [rax+0x38]
  43077e:	lea    edx,[rax-0x1]
  430781:	mov    rax,QWORD PTR [rbp-0x28]
  430785:	mov    DWORD PTR [rax+0x38],edx
  430788:	mov    rax,QWORD PTR [rbp-0x28]
  43078c:	mov    rdi,rax
  43078f:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430794:	mov    rax,QWORD PTR [rbp-0x28]
  430798:	mov    rax,QWORD PTR [rax+0x28]
  43079c:	lea    rcx,[rax+0x1]
  4307a0:	mov    rdx,QWORD PTR [rbp-0x28]
  4307a4:	mov    QWORD PTR [rdx+0x28],rcx
  4307a8:	mov    BYTE PTR [rax],0x5d
  4307ab:	nop
  4307ac:	add    rsp,0x38
  4307b0:	pop    rbx
  4307b1:	pop    rbp
  4307b2:	ret    

00000000004307b3 <flatcc_json_printer_int8_vector_field@@Base>:
  4307b3:	push   rbp
  4307b4:	mov    rbp,rsp
  4307b7:	push   rbx
  4307b8:	sub    rsp,0x38
  4307bc:	mov    QWORD PTR [rbp-0x28],rdi
  4307c0:	mov    QWORD PTR [rbp-0x30],rsi
  4307c4:	mov    DWORD PTR [rbp-0x34],edx
  4307c7:	mov    QWORD PTR [rbp-0x40],rcx
  4307cb:	mov    DWORD PTR [rbp-0x38],r8d
  4307cf:	mov    edx,DWORD PTR [rbp-0x34]
  4307d2:	mov    rax,QWORD PTR [rbp-0x30]
  4307d6:	mov    esi,edx
  4307d8:	mov    rdi,rax
  4307db:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4307e0:	mov    QWORD PTR [rbp-0x18],rax
  4307e4:	cmp    QWORD PTR [rbp-0x18],0x0
  4307e9:	je     430a1d <flatcc_json_printer_int8_vector_field@@Base+0x26a>
  4307ef:	mov    rax,QWORD PTR [rbp-0x30]
  4307f3:	mov    eax,DWORD PTR [rax+0x18]
  4307f6:	lea    ecx,[rax+0x1]
  4307f9:	mov    rdx,QWORD PTR [rbp-0x30]
  4307fd:	mov    DWORD PTR [rdx+0x18],ecx
  430800:	test   eax,eax
  430802:	je     43081b <flatcc_json_printer_int8_vector_field@@Base+0x68>
  430804:	mov    rax,QWORD PTR [rbp-0x28]
  430808:	mov    rax,QWORD PTR [rax+0x28]
  43080c:	lea    rcx,[rax+0x1]
  430810:	mov    rdx,QWORD PTR [rbp-0x28]
  430814:	mov    QWORD PTR [rdx+0x28],rcx
  430818:	mov    BYTE PTR [rax],0x2c
  43081b:	mov    rax,QWORD PTR [rbp-0x18]
  43081f:	mov    rdi,rax
  430822:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  430827:	mov    QWORD PTR [rbp-0x18],rax
  43082b:	mov    rax,QWORD PTR [rbp-0x18]
  43082f:	mov    rdi,rax
  430832:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430837:	mov    DWORD PTR [rbp-0x1c],eax
  43083a:	mov    rax,QWORD PTR [rbp-0x18]
  43083e:	add    rax,0x4
  430842:	mov    QWORD PTR [rbp-0x18],rax
  430846:	mov    eax,DWORD PTR [rbp-0x38]
  430849:	movsxd rdx,eax
  43084c:	mov    rcx,QWORD PTR [rbp-0x40]
  430850:	mov    rax,QWORD PTR [rbp-0x28]
  430854:	mov    rsi,rcx
  430857:	mov    rdi,rax
  43085a:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  43085f:	mov    rax,QWORD PTR [rbp-0x28]
  430863:	mov    eax,DWORD PTR [rax+0x38]
  430866:	lea    edx,[rax+0x1]
  430869:	mov    rax,QWORD PTR [rbp-0x28]
  43086d:	mov    DWORD PTR [rax+0x38],edx
  430870:	mov    rax,QWORD PTR [rbp-0x28]
  430874:	mov    rax,QWORD PTR [rax+0x28]
  430878:	lea    rcx,[rax+0x1]
  43087c:	mov    rdx,QWORD PTR [rbp-0x28]
  430880:	mov    QWORD PTR [rdx+0x28],rcx
  430884:	mov    BYTE PTR [rax],0x5b
  430887:	cmp    DWORD PTR [rbp-0x1c],0x0
  43088b:	je     4309b5 <flatcc_json_printer_int8_vector_field@@Base+0x202>
  430891:	mov    rax,QWORD PTR [rbp-0x28]
  430895:	movzx  eax,BYTE PTR [rax+0x31]
  430899:	test   al,al
  43089b:	je     4308c2 <flatcc_json_printer_int8_vector_field@@Base+0x10f>
  43089d:	mov    rax,QWORD PTR [rbp-0x28]
  4308a1:	mov    rax,QWORD PTR [rax+0x28]
  4308a5:	lea    rcx,[rax+0x1]
  4308a9:	mov    rdx,QWORD PTR [rbp-0x28]
  4308ad:	mov    QWORD PTR [rdx+0x28],rcx
  4308b1:	mov    BYTE PTR [rax],0xa
  4308b4:	mov    rax,QWORD PTR [rbp-0x28]
  4308b8:	mov    rdi,rax
  4308bb:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4308c0:	jmp    4308ce <flatcc_json_printer_int8_vector_field@@Base+0x11b>
  4308c2:	mov    rax,QWORD PTR [rbp-0x28]
  4308c6:	mov    rdi,rax
  4308c9:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4308ce:	mov    rax,QWORD PTR [rbp-0x28]
  4308d2:	mov    rbx,QWORD PTR [rax+0x28]
  4308d6:	mov    rax,QWORD PTR [rbp-0x18]
  4308da:	mov    rdi,rax
  4308dd:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  4308e2:	movsx  eax,al
  4308e5:	mov    rsi,rbx
  4308e8:	mov    edi,eax
  4308ea:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  4308ef:	mov    ecx,eax
  4308f1:	mov    rax,QWORD PTR [rbp-0x28]
  4308f5:	mov    rdx,QWORD PTR [rax+0x28]
  4308f9:	movsxd rax,ecx
  4308fc:	add    rdx,rax
  4308ff:	mov    rax,QWORD PTR [rbp-0x28]
  430903:	mov    QWORD PTR [rax+0x28],rdx
  430907:	mov    rax,QWORD PTR [rbp-0x18]
  43090b:	add    rax,0x1
  43090f:	mov    QWORD PTR [rbp-0x18],rax
  430913:	sub    DWORD PTR [rbp-0x1c],0x1
  430917:	jmp    4309b5 <flatcc_json_printer_int8_vector_field@@Base+0x202>
  43091c:	mov    rax,QWORD PTR [rbp-0x28]
  430920:	mov    rax,QWORD PTR [rax+0x28]
  430924:	lea    rcx,[rax+0x1]
  430928:	mov    rdx,QWORD PTR [rbp-0x28]
  43092c:	mov    QWORD PTR [rdx+0x28],rcx
  430930:	mov    BYTE PTR [rax],0x2c
  430933:	mov    rax,QWORD PTR [rbp-0x28]
  430937:	movzx  eax,BYTE PTR [rax+0x31]
  43093b:	test   al,al
  43093d:	je     430964 <flatcc_json_printer_int8_vector_field@@Base+0x1b1>
  43093f:	mov    rax,QWORD PTR [rbp-0x28]
  430943:	mov    rax,QWORD PTR [rax+0x28]
  430947:	lea    rcx,[rax+0x1]
  43094b:	mov    rdx,QWORD PTR [rbp-0x28]
  43094f:	mov    QWORD PTR [rdx+0x28],rcx
  430953:	mov    BYTE PTR [rax],0xa
  430956:	mov    rax,QWORD PTR [rbp-0x28]
  43095a:	mov    rdi,rax
  43095d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430962:	jmp    430970 <flatcc_json_printer_int8_vector_field@@Base+0x1bd>
  430964:	mov    rax,QWORD PTR [rbp-0x28]
  430968:	mov    rdi,rax
  43096b:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430970:	mov    rax,QWORD PTR [rbp-0x28]
  430974:	mov    rbx,QWORD PTR [rax+0x28]
  430978:	mov    rax,QWORD PTR [rbp-0x18]
  43097c:	mov    rdi,rax
  43097f:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  430984:	movsx  eax,al
  430987:	mov    rsi,rbx
  43098a:	mov    edi,eax
  43098c:	call   42a87d <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  430991:	mov    ecx,eax
  430993:	mov    rax,QWORD PTR [rbp-0x28]
  430997:	mov    rdx,QWORD PTR [rax+0x28]
  43099b:	movsxd rax,ecx
  43099e:	add    rdx,rax
  4309a1:	mov    rax,QWORD PTR [rbp-0x28]
  4309a5:	mov    QWORD PTR [rax+0x28],rdx
  4309a9:	mov    rax,QWORD PTR [rbp-0x18]
  4309ad:	add    rax,0x1
  4309b1:	mov    QWORD PTR [rbp-0x18],rax
  4309b5:	mov    eax,DWORD PTR [rbp-0x1c]
  4309b8:	lea    edx,[rax-0x1]
  4309bb:	mov    DWORD PTR [rbp-0x1c],edx
  4309be:	test   eax,eax
  4309c0:	jne    43091c <flatcc_json_printer_int8_vector_field@@Base+0x169>
  4309c6:	mov    rax,QWORD PTR [rbp-0x28]
  4309ca:	movzx  eax,BYTE PTR [rax+0x31]
  4309ce:	test   al,al
  4309d0:	je     430a06 <flatcc_json_printer_int8_vector_field@@Base+0x253>
  4309d2:	mov    rax,QWORD PTR [rbp-0x28]
  4309d6:	mov    rax,QWORD PTR [rax+0x28]
  4309da:	lea    rcx,[rax+0x1]
  4309de:	mov    rdx,QWORD PTR [rbp-0x28]
  4309e2:	mov    QWORD PTR [rdx+0x28],rcx
  4309e6:	mov    BYTE PTR [rax],0xa
  4309e9:	mov    rax,QWORD PTR [rbp-0x28]
  4309ed:	mov    eax,DWORD PTR [rax+0x38]
  4309f0:	lea    edx,[rax-0x1]
  4309f3:	mov    rax,QWORD PTR [rbp-0x28]
  4309f7:	mov    DWORD PTR [rax+0x38],edx
  4309fa:	mov    rax,QWORD PTR [rbp-0x28]
  4309fe:	mov    rdi,rax
  430a01:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430a06:	mov    rax,QWORD PTR [rbp-0x28]
  430a0a:	mov    rax,QWORD PTR [rax+0x28]
  430a0e:	lea    rcx,[rax+0x1]
  430a12:	mov    rdx,QWORD PTR [rbp-0x28]
  430a16:	mov    QWORD PTR [rdx+0x28],rcx
  430a1a:	mov    BYTE PTR [rax],0x5d
  430a1d:	nop
  430a1e:	add    rsp,0x38
  430a22:	pop    rbx
  430a23:	pop    rbp
  430a24:	ret    

0000000000430a25 <flatcc_json_printer_int16_vector_field@@Base>:
  430a25:	push   rbp
  430a26:	mov    rbp,rsp
  430a29:	push   rbx
  430a2a:	sub    rsp,0x38
  430a2e:	mov    QWORD PTR [rbp-0x28],rdi
  430a32:	mov    QWORD PTR [rbp-0x30],rsi
  430a36:	mov    DWORD PTR [rbp-0x34],edx
  430a39:	mov    QWORD PTR [rbp-0x40],rcx
  430a3d:	mov    DWORD PTR [rbp-0x38],r8d
  430a41:	mov    edx,DWORD PTR [rbp-0x34]
  430a44:	mov    rax,QWORD PTR [rbp-0x30]
  430a48:	mov    esi,edx
  430a4a:	mov    rdi,rax
  430a4d:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  430a52:	mov    QWORD PTR [rbp-0x18],rax
  430a56:	cmp    QWORD PTR [rbp-0x18],0x0
  430a5b:	je     430c8b <flatcc_json_printer_int16_vector_field@@Base+0x266>
  430a61:	mov    rax,QWORD PTR [rbp-0x30]
  430a65:	mov    eax,DWORD PTR [rax+0x18]
  430a68:	lea    ecx,[rax+0x1]
  430a6b:	mov    rdx,QWORD PTR [rbp-0x30]
  430a6f:	mov    DWORD PTR [rdx+0x18],ecx
  430a72:	test   eax,eax
  430a74:	je     430a8d <flatcc_json_printer_int16_vector_field@@Base+0x68>
  430a76:	mov    rax,QWORD PTR [rbp-0x28]
  430a7a:	mov    rax,QWORD PTR [rax+0x28]
  430a7e:	lea    rcx,[rax+0x1]
  430a82:	mov    rdx,QWORD PTR [rbp-0x28]
  430a86:	mov    QWORD PTR [rdx+0x28],rcx
  430a8a:	mov    BYTE PTR [rax],0x2c
  430a8d:	mov    rax,QWORD PTR [rbp-0x18]
  430a91:	mov    rdi,rax
  430a94:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  430a99:	mov    QWORD PTR [rbp-0x18],rax
  430a9d:	mov    rax,QWORD PTR [rbp-0x18]
  430aa1:	mov    rdi,rax
  430aa4:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430aa9:	mov    DWORD PTR [rbp-0x1c],eax
  430aac:	mov    rax,QWORD PTR [rbp-0x18]
  430ab0:	add    rax,0x4
  430ab4:	mov    QWORD PTR [rbp-0x18],rax
  430ab8:	mov    eax,DWORD PTR [rbp-0x38]
  430abb:	movsxd rdx,eax
  430abe:	mov    rcx,QWORD PTR [rbp-0x40]
  430ac2:	mov    rax,QWORD PTR [rbp-0x28]
  430ac6:	mov    rsi,rcx
  430ac9:	mov    rdi,rax
  430acc:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  430ad1:	mov    rax,QWORD PTR [rbp-0x28]
  430ad5:	mov    eax,DWORD PTR [rax+0x38]
  430ad8:	lea    edx,[rax+0x1]
  430adb:	mov    rax,QWORD PTR [rbp-0x28]
  430adf:	mov    DWORD PTR [rax+0x38],edx
  430ae2:	mov    rax,QWORD PTR [rbp-0x28]
  430ae6:	mov    rax,QWORD PTR [rax+0x28]
  430aea:	lea    rcx,[rax+0x1]
  430aee:	mov    rdx,QWORD PTR [rbp-0x28]
  430af2:	mov    QWORD PTR [rdx+0x28],rcx
  430af6:	mov    BYTE PTR [rax],0x5b
  430af9:	cmp    DWORD PTR [rbp-0x1c],0x0
  430afd:	je     430c23 <flatcc_json_printer_int16_vector_field@@Base+0x1fe>
  430b03:	mov    rax,QWORD PTR [rbp-0x28]
  430b07:	movzx  eax,BYTE PTR [rax+0x31]
  430b0b:	test   al,al
  430b0d:	je     430b34 <flatcc_json_printer_int16_vector_field@@Base+0x10f>
  430b0f:	mov    rax,QWORD PTR [rbp-0x28]
  430b13:	mov    rax,QWORD PTR [rax+0x28]
  430b17:	lea    rcx,[rax+0x1]
  430b1b:	mov    rdx,QWORD PTR [rbp-0x28]
  430b1f:	mov    QWORD PTR [rdx+0x28],rcx
  430b23:	mov    BYTE PTR [rax],0xa
  430b26:	mov    rax,QWORD PTR [rbp-0x28]
  430b2a:	mov    rdi,rax
  430b2d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430b32:	jmp    430b40 <flatcc_json_printer_int16_vector_field@@Base+0x11b>
  430b34:	mov    rax,QWORD PTR [rbp-0x28]
  430b38:	mov    rdi,rax
  430b3b:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430b40:	mov    rax,QWORD PTR [rbp-0x28]
  430b44:	mov    rbx,QWORD PTR [rax+0x28]
  430b48:	mov    rax,QWORD PTR [rbp-0x18]
  430b4c:	mov    rdi,rax
  430b4f:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  430b54:	cwde   
  430b55:	mov    rsi,rbx
  430b58:	mov    edi,eax
  430b5a:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  430b5f:	mov    ecx,eax
  430b61:	mov    rax,QWORD PTR [rbp-0x28]
  430b65:	mov    rdx,QWORD PTR [rax+0x28]
  430b69:	movsxd rax,ecx
  430b6c:	add    rdx,rax
  430b6f:	mov    rax,QWORD PTR [rbp-0x28]
  430b73:	mov    QWORD PTR [rax+0x28],rdx
  430b77:	mov    rax,QWORD PTR [rbp-0x18]
  430b7b:	add    rax,0x2
  430b7f:	mov    QWORD PTR [rbp-0x18],rax
  430b83:	sub    DWORD PTR [rbp-0x1c],0x1
  430b87:	jmp    430c23 <flatcc_json_printer_int16_vector_field@@Base+0x1fe>
  430b8c:	mov    rax,QWORD PTR [rbp-0x28]
  430b90:	mov    rax,QWORD PTR [rax+0x28]
  430b94:	lea    rcx,[rax+0x1]
  430b98:	mov    rdx,QWORD PTR [rbp-0x28]
  430b9c:	mov    QWORD PTR [rdx+0x28],rcx
  430ba0:	mov    BYTE PTR [rax],0x2c
  430ba3:	mov    rax,QWORD PTR [rbp-0x28]
  430ba7:	movzx  eax,BYTE PTR [rax+0x31]
  430bab:	test   al,al
  430bad:	je     430bd4 <flatcc_json_printer_int16_vector_field@@Base+0x1af>
  430baf:	mov    rax,QWORD PTR [rbp-0x28]
  430bb3:	mov    rax,QWORD PTR [rax+0x28]
  430bb7:	lea    rcx,[rax+0x1]
  430bbb:	mov    rdx,QWORD PTR [rbp-0x28]
  430bbf:	mov    QWORD PTR [rdx+0x28],rcx
  430bc3:	mov    BYTE PTR [rax],0xa
  430bc6:	mov    rax,QWORD PTR [rbp-0x28]
  430bca:	mov    rdi,rax
  430bcd:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430bd2:	jmp    430be0 <flatcc_json_printer_int16_vector_field@@Base+0x1bb>
  430bd4:	mov    rax,QWORD PTR [rbp-0x28]
  430bd8:	mov    rdi,rax
  430bdb:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430be0:	mov    rax,QWORD PTR [rbp-0x28]
  430be4:	mov    rbx,QWORD PTR [rax+0x28]
  430be8:	mov    rax,QWORD PTR [rbp-0x18]
  430bec:	mov    rdi,rax
  430bef:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  430bf4:	cwde   
  430bf5:	mov    rsi,rbx
  430bf8:	mov    edi,eax
  430bfa:	call   42a8d7 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  430bff:	mov    ecx,eax
  430c01:	mov    rax,QWORD PTR [rbp-0x28]
  430c05:	mov    rdx,QWORD PTR [rax+0x28]
  430c09:	movsxd rax,ecx
  430c0c:	add    rdx,rax
  430c0f:	mov    rax,QWORD PTR [rbp-0x28]
  430c13:	mov    QWORD PTR [rax+0x28],rdx
  430c17:	mov    rax,QWORD PTR [rbp-0x18]
  430c1b:	add    rax,0x2
  430c1f:	mov    QWORD PTR [rbp-0x18],rax
  430c23:	mov    eax,DWORD PTR [rbp-0x1c]
  430c26:	lea    edx,[rax-0x1]
  430c29:	mov    DWORD PTR [rbp-0x1c],edx
  430c2c:	test   eax,eax
  430c2e:	jne    430b8c <flatcc_json_printer_int16_vector_field@@Base+0x167>
  430c34:	mov    rax,QWORD PTR [rbp-0x28]
  430c38:	movzx  eax,BYTE PTR [rax+0x31]
  430c3c:	test   al,al
  430c3e:	je     430c74 <flatcc_json_printer_int16_vector_field@@Base+0x24f>
  430c40:	mov    rax,QWORD PTR [rbp-0x28]
  430c44:	mov    rax,QWORD PTR [rax+0x28]
  430c48:	lea    rcx,[rax+0x1]
  430c4c:	mov    rdx,QWORD PTR [rbp-0x28]
  430c50:	mov    QWORD PTR [rdx+0x28],rcx
  430c54:	mov    BYTE PTR [rax],0xa
  430c57:	mov    rax,QWORD PTR [rbp-0x28]
  430c5b:	mov    eax,DWORD PTR [rax+0x38]
  430c5e:	lea    edx,[rax-0x1]
  430c61:	mov    rax,QWORD PTR [rbp-0x28]
  430c65:	mov    DWORD PTR [rax+0x38],edx
  430c68:	mov    rax,QWORD PTR [rbp-0x28]
  430c6c:	mov    rdi,rax
  430c6f:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430c74:	mov    rax,QWORD PTR [rbp-0x28]
  430c78:	mov    rax,QWORD PTR [rax+0x28]
  430c7c:	lea    rcx,[rax+0x1]
  430c80:	mov    rdx,QWORD PTR [rbp-0x28]
  430c84:	mov    QWORD PTR [rdx+0x28],rcx
  430c88:	mov    BYTE PTR [rax],0x5d
  430c8b:	nop
  430c8c:	add    rsp,0x38
  430c90:	pop    rbx
  430c91:	pop    rbp
  430c92:	ret    

0000000000430c93 <flatcc_json_printer_int32_vector_field@@Base>:
  430c93:	push   rbp
  430c94:	mov    rbp,rsp
  430c97:	push   rbx
  430c98:	sub    rsp,0x38
  430c9c:	mov    QWORD PTR [rbp-0x28],rdi
  430ca0:	mov    QWORD PTR [rbp-0x30],rsi
  430ca4:	mov    DWORD PTR [rbp-0x34],edx
  430ca7:	mov    QWORD PTR [rbp-0x40],rcx
  430cab:	mov    DWORD PTR [rbp-0x38],r8d
  430caf:	mov    edx,DWORD PTR [rbp-0x34]
  430cb2:	mov    rax,QWORD PTR [rbp-0x30]
  430cb6:	mov    esi,edx
  430cb8:	mov    rdi,rax
  430cbb:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  430cc0:	mov    QWORD PTR [rbp-0x18],rax
  430cc4:	cmp    QWORD PTR [rbp-0x18],0x0
  430cc9:	je     430ef7 <flatcc_json_printer_int32_vector_field@@Base+0x264>
  430ccf:	mov    rax,QWORD PTR [rbp-0x30]
  430cd3:	mov    eax,DWORD PTR [rax+0x18]
  430cd6:	lea    ecx,[rax+0x1]
  430cd9:	mov    rdx,QWORD PTR [rbp-0x30]
  430cdd:	mov    DWORD PTR [rdx+0x18],ecx
  430ce0:	test   eax,eax
  430ce2:	je     430cfb <flatcc_json_printer_int32_vector_field@@Base+0x68>
  430ce4:	mov    rax,QWORD PTR [rbp-0x28]
  430ce8:	mov    rax,QWORD PTR [rax+0x28]
  430cec:	lea    rcx,[rax+0x1]
  430cf0:	mov    rdx,QWORD PTR [rbp-0x28]
  430cf4:	mov    QWORD PTR [rdx+0x28],rcx
  430cf8:	mov    BYTE PTR [rax],0x2c
  430cfb:	mov    rax,QWORD PTR [rbp-0x18]
  430cff:	mov    rdi,rax
  430d02:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  430d07:	mov    QWORD PTR [rbp-0x18],rax
  430d0b:	mov    rax,QWORD PTR [rbp-0x18]
  430d0f:	mov    rdi,rax
  430d12:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430d17:	mov    DWORD PTR [rbp-0x1c],eax
  430d1a:	mov    rax,QWORD PTR [rbp-0x18]
  430d1e:	add    rax,0x4
  430d22:	mov    QWORD PTR [rbp-0x18],rax
  430d26:	mov    eax,DWORD PTR [rbp-0x38]
  430d29:	movsxd rdx,eax
  430d2c:	mov    rcx,QWORD PTR [rbp-0x40]
  430d30:	mov    rax,QWORD PTR [rbp-0x28]
  430d34:	mov    rsi,rcx
  430d37:	mov    rdi,rax
  430d3a:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  430d3f:	mov    rax,QWORD PTR [rbp-0x28]
  430d43:	mov    eax,DWORD PTR [rax+0x38]
  430d46:	lea    edx,[rax+0x1]
  430d49:	mov    rax,QWORD PTR [rbp-0x28]
  430d4d:	mov    DWORD PTR [rax+0x38],edx
  430d50:	mov    rax,QWORD PTR [rbp-0x28]
  430d54:	mov    rax,QWORD PTR [rax+0x28]
  430d58:	lea    rcx,[rax+0x1]
  430d5c:	mov    rdx,QWORD PTR [rbp-0x28]
  430d60:	mov    QWORD PTR [rdx+0x28],rcx
  430d64:	mov    BYTE PTR [rax],0x5b
  430d67:	cmp    DWORD PTR [rbp-0x1c],0x0
  430d6b:	je     430e8f <flatcc_json_printer_int32_vector_field@@Base+0x1fc>
  430d71:	mov    rax,QWORD PTR [rbp-0x28]
  430d75:	movzx  eax,BYTE PTR [rax+0x31]
  430d79:	test   al,al
  430d7b:	je     430da2 <flatcc_json_printer_int32_vector_field@@Base+0x10f>
  430d7d:	mov    rax,QWORD PTR [rbp-0x28]
  430d81:	mov    rax,QWORD PTR [rax+0x28]
  430d85:	lea    rcx,[rax+0x1]
  430d89:	mov    rdx,QWORD PTR [rbp-0x28]
  430d8d:	mov    QWORD PTR [rdx+0x28],rcx
  430d91:	mov    BYTE PTR [rax],0xa
  430d94:	mov    rax,QWORD PTR [rbp-0x28]
  430d98:	mov    rdi,rax
  430d9b:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430da0:	jmp    430dae <flatcc_json_printer_int32_vector_field@@Base+0x11b>
  430da2:	mov    rax,QWORD PTR [rbp-0x28]
  430da6:	mov    rdi,rax
  430da9:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430dae:	mov    rax,QWORD PTR [rbp-0x28]
  430db2:	mov    rbx,QWORD PTR [rax+0x28]
  430db6:	mov    rax,QWORD PTR [rbp-0x18]
  430dba:	mov    rdi,rax
  430dbd:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  430dc2:	mov    rsi,rbx
  430dc5:	mov    edi,eax
  430dc7:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  430dcc:	mov    ecx,eax
  430dce:	mov    rax,QWORD PTR [rbp-0x28]
  430dd2:	mov    rdx,QWORD PTR [rax+0x28]
  430dd6:	movsxd rax,ecx
  430dd9:	add    rdx,rax
  430ddc:	mov    rax,QWORD PTR [rbp-0x28]
  430de0:	mov    QWORD PTR [rax+0x28],rdx
  430de4:	mov    rax,QWORD PTR [rbp-0x18]
  430de8:	add    rax,0x4
  430dec:	mov    QWORD PTR [rbp-0x18],rax
  430df0:	sub    DWORD PTR [rbp-0x1c],0x1
  430df4:	jmp    430e8f <flatcc_json_printer_int32_vector_field@@Base+0x1fc>
  430df9:	mov    rax,QWORD PTR [rbp-0x28]
  430dfd:	mov    rax,QWORD PTR [rax+0x28]
  430e01:	lea    rcx,[rax+0x1]
  430e05:	mov    rdx,QWORD PTR [rbp-0x28]
  430e09:	mov    QWORD PTR [rdx+0x28],rcx
  430e0d:	mov    BYTE PTR [rax],0x2c
  430e10:	mov    rax,QWORD PTR [rbp-0x28]
  430e14:	movzx  eax,BYTE PTR [rax+0x31]
  430e18:	test   al,al
  430e1a:	je     430e41 <flatcc_json_printer_int32_vector_field@@Base+0x1ae>
  430e1c:	mov    rax,QWORD PTR [rbp-0x28]
  430e20:	mov    rax,QWORD PTR [rax+0x28]
  430e24:	lea    rcx,[rax+0x1]
  430e28:	mov    rdx,QWORD PTR [rbp-0x28]
  430e2c:	mov    QWORD PTR [rdx+0x28],rcx
  430e30:	mov    BYTE PTR [rax],0xa
  430e33:	mov    rax,QWORD PTR [rbp-0x28]
  430e37:	mov    rdi,rax
  430e3a:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430e3f:	jmp    430e4d <flatcc_json_printer_int32_vector_field@@Base+0x1ba>
  430e41:	mov    rax,QWORD PTR [rbp-0x28]
  430e45:	mov    rdi,rax
  430e48:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  430e4d:	mov    rax,QWORD PTR [rbp-0x28]
  430e51:	mov    rbx,QWORD PTR [rax+0x28]
  430e55:	mov    rax,QWORD PTR [rbp-0x18]
  430e59:	mov    rdi,rax
  430e5c:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  430e61:	mov    rsi,rbx
  430e64:	mov    edi,eax
  430e66:	call   42a934 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  430e6b:	mov    ecx,eax
  430e6d:	mov    rax,QWORD PTR [rbp-0x28]
  430e71:	mov    rdx,QWORD PTR [rax+0x28]
  430e75:	movsxd rax,ecx
  430e78:	add    rdx,rax
  430e7b:	mov    rax,QWORD PTR [rbp-0x28]
  430e7f:	mov    QWORD PTR [rax+0x28],rdx
  430e83:	mov    rax,QWORD PTR [rbp-0x18]
  430e87:	add    rax,0x4
  430e8b:	mov    QWORD PTR [rbp-0x18],rax
  430e8f:	mov    eax,DWORD PTR [rbp-0x1c]
  430e92:	lea    edx,[rax-0x1]
  430e95:	mov    DWORD PTR [rbp-0x1c],edx
  430e98:	test   eax,eax
  430e9a:	jne    430df9 <flatcc_json_printer_int32_vector_field@@Base+0x166>
  430ea0:	mov    rax,QWORD PTR [rbp-0x28]
  430ea4:	movzx  eax,BYTE PTR [rax+0x31]
  430ea8:	test   al,al
  430eaa:	je     430ee0 <flatcc_json_printer_int32_vector_field@@Base+0x24d>
  430eac:	mov    rax,QWORD PTR [rbp-0x28]
  430eb0:	mov    rax,QWORD PTR [rax+0x28]
  430eb4:	lea    rcx,[rax+0x1]
  430eb8:	mov    rdx,QWORD PTR [rbp-0x28]
  430ebc:	mov    QWORD PTR [rdx+0x28],rcx
  430ec0:	mov    BYTE PTR [rax],0xa
  430ec3:	mov    rax,QWORD PTR [rbp-0x28]
  430ec7:	mov    eax,DWORD PTR [rax+0x38]
  430eca:	lea    edx,[rax-0x1]
  430ecd:	mov    rax,QWORD PTR [rbp-0x28]
  430ed1:	mov    DWORD PTR [rax+0x38],edx
  430ed4:	mov    rax,QWORD PTR [rbp-0x28]
  430ed8:	mov    rdi,rax
  430edb:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430ee0:	mov    rax,QWORD PTR [rbp-0x28]
  430ee4:	mov    rax,QWORD PTR [rax+0x28]
  430ee8:	lea    rcx,[rax+0x1]
  430eec:	mov    rdx,QWORD PTR [rbp-0x28]
  430ef0:	mov    QWORD PTR [rdx+0x28],rcx
  430ef4:	mov    BYTE PTR [rax],0x5d
  430ef7:	nop
  430ef8:	add    rsp,0x38
  430efc:	pop    rbx
  430efd:	pop    rbp
  430efe:	ret    

0000000000430eff <flatcc_json_printer_int64_vector_field@@Base>:
  430eff:	push   rbp
  430f00:	mov    rbp,rsp
  430f03:	push   rbx
  430f04:	sub    rsp,0x38
  430f08:	mov    QWORD PTR [rbp-0x28],rdi
  430f0c:	mov    QWORD PTR [rbp-0x30],rsi
  430f10:	mov    DWORD PTR [rbp-0x34],edx
  430f13:	mov    QWORD PTR [rbp-0x40],rcx
  430f17:	mov    DWORD PTR [rbp-0x38],r8d
  430f1b:	mov    edx,DWORD PTR [rbp-0x34]
  430f1e:	mov    rax,QWORD PTR [rbp-0x30]
  430f22:	mov    esi,edx
  430f24:	mov    rdi,rax
  430f27:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  430f2c:	mov    QWORD PTR [rbp-0x18],rax
  430f30:	cmp    QWORD PTR [rbp-0x18],0x0
  430f35:	je     431165 <flatcc_json_printer_int64_vector_field@@Base+0x266>
  430f3b:	mov    rax,QWORD PTR [rbp-0x30]
  430f3f:	mov    eax,DWORD PTR [rax+0x18]
  430f42:	lea    ecx,[rax+0x1]
  430f45:	mov    rdx,QWORD PTR [rbp-0x30]
  430f49:	mov    DWORD PTR [rdx+0x18],ecx
  430f4c:	test   eax,eax
  430f4e:	je     430f67 <flatcc_json_printer_int64_vector_field@@Base+0x68>
  430f50:	mov    rax,QWORD PTR [rbp-0x28]
  430f54:	mov    rax,QWORD PTR [rax+0x28]
  430f58:	lea    rcx,[rax+0x1]
  430f5c:	mov    rdx,QWORD PTR [rbp-0x28]
  430f60:	mov    QWORD PTR [rdx+0x28],rcx
  430f64:	mov    BYTE PTR [rax],0x2c
  430f67:	mov    rax,QWORD PTR [rbp-0x18]
  430f6b:	mov    rdi,rax
  430f6e:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  430f73:	mov    QWORD PTR [rbp-0x18],rax
  430f77:	mov    rax,QWORD PTR [rbp-0x18]
  430f7b:	mov    rdi,rax
  430f7e:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430f83:	mov    DWORD PTR [rbp-0x1c],eax
  430f86:	mov    rax,QWORD PTR [rbp-0x18]
  430f8a:	add    rax,0x4
  430f8e:	mov    QWORD PTR [rbp-0x18],rax
  430f92:	mov    eax,DWORD PTR [rbp-0x38]
  430f95:	movsxd rdx,eax
  430f98:	mov    rcx,QWORD PTR [rbp-0x40]
  430f9c:	mov    rax,QWORD PTR [rbp-0x28]
  430fa0:	mov    rsi,rcx
  430fa3:	mov    rdi,rax
  430fa6:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  430fab:	mov    rax,QWORD PTR [rbp-0x28]
  430faf:	mov    eax,DWORD PTR [rax+0x38]
  430fb2:	lea    edx,[rax+0x1]
  430fb5:	mov    rax,QWORD PTR [rbp-0x28]
  430fb9:	mov    DWORD PTR [rax+0x38],edx
  430fbc:	mov    rax,QWORD PTR [rbp-0x28]
  430fc0:	mov    rax,QWORD PTR [rax+0x28]
  430fc4:	lea    rcx,[rax+0x1]
  430fc8:	mov    rdx,QWORD PTR [rbp-0x28]
  430fcc:	mov    QWORD PTR [rdx+0x28],rcx
  430fd0:	mov    BYTE PTR [rax],0x5b
  430fd3:	cmp    DWORD PTR [rbp-0x1c],0x0
  430fd7:	je     4310fd <flatcc_json_printer_int64_vector_field@@Base+0x1fe>
  430fdd:	mov    rax,QWORD PTR [rbp-0x28]
  430fe1:	movzx  eax,BYTE PTR [rax+0x31]
  430fe5:	test   al,al
  430fe7:	je     43100e <flatcc_json_printer_int64_vector_field@@Base+0x10f>
  430fe9:	mov    rax,QWORD PTR [rbp-0x28]
  430fed:	mov    rax,QWORD PTR [rax+0x28]
  430ff1:	lea    rcx,[rax+0x1]
  430ff5:	mov    rdx,QWORD PTR [rbp-0x28]
  430ff9:	mov    QWORD PTR [rdx+0x28],rcx
  430ffd:	mov    BYTE PTR [rax],0xa
  431000:	mov    rax,QWORD PTR [rbp-0x28]
  431004:	mov    rdi,rax
  431007:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43100c:	jmp    43101a <flatcc_json_printer_int64_vector_field@@Base+0x11b>
  43100e:	mov    rax,QWORD PTR [rbp-0x28]
  431012:	mov    rdi,rax
  431015:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43101a:	mov    rax,QWORD PTR [rbp-0x28]
  43101e:	mov    rbx,QWORD PTR [rax+0x28]
  431022:	mov    rax,QWORD PTR [rbp-0x18]
  431026:	mov    rdi,rax
  431029:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  43102e:	mov    rsi,rbx
  431031:	mov    rdi,rax
  431034:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  431039:	mov    ecx,eax
  43103b:	mov    rax,QWORD PTR [rbp-0x28]
  43103f:	mov    rdx,QWORD PTR [rax+0x28]
  431043:	movsxd rax,ecx
  431046:	add    rdx,rax
  431049:	mov    rax,QWORD PTR [rbp-0x28]
  43104d:	mov    QWORD PTR [rax+0x28],rdx
  431051:	mov    rax,QWORD PTR [rbp-0x18]
  431055:	add    rax,0x8
  431059:	mov    QWORD PTR [rbp-0x18],rax
  43105d:	sub    DWORD PTR [rbp-0x1c],0x1
  431061:	jmp    4310fd <flatcc_json_printer_int64_vector_field@@Base+0x1fe>
  431066:	mov    rax,QWORD PTR [rbp-0x28]
  43106a:	mov    rax,QWORD PTR [rax+0x28]
  43106e:	lea    rcx,[rax+0x1]
  431072:	mov    rdx,QWORD PTR [rbp-0x28]
  431076:	mov    QWORD PTR [rdx+0x28],rcx
  43107a:	mov    BYTE PTR [rax],0x2c
  43107d:	mov    rax,QWORD PTR [rbp-0x28]
  431081:	movzx  eax,BYTE PTR [rax+0x31]
  431085:	test   al,al
  431087:	je     4310ae <flatcc_json_printer_int64_vector_field@@Base+0x1af>
  431089:	mov    rax,QWORD PTR [rbp-0x28]
  43108d:	mov    rax,QWORD PTR [rax+0x28]
  431091:	lea    rcx,[rax+0x1]
  431095:	mov    rdx,QWORD PTR [rbp-0x28]
  431099:	mov    QWORD PTR [rdx+0x28],rcx
  43109d:	mov    BYTE PTR [rax],0xa
  4310a0:	mov    rax,QWORD PTR [rbp-0x28]
  4310a4:	mov    rdi,rax
  4310a7:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4310ac:	jmp    4310ba <flatcc_json_printer_int64_vector_field@@Base+0x1bb>
  4310ae:	mov    rax,QWORD PTR [rbp-0x28]
  4310b2:	mov    rdi,rax
  4310b5:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4310ba:	mov    rax,QWORD PTR [rbp-0x28]
  4310be:	mov    rbx,QWORD PTR [rax+0x28]
  4310c2:	mov    rax,QWORD PTR [rbp-0x18]
  4310c6:	mov    rdi,rax
  4310c9:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  4310ce:	mov    rsi,rbx
  4310d1:	mov    rdi,rax
  4310d4:	call   42a981 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  4310d9:	mov    ecx,eax
  4310db:	mov    rax,QWORD PTR [rbp-0x28]
  4310df:	mov    rdx,QWORD PTR [rax+0x28]
  4310e3:	movsxd rax,ecx
  4310e6:	add    rdx,rax
  4310e9:	mov    rax,QWORD PTR [rbp-0x28]
  4310ed:	mov    QWORD PTR [rax+0x28],rdx
  4310f1:	mov    rax,QWORD PTR [rbp-0x18]
  4310f5:	add    rax,0x8
  4310f9:	mov    QWORD PTR [rbp-0x18],rax
  4310fd:	mov    eax,DWORD PTR [rbp-0x1c]
  431100:	lea    edx,[rax-0x1]
  431103:	mov    DWORD PTR [rbp-0x1c],edx
  431106:	test   eax,eax
  431108:	jne    431066 <flatcc_json_printer_int64_vector_field@@Base+0x167>
  43110e:	mov    rax,QWORD PTR [rbp-0x28]
  431112:	movzx  eax,BYTE PTR [rax+0x31]
  431116:	test   al,al
  431118:	je     43114e <flatcc_json_printer_int64_vector_field@@Base+0x24f>
  43111a:	mov    rax,QWORD PTR [rbp-0x28]
  43111e:	mov    rax,QWORD PTR [rax+0x28]
  431122:	lea    rcx,[rax+0x1]
  431126:	mov    rdx,QWORD PTR [rbp-0x28]
  43112a:	mov    QWORD PTR [rdx+0x28],rcx
  43112e:	mov    BYTE PTR [rax],0xa
  431131:	mov    rax,QWORD PTR [rbp-0x28]
  431135:	mov    eax,DWORD PTR [rax+0x38]
  431138:	lea    edx,[rax-0x1]
  43113b:	mov    rax,QWORD PTR [rbp-0x28]
  43113f:	mov    DWORD PTR [rax+0x38],edx
  431142:	mov    rax,QWORD PTR [rbp-0x28]
  431146:	mov    rdi,rax
  431149:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43114e:	mov    rax,QWORD PTR [rbp-0x28]
  431152:	mov    rax,QWORD PTR [rax+0x28]
  431156:	lea    rcx,[rax+0x1]
  43115a:	mov    rdx,QWORD PTR [rbp-0x28]
  43115e:	mov    QWORD PTR [rdx+0x28],rcx
  431162:	mov    BYTE PTR [rax],0x5d
  431165:	nop
  431166:	add    rsp,0x38
  43116a:	pop    rbx
  43116b:	pop    rbp
  43116c:	ret    

000000000043116d <flatcc_json_printer_bool_vector_field@@Base>:
  43116d:	push   rbp
  43116e:	mov    rbp,rsp
  431171:	push   rbx
  431172:	sub    rsp,0x38
  431176:	mov    QWORD PTR [rbp-0x28],rdi
  43117a:	mov    QWORD PTR [rbp-0x30],rsi
  43117e:	mov    DWORD PTR [rbp-0x34],edx
  431181:	mov    QWORD PTR [rbp-0x40],rcx
  431185:	mov    DWORD PTR [rbp-0x38],r8d
  431189:	mov    edx,DWORD PTR [rbp-0x34]
  43118c:	mov    rax,QWORD PTR [rbp-0x30]
  431190:	mov    esi,edx
  431192:	mov    rdi,rax
  431195:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  43119a:	mov    QWORD PTR [rbp-0x18],rax
  43119e:	cmp    QWORD PTR [rbp-0x18],0x0
  4311a3:	je     4313d7 <flatcc_json_printer_bool_vector_field@@Base+0x26a>
  4311a9:	mov    rax,QWORD PTR [rbp-0x30]
  4311ad:	mov    eax,DWORD PTR [rax+0x18]
  4311b0:	lea    ecx,[rax+0x1]
  4311b3:	mov    rdx,QWORD PTR [rbp-0x30]
  4311b7:	mov    DWORD PTR [rdx+0x18],ecx
  4311ba:	test   eax,eax
  4311bc:	je     4311d5 <flatcc_json_printer_bool_vector_field@@Base+0x68>
  4311be:	mov    rax,QWORD PTR [rbp-0x28]
  4311c2:	mov    rax,QWORD PTR [rax+0x28]
  4311c6:	lea    rcx,[rax+0x1]
  4311ca:	mov    rdx,QWORD PTR [rbp-0x28]
  4311ce:	mov    QWORD PTR [rdx+0x28],rcx
  4311d2:	mov    BYTE PTR [rax],0x2c
  4311d5:	mov    rax,QWORD PTR [rbp-0x18]
  4311d9:	mov    rdi,rax
  4311dc:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4311e1:	mov    QWORD PTR [rbp-0x18],rax
  4311e5:	mov    rax,QWORD PTR [rbp-0x18]
  4311e9:	mov    rdi,rax
  4311ec:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4311f1:	mov    DWORD PTR [rbp-0x1c],eax
  4311f4:	mov    rax,QWORD PTR [rbp-0x18]
  4311f8:	add    rax,0x4
  4311fc:	mov    QWORD PTR [rbp-0x18],rax
  431200:	mov    eax,DWORD PTR [rbp-0x38]
  431203:	movsxd rdx,eax
  431206:	mov    rcx,QWORD PTR [rbp-0x40]
  43120a:	mov    rax,QWORD PTR [rbp-0x28]
  43120e:	mov    rsi,rcx
  431211:	mov    rdi,rax
  431214:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  431219:	mov    rax,QWORD PTR [rbp-0x28]
  43121d:	mov    eax,DWORD PTR [rax+0x38]
  431220:	lea    edx,[rax+0x1]
  431223:	mov    rax,QWORD PTR [rbp-0x28]
  431227:	mov    DWORD PTR [rax+0x38],edx
  43122a:	mov    rax,QWORD PTR [rbp-0x28]
  43122e:	mov    rax,QWORD PTR [rax+0x28]
  431232:	lea    rcx,[rax+0x1]
  431236:	mov    rdx,QWORD PTR [rbp-0x28]
  43123a:	mov    QWORD PTR [rdx+0x28],rcx
  43123e:	mov    BYTE PTR [rax],0x5b
  431241:	cmp    DWORD PTR [rbp-0x1c],0x0
  431245:	je     43136f <flatcc_json_printer_bool_vector_field@@Base+0x202>
  43124b:	mov    rax,QWORD PTR [rbp-0x28]
  43124f:	movzx  eax,BYTE PTR [rax+0x31]
  431253:	test   al,al
  431255:	je     43127c <flatcc_json_printer_bool_vector_field@@Base+0x10f>
  431257:	mov    rax,QWORD PTR [rbp-0x28]
  43125b:	mov    rax,QWORD PTR [rax+0x28]
  43125f:	lea    rcx,[rax+0x1]
  431263:	mov    rdx,QWORD PTR [rbp-0x28]
  431267:	mov    QWORD PTR [rdx+0x28],rcx
  43126b:	mov    BYTE PTR [rax],0xa
  43126e:	mov    rax,QWORD PTR [rbp-0x28]
  431272:	mov    rdi,rax
  431275:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43127a:	jmp    431288 <flatcc_json_printer_bool_vector_field@@Base+0x11b>
  43127c:	mov    rax,QWORD PTR [rbp-0x28]
  431280:	mov    rdi,rax
  431283:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431288:	mov    rax,QWORD PTR [rbp-0x28]
  43128c:	mov    rbx,QWORD PTR [rax+0x28]
  431290:	mov    rax,QWORD PTR [rbp-0x18]
  431294:	mov    rdi,rax
  431297:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  43129c:	movzx  eax,al
  43129f:	mov    rsi,rbx
  4312a2:	mov    edi,eax
  4312a4:	call   429656 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  4312a9:	mov    ecx,eax
  4312ab:	mov    rax,QWORD PTR [rbp-0x28]
  4312af:	mov    rdx,QWORD PTR [rax+0x28]
  4312b3:	movsxd rax,ecx
  4312b6:	add    rdx,rax
  4312b9:	mov    rax,QWORD PTR [rbp-0x28]
  4312bd:	mov    QWORD PTR [rax+0x28],rdx
  4312c1:	mov    rax,QWORD PTR [rbp-0x18]
  4312c5:	add    rax,0x1
  4312c9:	mov    QWORD PTR [rbp-0x18],rax
  4312cd:	sub    DWORD PTR [rbp-0x1c],0x1
  4312d1:	jmp    43136f <flatcc_json_printer_bool_vector_field@@Base+0x202>
  4312d6:	mov    rax,QWORD PTR [rbp-0x28]
  4312da:	mov    rax,QWORD PTR [rax+0x28]
  4312de:	lea    rcx,[rax+0x1]
  4312e2:	mov    rdx,QWORD PTR [rbp-0x28]
  4312e6:	mov    QWORD PTR [rdx+0x28],rcx
  4312ea:	mov    BYTE PTR [rax],0x2c
  4312ed:	mov    rax,QWORD PTR [rbp-0x28]
  4312f1:	movzx  eax,BYTE PTR [rax+0x31]
  4312f5:	test   al,al
  4312f7:	je     43131e <flatcc_json_printer_bool_vector_field@@Base+0x1b1>
  4312f9:	mov    rax,QWORD PTR [rbp-0x28]
  4312fd:	mov    rax,QWORD PTR [rax+0x28]
  431301:	lea    rcx,[rax+0x1]
  431305:	mov    rdx,QWORD PTR [rbp-0x28]
  431309:	mov    QWORD PTR [rdx+0x28],rcx
  43130d:	mov    BYTE PTR [rax],0xa
  431310:	mov    rax,QWORD PTR [rbp-0x28]
  431314:	mov    rdi,rax
  431317:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43131c:	jmp    43132a <flatcc_json_printer_bool_vector_field@@Base+0x1bd>
  43131e:	mov    rax,QWORD PTR [rbp-0x28]
  431322:	mov    rdi,rax
  431325:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43132a:	mov    rax,QWORD PTR [rbp-0x28]
  43132e:	mov    rbx,QWORD PTR [rax+0x28]
  431332:	mov    rax,QWORD PTR [rbp-0x18]
  431336:	mov    rdi,rax
  431339:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  43133e:	movzx  eax,al
  431341:	mov    rsi,rbx
  431344:	mov    edi,eax
  431346:	call   429656 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  43134b:	mov    ecx,eax
  43134d:	mov    rax,QWORD PTR [rbp-0x28]
  431351:	mov    rdx,QWORD PTR [rax+0x28]
  431355:	movsxd rax,ecx
  431358:	add    rdx,rax
  43135b:	mov    rax,QWORD PTR [rbp-0x28]
  43135f:	mov    QWORD PTR [rax+0x28],rdx
  431363:	mov    rax,QWORD PTR [rbp-0x18]
  431367:	add    rax,0x1
  43136b:	mov    QWORD PTR [rbp-0x18],rax
  43136f:	mov    eax,DWORD PTR [rbp-0x1c]
  431372:	lea    edx,[rax-0x1]
  431375:	mov    DWORD PTR [rbp-0x1c],edx
  431378:	test   eax,eax
  43137a:	jne    4312d6 <flatcc_json_printer_bool_vector_field@@Base+0x169>
  431380:	mov    rax,QWORD PTR [rbp-0x28]
  431384:	movzx  eax,BYTE PTR [rax+0x31]
  431388:	test   al,al
  43138a:	je     4313c0 <flatcc_json_printer_bool_vector_field@@Base+0x253>
  43138c:	mov    rax,QWORD PTR [rbp-0x28]
  431390:	mov    rax,QWORD PTR [rax+0x28]
  431394:	lea    rcx,[rax+0x1]
  431398:	mov    rdx,QWORD PTR [rbp-0x28]
  43139c:	mov    QWORD PTR [rdx+0x28],rcx
  4313a0:	mov    BYTE PTR [rax],0xa
  4313a3:	mov    rax,QWORD PTR [rbp-0x28]
  4313a7:	mov    eax,DWORD PTR [rax+0x38]
  4313aa:	lea    edx,[rax-0x1]
  4313ad:	mov    rax,QWORD PTR [rbp-0x28]
  4313b1:	mov    DWORD PTR [rax+0x38],edx
  4313b4:	mov    rax,QWORD PTR [rbp-0x28]
  4313b8:	mov    rdi,rax
  4313bb:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4313c0:	mov    rax,QWORD PTR [rbp-0x28]
  4313c4:	mov    rax,QWORD PTR [rax+0x28]
  4313c8:	lea    rcx,[rax+0x1]
  4313cc:	mov    rdx,QWORD PTR [rbp-0x28]
  4313d0:	mov    QWORD PTR [rdx+0x28],rcx
  4313d4:	mov    BYTE PTR [rax],0x5d
  4313d7:	nop
  4313d8:	add    rsp,0x38
  4313dc:	pop    rbx
  4313dd:	pop    rbp
  4313de:	ret    

00000000004313df <flatcc_json_printer_float_vector_field@@Base>:
  4313df:	push   rbp
  4313e0:	mov    rbp,rsp
  4313e3:	push   rbx
  4313e4:	sub    rsp,0x38
  4313e8:	mov    QWORD PTR [rbp-0x28],rdi
  4313ec:	mov    QWORD PTR [rbp-0x30],rsi
  4313f0:	mov    DWORD PTR [rbp-0x34],edx
  4313f3:	mov    QWORD PTR [rbp-0x40],rcx
  4313f7:	mov    DWORD PTR [rbp-0x38],r8d
  4313fb:	mov    edx,DWORD PTR [rbp-0x34]
  4313fe:	mov    rax,QWORD PTR [rbp-0x30]
  431402:	mov    esi,edx
  431404:	mov    rdi,rax
  431407:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  43140c:	mov    QWORD PTR [rbp-0x18],rax
  431410:	cmp    QWORD PTR [rbp-0x18],0x0
  431415:	je     431647 <flatcc_json_printer_float_vector_field@@Base+0x268>
  43141b:	mov    rax,QWORD PTR [rbp-0x30]
  43141f:	mov    eax,DWORD PTR [rax+0x18]
  431422:	lea    ecx,[rax+0x1]
  431425:	mov    rdx,QWORD PTR [rbp-0x30]
  431429:	mov    DWORD PTR [rdx+0x18],ecx
  43142c:	test   eax,eax
  43142e:	je     431447 <flatcc_json_printer_float_vector_field@@Base+0x68>
  431430:	mov    rax,QWORD PTR [rbp-0x28]
  431434:	mov    rax,QWORD PTR [rax+0x28]
  431438:	lea    rcx,[rax+0x1]
  43143c:	mov    rdx,QWORD PTR [rbp-0x28]
  431440:	mov    QWORD PTR [rdx+0x28],rcx
  431444:	mov    BYTE PTR [rax],0x2c
  431447:	mov    rax,QWORD PTR [rbp-0x18]
  43144b:	mov    rdi,rax
  43144e:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  431453:	mov    QWORD PTR [rbp-0x18],rax
  431457:	mov    rax,QWORD PTR [rbp-0x18]
  43145b:	mov    rdi,rax
  43145e:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431463:	mov    DWORD PTR [rbp-0x1c],eax
  431466:	mov    rax,QWORD PTR [rbp-0x18]
  43146a:	add    rax,0x4
  43146e:	mov    QWORD PTR [rbp-0x18],rax
  431472:	mov    eax,DWORD PTR [rbp-0x38]
  431475:	movsxd rdx,eax
  431478:	mov    rcx,QWORD PTR [rbp-0x40]
  43147c:	mov    rax,QWORD PTR [rbp-0x28]
  431480:	mov    rsi,rcx
  431483:	mov    rdi,rax
  431486:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  43148b:	mov    rax,QWORD PTR [rbp-0x28]
  43148f:	mov    eax,DWORD PTR [rax+0x38]
  431492:	lea    edx,[rax+0x1]
  431495:	mov    rax,QWORD PTR [rbp-0x28]
  431499:	mov    DWORD PTR [rax+0x38],edx
  43149c:	mov    rax,QWORD PTR [rbp-0x28]
  4314a0:	mov    rax,QWORD PTR [rax+0x28]
  4314a4:	lea    rcx,[rax+0x1]
  4314a8:	mov    rdx,QWORD PTR [rbp-0x28]
  4314ac:	mov    QWORD PTR [rdx+0x28],rcx
  4314b0:	mov    BYTE PTR [rax],0x5b
  4314b3:	cmp    DWORD PTR [rbp-0x1c],0x0
  4314b7:	je     4315df <flatcc_json_printer_float_vector_field@@Base+0x200>
  4314bd:	mov    rax,QWORD PTR [rbp-0x28]
  4314c1:	movzx  eax,BYTE PTR [rax+0x31]
  4314c5:	test   al,al
  4314c7:	je     4314ee <flatcc_json_printer_float_vector_field@@Base+0x10f>
  4314c9:	mov    rax,QWORD PTR [rbp-0x28]
  4314cd:	mov    rax,QWORD PTR [rax+0x28]
  4314d1:	lea    rcx,[rax+0x1]
  4314d5:	mov    rdx,QWORD PTR [rbp-0x28]
  4314d9:	mov    QWORD PTR [rdx+0x28],rcx
  4314dd:	mov    BYTE PTR [rax],0xa
  4314e0:	mov    rax,QWORD PTR [rbp-0x28]
  4314e4:	mov    rdi,rax
  4314e7:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4314ec:	jmp    4314fa <flatcc_json_printer_float_vector_field@@Base+0x11b>
  4314ee:	mov    rax,QWORD PTR [rbp-0x28]
  4314f2:	mov    rdi,rax
  4314f5:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4314fa:	mov    rax,QWORD PTR [rbp-0x28]
  4314fe:	mov    rbx,QWORD PTR [rax+0x28]
  431502:	mov    rax,QWORD PTR [rbp-0x18]
  431506:	mov    rdi,rax
  431509:	call   429468 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  43150e:	vcvtss2sd xmm0,xmm0,xmm0
  431512:	mov    rdi,rbx
  431515:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  43151a:	mov    ecx,eax
  43151c:	mov    rax,QWORD PTR [rbp-0x28]
  431520:	mov    rdx,QWORD PTR [rax+0x28]
  431524:	movsxd rax,ecx
  431527:	add    rdx,rax
  43152a:	mov    rax,QWORD PTR [rbp-0x28]
  43152e:	mov    QWORD PTR [rax+0x28],rdx
  431532:	mov    rax,QWORD PTR [rbp-0x18]
  431536:	add    rax,0x4
  43153a:	mov    QWORD PTR [rbp-0x18],rax
  43153e:	sub    DWORD PTR [rbp-0x1c],0x1
  431542:	jmp    4315df <flatcc_json_printer_float_vector_field@@Base+0x200>
  431547:	mov    rax,QWORD PTR [rbp-0x28]
  43154b:	mov    rax,QWORD PTR [rax+0x28]
  43154f:	lea    rcx,[rax+0x1]
  431553:	mov    rdx,QWORD PTR [rbp-0x28]
  431557:	mov    QWORD PTR [rdx+0x28],rcx
  43155b:	mov    BYTE PTR [rax],0x2c
  43155e:	mov    rax,QWORD PTR [rbp-0x28]
  431562:	movzx  eax,BYTE PTR [rax+0x31]
  431566:	test   al,al
  431568:	je     43158f <flatcc_json_printer_float_vector_field@@Base+0x1b0>
  43156a:	mov    rax,QWORD PTR [rbp-0x28]
  43156e:	mov    rax,QWORD PTR [rax+0x28]
  431572:	lea    rcx,[rax+0x1]
  431576:	mov    rdx,QWORD PTR [rbp-0x28]
  43157a:	mov    QWORD PTR [rdx+0x28],rcx
  43157e:	mov    BYTE PTR [rax],0xa
  431581:	mov    rax,QWORD PTR [rbp-0x28]
  431585:	mov    rdi,rax
  431588:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43158d:	jmp    43159b <flatcc_json_printer_float_vector_field@@Base+0x1bc>
  43158f:	mov    rax,QWORD PTR [rbp-0x28]
  431593:	mov    rdi,rax
  431596:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43159b:	mov    rax,QWORD PTR [rbp-0x28]
  43159f:	mov    rbx,QWORD PTR [rax+0x28]
  4315a3:	mov    rax,QWORD PTR [rbp-0x18]
  4315a7:	mov    rdi,rax
  4315aa:	call   429468 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  4315af:	vcvtss2sd xmm0,xmm0,xmm0
  4315b3:	mov    rdi,rbx
  4315b6:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  4315bb:	mov    ecx,eax
  4315bd:	mov    rax,QWORD PTR [rbp-0x28]
  4315c1:	mov    rdx,QWORD PTR [rax+0x28]
  4315c5:	movsxd rax,ecx
  4315c8:	add    rdx,rax
  4315cb:	mov    rax,QWORD PTR [rbp-0x28]
  4315cf:	mov    QWORD PTR [rax+0x28],rdx
  4315d3:	mov    rax,QWORD PTR [rbp-0x18]
  4315d7:	add    rax,0x4
  4315db:	mov    QWORD PTR [rbp-0x18],rax
  4315df:	mov    eax,DWORD PTR [rbp-0x1c]
  4315e2:	lea    edx,[rax-0x1]
  4315e5:	mov    DWORD PTR [rbp-0x1c],edx
  4315e8:	test   eax,eax
  4315ea:	jne    431547 <flatcc_json_printer_float_vector_field@@Base+0x168>
  4315f0:	mov    rax,QWORD PTR [rbp-0x28]
  4315f4:	movzx  eax,BYTE PTR [rax+0x31]
  4315f8:	test   al,al
  4315fa:	je     431630 <flatcc_json_printer_float_vector_field@@Base+0x251>
  4315fc:	mov    rax,QWORD PTR [rbp-0x28]
  431600:	mov    rax,QWORD PTR [rax+0x28]
  431604:	lea    rcx,[rax+0x1]
  431608:	mov    rdx,QWORD PTR [rbp-0x28]
  43160c:	mov    QWORD PTR [rdx+0x28],rcx
  431610:	mov    BYTE PTR [rax],0xa
  431613:	mov    rax,QWORD PTR [rbp-0x28]
  431617:	mov    eax,DWORD PTR [rax+0x38]
  43161a:	lea    edx,[rax-0x1]
  43161d:	mov    rax,QWORD PTR [rbp-0x28]
  431621:	mov    DWORD PTR [rax+0x38],edx
  431624:	mov    rax,QWORD PTR [rbp-0x28]
  431628:	mov    rdi,rax
  43162b:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431630:	mov    rax,QWORD PTR [rbp-0x28]
  431634:	mov    rax,QWORD PTR [rax+0x28]
  431638:	lea    rcx,[rax+0x1]
  43163c:	mov    rdx,QWORD PTR [rbp-0x28]
  431640:	mov    QWORD PTR [rdx+0x28],rcx
  431644:	mov    BYTE PTR [rax],0x5d
  431647:	nop
  431648:	add    rsp,0x38
  43164c:	pop    rbx
  43164d:	pop    rbp
  43164e:	ret    

000000000043164f <flatcc_json_printer_double_vector_field@@Base>:
  43164f:	push   rbp
  431650:	mov    rbp,rsp
  431653:	push   rbx
  431654:	sub    rsp,0x38
  431658:	mov    QWORD PTR [rbp-0x28],rdi
  43165c:	mov    QWORD PTR [rbp-0x30],rsi
  431660:	mov    DWORD PTR [rbp-0x34],edx
  431663:	mov    QWORD PTR [rbp-0x40],rcx
  431667:	mov    DWORD PTR [rbp-0x38],r8d
  43166b:	mov    edx,DWORD PTR [rbp-0x34]
  43166e:	mov    rax,QWORD PTR [rbp-0x30]
  431672:	mov    esi,edx
  431674:	mov    rdi,rax
  431677:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  43167c:	mov    QWORD PTR [rbp-0x18],rax
  431680:	cmp    QWORD PTR [rbp-0x18],0x0
  431685:	je     4318af <flatcc_json_printer_double_vector_field@@Base+0x260>
  43168b:	mov    rax,QWORD PTR [rbp-0x30]
  43168f:	mov    eax,DWORD PTR [rax+0x18]
  431692:	lea    ecx,[rax+0x1]
  431695:	mov    rdx,QWORD PTR [rbp-0x30]
  431699:	mov    DWORD PTR [rdx+0x18],ecx
  43169c:	test   eax,eax
  43169e:	je     4316b7 <flatcc_json_printer_double_vector_field@@Base+0x68>
  4316a0:	mov    rax,QWORD PTR [rbp-0x28]
  4316a4:	mov    rax,QWORD PTR [rax+0x28]
  4316a8:	lea    rcx,[rax+0x1]
  4316ac:	mov    rdx,QWORD PTR [rbp-0x28]
  4316b0:	mov    QWORD PTR [rdx+0x28],rcx
  4316b4:	mov    BYTE PTR [rax],0x2c
  4316b7:	mov    rax,QWORD PTR [rbp-0x18]
  4316bb:	mov    rdi,rax
  4316be:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4316c3:	mov    QWORD PTR [rbp-0x18],rax
  4316c7:	mov    rax,QWORD PTR [rbp-0x18]
  4316cb:	mov    rdi,rax
  4316ce:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4316d3:	mov    DWORD PTR [rbp-0x1c],eax
  4316d6:	mov    rax,QWORD PTR [rbp-0x18]
  4316da:	add    rax,0x4
  4316de:	mov    QWORD PTR [rbp-0x18],rax
  4316e2:	mov    eax,DWORD PTR [rbp-0x38]
  4316e5:	movsxd rdx,eax
  4316e8:	mov    rcx,QWORD PTR [rbp-0x40]
  4316ec:	mov    rax,QWORD PTR [rbp-0x28]
  4316f0:	mov    rsi,rcx
  4316f3:	mov    rdi,rax
  4316f6:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  4316fb:	mov    rax,QWORD PTR [rbp-0x28]
  4316ff:	mov    eax,DWORD PTR [rax+0x38]
  431702:	lea    edx,[rax+0x1]
  431705:	mov    rax,QWORD PTR [rbp-0x28]
  431709:	mov    DWORD PTR [rax+0x38],edx
  43170c:	mov    rax,QWORD PTR [rbp-0x28]
  431710:	mov    rax,QWORD PTR [rax+0x28]
  431714:	lea    rcx,[rax+0x1]
  431718:	mov    rdx,QWORD PTR [rbp-0x28]
  43171c:	mov    QWORD PTR [rdx+0x28],rcx
  431720:	mov    BYTE PTR [rax],0x5b
  431723:	cmp    DWORD PTR [rbp-0x1c],0x0
  431727:	je     431847 <flatcc_json_printer_double_vector_field@@Base+0x1f8>
  43172d:	mov    rax,QWORD PTR [rbp-0x28]
  431731:	movzx  eax,BYTE PTR [rax+0x31]
  431735:	test   al,al
  431737:	je     43175e <flatcc_json_printer_double_vector_field@@Base+0x10f>
  431739:	mov    rax,QWORD PTR [rbp-0x28]
  43173d:	mov    rax,QWORD PTR [rax+0x28]
  431741:	lea    rcx,[rax+0x1]
  431745:	mov    rdx,QWORD PTR [rbp-0x28]
  431749:	mov    QWORD PTR [rdx+0x28],rcx
  43174d:	mov    BYTE PTR [rax],0xa
  431750:	mov    rax,QWORD PTR [rbp-0x28]
  431754:	mov    rdi,rax
  431757:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43175c:	jmp    43176a <flatcc_json_printer_double_vector_field@@Base+0x11b>
  43175e:	mov    rax,QWORD PTR [rbp-0x28]
  431762:	mov    rdi,rax
  431765:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43176a:	mov    rax,QWORD PTR [rbp-0x28]
  43176e:	mov    rbx,QWORD PTR [rax+0x28]
  431772:	mov    rax,QWORD PTR [rbp-0x18]
  431776:	mov    rdi,rax
  431779:	call   4294ab <flatcc_json_parser_struct_as_root@@Base+0x302>
  43177e:	mov    rdi,rbx
  431781:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  431786:	mov    ecx,eax
  431788:	mov    rax,QWORD PTR [rbp-0x28]
  43178c:	mov    rdx,QWORD PTR [rax+0x28]
  431790:	movsxd rax,ecx
  431793:	add    rdx,rax
  431796:	mov    rax,QWORD PTR [rbp-0x28]
  43179a:	mov    QWORD PTR [rax+0x28],rdx
  43179e:	mov    rax,QWORD PTR [rbp-0x18]
  4317a2:	add    rax,0x8
  4317a6:	mov    QWORD PTR [rbp-0x18],rax
  4317aa:	sub    DWORD PTR [rbp-0x1c],0x1
  4317ae:	jmp    431847 <flatcc_json_printer_double_vector_field@@Base+0x1f8>
  4317b3:	mov    rax,QWORD PTR [rbp-0x28]
  4317b7:	mov    rax,QWORD PTR [rax+0x28]
  4317bb:	lea    rcx,[rax+0x1]
  4317bf:	mov    rdx,QWORD PTR [rbp-0x28]
  4317c3:	mov    QWORD PTR [rdx+0x28],rcx
  4317c7:	mov    BYTE PTR [rax],0x2c
  4317ca:	mov    rax,QWORD PTR [rbp-0x28]
  4317ce:	movzx  eax,BYTE PTR [rax+0x31]
  4317d2:	test   al,al
  4317d4:	je     4317fb <flatcc_json_printer_double_vector_field@@Base+0x1ac>
  4317d6:	mov    rax,QWORD PTR [rbp-0x28]
  4317da:	mov    rax,QWORD PTR [rax+0x28]
  4317de:	lea    rcx,[rax+0x1]
  4317e2:	mov    rdx,QWORD PTR [rbp-0x28]
  4317e6:	mov    QWORD PTR [rdx+0x28],rcx
  4317ea:	mov    BYTE PTR [rax],0xa
  4317ed:	mov    rax,QWORD PTR [rbp-0x28]
  4317f1:	mov    rdi,rax
  4317f4:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4317f9:	jmp    431807 <flatcc_json_printer_double_vector_field@@Base+0x1b8>
  4317fb:	mov    rax,QWORD PTR [rbp-0x28]
  4317ff:	mov    rdi,rax
  431802:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431807:	mov    rax,QWORD PTR [rbp-0x28]
  43180b:	mov    rbx,QWORD PTR [rax+0x28]
  43180f:	mov    rax,QWORD PTR [rbp-0x18]
  431813:	mov    rdi,rax
  431816:	call   4294ab <flatcc_json_parser_struct_as_root@@Base+0x302>
  43181b:	mov    rdi,rbx
  43181e:	call   42bab4 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  431823:	mov    ecx,eax
  431825:	mov    rax,QWORD PTR [rbp-0x28]
  431829:	mov    rdx,QWORD PTR [rax+0x28]
  43182d:	movsxd rax,ecx
  431830:	add    rdx,rax
  431833:	mov    rax,QWORD PTR [rbp-0x28]
  431837:	mov    QWORD PTR [rax+0x28],rdx
  43183b:	mov    rax,QWORD PTR [rbp-0x18]
  43183f:	add    rax,0x8
  431843:	mov    QWORD PTR [rbp-0x18],rax
  431847:	mov    eax,DWORD PTR [rbp-0x1c]
  43184a:	lea    edx,[rax-0x1]
  43184d:	mov    DWORD PTR [rbp-0x1c],edx
  431850:	test   eax,eax
  431852:	jne    4317b3 <flatcc_json_printer_double_vector_field@@Base+0x164>
  431858:	mov    rax,QWORD PTR [rbp-0x28]
  43185c:	movzx  eax,BYTE PTR [rax+0x31]
  431860:	test   al,al
  431862:	je     431898 <flatcc_json_printer_double_vector_field@@Base+0x249>
  431864:	mov    rax,QWORD PTR [rbp-0x28]
  431868:	mov    rax,QWORD PTR [rax+0x28]
  43186c:	lea    rcx,[rax+0x1]
  431870:	mov    rdx,QWORD PTR [rbp-0x28]
  431874:	mov    QWORD PTR [rdx+0x28],rcx
  431878:	mov    BYTE PTR [rax],0xa
  43187b:	mov    rax,QWORD PTR [rbp-0x28]
  43187f:	mov    eax,DWORD PTR [rax+0x38]
  431882:	lea    edx,[rax-0x1]
  431885:	mov    rax,QWORD PTR [rbp-0x28]
  431889:	mov    DWORD PTR [rax+0x38],edx
  43188c:	mov    rax,QWORD PTR [rbp-0x28]
  431890:	mov    rdi,rax
  431893:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431898:	mov    rax,QWORD PTR [rbp-0x28]
  43189c:	mov    rax,QWORD PTR [rax+0x28]
  4318a0:	lea    rcx,[rax+0x1]
  4318a4:	mov    rdx,QWORD PTR [rbp-0x28]
  4318a8:	mov    QWORD PTR [rdx+0x28],rcx
  4318ac:	mov    BYTE PTR [rax],0x5d
  4318af:	nop
  4318b0:	add    rsp,0x38
  4318b4:	pop    rbx
  4318b5:	pop    rbp
  4318b6:	ret    

00000000004318b7 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  4318b7:	push   rbp
  4318b8:	mov    rbp,rsp
  4318bb:	sub    rsp,0x40
  4318bf:	mov    QWORD PTR [rbp-0x18],rdi
  4318c3:	mov    QWORD PTR [rbp-0x20],rsi
  4318c7:	mov    DWORD PTR [rbp-0x24],edx
  4318ca:	mov    QWORD PTR [rbp-0x30],rcx
  4318ce:	mov    DWORD PTR [rbp-0x28],r8d
  4318d2:	mov    QWORD PTR [rbp-0x38],r9
  4318d6:	mov    rax,QWORD PTR [rbp-0x18]
  4318da:	movzx  eax,BYTE PTR [rax+0x33]
  4318de:	test   al,al
  4318e0:	je     431904 <flatcc_json_printer_utype_enum_vector_field@@Base+0x4d>
  4318e2:	mov    edi,DWORD PTR [rbp-0x28]
  4318e5:	mov    rcx,QWORD PTR [rbp-0x30]
  4318e9:	mov    edx,DWORD PTR [rbp-0x24]
  4318ec:	mov    rsi,QWORD PTR [rbp-0x20]
  4318f0:	mov    rax,QWORD PTR [rbp-0x18]
  4318f4:	mov    r8d,edi
  4318f7:	mov    rdi,rax
  4318fa:	call   42fb83 <flatcc_json_printer_utype_vector_field@@Base>
  4318ff:	jmp    431b19 <flatcc_json_printer_utype_enum_vector_field@@Base+0x262>
  431904:	mov    edx,DWORD PTR [rbp-0x24]
  431907:	mov    rax,QWORD PTR [rbp-0x20]
  43190b:	mov    esi,edx
  43190d:	mov    rdi,rax
  431910:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  431915:	mov    QWORD PTR [rbp-0x8],rax
  431919:	cmp    QWORD PTR [rbp-0x8],0x0
  43191e:	je     431b19 <flatcc_json_printer_utype_enum_vector_field@@Base+0x262>
  431924:	mov    rax,QWORD PTR [rbp-0x20]
  431928:	mov    eax,DWORD PTR [rax+0x18]
  43192b:	lea    ecx,[rax+0x1]
  43192e:	mov    rdx,QWORD PTR [rbp-0x20]
  431932:	mov    DWORD PTR [rdx+0x18],ecx
  431935:	test   eax,eax
  431937:	je     431950 <flatcc_json_printer_utype_enum_vector_field@@Base+0x99>
  431939:	mov    rax,QWORD PTR [rbp-0x18]
  43193d:	mov    rax,QWORD PTR [rax+0x28]
  431941:	lea    rcx,[rax+0x1]
  431945:	mov    rdx,QWORD PTR [rbp-0x18]
  431949:	mov    QWORD PTR [rdx+0x28],rcx
  43194d:	mov    BYTE PTR [rax],0x2c
  431950:	mov    rax,QWORD PTR [rbp-0x8]
  431954:	mov    rdi,rax
  431957:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  43195c:	mov    QWORD PTR [rbp-0x8],rax
  431960:	mov    rax,QWORD PTR [rbp-0x8]
  431964:	mov    rdi,rax
  431967:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43196c:	mov    DWORD PTR [rbp-0xc],eax
  43196f:	mov    rax,QWORD PTR [rbp-0x8]
  431973:	add    rax,0x4
  431977:	mov    QWORD PTR [rbp-0x8],rax
  43197b:	mov    eax,DWORD PTR [rbp-0x28]
  43197e:	movsxd rdx,eax
  431981:	mov    rcx,QWORD PTR [rbp-0x30]
  431985:	mov    rax,QWORD PTR [rbp-0x18]
  431989:	mov    rsi,rcx
  43198c:	mov    rdi,rax
  43198f:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  431994:	mov    rax,QWORD PTR [rbp-0x18]
  431998:	mov    eax,DWORD PTR [rax+0x38]
  43199b:	lea    edx,[rax+0x1]
  43199e:	mov    rax,QWORD PTR [rbp-0x18]
  4319a2:	mov    DWORD PTR [rax+0x38],edx
  4319a5:	mov    rax,QWORD PTR [rbp-0x18]
  4319a9:	mov    rax,QWORD PTR [rax+0x28]
  4319ad:	lea    rcx,[rax+0x1]
  4319b1:	mov    rdx,QWORD PTR [rbp-0x18]
  4319b5:	mov    QWORD PTR [rdx+0x28],rcx
  4319b9:	mov    BYTE PTR [rax],0x5b
  4319bc:	cmp    DWORD PTR [rbp-0xc],0x0
  4319c0:	je     431ab1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fa>
  4319c6:	mov    rax,QWORD PTR [rbp-0x18]
  4319ca:	movzx  eax,BYTE PTR [rax+0x31]
  4319ce:	test   al,al
  4319d0:	je     4319f7 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
  4319d2:	mov    rax,QWORD PTR [rbp-0x18]
  4319d6:	mov    rax,QWORD PTR [rax+0x28]
  4319da:	lea    rcx,[rax+0x1]
  4319de:	mov    rdx,QWORD PTR [rbp-0x18]
  4319e2:	mov    QWORD PTR [rdx+0x28],rcx
  4319e6:	mov    BYTE PTR [rax],0xa
  4319e9:	mov    rax,QWORD PTR [rbp-0x18]
  4319ed:	mov    rdi,rax
  4319f0:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4319f5:	jmp    431a03 <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
  4319f7:	mov    rax,QWORD PTR [rbp-0x18]
  4319fb:	mov    rdi,rax
  4319fe:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431a03:	mov    rax,QWORD PTR [rbp-0x8]
  431a07:	mov    rdi,rax
  431a0a:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  431a0f:	movzx  ecx,al
  431a12:	mov    rdx,QWORD PTR [rbp-0x18]
  431a16:	mov    rax,QWORD PTR [rbp-0x38]
  431a1a:	mov    esi,ecx
  431a1c:	mov    rdi,rdx
  431a1f:	call   rax
  431a21:	mov    rax,QWORD PTR [rbp-0x8]
  431a25:	add    rax,0x1
  431a29:	mov    QWORD PTR [rbp-0x8],rax
  431a2d:	sub    DWORD PTR [rbp-0xc],0x1
  431a31:	jmp    431ab1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fa>
  431a33:	mov    rax,QWORD PTR [rbp-0x18]
  431a37:	mov    rax,QWORD PTR [rax+0x28]
  431a3b:	lea    rcx,[rax+0x1]
  431a3f:	mov    rdx,QWORD PTR [rbp-0x18]
  431a43:	mov    QWORD PTR [rdx+0x28],rcx
  431a47:	mov    BYTE PTR [rax],0x2c
  431a4a:	mov    rax,QWORD PTR [rbp-0x18]
  431a4e:	movzx  eax,BYTE PTR [rax+0x31]
  431a52:	test   al,al
  431a54:	je     431a7b <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c4>
  431a56:	mov    rax,QWORD PTR [rbp-0x18]
  431a5a:	mov    rax,QWORD PTR [rax+0x28]
  431a5e:	lea    rcx,[rax+0x1]
  431a62:	mov    rdx,QWORD PTR [rbp-0x18]
  431a66:	mov    QWORD PTR [rdx+0x28],rcx
  431a6a:	mov    BYTE PTR [rax],0xa
  431a6d:	mov    rax,QWORD PTR [rbp-0x18]
  431a71:	mov    rdi,rax
  431a74:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431a79:	jmp    431a87 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
  431a7b:	mov    rax,QWORD PTR [rbp-0x18]
  431a7f:	mov    rdi,rax
  431a82:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431a87:	mov    rax,QWORD PTR [rbp-0x8]
  431a8b:	mov    rdi,rax
  431a8e:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  431a93:	movzx  ecx,al
  431a96:	mov    rdx,QWORD PTR [rbp-0x18]
  431a9a:	mov    rax,QWORD PTR [rbp-0x38]
  431a9e:	mov    esi,ecx
  431aa0:	mov    rdi,rdx
  431aa3:	call   rax
  431aa5:	mov    rax,QWORD PTR [rbp-0x8]
  431aa9:	add    rax,0x1
  431aad:	mov    QWORD PTR [rbp-0x8],rax
  431ab1:	mov    eax,DWORD PTR [rbp-0xc]
  431ab4:	lea    edx,[rax-0x1]
  431ab7:	mov    DWORD PTR [rbp-0xc],edx
  431aba:	test   eax,eax
  431abc:	jne    431a33 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
  431ac2:	mov    rax,QWORD PTR [rbp-0x18]
  431ac6:	movzx  eax,BYTE PTR [rax+0x31]
  431aca:	test   al,al
  431acc:	je     431b02 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24b>
  431ace:	mov    rax,QWORD PTR [rbp-0x18]
  431ad2:	mov    rax,QWORD PTR [rax+0x28]
  431ad6:	lea    rcx,[rax+0x1]
  431ada:	mov    rdx,QWORD PTR [rbp-0x18]
  431ade:	mov    QWORD PTR [rdx+0x28],rcx
  431ae2:	mov    BYTE PTR [rax],0xa
  431ae5:	mov    rax,QWORD PTR [rbp-0x18]
  431ae9:	mov    eax,DWORD PTR [rax+0x38]
  431aec:	lea    edx,[rax-0x1]
  431aef:	mov    rax,QWORD PTR [rbp-0x18]
  431af3:	mov    DWORD PTR [rax+0x38],edx
  431af6:	mov    rax,QWORD PTR [rbp-0x18]
  431afa:	mov    rdi,rax
  431afd:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431b02:	mov    rax,QWORD PTR [rbp-0x18]
  431b06:	mov    rax,QWORD PTR [rax+0x28]
  431b0a:	lea    rcx,[rax+0x1]
  431b0e:	mov    rdx,QWORD PTR [rbp-0x18]
  431b12:	mov    QWORD PTR [rdx+0x28],rcx
  431b16:	mov    BYTE PTR [rax],0x5d
  431b19:	leave  
  431b1a:	ret    

0000000000431b1b <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  431b1b:	push   rbp
  431b1c:	mov    rbp,rsp
  431b1f:	sub    rsp,0x40
  431b23:	mov    QWORD PTR [rbp-0x18],rdi
  431b27:	mov    QWORD PTR [rbp-0x20],rsi
  431b2b:	mov    DWORD PTR [rbp-0x24],edx
  431b2e:	mov    QWORD PTR [rbp-0x30],rcx
  431b32:	mov    DWORD PTR [rbp-0x28],r8d
  431b36:	mov    QWORD PTR [rbp-0x38],r9
  431b3a:	mov    rax,QWORD PTR [rbp-0x18]
  431b3e:	movzx  eax,BYTE PTR [rax+0x33]
  431b42:	test   al,al
  431b44:	je     431b68 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x4d>
  431b46:	mov    edi,DWORD PTR [rbp-0x28]
  431b49:	mov    rcx,QWORD PTR [rbp-0x30]
  431b4d:	mov    edx,DWORD PTR [rbp-0x24]
  431b50:	mov    rsi,QWORD PTR [rbp-0x20]
  431b54:	mov    rax,QWORD PTR [rbp-0x18]
  431b58:	mov    r8d,edi
  431b5b:	mov    rdi,rax
  431b5e:	call   42fdf5 <flatcc_json_printer_uint8_vector_field@@Base>
  431b63:	jmp    431d7d <flatcc_json_printer_uint8_enum_vector_field@@Base+0x262>
  431b68:	mov    edx,DWORD PTR [rbp-0x24]
  431b6b:	mov    rax,QWORD PTR [rbp-0x20]
  431b6f:	mov    esi,edx
  431b71:	mov    rdi,rax
  431b74:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  431b79:	mov    QWORD PTR [rbp-0x8],rax
  431b7d:	cmp    QWORD PTR [rbp-0x8],0x0
  431b82:	je     431d7d <flatcc_json_printer_uint8_enum_vector_field@@Base+0x262>
  431b88:	mov    rax,QWORD PTR [rbp-0x20]
  431b8c:	mov    eax,DWORD PTR [rax+0x18]
  431b8f:	lea    ecx,[rax+0x1]
  431b92:	mov    rdx,QWORD PTR [rbp-0x20]
  431b96:	mov    DWORD PTR [rdx+0x18],ecx
  431b99:	test   eax,eax
  431b9b:	je     431bb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x99>
  431b9d:	mov    rax,QWORD PTR [rbp-0x18]
  431ba1:	mov    rax,QWORD PTR [rax+0x28]
  431ba5:	lea    rcx,[rax+0x1]
  431ba9:	mov    rdx,QWORD PTR [rbp-0x18]
  431bad:	mov    QWORD PTR [rdx+0x28],rcx
  431bb1:	mov    BYTE PTR [rax],0x2c
  431bb4:	mov    rax,QWORD PTR [rbp-0x8]
  431bb8:	mov    rdi,rax
  431bbb:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  431bc0:	mov    QWORD PTR [rbp-0x8],rax
  431bc4:	mov    rax,QWORD PTR [rbp-0x8]
  431bc8:	mov    rdi,rax
  431bcb:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431bd0:	mov    DWORD PTR [rbp-0xc],eax
  431bd3:	mov    rax,QWORD PTR [rbp-0x8]
  431bd7:	add    rax,0x4
  431bdb:	mov    QWORD PTR [rbp-0x8],rax
  431bdf:	mov    eax,DWORD PTR [rbp-0x28]
  431be2:	movsxd rdx,eax
  431be5:	mov    rcx,QWORD PTR [rbp-0x30]
  431be9:	mov    rax,QWORD PTR [rbp-0x18]
  431bed:	mov    rsi,rcx
  431bf0:	mov    rdi,rax
  431bf3:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  431bf8:	mov    rax,QWORD PTR [rbp-0x18]
  431bfc:	mov    eax,DWORD PTR [rax+0x38]
  431bff:	lea    edx,[rax+0x1]
  431c02:	mov    rax,QWORD PTR [rbp-0x18]
  431c06:	mov    DWORD PTR [rax+0x38],edx
  431c09:	mov    rax,QWORD PTR [rbp-0x18]
  431c0d:	mov    rax,QWORD PTR [rax+0x28]
  431c11:	lea    rcx,[rax+0x1]
  431c15:	mov    rdx,QWORD PTR [rbp-0x18]
  431c19:	mov    QWORD PTR [rdx+0x28],rcx
  431c1d:	mov    BYTE PTR [rax],0x5b
  431c20:	cmp    DWORD PTR [rbp-0xc],0x0
  431c24:	je     431d15 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fa>
  431c2a:	mov    rax,QWORD PTR [rbp-0x18]
  431c2e:	movzx  eax,BYTE PTR [rax+0x31]
  431c32:	test   al,al
  431c34:	je     431c5b <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
  431c36:	mov    rax,QWORD PTR [rbp-0x18]
  431c3a:	mov    rax,QWORD PTR [rax+0x28]
  431c3e:	lea    rcx,[rax+0x1]
  431c42:	mov    rdx,QWORD PTR [rbp-0x18]
  431c46:	mov    QWORD PTR [rdx+0x28],rcx
  431c4a:	mov    BYTE PTR [rax],0xa
  431c4d:	mov    rax,QWORD PTR [rbp-0x18]
  431c51:	mov    rdi,rax
  431c54:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431c59:	jmp    431c67 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
  431c5b:	mov    rax,QWORD PTR [rbp-0x18]
  431c5f:	mov    rdi,rax
  431c62:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431c67:	mov    rax,QWORD PTR [rbp-0x8]
  431c6b:	mov    rdi,rax
  431c6e:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  431c73:	movzx  ecx,al
  431c76:	mov    rdx,QWORD PTR [rbp-0x18]
  431c7a:	mov    rax,QWORD PTR [rbp-0x38]
  431c7e:	mov    esi,ecx
  431c80:	mov    rdi,rdx
  431c83:	call   rax
  431c85:	mov    rax,QWORD PTR [rbp-0x8]
  431c89:	add    rax,0x1
  431c8d:	mov    QWORD PTR [rbp-0x8],rax
  431c91:	sub    DWORD PTR [rbp-0xc],0x1
  431c95:	jmp    431d15 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fa>
  431c97:	mov    rax,QWORD PTR [rbp-0x18]
  431c9b:	mov    rax,QWORD PTR [rax+0x28]
  431c9f:	lea    rcx,[rax+0x1]
  431ca3:	mov    rdx,QWORD PTR [rbp-0x18]
  431ca7:	mov    QWORD PTR [rdx+0x28],rcx
  431cab:	mov    BYTE PTR [rax],0x2c
  431cae:	mov    rax,QWORD PTR [rbp-0x18]
  431cb2:	movzx  eax,BYTE PTR [rax+0x31]
  431cb6:	test   al,al
  431cb8:	je     431cdf <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c4>
  431cba:	mov    rax,QWORD PTR [rbp-0x18]
  431cbe:	mov    rax,QWORD PTR [rax+0x28]
  431cc2:	lea    rcx,[rax+0x1]
  431cc6:	mov    rdx,QWORD PTR [rbp-0x18]
  431cca:	mov    QWORD PTR [rdx+0x28],rcx
  431cce:	mov    BYTE PTR [rax],0xa
  431cd1:	mov    rax,QWORD PTR [rbp-0x18]
  431cd5:	mov    rdi,rax
  431cd8:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431cdd:	jmp    431ceb <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
  431cdf:	mov    rax,QWORD PTR [rbp-0x18]
  431ce3:	mov    rdi,rax
  431ce6:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431ceb:	mov    rax,QWORD PTR [rbp-0x8]
  431cef:	mov    rdi,rax
  431cf2:	call   4292fb <flatcc_json_parser_struct_as_root@@Base+0x152>
  431cf7:	movzx  ecx,al
  431cfa:	mov    rdx,QWORD PTR [rbp-0x18]
  431cfe:	mov    rax,QWORD PTR [rbp-0x38]
  431d02:	mov    esi,ecx
  431d04:	mov    rdi,rdx
  431d07:	call   rax
  431d09:	mov    rax,QWORD PTR [rbp-0x8]
  431d0d:	add    rax,0x1
  431d11:	mov    QWORD PTR [rbp-0x8],rax
  431d15:	mov    eax,DWORD PTR [rbp-0xc]
  431d18:	lea    edx,[rax-0x1]
  431d1b:	mov    DWORD PTR [rbp-0xc],edx
  431d1e:	test   eax,eax
  431d20:	jne    431c97 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
  431d26:	mov    rax,QWORD PTR [rbp-0x18]
  431d2a:	movzx  eax,BYTE PTR [rax+0x31]
  431d2e:	test   al,al
  431d30:	je     431d66 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24b>
  431d32:	mov    rax,QWORD PTR [rbp-0x18]
  431d36:	mov    rax,QWORD PTR [rax+0x28]
  431d3a:	lea    rcx,[rax+0x1]
  431d3e:	mov    rdx,QWORD PTR [rbp-0x18]
  431d42:	mov    QWORD PTR [rdx+0x28],rcx
  431d46:	mov    BYTE PTR [rax],0xa
  431d49:	mov    rax,QWORD PTR [rbp-0x18]
  431d4d:	mov    eax,DWORD PTR [rax+0x38]
  431d50:	lea    edx,[rax-0x1]
  431d53:	mov    rax,QWORD PTR [rbp-0x18]
  431d57:	mov    DWORD PTR [rax+0x38],edx
  431d5a:	mov    rax,QWORD PTR [rbp-0x18]
  431d5e:	mov    rdi,rax
  431d61:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431d66:	mov    rax,QWORD PTR [rbp-0x18]
  431d6a:	mov    rax,QWORD PTR [rax+0x28]
  431d6e:	lea    rcx,[rax+0x1]
  431d72:	mov    rdx,QWORD PTR [rbp-0x18]
  431d76:	mov    QWORD PTR [rdx+0x28],rcx
  431d7a:	mov    BYTE PTR [rax],0x5d
  431d7d:	leave  
  431d7e:	ret    

0000000000431d7f <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  431d7f:	push   rbp
  431d80:	mov    rbp,rsp
  431d83:	sub    rsp,0x40
  431d87:	mov    QWORD PTR [rbp-0x18],rdi
  431d8b:	mov    QWORD PTR [rbp-0x20],rsi
  431d8f:	mov    DWORD PTR [rbp-0x24],edx
  431d92:	mov    QWORD PTR [rbp-0x30],rcx
  431d96:	mov    DWORD PTR [rbp-0x28],r8d
  431d9a:	mov    QWORD PTR [rbp-0x38],r9
  431d9e:	mov    rax,QWORD PTR [rbp-0x18]
  431da2:	movzx  eax,BYTE PTR [rax+0x33]
  431da6:	test   al,al
  431da8:	je     431dcc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x4d>
  431daa:	mov    edi,DWORD PTR [rbp-0x28]
  431dad:	mov    rcx,QWORD PTR [rbp-0x30]
  431db1:	mov    edx,DWORD PTR [rbp-0x24]
  431db4:	mov    rsi,QWORD PTR [rbp-0x20]
  431db8:	mov    rax,QWORD PTR [rbp-0x18]
  431dbc:	mov    r8d,edi
  431dbf:	mov    rdi,rax
  431dc2:	call   430067 <flatcc_json_printer_uint16_vector_field@@Base>
  431dc7:	jmp    431fe1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x262>
  431dcc:	mov    edx,DWORD PTR [rbp-0x24]
  431dcf:	mov    rax,QWORD PTR [rbp-0x20]
  431dd3:	mov    esi,edx
  431dd5:	mov    rdi,rax
  431dd8:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  431ddd:	mov    QWORD PTR [rbp-0x8],rax
  431de1:	cmp    QWORD PTR [rbp-0x8],0x0
  431de6:	je     431fe1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x262>
  431dec:	mov    rax,QWORD PTR [rbp-0x20]
  431df0:	mov    eax,DWORD PTR [rax+0x18]
  431df3:	lea    ecx,[rax+0x1]
  431df6:	mov    rdx,QWORD PTR [rbp-0x20]
  431dfa:	mov    DWORD PTR [rdx+0x18],ecx
  431dfd:	test   eax,eax
  431dff:	je     431e18 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x99>
  431e01:	mov    rax,QWORD PTR [rbp-0x18]
  431e05:	mov    rax,QWORD PTR [rax+0x28]
  431e09:	lea    rcx,[rax+0x1]
  431e0d:	mov    rdx,QWORD PTR [rbp-0x18]
  431e11:	mov    QWORD PTR [rdx+0x28],rcx
  431e15:	mov    BYTE PTR [rax],0x2c
  431e18:	mov    rax,QWORD PTR [rbp-0x8]
  431e1c:	mov    rdi,rax
  431e1f:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  431e24:	mov    QWORD PTR [rbp-0x8],rax
  431e28:	mov    rax,QWORD PTR [rbp-0x8]
  431e2c:	mov    rdi,rax
  431e2f:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431e34:	mov    DWORD PTR [rbp-0xc],eax
  431e37:	mov    rax,QWORD PTR [rbp-0x8]
  431e3b:	add    rax,0x4
  431e3f:	mov    QWORD PTR [rbp-0x8],rax
  431e43:	mov    eax,DWORD PTR [rbp-0x28]
  431e46:	movsxd rdx,eax
  431e49:	mov    rcx,QWORD PTR [rbp-0x30]
  431e4d:	mov    rax,QWORD PTR [rbp-0x18]
  431e51:	mov    rsi,rcx
  431e54:	mov    rdi,rax
  431e57:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  431e5c:	mov    rax,QWORD PTR [rbp-0x18]
  431e60:	mov    eax,DWORD PTR [rax+0x38]
  431e63:	lea    edx,[rax+0x1]
  431e66:	mov    rax,QWORD PTR [rbp-0x18]
  431e6a:	mov    DWORD PTR [rax+0x38],edx
  431e6d:	mov    rax,QWORD PTR [rbp-0x18]
  431e71:	mov    rax,QWORD PTR [rax+0x28]
  431e75:	lea    rcx,[rax+0x1]
  431e79:	mov    rdx,QWORD PTR [rbp-0x18]
  431e7d:	mov    QWORD PTR [rdx+0x28],rcx
  431e81:	mov    BYTE PTR [rax],0x5b
  431e84:	cmp    DWORD PTR [rbp-0xc],0x0
  431e88:	je     431f79 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fa>
  431e8e:	mov    rax,QWORD PTR [rbp-0x18]
  431e92:	movzx  eax,BYTE PTR [rax+0x31]
  431e96:	test   al,al
  431e98:	je     431ebf <flatcc_json_printer_uint16_enum_vector_field@@Base+0x140>
  431e9a:	mov    rax,QWORD PTR [rbp-0x18]
  431e9e:	mov    rax,QWORD PTR [rax+0x28]
  431ea2:	lea    rcx,[rax+0x1]
  431ea6:	mov    rdx,QWORD PTR [rbp-0x18]
  431eaa:	mov    QWORD PTR [rdx+0x28],rcx
  431eae:	mov    BYTE PTR [rax],0xa
  431eb1:	mov    rax,QWORD PTR [rbp-0x18]
  431eb5:	mov    rdi,rax
  431eb8:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431ebd:	jmp    431ecb <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
  431ebf:	mov    rax,QWORD PTR [rbp-0x18]
  431ec3:	mov    rdi,rax
  431ec6:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431ecb:	mov    rax,QWORD PTR [rbp-0x8]
  431ecf:	mov    rdi,rax
  431ed2:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  431ed7:	movzx  ecx,ax
  431eda:	mov    rdx,QWORD PTR [rbp-0x18]
  431ede:	mov    rax,QWORD PTR [rbp-0x38]
  431ee2:	mov    esi,ecx
  431ee4:	mov    rdi,rdx
  431ee7:	call   rax
  431ee9:	mov    rax,QWORD PTR [rbp-0x8]
  431eed:	add    rax,0x2
  431ef1:	mov    QWORD PTR [rbp-0x8],rax
  431ef5:	sub    DWORD PTR [rbp-0xc],0x1
  431ef9:	jmp    431f79 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fa>
  431efb:	mov    rax,QWORD PTR [rbp-0x18]
  431eff:	mov    rax,QWORD PTR [rax+0x28]
  431f03:	lea    rcx,[rax+0x1]
  431f07:	mov    rdx,QWORD PTR [rbp-0x18]
  431f0b:	mov    QWORD PTR [rdx+0x28],rcx
  431f0f:	mov    BYTE PTR [rax],0x2c
  431f12:	mov    rax,QWORD PTR [rbp-0x18]
  431f16:	movzx  eax,BYTE PTR [rax+0x31]
  431f1a:	test   al,al
  431f1c:	je     431f43 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
  431f1e:	mov    rax,QWORD PTR [rbp-0x18]
  431f22:	mov    rax,QWORD PTR [rax+0x28]
  431f26:	lea    rcx,[rax+0x1]
  431f2a:	mov    rdx,QWORD PTR [rbp-0x18]
  431f2e:	mov    QWORD PTR [rdx+0x28],rcx
  431f32:	mov    BYTE PTR [rax],0xa
  431f35:	mov    rax,QWORD PTR [rbp-0x18]
  431f39:	mov    rdi,rax
  431f3c:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431f41:	jmp    431f4f <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d0>
  431f43:	mov    rax,QWORD PTR [rbp-0x18]
  431f47:	mov    rdi,rax
  431f4a:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  431f4f:	mov    rax,QWORD PTR [rbp-0x8]
  431f53:	mov    rdi,rax
  431f56:	call   42932a <flatcc_json_parser_struct_as_root@@Base+0x181>
  431f5b:	movzx  ecx,ax
  431f5e:	mov    rdx,QWORD PTR [rbp-0x18]
  431f62:	mov    rax,QWORD PTR [rbp-0x38]
  431f66:	mov    esi,ecx
  431f68:	mov    rdi,rdx
  431f6b:	call   rax
  431f6d:	mov    rax,QWORD PTR [rbp-0x8]
  431f71:	add    rax,0x2
  431f75:	mov    QWORD PTR [rbp-0x8],rax
  431f79:	mov    eax,DWORD PTR [rbp-0xc]
  431f7c:	lea    edx,[rax-0x1]
  431f7f:	mov    DWORD PTR [rbp-0xc],edx
  431f82:	test   eax,eax
  431f84:	jne    431efb <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
  431f8a:	mov    rax,QWORD PTR [rbp-0x18]
  431f8e:	movzx  eax,BYTE PTR [rax+0x31]
  431f92:	test   al,al
  431f94:	je     431fca <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24b>
  431f96:	mov    rax,QWORD PTR [rbp-0x18]
  431f9a:	mov    rax,QWORD PTR [rax+0x28]
  431f9e:	lea    rcx,[rax+0x1]
  431fa2:	mov    rdx,QWORD PTR [rbp-0x18]
  431fa6:	mov    QWORD PTR [rdx+0x28],rcx
  431faa:	mov    BYTE PTR [rax],0xa
  431fad:	mov    rax,QWORD PTR [rbp-0x18]
  431fb1:	mov    eax,DWORD PTR [rax+0x38]
  431fb4:	lea    edx,[rax-0x1]
  431fb7:	mov    rax,QWORD PTR [rbp-0x18]
  431fbb:	mov    DWORD PTR [rax+0x38],edx
  431fbe:	mov    rax,QWORD PTR [rbp-0x18]
  431fc2:	mov    rdi,rax
  431fc5:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431fca:	mov    rax,QWORD PTR [rbp-0x18]
  431fce:	mov    rax,QWORD PTR [rax+0x28]
  431fd2:	lea    rcx,[rax+0x1]
  431fd6:	mov    rdx,QWORD PTR [rbp-0x18]
  431fda:	mov    QWORD PTR [rdx+0x28],rcx
  431fde:	mov    BYTE PTR [rax],0x5d
  431fe1:	leave  
  431fe2:	ret    

0000000000431fe3 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  431fe3:	push   rbp
  431fe4:	mov    rbp,rsp
  431fe7:	sub    rsp,0x40
  431feb:	mov    QWORD PTR [rbp-0x18],rdi
  431fef:	mov    QWORD PTR [rbp-0x20],rsi
  431ff3:	mov    DWORD PTR [rbp-0x24],edx
  431ff6:	mov    QWORD PTR [rbp-0x30],rcx
  431ffa:	mov    DWORD PTR [rbp-0x28],r8d
  431ffe:	mov    QWORD PTR [rbp-0x38],r9
  432002:	mov    rax,QWORD PTR [rbp-0x18]
  432006:	movzx  eax,BYTE PTR [rax+0x33]
  43200a:	test   al,al
  43200c:	je     432030 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x4d>
  43200e:	mov    edi,DWORD PTR [rbp-0x28]
  432011:	mov    rcx,QWORD PTR [rbp-0x30]
  432015:	mov    edx,DWORD PTR [rbp-0x24]
  432018:	mov    rsi,QWORD PTR [rbp-0x20]
  43201c:	mov    rax,QWORD PTR [rbp-0x18]
  432020:	mov    r8d,edi
  432023:	mov    rdi,rax
  432026:	call   4302d9 <flatcc_json_printer_uint32_vector_field@@Base>
  43202b:	jmp    432243 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
  432030:	mov    edx,DWORD PTR [rbp-0x24]
  432033:	mov    rax,QWORD PTR [rbp-0x20]
  432037:	mov    esi,edx
  432039:	mov    rdi,rax
  43203c:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  432041:	mov    QWORD PTR [rbp-0x8],rax
  432045:	cmp    QWORD PTR [rbp-0x8],0x0
  43204a:	je     432243 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
  432050:	mov    rax,QWORD PTR [rbp-0x20]
  432054:	mov    eax,DWORD PTR [rax+0x18]
  432057:	lea    ecx,[rax+0x1]
  43205a:	mov    rdx,QWORD PTR [rbp-0x20]
  43205e:	mov    DWORD PTR [rdx+0x18],ecx
  432061:	test   eax,eax
  432063:	je     43207c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x99>
  432065:	mov    rax,QWORD PTR [rbp-0x18]
  432069:	mov    rax,QWORD PTR [rax+0x28]
  43206d:	lea    rcx,[rax+0x1]
  432071:	mov    rdx,QWORD PTR [rbp-0x18]
  432075:	mov    QWORD PTR [rdx+0x28],rcx
  432079:	mov    BYTE PTR [rax],0x2c
  43207c:	mov    rax,QWORD PTR [rbp-0x8]
  432080:	mov    rdi,rax
  432083:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  432088:	mov    QWORD PTR [rbp-0x8],rax
  43208c:	mov    rax,QWORD PTR [rbp-0x8]
  432090:	mov    rdi,rax
  432093:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432098:	mov    DWORD PTR [rbp-0xc],eax
  43209b:	mov    rax,QWORD PTR [rbp-0x8]
  43209f:	add    rax,0x4
  4320a3:	mov    QWORD PTR [rbp-0x8],rax
  4320a7:	mov    eax,DWORD PTR [rbp-0x28]
  4320aa:	movsxd rdx,eax
  4320ad:	mov    rcx,QWORD PTR [rbp-0x30]
  4320b1:	mov    rax,QWORD PTR [rbp-0x18]
  4320b5:	mov    rsi,rcx
  4320b8:	mov    rdi,rax
  4320bb:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  4320c0:	mov    rax,QWORD PTR [rbp-0x18]
  4320c4:	mov    eax,DWORD PTR [rax+0x38]
  4320c7:	lea    edx,[rax+0x1]
  4320ca:	mov    rax,QWORD PTR [rbp-0x18]
  4320ce:	mov    DWORD PTR [rax+0x38],edx
  4320d1:	mov    rax,QWORD PTR [rbp-0x18]
  4320d5:	mov    rax,QWORD PTR [rax+0x28]
  4320d9:	lea    rcx,[rax+0x1]
  4320dd:	mov    rdx,QWORD PTR [rbp-0x18]
  4320e1:	mov    QWORD PTR [rdx+0x28],rcx
  4320e5:	mov    BYTE PTR [rax],0x5b
  4320e8:	cmp    DWORD PTR [rbp-0xc],0x0
  4320ec:	je     4321db <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
  4320f2:	mov    rax,QWORD PTR [rbp-0x18]
  4320f6:	movzx  eax,BYTE PTR [rax+0x31]
  4320fa:	test   al,al
  4320fc:	je     432123 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x140>
  4320fe:	mov    rax,QWORD PTR [rbp-0x18]
  432102:	mov    rax,QWORD PTR [rax+0x28]
  432106:	lea    rcx,[rax+0x1]
  43210a:	mov    rdx,QWORD PTR [rbp-0x18]
  43210e:	mov    QWORD PTR [rdx+0x28],rcx
  432112:	mov    BYTE PTR [rax],0xa
  432115:	mov    rax,QWORD PTR [rbp-0x18]
  432119:	mov    rdi,rax
  43211c:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432121:	jmp    43212f <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
  432123:	mov    rax,QWORD PTR [rbp-0x18]
  432127:	mov    rdi,rax
  43212a:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43212f:	mov    rax,QWORD PTR [rbp-0x8]
  432133:	mov    rdi,rax
  432136:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  43213b:	mov    ecx,eax
  43213d:	mov    rdx,QWORD PTR [rbp-0x18]
  432141:	mov    rax,QWORD PTR [rbp-0x38]
  432145:	mov    esi,ecx
  432147:	mov    rdi,rdx
  43214a:	call   rax
  43214c:	mov    rax,QWORD PTR [rbp-0x8]
  432150:	add    rax,0x4
  432154:	mov    QWORD PTR [rbp-0x8],rax
  432158:	sub    DWORD PTR [rbp-0xc],0x1
  43215c:	jmp    4321db <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
  43215e:	mov    rax,QWORD PTR [rbp-0x18]
  432162:	mov    rax,QWORD PTR [rax+0x28]
  432166:	lea    rcx,[rax+0x1]
  43216a:	mov    rdx,QWORD PTR [rbp-0x18]
  43216e:	mov    QWORD PTR [rdx+0x28],rcx
  432172:	mov    BYTE PTR [rax],0x2c
  432175:	mov    rax,QWORD PTR [rbp-0x18]
  432179:	movzx  eax,BYTE PTR [rax+0x31]
  43217d:	test   al,al
  43217f:	je     4321a6 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c3>
  432181:	mov    rax,QWORD PTR [rbp-0x18]
  432185:	mov    rax,QWORD PTR [rax+0x28]
  432189:	lea    rcx,[rax+0x1]
  43218d:	mov    rdx,QWORD PTR [rbp-0x18]
  432191:	mov    QWORD PTR [rdx+0x28],rcx
  432195:	mov    BYTE PTR [rax],0xa
  432198:	mov    rax,QWORD PTR [rbp-0x18]
  43219c:	mov    rdi,rax
  43219f:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4321a4:	jmp    4321b2 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cf>
  4321a6:	mov    rax,QWORD PTR [rbp-0x18]
  4321aa:	mov    rdi,rax
  4321ad:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4321b2:	mov    rax,QWORD PTR [rbp-0x8]
  4321b6:	mov    rdi,rax
  4321b9:	call   429355 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  4321be:	mov    ecx,eax
  4321c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4321c4:	mov    rax,QWORD PTR [rbp-0x38]
  4321c8:	mov    esi,ecx
  4321ca:	mov    rdi,rdx
  4321cd:	call   rax
  4321cf:	mov    rax,QWORD PTR [rbp-0x8]
  4321d3:	add    rax,0x4
  4321d7:	mov    QWORD PTR [rbp-0x8],rax
  4321db:	mov    eax,DWORD PTR [rbp-0xc]
  4321de:	lea    edx,[rax-0x1]
  4321e1:	mov    DWORD PTR [rbp-0xc],edx
  4321e4:	test   eax,eax
  4321e6:	jne    43215e <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17b>
  4321ec:	mov    rax,QWORD PTR [rbp-0x18]
  4321f0:	movzx  eax,BYTE PTR [rax+0x31]
  4321f4:	test   al,al
  4321f6:	je     43222c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x249>
  4321f8:	mov    rax,QWORD PTR [rbp-0x18]
  4321fc:	mov    rax,QWORD PTR [rax+0x28]
  432200:	lea    rcx,[rax+0x1]
  432204:	mov    rdx,QWORD PTR [rbp-0x18]
  432208:	mov    QWORD PTR [rdx+0x28],rcx
  43220c:	mov    BYTE PTR [rax],0xa
  43220f:	mov    rax,QWORD PTR [rbp-0x18]
  432213:	mov    eax,DWORD PTR [rax+0x38]
  432216:	lea    edx,[rax-0x1]
  432219:	mov    rax,QWORD PTR [rbp-0x18]
  43221d:	mov    DWORD PTR [rax+0x38],edx
  432220:	mov    rax,QWORD PTR [rbp-0x18]
  432224:	mov    rdi,rax
  432227:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43222c:	mov    rax,QWORD PTR [rbp-0x18]
  432230:	mov    rax,QWORD PTR [rax+0x28]
  432234:	lea    rcx,[rax+0x1]
  432238:	mov    rdx,QWORD PTR [rbp-0x18]
  43223c:	mov    QWORD PTR [rdx+0x28],rcx
  432240:	mov    BYTE PTR [rax],0x5d
  432243:	leave  
  432244:	ret    

0000000000432245 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  432245:	push   rbp
  432246:	mov    rbp,rsp
  432249:	sub    rsp,0x40
  43224d:	mov    QWORD PTR [rbp-0x18],rdi
  432251:	mov    QWORD PTR [rbp-0x20],rsi
  432255:	mov    DWORD PTR [rbp-0x24],edx
  432258:	mov    QWORD PTR [rbp-0x30],rcx
  43225c:	mov    DWORD PTR [rbp-0x28],r8d
  432260:	mov    QWORD PTR [rbp-0x38],r9
  432264:	mov    rax,QWORD PTR [rbp-0x18]
  432268:	movzx  eax,BYTE PTR [rax+0x33]
  43226c:	test   al,al
  43226e:	je     432292 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x4d>
  432270:	mov    edi,DWORD PTR [rbp-0x28]
  432273:	mov    rcx,QWORD PTR [rbp-0x30]
  432277:	mov    edx,DWORD PTR [rbp-0x24]
  43227a:	mov    rsi,QWORD PTR [rbp-0x20]
  43227e:	mov    rax,QWORD PTR [rbp-0x18]
  432282:	mov    r8d,edi
  432285:	mov    rdi,rax
  432288:	call   430545 <flatcc_json_printer_uint64_vector_field@@Base>
  43228d:	jmp    4324a9 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x264>
  432292:	mov    edx,DWORD PTR [rbp-0x24]
  432295:	mov    rax,QWORD PTR [rbp-0x20]
  432299:	mov    esi,edx
  43229b:	mov    rdi,rax
  43229e:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4322a3:	mov    QWORD PTR [rbp-0x8],rax
  4322a7:	cmp    QWORD PTR [rbp-0x8],0x0
  4322ac:	je     4324a9 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x264>
  4322b2:	mov    rax,QWORD PTR [rbp-0x20]
  4322b6:	mov    eax,DWORD PTR [rax+0x18]
  4322b9:	lea    ecx,[rax+0x1]
  4322bc:	mov    rdx,QWORD PTR [rbp-0x20]
  4322c0:	mov    DWORD PTR [rdx+0x18],ecx
  4322c3:	test   eax,eax
  4322c5:	je     4322de <flatcc_json_printer_uint64_enum_vector_field@@Base+0x99>
  4322c7:	mov    rax,QWORD PTR [rbp-0x18]
  4322cb:	mov    rax,QWORD PTR [rax+0x28]
  4322cf:	lea    rcx,[rax+0x1]
  4322d3:	mov    rdx,QWORD PTR [rbp-0x18]
  4322d7:	mov    QWORD PTR [rdx+0x28],rcx
  4322db:	mov    BYTE PTR [rax],0x2c
  4322de:	mov    rax,QWORD PTR [rbp-0x8]
  4322e2:	mov    rdi,rax
  4322e5:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4322ea:	mov    QWORD PTR [rbp-0x8],rax
  4322ee:	mov    rax,QWORD PTR [rbp-0x8]
  4322f2:	mov    rdi,rax
  4322f5:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4322fa:	mov    DWORD PTR [rbp-0xc],eax
  4322fd:	mov    rax,QWORD PTR [rbp-0x8]
  432301:	add    rax,0x4
  432305:	mov    QWORD PTR [rbp-0x8],rax
  432309:	mov    eax,DWORD PTR [rbp-0x28]
  43230c:	movsxd rdx,eax
  43230f:	mov    rcx,QWORD PTR [rbp-0x30]
  432313:	mov    rax,QWORD PTR [rbp-0x18]
  432317:	mov    rsi,rcx
  43231a:	mov    rdi,rax
  43231d:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  432322:	mov    rax,QWORD PTR [rbp-0x18]
  432326:	mov    eax,DWORD PTR [rax+0x38]
  432329:	lea    edx,[rax+0x1]
  43232c:	mov    rax,QWORD PTR [rbp-0x18]
  432330:	mov    DWORD PTR [rax+0x38],edx
  432333:	mov    rax,QWORD PTR [rbp-0x18]
  432337:	mov    rax,QWORD PTR [rax+0x28]
  43233b:	lea    rcx,[rax+0x1]
  43233f:	mov    rdx,QWORD PTR [rbp-0x18]
  432343:	mov    QWORD PTR [rdx+0x28],rcx
  432347:	mov    BYTE PTR [rax],0x5b
  43234a:	cmp    DWORD PTR [rbp-0xc],0x0
  43234e:	je     432441 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1fc>
  432354:	mov    rax,QWORD PTR [rbp-0x18]
  432358:	movzx  eax,BYTE PTR [rax+0x31]
  43235c:	test   al,al
  43235e:	je     432385 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x140>
  432360:	mov    rax,QWORD PTR [rbp-0x18]
  432364:	mov    rax,QWORD PTR [rax+0x28]
  432368:	lea    rcx,[rax+0x1]
  43236c:	mov    rdx,QWORD PTR [rbp-0x18]
  432370:	mov    QWORD PTR [rdx+0x28],rcx
  432374:	mov    BYTE PTR [rax],0xa
  432377:	mov    rax,QWORD PTR [rbp-0x18]
  43237b:	mov    rdi,rax
  43237e:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432383:	jmp    432391 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
  432385:	mov    rax,QWORD PTR [rbp-0x18]
  432389:	mov    rdi,rax
  43238c:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432391:	mov    rax,QWORD PTR [rbp-0x8]
  432395:	mov    rdi,rax
  432398:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  43239d:	mov    rcx,rax
  4323a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4323a4:	mov    rax,QWORD PTR [rbp-0x38]
  4323a8:	mov    rsi,rcx
  4323ab:	mov    rdi,rdx
  4323ae:	call   rax
  4323b0:	mov    rax,QWORD PTR [rbp-0x8]
  4323b4:	add    rax,0x8
  4323b8:	mov    QWORD PTR [rbp-0x8],rax
  4323bc:	sub    DWORD PTR [rbp-0xc],0x1
  4323c0:	jmp    432441 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1fc>
  4323c2:	mov    rax,QWORD PTR [rbp-0x18]
  4323c6:	mov    rax,QWORD PTR [rax+0x28]
  4323ca:	lea    rcx,[rax+0x1]
  4323ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4323d2:	mov    QWORD PTR [rdx+0x28],rcx
  4323d6:	mov    BYTE PTR [rax],0x2c
  4323d9:	mov    rax,QWORD PTR [rbp-0x18]
  4323dd:	movzx  eax,BYTE PTR [rax+0x31]
  4323e1:	test   al,al
  4323e3:	je     43240a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c5>
  4323e5:	mov    rax,QWORD PTR [rbp-0x18]
  4323e9:	mov    rax,QWORD PTR [rax+0x28]
  4323ed:	lea    rcx,[rax+0x1]
  4323f1:	mov    rdx,QWORD PTR [rbp-0x18]
  4323f5:	mov    QWORD PTR [rdx+0x28],rcx
  4323f9:	mov    BYTE PTR [rax],0xa
  4323fc:	mov    rax,QWORD PTR [rbp-0x18]
  432400:	mov    rdi,rax
  432403:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432408:	jmp    432416 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d1>
  43240a:	mov    rax,QWORD PTR [rbp-0x18]
  43240e:	mov    rdi,rax
  432411:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432416:	mov    rax,QWORD PTR [rbp-0x8]
  43241a:	mov    rdi,rax
  43241d:	call   42937e <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  432422:	mov    rcx,rax
  432425:	mov    rdx,QWORD PTR [rbp-0x18]
  432429:	mov    rax,QWORD PTR [rbp-0x38]
  43242d:	mov    rsi,rcx
  432430:	mov    rdi,rdx
  432433:	call   rax
  432435:	mov    rax,QWORD PTR [rbp-0x8]
  432439:	add    rax,0x8
  43243d:	mov    QWORD PTR [rbp-0x8],rax
  432441:	mov    eax,DWORD PTR [rbp-0xc]
  432444:	lea    edx,[rax-0x1]
  432447:	mov    DWORD PTR [rbp-0xc],edx
  43244a:	test   eax,eax
  43244c:	jne    4323c2 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17d>
  432452:	mov    rax,QWORD PTR [rbp-0x18]
  432456:	movzx  eax,BYTE PTR [rax+0x31]
  43245a:	test   al,al
  43245c:	je     432492 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24d>
  43245e:	mov    rax,QWORD PTR [rbp-0x18]
  432462:	mov    rax,QWORD PTR [rax+0x28]
  432466:	lea    rcx,[rax+0x1]
  43246a:	mov    rdx,QWORD PTR [rbp-0x18]
  43246e:	mov    QWORD PTR [rdx+0x28],rcx
  432472:	mov    BYTE PTR [rax],0xa
  432475:	mov    rax,QWORD PTR [rbp-0x18]
  432479:	mov    eax,DWORD PTR [rax+0x38]
  43247c:	lea    edx,[rax-0x1]
  43247f:	mov    rax,QWORD PTR [rbp-0x18]
  432483:	mov    DWORD PTR [rax+0x38],edx
  432486:	mov    rax,QWORD PTR [rbp-0x18]
  43248a:	mov    rdi,rax
  43248d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432492:	mov    rax,QWORD PTR [rbp-0x18]
  432496:	mov    rax,QWORD PTR [rax+0x28]
  43249a:	lea    rcx,[rax+0x1]
  43249e:	mov    rdx,QWORD PTR [rbp-0x18]
  4324a2:	mov    QWORD PTR [rdx+0x28],rcx
  4324a6:	mov    BYTE PTR [rax],0x5d
  4324a9:	leave  
  4324aa:	ret    

00000000004324ab <flatcc_json_printer_int8_enum_vector_field@@Base>:
  4324ab:	push   rbp
  4324ac:	mov    rbp,rsp
  4324af:	sub    rsp,0x40
  4324b3:	mov    QWORD PTR [rbp-0x18],rdi
  4324b7:	mov    QWORD PTR [rbp-0x20],rsi
  4324bb:	mov    DWORD PTR [rbp-0x24],edx
  4324be:	mov    QWORD PTR [rbp-0x30],rcx
  4324c2:	mov    DWORD PTR [rbp-0x28],r8d
  4324c6:	mov    QWORD PTR [rbp-0x38],r9
  4324ca:	mov    rax,QWORD PTR [rbp-0x18]
  4324ce:	movzx  eax,BYTE PTR [rax+0x33]
  4324d2:	test   al,al
  4324d4:	je     4324f8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x4d>
  4324d6:	mov    edi,DWORD PTR [rbp-0x28]
  4324d9:	mov    rcx,QWORD PTR [rbp-0x30]
  4324dd:	mov    edx,DWORD PTR [rbp-0x24]
  4324e0:	mov    rsi,QWORD PTR [rbp-0x20]
  4324e4:	mov    rax,QWORD PTR [rbp-0x18]
  4324e8:	mov    r8d,edi
  4324eb:	mov    rdi,rax
  4324ee:	call   4307b3 <flatcc_json_printer_int8_vector_field@@Base>
  4324f3:	jmp    43270d <flatcc_json_printer_int8_enum_vector_field@@Base+0x262>
  4324f8:	mov    edx,DWORD PTR [rbp-0x24]
  4324fb:	mov    rax,QWORD PTR [rbp-0x20]
  4324ff:	mov    esi,edx
  432501:	mov    rdi,rax
  432504:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  432509:	mov    QWORD PTR [rbp-0x8],rax
  43250d:	cmp    QWORD PTR [rbp-0x8],0x0
  432512:	je     43270d <flatcc_json_printer_int8_enum_vector_field@@Base+0x262>
  432518:	mov    rax,QWORD PTR [rbp-0x20]
  43251c:	mov    eax,DWORD PTR [rax+0x18]
  43251f:	lea    ecx,[rax+0x1]
  432522:	mov    rdx,QWORD PTR [rbp-0x20]
  432526:	mov    DWORD PTR [rdx+0x18],ecx
  432529:	test   eax,eax
  43252b:	je     432544 <flatcc_json_printer_int8_enum_vector_field@@Base+0x99>
  43252d:	mov    rax,QWORD PTR [rbp-0x18]
  432531:	mov    rax,QWORD PTR [rax+0x28]
  432535:	lea    rcx,[rax+0x1]
  432539:	mov    rdx,QWORD PTR [rbp-0x18]
  43253d:	mov    QWORD PTR [rdx+0x28],rcx
  432541:	mov    BYTE PTR [rax],0x2c
  432544:	mov    rax,QWORD PTR [rbp-0x8]
  432548:	mov    rdi,rax
  43254b:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  432550:	mov    QWORD PTR [rbp-0x8],rax
  432554:	mov    rax,QWORD PTR [rbp-0x8]
  432558:	mov    rdi,rax
  43255b:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432560:	mov    DWORD PTR [rbp-0xc],eax
  432563:	mov    rax,QWORD PTR [rbp-0x8]
  432567:	add    rax,0x4
  43256b:	mov    QWORD PTR [rbp-0x8],rax
  43256f:	mov    eax,DWORD PTR [rbp-0x28]
  432572:	movsxd rdx,eax
  432575:	mov    rcx,QWORD PTR [rbp-0x30]
  432579:	mov    rax,QWORD PTR [rbp-0x18]
  43257d:	mov    rsi,rcx
  432580:	mov    rdi,rax
  432583:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  432588:	mov    rax,QWORD PTR [rbp-0x18]
  43258c:	mov    eax,DWORD PTR [rax+0x38]
  43258f:	lea    edx,[rax+0x1]
  432592:	mov    rax,QWORD PTR [rbp-0x18]
  432596:	mov    DWORD PTR [rax+0x38],edx
  432599:	mov    rax,QWORD PTR [rbp-0x18]
  43259d:	mov    rax,QWORD PTR [rax+0x28]
  4325a1:	lea    rcx,[rax+0x1]
  4325a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4325a9:	mov    QWORD PTR [rdx+0x28],rcx
  4325ad:	mov    BYTE PTR [rax],0x5b
  4325b0:	cmp    DWORD PTR [rbp-0xc],0x0
  4325b4:	je     4326a5 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fa>
  4325ba:	mov    rax,QWORD PTR [rbp-0x18]
  4325be:	movzx  eax,BYTE PTR [rax+0x31]
  4325c2:	test   al,al
  4325c4:	je     4325eb <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
  4325c6:	mov    rax,QWORD PTR [rbp-0x18]
  4325ca:	mov    rax,QWORD PTR [rax+0x28]
  4325ce:	lea    rcx,[rax+0x1]
  4325d2:	mov    rdx,QWORD PTR [rbp-0x18]
  4325d6:	mov    QWORD PTR [rdx+0x28],rcx
  4325da:	mov    BYTE PTR [rax],0xa
  4325dd:	mov    rax,QWORD PTR [rbp-0x18]
  4325e1:	mov    rdi,rax
  4325e4:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4325e9:	jmp    4325f7 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
  4325eb:	mov    rax,QWORD PTR [rbp-0x18]
  4325ef:	mov    rdi,rax
  4325f2:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4325f7:	mov    rax,QWORD PTR [rbp-0x8]
  4325fb:	mov    rdi,rax
  4325fe:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  432603:	movsx  ecx,al
  432606:	mov    rdx,QWORD PTR [rbp-0x18]
  43260a:	mov    rax,QWORD PTR [rbp-0x38]
  43260e:	mov    esi,ecx
  432610:	mov    rdi,rdx
  432613:	call   rax
  432615:	mov    rax,QWORD PTR [rbp-0x8]
  432619:	add    rax,0x1
  43261d:	mov    QWORD PTR [rbp-0x8],rax
  432621:	sub    DWORD PTR [rbp-0xc],0x1
  432625:	jmp    4326a5 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fa>
  432627:	mov    rax,QWORD PTR [rbp-0x18]
  43262b:	mov    rax,QWORD PTR [rax+0x28]
  43262f:	lea    rcx,[rax+0x1]
  432633:	mov    rdx,QWORD PTR [rbp-0x18]
  432637:	mov    QWORD PTR [rdx+0x28],rcx
  43263b:	mov    BYTE PTR [rax],0x2c
  43263e:	mov    rax,QWORD PTR [rbp-0x18]
  432642:	movzx  eax,BYTE PTR [rax+0x31]
  432646:	test   al,al
  432648:	je     43266f <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c4>
  43264a:	mov    rax,QWORD PTR [rbp-0x18]
  43264e:	mov    rax,QWORD PTR [rax+0x28]
  432652:	lea    rcx,[rax+0x1]
  432656:	mov    rdx,QWORD PTR [rbp-0x18]
  43265a:	mov    QWORD PTR [rdx+0x28],rcx
  43265e:	mov    BYTE PTR [rax],0xa
  432661:	mov    rax,QWORD PTR [rbp-0x18]
  432665:	mov    rdi,rax
  432668:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43266d:	jmp    43267b <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
  43266f:	mov    rax,QWORD PTR [rbp-0x18]
  432673:	mov    rdi,rax
  432676:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43267b:	mov    rax,QWORD PTR [rbp-0x8]
  43267f:	mov    rdi,rax
  432682:	call   4293aa <flatcc_json_parser_struct_as_root@@Base+0x201>
  432687:	movsx  ecx,al
  43268a:	mov    rdx,QWORD PTR [rbp-0x18]
  43268e:	mov    rax,QWORD PTR [rbp-0x38]
  432692:	mov    esi,ecx
  432694:	mov    rdi,rdx
  432697:	call   rax
  432699:	mov    rax,QWORD PTR [rbp-0x8]
  43269d:	add    rax,0x1
  4326a1:	mov    QWORD PTR [rbp-0x8],rax
  4326a5:	mov    eax,DWORD PTR [rbp-0xc]
  4326a8:	lea    edx,[rax-0x1]
  4326ab:	mov    DWORD PTR [rbp-0xc],edx
  4326ae:	test   eax,eax
  4326b0:	jne    432627 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
  4326b6:	mov    rax,QWORD PTR [rbp-0x18]
  4326ba:	movzx  eax,BYTE PTR [rax+0x31]
  4326be:	test   al,al
  4326c0:	je     4326f6 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24b>
  4326c2:	mov    rax,QWORD PTR [rbp-0x18]
  4326c6:	mov    rax,QWORD PTR [rax+0x28]
  4326ca:	lea    rcx,[rax+0x1]
  4326ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4326d2:	mov    QWORD PTR [rdx+0x28],rcx
  4326d6:	mov    BYTE PTR [rax],0xa
  4326d9:	mov    rax,QWORD PTR [rbp-0x18]
  4326dd:	mov    eax,DWORD PTR [rax+0x38]
  4326e0:	lea    edx,[rax-0x1]
  4326e3:	mov    rax,QWORD PTR [rbp-0x18]
  4326e7:	mov    DWORD PTR [rax+0x38],edx
  4326ea:	mov    rax,QWORD PTR [rbp-0x18]
  4326ee:	mov    rdi,rax
  4326f1:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4326f6:	mov    rax,QWORD PTR [rbp-0x18]
  4326fa:	mov    rax,QWORD PTR [rax+0x28]
  4326fe:	lea    rcx,[rax+0x1]
  432702:	mov    rdx,QWORD PTR [rbp-0x18]
  432706:	mov    QWORD PTR [rdx+0x28],rcx
  43270a:	mov    BYTE PTR [rax],0x5d
  43270d:	leave  
  43270e:	ret    

000000000043270f <flatcc_json_printer_int16_enum_vector_field@@Base>:
  43270f:	push   rbp
  432710:	mov    rbp,rsp
  432713:	sub    rsp,0x40
  432717:	mov    QWORD PTR [rbp-0x18],rdi
  43271b:	mov    QWORD PTR [rbp-0x20],rsi
  43271f:	mov    DWORD PTR [rbp-0x24],edx
  432722:	mov    QWORD PTR [rbp-0x30],rcx
  432726:	mov    DWORD PTR [rbp-0x28],r8d
  43272a:	mov    QWORD PTR [rbp-0x38],r9
  43272e:	mov    rax,QWORD PTR [rbp-0x18]
  432732:	movzx  eax,BYTE PTR [rax+0x33]
  432736:	test   al,al
  432738:	je     43275c <flatcc_json_printer_int16_enum_vector_field@@Base+0x4d>
  43273a:	mov    edi,DWORD PTR [rbp-0x28]
  43273d:	mov    rcx,QWORD PTR [rbp-0x30]
  432741:	mov    edx,DWORD PTR [rbp-0x24]
  432744:	mov    rsi,QWORD PTR [rbp-0x20]
  432748:	mov    rax,QWORD PTR [rbp-0x18]
  43274c:	mov    r8d,edi
  43274f:	mov    rdi,rax
  432752:	call   430a25 <flatcc_json_printer_int16_vector_field@@Base>
  432757:	jmp    432971 <flatcc_json_printer_int16_enum_vector_field@@Base+0x262>
  43275c:	mov    edx,DWORD PTR [rbp-0x24]
  43275f:	mov    rax,QWORD PTR [rbp-0x20]
  432763:	mov    esi,edx
  432765:	mov    rdi,rax
  432768:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  43276d:	mov    QWORD PTR [rbp-0x8],rax
  432771:	cmp    QWORD PTR [rbp-0x8],0x0
  432776:	je     432971 <flatcc_json_printer_int16_enum_vector_field@@Base+0x262>
  43277c:	mov    rax,QWORD PTR [rbp-0x20]
  432780:	mov    eax,DWORD PTR [rax+0x18]
  432783:	lea    ecx,[rax+0x1]
  432786:	mov    rdx,QWORD PTR [rbp-0x20]
  43278a:	mov    DWORD PTR [rdx+0x18],ecx
  43278d:	test   eax,eax
  43278f:	je     4327a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x99>
  432791:	mov    rax,QWORD PTR [rbp-0x18]
  432795:	mov    rax,QWORD PTR [rax+0x28]
  432799:	lea    rcx,[rax+0x1]
  43279d:	mov    rdx,QWORD PTR [rbp-0x18]
  4327a1:	mov    QWORD PTR [rdx+0x28],rcx
  4327a5:	mov    BYTE PTR [rax],0x2c
  4327a8:	mov    rax,QWORD PTR [rbp-0x8]
  4327ac:	mov    rdi,rax
  4327af:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4327b4:	mov    QWORD PTR [rbp-0x8],rax
  4327b8:	mov    rax,QWORD PTR [rbp-0x8]
  4327bc:	mov    rdi,rax
  4327bf:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4327c4:	mov    DWORD PTR [rbp-0xc],eax
  4327c7:	mov    rax,QWORD PTR [rbp-0x8]
  4327cb:	add    rax,0x4
  4327cf:	mov    QWORD PTR [rbp-0x8],rax
  4327d3:	mov    eax,DWORD PTR [rbp-0x28]
  4327d6:	movsxd rdx,eax
  4327d9:	mov    rcx,QWORD PTR [rbp-0x30]
  4327dd:	mov    rax,QWORD PTR [rbp-0x18]
  4327e1:	mov    rsi,rcx
  4327e4:	mov    rdi,rax
  4327e7:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  4327ec:	mov    rax,QWORD PTR [rbp-0x18]
  4327f0:	mov    eax,DWORD PTR [rax+0x38]
  4327f3:	lea    edx,[rax+0x1]
  4327f6:	mov    rax,QWORD PTR [rbp-0x18]
  4327fa:	mov    DWORD PTR [rax+0x38],edx
  4327fd:	mov    rax,QWORD PTR [rbp-0x18]
  432801:	mov    rax,QWORD PTR [rax+0x28]
  432805:	lea    rcx,[rax+0x1]
  432809:	mov    rdx,QWORD PTR [rbp-0x18]
  43280d:	mov    QWORD PTR [rdx+0x28],rcx
  432811:	mov    BYTE PTR [rax],0x5b
  432814:	cmp    DWORD PTR [rbp-0xc],0x0
  432818:	je     432909 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fa>
  43281e:	mov    rax,QWORD PTR [rbp-0x18]
  432822:	movzx  eax,BYTE PTR [rax+0x31]
  432826:	test   al,al
  432828:	je     43284f <flatcc_json_printer_int16_enum_vector_field@@Base+0x140>
  43282a:	mov    rax,QWORD PTR [rbp-0x18]
  43282e:	mov    rax,QWORD PTR [rax+0x28]
  432832:	lea    rcx,[rax+0x1]
  432836:	mov    rdx,QWORD PTR [rbp-0x18]
  43283a:	mov    QWORD PTR [rdx+0x28],rcx
  43283e:	mov    BYTE PTR [rax],0xa
  432841:	mov    rax,QWORD PTR [rbp-0x18]
  432845:	mov    rdi,rax
  432848:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43284d:	jmp    43285b <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
  43284f:	mov    rax,QWORD PTR [rbp-0x18]
  432853:	mov    rdi,rax
  432856:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43285b:	mov    rax,QWORD PTR [rbp-0x8]
  43285f:	mov    rdi,rax
  432862:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  432867:	movsx  ecx,ax
  43286a:	mov    rdx,QWORD PTR [rbp-0x18]
  43286e:	mov    rax,QWORD PTR [rbp-0x38]
  432872:	mov    esi,ecx
  432874:	mov    rdi,rdx
  432877:	call   rax
  432879:	mov    rax,QWORD PTR [rbp-0x8]
  43287d:	add    rax,0x2
  432881:	mov    QWORD PTR [rbp-0x8],rax
  432885:	sub    DWORD PTR [rbp-0xc],0x1
  432889:	jmp    432909 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fa>
  43288b:	mov    rax,QWORD PTR [rbp-0x18]
  43288f:	mov    rax,QWORD PTR [rax+0x28]
  432893:	lea    rcx,[rax+0x1]
  432897:	mov    rdx,QWORD PTR [rbp-0x18]
  43289b:	mov    QWORD PTR [rdx+0x28],rcx
  43289f:	mov    BYTE PTR [rax],0x2c
  4328a2:	mov    rax,QWORD PTR [rbp-0x18]
  4328a6:	movzx  eax,BYTE PTR [rax+0x31]
  4328aa:	test   al,al
  4328ac:	je     4328d3 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
  4328ae:	mov    rax,QWORD PTR [rbp-0x18]
  4328b2:	mov    rax,QWORD PTR [rax+0x28]
  4328b6:	lea    rcx,[rax+0x1]
  4328ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4328be:	mov    QWORD PTR [rdx+0x28],rcx
  4328c2:	mov    BYTE PTR [rax],0xa
  4328c5:	mov    rax,QWORD PTR [rbp-0x18]
  4328c9:	mov    rdi,rax
  4328cc:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4328d1:	jmp    4328df <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d0>
  4328d3:	mov    rax,QWORD PTR [rbp-0x18]
  4328d7:	mov    rdi,rax
  4328da:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4328df:	mov    rax,QWORD PTR [rbp-0x8]
  4328e3:	mov    rdi,rax
  4328e6:	call   4293d9 <flatcc_json_parser_struct_as_root@@Base+0x230>
  4328eb:	movsx  ecx,ax
  4328ee:	mov    rdx,QWORD PTR [rbp-0x18]
  4328f2:	mov    rax,QWORD PTR [rbp-0x38]
  4328f6:	mov    esi,ecx
  4328f8:	mov    rdi,rdx
  4328fb:	call   rax
  4328fd:	mov    rax,QWORD PTR [rbp-0x8]
  432901:	add    rax,0x2
  432905:	mov    QWORD PTR [rbp-0x8],rax
  432909:	mov    eax,DWORD PTR [rbp-0xc]
  43290c:	lea    edx,[rax-0x1]
  43290f:	mov    DWORD PTR [rbp-0xc],edx
  432912:	test   eax,eax
  432914:	jne    43288b <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
  43291a:	mov    rax,QWORD PTR [rbp-0x18]
  43291e:	movzx  eax,BYTE PTR [rax+0x31]
  432922:	test   al,al
  432924:	je     43295a <flatcc_json_printer_int16_enum_vector_field@@Base+0x24b>
  432926:	mov    rax,QWORD PTR [rbp-0x18]
  43292a:	mov    rax,QWORD PTR [rax+0x28]
  43292e:	lea    rcx,[rax+0x1]
  432932:	mov    rdx,QWORD PTR [rbp-0x18]
  432936:	mov    QWORD PTR [rdx+0x28],rcx
  43293a:	mov    BYTE PTR [rax],0xa
  43293d:	mov    rax,QWORD PTR [rbp-0x18]
  432941:	mov    eax,DWORD PTR [rax+0x38]
  432944:	lea    edx,[rax-0x1]
  432947:	mov    rax,QWORD PTR [rbp-0x18]
  43294b:	mov    DWORD PTR [rax+0x38],edx
  43294e:	mov    rax,QWORD PTR [rbp-0x18]
  432952:	mov    rdi,rax
  432955:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43295a:	mov    rax,QWORD PTR [rbp-0x18]
  43295e:	mov    rax,QWORD PTR [rax+0x28]
  432962:	lea    rcx,[rax+0x1]
  432966:	mov    rdx,QWORD PTR [rbp-0x18]
  43296a:	mov    QWORD PTR [rdx+0x28],rcx
  43296e:	mov    BYTE PTR [rax],0x5d
  432971:	leave  
  432972:	ret    

0000000000432973 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  432973:	push   rbp
  432974:	mov    rbp,rsp
  432977:	sub    rsp,0x40
  43297b:	mov    QWORD PTR [rbp-0x18],rdi
  43297f:	mov    QWORD PTR [rbp-0x20],rsi
  432983:	mov    DWORD PTR [rbp-0x24],edx
  432986:	mov    QWORD PTR [rbp-0x30],rcx
  43298a:	mov    DWORD PTR [rbp-0x28],r8d
  43298e:	mov    QWORD PTR [rbp-0x38],r9
  432992:	mov    rax,QWORD PTR [rbp-0x18]
  432996:	movzx  eax,BYTE PTR [rax+0x33]
  43299a:	test   al,al
  43299c:	je     4329c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x4d>
  43299e:	mov    edi,DWORD PTR [rbp-0x28]
  4329a1:	mov    rcx,QWORD PTR [rbp-0x30]
  4329a5:	mov    edx,DWORD PTR [rbp-0x24]
  4329a8:	mov    rsi,QWORD PTR [rbp-0x20]
  4329ac:	mov    rax,QWORD PTR [rbp-0x18]
  4329b0:	mov    r8d,edi
  4329b3:	mov    rdi,rax
  4329b6:	call   430c93 <flatcc_json_printer_int32_vector_field@@Base>
  4329bb:	jmp    432bd3 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
  4329c0:	mov    edx,DWORD PTR [rbp-0x24]
  4329c3:	mov    rax,QWORD PTR [rbp-0x20]
  4329c7:	mov    esi,edx
  4329c9:	mov    rdi,rax
  4329cc:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4329d1:	mov    QWORD PTR [rbp-0x8],rax
  4329d5:	cmp    QWORD PTR [rbp-0x8],0x0
  4329da:	je     432bd3 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
  4329e0:	mov    rax,QWORD PTR [rbp-0x20]
  4329e4:	mov    eax,DWORD PTR [rax+0x18]
  4329e7:	lea    ecx,[rax+0x1]
  4329ea:	mov    rdx,QWORD PTR [rbp-0x20]
  4329ee:	mov    DWORD PTR [rdx+0x18],ecx
  4329f1:	test   eax,eax
  4329f3:	je     432a0c <flatcc_json_printer_int32_enum_vector_field@@Base+0x99>
  4329f5:	mov    rax,QWORD PTR [rbp-0x18]
  4329f9:	mov    rax,QWORD PTR [rax+0x28]
  4329fd:	lea    rcx,[rax+0x1]
  432a01:	mov    rdx,QWORD PTR [rbp-0x18]
  432a05:	mov    QWORD PTR [rdx+0x28],rcx
  432a09:	mov    BYTE PTR [rax],0x2c
  432a0c:	mov    rax,QWORD PTR [rbp-0x8]
  432a10:	mov    rdi,rax
  432a13:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  432a18:	mov    QWORD PTR [rbp-0x8],rax
  432a1c:	mov    rax,QWORD PTR [rbp-0x8]
  432a20:	mov    rdi,rax
  432a23:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432a28:	mov    DWORD PTR [rbp-0xc],eax
  432a2b:	mov    rax,QWORD PTR [rbp-0x8]
  432a2f:	add    rax,0x4
  432a33:	mov    QWORD PTR [rbp-0x8],rax
  432a37:	mov    eax,DWORD PTR [rbp-0x28]
  432a3a:	movsxd rdx,eax
  432a3d:	mov    rcx,QWORD PTR [rbp-0x30]
  432a41:	mov    rax,QWORD PTR [rbp-0x18]
  432a45:	mov    rsi,rcx
  432a48:	mov    rdi,rax
  432a4b:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  432a50:	mov    rax,QWORD PTR [rbp-0x18]
  432a54:	mov    eax,DWORD PTR [rax+0x38]
  432a57:	lea    edx,[rax+0x1]
  432a5a:	mov    rax,QWORD PTR [rbp-0x18]
  432a5e:	mov    DWORD PTR [rax+0x38],edx
  432a61:	mov    rax,QWORD PTR [rbp-0x18]
  432a65:	mov    rax,QWORD PTR [rax+0x28]
  432a69:	lea    rcx,[rax+0x1]
  432a6d:	mov    rdx,QWORD PTR [rbp-0x18]
  432a71:	mov    QWORD PTR [rdx+0x28],rcx
  432a75:	mov    BYTE PTR [rax],0x5b
  432a78:	cmp    DWORD PTR [rbp-0xc],0x0
  432a7c:	je     432b6b <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
  432a82:	mov    rax,QWORD PTR [rbp-0x18]
  432a86:	movzx  eax,BYTE PTR [rax+0x31]
  432a8a:	test   al,al
  432a8c:	je     432ab3 <flatcc_json_printer_int32_enum_vector_field@@Base+0x140>
  432a8e:	mov    rax,QWORD PTR [rbp-0x18]
  432a92:	mov    rax,QWORD PTR [rax+0x28]
  432a96:	lea    rcx,[rax+0x1]
  432a9a:	mov    rdx,QWORD PTR [rbp-0x18]
  432a9e:	mov    QWORD PTR [rdx+0x28],rcx
  432aa2:	mov    BYTE PTR [rax],0xa
  432aa5:	mov    rax,QWORD PTR [rbp-0x18]
  432aa9:	mov    rdi,rax
  432aac:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432ab1:	jmp    432abf <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
  432ab3:	mov    rax,QWORD PTR [rbp-0x18]
  432ab7:	mov    rdi,rax
  432aba:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432abf:	mov    rax,QWORD PTR [rbp-0x8]
  432ac3:	mov    rdi,rax
  432ac6:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  432acb:	mov    ecx,eax
  432acd:	mov    rdx,QWORD PTR [rbp-0x18]
  432ad1:	mov    rax,QWORD PTR [rbp-0x38]
  432ad5:	mov    esi,ecx
  432ad7:	mov    rdi,rdx
  432ada:	call   rax
  432adc:	mov    rax,QWORD PTR [rbp-0x8]
  432ae0:	add    rax,0x4
  432ae4:	mov    QWORD PTR [rbp-0x8],rax
  432ae8:	sub    DWORD PTR [rbp-0xc],0x1
  432aec:	jmp    432b6b <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
  432aee:	mov    rax,QWORD PTR [rbp-0x18]
  432af2:	mov    rax,QWORD PTR [rax+0x28]
  432af6:	lea    rcx,[rax+0x1]
  432afa:	mov    rdx,QWORD PTR [rbp-0x18]
  432afe:	mov    QWORD PTR [rdx+0x28],rcx
  432b02:	mov    BYTE PTR [rax],0x2c
  432b05:	mov    rax,QWORD PTR [rbp-0x18]
  432b09:	movzx  eax,BYTE PTR [rax+0x31]
  432b0d:	test   al,al
  432b0f:	je     432b36 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c3>
  432b11:	mov    rax,QWORD PTR [rbp-0x18]
  432b15:	mov    rax,QWORD PTR [rax+0x28]
  432b19:	lea    rcx,[rax+0x1]
  432b1d:	mov    rdx,QWORD PTR [rbp-0x18]
  432b21:	mov    QWORD PTR [rdx+0x28],rcx
  432b25:	mov    BYTE PTR [rax],0xa
  432b28:	mov    rax,QWORD PTR [rbp-0x18]
  432b2c:	mov    rdi,rax
  432b2f:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432b34:	jmp    432b42 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cf>
  432b36:	mov    rax,QWORD PTR [rbp-0x18]
  432b3a:	mov    rdi,rax
  432b3d:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432b42:	mov    rax,QWORD PTR [rbp-0x8]
  432b46:	mov    rdi,rax
  432b49:	call   429402 <flatcc_json_parser_struct_as_root@@Base+0x259>
  432b4e:	mov    ecx,eax
  432b50:	mov    rdx,QWORD PTR [rbp-0x18]
  432b54:	mov    rax,QWORD PTR [rbp-0x38]
  432b58:	mov    esi,ecx
  432b5a:	mov    rdi,rdx
  432b5d:	call   rax
  432b5f:	mov    rax,QWORD PTR [rbp-0x8]
  432b63:	add    rax,0x4
  432b67:	mov    QWORD PTR [rbp-0x8],rax
  432b6b:	mov    eax,DWORD PTR [rbp-0xc]
  432b6e:	lea    edx,[rax-0x1]
  432b71:	mov    DWORD PTR [rbp-0xc],edx
  432b74:	test   eax,eax
  432b76:	jne    432aee <flatcc_json_printer_int32_enum_vector_field@@Base+0x17b>
  432b7c:	mov    rax,QWORD PTR [rbp-0x18]
  432b80:	movzx  eax,BYTE PTR [rax+0x31]
  432b84:	test   al,al
  432b86:	je     432bbc <flatcc_json_printer_int32_enum_vector_field@@Base+0x249>
  432b88:	mov    rax,QWORD PTR [rbp-0x18]
  432b8c:	mov    rax,QWORD PTR [rax+0x28]
  432b90:	lea    rcx,[rax+0x1]
  432b94:	mov    rdx,QWORD PTR [rbp-0x18]
  432b98:	mov    QWORD PTR [rdx+0x28],rcx
  432b9c:	mov    BYTE PTR [rax],0xa
  432b9f:	mov    rax,QWORD PTR [rbp-0x18]
  432ba3:	mov    eax,DWORD PTR [rax+0x38]
  432ba6:	lea    edx,[rax-0x1]
  432ba9:	mov    rax,QWORD PTR [rbp-0x18]
  432bad:	mov    DWORD PTR [rax+0x38],edx
  432bb0:	mov    rax,QWORD PTR [rbp-0x18]
  432bb4:	mov    rdi,rax
  432bb7:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432bbc:	mov    rax,QWORD PTR [rbp-0x18]
  432bc0:	mov    rax,QWORD PTR [rax+0x28]
  432bc4:	lea    rcx,[rax+0x1]
  432bc8:	mov    rdx,QWORD PTR [rbp-0x18]
  432bcc:	mov    QWORD PTR [rdx+0x28],rcx
  432bd0:	mov    BYTE PTR [rax],0x5d
  432bd3:	leave  
  432bd4:	ret    

0000000000432bd5 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  432bd5:	push   rbp
  432bd6:	mov    rbp,rsp
  432bd9:	sub    rsp,0x40
  432bdd:	mov    QWORD PTR [rbp-0x18],rdi
  432be1:	mov    QWORD PTR [rbp-0x20],rsi
  432be5:	mov    DWORD PTR [rbp-0x24],edx
  432be8:	mov    QWORD PTR [rbp-0x30],rcx
  432bec:	mov    DWORD PTR [rbp-0x28],r8d
  432bf0:	mov    QWORD PTR [rbp-0x38],r9
  432bf4:	mov    rax,QWORD PTR [rbp-0x18]
  432bf8:	movzx  eax,BYTE PTR [rax+0x33]
  432bfc:	test   al,al
  432bfe:	je     432c22 <flatcc_json_printer_int64_enum_vector_field@@Base+0x4d>
  432c00:	mov    edi,DWORD PTR [rbp-0x28]
  432c03:	mov    rcx,QWORD PTR [rbp-0x30]
  432c07:	mov    edx,DWORD PTR [rbp-0x24]
  432c0a:	mov    rsi,QWORD PTR [rbp-0x20]
  432c0e:	mov    rax,QWORD PTR [rbp-0x18]
  432c12:	mov    r8d,edi
  432c15:	mov    rdi,rax
  432c18:	call   430eff <flatcc_json_printer_int64_vector_field@@Base>
  432c1d:	jmp    432e39 <flatcc_json_printer_int64_enum_vector_field@@Base+0x264>
  432c22:	mov    edx,DWORD PTR [rbp-0x24]
  432c25:	mov    rax,QWORD PTR [rbp-0x20]
  432c29:	mov    esi,edx
  432c2b:	mov    rdi,rax
  432c2e:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  432c33:	mov    QWORD PTR [rbp-0x8],rax
  432c37:	cmp    QWORD PTR [rbp-0x8],0x0
  432c3c:	je     432e39 <flatcc_json_printer_int64_enum_vector_field@@Base+0x264>
  432c42:	mov    rax,QWORD PTR [rbp-0x20]
  432c46:	mov    eax,DWORD PTR [rax+0x18]
  432c49:	lea    ecx,[rax+0x1]
  432c4c:	mov    rdx,QWORD PTR [rbp-0x20]
  432c50:	mov    DWORD PTR [rdx+0x18],ecx
  432c53:	test   eax,eax
  432c55:	je     432c6e <flatcc_json_printer_int64_enum_vector_field@@Base+0x99>
  432c57:	mov    rax,QWORD PTR [rbp-0x18]
  432c5b:	mov    rax,QWORD PTR [rax+0x28]
  432c5f:	lea    rcx,[rax+0x1]
  432c63:	mov    rdx,QWORD PTR [rbp-0x18]
  432c67:	mov    QWORD PTR [rdx+0x28],rcx
  432c6b:	mov    BYTE PTR [rax],0x2c
  432c6e:	mov    rax,QWORD PTR [rbp-0x8]
  432c72:	mov    rdi,rax
  432c75:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  432c7a:	mov    QWORD PTR [rbp-0x8],rax
  432c7e:	mov    rax,QWORD PTR [rbp-0x8]
  432c82:	mov    rdi,rax
  432c85:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432c8a:	mov    DWORD PTR [rbp-0xc],eax
  432c8d:	mov    rax,QWORD PTR [rbp-0x8]
  432c91:	add    rax,0x4
  432c95:	mov    QWORD PTR [rbp-0x8],rax
  432c99:	mov    eax,DWORD PTR [rbp-0x28]
  432c9c:	movsxd rdx,eax
  432c9f:	mov    rcx,QWORD PTR [rbp-0x30]
  432ca3:	mov    rax,QWORD PTR [rbp-0x18]
  432ca7:	mov    rsi,rcx
  432caa:	mov    rdi,rax
  432cad:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  432cb2:	mov    rax,QWORD PTR [rbp-0x18]
  432cb6:	mov    eax,DWORD PTR [rax+0x38]
  432cb9:	lea    edx,[rax+0x1]
  432cbc:	mov    rax,QWORD PTR [rbp-0x18]
  432cc0:	mov    DWORD PTR [rax+0x38],edx
  432cc3:	mov    rax,QWORD PTR [rbp-0x18]
  432cc7:	mov    rax,QWORD PTR [rax+0x28]
  432ccb:	lea    rcx,[rax+0x1]
  432ccf:	mov    rdx,QWORD PTR [rbp-0x18]
  432cd3:	mov    QWORD PTR [rdx+0x28],rcx
  432cd7:	mov    BYTE PTR [rax],0x5b
  432cda:	cmp    DWORD PTR [rbp-0xc],0x0
  432cde:	je     432dd1 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1fc>
  432ce4:	mov    rax,QWORD PTR [rbp-0x18]
  432ce8:	movzx  eax,BYTE PTR [rax+0x31]
  432cec:	test   al,al
  432cee:	je     432d15 <flatcc_json_printer_int64_enum_vector_field@@Base+0x140>
  432cf0:	mov    rax,QWORD PTR [rbp-0x18]
  432cf4:	mov    rax,QWORD PTR [rax+0x28]
  432cf8:	lea    rcx,[rax+0x1]
  432cfc:	mov    rdx,QWORD PTR [rbp-0x18]
  432d00:	mov    QWORD PTR [rdx+0x28],rcx
  432d04:	mov    BYTE PTR [rax],0xa
  432d07:	mov    rax,QWORD PTR [rbp-0x18]
  432d0b:	mov    rdi,rax
  432d0e:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432d13:	jmp    432d21 <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
  432d15:	mov    rax,QWORD PTR [rbp-0x18]
  432d19:	mov    rdi,rax
  432d1c:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432d21:	mov    rax,QWORD PTR [rbp-0x8]
  432d25:	mov    rdi,rax
  432d28:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  432d2d:	mov    rcx,rax
  432d30:	mov    rdx,QWORD PTR [rbp-0x18]
  432d34:	mov    rax,QWORD PTR [rbp-0x38]
  432d38:	mov    rsi,rcx
  432d3b:	mov    rdi,rdx
  432d3e:	call   rax
  432d40:	mov    rax,QWORD PTR [rbp-0x8]
  432d44:	add    rax,0x8
  432d48:	mov    QWORD PTR [rbp-0x8],rax
  432d4c:	sub    DWORD PTR [rbp-0xc],0x1
  432d50:	jmp    432dd1 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1fc>
  432d52:	mov    rax,QWORD PTR [rbp-0x18]
  432d56:	mov    rax,QWORD PTR [rax+0x28]
  432d5a:	lea    rcx,[rax+0x1]
  432d5e:	mov    rdx,QWORD PTR [rbp-0x18]
  432d62:	mov    QWORD PTR [rdx+0x28],rcx
  432d66:	mov    BYTE PTR [rax],0x2c
  432d69:	mov    rax,QWORD PTR [rbp-0x18]
  432d6d:	movzx  eax,BYTE PTR [rax+0x31]
  432d71:	test   al,al
  432d73:	je     432d9a <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c5>
  432d75:	mov    rax,QWORD PTR [rbp-0x18]
  432d79:	mov    rax,QWORD PTR [rax+0x28]
  432d7d:	lea    rcx,[rax+0x1]
  432d81:	mov    rdx,QWORD PTR [rbp-0x18]
  432d85:	mov    QWORD PTR [rdx+0x28],rcx
  432d89:	mov    BYTE PTR [rax],0xa
  432d8c:	mov    rax,QWORD PTR [rbp-0x18]
  432d90:	mov    rdi,rax
  432d93:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432d98:	jmp    432da6 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d1>
  432d9a:	mov    rax,QWORD PTR [rbp-0x18]
  432d9e:	mov    rdi,rax
  432da1:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432da6:	mov    rax,QWORD PTR [rbp-0x8]
  432daa:	mov    rdi,rax
  432dad:	call   42942b <flatcc_json_parser_struct_as_root@@Base+0x282>
  432db2:	mov    rcx,rax
  432db5:	mov    rdx,QWORD PTR [rbp-0x18]
  432db9:	mov    rax,QWORD PTR [rbp-0x38]
  432dbd:	mov    rsi,rcx
  432dc0:	mov    rdi,rdx
  432dc3:	call   rax
  432dc5:	mov    rax,QWORD PTR [rbp-0x8]
  432dc9:	add    rax,0x8
  432dcd:	mov    QWORD PTR [rbp-0x8],rax
  432dd1:	mov    eax,DWORD PTR [rbp-0xc]
  432dd4:	lea    edx,[rax-0x1]
  432dd7:	mov    DWORD PTR [rbp-0xc],edx
  432dda:	test   eax,eax
  432ddc:	jne    432d52 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17d>
  432de2:	mov    rax,QWORD PTR [rbp-0x18]
  432de6:	movzx  eax,BYTE PTR [rax+0x31]
  432dea:	test   al,al
  432dec:	je     432e22 <flatcc_json_printer_int64_enum_vector_field@@Base+0x24d>
  432dee:	mov    rax,QWORD PTR [rbp-0x18]
  432df2:	mov    rax,QWORD PTR [rax+0x28]
  432df6:	lea    rcx,[rax+0x1]
  432dfa:	mov    rdx,QWORD PTR [rbp-0x18]
  432dfe:	mov    QWORD PTR [rdx+0x28],rcx
  432e02:	mov    BYTE PTR [rax],0xa
  432e05:	mov    rax,QWORD PTR [rbp-0x18]
  432e09:	mov    eax,DWORD PTR [rax+0x38]
  432e0c:	lea    edx,[rax-0x1]
  432e0f:	mov    rax,QWORD PTR [rbp-0x18]
  432e13:	mov    DWORD PTR [rax+0x38],edx
  432e16:	mov    rax,QWORD PTR [rbp-0x18]
  432e1a:	mov    rdi,rax
  432e1d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432e22:	mov    rax,QWORD PTR [rbp-0x18]
  432e26:	mov    rax,QWORD PTR [rax+0x28]
  432e2a:	lea    rcx,[rax+0x1]
  432e2e:	mov    rdx,QWORD PTR [rbp-0x18]
  432e32:	mov    QWORD PTR [rdx+0x28],rcx
  432e36:	mov    BYTE PTR [rax],0x5d
  432e39:	leave  
  432e3a:	ret    

0000000000432e3b <flatcc_json_printer_bool_enum_vector_field@@Base>:
  432e3b:	push   rbp
  432e3c:	mov    rbp,rsp
  432e3f:	sub    rsp,0x40
  432e43:	mov    QWORD PTR [rbp-0x18],rdi
  432e47:	mov    QWORD PTR [rbp-0x20],rsi
  432e4b:	mov    DWORD PTR [rbp-0x24],edx
  432e4e:	mov    QWORD PTR [rbp-0x30],rcx
  432e52:	mov    DWORD PTR [rbp-0x28],r8d
  432e56:	mov    QWORD PTR [rbp-0x38],r9
  432e5a:	mov    rax,QWORD PTR [rbp-0x18]
  432e5e:	movzx  eax,BYTE PTR [rax+0x33]
  432e62:	test   al,al
  432e64:	je     432e88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x4d>
  432e66:	mov    edi,DWORD PTR [rbp-0x28]
  432e69:	mov    rcx,QWORD PTR [rbp-0x30]
  432e6d:	mov    edx,DWORD PTR [rbp-0x24]
  432e70:	mov    rsi,QWORD PTR [rbp-0x20]
  432e74:	mov    rax,QWORD PTR [rbp-0x18]
  432e78:	mov    r8d,edi
  432e7b:	mov    rdi,rax
  432e7e:	call   43116d <flatcc_json_printer_bool_vector_field@@Base>
  432e83:	jmp    43309d <flatcc_json_printer_bool_enum_vector_field@@Base+0x262>
  432e88:	mov    edx,DWORD PTR [rbp-0x24]
  432e8b:	mov    rax,QWORD PTR [rbp-0x20]
  432e8f:	mov    esi,edx
  432e91:	mov    rdi,rax
  432e94:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  432e99:	mov    QWORD PTR [rbp-0x8],rax
  432e9d:	cmp    QWORD PTR [rbp-0x8],0x0
  432ea2:	je     43309d <flatcc_json_printer_bool_enum_vector_field@@Base+0x262>
  432ea8:	mov    rax,QWORD PTR [rbp-0x20]
  432eac:	mov    eax,DWORD PTR [rax+0x18]
  432eaf:	lea    ecx,[rax+0x1]
  432eb2:	mov    rdx,QWORD PTR [rbp-0x20]
  432eb6:	mov    DWORD PTR [rdx+0x18],ecx
  432eb9:	test   eax,eax
  432ebb:	je     432ed4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x99>
  432ebd:	mov    rax,QWORD PTR [rbp-0x18]
  432ec1:	mov    rax,QWORD PTR [rax+0x28]
  432ec5:	lea    rcx,[rax+0x1]
  432ec9:	mov    rdx,QWORD PTR [rbp-0x18]
  432ecd:	mov    QWORD PTR [rdx+0x28],rcx
  432ed1:	mov    BYTE PTR [rax],0x2c
  432ed4:	mov    rax,QWORD PTR [rbp-0x8]
  432ed8:	mov    rdi,rax
  432edb:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  432ee0:	mov    QWORD PTR [rbp-0x8],rax
  432ee4:	mov    rax,QWORD PTR [rbp-0x8]
  432ee8:	mov    rdi,rax
  432eeb:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432ef0:	mov    DWORD PTR [rbp-0xc],eax
  432ef3:	mov    rax,QWORD PTR [rbp-0x8]
  432ef7:	add    rax,0x4
  432efb:	mov    QWORD PTR [rbp-0x8],rax
  432eff:	mov    eax,DWORD PTR [rbp-0x28]
  432f02:	movsxd rdx,eax
  432f05:	mov    rcx,QWORD PTR [rbp-0x30]
  432f09:	mov    rax,QWORD PTR [rbp-0x18]
  432f0d:	mov    rsi,rcx
  432f10:	mov    rdi,rax
  432f13:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  432f18:	mov    rax,QWORD PTR [rbp-0x18]
  432f1c:	mov    eax,DWORD PTR [rax+0x38]
  432f1f:	lea    edx,[rax+0x1]
  432f22:	mov    rax,QWORD PTR [rbp-0x18]
  432f26:	mov    DWORD PTR [rax+0x38],edx
  432f29:	mov    rax,QWORD PTR [rbp-0x18]
  432f2d:	mov    rax,QWORD PTR [rax+0x28]
  432f31:	lea    rcx,[rax+0x1]
  432f35:	mov    rdx,QWORD PTR [rbp-0x18]
  432f39:	mov    QWORD PTR [rdx+0x28],rcx
  432f3d:	mov    BYTE PTR [rax],0x5b
  432f40:	cmp    DWORD PTR [rbp-0xc],0x0
  432f44:	je     433035 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fa>
  432f4a:	mov    rax,QWORD PTR [rbp-0x18]
  432f4e:	movzx  eax,BYTE PTR [rax+0x31]
  432f52:	test   al,al
  432f54:	je     432f7b <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
  432f56:	mov    rax,QWORD PTR [rbp-0x18]
  432f5a:	mov    rax,QWORD PTR [rax+0x28]
  432f5e:	lea    rcx,[rax+0x1]
  432f62:	mov    rdx,QWORD PTR [rbp-0x18]
  432f66:	mov    QWORD PTR [rdx+0x28],rcx
  432f6a:	mov    BYTE PTR [rax],0xa
  432f6d:	mov    rax,QWORD PTR [rbp-0x18]
  432f71:	mov    rdi,rax
  432f74:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432f79:	jmp    432f87 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
  432f7b:	mov    rax,QWORD PTR [rbp-0x18]
  432f7f:	mov    rdi,rax
  432f82:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  432f87:	mov    rax,QWORD PTR [rbp-0x8]
  432f8b:	mov    rdi,rax
  432f8e:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  432f93:	movzx  ecx,al
  432f96:	mov    rdx,QWORD PTR [rbp-0x18]
  432f9a:	mov    rax,QWORD PTR [rbp-0x38]
  432f9e:	mov    esi,ecx
  432fa0:	mov    rdi,rdx
  432fa3:	call   rax
  432fa5:	mov    rax,QWORD PTR [rbp-0x8]
  432fa9:	add    rax,0x1
  432fad:	mov    QWORD PTR [rbp-0x8],rax
  432fb1:	sub    DWORD PTR [rbp-0xc],0x1
  432fb5:	jmp    433035 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fa>
  432fb7:	mov    rax,QWORD PTR [rbp-0x18]
  432fbb:	mov    rax,QWORD PTR [rax+0x28]
  432fbf:	lea    rcx,[rax+0x1]
  432fc3:	mov    rdx,QWORD PTR [rbp-0x18]
  432fc7:	mov    QWORD PTR [rdx+0x28],rcx
  432fcb:	mov    BYTE PTR [rax],0x2c
  432fce:	mov    rax,QWORD PTR [rbp-0x18]
  432fd2:	movzx  eax,BYTE PTR [rax+0x31]
  432fd6:	test   al,al
  432fd8:	je     432fff <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c4>
  432fda:	mov    rax,QWORD PTR [rbp-0x18]
  432fde:	mov    rax,QWORD PTR [rax+0x28]
  432fe2:	lea    rcx,[rax+0x1]
  432fe6:	mov    rdx,QWORD PTR [rbp-0x18]
  432fea:	mov    QWORD PTR [rdx+0x28],rcx
  432fee:	mov    BYTE PTR [rax],0xa
  432ff1:	mov    rax,QWORD PTR [rbp-0x18]
  432ff5:	mov    rdi,rax
  432ff8:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432ffd:	jmp    43300b <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
  432fff:	mov    rax,QWORD PTR [rbp-0x18]
  433003:	mov    rdi,rax
  433006:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43300b:	mov    rax,QWORD PTR [rbp-0x8]
  43300f:	mov    rdi,rax
  433012:	call   4294eb <flatcc_json_parser_struct_as_root@@Base+0x342>
  433017:	movzx  ecx,al
  43301a:	mov    rdx,QWORD PTR [rbp-0x18]
  43301e:	mov    rax,QWORD PTR [rbp-0x38]
  433022:	mov    esi,ecx
  433024:	mov    rdi,rdx
  433027:	call   rax
  433029:	mov    rax,QWORD PTR [rbp-0x8]
  43302d:	add    rax,0x1
  433031:	mov    QWORD PTR [rbp-0x8],rax
  433035:	mov    eax,DWORD PTR [rbp-0xc]
  433038:	lea    edx,[rax-0x1]
  43303b:	mov    DWORD PTR [rbp-0xc],edx
  43303e:	test   eax,eax
  433040:	jne    432fb7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
  433046:	mov    rax,QWORD PTR [rbp-0x18]
  43304a:	movzx  eax,BYTE PTR [rax+0x31]
  43304e:	test   al,al
  433050:	je     433086 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24b>
  433052:	mov    rax,QWORD PTR [rbp-0x18]
  433056:	mov    rax,QWORD PTR [rax+0x28]
  43305a:	lea    rcx,[rax+0x1]
  43305e:	mov    rdx,QWORD PTR [rbp-0x18]
  433062:	mov    QWORD PTR [rdx+0x28],rcx
  433066:	mov    BYTE PTR [rax],0xa
  433069:	mov    rax,QWORD PTR [rbp-0x18]
  43306d:	mov    eax,DWORD PTR [rax+0x38]
  433070:	lea    edx,[rax-0x1]
  433073:	mov    rax,QWORD PTR [rbp-0x18]
  433077:	mov    DWORD PTR [rax+0x38],edx
  43307a:	mov    rax,QWORD PTR [rbp-0x18]
  43307e:	mov    rdi,rax
  433081:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433086:	mov    rax,QWORD PTR [rbp-0x18]
  43308a:	mov    rax,QWORD PTR [rax+0x28]
  43308e:	lea    rcx,[rax+0x1]
  433092:	mov    rdx,QWORD PTR [rbp-0x18]
  433096:	mov    QWORD PTR [rdx+0x28],rcx
  43309a:	mov    BYTE PTR [rax],0x5d
  43309d:	leave  
  43309e:	ret    

000000000043309f <flatcc_json_printer_struct_vector_field@@Base>:
  43309f:	push   rbp
  4330a0:	mov    rbp,rsp
  4330a3:	sub    rsp,0x40
  4330a7:	mov    QWORD PTR [rbp-0x18],rdi
  4330ab:	mov    QWORD PTR [rbp-0x20],rsi
  4330af:	mov    DWORD PTR [rbp-0x24],edx
  4330b2:	mov    QWORD PTR [rbp-0x30],rcx
  4330b6:	mov    DWORD PTR [rbp-0x28],r8d
  4330ba:	mov    QWORD PTR [rbp-0x38],r9
  4330be:	mov    edx,DWORD PTR [rbp-0x24]
  4330c1:	mov    rax,QWORD PTR [rbp-0x20]
  4330c5:	mov    esi,edx
  4330c7:	mov    rdi,rax
  4330ca:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4330cf:	mov    QWORD PTR [rbp-0x8],rax
  4330d3:	cmp    QWORD PTR [rbp-0x8],0x0
  4330d8:	je     4333a9 <flatcc_json_printer_struct_vector_field@@Base+0x30a>
  4330de:	mov    rax,QWORD PTR [rbp-0x20]
  4330e2:	mov    eax,DWORD PTR [rax+0x18]
  4330e5:	lea    ecx,[rax+0x1]
  4330e8:	mov    rdx,QWORD PTR [rbp-0x20]
  4330ec:	mov    DWORD PTR [rdx+0x18],ecx
  4330ef:	test   eax,eax
  4330f1:	je     43310a <flatcc_json_printer_struct_vector_field@@Base+0x6b>
  4330f3:	mov    rax,QWORD PTR [rbp-0x18]
  4330f7:	mov    rax,QWORD PTR [rax+0x28]
  4330fb:	lea    rcx,[rax+0x1]
  4330ff:	mov    rdx,QWORD PTR [rbp-0x18]
  433103:	mov    QWORD PTR [rdx+0x28],rcx
  433107:	mov    BYTE PTR [rax],0x2c
  43310a:	mov    rax,QWORD PTR [rbp-0x8]
  43310e:	mov    rdi,rax
  433111:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  433116:	mov    QWORD PTR [rbp-0x8],rax
  43311a:	mov    rax,QWORD PTR [rbp-0x8]
  43311e:	mov    rdi,rax
  433121:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  433126:	mov    DWORD PTR [rbp-0xc],eax
  433129:	add    QWORD PTR [rbp-0x8],0x4
  43312e:	mov    eax,DWORD PTR [rbp-0x28]
  433131:	movsxd rdx,eax
  433134:	mov    rcx,QWORD PTR [rbp-0x30]
  433138:	mov    rax,QWORD PTR [rbp-0x18]
  43313c:	mov    rsi,rcx
  43313f:	mov    rdi,rax
  433142:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  433147:	mov    rax,QWORD PTR [rbp-0x18]
  43314b:	mov    eax,DWORD PTR [rax+0x38]
  43314e:	lea    edx,[rax+0x1]
  433151:	mov    rax,QWORD PTR [rbp-0x18]
  433155:	mov    DWORD PTR [rax+0x38],edx
  433158:	mov    rax,QWORD PTR [rbp-0x18]
  43315c:	mov    rax,QWORD PTR [rax+0x28]
  433160:	lea    rcx,[rax+0x1]
  433164:	mov    rdx,QWORD PTR [rbp-0x18]
  433168:	mov    QWORD PTR [rdx+0x28],rcx
  43316c:	mov    BYTE PTR [rax],0x5b
  43316f:	cmp    DWORD PTR [rbp-0xc],0x0
  433173:	je     433341 <flatcc_json_printer_struct_vector_field@@Base+0x2a2>
  433179:	mov    rax,QWORD PTR [rbp-0x18]
  43317d:	movzx  eax,BYTE PTR [rax+0x31]
  433181:	test   al,al
  433183:	je     4331aa <flatcc_json_printer_struct_vector_field@@Base+0x10b>
  433185:	mov    rax,QWORD PTR [rbp-0x18]
  433189:	mov    rax,QWORD PTR [rax+0x28]
  43318d:	lea    rcx,[rax+0x1]
  433191:	mov    rdx,QWORD PTR [rbp-0x18]
  433195:	mov    QWORD PTR [rdx+0x28],rcx
  433199:	mov    BYTE PTR [rax],0xa
  43319c:	mov    rax,QWORD PTR [rbp-0x18]
  4331a0:	mov    rdi,rax
  4331a3:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4331a8:	jmp    4331b6 <flatcc_json_printer_struct_vector_field@@Base+0x117>
  4331aa:	mov    rax,QWORD PTR [rbp-0x18]
  4331ae:	mov    rdi,rax
  4331b1:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4331b6:	mov    rax,QWORD PTR [rbp-0x18]
  4331ba:	mov    eax,DWORD PTR [rax+0x38]
  4331bd:	lea    edx,[rax+0x1]
  4331c0:	mov    rax,QWORD PTR [rbp-0x18]
  4331c4:	mov    DWORD PTR [rax+0x38],edx
  4331c7:	mov    rax,QWORD PTR [rbp-0x18]
  4331cb:	mov    rax,QWORD PTR [rax+0x28]
  4331cf:	lea    rcx,[rax+0x1]
  4331d3:	mov    rdx,QWORD PTR [rbp-0x18]
  4331d7:	mov    QWORD PTR [rdx+0x28],rcx
  4331db:	mov    BYTE PTR [rax],0x7b
  4331de:	mov    rcx,QWORD PTR [rbp-0x8]
  4331e2:	mov    rdx,QWORD PTR [rbp-0x18]
  4331e6:	mov    rax,QWORD PTR [rbp+0x10]
  4331ea:	mov    rsi,rcx
  4331ed:	mov    rdi,rdx
  4331f0:	call   rax
  4331f2:	mov    rax,QWORD PTR [rbp-0x18]
  4331f6:	movzx  eax,BYTE PTR [rax+0x31]
  4331fa:	test   al,al
  4331fc:	je     433232 <flatcc_json_printer_struct_vector_field@@Base+0x193>
  4331fe:	mov    rax,QWORD PTR [rbp-0x18]
  433202:	mov    rax,QWORD PTR [rax+0x28]
  433206:	lea    rcx,[rax+0x1]
  43320a:	mov    rdx,QWORD PTR [rbp-0x18]
  43320e:	mov    QWORD PTR [rdx+0x28],rcx
  433212:	mov    BYTE PTR [rax],0xa
  433215:	mov    rax,QWORD PTR [rbp-0x18]
  433219:	mov    eax,DWORD PTR [rax+0x38]
  43321c:	lea    edx,[rax-0x1]
  43321f:	mov    rax,QWORD PTR [rbp-0x18]
  433223:	mov    DWORD PTR [rax+0x38],edx
  433226:	mov    rax,QWORD PTR [rbp-0x18]
  43322a:	mov    rdi,rax
  43322d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433232:	mov    rax,QWORD PTR [rbp-0x18]
  433236:	mov    rax,QWORD PTR [rax+0x28]
  43323a:	lea    rcx,[rax+0x1]
  43323e:	mov    rdx,QWORD PTR [rbp-0x18]
  433242:	mov    QWORD PTR [rdx+0x28],rcx
  433246:	mov    BYTE PTR [rax],0x7d
  433249:	sub    DWORD PTR [rbp-0xc],0x1
  43324d:	jmp    433341 <flatcc_json_printer_struct_vector_field@@Base+0x2a2>
  433252:	mov    rax,QWORD PTR [rbp-0x38]
  433256:	add    QWORD PTR [rbp-0x8],rax
  43325a:	mov    rax,QWORD PTR [rbp-0x18]
  43325e:	mov    rax,QWORD PTR [rax+0x28]
  433262:	lea    rcx,[rax+0x1]
  433266:	mov    rdx,QWORD PTR [rbp-0x18]
  43326a:	mov    QWORD PTR [rdx+0x28],rcx
  43326e:	mov    BYTE PTR [rax],0x2c
  433271:	mov    rax,QWORD PTR [rbp-0x18]
  433275:	movzx  eax,BYTE PTR [rax+0x31]
  433279:	test   al,al
  43327b:	je     4332a2 <flatcc_json_printer_struct_vector_field@@Base+0x203>
  43327d:	mov    rax,QWORD PTR [rbp-0x18]
  433281:	mov    rax,QWORD PTR [rax+0x28]
  433285:	lea    rcx,[rax+0x1]
  433289:	mov    rdx,QWORD PTR [rbp-0x18]
  43328d:	mov    QWORD PTR [rdx+0x28],rcx
  433291:	mov    BYTE PTR [rax],0xa
  433294:	mov    rax,QWORD PTR [rbp-0x18]
  433298:	mov    rdi,rax
  43329b:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4332a0:	jmp    4332ae <flatcc_json_printer_struct_vector_field@@Base+0x20f>
  4332a2:	mov    rax,QWORD PTR [rbp-0x18]
  4332a6:	mov    rdi,rax
  4332a9:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4332ae:	mov    rax,QWORD PTR [rbp-0x18]
  4332b2:	mov    eax,DWORD PTR [rax+0x38]
  4332b5:	lea    edx,[rax+0x1]
  4332b8:	mov    rax,QWORD PTR [rbp-0x18]
  4332bc:	mov    DWORD PTR [rax+0x38],edx
  4332bf:	mov    rax,QWORD PTR [rbp-0x18]
  4332c3:	mov    rax,QWORD PTR [rax+0x28]
  4332c7:	lea    rcx,[rax+0x1]
  4332cb:	mov    rdx,QWORD PTR [rbp-0x18]
  4332cf:	mov    QWORD PTR [rdx+0x28],rcx
  4332d3:	mov    BYTE PTR [rax],0x7b
  4332d6:	mov    rcx,QWORD PTR [rbp-0x8]
  4332da:	mov    rdx,QWORD PTR [rbp-0x18]
  4332de:	mov    rax,QWORD PTR [rbp+0x10]
  4332e2:	mov    rsi,rcx
  4332e5:	mov    rdi,rdx
  4332e8:	call   rax
  4332ea:	mov    rax,QWORD PTR [rbp-0x18]
  4332ee:	movzx  eax,BYTE PTR [rax+0x31]
  4332f2:	test   al,al
  4332f4:	je     43332a <flatcc_json_printer_struct_vector_field@@Base+0x28b>
  4332f6:	mov    rax,QWORD PTR [rbp-0x18]
  4332fa:	mov    rax,QWORD PTR [rax+0x28]
  4332fe:	lea    rcx,[rax+0x1]
  433302:	mov    rdx,QWORD PTR [rbp-0x18]
  433306:	mov    QWORD PTR [rdx+0x28],rcx
  43330a:	mov    BYTE PTR [rax],0xa
  43330d:	mov    rax,QWORD PTR [rbp-0x18]
  433311:	mov    eax,DWORD PTR [rax+0x38]
  433314:	lea    edx,[rax-0x1]
  433317:	mov    rax,QWORD PTR [rbp-0x18]
  43331b:	mov    DWORD PTR [rax+0x38],edx
  43331e:	mov    rax,QWORD PTR [rbp-0x18]
  433322:	mov    rdi,rax
  433325:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43332a:	mov    rax,QWORD PTR [rbp-0x18]
  43332e:	mov    rax,QWORD PTR [rax+0x28]
  433332:	lea    rcx,[rax+0x1]
  433336:	mov    rdx,QWORD PTR [rbp-0x18]
  43333a:	mov    QWORD PTR [rdx+0x28],rcx
  43333e:	mov    BYTE PTR [rax],0x7d
  433341:	mov    eax,DWORD PTR [rbp-0xc]
  433344:	lea    edx,[rax-0x1]
  433347:	mov    DWORD PTR [rbp-0xc],edx
  43334a:	test   eax,eax
  43334c:	jne    433252 <flatcc_json_printer_struct_vector_field@@Base+0x1b3>
  433352:	mov    rax,QWORD PTR [rbp-0x18]
  433356:	movzx  eax,BYTE PTR [rax+0x31]
  43335a:	test   al,al
  43335c:	je     433392 <flatcc_json_printer_struct_vector_field@@Base+0x2f3>
  43335e:	mov    rax,QWORD PTR [rbp-0x18]
  433362:	mov    rax,QWORD PTR [rax+0x28]
  433366:	lea    rcx,[rax+0x1]
  43336a:	mov    rdx,QWORD PTR [rbp-0x18]
  43336e:	mov    QWORD PTR [rdx+0x28],rcx
  433372:	mov    BYTE PTR [rax],0xa
  433375:	mov    rax,QWORD PTR [rbp-0x18]
  433379:	mov    eax,DWORD PTR [rax+0x38]
  43337c:	lea    edx,[rax-0x1]
  43337f:	mov    rax,QWORD PTR [rbp-0x18]
  433383:	mov    DWORD PTR [rax+0x38],edx
  433386:	mov    rax,QWORD PTR [rbp-0x18]
  43338a:	mov    rdi,rax
  43338d:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433392:	mov    rax,QWORD PTR [rbp-0x18]
  433396:	mov    rax,QWORD PTR [rax+0x28]
  43339a:	lea    rcx,[rax+0x1]
  43339e:	mov    rdx,QWORD PTR [rbp-0x18]
  4333a2:	mov    QWORD PTR [rdx+0x28],rcx
  4333a6:	mov    BYTE PTR [rax],0x5d
  4333a9:	nop
  4333aa:	leave  
  4333ab:	ret    

00000000004333ac <flatcc_json_printer_string_vector_field@@Base>:
  4333ac:	push   rbp
  4333ad:	mov    rbp,rsp
  4333b0:	sub    rsp,0x30
  4333b4:	mov    QWORD PTR [rbp-0x18],rdi
  4333b8:	mov    QWORD PTR [rbp-0x20],rsi
  4333bc:	mov    DWORD PTR [rbp-0x24],edx
  4333bf:	mov    QWORD PTR [rbp-0x30],rcx
  4333c3:	mov    DWORD PTR [rbp-0x28],r8d
  4333c7:	mov    edx,DWORD PTR [rbp-0x24]
  4333ca:	mov    rax,QWORD PTR [rbp-0x20]
  4333ce:	mov    esi,edx
  4333d0:	mov    rdi,rax
  4333d3:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4333d8:	mov    QWORD PTR [rbp-0x8],rax
  4333dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4333e1:	je     4335c2 <flatcc_json_printer_string_vector_field@@Base+0x216>
  4333e7:	mov    rax,QWORD PTR [rbp-0x20]
  4333eb:	mov    eax,DWORD PTR [rax+0x18]
  4333ee:	lea    ecx,[rax+0x1]
  4333f1:	mov    rdx,QWORD PTR [rbp-0x20]
  4333f5:	mov    DWORD PTR [rdx+0x18],ecx
  4333f8:	test   eax,eax
  4333fa:	je     433413 <flatcc_json_printer_string_vector_field@@Base+0x67>
  4333fc:	mov    rax,QWORD PTR [rbp-0x18]
  433400:	mov    rax,QWORD PTR [rax+0x28]
  433404:	lea    rcx,[rax+0x1]
  433408:	mov    rdx,QWORD PTR [rbp-0x18]
  43340c:	mov    QWORD PTR [rdx+0x28],rcx
  433410:	mov    BYTE PTR [rax],0x2c
  433413:	mov    rax,QWORD PTR [rbp-0x8]
  433417:	mov    rdi,rax
  43341a:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  43341f:	mov    QWORD PTR [rbp-0x8],rax
  433423:	mov    rax,QWORD PTR [rbp-0x8]
  433427:	mov    rdi,rax
  43342a:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43342f:	mov    DWORD PTR [rbp-0xc],eax
  433432:	add    QWORD PTR [rbp-0x8],0x4
  433437:	mov    eax,DWORD PTR [rbp-0x28]
  43343a:	movsxd rdx,eax
  43343d:	mov    rcx,QWORD PTR [rbp-0x30]
  433441:	mov    rax,QWORD PTR [rbp-0x18]
  433445:	mov    rsi,rcx
  433448:	mov    rdi,rax
  43344b:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  433450:	mov    rax,QWORD PTR [rbp-0x18]
  433454:	mov    eax,DWORD PTR [rax+0x38]
  433457:	lea    edx,[rax+0x1]
  43345a:	mov    rax,QWORD PTR [rbp-0x18]
  43345e:	mov    DWORD PTR [rax+0x38],edx
  433461:	mov    rax,QWORD PTR [rbp-0x18]
  433465:	mov    rax,QWORD PTR [rax+0x28]
  433469:	lea    rcx,[rax+0x1]
  43346d:	mov    rdx,QWORD PTR [rbp-0x18]
  433471:	mov    QWORD PTR [rdx+0x28],rcx
  433475:	mov    BYTE PTR [rax],0x5b
  433478:	cmp    DWORD PTR [rbp-0xc],0x0
  43347c:	je     43355a <flatcc_json_printer_string_vector_field@@Base+0x1ae>
  433482:	mov    rax,QWORD PTR [rbp-0x18]
  433486:	movzx  eax,BYTE PTR [rax+0x31]
  43348a:	test   al,al
  43348c:	je     4334b3 <flatcc_json_printer_string_vector_field@@Base+0x107>
  43348e:	mov    rax,QWORD PTR [rbp-0x18]
  433492:	mov    rax,QWORD PTR [rax+0x28]
  433496:	lea    rcx,[rax+0x1]
  43349a:	mov    rdx,QWORD PTR [rbp-0x18]
  43349e:	mov    QWORD PTR [rdx+0x28],rcx
  4334a2:	mov    BYTE PTR [rax],0xa
  4334a5:	mov    rax,QWORD PTR [rbp-0x18]
  4334a9:	mov    rdi,rax
  4334ac:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4334b1:	jmp    4334bf <flatcc_json_printer_string_vector_field@@Base+0x113>
  4334b3:	mov    rax,QWORD PTR [rbp-0x18]
  4334b7:	mov    rdi,rax
  4334ba:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  4334bf:	mov    rax,QWORD PTR [rbp-0x8]
  4334c3:	mov    rdi,rax
  4334c6:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4334cb:	mov    rdx,rax
  4334ce:	mov    rax,QWORD PTR [rbp-0x18]
  4334d2:	mov    rsi,rdx
  4334d5:	mov    rdi,rax
  4334d8:	call   42d6e5 <flatcc_json_printer_enum_flag@@Base+0x5a>
  4334dd:	sub    DWORD PTR [rbp-0xc],0x1
  4334e1:	jmp    43355a <flatcc_json_printer_string_vector_field@@Base+0x1ae>
  4334e3:	add    QWORD PTR [rbp-0x8],0x4
  4334e8:	mov    rax,QWORD PTR [rbp-0x18]
  4334ec:	mov    rax,QWORD PTR [rax+0x28]
  4334f0:	lea    rcx,[rax+0x1]
  4334f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4334f8:	mov    QWORD PTR [rdx+0x28],rcx
  4334fc:	mov    BYTE PTR [rax],0x2c
  4334ff:	mov    rax,QWORD PTR [rbp-0x18]
  433503:	movzx  eax,BYTE PTR [rax+0x31]
  433507:	test   al,al
  433509:	je     433530 <flatcc_json_printer_string_vector_field@@Base+0x184>
  43350b:	mov    rax,QWORD PTR [rbp-0x18]
  43350f:	mov    rax,QWORD PTR [rax+0x28]
  433513:	lea    rcx,[rax+0x1]
  433517:	mov    rdx,QWORD PTR [rbp-0x18]
  43351b:	mov    QWORD PTR [rdx+0x28],rcx
  43351f:	mov    BYTE PTR [rax],0xa
  433522:	mov    rax,QWORD PTR [rbp-0x18]
  433526:	mov    rdi,rax
  433529:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43352e:	jmp    43353c <flatcc_json_printer_string_vector_field@@Base+0x190>
  433530:	mov    rax,QWORD PTR [rbp-0x18]
  433534:	mov    rdi,rax
  433537:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  43353c:	mov    rax,QWORD PTR [rbp-0x8]
  433540:	mov    rdi,rax
  433543:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  433548:	mov    rdx,rax
  43354b:	mov    rax,QWORD PTR [rbp-0x18]
  43354f:	mov    rsi,rdx
  433552:	mov    rdi,rax
  433555:	call   42d6e5 <flatcc_json_printer_enum_flag@@Base+0x5a>
  43355a:	mov    eax,DWORD PTR [rbp-0xc]
  43355d:	lea    edx,[rax-0x1]
  433560:	mov    DWORD PTR [rbp-0xc],edx
  433563:	test   eax,eax
  433565:	jne    4334e3 <flatcc_json_printer_string_vector_field@@Base+0x137>
  43356b:	mov    rax,QWORD PTR [rbp-0x18]
  43356f:	movzx  eax,BYTE PTR [rax+0x31]
  433573:	test   al,al
  433575:	je     4335ab <flatcc_json_printer_string_vector_field@@Base+0x1ff>
  433577:	mov    rax,QWORD PTR [rbp-0x18]
  43357b:	mov    rax,QWORD PTR [rax+0x28]
  43357f:	lea    rcx,[rax+0x1]
  433583:	mov    rdx,QWORD PTR [rbp-0x18]
  433587:	mov    QWORD PTR [rdx+0x28],rcx
  43358b:	mov    BYTE PTR [rax],0xa
  43358e:	mov    rax,QWORD PTR [rbp-0x18]
  433592:	mov    eax,DWORD PTR [rax+0x38]
  433595:	lea    edx,[rax-0x1]
  433598:	mov    rax,QWORD PTR [rbp-0x18]
  43359c:	mov    DWORD PTR [rax+0x38],edx
  43359f:	mov    rax,QWORD PTR [rbp-0x18]
  4335a3:	mov    rdi,rax
  4335a6:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4335ab:	mov    rax,QWORD PTR [rbp-0x18]
  4335af:	mov    rax,QWORD PTR [rax+0x28]
  4335b3:	lea    rcx,[rax+0x1]
  4335b7:	mov    rdx,QWORD PTR [rbp-0x18]
  4335bb:	mov    QWORD PTR [rdx+0x28],rcx
  4335bf:	mov    BYTE PTR [rax],0x5d
  4335c2:	nop
  4335c3:	leave  
  4335c4:	ret    

00000000004335c5 <flatcc_json_printer_table_vector_field@@Base>:
  4335c5:	push   rbp
  4335c6:	mov    rbp,rsp
  4335c9:	push   rbx
  4335ca:	sub    rsp,0x48
  4335ce:	mov    QWORD PTR [rbp-0x28],rdi
  4335d2:	mov    QWORD PTR [rbp-0x30],rsi
  4335d6:	mov    DWORD PTR [rbp-0x34],edx
  4335d9:	mov    QWORD PTR [rbp-0x40],rcx
  4335dd:	mov    DWORD PTR [rbp-0x38],r8d
  4335e1:	mov    QWORD PTR [rbp-0x48],r9
  4335e5:	mov    edx,DWORD PTR [rbp-0x34]
  4335e8:	mov    rax,QWORD PTR [rbp-0x30]
  4335ec:	mov    esi,edx
  4335ee:	mov    rdi,rax
  4335f1:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4335f6:	mov    QWORD PTR [rbp-0x18],rax
  4335fa:	cmp    QWORD PTR [rbp-0x18],0x0
  4335ff:	je     433778 <flatcc_json_printer_table_vector_field@@Base+0x1b3>
  433605:	mov    rax,QWORD PTR [rbp-0x30]
  433609:	mov    eax,DWORD PTR [rax+0x18]
  43360c:	lea    ecx,[rax+0x1]
  43360f:	mov    rdx,QWORD PTR [rbp-0x30]
  433613:	mov    DWORD PTR [rdx+0x18],ecx
  433616:	test   eax,eax
  433618:	je     433631 <flatcc_json_printer_table_vector_field@@Base+0x6c>
  43361a:	mov    rax,QWORD PTR [rbp-0x28]
  43361e:	mov    rax,QWORD PTR [rax+0x28]
  433622:	lea    rcx,[rax+0x1]
  433626:	mov    rdx,QWORD PTR [rbp-0x28]
  43362a:	mov    QWORD PTR [rdx+0x28],rcx
  43362e:	mov    BYTE PTR [rax],0x2c
  433631:	mov    rax,QWORD PTR [rbp-0x18]
  433635:	mov    rdi,rax
  433638:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  43363d:	mov    QWORD PTR [rbp-0x18],rax
  433641:	mov    rax,QWORD PTR [rbp-0x18]
  433645:	mov    rdi,rax
  433648:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43364d:	mov    DWORD PTR [rbp-0x1c],eax
  433650:	add    QWORD PTR [rbp-0x18],0x4
  433655:	mov    eax,DWORD PTR [rbp-0x38]
  433658:	movsxd rdx,eax
  43365b:	mov    rcx,QWORD PTR [rbp-0x40]
  43365f:	mov    rax,QWORD PTR [rbp-0x28]
  433663:	mov    rsi,rcx
  433666:	mov    rdi,rax
  433669:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  43366e:	mov    rax,QWORD PTR [rbp-0x28]
  433672:	mov    eax,DWORD PTR [rax+0x38]
  433675:	lea    edx,[rax+0x1]
  433678:	mov    rax,QWORD PTR [rbp-0x28]
  43367c:	mov    DWORD PTR [rax+0x38],edx
  43367f:	mov    rax,QWORD PTR [rbp-0x28]
  433683:	mov    rax,QWORD PTR [rax+0x28]
  433687:	lea    rcx,[rax+0x1]
  43368b:	mov    rdx,QWORD PTR [rbp-0x28]
  43368f:	mov    QWORD PTR [rdx+0x28],rcx
  433693:	mov    BYTE PTR [rax],0x5b
  433696:	cmp    DWORD PTR [rbp-0x1c],0x0
  43369a:	je     433714 <flatcc_json_printer_table_vector_field@@Base+0x14f>
  43369c:	mov    rax,QWORD PTR [rbp-0x30]
  4336a0:	mov    ebx,DWORD PTR [rax+0x14]
  4336a3:	mov    rax,QWORD PTR [rbp-0x18]
  4336a7:	mov    rdi,rax
  4336aa:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4336af:	mov    rsi,rax
  4336b2:	mov    rdx,QWORD PTR [rbp-0x48]
  4336b6:	mov    rax,QWORD PTR [rbp-0x28]
  4336ba:	mov    rcx,rdx
  4336bd:	mov    edx,ebx
  4336bf:	mov    rdi,rax
  4336c2:	call   42d72d <flatcc_json_printer_enum_flag@@Base+0xa2>
  4336c7:	sub    DWORD PTR [rbp-0x1c],0x1
  4336cb:	jmp    433714 <flatcc_json_printer_table_vector_field@@Base+0x14f>
  4336cd:	add    QWORD PTR [rbp-0x18],0x4
  4336d2:	mov    rax,QWORD PTR [rbp-0x28]
  4336d6:	mov    rax,QWORD PTR [rax+0x28]
  4336da:	lea    rcx,[rax+0x1]
  4336de:	mov    rdx,QWORD PTR [rbp-0x28]
  4336e2:	mov    QWORD PTR [rdx+0x28],rcx
  4336e6:	mov    BYTE PTR [rax],0x2c
  4336e9:	mov    rax,QWORD PTR [rbp-0x30]
  4336ed:	mov    ebx,DWORD PTR [rax+0x14]
  4336f0:	mov    rax,QWORD PTR [rbp-0x18]
  4336f4:	mov    rdi,rax
  4336f7:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4336fc:	mov    rsi,rax
  4336ff:	mov    rdx,QWORD PTR [rbp-0x48]
  433703:	mov    rax,QWORD PTR [rbp-0x28]
  433707:	mov    rcx,rdx
  43370a:	mov    edx,ebx
  43370c:	mov    rdi,rax
  43370f:	call   42d72d <flatcc_json_printer_enum_flag@@Base+0xa2>
  433714:	mov    eax,DWORD PTR [rbp-0x1c]
  433717:	lea    edx,[rax-0x1]
  43371a:	mov    DWORD PTR [rbp-0x1c],edx
  43371d:	test   eax,eax
  43371f:	jne    4336cd <flatcc_json_printer_table_vector_field@@Base+0x108>
  433721:	mov    rax,QWORD PTR [rbp-0x28]
  433725:	movzx  eax,BYTE PTR [rax+0x31]
  433729:	test   al,al
  43372b:	je     433761 <flatcc_json_printer_table_vector_field@@Base+0x19c>
  43372d:	mov    rax,QWORD PTR [rbp-0x28]
  433731:	mov    rax,QWORD PTR [rax+0x28]
  433735:	lea    rcx,[rax+0x1]
  433739:	mov    rdx,QWORD PTR [rbp-0x28]
  43373d:	mov    QWORD PTR [rdx+0x28],rcx
  433741:	mov    BYTE PTR [rax],0xa
  433744:	mov    rax,QWORD PTR [rbp-0x28]
  433748:	mov    eax,DWORD PTR [rax+0x38]
  43374b:	lea    edx,[rax-0x1]
  43374e:	mov    rax,QWORD PTR [rbp-0x28]
  433752:	mov    DWORD PTR [rax+0x38],edx
  433755:	mov    rax,QWORD PTR [rbp-0x28]
  433759:	mov    rdi,rax
  43375c:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433761:	mov    rax,QWORD PTR [rbp-0x28]
  433765:	mov    rax,QWORD PTR [rax+0x28]
  433769:	lea    rcx,[rax+0x1]
  43376d:	mov    rdx,QWORD PTR [rbp-0x28]
  433771:	mov    QWORD PTR [rdx+0x28],rcx
  433775:	mov    BYTE PTR [rax],0x5d
  433778:	nop
  433779:	add    rsp,0x48
  43377d:	pop    rbx
  43377e:	pop    rbp
  43377f:	ret    

0000000000433780 <flatcc_json_printer_union_vector_field@@Base>:
  433780:	push   rbp
  433781:	mov    rbp,rsp
  433784:	sub    rsp,0xe0
  43378b:	mov    QWORD PTR [rbp-0xb8],rdi
  433792:	mov    QWORD PTR [rbp-0xc0],rsi
  433799:	mov    DWORD PTR [rbp-0xc4],edx
  43379f:	mov    QWORD PTR [rbp-0xd0],rcx
  4337a6:	mov    DWORD PTR [rbp-0xc8],r8d
  4337ad:	mov    QWORD PTR [rbp-0xd8],r9
  4337b4:	mov    rax,QWORD PTR [rbp+0x10]
  4337b8:	mov    QWORD PTR [rbp-0xe0],rax
  4337bf:	mov    rax,QWORD PTR fs:0x28
  4337c8:	mov    QWORD PTR [rbp-0x8],rax
  4337cc:	xor    eax,eax
  4337ce:	mov    eax,DWORD PTR [rbp-0xc4]
  4337d4:	lea    edx,[rax-0x1]
  4337d7:	mov    rax,QWORD PTR [rbp-0xc0]
  4337de:	mov    esi,edx
  4337e0:	mov    rdi,rax
  4337e3:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4337e8:	mov    QWORD PTR [rbp-0x98],rax
  4337ef:	mov    edx,DWORD PTR [rbp-0xc4]
  4337f5:	mov    rax,QWORD PTR [rbp-0xc0]
  4337fc:	mov    esi,edx
  4337fe:	mov    rdi,rax
  433801:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  433806:	mov    QWORD PTR [rbp-0xa8],rax
  43380d:	mov    rax,QWORD PTR [rbp-0xc0]
  433814:	mov    eax,DWORD PTR [rax+0x14]
  433817:	mov    DWORD PTR [rbp-0x88],eax
  43381d:	cmp    DWORD PTR [rbp-0xc8],0x64
  433824:	jle    433859 <flatcc_json_printer_union_vector_field@@Base+0xd9>
  433826:	mov    rax,QWORD PTR [rbp-0xb8]
  43382d:	mov    esi,0x1
  433832:	mov    rdi,rax
  433835:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  43383a:	lea    rcx,[rip+0x9e1f]        # 43d660 <flatcc_builder_padding_base@@Base+0x36e0>
  433841:	mov    edx,0x34b
  433846:	lea    rsi,[rip+0x97fb]        # 43d048 <flatcc_builder_padding_base@@Base+0x30c8>
  43384d:	lea    rdi,[rip+0x985f]        # 43d0b3 <flatcc_builder_padding_base@@Base+0x3133>
  433854:	call   405080 <__assert_fail@plt>
  433859:	mov    eax,DWORD PTR [rbp-0xc8]
  43385f:	movsxd rdx,eax
  433862:	mov    rcx,QWORD PTR [rbp-0xd0]
  433869:	lea    rax,[rbp-0x80]
  43386d:	mov    rsi,rcx
  433870:	mov    rdi,rax
  433873:	call   4050f0 <memcpy@plt>
  433878:	mov    eax,DWORD PTR [rbp-0xc8]
  43387e:	cdqe   
  433880:	lea    rdx,[rbp-0x80]
  433884:	add    rax,rdx
  433887:	mov    edx,0x5
  43388c:	lea    rsi,[rip+0x983b]        # 43d0ce <flatcc_builder_padding_base@@Base+0x314e>
  433893:	mov    rdi,rax
  433896:	call   4050f0 <memcpy@plt>
  43389b:	cmp    QWORD PTR [rbp-0xa8],0x0
  4338a3:	je     433c44 <flatcc_json_printer_union_vector_field@@Base+0x4c4>
  4338a9:	cmp    QWORD PTR [rbp-0x98],0x0
  4338b1:	je     433c44 <flatcc_json_printer_union_vector_field@@Base+0x4c4>
  4338b7:	mov    eax,DWORD PTR [rbp-0xc8]
  4338bd:	lea    r8d,[rax+0x5]
  4338c1:	mov    eax,DWORD PTR [rbp-0xc4]
  4338c7:	lea    edi,[rax-0x1]
  4338ca:	mov    rcx,QWORD PTR [rbp-0xd8]
  4338d1:	lea    rdx,[rbp-0x80]
  4338d5:	mov    rsi,QWORD PTR [rbp-0xc0]
  4338dc:	mov    rax,QWORD PTR [rbp-0xb8]
  4338e3:	mov    r9,rcx
  4338e6:	mov    rcx,rdx
  4338e9:	mov    edx,edi
  4338eb:	mov    rdi,rax
  4338ee:	call   4318b7 <flatcc_json_printer_utype_enum_vector_field@@Base>
  4338f3:	mov    rax,QWORD PTR [rbp-0xc0]
  4338fa:	mov    eax,DWORD PTR [rax+0x18]
  4338fd:	lea    ecx,[rax+0x1]
  433900:	mov    rdx,QWORD PTR [rbp-0xc0]
  433907:	mov    DWORD PTR [rdx+0x18],ecx
  43390a:	test   eax,eax
  43390c:	je     43392b <flatcc_json_printer_union_vector_field@@Base+0x1ab>
  43390e:	mov    rax,QWORD PTR [rbp-0xb8]
  433915:	mov    rax,QWORD PTR [rax+0x28]
  433919:	lea    rcx,[rax+0x1]
  43391d:	mov    rdx,QWORD PTR [rbp-0xb8]
  433924:	mov    QWORD PTR [rdx+0x28],rcx
  433928:	mov    BYTE PTR [rax],0x2c
  43392b:	mov    rax,QWORD PTR [rbp-0xa8]
  433932:	mov    rdi,rax
  433935:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  43393a:	mov    QWORD PTR [rbp-0xa8],rax
  433941:	mov    rax,QWORD PTR [rbp-0x98]
  433948:	mov    rdi,rax
  43394b:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  433950:	mov    QWORD PTR [rbp-0x98],rax
  433957:	mov    rax,QWORD PTR [rbp-0xa8]
  43395e:	mov    rdi,rax
  433961:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  433966:	mov    DWORD PTR [rbp-0xac],eax
  43396c:	add    QWORD PTR [rbp-0xa8],0x4
  433974:	add    QWORD PTR [rbp-0x98],0x4
  43397c:	mov    rax,QWORD PTR [rbp-0x98]
  433983:	mov    QWORD PTR [rbp-0xa0],rax
  43398a:	mov    eax,DWORD PTR [rbp-0xc8]
  433990:	movsxd rdx,eax
  433993:	mov    rcx,QWORD PTR [rbp-0xd0]
  43399a:	mov    rax,QWORD PTR [rbp-0xb8]
  4339a1:	mov    rsi,rcx
  4339a4:	mov    rdi,rax
  4339a7:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  4339ac:	mov    rax,QWORD PTR [rbp-0xb8]
  4339b3:	mov    eax,DWORD PTR [rax+0x38]
  4339b6:	lea    edx,[rax+0x1]
  4339b9:	mov    rax,QWORD PTR [rbp-0xb8]
  4339c0:	mov    DWORD PTR [rax+0x38],edx
  4339c3:	mov    rax,QWORD PTR [rbp-0xb8]
  4339ca:	mov    rax,QWORD PTR [rax+0x28]
  4339ce:	lea    rcx,[rax+0x1]
  4339d2:	mov    rdx,QWORD PTR [rbp-0xb8]
  4339d9:	mov    QWORD PTR [rdx+0x28],rcx
  4339dd:	mov    BYTE PTR [rax],0x5b
  4339e0:	cmp    DWORD PTR [rbp-0xac],0x0
  4339e7:	je     433bbe <flatcc_json_printer_union_vector_field@@Base+0x43e>
  4339ed:	mov    rax,QWORD PTR [rbp-0xa0]
  4339f4:	mov    rdi,rax
  4339f7:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  4339fc:	mov    BYTE PTR [rbp-0xad],al
  433a02:	cmp    BYTE PTR [rbp-0xad],0x0
  433a09:	je     433a45 <flatcc_json_printer_union_vector_field@@Base+0x2c5>
  433a0b:	movzx  eax,BYTE PTR [rbp-0xad]
  433a12:	mov    BYTE PTR [rbp-0x84],al
  433a18:	mov    rax,QWORD PTR [rbp-0xa8]
  433a1f:	mov    QWORD PTR [rbp-0x90],rax
  433a26:	lea    rcx,[rbp-0x90]
  433a2d:	mov    rdx,QWORD PTR [rbp-0xb8]
  433a34:	mov    rax,QWORD PTR [rbp-0xe0]
  433a3b:	mov    rsi,rcx
  433a3e:	mov    rdi,rdx
  433a41:	call   rax
  433a43:	jmp    433ab9 <flatcc_json_printer_union_vector_field@@Base+0x339>
  433a45:	mov    rax,QWORD PTR [rbp-0xb8]
  433a4c:	mov    rax,QWORD PTR [rax+0x28]
  433a50:	lea    rcx,[rax+0x1]
  433a54:	mov    rdx,QWORD PTR [rbp-0xb8]
  433a5b:	mov    QWORD PTR [rdx+0x28],rcx
  433a5f:	mov    BYTE PTR [rax],0x6e
  433a62:	mov    rax,QWORD PTR [rbp-0xb8]
  433a69:	mov    rax,QWORD PTR [rax+0x28]
  433a6d:	lea    rcx,[rax+0x1]
  433a71:	mov    rdx,QWORD PTR [rbp-0xb8]
  433a78:	mov    QWORD PTR [rdx+0x28],rcx
  433a7c:	mov    BYTE PTR [rax],0x75
  433a7f:	mov    rax,QWORD PTR [rbp-0xb8]
  433a86:	mov    rax,QWORD PTR [rax+0x28]
  433a8a:	lea    rcx,[rax+0x1]
  433a8e:	mov    rdx,QWORD PTR [rbp-0xb8]
  433a95:	mov    QWORD PTR [rdx+0x28],rcx
  433a99:	mov    BYTE PTR [rax],0x6c
  433a9c:	mov    rax,QWORD PTR [rbp-0xb8]
  433aa3:	mov    rax,QWORD PTR [rax+0x28]
  433aa7:	lea    rcx,[rax+0x1]
  433aab:	mov    rdx,QWORD PTR [rbp-0xb8]
  433ab2:	mov    QWORD PTR [rdx+0x28],rcx
  433ab6:	mov    BYTE PTR [rax],0x6c
  433ab9:	sub    DWORD PTR [rbp-0xac],0x1
  433ac0:	jmp    433bbe <flatcc_json_printer_union_vector_field@@Base+0x43e>
  433ac5:	add    QWORD PTR [rbp-0xa8],0x4
  433acd:	add    QWORD PTR [rbp-0xa0],0x1
  433ad5:	mov    rax,QWORD PTR [rbp-0xa0]
  433adc:	mov    rdi,rax
  433adf:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  433ae4:	mov    BYTE PTR [rbp-0xad],al
  433aea:	mov    rax,QWORD PTR [rbp-0xb8]
  433af1:	mov    rax,QWORD PTR [rax+0x28]
  433af5:	lea    rcx,[rax+0x1]
  433af9:	mov    rdx,QWORD PTR [rbp-0xb8]
  433b00:	mov    QWORD PTR [rdx+0x28],rcx
  433b04:	mov    BYTE PTR [rax],0x2c
  433b07:	cmp    BYTE PTR [rbp-0xad],0x0
  433b0e:	je     433b4a <flatcc_json_printer_union_vector_field@@Base+0x3ca>
  433b10:	movzx  eax,BYTE PTR [rbp-0xad]
  433b17:	mov    BYTE PTR [rbp-0x84],al
  433b1d:	mov    rax,QWORD PTR [rbp-0xa8]
  433b24:	mov    QWORD PTR [rbp-0x90],rax
  433b2b:	lea    rcx,[rbp-0x90]
  433b32:	mov    rdx,QWORD PTR [rbp-0xb8]
  433b39:	mov    rax,QWORD PTR [rbp-0xe0]
  433b40:	mov    rsi,rcx
  433b43:	mov    rdi,rdx
  433b46:	call   rax
  433b48:	jmp    433bbe <flatcc_json_printer_union_vector_field@@Base+0x43e>
  433b4a:	mov    rax,QWORD PTR [rbp-0xb8]
  433b51:	mov    rax,QWORD PTR [rax+0x28]
  433b55:	lea    rcx,[rax+0x1]
  433b59:	mov    rdx,QWORD PTR [rbp-0xb8]
  433b60:	mov    QWORD PTR [rdx+0x28],rcx
  433b64:	mov    BYTE PTR [rax],0x6e
  433b67:	mov    rax,QWORD PTR [rbp-0xb8]
  433b6e:	mov    rax,QWORD PTR [rax+0x28]
  433b72:	lea    rcx,[rax+0x1]
  433b76:	mov    rdx,QWORD PTR [rbp-0xb8]
  433b7d:	mov    QWORD PTR [rdx+0x28],rcx
  433b81:	mov    BYTE PTR [rax],0x75
  433b84:	mov    rax,QWORD PTR [rbp-0xb8]
  433b8b:	mov    rax,QWORD PTR [rax+0x28]
  433b8f:	lea    rcx,[rax+0x1]
  433b93:	mov    rdx,QWORD PTR [rbp-0xb8]
  433b9a:	mov    QWORD PTR [rdx+0x28],rcx
  433b9e:	mov    BYTE PTR [rax],0x6c
  433ba1:	mov    rax,QWORD PTR [rbp-0xb8]
  433ba8:	mov    rax,QWORD PTR [rax+0x28]
  433bac:	lea    rcx,[rax+0x1]
  433bb0:	mov    rdx,QWORD PTR [rbp-0xb8]
  433bb7:	mov    QWORD PTR [rdx+0x28],rcx
  433bbb:	mov    BYTE PTR [rax],0x6c
  433bbe:	mov    eax,DWORD PTR [rbp-0xac]
  433bc4:	lea    edx,[rax-0x1]
  433bc7:	mov    DWORD PTR [rbp-0xac],edx
  433bcd:	test   eax,eax
  433bcf:	jne    433ac5 <flatcc_json_printer_union_vector_field@@Base+0x345>
  433bd5:	mov    rax,QWORD PTR [rbp-0xb8]
  433bdc:	movzx  eax,BYTE PTR [rax+0x31]
  433be0:	test   al,al
  433be2:	je     433c27 <flatcc_json_printer_union_vector_field@@Base+0x4a7>
  433be4:	mov    rax,QWORD PTR [rbp-0xb8]
  433beb:	mov    rax,QWORD PTR [rax+0x28]
  433bef:	lea    rcx,[rax+0x1]
  433bf3:	mov    rdx,QWORD PTR [rbp-0xb8]
  433bfa:	mov    QWORD PTR [rdx+0x28],rcx
  433bfe:	mov    BYTE PTR [rax],0xa
  433c01:	mov    rax,QWORD PTR [rbp-0xb8]
  433c08:	mov    eax,DWORD PTR [rax+0x38]
  433c0b:	lea    edx,[rax-0x1]
  433c0e:	mov    rax,QWORD PTR [rbp-0xb8]
  433c15:	mov    DWORD PTR [rax+0x38],edx
  433c18:	mov    rax,QWORD PTR [rbp-0xb8]
  433c1f:	mov    rdi,rax
  433c22:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433c27:	mov    rax,QWORD PTR [rbp-0xb8]
  433c2e:	mov    rax,QWORD PTR [rax+0x28]
  433c32:	lea    rcx,[rax+0x1]
  433c36:	mov    rdx,QWORD PTR [rbp-0xb8]
  433c3d:	mov    QWORD PTR [rdx+0x28],rcx
  433c41:	mov    BYTE PTR [rax],0x5d
  433c44:	nop
  433c45:	mov    rax,QWORD PTR [rbp-0x8]
  433c49:	xor    rax,QWORD PTR fs:0x28
  433c52:	je     433c59 <flatcc_json_printer_union_vector_field@@Base+0x4d9>
  433c54:	call   405070 <__stack_chk_fail@plt>
  433c59:	leave  
  433c5a:	ret    

0000000000433c5b <flatcc_json_printer_table_field@@Base>:
  433c5b:	push   rbp
  433c5c:	mov    rbp,rsp
  433c5f:	push   rbx
  433c60:	sub    rsp,0x48
  433c64:	mov    QWORD PTR [rbp-0x28],rdi
  433c68:	mov    QWORD PTR [rbp-0x30],rsi
  433c6c:	mov    DWORD PTR [rbp-0x34],edx
  433c6f:	mov    QWORD PTR [rbp-0x40],rcx
  433c73:	mov    DWORD PTR [rbp-0x38],r8d
  433c77:	mov    QWORD PTR [rbp-0x48],r9
  433c7b:	mov    edx,DWORD PTR [rbp-0x34]
  433c7e:	mov    rax,QWORD PTR [rbp-0x30]
  433c82:	mov    esi,edx
  433c84:	mov    rdi,rax
  433c87:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  433c8c:	mov    QWORD PTR [rbp-0x18],rax
  433c90:	cmp    QWORD PTR [rbp-0x18],0x0
  433c95:	je     433d07 <flatcc_json_printer_table_field@@Base+0xac>
  433c97:	mov    rax,QWORD PTR [rbp-0x30]
  433c9b:	mov    eax,DWORD PTR [rax+0x18]
  433c9e:	lea    ecx,[rax+0x1]
  433ca1:	mov    rdx,QWORD PTR [rbp-0x30]
  433ca5:	mov    DWORD PTR [rdx+0x18],ecx
  433ca8:	test   eax,eax
  433caa:	je     433cc3 <flatcc_json_printer_table_field@@Base+0x68>
  433cac:	mov    rax,QWORD PTR [rbp-0x28]
  433cb0:	mov    rax,QWORD PTR [rax+0x28]
  433cb4:	lea    rcx,[rax+0x1]
  433cb8:	mov    rdx,QWORD PTR [rbp-0x28]
  433cbc:	mov    QWORD PTR [rdx+0x28],rcx
  433cc0:	mov    BYTE PTR [rax],0x2c
  433cc3:	mov    eax,DWORD PTR [rbp-0x38]
  433cc6:	movsxd rdx,eax
  433cc9:	mov    rcx,QWORD PTR [rbp-0x40]
  433ccd:	mov    rax,QWORD PTR [rbp-0x28]
  433cd1:	mov    rsi,rcx
  433cd4:	mov    rdi,rax
  433cd7:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  433cdc:	mov    rax,QWORD PTR [rbp-0x30]
  433ce0:	mov    ebx,DWORD PTR [rax+0x14]
  433ce3:	mov    rax,QWORD PTR [rbp-0x18]
  433ce7:	mov    rdi,rax
  433cea:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  433cef:	mov    rsi,rax
  433cf2:	mov    rdx,QWORD PTR [rbp-0x48]
  433cf6:	mov    rax,QWORD PTR [rbp-0x28]
  433cfa:	mov    rcx,rdx
  433cfd:	mov    edx,ebx
  433cff:	mov    rdi,rax
  433d02:	call   42d72d <flatcc_json_printer_enum_flag@@Base+0xa2>
  433d07:	nop
  433d08:	add    rsp,0x48
  433d0c:	pop    rbx
  433d0d:	pop    rbp
  433d0e:	ret    

0000000000433d0f <flatcc_json_printer_union_field@@Base>:
  433d0f:	push   rbp
  433d10:	mov    rbp,rsp
  433d13:	sub    rsp,0x70
  433d17:	mov    QWORD PTR [rbp-0x48],rdi
  433d1b:	mov    QWORD PTR [rbp-0x50],rsi
  433d1f:	mov    DWORD PTR [rbp-0x54],edx
  433d22:	mov    QWORD PTR [rbp-0x60],rcx
  433d26:	mov    DWORD PTR [rbp-0x58],r8d
  433d2a:	mov    QWORD PTR [rbp-0x68],r9
  433d2e:	mov    rax,QWORD PTR [rbp+0x10]
  433d32:	mov    QWORD PTR [rbp-0x70],rax
  433d36:	mov    rax,QWORD PTR fs:0x28
  433d3f:	mov    QWORD PTR [rbp-0x8],rax
  433d43:	xor    eax,eax
  433d45:	mov    eax,DWORD PTR [rbp-0x54]
  433d48:	lea    edx,[rax-0x1]
  433d4b:	mov    rax,QWORD PTR [rbp-0x50]
  433d4f:	mov    esi,edx
  433d51:	mov    rdi,rax
  433d54:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  433d59:	mov    QWORD PTR [rbp-0x30],rax
  433d5d:	mov    edx,DWORD PTR [rbp-0x54]
  433d60:	mov    rax,QWORD PTR [rbp-0x50]
  433d64:	mov    esi,edx
  433d66:	mov    rdi,rax
  433d69:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  433d6e:	mov    QWORD PTR [rbp-0x28],rax
  433d72:	cmp    QWORD PTR [rbp-0x28],0x0
  433d77:	je     433fda <flatcc_json_printer_union_field@@Base+0x2cb>
  433d7d:	cmp    QWORD PTR [rbp-0x30],0x0
  433d82:	je     433fda <flatcc_json_printer_union_field@@Base+0x2cb>
  433d88:	mov    rax,QWORD PTR [rbp-0x30]
  433d8c:	mov    rdi,rax
  433d8f:	call   429596 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  433d94:	mov    BYTE PTR [rbp-0x31],al
  433d97:	mov    rax,QWORD PTR [rbp-0x50]
  433d9b:	mov    eax,DWORD PTR [rax+0x18]
  433d9e:	lea    ecx,[rax+0x1]
  433da1:	mov    rdx,QWORD PTR [rbp-0x50]
  433da5:	mov    DWORD PTR [rdx+0x18],ecx
  433da8:	test   eax,eax
  433daa:	je     433dc3 <flatcc_json_printer_union_field@@Base+0xb4>
  433dac:	mov    rax,QWORD PTR [rbp-0x48]
  433db0:	mov    rax,QWORD PTR [rax+0x28]
  433db4:	lea    rcx,[rax+0x1]
  433db8:	mov    rdx,QWORD PTR [rbp-0x48]
  433dbc:	mov    QWORD PTR [rdx+0x28],rcx
  433dc0:	mov    BYTE PTR [rax],0x2c
  433dc3:	mov    rax,QWORD PTR [rbp-0x48]
  433dc7:	movzx  eax,BYTE PTR [rax+0x31]
  433dcb:	test   al,al
  433dcd:	je     433df4 <flatcc_json_printer_union_field@@Base+0xe5>
  433dcf:	mov    rax,QWORD PTR [rbp-0x48]
  433dd3:	mov    rax,QWORD PTR [rax+0x28]
  433dd7:	lea    rcx,[rax+0x1]
  433ddb:	mov    rdx,QWORD PTR [rbp-0x48]
  433ddf:	mov    QWORD PTR [rdx+0x28],rcx
  433de3:	mov    BYTE PTR [rax],0xa
  433de6:	mov    rax,QWORD PTR [rbp-0x48]
  433dea:	mov    rdi,rax
  433ded:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433df2:	jmp    433e00 <flatcc_json_printer_union_field@@Base+0xf1>
  433df4:	mov    rax,QWORD PTR [rbp-0x48]
  433df8:	mov    rdi,rax
  433dfb:	call   42961c <flatcc_json_parser_struct_as_root@@Base+0x473>
  433e00:	mov    rax,QWORD PTR [rbp-0x48]
  433e04:	mov    rax,QWORD PTR [rax+0x28]
  433e08:	mov    BYTE PTR [rax],0x22
  433e0b:	mov    rax,QWORD PTR [rbp-0x48]
  433e0f:	mov    rdx,QWORD PTR [rax+0x28]
  433e13:	mov    rax,QWORD PTR [rbp-0x48]
  433e17:	movzx  eax,BYTE PTR [rax+0x32]
  433e1b:	test   al,al
  433e1d:	sete   al
  433e20:	movzx  eax,al
  433e23:	add    rdx,rax
  433e26:	mov    rax,QWORD PTR [rbp-0x48]
  433e2a:	mov    QWORD PTR [rax+0x28],rdx
  433e2e:	mov    rax,QWORD PTR [rbp-0x48]
  433e32:	mov    rdx,QWORD PTR [rax+0x28]
  433e36:	mov    eax,DWORD PTR [rbp-0x58]
  433e39:	cdqe   
  433e3b:	add    rdx,rax
  433e3e:	mov    rax,QWORD PTR [rbp-0x48]
  433e42:	mov    rax,QWORD PTR [rax+0x20]
  433e46:	cmp    rdx,rax
  433e49:	jae    433e82 <flatcc_json_printer_union_field@@Base+0x173>
  433e4b:	mov    eax,DWORD PTR [rbp-0x58]
  433e4e:	movsxd rdx,eax
  433e51:	mov    rax,QWORD PTR [rbp-0x48]
  433e55:	mov    rax,QWORD PTR [rax+0x28]
  433e59:	mov    rcx,QWORD PTR [rbp-0x60]
  433e5d:	mov    rsi,rcx
  433e60:	mov    rdi,rax
  433e63:	call   4050f0 <memcpy@plt>
  433e68:	mov    rax,QWORD PTR [rbp-0x48]
  433e6c:	mov    rdx,QWORD PTR [rax+0x28]
  433e70:	mov    eax,DWORD PTR [rbp-0x58]
  433e73:	cdqe   
  433e75:	add    rdx,rax
  433e78:	mov    rax,QWORD PTR [rbp-0x48]
  433e7c:	mov    QWORD PTR [rax+0x28],rdx
  433e80:	jmp    433e9b <flatcc_json_printer_union_field@@Base+0x18c>
  433e82:	mov    eax,DWORD PTR [rbp-0x58]
  433e85:	movsxd rdx,eax
  433e88:	mov    rcx,QWORD PTR [rbp-0x60]
  433e8c:	mov    rax,QWORD PTR [rbp-0x48]
  433e90:	mov    rsi,rcx
  433e93:	mov    rdi,rax
  433e96:	call   42ca09 <flatcc_json_printer_fmt_bool@@Base+0x165>
  433e9b:	mov    rax,QWORD PTR [rbp-0x48]
  433e9f:	mov    edx,0x5
  433ea4:	lea    rsi,[rip+0x9223]        # 43d0ce <flatcc_builder_padding_base@@Base+0x314e>
  433eab:	mov    rdi,rax
  433eae:	call   42ca09 <flatcc_json_printer_fmt_bool@@Base+0x165>
  433eb3:	mov    rax,QWORD PTR [rbp-0x48]
  433eb7:	mov    rax,QWORD PTR [rax+0x28]
  433ebb:	mov    BYTE PTR [rax],0x22
  433ebe:	mov    rax,QWORD PTR [rbp-0x48]
  433ec2:	mov    rdx,QWORD PTR [rax+0x28]
  433ec6:	mov    rax,QWORD PTR [rbp-0x48]
  433eca:	movzx  eax,BYTE PTR [rax+0x32]
  433ece:	test   al,al
  433ed0:	sete   al
  433ed3:	movzx  eax,al
  433ed6:	add    rdx,rax
  433ed9:	mov    rax,QWORD PTR [rbp-0x48]
  433edd:	mov    QWORD PTR [rax+0x28],rdx
  433ee1:	mov    rax,QWORD PTR [rbp-0x48]
  433ee5:	mov    rax,QWORD PTR [rax+0x28]
  433ee9:	lea    rcx,[rax+0x1]
  433eed:	mov    rdx,QWORD PTR [rbp-0x48]
  433ef1:	mov    QWORD PTR [rdx+0x28],rcx
  433ef5:	mov    BYTE PTR [rax],0x3a
  433ef8:	mov    rax,QWORD PTR [rbp-0x48]
  433efc:	mov    rax,QWORD PTR [rax+0x28]
  433f00:	mov    BYTE PTR [rax],0x20
  433f03:	mov    rax,QWORD PTR [rbp-0x48]
  433f07:	mov    rdx,QWORD PTR [rax+0x28]
  433f0b:	mov    rax,QWORD PTR [rbp-0x48]
  433f0f:	movzx  eax,BYTE PTR [rax+0x31]
  433f13:	test   al,al
  433f15:	setne  al
  433f18:	movzx  eax,al
  433f1b:	add    rdx,rax
  433f1e:	mov    rax,QWORD PTR [rbp-0x48]
  433f22:	mov    QWORD PTR [rax+0x28],rdx
  433f26:	mov    rax,QWORD PTR [rbp-0x48]
  433f2a:	movzx  eax,BYTE PTR [rax+0x33]
  433f2e:	test   al,al
  433f30:	je     433f62 <flatcc_json_printer_union_field@@Base+0x253>
  433f32:	mov    rax,QWORD PTR [rbp-0x48]
  433f36:	mov    rdx,QWORD PTR [rax+0x28]
  433f3a:	movzx  eax,BYTE PTR [rbp-0x31]
  433f3e:	mov    rsi,rdx
  433f41:	mov    edi,eax
  433f43:	call   4296a9 <flatcc_json_parser_struct_as_root@@Base+0x500>
  433f48:	mov    ecx,eax
  433f4a:	mov    rax,QWORD PTR [rbp-0x48]
  433f4e:	mov    rdx,QWORD PTR [rax+0x28]
  433f52:	movsxd rax,ecx
  433f55:	add    rdx,rax
  433f58:	mov    rax,QWORD PTR [rbp-0x48]
  433f5c:	mov    QWORD PTR [rax+0x28],rdx
  433f60:	jmp    433f75 <flatcc_json_printer_union_field@@Base+0x266>
  433f62:	movzx  ecx,BYTE PTR [rbp-0x31]
  433f66:	mov    rdx,QWORD PTR [rbp-0x48]
  433f6a:	mov    rax,QWORD PTR [rbp-0x68]
  433f6e:	mov    esi,ecx
  433f70:	mov    rdi,rdx
  433f73:	call   rax
  433f75:	cmp    BYTE PTR [rbp-0x31],0x0
  433f79:	je     433fdb <flatcc_json_printer_union_field@@Base+0x2cc>
  433f7b:	mov    rax,QWORD PTR [rbp-0x48]
  433f7f:	mov    rax,QWORD PTR [rax+0x28]
  433f83:	lea    rcx,[rax+0x1]
  433f87:	mov    rdx,QWORD PTR [rbp-0x48]
  433f8b:	mov    QWORD PTR [rdx+0x28],rcx
  433f8f:	mov    BYTE PTR [rax],0x2c
  433f92:	mov    eax,DWORD PTR [rbp-0x58]
  433f95:	movsxd rdx,eax
  433f98:	mov    rcx,QWORD PTR [rbp-0x60]
  433f9c:	mov    rax,QWORD PTR [rbp-0x48]
  433fa0:	mov    rsi,rcx
  433fa3:	mov    rdi,rax
  433fa6:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  433fab:	mov    rax,QWORD PTR [rbp-0x50]
  433faf:	mov    eax,DWORD PTR [rax+0x14]
  433fb2:	mov    DWORD PTR [rbp-0x18],eax
  433fb5:	movzx  eax,BYTE PTR [rbp-0x31]
  433fb9:	mov    BYTE PTR [rbp-0x14],al
  433fbc:	mov    rax,QWORD PTR [rbp-0x28]
  433fc0:	mov    QWORD PTR [rbp-0x20],rax
  433fc4:	lea    rcx,[rbp-0x20]
  433fc8:	mov    rdx,QWORD PTR [rbp-0x48]
  433fcc:	mov    rax,QWORD PTR [rbp-0x70]
  433fd0:	mov    rsi,rcx
  433fd3:	mov    rdi,rdx
  433fd6:	call   rax
  433fd8:	jmp    433fdb <flatcc_json_printer_union_field@@Base+0x2cc>
  433fda:	nop
  433fdb:	mov    rax,QWORD PTR [rbp-0x8]
  433fdf:	xor    rax,QWORD PTR fs:0x28
  433fe8:	je     433fef <flatcc_json_printer_union_field@@Base+0x2e0>
  433fea:	call   405070 <__stack_chk_fail@plt>
  433fef:	leave  
  433ff0:	ret    

0000000000433ff1 <flatcc_json_printer_union_table@@Base>:
  433ff1:	push   rbp
  433ff2:	mov    rbp,rsp
  433ff5:	push   rbx
  433ff6:	sub    rsp,0x28
  433ffa:	mov    QWORD PTR [rbp-0x18],rdi
  433ffe:	mov    QWORD PTR [rbp-0x20],rsi
  434002:	mov    QWORD PTR [rbp-0x28],rdx
  434006:	mov    rax,QWORD PTR [rbp-0x20]
  43400a:	mov    ebx,DWORD PTR [rax+0x8]
  43400d:	mov    rax,QWORD PTR [rbp-0x20]
  434011:	mov    rax,QWORD PTR [rax]
  434014:	mov    rdi,rax
  434017:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  43401c:	mov    rsi,rax
  43401f:	mov    rdx,QWORD PTR [rbp-0x28]
  434023:	mov    rax,QWORD PTR [rbp-0x18]
  434027:	mov    rcx,rdx
  43402a:	mov    edx,ebx
  43402c:	mov    rdi,rax
  43402f:	call   42d72d <flatcc_json_printer_enum_flag@@Base+0xa2>
  434034:	nop
  434035:	add    rsp,0x28
  434039:	pop    rbx
  43403a:	pop    rbp
  43403b:	ret    

000000000043403c <flatcc_json_printer_union_struct@@Base>:
  43403c:	push   rbp
  43403d:	mov    rbp,rsp
  434040:	sub    rsp,0x20
  434044:	mov    QWORD PTR [rbp-0x8],rdi
  434048:	mov    QWORD PTR [rbp-0x10],rsi
  43404c:	mov    QWORD PTR [rbp-0x18],rdx
  434050:	mov    rax,QWORD PTR [rbp-0x8]
  434054:	mov    eax,DWORD PTR [rax+0x38]
  434057:	lea    edx,[rax+0x1]
  43405a:	mov    rax,QWORD PTR [rbp-0x8]
  43405e:	mov    DWORD PTR [rax+0x38],edx
  434061:	mov    rax,QWORD PTR [rbp-0x8]
  434065:	mov    rax,QWORD PTR [rax+0x28]
  434069:	lea    rcx,[rax+0x1]
  43406d:	mov    rdx,QWORD PTR [rbp-0x8]
  434071:	mov    QWORD PTR [rdx+0x28],rcx
  434075:	mov    BYTE PTR [rax],0x7b
  434078:	mov    rax,QWORD PTR [rbp-0x10]
  43407c:	mov    rax,QWORD PTR [rax]
  43407f:	mov    rdi,rax
  434082:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  434087:	mov    rcx,rax
  43408a:	mov    rdx,QWORD PTR [rbp-0x8]
  43408e:	mov    rax,QWORD PTR [rbp-0x18]
  434092:	mov    rsi,rcx
  434095:	mov    rdi,rdx
  434098:	call   rax
  43409a:	mov    rax,QWORD PTR [rbp-0x8]
  43409e:	movzx  eax,BYTE PTR [rax+0x31]
  4340a2:	test   al,al
  4340a4:	je     4340da <flatcc_json_printer_union_struct@@Base+0x9e>
  4340a6:	mov    rax,QWORD PTR [rbp-0x8]
  4340aa:	mov    rax,QWORD PTR [rax+0x28]
  4340ae:	lea    rcx,[rax+0x1]
  4340b2:	mov    rdx,QWORD PTR [rbp-0x8]
  4340b6:	mov    QWORD PTR [rdx+0x28],rcx
  4340ba:	mov    BYTE PTR [rax],0xa
  4340bd:	mov    rax,QWORD PTR [rbp-0x8]
  4340c1:	mov    eax,DWORD PTR [rax+0x38]
  4340c4:	lea    edx,[rax-0x1]
  4340c7:	mov    rax,QWORD PTR [rbp-0x8]
  4340cb:	mov    DWORD PTR [rax+0x38],edx
  4340ce:	mov    rax,QWORD PTR [rbp-0x8]
  4340d2:	mov    rdi,rax
  4340d5:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4340da:	mov    rax,QWORD PTR [rbp-0x8]
  4340de:	mov    rax,QWORD PTR [rax+0x28]
  4340e2:	lea    rcx,[rax+0x1]
  4340e6:	mov    rdx,QWORD PTR [rbp-0x8]
  4340ea:	mov    QWORD PTR [rdx+0x28],rcx
  4340ee:	mov    BYTE PTR [rax],0x7d
  4340f1:	nop
  4340f2:	leave  
  4340f3:	ret    

00000000004340f4 <flatcc_json_printer_union_string@@Base>:
  4340f4:	push   rbp
  4340f5:	mov    rbp,rsp
  4340f8:	sub    rsp,0x10
  4340fc:	mov    QWORD PTR [rbp-0x8],rdi
  434100:	mov    QWORD PTR [rbp-0x10],rsi
  434104:	mov    rax,QWORD PTR [rbp-0x10]
  434108:	mov    rax,QWORD PTR [rax]
  43410b:	mov    rdi,rax
  43410e:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  434113:	mov    rdx,rax
  434116:	mov    rax,QWORD PTR [rbp-0x8]
  43411a:	mov    rsi,rdx
  43411d:	mov    rdi,rax
  434120:	call   42d6e5 <flatcc_json_printer_enum_flag@@Base+0x5a>
  434125:	nop
  434126:	leave  
  434127:	ret    

0000000000434128 <flatcc_json_printer_embedded_struct_field@@Base>:
  434128:	push   rbp
  434129:	mov    rbp,rsp
  43412c:	sub    rsp,0x30
  434130:	mov    QWORD PTR [rbp-0x8],rdi
  434134:	mov    DWORD PTR [rbp-0xc],esi
  434137:	mov    QWORD PTR [rbp-0x18],rdx
  43413b:	mov    QWORD PTR [rbp-0x20],rcx
  43413f:	mov    QWORD PTR [rbp-0x28],r8
  434143:	mov    DWORD PTR [rbp-0x10],r9d
  434147:	cmp    DWORD PTR [rbp-0xc],0x0
  43414b:	je     434164 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
  43414d:	mov    rax,QWORD PTR [rbp-0x8]
  434151:	mov    rax,QWORD PTR [rax+0x28]
  434155:	lea    rcx,[rax+0x1]
  434159:	mov    rdx,QWORD PTR [rbp-0x8]
  43415d:	mov    QWORD PTR [rdx+0x28],rcx
  434161:	mov    BYTE PTR [rax],0x2c
  434164:	mov    eax,DWORD PTR [rbp-0x10]
  434167:	movsxd rdx,eax
  43416a:	mov    rcx,QWORD PTR [rbp-0x28]
  43416e:	mov    rax,QWORD PTR [rbp-0x8]
  434172:	mov    rsi,rcx
  434175:	mov    rdi,rax
  434178:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  43417d:	mov    rax,QWORD PTR [rbp-0x8]
  434181:	mov    eax,DWORD PTR [rax+0x38]
  434184:	lea    edx,[rax+0x1]
  434187:	mov    rax,QWORD PTR [rbp-0x8]
  43418b:	mov    DWORD PTR [rax+0x38],edx
  43418e:	mov    rax,QWORD PTR [rbp-0x8]
  434192:	mov    rax,QWORD PTR [rax+0x28]
  434196:	lea    rcx,[rax+0x1]
  43419a:	mov    rdx,QWORD PTR [rbp-0x8]
  43419e:	mov    QWORD PTR [rdx+0x28],rcx
  4341a2:	mov    BYTE PTR [rax],0x7b
  4341a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4341a9:	mov    rax,QWORD PTR [rbp-0x20]
  4341ad:	lea    rcx,[rdx+rax*1]
  4341b1:	mov    rdx,QWORD PTR [rbp-0x8]
  4341b5:	mov    rax,QWORD PTR [rbp+0x10]
  4341b9:	mov    rsi,rcx
  4341bc:	mov    rdi,rdx
  4341bf:	call   rax
  4341c1:	mov    rax,QWORD PTR [rbp-0x8]
  4341c5:	movzx  eax,BYTE PTR [rax+0x31]
  4341c9:	test   al,al
  4341cb:	je     434201 <flatcc_json_printer_embedded_struct_field@@Base+0xd9>
  4341cd:	mov    rax,QWORD PTR [rbp-0x8]
  4341d1:	mov    rax,QWORD PTR [rax+0x28]
  4341d5:	lea    rcx,[rax+0x1]
  4341d9:	mov    rdx,QWORD PTR [rbp-0x8]
  4341dd:	mov    QWORD PTR [rdx+0x28],rcx
  4341e1:	mov    BYTE PTR [rax],0xa
  4341e4:	mov    rax,QWORD PTR [rbp-0x8]
  4341e8:	mov    eax,DWORD PTR [rax+0x38]
  4341eb:	lea    edx,[rax-0x1]
  4341ee:	mov    rax,QWORD PTR [rbp-0x8]
  4341f2:	mov    DWORD PTR [rax+0x38],edx
  4341f5:	mov    rax,QWORD PTR [rbp-0x8]
  4341f9:	mov    rdi,rax
  4341fc:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  434201:	mov    rax,QWORD PTR [rbp-0x8]
  434205:	mov    rax,QWORD PTR [rax+0x28]
  434209:	lea    rcx,[rax+0x1]
  43420d:	mov    rdx,QWORD PTR [rbp-0x8]
  434211:	mov    QWORD PTR [rdx+0x28],rcx
  434215:	mov    BYTE PTR [rax],0x7d
  434218:	nop
  434219:	leave  
  43421a:	ret    

000000000043421b <flatcc_json_printer_struct_field@@Base>:
  43421b:	push   rbp
  43421c:	mov    rbp,rsp
  43421f:	sub    rsp,0x40
  434223:	mov    QWORD PTR [rbp-0x18],rdi
  434227:	mov    QWORD PTR [rbp-0x20],rsi
  43422b:	mov    DWORD PTR [rbp-0x24],edx
  43422e:	mov    QWORD PTR [rbp-0x30],rcx
  434232:	mov    DWORD PTR [rbp-0x28],r8d
  434236:	mov    QWORD PTR [rbp-0x38],r9
  43423a:	mov    edx,DWORD PTR [rbp-0x24]
  43423d:	mov    rax,QWORD PTR [rbp-0x20]
  434241:	mov    esi,edx
  434243:	mov    rdi,rax
  434246:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  43424b:	mov    QWORD PTR [rbp-0x8],rax
  43424f:	cmp    QWORD PTR [rbp-0x8],0x0
  434254:	je     434332 <flatcc_json_printer_struct_field@@Base+0x117>
  43425a:	mov    rax,QWORD PTR [rbp-0x20]
  43425e:	mov    eax,DWORD PTR [rax+0x18]
  434261:	lea    ecx,[rax+0x1]
  434264:	mov    rdx,QWORD PTR [rbp-0x20]
  434268:	mov    DWORD PTR [rdx+0x18],ecx
  43426b:	test   eax,eax
  43426d:	je     434286 <flatcc_json_printer_struct_field@@Base+0x6b>
  43426f:	mov    rax,QWORD PTR [rbp-0x18]
  434273:	mov    rax,QWORD PTR [rax+0x28]
  434277:	lea    rcx,[rax+0x1]
  43427b:	mov    rdx,QWORD PTR [rbp-0x18]
  43427f:	mov    QWORD PTR [rdx+0x28],rcx
  434283:	mov    BYTE PTR [rax],0x2c
  434286:	mov    eax,DWORD PTR [rbp-0x28]
  434289:	movsxd rdx,eax
  43428c:	mov    rcx,QWORD PTR [rbp-0x30]
  434290:	mov    rax,QWORD PTR [rbp-0x18]
  434294:	mov    rsi,rcx
  434297:	mov    rdi,rax
  43429a:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  43429f:	mov    rax,QWORD PTR [rbp-0x18]
  4342a3:	mov    eax,DWORD PTR [rax+0x38]
  4342a6:	lea    edx,[rax+0x1]
  4342a9:	mov    rax,QWORD PTR [rbp-0x18]
  4342ad:	mov    DWORD PTR [rax+0x38],edx
  4342b0:	mov    rax,QWORD PTR [rbp-0x18]
  4342b4:	mov    rax,QWORD PTR [rax+0x28]
  4342b8:	lea    rcx,[rax+0x1]
  4342bc:	mov    rdx,QWORD PTR [rbp-0x18]
  4342c0:	mov    QWORD PTR [rdx+0x28],rcx
  4342c4:	mov    BYTE PTR [rax],0x7b
  4342c7:	mov    rcx,QWORD PTR [rbp-0x8]
  4342cb:	mov    rdx,QWORD PTR [rbp-0x18]
  4342cf:	mov    rax,QWORD PTR [rbp-0x38]
  4342d3:	mov    rsi,rcx
  4342d6:	mov    rdi,rdx
  4342d9:	call   rax
  4342db:	mov    rax,QWORD PTR [rbp-0x18]
  4342df:	movzx  eax,BYTE PTR [rax+0x31]
  4342e3:	test   al,al
  4342e5:	je     43431b <flatcc_json_printer_struct_field@@Base+0x100>
  4342e7:	mov    rax,QWORD PTR [rbp-0x18]
  4342eb:	mov    rax,QWORD PTR [rax+0x28]
  4342ef:	lea    rcx,[rax+0x1]
  4342f3:	mov    rdx,QWORD PTR [rbp-0x18]
  4342f7:	mov    QWORD PTR [rdx+0x28],rcx
  4342fb:	mov    BYTE PTR [rax],0xa
  4342fe:	mov    rax,QWORD PTR [rbp-0x18]
  434302:	mov    eax,DWORD PTR [rax+0x38]
  434305:	lea    edx,[rax-0x1]
  434308:	mov    rax,QWORD PTR [rbp-0x18]
  43430c:	mov    DWORD PTR [rax+0x38],edx
  43430f:	mov    rax,QWORD PTR [rbp-0x18]
  434313:	mov    rdi,rax
  434316:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43431b:	mov    rax,QWORD PTR [rbp-0x18]
  43431f:	mov    rax,QWORD PTR [rax+0x28]
  434323:	lea    rcx,[rax+0x1]
  434327:	mov    rdx,QWORD PTR [rbp-0x18]
  43432b:	mov    QWORD PTR [rdx+0x28],rcx
  43432f:	mov    BYTE PTR [rax],0x7d
  434332:	nop
  434333:	leave  
  434334:	ret    
  434335:	push   rbp
  434336:	mov    rbp,rsp
  434339:	sub    rsp,0x30
  43433d:	mov    QWORD PTR [rbp-0x18],rdi
  434341:	mov    QWORD PTR [rbp-0x20],rsi
  434345:	mov    QWORD PTR [rbp-0x28],rdx
  434349:	mov    QWORD PTR [rbp-0x30],rcx
  43434d:	mov    rax,QWORD PTR fs:0x28
  434356:	mov    QWORD PTR [rbp-0x8],rax
  43435a:	xor    eax,eax
  43435c:	mov    DWORD PTR [rbp-0x10],0x0
  434363:	cmp    QWORD PTR [rbp-0x20],0x0
  434368:	je     434371 <flatcc_json_printer_struct_field@@Base+0x156>
  43436a:	cmp    QWORD PTR [rbp-0x28],0x7
  43436f:	ja     4343a1 <flatcc_json_printer_struct_field@@Base+0x186>
  434371:	mov    rax,QWORD PTR [rbp-0x18]
  434375:	mov    esi,0x1
  43437a:	mov    rdi,rax
  43437d:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  434382:	lea    rcx,[rip+0x92ff]        # 43d688 <flatcc_builder_padding_base@@Base+0x3708>
  434389:	mov    edx,0x3fb
  43438e:	lea    rsi,[rip+0x8cb3]        # 43d048 <flatcc_builder_padding_base@@Base+0x30c8>
  434395:	lea    rdi,[rip+0x8d3c]        # 43d0d8 <flatcc_builder_padding_base@@Base+0x3158>
  43439c:	call   405080 <__assert_fail@plt>
  4343a1:	cmp    QWORD PTR [rbp-0x30],0x0
  4343a6:	je     43441f <flatcc_json_printer_struct_field@@Base+0x204>
  4343a8:	mov    rcx,QWORD PTR [rbp-0x30]
  4343ac:	lea    rax,[rbp-0x10]
  4343b0:	mov    edx,0x4
  4343b5:	mov    rsi,rcx
  4343b8:	mov    rdi,rax
  4343bb:	call   405040 <strncpy@plt>
  4343c0:	mov    eax,DWORD PTR [rbp-0x10]
  4343c3:	mov    edi,eax
  4343c5:	call   4295c1 <flatcc_json_parser_struct_as_root@@Base+0x418>
  4343ca:	mov    DWORD PTR [rbp-0x10],eax
  4343cd:	mov    rax,QWORD PTR [rbp-0x20]
  4343d1:	add    rax,0x4
  4343d5:	mov    rdi,rax
  4343d8:	call   4295cd <flatcc_json_parser_struct_as_root@@Base+0x424>
  4343dd:	mov    DWORD PTR [rbp-0xc],eax
  4343e0:	mov    eax,DWORD PTR [rbp-0x10]
  4343e3:	test   eax,eax
  4343e5:	je     43441f <flatcc_json_printer_struct_field@@Base+0x204>
  4343e7:	mov    eax,DWORD PTR [rbp-0x10]
  4343ea:	cmp    DWORD PTR [rbp-0xc],eax
  4343ed:	je     43441f <flatcc_json_printer_struct_field@@Base+0x204>
  4343ef:	mov    rax,QWORD PTR [rbp-0x18]
  4343f3:	mov    esi,0x1
  4343f8:	mov    rdi,rax
  4343fb:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  434400:	lea    rcx,[rip+0x9281]        # 43d688 <flatcc_builder_padding_base@@Base+0x3708>
  434407:	mov    edx,0x404
  43440c:	lea    rsi,[rip+0x8c35]        # 43d048 <flatcc_builder_padding_base@@Base+0x30c8>
  434413:	lea    rdi,[rip+0x8cdd]        # 43d0f7 <flatcc_builder_padding_base@@Base+0x3177>
  43441a:	call   405080 <__assert_fail@plt>
  43441f:	mov    eax,0x1
  434424:	mov    rdx,QWORD PTR [rbp-0x8]
  434428:	xor    rdx,QWORD PTR fs:0x28
  434431:	je     434438 <flatcc_json_printer_struct_field@@Base+0x21d>
  434433:	call   405070 <__stack_chk_fail@plt>
  434438:	leave  
  434439:	ret    

000000000043443a <flatcc_json_printer_struct_as_root@@Base>:
  43443a:	push   rbp
  43443b:	mov    rbp,rsp
  43443e:	sub    rsp,0x30
  434442:	mov    QWORD PTR [rbp-0x8],rdi
  434446:	mov    QWORD PTR [rbp-0x10],rsi
  43444a:	mov    QWORD PTR [rbp-0x18],rdx
  43444e:	mov    QWORD PTR [rbp-0x20],rcx
  434452:	mov    QWORD PTR [rbp-0x28],r8
  434456:	mov    rcx,QWORD PTR [rbp-0x20]
  43445a:	mov    rdx,QWORD PTR [rbp-0x18]
  43445e:	mov    rsi,QWORD PTR [rbp-0x10]
  434462:	mov    rax,QWORD PTR [rbp-0x8]
  434466:	mov    rdi,rax
  434469:	call   434335 <flatcc_json_printer_struct_field@@Base+0x11a>
  43446e:	test   eax,eax
  434470:	jne    43447c <flatcc_json_printer_struct_as_root@@Base+0x42>
  434472:	mov    eax,0xffffffff
  434477:	jmp    434599 <flatcc_json_printer_struct_as_root@@Base+0x15f>
  43447c:	mov    rax,QWORD PTR [rbp-0x8]
  434480:	mov    eax,DWORD PTR [rax+0x38]
  434483:	lea    edx,[rax+0x1]
  434486:	mov    rax,QWORD PTR [rbp-0x8]
  43448a:	mov    DWORD PTR [rax+0x38],edx
  43448d:	mov    rax,QWORD PTR [rbp-0x8]
  434491:	mov    rax,QWORD PTR [rax+0x28]
  434495:	lea    rcx,[rax+0x1]
  434499:	mov    rdx,QWORD PTR [rbp-0x8]
  43449d:	mov    QWORD PTR [rdx+0x28],rcx
  4344a1:	mov    BYTE PTR [rax],0x7b
  4344a4:	mov    rax,QWORD PTR [rbp-0x10]
  4344a8:	mov    rdi,rax
  4344ab:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4344b0:	mov    rcx,rax
  4344b3:	mov    rdx,QWORD PTR [rbp-0x8]
  4344b7:	mov    rax,QWORD PTR [rbp-0x28]
  4344bb:	mov    rsi,rcx
  4344be:	mov    rdi,rdx
  4344c1:	call   rax
  4344c3:	mov    rax,QWORD PTR [rbp-0x8]
  4344c7:	movzx  eax,BYTE PTR [rax+0x31]
  4344cb:	test   al,al
  4344cd:	je     434503 <flatcc_json_printer_struct_as_root@@Base+0xc9>
  4344cf:	mov    rax,QWORD PTR [rbp-0x8]
  4344d3:	mov    rax,QWORD PTR [rax+0x28]
  4344d7:	lea    rcx,[rax+0x1]
  4344db:	mov    rdx,QWORD PTR [rbp-0x8]
  4344df:	mov    QWORD PTR [rdx+0x28],rcx
  4344e3:	mov    BYTE PTR [rax],0xa
  4344e6:	mov    rax,QWORD PTR [rbp-0x8]
  4344ea:	mov    eax,DWORD PTR [rax+0x38]
  4344ed:	lea    edx,[rax-0x1]
  4344f0:	mov    rax,QWORD PTR [rbp-0x8]
  4344f4:	mov    DWORD PTR [rax+0x38],edx
  4344f7:	mov    rax,QWORD PTR [rbp-0x8]
  4344fb:	mov    rdi,rax
  4344fe:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  434503:	mov    rax,QWORD PTR [rbp-0x8]
  434507:	mov    rax,QWORD PTR [rax+0x28]
  43450b:	lea    rcx,[rax+0x1]
  43450f:	mov    rdx,QWORD PTR [rbp-0x8]
  434513:	mov    QWORD PTR [rdx+0x28],rcx
  434517:	mov    BYTE PTR [rax],0x7d
  43451a:	mov    rax,QWORD PTR [rbp-0x8]
  43451e:	movzx  eax,BYTE PTR [rax+0x31]
  434522:	test   al,al
  434524:	je     434548 <flatcc_json_printer_struct_as_root@@Base+0x10e>
  434526:	mov    rax,QWORD PTR [rbp-0x8]
  43452a:	mov    eax,DWORD PTR [rax+0x38]
  43452d:	test   eax,eax
  43452f:	jne    434548 <flatcc_json_printer_struct_as_root@@Base+0x10e>
  434531:	mov    rax,QWORD PTR [rbp-0x8]
  434535:	mov    rax,QWORD PTR [rax+0x28]
  434539:	lea    rcx,[rax+0x1]
  43453d:	mov    rdx,QWORD PTR [rbp-0x8]
  434541:	mov    QWORD PTR [rdx+0x28],rcx
  434545:	mov    BYTE PTR [rax],0xa
  434548:	mov    rax,QWORD PTR [rbp-0x8]
  43454c:	mov    rax,QWORD PTR [rax+0x48]
  434550:	mov    rdx,QWORD PTR [rbp-0x8]
  434554:	mov    esi,0x1
  434559:	mov    rdi,rdx
  43455c:	call   rax
  43455e:	mov    rax,QWORD PTR [rbp-0x8]
  434562:	mov    rdi,rax
  434565:	call   42960b <flatcc_json_parser_struct_as_root@@Base+0x462>
  43456a:	test   eax,eax
  43456c:	jne    434594 <flatcc_json_printer_struct_as_root@@Base+0x15a>
  43456e:	mov    rax,QWORD PTR [rbp-0x8]
  434572:	mov    rax,QWORD PTR [rax+0x18]
  434576:	mov    edx,eax
  434578:	mov    rax,QWORD PTR [rbp-0x8]
  43457c:	mov    rax,QWORD PTR [rax+0x28]
  434580:	mov    rcx,rax
  434583:	mov    rax,QWORD PTR [rbp-0x8]
  434587:	mov    rax,QWORD PTR [rax]
  43458a:	sub    rcx,rax
  43458d:	mov    rax,rcx
  434590:	add    eax,edx
  434592:	jmp    434599 <flatcc_json_printer_struct_as_root@@Base+0x15f>
  434594:	mov    eax,0xffffffff
  434599:	leave  
  43459a:	ret    

000000000043459b <flatcc_json_printer_table_as_root@@Base>:
  43459b:	push   rbp
  43459c:	mov    rbp,rsp
  43459f:	sub    rsp,0x30
  4345a3:	mov    QWORD PTR [rbp-0x8],rdi
  4345a7:	mov    QWORD PTR [rbp-0x10],rsi
  4345ab:	mov    QWORD PTR [rbp-0x18],rdx
  4345af:	mov    QWORD PTR [rbp-0x20],rcx
  4345b3:	mov    QWORD PTR [rbp-0x28],r8
  4345b7:	mov    rcx,QWORD PTR [rbp-0x20]
  4345bb:	mov    rdx,QWORD PTR [rbp-0x18]
  4345bf:	mov    rsi,QWORD PTR [rbp-0x10]
  4345c3:	mov    rax,QWORD PTR [rbp-0x8]
  4345c7:	mov    rdi,rax
  4345ca:	call   434335 <flatcc_json_printer_struct_field@@Base+0x11a>
  4345cf:	test   eax,eax
  4345d1:	jne    4345dd <flatcc_json_printer_table_as_root@@Base+0x42>
  4345d3:	mov    eax,0xffffffff
  4345d8:	jmp    434683 <flatcc_json_printer_table_as_root@@Base+0xe8>
  4345dd:	mov    rax,QWORD PTR [rbp-0x10]
  4345e1:	mov    rdi,rax
  4345e4:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4345e9:	mov    rsi,rax
  4345ec:	mov    rdx,QWORD PTR [rbp-0x28]
  4345f0:	mov    rax,QWORD PTR [rbp-0x8]
  4345f4:	mov    rcx,rdx
  4345f7:	mov    edx,0x64
  4345fc:	mov    rdi,rax
  4345ff:	call   42d72d <flatcc_json_printer_enum_flag@@Base+0xa2>
  434604:	mov    rax,QWORD PTR [rbp-0x8]
  434608:	movzx  eax,BYTE PTR [rax+0x31]
  43460c:	test   al,al
  43460e:	je     434632 <flatcc_json_printer_table_as_root@@Base+0x97>
  434610:	mov    rax,QWORD PTR [rbp-0x8]
  434614:	mov    eax,DWORD PTR [rax+0x38]
  434617:	test   eax,eax
  434619:	jne    434632 <flatcc_json_printer_table_as_root@@Base+0x97>
  43461b:	mov    rax,QWORD PTR [rbp-0x8]
  43461f:	mov    rax,QWORD PTR [rax+0x28]
  434623:	lea    rcx,[rax+0x1]
  434627:	mov    rdx,QWORD PTR [rbp-0x8]
  43462b:	mov    QWORD PTR [rdx+0x28],rcx
  43462f:	mov    BYTE PTR [rax],0xa
  434632:	mov    rax,QWORD PTR [rbp-0x8]
  434636:	mov    rax,QWORD PTR [rax+0x48]
  43463a:	mov    rdx,QWORD PTR [rbp-0x8]
  43463e:	mov    esi,0x1
  434643:	mov    rdi,rdx
  434646:	call   rax
  434648:	mov    rax,QWORD PTR [rbp-0x8]
  43464c:	mov    rdi,rax
  43464f:	call   42960b <flatcc_json_parser_struct_as_root@@Base+0x462>
  434654:	test   eax,eax
  434656:	jne    43467e <flatcc_json_printer_table_as_root@@Base+0xe3>
  434658:	mov    rax,QWORD PTR [rbp-0x8]
  43465c:	mov    rax,QWORD PTR [rax+0x18]
  434660:	mov    edx,eax
  434662:	mov    rax,QWORD PTR [rbp-0x8]
  434666:	mov    rax,QWORD PTR [rax+0x28]
  43466a:	mov    rcx,rax
  43466d:	mov    rax,QWORD PTR [rbp-0x8]
  434671:	mov    rax,QWORD PTR [rax]
  434674:	sub    rcx,rax
  434677:	mov    rax,rcx
  43467a:	add    eax,edx
  43467c:	jmp    434683 <flatcc_json_printer_table_as_root@@Base+0xe8>
  43467e:	mov    eax,0xffffffff
  434683:	leave  
  434684:	ret    

0000000000434685 <flatcc_json_printer_struct_as_nested_root@@Base>:
  434685:	push   rbp
  434686:	mov    rbp,rsp
  434689:	sub    rsp,0x40
  43468d:	mov    QWORD PTR [rbp-0x18],rdi
  434691:	mov    QWORD PTR [rbp-0x20],rsi
  434695:	mov    DWORD PTR [rbp-0x24],edx
  434698:	mov    QWORD PTR [rbp-0x30],rcx
  43469c:	mov    DWORD PTR [rbp-0x28],r8d
  4346a0:	mov    QWORD PTR [rbp-0x38],r9
  4346a4:	mov    edx,DWORD PTR [rbp-0x24]
  4346a7:	mov    rax,QWORD PTR [rbp-0x20]
  4346ab:	mov    esi,edx
  4346ad:	mov    rdi,rax
  4346b0:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  4346b5:	mov    QWORD PTR [rbp-0x8],rax
  4346b9:	cmp    QWORD PTR [rbp-0x8],0x0
  4346be:	je     4347f0 <flatcc_json_printer_struct_as_nested_root@@Base+0x16b>
  4346c4:	mov    rax,QWORD PTR [rbp-0x8]
  4346c8:	mov    rdi,rax
  4346cb:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4346d0:	mov    edx,eax
  4346d2:	mov    rax,QWORD PTR [rbp-0x8]
  4346d6:	add    rax,rdx
  4346d9:	mov    QWORD PTR [rbp-0x8],rax
  4346dd:	mov    rax,QWORD PTR [rbp-0x8]
  4346e1:	mov    rdi,rax
  4346e4:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4346e9:	mov    DWORD PTR [rbp-0xc],eax
  4346ec:	mov    edx,DWORD PTR [rbp-0xc]
  4346ef:	mov    rcx,QWORD PTR [rbp-0x38]
  4346f3:	mov    rsi,QWORD PTR [rbp-0x8]
  4346f7:	mov    rax,QWORD PTR [rbp-0x18]
  4346fb:	mov    rdi,rax
  4346fe:	call   434335 <flatcc_json_printer_struct_field@@Base+0x11a>
  434703:	test   eax,eax
  434705:	je     4347f3 <flatcc_json_printer_struct_as_nested_root@@Base+0x16e>
  43470b:	mov    rax,QWORD PTR [rbp-0x20]
  43470f:	mov    eax,DWORD PTR [rax+0x18]
  434712:	lea    ecx,[rax+0x1]
  434715:	mov    rdx,QWORD PTR [rbp-0x20]
  434719:	mov    DWORD PTR [rdx+0x18],ecx
  43471c:	test   eax,eax
  43471e:	je     434737 <flatcc_json_printer_struct_as_nested_root@@Base+0xb2>
  434720:	mov    rax,QWORD PTR [rbp-0x18]
  434724:	mov    rax,QWORD PTR [rax+0x28]
  434728:	lea    rcx,[rax+0x1]
  43472c:	mov    rdx,QWORD PTR [rbp-0x18]
  434730:	mov    QWORD PTR [rdx+0x28],rcx
  434734:	mov    BYTE PTR [rax],0x2c
  434737:	mov    eax,DWORD PTR [rbp-0x28]
  43473a:	movsxd rdx,eax
  43473d:	mov    rcx,QWORD PTR [rbp-0x30]
  434741:	mov    rax,QWORD PTR [rbp-0x18]
  434745:	mov    rsi,rcx
  434748:	mov    rdi,rax
  43474b:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  434750:	mov    rax,QWORD PTR [rbp-0x18]
  434754:	mov    eax,DWORD PTR [rax+0x38]
  434757:	lea    edx,[rax+0x1]
  43475a:	mov    rax,QWORD PTR [rbp-0x18]
  43475e:	mov    DWORD PTR [rax+0x38],edx
  434761:	mov    rax,QWORD PTR [rbp-0x18]
  434765:	mov    rax,QWORD PTR [rax+0x28]
  434769:	lea    rcx,[rax+0x1]
  43476d:	mov    rdx,QWORD PTR [rbp-0x18]
  434771:	mov    QWORD PTR [rdx+0x28],rcx
  434775:	mov    BYTE PTR [rax],0x7b
  434778:	mov    rax,QWORD PTR [rbp-0x8]
  43477c:	mov    rdi,rax
  43477f:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  434784:	mov    rcx,rax
  434787:	mov    rdx,QWORD PTR [rbp-0x18]
  43478b:	mov    rax,QWORD PTR [rbp+0x10]
  43478f:	mov    rsi,rcx
  434792:	mov    rdi,rdx
  434795:	call   rax
  434797:	mov    rax,QWORD PTR [rbp-0x18]
  43479b:	movzx  eax,BYTE PTR [rax+0x31]
  43479f:	test   al,al
  4347a1:	je     4347d7 <flatcc_json_printer_struct_as_nested_root@@Base+0x152>
  4347a3:	mov    rax,QWORD PTR [rbp-0x18]
  4347a7:	mov    rax,QWORD PTR [rax+0x28]
  4347ab:	lea    rcx,[rax+0x1]
  4347af:	mov    rdx,QWORD PTR [rbp-0x18]
  4347b3:	mov    QWORD PTR [rdx+0x28],rcx
  4347b7:	mov    BYTE PTR [rax],0xa
  4347ba:	mov    rax,QWORD PTR [rbp-0x18]
  4347be:	mov    eax,DWORD PTR [rax+0x38]
  4347c1:	lea    edx,[rax-0x1]
  4347c4:	mov    rax,QWORD PTR [rbp-0x18]
  4347c8:	mov    DWORD PTR [rax+0x38],edx
  4347cb:	mov    rax,QWORD PTR [rbp-0x18]
  4347cf:	mov    rdi,rax
  4347d2:	call   42d058 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4347d7:	mov    rax,QWORD PTR [rbp-0x18]
  4347db:	mov    rax,QWORD PTR [rax+0x28]
  4347df:	lea    rcx,[rax+0x1]
  4347e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4347e7:	mov    QWORD PTR [rdx+0x28],rcx
  4347eb:	mov    BYTE PTR [rax],0x7d
  4347ee:	jmp    4347f4 <flatcc_json_printer_struct_as_nested_root@@Base+0x16f>
  4347f0:	nop
  4347f1:	jmp    4347f4 <flatcc_json_printer_struct_as_nested_root@@Base+0x16f>
  4347f3:	nop
  4347f4:	leave  
  4347f5:	ret    

00000000004347f6 <flatcc_json_printer_table_as_nested_root@@Base>:
  4347f6:	push   rbp
  4347f7:	mov    rbp,rsp
  4347fa:	push   rbx
  4347fb:	sub    rsp,0x48
  4347ff:	mov    QWORD PTR [rbp-0x28],rdi
  434803:	mov    QWORD PTR [rbp-0x30],rsi
  434807:	mov    DWORD PTR [rbp-0x34],edx
  43480a:	mov    QWORD PTR [rbp-0x40],rcx
  43480e:	mov    DWORD PTR [rbp-0x38],r8d
  434812:	mov    QWORD PTR [rbp-0x48],r9
  434816:	mov    edx,DWORD PTR [rbp-0x34]
  434819:	mov    rax,QWORD PTR [rbp-0x30]
  43481d:	mov    esi,edx
  43481f:	mov    rdi,rax
  434822:	call   42c7ec <flatcc_json_printer_error_string@@Base+0x99>
  434827:	mov    QWORD PTR [rbp-0x18],rax
  43482b:	cmp    QWORD PTR [rbp-0x18],0x0
  434830:	je     4348ed <flatcc_json_printer_table_as_nested_root@@Base+0xf7>
  434836:	mov    rax,QWORD PTR [rbp-0x18]
  43483a:	mov    rdi,rax
  43483d:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  434842:	mov    edx,eax
  434844:	mov    rax,QWORD PTR [rbp-0x18]
  434848:	add    rax,rdx
  43484b:	mov    QWORD PTR [rbp-0x18],rax
  43484f:	mov    rax,QWORD PTR [rbp-0x18]
  434853:	mov    rdi,rax
  434856:	call   429516 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43485b:	mov    DWORD PTR [rbp-0x1c],eax
  43485e:	add    QWORD PTR [rbp-0x18],0x4
  434863:	mov    edx,DWORD PTR [rbp-0x1c]
  434866:	mov    rcx,QWORD PTR [rbp-0x48]
  43486a:	mov    rsi,QWORD PTR [rbp-0x18]
  43486e:	mov    rax,QWORD PTR [rbp-0x28]
  434872:	mov    rdi,rax
  434875:	call   434335 <flatcc_json_printer_struct_field@@Base+0x11a>
  43487a:	test   eax,eax
  43487c:	je     4348f0 <flatcc_json_printer_table_as_nested_root@@Base+0xfa>
  43487e:	mov    rax,QWORD PTR [rbp-0x30]
  434882:	mov    eax,DWORD PTR [rax+0x18]
  434885:	lea    ecx,[rax+0x1]
  434888:	mov    rdx,QWORD PTR [rbp-0x30]
  43488c:	mov    DWORD PTR [rdx+0x18],ecx
  43488f:	test   eax,eax
  434891:	je     4348aa <flatcc_json_printer_table_as_nested_root@@Base+0xb4>
  434893:	mov    rax,QWORD PTR [rbp-0x28]
  434897:	mov    rax,QWORD PTR [rax+0x28]
  43489b:	lea    rcx,[rax+0x1]
  43489f:	mov    rdx,QWORD PTR [rbp-0x28]
  4348a3:	mov    QWORD PTR [rdx+0x28],rcx
  4348a7:	mov    BYTE PTR [rax],0x2c
  4348aa:	mov    eax,DWORD PTR [rbp-0x38]
  4348ad:	movsxd rdx,eax
  4348b0:	mov    rcx,QWORD PTR [rbp-0x40]
  4348b4:	mov    rax,QWORD PTR [rbp-0x28]
  4348b8:	mov    rsi,rcx
  4348bb:	mov    rdi,rax
  4348be:	call   42d2c4 <flatcc_json_printer_get_level@@Base+0xeb>
  4348c3:	mov    rax,QWORD PTR [rbp-0x30]
  4348c7:	mov    ebx,DWORD PTR [rax+0x14]
  4348ca:	mov    rax,QWORD PTR [rbp-0x18]
  4348ce:	mov    rdi,rax
  4348d1:	call   42c7a6 <flatcc_json_printer_error_string@@Base+0x53>
  4348d6:	mov    rsi,rax
  4348d9:	mov    rax,QWORD PTR [rbp-0x28]
  4348dd:	mov    rcx,QWORD PTR [rbp+0x10]
  4348e1:	mov    edx,ebx
  4348e3:	mov    rdi,rax
  4348e6:	call   42d72d <flatcc_json_printer_enum_flag@@Base+0xa2>
  4348eb:	jmp    4348f1 <flatcc_json_printer_table_as_nested_root@@Base+0xfb>
  4348ed:	nop
  4348ee:	jmp    4348f1 <flatcc_json_printer_table_as_nested_root@@Base+0xfb>
  4348f0:	nop
  4348f1:	add    rsp,0x48
  4348f5:	pop    rbx
  4348f6:	pop    rbp
  4348f7:	ret    
  4348f8:	push   rbp
  4348f9:	mov    rbp,rsp
  4348fc:	sub    rsp,0x20
  434900:	mov    QWORD PTR [rbp-0x18],rdi
  434904:	mov    DWORD PTR [rbp-0x1c],esi
  434907:	cmp    DWORD PTR [rbp-0x1c],0x0
  43490b:	jne    4349ca <flatcc_json_printer_table_as_nested_root@@Base+0x1d4>
  434911:	mov    rax,QWORD PTR [rbp-0x18]
  434915:	mov    rdx,QWORD PTR [rax+0x28]
  434919:	mov    rax,QWORD PTR [rbp-0x18]
  43491d:	mov    rax,QWORD PTR [rax+0x20]
  434921:	cmp    rdx,rax
  434924:	jb     4349ca <flatcc_json_printer_table_as_nested_root@@Base+0x1d4>
  43492a:	mov    rax,QWORD PTR [rbp-0x18]
  43492e:	mov    rax,QWORD PTR [rax+0x28]
  434932:	mov    rdx,rax
  434935:	mov    rax,QWORD PTR [rbp-0x18]
  434939:	mov    rax,QWORD PTR [rax+0x20]
  43493d:	sub    rdx,rax
  434940:	mov    rax,rdx
  434943:	mov    QWORD PTR [rbp-0x10],rax
  434947:	mov    rax,QWORD PTR [rbp-0x18]
  43494b:	mov    rdx,QWORD PTR [rax+0x40]
  43494f:	mov    rax,QWORD PTR [rbp-0x18]
  434953:	mov    rsi,QWORD PTR [rax+0x10]
  434957:	mov    rax,QWORD PTR [rbp-0x18]
  43495b:	mov    rax,QWORD PTR [rax]
  43495e:	mov    rcx,rdx
  434961:	mov    edx,0x1
  434966:	mov    rdi,rax
  434969:	call   405140 <fwrite@plt>
  43496e:	mov    rax,QWORD PTR [rbp-0x18]
  434972:	mov    rdx,QWORD PTR [rax]
  434975:	mov    rax,QWORD PTR [rbp-0x18]
  434979:	mov    rax,QWORD PTR [rax+0x10]
  43497d:	lea    rcx,[rdx+rax*1]
  434981:	mov    rax,QWORD PTR [rbp-0x18]
  434985:	mov    rax,QWORD PTR [rax]
  434988:	mov    rdx,QWORD PTR [rbp-0x10]
  43498c:	mov    rsi,rcx
  43498f:	mov    rdi,rax
  434992:	call   4050f0 <memcpy@plt>
  434997:	mov    rax,QWORD PTR [rbp-0x18]
  43499b:	mov    rdx,QWORD PTR [rax]
  43499e:	mov    rax,QWORD PTR [rbp-0x10]
  4349a2:	add    rdx,rax
  4349a5:	mov    rax,QWORD PTR [rbp-0x18]
  4349a9:	mov    QWORD PTR [rax+0x28],rdx
  4349ad:	mov    rax,QWORD PTR [rbp-0x18]
  4349b1:	mov    rdx,QWORD PTR [rax+0x18]
  4349b5:	mov    rax,QWORD PTR [rbp-0x18]
  4349b9:	mov    rax,QWORD PTR [rax+0x10]
  4349bd:	add    rdx,rax
  4349c0:	mov    rax,QWORD PTR [rbp-0x18]
  4349c4:	mov    QWORD PTR [rax+0x18],rdx
  4349c8:	jmp    434a2f <flatcc_json_printer_table_as_nested_root@@Base+0x239>
  4349ca:	mov    rax,QWORD PTR [rbp-0x18]
  4349ce:	mov    rax,QWORD PTR [rax+0x28]
  4349d2:	mov    rdx,rax
  4349d5:	mov    rax,QWORD PTR [rbp-0x18]
  4349d9:	mov    rax,QWORD PTR [rax]
  4349dc:	sub    rdx,rax
  4349df:	mov    rax,rdx
  4349e2:	mov    QWORD PTR [rbp-0x8],rax
  4349e6:	mov    rax,QWORD PTR [rbp-0x18]
  4349ea:	mov    rdx,QWORD PTR [rax+0x40]
  4349ee:	mov    rax,QWORD PTR [rbp-0x18]
  4349f2:	mov    rax,QWORD PTR [rax]
  4349f5:	mov    rsi,QWORD PTR [rbp-0x8]
  4349f9:	mov    rcx,rdx
  4349fc:	mov    edx,0x1
  434a01:	mov    rdi,rax
  434a04:	call   405140 <fwrite@plt>
  434a09:	mov    rax,QWORD PTR [rbp-0x18]
  434a0d:	mov    rdx,QWORD PTR [rax]
  434a10:	mov    rax,QWORD PTR [rbp-0x18]
  434a14:	mov    QWORD PTR [rax+0x28],rdx
  434a18:	mov    rax,QWORD PTR [rbp-0x18]
  434a1c:	mov    rdx,QWORD PTR [rax+0x18]
  434a20:	mov    rax,QWORD PTR [rbp-0x8]
  434a24:	add    rdx,rax
  434a27:	mov    rax,QWORD PTR [rbp-0x18]
  434a2b:	mov    QWORD PTR [rax+0x18],rdx
  434a2f:	mov    rax,QWORD PTR [rbp-0x18]
  434a33:	mov    rax,QWORD PTR [rax+0x28]
  434a37:	mov    BYTE PTR [rax],0x0
  434a3a:	nop
  434a3b:	leave  
  434a3c:	ret    

0000000000434a3d <flatcc_json_printer_init@@Base>:
  434a3d:	push   rbp
  434a3e:	mov    rbp,rsp
  434a41:	sub    rsp,0x10
  434a45:	mov    QWORD PTR [rbp-0x8],rdi
  434a49:	mov    QWORD PTR [rbp-0x10],rsi
  434a4d:	mov    rax,QWORD PTR [rbp-0x8]
  434a51:	mov    edx,0x50
  434a56:	mov    esi,0x0
  434a5b:	mov    rdi,rax
  434a5e:	call   405090 <memset@plt>
  434a63:	cmp    QWORD PTR [rbp-0x10],0x0
  434a68:	je     434a70 <flatcc_json_printer_init@@Base+0x33>
  434a6a:	mov    rax,QWORD PTR [rbp-0x10]
  434a6e:	jmp    434a7a <flatcc_json_printer_init@@Base+0x3d>
  434a70:	mov    rax,QWORD PTR [rip+0x11559]        # 445fd0 <stdout@GLIBC_2.2.5>
  434a77:	mov    rax,QWORD PTR [rax]
  434a7a:	mov    rdx,QWORD PTR [rbp-0x8]
  434a7e:	mov    QWORD PTR [rdx+0x40],rax
  434a82:	mov    rax,QWORD PTR [rbp-0x8]
  434a86:	lea    rdx,[rip+0xfffffffffffffe6b]        # 4348f8 <flatcc_json_printer_table_as_nested_root@@Base+0x102>
  434a8d:	mov    QWORD PTR [rax+0x48],rdx
  434a91:	mov    edi,0x4040
  434a96:	call   405100 <malloc@plt>
  434a9b:	mov    rdx,rax
  434a9e:	mov    rax,QWORD PTR [rbp-0x8]
  434aa2:	mov    QWORD PTR [rax],rdx
  434aa5:	mov    rax,QWORD PTR [rbp-0x8]
  434aa9:	mov    rax,QWORD PTR [rax]
  434aac:	test   rax,rax
  434aaf:	jne    434abb <flatcc_json_printer_init@@Base+0x7e>
  434ab1:	mov    eax,0xffffffff
  434ab6:	jmp    434b41 <flatcc_json_printer_init@@Base+0x104>
  434abb:	mov    rax,QWORD PTR [rbp-0x8]
  434abf:	mov    BYTE PTR [rax+0x30],0x1
  434ac3:	mov    rax,QWORD PTR [rbp-0x8]
  434ac7:	mov    QWORD PTR [rax+0x8],0x4040
  434acf:	mov    rax,QWORD PTR [rbp-0x8]
  434ad3:	mov    QWORD PTR [rax+0x10],0x4000
  434adb:	mov    rax,QWORD PTR [rbp-0x8]
  434adf:	mov    rdx,QWORD PTR [rax]
  434ae2:	mov    rax,QWORD PTR [rbp-0x8]
  434ae6:	mov    QWORD PTR [rax+0x28],rdx
  434aea:	mov    rax,QWORD PTR [rbp-0x8]
  434aee:	mov    rdx,QWORD PTR [rax]
  434af1:	mov    rax,QWORD PTR [rbp-0x8]
  434af5:	mov    rax,QWORD PTR [rax+0x10]
  434af9:	add    rdx,rax
  434afc:	mov    rax,QWORD PTR [rbp-0x8]
  434b00:	mov    QWORD PTR [rax+0x20],rdx
  434b04:	mov    rax,QWORD PTR [rbp-0x8]
  434b08:	mov    rax,QWORD PTR [rax+0x10]
  434b0c:	lea    rdx,[rax+0x40]
  434b10:	mov    rax,QWORD PTR [rbp-0x8]
  434b14:	mov    rax,QWORD PTR [rax+0x8]
  434b18:	cmp    rdx,rax
  434b1b:	jbe    434b3c <flatcc_json_printer_init@@Base+0xff>
  434b1d:	lea    rcx,[rip+0x8b7c]        # 43d6a0 <flatcc_builder_padding_base@@Base+0x3720>
  434b24:	mov    edx,0x47b
  434b29:	lea    rsi,[rip+0x8518]        # 43d048 <flatcc_builder_padding_base@@Base+0x30c8>
  434b30:	lea    rdi,[rip+0x85e1]        # 43d118 <flatcc_builder_padding_base@@Base+0x3198>
  434b37:	call   405080 <__assert_fail@plt>
  434b3c:	mov    eax,0x0
  434b41:	leave  
  434b42:	ret    
  434b43:	push   rbp
  434b44:	mov    rbp,rsp
  434b47:	sub    rsp,0x10
  434b4b:	mov    QWORD PTR [rbp-0x8],rdi
  434b4f:	mov    DWORD PTR [rbp-0xc],esi
  434b52:	mov    rax,QWORD PTR [rbp-0x8]
  434b56:	mov    rdx,QWORD PTR [rax+0x28]
  434b5a:	mov    rax,QWORD PTR [rbp-0x8]
  434b5e:	mov    rax,QWORD PTR [rax+0x20]
  434b62:	cmp    rdx,rax
  434b65:	jb     434bb2 <flatcc_json_printer_init@@Base+0x175>
  434b67:	mov    rax,QWORD PTR [rbp-0x8]
  434b6b:	mov    esi,0x3
  434b70:	mov    rdi,rax
  434b73:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  434b78:	mov    rax,QWORD PTR [rbp-0x8]
  434b7c:	mov    rdx,QWORD PTR [rax+0x18]
  434b80:	mov    rax,QWORD PTR [rbp-0x8]
  434b84:	mov    rax,QWORD PTR [rax+0x28]
  434b88:	mov    rcx,rax
  434b8b:	mov    rax,QWORD PTR [rbp-0x8]
  434b8f:	mov    rax,QWORD PTR [rax]
  434b92:	sub    rcx,rax
  434b95:	mov    rax,rcx
  434b98:	add    rdx,rax
  434b9b:	mov    rax,QWORD PTR [rbp-0x8]
  434b9f:	mov    QWORD PTR [rax+0x18],rdx
  434ba3:	mov    rax,QWORD PTR [rbp-0x8]
  434ba7:	mov    rdx,QWORD PTR [rax]
  434baa:	mov    rax,QWORD PTR [rbp-0x8]
  434bae:	mov    QWORD PTR [rax+0x28],rdx
  434bb2:	mov    rax,QWORD PTR [rbp-0x8]
  434bb6:	mov    rax,QWORD PTR [rax+0x28]
  434bba:	mov    BYTE PTR [rax],0x0
  434bbd:	nop
  434bbe:	leave  
  434bbf:	ret    

0000000000434bc0 <flatcc_json_printer_init_buffer@@Base>:
  434bc0:	push   rbp
  434bc1:	mov    rbp,rsp
  434bc4:	sub    rsp,0x20
  434bc8:	mov    QWORD PTR [rbp-0x8],rdi
  434bcc:	mov    QWORD PTR [rbp-0x10],rsi
  434bd0:	mov    QWORD PTR [rbp-0x18],rdx
  434bd4:	cmp    QWORD PTR [rbp-0x18],0x3f
  434bd9:	ja     434bfa <flatcc_json_printer_init_buffer@@Base+0x3a>
  434bdb:	lea    rcx,[rip+0x8ade]        # 43d6c0 <flatcc_builder_padding_base@@Base+0x3740>
  434be2:	mov    edx,0x48d
  434be7:	lea    rsi,[rip+0x845a]        # 43d048 <flatcc_builder_padding_base@@Base+0x30c8>
  434bee:	lea    rdi,[rip+0x8563]        # 43d158 <flatcc_builder_padding_base@@Base+0x31d8>
  434bf5:	call   405080 <__assert_fail@plt>
  434bfa:	cmp    QWORD PTR [rbp-0x18],0x3f
  434bff:	ja     434c08 <flatcc_json_printer_init_buffer@@Base+0x48>
  434c01:	mov    eax,0xffffffff
  434c06:	jmp    434c86 <flatcc_json_printer_init_buffer@@Base+0xc6>
  434c08:	mov    rax,QWORD PTR [rbp-0x8]
  434c0c:	mov    edx,0x50
  434c11:	mov    esi,0x0
  434c16:	mov    rdi,rax
  434c19:	call   405090 <memset@plt>
  434c1e:	mov    rax,QWORD PTR [rbp-0x8]
  434c22:	mov    rdx,QWORD PTR [rbp-0x10]
  434c26:	mov    QWORD PTR [rax],rdx
  434c29:	mov    rax,QWORD PTR [rbp-0x8]
  434c2d:	mov    rdx,QWORD PTR [rbp-0x18]
  434c31:	mov    QWORD PTR [rax+0x8],rdx
  434c35:	mov    rax,QWORD PTR [rbp-0x8]
  434c39:	mov    rax,QWORD PTR [rax+0x8]
  434c3d:	lea    rdx,[rax-0x40]
  434c41:	mov    rax,QWORD PTR [rbp-0x8]
  434c45:	mov    QWORD PTR [rax+0x10],rdx
  434c49:	mov    rax,QWORD PTR [rbp-0x8]
  434c4d:	mov    rdx,QWORD PTR [rax]
  434c50:	mov    rax,QWORD PTR [rbp-0x8]
  434c54:	mov    QWORD PTR [rax+0x28],rdx
  434c58:	mov    rax,QWORD PTR [rbp-0x8]
  434c5c:	mov    rdx,QWORD PTR [rax]
  434c5f:	mov    rax,QWORD PTR [rbp-0x8]
  434c63:	mov    rax,QWORD PTR [rax+0x10]
  434c67:	add    rdx,rax
  434c6a:	mov    rax,QWORD PTR [rbp-0x8]
  434c6e:	mov    QWORD PTR [rax+0x20],rdx
  434c72:	mov    rax,QWORD PTR [rbp-0x8]
  434c76:	lea    rdx,[rip+0xfffffffffffffec6]        # 434b43 <flatcc_json_printer_init@@Base+0x106>
  434c7d:	mov    QWORD PTR [rax+0x48],rdx
  434c81:	mov    eax,0x0
  434c86:	leave  
  434c87:	ret    
  434c88:	push   rbp
  434c89:	mov    rbp,rsp
  434c8c:	sub    rsp,0x20
  434c90:	mov    QWORD PTR [rbp-0x18],rdi
  434c94:	mov    DWORD PTR [rbp-0x1c],esi
  434c97:	mov    rax,QWORD PTR [rbp-0x18]
  434c9b:	mov    rax,QWORD PTR [rax+0x28]
  434c9f:	mov    rdx,rax
  434ca2:	mov    rax,QWORD PTR [rbp-0x18]
  434ca6:	mov    rax,QWORD PTR [rax]
  434ca9:	sub    rdx,rax
  434cac:	mov    rax,rdx
  434caf:	mov    QWORD PTR [rbp-0x10],rax
  434cb3:	mov    rax,QWORD PTR [rbp-0x18]
  434cb7:	mov    rax,QWORD PTR [rax+0x28]
  434cbb:	mov    BYTE PTR [rax],0x0
  434cbe:	mov    rax,QWORD PTR [rbp-0x18]
  434cc2:	mov    rdx,QWORD PTR [rax+0x28]
  434cc6:	mov    rax,QWORD PTR [rbp-0x18]
  434cca:	mov    rax,QWORD PTR [rax+0x20]
  434cce:	cmp    rdx,rax
  434cd1:	jb     434da3 <flatcc_json_printer_init_buffer@@Base+0x1e3>
  434cd7:	mov    rax,QWORD PTR [rbp-0x18]
  434cdb:	mov    rax,QWORD PTR [rax+0x8]
  434cdf:	lea    rdx,[rax+rax*1]
  434ce3:	mov    rax,QWORD PTR [rbp-0x18]
  434ce7:	mov    rax,QWORD PTR [rax]
  434cea:	mov    rsi,rdx
  434ced:	mov    rdi,rax
  434cf0:	call   405110 <realloc@plt>
  434cf5:	mov    QWORD PTR [rbp-0x8],rax
  434cf9:	cmp    QWORD PTR [rbp-0x8],0x0
  434cfe:	jne    434d39 <flatcc_json_printer_init_buffer@@Base+0x179>
  434d00:	mov    rax,QWORD PTR [rbp-0x18]
  434d04:	mov    esi,0x3
  434d09:	mov    rdi,rax
  434d0c:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  434d11:	mov    rax,QWORD PTR [rbp-0x18]
  434d15:	mov    rdx,QWORD PTR [rax+0x18]
  434d19:	mov    rax,QWORD PTR [rbp-0x10]
  434d1d:	add    rdx,rax
  434d20:	mov    rax,QWORD PTR [rbp-0x18]
  434d24:	mov    QWORD PTR [rax+0x18],rdx
  434d28:	mov    rax,QWORD PTR [rbp-0x18]
  434d2c:	mov    rdx,QWORD PTR [rax]
  434d2f:	mov    rax,QWORD PTR [rbp-0x18]
  434d33:	mov    QWORD PTR [rax+0x28],rdx
  434d37:	jmp    434d96 <flatcc_json_printer_init_buffer@@Base+0x1d6>
  434d39:	mov    rax,QWORD PTR [rbp-0x18]
  434d3d:	mov    rax,QWORD PTR [rax+0x8]
  434d41:	lea    rdx,[rax+rax*1]
  434d45:	mov    rax,QWORD PTR [rbp-0x18]
  434d49:	mov    QWORD PTR [rax+0x8],rdx
  434d4d:	mov    rax,QWORD PTR [rbp-0x18]
  434d51:	mov    rax,QWORD PTR [rax+0x8]
  434d55:	lea    rdx,[rax-0x40]
  434d59:	mov    rax,QWORD PTR [rbp-0x18]
  434d5d:	mov    QWORD PTR [rax+0x10],rdx
  434d61:	mov    rax,QWORD PTR [rbp-0x18]
  434d65:	mov    rdx,QWORD PTR [rbp-0x8]
  434d69:	mov    QWORD PTR [rax],rdx
  434d6c:	mov    rdx,QWORD PTR [rbp-0x8]
  434d70:	mov    rax,QWORD PTR [rbp-0x10]
  434d74:	add    rdx,rax
  434d77:	mov    rax,QWORD PTR [rbp-0x18]
  434d7b:	mov    QWORD PTR [rax+0x28],rdx
  434d7f:	mov    rax,QWORD PTR [rbp-0x18]
  434d83:	mov    rdx,QWORD PTR [rax+0x10]
  434d87:	mov    rax,QWORD PTR [rbp-0x8]
  434d8b:	add    rdx,rax
  434d8e:	mov    rax,QWORD PTR [rbp-0x18]
  434d92:	mov    QWORD PTR [rax+0x20],rdx
  434d96:	mov    rax,QWORD PTR [rbp-0x18]
  434d9a:	mov    rax,QWORD PTR [rax+0x28]
  434d9e:	mov    BYTE PTR [rax],0x0
  434da1:	jmp    434da4 <flatcc_json_printer_init_buffer@@Base+0x1e4>
  434da3:	nop
  434da4:	leave  
  434da5:	ret    

0000000000434da6 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  434da6:	push   rbp
  434da7:	mov    rbp,rsp
  434daa:	sub    rsp,0x10
  434dae:	mov    QWORD PTR [rbp-0x8],rdi
  434db2:	mov    QWORD PTR [rbp-0x10],rsi
  434db6:	cmp    QWORD PTR [rbp-0x10],0x0
  434dbb:	jne    434dc5 <flatcc_json_printer_init_dynamic_buffer@@Base+0x1f>
  434dbd:	mov    QWORD PTR [rbp-0x10],0x1000
  434dc5:	cmp    QWORD PTR [rbp-0x10],0x3f
  434dca:	ja     434dd4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x2e>
  434dcc:	mov    QWORD PTR [rbp-0x10],0x40
  434dd4:	mov    rax,QWORD PTR [rbp-0x8]
  434dd8:	mov    edx,0x50
  434ddd:	mov    esi,0x0
  434de2:	mov    rdi,rax
  434de5:	call   405090 <memset@plt>
  434dea:	mov    rax,QWORD PTR [rbp-0x10]
  434dee:	mov    rdi,rax
  434df1:	call   405100 <malloc@plt>
  434df6:	mov    rdx,rax
  434df9:	mov    rax,QWORD PTR [rbp-0x8]
  434dfd:	mov    QWORD PTR [rax],rdx
  434e00:	mov    rax,QWORD PTR [rbp-0x8]
  434e04:	mov    BYTE PTR [rax+0x30],0x1
  434e08:	mov    rax,QWORD PTR [rbp-0x8]
  434e0c:	mov    rdx,QWORD PTR [rbp-0x10]
  434e10:	mov    QWORD PTR [rax+0x8],rdx
  434e14:	mov    rax,QWORD PTR [rbp-0x8]
  434e18:	mov    rax,QWORD PTR [rax+0x8]
  434e1c:	lea    rdx,[rax-0x40]
  434e20:	mov    rax,QWORD PTR [rbp-0x8]
  434e24:	mov    QWORD PTR [rax+0x10],rdx
  434e28:	mov    rax,QWORD PTR [rbp-0x8]
  434e2c:	mov    rdx,QWORD PTR [rax]
  434e2f:	mov    rax,QWORD PTR [rbp-0x8]
  434e33:	mov    QWORD PTR [rax+0x28],rdx
  434e37:	mov    rax,QWORD PTR [rbp-0x8]
  434e3b:	mov    rdx,QWORD PTR [rax]
  434e3e:	mov    rax,QWORD PTR [rbp-0x8]
  434e42:	mov    rax,QWORD PTR [rax+0x10]
  434e46:	add    rdx,rax
  434e49:	mov    rax,QWORD PTR [rbp-0x8]
  434e4d:	mov    QWORD PTR [rax+0x20],rdx
  434e51:	mov    rax,QWORD PTR [rbp-0x8]
  434e55:	lea    rdx,[rip+0xfffffffffffffe2c]        # 434c88 <flatcc_json_printer_init_buffer@@Base+0xc8>
  434e5c:	mov    QWORD PTR [rax+0x48],rdx
  434e60:	mov    rax,QWORD PTR [rbp-0x8]
  434e64:	mov    rax,QWORD PTR [rax]
  434e67:	test   rax,rax
  434e6a:	jne    434e84 <flatcc_json_printer_init_dynamic_buffer@@Base+0xde>
  434e6c:	mov    rax,QWORD PTR [rbp-0x8]
  434e70:	mov    esi,0x3
  434e75:	mov    rdi,rax
  434e78:	call   4295e8 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  434e7d:	mov    eax,0xffffffff
  434e82:	jmp    434e89 <flatcc_json_printer_init_dynamic_buffer@@Base+0xe3>
  434e84:	mov    eax,0x0
  434e89:	leave  
  434e8a:	ret    

0000000000434e8b <flatcc_json_printer_get_buffer@@Base>:
  434e8b:	push   rbp
  434e8c:	mov    rbp,rsp
  434e8f:	sub    rsp,0x10
  434e93:	mov    QWORD PTR [rbp-0x8],rdi
  434e97:	mov    QWORD PTR [rbp-0x10],rsi
  434e9b:	mov    rax,QWORD PTR [rbp-0x8]
  434e9f:	mov    rax,QWORD PTR [rax+0x48]
  434ea3:	mov    rdx,QWORD PTR [rbp-0x8]
  434ea7:	mov    esi,0x0
  434eac:	mov    rdi,rdx
  434eaf:	call   rax
  434eb1:	cmp    QWORD PTR [rbp-0x10],0x0
  434eb6:	je     434eda <flatcc_json_printer_get_buffer@@Base+0x4f>
  434eb8:	mov    rax,QWORD PTR [rbp-0x8]
  434ebc:	mov    rax,QWORD PTR [rax+0x28]
  434ec0:	mov    rdx,rax
  434ec3:	mov    rax,QWORD PTR [rbp-0x8]
  434ec7:	mov    rax,QWORD PTR [rax]
  434eca:	sub    rdx,rax
  434ecd:	mov    rax,rdx
  434ed0:	mov    rdx,rax
  434ed3:	mov    rax,QWORD PTR [rbp-0x10]
  434ed7:	mov    QWORD PTR [rax],rdx
  434eda:	mov    rax,QWORD PTR [rbp-0x8]
  434ede:	mov    rax,QWORD PTR [rax]
  434ee1:	leave  
  434ee2:	ret    

0000000000434ee3 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  434ee3:	push   rbp
  434ee4:	mov    rbp,rsp
  434ee7:	sub    rsp,0x20
  434eeb:	mov    QWORD PTR [rbp-0x18],rdi
  434eef:	mov    QWORD PTR [rbp-0x20],rsi
  434ef3:	mov    rdx,QWORD PTR [rbp-0x20]
  434ef7:	mov    rax,QWORD PTR [rbp-0x18]
  434efb:	mov    rsi,rdx
  434efe:	mov    rdi,rax
  434f01:	call   434e8b <flatcc_json_printer_get_buffer@@Base>
  434f06:	mov    QWORD PTR [rbp-0x8],rax
  434f0a:	mov    rax,QWORD PTR [rbp-0x18]
  434f0e:	mov    edx,0x50
  434f13:	mov    esi,0x0
  434f18:	mov    rdi,rax
  434f1b:	call   405090 <memset@plt>
  434f20:	mov    rax,QWORD PTR [rbp-0x8]
  434f24:	leave  
  434f25:	ret    

0000000000434f26 <flatcc_json_printer_clear@@Base>:
  434f26:	push   rbp
  434f27:	mov    rbp,rsp
  434f2a:	sub    rsp,0x10
  434f2e:	mov    QWORD PTR [rbp-0x8],rdi
  434f32:	mov    rax,QWORD PTR [rbp-0x8]
  434f36:	movzx  eax,BYTE PTR [rax+0x30]
  434f3a:	test   al,al
  434f3c:	je     434f59 <flatcc_json_printer_clear@@Base+0x33>
  434f3e:	mov    rax,QWORD PTR [rbp-0x8]
  434f42:	mov    rax,QWORD PTR [rax]
  434f45:	test   rax,rax
  434f48:	je     434f59 <flatcc_json_printer_clear@@Base+0x33>
  434f4a:	mov    rax,QWORD PTR [rbp-0x8]
  434f4e:	mov    rax,QWORD PTR [rax]
  434f51:	mov    rdi,rax
  434f54:	call   405030 <free@plt>
  434f59:	mov    rax,QWORD PTR [rbp-0x8]
  434f5d:	mov    edx,0x50
  434f62:	mov    esi,0x0
  434f67:	mov    rdi,rax
  434f6a:	call   405090 <memset@plt>
  434f6f:	nop
  434f70:	leave  
  434f71:	ret    
  434f72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434f7c:	nop    DWORD PTR [rax+0x0]

0000000000434f80 <__libc_csu_init@@Base>:
  434f80:	endbr64 
  434f84:	push   r15
  434f86:	lea    r15,[rip+0x10dfb]        # 445d88 <flatcc_builder_padding_base@@Base+0xbe08>
  434f8d:	push   r14
  434f8f:	mov    r14,rdx
  434f92:	push   r13
  434f94:	mov    r13,rsi
  434f97:	push   r12
  434f99:	mov    r12d,edi
  434f9c:	push   rbp
  434f9d:	lea    rbp,[rip+0x10dec]        # 445d90 <flatcc_builder_padding_base@@Base+0xbe10>
  434fa4:	push   rbx
  434fa5:	sub    rbp,r15
  434fa8:	sub    rsp,0x8
  434fac:	call   405000 <free@plt-0x30>
  434fb1:	sar    rbp,0x3
  434fb5:	je     434fd6 <__libc_csu_init@@Base+0x56>
  434fb7:	xor    ebx,ebx
  434fb9:	nop    DWORD PTR [rax+0x0]
  434fc0:	mov    rdx,r14
  434fc3:	mov    rsi,r13
  434fc6:	mov    edi,r12d
  434fc9:	call   QWORD PTR [r15+rbx*8]
  434fcd:	add    rbx,0x1
  434fd1:	cmp    rbp,rbx
  434fd4:	jne    434fc0 <__libc_csu_init@@Base+0x40>
  434fd6:	add    rsp,0x8
  434fda:	pop    rbx
  434fdb:	pop    rbp
  434fdc:	pop    r12
  434fde:	pop    r13
  434fe0:	pop    r14
  434fe2:	pop    r15
  434fe4:	ret    
  434fe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000434ff0 <__libc_csu_fini@@Base>:
  434ff0:	endbr64 
  434ff4:	ret    

Disassembly of section .fini:

0000000000434ff8 <.fini>:
  434ff8:	endbr64 
  434ffc:	sub    rsp,0x8
  435000:	add    rsp,0x8
  435004:	ret    
