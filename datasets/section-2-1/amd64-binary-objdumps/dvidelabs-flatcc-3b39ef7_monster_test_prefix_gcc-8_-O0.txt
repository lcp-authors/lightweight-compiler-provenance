
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_prefix/monster_test_prefix:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xefe9]        # 411ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0xda>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xefe2]        # 412008 <flatcc_builder_padding_base@@Base+0x4e48>
  403026:	bnd jmp QWORD PTR [rip+0xefe3]        # 412010 <flatcc_builder_padding_base@@Base+0x4e50>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0xd0>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0xd0>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0xd0>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0xd0>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0xd0>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0xd0>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0xd0>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0xd0>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0xd0>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0xd0>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0xd0>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0xd0>
  4030ef:	nop

Disassembly of section .plt.sec:

00000000004030f0 <free@plt>:
  4030f0:	endbr64 
  4030f4:	bnd jmp QWORD PTR [rip+0xef1d]        # 412018 <free@GLIBC_2.2.5>
  4030fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403100 <strncpy@plt>:
  403100:	endbr64 
  403104:	bnd jmp QWORD PTR [rip+0xef15]        # 412020 <strncpy@GLIBC_2.2.5>
  40310b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403110 <strlen@plt>:
  403110:	endbr64 
  403114:	bnd jmp QWORD PTR [rip+0xef0d]        # 412028 <strlen@GLIBC_2.2.5>
  40311b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403120 <__stack_chk_fail@plt>:
  403120:	endbr64 
  403124:	bnd jmp QWORD PTR [rip+0xef05]        # 412030 <__stack_chk_fail@GLIBC_2.4>
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403130 <__assert_fail@plt>:
  403130:	endbr64 
  403134:	bnd jmp QWORD PTR [rip+0xeefd]        # 412038 <__assert_fail@GLIBC_2.2.5>
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403140 <memset@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0xeef5]        # 412040 <memset@GLIBC_2.2.5>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <memchr@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0xeeed]        # 412048 <memchr@GLIBC_2.2.5>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <memcmp@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0xeee5]        # 412050 <memcmp@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <memcpy@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0xeedd]        # 412058 <memcpy@GLIBC_2.14>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <malloc@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0xeed5]        # 412060 <malloc@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <realloc@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0xeecd]        # 412068 <realloc@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <posix_memalign@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0xeec5]        # 412070 <posix_memalign@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004031b0 <_start@@Base>:
  4031b0:	endbr64 
  4031b4:	xor    ebp,ebp
  4031b6:	mov    r9,rdx
  4031b9:	pop    rsi
  4031ba:	mov    rdx,rsp
  4031bd:	and    rsp,0xfffffffffffffff0
  4031c1:	push   rax
  4031c2:	push   rsp
  4031c3:	mov    r8,0x40c800
  4031ca:	mov    rcx,0x40c790
  4031d1:	mov    rdi,0x4046d6
  4031d8:	call   QWORD PTR [rip+0xee12]        # 411ff0 <__libc_start_main@GLIBC_2.2.5>
  4031de:	hlt    
  4031df:	nop
  4031e0:	endbr64 
  4031e4:	ret    
  4031e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031ef:	nop
  4031f0:	mov    eax,0x412098
  4031f5:	cmp    rax,0x412098
  4031fb:	je     403210 <_start@@Base+0x60>
  4031fd:	mov    eax,0x0
  403202:	test   rax,rax
  403205:	je     403210 <_start@@Base+0x60>
  403207:	mov    edi,0x412098
  40320c:	jmp    rax
  40320e:	xchg   ax,ax
  403210:	ret    
  403211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40321c:	nop    DWORD PTR [rax+0x0]
  403220:	mov    esi,0x412098
  403225:	sub    rsi,0x412098
  40322c:	sar    rsi,0x3
  403230:	mov    rax,rsi
  403233:	shr    rax,0x3f
  403237:	add    rsi,rax
  40323a:	sar    rsi,1
  40323d:	je     403250 <_start@@Base+0xa0>
  40323f:	mov    eax,0x0
  403244:	test   rax,rax
  403247:	je     403250 <_start@@Base+0xa0>
  403249:	mov    edi,0x412098
  40324e:	jmp    rax
  403250:	ret    
  403251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	endbr64 
  403264:	cmp    BYTE PTR [rip+0xee2d],0x0        # 412098 <__bss_start@@Base>
  40326b:	jne    403280 <_start@@Base+0xd0>
  40326d:	push   rbp
  40326e:	mov    rbp,rsp
  403271:	call   4031f0 <_start@@Base+0x40>
  403276:	mov    BYTE PTR [rip+0xee1b],0x1        # 412098 <__bss_start@@Base>
  40327d:	pop    rbp
  40327e:	ret    
  40327f:	nop
  403280:	ret    
  403281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40328c:	nop    DWORD PTR [rax+0x0]
  403290:	endbr64 
  403294:	jmp    403220 <_start@@Base+0x70>
  403296:	push   rbp
  403297:	mov    rbp,rsp
  40329a:	sub    rsp,0x10
  40329e:	mov    QWORD PTR [rbp-0x8],rdi
  4032a2:	mov    QWORD PTR [rbp-0x10],rsi
  4032a6:	mov    rsi,QWORD PTR [rbp-0x10]
  4032aa:	mov    rax,QWORD PTR [rbp-0x8]
  4032ae:	mov    ecx,0x0
  4032b3:	mov    edx,0x0
  4032b8:	mov    rdi,rax
  4032bb:	call   40677e <flatcc_builder_start_buffer@@Base>
  4032c0:	leave  
  4032c1:	ret    
  4032c2:	push   rbp
  4032c3:	mov    rbp,rsp
  4032c6:	sub    rsp,0x10
  4032ca:	mov    QWORD PTR [rbp-0x8],rdi
  4032ce:	mov    DWORD PTR [rbp-0xc],esi
  4032d1:	mov    edx,DWORD PTR [rbp-0xc]
  4032d4:	mov    rax,QWORD PTR [rbp-0x8]
  4032d8:	mov    esi,edx
  4032da:	mov    rdi,rax
  4032dd:	call   4068cb <flatcc_builder_end_buffer@@Base>
  4032e2:	leave  
  4032e3:	ret    
  4032e4:	push   rbp
  4032e5:	mov    rbp,rsp
  4032e8:	sub    rsp,0x10
  4032ec:	mov    QWORD PTR [rbp-0x8],rdi
  4032f0:	mov    rax,QWORD PTR [rbp-0x8]
  4032f4:	mov    esi,0x24
  4032f9:	mov    rdi,rax
  4032fc:	call   407543 <flatcc_builder_start_table@@Base>
  403301:	leave  
  403302:	ret    
  403303:	push   rbp
  403304:	mov    rbp,rsp
  403307:	sub    rsp,0x10
  40330b:	mov    QWORD PTR [rbp-0x8],rdi
  40330f:	mov    rax,QWORD PTR [rbp-0x8]
  403313:	mov    edx,0x1
  403318:	lea    rsi,[rip+0x9d0d]        # 40d02c <_IO_stdin_used@@Base+0x2c>
  40331f:	mov    rdi,rax
  403322:	call   407fa5 <flatcc_builder_check_required@@Base>
  403327:	test   eax,eax
  403329:	jne    40334a <_start@@Base+0x19a>
  40332b:	lea    rcx,[rip+0x9e4e]        # 40d180 <_IO_stdin_used@@Base+0x180>
  403332:	mov    edx,0x95e
  403337:	lea    rsi,[rip+0x9cf2]        # 40d030 <_IO_stdin_used@@Base+0x30>
  40333e:	lea    rdi,[rip+0x9d6b]        # 40d0b0 <_IO_stdin_used@@Base+0xb0>
  403345:	call   403130 <__assert_fail@plt>
  40334a:	mov    rax,QWORD PTR [rbp-0x8]
  40334e:	mov    rdi,rax
  403351:	call   408052 <flatcc_builder_end_table@@Base>
  403356:	leave  
  403357:	ret    
  403358:	push   rbp
  403359:	mov    rbp,rsp
  40335c:	sub    rsp,0x20
  403360:	mov    QWORD PTR [rbp-0x18],rdi
  403364:	mov    DWORD PTR [rbp-0x1c],esi
  403367:	cmp    DWORD PTR [rbp-0x1c],0x0
  40336b:	je     403399 <_start@@Base+0x1e9>
  40336d:	mov    rax,QWORD PTR [rbp-0x18]
  403371:	mov    esi,0x3
  403376:	mov    rdi,rax
  403379:	call   4098cd <flatcc_builder_table_add_offset@@Base>
  40337e:	mov    QWORD PTR [rbp-0x8],rax
  403382:	cmp    QWORD PTR [rbp-0x8],0x0
  403387:	je     403399 <_start@@Base+0x1e9>
  403389:	mov    rax,QWORD PTR [rbp-0x8]
  40338d:	mov    edx,DWORD PTR [rbp-0x1c]
  403390:	mov    DWORD PTR [rax],edx
  403392:	mov    eax,0x0
  403397:	jmp    40339e <_start@@Base+0x1ee>
  403399:	mov    eax,0xffffffff
  40339e:	leave  
  40339f:	ret    
  4033a0:	push   rbp
  4033a1:	mov    rbp,rsp
  4033a4:	sub    rsp,0x10
  4033a8:	mov    QWORD PTR [rbp-0x8],rdi
  4033ac:	mov    QWORD PTR [rbp-0x10],rsi
  4033b0:	mov    rdx,QWORD PTR [rbp-0x10]
  4033b4:	mov    rax,QWORD PTR [rbp-0x8]
  4033b8:	mov    rsi,rdx
  4033bb:	mov    rdi,rax
  4033be:	call   409590 <flatcc_builder_create_string_str@@Base>
  4033c3:	mov    edx,eax
  4033c5:	mov    rax,QWORD PTR [rbp-0x8]
  4033c9:	mov    esi,edx
  4033cb:	mov    rdi,rax
  4033ce:	call   403358 <_start@@Base+0x1a8>
  4033d3:	leave  
  4033d4:	ret    
  4033d5:	push   rbp
  4033d6:	mov    rbp,rsp
  4033d9:	sub    rsp,0x10
  4033dd:	mov    QWORD PTR [rbp-0x8],rdi
  4033e1:	mov    rax,QWORD PTR [rbp-0x8]
  4033e5:	lea    rsi,[rip+0x9d78]        # 40d164 <_IO_stdin_used@@Base+0x164>
  4033ec:	mov    rdi,rax
  4033ef:	call   403296 <_start@@Base+0xe6>
  4033f4:	test   eax,eax
  4033f6:	jne    403406 <_start@@Base+0x256>
  4033f8:	mov    rax,QWORD PTR [rbp-0x8]
  4033fc:	mov    rdi,rax
  4033ff:	call   4032e4 <_start@@Base+0x134>
  403404:	jmp    40340b <_start@@Base+0x25b>
  403406:	mov    eax,0xffffffff
  40340b:	leave  
  40340c:	ret    
  40340d:	push   rbp
  40340e:	mov    rbp,rsp
  403411:	sub    rsp,0x10
  403415:	mov    QWORD PTR [rbp-0x8],rdi
  403419:	mov    rax,QWORD PTR [rbp-0x8]
  40341d:	mov    rdi,rax
  403420:	call   403303 <_start@@Base+0x153>
  403425:	mov    edx,eax
  403427:	mov    rax,QWORD PTR [rbp-0x8]
  40342b:	mov    esi,edx
  40342d:	mov    rdi,rax
  403430:	call   4032c2 <_start@@Base+0x112>
  403435:	leave  
  403436:	ret    
  403437:	endbr64 
  40343b:	push   rbp
  40343c:	mov    rbp,rsp
  40343f:	sub    rsp,0x10
  403443:	mov    QWORD PTR [rbp-0x8],rdi
  403447:	mov    rax,QWORD PTR [rbp-0x8]
  40344b:	movzx  eax,BYTE PTR [rax+0x10]
  40344f:	movzx  eax,al
  403452:	cmp    eax,0x1
  403455:	jne    40346c <_start@@Base+0x2bc>
  403457:	mov    rax,QWORD PTR [rbp-0x8]
  40345b:	lea    rsi,[rip+0x16b]        # 4035cd <_start@@Base+0x41d>
  403462:	mov    rdi,rax
  403465:	call   40bcc3 <flatcc_verify_union_table@@Base>
  40346a:	jmp    403471 <_start@@Base+0x2c1>
  40346c:	mov    eax,0x0
  403471:	leave  
  403472:	ret    
  403473:	endbr64 
  403477:	push   rbp
  403478:	mov    rbp,rsp
  40347b:	sub    rsp,0x10
  40347f:	mov    QWORD PTR [rbp-0x8],rdi
  403483:	mov    rax,QWORD PTR [rbp-0x8]
  403487:	movzx  eax,BYTE PTR [rax+0x10]
  40348b:	movzx  eax,al
  40348e:	cmp    eax,0x2
  403491:	je     4034c0 <_start@@Base+0x310>
  403493:	cmp    eax,0x2
  403496:	jg     40349f <_start@@Base+0x2ef>
  403498:	cmp    eax,0x1
  40349b:	je     4034ab <_start@@Base+0x2fb>
  40349d:	jmp    4034ff <_start@@Base+0x34f>
  40349f:	cmp    eax,0x3
  4034a2:	je     4034d5 <_start@@Base+0x325>
  4034a4:	cmp    eax,0x4
  4034a7:	je     4034ea <_start@@Base+0x33a>
  4034a9:	jmp    4034ff <_start@@Base+0x34f>
  4034ab:	mov    rax,QWORD PTR [rbp-0x8]
  4034af:	lea    rsi,[rip+0x835]        # 403ceb <_start@@Base+0xb3b>
  4034b6:	mov    rdi,rax
  4034b9:	call   40bcc3 <flatcc_verify_union_table@@Base>
  4034be:	jmp    403504 <_start@@Base+0x354>
  4034c0:	mov    rax,QWORD PTR [rbp-0x8]
  4034c4:	lea    rsi,[rip+0x17b]        # 403646 <_start@@Base+0x496>
  4034cb:	mov    rdi,rax
  4034ce:	call   40bcc3 <flatcc_verify_union_table@@Base>
  4034d3:	jmp    403504 <_start@@Base+0x354>
  4034d5:	mov    rax,QWORD PTR [rbp-0x8]
  4034d9:	lea    rsi,[rip+0x100]        # 4035e0 <_start@@Base+0x430>
  4034e0:	mov    rdi,rax
  4034e3:	call   40bcc3 <flatcc_verify_union_table@@Base>
  4034e8:	jmp    403504 <_start@@Base+0x354>
  4034ea:	mov    rax,QWORD PTR [rbp-0x8]
  4034ee:	lea    rsi,[rip+0x3b2]        # 4038a7 <_start@@Base+0x6f7>
  4034f5:	mov    rdi,rax
  4034f8:	call   40bcc3 <flatcc_verify_union_table@@Base>
  4034fd:	jmp    403504 <_start@@Base+0x354>
  4034ff:	mov    eax,0x0
  403504:	leave  
  403505:	ret    
  403506:	endbr64 
  40350a:	push   rbp
  40350b:	mov    rbp,rsp
  40350e:	sub    rsp,0x10
  403512:	mov    QWORD PTR [rbp-0x8],rdi
  403516:	mov    rax,QWORD PTR [rbp-0x8]
  40351a:	movzx  eax,BYTE PTR [rax+0x10]
  40351e:	movzx  eax,al
  403521:	cmp    eax,0x9
  403524:	je     40357a <_start@@Base+0x3ca>
  403526:	cmp    eax,0x9
  403529:	jg     40353a <_start@@Base+0x38a>
  40352b:	cmp    eax,0x2
  40352e:	je     40354d <_start@@Base+0x39d>
  403530:	cmp    eax,0x8
  403533:	je     403562 <_start@@Base+0x3b2>
  403535:	jmp    4035c6 <_start@@Base+0x416>
  40353a:	cmp    eax,0xb
  40353d:	je     4035aa <_start@@Base+0x3fa>
  40353f:	cmp    eax,0xb
  403542:	jl     403592 <_start@@Base+0x3e2>
  403544:	cmp    eax,0xff
  403549:	je     4035b8 <_start@@Base+0x408>
  40354b:	jmp    4035c6 <_start@@Base+0x416>
  40354d:	mov    rax,QWORD PTR [rbp-0x8]
  403551:	lea    rsi,[rip+0x104a]        # 4045a2 <_start@@Base+0x13f2>
  403558:	mov    rdi,rax
  40355b:	call   40bcc3 <flatcc_verify_union_table@@Base>
  403560:	jmp    4035cb <_start@@Base+0x41b>
  403562:	mov    rax,QWORD PTR [rbp-0x8]
  403566:	mov    edx,0x2
  40356b:	mov    esi,0x2
  403570:	mov    rdi,rax
  403573:	call   40bd0e <flatcc_verify_union_struct@@Base>
  403578:	jmp    4035cb <_start@@Base+0x41b>
  40357a:	mov    rax,QWORD PTR [rbp-0x8]
  40357e:	mov    edx,0x4
  403583:	mov    esi,0x4
  403588:	mov    rdi,rax
  40358b:	call   40bd0e <flatcc_verify_union_struct@@Base>
  403590:	jmp    4035cb <_start@@Base+0x41b>
  403592:	mov    rax,QWORD PTR [rbp-0x8]
  403596:	mov    edx,0x4
  40359b:	mov    esi,0x4
  4035a0:	mov    rdi,rax
  4035a3:	call   40bd0e <flatcc_verify_union_struct@@Base>
  4035a8:	jmp    4035cb <_start@@Base+0x41b>
  4035aa:	mov    rax,QWORD PTR [rbp-0x8]
  4035ae:	mov    rdi,rax
  4035b1:	call   40bd55 <flatcc_verify_union_string@@Base>
  4035b6:	jmp    4035cb <_start@@Base+0x41b>
  4035b8:	mov    rax,QWORD PTR [rbp-0x8]
  4035bc:	mov    rdi,rax
  4035bf:	call   40bd55 <flatcc_verify_union_string@@Base>
  4035c4:	jmp    4035cb <_start@@Base+0x41b>
  4035c6:	mov    eax,0x0
  4035cb:	leave  
  4035cc:	ret    
  4035cd:	endbr64 
  4035d1:	push   rbp
  4035d2:	mov    rbp,rsp
  4035d5:	mov    QWORD PTR [rbp-0x8],rdi
  4035d9:	mov    eax,0x0
  4035de:	pop    rbp
  4035df:	ret    
  4035e0:	endbr64 
  4035e4:	push   rbp
  4035e5:	mov    rbp,rsp
  4035e8:	mov    QWORD PTR [rbp-0x8],rdi
  4035ec:	mov    eax,0x0
  4035f1:	pop    rbp
  4035f2:	ret    
  4035f3:	endbr64 
  4035f7:	push   rbp
  4035f8:	mov    rbp,rsp
  4035fb:	mov    QWORD PTR [rbp-0x8],rdi
  4035ff:	mov    eax,0x0
  403604:	pop    rbp
  403605:	ret    
  403606:	endbr64 
  40360a:	push   rbp
  40360b:	mov    rbp,rsp
  40360e:	sub    rsp,0x20
  403612:	mov    QWORD PTR [rbp-0x18],rdi
  403616:	mov    rax,QWORD PTR [rbp-0x18]
  40361a:	mov    ecx,0x1
  40361f:	mov    edx,0x0
  403624:	mov    esi,0x0
  403629:	mov    rdi,rax
  40362c:	call   40b8de <flatcc_verify_field@@Base>
  403631:	mov    DWORD PTR [rbp-0x4],eax
  403634:	cmp    DWORD PTR [rbp-0x4],0x0
  403638:	je     40363f <_start@@Base+0x48f>
  40363a:	mov    eax,DWORD PTR [rbp-0x4]
  40363d:	jmp    403644 <_start@@Base+0x494>
  40363f:	mov    eax,0x0
  403644:	leave  
  403645:	ret    
  403646:	endbr64 
  40364a:	push   rbp
  40364b:	mov    rbp,rsp
  40364e:	sub    rsp,0x20
  403652:	mov    QWORD PTR [rbp-0x18],rdi
  403656:	mov    rax,QWORD PTR [rbp-0x18]
  40365a:	mov    ecx,0x1
  40365f:	mov    edx,0x1
  403664:	mov    esi,0x0
  403669:	mov    rdi,rax
  40366c:	call   40b8de <flatcc_verify_field@@Base>
  403671:	mov    DWORD PTR [rbp-0x4],eax
  403674:	cmp    DWORD PTR [rbp-0x4],0x0
  403678:	je     403682 <_start@@Base+0x4d2>
  40367a:	mov    eax,DWORD PTR [rbp-0x4]
  40367d:	jmp    403702 <_start@@Base+0x552>
  403682:	mov    rax,QWORD PTR [rbp-0x18]
  403686:	mov    ecx,0x1
  40368b:	mov    edx,0x1
  403690:	mov    esi,0x1
  403695:	mov    rdi,rax
  403698:	call   40b8de <flatcc_verify_field@@Base>
  40369d:	mov    DWORD PTR [rbp-0x4],eax
  4036a0:	cmp    DWORD PTR [rbp-0x4],0x0
  4036a4:	je     4036ab <_start@@Base+0x4fb>
  4036a6:	mov    eax,DWORD PTR [rbp-0x4]
  4036a9:	jmp    403702 <_start@@Base+0x552>
  4036ab:	mov    rax,QWORD PTR [rbp-0x18]
  4036af:	mov    ecx,0x1
  4036b4:	mov    edx,0x1
  4036b9:	mov    esi,0x2
  4036be:	mov    rdi,rax
  4036c1:	call   40b8de <flatcc_verify_field@@Base>
  4036c6:	mov    DWORD PTR [rbp-0x4],eax
  4036c9:	cmp    DWORD PTR [rbp-0x4],0x0
  4036cd:	je     4036d4 <_start@@Base+0x524>
  4036cf:	mov    eax,DWORD PTR [rbp-0x4]
  4036d2:	jmp    403702 <_start@@Base+0x552>
  4036d4:	mov    rax,QWORD PTR [rbp-0x18]
  4036d8:	mov    ecx,0x1
  4036dd:	mov    edx,0x1
  4036e2:	mov    esi,0x3
  4036e7:	mov    rdi,rax
  4036ea:	call   40b8de <flatcc_verify_field@@Base>
  4036ef:	mov    DWORD PTR [rbp-0x4],eax
  4036f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4036f6:	je     4036fd <_start@@Base+0x54d>
  4036f8:	mov    eax,DWORD PTR [rbp-0x4]
  4036fb:	jmp    403702 <_start@@Base+0x552>
  4036fd:	mov    eax,0x0
  403702:	leave  
  403703:	ret    
  403704:	endbr64 
  403708:	push   rbp
  403709:	mov    rbp,rsp
  40370c:	sub    rsp,0x20
  403710:	mov    QWORD PTR [rbp-0x18],rdi
  403714:	mov    rax,QWORD PTR [rbp-0x18]
  403718:	mov    ecx,0x1
  40371d:	mov    edx,0x0
  403722:	mov    esi,0x0
  403727:	mov    rdi,rax
  40372a:	call   40b8de <flatcc_verify_field@@Base>
  40372f:	mov    DWORD PTR [rbp-0x4],eax
  403732:	cmp    DWORD PTR [rbp-0x4],0x0
  403736:	je     403740 <_start@@Base+0x590>
  403738:	mov    eax,DWORD PTR [rbp-0x4]
  40373b:	jmp    403818 <_start@@Base+0x668>
  403740:	mov    rax,QWORD PTR [rbp-0x18]
  403744:	mov    ecx,0x8
  403749:	mov    edx,0x8
  40374e:	mov    esi,0x1
  403753:	mov    rdi,rax
  403756:	call   40b8de <flatcc_verify_field@@Base>
  40375b:	mov    DWORD PTR [rbp-0x4],eax
  40375e:	cmp    DWORD PTR [rbp-0x4],0x0
  403762:	je     40376c <_start@@Base+0x5bc>
  403764:	mov    eax,DWORD PTR [rbp-0x4]
  403767:	jmp    403818 <_start@@Base+0x668>
  40376c:	mov    rax,QWORD PTR [rbp-0x18]
  403770:	mov    ecx,0x8
  403775:	mov    edx,0x8
  40377a:	mov    esi,0x2
  40377f:	mov    rdi,rax
  403782:	call   40b8de <flatcc_verify_field@@Base>
  403787:	mov    DWORD PTR [rbp-0x4],eax
  40378a:	cmp    DWORD PTR [rbp-0x4],0x0
  40378e:	je     403798 <_start@@Base+0x5e8>
  403790:	mov    eax,DWORD PTR [rbp-0x4]
  403793:	jmp    403818 <_start@@Base+0x668>
  403798:	mov    rax,QWORD PTR [rbp-0x18]
  40379c:	mov    ecx,0x4
  4037a1:	mov    edx,0x4
  4037a6:	mov    esi,0x3
  4037ab:	mov    rdi,rax
  4037ae:	call   40b8de <flatcc_verify_field@@Base>
  4037b3:	mov    DWORD PTR [rbp-0x4],eax
  4037b6:	cmp    DWORD PTR [rbp-0x4],0x0
  4037ba:	je     4037c1 <_start@@Base+0x611>
  4037bc:	mov    eax,DWORD PTR [rbp-0x4]
  4037bf:	jmp    403818 <_start@@Base+0x668>
  4037c1:	mov    rax,QWORD PTR [rbp-0x18]
  4037c5:	mov    ecx,0x8
  4037ca:	mov    edx,0x8
  4037cf:	mov    esi,0x4
  4037d4:	mov    rdi,rax
  4037d7:	call   40b8de <flatcc_verify_field@@Base>
  4037dc:	mov    DWORD PTR [rbp-0x4],eax
  4037df:	cmp    DWORD PTR [rbp-0x4],0x0
  4037e3:	je     4037ea <_start@@Base+0x63a>
  4037e5:	mov    eax,DWORD PTR [rbp-0x4]
  4037e8:	jmp    403818 <_start@@Base+0x668>
  4037ea:	mov    rax,QWORD PTR [rbp-0x18]
  4037ee:	mov    ecx,0x8
  4037f3:	mov    edx,0x8
  4037f8:	mov    esi,0x5
  4037fd:	mov    rdi,rax
  403800:	call   40b8de <flatcc_verify_field@@Base>
  403805:	mov    DWORD PTR [rbp-0x4],eax
  403808:	cmp    DWORD PTR [rbp-0x4],0x0
  40380c:	je     403813 <_start@@Base+0x663>
  40380e:	mov    eax,DWORD PTR [rbp-0x4]
  403811:	jmp    403818 <_start@@Base+0x668>
  403813:	mov    eax,0x0
  403818:	leave  
  403819:	ret    
  40381a:	endbr64 
  40381e:	push   rbp
  40381f:	mov    rbp,rsp
  403822:	sub    rsp,0x20
  403826:	mov    QWORD PTR [rbp-0x18],rdi
  40382a:	mov    rax,QWORD PTR [rbp-0x18]
  40382e:	mov    edx,0x0
  403833:	mov    esi,0x0
  403838:	mov    rdi,rax
  40383b:	call   40b94f <flatcc_verify_string_field@@Base>
  403840:	mov    DWORD PTR [rbp-0x4],eax
  403843:	cmp    DWORD PTR [rbp-0x4],0x0
  403847:	je     40384e <_start@@Base+0x69e>
  403849:	mov    eax,DWORD PTR [rbp-0x4]
  40384c:	jmp    4038a5 <_start@@Base+0x6f5>
  40384e:	mov    rax,QWORD PTR [rbp-0x18]
  403852:	mov    ecx,0x8
  403857:	mov    edx,0x8
  40385c:	mov    esi,0x1
  403861:	mov    rdi,rax
  403864:	call   40b8de <flatcc_verify_field@@Base>
  403869:	mov    DWORD PTR [rbp-0x4],eax
  40386c:	cmp    DWORD PTR [rbp-0x4],0x0
  403870:	je     403877 <_start@@Base+0x6c7>
  403872:	mov    eax,DWORD PTR [rbp-0x4]
  403875:	jmp    4038a5 <_start@@Base+0x6f5>
  403877:	mov    rax,QWORD PTR [rbp-0x18]
  40387b:	mov    ecx,0x2
  403880:	mov    edx,0x2
  403885:	mov    esi,0x2
  40388a:	mov    rdi,rax
  40388d:	call   40b8de <flatcc_verify_field@@Base>
  403892:	mov    DWORD PTR [rbp-0x4],eax
  403895:	cmp    DWORD PTR [rbp-0x4],0x0
  403899:	je     4038a0 <_start@@Base+0x6f0>
  40389b:	mov    eax,DWORD PTR [rbp-0x4]
  40389e:	jmp    4038a5 <_start@@Base+0x6f5>
  4038a0:	mov    eax,0x0
  4038a5:	leave  
  4038a6:	ret    
  4038a7:	endbr64 
  4038ab:	push   rbp
  4038ac:	mov    rbp,rsp
  4038af:	sub    rsp,0x20
  4038b3:	mov    QWORD PTR [rbp-0x18],rdi
  4038b7:	mov    rax,QWORD PTR [rbp-0x18]
  4038bb:	lea    rcx,[rip+0x7d]        # 40393f <_start@@Base+0x78f>
  4038c2:	mov    edx,0x0
  4038c7:	mov    esi,0x0
  4038cc:	mov    rdi,rax
  4038cf:	call   40bb57 <flatcc_verify_table_field@@Base>
  4038d4:	mov    DWORD PTR [rbp-0x4],eax
  4038d7:	cmp    DWORD PTR [rbp-0x4],0x0
  4038db:	je     4038e2 <_start@@Base+0x732>
  4038dd:	mov    eax,DWORD PTR [rbp-0x4]
  4038e0:	jmp    40393d <_start@@Base+0x78d>
  4038e2:	mov    rax,QWORD PTR [rbp-0x18]
  4038e6:	lea    rcx,[rip+0xcf5]        # 4045e2 <_start@@Base+0x1432>
  4038ed:	mov    edx,0x0
  4038f2:	mov    esi,0x1
  4038f7:	mov    rdi,rax
  4038fa:	call   40bb57 <flatcc_verify_table_field@@Base>
  4038ff:	mov    DWORD PTR [rbp-0x4],eax
  403902:	cmp    DWORD PTR [rbp-0x4],0x0
  403906:	je     40390d <_start@@Base+0x75d>
  403908:	mov    eax,DWORD PTR [rbp-0x4]
  40390b:	jmp    40393d <_start@@Base+0x78d>
  40390d:	mov    rax,QWORD PTR [rbp-0x18]
  403911:	lea    rcx,[rip+0xfffffffffffffb5b]        # 403473 <_start@@Base+0x2c3>
  403918:	mov    edx,0x0
  40391d:	mov    esi,0x3
  403922:	mov    rdi,rax
  403925:	call   40c5a4 <flatcc_verify_union_vector_field@@Base>
  40392a:	mov    DWORD PTR [rbp-0x4],eax
  40392d:	cmp    DWORD PTR [rbp-0x4],0x0
  403931:	je     403938 <_start@@Base+0x788>
  403933:	mov    eax,DWORD PTR [rbp-0x4]
  403936:	jmp    40393d <_start@@Base+0x78d>
  403938:	mov    eax,0x0
  40393d:	leave  
  40393e:	ret    
  40393f:	endbr64 
  403943:	push   rbp
  403944:	mov    rbp,rsp
  403947:	sub    rsp,0x20
  40394b:	mov    QWORD PTR [rbp-0x18],rdi
  40394f:	mov    rax,QWORD PTR [rbp-0x18]
  403953:	lea    rcx,[rip+0x7d]        # 4039d7 <_start@@Base+0x827>
  40395a:	mov    edx,0x0
  40395f:	mov    esi,0x0
  403964:	mov    rdi,rax
  403967:	call   40bb57 <flatcc_verify_table_field@@Base>
  40396c:	mov    DWORD PTR [rbp-0x4],eax
  40396f:	cmp    DWORD PTR [rbp-0x4],0x0
  403973:	je     40397a <_start@@Base+0x7ca>
  403975:	mov    eax,DWORD PTR [rbp-0x4]
  403978:	jmp    4039d5 <_start@@Base+0x825>
  40397a:	mov    rax,QWORD PTR [rbp-0x18]
  40397e:	lea    rcx,[rip+0x1dd]        # 403b62 <_start@@Base+0x9b2>
  403985:	mov    edx,0x0
  40398a:	mov    esi,0x1
  40398f:	mov    rdi,rax
  403992:	call   40bb57 <flatcc_verify_table_field@@Base>
  403997:	mov    DWORD PTR [rbp-0x4],eax
  40399a:	cmp    DWORD PTR [rbp-0x4],0x0
  40399e:	je     4039a5 <_start@@Base+0x7f5>
  4039a0:	mov    eax,DWORD PTR [rbp-0x4]
  4039a3:	jmp    4039d5 <_start@@Base+0x825>
  4039a5:	mov    rax,QWORD PTR [rbp-0x18]
  4039a9:	lea    rcx,[rip+0x21b]        # 403bcb <_start@@Base+0xa1b>
  4039b0:	mov    edx,0x0
  4039b5:	mov    esi,0x2
  4039ba:	mov    rdi,rax
  4039bd:	call   40bb57 <flatcc_verify_table_field@@Base>
  4039c2:	mov    DWORD PTR [rbp-0x4],eax
  4039c5:	cmp    DWORD PTR [rbp-0x4],0x0
  4039c9:	je     4039d0 <_start@@Base+0x820>
  4039cb:	mov    eax,DWORD PTR [rbp-0x4]
  4039ce:	jmp    4039d5 <_start@@Base+0x825>
  4039d0:	mov    eax,0x0
  4039d5:	leave  
  4039d6:	ret    
  4039d7:	endbr64 
  4039db:	push   rbp
  4039dc:	mov    rbp,rsp
  4039df:	sub    rsp,0x20
  4039e3:	mov    QWORD PTR [rbp-0x18],rdi
  4039e7:	mov    rax,QWORD PTR [rbp-0x18]
  4039eb:	mov    edx,0x0
  4039f0:	mov    esi,0x0
  4039f5:	mov    rdi,rax
  4039f8:	call   40b94f <flatcc_verify_string_field@@Base>
  4039fd:	mov    DWORD PTR [rbp-0x4],eax
  403a00:	cmp    DWORD PTR [rbp-0x4],0x0
  403a04:	je     403a0e <_start@@Base+0x85e>
  403a06:	mov    eax,DWORD PTR [rbp-0x4]
  403a09:	jmp    403b60 <_start@@Base+0x9b0>
  403a0e:	mov    rax,QWORD PTR [rbp-0x18]
  403a12:	mov    ecx,0x4
  403a17:	mov    edx,0x4
  403a1c:	mov    esi,0x1
  403a21:	mov    rdi,rax
  403a24:	call   40b8de <flatcc_verify_field@@Base>
  403a29:	mov    DWORD PTR [rbp-0x4],eax
  403a2c:	cmp    DWORD PTR [rbp-0x4],0x0
  403a30:	je     403a3a <_start@@Base+0x88a>
  403a32:	mov    eax,DWORD PTR [rbp-0x4]
  403a35:	jmp    403b60 <_start@@Base+0x9b0>
  403a3a:	mov    rax,QWORD PTR [rbp-0x18]
  403a3e:	mov    edx,0x0
  403a43:	mov    esi,0x2
  403a48:	mov    rdi,rax
  403a4b:	call   40b94f <flatcc_verify_string_field@@Base>
  403a50:	mov    DWORD PTR [rbp-0x4],eax
  403a53:	cmp    DWORD PTR [rbp-0x4],0x0
  403a57:	je     403a61 <_start@@Base+0x8b1>
  403a59:	mov    eax,DWORD PTR [rbp-0x4]
  403a5c:	jmp    403b60 <_start@@Base+0x9b0>
  403a61:	mov    rax,QWORD PTR [rbp-0x18]
  403a65:	mov    ecx,0x8
  403a6a:	mov    edx,0x8
  403a6f:	mov    esi,0x3
  403a74:	mov    rdi,rax
  403a77:	call   40b8de <flatcc_verify_field@@Base>
  403a7c:	mov    DWORD PTR [rbp-0x4],eax
  403a7f:	cmp    DWORD PTR [rbp-0x4],0x0
  403a83:	je     403a8d <_start@@Base+0x8dd>
  403a85:	mov    eax,DWORD PTR [rbp-0x4]
  403a88:	jmp    403b60 <_start@@Base+0x9b0>
  403a8d:	mov    rax,QWORD PTR [rbp-0x18]
  403a91:	mov    edx,0x0
  403a96:	mov    esi,0x4
  403a9b:	mov    rdi,rax
  403a9e:	call   40b94f <flatcc_verify_string_field@@Base>
  403aa3:	mov    DWORD PTR [rbp-0x4],eax
  403aa6:	cmp    DWORD PTR [rbp-0x4],0x0
  403aaa:	je     403ab4 <_start@@Base+0x904>
  403aac:	mov    eax,DWORD PTR [rbp-0x4]
  403aaf:	jmp    403b60 <_start@@Base+0x9b0>
  403ab4:	mov    rax,QWORD PTR [rbp-0x18]
  403ab8:	mov    ecx,0x8
  403abd:	mov    edx,0x8
  403ac2:	mov    esi,0x5
  403ac7:	mov    rdi,rax
  403aca:	call   40b8de <flatcc_verify_field@@Base>
  403acf:	mov    DWORD PTR [rbp-0x4],eax
  403ad2:	cmp    DWORD PTR [rbp-0x4],0x0
  403ad6:	je     403ae0 <_start@@Base+0x930>
  403ad8:	mov    eax,DWORD PTR [rbp-0x4]
  403adb:	jmp    403b60 <_start@@Base+0x9b0>
  403ae0:	mov    rax,QWORD PTR [rbp-0x18]
  403ae4:	mov    ecx,0x4
  403ae9:	mov    edx,0x4
  403aee:	mov    esi,0x6
  403af3:	mov    rdi,rax
  403af6:	call   40b8de <flatcc_verify_field@@Base>
  403afb:	mov    DWORD PTR [rbp-0x4],eax
  403afe:	cmp    DWORD PTR [rbp-0x4],0x0
  403b02:	je     403b09 <_start@@Base+0x959>
  403b04:	mov    eax,DWORD PTR [rbp-0x4]
  403b07:	jmp    403b60 <_start@@Base+0x9b0>
  403b09:	mov    rax,QWORD PTR [rbp-0x18]
  403b0d:	mov    ecx,0x8
  403b12:	mov    edx,0x8
  403b17:	mov    esi,0x7
  403b1c:	mov    rdi,rax
  403b1f:	call   40b8de <flatcc_verify_field@@Base>
  403b24:	mov    DWORD PTR [rbp-0x4],eax
  403b27:	cmp    DWORD PTR [rbp-0x4],0x0
  403b2b:	je     403b32 <_start@@Base+0x982>
  403b2d:	mov    eax,DWORD PTR [rbp-0x4]
  403b30:	jmp    403b60 <_start@@Base+0x9b0>
  403b32:	mov    rax,QWORD PTR [rbp-0x18]
  403b36:	mov    ecx,0x4
  403b3b:	mov    edx,0x4
  403b40:	mov    esi,0x8
  403b45:	mov    rdi,rax
  403b48:	call   40b8de <flatcc_verify_field@@Base>
  403b4d:	mov    DWORD PTR [rbp-0x4],eax
  403b50:	cmp    DWORD PTR [rbp-0x4],0x0
  403b54:	je     403b5b <_start@@Base+0x9ab>
  403b56:	mov    eax,DWORD PTR [rbp-0x4]
  403b59:	jmp    403b60 <_start@@Base+0x9b0>
  403b5b:	mov    eax,0x0
  403b60:	leave  
  403b61:	ret    
  403b62:	endbr64 
  403b66:	push   rbp
  403b67:	mov    rbp,rsp
  403b6a:	sub    rsp,0x20
  403b6e:	mov    QWORD PTR [rbp-0x18],rdi
  403b72:	mov    rax,QWORD PTR [rbp-0x18]
  403b76:	mov    ecx,0x8
  403b7b:	mov    edx,0x8
  403b80:	mov    esi,0x0
  403b85:	mov    rdi,rax
  403b88:	call   40b8de <flatcc_verify_field@@Base>
  403b8d:	mov    DWORD PTR [rbp-0x4],eax
  403b90:	cmp    DWORD PTR [rbp-0x4],0x0
  403b94:	je     403b9b <_start@@Base+0x9eb>
  403b96:	mov    eax,DWORD PTR [rbp-0x4]
  403b99:	jmp    403bc9 <_start@@Base+0xa19>
  403b9b:	mov    rax,QWORD PTR [rbp-0x18]
  403b9f:	mov    ecx,0x4
  403ba4:	mov    edx,0x4
  403ba9:	mov    esi,0x1
  403bae:	mov    rdi,rax
  403bb1:	call   40b8de <flatcc_verify_field@@Base>
  403bb6:	mov    DWORD PTR [rbp-0x4],eax
  403bb9:	cmp    DWORD PTR [rbp-0x4],0x0
  403bbd:	je     403bc4 <_start@@Base+0xa14>
  403bbf:	mov    eax,DWORD PTR [rbp-0x4]
  403bc2:	jmp    403bc9 <_start@@Base+0xa19>
  403bc4:	mov    eax,0x0
  403bc9:	leave  
  403bca:	ret    
  403bcb:	endbr64 
  403bcf:	push   rbp
  403bd0:	mov    rbp,rsp
  403bd3:	sub    rsp,0x20
  403bd7:	mov    QWORD PTR [rbp-0x18],rdi
  403bdb:	mov    rax,QWORD PTR [rbp-0x18]
  403bdf:	mov    ecx,0x8
  403be4:	mov    edx,0x8
  403be9:	mov    esi,0x0
  403bee:	mov    rdi,rax
  403bf1:	call   40b8de <flatcc_verify_field@@Base>
  403bf6:	mov    DWORD PTR [rbp-0x4],eax
  403bf9:	cmp    DWORD PTR [rbp-0x4],0x0
  403bfd:	je     403c04 <_start@@Base+0xa54>
  403bff:	mov    eax,DWORD PTR [rbp-0x4]
  403c02:	jmp    403c32 <_start@@Base+0xa82>
  403c04:	mov    rax,QWORD PTR [rbp-0x18]
  403c08:	mov    ecx,0x4
  403c0d:	mov    edx,0x4
  403c12:	mov    esi,0x1
  403c17:	mov    rdi,rax
  403c1a:	call   40b8de <flatcc_verify_field@@Base>
  403c1f:	mov    DWORD PTR [rbp-0x4],eax
  403c22:	cmp    DWORD PTR [rbp-0x4],0x0
  403c26:	je     403c2d <_start@@Base+0xa7d>
  403c28:	mov    eax,DWORD PTR [rbp-0x4]
  403c2b:	jmp    403c32 <_start@@Base+0xa82>
  403c2d:	mov    eax,0x0
  403c32:	leave  
  403c33:	ret    
  403c34:	endbr64 
  403c38:	push   rbp
  403c39:	mov    rbp,rsp
  403c3c:	sub    rsp,0x20
  403c40:	mov    QWORD PTR [rbp-0x18],rdi
  403c44:	mov    rax,QWORD PTR [rbp-0x18]
  403c48:	mov    r9d,0xffffffff
  403c4e:	mov    r8d,0x1
  403c54:	mov    ecx,0x1
  403c59:	mov    edx,0x0
  403c5e:	mov    esi,0x0
  403c63:	mov    rdi,rax
  403c66:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403c6b:	mov    DWORD PTR [rbp-0x4],eax
  403c6e:	cmp    DWORD PTR [rbp-0x4],0x0
  403c72:	je     403c79 <_start@@Base+0xac9>
  403c74:	mov    eax,DWORD PTR [rbp-0x4]
  403c77:	jmp    403ce9 <_start@@Base+0xb39>
  403c79:	mov    rax,QWORD PTR [rbp-0x18]
  403c7d:	mov    r9d,0xffffffff
  403c83:	mov    r8d,0x1
  403c89:	mov    ecx,0x1
  403c8e:	mov    edx,0x0
  403c93:	mov    esi,0x1
  403c98:	mov    rdi,rax
  403c9b:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403ca0:	mov    DWORD PTR [rbp-0x4],eax
  403ca3:	cmp    DWORD PTR [rbp-0x4],0x0
  403ca7:	je     403cae <_start@@Base+0xafe>
  403ca9:	mov    eax,DWORD PTR [rbp-0x4]
  403cac:	jmp    403ce9 <_start@@Base+0xb39>
  403cae:	mov    rax,QWORD PTR [rbp-0x18]
  403cb2:	lea    r9,[rip+0x32]        # 403ceb <_start@@Base+0xb3b>
  403cb9:	mov    r8d,0x1
  403cbf:	mov    ecx,0x0
  403cc4:	mov    edx,0x0
  403cc9:	mov    esi,0x2
  403cce:	mov    rdi,rax
  403cd1:	call   40c253 <flatcc_verify_table_as_nested_root@@Base>
  403cd6:	mov    DWORD PTR [rbp-0x4],eax
  403cd9:	cmp    DWORD PTR [rbp-0x4],0x0
  403cdd:	je     403ce4 <_start@@Base+0xb34>
  403cdf:	mov    eax,DWORD PTR [rbp-0x4]
  403ce2:	jmp    403ce9 <_start@@Base+0xb39>
  403ce4:	mov    eax,0x0
  403ce9:	leave  
  403cea:	ret    
  403ceb:	endbr64 
  403cef:	push   rbp
  403cf0:	mov    rbp,rsp
  403cf3:	sub    rsp,0x20
  403cf7:	mov    QWORD PTR [rbp-0x18],rdi
  403cfb:	mov    rax,QWORD PTR [rbp-0x18]
  403cff:	mov    ecx,0x10
  403d04:	mov    edx,0x20
  403d09:	mov    esi,0x0
  403d0e:	mov    rdi,rax
  403d11:	call   40b8de <flatcc_verify_field@@Base>
  403d16:	mov    DWORD PTR [rbp-0x4],eax
  403d19:	cmp    DWORD PTR [rbp-0x4],0x0
  403d1d:	je     403d27 <_start@@Base+0xb77>
  403d1f:	mov    eax,DWORD PTR [rbp-0x4]
  403d22:	jmp    404339 <_start@@Base+0x1189>
  403d27:	mov    rax,QWORD PTR [rbp-0x18]
  403d2b:	mov    ecx,0x2
  403d30:	mov    edx,0x2
  403d35:	mov    esi,0x2
  403d3a:	mov    rdi,rax
  403d3d:	call   40b8de <flatcc_verify_field@@Base>
  403d42:	mov    DWORD PTR [rbp-0x4],eax
  403d45:	cmp    DWORD PTR [rbp-0x4],0x0
  403d49:	je     403d53 <_start@@Base+0xba3>
  403d4b:	mov    eax,DWORD PTR [rbp-0x4]
  403d4e:	jmp    404339 <_start@@Base+0x1189>
  403d53:	mov    rax,QWORD PTR [rbp-0x18]
  403d57:	mov    ecx,0x2
  403d5c:	mov    edx,0x2
  403d61:	mov    esi,0x1
  403d66:	mov    rdi,rax
  403d69:	call   40b8de <flatcc_verify_field@@Base>
  403d6e:	mov    DWORD PTR [rbp-0x4],eax
  403d71:	cmp    DWORD PTR [rbp-0x4],0x0
  403d75:	je     403d7f <_start@@Base+0xbcf>
  403d77:	mov    eax,DWORD PTR [rbp-0x4]
  403d7a:	jmp    404339 <_start@@Base+0x1189>
  403d7f:	mov    rax,QWORD PTR [rbp-0x18]
  403d83:	mov    edx,0x1
  403d88:	mov    esi,0x3
  403d8d:	mov    rdi,rax
  403d90:	call   40b94f <flatcc_verify_string_field@@Base>
  403d95:	mov    DWORD PTR [rbp-0x4],eax
  403d98:	cmp    DWORD PTR [rbp-0x4],0x0
  403d9c:	je     403da6 <_start@@Base+0xbf6>
  403d9e:	mov    eax,DWORD PTR [rbp-0x4]
  403da1:	jmp    404339 <_start@@Base+0x1189>
  403da6:	mov    rax,QWORD PTR [rbp-0x18]
  403daa:	mov    ecx,0x1
  403daf:	mov    edx,0x1
  403db4:	mov    esi,0x6
  403db9:	mov    rdi,rax
  403dbc:	call   40b8de <flatcc_verify_field@@Base>
  403dc1:	mov    DWORD PTR [rbp-0x4],eax
  403dc4:	cmp    DWORD PTR [rbp-0x4],0x0
  403dc8:	je     403dd2 <_start@@Base+0xc22>
  403dca:	mov    eax,DWORD PTR [rbp-0x4]
  403dcd:	jmp    404339 <_start@@Base+0x1189>
  403dd2:	mov    rax,QWORD PTR [rbp-0x18]
  403dd6:	mov    r9d,0xffffffff
  403ddc:	mov    r8d,0x1
  403de2:	mov    ecx,0x1
  403de7:	mov    edx,0x0
  403dec:	mov    esi,0x5
  403df1:	mov    rdi,rax
  403df4:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403df9:	mov    DWORD PTR [rbp-0x4],eax
  403dfc:	cmp    DWORD PTR [rbp-0x4],0x0
  403e00:	je     403e0a <_start@@Base+0xc5a>
  403e02:	mov    eax,DWORD PTR [rbp-0x4]
  403e05:	jmp    404339 <_start@@Base+0x1189>
  403e0a:	mov    rax,QWORD PTR [rbp-0x18]
  403e0e:	lea    rcx,[rip+0xfffffffffffffed6]        # 403ceb <_start@@Base+0xb3b>
  403e15:	mov    edx,0x0
  403e1a:	mov    esi,0xb
  403e1f:	mov    rdi,rax
  403e22:	call   40bc0d <flatcc_verify_table_vector_field@@Base>
  403e27:	mov    DWORD PTR [rbp-0x4],eax
  403e2a:	cmp    DWORD PTR [rbp-0x4],0x0
  403e2e:	je     403e38 <_start@@Base+0xc88>
  403e30:	mov    eax,DWORD PTR [rbp-0x4]
  403e33:	jmp    404339 <_start@@Base+0x1189>
  403e38:	mov    rax,QWORD PTR [rbp-0x18]
  403e3c:	mov    edx,0x0
  403e41:	mov    esi,0xa
  403e46:	mov    rdi,rax
  403e49:	call   40babe <flatcc_verify_string_vector_field@@Base>
  403e4e:	mov    DWORD PTR [rbp-0x4],eax
  403e51:	cmp    DWORD PTR [rbp-0x4],0x0
  403e55:	je     403e5f <_start@@Base+0xcaf>
  403e57:	mov    eax,DWORD PTR [rbp-0x4]
  403e5a:	jmp    404339 <_start@@Base+0x1189>
  403e5f:	mov    rax,QWORD PTR [rbp-0x18]
  403e63:	mov    edx,0x0
  403e68:	mov    esi,0x1c
  403e6d:	mov    rdi,rax
  403e70:	call   40babe <flatcc_verify_string_vector_field@@Base>
  403e75:	mov    DWORD PTR [rbp-0x4],eax
  403e78:	cmp    DWORD PTR [rbp-0x4],0x0
  403e7c:	je     403e86 <_start@@Base+0xcd6>
  403e7e:	mov    eax,DWORD PTR [rbp-0x4]
  403e81:	jmp    404339 <_start@@Base+0x1189>
  403e86:	mov    rax,QWORD PTR [rbp-0x18]
  403e8a:	mov    r9d,0xffffffff
  403e90:	mov    r8d,0x1
  403e96:	mov    ecx,0x1
  403e9b:	mov    edx,0x0
  403ea0:	mov    esi,0x18
  403ea5:	mov    rdi,rax
  403ea8:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403ead:	mov    DWORD PTR [rbp-0x4],eax
  403eb0:	cmp    DWORD PTR [rbp-0x4],0x0
  403eb4:	je     403ebe <_start@@Base+0xd0e>
  403eb6:	mov    eax,DWORD PTR [rbp-0x4]
  403eb9:	jmp    404339 <_start@@Base+0x1189>
  403ebe:	mov    rax,QWORD PTR [rbp-0x18]
  403ec2:	mov    r9d,0x1fffffff
  403ec8:	mov    r8d,0x4
  403ece:	mov    ecx,0x8
  403ed3:	mov    edx,0x0
  403ed8:	mov    esi,0x1d
  403edd:	mov    rdi,rax
  403ee0:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403ee5:	mov    DWORD PTR [rbp-0x4],eax
  403ee8:	cmp    DWORD PTR [rbp-0x4],0x0
  403eec:	je     403ef6 <_start@@Base+0xd46>
  403eee:	mov    eax,DWORD PTR [rbp-0x4]
  403ef1:	jmp    404339 <_start@@Base+0x1189>
  403ef6:	mov    rax,QWORD PTR [rbp-0x18]
  403efa:	lea    rcx,[rip+0xfffffffffffffdea]        # 403ceb <_start@@Base+0xb3b>
  403f01:	mov    edx,0x0
  403f06:	mov    esi,0xc
  403f0b:	mov    rdi,rax
  403f0e:	call   40bb57 <flatcc_verify_table_field@@Base>
  403f13:	mov    DWORD PTR [rbp-0x4],eax
  403f16:	cmp    DWORD PTR [rbp-0x4],0x0
  403f1a:	je     403f24 <_start@@Base+0xd74>
  403f1c:	mov    eax,DWORD PTR [rbp-0x4]
  403f1f:	jmp    404339 <_start@@Base+0x1189>
  403f24:	mov    rax,QWORD PTR [rbp-0x18]
  403f28:	lea    rcx,[rip+0xfffffffffffff544]        # 403473 <_start@@Base+0x2c3>
  403f2f:	mov    edx,0x0
  403f34:	mov    esi,0x8
  403f39:	mov    rdi,rax
  403f3c:	call   40c39c <flatcc_verify_union_field@@Base>
  403f41:	mov    DWORD PTR [rbp-0x4],eax
  403f44:	cmp    DWORD PTR [rbp-0x4],0x0
  403f48:	je     403f52 <_start@@Base+0xda2>
  403f4a:	mov    eax,DWORD PTR [rbp-0x4]
  403f4d:	jmp    404339 <_start@@Base+0x1189>
  403f52:	mov    rax,QWORD PTR [rbp-0x18]
  403f56:	mov    r9d,0x3fffffff
  403f5c:	mov    r8d,0x2
  403f62:	mov    ecx,0x4
  403f67:	mov    edx,0x0
  403f6c:	mov    esi,0x9
  403f71:	mov    rdi,rax
  403f74:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403f79:	mov    DWORD PTR [rbp-0x4],eax
  403f7c:	cmp    DWORD PTR [rbp-0x4],0x0
  403f80:	je     403f8a <_start@@Base+0xdda>
  403f82:	mov    eax,DWORD PTR [rbp-0x4]
  403f85:	jmp    404339 <_start@@Base+0x1189>
  403f8a:	mov    rax,QWORD PTR [rbp-0x18]
  403f8e:	mov    r9d,0x3fffffff
  403f94:	mov    r8d,0x2
  403f9a:	mov    ecx,0x4
  403f9f:	mov    edx,0x0
  403fa4:	mov    esi,0x1f
  403fa9:	mov    rdi,rax
  403fac:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  403fb1:	mov    DWORD PTR [rbp-0x4],eax
  403fb4:	cmp    DWORD PTR [rbp-0x4],0x0
  403fb8:	je     403fc2 <_start@@Base+0xe12>
  403fba:	mov    eax,DWORD PTR [rbp-0x4]
  403fbd:	jmp    404339 <_start@@Base+0x1189>
  403fc2:	mov    rax,QWORD PTR [rbp-0x18]
  403fc6:	lea    r9,[rip+0xfffffffffffffd1e]        # 403ceb <_start@@Base+0xb3b>
  403fcd:	mov    r8d,0x1
  403fd3:	mov    ecx,0x0
  403fd8:	mov    edx,0x0
  403fdd:	mov    esi,0xd
  403fe2:	mov    rdi,rax
  403fe5:	call   40c253 <flatcc_verify_table_as_nested_root@@Base>
  403fea:	mov    DWORD PTR [rbp-0x4],eax
  403fed:	cmp    DWORD PTR [rbp-0x4],0x0
  403ff1:	je     403ffb <_start@@Base+0xe4b>
  403ff3:	mov    eax,DWORD PTR [rbp-0x4]
  403ff6:	jmp    404339 <_start@@Base+0x1189>
  403ffb:	mov    rax,QWORD PTR [rbp-0x18]
  403fff:	lea    rcx,[rip+0xfffffffffffff814]        # 40381a <_start@@Base+0x66a>
  404006:	mov    edx,0x0
  40400b:	mov    esi,0xe
  404010:	mov    rdi,rax
  404013:	call   40bb57 <flatcc_verify_table_field@@Base>
  404018:	mov    DWORD PTR [rbp-0x4],eax
  40401b:	cmp    DWORD PTR [rbp-0x4],0x0
  40401f:	je     404029 <_start@@Base+0xe79>
  404021:	mov    eax,DWORD PTR [rbp-0x4]
  404024:	jmp    404339 <_start@@Base+0x1189>
  404029:	mov    rax,QWORD PTR [rbp-0x18]
  40402d:	mov    ecx,0x1
  404032:	mov    edx,0x1
  404037:	mov    esi,0xf
  40403c:	mov    rdi,rax
  40403f:	call   40b8de <flatcc_verify_field@@Base>
  404044:	mov    DWORD PTR [rbp-0x4],eax
  404047:	cmp    DWORD PTR [rbp-0x4],0x0
  40404b:	je     404055 <_start@@Base+0xea5>
  40404d:	mov    eax,DWORD PTR [rbp-0x4]
  404050:	jmp    404339 <_start@@Base+0x1189>
  404055:	mov    rax,QWORD PTR [rbp-0x18]
  404059:	mov    ecx,0x4
  40405e:	mov    edx,0x4
  404063:	mov    esi,0x10
  404068:	mov    rdi,rax
  40406b:	call   40b8de <flatcc_verify_field@@Base>
  404070:	mov    DWORD PTR [rbp-0x4],eax
  404073:	cmp    DWORD PTR [rbp-0x4],0x0
  404077:	je     404081 <_start@@Base+0xed1>
  404079:	mov    eax,DWORD PTR [rbp-0x4]
  40407c:	jmp    404339 <_start@@Base+0x1189>
  404081:	mov    rax,QWORD PTR [rbp-0x18]
  404085:	mov    ecx,0x4
  40408a:	mov    edx,0x4
  40408f:	mov    esi,0x11
  404094:	mov    rdi,rax
  404097:	call   40b8de <flatcc_verify_field@@Base>
  40409c:	mov    DWORD PTR [rbp-0x4],eax
  40409f:	cmp    DWORD PTR [rbp-0x4],0x0
  4040a3:	je     4040ad <_start@@Base+0xefd>
  4040a5:	mov    eax,DWORD PTR [rbp-0x4]
  4040a8:	jmp    404339 <_start@@Base+0x1189>
  4040ad:	mov    rax,QWORD PTR [rbp-0x18]
  4040b1:	mov    ecx,0x8
  4040b6:	mov    edx,0x8
  4040bb:	mov    esi,0x12
  4040c0:	mov    rdi,rax
  4040c3:	call   40b8de <flatcc_verify_field@@Base>
  4040c8:	mov    DWORD PTR [rbp-0x4],eax
  4040cb:	cmp    DWORD PTR [rbp-0x4],0x0
  4040cf:	je     4040d9 <_start@@Base+0xf29>
  4040d1:	mov    eax,DWORD PTR [rbp-0x4]
  4040d4:	jmp    404339 <_start@@Base+0x1189>
  4040d9:	mov    rax,QWORD PTR [rbp-0x18]
  4040dd:	mov    ecx,0x8
  4040e2:	mov    edx,0x8
  4040e7:	mov    esi,0x13
  4040ec:	mov    rdi,rax
  4040ef:	call   40b8de <flatcc_verify_field@@Base>
  4040f4:	mov    DWORD PTR [rbp-0x4],eax
  4040f7:	cmp    DWORD PTR [rbp-0x4],0x0
  4040fb:	je     404105 <_start@@Base+0xf55>
  4040fd:	mov    eax,DWORD PTR [rbp-0x4]
  404100:	jmp    404339 <_start@@Base+0x1189>
  404105:	mov    rax,QWORD PTR [rbp-0x18]
  404109:	mov    ecx,0x4
  40410e:	mov    edx,0x4
  404113:	mov    esi,0x14
  404118:	mov    rdi,rax
  40411b:	call   40b8de <flatcc_verify_field@@Base>
  404120:	mov    DWORD PTR [rbp-0x4],eax
  404123:	cmp    DWORD PTR [rbp-0x4],0x0
  404127:	je     404131 <_start@@Base+0xf81>
  404129:	mov    eax,DWORD PTR [rbp-0x4]
  40412c:	jmp    404339 <_start@@Base+0x1189>
  404131:	mov    rax,QWORD PTR [rbp-0x18]
  404135:	mov    ecx,0x4
  40413a:	mov    edx,0x4
  40413f:	mov    esi,0x15
  404144:	mov    rdi,rax
  404147:	call   40b8de <flatcc_verify_field@@Base>
  40414c:	mov    DWORD PTR [rbp-0x4],eax
  40414f:	cmp    DWORD PTR [rbp-0x4],0x0
  404153:	je     40415d <_start@@Base+0xfad>
  404155:	mov    eax,DWORD PTR [rbp-0x4]
  404158:	jmp    404339 <_start@@Base+0x1189>
  40415d:	mov    rax,QWORD PTR [rbp-0x18]
  404161:	mov    ecx,0x8
  404166:	mov    edx,0x8
  40416b:	mov    esi,0x16
  404170:	mov    rdi,rax
  404173:	call   40b8de <flatcc_verify_field@@Base>
  404178:	mov    DWORD PTR [rbp-0x4],eax
  40417b:	cmp    DWORD PTR [rbp-0x4],0x0
  40417f:	je     404189 <_start@@Base+0xfd9>
  404181:	mov    eax,DWORD PTR [rbp-0x4]
  404184:	jmp    404339 <_start@@Base+0x1189>
  404189:	mov    rax,QWORD PTR [rbp-0x18]
  40418d:	mov    ecx,0x8
  404192:	mov    edx,0x8
  404197:	mov    esi,0x17
  40419c:	mov    rdi,rax
  40419f:	call   40b8de <flatcc_verify_field@@Base>
  4041a4:	mov    DWORD PTR [rbp-0x4],eax
  4041a7:	cmp    DWORD PTR [rbp-0x4],0x0
  4041ab:	je     4041b5 <_start@@Base+0x1005>
  4041ad:	mov    eax,DWORD PTR [rbp-0x4]
  4041b0:	jmp    404339 <_start@@Base+0x1189>
  4041b5:	mov    rax,QWORD PTR [rbp-0x18]
  4041b9:	mov    ecx,0x4
  4041be:	mov    edx,0x4
  4041c3:	mov    esi,0x19
  4041c8:	mov    rdi,rax
  4041cb:	call   40b8de <flatcc_verify_field@@Base>
  4041d0:	mov    DWORD PTR [rbp-0x4],eax
  4041d3:	cmp    DWORD PTR [rbp-0x4],0x0
  4041d7:	je     4041e1 <_start@@Base+0x1031>
  4041d9:	mov    eax,DWORD PTR [rbp-0x4]
  4041dc:	jmp    404339 <_start@@Base+0x1189>
  4041e1:	mov    rax,QWORD PTR [rbp-0x18]
  4041e5:	mov    ecx,0x4
  4041ea:	mov    edx,0x4
  4041ef:	mov    esi,0x1a
  4041f4:	mov    rdi,rax
  4041f7:	call   40b8de <flatcc_verify_field@@Base>
  4041fc:	mov    DWORD PTR [rbp-0x4],eax
  4041ff:	cmp    DWORD PTR [rbp-0x4],0x0
  404203:	je     40420d <_start@@Base+0x105d>
  404205:	mov    eax,DWORD PTR [rbp-0x4]
  404208:	jmp    404339 <_start@@Base+0x1189>
  40420d:	mov    rax,QWORD PTR [rbp-0x18]
  404211:	mov    ecx,0x4
  404216:	mov    edx,0x4
  40421b:	mov    esi,0x1b
  404220:	mov    rdi,rax
  404223:	call   40b8de <flatcc_verify_field@@Base>
  404228:	mov    DWORD PTR [rbp-0x4],eax
  40422b:	cmp    DWORD PTR [rbp-0x4],0x0
  40422f:	je     404239 <_start@@Base+0x1089>
  404231:	mov    eax,DWORD PTR [rbp-0x4]
  404234:	jmp    404339 <_start@@Base+0x1189>
  404239:	mov    rax,QWORD PTR [rbp-0x18]
  40423d:	mov    r9d,0xffffffff
  404243:	mov    r8d,0x1
  404249:	mov    ecx,0x1
  40424e:	mov    edx,0x0
  404253:	mov    esi,0x1e
  404258:	mov    rdi,rax
  40425b:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  404260:	mov    DWORD PTR [rbp-0x4],eax
  404263:	cmp    DWORD PTR [rbp-0x4],0x0
  404267:	je     404271 <_start@@Base+0x10c1>
  404269:	mov    eax,DWORD PTR [rbp-0x4]
  40426c:	jmp    404339 <_start@@Base+0x1189>
  404271:	mov    rax,QWORD PTR [rbp-0x18]
  404275:	mov    r9d,0x1fffffff
  40427b:	mov    r8d,0x8
  404281:	mov    ecx,0x8
  404286:	mov    edx,0x0
  40428b:	mov    esi,0x20
  404290:	mov    rdi,rax
  404293:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  404298:	mov    DWORD PTR [rbp-0x4],eax
  40429b:	cmp    DWORD PTR [rbp-0x4],0x0
  40429f:	je     4042a9 <_start@@Base+0x10f9>
  4042a1:	mov    eax,DWORD PTR [rbp-0x4]
  4042a4:	jmp    404339 <_start@@Base+0x1189>
  4042a9:	mov    rax,QWORD PTR [rbp-0x18]
  4042ad:	mov    r9d,0x1fffffff
  4042b3:	mov    r8d,0x8
  4042b9:	mov    ecx,0x8
  4042be:	mov    edx,0x0
  4042c3:	mov    esi,0x21
  4042c8:	mov    rdi,rax
  4042cb:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  4042d0:	mov    DWORD PTR [rbp-0x4],eax
  4042d3:	cmp    DWORD PTR [rbp-0x4],0x0
  4042d7:	je     4042de <_start@@Base+0x112e>
  4042d9:	mov    eax,DWORD PTR [rbp-0x4]
  4042dc:	jmp    404339 <_start@@Base+0x1189>
  4042de:	mov    rax,QWORD PTR [rbp-0x18]
  4042e2:	lea    rcx,[rip+0xfffffffffffff2e4]        # 4035cd <_start@@Base+0x41d>
  4042e9:	mov    edx,0x0
  4042ee:	mov    esi,0x22
  4042f3:	mov    rdi,rax
  4042f6:	call   40bb57 <flatcc_verify_table_field@@Base>
  4042fb:	mov    DWORD PTR [rbp-0x4],eax
  4042fe:	cmp    DWORD PTR [rbp-0x4],0x0
  404302:	je     404309 <_start@@Base+0x1159>
  404304:	mov    eax,DWORD PTR [rbp-0x4]
  404307:	jmp    404339 <_start@@Base+0x1189>
  404309:	mov    rax,QWORD PTR [rbp-0x18]
  40430d:	lea    rcx,[rip+0xfffffffffffff920]        # 403c34 <_start@@Base+0xa84>
  404314:	mov    edx,0x0
  404319:	mov    esi,0x23
  40431e:	mov    rdi,rax
  404321:	call   40bb57 <flatcc_verify_table_field@@Base>
  404326:	mov    DWORD PTR [rbp-0x4],eax
  404329:	cmp    DWORD PTR [rbp-0x4],0x0
  40432d:	je     404334 <_start@@Base+0x1184>
  40432f:	mov    eax,DWORD PTR [rbp-0x4]
  404332:	jmp    404339 <_start@@Base+0x1189>
  404334:	mov    eax,0x0
  404339:	leave  
  40433a:	ret    
  40433b:	push   rbp
  40433c:	mov    rbp,rsp
  40433f:	sub    rsp,0x20
  404343:	mov    QWORD PTR [rbp-0x8],rdi
  404347:	mov    QWORD PTR [rbp-0x10],rsi
  40434b:	mov    QWORD PTR [rbp-0x18],rdx
  40434f:	mov    rdx,QWORD PTR [rbp-0x18]
  404353:	mov    rsi,QWORD PTR [rbp-0x10]
  404357:	mov    rax,QWORD PTR [rbp-0x8]
  40435b:	lea    rcx,[rip+0xfffffffffffff989]        # 403ceb <_start@@Base+0xb3b>
  404362:	mov    rdi,rax
  404365:	call   40c04b <flatcc_verify_table_as_root@@Base>
  40436a:	leave  
  40436b:	ret    
  40436c:	endbr64 
  404370:	push   rbp
  404371:	mov    rbp,rsp
  404374:	sub    rsp,0x20
  404378:	mov    QWORD PTR [rbp-0x18],rdi
  40437c:	mov    rax,QWORD PTR [rbp-0x18]
  404380:	mov    ecx,0x1
  404385:	mov    edx,0x1
  40438a:	mov    esi,0x0
  40438f:	mov    rdi,rax
  404392:	call   40b8de <flatcc_verify_field@@Base>
  404397:	mov    DWORD PTR [rbp-0x4],eax
  40439a:	cmp    DWORD PTR [rbp-0x4],0x0
  40439e:	je     4043a8 <_start@@Base+0x11f8>
  4043a0:	mov    eax,DWORD PTR [rbp-0x4]
  4043a3:	jmp    4045a0 <_start@@Base+0x13f0>
  4043a8:	mov    rax,QWORD PTR [rbp-0x18]
  4043ac:	mov    ecx,0x1
  4043b1:	mov    edx,0x1
  4043b6:	mov    esi,0x1
  4043bb:	mov    rdi,rax
  4043be:	call   40b8de <flatcc_verify_field@@Base>
  4043c3:	mov    DWORD PTR [rbp-0x4],eax
  4043c6:	cmp    DWORD PTR [rbp-0x4],0x0
  4043ca:	je     4043d4 <_start@@Base+0x1224>
  4043cc:	mov    eax,DWORD PTR [rbp-0x4]
  4043cf:	jmp    4045a0 <_start@@Base+0x13f0>
  4043d4:	mov    rax,QWORD PTR [rbp-0x18]
  4043d8:	mov    ecx,0x2
  4043dd:	mov    edx,0x2
  4043e2:	mov    esi,0x2
  4043e7:	mov    rdi,rax
  4043ea:	call   40b8de <flatcc_verify_field@@Base>
  4043ef:	mov    DWORD PTR [rbp-0x4],eax
  4043f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4043f6:	je     404400 <_start@@Base+0x1250>
  4043f8:	mov    eax,DWORD PTR [rbp-0x4]
  4043fb:	jmp    4045a0 <_start@@Base+0x13f0>
  404400:	mov    rax,QWORD PTR [rbp-0x18]
  404404:	mov    ecx,0x2
  404409:	mov    edx,0x2
  40440e:	mov    esi,0x3
  404413:	mov    rdi,rax
  404416:	call   40b8de <flatcc_verify_field@@Base>
  40441b:	mov    DWORD PTR [rbp-0x4],eax
  40441e:	cmp    DWORD PTR [rbp-0x4],0x0
  404422:	je     40442c <_start@@Base+0x127c>
  404424:	mov    eax,DWORD PTR [rbp-0x4]
  404427:	jmp    4045a0 <_start@@Base+0x13f0>
  40442c:	mov    rax,QWORD PTR [rbp-0x18]
  404430:	mov    ecx,0x4
  404435:	mov    edx,0x4
  40443a:	mov    esi,0x4
  40443f:	mov    rdi,rax
  404442:	call   40b8de <flatcc_verify_field@@Base>
  404447:	mov    DWORD PTR [rbp-0x4],eax
  40444a:	cmp    DWORD PTR [rbp-0x4],0x0
  40444e:	je     404458 <_start@@Base+0x12a8>
  404450:	mov    eax,DWORD PTR [rbp-0x4]
  404453:	jmp    4045a0 <_start@@Base+0x13f0>
  404458:	mov    rax,QWORD PTR [rbp-0x18]
  40445c:	mov    ecx,0x4
  404461:	mov    edx,0x4
  404466:	mov    esi,0x5
  40446b:	mov    rdi,rax
  40446e:	call   40b8de <flatcc_verify_field@@Base>
  404473:	mov    DWORD PTR [rbp-0x4],eax
  404476:	cmp    DWORD PTR [rbp-0x4],0x0
  40447a:	je     404484 <_start@@Base+0x12d4>
  40447c:	mov    eax,DWORD PTR [rbp-0x4]
  40447f:	jmp    4045a0 <_start@@Base+0x13f0>
  404484:	mov    rax,QWORD PTR [rbp-0x18]
  404488:	mov    ecx,0x8
  40448d:	mov    edx,0x8
  404492:	mov    esi,0x6
  404497:	mov    rdi,rax
  40449a:	call   40b8de <flatcc_verify_field@@Base>
  40449f:	mov    DWORD PTR [rbp-0x4],eax
  4044a2:	cmp    DWORD PTR [rbp-0x4],0x0
  4044a6:	je     4044b0 <_start@@Base+0x1300>
  4044a8:	mov    eax,DWORD PTR [rbp-0x4]
  4044ab:	jmp    4045a0 <_start@@Base+0x13f0>
  4044b0:	mov    rax,QWORD PTR [rbp-0x18]
  4044b4:	mov    ecx,0x8
  4044b9:	mov    edx,0x8
  4044be:	mov    esi,0x7
  4044c3:	mov    rdi,rax
  4044c6:	call   40b8de <flatcc_verify_field@@Base>
  4044cb:	mov    DWORD PTR [rbp-0x4],eax
  4044ce:	cmp    DWORD PTR [rbp-0x4],0x0
  4044d2:	je     4044dc <_start@@Base+0x132c>
  4044d4:	mov    eax,DWORD PTR [rbp-0x4]
  4044d7:	jmp    4045a0 <_start@@Base+0x13f0>
  4044dc:	mov    rax,QWORD PTR [rbp-0x18]
  4044e0:	mov    ecx,0x4
  4044e5:	mov    edx,0x4
  4044ea:	mov    esi,0x8
  4044ef:	mov    rdi,rax
  4044f2:	call   40b8de <flatcc_verify_field@@Base>
  4044f7:	mov    DWORD PTR [rbp-0x4],eax
  4044fa:	cmp    DWORD PTR [rbp-0x4],0x0
  4044fe:	je     404508 <_start@@Base+0x1358>
  404500:	mov    eax,DWORD PTR [rbp-0x4]
  404503:	jmp    4045a0 <_start@@Base+0x13f0>
  404508:	mov    rax,QWORD PTR [rbp-0x18]
  40450c:	mov    ecx,0x8
  404511:	mov    edx,0x8
  404516:	mov    esi,0x9
  40451b:	mov    rdi,rax
  40451e:	call   40b8de <flatcc_verify_field@@Base>
  404523:	mov    DWORD PTR [rbp-0x4],eax
  404526:	cmp    DWORD PTR [rbp-0x4],0x0
  40452a:	je     404531 <_start@@Base+0x1381>
  40452c:	mov    eax,DWORD PTR [rbp-0x4]
  40452f:	jmp    4045a0 <_start@@Base+0x13f0>
  404531:	mov    rax,QWORD PTR [rbp-0x18]
  404535:	mov    r9d,0xffffffff
  40453b:	mov    r8d,0x1
  404541:	mov    ecx,0x1
  404546:	mov    edx,0x0
  40454b:	mov    esi,0xa
  404550:	mov    rdi,rax
  404553:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  404558:	mov    DWORD PTR [rbp-0x4],eax
  40455b:	cmp    DWORD PTR [rbp-0x4],0x0
  40455f:	je     404566 <_start@@Base+0x13b6>
  404561:	mov    eax,DWORD PTR [rbp-0x4]
  404564:	jmp    4045a0 <_start@@Base+0x13f0>
  404566:	mov    rax,QWORD PTR [rbp-0x18]
  40456a:	mov    r9d,0x1fffffff
  404570:	mov    r8d,0x8
  404576:	mov    ecx,0x8
  40457b:	mov    edx,0x0
  404580:	mov    esi,0xb
  404585:	mov    rdi,rax
  404588:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40458d:	mov    DWORD PTR [rbp-0x4],eax
  404590:	cmp    DWORD PTR [rbp-0x4],0x0
  404594:	je     40459b <_start@@Base+0x13eb>
  404596:	mov    eax,DWORD PTR [rbp-0x4]
  404599:	jmp    4045a0 <_start@@Base+0x13f0>
  40459b:	mov    eax,0x0
  4045a0:	leave  
  4045a1:	ret    
  4045a2:	endbr64 
  4045a6:	push   rbp
  4045a7:	mov    rbp,rsp
  4045aa:	sub    rsp,0x20
  4045ae:	mov    QWORD PTR [rbp-0x18],rdi
  4045b2:	mov    rax,QWORD PTR [rbp-0x18]
  4045b6:	mov    ecx,0x4
  4045bb:	mov    edx,0x4
  4045c0:	mov    esi,0x0
  4045c5:	mov    rdi,rax
  4045c8:	call   40b8de <flatcc_verify_field@@Base>
  4045cd:	mov    DWORD PTR [rbp-0x4],eax
  4045d0:	cmp    DWORD PTR [rbp-0x4],0x0
  4045d4:	je     4045db <_start@@Base+0x142b>
  4045d6:	mov    eax,DWORD PTR [rbp-0x4]
  4045d9:	jmp    4045e0 <_start@@Base+0x1430>
  4045db:	mov    eax,0x0
  4045e0:	leave  
  4045e1:	ret    
  4045e2:	endbr64 
  4045e6:	push   rbp
  4045e7:	mov    rbp,rsp
  4045ea:	sub    rsp,0x20
  4045ee:	mov    QWORD PTR [rbp-0x18],rdi
  4045f2:	mov    rax,QWORD PTR [rbp-0x18]
  4045f6:	lea    rcx,[rip+0xffffffffffffef09]        # 403506 <_start@@Base+0x356>
  4045fd:	mov    edx,0x0
  404602:	mov    esi,0x1
  404607:	mov    rdi,rax
  40460a:	call   40c39c <flatcc_verify_union_field@@Base>
  40460f:	mov    DWORD PTR [rbp-0x4],eax
  404612:	cmp    DWORD PTR [rbp-0x4],0x0
  404616:	je     404620 <_start@@Base+0x1470>
  404618:	mov    eax,DWORD PTR [rbp-0x4]
  40461b:	jmp    4046d4 <_start@@Base+0x1524>
  404620:	mov    rax,QWORD PTR [rbp-0x18]
  404624:	lea    rcx,[rip+0xffffffffffffeedb]        # 403506 <_start@@Base+0x356>
  40462b:	mov    edx,0x0
  404630:	mov    esi,0x3
  404635:	mov    rdi,rax
  404638:	call   40c39c <flatcc_verify_union_field@@Base>
  40463d:	mov    DWORD PTR [rbp-0x4],eax
  404640:	cmp    DWORD PTR [rbp-0x4],0x0
  404644:	je     40464e <_start@@Base+0x149e>
  404646:	mov    eax,DWORD PTR [rbp-0x4]
  404649:	jmp    4046d4 <_start@@Base+0x1524>
  40464e:	mov    rax,QWORD PTR [rbp-0x18]
  404652:	lea    rcx,[rip+0xffffffffffffeead]        # 403506 <_start@@Base+0x356>
  404659:	mov    edx,0x0
  40465e:	mov    esi,0x5
  404663:	mov    rdi,rax
  404666:	call   40c39c <flatcc_verify_union_field@@Base>
  40466b:	mov    DWORD PTR [rbp-0x4],eax
  40466e:	cmp    DWORD PTR [rbp-0x4],0x0
  404672:	je     404679 <_start@@Base+0x14c9>
  404674:	mov    eax,DWORD PTR [rbp-0x4]
  404677:	jmp    4046d4 <_start@@Base+0x1524>
  404679:	mov    rax,QWORD PTR [rbp-0x18]
  40467d:	lea    rcx,[rip+0xffffffffffffee82]        # 403506 <_start@@Base+0x356>
  404684:	mov    edx,0x0
  404689:	mov    esi,0x7
  40468e:	mov    rdi,rax
  404691:	call   40c39c <flatcc_verify_union_field@@Base>
  404696:	mov    DWORD PTR [rbp-0x4],eax
  404699:	cmp    DWORD PTR [rbp-0x4],0x0
  40469d:	je     4046a4 <_start@@Base+0x14f4>
  40469f:	mov    eax,DWORD PTR [rbp-0x4]
  4046a2:	jmp    4046d4 <_start@@Base+0x1524>
  4046a4:	mov    rax,QWORD PTR [rbp-0x18]
  4046a8:	lea    rcx,[rip+0xffffffffffffee57]        # 403506 <_start@@Base+0x356>
  4046af:	mov    edx,0x0
  4046b4:	mov    esi,0x9
  4046b9:	mov    rdi,rax
  4046bc:	call   40c5a4 <flatcc_verify_union_vector_field@@Base>
  4046c1:	mov    DWORD PTR [rbp-0x4],eax
  4046c4:	cmp    DWORD PTR [rbp-0x4],0x0
  4046c8:	je     4046cf <_start@@Base+0x151f>
  4046ca:	mov    eax,DWORD PTR [rbp-0x4]
  4046cd:	jmp    4046d4 <_start@@Base+0x1524>
  4046cf:	mov    eax,0x0
  4046d4:	leave  
  4046d5:	ret    

00000000004046d6 <main@@Base>:
  4046d6:	endbr64 
  4046da:	push   rbp
  4046db:	mov    rbp,rsp
  4046de:	sub    rsp,0x1c0
  4046e5:	mov    DWORD PTR [rbp-0x1b4],edi
  4046eb:	mov    QWORD PTR [rbp-0x1c0],rsi
  4046f2:	mov    rax,QWORD PTR fs:0x28
  4046fb:	mov    QWORD PTR [rbp-0x8],rax
  4046ff:	xor    eax,eax
  404701:	lea    rax,[rbp-0x190]
  404708:	mov    QWORD PTR [rbp-0x1a0],rax
  40470f:	mov    rax,QWORD PTR [rbp-0x1a0]
  404716:	mov    rdi,rax
  404719:	call   405274 <flatcc_builder_init@@Base>
  40471e:	mov    rax,QWORD PTR [rbp-0x1a0]
  404725:	mov    rdi,rax
  404728:	call   4033d5 <_start@@Base+0x225>
  40472d:	mov    rax,QWORD PTR [rbp-0x1a0]
  404734:	lea    rsi,[rip+0x8a2e]        # 40d169 <_IO_stdin_used@@Base+0x169>
  40473b:	mov    rdi,rax
  40473e:	call   4033a0 <_start@@Base+0x1f0>
  404743:	mov    rax,QWORD PTR [rbp-0x1a0]
  40474a:	mov    rdi,rax
  40474d:	call   40340d <_start@@Base+0x25d>
  404752:	lea    rdx,[rbp-0x1a8]
  404759:	mov    rax,QWORD PTR [rbp-0x1a0]
  404760:	mov    rsi,rdx
  404763:	mov    rdi,rax
  404766:	call   409c13 <flatcc_builder_get_direct_buffer@@Base>
  40476b:	mov    QWORD PTR [rbp-0x198],rax
  404772:	mov    rcx,QWORD PTR [rbp-0x1a8]
  404779:	mov    rax,QWORD PTR [rbp-0x198]
  404780:	lea    rdx,[rip+0x89dd]        # 40d164 <_IO_stdin_used@@Base+0x164>
  404787:	mov    rsi,rcx
  40478a:	mov    rdi,rax
  40478d:	call   40433b <_start@@Base+0x118b>
  404792:	mov    DWORD PTR [rbp-0x1ac],eax
  404798:	mov    rax,QWORD PTR [rbp-0x1a0]
  40479f:	mov    rdi,rax
  4047a2:	call   4054e3 <flatcc_builder_clear@@Base>
  4047a7:	mov    eax,DWORD PTR [rbp-0x1ac]
  4047ad:	mov    rcx,QWORD PTR [rbp-0x8]
  4047b1:	xor    rcx,QWORD PTR fs:0x28
  4047ba:	je     4047c1 <main@@Base+0xeb>
  4047bc:	call   403120 <__stack_chk_fail@plt>
  4047c1:	leave  
  4047c2:	ret    
  4047c3:	push   rbp
  4047c4:	mov    rbp,rsp
  4047c7:	sub    rsp,0x30
  4047cb:	mov    QWORD PTR [rbp-0x28],rdi
  4047cf:	mov    QWORD PTR [rbp-0x30],rsi
  4047d3:	mov    rax,QWORD PTR fs:0x28
  4047dc:	mov    QWORD PTR [rbp-0x8],rax
  4047e0:	xor    eax,eax
  4047e2:	mov    QWORD PTR [rbp-0x10],0x0
  4047ea:	cmp    QWORD PTR [rbp-0x28],0x7
  4047ef:	ja     4047f9 <main@@Base+0x123>
  4047f1:	mov    QWORD PTR [rbp-0x28],0x8
  4047f9:	mov    rdx,QWORD PTR [rbp-0x30]
  4047fd:	mov    rcx,QWORD PTR [rbp-0x28]
  404801:	lea    rax,[rbp-0x10]
  404805:	mov    rsi,rcx
  404808:	mov    rdi,rax
  40480b:	call   4031a0 <posix_memalign@plt>
  404810:	mov    DWORD PTR [rbp-0x14],eax
  404813:	cmp    DWORD PTR [rbp-0x14],0x0
  404817:	je     404836 <main@@Base+0x160>
  404819:	mov    rax,QWORD PTR [rbp-0x10]
  40481d:	test   rax,rax
  404820:	je     404836 <main@@Base+0x160>
  404822:	mov    rax,QWORD PTR [rbp-0x10]
  404826:	mov    rdi,rax
  404829:	call   4030f0 <free@plt>
  40482e:	mov    QWORD PTR [rbp-0x10],0x0
  404836:	mov    rax,QWORD PTR [rbp-0x10]
  40483a:	mov    rcx,QWORD PTR [rbp-0x8]
  40483e:	xor    rcx,QWORD PTR fs:0x28
  404847:	je     40484e <main@@Base+0x178>
  404849:	call   403120 <__stack_chk_fail@plt>
  40484e:	leave  
  40484f:	ret    
  404850:	push   rbp
  404851:	mov    rbp,rsp
  404854:	mov    DWORD PTR [rbp-0x4],edi
  404857:	mov    eax,DWORD PTR [rbp-0x4]
  40485a:	pop    rbp
  40485b:	ret    
  40485c:	push   rbp
  40485d:	mov    rbp,rsp
  404860:	mov    eax,edi
  404862:	mov    BYTE PTR [rbp-0x4],al
  404865:	movzx  eax,BYTE PTR [rbp-0x4]
  404869:	pop    rbp
  40486a:	ret    
  40486b:	push   rbp
  40486c:	mov    rbp,rsp
  40486f:	mov    DWORD PTR [rbp-0x4],edi
  404872:	mov    eax,DWORD PTR [rbp-0x4]
  404875:	pop    rbp
  404876:	ret    
  404877:	push   rbp
  404878:	mov    rbp,rsp
  40487b:	mov    QWORD PTR [rbp-0x8],rdi
  40487f:	mov    QWORD PTR [rbp-0x10],rsi
  404883:	mov    rax,QWORD PTR [rbp-0x8]
  404887:	mov    rdx,QWORD PTR [rax]
  40488a:	mov    rax,QWORD PTR [rbp-0x8]
  40488e:	mov    rax,QWORD PTR [rax+0x8]
  404892:	cmp    rdx,rax
  404895:	jne    4048b7 <main@@Base+0x1e1>
  404897:	cmp    QWORD PTR [rbp-0x10],0x0
  40489c:	je     4048ad <main@@Base+0x1d7>
  40489e:	mov    rax,QWORD PTR [rbp-0x8]
  4048a2:	mov    rdx,QWORD PTR [rax+0x30]
  4048a6:	mov    rax,QWORD PTR [rbp-0x10]
  4048aa:	mov    QWORD PTR [rax],rdx
  4048ad:	mov    rax,QWORD PTR [rbp-0x8]
  4048b1:	mov    rax,QWORD PTR [rax+0x10]
  4048b5:	jmp    4048ce <main@@Base+0x1f8>
  4048b7:	cmp    QWORD PTR [rbp-0x10],0x0
  4048bc:	je     4048c9 <main@@Base+0x1f3>
  4048be:	mov    rax,QWORD PTR [rbp-0x10]
  4048c2:	mov    QWORD PTR [rax],0x0
  4048c9:	mov    eax,0x0
  4048ce:	pop    rbp
  4048cf:	ret    
  4048d0:	push   rbp
  4048d1:	mov    rbp,rsp
  4048d4:	sub    rsp,0x20
  4048d8:	mov    QWORD PTR [rbp-0x18],rdi
  4048dc:	mov    QWORD PTR [rbp-0x20],rsi
  4048e0:	mov    rdx,QWORD PTR [rbp-0x20]
  4048e4:	mov    rax,QWORD PTR [rbp-0x18]
  4048e8:	mov    esi,0x0
  4048ed:	mov    rdi,rax
  4048f0:	call   403150 <memchr@plt>
  4048f5:	mov    QWORD PTR [rbp-0x8],rax
  4048f9:	cmp    QWORD PTR [rbp-0x8],0x0
  4048fe:	je     40490a <main@@Base+0x234>
  404900:	mov    rax,QWORD PTR [rbp-0x8]
  404904:	sub    rax,QWORD PTR [rbp-0x18]
  404908:	jmp    40490e <main@@Base+0x238>
  40490a:	mov    rax,QWORD PTR [rbp-0x20]
  40490e:	leave  
  40490f:	ret    

0000000000404910 <flatcc_builder_default_alloc@@Base>:
  404910:	endbr64 
  404914:	push   rbp
  404915:	mov    rbp,rsp
  404918:	sub    rsp,0x30
  40491c:	mov    QWORD PTR [rbp-0x18],rdi
  404920:	mov    QWORD PTR [rbp-0x20],rsi
  404924:	mov    QWORD PTR [rbp-0x28],rdx
  404928:	mov    DWORD PTR [rbp-0x2c],ecx
  40492b:	mov    DWORD PTR [rbp-0x30],r8d
  40492f:	cmp    QWORD PTR [rbp-0x28],0x0
  404934:	jne    404972 <flatcc_builder_default_alloc@@Base+0x62>
  404936:	mov    rax,QWORD PTR [rbp-0x20]
  40493a:	mov    rax,QWORD PTR [rax]
  40493d:	test   rax,rax
  404940:	je     404968 <flatcc_builder_default_alloc@@Base+0x58>
  404942:	mov    rax,QWORD PTR [rbp-0x20]
  404946:	mov    rax,QWORD PTR [rax]
  404949:	mov    rdi,rax
  40494c:	call   4030f0 <free@plt>
  404951:	mov    rax,QWORD PTR [rbp-0x20]
  404955:	mov    QWORD PTR [rax],0x0
  40495c:	mov    rax,QWORD PTR [rbp-0x20]
  404960:	mov    QWORD PTR [rax+0x8],0x0
  404968:	mov    eax,0x0
  40496d:	jmp    404a81 <flatcc_builder_default_alloc@@Base+0x171>
  404972:	cmp    DWORD PTR [rbp-0x30],0x4
  404976:	je     4049a8 <flatcc_builder_default_alloc@@Base+0x98>
  404978:	cmp    DWORD PTR [rbp-0x30],0x4
  40497c:	jg     404986 <flatcc_builder_default_alloc@@Base+0x76>
  40497e:	cmp    DWORD PTR [rbp-0x30],0x1
  404982:	je     404994 <flatcc_builder_default_alloc@@Base+0x84>
  404984:	jmp    4049bc <flatcc_builder_default_alloc@@Base+0xac>
  404986:	cmp    DWORD PTR [rbp-0x30],0x5
  40498a:	je     40499e <flatcc_builder_default_alloc@@Base+0x8e>
  40498c:	cmp    DWORD PTR [rbp-0x30],0x7
  404990:	je     4049b2 <flatcc_builder_default_alloc@@Base+0xa2>
  404992:	jmp    4049bc <flatcc_builder_default_alloc@@Base+0xac>
  404994:	mov    QWORD PTR [rbp-0x10],0x100
  40499c:	jmp    4049c5 <flatcc_builder_default_alloc@@Base+0xb5>
  40499e:	mov    rax,QWORD PTR [rbp-0x28]
  4049a2:	mov    QWORD PTR [rbp-0x10],rax
  4049a6:	jmp    4049c5 <flatcc_builder_default_alloc@@Base+0xb5>
  4049a8:	mov    QWORD PTR [rbp-0x10],0x120
  4049b0:	jmp    4049c5 <flatcc_builder_default_alloc@@Base+0xb5>
  4049b2:	mov    QWORD PTR [rbp-0x10],0x40
  4049ba:	jmp    4049c5 <flatcc_builder_default_alloc@@Base+0xb5>
  4049bc:	mov    QWORD PTR [rbp-0x10],0x20
  4049c4:	nop
  4049c5:	jmp    4049cb <flatcc_builder_default_alloc@@Base+0xbb>
  4049c7:	shl    QWORD PTR [rbp-0x10],1
  4049cb:	mov    rax,QWORD PTR [rbp-0x10]
  4049cf:	cmp    rax,QWORD PTR [rbp-0x28]
  4049d3:	jb     4049c7 <flatcc_builder_default_alloc@@Base+0xb7>
  4049d5:	mov    rax,QWORD PTR [rbp-0x20]
  4049d9:	mov    rax,QWORD PTR [rax+0x8]
  4049dd:	cmp    QWORD PTR [rbp-0x28],rax
  4049e1:	ja     4049fe <flatcc_builder_default_alloc@@Base+0xee>
  4049e3:	mov    rax,QWORD PTR [rbp-0x20]
  4049e7:	mov    rax,QWORD PTR [rax+0x8]
  4049eb:	shr    rax,1
  4049ee:	cmp    QWORD PTR [rbp-0x10],rax
  4049f2:	ja     4049fe <flatcc_builder_default_alloc@@Base+0xee>
  4049f4:	mov    eax,0x0
  4049f9:	jmp    404a81 <flatcc_builder_default_alloc@@Base+0x171>
  4049fe:	mov    rax,QWORD PTR [rbp-0x20]
  404a02:	mov    rax,QWORD PTR [rax]
  404a05:	mov    rdx,QWORD PTR [rbp-0x10]
  404a09:	mov    rsi,rdx
  404a0c:	mov    rdi,rax
  404a0f:	call   403190 <realloc@plt>
  404a14:	mov    QWORD PTR [rbp-0x8],rax
  404a18:	cmp    QWORD PTR [rbp-0x8],0x0
  404a1d:	jne    404a26 <flatcc_builder_default_alloc@@Base+0x116>
  404a1f:	mov    eax,0xffffffff
  404a24:	jmp    404a81 <flatcc_builder_default_alloc@@Base+0x171>
  404a26:	cmp    DWORD PTR [rbp-0x2c],0x0
  404a2a:	je     404a65 <flatcc_builder_default_alloc@@Base+0x155>
  404a2c:	mov    rax,QWORD PTR [rbp-0x20]
  404a30:	mov    rax,QWORD PTR [rax+0x8]
  404a34:	cmp    QWORD PTR [rbp-0x10],rax
  404a38:	jbe    404a65 <flatcc_builder_default_alloc@@Base+0x155>
  404a3a:	mov    rax,QWORD PTR [rbp-0x20]
  404a3e:	mov    rax,QWORD PTR [rax+0x8]
  404a42:	mov    rdx,QWORD PTR [rbp-0x10]
  404a46:	sub    rdx,rax
  404a49:	mov    rax,QWORD PTR [rbp-0x20]
  404a4d:	mov    rcx,QWORD PTR [rax+0x8]
  404a51:	mov    rax,QWORD PTR [rbp-0x8]
  404a55:	add    rax,rcx
  404a58:	mov    esi,0x0
  404a5d:	mov    rdi,rax
  404a60:	call   403140 <memset@plt>
  404a65:	mov    rax,QWORD PTR [rbp-0x20]
  404a69:	mov    rdx,QWORD PTR [rbp-0x8]
  404a6d:	mov    QWORD PTR [rax],rdx
  404a70:	mov    rax,QWORD PTR [rbp-0x20]
  404a74:	mov    rdx,QWORD PTR [rbp-0x10]
  404a78:	mov    QWORD PTR [rax+0x8],rdx
  404a7c:	mov    eax,0x0
  404a81:	leave  
  404a82:	ret    
  404a83:	push   rbp
  404a84:	mov    rbp,rsp
  404a87:	mov    QWORD PTR [rbp-0x18],rdi
  404a8b:	mov    DWORD PTR [rbp-0x1c],esi
  404a8e:	mov    rax,QWORD PTR [rbp-0x18]
  404a92:	add    rax,0x58
  404a96:	add    rax,0x10
  404a9a:	mov    QWORD PTR [rbp-0x8],rax
  404a9e:	mov    rax,QWORD PTR [rbp-0x18]
  404aa2:	mov    rdx,QWORD PTR [rax+0x68]
  404aa6:	mov    rax,QWORD PTR [rbp-0x18]
  404aaa:	mov    eax,DWORD PTR [rax+0x28]
  404aad:	mov    eax,eax
  404aaf:	add    rdx,rax
  404ab2:	mov    rax,QWORD PTR [rbp-0x18]
  404ab6:	mov    QWORD PTR [rax+0x18],rdx
  404aba:	mov    rax,QWORD PTR [rbp-0x8]
  404abe:	mov    rax,QWORD PTR [rax+0x8]
  404ac2:	mov    edx,eax
  404ac4:	mov    rax,QWORD PTR [rbp-0x18]
  404ac8:	mov    eax,DWORD PTR [rax+0x28]
  404acb:	sub    edx,eax
  404acd:	mov    rax,QWORD PTR [rbp-0x18]
  404ad1:	mov    DWORD PTR [rax+0x24],edx
  404ad4:	mov    rax,QWORD PTR [rbp-0x18]
  404ad8:	mov    eax,DWORD PTR [rax+0x24]
  404adb:	cmp    DWORD PTR [rbp-0x1c],eax
  404ade:	jae    404aea <flatcc_builder_default_alloc@@Base+0x1da>
  404ae0:	mov    rax,QWORD PTR [rbp-0x18]
  404ae4:	mov    edx,DWORD PTR [rbp-0x1c]
  404ae7:	mov    DWORD PTR [rax+0x24],edx
  404aea:	mov    rax,QWORD PTR [rbp-0x18]
  404aee:	mov    rax,QWORD PTR [rax+0x30]
  404af2:	mov    edx,DWORD PTR [rbp-0x1c]
  404af5:	mov    DWORD PTR [rax+0x4],edx
  404af8:	nop
  404af9:	pop    rbp
  404afa:	ret    
  404afb:	endbr64 
  404aff:	push   rbp
  404b00:	mov    rbp,rsp
  404b03:	sub    rsp,0x30
  404b07:	mov    QWORD PTR [rbp-0x18],rdi
  404b0b:	mov    QWORD PTR [rbp-0x20],rsi
  404b0f:	mov    DWORD PTR [rbp-0x24],edx
  404b12:	mov    rax,QWORD PTR [rbp-0x18]
  404b16:	add    rax,0x58
  404b1a:	add    rax,0x10
  404b1e:	mov    QWORD PTR [rbp-0x8],rax
  404b22:	mov    rax,QWORD PTR [rbp-0x18]
  404b26:	mov    rax,QWORD PTR [rax+0x50]
  404b2a:	mov    rdx,QWORD PTR [rbp-0x18]
  404b2e:	mov    edx,DWORD PTR [rdx+0x28]
  404b31:	mov    ecx,edx
  404b33:	mov    rdx,QWORD PTR [rbp-0x20]
  404b37:	lea    r9,[rcx+rdx*1]
  404b3b:	mov    rdx,QWORD PTR [rbp-0x18]
  404b3f:	mov    rdi,QWORD PTR [rdx+0x40]
  404b43:	mov    rsi,QWORD PTR [rbp-0x8]
  404b47:	mov    r8d,0x1
  404b4d:	mov    ecx,0x1
  404b52:	mov    rdx,r9
  404b55:	call   rax
  404b57:	test   eax,eax
  404b59:	je     404b62 <flatcc_builder_default_alloc@@Base+0x252>
  404b5b:	mov    eax,0xffffffff
  404b60:	jmp    404b78 <flatcc_builder_default_alloc@@Base+0x268>
  404b62:	mov    edx,DWORD PTR [rbp-0x24]
  404b65:	mov    rax,QWORD PTR [rbp-0x18]
  404b69:	mov    esi,edx
  404b6b:	mov    rdi,rax
  404b6e:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  404b73:	mov    eax,0x0
  404b78:	leave  
  404b79:	ret    
  404b7a:	push   rbp
  404b7b:	mov    rbp,rsp
  404b7e:	sub    rsp,0x20
  404b82:	mov    QWORD PTR [rbp-0x18],rdi
  404b86:	mov    DWORD PTR [rbp-0x1c],esi
  404b89:	mov    rax,QWORD PTR [rbp-0x18]
  404b8d:	mov    eax,DWORD PTR [rax+0x20]
  404b90:	mov    eax,eax
  404b92:	mov    QWORD PTR [rbp-0x8],rax
  404b96:	mov    rax,QWORD PTR [rbp-0x18]
  404b9a:	mov    edx,DWORD PTR [rax+0x20]
  404b9d:	mov    eax,DWORD PTR [rbp-0x1c]
  404ba0:	add    edx,eax
  404ba2:	mov    rax,QWORD PTR [rbp-0x18]
  404ba6:	mov    DWORD PTR [rax+0x20],edx
  404ba9:	mov    rax,QWORD PTR [rbp-0x18]
  404bad:	mov    edx,DWORD PTR [rax+0x20]
  404bb0:	mov    rax,QWORD PTR [rbp-0x18]
  404bb4:	mov    eax,DWORD PTR [rax+0x24]
  404bb7:	cmp    edx,eax
  404bb9:	jb     404be5 <flatcc_builder_default_alloc@@Base+0x2d5>
  404bbb:	mov    rax,QWORD PTR [rbp-0x18]
  404bbf:	mov    eax,DWORD PTR [rax+0x20]
  404bc2:	inc    eax
  404bc4:	mov    ecx,eax
  404bc6:	mov    rax,QWORD PTR [rbp-0x18]
  404bca:	mov    edx,0xfffffffc
  404bcf:	mov    rsi,rcx
  404bd2:	mov    rdi,rax
  404bd5:	call   404afb <flatcc_builder_default_alloc@@Base+0x1eb>
  404bda:	test   eax,eax
  404bdc:	je     404be5 <flatcc_builder_default_alloc@@Base+0x2d5>
  404bde:	mov    eax,0x0
  404be3:	jmp    404bf4 <flatcc_builder_default_alloc@@Base+0x2e4>
  404be5:	mov    rax,QWORD PTR [rbp-0x18]
  404be9:	mov    rdx,QWORD PTR [rax+0x18]
  404bed:	mov    rax,QWORD PTR [rbp-0x8]
  404bf1:	add    rax,rdx
  404bf4:	leave  
  404bf5:	ret    
  404bf6:	push   rbp
  404bf7:	mov    rbp,rsp
  404bfa:	sub    rsp,0x10
  404bfe:	mov    QWORD PTR [rbp-0x8],rdi
  404c02:	mov    DWORD PTR [rbp-0xc],esi
  404c05:	mov    rax,QWORD PTR [rbp-0x8]
  404c09:	mov    eax,DWORD PTR [rax+0x20]
  404c0c:	sub    eax,DWORD PTR [rbp-0xc]
  404c0f:	mov    edx,eax
  404c11:	mov    rax,QWORD PTR [rbp-0x8]
  404c15:	mov    DWORD PTR [rax+0x20],edx
  404c18:	mov    eax,DWORD PTR [rbp-0xc]
  404c1b:	mov    rdx,QWORD PTR [rbp-0x8]
  404c1f:	mov    rcx,QWORD PTR [rdx+0x18]
  404c23:	mov    rdx,QWORD PTR [rbp-0x8]
  404c27:	mov    edx,DWORD PTR [rdx+0x20]
  404c2a:	mov    edx,edx
  404c2c:	add    rcx,rdx
  404c2f:	mov    rdx,rax
  404c32:	mov    esi,0x0
  404c37:	mov    rdi,rcx
  404c3a:	call   403140 <memset@plt>
  404c3f:	nop
  404c40:	leave  
  404c41:	ret    
  404c42:	push   rbp
  404c43:	mov    rbp,rsp
  404c46:	sub    rsp,0x30
  404c4a:	mov    QWORD PTR [rbp-0x18],rdi
  404c4e:	mov    QWORD PTR [rbp-0x20],rsi
  404c52:	mov    DWORD PTR [rbp-0x24],edx
  404c55:	mov    edx,DWORD PTR [rbp-0x24]
  404c58:	mov    rax,QWORD PTR [rbp-0x18]
  404c5c:	mov    esi,edx
  404c5e:	mov    rdi,rax
  404c61:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  404c66:	mov    QWORD PTR [rbp-0x8],rax
  404c6a:	cmp    QWORD PTR [rbp-0x8],0x0
  404c6f:	jne    404c78 <flatcc_builder_default_alloc@@Base+0x368>
  404c71:	mov    eax,0x0
  404c76:	jmp    404c92 <flatcc_builder_default_alloc@@Base+0x382>
  404c78:	mov    edx,DWORD PTR [rbp-0x24]
  404c7b:	mov    rcx,QWORD PTR [rbp-0x20]
  404c7f:	mov    rax,QWORD PTR [rbp-0x8]
  404c83:	mov    rsi,rcx
  404c86:	mov    rdi,rax
  404c89:	call   403170 <memcpy@plt>
  404c8e:	mov    rax,QWORD PTR [rbp-0x8]
  404c92:	leave  
  404c93:	ret    
  404c94:	push   rbp
  404c95:	mov    rbp,rsp
  404c98:	sub    rsp,0x30
  404c9c:	mov    QWORD PTR [rbp-0x18],rdi
  404ca0:	mov    DWORD PTR [rbp-0x1c],esi
  404ca3:	mov    eax,ecx
  404ca5:	mov    WORD PTR [rbp-0x20],dx
  404ca9:	mov    WORD PTR [rbp-0x24],ax
  404cad:	mov    rax,QWORD PTR [rbp-0x18]
  404cb1:	mov    edx,DWORD PTR [rax+0x20]
  404cb4:	movzx  eax,WORD PTR [rbp-0x20]
  404cb8:	add    eax,edx
  404cba:	lea    edx,[rax-0x1]
  404cbd:	movzx  eax,WORD PTR [rbp-0x20]
  404cc1:	neg    eax
  404cc3:	and    eax,edx
  404cc5:	mov    DWORD PTR [rbp-0x4],eax
  404cc8:	mov    edx,DWORD PTR [rbp-0x4]
  404ccb:	mov    eax,DWORD PTR [rbp-0x1c]
  404cce:	add    edx,eax
  404cd0:	mov    rax,QWORD PTR [rbp-0x18]
  404cd4:	mov    DWORD PTR [rax+0x20],edx
  404cd7:	mov    rax,QWORD PTR [rbp-0x18]
  404cdb:	mov    edx,DWORD PTR [rax+0x20]
  404cde:	mov    rax,QWORD PTR [rbp-0x18]
  404ce2:	mov    eax,DWORD PTR [rax+0x24]
  404ce5:	cmp    edx,eax
  404ce7:	jb     404d13 <flatcc_builder_default_alloc@@Base+0x403>
  404ce9:	mov    rax,QWORD PTR [rbp-0x18]
  404ced:	mov    eax,DWORD PTR [rax+0x20]
  404cf0:	inc    eax
  404cf2:	mov    ecx,eax
  404cf4:	mov    rax,QWORD PTR [rbp-0x18]
  404cf8:	mov    edx,0xfffc
  404cfd:	mov    rsi,rcx
  404d00:	mov    rdi,rax
  404d03:	call   404afb <flatcc_builder_default_alloc@@Base+0x1eb>
  404d08:	test   eax,eax
  404d0a:	je     404d13 <flatcc_builder_default_alloc@@Base+0x403>
  404d0c:	mov    eax,0x0
  404d11:	jmp    404d5a <flatcc_builder_default_alloc@@Base+0x44a>
  404d13:	mov    eax,DWORD PTR [rbp-0x4]
  404d16:	mov    ecx,eax
  404d18:	mov    rax,QWORD PTR [rbp-0x18]
  404d1c:	mov    rax,QWORD PTR [rax+0x8]
  404d20:	movzx  edx,WORD PTR [rbp-0x24]
  404d24:	add    rdx,rdx
  404d27:	add    rdx,rax
  404d2a:	lea    eax,[rcx+0x4]
  404d2d:	mov    WORD PTR [rdx],ax
  404d30:	mov    rax,QWORD PTR [rbp-0x18]
  404d34:	movzx  eax,WORD PTR [rax+0x10]
  404d38:	cmp    WORD PTR [rbp-0x24],ax
  404d3c:	jb     404d4c <flatcc_builder_default_alloc@@Base+0x43c>
  404d3e:	movzx  eax,WORD PTR [rbp-0x24]
  404d42:	inc    eax
  404d44:	mov    rdx,QWORD PTR [rbp-0x18]
  404d48:	mov    WORD PTR [rdx+0x10],ax
  404d4c:	mov    rax,QWORD PTR [rbp-0x18]
  404d50:	mov    rdx,QWORD PTR [rax+0x18]
  404d54:	mov    eax,DWORD PTR [rbp-0x4]
  404d57:	add    rax,rdx
  404d5a:	leave  
  404d5b:	ret    
  404d5c:	push   rbp
  404d5d:	mov    rbp,rsp
  404d60:	sub    rsp,0x20
  404d64:	mov    QWORD PTR [rbp-0x18],rdi
  404d68:	mov    eax,esi
  404d6a:	mov    WORD PTR [rbp-0x1c],ax
  404d6e:	mov    rax,QWORD PTR [rbp-0x18]
  404d72:	mov    eax,DWORD PTR [rax+0x20]
  404d75:	add    eax,0x3
  404d78:	and    eax,0xfffffffc
  404d7b:	mov    DWORD PTR [rbp-0x4],eax
  404d7e:	mov    eax,DWORD PTR [rbp-0x4]
  404d81:	lea    edx,[rax+0x4]
  404d84:	mov    rax,QWORD PTR [rbp-0x18]
  404d88:	mov    DWORD PTR [rax+0x20],edx
  404d8b:	mov    rax,QWORD PTR [rbp-0x18]
  404d8f:	mov    edx,DWORD PTR [rax+0x20]
  404d92:	mov    rax,QWORD PTR [rbp-0x18]
  404d96:	mov    eax,DWORD PTR [rax+0x24]
  404d99:	cmp    edx,eax
  404d9b:	jbe    404dc5 <flatcc_builder_default_alloc@@Base+0x4b5>
  404d9d:	mov    rax,QWORD PTR [rbp-0x18]
  404da1:	mov    eax,DWORD PTR [rax+0x20]
  404da4:	mov    ecx,eax
  404da6:	mov    rax,QWORD PTR [rbp-0x18]
  404daa:	mov    edx,0xfffc
  404daf:	mov    rsi,rcx
  404db2:	mov    rdi,rax
  404db5:	call   404afb <flatcc_builder_default_alloc@@Base+0x1eb>
  404dba:	test   eax,eax
  404dbc:	je     404dc5 <flatcc_builder_default_alloc@@Base+0x4b5>
  404dbe:	mov    eax,0x0
  404dc3:	jmp    404e24 <flatcc_builder_default_alloc@@Base+0x514>
  404dc5:	mov    eax,DWORD PTR [rbp-0x4]
  404dc8:	mov    ecx,eax
  404dca:	mov    rax,QWORD PTR [rbp-0x18]
  404dce:	mov    rax,QWORD PTR [rax+0x8]
  404dd2:	movzx  edx,WORD PTR [rbp-0x1c]
  404dd6:	add    rdx,rdx
  404dd9:	add    rdx,rax
  404ddc:	lea    eax,[rcx+0x4]
  404ddf:	mov    WORD PTR [rdx],ax
  404de2:	mov    rax,QWORD PTR [rbp-0x18]
  404de6:	movzx  eax,WORD PTR [rax+0x10]
  404dea:	cmp    WORD PTR [rbp-0x1c],ax
  404dee:	jb     404dfe <flatcc_builder_default_alloc@@Base+0x4ee>
  404df0:	movzx  eax,WORD PTR [rbp-0x1c]
  404df4:	inc    eax
  404df6:	mov    rdx,QWORD PTR [rbp-0x18]
  404dfa:	mov    WORD PTR [rdx+0x10],ax
  404dfe:	mov    rax,QWORD PTR [rbp-0x18]
  404e02:	mov    rax,QWORD PTR [rax]
  404e05:	lea    rcx,[rax+0x2]
  404e09:	mov    rdx,QWORD PTR [rbp-0x18]
  404e0d:	mov    QWORD PTR [rdx],rcx
  404e10:	mov    edx,DWORD PTR [rbp-0x4]
  404e13:	mov    WORD PTR [rax],dx
  404e16:	mov    rax,QWORD PTR [rbp-0x18]
  404e1a:	mov    rdx,QWORD PTR [rax+0x18]
  404e1e:	mov    eax,DWORD PTR [rbp-0x4]
  404e21:	add    rax,rdx
  404e24:	leave  
  404e25:	ret    
  404e26:	push   rbp
  404e27:	mov    rbp,rsp
  404e2a:	sub    rsp,0x30
  404e2e:	mov    QWORD PTR [rbp-0x18],rdi
  404e32:	mov    DWORD PTR [rbp-0x1c],esi
  404e35:	mov    QWORD PTR [rbp-0x28],rdx
  404e39:	mov    QWORD PTR [rbp-0x30],rcx
  404e3d:	mov    DWORD PTR [rbp-0x20],r8d
  404e41:	mov    rax,QWORD PTR [rbp-0x18]
  404e45:	lea    rdx,[rax+0x58]
  404e49:	mov    eax,DWORD PTR [rbp-0x1c]
  404e4c:	cdqe   
  404e4e:	shl    rax,0x4
  404e52:	add    rax,rdx
  404e55:	mov    QWORD PTR [rbp-0x8],rax
  404e59:	mov    rdx,QWORD PTR [rbp-0x28]
  404e5d:	mov    rax,QWORD PTR [rbp-0x30]
  404e61:	add    rdx,rax
  404e64:	mov    rax,QWORD PTR [rbp-0x8]
  404e68:	mov    rax,QWORD PTR [rax+0x8]
  404e6c:	cmp    rdx,rax
  404e6f:	jbe    404ec4 <flatcc_builder_default_alloc@@Base+0x5b4>
  404e71:	mov    rax,QWORD PTR [rbp-0x18]
  404e75:	mov    rax,QWORD PTR [rax+0x50]
  404e79:	mov    rcx,QWORD PTR [rbp-0x28]
  404e7d:	mov    rdx,QWORD PTR [rbp-0x30]
  404e81:	lea    r9,[rcx+rdx*1]
  404e85:	mov    rdx,QWORD PTR [rbp-0x18]
  404e89:	mov    rdi,QWORD PTR [rdx+0x40]
  404e8d:	mov    ecx,DWORD PTR [rbp-0x1c]
  404e90:	mov    edx,DWORD PTR [rbp-0x20]
  404e93:	mov    rsi,QWORD PTR [rbp-0x8]
  404e97:	mov    r8d,ecx
  404e9a:	mov    ecx,edx
  404e9c:	mov    rdx,r9
  404e9f:	call   rax
  404ea1:	test   eax,eax
  404ea3:	je     404ec4 <flatcc_builder_default_alloc@@Base+0x5b4>
  404ea5:	lea    rcx,[rip+0x896c]        # 40d818 <flatcc_builder_padding_base@@Base+0x658>
  404eac:	mov    edx,0x134
  404eb1:	lea    rsi,[rip+0x8508]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404eb8:	lea    rdi,[rip+0x8561]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  404ebf:	call   403130 <__assert_fail@plt>
  404ec4:	mov    rax,QWORD PTR [rbp-0x8]
  404ec8:	mov    rax,QWORD PTR [rax]
  404ecb:	mov    rdx,rax
  404ece:	mov    rax,QWORD PTR [rbp-0x28]
  404ed2:	add    rax,rdx
  404ed5:	leave  
  404ed6:	ret    
  404ed7:	push   rbp
  404ed8:	mov    rbp,rsp
  404edb:	sub    rsp,0x20
  404edf:	mov    QWORD PTR [rbp-0x18],rdi
  404ee3:	mov    DWORD PTR [rbp-0x1c],esi
  404ee6:	mov    rax,QWORD PTR [rbp-0x18]
  404eea:	mov    rax,QWORD PTR [rax+0x30]
  404eee:	mov    edx,DWORD PTR [rax+0x10]
  404ef1:	mov    rax,QWORD PTR [rbp-0x18]
  404ef5:	mov    rax,QWORD PTR [rax+0x30]
  404ef9:	movzx  eax,WORD PTR [rax+0x1c]
  404efd:	movzx  eax,ax
  404f00:	add    eax,eax
  404f02:	add    eax,edx
  404f04:	mov    DWORD PTR [rbp-0x8],eax
  404f07:	mov    eax,DWORD PTR [rbp-0x1c]
  404f0a:	add    eax,0x2
  404f0d:	cdqe   
  404f0f:	add    eax,eax
  404f11:	mov    DWORD PTR [rbp-0x4],eax
  404f14:	mov    ecx,DWORD PTR [rbp-0x4]
  404f17:	mov    edx,DWORD PTR [rbp-0x8]
  404f1a:	mov    rax,QWORD PTR [rbp-0x18]
  404f1e:	mov    r8d,0x1
  404f24:	mov    esi,0x0
  404f29:	mov    rdi,rax
  404f2c:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  404f31:	mov    rdx,rax
  404f34:	mov    rax,QWORD PTR [rbp-0x18]
  404f38:	mov    QWORD PTR [rax+0x8],rdx
  404f3c:	mov    rax,QWORD PTR [rbp-0x18]
  404f40:	mov    rax,QWORD PTR [rax+0x8]
  404f44:	test   rax,rax
  404f47:	jne    404f50 <flatcc_builder_default_alloc@@Base+0x640>
  404f49:	mov    eax,0xffffffff
  404f4e:	jmp    404fbd <flatcc_builder_default_alloc@@Base+0x6ad>
  404f50:	mov    rax,QWORD PTR [rbp-0x18]
  404f54:	mov    rax,QWORD PTR [rax+0x8]
  404f58:	lea    rdx,[rax+0x4]
  404f5c:	mov    rax,QWORD PTR [rbp-0x18]
  404f60:	mov    QWORD PTR [rax+0x8],rdx
  404f64:	mov    rax,QWORD PTR [rbp-0x18]
  404f68:	mov    rax,QWORD PTR [rax+0x30]
  404f6c:	mov    eax,DWORD PTR [rax+0x14]
  404f6f:	mov    DWORD PTR [rbp-0x8],eax
  404f72:	mov    eax,DWORD PTR [rbp-0x1c]
  404f75:	cdqe   
  404f77:	add    eax,eax
  404f79:	inc    eax
  404f7b:	mov    DWORD PTR [rbp-0x4],eax
  404f7e:	mov    ecx,DWORD PTR [rbp-0x4]
  404f81:	mov    edx,DWORD PTR [rbp-0x8]
  404f84:	mov    rax,QWORD PTR [rbp-0x18]
  404f88:	mov    r8d,0x0
  404f8e:	mov    esi,0x3
  404f93:	mov    rdi,rax
  404f96:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  404f9b:	mov    rdx,rax
  404f9e:	mov    rax,QWORD PTR [rbp-0x18]
  404fa2:	mov    QWORD PTR [rax],rdx
  404fa5:	mov    rax,QWORD PTR [rbp-0x18]
  404fa9:	mov    rax,QWORD PTR [rax]
  404fac:	test   rax,rax
  404faf:	jne    404fb8 <flatcc_builder_default_alloc@@Base+0x6a8>
  404fb1:	mov    eax,0xffffffff
  404fb6:	jmp    404fbd <flatcc_builder_default_alloc@@Base+0x6ad>
  404fb8:	mov    eax,0x0
  404fbd:	leave  
  404fbe:	ret    
  404fbf:	endbr64 
  404fc3:	push   rbp
  404fc4:	mov    rbp,rsp
  404fc7:	sub    rsp,0x30
  404fcb:	mov    QWORD PTR [rbp-0x28],rdi
  404fcf:	mov    rax,QWORD PTR [rbp-0x28]
  404fd3:	add    rax,0x58
  404fd7:	add    rax,0x50
  404fdb:	mov    QWORD PTR [rbp-0x8],rax
  404fdf:	mov    rax,QWORD PTR [rbp-0x28]
  404fe3:	mov    eax,DWORD PTR [rax+0xe4]
  404fe9:	test   eax,eax
  404feb:	je     40500c <flatcc_builder_default_alloc@@Base+0x6fc>
  404fed:	lea    rcx,[rip+0x8814]        # 40d808 <flatcc_builder_padding_base@@Base+0x648>
  404ff4:	mov    edx,0x156
  404ff9:	lea    rsi,[rip+0x83c0]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405000:	lea    rdi,[rip+0x841b]        # 40d422 <flatcc_builder_padding_base@@Base+0x262>
  405007:	call   403130 <__assert_fail@plt>
  40500c:	mov    rax,QWORD PTR [rbp-0x28]
  405010:	mov    eax,DWORD PTR [rax+0xe4]
  405016:	mov    edx,eax
  405018:	mov    rax,QWORD PTR [rbp-0x28]
  40501c:	mov    r8d,0x0
  405022:	mov    ecx,0x10
  405027:	mov    esi,0x6
  40502c:	mov    rdi,rax
  40502f:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  405034:	test   rax,rax
  405037:	jne    405043 <flatcc_builder_default_alloc@@Base+0x733>
  405039:	mov    eax,0xffffffff
  40503e:	jmp    4050e4 <flatcc_builder_default_alloc@@Base+0x7d4>
  405043:	mov    rax,QWORD PTR [rbp-0x28]
  405047:	mov    DWORD PTR [rax+0xe4],0x10
  405051:	mov    QWORD PTR [rbp-0x18],0x100
  405059:	mov    rax,QWORD PTR [rbp-0x28]
  40505d:	mov    rax,QWORD PTR [rax+0x50]
  405061:	mov    rdx,QWORD PTR [rbp-0x28]
  405065:	mov    rdi,QWORD PTR [rdx+0x40]
  405069:	mov    rdx,QWORD PTR [rbp-0x18]
  40506d:	mov    rsi,QWORD PTR [rbp-0x8]
  405071:	mov    r8d,0x5
  405077:	mov    ecx,0x1
  40507c:	call   rax
  40507e:	test   eax,eax
  405080:	je     40508d <flatcc_builder_default_alloc@@Base+0x77d>
  405082:	mov    eax,0xffffffff
  405087:	jmp    4050e4 <flatcc_builder_default_alloc@@Base+0x7d4>
  405089:	shl    QWORD PTR [rbp-0x18],1
  40508d:	mov    rax,QWORD PTR [rbp-0x18]
  405091:	lea    rdx,[rax+rax*1]
  405095:	mov    rax,QWORD PTR [rbp-0x8]
  405099:	mov    rax,QWORD PTR [rax+0x8]
  40509d:	cmp    rdx,rax
  4050a0:	jbe    405089 <flatcc_builder_default_alloc@@Base+0x779>
  4050a2:	mov    rax,QWORD PTR [rbp-0x18]
  4050a6:	shr    rax,0x2
  4050aa:	mov    QWORD PTR [rbp-0x18],rax
  4050ae:	mov    QWORD PTR [rbp-0x10],0x0
  4050b6:	jmp    4050bc <flatcc_builder_default_alloc@@Base+0x7ac>
  4050b8:	inc    QWORD PTR [rbp-0x10]
  4050bc:	mov    rax,QWORD PTR [rbp-0x10]
  4050c0:	mov    edx,0x1
  4050c5:	shlx   rax,rdx,rax
  4050ca:	cmp    QWORD PTR [rbp-0x18],rax
  4050ce:	ja     4050b8 <flatcc_builder_default_alloc@@Base+0x7a8>
  4050d0:	mov    rax,QWORD PTR [rbp-0x28]
  4050d4:	mov    rdx,QWORD PTR [rbp-0x10]
  4050d8:	mov    QWORD PTR [rax+0xd8],rdx
  4050df:	mov    eax,0x0
  4050e4:	leave  
  4050e5:	ret    
  4050e6:	push   rbp
  4050e7:	mov    rbp,rsp
  4050ea:	sub    rsp,0x20
  4050ee:	mov    QWORD PTR [rbp-0x18],rdi
  4050f2:	mov    DWORD PTR [rbp-0x1c],esi
  4050f5:	mov    rax,QWORD PTR [rbp-0x18]
  4050f9:	mov    rax,QWORD PTR [rax+0xd8]
  405100:	test   rax,rax
  405103:	jne    40511c <flatcc_builder_default_alloc@@Base+0x80c>
  405105:	mov    rax,QWORD PTR [rbp-0x18]
  405109:	mov    rdi,rax
  40510c:	call   404fbf <flatcc_builder_default_alloc@@Base+0x6af>
  405111:	test   eax,eax
  405113:	je     40511c <flatcc_builder_default_alloc@@Base+0x80c>
  405115:	mov    eax,0x0
  40511a:	jmp    405158 <flatcc_builder_default_alloc@@Base+0x848>
  40511c:	mov    rax,QWORD PTR [rbp-0x18]
  405120:	mov    rax,QWORD PTR [rax+0xa8]
  405127:	mov    QWORD PTR [rbp-0x8],rax
  40512b:	mov    rax,QWORD PTR [rbp-0x18]
  40512f:	mov    rax,QWORD PTR [rax+0xd8]
  405136:	mov    edx,0x20
  40513b:	sub    edx,eax
  40513d:	mov    eax,edx
  40513f:	mov    edx,DWORD PTR [rbp-0x1c]
  405142:	shrx   eax,edx,eax
  405147:	mov    eax,eax
  405149:	lea    rdx,[rax*4+0x0]
  405151:	mov    rax,QWORD PTR [rbp-0x8]
  405155:	add    rax,rdx
  405158:	leave  
  405159:	ret    

000000000040515a <flatcc_builder_flush_vtable_cache@@Base>:
  40515a:	endbr64 
  40515e:	push   rbp
  40515f:	mov    rbp,rsp
  405162:	sub    rsp,0x20
  405166:	mov    QWORD PTR [rbp-0x18],rdi
  40516a:	mov    rax,QWORD PTR [rbp-0x18]
  40516e:	add    rax,0x58
  405172:	add    rax,0x50
  405176:	mov    QWORD PTR [rbp-0x8],rax
  40517a:	mov    rax,QWORD PTR [rbp-0x18]
  40517e:	mov    rax,QWORD PTR [rax+0xd8]
  405185:	test   rax,rax
  405188:	je     4051c4 <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  40518a:	mov    rax,QWORD PTR [rbp-0x8]
  40518e:	mov    rdx,QWORD PTR [rax+0x8]
  405192:	mov    rax,QWORD PTR [rbp-0x8]
  405196:	mov    rax,QWORD PTR [rax]
  405199:	mov    esi,0x0
  40519e:	mov    rdi,rax
  4051a1:	call   403140 <memset@plt>
  4051a6:	mov    rax,QWORD PTR [rbp-0x18]
  4051aa:	mov    DWORD PTR [rax+0xe4],0x10
  4051b4:	mov    rax,QWORD PTR [rbp-0x18]
  4051b8:	mov    DWORD PTR [rax+0xe0],0x0
  4051c2:	jmp    4051c5 <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  4051c4:	nop
  4051c5:	leave  
  4051c6:	ret    

00000000004051c7 <flatcc_builder_custom_init@@Base>:
  4051c7:	endbr64 
  4051cb:	push   rbp
  4051cc:	mov    rbp,rsp
  4051cf:	sub    rsp,0x30
  4051d3:	mov    QWORD PTR [rbp-0x8],rdi
  4051d7:	mov    QWORD PTR [rbp-0x10],rsi
  4051db:	mov    QWORD PTR [rbp-0x18],rdx
  4051df:	mov    QWORD PTR [rbp-0x20],rcx
  4051e3:	mov    QWORD PTR [rbp-0x28],r8
  4051e7:	mov    rax,QWORD PTR [rbp-0x8]
  4051eb:	mov    edx,0x188
  4051f0:	mov    esi,0x0
  4051f5:	mov    rdi,rax
  4051f8:	call   403140 <memset@plt>
  4051fd:	cmp    QWORD PTR [rbp-0x10],0x0
  405202:	jne    40522b <flatcc_builder_custom_init@@Base+0x64>
  405204:	mov    rax,QWORD PTR [rbp-0x8]
  405208:	mov    DWORD PTR [rax+0x128],0x1
  405212:	mov    rax,0x40a764
  405219:	mov    QWORD PTR [rbp-0x10],rax
  40521d:	mov    rax,QWORD PTR [rbp-0x8]
  405221:	add    rax,0x130
  405227:	mov    QWORD PTR [rbp-0x18],rax
  40522b:	cmp    QWORD PTR [rbp-0x20],0x0
  405230:	jne    40523d <flatcc_builder_custom_init@@Base+0x76>
  405232:	mov    rax,0x404910
  405239:	mov    QWORD PTR [rbp-0x20],rax
  40523d:	mov    rax,QWORD PTR [rbp-0x8]
  405241:	mov    rdx,QWORD PTR [rbp-0x28]
  405245:	mov    QWORD PTR [rax+0x40],rdx
  405249:	mov    rax,QWORD PTR [rbp-0x8]
  40524d:	mov    rdx,QWORD PTR [rbp-0x20]
  405251:	mov    QWORD PTR [rax+0x50],rdx
  405255:	mov    rax,QWORD PTR [rbp-0x8]
  405259:	mov    rdx,QWORD PTR [rbp-0x18]
  40525d:	mov    QWORD PTR [rax+0x38],rdx
  405261:	mov    rax,QWORD PTR [rbp-0x8]
  405265:	mov    rdx,QWORD PTR [rbp-0x10]
  405269:	mov    QWORD PTR [rax+0x48],rdx
  40526d:	mov    eax,0x0
  405272:	leave  
  405273:	ret    

0000000000405274 <flatcc_builder_init@@Base>:
  405274:	endbr64 
  405278:	push   rbp
  405279:	mov    rbp,rsp
  40527c:	sub    rsp,0x10
  405280:	mov    QWORD PTR [rbp-0x8],rdi
  405284:	mov    rax,QWORD PTR [rbp-0x8]
  405288:	mov    r8d,0x0
  40528e:	mov    ecx,0x0
  405293:	mov    edx,0x0
  405298:	mov    esi,0x0
  40529d:	mov    rdi,rax
  4052a0:	call   4051c7 <flatcc_builder_custom_init@@Base>
  4052a5:	leave  
  4052a6:	ret    

00000000004052a7 <flatcc_builder_custom_reset@@Base>:
  4052a7:	endbr64 
  4052ab:	push   rbp
  4052ac:	mov    rbp,rsp
  4052af:	sub    rsp,0x20
  4052b3:	mov    QWORD PTR [rbp-0x18],rdi
  4052b7:	mov    DWORD PTR [rbp-0x1c],esi
  4052ba:	mov    DWORD PTR [rbp-0x20],edx
  4052bd:	mov    DWORD PTR [rbp-0xc],0x0
  4052c4:	jmp    40537a <flatcc_builder_custom_reset@@Base+0xd3>
  4052c9:	mov    rax,QWORD PTR [rbp-0x18]
  4052cd:	lea    rdx,[rax+0x58]
  4052d1:	mov    eax,DWORD PTR [rbp-0xc]
  4052d4:	cdqe   
  4052d6:	shl    rax,0x4
  4052da:	add    rax,rdx
  4052dd:	mov    QWORD PTR [rbp-0x8],rax
  4052e1:	mov    rax,QWORD PTR [rbp-0x8]
  4052e5:	mov    rax,QWORD PTR [rax]
  4052e8:	test   rax,rax
  4052eb:	je     40534b <flatcc_builder_custom_reset@@Base+0xa4>
  4052ed:	cmp    DWORD PTR [rbp-0xc],0x5
  4052f1:	je     40532d <flatcc_builder_custom_reset@@Base+0x86>
  4052f3:	cmp    DWORD PTR [rbp-0x20],0x0
  4052f7:	je     40532d <flatcc_builder_custom_reset@@Base+0x86>
  4052f9:	mov    rax,QWORD PTR [rbp-0x18]
  4052fd:	mov    rax,QWORD PTR [rax+0x50]
  405301:	mov    rdx,QWORD PTR [rbp-0x18]
  405305:	mov    rdi,QWORD PTR [rdx+0x40]
  405309:	mov    edx,DWORD PTR [rbp-0xc]
  40530c:	mov    rsi,QWORD PTR [rbp-0x8]
  405310:	mov    r8d,edx
  405313:	mov    ecx,0x1
  405318:	mov    edx,0x1
  40531d:	call   rax
  40531f:	test   eax,eax
  405321:	je     40532d <flatcc_builder_custom_reset@@Base+0x86>
  405323:	mov    eax,0xffffffff
  405328:	jmp    4054b9 <flatcc_builder_custom_reset@@Base+0x212>
  40532d:	mov    rax,QWORD PTR [rbp-0x8]
  405331:	mov    rdx,QWORD PTR [rax+0x8]
  405335:	mov    rax,QWORD PTR [rbp-0x8]
  405339:	mov    rax,QWORD PTR [rax]
  40533c:	mov    esi,0x0
  405341:	mov    rdi,rax
  405344:	call   403140 <memset@plt>
  405349:	jmp    405377 <flatcc_builder_custom_reset@@Base+0xd0>
  40534b:	mov    rax,QWORD PTR [rbp-0x8]
  40534f:	mov    rax,QWORD PTR [rax+0x8]
  405353:	test   rax,rax
  405356:	je     405377 <flatcc_builder_custom_reset@@Base+0xd0>
  405358:	lea    rcx,[rip+0x84d1]        # 40d830 <flatcc_builder_padding_base@@Base+0x670>
  40535f:	mov    edx,0x1b2
  405364:	lea    rsi,[rip+0x8055]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40536b:	lea    rdi,[rip+0x80bf]        # 40d431 <flatcc_builder_padding_base@@Base+0x271>
  405372:	call   403130 <__assert_fail@plt>
  405377:	inc    DWORD PTR [rbp-0xc]
  40537a:	cmp    DWORD PTR [rbp-0xc],0x7
  40537e:	jle    4052c9 <flatcc_builder_custom_reset@@Base+0x22>
  405384:	mov    rax,QWORD PTR [rbp-0x18]
  405388:	mov    DWORD PTR [rax+0xe0],0x0
  405392:	mov    rax,QWORD PTR [rbp-0x18]
  405396:	mov    eax,DWORD PTR [rax+0xe4]
  40539c:	test   eax,eax
  40539e:	je     4053ae <flatcc_builder_custom_reset@@Base+0x107>
  4053a0:	mov    rax,QWORD PTR [rbp-0x18]
  4053a4:	mov    DWORD PTR [rax+0xe4],0x10
  4053ae:	mov    rax,QWORD PTR [rbp-0x18]
  4053b2:	mov    WORD PTR [rax+0xe8],0x0
  4053bb:	mov    rax,QWORD PTR [rbp-0x18]
  4053bf:	mov    DWORD PTR [rax+0xf0],0x0
  4053c9:	mov    rax,QWORD PTR [rbp-0x18]
  4053cd:	mov    DWORD PTR [rax+0xf4],0x0
  4053d7:	mov    rax,QWORD PTR [rbp-0x18]
  4053db:	mov    DWORD PTR [rax+0x104],0x0
  4053e5:	mov    rax,QWORD PTR [rbp-0x18]
  4053e9:	mov    DWORD PTR [rax+0x108],0x0
  4053f3:	mov    rax,QWORD PTR [rbp-0x18]
  4053f7:	mov    DWORD PTR [rax+0x20],0x0
  4053fe:	mov    rax,QWORD PTR [rbp-0x18]
  405402:	mov    DWORD PTR [rax+0x24],0x0
  405409:	mov    rax,QWORD PTR [rbp-0x18]
  40540d:	mov    DWORD PTR [rax+0xfc],0x0
  405417:	mov    rax,QWORD PTR [rbp-0x18]
  40541b:	mov    DWORD PTR [rax+0x100],0x0
  405425:	mov    rax,QWORD PTR [rbp-0x18]
  405429:	mov    rdx,QWORD PTR [rax+0x68]
  40542d:	mov    rax,QWORD PTR [rbp-0x18]
  405431:	mov    QWORD PTR [rax+0x18],rdx
  405435:	mov    rax,QWORD PTR [rbp-0x18]
  405439:	mov    rdx,QWORD PTR [rax+0x88]
  405440:	mov    rax,QWORD PTR [rbp-0x18]
  405444:	mov    QWORD PTR [rax],rdx
  405447:	mov    rax,QWORD PTR [rbp-0x18]
  40544b:	mov    rdx,QWORD PTR [rax+0x58]
  40544f:	mov    rax,QWORD PTR [rbp-0x18]
  405453:	mov    QWORD PTR [rax+0x8],rdx
  405457:	mov    rax,QWORD PTR [rbp-0x18]
  40545b:	mov    QWORD PTR [rax+0x30],0x0
  405463:	cmp    DWORD PTR [rbp-0x1c],0x0
  405467:	je     405494 <flatcc_builder_custom_reset@@Base+0x1ed>
  405469:	mov    rax,QWORD PTR [rbp-0x18]
  40546d:	mov    QWORD PTR [rax+0x118],0x0
  405478:	mov    rax,QWORD PTR [rbp-0x18]
  40547c:	mov    DWORD PTR [rax+0x120],0x0
  405486:	mov    rax,QWORD PTR [rbp-0x18]
  40548a:	mov    DWORD PTR [rax+0x124],0x0
  405494:	mov    rax,QWORD PTR [rbp-0x18]
  405498:	mov    eax,DWORD PTR [rax+0x128]
  40549e:	test   eax,eax
  4054a0:	je     4054b4 <flatcc_builder_custom_reset@@Base+0x20d>
  4054a2:	mov    rax,QWORD PTR [rbp-0x18]
  4054a6:	add    rax,0x130
  4054ac:	mov    rdi,rax
  4054af:	call   40a53f <flatcc_emitter_reset@@Base>
  4054b4:	mov    eax,0x0
  4054b9:	leave  
  4054ba:	ret    

00000000004054bb <flatcc_builder_reset@@Base>:
  4054bb:	endbr64 
  4054bf:	push   rbp
  4054c0:	mov    rbp,rsp
  4054c3:	sub    rsp,0x10
  4054c7:	mov    QWORD PTR [rbp-0x8],rdi
  4054cb:	mov    rax,QWORD PTR [rbp-0x8]
  4054cf:	mov    edx,0x0
  4054d4:	mov    esi,0x0
  4054d9:	mov    rdi,rax
  4054dc:	call   4052a7 <flatcc_builder_custom_reset@@Base>
  4054e1:	leave  
  4054e2:	ret    

00000000004054e3 <flatcc_builder_clear@@Base>:
  4054e3:	endbr64 
  4054e7:	push   rbp
  4054e8:	mov    rbp,rsp
  4054eb:	sub    rsp,0x20
  4054ef:	mov    QWORD PTR [rbp-0x18],rdi
  4054f3:	mov    DWORD PTR [rbp-0xc],0x0
  4054fa:	jmp    40553d <flatcc_builder_clear@@Base+0x5a>
  4054fc:	mov    rax,QWORD PTR [rbp-0x18]
  405500:	lea    rdx,[rax+0x58]
  405504:	mov    eax,DWORD PTR [rbp-0xc]
  405507:	cdqe   
  405509:	shl    rax,0x4
  40550d:	add    rax,rdx
  405510:	mov    QWORD PTR [rbp-0x8],rax
  405514:	mov    rax,QWORD PTR [rbp-0x18]
  405518:	mov    rax,QWORD PTR [rax+0x50]
  40551c:	mov    rdx,QWORD PTR [rbp-0x18]
  405520:	mov    rdi,QWORD PTR [rdx+0x40]
  405524:	mov    edx,DWORD PTR [rbp-0xc]
  405527:	mov    rsi,QWORD PTR [rbp-0x8]
  40552b:	mov    r8d,edx
  40552e:	mov    ecx,0x0
  405533:	mov    edx,0x0
  405538:	call   rax
  40553a:	inc    DWORD PTR [rbp-0xc]
  40553d:	cmp    DWORD PTR [rbp-0xc],0x7
  405541:	jle    4054fc <flatcc_builder_clear@@Base+0x19>
  405543:	mov    rax,QWORD PTR [rbp-0x18]
  405547:	mov    eax,DWORD PTR [rax+0x128]
  40554d:	test   eax,eax
  40554f:	je     405563 <flatcc_builder_clear@@Base+0x80>
  405551:	mov    rax,QWORD PTR [rbp-0x18]
  405555:	add    rax,0x130
  40555b:	mov    rdi,rax
  40555e:	call   40a6d1 <flatcc_emitter_clear@@Base>
  405563:	mov    rax,QWORD PTR [rbp-0x18]
  405567:	mov    edx,0x188
  40556c:	mov    esi,0x0
  405571:	mov    rdi,rax
  405574:	call   403140 <memset@plt>
  405579:	nop
  40557a:	leave  
  40557b:	ret    
  40557c:	push   rbp
  40557d:	mov    rbp,rsp
  405580:	mov    QWORD PTR [rbp-0x8],rdi
  405584:	mov    eax,esi
  405586:	mov    WORD PTR [rbp-0xc],ax
  40558a:	mov    rax,QWORD PTR [rbp-0x8]
  40558e:	movzx  eax,WORD PTR [rax+0xe8]
  405595:	cmp    WORD PTR [rbp-0xc],ax
  405599:	jbe    4055aa <flatcc_builder_clear@@Base+0xc7>
  40559b:	mov    rdx,QWORD PTR [rbp-0x8]
  40559f:	movzx  eax,WORD PTR [rbp-0xc]
  4055a3:	mov    WORD PTR [rdx+0xe8],ax
  4055aa:	nop
  4055ab:	pop    rbp
  4055ac:	ret    
  4055ad:	push   rbp
  4055ae:	mov    rbp,rsp
  4055b1:	mov    QWORD PTR [rbp-0x8],rdi
  4055b5:	mov    eax,esi
  4055b7:	mov    WORD PTR [rbp-0xc],ax
  4055bb:	mov    rax,QWORD PTR [rbp-0x8]
  4055bf:	movzx  eax,WORD PTR [rax]
  4055c2:	cmp    WORD PTR [rbp-0xc],ax
  4055c6:	jbe    4055d3 <flatcc_builder_clear@@Base+0xf0>
  4055c8:	mov    rdx,QWORD PTR [rbp-0x8]
  4055cc:	movzx  eax,WORD PTR [rbp-0xc]
  4055d0:	mov    WORD PTR [rdx],ax
  4055d3:	nop
  4055d4:	pop    rbp
  4055d5:	ret    

00000000004055d6 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4055d6:	endbr64 
  4055da:	push   rbp
  4055db:	mov    rbp,rsp
  4055de:	sub    rsp,0x20
  4055e2:	mov    QWORD PTR [rbp-0x18],rdi
  4055e6:	mov    QWORD PTR [rbp-0x20],rsi
  4055ea:	mov    rax,QWORD PTR [rbp-0x20]
  4055ee:	add    rax,0x7
  4055f2:	and    rax,0xfffffffffffffff8
  4055f6:	add    rax,0x8
  4055fa:	mov    QWORD PTR [rbp-0x20],rax
  4055fe:	mov    rax,QWORD PTR [rbp-0x18]
  405602:	mov    rdx,QWORD PTR [rax+0x180]
  405609:	mov    rcx,QWORD PTR [rbp-0x20]
  40560d:	mov    rax,QWORD PTR [rbp-0x18]
  405611:	mov    r8d,0x0
  405617:	mov    esi,0x7
  40561c:	mov    rdi,rax
  40561f:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  405624:	mov    QWORD PTR [rbp-0x8],rax
  405628:	cmp    QWORD PTR [rbp-0x8],0x0
  40562d:	jne    405636 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  40562f:	mov    eax,0x0
  405634:	jmp    4056a0 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  405636:	mov    rdx,QWORD PTR [rbp-0x20]
  40563a:	mov    rax,QWORD PTR [rbp-0x8]
  40563e:	mov    esi,0x0
  405643:	mov    rdi,rax
  405646:	call   403140 <memset@plt>
  40564b:	mov    rax,QWORD PTR [rbp-0x8]
  40564f:	lea    rdx,[rax+0x8]
  405653:	mov    QWORD PTR [rbp-0x8],rdx
  405657:	mov    rdx,QWORD PTR [rbp-0x18]
  40565b:	mov    rdx,QWORD PTR [rdx+0x178]
  405662:	mov    QWORD PTR [rax],rdx
  405665:	mov    rax,QWORD PTR [rbp-0x18]
  405669:	mov    rax,QWORD PTR [rax+0x180]
  405670:	lea    rdx,[rax+0x8]
  405674:	mov    rax,QWORD PTR [rbp-0x18]
  405678:	mov    QWORD PTR [rax+0x178],rdx
  40567f:	mov    rax,QWORD PTR [rbp-0x18]
  405683:	mov    rdx,QWORD PTR [rax+0x180]
  40568a:	mov    rax,QWORD PTR [rbp-0x20]
  40568e:	add    rdx,rax
  405691:	mov    rax,QWORD PTR [rbp-0x18]
  405695:	mov    QWORD PTR [rax+0x180],rdx
  40569c:	mov    rax,QWORD PTR [rbp-0x8]
  4056a0:	leave  
  4056a1:	ret    

00000000004056a2 <flatcc_builder_enter_user_frame@@Base>:
  4056a2:	endbr64 
  4056a6:	push   rbp
  4056a7:	mov    rbp,rsp
  4056aa:	sub    rsp,0x20
  4056ae:	mov    QWORD PTR [rbp-0x18],rdi
  4056b2:	mov    QWORD PTR [rbp-0x20],rsi
  4056b6:	mov    rax,QWORD PTR [rbp-0x20]
  4056ba:	add    rax,0x7
  4056be:	and    rax,0xfffffffffffffff8
  4056c2:	add    rax,0x8
  4056c6:	mov    QWORD PTR [rbp-0x20],rax
  4056ca:	mov    rax,QWORD PTR [rbp-0x18]
  4056ce:	mov    rdx,QWORD PTR [rax+0x180]
  4056d5:	mov    rcx,QWORD PTR [rbp-0x20]
  4056d9:	mov    rax,QWORD PTR [rbp-0x18]
  4056dd:	mov    r8d,0x0
  4056e3:	mov    esi,0x7
  4056e8:	mov    rdi,rax
  4056eb:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  4056f0:	mov    QWORD PTR [rbp-0x8],rax
  4056f4:	cmp    QWORD PTR [rbp-0x8],0x0
  4056f9:	jne    405702 <flatcc_builder_enter_user_frame@@Base+0x60>
  4056fb:	mov    eax,0x0
  405700:	jmp    405773 <flatcc_builder_enter_user_frame@@Base+0xd1>
  405702:	mov    rdx,QWORD PTR [rbp-0x20]
  405706:	mov    rax,QWORD PTR [rbp-0x8]
  40570a:	mov    esi,0x0
  40570f:	mov    rdi,rax
  405712:	call   403140 <memset@plt>
  405717:	mov    rax,QWORD PTR [rbp-0x8]
  40571b:	lea    rdx,[rax+0x8]
  40571f:	mov    QWORD PTR [rbp-0x8],rdx
  405723:	mov    rdx,QWORD PTR [rbp-0x18]
  405727:	mov    rdx,QWORD PTR [rdx+0x178]
  40572e:	mov    QWORD PTR [rax],rdx
  405731:	mov    rax,QWORD PTR [rbp-0x18]
  405735:	mov    rax,QWORD PTR [rax+0x180]
  40573c:	lea    rdx,[rax+0x8]
  405740:	mov    rax,QWORD PTR [rbp-0x18]
  405744:	mov    QWORD PTR [rax+0x178],rdx
  40574b:	mov    rax,QWORD PTR [rbp-0x18]
  40574f:	mov    rdx,QWORD PTR [rax+0x180]
  405756:	mov    rax,QWORD PTR [rbp-0x20]
  40575a:	add    rdx,rax
  40575d:	mov    rax,QWORD PTR [rbp-0x18]
  405761:	mov    QWORD PTR [rax+0x180],rdx
  405768:	mov    rax,QWORD PTR [rbp-0x18]
  40576c:	mov    rax,QWORD PTR [rax+0x178]
  405773:	leave  
  405774:	ret    

0000000000405775 <flatcc_builder_exit_user_frame@@Base>:
  405775:	endbr64 
  405779:	push   rbp
  40577a:	mov    rbp,rsp
  40577d:	sub    rsp,0x20
  405781:	mov    QWORD PTR [rbp-0x18],rdi
  405785:	mov    rax,QWORD PTR [rbp-0x18]
  405789:	mov    rax,QWORD PTR [rax+0x178]
  405790:	test   rax,rax
  405793:	jne    4057b4 <flatcc_builder_exit_user_frame@@Base+0x3f>
  405795:	lea    rcx,[rip+0x80b4]        # 40d850 <flatcc_builder_padding_base@@Base+0x690>
  40579c:	mov    edx,0x21e
  4057a1:	lea    rsi,[rip+0x7c18]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4057a8:	lea    rdi,[rip+0x7c94]        # 40d443 <flatcc_builder_padding_base@@Base+0x283>
  4057af:	call   403130 <__assert_fail@plt>
  4057b4:	mov    rax,QWORD PTR [rbp-0x18]
  4057b8:	mov    rdx,QWORD PTR [rax+0xc8]
  4057bf:	mov    rax,QWORD PTR [rbp-0x18]
  4057c3:	mov    rax,QWORD PTR [rax+0x178]
  4057ca:	mov    eax,eax
  4057cc:	add    rax,rdx
  4057cf:	mov    QWORD PTR [rbp-0x8],rax
  4057d3:	mov    rax,QWORD PTR [rbp-0x18]
  4057d7:	mov    rax,QWORD PTR [rax+0x178]
  4057de:	lea    rdx,[rax-0x8]
  4057e2:	mov    rax,QWORD PTR [rbp-0x18]
  4057e6:	mov    QWORD PTR [rax+0x180],rdx
  4057ed:	mov    rax,QWORD PTR [rbp-0x8]
  4057f1:	mov    rdx,QWORD PTR [rax-0x8]
  4057f5:	mov    rax,QWORD PTR [rbp-0x18]
  4057f9:	mov    QWORD PTR [rax+0x178],rdx
  405800:	mov    rax,QWORD PTR [rbp-0x18]
  405804:	mov    rax,QWORD PTR [rax+0x178]
  40580b:	leave  
  40580c:	ret    

000000000040580d <flatcc_builder_exit_user_frame_at@@Base>:
  40580d:	endbr64 
  405811:	push   rbp
  405812:	mov    rbp,rsp
  405815:	sub    rsp,0x10
  405819:	mov    QWORD PTR [rbp-0x8],rdi
  40581d:	mov    QWORD PTR [rbp-0x10],rsi
  405821:	mov    rax,QWORD PTR [rbp-0x8]
  405825:	mov    rax,QWORD PTR [rax+0x178]
  40582c:	cmp    QWORD PTR [rbp-0x10],rax
  405830:	jbe    405851 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  405832:	lea    rcx,[rip+0x8047]        # 40d880 <flatcc_builder_padding_base@@Base+0x6c0>
  405839:	mov    edx,0x227
  40583e:	lea    rsi,[rip+0x7b7b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405845:	lea    rdi,[rip+0x7c14]        # 40d460 <flatcc_builder_padding_base@@Base+0x2a0>
  40584c:	call   403130 <__assert_fail@plt>
  405851:	mov    rax,QWORD PTR [rbp-0x8]
  405855:	mov    rdx,QWORD PTR [rbp-0x10]
  405859:	mov    QWORD PTR [rax+0x178],rdx
  405860:	mov    rax,QWORD PTR [rbp-0x8]
  405864:	mov    rdi,rax
  405867:	call   405775 <flatcc_builder_exit_user_frame@@Base>
  40586c:	leave  
  40586d:	ret    

000000000040586e <flatcc_builder_get_current_user_frame@@Base>:
  40586e:	endbr64 
  405872:	push   rbp
  405873:	mov    rbp,rsp
  405876:	mov    QWORD PTR [rbp-0x8],rdi
  40587a:	mov    rax,QWORD PTR [rbp-0x8]
  40587e:	mov    rax,QWORD PTR [rax+0x178]
  405885:	pop    rbp
  405886:	ret    

0000000000405887 <flatcc_builder_get_user_frame_ptr@@Base>:
  405887:	endbr64 
  40588b:	push   rbp
  40588c:	mov    rbp,rsp
  40588f:	mov    QWORD PTR [rbp-0x8],rdi
  405893:	mov    QWORD PTR [rbp-0x10],rsi
  405897:	mov    rax,QWORD PTR [rbp-0x8]
  40589b:	mov    rax,QWORD PTR [rax+0xc8]
  4058a2:	mov    rdx,QWORD PTR [rbp-0x10]
  4058a6:	mov    edx,edx
  4058a8:	add    rax,rdx
  4058ab:	pop    rbp
  4058ac:	ret    
  4058ad:	endbr64 
  4058b1:	push   rbp
  4058b2:	mov    rbp,rsp
  4058b5:	sub    rsp,0x10
  4058b9:	mov    QWORD PTR [rbp-0x8],rdi
  4058bd:	mov    eax,esi
  4058bf:	mov    WORD PTR [rbp-0xc],ax
  4058c3:	mov    rax,QWORD PTR [rbp-0x8]
  4058c7:	mov    eax,DWORD PTR [rax+0x104]
  4058cd:	lea    edx,[rax+0x1]
  4058d0:	mov    rax,QWORD PTR [rbp-0x8]
  4058d4:	mov    DWORD PTR [rax+0x104],edx
  4058da:	mov    rax,QWORD PTR [rbp-0x8]
  4058de:	mov    edx,DWORD PTR [rax+0x104]
  4058e4:	mov    rax,QWORD PTR [rbp-0x8]
  4058e8:	mov    eax,DWORD PTR [rax+0x108]
  4058ee:	cmp    edx,eax
  4058f0:	jle    4059eb <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  4058f6:	mov    rax,QWORD PTR [rbp-0x8]
  4058fa:	mov    eax,DWORD PTR [rax+0x120]
  405900:	test   eax,eax
  405902:	jle    405926 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  405904:	mov    rax,QWORD PTR [rbp-0x8]
  405908:	mov    edx,DWORD PTR [rax+0x104]
  40590e:	mov    rax,QWORD PTR [rbp-0x8]
  405912:	mov    eax,DWORD PTR [rax+0x120]
  405918:	cmp    edx,eax
  40591a:	jle    405926 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  40591c:	mov    eax,0xffffffff
  405921:	jmp    405a86 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  405926:	mov    rax,QWORD PTR [rbp-0x8]
  40592a:	mov    eax,DWORD PTR [rax+0x104]
  405930:	dec    eax
  405932:	movsxd rdx,eax
  405935:	mov    rax,rdx
  405938:	shl    rax,0x3
  40593c:	add    rax,rdx
  40593f:	shl    rax,0x2
  405943:	mov    rdx,rax
  405946:	mov    rax,QWORD PTR [rbp-0x8]
  40594a:	mov    r8d,0x0
  405950:	mov    ecx,0x24
  405955:	mov    esi,0x4
  40595a:	mov    rdi,rax
  40595d:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  405962:	mov    rdx,rax
  405965:	mov    rax,QWORD PTR [rbp-0x8]
  405969:	mov    QWORD PTR [rax+0x30],rdx
  40596d:	mov    rax,QWORD PTR [rbp-0x8]
  405971:	mov    rax,QWORD PTR [rax+0x30]
  405975:	test   rax,rax
  405978:	jne    405984 <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  40597a:	mov    eax,0xffffffff
  40597f:	jmp    405a86 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  405984:	mov    rax,QWORD PTR [rbp-0x8]
  405988:	mov    rax,QWORD PTR [rax+0xa0]
  40598f:	movabs rdx,0xe38e38e38e38e38f
  405999:	mul    rdx
  40599c:	mov    rax,rdx
  40599f:	shr    rax,0x5
  4059a3:	mov    edx,eax
  4059a5:	mov    rax,QWORD PTR [rbp-0x8]
  4059a9:	mov    DWORD PTR [rax+0x108],edx
  4059af:	mov    rax,QWORD PTR [rbp-0x8]
  4059b3:	mov    eax,DWORD PTR [rax+0x120]
  4059b9:	test   eax,eax
  4059bb:	jle    4059ff <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4059bd:	mov    rax,QWORD PTR [rbp-0x8]
  4059c1:	mov    edx,DWORD PTR [rax+0x120]
  4059c7:	mov    rax,QWORD PTR [rbp-0x8]
  4059cb:	mov    eax,DWORD PTR [rax+0x108]
  4059d1:	cmp    edx,eax
  4059d3:	jge    4059ff <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4059d5:	mov    rax,QWORD PTR [rbp-0x8]
  4059d9:	mov    edx,DWORD PTR [rax+0x120]
  4059df:	mov    rax,QWORD PTR [rbp-0x8]
  4059e3:	mov    DWORD PTR [rax+0x108],edx
  4059e9:	jmp    4059ff <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4059eb:	mov    rax,QWORD PTR [rbp-0x8]
  4059ef:	mov    rax,QWORD PTR [rax+0x30]
  4059f3:	lea    rdx,[rax+0x24]
  4059f7:	mov    rax,QWORD PTR [rbp-0x8]
  4059fb:	mov    QWORD PTR [rax+0x30],rdx
  4059ff:	mov    rax,QWORD PTR [rbp-0x8]
  405a03:	mov    rax,QWORD PTR [rax+0x30]
  405a07:	mov    rdx,QWORD PTR [rbp-0x8]
  405a0b:	mov    edx,DWORD PTR [rdx+0x20]
  405a0e:	mov    DWORD PTR [rax+0x8],edx
  405a11:	mov    rax,QWORD PTR [rbp-0x8]
  405a15:	mov    rdx,QWORD PTR [rax+0x30]
  405a19:	mov    rax,QWORD PTR [rbp-0x8]
  405a1d:	movzx  eax,WORD PTR [rax+0xea]
  405a24:	mov    WORD PTR [rdx+0xc],ax
  405a28:	mov    rdx,QWORD PTR [rbp-0x8]
  405a2c:	movzx  eax,WORD PTR [rbp-0xc]
  405a30:	mov    WORD PTR [rdx+0xea],ax
  405a37:	mov    rax,QWORD PTR [rbp-0x8]
  405a3b:	mov    rax,QWORD PTR [rax+0x30]
  405a3f:	mov    rdx,QWORD PTR [rbp-0x8]
  405a43:	mov    edx,DWORD PTR [rdx+0x28]
  405a46:	mov    DWORD PTR [rax],edx
  405a48:	mov    rax,QWORD PTR [rbp-0x8]
  405a4c:	mov    rax,QWORD PTR [rax+0x30]
  405a50:	mov    DWORD PTR [rax+0x4],0xfffffffc
  405a57:	mov    rax,QWORD PTR [rbp-0x8]
  405a5b:	mov    edx,DWORD PTR [rax+0x28]
  405a5e:	mov    rax,QWORD PTR [rbp-0x8]
  405a62:	mov    eax,DWORD PTR [rax+0x20]
  405a65:	add    eax,edx
  405a67:	add    eax,0x7
  405a6a:	and    eax,0xfffffff8
  405a6d:	mov    edx,eax
  405a6f:	mov    rax,QWORD PTR [rbp-0x8]
  405a73:	mov    DWORD PTR [rax+0x28],edx
  405a76:	mov    rax,QWORD PTR [rbp-0x8]
  405a7a:	mov    DWORD PTR [rax+0x20],0x0
  405a81:	mov    eax,0x0
  405a86:	leave  
  405a87:	ret    
  405a88:	push   rbp
  405a89:	mov    rbp,rsp
  405a8c:	sub    rsp,0x10
  405a90:	mov    QWORD PTR [rbp-0x8],rdi
  405a94:	mov    rax,QWORD PTR [rbp-0x8]
  405a98:	mov    eax,DWORD PTR [rax+0x20]
  405a9b:	mov    edx,eax
  405a9d:	mov    rax,QWORD PTR [rbp-0x8]
  405aa1:	mov    rax,QWORD PTR [rax+0x18]
  405aa5:	mov    esi,0x0
  405aaa:	mov    rdi,rax
  405aad:	call   403140 <memset@plt>
  405ab2:	mov    rax,QWORD PTR [rbp-0x8]
  405ab6:	mov    rax,QWORD PTR [rax+0x30]
  405aba:	mov    edx,DWORD PTR [rax+0x8]
  405abd:	mov    rax,QWORD PTR [rbp-0x8]
  405ac1:	mov    DWORD PTR [rax+0x20],edx
  405ac4:	mov    rax,QWORD PTR [rbp-0x8]
  405ac8:	mov    rax,QWORD PTR [rax+0x30]
  405acc:	mov    edx,DWORD PTR [rax]
  405ace:	mov    rax,QWORD PTR [rbp-0x8]
  405ad2:	mov    DWORD PTR [rax+0x28],edx
  405ad5:	mov    rax,QWORD PTR [rbp-0x8]
  405ad9:	mov    rax,QWORD PTR [rax+0x30]
  405add:	mov    edx,DWORD PTR [rax+0x4]
  405ae0:	mov    rax,QWORD PTR [rbp-0x8]
  405ae4:	mov    esi,edx
  405ae6:	mov    rdi,rax
  405ae9:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  405aee:	mov    rax,QWORD PTR [rbp-0x8]
  405af2:	movzx  eax,WORD PTR [rax+0xea]
  405af9:	movzx  edx,ax
  405afc:	mov    rax,QWORD PTR [rbp-0x8]
  405b00:	mov    esi,edx
  405b02:	mov    rdi,rax
  405b05:	call   40557c <flatcc_builder_clear@@Base+0x99>
  405b0a:	mov    rax,QWORD PTR [rbp-0x8]
  405b0e:	mov    rax,QWORD PTR [rax+0x30]
  405b12:	movzx  eax,WORD PTR [rax+0xc]
  405b16:	mov    rdx,QWORD PTR [rbp-0x8]
  405b1a:	mov    WORD PTR [rdx+0xea],ax
  405b21:	mov    rax,QWORD PTR [rbp-0x8]
  405b25:	mov    rax,QWORD PTR [rax+0x30]
  405b29:	lea    rdx,[rax-0x24]
  405b2d:	mov    rax,QWORD PTR [rbp-0x8]
  405b31:	mov    QWORD PTR [rax+0x30],rdx
  405b35:	mov    rax,QWORD PTR [rbp-0x8]
  405b39:	mov    eax,DWORD PTR [rax+0x104]
  405b3f:	lea    edx,[rax-0x1]
  405b42:	mov    rax,QWORD PTR [rbp-0x8]
  405b46:	mov    DWORD PTR [rax+0x104],edx
  405b4c:	nop
  405b4d:	leave  
  405b4e:	ret    
  405b4f:	push   rbp
  405b50:	mov    rbp,rsp
  405b53:	mov    QWORD PTR [rbp-0x8],rdi
  405b57:	mov    DWORD PTR [rbp-0xc],esi
  405b5a:	mov    eax,edx
  405b5c:	mov    WORD PTR [rbp-0x10],ax
  405b60:	mov    rax,QWORD PTR [rbp-0x8]
  405b64:	mov    eax,DWORD PTR [rax+0xf0]
  405b6a:	sub    eax,DWORD PTR [rbp-0xc]
  405b6d:	movzx  edx,WORD PTR [rbp-0x10]
  405b71:	dec    edx
  405b73:	and    eax,edx
  405b75:	pop    rbp
  405b76:	ret    
  405b77:	push   rbp
  405b78:	mov    rbp,rsp
  405b7b:	mov    QWORD PTR [rbp-0x8],rdi
  405b7f:	mov    eax,esi
  405b81:	mov    WORD PTR [rbp-0xc],ax
  405b85:	mov    rax,QWORD PTR [rbp-0x8]
  405b89:	mov    eax,DWORD PTR [rax+0xf4]
  405b8f:	movzx  edx,WORD PTR [rbp-0xc]
  405b93:	dec    edx
  405b95:	and    eax,edx
  405b97:	pop    rbp
  405b98:	ret    
  405b99:	push   rbp
  405b9a:	mov    rbp,rsp
  405b9d:	sub    rsp,0x20
  405ba1:	mov    QWORD PTR [rbp-0x18],rdi
  405ba5:	mov    QWORD PTR [rbp-0x20],rsi
  405ba9:	mov    rax,QWORD PTR [rbp-0x18]
  405bad:	mov    edx,DWORD PTR [rax+0xf0]
  405bb3:	mov    rax,QWORD PTR [rbp-0x20]
  405bb7:	mov    rax,QWORD PTR [rax]
  405bba:	sub    edx,eax
  405bbc:	mov    eax,edx
  405bbe:	mov    DWORD PTR [rbp-0x4],eax
  405bc1:	mov    rax,QWORD PTR [rbp-0x20]
  405bc5:	mov    rax,QWORD PTR [rax]
  405bc8:	cmp    rax,0x10
  405bcc:	jbe    405be3 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  405bce:	mov    rax,QWORD PTR [rbp-0x20]
  405bd2:	mov    rax,QWORD PTR [rax]
  405bd5:	lea    rdx,[rax-0x10]
  405bd9:	mov    eax,0xffffffff
  405bde:	cmp    rdx,rax
  405be1:	ja     405bf2 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  405be3:	mov    rax,QWORD PTR [rbp-0x18]
  405be7:	mov    eax,DWORD PTR [rax+0xf0]
  405bed:	cmp    DWORD PTR [rbp-0x4],eax
  405bf0:	jl     405c11 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  405bf2:	lea    rcx,[rip+0x7ccf]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405bf9:	mov    edx,0x287
  405bfe:	lea    rsi,[rip+0x77bb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405c05:	lea    rdi,[rip+0x7814]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405c0c:	call   403130 <__assert_fail@plt>
  405c11:	mov    rax,QWORD PTR [rbp-0x18]
  405c15:	mov    rax,QWORD PTR [rax+0x48]
  405c19:	mov    rdx,QWORD PTR [rbp-0x20]
  405c1d:	mov    r8,QWORD PTR [rdx]
  405c20:	mov    rdx,QWORD PTR [rbp-0x20]
  405c24:	mov    edx,DWORD PTR [rdx+0x8]
  405c27:	mov    rcx,QWORD PTR [rbp-0x20]
  405c2b:	lea    rsi,[rcx+0x10]
  405c2f:	mov    rcx,QWORD PTR [rbp-0x18]
  405c33:	mov    rdi,QWORD PTR [rcx+0x38]
  405c37:	mov    ecx,DWORD PTR [rbp-0x4]
  405c3a:	call   rax
  405c3c:	test   eax,eax
  405c3e:	je     405c5f <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  405c40:	lea    rcx,[rip+0x7c81]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405c47:	mov    edx,0x28b
  405c4c:	lea    rsi,[rip+0x776d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405c53:	lea    rdi,[rip+0x77c6]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405c5a:	call   403130 <__assert_fail@plt>
  405c5f:	mov    rax,QWORD PTR [rbp-0x18]
  405c63:	mov    edx,DWORD PTR [rbp-0x4]
  405c66:	mov    DWORD PTR [rax+0xf0],edx
  405c6c:	mov    rax,QWORD PTR [rbp-0x18]
  405c70:	mov    eax,DWORD PTR [rax+0xf0]
  405c76:	leave  
  405c77:	ret    
  405c78:	push   rbp
  405c79:	mov    rbp,rsp
  405c7c:	sub    rsp,0x20
  405c80:	mov    QWORD PTR [rbp-0x18],rdi
  405c84:	mov    QWORD PTR [rbp-0x20],rsi
  405c88:	mov    rax,QWORD PTR [rbp-0x18]
  405c8c:	mov    eax,DWORD PTR [rax+0xf4]
  405c92:	mov    DWORD PTR [rbp-0x4],eax
  405c95:	mov    rax,QWORD PTR [rbp-0x20]
  405c99:	mov    rax,QWORD PTR [rax]
  405c9c:	mov    edx,eax
  405c9e:	mov    eax,DWORD PTR [rbp-0x4]
  405ca1:	add    edx,eax
  405ca3:	mov    rax,QWORD PTR [rbp-0x18]
  405ca7:	mov    DWORD PTR [rax+0xf4],edx
  405cad:	mov    rax,QWORD PTR [rbp-0x18]
  405cb1:	mov    eax,DWORD PTR [rax+0xf4]
  405cb7:	cmp    DWORD PTR [rbp-0x4],eax
  405cba:	jle    405cdb <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  405cbc:	lea    rcx,[rip+0x7bf5]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405cc3:	mov    edx,0x2a1
  405cc8:	lea    rsi,[rip+0x76f1]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405ccf:	lea    rdi,[rip+0x774a]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405cd6:	call   403130 <__assert_fail@plt>
  405cdb:	mov    rax,QWORD PTR [rbp-0x18]
  405cdf:	mov    rax,QWORD PTR [rax+0x48]
  405ce3:	mov    rdx,QWORD PTR [rbp-0x20]
  405ce7:	mov    r8,QWORD PTR [rdx]
  405cea:	mov    rdx,QWORD PTR [rbp-0x20]
  405cee:	mov    edx,DWORD PTR [rdx+0x8]
  405cf1:	mov    rcx,QWORD PTR [rbp-0x20]
  405cf5:	lea    rsi,[rcx+0x10]
  405cf9:	mov    rcx,QWORD PTR [rbp-0x18]
  405cfd:	mov    rdi,QWORD PTR [rcx+0x38]
  405d01:	mov    ecx,DWORD PTR [rbp-0x4]
  405d04:	call   rax
  405d06:	test   eax,eax
  405d08:	je     405d29 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  405d0a:	lea    rcx,[rip+0x7ba7]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405d11:	mov    edx,0x2a5
  405d16:	lea    rsi,[rip+0x76a3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405d1d:	lea    rdi,[rip+0x76fc]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405d24:	call   403130 <__assert_fail@plt>
  405d29:	mov    eax,DWORD PTR [rbp-0x4]
  405d2c:	inc    eax
  405d2e:	leave  
  405d2f:	ret    
  405d30:	endbr64 
  405d34:	push   rbp
  405d35:	mov    rbp,rsp
  405d38:	sub    rsp,0xd0
  405d3f:	mov    QWORD PTR [rbp-0xb8],rdi
  405d46:	mov    QWORD PTR [rbp-0xc0],rsi
  405d4d:	mov    eax,edx
  405d4f:	mov    DWORD PTR [rbp-0xc8],ecx
  405d55:	mov    WORD PTR [rbp-0xc4],ax
  405d5c:	mov    rax,QWORD PTR fs:0x28
  405d65:	mov    QWORD PTR [rbp-0x8],rax
  405d69:	xor    eax,eax
  405d6b:	cmp    WORD PTR [rbp-0xc4],0x0
  405d73:	jne    405d9f <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  405d75:	mov    rax,QWORD PTR [rbp-0xb8]
  405d7c:	movzx  eax,WORD PTR [rax+0xec]
  405d83:	test   ax,ax
  405d86:	je     405d98 <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  405d88:	mov    rax,QWORD PTR [rbp-0xb8]
  405d8f:	movzx  eax,WORD PTR [rax+0xec]
  405d96:	jmp    405da6 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405d98:	mov    eax,0x1
  405d9d:	jmp    405da6 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405d9f:	movzx  eax,WORD PTR [rbp-0xc4]
  405da6:	mov    WORD PTR [rbp-0xc4],ax
  405dad:	mov    rax,QWORD PTR [rbp-0xc0]
  405db4:	mov    esi,0x4
  405db9:	mov    rdi,rax
  405dbc:	call   4055ad <flatcc_builder_clear@@Base+0xca>
  405dc1:	movzx  edx,WORD PTR [rbp-0xc4]
  405dc8:	mov    rax,QWORD PTR [rbp-0xc0]
  405dcf:	mov    esi,edx
  405dd1:	mov    rdi,rax
  405dd4:	call   4055ad <flatcc_builder_clear@@Base+0xca>
  405dd9:	cmp    DWORD PTR [rbp-0xc8],0x0
  405de0:	jne    405ed5 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405de6:	movzx  edx,WORD PTR [rbp-0xc4]
  405ded:	mov    rax,QWORD PTR [rbp-0xb8]
  405df4:	mov    esi,edx
  405df6:	mov    rdi,rax
  405df9:	call   405b77 <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  405dfe:	mov    eax,eax
  405e00:	mov    QWORD PTR [rbp-0xa8],rax
  405e07:	cmp    QWORD PTR [rbp-0xa8],0x0
  405e0f:	je     405ed5 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405e15:	mov    QWORD PTR [rbp-0xa0],0x0
  405e20:	mov    DWORD PTR [rbp-0x98],0x0
  405e2a:	cmp    QWORD PTR [rbp-0xa8],0x0
  405e32:	je     405e99 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  405e34:	mov    rdx,QWORD PTR [rbp-0xa0]
  405e3b:	mov    rax,QWORD PTR [rbp-0xa8]
  405e42:	add    rax,rdx
  405e45:	mov    QWORD PTR [rbp-0xa0],rax
  405e4c:	mov    eax,DWORD PTR [rbp-0x98]
  405e52:	cdqe   
  405e54:	shl    rax,0x4
  405e58:	add    rax,rbp
  405e5b:	sub    rax,0x90
  405e61:	mov    rdx,0x40d1c0
  405e68:	mov    QWORD PTR [rax],rdx
  405e6b:	mov    eax,DWORD PTR [rbp-0x98]
  405e71:	cdqe   
  405e73:	shl    rax,0x4
  405e77:	add    rax,rbp
  405e7a:	lea    rdx,[rax-0x88]
  405e81:	mov    rax,QWORD PTR [rbp-0xa8]
  405e88:	mov    QWORD PTR [rdx],rax
  405e8b:	mov    eax,DWORD PTR [rbp-0x98]
  405e91:	inc    eax
  405e93:	mov    DWORD PTR [rbp-0x98],eax
  405e99:	lea    rdx,[rbp-0xa0]
  405ea0:	mov    rax,QWORD PTR [rbp-0xb8]
  405ea7:	mov    rsi,rdx
  405eaa:	mov    rdi,rax
  405ead:	call   405c78 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  405eb2:	test   eax,eax
  405eb4:	jne    405ed5 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405eb6:	lea    rcx,[rip+0x79eb]        # 40d8a8 <flatcc_builder_padding_base@@Base+0x6e8>
  405ebd:	mov    edx,0x2be
  405ec2:	lea    rsi,[rip+0x74f7]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405ec9:	lea    rdi,[rip+0x7550]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405ed0:	call   403130 <__assert_fail@plt>
  405ed5:	mov    eax,0x0
  405eda:	mov    rcx,QWORD PTR [rbp-0x8]
  405ede:	xor    rcx,QWORD PTR fs:0x28
  405ee7:	je     405eee <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  405ee9:	call   403120 <__stack_chk_fail@plt>
  405eee:	leave  
  405eef:	ret    

0000000000405ef0 <flatcc_builder_embed_buffer@@Base>:
  405ef0:	endbr64 
  405ef4:	push   rbp
  405ef5:	mov    rbp,rsp
  405ef8:	sub    rsp,0xe0
  405eff:	mov    QWORD PTR [rbp-0xb8],rdi
  405f06:	mov    eax,esi
  405f08:	mov    QWORD PTR [rbp-0xc8],rdx
  405f0f:	mov    QWORD PTR [rbp-0xd0],rcx
  405f16:	mov    edx,r8d
  405f19:	mov    DWORD PTR [rbp-0xd4],r9d
  405f20:	mov    WORD PTR [rbp-0xbc],ax
  405f27:	mov    eax,edx
  405f29:	mov    WORD PTR [rbp-0xc0],ax
  405f30:	mov    rax,QWORD PTR fs:0x28
  405f39:	mov    QWORD PTR [rbp-0x8],rax
  405f3d:	xor    eax,eax
  405f3f:	mov    eax,DWORD PTR [rbp-0xd4]
  405f45:	and    eax,0x2
  405f48:	mov    DWORD PTR [rbp-0xa8],eax
  405f4e:	mov    rax,QWORD PTR [rbp-0xb8]
  405f55:	mov    eax,DWORD PTR [rax+0x100]
  405f5b:	test   eax,eax
  405f5d:	setne  al
  405f60:	movzx  ecx,al
  405f63:	movzx  edx,WORD PTR [rbp-0xbc]
  405f6a:	lea    rsi,[rbp-0xc0]
  405f71:	mov    rax,QWORD PTR [rbp-0xb8]
  405f78:	mov    rdi,rax
  405f7b:	call   405d30 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  405f80:	test   eax,eax
  405f82:	je     405f8e <flatcc_builder_embed_buffer@@Base+0x9e>
  405f84:	mov    eax,0x0
  405f89:	jmp    406165 <flatcc_builder_embed_buffer@@Base+0x275>
  405f8e:	movzx  eax,WORD PTR [rbp-0xc0]
  405f95:	movzx  edx,ax
  405f98:	mov    rax,QWORD PTR [rbp-0xd0]
  405f9f:	mov    ecx,eax
  405fa1:	cmp    DWORD PTR [rbp-0xa8],0x0
  405fa8:	je     405fb1 <flatcc_builder_embed_buffer@@Base+0xc1>
  405faa:	mov    eax,0x4
  405faf:	jmp    405fb6 <flatcc_builder_embed_buffer@@Base+0xc6>
  405fb1:	mov    eax,0x0
  405fb6:	add    ecx,eax
  405fb8:	mov    rax,QWORD PTR [rbp-0xb8]
  405fbf:	mov    esi,ecx
  405fc1:	mov    rdi,rax
  405fc4:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  405fc9:	mov    DWORD PTR [rbp-0xa4],eax
  405fcf:	mov    rax,QWORD PTR [rbp-0xd0]
  405fd6:	mov    edx,eax
  405fd8:	mov    eax,DWORD PTR [rbp-0xa4]
  405fde:	add    eax,edx
  405fe0:	mov    edi,eax
  405fe2:	call   404850 <main@@Base+0x17a>
  405fe7:	mov    DWORD PTR [rbp-0xac],eax
  405fed:	mov    QWORD PTR [rbp-0xa0],0x0
  405ff8:	mov    DWORD PTR [rbp-0x98],0x0
  406002:	mov    rax,QWORD PTR [rbp-0xb8]
  406009:	mov    eax,DWORD PTR [rax+0x100]
  40600f:	test   eax,eax
  406011:	je     40606f <flatcc_builder_embed_buffer@@Base+0x17f>
  406013:	mov    rax,QWORD PTR [rbp-0xa0]
  40601a:	add    rax,0x4
  40601e:	mov    QWORD PTR [rbp-0xa0],rax
  406025:	mov    eax,DWORD PTR [rbp-0x98]
  40602b:	cdqe   
  40602d:	shl    rax,0x4
  406031:	add    rax,rbp
  406034:	lea    rdx,[rax-0x90]
  40603b:	lea    rax,[rbp-0xac]
  406042:	mov    QWORD PTR [rdx],rax
  406045:	mov    eax,DWORD PTR [rbp-0x98]
  40604b:	cdqe   
  40604d:	shl    rax,0x4
  406051:	add    rax,rbp
  406054:	sub    rax,0x88
  40605a:	mov    QWORD PTR [rax],0x4
  406061:	mov    eax,DWORD PTR [rbp-0x98]
  406067:	inc    eax
  406069:	mov    DWORD PTR [rbp-0x98],eax
  40606f:	cmp    QWORD PTR [rbp-0xd0],0x0
  406077:	je     4060df <flatcc_builder_embed_buffer@@Base+0x1ef>
  406079:	mov    rdx,QWORD PTR [rbp-0xa0]
  406080:	mov    rax,QWORD PTR [rbp-0xd0]
  406087:	add    rax,rdx
  40608a:	mov    QWORD PTR [rbp-0xa0],rax
  406091:	mov    eax,DWORD PTR [rbp-0x98]
  406097:	cdqe   
  406099:	shl    rax,0x4
  40609d:	add    rax,rbp
  4060a0:	lea    rdx,[rax-0x90]
  4060a7:	mov    rax,QWORD PTR [rbp-0xc8]
  4060ae:	mov    QWORD PTR [rdx],rax
  4060b1:	mov    eax,DWORD PTR [rbp-0x98]
  4060b7:	cdqe   
  4060b9:	shl    rax,0x4
  4060bd:	add    rax,rbp
  4060c0:	lea    rdx,[rax-0x88]
  4060c7:	mov    rax,QWORD PTR [rbp-0xd0]
  4060ce:	mov    QWORD PTR [rdx],rax
  4060d1:	mov    eax,DWORD PTR [rbp-0x98]
  4060d7:	inc    eax
  4060d9:	mov    DWORD PTR [rbp-0x98],eax
  4060df:	cmp    DWORD PTR [rbp-0xa4],0x0
  4060e6:	je     40614c <flatcc_builder_embed_buffer@@Base+0x25c>
  4060e8:	mov    rdx,QWORD PTR [rbp-0xa0]
  4060ef:	mov    eax,DWORD PTR [rbp-0xa4]
  4060f5:	add    rax,rdx
  4060f8:	mov    QWORD PTR [rbp-0xa0],rax
  4060ff:	mov    eax,DWORD PTR [rbp-0x98]
  406105:	cdqe   
  406107:	shl    rax,0x4
  40610b:	add    rax,rbp
  40610e:	sub    rax,0x90
  406114:	mov    rdx,0x40d1c0
  40611b:	mov    QWORD PTR [rax],rdx
  40611e:	mov    edx,DWORD PTR [rbp-0x98]
  406124:	mov    eax,DWORD PTR [rbp-0xa4]
  40612a:	movsxd rdx,edx
  40612d:	shl    rdx,0x4
  406131:	add    rdx,rbp
  406134:	sub    rdx,0x88
  40613b:	mov    QWORD PTR [rdx],rax
  40613e:	mov    eax,DWORD PTR [rbp-0x98]
  406144:	inc    eax
  406146:	mov    DWORD PTR [rbp-0x98],eax
  40614c:	lea    rdx,[rbp-0xa0]
  406153:	mov    rax,QWORD PTR [rbp-0xb8]
  40615a:	mov    rsi,rdx
  40615d:	mov    rdi,rax
  406160:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  406165:	mov    rdi,QWORD PTR [rbp-0x8]
  406169:	xor    rdi,QWORD PTR fs:0x28
  406172:	je     406179 <flatcc_builder_embed_buffer@@Base+0x289>
  406174:	call   403120 <__stack_chk_fail@plt>
  406179:	leave  
  40617a:	ret    

000000000040617b <flatcc_builder_create_buffer@@Base>:
  40617b:	endbr64 
  40617f:	push   rbp
  406180:	mov    rbp,rsp
  406183:	sub    rsp,0xf0
  40618a:	mov    QWORD PTR [rbp-0xd8],rdi
  406191:	mov    QWORD PTR [rbp-0xe0],rsi
  406198:	mov    eax,edx
  40619a:	mov    DWORD PTR [rbp-0xe8],ecx
  4061a0:	mov    edx,r8d
  4061a3:	mov    DWORD PTR [rbp-0xf0],r9d
  4061aa:	mov    WORD PTR [rbp-0xe4],ax
  4061b1:	mov    eax,edx
  4061b3:	mov    WORD PTR [rbp-0xec],ax
  4061ba:	mov    rax,QWORD PTR fs:0x28
  4061c3:	mov    QWORD PTR [rbp-0x8],rax
  4061c7:	xor    eax,eax
  4061c9:	mov    DWORD PTR [rbp-0xb8],0x0
  4061d3:	mov    DWORD PTR [rbp-0xbc],0x0
  4061dd:	mov    eax,DWORD PTR [rbp-0xf0]
  4061e3:	and    eax,0x1
  4061e6:	test   eax,eax
  4061e8:	setne  al
  4061eb:	movzx  eax,al
  4061ee:	mov    DWORD PTR [rbp-0xb4],eax
  4061f4:	mov    eax,DWORD PTR [rbp-0xf0]
  4061fa:	and    eax,0x2
  4061fd:	test   eax,eax
  4061ff:	setne  al
  406202:	movzx  eax,al
  406205:	mov    DWORD PTR [rbp-0xb0],eax
  40620b:	movzx  edx,WORD PTR [rbp-0xe4]
  406212:	mov    ecx,DWORD PTR [rbp-0xb4]
  406218:	lea    rsi,[rbp-0xec]
  40621f:	mov    rax,QWORD PTR [rbp-0xd8]
  406226:	mov    rdi,rax
  406229:	call   405d30 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  40622e:	test   eax,eax
  406230:	je     40623c <flatcc_builder_create_buffer@@Base+0xc1>
  406232:	mov    eax,0x0
  406237:	jmp    40659e <flatcc_builder_create_buffer@@Base+0x423>
  40623c:	movzx  eax,WORD PTR [rbp-0xec]
  406243:	movzx  edx,ax
  406246:	mov    rax,QWORD PTR [rbp-0xd8]
  40624d:	mov    esi,edx
  40624f:	mov    rdi,rax
  406252:	call   40557c <flatcc_builder_clear@@Base+0x99>
  406257:	cmp    QWORD PTR [rbp-0xe0],0x0
  40625f:	je     406296 <flatcc_builder_create_buffer@@Base+0x11b>
  406261:	mov    rax,QWORD PTR [rbp-0xe0]
  406268:	mov    eax,DWORD PTR [rax]
  40626a:	mov    DWORD PTR [rbp-0xbc],eax
  406270:	mov    eax,DWORD PTR [rbp-0xbc]
  406276:	mov    edi,eax
  406278:	call   40486b <main@@Base+0x195>
  40627d:	mov    DWORD PTR [rbp-0xbc],eax
  406283:	mov    eax,DWORD PTR [rbp-0xbc]
  406289:	mov    edi,eax
  40628b:	call   404850 <main@@Base+0x17a>
  406290:	mov    DWORD PTR [rbp-0xbc],eax
  406296:	mov    eax,DWORD PTR [rbp-0xbc]
  40629c:	test   eax,eax
  40629e:	je     4062a7 <flatcc_builder_create_buffer@@Base+0x12c>
  4062a0:	mov    eax,0x4
  4062a5:	jmp    4062ac <flatcc_builder_create_buffer@@Base+0x131>
  4062a7:	mov    eax,0x0
  4062ac:	mov    DWORD PTR [rbp-0xb8],eax
  4062b2:	movzx  eax,WORD PTR [rbp-0xec]
  4062b9:	movzx  edx,ax
  4062bc:	cmp    DWORD PTR [rbp-0xb0],0x0
  4062c3:	je     4062cc <flatcc_builder_create_buffer@@Base+0x151>
  4062c5:	mov    ecx,0x4
  4062ca:	jmp    4062d1 <flatcc_builder_create_buffer@@Base+0x156>
  4062cc:	mov    ecx,0x0
  4062d1:	mov    eax,DWORD PTR [rbp-0xb8]
  4062d7:	add    eax,ecx
  4062d9:	lea    ecx,[rax+0x4]
  4062dc:	mov    rax,QWORD PTR [rbp-0xd8]
  4062e3:	mov    esi,ecx
  4062e5:	mov    rdi,rax
  4062e8:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4062ed:	mov    DWORD PTR [rbp-0xac],eax
  4062f3:	mov    QWORD PTR [rbp-0xa0],0x0
  4062fe:	mov    DWORD PTR [rbp-0x98],0x0
  406308:	cmp    DWORD PTR [rbp-0xb4],0x0
  40630f:	jne    40631a <flatcc_builder_create_buffer@@Base+0x19f>
  406311:	cmp    DWORD PTR [rbp-0xb0],0x0
  406318:	je     406376 <flatcc_builder_create_buffer@@Base+0x1fb>
  40631a:	mov    rax,QWORD PTR [rbp-0xa0]
  406321:	add    rax,0x4
  406325:	mov    QWORD PTR [rbp-0xa0],rax
  40632c:	mov    eax,DWORD PTR [rbp-0x98]
  406332:	cdqe   
  406334:	shl    rax,0x4
  406338:	add    rax,rbp
  40633b:	lea    rdx,[rax-0x90]
  406342:	lea    rax,[rbp-0xc0]
  406349:	mov    QWORD PTR [rdx],rax
  40634c:	mov    eax,DWORD PTR [rbp-0x98]
  406352:	cdqe   
  406354:	shl    rax,0x4
  406358:	add    rax,rbp
  40635b:	sub    rax,0x88
  406361:	mov    QWORD PTR [rax],0x4
  406368:	mov    eax,DWORD PTR [rbp-0x98]
  40636e:	inc    eax
  406370:	mov    DWORD PTR [rbp-0x98],eax
  406376:	mov    rax,QWORD PTR [rbp-0xa0]
  40637d:	add    rax,0x4
  406381:	mov    QWORD PTR [rbp-0xa0],rax
  406388:	mov    eax,DWORD PTR [rbp-0x98]
  40638e:	cdqe   
  406390:	shl    rax,0x4
  406394:	add    rax,rbp
  406397:	lea    rdx,[rax-0x90]
  40639e:	lea    rax,[rbp-0xc4]
  4063a5:	mov    QWORD PTR [rdx],rax
  4063a8:	mov    eax,DWORD PTR [rbp-0x98]
  4063ae:	cdqe   
  4063b0:	shl    rax,0x4
  4063b4:	add    rax,rbp
  4063b7:	sub    rax,0x88
  4063bd:	mov    QWORD PTR [rax],0x4
  4063c4:	mov    eax,DWORD PTR [rbp-0x98]
  4063ca:	inc    eax
  4063cc:	mov    DWORD PTR [rbp-0x98],eax
  4063d2:	cmp    DWORD PTR [rbp-0xb8],0x0
  4063d9:	je     406440 <flatcc_builder_create_buffer@@Base+0x2c5>
  4063db:	mov    rdx,QWORD PTR [rbp-0xa0]
  4063e2:	mov    eax,DWORD PTR [rbp-0xb8]
  4063e8:	add    rax,rdx
  4063eb:	mov    QWORD PTR [rbp-0xa0],rax
  4063f2:	mov    eax,DWORD PTR [rbp-0x98]
  4063f8:	cdqe   
  4063fa:	shl    rax,0x4
  4063fe:	add    rax,rbp
  406401:	lea    rdx,[rax-0x90]
  406408:	lea    rax,[rbp-0xbc]
  40640f:	mov    QWORD PTR [rdx],rax
  406412:	mov    edx,DWORD PTR [rbp-0x98]
  406418:	mov    eax,DWORD PTR [rbp-0xb8]
  40641e:	movsxd rdx,edx
  406421:	shl    rdx,0x4
  406425:	add    rdx,rbp
  406428:	sub    rdx,0x88
  40642f:	mov    QWORD PTR [rdx],rax
  406432:	mov    eax,DWORD PTR [rbp-0x98]
  406438:	inc    eax
  40643a:	mov    DWORD PTR [rbp-0x98],eax
  406440:	cmp    DWORD PTR [rbp-0xac],0x0
  406447:	je     4064ad <flatcc_builder_create_buffer@@Base+0x332>
  406449:	mov    rdx,QWORD PTR [rbp-0xa0]
  406450:	mov    eax,DWORD PTR [rbp-0xac]
  406456:	add    rax,rdx
  406459:	mov    QWORD PTR [rbp-0xa0],rax
  406460:	mov    eax,DWORD PTR [rbp-0x98]
  406466:	cdqe   
  406468:	shl    rax,0x4
  40646c:	add    rax,rbp
  40646f:	sub    rax,0x90
  406475:	mov    rdx,0x40d1c0
  40647c:	mov    QWORD PTR [rax],rdx
  40647f:	mov    edx,DWORD PTR [rbp-0x98]
  406485:	mov    eax,DWORD PTR [rbp-0xac]
  40648b:	movsxd rdx,edx
  40648e:	shl    rdx,0x4
  406492:	add    rdx,rbp
  406495:	sub    rdx,0x88
  40649c:	mov    QWORD PTR [rdx],rax
  40649f:	mov    eax,DWORD PTR [rbp-0x98]
  4064a5:	inc    eax
  4064a7:	mov    DWORD PTR [rbp-0x98],eax
  4064ad:	mov    rax,QWORD PTR [rbp-0xd8]
  4064b4:	mov    eax,DWORD PTR [rax+0xf0]
  4064ba:	mov    edx,eax
  4064bc:	mov    rax,QWORD PTR [rbp-0xa0]
  4064c3:	sub    edx,eax
  4064c5:	mov    eax,edx
  4064c7:	cmp    DWORD PTR [rbp-0xb4],0x0
  4064ce:	jne    4064d9 <flatcc_builder_create_buffer@@Base+0x35e>
  4064d0:	cmp    DWORD PTR [rbp-0xb0],0x0
  4064d7:	je     4064e0 <flatcc_builder_create_buffer@@Base+0x365>
  4064d9:	mov    edx,0x4
  4064de:	jmp    4064e5 <flatcc_builder_create_buffer@@Base+0x36a>
  4064e0:	mov    edx,0x0
  4064e5:	add    eax,edx
  4064e7:	mov    DWORD PTR [rbp-0xa8],eax
  4064ed:	cmp    DWORD PTR [rbp-0xb4],0x0
  4064f4:	je     406518 <flatcc_builder_create_buffer@@Base+0x39d>
  4064f6:	mov    rax,QWORD PTR [rbp-0xd8]
  4064fd:	mov    eax,DWORD PTR [rax+0xf8]
  406503:	sub    eax,DWORD PTR [rbp-0xa8]
  406509:	mov    edi,eax
  40650b:	call   404850 <main@@Base+0x17a>
  406510:	mov    DWORD PTR [rbp-0xc0],eax
  406516:	jmp    406538 <flatcc_builder_create_buffer@@Base+0x3bd>
  406518:	mov    rax,QWORD PTR [rbp-0xd8]
  40651f:	mov    eax,DWORD PTR [rax+0xf4]
  406525:	sub    eax,DWORD PTR [rbp-0xa8]
  40652b:	mov    edi,eax
  40652d:	call   404850 <main@@Base+0x17a>
  406532:	mov    DWORD PTR [rbp-0xc0],eax
  406538:	mov    eax,DWORD PTR [rbp-0xe8]
  40653e:	sub    eax,DWORD PTR [rbp-0xa8]
  406544:	mov    edi,eax
  406546:	call   404850 <main@@Base+0x17a>
  40654b:	mov    DWORD PTR [rbp-0xc4],eax
  406551:	lea    rdx,[rbp-0xa0]
  406558:	mov    rax,QWORD PTR [rbp-0xd8]
  40655f:	mov    rsi,rdx
  406562:	mov    rdi,rax
  406565:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40656a:	mov    DWORD PTR [rbp-0xa4],eax
  406570:	cmp    DWORD PTR [rbp-0xa4],0x0
  406577:	jne    406598 <flatcc_builder_create_buffer@@Base+0x41d>
  406579:	lea    rcx,[rip+0x7360]        # 40d8e0 <flatcc_builder_padding_base@@Base+0x720>
  406580:	mov    edx,0x304
  406585:	lea    rsi,[rip+0x6e34]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40658c:	lea    rdi,[rip+0x6e8d]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  406593:	call   403130 <__assert_fail@plt>
  406598:	mov    eax,DWORD PTR [rbp-0xa4]
  40659e:	mov    rsi,QWORD PTR [rbp-0x8]
  4065a2:	xor    rsi,QWORD PTR fs:0x28
  4065ab:	je     4065b2 <flatcc_builder_create_buffer@@Base+0x437>
  4065ad:	call   403120 <__stack_chk_fail@plt>
  4065b2:	leave  
  4065b3:	ret    

00000000004065b4 <flatcc_builder_create_struct@@Base>:
  4065b4:	endbr64 
  4065b8:	push   rbp
  4065b9:	mov    rbp,rsp
  4065bc:	sub    rsp,0xd0
  4065c3:	mov    QWORD PTR [rbp-0xb8],rdi
  4065ca:	mov    QWORD PTR [rbp-0xc0],rsi
  4065d1:	mov    QWORD PTR [rbp-0xc8],rdx
  4065d8:	mov    eax,ecx
  4065da:	mov    WORD PTR [rbp-0xcc],ax
  4065e1:	mov    rax,QWORD PTR fs:0x28
  4065ea:	mov    QWORD PTR [rbp-0x8],rax
  4065ee:	xor    eax,eax
  4065f0:	cmp    WORD PTR [rbp-0xcc],0x0
  4065f8:	jne    406619 <flatcc_builder_create_struct@@Base+0x65>
  4065fa:	lea    rcx,[rip+0x72ff]        # 40d900 <flatcc_builder_padding_base@@Base+0x740>
  406601:	mov    edx,0x30f
  406606:	lea    rsi,[rip+0x6db3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40660d:	lea    rdi,[rip+0x6e6b]        # 40d47f <flatcc_builder_padding_base@@Base+0x2bf>
  406614:	call   403130 <__assert_fail@plt>
  406619:	movzx  edx,WORD PTR [rbp-0xcc]
  406620:	mov    rax,QWORD PTR [rbp-0xb8]
  406627:	mov    esi,edx
  406629:	mov    rdi,rax
  40662c:	call   40557c <flatcc_builder_clear@@Base+0x99>
  406631:	movzx  edx,WORD PTR [rbp-0xcc]
  406638:	mov    rax,QWORD PTR [rbp-0xc8]
  40663f:	mov    ecx,eax
  406641:	mov    rax,QWORD PTR [rbp-0xb8]
  406648:	mov    esi,ecx
  40664a:	mov    rdi,rax
  40664d:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  406652:	mov    eax,eax
  406654:	mov    QWORD PTR [rbp-0xa8],rax
  40665b:	mov    QWORD PTR [rbp-0xa0],0x0
  406666:	mov    DWORD PTR [rbp-0x98],0x0
  406670:	cmp    QWORD PTR [rbp-0xc8],0x0
  406678:	je     4066e0 <flatcc_builder_create_struct@@Base+0x12c>
  40667a:	mov    rdx,QWORD PTR [rbp-0xa0]
  406681:	mov    rax,QWORD PTR [rbp-0xc8]
  406688:	add    rax,rdx
  40668b:	mov    QWORD PTR [rbp-0xa0],rax
  406692:	mov    eax,DWORD PTR [rbp-0x98]
  406698:	cdqe   
  40669a:	shl    rax,0x4
  40669e:	add    rax,rbp
  4066a1:	lea    rdx,[rax-0x90]
  4066a8:	mov    rax,QWORD PTR [rbp-0xc0]
  4066af:	mov    QWORD PTR [rdx],rax
  4066b2:	mov    eax,DWORD PTR [rbp-0x98]
  4066b8:	cdqe   
  4066ba:	shl    rax,0x4
  4066be:	add    rax,rbp
  4066c1:	lea    rdx,[rax-0x88]
  4066c8:	mov    rax,QWORD PTR [rbp-0xc8]
  4066cf:	mov    QWORD PTR [rdx],rax
  4066d2:	mov    eax,DWORD PTR [rbp-0x98]
  4066d8:	inc    eax
  4066da:	mov    DWORD PTR [rbp-0x98],eax
  4066e0:	cmp    QWORD PTR [rbp-0xa8],0x0
  4066e8:	je     40674f <flatcc_builder_create_struct@@Base+0x19b>
  4066ea:	mov    rdx,QWORD PTR [rbp-0xa0]
  4066f1:	mov    rax,QWORD PTR [rbp-0xa8]
  4066f8:	add    rax,rdx
  4066fb:	mov    QWORD PTR [rbp-0xa0],rax
  406702:	mov    eax,DWORD PTR [rbp-0x98]
  406708:	cdqe   
  40670a:	shl    rax,0x4
  40670e:	add    rax,rbp
  406711:	sub    rax,0x90
  406717:	mov    rdx,0x40d1c0
  40671e:	mov    QWORD PTR [rax],rdx
  406721:	mov    eax,DWORD PTR [rbp-0x98]
  406727:	cdqe   
  406729:	shl    rax,0x4
  40672d:	add    rax,rbp
  406730:	lea    rdx,[rax-0x88]
  406737:	mov    rax,QWORD PTR [rbp-0xa8]
  40673e:	mov    QWORD PTR [rdx],rax
  406741:	mov    eax,DWORD PTR [rbp-0x98]
  406747:	inc    eax
  406749:	mov    DWORD PTR [rbp-0x98],eax
  40674f:	lea    rdx,[rbp-0xa0]
  406756:	mov    rax,QWORD PTR [rbp-0xb8]
  40675d:	mov    rsi,rdx
  406760:	mov    rdi,rax
  406763:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  406768:	mov    rcx,QWORD PTR [rbp-0x8]
  40676c:	xor    rcx,QWORD PTR fs:0x28
  406775:	je     40677c <flatcc_builder_create_struct@@Base+0x1c8>
  406777:	call   403120 <__stack_chk_fail@plt>
  40677c:	leave  
  40677d:	ret    

000000000040677e <flatcc_builder_start_buffer@@Base>:
  40677e:	endbr64 
  406782:	push   rbp
  406783:	mov    rbp,rsp
  406786:	sub    rsp,0x20
  40678a:	mov    QWORD PTR [rbp-0x8],rdi
  40678e:	mov    QWORD PTR [rbp-0x10],rsi
  406792:	mov    eax,edx
  406794:	mov    DWORD PTR [rbp-0x18],ecx
  406797:	mov    WORD PTR [rbp-0x14],ax
  40679b:	mov    rax,QWORD PTR [rbp-0x8]
  40679f:	movzx  eax,WORD PTR [rax+0xe8]
  4067a6:	movzx  edx,ax
  4067a9:	mov    rax,QWORD PTR [rbp-0x8]
  4067ad:	mov    esi,edx
  4067af:	mov    rdi,rax
  4067b2:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4067b7:	test   eax,eax
  4067b9:	je     4067c5 <flatcc_builder_start_buffer@@Base+0x47>
  4067bb:	mov    eax,0xffffffff
  4067c0:	jmp    4068c9 <flatcc_builder_start_buffer@@Base+0x14b>
  4067c5:	mov    rax,QWORD PTR [rbp-0x8]
  4067c9:	mov    WORD PTR [rax+0xe8],0x1
  4067d2:	mov    rax,QWORD PTR [rbp-0x8]
  4067d6:	mov    rdx,QWORD PTR [rax+0x30]
  4067da:	mov    rax,QWORD PTR [rbp-0x8]
  4067de:	movzx  eax,WORD PTR [rax+0xec]
  4067e5:	mov    WORD PTR [rdx+0x22],ax
  4067e9:	mov    rdx,QWORD PTR [rbp-0x8]
  4067ed:	movzx  eax,WORD PTR [rbp-0x14]
  4067f1:	mov    WORD PTR [rdx+0xec],ax
  4067f8:	mov    rax,QWORD PTR [rbp-0x8]
  4067fc:	mov    rdx,QWORD PTR [rax+0x30]
  406800:	mov    rax,QWORD PTR [rbp-0x8]
  406804:	movzx  eax,WORD PTR [rax+0x10c]
  40680b:	mov    WORD PTR [rdx+0x20],ax
  40680f:	mov    eax,DWORD PTR [rbp-0x18]
  406812:	mov    edx,eax
  406814:	mov    rax,QWORD PTR [rbp-0x8]
  406818:	mov    WORD PTR [rax+0x10c],dx
  40681f:	mov    rax,QWORD PTR [rbp-0x8]
  406823:	mov    rax,QWORD PTR [rax+0x30]
  406827:	mov    rdx,QWORD PTR [rbp-0x8]
  40682b:	mov    edx,DWORD PTR [rdx+0xf8]
  406831:	mov    DWORD PTR [rax+0x14],edx
  406834:	mov    rax,QWORD PTR [rbp-0x8]
  406838:	mov    rax,QWORD PTR [rax+0x30]
  40683c:	mov    rdx,QWORD PTR [rbp-0x8]
  406840:	mov    edx,DWORD PTR [rdx+0x100]
  406846:	mov    DWORD PTR [rax+0x1c],edx
  406849:	mov    rax,QWORD PTR [rbp-0x8]
  40684d:	mov    edx,DWORD PTR [rax+0xf0]
  406853:	mov    rax,QWORD PTR [rbp-0x8]
  406857:	mov    DWORD PTR [rax+0xf8],edx
  40685d:	mov    rax,QWORD PTR [rbp-0x8]
  406861:	mov    eax,DWORD PTR [rax+0xfc]
  406867:	lea    ecx,[rax+0x1]
  40686a:	mov    rdx,QWORD PTR [rbp-0x8]
  40686e:	mov    DWORD PTR [rdx+0xfc],ecx
  406874:	mov    rdx,QWORD PTR [rbp-0x8]
  406878:	mov    DWORD PTR [rdx+0x100],eax
  40687e:	mov    rax,QWORD PTR [rbp-0x8]
  406882:	mov    rax,QWORD PTR [rax+0x30]
  406886:	mov    rdx,QWORD PTR [rbp-0x8]
  40688a:	mov    edx,DWORD PTR [rdx+0x110]
  406890:	mov    DWORD PTR [rax+0x10],edx
  406893:	cmp    QWORD PTR [rbp-0x10],0x0
  406898:	je     4068a0 <flatcc_builder_start_buffer@@Base+0x122>
  40689a:	mov    rax,QWORD PTR [rbp-0x10]
  40689e:	jmp    4068a7 <flatcc_builder_start_buffer@@Base+0x129>
  4068a0:	mov    rax,0x40d1c0
  4068a7:	mov    rdx,QWORD PTR [rbp-0x8]
  4068ab:	add    rdx,0x110
  4068b2:	mov    eax,DWORD PTR [rax]
  4068b4:	mov    DWORD PTR [rdx],eax
  4068b6:	mov    rax,QWORD PTR [rbp-0x8]
  4068ba:	mov    rax,QWORD PTR [rax+0x30]
  4068be:	mov    WORD PTR [rax+0xe],0x1
  4068c4:	mov    eax,0x0
  4068c9:	leave  
  4068ca:	ret    

00000000004068cb <flatcc_builder_end_buffer@@Base>:
  4068cb:	endbr64 
  4068cf:	push   rbp
  4068d0:	mov    rbp,rsp
  4068d3:	sub    rsp,0x20
  4068d7:	mov    QWORD PTR [rbp-0x18],rdi
  4068db:	mov    DWORD PTR [rbp-0x1c],esi
  4068de:	mov    rax,QWORD PTR [rbp-0x18]
  4068e2:	movzx  eax,WORD PTR [rax+0x10c]
  4068e9:	movzx  eax,ax
  4068ec:	and    eax,0x2
  4068ef:	mov    DWORD PTR [rbp-0x8],eax
  4068f2:	mov    rax,QWORD PTR [rbp-0x18]
  4068f6:	mov    eax,DWORD PTR [rax+0x100]
  4068fc:	test   eax,eax
  4068fe:	setne  al
  406901:	movzx  eax,al
  406904:	or     DWORD PTR [rbp-0x8],eax
  406907:	mov    rax,QWORD PTR [rbp-0x18]
  40690b:	mov    rax,QWORD PTR [rax+0x30]
  40690f:	movzx  eax,WORD PTR [rax+0xe]
  406913:	cmp    ax,0x1
  406917:	je     406938 <flatcc_builder_end_buffer@@Base+0x6d>
  406919:	lea    rcx,[rip+0x7000]        # 40d920 <flatcc_builder_padding_base@@Base+0x760>
  406920:	mov    edx,0x346
  406925:	lea    rsi,[rip+0x6a94]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40692c:	lea    rdi,[rip+0x6b5d]        # 40d490 <flatcc_builder_padding_base@@Base+0x2d0>
  406933:	call   403130 <__assert_fail@plt>
  406938:	mov    rax,QWORD PTR [rbp-0x18]
  40693c:	movzx  eax,WORD PTR [rax+0xec]
  406943:	movzx  edx,ax
  406946:	mov    rax,QWORD PTR [rbp-0x18]
  40694a:	mov    esi,edx
  40694c:	mov    rdi,rax
  40694f:	call   40557c <flatcc_builder_clear@@Base+0x99>
  406954:	mov    rax,QWORD PTR [rbp-0x18]
  406958:	movzx  eax,WORD PTR [rax+0xe8]
  40695f:	movzx  edi,ax
  406962:	mov    rax,QWORD PTR [rbp-0x18]
  406966:	movzx  eax,WORD PTR [rax+0xec]
  40696d:	movzx  edx,ax
  406970:	mov    rax,QWORD PTR [rbp-0x18]
  406974:	lea    rsi,[rax+0x110]
  40697b:	mov    r8d,DWORD PTR [rbp-0x8]
  40697f:	mov    ecx,DWORD PTR [rbp-0x1c]
  406982:	mov    rax,QWORD PTR [rbp-0x18]
  406986:	mov    r9d,r8d
  406989:	mov    r8d,edi
  40698c:	mov    rdi,rax
  40698f:	call   40617b <flatcc_builder_create_buffer@@Base>
  406994:	mov    DWORD PTR [rbp-0x4],eax
  406997:	cmp    DWORD PTR [rbp-0x4],0x0
  40699b:	jne    4069a4 <flatcc_builder_end_buffer@@Base+0xd9>
  40699d:	mov    eax,0x0
  4069a2:	jmp    406a09 <flatcc_builder_end_buffer@@Base+0x13e>
  4069a4:	mov    rax,QWORD PTR [rbp-0x18]
  4069a8:	mov    rax,QWORD PTR [rax+0x30]
  4069ac:	mov    edx,DWORD PTR [rax+0x14]
  4069af:	mov    rax,QWORD PTR [rbp-0x18]
  4069b3:	mov    DWORD PTR [rax+0xf8],edx
  4069b9:	mov    rax,QWORD PTR [rbp-0x18]
  4069bd:	mov    rax,QWORD PTR [rax+0x30]
  4069c1:	mov    edx,DWORD PTR [rax+0x1c]
  4069c4:	mov    rax,QWORD PTR [rbp-0x18]
  4069c8:	mov    DWORD PTR [rax+0x100],edx
  4069ce:	mov    rax,QWORD PTR [rbp-0x18]
  4069d2:	mov    rax,QWORD PTR [rax+0x30]
  4069d6:	mov    edx,DWORD PTR [rax+0x10]
  4069d9:	mov    rax,QWORD PTR [rbp-0x18]
  4069dd:	mov    DWORD PTR [rax+0x110],edx
  4069e3:	mov    rax,QWORD PTR [rbp-0x18]
  4069e7:	mov    rax,QWORD PTR [rax+0x30]
  4069eb:	movzx  eax,WORD PTR [rax+0x20]
  4069ef:	mov    rdx,QWORD PTR [rbp-0x18]
  4069f3:	mov    WORD PTR [rdx+0x10c],ax
  4069fa:	mov    rax,QWORD PTR [rbp-0x18]
  4069fe:	mov    rdi,rax
  406a01:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  406a06:	mov    eax,DWORD PTR [rbp-0x4]
  406a09:	leave  
  406a0a:	ret    

0000000000406a0b <flatcc_builder_start_struct@@Base>:
  406a0b:	endbr64 
  406a0f:	push   rbp
  406a10:	mov    rbp,rsp
  406a13:	sub    rsp,0x20
  406a17:	mov    QWORD PTR [rbp-0x8],rdi
  406a1b:	mov    QWORD PTR [rbp-0x10],rsi
  406a1f:	mov    eax,edx
  406a21:	mov    WORD PTR [rbp-0x14],ax
  406a25:	movzx  edx,WORD PTR [rbp-0x14]
  406a29:	mov    rax,QWORD PTR [rbp-0x8]
  406a2d:	mov    esi,edx
  406a2f:	mov    rdi,rax
  406a32:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  406a37:	test   eax,eax
  406a39:	je     406a42 <flatcc_builder_start_struct@@Base+0x37>
  406a3b:	mov    eax,0x0
  406a40:	jmp    406a75 <flatcc_builder_start_struct@@Base+0x6a>
  406a42:	mov    rax,QWORD PTR [rbp-0x8]
  406a46:	mov    rax,QWORD PTR [rax+0x30]
  406a4a:	mov    WORD PTR [rax+0xe],0x2
  406a50:	mov    rax,QWORD PTR [rbp-0x8]
  406a54:	mov    esi,0xfffffffc
  406a59:	mov    rdi,rax
  406a5c:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  406a61:	mov    rax,QWORD PTR [rbp-0x10]
  406a65:	mov    edx,eax
  406a67:	mov    rax,QWORD PTR [rbp-0x8]
  406a6b:	mov    esi,edx
  406a6d:	mov    rdi,rax
  406a70:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  406a75:	leave  
  406a76:	ret    

0000000000406a77 <flatcc_builder_struct_edit@@Base>:
  406a77:	endbr64 
  406a7b:	push   rbp
  406a7c:	mov    rbp,rsp
  406a7f:	mov    QWORD PTR [rbp-0x8],rdi
  406a83:	mov    rax,QWORD PTR [rbp-0x8]
  406a87:	mov    rax,QWORD PTR [rax+0x18]
  406a8b:	pop    rbp
  406a8c:	ret    

0000000000406a8d <flatcc_builder_end_struct@@Base>:
  406a8d:	endbr64 
  406a91:	push   rbp
  406a92:	mov    rbp,rsp
  406a95:	sub    rsp,0x20
  406a99:	mov    QWORD PTR [rbp-0x18],rdi
  406a9d:	mov    rax,QWORD PTR [rbp-0x18]
  406aa1:	mov    rax,QWORD PTR [rax+0x30]
  406aa5:	movzx  eax,WORD PTR [rax+0xe]
  406aa9:	cmp    ax,0x2
  406aad:	je     406ace <flatcc_builder_end_struct@@Base+0x41>
  406aaf:	lea    rcx,[rip+0x6e8a]        # 40d940 <flatcc_builder_padding_base@@Base+0x780>
  406ab6:	mov    edx,0x368
  406abb:	lea    rsi,[rip+0x68fe]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406ac2:	lea    rdi,[rip+0x69f7]        # 40d4c0 <flatcc_builder_padding_base@@Base+0x300>
  406ac9:	call   403130 <__assert_fail@plt>
  406ace:	mov    rax,QWORD PTR [rbp-0x18]
  406ad2:	movzx  eax,WORD PTR [rax+0xea]
  406ad9:	movzx  edx,ax
  406adc:	mov    rax,QWORD PTR [rbp-0x18]
  406ae0:	mov    eax,DWORD PTR [rax+0x20]
  406ae3:	mov    edi,eax
  406ae5:	mov    rax,QWORD PTR [rbp-0x18]
  406ae9:	mov    rsi,QWORD PTR [rax+0x18]
  406aed:	mov    rax,QWORD PTR [rbp-0x18]
  406af1:	mov    ecx,edx
  406af3:	mov    rdx,rdi
  406af6:	mov    rdi,rax
  406af9:	call   4065b4 <flatcc_builder_create_struct@@Base>
  406afe:	mov    DWORD PTR [rbp-0x4],eax
  406b01:	cmp    DWORD PTR [rbp-0x4],0x0
  406b05:	jne    406b0e <flatcc_builder_end_struct@@Base+0x81>
  406b07:	mov    eax,0x0
  406b0c:	jmp    406b1d <flatcc_builder_end_struct@@Base+0x90>
  406b0e:	mov    rax,QWORD PTR [rbp-0x18]
  406b12:	mov    rdi,rax
  406b15:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  406b1a:	mov    eax,DWORD PTR [rbp-0x4]
  406b1d:	leave  
  406b1e:	ret    
  406b1f:	push   rbp
  406b20:	mov    rbp,rsp
  406b23:	sub    rsp,0x20
  406b27:	mov    QWORD PTR [rbp-0x18],rdi
  406b2b:	mov    DWORD PTR [rbp-0x1c],esi
  406b2e:	mov    DWORD PTR [rbp-0x20],edx
  406b31:	mov    rax,QWORD PTR [rbp-0x18]
  406b35:	mov    rax,QWORD PTR [rax+0x30]
  406b39:	mov    eax,DWORD PTR [rax+0x14]
  406b3c:	mov    DWORD PTR [rbp-0x8],eax
  406b3f:	mov    edx,DWORD PTR [rbp-0x8]
  406b42:	mov    eax,DWORD PTR [rbp-0x1c]
  406b45:	add    eax,edx
  406b47:	mov    DWORD PTR [rbp-0x4],eax
  406b4a:	mov    eax,DWORD PTR [rbp-0x8]
  406b4d:	cmp    eax,DWORD PTR [rbp-0x4]
  406b50:	ja     406b5a <flatcc_builder_end_struct@@Base+0xcd>
  406b52:	mov    eax,DWORD PTR [rbp-0x4]
  406b55:	cmp    eax,DWORD PTR [rbp-0x20]
  406b58:	jbe    406b90 <flatcc_builder_end_struct@@Base+0x103>
  406b5a:	mov    eax,DWORD PTR [rbp-0x8]
  406b5d:	cmp    eax,DWORD PTR [rbp-0x4]
  406b60:	ja     406b6a <flatcc_builder_end_struct@@Base+0xdd>
  406b62:	mov    eax,DWORD PTR [rbp-0x4]
  406b65:	cmp    eax,DWORD PTR [rbp-0x20]
  406b68:	jbe    406b89 <flatcc_builder_end_struct@@Base+0xfc>
  406b6a:	lea    rcx,[rip+0x6def]        # 40d960 <flatcc_builder_padding_base@@Base+0x7a0>
  406b71:	mov    edx,0x37c
  406b76:	lea    rsi,[rip+0x6843]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406b7d:	lea    rdi,[rip+0x6968]        # 40d4ec <flatcc_builder_padding_base@@Base+0x32c>
  406b84:	call   403130 <__assert_fail@plt>
  406b89:	mov    eax,0xffffffff
  406b8e:	jmp    406ba3 <flatcc_builder_end_struct@@Base+0x116>
  406b90:	mov    rax,QWORD PTR [rbp-0x18]
  406b94:	mov    rax,QWORD PTR [rax+0x30]
  406b98:	mov    edx,DWORD PTR [rbp-0x4]
  406b9b:	mov    DWORD PTR [rax+0x14],edx
  406b9e:	mov    eax,0x0
  406ba3:	leave  
  406ba4:	ret    

0000000000406ba5 <flatcc_builder_extend_vector@@Base>:
  406ba5:	endbr64 
  406ba9:	push   rbp
  406baa:	mov    rbp,rsp
  406bad:	sub    rsp,0x10
  406bb1:	mov    QWORD PTR [rbp-0x8],rdi
  406bb5:	mov    QWORD PTR [rbp-0x10],rsi
  406bb9:	mov    rax,QWORD PTR [rbp-0x8]
  406bbd:	mov    rax,QWORD PTR [rax+0x30]
  406bc1:	mov    edx,DWORD PTR [rax+0x18]
  406bc4:	mov    rax,QWORD PTR [rbp-0x10]
  406bc8:	mov    ecx,eax
  406bca:	mov    rax,QWORD PTR [rbp-0x8]
  406bce:	mov    esi,ecx
  406bd0:	mov    rdi,rax
  406bd3:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  406bd8:	test   eax,eax
  406bda:	je     406be3 <flatcc_builder_extend_vector@@Base+0x3e>
  406bdc:	mov    eax,0x0
  406be1:	jmp    406c03 <flatcc_builder_extend_vector@@Base+0x5e>
  406be3:	mov    rax,QWORD PTR [rbp-0x8]
  406be7:	mov    rax,QWORD PTR [rax+0x30]
  406beb:	mov    eax,DWORD PTR [rax+0x10]
  406bee:	mov    rdx,QWORD PTR [rbp-0x10]
  406bf2:	imul   edx,eax
  406bf5:	mov    rax,QWORD PTR [rbp-0x8]
  406bf9:	mov    esi,edx
  406bfb:	mov    rdi,rax
  406bfe:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  406c03:	leave  
  406c04:	ret    

0000000000406c05 <flatcc_builder_vector_push@@Base>:
  406c05:	endbr64 
  406c09:	push   rbp
  406c0a:	mov    rbp,rsp
  406c0d:	sub    rsp,0x10
  406c11:	mov    QWORD PTR [rbp-0x8],rdi
  406c15:	mov    QWORD PTR [rbp-0x10],rsi
  406c19:	mov    rax,QWORD PTR [rbp-0x8]
  406c1d:	mov    rax,QWORD PTR [rax+0x30]
  406c21:	movzx  eax,WORD PTR [rax+0xe]
  406c25:	cmp    ax,0x4
  406c29:	je     406c4a <flatcc_builder_vector_push@@Base+0x45>
  406c2b:	lea    rcx,[rip+0x6d4e]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406c32:	mov    edx,0x38b
  406c37:	lea    rsi,[rip+0x6782]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406c3e:	lea    rdi,[rip+0x68c3]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406c45:	call   403130 <__assert_fail@plt>
  406c4a:	mov    rax,QWORD PTR [rbp-0x8]
  406c4e:	mov    rax,QWORD PTR [rax+0x30]
  406c52:	mov    edx,DWORD PTR [rax+0x14]
  406c55:	mov    rax,QWORD PTR [rbp-0x8]
  406c59:	mov    rax,QWORD PTR [rax+0x30]
  406c5d:	mov    eax,DWORD PTR [rax+0x18]
  406c60:	cmp    edx,eax
  406c62:	jbe    406ca4 <flatcc_builder_vector_push@@Base+0x9f>
  406c64:	mov    rax,QWORD PTR [rbp-0x8]
  406c68:	mov    rax,QWORD PTR [rax+0x30]
  406c6c:	mov    edx,DWORD PTR [rax+0x14]
  406c6f:	mov    rax,QWORD PTR [rbp-0x8]
  406c73:	mov    rax,QWORD PTR [rax+0x30]
  406c77:	mov    eax,DWORD PTR [rax+0x18]
  406c7a:	cmp    edx,eax
  406c7c:	jbe    406c9d <flatcc_builder_vector_push@@Base+0x98>
  406c7e:	lea    rcx,[rip+0x6cfb]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406c85:	mov    edx,0x38c
  406c8a:	lea    rsi,[rip+0x672f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406c91:	lea    rdi,[rip+0x68a0]        # 40d538 <flatcc_builder_padding_base@@Base+0x378>
  406c98:	call   403130 <__assert_fail@plt>
  406c9d:	mov    eax,0x0
  406ca2:	jmp    406cda <flatcc_builder_vector_push@@Base+0xd5>
  406ca4:	mov    rax,QWORD PTR [rbp-0x8]
  406ca8:	mov    rax,QWORD PTR [rax+0x30]
  406cac:	mov    edx,DWORD PTR [rax+0x14]
  406caf:	mov    rax,QWORD PTR [rbp-0x8]
  406cb3:	mov    rax,QWORD PTR [rax+0x30]
  406cb7:	inc    edx
  406cb9:	mov    DWORD PTR [rax+0x14],edx
  406cbc:	mov    rax,QWORD PTR [rbp-0x8]
  406cc0:	mov    rax,QWORD PTR [rax+0x30]
  406cc4:	mov    edx,DWORD PTR [rax+0x10]
  406cc7:	mov    rcx,QWORD PTR [rbp-0x10]
  406ccb:	mov    rax,QWORD PTR [rbp-0x8]
  406ccf:	mov    rsi,rcx
  406cd2:	mov    rdi,rax
  406cd5:	call   404c42 <flatcc_builder_default_alloc@@Base+0x332>
  406cda:	leave  
  406cdb:	ret    

0000000000406cdc <flatcc_builder_append_vector@@Base>:
  406cdc:	endbr64 
  406ce0:	push   rbp
  406ce1:	mov    rbp,rsp
  406ce4:	sub    rsp,0x20
  406ce8:	mov    QWORD PTR [rbp-0x8],rdi
  406cec:	mov    QWORD PTR [rbp-0x10],rsi
  406cf0:	mov    QWORD PTR [rbp-0x18],rdx
  406cf4:	mov    rax,QWORD PTR [rbp-0x8]
  406cf8:	mov    rax,QWORD PTR [rax+0x30]
  406cfc:	movzx  eax,WORD PTR [rax+0xe]
  406d00:	cmp    ax,0x4
  406d04:	je     406d25 <flatcc_builder_append_vector@@Base+0x49>
  406d06:	lea    rcx,[rip+0x6c93]        # 40d9a0 <flatcc_builder_padding_base@@Base+0x7e0>
  406d0d:	mov    edx,0x393
  406d12:	lea    rsi,[rip+0x66a7]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406d19:	lea    rdi,[rip+0x67e8]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406d20:	call   403130 <__assert_fail@plt>
  406d25:	mov    rax,QWORD PTR [rbp-0x8]
  406d29:	mov    rax,QWORD PTR [rax+0x30]
  406d2d:	mov    edx,DWORD PTR [rax+0x18]
  406d30:	mov    rax,QWORD PTR [rbp-0x18]
  406d34:	mov    ecx,eax
  406d36:	mov    rax,QWORD PTR [rbp-0x8]
  406d3a:	mov    esi,ecx
  406d3c:	mov    rdi,rax
  406d3f:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  406d44:	test   eax,eax
  406d46:	je     406d4f <flatcc_builder_append_vector@@Base+0x73>
  406d48:	mov    eax,0x0
  406d4d:	jmp    406d74 <flatcc_builder_append_vector@@Base+0x98>
  406d4f:	mov    rax,QWORD PTR [rbp-0x8]
  406d53:	mov    rax,QWORD PTR [rax+0x30]
  406d57:	mov    eax,DWORD PTR [rax+0x10]
  406d5a:	mov    rdx,QWORD PTR [rbp-0x18]
  406d5e:	imul   edx,eax
  406d61:	mov    rcx,QWORD PTR [rbp-0x10]
  406d65:	mov    rax,QWORD PTR [rbp-0x8]
  406d69:	mov    rsi,rcx
  406d6c:	mov    rdi,rax
  406d6f:	call   404c42 <flatcc_builder_default_alloc@@Base+0x332>
  406d74:	leave  
  406d75:	ret    

0000000000406d76 <flatcc_builder_extend_offset_vector@@Base>:
  406d76:	endbr64 
  406d7a:	push   rbp
  406d7b:	mov    rbp,rsp
  406d7e:	sub    rsp,0x10
  406d82:	mov    QWORD PTR [rbp-0x8],rdi
  406d86:	mov    QWORD PTR [rbp-0x10],rsi
  406d8a:	mov    rax,QWORD PTR [rbp-0x10]
  406d8e:	mov    ecx,eax
  406d90:	mov    rax,QWORD PTR [rbp-0x8]
  406d94:	mov    edx,0x3fffffff
  406d99:	mov    esi,ecx
  406d9b:	mov    rdi,rax
  406d9e:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  406da3:	test   eax,eax
  406da5:	je     406dae <flatcc_builder_extend_offset_vector@@Base+0x38>
  406da7:	mov    eax,0x0
  406dac:	jmp    406dc7 <flatcc_builder_extend_offset_vector@@Base+0x51>
  406dae:	mov    rax,QWORD PTR [rbp-0x10]
  406db2:	lea    edx,[rax*4+0x0]
  406db9:	mov    rax,QWORD PTR [rbp-0x8]
  406dbd:	mov    esi,edx
  406dbf:	mov    rdi,rax
  406dc2:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  406dc7:	leave  
  406dc8:	ret    

0000000000406dc9 <flatcc_builder_offset_vector_push@@Base>:
  406dc9:	endbr64 
  406dcd:	push   rbp
  406dce:	mov    rbp,rsp
  406dd1:	sub    rsp,0x20
  406dd5:	mov    QWORD PTR [rbp-0x18],rdi
  406dd9:	mov    DWORD PTR [rbp-0x1c],esi
  406ddc:	mov    rax,QWORD PTR [rbp-0x18]
  406de0:	mov    rax,QWORD PTR [rax+0x30]
  406de4:	movzx  eax,WORD PTR [rax+0xe]
  406de8:	cmp    ax,0x5
  406dec:	je     406e0d <flatcc_builder_offset_vector_push@@Base+0x44>
  406dee:	lea    rcx,[rip+0x6bcb]        # 40d9c0 <flatcc_builder_padding_base@@Base+0x800>
  406df5:	mov    edx,0x3a6
  406dfa:	lea    rsi,[rip+0x65bf]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406e01:	lea    rdi,[rip+0x6770]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406e08:	call   403130 <__assert_fail@plt>
  406e0d:	mov    rax,QWORD PTR [rbp-0x18]
  406e11:	mov    rax,QWORD PTR [rax+0x30]
  406e15:	mov    eax,DWORD PTR [rax+0x14]
  406e18:	cmp    eax,0x3fffffff
  406e1d:	jne    406e26 <flatcc_builder_offset_vector_push@@Base+0x5d>
  406e1f:	mov    eax,0x0
  406e24:	jmp    406e6e <flatcc_builder_offset_vector_push@@Base+0xa5>
  406e26:	mov    rax,QWORD PTR [rbp-0x18]
  406e2a:	mov    rax,QWORD PTR [rax+0x30]
  406e2e:	mov    edx,DWORD PTR [rax+0x14]
  406e31:	mov    rax,QWORD PTR [rbp-0x18]
  406e35:	mov    rax,QWORD PTR [rax+0x30]
  406e39:	inc    edx
  406e3b:	mov    DWORD PTR [rax+0x14],edx
  406e3e:	mov    rax,QWORD PTR [rbp-0x18]
  406e42:	mov    esi,0x4
  406e47:	mov    rdi,rax
  406e4a:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  406e4f:	mov    QWORD PTR [rbp-0x8],rax
  406e53:	cmp    QWORD PTR [rbp-0x8],0x0
  406e58:	jne    406e61 <flatcc_builder_offset_vector_push@@Base+0x98>
  406e5a:	mov    eax,0x0
  406e5f:	jmp    406e6e <flatcc_builder_offset_vector_push@@Base+0xa5>
  406e61:	mov    rax,QWORD PTR [rbp-0x8]
  406e65:	mov    edx,DWORD PTR [rbp-0x1c]
  406e68:	mov    DWORD PTR [rax],edx
  406e6a:	mov    rax,QWORD PTR [rbp-0x8]
  406e6e:	leave  
  406e6f:	ret    

0000000000406e70 <flatcc_builder_append_offset_vector@@Base>:
  406e70:	endbr64 
  406e74:	push   rbp
  406e75:	mov    rbp,rsp
  406e78:	sub    rsp,0x20
  406e7c:	mov    QWORD PTR [rbp-0x8],rdi
  406e80:	mov    QWORD PTR [rbp-0x10],rsi
  406e84:	mov    QWORD PTR [rbp-0x18],rdx
  406e88:	mov    rax,QWORD PTR [rbp-0x8]
  406e8c:	mov    rax,QWORD PTR [rax+0x30]
  406e90:	movzx  eax,WORD PTR [rax+0xe]
  406e94:	cmp    ax,0x5
  406e98:	je     406eb9 <flatcc_builder_append_offset_vector@@Base+0x49>
  406e9a:	lea    rcx,[rip+0x6b5f]        # 40da00 <flatcc_builder_padding_base@@Base+0x840>
  406ea1:	mov    edx,0x3b4
  406ea6:	lea    rsi,[rip+0x6513]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406ead:	lea    rdi,[rip+0x66c4]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406eb4:	call   403130 <__assert_fail@plt>
  406eb9:	mov    rax,QWORD PTR [rbp-0x18]
  406ebd:	mov    ecx,eax
  406ebf:	mov    rax,QWORD PTR [rbp-0x8]
  406ec3:	mov    edx,0x3fffffff
  406ec8:	mov    esi,ecx
  406eca:	mov    rdi,rax
  406ecd:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  406ed2:	test   eax,eax
  406ed4:	je     406edd <flatcc_builder_append_offset_vector@@Base+0x6d>
  406ed6:	mov    eax,0x0
  406edb:	jmp    406efb <flatcc_builder_append_offset_vector@@Base+0x8b>
  406edd:	mov    rax,QWORD PTR [rbp-0x18]
  406ee1:	lea    edx,[rax*4+0x0]
  406ee8:	mov    rcx,QWORD PTR [rbp-0x10]
  406eec:	mov    rax,QWORD PTR [rbp-0x8]
  406ef0:	mov    rsi,rcx
  406ef3:	mov    rdi,rax
  406ef6:	call   404c42 <flatcc_builder_default_alloc@@Base+0x332>
  406efb:	leave  
  406efc:	ret    

0000000000406efd <flatcc_builder_extend_string@@Base>:
  406efd:	endbr64 
  406f01:	push   rbp
  406f02:	mov    rbp,rsp
  406f05:	sub    rsp,0x10
  406f09:	mov    QWORD PTR [rbp-0x8],rdi
  406f0d:	mov    QWORD PTR [rbp-0x10],rsi
  406f11:	mov    rax,QWORD PTR [rbp-0x8]
  406f15:	mov    rax,QWORD PTR [rax+0x30]
  406f19:	movzx  eax,WORD PTR [rax+0xe]
  406f1d:	cmp    ax,0x6
  406f21:	je     406f42 <flatcc_builder_extend_string@@Base+0x45>
  406f23:	lea    rcx,[rip+0x6b06]        # 40da30 <flatcc_builder_padding_base@@Base+0x870>
  406f2a:	mov    edx,0x3bd
  406f2f:	lea    rsi,[rip+0x648a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406f36:	lea    rdi,[rip+0x6673]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406f3d:	call   403130 <__assert_fail@plt>
  406f42:	mov    rax,QWORD PTR [rbp-0x10]
  406f46:	mov    ecx,eax
  406f48:	mov    rax,QWORD PTR [rbp-0x8]
  406f4c:	mov    edx,0xffffffff
  406f51:	mov    esi,ecx
  406f53:	mov    rdi,rax
  406f56:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  406f5b:	test   eax,eax
  406f5d:	je     406f66 <flatcc_builder_extend_string@@Base+0x69>
  406f5f:	mov    eax,0x0
  406f64:	jmp    406f7a <flatcc_builder_extend_string@@Base+0x7d>
  406f66:	mov    rax,QWORD PTR [rbp-0x10]
  406f6a:	mov    edx,eax
  406f6c:	mov    rax,QWORD PTR [rbp-0x8]
  406f70:	mov    esi,edx
  406f72:	mov    rdi,rax
  406f75:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  406f7a:	leave  
  406f7b:	ret    

0000000000406f7c <flatcc_builder_append_string@@Base>:
  406f7c:	endbr64 
  406f80:	push   rbp
  406f81:	mov    rbp,rsp
  406f84:	sub    rsp,0x20
  406f88:	mov    QWORD PTR [rbp-0x8],rdi
  406f8c:	mov    QWORD PTR [rbp-0x10],rsi
  406f90:	mov    QWORD PTR [rbp-0x18],rdx
  406f94:	mov    rax,QWORD PTR [rbp-0x8]
  406f98:	mov    rax,QWORD PTR [rax+0x30]
  406f9c:	movzx  eax,WORD PTR [rax+0xe]
  406fa0:	cmp    ax,0x6
  406fa4:	je     406fc5 <flatcc_builder_append_string@@Base+0x49>
  406fa6:	lea    rcx,[rip+0x6aa3]        # 40da50 <flatcc_builder_padding_base@@Base+0x890>
  406fad:	mov    edx,0x3c6
  406fb2:	lea    rsi,[rip+0x6407]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406fb9:	lea    rdi,[rip+0x65f0]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406fc0:	call   403130 <__assert_fail@plt>
  406fc5:	mov    rax,QWORD PTR [rbp-0x18]
  406fc9:	mov    ecx,eax
  406fcb:	mov    rax,QWORD PTR [rbp-0x8]
  406fcf:	mov    edx,0xffffffff
  406fd4:	mov    esi,ecx
  406fd6:	mov    rdi,rax
  406fd9:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  406fde:	test   eax,eax
  406fe0:	je     406fe9 <flatcc_builder_append_string@@Base+0x6d>
  406fe2:	mov    eax,0x0
  406fe7:	jmp    407002 <flatcc_builder_append_string@@Base+0x86>
  406fe9:	mov    rax,QWORD PTR [rbp-0x18]
  406fed:	mov    edx,eax
  406fef:	mov    rcx,QWORD PTR [rbp-0x10]
  406ff3:	mov    rax,QWORD PTR [rbp-0x8]
  406ff7:	mov    rsi,rcx
  406ffa:	mov    rdi,rax
  406ffd:	call   404c42 <flatcc_builder_default_alloc@@Base+0x332>
  407002:	leave  
  407003:	ret    

0000000000407004 <flatcc_builder_append_string_str@@Base>:
  407004:	endbr64 
  407008:	push   rbp
  407009:	mov    rbp,rsp
  40700c:	sub    rsp,0x10
  407010:	mov    QWORD PTR [rbp-0x8],rdi
  407014:	mov    QWORD PTR [rbp-0x10],rsi
  407018:	mov    rax,QWORD PTR [rbp-0x10]
  40701c:	mov    rdi,rax
  40701f:	call   403110 <strlen@plt>
  407024:	mov    rdx,rax
  407027:	mov    rcx,QWORD PTR [rbp-0x10]
  40702b:	mov    rax,QWORD PTR [rbp-0x8]
  40702f:	mov    rsi,rcx
  407032:	mov    rdi,rax
  407035:	call   406f7c <flatcc_builder_append_string@@Base>
  40703a:	leave  
  40703b:	ret    

000000000040703c <flatcc_builder_append_string_strn@@Base>:
  40703c:	endbr64 
  407040:	push   rbp
  407041:	mov    rbp,rsp
  407044:	sub    rsp,0x20
  407048:	mov    QWORD PTR [rbp-0x8],rdi
  40704c:	mov    QWORD PTR [rbp-0x10],rsi
  407050:	mov    QWORD PTR [rbp-0x18],rdx
  407054:	mov    rdx,QWORD PTR [rbp-0x18]
  407058:	mov    rax,QWORD PTR [rbp-0x10]
  40705c:	mov    rsi,rdx
  40705f:	mov    rdi,rax
  407062:	call   4048d0 <main@@Base+0x1fa>
  407067:	mov    rdx,rax
  40706a:	mov    rcx,QWORD PTR [rbp-0x10]
  40706e:	mov    rax,QWORD PTR [rbp-0x8]
  407072:	mov    rsi,rcx
  407075:	mov    rdi,rax
  407078:	call   406f7c <flatcc_builder_append_string@@Base>
  40707d:	leave  
  40707e:	ret    

000000000040707f <flatcc_builder_truncate_vector@@Base>:
  40707f:	endbr64 
  407083:	push   rbp
  407084:	mov    rbp,rsp
  407087:	sub    rsp,0x10
  40708b:	mov    QWORD PTR [rbp-0x8],rdi
  40708f:	mov    QWORD PTR [rbp-0x10],rsi
  407093:	mov    rax,QWORD PTR [rbp-0x8]
  407097:	mov    rax,QWORD PTR [rax+0x30]
  40709b:	movzx  eax,WORD PTR [rax+0xe]
  40709f:	cmp    ax,0x4
  4070a3:	je     4070c4 <flatcc_builder_truncate_vector@@Base+0x45>
  4070a5:	lea    rcx,[rip+0x69c4]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  4070ac:	mov    edx,0x3d9
  4070b1:	lea    rsi,[rip+0x6308]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4070b8:	lea    rdi,[rip+0x6449]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  4070bf:	call   403130 <__assert_fail@plt>
  4070c4:	mov    rax,QWORD PTR [rbp-0x8]
  4070c8:	mov    rax,QWORD PTR [rax+0x30]
  4070cc:	mov    eax,DWORD PTR [rax+0x14]
  4070cf:	mov    eax,eax
  4070d1:	cmp    QWORD PTR [rbp-0x10],rax
  4070d5:	jbe    407110 <flatcc_builder_truncate_vector@@Base+0x91>
  4070d7:	mov    rax,QWORD PTR [rbp-0x8]
  4070db:	mov    rax,QWORD PTR [rax+0x30]
  4070df:	mov    eax,DWORD PTR [rax+0x14]
  4070e2:	mov    eax,eax
  4070e4:	cmp    QWORD PTR [rbp-0x10],rax
  4070e8:	jbe    407109 <flatcc_builder_truncate_vector@@Base+0x8a>
  4070ea:	lea    rcx,[rip+0x697f]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  4070f1:	mov    edx,0x3da
  4070f6:	lea    rsi,[rip+0x62c3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4070fd:	lea    rdi,[rip+0x64dc]        # 40d5e0 <flatcc_builder_padding_base@@Base+0x420>
  407104:	call   403130 <__assert_fail@plt>
  407109:	mov    eax,0xffffffff
  40710e:	jmp    407153 <flatcc_builder_truncate_vector@@Base+0xd4>
  407110:	mov    rax,QWORD PTR [rbp-0x8]
  407114:	mov    rax,QWORD PTR [rax+0x30]
  407118:	mov    edx,DWORD PTR [rax+0x14]
  40711b:	mov    rax,QWORD PTR [rbp-0x10]
  40711f:	mov    ecx,eax
  407121:	mov    rax,QWORD PTR [rbp-0x8]
  407125:	mov    rax,QWORD PTR [rax+0x30]
  407129:	sub    edx,ecx
  40712b:	mov    DWORD PTR [rax+0x14],edx
  40712e:	mov    rax,QWORD PTR [rbp-0x8]
  407132:	mov    rax,QWORD PTR [rax+0x30]
  407136:	mov    eax,DWORD PTR [rax+0x10]
  407139:	mov    rdx,QWORD PTR [rbp-0x10]
  40713d:	imul   edx,eax
  407140:	mov    rax,QWORD PTR [rbp-0x8]
  407144:	mov    esi,edx
  407146:	mov    rdi,rax
  407149:	call   404bf6 <flatcc_builder_default_alloc@@Base+0x2e6>
  40714e:	mov    eax,0x0
  407153:	leave  
  407154:	ret    

0000000000407155 <flatcc_builder_truncate_offset_vector@@Base>:
  407155:	endbr64 
  407159:	push   rbp
  40715a:	mov    rbp,rsp
  40715d:	sub    rsp,0x10
  407161:	mov    QWORD PTR [rbp-0x8],rdi
  407165:	mov    QWORD PTR [rbp-0x10],rsi
  407169:	mov    rax,QWORD PTR [rbp-0x8]
  40716d:	mov    rax,QWORD PTR [rax+0x30]
  407171:	movzx  eax,WORD PTR [rax+0xe]
  407175:	cmp    ax,0x5
  407179:	je     40719a <flatcc_builder_truncate_offset_vector@@Base+0x45>
  40717b:	lea    rcx,[rip+0x691e]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  407182:	mov    edx,0x3e2
  407187:	lea    rsi,[rip+0x6232]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40718e:	lea    rdi,[rip+0x63e3]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  407195:	call   403130 <__assert_fail@plt>
  40719a:	mov    rax,QWORD PTR [rbp-0x8]
  40719e:	mov    rax,QWORD PTR [rax+0x30]
  4071a2:	mov    eax,DWORD PTR [rax+0x14]
  4071a5:	mov    rdx,QWORD PTR [rbp-0x10]
  4071a9:	cmp    eax,edx
  4071ab:	jae    4071e6 <flatcc_builder_truncate_offset_vector@@Base+0x91>
  4071ad:	mov    rax,QWORD PTR [rbp-0x8]
  4071b1:	mov    rax,QWORD PTR [rax+0x30]
  4071b5:	mov    eax,DWORD PTR [rax+0x14]
  4071b8:	mov    rdx,QWORD PTR [rbp-0x10]
  4071bc:	cmp    eax,edx
  4071be:	jae    4071df <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  4071c0:	lea    rcx,[rip+0x68d9]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  4071c7:	mov    edx,0x3e3
  4071cc:	lea    rsi,[rip+0x61ed]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4071d3:	lea    rdi,[rip+0x642e]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  4071da:	call   403130 <__assert_fail@plt>
  4071df:	mov    eax,0xffffffff
  4071e4:	jmp    407229 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  4071e6:	mov    rax,QWORD PTR [rbp-0x8]
  4071ea:	mov    rax,QWORD PTR [rax+0x30]
  4071ee:	mov    edx,DWORD PTR [rax+0x14]
  4071f1:	mov    rax,QWORD PTR [rbp-0x10]
  4071f5:	mov    ecx,eax
  4071f7:	mov    rax,QWORD PTR [rbp-0x8]
  4071fb:	mov    rax,QWORD PTR [rax+0x30]
  4071ff:	sub    edx,ecx
  407201:	mov    DWORD PTR [rax+0x14],edx
  407204:	mov    rax,QWORD PTR [rbp-0x8]
  407208:	mov    rax,QWORD PTR [rax+0x30]
  40720c:	mov    eax,DWORD PTR [rax+0x10]
  40720f:	mov    rdx,QWORD PTR [rbp-0x10]
  407213:	imul   edx,eax
  407216:	mov    rax,QWORD PTR [rbp-0x8]
  40721a:	mov    esi,edx
  40721c:	mov    rdi,rax
  40721f:	call   404bf6 <flatcc_builder_default_alloc@@Base+0x2e6>
  407224:	mov    eax,0x0
  407229:	leave  
  40722a:	ret    

000000000040722b <flatcc_builder_truncate_string@@Base>:
  40722b:	endbr64 
  40722f:	push   rbp
  407230:	mov    rbp,rsp
  407233:	sub    rsp,0x10
  407237:	mov    QWORD PTR [rbp-0x8],rdi
  40723b:	mov    QWORD PTR [rbp-0x10],rsi
  40723f:	mov    rax,QWORD PTR [rbp-0x8]
  407243:	mov    rax,QWORD PTR [rax+0x30]
  407247:	movzx  eax,WORD PTR [rax+0xe]
  40724b:	cmp    ax,0x6
  40724f:	je     407270 <flatcc_builder_truncate_string@@Base+0x45>
  407251:	lea    rcx,[rip+0x6878]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  407258:	mov    edx,0x3eb
  40725d:	lea    rsi,[rip+0x615c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407264:	lea    rdi,[rip+0x6345]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  40726b:	call   403130 <__assert_fail@plt>
  407270:	mov    rax,QWORD PTR [rbp-0x8]
  407274:	mov    rax,QWORD PTR [rax+0x30]
  407278:	mov    eax,DWORD PTR [rax+0x14]
  40727b:	mov    eax,eax
  40727d:	cmp    QWORD PTR [rbp-0x10],rax
  407281:	jbe    4072bc <flatcc_builder_truncate_string@@Base+0x91>
  407283:	mov    rax,QWORD PTR [rbp-0x8]
  407287:	mov    rax,QWORD PTR [rax+0x30]
  40728b:	mov    eax,DWORD PTR [rax+0x14]
  40728e:	mov    eax,eax
  407290:	cmp    QWORD PTR [rbp-0x10],rax
  407294:	jbe    4072b5 <flatcc_builder_truncate_string@@Base+0x8a>
  407296:	lea    rcx,[rip+0x6833]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  40729d:	mov    edx,0x3ec
  4072a2:	lea    rsi,[rip+0x6117]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4072a9:	lea    rdi,[rip+0x6398]        # 40d648 <flatcc_builder_padding_base@@Base+0x488>
  4072b0:	call   403130 <__assert_fail@plt>
  4072b5:	mov    eax,0xffffffff
  4072ba:	jmp    4072f3 <flatcc_builder_truncate_string@@Base+0xc8>
  4072bc:	mov    rax,QWORD PTR [rbp-0x8]
  4072c0:	mov    rax,QWORD PTR [rax+0x30]
  4072c4:	mov    edx,DWORD PTR [rax+0x14]
  4072c7:	mov    rax,QWORD PTR [rbp-0x10]
  4072cb:	mov    ecx,eax
  4072cd:	mov    rax,QWORD PTR [rbp-0x8]
  4072d1:	mov    rax,QWORD PTR [rax+0x30]
  4072d5:	sub    edx,ecx
  4072d7:	mov    DWORD PTR [rax+0x14],edx
  4072da:	mov    rax,QWORD PTR [rbp-0x10]
  4072de:	mov    edx,eax
  4072e0:	mov    rax,QWORD PTR [rbp-0x8]
  4072e4:	mov    esi,edx
  4072e6:	mov    rdi,rax
  4072e9:	call   404bf6 <flatcc_builder_default_alloc@@Base+0x2e6>
  4072ee:	mov    eax,0x0
  4072f3:	leave  
  4072f4:	ret    

00000000004072f5 <flatcc_builder_start_vector@@Base>:
  4072f5:	endbr64 
  4072f9:	push   rbp
  4072fa:	mov    rbp,rsp
  4072fd:	sub    rsp,0x20
  407301:	mov    QWORD PTR [rbp-0x8],rdi
  407305:	mov    QWORD PTR [rbp-0x10],rsi
  407309:	mov    eax,edx
  40730b:	mov    QWORD PTR [rbp-0x20],rcx
  40730f:	mov    WORD PTR [rbp-0x14],ax
  407313:	lea    rax,[rbp-0x14]
  407317:	mov    esi,0x4
  40731c:	mov    rdi,rax
  40731f:	call   4055ad <flatcc_builder_clear@@Base+0xca>
  407324:	movzx  eax,WORD PTR [rbp-0x14]
  407328:	movzx  edx,ax
  40732b:	mov    rax,QWORD PTR [rbp-0x8]
  40732f:	mov    esi,edx
  407331:	mov    rdi,rax
  407334:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  407339:	test   eax,eax
  40733b:	je     407344 <flatcc_builder_start_vector@@Base+0x4f>
  40733d:	mov    eax,0xffffffff
  407342:	jmp    407395 <flatcc_builder_start_vector@@Base+0xa0>
  407344:	mov    rax,QWORD PTR [rbp-0x8]
  407348:	mov    rax,QWORD PTR [rax+0x30]
  40734c:	mov    rdx,QWORD PTR [rbp-0x10]
  407350:	mov    DWORD PTR [rax+0x10],edx
  407353:	mov    rax,QWORD PTR [rbp-0x8]
  407357:	mov    rax,QWORD PTR [rax+0x30]
  40735b:	mov    DWORD PTR [rax+0x14],0x0
  407362:	mov    rax,QWORD PTR [rbp-0x8]
  407366:	mov    rax,QWORD PTR [rax+0x30]
  40736a:	mov    rdx,QWORD PTR [rbp-0x20]
  40736e:	mov    DWORD PTR [rax+0x18],edx
  407371:	mov    rax,QWORD PTR [rbp-0x8]
  407375:	mov    rax,QWORD PTR [rax+0x30]
  407379:	mov    WORD PTR [rax+0xe],0x4
  40737f:	mov    rax,QWORD PTR [rbp-0x8]
  407383:	mov    esi,0xfffffffc
  407388:	mov    rdi,rax
  40738b:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  407390:	mov    eax,0x0
  407395:	leave  
  407396:	ret    

0000000000407397 <flatcc_builder_start_offset_vector@@Base>:
  407397:	endbr64 
  40739b:	push   rbp
  40739c:	mov    rbp,rsp
  40739f:	sub    rsp,0x10
  4073a3:	mov    QWORD PTR [rbp-0x8],rdi
  4073a7:	mov    rax,QWORD PTR [rbp-0x8]
  4073ab:	mov    esi,0x4
  4073b0:	mov    rdi,rax
  4073b3:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4073b8:	test   eax,eax
  4073ba:	je     4073c3 <flatcc_builder_start_offset_vector@@Base+0x2c>
  4073bc:	mov    eax,0xffffffff
  4073c1:	jmp    407405 <flatcc_builder_start_offset_vector@@Base+0x6e>
  4073c3:	mov    rax,QWORD PTR [rbp-0x8]
  4073c7:	mov    rax,QWORD PTR [rax+0x30]
  4073cb:	mov    DWORD PTR [rax+0x10],0x4
  4073d2:	mov    rax,QWORD PTR [rbp-0x8]
  4073d6:	mov    rax,QWORD PTR [rax+0x30]
  4073da:	mov    DWORD PTR [rax+0x14],0x0
  4073e1:	mov    rax,QWORD PTR [rbp-0x8]
  4073e5:	mov    rax,QWORD PTR [rax+0x30]
  4073e9:	mov    WORD PTR [rax+0xe],0x5
  4073ef:	mov    rax,QWORD PTR [rbp-0x8]
  4073f3:	mov    esi,0xfffffffc
  4073f8:	mov    rdi,rax
  4073fb:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  407400:	mov    eax,0x0
  407405:	leave  
  407406:	ret    

0000000000407407 <flatcc_builder_create_offset_vector@@Base>:
  407407:	endbr64 
  40740b:	push   rbp
  40740c:	mov    rbp,rsp
  40740f:	sub    rsp,0x30
  407413:	mov    QWORD PTR [rbp-0x18],rdi
  407417:	mov    QWORD PTR [rbp-0x20],rsi
  40741b:	mov    QWORD PTR [rbp-0x28],rdx
  40741f:	mov    rax,QWORD PTR [rbp-0x18]
  407423:	mov    rdi,rax
  407426:	call   407397 <flatcc_builder_start_offset_vector@@Base>
  40742b:	test   eax,eax
  40742d:	je     407436 <flatcc_builder_create_offset_vector@@Base+0x2f>
  40742f:	mov    eax,0x0
  407434:	jmp    407486 <flatcc_builder_create_offset_vector@@Base+0x7f>
  407436:	mov    rdx,QWORD PTR [rbp-0x28]
  40743a:	mov    rax,QWORD PTR [rbp-0x18]
  40743e:	mov    rsi,rdx
  407441:	mov    rdi,rax
  407444:	call   406d76 <flatcc_builder_extend_offset_vector@@Base>
  407449:	mov    QWORD PTR [rbp-0x8],rax
  40744d:	cmp    QWORD PTR [rbp-0x8],0x0
  407452:	jne    40745b <flatcc_builder_create_offset_vector@@Base+0x54>
  407454:	mov    eax,0x0
  407459:	jmp    407486 <flatcc_builder_create_offset_vector@@Base+0x7f>
  40745b:	mov    rax,QWORD PTR [rbp-0x28]
  40745f:	lea    rdx,[rax*4+0x0]
  407467:	mov    rcx,QWORD PTR [rbp-0x20]
  40746b:	mov    rax,QWORD PTR [rbp-0x8]
  40746f:	mov    rsi,rcx
  407472:	mov    rdi,rax
  407475:	call   403170 <memcpy@plt>
  40747a:	mov    rax,QWORD PTR [rbp-0x18]
  40747e:	mov    rdi,rax
  407481:	call   408994 <flatcc_builder_end_offset_vector@@Base>
  407486:	leave  
  407487:	ret    

0000000000407488 <flatcc_builder_start_string@@Base>:
  407488:	endbr64 
  40748c:	push   rbp
  40748d:	mov    rbp,rsp
  407490:	sub    rsp,0x10
  407494:	mov    QWORD PTR [rbp-0x8],rdi
  407498:	mov    rax,QWORD PTR [rbp-0x8]
  40749c:	mov    esi,0x1
  4074a1:	mov    rdi,rax
  4074a4:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4074a9:	test   eax,eax
  4074ab:	je     4074b4 <flatcc_builder_start_string@@Base+0x2c>
  4074ad:	mov    eax,0xffffffff
  4074b2:	jmp    4074f6 <flatcc_builder_start_string@@Base+0x6e>
  4074b4:	mov    rax,QWORD PTR [rbp-0x8]
  4074b8:	mov    rax,QWORD PTR [rax+0x30]
  4074bc:	mov    DWORD PTR [rax+0x10],0x1
  4074c3:	mov    rax,QWORD PTR [rbp-0x8]
  4074c7:	mov    rax,QWORD PTR [rax+0x30]
  4074cb:	mov    DWORD PTR [rax+0x14],0x0
  4074d2:	mov    rax,QWORD PTR [rbp-0x8]
  4074d6:	mov    rax,QWORD PTR [rax+0x30]
  4074da:	mov    WORD PTR [rax+0xe],0x6
  4074e0:	mov    rax,QWORD PTR [rbp-0x8]
  4074e4:	mov    esi,0xfffffffc
  4074e9:	mov    rdi,rax
  4074ec:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  4074f1:	mov    eax,0x0
  4074f6:	leave  
  4074f7:	ret    

00000000004074f8 <flatcc_builder_reserve_table@@Base>:
  4074f8:	endbr64 
  4074fc:	push   rbp
  4074fd:	mov    rbp,rsp
  407500:	sub    rsp,0x10
  407504:	mov    QWORD PTR [rbp-0x8],rdi
  407508:	mov    DWORD PTR [rbp-0xc],esi
  40750b:	cmp    DWORD PTR [rbp-0xc],0x0
  40750f:	jns    407530 <flatcc_builder_reserve_table@@Base+0x38>
  407511:	lea    rcx,[rip+0x65d8]        # 40daf0 <flatcc_builder_padding_base@@Base+0x930>
  407518:	mov    edx,0x429
  40751d:	lea    rsi,[rip+0x5e9c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407524:	lea    rdi,[rip+0x613f]        # 40d66a <flatcc_builder_padding_base@@Base+0x4aa>
  40752b:	call   403130 <__assert_fail@plt>
  407530:	mov    edx,DWORD PTR [rbp-0xc]
  407533:	mov    rax,QWORD PTR [rbp-0x8]
  407537:	mov    esi,edx
  407539:	mov    rdi,rax
  40753c:	call   404ed7 <flatcc_builder_default_alloc@@Base+0x5c7>
  407541:	leave  
  407542:	ret    

0000000000407543 <flatcc_builder_start_table@@Base>:
  407543:	endbr64 
  407547:	push   rbp
  407548:	mov    rbp,rsp
  40754b:	sub    rsp,0x10
  40754f:	mov    QWORD PTR [rbp-0x8],rdi
  407553:	mov    DWORD PTR [rbp-0xc],esi
  407556:	mov    rax,QWORD PTR [rbp-0x8]
  40755a:	mov    esi,0x4
  40755f:	mov    rdi,rax
  407562:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  407567:	test   eax,eax
  407569:	je     407575 <flatcc_builder_start_table@@Base+0x32>
  40756b:	mov    eax,0xffffffff
  407570:	jmp    40763f <flatcc_builder_start_table@@Base+0xfc>
  407575:	mov    rax,QWORD PTR [rbp-0x8]
  407579:	mov    rax,QWORD PTR [rax+0x8]
  40757d:	mov    rdx,rax
  407580:	mov    rax,QWORD PTR [rbp-0x8]
  407584:	mov    rax,QWORD PTR [rax+0x58]
  407588:	sub    rdx,rax
  40758b:	mov    rax,QWORD PTR [rbp-0x8]
  40758f:	mov    rax,QWORD PTR [rax+0x30]
  407593:	mov    DWORD PTR [rax+0x10],edx
  407596:	mov    rax,QWORD PTR [rbp-0x8]
  40759a:	mov    rax,QWORD PTR [rax]
  40759d:	mov    rdx,rax
  4075a0:	mov    rax,QWORD PTR [rbp-0x8]
  4075a4:	mov    rax,QWORD PTR [rax+0x88]
  4075ab:	sub    rdx,rax
  4075ae:	mov    rax,QWORD PTR [rbp-0x8]
  4075b2:	mov    rax,QWORD PTR [rax+0x30]
  4075b6:	mov    DWORD PTR [rax+0x14],edx
  4075b9:	mov    rax,QWORD PTR [rbp-0x8]
  4075bd:	mov    rax,QWORD PTR [rax+0x30]
  4075c1:	mov    rdx,QWORD PTR [rbp-0x8]
  4075c5:	mov    edx,DWORD PTR [rdx+0x14]
  4075c8:	mov    DWORD PTR [rax+0x18],edx
  4075cb:	mov    rax,QWORD PTR [rbp-0x8]
  4075cf:	mov    rdx,QWORD PTR [rax+0x30]
  4075d3:	mov    rax,QWORD PTR [rbp-0x8]
  4075d7:	movzx  eax,WORD PTR [rax+0x10]
  4075db:	mov    WORD PTR [rdx+0x1c],ax
  4075df:	mov    rax,QWORD PTR [rbp-0x8]
  4075e3:	mov    DWORD PTR [rax+0x14],0x0
  4075ea:	mov    rax,QWORD PTR [rbp-0x8]
  4075ee:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4075f5:	mov    rax,QWORD PTR [rbp-0x8]
  4075f9:	mov    WORD PTR [rax+0x10],0x0
  4075ff:	mov    rax,QWORD PTR [rbp-0x8]
  407603:	mov    rax,QWORD PTR [rax+0x30]
  407607:	mov    WORD PTR [rax+0xe],0x3
  40760d:	mov    edx,DWORD PTR [rbp-0xc]
  407610:	mov    rax,QWORD PTR [rbp-0x8]
  407614:	mov    esi,edx
  407616:	mov    rdi,rax
  407619:	call   404ed7 <flatcc_builder_default_alloc@@Base+0x5c7>
  40761e:	test   eax,eax
  407620:	je     407629 <flatcc_builder_start_table@@Base+0xe6>
  407622:	mov    eax,0xffffffff
  407627:	jmp    40763f <flatcc_builder_start_table@@Base+0xfc>
  407629:	mov    rax,QWORD PTR [rbp-0x8]
  40762d:	mov    esi,0xfffc
  407632:	mov    rdi,rax
  407635:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  40763a:	mov    eax,0x0
  40763f:	leave  
  407640:	ret    

0000000000407641 <flatcc_builder_create_vtable@@Base>:
  407641:	endbr64 
  407645:	push   rbp
  407646:	mov    rbp,rsp
  407649:	sub    rsp,0xd0
  407650:	mov    QWORD PTR [rbp-0xb8],rdi
  407657:	mov    QWORD PTR [rbp-0xc0],rsi
  40765e:	mov    eax,edx
  407660:	mov    WORD PTR [rbp-0xc4],ax
  407667:	mov    rax,QWORD PTR fs:0x28
  407670:	mov    QWORD PTR [rbp-0x8],rax
  407674:	xor    eax,eax
  407676:	mov    QWORD PTR [rbp-0xa0],0x0
  407681:	mov    DWORD PTR [rbp-0x98],0x0
  40768b:	cmp    WORD PTR [rbp-0xc4],0x0
  407693:	je     4076fc <flatcc_builder_create_vtable@@Base+0xbb>
  407695:	mov    rdx,QWORD PTR [rbp-0xa0]
  40769c:	movzx  eax,WORD PTR [rbp-0xc4]
  4076a3:	add    rax,rdx
  4076a6:	mov    QWORD PTR [rbp-0xa0],rax
  4076ad:	mov    eax,DWORD PTR [rbp-0x98]
  4076b3:	cdqe   
  4076b5:	shl    rax,0x4
  4076b9:	add    rax,rbp
  4076bc:	lea    rdx,[rax-0x90]
  4076c3:	mov    rax,QWORD PTR [rbp-0xc0]
  4076ca:	mov    QWORD PTR [rdx],rax
  4076cd:	mov    edx,DWORD PTR [rbp-0x98]
  4076d3:	movzx  eax,WORD PTR [rbp-0xc4]
  4076da:	movsxd rdx,edx
  4076dd:	shl    rdx,0x4
  4076e1:	add    rdx,rbp
  4076e4:	sub    rdx,0x88
  4076eb:	mov    QWORD PTR [rdx],rax
  4076ee:	mov    eax,DWORD PTR [rbp-0x98]
  4076f4:	inc    eax
  4076f6:	mov    DWORD PTR [rbp-0x98],eax
  4076fc:	mov    rax,QWORD PTR [rbp-0xb8]
  407703:	mov    eax,DWORD PTR [rax+0x100]
  407709:	test   eax,eax
  40770b:	jne    40774d <flatcc_builder_create_vtable@@Base+0x10c>
  40770d:	mov    rax,QWORD PTR [rbp-0xb8]
  407714:	mov    eax,DWORD PTR [rax+0x124]
  40771a:	test   eax,eax
  40771c:	jne    40774d <flatcc_builder_create_vtable@@Base+0x10c>
  40771e:	lea    rdx,[rbp-0xa0]
  407725:	mov    rax,QWORD PTR [rbp-0xb8]
  40772c:	mov    rsi,rdx
  40772f:	mov    rdi,rax
  407732:	call   405c78 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  407737:	mov    DWORD PTR [rbp-0xa4],eax
  40773d:	cmp    DWORD PTR [rbp-0xa4],0x0
  407744:	jne    407782 <flatcc_builder_create_vtable@@Base+0x141>
  407746:	mov    eax,0x0
  40774b:	jmp    407788 <flatcc_builder_create_vtable@@Base+0x147>
  40774d:	lea    rdx,[rbp-0xa0]
  407754:	mov    rax,QWORD PTR [rbp-0xb8]
  40775b:	mov    rsi,rdx
  40775e:	mov    rdi,rax
  407761:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  407766:	mov    DWORD PTR [rbp-0xa4],eax
  40776c:	cmp    DWORD PTR [rbp-0xa4],0x0
  407773:	jne    40777c <flatcc_builder_create_vtable@@Base+0x13b>
  407775:	mov    eax,0x0
  40777a:	jmp    407788 <flatcc_builder_create_vtable@@Base+0x147>
  40777c:	inc    DWORD PTR [rbp-0xa4]
  407782:	mov    eax,DWORD PTR [rbp-0xa4]
  407788:	mov    rcx,QWORD PTR [rbp-0x8]
  40778c:	xor    rcx,QWORD PTR fs:0x28
  407795:	je     40779c <flatcc_builder_create_vtable@@Base+0x15b>
  407797:	call   403120 <__stack_chk_fail@plt>
  40779c:	leave  
  40779d:	ret    

000000000040779e <flatcc_builder_create_cached_vtable@@Base>:
  40779e:	endbr64 
  4077a2:	push   rbp
  4077a3:	mov    rbp,rsp
  4077a6:	sub    rsp,0x50
  4077aa:	mov    QWORD PTR [rbp-0x38],rdi
  4077ae:	mov    QWORD PTR [rbp-0x40],rsi
  4077b2:	mov    eax,edx
  4077b4:	mov    DWORD PTR [rbp-0x48],ecx
  4077b7:	mov    WORD PTR [rbp-0x44],ax
  4077bb:	mov    edx,DWORD PTR [rbp-0x48]
  4077be:	mov    rax,QWORD PTR [rbp-0x38]
  4077c2:	mov    esi,edx
  4077c4:	mov    rdi,rax
  4077c7:	call   4050e6 <flatcc_builder_default_alloc@@Base+0x7d6>
  4077cc:	mov    QWORD PTR [rbp-0x18],rax
  4077d0:	cmp    QWORD PTR [rbp-0x18],0x0
  4077d5:	jne    4077e1 <flatcc_builder_create_cached_vtable@@Base+0x43>
  4077d7:	mov    eax,0x0
  4077dc:	jmp    407a82 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4077e1:	mov    rax,QWORD PTR [rbp-0x18]
  4077e5:	mov    QWORD PTR [rbp-0x20],rax
  4077e9:	mov    rax,QWORD PTR [rbp-0x20]
  4077ed:	mov    eax,DWORD PTR [rax]
  4077ef:	mov    DWORD PTR [rbp-0x2c],eax
  4077f2:	mov    QWORD PTR [rbp-0x28],0x0
  4077fa:	jmp    4078d9 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4077ff:	mov    rax,QWORD PTR [rbp-0x38]
  407803:	mov    rdx,QWORD PTR [rax+0xb8]
  40780a:	mov    eax,DWORD PTR [rbp-0x2c]
  40780d:	add    rax,rdx
  407810:	mov    QWORD PTR [rbp-0x10],rax
  407814:	mov    rax,QWORD PTR [rbp-0x38]
  407818:	mov    rdx,QWORD PTR [rax+0x78]
  40781c:	mov    rax,QWORD PTR [rbp-0x10]
  407820:	mov    eax,DWORD PTR [rax+0x8]
  407823:	mov    eax,eax
  407825:	add    rax,rdx
  407828:	mov    QWORD PTR [rbp-0x8],rax
  40782c:	mov    rax,QWORD PTR [rbp-0x8]
  407830:	movzx  eax,WORD PTR [rax]
  407833:	cmp    WORD PTR [rbp-0x44],ax
  407837:	jne    407854 <flatcc_builder_create_cached_vtable@@Base+0xb6>
  407839:	movzx  edx,WORD PTR [rbp-0x44]
  40783d:	mov    rcx,QWORD PTR [rbp-0x8]
  407841:	mov    rax,QWORD PTR [rbp-0x40]
  407845:	mov    rsi,rcx
  407848:	mov    rdi,rax
  40784b:	call   403160 <memcmp@plt>
  407850:	test   eax,eax
  407852:	je     40786c <flatcc_builder_create_cached_vtable@@Base+0xce>
  407854:	mov    rax,QWORD PTR [rbp-0x10]
  407858:	add    rax,0xc
  40785c:	mov    QWORD PTR [rbp-0x20],rax
  407860:	mov    rax,QWORD PTR [rbp-0x10]
  407864:	mov    eax,DWORD PTR [rax+0xc]
  407867:	mov    DWORD PTR [rbp-0x2c],eax
  40786a:	jmp    4078d9 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  40786c:	mov    rax,QWORD PTR [rbp-0x10]
  407870:	mov    edx,DWORD PTR [rax+0x4]
  407873:	mov    rax,QWORD PTR [rbp-0x38]
  407877:	mov    eax,DWORD PTR [rax+0x100]
  40787d:	cmp    edx,eax
  40787f:	je     4078a1 <flatcc_builder_create_cached_vtable@@Base+0x103>
  407881:	mov    rax,QWORD PTR [rbp-0x10]
  407885:	mov    QWORD PTR [rbp-0x28],rax
  407889:	mov    rax,QWORD PTR [rbp-0x10]
  40788d:	add    rax,0xc
  407891:	mov    QWORD PTR [rbp-0x20],rax
  407895:	mov    rax,QWORD PTR [rbp-0x10]
  407899:	mov    eax,DWORD PTR [rax+0xc]
  40789c:	mov    DWORD PTR [rbp-0x2c],eax
  40789f:	jmp    4078d9 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4078a1:	mov    rax,QWORD PTR [rbp-0x20]
  4078a5:	cmp    rax,QWORD PTR [rbp-0x18]
  4078a9:	je     4078ce <flatcc_builder_create_cached_vtable@@Base+0x130>
  4078ab:	mov    rax,QWORD PTR [rbp-0x10]
  4078af:	mov    edx,DWORD PTR [rax+0xc]
  4078b2:	mov    rax,QWORD PTR [rbp-0x20]
  4078b6:	mov    DWORD PTR [rax],edx
  4078b8:	mov    rax,QWORD PTR [rbp-0x18]
  4078bc:	mov    edx,DWORD PTR [rax]
  4078be:	mov    rax,QWORD PTR [rbp-0x10]
  4078c2:	mov    DWORD PTR [rax+0xc],edx
  4078c5:	mov    rax,QWORD PTR [rbp-0x18]
  4078c9:	mov    edx,DWORD PTR [rbp-0x2c]
  4078cc:	mov    DWORD PTR [rax],edx
  4078ce:	mov    rax,QWORD PTR [rbp-0x10]
  4078d2:	mov    eax,DWORD PTR [rax]
  4078d4:	jmp    407a82 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4078d9:	cmp    DWORD PTR [rbp-0x2c],0x0
  4078dd:	jne    4077ff <flatcc_builder_create_cached_vtable@@Base+0x61>
  4078e3:	mov    rax,QWORD PTR [rbp-0x38]
  4078e7:	mov    eax,DWORD PTR [rax+0xe4]
  4078ed:	mov    edx,eax
  4078ef:	mov    rax,QWORD PTR [rbp-0x38]
  4078f3:	mov    r8d,0x0
  4078f9:	mov    ecx,0x10
  4078fe:	mov    esi,0x6
  407903:	mov    rdi,rax
  407906:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  40790b:	mov    QWORD PTR [rbp-0x10],rax
  40790f:	cmp    QWORD PTR [rbp-0x10],0x0
  407914:	jne    407920 <flatcc_builder_create_cached_vtable@@Base+0x182>
  407916:	mov    eax,0x0
  40791b:	jmp    407a82 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407920:	mov    rax,QWORD PTR [rbp-0x38]
  407924:	mov    eax,DWORD PTR [rax+0xe4]
  40792a:	mov    DWORD PTR [rbp-0x2c],eax
  40792d:	mov    rax,QWORD PTR [rbp-0x38]
  407931:	mov    eax,DWORD PTR [rax+0xe4]
  407937:	lea    edx,[rax+0x10]
  40793a:	mov    rax,QWORD PTR [rbp-0x38]
  40793e:	mov    DWORD PTR [rax+0xe4],edx
  407944:	mov    rax,QWORD PTR [rbp-0x38]
  407948:	mov    edx,DWORD PTR [rax+0x100]
  40794e:	mov    rax,QWORD PTR [rbp-0x10]
  407952:	mov    DWORD PTR [rax+0x4],edx
  407955:	mov    rax,QWORD PTR [rbp-0x18]
  407959:	mov    edx,DWORD PTR [rax]
  40795b:	mov    rax,QWORD PTR [rbp-0x10]
  40795f:	mov    DWORD PTR [rax+0xc],edx
  407962:	mov    rax,QWORD PTR [rbp-0x18]
  407966:	mov    edx,DWORD PTR [rbp-0x2c]
  407969:	mov    DWORD PTR [rax],edx
  40796b:	movzx  edx,WORD PTR [rbp-0x44]
  40796f:	mov    rcx,QWORD PTR [rbp-0x40]
  407973:	mov    rax,QWORD PTR [rbp-0x38]
  407977:	mov    rsi,rcx
  40797a:	mov    rdi,rax
  40797d:	call   407641 <flatcc_builder_create_vtable@@Base>
  407982:	mov    edx,eax
  407984:	mov    rax,QWORD PTR [rbp-0x10]
  407988:	mov    DWORD PTR [rax],edx
  40798a:	mov    rax,QWORD PTR [rbp-0x10]
  40798e:	mov    eax,DWORD PTR [rax]
  407990:	test   eax,eax
  407992:	jne    40799e <flatcc_builder_create_cached_vtable@@Base+0x200>
  407994:	mov    eax,0x0
  407999:	jmp    407a82 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  40799e:	cmp    QWORD PTR [rbp-0x28],0x0
  4079a3:	je     4079b8 <flatcc_builder_create_cached_vtable@@Base+0x21a>
  4079a5:	mov    rax,QWORD PTR [rbp-0x28]
  4079a9:	mov    edx,DWORD PTR [rax+0x8]
  4079ac:	mov    rax,QWORD PTR [rbp-0x10]
  4079b0:	mov    DWORD PTR [rax+0x8],edx
  4079b3:	jmp    407a7c <flatcc_builder_create_cached_vtable@@Base+0x2de>
  4079b8:	mov    rax,QWORD PTR [rbp-0x38]
  4079bc:	mov    rax,QWORD PTR [rax+0x118]
  4079c3:	test   rax,rax
  4079c6:	je     4079fb <flatcc_builder_create_cached_vtable@@Base+0x25d>
  4079c8:	mov    rax,QWORD PTR [rbp-0x38]
  4079cc:	mov    rdx,QWORD PTR [rax+0x118]
  4079d3:	mov    rax,QWORD PTR [rbp-0x38]
  4079d7:	mov    ecx,DWORD PTR [rax+0xe0]
  4079dd:	movzx  eax,WORD PTR [rbp-0x44]
  4079e1:	add    eax,ecx
  4079e3:	mov    eax,eax
  4079e5:	cmp    rdx,rax
  4079e8:	jae    4079fb <flatcc_builder_create_cached_vtable@@Base+0x25d>
  4079ea:	mov    rax,QWORD PTR [rbp-0x38]
  4079ee:	mov    rdi,rax
  4079f1:	call   40515a <flatcc_builder_flush_vtable_cache@@Base>
  4079f6:	jmp    407a7c <flatcc_builder_create_cached_vtable@@Base+0x2de>
  4079fb:	movzx  edx,WORD PTR [rbp-0x44]
  4079ff:	mov    rax,QWORD PTR [rbp-0x38]
  407a03:	mov    eax,DWORD PTR [rax+0xe0]
  407a09:	mov    esi,eax
  407a0b:	mov    rax,QWORD PTR [rbp-0x38]
  407a0f:	mov    r8d,0x0
  407a15:	mov    rcx,rdx
  407a18:	mov    rdx,rsi
  407a1b:	mov    esi,0x2
  407a20:	mov    rdi,rax
  407a23:	call   404e26 <flatcc_builder_default_alloc@@Base+0x516>
  407a28:	mov    QWORD PTR [rbp-0x8],rax
  407a2c:	cmp    QWORD PTR [rbp-0x8],0x0
  407a31:	jne    407a3a <flatcc_builder_create_cached_vtable@@Base+0x29c>
  407a33:	mov    eax,0xffffffff
  407a38:	jmp    407a82 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407a3a:	mov    rax,QWORD PTR [rbp-0x38]
  407a3e:	mov    edx,DWORD PTR [rax+0xe0]
  407a44:	mov    rax,QWORD PTR [rbp-0x10]
  407a48:	mov    DWORD PTR [rax+0x8],edx
  407a4b:	mov    rax,QWORD PTR [rbp-0x38]
  407a4f:	mov    edx,DWORD PTR [rax+0xe0]
  407a55:	movzx  eax,WORD PTR [rbp-0x44]
  407a59:	add    edx,eax
  407a5b:	mov    rax,QWORD PTR [rbp-0x38]
  407a5f:	mov    DWORD PTR [rax+0xe0],edx
  407a65:	movzx  edx,WORD PTR [rbp-0x44]
  407a69:	mov    rcx,QWORD PTR [rbp-0x40]
  407a6d:	mov    rax,QWORD PTR [rbp-0x8]
  407a71:	mov    rsi,rcx
  407a74:	mov    rdi,rax
  407a77:	call   403170 <memcpy@plt>
  407a7c:	mov    rax,QWORD PTR [rbp-0x10]
  407a80:	mov    eax,DWORD PTR [rax]
  407a82:	leave  
  407a83:	ret    

0000000000407a84 <flatcc_builder_create_table@@Base>:
  407a84:	endbr64 
  407a88:	push   rbp
  407a89:	mov    rbp,rsp
  407a8c:	sub    rsp,0x100
  407a93:	mov    QWORD PTR [rbp-0xd8],rdi
  407a9a:	mov    QWORD PTR [rbp-0xe0],rsi
  407aa1:	mov    QWORD PTR [rbp-0xe8],rdx
  407aa8:	mov    eax,ecx
  407aaa:	mov    QWORD PTR [rbp-0xf8],r8
  407ab1:	mov    DWORD PTR [rbp-0xf0],r9d
  407ab8:	mov    WORD PTR [rbp-0xec],ax
  407abf:	mov    rax,QWORD PTR fs:0x28
  407ac8:	mov    QWORD PTR [rbp-0x8],rax
  407acc:	xor    eax,eax
  407ace:	cmp    DWORD PTR [rbp-0xf0],0x0
  407ad5:	jns    407af6 <flatcc_builder_create_table@@Base+0x72>
  407ad7:	lea    rcx,[rip+0x6032]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  407ade:	mov    edx,0x4d5
  407ae3:	lea    rsi,[rip+0x58d6]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407aea:	lea    rdi,[rip+0x5b84]        # 40d675 <flatcc_builder_padding_base@@Base+0x4b5>
  407af1:	call   403130 <__assert_fail@plt>
  407af6:	mov    eax,DWORD PTR [rbp+0x10]
  407af9:	and    eax,0x1
  407afc:	test   eax,eax
  407afe:	jne    407b1f <flatcc_builder_create_table@@Base+0x9b>
  407b00:	lea    rcx,[rip+0x6009]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  407b07:	mov    edx,0x4db
  407b0c:	lea    rsi,[rip+0x58ad]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407b13:	lea    rdi,[rip+0x5b6d]        # 40d687 <flatcc_builder_padding_base@@Base+0x4c7>
  407b1a:	call   403130 <__assert_fail@plt>
  407b1f:	lea    rax,[rbp-0xec]
  407b26:	mov    esi,0x4
  407b2b:	mov    rdi,rax
  407b2e:	call   4055ad <flatcc_builder_clear@@Base+0xca>
  407b33:	movzx  eax,WORD PTR [rbp-0xec]
  407b3a:	movzx  edx,ax
  407b3d:	mov    rax,QWORD PTR [rbp-0xd8]
  407b44:	mov    esi,edx
  407b46:	mov    rdi,rax
  407b49:	call   40557c <flatcc_builder_clear@@Base+0x99>
  407b4e:	movzx  eax,WORD PTR [rbp-0xec]
  407b55:	movzx  edx,ax
  407b58:	mov    rax,QWORD PTR [rbp-0xe8]
  407b5f:	mov    ecx,eax
  407b61:	mov    rax,QWORD PTR [rbp-0xd8]
  407b68:	mov    esi,ecx
  407b6a:	mov    rdi,rax
  407b6d:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407b72:	mov    DWORD PTR [rbp-0xbc],eax
  407b78:	mov    rax,QWORD PTR [rbp-0xd8]
  407b7f:	mov    eax,DWORD PTR [rax+0xf0]
  407b85:	mov    edx,eax
  407b87:	mov    rax,QWORD PTR [rbp-0xe8]
  407b8e:	mov    ecx,eax
  407b90:	mov    eax,DWORD PTR [rbp-0xbc]
  407b96:	add    eax,ecx
  407b98:	sub    edx,eax
  407b9a:	mov    eax,edx
  407b9c:	sub    eax,0x4
  407b9f:	mov    DWORD PTR [rbp-0xb8],eax
  407ba5:	mov    eax,DWORD PTR [rbp+0x10]
  407ba8:	dec    eax
  407baa:	mov    DWORD PTR [rbp-0xb4],eax
  407bb0:	mov    eax,DWORD PTR [rbp-0xb8]
  407bb6:	sub    eax,DWORD PTR [rbp-0xb4]
  407bbc:	mov    DWORD PTR [rbp-0xb0],eax
  407bc2:	mov    eax,DWORD PTR [rbp-0xb8]
  407bc8:	sub    eax,DWORD PTR [rbp-0xb0]
  407bce:	cmp    DWORD PTR [rbp-0xb4],eax
  407bd4:	je     407be0 <flatcc_builder_create_table@@Base+0x15c>
  407bd6:	mov    eax,0xffffffff
  407bdb:	jmp    407e00 <flatcc_builder_create_table@@Base+0x37c>
  407be0:	mov    eax,DWORD PTR [rbp-0xb0]
  407be6:	mov    edi,eax
  407be8:	call   404850 <main@@Base+0x17a>
  407bed:	mov    DWORD PTR [rbp-0xc4],eax
  407bf3:	mov    DWORD PTR [rbp-0xc0],0x0
  407bfd:	jmp    407c87 <flatcc_builder_create_table@@Base+0x203>
  407c02:	mov    eax,DWORD PTR [rbp-0xc0]
  407c08:	cdqe   
  407c0a:	lea    rdx,[rax+rax*1]
  407c0e:	mov    rax,QWORD PTR [rbp-0xf8]
  407c15:	add    rax,rdx
  407c18:	movzx  eax,WORD PTR [rax]
  407c1b:	movzx  edx,ax
  407c1e:	mov    rax,QWORD PTR [rbp-0xe0]
  407c25:	add    rax,rdx
  407c28:	mov    QWORD PTR [rbp-0xa8],rax
  407c2f:	mov    rax,QWORD PTR [rbp-0xa8]
  407c36:	mov    eax,DWORD PTR [rax]
  407c38:	sub    eax,DWORD PTR [rbp-0xb8]
  407c3e:	mov    edx,eax
  407c40:	mov    eax,DWORD PTR [rbp-0xc0]
  407c46:	cdqe   
  407c48:	lea    rcx,[rax+rax*1]
  407c4c:	mov    rax,QWORD PTR [rbp-0xf8]
  407c53:	add    rax,rcx
  407c56:	movzx  eax,WORD PTR [rax]
  407c59:	movzx  eax,ax
  407c5c:	sub    edx,eax
  407c5e:	mov    eax,edx
  407c60:	sub    eax,0x4
  407c63:	mov    DWORD PTR [rbp-0xac],eax
  407c69:	mov    eax,DWORD PTR [rbp-0xac]
  407c6f:	mov    edi,eax
  407c71:	call   404850 <main@@Base+0x17a>
  407c76:	mov    edx,eax
  407c78:	mov    rax,QWORD PTR [rbp-0xa8]
  407c7f:	mov    DWORD PTR [rax],edx
  407c81:	inc    DWORD PTR [rbp-0xc0]
  407c87:	mov    eax,DWORD PTR [rbp-0xc0]
  407c8d:	cmp    eax,DWORD PTR [rbp-0xf0]
  407c93:	jl     407c02 <flatcc_builder_create_table@@Base+0x17e>
  407c99:	mov    QWORD PTR [rbp-0xa0],0x0
  407ca4:	mov    DWORD PTR [rbp-0x98],0x0
  407cae:	mov    rax,QWORD PTR [rbp-0xa0]
  407cb5:	add    rax,0x4
  407cb9:	mov    QWORD PTR [rbp-0xa0],rax
  407cc0:	mov    eax,DWORD PTR [rbp-0x98]
  407cc6:	cdqe   
  407cc8:	shl    rax,0x4
  407ccc:	add    rax,rbp
  407ccf:	lea    rdx,[rax-0x90]
  407cd6:	lea    rax,[rbp-0xc4]
  407cdd:	mov    QWORD PTR [rdx],rax
  407ce0:	mov    eax,DWORD PTR [rbp-0x98]
  407ce6:	cdqe   
  407ce8:	shl    rax,0x4
  407cec:	add    rax,rbp
  407cef:	sub    rax,0x88
  407cf5:	mov    QWORD PTR [rax],0x4
  407cfc:	mov    eax,DWORD PTR [rbp-0x98]
  407d02:	inc    eax
  407d04:	mov    DWORD PTR [rbp-0x98],eax
  407d0a:	cmp    QWORD PTR [rbp-0xe8],0x0
  407d12:	je     407d7a <flatcc_builder_create_table@@Base+0x2f6>
  407d14:	mov    rdx,QWORD PTR [rbp-0xa0]
  407d1b:	mov    rax,QWORD PTR [rbp-0xe8]
  407d22:	add    rax,rdx
  407d25:	mov    QWORD PTR [rbp-0xa0],rax
  407d2c:	mov    eax,DWORD PTR [rbp-0x98]
  407d32:	cdqe   
  407d34:	shl    rax,0x4
  407d38:	add    rax,rbp
  407d3b:	lea    rdx,[rax-0x90]
  407d42:	mov    rax,QWORD PTR [rbp-0xe0]
  407d49:	mov    QWORD PTR [rdx],rax
  407d4c:	mov    eax,DWORD PTR [rbp-0x98]
  407d52:	cdqe   
  407d54:	shl    rax,0x4
  407d58:	add    rax,rbp
  407d5b:	lea    rdx,[rax-0x88]
  407d62:	mov    rax,QWORD PTR [rbp-0xe8]
  407d69:	mov    QWORD PTR [rdx],rax
  407d6c:	mov    eax,DWORD PTR [rbp-0x98]
  407d72:	inc    eax
  407d74:	mov    DWORD PTR [rbp-0x98],eax
  407d7a:	cmp    DWORD PTR [rbp-0xbc],0x0
  407d81:	je     407de7 <flatcc_builder_create_table@@Base+0x363>
  407d83:	mov    rdx,QWORD PTR [rbp-0xa0]
  407d8a:	mov    eax,DWORD PTR [rbp-0xbc]
  407d90:	add    rax,rdx
  407d93:	mov    QWORD PTR [rbp-0xa0],rax
  407d9a:	mov    eax,DWORD PTR [rbp-0x98]
  407da0:	cdqe   
  407da2:	shl    rax,0x4
  407da6:	add    rax,rbp
  407da9:	sub    rax,0x90
  407daf:	mov    rdx,0x40d1c0
  407db6:	mov    QWORD PTR [rax],rdx
  407db9:	mov    edx,DWORD PTR [rbp-0x98]
  407dbf:	mov    eax,DWORD PTR [rbp-0xbc]
  407dc5:	movsxd rdx,edx
  407dc8:	shl    rdx,0x4
  407dcc:	add    rdx,rbp
  407dcf:	sub    rdx,0x88
  407dd6:	mov    QWORD PTR [rdx],rax
  407dd9:	mov    eax,DWORD PTR [rbp-0x98]
  407ddf:	inc    eax
  407de1:	mov    DWORD PTR [rbp-0x98],eax
  407de7:	lea    rdx,[rbp-0xa0]
  407dee:	mov    rax,QWORD PTR [rbp-0xd8]
  407df5:	mov    rsi,rdx
  407df8:	mov    rdi,rax
  407dfb:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  407e00:	mov    rsi,QWORD PTR [rbp-0x8]
  407e04:	xor    rsi,QWORD PTR fs:0x28
  407e0d:	je     407e14 <flatcc_builder_create_table@@Base+0x390>
  407e0f:	call   403120 <__stack_chk_fail@plt>
  407e14:	leave  
  407e15:	ret    

0000000000407e16 <flatcc_builder_check_required_field@@Base>:
  407e16:	endbr64 
  407e1a:	push   rbp
  407e1b:	mov    rbp,rsp
  407e1e:	sub    rsp,0x10
  407e22:	mov    QWORD PTR [rbp-0x8],rdi
  407e26:	mov    eax,esi
  407e28:	mov    WORD PTR [rbp-0xc],ax
  407e2c:	mov    rax,QWORD PTR [rbp-0x8]
  407e30:	mov    rax,QWORD PTR [rax+0x30]
  407e34:	movzx  eax,WORD PTR [rax+0xe]
  407e38:	cmp    ax,0x3
  407e3c:	je     407e5d <flatcc_builder_check_required_field@@Base+0x47>
  407e3e:	lea    rcx,[rip+0x5cfb]        # 40db40 <flatcc_builder_padding_base@@Base+0x980>
  407e45:	mov    edx,0x4f8
  407e4a:	lea    rsi,[rip+0x556f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407e51:	lea    rdi,[rip+0x5840]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407e58:	call   403130 <__assert_fail@plt>
  407e5d:	mov    rax,QWORD PTR [rbp-0x8]
  407e61:	movzx  eax,WORD PTR [rax+0x10]
  407e65:	cmp    WORD PTR [rbp-0xc],ax
  407e69:	jae    407e8c <flatcc_builder_check_required_field@@Base+0x76>
  407e6b:	mov    rax,QWORD PTR [rbp-0x8]
  407e6f:	mov    rax,QWORD PTR [rax+0x8]
  407e73:	movzx  edx,WORD PTR [rbp-0xc]
  407e77:	add    rdx,rdx
  407e7a:	add    rax,rdx
  407e7d:	movzx  eax,WORD PTR [rax]
  407e80:	test   ax,ax
  407e83:	je     407e8c <flatcc_builder_check_required_field@@Base+0x76>
  407e85:	mov    eax,0x1
  407e8a:	jmp    407e91 <flatcc_builder_check_required_field@@Base+0x7b>
  407e8c:	mov    eax,0x0
  407e91:	leave  
  407e92:	ret    

0000000000407e93 <flatcc_builder_check_union_field@@Base>:
  407e93:	endbr64 
  407e97:	push   rbp
  407e98:	mov    rbp,rsp
  407e9b:	sub    rsp,0x10
  407e9f:	mov    QWORD PTR [rbp-0x8],rdi
  407ea3:	mov    eax,esi
  407ea5:	mov    WORD PTR [rbp-0xc],ax
  407ea9:	mov    rax,QWORD PTR [rbp-0x8]
  407ead:	mov    rax,QWORD PTR [rax+0x30]
  407eb1:	movzx  eax,WORD PTR [rax+0xe]
  407eb5:	cmp    ax,0x3
  407eb9:	je     407eda <flatcc_builder_check_union_field@@Base+0x47>
  407ebb:	lea    rcx,[rip+0x5cbe]        # 40db80 <flatcc_builder_padding_base@@Base+0x9c0>
  407ec2:	mov    edx,0x4ff
  407ec7:	lea    rsi,[rip+0x54f2]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407ece:	lea    rdi,[rip+0x57c3]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407ed5:	call   403130 <__assert_fail@plt>
  407eda:	cmp    WORD PTR [rbp-0xc],0x0
  407edf:	je     407eef <flatcc_builder_check_union_field@@Base+0x5c>
  407ee1:	mov    rax,QWORD PTR [rbp-0x8]
  407ee5:	movzx  eax,WORD PTR [rax+0x10]
  407ee9:	cmp    WORD PTR [rbp-0xc],ax
  407eed:	jb     407ef9 <flatcc_builder_check_union_field@@Base+0x66>
  407eef:	mov    eax,0x0
  407ef4:	jmp    407fa3 <flatcc_builder_check_union_field@@Base+0x110>
  407ef9:	mov    rax,QWORD PTR [rbp-0x8]
  407efd:	mov    rax,QWORD PTR [rax+0x8]
  407f01:	movzx  edx,WORD PTR [rbp-0xc]
  407f05:	add    rdx,rdx
  407f08:	sub    rdx,0x2
  407f0c:	add    rax,rdx
  407f0f:	movzx  eax,WORD PTR [rax]
  407f12:	test   ax,ax
  407f15:	jne    407f37 <flatcc_builder_check_union_field@@Base+0xa4>
  407f17:	mov    rax,QWORD PTR [rbp-0x8]
  407f1b:	mov    rax,QWORD PTR [rax+0x8]
  407f1f:	movzx  edx,WORD PTR [rbp-0xc]
  407f23:	add    rdx,rdx
  407f26:	add    rax,rdx
  407f29:	movzx  eax,WORD PTR [rax]
  407f2c:	test   ax,ax
  407f2f:	sete   al
  407f32:	movzx  eax,al
  407f35:	jmp    407fa3 <flatcc_builder_check_union_field@@Base+0x110>
  407f37:	mov    rax,QWORD PTR [rbp-0x8]
  407f3b:	mov    rdx,QWORD PTR [rax+0x18]
  407f3f:	mov    rax,QWORD PTR [rbp-0x8]
  407f43:	mov    rax,QWORD PTR [rax+0x8]
  407f47:	movzx  ecx,WORD PTR [rbp-0xc]
  407f4b:	add    rcx,rcx
  407f4e:	sub    rcx,0x2
  407f52:	add    rax,rcx
  407f55:	movzx  eax,WORD PTR [rax]
  407f58:	movzx  eax,ax
  407f5b:	add    rax,rdx
  407f5e:	movzx  eax,BYTE PTR [rax]
  407f61:	test   al,al
  407f63:	je     407f85 <flatcc_builder_check_union_field@@Base+0xf2>
  407f65:	mov    rax,QWORD PTR [rbp-0x8]
  407f69:	mov    rax,QWORD PTR [rax+0x8]
  407f6d:	movzx  edx,WORD PTR [rbp-0xc]
  407f71:	add    rdx,rdx
  407f74:	add    rax,rdx
  407f77:	movzx  eax,WORD PTR [rax]
  407f7a:	test   ax,ax
  407f7d:	setne  al
  407f80:	movzx  eax,al
  407f83:	jmp    407fa3 <flatcc_builder_check_union_field@@Base+0x110>
  407f85:	mov    rax,QWORD PTR [rbp-0x8]
  407f89:	mov    rax,QWORD PTR [rax+0x8]
  407f8d:	movzx  edx,WORD PTR [rbp-0xc]
  407f91:	add    rdx,rdx
  407f94:	add    rax,rdx
  407f97:	movzx  eax,WORD PTR [rax]
  407f9a:	test   ax,ax
  407f9d:	sete   al
  407fa0:	movzx  eax,al
  407fa3:	leave  
  407fa4:	ret    

0000000000407fa5 <flatcc_builder_check_required@@Base>:
  407fa5:	endbr64 
  407fa9:	push   rbp
  407faa:	mov    rbp,rsp
  407fad:	sub    rsp,0x30
  407fb1:	mov    QWORD PTR [rbp-0x18],rdi
  407fb5:	mov    QWORD PTR [rbp-0x20],rsi
  407fb9:	mov    DWORD PTR [rbp-0x24],edx
  407fbc:	mov    rax,QWORD PTR [rbp-0x18]
  407fc0:	mov    rax,QWORD PTR [rax+0x30]
  407fc4:	movzx  eax,WORD PTR [rax+0xe]
  407fc8:	cmp    ax,0x3
  407fcc:	je     407fed <flatcc_builder_check_required@@Base+0x48>
  407fce:	lea    rcx,[rip+0x5bdb]        # 40dbb0 <flatcc_builder_padding_base@@Base+0x9f0>
  407fd5:	mov    edx,0x511
  407fda:	lea    rsi,[rip+0x53df]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407fe1:	lea    rdi,[rip+0x56b0]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407fe8:	call   403130 <__assert_fail@plt>
  407fed:	mov    rax,QWORD PTR [rbp-0x18]
  407ff1:	movzx  eax,WORD PTR [rax+0x10]
  407ff5:	movzx  eax,ax
  407ff8:	cmp    DWORD PTR [rbp-0x24],eax
  407ffb:	jle    408004 <flatcc_builder_check_required@@Base+0x5f>
  407ffd:	mov    eax,0x0
  408002:	jmp    408050 <flatcc_builder_check_required@@Base+0xab>
  408004:	mov    DWORD PTR [rbp-0x4],0x0
  40800b:	jmp    408043 <flatcc_builder_check_required@@Base+0x9e>
  40800d:	mov    rax,QWORD PTR [rbp-0x18]
  408011:	mov    rdx,QWORD PTR [rax+0x8]
  408015:	mov    eax,DWORD PTR [rbp-0x4]
  408018:	cdqe   
  40801a:	lea    rcx,[rax+rax*1]
  40801e:	mov    rax,QWORD PTR [rbp-0x20]
  408022:	add    rax,rcx
  408025:	movzx  eax,WORD PTR [rax]
  408028:	movzx  eax,ax
  40802b:	add    rax,rax
  40802e:	add    rax,rdx
  408031:	movzx  eax,WORD PTR [rax]
  408034:	test   ax,ax
  408037:	jne    408040 <flatcc_builder_check_required@@Base+0x9b>
  408039:	mov    eax,0x0
  40803e:	jmp    408050 <flatcc_builder_check_required@@Base+0xab>
  408040:	inc    DWORD PTR [rbp-0x4]
  408043:	mov    eax,DWORD PTR [rbp-0x4]
  408046:	cmp    eax,DWORD PTR [rbp-0x24]
  408049:	jl     40800d <flatcc_builder_check_required@@Base+0x68>
  40804b:	mov    eax,0x1
  408050:	leave  
  408051:	ret    

0000000000408052 <flatcc_builder_end_table@@Base>:
  408052:	endbr64 
  408056:	push   rbp
  408057:	mov    rbp,rsp
  40805a:	sub    rsp,0x30
  40805e:	mov    QWORD PTR [rbp-0x28],rdi
  408062:	mov    rax,QWORD PTR [rbp-0x28]
  408066:	mov    rax,QWORD PTR [rax+0x30]
  40806a:	movzx  eax,WORD PTR [rax+0xe]
  40806e:	cmp    ax,0x3
  408072:	je     408093 <flatcc_builder_end_table@@Base+0x41>
  408074:	lea    rcx,[rip+0x5b55]        # 40dbd0 <flatcc_builder_padding_base@@Base+0xa10>
  40807b:	mov    edx,0x525
  408080:	lea    rsi,[rip+0x5339]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408087:	lea    rdi,[rip+0x560a]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40808e:	call   403130 <__assert_fail@plt>
  408093:	mov    rax,QWORD PTR [rbp-0x28]
  408097:	mov    rax,QWORD PTR [rax+0x8]
  40809b:	sub    rax,0x4
  40809f:	mov    QWORD PTR [rbp-0x10],rax
  4080a3:	mov    rax,QWORD PTR [rbp-0x28]
  4080a7:	movzx  eax,WORD PTR [rax+0x10]
  4080ab:	movzx  eax,ax
  4080ae:	add    eax,0x2
  4080b1:	cdqe   
  4080b3:	add    eax,eax
  4080b5:	mov    WORD PTR [rbp-0x1e],ax
  4080b9:	mov    rdx,QWORD PTR [rbp-0x10]
  4080bd:	movzx  eax,WORD PTR [rbp-0x1e]
  4080c1:	mov    WORD PTR [rdx],ax
  4080c4:	mov    rax,QWORD PTR [rbp-0x28]
  4080c8:	mov    eax,DWORD PTR [rax+0x20]
  4080cb:	mov    ecx,eax
  4080cd:	mov    rax,QWORD PTR [rbp-0x10]
  4080d1:	lea    rdx,[rax+0x2]
  4080d5:	lea    eax,[rcx+0x4]
  4080d8:	mov    WORD PTR [rdx],ax
  4080db:	mov    rax,QWORD PTR [rbp-0x10]
  4080df:	movzx  eax,WORD PTR [rax]
  4080e2:	movzx  edx,ax
  4080e5:	mov    rax,QWORD PTR [rbp-0x28]
  4080e9:	mov    eax,DWORD PTR [rax+0x14]
  4080ec:	xor    eax,edx
  4080ee:	imul   edx,eax,0x9e3779b1
  4080f4:	mov    rax,QWORD PTR [rbp-0x10]
  4080f8:	add    rax,0x2
  4080fc:	movzx  eax,WORD PTR [rax]
  4080ff:	movzx  eax,ax
  408102:	xor    eax,edx
  408104:	imul   edx,eax,0x9e3779b1
  40810a:	mov    rax,QWORD PTR [rbp-0x28]
  40810e:	mov    DWORD PTR [rax+0x14],edx
  408111:	mov    rax,QWORD PTR [rbp-0x28]
  408115:	mov    ecx,DWORD PTR [rax+0x14]
  408118:	movzx  edx,WORD PTR [rbp-0x1e]
  40811c:	mov    rsi,QWORD PTR [rbp-0x10]
  408120:	mov    rax,QWORD PTR [rbp-0x28]
  408124:	mov    rdi,rax
  408127:	call   40779e <flatcc_builder_create_cached_vtable@@Base>
  40812c:	mov    DWORD PTR [rbp-0x1c],eax
  40812f:	cmp    DWORD PTR [rbp-0x1c],0x0
  408133:	jne    40813f <flatcc_builder_end_table@@Base+0xed>
  408135:	mov    eax,0x0
  40813a:	jmp    408256 <flatcc_builder_end_table@@Base+0x204>
  40813f:	movzx  edx,WORD PTR [rbp-0x1e]
  408143:	mov    rax,QWORD PTR [rbp-0x10]
  408147:	mov    esi,0x0
  40814c:	mov    rdi,rax
  40814f:	call   403140 <memset@plt>
  408154:	mov    rax,QWORD PTR [rbp-0x28]
  408158:	mov    rdx,QWORD PTR [rax+0x88]
  40815f:	mov    rax,QWORD PTR [rbp-0x28]
  408163:	mov    rax,QWORD PTR [rax+0x30]
  408167:	mov    eax,DWORD PTR [rax+0x14]
  40816a:	mov    eax,eax
  40816c:	add    rax,rdx
  40816f:	mov    QWORD PTR [rbp-0x8],rax
  408173:	mov    rax,QWORD PTR [rbp-0x28]
  408177:	mov    rax,QWORD PTR [rax]
  40817a:	sub    rax,QWORD PTR [rbp-0x8]
  40817e:	sar    rax,1
  408181:	mov    DWORD PTR [rbp-0x18],eax
  408184:	mov    rax,QWORD PTR [rbp-0x28]
  408188:	movzx  eax,WORD PTR [rax+0xea]
  40818f:	movzx  edx,ax
  408192:	mov    rax,QWORD PTR [rbp-0x28]
  408196:	mov    eax,DWORD PTR [rax+0x20]
  408199:	mov    r10d,eax
  40819c:	mov    rax,QWORD PTR [rbp-0x28]
  4081a0:	mov    rsi,QWORD PTR [rax+0x18]
  4081a4:	mov    r8d,DWORD PTR [rbp-0x18]
  4081a8:	mov    rdi,QWORD PTR [rbp-0x8]
  4081ac:	mov    rax,QWORD PTR [rbp-0x28]
  4081b0:	sub    rsp,0x8
  4081b4:	mov    ecx,DWORD PTR [rbp-0x1c]
  4081b7:	push   rcx
  4081b8:	mov    r9d,r8d
  4081bb:	mov    r8,rdi
  4081be:	mov    ecx,edx
  4081c0:	mov    rdx,r10
  4081c3:	mov    rdi,rax
  4081c6:	call   407a84 <flatcc_builder_create_table@@Base>
  4081cb:	add    rsp,0x10
  4081cf:	mov    DWORD PTR [rbp-0x14],eax
  4081d2:	cmp    DWORD PTR [rbp-0x14],0x0
  4081d6:	jne    4081df <flatcc_builder_end_table@@Base+0x18d>
  4081d8:	mov    eax,0x0
  4081dd:	jmp    408256 <flatcc_builder_end_table@@Base+0x204>
  4081df:	mov    rax,QWORD PTR [rbp-0x28]
  4081e3:	mov    rax,QWORD PTR [rax+0x30]
  4081e7:	mov    edx,DWORD PTR [rax+0x18]
  4081ea:	mov    rax,QWORD PTR [rbp-0x28]
  4081ee:	mov    DWORD PTR [rax+0x14],edx
  4081f1:	mov    rax,QWORD PTR [rbp-0x28]
  4081f5:	mov    rax,QWORD PTR [rax+0x30]
  4081f9:	movzx  eax,WORD PTR [rax+0x1c]
  4081fd:	mov    rdx,QWORD PTR [rbp-0x28]
  408201:	mov    WORD PTR [rdx+0x10],ax
  408205:	mov    rax,QWORD PTR [rbp-0x28]
  408209:	mov    rdx,QWORD PTR [rax+0x58]
  40820d:	mov    rax,QWORD PTR [rbp-0x28]
  408211:	mov    rax,QWORD PTR [rax+0x30]
  408215:	mov    eax,DWORD PTR [rax+0x10]
  408218:	mov    eax,eax
  40821a:	add    rdx,rax
  40821d:	mov    rax,QWORD PTR [rbp-0x28]
  408221:	mov    QWORD PTR [rax+0x8],rdx
  408225:	mov    rax,QWORD PTR [rbp-0x28]
  408229:	mov    rdx,QWORD PTR [rax+0x88]
  408230:	mov    rax,QWORD PTR [rbp-0x28]
  408234:	mov    rax,QWORD PTR [rax+0x30]
  408238:	mov    eax,DWORD PTR [rax+0x14]
  40823b:	mov    eax,eax
  40823d:	add    rdx,rax
  408240:	mov    rax,QWORD PTR [rbp-0x28]
  408244:	mov    QWORD PTR [rax],rdx
  408247:	mov    rax,QWORD PTR [rbp-0x28]
  40824b:	mov    rdi,rax
  40824e:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408253:	mov    eax,DWORD PTR [rbp-0x14]
  408256:	leave  
  408257:	ret    

0000000000408258 <flatcc_builder_create_vector@@Base>:
  408258:	endbr64 
  40825c:	push   rbp
  40825d:	mov    rbp,rsp
  408260:	sub    rsp,0xe0
  408267:	mov    QWORD PTR [rbp-0xb8],rdi
  40826e:	mov    QWORD PTR [rbp-0xc0],rsi
  408275:	mov    QWORD PTR [rbp-0xc8],rdx
  40827c:	mov    QWORD PTR [rbp-0xd0],rcx
  408283:	mov    eax,r8d
  408286:	mov    QWORD PTR [rbp-0xe0],r9
  40828d:	mov    WORD PTR [rbp-0xd4],ax
  408294:	mov    rax,QWORD PTR fs:0x28
  40829d:	mov    QWORD PTR [rbp-0x8],rax
  4082a1:	xor    eax,eax
  4082a3:	mov    rax,QWORD PTR [rbp-0xc8]
  4082aa:	cmp    rax,QWORD PTR [rbp-0xe0]
  4082b1:	jbe    4082ec <flatcc_builder_create_vector@@Base+0x94>
  4082b3:	mov    rax,QWORD PTR [rbp-0xc8]
  4082ba:	cmp    rax,QWORD PTR [rbp-0xe0]
  4082c1:	jbe    4082e2 <flatcc_builder_create_vector@@Base+0x8a>
  4082c3:	lea    rcx,[rip+0x5926]        # 40dbf0 <flatcc_builder_padding_base@@Base+0xa30>
  4082ca:	mov    edx,0x555
  4082cf:	lea    rsi,[rip+0x50ea]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4082d6:	lea    rdi,[rip+0x53e6]        # 40d6c3 <flatcc_builder_padding_base@@Base+0x503>
  4082dd:	call   403130 <__assert_fail@plt>
  4082e2:	mov    eax,0x0
  4082e7:	jmp    4084d4 <flatcc_builder_create_vector@@Base+0x27c>
  4082ec:	lea    rax,[rbp-0xd4]
  4082f3:	mov    esi,0x4
  4082f8:	mov    rdi,rax
  4082fb:	call   4055ad <flatcc_builder_clear@@Base+0xca>
  408300:	movzx  eax,WORD PTR [rbp-0xd4]
  408307:	movzx  edx,ax
  40830a:	mov    rax,QWORD PTR [rbp-0xb8]
  408311:	mov    esi,edx
  408313:	mov    rdi,rax
  408316:	call   40557c <flatcc_builder_clear@@Base+0x99>
  40831b:	mov    rax,QWORD PTR [rbp-0xc8]
  408322:	mov    edx,eax
  408324:	mov    rax,QWORD PTR [rbp-0xd0]
  40832b:	imul   eax,edx
  40832e:	mov    DWORD PTR [rbp-0xa8],eax
  408334:	mov    rax,QWORD PTR [rbp-0xc8]
  40833b:	mov    edi,eax
  40833d:	call   404850 <main@@Base+0x17a>
  408342:	mov    DWORD PTR [rbp-0xac],eax
  408348:	movzx  eax,WORD PTR [rbp-0xd4]
  40834f:	movzx  edx,ax
  408352:	mov    ecx,DWORD PTR [rbp-0xa8]
  408358:	mov    rax,QWORD PTR [rbp-0xb8]
  40835f:	mov    esi,ecx
  408361:	mov    rdi,rax
  408364:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408369:	mov    DWORD PTR [rbp-0xa4],eax
  40836f:	mov    QWORD PTR [rbp-0xa0],0x0
  40837a:	mov    DWORD PTR [rbp-0x98],0x0
  408384:	mov    rax,QWORD PTR [rbp-0xa0]
  40838b:	add    rax,0x4
  40838f:	mov    QWORD PTR [rbp-0xa0],rax
  408396:	mov    eax,DWORD PTR [rbp-0x98]
  40839c:	cdqe   
  40839e:	shl    rax,0x4
  4083a2:	add    rax,rbp
  4083a5:	lea    rdx,[rax-0x90]
  4083ac:	lea    rax,[rbp-0xac]
  4083b3:	mov    QWORD PTR [rdx],rax
  4083b6:	mov    eax,DWORD PTR [rbp-0x98]
  4083bc:	cdqe   
  4083be:	shl    rax,0x4
  4083c2:	add    rax,rbp
  4083c5:	sub    rax,0x88
  4083cb:	mov    QWORD PTR [rax],0x4
  4083d2:	mov    eax,DWORD PTR [rbp-0x98]
  4083d8:	inc    eax
  4083da:	mov    DWORD PTR [rbp-0x98],eax
  4083e0:	cmp    DWORD PTR [rbp-0xa8],0x0
  4083e7:	je     40844e <flatcc_builder_create_vector@@Base+0x1f6>
  4083e9:	mov    rdx,QWORD PTR [rbp-0xa0]
  4083f0:	mov    eax,DWORD PTR [rbp-0xa8]
  4083f6:	add    rax,rdx
  4083f9:	mov    QWORD PTR [rbp-0xa0],rax
  408400:	mov    eax,DWORD PTR [rbp-0x98]
  408406:	cdqe   
  408408:	shl    rax,0x4
  40840c:	add    rax,rbp
  40840f:	lea    rdx,[rax-0x90]
  408416:	mov    rax,QWORD PTR [rbp-0xc0]
  40841d:	mov    QWORD PTR [rdx],rax
  408420:	mov    edx,DWORD PTR [rbp-0x98]
  408426:	mov    eax,DWORD PTR [rbp-0xa8]
  40842c:	movsxd rdx,edx
  40842f:	shl    rdx,0x4
  408433:	add    rdx,rbp
  408436:	sub    rdx,0x88
  40843d:	mov    QWORD PTR [rdx],rax
  408440:	mov    eax,DWORD PTR [rbp-0x98]
  408446:	inc    eax
  408448:	mov    DWORD PTR [rbp-0x98],eax
  40844e:	cmp    DWORD PTR [rbp-0xa4],0x0
  408455:	je     4084bb <flatcc_builder_create_vector@@Base+0x263>
  408457:	mov    rdx,QWORD PTR [rbp-0xa0]
  40845e:	mov    eax,DWORD PTR [rbp-0xa4]
  408464:	add    rax,rdx
  408467:	mov    QWORD PTR [rbp-0xa0],rax
  40846e:	mov    eax,DWORD PTR [rbp-0x98]
  408474:	cdqe   
  408476:	shl    rax,0x4
  40847a:	add    rax,rbp
  40847d:	sub    rax,0x90
  408483:	mov    rdx,0x40d1c0
  40848a:	mov    QWORD PTR [rax],rdx
  40848d:	mov    edx,DWORD PTR [rbp-0x98]
  408493:	mov    eax,DWORD PTR [rbp-0xa4]
  408499:	movsxd rdx,edx
  40849c:	shl    rdx,0x4
  4084a0:	add    rdx,rbp
  4084a3:	sub    rdx,0x88
  4084aa:	mov    QWORD PTR [rdx],rax
  4084ad:	mov    eax,DWORD PTR [rbp-0x98]
  4084b3:	inc    eax
  4084b5:	mov    DWORD PTR [rbp-0x98],eax
  4084bb:	lea    rdx,[rbp-0xa0]
  4084c2:	mov    rax,QWORD PTR [rbp-0xb8]
  4084c9:	mov    rsi,rdx
  4084cc:	mov    rdi,rax
  4084cf:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4084d4:	mov    rcx,QWORD PTR [rbp-0x8]
  4084d8:	xor    rcx,QWORD PTR fs:0x28
  4084e1:	je     4084e8 <flatcc_builder_create_vector@@Base+0x290>
  4084e3:	call   403120 <__stack_chk_fail@plt>
  4084e8:	leave  
  4084e9:	ret    

00000000004084ea <flatcc_builder_end_vector@@Base>:
  4084ea:	endbr64 
  4084ee:	push   rbp
  4084ef:	mov    rbp,rsp
  4084f2:	sub    rsp,0x20
  4084f6:	mov    QWORD PTR [rbp-0x18],rdi
  4084fa:	mov    rax,QWORD PTR [rbp-0x18]
  4084fe:	mov    rax,QWORD PTR [rax+0x30]
  408502:	movzx  eax,WORD PTR [rax+0xe]
  408506:	cmp    ax,0x4
  40850a:	je     40852b <flatcc_builder_end_vector@@Base+0x41>
  40850c:	lea    rcx,[rip+0x56fd]        # 40dc10 <flatcc_builder_padding_base@@Base+0xa50>
  408513:	mov    edx,0x578
  408518:	lea    rsi,[rip+0x4ea1]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40851f:	lea    rdi,[rip+0x4fe2]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  408526:	call   403130 <__assert_fail@plt>
  40852b:	mov    rax,QWORD PTR [rbp-0x18]
  40852f:	mov    rax,QWORD PTR [rax+0x30]
  408533:	mov    eax,DWORD PTR [rax+0x18]
  408536:	mov    r8d,eax
  408539:	mov    rax,QWORD PTR [rbp-0x18]
  40853d:	movzx  eax,WORD PTR [rax+0xea]
  408544:	movzx  edx,ax
  408547:	mov    rax,QWORD PTR [rbp-0x18]
  40854b:	mov    rax,QWORD PTR [rax+0x30]
  40854f:	mov    eax,DWORD PTR [rax+0x10]
  408552:	mov    ecx,eax
  408554:	mov    rax,QWORD PTR [rbp-0x18]
  408558:	mov    rax,QWORD PTR [rax+0x30]
  40855c:	mov    eax,DWORD PTR [rax+0x14]
  40855f:	mov    edi,eax
  408561:	mov    rax,QWORD PTR [rbp-0x18]
  408565:	mov    rsi,QWORD PTR [rax+0x18]
  408569:	mov    rax,QWORD PTR [rbp-0x18]
  40856d:	mov    r9,r8
  408570:	mov    r8d,edx
  408573:	mov    rdx,rdi
  408576:	mov    rdi,rax
  408579:	call   408258 <flatcc_builder_create_vector@@Base>
  40857e:	mov    DWORD PTR [rbp-0x4],eax
  408581:	cmp    DWORD PTR [rbp-0x4],0x0
  408585:	jne    40858e <flatcc_builder_end_vector@@Base+0xa4>
  408587:	mov    eax,0x0
  40858c:	jmp    40859d <flatcc_builder_end_vector@@Base+0xb3>
  40858e:	mov    rax,QWORD PTR [rbp-0x18]
  408592:	mov    rdi,rax
  408595:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40859a:	mov    eax,DWORD PTR [rbp-0x4]
  40859d:	leave  
  40859e:	ret    

000000000040859f <flatcc_builder_vector_count@@Base>:
  40859f:	endbr64 
  4085a3:	push   rbp
  4085a4:	mov    rbp,rsp
  4085a7:	mov    QWORD PTR [rbp-0x8],rdi
  4085ab:	mov    rax,QWORD PTR [rbp-0x8]
  4085af:	mov    rax,QWORD PTR [rax+0x30]
  4085b3:	mov    eax,DWORD PTR [rax+0x14]
  4085b6:	mov    eax,eax
  4085b8:	pop    rbp
  4085b9:	ret    

00000000004085ba <flatcc_builder_vector_edit@@Base>:
  4085ba:	endbr64 
  4085be:	push   rbp
  4085bf:	mov    rbp,rsp
  4085c2:	mov    QWORD PTR [rbp-0x8],rdi
  4085c6:	mov    rax,QWORD PTR [rbp-0x8]
  4085ca:	mov    rax,QWORD PTR [rax+0x18]
  4085ce:	pop    rbp
  4085cf:	ret    
  4085d0:	endbr64 
  4085d4:	push   rbp
  4085d5:	mov    rbp,rsp
  4085d8:	sub    rsp,0xe0
  4085df:	mov    QWORD PTR [rbp-0xc8],rdi
  4085e6:	mov    QWORD PTR [rbp-0xd0],rsi
  4085ed:	mov    QWORD PTR [rbp-0xd8],rdx
  4085f4:	mov    QWORD PTR [rbp-0xe0],rcx
  4085fb:	mov    rax,QWORD PTR fs:0x28
  408604:	mov    QWORD PTR [rbp-0x8],rax
  408608:	xor    eax,eax
  40860a:	mov    rax,QWORD PTR [rbp-0xd8]
  408611:	cmp    eax,0x3fffffff
  408616:	jbe    408622 <flatcc_builder_vector_edit@@Base+0x68>
  408618:	mov    eax,0x0
  40861d:	jmp    40894b <flatcc_builder_vector_edit@@Base+0x391>
  408622:	mov    rax,QWORD PTR [rbp-0xc8]
  408629:	mov    esi,0x4
  40862e:	mov    rdi,rax
  408631:	call   40557c <flatcc_builder_clear@@Base+0x99>
  408636:	mov    rax,QWORD PTR [rbp-0xd8]
  40863d:	shl    eax,0x2
  408640:	mov    DWORD PTR [rbp-0xb0],eax
  408646:	mov    rax,QWORD PTR [rbp-0xd8]
  40864d:	mov    edi,eax
  40864f:	call   404850 <main@@Base+0x17a>
  408654:	mov    DWORD PTR [rbp-0xb8],eax
  40865a:	mov    ecx,DWORD PTR [rbp-0xb0]
  408660:	mov    rax,QWORD PTR [rbp-0xc8]
  408667:	mov    edx,0x4
  40866c:	mov    esi,ecx
  40866e:	mov    rdi,rax
  408671:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408676:	mov    DWORD PTR [rbp-0xac],eax
  40867c:	mov    QWORD PTR [rbp-0xa0],0x0
  408687:	mov    DWORD PTR [rbp-0x98],0x0
  408691:	mov    rax,QWORD PTR [rbp-0xa0]
  408698:	add    rax,0x4
  40869c:	mov    QWORD PTR [rbp-0xa0],rax
  4086a3:	mov    eax,DWORD PTR [rbp-0x98]
  4086a9:	cdqe   
  4086ab:	shl    rax,0x4
  4086af:	add    rax,rbp
  4086b2:	lea    rdx,[rax-0x90]
  4086b9:	lea    rax,[rbp-0xb8]
  4086c0:	mov    QWORD PTR [rdx],rax
  4086c3:	mov    eax,DWORD PTR [rbp-0x98]
  4086c9:	cdqe   
  4086cb:	shl    rax,0x4
  4086cf:	add    rax,rbp
  4086d2:	sub    rax,0x88
  4086d8:	mov    QWORD PTR [rax],0x4
  4086df:	mov    eax,DWORD PTR [rbp-0x98]
  4086e5:	inc    eax
  4086e7:	mov    DWORD PTR [rbp-0x98],eax
  4086ed:	cmp    DWORD PTR [rbp-0xb0],0x0
  4086f4:	je     40875b <flatcc_builder_vector_edit@@Base+0x1a1>
  4086f6:	mov    rdx,QWORD PTR [rbp-0xa0]
  4086fd:	mov    eax,DWORD PTR [rbp-0xb0]
  408703:	add    rax,rdx
  408706:	mov    QWORD PTR [rbp-0xa0],rax
  40870d:	mov    eax,DWORD PTR [rbp-0x98]
  408713:	cdqe   
  408715:	shl    rax,0x4
  408719:	add    rax,rbp
  40871c:	lea    rdx,[rax-0x90]
  408723:	mov    rax,QWORD PTR [rbp-0xd0]
  40872a:	mov    QWORD PTR [rdx],rax
  40872d:	mov    edx,DWORD PTR [rbp-0x98]
  408733:	mov    eax,DWORD PTR [rbp-0xb0]
  408739:	movsxd rdx,edx
  40873c:	shl    rdx,0x4
  408740:	add    rdx,rbp
  408743:	sub    rdx,0x88
  40874a:	mov    QWORD PTR [rdx],rax
  40874d:	mov    eax,DWORD PTR [rbp-0x98]
  408753:	inc    eax
  408755:	mov    DWORD PTR [rbp-0x98],eax
  40875b:	cmp    DWORD PTR [rbp-0xac],0x0
  408762:	je     4087c8 <flatcc_builder_vector_edit@@Base+0x20e>
  408764:	mov    rdx,QWORD PTR [rbp-0xa0]
  40876b:	mov    eax,DWORD PTR [rbp-0xac]
  408771:	add    rax,rdx
  408774:	mov    QWORD PTR [rbp-0xa0],rax
  40877b:	mov    eax,DWORD PTR [rbp-0x98]
  408781:	cdqe   
  408783:	shl    rax,0x4
  408787:	add    rax,rbp
  40878a:	sub    rax,0x90
  408790:	mov    rdx,0x40d1c0
  408797:	mov    QWORD PTR [rax],rdx
  40879a:	mov    edx,DWORD PTR [rbp-0x98]
  4087a0:	mov    eax,DWORD PTR [rbp-0xac]
  4087a6:	movsxd rdx,edx
  4087a9:	shl    rdx,0x4
  4087ad:	add    rdx,rbp
  4087b0:	sub    rdx,0x88
  4087b7:	mov    QWORD PTR [rdx],rax
  4087ba:	mov    eax,DWORD PTR [rbp-0x98]
  4087c0:	inc    eax
  4087c2:	mov    DWORD PTR [rbp-0x98],eax
  4087c8:	mov    rax,QWORD PTR [rbp-0xc8]
  4087cf:	mov    eax,DWORD PTR [rax+0xf0]
  4087d5:	mov    edx,eax
  4087d7:	mov    rax,QWORD PTR [rbp-0xa0]
  4087de:	sub    edx,eax
  4087e0:	mov    eax,edx
  4087e2:	mov    DWORD PTR [rbp-0xa8],eax
  4087e8:	mov    DWORD PTR [rbp-0xb4],0x0
  4087f2:	jmp    40891f <flatcc_builder_vector_edit@@Base+0x365>
  4087f7:	mov    eax,DWORD PTR [rbp-0xb4]
  4087fd:	lea    rdx,[rax*4+0x0]
  408805:	mov    rax,QWORD PTR [rbp-0xd0]
  40880c:	add    rax,rdx
  40880f:	mov    eax,DWORD PTR [rax]
  408811:	test   eax,eax
  408813:	je     4088ba <flatcc_builder_vector_edit@@Base+0x300>
  408819:	mov    eax,DWORD PTR [rbp-0xb4]
  40881f:	lea    rdx,[rax*4+0x0]
  408827:	mov    rax,QWORD PTR [rbp-0xd0]
  40882e:	add    rax,rdx
  408831:	mov    eax,DWORD PTR [rax]
  408833:	sub    eax,DWORD PTR [rbp-0xa8]
  408839:	mov    edx,DWORD PTR [rbp-0xb4]
  40883f:	shl    edx,0x2
  408842:	sub    eax,edx
  408844:	sub    eax,0x4
  408847:	mov    DWORD PTR [rbp-0xa4],eax
  40884d:	mov    eax,DWORD PTR [rbp-0xa4]
  408853:	mov    edi,eax
  408855:	call   404850 <main@@Base+0x17a>
  40885a:	mov    edx,eax
  40885c:	mov    eax,DWORD PTR [rbp-0xb4]
  408862:	lea    rcx,[rax*4+0x0]
  40886a:	mov    rax,QWORD PTR [rbp-0xd0]
  408871:	add    rax,rcx
  408874:	mov    DWORD PTR [rax],edx
  408876:	cmp    QWORD PTR [rbp-0xe0],0x0
  40887e:	je     408919 <flatcc_builder_vector_edit@@Base+0x35f>
  408884:	mov    edx,DWORD PTR [rbp-0xb4]
  40888a:	mov    rax,QWORD PTR [rbp-0xe0]
  408891:	add    rax,rdx
  408894:	movzx  eax,BYTE PTR [rax]
  408897:	test   al,al
  408899:	jne    408919 <flatcc_builder_vector_edit@@Base+0x35f>
  40889b:	lea    rcx,[rip+0x538e]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  4088a2:	mov    edx,0x5b1
  4088a7:	lea    rsi,[rip+0x4b12]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4088ae:	lea    rdi,[rip+0x4e21]        # 40d6d6 <flatcc_builder_padding_base@@Base+0x516>
  4088b5:	call   403130 <__assert_fail@plt>
  4088ba:	cmp    QWORD PTR [rbp-0xe0],0x0
  4088c2:	je     4088fa <flatcc_builder_vector_edit@@Base+0x340>
  4088c4:	mov    edx,DWORD PTR [rbp-0xb4]
  4088ca:	mov    rax,QWORD PTR [rbp-0xe0]
  4088d1:	add    rax,rdx
  4088d4:	movzx  eax,BYTE PTR [rax]
  4088d7:	test   al,al
  4088d9:	je     408919 <flatcc_builder_vector_edit@@Base+0x35f>
  4088db:	lea    rcx,[rip+0x534e]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  4088e2:	mov    edx,0x5b5
  4088e7:	lea    rsi,[rip+0x4ad2]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4088ee:	lea    rdi,[rip+0x4def]        # 40d6e4 <flatcc_builder_padding_base@@Base+0x524>
  4088f5:	call   403130 <__assert_fail@plt>
  4088fa:	lea    rcx,[rip+0x532f]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  408901:	mov    edx,0x5b7
  408906:	lea    rsi,[rip+0x4ab3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40890d:	lea    rdi,[rip+0x4b0c]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  408914:	call   403130 <__assert_fail@plt>
  408919:	inc    DWORD PTR [rbp-0xb4]
  40891f:	mov    rax,QWORD PTR [rbp-0xd8]
  408926:	cmp    DWORD PTR [rbp-0xb4],eax
  40892c:	jb     4087f7 <flatcc_builder_vector_edit@@Base+0x23d>
  408932:	lea    rdx,[rbp-0xa0]
  408939:	mov    rax,QWORD PTR [rbp-0xc8]
  408940:	mov    rsi,rdx
  408943:	mov    rdi,rax
  408946:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40894b:	mov    rsi,QWORD PTR [rbp-0x8]
  40894f:	xor    rsi,QWORD PTR fs:0x28
  408958:	je     40895f <flatcc_builder_vector_edit@@Base+0x3a5>
  40895a:	call   403120 <__stack_chk_fail@plt>
  40895f:	leave  
  408960:	ret    

0000000000408961 <flatcc_builder_create_offset_vector_direct@@Base>:
  408961:	endbr64 
  408965:	push   rbp
  408966:	mov    rbp,rsp
  408969:	sub    rsp,0x20
  40896d:	mov    QWORD PTR [rbp-0x8],rdi
  408971:	mov    QWORD PTR [rbp-0x10],rsi
  408975:	mov    QWORD PTR [rbp-0x18],rdx
  408979:	mov    rdx,QWORD PTR [rbp-0x18]
  40897d:	mov    rsi,QWORD PTR [rbp-0x10]
  408981:	mov    rax,QWORD PTR [rbp-0x8]
  408985:	mov    ecx,0x0
  40898a:	mov    rdi,rax
  40898d:	call   4085d0 <flatcc_builder_vector_edit@@Base+0x16>
  408992:	leave  
  408993:	ret    

0000000000408994 <flatcc_builder_end_offset_vector@@Base>:
  408994:	endbr64 
  408998:	push   rbp
  408999:	mov    rbp,rsp
  40899c:	sub    rsp,0x20
  4089a0:	mov    QWORD PTR [rbp-0x18],rdi
  4089a4:	mov    rax,QWORD PTR [rbp-0x18]
  4089a8:	mov    rax,QWORD PTR [rax+0x30]
  4089ac:	movzx  eax,WORD PTR [rax+0xe]
  4089b0:	cmp    ax,0x5
  4089b4:	je     4089d5 <flatcc_builder_end_offset_vector@@Base+0x41>
  4089b6:	lea    rcx,[rip+0x52a3]        # 40dc60 <flatcc_builder_padding_base@@Base+0xaa0>
  4089bd:	mov    edx,0x5c8
  4089c2:	lea    rsi,[rip+0x49f7]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4089c9:	lea    rdi,[rip+0x4ba8]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  4089d0:	call   403130 <__assert_fail@plt>
  4089d5:	mov    rax,QWORD PTR [rbp-0x18]
  4089d9:	mov    rax,QWORD PTR [rax+0x30]
  4089dd:	mov    eax,DWORD PTR [rax+0x14]
  4089e0:	mov    edx,eax
  4089e2:	mov    rax,QWORD PTR [rbp-0x18]
  4089e6:	mov    rcx,QWORD PTR [rax+0x18]
  4089ea:	mov    rax,QWORD PTR [rbp-0x18]
  4089ee:	mov    rsi,rcx
  4089f1:	mov    rdi,rax
  4089f4:	call   408961 <flatcc_builder_create_offset_vector_direct@@Base>
  4089f9:	mov    DWORD PTR [rbp-0x4],eax
  4089fc:	cmp    DWORD PTR [rbp-0x4],0x0
  408a00:	jne    408a09 <flatcc_builder_end_offset_vector@@Base+0x75>
  408a02:	mov    eax,0x0
  408a07:	jmp    408a18 <flatcc_builder_end_offset_vector@@Base+0x84>
  408a09:	mov    rax,QWORD PTR [rbp-0x18]
  408a0d:	mov    rdi,rax
  408a10:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408a15:	mov    eax,DWORD PTR [rbp-0x4]
  408a18:	leave  
  408a19:	ret    

0000000000408a1a <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408a1a:	endbr64 
  408a1e:	push   rbp
  408a1f:	mov    rbp,rsp
  408a22:	sub    rsp,0x20
  408a26:	mov    QWORD PTR [rbp-0x18],rdi
  408a2a:	mov    QWORD PTR [rbp-0x20],rsi
  408a2e:	mov    rax,QWORD PTR [rbp-0x18]
  408a32:	mov    rax,QWORD PTR [rax+0x30]
  408a36:	movzx  eax,WORD PTR [rax+0xe]
  408a3a:	cmp    ax,0x5
  408a3e:	je     408a5f <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  408a40:	lea    rcx,[rip+0x5259]        # 40dca0 <flatcc_builder_padding_base@@Base+0xae0>
  408a47:	mov    edx,0x5d5
  408a4c:	lea    rsi,[rip+0x496d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408a53:	lea    rdi,[rip+0x4b1e]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  408a5a:	call   403130 <__assert_fail@plt>
  408a5f:	mov    rax,QWORD PTR [rbp-0x18]
  408a63:	mov    rax,QWORD PTR [rax+0x30]
  408a67:	mov    eax,DWORD PTR [rax+0x14]
  408a6a:	mov    edi,eax
  408a6c:	mov    rax,QWORD PTR [rbp-0x18]
  408a70:	mov    rsi,QWORD PTR [rax+0x18]
  408a74:	mov    rdx,QWORD PTR [rbp-0x20]
  408a78:	mov    rax,QWORD PTR [rbp-0x18]
  408a7c:	mov    rcx,rdx
  408a7f:	mov    rdx,rdi
  408a82:	mov    rdi,rax
  408a85:	call   4085d0 <flatcc_builder_vector_edit@@Base+0x16>
  408a8a:	mov    DWORD PTR [rbp-0x4],eax
  408a8d:	cmp    DWORD PTR [rbp-0x4],0x0
  408a91:	jne    408a9a <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  408a93:	mov    eax,0x0
  408a98:	jmp    408aa9 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  408a9a:	mov    rax,QWORD PTR [rbp-0x18]
  408a9e:	mov    rdi,rax
  408aa1:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408aa6:	mov    eax,DWORD PTR [rbp-0x4]
  408aa9:	leave  
  408aaa:	ret    

0000000000408aab <flatcc_builder_offset_vector_edit@@Base>:
  408aab:	endbr64 
  408aaf:	push   rbp
  408ab0:	mov    rbp,rsp
  408ab3:	mov    QWORD PTR [rbp-0x8],rdi
  408ab7:	mov    rax,QWORD PTR [rbp-0x8]
  408abb:	mov    rax,QWORD PTR [rax+0x18]
  408abf:	pop    rbp
  408ac0:	ret    

0000000000408ac1 <flatcc_builder_offset_vector_count@@Base>:
  408ac1:	endbr64 
  408ac5:	push   rbp
  408ac6:	mov    rbp,rsp
  408ac9:	mov    QWORD PTR [rbp-0x8],rdi
  408acd:	mov    rax,QWORD PTR [rbp-0x8]
  408ad1:	mov    rax,QWORD PTR [rax+0x30]
  408ad5:	mov    eax,DWORD PTR [rax+0x14]
  408ad8:	mov    eax,eax
  408ada:	pop    rbp
  408adb:	ret    

0000000000408adc <flatcc_builder_table_add_union@@Base>:
  408adc:	endbr64 
  408ae0:	push   rbp
  408ae1:	mov    rbp,rsp
  408ae4:	sub    rsp,0x30
  408ae8:	mov    QWORD PTR [rbp-0x18],rdi
  408aec:	mov    DWORD PTR [rbp-0x1c],esi
  408aef:	mov    QWORD PTR [rbp-0x24],rdx
  408af3:	mov    rax,QWORD PTR [rbp-0x18]
  408af7:	mov    rax,QWORD PTR [rax+0x30]
  408afb:	movzx  eax,WORD PTR [rax+0xe]
  408aff:	cmp    ax,0x3
  408b03:	je     408b24 <flatcc_builder_table_add_union@@Base+0x48>
  408b05:	lea    rcx,[rip+0x51c4]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408b0c:	mov    edx,0x5ee
  408b11:	lea    rsi,[rip+0x48a8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b18:	lea    rdi,[rip+0x4b79]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408b1f:	call   403130 <__assert_fail@plt>
  408b24:	movzx  eax,BYTE PTR [rbp-0x24]
  408b28:	test   al,al
  408b2a:	jne    408b6b <flatcc_builder_table_add_union@@Base+0x8f>
  408b2c:	mov    eax,DWORD PTR [rbp-0x20]
  408b2f:	test   eax,eax
  408b31:	je     408b6b <flatcc_builder_table_add_union@@Base+0x8f>
  408b33:	movzx  eax,BYTE PTR [rbp-0x24]
  408b37:	test   al,al
  408b39:	jne    408b61 <flatcc_builder_table_add_union@@Base+0x85>
  408b3b:	mov    eax,DWORD PTR [rbp-0x20]
  408b3e:	test   eax,eax
  408b40:	je     408b61 <flatcc_builder_table_add_union@@Base+0x85>
  408b42:	lea    rcx,[rip+0x5187]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408b49:	mov    edx,0x5ef
  408b4e:	lea    rsi,[rip+0x486b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b55:	lea    rdi,[rip+0x4b9c]        # 40d6f8 <flatcc_builder_padding_base@@Base+0x538>
  408b5c:	call   403130 <__assert_fail@plt>
  408b61:	mov    eax,0xffffffff
  408b66:	jmp    408c31 <flatcc_builder_table_add_union@@Base+0x155>
  408b6b:	mov    eax,DWORD PTR [rbp-0x20]
  408b6e:	test   eax,eax
  408b70:	je     408bc4 <flatcc_builder_table_add_union@@Base+0xe8>
  408b72:	mov    edx,DWORD PTR [rbp-0x1c]
  408b75:	mov    rax,QWORD PTR [rbp-0x18]
  408b79:	mov    esi,edx
  408b7b:	mov    rdi,rax
  408b7e:	call   4098cd <flatcc_builder_table_add_offset@@Base>
  408b83:	mov    QWORD PTR [rbp-0x10],rax
  408b87:	cmp    QWORD PTR [rbp-0x10],0x0
  408b8c:	jne    408bbb <flatcc_builder_table_add_union@@Base+0xdf>
  408b8e:	cmp    QWORD PTR [rbp-0x10],0x0
  408b93:	jne    408bb4 <flatcc_builder_table_add_union@@Base+0xd8>
  408b95:	lea    rcx,[rip+0x5134]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408b9c:	mov    edx,0x5f2
  408ba1:	lea    rsi,[rip+0x4818]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408ba8:	lea    rdi,[rip+0x4b6b]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408baf:	call   403130 <__assert_fail@plt>
  408bb4:	mov    eax,0xffffffff
  408bb9:	jmp    408c31 <flatcc_builder_table_add_union@@Base+0x155>
  408bbb:	mov    edx,DWORD PTR [rbp-0x20]
  408bbe:	mov    rax,QWORD PTR [rbp-0x10]
  408bc2:	mov    DWORD PTR [rax],edx
  408bc4:	mov    eax,DWORD PTR [rbp-0x1c]
  408bc7:	lea    esi,[rax-0x1]
  408bca:	mov    rax,QWORD PTR [rbp-0x18]
  408bce:	mov    ecx,0x1
  408bd3:	mov    edx,0x1
  408bd8:	mov    rdi,rax
  408bdb:	call   4096f3 <flatcc_builder_table_add@@Base>
  408be0:	mov    QWORD PTR [rbp-0x8],rax
  408be4:	cmp    QWORD PTR [rbp-0x8],0x0
  408be9:	jne    408c18 <flatcc_builder_table_add_union@@Base+0x13c>
  408beb:	cmp    QWORD PTR [rbp-0x8],0x0
  408bf0:	jne    408c11 <flatcc_builder_table_add_union@@Base+0x135>
  408bf2:	lea    rcx,[rip+0x50d7]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408bf9:	mov    edx,0x5f6
  408bfe:	lea    rsi,[rip+0x47bb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408c05:	lea    rdi,[rip+0x4b18]        # 40d724 <flatcc_builder_padding_base@@Base+0x564>
  408c0c:	call   403130 <__assert_fail@plt>
  408c11:	mov    eax,0xffffffff
  408c16:	jmp    408c31 <flatcc_builder_table_add_union@@Base+0x155>
  408c18:	movzx  eax,BYTE PTR [rbp-0x24]
  408c1c:	movzx  eax,al
  408c1f:	mov    edi,eax
  408c21:	call   40485c <main@@Base+0x186>
  408c26:	mov    rdx,QWORD PTR [rbp-0x8]
  408c2a:	mov    BYTE PTR [rdx],al
  408c2c:	mov    eax,0x0
  408c31:	leave  
  408c32:	ret    

0000000000408c33 <flatcc_builder_table_add_union_vector@@Base>:
  408c33:	endbr64 
  408c37:	push   rbp
  408c38:	mov    rbp,rsp
  408c3b:	sub    rsp,0x30
  408c3f:	mov    QWORD PTR [rbp-0x18],rdi
  408c43:	mov    DWORD PTR [rbp-0x1c],esi
  408c46:	mov    QWORD PTR [rbp-0x24],rdx
  408c4a:	mov    rax,QWORD PTR [rbp-0x18]
  408c4e:	mov    rax,QWORD PTR [rax+0x30]
  408c52:	movzx  eax,WORD PTR [rax+0xe]
  408c56:	cmp    ax,0x3
  408c5a:	je     408c7b <flatcc_builder_table_add_union_vector@@Base+0x48>
  408c5c:	lea    rcx,[rip+0x509d]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408c63:	mov    edx,0x600
  408c68:	lea    rsi,[rip+0x4751]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408c6f:	lea    rdi,[rip+0x4a22]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408c76:	call   403130 <__assert_fail@plt>
  408c7b:	mov    eax,DWORD PTR [rbp-0x24]
  408c7e:	test   eax,eax
  408c80:	sete   dl
  408c83:	mov    eax,DWORD PTR [rbp-0x20]
  408c86:	test   eax,eax
  408c88:	sete   al
  408c8b:	xor    eax,edx
  408c8d:	test   al,al
  408c8f:	je     408cd0 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  408c91:	mov    eax,DWORD PTR [rbp-0x24]
  408c94:	test   eax,eax
  408c96:	setne  dl
  408c99:	mov    eax,DWORD PTR [rbp-0x20]
  408c9c:	test   eax,eax
  408c9e:	sete   al
  408ca1:	xor    eax,edx
  408ca3:	test   al,al
  408ca5:	jne    408cc6 <flatcc_builder_table_add_union_vector@@Base+0x93>
  408ca7:	lea    rcx,[rip+0x5052]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408cae:	mov    edx,0x601
  408cb3:	lea    rsi,[rip+0x4706]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408cba:	lea    rdi,[rip+0x4a6f]        # 40d730 <flatcc_builder_padding_base@@Base+0x570>
  408cc1:	call   403130 <__assert_fail@plt>
  408cc6:	mov    eax,0xffffffff
  408ccb:	jmp    408d87 <flatcc_builder_table_add_union_vector@@Base+0x154>
  408cd0:	mov    eax,DWORD PTR [rbp-0x24]
  408cd3:	test   eax,eax
  408cd5:	je     408d82 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  408cdb:	mov    eax,DWORD PTR [rbp-0x1c]
  408cde:	lea    edx,[rax-0x1]
  408ce1:	mov    rax,QWORD PTR [rbp-0x18]
  408ce5:	mov    esi,edx
  408ce7:	mov    rdi,rax
  408cea:	call   4098cd <flatcc_builder_table_add_offset@@Base>
  408cef:	mov    QWORD PTR [rbp-0x8],rax
  408cf3:	cmp    QWORD PTR [rbp-0x8],0x0
  408cf8:	jne    408d27 <flatcc_builder_table_add_union_vector@@Base+0xf4>
  408cfa:	cmp    QWORD PTR [rbp-0x8],0x0
  408cff:	jne    408d20 <flatcc_builder_table_add_union_vector@@Base+0xed>
  408d01:	lea    rcx,[rip+0x4ff8]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408d08:	mov    edx,0x604
  408d0d:	lea    rsi,[rip+0x46ac]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408d14:	lea    rdi,[rip+0x49ff]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408d1b:	call   403130 <__assert_fail@plt>
  408d20:	mov    eax,0xffffffff
  408d25:	jmp    408d87 <flatcc_builder_table_add_union_vector@@Base+0x154>
  408d27:	mov    edx,DWORD PTR [rbp-0x24]
  408d2a:	mov    rax,QWORD PTR [rbp-0x8]
  408d2e:	mov    DWORD PTR [rax],edx
  408d30:	mov    edx,DWORD PTR [rbp-0x1c]
  408d33:	mov    rax,QWORD PTR [rbp-0x18]
  408d37:	mov    esi,edx
  408d39:	mov    rdi,rax
  408d3c:	call   4098cd <flatcc_builder_table_add_offset@@Base>
  408d41:	mov    QWORD PTR [rbp-0x8],rax
  408d45:	cmp    QWORD PTR [rbp-0x8],0x0
  408d4a:	jne    408d79 <flatcc_builder_table_add_union_vector@@Base+0x146>
  408d4c:	cmp    QWORD PTR [rbp-0x8],0x0
  408d51:	jne    408d72 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  408d53:	lea    rcx,[rip+0x4fa6]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408d5a:	mov    edx,0x608
  408d5f:	lea    rsi,[rip+0x465a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408d66:	lea    rdi,[rip+0x49ad]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408d6d:	call   403130 <__assert_fail@plt>
  408d72:	mov    eax,0xffffffff
  408d77:	jmp    408d87 <flatcc_builder_table_add_union_vector@@Base+0x154>
  408d79:	mov    edx,DWORD PTR [rbp-0x20]
  408d7c:	mov    rax,QWORD PTR [rbp-0x8]
  408d80:	mov    DWORD PTR [rax],edx
  408d82:	mov    eax,0x0
  408d87:	leave  
  408d88:	ret    

0000000000408d89 <flatcc_builder_create_union_vector@@Base>:
  408d89:	endbr64 
  408d8d:	push   rbp
  408d8e:	mov    rbp,rsp
  408d91:	sub    rsp,0x40
  408d95:	mov    QWORD PTR [rbp-0x28],rdi
  408d99:	mov    QWORD PTR [rbp-0x30],rsi
  408d9d:	mov    QWORD PTR [rbp-0x38],rdx
  408da1:	mov    DWORD PTR [rbp-0x8],0x0
  408da8:	mov    DWORD PTR [rbp-0x4],0x0
  408daf:	mov    rax,QWORD PTR [rbp-0x28]
  408db3:	mov    rdi,rax
  408db6:	call   407397 <flatcc_builder_start_offset_vector@@Base>
  408dbb:	test   eax,eax
  408dbd:	je     408dc8 <flatcc_builder_create_union_vector@@Base+0x3f>
  408dbf:	mov    rax,QWORD PTR [rbp-0x8]
  408dc3:	jmp    408eb3 <flatcc_builder_create_union_vector@@Base+0x12a>
  408dc8:	mov    rdx,QWORD PTR [rbp-0x38]
  408dcc:	mov    rax,QWORD PTR [rbp-0x28]
  408dd0:	mov    rsi,rdx
  408dd3:	mov    rdi,rax
  408dd6:	call   406d76 <flatcc_builder_extend_offset_vector@@Base>
  408ddb:	test   rax,rax
  408dde:	jne    408de9 <flatcc_builder_create_union_vector@@Base+0x60>
  408de0:	mov    rax,QWORD PTR [rbp-0x8]
  408de4:	jmp    408eb3 <flatcc_builder_create_union_vector@@Base+0x12a>
  408de9:	mov    rax,QWORD PTR [rbp-0x38]
  408ded:	mov    edx,eax
  408def:	mov    rax,QWORD PTR [rbp-0x28]
  408df3:	mov    esi,edx
  408df5:	mov    rdi,rax
  408df8:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  408dfd:	mov    QWORD PTR [rbp-0x18],rax
  408e01:	cmp    QWORD PTR [rbp-0x18],0x0
  408e06:	jne    408e11 <flatcc_builder_create_union_vector@@Base+0x88>
  408e08:	mov    rax,QWORD PTR [rbp-0x8]
  408e0c:	jmp    408eb3 <flatcc_builder_create_union_vector@@Base+0x12a>
  408e11:	mov    rax,QWORD PTR [rbp-0x28]
  408e15:	mov    rdi,rax
  408e18:	call   408aab <flatcc_builder_offset_vector_edit@@Base>
  408e1d:	mov    QWORD PTR [rbp-0x10],rax
  408e21:	mov    QWORD PTR [rbp-0x20],0x0
  408e29:	jmp    408e7d <flatcc_builder_create_union_vector@@Base+0xf4>
  408e2b:	mov    rax,QWORD PTR [rbp-0x20]
  408e2f:	lea    rdx,[rax*8+0x0]
  408e37:	mov    rax,QWORD PTR [rbp-0x30]
  408e3b:	add    rax,rdx
  408e3e:	mov    rcx,QWORD PTR [rbp-0x18]
  408e42:	mov    rdx,QWORD PTR [rbp-0x20]
  408e46:	add    rdx,rcx
  408e49:	movzx  eax,BYTE PTR [rax]
  408e4c:	mov    BYTE PTR [rdx],al
  408e4e:	mov    rax,QWORD PTR [rbp-0x20]
  408e52:	lea    rdx,[rax*8+0x0]
  408e5a:	mov    rax,QWORD PTR [rbp-0x30]
  408e5e:	add    rax,rdx
  408e61:	mov    rdx,QWORD PTR [rbp-0x20]
  408e65:	lea    rcx,[rdx*4+0x0]
  408e6d:	mov    rdx,QWORD PTR [rbp-0x10]
  408e71:	add    rdx,rcx
  408e74:	mov    eax,DWORD PTR [rax+0x4]
  408e77:	mov    DWORD PTR [rdx],eax
  408e79:	inc    QWORD PTR [rbp-0x20]
  408e7d:	mov    rax,QWORD PTR [rbp-0x20]
  408e81:	cmp    rax,QWORD PTR [rbp-0x38]
  408e85:	jb     408e2b <flatcc_builder_create_union_vector@@Base+0xa2>
  408e87:	mov    rcx,QWORD PTR [rbp-0x38]
  408e8b:	mov    rdx,QWORD PTR [rbp-0x10]
  408e8f:	mov    rsi,QWORD PTR [rbp-0x18]
  408e93:	mov    rax,QWORD PTR [rbp-0x28]
  408e97:	mov    rdi,rax
  408e9a:	call   408eb5 <flatcc_builder_create_union_vector_direct@@Base>
  408e9f:	mov    QWORD PTR [rbp-0x8],rax
  408ea3:	mov    rax,QWORD PTR [rbp-0x28]
  408ea7:	mov    rdi,rax
  408eaa:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408eaf:	mov    rax,QWORD PTR [rbp-0x8]
  408eb3:	leave  
  408eb4:	ret    

0000000000408eb5 <flatcc_builder_create_union_vector_direct@@Base>:
  408eb5:	endbr64 
  408eb9:	push   rbp
  408eba:	mov    rbp,rsp
  408ebd:	sub    rsp,0x30
  408ec1:	mov    QWORD PTR [rbp-0x18],rdi
  408ec5:	mov    QWORD PTR [rbp-0x20],rsi
  408ec9:	mov    QWORD PTR [rbp-0x28],rdx
  408ecd:	mov    QWORD PTR [rbp-0x30],rcx
  408ed1:	mov    DWORD PTR [rbp-0x8],0x0
  408ed8:	mov    DWORD PTR [rbp-0x4],0x0
  408edf:	mov    rcx,QWORD PTR [rbp-0x20]
  408ee3:	mov    rdx,QWORD PTR [rbp-0x30]
  408ee7:	mov    rsi,QWORD PTR [rbp-0x28]
  408eeb:	mov    rax,QWORD PTR [rbp-0x18]
  408eef:	mov    rdi,rax
  408ef2:	call   4085d0 <flatcc_builder_vector_edit@@Base+0x16>
  408ef7:	mov    DWORD PTR [rbp-0x4],eax
  408efa:	mov    eax,DWORD PTR [rbp-0x4]
  408efd:	test   eax,eax
  408eff:	jne    408f07 <flatcc_builder_create_union_vector_direct@@Base+0x52>
  408f01:	mov    rax,QWORD PTR [rbp-0x8]
  408f05:	jmp    408f40 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408f07:	mov    rdx,QWORD PTR [rbp-0x30]
  408f0b:	mov    rsi,QWORD PTR [rbp-0x20]
  408f0f:	mov    rax,QWORD PTR [rbp-0x18]
  408f13:	mov    r9d,0xffffffff
  408f19:	mov    r8d,0x1
  408f1f:	mov    ecx,0x1
  408f24:	mov    rdi,rax
  408f27:	call   408258 <flatcc_builder_create_vector@@Base>
  408f2c:	mov    DWORD PTR [rbp-0x8],eax
  408f2f:	mov    eax,DWORD PTR [rbp-0x8]
  408f32:	test   eax,eax
  408f34:	jne    408f3c <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408f36:	mov    rax,QWORD PTR [rbp-0x8]
  408f3a:	jmp    408f40 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408f3c:	mov    rax,QWORD PTR [rbp-0x8]
  408f40:	leave  
  408f41:	ret    

0000000000408f42 <flatcc_builder_start_union_vector@@Base>:
  408f42:	endbr64 
  408f46:	push   rbp
  408f47:	mov    rbp,rsp
  408f4a:	sub    rsp,0x10
  408f4e:	mov    QWORD PTR [rbp-0x8],rdi
  408f52:	mov    rax,QWORD PTR [rbp-0x8]
  408f56:	mov    esi,0x4
  408f5b:	mov    rdi,rax
  408f5e:	call   4058ad <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  408f63:	test   eax,eax
  408f65:	je     408f6e <flatcc_builder_start_union_vector@@Base+0x2c>
  408f67:	mov    eax,0xffffffff
  408f6c:	jmp    408fb0 <flatcc_builder_start_union_vector@@Base+0x6e>
  408f6e:	mov    rax,QWORD PTR [rbp-0x8]
  408f72:	mov    rax,QWORD PTR [rax+0x30]
  408f76:	mov    DWORD PTR [rax+0x10],0x8
  408f7d:	mov    rax,QWORD PTR [rbp-0x8]
  408f81:	mov    rax,QWORD PTR [rax+0x30]
  408f85:	mov    DWORD PTR [rax+0x14],0x0
  408f8c:	mov    rax,QWORD PTR [rbp-0x8]
  408f90:	mov    rax,QWORD PTR [rax+0x30]
  408f94:	mov    WORD PTR [rax+0xe],0x7
  408f9a:	mov    rax,QWORD PTR [rbp-0x8]
  408f9e:	mov    esi,0xfffffffc
  408fa3:	mov    rdi,rax
  408fa6:	call   404a83 <flatcc_builder_default_alloc@@Base+0x173>
  408fab:	mov    eax,0x0
  408fb0:	leave  
  408fb1:	ret    

0000000000408fb2 <flatcc_builder_end_union_vector@@Base>:
  408fb2:	endbr64 
  408fb6:	push   rbp
  408fb7:	mov    rbp,rsp
  408fba:	sub    rsp,0x40
  408fbe:	mov    QWORD PTR [rbp-0x38],rdi
  408fc2:	mov    DWORD PTR [rbp-0x8],0x0
  408fc9:	mov    DWORD PTR [rbp-0x4],0x0
  408fd0:	mov    rax,QWORD PTR [rbp-0x38]
  408fd4:	mov    rax,QWORD PTR [rax+0x30]
  408fd8:	movzx  eax,WORD PTR [rax+0xe]
  408fdc:	cmp    ax,0x7
  408fe0:	je     409001 <flatcc_builder_end_union_vector@@Base+0x4f>
  408fe2:	lea    rcx,[rip+0x4d57]        # 40dd40 <flatcc_builder_padding_base@@Base+0xb80>
  408fe9:	mov    edx,0x651
  408fee:	lea    rsi,[rip+0x43cb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408ff5:	lea    rdi,[rip+0x475c]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  408ffc:	call   403130 <__assert_fail@plt>
  409001:	mov    rax,QWORD PTR [rbp-0x38]
  409005:	mov    rdi,rax
  409008:	call   409111 <flatcc_builder_union_vector_count@@Base>
  40900d:	mov    QWORD PTR [rbp-0x28],rax
  409011:	mov    rax,QWORD PTR [rbp-0x28]
  409015:	mov    edx,eax
  409017:	mov    eax,edx
  409019:	shl    eax,0x2
  40901c:	add    edx,eax
  40901e:	mov    rax,QWORD PTR [rbp-0x38]
  409022:	mov    esi,edx
  409024:	mov    rdi,rax
  409027:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  40902c:	mov    QWORD PTR [rbp-0x20],rax
  409030:	cmp    QWORD PTR [rbp-0x20],0x0
  409035:	jne    409040 <flatcc_builder_end_union_vector@@Base+0x8e>
  409037:	mov    rax,QWORD PTR [rbp-0x8]
  40903b:	jmp    4090f9 <flatcc_builder_end_union_vector@@Base+0x147>
  409040:	mov    rax,QWORD PTR [rbp-0x28]
  409044:	lea    rdx,[rax*4+0x0]
  40904c:	mov    rax,QWORD PTR [rbp-0x20]
  409050:	add    rax,rdx
  409053:	mov    QWORD PTR [rbp-0x18],rax
  409057:	mov    rax,QWORD PTR [rbp-0x38]
  40905b:	mov    rdi,rax
  40905e:	call   4090fb <flatcc_builder_union_vector_edit@@Base>
  409063:	mov    QWORD PTR [rbp-0x10],rax
  409067:	mov    QWORD PTR [rbp-0x30],0x0
  40906f:	jmp    4090c3 <flatcc_builder_end_union_vector@@Base+0x111>
  409071:	mov    rax,QWORD PTR [rbp-0x30]
  409075:	lea    rdx,[rax*8+0x0]
  40907d:	mov    rax,QWORD PTR [rbp-0x10]
  409081:	add    rax,rdx
  409084:	mov    rcx,QWORD PTR [rbp-0x18]
  409088:	mov    rdx,QWORD PTR [rbp-0x30]
  40908c:	add    rdx,rcx
  40908f:	movzx  eax,BYTE PTR [rax]
  409092:	mov    BYTE PTR [rdx],al
  409094:	mov    rax,QWORD PTR [rbp-0x30]
  409098:	lea    rdx,[rax*8+0x0]
  4090a0:	mov    rax,QWORD PTR [rbp-0x10]
  4090a4:	add    rax,rdx
  4090a7:	mov    rdx,QWORD PTR [rbp-0x30]
  4090ab:	lea    rcx,[rdx*4+0x0]
  4090b3:	mov    rdx,QWORD PTR [rbp-0x20]
  4090b7:	add    rdx,rcx
  4090ba:	mov    eax,DWORD PTR [rax+0x4]
  4090bd:	mov    DWORD PTR [rdx],eax
  4090bf:	inc    QWORD PTR [rbp-0x30]
  4090c3:	mov    rax,QWORD PTR [rbp-0x30]
  4090c7:	cmp    rax,QWORD PTR [rbp-0x28]
  4090cb:	jb     409071 <flatcc_builder_end_union_vector@@Base+0xbf>
  4090cd:	mov    rcx,QWORD PTR [rbp-0x28]
  4090d1:	mov    rdx,QWORD PTR [rbp-0x20]
  4090d5:	mov    rsi,QWORD PTR [rbp-0x18]
  4090d9:	mov    rax,QWORD PTR [rbp-0x38]
  4090dd:	mov    rdi,rax
  4090e0:	call   408eb5 <flatcc_builder_create_union_vector_direct@@Base>
  4090e5:	mov    QWORD PTR [rbp-0x8],rax
  4090e9:	mov    rax,QWORD PTR [rbp-0x38]
  4090ed:	mov    rdi,rax
  4090f0:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4090f5:	mov    rax,QWORD PTR [rbp-0x8]
  4090f9:	leave  
  4090fa:	ret    

00000000004090fb <flatcc_builder_union_vector_edit@@Base>:
  4090fb:	endbr64 
  4090ff:	push   rbp
  409100:	mov    rbp,rsp
  409103:	mov    QWORD PTR [rbp-0x8],rdi
  409107:	mov    rax,QWORD PTR [rbp-0x8]
  40910b:	mov    rax,QWORD PTR [rax+0x18]
  40910f:	pop    rbp
  409110:	ret    

0000000000409111 <flatcc_builder_union_vector_count@@Base>:
  409111:	endbr64 
  409115:	push   rbp
  409116:	mov    rbp,rsp
  409119:	mov    QWORD PTR [rbp-0x8],rdi
  40911d:	mov    rax,QWORD PTR [rbp-0x8]
  409121:	mov    rax,QWORD PTR [rax+0x30]
  409125:	mov    eax,DWORD PTR [rax+0x14]
  409128:	mov    eax,eax
  40912a:	pop    rbp
  40912b:	ret    

000000000040912c <flatcc_builder_extend_union_vector@@Base>:
  40912c:	endbr64 
  409130:	push   rbp
  409131:	mov    rbp,rsp
  409134:	sub    rsp,0x10
  409138:	mov    QWORD PTR [rbp-0x8],rdi
  40913c:	mov    QWORD PTR [rbp-0x10],rsi
  409140:	mov    rax,QWORD PTR [rbp-0x10]
  409144:	mov    ecx,eax
  409146:	mov    rax,QWORD PTR [rbp-0x8]
  40914a:	mov    edx,0x1fffffff
  40914f:	mov    esi,ecx
  409151:	mov    rdi,rax
  409154:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  409159:	test   eax,eax
  40915b:	je     409164 <flatcc_builder_extend_union_vector@@Base+0x38>
  40915d:	mov    eax,0x0
  409162:	jmp    40917d <flatcc_builder_extend_union_vector@@Base+0x51>
  409164:	mov    rax,QWORD PTR [rbp-0x10]
  409168:	lea    edx,[rax*8+0x0]
  40916f:	mov    rax,QWORD PTR [rbp-0x8]
  409173:	mov    esi,edx
  409175:	mov    rdi,rax
  409178:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  40917d:	leave  
  40917e:	ret    

000000000040917f <flatcc_builder_truncate_union_vector@@Base>:
  40917f:	endbr64 
  409183:	push   rbp
  409184:	mov    rbp,rsp
  409187:	sub    rsp,0x10
  40918b:	mov    QWORD PTR [rbp-0x8],rdi
  40918f:	mov    QWORD PTR [rbp-0x10],rsi
  409193:	mov    rax,QWORD PTR [rbp-0x8]
  409197:	mov    rax,QWORD PTR [rax+0x30]
  40919b:	movzx  eax,WORD PTR [rax+0xe]
  40919f:	cmp    ax,0x7
  4091a3:	je     4091c4 <flatcc_builder_truncate_union_vector@@Base+0x45>
  4091a5:	lea    rcx,[rip+0x4bb4]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  4091ac:	mov    edx,0x681
  4091b1:	lea    rsi,[rip+0x4208]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4091b8:	lea    rdi,[rip+0x4599]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  4091bf:	call   403130 <__assert_fail@plt>
  4091c4:	mov    rax,QWORD PTR [rbp-0x8]
  4091c8:	mov    rax,QWORD PTR [rax+0x30]
  4091cc:	mov    eax,DWORD PTR [rax+0x14]
  4091cf:	mov    rdx,QWORD PTR [rbp-0x10]
  4091d3:	cmp    eax,edx
  4091d5:	jae    409210 <flatcc_builder_truncate_union_vector@@Base+0x91>
  4091d7:	mov    rax,QWORD PTR [rbp-0x8]
  4091db:	mov    rax,QWORD PTR [rax+0x30]
  4091df:	mov    eax,DWORD PTR [rax+0x14]
  4091e2:	mov    rdx,QWORD PTR [rbp-0x10]
  4091e6:	cmp    eax,edx
  4091e8:	jae    409209 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  4091ea:	lea    rcx,[rip+0x4b6f]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  4091f1:	mov    edx,0x682
  4091f6:	lea    rsi,[rip+0x41c3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4091fd:	lea    rdi,[rip+0x4404]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  409204:	call   403130 <__assert_fail@plt>
  409209:	mov    eax,0xffffffff
  40920e:	jmp    409253 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  409210:	mov    rax,QWORD PTR [rbp-0x8]
  409214:	mov    rax,QWORD PTR [rax+0x30]
  409218:	mov    edx,DWORD PTR [rax+0x14]
  40921b:	mov    rax,QWORD PTR [rbp-0x10]
  40921f:	mov    ecx,eax
  409221:	mov    rax,QWORD PTR [rbp-0x8]
  409225:	mov    rax,QWORD PTR [rax+0x30]
  409229:	sub    edx,ecx
  40922b:	mov    DWORD PTR [rax+0x14],edx
  40922e:	mov    rax,QWORD PTR [rbp-0x8]
  409232:	mov    rax,QWORD PTR [rax+0x30]
  409236:	mov    eax,DWORD PTR [rax+0x10]
  409239:	mov    rdx,QWORD PTR [rbp-0x10]
  40923d:	imul   edx,eax
  409240:	mov    rax,QWORD PTR [rbp-0x8]
  409244:	mov    esi,edx
  409246:	mov    rdi,rax
  409249:	call   404bf6 <flatcc_builder_default_alloc@@Base+0x2e6>
  40924e:	mov    eax,0x0
  409253:	leave  
  409254:	ret    

0000000000409255 <flatcc_builder_union_vector_push@@Base>:
  409255:	endbr64 
  409259:	push   rbp
  40925a:	mov    rbp,rsp
  40925d:	sub    rsp,0x20
  409261:	mov    QWORD PTR [rbp-0x18],rdi
  409265:	mov    QWORD PTR [rbp-0x20],rsi
  409269:	mov    rax,QWORD PTR [rbp-0x18]
  40926d:	mov    rax,QWORD PTR [rax+0x30]
  409271:	movzx  eax,WORD PTR [rax+0xe]
  409275:	cmp    ax,0x7
  409279:	je     40929a <flatcc_builder_union_vector_push@@Base+0x45>
  40927b:	lea    rcx,[rip+0x4b1e]        # 40dda0 <flatcc_builder_padding_base@@Base+0xbe0>
  409282:	mov    edx,0x68d
  409287:	lea    rsi,[rip+0x4132]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40928e:	lea    rdi,[rip+0x44c3]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  409295:	call   403130 <__assert_fail@plt>
  40929a:	mov    rax,QWORD PTR [rbp-0x18]
  40929e:	mov    rax,QWORD PTR [rax+0x30]
  4092a2:	mov    eax,DWORD PTR [rax+0x14]
  4092a5:	cmp    eax,0x1fffffff
  4092aa:	jne    4092b3 <flatcc_builder_union_vector_push@@Base+0x5e>
  4092ac:	mov    eax,0x0
  4092b1:	jmp    4092fd <flatcc_builder_union_vector_push@@Base+0xa8>
  4092b3:	mov    rax,QWORD PTR [rbp-0x18]
  4092b7:	mov    rax,QWORD PTR [rax+0x30]
  4092bb:	mov    edx,DWORD PTR [rax+0x14]
  4092be:	mov    rax,QWORD PTR [rbp-0x18]
  4092c2:	mov    rax,QWORD PTR [rax+0x30]
  4092c6:	inc    edx
  4092c8:	mov    DWORD PTR [rax+0x14],edx
  4092cb:	mov    rax,QWORD PTR [rbp-0x18]
  4092cf:	mov    esi,0x8
  4092d4:	mov    rdi,rax
  4092d7:	call   404b7a <flatcc_builder_default_alloc@@Base+0x26a>
  4092dc:	mov    QWORD PTR [rbp-0x8],rax
  4092e0:	cmp    QWORD PTR [rbp-0x8],0x0
  4092e5:	jne    4092ee <flatcc_builder_union_vector_push@@Base+0x99>
  4092e7:	mov    eax,0x0
  4092ec:	jmp    4092fd <flatcc_builder_union_vector_push@@Base+0xa8>
  4092ee:	mov    rax,QWORD PTR [rbp-0x8]
  4092f2:	mov    rdx,QWORD PTR [rbp-0x20]
  4092f6:	mov    QWORD PTR [rax],rdx
  4092f9:	mov    rax,QWORD PTR [rbp-0x8]
  4092fd:	leave  
  4092fe:	ret    

00000000004092ff <flatcc_builder_append_union_vector@@Base>:
  4092ff:	endbr64 
  409303:	push   rbp
  409304:	mov    rbp,rsp
  409307:	sub    rsp,0x20
  40930b:	mov    QWORD PTR [rbp-0x8],rdi
  40930f:	mov    QWORD PTR [rbp-0x10],rsi
  409313:	mov    QWORD PTR [rbp-0x18],rdx
  409317:	mov    rax,QWORD PTR [rbp-0x8]
  40931b:	mov    rax,QWORD PTR [rax+0x30]
  40931f:	movzx  eax,WORD PTR [rax+0xe]
  409323:	cmp    ax,0x7
  409327:	je     409348 <flatcc_builder_append_union_vector@@Base+0x49>
  409329:	lea    rcx,[rip+0x4ab0]        # 40dde0 <flatcc_builder_padding_base@@Base+0xc20>
  409330:	mov    edx,0x69c
  409335:	lea    rsi,[rip+0x4084]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40933c:	lea    rdi,[rip+0x4415]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  409343:	call   403130 <__assert_fail@plt>
  409348:	mov    rax,QWORD PTR [rbp-0x18]
  40934c:	mov    ecx,eax
  40934e:	mov    rax,QWORD PTR [rbp-0x8]
  409352:	mov    edx,0x1fffffff
  409357:	mov    esi,ecx
  409359:	mov    rdi,rax
  40935c:	call   406b1f <flatcc_builder_end_struct@@Base+0x92>
  409361:	test   eax,eax
  409363:	je     40936c <flatcc_builder_append_union_vector@@Base+0x6d>
  409365:	mov    eax,0x0
  40936a:	jmp    40938a <flatcc_builder_append_union_vector@@Base+0x8b>
  40936c:	mov    rax,QWORD PTR [rbp-0x18]
  409370:	lea    edx,[rax*8+0x0]
  409377:	mov    rcx,QWORD PTR [rbp-0x10]
  40937b:	mov    rax,QWORD PTR [rbp-0x8]
  40937f:	mov    rsi,rcx
  409382:	mov    rdi,rax
  409385:	call   404c42 <flatcc_builder_default_alloc@@Base+0x332>
  40938a:	leave  
  40938b:	ret    

000000000040938c <flatcc_builder_create_string@@Base>:
  40938c:	endbr64 
  409390:	push   rbp
  409391:	mov    rbp,rsp
  409394:	sub    rsp,0xd0
  40939b:	mov    QWORD PTR [rbp-0xb8],rdi
  4093a2:	mov    QWORD PTR [rbp-0xc0],rsi
  4093a9:	mov    QWORD PTR [rbp-0xc8],rdx
  4093b0:	mov    rax,QWORD PTR fs:0x28
  4093b9:	mov    QWORD PTR [rbp-0x8],rax
  4093bd:	xor    eax,eax
  4093bf:	mov    eax,0xffffffff
  4093c4:	cmp    QWORD PTR [rbp-0xc8],rax
  4093cb:	jbe    4093d7 <flatcc_builder_create_string@@Base+0x4b>
  4093cd:	mov    eax,0x0
  4093d2:	jmp    40957a <flatcc_builder_create_string@@Base+0x1ee>
  4093d7:	mov    rax,QWORD PTR [rbp-0xc8]
  4093de:	mov    edi,eax
  4093e0:	call   404850 <main@@Base+0x17a>
  4093e5:	mov    DWORD PTR [rbp-0xa8],eax
  4093eb:	mov    rax,QWORD PTR [rbp-0xc8]
  4093f2:	lea    ecx,[rax+0x1]
  4093f5:	mov    rax,QWORD PTR [rbp-0xb8]
  4093fc:	mov    edx,0x4
  409401:	mov    esi,ecx
  409403:	mov    rdi,rax
  409406:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40940b:	inc    eax
  40940d:	mov    DWORD PTR [rbp-0xa4],eax
  409413:	mov    QWORD PTR [rbp-0xa0],0x0
  40941e:	mov    DWORD PTR [rbp-0x98],0x0
  409428:	mov    rax,QWORD PTR [rbp-0xa0]
  40942f:	add    rax,0x4
  409433:	mov    QWORD PTR [rbp-0xa0],rax
  40943a:	mov    eax,DWORD PTR [rbp-0x98]
  409440:	cdqe   
  409442:	shl    rax,0x4
  409446:	add    rax,rbp
  409449:	lea    rdx,[rax-0x90]
  409450:	lea    rax,[rbp-0xa8]
  409457:	mov    QWORD PTR [rdx],rax
  40945a:	mov    eax,DWORD PTR [rbp-0x98]
  409460:	cdqe   
  409462:	shl    rax,0x4
  409466:	add    rax,rbp
  409469:	sub    rax,0x88
  40946f:	mov    QWORD PTR [rax],0x4
  409476:	mov    eax,DWORD PTR [rbp-0x98]
  40947c:	inc    eax
  40947e:	mov    DWORD PTR [rbp-0x98],eax
  409484:	cmp    QWORD PTR [rbp-0xc8],0x0
  40948c:	je     4094f4 <flatcc_builder_create_string@@Base+0x168>
  40948e:	mov    rdx,QWORD PTR [rbp-0xa0]
  409495:	mov    rax,QWORD PTR [rbp-0xc8]
  40949c:	add    rax,rdx
  40949f:	mov    QWORD PTR [rbp-0xa0],rax
  4094a6:	mov    eax,DWORD PTR [rbp-0x98]
  4094ac:	cdqe   
  4094ae:	shl    rax,0x4
  4094b2:	add    rax,rbp
  4094b5:	lea    rdx,[rax-0x90]
  4094bc:	mov    rax,QWORD PTR [rbp-0xc0]
  4094c3:	mov    QWORD PTR [rdx],rax
  4094c6:	mov    eax,DWORD PTR [rbp-0x98]
  4094cc:	cdqe   
  4094ce:	shl    rax,0x4
  4094d2:	add    rax,rbp
  4094d5:	lea    rdx,[rax-0x88]
  4094dc:	mov    rax,QWORD PTR [rbp-0xc8]
  4094e3:	mov    QWORD PTR [rdx],rax
  4094e6:	mov    eax,DWORD PTR [rbp-0x98]
  4094ec:	inc    eax
  4094ee:	mov    DWORD PTR [rbp-0x98],eax
  4094f4:	cmp    DWORD PTR [rbp-0xa4],0x0
  4094fb:	je     409561 <flatcc_builder_create_string@@Base+0x1d5>
  4094fd:	mov    rdx,QWORD PTR [rbp-0xa0]
  409504:	mov    eax,DWORD PTR [rbp-0xa4]
  40950a:	add    rax,rdx
  40950d:	mov    QWORD PTR [rbp-0xa0],rax
  409514:	mov    eax,DWORD PTR [rbp-0x98]
  40951a:	cdqe   
  40951c:	shl    rax,0x4
  409520:	add    rax,rbp
  409523:	sub    rax,0x90
  409529:	mov    rdx,0x40d1c0
  409530:	mov    QWORD PTR [rax],rdx
  409533:	mov    edx,DWORD PTR [rbp-0x98]
  409539:	mov    eax,DWORD PTR [rbp-0xa4]
  40953f:	movsxd rdx,edx
  409542:	shl    rdx,0x4
  409546:	add    rdx,rbp
  409549:	sub    rdx,0x88
  409550:	mov    QWORD PTR [rdx],rax
  409553:	mov    eax,DWORD PTR [rbp-0x98]
  409559:	inc    eax
  40955b:	mov    DWORD PTR [rbp-0x98],eax
  409561:	lea    rdx,[rbp-0xa0]
  409568:	mov    rax,QWORD PTR [rbp-0xb8]
  40956f:	mov    rsi,rdx
  409572:	mov    rdi,rax
  409575:	call   405b99 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40957a:	mov    rcx,QWORD PTR [rbp-0x8]
  40957e:	xor    rcx,QWORD PTR fs:0x28
  409587:	je     40958e <flatcc_builder_create_string@@Base+0x202>
  409589:	call   403120 <__stack_chk_fail@plt>
  40958e:	leave  
  40958f:	ret    

0000000000409590 <flatcc_builder_create_string_str@@Base>:
  409590:	endbr64 
  409594:	push   rbp
  409595:	mov    rbp,rsp
  409598:	sub    rsp,0x10
  40959c:	mov    QWORD PTR [rbp-0x8],rdi
  4095a0:	mov    QWORD PTR [rbp-0x10],rsi
  4095a4:	mov    rax,QWORD PTR [rbp-0x10]
  4095a8:	mov    rdi,rax
  4095ab:	call   403110 <strlen@plt>
  4095b0:	mov    rdx,rax
  4095b3:	mov    rcx,QWORD PTR [rbp-0x10]
  4095b7:	mov    rax,QWORD PTR [rbp-0x8]
  4095bb:	mov    rsi,rcx
  4095be:	mov    rdi,rax
  4095c1:	call   40938c <flatcc_builder_create_string@@Base>
  4095c6:	leave  
  4095c7:	ret    

00000000004095c8 <flatcc_builder_create_string_strn@@Base>:
  4095c8:	endbr64 
  4095cc:	push   rbp
  4095cd:	mov    rbp,rsp
  4095d0:	sub    rsp,0x20
  4095d4:	mov    QWORD PTR [rbp-0x8],rdi
  4095d8:	mov    QWORD PTR [rbp-0x10],rsi
  4095dc:	mov    QWORD PTR [rbp-0x18],rdx
  4095e0:	mov    rdx,QWORD PTR [rbp-0x18]
  4095e4:	mov    rax,QWORD PTR [rbp-0x10]
  4095e8:	mov    rsi,rdx
  4095eb:	mov    rdi,rax
  4095ee:	call   4048d0 <main@@Base+0x1fa>
  4095f3:	mov    rdx,rax
  4095f6:	mov    rcx,QWORD PTR [rbp-0x10]
  4095fa:	mov    rax,QWORD PTR [rbp-0x8]
  4095fe:	mov    rsi,rcx
  409601:	mov    rdi,rax
  409604:	call   40938c <flatcc_builder_create_string@@Base>
  409609:	leave  
  40960a:	ret    

000000000040960b <flatcc_builder_end_string@@Base>:
  40960b:	endbr64 
  40960f:	push   rbp
  409610:	mov    rbp,rsp
  409613:	sub    rsp,0x20
  409617:	mov    QWORD PTR [rbp-0x18],rdi
  40961b:	mov    rax,QWORD PTR [rbp-0x18]
  40961f:	mov    rax,QWORD PTR [rax+0x30]
  409623:	movzx  eax,WORD PTR [rax+0xe]
  409627:	cmp    ax,0x6
  40962b:	je     40964c <flatcc_builder_end_string@@Base+0x41>
  40962d:	lea    rcx,[rip+0x47dc]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  409634:	mov    edx,0x6c4
  409639:	lea    rsi,[rip+0x3d80]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409640:	lea    rdi,[rip+0x3f69]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  409647:	call   403130 <__assert_fail@plt>
  40964c:	mov    rax,QWORD PTR [rbp-0x18]
  409650:	mov    rax,QWORD PTR [rax+0x30]
  409654:	mov    edx,DWORD PTR [rax+0x14]
  409657:	mov    rax,QWORD PTR [rbp-0x18]
  40965b:	mov    eax,DWORD PTR [rax+0x20]
  40965e:	cmp    edx,eax
  409660:	je     409681 <flatcc_builder_end_string@@Base+0x76>
  409662:	lea    rcx,[rip+0x47a7]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  409669:	mov    edx,0x6c5
  40966e:	lea    rsi,[rip+0x3d4b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409675:	lea    rdi,[rip+0x4114]        # 40d790 <flatcc_builder_padding_base@@Base+0x5d0>
  40967c:	call   403130 <__assert_fail@plt>
  409681:	mov    rax,QWORD PTR [rbp-0x18]
  409685:	mov    eax,DWORD PTR [rax+0x20]
  409688:	mov    edx,eax
  40968a:	mov    rax,QWORD PTR [rbp-0x18]
  40968e:	mov    rcx,QWORD PTR [rax+0x18]
  409692:	mov    rax,QWORD PTR [rbp-0x18]
  409696:	mov    rsi,rcx
  409699:	mov    rdi,rax
  40969c:	call   40938c <flatcc_builder_create_string@@Base>
  4096a1:	mov    DWORD PTR [rbp-0x4],eax
  4096a4:	cmp    DWORD PTR [rbp-0x4],0x0
  4096a8:	jne    4096b1 <flatcc_builder_end_string@@Base+0xa6>
  4096aa:	mov    eax,0x0
  4096af:	jmp    4096c0 <flatcc_builder_end_string@@Base+0xb5>
  4096b1:	mov    rax,QWORD PTR [rbp-0x18]
  4096b5:	mov    rdi,rax
  4096b8:	call   405a88 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4096bd:	mov    eax,DWORD PTR [rbp-0x4]
  4096c0:	leave  
  4096c1:	ret    

00000000004096c2 <flatcc_builder_string_edit@@Base>:
  4096c2:	endbr64 
  4096c6:	push   rbp
  4096c7:	mov    rbp,rsp
  4096ca:	mov    QWORD PTR [rbp-0x8],rdi
  4096ce:	mov    rax,QWORD PTR [rbp-0x8]
  4096d2:	mov    rax,QWORD PTR [rax+0x18]
  4096d6:	pop    rbp
  4096d7:	ret    

00000000004096d8 <flatcc_builder_string_len@@Base>:
  4096d8:	endbr64 
  4096dc:	push   rbp
  4096dd:	mov    rbp,rsp
  4096e0:	mov    QWORD PTR [rbp-0x8],rdi
  4096e4:	mov    rax,QWORD PTR [rbp-0x8]
  4096e8:	mov    rax,QWORD PTR [rax+0x30]
  4096ec:	mov    eax,DWORD PTR [rax+0x14]
  4096ef:	mov    eax,eax
  4096f1:	pop    rbp
  4096f2:	ret    

00000000004096f3 <flatcc_builder_table_add@@Base>:
  4096f3:	endbr64 
  4096f7:	push   rbp
  4096f8:	mov    rbp,rsp
  4096fb:	sub    rsp,0x20
  4096ff:	mov    QWORD PTR [rbp-0x8],rdi
  409703:	mov    DWORD PTR [rbp-0xc],esi
  409706:	mov    QWORD PTR [rbp-0x18],rdx
  40970a:	mov    eax,ecx
  40970c:	mov    WORD PTR [rbp-0x10],ax
  409710:	mov    rax,QWORD PTR [rbp-0x8]
  409714:	mov    rax,QWORD PTR [rax+0x30]
  409718:	movzx  eax,WORD PTR [rax+0xe]
  40971c:	cmp    ax,0x3
  409720:	je     409741 <flatcc_builder_table_add@@Base+0x4e>
  409722:	lea    rcx,[rip+0x4707]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  409729:	mov    edx,0x6ed
  40972e:	lea    rsi,[rip+0x3c8b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409735:	lea    rdi,[rip+0x3f5c]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40973c:	call   403130 <__assert_fail@plt>
  409741:	cmp    DWORD PTR [rbp-0xc],0x0
  409745:	js     409750 <flatcc_builder_table_add@@Base+0x5d>
  409747:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40974e:	jle    40976f <flatcc_builder_table_add@@Base+0x7c>
  409750:	lea    rcx,[rip+0x46d9]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  409757:	mov    edx,0x6ee
  40975c:	lea    rsi,[rip+0x3c5d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409763:	lea    rdi,[rip+0x404e]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  40976a:	call   403130 <__assert_fail@plt>
  40976f:	mov    rax,QWORD PTR [rbp-0x8]
  409773:	movzx  eax,WORD PTR [rax+0xea]
  40977a:	cmp    WORD PTR [rbp-0x10],ax
  40977e:	jbe    40978f <flatcc_builder_table_add@@Base+0x9c>
  409780:	mov    rdx,QWORD PTR [rbp-0x8]
  409784:	movzx  eax,WORD PTR [rbp-0x10]
  409788:	mov    WORD PTR [rdx+0xea],ax
  40978f:	mov    rax,QWORD PTR [rbp-0x8]
  409793:	mov    rax,QWORD PTR [rax+0x8]
  409797:	mov    edx,DWORD PTR [rbp-0xc]
  40979a:	movsxd rdx,edx
  40979d:	add    rdx,rdx
  4097a0:	add    rax,rdx
  4097a3:	movzx  eax,WORD PTR [rax]
  4097a6:	test   ax,ax
  4097a9:	je     4097ca <flatcc_builder_table_add@@Base+0xd7>
  4097ab:	lea    rcx,[rip+0x467e]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  4097b2:	mov    edx,0x6f8
  4097b7:	lea    rsi,[rip+0x3c02]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4097be:	lea    rdi,[rip+0x3c5b]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  4097c5:	call   403130 <__assert_fail@plt>
  4097ca:	mov    rax,QWORD PTR [rbp-0x8]
  4097ce:	mov    edx,DWORD PTR [rax+0x14]
  4097d1:	mov    eax,DWORD PTR [rbp-0xc]
  4097d4:	xor    eax,edx
  4097d6:	imul   eax,eax,0x9e3779b1
  4097dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4097e0:	xor    eax,edx
  4097e2:	imul   edx,eax,0x9e3779b1
  4097e8:	mov    rax,QWORD PTR [rbp-0x8]
  4097ec:	mov    DWORD PTR [rax+0x14],edx
  4097ef:	mov    eax,DWORD PTR [rbp-0xc]
  4097f2:	movzx  ecx,ax
  4097f5:	movzx  edx,WORD PTR [rbp-0x10]
  4097f9:	mov    rax,QWORD PTR [rbp-0x18]
  4097fd:	mov    esi,eax
  4097ff:	mov    rax,QWORD PTR [rbp-0x8]
  409803:	mov    rdi,rax
  409806:	call   404c94 <flatcc_builder_default_alloc@@Base+0x384>
  40980b:	leave  
  40980c:	ret    

000000000040980d <flatcc_builder_table_edit@@Base>:
  40980d:	endbr64 
  409811:	push   rbp
  409812:	mov    rbp,rsp
  409815:	sub    rsp,0x10
  409819:	mov    QWORD PTR [rbp-0x8],rdi
  40981d:	mov    QWORD PTR [rbp-0x10],rsi
  409821:	mov    rax,QWORD PTR [rbp-0x8]
  409825:	mov    rax,QWORD PTR [rax+0x30]
  409829:	movzx  eax,WORD PTR [rax+0xe]
  40982d:	cmp    ax,0x3
  409831:	je     409852 <flatcc_builder_table_edit@@Base+0x45>
  409833:	lea    rcx,[rip+0x4616]        # 40de50 <flatcc_builder_padding_base@@Base+0xc90>
  40983a:	mov    edx,0x702
  40983f:	lea    rsi,[rip+0x3b7a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409846:	lea    rdi,[rip+0x3e4b]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40984d:	call   403130 <__assert_fail@plt>
  409852:	mov    rax,QWORD PTR [rbp-0x8]
  409856:	mov    rdx,QWORD PTR [rax+0x18]
  40985a:	mov    rax,QWORD PTR [rbp-0x8]
  40985e:	mov    eax,DWORD PTR [rax+0x20]
  409861:	mov    eax,eax
  409863:	sub    rax,QWORD PTR [rbp-0x10]
  409867:	add    rax,rdx
  40986a:	leave  
  40986b:	ret    

000000000040986c <flatcc_builder_table_add_copy@@Base>:
  40986c:	endbr64 
  409870:	push   rbp
  409871:	mov    rbp,rsp
  409874:	sub    rsp,0x30
  409878:	mov    QWORD PTR [rbp-0x18],rdi
  40987c:	mov    DWORD PTR [rbp-0x1c],esi
  40987f:	mov    QWORD PTR [rbp-0x28],rdx
  409883:	mov    QWORD PTR [rbp-0x30],rcx
  409887:	mov    eax,r8d
  40988a:	mov    WORD PTR [rbp-0x20],ax
  40988e:	movzx  ecx,WORD PTR [rbp-0x20]
  409892:	mov    rdx,QWORD PTR [rbp-0x30]
  409896:	mov    esi,DWORD PTR [rbp-0x1c]
  409899:	mov    rax,QWORD PTR [rbp-0x18]
  40989d:	mov    rdi,rax
  4098a0:	call   4096f3 <flatcc_builder_table_add@@Base>
  4098a5:	mov    QWORD PTR [rbp-0x8],rax
  4098a9:	cmp    QWORD PTR [rbp-0x8],0x0
  4098ae:	je     4098c7 <flatcc_builder_table_add_copy@@Base+0x5b>
  4098b0:	mov    rdx,QWORD PTR [rbp-0x30]
  4098b4:	mov    rcx,QWORD PTR [rbp-0x28]
  4098b8:	mov    rax,QWORD PTR [rbp-0x8]
  4098bc:	mov    rsi,rcx
  4098bf:	mov    rdi,rax
  4098c2:	call   403170 <memcpy@plt>
  4098c7:	mov    rax,QWORD PTR [rbp-0x8]
  4098cb:	leave  
  4098cc:	ret    

00000000004098cd <flatcc_builder_table_add_offset@@Base>:
  4098cd:	endbr64 
  4098d1:	push   rbp
  4098d2:	mov    rbp,rsp
  4098d5:	sub    rsp,0x10
  4098d9:	mov    QWORD PTR [rbp-0x8],rdi
  4098dd:	mov    DWORD PTR [rbp-0xc],esi
  4098e0:	mov    rax,QWORD PTR [rbp-0x8]
  4098e4:	mov    rax,QWORD PTR [rax+0x30]
  4098e8:	movzx  eax,WORD PTR [rax+0xe]
  4098ec:	cmp    ax,0x3
  4098f0:	je     409911 <flatcc_builder_table_add_offset@@Base+0x44>
  4098f2:	lea    rcx,[rip+0x4587]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  4098f9:	mov    edx,0x713
  4098fe:	lea    rsi,[rip+0x3abb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409905:	lea    rdi,[rip+0x3d8c]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40990c:	call   403130 <__assert_fail@plt>
  409911:	cmp    DWORD PTR [rbp-0xc],0x0
  409915:	js     409920 <flatcc_builder_table_add_offset@@Base+0x53>
  409917:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40991e:	jle    40993f <flatcc_builder_table_add_offset@@Base+0x72>
  409920:	lea    rcx,[rip+0x4559]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  409927:	mov    edx,0x714
  40992c:	lea    rsi,[rip+0x3a8d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409933:	lea    rdi,[rip+0x3e7e]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  40993a:	call   403130 <__assert_fail@plt>
  40993f:	mov    rax,QWORD PTR [rbp-0x8]
  409943:	mov    rax,QWORD PTR [rax+0x8]
  409947:	mov    edx,DWORD PTR [rbp-0xc]
  40994a:	movsxd rdx,edx
  40994d:	add    rdx,rdx
  409950:	add    rax,rdx
  409953:	movzx  eax,WORD PTR [rax]
  409956:	test   ax,ax
  409959:	je     40997a <flatcc_builder_table_add_offset@@Base+0xad>
  40995b:	lea    rcx,[rip+0x451e]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  409962:	mov    edx,0x71b
  409967:	lea    rsi,[rip+0x3a52]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40996e:	lea    rdi,[rip+0x3aab]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409975:	call   403130 <__assert_fail@plt>
  40997a:	mov    rax,QWORD PTR [rbp-0x8]
  40997e:	mov    edx,DWORD PTR [rax+0x14]
  409981:	mov    eax,DWORD PTR [rbp-0xc]
  409984:	xor    eax,edx
  409986:	imul   eax,eax,0x9e3779b1
  40998c:	xor    eax,0x4
  40998f:	imul   edx,eax,0x9e3779b1
  409995:	mov    rax,QWORD PTR [rbp-0x8]
  409999:	mov    DWORD PTR [rax+0x14],edx
  40999c:	mov    eax,DWORD PTR [rbp-0xc]
  40999f:	movzx  edx,ax
  4099a2:	mov    rax,QWORD PTR [rbp-0x8]
  4099a6:	mov    esi,edx
  4099a8:	mov    rdi,rax
  4099ab:	call   404d5c <flatcc_builder_default_alloc@@Base+0x44c>
  4099b0:	leave  
  4099b1:	ret    

00000000004099b2 <flatcc_builder_push_buffer_alignment@@Base>:
  4099b2:	endbr64 
  4099b6:	push   rbp
  4099b7:	mov    rbp,rsp
  4099ba:	mov    QWORD PTR [rbp-0x18],rdi
  4099be:	mov    rax,QWORD PTR [rbp-0x18]
  4099c2:	movzx  eax,WORD PTR [rax+0xe8]
  4099c9:	mov    WORD PTR [rbp-0x2],ax
  4099cd:	mov    rax,QWORD PTR [rbp-0x18]
  4099d1:	mov    WORD PTR [rax+0xe8],0x4
  4099da:	movzx  eax,WORD PTR [rbp-0x2]
  4099de:	pop    rbp
  4099df:	ret    

00000000004099e0 <flatcc_builder_pop_buffer_alignment@@Base>:
  4099e0:	endbr64 
  4099e4:	push   rbp
  4099e5:	mov    rbp,rsp
  4099e8:	sub    rsp,0x10
  4099ec:	mov    QWORD PTR [rbp-0x8],rdi
  4099f0:	mov    eax,esi
  4099f2:	mov    WORD PTR [rbp-0xc],ax
  4099f6:	movzx  edx,WORD PTR [rbp-0xc]
  4099fa:	mov    rax,QWORD PTR [rbp-0x8]
  4099fe:	mov    esi,edx
  409a00:	mov    rdi,rax
  409a03:	call   40557c <flatcc_builder_clear@@Base+0x99>
  409a08:	nop
  409a09:	leave  
  409a0a:	ret    

0000000000409a0b <flatcc_builder_get_buffer_alignment@@Base>:
  409a0b:	endbr64 
  409a0f:	push   rbp
  409a10:	mov    rbp,rsp
  409a13:	mov    QWORD PTR [rbp-0x8],rdi
  409a17:	mov    rax,QWORD PTR [rbp-0x8]
  409a1b:	movzx  eax,WORD PTR [rax+0xe8]
  409a22:	pop    rbp
  409a23:	ret    

0000000000409a24 <flatcc_builder_set_vtable_clustering@@Base>:
  409a24:	endbr64 
  409a28:	push   rbp
  409a29:	mov    rbp,rsp
  409a2c:	mov    QWORD PTR [rbp-0x8],rdi
  409a30:	mov    DWORD PTR [rbp-0xc],esi
  409a33:	cmp    DWORD PTR [rbp-0xc],0x0
  409a37:	sete   al
  409a3a:	movzx  edx,al
  409a3d:	mov    rax,QWORD PTR [rbp-0x8]
  409a41:	mov    DWORD PTR [rax+0x124],edx
  409a47:	nop
  409a48:	pop    rbp
  409a49:	ret    

0000000000409a4a <flatcc_builder_set_block_align@@Base>:
  409a4a:	endbr64 
  409a4e:	push   rbp
  409a4f:	mov    rbp,rsp
  409a52:	mov    QWORD PTR [rbp-0x8],rdi
  409a56:	mov    eax,esi
  409a58:	mov    WORD PTR [rbp-0xc],ax
  409a5c:	mov    rdx,QWORD PTR [rbp-0x8]
  409a60:	movzx  eax,WORD PTR [rbp-0xc]
  409a64:	mov    WORD PTR [rdx+0xec],ax
  409a6b:	nop
  409a6c:	pop    rbp
  409a6d:	ret    

0000000000409a6e <flatcc_builder_get_level@@Base>:
  409a6e:	endbr64 
  409a72:	push   rbp
  409a73:	mov    rbp,rsp
  409a76:	mov    QWORD PTR [rbp-0x8],rdi
  409a7a:	mov    rax,QWORD PTR [rbp-0x8]
  409a7e:	mov    eax,DWORD PTR [rax+0x104]
  409a84:	pop    rbp
  409a85:	ret    

0000000000409a86 <flatcc_builder_set_max_level@@Base>:
  409a86:	endbr64 
  409a8a:	push   rbp
  409a8b:	mov    rbp,rsp
  409a8e:	mov    QWORD PTR [rbp-0x8],rdi
  409a92:	mov    DWORD PTR [rbp-0xc],esi
  409a95:	mov    rax,QWORD PTR [rbp-0x8]
  409a99:	mov    edx,DWORD PTR [rbp-0xc]
  409a9c:	mov    DWORD PTR [rax+0x120],edx
  409aa2:	mov    rax,QWORD PTR [rbp-0x8]
  409aa6:	mov    edx,DWORD PTR [rax+0x108]
  409aac:	mov    rax,QWORD PTR [rbp-0x8]
  409ab0:	mov    eax,DWORD PTR [rax+0x120]
  409ab6:	cmp    edx,eax
  409ab8:	jge    409ace <flatcc_builder_set_max_level@@Base+0x48>
  409aba:	mov    rax,QWORD PTR [rbp-0x8]
  409abe:	mov    edx,DWORD PTR [rax+0x120]
  409ac4:	mov    rax,QWORD PTR [rbp-0x8]
  409ac8:	mov    DWORD PTR [rax+0x108],edx
  409ace:	nop
  409acf:	pop    rbp
  409ad0:	ret    

0000000000409ad1 <flatcc_builder_get_buffer_size@@Base>:
  409ad1:	endbr64 
  409ad5:	push   rbp
  409ad6:	mov    rbp,rsp
  409ad9:	mov    QWORD PTR [rbp-0x8],rdi
  409add:	mov    rax,QWORD PTR [rbp-0x8]
  409ae1:	mov    edx,DWORD PTR [rax+0xf4]
  409ae7:	mov    rax,QWORD PTR [rbp-0x8]
  409aeb:	mov    eax,DWORD PTR [rax+0xf0]
  409af1:	sub    edx,eax
  409af3:	mov    eax,edx
  409af5:	cdqe   
  409af7:	pop    rbp
  409af8:	ret    

0000000000409af9 <flatcc_builder_get_buffer_start@@Base>:
  409af9:	endbr64 
  409afd:	push   rbp
  409afe:	mov    rbp,rsp
  409b01:	mov    QWORD PTR [rbp-0x8],rdi
  409b05:	mov    rax,QWORD PTR [rbp-0x8]
  409b09:	mov    eax,DWORD PTR [rax+0xf0]
  409b0f:	pop    rbp
  409b10:	ret    

0000000000409b11 <flatcc_builder_get_buffer_end@@Base>:
  409b11:	endbr64 
  409b15:	push   rbp
  409b16:	mov    rbp,rsp
  409b19:	mov    QWORD PTR [rbp-0x8],rdi
  409b1d:	mov    rax,QWORD PTR [rbp-0x8]
  409b21:	mov    eax,DWORD PTR [rax+0xf4]
  409b27:	pop    rbp
  409b28:	ret    

0000000000409b29 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409b29:	endbr64 
  409b2d:	push   rbp
  409b2e:	mov    rbp,rsp
  409b31:	mov    QWORD PTR [rbp-0x8],rdi
  409b35:	mov    QWORD PTR [rbp-0x10],rsi
  409b39:	mov    rax,QWORD PTR [rbp-0x8]
  409b3d:	mov    rdx,QWORD PTR [rbp-0x10]
  409b41:	mov    QWORD PTR [rax+0x118],rdx
  409b48:	nop
  409b49:	pop    rbp
  409b4a:	ret    

0000000000409b4b <flatcc_builder_set_identifier@@Base>:
  409b4b:	endbr64 
  409b4f:	push   rbp
  409b50:	mov    rbp,rsp
  409b53:	mov    QWORD PTR [rbp-0x8],rdi
  409b57:	mov    QWORD PTR [rbp-0x10],rsi
  409b5b:	cmp    QWORD PTR [rbp-0x10],0x0
  409b60:	je     409b68 <flatcc_builder_set_identifier@@Base+0x1d>
  409b62:	mov    rax,QWORD PTR [rbp-0x10]
  409b66:	jmp    409b6f <flatcc_builder_set_identifier@@Base+0x24>
  409b68:	mov    rax,0x40d1c0
  409b6f:	mov    rdx,QWORD PTR [rbp-0x8]
  409b73:	add    rdx,0x110
  409b7a:	mov    eax,DWORD PTR [rax]
  409b7c:	mov    DWORD PTR [rdx],eax
  409b7e:	nop
  409b7f:	pop    rbp
  409b80:	ret    

0000000000409b81 <flatcc_builder_get_type@@Base>:
  409b81:	endbr64 
  409b85:	push   rbp
  409b86:	mov    rbp,rsp
  409b89:	mov    QWORD PTR [rbp-0x8],rdi
  409b8d:	mov    rax,QWORD PTR [rbp-0x8]
  409b91:	mov    rax,QWORD PTR [rax+0x30]
  409b95:	test   rax,rax
  409b98:	je     409bab <flatcc_builder_get_type@@Base+0x2a>
  409b9a:	mov    rax,QWORD PTR [rbp-0x8]
  409b9e:	mov    rax,QWORD PTR [rax+0x30]
  409ba2:	movzx  eax,WORD PTR [rax+0xe]
  409ba6:	movzx  eax,ax
  409ba9:	jmp    409bb0 <flatcc_builder_get_type@@Base+0x2f>
  409bab:	mov    eax,0x0
  409bb0:	pop    rbp
  409bb1:	ret    

0000000000409bb2 <flatcc_builder_get_type_at@@Base>:
  409bb2:	endbr64 
  409bb6:	push   rbp
  409bb7:	mov    rbp,rsp
  409bba:	mov    QWORD PTR [rbp-0x8],rdi
  409bbe:	mov    DWORD PTR [rbp-0xc],esi
  409bc1:	cmp    DWORD PTR [rbp-0xc],0x0
  409bc5:	jle    409bd6 <flatcc_builder_get_type_at@@Base+0x24>
  409bc7:	mov    rax,QWORD PTR [rbp-0x8]
  409bcb:	mov    eax,DWORD PTR [rax+0x104]
  409bd1:	cmp    DWORD PTR [rbp-0xc],eax
  409bd4:	jle    409bdd <flatcc_builder_get_type_at@@Base+0x2b>
  409bd6:	mov    eax,0x0
  409bdb:	jmp    409c11 <flatcc_builder_get_type_at@@Base+0x5f>
  409bdd:	mov    rax,QWORD PTR [rbp-0x8]
  409be1:	mov    rcx,QWORD PTR [rax+0x30]
  409be5:	mov    rax,QWORD PTR [rbp-0x8]
  409be9:	mov    eax,DWORD PTR [rax+0x104]
  409bef:	mov    edx,DWORD PTR [rbp-0xc]
  409bf2:	sub    edx,eax
  409bf4:	mov    eax,edx
  409bf6:	movsxd rdx,eax
  409bf9:	mov    rax,rdx
  409bfc:	shl    rax,0x3
  409c00:	add    rax,rdx
  409c03:	shl    rax,0x2
  409c07:	add    rax,rcx
  409c0a:	movzx  eax,WORD PTR [rax+0xe]
  409c0e:	movzx  eax,ax
  409c11:	pop    rbp
  409c12:	ret    

0000000000409c13 <flatcc_builder_get_direct_buffer@@Base>:
  409c13:	endbr64 
  409c17:	push   rbp
  409c18:	mov    rbp,rsp
  409c1b:	sub    rsp,0x10
  409c1f:	mov    QWORD PTR [rbp-0x8],rdi
  409c23:	mov    QWORD PTR [rbp-0x10],rsi
  409c27:	mov    rax,QWORD PTR [rbp-0x8]
  409c2b:	mov    eax,DWORD PTR [rax+0x128]
  409c31:	test   eax,eax
  409c33:	je     409c51 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  409c35:	mov    rax,QWORD PTR [rbp-0x8]
  409c39:	lea    rdx,[rax+0x130]
  409c40:	mov    rax,QWORD PTR [rbp-0x10]
  409c44:	mov    rsi,rax
  409c47:	mov    rdi,rdx
  409c4a:	call   404877 <main@@Base+0x1a1>
  409c4f:	jmp    409c68 <flatcc_builder_get_direct_buffer@@Base+0x55>
  409c51:	cmp    QWORD PTR [rbp-0x10],0x0
  409c56:	je     409c63 <flatcc_builder_get_direct_buffer@@Base+0x50>
  409c58:	mov    rax,QWORD PTR [rbp-0x10]
  409c5c:	mov    QWORD PTR [rax],0x0
  409c63:	mov    eax,0x0
  409c68:	leave  
  409c69:	ret    

0000000000409c6a <flatcc_builder_copy_buffer@@Base>:
  409c6a:	endbr64 
  409c6e:	push   rbp
  409c6f:	mov    rbp,rsp
  409c72:	sub    rsp,0x20
  409c76:	mov    QWORD PTR [rbp-0x8],rdi
  409c7a:	mov    QWORD PTR [rbp-0x10],rsi
  409c7e:	mov    QWORD PTR [rbp-0x18],rdx
  409c82:	mov    rax,QWORD PTR [rbp-0x8]
  409c86:	mov    eax,DWORD PTR [rax+0x128]
  409c8c:	test   eax,eax
  409c8e:	jne    409c97 <flatcc_builder_copy_buffer@@Base+0x2d>
  409c90:	mov    eax,0x0
  409c95:	jmp    409ce3 <flatcc_builder_copy_buffer@@Base+0x79>
  409c97:	mov    rax,QWORD PTR [rbp-0x8]
  409c9b:	lea    rcx,[rax+0x130]
  409ca2:	mov    rdx,QWORD PTR [rbp-0x18]
  409ca6:	mov    rax,QWORD PTR [rbp-0x10]
  409caa:	mov    rsi,rax
  409cad:	mov    rdi,rcx
  409cb0:	call   40a91e <flatcc_emitter_copy_buffer@@Base>
  409cb5:	mov    QWORD PTR [rbp-0x10],rax
  409cb9:	cmp    QWORD PTR [rbp-0x10],0x0
  409cbe:	jne    409cdf <flatcc_builder_copy_buffer@@Base+0x75>
  409cc0:	lea    rcx,[rip+0x41d9]        # 40dea0 <flatcc_builder_padding_base@@Base+0xce0>
  409cc7:	mov    edx,0x786
  409ccc:	lea    rsi,[rip+0x36ed]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409cd3:	lea    rdi,[rip+0x3b22]        # 40d7fc <flatcc_builder_padding_base@@Base+0x63c>
  409cda:	call   403130 <__assert_fail@plt>
  409cdf:	mov    rax,QWORD PTR [rbp-0x10]
  409ce3:	leave  
  409ce4:	ret    

0000000000409ce5 <flatcc_builder_finalize_buffer@@Base>:
  409ce5:	endbr64 
  409ce9:	push   rbp
  409cea:	mov    rbp,rsp
  409ced:	sub    rsp,0x20
  409cf1:	mov    QWORD PTR [rbp-0x18],rdi
  409cf5:	mov    QWORD PTR [rbp-0x20],rsi
  409cf9:	mov    rax,QWORD PTR [rbp-0x18]
  409cfd:	mov    rdi,rax
  409d00:	call   409ad1 <flatcc_builder_get_buffer_size@@Base>
  409d05:	mov    QWORD PTR [rbp-0x10],rax
  409d09:	cmp    QWORD PTR [rbp-0x20],0x0
  409d0e:	je     409d1b <flatcc_builder_finalize_buffer@@Base+0x36>
  409d10:	mov    rax,QWORD PTR [rbp-0x20]
  409d14:	mov    rdx,QWORD PTR [rbp-0x10]
  409d18:	mov    QWORD PTR [rax],rdx
  409d1b:	mov    rax,QWORD PTR [rbp-0x10]
  409d1f:	mov    rdi,rax
  409d22:	call   403180 <malloc@plt>
  409d27:	mov    QWORD PTR [rbp-0x8],rax
  409d2b:	cmp    QWORD PTR [rbp-0x8],0x0
  409d30:	jne    409d51 <flatcc_builder_finalize_buffer@@Base+0x6c>
  409d32:	lea    rcx,[rip+0x4187]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409d39:	mov    edx,0x798
  409d3e:	lea    rsi,[rip+0x367b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409d45:	lea    rdi,[rip+0x36d4]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409d4c:	call   403130 <__assert_fail@plt>
  409d51:	mov    rdx,QWORD PTR [rbp-0x10]
  409d55:	mov    rcx,QWORD PTR [rbp-0x8]
  409d59:	mov    rax,QWORD PTR [rbp-0x18]
  409d5d:	mov    rsi,rcx
  409d60:	mov    rdi,rax
  409d63:	call   409c6a <flatcc_builder_copy_buffer@@Base>
  409d68:	test   rax,rax
  409d6b:	jne    409d8c <flatcc_builder_finalize_buffer@@Base+0xa7>
  409d6d:	lea    rcx,[rip+0x414c]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409d74:	mov    edx,0x79c
  409d79:	lea    rsi,[rip+0x3640]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409d80:	lea    rdi,[rip+0x3699]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409d87:	call   403130 <__assert_fail@plt>
  409d8c:	nop
  409d8d:	endbr64 
  409d91:	cmp    QWORD PTR [rbp-0x8],0x0
  409d96:	jne    409daa <flatcc_builder_finalize_buffer@@Base+0xc5>
  409d98:	cmp    QWORD PTR [rbp-0x20],0x0
  409d9d:	je     409daa <flatcc_builder_finalize_buffer@@Base+0xc5>
  409d9f:	mov    rax,QWORD PTR [rbp-0x20]
  409da3:	mov    QWORD PTR [rax],0x0
  409daa:	mov    rax,QWORD PTR [rbp-0x8]
  409dae:	leave  
  409daf:	ret    

0000000000409db0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409db0:	endbr64 
  409db4:	push   rbp
  409db5:	mov    rbp,rsp
  409db8:	sub    rsp,0x30
  409dbc:	mov    QWORD PTR [rbp-0x28],rdi
  409dc0:	mov    QWORD PTR [rbp-0x30],rsi
  409dc4:	mov    rax,QWORD PTR [rbp-0x28]
  409dc8:	mov    rdi,rax
  409dcb:	call   409ad1 <flatcc_builder_get_buffer_size@@Base>
  409dd0:	mov    QWORD PTR [rbp-0x10],rax
  409dd4:	cmp    QWORD PTR [rbp-0x30],0x0
  409dd9:	je     409de6 <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  409ddb:	mov    rax,QWORD PTR [rbp-0x30]
  409ddf:	mov    rdx,QWORD PTR [rbp-0x10]
  409de3:	mov    QWORD PTR [rax],rdx
  409de6:	mov    rax,QWORD PTR [rbp-0x28]
  409dea:	mov    rdi,rax
  409ded:	call   409a0b <flatcc_builder_get_buffer_alignment@@Base>
  409df2:	movzx  eax,ax
  409df5:	mov    QWORD PTR [rbp-0x8],rax
  409df9:	mov    rdx,QWORD PTR [rbp-0x10]
  409dfd:	mov    rax,QWORD PTR [rbp-0x8]
  409e01:	add    rax,rdx
  409e04:	lea    rdx,[rax-0x1]
  409e08:	mov    rax,QWORD PTR [rbp-0x8]
  409e0c:	neg    rax
  409e0f:	and    rax,rdx
  409e12:	mov    QWORD PTR [rbp-0x10],rax
  409e16:	mov    rdx,QWORD PTR [rbp-0x10]
  409e1a:	mov    rax,QWORD PTR [rbp-0x8]
  409e1e:	mov    rsi,rdx
  409e21:	mov    rdi,rax
  409e24:	call   4047c3 <main@@Base+0xed>
  409e29:	mov    QWORD PTR [rbp-0x18],rax
  409e2d:	cmp    QWORD PTR [rbp-0x18],0x0
  409e32:	je     409e66 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  409e34:	mov    rdx,QWORD PTR [rbp-0x10]
  409e38:	mov    rcx,QWORD PTR [rbp-0x18]
  409e3c:	mov    rax,QWORD PTR [rbp-0x28]
  409e40:	mov    rsi,rcx
  409e43:	mov    rdi,rax
  409e46:	call   409c6a <flatcc_builder_copy_buffer@@Base>
  409e4b:	test   rax,rax
  409e4e:	jne    409e69 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  409e50:	mov    rax,QWORD PTR [rbp-0x18]
  409e54:	mov    rdi,rax
  409e57:	call   4030f0 <free@plt>
  409e5c:	mov    QWORD PTR [rbp-0x18],0x0
  409e64:	jmp    409e6a <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409e66:	nop
  409e67:	jmp    409e6a <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409e69:	nop
  409e6a:	cmp    QWORD PTR [rbp-0x18],0x0
  409e6f:	jne    409e83 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409e71:	cmp    QWORD PTR [rbp-0x30],0x0
  409e76:	je     409e83 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409e78:	mov    rax,QWORD PTR [rbp-0x30]
  409e7c:	mov    QWORD PTR [rax],0x0
  409e83:	mov    rax,QWORD PTR [rbp-0x18]
  409e87:	leave  
  409e88:	ret    

0000000000409e89 <flatcc_builder_aligned_alloc@@Base>:
  409e89:	endbr64 
  409e8d:	push   rbp
  409e8e:	mov    rbp,rsp
  409e91:	sub    rsp,0x10
  409e95:	mov    QWORD PTR [rbp-0x8],rdi
  409e99:	mov    QWORD PTR [rbp-0x10],rsi
  409e9d:	mov    rdx,QWORD PTR [rbp-0x10]
  409ea1:	mov    rax,QWORD PTR [rbp-0x8]
  409ea5:	mov    rsi,rdx
  409ea8:	mov    rdi,rax
  409eab:	call   4047c3 <main@@Base+0xed>
  409eb0:	leave  
  409eb1:	ret    

0000000000409eb2 <flatcc_builder_aligned_free@@Base>:
  409eb2:	endbr64 
  409eb6:	push   rbp
  409eb7:	mov    rbp,rsp
  409eba:	sub    rsp,0x10
  409ebe:	mov    QWORD PTR [rbp-0x8],rdi
  409ec2:	mov    rax,QWORD PTR [rbp-0x8]
  409ec6:	mov    rdi,rax
  409ec9:	call   4030f0 <free@plt>
  409ece:	nop
  409ecf:	leave  
  409ed0:	ret    

0000000000409ed1 <flatcc_builder_get_emit_context@@Base>:
  409ed1:	endbr64 
  409ed5:	push   rbp
  409ed6:	mov    rbp,rsp
  409ed9:	mov    QWORD PTR [rbp-0x8],rdi
  409edd:	mov    rax,QWORD PTR [rbp-0x8]
  409ee1:	mov    rax,QWORD PTR [rax+0x38]
  409ee5:	pop    rbp
  409ee6:	ret    
  409ee7:	endbr64 
  409eeb:	push   rbp
  409eec:	mov    rbp,rsp
  409eef:	sub    rsp,0x20
  409ef3:	mov    QWORD PTR [rbp-0x18],rdi
  409ef7:	mov    QWORD PTR [rbp-0x8],0x0
  409eff:	mov    rax,QWORD PTR [rbp-0x18]
  409f03:	mov    rax,QWORD PTR [rax]
  409f06:	test   rax,rax
  409f09:	je     409f67 <flatcc_builder_get_emit_context@@Base+0x96>
  409f0b:	mov    rax,QWORD PTR [rbp-0x18]
  409f0f:	mov    rax,QWORD PTR [rax]
  409f12:	mov    rdx,QWORD PTR [rax+0xb88]
  409f19:	mov    rax,QWORD PTR [rbp-0x18]
  409f1d:	mov    rax,QWORD PTR [rax+0x8]
  409f21:	cmp    rdx,rax
  409f24:	je     409f67 <flatcc_builder_get_emit_context@@Base+0x96>
  409f26:	mov    rax,QWORD PTR [rbp-0x18]
  409f2a:	mov    rax,QWORD PTR [rax]
  409f2d:	mov    edx,DWORD PTR [rax+0xb90]
  409f33:	mov    rax,QWORD PTR [rbp-0x18]
  409f37:	mov    rax,QWORD PTR [rax]
  409f3a:	mov    rax,QWORD PTR [rax+0xb88]
  409f41:	sub    edx,0xb80
  409f47:	mov    DWORD PTR [rax+0xb90],edx
  409f4d:	mov    rax,QWORD PTR [rbp-0x18]
  409f51:	mov    rax,QWORD PTR [rax]
  409f54:	mov    rdx,QWORD PTR [rax+0xb88]
  409f5b:	mov    rax,QWORD PTR [rbp-0x18]
  409f5f:	mov    QWORD PTR [rax],rdx
  409f62:	jmp    40a09f <flatcc_builder_get_emit_context@@Base+0x1ce>
  409f67:	mov    edi,0xb98
  409f6c:	call   403180 <malloc@plt>
  409f71:	mov    QWORD PTR [rbp-0x8],rax
  409f75:	cmp    QWORD PTR [rbp-0x8],0x0
  409f7a:	jne    409f86 <flatcc_builder_get_emit_context@@Base+0xb5>
  409f7c:	mov    eax,0xffffffff
  409f81:	jmp    40a0ed <flatcc_builder_get_emit_context@@Base+0x21c>
  409f86:	mov    rax,QWORD PTR [rbp-0x18]
  409f8a:	mov    rax,QWORD PTR [rax+0x38]
  409f8e:	lea    rdx,[rax+0xb80]
  409f95:	mov    rax,QWORD PTR [rbp-0x18]
  409f99:	mov    QWORD PTR [rax+0x38],rdx
  409f9d:	mov    rax,QWORD PTR [rbp-0x18]
  409fa1:	mov    rax,QWORD PTR [rax]
  409fa4:	test   rax,rax
  409fa7:	je     40a003 <flatcc_builder_get_emit_context@@Base+0x132>
  409fa9:	mov    rax,QWORD PTR [rbp-0x18]
  409fad:	mov    rdx,QWORD PTR [rax+0x8]
  409fb1:	mov    rax,QWORD PTR [rbp-0x8]
  409fb5:	mov    QWORD PTR [rax+0xb88],rdx
  409fbc:	mov    rax,QWORD PTR [rbp-0x18]
  409fc0:	mov    rdx,QWORD PTR [rax]
  409fc3:	mov    rax,QWORD PTR [rbp-0x8]
  409fc7:	mov    QWORD PTR [rax+0xb80],rdx
  409fce:	mov    rax,QWORD PTR [rbp-0x18]
  409fd2:	mov    rax,QWORD PTR [rax]
  409fd5:	mov    rdx,QWORD PTR [rbp-0x8]
  409fd9:	mov    QWORD PTR [rax+0xb88],rdx
  409fe0:	mov    rax,QWORD PTR [rbp-0x18]
  409fe4:	mov    rax,QWORD PTR [rax+0x8]
  409fe8:	mov    rdx,QWORD PTR [rbp-0x8]
  409fec:	mov    QWORD PTR [rax+0xb80],rdx
  409ff3:	mov    rax,QWORD PTR [rbp-0x18]
  409ff7:	mov    rdx,QWORD PTR [rbp-0x8]
  409ffb:	mov    QWORD PTR [rax],rdx
  409ffe:	jmp    40a09f <flatcc_builder_get_emit_context@@Base+0x1ce>
  40a003:	mov    rax,QWORD PTR [rbp-0x18]
  40a007:	mov    rdx,QWORD PTR [rbp-0x8]
  40a00b:	mov    QWORD PTR [rax],rdx
  40a00e:	mov    rax,QWORD PTR [rbp-0x18]
  40a012:	mov    rdx,QWORD PTR [rbp-0x8]
  40a016:	mov    QWORD PTR [rax+0x8],rdx
  40a01a:	mov    rax,QWORD PTR [rbp-0x8]
  40a01e:	mov    rdx,QWORD PTR [rbp-0x8]
  40a022:	mov    QWORD PTR [rax+0xb80],rdx
  40a029:	mov    rax,QWORD PTR [rbp-0x8]
  40a02d:	mov    rdx,QWORD PTR [rbp-0x8]
  40a031:	mov    QWORD PTR [rax+0xb88],rdx
  40a038:	mov    rax,QWORD PTR [rbp-0x18]
  40a03c:	mov    rax,QWORD PTR [rax]
  40a03f:	lea    rdx,[rax+0x5c0]
  40a046:	mov    rax,QWORD PTR [rbp-0x18]
  40a04a:	mov    QWORD PTR [rax+0x10],rdx
  40a04e:	mov    rax,QWORD PTR [rbp-0x18]
  40a052:	mov    rdx,QWORD PTR [rax+0x10]
  40a056:	mov    rax,QWORD PTR [rbp-0x18]
  40a05a:	mov    QWORD PTR [rax+0x20],rdx
  40a05e:	mov    rax,QWORD PTR [rbp-0x18]
  40a062:	mov    QWORD PTR [rax+0x18],0x5c0
  40a06a:	mov    rax,QWORD PTR [rbp-0x18]
  40a06e:	mov    rax,QWORD PTR [rax+0x18]
  40a072:	mov    edx,0xb80
  40a077:	sub    rdx,rax
  40a07a:	mov    rax,QWORD PTR [rbp-0x18]
  40a07e:	mov    QWORD PTR [rax+0x28],rdx
  40a082:	mov    rax,QWORD PTR [rbp-0x18]
  40a086:	mov    rax,QWORD PTR [rax+0x18]
  40a08a:	neg    eax
  40a08c:	mov    edx,eax
  40a08e:	mov    rax,QWORD PTR [rbp-0x8]
  40a092:	mov    DWORD PTR [rax+0xb90],edx
  40a098:	mov    eax,0x0
  40a09d:	jmp    40a0ed <flatcc_builder_get_emit_context@@Base+0x21c>
  40a09f:	mov    rax,QWORD PTR [rbp-0x18]
  40a0a3:	mov    rax,QWORD PTR [rax]
  40a0a6:	lea    rdx,[rax+0xb80]
  40a0ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a0b1:	mov    QWORD PTR [rax+0x10],rdx
  40a0b5:	mov    rax,QWORD PTR [rbp-0x18]
  40a0b9:	mov    QWORD PTR [rax+0x18],0xb80
  40a0c1:	mov    rax,QWORD PTR [rbp-0x18]
  40a0c5:	mov    rax,QWORD PTR [rax]
  40a0c8:	mov    rax,QWORD PTR [rax+0xb80]
  40a0cf:	mov    edx,DWORD PTR [rax+0xb90]
  40a0d5:	mov    rax,QWORD PTR [rbp-0x18]
  40a0d9:	mov    rax,QWORD PTR [rax]
  40a0dc:	sub    edx,0xb80
  40a0e2:	mov    DWORD PTR [rax+0xb90],edx
  40a0e8:	mov    eax,0x0
  40a0ed:	leave  
  40a0ee:	ret    
  40a0ef:	endbr64 
  40a0f3:	push   rbp
  40a0f4:	mov    rbp,rsp
  40a0f7:	sub    rsp,0x20
  40a0fb:	mov    QWORD PTR [rbp-0x18],rdi
  40a0ff:	mov    QWORD PTR [rbp-0x8],0x0
  40a107:	mov    rax,QWORD PTR [rbp-0x18]
  40a10b:	mov    rax,QWORD PTR [rax+0x8]
  40a10f:	test   rax,rax
  40a112:	je     40a14b <flatcc_builder_get_emit_context@@Base+0x27a>
  40a114:	mov    rax,QWORD PTR [rbp-0x18]
  40a118:	mov    rax,QWORD PTR [rax+0x8]
  40a11c:	mov    rdx,QWORD PTR [rax+0xb80]
  40a123:	mov    rax,QWORD PTR [rbp-0x18]
  40a127:	mov    rax,QWORD PTR [rax]
  40a12a:	cmp    rdx,rax
  40a12d:	je     40a14b <flatcc_builder_get_emit_context@@Base+0x27a>
  40a12f:	mov    rax,QWORD PTR [rbp-0x18]
  40a133:	mov    rax,QWORD PTR [rax+0x8]
  40a137:	mov    rdx,QWORD PTR [rax+0xb80]
  40a13e:	mov    rax,QWORD PTR [rbp-0x18]
  40a142:	mov    QWORD PTR [rax+0x8],rdx
  40a146:	jmp    40a285 <flatcc_builder_get_emit_context@@Base+0x3b4>
  40a14b:	mov    edi,0xb98
  40a150:	call   403180 <malloc@plt>
  40a155:	mov    QWORD PTR [rbp-0x8],rax
  40a159:	cmp    QWORD PTR [rbp-0x8],0x0
  40a15e:	jne    40a16a <flatcc_builder_get_emit_context@@Base+0x299>
  40a160:	mov    eax,0xffffffff
  40a165:	jmp    40a2d2 <flatcc_builder_get_emit_context@@Base+0x401>
  40a16a:	mov    rax,QWORD PTR [rbp-0x18]
  40a16e:	mov    rax,QWORD PTR [rax+0x38]
  40a172:	lea    rdx,[rax+0xb80]
  40a179:	mov    rax,QWORD PTR [rbp-0x18]
  40a17d:	mov    QWORD PTR [rax+0x38],rdx
  40a181:	mov    rax,QWORD PTR [rbp-0x18]
  40a185:	mov    rax,QWORD PTR [rax+0x8]
  40a189:	test   rax,rax
  40a18c:	je     40a1e9 <flatcc_builder_get_emit_context@@Base+0x318>
  40a18e:	mov    rax,QWORD PTR [rbp-0x18]
  40a192:	mov    rdx,QWORD PTR [rax+0x8]
  40a196:	mov    rax,QWORD PTR [rbp-0x8]
  40a19a:	mov    QWORD PTR [rax+0xb88],rdx
  40a1a1:	mov    rax,QWORD PTR [rbp-0x18]
  40a1a5:	mov    rdx,QWORD PTR [rax]
  40a1a8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1ac:	mov    QWORD PTR [rax+0xb80],rdx
  40a1b3:	mov    rax,QWORD PTR [rbp-0x18]
  40a1b7:	mov    rax,QWORD PTR [rax]
  40a1ba:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1be:	mov    QWORD PTR [rax+0xb88],rdx
  40a1c5:	mov    rax,QWORD PTR [rbp-0x18]
  40a1c9:	mov    rax,QWORD PTR [rax+0x8]
  40a1cd:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1d1:	mov    QWORD PTR [rax+0xb80],rdx
  40a1d8:	mov    rax,QWORD PTR [rbp-0x18]
  40a1dc:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1e0:	mov    QWORD PTR [rax+0x8],rdx
  40a1e4:	jmp    40a285 <flatcc_builder_get_emit_context@@Base+0x3b4>
  40a1e9:	mov    rax,QWORD PTR [rbp-0x18]
  40a1ed:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1f1:	mov    QWORD PTR [rax],rdx
  40a1f4:	mov    rax,QWORD PTR [rbp-0x18]
  40a1f8:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1fc:	mov    QWORD PTR [rax+0x8],rdx
  40a200:	mov    rax,QWORD PTR [rbp-0x8]
  40a204:	mov    rdx,QWORD PTR [rbp-0x8]
  40a208:	mov    QWORD PTR [rax+0xb80],rdx
  40a20f:	mov    rax,QWORD PTR [rbp-0x8]
  40a213:	mov    rdx,QWORD PTR [rbp-0x8]
  40a217:	mov    QWORD PTR [rax+0xb88],rdx
  40a21e:	mov    rax,QWORD PTR [rbp-0x18]
  40a222:	mov    rax,QWORD PTR [rax]
  40a225:	lea    rdx,[rax+0x5c0]
  40a22c:	mov    rax,QWORD PTR [rbp-0x18]
  40a230:	mov    QWORD PTR [rax+0x10],rdx
  40a234:	mov    rax,QWORD PTR [rbp-0x18]
  40a238:	mov    rdx,QWORD PTR [rax+0x10]
  40a23c:	mov    rax,QWORD PTR [rbp-0x18]
  40a240:	mov    QWORD PTR [rax+0x20],rdx
  40a244:	mov    rax,QWORD PTR [rbp-0x18]
  40a248:	mov    QWORD PTR [rax+0x18],0x5c0
  40a250:	mov    rax,QWORD PTR [rbp-0x18]
  40a254:	mov    rax,QWORD PTR [rax+0x18]
  40a258:	mov    edx,0xb80
  40a25d:	sub    rdx,rax
  40a260:	mov    rax,QWORD PTR [rbp-0x18]
  40a264:	mov    QWORD PTR [rax+0x28],rdx
  40a268:	mov    rax,QWORD PTR [rbp-0x18]
  40a26c:	mov    rax,QWORD PTR [rax+0x18]
  40a270:	neg    eax
  40a272:	mov    edx,eax
  40a274:	mov    rax,QWORD PTR [rbp-0x8]
  40a278:	mov    DWORD PTR [rax+0xb90],edx
  40a27e:	mov    eax,0x0
  40a283:	jmp    40a2d2 <flatcc_builder_get_emit_context@@Base+0x401>
  40a285:	mov    rax,QWORD PTR [rbp-0x18]
  40a289:	mov    rax,QWORD PTR [rax+0x8]
  40a28d:	mov    rdx,rax
  40a290:	mov    rax,QWORD PTR [rbp-0x18]
  40a294:	mov    QWORD PTR [rax+0x20],rdx
  40a298:	mov    rax,QWORD PTR [rbp-0x18]
  40a29c:	mov    QWORD PTR [rax+0x28],0xb80
  40a2a4:	mov    rax,QWORD PTR [rbp-0x18]
  40a2a8:	mov    rax,QWORD PTR [rax+0x8]
  40a2ac:	mov    rax,QWORD PTR [rax+0xb88]
  40a2b3:	mov    edx,DWORD PTR [rax+0xb90]
  40a2b9:	mov    rax,QWORD PTR [rbp-0x18]
  40a2bd:	mov    rax,QWORD PTR [rax+0x8]
  40a2c1:	add    edx,0xb80
  40a2c7:	mov    DWORD PTR [rax+0xb90],edx
  40a2cd:	mov    eax,0x0
  40a2d2:	leave  
  40a2d3:	ret    
  40a2d4:	endbr64 
  40a2d8:	push   rbp
  40a2d9:	mov    rbp,rsp
  40a2dc:	sub    rsp,0x30
  40a2e0:	mov    QWORD PTR [rbp-0x18],rdi
  40a2e4:	mov    QWORD PTR [rbp-0x20],rsi
  40a2e8:	mov    QWORD PTR [rbp-0x28],rdx
  40a2ec:	mov    rax,QWORD PTR [rbp-0x28]
  40a2f0:	add    QWORD PTR [rbp-0x20],rax
  40a2f4:	jmp    40a398 <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a2f9:	mov    rax,QWORD PTR [rbp-0x28]
  40a2fd:	mov    QWORD PTR [rbp-0x8],rax
  40a301:	mov    rax,QWORD PTR [rbp-0x18]
  40a305:	mov    rax,QWORD PTR [rax+0x18]
  40a309:	cmp    QWORD PTR [rbp-0x8],rax
  40a30d:	jbe    40a339 <flatcc_builder_get_emit_context@@Base+0x468>
  40a30f:	mov    rax,QWORD PTR [rbp-0x18]
  40a313:	mov    rax,QWORD PTR [rax+0x18]
  40a317:	mov    QWORD PTR [rbp-0x8],rax
  40a31b:	cmp    QWORD PTR [rbp-0x8],0x0
  40a320:	jne    40a339 <flatcc_builder_get_emit_context@@Base+0x468>
  40a322:	mov    rax,QWORD PTR [rbp-0x18]
  40a326:	mov    rdi,rax
  40a329:	call   409ee7 <flatcc_builder_get_emit_context@@Base+0x16>
  40a32e:	test   eax,eax
  40a330:	je     40a398 <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a332:	mov    eax,0xffffffff
  40a337:	jmp    40a3a8 <flatcc_builder_get_emit_context@@Base+0x4d7>
  40a339:	mov    rax,QWORD PTR [rbp-0x18]
  40a33d:	mov    rax,QWORD PTR [rax+0x10]
  40a341:	mov    rdx,QWORD PTR [rbp-0x8]
  40a345:	neg    rdx
  40a348:	add    rdx,rax
  40a34b:	mov    rax,QWORD PTR [rbp-0x18]
  40a34f:	mov    QWORD PTR [rax+0x10],rdx
  40a353:	mov    rax,QWORD PTR [rbp-0x18]
  40a357:	mov    rax,QWORD PTR [rax+0x18]
  40a35b:	sub    rax,QWORD PTR [rbp-0x8]
  40a35f:	mov    rdx,rax
  40a362:	mov    rax,QWORD PTR [rbp-0x18]
  40a366:	mov    QWORD PTR [rax+0x18],rdx
  40a36a:	mov    rax,QWORD PTR [rbp-0x8]
  40a36e:	neg    rax
  40a371:	add    QWORD PTR [rbp-0x20],rax
  40a375:	mov    rax,QWORD PTR [rbp-0x8]
  40a379:	sub    QWORD PTR [rbp-0x28],rax
  40a37d:	mov    rax,QWORD PTR [rbp-0x18]
  40a381:	mov    rax,QWORD PTR [rax+0x10]
  40a385:	mov    rdx,QWORD PTR [rbp-0x8]
  40a389:	mov    rcx,QWORD PTR [rbp-0x20]
  40a38d:	mov    rsi,rcx
  40a390:	mov    rdi,rax
  40a393:	call   403170 <memcpy@plt>
  40a398:	cmp    QWORD PTR [rbp-0x28],0x0
  40a39d:	jne    40a2f9 <flatcc_builder_get_emit_context@@Base+0x428>
  40a3a3:	mov    eax,0x0
  40a3a8:	leave  
  40a3a9:	ret    
  40a3aa:	endbr64 
  40a3ae:	push   rbp
  40a3af:	mov    rbp,rsp
  40a3b2:	sub    rsp,0x30
  40a3b6:	mov    QWORD PTR [rbp-0x18],rdi
  40a3ba:	mov    QWORD PTR [rbp-0x20],rsi
  40a3be:	mov    QWORD PTR [rbp-0x28],rdx
  40a3c2:	jmp    40a460 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a3c7:	mov    rax,QWORD PTR [rbp-0x28]
  40a3cb:	mov    QWORD PTR [rbp-0x8],rax
  40a3cf:	mov    rax,QWORD PTR [rbp-0x18]
  40a3d3:	mov    rax,QWORD PTR [rax+0x28]
  40a3d7:	cmp    QWORD PTR [rbp-0x8],rax
  40a3db:	jbe    40a407 <flatcc_builder_get_emit_context@@Base+0x536>
  40a3dd:	mov    rax,QWORD PTR [rbp-0x18]
  40a3e1:	mov    rax,QWORD PTR [rax+0x28]
  40a3e5:	mov    QWORD PTR [rbp-0x8],rax
  40a3e9:	cmp    QWORD PTR [rbp-0x8],0x0
  40a3ee:	jne    40a407 <flatcc_builder_get_emit_context@@Base+0x536>
  40a3f0:	mov    rax,QWORD PTR [rbp-0x18]
  40a3f4:	mov    rdi,rax
  40a3f7:	call   40a0ef <flatcc_builder_get_emit_context@@Base+0x21e>
  40a3fc:	test   eax,eax
  40a3fe:	je     40a460 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a400:	mov    eax,0xffffffff
  40a405:	jmp    40a470 <flatcc_builder_get_emit_context@@Base+0x59f>
  40a407:	mov    rax,QWORD PTR [rbp-0x18]
  40a40b:	mov    rax,QWORD PTR [rax+0x20]
  40a40f:	mov    rdx,QWORD PTR [rbp-0x8]
  40a413:	mov    rcx,QWORD PTR [rbp-0x20]
  40a417:	mov    rsi,rcx
  40a41a:	mov    rdi,rax
  40a41d:	call   403170 <memcpy@plt>
  40a422:	mov    rax,QWORD PTR [rbp-0x8]
  40a426:	sub    QWORD PTR [rbp-0x28],rax
  40a42a:	mov    rax,QWORD PTR [rbp-0x8]
  40a42e:	add    QWORD PTR [rbp-0x20],rax
  40a432:	mov    rax,QWORD PTR [rbp-0x18]
  40a436:	mov    rdx,QWORD PTR [rax+0x20]
  40a43a:	mov    rax,QWORD PTR [rbp-0x8]
  40a43e:	add    rdx,rax
  40a441:	mov    rax,QWORD PTR [rbp-0x18]
  40a445:	mov    QWORD PTR [rax+0x20],rdx
  40a449:	mov    rax,QWORD PTR [rbp-0x18]
  40a44d:	mov    rax,QWORD PTR [rax+0x28]
  40a451:	sub    rax,QWORD PTR [rbp-0x8]
  40a455:	mov    rdx,rax
  40a458:	mov    rax,QWORD PTR [rbp-0x18]
  40a45c:	mov    QWORD PTR [rax+0x28],rdx
  40a460:	cmp    QWORD PTR [rbp-0x28],0x0
  40a465:	jne    40a3c7 <flatcc_builder_get_emit_context@@Base+0x4f6>
  40a46b:	mov    eax,0x0
  40a470:	leave  
  40a471:	ret    

000000000040a472 <flatcc_emitter_recycle_page@@Base>:
  40a472:	endbr64 
  40a476:	push   rbp
  40a477:	mov    rbp,rsp
  40a47a:	mov    QWORD PTR [rbp-0x8],rdi
  40a47e:	mov    QWORD PTR [rbp-0x10],rsi
  40a482:	mov    rax,QWORD PTR [rbp-0x8]
  40a486:	mov    rax,QWORD PTR [rax]
  40a489:	cmp    QWORD PTR [rbp-0x10],rax
  40a48d:	je     40a49d <flatcc_emitter_recycle_page@@Base+0x2b>
  40a48f:	mov    rax,QWORD PTR [rbp-0x8]
  40a493:	mov    rax,QWORD PTR [rax+0x8]
  40a497:	cmp    QWORD PTR [rbp-0x10],rax
  40a49b:	jne    40a4a7 <flatcc_emitter_recycle_page@@Base+0x35>
  40a49d:	mov    eax,0xffffffff
  40a4a2:	jmp    40a53d <flatcc_emitter_recycle_page@@Base+0xcb>
  40a4a7:	mov    rax,QWORD PTR [rbp-0x10]
  40a4ab:	mov    rax,QWORD PTR [rax+0xb80]
  40a4b2:	mov    rdx,QWORD PTR [rbp-0x10]
  40a4b6:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a4bd:	mov    QWORD PTR [rax+0xb88],rdx
  40a4c4:	mov    rax,QWORD PTR [rbp-0x10]
  40a4c8:	mov    rax,QWORD PTR [rax+0xb88]
  40a4cf:	mov    rdx,QWORD PTR [rbp-0x10]
  40a4d3:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a4da:	mov    QWORD PTR [rax+0xb80],rdx
  40a4e1:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e5:	mov    rax,QWORD PTR [rax]
  40a4e8:	mov    rdx,QWORD PTR [rax+0xb88]
  40a4ef:	mov    rax,QWORD PTR [rbp-0x10]
  40a4f3:	mov    QWORD PTR [rax+0xb88],rdx
  40a4fa:	mov    rax,QWORD PTR [rbp-0x8]
  40a4fe:	mov    rdx,QWORD PTR [rax]
  40a501:	mov    rax,QWORD PTR [rbp-0x10]
  40a505:	mov    QWORD PTR [rax+0xb80],rdx
  40a50c:	mov    rax,QWORD PTR [rbp-0x10]
  40a510:	mov    rax,QWORD PTR [rax+0xb88]
  40a517:	mov    rdx,QWORD PTR [rbp-0x10]
  40a51b:	mov    QWORD PTR [rax+0xb80],rdx
  40a522:	mov    rax,QWORD PTR [rbp-0x10]
  40a526:	mov    rax,QWORD PTR [rax+0xb80]
  40a52d:	mov    rdx,QWORD PTR [rbp-0x10]
  40a531:	mov    QWORD PTR [rax+0xb88],rdx
  40a538:	mov    eax,0x0
  40a53d:	pop    rbp
  40a53e:	ret    

000000000040a53f <flatcc_emitter_reset@@Base>:
  40a53f:	endbr64 
  40a543:	push   rbp
  40a544:	mov    rbp,rsp
  40a547:	sub    rsp,0x20
  40a54b:	mov    QWORD PTR [rbp-0x18],rdi
  40a54f:	mov    rax,QWORD PTR [rbp-0x18]
  40a553:	mov    rax,QWORD PTR [rax]
  40a556:	mov    QWORD PTR [rbp-0x8],rax
  40a55a:	mov    rax,QWORD PTR [rbp-0x18]
  40a55e:	mov    rax,QWORD PTR [rax]
  40a561:	test   rax,rax
  40a564:	je     40a6ce <flatcc_emitter_reset@@Base+0x18f>
  40a56a:	mov    rax,QWORD PTR [rbp-0x18]
  40a56e:	mov    rdx,QWORD PTR [rax]
  40a571:	mov    rax,QWORD PTR [rbp-0x18]
  40a575:	mov    QWORD PTR [rax+0x8],rdx
  40a579:	mov    rax,QWORD PTR [rbp-0x18]
  40a57d:	mov    rax,QWORD PTR [rax]
  40a580:	lea    rdx,[rax+0x5c0]
  40a587:	mov    rax,QWORD PTR [rbp-0x18]
  40a58b:	mov    QWORD PTR [rax+0x10],rdx
  40a58f:	mov    rax,QWORD PTR [rbp-0x18]
  40a593:	mov    rdx,QWORD PTR [rax+0x10]
  40a597:	mov    rax,QWORD PTR [rbp-0x18]
  40a59b:	mov    QWORD PTR [rax+0x20],rdx
  40a59f:	mov    rax,QWORD PTR [rbp-0x18]
  40a5a3:	mov    QWORD PTR [rax+0x18],0x5c0
  40a5ab:	mov    rax,QWORD PTR [rbp-0x18]
  40a5af:	mov    QWORD PTR [rax+0x28],0x5c0
  40a5b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a5bb:	mov    rax,QWORD PTR [rax+0x18]
  40a5bf:	mov    edx,eax
  40a5c1:	mov    rax,QWORD PTR [rbp-0x18]
  40a5c5:	mov    rax,QWORD PTR [rax]
  40a5c8:	neg    edx
  40a5ca:	mov    DWORD PTR [rax+0xb90],edx
  40a5d0:	mov    rax,QWORD PTR [rbp-0x18]
  40a5d4:	mov    rax,QWORD PTR [rax+0x40]
  40a5d8:	test   rax,rax
  40a5db:	jne    40a5ed <flatcc_emitter_reset@@Base+0xae>
  40a5dd:	mov    rax,QWORD PTR [rbp-0x18]
  40a5e1:	mov    rdx,QWORD PTR [rax+0x30]
  40a5e5:	mov    rax,QWORD PTR [rbp-0x18]
  40a5e9:	mov    QWORD PTR [rax+0x40],rdx
  40a5ed:	mov    rax,QWORD PTR [rbp-0x18]
  40a5f1:	mov    rdx,QWORD PTR [rax+0x40]
  40a5f5:	mov    rax,rdx
  40a5f8:	add    rax,rax
  40a5fb:	add    rax,rdx
  40a5fe:	shr    rax,0x2
  40a602:	mov    rdx,rax
  40a605:	mov    rax,QWORD PTR [rbp-0x18]
  40a609:	mov    rax,QWORD PTR [rax+0x30]
  40a60d:	shr    rax,0x2
  40a611:	add    rdx,rax
  40a614:	mov    rax,QWORD PTR [rbp-0x18]
  40a618:	mov    QWORD PTR [rax+0x40],rdx
  40a61c:	mov    rax,QWORD PTR [rbp-0x18]
  40a620:	mov    QWORD PTR [rax+0x30],0x0
  40a628:	jmp    40a694 <flatcc_emitter_reset@@Base+0x155>
  40a62a:	mov    rax,QWORD PTR [rbp-0x18]
  40a62e:	mov    rax,QWORD PTR [rax+0x8]
  40a632:	mov    rax,QWORD PTR [rax+0xb80]
  40a639:	mov    QWORD PTR [rbp-0x8],rax
  40a63d:	mov    rax,QWORD PTR [rbp-0x18]
  40a641:	mov    rax,QWORD PTR [rax+0x8]
  40a645:	mov    rdx,QWORD PTR [rbp-0x8]
  40a649:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a650:	mov    QWORD PTR [rax+0xb80],rdx
  40a657:	mov    rax,QWORD PTR [rbp-0x8]
  40a65b:	mov    rax,QWORD PTR [rax+0xb80]
  40a662:	mov    rdx,QWORD PTR [rbp-0x18]
  40a666:	mov    rdx,QWORD PTR [rdx+0x8]
  40a66a:	mov    QWORD PTR [rax+0xb88],rdx
  40a671:	mov    rax,QWORD PTR [rbp-0x8]
  40a675:	mov    rdi,rax
  40a678:	call   4030f0 <free@plt>
  40a67d:	mov    rax,QWORD PTR [rbp-0x18]
  40a681:	mov    rax,QWORD PTR [rax+0x38]
  40a685:	lea    rdx,[rax-0xb80]
  40a68c:	mov    rax,QWORD PTR [rbp-0x18]
  40a690:	mov    QWORD PTR [rax+0x38],rdx
  40a694:	mov    rax,QWORD PTR [rbp-0x18]
  40a698:	mov    rax,QWORD PTR [rax+0x40]
  40a69c:	lea    rdx,[rax+rax*1]
  40a6a0:	mov    rax,QWORD PTR [rbp-0x18]
  40a6a4:	mov    rax,QWORD PTR [rax+0x38]
  40a6a8:	cmp    rdx,rax
  40a6ab:	jae    40a6cf <flatcc_emitter_reset@@Base+0x190>
  40a6ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a6b1:	mov    rax,QWORD PTR [rax+0x8]
  40a6b5:	mov    rdx,QWORD PTR [rax+0xb80]
  40a6bc:	mov    rax,QWORD PTR [rbp-0x18]
  40a6c0:	mov    rax,QWORD PTR [rax]
  40a6c3:	cmp    rdx,rax
  40a6c6:	jne    40a62a <flatcc_emitter_reset@@Base+0xeb>
  40a6cc:	jmp    40a6cf <flatcc_emitter_reset@@Base+0x190>
  40a6ce:	nop
  40a6cf:	leave  
  40a6d0:	ret    

000000000040a6d1 <flatcc_emitter_clear@@Base>:
  40a6d1:	endbr64 
  40a6d5:	push   rbp
  40a6d6:	mov    rbp,rsp
  40a6d9:	sub    rsp,0x20
  40a6dd:	mov    QWORD PTR [rbp-0x18],rdi
  40a6e1:	mov    rax,QWORD PTR [rbp-0x18]
  40a6e5:	mov    rax,QWORD PTR [rax]
  40a6e8:	mov    QWORD PTR [rbp-0x8],rax
  40a6ec:	cmp    QWORD PTR [rbp-0x8],0x0
  40a6f1:	je     40a761 <flatcc_emitter_clear@@Base+0x90>
  40a6f3:	mov    rax,QWORD PTR [rbp-0x8]
  40a6f7:	mov    rax,QWORD PTR [rax+0xb88]
  40a6fe:	mov    QWORD PTR [rax+0xb80],0x0
  40a709:	jmp    40a72d <flatcc_emitter_clear@@Base+0x5c>
  40a70b:	mov    rax,QWORD PTR [rbp-0x8]
  40a70f:	mov    rax,QWORD PTR [rax+0xb80]
  40a716:	mov    QWORD PTR [rbp-0x8],rax
  40a71a:	mov    rax,QWORD PTR [rbp-0x8]
  40a71e:	mov    rax,QWORD PTR [rax+0xb88]
  40a725:	mov    rdi,rax
  40a728:	call   4030f0 <free@plt>
  40a72d:	mov    rax,QWORD PTR [rbp-0x8]
  40a731:	mov    rax,QWORD PTR [rax+0xb80]
  40a738:	test   rax,rax
  40a73b:	jne    40a70b <flatcc_emitter_clear@@Base+0x3a>
  40a73d:	mov    rax,QWORD PTR [rbp-0x8]
  40a741:	mov    rdi,rax
  40a744:	call   4030f0 <free@plt>
  40a749:	mov    rax,QWORD PTR [rbp-0x18]
  40a74d:	mov    edx,0x48
  40a752:	mov    esi,0x0
  40a757:	mov    rdi,rax
  40a75a:	call   403140 <memset@plt>
  40a75f:	jmp    40a762 <flatcc_emitter_clear@@Base+0x91>
  40a761:	nop
  40a762:	leave  
  40a763:	ret    

000000000040a764 <flatcc_emitter@@Base>:
  40a764:	endbr64 
  40a768:	push   rbp
  40a769:	mov    rbp,rsp
  40a76c:	sub    rsp,0x30
  40a770:	mov    QWORD PTR [rbp-0x18],rdi
  40a774:	mov    QWORD PTR [rbp-0x20],rsi
  40a778:	mov    DWORD PTR [rbp-0x24],edx
  40a77b:	mov    DWORD PTR [rbp-0x28],ecx
  40a77e:	mov    QWORD PTR [rbp-0x30],r8
  40a782:	mov    rax,QWORD PTR [rbp-0x18]
  40a786:	mov    QWORD PTR [rbp-0x8],rax
  40a78a:	mov    rax,QWORD PTR [rbp-0x8]
  40a78e:	mov    rdx,QWORD PTR [rax+0x30]
  40a792:	mov    rax,QWORD PTR [rbp-0x30]
  40a796:	add    rdx,rax
  40a799:	mov    rax,QWORD PTR [rbp-0x8]
  40a79d:	mov    QWORD PTR [rax+0x30],rdx
  40a7a1:	cmp    DWORD PTR [rbp-0x28],0x0
  40a7a5:	jns    40a84d <flatcc_emitter@@Base+0xe9>
  40a7ab:	mov    rax,QWORD PTR [rbp-0x8]
  40a7af:	mov    rax,QWORD PTR [rax+0x18]
  40a7b3:	cmp    QWORD PTR [rbp-0x30],rax
  40a7b7:	ja     40a7fb <flatcc_emitter@@Base+0x97>
  40a7b9:	mov    rax,QWORD PTR [rbp-0x8]
  40a7bd:	mov    rax,QWORD PTR [rax+0x10]
  40a7c1:	mov    rdx,QWORD PTR [rbp-0x30]
  40a7c5:	neg    rdx
  40a7c8:	add    rdx,rax
  40a7cb:	mov    rax,QWORD PTR [rbp-0x8]
  40a7cf:	mov    QWORD PTR [rax+0x10],rdx
  40a7d3:	mov    rax,QWORD PTR [rbp-0x8]
  40a7d7:	mov    rax,QWORD PTR [rax+0x18]
  40a7db:	sub    rax,QWORD PTR [rbp-0x30]
  40a7df:	mov    rdx,rax
  40a7e2:	mov    rax,QWORD PTR [rbp-0x8]
  40a7e6:	mov    QWORD PTR [rax+0x18],rdx
  40a7ea:	mov    rax,QWORD PTR [rbp-0x8]
  40a7ee:	mov    rax,QWORD PTR [rax+0x10]
  40a7f2:	mov    QWORD PTR [rbp-0x10],rax
  40a7f6:	jmp    40a8d9 <flatcc_emitter@@Base+0x175>
  40a7fb:	mov    eax,DWORD PTR [rbp-0x24]
  40a7fe:	cdqe   
  40a800:	shl    rax,0x4
  40a804:	add    QWORD PTR [rbp-0x20],rax
  40a808:	jmp    40a83b <flatcc_emitter@@Base+0xd7>
  40a80a:	sub    QWORD PTR [rbp-0x20],0x10
  40a80f:	mov    rax,QWORD PTR [rbp-0x20]
  40a813:	mov    rdx,QWORD PTR [rax+0x8]
  40a817:	mov    rax,QWORD PTR [rbp-0x20]
  40a81b:	mov    rcx,QWORD PTR [rax]
  40a81e:	mov    rax,QWORD PTR [rbp-0x8]
  40a822:	mov    rsi,rcx
  40a825:	mov    rdi,rax
  40a828:	call   40a2d4 <flatcc_builder_get_emit_context@@Base+0x403>
  40a82d:	test   eax,eax
  40a82f:	je     40a83b <flatcc_emitter@@Base+0xd7>
  40a831:	mov    eax,0xffffffff
  40a836:	jmp    40a91c <flatcc_emitter@@Base+0x1b8>
  40a83b:	mov    eax,DWORD PTR [rbp-0x24]
  40a83e:	lea    edx,[rax-0x1]
  40a841:	mov    DWORD PTR [rbp-0x24],edx
  40a844:	test   eax,eax
  40a846:	jne    40a80a <flatcc_emitter@@Base+0xa6>
  40a848:	jmp    40a8d2 <flatcc_emitter@@Base+0x16e>
  40a84d:	mov    rax,QWORD PTR [rbp-0x8]
  40a851:	mov    rax,QWORD PTR [rax+0x28]
  40a855:	cmp    QWORD PTR [rbp-0x30],rax
  40a859:	ja     40a8c5 <flatcc_emitter@@Base+0x161>
  40a85b:	mov    rax,QWORD PTR [rbp-0x8]
  40a85f:	mov    rax,QWORD PTR [rax+0x20]
  40a863:	mov    QWORD PTR [rbp-0x10],rax
  40a867:	mov    rax,QWORD PTR [rbp-0x8]
  40a86b:	mov    rdx,QWORD PTR [rax+0x20]
  40a86f:	mov    rax,QWORD PTR [rbp-0x30]
  40a873:	add    rdx,rax
  40a876:	mov    rax,QWORD PTR [rbp-0x8]
  40a87a:	mov    QWORD PTR [rax+0x20],rdx
  40a87e:	mov    rax,QWORD PTR [rbp-0x8]
  40a882:	mov    rax,QWORD PTR [rax+0x28]
  40a886:	sub    rax,QWORD PTR [rbp-0x30]
  40a88a:	mov    rdx,rax
  40a88d:	mov    rax,QWORD PTR [rbp-0x8]
  40a891:	mov    QWORD PTR [rax+0x28],rdx
  40a895:	jmp    40a8d9 <flatcc_emitter@@Base+0x175>
  40a897:	mov    rax,QWORD PTR [rbp-0x20]
  40a89b:	mov    rdx,QWORD PTR [rax+0x8]
  40a89f:	mov    rax,QWORD PTR [rbp-0x20]
  40a8a3:	mov    rcx,QWORD PTR [rax]
  40a8a6:	mov    rax,QWORD PTR [rbp-0x8]
  40a8aa:	mov    rsi,rcx
  40a8ad:	mov    rdi,rax
  40a8b0:	call   40a3aa <flatcc_builder_get_emit_context@@Base+0x4d9>
  40a8b5:	test   eax,eax
  40a8b7:	je     40a8c0 <flatcc_emitter@@Base+0x15c>
  40a8b9:	mov    eax,0xffffffff
  40a8be:	jmp    40a91c <flatcc_emitter@@Base+0x1b8>
  40a8c0:	add    QWORD PTR [rbp-0x20],0x10
  40a8c5:	mov    eax,DWORD PTR [rbp-0x24]
  40a8c8:	lea    edx,[rax-0x1]
  40a8cb:	mov    DWORD PTR [rbp-0x24],edx
  40a8ce:	test   eax,eax
  40a8d0:	jne    40a897 <flatcc_emitter@@Base+0x133>
  40a8d2:	mov    eax,0x0
  40a8d7:	jmp    40a91c <flatcc_emitter@@Base+0x1b8>
  40a8d9:	jmp    40a90a <flatcc_emitter@@Base+0x1a6>
  40a8db:	mov    rax,QWORD PTR [rbp-0x20]
  40a8df:	mov    rdx,QWORD PTR [rax+0x8]
  40a8e3:	mov    rax,QWORD PTR [rbp-0x20]
  40a8e7:	mov    rcx,QWORD PTR [rax]
  40a8ea:	mov    rax,QWORD PTR [rbp-0x10]
  40a8ee:	mov    rsi,rcx
  40a8f1:	mov    rdi,rax
  40a8f4:	call   403170 <memcpy@plt>
  40a8f9:	mov    rax,QWORD PTR [rbp-0x20]
  40a8fd:	mov    rax,QWORD PTR [rax+0x8]
  40a901:	add    QWORD PTR [rbp-0x10],rax
  40a905:	add    QWORD PTR [rbp-0x20],0x10
  40a90a:	mov    eax,DWORD PTR [rbp-0x24]
  40a90d:	lea    edx,[rax-0x1]
  40a910:	mov    DWORD PTR [rbp-0x24],edx
  40a913:	test   eax,eax
  40a915:	jne    40a8db <flatcc_emitter@@Base+0x177>
  40a917:	mov    eax,0x0
  40a91c:	leave  
  40a91d:	ret    

000000000040a91e <flatcc_emitter_copy_buffer@@Base>:
  40a91e:	endbr64 
  40a922:	push   rbp
  40a923:	mov    rbp,rsp
  40a926:	sub    rsp,0x30
  40a92a:	mov    QWORD PTR [rbp-0x18],rdi
  40a92e:	mov    QWORD PTR [rbp-0x20],rsi
  40a932:	mov    QWORD PTR [rbp-0x28],rdx
  40a936:	mov    rax,QWORD PTR [rbp-0x18]
  40a93a:	mov    rax,QWORD PTR [rax+0x30]
  40a93e:	cmp    QWORD PTR [rbp-0x28],rax
  40a942:	jae    40a94e <flatcc_emitter_copy_buffer@@Base+0x30>
  40a944:	mov    eax,0x0
  40a949:	jmp    40aa52 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a94e:	mov    rax,QWORD PTR [rbp-0x18]
  40a952:	mov    rax,QWORD PTR [rax]
  40a955:	test   rax,rax
  40a958:	jne    40a964 <flatcc_emitter_copy_buffer@@Base+0x46>
  40a95a:	mov    eax,0x0
  40a95f:	jmp    40aa52 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a964:	mov    rax,QWORD PTR [rbp-0x18]
  40a968:	mov    rdx,QWORD PTR [rax]
  40a96b:	mov    rax,QWORD PTR [rbp-0x18]
  40a96f:	mov    rax,QWORD PTR [rax+0x8]
  40a973:	cmp    rdx,rax
  40a976:	jne    40a9a0 <flatcc_emitter_copy_buffer@@Base+0x82>
  40a978:	mov    rax,QWORD PTR [rbp-0x18]
  40a97c:	mov    rdx,QWORD PTR [rax+0x30]
  40a980:	mov    rax,QWORD PTR [rbp-0x18]
  40a984:	mov    rcx,QWORD PTR [rax+0x10]
  40a988:	mov    rax,QWORD PTR [rbp-0x20]
  40a98c:	mov    rsi,rcx
  40a98f:	mov    rdi,rax
  40a992:	call   403170 <memcpy@plt>
  40a997:	mov    rax,QWORD PTR [rbp-0x20]
  40a99b:	jmp    40aa52 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a9a0:	mov    rax,QWORD PTR [rbp-0x18]
  40a9a4:	mov    rax,QWORD PTR [rax+0x18]
  40a9a8:	mov    edx,0xb80
  40a9ad:	sub    rdx,rax
  40a9b0:	mov    rax,rdx
  40a9b3:	mov    QWORD PTR [rbp-0x8],rax
  40a9b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a9bb:	mov    rcx,QWORD PTR [rax+0x10]
  40a9bf:	mov    rdx,QWORD PTR [rbp-0x8]
  40a9c3:	mov    rax,QWORD PTR [rbp-0x20]
  40a9c7:	mov    rsi,rcx
  40a9ca:	mov    rdi,rax
  40a9cd:	call   403170 <memcpy@plt>
  40a9d2:	mov    rax,QWORD PTR [rbp-0x8]
  40a9d6:	add    QWORD PTR [rbp-0x20],rax
  40a9da:	mov    rax,QWORD PTR [rbp-0x18]
  40a9de:	mov    rax,QWORD PTR [rax]
  40a9e1:	mov    rax,QWORD PTR [rax+0xb80]
  40a9e8:	mov    QWORD PTR [rbp-0x10],rax
  40a9ec:	jmp    40aa1d <flatcc_emitter_copy_buffer@@Base+0xff>
  40a9ee:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9f2:	mov    rax,QWORD PTR [rbp-0x20]
  40a9f6:	mov    edx,0xb80
  40a9fb:	mov    rsi,rcx
  40a9fe:	mov    rdi,rax
  40aa01:	call   403170 <memcpy@plt>
  40aa06:	add    QWORD PTR [rbp-0x20],0xb80
  40aa0e:	mov    rax,QWORD PTR [rbp-0x10]
  40aa12:	mov    rax,QWORD PTR [rax+0xb80]
  40aa19:	mov    QWORD PTR [rbp-0x10],rax
  40aa1d:	mov    rax,QWORD PTR [rbp-0x18]
  40aa21:	mov    rax,QWORD PTR [rax+0x8]
  40aa25:	cmp    QWORD PTR [rbp-0x10],rax
  40aa29:	jne    40a9ee <flatcc_emitter_copy_buffer@@Base+0xd0>
  40aa2b:	mov    rax,QWORD PTR [rbp-0x18]
  40aa2f:	mov    rax,QWORD PTR [rax+0x28]
  40aa33:	mov    edx,0xb80
  40aa38:	sub    rdx,rax
  40aa3b:	mov    rcx,QWORD PTR [rbp-0x10]
  40aa3f:	mov    rax,QWORD PTR [rbp-0x20]
  40aa43:	mov    rsi,rcx
  40aa46:	mov    rdi,rax
  40aa49:	call   403170 <memcpy@plt>
  40aa4e:	mov    rax,QWORD PTR [rbp-0x20]
  40aa52:	leave  
  40aa53:	ret    
  40aa54:	push   rbp
  40aa55:	mov    rbp,rsp
  40aa58:	mov    DWORD PTR [rbp-0x4],edi
  40aa5b:	mov    eax,DWORD PTR [rbp-0x4]
  40aa5e:	pop    rbp
  40aa5f:	ret    
  40aa60:	push   rbp
  40aa61:	mov    rbp,rsp
  40aa64:	sub    rsp,0x8
  40aa68:	mov    QWORD PTR [rbp-0x8],rdi
  40aa6c:	mov    rax,QWORD PTR [rbp-0x8]
  40aa70:	mov    eax,DWORD PTR [rax]
  40aa72:	mov    edi,eax
  40aa74:	call   40aa54 <flatcc_emitter_copy_buffer@@Base+0x136>
  40aa79:	leave  
  40aa7a:	ret    
  40aa7b:	push   rbp
  40aa7c:	mov    rbp,rsp
  40aa7f:	mov    eax,edi
  40aa81:	mov    WORD PTR [rbp-0x4],ax
  40aa85:	movzx  eax,WORD PTR [rbp-0x4]
  40aa89:	pop    rbp
  40aa8a:	ret    
  40aa8b:	push   rbp
  40aa8c:	mov    rbp,rsp
  40aa8f:	sub    rsp,0x8
  40aa93:	mov    QWORD PTR [rbp-0x8],rdi
  40aa97:	mov    rax,QWORD PTR [rbp-0x8]
  40aa9b:	movzx  eax,WORD PTR [rax]
  40aa9e:	movzx  eax,ax
  40aaa1:	mov    edi,eax
  40aaa3:	call   40aa7b <flatcc_emitter_copy_buffer@@Base+0x15d>
  40aaa8:	leave  
  40aaa9:	ret    
  40aaaa:	push   rbp
  40aaab:	mov    rbp,rsp
  40aaae:	mov    DWORD PTR [rbp-0x4],edi
  40aab1:	mov    eax,DWORD PTR [rbp-0x4]
  40aab4:	pop    rbp
  40aab5:	ret    
  40aab6:	push   rbp
  40aab7:	mov    rbp,rsp
  40aaba:	mov    DWORD PTR [rbp-0x4],edi
  40aabd:	mov    eax,DWORD PTR [rbp-0x4]
  40aac0:	pop    rbp
  40aac1:	ret    
  40aac2:	push   rbp
  40aac3:	mov    rbp,rsp
  40aac6:	sub    rsp,0x8
  40aaca:	mov    QWORD PTR [rbp-0x8],rdi
  40aace:	mov    rax,QWORD PTR [rbp-0x8]
  40aad2:	mov    eax,DWORD PTR [rax]
  40aad4:	mov    edi,eax
  40aad6:	call   40aaaa <flatcc_emitter_copy_buffer@@Base+0x18c>
  40aadb:	leave  
  40aadc:	ret    

000000000040aadd <flatcc_verify_error_string@@Base>:
  40aadd:	endbr64 
  40aae1:	push   rbp
  40aae2:	mov    rbp,rsp
  40aae5:	mov    DWORD PTR [rbp-0x4],edi
  40aae8:	cmp    DWORD PTR [rbp-0x4],0x24
  40aaec:	ja     40aca9 <flatcc_verify_error_string@@Base+0x1cc>
  40aaf2:	mov    eax,DWORD PTR [rbp-0x4]
  40aaf5:	lea    rdx,[rax*4+0x0]
  40aafd:	lea    rax,[rip+0x388c]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40ab04:	mov    eax,DWORD PTR [rdx+rax*1]
  40ab07:	movsxd rdx,eax
  40ab0a:	lea    rax,[rip+0x387f]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40ab11:	add    rax,rdx
  40ab14:	notrack jmp rax
  40ab17:	lea    rax,[rip+0x33cc]        # 40deea <flatcc_builder_padding_base@@Base+0xd2a>
  40ab1e:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab23:	lea    rax,[rip+0x33c3]        # 40deed <flatcc_builder_padding_base@@Base+0xd2d>
  40ab2a:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab2f:	lea    rax,[rip+0x33cf]        # 40df05 <flatcc_builder_padding_base@@Base+0xd45>
  40ab36:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab3b:	lea    rax,[rip+0x33d7]        # 40df19 <flatcc_builder_padding_base@@Base+0xd59>
  40ab42:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab47:	lea    rax,[rip+0x33e5]        # 40df33 <flatcc_builder_padding_base@@Base+0xd73>
  40ab4e:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab53:	lea    rax,[rip+0x33f6]        # 40df50 <flatcc_builder_padding_base@@Base+0xd90>
  40ab5a:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab5f:	lea    rax,[rip+0x3412]        # 40df78 <flatcc_builder_padding_base@@Base+0xdb8>
  40ab66:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab6b:	lea    rax,[rip+0x3425]        # 40df97 <flatcc_builder_padding_base@@Base+0xdd7>
  40ab72:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab77:	lea    rax,[rip+0x3434]        # 40dfb2 <flatcc_builder_padding_base@@Base+0xdf2>
  40ab7e:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab83:	lea    rax,[rip+0x343c]        # 40dfc6 <flatcc_builder_padding_base@@Base+0xe06>
  40ab8a:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab8f:	lea    rax,[rip+0x3444]        # 40dfda <flatcc_builder_padding_base@@Base+0xe1a>
  40ab96:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ab9b:	lea    rax,[rip+0x344d]        # 40dfef <flatcc_builder_padding_base@@Base+0xe2f>
  40aba2:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40aba7:	lea    rax,[rip+0x3452]        # 40e000 <flatcc_builder_padding_base@@Base+0xe40>
  40abae:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abb3:	lea    rax,[rip+0x345e]        # 40e018 <flatcc_builder_padding_base@@Base+0xe58>
  40abba:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abbf:	lea    rax,[rip+0x346b]        # 40e031 <flatcc_builder_padding_base@@Base+0xe71>
  40abc6:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abcb:	lea    rax,[rip+0x347e]        # 40e050 <flatcc_builder_padding_base@@Base+0xe90>
  40abd2:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abd7:	lea    rax,[rip+0x349a]        # 40e078 <flatcc_builder_padding_base@@Base+0xeb8>
  40abde:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abe3:	lea    rax,[rip+0x34b6]        # 40e0a0 <flatcc_builder_padding_base@@Base+0xee0>
  40abea:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abef:	lea    rax,[rip+0x34d2]        # 40e0c8 <flatcc_builder_padding_base@@Base+0xf08>
  40abf6:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40abfb:	lea    rax,[rip+0x34de]        # 40e0e0 <flatcc_builder_padding_base@@Base+0xf20>
  40ac02:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac07:	lea    rax,[rip+0x34f9]        # 40e107 <flatcc_builder_padding_base@@Base+0xf47>
  40ac0e:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac13:	lea    rax,[rip+0x3506]        # 40e120 <flatcc_builder_padding_base@@Base+0xf60>
  40ac1a:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac1f:	lea    rax,[rip+0x352a]        # 40e150 <flatcc_builder_padding_base@@Base+0xf90>
  40ac26:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac2b:	lea    rax,[rip+0x3556]        # 40e188 <flatcc_builder_padding_base@@Base+0xfc8>
  40ac32:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac34:	lea    rax,[rip+0x357d]        # 40e1b8 <flatcc_builder_padding_base@@Base+0xff8>
  40ac3b:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac3d:	lea    rax,[rip+0x35a4]        # 40e1e8 <flatcc_builder_padding_base@@Base+0x1028>
  40ac44:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac46:	lea    rax,[rip+0x35ca]        # 40e217 <flatcc_builder_padding_base@@Base+0x1057>
  40ac4d:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac4f:	lea    rax,[rip+0x35d5]        # 40e22b <flatcc_builder_padding_base@@Base+0x106b>
  40ac56:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac58:	lea    rax,[rip+0x35e7]        # 40e246 <flatcc_builder_padding_base@@Base+0x1086>
  40ac5f:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac61:	lea    rax,[rip+0x35f8]        # 40e260 <flatcc_builder_padding_base@@Base+0x10a0>
  40ac68:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac6a:	lea    rax,[rip+0x3617]        # 40e288 <flatcc_builder_padding_base@@Base+0x10c8>
  40ac71:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac73:	lea    rax,[rip+0x3634]        # 40e2ae <flatcc_builder_padding_base@@Base+0x10ee>
  40ac7a:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac7c:	lea    rax,[rip+0x3645]        # 40e2c8 <flatcc_builder_padding_base@@Base+0x1108>
  40ac83:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac85:	lea    rax,[rip+0x3664]        # 40e2f0 <flatcc_builder_padding_base@@Base+0x1130>
  40ac8c:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac8e:	lea    rax,[rip+0x3683]        # 40e318 <flatcc_builder_padding_base@@Base+0x1158>
  40ac95:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40ac97:	lea    rax,[rip+0x36b2]        # 40e350 <flatcc_builder_padding_base@@Base+0x1190>
  40ac9e:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40aca0:	lea    rax,[rip+0x36d1]        # 40e378 <flatcc_builder_padding_base@@Base+0x11b8>
  40aca7:	jmp    40acb0 <flatcc_verify_error_string@@Base+0x1d3>
  40aca9:	lea    rax,[rip+0x36d6]        # 40e386 <flatcc_builder_padding_base@@Base+0x11c6>
  40acb0:	pop    rbp
  40acb1:	ret    
  40acb2:	push   rbp
  40acb3:	mov    rbp,rsp
  40acb6:	sub    rsp,0x10
  40acba:	mov    QWORD PTR [rbp-0x8],rdi
  40acbe:	mov    DWORD PTR [rbp-0xc],esi
  40acc1:	mov    edx,DWORD PTR [rbp-0xc]
  40acc4:	mov    rax,QWORD PTR [rbp-0x8]
  40acc8:	add    rax,rdx
  40accb:	mov    rdi,rax
  40acce:	call   40aa60 <flatcc_emitter_copy_buffer@@Base+0x142>
  40acd3:	leave  
  40acd4:	ret    
  40acd5:	push   rbp
  40acd6:	mov    rbp,rsp
  40acd9:	sub    rsp,0x20
  40acdd:	mov    QWORD PTR [rbp-0x18],rdi
  40ace1:	mov    rax,QWORD PTR fs:0x28
  40acea:	mov    QWORD PTR [rbp-0x8],rax
  40acee:	xor    eax,eax
  40acf0:	mov    DWORD PTR [rbp-0xc],0x0
  40acf7:	mov    rcx,QWORD PTR [rbp-0x18]
  40acfb:	lea    rax,[rbp-0xc]
  40acff:	mov    edx,0x4
  40ad04:	mov    rsi,rcx
  40ad07:	mov    rdi,rax
  40ad0a:	call   403100 <strncpy@plt>
  40ad0f:	mov    eax,DWORD PTR [rbp-0xc]
  40ad12:	mov    edi,eax
  40ad14:	call   40aab6 <flatcc_emitter_copy_buffer@@Base+0x198>
  40ad19:	mov    rdx,QWORD PTR [rbp-0x8]
  40ad1d:	xor    rdx,QWORD PTR fs:0x28
  40ad26:	je     40ad2d <flatcc_verify_error_string@@Base+0x250>
  40ad28:	call   403120 <__stack_chk_fail@plt>
  40ad2d:	leave  
  40ad2e:	ret    
  40ad2f:	push   rbp
  40ad30:	mov    rbp,rsp
  40ad33:	sub    rsp,0x10
  40ad37:	mov    QWORD PTR [rbp-0x8],rdi
  40ad3b:	mov    DWORD PTR [rbp-0xc],esi
  40ad3e:	mov    edx,DWORD PTR [rbp-0xc]
  40ad41:	mov    rax,QWORD PTR [rbp-0x8]
  40ad45:	add    rax,rdx
  40ad48:	mov    rdi,rax
  40ad4b:	call   40aac2 <flatcc_emitter_copy_buffer@@Base+0x1a4>
  40ad50:	leave  
  40ad51:	ret    
  40ad52:	push   rbp
  40ad53:	mov    rbp,rsp
  40ad56:	sub    rsp,0x10
  40ad5a:	mov    QWORD PTR [rbp-0x8],rdi
  40ad5e:	mov    DWORD PTR [rbp-0xc],esi
  40ad61:	mov    edx,DWORD PTR [rbp-0xc]
  40ad64:	mov    rax,QWORD PTR [rbp-0x8]
  40ad68:	add    rax,rdx
  40ad6b:	mov    rdi,rax
  40ad6e:	call   40aa8b <flatcc_emitter_copy_buffer@@Base+0x16d>
  40ad73:	leave  
  40ad74:	ret    
  40ad75:	push   rbp
  40ad76:	mov    rbp,rsp
  40ad79:	mov    DWORD PTR [rbp-0x14],edi
  40ad7c:	mov    DWORD PTR [rbp-0x18],esi
  40ad7f:	mov    DWORD PTR [rbp-0x1c],edx
  40ad82:	mov    edx,DWORD PTR [rbp-0x18]
  40ad85:	mov    eax,DWORD PTR [rbp-0x1c]
  40ad88:	add    eax,edx
  40ad8a:	mov    DWORD PTR [rbp-0x4],eax
  40ad8d:	mov    eax,DWORD PTR [rbp-0x4]
  40ad90:	cmp    eax,DWORD PTR [rbp-0x18]
  40ad93:	jbe    40adb6 <flatcc_verify_error_string@@Base+0x2d9>
  40ad95:	mov    eax,DWORD PTR [rbp-0x4]
  40ad98:	lea    rdx,[rax+0x4]
  40ad9c:	mov    eax,DWORD PTR [rbp-0x14]
  40ad9f:	cmp    rdx,rax
  40ada2:	ja     40adb6 <flatcc_verify_error_string@@Base+0x2d9>
  40ada4:	mov    eax,DWORD PTR [rbp-0x4]
  40ada7:	and    eax,0x3
  40adaa:	test   rax,rax
  40adad:	jne    40adb6 <flatcc_verify_error_string@@Base+0x2d9>
  40adaf:	mov    eax,0x1
  40adb4:	jmp    40adbb <flatcc_verify_error_string@@Base+0x2de>
  40adb6:	mov    eax,0x0
  40adbb:	pop    rbp
  40adbc:	ret    
  40adbd:	push   rbp
  40adbe:	mov    rbp,rsp
  40adc1:	mov    DWORD PTR [rbp-0x14],edi
  40adc4:	mov    DWORD PTR [rbp-0x18],esi
  40adc7:	mov    DWORD PTR [rbp-0x1c],edx
  40adca:	mov    eax,ecx
  40adcc:	mov    WORD PTR [rbp-0x20],ax
  40add0:	mov    edx,DWORD PTR [rbp-0x18]
  40add3:	mov    eax,DWORD PTR [rbp-0x1c]
  40add6:	add    eax,edx
  40add8:	mov    DWORD PTR [rbp-0x4],eax
  40addb:	mov    eax,0x4
  40ade0:	cmp    WORD PTR [rbp-0x20],0x4
  40ade5:	cmovae ax,WORD PTR [rbp-0x20]
  40adea:	mov    WORD PTR [rbp-0x20],ax
  40adee:	mov    eax,DWORD PTR [rbp-0x4]
  40adf1:	cmp    eax,DWORD PTR [rbp-0x18]
  40adf4:	jbe    40ae26 <flatcc_verify_error_string@@Base+0x349>
  40adf6:	mov    eax,DWORD PTR [rbp-0x4]
  40adf9:	lea    rdx,[rax+0x4]
  40adfd:	mov    eax,DWORD PTR [rbp-0x14]
  40ae00:	cmp    rdx,rax
  40ae03:	ja     40ae26 <flatcc_verify_error_string@@Base+0x349>
  40ae05:	mov    eax,DWORD PTR [rbp-0x4]
  40ae08:	lea    rdx,[rax+0x4]
  40ae0c:	movzx  eax,WORD PTR [rbp-0x20]
  40ae10:	dec    eax
  40ae12:	or     eax,0x3
  40ae15:	cdqe   
  40ae17:	and    rax,rdx
  40ae1a:	test   rax,rax
  40ae1d:	jne    40ae26 <flatcc_verify_error_string@@Base+0x349>
  40ae1f:	mov    eax,0x1
  40ae24:	jmp    40ae2b <flatcc_verify_error_string@@Base+0x34e>
  40ae26:	mov    eax,0x0
  40ae2b:	pop    rbp
  40ae2c:	ret    
  40ae2d:	push   rbp
  40ae2e:	mov    rbp,rsp
  40ae31:	mov    DWORD PTR [rbp-0x14],edi
  40ae34:	mov    DWORD PTR [rbp-0x18],esi
  40ae37:	mov    DWORD PTR [rbp-0x1c],edx
  40ae3a:	mov    DWORD PTR [rbp-0x20],ecx
  40ae3d:	mov    eax,r8d
  40ae40:	mov    WORD PTR [rbp-0x24],ax
  40ae44:	cmp    DWORD PTR [rbp-0x1c],0x0
  40ae48:	je     40ae57 <flatcc_verify_error_string@@Base+0x37a>
  40ae4a:	mov    edx,DWORD PTR [rbp-0x18]
  40ae4d:	mov    eax,DWORD PTR [rbp-0x1c]
  40ae50:	add    eax,edx
  40ae52:	cmp    DWORD PTR [rbp-0x14],eax
  40ae55:	jae    40ae5e <flatcc_verify_error_string@@Base+0x381>
  40ae57:	mov    eax,0x12
  40ae5c:	jmp    40aecc <flatcc_verify_error_string@@Base+0x3ef>
  40ae5e:	mov    eax,DWORD PTR [rbp-0x1c]
  40ae61:	add    DWORD PTR [rbp-0x18],eax
  40ae64:	mov    edx,DWORD PTR [rbp-0x18]
  40ae67:	mov    eax,DWORD PTR [rbp-0x20]
  40ae6a:	add    eax,edx
  40ae6c:	cmp    DWORD PTR [rbp-0x18],eax
  40ae6f:	setbe  al
  40ae72:	movzx  eax,al
  40ae75:	mov    DWORD PTR [rbp-0xc],eax
  40ae78:	cmp    DWORD PTR [rbp-0xc],0x0
  40ae7c:	jne    40ae85 <flatcc_verify_error_string@@Base+0x3a8>
  40ae7e:	mov    eax,0xa
  40ae83:	jmp    40aecc <flatcc_verify_error_string@@Base+0x3ef>
  40ae85:	mov    edx,DWORD PTR [rbp-0x18]
  40ae88:	mov    eax,DWORD PTR [rbp-0x20]
  40ae8b:	add    eax,edx
  40ae8d:	cmp    DWORD PTR [rbp-0x14],eax
  40ae90:	setae  al
  40ae93:	movzx  eax,al
  40ae96:	mov    DWORD PTR [rbp-0x8],eax
  40ae99:	cmp    DWORD PTR [rbp-0x8],0x0
  40ae9d:	jne    40aea6 <flatcc_verify_error_string@@Base+0x3c9>
  40ae9f:	mov    eax,0x9
  40aea4:	jmp    40aecc <flatcc_verify_error_string@@Base+0x3ef>
  40aea6:	movzx  eax,WORD PTR [rbp-0x24]
  40aeaa:	dec    eax
  40aeac:	and    eax,DWORD PTR [rbp-0x18]
  40aeaf:	test   eax,eax
  40aeb1:	sete   al
  40aeb4:	movzx  eax,al
  40aeb7:	mov    DWORD PTR [rbp-0x4],eax
  40aeba:	cmp    DWORD PTR [rbp-0x4],0x0
  40aebe:	jne    40aec7 <flatcc_verify_error_string@@Base+0x3ea>
  40aec0:	mov    eax,0xb
  40aec5:	jmp    40aecc <flatcc_verify_error_string@@Base+0x3ef>
  40aec7:	mov    eax,0x0
  40aecc:	pop    rbp
  40aecd:	ret    
  40aece:	push   rbp
  40aecf:	mov    rbp,rsp
  40aed2:	sub    rsp,0x20
  40aed6:	mov    QWORD PTR [rbp-0x18],rdi
  40aeda:	mov    eax,esi
  40aedc:	mov    WORD PTR [rbp-0x1c],ax
  40aee0:	movzx  eax,WORD PTR [rbp-0x1c]
  40aee4:	add    eax,0x2
  40aee7:	cdqe   
  40aee9:	add    eax,eax
  40aeeb:	mov    WORD PTR [rbp-0x2],ax
  40aeef:	mov    rax,QWORD PTR [rbp-0x18]
  40aef3:	movzx  eax,WORD PTR [rax+0x1e]
  40aef7:	cmp    WORD PTR [rbp-0x2],ax
  40aefb:	jb     40af04 <flatcc_verify_error_string@@Base+0x427>
  40aefd:	mov    eax,0x0
  40af02:	jmp    40af1d <flatcc_verify_error_string@@Base+0x440>
  40af04:	movzx  edx,WORD PTR [rbp-0x2]
  40af08:	mov    rax,QWORD PTR [rbp-0x18]
  40af0c:	mov    rax,QWORD PTR [rax+0x10]
  40af10:	mov    esi,edx
  40af12:	mov    rdi,rax
  40af15:	call   40ad52 <flatcc_verify_error_string@@Base+0x275>
  40af1a:	movzx  eax,ax
  40af1d:	leave  
  40af1e:	ret    
  40af1f:	push   rbp
  40af20:	mov    rbp,rsp
  40af23:	sub    rsp,0x20
  40af27:	mov    QWORD PTR [rbp-0x18],rdi
  40af2b:	mov    eax,esi
  40af2d:	mov    WORD PTR [rbp-0x1c],ax
  40af31:	movzx  edx,WORD PTR [rbp-0x1c]
  40af35:	mov    rax,QWORD PTR [rbp-0x18]
  40af39:	mov    esi,edx
  40af3b:	mov    rdi,rax
  40af3e:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40af43:	mov    WORD PTR [rbp-0x2],ax
  40af47:	cmp    WORD PTR [rbp-0x2],0x0
  40af4c:	je     40af6a <flatcc_verify_error_string@@Base+0x48d>
  40af4e:	mov    rax,QWORD PTR [rbp-0x18]
  40af52:	mov    rdx,QWORD PTR [rax]
  40af55:	mov    rax,QWORD PTR [rbp-0x18]
  40af59:	mov    eax,DWORD PTR [rax+0x18]
  40af5c:	mov    ecx,eax
  40af5e:	movzx  eax,WORD PTR [rbp-0x2]
  40af62:	add    rax,rcx
  40af65:	add    rax,rdx
  40af68:	jmp    40af6f <flatcc_verify_error_string@@Base+0x492>
  40af6a:	mov    eax,0x0
  40af6f:	leave  
  40af70:	ret    
  40af71:	endbr64 
  40af75:	push   rbp
  40af76:	mov    rbp,rsp
  40af79:	sub    rsp,0x38
  40af7d:	mov    QWORD PTR [rbp-0x28],rdi
  40af81:	mov    eax,esi
  40af83:	mov    DWORD PTR [rbp-0x30],edx
  40af86:	mov    DWORD PTR [rbp-0x34],ecx
  40af89:	mov    edx,r8d
  40af8c:	mov    WORD PTR [rbp-0x2c],ax
  40af90:	mov    eax,edx
  40af92:	mov    WORD PTR [rbp-0x38],ax
  40af96:	mov    rax,QWORD PTR [rbp-0x28]
  40af9a:	mov    rax,QWORD PTR [rax]
  40af9d:	mov    DWORD PTR [rbp-0x1c],eax
  40afa0:	movzx  edx,WORD PTR [rbp-0x2c]
  40afa4:	mov    rax,QWORD PTR [rbp-0x28]
  40afa8:	mov    esi,edx
  40afaa:	mov    rdi,rax
  40afad:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40afb2:	mov    WORD PTR [rbp-0x1e],ax
  40afb6:	cmp    WORD PTR [rbp-0x1e],0x0
  40afbb:	jne    40afe1 <flatcc_verify_error_string@@Base+0x504>
  40afbd:	cmp    DWORD PTR [rbp-0x30],0x0
  40afc1:	sete   al
  40afc4:	movzx  eax,al
  40afc7:	mov    DWORD PTR [rbp-0x18],eax
  40afca:	cmp    DWORD PTR [rbp-0x18],0x0
  40afce:	jne    40afda <flatcc_verify_error_string@@Base+0x4fd>
  40afd0:	mov    eax,0x4
  40afd5:	jmp    40b060 <flatcc_verify_error_string@@Base+0x583>
  40afda:	mov    eax,0x0
  40afdf:	jmp    40b060 <flatcc_verify_error_string@@Base+0x583>
  40afe1:	movzx  eax,WORD PTR [rbp-0x1e]
  40afe5:	mov    DWORD PTR [rbp-0x14],eax
  40afe8:	mov    edx,DWORD PTR [rbp-0x14]
  40afeb:	mov    eax,DWORD PTR [rbp-0x34]
  40afee:	add    eax,edx
  40aff0:	mov    DWORD PTR [rbp-0x10],eax
  40aff3:	mov    rax,QWORD PTR [rbp-0x28]
  40aff7:	movzx  eax,WORD PTR [rax+0x1c]
  40affb:	movzx  eax,ax
  40affe:	cmp    DWORD PTR [rbp-0x10],eax
  40b001:	setbe  al
  40b004:	movzx  eax,al
  40b007:	mov    DWORD PTR [rbp-0xc],eax
  40b00a:	cmp    DWORD PTR [rbp-0xc],0x0
  40b00e:	jne    40b017 <flatcc_verify_error_string@@Base+0x53a>
  40b010:	mov    eax,0xd
  40b015:	jmp    40b060 <flatcc_verify_error_string@@Base+0x583>
  40b017:	mov    DWORD PTR [rbp-0x8],0x1
  40b01e:	cmp    DWORD PTR [rbp-0x8],0x0
  40b022:	jne    40b02b <flatcc_verify_error_string@@Base+0x54e>
  40b024:	mov    eax,0xe
  40b029:	jmp    40b060 <flatcc_verify_error_string@@Base+0x583>
  40b02b:	mov    rax,QWORD PTR [rbp-0x28]
  40b02f:	mov    edx,DWORD PTR [rax+0x18]
  40b032:	mov    eax,DWORD PTR [rbp-0x1c]
  40b035:	add    eax,edx
  40b037:	add    DWORD PTR [rbp-0x14],eax
  40b03a:	movzx  eax,WORD PTR [rbp-0x38]
  40b03e:	dec    eax
  40b040:	and    eax,DWORD PTR [rbp-0x14]
  40b043:	test   eax,eax
  40b045:	sete   al
  40b048:	movzx  eax,al
  40b04b:	mov    DWORD PTR [rbp-0x4],eax
  40b04e:	cmp    DWORD PTR [rbp-0x4],0x0
  40b052:	jne    40b05b <flatcc_verify_error_string@@Base+0x57e>
  40b054:	mov    eax,0xc
  40b059:	jmp    40b060 <flatcc_verify_error_string@@Base+0x583>
  40b05b:	mov    eax,0x0
  40b060:	leave  
  40b061:	ret    
  40b062:	endbr64 
  40b066:	push   rbp
  40b067:	mov    rbp,rsp
  40b06a:	sub    rsp,0x38
  40b06e:	mov    QWORD PTR [rbp-0x28],rdi
  40b072:	mov    eax,esi
  40b074:	mov    DWORD PTR [rbp-0x30],edx
  40b077:	mov    QWORD PTR [rbp-0x38],rcx
  40b07b:	mov    WORD PTR [rbp-0x2c],ax
  40b07f:	movzx  edx,WORD PTR [rbp-0x2c]
  40b083:	mov    rax,QWORD PTR [rbp-0x28]
  40b087:	mov    esi,edx
  40b089:	mov    rdi,rax
  40b08c:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40b091:	mov    WORD PTR [rbp-0x16],ax
  40b095:	cmp    WORD PTR [rbp-0x16],0x0
  40b09a:	jne    40b0bd <flatcc_verify_error_string@@Base+0x5e0>
  40b09c:	mov    rax,QWORD PTR [rbp-0x38]
  40b0a0:	mov    DWORD PTR [rax],0x0
  40b0a6:	cmp    DWORD PTR [rbp-0x30],0x0
  40b0aa:	je     40b0b6 <flatcc_verify_error_string@@Base+0x5d9>
  40b0ac:	mov    eax,0x4
  40b0b1:	jmp    40b13c <flatcc_verify_error_string@@Base+0x65f>
  40b0b6:	mov    eax,0x0
  40b0bb:	jmp    40b13c <flatcc_verify_error_string@@Base+0x65f>
  40b0bd:	movzx  eax,WORD PTR [rbp-0x16]
  40b0c1:	mov    DWORD PTR [rbp-0x14],eax
  40b0c4:	mov    eax,DWORD PTR [rbp-0x14]
  40b0c7:	add    eax,0x4
  40b0ca:	mov    DWORD PTR [rbp-0x10],eax
  40b0cd:	mov    rax,QWORD PTR [rbp-0x28]
  40b0d1:	movzx  eax,WORD PTR [rax+0x1c]
  40b0d5:	movzx  eax,ax
  40b0d8:	cmp    DWORD PTR [rbp-0x10],eax
  40b0db:	setbe  al
  40b0de:	movzx  eax,al
  40b0e1:	mov    DWORD PTR [rbp-0xc],eax
  40b0e4:	cmp    DWORD PTR [rbp-0xc],0x0
  40b0e8:	jne    40b0f1 <flatcc_verify_error_string@@Base+0x614>
  40b0ea:	mov    eax,0xd
  40b0ef:	jmp    40b13c <flatcc_verify_error_string@@Base+0x65f>
  40b0f1:	mov    DWORD PTR [rbp-0x8],0x1
  40b0f8:	cmp    DWORD PTR [rbp-0x8],0x0
  40b0fc:	jne    40b105 <flatcc_verify_error_string@@Base+0x628>
  40b0fe:	mov    eax,0xe
  40b103:	jmp    40b13c <flatcc_verify_error_string@@Base+0x65f>
  40b105:	mov    rax,QWORD PTR [rbp-0x28]
  40b109:	mov    eax,DWORD PTR [rax+0x18]
  40b10c:	add    DWORD PTR [rbp-0x14],eax
  40b10f:	mov    eax,DWORD PTR [rbp-0x14]
  40b112:	and    eax,0x3
  40b115:	test   rax,rax
  40b118:	sete   al
  40b11b:	movzx  eax,al
  40b11e:	mov    DWORD PTR [rbp-0x4],eax
  40b121:	cmp    DWORD PTR [rbp-0x4],0x0
  40b125:	jne    40b12e <flatcc_verify_error_string@@Base+0x651>
  40b127:	mov    eax,0xc
  40b12c:	jmp    40b13c <flatcc_verify_error_string@@Base+0x65f>
  40b12e:	mov    rax,QWORD PTR [rbp-0x38]
  40b132:	mov    edx,DWORD PTR [rbp-0x14]
  40b135:	mov    DWORD PTR [rax],edx
  40b137:	mov    eax,0x0
  40b13c:	leave  
  40b13d:	ret    
  40b13e:	push   rbp
  40b13f:	mov    rbp,rsp
  40b142:	sub    rsp,0x28
  40b146:	mov    QWORD PTR [rbp-0x18],rdi
  40b14a:	mov    DWORD PTR [rbp-0x1c],esi
  40b14d:	mov    DWORD PTR [rbp-0x20],edx
  40b150:	mov    DWORD PTR [rbp-0x24],ecx
  40b153:	mov    edx,DWORD PTR [rbp-0x24]
  40b156:	mov    ecx,DWORD PTR [rbp-0x20]
  40b159:	mov    eax,DWORD PTR [rbp-0x1c]
  40b15c:	mov    esi,ecx
  40b15e:	mov    edi,eax
  40b160:	call   40ad75 <flatcc_verify_error_string@@Base+0x298>
  40b165:	mov    DWORD PTR [rbp-0x10],eax
  40b168:	cmp    DWORD PTR [rbp-0x10],0x0
  40b16c:	jne    40b175 <flatcc_verify_error_string@@Base+0x698>
  40b16e:	mov    eax,0x11
  40b173:	jmp    40b1e6 <flatcc_verify_error_string@@Base+0x709>
  40b175:	mov    eax,DWORD PTR [rbp-0x24]
  40b178:	add    DWORD PTR [rbp-0x20],eax
  40b17b:	mov    edx,DWORD PTR [rbp-0x20]
  40b17e:	mov    rax,QWORD PTR [rbp-0x18]
  40b182:	mov    esi,edx
  40b184:	mov    rdi,rax
  40b187:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b18c:	mov    DWORD PTR [rbp-0xc],eax
  40b18f:	add    DWORD PTR [rbp-0x20],0x4
  40b193:	mov    eax,DWORD PTR [rbp-0x1c]
  40b196:	sub    eax,DWORD PTR [rbp-0x20]
  40b199:	mov    edx,DWORD PTR [rbp-0xc]
  40b19c:	inc    edx
  40b19e:	cmp    eax,edx
  40b1a0:	setae  al
  40b1a3:	movzx  eax,al
  40b1a6:	mov    DWORD PTR [rbp-0x8],eax
  40b1a9:	cmp    DWORD PTR [rbp-0x8],0x0
  40b1ad:	jne    40b1b6 <flatcc_verify_error_string@@Base+0x6d9>
  40b1af:	mov    eax,0x8
  40b1b4:	jmp    40b1e6 <flatcc_verify_error_string@@Base+0x709>
  40b1b6:	mov    edx,DWORD PTR [rbp-0x20]
  40b1b9:	mov    eax,DWORD PTR [rbp-0xc]
  40b1bc:	add    rdx,rax
  40b1bf:	mov    rax,QWORD PTR [rbp-0x18]
  40b1c3:	add    rax,rdx
  40b1c6:	movzx  eax,BYTE PTR [rax]
  40b1c9:	test   al,al
  40b1cb:	sete   al
  40b1ce:	movzx  eax,al
  40b1d1:	mov    DWORD PTR [rbp-0x4],eax
  40b1d4:	cmp    DWORD PTR [rbp-0x4],0x0
  40b1d8:	jne    40b1e1 <flatcc_verify_error_string@@Base+0x704>
  40b1da:	mov    eax,0x7
  40b1df:	jmp    40b1e6 <flatcc_verify_error_string@@Base+0x709>
  40b1e1:	mov    eax,0x0
  40b1e6:	leave  
  40b1e7:	ret    
  40b1e8:	push   rbp
  40b1e9:	mov    rbp,rsp
  40b1ec:	sub    rsp,0x30
  40b1f0:	mov    QWORD PTR [rbp-0x18],rdi
  40b1f4:	mov    DWORD PTR [rbp-0x1c],esi
  40b1f7:	mov    DWORD PTR [rbp-0x20],edx
  40b1fa:	mov    DWORD PTR [rbp-0x24],ecx
  40b1fd:	mov    DWORD PTR [rbp-0x28],r8d
  40b201:	mov    eax,r9d
  40b204:	mov    WORD PTR [rbp-0x2c],ax
  40b208:	movzx  ecx,WORD PTR [rbp-0x2c]
  40b20c:	mov    edx,DWORD PTR [rbp-0x24]
  40b20f:	mov    esi,DWORD PTR [rbp-0x20]
  40b212:	mov    eax,DWORD PTR [rbp-0x1c]
  40b215:	mov    edi,eax
  40b217:	call   40adbd <flatcc_verify_error_string@@Base+0x2e0>
  40b21c:	mov    DWORD PTR [rbp-0x10],eax
  40b21f:	cmp    DWORD PTR [rbp-0x10],0x0
  40b223:	jne    40b22c <flatcc_verify_error_string@@Base+0x74f>
  40b225:	mov    eax,0x10
  40b22a:	jmp    40b292 <flatcc_verify_error_string@@Base+0x7b5>
  40b22c:	mov    eax,DWORD PTR [rbp-0x24]
  40b22f:	add    DWORD PTR [rbp-0x20],eax
  40b232:	mov    edx,DWORD PTR [rbp-0x20]
  40b235:	mov    rax,QWORD PTR [rbp-0x18]
  40b239:	mov    esi,edx
  40b23b:	mov    rdi,rax
  40b23e:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b243:	mov    DWORD PTR [rbp-0xc],eax
  40b246:	add    DWORD PTR [rbp-0x20],0x4
  40b24a:	mov    eax,DWORD PTR [rbp-0xc]
  40b24d:	cmp    eax,DWORD PTR [rbp+0x10]
  40b250:	setbe  al
  40b253:	movzx  eax,al
  40b256:	mov    DWORD PTR [rbp-0x8],eax
  40b259:	cmp    DWORD PTR [rbp-0x8],0x0
  40b25d:	jne    40b266 <flatcc_verify_error_string@@Base+0x789>
  40b25f:	mov    eax,0x19
  40b264:	jmp    40b292 <flatcc_verify_error_string@@Base+0x7b5>
  40b266:	mov    eax,DWORD PTR [rbp-0x1c]
  40b269:	sub    eax,DWORD PTR [rbp-0x20]
  40b26c:	mov    edx,eax
  40b26e:	mov    eax,DWORD PTR [rbp-0xc]
  40b271:	imul   eax,DWORD PTR [rbp-0x28]
  40b275:	cmp    edx,eax
  40b277:	setae  al
  40b27a:	movzx  eax,al
  40b27d:	mov    DWORD PTR [rbp-0x4],eax
  40b280:	cmp    DWORD PTR [rbp-0x4],0x0
  40b284:	jne    40b28d <flatcc_verify_error_string@@Base+0x7b0>
  40b286:	mov    eax,0x1a
  40b28b:	jmp    40b292 <flatcc_verify_error_string@@Base+0x7b5>
  40b28d:	mov    eax,0x0
  40b292:	leave  
  40b293:	ret    
  40b294:	push   rbp
  40b295:	mov    rbp,rsp
  40b298:	sub    rsp,0x28
  40b29c:	mov    QWORD PTR [rbp-0x18],rdi
  40b2a0:	mov    DWORD PTR [rbp-0x1c],esi
  40b2a3:	mov    DWORD PTR [rbp-0x20],edx
  40b2a6:	mov    DWORD PTR [rbp-0x24],ecx
  40b2a9:	mov    ecx,DWORD PTR [rbp-0x24]
  40b2ac:	mov    edx,DWORD PTR [rbp-0x20]
  40b2af:	mov    esi,DWORD PTR [rbp-0x1c]
  40b2b2:	mov    rax,QWORD PTR [rbp-0x18]
  40b2b6:	push   0x3fffffff
  40b2bb:	mov    r9d,0x4
  40b2c1:	mov    r8d,0x4
  40b2c7:	mov    rdi,rax
  40b2ca:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40b2cf:	add    rsp,0x8
  40b2d3:	test   eax,eax
  40b2d5:	je     40b306 <flatcc_verify_error_string@@Base+0x829>
  40b2d7:	mov    ecx,DWORD PTR [rbp-0x24]
  40b2da:	mov    edx,DWORD PTR [rbp-0x20]
  40b2dd:	mov    esi,DWORD PTR [rbp-0x1c]
  40b2e0:	mov    rax,QWORD PTR [rbp-0x18]
  40b2e4:	push   0x3fffffff
  40b2e9:	mov    r9d,0x4
  40b2ef:	mov    r8d,0x4
  40b2f5:	mov    rdi,rax
  40b2f8:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40b2fd:	add    rsp,0x8
  40b301:	jmp    40b391 <flatcc_verify_error_string@@Base+0x8b4>
  40b306:	mov    eax,DWORD PTR [rbp-0x24]
  40b309:	add    DWORD PTR [rbp-0x20],eax
  40b30c:	mov    edx,DWORD PTR [rbp-0x20]
  40b30f:	mov    rax,QWORD PTR [rbp-0x18]
  40b313:	mov    esi,edx
  40b315:	mov    rdi,rax
  40b318:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b31d:	mov    DWORD PTR [rbp-0x4],eax
  40b320:	add    DWORD PTR [rbp-0x20],0x4
  40b324:	mov    DWORD PTR [rbp-0x8],0x0
  40b32b:	jmp    40b384 <flatcc_verify_error_string@@Base+0x8a7>
  40b32d:	mov    edx,DWORD PTR [rbp-0x20]
  40b330:	mov    rax,QWORD PTR [rbp-0x18]
  40b334:	mov    esi,edx
  40b336:	mov    rdi,rax
  40b339:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b33e:	mov    ecx,eax
  40b340:	mov    edx,DWORD PTR [rbp-0x20]
  40b343:	mov    esi,DWORD PTR [rbp-0x1c]
  40b346:	mov    rax,QWORD PTR [rbp-0x18]
  40b34a:	mov    rdi,rax
  40b34d:	call   40b13e <flatcc_verify_error_string@@Base+0x661>
  40b352:	test   eax,eax
  40b354:	je     40b37d <flatcc_verify_error_string@@Base+0x8a0>
  40b356:	mov    edx,DWORD PTR [rbp-0x20]
  40b359:	mov    rax,QWORD PTR [rbp-0x18]
  40b35d:	mov    esi,edx
  40b35f:	mov    rdi,rax
  40b362:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b367:	mov    ecx,eax
  40b369:	mov    edx,DWORD PTR [rbp-0x20]
  40b36c:	mov    esi,DWORD PTR [rbp-0x1c]
  40b36f:	mov    rax,QWORD PTR [rbp-0x18]
  40b373:	mov    rdi,rax
  40b376:	call   40b13e <flatcc_verify_error_string@@Base+0x661>
  40b37b:	jmp    40b391 <flatcc_verify_error_string@@Base+0x8b4>
  40b37d:	inc    DWORD PTR [rbp-0x8]
  40b380:	add    DWORD PTR [rbp-0x20],0x4
  40b384:	mov    eax,DWORD PTR [rbp-0x8]
  40b387:	cmp    eax,DWORD PTR [rbp-0x4]
  40b38a:	jb     40b32d <flatcc_verify_error_string@@Base+0x850>
  40b38c:	mov    eax,0x0
  40b391:	leave  
  40b392:	ret    
  40b393:	push   rbp
  40b394:	mov    rbp,rsp
  40b397:	push   rbx
  40b398:	sub    rsp,0x88
  40b39f:	mov    QWORD PTR [rbp-0x78],rdi
  40b3a3:	mov    DWORD PTR [rbp-0x7c],esi
  40b3a6:	mov    DWORD PTR [rbp-0x80],edx
  40b3a9:	mov    DWORD PTR [rbp-0x84],ecx
  40b3af:	mov    DWORD PTR [rbp-0x88],r8d
  40b3b6:	mov    QWORD PTR [rbp-0x90],r9
  40b3bd:	mov    rax,QWORD PTR fs:0x28
  40b3c6:	mov    QWORD PTR [rbp-0x18],rax
  40b3ca:	xor    eax,eax
  40b3cc:	mov    eax,DWORD PTR [rbp-0x88]
  40b3d2:	dec    eax
  40b3d4:	mov    DWORD PTR [rbp-0x34],eax
  40b3d7:	mov    eax,DWORD PTR [rbp-0x34]
  40b3da:	mov    DWORD PTR [rbp-0x68],eax
  40b3dd:	cmp    DWORD PTR [rbp-0x68],0x0
  40b3e1:	jne    40b3ed <flatcc_verify_error_string@@Base+0x910>
  40b3e3:	mov    eax,0x3
  40b3e8:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b3ed:	mov    edx,DWORD PTR [rbp-0x84]
  40b3f3:	mov    ecx,DWORD PTR [rbp-0x80]
  40b3f6:	mov    eax,DWORD PTR [rbp-0x7c]
  40b3f9:	mov    esi,ecx
  40b3fb:	mov    edi,eax
  40b3fd:	call   40ad75 <flatcc_verify_error_string@@Base+0x298>
  40b402:	mov    DWORD PTR [rbp-0x64],eax
  40b405:	cmp    DWORD PTR [rbp-0x64],0x0
  40b409:	jne    40b415 <flatcc_verify_error_string@@Base+0x938>
  40b40b:	mov    eax,0xf
  40b410:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b415:	mov    edx,DWORD PTR [rbp-0x80]
  40b418:	mov    eax,DWORD PTR [rbp-0x84]
  40b41e:	add    eax,edx
  40b420:	mov    DWORD PTR [rbp-0x28],eax
  40b423:	mov    ebx,DWORD PTR [rbp-0x28]
  40b426:	mov    edx,DWORD PTR [rbp-0x28]
  40b429:	mov    rax,QWORD PTR [rbp-0x78]
  40b42d:	mov    esi,edx
  40b42f:	mov    rdi,rax
  40b432:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b437:	sub    ebx,eax
  40b439:	mov    eax,ebx
  40b43b:	mov    DWORD PTR [rbp-0x60],eax
  40b43e:	mov    eax,DWORD PTR [rbp-0x60]
  40b441:	test   eax,eax
  40b443:	js     40b457 <flatcc_verify_error_string@@Base+0x97a>
  40b445:	mov    eax,DWORD PTR [rbp-0x60]
  40b448:	and    eax,0x1
  40b44b:	test   rax,rax
  40b44e:	jne    40b457 <flatcc_verify_error_string@@Base+0x97a>
  40b450:	mov    eax,0x1
  40b455:	jmp    40b45c <flatcc_verify_error_string@@Base+0x97f>
  40b457:	mov    eax,0x0
  40b45c:	mov    DWORD PTR [rbp-0x5c],eax
  40b45f:	cmp    DWORD PTR [rbp-0x5c],0x0
  40b463:	jne    40b46f <flatcc_verify_error_string@@Base+0x992>
  40b465:	mov    eax,0x1d
  40b46a:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b46f:	mov    eax,DWORD PTR [rbp-0x60]
  40b472:	lea    rdx,[rax+0x2]
  40b476:	mov    eax,DWORD PTR [rbp-0x7c]
  40b479:	cmp    rdx,rax
  40b47c:	setbe  al
  40b47f:	movzx  eax,al
  40b482:	mov    DWORD PTR [rbp-0x58],eax
  40b485:	cmp    DWORD PTR [rbp-0x58],0x0
  40b489:	jne    40b495 <flatcc_verify_error_string@@Base+0x9b8>
  40b48b:	mov    eax,0x1b
  40b490:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b495:	mov    edx,DWORD PTR [rbp-0x60]
  40b498:	mov    rax,QWORD PTR [rbp-0x78]
  40b49c:	mov    esi,edx
  40b49e:	mov    rdi,rax
  40b4a1:	call   40ad52 <flatcc_verify_error_string@@Base+0x275>
  40b4a6:	mov    WORD PTR [rbp-0x22],ax
  40b4aa:	movzx  eax,WORD PTR [rbp-0x22]
  40b4ae:	movzx  edx,ax
  40b4b1:	mov    eax,DWORD PTR [rbp-0x60]
  40b4b4:	add    eax,edx
  40b4b6:	mov    DWORD PTR [rbp-0x54],eax
  40b4b9:	mov    eax,DWORD PTR [rbp-0x54]
  40b4bc:	cmp    eax,DWORD PTR [rbp-0x7c]
  40b4bf:	ja     40b4d7 <flatcc_verify_error_string@@Base+0x9fa>
  40b4c1:	movzx  eax,WORD PTR [rbp-0x22]
  40b4c5:	movzx  eax,ax
  40b4c8:	and    eax,0x1
  40b4cb:	test   rax,rax
  40b4ce:	jne    40b4d7 <flatcc_verify_error_string@@Base+0x9fa>
  40b4d0:	mov    eax,0x1
  40b4d5:	jmp    40b4dc <flatcc_verify_error_string@@Base+0x9ff>
  40b4d7:	mov    eax,0x0
  40b4dc:	mov    DWORD PTR [rbp-0x50],eax
  40b4df:	cmp    DWORD PTR [rbp-0x50],0x0
  40b4e3:	jne    40b4ef <flatcc_verify_error_string@@Base+0xa12>
  40b4e5:	mov    eax,0x1e
  40b4ea:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b4ef:	mov    DWORD PTR [rbp-0x4c],0x1
  40b4f6:	cmp    DWORD PTR [rbp-0x4c],0x0
  40b4fa:	jne    40b506 <flatcc_verify_error_string@@Base+0xa29>
  40b4fc:	mov    eax,0x1f
  40b501:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b506:	movzx  eax,WORD PTR [rbp-0x22]
  40b50a:	cmp    ax,0x3
  40b50e:	seta   al
  40b511:	movzx  eax,al
  40b514:	mov    DWORD PTR [rbp-0x48],eax
  40b517:	cmp    DWORD PTR [rbp-0x48],0x0
  40b51b:	jne    40b524 <flatcc_verify_error_string@@Base+0xa47>
  40b51d:	mov    eax,0x1c
  40b522:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b524:	mov    eax,DWORD PTR [rbp-0x60]
  40b527:	lea    edx,[rax+0x2]
  40b52a:	mov    rax,QWORD PTR [rbp-0x78]
  40b52e:	mov    esi,edx
  40b530:	mov    rdi,rax
  40b533:	call   40ad52 <flatcc_verify_error_string@@Base+0x275>
  40b538:	mov    WORD PTR [rbp-0x24],ax
  40b53c:	mov    eax,DWORD PTR [rbp-0x28]
  40b53f:	mov    edx,DWORD PTR [rbp-0x7c]
  40b542:	sub    edx,eax
  40b544:	movzx  eax,WORD PTR [rbp-0x24]
  40b548:	movzx  eax,ax
  40b54b:	cmp    edx,eax
  40b54d:	setae  al
  40b550:	movzx  eax,al
  40b553:	mov    DWORD PTR [rbp-0x44],eax
  40b556:	cmp    DWORD PTR [rbp-0x44],0x0
  40b55a:	jne    40b563 <flatcc_verify_error_string@@Base+0xa86>
  40b55c:	mov    eax,0x14
  40b561:	jmp    40b58f <flatcc_verify_error_string@@Base+0xab2>
  40b563:	mov    edx,DWORD PTR [rbp-0x60]
  40b566:	mov    rax,QWORD PTR [rbp-0x78]
  40b56a:	add    rax,rdx
  40b56d:	mov    QWORD PTR [rbp-0x30],rax
  40b571:	mov    rax,QWORD PTR [rbp-0x78]
  40b575:	mov    QWORD PTR [rbp-0x40],rax
  40b579:	mov    eax,DWORD PTR [rbp-0x7c]
  40b57c:	mov    DWORD PTR [rbp-0x38],eax
  40b57f:	lea    rdx,[rbp-0x40]
  40b583:	mov    rax,QWORD PTR [rbp-0x90]
  40b58a:	mov    rdi,rdx
  40b58d:	call   rax
  40b58f:	mov    rcx,QWORD PTR [rbp-0x18]
  40b593:	xor    rcx,QWORD PTR fs:0x28
  40b59c:	je     40b5a3 <flatcc_verify_error_string@@Base+0xac6>
  40b59e:	call   403120 <__stack_chk_fail@plt>
  40b5a3:	add    rsp,0x88
  40b5aa:	pop    rbx
  40b5ab:	pop    rbp
  40b5ac:	ret    
  40b5ad:	push   rbp
  40b5ae:	mov    rbp,rsp
  40b5b1:	sub    rsp,0x30
  40b5b5:	mov    QWORD PTR [rbp-0x18],rdi
  40b5b9:	mov    DWORD PTR [rbp-0x1c],esi
  40b5bc:	mov    DWORD PTR [rbp-0x20],edx
  40b5bf:	mov    DWORD PTR [rbp-0x24],ecx
  40b5c2:	mov    DWORD PTR [rbp-0x28],r8d
  40b5c6:	mov    QWORD PTR [rbp-0x30],r9
  40b5ca:	mov    eax,DWORD PTR [rbp-0x28]
  40b5cd:	lea    edx,[rax-0x1]
  40b5d0:	mov    DWORD PTR [rbp-0x28],edx
  40b5d3:	test   eax,eax
  40b5d5:	setg   al
  40b5d8:	movzx  eax,al
  40b5db:	mov    DWORD PTR [rbp-0x8],eax
  40b5de:	cmp    DWORD PTR [rbp-0x8],0x0
  40b5e2:	jne    40b5ee <flatcc_verify_error_string@@Base+0xb11>
  40b5e4:	mov    eax,0x3
  40b5e9:	jmp    40b6fc <flatcc_verify_error_string@@Base+0xc1f>
  40b5ee:	mov    ecx,DWORD PTR [rbp-0x24]
  40b5f1:	mov    edx,DWORD PTR [rbp-0x20]
  40b5f4:	mov    esi,DWORD PTR [rbp-0x1c]
  40b5f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b5fb:	push   0x3fffffff
  40b600:	mov    r9d,0x4
  40b606:	mov    r8d,0x4
  40b60c:	mov    rdi,rax
  40b60f:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40b614:	add    rsp,0x8
  40b618:	test   eax,eax
  40b61a:	je     40b64b <flatcc_verify_error_string@@Base+0xb6e>
  40b61c:	mov    ecx,DWORD PTR [rbp-0x24]
  40b61f:	mov    edx,DWORD PTR [rbp-0x20]
  40b622:	mov    esi,DWORD PTR [rbp-0x1c]
  40b625:	mov    rax,QWORD PTR [rbp-0x18]
  40b629:	push   0x3fffffff
  40b62e:	mov    r9d,0x4
  40b634:	mov    r8d,0x4
  40b63a:	mov    rdi,rax
  40b63d:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40b642:	add    rsp,0x8
  40b646:	jmp    40b6fc <flatcc_verify_error_string@@Base+0xc1f>
  40b64b:	mov    eax,DWORD PTR [rbp-0x24]
  40b64e:	add    DWORD PTR [rbp-0x20],eax
  40b651:	mov    edx,DWORD PTR [rbp-0x20]
  40b654:	mov    rax,QWORD PTR [rbp-0x18]
  40b658:	mov    esi,edx
  40b65a:	mov    rdi,rax
  40b65d:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b662:	mov    DWORD PTR [rbp-0x4],eax
  40b665:	add    DWORD PTR [rbp-0x20],0x4
  40b669:	mov    DWORD PTR [rbp-0xc],0x0
  40b670:	jmp    40b6eb <flatcc_verify_error_string@@Base+0xc0e>
  40b672:	mov    edx,DWORD PTR [rbp-0x20]
  40b675:	mov    rax,QWORD PTR [rbp-0x18]
  40b679:	mov    esi,edx
  40b67b:	mov    rdi,rax
  40b67e:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b683:	mov    r10d,eax
  40b686:	mov    rdi,QWORD PTR [rbp-0x30]
  40b68a:	mov    ecx,DWORD PTR [rbp-0x28]
  40b68d:	mov    edx,DWORD PTR [rbp-0x20]
  40b690:	mov    esi,DWORD PTR [rbp-0x1c]
  40b693:	mov    rax,QWORD PTR [rbp-0x18]
  40b697:	mov    r9,rdi
  40b69a:	mov    r8d,ecx
  40b69d:	mov    ecx,r10d
  40b6a0:	mov    rdi,rax
  40b6a3:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40b6a8:	test   eax,eax
  40b6aa:	je     40b6e4 <flatcc_verify_error_string@@Base+0xc07>
  40b6ac:	mov    edx,DWORD PTR [rbp-0x20]
  40b6af:	mov    rax,QWORD PTR [rbp-0x18]
  40b6b3:	mov    esi,edx
  40b6b5:	mov    rdi,rax
  40b6b8:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b6bd:	mov    r10d,eax
  40b6c0:	mov    rdi,QWORD PTR [rbp-0x30]
  40b6c4:	mov    ecx,DWORD PTR [rbp-0x28]
  40b6c7:	mov    edx,DWORD PTR [rbp-0x20]
  40b6ca:	mov    esi,DWORD PTR [rbp-0x1c]
  40b6cd:	mov    rax,QWORD PTR [rbp-0x18]
  40b6d1:	mov    r9,rdi
  40b6d4:	mov    r8d,ecx
  40b6d7:	mov    ecx,r10d
  40b6da:	mov    rdi,rax
  40b6dd:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40b6e2:	jmp    40b6fc <flatcc_verify_error_string@@Base+0xc1f>
  40b6e4:	inc    DWORD PTR [rbp-0xc]
  40b6e7:	add    DWORD PTR [rbp-0x20],0x4
  40b6eb:	mov    eax,DWORD PTR [rbp-0xc]
  40b6ee:	cmp    eax,DWORD PTR [rbp-0x4]
  40b6f1:	jb     40b672 <flatcc_verify_error_string@@Base+0xb95>
  40b6f7:	mov    eax,0x0
  40b6fc:	leave  
  40b6fd:	ret    
  40b6fe:	push   rbp
  40b6ff:	mov    rbp,rsp
  40b702:	add    rsp,0xffffffffffffff80
  40b706:	mov    QWORD PTR [rbp-0x58],rdi
  40b70a:	mov    DWORD PTR [rbp-0x5c],esi
  40b70d:	mov    DWORD PTR [rbp-0x60],edx
  40b710:	mov    DWORD PTR [rbp-0x64],ecx
  40b713:	mov    DWORD PTR [rbp-0x68],r8d
  40b717:	mov    QWORD PTR [rbp-0x70],r9
  40b71b:	mov    rax,QWORD PTR [rbp+0x18]
  40b71f:	mov    QWORD PTR [rbp-0x78],rax
  40b723:	mov    rax,QWORD PTR fs:0x28
  40b72c:	mov    QWORD PTR [rbp-0x8],rax
  40b730:	xor    eax,eax
  40b732:	mov    eax,DWORD PTR [rbp+0x10]
  40b735:	lea    edx,[rax-0x1]
  40b738:	mov    DWORD PTR [rbp+0x10],edx
  40b73b:	test   eax,eax
  40b73d:	setg   al
  40b740:	movzx  eax,al
  40b743:	mov    DWORD PTR [rbp-0x48],eax
  40b746:	cmp    DWORD PTR [rbp-0x48],0x0
  40b74a:	jne    40b756 <flatcc_verify_error_string@@Base+0xc79>
  40b74c:	mov    eax,0x3
  40b751:	jmp    40b8c8 <flatcc_verify_error_string@@Base+0xdeb>
  40b756:	mov    ecx,DWORD PTR [rbp-0x64]
  40b759:	mov    edx,DWORD PTR [rbp-0x60]
  40b75c:	mov    esi,DWORD PTR [rbp-0x5c]
  40b75f:	mov    rax,QWORD PTR [rbp-0x58]
  40b763:	push   0x3fffffff
  40b768:	mov    r9d,0x4
  40b76e:	mov    r8d,0x4
  40b774:	mov    rdi,rax
  40b777:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40b77c:	add    rsp,0x8
  40b780:	test   eax,eax
  40b782:	je     40b7b3 <flatcc_verify_error_string@@Base+0xcd6>
  40b784:	mov    ecx,DWORD PTR [rbp-0x64]
  40b787:	mov    edx,DWORD PTR [rbp-0x60]
  40b78a:	mov    esi,DWORD PTR [rbp-0x5c]
  40b78d:	mov    rax,QWORD PTR [rbp-0x58]
  40b791:	push   0x3fffffff
  40b796:	mov    r9d,0x4
  40b79c:	mov    r8d,0x4
  40b7a2:	mov    rdi,rax
  40b7a5:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40b7aa:	add    rsp,0x8
  40b7ae:	jmp    40b8c8 <flatcc_verify_error_string@@Base+0xdeb>
  40b7b3:	mov    eax,DWORD PTR [rbp-0x64]
  40b7b6:	add    DWORD PTR [rbp-0x60],eax
  40b7b9:	mov    edx,DWORD PTR [rbp-0x60]
  40b7bc:	mov    rax,QWORD PTR [rbp-0x58]
  40b7c0:	mov    esi,edx
  40b7c2:	mov    rdi,rax
  40b7c5:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b7ca:	mov    DWORD PTR [rbp-0x44],eax
  40b7cd:	mov    eax,DWORD PTR [rbp-0x44]
  40b7d0:	cmp    eax,DWORD PTR [rbp-0x68]
  40b7d3:	sete   al
  40b7d6:	movzx  eax,al
  40b7d9:	mov    DWORD PTR [rbp-0x40],eax
  40b7dc:	cmp    DWORD PTR [rbp-0x40],0x0
  40b7e0:	jne    40b7ec <flatcc_verify_error_string@@Base+0xd0f>
  40b7e2:	mov    eax,0x22
  40b7e7:	jmp    40b8c8 <flatcc_verify_error_string@@Base+0xdeb>
  40b7ec:	add    DWORD PTR [rbp-0x60],0x4
  40b7f0:	mov    rax,QWORD PTR [rbp-0x58]
  40b7f4:	mov    QWORD PTR [rbp-0x30],rax
  40b7f8:	mov    eax,DWORD PTR [rbp-0x5c]
  40b7fb:	mov    DWORD PTR [rbp-0x28],eax
  40b7fe:	mov    eax,DWORD PTR [rbp+0x10]
  40b801:	mov    DWORD PTR [rbp-0x24],eax
  40b804:	mov    DWORD PTR [rbp-0x4c],0x0
  40b80b:	jmp    40b8b7 <flatcc_verify_error_string@@Base+0xdda>
  40b810:	mov    edx,DWORD PTR [rbp-0x60]
  40b813:	mov    rax,QWORD PTR [rbp-0x58]
  40b817:	mov    esi,edx
  40b819:	mov    rdi,rax
  40b81c:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b821:	mov    DWORD PTR [rbp-0x3c],eax
  40b824:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b828:	jne    40b84f <flatcc_verify_error_string@@Base+0xd72>
  40b82a:	mov    edx,DWORD PTR [rbp-0x4c]
  40b82d:	mov    rax,QWORD PTR [rbp-0x70]
  40b831:	add    rax,rdx
  40b834:	movzx  eax,BYTE PTR [rax]
  40b837:	test   al,al
  40b839:	sete   al
  40b83c:	movzx  eax,al
  40b83f:	mov    DWORD PTR [rbp-0x38],eax
  40b842:	cmp    DWORD PTR [rbp-0x38],0x0
  40b846:	jne    40b8b0 <flatcc_verify_error_string@@Base+0xdd3>
  40b848:	mov    eax,0x20
  40b84d:	jmp    40b8c8 <flatcc_verify_error_string@@Base+0xdeb>
  40b84f:	mov    edx,DWORD PTR [rbp-0x4c]
  40b852:	mov    rax,QWORD PTR [rbp-0x70]
  40b856:	add    rax,rdx
  40b859:	movzx  eax,BYTE PTR [rax]
  40b85c:	test   al,al
  40b85e:	setne  al
  40b861:	movzx  eax,al
  40b864:	mov    DWORD PTR [rbp-0x34],eax
  40b867:	cmp    DWORD PTR [rbp-0x34],0x0
  40b86b:	jne    40b874 <flatcc_verify_error_string@@Base+0xd97>
  40b86d:	mov    eax,0x21
  40b872:	jmp    40b8c8 <flatcc_verify_error_string@@Base+0xdeb>
  40b874:	mov    edx,DWORD PTR [rbp-0x4c]
  40b877:	mov    rax,QWORD PTR [rbp-0x70]
  40b87b:	add    rax,rdx
  40b87e:	movzx  eax,BYTE PTR [rax]
  40b881:	mov    BYTE PTR [rbp-0x20],al
  40b884:	mov    eax,DWORD PTR [rbp-0x60]
  40b887:	mov    DWORD PTR [rbp-0x1c],eax
  40b88a:	mov    eax,DWORD PTR [rbp-0x3c]
  40b88d:	mov    DWORD PTR [rbp-0x18],eax
  40b890:	lea    rdx,[rbp-0x30]
  40b894:	mov    rax,QWORD PTR [rbp-0x78]
  40b898:	mov    rdi,rdx
  40b89b:	call   rax
  40b89d:	test   eax,eax
  40b89f:	je     40b8b0 <flatcc_verify_error_string@@Base+0xdd3>
  40b8a1:	lea    rdx,[rbp-0x30]
  40b8a5:	mov    rax,QWORD PTR [rbp-0x78]
  40b8a9:	mov    rdi,rdx
  40b8ac:	call   rax
  40b8ae:	jmp    40b8c8 <flatcc_verify_error_string@@Base+0xdeb>
  40b8b0:	inc    DWORD PTR [rbp-0x4c]
  40b8b3:	add    DWORD PTR [rbp-0x60],0x4
  40b8b7:	mov    eax,DWORD PTR [rbp-0x4c]
  40b8ba:	cmp    eax,DWORD PTR [rbp-0x44]
  40b8bd:	jb     40b810 <flatcc_verify_error_string@@Base+0xd33>
  40b8c3:	mov    eax,0x0
  40b8c8:	mov    rcx,QWORD PTR [rbp-0x8]
  40b8cc:	xor    rcx,QWORD PTR fs:0x28
  40b8d5:	je     40b8dc <flatcc_verify_error_string@@Base+0xdff>
  40b8d7:	call   403120 <__stack_chk_fail@plt>
  40b8dc:	leave  
  40b8dd:	ret    

000000000040b8de <flatcc_verify_field@@Base>:
  40b8de:	endbr64 
  40b8e2:	push   rbp
  40b8e3:	mov    rbp,rsp
  40b8e6:	sub    rsp,0x18
  40b8ea:	mov    QWORD PTR [rbp-0x8],rdi
  40b8ee:	mov    QWORD PTR [rbp-0x18],rdx
  40b8f2:	mov    eax,ecx
  40b8f4:	mov    edx,esi
  40b8f6:	mov    WORD PTR [rbp-0xc],dx
  40b8fa:	mov    WORD PTR [rbp-0x10],ax
  40b8fe:	movzx  edx,WORD PTR [rbp-0x10]
  40b902:	mov    rax,QWORD PTR [rbp-0x18]
  40b906:	mov    ecx,eax
  40b908:	movzx  esi,WORD PTR [rbp-0xc]
  40b90c:	mov    rax,QWORD PTR [rbp-0x8]
  40b910:	mov    r8d,edx
  40b913:	mov    edx,0x0
  40b918:	mov    rdi,rax
  40b91b:	call   40af71 <flatcc_verify_error_string@@Base+0x494>
  40b920:	test   eax,eax
  40b922:	je     40b948 <flatcc_verify_field@@Base+0x6a>
  40b924:	movzx  edx,WORD PTR [rbp-0x10]
  40b928:	mov    rax,QWORD PTR [rbp-0x18]
  40b92c:	mov    ecx,eax
  40b92e:	movzx  esi,WORD PTR [rbp-0xc]
  40b932:	mov    rax,QWORD PTR [rbp-0x8]
  40b936:	mov    r8d,edx
  40b939:	mov    edx,0x0
  40b93e:	mov    rdi,rax
  40b941:	call   40af71 <flatcc_verify_error_string@@Base+0x494>
  40b946:	jmp    40b94d <flatcc_verify_field@@Base+0x6f>
  40b948:	mov    eax,0x0
  40b94d:	leave  
  40b94e:	ret    

000000000040b94f <flatcc_verify_string_field@@Base>:
  40b94f:	endbr64 
  40b953:	push   rbp
  40b954:	mov    rbp,rsp
  40b957:	sub    rsp,0x20
  40b95b:	mov    QWORD PTR [rbp-0x18],rdi
  40b95f:	mov    eax,esi
  40b961:	mov    DWORD PTR [rbp-0x20],edx
  40b964:	mov    WORD PTR [rbp-0x1c],ax
  40b968:	mov    rax,QWORD PTR fs:0x28
  40b971:	mov    QWORD PTR [rbp-0x8],rax
  40b975:	xor    eax,eax
  40b977:	movzx  esi,WORD PTR [rbp-0x1c]
  40b97b:	lea    rcx,[rbp-0x10]
  40b97f:	mov    edx,DWORD PTR [rbp-0x20]
  40b982:	mov    rax,QWORD PTR [rbp-0x18]
  40b986:	mov    rdi,rax
  40b989:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40b98e:	mov    DWORD PTR [rbp-0xc],eax
  40b991:	cmp    DWORD PTR [rbp-0xc],0x0
  40b995:	jne    40b99e <flatcc_verify_string_field@@Base+0x4f>
  40b997:	mov    eax,DWORD PTR [rbp-0x10]
  40b99a:	test   eax,eax
  40b99c:	jne    40b9a3 <flatcc_verify_string_field@@Base+0x54>
  40b99e:	mov    eax,DWORD PTR [rbp-0xc]
  40b9a1:	jmp    40b9d2 <flatcc_verify_string_field@@Base+0x83>
  40b9a3:	mov    edx,DWORD PTR [rbp-0x10]
  40b9a6:	mov    rax,QWORD PTR [rbp-0x18]
  40b9aa:	mov    rax,QWORD PTR [rax]
  40b9ad:	mov    esi,edx
  40b9af:	mov    rdi,rax
  40b9b2:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40b9b7:	mov    ecx,eax
  40b9b9:	mov    edx,DWORD PTR [rbp-0x10]
  40b9bc:	mov    rax,QWORD PTR [rbp-0x18]
  40b9c0:	mov    esi,DWORD PTR [rax+0x8]
  40b9c3:	mov    rax,QWORD PTR [rbp-0x18]
  40b9c7:	mov    rax,QWORD PTR [rax]
  40b9ca:	mov    rdi,rax
  40b9cd:	call   40b13e <flatcc_verify_error_string@@Base+0x661>
  40b9d2:	mov    rdi,QWORD PTR [rbp-0x8]
  40b9d6:	xor    rdi,QWORD PTR fs:0x28
  40b9df:	je     40b9e6 <flatcc_verify_string_field@@Base+0x97>
  40b9e1:	call   403120 <__stack_chk_fail@plt>
  40b9e6:	leave  
  40b9e7:	ret    

000000000040b9e8 <flatcc_verify_vector_field@@Base>:
  40b9e8:	endbr64 
  40b9ec:	push   rbp
  40b9ed:	mov    rbp,rsp
  40b9f0:	push   r13
  40b9f2:	push   r12
  40b9f4:	push   rbx
  40b9f5:	sub    rsp,0x48
  40b9f9:	mov    QWORD PTR [rbp-0x38],rdi
  40b9fd:	mov    eax,esi
  40b9ff:	mov    DWORD PTR [rbp-0x40],edx
  40ba02:	mov    QWORD PTR [rbp-0x48],rcx
  40ba06:	mov    edx,r8d
  40ba09:	mov    QWORD PTR [rbp-0x58],r9
  40ba0d:	mov    WORD PTR [rbp-0x3c],ax
  40ba11:	mov    eax,edx
  40ba13:	mov    WORD PTR [rbp-0x4c],ax
  40ba17:	mov    rax,QWORD PTR fs:0x28
  40ba20:	mov    QWORD PTR [rbp-0x28],rax
  40ba24:	xor    eax,eax
  40ba26:	movzx  esi,WORD PTR [rbp-0x3c]
  40ba2a:	lea    rcx,[rbp-0x30]
  40ba2e:	mov    edx,DWORD PTR [rbp-0x40]
  40ba31:	mov    rax,QWORD PTR [rbp-0x38]
  40ba35:	mov    rdi,rax
  40ba38:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40ba3d:	mov    DWORD PTR [rbp-0x2c],eax
  40ba40:	cmp    DWORD PTR [rbp-0x2c],0x0
  40ba44:	jne    40ba4d <flatcc_verify_vector_field@@Base+0x65>
  40ba46:	mov    eax,DWORD PTR [rbp-0x30]
  40ba49:	test   eax,eax
  40ba4b:	jne    40ba52 <flatcc_verify_vector_field@@Base+0x6a>
  40ba4d:	mov    eax,DWORD PTR [rbp-0x2c]
  40ba50:	jmp    40ba9f <flatcc_verify_vector_field@@Base+0xb7>
  40ba52:	mov    rax,QWORD PTR [rbp-0x58]
  40ba56:	mov    r12d,eax
  40ba59:	movzx  ebx,WORD PTR [rbp-0x4c]
  40ba5d:	mov    rax,QWORD PTR [rbp-0x48]
  40ba61:	mov    r13d,eax
  40ba64:	mov    edx,DWORD PTR [rbp-0x30]
  40ba67:	mov    rax,QWORD PTR [rbp-0x38]
  40ba6b:	mov    rax,QWORD PTR [rax]
  40ba6e:	mov    esi,edx
  40ba70:	mov    rdi,rax
  40ba73:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40ba78:	mov    ecx,eax
  40ba7a:	mov    edx,DWORD PTR [rbp-0x30]
  40ba7d:	mov    rax,QWORD PTR [rbp-0x38]
  40ba81:	mov    esi,DWORD PTR [rax+0x8]
  40ba84:	mov    rax,QWORD PTR [rbp-0x38]
  40ba88:	mov    rax,QWORD PTR [rax]
  40ba8b:	push   r12
  40ba8d:	mov    r9d,ebx
  40ba90:	mov    r8d,r13d
  40ba93:	mov    rdi,rax
  40ba96:	call   40b1e8 <flatcc_verify_error_string@@Base+0x70b>
  40ba9b:	add    rsp,0x8
  40ba9f:	mov    rbx,QWORD PTR [rbp-0x28]
  40baa3:	xor    rbx,QWORD PTR fs:0x28
  40baac:	je     40bab3 <flatcc_verify_vector_field@@Base+0xcb>
  40baae:	call   403120 <__stack_chk_fail@plt>
  40bab3:	lea    rsp,[rbp-0x18]
  40bab7:	pop    rbx
  40bab8:	pop    r12
  40baba:	pop    r13
  40babc:	pop    rbp
  40babd:	ret    

000000000040babe <flatcc_verify_string_vector_field@@Base>:
  40babe:	endbr64 
  40bac2:	push   rbp
  40bac3:	mov    rbp,rsp
  40bac6:	sub    rsp,0x20
  40baca:	mov    QWORD PTR [rbp-0x18],rdi
  40bace:	mov    eax,esi
  40bad0:	mov    DWORD PTR [rbp-0x20],edx
  40bad3:	mov    WORD PTR [rbp-0x1c],ax
  40bad7:	mov    rax,QWORD PTR fs:0x28
  40bae0:	mov    QWORD PTR [rbp-0x8],rax
  40bae4:	xor    eax,eax
  40bae6:	movzx  esi,WORD PTR [rbp-0x1c]
  40baea:	lea    rcx,[rbp-0x10]
  40baee:	mov    edx,DWORD PTR [rbp-0x20]
  40baf1:	mov    rax,QWORD PTR [rbp-0x18]
  40baf5:	mov    rdi,rax
  40baf8:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40bafd:	mov    DWORD PTR [rbp-0xc],eax
  40bb00:	cmp    DWORD PTR [rbp-0xc],0x0
  40bb04:	jne    40bb0d <flatcc_verify_string_vector_field@@Base+0x4f>
  40bb06:	mov    eax,DWORD PTR [rbp-0x10]
  40bb09:	test   eax,eax
  40bb0b:	jne    40bb12 <flatcc_verify_string_vector_field@@Base+0x54>
  40bb0d:	mov    eax,DWORD PTR [rbp-0xc]
  40bb10:	jmp    40bb41 <flatcc_verify_string_vector_field@@Base+0x83>
  40bb12:	mov    edx,DWORD PTR [rbp-0x10]
  40bb15:	mov    rax,QWORD PTR [rbp-0x18]
  40bb19:	mov    rax,QWORD PTR [rax]
  40bb1c:	mov    esi,edx
  40bb1e:	mov    rdi,rax
  40bb21:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40bb26:	mov    ecx,eax
  40bb28:	mov    edx,DWORD PTR [rbp-0x10]
  40bb2b:	mov    rax,QWORD PTR [rbp-0x18]
  40bb2f:	mov    esi,DWORD PTR [rax+0x8]
  40bb32:	mov    rax,QWORD PTR [rbp-0x18]
  40bb36:	mov    rax,QWORD PTR [rax]
  40bb39:	mov    rdi,rax
  40bb3c:	call   40b294 <flatcc_verify_error_string@@Base+0x7b7>
  40bb41:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb45:	xor    rdi,QWORD PTR fs:0x28
  40bb4e:	je     40bb55 <flatcc_verify_string_vector_field@@Base+0x97>
  40bb50:	call   403120 <__stack_chk_fail@plt>
  40bb55:	leave  
  40bb56:	ret    

000000000040bb57 <flatcc_verify_table_field@@Base>:
  40bb57:	endbr64 
  40bb5b:	push   rbp
  40bb5c:	mov    rbp,rsp
  40bb5f:	push   rbx
  40bb60:	sub    rsp,0x38
  40bb64:	mov    QWORD PTR [rbp-0x28],rdi
  40bb68:	mov    eax,esi
  40bb6a:	mov    DWORD PTR [rbp-0x30],edx
  40bb6d:	mov    QWORD PTR [rbp-0x38],rcx
  40bb71:	mov    WORD PTR [rbp-0x2c],ax
  40bb75:	mov    rax,QWORD PTR fs:0x28
  40bb7e:	mov    QWORD PTR [rbp-0x18],rax
  40bb82:	xor    eax,eax
  40bb84:	movzx  esi,WORD PTR [rbp-0x2c]
  40bb88:	lea    rcx,[rbp-0x20]
  40bb8c:	mov    edx,DWORD PTR [rbp-0x30]
  40bb8f:	mov    rax,QWORD PTR [rbp-0x28]
  40bb93:	mov    rdi,rax
  40bb96:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40bb9b:	mov    DWORD PTR [rbp-0x1c],eax
  40bb9e:	cmp    DWORD PTR [rbp-0x1c],0x0
  40bba2:	jne    40bbab <flatcc_verify_table_field@@Base+0x54>
  40bba4:	mov    eax,DWORD PTR [rbp-0x20]
  40bba7:	test   eax,eax
  40bba9:	jne    40bbb0 <flatcc_verify_table_field@@Base+0x59>
  40bbab:	mov    eax,DWORD PTR [rbp-0x1c]
  40bbae:	jmp    40bbf2 <flatcc_verify_table_field@@Base+0x9b>
  40bbb0:	mov    rax,QWORD PTR [rbp-0x28]
  40bbb4:	mov    ebx,DWORD PTR [rax+0xc]
  40bbb7:	mov    edx,DWORD PTR [rbp-0x20]
  40bbba:	mov    rax,QWORD PTR [rbp-0x28]
  40bbbe:	mov    rax,QWORD PTR [rax]
  40bbc1:	mov    esi,edx
  40bbc3:	mov    rdi,rax
  40bbc6:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40bbcb:	mov    edi,eax
  40bbcd:	mov    edx,DWORD PTR [rbp-0x20]
  40bbd0:	mov    rax,QWORD PTR [rbp-0x28]
  40bbd4:	mov    esi,DWORD PTR [rax+0x8]
  40bbd7:	mov    rax,QWORD PTR [rbp-0x28]
  40bbdb:	mov    rax,QWORD PTR [rax]
  40bbde:	mov    rcx,QWORD PTR [rbp-0x38]
  40bbe2:	mov    r9,rcx
  40bbe5:	mov    r8d,ebx
  40bbe8:	mov    ecx,edi
  40bbea:	mov    rdi,rax
  40bbed:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40bbf2:	mov    rbx,QWORD PTR [rbp-0x18]
  40bbf6:	xor    rbx,QWORD PTR fs:0x28
  40bbff:	je     40bc06 <flatcc_verify_table_field@@Base+0xaf>
  40bc01:	call   403120 <__stack_chk_fail@plt>
  40bc06:	add    rsp,0x38
  40bc0a:	pop    rbx
  40bc0b:	pop    rbp
  40bc0c:	ret    

000000000040bc0d <flatcc_verify_table_vector_field@@Base>:
  40bc0d:	endbr64 
  40bc11:	push   rbp
  40bc12:	mov    rbp,rsp
  40bc15:	push   rbx
  40bc16:	sub    rsp,0x38
  40bc1a:	mov    QWORD PTR [rbp-0x28],rdi
  40bc1e:	mov    eax,esi
  40bc20:	mov    DWORD PTR [rbp-0x30],edx
  40bc23:	mov    QWORD PTR [rbp-0x38],rcx
  40bc27:	mov    WORD PTR [rbp-0x2c],ax
  40bc2b:	mov    rax,QWORD PTR fs:0x28
  40bc34:	mov    QWORD PTR [rbp-0x18],rax
  40bc38:	xor    eax,eax
  40bc3a:	movzx  esi,WORD PTR [rbp-0x2c]
  40bc3e:	lea    rcx,[rbp-0x20]
  40bc42:	mov    edx,DWORD PTR [rbp-0x30]
  40bc45:	mov    rax,QWORD PTR [rbp-0x28]
  40bc49:	mov    rdi,rax
  40bc4c:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40bc51:	mov    DWORD PTR [rbp-0x1c],eax
  40bc54:	cmp    DWORD PTR [rbp-0x1c],0x0
  40bc58:	jne    40bc61 <flatcc_verify_table_vector_field@@Base+0x54>
  40bc5a:	mov    eax,DWORD PTR [rbp-0x20]
  40bc5d:	test   eax,eax
  40bc5f:	jne    40bc66 <flatcc_verify_table_vector_field@@Base+0x59>
  40bc61:	mov    eax,DWORD PTR [rbp-0x1c]
  40bc64:	jmp    40bca8 <flatcc_verify_table_vector_field@@Base+0x9b>
  40bc66:	mov    rax,QWORD PTR [rbp-0x28]
  40bc6a:	mov    ebx,DWORD PTR [rax+0xc]
  40bc6d:	mov    edx,DWORD PTR [rbp-0x20]
  40bc70:	mov    rax,QWORD PTR [rbp-0x28]
  40bc74:	mov    rax,QWORD PTR [rax]
  40bc77:	mov    esi,edx
  40bc79:	mov    rdi,rax
  40bc7c:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40bc81:	mov    edi,eax
  40bc83:	mov    edx,DWORD PTR [rbp-0x20]
  40bc86:	mov    rax,QWORD PTR [rbp-0x28]
  40bc8a:	mov    esi,DWORD PTR [rax+0x8]
  40bc8d:	mov    rax,QWORD PTR [rbp-0x28]
  40bc91:	mov    rax,QWORD PTR [rax]
  40bc94:	mov    rcx,QWORD PTR [rbp-0x38]
  40bc98:	mov    r9,rcx
  40bc9b:	mov    r8d,ebx
  40bc9e:	mov    ecx,edi
  40bca0:	mov    rdi,rax
  40bca3:	call   40b5ad <flatcc_verify_error_string@@Base+0xad0>
  40bca8:	mov    rbx,QWORD PTR [rbp-0x18]
  40bcac:	xor    rbx,QWORD PTR fs:0x28
  40bcb5:	je     40bcbc <flatcc_verify_table_vector_field@@Base+0xaf>
  40bcb7:	call   403120 <__stack_chk_fail@plt>
  40bcbc:	add    rsp,0x38
  40bcc0:	pop    rbx
  40bcc1:	pop    rbp
  40bcc2:	ret    

000000000040bcc3 <flatcc_verify_union_table@@Base>:
  40bcc3:	endbr64 
  40bcc7:	push   rbp
  40bcc8:	mov    rbp,rsp
  40bccb:	sub    rsp,0x10
  40bccf:	mov    QWORD PTR [rbp-0x8],rdi
  40bcd3:	mov    QWORD PTR [rbp-0x10],rsi
  40bcd7:	mov    rax,QWORD PTR [rbp-0x8]
  40bcdb:	mov    edi,DWORD PTR [rax+0xc]
  40bcde:	mov    rax,QWORD PTR [rbp-0x8]
  40bce2:	mov    ecx,DWORD PTR [rax+0x18]
  40bce5:	mov    rax,QWORD PTR [rbp-0x8]
  40bce9:	mov    edx,DWORD PTR [rax+0x14]
  40bcec:	mov    rax,QWORD PTR [rbp-0x8]
  40bcf0:	mov    esi,DWORD PTR [rax+0x8]
  40bcf3:	mov    rax,QWORD PTR [rbp-0x8]
  40bcf7:	mov    rax,QWORD PTR [rax]
  40bcfa:	mov    r8,QWORD PTR [rbp-0x10]
  40bcfe:	mov    r9,r8
  40bd01:	mov    r8d,edi
  40bd04:	mov    rdi,rax
  40bd07:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40bd0c:	leave  
  40bd0d:	ret    

000000000040bd0e <flatcc_verify_union_struct@@Base>:
  40bd0e:	endbr64 
  40bd12:	push   rbp
  40bd13:	mov    rbp,rsp
  40bd16:	sub    rsp,0x18
  40bd1a:	mov    QWORD PTR [rbp-0x8],rdi
  40bd1e:	mov    QWORD PTR [rbp-0x10],rsi
  40bd22:	mov    eax,edx
  40bd24:	mov    WORD PTR [rbp-0x14],ax
  40bd28:	movzx  ecx,WORD PTR [rbp-0x14]
  40bd2c:	mov    rax,QWORD PTR [rbp-0x10]
  40bd30:	mov    edi,eax
  40bd32:	mov    rax,QWORD PTR [rbp-0x8]
  40bd36:	mov    edx,DWORD PTR [rax+0x18]
  40bd39:	mov    rax,QWORD PTR [rbp-0x8]
  40bd3d:	mov    esi,DWORD PTR [rax+0x14]
  40bd40:	mov    rax,QWORD PTR [rbp-0x8]
  40bd44:	mov    eax,DWORD PTR [rax+0x8]
  40bd47:	mov    r8d,ecx
  40bd4a:	mov    ecx,edi
  40bd4c:	mov    edi,eax
  40bd4e:	call   40ae2d <flatcc_verify_error_string@@Base+0x350>
  40bd53:	leave  
  40bd54:	ret    

000000000040bd55 <flatcc_verify_union_string@@Base>:
  40bd55:	endbr64 
  40bd59:	push   rbp
  40bd5a:	mov    rbp,rsp
  40bd5d:	sub    rsp,0x8
  40bd61:	mov    QWORD PTR [rbp-0x8],rdi
  40bd65:	mov    rax,QWORD PTR [rbp-0x8]
  40bd69:	mov    ecx,DWORD PTR [rax+0x18]
  40bd6c:	mov    rax,QWORD PTR [rbp-0x8]
  40bd70:	mov    edx,DWORD PTR [rax+0x14]
  40bd73:	mov    rax,QWORD PTR [rbp-0x8]
  40bd77:	mov    esi,DWORD PTR [rax+0x8]
  40bd7a:	mov    rax,QWORD PTR [rbp-0x8]
  40bd7e:	mov    rax,QWORD PTR [rax]
  40bd81:	mov    rdi,rax
  40bd84:	call   40b13e <flatcc_verify_error_string@@Base+0x661>
  40bd89:	leave  
  40bd8a:	ret    

000000000040bd8b <flatcc_verify_buffer_header@@Base>:
  40bd8b:	endbr64 
  40bd8f:	push   rbp
  40bd90:	mov    rbp,rsp
  40bd93:	sub    rsp,0x40
  40bd97:	mov    QWORD PTR [rbp-0x28],rdi
  40bd9b:	mov    QWORD PTR [rbp-0x30],rsi
  40bd9f:	mov    QWORD PTR [rbp-0x38],rdx
  40bda3:	mov    rax,QWORD PTR [rbp-0x28]
  40bda7:	and    eax,0x3
  40bdaa:	test   rax,rax
  40bdad:	sete   al
  40bdb0:	movzx  eax,al
  40bdb3:	mov    DWORD PTR [rbp-0x18],eax
  40bdb6:	cmp    DWORD PTR [rbp-0x18],0x0
  40bdba:	jne    40bdc6 <flatcc_verify_buffer_header@@Base+0x3b>
  40bdbc:	mov    eax,0x5
  40bdc1:	jmp    40be59 <flatcc_verify_buffer_header@@Base+0xce>
  40bdc6:	mov    eax,0xfffffff7
  40bdcb:	cmp    QWORD PTR [rbp-0x30],rax
  40bdcf:	setbe  al
  40bdd2:	movzx  eax,al
  40bdd5:	mov    DWORD PTR [rbp-0x14],eax
  40bdd8:	cmp    DWORD PTR [rbp-0x14],0x0
  40bddc:	jne    40bde5 <flatcc_verify_buffer_header@@Base+0x5a>
  40bdde:	mov    eax,0x6
  40bde3:	jmp    40be59 <flatcc_verify_buffer_header@@Base+0xce>
  40bde5:	cmp    QWORD PTR [rbp-0x30],0x7
  40bdea:	seta   al
  40bded:	movzx  eax,al
  40bdf0:	mov    DWORD PTR [rbp-0x10],eax
  40bdf3:	cmp    DWORD PTR [rbp-0x10],0x0
  40bdf7:	jne    40be00 <flatcc_verify_buffer_header@@Base+0x75>
  40bdf9:	mov    eax,0x1
  40bdfe:	jmp    40be59 <flatcc_verify_buffer_header@@Base+0xce>
  40be00:	cmp    QWORD PTR [rbp-0x38],0x0
  40be05:	je     40be54 <flatcc_verify_buffer_header@@Base+0xc9>
  40be07:	mov    rax,QWORD PTR [rbp-0x38]
  40be0b:	mov    rdi,rax
  40be0e:	call   40acd5 <flatcc_verify_error_string@@Base+0x1f8>
  40be13:	mov    DWORD PTR [rbp-0xc],eax
  40be16:	mov    rax,QWORD PTR [rbp-0x28]
  40be1a:	mov    esi,0x4
  40be1f:	mov    rdi,rax
  40be22:	call   40ad2f <flatcc_verify_error_string@@Base+0x252>
  40be27:	mov    DWORD PTR [rbp-0x8],eax
  40be2a:	cmp    DWORD PTR [rbp-0xc],0x0
  40be2e:	je     40be38 <flatcc_verify_buffer_header@@Base+0xad>
  40be30:	mov    eax,DWORD PTR [rbp-0x8]
  40be33:	cmp    eax,DWORD PTR [rbp-0xc]
  40be36:	jne    40be3f <flatcc_verify_buffer_header@@Base+0xb4>
  40be38:	mov    eax,0x1
  40be3d:	jmp    40be44 <flatcc_verify_buffer_header@@Base+0xb9>
  40be3f:	mov    eax,0x0
  40be44:	mov    DWORD PTR [rbp-0x4],eax
  40be47:	cmp    DWORD PTR [rbp-0x4],0x0
  40be4b:	jne    40be54 <flatcc_verify_buffer_header@@Base+0xc9>
  40be4d:	mov    eax,0x2
  40be52:	jmp    40be59 <flatcc_verify_buffer_header@@Base+0xce>
  40be54:	mov    eax,0x0
  40be59:	leave  
  40be5a:	ret    

000000000040be5b <flatcc_verify_typed_buffer_header@@Base>:
  40be5b:	endbr64 
  40be5f:	push   rbp
  40be60:	mov    rbp,rsp
  40be63:	sub    rsp,0x38
  40be67:	mov    QWORD PTR [rbp-0x28],rdi
  40be6b:	mov    QWORD PTR [rbp-0x30],rsi
  40be6f:	mov    DWORD PTR [rbp-0x34],edx
  40be72:	mov    rax,QWORD PTR [rbp-0x28]
  40be76:	and    eax,0x3
  40be79:	test   rax,rax
  40be7c:	sete   al
  40be7f:	movzx  eax,al
  40be82:	mov    DWORD PTR [rbp-0x18],eax
  40be85:	cmp    DWORD PTR [rbp-0x18],0x0
  40be89:	jne    40be95 <flatcc_verify_typed_buffer_header@@Base+0x3a>
  40be8b:	mov    eax,0x5
  40be90:	jmp    40bf1e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40be95:	mov    eax,0xfffffff7
  40be9a:	cmp    QWORD PTR [rbp-0x30],rax
  40be9e:	setbe  al
  40bea1:	movzx  eax,al
  40bea4:	mov    DWORD PTR [rbp-0x14],eax
  40bea7:	cmp    DWORD PTR [rbp-0x14],0x0
  40beab:	jne    40beb4 <flatcc_verify_typed_buffer_header@@Base+0x59>
  40bead:	mov    eax,0x6
  40beb2:	jmp    40bf1e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40beb4:	cmp    QWORD PTR [rbp-0x30],0x7
  40beb9:	seta   al
  40bebc:	movzx  eax,al
  40bebf:	mov    DWORD PTR [rbp-0x10],eax
  40bec2:	cmp    DWORD PTR [rbp-0x10],0x0
  40bec6:	jne    40becf <flatcc_verify_typed_buffer_header@@Base+0x74>
  40bec8:	mov    eax,0x1
  40becd:	jmp    40bf1e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40becf:	cmp    DWORD PTR [rbp-0x34],0x0
  40bed3:	je     40bf19 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  40bed5:	mov    eax,DWORD PTR [rbp-0x34]
  40bed8:	mov    DWORD PTR [rbp-0xc],eax
  40bedb:	mov    rax,QWORD PTR [rbp-0x28]
  40bedf:	mov    esi,0x4
  40bee4:	mov    rdi,rax
  40bee7:	call   40ad2f <flatcc_verify_error_string@@Base+0x252>
  40beec:	mov    DWORD PTR [rbp-0x8],eax
  40beef:	cmp    DWORD PTR [rbp-0xc],0x0
  40bef3:	je     40befd <flatcc_verify_typed_buffer_header@@Base+0xa2>
  40bef5:	mov    eax,DWORD PTR [rbp-0x8]
  40bef8:	cmp    eax,DWORD PTR [rbp-0xc]
  40befb:	jne    40bf04 <flatcc_verify_typed_buffer_header@@Base+0xa9>
  40befd:	mov    eax,0x1
  40bf02:	jmp    40bf09 <flatcc_verify_typed_buffer_header@@Base+0xae>
  40bf04:	mov    eax,0x0
  40bf09:	mov    DWORD PTR [rbp-0x4],eax
  40bf0c:	cmp    DWORD PTR [rbp-0x4],0x0
  40bf10:	jne    40bf19 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  40bf12:	mov    eax,0x2
  40bf17:	jmp    40bf1e <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40bf19:	mov    eax,0x0
  40bf1e:	leave  
  40bf1f:	ret    

000000000040bf20 <flatcc_verify_struct_as_root@@Base>:
  40bf20:	endbr64 
  40bf24:	push   rbp
  40bf25:	mov    rbp,rsp
  40bf28:	push   r12
  40bf2a:	push   rbx
  40bf2b:	sub    rsp,0x30
  40bf2f:	mov    QWORD PTR [rbp-0x18],rdi
  40bf33:	mov    QWORD PTR [rbp-0x20],rsi
  40bf37:	mov    QWORD PTR [rbp-0x28],rdx
  40bf3b:	mov    QWORD PTR [rbp-0x30],rcx
  40bf3f:	mov    eax,r8d
  40bf42:	mov    WORD PTR [rbp-0x34],ax
  40bf46:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf4a:	mov    rcx,QWORD PTR [rbp-0x20]
  40bf4e:	mov    rax,QWORD PTR [rbp-0x18]
  40bf52:	mov    rsi,rcx
  40bf55:	mov    rdi,rax
  40bf58:	call   40bd8b <flatcc_verify_buffer_header@@Base>
  40bf5d:	test   eax,eax
  40bf5f:	je     40bf7a <flatcc_verify_struct_as_root@@Base+0x5a>
  40bf61:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf65:	mov    rcx,QWORD PTR [rbp-0x20]
  40bf69:	mov    rax,QWORD PTR [rbp-0x18]
  40bf6d:	mov    rsi,rcx
  40bf70:	mov    rdi,rax
  40bf73:	call   40bd8b <flatcc_verify_buffer_header@@Base>
  40bf78:	jmp    40bfae <flatcc_verify_struct_as_root@@Base+0x8e>
  40bf7a:	movzx  ebx,WORD PTR [rbp-0x34]
  40bf7e:	mov    rax,QWORD PTR [rbp-0x30]
  40bf82:	mov    r12d,eax
  40bf85:	mov    rax,QWORD PTR [rbp-0x18]
  40bf89:	mov    esi,0x0
  40bf8e:	mov    rdi,rax
  40bf91:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40bf96:	mov    edx,eax
  40bf98:	mov    rax,QWORD PTR [rbp-0x20]
  40bf9c:	mov    r8d,ebx
  40bf9f:	mov    ecx,r12d
  40bfa2:	mov    esi,0x0
  40bfa7:	mov    edi,eax
  40bfa9:	call   40ae2d <flatcc_verify_error_string@@Base+0x350>
  40bfae:	add    rsp,0x30
  40bfb2:	pop    rbx
  40bfb3:	pop    r12
  40bfb5:	pop    rbp
  40bfb6:	ret    

000000000040bfb7 <flatcc_verify_struct_as_typed_root@@Base>:
  40bfb7:	endbr64 
  40bfbb:	push   rbp
  40bfbc:	mov    rbp,rsp
  40bfbf:	push   r12
  40bfc1:	push   rbx
  40bfc2:	sub    rsp,0x20
  40bfc6:	mov    QWORD PTR [rbp-0x18],rdi
  40bfca:	mov    QWORD PTR [rbp-0x20],rsi
  40bfce:	mov    DWORD PTR [rbp-0x24],edx
  40bfd1:	mov    QWORD PTR [rbp-0x30],rcx
  40bfd5:	mov    eax,r8d
  40bfd8:	mov    WORD PTR [rbp-0x28],ax
  40bfdc:	mov    edx,DWORD PTR [rbp-0x24]
  40bfdf:	mov    rcx,QWORD PTR [rbp-0x20]
  40bfe3:	mov    rax,QWORD PTR [rbp-0x18]
  40bfe7:	mov    rsi,rcx
  40bfea:	mov    rdi,rax
  40bfed:	call   40be5b <flatcc_verify_typed_buffer_header@@Base>
  40bff2:	test   eax,eax
  40bff4:	je     40c00e <flatcc_verify_struct_as_typed_root@@Base+0x57>
  40bff6:	mov    edx,DWORD PTR [rbp-0x24]
  40bff9:	mov    rcx,QWORD PTR [rbp-0x20]
  40bffd:	mov    rax,QWORD PTR [rbp-0x18]
  40c001:	mov    rsi,rcx
  40c004:	mov    rdi,rax
  40c007:	call   40be5b <flatcc_verify_typed_buffer_header@@Base>
  40c00c:	jmp    40c042 <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  40c00e:	movzx  ebx,WORD PTR [rbp-0x28]
  40c012:	mov    rax,QWORD PTR [rbp-0x30]
  40c016:	mov    r12d,eax
  40c019:	mov    rax,QWORD PTR [rbp-0x18]
  40c01d:	mov    esi,0x0
  40c022:	mov    rdi,rax
  40c025:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c02a:	mov    edx,eax
  40c02c:	mov    rax,QWORD PTR [rbp-0x20]
  40c030:	mov    r8d,ebx
  40c033:	mov    ecx,r12d
  40c036:	mov    esi,0x0
  40c03b:	mov    edi,eax
  40c03d:	call   40ae2d <flatcc_verify_error_string@@Base+0x350>
  40c042:	add    rsp,0x20
  40c046:	pop    rbx
  40c047:	pop    r12
  40c049:	pop    rbp
  40c04a:	ret    

000000000040c04b <flatcc_verify_table_as_root@@Base>:
  40c04b:	endbr64 
  40c04f:	push   rbp
  40c050:	mov    rbp,rsp
  40c053:	sub    rsp,0x20
  40c057:	mov    QWORD PTR [rbp-0x8],rdi
  40c05b:	mov    QWORD PTR [rbp-0x10],rsi
  40c05f:	mov    QWORD PTR [rbp-0x18],rdx
  40c063:	mov    QWORD PTR [rbp-0x20],rcx
  40c067:	mov    rax,QWORD PTR [rbp-0x10]
  40c06b:	mov    ecx,eax
  40c06d:	mov    rdx,QWORD PTR [rbp-0x18]
  40c071:	mov    rax,QWORD PTR [rbp-0x8]
  40c075:	mov    rsi,rcx
  40c078:	mov    rdi,rax
  40c07b:	call   40bd8b <flatcc_verify_buffer_header@@Base>
  40c080:	test   eax,eax
  40c082:	je     40c09f <flatcc_verify_table_as_root@@Base+0x54>
  40c084:	mov    rax,QWORD PTR [rbp-0x10]
  40c088:	mov    ecx,eax
  40c08a:	mov    rdx,QWORD PTR [rbp-0x18]
  40c08e:	mov    rax,QWORD PTR [rbp-0x8]
  40c092:	mov    rsi,rcx
  40c095:	mov    rdi,rax
  40c098:	call   40bd8b <flatcc_verify_buffer_header@@Base>
  40c09d:	jmp    40c0d6 <flatcc_verify_table_as_root@@Base+0x8b>
  40c09f:	mov    rax,QWORD PTR [rbp-0x8]
  40c0a3:	mov    esi,0x0
  40c0a8:	mov    rdi,rax
  40c0ab:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c0b0:	mov    ecx,eax
  40c0b2:	mov    rax,QWORD PTR [rbp-0x10]
  40c0b6:	mov    esi,eax
  40c0b8:	mov    rdx,QWORD PTR [rbp-0x20]
  40c0bc:	mov    rax,QWORD PTR [rbp-0x8]
  40c0c0:	mov    r9,rdx
  40c0c3:	mov    r8d,0x64
  40c0c9:	mov    edx,0x0
  40c0ce:	mov    rdi,rax
  40c0d1:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40c0d6:	leave  
  40c0d7:	ret    

000000000040c0d8 <flatcc_verify_table_as_typed_root@@Base>:
  40c0d8:	endbr64 
  40c0dc:	push   rbp
  40c0dd:	mov    rbp,rsp
  40c0e0:	sub    rsp,0x20
  40c0e4:	mov    QWORD PTR [rbp-0x8],rdi
  40c0e8:	mov    QWORD PTR [rbp-0x10],rsi
  40c0ec:	mov    DWORD PTR [rbp-0x14],edx
  40c0ef:	mov    QWORD PTR [rbp-0x20],rcx
  40c0f3:	mov    rax,QWORD PTR [rbp-0x10]
  40c0f7:	mov    ecx,eax
  40c0f9:	mov    edx,DWORD PTR [rbp-0x14]
  40c0fc:	mov    rax,QWORD PTR [rbp-0x8]
  40c100:	mov    rsi,rcx
  40c103:	mov    rdi,rax
  40c106:	call   40be5b <flatcc_verify_typed_buffer_header@@Base>
  40c10b:	test   eax,eax
  40c10d:	je     40c129 <flatcc_verify_table_as_typed_root@@Base+0x51>
  40c10f:	mov    rax,QWORD PTR [rbp-0x10]
  40c113:	mov    ecx,eax
  40c115:	mov    edx,DWORD PTR [rbp-0x14]
  40c118:	mov    rax,QWORD PTR [rbp-0x8]
  40c11c:	mov    rsi,rcx
  40c11f:	mov    rdi,rax
  40c122:	call   40be5b <flatcc_verify_typed_buffer_header@@Base>
  40c127:	jmp    40c160 <flatcc_verify_table_as_typed_root@@Base+0x88>
  40c129:	mov    rax,QWORD PTR [rbp-0x8]
  40c12d:	mov    esi,0x0
  40c132:	mov    rdi,rax
  40c135:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c13a:	mov    ecx,eax
  40c13c:	mov    rax,QWORD PTR [rbp-0x10]
  40c140:	mov    esi,eax
  40c142:	mov    rdx,QWORD PTR [rbp-0x20]
  40c146:	mov    rax,QWORD PTR [rbp-0x8]
  40c14a:	mov    r9,rdx
  40c14d:	mov    r8d,0x64
  40c153:	mov    edx,0x0
  40c158:	mov    rdi,rax
  40c15b:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40c160:	leave  
  40c161:	ret    

000000000040c162 <flatcc_verify_struct_as_nested_root@@Base>:
  40c162:	endbr64 
  40c166:	push   rbp
  40c167:	mov    rbp,rsp
  40c16a:	sub    rsp,0x40
  40c16e:	mov    QWORD PTR [rbp-0x18],rdi
  40c172:	mov    eax,esi
  40c174:	mov    DWORD PTR [rbp-0x20],edx
  40c177:	mov    QWORD PTR [rbp-0x28],rcx
  40c17b:	mov    QWORD PTR [rbp-0x30],r8
  40c17f:	mov    edx,r9d
  40c182:	mov    WORD PTR [rbp-0x1c],ax
  40c186:	mov    eax,edx
  40c188:	mov    WORD PTR [rbp-0x34],ax
  40c18c:	movzx  ecx,WORD PTR [rbp-0x34]
  40c190:	movzx  esi,WORD PTR [rbp-0x1c]
  40c194:	mov    edx,DWORD PTR [rbp-0x20]
  40c197:	mov    rax,QWORD PTR [rbp-0x18]
  40c19b:	mov    r9d,0xffffffff
  40c1a1:	mov    r8d,0x1
  40c1a7:	mov    rdi,rax
  40c1aa:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40c1af:	test   eax,eax
  40c1b1:	je     40c1d8 <flatcc_verify_struct_as_nested_root@@Base+0x76>
  40c1b3:	movzx  ecx,WORD PTR [rbp-0x34]
  40c1b7:	movzx  esi,WORD PTR [rbp-0x1c]
  40c1bb:	mov    edx,DWORD PTR [rbp-0x20]
  40c1be:	mov    rax,QWORD PTR [rbp-0x18]
  40c1c2:	mov    r9d,0xffffffff
  40c1c8:	mov    r8d,0x1
  40c1ce:	mov    rdi,rax
  40c1d1:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40c1d6:	jmp    40c251 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  40c1d8:	movzx  edx,WORD PTR [rbp-0x1c]
  40c1dc:	mov    rax,QWORD PTR [rbp-0x18]
  40c1e0:	mov    esi,edx
  40c1e2:	mov    rdi,rax
  40c1e5:	call   40af1f <flatcc_verify_error_string@@Base+0x442>
  40c1ea:	mov    QWORD PTR [rbp-0x8],rax
  40c1ee:	cmp    QWORD PTR [rbp-0x8],0x0
  40c1f3:	jne    40c1fc <flatcc_verify_struct_as_nested_root@@Base+0x9a>
  40c1f5:	mov    eax,0x0
  40c1fa:	jmp    40c251 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  40c1fc:	mov    rax,QWORD PTR [rbp-0x8]
  40c200:	mov    esi,0x0
  40c205:	mov    rdi,rax
  40c208:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c20d:	mov    edx,eax
  40c20f:	mov    rax,QWORD PTR [rbp-0x8]
  40c213:	add    rax,rdx
  40c216:	mov    QWORD PTR [rbp-0x8],rax
  40c21a:	mov    rax,QWORD PTR [rbp-0x8]
  40c21e:	mov    esi,0x0
  40c223:	mov    rdi,rax
  40c226:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c22b:	mov    DWORD PTR [rbp-0xc],eax
  40c22e:	add    QWORD PTR [rbp-0x8],0x4
  40c233:	movzx  edi,WORD PTR [rbp-0x34]
  40c237:	mov    esi,DWORD PTR [rbp-0xc]
  40c23a:	mov    rcx,QWORD PTR [rbp-0x30]
  40c23e:	mov    rdx,QWORD PTR [rbp-0x28]
  40c242:	mov    rax,QWORD PTR [rbp-0x8]
  40c246:	mov    r8d,edi
  40c249:	mov    rdi,rax
  40c24c:	call   40bf20 <flatcc_verify_struct_as_root@@Base>
  40c251:	leave  
  40c252:	ret    

000000000040c253 <flatcc_verify_table_as_nested_root@@Base>:
  40c253:	endbr64 
  40c257:	push   rbp
  40c258:	mov    rbp,rsp
  40c25b:	push   rbx
  40c25c:	sub    rsp,0x48
  40c260:	mov    QWORD PTR [rbp-0x28],rdi
  40c264:	mov    eax,esi
  40c266:	mov    DWORD PTR [rbp-0x30],edx
  40c269:	mov    QWORD PTR [rbp-0x38],rcx
  40c26d:	mov    edx,r8d
  40c270:	mov    QWORD PTR [rbp-0x48],r9
  40c274:	mov    WORD PTR [rbp-0x2c],ax
  40c278:	mov    eax,edx
  40c27a:	mov    WORD PTR [rbp-0x3c],ax
  40c27e:	movzx  ecx,WORD PTR [rbp-0x3c]
  40c282:	movzx  esi,WORD PTR [rbp-0x2c]
  40c286:	mov    edx,DWORD PTR [rbp-0x30]
  40c289:	mov    rax,QWORD PTR [rbp-0x28]
  40c28d:	mov    r9d,0xffffffff
  40c293:	mov    r8d,0x1
  40c299:	mov    rdi,rax
  40c29c:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40c2a1:	test   eax,eax
  40c2a3:	je     40c2cd <flatcc_verify_table_as_nested_root@@Base+0x7a>
  40c2a5:	movzx  ecx,WORD PTR [rbp-0x3c]
  40c2a9:	movzx  esi,WORD PTR [rbp-0x2c]
  40c2ad:	mov    edx,DWORD PTR [rbp-0x30]
  40c2b0:	mov    rax,QWORD PTR [rbp-0x28]
  40c2b4:	mov    r9d,0xffffffff
  40c2ba:	mov    r8d,0x1
  40c2c0:	mov    rdi,rax
  40c2c3:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40c2c8:	jmp    40c395 <flatcc_verify_table_as_nested_root@@Base+0x142>
  40c2cd:	movzx  edx,WORD PTR [rbp-0x2c]
  40c2d1:	mov    rax,QWORD PTR [rbp-0x28]
  40c2d5:	mov    esi,edx
  40c2d7:	mov    rdi,rax
  40c2da:	call   40af1f <flatcc_verify_error_string@@Base+0x442>
  40c2df:	mov    QWORD PTR [rbp-0x18],rax
  40c2e3:	cmp    QWORD PTR [rbp-0x18],0x0
  40c2e8:	jne    40c2f4 <flatcc_verify_table_as_nested_root@@Base+0xa1>
  40c2ea:	mov    eax,0x0
  40c2ef:	jmp    40c395 <flatcc_verify_table_as_nested_root@@Base+0x142>
  40c2f4:	mov    rax,QWORD PTR [rbp-0x18]
  40c2f8:	mov    esi,0x0
  40c2fd:	mov    rdi,rax
  40c300:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c305:	mov    edx,eax
  40c307:	mov    rax,QWORD PTR [rbp-0x18]
  40c30b:	add    rax,rdx
  40c30e:	mov    QWORD PTR [rbp-0x18],rax
  40c312:	mov    rax,QWORD PTR [rbp-0x18]
  40c316:	mov    esi,0x0
  40c31b:	mov    rdi,rax
  40c31e:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c323:	mov    DWORD PTR [rbp-0x1c],eax
  40c326:	add    QWORD PTR [rbp-0x18],0x4
  40c32b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c32e:	mov    rdx,QWORD PTR [rbp-0x38]
  40c332:	mov    rax,QWORD PTR [rbp-0x18]
  40c336:	mov    rsi,rcx
  40c339:	mov    rdi,rax
  40c33c:	call   40bd8b <flatcc_verify_buffer_header@@Base>
  40c341:	test   eax,eax
  40c343:	je     40c35d <flatcc_verify_table_as_nested_root@@Base+0x10a>
  40c345:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c348:	mov    rdx,QWORD PTR [rbp-0x38]
  40c34c:	mov    rax,QWORD PTR [rbp-0x18]
  40c350:	mov    rsi,rcx
  40c353:	mov    rdi,rax
  40c356:	call   40bd8b <flatcc_verify_buffer_header@@Base>
  40c35b:	jmp    40c395 <flatcc_verify_table_as_nested_root@@Base+0x142>
  40c35d:	mov    rax,QWORD PTR [rbp-0x28]
  40c361:	mov    ebx,DWORD PTR [rax+0xc]
  40c364:	mov    rax,QWORD PTR [rbp-0x18]
  40c368:	mov    esi,0x0
  40c36d:	mov    rdi,rax
  40c370:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c375:	mov    ecx,eax
  40c377:	mov    rdx,QWORD PTR [rbp-0x48]
  40c37b:	mov    esi,DWORD PTR [rbp-0x1c]
  40c37e:	mov    rax,QWORD PTR [rbp-0x18]
  40c382:	mov    r9,rdx
  40c385:	mov    r8d,ebx
  40c388:	mov    edx,0x0
  40c38d:	mov    rdi,rax
  40c390:	call   40b393 <flatcc_verify_error_string@@Base+0x8b6>
  40c395:	add    rsp,0x48
  40c399:	pop    rbx
  40c39a:	pop    rbp
  40c39b:	ret    

000000000040c39c <flatcc_verify_union_field@@Base>:
  40c39c:	endbr64 
  40c3a0:	push   rbp
  40c3a1:	mov    rbp,rsp
  40c3a4:	sub    rsp,0x70
  40c3a8:	mov    QWORD PTR [rbp-0x58],rdi
  40c3ac:	mov    eax,esi
  40c3ae:	mov    DWORD PTR [rbp-0x60],edx
  40c3b1:	mov    QWORD PTR [rbp-0x68],rcx
  40c3b5:	mov    WORD PTR [rbp-0x5c],ax
  40c3b9:	mov    rax,QWORD PTR fs:0x28
  40c3c2:	mov    QWORD PTR [rbp-0x8],rax
  40c3c6:	xor    eax,eax
  40c3c8:	movzx  eax,WORD PTR [rbp-0x5c]
  40c3cc:	dec    eax
  40c3ce:	movzx  edx,ax
  40c3d1:	mov    rax,QWORD PTR [rbp-0x58]
  40c3d5:	mov    esi,edx
  40c3d7:	mov    rdi,rax
  40c3da:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40c3df:	mov    WORD PTR [rbp-0x50],ax
  40c3e3:	cmp    WORD PTR [rbp-0x50],0x0
  40c3e8:	jne    40c445 <flatcc_verify_union_field@@Base+0xa9>
  40c3ea:	movzx  edx,WORD PTR [rbp-0x5c]
  40c3ee:	mov    rax,QWORD PTR [rbp-0x58]
  40c3f2:	mov    esi,edx
  40c3f4:	mov    rdi,rax
  40c3f7:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40c3fc:	mov    WORD PTR [rbp-0x4e],ax
  40c400:	cmp    WORD PTR [rbp-0x4e],0x0
  40c405:	sete   al
  40c408:	movzx  eax,al
  40c40b:	mov    DWORD PTR [rbp-0x48],eax
  40c40e:	cmp    DWORD PTR [rbp-0x48],0x0
  40c412:	jne    40c41e <flatcc_verify_union_field@@Base+0x82>
  40c414:	mov    eax,0x17
  40c419:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c41e:	cmp    DWORD PTR [rbp-0x60],0x0
  40c422:	sete   al
  40c425:	movzx  eax,al
  40c428:	mov    DWORD PTR [rbp-0x44],eax
  40c42b:	cmp    DWORD PTR [rbp-0x44],0x0
  40c42f:	jne    40c43b <flatcc_verify_union_field@@Base+0x9f>
  40c431:	mov    eax,0x15
  40c436:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c43b:	mov    eax,0x0
  40c440:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c445:	movzx  eax,WORD PTR [rbp-0x5c]
  40c449:	dec    eax
  40c44b:	movzx  esi,ax
  40c44e:	mov    rax,QWORD PTR [rbp-0x58]
  40c452:	mov    r8d,0x1
  40c458:	mov    ecx,0x1
  40c45d:	mov    edx,0x0
  40c462:	mov    rdi,rax
  40c465:	call   40af71 <flatcc_verify_error_string@@Base+0x494>
  40c46a:	test   eax,eax
  40c46c:	je     40c498 <flatcc_verify_union_field@@Base+0xfc>
  40c46e:	movzx  eax,WORD PTR [rbp-0x5c]
  40c472:	dec    eax
  40c474:	movzx  esi,ax
  40c477:	mov    rax,QWORD PTR [rbp-0x58]
  40c47b:	mov    r8d,0x1
  40c481:	mov    ecx,0x1
  40c486:	mov    edx,0x0
  40c48b:	mov    rdi,rax
  40c48e:	call   40af71 <flatcc_verify_error_string@@Base+0x494>
  40c493:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c498:	movzx  edx,WORD PTR [rbp-0x5c]
  40c49c:	mov    rax,QWORD PTR [rbp-0x58]
  40c4a0:	mov    esi,edx
  40c4a2:	mov    rdi,rax
  40c4a5:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40c4aa:	mov    WORD PTR [rbp-0x4e],ax
  40c4ae:	mov    rax,QWORD PTR [rbp-0x58]
  40c4b2:	mov    rdx,QWORD PTR [rax]
  40c4b5:	mov    rax,QWORD PTR [rbp-0x58]
  40c4b9:	mov    eax,DWORD PTR [rax+0x18]
  40c4bc:	mov    ecx,eax
  40c4be:	movzx  eax,WORD PTR [rbp-0x50]
  40c4c2:	add    rax,rcx
  40c4c5:	add    rax,rdx
  40c4c8:	mov    QWORD PTR [rbp-0x38],rax
  40c4cc:	mov    rax,QWORD PTR [rbp-0x38]
  40c4d0:	movzx  eax,BYTE PTR [rax]
  40c4d3:	test   al,al
  40c4d5:	jne    40c4de <flatcc_verify_union_field@@Base+0x142>
  40c4d7:	cmp    WORD PTR [rbp-0x4e],0x0
  40c4dc:	jne    40c4e5 <flatcc_verify_union_field@@Base+0x149>
  40c4de:	mov    eax,0x1
  40c4e3:	jmp    40c4ea <flatcc_verify_union_field@@Base+0x14e>
  40c4e5:	mov    eax,0x0
  40c4ea:	mov    DWORD PTR [rbp-0x40],eax
  40c4ed:	cmp    DWORD PTR [rbp-0x40],0x0
  40c4f1:	jne    40c4fd <flatcc_verify_union_field@@Base+0x161>
  40c4f3:	mov    eax,0x18
  40c4f8:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c4fd:	mov    rax,QWORD PTR [rbp-0x38]
  40c501:	movzx  eax,BYTE PTR [rax]
  40c504:	test   al,al
  40c506:	jne    40c50f <flatcc_verify_union_field@@Base+0x173>
  40c508:	mov    eax,0x0
  40c50d:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c50f:	movzx  esi,WORD PTR [rbp-0x5c]
  40c513:	lea    rcx,[rbp-0x4c]
  40c517:	mov    edx,DWORD PTR [rbp-0x60]
  40c51a:	mov    rax,QWORD PTR [rbp-0x58]
  40c51e:	mov    rdi,rax
  40c521:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40c526:	mov    DWORD PTR [rbp-0x3c],eax
  40c529:	cmp    DWORD PTR [rbp-0x3c],0x0
  40c52d:	jne    40c536 <flatcc_verify_union_field@@Base+0x19a>
  40c52f:	mov    eax,DWORD PTR [rbp-0x4c]
  40c532:	test   eax,eax
  40c534:	jne    40c53b <flatcc_verify_union_field@@Base+0x19f>
  40c536:	mov    eax,DWORD PTR [rbp-0x3c]
  40c539:	jmp    40c58e <flatcc_verify_union_field@@Base+0x1f2>
  40c53b:	mov    rax,QWORD PTR [rbp-0x58]
  40c53f:	mov    rax,QWORD PTR [rax]
  40c542:	mov    QWORD PTR [rbp-0x30],rax
  40c546:	mov    rax,QWORD PTR [rbp-0x58]
  40c54a:	mov    eax,DWORD PTR [rax+0x8]
  40c54d:	mov    DWORD PTR [rbp-0x28],eax
  40c550:	mov    rax,QWORD PTR [rbp-0x58]
  40c554:	mov    eax,DWORD PTR [rax+0xc]
  40c557:	mov    DWORD PTR [rbp-0x24],eax
  40c55a:	mov    eax,DWORD PTR [rbp-0x4c]
  40c55d:	mov    DWORD PTR [rbp-0x1c],eax
  40c560:	mov    edx,DWORD PTR [rbp-0x4c]
  40c563:	mov    rax,QWORD PTR [rbp-0x58]
  40c567:	mov    rax,QWORD PTR [rax]
  40c56a:	mov    esi,edx
  40c56c:	mov    rdi,rax
  40c56f:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c574:	mov    DWORD PTR [rbp-0x18],eax
  40c577:	mov    rax,QWORD PTR [rbp-0x38]
  40c57b:	movzx  eax,BYTE PTR [rax]
  40c57e:	mov    BYTE PTR [rbp-0x20],al
  40c581:	lea    rdx,[rbp-0x30]
  40c585:	mov    rax,QWORD PTR [rbp-0x68]
  40c589:	mov    rdi,rdx
  40c58c:	call   rax
  40c58e:	mov    rcx,QWORD PTR [rbp-0x8]
  40c592:	xor    rcx,QWORD PTR fs:0x28
  40c59b:	je     40c5a2 <flatcc_verify_union_field@@Base+0x206>
  40c59d:	call   403120 <__stack_chk_fail@plt>
  40c5a2:	leave  
  40c5a3:	ret    

000000000040c5a4 <flatcc_verify_union_vector_field@@Base>:
  40c5a4:	endbr64 
  40c5a8:	push   rbp
  40c5a9:	mov    rbp,rsp
  40c5ac:	push   rbx
  40c5ad:	sub    rsp,0x58
  40c5b1:	mov    QWORD PTR [rbp-0x48],rdi
  40c5b5:	mov    eax,esi
  40c5b7:	mov    DWORD PTR [rbp-0x50],edx
  40c5ba:	mov    QWORD PTR [rbp-0x58],rcx
  40c5be:	mov    WORD PTR [rbp-0x4c],ax
  40c5c2:	mov    rax,QWORD PTR fs:0x28
  40c5cb:	mov    QWORD PTR [rbp-0x18],rax
  40c5cf:	xor    eax,eax
  40c5d1:	movzx  eax,WORD PTR [rbp-0x4c]
  40c5d5:	dec    eax
  40c5d7:	movzx  edx,ax
  40c5da:	mov    rax,QWORD PTR [rbp-0x48]
  40c5de:	mov    esi,edx
  40c5e0:	mov    rdi,rax
  40c5e3:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40c5e8:	mov    WORD PTR [rbp-0x3c],ax
  40c5ec:	cmp    WORD PTR [rbp-0x3c],0x0
  40c5f1:	jne    40c62d <flatcc_verify_union_vector_field@@Base+0x89>
  40c5f3:	movzx  edx,WORD PTR [rbp-0x4c]
  40c5f7:	mov    rax,QWORD PTR [rbp-0x48]
  40c5fb:	mov    esi,edx
  40c5fd:	mov    rdi,rax
  40c600:	call   40aece <flatcc_verify_error_string@@Base+0x3f1>
  40c605:	mov    WORD PTR [rbp-0x3a],ax
  40c609:	cmp    WORD PTR [rbp-0x3a],0x0
  40c60e:	jne    40c62d <flatcc_verify_union_vector_field@@Base+0x89>
  40c610:	cmp    DWORD PTR [rbp-0x50],0x0
  40c614:	sete   al
  40c617:	movzx  eax,al
  40c61a:	mov    DWORD PTR [rbp-0x34],eax
  40c61d:	cmp    DWORD PTR [rbp-0x34],0x0
  40c621:	jne    40c62d <flatcc_verify_union_vector_field@@Base+0x89>
  40c623:	mov    eax,0x16
  40c628:	jmp    40c76e <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c62d:	movzx  eax,WORD PTR [rbp-0x4c]
  40c631:	dec    eax
  40c633:	movzx  esi,ax
  40c636:	mov    edx,DWORD PTR [rbp-0x50]
  40c639:	mov    rax,QWORD PTR [rbp-0x48]
  40c63d:	mov    r9d,0xffffffff
  40c643:	mov    r8d,0x1
  40c649:	mov    ecx,0x1
  40c64e:	mov    rdi,rax
  40c651:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40c656:	test   eax,eax
  40c658:	je     40c688 <flatcc_verify_union_vector_field@@Base+0xe4>
  40c65a:	movzx  eax,WORD PTR [rbp-0x4c]
  40c65e:	dec    eax
  40c660:	movzx  esi,ax
  40c663:	mov    edx,DWORD PTR [rbp-0x50]
  40c666:	mov    rax,QWORD PTR [rbp-0x48]
  40c66a:	mov    r9d,0xffffffff
  40c670:	mov    r8d,0x1
  40c676:	mov    ecx,0x1
  40c67b:	mov    rdi,rax
  40c67e:	call   40b9e8 <flatcc_verify_vector_field@@Base>
  40c683:	jmp    40c76e <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c688:	movzx  eax,WORD PTR [rbp-0x4c]
  40c68c:	dec    eax
  40c68e:	movzx  edx,ax
  40c691:	mov    rax,QWORD PTR [rbp-0x48]
  40c695:	mov    esi,edx
  40c697:	mov    rdi,rax
  40c69a:	call   40af1f <flatcc_verify_error_string@@Base+0x442>
  40c69f:	mov    QWORD PTR [rbp-0x28],rax
  40c6a3:	cmp    QWORD PTR [rbp-0x28],0x0
  40c6a8:	jne    40c6b4 <flatcc_verify_union_vector_field@@Base+0x110>
  40c6aa:	mov    eax,0x0
  40c6af:	jmp    40c76e <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c6b4:	mov    rax,QWORD PTR [rbp-0x28]
  40c6b8:	mov    esi,0x0
  40c6bd:	mov    rdi,rax
  40c6c0:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c6c5:	mov    edx,eax
  40c6c7:	mov    rax,QWORD PTR [rbp-0x28]
  40c6cb:	add    rax,rdx
  40c6ce:	mov    QWORD PTR [rbp-0x28],rax
  40c6d2:	mov    rax,QWORD PTR [rbp-0x28]
  40c6d6:	mov    esi,0x0
  40c6db:	mov    rdi,rax
  40c6de:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c6e3:	mov    DWORD PTR [rbp-0x30],eax
  40c6e6:	add    QWORD PTR [rbp-0x28],0x4
  40c6eb:	mov    rax,QWORD PTR [rbp-0x28]
  40c6ef:	mov    QWORD PTR [rbp-0x20],rax
  40c6f3:	movzx  esi,WORD PTR [rbp-0x4c]
  40c6f7:	lea    rcx,[rbp-0x38]
  40c6fb:	mov    edx,DWORD PTR [rbp-0x50]
  40c6fe:	mov    rax,QWORD PTR [rbp-0x48]
  40c702:	mov    rdi,rax
  40c705:	call   40b062 <flatcc_verify_error_string@@Base+0x585>
  40c70a:	mov    DWORD PTR [rbp-0x2c],eax
  40c70d:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c711:	jne    40c71a <flatcc_verify_union_vector_field@@Base+0x176>
  40c713:	mov    eax,DWORD PTR [rbp-0x38]
  40c716:	test   eax,eax
  40c718:	jne    40c71f <flatcc_verify_union_vector_field@@Base+0x17b>
  40c71a:	mov    eax,DWORD PTR [rbp-0x2c]
  40c71d:	jmp    40c76e <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c71f:	mov    rax,QWORD PTR [rbp-0x48]
  40c723:	mov    ebx,DWORD PTR [rax+0xc]
  40c726:	mov    edx,DWORD PTR [rbp-0x38]
  40c729:	mov    rax,QWORD PTR [rbp-0x48]
  40c72d:	mov    rax,QWORD PTR [rax]
  40c730:	mov    esi,edx
  40c732:	mov    rdi,rax
  40c735:	call   40acb2 <flatcc_verify_error_string@@Base+0x1d5>
  40c73a:	mov    r10d,eax
  40c73d:	mov    edx,DWORD PTR [rbp-0x38]
  40c740:	mov    rax,QWORD PTR [rbp-0x48]
  40c744:	mov    esi,DWORD PTR [rax+0x8]
  40c747:	mov    rax,QWORD PTR [rbp-0x48]
  40c74b:	mov    rax,QWORD PTR [rax]
  40c74e:	mov    rdi,QWORD PTR [rbp-0x20]
  40c752:	mov    ecx,DWORD PTR [rbp-0x30]
  40c755:	push   QWORD PTR [rbp-0x58]
  40c758:	push   rbx
  40c759:	mov    r9,rdi
  40c75c:	mov    r8d,ecx
  40c75f:	mov    ecx,r10d
  40c762:	mov    rdi,rax
  40c765:	call   40b6fe <flatcc_verify_error_string@@Base+0xc21>
  40c76a:	add    rsp,0x10
  40c76e:	mov    rbx,QWORD PTR [rbp-0x18]
  40c772:	xor    rbx,QWORD PTR fs:0x28
  40c77b:	je     40c782 <flatcc_verify_union_vector_field@@Base+0x1de>
  40c77d:	call   403120 <__stack_chk_fail@plt>
  40c782:	mov    rbx,QWORD PTR [rbp-0x8]
  40c786:	leave  
  40c787:	ret    
  40c788:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c790 <__libc_csu_init@@Base>:
  40c790:	endbr64 
  40c794:	push   r15
  40c796:	lea    r15,[rip+0x5673]        # 411e10 <flatcc_builder_padding_base@@Base+0x4c50>
  40c79d:	push   r14
  40c79f:	mov    r14,rdx
  40c7a2:	push   r13
  40c7a4:	mov    r13,rsi
  40c7a7:	push   r12
  40c7a9:	mov    r12d,edi
  40c7ac:	push   rbp
  40c7ad:	lea    rbp,[rip+0x5664]        # 411e18 <flatcc_builder_padding_base@@Base+0x4c58>
  40c7b4:	push   rbx
  40c7b5:	sub    rbp,r15
  40c7b8:	sub    rsp,0x8
  40c7bc:	call   403000 <free@plt-0xf0>
  40c7c1:	sar    rbp,0x3
  40c7c5:	je     40c7e6 <__libc_csu_init@@Base+0x56>
  40c7c7:	xor    ebx,ebx
  40c7c9:	nop    DWORD PTR [rax+0x0]
  40c7d0:	mov    rdx,r14
  40c7d3:	mov    rsi,r13
  40c7d6:	mov    edi,r12d
  40c7d9:	call   QWORD PTR [r15+rbx*8]
  40c7dd:	add    rbx,0x1
  40c7e1:	cmp    rbp,rbx
  40c7e4:	jne    40c7d0 <__libc_csu_init@@Base+0x40>
  40c7e6:	add    rsp,0x8
  40c7ea:	pop    rbx
  40c7eb:	pop    rbp
  40c7ec:	pop    r12
  40c7ee:	pop    r13
  40c7f0:	pop    r14
  40c7f2:	pop    r15
  40c7f4:	ret    
  40c7f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040c800 <__libc_csu_fini@@Base>:
  40c800:	endbr64 
  40c804:	ret    

Disassembly of section .fini:

000000000040c808 <.fini>:
  40c808:	endbr64 
  40c80c:	sub    rsp,0x8
  40c810:	add    rsp,0x8
  40c814:	ret    
