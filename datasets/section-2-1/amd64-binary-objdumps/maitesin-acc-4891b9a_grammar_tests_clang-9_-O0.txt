
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffe1]        # 412ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xffe4]        # 413010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xffe2]        # 413018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xffda]        # 413020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xffd2]        # 413028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xffca]        # 413030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xffc2]        # 413038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xffba]        # 413040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fcntl@plt>:
  403090:	jmp    QWORD PTR [rip+0xffb2]        # 413048 <fcntl@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <getpid@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xffaa]        # 413050 <getpid@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fclose@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xffa2]        # 413058 <fclose@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <msync@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xff9a]        # 413060 <msync@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <strlen@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xff92]        # 413068 <strlen@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <mmap@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xff8a]        # 413070 <mmap@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <setbuf@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xff82]        # 413078 <setbuf@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strchr@plt>:
  403100:	jmp    QWORD PTR [rip+0xff7a]        # 413080 <strchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <printf@plt>:
  403110:	jmp    QWORD PTR [rip+0xff72]        # 413088 <printf@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <strrchr@plt>:
  403120:	jmp    QWORD PTR [rip+0xff6a]        # 413090 <strrchr@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <uname@plt>:
  403130:	jmp    QWORD PTR [rip+0xff62]        # 413098 <uname@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <__assert_fail@plt>:
  403140:	jmp    QWORD PTR [rip+0xff5a]        # 4130a0 <__assert_fail@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <memset@plt>:
  403150:	jmp    QWORD PTR [rip+0xff52]        # 4130a8 <memset@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <strnlen@plt>:
  403160:	jmp    QWORD PTR [rip+0xff4a]        # 4130b0 <strnlen@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <fprintf@plt>:
  403170:	jmp    QWORD PTR [rip+0xff42]        # 4130b8 <fprintf@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <ftell@plt>:
  403180:	jmp    QWORD PTR [rip+0xff3a]        # 4130c0 <ftell@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <strtol@plt>:
  403190:	jmp    QWORD PTR [rip+0xff32]        # 4130c8 <strtol@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <memcpy@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xff2a]        # 4130d0 <memcpy@GLIBC_2.14>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <prctl@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xff22]        # 4130d8 <prctl@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <fileno@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xff1a]        # 4130e0 <fileno@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <malloc@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xff12]        # 4130e8 <malloc@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fflush@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xff0a]        # 4130f0 <fflush@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <fseek@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xff02]        # 4130f8 <fseek@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <realloc@plt>:
  403200:	jmp    QWORD PTR [rip+0xfefa]        # 413100 <realloc@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <fdopen@plt>:
  403210:	jmp    QWORD PTR [rip+0xfef2]        # 413108 <fdopen@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <munmap@plt>:
  403220:	jmp    QWORD PTR [rip+0xfeea]        # 413110 <munmap@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <open@plt>:
  403230:	jmp    QWORD PTR [rip+0xfee2]        # 413118 <open@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <__cxa_atexit@plt>:
  403240:	jmp    QWORD PTR [rip+0xfeda]        # 413120 <__cxa_atexit@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <exit@plt>:
  403250:	jmp    QWORD PTR [rip+0xfed2]        # 413128 <exit@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <fwrite@plt>:
  403260:	jmp    QWORD PTR [rip+0xfeca]        # 413130 <fwrite@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <strdup@plt>:
  403270:	jmp    QWORD PTR [rip+0xfec2]        # 413138 <strdup@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strerror@plt>:
  403280:	jmp    QWORD PTR [rip+0xfeba]        # 413140 <strerror@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403290 <_start@@Base>:
  403290:	endbr64 
  403294:	xor    ebp,ebp
  403296:	mov    r9,rdx
  403299:	pop    rsi
  40329a:	mov    rdx,rsp
  40329d:	and    rsp,0xfffffffffffffff0
  4032a1:	push   rax
  4032a2:	push   rsp
  4032a3:	mov    r8,0x40d610
  4032aa:	mov    rcx,0x40d5a0
  4032b1:	mov    rdi,0x406a00
  4032b8:	call   QWORD PTR [rip+0xfd2a]        # 412fe8 <__libc_start_main@GLIBC_2.2.5>
  4032be:	hlt    
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	ret    
  4032c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032cf:	nop
  4032d0:	mov    eax,0x413160
  4032d5:	cmp    rax,0x413160
  4032db:	je     4032f0 <_start@@Base+0x60>
  4032dd:	mov    eax,0x0
  4032e2:	test   rax,rax
  4032e5:	je     4032f0 <_start@@Base+0x60>
  4032e7:	mov    edi,0x413160
  4032ec:	jmp    rax
  4032ee:	xchg   ax,ax
  4032f0:	ret    
  4032f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	mov    esi,0x413160
  403305:	sub    rsi,0x413160
  40330c:	mov    rax,rsi
  40330f:	shr    rsi,0x3f
  403313:	sar    rax,0x3
  403317:	add    rsi,rax
  40331a:	sar    rsi,1
  40331d:	je     403330 <_start@@Base+0xa0>
  40331f:	mov    eax,0x0
  403324:	test   rax,rax
  403327:	je     403330 <_start@@Base+0xa0>
  403329:	mov    edi,0x413160
  40332e:	jmp    rax
  403330:	ret    
  403331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	endbr64 
  403344:	cmp    BYTE PTR [rip+0xfe15],0x0        # 413160 <__bss_start@@Base>
  40334b:	jne    403360 <_start@@Base+0xd0>
  40334d:	push   rbp
  40334e:	mov    rbp,rsp
  403351:	call   4032d0 <_start@@Base+0x40>
  403356:	mov    BYTE PTR [rip+0xfe03],0x1        # 413160 <__bss_start@@Base>
  40335d:	pop    rbp
  40335e:	ret    
  40335f:	nop
  403360:	ret    
  403361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40336c:	nop    DWORD PTR [rax+0x0]
  403370:	endbr64 
  403374:	jmp    403300 <_start@@Base+0x70>
  403376:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403380 <next@@Base>:
  403380:	push   rbp
  403381:	mov    rbp,rsp
  403384:	sub    rsp,0x80
  40338b:	lea    rax,[rip+0xfdde]        # 413170 <__bss_start@@Base+0x10>
  403392:	mov    QWORD PTR [rbp-0x18],rdi
  403396:	mov    QWORD PTR [rbp-0x20],rax
  40339a:	mov    rax,QWORD PTR [rbp-0x20]
  40339e:	lea    rcx,[rip+0xfdcb]        # 413170 <__bss_start@@Base+0x10>
  4033a5:	mov    rdx,rcx
  4033a8:	add    rdx,0x8
  4033af:	add    rcx,0x10
  4033b6:	lea    rsi,[rip+0x10f93]        # 414350 <next_fake@@Base>
  4033bd:	mov    rdi,QWORD PTR [rax]
  4033c0:	add    rdi,0x1
  4033c7:	mov    QWORD PTR [rax],rdi
  4033ca:	mov    rax,QWORD PTR [rbp-0x18]
  4033ce:	mov    QWORD PTR [rbp-0x10],rax
  4033d2:	mov    rdi,QWORD PTR [rbp-0x10]
  4033d6:	mov    QWORD PTR [rsi],rdi
  4033d9:	cmp    DWORD PTR [rsi+0x198],0x32
  4033e0:	mov    QWORD PTR [rbp-0x28],rdx
  4033e4:	mov    QWORD PTR [rbp-0x30],rcx
  4033e8:	jae    40342e <next@@Base+0xae>
  4033ee:	mov    rax,QWORD PTR [rbp-0x28]
  4033f2:	lea    rcx,[rip+0xfd77]        # 413170 <__bss_start@@Base+0x10>
  4033f9:	add    rcx,0x18
  403400:	lea    rdx,[rip+0x10f49]        # 414350 <next_fake@@Base>
  403407:	mov    rsi,QWORD PTR [rax]
  40340a:	add    rsi,0x1
  403411:	mov    QWORD PTR [rax],rsi
  403414:	mov    edi,DWORD PTR [rdx+0x198]
  40341a:	mov    eax,edi
  40341c:	mov    rsi,QWORD PTR [rbp-0x10]
  403420:	mov    QWORD PTR [rdx+rax*8+0x8],rsi
  403425:	mov    QWORD PTR [rbp-0x38],rcx
  403429:	jmp    403467 <next@@Base+0xe7>
  40342e:	mov    rax,QWORD PTR [rbp-0x30]
  403432:	lea    rcx,[rip+0xfd37]        # 413170 <__bss_start@@Base+0x10>
  403439:	add    rcx,0x20
  403440:	lea    rdx,[rip+0x10f09]        # 414350 <next_fake@@Base>
  403447:	mov    rsi,QWORD PTR [rax]
  40344a:	add    rsi,0x1
  403451:	mov    QWORD PTR [rax],rsi
  403454:	mov    edi,DWORD PTR [rdx+0x1a0]
  40345a:	add    edi,0x1
  40345d:	mov    DWORD PTR [rdx+0x1a0],edi
  403463:	mov    QWORD PTR [rbp-0x38],rcx
  403467:	mov    rax,QWORD PTR [rbp-0x38]
  40346b:	lea    rcx,[rip+0xfcfe]        # 413170 <__bss_start@@Base+0x10>
  403472:	mov    rdx,rcx
  403475:	add    rdx,0x28
  40347c:	add    rcx,0x30
  403483:	lea    rsi,[rip+0x1108e]        # 414518 <fff@@Base>
  40348a:	lea    rdi,[rip+0x10ebf]        # 414350 <next_fake@@Base>
  403491:	mov    r8,QWORD PTR [rax]
  403494:	add    r8,0x1
  40349b:	mov    QWORD PTR [rax],r8
  40349e:	mov    r9d,DWORD PTR [rdi+0x198]
  4034a5:	add    r9d,0x1
  4034a9:	mov    DWORD PTR [rdi+0x198],r9d
  4034b0:	cmp    DWORD PTR [rsi+0x190],0x32
  4034b7:	mov    QWORD PTR [rbp-0x40],rdx
  4034bb:	mov    QWORD PTR [rbp-0x48],rcx
  4034bf:	jae    403515 <next@@Base+0x195>
  4034c5:	mov    rax,QWORD PTR [rbp-0x40]
  4034c9:	lea    rcx,[rip+0xfca0]        # 413170 <__bss_start@@Base+0x10>
  4034d0:	add    rcx,0x38
  4034d7:	lea    rdx,[rip+0x1103a]        # 414518 <fff@@Base>
  4034de:	lea    rsi,[rip+0xfffffffffffffe9b]        # 403380 <next@@Base>
  4034e5:	mov    rdi,QWORD PTR [rax]
  4034e8:	add    rdi,0x1
  4034ef:	mov    QWORD PTR [rax],rdi
  4034f2:	mov    r8d,DWORD PTR [rdx+0x190]
  4034f9:	mov    r9d,r8d
  4034fc:	add    r9d,0x1
  403500:	mov    DWORD PTR [rdx+0x190],r9d
  403507:	mov    r8d,r8d
  40350a:	mov    eax,r8d
  40350d:	mov    QWORD PTR [rdx+rax*8],rsi
  403511:	mov    QWORD PTR [rbp-0x48],rcx
  403515:	mov    rax,QWORD PTR [rbp-0x48]
  403519:	lea    rcx,[rip+0xfc50]        # 413170 <__bss_start@@Base+0x10>
  403520:	mov    rdx,rcx
  403523:	add    rdx,0x40
  40352a:	add    rcx,0x48
  403531:	lea    rsi,[rip+0x10e18]        # 414350 <next_fake@@Base>
  403538:	mov    rdi,QWORD PTR [rax]
  40353b:	add    rdi,0x1
  403542:	mov    QWORD PTR [rax],rdi
  403545:	cmp    QWORD PTR [rsi+0x1c0],0x0
  40354d:	mov    QWORD PTR [rbp-0x50],rdx
  403551:	mov    QWORD PTR [rbp-0x58],rcx
  403555:	je     40359b <next@@Base+0x21b>
  40355b:	mov    rax,QWORD PTR [rbp-0x50]
  40355f:	lea    rcx,[rip+0x10dea]        # 414350 <next_fake@@Base>
  403566:	mov    rdx,QWORD PTR [rax]
  403569:	add    rdx,0x1
  403570:	mov    QWORD PTR [rax],rdx
  403573:	mov    rax,QWORD PTR [rcx+0x1c0]
  40357a:	mov    rdi,QWORD PTR [rbp-0x10]
  40357e:	call   rax
  403580:	lea    rcx,[rip+0xfbe9]        # 413170 <__bss_start@@Base+0x10>
  403587:	add    rcx,0x50
  40358e:	mov    QWORD PTR [rbp-0x8],rax
  403592:	mov    QWORD PTR [rbp-0x60],rcx
  403596:	jmp    403700 <next@@Base+0x380>
  40359b:	mov    rax,QWORD PTR [rbp-0x58]
  40359f:	lea    rcx,[rip+0xfbca]        # 413170 <__bss_start@@Base+0x10>
  4035a6:	mov    rdx,rcx
  4035a9:	add    rdx,0x58
  4035b0:	add    rcx,0x60
  4035b7:	lea    rsi,[rip+0x10d92]        # 414350 <next_fake@@Base>
  4035be:	mov    rdi,QWORD PTR [rax]
  4035c1:	add    rdi,0x1
  4035c8:	mov    QWORD PTR [rax],rdi
  4035cb:	cmp    DWORD PTR [rsi+0x1b0],0x0
  4035d2:	mov    QWORD PTR [rbp-0x68],rdx
  4035d6:	mov    QWORD PTR [rbp-0x70],rcx
  4035da:	je     4036cb <next@@Base+0x34b>
  4035e0:	mov    rax,QWORD PTR [rbp-0x68]
  4035e4:	lea    rcx,[rip+0xfb85]        # 413170 <__bss_start@@Base+0x10>
  4035eb:	mov    rdx,rcx
  4035ee:	add    rdx,0x68
  4035f5:	add    rcx,0x70
  4035fc:	lea    rsi,[rip+0x10d4d]        # 414350 <next_fake@@Base>
  403603:	mov    rdi,QWORD PTR [rax]
  403606:	add    rdi,0x1
  40360d:	mov    QWORD PTR [rax],rdi
  403610:	mov    r8d,DWORD PTR [rsi+0x1b4]
  403617:	cmp    r8d,DWORD PTR [rsi+0x1b0]
  40361e:	mov    QWORD PTR [rbp-0x78],rdx
  403622:	mov    QWORD PTR [rbp-0x80],rcx
  403626:	jge    403681 <next@@Base+0x301>
  40362c:	mov    rax,QWORD PTR [rbp-0x78]
  403630:	lea    rcx,[rip+0xfb39]        # 413170 <__bss_start@@Base+0x10>
  403637:	add    rcx,0x78
  40363e:	lea    rdx,[rip+0x10d0b]        # 414350 <next_fake@@Base>
  403645:	mov    rsi,QWORD PTR [rax]
  403648:	add    rsi,0x1
  40364f:	mov    QWORD PTR [rax],rsi
  403652:	mov    rax,QWORD PTR [rdx+0x1b8]
  403659:	mov    edi,DWORD PTR [rdx+0x1b4]
  40365f:	mov    r8d,edi
  403662:	add    r8d,0x1
  403666:	mov    DWORD PTR [rdx+0x1b4],r8d
  40366d:	movsxd rdx,edi
  403670:	mov    rax,QWORD PTR [rax+rdx*8]
  403674:	mov    QWORD PTR [rbp-0x8],rax
  403678:	mov    QWORD PTR [rbp-0x60],rcx
  40367c:	jmp    403700 <next@@Base+0x380>
  403681:	mov    rax,QWORD PTR [rbp-0x80]
  403685:	lea    rcx,[rip+0xfae4]        # 413170 <__bss_start@@Base+0x10>
  40368c:	add    rcx,0x80
  403693:	lea    rdx,[rip+0x10cb6]        # 414350 <next_fake@@Base>
  40369a:	mov    rsi,QWORD PTR [rax]
  40369d:	add    rsi,0x1
  4036a4:	mov    QWORD PTR [rax],rsi
  4036a7:	mov    rax,QWORD PTR [rdx+0x1b8]
  4036ae:	mov    edi,DWORD PTR [rdx+0x1b0]
  4036b4:	sub    edi,0x1
  4036b7:	movsxd rdx,edi
  4036ba:	mov    rax,QWORD PTR [rax+rdx*8]
  4036be:	mov    QWORD PTR [rbp-0x8],rax
  4036c2:	mov    QWORD PTR [rbp-0x60],rcx
  4036c6:	jmp    403700 <next@@Base+0x380>
  4036cb:	mov    rax,QWORD PTR [rbp-0x70]
  4036cf:	lea    rcx,[rip+0xfa9a]        # 413170 <__bss_start@@Base+0x10>
  4036d6:	add    rcx,0x88
  4036dd:	lea    rdx,[rip+0x10c6c]        # 414350 <next_fake@@Base>
  4036e4:	mov    rsi,QWORD PTR [rax]
  4036e7:	add    rsi,0x1
  4036ee:	mov    QWORD PTR [rax],rsi
  4036f1:	mov    rax,QWORD PTR [rdx+0x1a8]
  4036f8:	mov    QWORD PTR [rbp-0x8],rax
  4036fc:	mov    QWORD PTR [rbp-0x60],rcx
  403700:	mov    rax,QWORD PTR [rbp-0x60]
  403704:	mov    rcx,QWORD PTR [rax]
  403707:	add    rcx,0x1
  40370e:	mov    QWORD PTR [rax],rcx
  403711:	mov    rax,QWORD PTR [rip+0xfae8]        # 413200 <__bss_start@@Base+0xa0>
  403718:	add    rax,0x1
  40371e:	mov    QWORD PTR [rip+0xfadb],rax        # 413200 <__bss_start@@Base+0xa0>
  403725:	mov    rax,QWORD PTR [rbp-0x8]
  403729:	add    rsp,0x80
  403730:	pop    rbp
  403731:	ret    
  403732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40373c:	nop    DWORD PTR [rax+0x0]

0000000000403740 <next_reset@@Base>:
  403740:	push   rbp
  403741:	mov    rbp,rsp
  403744:	sub    rsp,0x10
  403748:	lea    rax,[rip+0xfab9]        # 413208 <__bss_start@@Base+0xa8>
  40374f:	mov    QWORD PTR [rbp-0x8],rax
  403753:	jmp    403758 <next_reset@@Base+0x18>
  403758:	mov    rax,QWORD PTR [rbp-0x8]
  40375c:	lea    rcx,[rip+0x10bed]        # 414350 <next_fake@@Base>
  403763:	mov    rdx,rcx
  403766:	xor    esi,esi
  403768:	mov    rdi,QWORD PTR [rax]
  40376b:	add    rdi,0x1
  403772:	mov    QWORD PTR [rax],rdi
  403775:	mov    rax,QWORD PTR [rip+0xfa94]        # 413210 <__bss_start@@Base+0xb0>
  40377c:	add    rax,0x1
  403782:	mov    QWORD PTR [rip+0xfa87],rax        # 413210 <__bss_start@@Base+0xb0>
  403789:	mov    rdi,rdx
  40378c:	mov    edx,0x1c8
  403791:	mov    QWORD PTR [rbp-0x10],rcx
  403795:	call   403150 <memset@plt>
  40379a:	mov    rax,QWORD PTR [rbp-0x10]
  40379e:	mov    DWORD PTR [rax+0x19c],0x32
  4037a8:	add    rsp,0x10
  4037ac:	pop    rbp
  4037ad:	ret    
  4037ae:	xchg   ax,ax

00000000004037b0 <push_back@@Base>:
  4037b0:	push   rbp
  4037b1:	mov    rbp,rsp
  4037b4:	sub    rsp,0x60
  4037b8:	lea    rax,[rip+0xfa61]        # 413220 <__bss_start@@Base+0xc0>
  4037bf:	mov    QWORD PTR [rbp-0x18],rdi
  4037c3:	mov    QWORD PTR [rbp-0x20],rsi
  4037c7:	mov    QWORD PTR [rbp-0x28],rax
  4037cb:	mov    rax,QWORD PTR [rbp-0x28]
  4037cf:	lea    rcx,[rip+0xfa4a]        # 413220 <__bss_start@@Base+0xc0>
  4037d6:	mov    rdx,rcx
  4037d9:	add    rdx,0x8
  4037e0:	add    rcx,0x10
  4037e7:	lea    rsi,[rip+0x1081a]        # 414008 <push_back_fake@@Base>
  4037ee:	mov    rdi,QWORD PTR [rax]
  4037f1:	add    rdi,0x1
  4037f8:	mov    QWORD PTR [rax],rdi
  4037fb:	mov    rax,QWORD PTR [rbp-0x18]
  4037ff:	mov    QWORD PTR [rbp-0x8],rax
  403803:	mov    rdi,QWORD PTR [rbp-0x20]
  403807:	mov    QWORD PTR [rbp-0x10],rdi
  40380b:	mov    r8,QWORD PTR [rbp-0x8]
  40380f:	mov    QWORD PTR [rsi],r8
  403812:	mov    r8,QWORD PTR [rbp-0x10]
  403816:	mov    QWORD PTR [rsi+0x198],r8
  40381d:	cmp    DWORD PTR [rsi+0x330],0x32
  403824:	mov    QWORD PTR [rbp-0x30],rdx
  403828:	mov    QWORD PTR [rbp-0x38],rcx
  40382c:	jae    403886 <push_back@@Base+0xd6>
  403832:	mov    rax,QWORD PTR [rbp-0x30]
  403836:	lea    rcx,[rip+0xf9e3]        # 413220 <__bss_start@@Base+0xc0>
  40383d:	add    rcx,0x18
  403844:	lea    rdx,[rip+0x107bd]        # 414008 <push_back_fake@@Base>
  40384b:	mov    rsi,QWORD PTR [rax]
  40384e:	add    rsi,0x1
  403855:	mov    QWORD PTR [rax],rsi
  403858:	mov    edi,DWORD PTR [rdx+0x330]
  40385e:	mov    eax,edi
  403860:	mov    rsi,QWORD PTR [rbp-0x8]
  403864:	mov    QWORD PTR [rdx+rax*8+0x8],rsi
  403869:	mov    edi,DWORD PTR [rdx+0x330]
  40386f:	mov    eax,edi
  403871:	mov    rsi,QWORD PTR [rbp-0x10]
  403875:	mov    QWORD PTR [rdx+rax*8+0x1a0],rsi
  40387d:	mov    QWORD PTR [rbp-0x40],rcx
  403881:	jmp    4038bf <push_back@@Base+0x10f>
  403886:	mov    rax,QWORD PTR [rbp-0x38]
  40388a:	lea    rcx,[rip+0xf98f]        # 413220 <__bss_start@@Base+0xc0>
  403891:	add    rcx,0x20
  403898:	lea    rdx,[rip+0x10769]        # 414008 <push_back_fake@@Base>
  40389f:	mov    rsi,QWORD PTR [rax]
  4038a2:	add    rsi,0x1
  4038a9:	mov    QWORD PTR [rax],rsi
  4038ac:	mov    edi,DWORD PTR [rdx+0x338]
  4038b2:	add    edi,0x1
  4038b5:	mov    DWORD PTR [rdx+0x338],edi
  4038bb:	mov    QWORD PTR [rbp-0x40],rcx
  4038bf:	mov    rax,QWORD PTR [rbp-0x40]
  4038c3:	lea    rcx,[rip+0xf956]        # 413220 <__bss_start@@Base+0xc0>
  4038ca:	mov    rdx,rcx
  4038cd:	add    rdx,0x28
  4038d4:	add    rcx,0x30
  4038db:	lea    rsi,[rip+0x10c36]        # 414518 <fff@@Base>
  4038e2:	lea    rdi,[rip+0x1071f]        # 414008 <push_back_fake@@Base>
  4038e9:	mov    r8,QWORD PTR [rax]
  4038ec:	add    r8,0x1
  4038f3:	mov    QWORD PTR [rax],r8
  4038f6:	mov    r9d,DWORD PTR [rdi+0x330]
  4038fd:	add    r9d,0x1
  403901:	mov    DWORD PTR [rdi+0x330],r9d
  403908:	cmp    DWORD PTR [rsi+0x190],0x32
  40390f:	mov    QWORD PTR [rbp-0x48],rdx
  403913:	mov    QWORD PTR [rbp-0x50],rcx
  403917:	jae    40396d <push_back@@Base+0x1bd>
  40391d:	mov    rax,QWORD PTR [rbp-0x48]
  403921:	lea    rcx,[rip+0xf8f8]        # 413220 <__bss_start@@Base+0xc0>
  403928:	add    rcx,0x38
  40392f:	lea    rdx,[rip+0x10be2]        # 414518 <fff@@Base>
  403936:	lea    rsi,[rip+0xfffffffffffffe73]        # 4037b0 <push_back@@Base>
  40393d:	mov    rdi,QWORD PTR [rax]
  403940:	add    rdi,0x1
  403947:	mov    QWORD PTR [rax],rdi
  40394a:	mov    r8d,DWORD PTR [rdx+0x190]
  403951:	mov    r9d,r8d
  403954:	add    r9d,0x1
  403958:	mov    DWORD PTR [rdx+0x190],r9d
  40395f:	mov    r8d,r8d
  403962:	mov    eax,r8d
  403965:	mov    QWORD PTR [rdx+rax*8],rsi
  403969:	mov    QWORD PTR [rbp-0x50],rcx
  40396d:	mov    rax,QWORD PTR [rbp-0x50]
  403971:	lea    rcx,[rip+0xf8a8]        # 413220 <__bss_start@@Base+0xc0>
  403978:	mov    rdx,rcx
  40397b:	add    rdx,0x40
  403982:	add    rcx,0x48
  403989:	lea    rsi,[rip+0x10678]        # 414008 <push_back_fake@@Base>
  403990:	mov    rdi,QWORD PTR [rax]
  403993:	add    rdi,0x1
  40399a:	mov    QWORD PTR [rax],rdi
  40399d:	cmp    QWORD PTR [rsi+0x340],0x0
  4039a5:	mov    QWORD PTR [rbp-0x58],rdx
  4039a9:	mov    QWORD PTR [rbp-0x60],rcx
  4039ad:	je     4039ed <push_back@@Base+0x23d>
  4039b3:	mov    rax,QWORD PTR [rbp-0x58]
  4039b7:	lea    rcx,[rip+0x1064a]        # 414008 <push_back_fake@@Base>
  4039be:	mov    rdx,QWORD PTR [rax]
  4039c1:	add    rdx,0x1
  4039c8:	mov    QWORD PTR [rax],rdx
  4039cb:	mov    rax,QWORD PTR [rcx+0x340]
  4039d2:	mov    rdi,QWORD PTR [rbp-0x8]
  4039d6:	mov    rsi,QWORD PTR [rbp-0x10]
  4039da:	call   rax
  4039dc:	lea    rax,[rip+0xf83d]        # 413220 <__bss_start@@Base+0xc0>
  4039e3:	add    rax,0x50
  4039e9:	mov    QWORD PTR [rbp-0x60],rax
  4039ed:	mov    rax,QWORD PTR [rbp-0x60]
  4039f1:	mov    rcx,QWORD PTR [rax]
  4039f4:	add    rcx,0x1
  4039fb:	mov    QWORD PTR [rax],rcx
  4039fe:	mov    rax,QWORD PTR [rip+0xf873]        # 413278 <__bss_start@@Base+0x118>
  403a05:	add    rax,0x1
  403a0b:	mov    QWORD PTR [rip+0xf866],rax        # 413278 <__bss_start@@Base+0x118>
  403a12:	add    rsp,0x60
  403a16:	pop    rbp
  403a17:	ret    
  403a18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a20 <push_back_reset@@Base>:
  403a20:	push   rbp
  403a21:	mov    rbp,rsp
  403a24:	sub    rsp,0x10
  403a28:	lea    rax,[rip+0xf851]        # 413280 <__bss_start@@Base+0x120>
  403a2f:	mov    QWORD PTR [rbp-0x8],rax
  403a33:	jmp    403a38 <push_back_reset@@Base+0x18>
  403a38:	mov    rax,QWORD PTR [rbp-0x8]
  403a3c:	lea    rcx,[rip+0x105c5]        # 414008 <push_back_fake@@Base>
  403a43:	mov    rdx,rcx
  403a46:	xor    esi,esi
  403a48:	mov    rdi,QWORD PTR [rax]
  403a4b:	add    rdi,0x1
  403a52:	mov    QWORD PTR [rax],rdi
  403a55:	mov    rax,QWORD PTR [rip+0xf82c]        # 413288 <__bss_start@@Base+0x128>
  403a5c:	add    rax,0x1
  403a62:	mov    QWORD PTR [rip+0xf81f],rax        # 413288 <__bss_start@@Base+0x128>
  403a69:	mov    rdi,rdx
  403a6c:	mov    edx,0x348
  403a71:	mov    QWORD PTR [rbp-0x10],rcx
  403a75:	call   403150 <memset@plt>
  403a7a:	mov    rax,QWORD PTR [rbp-0x10]
  403a7e:	mov    DWORD PTR [rax+0x334],0x32
  403a88:	add    rsp,0x10
  403a8c:	pop    rbp
  403a8d:	ret    
  403a8e:	xchg   ax,ax

0000000000403a90 <setup@@Base>:
  403a90:	push   rbp
  403a91:	mov    rbp,rsp
  403a94:	sub    rsp,0x10
  403a98:	lea    rax,[rip+0xf7f1]        # 413290 <__bss_start@@Base+0x130>
  403a9f:	mov    QWORD PTR [rbp-0x8],rax
  403aa3:	jmp    403aa8 <setup@@Base+0x18>
  403aa8:	mov    rax,QWORD PTR [rbp-0x8]
  403aac:	mov    rcx,QWORD PTR [rax]
  403aaf:	add    rcx,0x1
  403ab6:	mov    QWORD PTR [rax],rcx
  403ab9:	mov    rax,QWORD PTR [rip+0xf7d8]        # 413298 <__bss_start@@Base+0x138>
  403ac0:	add    rax,0x1
  403ac6:	mov    QWORD PTR [rip+0xf7cb],rax        # 413298 <__bss_start@@Base+0x138>
  403acd:	call   403740 <next_reset@@Base>
  403ad2:	call   403a20 <push_back_reset@@Base>
  403ad7:	add    rsp,0x10
  403adb:	pop    rbp
  403adc:	ret    
  403add:	nop    DWORD PTR [rax]

0000000000403ae0 <no_int_as_first_stuff@@Base>:
  403ae0:	push   rbp
  403ae1:	mov    rbp,rsp
  403ae4:	sub    rsp,0x70
  403ae8:	lea    rax,[rip+0xf7b1]        # 4132a0 <__bss_start@@Base+0x140>
  403aef:	mov    QWORD PTR [rbp-0x38],rax
  403af3:	mov    rax,QWORD PTR [rbp-0x38]
  403af7:	mov    rcx,QWORD PTR [rax]
  403afa:	add    rcx,0x1
  403b01:	mov    QWORD PTR [rax],rcx
  403b04:	lea    rdi,[rbp-0x20]
  403b08:	lea    rsi,[rbp-0x18]
  403b0c:	call   409ac0 <init_grammar@@Base>
  403b11:	mov    QWORD PTR [rbp-0x28],0x0
  403b19:	mov    edi,0x4
  403b1e:	call   4031d0 <malloc@plt>
  403b23:	mov    QWORD PTR [rbp-0x30],rax
  403b27:	mov    rax,QWORD PTR [rbp-0x30]
  403b2b:	mov    rdi,rax
  403b2e:	call   4077f0 <init_token_opar@@Base>
  403b33:	lea    rax,[rip+0x10816]        # 414350 <next_fake@@Base>
  403b3a:	mov    rcx,QWORD PTR [rbp-0x30]
  403b3e:	mov    QWORD PTR [rax+0x1a8],rcx
  403b45:	lea    rdi,[rbp-0x20]
  403b49:	call   409bd0 <read_function_ast_node@@Base>
  403b4e:	lea    rcx,[rip+0xf74b]        # 4132a0 <__bss_start@@Base+0x140>
  403b55:	mov    rdx,rcx
  403b58:	add    rdx,0x8
  403b5f:	add    rcx,0x10
  403b66:	lea    rsi,[rip+0x107e3]        # 414350 <next_fake@@Base>
  403b6d:	mov    QWORD PTR [rbp-0x28],rax
  403b71:	cmp    DWORD PTR [rsi+0x198],0x1
  403b78:	mov    QWORD PTR [rbp-0x40],rdx
  403b7c:	mov    QWORD PTR [rbp-0x48],rcx
  403b80:	jne    403bae <no_int_as_first_stuff@@Base+0xce>
  403b86:	mov    rax,QWORD PTR [rbp-0x40]
  403b8a:	lea    rcx,[rip+0xf70f]        # 4132a0 <__bss_start@@Base+0x140>
  403b91:	add    rcx,0x18
  403b98:	mov    rdx,QWORD PTR [rax]
  403b9b:	add    rdx,0x1
  403ba2:	mov    QWORD PTR [rax],rdx
  403ba5:	mov    QWORD PTR [rbp-0x50],rcx
  403ba9:	jmp    403bde <no_int_as_first_stuff@@Base+0xfe>
  403bae:	mov    rax,QWORD PTR [rbp-0x48]
  403bb2:	mov    rcx,QWORD PTR [rax]
  403bb5:	add    rcx,0x1
  403bbc:	mov    QWORD PTR [rax],rcx
  403bbf:	lea    rdi,[rip+0xa43e]        # 40e004 <_IO_stdin_used@@Base+0x4>
  403bc6:	lea    rsi,[rip+0xa451]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  403bcd:	mov    edx,0x29
  403bd2:	lea    rcx,[rip+0xa4a3]        # 40e07c <_IO_stdin_used@@Base+0x7c>
  403bd9:	call   403140 <__assert_fail@plt>
  403bde:	mov    rax,QWORD PTR [rbp-0x50]
  403be2:	lea    rcx,[rip+0xf6b7]        # 4132a0 <__bss_start@@Base+0x140>
  403be9:	mov    rdx,rcx
  403bec:	add    rdx,0x20
  403bf3:	add    rcx,0x28
  403bfa:	mov    rsi,QWORD PTR [rax]
  403bfd:	add    rsi,0x1
  403c04:	mov    QWORD PTR [rax],rsi
  403c07:	cmp    QWORD PTR [rbp-0x28],0x0
  403c0c:	mov    QWORD PTR [rbp-0x58],rdx
  403c10:	mov    QWORD PTR [rbp-0x60],rcx
  403c14:	jne    403c42 <no_int_as_first_stuff@@Base+0x162>
  403c1a:	mov    rax,QWORD PTR [rbp-0x58]
  403c1e:	lea    rcx,[rip+0xf67b]        # 4132a0 <__bss_start@@Base+0x140>
  403c25:	add    rcx,0x30
  403c2c:	mov    rdx,QWORD PTR [rax]
  403c2f:	add    rdx,0x1
  403c36:	mov    QWORD PTR [rax],rdx
  403c39:	mov    QWORD PTR [rbp-0x68],rcx
  403c3d:	jmp    403c72 <no_int_as_first_stuff@@Base+0x192>
  403c42:	mov    rax,QWORD PTR [rbp-0x60]
  403c46:	mov    rcx,QWORD PTR [rax]
  403c49:	add    rcx,0x1
  403c50:	mov    QWORD PTR [rax],rcx
  403c53:	lea    rdi,[rip+0xa43f]        # 40e099 <_IO_stdin_used@@Base+0x99>
  403c5a:	lea    rsi,[rip+0xa3bd]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  403c61:	mov    edx,0x2a
  403c66:	lea    rcx,[rip+0xa40f]        # 40e07c <_IO_stdin_used@@Base+0x7c>
  403c6d:	call   403140 <__assert_fail@plt>
  403c72:	mov    rax,QWORD PTR [rbp-0x68]
  403c76:	mov    rcx,QWORD PTR [rax]
  403c79:	add    rcx,0x1
  403c80:	mov    QWORD PTR [rax],rcx
  403c83:	mov    rax,QWORD PTR [rip+0xf64e]        # 4132d8 <__bss_start@@Base+0x178>
  403c8a:	add    rax,0x1
  403c90:	mov    QWORD PTR [rip+0xf641],rax        # 4132d8 <__bss_start@@Base+0x178>
  403c97:	add    rsp,0x70
  403c9b:	pop    rbp
  403c9c:	ret    
  403c9d:	nop    DWORD PTR [rax]

0000000000403ca0 <int_but_not_followed_by_function@@Base>:
  403ca0:	push   rbp
  403ca1:	mov    rbp,rsp
  403ca4:	sub    rsp,0x70
  403ca8:	lea    rax,[rip+0xf631]        # 4132e0 <__bss_start@@Base+0x180>
  403caf:	mov    QWORD PTR [rbp-0x38],rax
  403cb3:	mov    rax,QWORD PTR [rbp-0x38]
  403cb7:	mov    rcx,QWORD PTR [rax]
  403cba:	add    rcx,0x1
  403cc1:	mov    QWORD PTR [rax],rcx
  403cc4:	mov    QWORD PTR [rbp-0x30],0x0
  403ccc:	lea    rdi,[rbp-0x20]
  403cd0:	lea    rsi,[rbp-0x18]
  403cd4:	call   409ac0 <init_grammar@@Base>
  403cd9:	mov    edi,0x10
  403cde:	call   4031d0 <malloc@plt>
  403ce3:	mov    QWORD PTR [rbp-0x28],rax
  403ce7:	mov    edi,0x4
  403cec:	call   4031d0 <malloc@plt>
  403cf1:	mov    rcx,QWORD PTR [rbp-0x28]
  403cf5:	mov    QWORD PTR [rcx],rax
  403cf8:	mov    rax,QWORD PTR [rbp-0x28]
  403cfc:	mov    rax,QWORD PTR [rax]
  403cff:	mov    rdi,rax
  403d02:	call   4076d0 <init_token_int_type@@Base>
  403d07:	mov    edi,0x4
  403d0c:	call   4031d0 <malloc@plt>
  403d11:	mov    rcx,QWORD PTR [rbp-0x28]
  403d15:	mov    QWORD PTR [rcx+0x8],rax
  403d19:	mov    rax,QWORD PTR [rbp-0x28]
  403d1d:	mov    rax,QWORD PTR [rax+0x8]
  403d21:	mov    rdi,rax
  403d24:	call   4077f0 <init_token_opar@@Base>
  403d29:	lea    rax,[rip+0x10620]        # 414350 <next_fake@@Base>
  403d30:	mov    rcx,QWORD PTR [rbp-0x28]
  403d34:	mov    QWORD PTR [rax+0x1b8],rcx
  403d3b:	mov    DWORD PTR [rax+0x1b0],0x2
  403d45:	lea    rdi,[rbp-0x20]
  403d49:	call   409bd0 <read_function_ast_node@@Base>
  403d4e:	lea    rcx,[rip+0xf58b]        # 4132e0 <__bss_start@@Base+0x180>
  403d55:	mov    rdx,rcx
  403d58:	add    rdx,0x8
  403d5f:	add    rcx,0x10
  403d66:	lea    rsi,[rip+0x105e3]        # 414350 <next_fake@@Base>
  403d6d:	mov    QWORD PTR [rbp-0x30],rax
  403d71:	cmp    DWORD PTR [rsi+0x198],0x2
  403d78:	mov    QWORD PTR [rbp-0x40],rdx
  403d7c:	mov    QWORD PTR [rbp-0x48],rcx
  403d80:	jne    403dae <int_but_not_followed_by_function@@Base+0x10e>
  403d86:	mov    rax,QWORD PTR [rbp-0x40]
  403d8a:	lea    rcx,[rip+0xf54f]        # 4132e0 <__bss_start@@Base+0x180>
  403d91:	add    rcx,0x18
  403d98:	mov    rdx,QWORD PTR [rax]
  403d9b:	add    rdx,0x1
  403da2:	mov    QWORD PTR [rax],rdx
  403da5:	mov    QWORD PTR [rbp-0x50],rcx
  403da9:	jmp    403dde <int_but_not_followed_by_function@@Base+0x13e>
  403dae:	mov    rax,QWORD PTR [rbp-0x48]
  403db2:	mov    rcx,QWORD PTR [rax]
  403db5:	add    rcx,0x1
  403dbc:	mov    QWORD PTR [rax],rcx
  403dbf:	lea    rdi,[rip+0xa2df]        # 40e0a5 <_IO_stdin_used@@Base+0xa5>
  403dc6:	lea    rsi,[rip+0xa251]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  403dcd:	mov    edx,0x43
  403dd2:	lea    rcx,[rip+0xa2e6]        # 40e0bf <_IO_stdin_used@@Base+0xbf>
  403dd9:	call   403140 <__assert_fail@plt>
  403dde:	mov    rax,QWORD PTR [rbp-0x50]
  403de2:	lea    rcx,[rip+0xf4f7]        # 4132e0 <__bss_start@@Base+0x180>
  403de9:	mov    rdx,rcx
  403dec:	add    rdx,0x20
  403df3:	add    rcx,0x28
  403dfa:	mov    rsi,QWORD PTR [rax]
  403dfd:	add    rsi,0x1
  403e04:	mov    QWORD PTR [rax],rsi
  403e07:	cmp    QWORD PTR [rbp-0x30],0x0
  403e0c:	mov    QWORD PTR [rbp-0x58],rdx
  403e10:	mov    QWORD PTR [rbp-0x60],rcx
  403e14:	jne    403e42 <int_but_not_followed_by_function@@Base+0x1a2>
  403e1a:	mov    rax,QWORD PTR [rbp-0x58]
  403e1e:	lea    rcx,[rip+0xf4bb]        # 4132e0 <__bss_start@@Base+0x180>
  403e25:	add    rcx,0x30
  403e2c:	mov    rdx,QWORD PTR [rax]
  403e2f:	add    rdx,0x1
  403e36:	mov    QWORD PTR [rax],rdx
  403e39:	mov    QWORD PTR [rbp-0x68],rcx
  403e3d:	jmp    403e72 <int_but_not_followed_by_function@@Base+0x1d2>
  403e42:	mov    rax,QWORD PTR [rbp-0x60]
  403e46:	mov    rcx,QWORD PTR [rax]
  403e49:	add    rcx,0x1
  403e50:	mov    QWORD PTR [rax],rcx
  403e53:	lea    rdi,[rip+0xa23f]        # 40e099 <_IO_stdin_used@@Base+0x99>
  403e5a:	lea    rsi,[rip+0xa1bd]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  403e61:	mov    edx,0x44
  403e66:	lea    rcx,[rip+0xa252]        # 40e0bf <_IO_stdin_used@@Base+0xbf>
  403e6d:	call   403140 <__assert_fail@plt>
  403e72:	mov    rax,QWORD PTR [rbp-0x68]
  403e76:	mov    rcx,QWORD PTR [rax]
  403e79:	add    rcx,0x1
  403e80:	mov    QWORD PTR [rax],rcx
  403e83:	mov    rax,QWORD PTR [rip+0xf48e]        # 413318 <__bss_start@@Base+0x1b8>
  403e8a:	add    rax,0x1
  403e90:	mov    QWORD PTR [rip+0xf481],rax        # 413318 <__bss_start@@Base+0x1b8>
  403e97:	add    rsp,0x70
  403e9b:	pop    rbp
  403e9c:	ret    
  403e9d:	nop    DWORD PTR [rax]

0000000000403ea0 <boolean_expression_is_read_properly@@Base>:
  403ea0:	push   rbp
  403ea1:	mov    rbp,rsp
  403ea4:	sub    rsp,0x90
  403eab:	lea    rax,[rip+0xf46e]        # 413320 <__bss_start@@Base+0x1c0>
  403eb2:	mov    QWORD PTR [rbp-0x48],rax
  403eb6:	mov    rax,QWORD PTR [rbp-0x48]
  403eba:	mov    rcx,QWORD PTR [rax]
  403ebd:	add    rcx,0x1
  403ec4:	mov    QWORD PTR [rax],rcx
  403ec7:	mov    QWORD PTR [rbp-0x30],0x0
  403ecf:	mov    QWORD PTR [rbp-0x38],0x0
  403ed7:	mov    edi,0x3
  403edc:	call   4031d0 <malloc@plt>
  403ee1:	mov    QWORD PTR [rbp-0x40],rax
  403ee5:	mov    rax,QWORD PTR [rbp-0x40]
  403ee9:	mov    BYTE PTR [rax],0x21
  403eec:	mov    rax,QWORD PTR [rbp-0x40]
  403ef0:	mov    BYTE PTR [rax+0x1],0x3d
  403ef4:	mov    rax,QWORD PTR [rbp-0x40]
  403ef8:	mov    BYTE PTR [rax+0x2],0x0
  403efc:	lea    rdi,[rbp-0x20]
  403f00:	lea    rsi,[rbp-0x18]
  403f04:	call   409ac0 <init_grammar@@Base>
  403f09:	mov    edi,0x28
  403f0e:	call   4031d0 <malloc@plt>
  403f13:	mov    QWORD PTR [rbp-0x28],rax
  403f17:	mov    edi,0x8
  403f1c:	call   4031d0 <malloc@plt>
  403f21:	mov    rcx,QWORD PTR [rbp-0x28]
  403f25:	mov    QWORD PTR [rcx],rax
  403f28:	mov    rax,QWORD PTR [rbp-0x28]
  403f2c:	mov    rax,QWORD PTR [rax]
  403f2f:	mov    rdi,rax
  403f32:	mov    esi,0x2
  403f37:	call   407720 <init_token_int_value@@Base>
  403f3c:	mov    edi,0x8
  403f41:	call   4031d0 <malloc@plt>
  403f46:	mov    rcx,QWORD PTR [rbp-0x28]
  403f4a:	mov    QWORD PTR [rcx+0x8],rax
  403f4e:	mov    rax,QWORD PTR [rbp-0x28]
  403f52:	mov    rax,QWORD PTR [rax+0x8]
  403f56:	mov    rdi,rax
  403f59:	mov    esi,0x2
  403f5e:	call   407720 <init_token_int_value@@Base>
  403f63:	mov    edi,0x10
  403f68:	call   4031d0 <malloc@plt>
  403f6d:	mov    rcx,QWORD PTR [rbp-0x28]
  403f71:	mov    QWORD PTR [rcx+0x10],rax
  403f75:	mov    rax,QWORD PTR [rbp-0x28]
  403f79:	mov    rax,QWORD PTR [rax+0x10]
  403f7d:	mov    rsi,QWORD PTR [rbp-0x40]
  403f81:	mov    rdi,rax
  403f84:	call   407ac0 <init_token_boolean_op@@Base>
  403f89:	mov    edi,0x8
  403f8e:	call   4031d0 <malloc@plt>
  403f93:	mov    rcx,QWORD PTR [rbp-0x28]
  403f97:	mov    QWORD PTR [rcx+0x18],rax
  403f9b:	mov    rax,QWORD PTR [rbp-0x28]
  403f9f:	mov    rax,QWORD PTR [rax+0x18]
  403fa3:	mov    rdi,rax
  403fa6:	mov    esi,0x1
  403fab:	call   407720 <init_token_int_value@@Base>
  403fb0:	mov    edi,0x4
  403fb5:	call   4031d0 <malloc@plt>
  403fba:	mov    rcx,QWORD PTR [rbp-0x28]
  403fbe:	mov    QWORD PTR [rcx+0x20],rax
  403fc2:	mov    rax,QWORD PTR [rbp-0x28]
  403fc6:	mov    rax,QWORD PTR [rax+0x20]
  403fca:	mov    rdi,rax
  403fcd:	call   407840 <init_token_cpar@@Base>
  403fd2:	lea    rax,[rip+0x10377]        # 414350 <next_fake@@Base>
  403fd9:	mov    rcx,QWORD PTR [rbp-0x28]
  403fdd:	mov    QWORD PTR [rax+0x1b8],rcx
  403fe4:	mov    DWORD PTR [rax+0x1b0],0x5
  403fee:	lea    rdi,[rbp-0x20]
  403ff2:	call   40a700 <read_boolean_expression@@Base>
  403ff7:	lea    rcx,[rip+0xf322]        # 413320 <__bss_start@@Base+0x1c0>
  403ffe:	mov    rdx,rcx
  404001:	add    rdx,0x8
  404008:	add    rcx,0x10
  40400f:	lea    rdi,[rip+0x1033a]        # 414350 <next_fake@@Base>
  404016:	mov    QWORD PTR [rbp-0x30],rax
  40401a:	cmp    DWORD PTR [rdi+0x198],0x5
  404021:	mov    QWORD PTR [rbp-0x50],rdx
  404025:	mov    QWORD PTR [rbp-0x58],rcx
  404029:	jne    404057 <boolean_expression_is_read_properly@@Base+0x1b7>
  40402f:	mov    rax,QWORD PTR [rbp-0x50]
  404033:	lea    rcx,[rip+0xf2e6]        # 413320 <__bss_start@@Base+0x1c0>
  40403a:	add    rcx,0x18
  404041:	mov    rdx,QWORD PTR [rax]
  404044:	add    rdx,0x1
  40404b:	mov    QWORD PTR [rax],rdx
  40404e:	mov    QWORD PTR [rbp-0x60],rcx
  404052:	jmp    404087 <boolean_expression_is_read_properly@@Base+0x1e7>
  404057:	mov    rax,QWORD PTR [rbp-0x58]
  40405b:	mov    rcx,QWORD PTR [rax]
  40405e:	add    rcx,0x1
  404065:	mov    QWORD PTR [rax],rcx
  404068:	lea    rdi,[rip+0xa078]        # 40e0e7 <_IO_stdin_used@@Base+0xe7>
  40406f:	lea    rsi,[rip+0x9fa8]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404076:	mov    edx,0x69
  40407b:	lea    rcx,[rip+0xa07f]        # 40e101 <_IO_stdin_used@@Base+0x101>
  404082:	call   403140 <__assert_fail@plt>
  404087:	mov    rax,QWORD PTR [rbp-0x60]
  40408b:	lea    rcx,[rip+0xf28e]        # 413320 <__bss_start@@Base+0x1c0>
  404092:	mov    rdx,rcx
  404095:	add    rdx,0x20
  40409c:	add    rcx,0x28
  4040a3:	lea    rsi,[rip+0xff5e]        # 414008 <push_back_fake@@Base>
  4040aa:	mov    rdi,QWORD PTR [rax]
  4040ad:	add    rdi,0x1
  4040b4:	mov    QWORD PTR [rax],rdi
  4040b7:	cmp    DWORD PTR [rsi+0x330],0x1
  4040be:	mov    QWORD PTR [rbp-0x68],rdx
  4040c2:	mov    QWORD PTR [rbp-0x70],rcx
  4040c6:	jne    4040f4 <boolean_expression_is_read_properly@@Base+0x254>
  4040cc:	mov    rax,QWORD PTR [rbp-0x68]
  4040d0:	lea    rcx,[rip+0xf249]        # 413320 <__bss_start@@Base+0x1c0>
  4040d7:	add    rcx,0x30
  4040de:	mov    rdx,QWORD PTR [rax]
  4040e1:	add    rdx,0x1
  4040e8:	mov    QWORD PTR [rax],rdx
  4040eb:	mov    QWORD PTR [rbp-0x78],rcx
  4040ef:	jmp    404124 <boolean_expression_is_read_properly@@Base+0x284>
  4040f4:	mov    rax,QWORD PTR [rbp-0x70]
  4040f8:	mov    rcx,QWORD PTR [rax]
  4040fb:	add    rcx,0x1
  404102:	mov    QWORD PTR [rax],rcx
  404105:	lea    rdi,[rip+0xa020]        # 40e12c <_IO_stdin_used@@Base+0x12c>
  40410c:	lea    rsi,[rip+0x9f0b]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404113:	mov    edx,0x6a
  404118:	lea    rcx,[rip+0x9fe2]        # 40e101 <_IO_stdin_used@@Base+0x101>
  40411f:	call   403140 <__assert_fail@plt>
  404124:	mov    rax,QWORD PTR [rbp-0x78]
  404128:	lea    rcx,[rip+0xf1f1]        # 413320 <__bss_start@@Base+0x1c0>
  40412f:	mov    rdx,rcx
  404132:	add    rdx,0x38
  404139:	add    rcx,0x40
  404140:	mov    rsi,QWORD PTR [rax]
  404143:	add    rsi,0x1
  40414a:	mov    QWORD PTR [rax],rsi
  40414d:	mov    rax,QWORD PTR [rbp-0x30]
  404151:	cmp    DWORD PTR [rax],0x5
  404154:	mov    QWORD PTR [rbp-0x80],rdx
  404158:	mov    QWORD PTR [rbp-0x88],rcx
  40415f:	jne    404190 <boolean_expression_is_read_properly@@Base+0x2f0>
  404165:	mov    rax,QWORD PTR [rbp-0x80]
  404169:	lea    rcx,[rip+0xf1b0]        # 413320 <__bss_start@@Base+0x1c0>
  404170:	add    rcx,0x48
  404177:	mov    rdx,QWORD PTR [rax]
  40417a:	add    rdx,0x1
  404181:	mov    QWORD PTR [rax],rdx
  404184:	mov    QWORD PTR [rbp-0x90],rcx
  40418b:	jmp    4041c3 <boolean_expression_is_read_properly@@Base+0x323>
  404190:	mov    rax,QWORD PTR [rbp-0x88]
  404197:	mov    rcx,QWORD PTR [rax]
  40419a:	add    rcx,0x1
  4041a1:	mov    QWORD PTR [rax],rcx
  4041a4:	lea    rdi,[rip+0x9fa0]        # 40e14b <_IO_stdin_used@@Base+0x14b>
  4041ab:	lea    rsi,[rip+0x9e6c]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4041b2:	mov    edx,0x6b
  4041b7:	lea    rcx,[rip+0x9f43]        # 40e101 <_IO_stdin_used@@Base+0x101>
  4041be:	call   403140 <__assert_fail@plt>
  4041c3:	mov    rax,QWORD PTR [rbp-0x90]
  4041ca:	mov    rcx,QWORD PTR [rax]
  4041cd:	add    rcx,0x1
  4041d4:	mov    QWORD PTR [rax],rcx
  4041d7:	mov    rax,QWORD PTR [rip+0xf192]        # 413370 <__bss_start@@Base+0x210>
  4041de:	add    rax,0x1
  4041e4:	mov    QWORD PTR [rip+0xf185],rax        # 413370 <__bss_start@@Base+0x210>
  4041eb:	add    rsp,0x90
  4041f2:	pop    rbp
  4041f3:	ret    
  4041f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041fe:	xchg   ax,ax

0000000000404200 <boolean_expression_complex@@Base>:
  404200:	push   rbp
  404201:	mov    rbp,rsp
  404204:	sub    rsp,0x90
  40420b:	lea    rax,[rip+0xf16e]        # 413380 <__bss_start@@Base+0x220>
  404212:	mov    QWORD PTR [rbp-0x58],rax
  404216:	mov    rax,QWORD PTR [rbp-0x58]
  40421a:	mov    rcx,QWORD PTR [rax]
  40421d:	add    rcx,0x1
  404224:	mov    QWORD PTR [rax],rcx
  404227:	mov    QWORD PTR [rbp-0x30],0x0
  40422f:	mov    QWORD PTR [rbp-0x38],0x0
  404237:	mov    edi,0x3
  40423c:	call   4031d0 <malloc@plt>
  404241:	mov    QWORD PTR [rbp-0x40],rax
  404245:	mov    edi,0x3
  40424a:	call   4031d0 <malloc@plt>
  40424f:	mov    QWORD PTR [rbp-0x48],rax
  404253:	mov    edi,0x3
  404258:	call   4031d0 <malloc@plt>
  40425d:	mov    QWORD PTR [rbp-0x50],rax
  404261:	mov    rax,QWORD PTR [rbp-0x40]
  404265:	mov    BYTE PTR [rax],0x3c
  404268:	mov    rax,QWORD PTR [rbp-0x40]
  40426c:	mov    BYTE PTR [rax+0x1],0x3d
  404270:	mov    rax,QWORD PTR [rbp-0x40]
  404274:	mov    BYTE PTR [rax+0x2],0x0
  404278:	mov    rax,QWORD PTR [rbp-0x48]
  40427c:	mov    BYTE PTR [rax],0x26
  40427f:	mov    rax,QWORD PTR [rbp-0x48]
  404283:	mov    BYTE PTR [rax+0x1],0x26
  404287:	mov    rax,QWORD PTR [rbp-0x48]
  40428b:	mov    BYTE PTR [rax+0x2],0x0
  40428f:	mov    rax,QWORD PTR [rbp-0x50]
  404293:	mov    BYTE PTR [rax],0x3d
  404296:	mov    rax,QWORD PTR [rbp-0x50]
  40429a:	mov    BYTE PTR [rax+0x1],0x3d
  40429e:	mov    rax,QWORD PTR [rbp-0x50]
  4042a2:	mov    BYTE PTR [rax+0x2],0x0
  4042a6:	lea    rdi,[rbp-0x20]
  4042aa:	lea    rsi,[rbp-0x18]
  4042ae:	call   409ac0 <init_grammar@@Base>
  4042b3:	mov    edi,0x50
  4042b8:	call   4031d0 <malloc@plt>
  4042bd:	mov    QWORD PTR [rbp-0x28],rax
  4042c1:	mov    edi,0x8
  4042c6:	call   4031d0 <malloc@plt>
  4042cb:	mov    rcx,QWORD PTR [rbp-0x28]
  4042cf:	mov    QWORD PTR [rcx],rax
  4042d2:	mov    rax,QWORD PTR [rbp-0x28]
  4042d6:	mov    rax,QWORD PTR [rax]
  4042d9:	mov    rdi,rax
  4042dc:	mov    esi,0x2
  4042e1:	call   407720 <init_token_int_value@@Base>
  4042e6:	mov    edi,0x8
  4042eb:	call   4031d0 <malloc@plt>
  4042f0:	mov    rcx,QWORD PTR [rbp-0x28]
  4042f4:	mov    QWORD PTR [rcx+0x8],rax
  4042f8:	mov    rax,QWORD PTR [rbp-0x28]
  4042fc:	mov    rax,QWORD PTR [rax+0x8]
  404300:	mov    rdi,rax
  404303:	mov    esi,0x2
  404308:	call   407720 <init_token_int_value@@Base>
  40430d:	mov    edi,0x10
  404312:	call   4031d0 <malloc@plt>
  404317:	mov    rcx,QWORD PTR [rbp-0x28]
  40431b:	mov    QWORD PTR [rcx+0x10],rax
  40431f:	mov    rax,QWORD PTR [rbp-0x28]
  404323:	mov    rax,QWORD PTR [rax+0x10]
  404327:	mov    rsi,QWORD PTR [rbp-0x40]
  40432b:	mov    rdi,rax
  40432e:	call   407ac0 <init_token_boolean_op@@Base>
  404333:	mov    edi,0x8
  404338:	call   4031d0 <malloc@plt>
  40433d:	mov    rcx,QWORD PTR [rbp-0x28]
  404341:	mov    QWORD PTR [rcx+0x18],rax
  404345:	mov    rax,QWORD PTR [rbp-0x28]
  404349:	mov    rax,QWORD PTR [rax+0x18]
  40434d:	mov    rdi,rax
  404350:	mov    esi,0x1
  404355:	call   407720 <init_token_int_value@@Base>
  40435a:	mov    edi,0x10
  40435f:	call   4031d0 <malloc@plt>
  404364:	mov    rcx,QWORD PTR [rbp-0x28]
  404368:	mov    QWORD PTR [rcx+0x20],rax
  40436c:	mov    rax,QWORD PTR [rbp-0x28]
  404370:	mov    rax,QWORD PTR [rax+0x20]
  404374:	mov    rsi,QWORD PTR [rbp-0x48]
  404378:	mov    rdi,rax
  40437b:	call   407ac0 <init_token_boolean_op@@Base>
  404380:	mov    edi,0x8
  404385:	call   4031d0 <malloc@plt>
  40438a:	mov    rcx,QWORD PTR [rbp-0x28]
  40438e:	mov    QWORD PTR [rcx+0x28],rax
  404392:	mov    rax,QWORD PTR [rbp-0x28]
  404396:	mov    rax,QWORD PTR [rax+0x28]
  40439a:	mov    rdi,rax
  40439d:	mov    esi,0x4
  4043a2:	call   407720 <init_token_int_value@@Base>
  4043a7:	mov    edi,0x8
  4043ac:	call   4031d0 <malloc@plt>
  4043b1:	mov    rcx,QWORD PTR [rbp-0x28]
  4043b5:	mov    QWORD PTR [rcx+0x30],rax
  4043b9:	mov    rax,QWORD PTR [rbp-0x28]
  4043bd:	mov    rax,QWORD PTR [rax+0x30]
  4043c1:	mov    rdi,rax
  4043c4:	mov    esi,0x4
  4043c9:	call   407720 <init_token_int_value@@Base>
  4043ce:	mov    edi,0x10
  4043d3:	call   4031d0 <malloc@plt>
  4043d8:	mov    rcx,QWORD PTR [rbp-0x28]
  4043dc:	mov    QWORD PTR [rcx+0x38],rax
  4043e0:	mov    rax,QWORD PTR [rbp-0x28]
  4043e4:	mov    rax,QWORD PTR [rax+0x38]
  4043e8:	mov    rsi,QWORD PTR [rbp-0x50]
  4043ec:	mov    rdi,rax
  4043ef:	call   407ac0 <init_token_boolean_op@@Base>
  4043f4:	mov    edi,0x8
  4043f9:	call   4031d0 <malloc@plt>
  4043fe:	mov    rcx,QWORD PTR [rbp-0x28]
  404402:	mov    QWORD PTR [rcx+0x40],rax
  404406:	mov    rax,QWORD PTR [rbp-0x28]
  40440a:	mov    rax,QWORD PTR [rax+0x40]
  40440e:	mov    rdi,rax
  404411:	mov    esi,0x4
  404416:	call   407720 <init_token_int_value@@Base>
  40441b:	mov    edi,0x4
  404420:	call   4031d0 <malloc@plt>
  404425:	mov    rcx,QWORD PTR [rbp-0x28]
  404429:	mov    QWORD PTR [rcx+0x48],rax
  40442d:	mov    rax,QWORD PTR [rbp-0x28]
  404431:	mov    rax,QWORD PTR [rax+0x48]
  404435:	mov    rdi,rax
  404438:	call   407840 <init_token_cpar@@Base>
  40443d:	lea    rax,[rip+0xff0c]        # 414350 <next_fake@@Base>
  404444:	mov    rcx,QWORD PTR [rbp-0x28]
  404448:	mov    QWORD PTR [rax+0x1b8],rcx
  40444f:	mov    DWORD PTR [rax+0x1b0],0xa
  404459:	lea    rdi,[rbp-0x20]
  40445d:	call   40a700 <read_boolean_expression@@Base>
  404462:	lea    rcx,[rip+0xef17]        # 413380 <__bss_start@@Base+0x220>
  404469:	mov    rdx,rcx
  40446c:	add    rdx,0x8
  404473:	add    rcx,0x10
  40447a:	lea    rdi,[rip+0xfecf]        # 414350 <next_fake@@Base>
  404481:	mov    QWORD PTR [rbp-0x30],rax
  404485:	cmp    DWORD PTR [rdi+0x198],0xa
  40448c:	mov    QWORD PTR [rbp-0x60],rdx
  404490:	mov    QWORD PTR [rbp-0x68],rcx
  404494:	jne    4044c2 <boolean_expression_complex@@Base+0x2c2>
  40449a:	mov    rax,QWORD PTR [rbp-0x60]
  40449e:	lea    rcx,[rip+0xeedb]        # 413380 <__bss_start@@Base+0x220>
  4044a5:	add    rcx,0x18
  4044ac:	mov    rdx,QWORD PTR [rax]
  4044af:	add    rdx,0x1
  4044b6:	mov    QWORD PTR [rax],rdx
  4044b9:	mov    QWORD PTR [rbp-0x70],rcx
  4044bd:	jmp    4044f2 <boolean_expression_complex@@Base+0x2f2>
  4044c2:	mov    rax,QWORD PTR [rbp-0x68]
  4044c6:	mov    rcx,QWORD PTR [rax]
  4044c9:	add    rcx,0x1
  4044d0:	mov    QWORD PTR [rax],rcx
  4044d3:	lea    rdi,[rip+0x9c91]        # 40e16b <_IO_stdin_used@@Base+0x16b>
  4044da:	lea    rsi,[rip+0x9b3d]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4044e1:	mov    edx,0xa6
  4044e6:	lea    rcx,[rip+0x9c99]        # 40e186 <_IO_stdin_used@@Base+0x186>
  4044ed:	call   403140 <__assert_fail@plt>
  4044f2:	mov    rax,QWORD PTR [rbp-0x70]
  4044f6:	lea    rcx,[rip+0xee83]        # 413380 <__bss_start@@Base+0x220>
  4044fd:	mov    rdx,rcx
  404500:	add    rdx,0x20
  404507:	add    rcx,0x28
  40450e:	mov    rsi,QWORD PTR [rax]
  404511:	add    rsi,0x1
  404518:	mov    QWORD PTR [rax],rsi
  40451b:	mov    rax,QWORD PTR [rbp-0x30]
  40451f:	cmp    DWORD PTR [rax],0x5
  404522:	mov    QWORD PTR [rbp-0x78],rdx
  404526:	mov    QWORD PTR [rbp-0x80],rcx
  40452a:	jne    40455b <boolean_expression_complex@@Base+0x35b>
  404530:	mov    rax,QWORD PTR [rbp-0x78]
  404534:	lea    rcx,[rip+0xee45]        # 413380 <__bss_start@@Base+0x220>
  40453b:	add    rcx,0x30
  404542:	mov    rdx,QWORD PTR [rax]
  404545:	add    rdx,0x1
  40454c:	mov    QWORD PTR [rax],rdx
  40454f:	mov    QWORD PTR [rbp-0x88],rcx
  404556:	jmp    40458b <boolean_expression_complex@@Base+0x38b>
  40455b:	mov    rax,QWORD PTR [rbp-0x80]
  40455f:	mov    rcx,QWORD PTR [rax]
  404562:	add    rcx,0x1
  404569:	mov    QWORD PTR [rax],rcx
  40456c:	lea    rdi,[rip+0x9bd8]        # 40e14b <_IO_stdin_used@@Base+0x14b>
  404573:	lea    rsi,[rip+0x9aa4]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  40457a:	mov    edx,0xa7
  40457f:	lea    rcx,[rip+0x9c00]        # 40e186 <_IO_stdin_used@@Base+0x186>
  404586:	call   403140 <__assert_fail@plt>
  40458b:	mov    rax,QWORD PTR [rbp-0x88]
  404592:	mov    rcx,QWORD PTR [rax]
  404595:	add    rcx,0x1
  40459c:	mov    QWORD PTR [rax],rcx
  40459f:	mov    rax,QWORD PTR [rip+0xee12]        # 4133b8 <__bss_start@@Base+0x258>
  4045a6:	add    rax,0x1
  4045ac:	mov    QWORD PTR [rip+0xee05],rax        # 4133b8 <__bss_start@@Base+0x258>
  4045b3:	add    rsp,0x90
  4045ba:	pop    rbp
  4045bb:	ret    
  4045bc:	nop    DWORD PTR [rax+0x0]

00000000004045c0 <boolean_binary_operator_is_read_properly@@Base>:
  4045c0:	push   rbp
  4045c1:	mov    rbp,rsp
  4045c4:	sub    rsp,0xc0
  4045cb:	lea    rax,[rip+0xedee]        # 4133c0 <__bss_start@@Base+0x260>
  4045d2:	mov    QWORD PTR [rbp-0x48],rax
  4045d6:	mov    rax,QWORD PTR [rbp-0x48]
  4045da:	mov    rcx,QWORD PTR [rax]
  4045dd:	add    rcx,0x1
  4045e4:	mov    QWORD PTR [rax],rcx
  4045e7:	mov    QWORD PTR [rbp-0x30],0x0
  4045ef:	mov    QWORD PTR [rbp-0x38],0x0
  4045f7:	mov    edi,0x3
  4045fc:	call   4031d0 <malloc@plt>
  404601:	mov    QWORD PTR [rbp-0x40],rax
  404605:	mov    rax,QWORD PTR [rbp-0x40]
  404609:	mov    BYTE PTR [rax],0x21
  40460c:	mov    rax,QWORD PTR [rbp-0x40]
  404610:	mov    BYTE PTR [rax+0x1],0x3d
  404614:	mov    rax,QWORD PTR [rbp-0x40]
  404618:	mov    BYTE PTR [rax+0x2],0x0
  40461c:	lea    rdi,[rbp-0x20]
  404620:	lea    rsi,[rbp-0x18]
  404624:	call   409ac0 <init_grammar@@Base>
  404629:	mov    edi,0x18
  40462e:	call   4031d0 <malloc@plt>
  404633:	mov    QWORD PTR [rbp-0x28],rax
  404637:	mov    edi,0x8
  40463c:	call   4031d0 <malloc@plt>
  404641:	mov    rcx,QWORD PTR [rbp-0x28]
  404645:	mov    QWORD PTR [rcx],rax
  404648:	mov    rax,QWORD PTR [rbp-0x28]
  40464c:	mov    rax,QWORD PTR [rax]
  40464f:	mov    rdi,rax
  404652:	mov    esi,0x2
  404657:	call   407720 <init_token_int_value@@Base>
  40465c:	mov    edi,0x10
  404661:	call   4031d0 <malloc@plt>
  404666:	mov    rcx,QWORD PTR [rbp-0x28]
  40466a:	mov    QWORD PTR [rcx+0x8],rax
  40466e:	mov    rax,QWORD PTR [rbp-0x28]
  404672:	mov    rax,QWORD PTR [rax+0x8]
  404676:	mov    rsi,QWORD PTR [rbp-0x40]
  40467a:	mov    rdi,rax
  40467d:	call   407ac0 <init_token_boolean_op@@Base>
  404682:	mov    edi,0x8
  404687:	call   4031d0 <malloc@plt>
  40468c:	mov    rcx,QWORD PTR [rbp-0x28]
  404690:	mov    QWORD PTR [rcx+0x10],rax
  404694:	mov    rax,QWORD PTR [rbp-0x28]
  404698:	mov    rax,QWORD PTR [rax+0x10]
  40469c:	mov    rdi,rax
  40469f:	mov    esi,0x1
  4046a4:	call   407720 <init_token_int_value@@Base>
  4046a9:	lea    rax,[rip+0xfca0]        # 414350 <next_fake@@Base>
  4046b0:	mov    rcx,QWORD PTR [rbp-0x28]
  4046b4:	mov    QWORD PTR [rax+0x1b8],rcx
  4046bb:	mov    DWORD PTR [rax+0x1b0],0x3
  4046c5:	lea    rdi,[rbp-0x20]
  4046c9:	call   40ac10 <read_boolean_binary_expression@@Base>
  4046ce:	lea    rcx,[rip+0xeceb]        # 4133c0 <__bss_start@@Base+0x260>
  4046d5:	mov    rdx,rcx
  4046d8:	add    rdx,0x8
  4046df:	add    rcx,0x10
  4046e6:	lea    rdi,[rip+0xfc63]        # 414350 <next_fake@@Base>
  4046ed:	mov    QWORD PTR [rbp-0x30],rax
  4046f1:	cmp    DWORD PTR [rdi+0x198],0x3
  4046f8:	mov    QWORD PTR [rbp-0x50],rdx
  4046fc:	mov    QWORD PTR [rbp-0x58],rcx
  404700:	jne    40472e <boolean_binary_operator_is_read_properly@@Base+0x16e>
  404706:	mov    rax,QWORD PTR [rbp-0x50]
  40470a:	lea    rcx,[rip+0xecaf]        # 4133c0 <__bss_start@@Base+0x260>
  404711:	add    rcx,0x18
  404718:	mov    rdx,QWORD PTR [rax]
  40471b:	add    rdx,0x1
  404722:	mov    QWORD PTR [rax],rdx
  404725:	mov    QWORD PTR [rbp-0x60],rcx
  404729:	jmp    40475e <boolean_binary_operator_is_read_properly@@Base+0x19e>
  40472e:	mov    rax,QWORD PTR [rbp-0x58]
  404732:	mov    rcx,QWORD PTR [rax]
  404735:	add    rcx,0x1
  40473c:	mov    QWORD PTR [rax],rcx
  40473f:	lea    rdi,[rip+0x9a62]        # 40e1a8 <_IO_stdin_used@@Base+0x1a8>
  404746:	lea    rsi,[rip+0x98d1]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  40474d:	mov    edx,0xc8
  404752:	lea    rcx,[rip+0x9a69]        # 40e1c2 <_IO_stdin_used@@Base+0x1c2>
  404759:	call   403140 <__assert_fail@plt>
  40475e:	mov    rax,QWORD PTR [rbp-0x60]
  404762:	lea    rcx,[rip+0xec57]        # 4133c0 <__bss_start@@Base+0x260>
  404769:	mov    rdx,rcx
  40476c:	add    rdx,0x20
  404773:	add    rcx,0x28
  40477a:	mov    rsi,QWORD PTR [rax]
  40477d:	add    rsi,0x1
  404784:	mov    QWORD PTR [rax],rsi
  404787:	mov    rax,QWORD PTR [rbp-0x30]
  40478b:	cmp    DWORD PTR [rax],0x5
  40478e:	mov    QWORD PTR [rbp-0x68],rdx
  404792:	mov    QWORD PTR [rbp-0x70],rcx
  404796:	jne    4047c4 <boolean_binary_operator_is_read_properly@@Base+0x204>
  40479c:	mov    rax,QWORD PTR [rbp-0x68]
  4047a0:	lea    rcx,[rip+0xec19]        # 4133c0 <__bss_start@@Base+0x260>
  4047a7:	add    rcx,0x30
  4047ae:	mov    rdx,QWORD PTR [rax]
  4047b1:	add    rdx,0x1
  4047b8:	mov    QWORD PTR [rax],rdx
  4047bb:	mov    QWORD PTR [rbp-0x78],rcx
  4047bf:	jmp    4047f4 <boolean_binary_operator_is_read_properly@@Base+0x234>
  4047c4:	mov    rax,QWORD PTR [rbp-0x70]
  4047c8:	mov    rcx,QWORD PTR [rax]
  4047cb:	add    rcx,0x1
  4047d2:	mov    QWORD PTR [rax],rcx
  4047d5:	lea    rdi,[rip+0x996f]        # 40e14b <_IO_stdin_used@@Base+0x14b>
  4047dc:	lea    rsi,[rip+0x983b]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4047e3:	mov    edx,0xc9
  4047e8:	lea    rcx,[rip+0x99d3]        # 40e1c2 <_IO_stdin_used@@Base+0x1c2>
  4047ef:	call   403140 <__assert_fail@plt>
  4047f4:	mov    rax,QWORD PTR [rbp-0x78]
  4047f8:	lea    rcx,[rip+0xebc1]        # 4133c0 <__bss_start@@Base+0x260>
  4047ff:	mov    rdx,rcx
  404802:	add    rdx,0x38
  404809:	add    rcx,0x40
  404810:	mov    rsi,QWORD PTR [rax]
  404813:	add    rsi,0x1
  40481a:	mov    QWORD PTR [rax],rsi
  40481d:	mov    rax,QWORD PTR [rbp-0x30]
  404821:	mov    QWORD PTR [rbp-0x38],rax
  404825:	mov    rax,QWORD PTR [rbp-0x38]
  404829:	mov    rax,QWORD PTR [rax+0x10]
  40482d:	cmp    DWORD PTR [rax],0x1
  404830:	mov    QWORD PTR [rbp-0x80],rdx
  404834:	mov    QWORD PTR [rbp-0x88],rcx
  40483b:	jne    40486c <boolean_binary_operator_is_read_properly@@Base+0x2ac>
  404841:	mov    rax,QWORD PTR [rbp-0x80]
  404845:	lea    rcx,[rip+0xeb74]        # 4133c0 <__bss_start@@Base+0x260>
  40484c:	add    rcx,0x48
  404853:	mov    rdx,QWORD PTR [rax]
  404856:	add    rdx,0x1
  40485d:	mov    QWORD PTR [rax],rdx
  404860:	mov    QWORD PTR [rbp-0x90],rcx
  404867:	jmp    40489f <boolean_binary_operator_is_read_properly@@Base+0x2df>
  40486c:	mov    rax,QWORD PTR [rbp-0x88]
  404873:	mov    rcx,QWORD PTR [rax]
  404876:	add    rcx,0x1
  40487d:	mov    QWORD PTR [rax],rcx
  404880:	lea    rdi,[rip+0x996b]        # 40e1f2 <_IO_stdin_used@@Base+0x1f2>
  404887:	lea    rsi,[rip+0x9790]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  40488e:	mov    edx,0xcb
  404893:	lea    rcx,[rip+0x9928]        # 40e1c2 <_IO_stdin_used@@Base+0x1c2>
  40489a:	call   403140 <__assert_fail@plt>
  40489f:	mov    rax,QWORD PTR [rbp-0x90]
  4048a6:	lea    rcx,[rip+0xeb13]        # 4133c0 <__bss_start@@Base+0x260>
  4048ad:	mov    rdx,rcx
  4048b0:	add    rdx,0x50
  4048b7:	add    rcx,0x58
  4048be:	mov    rsi,QWORD PTR [rax]
  4048c1:	add    rsi,0x1
  4048c8:	mov    QWORD PTR [rax],rsi
  4048cb:	mov    rax,QWORD PTR [rbp-0x38]
  4048cf:	cmp    DWORD PTR [rax+0x20],0x1
  4048d3:	mov    QWORD PTR [rbp-0x98],rdx
  4048da:	mov    QWORD PTR [rbp-0xa0],rcx
  4048e1:	jne    404915 <boolean_binary_operator_is_read_properly@@Base+0x355>
  4048e7:	mov    rax,QWORD PTR [rbp-0x98]
  4048ee:	lea    rcx,[rip+0xeacb]        # 4133c0 <__bss_start@@Base+0x260>
  4048f5:	add    rcx,0x60
  4048fc:	mov    rdx,QWORD PTR [rax]
  4048ff:	add    rdx,0x1
  404906:	mov    QWORD PTR [rax],rdx
  404909:	mov    QWORD PTR [rbp-0xa8],rcx
  404910:	jmp    404948 <boolean_binary_operator_is_read_properly@@Base+0x388>
  404915:	mov    rax,QWORD PTR [rbp-0xa0]
  40491c:	mov    rcx,QWORD PTR [rax]
  40491f:	add    rcx,0x1
  404926:	mov    QWORD PTR [rax],rcx
  404929:	lea    rdi,[rip+0x98dd]        # 40e20d <_IO_stdin_used@@Base+0x20d>
  404930:	lea    rsi,[rip+0x96e7]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404937:	mov    edx,0xcc
  40493c:	lea    rcx,[rip+0x987f]        # 40e1c2 <_IO_stdin_used@@Base+0x1c2>
  404943:	call   403140 <__assert_fail@plt>
  404948:	mov    rax,QWORD PTR [rbp-0xa8]
  40494f:	lea    rcx,[rip+0xea6a]        # 4133c0 <__bss_start@@Base+0x260>
  404956:	mov    rdx,rcx
  404959:	add    rdx,0x68
  404960:	add    rcx,0x70
  404967:	mov    rsi,QWORD PTR [rax]
  40496a:	add    rsi,0x1
  404971:	mov    QWORD PTR [rax],rsi
  404974:	mov    rax,QWORD PTR [rbp-0x38]
  404978:	mov    rax,QWORD PTR [rax+0x18]
  40497c:	cmp    DWORD PTR [rax],0x1
  40497f:	mov    QWORD PTR [rbp-0xb0],rdx
  404986:	mov    QWORD PTR [rbp-0xb8],rcx
  40498d:	jne    4049c1 <boolean_binary_operator_is_read_properly@@Base+0x401>
  404993:	mov    rax,QWORD PTR [rbp-0xb0]
  40499a:	lea    rcx,[rip+0xea1f]        # 4133c0 <__bss_start@@Base+0x260>
  4049a1:	add    rcx,0x78
  4049a8:	mov    rdx,QWORD PTR [rax]
  4049ab:	add    rdx,0x1
  4049b2:	mov    QWORD PTR [rax],rdx
  4049b5:	mov    QWORD PTR [rbp-0xc0],rcx
  4049bc:	jmp    4049f4 <boolean_binary_operator_is_read_properly@@Base+0x434>
  4049c1:	mov    rax,QWORD PTR [rbp-0xb8]
  4049c8:	mov    rcx,QWORD PTR [rax]
  4049cb:	add    rcx,0x1
  4049d2:	mov    QWORD PTR [rax],rcx
  4049d5:	lea    rdi,[rip+0x984a]        # 40e226 <_IO_stdin_used@@Base+0x226>
  4049dc:	lea    rsi,[rip+0x963b]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4049e3:	mov    edx,0xcd
  4049e8:	lea    rcx,[rip+0x97d3]        # 40e1c2 <_IO_stdin_used@@Base+0x1c2>
  4049ef:	call   403140 <__assert_fail@plt>
  4049f4:	mov    rax,QWORD PTR [rbp-0xc0]
  4049fb:	mov    rcx,QWORD PTR [rax]
  4049fe:	add    rcx,0x1
  404a05:	mov    QWORD PTR [rax],rcx
  404a08:	mov    rax,QWORD PTR [rip+0xea31]        # 413440 <__bss_start@@Base+0x2e0>
  404a0f:	add    rax,0x1
  404a15:	mov    QWORD PTR [rip+0xea24],rax        # 413440 <__bss_start@@Base+0x2e0>
  404a1c:	add    rsp,0xc0
  404a23:	pop    rbp
  404a24:	ret    
  404a25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a2f:	nop

0000000000404a30 <boolean_unary_operator_is_read_properly@@Base>:
  404a30:	push   rbp
  404a31:	mov    rbp,rsp
  404a34:	sub    rsp,0xc0
  404a3b:	lea    rax,[rip+0xea0e]        # 413450 <__bss_start@@Base+0x2f0>
  404a42:	mov    QWORD PTR [rbp-0x48],rax
  404a46:	mov    rax,QWORD PTR [rbp-0x48]
  404a4a:	mov    rcx,QWORD PTR [rax]
  404a4d:	add    rcx,0x1
  404a54:	mov    QWORD PTR [rax],rcx
  404a57:	mov    QWORD PTR [rbp-0x30],0x0
  404a5f:	mov    QWORD PTR [rbp-0x38],0x0
  404a67:	mov    edi,0x2
  404a6c:	call   4031d0 <malloc@plt>
  404a71:	mov    QWORD PTR [rbp-0x40],rax
  404a75:	mov    rax,QWORD PTR [rbp-0x40]
  404a79:	mov    BYTE PTR [rax],0x21
  404a7c:	mov    rax,QWORD PTR [rbp-0x40]
  404a80:	mov    BYTE PTR [rax+0x1],0x0
  404a84:	lea    rdi,[rbp-0x20]
  404a88:	lea    rsi,[rbp-0x18]
  404a8c:	call   409ac0 <init_grammar@@Base>
  404a91:	mov    edi,0x10
  404a96:	call   4031d0 <malloc@plt>
  404a9b:	mov    QWORD PTR [rbp-0x28],rax
  404a9f:	mov    edi,0x10
  404aa4:	call   4031d0 <malloc@plt>
  404aa9:	mov    rcx,QWORD PTR [rbp-0x28]
  404aad:	mov    QWORD PTR [rcx],rax
  404ab0:	mov    rax,QWORD PTR [rbp-0x28]
  404ab4:	mov    rax,QWORD PTR [rax]
  404ab7:	mov    rsi,QWORD PTR [rbp-0x40]
  404abb:	mov    rdi,rax
  404abe:	call   407ac0 <init_token_boolean_op@@Base>
  404ac3:	mov    edi,0x8
  404ac8:	call   4031d0 <malloc@plt>
  404acd:	mov    rcx,QWORD PTR [rbp-0x28]
  404ad1:	mov    QWORD PTR [rcx+0x8],rax
  404ad5:	mov    rax,QWORD PTR [rbp-0x28]
  404ad9:	mov    rax,QWORD PTR [rax+0x8]
  404add:	mov    rdi,rax
  404ae0:	mov    esi,0x1
  404ae5:	call   407720 <init_token_int_value@@Base>
  404aea:	lea    rax,[rip+0xf85f]        # 414350 <next_fake@@Base>
  404af1:	mov    rcx,QWORD PTR [rbp-0x28]
  404af5:	mov    QWORD PTR [rax+0x1b8],rcx
  404afc:	mov    DWORD PTR [rax+0x1b0],0x2
  404b06:	lea    rdi,[rbp-0x20]
  404b0a:	call   40afc0 <read_boolean_unary_expression@@Base>
  404b0f:	lea    rcx,[rip+0xe93a]        # 413450 <__bss_start@@Base+0x2f0>
  404b16:	mov    rdx,rcx
  404b19:	add    rdx,0x8
  404b20:	add    rcx,0x10
  404b27:	lea    rdi,[rip+0xf822]        # 414350 <next_fake@@Base>
  404b2e:	mov    QWORD PTR [rbp-0x30],rax
  404b32:	cmp    DWORD PTR [rdi+0x198],0x2
  404b39:	mov    QWORD PTR [rbp-0x50],rdx
  404b3d:	mov    QWORD PTR [rbp-0x58],rcx
  404b41:	jne    404b6f <boolean_unary_operator_is_read_properly@@Base+0x13f>
  404b47:	mov    rax,QWORD PTR [rbp-0x50]
  404b4b:	lea    rcx,[rip+0xe8fe]        # 413450 <__bss_start@@Base+0x2f0>
  404b52:	add    rcx,0x18
  404b59:	mov    rdx,QWORD PTR [rax]
  404b5c:	add    rdx,0x1
  404b63:	mov    QWORD PTR [rax],rdx
  404b66:	mov    QWORD PTR [rbp-0x60],rcx
  404b6a:	jmp    404b9f <boolean_unary_operator_is_read_properly@@Base+0x16f>
  404b6f:	mov    rax,QWORD PTR [rbp-0x58]
  404b73:	mov    rcx,QWORD PTR [rax]
  404b76:	add    rcx,0x1
  404b7d:	mov    QWORD PTR [rax],rcx
  404b80:	lea    rdi,[rip+0x951e]        # 40e0a5 <_IO_stdin_used@@Base+0xa5>
  404b87:	lea    rsi,[rip+0x9490]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404b8e:	mov    edx,0xeb
  404b93:	lea    rcx,[rip+0x96a8]        # 40e242 <_IO_stdin_used@@Base+0x242>
  404b9a:	call   403140 <__assert_fail@plt>
  404b9f:	mov    rax,QWORD PTR [rbp-0x60]
  404ba3:	lea    rcx,[rip+0xe8a6]        # 413450 <__bss_start@@Base+0x2f0>
  404baa:	mov    rdx,rcx
  404bad:	add    rdx,0x20
  404bb4:	add    rcx,0x28
  404bbb:	mov    rsi,QWORD PTR [rax]
  404bbe:	add    rsi,0x1
  404bc5:	mov    QWORD PTR [rax],rsi
  404bc8:	mov    rax,QWORD PTR [rbp-0x30]
  404bcc:	cmp    DWORD PTR [rax],0x5
  404bcf:	mov    QWORD PTR [rbp-0x68],rdx
  404bd3:	mov    QWORD PTR [rbp-0x70],rcx
  404bd7:	jne    404c05 <boolean_unary_operator_is_read_properly@@Base+0x1d5>
  404bdd:	mov    rax,QWORD PTR [rbp-0x68]
  404be1:	lea    rcx,[rip+0xe868]        # 413450 <__bss_start@@Base+0x2f0>
  404be8:	add    rcx,0x30
  404bef:	mov    rdx,QWORD PTR [rax]
  404bf2:	add    rdx,0x1
  404bf9:	mov    QWORD PTR [rax],rdx
  404bfc:	mov    QWORD PTR [rbp-0x78],rcx
  404c00:	jmp    404c35 <boolean_unary_operator_is_read_properly@@Base+0x205>
  404c05:	mov    rax,QWORD PTR [rbp-0x70]
  404c09:	mov    rcx,QWORD PTR [rax]
  404c0c:	add    rcx,0x1
  404c13:	mov    QWORD PTR [rax],rcx
  404c16:	lea    rdi,[rip+0x952e]        # 40e14b <_IO_stdin_used@@Base+0x14b>
  404c1d:	lea    rsi,[rip+0x93fa]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404c24:	mov    edx,0xec
  404c29:	lea    rcx,[rip+0x9612]        # 40e242 <_IO_stdin_used@@Base+0x242>
  404c30:	call   403140 <__assert_fail@plt>
  404c35:	mov    rax,QWORD PTR [rbp-0x78]
  404c39:	lea    rcx,[rip+0xe810]        # 413450 <__bss_start@@Base+0x2f0>
  404c40:	mov    rdx,rcx
  404c43:	add    rdx,0x38
  404c4a:	add    rcx,0x40
  404c51:	mov    rsi,QWORD PTR [rax]
  404c54:	add    rsi,0x1
  404c5b:	mov    QWORD PTR [rax],rsi
  404c5e:	mov    rax,QWORD PTR [rbp-0x30]
  404c62:	mov    QWORD PTR [rbp-0x38],rax
  404c66:	mov    rax,QWORD PTR [rbp-0x38]
  404c6a:	mov    rax,QWORD PTR [rax+0x10]
  404c6e:	cmp    DWORD PTR [rax],0x1
  404c71:	mov    QWORD PTR [rbp-0x80],rdx
  404c75:	mov    QWORD PTR [rbp-0x88],rcx
  404c7c:	jne    404cad <boolean_unary_operator_is_read_properly@@Base+0x27d>
  404c82:	mov    rax,QWORD PTR [rbp-0x80]
  404c86:	lea    rcx,[rip+0xe7c3]        # 413450 <__bss_start@@Base+0x2f0>
  404c8d:	add    rcx,0x48
  404c94:	mov    rdx,QWORD PTR [rax]
  404c97:	add    rdx,0x1
  404c9e:	mov    QWORD PTR [rax],rdx
  404ca1:	mov    QWORD PTR [rbp-0x90],rcx
  404ca8:	jmp    404ce0 <boolean_unary_operator_is_read_properly@@Base+0x2b0>
  404cad:	mov    rax,QWORD PTR [rbp-0x88]
  404cb4:	mov    rcx,QWORD PTR [rax]
  404cb7:	add    rcx,0x1
  404cbe:	mov    QWORD PTR [rax],rcx
  404cc1:	lea    rdi,[rip+0x952a]        # 40e1f2 <_IO_stdin_used@@Base+0x1f2>
  404cc8:	lea    rsi,[rip+0x934f]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404ccf:	mov    edx,0xee
  404cd4:	lea    rcx,[rip+0x9567]        # 40e242 <_IO_stdin_used@@Base+0x242>
  404cdb:	call   403140 <__assert_fail@plt>
  404ce0:	mov    rax,QWORD PTR [rbp-0x90]
  404ce7:	lea    rcx,[rip+0xe762]        # 413450 <__bss_start@@Base+0x2f0>
  404cee:	mov    rdx,rcx
  404cf1:	add    rdx,0x50
  404cf8:	add    rcx,0x58
  404cff:	mov    rsi,QWORD PTR [rax]
  404d02:	add    rsi,0x1
  404d09:	mov    QWORD PTR [rax],rsi
  404d0c:	mov    rax,QWORD PTR [rbp-0x38]
  404d10:	cmp    DWORD PTR [rax+0x20],0x8
  404d14:	mov    QWORD PTR [rbp-0x98],rdx
  404d1b:	mov    QWORD PTR [rbp-0xa0],rcx
  404d22:	jne    404d56 <boolean_unary_operator_is_read_properly@@Base+0x326>
  404d28:	mov    rax,QWORD PTR [rbp-0x98]
  404d2f:	lea    rcx,[rip+0xe71a]        # 413450 <__bss_start@@Base+0x2f0>
  404d36:	add    rcx,0x60
  404d3d:	mov    rdx,QWORD PTR [rax]
  404d40:	add    rdx,0x1
  404d47:	mov    QWORD PTR [rax],rdx
  404d4a:	mov    QWORD PTR [rbp-0xa8],rcx
  404d51:	jmp    404d89 <boolean_unary_operator_is_read_properly@@Base+0x359>
  404d56:	mov    rax,QWORD PTR [rbp-0xa0]
  404d5d:	mov    rcx,QWORD PTR [rax]
  404d60:	add    rcx,0x1
  404d67:	mov    QWORD PTR [rax],rcx
  404d6a:	lea    rdi,[rip+0x9500]        # 40e271 <_IO_stdin_used@@Base+0x271>
  404d71:	lea    rsi,[rip+0x92a6]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404d78:	mov    edx,0xef
  404d7d:	lea    rcx,[rip+0x94be]        # 40e242 <_IO_stdin_used@@Base+0x242>
  404d84:	call   403140 <__assert_fail@plt>
  404d89:	mov    rax,QWORD PTR [rbp-0xa8]
  404d90:	lea    rcx,[rip+0xe6b9]        # 413450 <__bss_start@@Base+0x2f0>
  404d97:	mov    rdx,rcx
  404d9a:	add    rdx,0x68
  404da1:	add    rcx,0x70
  404da8:	mov    rsi,QWORD PTR [rax]
  404dab:	add    rsi,0x1
  404db2:	mov    QWORD PTR [rax],rsi
  404db5:	mov    rax,QWORD PTR [rbp-0x38]
  404db9:	cmp    QWORD PTR [rax+0x18],0x0
  404dbe:	mov    QWORD PTR [rbp-0xb0],rdx
  404dc5:	mov    QWORD PTR [rbp-0xb8],rcx
  404dcc:	jne    404e00 <boolean_unary_operator_is_read_properly@@Base+0x3d0>
  404dd2:	mov    rax,QWORD PTR [rbp-0xb0]
  404dd9:	lea    rcx,[rip+0xe670]        # 413450 <__bss_start@@Base+0x2f0>
  404de0:	add    rcx,0x78
  404de7:	mov    rdx,QWORD PTR [rax]
  404dea:	add    rdx,0x1
  404df1:	mov    QWORD PTR [rax],rdx
  404df4:	mov    QWORD PTR [rbp-0xc0],rcx
  404dfb:	jmp    404e33 <boolean_unary_operator_is_read_properly@@Base+0x403>
  404e00:	mov    rax,QWORD PTR [rbp-0xb8]
  404e07:	mov    rcx,QWORD PTR [rax]
  404e0a:	add    rcx,0x1
  404e11:	mov    QWORD PTR [rax],rcx
  404e14:	lea    rdi,[rip+0x946a]        # 40e285 <_IO_stdin_used@@Base+0x285>
  404e1b:	lea    rsi,[rip+0x91fc]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  404e22:	mov    edx,0xf0
  404e27:	lea    rcx,[rip+0x9414]        # 40e242 <_IO_stdin_used@@Base+0x242>
  404e2e:	call   403140 <__assert_fail@plt>
  404e33:	mov    rax,QWORD PTR [rbp-0xc0]
  404e3a:	mov    rcx,QWORD PTR [rax]
  404e3d:	add    rcx,0x1
  404e44:	mov    QWORD PTR [rax],rcx
  404e47:	mov    rax,QWORD PTR [rip+0xe682]        # 4134d0 <__bss_start@@Base+0x370>
  404e4e:	add    rax,0x1
  404e54:	mov    QWORD PTR [rip+0xe675],rax        # 4134d0 <__bss_start@@Base+0x370>
  404e5b:	add    rsp,0xc0
  404e62:	pop    rbp
  404e63:	ret    
  404e64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e6e:	xchg   ax,ax

0000000000404e70 <if_statement_only@@Base>:
  404e70:	push   rbp
  404e71:	mov    rbp,rsp
  404e74:	sub    rsp,0x90
  404e7b:	lea    rax,[rip+0xe65e]        # 4134e0 <__bss_start@@Base+0x380>
  404e82:	mov    QWORD PTR [rbp-0x40],rax
  404e86:	mov    rax,QWORD PTR [rbp-0x40]
  404e8a:	mov    rcx,QWORD PTR [rax]
  404e8d:	add    rcx,0x1
  404e94:	mov    QWORD PTR [rax],rcx
  404e97:	mov    QWORD PTR [rbp-0x30],0x0
  404e9f:	lea    rdi,[rbp-0x20]
  404ea3:	lea    rsi,[rbp-0x18]
  404ea7:	call   409ac0 <init_grammar@@Base>
  404eac:	mov    edi,0x3
  404eb1:	call   4031d0 <malloc@plt>
  404eb6:	mov    QWORD PTR [rbp-0x38],rax
  404eba:	mov    rax,QWORD PTR [rbp-0x38]
  404ebe:	mov    BYTE PTR [rax],0x21
  404ec1:	mov    rax,QWORD PTR [rbp-0x38]
  404ec5:	mov    BYTE PTR [rax+0x1],0x3d
  404ec9:	mov    rax,QWORD PTR [rbp-0x38]
  404ecd:	mov    BYTE PTR [rax+0x2],0x0
  404ed1:	mov    edi,0x48
  404ed6:	call   4031d0 <malloc@plt>
  404edb:	mov    QWORD PTR [rbp-0x28],rax
  404edf:	mov    edi,0x4
  404ee4:	call   4031d0 <malloc@plt>
  404ee9:	mov    rcx,QWORD PTR [rbp-0x28]
  404eed:	mov    QWORD PTR [rcx],rax
  404ef0:	mov    rax,QWORD PTR [rbp-0x28]
  404ef4:	mov    rax,QWORD PTR [rax]
  404ef7:	mov    rdi,rax
  404efa:	call   4077f0 <init_token_opar@@Base>
  404eff:	mov    edi,0x8
  404f04:	call   4031d0 <malloc@plt>
  404f09:	mov    rcx,QWORD PTR [rbp-0x28]
  404f0d:	mov    QWORD PTR [rcx+0x8],rax
  404f11:	mov    rax,QWORD PTR [rbp-0x28]
  404f15:	mov    rax,QWORD PTR [rax+0x8]
  404f19:	mov    rdi,rax
  404f1c:	mov    esi,0x1
  404f21:	call   407720 <init_token_int_value@@Base>
  404f26:	mov    edi,0x8
  404f2b:	call   4031d0 <malloc@plt>
  404f30:	mov    rcx,QWORD PTR [rbp-0x28]
  404f34:	mov    QWORD PTR [rcx+0x10],rax
  404f38:	mov    rax,QWORD PTR [rbp-0x28]
  404f3c:	mov    rax,QWORD PTR [rax+0x10]
  404f40:	mov    rdi,rax
  404f43:	mov    esi,0x1
  404f48:	call   407720 <init_token_int_value@@Base>
  404f4d:	mov    edi,0x10
  404f52:	call   4031d0 <malloc@plt>
  404f57:	mov    rcx,QWORD PTR [rbp-0x28]
  404f5b:	mov    QWORD PTR [rcx+0x18],rax
  404f5f:	mov    rax,QWORD PTR [rbp-0x28]
  404f63:	mov    rax,QWORD PTR [rax+0x18]
  404f67:	mov    rsi,QWORD PTR [rbp-0x38]
  404f6b:	mov    rdi,rax
  404f6e:	call   407ac0 <init_token_boolean_op@@Base>
  404f73:	mov    edi,0x8
  404f78:	call   4031d0 <malloc@plt>
  404f7d:	mov    rcx,QWORD PTR [rbp-0x28]
  404f81:	mov    QWORD PTR [rcx+0x20],rax
  404f85:	mov    rax,QWORD PTR [rbp-0x28]
  404f89:	mov    rax,QWORD PTR [rax+0x20]
  404f8d:	mov    rdi,rax
  404f90:	mov    esi,0x1
  404f95:	call   407720 <init_token_int_value@@Base>
  404f9a:	mov    edi,0x4
  404f9f:	call   4031d0 <malloc@plt>
  404fa4:	mov    rcx,QWORD PTR [rbp-0x28]
  404fa8:	mov    QWORD PTR [rcx+0x28],rax
  404fac:	mov    rax,QWORD PTR [rbp-0x28]
  404fb0:	mov    rax,QWORD PTR [rax+0x28]
  404fb4:	mov    rdi,rax
  404fb7:	call   407840 <init_token_cpar@@Base>
  404fbc:	mov    edi,0x4
  404fc1:	call   4031d0 <malloc@plt>
  404fc6:	mov    rcx,QWORD PTR [rbp-0x28]
  404fca:	mov    QWORD PTR [rcx+0x30],rax
  404fce:	mov    rax,QWORD PTR [rbp-0x28]
  404fd2:	mov    rax,QWORD PTR [rax+0x30]
  404fd6:	mov    rdi,rax
  404fd9:	call   407890 <init_token_obra@@Base>
  404fde:	mov    edi,0x4
  404fe3:	call   4031d0 <malloc@plt>
  404fe8:	mov    rcx,QWORD PTR [rbp-0x28]
  404fec:	mov    QWORD PTR [rcx+0x38],rax
  404ff0:	mov    rax,QWORD PTR [rbp-0x28]
  404ff4:	mov    rax,QWORD PTR [rax+0x38]
  404ff8:	mov    rdi,rax
  404ffb:	call   4078e0 <init_token_cbra@@Base>
  405000:	mov    edi,0x4
  405005:	call   4031d0 <malloc@plt>
  40500a:	mov    rcx,QWORD PTR [rbp-0x28]
  40500e:	mov    QWORD PTR [rcx+0x40],rax
  405012:	mov    rax,QWORD PTR [rbp-0x28]
  405016:	mov    rax,QWORD PTR [rax+0x40]
  40501a:	mov    rdi,rax
  40501d:	call   4079d0 <init_token_eof@@Base>
  405022:	lea    rax,[rip+0xf327]        # 414350 <next_fake@@Base>
  405029:	mov    rcx,QWORD PTR [rbp-0x28]
  40502d:	mov    QWORD PTR [rax+0x1b8],rcx
  405034:	mov    DWORD PTR [rax+0x1b0],0x9
  40503e:	lea    rdi,[rbp-0x20]
  405042:	call   40a4c0 <read_if_statement@@Base>
  405047:	lea    rcx,[rip+0xe492]        # 4134e0 <__bss_start@@Base+0x380>
  40504e:	mov    rdx,rcx
  405051:	add    rdx,0x8
  405058:	add    rcx,0x10
  40505f:	lea    rdi,[rip+0xf2ea]        # 414350 <next_fake@@Base>
  405066:	mov    QWORD PTR [rbp-0x30],rax
  40506a:	cmp    DWORD PTR [rdi+0x198],0x9
  405071:	mov    QWORD PTR [rbp-0x48],rdx
  405075:	mov    QWORD PTR [rbp-0x50],rcx
  405079:	jne    4050a7 <if_statement_only@@Base+0x237>
  40507f:	mov    rax,QWORD PTR [rbp-0x48]
  405083:	lea    rcx,[rip+0xe456]        # 4134e0 <__bss_start@@Base+0x380>
  40508a:	add    rcx,0x18
  405091:	mov    rdx,QWORD PTR [rax]
  405094:	add    rdx,0x1
  40509b:	mov    QWORD PTR [rax],rdx
  40509e:	mov    QWORD PTR [rbp-0x58],rcx
  4050a2:	jmp    4050d7 <if_statement_only@@Base+0x267>
  4050a7:	mov    rax,QWORD PTR [rbp-0x50]
  4050ab:	mov    rcx,QWORD PTR [rax]
  4050ae:	add    rcx,0x1
  4050b5:	mov    QWORD PTR [rax],rcx
  4050b8:	lea    rdi,[rip+0x91db]        # 40e29a <_IO_stdin_used@@Base+0x29a>
  4050bf:	lea    rsi,[rip+0x8f58]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4050c6:	mov    edx,0x11b
  4050cb:	lea    rcx,[rip+0x91e2]        # 40e2b4 <_IO_stdin_used@@Base+0x2b4>
  4050d2:	call   403140 <__assert_fail@plt>
  4050d7:	mov    rax,QWORD PTR [rbp-0x58]
  4050db:	lea    rcx,[rip+0xe3fe]        # 4134e0 <__bss_start@@Base+0x380>
  4050e2:	mov    rdx,rcx
  4050e5:	add    rdx,0x20
  4050ec:	add    rcx,0x28
  4050f3:	mov    rsi,QWORD PTR [rax]
  4050f6:	add    rsi,0x1
  4050fd:	mov    QWORD PTR [rax],rsi
  405100:	cmp    QWORD PTR [rbp-0x30],0x0
  405105:	mov    QWORD PTR [rbp-0x60],rdx
  405109:	mov    QWORD PTR [rbp-0x68],rcx
  40510d:	je     40513b <if_statement_only@@Base+0x2cb>
  405113:	mov    rax,QWORD PTR [rbp-0x60]
  405117:	lea    rcx,[rip+0xe3c2]        # 4134e0 <__bss_start@@Base+0x380>
  40511e:	add    rcx,0x30
  405125:	mov    rdx,QWORD PTR [rax]
  405128:	add    rdx,0x1
  40512f:	mov    QWORD PTR [rax],rdx
  405132:	mov    QWORD PTR [rbp-0x70],rcx
  405136:	jmp    40516b <if_statement_only@@Base+0x2fb>
  40513b:	mov    rax,QWORD PTR [rbp-0x68]
  40513f:	mov    rcx,QWORD PTR [rax]
  405142:	add    rcx,0x1
  405149:	mov    QWORD PTR [rax],rcx
  40514c:	lea    rdi,[rip+0x917a]        # 40e2cd <_IO_stdin_used@@Base+0x2cd>
  405153:	lea    rsi,[rip+0x8ec4]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  40515a:	mov    edx,0x11c
  40515f:	lea    rcx,[rip+0x914e]        # 40e2b4 <_IO_stdin_used@@Base+0x2b4>
  405166:	call   403140 <__assert_fail@plt>
  40516b:	mov    rax,QWORD PTR [rbp-0x70]
  40516f:	lea    rcx,[rip+0xe36a]        # 4134e0 <__bss_start@@Base+0x380>
  405176:	mov    rdx,rcx
  405179:	add    rdx,0x38
  405180:	add    rcx,0x40
  405187:	mov    rsi,QWORD PTR [rax]
  40518a:	add    rsi,0x1
  405191:	mov    QWORD PTR [rax],rsi
  405194:	mov    rax,QWORD PTR [rbp-0x30]
  405198:	cmp    DWORD PTR [rax],0x4
  40519b:	mov    QWORD PTR [rbp-0x78],rdx
  40519f:	mov    QWORD PTR [rbp-0x80],rcx
  4051a3:	jne    4051d4 <if_statement_only@@Base+0x364>
  4051a9:	mov    rax,QWORD PTR [rbp-0x78]
  4051ad:	lea    rcx,[rip+0xe32c]        # 4134e0 <__bss_start@@Base+0x380>
  4051b4:	add    rcx,0x48
  4051bb:	mov    rdx,QWORD PTR [rax]
  4051be:	add    rdx,0x1
  4051c5:	mov    QWORD PTR [rax],rdx
  4051c8:	mov    QWORD PTR [rbp-0x88],rcx
  4051cf:	jmp    405204 <if_statement_only@@Base+0x394>
  4051d4:	mov    rax,QWORD PTR [rbp-0x80]
  4051d8:	mov    rcx,QWORD PTR [rax]
  4051db:	add    rcx,0x1
  4051e2:	mov    QWORD PTR [rax],rcx
  4051e5:	lea    rdi,[rip+0x90ed]        # 40e2d9 <_IO_stdin_used@@Base+0x2d9>
  4051ec:	lea    rsi,[rip+0x8e2b]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4051f3:	mov    edx,0x11d
  4051f8:	lea    rcx,[rip+0x90b5]        # 40e2b4 <_IO_stdin_used@@Base+0x2b4>
  4051ff:	call   403140 <__assert_fail@plt>
  405204:	mov    rax,QWORD PTR [rbp-0x88]
  40520b:	mov    rcx,QWORD PTR [rax]
  40520e:	add    rcx,0x1
  405215:	mov    QWORD PTR [rax],rcx
  405218:	mov    rax,QWORD PTR [rip+0xe311]        # 413530 <__bss_start@@Base+0x3d0>
  40521f:	add    rax,0x1
  405225:	mov    QWORD PTR [rip+0xe304],rax        # 413530 <__bss_start@@Base+0x3d0>
  40522c:	add    rsp,0x90
  405233:	pop    rbp
  405234:	ret    
  405235:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40523f:	nop

0000000000405240 <if_else_statements@@Base>:
  405240:	push   rbp
  405241:	mov    rbp,rsp
  405244:	sub    rsp,0x90
  40524b:	lea    rax,[rip+0xe2ee]        # 413540 <__bss_start@@Base+0x3e0>
  405252:	mov    QWORD PTR [rbp-0x40],rax
  405256:	mov    rax,QWORD PTR [rbp-0x40]
  40525a:	mov    rcx,QWORD PTR [rax]
  40525d:	add    rcx,0x1
  405264:	mov    QWORD PTR [rax],rcx
  405267:	mov    QWORD PTR [rbp-0x30],0x0
  40526f:	lea    rdi,[rbp-0x20]
  405273:	lea    rsi,[rbp-0x18]
  405277:	call   409ac0 <init_grammar@@Base>
  40527c:	mov    edi,0x3
  405281:	call   4031d0 <malloc@plt>
  405286:	mov    QWORD PTR [rbp-0x38],rax
  40528a:	mov    rax,QWORD PTR [rbp-0x38]
  40528e:	mov    BYTE PTR [rax],0x21
  405291:	mov    rax,QWORD PTR [rbp-0x38]
  405295:	mov    BYTE PTR [rax+0x1],0x3d
  405299:	mov    rax,QWORD PTR [rbp-0x38]
  40529d:	mov    BYTE PTR [rax+0x2],0x0
  4052a1:	mov    edi,0x58
  4052a6:	call   4031d0 <malloc@plt>
  4052ab:	mov    QWORD PTR [rbp-0x28],rax
  4052af:	mov    edi,0x4
  4052b4:	call   4031d0 <malloc@plt>
  4052b9:	mov    rcx,QWORD PTR [rbp-0x28]
  4052bd:	mov    QWORD PTR [rcx],rax
  4052c0:	mov    rax,QWORD PTR [rbp-0x28]
  4052c4:	mov    rax,QWORD PTR [rax]
  4052c7:	mov    rdi,rax
  4052ca:	call   4077f0 <init_token_opar@@Base>
  4052cf:	mov    edi,0x8
  4052d4:	call   4031d0 <malloc@plt>
  4052d9:	mov    rcx,QWORD PTR [rbp-0x28]
  4052dd:	mov    QWORD PTR [rcx+0x8],rax
  4052e1:	mov    rax,QWORD PTR [rbp-0x28]
  4052e5:	mov    rax,QWORD PTR [rax+0x8]
  4052e9:	mov    rdi,rax
  4052ec:	mov    esi,0x1
  4052f1:	call   407720 <init_token_int_value@@Base>
  4052f6:	mov    edi,0x8
  4052fb:	call   4031d0 <malloc@plt>
  405300:	mov    rcx,QWORD PTR [rbp-0x28]
  405304:	mov    QWORD PTR [rcx+0x10],rax
  405308:	mov    rax,QWORD PTR [rbp-0x28]
  40530c:	mov    rax,QWORD PTR [rax+0x10]
  405310:	mov    rdi,rax
  405313:	mov    esi,0x1
  405318:	call   407720 <init_token_int_value@@Base>
  40531d:	mov    edi,0x10
  405322:	call   4031d0 <malloc@plt>
  405327:	mov    rcx,QWORD PTR [rbp-0x28]
  40532b:	mov    QWORD PTR [rcx+0x18],rax
  40532f:	mov    rax,QWORD PTR [rbp-0x28]
  405333:	mov    rax,QWORD PTR [rax+0x18]
  405337:	mov    rsi,QWORD PTR [rbp-0x38]
  40533b:	mov    rdi,rax
  40533e:	call   407ac0 <init_token_boolean_op@@Base>
  405343:	mov    edi,0x8
  405348:	call   4031d0 <malloc@plt>
  40534d:	mov    rcx,QWORD PTR [rbp-0x28]
  405351:	mov    QWORD PTR [rcx+0x20],rax
  405355:	mov    rax,QWORD PTR [rbp-0x28]
  405359:	mov    rax,QWORD PTR [rax+0x20]
  40535d:	mov    rdi,rax
  405360:	mov    esi,0x1
  405365:	call   407720 <init_token_int_value@@Base>
  40536a:	mov    edi,0x4
  40536f:	call   4031d0 <malloc@plt>
  405374:	mov    rcx,QWORD PTR [rbp-0x28]
  405378:	mov    QWORD PTR [rcx+0x28],rax
  40537c:	mov    rax,QWORD PTR [rbp-0x28]
  405380:	mov    rax,QWORD PTR [rax+0x28]
  405384:	mov    rdi,rax
  405387:	call   407840 <init_token_cpar@@Base>
  40538c:	mov    edi,0x4
  405391:	call   4031d0 <malloc@plt>
  405396:	mov    rcx,QWORD PTR [rbp-0x28]
  40539a:	mov    QWORD PTR [rcx+0x30],rax
  40539e:	mov    rax,QWORD PTR [rbp-0x28]
  4053a2:	mov    rax,QWORD PTR [rax+0x30]
  4053a6:	mov    rdi,rax
  4053a9:	call   407890 <init_token_obra@@Base>
  4053ae:	mov    edi,0x4
  4053b3:	call   4031d0 <malloc@plt>
  4053b8:	mov    rcx,QWORD PTR [rbp-0x28]
  4053bc:	mov    QWORD PTR [rcx+0x38],rax
  4053c0:	mov    rax,QWORD PTR [rbp-0x28]
  4053c4:	mov    rax,QWORD PTR [rax+0x38]
  4053c8:	mov    rdi,rax
  4053cb:	call   4078e0 <init_token_cbra@@Base>
  4053d0:	mov    edi,0x4
  4053d5:	call   4031d0 <malloc@plt>
  4053da:	mov    rcx,QWORD PTR [rbp-0x28]
  4053de:	mov    QWORD PTR [rcx+0x40],rax
  4053e2:	mov    rax,QWORD PTR [rbp-0x28]
  4053e6:	mov    rax,QWORD PTR [rax+0x40]
  4053ea:	mov    rdi,rax
  4053ed:	call   407a70 <init_token_else@@Base>
  4053f2:	mov    edi,0x4
  4053f7:	call   4031d0 <malloc@plt>
  4053fc:	mov    rcx,QWORD PTR [rbp-0x28]
  405400:	mov    QWORD PTR [rcx+0x48],rax
  405404:	mov    rax,QWORD PTR [rbp-0x28]
  405408:	mov    rax,QWORD PTR [rax+0x48]
  40540c:	mov    rdi,rax
  40540f:	call   407890 <init_token_obra@@Base>
  405414:	mov    edi,0x4
  405419:	call   4031d0 <malloc@plt>
  40541e:	mov    rcx,QWORD PTR [rbp-0x28]
  405422:	mov    QWORD PTR [rcx+0x50],rax
  405426:	mov    rax,QWORD PTR [rbp-0x28]
  40542a:	mov    rax,QWORD PTR [rax+0x50]
  40542e:	mov    rdi,rax
  405431:	call   4078e0 <init_token_cbra@@Base>
  405436:	lea    rax,[rip+0xef13]        # 414350 <next_fake@@Base>
  40543d:	mov    rcx,QWORD PTR [rbp-0x28]
  405441:	mov    QWORD PTR [rax+0x1b8],rcx
  405448:	mov    DWORD PTR [rax+0x1b0],0xb
  405452:	lea    rdi,[rbp-0x20]
  405456:	call   40a4c0 <read_if_statement@@Base>
  40545b:	lea    rcx,[rip+0xe0de]        # 413540 <__bss_start@@Base+0x3e0>
  405462:	mov    rdx,rcx
  405465:	add    rdx,0x8
  40546c:	add    rcx,0x10
  405473:	lea    rdi,[rip+0xeed6]        # 414350 <next_fake@@Base>
  40547a:	mov    QWORD PTR [rbp-0x30],rax
  40547e:	cmp    DWORD PTR [rdi+0x198],0xb
  405485:	mov    QWORD PTR [rbp-0x48],rdx
  405489:	mov    QWORD PTR [rbp-0x50],rcx
  40548d:	jne    4054bb <if_else_statements@@Base+0x27b>
  405493:	mov    rax,QWORD PTR [rbp-0x48]
  405497:	lea    rcx,[rip+0xe0a2]        # 413540 <__bss_start@@Base+0x3e0>
  40549e:	add    rcx,0x18
  4054a5:	mov    rdx,QWORD PTR [rax]
  4054a8:	add    rdx,0x1
  4054af:	mov    QWORD PTR [rax],rdx
  4054b2:	mov    QWORD PTR [rbp-0x58],rcx
  4054b6:	jmp    4054eb <if_else_statements@@Base+0x2ab>
  4054bb:	mov    rax,QWORD PTR [rbp-0x50]
  4054bf:	mov    rcx,QWORD PTR [rax]
  4054c2:	add    rcx,0x1
  4054c9:	mov    QWORD PTR [rax],rcx
  4054cc:	lea    rdi,[rip+0x8e18]        # 40e2eb <_IO_stdin_used@@Base+0x2eb>
  4054d3:	lea    rsi,[rip+0x8b44]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4054da:	mov    edx,0x14c
  4054df:	lea    rcx,[rip+0x8e20]        # 40e306 <_IO_stdin_used@@Base+0x306>
  4054e6:	call   403140 <__assert_fail@plt>
  4054eb:	mov    rax,QWORD PTR [rbp-0x58]
  4054ef:	lea    rcx,[rip+0xe04a]        # 413540 <__bss_start@@Base+0x3e0>
  4054f6:	mov    rdx,rcx
  4054f9:	add    rdx,0x20
  405500:	add    rcx,0x28
  405507:	mov    rsi,QWORD PTR [rax]
  40550a:	add    rsi,0x1
  405511:	mov    QWORD PTR [rax],rsi
  405514:	cmp    QWORD PTR [rbp-0x30],0x0
  405519:	mov    QWORD PTR [rbp-0x60],rdx
  40551d:	mov    QWORD PTR [rbp-0x68],rcx
  405521:	je     40554f <if_else_statements@@Base+0x30f>
  405527:	mov    rax,QWORD PTR [rbp-0x60]
  40552b:	lea    rcx,[rip+0xe00e]        # 413540 <__bss_start@@Base+0x3e0>
  405532:	add    rcx,0x30
  405539:	mov    rdx,QWORD PTR [rax]
  40553c:	add    rdx,0x1
  405543:	mov    QWORD PTR [rax],rdx
  405546:	mov    QWORD PTR [rbp-0x70],rcx
  40554a:	jmp    40557f <if_else_statements@@Base+0x33f>
  40554f:	mov    rax,QWORD PTR [rbp-0x68]
  405553:	mov    rcx,QWORD PTR [rax]
  405556:	add    rcx,0x1
  40555d:	mov    QWORD PTR [rax],rcx
  405560:	lea    rdi,[rip+0x8d66]        # 40e2cd <_IO_stdin_used@@Base+0x2cd>
  405567:	lea    rsi,[rip+0x8ab0]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  40556e:	mov    edx,0x14d
  405573:	lea    rcx,[rip+0x8d8c]        # 40e306 <_IO_stdin_used@@Base+0x306>
  40557a:	call   403140 <__assert_fail@plt>
  40557f:	mov    rax,QWORD PTR [rbp-0x70]
  405583:	lea    rcx,[rip+0xdfb6]        # 413540 <__bss_start@@Base+0x3e0>
  40558a:	mov    rdx,rcx
  40558d:	add    rdx,0x38
  405594:	add    rcx,0x40
  40559b:	mov    rsi,QWORD PTR [rax]
  40559e:	add    rsi,0x1
  4055a5:	mov    QWORD PTR [rax],rsi
  4055a8:	mov    rax,QWORD PTR [rbp-0x30]
  4055ac:	cmp    DWORD PTR [rax],0x4
  4055af:	mov    QWORD PTR [rbp-0x78],rdx
  4055b3:	mov    QWORD PTR [rbp-0x80],rcx
  4055b7:	jne    4055e8 <if_else_statements@@Base+0x3a8>
  4055bd:	mov    rax,QWORD PTR [rbp-0x78]
  4055c1:	lea    rcx,[rip+0xdf78]        # 413540 <__bss_start@@Base+0x3e0>
  4055c8:	add    rcx,0x48
  4055cf:	mov    rdx,QWORD PTR [rax]
  4055d2:	add    rdx,0x1
  4055d9:	mov    QWORD PTR [rax],rdx
  4055dc:	mov    QWORD PTR [rbp-0x88],rcx
  4055e3:	jmp    405618 <if_else_statements@@Base+0x3d8>
  4055e8:	mov    rax,QWORD PTR [rbp-0x80]
  4055ec:	mov    rcx,QWORD PTR [rax]
  4055ef:	add    rcx,0x1
  4055f6:	mov    QWORD PTR [rax],rcx
  4055f9:	lea    rdi,[rip+0x8cd9]        # 40e2d9 <_IO_stdin_used@@Base+0x2d9>
  405600:	lea    rsi,[rip+0x8a17]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405607:	mov    edx,0x14e
  40560c:	lea    rcx,[rip+0x8cf3]        # 40e306 <_IO_stdin_used@@Base+0x306>
  405613:	call   403140 <__assert_fail@plt>
  405618:	mov    rax,QWORD PTR [rbp-0x88]
  40561f:	mov    rcx,QWORD PTR [rax]
  405622:	add    rcx,0x1
  405629:	mov    QWORD PTR [rax],rcx
  40562c:	mov    rax,QWORD PTR [rip+0xdf5d]        # 413590 <__bss_start@@Base+0x430>
  405633:	add    rax,0x1
  405639:	mov    QWORD PTR [rip+0xdf50],rax        # 413590 <__bss_start@@Base+0x430>
  405640:	add    rsp,0x90
  405647:	pop    rbp
  405648:	ret    
  405649:	nop    DWORD PTR [rax+0x0]

0000000000405650 <body_with_two_returns@@Base>:
  405650:	push   rbp
  405651:	mov    rbp,rsp
  405654:	sub    rsp,0xb0
  40565b:	lea    rax,[rip+0xdf3e]        # 4135a0 <__bss_start@@Base+0x440>
  405662:	mov    QWORD PTR [rbp-0x38],rax
  405666:	mov    rax,QWORD PTR [rbp-0x38]
  40566a:	mov    rcx,QWORD PTR [rax]
  40566d:	add    rcx,0x1
  405674:	mov    QWORD PTR [rax],rcx
  405677:	mov    QWORD PTR [rbp-0x30],0x0
  40567f:	lea    rdi,[rbp-0x20]
  405683:	lea    rsi,[rbp-0x18]
  405687:	call   409ac0 <init_grammar@@Base>
  40568c:	mov    edi,0x40
  405691:	call   4031d0 <malloc@plt>
  405696:	mov    QWORD PTR [rbp-0x28],rax
  40569a:	mov    edi,0x4
  40569f:	call   4031d0 <malloc@plt>
  4056a4:	mov    rcx,QWORD PTR [rbp-0x28]
  4056a8:	mov    QWORD PTR [rcx],rax
  4056ab:	mov    rax,QWORD PTR [rbp-0x28]
  4056af:	mov    rax,QWORD PTR [rax]
  4056b2:	mov    rdi,rax
  4056b5:	call   407890 <init_token_obra@@Base>
  4056ba:	mov    edi,0x4
  4056bf:	call   4031d0 <malloc@plt>
  4056c4:	mov    rcx,QWORD PTR [rbp-0x28]
  4056c8:	mov    QWORD PTR [rcx+0x8],rax
  4056cc:	mov    rax,QWORD PTR [rbp-0x28]
  4056d0:	mov    rax,QWORD PTR [rax+0x8]
  4056d4:	mov    rdi,rax
  4056d7:	call   407930 <init_token_return@@Base>
  4056dc:	mov    edi,0x8
  4056e1:	call   4031d0 <malloc@plt>
  4056e6:	mov    rcx,QWORD PTR [rbp-0x28]
  4056ea:	mov    QWORD PTR [rcx+0x10],rax
  4056ee:	mov    rax,QWORD PTR [rbp-0x28]
  4056f2:	mov    rax,QWORD PTR [rax+0x10]
  4056f6:	mov    rdi,rax
  4056f9:	mov    esi,0x1
  4056fe:	call   407720 <init_token_int_value@@Base>
  405703:	mov    edi,0x4
  405708:	call   4031d0 <malloc@plt>
  40570d:	mov    rcx,QWORD PTR [rbp-0x28]
  405711:	mov    QWORD PTR [rcx+0x18],rax
  405715:	mov    rax,QWORD PTR [rbp-0x28]
  405719:	mov    rax,QWORD PTR [rax+0x18]
  40571d:	mov    rdi,rax
  405720:	call   407980 <init_token_semicolon@@Base>
  405725:	mov    edi,0x4
  40572a:	call   4031d0 <malloc@plt>
  40572f:	mov    rcx,QWORD PTR [rbp-0x28]
  405733:	mov    QWORD PTR [rcx+0x20],rax
  405737:	mov    rax,QWORD PTR [rbp-0x28]
  40573b:	mov    rax,QWORD PTR [rax+0x20]
  40573f:	mov    rdi,rax
  405742:	call   407930 <init_token_return@@Base>
  405747:	mov    edi,0x8
  40574c:	call   4031d0 <malloc@plt>
  405751:	mov    rcx,QWORD PTR [rbp-0x28]
  405755:	mov    QWORD PTR [rcx+0x28],rax
  405759:	mov    rax,QWORD PTR [rbp-0x28]
  40575d:	mov    rax,QWORD PTR [rax+0x28]
  405761:	mov    rdi,rax
  405764:	mov    esi,0x1
  405769:	call   407720 <init_token_int_value@@Base>
  40576e:	mov    edi,0x4
  405773:	call   4031d0 <malloc@plt>
  405778:	mov    rcx,QWORD PTR [rbp-0x28]
  40577c:	mov    QWORD PTR [rcx+0x30],rax
  405780:	mov    rax,QWORD PTR [rbp-0x28]
  405784:	mov    rax,QWORD PTR [rax+0x30]
  405788:	mov    rdi,rax
  40578b:	call   407980 <init_token_semicolon@@Base>
  405790:	mov    edi,0x4
  405795:	call   4031d0 <malloc@plt>
  40579a:	mov    rcx,QWORD PTR [rbp-0x28]
  40579e:	mov    QWORD PTR [rcx+0x38],rax
  4057a2:	mov    rax,QWORD PTR [rbp-0x28]
  4057a6:	mov    rax,QWORD PTR [rax+0x38]
  4057aa:	mov    rdi,rax
  4057ad:	call   4078e0 <init_token_cbra@@Base>
  4057b2:	lea    rax,[rip+0xeb97]        # 414350 <next_fake@@Base>
  4057b9:	mov    rcx,QWORD PTR [rbp-0x28]
  4057bd:	mov    QWORD PTR [rax+0x1b8],rcx
  4057c4:	mov    DWORD PTR [rax+0x1b0],0x8
  4057ce:	lea    rdi,[rbp-0x20]
  4057d2:	call   409ee0 <read_body@@Base>
  4057d7:	lea    rcx,[rip+0xddc2]        # 4135a0 <__bss_start@@Base+0x440>
  4057de:	mov    rdx,rcx
  4057e1:	add    rdx,0x8
  4057e8:	add    rcx,0x10
  4057ef:	lea    rdi,[rip+0xeb5a]        # 414350 <next_fake@@Base>
  4057f6:	mov    QWORD PTR [rbp-0x30],rax
  4057fa:	cmp    DWORD PTR [rdi+0x198],0x8
  405801:	mov    QWORD PTR [rbp-0x40],rdx
  405805:	mov    QWORD PTR [rbp-0x48],rcx
  405809:	jne    405837 <body_with_two_returns@@Base+0x1e7>
  40580f:	mov    rax,QWORD PTR [rbp-0x40]
  405813:	lea    rcx,[rip+0xdd86]        # 4135a0 <__bss_start@@Base+0x440>
  40581a:	add    rcx,0x18
  405821:	mov    rdx,QWORD PTR [rax]
  405824:	add    rdx,0x1
  40582b:	mov    QWORD PTR [rax],rdx
  40582e:	mov    QWORD PTR [rbp-0x50],rcx
  405832:	jmp    405867 <body_with_two_returns@@Base+0x217>
  405837:	mov    rax,QWORD PTR [rbp-0x48]
  40583b:	mov    rcx,QWORD PTR [rax]
  40583e:	add    rcx,0x1
  405845:	mov    QWORD PTR [rax],rcx
  405848:	lea    rdi,[rip+0x8ad1]        # 40e320 <_IO_stdin_used@@Base+0x320>
  40584f:	lea    rsi,[rip+0x87c8]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405856:	mov    edx,0x173
  40585b:	lea    rcx,[rip+0x8ad8]        # 40e33a <_IO_stdin_used@@Base+0x33a>
  405862:	call   403140 <__assert_fail@plt>
  405867:	mov    rax,QWORD PTR [rbp-0x50]
  40586b:	lea    rcx,[rip+0xdd2e]        # 4135a0 <__bss_start@@Base+0x440>
  405872:	mov    rdx,rcx
  405875:	add    rdx,0x20
  40587c:	add    rcx,0x28
  405883:	mov    rsi,QWORD PTR [rax]
  405886:	add    rsi,0x1
  40588d:	mov    QWORD PTR [rax],rsi
  405890:	cmp    QWORD PTR [rbp-0x30],0x0
  405895:	mov    QWORD PTR [rbp-0x58],rdx
  405899:	mov    QWORD PTR [rbp-0x60],rcx
  40589d:	je     4058cb <body_with_two_returns@@Base+0x27b>
  4058a3:	mov    rax,QWORD PTR [rbp-0x58]
  4058a7:	lea    rcx,[rip+0xdcf2]        # 4135a0 <__bss_start@@Base+0x440>
  4058ae:	add    rcx,0x30
  4058b5:	mov    rdx,QWORD PTR [rax]
  4058b8:	add    rdx,0x1
  4058bf:	mov    QWORD PTR [rax],rdx
  4058c2:	mov    QWORD PTR [rbp-0x68],rcx
  4058c6:	jmp    4058fb <body_with_two_returns@@Base+0x2ab>
  4058cb:	mov    rax,QWORD PTR [rbp-0x60]
  4058cf:	mov    rcx,QWORD PTR [rax]
  4058d2:	add    rcx,0x1
  4058d9:	mov    QWORD PTR [rax],rcx
  4058dc:	lea    rdi,[rip+0x89ea]        # 40e2cd <_IO_stdin_used@@Base+0x2cd>
  4058e3:	lea    rsi,[rip+0x8734]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4058ea:	mov    edx,0x174
  4058ef:	lea    rcx,[rip+0x8a44]        # 40e33a <_IO_stdin_used@@Base+0x33a>
  4058f6:	call   403140 <__assert_fail@plt>
  4058fb:	mov    rax,QWORD PTR [rbp-0x68]
  4058ff:	lea    rcx,[rip+0xdc9a]        # 4135a0 <__bss_start@@Base+0x440>
  405906:	mov    rdx,rcx
  405909:	add    rdx,0x38
  405910:	add    rcx,0x40
  405917:	mov    rsi,QWORD PTR [rax]
  40591a:	add    rsi,0x1
  405921:	mov    QWORD PTR [rax],rsi
  405924:	mov    rax,QWORD PTR [rbp-0x30]
  405928:	cmp    DWORD PTR [rax],0x3
  40592b:	mov    QWORD PTR [rbp-0x70],rdx
  40592f:	mov    QWORD PTR [rbp-0x78],rcx
  405933:	jne    405961 <body_with_two_returns@@Base+0x311>
  405939:	mov    rax,QWORD PTR [rbp-0x70]
  40593d:	lea    rcx,[rip+0xdc5c]        # 4135a0 <__bss_start@@Base+0x440>
  405944:	add    rcx,0x48
  40594b:	mov    rdx,QWORD PTR [rax]
  40594e:	add    rdx,0x1
  405955:	mov    QWORD PTR [rax],rdx
  405958:	mov    QWORD PTR [rbp-0x80],rcx
  40595c:	jmp    405991 <body_with_two_returns@@Base+0x341>
  405961:	mov    rax,QWORD PTR [rbp-0x78]
  405965:	mov    rcx,QWORD PTR [rax]
  405968:	add    rcx,0x1
  40596f:	mov    QWORD PTR [rax],rcx
  405972:	lea    rdi,[rip+0x89de]        # 40e357 <_IO_stdin_used@@Base+0x357>
  405979:	lea    rsi,[rip+0x869e]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405980:	mov    edx,0x175
  405985:	lea    rcx,[rip+0x89ae]        # 40e33a <_IO_stdin_used@@Base+0x33a>
  40598c:	call   403140 <__assert_fail@plt>
  405991:	mov    rax,QWORD PTR [rbp-0x80]
  405995:	lea    rcx,[rip+0xdc04]        # 4135a0 <__bss_start@@Base+0x440>
  40599c:	mov    rdx,rcx
  40599f:	add    rdx,0x50
  4059a6:	add    rcx,0x58
  4059ad:	mov    rsi,QWORD PTR [rax]
  4059b0:	add    rsi,0x1
  4059b7:	mov    QWORD PTR [rax],rsi
  4059ba:	mov    rax,QWORD PTR [rbp-0x30]
  4059be:	mov    rax,QWORD PTR [rax+0x8]
  4059c2:	cmp    DWORD PTR [rax],0x3
  4059c5:	mov    QWORD PTR [rbp-0x88],rdx
  4059cc:	mov    QWORD PTR [rbp-0x90],rcx
  4059d3:	jne    405a07 <body_with_two_returns@@Base+0x3b7>
  4059d9:	mov    rax,QWORD PTR [rbp-0x88]
  4059e0:	lea    rcx,[rip+0xdbb9]        # 4135a0 <__bss_start@@Base+0x440>
  4059e7:	add    rcx,0x60
  4059ee:	mov    rdx,QWORD PTR [rax]
  4059f1:	add    rdx,0x1
  4059f8:	mov    QWORD PTR [rax],rdx
  4059fb:	mov    QWORD PTR [rbp-0x98],rcx
  405a02:	jmp    405a3a <body_with_two_returns@@Base+0x3ea>
  405a07:	mov    rax,QWORD PTR [rbp-0x90]
  405a0e:	mov    rcx,QWORD PTR [rax]
  405a11:	add    rcx,0x1
  405a18:	mov    QWORD PTR [rax],rcx
  405a1b:	lea    rdi,[rip+0x894b]        # 40e36d <_IO_stdin_used@@Base+0x36d>
  405a22:	lea    rsi,[rip+0x85f5]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405a29:	mov    edx,0x176
  405a2e:	lea    rcx,[rip+0x8905]        # 40e33a <_IO_stdin_used@@Base+0x33a>
  405a35:	call   403140 <__assert_fail@plt>
  405a3a:	mov    rax,QWORD PTR [rbp-0x98]
  405a41:	lea    rcx,[rip+0xdb58]        # 4135a0 <__bss_start@@Base+0x440>
  405a48:	mov    rdx,rcx
  405a4b:	add    rdx,0x68
  405a52:	add    rcx,0x70
  405a59:	mov    rsi,QWORD PTR [rax]
  405a5c:	add    rsi,0x1
  405a63:	mov    QWORD PTR [rax],rsi
  405a66:	mov    rax,QWORD PTR [rbp-0x30]
  405a6a:	mov    rax,QWORD PTR [rax+0x8]
  405a6e:	cmp    QWORD PTR [rax+0x8],0x0
  405a73:	mov    QWORD PTR [rbp-0xa0],rdx
  405a7a:	mov    QWORD PTR [rbp-0xa8],rcx
  405a81:	jne    405ab5 <body_with_two_returns@@Base+0x465>
  405a87:	mov    rax,QWORD PTR [rbp-0xa0]
  405a8e:	lea    rcx,[rip+0xdb0b]        # 4135a0 <__bss_start@@Base+0x440>
  405a95:	add    rcx,0x78
  405a9c:	mov    rdx,QWORD PTR [rax]
  405a9f:	add    rdx,0x1
  405aa6:	mov    QWORD PTR [rax],rdx
  405aa9:	mov    QWORD PTR [rbp-0xb0],rcx
  405ab0:	jmp    405ae8 <body_with_two_returns@@Base+0x498>
  405ab5:	mov    rax,QWORD PTR [rbp-0xa8]
  405abc:	mov    rcx,QWORD PTR [rax]
  405abf:	add    rcx,0x1
  405ac6:	mov    QWORD PTR [rax],rcx
  405ac9:	lea    rdi,[rip+0x88b9]        # 40e389 <_IO_stdin_used@@Base+0x389>
  405ad0:	lea    rsi,[rip+0x8547]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405ad7:	mov    edx,0x177
  405adc:	lea    rcx,[rip+0x8857]        # 40e33a <_IO_stdin_used@@Base+0x33a>
  405ae3:	call   403140 <__assert_fail@plt>
  405ae8:	mov    rax,QWORD PTR [rbp-0xb0]
  405aef:	mov    rcx,QWORD PTR [rax]
  405af2:	add    rcx,0x1
  405af9:	mov    QWORD PTR [rax],rcx
  405afc:	mov    rax,QWORD PTR [rip+0xdb1d]        # 413620 <__bss_start@@Base+0x4c0>
  405b03:	add    rax,0x1
  405b09:	mov    QWORD PTR [rip+0xdb10],rax        # 413620 <__bss_start@@Base+0x4c0>
  405b10:	add    rsp,0xb0
  405b17:	pop    rbp
  405b18:	ret    
  405b19:	nop    DWORD PTR [rax+0x0]

0000000000405b20 <body_with_one_return@@Base>:
  405b20:	push   rbp
  405b21:	mov    rbp,rsp
  405b24:	sub    rsp,0xa0
  405b2b:	lea    rax,[rip+0xdafe]        # 413630 <__bss_start@@Base+0x4d0>
  405b32:	mov    QWORD PTR [rbp-0x38],rax
  405b36:	mov    rax,QWORD PTR [rbp-0x38]
  405b3a:	mov    rcx,QWORD PTR [rax]
  405b3d:	add    rcx,0x1
  405b44:	mov    QWORD PTR [rax],rcx
  405b47:	mov    QWORD PTR [rbp-0x30],0x0
  405b4f:	lea    rdi,[rbp-0x20]
  405b53:	lea    rsi,[rbp-0x18]
  405b57:	call   409ac0 <init_grammar@@Base>
  405b5c:	mov    edi,0x28
  405b61:	call   4031d0 <malloc@plt>
  405b66:	mov    QWORD PTR [rbp-0x28],rax
  405b6a:	mov    edi,0x4
  405b6f:	call   4031d0 <malloc@plt>
  405b74:	mov    rcx,QWORD PTR [rbp-0x28]
  405b78:	mov    QWORD PTR [rcx],rax
  405b7b:	mov    rax,QWORD PTR [rbp-0x28]
  405b7f:	mov    rax,QWORD PTR [rax]
  405b82:	mov    rdi,rax
  405b85:	call   407890 <init_token_obra@@Base>
  405b8a:	mov    edi,0x4
  405b8f:	call   4031d0 <malloc@plt>
  405b94:	mov    rcx,QWORD PTR [rbp-0x28]
  405b98:	mov    QWORD PTR [rcx+0x8],rax
  405b9c:	mov    rax,QWORD PTR [rbp-0x28]
  405ba0:	mov    rax,QWORD PTR [rax+0x8]
  405ba4:	mov    rdi,rax
  405ba7:	call   407930 <init_token_return@@Base>
  405bac:	mov    edi,0x8
  405bb1:	call   4031d0 <malloc@plt>
  405bb6:	mov    rcx,QWORD PTR [rbp-0x28]
  405bba:	mov    QWORD PTR [rcx+0x10],rax
  405bbe:	mov    rax,QWORD PTR [rbp-0x28]
  405bc2:	mov    rax,QWORD PTR [rax+0x10]
  405bc6:	mov    rdi,rax
  405bc9:	mov    esi,0x1
  405bce:	call   407720 <init_token_int_value@@Base>
  405bd3:	mov    edi,0x4
  405bd8:	call   4031d0 <malloc@plt>
  405bdd:	mov    rcx,QWORD PTR [rbp-0x28]
  405be1:	mov    QWORD PTR [rcx+0x18],rax
  405be5:	mov    rax,QWORD PTR [rbp-0x28]
  405be9:	mov    rax,QWORD PTR [rax+0x18]
  405bed:	mov    rdi,rax
  405bf0:	call   407980 <init_token_semicolon@@Base>
  405bf5:	mov    edi,0x4
  405bfa:	call   4031d0 <malloc@plt>
  405bff:	mov    rcx,QWORD PTR [rbp-0x28]
  405c03:	mov    QWORD PTR [rcx+0x20],rax
  405c07:	mov    rax,QWORD PTR [rbp-0x28]
  405c0b:	mov    rax,QWORD PTR [rax+0x20]
  405c0f:	mov    rdi,rax
  405c12:	call   4078e0 <init_token_cbra@@Base>
  405c17:	lea    rax,[rip+0xe732]        # 414350 <next_fake@@Base>
  405c1e:	mov    rcx,QWORD PTR [rbp-0x28]
  405c22:	mov    QWORD PTR [rax+0x1b8],rcx
  405c29:	mov    DWORD PTR [rax+0x1b0],0x5
  405c33:	lea    rdi,[rbp-0x20]
  405c37:	call   409ee0 <read_body@@Base>
  405c3c:	lea    rcx,[rip+0xd9ed]        # 413630 <__bss_start@@Base+0x4d0>
  405c43:	mov    rdx,rcx
  405c46:	add    rdx,0x8
  405c4d:	add    rcx,0x10
  405c54:	lea    rdi,[rip+0xe6f5]        # 414350 <next_fake@@Base>
  405c5b:	mov    QWORD PTR [rbp-0x30],rax
  405c5f:	cmp    DWORD PTR [rdi+0x198],0x5
  405c66:	mov    QWORD PTR [rbp-0x40],rdx
  405c6a:	mov    QWORD PTR [rbp-0x48],rcx
  405c6e:	jne    405c9c <body_with_one_return@@Base+0x17c>
  405c74:	mov    rax,QWORD PTR [rbp-0x40]
  405c78:	lea    rcx,[rip+0xd9b1]        # 413630 <__bss_start@@Base+0x4d0>
  405c7f:	add    rcx,0x18
  405c86:	mov    rdx,QWORD PTR [rax]
  405c89:	add    rdx,0x1
  405c90:	mov    QWORD PTR [rax],rdx
  405c93:	mov    QWORD PTR [rbp-0x50],rcx
  405c97:	jmp    405ccc <body_with_one_return@@Base+0x1ac>
  405c9c:	mov    rax,QWORD PTR [rbp-0x48]
  405ca0:	mov    rcx,QWORD PTR [rax]
  405ca3:	add    rcx,0x1
  405caa:	mov    QWORD PTR [rax],rcx
  405cad:	lea    rdi,[rip+0x8433]        # 40e0e7 <_IO_stdin_used@@Base+0xe7>
  405cb4:	lea    rsi,[rip+0x8363]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405cbb:	mov    edx,0x196
  405cc0:	lea    rcx,[rip+0x86da]        # 40e3a1 <_IO_stdin_used@@Base+0x3a1>
  405cc7:	call   403140 <__assert_fail@plt>
  405ccc:	mov    rax,QWORD PTR [rbp-0x50]
  405cd0:	lea    rcx,[rip+0xd959]        # 413630 <__bss_start@@Base+0x4d0>
  405cd7:	mov    rdx,rcx
  405cda:	add    rdx,0x20
  405ce1:	add    rcx,0x28
  405ce8:	mov    rsi,QWORD PTR [rax]
  405ceb:	add    rsi,0x1
  405cf2:	mov    QWORD PTR [rax],rsi
  405cf5:	cmp    QWORD PTR [rbp-0x30],0x0
  405cfa:	mov    QWORD PTR [rbp-0x58],rdx
  405cfe:	mov    QWORD PTR [rbp-0x60],rcx
  405d02:	je     405d30 <body_with_one_return@@Base+0x210>
  405d08:	mov    rax,QWORD PTR [rbp-0x58]
  405d0c:	lea    rcx,[rip+0xd91d]        # 413630 <__bss_start@@Base+0x4d0>
  405d13:	add    rcx,0x30
  405d1a:	mov    rdx,QWORD PTR [rax]
  405d1d:	add    rdx,0x1
  405d24:	mov    QWORD PTR [rax],rdx
  405d27:	mov    QWORD PTR [rbp-0x68],rcx
  405d2b:	jmp    405d60 <body_with_one_return@@Base+0x240>
  405d30:	mov    rax,QWORD PTR [rbp-0x60]
  405d34:	mov    rcx,QWORD PTR [rax]
  405d37:	add    rcx,0x1
  405d3e:	mov    QWORD PTR [rax],rcx
  405d41:	lea    rdi,[rip+0x8585]        # 40e2cd <_IO_stdin_used@@Base+0x2cd>
  405d48:	lea    rsi,[rip+0x82cf]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405d4f:	mov    edx,0x197
  405d54:	lea    rcx,[rip+0x8646]        # 40e3a1 <_IO_stdin_used@@Base+0x3a1>
  405d5b:	call   403140 <__assert_fail@plt>
  405d60:	mov    rax,QWORD PTR [rbp-0x68]
  405d64:	lea    rcx,[rip+0xd8c5]        # 413630 <__bss_start@@Base+0x4d0>
  405d6b:	mov    rdx,rcx
  405d6e:	add    rdx,0x38
  405d75:	add    rcx,0x40
  405d7c:	mov    rsi,QWORD PTR [rax]
  405d7f:	add    rsi,0x1
  405d86:	mov    QWORD PTR [rax],rsi
  405d89:	mov    rax,QWORD PTR [rbp-0x30]
  405d8d:	cmp    DWORD PTR [rax],0x3
  405d90:	mov    QWORD PTR [rbp-0x70],rdx
  405d94:	mov    QWORD PTR [rbp-0x78],rcx
  405d98:	jne    405dc6 <body_with_one_return@@Base+0x2a6>
  405d9e:	mov    rax,QWORD PTR [rbp-0x70]
  405da2:	lea    rcx,[rip+0xd887]        # 413630 <__bss_start@@Base+0x4d0>
  405da9:	add    rcx,0x48
  405db0:	mov    rdx,QWORD PTR [rax]
  405db3:	add    rdx,0x1
  405dba:	mov    QWORD PTR [rax],rdx
  405dbd:	mov    QWORD PTR [rbp-0x80],rcx
  405dc1:	jmp    405df6 <body_with_one_return@@Base+0x2d6>
  405dc6:	mov    rax,QWORD PTR [rbp-0x78]
  405dca:	mov    rcx,QWORD PTR [rax]
  405dcd:	add    rcx,0x1
  405dd4:	mov    QWORD PTR [rax],rcx
  405dd7:	lea    rdi,[rip+0x8579]        # 40e357 <_IO_stdin_used@@Base+0x357>
  405dde:	lea    rsi,[rip+0x8239]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405de5:	mov    edx,0x198
  405dea:	lea    rcx,[rip+0x85b0]        # 40e3a1 <_IO_stdin_used@@Base+0x3a1>
  405df1:	call   403140 <__assert_fail@plt>
  405df6:	mov    rax,QWORD PTR [rbp-0x80]
  405dfa:	lea    rcx,[rip+0xd82f]        # 413630 <__bss_start@@Base+0x4d0>
  405e01:	mov    rdx,rcx
  405e04:	add    rdx,0x50
  405e0b:	add    rcx,0x58
  405e12:	mov    rsi,QWORD PTR [rax]
  405e15:	add    rsi,0x1
  405e1c:	mov    QWORD PTR [rax],rsi
  405e1f:	mov    rax,QWORD PTR [rbp-0x30]
  405e23:	cmp    QWORD PTR [rax+0x8],0x0
  405e28:	mov    QWORD PTR [rbp-0x88],rdx
  405e2f:	mov    QWORD PTR [rbp-0x90],rcx
  405e36:	jne    405e6a <body_with_one_return@@Base+0x34a>
  405e3c:	mov    rax,QWORD PTR [rbp-0x88]
  405e43:	lea    rcx,[rip+0xd7e6]        # 413630 <__bss_start@@Base+0x4d0>
  405e4a:	add    rcx,0x60
  405e51:	mov    rdx,QWORD PTR [rax]
  405e54:	add    rdx,0x1
  405e5b:	mov    QWORD PTR [rax],rdx
  405e5e:	mov    QWORD PTR [rbp-0x98],rcx
  405e65:	jmp    405e9d <body_with_one_return@@Base+0x37d>
  405e6a:	mov    rax,QWORD PTR [rbp-0x90]
  405e71:	mov    rcx,QWORD PTR [rax]
  405e74:	add    rcx,0x1
  405e7b:	mov    QWORD PTR [rax],rcx
  405e7e:	lea    rdi,[rip+0x8538]        # 40e3bd <_IO_stdin_used@@Base+0x3bd>
  405e85:	lea    rsi,[rip+0x8192]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  405e8c:	mov    edx,0x199
  405e91:	lea    rcx,[rip+0x8509]        # 40e3a1 <_IO_stdin_used@@Base+0x3a1>
  405e98:	call   403140 <__assert_fail@plt>
  405e9d:	mov    rax,QWORD PTR [rbp-0x98]
  405ea4:	mov    rcx,QWORD PTR [rax]
  405ea7:	add    rcx,0x1
  405eae:	mov    QWORD PTR [rax],rcx
  405eb1:	mov    rax,QWORD PTR [rip+0xd7e0]        # 413698 <__bss_start@@Base+0x538>
  405eb8:	add    rax,0x1
  405ebe:	mov    QWORD PTR [rip+0xd7d3],rax        # 413698 <__bss_start@@Base+0x538>
  405ec5:	add    rsp,0xa0
  405ecc:	pop    rbp
  405ecd:	ret    
  405ece:	xchg   ax,ax

0000000000405ed0 <if_statement_inside_if_statement@@Base>:
  405ed0:	push   rbp
  405ed1:	mov    rbp,rsp
  405ed4:	sub    rsp,0x90
  405edb:	lea    rax,[rip+0xd7be]        # 4136a0 <__bss_start@@Base+0x540>
  405ee2:	mov    QWORD PTR [rbp-0x48],rax
  405ee6:	mov    rax,QWORD PTR [rbp-0x48]
  405eea:	mov    rcx,QWORD PTR [rax]
  405eed:	add    rcx,0x1
  405ef4:	mov    QWORD PTR [rax],rcx
  405ef7:	mov    QWORD PTR [rbp-0x30],0x0
  405eff:	lea    rdi,[rbp-0x20]
  405f03:	lea    rsi,[rbp-0x18]
  405f07:	call   409ac0 <init_grammar@@Base>
  405f0c:	mov    edi,0x3
  405f11:	call   4031d0 <malloc@plt>
  405f16:	mov    QWORD PTR [rbp-0x38],rax
  405f1a:	mov    edi,0x3
  405f1f:	call   4031d0 <malloc@plt>
  405f24:	mov    QWORD PTR [rbp-0x40],rax
  405f28:	mov    rax,QWORD PTR [rbp-0x38]
  405f2c:	mov    BYTE PTR [rax],0x21
  405f2f:	mov    rax,QWORD PTR [rbp-0x38]
  405f33:	mov    BYTE PTR [rax+0x1],0x3d
  405f37:	mov    rax,QWORD PTR [rbp-0x38]
  405f3b:	mov    BYTE PTR [rax+0x2],0x0
  405f3f:	mov    rax,QWORD PTR [rbp-0x40]
  405f43:	mov    BYTE PTR [rax],0x21
  405f46:	mov    rax,QWORD PTR [rbp-0x40]
  405f4a:	mov    BYTE PTR [rax+0x1],0x3d
  405f4e:	mov    rax,QWORD PTR [rbp-0x40]
  405f52:	mov    BYTE PTR [rax+0x2],0x0
  405f56:	mov    edi,0x98
  405f5b:	call   4031d0 <malloc@plt>
  405f60:	mov    QWORD PTR [rbp-0x28],rax
  405f64:	mov    edi,0x4
  405f69:	call   4031d0 <malloc@plt>
  405f6e:	mov    rcx,QWORD PTR [rbp-0x28]
  405f72:	mov    QWORD PTR [rcx],rax
  405f75:	mov    rax,QWORD PTR [rbp-0x28]
  405f79:	mov    rax,QWORD PTR [rax]
  405f7c:	mov    rdi,rax
  405f7f:	call   4077f0 <init_token_opar@@Base>
  405f84:	mov    edi,0x8
  405f89:	call   4031d0 <malloc@plt>
  405f8e:	mov    rcx,QWORD PTR [rbp-0x28]
  405f92:	mov    QWORD PTR [rcx+0x8],rax
  405f96:	mov    rax,QWORD PTR [rbp-0x28]
  405f9a:	mov    rax,QWORD PTR [rax+0x8]
  405f9e:	mov    rdi,rax
  405fa1:	mov    esi,0x1
  405fa6:	call   407720 <init_token_int_value@@Base>
  405fab:	mov    edi,0x8
  405fb0:	call   4031d0 <malloc@plt>
  405fb5:	mov    rcx,QWORD PTR [rbp-0x28]
  405fb9:	mov    QWORD PTR [rcx+0x10],rax
  405fbd:	mov    rax,QWORD PTR [rbp-0x28]
  405fc1:	mov    rax,QWORD PTR [rax+0x10]
  405fc5:	mov    rdi,rax
  405fc8:	mov    esi,0x1
  405fcd:	call   407720 <init_token_int_value@@Base>
  405fd2:	mov    edi,0x10
  405fd7:	call   4031d0 <malloc@plt>
  405fdc:	mov    rcx,QWORD PTR [rbp-0x28]
  405fe0:	mov    QWORD PTR [rcx+0x18],rax
  405fe4:	mov    rax,QWORD PTR [rbp-0x28]
  405fe8:	mov    rax,QWORD PTR [rax+0x18]
  405fec:	mov    rsi,QWORD PTR [rbp-0x38]
  405ff0:	mov    rdi,rax
  405ff3:	call   407ac0 <init_token_boolean_op@@Base>
  405ff8:	mov    edi,0x8
  405ffd:	call   4031d0 <malloc@plt>
  406002:	mov    rcx,QWORD PTR [rbp-0x28]
  406006:	mov    QWORD PTR [rcx+0x20],rax
  40600a:	mov    rax,QWORD PTR [rbp-0x28]
  40600e:	mov    rax,QWORD PTR [rax+0x20]
  406012:	mov    rdi,rax
  406015:	mov    esi,0x1
  40601a:	call   407720 <init_token_int_value@@Base>
  40601f:	mov    edi,0x4
  406024:	call   4031d0 <malloc@plt>
  406029:	mov    rcx,QWORD PTR [rbp-0x28]
  40602d:	mov    QWORD PTR [rcx+0x28],rax
  406031:	mov    rax,QWORD PTR [rbp-0x28]
  406035:	mov    rax,QWORD PTR [rax+0x28]
  406039:	mov    rdi,rax
  40603c:	call   407840 <init_token_cpar@@Base>
  406041:	mov    edi,0x4
  406046:	call   4031d0 <malloc@plt>
  40604b:	mov    rcx,QWORD PTR [rbp-0x28]
  40604f:	mov    QWORD PTR [rcx+0x30],rax
  406053:	mov    rax,QWORD PTR [rbp-0x28]
  406057:	mov    rax,QWORD PTR [rax+0x30]
  40605b:	mov    rdi,rax
  40605e:	call   407890 <init_token_obra@@Base>
  406063:	mov    edi,0x4
  406068:	call   4031d0 <malloc@plt>
  40606d:	mov    rcx,QWORD PTR [rbp-0x28]
  406071:	mov    QWORD PTR [rcx+0x38],rax
  406075:	mov    rax,QWORD PTR [rbp-0x28]
  406079:	mov    rax,QWORD PTR [rax+0x38]
  40607d:	mov    rdi,rax
  406080:	call   407a20 <init_token_if@@Base>
  406085:	mov    edi,0x4
  40608a:	call   4031d0 <malloc@plt>
  40608f:	mov    rcx,QWORD PTR [rbp-0x28]
  406093:	mov    QWORD PTR [rcx+0x40],rax
  406097:	mov    rax,QWORD PTR [rbp-0x28]
  40609b:	mov    rax,QWORD PTR [rax+0x40]
  40609f:	mov    rdi,rax
  4060a2:	call   4077f0 <init_token_opar@@Base>
  4060a7:	mov    edi,0x8
  4060ac:	call   4031d0 <malloc@plt>
  4060b1:	mov    rcx,QWORD PTR [rbp-0x28]
  4060b5:	mov    QWORD PTR [rcx+0x48],rax
  4060b9:	mov    rax,QWORD PTR [rbp-0x28]
  4060bd:	mov    rax,QWORD PTR [rax+0x48]
  4060c1:	mov    rdi,rax
  4060c4:	mov    esi,0x1
  4060c9:	call   407720 <init_token_int_value@@Base>
  4060ce:	mov    edi,0x8
  4060d3:	call   4031d0 <malloc@plt>
  4060d8:	mov    rcx,QWORD PTR [rbp-0x28]
  4060dc:	mov    QWORD PTR [rcx+0x50],rax
  4060e0:	mov    rax,QWORD PTR [rbp-0x28]
  4060e4:	mov    rax,QWORD PTR [rax+0x50]
  4060e8:	mov    rdi,rax
  4060eb:	mov    esi,0x1
  4060f0:	call   407720 <init_token_int_value@@Base>
  4060f5:	mov    edi,0x10
  4060fa:	call   4031d0 <malloc@plt>
  4060ff:	mov    rcx,QWORD PTR [rbp-0x28]
  406103:	mov    QWORD PTR [rcx+0x58],rax
  406107:	mov    rax,QWORD PTR [rbp-0x28]
  40610b:	mov    rax,QWORD PTR [rax+0x58]
  40610f:	mov    rsi,QWORD PTR [rbp-0x40]
  406113:	mov    rdi,rax
  406116:	call   407ac0 <init_token_boolean_op@@Base>
  40611b:	mov    edi,0x8
  406120:	call   4031d0 <malloc@plt>
  406125:	mov    rcx,QWORD PTR [rbp-0x28]
  406129:	mov    QWORD PTR [rcx+0x60],rax
  40612d:	mov    rax,QWORD PTR [rbp-0x28]
  406131:	mov    rax,QWORD PTR [rax+0x60]
  406135:	mov    rdi,rax
  406138:	mov    esi,0x1
  40613d:	call   407720 <init_token_int_value@@Base>
  406142:	mov    edi,0x4
  406147:	call   4031d0 <malloc@plt>
  40614c:	mov    rcx,QWORD PTR [rbp-0x28]
  406150:	mov    QWORD PTR [rcx+0x68],rax
  406154:	mov    rax,QWORD PTR [rbp-0x28]
  406158:	mov    rax,QWORD PTR [rax+0x68]
  40615c:	mov    rdi,rax
  40615f:	call   407840 <init_token_cpar@@Base>
  406164:	mov    edi,0x4
  406169:	call   4031d0 <malloc@plt>
  40616e:	mov    rcx,QWORD PTR [rbp-0x28]
  406172:	mov    QWORD PTR [rcx+0x70],rax
  406176:	mov    rax,QWORD PTR [rbp-0x28]
  40617a:	mov    rax,QWORD PTR [rax+0x70]
  40617e:	mov    rdi,rax
  406181:	call   407890 <init_token_obra@@Base>
  406186:	mov    edi,0x4
  40618b:	call   4031d0 <malloc@plt>
  406190:	mov    rcx,QWORD PTR [rbp-0x28]
  406194:	mov    QWORD PTR [rcx+0x78],rax
  406198:	mov    rax,QWORD PTR [rbp-0x28]
  40619c:	mov    rax,QWORD PTR [rax+0x78]
  4061a0:	mov    rdi,rax
  4061a3:	call   4078e0 <init_token_cbra@@Base>
  4061a8:	mov    edi,0x4
  4061ad:	call   4031d0 <malloc@plt>
  4061b2:	mov    rcx,QWORD PTR [rbp-0x28]
  4061b6:	mov    QWORD PTR [rcx+0x80],rax
  4061bd:	mov    rax,QWORD PTR [rbp-0x28]
  4061c1:	mov    rax,QWORD PTR [rax+0x80]
  4061c8:	mov    rdi,rax
  4061cb:	call   4078e0 <init_token_cbra@@Base>
  4061d0:	mov    edi,0x4
  4061d5:	call   4031d0 <malloc@plt>
  4061da:	mov    rcx,QWORD PTR [rbp-0x28]
  4061de:	mov    QWORD PTR [rcx+0x88],rax
  4061e5:	mov    rax,QWORD PTR [rbp-0x28]
  4061e9:	mov    rax,QWORD PTR [rax+0x88]
  4061f0:	mov    rdi,rax
  4061f3:	call   4078e0 <init_token_cbra@@Base>
  4061f8:	mov    edi,0x4
  4061fd:	call   4031d0 <malloc@plt>
  406202:	mov    rcx,QWORD PTR [rbp-0x28]
  406206:	mov    QWORD PTR [rcx+0x90],rax
  40620d:	mov    rax,QWORD PTR [rbp-0x28]
  406211:	mov    rax,QWORD PTR [rax+0x90]
  406218:	mov    rdi,rax
  40621b:	call   4079d0 <init_token_eof@@Base>
  406220:	lea    rax,[rip+0xe129]        # 414350 <next_fake@@Base>
  406227:	mov    rcx,QWORD PTR [rbp-0x28]
  40622b:	mov    QWORD PTR [rax+0x1b8],rcx
  406232:	mov    DWORD PTR [rax+0x1b0],0x13
  40623c:	lea    rdi,[rbp-0x20]
  406240:	call   40a4c0 <read_if_statement@@Base>
  406245:	lea    rcx,[rip+0xd454]        # 4136a0 <__bss_start@@Base+0x540>
  40624c:	mov    rdx,rcx
  40624f:	add    rdx,0x8
  406256:	add    rcx,0x10
  40625d:	lea    rdi,[rip+0xe0ec]        # 414350 <next_fake@@Base>
  406264:	mov    QWORD PTR [rbp-0x30],rax
  406268:	cmp    DWORD PTR [rdi+0x198],0x13
  40626f:	mov    QWORD PTR [rbp-0x50],rdx
  406273:	mov    QWORD PTR [rbp-0x58],rcx
  406277:	jne    4062a5 <if_statement_inside_if_statement@@Base+0x3d5>
  40627d:	mov    rax,QWORD PTR [rbp-0x50]
  406281:	lea    rcx,[rip+0xd418]        # 4136a0 <__bss_start@@Base+0x540>
  406288:	add    rcx,0x18
  40628f:	mov    rdx,QWORD PTR [rax]
  406292:	add    rdx,0x1
  406299:	mov    QWORD PTR [rax],rdx
  40629c:	mov    QWORD PTR [rbp-0x60],rcx
  4062a0:	jmp    4062d5 <if_statement_inside_if_statement@@Base+0x405>
  4062a5:	mov    rax,QWORD PTR [rbp-0x58]
  4062a9:	mov    rcx,QWORD PTR [rax]
  4062ac:	add    rcx,0x1
  4062b3:	mov    QWORD PTR [rax],rcx
  4062b6:	lea    rdi,[rip+0x8112]        # 40e3cf <_IO_stdin_used@@Base+0x3cf>
  4062bd:	lea    rsi,[rip+0x7d5a]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4062c4:	mov    edx,0x1e0
  4062c9:	lea    rcx,[rip+0x811a]        # 40e3ea <_IO_stdin_used@@Base+0x3ea>
  4062d0:	call   403140 <__assert_fail@plt>
  4062d5:	mov    rax,QWORD PTR [rbp-0x60]
  4062d9:	lea    rcx,[rip+0xd3c0]        # 4136a0 <__bss_start@@Base+0x540>
  4062e0:	mov    rdx,rcx
  4062e3:	add    rdx,0x20
  4062ea:	add    rcx,0x28
  4062f1:	mov    rsi,QWORD PTR [rax]
  4062f4:	add    rsi,0x1
  4062fb:	mov    QWORD PTR [rax],rsi
  4062fe:	cmp    QWORD PTR [rbp-0x30],0x0
  406303:	mov    QWORD PTR [rbp-0x68],rdx
  406307:	mov    QWORD PTR [rbp-0x70],rcx
  40630b:	je     406339 <if_statement_inside_if_statement@@Base+0x469>
  406311:	mov    rax,QWORD PTR [rbp-0x68]
  406315:	lea    rcx,[rip+0xd384]        # 4136a0 <__bss_start@@Base+0x540>
  40631c:	add    rcx,0x30
  406323:	mov    rdx,QWORD PTR [rax]
  406326:	add    rdx,0x1
  40632d:	mov    QWORD PTR [rax],rdx
  406330:	mov    QWORD PTR [rbp-0x78],rcx
  406334:	jmp    406369 <if_statement_inside_if_statement@@Base+0x499>
  406339:	mov    rax,QWORD PTR [rbp-0x70]
  40633d:	mov    rcx,QWORD PTR [rax]
  406340:	add    rcx,0x1
  406347:	mov    QWORD PTR [rax],rcx
  40634a:	lea    rdi,[rip+0x7f7c]        # 40e2cd <_IO_stdin_used@@Base+0x2cd>
  406351:	lea    rsi,[rip+0x7cc6]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  406358:	mov    edx,0x1e1
  40635d:	lea    rcx,[rip+0x8086]        # 40e3ea <_IO_stdin_used@@Base+0x3ea>
  406364:	call   403140 <__assert_fail@plt>
  406369:	mov    rax,QWORD PTR [rbp-0x78]
  40636d:	lea    rcx,[rip+0xd32c]        # 4136a0 <__bss_start@@Base+0x540>
  406374:	mov    rdx,rcx
  406377:	add    rdx,0x38
  40637e:	add    rcx,0x40
  406385:	mov    rsi,QWORD PTR [rax]
  406388:	add    rsi,0x1
  40638f:	mov    QWORD PTR [rax],rsi
  406392:	mov    rax,QWORD PTR [rbp-0x30]
  406396:	cmp    DWORD PTR [rax],0x4
  406399:	mov    QWORD PTR [rbp-0x80],rdx
  40639d:	mov    QWORD PTR [rbp-0x88],rcx
  4063a4:	jne    4063d5 <if_statement_inside_if_statement@@Base+0x505>
  4063aa:	mov    rax,QWORD PTR [rbp-0x80]
  4063ae:	lea    rcx,[rip+0xd2eb]        # 4136a0 <__bss_start@@Base+0x540>
  4063b5:	add    rcx,0x48
  4063bc:	mov    rdx,QWORD PTR [rax]
  4063bf:	add    rdx,0x1
  4063c6:	mov    QWORD PTR [rax],rdx
  4063c9:	mov    QWORD PTR [rbp-0x90],rcx
  4063d0:	jmp    406408 <if_statement_inside_if_statement@@Base+0x538>
  4063d5:	mov    rax,QWORD PTR [rbp-0x88]
  4063dc:	mov    rcx,QWORD PTR [rax]
  4063df:	add    rcx,0x1
  4063e6:	mov    QWORD PTR [rax],rcx
  4063e9:	lea    rdi,[rip+0x7ee9]        # 40e2d9 <_IO_stdin_used@@Base+0x2d9>
  4063f0:	lea    rsi,[rip+0x7c27]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4063f7:	mov    edx,0x1e2
  4063fc:	lea    rcx,[rip+0x7fe7]        # 40e3ea <_IO_stdin_used@@Base+0x3ea>
  406403:	call   403140 <__assert_fail@plt>
  406408:	mov    rax,QWORD PTR [rbp-0x90]
  40640f:	mov    rcx,QWORD PTR [rax]
  406412:	add    rcx,0x1
  406419:	mov    QWORD PTR [rax],rcx
  40641c:	mov    rax,QWORD PTR [rip+0xd2cd]        # 4136f0 <__bss_start@@Base+0x590>
  406423:	add    rax,0x1
  406429:	mov    QWORD PTR [rip+0xd2c0],rax        # 4136f0 <__bss_start@@Base+0x590>
  406430:	add    rsp,0x90
  406437:	pop    rbp
  406438:	ret    
  406439:	nop    DWORD PTR [rax+0x0]

0000000000406440 <if_statement_inside_else_statement@@Base>:
  406440:	push   rbp
  406441:	mov    rbp,rsp
  406444:	sub    rsp,0x90
  40644b:	lea    rax,[rip+0xd2ae]        # 413700 <__bss_start@@Base+0x5a0>
  406452:	mov    QWORD PTR [rbp-0x48],rax
  406456:	mov    rax,QWORD PTR [rbp-0x48]
  40645a:	mov    rcx,QWORD PTR [rax]
  40645d:	add    rcx,0x1
  406464:	mov    QWORD PTR [rax],rcx
  406467:	mov    QWORD PTR [rbp-0x30],0x0
  40646f:	lea    rdi,[rbp-0x20]
  406473:	lea    rsi,[rbp-0x18]
  406477:	call   409ac0 <init_grammar@@Base>
  40647c:	mov    edi,0x3
  406481:	call   4031d0 <malloc@plt>
  406486:	mov    QWORD PTR [rbp-0x38],rax
  40648a:	mov    edi,0x3
  40648f:	call   4031d0 <malloc@plt>
  406494:	mov    QWORD PTR [rbp-0x40],rax
  406498:	mov    rax,QWORD PTR [rbp-0x38]
  40649c:	mov    BYTE PTR [rax],0x21
  40649f:	mov    rax,QWORD PTR [rbp-0x38]
  4064a3:	mov    BYTE PTR [rax+0x1],0x3d
  4064a7:	mov    rax,QWORD PTR [rbp-0x38]
  4064ab:	mov    BYTE PTR [rax+0x2],0x0
  4064af:	mov    rax,QWORD PTR [rbp-0x40]
  4064b3:	mov    BYTE PTR [rax],0x21
  4064b6:	mov    rax,QWORD PTR [rbp-0x40]
  4064ba:	mov    BYTE PTR [rax+0x1],0x3d
  4064be:	mov    rax,QWORD PTR [rbp-0x40]
  4064c2:	mov    BYTE PTR [rax+0x2],0x0
  4064c6:	mov    edi,0xa8
  4064cb:	call   4031d0 <malloc@plt>
  4064d0:	mov    QWORD PTR [rbp-0x28],rax
  4064d4:	mov    edi,0x4
  4064d9:	call   4031d0 <malloc@plt>
  4064de:	mov    rcx,QWORD PTR [rbp-0x28]
  4064e2:	mov    QWORD PTR [rcx],rax
  4064e5:	mov    rax,QWORD PTR [rbp-0x28]
  4064e9:	mov    rax,QWORD PTR [rax]
  4064ec:	mov    rdi,rax
  4064ef:	call   4077f0 <init_token_opar@@Base>
  4064f4:	mov    edi,0x8
  4064f9:	call   4031d0 <malloc@plt>
  4064fe:	mov    rcx,QWORD PTR [rbp-0x28]
  406502:	mov    QWORD PTR [rcx+0x8],rax
  406506:	mov    rax,QWORD PTR [rbp-0x28]
  40650a:	mov    rax,QWORD PTR [rax+0x8]
  40650e:	mov    rdi,rax
  406511:	mov    esi,0x1
  406516:	call   407720 <init_token_int_value@@Base>
  40651b:	mov    edi,0x8
  406520:	call   4031d0 <malloc@plt>
  406525:	mov    rcx,QWORD PTR [rbp-0x28]
  406529:	mov    QWORD PTR [rcx+0x10],rax
  40652d:	mov    rax,QWORD PTR [rbp-0x28]
  406531:	mov    rax,QWORD PTR [rax+0x10]
  406535:	mov    rdi,rax
  406538:	mov    esi,0x1
  40653d:	call   407720 <init_token_int_value@@Base>
  406542:	mov    edi,0x10
  406547:	call   4031d0 <malloc@plt>
  40654c:	mov    rcx,QWORD PTR [rbp-0x28]
  406550:	mov    QWORD PTR [rcx+0x18],rax
  406554:	mov    rax,QWORD PTR [rbp-0x28]
  406558:	mov    rax,QWORD PTR [rax+0x18]
  40655c:	mov    rsi,QWORD PTR [rbp-0x38]
  406560:	mov    rdi,rax
  406563:	call   407ac0 <init_token_boolean_op@@Base>
  406568:	mov    edi,0x8
  40656d:	call   4031d0 <malloc@plt>
  406572:	mov    rcx,QWORD PTR [rbp-0x28]
  406576:	mov    QWORD PTR [rcx+0x20],rax
  40657a:	mov    rax,QWORD PTR [rbp-0x28]
  40657e:	mov    rax,QWORD PTR [rax+0x20]
  406582:	mov    rdi,rax
  406585:	mov    esi,0x1
  40658a:	call   407720 <init_token_int_value@@Base>
  40658f:	mov    edi,0x4
  406594:	call   4031d0 <malloc@plt>
  406599:	mov    rcx,QWORD PTR [rbp-0x28]
  40659d:	mov    QWORD PTR [rcx+0x28],rax
  4065a1:	mov    rax,QWORD PTR [rbp-0x28]
  4065a5:	mov    rax,QWORD PTR [rax+0x28]
  4065a9:	mov    rdi,rax
  4065ac:	call   407840 <init_token_cpar@@Base>
  4065b1:	mov    edi,0x4
  4065b6:	call   4031d0 <malloc@plt>
  4065bb:	mov    rcx,QWORD PTR [rbp-0x28]
  4065bf:	mov    QWORD PTR [rcx+0x30],rax
  4065c3:	mov    rax,QWORD PTR [rbp-0x28]
  4065c7:	mov    rax,QWORD PTR [rax+0x30]
  4065cb:	mov    rdi,rax
  4065ce:	call   407890 <init_token_obra@@Base>
  4065d3:	mov    edi,0x4
  4065d8:	call   4031d0 <malloc@plt>
  4065dd:	mov    rcx,QWORD PTR [rbp-0x28]
  4065e1:	mov    QWORD PTR [rcx+0x38],rax
  4065e5:	mov    rax,QWORD PTR [rbp-0x28]
  4065e9:	mov    rax,QWORD PTR [rax+0x38]
  4065ed:	mov    rdi,rax
  4065f0:	call   4078e0 <init_token_cbra@@Base>
  4065f5:	mov    edi,0x4
  4065fa:	call   4031d0 <malloc@plt>
  4065ff:	mov    rcx,QWORD PTR [rbp-0x28]
  406603:	mov    QWORD PTR [rcx+0x40],rax
  406607:	mov    rax,QWORD PTR [rbp-0x28]
  40660b:	mov    rax,QWORD PTR [rax+0x40]
  40660f:	mov    rdi,rax
  406612:	call   407a70 <init_token_else@@Base>
  406617:	mov    edi,0x4
  40661c:	call   4031d0 <malloc@plt>
  406621:	mov    rcx,QWORD PTR [rbp-0x28]
  406625:	mov    QWORD PTR [rcx+0x48],rax
  406629:	mov    rax,QWORD PTR [rbp-0x28]
  40662d:	mov    rax,QWORD PTR [rax+0x48]
  406631:	mov    rdi,rax
  406634:	call   407890 <init_token_obra@@Base>
  406639:	mov    edi,0x4
  40663e:	call   4031d0 <malloc@plt>
  406643:	mov    rcx,QWORD PTR [rbp-0x28]
  406647:	mov    QWORD PTR [rcx+0x50],rax
  40664b:	mov    rax,QWORD PTR [rbp-0x28]
  40664f:	mov    rax,QWORD PTR [rax+0x50]
  406653:	mov    rdi,rax
  406656:	call   407a20 <init_token_if@@Base>
  40665b:	mov    edi,0x4
  406660:	call   4031d0 <malloc@plt>
  406665:	mov    rcx,QWORD PTR [rbp-0x28]
  406669:	mov    QWORD PTR [rcx+0x58],rax
  40666d:	mov    rax,QWORD PTR [rbp-0x28]
  406671:	mov    rax,QWORD PTR [rax+0x58]
  406675:	mov    rdi,rax
  406678:	call   4077f0 <init_token_opar@@Base>
  40667d:	mov    edi,0x8
  406682:	call   4031d0 <malloc@plt>
  406687:	mov    rcx,QWORD PTR [rbp-0x28]
  40668b:	mov    QWORD PTR [rcx+0x60],rax
  40668f:	mov    rax,QWORD PTR [rbp-0x28]
  406693:	mov    rax,QWORD PTR [rax+0x60]
  406697:	mov    rdi,rax
  40669a:	mov    esi,0x1
  40669f:	call   407720 <init_token_int_value@@Base>
  4066a4:	mov    edi,0x8
  4066a9:	call   4031d0 <malloc@plt>
  4066ae:	mov    rcx,QWORD PTR [rbp-0x28]
  4066b2:	mov    QWORD PTR [rcx+0x68],rax
  4066b6:	mov    rax,QWORD PTR [rbp-0x28]
  4066ba:	mov    rax,QWORD PTR [rax+0x68]
  4066be:	mov    rdi,rax
  4066c1:	mov    esi,0x1
  4066c6:	call   407720 <init_token_int_value@@Base>
  4066cb:	mov    edi,0x10
  4066d0:	call   4031d0 <malloc@plt>
  4066d5:	mov    rcx,QWORD PTR [rbp-0x28]
  4066d9:	mov    QWORD PTR [rcx+0x70],rax
  4066dd:	mov    rax,QWORD PTR [rbp-0x28]
  4066e1:	mov    rax,QWORD PTR [rax+0x70]
  4066e5:	mov    rsi,QWORD PTR [rbp-0x40]
  4066e9:	mov    rdi,rax
  4066ec:	call   407ac0 <init_token_boolean_op@@Base>
  4066f1:	mov    edi,0x8
  4066f6:	call   4031d0 <malloc@plt>
  4066fb:	mov    rcx,QWORD PTR [rbp-0x28]
  4066ff:	mov    QWORD PTR [rcx+0x78],rax
  406703:	mov    rax,QWORD PTR [rbp-0x28]
  406707:	mov    rax,QWORD PTR [rax+0x78]
  40670b:	mov    rdi,rax
  40670e:	mov    esi,0x1
  406713:	call   407720 <init_token_int_value@@Base>
  406718:	mov    edi,0x4
  40671d:	call   4031d0 <malloc@plt>
  406722:	mov    rcx,QWORD PTR [rbp-0x28]
  406726:	mov    QWORD PTR [rcx+0x80],rax
  40672d:	mov    rax,QWORD PTR [rbp-0x28]
  406731:	mov    rax,QWORD PTR [rax+0x80]
  406738:	mov    rdi,rax
  40673b:	call   407840 <init_token_cpar@@Base>
  406740:	mov    edi,0x4
  406745:	call   4031d0 <malloc@plt>
  40674a:	mov    rcx,QWORD PTR [rbp-0x28]
  40674e:	mov    QWORD PTR [rcx+0x88],rax
  406755:	mov    rax,QWORD PTR [rbp-0x28]
  406759:	mov    rax,QWORD PTR [rax+0x88]
  406760:	mov    rdi,rax
  406763:	call   407890 <init_token_obra@@Base>
  406768:	mov    edi,0x4
  40676d:	call   4031d0 <malloc@plt>
  406772:	mov    rcx,QWORD PTR [rbp-0x28]
  406776:	mov    QWORD PTR [rcx+0x90],rax
  40677d:	mov    rax,QWORD PTR [rbp-0x28]
  406781:	mov    rax,QWORD PTR [rax+0x90]
  406788:	mov    rdi,rax
  40678b:	call   4078e0 <init_token_cbra@@Base>
  406790:	mov    edi,0x4
  406795:	call   4031d0 <malloc@plt>
  40679a:	mov    rcx,QWORD PTR [rbp-0x28]
  40679e:	mov    QWORD PTR [rcx+0x98],rax
  4067a5:	mov    rax,QWORD PTR [rbp-0x28]
  4067a9:	mov    rax,QWORD PTR [rax+0x98]
  4067b0:	mov    rdi,rax
  4067b3:	call   4078e0 <init_token_cbra@@Base>
  4067b8:	mov    edi,0x4
  4067bd:	call   4031d0 <malloc@plt>
  4067c2:	mov    rcx,QWORD PTR [rbp-0x28]
  4067c6:	mov    QWORD PTR [rcx+0xa0],rax
  4067cd:	mov    rax,QWORD PTR [rbp-0x28]
  4067d1:	mov    rax,QWORD PTR [rax+0xa0]
  4067d8:	mov    rdi,rax
  4067db:	call   4078e0 <init_token_cbra@@Base>
  4067e0:	lea    rax,[rip+0xdb69]        # 414350 <next_fake@@Base>
  4067e7:	mov    rcx,QWORD PTR [rbp-0x28]
  4067eb:	mov    QWORD PTR [rax+0x1b8],rcx
  4067f2:	mov    DWORD PTR [rax+0x1b0],0x15
  4067fc:	lea    rdi,[rbp-0x20]
  406800:	call   40a4c0 <read_if_statement@@Base>
  406805:	lea    rcx,[rip+0xcef4]        # 413700 <__bss_start@@Base+0x5a0>
  40680c:	mov    rdx,rcx
  40680f:	add    rdx,0x8
  406816:	add    rcx,0x10
  40681d:	lea    rdi,[rip+0xdb2c]        # 414350 <next_fake@@Base>
  406824:	mov    QWORD PTR [rbp-0x30],rax
  406828:	cmp    DWORD PTR [rdi+0x198],0x15
  40682f:	mov    QWORD PTR [rbp-0x50],rdx
  406833:	mov    QWORD PTR [rbp-0x58],rcx
  406837:	jne    406865 <if_statement_inside_else_statement@@Base+0x425>
  40683d:	mov    rax,QWORD PTR [rbp-0x50]
  406841:	lea    rcx,[rip+0xceb8]        # 413700 <__bss_start@@Base+0x5a0>
  406848:	add    rcx,0x18
  40684f:	mov    rdx,QWORD PTR [rax]
  406852:	add    rdx,0x1
  406859:	mov    QWORD PTR [rax],rdx
  40685c:	mov    QWORD PTR [rbp-0x60],rcx
  406860:	jmp    406895 <if_statement_inside_else_statement@@Base+0x455>
  406865:	mov    rax,QWORD PTR [rbp-0x58]
  406869:	mov    rcx,QWORD PTR [rax]
  40686c:	add    rcx,0x1
  406873:	mov    QWORD PTR [rax],rcx
  406876:	lea    rdi,[rip+0x7b95]        # 40e412 <_IO_stdin_used@@Base+0x412>
  40687d:	lea    rsi,[rip+0x779a]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  406884:	mov    edx,0x22e
  406889:	lea    rcx,[rip+0x7b9d]        # 40e42d <_IO_stdin_used@@Base+0x42d>
  406890:	call   403140 <__assert_fail@plt>
  406895:	mov    rax,QWORD PTR [rbp-0x60]
  406899:	lea    rcx,[rip+0xce60]        # 413700 <__bss_start@@Base+0x5a0>
  4068a0:	mov    rdx,rcx
  4068a3:	add    rdx,0x20
  4068aa:	add    rcx,0x28
  4068b1:	mov    rsi,QWORD PTR [rax]
  4068b4:	add    rsi,0x1
  4068bb:	mov    QWORD PTR [rax],rsi
  4068be:	cmp    QWORD PTR [rbp-0x30],0x0
  4068c3:	mov    QWORD PTR [rbp-0x68],rdx
  4068c7:	mov    QWORD PTR [rbp-0x70],rcx
  4068cb:	je     4068f9 <if_statement_inside_else_statement@@Base+0x4b9>
  4068d1:	mov    rax,QWORD PTR [rbp-0x68]
  4068d5:	lea    rcx,[rip+0xce24]        # 413700 <__bss_start@@Base+0x5a0>
  4068dc:	add    rcx,0x30
  4068e3:	mov    rdx,QWORD PTR [rax]
  4068e6:	add    rdx,0x1
  4068ed:	mov    QWORD PTR [rax],rdx
  4068f0:	mov    QWORD PTR [rbp-0x78],rcx
  4068f4:	jmp    406929 <if_statement_inside_else_statement@@Base+0x4e9>
  4068f9:	mov    rax,QWORD PTR [rbp-0x70]
  4068fd:	mov    rcx,QWORD PTR [rax]
  406900:	add    rcx,0x1
  406907:	mov    QWORD PTR [rax],rcx
  40690a:	lea    rdi,[rip+0x79bc]        # 40e2cd <_IO_stdin_used@@Base+0x2cd>
  406911:	lea    rsi,[rip+0x7706]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  406918:	mov    edx,0x22f
  40691d:	lea    rcx,[rip+0x7b09]        # 40e42d <_IO_stdin_used@@Base+0x42d>
  406924:	call   403140 <__assert_fail@plt>
  406929:	mov    rax,QWORD PTR [rbp-0x78]
  40692d:	lea    rcx,[rip+0xcdcc]        # 413700 <__bss_start@@Base+0x5a0>
  406934:	mov    rdx,rcx
  406937:	add    rdx,0x38
  40693e:	add    rcx,0x40
  406945:	mov    rsi,QWORD PTR [rax]
  406948:	add    rsi,0x1
  40694f:	mov    QWORD PTR [rax],rsi
  406952:	mov    rax,QWORD PTR [rbp-0x30]
  406956:	cmp    DWORD PTR [rax],0x4
  406959:	mov    QWORD PTR [rbp-0x80],rdx
  40695d:	mov    QWORD PTR [rbp-0x88],rcx
  406964:	jne    406995 <if_statement_inside_else_statement@@Base+0x555>
  40696a:	mov    rax,QWORD PTR [rbp-0x80]
  40696e:	lea    rcx,[rip+0xcd8b]        # 413700 <__bss_start@@Base+0x5a0>
  406975:	add    rcx,0x48
  40697c:	mov    rdx,QWORD PTR [rax]
  40697f:	add    rdx,0x1
  406986:	mov    QWORD PTR [rax],rdx
  406989:	mov    QWORD PTR [rbp-0x90],rcx
  406990:	jmp    4069c8 <if_statement_inside_else_statement@@Base+0x588>
  406995:	mov    rax,QWORD PTR [rbp-0x88]
  40699c:	mov    rcx,QWORD PTR [rax]
  40699f:	add    rcx,0x1
  4069a6:	mov    QWORD PTR [rax],rcx
  4069a9:	lea    rdi,[rip+0x7929]        # 40e2d9 <_IO_stdin_used@@Base+0x2d9>
  4069b0:	lea    rsi,[rip+0x7667]        # 40e01e <_IO_stdin_used@@Base+0x1e>
  4069b7:	mov    edx,0x230
  4069bc:	lea    rcx,[rip+0x7a6a]        # 40e42d <_IO_stdin_used@@Base+0x42d>
  4069c3:	call   403140 <__assert_fail@plt>
  4069c8:	mov    rax,QWORD PTR [rbp-0x90]
  4069cf:	mov    rcx,QWORD PTR [rax]
  4069d2:	add    rcx,0x1
  4069d9:	mov    QWORD PTR [rax],rcx
  4069dc:	mov    rax,QWORD PTR [rip+0xcd6d]        # 413750 <__bss_start@@Base+0x5f0>
  4069e3:	add    rax,0x1
  4069e9:	mov    QWORD PTR [rip+0xcd60],rax        # 413750 <__bss_start@@Base+0x5f0>
  4069f0:	add    rsp,0x90
  4069f7:	pop    rbp
  4069f8:	ret    
  4069f9:	nop    DWORD PTR [rax+0x0]

0000000000406a00 <main@@Base>:
  406a00:	push   rbp
  406a01:	mov    rbp,rsp
  406a04:	sub    rsp,0x90
  406a0b:	lea    rax,[rip+0xcd46]        # 413758 <__bss_start@@Base+0x5f8>
  406a12:	mov    QWORD PTR [rbp-0x10],rax
  406a16:	mov    rax,QWORD PTR [rbp-0x10]
  406a1a:	xor    ecx,ecx
  406a1c:	mov    esi,ecx
  406a1e:	mov    rdx,QWORD PTR [rip+0xc5bb]        # 412fe0 <stdout@GLIBC_2.2.5>
  406a25:	mov    rdi,QWORD PTR [rax]
  406a28:	add    rdi,0x1
  406a2f:	mov    QWORD PTR [rax],rdi
  406a32:	mov    rax,QWORD PTR [rip+0xcd27]        # 413760 <__bss_start@@Base+0x600>
  406a39:	add    rax,0x1
  406a3f:	mov    QWORD PTR [rip+0xcd1a],rax        # 413760 <__bss_start@@Base+0x600>
  406a46:	mov    DWORD PTR [rbp-0x4],0x0
  406a4d:	mov    rdi,QWORD PTR [rdx]
  406a50:	call   4030f0 <setbuf@plt>
  406a55:	mov    rax,QWORD PTR [rip+0xc584]        # 412fe0 <stdout@GLIBC_2.2.5>
  406a5c:	mov    rdi,QWORD PTR [rax]
  406a5f:	lea    rsi,[rip+0x7b94]        # 40e5fa <_IO_stdin_used@@Base+0x5fa>
  406a66:	mov    al,0x0
  406a68:	call   403170 <fprintf@plt>
  406a6d:	mov    rdx,QWORD PTR [rip+0xc56c]        # 412fe0 <stdout@GLIBC_2.2.5>
  406a74:	mov    rdi,QWORD PTR [rdx]
  406a77:	lea    rsi,[rip+0x79d9]        # 40e457 <_IO_stdin_used@@Base+0x457>
  406a7e:	mov    DWORD PTR [rbp-0x14],eax
  406a81:	mov    al,0x0
  406a83:	call   403170 <fprintf@plt>
  406a88:	mov    rdx,QWORD PTR [rip+0xc551]        # 412fe0 <stdout@GLIBC_2.2.5>
  406a8f:	mov    rdi,QWORD PTR [rdx]
  406a92:	lea    rsi,[rip+0x79cd]        # 40e466 <_IO_stdin_used@@Base+0x466>
  406a99:	mov    DWORD PTR [rbp-0x18],eax
  406a9c:	mov    al,0x0
  406a9e:	call   403170 <fprintf@plt>
  406aa3:	xor    ecx,ecx
  406aa5:	mov    edi,ecx
  406aa7:	mov    DWORD PTR [rbp-0x1c],eax
  406aaa:	call   4031e0 <fflush@plt>
  406aaf:	lea    rdi,[rip+0x79c0]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406ab6:	lea    rsi,[rip+0x79cb]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406abd:	lea    rdx,[rip+0x79d0]        # 40e494 <_IO_stdin_used@@Base+0x494>
  406ac4:	mov    DWORD PTR [rbp-0x20],eax
  406ac7:	mov    al,0x0
  406ac9:	call   403110 <printf@plt>
  406ace:	mov    DWORD PTR [rbp-0x24],eax
  406ad1:	call   403a90 <setup@@Base>
  406ad6:	call   403ae0 <no_int_as_first_stuff@@Base>
  406adb:	lea    rdi,[rip+0x79c8]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406ae2:	mov    al,0x0
  406ae4:	call   403110 <printf@plt>
  406ae9:	lea    rdi,[rip+0x7986]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406af0:	lea    rsi,[rip+0x7991]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406af7:	lea    rdx,[rip+0x79b6]        # 40e4b4 <_IO_stdin_used@@Base+0x4b4>
  406afe:	mov    DWORD PTR [rbp-0x28],eax
  406b01:	mov    al,0x0
  406b03:	call   403110 <printf@plt>
  406b08:	mov    DWORD PTR [rbp-0x2c],eax
  406b0b:	call   403a90 <setup@@Base>
  406b10:	call   403ca0 <int_but_not_followed_by_function@@Base>
  406b15:	lea    rdi,[rip+0x798e]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406b1c:	mov    al,0x0
  406b1e:	call   403110 <printf@plt>
  406b23:	lea    rdi,[rip+0x794c]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406b2a:	lea    rsi,[rip+0x7957]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406b31:	lea    rdx,[rip+0x799d]        # 40e4d5 <_IO_stdin_used@@Base+0x4d5>
  406b38:	mov    DWORD PTR [rbp-0x30],eax
  406b3b:	mov    al,0x0
  406b3d:	call   403110 <printf@plt>
  406b42:	mov    DWORD PTR [rbp-0x34],eax
  406b45:	call   403a90 <setup@@Base>
  406b4a:	call   404a30 <boolean_unary_operator_is_read_properly@@Base>
  406b4f:	lea    rdi,[rip+0x7954]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406b56:	mov    al,0x0
  406b58:	call   403110 <printf@plt>
  406b5d:	lea    rdi,[rip+0x7912]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406b64:	lea    rsi,[rip+0x791d]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406b6b:	lea    rdx,[rip+0x798b]        # 40e4fd <_IO_stdin_used@@Base+0x4fd>
  406b72:	mov    DWORD PTR [rbp-0x38],eax
  406b75:	mov    al,0x0
  406b77:	call   403110 <printf@plt>
  406b7c:	mov    DWORD PTR [rbp-0x3c],eax
  406b7f:	call   403a90 <setup@@Base>
  406b84:	call   4045c0 <boolean_binary_operator_is_read_properly@@Base>
  406b89:	lea    rdi,[rip+0x791a]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406b90:	mov    al,0x0
  406b92:	call   403110 <printf@plt>
  406b97:	lea    rdi,[rip+0x78d8]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406b9e:	lea    rsi,[rip+0x78e3]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406ba5:	lea    rdx,[rip+0x797a]        # 40e526 <_IO_stdin_used@@Base+0x526>
  406bac:	mov    DWORD PTR [rbp-0x40],eax
  406baf:	mov    al,0x0
  406bb1:	call   403110 <printf@plt>
  406bb6:	mov    DWORD PTR [rbp-0x44],eax
  406bb9:	call   403a90 <setup@@Base>
  406bbe:	call   403ea0 <boolean_expression_is_read_properly@@Base>
  406bc3:	lea    rdi,[rip+0x78e0]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406bca:	mov    al,0x0
  406bcc:	call   403110 <printf@plt>
  406bd1:	lea    rdi,[rip+0x789e]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406bd8:	lea    rsi,[rip+0x78a9]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406bdf:	lea    rdx,[rip+0x7964]        # 40e54a <_IO_stdin_used@@Base+0x54a>
  406be6:	mov    DWORD PTR [rbp-0x48],eax
  406be9:	mov    al,0x0
  406beb:	call   403110 <printf@plt>
  406bf0:	mov    DWORD PTR [rbp-0x4c],eax
  406bf3:	call   403a90 <setup@@Base>
  406bf8:	call   404200 <boolean_expression_complex@@Base>
  406bfd:	lea    rdi,[rip+0x78a6]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406c04:	mov    al,0x0
  406c06:	call   403110 <printf@plt>
  406c0b:	lea    rdi,[rip+0x7864]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406c12:	lea    rsi,[rip+0x786f]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406c19:	lea    rdx,[rip+0x7945]        # 40e565 <_IO_stdin_used@@Base+0x565>
  406c20:	mov    DWORD PTR [rbp-0x50],eax
  406c23:	mov    al,0x0
  406c25:	call   403110 <printf@plt>
  406c2a:	mov    DWORD PTR [rbp-0x54],eax
  406c2d:	call   403a90 <setup@@Base>
  406c32:	call   404e70 <if_statement_only@@Base>
  406c37:	lea    rdi,[rip+0x786c]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406c3e:	mov    al,0x0
  406c40:	call   403110 <printf@plt>
  406c45:	lea    rdi,[rip+0x782a]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406c4c:	lea    rsi,[rip+0x7835]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406c53:	lea    rdx,[rip+0x791d]        # 40e577 <_IO_stdin_used@@Base+0x577>
  406c5a:	mov    DWORD PTR [rbp-0x58],eax
  406c5d:	mov    al,0x0
  406c5f:	call   403110 <printf@plt>
  406c64:	mov    DWORD PTR [rbp-0x5c],eax
  406c67:	call   403a90 <setup@@Base>
  406c6c:	call   405240 <if_else_statements@@Base>
  406c71:	lea    rdi,[rip+0x7832]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406c78:	mov    al,0x0
  406c7a:	call   403110 <printf@plt>
  406c7f:	lea    rdi,[rip+0x77f0]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406c86:	lea    rsi,[rip+0x77fb]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406c8d:	lea    rdx,[rip+0x78f6]        # 40e58a <_IO_stdin_used@@Base+0x58a>
  406c94:	mov    DWORD PTR [rbp-0x60],eax
  406c97:	mov    al,0x0
  406c99:	call   403110 <printf@plt>
  406c9e:	mov    DWORD PTR [rbp-0x64],eax
  406ca1:	call   403a90 <setup@@Base>
  406ca6:	call   405ed0 <if_statement_inside_if_statement@@Base>
  406cab:	lea    rdi,[rip+0x77f8]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406cb2:	mov    al,0x0
  406cb4:	call   403110 <printf@plt>
  406cb9:	lea    rdi,[rip+0x77b6]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406cc0:	lea    rsi,[rip+0x77c1]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406cc7:	lea    rdx,[rip+0x78dd]        # 40e5ab <_IO_stdin_used@@Base+0x5ab>
  406cce:	mov    DWORD PTR [rbp-0x68],eax
  406cd1:	mov    al,0x0
  406cd3:	call   403110 <printf@plt>
  406cd8:	mov    DWORD PTR [rbp-0x6c],eax
  406cdb:	call   403a90 <setup@@Base>
  406ce0:	call   406440 <if_statement_inside_else_statement@@Base>
  406ce5:	lea    rdi,[rip+0x77be]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406cec:	mov    al,0x0
  406cee:	call   403110 <printf@plt>
  406cf3:	lea    rdi,[rip+0x777c]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406cfa:	lea    rsi,[rip+0x7787]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406d01:	lea    rdx,[rip+0x78c6]        # 40e5ce <_IO_stdin_used@@Base+0x5ce>
  406d08:	mov    DWORD PTR [rbp-0x70],eax
  406d0b:	mov    al,0x0
  406d0d:	call   403110 <printf@plt>
  406d12:	mov    DWORD PTR [rbp-0x74],eax
  406d15:	call   403a90 <setup@@Base>
  406d1a:	call   405b20 <body_with_one_return@@Base>
  406d1f:	lea    rdi,[rip+0x7784]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406d26:	mov    al,0x0
  406d28:	call   403110 <printf@plt>
  406d2d:	lea    rdi,[rip+0x7742]        # 40e476 <_IO_stdin_used@@Base+0x476>
  406d34:	lea    rsi,[rip+0x774d]        # 40e488 <_IO_stdin_used@@Base+0x488>
  406d3b:	lea    rdx,[rip+0x78a1]        # 40e5e3 <_IO_stdin_used@@Base+0x5e3>
  406d42:	mov    DWORD PTR [rbp-0x78],eax
  406d45:	mov    al,0x0
  406d47:	call   403110 <printf@plt>
  406d4c:	mov    DWORD PTR [rbp-0x7c],eax
  406d4f:	call   403a90 <setup@@Base>
  406d54:	call   405650 <body_with_two_returns@@Base>
  406d59:	lea    rdi,[rip+0x774a]        # 40e4aa <_IO_stdin_used@@Base+0x4aa>
  406d60:	mov    al,0x0
  406d62:	call   403110 <printf@plt>
  406d67:	lea    rdi,[rip+0x788b]        # 40e5f9 <_IO_stdin_used@@Base+0x5f9>
  406d6e:	mov    DWORD PTR [rbp-0x80],eax
  406d71:	mov    al,0x0
  406d73:	call   403110 <printf@plt>
  406d78:	lea    rdi,[rip+0x788a]        # 40e609 <_IO_stdin_used@@Base+0x609>
  406d7f:	mov    DWORD PTR [rbp-0x84],eax
  406d85:	mov    al,0x0
  406d87:	call   403110 <printf@plt>
  406d8c:	lea    rdi,[rip+0x76d3]        # 40e466 <_IO_stdin_used@@Base+0x466>
  406d93:	mov    DWORD PTR [rbp-0x88],eax
  406d99:	mov    al,0x0
  406d9b:	call   403110 <printf@plt>
  406da0:	xor    ecx,ecx
  406da2:	mov    DWORD PTR [rbp-0x8c],eax
  406da8:	mov    eax,ecx
  406daa:	add    rsp,0x90
  406db1:	pop    rbp
  406db2:	ret    
  406db3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dbd:	nop    DWORD PTR [rax]
  406dc0:	sub    rsp,0x38
  406dc4:	xor    eax,eax
  406dc6:	mov    DWORD PTR [rsp+0x34],eax
  406dca:	jmp    406dcf <main@@Base+0x3cf>
  406dcf:	mov    eax,DWORD PTR [rsp+0x34]
  406dd3:	movsxd rcx,eax
  406dd6:	imul   rcx,rcx,0x30
  406ddd:	lea    rdx,[rip+0xb56c]        # 412350 <_IO_stdin_used@@Base+0x4350>
  406de4:	add    rdx,rcx
  406de7:	mov    rdi,QWORD PTR [rdx]
  406dea:	mov    rsi,QWORD PTR [rdx+0x8]
  406dee:	mov    r8d,DWORD PTR [rdx+0x10]
  406df2:	mov    QWORD PTR [rsp+0x28],rdx
  406df7:	mov    edx,r8d
  406dfa:	mov    DWORD PTR [rsp+0x24],eax
  406dfe:	call   40b7c0 <read_boolean_unary_expression@@Base+0x800>
  406e03:	xor    eax,eax
  406e05:	mov    rcx,QWORD PTR [rsp+0x28]
  406e0a:	mov    edx,DWORD PTR [rcx+0x18]
  406e0d:	mov    rsi,QWORD PTR [rcx+0x20]
  406e11:	mov    rdi,QWORD PTR [rcx+0x28]
  406e15:	cmp    eax,edx
  406e17:	mov    DWORD PTR [rsp+0x20],edx
  406e1b:	mov    QWORD PTR [rsp+0x18],rsi
  406e20:	mov    QWORD PTR [rsp+0x10],rdi
  406e25:	mov    DWORD PTR [rsp+0xc],eax
  406e29:	jge    406e9d <main@@Base+0x49d>
  406e2f:	mov    eax,DWORD PTR [rsp+0xc]
  406e33:	movsxd rcx,eax
  406e36:	shl    rcx,0x5
  406e3a:	mov    rdx,QWORD PTR [rsp+0x18]
  406e3f:	add    rdx,rcx
  406e42:	mov    edi,DWORD PTR [rdx]
  406e44:	mov    rsi,QWORD PTR [rdx+0x8]
  406e48:	mov    r8d,DWORD PTR [rdx+0x10]
  406e4c:	mov    r9b,BYTE PTR [rdx+0x14]
  406e50:	mov    r10d,DWORD PTR [rdx+0x18]
  406e54:	mov    edx,r8d
  406e57:	movzx  ecx,r9b
  406e5b:	mov    r8d,r10d
  406e5e:	mov    DWORD PTR [rsp+0x8],eax
  406e62:	call   40bc10 <read_boolean_unary_expression@@Base+0xc50>
  406e67:	mov    eax,DWORD PTR [rsp+0x8]
  406e6b:	movsxd rsi,eax
  406e6e:	shl    rsi,0x4
  406e72:	mov    r11,QWORD PTR [rsp+0x10]
  406e77:	add    r11,rsi
  406e7a:	mov    edi,DWORD PTR [r11]
  406e7d:	mov    rsi,QWORD PTR [r11+0x8]
  406e81:	call   40c030 <read_boolean_unary_expression@@Base+0x1070>
  406e86:	mov    eax,DWORD PTR [rsp+0x8]
  406e8a:	add    eax,0x1
  406e8d:	mov    ecx,DWORD PTR [rsp+0x20]
  406e91:	cmp    eax,ecx
  406e93:	mov    DWORD PTR [rsp+0xc],eax
  406e97:	jl     406e2f <main@@Base+0x42f>
  406e9d:	call   40c440 <read_boolean_unary_expression@@Base+0x1480>
  406ea2:	call   40cbe0 <read_boolean_unary_expression@@Base+0x1c20>
  406ea7:	mov    eax,DWORD PTR [rsp+0x24]
  406eab:	add    eax,0x1
  406eae:	cmp    eax,0x1
  406eb1:	mov    DWORD PTR [rsp+0x34],eax
  406eb5:	jl     406dcf <main@@Base+0x3cf>
  406ebb:	add    rsp,0x38
  406ebf:	ret    
  406ec0:	push   rax
  406ec1:	call   406dc0 <main@@Base+0x3c0>
  406ec6:	mov    QWORD PTR [rip+0xc32f],0x0        # 413200 <__bss_start@@Base+0xa0>
  406ed1:	mov    QWORD PTR [rip+0xc31c],0x0        # 4131f8 <__bss_start@@Base+0x98>
  406edc:	mov    QWORD PTR [rip+0xc309],0x0        # 4131f0 <__bss_start@@Base+0x90>
  406ee7:	mov    QWORD PTR [rip+0xc2f6],0x0        # 4131e8 <__bss_start@@Base+0x88>
  406ef2:	mov    QWORD PTR [rip+0xc2e3],0x0        # 4131e0 <__bss_start@@Base+0x80>
  406efd:	mov    QWORD PTR [rip+0xc2d0],0x0        # 4131d8 <__bss_start@@Base+0x78>
  406f08:	mov    QWORD PTR [rip+0xc2bd],0x0        # 4131d0 <__bss_start@@Base+0x70>
  406f13:	mov    QWORD PTR [rip+0xc2aa],0x0        # 4131c8 <__bss_start@@Base+0x68>
  406f1e:	mov    QWORD PTR [rip+0xc297],0x0        # 4131c0 <__bss_start@@Base+0x60>
  406f29:	mov    QWORD PTR [rip+0xc284],0x0        # 4131b8 <__bss_start@@Base+0x58>
  406f34:	mov    QWORD PTR [rip+0xc271],0x0        # 4131b0 <__bss_start@@Base+0x50>
  406f3f:	mov    QWORD PTR [rip+0xc25e],0x0        # 4131a8 <__bss_start@@Base+0x48>
  406f4a:	mov    QWORD PTR [rip+0xc24b],0x0        # 4131a0 <__bss_start@@Base+0x40>
  406f55:	mov    QWORD PTR [rip+0xc238],0x0        # 413198 <__bss_start@@Base+0x38>
  406f60:	mov    QWORD PTR [rip+0xc225],0x0        # 413190 <__bss_start@@Base+0x30>
  406f6b:	mov    QWORD PTR [rip+0xc212],0x0        # 413188 <__bss_start@@Base+0x28>
  406f76:	mov    QWORD PTR [rip+0xc1ff],0x0        # 413180 <__bss_start@@Base+0x20>
  406f81:	mov    QWORD PTR [rip+0xc1ec],0x0        # 413178 <__bss_start@@Base+0x18>
  406f8c:	mov    QWORD PTR [rip+0xc1d9],0x0        # 413170 <__bss_start@@Base+0x10>
  406f97:	mov    QWORD PTR [rip+0xc26e],0x0        # 413210 <__bss_start@@Base+0xb0>
  406fa2:	mov    QWORD PTR [rip+0xc25b],0x0        # 413208 <__bss_start@@Base+0xa8>
  406fad:	mov    QWORD PTR [rip+0xc2c0],0x0        # 413278 <__bss_start@@Base+0x118>
  406fb8:	mov    QWORD PTR [rip+0xc2ad],0x0        # 413270 <__bss_start@@Base+0x110>
  406fc3:	mov    QWORD PTR [rip+0xc29a],0x0        # 413268 <__bss_start@@Base+0x108>
  406fce:	mov    QWORD PTR [rip+0xc287],0x0        # 413260 <__bss_start@@Base+0x100>
  406fd9:	mov    QWORD PTR [rip+0xc274],0x0        # 413258 <__bss_start@@Base+0xf8>
  406fe4:	mov    QWORD PTR [rip+0xc261],0x0        # 413250 <__bss_start@@Base+0xf0>
  406fef:	mov    QWORD PTR [rip+0xc24e],0x0        # 413248 <__bss_start@@Base+0xe8>
  406ffa:	mov    QWORD PTR [rip+0xc23b],0x0        # 413240 <__bss_start@@Base+0xe0>
  407005:	mov    QWORD PTR [rip+0xc228],0x0        # 413238 <__bss_start@@Base+0xd8>
  407010:	mov    QWORD PTR [rip+0xc215],0x0        # 413230 <__bss_start@@Base+0xd0>
  40701b:	mov    QWORD PTR [rip+0xc202],0x0        # 413228 <__bss_start@@Base+0xc8>
  407026:	mov    QWORD PTR [rip+0xc1ef],0x0        # 413220 <__bss_start@@Base+0xc0>
  407031:	mov    QWORD PTR [rip+0xc24c],0x0        # 413288 <__bss_start@@Base+0x128>
  40703c:	mov    QWORD PTR [rip+0xc239],0x0        # 413280 <__bss_start@@Base+0x120>
  407047:	mov    QWORD PTR [rip+0xc246],0x0        # 413298 <__bss_start@@Base+0x138>
  407052:	mov    QWORD PTR [rip+0xc233],0x0        # 413290 <__bss_start@@Base+0x130>
  40705d:	mov    QWORD PTR [rip+0xc270],0x0        # 4132d8 <__bss_start@@Base+0x178>
  407068:	mov    QWORD PTR [rip+0xc25d],0x0        # 4132d0 <__bss_start@@Base+0x170>
  407073:	mov    QWORD PTR [rip+0xc24a],0x0        # 4132c8 <__bss_start@@Base+0x168>
  40707e:	mov    QWORD PTR [rip+0xc237],0x0        # 4132c0 <__bss_start@@Base+0x160>
  407089:	mov    QWORD PTR [rip+0xc224],0x0        # 4132b8 <__bss_start@@Base+0x158>
  407094:	mov    QWORD PTR [rip+0xc211],0x0        # 4132b0 <__bss_start@@Base+0x150>
  40709f:	mov    QWORD PTR [rip+0xc1fe],0x0        # 4132a8 <__bss_start@@Base+0x148>
  4070aa:	mov    QWORD PTR [rip+0xc1eb],0x0        # 4132a0 <__bss_start@@Base+0x140>
  4070b5:	mov    QWORD PTR [rip+0xc258],0x0        # 413318 <__bss_start@@Base+0x1b8>
  4070c0:	mov    QWORD PTR [rip+0xc245],0x0        # 413310 <__bss_start@@Base+0x1b0>
  4070cb:	mov    QWORD PTR [rip+0xc232],0x0        # 413308 <__bss_start@@Base+0x1a8>
  4070d6:	mov    QWORD PTR [rip+0xc21f],0x0        # 413300 <__bss_start@@Base+0x1a0>
  4070e1:	mov    QWORD PTR [rip+0xc20c],0x0        # 4132f8 <__bss_start@@Base+0x198>
  4070ec:	mov    QWORD PTR [rip+0xc1f9],0x0        # 4132f0 <__bss_start@@Base+0x190>
  4070f7:	mov    QWORD PTR [rip+0xc1e6],0x0        # 4132e8 <__bss_start@@Base+0x188>
  407102:	mov    QWORD PTR [rip+0xc1d3],0x0        # 4132e0 <__bss_start@@Base+0x180>
  40710d:	mov    QWORD PTR [rip+0xc258],0x0        # 413370 <__bss_start@@Base+0x210>
  407118:	mov    QWORD PTR [rip+0xc245],0x0        # 413368 <__bss_start@@Base+0x208>
  407123:	mov    QWORD PTR [rip+0xc232],0x0        # 413360 <__bss_start@@Base+0x200>
  40712e:	mov    QWORD PTR [rip+0xc21f],0x0        # 413358 <__bss_start@@Base+0x1f8>
  407139:	mov    QWORD PTR [rip+0xc20c],0x0        # 413350 <__bss_start@@Base+0x1f0>
  407144:	mov    QWORD PTR [rip+0xc1f9],0x0        # 413348 <__bss_start@@Base+0x1e8>
  40714f:	mov    QWORD PTR [rip+0xc1e6],0x0        # 413340 <__bss_start@@Base+0x1e0>
  40715a:	mov    QWORD PTR [rip+0xc1d3],0x0        # 413338 <__bss_start@@Base+0x1d8>
  407165:	mov    QWORD PTR [rip+0xc1c0],0x0        # 413330 <__bss_start@@Base+0x1d0>
  407170:	mov    QWORD PTR [rip+0xc1ad],0x0        # 413328 <__bss_start@@Base+0x1c8>
  40717b:	mov    QWORD PTR [rip+0xc19a],0x0        # 413320 <__bss_start@@Base+0x1c0>
  407186:	mov    QWORD PTR [rip+0xc227],0x0        # 4133b8 <__bss_start@@Base+0x258>
  407191:	mov    QWORD PTR [rip+0xc214],0x0        # 4133b0 <__bss_start@@Base+0x250>
  40719c:	mov    QWORD PTR [rip+0xc201],0x0        # 4133a8 <__bss_start@@Base+0x248>
  4071a7:	mov    QWORD PTR [rip+0xc1ee],0x0        # 4133a0 <__bss_start@@Base+0x240>
  4071b2:	mov    QWORD PTR [rip+0xc1db],0x0        # 413398 <__bss_start@@Base+0x238>
  4071bd:	mov    QWORD PTR [rip+0xc1c8],0x0        # 413390 <__bss_start@@Base+0x230>
  4071c8:	mov    QWORD PTR [rip+0xc1b5],0x0        # 413388 <__bss_start@@Base+0x228>
  4071d3:	mov    QWORD PTR [rip+0xc1a2],0x0        # 413380 <__bss_start@@Base+0x220>
  4071de:	mov    QWORD PTR [rip+0xc257],0x0        # 413440 <__bss_start@@Base+0x2e0>
  4071e9:	mov    QWORD PTR [rip+0xc244],0x0        # 413438 <__bss_start@@Base+0x2d8>
  4071f4:	mov    QWORD PTR [rip+0xc231],0x0        # 413430 <__bss_start@@Base+0x2d0>
  4071ff:	mov    QWORD PTR [rip+0xc21e],0x0        # 413428 <__bss_start@@Base+0x2c8>
  40720a:	mov    QWORD PTR [rip+0xc20b],0x0        # 413420 <__bss_start@@Base+0x2c0>
  407215:	mov    QWORD PTR [rip+0xc1f8],0x0        # 413418 <__bss_start@@Base+0x2b8>
  407220:	mov    QWORD PTR [rip+0xc1e5],0x0        # 413410 <__bss_start@@Base+0x2b0>
  40722b:	mov    QWORD PTR [rip+0xc1d2],0x0        # 413408 <__bss_start@@Base+0x2a8>
  407236:	mov    QWORD PTR [rip+0xc1bf],0x0        # 413400 <__bss_start@@Base+0x2a0>
  407241:	mov    QWORD PTR [rip+0xc1ac],0x0        # 4133f8 <__bss_start@@Base+0x298>
  40724c:	mov    QWORD PTR [rip+0xc199],0x0        # 4133f0 <__bss_start@@Base+0x290>
  407257:	mov    QWORD PTR [rip+0xc186],0x0        # 4133e8 <__bss_start@@Base+0x288>
  407262:	mov    QWORD PTR [rip+0xc173],0x0        # 4133e0 <__bss_start@@Base+0x280>
  40726d:	mov    QWORD PTR [rip+0xc160],0x0        # 4133d8 <__bss_start@@Base+0x278>
  407278:	mov    QWORD PTR [rip+0xc14d],0x0        # 4133d0 <__bss_start@@Base+0x270>
  407283:	mov    QWORD PTR [rip+0xc13a],0x0        # 4133c8 <__bss_start@@Base+0x268>
  40728e:	mov    QWORD PTR [rip+0xc127],0x0        # 4133c0 <__bss_start@@Base+0x260>
  407299:	mov    QWORD PTR [rip+0xc22c],0x0        # 4134d0 <__bss_start@@Base+0x370>
  4072a4:	mov    QWORD PTR [rip+0xc219],0x0        # 4134c8 <__bss_start@@Base+0x368>
  4072af:	mov    QWORD PTR [rip+0xc206],0x0        # 4134c0 <__bss_start@@Base+0x360>
  4072ba:	mov    QWORD PTR [rip+0xc1f3],0x0        # 4134b8 <__bss_start@@Base+0x358>
  4072c5:	mov    QWORD PTR [rip+0xc1e0],0x0        # 4134b0 <__bss_start@@Base+0x350>
  4072d0:	mov    QWORD PTR [rip+0xc1cd],0x0        # 4134a8 <__bss_start@@Base+0x348>
  4072db:	mov    QWORD PTR [rip+0xc1ba],0x0        # 4134a0 <__bss_start@@Base+0x340>
  4072e6:	mov    QWORD PTR [rip+0xc1a7],0x0        # 413498 <__bss_start@@Base+0x338>
  4072f1:	mov    QWORD PTR [rip+0xc194],0x0        # 413490 <__bss_start@@Base+0x330>
  4072fc:	mov    QWORD PTR [rip+0xc181],0x0        # 413488 <__bss_start@@Base+0x328>
  407307:	mov    QWORD PTR [rip+0xc16e],0x0        # 413480 <__bss_start@@Base+0x320>
  407312:	mov    QWORD PTR [rip+0xc15b],0x0        # 413478 <__bss_start@@Base+0x318>
  40731d:	mov    QWORD PTR [rip+0xc148],0x0        # 413470 <__bss_start@@Base+0x310>
  407328:	mov    QWORD PTR [rip+0xc135],0x0        # 413468 <__bss_start@@Base+0x308>
  407333:	mov    QWORD PTR [rip+0xc122],0x0        # 413460 <__bss_start@@Base+0x300>
  40733e:	mov    QWORD PTR [rip+0xc10f],0x0        # 413458 <__bss_start@@Base+0x2f8>
  407349:	mov    QWORD PTR [rip+0xc0fc],0x0        # 413450 <__bss_start@@Base+0x2f0>
  407354:	mov    QWORD PTR [rip+0xc1d1],0x0        # 413530 <__bss_start@@Base+0x3d0>
  40735f:	mov    QWORD PTR [rip+0xc1be],0x0        # 413528 <__bss_start@@Base+0x3c8>
  40736a:	mov    QWORD PTR [rip+0xc1ab],0x0        # 413520 <__bss_start@@Base+0x3c0>
  407375:	mov    QWORD PTR [rip+0xc198],0x0        # 413518 <__bss_start@@Base+0x3b8>
  407380:	mov    QWORD PTR [rip+0xc185],0x0        # 413510 <__bss_start@@Base+0x3b0>
  40738b:	mov    QWORD PTR [rip+0xc172],0x0        # 413508 <__bss_start@@Base+0x3a8>
  407396:	mov    QWORD PTR [rip+0xc15f],0x0        # 413500 <__bss_start@@Base+0x3a0>
  4073a1:	mov    QWORD PTR [rip+0xc14c],0x0        # 4134f8 <__bss_start@@Base+0x398>
  4073ac:	mov    QWORD PTR [rip+0xc139],0x0        # 4134f0 <__bss_start@@Base+0x390>
  4073b7:	mov    QWORD PTR [rip+0xc126],0x0        # 4134e8 <__bss_start@@Base+0x388>
  4073c2:	mov    QWORD PTR [rip+0xc113],0x0        # 4134e0 <__bss_start@@Base+0x380>
  4073cd:	mov    QWORD PTR [rip+0xc1b8],0x0        # 413590 <__bss_start@@Base+0x430>
  4073d8:	mov    QWORD PTR [rip+0xc1a5],0x0        # 413588 <__bss_start@@Base+0x428>
  4073e3:	mov    QWORD PTR [rip+0xc192],0x0        # 413580 <__bss_start@@Base+0x420>
  4073ee:	mov    QWORD PTR [rip+0xc17f],0x0        # 413578 <__bss_start@@Base+0x418>
  4073f9:	mov    QWORD PTR [rip+0xc16c],0x0        # 413570 <__bss_start@@Base+0x410>
  407404:	mov    QWORD PTR [rip+0xc159],0x0        # 413568 <__bss_start@@Base+0x408>
  40740f:	mov    QWORD PTR [rip+0xc146],0x0        # 413560 <__bss_start@@Base+0x400>
  40741a:	mov    QWORD PTR [rip+0xc133],0x0        # 413558 <__bss_start@@Base+0x3f8>
  407425:	mov    QWORD PTR [rip+0xc120],0x0        # 413550 <__bss_start@@Base+0x3f0>
  407430:	mov    QWORD PTR [rip+0xc10d],0x0        # 413548 <__bss_start@@Base+0x3e8>
  40743b:	mov    QWORD PTR [rip+0xc0fa],0x0        # 413540 <__bss_start@@Base+0x3e0>
  407446:	mov    QWORD PTR [rip+0xc1cf],0x0        # 413620 <__bss_start@@Base+0x4c0>
  407451:	mov    QWORD PTR [rip+0xc1bc],0x0        # 413618 <__bss_start@@Base+0x4b8>
  40745c:	mov    QWORD PTR [rip+0xc1a9],0x0        # 413610 <__bss_start@@Base+0x4b0>
  407467:	mov    QWORD PTR [rip+0xc196],0x0        # 413608 <__bss_start@@Base+0x4a8>
  407472:	mov    QWORD PTR [rip+0xc183],0x0        # 413600 <__bss_start@@Base+0x4a0>
  40747d:	mov    QWORD PTR [rip+0xc170],0x0        # 4135f8 <__bss_start@@Base+0x498>
  407488:	mov    QWORD PTR [rip+0xc15d],0x0        # 4135f0 <__bss_start@@Base+0x490>
  407493:	mov    QWORD PTR [rip+0xc14a],0x0        # 4135e8 <__bss_start@@Base+0x488>
  40749e:	mov    QWORD PTR [rip+0xc137],0x0        # 4135e0 <__bss_start@@Base+0x480>
  4074a9:	mov    QWORD PTR [rip+0xc124],0x0        # 4135d8 <__bss_start@@Base+0x478>
  4074b4:	mov    QWORD PTR [rip+0xc111],0x0        # 4135d0 <__bss_start@@Base+0x470>
  4074bf:	mov    QWORD PTR [rip+0xc0fe],0x0        # 4135c8 <__bss_start@@Base+0x468>
  4074ca:	mov    QWORD PTR [rip+0xc0eb],0x0        # 4135c0 <__bss_start@@Base+0x460>
  4074d5:	mov    QWORD PTR [rip+0xc0d8],0x0        # 4135b8 <__bss_start@@Base+0x458>
  4074e0:	mov    QWORD PTR [rip+0xc0c5],0x0        # 4135b0 <__bss_start@@Base+0x450>
  4074eb:	mov    QWORD PTR [rip+0xc0b2],0x0        # 4135a8 <__bss_start@@Base+0x448>
  4074f6:	mov    QWORD PTR [rip+0xc09f],0x0        # 4135a0 <__bss_start@@Base+0x440>
  407501:	mov    QWORD PTR [rip+0xc18c],0x0        # 413698 <__bss_start@@Base+0x538>
  40750c:	mov    QWORD PTR [rip+0xc179],0x0        # 413690 <__bss_start@@Base+0x530>
  407517:	mov    QWORD PTR [rip+0xc166],0x0        # 413688 <__bss_start@@Base+0x528>
  407522:	mov    QWORD PTR [rip+0xc153],0x0        # 413680 <__bss_start@@Base+0x520>
  40752d:	mov    QWORD PTR [rip+0xc140],0x0        # 413678 <__bss_start@@Base+0x518>
  407538:	mov    QWORD PTR [rip+0xc12d],0x0        # 413670 <__bss_start@@Base+0x510>
  407543:	mov    QWORD PTR [rip+0xc11a],0x0        # 413668 <__bss_start@@Base+0x508>
  40754e:	mov    QWORD PTR [rip+0xc107],0x0        # 413660 <__bss_start@@Base+0x500>
  407559:	mov    QWORD PTR [rip+0xc0f4],0x0        # 413658 <__bss_start@@Base+0x4f8>
  407564:	mov    QWORD PTR [rip+0xc0e1],0x0        # 413650 <__bss_start@@Base+0x4f0>
  40756f:	mov    QWORD PTR [rip+0xc0ce],0x0        # 413648 <__bss_start@@Base+0x4e8>
  40757a:	mov    QWORD PTR [rip+0xc0bb],0x0        # 413640 <__bss_start@@Base+0x4e0>
  407585:	mov    QWORD PTR [rip+0xc0a8],0x0        # 413638 <__bss_start@@Base+0x4d8>
  407590:	mov    QWORD PTR [rip+0xc095],0x0        # 413630 <__bss_start@@Base+0x4d0>
  40759b:	mov    QWORD PTR [rip+0xc14a],0x0        # 4136f0 <__bss_start@@Base+0x590>
  4075a6:	mov    QWORD PTR [rip+0xc137],0x0        # 4136e8 <__bss_start@@Base+0x588>
  4075b1:	mov    QWORD PTR [rip+0xc124],0x0        # 4136e0 <__bss_start@@Base+0x580>
  4075bc:	mov    QWORD PTR [rip+0xc111],0x0        # 4136d8 <__bss_start@@Base+0x578>
  4075c7:	mov    QWORD PTR [rip+0xc0fe],0x0        # 4136d0 <__bss_start@@Base+0x570>
  4075d2:	mov    QWORD PTR [rip+0xc0eb],0x0        # 4136c8 <__bss_start@@Base+0x568>
  4075dd:	mov    QWORD PTR [rip+0xc0d8],0x0        # 4136c0 <__bss_start@@Base+0x560>
  4075e8:	mov    QWORD PTR [rip+0xc0c5],0x0        # 4136b8 <__bss_start@@Base+0x558>
  4075f3:	mov    QWORD PTR [rip+0xc0b2],0x0        # 4136b0 <__bss_start@@Base+0x550>
  4075fe:	mov    QWORD PTR [rip+0xc09f],0x0        # 4136a8 <__bss_start@@Base+0x548>
  407609:	mov    QWORD PTR [rip+0xc08c],0x0        # 4136a0 <__bss_start@@Base+0x540>
  407614:	mov    QWORD PTR [rip+0xc131],0x0        # 413750 <__bss_start@@Base+0x5f0>
  40761f:	mov    QWORD PTR [rip+0xc11e],0x0        # 413748 <__bss_start@@Base+0x5e8>
  40762a:	mov    QWORD PTR [rip+0xc10b],0x0        # 413740 <__bss_start@@Base+0x5e0>
  407635:	mov    QWORD PTR [rip+0xc0f8],0x0        # 413738 <__bss_start@@Base+0x5d8>
  407640:	mov    QWORD PTR [rip+0xc0e5],0x0        # 413730 <__bss_start@@Base+0x5d0>
  40764b:	mov    QWORD PTR [rip+0xc0d2],0x0        # 413728 <__bss_start@@Base+0x5c8>
  407656:	mov    QWORD PTR [rip+0xc0bf],0x0        # 413720 <__bss_start@@Base+0x5c0>
  407661:	mov    QWORD PTR [rip+0xc0ac],0x0        # 413718 <__bss_start@@Base+0x5b8>
  40766c:	mov    QWORD PTR [rip+0xc099],0x0        # 413710 <__bss_start@@Base+0x5b0>
  407677:	mov    QWORD PTR [rip+0xc086],0x0        # 413708 <__bss_start@@Base+0x5a8>
  407682:	mov    QWORD PTR [rip+0xc073],0x0        # 413700 <__bss_start@@Base+0x5a0>
  40768d:	mov    QWORD PTR [rip+0xc0c8],0x0        # 413760 <__bss_start@@Base+0x600>
  407698:	mov    QWORD PTR [rip+0xc0b5],0x0        # 413758 <__bss_start@@Base+0x5f8>
  4076a3:	pop    rax
  4076a4:	ret    
  4076a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076af:	nop
  4076b0:	push   rax
  4076b1:	lea    rdi,[rip+0xfffffffffffff708]        # 406dc0 <main@@Base+0x3c0>
  4076b8:	lea    rsi,[rip+0xfffffffffffff801]        # 406ec0 <main@@Base+0x4c0>
  4076bf:	call   40cfc0 <__gcov_flush@@Base+0xb0>
  4076c4:	pop    rax
  4076c5:	ret    
  4076c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004076d0 <init_token_int_type@@Base>:
  4076d0:	push   rbp
  4076d1:	mov    rbp,rsp
  4076d4:	lea    rax,[rip+0xc095]        # 413770 <__bss_start@@Base+0x610>
  4076db:	mov    QWORD PTR [rbp-0x10],rdi
  4076df:	mov    QWORD PTR [rbp-0x18],rax
  4076e3:	mov    rax,QWORD PTR [rbp-0x18]
  4076e7:	mov    rcx,QWORD PTR [rax]
  4076ea:	add    rcx,0x1
  4076f1:	mov    QWORD PTR [rax],rcx
  4076f4:	mov    rax,QWORD PTR [rip+0xc07d]        # 413778 <__bss_start@@Base+0x618>
  4076fb:	add    rax,0x1
  407701:	mov    QWORD PTR [rip+0xc070],rax        # 413778 <__bss_start@@Base+0x618>
  407708:	mov    rax,QWORD PTR [rbp-0x10]
  40770c:	mov    QWORD PTR [rbp-0x8],rax
  407710:	mov    rcx,QWORD PTR [rbp-0x8]
  407714:	mov    DWORD PTR [rcx],0x0
  40771a:	pop    rbp
  40771b:	ret    
  40771c:	nop    DWORD PTR [rax+0x0]

0000000000407720 <init_token_int_value@@Base>:
  407720:	push   rbp
  407721:	mov    rbp,rsp
  407724:	lea    rax,[rip+0xc055]        # 413780 <__bss_start@@Base+0x620>
  40772b:	mov    QWORD PTR [rbp-0x18],rdi
  40772f:	mov    DWORD PTR [rbp-0x1c],esi
  407732:	mov    QWORD PTR [rbp-0x28],rax
  407736:	mov    rax,QWORD PTR [rbp-0x28]
  40773a:	mov    rcx,QWORD PTR [rax]
  40773d:	add    rcx,0x1
  407744:	mov    QWORD PTR [rax],rcx
  407747:	mov    rax,QWORD PTR [rip+0xc03a]        # 413788 <__bss_start@@Base+0x628>
  40774e:	add    rax,0x1
  407754:	mov    QWORD PTR [rip+0xc02d],rax        # 413788 <__bss_start@@Base+0x628>
  40775b:	mov    rax,QWORD PTR [rbp-0x18]
  40775f:	mov    QWORD PTR [rbp-0x8],rax
  407763:	mov    edx,DWORD PTR [rbp-0x1c]
  407766:	mov    DWORD PTR [rbp-0xc],edx
  407769:	mov    rcx,QWORD PTR [rbp-0x8]
  40776d:	mov    DWORD PTR [rcx],0x1
  407773:	mov    esi,DWORD PTR [rbp-0xc]
  407776:	mov    rcx,QWORD PTR [rbp-0x8]
  40777a:	mov    DWORD PTR [rcx+0x4],esi
  40777d:	pop    rbp
  40777e:	ret    
  40777f:	nop

0000000000407780 <init_token_function@@Base>:
  407780:	push   rbp
  407781:	mov    rbp,rsp
  407784:	lea    rax,[rip+0xc005]        # 413790 <__bss_start@@Base+0x630>
  40778b:	mov    QWORD PTR [rbp-0x18],rdi
  40778f:	mov    QWORD PTR [rbp-0x20],rsi
  407793:	mov    QWORD PTR [rbp-0x28],rax
  407797:	mov    rax,QWORD PTR [rbp-0x28]
  40779b:	mov    rcx,QWORD PTR [rax]
  40779e:	add    rcx,0x1
  4077a5:	mov    QWORD PTR [rax],rcx
  4077a8:	mov    rax,QWORD PTR [rip+0xbfe9]        # 413798 <__bss_start@@Base+0x638>
  4077af:	add    rax,0x1
  4077b5:	mov    QWORD PTR [rip+0xbfdc],rax        # 413798 <__bss_start@@Base+0x638>
  4077bc:	mov    rax,QWORD PTR [rbp-0x18]
  4077c0:	mov    QWORD PTR [rbp-0x8],rax
  4077c4:	mov    rcx,QWORD PTR [rbp-0x20]
  4077c8:	mov    QWORD PTR [rbp-0x10],rcx
  4077cc:	mov    rdx,QWORD PTR [rbp-0x8]
  4077d0:	mov    DWORD PTR [rdx],0x2
  4077d6:	mov    rdx,QWORD PTR [rbp-0x10]
  4077da:	mov    rsi,QWORD PTR [rbp-0x8]
  4077de:	mov    QWORD PTR [rsi+0x8],rdx
  4077e2:	pop    rbp
  4077e3:	ret    
  4077e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077ee:	xchg   ax,ax

00000000004077f0 <init_token_opar@@Base>:
  4077f0:	push   rbp
  4077f1:	mov    rbp,rsp
  4077f4:	lea    rax,[rip+0xbfa5]        # 4137a0 <__bss_start@@Base+0x640>
  4077fb:	mov    QWORD PTR [rbp-0x10],rdi
  4077ff:	mov    QWORD PTR [rbp-0x18],rax
  407803:	mov    rax,QWORD PTR [rbp-0x18]
  407807:	mov    rcx,QWORD PTR [rax]
  40780a:	add    rcx,0x1
  407811:	mov    QWORD PTR [rax],rcx
  407814:	mov    rax,QWORD PTR [rip+0xbf8d]        # 4137a8 <__bss_start@@Base+0x648>
  40781b:	add    rax,0x1
  407821:	mov    QWORD PTR [rip+0xbf80],rax        # 4137a8 <__bss_start@@Base+0x648>
  407828:	mov    rax,QWORD PTR [rbp-0x10]
  40782c:	mov    QWORD PTR [rbp-0x8],rax
  407830:	mov    rcx,QWORD PTR [rbp-0x8]
  407834:	mov    DWORD PTR [rcx],0x3
  40783a:	pop    rbp
  40783b:	ret    
  40783c:	nop    DWORD PTR [rax+0x0]

0000000000407840 <init_token_cpar@@Base>:
  407840:	push   rbp
  407841:	mov    rbp,rsp
  407844:	lea    rax,[rip+0xbf65]        # 4137b0 <__bss_start@@Base+0x650>
  40784b:	mov    QWORD PTR [rbp-0x10],rdi
  40784f:	mov    QWORD PTR [rbp-0x18],rax
  407853:	mov    rax,QWORD PTR [rbp-0x18]
  407857:	mov    rcx,QWORD PTR [rax]
  40785a:	add    rcx,0x1
  407861:	mov    QWORD PTR [rax],rcx
  407864:	mov    rax,QWORD PTR [rip+0xbf4d]        # 4137b8 <__bss_start@@Base+0x658>
  40786b:	add    rax,0x1
  407871:	mov    QWORD PTR [rip+0xbf40],rax        # 4137b8 <__bss_start@@Base+0x658>
  407878:	mov    rax,QWORD PTR [rbp-0x10]
  40787c:	mov    QWORD PTR [rbp-0x8],rax
  407880:	mov    rcx,QWORD PTR [rbp-0x8]
  407884:	mov    DWORD PTR [rcx],0x4
  40788a:	pop    rbp
  40788b:	ret    
  40788c:	nop    DWORD PTR [rax+0x0]

0000000000407890 <init_token_obra@@Base>:
  407890:	push   rbp
  407891:	mov    rbp,rsp
  407894:	lea    rax,[rip+0xbf25]        # 4137c0 <__bss_start@@Base+0x660>
  40789b:	mov    QWORD PTR [rbp-0x10],rdi
  40789f:	mov    QWORD PTR [rbp-0x18],rax
  4078a3:	mov    rax,QWORD PTR [rbp-0x18]
  4078a7:	mov    rcx,QWORD PTR [rax]
  4078aa:	add    rcx,0x1
  4078b1:	mov    QWORD PTR [rax],rcx
  4078b4:	mov    rax,QWORD PTR [rip+0xbf0d]        # 4137c8 <__bss_start@@Base+0x668>
  4078bb:	add    rax,0x1
  4078c1:	mov    QWORD PTR [rip+0xbf00],rax        # 4137c8 <__bss_start@@Base+0x668>
  4078c8:	mov    rax,QWORD PTR [rbp-0x10]
  4078cc:	mov    QWORD PTR [rbp-0x8],rax
  4078d0:	mov    rcx,QWORD PTR [rbp-0x8]
  4078d4:	mov    DWORD PTR [rcx],0x5
  4078da:	pop    rbp
  4078db:	ret    
  4078dc:	nop    DWORD PTR [rax+0x0]

00000000004078e0 <init_token_cbra@@Base>:
  4078e0:	push   rbp
  4078e1:	mov    rbp,rsp
  4078e4:	lea    rax,[rip+0xbee5]        # 4137d0 <__bss_start@@Base+0x670>
  4078eb:	mov    QWORD PTR [rbp-0x10],rdi
  4078ef:	mov    QWORD PTR [rbp-0x18],rax
  4078f3:	mov    rax,QWORD PTR [rbp-0x18]
  4078f7:	mov    rcx,QWORD PTR [rax]
  4078fa:	add    rcx,0x1
  407901:	mov    QWORD PTR [rax],rcx
  407904:	mov    rax,QWORD PTR [rip+0xbecd]        # 4137d8 <__bss_start@@Base+0x678>
  40790b:	add    rax,0x1
  407911:	mov    QWORD PTR [rip+0xbec0],rax        # 4137d8 <__bss_start@@Base+0x678>
  407918:	mov    rax,QWORD PTR [rbp-0x10]
  40791c:	mov    QWORD PTR [rbp-0x8],rax
  407920:	mov    rcx,QWORD PTR [rbp-0x8]
  407924:	mov    DWORD PTR [rcx],0x6
  40792a:	pop    rbp
  40792b:	ret    
  40792c:	nop    DWORD PTR [rax+0x0]

0000000000407930 <init_token_return@@Base>:
  407930:	push   rbp
  407931:	mov    rbp,rsp
  407934:	lea    rax,[rip+0xbea5]        # 4137e0 <__bss_start@@Base+0x680>
  40793b:	mov    QWORD PTR [rbp-0x10],rdi
  40793f:	mov    QWORD PTR [rbp-0x18],rax
  407943:	mov    rax,QWORD PTR [rbp-0x18]
  407947:	mov    rcx,QWORD PTR [rax]
  40794a:	add    rcx,0x1
  407951:	mov    QWORD PTR [rax],rcx
  407954:	mov    rax,QWORD PTR [rip+0xbe8d]        # 4137e8 <__bss_start@@Base+0x688>
  40795b:	add    rax,0x1
  407961:	mov    QWORD PTR [rip+0xbe80],rax        # 4137e8 <__bss_start@@Base+0x688>
  407968:	mov    rax,QWORD PTR [rbp-0x10]
  40796c:	mov    QWORD PTR [rbp-0x8],rax
  407970:	mov    rcx,QWORD PTR [rbp-0x8]
  407974:	mov    DWORD PTR [rcx],0x7
  40797a:	pop    rbp
  40797b:	ret    
  40797c:	nop    DWORD PTR [rax+0x0]

0000000000407980 <init_token_semicolon@@Base>:
  407980:	push   rbp
  407981:	mov    rbp,rsp
  407984:	lea    rax,[rip+0xbe65]        # 4137f0 <__bss_start@@Base+0x690>
  40798b:	mov    QWORD PTR [rbp-0x10],rdi
  40798f:	mov    QWORD PTR [rbp-0x18],rax
  407993:	mov    rax,QWORD PTR [rbp-0x18]
  407997:	mov    rcx,QWORD PTR [rax]
  40799a:	add    rcx,0x1
  4079a1:	mov    QWORD PTR [rax],rcx
  4079a4:	mov    rax,QWORD PTR [rip+0xbe4d]        # 4137f8 <__bss_start@@Base+0x698>
  4079ab:	add    rax,0x1
  4079b1:	mov    QWORD PTR [rip+0xbe40],rax        # 4137f8 <__bss_start@@Base+0x698>
  4079b8:	mov    rax,QWORD PTR [rbp-0x10]
  4079bc:	mov    QWORD PTR [rbp-0x8],rax
  4079c0:	mov    rcx,QWORD PTR [rbp-0x8]
  4079c4:	mov    DWORD PTR [rcx],0x8
  4079ca:	pop    rbp
  4079cb:	ret    
  4079cc:	nop    DWORD PTR [rax+0x0]

00000000004079d0 <init_token_eof@@Base>:
  4079d0:	push   rbp
  4079d1:	mov    rbp,rsp
  4079d4:	lea    rax,[rip+0xbe25]        # 413800 <__bss_start@@Base+0x6a0>
  4079db:	mov    QWORD PTR [rbp-0x10],rdi
  4079df:	mov    QWORD PTR [rbp-0x18],rax
  4079e3:	mov    rax,QWORD PTR [rbp-0x18]
  4079e7:	mov    rcx,QWORD PTR [rax]
  4079ea:	add    rcx,0x1
  4079f1:	mov    QWORD PTR [rax],rcx
  4079f4:	mov    rax,QWORD PTR [rip+0xbe0d]        # 413808 <__bss_start@@Base+0x6a8>
  4079fb:	add    rax,0x1
  407a01:	mov    QWORD PTR [rip+0xbe00],rax        # 413808 <__bss_start@@Base+0x6a8>
  407a08:	mov    rax,QWORD PTR [rbp-0x10]
  407a0c:	mov    QWORD PTR [rbp-0x8],rax
  407a10:	mov    rcx,QWORD PTR [rbp-0x8]
  407a14:	mov    DWORD PTR [rcx],0x9
  407a1a:	pop    rbp
  407a1b:	ret    
  407a1c:	nop    DWORD PTR [rax+0x0]

0000000000407a20 <init_token_if@@Base>:
  407a20:	push   rbp
  407a21:	mov    rbp,rsp
  407a24:	lea    rax,[rip+0xbde5]        # 413810 <__bss_start@@Base+0x6b0>
  407a2b:	mov    QWORD PTR [rbp-0x10],rdi
  407a2f:	mov    QWORD PTR [rbp-0x18],rax
  407a33:	mov    rax,QWORD PTR [rbp-0x18]
  407a37:	mov    rcx,QWORD PTR [rax]
  407a3a:	add    rcx,0x1
  407a41:	mov    QWORD PTR [rax],rcx
  407a44:	mov    rax,QWORD PTR [rip+0xbdcd]        # 413818 <__bss_start@@Base+0x6b8>
  407a4b:	add    rax,0x1
  407a51:	mov    QWORD PTR [rip+0xbdc0],rax        # 413818 <__bss_start@@Base+0x6b8>
  407a58:	mov    rax,QWORD PTR [rbp-0x10]
  407a5c:	mov    QWORD PTR [rbp-0x8],rax
  407a60:	mov    rcx,QWORD PTR [rbp-0x8]
  407a64:	mov    DWORD PTR [rcx],0xa
  407a6a:	pop    rbp
  407a6b:	ret    
  407a6c:	nop    DWORD PTR [rax+0x0]

0000000000407a70 <init_token_else@@Base>:
  407a70:	push   rbp
  407a71:	mov    rbp,rsp
  407a74:	lea    rax,[rip+0xbda5]        # 413820 <__bss_start@@Base+0x6c0>
  407a7b:	mov    QWORD PTR [rbp-0x10],rdi
  407a7f:	mov    QWORD PTR [rbp-0x18],rax
  407a83:	mov    rax,QWORD PTR [rbp-0x18]
  407a87:	mov    rcx,QWORD PTR [rax]
  407a8a:	add    rcx,0x1
  407a91:	mov    QWORD PTR [rax],rcx
  407a94:	mov    rax,QWORD PTR [rip+0xbd8d]        # 413828 <__bss_start@@Base+0x6c8>
  407a9b:	add    rax,0x1
  407aa1:	mov    QWORD PTR [rip+0xbd80],rax        # 413828 <__bss_start@@Base+0x6c8>
  407aa8:	mov    rax,QWORD PTR [rbp-0x10]
  407aac:	mov    QWORD PTR [rbp-0x8],rax
  407ab0:	mov    rcx,QWORD PTR [rbp-0x8]
  407ab4:	mov    DWORD PTR [rcx],0xb
  407aba:	pop    rbp
  407abb:	ret    
  407abc:	nop    DWORD PTR [rax+0x0]

0000000000407ac0 <init_token_boolean_op@@Base>:
  407ac0:	push   rbp
  407ac1:	mov    rbp,rsp
  407ac4:	lea    rax,[rip+0xbd65]        # 413830 <__bss_start@@Base+0x6d0>
  407acb:	mov    QWORD PTR [rbp-0x18],rdi
  407acf:	mov    QWORD PTR [rbp-0x20],rsi
  407ad3:	mov    QWORD PTR [rbp-0x28],rax
  407ad7:	mov    rax,QWORD PTR [rbp-0x28]
  407adb:	mov    rcx,QWORD PTR [rax]
  407ade:	add    rcx,0x1
  407ae5:	mov    QWORD PTR [rax],rcx
  407ae8:	mov    rax,QWORD PTR [rip+0xbd49]        # 413838 <__bss_start@@Base+0x6d8>
  407aef:	add    rax,0x1
  407af5:	mov    QWORD PTR [rip+0xbd3c],rax        # 413838 <__bss_start@@Base+0x6d8>
  407afc:	mov    rax,QWORD PTR [rbp-0x18]
  407b00:	mov    QWORD PTR [rbp-0x8],rax
  407b04:	mov    rcx,QWORD PTR [rbp-0x20]
  407b08:	mov    QWORD PTR [rbp-0x10],rcx
  407b0c:	mov    rdx,QWORD PTR [rbp-0x8]
  407b10:	mov    DWORD PTR [rdx],0xc
  407b16:	mov    rdx,QWORD PTR [rbp-0x10]
  407b1a:	mov    rsi,QWORD PTR [rbp-0x8]
  407b1e:	mov    QWORD PTR [rsi+0x8],rdx
  407b22:	pop    rbp
  407b23:	ret    
  407b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b2e:	xchg   ax,ax

0000000000407b30 <free_token_int_type@@Base>:
  407b30:	push   rbp
  407b31:	mov    rbp,rsp
  407b34:	sub    rsp,0x20
  407b38:	lea    rax,[rip+0xbd01]        # 413840 <__bss_start@@Base+0x6e0>
  407b3f:	mov    QWORD PTR [rbp-0x10],rdi
  407b43:	mov    QWORD PTR [rbp-0x18],rax
  407b47:	mov    rax,QWORD PTR [rbp-0x18]
  407b4b:	mov    rcx,QWORD PTR [rax]
  407b4e:	add    rcx,0x1
  407b55:	mov    QWORD PTR [rax],rcx
  407b58:	mov    rax,QWORD PTR [rip+0xbce9]        # 413848 <__bss_start@@Base+0x6e8>
  407b5f:	add    rax,0x1
  407b65:	mov    QWORD PTR [rip+0xbcdc],rax        # 413848 <__bss_start@@Base+0x6e8>
  407b6c:	mov    rax,QWORD PTR [rbp-0x10]
  407b70:	mov    QWORD PTR [rbp-0x8],rax
  407b74:	mov    rcx,QWORD PTR [rbp-0x8]
  407b78:	mov    rdi,rcx
  407b7b:	call   403040 <free@plt>
  407b80:	add    rsp,0x20
  407b84:	pop    rbp
  407b85:	ret    
  407b86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407b90 <free_token_int_value@@Base>:
  407b90:	push   rbp
  407b91:	mov    rbp,rsp
  407b94:	sub    rsp,0x20
  407b98:	lea    rax,[rip+0xbcb1]        # 413850 <__bss_start@@Base+0x6f0>
  407b9f:	mov    QWORD PTR [rbp-0x10],rdi
  407ba3:	mov    QWORD PTR [rbp-0x18],rax
  407ba7:	mov    rax,QWORD PTR [rbp-0x18]
  407bab:	mov    rcx,QWORD PTR [rax]
  407bae:	add    rcx,0x1
  407bb5:	mov    QWORD PTR [rax],rcx
  407bb8:	mov    rax,QWORD PTR [rip+0xbc99]        # 413858 <__bss_start@@Base+0x6f8>
  407bbf:	add    rax,0x1
  407bc5:	mov    QWORD PTR [rip+0xbc8c],rax        # 413858 <__bss_start@@Base+0x6f8>
  407bcc:	mov    rax,QWORD PTR [rbp-0x10]
  407bd0:	mov    QWORD PTR [rbp-0x8],rax
  407bd4:	mov    rcx,QWORD PTR [rbp-0x8]
  407bd8:	mov    rdi,rcx
  407bdb:	call   403040 <free@plt>
  407be0:	add    rsp,0x20
  407be4:	pop    rbp
  407be5:	ret    
  407be6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407bf0 <free_token_function@@Base>:
  407bf0:	push   rbp
  407bf1:	mov    rbp,rsp
  407bf4:	sub    rsp,0x20
  407bf8:	lea    rax,[rip+0xbc61]        # 413860 <__bss_start@@Base+0x700>
  407bff:	mov    QWORD PTR [rbp-0x10],rdi
  407c03:	mov    QWORD PTR [rbp-0x18],rax
  407c07:	mov    rax,QWORD PTR [rbp-0x18]
  407c0b:	mov    rcx,QWORD PTR [rax]
  407c0e:	add    rcx,0x1
  407c15:	mov    QWORD PTR [rax],rcx
  407c18:	mov    rax,QWORD PTR [rip+0xbc49]        # 413868 <__bss_start@@Base+0x708>
  407c1f:	add    rax,0x1
  407c25:	mov    QWORD PTR [rip+0xbc3c],rax        # 413868 <__bss_start@@Base+0x708>
  407c2c:	mov    rax,QWORD PTR [rbp-0x10]
  407c30:	mov    QWORD PTR [rbp-0x8],rax
  407c34:	mov    rcx,QWORD PTR [rbp-0x8]
  407c38:	mov    rdi,rcx
  407c3b:	call   403040 <free@plt>
  407c40:	add    rsp,0x20
  407c44:	pop    rbp
  407c45:	ret    
  407c46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407c50 <free_token_opar@@Base>:
  407c50:	push   rbp
  407c51:	mov    rbp,rsp
  407c54:	sub    rsp,0x20
  407c58:	lea    rax,[rip+0xbc11]        # 413870 <__bss_start@@Base+0x710>
  407c5f:	mov    QWORD PTR [rbp-0x10],rdi
  407c63:	mov    QWORD PTR [rbp-0x18],rax
  407c67:	mov    rax,QWORD PTR [rbp-0x18]
  407c6b:	mov    rcx,QWORD PTR [rax]
  407c6e:	add    rcx,0x1
  407c75:	mov    QWORD PTR [rax],rcx
  407c78:	mov    rax,QWORD PTR [rip+0xbbf9]        # 413878 <__bss_start@@Base+0x718>
  407c7f:	add    rax,0x1
  407c85:	mov    QWORD PTR [rip+0xbbec],rax        # 413878 <__bss_start@@Base+0x718>
  407c8c:	mov    rax,QWORD PTR [rbp-0x10]
  407c90:	mov    QWORD PTR [rbp-0x8],rax
  407c94:	mov    rcx,QWORD PTR [rbp-0x8]
  407c98:	mov    rdi,rcx
  407c9b:	call   403040 <free@plt>
  407ca0:	add    rsp,0x20
  407ca4:	pop    rbp
  407ca5:	ret    
  407ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407cb0 <free_token_cpar@@Base>:
  407cb0:	push   rbp
  407cb1:	mov    rbp,rsp
  407cb4:	sub    rsp,0x20
  407cb8:	lea    rax,[rip+0xbbc1]        # 413880 <__bss_start@@Base+0x720>
  407cbf:	mov    QWORD PTR [rbp-0x10],rdi
  407cc3:	mov    QWORD PTR [rbp-0x18],rax
  407cc7:	mov    rax,QWORD PTR [rbp-0x18]
  407ccb:	mov    rcx,QWORD PTR [rax]
  407cce:	add    rcx,0x1
  407cd5:	mov    QWORD PTR [rax],rcx
  407cd8:	mov    rax,QWORD PTR [rip+0xbba9]        # 413888 <__bss_start@@Base+0x728>
  407cdf:	add    rax,0x1
  407ce5:	mov    QWORD PTR [rip+0xbb9c],rax        # 413888 <__bss_start@@Base+0x728>
  407cec:	mov    rax,QWORD PTR [rbp-0x10]
  407cf0:	mov    QWORD PTR [rbp-0x8],rax
  407cf4:	mov    rcx,QWORD PTR [rbp-0x8]
  407cf8:	mov    rdi,rcx
  407cfb:	call   403040 <free@plt>
  407d00:	add    rsp,0x20
  407d04:	pop    rbp
  407d05:	ret    
  407d06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407d10 <free_token_obra@@Base>:
  407d10:	push   rbp
  407d11:	mov    rbp,rsp
  407d14:	sub    rsp,0x20
  407d18:	lea    rax,[rip+0xbb71]        # 413890 <__bss_start@@Base+0x730>
  407d1f:	mov    QWORD PTR [rbp-0x10],rdi
  407d23:	mov    QWORD PTR [rbp-0x18],rax
  407d27:	mov    rax,QWORD PTR [rbp-0x18]
  407d2b:	mov    rcx,QWORD PTR [rax]
  407d2e:	add    rcx,0x1
  407d35:	mov    QWORD PTR [rax],rcx
  407d38:	mov    rax,QWORD PTR [rip+0xbb59]        # 413898 <__bss_start@@Base+0x738>
  407d3f:	add    rax,0x1
  407d45:	mov    QWORD PTR [rip+0xbb4c],rax        # 413898 <__bss_start@@Base+0x738>
  407d4c:	mov    rax,QWORD PTR [rbp-0x10]
  407d50:	mov    QWORD PTR [rbp-0x8],rax
  407d54:	mov    rcx,QWORD PTR [rbp-0x8]
  407d58:	mov    rdi,rcx
  407d5b:	call   403040 <free@plt>
  407d60:	add    rsp,0x20
  407d64:	pop    rbp
  407d65:	ret    
  407d66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407d70 <free_token_cbra@@Base>:
  407d70:	push   rbp
  407d71:	mov    rbp,rsp
  407d74:	sub    rsp,0x20
  407d78:	lea    rax,[rip+0xbb21]        # 4138a0 <__bss_start@@Base+0x740>
  407d7f:	mov    QWORD PTR [rbp-0x10],rdi
  407d83:	mov    QWORD PTR [rbp-0x18],rax
  407d87:	mov    rax,QWORD PTR [rbp-0x18]
  407d8b:	mov    rcx,QWORD PTR [rax]
  407d8e:	add    rcx,0x1
  407d95:	mov    QWORD PTR [rax],rcx
  407d98:	mov    rax,QWORD PTR [rip+0xbb09]        # 4138a8 <__bss_start@@Base+0x748>
  407d9f:	add    rax,0x1
  407da5:	mov    QWORD PTR [rip+0xbafc],rax        # 4138a8 <__bss_start@@Base+0x748>
  407dac:	mov    rax,QWORD PTR [rbp-0x10]
  407db0:	mov    QWORD PTR [rbp-0x8],rax
  407db4:	mov    rcx,QWORD PTR [rbp-0x8]
  407db8:	mov    rdi,rcx
  407dbb:	call   403040 <free@plt>
  407dc0:	add    rsp,0x20
  407dc4:	pop    rbp
  407dc5:	ret    
  407dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407dd0 <free_token_return@@Base>:
  407dd0:	push   rbp
  407dd1:	mov    rbp,rsp
  407dd4:	sub    rsp,0x20
  407dd8:	lea    rax,[rip+0xbad1]        # 4138b0 <__bss_start@@Base+0x750>
  407ddf:	mov    QWORD PTR [rbp-0x10],rdi
  407de3:	mov    QWORD PTR [rbp-0x18],rax
  407de7:	mov    rax,QWORD PTR [rbp-0x18]
  407deb:	mov    rcx,QWORD PTR [rax]
  407dee:	add    rcx,0x1
  407df5:	mov    QWORD PTR [rax],rcx
  407df8:	mov    rax,QWORD PTR [rip+0xbab9]        # 4138b8 <__bss_start@@Base+0x758>
  407dff:	add    rax,0x1
  407e05:	mov    QWORD PTR [rip+0xbaac],rax        # 4138b8 <__bss_start@@Base+0x758>
  407e0c:	mov    rax,QWORD PTR [rbp-0x10]
  407e10:	mov    QWORD PTR [rbp-0x8],rax
  407e14:	mov    rcx,QWORD PTR [rbp-0x8]
  407e18:	mov    rdi,rcx
  407e1b:	call   403040 <free@plt>
  407e20:	add    rsp,0x20
  407e24:	pop    rbp
  407e25:	ret    
  407e26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407e30 <free_token_semicolon@@Base>:
  407e30:	push   rbp
  407e31:	mov    rbp,rsp
  407e34:	sub    rsp,0x20
  407e38:	lea    rax,[rip+0xba81]        # 4138c0 <__bss_start@@Base+0x760>
  407e3f:	mov    QWORD PTR [rbp-0x10],rdi
  407e43:	mov    QWORD PTR [rbp-0x18],rax
  407e47:	mov    rax,QWORD PTR [rbp-0x18]
  407e4b:	mov    rcx,QWORD PTR [rax]
  407e4e:	add    rcx,0x1
  407e55:	mov    QWORD PTR [rax],rcx
  407e58:	mov    rax,QWORD PTR [rip+0xba69]        # 4138c8 <__bss_start@@Base+0x768>
  407e5f:	add    rax,0x1
  407e65:	mov    QWORD PTR [rip+0xba5c],rax        # 4138c8 <__bss_start@@Base+0x768>
  407e6c:	mov    rax,QWORD PTR [rbp-0x10]
  407e70:	mov    QWORD PTR [rbp-0x8],rax
  407e74:	mov    rcx,QWORD PTR [rbp-0x8]
  407e78:	mov    rdi,rcx
  407e7b:	call   403040 <free@plt>
  407e80:	add    rsp,0x20
  407e84:	pop    rbp
  407e85:	ret    
  407e86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407e90 <free_token_eof@@Base>:
  407e90:	push   rbp
  407e91:	mov    rbp,rsp
  407e94:	sub    rsp,0x20
  407e98:	lea    rax,[rip+0xba31]        # 4138d0 <__bss_start@@Base+0x770>
  407e9f:	mov    QWORD PTR [rbp-0x10],rdi
  407ea3:	mov    QWORD PTR [rbp-0x18],rax
  407ea7:	mov    rax,QWORD PTR [rbp-0x18]
  407eab:	mov    rcx,QWORD PTR [rax]
  407eae:	add    rcx,0x1
  407eb5:	mov    QWORD PTR [rax],rcx
  407eb8:	mov    rax,QWORD PTR [rip+0xba19]        # 4138d8 <__bss_start@@Base+0x778>
  407ebf:	add    rax,0x1
  407ec5:	mov    QWORD PTR [rip+0xba0c],rax        # 4138d8 <__bss_start@@Base+0x778>
  407ecc:	mov    rax,QWORD PTR [rbp-0x10]
  407ed0:	mov    QWORD PTR [rbp-0x8],rax
  407ed4:	mov    rcx,QWORD PTR [rbp-0x8]
  407ed8:	mov    rdi,rcx
  407edb:	call   403040 <free@plt>
  407ee0:	add    rsp,0x20
  407ee4:	pop    rbp
  407ee5:	ret    
  407ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407ef0 <free_token_if@@Base>:
  407ef0:	push   rbp
  407ef1:	mov    rbp,rsp
  407ef4:	sub    rsp,0x20
  407ef8:	lea    rax,[rip+0xb9e1]        # 4138e0 <__bss_start@@Base+0x780>
  407eff:	mov    QWORD PTR [rbp-0x10],rdi
  407f03:	mov    QWORD PTR [rbp-0x18],rax
  407f07:	mov    rax,QWORD PTR [rbp-0x18]
  407f0b:	mov    rcx,QWORD PTR [rax]
  407f0e:	add    rcx,0x1
  407f15:	mov    QWORD PTR [rax],rcx
  407f18:	mov    rax,QWORD PTR [rip+0xb9c9]        # 4138e8 <__bss_start@@Base+0x788>
  407f1f:	add    rax,0x1
  407f25:	mov    QWORD PTR [rip+0xb9bc],rax        # 4138e8 <__bss_start@@Base+0x788>
  407f2c:	mov    rax,QWORD PTR [rbp-0x10]
  407f30:	mov    QWORD PTR [rbp-0x8],rax
  407f34:	mov    rcx,QWORD PTR [rbp-0x8]
  407f38:	mov    rdi,rcx
  407f3b:	call   403040 <free@plt>
  407f40:	add    rsp,0x20
  407f44:	pop    rbp
  407f45:	ret    
  407f46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407f50 <free_token_else@@Base>:
  407f50:	push   rbp
  407f51:	mov    rbp,rsp
  407f54:	sub    rsp,0x20
  407f58:	lea    rax,[rip+0xb991]        # 4138f0 <__bss_start@@Base+0x790>
  407f5f:	mov    QWORD PTR [rbp-0x10],rdi
  407f63:	mov    QWORD PTR [rbp-0x18],rax
  407f67:	mov    rax,QWORD PTR [rbp-0x18]
  407f6b:	mov    rcx,QWORD PTR [rax]
  407f6e:	add    rcx,0x1
  407f75:	mov    QWORD PTR [rax],rcx
  407f78:	mov    rax,QWORD PTR [rip+0xb979]        # 4138f8 <__bss_start@@Base+0x798>
  407f7f:	add    rax,0x1
  407f85:	mov    QWORD PTR [rip+0xb96c],rax        # 4138f8 <__bss_start@@Base+0x798>
  407f8c:	mov    rax,QWORD PTR [rbp-0x10]
  407f90:	mov    QWORD PTR [rbp-0x8],rax
  407f94:	mov    rcx,QWORD PTR [rbp-0x8]
  407f98:	mov    rdi,rcx
  407f9b:	call   403040 <free@plt>
  407fa0:	add    rsp,0x20
  407fa4:	pop    rbp
  407fa5:	ret    
  407fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407fb0 <free_token_boolean_op@@Base>:
  407fb0:	push   rbp
  407fb1:	mov    rbp,rsp
  407fb4:	sub    rsp,0x30
  407fb8:	lea    rax,[rip+0xb941]        # 413900 <__bss_start@@Base+0x7a0>
  407fbf:	mov    QWORD PTR [rbp-0x10],rdi
  407fc3:	mov    QWORD PTR [rbp-0x18],rax
  407fc7:	mov    rax,QWORD PTR [rbp-0x18]
  407fcb:	lea    rcx,[rip+0xb92e]        # 413900 <__bss_start@@Base+0x7a0>
  407fd2:	mov    rdx,rcx
  407fd5:	add    rdx,0x8
  407fdc:	add    rcx,0x10
  407fe3:	mov    rsi,QWORD PTR [rax]
  407fe6:	add    rsi,0x1
  407fed:	mov    QWORD PTR [rax],rsi
  407ff0:	mov    rax,QWORD PTR [rbp-0x10]
  407ff4:	mov    QWORD PTR [rbp-0x8],rax
  407ff8:	mov    rsi,QWORD PTR [rbp-0x8]
  407ffc:	cmp    QWORD PTR [rsi+0x8],0x0
  408001:	mov    QWORD PTR [rbp-0x20],rdx
  408005:	mov    QWORD PTR [rbp-0x28],rcx
  408009:	je     40803e <free_token_boolean_op@@Base+0x8e>
  40800f:	mov    rax,QWORD PTR [rbp-0x20]
  408013:	mov    rcx,QWORD PTR [rax]
  408016:	add    rcx,0x1
  40801d:	mov    QWORD PTR [rax],rcx
  408020:	mov    rax,QWORD PTR [rbp-0x8]
  408024:	mov    rdi,QWORD PTR [rax+0x8]
  408028:	call   403040 <free@plt>
  40802d:	lea    rax,[rip+0xb8cc]        # 413900 <__bss_start@@Base+0x7a0>
  408034:	add    rax,0x18
  40803a:	mov    QWORD PTR [rbp-0x28],rax
  40803e:	mov    rax,QWORD PTR [rbp-0x28]
  408042:	mov    rcx,QWORD PTR [rax]
  408045:	add    rcx,0x1
  40804c:	mov    QWORD PTR [rax],rcx
  40804f:	mov    rax,QWORD PTR [rip+0xb8ca]        # 413920 <__bss_start@@Base+0x7c0>
  408056:	add    rax,0x1
  40805c:	mov    QWORD PTR [rip+0xb8bd],rax        # 413920 <__bss_start@@Base+0x7c0>
  408063:	mov    rax,QWORD PTR [rbp-0x8]
  408067:	mov    rdi,rax
  40806a:	call   403040 <free@plt>
  40806f:	add    rsp,0x30
  408073:	pop    rbp
  408074:	ret    
  408075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40807f:	nop
  408080:	sub    rsp,0x38
  408084:	xor    eax,eax
  408086:	mov    DWORD PTR [rsp+0x34],eax
  40808a:	jmp    40808f <free_token_boolean_op@@Base+0xdf>
  40808f:	mov    eax,DWORD PTR [rsp+0x34]
  408093:	movsxd rcx,eax
  408096:	imul   rcx,rcx,0x30
  40809d:	lea    rdx,[rip+0xa7bc]        # 412860 <_IO_stdin_used@@Base+0x4860>
  4080a4:	add    rdx,rcx
  4080a7:	mov    rdi,QWORD PTR [rdx]
  4080aa:	mov    rsi,QWORD PTR [rdx+0x8]
  4080ae:	mov    r8d,DWORD PTR [rdx+0x10]
  4080b2:	mov    QWORD PTR [rsp+0x28],rdx
  4080b7:	mov    edx,r8d
  4080ba:	mov    DWORD PTR [rsp+0x24],eax
  4080be:	call   40b7c0 <read_boolean_unary_expression@@Base+0x800>
  4080c3:	xor    eax,eax
  4080c5:	mov    rcx,QWORD PTR [rsp+0x28]
  4080ca:	mov    edx,DWORD PTR [rcx+0x18]
  4080cd:	mov    rsi,QWORD PTR [rcx+0x20]
  4080d1:	mov    rdi,QWORD PTR [rcx+0x28]
  4080d5:	cmp    eax,edx
  4080d7:	mov    DWORD PTR [rsp+0x20],edx
  4080db:	mov    QWORD PTR [rsp+0x18],rsi
  4080e0:	mov    QWORD PTR [rsp+0x10],rdi
  4080e5:	mov    DWORD PTR [rsp+0xc],eax
  4080e9:	jge    40815d <free_token_boolean_op@@Base+0x1ad>
  4080ef:	mov    eax,DWORD PTR [rsp+0xc]
  4080f3:	movsxd rcx,eax
  4080f6:	shl    rcx,0x5
  4080fa:	mov    rdx,QWORD PTR [rsp+0x18]
  4080ff:	add    rdx,rcx
  408102:	mov    edi,DWORD PTR [rdx]
  408104:	mov    rsi,QWORD PTR [rdx+0x8]
  408108:	mov    r8d,DWORD PTR [rdx+0x10]
  40810c:	mov    r9b,BYTE PTR [rdx+0x14]
  408110:	mov    r10d,DWORD PTR [rdx+0x18]
  408114:	mov    edx,r8d
  408117:	movzx  ecx,r9b
  40811b:	mov    r8d,r10d
  40811e:	mov    DWORD PTR [rsp+0x8],eax
  408122:	call   40bc10 <read_boolean_unary_expression@@Base+0xc50>
  408127:	mov    eax,DWORD PTR [rsp+0x8]
  40812b:	movsxd rsi,eax
  40812e:	shl    rsi,0x4
  408132:	mov    r11,QWORD PTR [rsp+0x10]
  408137:	add    r11,rsi
  40813a:	mov    edi,DWORD PTR [r11]
  40813d:	mov    rsi,QWORD PTR [r11+0x8]
  408141:	call   40c030 <read_boolean_unary_expression@@Base+0x1070>
  408146:	mov    eax,DWORD PTR [rsp+0x8]
  40814a:	add    eax,0x1
  40814d:	mov    ecx,DWORD PTR [rsp+0x20]
  408151:	cmp    eax,ecx
  408153:	mov    DWORD PTR [rsp+0xc],eax
  408157:	jl     4080ef <free_token_boolean_op@@Base+0x13f>
  40815d:	call   40c440 <read_boolean_unary_expression@@Base+0x1480>
  408162:	call   40cbe0 <read_boolean_unary_expression@@Base+0x1c20>
  408167:	mov    eax,DWORD PTR [rsp+0x24]
  40816b:	add    eax,0x1
  40816e:	cmp    eax,0x1
  408171:	mov    DWORD PTR [rsp+0x34],eax
  408175:	jl     40808f <free_token_boolean_op@@Base+0xdf>
  40817b:	add    rsp,0x38
  40817f:	ret    
  408180:	push   rax
  408181:	call   408080 <free_token_boolean_op@@Base+0xd0>
  408186:	mov    QWORD PTR [rip+0xb5e7],0x0        # 413778 <__bss_start@@Base+0x618>
  408191:	mov    QWORD PTR [rip+0xb5d4],0x0        # 413770 <__bss_start@@Base+0x610>
  40819c:	mov    QWORD PTR [rip+0xb5e1],0x0        # 413788 <__bss_start@@Base+0x628>
  4081a7:	mov    QWORD PTR [rip+0xb5ce],0x0        # 413780 <__bss_start@@Base+0x620>
  4081b2:	mov    QWORD PTR [rip+0xb5db],0x0        # 413798 <__bss_start@@Base+0x638>
  4081bd:	mov    QWORD PTR [rip+0xb5c8],0x0        # 413790 <__bss_start@@Base+0x630>
  4081c8:	mov    QWORD PTR [rip+0xb5d5],0x0        # 4137a8 <__bss_start@@Base+0x648>
  4081d3:	mov    QWORD PTR [rip+0xb5c2],0x0        # 4137a0 <__bss_start@@Base+0x640>
  4081de:	mov    QWORD PTR [rip+0xb5cf],0x0        # 4137b8 <__bss_start@@Base+0x658>
  4081e9:	mov    QWORD PTR [rip+0xb5bc],0x0        # 4137b0 <__bss_start@@Base+0x650>
  4081f4:	mov    QWORD PTR [rip+0xb5c9],0x0        # 4137c8 <__bss_start@@Base+0x668>
  4081ff:	mov    QWORD PTR [rip+0xb5b6],0x0        # 4137c0 <__bss_start@@Base+0x660>
  40820a:	mov    QWORD PTR [rip+0xb5c3],0x0        # 4137d8 <__bss_start@@Base+0x678>
  408215:	mov    QWORD PTR [rip+0xb5b0],0x0        # 4137d0 <__bss_start@@Base+0x670>
  408220:	mov    QWORD PTR [rip+0xb5bd],0x0        # 4137e8 <__bss_start@@Base+0x688>
  40822b:	mov    QWORD PTR [rip+0xb5aa],0x0        # 4137e0 <__bss_start@@Base+0x680>
  408236:	mov    QWORD PTR [rip+0xb5b7],0x0        # 4137f8 <__bss_start@@Base+0x698>
  408241:	mov    QWORD PTR [rip+0xb5a4],0x0        # 4137f0 <__bss_start@@Base+0x690>
  40824c:	mov    QWORD PTR [rip+0xb5b1],0x0        # 413808 <__bss_start@@Base+0x6a8>
  408257:	mov    QWORD PTR [rip+0xb59e],0x0        # 413800 <__bss_start@@Base+0x6a0>
  408262:	mov    QWORD PTR [rip+0xb5ab],0x0        # 413818 <__bss_start@@Base+0x6b8>
  40826d:	mov    QWORD PTR [rip+0xb598],0x0        # 413810 <__bss_start@@Base+0x6b0>
  408278:	mov    QWORD PTR [rip+0xb5a5],0x0        # 413828 <__bss_start@@Base+0x6c8>
  408283:	mov    QWORD PTR [rip+0xb592],0x0        # 413820 <__bss_start@@Base+0x6c0>
  40828e:	mov    QWORD PTR [rip+0xb59f],0x0        # 413838 <__bss_start@@Base+0x6d8>
  408299:	mov    QWORD PTR [rip+0xb58c],0x0        # 413830 <__bss_start@@Base+0x6d0>
  4082a4:	mov    QWORD PTR [rip+0xb599],0x0        # 413848 <__bss_start@@Base+0x6e8>
  4082af:	mov    QWORD PTR [rip+0xb586],0x0        # 413840 <__bss_start@@Base+0x6e0>
  4082ba:	mov    QWORD PTR [rip+0xb593],0x0        # 413858 <__bss_start@@Base+0x6f8>
  4082c5:	mov    QWORD PTR [rip+0xb580],0x0        # 413850 <__bss_start@@Base+0x6f0>
  4082d0:	mov    QWORD PTR [rip+0xb58d],0x0        # 413868 <__bss_start@@Base+0x708>
  4082db:	mov    QWORD PTR [rip+0xb57a],0x0        # 413860 <__bss_start@@Base+0x700>
  4082e6:	mov    QWORD PTR [rip+0xb587],0x0        # 413878 <__bss_start@@Base+0x718>
  4082f1:	mov    QWORD PTR [rip+0xb574],0x0        # 413870 <__bss_start@@Base+0x710>
  4082fc:	mov    QWORD PTR [rip+0xb581],0x0        # 413888 <__bss_start@@Base+0x728>
  408307:	mov    QWORD PTR [rip+0xb56e],0x0        # 413880 <__bss_start@@Base+0x720>
  408312:	mov    QWORD PTR [rip+0xb57b],0x0        # 413898 <__bss_start@@Base+0x738>
  40831d:	mov    QWORD PTR [rip+0xb568],0x0        # 413890 <__bss_start@@Base+0x730>
  408328:	mov    QWORD PTR [rip+0xb575],0x0        # 4138a8 <__bss_start@@Base+0x748>
  408333:	mov    QWORD PTR [rip+0xb562],0x0        # 4138a0 <__bss_start@@Base+0x740>
  40833e:	mov    QWORD PTR [rip+0xb56f],0x0        # 4138b8 <__bss_start@@Base+0x758>
  408349:	mov    QWORD PTR [rip+0xb55c],0x0        # 4138b0 <__bss_start@@Base+0x750>
  408354:	mov    QWORD PTR [rip+0xb569],0x0        # 4138c8 <__bss_start@@Base+0x768>
  40835f:	mov    QWORD PTR [rip+0xb556],0x0        # 4138c0 <__bss_start@@Base+0x760>
  40836a:	mov    QWORD PTR [rip+0xb563],0x0        # 4138d8 <__bss_start@@Base+0x778>
  408375:	mov    QWORD PTR [rip+0xb550],0x0        # 4138d0 <__bss_start@@Base+0x770>
  408380:	mov    QWORD PTR [rip+0xb55d],0x0        # 4138e8 <__bss_start@@Base+0x788>
  40838b:	mov    QWORD PTR [rip+0xb54a],0x0        # 4138e0 <__bss_start@@Base+0x780>
  408396:	mov    QWORD PTR [rip+0xb557],0x0        # 4138f8 <__bss_start@@Base+0x798>
  4083a1:	mov    QWORD PTR [rip+0xb544],0x0        # 4138f0 <__bss_start@@Base+0x790>
  4083ac:	mov    QWORD PTR [rip+0xb569],0x0        # 413920 <__bss_start@@Base+0x7c0>
  4083b7:	mov    QWORD PTR [rip+0xb556],0x0        # 413918 <__bss_start@@Base+0x7b8>
  4083c2:	mov    QWORD PTR [rip+0xb543],0x0        # 413910 <__bss_start@@Base+0x7b0>
  4083cd:	mov    QWORD PTR [rip+0xb530],0x0        # 413908 <__bss_start@@Base+0x7a8>
  4083d8:	mov    QWORD PTR [rip+0xb51d],0x0        # 413900 <__bss_start@@Base+0x7a0>
  4083e3:	pop    rax
  4083e4:	ret    
  4083e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083ef:	nop
  4083f0:	push   rax
  4083f1:	lea    rdi,[rip+0xfffffffffffffc88]        # 408080 <free_token_boolean_op@@Base+0xd0>
  4083f8:	lea    rsi,[rip+0xfffffffffffffd81]        # 408180 <free_token_boolean_op@@Base+0x1d0>
  4083ff:	call   40cfc0 <__gcov_flush@@Base+0xb0>
  408404:	pop    rax
  408405:	ret    
  408406:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408410 <init_ast_base@@Base>:
  408410:	push   rbp
  408411:	mov    rbp,rsp
  408414:	lea    rax,[rip+0xb515]        # 413930 <__bss_start@@Base+0x7d0>
  40841b:	mov    QWORD PTR [rbp-0x20],rdi
  40841f:	mov    DWORD PTR [rbp-0x24],esi
  408422:	mov    QWORD PTR [rbp-0x30],rdx
  408426:	mov    QWORD PTR [rbp-0x38],rax
  40842a:	mov    rax,QWORD PTR [rbp-0x38]
  40842e:	mov    rcx,QWORD PTR [rax]
  408431:	add    rcx,0x1
  408438:	mov    QWORD PTR [rax],rcx
  40843b:	mov    rax,QWORD PTR [rip+0xb4f6]        # 413938 <__bss_start@@Base+0x7d8>
  408442:	add    rax,0x1
  408448:	mov    QWORD PTR [rip+0xb4e9],rax        # 413938 <__bss_start@@Base+0x7d8>
  40844f:	mov    rax,QWORD PTR [rbp-0x20]
  408453:	mov    QWORD PTR [rbp-0x8],rax
  408457:	mov    edx,DWORD PTR [rbp-0x24]
  40845a:	mov    DWORD PTR [rbp-0xc],edx
  40845d:	mov    rcx,QWORD PTR [rbp-0x30]
  408461:	mov    QWORD PTR [rbp-0x18],rcx
  408465:	mov    esi,DWORD PTR [rbp-0xc]
  408468:	mov    rdi,QWORD PTR [rbp-0x8]
  40846c:	mov    DWORD PTR [rdi],esi
  40846e:	mov    rdi,QWORD PTR [rbp-0x18]
  408472:	mov    r8,QWORD PTR [rbp-0x8]
  408476:	mov    QWORD PTR [r8+0x8],rdi
  40847a:	pop    rbp
  40847b:	ret    
  40847c:	nop    DWORD PTR [rax+0x0]

0000000000408480 <init_ast_base_single@@Base>:
  408480:	push   rbp
  408481:	mov    rbp,rsp
  408484:	sub    rsp,0x30
  408488:	lea    rax,[rip+0xb4b1]        # 413940 <__bss_start@@Base+0x7e0>
  40848f:	mov    QWORD PTR [rbp-0x18],rdi
  408493:	mov    DWORD PTR [rbp-0x1c],esi
  408496:	mov    QWORD PTR [rbp-0x28],rax
  40849a:	mov    rax,QWORD PTR [rbp-0x28]
  40849e:	xor    ecx,ecx
  4084a0:	mov    edx,ecx
  4084a2:	mov    rsi,QWORD PTR [rax]
  4084a5:	add    rsi,0x1
  4084ac:	mov    QWORD PTR [rax],rsi
  4084af:	mov    rax,QWORD PTR [rip+0xb492]        # 413948 <__bss_start@@Base+0x7e8>
  4084b6:	add    rax,0x1
  4084bc:	mov    QWORD PTR [rip+0xb485],rax        # 413948 <__bss_start@@Base+0x7e8>
  4084c3:	mov    rax,QWORD PTR [rbp-0x18]
  4084c7:	mov    QWORD PTR [rbp-0x8],rax
  4084cb:	mov    ecx,DWORD PTR [rbp-0x1c]
  4084ce:	mov    DWORD PTR [rbp-0xc],ecx
  4084d1:	mov    rdi,QWORD PTR [rbp-0x8]
  4084d5:	mov    esi,DWORD PTR [rbp-0xc]
  4084d8:	call   408410 <init_ast_base@@Base>
  4084dd:	add    rsp,0x30
  4084e1:	pop    rbp
  4084e2:	ret    
  4084e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084ed:	nop    DWORD PTR [rax]

00000000004084f0 <init_node_id@@Base>:
  4084f0:	push   rbp
  4084f1:	mov    rbp,rsp
  4084f4:	sub    rsp,0x30
  4084f8:	lea    rax,[rip+0xb451]        # 413950 <__bss_start@@Base+0x7f0>
  4084ff:	mov    QWORD PTR [rbp-0x18],rdi
  408503:	mov    QWORD PTR [rbp-0x20],rsi
  408507:	mov    QWORD PTR [rbp-0x28],rax
  40850b:	mov    rax,QWORD PTR [rbp-0x28]
  40850f:	xor    esi,esi
  408511:	mov    rcx,QWORD PTR [rax]
  408514:	add    rcx,0x1
  40851b:	mov    QWORD PTR [rax],rcx
  40851e:	mov    rax,QWORD PTR [rip+0xb433]        # 413958 <__bss_start@@Base+0x7f8>
  408525:	add    rax,0x1
  40852b:	mov    QWORD PTR [rip+0xb426],rax        # 413958 <__bss_start@@Base+0x7f8>
  408532:	mov    rax,QWORD PTR [rbp-0x18]
  408536:	mov    QWORD PTR [rbp-0x8],rax
  40853a:	mov    rcx,QWORD PTR [rbp-0x20]
  40853e:	mov    QWORD PTR [rbp-0x10],rcx
  408542:	mov    rdi,QWORD PTR [rbp-0x8]
  408546:	call   408480 <init_ast_base_single@@Base>
  40854b:	mov    rax,QWORD PTR [rbp-0x10]
  40854f:	mov    rcx,QWORD PTR [rbp-0x8]
  408553:	mov    QWORD PTR [rcx+0x10],rax
  408557:	add    rsp,0x30
  40855b:	pop    rbp
  40855c:	ret    
  40855d:	nop    DWORD PTR [rax]

0000000000408560 <init_node_int@@Base>:
  408560:	push   rbp
  408561:	mov    rbp,rsp
  408564:	sub    rsp,0x30
  408568:	lea    rax,[rip+0xb3f1]        # 413960 <__bss_start@@Base+0x800>
  40856f:	mov    QWORD PTR [rbp-0x18],rdi
  408573:	mov    DWORD PTR [rbp-0x1c],esi
  408576:	mov    QWORD PTR [rbp-0x28],rax
  40857a:	mov    rax,QWORD PTR [rbp-0x28]
  40857e:	mov    rcx,QWORD PTR [rax]
  408581:	add    rcx,0x1
  408588:	mov    QWORD PTR [rax],rcx
  40858b:	mov    rax,QWORD PTR [rip+0xb3d6]        # 413968 <__bss_start@@Base+0x808>
  408592:	add    rax,0x1
  408598:	mov    QWORD PTR [rip+0xb3c9],rax        # 413968 <__bss_start@@Base+0x808>
  40859f:	mov    rax,QWORD PTR [rbp-0x18]
  4085a3:	mov    QWORD PTR [rbp-0x8],rax
  4085a7:	mov    edx,DWORD PTR [rbp-0x1c]
  4085aa:	mov    DWORD PTR [rbp-0xc],edx
  4085ad:	mov    rdi,QWORD PTR [rbp-0x8]
  4085b1:	mov    esi,0x1
  4085b6:	call   408480 <init_ast_base_single@@Base>
  4085bb:	mov    edx,DWORD PTR [rbp-0xc]
  4085be:	mov    rax,QWORD PTR [rbp-0x8]
  4085c2:	mov    DWORD PTR [rax+0x10],edx
  4085c5:	add    rsp,0x30
  4085c9:	pop    rbp
  4085ca:	ret    
  4085cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004085d0 <init_node_function@@Base>:
  4085d0:	push   rbp
  4085d1:	mov    rbp,rsp
  4085d4:	sub    rsp,0x40
  4085d8:	lea    rax,[rip+0xb391]        # 413970 <__bss_start@@Base+0x810>
  4085df:	mov    QWORD PTR [rbp-0x20],rdi
  4085e3:	mov    QWORD PTR [rbp-0x28],rsi
  4085e7:	mov    QWORD PTR [rbp-0x30],rdx
  4085eb:	mov    QWORD PTR [rbp-0x38],rax
  4085ef:	mov    rax,QWORD PTR [rbp-0x38]
  4085f3:	mov    rcx,QWORD PTR [rax]
  4085f6:	add    rcx,0x1
  4085fd:	mov    QWORD PTR [rax],rcx
  408600:	mov    rax,QWORD PTR [rip+0xb371]        # 413978 <__bss_start@@Base+0x818>
  408607:	add    rax,0x1
  40860d:	mov    QWORD PTR [rip+0xb364],rax        # 413978 <__bss_start@@Base+0x818>
  408614:	mov    rax,QWORD PTR [rbp-0x20]
  408618:	mov    QWORD PTR [rbp-0x8],rax
  40861c:	mov    rcx,QWORD PTR [rbp-0x28]
  408620:	mov    QWORD PTR [rbp-0x10],rcx
  408624:	mov    rdx,QWORD PTR [rbp-0x30]
  408628:	mov    QWORD PTR [rbp-0x18],rdx
  40862c:	mov    rdi,QWORD PTR [rbp-0x8]
  408630:	mov    esi,0x2
  408635:	call   408480 <init_ast_base_single@@Base>
  40863a:	mov    rax,QWORD PTR [rbp-0x10]
  40863e:	mov    rcx,QWORD PTR [rbp-0x8]
  408642:	mov    QWORD PTR [rcx+0x10],rax
  408646:	mov    rax,QWORD PTR [rbp-0x18]
  40864a:	mov    rcx,QWORD PTR [rbp-0x8]
  40864e:	mov    QWORD PTR [rcx+0x18],rax
  408652:	add    rsp,0x40
  408656:	pop    rbp
  408657:	ret    
  408658:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408660 <init_node_return@@Base>:
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	sub    rsp,0x30
  408668:	lea    rax,[rip+0xb311]        # 413980 <__bss_start@@Base+0x820>
  40866f:	mov    QWORD PTR [rbp-0x18],rdi
  408673:	mov    QWORD PTR [rbp-0x20],rsi
  408677:	mov    QWORD PTR [rbp-0x28],rax
  40867b:	mov    rax,QWORD PTR [rbp-0x28]
  40867f:	mov    rcx,QWORD PTR [rax]
  408682:	add    rcx,0x1
  408689:	mov    QWORD PTR [rax],rcx
  40868c:	mov    rax,QWORD PTR [rip+0xb2f5]        # 413988 <__bss_start@@Base+0x828>
  408693:	add    rax,0x1
  408699:	mov    QWORD PTR [rip+0xb2e8],rax        # 413988 <__bss_start@@Base+0x828>
  4086a0:	mov    rax,QWORD PTR [rbp-0x18]
  4086a4:	mov    QWORD PTR [rbp-0x8],rax
  4086a8:	mov    rcx,QWORD PTR [rbp-0x20]
  4086ac:	mov    QWORD PTR [rbp-0x10],rcx
  4086b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4086b4:	mov    esi,0x3
  4086b9:	call   408480 <init_ast_base_single@@Base>
  4086be:	mov    rax,QWORD PTR [rbp-0x10]
  4086c2:	mov    rcx,QWORD PTR [rbp-0x8]
  4086c6:	mov    QWORD PTR [rcx+0x10],rax
  4086ca:	add    rsp,0x30
  4086ce:	pop    rbp
  4086cf:	ret    

00000000004086d0 <init_node_if@@Base>:
  4086d0:	push   rbp
  4086d1:	mov    rbp,rsp
  4086d4:	sub    rsp,0x50
  4086d8:	lea    rax,[rip+0xb2b1]        # 413990 <__bss_start@@Base+0x830>
  4086df:	mov    QWORD PTR [rbp-0x28],rdi
  4086e3:	mov    QWORD PTR [rbp-0x30],rsi
  4086e7:	mov    QWORD PTR [rbp-0x38],rdx
  4086eb:	mov    QWORD PTR [rbp-0x40],rcx
  4086ef:	mov    QWORD PTR [rbp-0x48],rax
  4086f3:	mov    rax,QWORD PTR [rbp-0x48]
  4086f7:	mov    rcx,QWORD PTR [rax]
  4086fa:	add    rcx,0x1
  408701:	mov    QWORD PTR [rax],rcx
  408704:	mov    rax,QWORD PTR [rip+0xb28d]        # 413998 <__bss_start@@Base+0x838>
  40870b:	add    rax,0x1
  408711:	mov    QWORD PTR [rip+0xb280],rax        # 413998 <__bss_start@@Base+0x838>
  408718:	mov    rax,QWORD PTR [rbp-0x28]
  40871c:	mov    QWORD PTR [rbp-0x8],rax
  408720:	mov    rcx,QWORD PTR [rbp-0x30]
  408724:	mov    QWORD PTR [rbp-0x10],rcx
  408728:	mov    rdx,QWORD PTR [rbp-0x38]
  40872c:	mov    QWORD PTR [rbp-0x18],rdx
  408730:	mov    rsi,QWORD PTR [rbp-0x40]
  408734:	mov    QWORD PTR [rbp-0x20],rsi
  408738:	mov    rdi,QWORD PTR [rbp-0x8]
  40873c:	mov    r8d,0x4
  408742:	mov    esi,r8d
  408745:	call   408480 <init_ast_base_single@@Base>
  40874a:	mov    rax,QWORD PTR [rbp-0x10]
  40874e:	mov    rcx,QWORD PTR [rbp-0x8]
  408752:	mov    QWORD PTR [rcx+0x10],rax
  408756:	mov    rax,QWORD PTR [rbp-0x18]
  40875a:	mov    rcx,QWORD PTR [rbp-0x8]
  40875e:	mov    QWORD PTR [rcx+0x18],rax
  408762:	mov    rax,QWORD PTR [rbp-0x20]
  408766:	mov    rcx,QWORD PTR [rbp-0x8]
  40876a:	mov    QWORD PTR [rcx+0x20],rax
  40876e:	add    rsp,0x50
  408772:	pop    rbp
  408773:	ret    
  408774:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40877e:	xchg   ax,ax

0000000000408780 <init_node_boolean_operator@@Base>:
  408780:	push   rbp
  408781:	mov    rbp,rsp
  408784:	sub    rsp,0x50
  408788:	lea    rax,[rip+0xb211]        # 4139a0 <__bss_start@@Base+0x840>
  40878f:	mov    QWORD PTR [rbp-0x28],rdi
  408793:	mov    DWORD PTR [rbp-0x2c],esi
  408796:	mov    QWORD PTR [rbp-0x38],rdx
  40879a:	mov    QWORD PTR [rbp-0x40],rcx
  40879e:	mov    QWORD PTR [rbp-0x48],rax
  4087a2:	mov    rax,QWORD PTR [rbp-0x48]
  4087a6:	xor    esi,esi
  4087a8:	mov    rcx,QWORD PTR [rax]
  4087ab:	add    rcx,0x1
  4087b2:	mov    QWORD PTR [rax],rcx
  4087b5:	mov    rax,QWORD PTR [rip+0xb1ec]        # 4139a8 <__bss_start@@Base+0x848>
  4087bc:	add    rax,0x1
  4087c2:	mov    QWORD PTR [rip+0xb1df],rax        # 4139a8 <__bss_start@@Base+0x848>
  4087c9:	mov    rax,QWORD PTR [rbp-0x28]
  4087cd:	mov    QWORD PTR [rbp-0x8],rax
  4087d1:	mov    edx,DWORD PTR [rbp-0x2c]
  4087d4:	mov    DWORD PTR [rbp-0xc],edx
  4087d7:	mov    rcx,QWORD PTR [rbp-0x38]
  4087db:	mov    QWORD PTR [rbp-0x18],rcx
  4087df:	mov    rdi,QWORD PTR [rbp-0x40]
  4087e3:	mov    QWORD PTR [rbp-0x20],rdi
  4087e7:	mov    rdi,QWORD PTR [rbp-0x8]
  4087eb:	call   408480 <init_ast_base_single@@Base>
  4087f0:	mov    rax,QWORD PTR [rbp-0x8]
  4087f4:	mov    DWORD PTR [rax],0x5
  4087fa:	mov    edx,DWORD PTR [rbp-0xc]
  4087fd:	mov    rax,QWORD PTR [rbp-0x8]
  408801:	mov    DWORD PTR [rax+0x20],edx
  408804:	mov    rax,QWORD PTR [rbp-0x18]
  408808:	mov    rcx,QWORD PTR [rbp-0x8]
  40880c:	mov    QWORD PTR [rcx+0x10],rax
  408810:	mov    rax,QWORD PTR [rbp-0x20]
  408814:	mov    rcx,QWORD PTR [rbp-0x8]
  408818:	mov    QWORD PTR [rcx+0x18],rax
  40881c:	add    rsp,0x50
  408820:	pop    rbp
  408821:	ret    
  408822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40882c:	nop    DWORD PTR [rax+0x0]

0000000000408830 <free_node@@Base>:
  408830:	push   rbp
  408831:	mov    rbp,rsp
  408834:	push   r14
  408836:	push   rbx
  408837:	sub    rsp,0xa0
  40883e:	lea    rax,[rip+0xb16b]        # 4139b0 <__bss_start@@Base+0x850>
  408845:	mov    QWORD PTR [rbp-0x20],rdi
  408849:	mov    QWORD PTR [rbp-0x28],rax
  40884d:	mov    rax,QWORD PTR [rbp-0x28]
  408851:	mov    rcx,QWORD PTR [rax]
  408854:	inc    rcx
  408857:	mov    QWORD PTR [rax],rcx
  40885a:	mov    rax,QWORD PTR [rbp-0x20]
  40885e:	mov    QWORD PTR [rbp-0x18],rax
  408862:	mov    rcx,QWORD PTR [rbp-0x18]
  408866:	mov    edx,DWORD PTR [rcx]
  408868:	mov    ecx,edx
  40886a:	lea    rsi,[rip+0xb177]        # 4139e8 <__bss_start@@Base+0x888>
  408871:	lea    rdi,[rip+0xb168]        # 4139e0 <__bss_start@@Base+0x880>
  408878:	lea    r8,[rip+0xb159]        # 4139d8 <__bss_start@@Base+0x878>
  40887f:	lea    r9,[rip+0xb14a]        # 4139d0 <__bss_start@@Base+0x870>
  408886:	lea    r10,[rip+0xb13b]        # 4139c8 <__bss_start@@Base+0x868>
  40888d:	lea    r11,[rip+0xb12c]        # 4139c0 <__bss_start@@Base+0x860>
  408894:	lea    rbx,[rip+0xb11d]        # 4139b8 <__bss_start@@Base+0x858>
  40889b:	mov    r14,rcx
  40889e:	sub    r14,0x5
  4088a2:	mov    QWORD PTR [rbp-0x30],rcx
  4088a6:	mov    QWORD PTR [rbp-0x38],rsi
  4088aa:	mov    QWORD PTR [rbp-0x40],rdi
  4088ae:	mov    QWORD PTR [rbp-0x48],r8
  4088b2:	mov    QWORD PTR [rbp-0x50],r9
  4088b6:	mov    QWORD PTR [rbp-0x58],r10
  4088ba:	mov    QWORD PTR [rbp-0x60],r11
  4088be:	mov    QWORD PTR [rbp-0x68],rbx
  4088c2:	ja     408a62 <free_node@@Base+0x232>
  4088c8:	lea    rax,[rip+0x6041]        # 40e910 <_IO_stdin_used@@Base+0x910>
  4088cf:	mov    rcx,QWORD PTR [rbp-0x30]
  4088d3:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4088d7:	add    rdx,rax
  4088da:	mov    rax,QWORD PTR [rbp-0x60]
  4088de:	mov    rsi,QWORD PTR [rbp-0x58]
  4088e2:	mov    rdi,QWORD PTR [rbp-0x50]
  4088e6:	mov    r8,QWORD PTR [rbp-0x48]
  4088ea:	mov    r9,QWORD PTR [rbp-0x40]
  4088ee:	mov    r10,QWORD PTR [rbp-0x38]
  4088f2:	mov    QWORD PTR [rbp-0x70],rax
  4088f6:	mov    QWORD PTR [rbp-0x78],rsi
  4088fa:	mov    QWORD PTR [rbp-0x80],rdi
  4088fe:	mov    QWORD PTR [rbp-0x88],r8
  408905:	mov    QWORD PTR [rbp-0x90],r9
  40890c:	mov    QWORD PTR [rbp-0x98],r10
  408913:	jmp    rdx
  408915:	mov    rax,QWORD PTR [rbp-0x70]
  408919:	mov    rcx,QWORD PTR [rax]
  40891c:	add    rcx,0x1
  408923:	mov    QWORD PTR [rax],rcx
  408926:	mov    rax,QWORD PTR [rbp-0x18]
  40892a:	mov    rdi,rax
  40892d:	call   408ad0 <free_node_id@@Base>
  408932:	lea    rax,[rip+0xb077]        # 4139b0 <__bss_start@@Base+0x850>
  408939:	add    rax,0x40
  40893f:	mov    QWORD PTR [rbp-0xa0],rax
  408946:	jmp    408a9b <free_node@@Base+0x26b>
  40894b:	mov    rax,QWORD PTR [rbp-0x78]
  40894f:	mov    rcx,QWORD PTR [rax]
  408952:	add    rcx,0x1
  408959:	mov    QWORD PTR [rax],rcx
  40895c:	mov    rax,QWORD PTR [rbp-0x18]
  408960:	mov    rdi,rax
  408963:	call   408ba0 <free_node_int@@Base>
  408968:	lea    rax,[rip+0xb041]        # 4139b0 <__bss_start@@Base+0x850>
  40896f:	add    rax,0x48
  408975:	mov    QWORD PTR [rbp-0xa0],rax
  40897c:	jmp    408a9b <free_node@@Base+0x26b>
  408981:	mov    rax,QWORD PTR [rbp-0x80]
  408985:	mov    rcx,QWORD PTR [rax]
  408988:	add    rcx,0x1
  40898f:	mov    QWORD PTR [rax],rcx
  408992:	mov    rax,QWORD PTR [rbp-0x18]
  408996:	mov    rdi,rax
  408999:	call   408c70 <free_node_function@@Base>
  40899e:	lea    rax,[rip+0xb00b]        # 4139b0 <__bss_start@@Base+0x850>
  4089a5:	add    rax,0x50
  4089ab:	mov    QWORD PTR [rbp-0xa0],rax
  4089b2:	jmp    408a9b <free_node@@Base+0x26b>
  4089b7:	mov    rax,QWORD PTR [rbp-0x88]
  4089be:	mov    rcx,QWORD PTR [rax]
  4089c1:	add    rcx,0x1
  4089c8:	mov    QWORD PTR [rax],rcx
  4089cb:	mov    rax,QWORD PTR [rbp-0x18]
  4089cf:	mov    rdi,rax
  4089d2:	call   408d50 <free_node_return@@Base>
  4089d7:	lea    rax,[rip+0xafd2]        # 4139b0 <__bss_start@@Base+0x850>
  4089de:	add    rax,0x58
  4089e4:	mov    QWORD PTR [rbp-0xa0],rax
  4089eb:	jmp    408a9b <free_node@@Base+0x26b>
  4089f0:	mov    rax,QWORD PTR [rbp-0x90]
  4089f7:	mov    rcx,QWORD PTR [rax]
  4089fa:	add    rcx,0x1
  408a01:	mov    QWORD PTR [rax],rcx
  408a04:	mov    rax,QWORD PTR [rbp-0x18]
  408a08:	mov    rdi,rax
  408a0b:	call   408e20 <free_node_if@@Base>
  408a10:	lea    rax,[rip+0xaf99]        # 4139b0 <__bss_start@@Base+0x850>
  408a17:	add    rax,0x60
  408a1d:	mov    QWORD PTR [rbp-0xa0],rax
  408a24:	jmp    408a9b <free_node@@Base+0x26b>
  408a29:	mov    rax,QWORD PTR [rbp-0x98]
  408a30:	mov    rcx,QWORD PTR [rax]
  408a33:	add    rcx,0x1
  408a3a:	mov    QWORD PTR [rax],rcx
  408a3d:	mov    rax,QWORD PTR [rbp-0x18]
  408a41:	mov    rdi,rax
  408a44:	call   408f10 <free_node_boolean_operator@@Base>
  408a49:	lea    rax,[rip+0xaf60]        # 4139b0 <__bss_start@@Base+0x850>
  408a50:	add    rax,0x68
  408a56:	mov    QWORD PTR [rbp-0xa0],rax
  408a5d:	jmp    408a9b <free_node@@Base+0x26b>
  408a62:	mov    rax,QWORD PTR [rbp-0x68]
  408a66:	mov    rcx,QWORD PTR [rip+0xa58b]        # 412ff8 <stderr@GLIBC_2.2.5>
  408a6d:	mov    rdx,QWORD PTR [rax]
  408a70:	add    rdx,0x1
  408a77:	mov    QWORD PTR [rax],rdx
  408a7a:	mov    rdi,QWORD PTR [rcx]
  408a7d:	lea    rsi,[rip+0x5ea4]        # 40e928 <_IO_stdin_used@@Base+0x928>
  408a84:	mov    al,0x0
  408a86:	call   403170 <fprintf@plt>
  408a8b:	mov    edi,0x1
  408a90:	mov    DWORD PTR [rbp-0xa4],eax
  408a96:	call   403250 <exit@plt>
  408a9b:	mov    rax,QWORD PTR [rbp-0xa0]
  408aa2:	mov    rcx,QWORD PTR [rax]
  408aa5:	add    rcx,0x1
  408aac:	mov    QWORD PTR [rax],rcx
  408aaf:	mov    rax,QWORD PTR [rip+0xaf6a]        # 413a20 <__bss_start@@Base+0x8c0>
  408ab6:	add    rax,0x1
  408abc:	mov    QWORD PTR [rip+0xaf5d],rax        # 413a20 <__bss_start@@Base+0x8c0>
  408ac3:	add    rsp,0xa0
  408aca:	pop    rbx
  408acb:	pop    r14
  408acd:	pop    rbp
  408ace:	ret    
  408acf:	nop

0000000000408ad0 <free_node_id@@Base>:
  408ad0:	push   rbp
  408ad1:	mov    rbp,rsp
  408ad4:	sub    rsp,0x30
  408ad8:	lea    rax,[rip+0xaf51]        # 413a30 <__bss_start@@Base+0x8d0>
  408adf:	mov    QWORD PTR [rbp-0x10],rdi
  408ae3:	mov    QWORD PTR [rbp-0x18],rax
  408ae7:	mov    rax,QWORD PTR [rbp-0x18]
  408aeb:	lea    rcx,[rip+0xaf3e]        # 413a30 <__bss_start@@Base+0x8d0>
  408af2:	mov    rdx,rcx
  408af5:	add    rdx,0x8
  408afc:	add    rcx,0x10
  408b03:	mov    rsi,QWORD PTR [rax]
  408b06:	add    rsi,0x1
  408b0d:	mov    QWORD PTR [rax],rsi
  408b10:	mov    rax,QWORD PTR [rbp-0x10]
  408b14:	mov    QWORD PTR [rbp-0x8],rax
  408b18:	mov    rsi,QWORD PTR [rbp-0x8]
  408b1c:	cmp    QWORD PTR [rsi+0x8],0x0
  408b21:	mov    QWORD PTR [rbp-0x20],rdx
  408b25:	mov    QWORD PTR [rbp-0x28],rcx
  408b29:	je     408b5e <free_node_id@@Base+0x8e>
  408b2f:	mov    rax,QWORD PTR [rbp-0x20]
  408b33:	mov    rcx,QWORD PTR [rax]
  408b36:	add    rcx,0x1
  408b3d:	mov    QWORD PTR [rax],rcx
  408b40:	mov    rax,QWORD PTR [rbp-0x8]
  408b44:	mov    rdi,QWORD PTR [rax+0x8]
  408b48:	call   408830 <free_node@@Base>
  408b4d:	lea    rax,[rip+0xaedc]        # 413a30 <__bss_start@@Base+0x8d0>
  408b54:	add    rax,0x18
  408b5a:	mov    QWORD PTR [rbp-0x28],rax
  408b5e:	mov    rax,QWORD PTR [rbp-0x28]
  408b62:	mov    rcx,QWORD PTR [rax]
  408b65:	add    rcx,0x1
  408b6c:	mov    QWORD PTR [rax],rcx
  408b6f:	mov    rax,QWORD PTR [rip+0xaeda]        # 413a50 <__bss_start@@Base+0x8f0>
  408b76:	add    rax,0x1
  408b7c:	mov    QWORD PTR [rip+0xaecd],rax        # 413a50 <__bss_start@@Base+0x8f0>
  408b83:	mov    rax,QWORD PTR [rbp-0x8]
  408b87:	mov    rdi,rax
  408b8a:	call   403040 <free@plt>
  408b8f:	add    rsp,0x30
  408b93:	pop    rbp
  408b94:	ret    
  408b95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b9f:	nop

0000000000408ba0 <free_node_int@@Base>:
  408ba0:	push   rbp
  408ba1:	mov    rbp,rsp
  408ba4:	sub    rsp,0x30
  408ba8:	lea    rax,[rip+0xaeb1]        # 413a60 <__bss_start@@Base+0x900>
  408baf:	mov    QWORD PTR [rbp-0x10],rdi
  408bb3:	mov    QWORD PTR [rbp-0x18],rax
  408bb7:	mov    rax,QWORD PTR [rbp-0x18]
  408bbb:	lea    rcx,[rip+0xae9e]        # 413a60 <__bss_start@@Base+0x900>
  408bc2:	mov    rdx,rcx
  408bc5:	add    rdx,0x8
  408bcc:	add    rcx,0x10
  408bd3:	mov    rsi,QWORD PTR [rax]
  408bd6:	add    rsi,0x1
  408bdd:	mov    QWORD PTR [rax],rsi
  408be0:	mov    rax,QWORD PTR [rbp-0x10]
  408be4:	mov    QWORD PTR [rbp-0x8],rax
  408be8:	mov    rsi,QWORD PTR [rbp-0x8]
  408bec:	cmp    QWORD PTR [rsi+0x8],0x0
  408bf1:	mov    QWORD PTR [rbp-0x20],rdx
  408bf5:	mov    QWORD PTR [rbp-0x28],rcx
  408bf9:	je     408c2e <free_node_int@@Base+0x8e>
  408bff:	mov    rax,QWORD PTR [rbp-0x20]
  408c03:	mov    rcx,QWORD PTR [rax]
  408c06:	add    rcx,0x1
  408c0d:	mov    QWORD PTR [rax],rcx
  408c10:	mov    rax,QWORD PTR [rbp-0x8]
  408c14:	mov    rdi,QWORD PTR [rax+0x8]
  408c18:	call   408830 <free_node@@Base>
  408c1d:	lea    rax,[rip+0xae3c]        # 413a60 <__bss_start@@Base+0x900>
  408c24:	add    rax,0x18
  408c2a:	mov    QWORD PTR [rbp-0x28],rax
  408c2e:	mov    rax,QWORD PTR [rbp-0x28]
  408c32:	mov    rcx,QWORD PTR [rax]
  408c35:	add    rcx,0x1
  408c3c:	mov    QWORD PTR [rax],rcx
  408c3f:	mov    rax,QWORD PTR [rip+0xae3a]        # 413a80 <__bss_start@@Base+0x920>
  408c46:	add    rax,0x1
  408c4c:	mov    QWORD PTR [rip+0xae2d],rax        # 413a80 <__bss_start@@Base+0x920>
  408c53:	mov    rax,QWORD PTR [rbp-0x8]
  408c57:	mov    rdi,rax
  408c5a:	call   403040 <free@plt>
  408c5f:	add    rsp,0x30
  408c63:	pop    rbp
  408c64:	ret    
  408c65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c6f:	nop

0000000000408c70 <free_node_function@@Base>:
  408c70:	push   rbp
  408c71:	mov    rbp,rsp
  408c74:	sub    rsp,0x30
  408c78:	lea    rax,[rip+0xae11]        # 413a90 <__bss_start@@Base+0x930>
  408c7f:	mov    QWORD PTR [rbp-0x10],rdi
  408c83:	mov    QWORD PTR [rbp-0x18],rax
  408c87:	mov    rax,QWORD PTR [rbp-0x18]
  408c8b:	lea    rcx,[rip+0xadfe]        # 413a90 <__bss_start@@Base+0x930>
  408c92:	mov    rdx,rcx
  408c95:	add    rdx,0x8
  408c9c:	add    rcx,0x10
  408ca3:	mov    rsi,QWORD PTR [rax]
  408ca6:	add    rsi,0x1
  408cad:	mov    QWORD PTR [rax],rsi
  408cb0:	mov    rax,QWORD PTR [rbp-0x10]
  408cb4:	mov    QWORD PTR [rbp-0x8],rax
  408cb8:	mov    rsi,QWORD PTR [rbp-0x8]
  408cbc:	cmp    QWORD PTR [rsi+0x8],0x0
  408cc1:	mov    QWORD PTR [rbp-0x20],rdx
  408cc5:	mov    QWORD PTR [rbp-0x28],rcx
  408cc9:	je     408cfe <free_node_function@@Base+0x8e>
  408ccf:	mov    rax,QWORD PTR [rbp-0x20]
  408cd3:	mov    rcx,QWORD PTR [rax]
  408cd6:	add    rcx,0x1
  408cdd:	mov    QWORD PTR [rax],rcx
  408ce0:	mov    rax,QWORD PTR [rbp-0x8]
  408ce4:	mov    rdi,QWORD PTR [rax+0x8]
  408ce8:	call   408830 <free_node@@Base>
  408ced:	lea    rax,[rip+0xad9c]        # 413a90 <__bss_start@@Base+0x930>
  408cf4:	add    rax,0x18
  408cfa:	mov    QWORD PTR [rbp-0x28],rax
  408cfe:	mov    rax,QWORD PTR [rbp-0x28]
  408d02:	mov    rcx,QWORD PTR [rax]
  408d05:	add    rcx,0x1
  408d0c:	mov    QWORD PTR [rax],rcx
  408d0f:	mov    rax,QWORD PTR [rip+0xad9a]        # 413ab0 <__bss_start@@Base+0x950>
  408d16:	add    rax,0x1
  408d1c:	mov    QWORD PTR [rip+0xad8d],rax        # 413ab0 <__bss_start@@Base+0x950>
  408d23:	mov    rax,QWORD PTR [rbp-0x8]
  408d27:	mov    rdi,QWORD PTR [rax+0x10]
  408d2b:	call   403040 <free@plt>
  408d30:	mov    rax,QWORD PTR [rbp-0x8]
  408d34:	mov    rdi,rax
  408d37:	call   403040 <free@plt>
  408d3c:	add    rsp,0x30
  408d40:	pop    rbp
  408d41:	ret    
  408d42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d4c:	nop    DWORD PTR [rax+0x0]

0000000000408d50 <free_node_return@@Base>:
  408d50:	push   rbp
  408d51:	mov    rbp,rsp
  408d54:	sub    rsp,0x30
  408d58:	lea    rax,[rip+0xad61]        # 413ac0 <__bss_start@@Base+0x960>
  408d5f:	mov    QWORD PTR [rbp-0x10],rdi
  408d63:	mov    QWORD PTR [rbp-0x18],rax
  408d67:	mov    rax,QWORD PTR [rbp-0x18]
  408d6b:	lea    rcx,[rip+0xad4e]        # 413ac0 <__bss_start@@Base+0x960>
  408d72:	mov    rdx,rcx
  408d75:	add    rdx,0x8
  408d7c:	add    rcx,0x10
  408d83:	mov    rsi,QWORD PTR [rax]
  408d86:	add    rsi,0x1
  408d8d:	mov    QWORD PTR [rax],rsi
  408d90:	mov    rax,QWORD PTR [rbp-0x10]
  408d94:	mov    QWORD PTR [rbp-0x8],rax
  408d98:	mov    rsi,QWORD PTR [rbp-0x8]
  408d9c:	cmp    QWORD PTR [rsi+0x8],0x0
  408da1:	mov    QWORD PTR [rbp-0x20],rdx
  408da5:	mov    QWORD PTR [rbp-0x28],rcx
  408da9:	je     408dde <free_node_return@@Base+0x8e>
  408daf:	mov    rax,QWORD PTR [rbp-0x20]
  408db3:	mov    rcx,QWORD PTR [rax]
  408db6:	add    rcx,0x1
  408dbd:	mov    QWORD PTR [rax],rcx
  408dc0:	mov    rax,QWORD PTR [rbp-0x8]
  408dc4:	mov    rdi,QWORD PTR [rax+0x8]
  408dc8:	call   408830 <free_node@@Base>
  408dcd:	lea    rax,[rip+0xacec]        # 413ac0 <__bss_start@@Base+0x960>
  408dd4:	add    rax,0x18
  408dda:	mov    QWORD PTR [rbp-0x28],rax
  408dde:	mov    rax,QWORD PTR [rbp-0x28]
  408de2:	mov    rcx,QWORD PTR [rax]
  408de5:	add    rcx,0x1
  408dec:	mov    QWORD PTR [rax],rcx
  408def:	mov    rax,QWORD PTR [rip+0xacea]        # 413ae0 <__bss_start@@Base+0x980>
  408df6:	add    rax,0x1
  408dfc:	mov    QWORD PTR [rip+0xacdd],rax        # 413ae0 <__bss_start@@Base+0x980>
  408e03:	mov    rax,QWORD PTR [rbp-0x8]
  408e07:	mov    rdi,rax
  408e0a:	call   403040 <free@plt>
  408e0f:	add    rsp,0x30
  408e13:	pop    rbp
  408e14:	ret    
  408e15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e1f:	nop

0000000000408e20 <free_node_if@@Base>:
  408e20:	push   rbp
  408e21:	mov    rbp,rsp
  408e24:	sub    rsp,0x30
  408e28:	lea    rax,[rip+0xacc1]        # 413af0 <__bss_start@@Base+0x990>
  408e2f:	mov    QWORD PTR [rbp-0x10],rdi
  408e33:	mov    QWORD PTR [rbp-0x18],rax
  408e37:	mov    rax,QWORD PTR [rbp-0x18]
  408e3b:	lea    rcx,[rip+0xacae]        # 413af0 <__bss_start@@Base+0x990>
  408e42:	mov    rdx,rcx
  408e45:	add    rdx,0x8
  408e4c:	add    rcx,0x10
  408e53:	mov    rsi,QWORD PTR [rax]
  408e56:	add    rsi,0x1
  408e5d:	mov    QWORD PTR [rax],rsi
  408e60:	mov    rax,QWORD PTR [rbp-0x10]
  408e64:	mov    QWORD PTR [rbp-0x8],rax
  408e68:	mov    rsi,QWORD PTR [rbp-0x8]
  408e6c:	cmp    QWORD PTR [rsi+0x8],0x0
  408e71:	mov    QWORD PTR [rbp-0x20],rdx
  408e75:	mov    QWORD PTR [rbp-0x28],rcx
  408e79:	je     408eae <free_node_if@@Base+0x8e>
  408e7f:	mov    rax,QWORD PTR [rbp-0x20]
  408e83:	mov    rcx,QWORD PTR [rax]
  408e86:	add    rcx,0x1
  408e8d:	mov    QWORD PTR [rax],rcx
  408e90:	mov    rax,QWORD PTR [rbp-0x8]
  408e94:	mov    rdi,QWORD PTR [rax+0x8]
  408e98:	call   408830 <free_node@@Base>
  408e9d:	lea    rax,[rip+0xac4c]        # 413af0 <__bss_start@@Base+0x990>
  408ea4:	add    rax,0x18
  408eaa:	mov    QWORD PTR [rbp-0x28],rax
  408eae:	mov    rax,QWORD PTR [rbp-0x28]
  408eb2:	mov    rcx,QWORD PTR [rax]
  408eb5:	add    rcx,0x1
  408ebc:	mov    QWORD PTR [rax],rcx
  408ebf:	mov    rax,QWORD PTR [rip+0xac4a]        # 413b10 <__bss_start@@Base+0x9b0>
  408ec6:	add    rax,0x1
  408ecc:	mov    QWORD PTR [rip+0xac3d],rax        # 413b10 <__bss_start@@Base+0x9b0>
  408ed3:	mov    rax,QWORD PTR [rbp-0x8]
  408ed7:	mov    rdi,QWORD PTR [rax+0x10]
  408edb:	call   408830 <free_node@@Base>
  408ee0:	mov    rax,QWORD PTR [rbp-0x8]
  408ee4:	mov    rdi,QWORD PTR [rax+0x18]
  408ee8:	call   408830 <free_node@@Base>
  408eed:	mov    rax,QWORD PTR [rbp-0x8]
  408ef1:	mov    rdi,QWORD PTR [rax+0x20]
  408ef5:	call   408830 <free_node@@Base>
  408efa:	mov    rax,QWORD PTR [rbp-0x8]
  408efe:	mov    rdi,rax
  408f01:	call   403040 <free@plt>
  408f06:	add    rsp,0x30
  408f0a:	pop    rbp
  408f0b:	ret    
  408f0c:	nop    DWORD PTR [rax+0x0]

0000000000408f10 <free_node_boolean_operator@@Base>:
  408f10:	push   rbp
  408f11:	mov    rbp,rsp
  408f14:	sub    rsp,0x30
  408f18:	lea    rax,[rip+0xac01]        # 413b20 <__bss_start@@Base+0x9c0>
  408f1f:	mov    QWORD PTR [rbp-0x10],rdi
  408f23:	mov    QWORD PTR [rbp-0x18],rax
  408f27:	mov    rax,QWORD PTR [rbp-0x18]
  408f2b:	lea    rcx,[rip+0xabee]        # 413b20 <__bss_start@@Base+0x9c0>
  408f32:	mov    rdx,rcx
  408f35:	add    rdx,0x8
  408f3c:	add    rcx,0x10
  408f43:	mov    rsi,QWORD PTR [rax]
  408f46:	add    rsi,0x1
  408f4d:	mov    QWORD PTR [rax],rsi
  408f50:	mov    rax,QWORD PTR [rbp-0x10]
  408f54:	mov    QWORD PTR [rbp-0x8],rax
  408f58:	mov    rsi,QWORD PTR [rbp-0x8]
  408f5c:	cmp    QWORD PTR [rsi+0x8],0x0
  408f61:	mov    QWORD PTR [rbp-0x20],rdx
  408f65:	mov    QWORD PTR [rbp-0x28],rcx
  408f69:	je     408f9e <free_node_boolean_operator@@Base+0x8e>
  408f6f:	mov    rax,QWORD PTR [rbp-0x20]
  408f73:	mov    rcx,QWORD PTR [rax]
  408f76:	add    rcx,0x1
  408f7d:	mov    QWORD PTR [rax],rcx
  408f80:	mov    rax,QWORD PTR [rbp-0x8]
  408f84:	mov    rdi,QWORD PTR [rax+0x8]
  408f88:	call   408830 <free_node@@Base>
  408f8d:	lea    rax,[rip+0xab8c]        # 413b20 <__bss_start@@Base+0x9c0>
  408f94:	add    rax,0x18
  408f9a:	mov    QWORD PTR [rbp-0x28],rax
  408f9e:	mov    rax,QWORD PTR [rbp-0x28]
  408fa2:	mov    rcx,QWORD PTR [rax]
  408fa5:	add    rcx,0x1
  408fac:	mov    QWORD PTR [rax],rcx
  408faf:	mov    rax,QWORD PTR [rip+0xab8a]        # 413b40 <__bss_start@@Base+0x9e0>
  408fb6:	add    rax,0x1
  408fbc:	mov    QWORD PTR [rip+0xab7d],rax        # 413b40 <__bss_start@@Base+0x9e0>
  408fc3:	mov    rax,QWORD PTR [rbp-0x8]
  408fc7:	mov    rdi,QWORD PTR [rax+0x10]
  408fcb:	call   408830 <free_node@@Base>
  408fd0:	mov    rax,QWORD PTR [rbp-0x8]
  408fd4:	mov    rdi,QWORD PTR [rax+0x18]
  408fd8:	call   408830 <free_node@@Base>
  408fdd:	mov    rax,QWORD PTR [rbp-0x8]
  408fe1:	mov    rdi,rax
  408fe4:	call   403040 <free@plt>
  408fe9:	add    rsp,0x30
  408fed:	pop    rbp
  408fee:	ret    
  408fef:	nop

0000000000408ff0 <get_boolean_op_value@@Base>:
  408ff0:	push   rbp
  408ff1:	mov    rbp,rsp
  408ff4:	sub    rsp,0x100
  408ffb:	lea    rax,[rip+0xab4e]        # 413b50 <__bss_start@@Base+0x9f0>
  409002:	mov    QWORD PTR [rbp-0x20],rdi
  409006:	mov    QWORD PTR [rbp-0x28],rax
  40900a:	mov    rax,QWORD PTR [rbp-0x28]
  40900e:	lea    rcx,[rip+0xab3b]        # 413b50 <__bss_start@@Base+0x9f0>
  409015:	mov    rdx,rcx
  409018:	add    rdx,0x8
  40901f:	add    rcx,0x10
  409026:	mov    rsi,QWORD PTR [rax]
  409029:	add    rsi,0x1
  409030:	mov    QWORD PTR [rax],rsi
  409033:	mov    rax,QWORD PTR [rbp-0x20]
  409037:	mov    QWORD PTR [rbp-0x10],rax
  40903b:	mov    rsi,QWORD PTR [rbp-0x10]
  40903f:	mov    rdi,QWORD PTR [rsi+0x8]
  409043:	mov    esi,0x2
  409048:	mov    QWORD PTR [rbp-0x30],rdx
  40904c:	mov    QWORD PTR [rbp-0x38],rcx
  409050:	call   403160 <strnlen@plt>
  409055:	mov    QWORD PTR [rbp-0x18],rax
  409059:	cmp    QWORD PTR [rbp-0x18],0x2
  40905e:	mov    rax,QWORD PTR [rbp-0x30]
  409062:	mov    rcx,QWORD PTR [rbp-0x38]
  409066:	mov    QWORD PTR [rbp-0x40],rax
  40906a:	mov    QWORD PTR [rbp-0x48],rcx
  40906e:	jne    4093e5 <get_boolean_op_value@@Base+0x3f5>
  409074:	mov    rax,QWORD PTR [rbp-0x40]
  409078:	mov    rcx,QWORD PTR [rax]
  40907b:	add    rcx,0x1
  409082:	mov    QWORD PTR [rax],rcx
  409085:	mov    rax,QWORD PTR [rbp-0x10]
  409089:	mov    rdi,QWORD PTR [rax+0x8]
  40908d:	lea    rsi,[rip+0x58b4]        # 40e948 <_IO_stdin_used@@Base+0x948>
  409094:	mov    edx,0x2
  409099:	call   403070 <strncmp@plt>
  40909e:	lea    rcx,[rip+0xaaab]        # 413b50 <__bss_start@@Base+0x9f0>
  4090a5:	mov    rdx,rcx
  4090a8:	add    rdx,0x18
  4090af:	add    rcx,0x20
  4090b6:	cmp    eax,0x0
  4090b9:	mov    QWORD PTR [rbp-0x50],rdx
  4090bd:	mov    QWORD PTR [rbp-0x58],rcx
  4090c1:	jne    4090f6 <get_boolean_op_value@@Base+0x106>
  4090c7:	mov    rax,QWORD PTR [rbp-0x50]
  4090cb:	lea    rcx,[rip+0xaa7e]        # 413b50 <__bss_start@@Base+0x9f0>
  4090d2:	add    rcx,0x28
  4090d9:	mov    rdx,QWORD PTR [rax]
  4090dc:	add    rdx,0x1
  4090e3:	mov    QWORD PTR [rax],rdx
  4090e6:	mov    DWORD PTR [rbp-0x4],0x0
  4090ed:	mov    QWORD PTR [rbp-0x60],rcx
  4090f1:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  4090f6:	mov    rax,QWORD PTR [rbp-0x58]
  4090fa:	mov    rcx,QWORD PTR [rax]
  4090fd:	add    rcx,0x1
  409104:	mov    QWORD PTR [rax],rcx
  409107:	mov    rax,QWORD PTR [rbp-0x10]
  40910b:	mov    rdi,QWORD PTR [rax+0x8]
  40910f:	lea    rsi,[rip+0x5835]        # 40e94b <_IO_stdin_used@@Base+0x94b>
  409116:	mov    edx,0x2
  40911b:	call   403070 <strncmp@plt>
  409120:	lea    rcx,[rip+0xaa29]        # 413b50 <__bss_start@@Base+0x9f0>
  409127:	mov    rdx,rcx
  40912a:	add    rdx,0x30
  409131:	add    rcx,0x38
  409138:	cmp    eax,0x0
  40913b:	mov    QWORD PTR [rbp-0x68],rdx
  40913f:	mov    QWORD PTR [rbp-0x70],rcx
  409143:	jne    409178 <get_boolean_op_value@@Base+0x188>
  409149:	mov    rax,QWORD PTR [rbp-0x68]
  40914d:	lea    rcx,[rip+0xa9fc]        # 413b50 <__bss_start@@Base+0x9f0>
  409154:	add    rcx,0x40
  40915b:	mov    rdx,QWORD PTR [rax]
  40915e:	add    rdx,0x1
  409165:	mov    QWORD PTR [rax],rdx
  409168:	mov    DWORD PTR [rbp-0x4],0x1
  40916f:	mov    QWORD PTR [rbp-0x60],rcx
  409173:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  409178:	mov    rax,QWORD PTR [rbp-0x70]
  40917c:	mov    rcx,QWORD PTR [rax]
  40917f:	add    rcx,0x1
  409186:	mov    QWORD PTR [rax],rcx
  409189:	mov    rax,QWORD PTR [rbp-0x10]
  40918d:	mov    rdi,QWORD PTR [rax+0x8]
  409191:	lea    rsi,[rip+0x57b6]        # 40e94e <_IO_stdin_used@@Base+0x94e>
  409198:	mov    edx,0x2
  40919d:	call   403070 <strncmp@plt>
  4091a2:	lea    rcx,[rip+0xa9a7]        # 413b50 <__bss_start@@Base+0x9f0>
  4091a9:	mov    rdx,rcx
  4091ac:	add    rdx,0x48
  4091b3:	add    rcx,0x50
  4091ba:	cmp    eax,0x0
  4091bd:	mov    QWORD PTR [rbp-0x78],rdx
  4091c1:	mov    QWORD PTR [rbp-0x80],rcx
  4091c5:	jne    4091fa <get_boolean_op_value@@Base+0x20a>
  4091cb:	mov    rax,QWORD PTR [rbp-0x78]
  4091cf:	lea    rcx,[rip+0xa97a]        # 413b50 <__bss_start@@Base+0x9f0>
  4091d6:	add    rcx,0x58
  4091dd:	mov    rdx,QWORD PTR [rax]
  4091e0:	add    rdx,0x1
  4091e7:	mov    QWORD PTR [rax],rdx
  4091ea:	mov    DWORD PTR [rbp-0x4],0x2
  4091f1:	mov    QWORD PTR [rbp-0x60],rcx
  4091f5:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  4091fa:	mov    rax,QWORD PTR [rbp-0x80]
  4091fe:	mov    rcx,QWORD PTR [rax]
  409201:	add    rcx,0x1
  409208:	mov    QWORD PTR [rax],rcx
  40920b:	mov    rax,QWORD PTR [rbp-0x10]
  40920f:	mov    rdi,QWORD PTR [rax+0x8]
  409213:	lea    rsi,[rip+0x5737]        # 40e951 <_IO_stdin_used@@Base+0x951>
  40921a:	mov    edx,0x2
  40921f:	call   403070 <strncmp@plt>
  409224:	lea    rcx,[rip+0xa925]        # 413b50 <__bss_start@@Base+0x9f0>
  40922b:	mov    rdx,rcx
  40922e:	add    rdx,0x60
  409235:	add    rcx,0x68
  40923c:	cmp    eax,0x0
  40923f:	mov    QWORD PTR [rbp-0x88],rdx
  409246:	mov    QWORD PTR [rbp-0x90],rcx
  40924d:	jne    409285 <get_boolean_op_value@@Base+0x295>
  409253:	mov    rax,QWORD PTR [rbp-0x88]
  40925a:	lea    rcx,[rip+0xa8ef]        # 413b50 <__bss_start@@Base+0x9f0>
  409261:	add    rcx,0x70
  409268:	mov    rdx,QWORD PTR [rax]
  40926b:	add    rdx,0x1
  409272:	mov    QWORD PTR [rax],rdx
  409275:	mov    DWORD PTR [rbp-0x4],0x3
  40927c:	mov    QWORD PTR [rbp-0x60],rcx
  409280:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  409285:	mov    rax,QWORD PTR [rbp-0x90]
  40928c:	mov    rcx,QWORD PTR [rax]
  40928f:	add    rcx,0x1
  409296:	mov    QWORD PTR [rax],rcx
  409299:	mov    rax,QWORD PTR [rbp-0x10]
  40929d:	mov    rdi,QWORD PTR [rax+0x8]
  4092a1:	lea    rsi,[rip+0x56ac]        # 40e954 <_IO_stdin_used@@Base+0x954>
  4092a8:	mov    edx,0x2
  4092ad:	call   403070 <strncmp@plt>
  4092b2:	lea    rcx,[rip+0xa897]        # 413b50 <__bss_start@@Base+0x9f0>
  4092b9:	mov    rdx,rcx
  4092bc:	add    rdx,0x78
  4092c3:	add    rcx,0x80
  4092ca:	cmp    eax,0x0
  4092cd:	mov    QWORD PTR [rbp-0x98],rdx
  4092d4:	mov    QWORD PTR [rbp-0xa0],rcx
  4092db:	jne    409313 <get_boolean_op_value@@Base+0x323>
  4092e1:	mov    rax,QWORD PTR [rbp-0x98]
  4092e8:	lea    rcx,[rip+0xa861]        # 413b50 <__bss_start@@Base+0x9f0>
  4092ef:	add    rcx,0x88
  4092f6:	mov    rdx,QWORD PTR [rax]
  4092f9:	add    rdx,0x1
  409300:	mov    QWORD PTR [rax],rdx
  409303:	mov    DWORD PTR [rbp-0x4],0x4
  40930a:	mov    QWORD PTR [rbp-0x60],rcx
  40930e:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  409313:	mov    rax,QWORD PTR [rbp-0xa0]
  40931a:	mov    rcx,QWORD PTR [rax]
  40931d:	add    rcx,0x1
  409324:	mov    QWORD PTR [rax],rcx
  409327:	mov    rax,QWORD PTR [rbp-0x10]
  40932b:	mov    rdi,QWORD PTR [rax+0x8]
  40932f:	lea    rsi,[rip+0x5621]        # 40e957 <_IO_stdin_used@@Base+0x957>
  409336:	mov    edx,0x2
  40933b:	call   403070 <strncmp@plt>
  409340:	lea    rcx,[rip+0xa809]        # 413b50 <__bss_start@@Base+0x9f0>
  409347:	mov    rdx,rcx
  40934a:	add    rdx,0x90
  409351:	add    rcx,0x98
  409358:	cmp    eax,0x0
  40935b:	mov    QWORD PTR [rbp-0xa8],rdx
  409362:	mov    QWORD PTR [rbp-0xb0],rcx
  409369:	jne    4093a1 <get_boolean_op_value@@Base+0x3b1>
  40936f:	mov    rax,QWORD PTR [rbp-0xa8]
  409376:	lea    rcx,[rip+0xa7d3]        # 413b50 <__bss_start@@Base+0x9f0>
  40937d:	add    rcx,0xa0
  409384:	mov    rdx,QWORD PTR [rax]
  409387:	add    rdx,0x1
  40938e:	mov    QWORD PTR [rax],rdx
  409391:	mov    DWORD PTR [rbp-0x4],0x5
  409398:	mov    QWORD PTR [rbp-0x60],rcx
  40939c:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  4093a1:	mov    rax,QWORD PTR [rbp-0xb0]
  4093a8:	mov    rcx,QWORD PTR [rip+0x9c49]        # 412ff8 <stderr@GLIBC_2.2.5>
  4093af:	mov    rdx,QWORD PTR [rax]
  4093b2:	add    rdx,0x1
  4093b9:	mov    QWORD PTR [rax],rdx
  4093bc:	mov    rdi,QWORD PTR [rcx]
  4093bf:	mov    rax,QWORD PTR [rbp-0x10]
  4093c3:	mov    rdx,QWORD PTR [rax+0x8]
  4093c7:	lea    rsi,[rip+0x558c]        # 40e95a <_IO_stdin_used@@Base+0x95a>
  4093ce:	mov    al,0x0
  4093d0:	call   403170 <fprintf@plt>
  4093d5:	mov    edi,0x1
  4093da:	mov    DWORD PTR [rbp-0xb4],eax
  4093e0:	call   403250 <exit@plt>
  4093e5:	mov    rax,QWORD PTR [rbp-0x48]
  4093e9:	mov    rcx,QWORD PTR [rax]
  4093ec:	inc    rcx
  4093ef:	mov    QWORD PTR [rax],rcx
  4093f2:	mov    rax,QWORD PTR [rbp-0x10]
  4093f6:	mov    rax,QWORD PTR [rax+0x8]
  4093fa:	movsx  edx,BYTE PTR [rax]
  4093fd:	lea    rax,[rip+0xa80c]        # 413c10 <__bss_start@@Base+0xab0>
  409404:	lea    rcx,[rip+0xa7fd]        # 413c08 <__bss_start@@Base+0xaa8>
  40940b:	lea    rsi,[rip+0xa7ee]        # 413c00 <__bss_start@@Base+0xaa0>
  409412:	lea    rdi,[rip+0xa7df]        # 413bf8 <__bss_start@@Base+0xa98>
  409419:	mov    r8d,edx
  40941c:	sub    r8d,0x21
  409420:	mov    DWORD PTR [rbp-0xb8],edx
  409426:	mov    QWORD PTR [rbp-0xc0],rax
  40942d:	mov    QWORD PTR [rbp-0xc8],rcx
  409434:	mov    QWORD PTR [rbp-0xd0],rdi
  40943b:	mov    QWORD PTR [rbp-0xd8],rsi
  409442:	je     40949f <get_boolean_op_value@@Base+0x4af>
  409448:	jmp    40944d <get_boolean_op_value@@Base+0x45d>
  40944d:	mov    eax,DWORD PTR [rbp-0xb8]
  409453:	sub    eax,0x3c
  409456:	mov    rcx,QWORD PTR [rbp-0xc8]
  40945d:	mov    QWORD PTR [rbp-0xe0],rcx
  409464:	je     4094d1 <get_boolean_op_value@@Base+0x4e1>
  40946a:	jmp    40946f <get_boolean_op_value@@Base+0x47f>
  40946f:	mov    eax,DWORD PTR [rbp-0xb8]
  409475:	sub    eax,0x3e
  409478:	mov    rcx,QWORD PTR [rbp-0xc0]
  40947f:	mov    rdx,QWORD PTR [rbp-0xd0]
  409486:	mov    QWORD PTR [rbp-0xe8],rcx
  40948d:	mov    QWORD PTR [rbp-0xf0],rdx
  409494:	je     409503 <get_boolean_op_value@@Base+0x513>
  40949a:	jmp    409535 <get_boolean_op_value@@Base+0x545>
  40949f:	mov    rax,QWORD PTR [rbp-0xd8]
  4094a6:	lea    rcx,[rip+0xa6a3]        # 413b50 <__bss_start@@Base+0x9f0>
  4094ad:	add    rcx,0xc8
  4094b4:	mov    rdx,QWORD PTR [rax]
  4094b7:	add    rdx,0x1
  4094be:	mov    QWORD PTR [rax],rdx
  4094c1:	mov    DWORD PTR [rbp-0x4],0x8
  4094c8:	mov    QWORD PTR [rbp-0x60],rcx
  4094cc:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  4094d1:	mov    rax,QWORD PTR [rbp-0xe0]
  4094d8:	lea    rcx,[rip+0xa671]        # 413b50 <__bss_start@@Base+0x9f0>
  4094df:	add    rcx,0xd0
  4094e6:	mov    rdx,QWORD PTR [rax]
  4094e9:	add    rdx,0x1
  4094f0:	mov    QWORD PTR [rax],rdx
  4094f3:	mov    DWORD PTR [rbp-0x4],0x6
  4094fa:	mov    QWORD PTR [rbp-0x60],rcx
  4094fe:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  409503:	mov    rax,QWORD PTR [rbp-0xe8]
  40950a:	lea    rcx,[rip+0xa63f]        # 413b50 <__bss_start@@Base+0x9f0>
  409511:	add    rcx,0xd8
  409518:	mov    rdx,QWORD PTR [rax]
  40951b:	add    rdx,0x1
  409522:	mov    QWORD PTR [rax],rdx
  409525:	mov    DWORD PTR [rbp-0x4],0x7
  40952c:	mov    QWORD PTR [rbp-0x60],rcx
  409530:	jmp    409579 <get_boolean_op_value@@Base+0x589>
  409535:	mov    rax,QWORD PTR [rbp-0xf0]
  40953c:	mov    rcx,QWORD PTR [rip+0x9ab5]        # 412ff8 <stderr@GLIBC_2.2.5>
  409543:	mov    rdx,QWORD PTR [rax]
  409546:	add    rdx,0x1
  40954d:	mov    QWORD PTR [rax],rdx
  409550:	mov    rdi,QWORD PTR [rcx]
  409553:	mov    rax,QWORD PTR [rbp-0x10]
  409557:	mov    rdx,QWORD PTR [rax+0x8]
  40955b:	lea    rsi,[rip+0x53f8]        # 40e95a <_IO_stdin_used@@Base+0x95a>
  409562:	mov    al,0x0
  409564:	call   403170 <fprintf@plt>
  409569:	mov    edi,0x1
  40956e:	mov    DWORD PTR [rbp-0xf4],eax
  409574:	call   403250 <exit@plt>
  409579:	mov    rax,QWORD PTR [rbp-0x60]
  40957d:	mov    rcx,QWORD PTR [rax]
  409580:	add    rcx,0x1
  409587:	mov    QWORD PTR [rax],rcx
  40958a:	mov    rax,QWORD PTR [rip+0xa69f]        # 413c30 <__bss_start@@Base+0xad0>
  409591:	add    rax,0x1
  409597:	mov    QWORD PTR [rip+0xa692],rax        # 413c30 <__bss_start@@Base+0xad0>
  40959e:	mov    eax,DWORD PTR [rbp-0x4]
  4095a1:	add    rsp,0x100
  4095a8:	pop    rbp
  4095a9:	ret    
  4095aa:	nop    WORD PTR [rax+rax*1+0x0]
  4095b0:	sub    rsp,0x38
  4095b4:	xor    eax,eax
  4095b6:	mov    DWORD PTR [rsp+0x34],eax
  4095ba:	jmp    4095bf <get_boolean_op_value@@Base+0x5cf>
  4095bf:	mov    eax,DWORD PTR [rsp+0x34]
  4095c3:	movsxd rcx,eax
  4095c6:	imul   rcx,rcx,0x30
  4095cd:	lea    rdx,[rip+0x95bc]        # 412b90 <_IO_stdin_used@@Base+0x4b90>
  4095d4:	add    rdx,rcx
  4095d7:	mov    rdi,QWORD PTR [rdx]
  4095da:	mov    rsi,QWORD PTR [rdx+0x8]
  4095de:	mov    r8d,DWORD PTR [rdx+0x10]
  4095e2:	mov    QWORD PTR [rsp+0x28],rdx
  4095e7:	mov    edx,r8d
  4095ea:	mov    DWORD PTR [rsp+0x24],eax
  4095ee:	call   40b7c0 <read_boolean_unary_expression@@Base+0x800>
  4095f3:	xor    eax,eax
  4095f5:	mov    rcx,QWORD PTR [rsp+0x28]
  4095fa:	mov    edx,DWORD PTR [rcx+0x18]
  4095fd:	mov    rsi,QWORD PTR [rcx+0x20]
  409601:	mov    rdi,QWORD PTR [rcx+0x28]
  409605:	cmp    eax,edx
  409607:	mov    DWORD PTR [rsp+0x20],edx
  40960b:	mov    QWORD PTR [rsp+0x18],rsi
  409610:	mov    QWORD PTR [rsp+0x10],rdi
  409615:	mov    DWORD PTR [rsp+0xc],eax
  409619:	jge    40968d <get_boolean_op_value@@Base+0x69d>
  40961f:	mov    eax,DWORD PTR [rsp+0xc]
  409623:	movsxd rcx,eax
  409626:	shl    rcx,0x5
  40962a:	mov    rdx,QWORD PTR [rsp+0x18]
  40962f:	add    rdx,rcx
  409632:	mov    edi,DWORD PTR [rdx]
  409634:	mov    rsi,QWORD PTR [rdx+0x8]
  409638:	mov    r8d,DWORD PTR [rdx+0x10]
  40963c:	mov    r9b,BYTE PTR [rdx+0x14]
  409640:	mov    r10d,DWORD PTR [rdx+0x18]
  409644:	mov    edx,r8d
  409647:	movzx  ecx,r9b
  40964b:	mov    r8d,r10d
  40964e:	mov    DWORD PTR [rsp+0x8],eax
  409652:	call   40bc10 <read_boolean_unary_expression@@Base+0xc50>
  409657:	mov    eax,DWORD PTR [rsp+0x8]
  40965b:	movsxd rsi,eax
  40965e:	shl    rsi,0x4
  409662:	mov    r11,QWORD PTR [rsp+0x10]
  409667:	add    r11,rsi
  40966a:	mov    edi,DWORD PTR [r11]
  40966d:	mov    rsi,QWORD PTR [r11+0x8]
  409671:	call   40c030 <read_boolean_unary_expression@@Base+0x1070>
  409676:	mov    eax,DWORD PTR [rsp+0x8]
  40967a:	add    eax,0x1
  40967d:	mov    ecx,DWORD PTR [rsp+0x20]
  409681:	cmp    eax,ecx
  409683:	mov    DWORD PTR [rsp+0xc],eax
  409687:	jl     40961f <get_boolean_op_value@@Base+0x62f>
  40968d:	call   40c440 <read_boolean_unary_expression@@Base+0x1480>
  409692:	call   40cbe0 <read_boolean_unary_expression@@Base+0x1c20>
  409697:	mov    eax,DWORD PTR [rsp+0x24]
  40969b:	add    eax,0x1
  40969e:	cmp    eax,0x1
  4096a1:	mov    DWORD PTR [rsp+0x34],eax
  4096a5:	jl     4095bf <get_boolean_op_value@@Base+0x5cf>
  4096ab:	add    rsp,0x38
  4096af:	ret    
  4096b0:	push   rax
  4096b1:	call   4095b0 <get_boolean_op_value@@Base+0x5c0>
  4096b6:	mov    QWORD PTR [rip+0xa277],0x0        # 413938 <__bss_start@@Base+0x7d8>
  4096c1:	mov    QWORD PTR [rip+0xa264],0x0        # 413930 <__bss_start@@Base+0x7d0>
  4096cc:	mov    QWORD PTR [rip+0xa271],0x0        # 413948 <__bss_start@@Base+0x7e8>
  4096d7:	mov    QWORD PTR [rip+0xa25e],0x0        # 413940 <__bss_start@@Base+0x7e0>
  4096e2:	mov    QWORD PTR [rip+0xa26b],0x0        # 413958 <__bss_start@@Base+0x7f8>
  4096ed:	mov    QWORD PTR [rip+0xa258],0x0        # 413950 <__bss_start@@Base+0x7f0>
  4096f8:	mov    QWORD PTR [rip+0xa265],0x0        # 413968 <__bss_start@@Base+0x808>
  409703:	mov    QWORD PTR [rip+0xa252],0x0        # 413960 <__bss_start@@Base+0x800>
  40970e:	mov    QWORD PTR [rip+0xa25f],0x0        # 413978 <__bss_start@@Base+0x818>
  409719:	mov    QWORD PTR [rip+0xa24c],0x0        # 413970 <__bss_start@@Base+0x810>
  409724:	mov    QWORD PTR [rip+0xa259],0x0        # 413988 <__bss_start@@Base+0x828>
  40972f:	mov    QWORD PTR [rip+0xa246],0x0        # 413980 <__bss_start@@Base+0x820>
  40973a:	mov    QWORD PTR [rip+0xa253],0x0        # 413998 <__bss_start@@Base+0x838>
  409745:	mov    QWORD PTR [rip+0xa240],0x0        # 413990 <__bss_start@@Base+0x830>
  409750:	mov    QWORD PTR [rip+0xa24d],0x0        # 4139a8 <__bss_start@@Base+0x848>
  40975b:	mov    QWORD PTR [rip+0xa23a],0x0        # 4139a0 <__bss_start@@Base+0x840>
  409766:	mov    QWORD PTR [rip+0xa2af],0x0        # 413a20 <__bss_start@@Base+0x8c0>
  409771:	mov    QWORD PTR [rip+0xa29c],0x0        # 413a18 <__bss_start@@Base+0x8b8>
  40977c:	mov    QWORD PTR [rip+0xa289],0x0        # 413a10 <__bss_start@@Base+0x8b0>
  409787:	mov    QWORD PTR [rip+0xa276],0x0        # 413a08 <__bss_start@@Base+0x8a8>
  409792:	mov    QWORD PTR [rip+0xa263],0x0        # 413a00 <__bss_start@@Base+0x8a0>
  40979d:	mov    QWORD PTR [rip+0xa250],0x0        # 4139f8 <__bss_start@@Base+0x898>
  4097a8:	mov    QWORD PTR [rip+0xa23d],0x0        # 4139f0 <__bss_start@@Base+0x890>
  4097b3:	mov    QWORD PTR [rip+0xa22a],0x0        # 4139e8 <__bss_start@@Base+0x888>
  4097be:	mov    QWORD PTR [rip+0xa217],0x0        # 4139e0 <__bss_start@@Base+0x880>
  4097c9:	mov    QWORD PTR [rip+0xa204],0x0        # 4139d8 <__bss_start@@Base+0x878>
  4097d4:	mov    QWORD PTR [rip+0xa1f1],0x0        # 4139d0 <__bss_start@@Base+0x870>
  4097df:	mov    QWORD PTR [rip+0xa1de],0x0        # 4139c8 <__bss_start@@Base+0x868>
  4097ea:	mov    QWORD PTR [rip+0xa1cb],0x0        # 4139c0 <__bss_start@@Base+0x860>
  4097f5:	mov    QWORD PTR [rip+0xa1b8],0x0        # 4139b8 <__bss_start@@Base+0x858>
  409800:	mov    QWORD PTR [rip+0xa1a5],0x0        # 4139b0 <__bss_start@@Base+0x850>
  40980b:	mov    QWORD PTR [rip+0xa23a],0x0        # 413a50 <__bss_start@@Base+0x8f0>
  409816:	mov    QWORD PTR [rip+0xa227],0x0        # 413a48 <__bss_start@@Base+0x8e8>
  409821:	mov    QWORD PTR [rip+0xa214],0x0        # 413a40 <__bss_start@@Base+0x8e0>
  40982c:	mov    QWORD PTR [rip+0xa201],0x0        # 413a38 <__bss_start@@Base+0x8d8>
  409837:	mov    QWORD PTR [rip+0xa1ee],0x0        # 413a30 <__bss_start@@Base+0x8d0>
  409842:	mov    QWORD PTR [rip+0xa233],0x0        # 413a80 <__bss_start@@Base+0x920>
  40984d:	mov    QWORD PTR [rip+0xa220],0x0        # 413a78 <__bss_start@@Base+0x918>
  409858:	mov    QWORD PTR [rip+0xa20d],0x0        # 413a70 <__bss_start@@Base+0x910>
  409863:	mov    QWORD PTR [rip+0xa1fa],0x0        # 413a68 <__bss_start@@Base+0x908>
  40986e:	mov    QWORD PTR [rip+0xa1e7],0x0        # 413a60 <__bss_start@@Base+0x900>
  409879:	mov    QWORD PTR [rip+0xa22c],0x0        # 413ab0 <__bss_start@@Base+0x950>
  409884:	mov    QWORD PTR [rip+0xa219],0x0        # 413aa8 <__bss_start@@Base+0x948>
  40988f:	mov    QWORD PTR [rip+0xa206],0x0        # 413aa0 <__bss_start@@Base+0x940>
  40989a:	mov    QWORD PTR [rip+0xa1f3],0x0        # 413a98 <__bss_start@@Base+0x938>
  4098a5:	mov    QWORD PTR [rip+0xa1e0],0x0        # 413a90 <__bss_start@@Base+0x930>
  4098b0:	mov    QWORD PTR [rip+0xa225],0x0        # 413ae0 <__bss_start@@Base+0x980>
  4098bb:	mov    QWORD PTR [rip+0xa212],0x0        # 413ad8 <__bss_start@@Base+0x978>
  4098c6:	mov    QWORD PTR [rip+0xa1ff],0x0        # 413ad0 <__bss_start@@Base+0x970>
  4098d1:	mov    QWORD PTR [rip+0xa1ec],0x0        # 413ac8 <__bss_start@@Base+0x968>
  4098dc:	mov    QWORD PTR [rip+0xa1d9],0x0        # 413ac0 <__bss_start@@Base+0x960>
  4098e7:	mov    QWORD PTR [rip+0xa21e],0x0        # 413b10 <__bss_start@@Base+0x9b0>
  4098f2:	mov    QWORD PTR [rip+0xa20b],0x0        # 413b08 <__bss_start@@Base+0x9a8>
  4098fd:	mov    QWORD PTR [rip+0xa1f8],0x0        # 413b00 <__bss_start@@Base+0x9a0>
  409908:	mov    QWORD PTR [rip+0xa1e5],0x0        # 413af8 <__bss_start@@Base+0x998>
  409913:	mov    QWORD PTR [rip+0xa1d2],0x0        # 413af0 <__bss_start@@Base+0x990>
  40991e:	mov    QWORD PTR [rip+0xa217],0x0        # 413b40 <__bss_start@@Base+0x9e0>
  409929:	mov    QWORD PTR [rip+0xa204],0x0        # 413b38 <__bss_start@@Base+0x9d8>
  409934:	mov    QWORD PTR [rip+0xa1f1],0x0        # 413b30 <__bss_start@@Base+0x9d0>
  40993f:	mov    QWORD PTR [rip+0xa1de],0x0        # 413b28 <__bss_start@@Base+0x9c8>
  40994a:	mov    QWORD PTR [rip+0xa1cb],0x0        # 413b20 <__bss_start@@Base+0x9c0>
  409955:	mov    QWORD PTR [rip+0xa2d0],0x0        # 413c30 <__bss_start@@Base+0xad0>
  409960:	mov    QWORD PTR [rip+0xa2bd],0x0        # 413c28 <__bss_start@@Base+0xac8>
  40996b:	mov    QWORD PTR [rip+0xa2aa],0x0        # 413c20 <__bss_start@@Base+0xac0>
  409976:	mov    QWORD PTR [rip+0xa297],0x0        # 413c18 <__bss_start@@Base+0xab8>
  409981:	mov    QWORD PTR [rip+0xa284],0x0        # 413c10 <__bss_start@@Base+0xab0>
  40998c:	mov    QWORD PTR [rip+0xa271],0x0        # 413c08 <__bss_start@@Base+0xaa8>
  409997:	mov    QWORD PTR [rip+0xa25e],0x0        # 413c00 <__bss_start@@Base+0xaa0>
  4099a2:	mov    QWORD PTR [rip+0xa24b],0x0        # 413bf8 <__bss_start@@Base+0xa98>
  4099ad:	mov    QWORD PTR [rip+0xa238],0x0        # 413bf0 <__bss_start@@Base+0xa90>
  4099b8:	mov    QWORD PTR [rip+0xa225],0x0        # 413be8 <__bss_start@@Base+0xa88>
  4099c3:	mov    QWORD PTR [rip+0xa212],0x0        # 413be0 <__bss_start@@Base+0xa80>
  4099ce:	mov    QWORD PTR [rip+0xa1ff],0x0        # 413bd8 <__bss_start@@Base+0xa78>
  4099d9:	mov    QWORD PTR [rip+0xa1ec],0x0        # 413bd0 <__bss_start@@Base+0xa70>
  4099e4:	mov    QWORD PTR [rip+0xa1d9],0x0        # 413bc8 <__bss_start@@Base+0xa68>
  4099ef:	mov    QWORD PTR [rip+0xa1c6],0x0        # 413bc0 <__bss_start@@Base+0xa60>
  4099fa:	mov    QWORD PTR [rip+0xa1b3],0x0        # 413bb8 <__bss_start@@Base+0xa58>
  409a05:	mov    QWORD PTR [rip+0xa1a0],0x0        # 413bb0 <__bss_start@@Base+0xa50>
  409a10:	mov    QWORD PTR [rip+0xa18d],0x0        # 413ba8 <__bss_start@@Base+0xa48>
  409a1b:	mov    QWORD PTR [rip+0xa17a],0x0        # 413ba0 <__bss_start@@Base+0xa40>
  409a26:	mov    QWORD PTR [rip+0xa167],0x0        # 413b98 <__bss_start@@Base+0xa38>
  409a31:	mov    QWORD PTR [rip+0xa154],0x0        # 413b90 <__bss_start@@Base+0xa30>
  409a3c:	mov    QWORD PTR [rip+0xa141],0x0        # 413b88 <__bss_start@@Base+0xa28>
  409a47:	mov    QWORD PTR [rip+0xa12e],0x0        # 413b80 <__bss_start@@Base+0xa20>
  409a52:	mov    QWORD PTR [rip+0xa11b],0x0        # 413b78 <__bss_start@@Base+0xa18>
  409a5d:	mov    QWORD PTR [rip+0xa108],0x0        # 413b70 <__bss_start@@Base+0xa10>
  409a68:	mov    QWORD PTR [rip+0xa0f5],0x0        # 413b68 <__bss_start@@Base+0xa08>
  409a73:	mov    QWORD PTR [rip+0xa0e2],0x0        # 413b60 <__bss_start@@Base+0xa00>
  409a7e:	mov    QWORD PTR [rip+0xa0cf],0x0        # 413b58 <__bss_start@@Base+0x9f8>
  409a89:	mov    QWORD PTR [rip+0xa0bc],0x0        # 413b50 <__bss_start@@Base+0x9f0>
  409a94:	pop    rax
  409a95:	ret    
  409a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409aa0:	push   rax
  409aa1:	lea    rdi,[rip+0xfffffffffffffb08]        # 4095b0 <get_boolean_op_value@@Base+0x5c0>
  409aa8:	lea    rsi,[rip+0xfffffffffffffc01]        # 4096b0 <get_boolean_op_value@@Base+0x6c0>
  409aaf:	call   40cfc0 <__gcov_flush@@Base+0xb0>
  409ab4:	pop    rax
  409ab5:	ret    
  409ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409ac0 <init_grammar@@Base>:
  409ac0:	push   rbp
  409ac1:	mov    rbp,rsp
  409ac4:	lea    rax,[rip+0xa175]        # 413c40 <__bss_start@@Base+0xae0>
  409acb:	mov    QWORD PTR [rbp-0x18],rdi
  409acf:	mov    QWORD PTR [rbp-0x20],rsi
  409ad3:	mov    QWORD PTR [rbp-0x28],rax
  409ad7:	mov    rax,QWORD PTR [rbp-0x28]
  409adb:	mov    rcx,QWORD PTR [rax]
  409ade:	add    rcx,0x1
  409ae5:	mov    QWORD PTR [rax],rcx
  409ae8:	mov    rax,QWORD PTR [rip+0xa159]        # 413c48 <__bss_start@@Base+0xae8>
  409aef:	add    rax,0x1
  409af5:	mov    QWORD PTR [rip+0xa14c],rax        # 413c48 <__bss_start@@Base+0xae8>
  409afc:	mov    rax,QWORD PTR [rbp-0x18]
  409b00:	mov    QWORD PTR [rbp-0x8],rax
  409b04:	mov    rcx,QWORD PTR [rbp-0x20]
  409b08:	mov    QWORD PTR [rbp-0x10],rcx
  409b0c:	mov    rdx,QWORD PTR [rbp-0x10]
  409b10:	mov    rsi,QWORD PTR [rbp-0x8]
  409b14:	mov    QWORD PTR [rsi],rdx
  409b17:	pop    rbp
  409b18:	ret    
  409b19:	nop    DWORD PTR [rax+0x0]

0000000000409b20 <destroy_grammar@@Base>:
  409b20:	push   rbp
  409b21:	mov    rbp,rsp
  409b24:	lea    rax,[rip+0xa125]        # 413c50 <__bss_start@@Base+0xaf0>
  409b2b:	mov    QWORD PTR [rbp-0x10],rdi
  409b2f:	mov    QWORD PTR [rbp-0x18],rax
  409b33:	mov    rax,QWORD PTR [rbp-0x18]
  409b37:	mov    rcx,QWORD PTR [rax]
  409b3a:	add    rcx,0x1
  409b41:	mov    QWORD PTR [rax],rcx
  409b44:	mov    rax,QWORD PTR [rip+0xa10d]        # 413c58 <__bss_start@@Base+0xaf8>
  409b4b:	add    rax,0x1
  409b51:	mov    QWORD PTR [rip+0xa100],rax        # 413c58 <__bss_start@@Base+0xaf8>
  409b58:	mov    rax,QWORD PTR [rbp-0x10]
  409b5c:	mov    QWORD PTR [rbp-0x8],rax
  409b60:	pop    rbp
  409b61:	ret    
  409b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b6c:	nop    DWORD PTR [rax+0x0]

0000000000409b70 <build_ast@@Base>:
  409b70:	push   rbp
  409b71:	mov    rbp,rsp
  409b74:	sub    rsp,0x20
  409b78:	lea    rax,[rip+0xa0e1]        # 413c60 <__bss_start@@Base+0xb00>
  409b7f:	mov    QWORD PTR [rbp-0x10],rdi
  409b83:	mov    QWORD PTR [rbp-0x18],rax
  409b87:	mov    rax,QWORD PTR [rbp-0x18]
  409b8b:	mov    rcx,QWORD PTR [rax]
  409b8e:	add    rcx,0x1
  409b95:	mov    QWORD PTR [rax],rcx
  409b98:	mov    rax,QWORD PTR [rip+0xa0c9]        # 413c68 <__bss_start@@Base+0xb08>
  409b9f:	add    rax,0x1
  409ba5:	mov    QWORD PTR [rip+0xa0bc],rax        # 413c68 <__bss_start@@Base+0xb08>
  409bac:	mov    rax,QWORD PTR [rbp-0x10]
  409bb0:	mov    QWORD PTR [rbp-0x8],rax
  409bb4:	mov    rdi,QWORD PTR [rbp-0x8]
  409bb8:	call   409bd0 <read_function_ast_node@@Base>
  409bbd:	add    rsp,0x20
  409bc1:	pop    rbp
  409bc2:	ret    
  409bc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bcd:	nop    DWORD PTR [rax]

0000000000409bd0 <read_function_ast_node@@Base>:
  409bd0:	push   rbp
  409bd1:	mov    rbp,rsp
  409bd4:	sub    rsp,0x90
  409bdb:	lea    rax,[rip+0xa08e]        # 413c70 <__bss_start@@Base+0xb10>
  409be2:	mov    QWORD PTR [rbp-0x38],rdi
  409be6:	mov    QWORD PTR [rbp-0x40],rax
  409bea:	mov    rax,QWORD PTR [rbp-0x40]
  409bee:	mov    rcx,QWORD PTR [rax]
  409bf1:	add    rcx,0x1
  409bf8:	mov    QWORD PTR [rax],rcx
  409bfb:	mov    rax,QWORD PTR [rbp-0x38]
  409bff:	mov    QWORD PTR [rbp-0x10],rax
  409c03:	mov    QWORD PTR [rbp-0x18],0x0
  409c0b:	mov    QWORD PTR [rbp-0x20],0x0
  409c13:	mov    QWORD PTR [rbp-0x28],0x0
  409c1b:	mov    QWORD PTR [rbp-0x30],0x0
  409c23:	mov    rcx,QWORD PTR [rbp-0x10]
  409c27:	mov    rdi,QWORD PTR [rcx]
  409c2a:	call   403380 <next@@Base>
  409c2f:	lea    rcx,[rip+0xa03a]        # 413c70 <__bss_start@@Base+0xb10>
  409c36:	mov    rdx,rcx
  409c39:	add    rdx,0x8
  409c40:	add    rcx,0x10
  409c47:	mov    QWORD PTR [rbp-0x28],rax
  409c4b:	mov    rax,QWORD PTR [rbp-0x28]
  409c4f:	cmp    DWORD PTR [rax],0x0
  409c52:	mov    QWORD PTR [rbp-0x48],rdx
  409c56:	mov    QWORD PTR [rbp-0x50],rcx
  409c5a:	je     409c90 <read_function_ast_node@@Base+0xc0>
  409c60:	mov    rax,QWORD PTR [rbp-0x48]
  409c64:	lea    rcx,[rip+0xa005]        # 413c70 <__bss_start@@Base+0xb10>
  409c6b:	add    rcx,0x18
  409c72:	mov    rdx,QWORD PTR [rax]
  409c75:	add    rdx,0x1
  409c7c:	mov    QWORD PTR [rax],rdx
  409c7f:	mov    QWORD PTR [rbp-0x8],0x0
  409c87:	mov    QWORD PTR [rbp-0x58],rcx
  409c8b:	jmp    409ea2 <read_function_ast_node@@Base+0x2d2>
  409c90:	mov    rax,QWORD PTR [rbp-0x50]
  409c94:	mov    rcx,QWORD PTR [rax]
  409c97:	add    rcx,0x1
  409c9e:	mov    QWORD PTR [rax],rcx
  409ca1:	mov    rax,QWORD PTR [rbp-0x28]
  409ca5:	mov    rdi,rax
  409ca8:	call   407b30 <free_token_int_type@@Base>
  409cad:	mov    rax,QWORD PTR [rbp-0x10]
  409cb1:	mov    rdi,QWORD PTR [rax]
  409cb4:	call   403380 <next@@Base>
  409cb9:	lea    rcx,[rip+0x9fb0]        # 413c70 <__bss_start@@Base+0xb10>
  409cc0:	mov    rdx,rcx
  409cc3:	add    rdx,0x20
  409cca:	add    rcx,0x28
  409cd1:	mov    QWORD PTR [rbp-0x28],rax
  409cd5:	mov    rax,QWORD PTR [rbp-0x28]
  409cd9:	cmp    DWORD PTR [rax],0x2
  409cdc:	mov    QWORD PTR [rbp-0x60],rdx
  409ce0:	mov    QWORD PTR [rbp-0x68],rcx
  409ce4:	je     409d1a <read_function_ast_node@@Base+0x14a>
  409cea:	mov    rax,QWORD PTR [rbp-0x60]
  409cee:	lea    rcx,[rip+0x9f7b]        # 413c70 <__bss_start@@Base+0xb10>
  409cf5:	add    rcx,0x30
  409cfc:	mov    rdx,QWORD PTR [rax]
  409cff:	add    rdx,0x1
  409d06:	mov    QWORD PTR [rax],rdx
  409d09:	mov    QWORD PTR [rbp-0x8],0x0
  409d11:	mov    QWORD PTR [rbp-0x58],rcx
  409d15:	jmp    409ea2 <read_function_ast_node@@Base+0x2d2>
  409d1a:	mov    rax,QWORD PTR [rbp-0x68]
  409d1e:	mov    rcx,QWORD PTR [rax]
  409d21:	add    rcx,0x1
  409d28:	mov    QWORD PTR [rax],rcx
  409d2b:	mov    rax,QWORD PTR [rbp-0x28]
  409d2f:	mov    QWORD PTR [rbp-0x30],rax
  409d33:	mov    rax,QWORD PTR [rbp-0x10]
  409d37:	mov    rdi,QWORD PTR [rax]
  409d3a:	call   403380 <next@@Base>
  409d3f:	lea    rcx,[rip+0x9f2a]        # 413c70 <__bss_start@@Base+0xb10>
  409d46:	mov    rdx,rcx
  409d49:	add    rdx,0x38
  409d50:	add    rcx,0x40
  409d57:	mov    QWORD PTR [rbp-0x28],rax
  409d5b:	mov    rax,QWORD PTR [rbp-0x28]
  409d5f:	cmp    DWORD PTR [rax],0x3
  409d62:	mov    QWORD PTR [rbp-0x70],rdx
  409d66:	mov    QWORD PTR [rbp-0x78],rcx
  409d6a:	je     409da0 <read_function_ast_node@@Base+0x1d0>
  409d70:	mov    rax,QWORD PTR [rbp-0x70]
  409d74:	lea    rcx,[rip+0x9ef5]        # 413c70 <__bss_start@@Base+0xb10>
  409d7b:	add    rcx,0x48
  409d82:	mov    rdx,QWORD PTR [rax]
  409d85:	add    rdx,0x1
  409d8c:	mov    QWORD PTR [rax],rdx
  409d8f:	mov    QWORD PTR [rbp-0x8],0x0
  409d97:	mov    QWORD PTR [rbp-0x58],rcx
  409d9b:	jmp    409ea2 <read_function_ast_node@@Base+0x2d2>
  409da0:	mov    rax,QWORD PTR [rbp-0x78]
  409da4:	mov    rcx,QWORD PTR [rax]
  409da7:	add    rcx,0x1
  409dae:	mov    QWORD PTR [rax],rcx
  409db1:	mov    rax,QWORD PTR [rbp-0x28]
  409db5:	mov    rdi,rax
  409db8:	call   407c50 <free_token_opar@@Base>
  409dbd:	mov    rax,QWORD PTR [rbp-0x10]
  409dc1:	mov    rdi,QWORD PTR [rax]
  409dc4:	call   403380 <next@@Base>
  409dc9:	lea    rcx,[rip+0x9ea0]        # 413c70 <__bss_start@@Base+0xb10>
  409dd0:	mov    rdx,rcx
  409dd3:	add    rdx,0x50
  409dda:	add    rcx,0x58
  409de1:	mov    QWORD PTR [rbp-0x28],rax
  409de5:	mov    rax,QWORD PTR [rbp-0x28]
  409de9:	cmp    DWORD PTR [rax],0x4
  409dec:	mov    QWORD PTR [rbp-0x80],rdx
  409df0:	mov    QWORD PTR [rbp-0x88],rcx
  409df7:	je     409e2d <read_function_ast_node@@Base+0x25d>
  409dfd:	mov    rax,QWORD PTR [rbp-0x80]
  409e01:	lea    rcx,[rip+0x9e68]        # 413c70 <__bss_start@@Base+0xb10>
  409e08:	add    rcx,0x60
  409e0f:	mov    rdx,QWORD PTR [rax]
  409e12:	add    rdx,0x1
  409e19:	mov    QWORD PTR [rax],rdx
  409e1c:	mov    QWORD PTR [rbp-0x8],0x0
  409e24:	mov    QWORD PTR [rbp-0x58],rcx
  409e28:	jmp    409ea2 <read_function_ast_node@@Base+0x2d2>
  409e2d:	mov    rax,QWORD PTR [rbp-0x88]
  409e34:	mov    rcx,QWORD PTR [rax]
  409e37:	add    rcx,0x1
  409e3e:	mov    QWORD PTR [rax],rcx
  409e41:	mov    rax,QWORD PTR [rbp-0x28]
  409e45:	mov    rdi,rax
  409e48:	call   407cb0 <free_token_cpar@@Base>
  409e4d:	mov    rdi,QWORD PTR [rbp-0x10]
  409e51:	call   409ee0 <read_body@@Base>
  409e56:	mov    QWORD PTR [rbp-0x20],rax
  409e5a:	mov    edi,0x20
  409e5f:	call   4031d0 <malloc@plt>
  409e64:	mov    QWORD PTR [rbp-0x18],rax
  409e68:	mov    rax,QWORD PTR [rbp-0x18]
  409e6c:	mov    rcx,QWORD PTR [rbp-0x30]
  409e70:	mov    rsi,QWORD PTR [rcx+0x8]
  409e74:	mov    rdx,QWORD PTR [rbp-0x20]
  409e78:	mov    rdi,rax
  409e7b:	call   4085d0 <init_node_function@@Base>
  409e80:	mov    rdi,QWORD PTR [rbp-0x30]
  409e84:	call   407bf0 <free_token_function@@Base>
  409e89:	lea    rax,[rip+0x9de0]        # 413c70 <__bss_start@@Base+0xb10>
  409e90:	add    rax,0x68
  409e96:	mov    rcx,QWORD PTR [rbp-0x18]
  409e9a:	mov    QWORD PTR [rbp-0x8],rcx
  409e9e:	mov    QWORD PTR [rbp-0x58],rax
  409ea2:	mov    rax,QWORD PTR [rbp-0x58]
  409ea6:	mov    rcx,QWORD PTR [rax]
  409ea9:	add    rcx,0x1
  409eb0:	mov    QWORD PTR [rax],rcx
  409eb3:	mov    rax,QWORD PTR [rip+0x9e26]        # 413ce0 <__bss_start@@Base+0xb80>
  409eba:	add    rax,0x1
  409ec0:	mov    QWORD PTR [rip+0x9e19],rax        # 413ce0 <__bss_start@@Base+0xb80>
  409ec7:	mov    rax,QWORD PTR [rbp-0x8]
  409ecb:	add    rsp,0x90
  409ed2:	pop    rbp
  409ed3:	ret    
  409ed4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ede:	xchg   ax,ax

0000000000409ee0 <read_body@@Base>:
  409ee0:	push   rbp
  409ee1:	mov    rbp,rsp
  409ee4:	sub    rsp,0xc0
  409eeb:	lea    rax,[rip+0x9dfe]        # 413cf0 <__bss_start@@Base+0xb90>
  409ef2:	mov    QWORD PTR [rbp-0x38],rdi
  409ef6:	mov    QWORD PTR [rbp-0x40],rax
  409efa:	mov    rax,QWORD PTR [rbp-0x40]
  409efe:	mov    rcx,QWORD PTR [rax]
  409f01:	add    rcx,0x1
  409f08:	mov    QWORD PTR [rax],rcx
  409f0b:	mov    rax,QWORD PTR [rbp-0x38]
  409f0f:	mov    QWORD PTR [rbp-0x10],rax
  409f13:	mov    QWORD PTR [rbp-0x18],0x0
  409f1b:	mov    QWORD PTR [rbp-0x20],0x0
  409f23:	mov    QWORD PTR [rbp-0x28],0x0
  409f2b:	mov    QWORD PTR [rbp-0x30],0x0
  409f33:	mov    rcx,QWORD PTR [rbp-0x10]
  409f37:	mov    rdi,QWORD PTR [rcx]
  409f3a:	call   403380 <next@@Base>
  409f3f:	lea    rcx,[rip+0x9daa]        # 413cf0 <__bss_start@@Base+0xb90>
  409f46:	mov    rdx,rcx
  409f49:	add    rdx,0x8
  409f50:	add    rcx,0x10
  409f57:	mov    QWORD PTR [rbp-0x30],rax
  409f5b:	mov    rax,QWORD PTR [rbp-0x30]
  409f5f:	cmp    DWORD PTR [rax],0x5
  409f62:	mov    QWORD PTR [rbp-0x48],rdx
  409f66:	mov    QWORD PTR [rbp-0x50],rcx
  409f6a:	je     409fa0 <read_body@@Base+0xc0>
  409f70:	mov    rax,QWORD PTR [rbp-0x48]
  409f74:	lea    rcx,[rip+0x9d75]        # 413cf0 <__bss_start@@Base+0xb90>
  409f7b:	add    rcx,0x18
  409f82:	mov    rdx,QWORD PTR [rax]
  409f85:	add    rdx,0x1
  409f8c:	mov    QWORD PTR [rax],rdx
  409f8f:	mov    QWORD PTR [rbp-0x8],0x0
  409f97:	mov    QWORD PTR [rbp-0x58],rcx
  409f9b:	jmp    40a295 <read_body@@Base+0x3b5>
  409fa0:	mov    rax,QWORD PTR [rbp-0x50]
  409fa4:	mov    rcx,QWORD PTR [rax]
  409fa7:	add    rcx,0x1
  409fae:	mov    QWORD PTR [rax],rcx
  409fb1:	mov    rax,QWORD PTR [rbp-0x30]
  409fb5:	mov    rdi,rax
  409fb8:	call   407d10 <free_token_obra@@Base>
  409fbd:	mov    rax,QWORD PTR [rbp-0x10]
  409fc1:	mov    rdi,QWORD PTR [rax]
  409fc4:	call   403380 <next@@Base>
  409fc9:	lea    rcx,[rip+0x9d20]        # 413cf0 <__bss_start@@Base+0xb90>
  409fd0:	add    rcx,0x20
  409fd7:	mov    QWORD PTR [rbp-0x30],rax
  409fdb:	mov    QWORD PTR [rbp-0x60],rcx
  409fdf:	mov    rax,QWORD PTR [rbp-0x60]
  409fe3:	lea    rcx,[rip+0x9d06]        # 413cf0 <__bss_start@@Base+0xb90>
  409fea:	mov    rdx,rcx
  409fed:	add    rdx,0x28
  409ff4:	add    rcx,0x30
  409ffb:	mov    rsi,QWORD PTR [rax]
  409ffe:	add    rsi,0x1
  40a005:	mov    QWORD PTR [rax],rsi
  40a008:	mov    rax,QWORD PTR [rbp-0x30]
  40a00c:	cmp    DWORD PTR [rax],0x6
  40a00f:	mov    QWORD PTR [rbp-0x68],rdx
  40a013:	mov    QWORD PTR [rbp-0x70],rcx
  40a017:	je     40a25f <read_body@@Base+0x37f>
  40a01d:	mov    rax,QWORD PTR [rbp-0x68]
  40a021:	mov    rcx,QWORD PTR [rax]
  40a024:	inc    rcx
  40a027:	mov    QWORD PTR [rax],rcx
  40a02a:	mov    rax,QWORD PTR [rbp-0x30]
  40a02e:	mov    edx,DWORD PTR [rax]
  40a030:	lea    rax,[rip+0x9d01]        # 413d38 <__bss_start@@Base+0xbd8>
  40a037:	lea    rcx,[rip+0x9cf2]        # 413d30 <__bss_start@@Base+0xbd0>
  40a03e:	lea    rsi,[rip+0x9ce3]        # 413d28 <__bss_start@@Base+0xbc8>
  40a045:	mov    edi,edx
  40a047:	sub    edi,0x7
  40a04a:	mov    DWORD PTR [rbp-0x74],edx
  40a04d:	mov    QWORD PTR [rbp-0x80],rax
  40a051:	mov    QWORD PTR [rbp-0x88],rsi
  40a058:	mov    QWORD PTR [rbp-0x90],rcx
  40a05f:	je     40a094 <read_body@@Base+0x1b4>
  40a065:	jmp    40a06a <read_body@@Base+0x18a>
  40a06a:	mov    eax,DWORD PTR [rbp-0x74]
  40a06d:	sub    eax,0xa
  40a070:	mov    rcx,QWORD PTR [rbp-0x80]
  40a074:	mov    rdx,QWORD PTR [rbp-0x88]
  40a07b:	mov    QWORD PTR [rbp-0x98],rcx
  40a082:	mov    QWORD PTR [rbp-0xa0],rdx
  40a089:	je     40a0db <read_body@@Base+0x1fb>
  40a08f:	jmp    40a122 <read_body@@Base+0x242>
  40a094:	mov    rax,QWORD PTR [rbp-0x90]
  40a09b:	mov    rcx,QWORD PTR [rax]
  40a09e:	add    rcx,0x1
  40a0a5:	mov    QWORD PTR [rax],rcx
  40a0a8:	mov    rax,QWORD PTR [rbp-0x30]
  40a0ac:	mov    rdi,rax
  40a0af:	call   407dd0 <free_token_return@@Base>
  40a0b4:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0b8:	call   40a2d0 <read_return_expression@@Base>
  40a0bd:	lea    rcx,[rip+0x9c2c]        # 413cf0 <__bss_start@@Base+0xb90>
  40a0c4:	add    rcx,0x50
  40a0cb:	mov    QWORD PTR [rbp-0x20],rax
  40a0cf:	mov    QWORD PTR [rbp-0xa8],rcx
  40a0d6:	jmp    40a164 <read_body@@Base+0x284>
  40a0db:	mov    rax,QWORD PTR [rbp-0x98]
  40a0e2:	mov    rcx,QWORD PTR [rax]
  40a0e5:	add    rcx,0x1
  40a0ec:	mov    QWORD PTR [rax],rcx
  40a0ef:	mov    rax,QWORD PTR [rbp-0x30]
  40a0f3:	mov    rdi,rax
  40a0f6:	call   407ef0 <free_token_if@@Base>
  40a0fb:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0ff:	call   40a4c0 <read_if_statement@@Base>
  40a104:	lea    rcx,[rip+0x9be5]        # 413cf0 <__bss_start@@Base+0xb90>
  40a10b:	add    rcx,0x58
  40a112:	mov    QWORD PTR [rbp-0x20],rax
  40a116:	mov    QWORD PTR [rbp-0xa8],rcx
  40a11d:	jmp    40a164 <read_body@@Base+0x284>
  40a122:	mov    rax,QWORD PTR [rbp-0xa0]
  40a129:	mov    rcx,QWORD PTR [rax]
  40a12c:	add    rcx,0x1
  40a133:	mov    QWORD PTR [rax],rcx
  40a136:	mov    rax,QWORD PTR [rbp-0x10]
  40a13a:	mov    rdi,QWORD PTR [rax]
  40a13d:	mov    rsi,QWORD PTR [rbp-0x30]
  40a141:	call   4037b0 <push_back@@Base>
  40a146:	lea    rax,[rip+0x9ba3]        # 413cf0 <__bss_start@@Base+0xb90>
  40a14d:	add    rax,0x60
  40a153:	mov    rcx,QWORD PTR [rbp-0x18]
  40a157:	mov    QWORD PTR [rbp-0x8],rcx
  40a15b:	mov    QWORD PTR [rbp-0x58],rax
  40a15f:	jmp    40a295 <read_body@@Base+0x3b5>
  40a164:	mov    rax,QWORD PTR [rbp-0xa8]
  40a16b:	lea    rcx,[rip+0x9b7e]        # 413cf0 <__bss_start@@Base+0xb90>
  40a172:	mov    rdx,rcx
  40a175:	add    rdx,0x68
  40a17c:	add    rcx,0x70
  40a183:	mov    rsi,QWORD PTR [rax]
  40a186:	add    rsi,0x1
  40a18d:	mov    QWORD PTR [rax],rsi
  40a190:	cmp    QWORD PTR [rbp-0x18],0x0
  40a195:	mov    QWORD PTR [rbp-0xb0],rdx
  40a19c:	mov    QWORD PTR [rbp-0xb8],rcx
  40a1a3:	je     40a1eb <read_body@@Base+0x30b>
  40a1a9:	mov    rax,QWORD PTR [rbp-0xb0]
  40a1b0:	lea    rcx,[rip+0x9b39]        # 413cf0 <__bss_start@@Base+0xb90>
  40a1b7:	add    rcx,0x78
  40a1be:	mov    rdx,QWORD PTR [rax]
  40a1c1:	add    rdx,0x1
  40a1c8:	mov    QWORD PTR [rax],rdx
  40a1cb:	mov    rax,QWORD PTR [rbp-0x20]
  40a1cf:	mov    rdx,QWORD PTR [rbp-0x28]
  40a1d3:	mov    QWORD PTR [rdx+0x8],rax
  40a1d7:	mov    rax,QWORD PTR [rbp-0x20]
  40a1db:	mov    QWORD PTR [rbp-0x28],rax
  40a1df:	mov    QWORD PTR [rbp-0xc0],rcx
  40a1e6:	jmp    40a224 <read_body@@Base+0x344>
  40a1eb:	mov    rax,QWORD PTR [rbp-0xb8]
  40a1f2:	lea    rcx,[rip+0x9af7]        # 413cf0 <__bss_start@@Base+0xb90>
  40a1f9:	add    rcx,0x80
  40a200:	mov    rdx,QWORD PTR [rax]
  40a203:	add    rdx,0x1
  40a20a:	mov    QWORD PTR [rax],rdx
  40a20d:	mov    rax,QWORD PTR [rbp-0x20]
  40a211:	mov    QWORD PTR [rbp-0x18],rax
  40a215:	mov    rax,QWORD PTR [rbp-0x20]
  40a219:	mov    QWORD PTR [rbp-0x28],rax
  40a21d:	mov    QWORD PTR [rbp-0xc0],rcx
  40a224:	mov    rax,QWORD PTR [rbp-0xc0]
  40a22b:	mov    rcx,QWORD PTR [rax]
  40a22e:	add    rcx,0x1
  40a235:	mov    QWORD PTR [rax],rcx
  40a238:	mov    rax,QWORD PTR [rbp-0x10]
  40a23c:	mov    rdi,QWORD PTR [rax]
  40a23f:	call   403380 <next@@Base>
  40a244:	lea    rcx,[rip+0x9aa5]        # 413cf0 <__bss_start@@Base+0xb90>
  40a24b:	add    rcx,0x88
  40a252:	mov    QWORD PTR [rbp-0x30],rax
  40a256:	mov    QWORD PTR [rbp-0x60],rcx
  40a25a:	jmp    409fdf <read_body@@Base+0xff>
  40a25f:	mov    rax,QWORD PTR [rbp-0x70]
  40a263:	mov    rcx,QWORD PTR [rax]
  40a266:	add    rcx,0x1
  40a26d:	mov    QWORD PTR [rax],rcx
  40a270:	mov    rax,QWORD PTR [rbp-0x30]
  40a274:	mov    rdi,rax
  40a277:	call   407d70 <free_token_cbra@@Base>
  40a27c:	lea    rax,[rip+0x9a6d]        # 413cf0 <__bss_start@@Base+0xb90>
  40a283:	add    rax,0x90
  40a289:	mov    rcx,QWORD PTR [rbp-0x18]
  40a28d:	mov    QWORD PTR [rbp-0x8],rcx
  40a291:	mov    QWORD PTR [rbp-0x58],rax
  40a295:	mov    rax,QWORD PTR [rbp-0x58]
  40a299:	mov    rcx,QWORD PTR [rax]
  40a29c:	add    rcx,0x1
  40a2a3:	mov    QWORD PTR [rax],rcx
  40a2a6:	mov    rax,QWORD PTR [rip+0x9adb]        # 413d88 <__bss_start@@Base+0xc28>
  40a2ad:	add    rax,0x1
  40a2b3:	mov    QWORD PTR [rip+0x9ace],rax        # 413d88 <__bss_start@@Base+0xc28>
  40a2ba:	mov    rax,QWORD PTR [rbp-0x8]
  40a2be:	add    rsp,0xc0
  40a2c5:	pop    rbp
  40a2c6:	ret    
  40a2c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a2d0 <read_return_expression@@Base>:
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	sub    rsp,0x70
  40a2d8:	lea    rax,[rip+0x9ab1]        # 413d90 <__bss_start@@Base+0xc30>
  40a2df:	mov    QWORD PTR [rbp-0x38],rdi
  40a2e3:	mov    QWORD PTR [rbp-0x40],rax
  40a2e7:	mov    rax,QWORD PTR [rbp-0x40]
  40a2eb:	mov    rcx,QWORD PTR [rax]
  40a2ee:	add    rcx,0x1
  40a2f5:	mov    QWORD PTR [rax],rcx
  40a2f8:	mov    rax,QWORD PTR [rbp-0x38]
  40a2fc:	mov    QWORD PTR [rbp-0x10],rax
  40a300:	mov    QWORD PTR [rbp-0x18],0x0
  40a308:	mov    QWORD PTR [rbp-0x20],0x0
  40a310:	mov    QWORD PTR [rbp-0x28],0x0
  40a318:	mov    QWORD PTR [rbp-0x30],0x0
  40a320:	mov    rcx,QWORD PTR [rbp-0x10]
  40a324:	mov    rdi,QWORD PTR [rcx]
  40a327:	call   403380 <next@@Base>
  40a32c:	lea    rcx,[rip+0x9a5d]        # 413d90 <__bss_start@@Base+0xc30>
  40a333:	mov    rdx,rcx
  40a336:	add    rdx,0x8
  40a33d:	add    rcx,0x10
  40a344:	mov    QWORD PTR [rbp-0x28],rax
  40a348:	mov    rax,QWORD PTR [rbp-0x28]
  40a34c:	cmp    DWORD PTR [rax],0x1
  40a34f:	mov    QWORD PTR [rbp-0x48],rdx
  40a353:	mov    QWORD PTR [rbp-0x50],rcx
  40a357:	je     40a38d <read_return_expression@@Base+0xbd>
  40a35d:	mov    rax,QWORD PTR [rbp-0x48]
  40a361:	lea    rcx,[rip+0x9a28]        # 413d90 <__bss_start@@Base+0xc30>
  40a368:	add    rcx,0x18
  40a36f:	mov    rdx,QWORD PTR [rax]
  40a372:	add    rdx,0x1
  40a379:	mov    QWORD PTR [rax],rdx
  40a37c:	mov    QWORD PTR [rbp-0x8],0x0
  40a384:	mov    QWORD PTR [rbp-0x58],rcx
  40a388:	jmp    40a491 <read_return_expression@@Base+0x1c1>
  40a38d:	mov    rax,QWORD PTR [rbp-0x50]
  40a391:	mov    rcx,QWORD PTR [rax]
  40a394:	add    rcx,0x1
  40a39b:	mov    QWORD PTR [rax],rcx
  40a39e:	mov    rax,QWORD PTR [rbp-0x28]
  40a3a2:	mov    QWORD PTR [rbp-0x30],rax
  40a3a6:	mov    edi,0x18
  40a3ab:	call   4031d0 <malloc@plt>
  40a3b0:	mov    QWORD PTR [rbp-0x20],rax
  40a3b4:	mov    rax,QWORD PTR [rbp-0x20]
  40a3b8:	mov    rcx,QWORD PTR [rbp-0x30]
  40a3bc:	mov    esi,DWORD PTR [rcx+0x4]
  40a3bf:	mov    rdi,rax
  40a3c2:	call   408560 <init_node_int@@Base>
  40a3c7:	mov    rdi,QWORD PTR [rbp-0x30]
  40a3cb:	call   407b90 <free_token_int_value@@Base>
  40a3d0:	mov    edi,0x18
  40a3d5:	call   4031d0 <malloc@plt>
  40a3da:	mov    QWORD PTR [rbp-0x18],rax
  40a3de:	mov    rax,QWORD PTR [rbp-0x18]
  40a3e2:	mov    rsi,QWORD PTR [rbp-0x20]
  40a3e6:	mov    rdi,rax
  40a3e9:	call   408660 <init_node_return@@Base>
  40a3ee:	mov    rax,QWORD PTR [rbp-0x10]
  40a3f2:	mov    rdi,QWORD PTR [rax]
  40a3f5:	call   403380 <next@@Base>
  40a3fa:	lea    rcx,[rip+0x998f]        # 413d90 <__bss_start@@Base+0xc30>
  40a401:	mov    rdx,rcx
  40a404:	add    rdx,0x20
  40a40b:	add    rcx,0x28
  40a412:	mov    QWORD PTR [rbp-0x28],rax
  40a416:	mov    rax,QWORD PTR [rbp-0x28]
  40a41a:	cmp    DWORD PTR [rax],0x8
  40a41d:	mov    QWORD PTR [rbp-0x60],rdx
  40a421:	mov    QWORD PTR [rbp-0x68],rcx
  40a425:	je     40a45b <read_return_expression@@Base+0x18b>
  40a42b:	mov    rax,QWORD PTR [rbp-0x60]
  40a42f:	lea    rcx,[rip+0x995a]        # 413d90 <__bss_start@@Base+0xc30>
  40a436:	add    rcx,0x30
  40a43d:	mov    rdx,QWORD PTR [rax]
  40a440:	add    rdx,0x1
  40a447:	mov    QWORD PTR [rax],rdx
  40a44a:	mov    QWORD PTR [rbp-0x8],0x0
  40a452:	mov    QWORD PTR [rbp-0x58],rcx
  40a456:	jmp    40a491 <read_return_expression@@Base+0x1c1>
  40a45b:	mov    rax,QWORD PTR [rbp-0x68]
  40a45f:	mov    rcx,QWORD PTR [rax]
  40a462:	add    rcx,0x1
  40a469:	mov    QWORD PTR [rax],rcx
  40a46c:	mov    rax,QWORD PTR [rbp-0x28]
  40a470:	mov    rdi,rax
  40a473:	call   407e30 <free_token_semicolon@@Base>
  40a478:	lea    rax,[rip+0x9911]        # 413d90 <__bss_start@@Base+0xc30>
  40a47f:	add    rax,0x38
  40a485:	mov    rcx,QWORD PTR [rbp-0x18]
  40a489:	mov    QWORD PTR [rbp-0x8],rcx
  40a48d:	mov    QWORD PTR [rbp-0x58],rax
  40a491:	mov    rax,QWORD PTR [rbp-0x58]
  40a495:	mov    rcx,QWORD PTR [rax]
  40a498:	add    rcx,0x1
  40a49f:	mov    QWORD PTR [rax],rcx
  40a4a2:	mov    rax,QWORD PTR [rip+0x9927]        # 413dd0 <__bss_start@@Base+0xc70>
  40a4a9:	add    rax,0x1
  40a4af:	mov    QWORD PTR [rip+0x991a],rax        # 413dd0 <__bss_start@@Base+0xc70>
  40a4b6:	mov    rax,QWORD PTR [rbp-0x8]
  40a4ba:	add    rsp,0x70
  40a4be:	pop    rbp
  40a4bf:	ret    

000000000040a4c0 <read_if_statement@@Base>:
  40a4c0:	push   rbp
  40a4c1:	mov    rbp,rsp
  40a4c4:	sub    rsp,0x80
  40a4cb:	lea    rax,[rip+0x990e]        # 413de0 <__bss_start@@Base+0xc80>
  40a4d2:	mov    QWORD PTR [rbp-0x40],rdi
  40a4d6:	mov    QWORD PTR [rbp-0x48],rax
  40a4da:	mov    rax,QWORD PTR [rbp-0x48]
  40a4de:	mov    rcx,QWORD PTR [rax]
  40a4e1:	add    rcx,0x1
  40a4e8:	mov    QWORD PTR [rax],rcx
  40a4eb:	mov    rax,QWORD PTR [rbp-0x40]
  40a4ef:	mov    QWORD PTR [rbp-0x10],rax
  40a4f3:	mov    QWORD PTR [rbp-0x18],0x0
  40a4fb:	mov    QWORD PTR [rbp-0x20],0x0
  40a503:	mov    QWORD PTR [rbp-0x28],0x0
  40a50b:	mov    QWORD PTR [rbp-0x30],0x0
  40a513:	mov    QWORD PTR [rbp-0x38],0x0
  40a51b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a51f:	mov    rdi,QWORD PTR [rcx]
  40a522:	call   403380 <next@@Base>
  40a527:	lea    rcx,[rip+0x98b2]        # 413de0 <__bss_start@@Base+0xc80>
  40a52e:	mov    rdx,rcx
  40a531:	add    rdx,0x8
  40a538:	add    rcx,0x10
  40a53f:	mov    QWORD PTR [rbp-0x38],rax
  40a543:	mov    rax,QWORD PTR [rbp-0x38]
  40a547:	cmp    DWORD PTR [rax],0x3
  40a54a:	mov    QWORD PTR [rbp-0x50],rdx
  40a54e:	mov    QWORD PTR [rbp-0x58],rcx
  40a552:	je     40a588 <read_if_statement@@Base+0xc8>
  40a558:	mov    rax,QWORD PTR [rbp-0x50]
  40a55c:	lea    rcx,[rip+0x987d]        # 413de0 <__bss_start@@Base+0xc80>
  40a563:	add    rcx,0x18
  40a56a:	mov    rdx,QWORD PTR [rax]
  40a56d:	add    rdx,0x1
  40a574:	mov    QWORD PTR [rax],rdx
  40a577:	mov    QWORD PTR [rbp-0x8],0x0
  40a57f:	mov    QWORD PTR [rbp-0x60],rcx
  40a583:	jmp    40a6bf <read_if_statement@@Base+0x1ff>
  40a588:	mov    rax,QWORD PTR [rbp-0x58]
  40a58c:	mov    rcx,QWORD PTR [rax]
  40a58f:	add    rcx,0x1
  40a596:	mov    QWORD PTR [rax],rcx
  40a599:	mov    rax,QWORD PTR [rbp-0x38]
  40a59d:	mov    rdi,rax
  40a5a0:	call   407c50 <free_token_opar@@Base>
  40a5a5:	mov    rdi,QWORD PTR [rbp-0x10]
  40a5a9:	call   40a700 <read_boolean_expression@@Base>
  40a5ae:	mov    QWORD PTR [rbp-0x20],rax
  40a5b2:	mov    rdi,QWORD PTR [rbp-0x10]
  40a5b6:	call   409ee0 <read_body@@Base>
  40a5bb:	mov    QWORD PTR [rbp-0x28],rax
  40a5bf:	mov    rax,QWORD PTR [rbp-0x10]
  40a5c3:	mov    rdi,QWORD PTR [rax]
  40a5c6:	call   403380 <next@@Base>
  40a5cb:	lea    rcx,[rip+0x980e]        # 413de0 <__bss_start@@Base+0xc80>
  40a5d2:	mov    rdx,rcx
  40a5d5:	add    rdx,0x20
  40a5dc:	add    rcx,0x28
  40a5e3:	mov    QWORD PTR [rbp-0x38],rax
  40a5e7:	mov    rax,QWORD PTR [rbp-0x38]
  40a5eb:	cmp    DWORD PTR [rax],0xb
  40a5ee:	mov    QWORD PTR [rbp-0x68],rdx
  40a5f2:	mov    QWORD PTR [rbp-0x70],rcx
  40a5f6:	jne    40a63d <read_if_statement@@Base+0x17d>
  40a5fc:	mov    rax,QWORD PTR [rbp-0x68]
  40a600:	mov    rcx,QWORD PTR [rax]
  40a603:	add    rcx,0x1
  40a60a:	mov    QWORD PTR [rax],rcx
  40a60d:	mov    rax,QWORD PTR [rbp-0x38]
  40a611:	mov    rdi,rax
  40a614:	call   407f50 <free_token_else@@Base>
  40a619:	mov    rdi,QWORD PTR [rbp-0x10]
  40a61d:	call   409ee0 <read_body@@Base>
  40a622:	lea    rcx,[rip+0x97b7]        # 413de0 <__bss_start@@Base+0xc80>
  40a629:	add    rcx,0x30
  40a630:	mov    QWORD PTR [rbp-0x30],rax
  40a634:	mov    QWORD PTR [rbp-0x78],rcx
  40a638:	jmp    40a66f <read_if_statement@@Base+0x1af>
  40a63d:	mov    rax,QWORD PTR [rbp-0x70]
  40a641:	mov    rcx,QWORD PTR [rax]
  40a644:	add    rcx,0x1
  40a64b:	mov    QWORD PTR [rax],rcx
  40a64e:	mov    rax,QWORD PTR [rbp-0x10]
  40a652:	mov    rdi,QWORD PTR [rax]
  40a655:	mov    rsi,QWORD PTR [rbp-0x38]
  40a659:	call   4037b0 <push_back@@Base>
  40a65e:	lea    rax,[rip+0x977b]        # 413de0 <__bss_start@@Base+0xc80>
  40a665:	add    rax,0x38
  40a66b:	mov    QWORD PTR [rbp-0x78],rax
  40a66f:	mov    rax,QWORD PTR [rbp-0x78]
  40a673:	mov    rcx,QWORD PTR [rax]
  40a676:	add    rcx,0x1
  40a67d:	mov    QWORD PTR [rax],rcx
  40a680:	mov    edi,0x28
  40a685:	call   4031d0 <malloc@plt>
  40a68a:	mov    QWORD PTR [rbp-0x18],rax
  40a68e:	mov    rax,QWORD PTR [rbp-0x18]
  40a692:	mov    rsi,QWORD PTR [rbp-0x20]
  40a696:	mov    rdx,QWORD PTR [rbp-0x28]
  40a69a:	mov    rcx,QWORD PTR [rbp-0x30]
  40a69e:	mov    rdi,rax
  40a6a1:	call   4086d0 <init_node_if@@Base>
  40a6a6:	lea    rax,[rip+0x9733]        # 413de0 <__bss_start@@Base+0xc80>
  40a6ad:	add    rax,0x40
  40a6b3:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6b7:	mov    QWORD PTR [rbp-0x8],rcx
  40a6bb:	mov    QWORD PTR [rbp-0x60],rax
  40a6bf:	mov    rax,QWORD PTR [rbp-0x60]
  40a6c3:	mov    rcx,QWORD PTR [rax]
  40a6c6:	add    rcx,0x1
  40a6cd:	mov    QWORD PTR [rax],rcx
  40a6d0:	mov    rax,QWORD PTR [rip+0x9751]        # 413e28 <__bss_start@@Base+0xcc8>
  40a6d7:	add    rax,0x1
  40a6dd:	mov    QWORD PTR [rip+0x9744],rax        # 413e28 <__bss_start@@Base+0xcc8>
  40a6e4:	mov    rax,QWORD PTR [rbp-0x8]
  40a6e8:	add    rsp,0x80
  40a6ef:	pop    rbp
  40a6f0:	ret    
  40a6f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a700 <read_boolean_expression@@Base>:
  40a700:	push   rbp
  40a701:	mov    rbp,rsp
  40a704:	sub    rsp,0xa0
  40a70b:	lea    rax,[rip+0x971e]        # 413e30 <__bss_start@@Base+0xcd0>
  40a712:	mov    QWORD PTR [rbp-0x28],rdi
  40a716:	mov    QWORD PTR [rbp-0x30],rax
  40a71a:	mov    rax,QWORD PTR [rbp-0x30]
  40a71e:	mov    rcx,QWORD PTR [rax]
  40a721:	add    rcx,0x1
  40a728:	mov    QWORD PTR [rax],rcx
  40a72b:	mov    rax,QWORD PTR [rbp-0x28]
  40a72f:	mov    QWORD PTR [rbp-0x8],rax
  40a733:	mov    QWORD PTR [rbp-0x10],0x0
  40a73b:	mov    QWORD PTR [rbp-0x18],0x0
  40a743:	mov    DWORD PTR [rbp-0x20],0x0
  40a74a:	mov    rcx,QWORD PTR [rbp-0x8]
  40a74e:	mov    rdi,QWORD PTR [rcx]
  40a751:	call   403380 <next@@Base>
  40a756:	lea    rcx,[rip+0x96d3]        # 413e30 <__bss_start@@Base+0xcd0>
  40a75d:	add    rcx,0x8
  40a764:	mov    QWORD PTR [rbp-0x18],rax
  40a768:	mov    QWORD PTR [rbp-0x38],rcx
  40a76c:	mov    rax,QWORD PTR [rbp-0x38]
  40a770:	lea    rcx,[rip+0x96b9]        # 413e30 <__bss_start@@Base+0xcd0>
  40a777:	mov    rdx,rcx
  40a77a:	add    rdx,0x10
  40a781:	add    rcx,0x18
  40a788:	mov    rsi,QWORD PTR [rax]
  40a78b:	add    rsi,0x1
  40a792:	mov    QWORD PTR [rax],rsi
  40a795:	mov    rax,QWORD PTR [rbp-0x18]
  40a799:	cmp    DWORD PTR [rax],0x4
  40a79c:	mov    QWORD PTR [rbp-0x40],rdx
  40a7a0:	mov    QWORD PTR [rbp-0x48],rcx
  40a7a4:	je     40a989 <read_boolean_expression@@Base+0x289>
  40a7aa:	mov    rax,QWORD PTR [rbp-0x40]
  40a7ae:	mov    rcx,QWORD PTR [rax]
  40a7b1:	inc    rcx
  40a7b4:	mov    QWORD PTR [rax],rcx
  40a7b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a7bb:	mov    edx,DWORD PTR [rax]
  40a7bd:	lea    rax,[rip+0x96a4]        # 413e68 <__bss_start@@Base+0xd08>
  40a7c4:	lea    rcx,[rip+0x9695]        # 413e60 <__bss_start@@Base+0xd00>
  40a7cb:	lea    rsi,[rip+0x9686]        # 413e58 <__bss_start@@Base+0xcf8>
  40a7d2:	lea    rdi,[rip+0x9677]        # 413e50 <__bss_start@@Base+0xcf0>
  40a7d9:	mov    r8d,edx
  40a7dc:	sub    r8d,0x1
  40a7e0:	mov    DWORD PTR [rbp-0x4c],edx
  40a7e3:	mov    QWORD PTR [rbp-0x58],rax
  40a7e7:	mov    QWORD PTR [rbp-0x60],rcx
  40a7eb:	mov    QWORD PTR [rbp-0x68],rdi
  40a7ef:	mov    QWORD PTR [rbp-0x70],rsi
  40a7f3:	je     40a83b <read_boolean_expression@@Base+0x13b>
  40a7f9:	jmp    40a7fe <read_boolean_expression@@Base+0xfe>
  40a7fe:	mov    eax,DWORD PTR [rbp-0x4c]
  40a801:	sub    eax,0x3
  40a804:	mov    rcx,QWORD PTR [rbp-0x58]
  40a808:	mov    QWORD PTR [rbp-0x78],rcx
  40a80c:	je     40a8cf <read_boolean_expression@@Base+0x1cf>
  40a812:	jmp    40a817 <read_boolean_expression@@Base+0x117>
  40a817:	mov    eax,DWORD PTR [rbp-0x4c]
  40a81a:	sub    eax,0xc
  40a81d:	mov    rcx,QWORD PTR [rbp-0x60]
  40a821:	mov    rdx,QWORD PTR [rbp-0x68]
  40a825:	mov    QWORD PTR [rbp-0x80],rcx
  40a829:	mov    QWORD PTR [rbp-0x88],rdx
  40a830:	je     40a88e <read_boolean_expression@@Base+0x18e>
  40a836:	jmp    40a912 <read_boolean_expression@@Base+0x212>
  40a83b:	mov    rax,QWORD PTR [rbp-0x70]
  40a83f:	mov    rcx,QWORD PTR [rax]
  40a842:	add    rcx,0x1
  40a849:	mov    QWORD PTR [rax],rcx
  40a84c:	mov    rax,QWORD PTR [rbp-0x8]
  40a850:	mov    rdi,QWORD PTR [rax]
  40a853:	mov    rsi,QWORD PTR [rbp-0x18]
  40a857:	call   4037b0 <push_back@@Base>
  40a85c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a860:	mov    rsi,QWORD PTR [rbp-0x10]
  40a864:	mov    ecx,DWORD PTR [rbp-0x1c]
  40a867:	lea    rdx,[rbp-0x20]
  40a86b:	call   40a9d0 <read_single_boolean_expression@@Base>
  40a870:	lea    rdx,[rip+0x95b9]        # 413e30 <__bss_start@@Base+0xcd0>
  40a877:	add    rdx,0x40
  40a87e:	mov    QWORD PTR [rbp-0x10],rax
  40a882:	mov    QWORD PTR [rbp-0x90],rdx
  40a889:	jmp    40a94e <read_boolean_expression@@Base+0x24e>
  40a88e:	mov    rax,QWORD PTR [rbp-0x80]
  40a892:	mov    rcx,QWORD PTR [rax]
  40a895:	add    rcx,0x1
  40a89c:	mov    QWORD PTR [rax],rcx
  40a89f:	mov    rax,QWORD PTR [rbp-0x18]
  40a8a3:	mov    rdi,rax
  40a8a6:	call   408ff0 <get_boolean_op_value@@Base>
  40a8ab:	lea    rcx,[rip+0x957e]        # 413e30 <__bss_start@@Base+0xcd0>
  40a8b2:	add    rcx,0x48
  40a8b9:	mov    DWORD PTR [rbp-0x1c],eax
  40a8bc:	mov    DWORD PTR [rbp-0x20],0x1
  40a8c3:	mov    QWORD PTR [rbp-0x90],rcx
  40a8ca:	jmp    40a94e <read_boolean_expression@@Base+0x24e>
  40a8cf:	mov    rax,QWORD PTR [rbp-0x78]
  40a8d3:	mov    rcx,QWORD PTR [rax]
  40a8d6:	add    rcx,0x1
  40a8dd:	mov    QWORD PTR [rax],rcx
  40a8e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8e4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a8e8:	mov    ecx,DWORD PTR [rbp-0x1c]
  40a8eb:	lea    rdx,[rbp-0x20]
  40a8ef:	call   40a9d0 <read_single_boolean_expression@@Base>
  40a8f4:	lea    rdx,[rip+0x9535]        # 413e30 <__bss_start@@Base+0xcd0>
  40a8fb:	add    rdx,0x50
  40a902:	mov    QWORD PTR [rbp-0x10],rax
  40a906:	mov    QWORD PTR [rbp-0x90],rdx
  40a90d:	jmp    40a94e <read_boolean_expression@@Base+0x24e>
  40a912:	mov    rax,QWORD PTR [rbp-0x88]
  40a919:	mov    rcx,QWORD PTR [rip+0x86d8]        # 412ff8 <stderr@GLIBC_2.2.5>
  40a920:	mov    rdx,QWORD PTR [rax]
  40a923:	add    rdx,0x1
  40a92a:	mov    QWORD PTR [rax],rdx
  40a92d:	mov    rdi,QWORD PTR [rcx]
  40a930:	lea    rsi,[rip+0x41db]        # 40eb12 <_IO_stdin_used@@Base+0xb12>
  40a937:	mov    al,0x0
  40a939:	call   403170 <fprintf@plt>
  40a93e:	mov    edi,0x1
  40a943:	mov    DWORD PTR [rbp-0x94],eax
  40a949:	call   403250 <exit@plt>
  40a94e:	mov    rax,QWORD PTR [rbp-0x90]
  40a955:	mov    rcx,QWORD PTR [rax]
  40a958:	add    rcx,0x1
  40a95f:	mov    QWORD PTR [rax],rcx
  40a962:	mov    rax,QWORD PTR [rbp-0x8]
  40a966:	mov    rdi,QWORD PTR [rax]
  40a969:	call   403380 <next@@Base>
  40a96e:	lea    rcx,[rip+0x94bb]        # 413e30 <__bss_start@@Base+0xcd0>
  40a975:	add    rcx,0x58
  40a97c:	mov    QWORD PTR [rbp-0x18],rax
  40a980:	mov    QWORD PTR [rbp-0x38],rcx
  40a984:	jmp    40a76c <read_boolean_expression@@Base+0x6c>
  40a989:	mov    rax,QWORD PTR [rbp-0x48]
  40a98d:	mov    rcx,QWORD PTR [rax]
  40a990:	add    rcx,0x1
  40a997:	mov    QWORD PTR [rax],rcx
  40a99a:	mov    rax,QWORD PTR [rip+0x94ef]        # 413e90 <__bss_start@@Base+0xd30>
  40a9a1:	add    rax,0x1
  40a9a7:	mov    QWORD PTR [rip+0x94e2],rax        # 413e90 <__bss_start@@Base+0xd30>
  40a9ae:	mov    rax,QWORD PTR [rbp-0x18]
  40a9b2:	mov    rdi,rax
  40a9b5:	call   407cb0 <free_token_cpar@@Base>
  40a9ba:	mov    rax,QWORD PTR [rbp-0x10]
  40a9be:	add    rsp,0xa0
  40a9c5:	pop    rbp
  40a9c6:	ret    
  40a9c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a9d0 <read_single_boolean_expression@@Base>:
  40a9d0:	push   rbp
  40a9d1:	mov    rbp,rsp
  40a9d4:	sub    rsp,0xb0
  40a9db:	lea    rax,[rip+0x94be]        # 413ea0 <__bss_start@@Base+0xd40>
  40a9e2:	mov    QWORD PTR [rbp-0x50],rdi
  40a9e6:	mov    QWORD PTR [rbp-0x58],rsi
  40a9ea:	mov    QWORD PTR [rbp-0x60],rdx
  40a9ee:	mov    DWORD PTR [rbp-0x64],ecx
  40a9f1:	mov    QWORD PTR [rbp-0x70],rax
  40a9f5:	mov    rax,QWORD PTR [rbp-0x70]
  40a9f9:	lea    rcx,[rip+0x94a0]        # 413ea0 <__bss_start@@Base+0xd40>
  40aa00:	mov    rdx,rcx
  40aa03:	add    rdx,0x8
  40aa0a:	add    rcx,0x10
  40aa11:	mov    rsi,QWORD PTR [rax]
  40aa14:	add    rsi,0x1
  40aa1b:	mov    QWORD PTR [rax],rsi
  40aa1e:	mov    rax,QWORD PTR [rbp-0x50]
  40aa22:	mov    QWORD PTR [rbp-0x8],rax
  40aa26:	mov    rsi,QWORD PTR [rbp-0x58]
  40aa2a:	mov    QWORD PTR [rbp-0x10],rsi
  40aa2e:	mov    rdi,QWORD PTR [rbp-0x60]
  40aa32:	mov    QWORD PTR [rbp-0x18],rdi
  40aa36:	mov    r8d,DWORD PTR [rbp-0x64]
  40aa3a:	mov    DWORD PTR [rbp-0x1c],r8d
  40aa3e:	mov    QWORD PTR [rbp-0x28],0x0
  40aa46:	mov    QWORD PTR [rbp-0x30],0x0
  40aa4e:	mov    QWORD PTR [rbp-0x38],0x0
  40aa56:	mov    QWORD PTR [rbp-0x40],0x0
  40aa5e:	mov    QWORD PTR [rbp-0x48],0x0
  40aa66:	cmp    QWORD PTR [rbp-0x10],0x0
  40aa6b:	mov    QWORD PTR [rbp-0x78],rdx
  40aa6f:	mov    QWORD PTR [rbp-0x80],rcx
  40aa73:	jne    40aab1 <read_single_boolean_expression@@Base+0xe1>
  40aa79:	mov    rax,QWORD PTR [rbp-0x78]
  40aa7d:	mov    rcx,QWORD PTR [rax]
  40aa80:	add    rcx,0x1
  40aa87:	mov    QWORD PTR [rax],rcx
  40aa8a:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa8e:	call   40ac10 <read_boolean_binary_expression@@Base>
  40aa93:	lea    rcx,[rip+0x9406]        # 413ea0 <__bss_start@@Base+0xd40>
  40aa9a:	add    rcx,0x18
  40aaa1:	mov    QWORD PTR [rbp-0x30],rax
  40aaa5:	mov    QWORD PTR [rbp-0x88],rcx
  40aaac:	jmp    40abda <read_single_boolean_expression@@Base+0x20a>
  40aab1:	mov    rax,QWORD PTR [rbp-0x80]
  40aab5:	lea    rcx,[rip+0x93e4]        # 413ea0 <__bss_start@@Base+0xd40>
  40aabc:	mov    rdx,rcx
  40aabf:	add    rdx,0x20
  40aac6:	add    rcx,0x28
  40aacd:	mov    rsi,QWORD PTR [rax]
  40aad0:	add    rsi,0x1
  40aad7:	mov    QWORD PTR [rax],rsi
  40aada:	mov    rax,QWORD PTR [rbp-0x18]
  40aade:	cmp    DWORD PTR [rax],0x0
  40aae1:	mov    QWORD PTR [rbp-0x90],rdx
  40aae8:	mov    QWORD PTR [rbp-0x98],rcx
  40aaef:	je     40ab6e <read_single_boolean_expression@@Base+0x19e>
  40aaf5:	mov    rax,QWORD PTR [rbp-0x90]
  40aafc:	mov    rcx,QWORD PTR [rax]
  40aaff:	add    rcx,0x1
  40ab06:	mov    QWORD PTR [rax],rcx
  40ab09:	mov    rdi,QWORD PTR [rbp-0x8]
  40ab0d:	call   40ac10 <read_boolean_binary_expression@@Base>
  40ab12:	mov    QWORD PTR [rbp-0x38],rax
  40ab16:	mov    rax,QWORD PTR [rbp-0x30]
  40ab1a:	mov    QWORD PTR [rbp-0x40],rax
  40ab1e:	mov    rax,QWORD PTR [rbp-0x38]
  40ab22:	mov    QWORD PTR [rbp-0x48],rax
  40ab26:	mov    edi,0x28
  40ab2b:	call   4031d0 <malloc@plt>
  40ab30:	mov    QWORD PTR [rbp-0x30],rax
  40ab34:	mov    rax,QWORD PTR [rbp-0x30]
  40ab38:	mov    esi,DWORD PTR [rbp-0x1c]
  40ab3b:	mov    rdx,QWORD PTR [rbp-0x40]
  40ab3f:	mov    rcx,QWORD PTR [rbp-0x48]
  40ab43:	mov    rdi,rax
  40ab46:	call   408780 <init_node_boolean_operator@@Base>
  40ab4b:	lea    rax,[rip+0x934e]        # 413ea0 <__bss_start@@Base+0xd40>
  40ab52:	add    rax,0x30
  40ab58:	mov    rcx,QWORD PTR [rbp-0x18]
  40ab5c:	mov    DWORD PTR [rcx],0x0
  40ab62:	mov    QWORD PTR [rbp-0xa0],rax
  40ab69:	jmp    40abb1 <read_single_boolean_expression@@Base+0x1e1>
  40ab6e:	mov    rax,QWORD PTR [rbp-0x98]
  40ab75:	mov    rcx,QWORD PTR [rip+0x847c]        # 412ff8 <stderr@GLIBC_2.2.5>
  40ab7c:	mov    rdx,QWORD PTR [rax]
  40ab7f:	add    rdx,0x1
  40ab86:	mov    QWORD PTR [rax],rdx
  40ab89:	mov    rdi,QWORD PTR [rcx]
  40ab8c:	mov    rax,QWORD PTR [rbp-0x28]
  40ab90:	mov    edx,DWORD PTR [rax+0x4]
  40ab93:	lea    rsi,[rip+0x3f9a]        # 40eb34 <_IO_stdin_used@@Base+0xb34>
  40ab9a:	mov    al,0x0
  40ab9c:	call   403170 <fprintf@plt>
  40aba1:	mov    edi,0x1
  40aba6:	mov    DWORD PTR [rbp-0xa4],eax
  40abac:	call   403250 <exit@plt>
  40abb1:	mov    rax,QWORD PTR [rbp-0xa0]
  40abb8:	lea    rcx,[rip+0x92e1]        # 413ea0 <__bss_start@@Base+0xd40>
  40abbf:	add    rcx,0x38
  40abc6:	mov    rdx,QWORD PTR [rax]
  40abc9:	add    rdx,0x1
  40abd0:	mov    QWORD PTR [rax],rdx
  40abd3:	mov    QWORD PTR [rbp-0x88],rcx
  40abda:	mov    rax,QWORD PTR [rbp-0x88]
  40abe1:	mov    rcx,QWORD PTR [rax]
  40abe4:	add    rcx,0x1
  40abeb:	mov    QWORD PTR [rax],rcx
  40abee:	mov    rax,QWORD PTR [rip+0x92eb]        # 413ee0 <__bss_start@@Base+0xd80>
  40abf5:	add    rax,0x1
  40abfb:	mov    QWORD PTR [rip+0x92de],rax        # 413ee0 <__bss_start@@Base+0xd80>
  40ac02:	mov    rax,QWORD PTR [rbp-0x30]
  40ac06:	add    rsp,0xb0
  40ac0d:	pop    rbp
  40ac0e:	ret    
  40ac0f:	nop

000000000040ac10 <read_boolean_binary_expression@@Base>:
  40ac10:	push   rbp
  40ac11:	mov    rbp,rsp
  40ac14:	sub    rsp,0xb0
  40ac1b:	lea    rax,[rip+0x92ce]        # 413ef0 <__bss_start@@Base+0xd90>
  40ac22:	mov    QWORD PTR [rbp-0x58],rdi
  40ac26:	mov    QWORD PTR [rbp-0x60],rax
  40ac2a:	mov    rax,QWORD PTR [rbp-0x60]
  40ac2e:	mov    rcx,QWORD PTR [rax]
  40ac31:	add    rcx,0x1
  40ac38:	mov    QWORD PTR [rax],rcx
  40ac3b:	mov    rax,QWORD PTR [rbp-0x58]
  40ac3f:	mov    QWORD PTR [rbp-0x10],rax
  40ac43:	mov    QWORD PTR [rbp-0x18],0x0
  40ac4b:	mov    QWORD PTR [rbp-0x20],0x0
  40ac53:	mov    QWORD PTR [rbp-0x28],0x0
  40ac5b:	mov    QWORD PTR [rbp-0x30],0x0
  40ac63:	mov    QWORD PTR [rbp-0x38],0x0
  40ac6b:	mov    QWORD PTR [rbp-0x40],0x0
  40ac73:	mov    QWORD PTR [rbp-0x48],0x0
  40ac7b:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac7f:	mov    rdi,QWORD PTR [rcx]
  40ac82:	call   403380 <next@@Base>
  40ac87:	lea    rcx,[rip+0x9262]        # 413ef0 <__bss_start@@Base+0xd90>
  40ac8e:	mov    rdx,rcx
  40ac91:	add    rdx,0x8
  40ac98:	add    rcx,0x10
  40ac9f:	mov    QWORD PTR [rbp-0x38],rax
  40aca3:	mov    rax,QWORD PTR [rbp-0x38]
  40aca7:	cmp    DWORD PTR [rax],0x1
  40acaa:	mov    QWORD PTR [rbp-0x68],rdx
  40acae:	mov    QWORD PTR [rbp-0x70],rcx
  40acb2:	je     40ad71 <read_boolean_binary_expression@@Base+0x161>
  40acb8:	mov    rax,QWORD PTR [rbp-0x68]
  40acbc:	lea    rcx,[rip+0x922d]        # 413ef0 <__bss_start@@Base+0xd90>
  40acc3:	mov    rdx,rcx
  40acc6:	add    rdx,0x18
  40accd:	add    rcx,0x20
  40acd4:	mov    rsi,QWORD PTR [rax]
  40acd7:	add    rsi,0x1
  40acde:	mov    QWORD PTR [rax],rsi
  40ace1:	mov    rax,QWORD PTR [rbp-0x38]
  40ace5:	cmp    DWORD PTR [rax],0xc
  40ace8:	mov    QWORD PTR [rbp-0x78],rdx
  40acec:	mov    QWORD PTR [rbp-0x80],rcx
  40acf0:	jne    40ad3e <read_boolean_binary_expression@@Base+0x12e>
  40acf6:	mov    rax,QWORD PTR [rbp-0x78]
  40acfa:	mov    rcx,QWORD PTR [rax]
  40acfd:	add    rcx,0x1
  40ad04:	mov    QWORD PTR [rax],rcx
  40ad07:	mov    rax,QWORD PTR [rbp-0x10]
  40ad0b:	mov    rdi,QWORD PTR [rax]
  40ad0e:	mov    rsi,QWORD PTR [rbp-0x38]
  40ad12:	call   4037b0 <push_back@@Base>
  40ad17:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad1b:	call   40afc0 <read_boolean_unary_expression@@Base>
  40ad20:	lea    rcx,[rip+0x91c9]        # 413ef0 <__bss_start@@Base+0xd90>
  40ad27:	add    rcx,0x28
  40ad2e:	mov    QWORD PTR [rbp-0x8],rax
  40ad32:	mov    QWORD PTR [rbp-0x88],rcx
  40ad39:	jmp    40af7e <read_boolean_binary_expression@@Base+0x36e>
  40ad3e:	mov    rax,QWORD PTR [rbp-0x80]
  40ad42:	lea    rcx,[rip+0x91a7]        # 413ef0 <__bss_start@@Base+0xd90>
  40ad49:	add    rcx,0x30
  40ad50:	mov    rdx,QWORD PTR [rax]
  40ad53:	add    rdx,0x1
  40ad5a:	mov    QWORD PTR [rax],rdx
  40ad5d:	mov    QWORD PTR [rbp-0x8],0x0
  40ad65:	mov    QWORD PTR [rbp-0x88],rcx
  40ad6c:	jmp    40af7e <read_boolean_binary_expression@@Base+0x36e>
  40ad71:	mov    rax,QWORD PTR [rbp-0x70]
  40ad75:	mov    rcx,QWORD PTR [rax]
  40ad78:	add    rcx,0x1
  40ad7f:	mov    QWORD PTR [rax],rcx
  40ad82:	mov    rax,QWORD PTR [rbp-0x38]
  40ad86:	mov    QWORD PTR [rbp-0x40],rax
  40ad8a:	mov    edi,0x18
  40ad8f:	call   4031d0 <malloc@plt>
  40ad94:	mov    QWORD PTR [rbp-0x20],rax
  40ad98:	mov    rax,QWORD PTR [rbp-0x20]
  40ad9c:	mov    rcx,QWORD PTR [rbp-0x40]
  40ada0:	mov    esi,DWORD PTR [rcx+0x4]
  40ada3:	mov    rdi,rax
  40ada6:	call   408560 <init_node_int@@Base>
  40adab:	mov    rdi,QWORD PTR [rbp-0x40]
  40adaf:	call   407b90 <free_token_int_value@@Base>
  40adb4:	mov    rax,QWORD PTR [rbp-0x20]
  40adb8:	mov    QWORD PTR [rbp-0x28],rax
  40adbc:	mov    rax,QWORD PTR [rbp-0x10]
  40adc0:	mov    rdi,QWORD PTR [rax]
  40adc3:	call   403380 <next@@Base>
  40adc8:	lea    rcx,[rip+0x9121]        # 413ef0 <__bss_start@@Base+0xd90>
  40adcf:	mov    rdx,rcx
  40add2:	add    rdx,0x38
  40add9:	add    rcx,0x40
  40ade0:	mov    QWORD PTR [rbp-0x38],rax
  40ade4:	mov    rax,QWORD PTR [rbp-0x38]
  40ade8:	cmp    DWORD PTR [rax],0xc
  40adeb:	mov    QWORD PTR [rbp-0x90],rdx
  40adf2:	mov    QWORD PTR [rbp-0x98],rcx
  40adf9:	je     40ae3d <read_boolean_binary_expression@@Base+0x22d>
  40adff:	mov    rax,QWORD PTR [rbp-0x90]
  40ae06:	mov    rcx,QWORD PTR [rax]
  40ae09:	add    rcx,0x1
  40ae10:	mov    QWORD PTR [rax],rcx
  40ae13:	mov    rdi,QWORD PTR [rbp-0x28]
  40ae17:	call   408830 <free_node@@Base>
  40ae1c:	lea    rax,[rip+0x90cd]        # 413ef0 <__bss_start@@Base+0xd90>
  40ae23:	add    rax,0x48
  40ae29:	mov    QWORD PTR [rbp-0x8],0x0
  40ae31:	mov    QWORD PTR [rbp-0x88],rax
  40ae38:	jmp    40af7e <read_boolean_binary_expression@@Base+0x36e>
  40ae3d:	mov    rax,QWORD PTR [rbp-0x98]
  40ae44:	mov    rcx,QWORD PTR [rax]
  40ae47:	add    rcx,0x1
  40ae4e:	mov    QWORD PTR [rax],rcx
  40ae51:	mov    rax,QWORD PTR [rbp-0x38]
  40ae55:	mov    QWORD PTR [rbp-0x48],rax
  40ae59:	mov    rdi,QWORD PTR [rbp-0x48]
  40ae5d:	call   408ff0 <get_boolean_op_value@@Base>
  40ae62:	mov    DWORD PTR [rbp-0x4c],eax
  40ae65:	mov    rdi,QWORD PTR [rbp-0x48]
  40ae69:	call   407fb0 <free_token_boolean_op@@Base>
  40ae6e:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae72:	mov    rdi,QWORD PTR [rcx]
  40ae75:	call   403380 <next@@Base>
  40ae7a:	lea    rcx,[rip+0x906f]        # 413ef0 <__bss_start@@Base+0xd90>
  40ae81:	mov    rdx,rcx
  40ae84:	add    rdx,0x50
  40ae8b:	add    rcx,0x58
  40ae92:	mov    QWORD PTR [rbp-0x38],rax
  40ae96:	mov    rax,QWORD PTR [rbp-0x38]
  40ae9a:	cmp    DWORD PTR [rax],0x1
  40ae9d:	mov    QWORD PTR [rbp-0xa0],rdx
  40aea4:	mov    QWORD PTR [rbp-0xa8],rcx
  40aeab:	je     40aeef <read_boolean_binary_expression@@Base+0x2df>
  40aeb1:	mov    rax,QWORD PTR [rbp-0xa0]
  40aeb8:	mov    rcx,QWORD PTR [rax]
  40aebb:	add    rcx,0x1
  40aec2:	mov    QWORD PTR [rax],rcx
  40aec5:	mov    rdi,QWORD PTR [rbp-0x28]
  40aec9:	call   408830 <free_node@@Base>
  40aece:	lea    rax,[rip+0x901b]        # 413ef0 <__bss_start@@Base+0xd90>
  40aed5:	add    rax,0x60
  40aedb:	mov    QWORD PTR [rbp-0x8],0x0
  40aee3:	mov    QWORD PTR [rbp-0x88],rax
  40aeea:	jmp    40af7e <read_boolean_binary_expression@@Base+0x36e>
  40aeef:	mov    rax,QWORD PTR [rbp-0xa8]
  40aef6:	mov    rcx,QWORD PTR [rax]
  40aef9:	add    rcx,0x1
  40af00:	mov    QWORD PTR [rax],rcx
  40af03:	mov    rax,QWORD PTR [rbp-0x38]
  40af07:	mov    QWORD PTR [rbp-0x40],rax
  40af0b:	mov    edi,0x18
  40af10:	call   4031d0 <malloc@plt>
  40af15:	mov    QWORD PTR [rbp-0x20],rax
  40af19:	mov    rax,QWORD PTR [rbp-0x20]
  40af1d:	mov    rcx,QWORD PTR [rbp-0x40]
  40af21:	mov    esi,DWORD PTR [rcx+0x4]
  40af24:	mov    rdi,rax
  40af27:	call   408560 <init_node_int@@Base>
  40af2c:	mov    rdi,QWORD PTR [rbp-0x40]
  40af30:	call   407b90 <free_token_int_value@@Base>
  40af35:	mov    rax,QWORD PTR [rbp-0x20]
  40af39:	mov    QWORD PTR [rbp-0x30],rax
  40af3d:	mov    edi,0x28
  40af42:	call   4031d0 <malloc@plt>
  40af47:	mov    QWORD PTR [rbp-0x18],rax
  40af4b:	mov    rax,QWORD PTR [rbp-0x18]
  40af4f:	mov    esi,DWORD PTR [rbp-0x4c]
  40af52:	mov    rdx,QWORD PTR [rbp-0x28]
  40af56:	mov    rcx,QWORD PTR [rbp-0x30]
  40af5a:	mov    rdi,rax
  40af5d:	call   408780 <init_node_boolean_operator@@Base>
  40af62:	lea    rax,[rip+0x8f87]        # 413ef0 <__bss_start@@Base+0xd90>
  40af69:	add    rax,0x68
  40af6f:	mov    rcx,QWORD PTR [rbp-0x18]
  40af73:	mov    QWORD PTR [rbp-0x8],rcx
  40af77:	mov    QWORD PTR [rbp-0x88],rax
  40af7e:	mov    rax,QWORD PTR [rbp-0x88]
  40af85:	mov    rcx,QWORD PTR [rax]
  40af88:	add    rcx,0x1
  40af8f:	mov    QWORD PTR [rax],rcx
  40af92:	mov    rax,QWORD PTR [rip+0x8fc7]        # 413f60 <__bss_start@@Base+0xe00>
  40af99:	add    rax,0x1
  40af9f:	mov    QWORD PTR [rip+0x8fba],rax        # 413f60 <__bss_start@@Base+0xe00>
  40afa6:	mov    rax,QWORD PTR [rbp-0x8]
  40afaa:	add    rsp,0xb0
  40afb1:	pop    rbp
  40afb2:	ret    
  40afb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afbd:	nop    DWORD PTR [rax]

000000000040afc0 <read_boolean_unary_expression@@Base>:
  40afc0:	push   rbp
  40afc1:	mov    rbp,rsp
  40afc4:	sub    rsp,0x80
  40afcb:	lea    rax,[rip+0x8f9e]        # 413f70 <__bss_start@@Base+0xe10>
  40afd2:	mov    QWORD PTR [rbp-0x48],rdi
  40afd6:	mov    QWORD PTR [rbp-0x50],rax
  40afda:	mov    rax,QWORD PTR [rbp-0x50]
  40afde:	mov    rcx,QWORD PTR [rax]
  40afe1:	add    rcx,0x1
  40afe8:	mov    QWORD PTR [rax],rcx
  40afeb:	mov    rax,QWORD PTR [rbp-0x48]
  40afef:	mov    QWORD PTR [rbp-0x10],rax
  40aff3:	mov    QWORD PTR [rbp-0x18],0x0
  40affb:	mov    QWORD PTR [rbp-0x20],0x0
  40b003:	mov    QWORD PTR [rbp-0x28],0x0
  40b00b:	mov    QWORD PTR [rbp-0x30],0x0
  40b013:	mov    QWORD PTR [rbp-0x38],0x0
  40b01b:	mov    edi,0x28
  40b020:	call   4031d0 <malloc@plt>
  40b025:	mov    QWORD PTR [rbp-0x18],rax
  40b029:	mov    rax,QWORD PTR [rbp-0x10]
  40b02d:	mov    rdi,QWORD PTR [rax]
  40b030:	call   403380 <next@@Base>
  40b035:	lea    rcx,[rip+0x8f34]        # 413f70 <__bss_start@@Base+0xe10>
  40b03c:	mov    rdx,rcx
  40b03f:	add    rdx,0x8
  40b046:	add    rcx,0x10
  40b04d:	mov    QWORD PTR [rbp-0x30],rax
  40b051:	mov    rax,QWORD PTR [rbp-0x30]
  40b055:	cmp    DWORD PTR [rax],0xc
  40b058:	mov    QWORD PTR [rbp-0x58],rdx
  40b05c:	mov    QWORD PTR [rbp-0x60],rcx
  40b060:	je     40b0a1 <read_boolean_unary_expression@@Base+0xe1>
  40b066:	mov    rax,QWORD PTR [rbp-0x58]
  40b06a:	mov    rcx,QWORD PTR [rax]
  40b06d:	add    rcx,0x1
  40b074:	mov    QWORD PTR [rax],rcx
  40b077:	mov    rax,QWORD PTR [rbp-0x18]
  40b07b:	mov    rdi,rax
  40b07e:	call   408f10 <free_node_boolean_operator@@Base>
  40b083:	lea    rax,[rip+0x8ee6]        # 413f70 <__bss_start@@Base+0xe10>
  40b08a:	add    rax,0x18
  40b090:	mov    QWORD PTR [rbp-0x8],0x0
  40b098:	mov    QWORD PTR [rbp-0x68],rax
  40b09c:	jmp    40b1c0 <read_boolean_unary_expression@@Base+0x200>
  40b0a1:	mov    rax,QWORD PTR [rbp-0x60]
  40b0a5:	mov    rcx,QWORD PTR [rax]
  40b0a8:	add    rcx,0x1
  40b0af:	mov    QWORD PTR [rax],rcx
  40b0b2:	mov    rax,QWORD PTR [rbp-0x30]
  40b0b6:	mov    rdi,rax
  40b0b9:	call   408ff0 <get_boolean_op_value@@Base>
  40b0be:	mov    DWORD PTR [rbp-0x3c],eax
  40b0c1:	mov    rcx,QWORD PTR [rbp-0x30]
  40b0c5:	mov    rdi,rcx
  40b0c8:	call   407fb0 <free_token_boolean_op@@Base>
  40b0cd:	mov    rcx,QWORD PTR [rbp-0x10]
  40b0d1:	mov    rdi,QWORD PTR [rcx]
  40b0d4:	call   403380 <next@@Base>
  40b0d9:	lea    rcx,[rip+0x8e90]        # 413f70 <__bss_start@@Base+0xe10>
  40b0e0:	mov    rdx,rcx
  40b0e3:	add    rdx,0x20
  40b0ea:	add    rcx,0x28
  40b0f1:	mov    QWORD PTR [rbp-0x30],rax
  40b0f5:	mov    rax,QWORD PTR [rbp-0x30]
  40b0f9:	cmp    DWORD PTR [rax],0x1
  40b0fc:	mov    QWORD PTR [rbp-0x70],rdx
  40b100:	mov    QWORD PTR [rbp-0x78],rcx
  40b104:	je     40b145 <read_boolean_unary_expression@@Base+0x185>
  40b10a:	mov    rax,QWORD PTR [rbp-0x70]
  40b10e:	mov    rcx,QWORD PTR [rax]
  40b111:	add    rcx,0x1
  40b118:	mov    QWORD PTR [rax],rcx
  40b11b:	mov    rax,QWORD PTR [rbp-0x18]
  40b11f:	mov    rdi,rax
  40b122:	call   408f10 <free_node_boolean_operator@@Base>
  40b127:	lea    rax,[rip+0x8e42]        # 413f70 <__bss_start@@Base+0xe10>
  40b12e:	add    rax,0x30
  40b134:	mov    QWORD PTR [rbp-0x8],0x0
  40b13c:	mov    QWORD PTR [rbp-0x68],rax
  40b140:	jmp    40b1c0 <read_boolean_unary_expression@@Base+0x200>
  40b145:	mov    rax,QWORD PTR [rbp-0x78]
  40b149:	mov    rcx,QWORD PTR [rax]
  40b14c:	add    rcx,0x1
  40b153:	mov    QWORD PTR [rax],rcx
  40b156:	mov    rax,QWORD PTR [rbp-0x30]
  40b15a:	mov    QWORD PTR [rbp-0x38],rax
  40b15e:	mov    edi,0x18
  40b163:	call   4031d0 <malloc@plt>
  40b168:	mov    QWORD PTR [rbp-0x20],rax
  40b16c:	mov    rax,QWORD PTR [rbp-0x20]
  40b170:	mov    rcx,QWORD PTR [rbp-0x38]
  40b174:	mov    esi,DWORD PTR [rcx+0x4]
  40b177:	mov    rdi,rax
  40b17a:	call   408560 <init_node_int@@Base>
  40b17f:	mov    rdi,QWORD PTR [rbp-0x38]
  40b183:	call   407b90 <free_token_int_value@@Base>
  40b188:	xor    edx,edx
  40b18a:	mov    ecx,edx
  40b18c:	mov    rax,QWORD PTR [rbp-0x20]
  40b190:	mov    QWORD PTR [rbp-0x28],rax
  40b194:	mov    rax,QWORD PTR [rbp-0x18]
  40b198:	mov    esi,DWORD PTR [rbp-0x3c]
  40b19b:	mov    rdx,QWORD PTR [rbp-0x28]
  40b19f:	mov    rdi,rax
  40b1a2:	call   408780 <init_node_boolean_operator@@Base>
  40b1a7:	lea    rax,[rip+0x8dc2]        # 413f70 <__bss_start@@Base+0xe10>
  40b1ae:	add    rax,0x38
  40b1b4:	mov    rcx,QWORD PTR [rbp-0x18]
  40b1b8:	mov    QWORD PTR [rbp-0x8],rcx
  40b1bc:	mov    QWORD PTR [rbp-0x68],rax
  40b1c0:	mov    rax,QWORD PTR [rbp-0x68]
  40b1c4:	mov    rcx,QWORD PTR [rax]
  40b1c7:	add    rcx,0x1
  40b1ce:	mov    QWORD PTR [rax],rcx
  40b1d1:	mov    rax,QWORD PTR [rip+0x8dd8]        # 413fb0 <__bss_start@@Base+0xe50>
  40b1d8:	add    rax,0x1
  40b1de:	mov    QWORD PTR [rip+0x8dcb],rax        # 413fb0 <__bss_start@@Base+0xe50>
  40b1e5:	mov    rax,QWORD PTR [rbp-0x8]
  40b1e9:	add    rsp,0x80
  40b1f0:	pop    rbp
  40b1f1:	ret    
  40b1f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1fc:	nop    DWORD PTR [rax+0x0]
  40b200:	sub    rsp,0x38
  40b204:	xor    eax,eax
  40b206:	mov    DWORD PTR [rsp+0x34],eax
  40b20a:	jmp    40b20f <read_boolean_unary_expression@@Base+0x24f>
  40b20f:	mov    eax,DWORD PTR [rsp+0x34]
  40b213:	movsxd rcx,eax
  40b216:	imul   rcx,rcx,0x30
  40b21d:	lea    rdx,[rip+0x7bac]        # 412dd0 <_IO_stdin_used@@Base+0x4dd0>
  40b224:	add    rdx,rcx
  40b227:	mov    rdi,QWORD PTR [rdx]
  40b22a:	mov    rsi,QWORD PTR [rdx+0x8]
  40b22e:	mov    r8d,DWORD PTR [rdx+0x10]
  40b232:	mov    QWORD PTR [rsp+0x28],rdx
  40b237:	mov    edx,r8d
  40b23a:	mov    DWORD PTR [rsp+0x24],eax
  40b23e:	call   40b7c0 <read_boolean_unary_expression@@Base+0x800>
  40b243:	xor    eax,eax
  40b245:	mov    rcx,QWORD PTR [rsp+0x28]
  40b24a:	mov    edx,DWORD PTR [rcx+0x18]
  40b24d:	mov    rsi,QWORD PTR [rcx+0x20]
  40b251:	mov    rdi,QWORD PTR [rcx+0x28]
  40b255:	cmp    eax,edx
  40b257:	mov    DWORD PTR [rsp+0x20],edx
  40b25b:	mov    QWORD PTR [rsp+0x18],rsi
  40b260:	mov    QWORD PTR [rsp+0x10],rdi
  40b265:	mov    DWORD PTR [rsp+0xc],eax
  40b269:	jge    40b2dd <read_boolean_unary_expression@@Base+0x31d>
  40b26f:	mov    eax,DWORD PTR [rsp+0xc]
  40b273:	movsxd rcx,eax
  40b276:	shl    rcx,0x5
  40b27a:	mov    rdx,QWORD PTR [rsp+0x18]
  40b27f:	add    rdx,rcx
  40b282:	mov    edi,DWORD PTR [rdx]
  40b284:	mov    rsi,QWORD PTR [rdx+0x8]
  40b288:	mov    r8d,DWORD PTR [rdx+0x10]
  40b28c:	mov    r9b,BYTE PTR [rdx+0x14]
  40b290:	mov    r10d,DWORD PTR [rdx+0x18]
  40b294:	mov    edx,r8d
  40b297:	movzx  ecx,r9b
  40b29b:	mov    r8d,r10d
  40b29e:	mov    DWORD PTR [rsp+0x8],eax
  40b2a2:	call   40bc10 <read_boolean_unary_expression@@Base+0xc50>
  40b2a7:	mov    eax,DWORD PTR [rsp+0x8]
  40b2ab:	movsxd rsi,eax
  40b2ae:	shl    rsi,0x4
  40b2b2:	mov    r11,QWORD PTR [rsp+0x10]
  40b2b7:	add    r11,rsi
  40b2ba:	mov    edi,DWORD PTR [r11]
  40b2bd:	mov    rsi,QWORD PTR [r11+0x8]
  40b2c1:	call   40c030 <read_boolean_unary_expression@@Base+0x1070>
  40b2c6:	mov    eax,DWORD PTR [rsp+0x8]
  40b2ca:	add    eax,0x1
  40b2cd:	mov    ecx,DWORD PTR [rsp+0x20]
  40b2d1:	cmp    eax,ecx
  40b2d3:	mov    DWORD PTR [rsp+0xc],eax
  40b2d7:	jl     40b26f <read_boolean_unary_expression@@Base+0x2af>
  40b2dd:	call   40c440 <read_boolean_unary_expression@@Base+0x1480>
  40b2e2:	call   40cbe0 <read_boolean_unary_expression@@Base+0x1c20>
  40b2e7:	mov    eax,DWORD PTR [rsp+0x24]
  40b2eb:	add    eax,0x1
  40b2ee:	cmp    eax,0x1
  40b2f1:	mov    DWORD PTR [rsp+0x34],eax
  40b2f5:	jl     40b20f <read_boolean_unary_expression@@Base+0x24f>
  40b2fb:	add    rsp,0x38
  40b2ff:	ret    
  40b300:	push   rax
  40b301:	call   40b200 <read_boolean_unary_expression@@Base+0x240>
  40b306:	mov    QWORD PTR [rip+0x8937],0x0        # 413c48 <__bss_start@@Base+0xae8>
  40b311:	mov    QWORD PTR [rip+0x8924],0x0        # 413c40 <__bss_start@@Base+0xae0>
  40b31c:	mov    QWORD PTR [rip+0x8931],0x0        # 413c58 <__bss_start@@Base+0xaf8>
  40b327:	mov    QWORD PTR [rip+0x891e],0x0        # 413c50 <__bss_start@@Base+0xaf0>
  40b332:	mov    QWORD PTR [rip+0x892b],0x0        # 413c68 <__bss_start@@Base+0xb08>
  40b33d:	mov    QWORD PTR [rip+0x8918],0x0        # 413c60 <__bss_start@@Base+0xb00>
  40b348:	mov    QWORD PTR [rip+0x898d],0x0        # 413ce0 <__bss_start@@Base+0xb80>
  40b353:	mov    QWORD PTR [rip+0x897a],0x0        # 413cd8 <__bss_start@@Base+0xb78>
  40b35e:	mov    QWORD PTR [rip+0x8967],0x0        # 413cd0 <__bss_start@@Base+0xb70>
  40b369:	mov    QWORD PTR [rip+0x8954],0x0        # 413cc8 <__bss_start@@Base+0xb68>
  40b374:	mov    QWORD PTR [rip+0x8941],0x0        # 413cc0 <__bss_start@@Base+0xb60>
  40b37f:	mov    QWORD PTR [rip+0x892e],0x0        # 413cb8 <__bss_start@@Base+0xb58>
  40b38a:	mov    QWORD PTR [rip+0x891b],0x0        # 413cb0 <__bss_start@@Base+0xb50>
  40b395:	mov    QWORD PTR [rip+0x8908],0x0        # 413ca8 <__bss_start@@Base+0xb48>
  40b3a0:	mov    QWORD PTR [rip+0x88f5],0x0        # 413ca0 <__bss_start@@Base+0xb40>
  40b3ab:	mov    QWORD PTR [rip+0x88e2],0x0        # 413c98 <__bss_start@@Base+0xb38>
  40b3b6:	mov    QWORD PTR [rip+0x88cf],0x0        # 413c90 <__bss_start@@Base+0xb30>
  40b3c1:	mov    QWORD PTR [rip+0x88bc],0x0        # 413c88 <__bss_start@@Base+0xb28>
  40b3cc:	mov    QWORD PTR [rip+0x88a9],0x0        # 413c80 <__bss_start@@Base+0xb20>
  40b3d7:	mov    QWORD PTR [rip+0x8896],0x0        # 413c78 <__bss_start@@Base+0xb18>
  40b3e2:	mov    QWORD PTR [rip+0x8883],0x0        # 413c70 <__bss_start@@Base+0xb10>
  40b3ed:	mov    QWORD PTR [rip+0x8990],0x0        # 413d88 <__bss_start@@Base+0xc28>
  40b3f8:	mov    QWORD PTR [rip+0x897d],0x0        # 413d80 <__bss_start@@Base+0xc20>
  40b403:	mov    QWORD PTR [rip+0x896a],0x0        # 413d78 <__bss_start@@Base+0xc18>
  40b40e:	mov    QWORD PTR [rip+0x8957],0x0        # 413d70 <__bss_start@@Base+0xc10>
  40b419:	mov    QWORD PTR [rip+0x8944],0x0        # 413d68 <__bss_start@@Base+0xc08>
  40b424:	mov    QWORD PTR [rip+0x8931],0x0        # 413d60 <__bss_start@@Base+0xc00>
  40b42f:	mov    QWORD PTR [rip+0x891e],0x0        # 413d58 <__bss_start@@Base+0xbf8>
  40b43a:	mov    QWORD PTR [rip+0x890b],0x0        # 413d50 <__bss_start@@Base+0xbf0>
  40b445:	mov    QWORD PTR [rip+0x88f8],0x0        # 413d48 <__bss_start@@Base+0xbe8>
  40b450:	mov    QWORD PTR [rip+0x88e5],0x0        # 413d40 <__bss_start@@Base+0xbe0>
  40b45b:	mov    QWORD PTR [rip+0x88d2],0x0        # 413d38 <__bss_start@@Base+0xbd8>
  40b466:	mov    QWORD PTR [rip+0x88bf],0x0        # 413d30 <__bss_start@@Base+0xbd0>
  40b471:	mov    QWORD PTR [rip+0x88ac],0x0        # 413d28 <__bss_start@@Base+0xbc8>
  40b47c:	mov    QWORD PTR [rip+0x8899],0x0        # 413d20 <__bss_start@@Base+0xbc0>
  40b487:	mov    QWORD PTR [rip+0x8886],0x0        # 413d18 <__bss_start@@Base+0xbb8>
  40b492:	mov    QWORD PTR [rip+0x8873],0x0        # 413d10 <__bss_start@@Base+0xbb0>
  40b49d:	mov    QWORD PTR [rip+0x8860],0x0        # 413d08 <__bss_start@@Base+0xba8>
  40b4a8:	mov    QWORD PTR [rip+0x884d],0x0        # 413d00 <__bss_start@@Base+0xba0>
  40b4b3:	mov    QWORD PTR [rip+0x883a],0x0        # 413cf8 <__bss_start@@Base+0xb98>
  40b4be:	mov    QWORD PTR [rip+0x8827],0x0        # 413cf0 <__bss_start@@Base+0xb90>
  40b4c9:	mov    QWORD PTR [rip+0x88fc],0x0        # 413dd0 <__bss_start@@Base+0xc70>
  40b4d4:	mov    QWORD PTR [rip+0x88e9],0x0        # 413dc8 <__bss_start@@Base+0xc68>
  40b4df:	mov    QWORD PTR [rip+0x88d6],0x0        # 413dc0 <__bss_start@@Base+0xc60>
  40b4ea:	mov    QWORD PTR [rip+0x88c3],0x0        # 413db8 <__bss_start@@Base+0xc58>
  40b4f5:	mov    QWORD PTR [rip+0x88b0],0x0        # 413db0 <__bss_start@@Base+0xc50>
  40b500:	mov    QWORD PTR [rip+0x889d],0x0        # 413da8 <__bss_start@@Base+0xc48>
  40b50b:	mov    QWORD PTR [rip+0x888a],0x0        # 413da0 <__bss_start@@Base+0xc40>
  40b516:	mov    QWORD PTR [rip+0x8877],0x0        # 413d98 <__bss_start@@Base+0xc38>
  40b521:	mov    QWORD PTR [rip+0x8864],0x0        # 413d90 <__bss_start@@Base+0xc30>
  40b52c:	mov    QWORD PTR [rip+0x88f1],0x0        # 413e28 <__bss_start@@Base+0xcc8>
  40b537:	mov    QWORD PTR [rip+0x88de],0x0        # 413e20 <__bss_start@@Base+0xcc0>
  40b542:	mov    QWORD PTR [rip+0x88cb],0x0        # 413e18 <__bss_start@@Base+0xcb8>
  40b54d:	mov    QWORD PTR [rip+0x88b8],0x0        # 413e10 <__bss_start@@Base+0xcb0>
  40b558:	mov    QWORD PTR [rip+0x88a5],0x0        # 413e08 <__bss_start@@Base+0xca8>
  40b563:	mov    QWORD PTR [rip+0x8892],0x0        # 413e00 <__bss_start@@Base+0xca0>
  40b56e:	mov    QWORD PTR [rip+0x887f],0x0        # 413df8 <__bss_start@@Base+0xc98>
  40b579:	mov    QWORD PTR [rip+0x886c],0x0        # 413df0 <__bss_start@@Base+0xc90>
  40b584:	mov    QWORD PTR [rip+0x8859],0x0        # 413de8 <__bss_start@@Base+0xc88>
  40b58f:	mov    QWORD PTR [rip+0x8846],0x0        # 413de0 <__bss_start@@Base+0xc80>
  40b59a:	mov    QWORD PTR [rip+0x88eb],0x0        # 413e90 <__bss_start@@Base+0xd30>
  40b5a5:	mov    QWORD PTR [rip+0x88d8],0x0        # 413e88 <__bss_start@@Base+0xd28>
  40b5b0:	mov    QWORD PTR [rip+0x88c5],0x0        # 413e80 <__bss_start@@Base+0xd20>
  40b5bb:	mov    QWORD PTR [rip+0x88b2],0x0        # 413e78 <__bss_start@@Base+0xd18>
  40b5c6:	mov    QWORD PTR [rip+0x889f],0x0        # 413e70 <__bss_start@@Base+0xd10>
  40b5d1:	mov    QWORD PTR [rip+0x888c],0x0        # 413e68 <__bss_start@@Base+0xd08>
  40b5dc:	mov    QWORD PTR [rip+0x8879],0x0        # 413e60 <__bss_start@@Base+0xd00>
  40b5e7:	mov    QWORD PTR [rip+0x8866],0x0        # 413e58 <__bss_start@@Base+0xcf8>
  40b5f2:	mov    QWORD PTR [rip+0x8853],0x0        # 413e50 <__bss_start@@Base+0xcf0>
  40b5fd:	mov    QWORD PTR [rip+0x8840],0x0        # 413e48 <__bss_start@@Base+0xce8>
  40b608:	mov    QWORD PTR [rip+0x882d],0x0        # 413e40 <__bss_start@@Base+0xce0>
  40b613:	mov    QWORD PTR [rip+0x881a],0x0        # 413e38 <__bss_start@@Base+0xcd8>
  40b61e:	mov    QWORD PTR [rip+0x8807],0x0        # 413e30 <__bss_start@@Base+0xcd0>
  40b629:	mov    QWORD PTR [rip+0x88ac],0x0        # 413ee0 <__bss_start@@Base+0xd80>
  40b634:	mov    QWORD PTR [rip+0x8899],0x0        # 413ed8 <__bss_start@@Base+0xd78>
  40b63f:	mov    QWORD PTR [rip+0x8886],0x0        # 413ed0 <__bss_start@@Base+0xd70>
  40b64a:	mov    QWORD PTR [rip+0x8873],0x0        # 413ec8 <__bss_start@@Base+0xd68>
  40b655:	mov    QWORD PTR [rip+0x8860],0x0        # 413ec0 <__bss_start@@Base+0xd60>
  40b660:	mov    QWORD PTR [rip+0x884d],0x0        # 413eb8 <__bss_start@@Base+0xd58>
  40b66b:	mov    QWORD PTR [rip+0x883a],0x0        # 413eb0 <__bss_start@@Base+0xd50>
  40b676:	mov    QWORD PTR [rip+0x8827],0x0        # 413ea8 <__bss_start@@Base+0xd48>
  40b681:	mov    QWORD PTR [rip+0x8814],0x0        # 413ea0 <__bss_start@@Base+0xd40>
  40b68c:	mov    QWORD PTR [rip+0x88c9],0x0        # 413f60 <__bss_start@@Base+0xe00>
  40b697:	mov    QWORD PTR [rip+0x88b6],0x0        # 413f58 <__bss_start@@Base+0xdf8>
  40b6a2:	mov    QWORD PTR [rip+0x88a3],0x0        # 413f50 <__bss_start@@Base+0xdf0>
  40b6ad:	mov    QWORD PTR [rip+0x8890],0x0        # 413f48 <__bss_start@@Base+0xde8>
  40b6b8:	mov    QWORD PTR [rip+0x887d],0x0        # 413f40 <__bss_start@@Base+0xde0>
  40b6c3:	mov    QWORD PTR [rip+0x886a],0x0        # 413f38 <__bss_start@@Base+0xdd8>
  40b6ce:	mov    QWORD PTR [rip+0x8857],0x0        # 413f30 <__bss_start@@Base+0xdd0>
  40b6d9:	mov    QWORD PTR [rip+0x8844],0x0        # 413f28 <__bss_start@@Base+0xdc8>
  40b6e4:	mov    QWORD PTR [rip+0x8831],0x0        # 413f20 <__bss_start@@Base+0xdc0>
  40b6ef:	mov    QWORD PTR [rip+0x881e],0x0        # 413f18 <__bss_start@@Base+0xdb8>
  40b6fa:	mov    QWORD PTR [rip+0x880b],0x0        # 413f10 <__bss_start@@Base+0xdb0>
  40b705:	mov    QWORD PTR [rip+0x87f8],0x0        # 413f08 <__bss_start@@Base+0xda8>
  40b710:	mov    QWORD PTR [rip+0x87e5],0x0        # 413f00 <__bss_start@@Base+0xda0>
  40b71b:	mov    QWORD PTR [rip+0x87d2],0x0        # 413ef8 <__bss_start@@Base+0xd98>
  40b726:	mov    QWORD PTR [rip+0x87bf],0x0        # 413ef0 <__bss_start@@Base+0xd90>
  40b731:	mov    QWORD PTR [rip+0x8874],0x0        # 413fb0 <__bss_start@@Base+0xe50>
  40b73c:	mov    QWORD PTR [rip+0x8861],0x0        # 413fa8 <__bss_start@@Base+0xe48>
  40b747:	mov    QWORD PTR [rip+0x884e],0x0        # 413fa0 <__bss_start@@Base+0xe40>
  40b752:	mov    QWORD PTR [rip+0x883b],0x0        # 413f98 <__bss_start@@Base+0xe38>
  40b75d:	mov    QWORD PTR [rip+0x8828],0x0        # 413f90 <__bss_start@@Base+0xe30>
  40b768:	mov    QWORD PTR [rip+0x8815],0x0        # 413f88 <__bss_start@@Base+0xe28>
  40b773:	mov    QWORD PTR [rip+0x8802],0x0        # 413f80 <__bss_start@@Base+0xe20>
  40b77e:	mov    QWORD PTR [rip+0x87ef],0x0        # 413f78 <__bss_start@@Base+0xe18>
  40b789:	mov    QWORD PTR [rip+0x87dc],0x0        # 413f70 <__bss_start@@Base+0xe10>
  40b794:	pop    rax
  40b795:	ret    
  40b796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7a0:	push   rax
  40b7a1:	lea    rdi,[rip+0xfffffffffffffa58]        # 40b200 <read_boolean_unary_expression@@Base+0x240>
  40b7a8:	lea    rsi,[rip+0xfffffffffffffb51]        # 40b300 <read_boolean_unary_expression@@Base+0x340>
  40b7af:	call   40cfc0 <__gcov_flush@@Base+0xb0>
  40b7b4:	pop    rax
  40b7b5:	ret    
  40b7b6:	xchg   ax,ax
  40b7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7c0:	push   rbp
  40b7c1:	push   r15
  40b7c3:	push   r14
  40b7c5:	push   r13
  40b7c7:	push   r12
  40b7c9:	push   rbx
  40b7ca:	sub    rsp,0x18
  40b7ce:	mov    r14d,edx
  40b7d1:	mov    r15,rsi
  40b7d4:	mov    r12,rdi
  40b7d7:	lea    rdi,[rsp+0xc]
  40b7dc:	lea    rsi,[rsp+0x10]
  40b7e1:	call   40d3f0 <__gcov_flush@@Base+0x4e0>
  40b7e6:	test   rax,rax
  40b7e9:	je     40b823 <read_boolean_unary_expression@@Base+0x863>
  40b7eb:	mov    rbx,rax
  40b7ee:	mov    r13,QWORD PTR [rsp+0x10]
  40b7f3:	mov    rdi,r12
  40b7f6:	call   4030d0 <strlen@plt>
  40b7fb:	lea    rdi,[rax+r13*1]
  40b7ff:	add    rdi,0x2
  40b803:	call   4031d0 <malloc@plt>
  40b808:	mov    rbp,rax
  40b80b:	mov    r8d,DWORD PTR [rsp+0xc]
  40b810:	mov    rdi,rax
  40b813:	mov    rsi,r12
  40b816:	mov    rdx,rbx
  40b819:	mov    rcx,r13
  40b81c:	call   40d480 <__gcov_flush@@Base+0x570>
  40b821:	jmp    40b82e <read_boolean_unary_expression@@Base+0x86e>
  40b823:	mov    rdi,r12
  40b826:	call   403270 <strdup@plt>
  40b82b:	mov    rbp,rax
  40b82e:	mov    QWORD PTR [rip+0x8783],rbp        # 413fb8 <__bss_start@@Base+0xe58>
  40b835:	mov    BYTE PTR [rip+0x8784],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40b83c:	mov    rdi,rbp
  40b83f:	mov    esi,0x2
  40b844:	xor    eax,eax
  40b846:	call   403230 <open@plt>
  40b84b:	mov    DWORD PTR [rip+0x7907],eax        # 413158 <__data_start@@Base+0x10>
  40b851:	cmp    eax,0xffffffff
  40b854:	je     40b85f <read_boolean_unary_expression@@Base+0x89f>
  40b856:	lea    rbx,[rip+0x346a]        # 40ecc7 <_IO_stdin_used@@Base+0xcc7>
  40b85d:	jmp    40b8c3 <read_boolean_unary_expression@@Base+0x903>
  40b85f:	mov    BYTE PTR [rip+0x875a],0x1        # 413fc0 <__bss_start@@Base+0xe60>
  40b866:	mov    rdi,QWORD PTR [rip+0x874b]        # 413fb8 <__bss_start@@Base+0xe58>
  40b86d:	mov    esi,0x42
  40b872:	mov    edx,0x1a4
  40b877:	xor    eax,eax
  40b879:	call   403230 <open@plt>
  40b87e:	mov    DWORD PTR [rip+0x78d4],eax        # 413158 <__data_start@@Base+0x10>
  40b884:	lea    rbx,[rip+0x3440]        # 40eccb <_IO_stdin_used@@Base+0xccb>
  40b88b:	cmp    eax,0xffffffff
  40b88e:	jne    40b8c3 <read_boolean_unary_expression@@Base+0x903>
  40b890:	mov    rdi,QWORD PTR [rip+0x8721]        # 413fb8 <__bss_start@@Base+0xe58>
  40b897:	call   40d0b0 <__gcov_flush@@Base+0x1a0>
  40b89c:	mov    rdi,QWORD PTR [rip+0x8715]        # 413fb8 <__bss_start@@Base+0xe58>
  40b8a3:	mov    esi,0x42
  40b8a8:	mov    edx,0x1a4
  40b8ad:	xor    eax,eax
  40b8af:	call   403230 <open@plt>
  40b8b4:	mov    DWORD PTR [rip+0x789e],eax        # 413158 <__data_start@@Base+0x10>
  40b8ba:	cmp    eax,0xffffffff
  40b8bd:	je     40bba8 <read_boolean_unary_expression@@Base+0xbe8>
  40b8c3:	mov    edi,eax
  40b8c5:	call   40d160 <__gcov_flush@@Base+0x250>
  40b8ca:	mov    edi,DWORD PTR [rip+0x7888]        # 413158 <__data_start@@Base+0x10>
  40b8d0:	mov    rsi,rbx
  40b8d3:	call   403210 <fdopen@plt>
  40b8d8:	mov    QWORD PTR [rip+0x86e9],rax        # 413fc8 <__bss_start@@Base+0xe68>
  40b8df:	mov    QWORD PTR [rip+0x86e6],0x0        # 413fd0 <__bss_start@@Base+0xe70>
  40b8ea:	mov    QWORD PTR [rip+0x86e3],0x0        # 413fd8 <__bss_start@@Base+0xe78>
  40b8f5:	mov    QWORD PTR [rip+0x86e0],0x0        # 413fe0 <__bss_start@@Base+0xe80>
  40b900:	mov    ebx,0x20000
  40b905:	cmp    BYTE PTR [rip+0x86b4],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40b90c:	je     40b9a9 <read_boolean_unary_expression@@Base+0x9e9>
  40b912:	mov    rdi,rbx
  40b915:	call   4031d0 <malloc@plt>
  40b91a:	mov    r12,rax
  40b91d:	mov    QWORD PTR [rip+0x86ac],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40b924:	mov    QWORD PTR [rip+0x86ad],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40b92b:	mov    edx,0x20000
  40b930:	mov    rdi,r12
  40b933:	xor    esi,esi
  40b935:	call   403150 <memset@plt>
  40b93a:	mov    rbx,QWORD PTR [rip+0x869f]        # 413fe0 <__bss_start@@Base+0xe80>
  40b941:	lea    rax,[rbx+0x4]
  40b945:	cmp    rax,QWORD PTR [rip+0x868c]        # 413fd8 <__bss_start@@Base+0xe78>
  40b94c:	jbe    40ba47 <read_boolean_unary_expression@@Base+0xa87>
  40b952:	add    rbx,0x20003
  40b959:	and    rbx,0xfffffffffffe0000
  40b960:	mov    rdi,r12
  40b963:	mov    rsi,rbx
  40b966:	call   403200 <realloc@plt>
  40b96b:	mov    r12,rax
  40b96e:	mov    QWORD PTR [rip+0x865b],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40b975:	mov    QWORD PTR [rip+0x865c],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40b97c:	mov    al,BYTE PTR [rip+0x863e]        # 413fc0 <__bss_start@@Base+0xe60>
  40b982:	mov    rbp,QWORD PTR [rip+0x8657]        # 413fe0 <__bss_start@@Base+0xe80>
  40b989:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40b991:	lea    rbx,[rbp+0x4]
  40b995:	mov    QWORD PTR [rip+0x8644],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40b99c:	cmp    al,0x1
  40b99e:	jne    40ba2d <read_boolean_unary_expression@@Base+0xa6d>
  40b9a4:	jmp    40ba61 <read_boolean_unary_expression@@Base+0xaa1>
  40b9a9:	mov    rdi,rax
  40b9ac:	xor    esi,esi
  40b9ae:	mov    edx,0x2
  40b9b3:	call   4031f0 <fseek@plt>
  40b9b8:	mov    rdi,QWORD PTR [rip+0x8609]        # 413fc8 <__bss_start@@Base+0xe68>
  40b9bf:	call   403180 <ftell@plt>
  40b9c4:	mov    QWORD PTR [rip+0x8635],rax        # 414000 <__bss_start@@Base+0xea0>
  40b9cb:	test   rax,rax
  40b9ce:	je     40bb60 <read_boolean_unary_expression@@Base+0xba0>
  40b9d4:	mov    r8d,DWORD PTR [rip+0x777d]        # 413158 <__data_start@@Base+0x10>
  40b9db:	xor    edi,edi
  40b9dd:	mov    rsi,rax
  40b9e0:	mov    edx,0x3
  40b9e5:	mov    ecx,0x1
  40b9ea:	xor    r9d,r9d
  40b9ed:	call   4030e0 <mmap@plt>
  40b9f2:	mov    QWORD PTR [rip+0x85d7],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40b9f9:	cmp    rax,0xffffffffffffffff
  40b9fd:	je     40bb2c <read_boolean_unary_expression@@Base+0xb6c>
  40ba03:	mov    r12,rax
  40ba06:	cmp    BYTE PTR [rip+0x85b3],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40ba0d:	jne    40b93a <read_boolean_unary_expression@@Base+0x97a>
  40ba13:	mov    rbx,QWORD PTR [rip+0x85c6]        # 413fe0 <__bss_start@@Base+0xe80>
  40ba1a:	mov    DWORD PTR [r12+rbx*1],0x67636461
  40ba22:	add    rbx,0x4
  40ba26:	mov    QWORD PTR [rip+0x85b3],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40ba2d:	mov    eax,DWORD PTR [r15]
  40ba30:	mov    DWORD PTR [r12+rbx*1],eax
  40ba34:	add    rbx,0x4
  40ba38:	mov    QWORD PTR [rip+0x85a1],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40ba3f:	mov    rax,rbx
  40ba42:	jmp    40bb0e <read_boolean_unary_expression@@Base+0xb4e>
  40ba47:	mov    rbp,QWORD PTR [rip+0x8592]        # 413fe0 <__bss_start@@Base+0xe80>
  40ba4e:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40ba56:	lea    rbx,[rbp+0x4]
  40ba5a:	mov    QWORD PTR [rip+0x857f],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40ba61:	lea    rax,[rbp+0x8]
  40ba65:	cmp    rax,QWORD PTR [rip+0x856c]        # 413fd8 <__bss_start@@Base+0xe78>
  40ba6c:	jbe    40babe <read_boolean_unary_expression@@Base+0xafe>
  40ba6e:	add    rbp,0x20007
  40ba75:	and    rbp,0xfffffffffffe0000
  40ba7c:	mov    rdi,r12
  40ba7f:	mov    rsi,rbp
  40ba82:	call   403200 <realloc@plt>
  40ba87:	mov    r12,rax
  40ba8a:	mov    QWORD PTR [rip+0x853f],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40ba91:	mov    QWORD PTR [rip+0x8540],rbp        # 413fd8 <__bss_start@@Base+0xe78>
  40ba98:	mov    rbx,QWORD PTR [rip+0x8541]        # 413fe0 <__bss_start@@Base+0xe80>
  40ba9f:	mov    cl,BYTE PTR [rip+0x851b]        # 413fc0 <__bss_start@@Base+0xe60>
  40baa5:	mov    eax,DWORD PTR [r15]
  40baa8:	mov    DWORD PTR [r12+rbx*1],eax
  40baac:	lea    rax,[rbx+0x4]
  40bab0:	mov    QWORD PTR [rip+0x8529],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40bab7:	cmp    cl,0x1
  40baba:	je     40bad0 <read_boolean_unary_expression@@Base+0xb10>
  40babc:	jmp    40bb0e <read_boolean_unary_expression@@Base+0xb4e>
  40babe:	mov    eax,DWORD PTR [r15]
  40bac1:	mov    DWORD PTR [r12+rbx*1],eax
  40bac5:	lea    rax,[rbx+0x4]
  40bac9:	mov    QWORD PTR [rip+0x8510],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40bad0:	lea    rcx,[rbx+0x8]
  40bad4:	cmp    rcx,QWORD PTR [rip+0x84fd]        # 413fd8 <__bss_start@@Base+0xe78>
  40badb:	jbe    40bb0e <read_boolean_unary_expression@@Base+0xb4e>
  40badd:	add    rbx,0x20007
  40bae4:	and    rbx,0xfffffffffffe0000
  40baeb:	mov    rdi,r12
  40baee:	mov    rsi,rbx
  40baf1:	call   403200 <realloc@plt>
  40baf6:	mov    r12,rax
  40baf9:	mov    QWORD PTR [rip+0x84d0],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40bb00:	mov    QWORD PTR [rip+0x84d1],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40bb07:	mov    rax,QWORD PTR [rip+0x84d2]        # 413fe0 <__bss_start@@Base+0xe80>
  40bb0e:	mov    DWORD PTR [r12+rax*1],r14d
  40bb12:	add    rax,0x4
  40bb16:	mov    QWORD PTR [rip+0x84c3],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40bb1d:	add    rsp,0x18
  40bb21:	pop    rbx
  40bb22:	pop    r12
  40bb24:	pop    r13
  40bb26:	pop    r14
  40bb28:	pop    r15
  40bb2a:	pop    rbp
  40bb2b:	ret    
  40bb2c:	call   403050 <__errno_location@plt>
  40bb31:	mov    edi,DWORD PTR [rax]
  40bb33:	mov    rax,QWORD PTR [rip+0x74be]        # 412ff8 <stderr@GLIBC_2.2.5>
  40bb3a:	mov    rbx,QWORD PTR [rax]
  40bb3d:	mov    rbp,QWORD PTR [rip+0x8474]        # 413fb8 <__bss_start@@Base+0xe58>
  40bb44:	call   403280 <strerror@plt>
  40bb49:	lea    rsi,[rip+0x32d9]        # 40ee29 <_IO_stdin_used@@Base+0xe29>
  40bb50:	mov    rdi,rbx
  40bb53:	mov    rdx,rbp
  40bb56:	mov    rcx,rax
  40bb59:	xor    eax,eax
  40bb5b:	call   403170 <fprintf@plt>
  40bb60:	mov    BYTE PTR [rip+0x8459],0x1        # 413fc0 <__bss_start@@Base+0xe60>
  40bb67:	mov    QWORD PTR [rip+0x845e],0x0        # 413fd0 <__bss_start@@Base+0xe70>
  40bb72:	mov    QWORD PTR [rip+0x845b],0x0        # 413fd8 <__bss_start@@Base+0xe78>
  40bb7d:	mov    rbx,QWORD PTR [rip+0x845c]        # 413fe0 <__bss_start@@Base+0xe80>
  40bb84:	cmp    rbx,0xfffffffffffe0000
  40bb8b:	jne    40bb95 <read_boolean_unary_expression@@Base+0xbd5>
  40bb8d:	xor    r12d,r12d
  40bb90:	jmp    40b92b <read_boolean_unary_expression@@Base+0x96b>
  40bb95:	add    rbx,0x3ffff
  40bb9c:	and    rbx,0xfffffffffffe0000
  40bba3:	jmp    40b912 <read_boolean_unary_expression@@Base+0x952>
  40bba8:	call   403050 <__errno_location@plt>
  40bbad:	mov    edi,DWORD PTR [rax]
  40bbaf:	mov    rax,QWORD PTR [rip+0x7442]        # 412ff8 <stderr@GLIBC_2.2.5>
  40bbb6:	mov    rbx,QWORD PTR [rax]
  40bbb9:	mov    rbp,QWORD PTR [rip+0x83f8]        # 413fb8 <__bss_start@@Base+0xe58>
  40bbc0:	call   403280 <strerror@plt>
  40bbc5:	lea    rsi,[rip+0x3103]        # 40eccf <_IO_stdin_used@@Base+0xccf>
  40bbcc:	mov    rdi,rbx
  40bbcf:	mov    rdx,rbp
  40bbd2:	mov    rcx,rax
  40bbd5:	xor    eax,eax
  40bbd7:	call   403170 <fprintf@plt>
  40bbdc:	jmp    40bb1d <read_boolean_unary_expression@@Base+0xb5d>
  40bbe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbf0:	mov    eax,DWORD PTR [rdi]
  40bbf2:	mov    ecx,0xffffffff
  40bbf7:	cmp    rax,rcx
  40bbfa:	je     40bc09 <read_boolean_unary_expression@@Base+0xc49>
  40bbfc:	mov    rax,QWORD PTR [rsi+rax*8]
  40bc00:	test   rax,rax
  40bc03:	je     40bc09 <read_boolean_unary_expression@@Base+0xc49>
  40bc05:	add    QWORD PTR [rax],0x1
  40bc09:	ret    
  40bc0a:	nop    WORD PTR [rax+rax*1+0x0]
  40bc10:	push   rbp
  40bc11:	push   r15
  40bc13:	push   r14
  40bc15:	push   r13
  40bc17:	push   r12
  40bc19:	push   rbx
  40bc1a:	sub    rsp,0x18
  40bc1e:	mov    r15d,ecx
  40bc21:	xor    r14d,r14d
  40bc24:	test   r15b,r15b
  40bc27:	setne  al
  40bc2a:	cmp    QWORD PTR [rip+0x8396],0x0        # 413fc8 <__bss_start@@Base+0xe68>
  40bc32:	je     40bf53 <read_boolean_unary_expression@@Base+0xf93>
  40bc38:	mov    DWORD PTR [rsp+0x4],edi
  40bc3c:	mov    DWORD PTR [rsp+0x14],edx
  40bc40:	mov    DWORD PTR [rsp],r8d
  40bc44:	mov    QWORD PTR [rsp+0x8],rsi
  40bc49:	mov    r14b,al
  40bc4c:	cmp    BYTE PTR [rip+0x836d],0x1        # 413fc0 <__bss_start@@Base+0xe60>
  40bc53:	jne    40bc94 <read_boolean_unary_expression@@Base+0xcd4>
  40bc55:	mov    rbx,QWORD PTR [rip+0x8384]        # 413fe0 <__bss_start@@Base+0xe80>
  40bc5c:	lea    rax,[rbx+0x4]
  40bc60:	cmp    rax,QWORD PTR [rip+0x8371]        # 413fd8 <__bss_start@@Base+0xe78>
  40bc67:	jbe    40bc94 <read_boolean_unary_expression@@Base+0xcd4>
  40bc69:	add    rbx,0x20003
  40bc70:	and    rbx,0xfffffffffffe0000
  40bc77:	mov    rdi,QWORD PTR [rip+0x8352]        # 413fd0 <__bss_start@@Base+0xe70>
  40bc7e:	mov    rsi,rbx
  40bc81:	call   403200 <realloc@plt>
  40bc86:	mov    QWORD PTR [rip+0x8343],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40bc8d:	mov    QWORD PTR [rip+0x8344],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40bc94:	or     r14d,0x2
  40bc98:	mov    r12,QWORD PTR [rip+0x8331]        # 413fd0 <__bss_start@@Base+0xe70>
  40bc9f:	mov    rbp,QWORD PTR [rip+0x833a]        # 413fe0 <__bss_start@@Base+0xe80>
  40bca6:	mov    DWORD PTR [r12+rbp*1],0x1000000
  40bcae:	lea    r13,[rbp+0x4]
  40bcb2:	mov    QWORD PTR [rip+0x8327],r13        # 413fe0 <__bss_start@@Base+0xe80>
  40bcb9:	mov    rdi,QWORD PTR [rsp+0x8]
  40bcbe:	test   rdi,rdi
  40bcc1:	je     40bcd4 <read_boolean_unary_expression@@Base+0xd14>
  40bcc3:	call   4030d0 <strlen@plt>
  40bcc8:	shr    rax,0x2
  40bccc:	lea    r14d,[r14+rax*1]
  40bcd0:	add    r14d,0x2
  40bcd4:	cmp    BYTE PTR [rip+0x82e5],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40bcdb:	je     40bd3d <read_boolean_unary_expression@@Base+0xd7d>
  40bcdd:	lea    rbx,[rbp+0x8]
  40bce1:	cmp    rbx,QWORD PTR [rip+0x82f0]        # 413fd8 <__bss_start@@Base+0xe78>
  40bce8:	jbe    40bf62 <read_boolean_unary_expression@@Base+0xfa2>
  40bcee:	add    rbp,0x20007
  40bcf5:	and    rbp,0xfffffffffffe0000
  40bcfc:	mov    rdi,r12
  40bcff:	mov    rsi,rbp
  40bd02:	call   403200 <realloc@plt>
  40bd07:	mov    r12,rax
  40bd0a:	mov    QWORD PTR [rip+0x82bf],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40bd11:	mov    QWORD PTR [rip+0x82c0],rbp        # 413fd8 <__bss_start@@Base+0xe78>
  40bd18:	mov    r13,QWORD PTR [rip+0x82c1]        # 413fe0 <__bss_start@@Base+0xe80>
  40bd1f:	mov    al,BYTE PTR [rip+0x829b]        # 413fc0 <__bss_start@@Base+0xe60>
  40bd25:	mov    DWORD PTR [r12+r13*1],r14d
  40bd29:	lea    rbx,[r13+0x4]
  40bd2d:	mov    QWORD PTR [rip+0x82ac],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40bd34:	cmp    al,0x1
  40bd36:	jne    40bd50 <read_boolean_unary_expression@@Base+0xd90>
  40bd38:	jmp    40bf6e <read_boolean_unary_expression@@Base+0xfae>
  40bd3d:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  40bd42:	add    rbp,0x8
  40bd46:	mov    QWORD PTR [rip+0x8293],rbp        # 413fe0 <__bss_start@@Base+0xe80>
  40bd4d:	mov    rbx,rbp
  40bd50:	mov    eax,DWORD PTR [rsp+0x4]
  40bd54:	mov    DWORD PTR [r12+rbx*1],eax
  40bd58:	add    rbx,0x4
  40bd5c:	mov    QWORD PTR [rip+0x827d],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40bd63:	mov    r13,rbx
  40bd66:	lea    rbp,[r13+0x4]
  40bd6a:	mov    eax,DWORD PTR [rsp+0x14]
  40bd6e:	mov    DWORD PTR [r12+r13*1],eax
  40bd72:	mov    QWORD PTR [rip+0x8267],rbp        # 413fe0 <__bss_start@@Base+0xe80>
  40bd79:	test   r15b,r15b
  40bd7c:	je     40bde6 <read_boolean_unary_expression@@Base+0xe26>
  40bd7e:	cmp    BYTE PTR [rip+0x823b],0x1        # 413fc0 <__bss_start@@Base+0xe60>
  40bd85:	jne    40bdc5 <read_boolean_unary_expression@@Base+0xe05>
  40bd87:	lea    rax,[r13+0x8]
  40bd8b:	cmp    rax,QWORD PTR [rip+0x8246]        # 413fd8 <__bss_start@@Base+0xe78>
  40bd92:	jbe    40bdc5 <read_boolean_unary_expression@@Base+0xe05>
  40bd94:	add    r13,0x20007
  40bd9b:	and    r13,0xfffffffffffe0000
  40bda2:	mov    rdi,r12
  40bda5:	mov    rsi,r13
  40bda8:	call   403200 <realloc@plt>
  40bdad:	mov    r12,rax
  40bdb0:	mov    QWORD PTR [rip+0x8219],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40bdb7:	mov    QWORD PTR [rip+0x821a],r13        # 413fd8 <__bss_start@@Base+0xe78>
  40bdbe:	mov    rbp,QWORD PTR [rip+0x821b]        # 413fe0 <__bss_start@@Base+0xe80>
  40bdc5:	mov    r13,QWORD PTR [rsp+0x8]
  40bdca:	mov    eax,DWORD PTR [rsp]
  40bdcd:	mov    DWORD PTR [r12+rbp*1],eax
  40bdd1:	add    rbp,0x4
  40bdd5:	mov    QWORD PTR [rip+0x8204],rbp        # 413fe0 <__bss_start@@Base+0xe80>
  40bddc:	test   r13,r13
  40bddf:	jne    40bdf4 <read_boolean_unary_expression@@Base+0xe34>
  40bde1:	jmp    40bf53 <read_boolean_unary_expression@@Base+0xf93>
  40bde6:	mov    r13,QWORD PTR [rsp+0x8]
  40bdeb:	test   r13,r13
  40bdee:	je     40bf53 <read_boolean_unary_expression@@Base+0xf93>
  40bdf4:	mov    rdi,r13
  40bdf7:	call   4030d0 <strlen@plt>
  40bdfc:	mov    rbx,rax
  40bdff:	shr    rbx,0x2
  40be03:	add    ebx,0x1
  40be06:	cmp    BYTE PTR [rip+0x81b3],0x1        # 413fc0 <__bss_start@@Base+0xe60>
  40be0d:	jne    40be59 <read_boolean_unary_expression@@Base+0xe99>
  40be0f:	lea    rax,[rbp+0x4]
  40be13:	mov    r14b,0x1
  40be16:	cmp    rax,QWORD PTR [rip+0x81bb]        # 413fd8 <__bss_start@@Base+0xe78>
  40be1d:	jbe    40be5c <read_boolean_unary_expression@@Base+0xe9c>
  40be1f:	add    rbp,0x20003
  40be26:	and    rbp,0xfffffffffffe0000
  40be2d:	mov    rdi,r12
  40be30:	mov    rsi,rbp
  40be33:	call   403200 <realloc@plt>
  40be38:	mov    r12,rax
  40be3b:	mov    QWORD PTR [rip+0x818e],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40be42:	mov    QWORD PTR [rip+0x818f],rbp        # 413fd8 <__bss_start@@Base+0xe78>
  40be49:	mov    r14b,BYTE PTR [rip+0x8170]        # 413fc0 <__bss_start@@Base+0xe60>
  40be50:	mov    rbp,QWORD PTR [rip+0x8189]        # 413fe0 <__bss_start@@Base+0xe80>
  40be57:	jmp    40be5c <read_boolean_unary_expression@@Base+0xe9c>
  40be59:	xor    r14d,r14d
  40be5c:	mov    DWORD PTR [r12+rbp*1],ebx
  40be60:	add    rbp,0x4
  40be64:	mov    QWORD PTR [rip+0x8175],rbp        # 413fe0 <__bss_start@@Base+0xe80>
  40be6b:	mov    rdi,r13
  40be6e:	call   4030d0 <strlen@plt>
  40be73:	mov    rbx,rax
  40be76:	test   r14b,0x1
  40be7a:	je     40bec6 <read_boolean_unary_expression@@Base+0xf06>
  40be7c:	lea    r15,[rbx+rbp*1]
  40be80:	mov    r14b,0x1
  40be83:	cmp    r15,QWORD PTR [rip+0x814e]        # 413fd8 <__bss_start@@Base+0xe78>
  40be8a:	jbe    40bec9 <read_boolean_unary_expression@@Base+0xf09>
  40be8c:	add    r15,0x1ffff
  40be93:	and    r15,0xfffffffffffe0000
  40be9a:	mov    rdi,r12
  40be9d:	mov    rsi,r15
  40bea0:	call   403200 <realloc@plt>
  40bea5:	mov    r12,rax
  40bea8:	mov    QWORD PTR [rip+0x8121],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40beaf:	mov    QWORD PTR [rip+0x8122],r15        # 413fd8 <__bss_start@@Base+0xe78>
  40beb6:	mov    rbp,QWORD PTR [rip+0x8123]        # 413fe0 <__bss_start@@Base+0xe80>
  40bebd:	mov    r14b,BYTE PTR [rip+0x80fc]        # 413fc0 <__bss_start@@Base+0xe60>
  40bec4:	jmp    40bec9 <read_boolean_unary_expression@@Base+0xf09>
  40bec6:	xor    r14d,r14d
  40bec9:	lea    rdi,[r12+rbp*1]
  40becd:	mov    rsi,r13
  40bed0:	mov    rdx,rbx
  40bed3:	call   4031a0 <memcpy@plt>
  40bed8:	add    rbx,rbp
  40bedb:	mov    QWORD PTR [rip+0x80fe],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40bee2:	mov    rdi,r13
  40bee5:	call   4030d0 <strlen@plt>
  40beea:	and    eax,0x3
  40beed:	mov    ebp,0x4
  40bef2:	sub    rbp,rax
  40bef5:	test   r14b,0x1
  40bef9:	je     40bf39 <read_boolean_unary_expression@@Base+0xf79>
  40befb:	lea    r14,[rbx+rbp*1]
  40beff:	cmp    r14,QWORD PTR [rip+0x80d2]        # 413fd8 <__bss_start@@Base+0xe78>
  40bf06:	jbe    40bf39 <read_boolean_unary_expression@@Base+0xf79>
  40bf08:	add    r14,0x1ffff
  40bf0f:	and    r14,0xfffffffffffe0000
  40bf16:	mov    rdi,r12
  40bf19:	mov    rsi,r14
  40bf1c:	call   403200 <realloc@plt>
  40bf21:	mov    r12,rax
  40bf24:	mov    QWORD PTR [rip+0x80a5],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40bf2b:	mov    QWORD PTR [rip+0x80a6],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40bf32:	mov    rbx,QWORD PTR [rip+0x80a7]        # 413fe0 <__bss_start@@Base+0xe80>
  40bf39:	add    r12,rbx
  40bf3c:	mov    rdi,r12
  40bf3f:	xor    esi,esi
  40bf41:	mov    rdx,rbp
  40bf44:	call   403150 <memset@plt>
  40bf49:	add    rbx,rbp
  40bf4c:	mov    QWORD PTR [rip+0x808d],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40bf53:	add    rsp,0x18
  40bf57:	pop    rbx
  40bf58:	pop    r12
  40bf5a:	pop    r13
  40bf5c:	pop    r14
  40bf5e:	pop    r15
  40bf60:	pop    rbp
  40bf61:	ret    
  40bf62:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  40bf67:	mov    QWORD PTR [rip+0x8072],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40bf6e:	lea    rax,[r13+0x8]
  40bf72:	cmp    rax,QWORD PTR [rip+0x805f]        # 413fd8 <__bss_start@@Base+0xe78>
  40bf79:	jbe    40bfcf <read_boolean_unary_expression@@Base+0x100f>
  40bf7b:	add    r13,0x20007
  40bf82:	and    r13,0xfffffffffffe0000
  40bf89:	mov    rdi,r12
  40bf8c:	mov    rsi,r13
  40bf8f:	call   403200 <realloc@plt>
  40bf94:	mov    r12,rax
  40bf97:	mov    QWORD PTR [rip+0x8032],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40bf9e:	mov    QWORD PTR [rip+0x8033],r13        # 413fd8 <__bss_start@@Base+0xe78>
  40bfa5:	mov    rbx,QWORD PTR [rip+0x8034]        # 413fe0 <__bss_start@@Base+0xe80>
  40bfac:	mov    al,BYTE PTR [rip+0x800e]        # 413fc0 <__bss_start@@Base+0xe60>
  40bfb2:	mov    ecx,DWORD PTR [rsp+0x4]
  40bfb6:	mov    DWORD PTR [r12+rbx*1],ecx
  40bfba:	lea    r13,[rbx+0x4]
  40bfbe:	mov    QWORD PTR [rip+0x801b],r13        # 413fe0 <__bss_start@@Base+0xe80>
  40bfc5:	cmp    al,0x1
  40bfc7:	jne    40bd66 <read_boolean_unary_expression@@Base+0xda6>
  40bfcd:	jmp    40bfe2 <read_boolean_unary_expression@@Base+0x1022>
  40bfcf:	mov    eax,DWORD PTR [rsp+0x4]
  40bfd3:	mov    DWORD PTR [r12+rbx*1],eax
  40bfd7:	lea    r13,[rbx+0x4]
  40bfdb:	mov    QWORD PTR [rip+0x7ffe],r13        # 413fe0 <__bss_start@@Base+0xe80>
  40bfe2:	lea    rax,[rbx+0x8]
  40bfe6:	cmp    rax,QWORD PTR [rip+0x7feb]        # 413fd8 <__bss_start@@Base+0xe78>
  40bfed:	jbe    40bd66 <read_boolean_unary_expression@@Base+0xda6>
  40bff3:	add    rbx,0x20007
  40bffa:	and    rbx,0xfffffffffffe0000
  40c001:	mov    rdi,r12
  40c004:	mov    rsi,rbx
  40c007:	call   403200 <realloc@plt>
  40c00c:	mov    r12,rax
  40c00f:	mov    QWORD PTR [rip+0x7fba],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c016:	mov    QWORD PTR [rip+0x7fbb],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c01d:	mov    r13,QWORD PTR [rip+0x7fbc]        # 413fe0 <__bss_start@@Base+0xe80>
  40c024:	jmp    40bd66 <read_boolean_unary_expression@@Base+0xda6>
  40c029:	nop    DWORD PTR [rax+0x0]
  40c030:	push   rbp
  40c031:	push   r15
  40c033:	push   r14
  40c035:	push   r13
  40c037:	push   r12
  40c039:	push   rbx
  40c03a:	sub    rsp,0x18
  40c03e:	cmp    QWORD PTR [rip+0x7f82],0x0        # 413fc8 <__bss_start@@Base+0xe68>
  40c046:	je     40c0ea <read_boolean_unary_expression@@Base+0x112a>
  40c04c:	mov    r13d,edi
  40c04f:	mov    r14,QWORD PTR [rip+0x7f8a]        # 413fe0 <__bss_start@@Base+0xe80>
  40c056:	cmp    BYTE PTR [rip+0x7f63],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40c05d:	mov    QWORD PTR [rsp+0x8],rsi
  40c062:	je     40c0f9 <read_boolean_unary_expression@@Base+0x1139>
  40c068:	lea    rbx,[r14+0x4]
  40c06c:	cmp    rbx,QWORD PTR [rip+0x7f65]        # 413fd8 <__bss_start@@Base+0xe78>
  40c073:	jbe    40c181 <read_boolean_unary_expression@@Base+0x11c1>
  40c079:	add    r14,0x20003
  40c080:	and    r14,0xfffffffffffe0000
  40c087:	mov    rdi,QWORD PTR [rip+0x7f42]        # 413fd0 <__bss_start@@Base+0xe70>
  40c08e:	mov    rsi,r14
  40c091:	call   403200 <realloc@plt>
  40c096:	mov    rsi,QWORD PTR [rsp+0x8]
  40c09b:	mov    r15,rax
  40c09e:	mov    QWORD PTR [rip+0x7f2b],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c0a5:	mov    QWORD PTR [rip+0x7f2c],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40c0ac:	mov    r14,QWORD PTR [rip+0x7f2d]        # 413fe0 <__bss_start@@Base+0xe80>
  40c0b3:	mov    al,BYTE PTR [rip+0x7f07]        # 413fc0 <__bss_start@@Base+0xe60>
  40c0b9:	lea    rbx,[r14+0x4]
  40c0bd:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40c0c5:	mov    QWORD PTR [rip+0x7f14],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c0cc:	lea    ebp,[r13+r13*1+0x0]
  40c0d1:	xor    ecx,ecx
  40c0d3:	mov    QWORD PTR [rsp],rcx
  40c0d7:	mov    r12d,0x0
  40c0dd:	cmp    al,0x1
  40c0df:	je     40c19c <read_boolean_unary_expression@@Base+0x11dc>
  40c0e5:	jmp    40c2cf <read_boolean_unary_expression@@Base+0x130f>
  40c0ea:	add    rsp,0x18
  40c0ee:	pop    rbx
  40c0ef:	pop    r12
  40c0f1:	pop    r13
  40c0f3:	pop    r14
  40c0f5:	pop    r15
  40c0f7:	pop    rbp
  40c0f8:	ret    
  40c0f9:	mov    r15,QWORD PTR [rip+0x7ed0]        # 413fd0 <__bss_start@@Base+0xe70>
  40c100:	mov    ecx,DWORD PTR [r15+r14*1]
  40c104:	lea    rbx,[r14+0x4]
  40c108:	mov    QWORD PTR [rip+0x7ed1],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c10f:	cmp    ecx,0xffffffff
  40c112:	je     40c1f5 <read_boolean_unary_expression@@Base+0x1235>
  40c118:	cmp    ecx,0x1a10000
  40c11e:	jne    40c203 <read_boolean_unary_expression@@Base+0x1243>
  40c124:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  40c129:	lea    rbp,[r14+0x8]
  40c12d:	mov    QWORD PTR [rip+0x7eac],rbp        # 413fe0 <__bss_start@@Base+0xe80>
  40c134:	cmp    ecx,0xffffffff
  40c137:	je     40c21d <read_boolean_unary_expression@@Base+0x125d>
  40c13d:	mov    eax,ecx
  40c13f:	shr    eax,1
  40c141:	cmp    eax,r13d
  40c144:	jne    40c21d <read_boolean_unary_expression@@Base+0x125d>
  40c14a:	mov    r12d,r13d
  40c14d:	lea    rdi,[r12*8+0x0]
  40c155:	call   4031d0 <malloc@plt>
  40c15a:	test   r13d,r13d
  40c15d:	mov    rcx,rax
  40c160:	mov    QWORD PTR [rsp],rax
  40c164:	je     40c24a <read_boolean_unary_expression@@Base+0x128a>
  40c16a:	mov    eax,r12d
  40c16d:	and    eax,0x1
  40c170:	cmp    r13d,0x1
  40c174:	jne    40c254 <read_boolean_unary_expression@@Base+0x1294>
  40c17a:	xor    ecx,ecx
  40c17c:	jmp    40c293 <read_boolean_unary_expression@@Base+0x12d3>
  40c181:	mov    r15,QWORD PTR [rip+0x7e48]        # 413fd0 <__bss_start@@Base+0xe70>
  40c188:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40c190:	mov    QWORD PTR [rip+0x7e49],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c197:	lea    ebp,[r13+r13*1+0x0]
  40c19c:	lea    rax,[r14+0x8]
  40c1a0:	cmp    rax,QWORD PTR [rip+0x7e31]        # 413fd8 <__bss_start@@Base+0xe78>
  40c1a7:	jbe    40c1e7 <read_boolean_unary_expression@@Base+0x1227>
  40c1a9:	add    r14,0x20007
  40c1b0:	and    r14,0xfffffffffffe0000
  40c1b7:	mov    rdi,r15
  40c1ba:	mov    rsi,r14
  40c1bd:	call   403200 <realloc@plt>
  40c1c2:	mov    rsi,QWORD PTR [rsp+0x8]
  40c1c7:	mov    r15,rax
  40c1ca:	mov    QWORD PTR [rip+0x7dff],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c1d1:	mov    QWORD PTR [rip+0x7e00],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40c1d8:	xor    eax,eax
  40c1da:	mov    QWORD PTR [rsp],rax
  40c1de:	mov    rbx,QWORD PTR [rip+0x7dfb]        # 413fe0 <__bss_start@@Base+0xe80>
  40c1e5:	jmp    40c1ed <read_boolean_unary_expression@@Base+0x122d>
  40c1e7:	xor    eax,eax
  40c1e9:	mov    QWORD PTR [rsp],rax
  40c1ed:	xor    r12d,r12d
  40c1f0:	jmp    40c2cf <read_boolean_unary_expression@@Base+0x130f>
  40c1f5:	xor    r12d,r12d
  40c1f8:	xor    eax,eax
  40c1fa:	mov    QWORD PTR [rsp],rax
  40c1fe:	jmp    40c2b4 <read_boolean_unary_expression@@Base+0x12f4>
  40c203:	mov    rax,QWORD PTR [rip+0x6dee]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c20a:	mov    rdi,QWORD PTR [rax]
  40c20d:	mov    rdx,QWORD PTR [rip+0x7da4]        # 413fb8 <__bss_start@@Base+0xe58>
  40c214:	lea    rsi,[rip+0x2ad4]        # 40ecef <_IO_stdin_used@@Base+0xcef>
  40c21b:	jmp    40c235 <read_boolean_unary_expression@@Base+0x1275>
  40c21d:	mov    rax,QWORD PTR [rip+0x6dd4]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c224:	mov    rdi,QWORD PTR [rax]
  40c227:	mov    rdx,QWORD PTR [rip+0x7d8a]        # 413fb8 <__bss_start@@Base+0xe58>
  40c22e:	lea    rsi,[rip+0x2b04]        # 40ed39 <_IO_stdin_used@@Base+0xd39>
  40c235:	xor    eax,eax
  40c237:	add    rsp,0x18
  40c23b:	pop    rbx
  40c23c:	pop    r12
  40c23e:	pop    r13
  40c240:	pop    r14
  40c242:	pop    r15
  40c244:	pop    rbp
  40c245:	jmp    403170 <fprintf@plt>
  40c24a:	mov    r12,rax
  40c24d:	mov    rsi,QWORD PTR [rsp+0x8]
  40c252:	jmp    40c2b4 <read_boolean_unary_expression@@Base+0x12f4>
  40c254:	mov    rbp,0xfffffffffffffff8
  40c25b:	sub    rbp,r14
  40c25e:	lea    rdx,[r14+r15*1]
  40c262:	add    rdx,0x14
  40c266:	sub    r12,rax
  40c269:	xor    ecx,ecx
  40c26b:	mov    rdi,QWORD PTR [rsp]
  40c26f:	nop
  40c270:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  40c275:	mov    QWORD PTR [rdi+rcx*8],rsi
  40c279:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40c27e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  40c283:	add    rcx,0x2
  40c287:	add    rbp,0xfffffffffffffff0
  40c28b:	cmp    r12,rcx
  40c28e:	jne    40c270 <read_boolean_unary_expression@@Base+0x12b0>
  40c290:	neg    rbp
  40c293:	mov    rsi,QWORD PTR [rsp+0x8]
  40c298:	test   rax,rax
  40c29b:	mov    r12,QWORD PTR [rsp]
  40c29f:	je     40c2ad <read_boolean_unary_expression@@Base+0x12ed>
  40c2a1:	mov    rax,QWORD PTR [r15+rbp*1]
  40c2a5:	mov    QWORD PTR [r12+rcx*8],rax
  40c2a9:	add    rbp,0x8
  40c2ad:	mov    QWORD PTR [rip+0x7d2c],rbp        # 413fe0 <__bss_start@@Base+0xe80>
  40c2b4:	mov    QWORD PTR [rip+0x7d25],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c2bb:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40c2c3:	mov    QWORD PTR [rip+0x7d16],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c2ca:	lea    ebp,[r13+r13*1+0x0]
  40c2cf:	mov    DWORD PTR [r15+rbx*1],ebp
  40c2d3:	add    rbx,0x4
  40c2d7:	mov    QWORD PTR [rip+0x7d02],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c2de:	test   r13d,r13d
  40c2e1:	je     40c428 <read_boolean_unary_expression@@Base+0x1468>
  40c2e7:	mov    edi,r13d
  40c2ea:	xor    ebp,ebp
  40c2ec:	mov    QWORD PTR [rsp+0x10],rdi
  40c2f1:	test   r12,r12
  40c2f4:	jne    40c336 <read_boolean_unary_expression@@Base+0x1376>
  40c2f6:	jmp    40c340 <read_boolean_unary_expression@@Base+0x1380>
  40c2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c300:	mov    DWORD PTR [r15+rbx*1],r14d
  40c304:	add    rbx,0x4
  40c308:	mov    QWORD PTR [rip+0x7cd1],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c30f:	mov    rax,rbx
  40c312:	mov    DWORD PTR [r15+rax*1],r13d
  40c316:	add    rax,0x4
  40c31a:	mov    QWORD PTR [rip+0x7cbf],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40c321:	add    rbp,0x1
  40c325:	mov    rbx,rax
  40c328:	cmp    rdi,rbp
  40c32b:	je     40c428 <read_boolean_unary_expression@@Base+0x1468>
  40c331:	test   r12,r12
  40c334:	je     40c340 <read_boolean_unary_expression@@Base+0x1380>
  40c336:	mov    r14,QWORD PTR [r12+rbp*8]
  40c33a:	jmp    40c343 <read_boolean_unary_expression@@Base+0x1383>
  40c33c:	nop    DWORD PTR [rax+0x0]
  40c340:	xor    r14d,r14d
  40c343:	add    r14,QWORD PTR [rsi+rbp*8]
  40c347:	mov    QWORD PTR [rsi+rbp*8],r14
  40c34b:	mov    r13,r14
  40c34e:	shr    r13,0x20
  40c352:	cmp    BYTE PTR [rip+0x7c67],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40c359:	je     40c300 <read_boolean_unary_expression@@Base+0x1340>
  40c35b:	lea    rax,[rbx+0x4]
  40c35f:	mov    rcx,QWORD PTR [rip+0x7c72]        # 413fd8 <__bss_start@@Base+0xe78>
  40c366:	cmp    rax,rcx
  40c369:	jbe    40c3d0 <read_boolean_unary_expression@@Base+0x1410>
  40c36b:	add    rbx,0x20003
  40c372:	and    rbx,0xfffffffffffe0000
  40c379:	mov    rdi,r15
  40c37c:	mov    rsi,rbx
  40c37f:	call   403200 <realloc@plt>
  40c384:	mov    rdi,QWORD PTR [rsp+0x10]
  40c389:	mov    rsi,QWORD PTR [rsp+0x8]
  40c38e:	mov    r15,rax
  40c391:	mov    QWORD PTR [rip+0x7c38],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c398:	mov    QWORD PTR [rip+0x7c39],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c39f:	mov    dl,BYTE PTR [rip+0x7c1b]        # 413fc0 <__bss_start@@Base+0xe60>
  40c3a5:	mov    rcx,rbx
  40c3a8:	mov    rbx,QWORD PTR [rip+0x7c31]        # 413fe0 <__bss_start@@Base+0xe80>
  40c3af:	mov    DWORD PTR [rax+rbx*1],r14d
  40c3b3:	lea    rax,[rbx+0x4]
  40c3b7:	mov    QWORD PTR [rip+0x7c22],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40c3be:	cmp    dl,0x1
  40c3c1:	jne    40c312 <read_boolean_unary_expression@@Base+0x1352>
  40c3c7:	jmp    40c3db <read_boolean_unary_expression@@Base+0x141b>
  40c3c9:	nop    DWORD PTR [rax+0x0]
  40c3d0:	mov    DWORD PTR [r15+rbx*1],r14d
  40c3d4:	mov    QWORD PTR [rip+0x7c05],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40c3db:	lea    rdx,[rbx+0x8]
  40c3df:	cmp    rdx,rcx
  40c3e2:	jbe    40c312 <read_boolean_unary_expression@@Base+0x1352>
  40c3e8:	add    rbx,0x20007
  40c3ef:	and    rbx,0xfffffffffffe0000
  40c3f6:	mov    rdi,r15
  40c3f9:	mov    rsi,rbx
  40c3fc:	call   403200 <realloc@plt>
  40c401:	mov    rdi,QWORD PTR [rsp+0x10]
  40c406:	mov    rsi,QWORD PTR [rsp+0x8]
  40c40b:	mov    r15,rax
  40c40e:	mov    QWORD PTR [rip+0x7bbb],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c415:	mov    QWORD PTR [rip+0x7bbc],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c41c:	mov    rax,QWORD PTR [rip+0x7bbd]        # 413fe0 <__bss_start@@Base+0xe80>
  40c423:	jmp    40c312 <read_boolean_unary_expression@@Base+0x1352>
  40c428:	mov    rdi,QWORD PTR [rsp]
  40c42c:	add    rsp,0x18
  40c430:	pop    rbx
  40c431:	pop    r12
  40c433:	pop    r13
  40c435:	pop    r14
  40c437:	pop    r15
  40c439:	pop    rbp
  40c43a:	jmp    403040 <free@plt>
  40c43f:	nop
  40c440:	push   rbp
  40c441:	push   r15
  40c443:	push   r14
  40c445:	push   rbx
  40c446:	push   rax
  40c447:	cmp    QWORD PTR [rip+0x7b79],0x0        # 413fc8 <__bss_start@@Base+0xe68>
  40c44f:	je     40c7c6 <read_boolean_unary_expression@@Base+0x1806>
  40c455:	mov    rbx,QWORD PTR [rip+0x7b84]        # 413fe0 <__bss_start@@Base+0xe80>
  40c45c:	cmp    BYTE PTR [rip+0x7b5d],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40c463:	je     40c4cf <read_boolean_unary_expression@@Base+0x150f>
  40c465:	lea    r14,[rbx+0x4]
  40c469:	cmp    r14,QWORD PTR [rip+0x7b68]        # 413fd8 <__bss_start@@Base+0xe78>
  40c470:	jbe    40c51b <read_boolean_unary_expression@@Base+0x155b>
  40c476:	add    rbx,0x20003
  40c47d:	and    rbx,0xfffffffffffe0000
  40c484:	mov    rdi,QWORD PTR [rip+0x7b45]        # 413fd0 <__bss_start@@Base+0xe70>
  40c48b:	mov    rsi,rbx
  40c48e:	call   403200 <realloc@plt>
  40c493:	mov    QWORD PTR [rip+0x7b36],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c49a:	mov    QWORD PTR [rip+0x7b37],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c4a1:	mov    rbx,QWORD PTR [rip+0x7b38]        # 413fe0 <__bss_start@@Base+0xe80>
  40c4a8:	mov    cl,BYTE PTR [rip+0x7b12]        # 413fc0 <__bss_start@@Base+0xe60>
  40c4ae:	lea    r14,[rbx+0x4]
  40c4b2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40c4b9:	mov    QWORD PTR [rip+0x7b20],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c4c0:	mov    ebp,0x1
  40c4c5:	cmp    cl,0x1
  40c4c8:	je     40c530 <read_boolean_unary_expression@@Base+0x1570>
  40c4ca:	jmp    40c64b <read_boolean_unary_expression@@Base+0x168b>
  40c4cf:	mov    rax,QWORD PTR [rip+0x7afa]        # 413fd0 <__bss_start@@Base+0xe70>
  40c4d6:	mov    ecx,DWORD PTR [rax+rbx*1]
  40c4d9:	lea    r14,[rbx+0x4]
  40c4dd:	mov    QWORD PTR [rip+0x7afc],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c4e4:	cmp    ecx,0xa1000000
  40c4ea:	je     40c60c <read_boolean_unary_expression@@Base+0x164c>
  40c4f0:	mov    ebp,0x1
  40c4f5:	cmp    ecx,0xffffffff
  40c4f8:	je     40c63d <read_boolean_unary_expression@@Base+0x167d>
  40c4fe:	mov    rax,QWORD PTR [rip+0x6af3]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c505:	mov    rdi,QWORD PTR [rax]
  40c508:	mov    rdx,QWORD PTR [rip+0x7aa9]        # 413fb8 <__bss_start@@Base+0xe58>
  40c50f:	lea    rsi,[rip+0x2877]        # 40ed8d <_IO_stdin_used@@Base+0xd8d>
  40c516:	jmp    40ca25 <read_boolean_unary_expression@@Base+0x1a65>
  40c51b:	mov    rax,QWORD PTR [rip+0x7aae]        # 413fd0 <__bss_start@@Base+0xe70>
  40c522:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40c529:	mov    QWORD PTR [rip+0x7ab0],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c530:	lea    rcx,[rbx+0x8]
  40c534:	cmp    rcx,QWORD PTR [rip+0x7a9d]        # 413fd8 <__bss_start@@Base+0xe78>
  40c53b:	jbe    40c593 <read_boolean_unary_expression@@Base+0x15d3>
  40c53d:	add    rbx,0x20007
  40c544:	and    rbx,0xfffffffffffe0000
  40c54b:	mov    rdi,rax
  40c54e:	mov    rsi,rbx
  40c551:	call   403200 <realloc@plt>
  40c556:	mov    QWORD PTR [rip+0x7a73],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c55d:	mov    QWORD PTR [rip+0x7a74],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c564:	mov    r14,QWORD PTR [rip+0x7a75]        # 413fe0 <__bss_start@@Base+0xe80>
  40c56b:	mov    cl,BYTE PTR [rip+0x7a4f]        # 413fc0 <__bss_start@@Base+0xe60>
  40c571:	mov    DWORD PTR [rax+r14*1],0x9
  40c579:	lea    rbx,[r14+0x4]
  40c57d:	mov    QWORD PTR [rip+0x7a5c],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c584:	mov    ebp,0x1
  40c589:	cmp    cl,0x1
  40c58c:	je     40c5a6 <read_boolean_unary_expression@@Base+0x15e6>
  40c58e:	jmp    40c661 <read_boolean_unary_expression@@Base+0x16a1>
  40c593:	mov    DWORD PTR [rax+r14*1],0x9
  40c59b:	lea    rbx,[r14+0x4]
  40c59f:	mov    QWORD PTR [rip+0x7a3a],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c5a6:	lea    rcx,[r14+0x8]
  40c5aa:	cmp    rcx,QWORD PTR [rip+0x7a27]        # 413fd8 <__bss_start@@Base+0xe78>
  40c5b1:	jbe    40c84d <read_boolean_unary_expression@@Base+0x188d>
  40c5b7:	add    r14,0x20007
  40c5be:	and    r14,0xfffffffffffe0000
  40c5c5:	mov    rdi,rax
  40c5c8:	mov    rsi,r14
  40c5cb:	call   403200 <realloc@plt>
  40c5d0:	mov    QWORD PTR [rip+0x79f9],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c5d7:	mov    QWORD PTR [rip+0x79fa],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40c5de:	mov    rbx,QWORD PTR [rip+0x79fb]        # 413fe0 <__bss_start@@Base+0xe80>
  40c5e5:	mov    cl,BYTE PTR [rip+0x79d5]        # 413fc0 <__bss_start@@Base+0xe60>
  40c5eb:	mov    DWORD PTR [rax+rbx*1],0x0
  40c5f2:	lea    r14,[rbx+0x4]
  40c5f6:	mov    QWORD PTR [rip+0x79e3],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c5fd:	mov    ebp,0x1
  40c602:	cmp    cl,0x1
  40c605:	jne    40c676 <read_boolean_unary_expression@@Base+0x16b6>
  40c607:	jmp    40c85f <read_boolean_unary_expression@@Base+0x189f>
  40c60c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  40c610:	lea    rdx,[rbx+0x8]
  40c614:	mov    QWORD PTR [rip+0x79c5],rdx        # 413fe0 <__bss_start@@Base+0xe80>
  40c61b:	cmp    ecx,0x9
  40c61e:	jne    40ca0d <read_boolean_unary_expression@@Base+0x1a4d>
  40c624:	lea    rcx,[rbx+0x14]
  40c628:	movzx  ebp,BYTE PTR [rip+0x79b9]        # 413fe8 <__bss_start@@Base+0xe88>
  40c62f:	xor    ebp,0x1
  40c632:	add    ebp,DWORD PTR [rbx+rax*1+0x10]
  40c636:	mov    QWORD PTR [rip+0x79a3],rcx        # 413fe0 <__bss_start@@Base+0xe80>
  40c63d:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40c644:	mov    QWORD PTR [rip+0x7995],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c64b:	mov    DWORD PTR [rax+r14*1],0x9
  40c653:	add    r14,0x4
  40c657:	mov    QWORD PTR [rip+0x7982],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c65e:	mov    rbx,r14
  40c661:	mov    DWORD PTR [rax+rbx*1],0x0
  40c668:	add    rbx,0x4
  40c66c:	mov    QWORD PTR [rip+0x796d],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c673:	mov    r14,rbx
  40c676:	mov    DWORD PTR [rax+r14*1],0x0
  40c67e:	add    r14,0x4
  40c682:	mov    QWORD PTR [rip+0x7957],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c689:	mov    rbx,r14
  40c68c:	mov    DWORD PTR [rax+rbx*1],ebp
  40c68f:	lea    r14,[rbx+0x4]
  40c693:	mov    QWORD PTR [rip+0x7946],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c69a:	cmp    BYTE PTR [rip+0x791f],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40c6a1:	je     40c707 <read_boolean_unary_expression@@Base+0x1747>
  40c6a3:	lea    r15,[rbx+0x8]
  40c6a7:	cmp    r15,QWORD PTR [rip+0x792a]        # 413fd8 <__bss_start@@Base+0xe78>
  40c6ae:	jbe    40c7d1 <read_boolean_unary_expression@@Base+0x1811>
  40c6b4:	add    rbx,0x20007
  40c6bb:	and    rbx,0xfffffffffffe0000
  40c6c2:	mov    rdi,QWORD PTR [rip+0x7907]        # 413fd0 <__bss_start@@Base+0xe70>
  40c6c9:	mov    rsi,rbx
  40c6cc:	call   403200 <realloc@plt>
  40c6d1:	mov    QWORD PTR [rip+0x78f8],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c6d8:	mov    QWORD PTR [rip+0x78f9],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c6df:	mov    r14,QWORD PTR [rip+0x78fa]        # 413fe0 <__bss_start@@Base+0xe80>
  40c6e6:	lea    r15,[r14+0x4]
  40c6ea:	cmp    BYTE PTR [rip+0x78cf],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40c6f1:	mov    DWORD PTR [rax+r14*1],0x0
  40c6f9:	mov    QWORD PTR [rip+0x78e0],r15        # 413fe0 <__bss_start@@Base+0xe80>
  40c700:	je     40c724 <read_boolean_unary_expression@@Base+0x1764>
  40c702:	jmp    40c7e7 <read_boolean_unary_expression@@Base+0x1827>
  40c707:	mov    rax,QWORD PTR [rip+0x78c2]        # 413fd0 <__bss_start@@Base+0xe70>
  40c70e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40c716:	add    rbx,0x8
  40c71a:	mov    QWORD PTR [rip+0x78bf],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c721:	mov    r15,rbx
  40c724:	mov    DWORD PTR [rax+r15*1],0x0
  40c72c:	add    r15,0x4
  40c730:	mov    QWORD PTR [rip+0x78a9],r15        # 413fe0 <__bss_start@@Base+0xe80>
  40c737:	mov    r14,r15
  40c73a:	mov    DWORD PTR [rax+r14*1],0x0
  40c742:	add    r14,0x4
  40c746:	mov    QWORD PTR [rip+0x7893],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c74d:	mov    rbx,r14
  40c750:	mov    DWORD PTR [rax+rbx*1],0x0
  40c757:	add    rbx,0x4
  40c75b:	mov    QWORD PTR [rip+0x787e],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c762:	mov    r14,rbx
  40c765:	mov    DWORD PTR [rax+r14*1],0x0
  40c76d:	add    r14,0x4
  40c771:	mov    QWORD PTR [rip+0x7868],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c778:	mov    rbx,r14
  40c77b:	mov    DWORD PTR [rax+rbx*1],0x0
  40c782:	add    rbx,0x4
  40c786:	mov    QWORD PTR [rip+0x7853],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c78d:	mov    r14,rbx
  40c790:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40c798:	add    r14,0x4
  40c79c:	mov    QWORD PTR [rip+0x783d],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c7a3:	mov    rcx,r14
  40c7a6:	mov    rax,QWORD PTR [rip+0x7823]        # 413fd0 <__bss_start@@Base+0xe70>
  40c7ad:	mov    DWORD PTR [rax+rcx*1],0x0
  40c7b4:	add    rcx,0x4
  40c7b8:	mov    QWORD PTR [rip+0x7821],rcx        # 413fe0 <__bss_start@@Base+0xe80>
  40c7bf:	mov    BYTE PTR [rip+0x7822],0x1        # 413fe8 <__bss_start@@Base+0xe88>
  40c7c6:	add    rsp,0x8
  40c7ca:	pop    rbx
  40c7cb:	pop    r14
  40c7cd:	pop    r15
  40c7cf:	pop    rbp
  40c7d0:	ret    
  40c7d1:	mov    rax,QWORD PTR [rip+0x77f8]        # 413fd0 <__bss_start@@Base+0xe70>
  40c7d8:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40c7e0:	mov    QWORD PTR [rip+0x77f9],r15        # 413fe0 <__bss_start@@Base+0xe80>
  40c7e7:	lea    rcx,[r14+0x8]
  40c7eb:	cmp    rcx,QWORD PTR [rip+0x77e6]        # 413fd8 <__bss_start@@Base+0xe78>
  40c7f2:	jbe    40c8ca <read_boolean_unary_expression@@Base+0x190a>
  40c7f8:	add    r14,0x20007
  40c7ff:	and    r14,0xfffffffffffe0000
  40c806:	mov    rdi,rax
  40c809:	mov    rsi,r14
  40c80c:	call   403200 <realloc@plt>
  40c811:	mov    QWORD PTR [rip+0x77b8],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c818:	mov    QWORD PTR [rip+0x77b9],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40c81f:	mov    r15,QWORD PTR [rip+0x77ba]        # 413fe0 <__bss_start@@Base+0xe80>
  40c826:	mov    cl,BYTE PTR [rip+0x7794]        # 413fc0 <__bss_start@@Base+0xe60>
  40c82c:	mov    DWORD PTR [rax+r15*1],0x0
  40c834:	lea    r14,[r15+0x4]
  40c838:	mov    QWORD PTR [rip+0x77a1],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c83f:	cmp    cl,0x1
  40c842:	jne    40c73a <read_boolean_unary_expression@@Base+0x177a>
  40c848:	jmp    40c8dd <read_boolean_unary_expression@@Base+0x191d>
  40c84d:	mov    DWORD PTR [rax+rbx*1],0x0
  40c854:	lea    r14,[rbx+0x4]
  40c858:	mov    QWORD PTR [rip+0x7781],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c85f:	lea    rcx,[rbx+0x8]
  40c863:	cmp    rcx,QWORD PTR [rip+0x776e]        # 413fd8 <__bss_start@@Base+0xe78>
  40c86a:	jbe    40c940 <read_boolean_unary_expression@@Base+0x1980>
  40c870:	add    rbx,0x20007
  40c877:	and    rbx,0xfffffffffffe0000
  40c87e:	mov    rdi,rax
  40c881:	mov    rsi,rbx
  40c884:	call   403200 <realloc@plt>
  40c889:	mov    QWORD PTR [rip+0x7740],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c890:	mov    QWORD PTR [rip+0x7741],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40c897:	mov    r14,QWORD PTR [rip+0x7742]        # 413fe0 <__bss_start@@Base+0xe80>
  40c89e:	mov    cl,BYTE PTR [rip+0x771c]        # 413fc0 <__bss_start@@Base+0xe60>
  40c8a4:	mov    DWORD PTR [rax+r14*1],0x0
  40c8ac:	lea    rbx,[r14+0x4]
  40c8b0:	mov    QWORD PTR [rip+0x7729],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c8b7:	mov    ebp,0x1
  40c8bc:	cmp    cl,0x1
  40c8bf:	jne    40c68c <read_boolean_unary_expression@@Base+0x16cc>
  40c8c5:	jmp    40c953 <read_boolean_unary_expression@@Base+0x1993>
  40c8ca:	mov    DWORD PTR [rax+r15*1],0x0
  40c8d2:	lea    r14,[r15+0x4]
  40c8d6:	mov    QWORD PTR [rip+0x7703],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40c8dd:	lea    rcx,[r15+0x8]
  40c8e1:	cmp    rcx,QWORD PTR [rip+0x76f0]        # 413fd8 <__bss_start@@Base+0xe78>
  40c8e8:	jbe    40c99c <read_boolean_unary_expression@@Base+0x19dc>
  40c8ee:	add    r15,0x20007
  40c8f5:	and    r15,0xfffffffffffe0000
  40c8fc:	mov    rdi,rax
  40c8ff:	mov    rsi,r15
  40c902:	call   403200 <realloc@plt>
  40c907:	mov    QWORD PTR [rip+0x76c2],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c90e:	mov    QWORD PTR [rip+0x76c3],r15        # 413fd8 <__bss_start@@Base+0xe78>
  40c915:	mov    r14,QWORD PTR [rip+0x76c4]        # 413fe0 <__bss_start@@Base+0xe80>
  40c91c:	mov    cl,BYTE PTR [rip+0x769e]        # 413fc0 <__bss_start@@Base+0xe60>
  40c922:	mov    DWORD PTR [rax+r14*1],0x0
  40c92a:	lea    rbx,[r14+0x4]
  40c92e:	mov    QWORD PTR [rip+0x76ab],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c935:	cmp    cl,0x1
  40c938:	jne    40c750 <read_boolean_unary_expression@@Base+0x1790>
  40c93e:	jmp    40c9af <read_boolean_unary_expression@@Base+0x19ef>
  40c940:	mov    DWORD PTR [rax+r14*1],0x0
  40c948:	lea    rbx,[r14+0x4]
  40c94c:	mov    QWORD PTR [rip+0x768d],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c953:	lea    rcx,[r14+0x8]
  40c957:	mov    ebp,0x1
  40c95c:	cmp    rcx,QWORD PTR [rip+0x7675]        # 413fd8 <__bss_start@@Base+0xe78>
  40c963:	jbe    40c68c <read_boolean_unary_expression@@Base+0x16cc>
  40c969:	add    r14,0x20007
  40c970:	and    r14,0xfffffffffffe0000
  40c977:	mov    rdi,rax
  40c97a:	mov    rsi,r14
  40c97d:	call   403200 <realloc@plt>
  40c982:	mov    QWORD PTR [rip+0x7647],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c989:	mov    QWORD PTR [rip+0x7648],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40c990:	mov    rbx,QWORD PTR [rip+0x7649]        # 413fe0 <__bss_start@@Base+0xe80>
  40c997:	jmp    40c68c <read_boolean_unary_expression@@Base+0x16cc>
  40c99c:	mov    DWORD PTR [rax+r14*1],0x0
  40c9a4:	lea    rbx,[r14+0x4]
  40c9a8:	mov    QWORD PTR [rip+0x7631],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40c9af:	lea    rcx,[r14+0x8]
  40c9b3:	cmp    rcx,QWORD PTR [rip+0x761e]        # 413fd8 <__bss_start@@Base+0xe78>
  40c9ba:	jbe    40ca36 <read_boolean_unary_expression@@Base+0x1a76>
  40c9bc:	add    r14,0x20007
  40c9c3:	and    r14,0xfffffffffffe0000
  40c9ca:	mov    rdi,rax
  40c9cd:	mov    rsi,r14
  40c9d0:	call   403200 <realloc@plt>
  40c9d5:	mov    QWORD PTR [rip+0x75f4],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40c9dc:	mov    QWORD PTR [rip+0x75f5],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40c9e3:	mov    rbx,QWORD PTR [rip+0x75f6]        # 413fe0 <__bss_start@@Base+0xe80>
  40c9ea:	mov    cl,BYTE PTR [rip+0x75d0]        # 413fc0 <__bss_start@@Base+0xe60>
  40c9f0:	mov    DWORD PTR [rax+rbx*1],0x0
  40c9f7:	lea    r14,[rbx+0x4]
  40c9fb:	mov    QWORD PTR [rip+0x75de],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40ca02:	cmp    cl,0x1
  40ca05:	jne    40c765 <read_boolean_unary_expression@@Base+0x17a5>
  40ca0b:	jmp    40ca48 <read_boolean_unary_expression@@Base+0x1a88>
  40ca0d:	mov    rax,QWORD PTR [rip+0x65e4]        # 412ff8 <stderr@GLIBC_2.2.5>
  40ca14:	mov    rdi,QWORD PTR [rax]
  40ca17:	mov    rdx,QWORD PTR [rip+0x759a]        # 413fb8 <__bss_start@@Base+0xe58>
  40ca1e:	lea    rsi,[rip+0x23b5]        # 40edda <_IO_stdin_used@@Base+0xdda>
  40ca25:	xor    eax,eax
  40ca27:	add    rsp,0x8
  40ca2b:	pop    rbx
  40ca2c:	pop    r14
  40ca2e:	pop    r15
  40ca30:	pop    rbp
  40ca31:	jmp    403170 <fprintf@plt>
  40ca36:	mov    DWORD PTR [rax+rbx*1],0x0
  40ca3d:	lea    r14,[rbx+0x4]
  40ca41:	mov    QWORD PTR [rip+0x7598],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40ca48:	lea    rcx,[rbx+0x8]
  40ca4c:	cmp    rcx,QWORD PTR [rip+0x7585]        # 413fd8 <__bss_start@@Base+0xe78>
  40ca53:	jbe    40caa7 <read_boolean_unary_expression@@Base+0x1ae7>
  40ca55:	add    rbx,0x20007
  40ca5c:	and    rbx,0xfffffffffffe0000
  40ca63:	mov    rdi,rax
  40ca66:	mov    rsi,rbx
  40ca69:	call   403200 <realloc@plt>
  40ca6e:	mov    QWORD PTR [rip+0x755b],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40ca75:	mov    QWORD PTR [rip+0x755c],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40ca7c:	mov    r14,QWORD PTR [rip+0x755d]        # 413fe0 <__bss_start@@Base+0xe80>
  40ca83:	mov    cl,BYTE PTR [rip+0x7537]        # 413fc0 <__bss_start@@Base+0xe60>
  40ca89:	mov    DWORD PTR [rax+r14*1],0x0
  40ca91:	lea    rbx,[r14+0x4]
  40ca95:	mov    QWORD PTR [rip+0x7544],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40ca9c:	cmp    cl,0x1
  40ca9f:	jne    40c77b <read_boolean_unary_expression@@Base+0x17bb>
  40caa5:	jmp    40caba <read_boolean_unary_expression@@Base+0x1afa>
  40caa7:	mov    DWORD PTR [rax+r14*1],0x0
  40caaf:	lea    rbx,[r14+0x4]
  40cab3:	mov    QWORD PTR [rip+0x7526],rbx        # 413fe0 <__bss_start@@Base+0xe80>
  40caba:	lea    rcx,[r14+0x8]
  40cabe:	cmp    rcx,QWORD PTR [rip+0x7513]        # 413fd8 <__bss_start@@Base+0xe78>
  40cac5:	jbe    40cb16 <read_boolean_unary_expression@@Base+0x1b56>
  40cac7:	add    r14,0x20007
  40cace:	and    r14,0xfffffffffffe0000
  40cad5:	mov    rdi,rax
  40cad8:	mov    rsi,r14
  40cadb:	call   403200 <realloc@plt>
  40cae0:	mov    QWORD PTR [rip+0x74e9],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40cae7:	mov    QWORD PTR [rip+0x74ea],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40caee:	mov    rbx,QWORD PTR [rip+0x74eb]        # 413fe0 <__bss_start@@Base+0xe80>
  40caf5:	lea    r14,[rbx+0x4]
  40caf9:	cmp    BYTE PTR [rip+0x74c0],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40cb00:	mov    DWORD PTR [rax+rbx*1],0x0
  40cb07:	mov    QWORD PTR [rip+0x74d2],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40cb0e:	je     40c790 <read_boolean_unary_expression@@Base+0x17d0>
  40cb14:	jmp    40cb28 <read_boolean_unary_expression@@Base+0x1b68>
  40cb16:	mov    DWORD PTR [rax+rbx*1],0x0
  40cb1d:	lea    r14,[rbx+0x4]
  40cb21:	mov    QWORD PTR [rip+0x74b8],r14        # 413fe0 <__bss_start@@Base+0xe80>
  40cb28:	lea    rcx,[rbx+0x8]
  40cb2c:	cmp    rcx,QWORD PTR [rip+0x74a5]        # 413fd8 <__bss_start@@Base+0xe78>
  40cb33:	jbe    40cb87 <read_boolean_unary_expression@@Base+0x1bc7>
  40cb35:	add    rbx,0x20007
  40cb3c:	and    rbx,0xfffffffffffe0000
  40cb43:	mov    rdi,rax
  40cb46:	mov    rsi,rbx
  40cb49:	call   403200 <realloc@plt>
  40cb4e:	mov    QWORD PTR [rip+0x747b],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40cb55:	mov    QWORD PTR [rip+0x747c],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40cb5c:	mov    dl,BYTE PTR [rip+0x745e]        # 413fc0 <__bss_start@@Base+0xe60>
  40cb62:	mov    r14,QWORD PTR [rip+0x7477]        # 413fe0 <__bss_start@@Base+0xe80>
  40cb69:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40cb71:	lea    rcx,[r14+0x4]
  40cb75:	mov    QWORD PTR [rip+0x7464],rcx        # 413fe0 <__bss_start@@Base+0xe80>
  40cb7c:	cmp    dl,0x1
  40cb7f:	jne    40c7a6 <read_boolean_unary_expression@@Base+0x17e6>
  40cb85:	jmp    40cb9a <read_boolean_unary_expression@@Base+0x1bda>
  40cb87:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40cb8f:	lea    rcx,[r14+0x4]
  40cb93:	mov    QWORD PTR [rip+0x7446],rcx        # 413fe0 <__bss_start@@Base+0xe80>
  40cb9a:	lea    rdx,[r14+0x8]
  40cb9e:	cmp    rdx,QWORD PTR [rip+0x7433]        # 413fd8 <__bss_start@@Base+0xe78>
  40cba5:	jbe    40c7a6 <read_boolean_unary_expression@@Base+0x17e6>
  40cbab:	add    r14,0x20007
  40cbb2:	and    r14,0xfffffffffffe0000
  40cbb9:	mov    rdi,rax
  40cbbc:	mov    rsi,r14
  40cbbf:	call   403200 <realloc@plt>
  40cbc4:	mov    QWORD PTR [rip+0x7405],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40cbcb:	mov    QWORD PTR [rip+0x7406],r14        # 413fd8 <__bss_start@@Base+0xe78>
  40cbd2:	mov    rcx,QWORD PTR [rip+0x7407]        # 413fe0 <__bss_start@@Base+0xe80>
  40cbd9:	jmp    40c7a6 <read_boolean_unary_expression@@Base+0x17e6>
  40cbde:	xchg   ax,ax
  40cbe0:	push   r14
  40cbe2:	push   rbx
  40cbe3:	push   rax
  40cbe4:	cmp    QWORD PTR [rip+0x73dc],0x0        # 413fc8 <__bss_start@@Base+0xe68>
  40cbec:	je     40cd47 <read_boolean_unary_expression@@Base+0x1d87>
  40cbf2:	cmp    BYTE PTR [rip+0x73c7],0x0        # 413fc0 <__bss_start@@Base+0xe60>
  40cbf9:	je     40cc6a <read_boolean_unary_expression@@Base+0x1caa>
  40cbfb:	mov    rbx,QWORD PTR [rip+0x73de]        # 413fe0 <__bss_start@@Base+0xe80>
  40cc02:	lea    rax,[rbx+0x8]
  40cc06:	cmp    rax,QWORD PTR [rip+0x73cb]        # 413fd8 <__bss_start@@Base+0xe78>
  40cc0d:	jbe    40ccd0 <read_boolean_unary_expression@@Base+0x1d10>
  40cc13:	add    rbx,0x20007
  40cc1a:	and    rbx,0xfffffffffffe0000
  40cc21:	mov    rdi,QWORD PTR [rip+0x73a8]        # 413fd0 <__bss_start@@Base+0xe70>
  40cc28:	mov    rsi,rbx
  40cc2b:	call   403200 <realloc@plt>
  40cc30:	mov    rdi,rax
  40cc33:	mov    QWORD PTR [rip+0x7396],rax        # 413fd0 <__bss_start@@Base+0xe70>
  40cc3a:	mov    QWORD PTR [rip+0x7397],rbx        # 413fd8 <__bss_start@@Base+0xe78>
  40cc41:	mov    al,BYTE PTR [rip+0x7379]        # 413fc0 <__bss_start@@Base+0xe60>
  40cc47:	mov    rsi,QWORD PTR [rip+0x7392]        # 413fe0 <__bss_start@@Base+0xe80>
  40cc4e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40cc56:	add    rsi,0x8
  40cc5a:	mov    QWORD PTR [rip+0x737f],rsi        # 413fe0 <__bss_start@@Base+0xe80>
  40cc61:	cmp    al,0x1
  40cc63:	jne    40cc8b <read_boolean_unary_expression@@Base+0x1ccb>
  40cc65:	jmp    40ccf1 <read_boolean_unary_expression@@Base+0x1d31>
  40cc6a:	mov    rdi,QWORD PTR [rip+0x735f]        # 413fd0 <__bss_start@@Base+0xe70>
  40cc71:	mov    rax,QWORD PTR [rip+0x7368]        # 413fe0 <__bss_start@@Base+0xe80>
  40cc78:	mov    QWORD PTR [rdi+rax*1],0x0
  40cc80:	add    rax,0x8
  40cc84:	mov    QWORD PTR [rip+0x7355],rax        # 413fe0 <__bss_start@@Base+0xe80>
  40cc8b:	mov    rsi,QWORD PTR [rip+0x736e]        # 414000 <__bss_start@@Base+0xea0>
  40cc92:	mov    edx,0x4
  40cc97:	call   4030c0 <msync@plt>
  40cc9c:	cmp    eax,0xffffffff
  40cc9f:	je     40cd5a <read_boolean_unary_expression@@Base+0x1d9a>
  40cca5:	mov    rdi,QWORD PTR [rip+0x7324]        # 413fd0 <__bss_start@@Base+0xe70>
  40ccac:	mov    rsi,QWORD PTR [rip+0x734d]        # 414000 <__bss_start@@Base+0xea0>
  40ccb3:	call   403220 <munmap@plt>
  40ccb8:	mov    QWORD PTR [rip+0x730d],0x0        # 413fd0 <__bss_start@@Base+0xe70>
  40ccc3:	mov    QWORD PTR [rip+0x7332],0x0        # 414000 <__bss_start@@Base+0xea0>
  40ccce:	jmp    40cd0e <read_boolean_unary_expression@@Base+0x1d4e>
  40ccd0:	mov    rdi,QWORD PTR [rip+0x72f9]        # 413fd0 <__bss_start@@Base+0xe70>
  40ccd7:	mov    rsi,QWORD PTR [rip+0x7302]        # 413fe0 <__bss_start@@Base+0xe80>
  40ccde:	mov    QWORD PTR [rdi+rsi*1],0x0
  40cce6:	add    rsi,0x8
  40ccea:	mov    QWORD PTR [rip+0x72ef],rsi        # 413fe0 <__bss_start@@Base+0xe80>
  40ccf1:	mov    rcx,QWORD PTR [rip+0x72d0]        # 413fc8 <__bss_start@@Base+0xe68>
  40ccf8:	mov    edx,0x1
  40ccfd:	call   403260 <fwrite@plt>
  40cd02:	mov    rdi,QWORD PTR [rip+0x72c7]        # 413fd0 <__bss_start@@Base+0xe70>
  40cd09:	call   403040 <free@plt>
  40cd0e:	mov    rdi,QWORD PTR [rip+0x72b3]        # 413fc8 <__bss_start@@Base+0xe68>
  40cd15:	call   4031e0 <fflush@plt>
  40cd1a:	mov    edi,DWORD PTR [rip+0x6438]        # 413158 <__data_start@@Base+0x10>
  40cd20:	call   40d1d0 <__gcov_flush@@Base+0x2c0>
  40cd25:	mov    rdi,QWORD PTR [rip+0x729c]        # 413fc8 <__bss_start@@Base+0xe68>
  40cd2c:	call   4030b0 <fclose@plt>
  40cd31:	mov    QWORD PTR [rip+0x728c],0x0        # 413fc8 <__bss_start@@Base+0xe68>
  40cd3c:	mov    QWORD PTR [rip+0x7289],0x0        # 413fd0 <__bss_start@@Base+0xe70>
  40cd47:	mov    rdi,QWORD PTR [rip+0x726a]        # 413fb8 <__bss_start@@Base+0xe58>
  40cd4e:	add    rsp,0x8
  40cd52:	pop    rbx
  40cd53:	pop    r14
  40cd55:	jmp    403040 <free@plt>
  40cd5a:	call   403050 <__errno_location@plt>
  40cd5f:	mov    edi,DWORD PTR [rax]
  40cd61:	mov    rax,QWORD PTR [rip+0x6290]        # 412ff8 <stderr@GLIBC_2.2.5>
  40cd68:	mov    rbx,QWORD PTR [rax]
  40cd6b:	mov    r14,QWORD PTR [rip+0x7246]        # 413fb8 <__bss_start@@Base+0xe58>
  40cd72:	call   403280 <strerror@plt>
  40cd77:	lea    rsi,[rip+0x20ca]        # 40ee48 <_IO_stdin_used@@Base+0xe48>
  40cd7e:	mov    rdi,rbx
  40cd81:	mov    rdx,r14
  40cd84:	mov    rcx,rax
  40cd87:	xor    eax,eax
  40cd89:	call   403170 <fprintf@plt>
  40cd8e:	jmp    40cca5 <read_boolean_unary_expression@@Base+0x1ce5>
  40cd93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd9d:	nop    DWORD PTR [rax]
  40cda0:	push   rbx
  40cda1:	mov    rbx,rdi
  40cda4:	mov    edi,0x18
  40cda9:	call   4031d0 <malloc@plt>
  40cdae:	mov    QWORD PTR [rax+0x8],rbx
  40cdb2:	mov    QWORD PTR [rax+0x10],0x0
  40cdba:	lea    rcx,[rip+0x722f]        # 413ff0 <__bss_start@@Base+0xe90>
  40cdc1:	mov    QWORD PTR [rax],rcx
  40cdc4:	lea    rcx,[rip+0x78f5]        # 4146c0 <writeout_fn_list@@Base>
  40cdcb:	lea    rdx,[rcx+0x8]
  40cdcf:	mov    rsi,QWORD PTR [rcx+0x8]
  40cdd3:	add    rsi,0x10
  40cdd7:	xor    edi,edi
  40cdd9:	cmp    QWORD PTR [rcx],0x0
  40cddd:	setne  dil
  40cde1:	cmove  rsi,rdx
  40cde5:	mov    QWORD PTR [rsi],rax
  40cde8:	mov    QWORD PTR [rcx+rdi*8],rax
  40cdec:	pop    rbx
  40cded:	ret    
  40cdee:	xchg   ax,ax
  40cdf0:	push   r14
  40cdf2:	push   rbx
  40cdf3:	push   rax
  40cdf4:	lea    rax,[rip+0x78c5]        # 4146c0 <writeout_fn_list@@Base>
  40cdfb:	mov    rbx,QWORD PTR [rax]
  40cdfe:	test   rbx,rbx
  40ce01:	je     40ce25 <read_boolean_unary_expression@@Base+0x1e65>
  40ce03:	lea    r14,[rip+0x71e6]        # 413ff0 <__bss_start@@Base+0xe90>
  40ce0a:	cmp    QWORD PTR [rbx],r14
  40ce0d:	je     40ce1e <read_boolean_unary_expression@@Base+0x1e5e>
  40ce0f:	nop
  40ce10:	mov    rbx,QWORD PTR [rbx+0x10]
  40ce14:	test   rbx,rbx
  40ce17:	je     40ce25 <read_boolean_unary_expression@@Base+0x1e65>
  40ce19:	cmp    QWORD PTR [rbx],r14
  40ce1c:	jne    40ce10 <read_boolean_unary_expression@@Base+0x1e50>
  40ce1e:	xor    eax,eax
  40ce20:	call   QWORD PTR [rbx+0x8]
  40ce23:	jmp    40ce10 <read_boolean_unary_expression@@Base+0x1e50>
  40ce25:	add    rsp,0x8
  40ce29:	pop    rbx
  40ce2a:	pop    r14
  40ce2c:	ret    
  40ce2d:	nop    DWORD PTR [rax]
  40ce30:	push   r15
  40ce32:	push   r14
  40ce34:	push   r12
  40ce36:	push   rbx
  40ce37:	push   rax
  40ce38:	lea    r14,[rip+0x7881]        # 4146c0 <writeout_fn_list@@Base>
  40ce3f:	mov    rdi,QWORD PTR [r14]
  40ce42:	test   rdi,rdi
  40ce45:	je     40ceab <read_boolean_unary_expression@@Base+0x1eeb>
  40ce47:	xor    r12d,r12d
  40ce4a:	lea    r15,[rip+0x719f]        # 413ff0 <__bss_start@@Base+0xe90>
  40ce51:	jmp    40ce6d <read_boolean_unary_expression@@Base+0x1ead>
  40ce53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce5d:	nop    DWORD PTR [rax]
  40ce60:	call   403040 <free@plt>
  40ce65:	mov    rdi,rbx
  40ce68:	test   rbx,rbx
  40ce6b:	je     40ceab <read_boolean_unary_expression@@Base+0x1eeb>
  40ce6d:	mov    rbx,QWORD PTR [rdi+0x10]
  40ce71:	cmp    QWORD PTR [rdi],r15
  40ce74:	je     40ce80 <read_boolean_unary_expression@@Base+0x1ec0>
  40ce76:	mov    r12,rdi
  40ce79:	jmp    40ce65 <read_boolean_unary_expression@@Base+0x1ea5>
  40ce7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce80:	cmp    rdi,QWORD PTR [r14]
  40ce83:	je     40ce92 <read_boolean_unary_expression@@Base+0x1ed2>
  40ce85:	cmp    rdi,QWORD PTR [r14+0x8]
  40ce89:	je     40ce9b <read_boolean_unary_expression@@Base+0x1edb>
  40ce8b:	test   r12,r12
  40ce8e:	jne    40cea4 <read_boolean_unary_expression@@Base+0x1ee4>
  40ce90:	jmp    40ce60 <read_boolean_unary_expression@@Base+0x1ea0>
  40ce92:	mov    QWORD PTR [r14],rbx
  40ce95:	cmp    rdi,QWORD PTR [r14+0x8]
  40ce99:	jne    40ce8b <read_boolean_unary_expression@@Base+0x1ecb>
  40ce9b:	mov    QWORD PTR [r14+0x8],r12
  40ce9f:	test   r12,r12
  40cea2:	je     40ce60 <read_boolean_unary_expression@@Base+0x1ea0>
  40cea4:	mov    QWORD PTR [r12+0x10],rbx
  40cea9:	jmp    40ce60 <read_boolean_unary_expression@@Base+0x1ea0>
  40ceab:	add    rsp,0x8
  40ceaf:	pop    rbx
  40ceb0:	pop    r12
  40ceb2:	pop    r14
  40ceb4:	pop    r15
  40ceb6:	ret    
  40ceb7:	nop    WORD PTR [rax+rax*1+0x0]
  40cec0:	push   rbx
  40cec1:	mov    rbx,rdi
  40cec4:	mov    edi,0x18
  40cec9:	call   4031d0 <malloc@plt>
  40cece:	mov    QWORD PTR [rax+0x8],rbx
  40ced2:	mov    QWORD PTR [rax+0x10],0x0
  40ceda:	lea    rcx,[rip+0x710f]        # 413ff0 <__bss_start@@Base+0xe90>
  40cee1:	mov    QWORD PTR [rax],rcx
  40cee4:	lea    rcx,[rip+0x77c5]        # 4146b0 <flush_fn_list@@Base>
  40ceeb:	lea    rdx,[rcx+0x8]
  40ceef:	mov    rsi,QWORD PTR [rcx+0x8]
  40cef3:	add    rsi,0x10
  40cef7:	xor    edi,edi
  40cef9:	cmp    QWORD PTR [rcx],0x0
  40cefd:	setne  dil
  40cf01:	cmove  rsi,rdx
  40cf05:	mov    QWORD PTR [rsi],rax
  40cf08:	mov    QWORD PTR [rcx+rdi*8],rax
  40cf0c:	pop    rbx
  40cf0d:	ret    
  40cf0e:	xchg   ax,ax

000000000040cf10 <__gcov_flush@@Base>:
  40cf10:	push   rbx
  40cf11:	lea    rax,[rip+0x7798]        # 4146b0 <flush_fn_list@@Base>
  40cf18:	mov    rbx,QWORD PTR [rax]
  40cf1b:	test   rbx,rbx
  40cf1e:	je     40cf2e <__gcov_flush@@Base+0x1e>
  40cf20:	xor    eax,eax
  40cf22:	call   QWORD PTR [rbx+0x8]
  40cf25:	mov    rbx,QWORD PTR [rbx+0x10]
  40cf29:	test   rbx,rbx
  40cf2c:	jne    40cf20 <__gcov_flush@@Base+0x10>
  40cf2e:	pop    rbx
  40cf2f:	ret    
  40cf30:	push   r15
  40cf32:	push   r14
  40cf34:	push   r12
  40cf36:	push   rbx
  40cf37:	push   rax
  40cf38:	lea    r14,[rip+0x7771]        # 4146b0 <flush_fn_list@@Base>
  40cf3f:	mov    rdi,QWORD PTR [r14]
  40cf42:	test   rdi,rdi
  40cf45:	je     40cfab <__gcov_flush@@Base+0x9b>
  40cf47:	xor    r12d,r12d
  40cf4a:	lea    r15,[rip+0x709f]        # 413ff0 <__bss_start@@Base+0xe90>
  40cf51:	jmp    40cf6d <__gcov_flush@@Base+0x5d>
  40cf53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf5d:	nop    DWORD PTR [rax]
  40cf60:	call   403040 <free@plt>
  40cf65:	mov    rdi,rbx
  40cf68:	test   rbx,rbx
  40cf6b:	je     40cfab <__gcov_flush@@Base+0x9b>
  40cf6d:	mov    rbx,QWORD PTR [rdi+0x10]
  40cf71:	cmp    QWORD PTR [rdi],r15
  40cf74:	je     40cf80 <__gcov_flush@@Base+0x70>
  40cf76:	mov    r12,rdi
  40cf79:	jmp    40cf65 <__gcov_flush@@Base+0x55>
  40cf7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf80:	cmp    rdi,QWORD PTR [r14]
  40cf83:	je     40cf92 <__gcov_flush@@Base+0x82>
  40cf85:	cmp    rdi,QWORD PTR [r14+0x8]
  40cf89:	je     40cf9b <__gcov_flush@@Base+0x8b>
  40cf8b:	test   r12,r12
  40cf8e:	jne    40cfa4 <__gcov_flush@@Base+0x94>
  40cf90:	jmp    40cf60 <__gcov_flush@@Base+0x50>
  40cf92:	mov    QWORD PTR [r14],rbx
  40cf95:	cmp    rdi,QWORD PTR [r14+0x8]
  40cf99:	jne    40cf8b <__gcov_flush@@Base+0x7b>
  40cf9b:	mov    QWORD PTR [r14+0x8],r12
  40cf9f:	test   r12,r12
  40cfa2:	je     40cf60 <__gcov_flush@@Base+0x50>
  40cfa4:	mov    QWORD PTR [r12+0x10],rbx
  40cfa9:	jmp    40cf60 <__gcov_flush@@Base+0x50>
  40cfab:	add    rsp,0x8
  40cfaf:	pop    rbx
  40cfb0:	pop    r12
  40cfb2:	pop    r14
  40cfb4:	pop    r15
  40cfb6:	ret    
  40cfb7:	nop    WORD PTR [rax+rax*1+0x0]
  40cfc0:	push   r14
  40cfc2:	push   rbx
  40cfc3:	push   rax
  40cfc4:	mov    r14,rsi
  40cfc7:	test   rdi,rdi
  40cfca:	je     40d017 <__gcov_flush@@Base+0x107>
  40cfcc:	mov    rbx,rdi
  40cfcf:	mov    edi,0x18
  40cfd4:	call   4031d0 <malloc@plt>
  40cfd9:	mov    QWORD PTR [rax+0x8],rbx
  40cfdd:	mov    QWORD PTR [rax+0x10],0x0
  40cfe5:	lea    rcx,[rip+0x7004]        # 413ff0 <__bss_start@@Base+0xe90>
  40cfec:	mov    QWORD PTR [rax],rcx
  40cfef:	lea    rcx,[rip+0x76ca]        # 4146c0 <writeout_fn_list@@Base>
  40cff6:	lea    rdx,[rcx+0x8]
  40cffa:	mov    rsi,QWORD PTR [rcx+0x8]
  40cffe:	add    rsi,0x10
  40d002:	xor    edi,edi
  40d004:	cmp    QWORD PTR [rcx],0x0
  40d008:	setne  dil
  40d00c:	cmove  rsi,rdx
  40d010:	mov    QWORD PTR [rsi],rax
  40d013:	mov    QWORD PTR [rcx+rdi*8],rax
  40d017:	test   r14,r14
  40d01a:	je     40d064 <__gcov_flush@@Base+0x154>
  40d01c:	mov    edi,0x18
  40d021:	call   4031d0 <malloc@plt>
  40d026:	mov    QWORD PTR [rax+0x8],r14
  40d02a:	mov    QWORD PTR [rax+0x10],0x0
  40d032:	lea    rcx,[rip+0x6fb7]        # 413ff0 <__bss_start@@Base+0xe90>
  40d039:	mov    QWORD PTR [rax],rcx
  40d03c:	lea    rcx,[rip+0x766d]        # 4146b0 <flush_fn_list@@Base>
  40d043:	lea    rdx,[rcx+0x8]
  40d047:	mov    rsi,QWORD PTR [rcx+0x8]
  40d04b:	add    rsi,0x10
  40d04f:	xor    edi,edi
  40d051:	cmp    QWORD PTR [rcx],0x0
  40d055:	setne  dil
  40d059:	cmove  rsi,rdx
  40d05d:	mov    QWORD PTR [rsi],rax
  40d060:	mov    QWORD PTR [rcx+rdi*8],rax
  40d064:	cmp    BYTE PTR [rip+0x6f8d],0x0        # 413ff8 <__bss_start@@Base+0xe98>
  40d06b:	je     40d075 <__gcov_flush@@Base+0x165>
  40d06d:	add    rsp,0x8
  40d071:	pop    rbx
  40d072:	pop    r14
  40d074:	ret    
  40d075:	mov    BYTE PTR [rip+0x6f7c],0x1        # 413ff8 <__bss_start@@Base+0xe98>
  40d07c:	lea    rdi,[rip+0xfffffffffffffead]        # 40cf30 <__gcov_flush@@Base+0x20>
  40d083:	call   40d620 <__libc_csu_fini@@Base+0x10>
  40d088:	lea    rdi,[rip+0xfffffffffffffda1]        # 40ce30 <read_boolean_unary_expression@@Base+0x1e70>
  40d08f:	call   40d620 <__libc_csu_fini@@Base+0x10>
  40d094:	lea    rdi,[rip+0xfffffffffffffd55]        # 40cdf0 <read_boolean_unary_expression@@Base+0x1e30>
  40d09b:	add    rsp,0x8
  40d09f:	pop    rbx
  40d0a0:	pop    r14
  40d0a2:	jmp    40d620 <__libc_csu_fini@@Base+0x10>
  40d0a7:	nop
  40d0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0b0:	push   r15
  40d0b2:	push   r14
  40d0b4:	push   rbx
  40d0b5:	mov    r14,rdi
  40d0b8:	lea    rbx,[rdi+0x1]
  40d0bc:	lea    r15,[rip+0x6099]        # 41315c <lprofDirMode@@Base>
  40d0c3:	jmp    40d0e5 <__gcov_flush@@Base+0x1d5>
  40d0c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0cf:	nop
  40d0d0:	mov    BYTE PTR [rbx],0x0
  40d0d3:	mov    esi,DWORD PTR [r15]
  40d0d6:	mov    rdi,r14
  40d0d9:	call   403080 <mkdir@plt>
  40d0de:	mov    BYTE PTR [rbx],0x2f
  40d0e1:	add    rbx,0x1
  40d0e5:	movzx  eax,BYTE PTR [rbx]
  40d0e8:	cmp    al,0x2f
  40d0ea:	je     40d0d0 <__gcov_flush@@Base+0x1c0>
  40d0ec:	test   al,al
  40d0ee:	jne    40d0e1 <__gcov_flush@@Base+0x1d1>
  40d0f0:	pop    rbx
  40d0f1:	pop    r14
  40d0f3:	pop    r15
  40d0f5:	ret    
  40d0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d100:	lea    rax,[rip+0x6055]        # 41315c <lprofDirMode@@Base>
  40d107:	mov    eax,DWORD PTR [rax]
  40d109:	ret    
  40d10a:	nop    WORD PTR [rax+rax*1+0x0]
  40d110:	lea    rax,[rip+0x6045]        # 41315c <lprofDirMode@@Base>
  40d117:	mov    DWORD PTR [rax],edi
  40d119:	ret    
  40d11a:	nop    WORD PTR [rax+rax*1+0x0]
  40d120:	push   rbp
  40d121:	push   rbx
  40d122:	sub    rsp,0x188
  40d129:	mov    ebp,esi
  40d12b:	mov    rbx,rdi
  40d12e:	mov    rdi,rsp
  40d131:	call   403130 <uname@plt>
  40d136:	test   eax,eax
  40d138:	js     40d14c <__gcov_flush@@Base+0x23c>
  40d13a:	lea    rsi,[rsp+0x41]
  40d13f:	movsxd rdx,ebp
  40d142:	mov    rdi,rbx
  40d145:	call   403060 <strncpy@plt>
  40d14a:	xor    eax,eax
  40d14c:	add    rsp,0x188
  40d153:	pop    rbx
  40d154:	pop    rbp
  40d155:	ret    
  40d156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d160:	push   rbp
  40d161:	push   r14
  40d163:	push   rbx
  40d164:	sub    rsp,0x20
  40d168:	mov    ebx,edi
  40d16a:	mov    WORD PTR [rsp+0x2],0x0
  40d171:	xorps  xmm0,xmm0
  40d174:	movups XMMWORD PTR [rsp+0x8],xmm0
  40d179:	call   4030a0 <getpid@plt>
  40d17e:	mov    DWORD PTR [rsp+0x18],eax
  40d182:	mov    WORD PTR [rsp],0x1
  40d188:	mov    r14,rsp
  40d18b:	xor    ebp,ebp
  40d18d:	nop    DWORD PTR [rax]
  40d190:	mov    edi,ebx
  40d192:	mov    esi,0x7
  40d197:	mov    rdx,r14
  40d19a:	xor    eax,eax
  40d19c:	call   403090 <fcntl@plt>
  40d1a1:	cmp    eax,0xffffffff
  40d1a4:	jne    40d1bc <__gcov_flush@@Base+0x2ac>
  40d1a6:	call   403050 <__errno_location@plt>
  40d1ab:	mov    eax,DWORD PTR [rax]
  40d1ad:	cmp    eax,0x4
  40d1b0:	je     40d190 <__gcov_flush@@Base+0x280>
  40d1b2:	cmp    eax,0x25
  40d1b5:	jne    40d1bc <__gcov_flush@@Base+0x2ac>
  40d1b7:	mov    ebp,0xffffffff
  40d1bc:	mov    eax,ebp
  40d1be:	add    rsp,0x20
  40d1c2:	pop    rbx
  40d1c3:	pop    r14
  40d1c5:	pop    rbp
  40d1c6:	ret    
  40d1c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d1d0:	push   rbp
  40d1d1:	push   r14
  40d1d3:	push   rbx
  40d1d4:	sub    rsp,0x20
  40d1d8:	mov    ebx,edi
  40d1da:	mov    WORD PTR [rsp+0x2],0x0
  40d1e1:	xorps  xmm0,xmm0
  40d1e4:	movups XMMWORD PTR [rsp+0x8],xmm0
  40d1e9:	call   4030a0 <getpid@plt>
  40d1ee:	mov    DWORD PTR [rsp+0x18],eax
  40d1f2:	mov    WORD PTR [rsp],0x2
  40d1f8:	mov    r14,rsp
  40d1fb:	xor    ebp,ebp
  40d1fd:	nop    DWORD PTR [rax]
  40d200:	mov    edi,ebx
  40d202:	mov    esi,0x7
  40d207:	mov    rdx,r14
  40d20a:	xor    eax,eax
  40d20c:	call   403090 <fcntl@plt>
  40d211:	cmp    eax,0xffffffff
  40d214:	jne    40d22c <__gcov_flush@@Base+0x31c>
  40d216:	call   403050 <__errno_location@plt>
  40d21b:	mov    eax,DWORD PTR [rax]
  40d21d:	cmp    eax,0x4
  40d220:	je     40d200 <__gcov_flush@@Base+0x2f0>
  40d222:	cmp    eax,0x25
  40d225:	jne    40d22c <__gcov_flush@@Base+0x31c>
  40d227:	mov    ebp,0xffffffff
  40d22c:	mov    eax,ebp
  40d22e:	add    rsp,0x20
  40d232:	pop    rbx
  40d233:	pop    r14
  40d235:	pop    rbp
  40d236:	ret    
  40d237:	nop    WORD PTR [rax+rax*1+0x0]
  40d240:	push   rbp
  40d241:	push   r14
  40d243:	push   rbx
  40d244:	sub    rsp,0x20
  40d248:	call   4031c0 <fileno@plt>
  40d24d:	mov    ebx,eax
  40d24f:	mov    WORD PTR [rsp+0x2],0x0
  40d256:	xorps  xmm0,xmm0
  40d259:	movups XMMWORD PTR [rsp+0x8],xmm0
  40d25e:	call   4030a0 <getpid@plt>
  40d263:	mov    DWORD PTR [rsp+0x18],eax
  40d267:	mov    WORD PTR [rsp],0x1
  40d26d:	mov    r14,rsp
  40d270:	xor    ebp,ebp
  40d272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d27c:	nop    DWORD PTR [rax+0x0]
  40d280:	mov    edi,ebx
  40d282:	mov    esi,0x7
  40d287:	mov    rdx,r14
  40d28a:	xor    eax,eax
  40d28c:	call   403090 <fcntl@plt>
  40d291:	cmp    eax,0xffffffff
  40d294:	jne    40d2ac <__gcov_flush@@Base+0x39c>
  40d296:	call   403050 <__errno_location@plt>
  40d29b:	mov    eax,DWORD PTR [rax]
  40d29d:	cmp    eax,0x4
  40d2a0:	je     40d280 <__gcov_flush@@Base+0x370>
  40d2a2:	cmp    eax,0x25
  40d2a5:	jne    40d2ac <__gcov_flush@@Base+0x39c>
  40d2a7:	mov    ebp,0xffffffff
  40d2ac:	mov    eax,ebp
  40d2ae:	add    rsp,0x20
  40d2b2:	pop    rbx
  40d2b3:	pop    r14
  40d2b5:	pop    rbp
  40d2b6:	ret    
  40d2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d2c0:	push   rbp
  40d2c1:	push   r14
  40d2c3:	push   rbx
  40d2c4:	sub    rsp,0x20
  40d2c8:	call   4031c0 <fileno@plt>
  40d2cd:	mov    ebx,eax
  40d2cf:	mov    WORD PTR [rsp+0x2],0x0
  40d2d6:	xorps  xmm0,xmm0
  40d2d9:	movups XMMWORD PTR [rsp+0x8],xmm0
  40d2de:	call   4030a0 <getpid@plt>
  40d2e3:	mov    DWORD PTR [rsp+0x18],eax
  40d2e7:	mov    WORD PTR [rsp],0x2
  40d2ed:	mov    r14,rsp
  40d2f0:	xor    ebp,ebp
  40d2f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2fc:	nop    DWORD PTR [rax+0x0]
  40d300:	mov    edi,ebx
  40d302:	mov    esi,0x7
  40d307:	mov    rdx,r14
  40d30a:	xor    eax,eax
  40d30c:	call   403090 <fcntl@plt>
  40d311:	cmp    eax,0xffffffff
  40d314:	jne    40d32c <__gcov_flush@@Base+0x41c>
  40d316:	call   403050 <__errno_location@plt>
  40d31b:	mov    eax,DWORD PTR [rax]
  40d31d:	cmp    eax,0x4
  40d320:	je     40d300 <__gcov_flush@@Base+0x3f0>
  40d322:	cmp    eax,0x25
  40d325:	jne    40d32c <__gcov_flush@@Base+0x41c>
  40d327:	mov    ebp,0xffffffff
  40d32c:	mov    eax,ebp
  40d32e:	add    rsp,0x20
  40d332:	pop    rbx
  40d333:	pop    r14
  40d335:	pop    rbp
  40d336:	ret    
  40d337:	nop    WORD PTR [rax+rax*1+0x0]
  40d340:	push   rbp
  40d341:	push   r14
  40d343:	push   rbx
  40d344:	sub    rsp,0x20
  40d348:	xor    ebx,ebx
  40d34a:	mov    esi,0x42
  40d34f:	mov    edx,0x1b6
  40d354:	xor    eax,eax
  40d356:	call   403230 <open@plt>
  40d35b:	test   eax,eax
  40d35d:	js     40d3ba <__gcov_flush@@Base+0x4aa>
  40d35f:	mov    ebp,eax
  40d361:	mov    WORD PTR [rsp+0x2],0x0
  40d368:	xorps  xmm0,xmm0
  40d36b:	movups XMMWORD PTR [rsp+0x8],xmm0
  40d370:	call   4030a0 <getpid@plt>
  40d375:	mov    DWORD PTR [rsp+0x18],eax
  40d379:	mov    WORD PTR [rsp],0x1
  40d37f:	mov    r14,rsp
  40d382:	mov    edi,ebp
  40d384:	mov    esi,0x7
  40d389:	mov    rdx,r14
  40d38c:	xor    eax,eax
  40d38e:	call   403090 <fcntl@plt>
  40d393:	cmp    eax,0xffffffff
  40d396:	jne    40d3a9 <__gcov_flush@@Base+0x499>
  40d398:	call   403050 <__errno_location@plt>
  40d39d:	mov    eax,DWORD PTR [rax]
  40d39f:	cmp    eax,0x4
  40d3a2:	je     40d382 <__gcov_flush@@Base+0x472>
  40d3a4:	cmp    eax,0x25
  40d3a7:	je     40d3c6 <__gcov_flush@@Base+0x4b6>
  40d3a9:	lea    rsi,[rip+0x1917]        # 40ecc7 <_IO_stdin_used@@Base+0xcc7>
  40d3b0:	mov    edi,ebp
  40d3b2:	call   403210 <fdopen@plt>
  40d3b7:	mov    rbx,rax
  40d3ba:	mov    rax,rbx
  40d3bd:	add    rsp,0x20
  40d3c1:	pop    rbx
  40d3c2:	pop    r14
  40d3c4:	pop    rbp
  40d3c5:	ret    
  40d3c6:	mov    rax,QWORD PTR [rip+0x5c2b]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d3cd:	mov    rdi,QWORD PTR [rax]
  40d3d0:	lea    rsi,[rip+0x1a92]        # 40ee69 <_IO_stdin_used@@Base+0xe69>
  40d3d7:	lea    rdx,[rip+0x1ad4]        # 40eeb2 <_IO_stdin_used@@Base+0xeb2>
  40d3de:	xor    eax,eax
  40d3e0:	call   403170 <fprintf@plt>
  40d3e5:	jmp    40d3a9 <__gcov_flush@@Base+0x499>
  40d3e7:	nop    WORD PTR [rax+rax*1+0x0]
  40d3f0:	push   r15
  40d3f2:	push   r14
  40d3f4:	push   r12
  40d3f6:	push   rbx
  40d3f7:	push   rax
  40d3f8:	mov    r14,rsi
  40d3fb:	mov    r15,rdi
  40d3fe:	lea    rdi,[rip+0x1adb]        # 40eee0 <_IO_stdin_used@@Base+0xee0>
  40d405:	call   403030 <getenv@plt>
  40d40a:	mov    rbx,rax
  40d40d:	lea    rdi,[rip+0x1ad8]        # 40eeec <_IO_stdin_used@@Base+0xeec>
  40d414:	call   403030 <getenv@plt>
  40d419:	mov    QWORD PTR [r14],0x0
  40d420:	mov    DWORD PTR [r15],0x0
  40d427:	test   rbx,rbx
  40d42a:	je     40d461 <__gcov_flush@@Base+0x551>
  40d42c:	xor    r12d,r12d
  40d42f:	cmp    BYTE PTR [rbx],0x0
  40d432:	je     40d461 <__gcov_flush@@Base+0x551>
  40d434:	test   rax,rax
  40d437:	je     40d451 <__gcov_flush@@Base+0x541>
  40d439:	xor    r12d,r12d
  40d43c:	mov    rdi,rax
  40d43f:	xor    esi,esi
  40d441:	mov    edx,0xa
  40d446:	call   403190 <strtol@plt>
  40d44b:	test   eax,eax
  40d44d:	cmovns r12d,eax
  40d451:	mov    DWORD PTR [r15],r12d
  40d454:	mov    rdi,rbx
  40d457:	call   4030d0 <strlen@plt>
  40d45c:	mov    QWORD PTR [r14],rax
  40d45f:	jmp    40d463 <__gcov_flush@@Base+0x553>
  40d461:	xor    ebx,ebx
  40d463:	mov    rax,rbx
  40d466:	add    rsp,0x8
  40d46a:	pop    rbx
  40d46b:	pop    r12
  40d46d:	pop    r14
  40d46f:	pop    r15
  40d471:	ret    
  40d472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d47c:	nop    DWORD PTR [rax+0x0]
  40d480:	push   r15
  40d482:	push   r14
  40d484:	push   r12
  40d486:	push   rbx
  40d487:	push   rax
  40d488:	mov    r15,rcx
  40d48b:	mov    r12,rdx
  40d48e:	mov    rbx,rsi
  40d491:	mov    r14,rdi
  40d494:	test   r8d,r8d
  40d497:	jle    40d4cb <__gcov_flush@@Base+0x5bb>
  40d499:	lea    rax,[rbx+0x1]
  40d49d:	xor    ecx,ecx
  40d49f:	jmp    40d4bf <__gcov_flush@@Base+0x5af>
  40d4a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4b0:	add    ecx,0x1
  40d4b3:	mov    rbx,rax
  40d4b6:	add    rax,0x1
  40d4ba:	cmp    ecx,r8d
  40d4bd:	jge    40d4cb <__gcov_flush@@Base+0x5bb>
  40d4bf:	movzx  edx,BYTE PTR [rax]
  40d4c2:	cmp    dl,0x2f
  40d4c5:	je     40d4b0 <__gcov_flush@@Base+0x5a0>
  40d4c7:	test   dl,dl
  40d4c9:	jne    40d4b6 <__gcov_flush@@Base+0x5a6>
  40d4cb:	mov    rdi,r14
  40d4ce:	mov    rsi,r12
  40d4d1:	mov    rdx,r15
  40d4d4:	call   4031a0 <memcpy@plt>
  40d4d9:	cmp    BYTE PTR [r15+r12*1-0x1],0x2f
  40d4df:	je     40d4ea <__gcov_flush@@Base+0x5da>
  40d4e1:	mov    BYTE PTR [r14+r15*1],0x2f
  40d4e6:	add    r15,0x1
  40d4ea:	add    r14,r15
  40d4ed:	mov    rdi,rbx
  40d4f0:	call   4030d0 <strlen@plt>
  40d4f5:	lea    rdx,[rax+0x1]
  40d4f9:	mov    rdi,r14
  40d4fc:	mov    rsi,rbx
  40d4ff:	add    rsp,0x8
  40d503:	pop    rbx
  40d504:	pop    r12
  40d506:	pop    r14
  40d508:	pop    r15
  40d50a:	jmp    4031a0 <memcpy@plt>
  40d50f:	nop
  40d510:	mov    esi,0x2f
  40d515:	jmp    403100 <strchr@plt>
  40d51a:	nop    WORD PTR [rax+rax*1+0x0]
  40d520:	mov    esi,0x2f
  40d525:	jmp    403120 <strrchr@plt>
  40d52a:	nop    WORD PTR [rax+rax*1+0x0]
  40d530:	push   rax
  40d531:	mov    DWORD PTR [rsp+0x4],0x0
  40d539:	lea    rsi,[rsp+0x4]
  40d53e:	mov    edi,0x2
  40d543:	xor    eax,eax
  40d545:	call   4031b0 <prctl@plt>
  40d54a:	mov    ecx,DWORD PTR [rsp+0x4]
  40d54e:	test   eax,eax
  40d550:	jne    40d569 <__gcov_flush@@Base+0x659>
  40d552:	cmp    ecx,0x9
  40d555:	jne    40d569 <__gcov_flush@@Base+0x659>
  40d557:	mov    edi,0x1
  40d55c:	xor    esi,esi
  40d55e:	xor    eax,eax
  40d560:	call   4031b0 <prctl@plt>
  40d565:	mov    ecx,DWORD PTR [rsp+0x4]
  40d569:	xor    eax,eax
  40d56b:	cmp    ecx,0x9
  40d56e:	sete   al
  40d571:	pop    rcx
  40d572:	ret    
  40d573:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d57d:	nop    DWORD PTR [rax]
  40d580:	mov    edi,0x1
  40d585:	mov    esi,0x9
  40d58a:	xor    eax,eax
  40d58c:	jmp    4031b0 <prctl@plt>
  40d591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d59b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040d5a0 <__libc_csu_init@@Base>:
  40d5a0:	endbr64 
  40d5a4:	push   r15
  40d5a6:	lea    r15,[rip+0x4a13]        # 411fc0 <_IO_stdin_used@@Base+0x3fc0>
  40d5ad:	push   r14
  40d5af:	mov    r14,rdx
  40d5b2:	push   r13
  40d5b4:	mov    r13,rsi
  40d5b7:	push   r12
  40d5b9:	mov    r12d,edi
  40d5bc:	push   rbp
  40d5bd:	lea    rbp,[rip+0x4a24]        # 411fe8 <_IO_stdin_used@@Base+0x3fe8>
  40d5c4:	push   rbx
  40d5c5:	sub    rbp,r15
  40d5c8:	sub    rsp,0x8
  40d5cc:	call   403000 <getenv@plt-0x30>
  40d5d1:	sar    rbp,0x3
  40d5d5:	je     40d5f6 <__libc_csu_init@@Base+0x56>
  40d5d7:	xor    ebx,ebx
  40d5d9:	nop    DWORD PTR [rax+0x0]
  40d5e0:	mov    rdx,r14
  40d5e3:	mov    rsi,r13
  40d5e6:	mov    edi,r12d
  40d5e9:	call   QWORD PTR [r15+rbx*8]
  40d5ed:	add    rbx,0x1
  40d5f1:	cmp    rbp,rbx
  40d5f4:	jne    40d5e0 <__libc_csu_init@@Base+0x40>
  40d5f6:	add    rsp,0x8
  40d5fa:	pop    rbx
  40d5fb:	pop    rbp
  40d5fc:	pop    r12
  40d5fe:	pop    r13
  40d600:	pop    r14
  40d602:	pop    r15
  40d604:	ret    
  40d605:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040d610 <__libc_csu_fini@@Base>:
  40d610:	endbr64 
  40d614:	ret    
  40d615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d61f:	nop
  40d620:	endbr64 
  40d624:	mov    rdx,QWORD PTR [rip+0x5b25]        # 413150 <__data_start@@Base+0x8>
  40d62b:	xor    esi,esi
  40d62d:	jmp    403240 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000040d634 <.fini>:
  40d634:	endbr64 
  40d638:	sub    rsp,0x8
  40d63c:	add    rsp,0x8
  40d640:	ret    
