
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0xcfc9]        # 40efd8 <memcpy@plt+0xc5e8>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_strcasecmp@plt-0x4fa>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0xcfe2]        # 40f008 <memcpy@plt+0xc618>
  402026:	bnd jmp QWORD PTR [rip+0xcfe3]        # 40f010 <memcpy@plt+0xc620>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40235f:	nop
  402360:	endbr64 
  402364:	push   0x33
  402369:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40236f:	nop
  402370:	endbr64 
  402374:	push   0x34
  402379:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40237f:	nop
  402380:	endbr64 
  402384:	push   0x35
  402389:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40238f:	nop
  402390:	endbr64 
  402394:	push   0x36
  402399:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40239f:	nop
  4023a0:	endbr64 
  4023a4:	push   0x37
  4023a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4023af:	nop
  4023b0:	endbr64 
  4023b4:	push   0x38
  4023b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4023bf:	nop
  4023c0:	endbr64 
  4023c4:	push   0x39
  4023c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4023cf:	nop
  4023d0:	endbr64 
  4023d4:	push   0x3a
  4023d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4023df:	nop
  4023e0:	endbr64 
  4023e4:	push   0x3b
  4023e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4023ef:	nop
  4023f0:	endbr64 
  4023f4:	push   0x3c
  4023f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4023ff:	nop
  402400:	endbr64 
  402404:	push   0x3d
  402409:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40240f:	nop
  402410:	endbr64 
  402414:	push   0x3e
  402419:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40241f:	nop
  402420:	endbr64 
  402424:	push   0x3f
  402429:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40242f:	nop
  402430:	endbr64 
  402434:	push   0x40
  402439:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40243f:	nop
  402440:	endbr64 
  402444:	push   0x41
  402449:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40244f:	nop
  402450:	endbr64 
  402454:	push   0x42
  402459:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40245f:	nop
  402460:	endbr64 
  402464:	push   0x43
  402469:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40246f:	nop
  402470:	endbr64 
  402474:	push   0x44
  402479:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40247f:	nop
  402480:	endbr64 
  402484:	push   0x45
  402489:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40248f:	nop
  402490:	endbr64 
  402494:	push   0x46
  402499:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40249f:	nop
  4024a0:	endbr64 
  4024a4:	push   0x47
  4024a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4024af:	nop
  4024b0:	endbr64 
  4024b4:	push   0x48
  4024b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4024bf:	nop
  4024c0:	endbr64 
  4024c4:	push   0x49
  4024c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4024cf:	nop
  4024d0:	endbr64 
  4024d4:	push   0x4a
  4024d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4024df:	nop
  4024e0:	endbr64 
  4024e4:	push   0x4b
  4024e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4024ef:	nop
  4024f0:	endbr64 
  4024f4:	push   0x4c
  4024f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  4024ff:	nop
  402500:	endbr64 
  402504:	push   0x4d
  402509:	bnd jmp 402020 <rb_strcasecmp@plt-0x4f0>
  40250f:	nop

Disassembly of section .plt.got:

0000000000402510 <rb_strcasecmp@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0xcacd]        # 40efe8 <memcpy@plt+0xc5f8>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000402520 <rb_helper_loop@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0xcaed]        # 40f018 <memcpy@plt+0xc628>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <memset@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0xcae5]        # 40f020 <memcpy@plt+0xc630>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <rb_event_addish@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0xcadd]        # 40f028 <memcpy@plt+0xc638>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <rb_ignore_errno@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0xcad5]        # 40f030 <memcpy@plt+0xc640>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <rb_connect_tcp_ssl@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0xcacd]        # 40f038 <memcpy@plt+0xc648>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <rb_connect_tcp@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0xcac5]        # 40f040 <memcpy@plt+0xc650>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <rb_event_delete@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0xcabd]        # 40f048 <memcpy@plt+0xc658>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <rb_setselect@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0xcab5]        # 40f050 <memcpy@plt+0xc660>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <rb_get_fd@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0xcaad]        # 40f058 <memcpy@plt+0xc668>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <exit@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0xcaa5]        # 40f060 <memcpy@plt+0xc670>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <__assert_fail@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0xca9d]        # 40f068 <memcpy@plt+0xc678>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <getaddrinfo@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0xca95]        # 40f070 <memcpy@plt+0xc680>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <rb_socket@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0xca8d]        # 40f078 <memcpy@plt+0xc688>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <strcasecmp@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0xca85]        # 40f080 <memcpy@plt+0xc690>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <rb_strtok_r@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0xca7d]        # 40f088 <memcpy@plt+0xc698>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <rb_dictionary_foreach_cur@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0xca75]        # 40f090 <memcpy@plt+0xc6a0>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <strpbrk@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0xca6d]        # 40f098 <memcpy@plt+0xc6a8>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <rb_helper_child@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0xca65]        # 40f0a0 <memcpy@plt+0xc6b0>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <strncmp@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0xca5d]        # 40f0a8 <memcpy@plt+0xc6b8>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <malloc@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0xca55]        # 40f0b0 <memcpy@plt+0xc6c0>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <fopen@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0xca4d]        # 40f0b8 <memcpy@plt+0xc6c8>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <rb_write@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0xca45]        # 40f0c0 <memcpy@plt+0xc6d0>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <setsockopt@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0xca3d]        # 40f0c8 <memcpy@plt+0xc6d8>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402690 <fgets@plt>:
  402690:	endbr64 
  402694:	bnd jmp QWORD PTR [rip+0xca35]        # 40f0d0 <memcpy@plt+0xc6e0>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026a0 <__vsnprintf_chk@plt>:
  4026a0:	endbr64 
  4026a4:	bnd jmp QWORD PTR [rip+0xca2d]        # 40f0d8 <memcpy@plt+0xc6e8>
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026b0 <rb_strlcpy@plt>:
  4026b0:	endbr64 
  4026b4:	bnd jmp QWORD PTR [rip+0xca25]        # 40f0e0 <memcpy@plt+0xc6f0>
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026c0 <rb_dictionary_foreach_next@plt>:
  4026c0:	endbr64 
  4026c4:	bnd jmp QWORD PTR [rip+0xca1d]        # 40f0e8 <memcpy@plt+0xc6f8>
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <freeaddrinfo@plt>:
  4026d0:	endbr64 
  4026d4:	bnd jmp QWORD PTR [rip+0xca15]        # 40f0f0 <memcpy@plt+0xc700>
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026e0 <free@plt>:
  4026e0:	endbr64 
  4026e4:	bnd jmp QWORD PTR [rip+0xca0d]        # 40f0f8 <memcpy@plt+0xc708>
  4026eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026f0 <strlen@plt>:
  4026f0:	endbr64 
  4026f4:	bnd jmp QWORD PTR [rip+0xca05]        # 40f100 <memcpy@plt+0xc710>
  4026fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402700 <rb_string_to_array@plt>:
  402700:	endbr64 
  402704:	bnd jmp QWORD PTR [rip+0xc9fd]        # 40f108 <memcpy@plt+0xc718>
  40270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402710 <rb_read@plt>:
  402710:	endbr64 
  402714:	bnd jmp QWORD PTR [rip+0xc9f5]        # 40f110 <memcpy@plt+0xc720>
  40271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402720 <__ctype_b_loc@plt>:
  402720:	endbr64 
  402724:	bnd jmp QWORD PTR [rip+0xc9ed]        # 40f118 <memcpy@plt+0xc728>
  40272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402730 <rb_dictionary_foreach_start@plt>:
  402730:	endbr64 
  402734:	bnd jmp QWORD PTR [rip+0xc9e5]        # 40f120 <memcpy@plt+0xc730>
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402740 <rb_inet_pton_sock@plt>:
  402740:	endbr64 
  402744:	bnd jmp QWORD PTR [rip+0xc9dd]        # 40f128 <memcpy@plt+0xc738>
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402750 <strrchr@plt>:
  402750:	endbr64 
  402754:	bnd jmp QWORD PTR [rip+0xc9d5]        # 40f130 <memcpy@plt+0xc740>
  40275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402760 <rb_current_time@plt>:
  402760:	endbr64 
  402764:	bnd jmp QWORD PTR [rip+0xc9cd]        # 40f138 <memcpy@plt+0xc748>
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402770 <rb_dictionary_delete@plt>:
  402770:	endbr64 
  402774:	bnd jmp QWORD PTR [rip+0xc9c5]        # 40f140 <memcpy@plt+0xc750>
  40277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402780 <strerror@plt>:
  402780:	endbr64 
  402784:	bnd jmp QWORD PTR [rip+0xc9bd]        # 40f148 <memcpy@plt+0xc758>
  40278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402790 <strstr@plt>:
  402790:	endbr64 
  402794:	bnd jmp QWORD PTR [rip+0xc9b5]        # 40f150 <memcpy@plt+0xc760>
  40279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027a0 <rb_free_rb_dlink_node@plt>:
  4027a0:	endbr64 
  4027a4:	bnd jmp QWORD PTR [rip+0xc9ad]        # 40f158 <memcpy@plt+0xc768>
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027b0 <sigaction@plt>:
  4027b0:	endbr64 
  4027b4:	bnd jmp QWORD PTR [rip+0xc9a5]        # 40f160 <memcpy@plt+0xc770>
  4027bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027c0 <rb_close@plt>:
  4027c0:	endbr64 
  4027c4:	bnd jmp QWORD PTR [rip+0xc99d]        # 40f168 <memcpy@plt+0xc778>
  4027cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027d0 <strtol@plt>:
  4027d0:	endbr64 
  4027d4:	bnd jmp QWORD PTR [rip+0xc995]        # 40f170 <memcpy@plt+0xc780>
  4027db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027e0 <getsockname@plt>:
  4027e0:	endbr64 
  4027e4:	bnd jmp QWORD PTR [rip+0xc98d]        # 40f178 <memcpy@plt+0xc788>
  4027eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027f0 <rb_dictionary_destroy@plt>:
  4027f0:	endbr64 
  4027f4:	bnd jmp QWORD PTR [rip+0xc985]        # 40f180 <memcpy@plt+0xc790>
  4027fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402800 <strchr@plt>:
  402800:	endbr64 
  402804:	bnd jmp QWORD PTR [rip+0xc97d]        # 40f188 <memcpy@plt+0xc798>
  40280b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402810 <rb_init_prng@plt>:
  402810:	endbr64 
  402814:	bnd jmp QWORD PTR [rip+0xc975]        # 40f190 <memcpy@plt+0xc7a0>
  40281b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402820 <rb_dictionary_retrieve@plt>:
  402820:	endbr64 
  402824:	bnd jmp QWORD PTR [rip+0xc96d]        # 40f198 <memcpy@plt+0xc7a8>
  40282b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402830 <rb_outofmemory@plt>:
  402830:	endbr64 
  402834:	bnd jmp QWORD PTR [rip+0xc965]        # 40f1a0 <memcpy@plt+0xc7b0>
  40283b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402840 <__errno_location@plt>:
  402840:	endbr64 
  402844:	bnd jmp QWORD PTR [rip+0xc95d]        # 40f1a8 <memcpy@plt+0xc7b8>
  40284b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402850 <rb_dictionary_add@plt>:
  402850:	endbr64 
  402854:	bnd jmp QWORD PTR [rip+0xc955]        # 40f1b0 <memcpy@plt+0xc7c0>
  40285b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402860 <rb_set_time@plt>:
  402860:	endbr64 
  402864:	bnd jmp QWORD PTR [rip+0xc94d]        # 40f1b8 <memcpy@plt+0xc7c8>
  40286b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402870 <sigaddset@plt>:
  402870:	endbr64 
  402874:	bnd jmp QWORD PTR [rip+0xc945]        # 40f1c0 <memcpy@plt+0xc7d0>
  40287b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402880 <__stack_chk_fail@plt>:
  402880:	endbr64 
  402884:	bnd jmp QWORD PTR [rip+0xc93d]        # 40f1c8 <memcpy@plt+0xc7d8>
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402890 <rb_helper_read@plt>:
  402890:	endbr64 
  402894:	bnd jmp QWORD PTR [rip+0xc935]        # 40f1d0 <memcpy@plt+0xc7e0>
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028a0 <strcmp@plt>:
  4028a0:	endbr64 
  4028a4:	bnd jmp QWORD PTR [rip+0xc92d]        # 40f1d8 <memcpy@plt+0xc7e8>
  4028ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028b0 <rb_inet_ntop_sock@plt>:
  4028b0:	endbr64 
  4028b4:	bnd jmp QWORD PTR [rip+0xc925]        # 40f1e0 <memcpy@plt+0xc7f0>
  4028bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028c0 <rb_dictionary_find@plt>:
  4028c0:	endbr64 
  4028c4:	bnd jmp QWORD PTR [rip+0xc91d]        # 40f1e8 <memcpy@plt+0xc7f8>
  4028cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028d0 <rb_dictionary_create@plt>:
  4028d0:	endbr64 
  4028d4:	bnd jmp QWORD PTR [rip+0xc915]        # 40f1f0 <memcpy@plt+0xc800>
  4028db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028e0 <rb_accept_tcp@plt>:
  4028e0:	endbr64 
  4028e4:	bnd jmp QWORD PTR [rip+0xc90d]        # 40f1f8 <memcpy@plt+0xc808>
  4028eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028f0 <calloc@plt>:
  4028f0:	endbr64 
  4028f4:	bnd jmp QWORD PTR [rip+0xc905]        # 40f200 <memcpy@plt+0xc810>
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402900 <rb_helper_write@plt>:
  402900:	endbr64 
  402904:	bnd jmp QWORD PTR [rip+0xc8fd]        # 40f208 <memcpy@plt+0xc818>
  40290b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402910 <fclose@plt>:
  402910:	endbr64 
  402914:	bnd jmp QWORD PTR [rip+0xc8f5]        # 40f210 <memcpy@plt+0xc820>
  40291b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402920 <recvfrom@plt>:
  402920:	endbr64 
  402924:	bnd jmp QWORD PTR [rip+0xc8ed]        # 40f218 <memcpy@plt+0xc828>
  40292b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402930 <rb_event_add@plt>:
  402930:	endbr64 
  402934:	bnd jmp QWORD PTR [rip+0xc8e5]        # 40f220 <memcpy@plt+0xc830>
  40293b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402940 <strtoull@plt>:
  402940:	endbr64 
  402944:	bnd jmp QWORD PTR [rip+0xc8dd]        # 40f228 <memcpy@plt+0xc838>
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402950 <rb_get_random@plt>:
  402950:	endbr64 
  402954:	bnd jmp QWORD PTR [rip+0xc8d5]        # 40f230 <memcpy@plt+0xc840>
  40295b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402960 <__sprintf_chk@plt>:
  402960:	endbr64 
  402964:	bnd jmp QWORD PTR [rip+0xc8cd]        # 40f238 <memcpy@plt+0xc848>
  40296b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402970 <__snprintf_chk@plt>:
  402970:	endbr64 
  402974:	bnd jmp QWORD PTR [rip+0xc8c5]        # 40f240 <memcpy@plt+0xc850>
  40297b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402980 <rb_make_rb_dlink_node@plt>:
  402980:	endbr64 
  402984:	bnd jmp QWORD PTR [rip+0xc8bd]        # 40f248 <memcpy@plt+0xc858>
  40298b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402990 <sigemptyset@plt>:
  402990:	endbr64 
  402994:	bnd jmp QWORD PTR [rip+0xc8b5]        # 40f250 <memcpy@plt+0xc860>
  40299b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029a0 <sendto@plt>:
  4029a0:	endbr64 
  4029a4:	bnd jmp QWORD PTR [rip+0xc8ad]        # 40f258 <memcpy@plt+0xc868>
  4029ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029b0 <bind@plt>:
  4029b0:	endbr64 
  4029b4:	bnd jmp QWORD PTR [rip+0xc8a5]        # 40f260 <memcpy@plt+0xc870>
  4029bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029c0 <fwrite@plt>:
  4029c0:	endbr64 
  4029c4:	bnd jmp QWORD PTR [rip+0xc89d]        # 40f268 <memcpy@plt+0xc878>
  4029cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029d0 <rb_listen@plt>:
  4029d0:	endbr64 
  4029d4:	bnd jmp QWORD PTR [rip+0xc895]        # 40f270 <memcpy@plt+0xc880>
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029e0 <__memmove_chk@plt>:
  4029e0:	endbr64 
  4029e4:	bnd jmp QWORD PTR [rip+0xc88d]        # 40f278 <memcpy@plt+0xc888>
  4029eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029f0 <memcpy@plt>:
  4029f0:	endbr64 
  4029f4:	bnd jmp QWORD PTR [rip+0xc885]        # 40f280 <memcpy@plt+0xc890>
  4029fb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402a00 <.text>:
  402a00:	endbr64 
  402a04:	push   rbx
  402a05:	call   402c60 <memcpy@plt+0x270>
  402a0a:	push   0x100
  402a0f:	xor    ecx,ecx
  402a11:	xor    edx,edx
  402a13:	push   0x100
  402a18:	mov    r9d,0x100
  402a1e:	xor    r8d,r8d
  402a21:	lea    rsi,[rip+0x198]        # 402bc0 <memcpy@plt+0x1d0>
  402a28:	lea    rdi,[rip+0x1b1]        # 402be0 <memcpy@plt+0x1f0>
  402a2f:	call   402630 <rb_helper_child@plt>
  402a34:	mov    rbx,0x410ee0
  402a3b:	mov    QWORD PTR [rbx],rax
  402a3e:	pop    rdx
  402a3f:	pop    rcx
  402a40:	test   rax,rax
  402a43:	je     402a8c <memcpy@plt+0x9c>
  402a45:	call   402860 <rb_set_time@plt>
  402a4a:	call   402c60 <memcpy@plt+0x270>
  402a4f:	mov    rsi,QWORD PTR [rip+0xc592]        # 40efe8 <memcpy@plt+0xc5f8>
  402a56:	lea    rdi,[rip+0x8732]        # 40b18f <memcpy@plt+0x879f>
  402a5d:	call   4028d0 <rb_dictionary_create@plt>
  402a62:	mov    rdx,0x4151e8
  402a69:	mov    QWORD PTR [rdx],rax
  402a6c:	call   404d00 <memcpy@plt+0x2310>
  402a71:	call   403c50 <memcpy@plt+0x1260>
  402a76:	mov    esi,0x1
  402a7b:	xor    edi,edi
  402a7d:	call   402810 <rb_init_prng@plt>
  402a82:	mov    rdi,QWORD PTR [rbx]
  402a85:	xor    esi,esi
  402a87:	call   402520 <rb_helper_loop@plt>
  402a8c:	mov    rax,QWORD PTR [rip+0xc565]        # 40eff8 <memcpy@plt+0xc608>
  402a93:	lea    rdi,[rip+0x86c6]        # 40b160 <memcpy@plt+0x8770>
  402a9a:	mov    rcx,QWORD PTR [rax]
  402a9d:	mov    edx,0x2e
  402aa2:	mov    esi,0x1
  402aa7:	call   4029c0 <fwrite@plt>
  402aac:	mov    edi,0x1
  402ab1:	call   4025b0 <exit@plt>
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	endbr64 
  402ac4:	xor    ebp,ebp
  402ac6:	mov    r9,rdx
  402ac9:	pop    rsi
  402aca:	mov    rdx,rsp
  402acd:	and    rsp,0xfffffffffffffff0
  402ad1:	push   rax
  402ad2:	push   rsp
  402ad3:	mov    r8,0x40ac40
  402ada:	mov    rcx,0x40abd0
  402ae1:	mov    rdi,0x402a00
  402ae8:	call   QWORD PTR [rip+0xc4f2]        # 40efe0 <memcpy@plt+0xc5f0>
  402aee:	hlt    
  402aef:	nop
  402af0:	endbr64 
  402af4:	ret    
  402af5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402aff:	nop
  402b00:	mov    eax,0x410ec0
  402b05:	cmp    rax,0x410ec0
  402b0b:	je     402b20 <memcpy@plt+0x130>
  402b0d:	mov    eax,0x0
  402b12:	test   rax,rax
  402b15:	je     402b20 <memcpy@plt+0x130>
  402b17:	mov    edi,0x410ec0
  402b1c:	jmp    rax
  402b1e:	xchg   ax,ax
  402b20:	ret    
  402b21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b2c:	nop    DWORD PTR [rax+0x0]
  402b30:	mov    esi,0x410ec0
  402b35:	sub    rsi,0x410ec0
  402b3c:	sar    rsi,0x3
  402b40:	mov    rax,rsi
  402b43:	shr    rax,0x3f
  402b47:	add    rsi,rax
  402b4a:	sar    rsi,1
  402b4d:	je     402b60 <memcpy@plt+0x170>
  402b4f:	mov    eax,0x0
  402b54:	test   rax,rax
  402b57:	je     402b60 <memcpy@plt+0x170>
  402b59:	mov    edi,0x410ec0
  402b5e:	jmp    rax
  402b60:	ret    
  402b61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b6c:	nop    DWORD PTR [rax+0x0]
  402b70:	endbr64 
  402b74:	cmp    BYTE PTR [rip+0xe345],0x0        # 410ec0 <memcpy@plt+0xe4d0>
  402b7b:	jne    402b90 <memcpy@plt+0x1a0>
  402b7d:	push   rbp
  402b7e:	mov    rbp,rsp
  402b81:	call   402b00 <memcpy@plt+0x110>
  402b86:	mov    BYTE PTR [rip+0xe333],0x1        # 410ec0 <memcpy@plt+0xe4d0>
  402b8d:	pop    rbp
  402b8e:	ret    
  402b8f:	nop
  402b90:	ret    
  402b91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	endbr64 
  402ba4:	jmp    402b30 <memcpy@plt+0x140>
  402ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bb0:	endbr64 
  402bb4:	ret    
  402bb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402bc0:	endbr64 
  402bc4:	push   rax
  402bc5:	pop    rax
  402bc6:	mov    edi,0x1
  402bcb:	sub    rsp,0x8
  402bcf:	call   4025b0 <exit@plt>
  402bd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402bdf:	nop
  402be0:	endbr64 
  402be4:	push   rbp
  402be5:	mov    rbp,rdi
  402be8:	push   rbx
  402be9:	lea    rbx,[rip+0xe370]        # 410f60 <memcpy@plt+0xe570>
  402bf0:	sub    rsp,0x8
  402bf4:	nop    DWORD PTR [rax+0x0]
  402bf8:	mov    edx,0x4000
  402bfd:	mov    rsi,rbx
  402c00:	mov    rdi,rbp
  402c03:	call   402890 <rb_helper_read@plt>
  402c08:	test   eax,eax
  402c0a:	jle    402c50 <memcpy@plt+0x260>
  402c0c:	mov    edx,0xa
  402c11:	lea    rsi,[rip+0xe2e8]        # 410f00 <memcpy@plt+0xe510>
  402c18:	mov    rdi,rbx
  402c1b:	call   402700 <rb_string_to_array@plt>
  402c20:	test   eax,eax
  402c22:	jle    402bf8 <memcpy@plt+0x208>
  402c24:	mov    rdx,QWORD PTR [rip+0xe2d5]        # 410f00 <memcpy@plt+0xe510>
  402c2b:	movzx  ecx,BYTE PTR [rdx]
  402c2e:	mov    rdx,0x4102c0
  402c35:	mov    rdx,QWORD PTR [rdx+rcx*8]
  402c39:	test   rdx,rdx
  402c3c:	je     402bf8 <memcpy@plt+0x208>
  402c3e:	lea    rsi,[rip+0xe2bb]        # 410f00 <memcpy@plt+0xe510>
  402c45:	mov    edi,eax
  402c47:	call   rdx
  402c49:	jmp    402bf8 <memcpy@plt+0x208>
  402c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c50:	add    rsp,0x8
  402c54:	pop    rbx
  402c55:	pop    rbp
  402c56:	ret    
  402c57:	nop    WORD PTR [rax+rax*1+0x0]
  402c60:	push   rbp
  402c61:	push   rbx
  402c62:	sub    rsp,0xa8
  402c69:	mov    rbx,rsp
  402c6c:	lea    rbp,[rbx+0x8]
  402c70:	mov    rdi,rbp
  402c73:	mov    rax,QWORD PTR fs:0x28
  402c7c:	mov    QWORD PTR [rsp+0x98],rax
  402c84:	xor    eax,eax
  402c86:	mov    DWORD PTR [rsp+0x88],0x0
  402c91:	mov    QWORD PTR [rsp],0x1
  402c99:	call   402990 <sigemptyset@plt>
  402c9e:	mov    esi,0xd
  402ca3:	mov    rdi,rbp
  402ca6:	call   402870 <sigaddset@plt>
  402cab:	mov    esi,0xe
  402cb0:	mov    rdi,rbp
  402cb3:	call   402870 <sigaddset@plt>
  402cb8:	mov    esi,0x5
  402cbd:	mov    rdi,rbp
  402cc0:	call   402870 <sigaddset@plt>
  402cc5:	mov    esi,0x1c
  402cca:	mov    rdi,rbp
  402ccd:	call   402870 <sigaddset@plt>
  402cd2:	xor    edx,edx
  402cd4:	mov    rsi,rbx
  402cd7:	mov    edi,0x1c
  402cdc:	call   4027b0 <sigaction@plt>
  402ce1:	xor    edx,edx
  402ce3:	mov    rsi,rbx
  402ce6:	mov    edi,0xd
  402ceb:	call   4027b0 <sigaction@plt>
  402cf0:	xor    edx,edx
  402cf2:	mov    rsi,rbx
  402cf5:	mov    edi,0x5
  402cfa:	call   4027b0 <sigaction@plt>
  402cff:	lea    rax,[rip+0xfffffffffffffeaa]        # 402bb0 <memcpy@plt+0x1c0>
  402d06:	xor    edx,edx
  402d08:	mov    rsi,rbx
  402d0b:	mov    edi,0xe
  402d10:	mov    QWORD PTR [rsp],rax
  402d14:	call   4027b0 <sigaction@plt>
  402d19:	mov    rax,QWORD PTR [rsp+0x98]
  402d21:	xor    rax,QWORD PTR fs:0x28
  402d2a:	jne    402d36 <memcpy@plt+0x346>
  402d2c:	add    rsp,0xa8
  402d33:	pop    rbx
  402d34:	pop    rbp
  402d35:	ret    
  402d36:	call   402880 <__stack_chk_fail@plt>
  402d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d40:	endbr64 
  402d44:	cmp    edi,0x2
  402d47:	jle    402d65 <memcpy@plt+0x375>
  402d49:	mov    rax,QWORD PTR [rsi+0x8]
  402d4d:	mov    rdx,0x40f2c0
  402d54:	movzx  ecx,BYTE PTR [rax]
  402d57:	mov    rdx,QWORD PTR [rdx+rcx*8]
  402d5b:	test   rdx,rdx
  402d5e:	je     402d9c <memcpy@plt+0x3ac>
  402d60:	movsx  edi,cl
  402d63:	jmp    rdx
  402d65:	push   rbp
  402d66:	push   rbx
  402d67:	sub    rsp,0x8
  402d6b:	mov    rbx,0x40f2c0
  402d72:	lea    rbp,[rbx+0x800]
  402d79:	nop    DWORD PTR [rax+0x0]
  402d80:	mov    rax,QWORD PTR [rbx]
  402d83:	test   rax,rax
  402d86:	je     402d8c <memcpy@plt+0x39c>
  402d88:	xor    edi,edi
  402d8a:	call   rax
  402d8c:	add    rbx,0x8
  402d90:	cmp    rbx,rbp
  402d93:	jne    402d80 <memcpy@plt+0x390>
  402d95:	add    rsp,0x8
  402d99:	pop    rbx
  402d9a:	pop    rbp
  402d9b:	ret    
  402d9c:	ret    
  402d9d:	nop    DWORD PTR [rax]
  402da0:	endbr64 
  402da4:	cmp    edi,0x2
  402da7:	jle    402df0 <memcpy@plt+0x400>
  402da9:	push   rbx
  402daa:	mov    edx,0x10
  402daf:	mov    rbx,rsi
  402db2:	mov    rdi,QWORD PTR [rsi+0x8]
  402db6:	xor    esi,esi
  402db8:	call   402940 <strtoull@plt>
  402dbd:	mov    edx,0xffffffff
  402dc2:	cmp    rax,rdx
  402dc5:	ja     402e10 <memcpy@plt+0x420>
  402dc7:	mov    rdx,QWORD PTR [rbx+0x10]
  402dcb:	movzx  ecx,BYTE PTR [rdx]
  402dce:	mov    rdx,0x40fac0
  402dd5:	mov    rdx,QWORD PTR [rdx+rcx*8]
  402dd9:	test   rdx,rdx
  402ddc:	je     402e08 <memcpy@plt+0x418>
  402dde:	movsx  esi,cl
  402de1:	mov    edi,eax
  402de3:	pop    rbx
  402de4:	jmp    rdx
  402de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402df0:	mov    edx,edi
  402df2:	lea    rsi,[rip+0x820f]        # 40b008 <memcpy@plt+0x8618>
  402df9:	mov    edi,0x43
  402dfe:	xor    eax,eax
  402e00:	jmp    403730 <memcpy@plt+0xd40>
  402e05:	nop    DWORD PTR [rax]
  402e08:	pop    rbx
  402e09:	ret    
  402e0a:	nop    WORD PTR [rax+rax*1+0x0]
  402e10:	mov    rdx,QWORD PTR [rbx+0x8]
  402e14:	lea    rsi,[rip+0x823d]        # 40b058 <memcpy@plt+0x8668>
  402e1b:	mov    edi,0x43
  402e20:	xor    eax,eax
  402e22:	pop    rbx
  402e23:	jmp    403730 <memcpy@plt+0xd40>
  402e28:	nop    DWORD PTR [rax+rax*1+0x0]
  402e30:	endbr64 
  402e34:	cmp    edi,0x1
  402e37:	jle    402e80 <memcpy@plt+0x490>
  402e39:	push   rbp
  402e3a:	mov    rbp,rsi
  402e3d:	push   rbx
  402e3e:	mov    ebx,edi
  402e40:	sub    rsp,0x8
  402e44:	mov    rax,0x4151e8
  402e4b:	mov    rsi,QWORD PTR [rsi+0x8]
  402e4f:	mov    rdi,QWORD PTR [rax]
  402e52:	call   402820 <rb_dictionary_retrieve@plt>
  402e57:	test   rax,rax
  402e5a:	je     402eb8 <memcpy@plt+0x4c8>
  402e5c:	mov    edx,DWORD PTR [rax+0x8]
  402e5f:	lea    ecx,[rbx-0x1]
  402e62:	cmp    ecx,edx
  402e64:	jle    402e98 <memcpy@plt+0x4a8>
  402e66:	mov    rdi,QWORD PTR [rbp+0x8]
  402e6a:	mov    rax,QWORD PTR [rax+0x10]
  402e6e:	add    rsp,0x8
  402e72:	lea    esi,[rbx-0x2]
  402e75:	pop    rbx
  402e76:	lea    rdx,[rbp+0x10]
  402e7a:	pop    rbp
  402e7b:	jmp    rax
  402e7d:	nop    DWORD PTR [rax]
  402e80:	mov    edx,edi
  402e82:	lea    rsi,[rip+0x8207]        # 40b090 <memcpy@plt+0x86a0>
  402e89:	mov    edi,0x43
  402e8e:	xor    eax,eax
  402e90:	jmp    403730 <memcpy@plt+0xd40>
  402e95:	nop    DWORD PTR [rax]
  402e98:	add    rsp,0x8
  402e9c:	mov    ecx,ebx
  402e9e:	pop    rbx
  402e9f:	lea    rsi,[rip+0x826a]        # 40b110 <memcpy@plt+0x8720>
  402ea6:	mov    edi,0x43
  402eab:	xor    eax,eax
  402ead:	pop    rbp
  402eae:	jmp    403730 <memcpy@plt+0xd40>
  402eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  402eb8:	mov    rdx,QWORD PTR [rbp+0x8]
  402ebc:	add    rsp,0x8
  402ec0:	pop    rbx
  402ec1:	lea    rsi,[rip+0x8218]        # 40b0e0 <memcpy@plt+0x86f0>
  402ec8:	mov    edi,0x43
  402ecd:	pop    rbp
  402ece:	jmp    403730 <memcpy@plt+0xd40>
  402ed3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402edd:	nop    DWORD PTR [rax]
  402ee0:	endbr64 
  402ee4:	push   rbp
  402ee5:	vpxor  xmm0,xmm0,xmm0
  402ee9:	push   rbx
  402eea:	sub    rsp,0x48
  402eee:	mov    rax,QWORD PTR fs:0x28
  402ef7:	mov    QWORD PTR [rsp+0x38],rax
  402efc:	xor    eax,eax
  402efe:	mov    QWORD PTR [rsp],0x2a
  402f06:	mov    QWORD PTR [rsp+0x8],0x0
  402f0f:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  402f15:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  402f1b:	mov    DWORD PTR [rsp+0x30],0x0
  402f23:	mov    BYTE PTR [rsp+0x34],0x0
  402f28:	test   rdi,rdi
  402f2b:	je     403033 <memcpy@plt+0x643>
  402f31:	mov    rbx,rdi
  402f34:	test   rsi,rsi
  402f37:	je     402f51 <memcpy@plt+0x561>
  402f39:	mov    edx,DWORD PTR [rdi+0x10]
  402f3c:	cmp    edx,0x34
  402f3f:	je     402fa0 <memcpy@plt+0x5b0>
  402f41:	cmp    edx,0x36
  402f44:	jne    403053 <memcpy@plt+0x663>
  402f4a:	cmp    WORD PTR [rsi+0x8],0xa
  402f4f:	je     402fc0 <memcpy@plt+0x5d0>
  402f51:	mov    rax,QWORD PTR [rbx+0xa0]
  402f58:	test   rax,rax
  402f5b:	je     402f78 <memcpy@plt+0x588>
  402f5d:	cmp    BYTE PTR [rsp],0x2a
  402f61:	setne  sil
  402f65:	mov    rcx,QWORD PTR [rbx+0xa8]
  402f6c:	mov    edx,DWORD PTR [rbx+0x10]
  402f6f:	mov    rdi,rsp
  402f72:	movzx  esi,sil
  402f76:	call   rax
  402f78:	mov    rax,QWORD PTR [rsp+0x38]
  402f7d:	xor    rax,QWORD PTR fs:0x28
  402f86:	jne    40304e <memcpy@plt+0x65e>
  402f8c:	add    rsp,0x48
  402f90:	mov    rdi,rbx
  402f93:	pop    rbx
  402f94:	pop    rbp
  402f95:	jmp    4026e0 <free@plt>
  402f9a:	nop    WORD PTR [rax+rax*1+0x0]
  402fa0:	cmp    WORD PTR [rsi+0x8],0x2
  402fa5:	jne    402f51 <memcpy@plt+0x561>
  402fa7:	mov    rax,rsp
  402faa:	lea    rdi,[rsi+0x8]
  402fae:	mov    edx,0x35
  402fb3:	mov    rsi,rax
  402fb6:	call   4028b0 <rb_inet_ntop_sock@plt>
  402fbb:	jmp    402f51 <memcpy@plt+0x561>
  402fbd:	nop    DWORD PTR [rax]
  402fc0:	mov    rbp,rsp
  402fc3:	lea    rdi,[rsi+0x8]
  402fc7:	mov    edx,0x35
  402fcc:	mov    rsi,rbp
  402fcf:	call   4028b0 <rb_inet_ntop_sock@plt>
  402fd4:	cmp    BYTE PTR [rsp],0x3a
  402fd8:	jne    402f51 <memcpy@plt+0x561>
  402fde:	mov    rdx,rbp
  402fe1:	mov    ecx,DWORD PTR [rdx]
  402fe3:	add    rdx,0x4
  402fe7:	lea    eax,[rcx-0x1010101]
  402fed:	andn   eax,ecx,eax
  402ff2:	and    eax,0x80808080
  402ff7:	je     402fe1 <memcpy@plt+0x5f1>
  402ff9:	mov    ecx,eax
  402ffb:	shr    ecx,0x10
  402ffe:	test   eax,0x8080
  403003:	cmove  eax,ecx
  403006:	lea    rcx,[rdx+0x2]
  40300a:	cmove  rdx,rcx
  40300e:	mov    ecx,eax
  403010:	add    cl,al
  403012:	sbb    rdx,0x3
  403016:	sub    rdx,rbp
  403019:	lea    rdi,[rbp+0x1]
  40301d:	mov    ecx,0x34
  403022:	mov    rsi,rbp
  403025:	call   4029e0 <__memmove_chk@plt>
  40302a:	mov    BYTE PTR [rsp],0x30
  40302e:	jmp    402f51 <memcpy@plt+0x561>
  403033:	mov    edi,0x43
  403038:	lea    rsi,[rip+0x8169]        # 40b1a8 <memcpy@plt+0x87b8>
  40303f:	call   403730 <memcpy@plt+0xd40>
  403044:	mov    edi,0x2
  403049:	call   4025b0 <exit@plt>
  40304e:	call   402880 <__stack_chk_fail@plt>
  403053:	mov    edi,0x43
  403058:	lea    rsi,[rip+0x8179]        # 40b1d8 <memcpy@plt+0x87e8>
  40305f:	xor    eax,eax
  403061:	call   403730 <memcpy@plt+0xd40>
  403066:	mov    edi,0x2
  40306b:	call   4025b0 <exit@plt>
  403070:	endbr64 
  403074:	push   rbx
  403075:	mov    rbx,rdi
  403078:	test   rdi,rdi
  40307b:	je     4030e5 <memcpy@plt+0x6f5>
  40307d:	mov    rdi,rsi
  403080:	test   rsi,rsi
  403083:	je     4030a9 <memcpy@plt+0x6b9>
  403085:	mov    edx,DWORD PTR [rbx+0x10]
  403088:	cmp    edx,0x52
  40308b:	je     4030d8 <memcpy@plt+0x6e8>
  40308d:	cmp    edx,0x53
  403090:	jne    403102 <memcpy@plt+0x712>
  403092:	mov    rax,QWORD PTR [rbx+0x20]
  403096:	mov    rdx,QWORD PTR [rbx+0x28]
  40309a:	xor    rax,QWORD PTR [rsi+0x10]
  40309e:	xor    rdx,QWORD PTR [rsi+0x18]
  4030a2:	or     rdx,rax
  4030a5:	je     4030e0 <memcpy@plt+0x6f0>
  4030a7:	xor    edi,edi
  4030a9:	mov    rax,QWORD PTR [rbx+0xa0]
  4030b0:	test   rax,rax
  4030b3:	je     4030ca <memcpy@plt+0x6da>
  4030b5:	xor    esi,esi
  4030b7:	mov    rcx,QWORD PTR [rbx+0xa8]
  4030be:	test   rdi,rdi
  4030c1:	mov    edx,DWORD PTR [rbx+0x10]
  4030c4:	setne  sil
  4030c8:	call   rax
  4030ca:	mov    rdi,rbx
  4030cd:	pop    rbx
  4030ce:	jmp    4026e0 <free@plt>
  4030d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4030d8:	mov    eax,DWORD PTR [rsi+0xc]
  4030db:	cmp    DWORD PTR [rbx+0x1c],eax
  4030de:	jne    4030a7 <memcpy@plt+0x6b7>
  4030e0:	mov    rdi,QWORD PTR [rdi]
  4030e3:	jmp    4030a9 <memcpy@plt+0x6b9>
  4030e5:	mov    edi,0x43
  4030ea:	lea    rsi,[rip+0x811f]        # 40b210 <memcpy@plt+0x8820>
  4030f1:	xor    eax,eax
  4030f3:	call   403730 <memcpy@plt+0xd40>
  4030f8:	mov    edi,0x2
  4030fd:	call   4025b0 <exit@plt>
  403102:	mov    edi,0x43
  403107:	lea    rsi,[rip+0x813a]        # 40b248 <memcpy@plt+0x8858>
  40310e:	xor    eax,eax
  403110:	call   403730 <memcpy@plt+0xd40>
  403115:	mov    edi,0x2
  40311a:	call   4025b0 <exit@plt>
  40311f:	nop
  403120:	endbr64 
  403124:	push   rbx
  403125:	test   rcx,rcx
  403128:	je     40317f <memcpy@plt+0x78f>
  40312a:	test   edx,edx
  40312c:	je     40317f <memcpy@plt+0x78f>
  40312e:	mov    rax,0x410ee0
  403135:	mov    rbx,rcx
  403138:	mov    r8,rdi
  40313b:	mov    ecx,edx
  40313d:	mov    rdi,QWORD PTR [rax]
  403140:	mov    rdx,rbx
  403143:	test   r8,r8
  403146:	je     403168 <memcpy@plt+0x778>
  403148:	cmp    sil,0x1
  40314c:	jne    403168 <memcpy@plt+0x778>
  40314e:	lea    rsi,[rip+0x81a0]        # 40b2f5 <memcpy@plt+0x8905>
  403155:	xor    eax,eax
  403157:	call   402900 <rb_helper_write@plt>
  40315c:	mov    rdi,rbx
  40315f:	pop    rbx
  403160:	jmp    4026e0 <free@plt>
  403165:	nop    DWORD PTR [rax]
  403168:	lea    rsi,[rip+0x817a]        # 40b2e9 <memcpy@plt+0x88f9>
  40316f:	xor    eax,eax
  403171:	call   402900 <rb_helper_write@plt>
  403176:	mov    rdi,rbx
  403179:	pop    rbx
  40317a:	jmp    4026e0 <free@plt>
  40317f:	mov    edi,0x43
  403184:	lea    rsi,[rip+0x80fd]        # 40b288 <memcpy@plt+0x8898>
  40318b:	xor    eax,eax
  40318d:	call   403730 <memcpy@plt+0xd40>
  403192:	mov    edi,0x2
  403197:	call   4025b0 <exit@plt>
  40319c:	nop    DWORD PTR [rax+0x0]
  4031a0:	endbr64 
  4031a4:	push   r13
  4031a6:	mov    r13,rdx
  4031a9:	push   r12
  4031ab:	mov    r12,rcx
  4031ae:	push   rbp
  4031af:	mov    rbp,rdi
  4031b2:	mov    edi,0x1
  4031b7:	push   rbx
  4031b8:	mov    ebx,esi
  4031ba:	mov    esi,0xb0
  4031bf:	sub    rsp,0x18
  4031c3:	call   4028f0 <calloc@plt>
  4031c8:	test   rax,rax
  4031cb:	je     403268 <memcpy@plt+0x878>
  4031d1:	cmp    ebx,0x2
  4031d4:	je     403240 <memcpy@plt+0x850>
  4031d6:	cmp    ebx,0xa
  4031d9:	jne    403250 <memcpy@plt+0x860>
  4031db:	mov    DWORD PTR [rax+0x10],0x36
  4031e2:	mov    edx,0x1c
  4031e7:	mov    rdi,0x414f60
  4031ee:	mov    QWORD PTR [rax+0xa0],r13
  4031f5:	mov    rsi,QWORD PTR [rdi]
  4031f8:	mov    QWORD PTR [rax+0xa8],r12
  4031ff:	lea    rcx,[rsi+0x1]
  403203:	mov    QWORD PTR [rdi],rcx
  403206:	lea    rcx,[rip+0xfffffffffffffcd3]        # 402ee0 <memcpy@plt+0x4f0>
  40320d:	mov    QWORD PTR [rax+0x98],rsi
  403214:	mov    QWORD PTR [rax],rax
  403217:	mov    QWORD PTR [rax+0x8],rcx
  40321b:	mov    rsi,rax
  40321e:	mov    rdi,rbp
  403221:	mov    QWORD PTR [rsp+0x8],rax
  403226:	call   404d50 <memcpy@plt+0x2360>
  40322b:	mov    rax,QWORD PTR [rsp+0x8]
  403230:	add    rsp,0x18
  403234:	pop    rbx
  403235:	pop    rbp
  403236:	pop    r12
  403238:	pop    r13
  40323a:	ret    
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]
  403240:	mov    DWORD PTR [rax+0x10],0x34
  403247:	mov    edx,0x1
  40324c:	jmp    4031e7 <memcpy@plt+0x7f7>
  40324e:	xchg   ax,ax
  403250:	mov    rdi,rax
  403253:	call   4026e0 <free@plt>
  403258:	add    rsp,0x18
  40325c:	pop    rbx
  40325d:	pop    rbp
  40325e:	pop    r12
  403260:	xor    eax,eax
  403262:	pop    r13
  403264:	ret    
  403265:	nop    DWORD PTR [rax]
  403268:	call   402830 <rb_outofmemory@plt>
  40326d:	nop    DWORD PTR [rax]
  403270:	endbr64 
  403274:	push   r14
  403276:	mov    r14,rdi
  403279:	mov    edi,0x1
  40327e:	push   r13
  403280:	mov    r13,rsi
  403283:	mov    esi,0xb0
  403288:	push   r12
  40328a:	mov    r12,rdx
  40328d:	push   rbp
  40328e:	push   rbx
  40328f:	call   4028f0 <calloc@plt>
  403294:	test   rax,rax
  403297:	je     403340 <memcpy@plt+0x950>
  40329d:	lea    rbp,[rax+0x18]
  4032a1:	mov    rsi,rbp
  4032a4:	mov    rdi,r14
  4032a7:	mov    rbx,rax
  4032aa:	call   402740 <rb_inet_pton_sock@plt>
  4032af:	test   eax,eax
  4032b1:	je     403328 <memcpy@plt+0x938>
  4032b3:	movzx  eax,WORD PTR [rbx+0x18]
  4032b7:	cmp    eax,0x2
  4032ba:	je     403318 <memcpy@plt+0x928>
  4032bc:	cmp    eax,0xa
  4032bf:	jne    403328 <memcpy@plt+0x938>
  4032c1:	mov    DWORD PTR [rbx+0x10],0x53
  4032c8:	mov    rdx,0x414f60
  4032cf:	mov    QWORD PTR [rbx+0xa0],r13
  4032d6:	mov    rax,QWORD PTR [rdx]
  4032d9:	mov    QWORD PTR [rbx+0xa8],r12
  4032e0:	lea    rcx,[rax+0x1]
  4032e4:	mov    QWORD PTR [rbx+0x98],rax
  4032eb:	lea    rax,[rip+0xfffffffffffffd7e]        # 403070 <memcpy@plt+0x680>
  4032f2:	mov    QWORD PTR [rbx+0x8],rax
  4032f6:	mov    QWORD PTR [rbx],rbx
  4032f9:	mov    rsi,rbx
  4032fc:	mov    rdi,rbp
  4032ff:	mov    QWORD PTR [rdx],rcx
  403302:	call   405940 <memcpy@plt+0x2f50>
  403307:	mov    rax,rbx
  40330a:	pop    rbx
  40330b:	pop    rbp
  40330c:	pop    r12
  40330e:	pop    r13
  403310:	pop    r14
  403312:	ret    
  403313:	nop    DWORD PTR [rax+rax*1+0x0]
  403318:	mov    DWORD PTR [rbx+0x10],0x52
  40331f:	jmp    4032c8 <memcpy@plt+0x8d8>
  403321:	nop    DWORD PTR [rax+0x0]
  403328:	mov    rdi,rbx
  40332b:	xor    ebx,ebx
  40332d:	call   4026e0 <free@plt>
  403332:	mov    rax,rbx
  403335:	pop    rbx
  403336:	pop    rbp
  403337:	pop    r12
  403339:	pop    r13
  40333b:	pop    r14
  40333d:	ret    
  40333e:	xchg   ax,ax
  403340:	call   402830 <rb_outofmemory@plt>
  403345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403350:	endbr64 
  403354:	mov    QWORD PTR [rdi+0xa8],0x0
  40335f:	mov    QWORD PTR [rdi+0xa0],0x0
  40336a:	ret    
  40336b:	nop    DWORD PTR [rax+rax*1+0x0]
  403370:	endbr64 
  403374:	push   r12
  403376:	push   rbp
  403377:	mov    rbp,rsi
  40337a:	push   rbx
  40337b:	mov    r12,QWORD PTR [rsi+0x8]
  40337f:	mov    rdi,r12
  403382:	call   4026f0 <strlen@plt>
  403387:	lea    rbx,[rax+0x1]
  40338b:	mov    rdi,rbx
  40338e:	call   402650 <malloc@plt>
  403393:	test   rax,rax
  403396:	je     403420 <memcpy@plt+0xa30>
  40339c:	mov    rdx,rbx
  40339f:	mov    rdi,rax
  4033a2:	mov    rsi,r12
  4033a5:	call   4029f0 <memcpy@plt>
  4033aa:	mov    rcx,rax
  4033ad:	mov    rax,QWORD PTR [rbp+0x10]
  4033b1:	mov    rdi,QWORD PTR [rbp+0x18]
  4033b5:	movzx  ebx,BYTE PTR [rax]
  4033b8:	cmp    bl,0x36
  4033bb:	je     403410 <memcpy@plt+0xa20>
  4033bd:	jg     4033e0 <memcpy@plt+0x9f0>
  4033bf:	cmp    bl,0x34
  4033c2:	jne    403425 <memcpy@plt+0xa35>
  4033c4:	mov    esi,0x2
  4033c9:	lea    rdx,[rip+0xfffffffffffffd50]        # 403120 <memcpy@plt+0x730>
  4033d0:	call   4031a0 <memcpy@plt+0x7b0>
  4033d5:	test   rax,rax
  4033d8:	je     4033fb <memcpy@plt+0xa0b>
  4033da:	pop    rbx
  4033db:	pop    rbp
  4033dc:	pop    r12
  4033de:	ret    
  4033df:	nop
  4033e0:	lea    eax,[rbx-0x52]
  4033e3:	cmp    al,0x1
  4033e5:	ja     403425 <memcpy@plt+0xa35>
  4033e7:	mov    rdx,rcx
  4033ea:	lea    rsi,[rip+0xfffffffffffffd2f]        # 403120 <memcpy@plt+0x730>
  4033f1:	call   403270 <memcpy@plt+0x880>
  4033f6:	test   rax,rax
  4033f9:	jne    4033da <memcpy@plt+0x9ea>
  4033fb:	movsx  edx,bl
  4033fe:	pop    rbx
  4033ff:	pop    rbp
  403400:	xor    ecx,ecx
  403402:	xor    esi,esi
  403404:	xor    edi,edi
  403406:	pop    r12
  403408:	jmp    403120 <memcpy@plt+0x730>
  40340d:	nop    DWORD PTR [rax]
  403410:	mov    esi,0xa
  403415:	jmp    4033c9 <memcpy@plt+0x9d9>
  403417:	nop    WORD PTR [rax+rax*1+0x0]
  403420:	call   402830 <rb_outofmemory@plt>
  403425:	mov    edi,0x43
  40342a:	movsx  edx,bl
  40342d:	lea    rsi,[rip+0x7e84]        # 40b2b8 <memcpy@plt+0x88c8>
  403434:	xor    eax,eax
  403436:	call   403730 <memcpy@plt+0xd40>
  40343b:	mov    edi,0x2
  403440:	call   4025b0 <exit@plt>
  403445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403450:	endbr64 
  403454:	push   r15
  403456:	push   r14
  403458:	push   r13
  40345a:	push   r12
  40345c:	push   rbp
  40345d:	push   rbx
  40345e:	sub    rsp,0x288
  403465:	mov    DWORD PTR [rsp+0xc],edi
  403469:	mov    r13,0x415010
  403470:	mov    rax,QWORD PTR fs:0x28
  403479:	mov    QWORD PTR [rsp+0x278],rax
  403481:	xor    eax,eax
  403483:	movsx  eax,sil
  403487:	mov    DWORD PTR [rsp+0x8],eax
  40348b:	mov    eax,DWORD PTR [r13+0x0]
  40348f:	test   eax,eax
  403491:	je     4035d4 <memcpy@plt+0xbe4>
  403497:	lea    r15,[rsp+0x50]
  40349c:	jle    403563 <memcpy@plt+0xb73>
  4034a2:	lea    rax,[rsp+0x50]
  4034a7:	mov    QWORD PTR [rsp],rax
  4034ab:	xor    ebp,ebp
  4034ad:	xor    r14d,r14d
  4034b0:	lea    r12,[rsp+0x10]
  4034b5:	nop    DWORD PTR [rax]
  4034b8:	mov    rdi,rbp
  4034bb:	shl    rdi,0x7
  4034bf:	add    rdi,0x415340
  4034c6:	mov    edx,0x35
  4034cb:	mov    rsi,r12
  4034ce:	call   4028b0 <rb_inet_ntop_sock@plt>
  4034d3:	cmp    BYTE PTR [rsp+0x10],0x0
  4034d8:	je     4035a1 <memcpy@plt+0xbb1>
  4034de:	mov    rbx,r12
  4034e1:	mov    edx,DWORD PTR [rbx]
  4034e3:	add    rbx,0x4
  4034e7:	lea    eax,[rdx-0x1010101]
  4034ed:	andn   eax,edx,eax
  4034f2:	and    eax,0x80808080
  4034f7:	je     4034e1 <memcpy@plt+0xaf1>
  4034f9:	mov    edx,eax
  4034fb:	shr    edx,0x10
  4034fe:	test   eax,0x8080
  403503:	cmove  eax,edx
  403506:	lea    rdx,[rbx+0x2]
  40350a:	cmove  rbx,rdx
  40350e:	mov    ecx,eax
  403510:	add    cl,al
  403512:	mov    r15,QWORD PTR [rsp]
  403516:	sbb    rbx,0x3
  40351a:	mov    esi,0x21c
  40351f:	sub    rsi,r14
  403522:	lea    rdi,[r15+r14*1]
  403526:	sub    rbx,r12
  403529:	mov    r9,r12
  40352c:	lea    r8,[rip+0x7e1a]        # 40b34d <memcpy@plt+0x895d>
  403533:	mov    rcx,0xffffffffffffffff
  40353a:	mov    edx,0x1
  40353f:	xor    eax,eax
  403541:	inc    rbp
  403544:	call   402970 <__snprintf_chk@plt>
  403549:	lea    r14,[rbx+r14*1+0x1]
  40354e:	cmp    DWORD PTR [r13+0x0],ebp
  403552:	jg     4034b8 <memcpy@plt+0xac8>
  403558:	test   r14,r14
  40355b:	je     403563 <memcpy@plt+0xb73>
  40355d:	mov    BYTE PTR [rsp+r14*1+0x4f],0x0
  403563:	mov    esi,DWORD PTR [rsp+0x8]
  403567:	mov    edi,DWORD PTR [rsp+0xc]
  40356b:	xor    eax,eax
  40356d:	mov    rcx,r15
  403570:	lea    rdx,[rip+0x8763]        # 40bcda <memcpy@plt+0x92ea>
  403577:	call   403850 <memcpy@plt+0xe60>
  40357c:	mov    rax,QWORD PTR [rsp+0x278]
  403584:	xor    rax,QWORD PTR fs:0x28
  40358d:	jne    4035f0 <memcpy@plt+0xc00>
  40358f:	add    rsp,0x288
  403596:	pop    rbx
  403597:	pop    rbp
  403598:	pop    r12
  40359a:	pop    r13
  40359c:	pop    r14
  40359e:	pop    r15
  4035a0:	ret    
  4035a1:	lea    rsi,[rip+0x7d7e]        # 40b326 <memcpy@plt+0x8936>
  4035a8:	mov    edi,0x43
  4035ad:	xor    eax,eax
  4035af:	call   403730 <memcpy@plt+0xd40>
  4035b4:	lea    rdx,[rip+0x7d80]        # 40b33b <memcpy@plt+0x894b>
  4035bb:	mov    edi,DWORD PTR [rsp+0xc]
  4035bf:	mov    esi,DWORD PTR [rsp+0x8]
  4035c3:	xor    eax,eax
  4035c5:	call   403970 <memcpy@plt+0xf80>
  4035ca:	mov    edi,0x2
  4035cf:	call   4025b0 <exit@plt>
  4035d4:	lea    rsi,[rip+0x7d27]        # 40b302 <memcpy@plt+0x8912>
  4035db:	mov    edi,0x43
  4035e0:	xor    eax,eax
  4035e2:	call   403730 <memcpy@plt+0xd40>
  4035e7:	lea    rdx,[rip+0x7d2a]        # 40b318 <memcpy@plt+0x8928>
  4035ee:	jmp    4035bb <memcpy@plt+0xbcb>
  4035f0:	call   402880 <__stack_chk_fail@plt>
  4035f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403600:	endbr64 
  403604:	jmp    404d10 <memcpy@plt+0x2320>
  403609:	nop    DWORD PTR [rax+0x0]
  403610:	endbr64 
  403614:	push   rbp
  403615:	mov    ebp,edi
  403617:	push   rbx
  403618:	sub    rsp,0x2e8
  40361f:	mov    QWORD PTR [rsp+0x240],rdx
  403627:	mov    QWORD PTR [rsp+0x248],rcx
  40362f:	mov    QWORD PTR [rsp+0x250],r8
  403637:	mov    QWORD PTR [rsp+0x258],r9
  40363f:	test   al,al
  403641:	je     40368b <memcpy@plt+0xc9b>
  403643:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  40364c:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  403655:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  40365e:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403667:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  403670:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403679:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  403682:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  40368b:	mov    rax,QWORD PTR fs:0x28
  403694:	mov    QWORD PTR [rsp+0x228],rax
  40369c:	xor    eax,eax
  40369e:	lea    rbx,[rsp+0x20]
  4036a3:	lea    rax,[rsp+0x300]
  4036ab:	mov    r8,rsi
  4036ae:	mov    QWORD PTR [rsp+0x10],rax
  4036b3:	lea    r9,[rsp+0x8]
  4036b8:	lea    rax,[rsp+0x230]
  4036c0:	mov    ecx,0x200
  4036c5:	mov    edx,0x1
  4036ca:	mov    esi,0x200
  4036cf:	mov    rdi,rbx
  4036d2:	mov    DWORD PTR [rsp+0x8],0x10
  4036da:	mov    DWORD PTR [rsp+0xc],0x30
  4036e2:	mov    QWORD PTR [rsp+0x18],rax
  4036e7:	call   4026a0 <__vsnprintf_chk@plt>
  4036ec:	mov    rax,0x410ee0
  4036f3:	mov    rcx,rbx
  4036f6:	mov    rdi,QWORD PTR [rax]
  4036f9:	mov    edx,ebp
  4036fb:	xor    eax,eax
  4036fd:	lea    rsi,[rip+0x7c4d]        # 40b351 <memcpy@plt+0x8961>
  403704:	call   402900 <rb_helper_write@plt>
  403709:	mov    rax,QWORD PTR [rsp+0x228]
  403711:	xor    rax,QWORD PTR fs:0x28
  40371a:	jne    403726 <memcpy@plt+0xd36>
  40371c:	add    rsp,0x2e8
  403723:	pop    rbx
  403724:	pop    rbp
  403725:	ret    
  403726:	call   402880 <__stack_chk_fail@plt>
  40372b:	nop    DWORD PTR [rax+rax*1+0x0]
  403730:	endbr64 
  403734:	push   rbp
  403735:	mov    ebp,edi
  403737:	push   rbx
  403738:	sub    rsp,0x2e8
  40373f:	mov    QWORD PTR [rsp+0x240],rdx
  403747:	mov    QWORD PTR [rsp+0x248],rcx
  40374f:	mov    QWORD PTR [rsp+0x250],r8
  403757:	mov    QWORD PTR [rsp+0x258],r9
  40375f:	test   al,al
  403761:	je     4037ab <memcpy@plt+0xdbb>
  403763:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  40376c:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  403775:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  40377e:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403787:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  403790:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403799:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  4037a2:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  4037ab:	mov    rax,QWORD PTR fs:0x28
  4037b4:	mov    QWORD PTR [rsp+0x228],rax
  4037bc:	xor    eax,eax
  4037be:	lea    rbx,[rsp+0x20]
  4037c3:	lea    rax,[rsp+0x300]
  4037cb:	mov    r8,rsi
  4037ce:	mov    QWORD PTR [rsp+0x10],rax
  4037d3:	lea    r9,[rsp+0x8]
  4037d8:	lea    rax,[rsp+0x230]
  4037e0:	mov    ecx,0x200
  4037e5:	mov    edx,0x1
  4037ea:	mov    esi,0x200
  4037ef:	mov    rdi,rbx
  4037f2:	mov    DWORD PTR [rsp+0x8],0x10
  4037fa:	mov    DWORD PTR [rsp+0xc],0x30
  403802:	mov    QWORD PTR [rsp+0x18],rax
  403807:	call   4026a0 <__vsnprintf_chk@plt>
  40380c:	mov    rax,0x410ee0
  403813:	mov    rcx,rbx
  403816:	mov    rdi,QWORD PTR [rax]
  403819:	mov    edx,ebp
  40381b:	xor    eax,eax
  40381d:	lea    rsi,[rip+0x7b36]        # 40b35a <memcpy@plt+0x896a>
  403824:	call   402900 <rb_helper_write@plt>
  403829:	mov    rax,QWORD PTR [rsp+0x228]
  403831:	xor    rax,QWORD PTR fs:0x28
  40383a:	jne    403846 <memcpy@plt+0xe56>
  40383c:	add    rsp,0x2e8
  403843:	pop    rbx
  403844:	pop    rbp
  403845:	ret    
  403846:	call   402880 <__stack_chk_fail@plt>
  40384b:	nop    DWORD PTR [rax+rax*1+0x0]
  403850:	endbr64 
  403854:	push   r12
  403856:	mov    r12d,edi
  403859:	push   rbp
  40385a:	push   rbx
  40385b:	mov    ebx,esi
  40385d:	sub    rsp,0x2e0
  403864:	mov    QWORD PTR [rsp+0x248],rcx
  40386c:	mov    QWORD PTR [rsp+0x250],r8
  403874:	mov    QWORD PTR [rsp+0x258],r9
  40387c:	test   al,al
  40387e:	je     4038c8 <memcpy@plt+0xed8>
  403880:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  403889:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  403892:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  40389b:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  4038a4:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  4038ad:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  4038b6:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  4038bf:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  4038c8:	mov    rax,QWORD PTR fs:0x28
  4038d1:	mov    QWORD PTR [rsp+0x228],rax
  4038d9:	xor    eax,eax
  4038db:	lea    rbp,[rsp+0x20]
  4038e0:	lea    rax,[rsp+0x300]
  4038e8:	mov    r8,rdx
  4038eb:	mov    QWORD PTR [rsp+0x10],rax
  4038f0:	lea    r9,[rsp+0x8]
  4038f5:	lea    rax,[rsp+0x230]
  4038fd:	mov    ecx,0x200
  403902:	mov    edx,0x1
  403907:	mov    esi,0x200
  40390c:	mov    rdi,rbp
  40390f:	mov    DWORD PTR [rsp+0x8],0x18
  403917:	mov    DWORD PTR [rsp+0xc],0x30
  40391f:	mov    QWORD PTR [rsp+0x18],rax
  403924:	call   4026a0 <__vsnprintf_chk@plt>
  403929:	mov    rax,0x410ee0
  403930:	movsx  ecx,bl
  403933:	mov    rdi,QWORD PTR [rax]
  403936:	mov    r8,rbp
  403939:	xor    eax,eax
  40393b:	mov    edx,r12d
  40393e:	lea    rsi,[rip+0x7a1e]        # 40b363 <memcpy@plt+0x8973>
  403945:	call   402900 <rb_helper_write@plt>
  40394a:	mov    rax,QWORD PTR [rsp+0x228]
  403952:	xor    rax,QWORD PTR fs:0x28
  40395b:	jne    403969 <memcpy@plt+0xf79>
  40395d:	add    rsp,0x2e0
  403964:	pop    rbx
  403965:	pop    rbp
  403966:	pop    r12
  403968:	ret    
  403969:	call   402880 <__stack_chk_fail@plt>
  40396e:	xchg   ax,ax
  403970:	endbr64 
  403974:	push   r12
  403976:	mov    r12d,edi
  403979:	push   rbp
  40397a:	push   rbx
  40397b:	mov    ebx,esi
  40397d:	sub    rsp,0x2e0
  403984:	mov    QWORD PTR [rsp+0x248],rcx
  40398c:	mov    QWORD PTR [rsp+0x250],r8
  403994:	mov    QWORD PTR [rsp+0x258],r9
  40399c:	test   al,al
  40399e:	je     4039e8 <memcpy@plt+0xff8>
  4039a0:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  4039a9:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  4039b2:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  4039bb:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  4039c4:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  4039cd:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  4039d6:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  4039df:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  4039e8:	mov    rax,QWORD PTR fs:0x28
  4039f1:	mov    QWORD PTR [rsp+0x228],rax
  4039f9:	xor    eax,eax
  4039fb:	lea    rbp,[rsp+0x20]
  403a00:	lea    rax,[rsp+0x300]
  403a08:	mov    r8,rdx
  403a0b:	mov    QWORD PTR [rsp+0x10],rax
  403a10:	lea    r9,[rsp+0x8]
  403a15:	lea    rax,[rsp+0x230]
  403a1d:	mov    ecx,0x200
  403a22:	mov    edx,0x1
  403a27:	mov    esi,0x200
  403a2c:	mov    rdi,rbp
  403a2f:	mov    DWORD PTR [rsp+0x8],0x18
  403a37:	mov    DWORD PTR [rsp+0xc],0x30
  403a3f:	mov    QWORD PTR [rsp+0x18],rax
  403a44:	call   4026a0 <__vsnprintf_chk@plt>
  403a49:	mov    rax,0x410ee0
  403a50:	movsx  ecx,bl
  403a53:	mov    rdi,QWORD PTR [rax]
  403a56:	mov    r8,rbp
  403a59:	xor    eax,eax
  403a5b:	mov    edx,r12d
  403a5e:	lea    rsi,[rip+0x7909]        # 40b36e <memcpy@plt+0x897e>
  403a65:	call   402900 <rb_helper_write@plt>
  403a6a:	mov    rax,QWORD PTR [rsp+0x228]
  403a72:	xor    rax,QWORD PTR fs:0x28
  403a7b:	jne    403a89 <memcpy@plt+0x1099>
  403a7d:	add    rsp,0x2e0
  403a84:	pop    rbx
  403a85:	pop    rbp
  403a86:	pop    r12
  403a88:	ret    
  403a89:	call   402880 <__stack_chk_fail@plt>
  403a8e:	xchg   ax,ax
  403a90:	endbr64 
  403a94:	mov    rax,0x410ee0
  403a9b:	mov    edx,edi
  403a9d:	mov    rdi,QWORD PTR [rax]
  403aa0:	movsx  ecx,sil
  403aa4:	xor    eax,eax
  403aa6:	lea    rsi,[rip+0x78cc]        # 40b379 <memcpy@plt+0x8989>
  403aad:	jmp    402900 <rb_helper_write@plt>
  403ab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403abc:	nop    DWORD PTR [rax+0x0]
  403ac0:	endbr64 
  403ac4:	mov    eax,esi
  403ac6:	sub    eax,edi
  403ac8:	ret    
  403ac9:	nop    DWORD PTR [rax+0x0]
  403ad0:	endbr64 
  403ad4:	push   r12
  403ad6:	mov    rax,QWORD PTR [rip+0x114b3]        # 414f90 <memcpy@plt+0x125a0>
  403add:	push   rbp
  403ade:	mov    rbp,rdi
  403ae1:	push   rbx
  403ae2:	test   rax,rax
  403ae5:	jne    403ba8 <memcpy@plt+0x11b8>
  403aeb:	mov    eax,DWORD PTR [rip+0x11487]        # 414f78 <memcpy@plt+0x12588>
  403af1:	cmp    eax,0x20
  403af4:	je     403c18 <memcpy@plt+0x1228>
  403afa:	cmp    eax,0xffffffff
  403afd:	je     403c18 <memcpy@plt+0x1228>
  403b03:	lea    edx,[rax+0x1]
  403b06:	mov    DWORD PTR [rip+0x1146c],edx        # 414f78 <memcpy@plt+0x12588>
  403b0c:	mov    DWORD PTR [rdi+0x18],eax
  403b0f:	mov    rbx,QWORD PTR [rbp+0x70]
  403b13:	test   rbx,rbx
  403b16:	je     403b48 <memcpy@plt+0x1158>
  403b18:	mov    rsi,QWORD PTR [rbx]
  403b1b:	test   rsi,rsi
  403b1e:	je     403b48 <memcpy@plt+0x1158>
  403b20:	mov    r12,0x4151e8
  403b27:	nop    WORD PTR [rax+rax*1+0x0]
  403b30:	mov    rdi,QWORD PTR [r12]
  403b34:	mov    rdx,rbx
  403b37:	add    rbx,0x18
  403b3b:	call   402850 <rb_dictionary_add@plt>
  403b40:	mov    rsi,QWORD PTR [rbx]
  403b43:	test   rsi,rsi
  403b46:	jne    403b30 <memcpy@plt+0x1140>
  403b48:	movzx  eax,BYTE PTR [rbp+0x60]
  403b4c:	test   al,al
  403b4e:	jne    403b90 <memcpy@plt+0x11a0>
  403b50:	mov    rax,QWORD PTR [rbp+0x30]
  403b54:	test   rax,rax
  403b57:	je     403b5b <memcpy@plt+0x116b>
  403b59:	call   rax
  403b5b:	mov    rax,0x415200
  403b62:	mov    QWORD PTR [rbp+0x0],rbp
  403b66:	mov    rdx,QWORD PTR [rax]
  403b69:	mov    QWORD PTR [rbp+0x8],0x0
  403b71:	mov    QWORD PTR [rbp+0x10],rdx
  403b75:	test   rdx,rdx
  403b78:	je     403c00 <memcpy@plt+0x1210>
  403b7e:	mov    QWORD PTR [rdx+0x8],rbp
  403b82:	inc    QWORD PTR [rax+0x10]
  403b86:	mov    QWORD PTR [rax],rbp
  403b89:	pop    rbx
  403b8a:	pop    rbp
  403b8b:	pop    r12
  403b8d:	ret    
  403b8e:	xchg   ax,ax
  403b90:	mov    rcx,QWORD PTR [rbp+0x68]
  403b94:	mov    rdx,0x40fac0
  403b9b:	mov    QWORD PTR [rdx+rax*8],rcx
  403b9f:	jmp    403b50 <memcpy@plt+0x1160>
  403ba1:	nop    DWORD PTR [rax+0x0]
  403ba8:	mov    rdx,QWORD PTR [rip+0x113d1]        # 414f80 <memcpy@plt+0x12590>
  403baf:	mov    rcx,QWORD PTR [rdx]
  403bb2:	mov    DWORD PTR [rdi+0x18],ecx
  403bb5:	mov    rdi,QWORD PTR [rdx+0x10]
  403bb9:	mov    rcx,QWORD PTR [rdx+0x8]
  403bbd:	test   rdi,rdi
  403bc0:	je     403c40 <memcpy@plt+0x1250>
  403bc2:	mov    QWORD PTR [rdi+0x8],rcx
  403bc6:	mov    rcx,QWORD PTR [rdx+0x8]
  403bca:	test   rcx,rcx
  403bcd:	je     403c30 <memcpy@plt+0x1240>
  403bcf:	mov    QWORD PTR [rcx+0x10],rdi
  403bd3:	mov    rdi,rdx
  403bd6:	mov    QWORD PTR [rdx+0x8],0x0
  403bde:	mov    QWORD PTR [rdx+0x10],0x0
  403be6:	dec    rax
  403be9:	mov    QWORD PTR [rip+0x113a0],rax        # 414f90 <memcpy@plt+0x125a0>
  403bf0:	call   4027a0 <rb_free_rb_dlink_node@plt>
  403bf5:	jmp    403b0f <memcpy@plt+0x111f>
  403bfa:	nop    WORD PTR [rax+rax*1+0x0]
  403c00:	cmp    QWORD PTR [rax+0x8],0x0
  403c05:	jne    403b82 <memcpy@plt+0x1192>
  403c0b:	mov    QWORD PTR [rax+0x8],rbp
  403c0f:	jmp    403b82 <memcpy@plt+0x1192>
  403c14:	nop    DWORD PTR [rax+0x0]
  403c18:	pop    rbx
  403c19:	pop    rbp
  403c1a:	lea    rsi,[rip+0x7767]        # 40b388 <memcpy@plt+0x8998>
  403c21:	mov    edi,0x57
  403c26:	xor    eax,eax
  403c28:	pop    r12
  403c2a:	jmp    403730 <memcpy@plt+0xd40>
  403c2f:	nop
  403c30:	mov    QWORD PTR [rip+0x11349],rdi        # 414f80 <memcpy@plt+0x12590>
  403c37:	jmp    403bd6 <memcpy@plt+0x11e6>
  403c39:	nop    DWORD PTR [rax+0x0]
  403c40:	mov    QWORD PTR [rip+0x11341],rcx        # 414f88 <memcpy@plt+0x12598>
  403c47:	jmp    403bca <memcpy@plt+0x11da>
  403c49:	nop    DWORD PTR [rax+0x0]
  403c50:	endbr64 
  403c54:	sub    rsp,0x8
  403c58:	lea    rsi,[rip+0xfffffffffffffe61]        # 403ac0 <memcpy@plt+0x10d0>
  403c5f:	lea    rdi,[rip+0x78b6]        # 40b51c <memcpy@plt+0x8b2c>
  403c66:	call   4028d0 <rb_dictionary_create@plt>
  403c6b:	mov    rdx,0x4151f0
  403c72:	mov    ecx,0x1
  403c77:	lea    rsi,[rip+0x202]        # 403e80 <memcpy@plt+0x1490>
  403c7e:	mov    QWORD PTR [rdx],rax
  403c81:	lea    rdi,[rip+0x78a9]        # 40b531 <memcpy@plt+0x8b41>
  403c88:	xor    edx,edx
  403c8a:	call   402540 <rb_event_addish@plt>
  403c8f:	mov    rdi,0x410ae0
  403c96:	mov    QWORD PTR [rip+0x112d3],rax        # 414f70 <memcpy@plt+0x12580>
  403c9d:	call   403ad0 <memcpy@plt+0x10e0>
  403ca2:	mov    rdi,0x410d80
  403ca9:	call   403ad0 <memcpy@plt+0x10e0>
  403cae:	mov    rdi,0x410cc0
  403cb5:	call   403ad0 <memcpy@plt+0x10e0>
  403cba:	mov    rdi,0x410be0
  403cc1:	add    rsp,0x8
  403cc5:	jmp    403ad0 <memcpy@plt+0x10e0>
  403cca:	nop    WORD PTR [rax+rax*1+0x0]
  403cd0:	endbr64 
  403cd4:	push   r12
  403cd6:	push   rbp
  403cd7:	mov    rbp,rdi
  403cda:	push   rbx
  403cdb:	mov    rbx,QWORD PTR [rdi+0x70]
  403cdf:	test   rbx,rbx
  403ce2:	je     403d0d <memcpy@plt+0x131d>
  403ce4:	mov    rsi,QWORD PTR [rbx]
  403ce7:	test   rsi,rsi
  403cea:	je     403d0d <memcpy@plt+0x131d>
  403cec:	mov    r12,0x4151e8
  403cf3:	nop    DWORD PTR [rax+rax*1+0x0]
  403cf8:	mov    rdi,QWORD PTR [r12]
  403cfc:	add    rbx,0x18
  403d00:	call   402770 <rb_dictionary_delete@plt>
  403d05:	mov    rsi,QWORD PTR [rbx]
  403d08:	test   rsi,rsi
  403d0b:	jne    403cf8 <memcpy@plt+0x1308>
  403d0d:	movzx  eax,BYTE PTR [rbp+0x60]
  403d11:	test   al,al
  403d13:	jne    403db0 <memcpy@plt+0x13c0>
  403d19:	mov    rax,QWORD PTR [rbp+0x38]
  403d1d:	test   rax,rax
  403d20:	je     403d24 <memcpy@plt+0x1334>
  403d22:	call   rax
  403d24:	mov    rdx,QWORD PTR [rbp+0x10]
  403d28:	mov    rax,QWORD PTR [rbp+0x8]
  403d2c:	test   rdx,rdx
  403d2f:	je     403df0 <memcpy@plt+0x1400>
  403d35:	mov    QWORD PTR [rdx+0x8],rax
  403d39:	mov    rcx,0x415200
  403d40:	mov    rax,QWORD PTR [rbp+0x8]
  403d44:	test   rax,rax
  403d47:	je     403de0 <memcpy@plt+0x13f0>
  403d4d:	mov    QWORD PTR [rax+0x10],rdx
  403d51:	mov    QWORD PTR [rbp+0x8],0x0
  403d59:	mov    QWORD PTR [rbp+0x10],0x0
  403d61:	dec    QWORD PTR [rcx+0x10]
  403d65:	call   402980 <rb_make_rb_dlink_node@plt>
  403d6a:	mov    ecx,DWORD PTR [rbp+0x18]
  403d6d:	test   ecx,ecx
  403d6f:	je     403e00 <memcpy@plt+0x1410>
  403d75:	test   rax,rax
  403d78:	je     403e1f <memcpy@plt+0x142f>
  403d7e:	mov    rdx,QWORD PTR [rip+0x111fb]        # 414f80 <memcpy@plt+0x12590>
  403d85:	mov    QWORD PTR [rax],rcx
  403d88:	mov    QWORD PTR [rax+0x8],0x0
  403d90:	mov    QWORD PTR [rax+0x10],rdx
  403d94:	test   rdx,rdx
  403d97:	je     403dc8 <memcpy@plt+0x13d8>
  403d99:	mov    QWORD PTR [rdx+0x8],rax
  403d9d:	pop    rbx
  403d9e:	pop    rbp
  403d9f:	mov    QWORD PTR [rip+0x111da],rax        # 414f80 <memcpy@plt+0x12590>
  403da6:	inc    QWORD PTR [rip+0x111e3]        # 414f90 <memcpy@plt+0x125a0>
  403dad:	pop    r12
  403daf:	ret    
  403db0:	mov    rdx,0x40fac0
  403db7:	mov    QWORD PTR [rdx+rax*8],0x0
  403dbf:	jmp    403d19 <memcpy@plt+0x1329>
  403dc4:	nop    DWORD PTR [rax+0x0]
  403dc8:	cmp    QWORD PTR [rip+0x111b8],0x0        # 414f88 <memcpy@plt+0x12598>
  403dd0:	jne    403d9d <memcpy@plt+0x13ad>
  403dd2:	mov    QWORD PTR [rip+0x111af],rax        # 414f88 <memcpy@plt+0x12598>
  403dd9:	jmp    403d9d <memcpy@plt+0x13ad>
  403ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  403de0:	mov    QWORD PTR [rcx],rdx
  403de3:	jmp    403d51 <memcpy@plt+0x1361>
  403de8:	nop    DWORD PTR [rax+rax*1+0x0]
  403df0:	mov    rcx,0x415200
  403df7:	mov    QWORD PTR [rcx+0x8],rax
  403dfb:	jmp    403d44 <memcpy@plt+0x1354>
  403e00:	lea    rcx,[rip+0x77a1]        # 40b5a8 <memcpy@plt+0x8bb8>
  403e07:	mov    edx,0x8f
  403e0c:	lea    rsi,[rip+0x7735]        # 40b548 <memcpy@plt+0x8b58>
  403e13:	lea    rdi,[rip+0x774a]        # 40b564 <memcpy@plt+0x8b74>
  403e1a:	call   4025c0 <__assert_fail@plt>
  403e1f:	lea    rcx,[rip+0x7782]        # 40b5a8 <memcpy@plt+0x8bb8>
  403e26:	mov    edx,0x90
  403e2b:	lea    rsi,[rip+0x7716]        # 40b548 <memcpy@plt+0x8b58>
  403e32:	lea    rdi,[rip+0x7738]        # 40b571 <memcpy@plt+0x8b81>
  403e39:	call   4025c0 <__assert_fail@plt>
  403e3e:	xchg   ax,ax
  403e40:	endbr64 
  403e44:	push   rbx
  403e45:	mov    rax,0x4151f0
  403e4c:	mov    rbx,rdi
  403e4f:	mov    esi,DWORD PTR [rdi]
  403e51:	mov    rdi,QWORD PTR [rax]
  403e54:	call   402770 <rb_dictionary_delete@plt>
  403e59:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403e60:	test   rdi,rdi
  403e63:	je     403e6a <memcpy@plt+0x147a>
  403e65:	call   4026e0 <free@plt>
  403e6a:	mov    rdi,rbx
  403e6d:	pop    rbx
  403e6e:	jmp    4026e0 <free@plt>
  403e73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403e7e:	xchg   ax,ax
  403e80:	endbr64 
  403e84:	push   r14
  403e86:	push   r13
  403e88:	push   r12
  403e8a:	push   rbp
  403e8b:	push   rbx
  403e8c:	sub    rsp,0x20
  403e90:	mov    rax,QWORD PTR fs:0x28
  403e99:	mov    QWORD PTR [rsp+0x18],rax
  403e9e:	xor    eax,eax
  403ea0:	call   402760 <rb_current_time@plt>
  403ea5:	mov    rbx,0x4151f0
  403eac:	mov    rbp,rsp
  403eaf:	mov    rdi,QWORD PTR [rbx]
  403eb2:	mov    rsi,rbp
  403eb5:	mov    r12,rax
  403eb8:	call   402730 <rb_dictionary_foreach_start@plt>
  403ebd:	nop    DWORD PTR [rax]
  403ec0:	mov    rdi,QWORD PTR [rbx]
  403ec3:	mov    rsi,rbp
  403ec6:	call   402610 <rb_dictionary_foreach_cur@plt>
  403ecb:	mov    r14,rax
  403ece:	test   rax,rax
  403ed1:	je     403f88 <memcpy@plt+0x1598>
  403ed7:	mov    eax,DWORD PTR [r14+0x1cc]
  403ede:	lea    edx,[rax+0x1]
  403ee1:	mov    DWORD PTR [r14+0x1cc],edx
  403ee8:	mov    rdx,0x415200
  403eef:	mov    r13,QWORD PTR [rdx]
  403ef2:	test   r13,r13
  403ef5:	jne    403f09 <memcpy@plt+0x1519>
  403ef7:	jmp    403f59 <memcpy@plt+0x1569>
  403ef9:	nop    DWORD PTR [rax+0x0]
  403f00:	mov    r13,QWORD PTR [r13+0x10]
  403f04:	test   r13,r13
  403f07:	je     403f50 <memcpy@plt+0x1560>
  403f09:	mov    rcx,QWORD PTR [r13+0x0]
  403f0d:	mov    edx,DWORD PTR [rcx+0x18]
  403f10:	shl    rdx,0x5
  403f14:	add    rdx,QWORD PTR [r14+0x1d0]
  403f1b:	cmp    DWORD PTR [rdx+0x18],0x1
  403f1f:	jne    403f00 <memcpy@plt+0x1510>
  403f21:	mov    rax,QWORD PTR [rcx+0x50]
  403f25:	test   rax,rax
  403f28:	je     403f00 <memcpy@plt+0x1510>
  403f2a:	mov    rdx,QWORD PTR [rdx+0x8]
  403f2e:	test   rdx,rdx
  403f31:	jle    403f00 <memcpy@plt+0x1510>
  403f33:	cmp    r12,rdx
  403f36:	jle    403f00 <memcpy@plt+0x1510>
  403f38:	mov    rdi,r14
  403f3b:	call   rax
  403f3d:	mov    r13,QWORD PTR [r13+0x10]
  403f41:	test   r13,r13
  403f44:	jne    403f09 <memcpy@plt+0x1519>
  403f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f50:	mov    eax,DWORD PTR [r14+0x1cc]
  403f57:	dec    eax
  403f59:	mov    DWORD PTR [r14+0x1cc],eax
  403f60:	test   eax,eax
  403f62:	je     403f78 <memcpy@plt+0x1588>
  403f64:	mov    rdi,QWORD PTR [rbx]
  403f67:	mov    rsi,rbp
  403f6a:	call   4026c0 <rb_dictionary_foreach_next@plt>
  403f6f:	jmp    403ec0 <memcpy@plt+0x14d0>
  403f74:	nop    DWORD PTR [rax+0x0]
  403f78:	mov    rdi,r14
  403f7b:	call   403e40 <memcpy@plt+0x1450>
  403f80:	jmp    403f64 <memcpy@plt+0x1574>
  403f82:	nop    WORD PTR [rax+rax*1+0x0]
  403f88:	mov    rax,QWORD PTR [rsp+0x18]
  403f8d:	xor    rax,QWORD PTR fs:0x28
  403f96:	jne    403fa5 <memcpy@plt+0x15b5>
  403f98:	add    rsp,0x20
  403f9c:	pop    rbx
  403f9d:	pop    rbp
  403f9e:	pop    r12
  403fa0:	pop    r13
  403fa2:	pop    r14
  403fa4:	ret    
  403fa5:	call   402880 <__stack_chk_fail@plt>
  403faa:	nop    WORD PTR [rax+rax*1+0x0]
  403fb0:	endbr64 
  403fb4:	cmp    BYTE PTR [rdi+0x1c4],0x0
  403fbb:	jne    404028 <memcpy@plt+0x1638>
  403fbd:	mov    eax,DWORD PTR [rdi+0x1c8]
  403fc3:	mov    BYTE PTR [rdi+0x1c4],0x1
  403fca:	test   eax,eax
  403fcc:	je     404028 <memcpy@plt+0x1638>
  403fce:	push   rbp
  403fcf:	mov    rbp,rdi
  403fd2:	push   rbx
  403fd3:	sub    rsp,0x8
  403fd7:	mov    rax,0x415200
  403fde:	mov    rbx,QWORD PTR [rax]
  403fe1:	test   rbx,rbx
  403fe4:	je     40401e <memcpy@plt+0x162e>
  403fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ff0:	mov    rax,QWORD PTR [rbx]
  403ff3:	mov    rdx,QWORD PTR [rax+0x48]
  403ff7:	test   rdx,rdx
  403ffa:	je     404015 <memcpy@plt+0x1625>
  403ffc:	mov    eax,DWORD PTR [rax+0x18]
  403fff:	shl    rax,0x5
  404003:	add    rax,QWORD PTR [rbp+0x1d0]
  40400a:	cmp    DWORD PTR [rax+0x18],0x1
  40400e:	jne    404015 <memcpy@plt+0x1625>
  404010:	mov    rdi,rbp
  404013:	call   rdx
  404015:	mov    rbx,QWORD PTR [rbx+0x10]
  404019:	test   rbx,rbx
  40401c:	jne    403ff0 <memcpy@plt+0x1600>
  40401e:	add    rsp,0x8
  404022:	pop    rbx
  404023:	pop    rbp
  404024:	ret    
  404025:	nop    DWORD PTR [rax]
  404028:	ret    
  404029:	nop    DWORD PTR [rax+0x0]
  404030:	endbr64 
  404034:	push   r13
  404036:	push   r12
  404038:	mov    r12,rdx
  40403b:	push   rbp
  40403c:	mov    ebp,esi
  40403e:	push   rbx
  40403f:	mov    rbx,rdi
  404042:	sub    rsp,0x2e8
  404049:	mov    QWORD PTR [rsp+0x250],r8
  404051:	mov    QWORD PTR [rsp+0x258],r9
  404059:	test   al,al
  40405b:	je     4040a5 <memcpy@plt+0x16b5>
  40405d:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  404066:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  40406f:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  404078:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  404081:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  40408a:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  404093:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  40409c:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  4040a5:	mov    rax,QWORD PTR fs:0x28
  4040ae:	mov    QWORD PTR [rsp+0x228],rax
  4040b6:	xor    eax,eax
  4040b8:	lea    r13,[rsp+0x20]
  4040bd:	lea    rax,[rsp+0x310]
  4040c5:	mov    r8,rcx
  4040c8:	mov    QWORD PTR [rsp+0x10],rax
  4040cd:	lea    r9,[rsp+0x8]
  4040d2:	lea    rax,[rsp+0x230]
  4040da:	mov    edx,0x1
  4040df:	mov    rdi,r13
  4040e2:	mov    ecx,0x200
  4040e7:	mov    esi,0x200
  4040ec:	mov    DWORD PTR [rsp+0x8],0x20
  4040f4:	mov    DWORD PTR [rsp+0xc],0x30
  4040fc:	mov    QWORD PTR [rsp+0x18],rax
  404101:	call   4026a0 <__vsnprintf_chk@plt>
  404106:	lea    rax,[rip+0x71e6]        # 40b2f3 <memcpy@plt+0x8903>
  40410d:	test   r12,r12
  404110:	cmove  r12,rax
  404114:	mov    rax,0x410ee0
  40411b:	lea    r9,[rbx+0x178]
  404122:	lea    r8,[rbx+0x1b8]
  404129:	mov    edx,DWORD PTR [rbx]
  40412b:	mov    rdi,QWORD PTR [rax]
  40412e:	cmp    ebp,0xffffffff
  404131:	je     4041a0 <memcpy@plt+0x17b0>
  404133:	mov    rax,QWORD PTR [rbx+0x1d0]
  40413a:	shl    rbp,0x5
  40413e:	mov    rax,QWORD PTR [rax+rbp*1]
  404142:	lea    rsi,[rip+0x7432]        # 40b57b <memcpy@plt+0x8b8b>
  404149:	movsx  ecx,BYTE PTR [rax+0x28]
  40414d:	push   r13
  40414f:	xor    eax,eax
  404151:	push   r12
  404153:	call   402900 <rb_helper_write@plt>
  404158:	mov    rax,QWORD PTR [rbx+0x1d0]
  40415f:	mov    DWORD PTR [rax+rbp*1+0x18],0x2
  404167:	dec    DWORD PTR [rbx+0x1c8]
  40416d:	pop    rcx
  40416e:	pop    rsi
  40416f:	mov    rdi,rbx
  404172:	call   403fb0 <memcpy@plt+0x15c0>
  404177:	mov    rax,QWORD PTR [rsp+0x228]
  40417f:	xor    rax,QWORD PTR fs:0x28
  404188:	jne    4041bb <memcpy@plt+0x17cb>
  40418a:	add    rsp,0x2e8
  404191:	pop    rbx
  404192:	pop    rbp
  404193:	pop    r12
  404195:	pop    r13
  404197:	ret    
  404198:	nop    DWORD PTR [rax+rax*1+0x0]
  4041a0:	push   r13
  4041a2:	xor    eax,eax
  4041a4:	mov    ecx,0x2a
  4041a9:	push   r12
  4041ab:	lea    rsi,[rip+0x73c9]        # 40b57b <memcpy@plt+0x8b8b>
  4041b2:	call   402900 <rb_helper_write@plt>
  4041b7:	pop    rax
  4041b8:	pop    rdx
  4041b9:	jmp    40416f <memcpy@plt+0x177f>
  4041bb:	call   402880 <__stack_chk_fail@plt>
  4041c0:	endbr64 
  4041c4:	push   r13
  4041c6:	lea    r13,[rip+0x71eb]        # 40b3b8 <memcpy@plt+0x89c8>
  4041cd:	push   r12
  4041cf:	push   rbp
  4041d0:	push   rbx
  4041d1:	sub    rsp,0x28
  4041d5:	mov    rbp,0x4151f0
  4041dc:	mov    r12,rsp
  4041df:	mov    rdi,QWORD PTR [rbp+0x0]
  4041e3:	mov    rsi,r12
  4041e6:	mov    rax,QWORD PTR fs:0x28
  4041ef:	mov    QWORD PTR [rsp+0x18],rax
  4041f4:	xor    eax,eax
  4041f6:	call   402730 <rb_dictionary_foreach_start@plt>
  4041fb:	jmp    40420c <memcpy@plt+0x181c>
  4041fd:	nop    DWORD PTR [rax]
  404200:	mov    rdi,QWORD PTR [rbp+0x0]
  404204:	mov    rsi,r12
  404207:	call   4026c0 <rb_dictionary_foreach_next@plt>
  40420c:	mov    rdi,QWORD PTR [rbp+0x0]
  404210:	mov    rsi,r12
  404213:	call   402610 <rb_dictionary_foreach_cur@plt>
  404218:	mov    rbx,rax
  40421b:	test   rax,rax
  40421e:	je     404258 <memcpy@plt+0x1868>
  404220:	inc    DWORD PTR [rbx+0x1cc]
  404226:	xor    eax,eax
  404228:	mov    rcx,r13
  40422b:	lea    rdx,[rip+0x735e]        # 40b590 <memcpy@plt+0x8ba0>
  404232:	mov    esi,0xffffffff
  404237:	mov    rdi,rbx
  40423a:	call   404030 <memcpy@plt+0x1640>
  40423f:	dec    DWORD PTR [rbx+0x1cc]
  404245:	jne    404200 <memcpy@plt+0x1810>
  404247:	mov    rdi,rbx
  40424a:	call   403e40 <memcpy@plt+0x1450>
  40424f:	jmp    404200 <memcpy@plt+0x1810>
  404251:	nop    DWORD PTR [rax+0x0]
  404258:	mov    r13,0x415200
  40425f:	mov    rbx,QWORD PTR [r13+0x0]
  404263:	test   rbx,rbx
  404266:	je     4042f0 <memcpy@plt+0x1900>
  40426c:	mov    rax,QWORD PTR [rbx]
  40426f:	mov    r12,QWORD PTR [rbx+0x10]
  404273:	mov    rax,QWORD PTR [rax+0x38]
  404277:	test   rax,rax
  40427a:	je     404282 <memcpy@plt+0x1892>
  40427c:	nop    DWORD PTR [rax+0x0]
  404280:	call   rax
  404282:	mov    rdx,QWORD PTR [rbx+0x10]
  404286:	mov    rax,QWORD PTR [rbx+0x8]
  40428a:	test   rdx,rdx
  40428d:	je     4042da <memcpy@plt+0x18ea>
  40428f:	mov    QWORD PTR [rdx+0x8],rax
  404293:	mov    rax,QWORD PTR [rbx+0x8]
  404297:	test   rax,rax
  40429a:	je     4042e3 <memcpy@plt+0x18f3>
  40429c:	mov    QWORD PTR [rax+0x10],rdx
  4042a0:	mov    QWORD PTR [rbx+0x8],0x0
  4042a8:	mov    QWORD PTR [rbx+0x10],0x0
  4042b0:	dec    QWORD PTR [r13+0x10]
  4042b4:	test   r12,r12
  4042b7:	je     4042f0 <memcpy@plt+0x1900>
  4042b9:	mov    rbx,r12
  4042bc:	mov    rax,QWORD PTR [rbx]
  4042bf:	mov    r12,QWORD PTR [r12+0x10]
  4042c4:	mov    rax,QWORD PTR [rax+0x38]
  4042c8:	test   rax,rax
  4042cb:	jne    404280 <memcpy@plt+0x1890>
  4042cd:	mov    rdx,QWORD PTR [rbx+0x10]
  4042d1:	mov    rax,QWORD PTR [rbx+0x8]
  4042d5:	test   rdx,rdx
  4042d8:	jne    40428f <memcpy@plt+0x189f>
  4042da:	mov    QWORD PTR [r13+0x8],rax
  4042de:	test   rax,rax
  4042e1:	jne    40429c <memcpy@plt+0x18ac>
  4042e3:	mov    QWORD PTR [r13+0x0],rdx
  4042e7:	jmp    4042a0 <memcpy@plt+0x18b0>
  4042e9:	nop    DWORD PTR [rax+0x0]
  4042f0:	mov    rdi,QWORD PTR [rbp+0x0]
  4042f4:	xor    edx,edx
  4042f6:	xor    esi,esi
  4042f8:	call   4027f0 <rb_dictionary_destroy@plt>
  4042fd:	mov    rdi,QWORD PTR [rip+0x10c6c]        # 414f70 <memcpy@plt+0x12580>
  404304:	call   402580 <rb_event_delete@plt>
  404309:	mov    rax,QWORD PTR [rsp+0x18]
  40430e:	xor    rax,QWORD PTR fs:0x28
  404317:	jne    404324 <memcpy@plt+0x1934>
  404319:	add    rsp,0x28
  40431d:	pop    rbx
  40431e:	pop    rbp
  40431f:	pop    r12
  404321:	pop    r13
  404323:	ret    
  404324:	call   402880 <__stack_chk_fail@plt>
  404329:	nop    DWORD PTR [rax+0x0]
  404330:	endbr64 
  404334:	push   rbx
  404335:	mov    rax,0x410ee0
  40433c:	mov    rbx,rdi
  40433f:	lea    rcx,[rdi+0x1b8]
  404346:	lea    r8,[rdi+0x178]
  40434d:	mov    edx,DWORD PTR [rdi]
  40434f:	mov    rdi,QWORD PTR [rax]
  404352:	lea    rsi,[rip+0x723f]        # 40b598 <memcpy@plt+0x8ba8>
  404359:	xor    eax,eax
  40435b:	call   402900 <rb_helper_write@plt>
  404360:	mov    rdi,rbx
  404363:	pop    rbx
  404364:	jmp    403fb0 <memcpy@plt+0x15c0>
  404369:	nop    DWORD PTR [rax+0x0]
  404370:	endbr64 
  404374:	mov    eax,esi
  404376:	shl    rax,0x5
  40437a:	add    rax,QWORD PTR [rdi+0x1d0]
  404381:	mov    DWORD PTR [rax+0x18],0x2
  404388:	dec    DWORD PTR [rdi+0x1c8]
  40438e:	jne    404399 <memcpy@plt+0x19a9>
  404390:	cmp    BYTE PTR [rdi+0x1c3],0x0
  404397:	je     4043f0 <memcpy@plt+0x1a00>
  404399:	push   r12
  40439b:	mov    rax,0x415200
  4043a2:	mov    r12,rdi
  4043a5:	push   rbp
  4043a6:	mov    ebp,esi
  4043a8:	push   rbx
  4043a9:	mov    rbx,QWORD PTR [rax]
  4043ac:	test   rbx,rbx
  4043af:	je     4043e9 <memcpy@plt+0x19f9>
  4043b1:	nop    DWORD PTR [rax+0x0]
  4043b8:	mov    rax,QWORD PTR [rbx]
  4043bb:	mov    rdx,QWORD PTR [rax+0x58]
  4043bf:	test   rdx,rdx
  4043c2:	je     4043e0 <memcpy@plt+0x19f0>
  4043c4:	mov    eax,DWORD PTR [rax+0x18]
  4043c7:	shl    rax,0x5
  4043cb:	add    rax,QWORD PTR [r12+0x1d0]
  4043d3:	cmp    DWORD PTR [rax+0x18],0x1
  4043d7:	jne    4043e0 <memcpy@plt+0x19f0>
  4043d9:	mov    esi,ebp
  4043db:	mov    rdi,r12
  4043de:	call   rdx
  4043e0:	mov    rbx,QWORD PTR [rbx+0x10]
  4043e4:	test   rbx,rbx
  4043e7:	jne    4043b8 <memcpy@plt+0x19c8>
  4043e9:	pop    rbx
  4043ea:	pop    rbp
  4043eb:	pop    r12
  4043ed:	ret    
  4043ee:	xchg   ax,ax
  4043f0:	jmp    404330 <memcpy@plt+0x1940>
  4043f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404400:	endbr64 
  404404:	push   r15
  404406:	push   r14
  404408:	push   r13
  40440a:	push   r12
  40440c:	push   rbp
  40440d:	push   rbx
  40440e:	sub    rsp,0x18
  404412:	cmp    edi,0x5
  404415:	jle    404675 <memcpy@plt+0x1c85>
  40441b:	lea    rbp,[rip+0x71c5]        # 40b5e7 <memcpy@plt+0x8bf7>
  404422:	cmp    edi,0x6
  404425:	jne    404470 <memcpy@plt+0x1a80>
  404427:	mov    rbx,QWORD PTR [rsi+0x8]
  40442b:	mov    rax,QWORD PTR [rsi+0x28]
  40442f:	mov    r12,QWORD PTR [rsi+0x20]
  404433:	mov    r15,QWORD PTR [rsi+0x18]
  404437:	mov    r13,QWORD PTR [rsi+0x10]
  40443b:	mov    edx,0x10
  404440:	xor    esi,esi
  404442:	mov    rdi,rbx
  404445:	mov    QWORD PTR [rsp+0x8],rax
  40444a:	call   402940 <strtoull@plt>
  40444f:	lea    rcx,[rax-0x1]
  404453:	mov    QWORD PTR [rsp],rax
  404457:	mov    eax,0xfffffffe
  40445c:	cmp    rcx,rax
  40445f:	jbe    404480 <memcpy@plt+0x1a90>
  404461:	add    rsp,0x18
  404465:	pop    rbx
  404466:	pop    rbp
  404467:	pop    r12
  404469:	pop    r13
  40446b:	pop    r14
  40446d:	pop    r15
  40446f:	ret    
  404470:	mov    rbp,QWORD PTR [rsi+0x30]
  404474:	jmp    404427 <memcpy@plt+0x1a37>
  404476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404480:	mov    esi,0x1d8
  404485:	mov    edi,0x1
  40448a:	call   4028f0 <calloc@plt>
  40448f:	test   rax,rax
  404492:	mov    r14,rax
  404495:	mov    rdx,QWORD PTR [rsp]
  404499:	je     404670 <memcpy@plt+0x1c80>
  40449f:	mov    DWORD PTR [rax],edx
  4044a1:	inc    DWORD PTR [rax+0x1cc]
  4044a7:	mov    rax,0x4151f0
  4044ae:	mov    rsi,rdx
  4044b1:	mov    rdi,QWORD PTR [rax]
  4044b4:	call   4028c0 <rb_dictionary_find@plt>
  4044b9:	test   rax,rax
  4044bc:	jne    404694 <memcpy@plt+0x1ca4>
  4044c2:	mov    rax,0x4151f0
  4044c9:	mov    esi,DWORD PTR [r14]
  4044cc:	mov    rdi,QWORD PTR [rax]
  4044cf:	mov    rdx,r14
  4044d2:	call   402850 <rb_dictionary_add@plt>
  4044d7:	xor    esi,esi
  4044d9:	mov    edx,0x10
  4044de:	mov    rdi,rbp
  4044e1:	call   402940 <strtoull@plt>
  4044e6:	lea    rdi,[r14+0x8]
  4044ea:	mov    edx,0x36
  4044ef:	mov    rsi,r13
  4044f2:	mov    DWORD PTR [r14+0x4],eax
  4044f6:	call   4026b0 <rb_strlcpy@plt>
  4044fb:	mov    edx,0xa
  404500:	xor    esi,esi
  404502:	mov    rdi,r15
  404505:	call   4027d0 <strtol@plt>
  40450a:	lea    rsi,[r14+0x40]
  40450e:	mov    rdi,r13
  404511:	mov    WORD PTR [r14+0x3e],ax
  404516:	call   402740 <rb_inet_pton_sock@plt>
  40451b:	movbe  ax,WORD PTR [r14+0x3e]
  404522:	lea    rdi,[r14+0xc0]
  404529:	mov    edx,0x36
  40452e:	mov    rsi,r12
  404531:	mov    WORD PTR [r14+0x42],ax
  404536:	call   4026b0 <rb_strlcpy@plt>
  40453b:	mov    rdi,QWORD PTR [rsp+0x8]
  404540:	mov    edx,0xa
  404545:	xor    esi,esi
  404547:	call   4027d0 <strtol@plt>
  40454c:	lea    rsi,[r14+0xf8]
  404553:	mov    rdi,r12
  404556:	mov    WORD PTR [r14+0xf6],ax
  40455e:	call   402740 <rb_inet_pton_sock@plt>
  404563:	movbe  ax,WORD PTR [r14+0xf6]
  40456d:	lea    rdi,[r14+0x178]
  404574:	mov    edx,0x40
  404579:	lea    rsi,[rip+0x6d73]        # 40b2f3 <memcpy@plt+0x8903>
  404580:	mov    WORD PTR [r14+0xfa],ax
  404588:	call   4026b0 <rb_strlcpy@plt>
  40458d:	lea    rdi,[r14+0x1b8]
  404594:	lea    rsi,[rip+0x6d58]        # 40b2f3 <memcpy@plt+0x8903>
  40459b:	mov    edx,0xb
  4045a0:	call   4026b0 <rb_strlcpy@plt>
  4045a5:	mov    esi,DWORD PTR [rip+0x109cd]        # 414f78 <memcpy@plt+0x12588>
  4045ab:	mov    edi,0x1
  4045b0:	shl    rsi,0x5
  4045b4:	call   4028f0 <calloc@plt>
  4045b9:	test   rax,rax
  4045bc:	je     404670 <memcpy@plt+0x1c80>
  4045c2:	mov    rdx,0x415200
  4045c9:	mov    QWORD PTR [r14+0x1d0],rax
  4045d0:	mov    rbx,QWORD PTR [rdx]
  4045d3:	mov    BYTE PTR [r14+0x1c3],0x1
  4045db:	test   rbx,rbx
  4045de:	jne    404602 <memcpy@plt+0x1c12>
  4045e0:	jmp    404650 <memcpy@plt+0x1c60>
  4045e2:	nop    WORD PTR [rax+rax*1+0x0]
  4045e8:	cmp    BYTE PTR [r14+0x1c4],0x0
  4045f0:	jne    404650 <memcpy@plt+0x1c60>
  4045f2:	mov    rbx,QWORD PTR [rbx+0x10]
  4045f6:	test   rbx,rbx
  4045f9:	je     404650 <memcpy@plt+0x1c60>
  4045fb:	mov    rax,QWORD PTR [r14+0x1d0]
  404602:	mov    rdx,QWORD PTR [rbx]
  404605:	mov    rdi,r14
  404608:	mov    esi,DWORD PTR [rdx+0x18]
  40460b:	shl    rsi,0x5
  40460f:	add    rax,rsi
  404612:	mov    QWORD PTR [rax],rdx
  404615:	inc    DWORD PTR [r14+0x1c8]
  40461c:	mov    DWORD PTR [rax+0x18],0x1
  404623:	call   QWORD PTR [rdx+0x40]
  404626:	test   al,al
  404628:	jne    4045e8 <memcpy@plt+0x1bf8>
  40462a:	dec    DWORD PTR [r14+0x1cc]
  404631:	jne    404461 <memcpy@plt+0x1a71>
  404637:	add    rsp,0x18
  40463b:	pop    rbx
  40463c:	pop    rbp
  40463d:	pop    r12
  40463f:	pop    r13
  404641:	mov    rdi,r14
  404644:	pop    r14
  404646:	pop    r15
  404648:	jmp    403e40 <memcpy@plt+0x1450>
  40464d:	nop    DWORD PTR [rax]
  404650:	mov    eax,DWORD PTR [r14+0x1c8]
  404657:	mov    BYTE PTR [r14+0x1c3],0x0
  40465f:	test   eax,eax
  404661:	jne    40462a <memcpy@plt+0x1c3a>
  404663:	mov    rdi,r14
  404666:	call   404330 <memcpy@plt+0x1940>
  40466b:	jmp    40462a <memcpy@plt+0x1c3a>
  40466d:	nop    DWORD PTR [rax]
  404670:	call   402830 <rb_outofmemory@plt>
  404675:	mov    edx,edi
  404677:	lea    rsi,[rip+0x6d82]        # 40b400 <memcpy@plt+0x8a10>
  40467e:	mov    edi,0x43
  404683:	xor    eax,eax
  404685:	call   403730 <memcpy@plt+0xd40>
  40468a:	mov    edi,0x3
  40468f:	call   4025b0 <exit@plt>
  404694:	mov    edi,0x43
  404699:	mov    rdx,rbx
  40469c:	lea    rsi,[rip+0x6dad]        # 40b450 <memcpy@plt+0x8a60>
  4046a3:	xor    eax,eax
  4046a5:	call   403730 <memcpy@plt+0xd40>
  4046aa:	mov    edi,0x3
  4046af:	call   4025b0 <exit@plt>
  4046b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4046bf:	nop
  4046c0:	endbr64 
  4046c4:	push   rbx
  4046c5:	cmp    edi,0x1
  4046c8:	jle    404752 <memcpy@plt+0x1d62>
  4046ce:	mov    rdi,QWORD PTR [rsi+0x8]
  4046d2:	mov    edx,0x10
  4046d7:	mov    rbx,rsi
  4046da:	xor    esi,esi
  4046dc:	call   402940 <strtoull@plt>
  4046e1:	lea    rcx,[rax-0x1]
  4046e5:	mov    edx,0xfffffffe
  4046ea:	cmp    rcx,rdx
  4046ed:	ja     404731 <memcpy@plt+0x1d41>
  4046ef:	mov    rsi,rax
  4046f2:	mov    rax,0x4151f0
  4046f9:	mov    rdi,QWORD PTR [rax]
  4046fc:	call   402820 <rb_dictionary_retrieve@plt>
  404701:	mov    rbx,rax
  404704:	test   rax,rax
  404707:	je     40471f <memcpy@plt+0x1d2f>
  404709:	inc    DWORD PTR [rax+0x1cc]
  40470f:	mov    rdi,rax
  404712:	call   403fb0 <memcpy@plt+0x15c0>
  404717:	dec    DWORD PTR [rbx+0x1cc]
  40471d:	je     404728 <memcpy@plt+0x1d38>
  40471f:	pop    rbx
  404720:	ret    
  404721:	nop    DWORD PTR [rax+0x0]
  404728:	mov    rdi,rbx
  40472b:	pop    rbx
  40472c:	jmp    403e40 <memcpy@plt+0x1450>
  404731:	mov    rdx,QWORD PTR [rbx+0x8]
  404735:	mov    edi,0x43
  40473a:	lea    rsi,[rip+0x6d97]        # 40b4d8 <memcpy@plt+0x8ae8>
  404741:	xor    eax,eax
  404743:	call   403730 <memcpy@plt+0xd40>
  404748:	mov    edi,0x3
  40474d:	call   4025b0 <exit@plt>
  404752:	mov    edx,edi
  404754:	lea    rsi,[rip+0x6d2d]        # 40b488 <memcpy@plt+0x8a98>
  40475b:	mov    edi,0x43
  404760:	xor    eax,eax
  404762:	call   403730 <memcpy@plt+0xd40>
  404767:	mov    edi,0x3
  40476c:	call   4025b0 <exit@plt>
  404771:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40477b:	nop    DWORD PTR [rax+rax*1+0x0]
  404780:	sub    rsp,0x8
  404784:	call   405a70 <memcpy@plt+0x3080>
  404789:	mov    rax,0x415010
  404790:	mov    edx,DWORD PTR [rax]
  404792:	test   edx,edx
  404794:	jle    4047bf <memcpy@plt+0x1dcf>
  404796:	lea    rax,[rip+0x10823]        # 414fc0 <memcpy@plt+0x125d0>
  40479d:	lea    ecx,[rdx-0x1]
  4047a0:	lea    rdx,[rax+0x4]
  4047a4:	lea    rdx,[rdx+rcx*4]
  4047a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4047b0:	mov    DWORD PTR [rax],0x0
  4047b6:	add    rax,0x4
  4047ba:	cmp    rax,rdx
  4047bd:	jne    4047b0 <memcpy@plt+0x1dc0>
  4047bf:	cmp    QWORD PTR [rip+0x10841],0x0        # 415008 <memcpy@plt+0x12618>
  4047c7:	je     4047d0 <memcpy@plt+0x1de0>
  4047c9:	add    rsp,0x8
  4047cd:	ret    
  4047ce:	xchg   ax,ax
  4047d0:	mov    rax,0x415340
  4047d7:	lea    rcx,[rip+0x6dd6]        # 40b5b4 <memcpy@plt+0x8bc4>
  4047de:	movzx  edi,WORD PTR [rax]
  4047e1:	xor    edx,edx
  4047e3:	mov    esi,0x2
  4047e8:	call   4025e0 <rb_socket@plt>
  4047ed:	mov    QWORD PTR [rip+0x10814],rax        # 415008 <memcpy@plt+0x12618>
  4047f4:	test   rax,rax
  4047f7:	je     4047c9 <memcpy@plt+0x1dd9>
  4047f9:	mov    rdi,rax
  4047fc:	xor    ecx,ecx
  4047fe:	lea    rdx,[rip+0x10fb]        # 405900 <memcpy@plt+0x2f10>
  404805:	mov    esi,0x1
  40480a:	call   402590 <rb_setselect@plt>
  40480f:	mov    ecx,0x1
  404814:	xor    edx,edx
  404816:	lea    rsi,[rip+0xa83]        # 4052a0 <memcpy@plt+0x28b0>
  40481d:	lea    rdi,[rip+0x6da4]        # 40b5c8 <memcpy@plt+0x8bd8>
  404824:	call   402930 <rb_event_add@plt>
  404829:	mov    QWORD PTR [rip+0x10778],rax        # 414fa8 <memcpy@plt+0x125b8>
  404830:	add    rsp,0x8
  404834:	ret    
  404835:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404840:	push   r15
  404842:	xor    esi,esi
  404844:	mov    edx,0x400
  404849:	push   r14
  40484b:	push   r13
  40484d:	push   r12
  40484f:	mov    r12,rdi
  404852:	push   rbp
  404853:	push   rbx
  404854:	sub    rsp,0x428
  40485b:	lea    rbp,[rsp+0x10]
  404860:	mov    rdi,rbp
  404863:	mov    rax,QWORD PTR fs:0x28
  40486c:	mov    QWORD PTR [rsp+0x418],rax
  404874:	xor    eax,eax
  404876:	call   402530 <memset@plt>
  40487b:	movsx  edx,BYTE PTR [r12+0x28]
  404881:	lea    rdi,[r12+0x29]
  404886:	mov    r8d,0x400
  40488c:	mov    rcx,rbp
  40488f:	mov    esi,0x1
  404894:	call   406350 <memcpy@plt+0x3960>
  404899:	test   eax,eax
  40489b:	jg     4048d0 <memcpy@plt+0x1ee0>
  40489d:	mov    rax,QWORD PTR [rsp+0x418]
  4048a5:	xor    rax,QWORD PTR fs:0x28
  4048ae:	jne    404a80 <memcpy@plt+0x2090>
  4048b4:	add    rsp,0x428
  4048bb:	pop    rbx
  4048bc:	pop    rbp
  4048bd:	pop    r12
  4048bf:	pop    r13
  4048c1:	pop    r14
  4048c3:	pop    r15
  4048c5:	ret    
  4048c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048d0:	mov    r13d,eax
  4048d3:	mov    eax,DWORD PTR [r12+0x18]
  4048d8:	mov    rbx,0x415010
  4048df:	mov    WORD PTR [rsp+0x10],ax
  4048e4:	movzx  eax,BYTE PTR [r12+0x12a]
  4048ed:	mov    edx,DWORD PTR [rbx]
  4048ef:	inc    eax
  4048f1:	mov    BYTE PTR [r12+0x12a],al
  4048f9:	inc    DWORD PTR [rip+0x106a1]        # 414fa0 <memcpy@plt+0x125b0>
  4048ff:	test   edx,edx
  404901:	jle    40489d <memcpy@plt+0x1ead>
  404903:	movsx  eax,al
  404906:	dec    eax
  404908:	mov    DWORD PTR [rsp],eax
  40490b:	mov    QWORD PTR [rsp+0x8],r12
  404910:	xor    r15d,r15d
  404913:	lea    r14,[rip+0x106a6]        # 414fc0 <memcpy@plt+0x125d0>
  40491a:	mov    ebx,edx
  40491c:	nop    DWORD PTR [rax+0x0]
  404920:	mov    eax,DWORD PTR [rsp]
  404923:	add    eax,r15d
  404926:	cdq    
  404927:	idiv   ebx
  404929:	movsxd r8,edx
  40492c:	mov    ecx,DWORD PTR [r14+r8*4]
  404930:	mov    rbx,r8
  404933:	test   ecx,ecx
  404935:	je     40495a <memcpy@plt+0x1f6a>
  404937:	dec    ecx
  404939:	mov    eax,DWORD PTR [rip+0x10661]        # 414fa0 <memcpy@plt+0x125b0>
  40493f:	mov    esi,0xf3
  404944:	cmp    ecx,0x3
  404947:	ja     404953 <memcpy@plt+0x1f63>
  404949:	lea    rsi,[rip+0x6d30]        # 40b680 <memcpy@plt+0x8c90>
  404950:	mov    esi,DWORD PTR [rsi+rcx*4]
  404953:	cdq    
  404954:	idiv   esi
  404956:	test   edx,edx
  404958:	jne    4049b3 <memcpy@plt+0x1fc3>
  40495a:	shl    r8,0x7
  40495e:	add    r8,0x415340
  404965:	cmp    WORD PTR [r8],0x2
  40496a:	mov    eax,0x10
  40496f:	mov    r9d,0x1c
  404975:	cmove  r9d,eax
  404979:	mov    rdi,QWORD PTR [rip+0x10688]        # 415008 <memcpy@plt+0x12618>
  404980:	mov    r12,r8
  404983:	mov    DWORD PTR [rsp+0x4],r9d
  404988:	call   4025a0 <rb_get_fd@plt>
  40498d:	movsxd r11,r13d
  404990:	mov    r9d,DWORD PTR [rsp+0x4]
  404995:	mov    r8,r12
  404998:	xor    ecx,ecx
  40499a:	mov    rdx,r11
  40499d:	mov    rsi,rbp
  4049a0:	mov    edi,eax
  4049a2:	mov    r12,r11
  4049a5:	call   4029a0 <sendto@plt>
  4049aa:	cmp    rax,r12
  4049ad:	je     404a65 <memcpy@plt+0x2075>
  4049b3:	mov    rax,0x415010
  4049ba:	inc    r15d
  4049bd:	mov    ebx,DWORD PTR [rax]
  4049bf:	cmp    ebx,r15d
  4049c2:	jg     404920 <memcpy@plt+0x1f30>
  4049c8:	test   ebx,ebx
  4049ca:	jle    40489d <memcpy@plt+0x1ead>
  4049d0:	xor    r15d,r15d
  4049d3:	mov    r12d,r15d
  4049d6:	mov    esi,ebx
  4049d8:	mov    r15,rbp
  4049db:	jmp    4049f5 <memcpy@plt+0x2005>
  4049dd:	nop    DWORD PTR [rax]
  4049e0:	mov    rax,0x415010
  4049e7:	inc    r12d
  4049ea:	mov    esi,DWORD PTR [rax]
  4049ec:	cmp    esi,r12d
  4049ef:	jle    40489d <memcpy@plt+0x1ead>
  4049f5:	mov    eax,DWORD PTR [rsp]
  4049f8:	add    eax,r12d
  4049fb:	cdq    
  4049fc:	idiv   esi
  4049fe:	movsxd r8,edx
  404a01:	mov    eax,DWORD PTR [r14+r8*4]
  404a05:	mov    rbx,r8
  404a08:	test   eax,eax
  404a0a:	je     4049e0 <memcpy@plt+0x1ff0>
  404a0c:	shl    r8,0x7
  404a10:	add    r8,0x415340
  404a17:	cmp    WORD PTR [r8],0x2
  404a1c:	mov    eax,0x10
  404a21:	mov    r9d,0x1c
  404a27:	cmove  r9d,eax
  404a2b:	mov    rdi,QWORD PTR [rip+0x105d6]        # 415008 <memcpy@plt+0x12618>
  404a32:	mov    rbp,r8
  404a35:	mov    DWORD PTR [rsp+0x4],r9d
  404a3a:	call   4025a0 <rb_get_fd@plt>
  404a3f:	movsxd r11,r13d
  404a42:	mov    r9d,DWORD PTR [rsp+0x4]
  404a47:	mov    r8,rbp
  404a4a:	xor    ecx,ecx
  404a4c:	mov    rdx,r11
  404a4f:	mov    rsi,r15
  404a52:	mov    edi,eax
  404a54:	mov    rbp,r11
  404a57:	call   4029a0 <sendto@plt>
  404a5c:	cmp    rax,rbp
  404a5f:	jne    4049e0 <memcpy@plt+0x1ff0>
  404a65:	mov    r12,QWORD PTR [rsp+0x8]
  404a6a:	cmp    ebx,0xffffffff
  404a6d:	je     40489d <memcpy@plt+0x1ead>
  404a73:	mov    DWORD PTR [r12+0x140],ebx
  404a7b:	jmp    40489d <memcpy@plt+0x1ead>
  404a80:	call   402880 <__stack_chk_fail@plt>
  404a85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a90:	push   rbx
  404a91:	test   rdi,rdi
  404a94:	je     404b05 <memcpy@plt+0x2115>
  404a96:	mov    rdx,QWORD PTR [rdi+0x10]
  404a9a:	mov    rbx,rdi
  404a9d:	mov    rax,QWORD PTR [rdi+0x8]
  404aa1:	test   rdx,rdx
  404aa4:	je     404af0 <memcpy@plt+0x2100>
  404aa6:	mov    QWORD PTR [rdx+0x8],rax
  404aaa:	mov    rax,QWORD PTR [rdi+0x8]
  404aae:	test   rax,rax
  404ab1:	je     404afc <memcpy@plt+0x210c>
  404ab3:	mov    QWORD PTR [rax+0x10],rdx
  404ab7:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404abe:	mov    QWORD PTR [rbx+0x8],0x0
  404ac6:	mov    QWORD PTR [rbx+0x10],0x0
  404ace:	dec    QWORD PTR [rip+0x1052b]        # 415000 <memcpy@plt+0x12610>
  404ad5:	test   rdi,rdi
  404ad8:	je     404adf <memcpy@plt+0x20ef>
  404ada:	call   4026e0 <free@plt>
  404adf:	mov    rdi,rbx
  404ae2:	pop    rbx
  404ae3:	jmp    4026e0 <free@plt>
  404ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  404af0:	mov    QWORD PTR [rip+0x10501],rax        # 414ff8 <memcpy@plt+0x12608>
  404af7:	test   rax,rax
  404afa:	jne    404ab3 <memcpy@plt+0x20c3>
  404afc:	mov    QWORD PTR [rip+0x104ed],rdx        # 414ff0 <memcpy@plt+0x12600>
  404b03:	jmp    404ab7 <memcpy@plt+0x20c7>
  404b05:	lea    rcx,[rip+0x6b9c]        # 40b6a8 <memcpy@plt+0x8cb8>
  404b0c:	mov    edx,0xeb
  404b11:	lea    rsi,[rip+0x6a30]        # 40b548 <memcpy@plt+0x8b58>
  404b18:	lea    rdi,[rip+0x6a52]        # 40b571 <memcpy@plt+0x8b81>
  404b1f:	call   4025c0 <__assert_fail@plt>
  404b24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404b2f:	nop
  404b30:	push   r12
  404b32:	mov    esi,0x1d8
  404b37:	push   rbp
  404b38:	mov    rbp,rdi
  404b3b:	mov    edi,0x1
  404b40:	push   rbx
  404b41:	sub    rsp,0x10
  404b45:	mov    rax,QWORD PTR fs:0x28
  404b4e:	mov    QWORD PTR [rsp+0x8],rax
  404b53:	xor    eax,eax
  404b55:	call   4028f0 <calloc@plt>
  404b5a:	test   rax,rax
  404b5d:	je     404c58 <memcpy@plt+0x2268>
  404b63:	mov    rbx,rax
  404b66:	call   402760 <rb_current_time@plt>
  404b6b:	mov    QWORD PTR [rbx+0x130],rax
  404b72:	mov    BYTE PTR [rbx+0x129],0x3
  404b79:	mov    QWORD PTR [rbx+0x138],0x4
  404b84:	mov    QWORD PTR [rbx+0x1d0],rbp
  404b8b:	lea    r12,[rsp+0x6]
  404b90:	lea    rbp,[rip+0x10459]        # 414ff0 <memcpy@plt+0x12600>
  404b97:	nop    WORD PTR [rax+rax*1+0x0]
  404ba0:	mov    esi,0x2
  404ba5:	mov    rdi,r12
  404ba8:	call   402950 <rb_get_random@plt>
  404bad:	mov    rax,QWORD PTR [rbp+0x0]
  404bb1:	movzx  ecx,WORD PTR [rsp+0x6]
  404bb6:	test   rax,rax
  404bb9:	je     404c28 <memcpy@plt+0x2238>
  404bbb:	mov    rdx,QWORD PTR [rax]
  404bbe:	cmp    ecx,DWORD PTR [rdx+0x18]
  404bc1:	je     404ba0 <memcpy@plt+0x21b0>
  404bc3:	mov    rdx,rax
  404bc6:	jmp    404bd8 <memcpy@plt+0x21e8>
  404bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  404bd0:	mov    rsi,QWORD PTR [rdx]
  404bd3:	cmp    ecx,DWORD PTR [rsi+0x18]
  404bd6:	je     404ba0 <memcpy@plt+0x21b0>
  404bd8:	mov    rdx,QWORD PTR [rdx+0x10]
  404bdc:	test   rdx,rdx
  404bdf:	jne    404bd0 <memcpy@plt+0x21e0>
  404be1:	mov    DWORD PTR [rbx+0x18],ecx
  404be4:	mov    QWORD PTR [rbx],rbx
  404be7:	mov    QWORD PTR [rbx+0x8],0x0
  404bef:	mov    QWORD PTR [rbx+0x10],rax
  404bf3:	mov    QWORD PTR [rax+0x8],rbx
  404bf7:	inc    QWORD PTR [rip+0x10402]        # 415000 <memcpy@plt+0x12610>
  404bfe:	mov    QWORD PTR [rip+0x103eb],rbx        # 414ff0 <memcpy@plt+0x12600>
  404c05:	mov    rax,rbx
  404c08:	mov    rdi,QWORD PTR [rsp+0x8]
  404c0d:	xor    rdi,QWORD PTR fs:0x28
  404c16:	jne    404c5d <memcpy@plt+0x226d>
  404c18:	add    rsp,0x10
  404c1c:	pop    rbx
  404c1d:	pop    rbp
  404c1e:	pop    r12
  404c20:	ret    
  404c21:	nop    DWORD PTR [rax+0x0]
  404c28:	cmp    QWORD PTR [rip+0x103c8],0x0        # 414ff8 <memcpy@plt+0x12608>
  404c30:	mov    DWORD PTR [rbx+0x18],ecx
  404c33:	mov    QWORD PTR [rbx],rbx
  404c36:	mov    QWORD PTR [rbx+0x8],0x0
  404c3e:	mov    QWORD PTR [rbx+0x10],0x0
  404c46:	jne    404bf7 <memcpy@plt+0x2207>
  404c48:	mov    QWORD PTR [rip+0x103a9],rbx        # 414ff8 <memcpy@plt+0x12608>
  404c4f:	jmp    404bf7 <memcpy@plt+0x2207>
  404c51:	nop    DWORD PTR [rax+0x0]
  404c58:	call   402830 <rb_outofmemory@plt>
  404c5d:	call   402880 <__stack_chk_fail@plt>
  404c62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c6d:	nop    DWORD PTR [rax]
  404c70:	push   r13
  404c72:	push   r12
  404c74:	mov    r12d,ecx
  404c77:	push   rbp
  404c78:	mov    rbp,rsi
  404c7b:	push   rbx
  404c7c:	mov    rbx,rdx
  404c7f:	sub    rsp,0x8
  404c83:	test   rdx,rdx
  404c86:	je     404cb0 <memcpy@plt+0x22c0>
  404c88:	lea    rdi,[rbx+0x29]
  404c8c:	mov    rsi,rbp
  404c8f:	mov    edx,0x100
  404c94:	call   4026b0 <rb_strlcpy@plt>
  404c99:	mov    BYTE PTR [rbx+0x28],r12b
  404c9d:	add    rsp,0x8
  404ca1:	mov    rdi,rbx
  404ca4:	pop    rbx
  404ca5:	pop    rbp
  404ca6:	pop    r12
  404ca8:	pop    r13
  404caa:	jmp    404840 <memcpy@plt+0x1e50>
  404caf:	nop
  404cb0:	call   404b30 <memcpy@plt+0x2140>
  404cb5:	mov    rdi,rbp
  404cb8:	mov    rbx,rax
  404cbb:	call   4026f0 <strlen@plt>
  404cc0:	lea    r13,[rax+0x1]
  404cc4:	mov    rdi,r13
  404cc7:	call   402650 <malloc@plt>
  404ccc:	test   rax,rax
  404ccf:	je     404cf0 <memcpy@plt+0x2300>
  404cd1:	mov    rdx,r13
  404cd4:	mov    rsi,rbp
  404cd7:	mov    rdi,rax
  404cda:	call   4029f0 <memcpy@plt>
  404cdf:	mov    QWORD PTR [rbx+0x1c8],rax
  404ce6:	jmp    404c88 <memcpy@plt+0x2298>
  404ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  404cf0:	call   402830 <rb_outofmemory@plt>
  404cf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d00:	endbr64 
  404d04:	jmp    404780 <memcpy@plt+0x1d90>
  404d09:	nop    DWORD PTR [rax+0x0]
  404d10:	endbr64 
  404d14:	sub    rsp,0x8
  404d18:	mov    rdi,QWORD PTR [rip+0x102e9]        # 415008 <memcpy@plt+0x12618>
  404d1f:	call   4027c0 <rb_close@plt>
  404d24:	mov    rdi,QWORD PTR [rip+0x1027d]        # 414fa8 <memcpy@plt+0x125b8>
  404d2b:	mov    QWORD PTR [rip+0x102d2],0x0        # 415008 <memcpy@plt+0x12618>
  404d36:	call   402580 <rb_event_delete@plt>
  404d3b:	add    rsp,0x8
  404d3f:	jmp    404780 <memcpy@plt+0x1d90>
  404d44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d4f:	nop
  404d50:	endbr64 
  404d54:	push   r14
  404d56:	push   r13
  404d58:	push   r12
  404d5a:	push   rbp
  404d5b:	push   rbx
  404d5c:	sub    rsp,0x110
  404d63:	mov    rax,QWORD PTR fs:0x28
  404d6c:	mov    QWORD PTR [rsp+0x108],rax
  404d74:	xor    eax,eax
  404d76:	test   rdi,rdi
  404d79:	je     404ed7 <memcpy@plt+0x24e7>
  404d7f:	mov    rbx,rsp
  404d82:	mov    r12,rsi
  404d85:	mov    r13d,edx
  404d88:	mov    rsi,rdi
  404d8b:	mov    edx,0x100
  404d90:	mov    rdi,rbx
  404d93:	call   4026b0 <rb_strlcpy@plt>
  404d98:	mov    esi,0x2e
  404d9d:	mov    rdi,rbx
  404da0:	call   402800 <strchr@plt>
  404da5:	test   rax,rax
  404da8:	je     404de8 <memcpy@plt+0x23f8>
  404daa:	xor    edx,edx
  404dac:	mov    ecx,r13d
  404daf:	mov    rsi,rbx
  404db2:	mov    rdi,r12
  404db5:	call   404c70 <memcpy@plt+0x2280>
  404dba:	mov    rax,QWORD PTR [rsp+0x108]
  404dc2:	xor    rax,QWORD PTR fs:0x28
  404dcb:	jne    404ef6 <memcpy@plt+0x2506>
  404dd1:	add    rsp,0x110
  404dd8:	pop    rbx
  404dd9:	pop    rbp
  404dda:	pop    r12
  404ddc:	pop    r13
  404dde:	pop    r14
  404de0:	ret    
  404de1:	nop    DWORD PTR [rax+0x0]
  404de8:	mov    r14,0x415240
  404def:	cmp    BYTE PTR [r14],0x0
  404df3:	je     404daa <memcpy@plt+0x23ba>
  404df5:	mov    rbp,rbx
  404df8:	mov    edx,DWORD PTR [rbp+0x0]
  404dfb:	add    rbp,0x4
  404dff:	lea    eax,[rdx-0x1010101]
  404e05:	andn   eax,edx,eax
  404e0a:	and    eax,0x80808080
  404e0f:	je     404df8 <memcpy@plt+0x2408>
  404e11:	mov    edx,eax
  404e13:	shr    edx,0x10
  404e16:	test   eax,0x8080
  404e1b:	cmove  eax,edx
  404e1e:	lea    rdx,[rbp+0x2]
  404e22:	cmove  rbp,rdx
  404e26:	mov    ecx,eax
  404e28:	add    cl,al
  404e2a:	sbb    rbp,0x3
  404e2e:	mov    rdi,r14
  404e31:	sub    rbp,rbx
  404e34:	call   4026f0 <strlen@plt>
  404e39:	lea    rdx,[rbp+rax*1+0x2]
  404e3e:	cmp    rdx,0xfe
  404e45:	ja     404daa <memcpy@plt+0x23ba>
  404e4b:	inc    rax
  404e4e:	mov    BYTE PTR [rsp+rbp*1],0x2e
  404e52:	lea    rcx,[rbx+rbp*1+0x1]
  404e57:	cmp    eax,0x8
  404e5a:	jae    404e90 <memcpy@plt+0x24a0>
  404e5c:	test   al,0x4
  404e5e:	jne    404ec2 <memcpy@plt+0x24d2>
  404e60:	test   eax,eax
  404e62:	je     404daa <memcpy@plt+0x23ba>
  404e68:	movzx  edx,BYTE PTR [r14]
  404e6c:	mov    BYTE PTR [rcx],dl
  404e6e:	test   al,0x2
  404e70:	je     404daa <memcpy@plt+0x23ba>
  404e76:	mov    edx,eax
  404e78:	movzx  eax,WORD PTR [rdx+r14*1-0x2]
  404e7e:	mov    WORD PTR [rcx+rdx*1-0x2],ax
  404e83:	jmp    404daa <memcpy@plt+0x23ba>
  404e88:	nop    DWORD PTR [rax+rax*1+0x0]
  404e90:	mov    rdx,QWORD PTR [r14]
  404e93:	lea    rdi,[rcx+0x8]
  404e97:	mov    QWORD PTR [rcx],rdx
  404e9a:	mov    edx,eax
  404e9c:	and    rdi,0xfffffffffffffff8
  404ea0:	mov    rsi,QWORD PTR [rdx+r14*1-0x8]
  404ea5:	mov    QWORD PTR [rcx+rdx*1-0x8],rsi
  404eaa:	sub    rcx,rdi
  404ead:	add    eax,ecx
  404eaf:	mov    rsi,r14
  404eb2:	shr    eax,0x3
  404eb5:	sub    rsi,rcx
  404eb8:	mov    ecx,eax
  404eba:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404ebd:	jmp    404daa <memcpy@plt+0x23ba>
  404ec2:	mov    edx,DWORD PTR [r14]
  404ec5:	mov    DWORD PTR [rcx],edx
  404ec7:	mov    edx,eax
  404ec9:	mov    eax,DWORD PTR [rdx+r14*1-0x4]
  404ece:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
  404ed2:	jmp    404daa <memcpy@plt+0x23ba>
  404ed7:	lea    rcx,[rip+0x67b2]        # 40b690 <memcpy@plt+0x8ca0>
  404ede:	mov    edx,0x19c
  404ee3:	lea    rsi,[rip+0x66ef]        # 40b5d9 <memcpy@plt+0x8be9>
  404eea:	lea    rdi,[rip+0x66ee]        # 40b5df <memcpy@plt+0x8bef>
  404ef1:	call   4025c0 <__assert_fail@plt>
  404ef6:	call   402880 <__stack_chk_fail@plt>
  404efb:	nop    DWORD PTR [rax+rax*1+0x0]
  404f00:	endbr64 
  404f04:	push   r15
  404f06:	push   r14
  404f08:	push   r13
  404f0a:	push   r12
  404f0c:	push   rbp
  404f0d:	push   rbx
  404f0e:	sub    rsp,0x18
  404f12:	movzx  eax,WORD PTR [rdx]
  404f15:	cmp    ax,0x2
  404f19:	je     4050f0 <memcpy@plt+0x2700>
  404f1f:	cmp    ax,0xa
  404f23:	je     404f38 <memcpy@plt+0x2548>
  404f25:	add    rsp,0x18
  404f29:	pop    rbx
  404f2a:	pop    rbp
  404f2b:	pop    r12
  404f2d:	pop    r13
  404f2f:	pop    r14
  404f31:	pop    r15
  404f33:	ret    
  404f34:	nop    DWORD PTR [rax+0x0]
  404f38:	test   rcx,rcx
  404f3b:	lea    rax,[rip+0x66b4]        # 40b5f6 <memcpy@plt+0x8c06>
  404f42:	cmove  rcx,rax
  404f46:	movzx  eax,BYTE PTR [rdx+0x10]
  404f4a:	movzx  r9d,BYTE PTR [rdx+0x8]
  404f4f:	mov    BYTE PTR [rsp+0xc],al
  404f53:	movzx  r10d,BYTE PTR [rdx+0x11]
  404f58:	movzx  r8d,BYTE PTR [rdx+0x12]
  404f5d:	movzx  eax,BYTE PTR [rdx+0x13]
  404f61:	mov    BYTE PTR [rsp+0xd],r10b
  404f66:	mov    BYTE PTR [rsp+0xe],r8b
  404f6b:	mov    BYTE PTR [rsp+0xf],al
  404f6f:	movzx  r15d,BYTE PTR [rdx+0x9]
  404f74:	movzx  r14d,BYTE PTR [rdx+0xa]
  404f79:	movzx  r13d,BYTE PTR [rdx+0xb]
  404f7e:	movzx  r12d,BYTE PTR [rdx+0xc]
  404f83:	movzx  ebp,BYTE PTR [rdx+0xd]
  404f87:	movzx  ebx,BYTE PTR [rdx+0xe]
  404f8b:	movzx  r11d,BYTE PTR [rdx+0xf]
  404f90:	movzx  r10d,BYTE PTR [rdx+0x14]
  404f95:	movzx  r8d,BYTE PTR [rdx+0x15]
  404f9a:	movzx  eax,BYTE PTR [rdx+0x16]
  404f9e:	movzx  edx,BYTE PTR [rdx+0x17]
  404fa2:	push   rcx
  404fa3:	mov    ecx,r9d
  404fa6:	shr    cl,0x4
  404fa9:	movzx  ecx,cl
  404fac:	push   rcx
  404fad:	and    r9d,0xf
  404fb1:	mov    ecx,r15d
  404fb4:	push   r9
  404fb6:	shr    cl,0x4
  404fb9:	movzx  ecx,cl
  404fbc:	push   rcx
  404fbd:	and    r15d,0xf
  404fc1:	mov    ecx,r14d
  404fc4:	push   r15
  404fc6:	shr    cl,0x4
  404fc9:	movzx  ecx,cl
  404fcc:	push   rcx
  404fcd:	and    r14d,0xf
  404fd1:	mov    ecx,r13d
  404fd4:	push   r14
  404fd6:	shr    cl,0x4
  404fd9:	movzx  ecx,cl
  404fdc:	push   rcx
  404fdd:	and    r13d,0xf
  404fe1:	mov    ecx,r12d
  404fe4:	push   r13
  404fe6:	shr    cl,0x4
  404fe9:	movzx  ecx,cl
  404fec:	push   rcx
  404fed:	and    r12d,0xf
  404ff1:	mov    ecx,ebp
  404ff3:	push   r12
  404ff5:	shr    cl,0x4
  404ff8:	movzx  ecx,cl
  404ffb:	push   rcx
  404ffc:	and    ebp,0xf
  404fff:	mov    ecx,ebx
  405001:	push   rbp
  405002:	shr    cl,0x4
  405005:	movzx  ecx,cl
  405008:	push   rcx
  405009:	and    ebx,0xf
  40500c:	mov    ecx,r11d
  40500f:	push   rbx
  405010:	shr    cl,0x4
  405013:	movzx  ecx,cl
  405016:	push   rcx
  405017:	and    r11d,0xf
  40501b:	mov    r9d,edx
  40501e:	push   r11
  405020:	and    r9d,0xf
  405024:	movzx  ebx,BYTE PTR [rsp+0x94]
  40502c:	mov    ecx,ebx
  40502e:	shr    cl,0x4
  405031:	movzx  ecx,cl
  405034:	push   rcx
  405035:	mov    ecx,ebx
  405037:	and    ecx,0xf
  40503a:	push   rcx
  40503b:	movzx  ebx,BYTE PTR [rsp+0xa5]
  405043:	mov    ecx,ebx
  405045:	shr    cl,0x4
  405048:	movzx  ecx,cl
  40504b:	push   rcx
  40504c:	mov    ecx,ebx
  40504e:	and    ecx,0xf
  405051:	push   rcx
  405052:	movzx  ebx,BYTE PTR [rsp+0xb6]
  40505a:	mov    ecx,ebx
  40505c:	shr    cl,0x4
  40505f:	movzx  ecx,cl
  405062:	push   rcx
  405063:	mov    ecx,ebx
  405065:	and    ecx,0xf
  405068:	push   rcx
  405069:	movzx  ebx,BYTE PTR [rsp+0xc7]
  405071:	mov    ecx,ebx
  405073:	shr    cl,0x4
  405076:	movzx  ecx,cl
  405079:	push   rcx
  40507a:	mov    ecx,ebx
  40507c:	and    ecx,0xf
  40507f:	push   rcx
  405080:	mov    ecx,r10d
  405083:	shr    cl,0x4
  405086:	movzx  ecx,cl
  405089:	push   rcx
  40508a:	and    r10d,0xf
  40508e:	mov    ecx,r8d
  405091:	push   r10
  405093:	shr    cl,0x4
  405096:	movzx  ecx,cl
  405099:	push   rcx
  40509a:	and    r8d,0xf
  40509e:	mov    ecx,eax
  4050a0:	push   r8
  4050a2:	shr    cl,0x4
  4050a5:	movzx  ecx,cl
  4050a8:	push   rcx
  4050a9:	and    eax,0xf
  4050ac:	lea    r8,[rip+0x655d]        # 40b610 <memcpy@plt+0x8c20>
  4050b3:	push   rax
  4050b4:	mov    eax,edx
  4050b6:	shr    al,0x4
  4050b9:	movzx  eax,al
  4050bc:	push   rax
  4050bd:	mov    rcx,0xffffffffffffffff
  4050c4:	xor    eax,eax
  4050c6:	mov    edx,0x1
  4050cb:	call   402970 <__snprintf_chk@plt>
  4050d0:	add    rsp,0x100
  4050d7:	add    rsp,0x18
  4050db:	pop    rbx
  4050dc:	pop    rbp
  4050dd:	pop    r12
  4050df:	pop    r13
  4050e1:	pop    r14
  4050e3:	pop    r15
  4050e5:	ret    
  4050e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050f0:	test   rcx,rcx
  4050f3:	lea    rax,[rip+0x64ef]        # 40b5e9 <memcpy@plt+0x8bf9>
  4050fa:	cmove  rcx,rax
  4050fe:	lea    r8,[rip+0x64fa]        # 40b5ff <memcpy@plt+0x8c0f>
  405105:	push   rcx
  405106:	mov    rcx,0xffffffffffffffff
  40510d:	movzx  eax,BYTE PTR [rdx+0x4]
  405111:	push   rax
  405112:	movzx  eax,BYTE PTR [rdx+0x5]
  405116:	push   rax
  405117:	movzx  eax,BYTE PTR [rdx+0x6]
  40511b:	push   rax
  40511c:	xor    eax,eax
  40511e:	movzx  r9d,BYTE PTR [rdx+0x7]
  405123:	mov    edx,0x1
  405128:	call   402970 <__snprintf_chk@plt>
  40512d:	add    rsp,0x20
  405131:	add    rsp,0x18
  405135:	pop    rbx
  405136:	pop    rbp
  405137:	pop    r12
  405139:	pop    r13
  40513b:	pop    r14
  40513d:	pop    r15
  40513f:	ret    
  405140:	push   rbp
  405141:	mov    rbp,rsi
  405144:	push   rbx
  405145:	mov    rbx,rdx
  405148:	sub    rsp,0x8
  40514c:	test   rdx,rdx
  40514f:	je     405180 <memcpy@plt+0x2790>
  405151:	lea    rdi,[rbx+0x29]
  405155:	mov    rdx,rbp
  405158:	xor    ecx,ecx
  40515a:	mov    esi,0x100
  40515f:	call   404f00 <memcpy@plt+0x2510>
  405164:	mov    BYTE PTR [rbx+0x28],0xc
  405168:	add    rsp,0x8
  40516c:	mov    rdi,rbx
  40516f:	pop    rbx
  405170:	pop    rbp
  405171:	jmp    404840 <memcpy@plt+0x1e50>
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	call   404b30 <memcpy@plt+0x2140>
  405185:	vmovdqu xmm0,XMMWORD PTR [rbp+0x0]
  40518a:	mov    esi,0x100
  40518f:	vmovups XMMWORD PTR [rax+0x148],xmm0
  405197:	vmovdqu xmm1,XMMWORD PTR [rbp+0x10]
  40519c:	mov    edi,0x1
  4051a1:	vmovups XMMWORD PTR [rax+0x158],xmm1
  4051a9:	vmovdqu xmm2,XMMWORD PTR [rbp+0x20]
  4051ae:	mov    rbx,rax
  4051b1:	vmovups XMMWORD PTR [rax+0x168],xmm2
  4051b9:	vmovdqu xmm3,XMMWORD PTR [rbp+0x30]
  4051be:	vmovups XMMWORD PTR [rax+0x178],xmm3
  4051c6:	vmovdqu xmm4,XMMWORD PTR [rbp+0x40]
  4051cb:	vmovups XMMWORD PTR [rax+0x188],xmm4
  4051d3:	vmovdqu xmm5,XMMWORD PTR [rbp+0x50]
  4051d8:	vmovups XMMWORD PTR [rax+0x198],xmm5
  4051e0:	vmovdqu xmm6,XMMWORD PTR [rbp+0x60]
  4051e5:	vmovups XMMWORD PTR [rax+0x1a8],xmm6
  4051ed:	vmovdqu xmm7,XMMWORD PTR [rbp+0x70]
  4051f2:	vmovups XMMWORD PTR [rax+0x1b8],xmm7
  4051fa:	call   4028f0 <calloc@plt>
  4051ff:	test   rax,rax
  405202:	je     405210 <memcpy@plt+0x2820>
  405204:	mov    QWORD PTR [rbx+0x1c8],rax
  40520b:	jmp    405151 <memcpy@plt+0x2761>
  405210:	call   402830 <rb_outofmemory@plt>
  405215:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405220:	movzx  eax,BYTE PTR [rdi+0x129]
  405227:	dec    eax
  405229:	mov    BYTE PTR [rdi+0x129],al
  40522f:	test   al,al
  405231:	jle    405268 <memcpy@plt+0x2878>
  405233:	movsx  ecx,BYTE PTR [rdi+0x28]
  405237:	cmp    cl,0xc
  40523a:	je     405250 <memcpy@plt+0x2860>
  40523c:	cmp    cl,0x1c
  40523f:	je     405288 <memcpy@plt+0x2898>
  405241:	cmp    cl,0x1
  405244:	je     405288 <memcpy@plt+0x2898>
  405246:	ret    
  405247:	nop    WORD PTR [rax+rax*1+0x0]
  405250:	lea    rsi,[rdi+0x148]
  405257:	mov    rdx,rdi
  40525a:	xor    edi,edi
  40525c:	jmp    405140 <memcpy@plt+0x2750>
  405261:	nop    DWORD PTR [rax+0x0]
  405268:	push   rbx
  405269:	mov    rbx,rdi
  40526c:	xor    esi,esi
  40526e:	mov    rax,QWORD PTR [rdi+0x1d0]
  405275:	mov    rdi,QWORD PTR [rax]
  405278:	call   QWORD PTR [rax+0x8]
  40527b:	mov    rdi,rbx
  40527e:	pop    rbx
  40527f:	jmp    404a90 <memcpy@plt+0x20a0>
  405284:	nop    DWORD PTR [rax+0x0]
  405288:	mov    rsi,QWORD PTR [rdi+0x1c8]
  40528f:	mov    rdx,rdi
  405292:	xor    edi,edi
  405294:	jmp    404c70 <memcpy@plt+0x2280>
  405299:	nop    DWORD PTR [rax+0x0]
  4052a0:	endbr64 
  4052a4:	push   r12
  4052a6:	push   rbp
  4052a7:	push   rbx
  4052a8:	call   402760 <rb_current_time@plt>
  4052ad:	mov    rdx,QWORD PTR [rip+0xfd3c]        # 414ff0 <memcpy@plt+0x12600>
  4052b4:	test   rdx,rdx
  4052b7:	je     405300 <memcpy@plt+0x2910>
  4052b9:	mov    rbx,QWORD PTR [rdx+0x10]
  4052bd:	mov    rbp,rax
  4052c0:	lea    r12,[rip+0xfcf9]        # 414fc0 <memcpy@plt+0x125d0>
  4052c7:	nop    WORD PTR [rax+rax*1+0x0]
  4052d0:	mov    rdi,QWORD PTR [rdx]
  4052d3:	mov    rdx,QWORD PTR [rdi+0x138]
  4052da:	mov    rax,QWORD PTR [rdi+0x130]
  4052e1:	add    rax,rdx
  4052e4:	cmp    rbp,rax
  4052e7:	jge    405308 <memcpy@plt+0x2918>
  4052e9:	test   rbx,rbx
  4052ec:	je     405300 <memcpy@plt+0x2910>
  4052ee:	mov    rdx,rbx
  4052f1:	mov    rbx,QWORD PTR [rbx+0x10]
  4052f5:	jmp    4052d0 <memcpy@plt+0x28e0>
  4052f7:	nop    WORD PTR [rax+rax*1+0x0]
  405300:	pop    rbx
  405301:	pop    rbp
  405302:	pop    r12
  405304:	ret    
  405305:	nop    DWORD PTR [rax]
  405308:	add    rdx,rdx
  40530b:	mov    QWORD PTR [rdi+0x130],rbp
  405312:	mov    QWORD PTR [rdi+0x138],rdx
  405319:	movsxd rax,DWORD PTR [rdi+0x140]
  405320:	inc    DWORD PTR [r12+rax*4]
  405324:	call   405220 <memcpy@plt+0x2830>
  405329:	jmp    4052e9 <memcpy@plt+0x28f9>
  40532b:	nop    DWORD PTR [rax+rax*1+0x0]
  405330:	push   r15
  405332:	push   r14
  405334:	push   r13
  405336:	push   r12
  405338:	push   rbp
  405339:	push   rbx
  40533a:	sub    rsp,0x638
  405341:	mov    rax,QWORD PTR fs:0x28
  40534a:	mov    QWORD PTR [rsp+0x628],rax
  405352:	xor    eax,eax
  405354:	lea    r12,[rsp+0x20]
  405359:	mov    DWORD PTR [rsp+0x1c],0x80
  405361:	lea    rbp,[rsp+0x210]
  405369:	call   4025a0 <rb_get_fd@plt>
  40536e:	mov    edi,eax
  405370:	mov    edx,0x40c
  405375:	lea    r9,[rsp+0x1c]
  40537a:	mov    r8,r12
  40537d:	xor    ecx,ecx
  40537f:	mov    rsi,rbp
  405382:	call   402920 <recvfrom@plt>
  405387:	lea    edx,[rax+0x1]
  40538a:	cmp    edx,0x1
  40538d:	jbe    405560 <memcpy@plt+0x2b70>
  405393:	cmp    eax,0xc
  405396:	jle    4054c8 <memcpy@plt+0x2ad8>
  40539c:	movbe  dx,WORD PTR [rsp+0x216]
  4053a6:	movbe  r9w,WORD PTR [rsp+0x214]
  4053b1:	mov    WORD PTR [rsp+0x216],dx
  4053b9:	movbe  dx,WORD PTR [rsp+0x218]
  4053c3:	mov    WORD PTR [rsp+0x214],r9w
  4053cc:	mov    WORD PTR [rsp+0x218],dx
  4053d4:	movbe  dx,WORD PTR [rsp+0x21a]
  4053de:	movzx  ecx,WORD PTR [rsp+0x210]
  4053e6:	mov    WORD PTR [rsp+0x21a],dx
  4053ee:	mov    rdx,QWORD PTR [rip+0xfbfb]        # 414ff0 <memcpy@plt+0x12600>
  4053f5:	test   rdx,rdx
  4053f8:	jne    40540d <memcpy@plt+0x2a1d>
  4053fa:	jmp    4054c8 <memcpy@plt+0x2ad8>
  4053ff:	nop
  405400:	mov    rdx,QWORD PTR [rdx+0x10]
  405404:	test   rdx,rdx
  405407:	je     4054c8 <memcpy@plt+0x2ad8>
  40540d:	mov    rbx,QWORD PTR [rdx]
  405410:	cmp    ecx,DWORD PTR [rbx+0x18]
  405413:	jne    405400 <memcpy@plt+0x2a10>
  405415:	mov    rdx,0x415010
  40541c:	mov    ecx,DWORD PTR [rdx]
  40541e:	test   ecx,ecx
  405420:	jle    405550 <memcpy@plt+0x2b60>
  405426:	mov    rdx,0x415340
  40542d:	dec    ecx
  40542f:	shl    rcx,0x7
  405433:	movzx  esi,WORD PTR [rsp+0x20]
  405438:	movzx  r8d,WORD PTR [rsp+0x22]
  40543e:	mov    r11d,DWORD PTR [rsp+0x24]
  405443:	lea    rdi,[rdx+rcx*1+0x80]
  40544b:	add    r12,0x8
  40544f:	jmp    40547d <memcpy@plt+0x2a8d>
  405451:	nop    DWORD PTR [rax+0x0]
  405458:	cmp    cx,0xa
  40545c:	jne    405470 <memcpy@plt+0x2a80>
  40545e:	cmp    si,0xa
  405462:	je     405500 <memcpy@plt+0x2b10>
  405468:	nop    DWORD PTR [rax+rax*1+0x0]
  405470:	sub    rdx,0xffffffffffffff80
  405474:	cmp    rdi,rdx
  405477:	je     405550 <memcpy@plt+0x2b60>
  40547d:	movzx  ecx,WORD PTR [rdx]
  405480:	cmp    cx,0x2
  405484:	jne    405458 <memcpy@plt+0x2a68>
  405486:	cmp    si,0x2
  40548a:	jne    405470 <memcpy@plt+0x2a80>
  40548c:	cmp    r8w,WORD PTR [rdx+0x2]
  405491:	jne    405470 <memcpy@plt+0x2a80>
  405493:	mov    ecx,DWORD PTR [rdx+0x4]
  405496:	test   ecx,ecx
  405498:	je     4054a0 <memcpy@plt+0x2ab0>
  40549a:	cmp    ecx,r11d
  40549d:	jne    405470 <memcpy@plt+0x2a80>
  40549f:	nop
  4054a0:	mov    r13d,0x1
  4054a6:	cmp    DWORD PTR [rbx+0x140],r13d
  4054ad:	je     4054bd <memcpy@plt+0x2acd>
  4054af:	lea    rdx,[rip+0xfb0a]        # 414fc0 <memcpy@plt+0x125d0>
  4054b6:	movsxd rcx,r13d
  4054b9:	add    DWORD PTR [rdx+rcx*4],0x3
  4054bd:	cmp    r9w,0x1
  4054c2:	je     405570 <memcpy@plt+0x2b80>
  4054c8:	mov    eax,0x1
  4054cd:	mov    rbx,QWORD PTR [rsp+0x628]
  4054d5:	xor    rbx,QWORD PTR fs:0x28
  4054de:	jne    4058ed <memcpy@plt+0x2efd>
  4054e4:	add    rsp,0x638
  4054eb:	pop    rbx
  4054ec:	pop    rbp
  4054ed:	pop    r12
  4054ef:	pop    r13
  4054f1:	pop    r14
  4054f3:	pop    r15
  4054f5:	ret    
  4054f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405500:	cmp    WORD PTR [rdx+0x2],r8w
  405505:	jne    405470 <memcpy@plt+0x2a80>
  40550b:	mov    rcx,QWORD PTR [rdx+0x8]
  40550f:	mov    r10,QWORD PTR [rdx+0x10]
  405513:	mov    r14,QWORD PTR [r12+0x8]
  405518:	mov    r13,QWORD PTR [r12]
  40551c:	xor    r14,r10
  40551f:	xor    r13,rcx
  405522:	or     r14,r13
  405525:	je     4054a0 <memcpy@plt+0x2ab0>
  40552b:	mov    r13,QWORD PTR [rip+0x9abe]        # 40eff0 <memcpy@plt+0xc600>
  405532:	xor    r10,QWORD PTR [r13+0x8]
  405536:	xor    rcx,QWORD PTR [r13+0x0]
  40553a:	or     r10,rcx
  40553d:	je     4054a0 <memcpy@plt+0x2ab0>
  405543:	sub    rdx,0xffffffffffffff80
  405547:	cmp    rdi,rdx
  40554a:	jne    40547d <memcpy@plt+0x2a8d>
  405550:	xor    r13d,r13d
  405553:	jmp    4054a6 <memcpy@plt+0x2ab6>
  405558:	nop    DWORD PTR [rax+rax*1+0x0]
  405560:	xor    eax,eax
  405562:	jmp    4054cd <memcpy@plt+0x2add>
  405567:	nop    WORD PTR [rax+rax*1+0x0]
  405570:	cdqe   
  405572:	lea    r12,[rbp+rax*1+0x0]
  405577:	lea    r14,[rsp+0xa0]
  40557f:	lea    r15,[rbp+0xc]
  405583:	mov    r8d,0x100
  405589:	mov    rcx,r14
  40558c:	mov    rdx,r15
  40558f:	mov    rsi,r12
  405592:	mov    rdi,rbp
  405595:	call   405c50 <memcpy@plt+0x3260>
  40559a:	test   eax,eax
  40559c:	jle    4054c8 <memcpy@plt+0x2ad8>
  4055a2:	lea    rsi,[rbx+0x29]
  4055a6:	mov    rdi,r14
  4055a9:	call   402510 <rb_strcasecmp@plt>
  4055ae:	test   eax,eax
  4055b0:	jne    4054c8 <memcpy@plt+0x2ad8>
  4055b6:	movzx  eax,BYTE PTR [rsp+0x213]
  4055be:	and    eax,0xf
  4055c1:	jne    405620 <memcpy@plt+0x2c30>
  4055c3:	movzx  eax,WORD PTR [rsp+0x216]
  4055cb:	test   ax,ax
  4055ce:	je     40564a <memcpy@plt+0x2c5a>
  4055d0:	cmp    WORD PTR [rsp+0x214],0x0
  4055d9:	jne    4055f1 <memcpy@plt+0x2c01>
  4055db:	jmp    405673 <memcpy@plt+0x2c83>
  4055e0:	dec    WORD PTR [rsp+0x214]
  4055e8:	cdqe   
  4055ea:	lea    r15,[r15+rax*1+0x4]
  4055ef:	je     40566b <memcpy@plt+0x2c7b>
  4055f1:	mov    rsi,r12
  4055f4:	mov    rdi,r15
  4055f7:	call   406260 <memcpy@plt+0x3870>
  4055fc:	test   eax,eax
  4055fe:	jns    4055e0 <memcpy@plt+0x2bf0>
  405600:	lea    rax,[rip+0xf9b9]        # 414fc0 <memcpy@plt+0x125d0>
  405607:	mov    rdi,rbx
  40560a:	inc    DWORD PTR [rax+r13*4]
  40560e:	call   405220 <memcpy@plt+0x2830>
  405613:	mov    eax,0x1
  405618:	jmp    4054cd <memcpy@plt+0x2add>
  40561d:	nop    DWORD PTR [rax]
  405620:	lea    edx,[rax-0x4]
  405623:	cmp    dl,0x1
  405626:	jbe    405600 <memcpy@plt+0x2c10>
  405628:	cmp    al,0x2
  40562a:	je     405600 <memcpy@plt+0x2c10>
  40562c:	cmp    al,0x3
  40562e:	jne    40564a <memcpy@plt+0x2c5a>
  405630:	lea    rcx,[rip+0xf989]        # 414fc0 <memcpy@plt+0x125d0>
  405637:	mov    edx,DWORD PTR [rcx+r13*4]
  40563b:	test   edx,edx
  40563d:	lea    eax,[rdx+0x3]
  405640:	cmovns eax,edx
  405643:	sar    eax,0x2
  405646:	mov    DWORD PTR [rcx+r13*4],eax
  40564a:	mov    rax,QWORD PTR [rbx+0x1d0]
  405651:	xor    esi,esi
  405653:	mov    rdi,QWORD PTR [rax]
  405656:	call   QWORD PTR [rax+0x8]
  405659:	mov    rdi,rbx
  40565c:	call   404a90 <memcpy@plt+0x20a0>
  405661:	mov    eax,0x1
  405666:	jmp    4054cd <memcpy@plt+0x2add>
  40566b:	movzx  eax,WORD PTR [rsp+0x216]
  405673:	cmp    r12,r15
  405676:	jbe    40572e <memcpy@plt+0x2d3e>
  40567c:	test   ax,ax
  40567f:	je     40572e <memcpy@plt+0x2d3e>
  405685:	dec    eax
  405687:	mov    r8d,0x163
  40568d:	mov    rcx,r14
  405690:	mov    rdx,r15
  405693:	mov    rsi,r12
  405696:	mov    rdi,rbp
  405699:	mov    WORD PTR [rsp+0x216],ax
  4056a1:	call   405c50 <memcpy@plt+0x3260>
  4056a6:	test   eax,eax
  4056a8:	jle    405600 <memcpy@plt+0x2c10>
  4056ae:	cdqe   
  4056b0:	add    r15,rax
  4056b3:	lea    rdx,[r15+0xa]
  4056b7:	cmp    r12,rdx
  4056ba:	mov    BYTE PTR [rsp+0x19f],0x0
  4056c2:	mov    QWORD PTR [rsp],rdx
  4056c6:	jbe    40572e <memcpy@plt+0x2d3e>
  4056c8:	mov    rdi,r15
  4056cb:	call   406310 <memcpy@plt+0x3920>
  4056d0:	lea    rdi,[r15+0x2]
  4056d4:	mov    DWORD PTR [rsp+0xc],eax
  4056d8:	call   406310 <memcpy@plt+0x3920>
  4056dd:	lea    rdi,[r15+0x4]
  4056e1:	call   406320 <memcpy@plt+0x3930>
  4056e6:	mov    QWORD PTR [rbx+0x20],rax
  4056ea:	lea    rdi,[r15+0x8]
  4056ee:	call   406310 <memcpy@plt+0x3920>
  4056f3:	mov    ecx,DWORD PTR [rsp+0xc]
  4056f7:	mov    rdx,QWORD PTR [rsp]
  4056fb:	cmp    ecx,0xc
  4056fe:	je     40585f <memcpy@plt+0x2e6f>
  405704:	cmp    ecx,0x1c
  405707:	je     40582d <memcpy@plt+0x2e3d>
  40570d:	cmp    ecx,0x1
  405710:	je     405737 <memcpy@plt+0x2d47>
  405712:	cdqe   
  405714:	lea    r15,[rdx+rax*1]
  405718:	movzx  eax,WORD PTR [rsp+0x216]
  405720:	test   ax,ax
  405723:	je     40572e <memcpy@plt+0x2d3e>
  405725:	cmp    r12,r15
  405728:	ja     405685 <memcpy@plt+0x2c95>
  40572e:	movzx  eax,BYTE PTR [rbx+0x28]
  405732:	jmp    40589d <memcpy@plt+0x2ead>
  405737:	cmp    BYTE PTR [rbx+0x28],0x1
  40573b:	jne    405600 <memcpy@plt+0x2c10>
  405741:	cmp    eax,0x4
  405744:	jne    405600 <memcpy@plt+0x2c10>
  40574a:	mov    edx,0x2
  40574f:	mov    WORD PTR [rbx+0x148],dx
  405756:	mov    eax,DWORD PTR [r15+0xa]
  40575a:	mov    DWORD PTR [rbx+0x14c],eax
  405760:	mov    esi,0x88
  405765:	mov    edi,0x1
  40576a:	call   4028f0 <calloc@plt>
  40576f:	mov    rbp,rax
  405772:	test   rax,rax
  405775:	je     4058e8 <memcpy@plt+0x2ef8>
  40577b:	mov    rax,QWORD PTR [rbx+0x1c8]
  405782:	mov    rsi,rbp
  405785:	mov    QWORD PTR [rbp+0x0],rax
  405789:	vmovdqu xmm0,XMMWORD PTR [rbx+0x148]
  405791:	vmovups XMMWORD PTR [rbp+0x8],xmm0
  405796:	vmovdqu xmm1,XMMWORD PTR [rbx+0x158]
  40579e:	vmovups XMMWORD PTR [rbp+0x18],xmm1
  4057a3:	vmovdqu xmm2,XMMWORD PTR [rbx+0x168]
  4057ab:	vmovups XMMWORD PTR [rbp+0x28],xmm2
  4057b0:	vmovdqu xmm3,XMMWORD PTR [rbx+0x178]
  4057b8:	vmovups XMMWORD PTR [rbp+0x38],xmm3
  4057bd:	vmovdqu xmm4,XMMWORD PTR [rbx+0x188]
  4057c5:	vmovups XMMWORD PTR [rbp+0x48],xmm4
  4057ca:	vmovdqu xmm5,XMMWORD PTR [rbx+0x198]
  4057d2:	vmovups XMMWORD PTR [rbp+0x58],xmm5
  4057d7:	vmovdqu xmm6,XMMWORD PTR [rbx+0x1a8]
  4057df:	vmovups XMMWORD PTR [rbp+0x68],xmm6
  4057e4:	vmovdqu xmm7,XMMWORD PTR [rbx+0x1b8]
  4057ec:	vmovups XMMWORD PTR [rbp+0x78],xmm7
  4057f1:	mov    rax,QWORD PTR [rbx+0x1d0]
  4057f8:	mov    rdi,QWORD PTR [rax]
  4057fb:	call   QWORD PTR [rax+0x8]
  4057fe:	mov    rdi,rbp
  405801:	call   4026e0 <free@plt>
  405806:	mov    rdi,rbx
  405809:	call   404a90 <memcpy@plt+0x20a0>
  40580e:	lea    rcx,[rip+0xf7ab]        # 414fc0 <memcpy@plt+0x125d0>
  405815:	mov    edx,DWORD PTR [rcx+r13*4]
  405819:	test   edx,edx
  40581b:	lea    eax,[rdx+0x3]
  40581e:	cmovns eax,edx
  405821:	sar    eax,0x2
  405824:	mov    DWORD PTR [rcx+r13*4],eax
  405828:	jmp    4054c8 <memcpy@plt+0x2ad8>
  40582d:	cmp    BYTE PTR [rbx+0x28],0x1c
  405831:	jne    405600 <memcpy@plt+0x2c10>
  405837:	cmp    eax,0x10
  40583a:	jne    405600 <memcpy@plt+0x2c10>
  405840:	mov    eax,0xa
  405845:	mov    WORD PTR [rbx+0x148],ax
  40584c:	vmovdqu xmm0,XMMWORD PTR [r15+0xa]
  405852:	vmovups XMMWORD PTR [rbx+0x150],xmm0
  40585a:	jmp    405760 <memcpy@plt+0x2d70>
  40585f:	cmp    BYTE PTR [rbx+0x28],0xc
  405863:	jne    405600 <memcpy@plt+0x2c10>
  405869:	mov    r8d,0x163
  40586f:	mov    rcx,r14
  405872:	mov    rsi,r12
  405875:	mov    rdi,rbp
  405878:	call   405c50 <memcpy@plt+0x3260>
  40587d:	test   eax,eax
  40587f:	jle    405600 <memcpy@plt+0x2c10>
  405885:	mov    rdi,QWORD PTR [rbx+0x1c8]
  40588c:	mov    edx,0x100
  405891:	mov    rsi,r14
  405894:	call   4026b0 <rb_strlcpy@plt>
  405899:	movzx  eax,BYTE PTR [rbx+0x28]
  40589d:	cmp    al,0xc
  40589f:	jne    405760 <memcpy@plt+0x2d70>
  4058a5:	mov    rsi,QWORD PTR [rbx+0x1c8]
  4058ac:	test   rsi,rsi
  4058af:	je     405600 <memcpy@plt+0x2c10>
  4058b5:	cmp    WORD PTR [rbx+0x148],0xa
  4058bd:	mov    rdi,QWORD PTR [rbx+0x1d0]
  4058c4:	je     4058d7 <memcpy@plt+0x2ee7>
  4058c6:	mov    ecx,0x1
  4058cb:	xor    edx,edx
  4058cd:	call   404c70 <memcpy@plt+0x2280>
  4058d2:	jmp    405806 <memcpy@plt+0x2e16>
  4058d7:	mov    ecx,0x1c
  4058dc:	xor    edx,edx
  4058de:	call   404c70 <memcpy@plt+0x2280>
  4058e3:	jmp    405806 <memcpy@plt+0x2e16>
  4058e8:	call   402830 <rb_outofmemory@plt>
  4058ed:	call   402880 <__stack_chk_fail@plt>
  4058f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4058fd:	nop    DWORD PTR [rax]
  405900:	endbr64 
  405904:	push   rbx
  405905:	mov    rbx,rdi
  405908:	nop    DWORD PTR [rax+rax*1+0x0]
  405910:	mov    rdi,rbx
  405913:	call   405330 <memcpy@plt+0x2940>
  405918:	test   eax,eax
  40591a:	jne    405910 <memcpy@plt+0x2f20>
  40591c:	mov    rdi,rbx
  40591f:	xor    ecx,ecx
  405921:	lea    rdx,[rip+0xffffffffffffffd8]        # 405900 <memcpy@plt+0x2f10>
  405928:	mov    esi,0x1
  40592d:	pop    rbx
  40592e:	jmp    402590 <rb_setselect@plt>
  405933:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40593e:	xchg   ax,ax
  405940:	endbr64 
  405944:	mov    rax,rdi
  405947:	xor    edx,edx
  405949:	mov    rdi,rsi
  40594c:	mov    rsi,rax
  40594f:	jmp    405140 <memcpy@plt+0x2750>
  405954:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40595e:	xchg   ax,ax
  405960:	movzx  eax,BYTE PTR [rdi]
  405963:	mov    edx,eax
  405965:	and    edx,0xffffffc0
  405968:	cmp    dl,0xc0
  40596b:	je     405998 <memcpy@plt+0x2fa8>
  40596d:	cmp    dl,0x40
  405970:	je     405978 <memcpy@plt+0x2f88>
  405972:	ret    
  405973:	nop    DWORD PTR [rax+rax*1+0x0]
  405978:	cmp    al,0x41
  40597a:	jne    405998 <memcpy@plt+0x2fa8>
  40597c:	movzx  edx,BYTE PTR [rdi+0x1]
  405980:	mov    eax,0x21
  405985:	test   edx,edx
  405987:	je     405972 <memcpy@plt+0x2f82>
  405989:	lea    eax,[rdx+0x7]
  40598c:	sar    eax,0x3
  40598f:	inc    eax
  405991:	ret    
  405992:	nop    WORD PTR [rax+rax*1+0x0]
  405998:	mov    eax,0xffffffff
  40599d:	ret    
  40599e:	xchg   ax,ax
  4059a0:	push   r12
  4059a2:	push   rbp
  4059a3:	push   rbx
  4059a4:	sub    rsp,0x50
  4059a8:	mov    rbx,0x415010
  4059af:	mov    rax,QWORD PTR fs:0x28
  4059b8:	mov    QWORD PTR [rsp+0x48],rax
  4059bd:	xor    eax,eax
  4059bf:	cmp    DWORD PTR [rbx],0x9
  4059c2:	jle    4059e8 <memcpy@plt+0x2ff8>
  4059c4:	mov    rax,QWORD PTR [rsp+0x48]
  4059c9:	xor    rax,QWORD PTR fs:0x28
  4059d2:	jne    405a6a <memcpy@plt+0x307a>
  4059d8:	add    rsp,0x50
  4059dc:	pop    rbx
  4059dd:	pop    rbp
  4059de:	pop    r12
  4059e0:	ret    
  4059e1:	nop    DWORD PTR [rax+0x0]
  4059e8:	lea    rdx,[rsp+0x10]
  4059ed:	vpxor  xmm0,xmm0,xmm0
  4059f1:	vmovups XMMWORD PTR [rsp+0x14],xmm0
  4059f7:	mov    QWORD PTR [rdx+0x24],0x0
  4059ff:	mov    DWORD PTR [rdx+0x2c],0x0
  405a06:	vmovups XMMWORD PTR [rdx+0x14],xmm0
  405a0b:	lea    rcx,[rsp+0x8]
  405a10:	lea    rsi,[rip+0x5ca0]        # 40b6b7 <memcpy@plt+0x8cc7>
  405a17:	mov    DWORD PTR [rsp+0x18],0x2
  405a1f:	mov    DWORD PTR [rsp+0x10],0x5
  405a27:	call   4025d0 <getaddrinfo@plt>
  405a2c:	test   eax,eax
  405a2e:	jne    4059c4 <memcpy@plt+0x2fd4>
  405a30:	mov    rbp,QWORD PTR [rsp+0x8]
  405a35:	test   rbp,rbp
  405a38:	je     4059c4 <memcpy@plt+0x2fd4>
  405a3a:	movsxd rdi,DWORD PTR [rbx]
  405a3d:	mov    edx,DWORD PTR [rbp+0x10]
  405a40:	mov    r12,rdi
  405a43:	mov    rsi,QWORD PTR [rbp+0x18]
  405a47:	shl    rdi,0x7
  405a4b:	add    rdi,0x415340
  405a52:	call   4029f0 <memcpy@plt>
  405a57:	inc    r12d
  405a5a:	mov    rdi,rbp
  405a5d:	mov    DWORD PTR [rbx],r12d
  405a60:	call   4026d0 <freeaddrinfo@plt>
  405a65:	jmp    4059c4 <memcpy@plt+0x2fd4>
  405a6a:	call   402880 <__stack_chk_fail@plt>
  405a6f:	nop
  405a70:	endbr64 
  405a74:	push   r15
  405a76:	lea    rsi,[rip+0x65f9]        # 40c076 <memcpy@plt+0x9686>
  405a7d:	lea    rdi,[rip+0x5c3a]        # 40b6be <memcpy@plt+0x8cce>
  405a84:	push   r14
  405a86:	push   r13
  405a88:	push   r12
  405a8a:	push   rbp
  405a8b:	push   rbx
  405a8c:	sub    rsp,0x98
  405a93:	mov    r13,0x415010
  405a9a:	mov    rax,QWORD PTR fs:0x28
  405aa3:	mov    QWORD PTR [rsp+0x88],rax
  405aab:	xor    eax,eax
  405aad:	mov    DWORD PTR [r13+0x0],0x0
  405ab5:	call   402660 <fopen@plt>
  405aba:	test   rax,rax
  405abd:	je     405bd8 <memcpy@plt+0x31e8>
  405ac3:	mov    rbp,rax
  405ac6:	mov    r12,rsp
  405ac9:	movabs r14,0x800000800000001
  405ad3:	nop    DWORD PTR [rax+rax*1+0x0]
  405ad8:	mov    rdx,rbp
  405adb:	mov    esi,0x80
  405ae0:	mov    rdi,r12
  405ae3:	call   402690 <fgets@plt>
  405ae8:	test   rax,rax
  405aeb:	je     405bd0 <memcpy@plt+0x31e0>
  405af1:	lea    rsi,[rip+0x64f6]        # 40bfee <memcpy@plt+0x95fe>
  405af8:	mov    rdi,r12
  405afb:	call   402620 <strpbrk@plt>
  405b00:	test   rax,rax
  405b03:	je     405b08 <memcpy@plt+0x3118>
  405b05:	mov    BYTE PTR [rax],0x0
  405b08:	call   402720 <__ctype_b_loc@plt>
  405b0d:	mov    rax,QWORD PTR [rax]
  405b10:	mov    rbx,r12
  405b13:	jmp    405b1b <memcpy@plt+0x312b>
  405b15:	nop    DWORD PTR [rax]
  405b18:	inc    rbx
  405b1b:	movsx  rcx,BYTE PTR [rbx]
  405b1f:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  405b24:	jne    405b18 <memcpy@plt+0x3128>
  405b26:	cmp    cl,0x3b
  405b29:	ja     405b31 <memcpy@plt+0x3141>
  405b2b:	bt     r14,rcx
  405b2f:	jb     405ad8 <memcpy@plt+0x30e8>
  405b31:	mov    rsi,rbx
  405b34:	jmp    405b48 <memcpy@plt+0x3158>
  405b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b40:	mov    rsi,rcx
  405b43:	test   dil,dil
  405b46:	je     405ad8 <memcpy@plt+0x30e8>
  405b48:	movsx  rdi,BYTE PTR [rsi+0x1]
  405b4d:	lea    rcx,[rsi+0x1]
  405b51:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  405b56:	je     405b40 <memcpy@plt+0x3150>
  405b58:	test   dil,dil
  405b5b:	je     405ad8 <memcpy@plt+0x30e8>
  405b61:	mov    BYTE PTR [rcx],0x0
  405b64:	movsx  rdx,BYTE PTR [rcx+0x1]
  405b69:	lea    r15,[rsi+0x2]
  405b6d:	test   BYTE PTR [rax+rdx*2+0x1],0x20
  405b72:	je     405b86 <memcpy@plt+0x3196>
  405b74:	nop    DWORD PTR [rax+0x0]
  405b78:	inc    r15
  405b7b:	movsx  rdx,BYTE PTR [r15]
  405b7f:	test   BYTE PTR [rax+rdx*2+0x1],0x20
  405b84:	jne    405b78 <memcpy@plt+0x3188>
  405b86:	lea    rsi,[rip+0x5b42]        # 40b6cf <memcpy@plt+0x8cdf>
  405b8d:	mov    rdi,r15
  405b90:	call   402620 <strpbrk@plt>
  405b95:	test   rax,rax
  405b98:	je     405b9d <memcpy@plt+0x31ad>
  405b9a:	mov    BYTE PTR [rax],0x0
  405b9d:	lea    rsi,[rip+0x5b13]        # 40b6b7 <memcpy@plt+0x8cc7>
  405ba4:	mov    rdi,rbx
  405ba7:	call   402510 <rb_strcasecmp@plt>
  405bac:	test   eax,eax
  405bae:	jne    405c10 <memcpy@plt+0x3220>
  405bb0:	mov    rdi,0x415240
  405bb7:	mov    edx,0x100
  405bbc:	mov    rsi,r15
  405bbf:	call   4026b0 <rb_strlcpy@plt>
  405bc4:	jmp    405ad8 <memcpy@plt+0x30e8>
  405bc9:	nop    DWORD PTR [rax+0x0]
  405bd0:	mov    rdi,rbp
  405bd3:	call   402910 <fclose@plt>
  405bd8:	mov    eax,DWORD PTR [r13+0x0]
  405bdc:	test   eax,eax
  405bde:	je     405c38 <memcpy@plt+0x3248>
  405be0:	xor    eax,eax
  405be2:	mov    rcx,QWORD PTR [rsp+0x88]
  405bea:	xor    rcx,QWORD PTR fs:0x28
  405bf3:	jne    405c46 <memcpy@plt+0x3256>
  405bf5:	add    rsp,0x98
  405bfc:	pop    rbx
  405bfd:	pop    rbp
  405bfe:	pop    r12
  405c00:	pop    r13
  405c02:	pop    r14
  405c04:	pop    r15
  405c06:	ret    
  405c07:	nop    WORD PTR [rax+rax*1+0x0]
  405c10:	lea    rsi,[rip+0x5abb]        # 40b6d2 <memcpy@plt+0x8ce2>
  405c17:	mov    rdi,rbx
  405c1a:	call   402510 <rb_strcasecmp@plt>
  405c1f:	test   eax,eax
  405c21:	jne    405ad8 <memcpy@plt+0x30e8>
  405c27:	mov    rdi,r15
  405c2a:	call   4059a0 <memcpy@plt+0x2fb0>
  405c2f:	jmp    405ad8 <memcpy@plt+0x30e8>
  405c34:	nop    DWORD PTR [rax+0x0]
  405c38:	lea    rdi,[rip+0x5a9e]        # 40b6dd <memcpy@plt+0x8ced>
  405c3f:	call   4059a0 <memcpy@plt+0x2fb0>
  405c44:	jmp    405be0 <memcpy@plt+0x31f0>
  405c46:	call   402880 <__stack_chk_fail@plt>
  405c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  405c50:	endbr64 
  405c54:	push   r15
  405c56:	push   r14
  405c58:	push   r13
  405c5a:	push   r12
  405c5c:	push   rbp
  405c5d:	push   rbx
  405c5e:	sub    rsp,0x148
  405c65:	mov    QWORD PTR [rsp+0x10],rcx
  405c6a:	mov    rax,QWORD PTR fs:0x28
  405c73:	mov    QWORD PTR [rsp+0x138],rax
  405c7b:	xor    eax,eax
  405c7d:	movsxd rax,r8d
  405c80:	mov    QWORD PTR [rsp+0x18],rax
  405c85:	cmp    rdi,rdx
  405c88:	ja     406240 <memcpy@plt+0x3850>
  405c8e:	mov    r13,rsi
  405c91:	mov    r15,rdx
  405c94:	cmp    rsi,rdx
  405c97:	jbe    406240 <memcpy@plt+0x3850>
  405c9d:	lea    r14,[rsp+0x30]
  405ca2:	lea    rax,[r14+0xff]
  405ca9:	mov    DWORD PTR [rsp+0xc],0xffffffff
  405cb1:	mov    QWORD PTR [rsp+0x20],rax
  405cb6:	mov    r12,rdi
  405cb9:	mov    rbx,rdx
  405cbc:	xor    ebp,ebp
  405cbe:	mov    r11,r14
  405cc1:	movzx  eax,BYTE PTR [rbx]
  405cc4:	lea    rsi,[rbx+0x1]
  405cc8:	mov    r8d,eax
  405ccb:	test   eax,eax
  405ccd:	je     405df0 <memcpy@plt+0x3400>
  405cd3:	mov    edx,r8d
  405cd6:	and    edx,0xffffffc0
  405cd9:	cmp    dl,0x40
  405cdc:	je     405d90 <memcpy@plt+0x33a0>
  405ce2:	cmp    dl,0xc0
  405ce5:	je     405d38 <memcpy@plt+0x3348>
  405ce7:	test   dl,dl
  405ce9:	je     405d90 <memcpy@plt+0x33a0>
  405cef:	call   402840 <__errno_location@plt>
  405cf4:	mov    DWORD PTR [rax],0x5a
  405cfa:	mov    DWORD PTR [rsp+0xc],0xffffffff
  405d02:	nop    WORD PTR [rax+rax*1+0x0]
  405d08:	mov    rcx,QWORD PTR [rsp+0x138]
  405d10:	xor    rcx,QWORD PTR fs:0x28
  405d19:	mov    eax,DWORD PTR [rsp+0xc]
  405d1d:	jne    406258 <memcpy@plt+0x3868>
  405d23:	add    rsp,0x148
  405d2a:	pop    rbx
  405d2b:	pop    rbp
  405d2c:	pop    r12
  405d2e:	pop    r13
  405d30:	pop    r14
  405d32:	pop    r15
  405d34:	ret    
  405d35:	nop    DWORD PTR [rax]
  405d38:	cmp    r13,rsi
  405d3b:	jbe    405cef <memcpy@plt+0x32ff>
  405d3d:	mov    edi,DWORD PTR [rsp+0xc]
  405d41:	sub    rsi,r15
  405d44:	inc    esi
  405d46:	test   edi,edi
  405d48:	cmovns esi,edi
  405d4b:	shl    eax,0x8
  405d4e:	mov    edi,eax
  405d50:	movzx  eax,BYTE PTR [rbx+0x1]
  405d54:	and    edi,0x3f00
  405d5a:	or     edi,eax
  405d5c:	movsxd rdi,edi
  405d5f:	add    rdi,r12
  405d62:	mov    DWORD PTR [rsp+0xc],esi
  405d66:	mov    rbx,rdi
  405d69:	jb     405cef <memcpy@plt+0x32ff>
  405d6b:	cmp    r13,rdi
  405d6e:	jbe    405cef <memcpy@plt+0x32ff>
  405d74:	add    ebp,0x2
  405d77:	mov    rax,r13
  405d7a:	movsxd rdx,ebp
  405d7d:	sub    rax,r12
  405d80:	cmp    rdx,rax
  405d83:	jl     405cc1 <memcpy@plt+0x32d1>
  405d89:	jmp    405cef <memcpy@plt+0x32ff>
  405d8e:	xchg   ax,ax
  405d90:	mov    rdi,rbx
  405d93:	call   405960 <memcpy@plt+0x2f70>
  405d98:	test   eax,eax
  405d9a:	js     405cef <memcpy@plt+0x32ff>
  405da0:	movsxd rcx,eax
  405da3:	lea    rdx,[r11+rcx*1+0x1]
  405da8:	cmp    QWORD PTR [rsp+0x20],rdx
  405dad:	jbe    405cef <memcpy@plt+0x32ff>
  405db3:	lea    rbx,[rsi+rcx*1]
  405db7:	cmp    r13,rbx
  405dba:	jbe    405cef <memcpy@plt+0x32ff>
  405dc0:	mov    BYTE PTR [r11],r8b
  405dc3:	lea    r9,[r11+0x1]
  405dc7:	mov    rdx,rcx
  405dca:	mov    rdi,r9
  405dcd:	mov    QWORD PTR [rsp+0x28],rcx
  405dd2:	lea    ebp,[rax+rbp*1+0x1]
  405dd6:	call   4029f0 <memcpy@plt>
  405ddb:	mov    rcx,QWORD PTR [rsp+0x28]
  405de0:	lea    r11,[rax+rcx*1]
  405de4:	jmp    405cc1 <memcpy@plt+0x32d1>
  405de9:	nop    DWORD PTR [rax+0x0]
  405df0:	mov    edx,DWORD PTR [rsp+0xc]
  405df4:	mov    BYTE PTR [r11],0x0
  405df8:	test   edx,edx
  405dfa:	js     4061e8 <memcpy@plt+0x37f8>
  405e00:	mov    r15,QWORD PTR [rsp+0x18]
  405e05:	mov    rbx,QWORD PTR [rsp+0x10]
  405e0a:	mov    rbp,r14
  405e0d:	add    r15,rbx
  405e10:	lea    r14,[rip+0x58e9]        # 40b700 <memcpy@plt+0x8d10>
  405e17:	movsx  ecx,BYTE PTR [rbp+0x0]
  405e1b:	test   ecx,ecx
  405e1d:	je     4061a0 <memcpy@plt+0x37b0>
  405e23:	mov    esi,ecx
  405e25:	and    esi,0xc0
  405e2b:	cmp    esi,0xc0
  405e31:	je     405cef <memcpy@plt+0x32ff>
  405e37:	cmp    QWORD PTR [rsp+0x10],rbx
  405e3c:	je     405e4d <memcpy@plt+0x345d>
  405e3e:	cmp    r15,rbx
  405e41:	jbe    405cef <memcpy@plt+0x32ff>
  405e47:	mov    BYTE PTR [rbx],0x2e
  405e4a:	inc    rbx
  405e4d:	mov    rdi,rbp
  405e50:	call   405960 <memcpy@plt+0x2f70>
  405e55:	test   eax,eax
  405e57:	js     405cef <memcpy@plt+0x32ff>
  405e5d:	movsxd rdx,eax
  405e60:	add    rdx,rbx
  405e63:	cmp    r15,rdx
  405e66:	jbe    405cef <memcpy@plt+0x32ff>
  405e6c:	cmp    esi,0x40
  405e6f:	jne    405f70 <memcpy@plt+0x3580>
  405e75:	cmp    ecx,0x41
  405e78:	jne    406220 <memcpy@plt+0x3830>
  405e7e:	movsx  edx,BYTE PTR [rbp+0x1]
  405e82:	mov    r9d,edx
  405e85:	and    r9d,0xff
  405e8c:	je     406078 <memcpy@plt+0x3688>
  405e92:	lea    eax,[r9+0x3]
  405e96:	sar    eax,0x2
  405e99:	cmp    r9d,0x63
  405e9d:	jg     406180 <memcpy@plt+0x3790>
  405ea3:	mov    ecx,0x7
  405ea8:	cmp    r9d,0x9
  405eac:	jg     406190 <memcpy@plt+0x37a0>
  405eb2:	add    eax,ecx
  405eb4:	add    rax,rbx
  405eb7:	cmp    r15,rax
  405eba:	jbe    405cef <memcpy@plt+0x32ff>
  405ec0:	add    rbp,0x2
  405ec4:	and    edx,0xf8
  405eca:	mov    DWORD PTR [rbx],0x785b5c
  405ed0:	lea    r12,[rbx+0x3]
  405ed4:	je     4060a8 <memcpy@plt+0x36b8>
  405eda:	mov    r13d,r9d
  405edd:	nop    DWORD PTR [rax]
  405ee0:	movzx  r8d,BYTE PTR [rbp+0x0]
  405ee5:	mov    rdi,r12
  405ee8:	xor    eax,eax
  405eea:	lea    rcx,[rip+0x57f6]        # 40b6e7 <memcpy@plt+0x8cf7>
  405ef1:	mov    rdx,0xffffffffffffffff
  405ef8:	mov    esi,0x1
  405efd:	sub    r13d,0x8
  405f01:	mov    DWORD PTR [rsp+0x18],r9d
  405f06:	add    r12,0x2
  405f0a:	call   402960 <__sprintf_chk@plt>
  405f0f:	inc    rbp
  405f12:	cmp    r13d,0x7
  405f16:	mov    r9d,DWORD PTR [rsp+0x18]
  405f1b:	jg     405ee0 <memcpy@plt+0x34f0>
  405f1d:	cmp    r13d,0x4
  405f21:	jg     4060b8 <memcpy@plt+0x36c8>
  405f27:	test   r13d,r13d
  405f2a:	jne    406118 <memcpy@plt+0x3728>
  405f30:	mov    rdi,r12
  405f33:	mov    r8d,r9d
  405f36:	lea    rcx,[rip+0x57b3]        # 40b6f0 <memcpy@plt+0x8d00>
  405f3d:	mov    rdx,0xffffffffffffffff
  405f44:	mov    esi,0x1
  405f49:	xor    eax,eax
  405f4b:	call   402960 <__sprintf_chk@plt>
  405f50:	cdqe   
  405f52:	add    r12,rax
  405f55:	sub    r12,rbx
  405f58:	test   r12d,r12d
  405f5b:	js     405cef <memcpy@plt+0x32ff>
  405f61:	movsxd r12,r12d
  405f64:	add    rbx,r12
  405f67:	jmp    405e17 <memcpy@plt+0x3427>
  405f6c:	nop    DWORD PTR [rax+0x0]
  405f70:	lea    rcx,[rbp+0x1]
  405f74:	test   eax,eax
  405f76:	je     406230 <memcpy@plt+0x3840>
  405f7c:	dec    eax
  405f7e:	lea    rbp,[rbp+rax*1+0x2]
  405f83:	mov    edi,0x64
  405f88:	mov    esi,0x1
  405f8d:	jmp    405fc8 <memcpy@plt+0x35d8>
  405f8f:	nop
  405f90:	movabs rax,0x4000000420010c5
  405f9a:	shlx   r8,rsi,r8
  405f9f:	test   r8,rax
  405fa2:	je     406060 <memcpy@plt+0x3670>
  405fa8:	lea    rax,[rbx+0x1]
  405fac:	cmp    r15,rax
  405faf:	jbe    405cef <memcpy@plt+0x32ff>
  405fb5:	mov    BYTE PTR [rbx],0x5c
  405fb8:	mov    BYTE PTR [rbx+0x1],dl
  405fbb:	add    rbx,0x2
  405fbf:	cmp    rcx,rbp
  405fc2:	je     405e17 <memcpy@plt+0x3427>
  405fc8:	inc    rcx
  405fcb:	movzx  eax,BYTE PTR [rcx-0x1]
  405fcf:	lea    r8d,[rax-0x22]
  405fd3:	mov    edx,eax
  405fd5:	cmp    r8d,0x3a
  405fd9:	jbe    405f90 <memcpy@plt+0x35a0>
  405fdb:	sub    eax,0x21
  405fde:	cmp    eax,0x5d
  405fe1:	jbe    406060 <memcpy@plt+0x3670>
  405fe3:	lea    rax,[rbx+0x3]
  405fe7:	cmp    r15,rax
  405fea:	jbe    405cef <memcpy@plt+0x32ff>
  405ff0:	movzx  r8d,dl
  405ff4:	lea    eax,[r8+r8*4]
  405ff8:	lea    eax,[r8+rax*8]
  405ffc:	shr    ax,0xc
  406000:	mov    r8,rax
  406003:	imul   eax,edi
  406006:	mov    r10d,edx
  406009:	and    r8d,0x7
  40600d:	sub    r10d,eax
  406010:	mov    eax,r10d
  406013:	mov    r10d,0xffffffcd
  406019:	mul    r10b
  40601c:	movzx  r8d,BYTE PTR [r14+r8*1]
  406021:	mov    BYTE PTR [rbx],0x5c
  406024:	shr    ax,0xb
  406028:	and    eax,0x1f
  40602b:	movzx  eax,BYTE PTR [r14+rax*1]
  406030:	mov    BYTE PTR [rbx+0x1],r8b
  406034:	mov    BYTE PTR [rbx+0x2],al
  406037:	mov    eax,r10d
  40603a:	mul    dl
  40603c:	add    rbx,0x4
  406040:	shr    ax,0xb
  406044:	lea    eax,[rax+rax*4]
  406047:	add    eax,eax
  406049:	sub    edx,eax
  40604b:	movzx  edx,dl
  40604e:	movzx  eax,BYTE PTR [r14+rdx*1]
  406053:	mov    BYTE PTR [rbx-0x1],al
  406056:	jmp    405fbf <memcpy@plt+0x35cf>
  40605b:	nop    DWORD PTR [rax+rax*1+0x0]
  406060:	cmp    r15,rbx
  406063:	jbe    405cef <memcpy@plt+0x32ff>
  406069:	mov    BYTE PTR [rbx],dl
  40606b:	inc    rbx
  40606e:	jmp    405fbf <memcpy@plt+0x35cf>
  406073:	nop    DWORD PTR [rax+rax*1+0x0]
  406078:	mov    eax,0x49
  40607d:	mov    r9d,0x100
  406083:	add    rax,rbx
  406086:	cmp    r15,rax
  406089:	jbe    405cef <memcpy@plt+0x32ff>
  40608f:	add    rbp,0x2
  406093:	mov    DWORD PTR [rbx],0x785b5c
  406099:	lea    r12,[rbx+0x3]
  40609d:	jmp    405eda <memcpy@plt+0x34ea>
  4060a2:	nop    WORD PTR [rax+rax*1+0x0]
  4060a8:	mov    r13d,r9d
  4060ab:	cmp    r9d,0x4
  4060af:	jle    406118 <memcpy@plt+0x3728>
  4060b1:	nop    DWORD PTR [rax+0x0]
  4060b8:	lea    rax,[rbp+0x1]
  4060bc:	mov    r8d,0x8
  4060c2:	mov    QWORD PTR [rsp+0x18],rax
  4060c7:	sub    r8d,r13d
  4060ca:	mov    eax,0xff
  4060cf:	shlx   eax,eax,r8d
  4060d4:	movsx  r8d,BYTE PTR [rbp+0x0]
  4060d9:	mov    rdi,r12
  4060dc:	and    r8d,eax
  4060df:	lea    rcx,[rip+0x5601]        # 40b6e7 <memcpy@plt+0x8cf7>
  4060e6:	mov    rdx,0xffffffffffffffff
  4060ed:	mov    esi,0x1
  4060f2:	xor    eax,eax
  4060f4:	mov    DWORD PTR [rsp+0x20],r9d
  4060f9:	call   402960 <__sprintf_chk@plt>
  4060fe:	cdqe   
  406100:	add    r12,rax
  406103:	mov    rbp,QWORD PTR [rsp+0x18]
  406108:	mov    r9d,DWORD PTR [rsp+0x20]
  40610d:	jmp    405f30 <memcpy@plt+0x3540>
  406112:	nop    WORD PTR [rax+rax*1+0x0]
  406118:	lea    rax,[rbp+0x1]
  40611c:	mov    QWORD PTR [rsp+0x18],rax
  406121:	movzx  eax,BYTE PTR [rbp+0x0]
  406125:	mov    r8d,0x4
  40612b:	mov    edx,r8d
  40612e:	shr    al,0x4
  406131:	movzx  eax,al
  406134:	sub    edx,r13d
  406137:	mov    r8d,0xf
  40613d:	shlx   r8d,r8d,edx
  406142:	mov    rdi,r12
  406145:	and    r8d,eax
  406148:	lea    rcx,[rip+0x559d]        # 40b6ec <memcpy@plt+0x8cfc>
  40614f:	mov    rdx,0xffffffffffffffff
  406156:	mov    esi,0x1
  40615b:	xor    eax,eax
  40615d:	mov    DWORD PTR [rsp+0x20],r9d
  406162:	inc    r12
  406165:	call   402960 <__sprintf_chk@plt>
  40616a:	mov    rbp,QWORD PTR [rsp+0x18]
  40616f:	mov    r9d,DWORD PTR [rsp+0x20]
  406174:	jmp    405f30 <memcpy@plt+0x3540>
  406179:	nop    DWORD PTR [rax+0x0]
  406180:	mov    ecx,0x9
  406185:	jmp    405eb2 <memcpy@plt+0x34c2>
  40618a:	nop    WORD PTR [rax+rax*1+0x0]
  406190:	add    eax,0x8
  406193:	jmp    406083 <memcpy@plt+0x3693>
  406198:	nop    DWORD PTR [rax+rax*1+0x0]
  4061a0:	cmp    QWORD PTR [rsp+0x10],rbx
  4061a5:	je     406200 <memcpy@plt+0x3810>
  4061a7:	cmp    r15,rbx
  4061aa:	jbe    405cef <memcpy@plt+0x32ff>
  4061b0:	lea    eax,[rbx+0x2]
  4061b3:	mov    BYTE PTR [rbx],0x0
  4061b6:	cmp    eax,DWORD PTR [rsp+0x10]
  4061ba:	je     405cfa <memcpy@plt+0x330a>
  4061c0:	mov    eax,DWORD PTR [rsp+0xc]
  4061c4:	test   eax,eax
  4061c6:	jle    405d08 <memcpy@plt+0x3318>
  4061cc:	mov    rax,QWORD PTR [rsp+0x10]
  4061d1:	cmp    BYTE PTR [rax],0x2e
  4061d4:	jne    405d08 <memcpy@plt+0x3318>
  4061da:	mov    BYTE PTR [rax],0x0
  4061dd:	jmp    405d08 <memcpy@plt+0x3318>
  4061e2:	nop    WORD PTR [rax+rax*1+0x0]
  4061e8:	sub    rsi,r15
  4061eb:	mov    DWORD PTR [rsp+0xc],esi
  4061ef:	cmp    esi,0xffffffff
  4061f2:	jne    405e00 <memcpy@plt+0x3410>
  4061f8:	jmp    405cfa <memcpy@plt+0x330a>
  4061fd:	nop    DWORD PTR [rax]
  406200:	cmp    r15,QWORD PTR [rsp+0x10]
  406205:	jbe    405cef <memcpy@plt+0x32ff>
  40620b:	mov    rax,QWORD PTR [rsp+0x10]
  406210:	mov    BYTE PTR [rax],0x2e
  406213:	lea    rbx,[rax+0x1]
  406217:	jmp    4061a7 <memcpy@plt+0x37b7>
  406219:	nop    DWORD PTR [rax+0x0]
  406220:	call   402840 <__errno_location@plt>
  406225:	mov    DWORD PTR [rax],0x16
  40622b:	jmp    405cfa <memcpy@plt+0x330a>
  406230:	mov    rbp,rcx
  406233:	jmp    405e17 <memcpy@plt+0x3427>
  406238:	nop    DWORD PTR [rax+rax*1+0x0]
  406240:	call   402840 <__errno_location@plt>
  406245:	mov    DWORD PTR [rax],0x5a
  40624b:	mov    DWORD PTR [rsp+0xc],0xffffffff
  406253:	jmp    405d08 <memcpy@plt+0x3318>
  406258:	call   402880 <__stack_chk_fail@plt>
  40625d:	nop    DWORD PTR [rax]
  406260:	endbr64 
  406264:	sub    rsp,0x8
  406268:	mov    r8,rdi
  40626b:	cmp    rsi,rdi
  40626e:	jbe    406300 <memcpy@plt+0x3910>
  406274:	movzx  eax,BYTE PTR [rdi]
  406277:	lea    rcx,[rdi+0x1]
  40627b:	test   al,al
  40627d:	je     4062b4 <memcpy@plt+0x38c4>
  40627f:	mov    edx,eax
  406281:	and    edx,0xffffffc0
  406284:	cmp    dl,0x40
  406287:	je     4062c8 <memcpy@plt+0x38d8>
  406289:	cmp    dl,0xc0
  40628c:	je     4062b0 <memcpy@plt+0x38c0>
  40628e:	test   dl,dl
  406290:	je     4062f0 <memcpy@plt+0x3900>
  406292:	call   402840 <__errno_location@plt>
  406297:	mov    DWORD PTR [rax],0x5a
  40629d:	mov    eax,0xffffffff
  4062a2:	add    rsp,0x8
  4062a6:	ret    
  4062a7:	nop    WORD PTR [rax+rax*1+0x0]
  4062b0:	lea    rcx,[rdi+0x2]
  4062b4:	cmp    rsi,rcx
  4062b7:	jb     406292 <memcpy@plt+0x38a2>
  4062b9:	mov    eax,ecx
  4062bb:	sub    eax,r8d
  4062be:	add    rsp,0x8
  4062c2:	ret    
  4062c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4062c8:	call   405960 <memcpy@plt+0x2f70>
  4062cd:	test   eax,eax
  4062cf:	js     406292 <memcpy@plt+0x38a2>
  4062d1:	movsxd rdi,eax
  4062d4:	add    rdi,rcx
  4062d7:	cmp    rsi,rdi
  4062da:	jbe    406308 <memcpy@plt+0x3918>
  4062dc:	movzx  eax,BYTE PTR [rdi]
  4062df:	lea    rcx,[rdi+0x1]
  4062e3:	test   al,al
  4062e5:	jne    40627f <memcpy@plt+0x388f>
  4062e7:	jmp    4062b4 <memcpy@plt+0x38c4>
  4062e9:	nop    DWORD PTR [rax+0x0]
  4062f0:	movzx  edi,al
  4062f3:	add    rdi,rcx
  4062f6:	jmp    4062d7 <memcpy@plt+0x38e7>
  4062f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406300:	mov    rcx,rdi
  406303:	jmp    4062b4 <memcpy@plt+0x38c4>
  406305:	nop    DWORD PTR [rax]
  406308:	mov    rcx,rdi
  40630b:	jmp    4062b4 <memcpy@plt+0x38c4>
  40630d:	nop    DWORD PTR [rax]
  406310:	endbr64 
  406314:	movbe  ax,WORD PTR [rdi]
  406319:	movzx  eax,ax
  40631c:	ret    
  40631d:	nop    DWORD PTR [rax]
  406320:	endbr64 
  406324:	movbe  eax,DWORD PTR [rdi]
  406328:	mov    eax,eax
  40632a:	ret    
  40632b:	nop    DWORD PTR [rax+rax*1+0x0]
  406330:	endbr64 
  406334:	movbe  WORD PTR [rsi],di
  406339:	ret    
  40633a:	nop    WORD PTR [rax+rax*1+0x0]
  406340:	endbr64 
  406344:	movbe  DWORD PTR [rsi],edi
  406348:	ret    
  406349:	nop    DWORD PTR [rax+0x0]
  406350:	endbr64 
  406354:	push   r15
  406356:	push   r14
  406358:	push   r13
  40635a:	push   r12
  40635c:	push   rbp
  40635d:	push   rbx
  40635e:	sub    rsp,0x208
  406365:	mov    DWORD PTR [rsp],esi
  406368:	mov    DWORD PTR [rsp+0x4],edx
  40636c:	mov    rax,QWORD PTR fs:0x28
  406375:	mov    QWORD PTR [rsp+0x1f8],rax
  40637d:	xor    eax,eax
  40637f:	test   rcx,rcx
  406382:	je     4064eb <memcpy@plt+0x3afb>
  406388:	cmp    r8d,0xb
  40638c:	jle    4064eb <memcpy@plt+0x3afb>
  406392:	mov    QWORD PTR [rcx+0x2],0x0
  40639a:	xor    esi,esi
  40639c:	mov    rbp,rcx
  40639f:	mov    eax,DWORD PTR [rcx]
  4063a1:	mov    WORD PTR [rcx+0xa],si
  4063a5:	and    eax,0xf0860000
  4063aa:	or     eax,0x10000
  4063af:	sub    r8d,0x10
  4063b3:	mov    DWORD PTR [rcx],eax
  4063b5:	mov    QWORD PTR [rsp+0x50],rcx
  4063ba:	mov    QWORD PTR [rsp+0x58],0x0
  4063c3:	mov    DWORD PTR [rsp+0x18],r8d
  4063c8:	js     4064eb <memcpy@plt+0x3afb>
  4063ce:	lea    rbx,[rsp+0xf0]
  4063d6:	movsx  r13d,BYTE PTR [rdi]
  4063da:	lea    rax,[rbx+0x1]
  4063de:	mov    QWORD PTR [rsp+0x40],rax
  4063e3:	lea    r12,[rdi+0x1]
  4063e7:	test   r13d,r13d
  4063ea:	je     406be8 <memcpy@plt+0x41f8>
  4063f0:	lea    rax,[rsp+0x48]
  4063f5:	mov    r14,rbx
  4063f8:	mov    QWORD PTR [rsp+0x8],rax
  4063fd:	mov    QWORD PTR [rsp+0x10],rcx
  406402:	jmp    40643d <memcpy@plt+0x3a4d>
  406404:	nop    DWORD PTR [rax+0x0]
  406408:	lea    rdx,[rbx+0xff]
  40640f:	cmp    rax,rdx
  406412:	jae    4064e0 <memcpy@plt+0x3af0>
  406418:	lea    rdx,[rax+0x1]
  40641c:	mov    QWORD PTR [rsp+0x40],rdx
  406421:	mov    BYTE PTR [rax],r13b
  406424:	lea    rax,[r12+0x1]
  406429:	movsx  r13d,BYTE PTR [r12]
  40642e:	test   r13d,r13d
  406431:	je     4064c0 <memcpy@plt+0x3ad0>
  406437:	mov    rdi,r12
  40643a:	mov    r12,rax
  40643d:	cmp    r13d,0x5c
  406441:	je     406520 <memcpy@plt+0x3b30>
  406447:	mov    rax,QWORD PTR [rsp+0x40]
  40644c:	cmp    r13d,0x2e
  406450:	jne    406408 <memcpy@plt+0x3a18>
  406452:	sub    rax,r14
  406455:	dec    eax
  406457:	test   al,0xc0
  406459:	jne    4064e0 <memcpy@plt+0x3af0>
  40645f:	lea    rcx,[rbx+0xff]
  406466:	cmp    r14,rcx
  406469:	jae    4064e0 <memcpy@plt+0x3af0>
  40646b:	mov    BYTE PTR [r14],al
  40646e:	movzx  edx,BYTE PTR [rdi+0x1]
  406472:	test   dl,dl
  406474:	je     406c20 <memcpy@plt+0x4230>
  40647a:	cmp    dl,0x2e
  40647d:	je     4064e0 <memcpy@plt+0x3af0>
  40647f:	test   eax,eax
  406481:	je     4064e0 <memcpy@plt+0x3af0>
  406483:	mov    r14,QWORD PTR [rsp+0x40]
  406488:	movsx  r13d,BYTE PTR [r12]
  40648d:	lea    rax,[r14+0x1]
  406491:	mov    QWORD PTR [rsp+0x40],rax
  406496:	lea    rax,[r12+0x1]
  40649b:	test   r13d,r13d
  40649e:	jne    406437 <memcpy@plt+0x3a47>
  4064a0:	mov    rbp,QWORD PTR [rsp+0x10]
  4064a5:	lea    rax,[rbx+0xff]
  4064ac:	cmp    r14,rax
  4064af:	jae    4064e0 <memcpy@plt+0x3af0>
  4064b1:	mov    BYTE PTR [r14],0x0
  4064b5:	jmp    406861 <memcpy@plt+0x3e71>
  4064ba:	nop    WORD PTR [rax+rax*1+0x0]
  4064c0:	mov    eax,r14d
  4064c3:	not    eax
  4064c5:	add    eax,DWORD PTR [rsp+0x40]
  4064c9:	mov    edx,eax
  4064cb:	and    edx,0xc0
  4064d1:	mov    rbp,QWORD PTR [rsp+0x10]
  4064d6:	test   edx,edx
  4064d8:	je     406830 <memcpy@plt+0x3e40>
  4064de:	xchg   ax,ax
  4064e0:	call   402840 <__errno_location@plt>
  4064e5:	mov    DWORD PTR [rax],0x5a
  4064eb:	mov    eax,0xffffffff
  4064f0:	mov    rdi,QWORD PTR [rsp+0x1f8]
  4064f8:	xor    rdi,QWORD PTR fs:0x28
  406501:	jne    406c8f <memcpy@plt+0x429f>
  406507:	add    rsp,0x208
  40650e:	pop    rbx
  40650f:	pop    rbp
  406510:	pop    r12
  406512:	pop    r13
  406514:	pop    r14
  406516:	pop    r15
  406518:	ret    
  406519:	nop    DWORD PTR [rax+0x0]
  406520:	movsx  r13d,BYTE PTR [r12]
  406525:	lea    r15,[r12+0x1]
  40652a:	test   r13d,r13d
  40652d:	je     4064c0 <memcpy@plt+0x3ad0>
  40652f:	cmp    r13d,0x5b
  406533:	je     4065d0 <memcpy@plt+0x3be0>
  406539:	mov    esi,r13d
  40653c:	lea    rdi,[rip+0x51bd]        # 40b700 <memcpy@plt+0x8d10>
  406543:	call   402800 <strchr@plt>
  406548:	test   rax,rax
  40654b:	je     4065bc <memcpy@plt+0x3bcc>
  40654d:	lea    rbp,[rip+0x51ac]        # 40b700 <memcpy@plt+0x8d10>
  406554:	movsx  esi,BYTE PTR [r12+0x1]
  40655a:	sub    rax,rbp
  40655d:	imul   r13d,eax,0x64
  406561:	test   esi,esi
  406563:	je     4064e0 <memcpy@plt+0x3af0>
  406569:	mov    rdi,rbp
  40656c:	call   402800 <strchr@plt>
  406571:	test   rax,rax
  406574:	je     4064e0 <memcpy@plt+0x3af0>
  40657a:	sub    rax,rbp
  40657d:	movsx  esi,BYTE PTR [r12+0x2]
  406583:	lea    eax,[rax+rax*4]
  406586:	lea    r13d,[r13+rax*2+0x0]
  40658b:	lea    r15,[r12+0x3]
  406590:	test   esi,esi
  406592:	je     4064e0 <memcpy@plt+0x3af0>
  406598:	mov    rdi,rbp
  40659b:	call   402800 <strchr@plt>
  4065a0:	test   rax,rax
  4065a3:	je     4064e0 <memcpy@plt+0x3af0>
  4065a9:	sub    rax,rbp
  4065ac:	add    r13d,eax
  4065af:	cmp    r13d,0xff
  4065b6:	jg     4064e0 <memcpy@plt+0x3af0>
  4065bc:	mov    rax,QWORD PTR [rsp+0x40]
  4065c1:	mov    r12,r15
  4065c4:	jmp    406408 <memcpy@plt+0x3a18>
  4065c9:	nop    DWORD PTR [rax+0x0]
  4065d0:	mov    esi,0x5d
  4065d5:	mov    rdi,r15
  4065d8:	call   402800 <strchr@plt>
  4065dd:	test   rax,rax
  4065e0:	je     406768 <memcpy@plt+0x3d78>
  4065e6:	lea    r13,[rax+0x2]
  4065ea:	mov    rax,r13
  4065ed:	sub    rax,r15
  4065f0:	mov    QWORD PTR [rsp+0x48],0x0
  4065f9:	cmp    rax,0x1
  4065fd:	jle    406750 <memcpy@plt+0x3d60>
  406603:	cmp    BYTE PTR [r12+0x1],0x78
  406609:	jne    406750 <memcpy@plt+0x3d60>
  40660f:	call   402720 <__ctype_b_loc@plt>
  406614:	mov    r10,QWORD PTR [rax]
  406617:	movzx  eax,BYTE PTR [r12+0x2]
  40661d:	mov    rdx,rax
  406620:	test   BYTE PTR [r10+rax*2+0x1],0x10
  406626:	je     406750 <memcpy@plt+0x3d60>
  40662c:	mov    rax,QWORD PTR [rsp+0x8]
  406631:	lea    rsi,[rbx+0xff]
  406638:	add    r12,0x2
  40663c:	cmp    rsi,rax
  40663f:	jbe    406c5d <memcpy@plt+0x426d>
  406645:	cmp    r13,r12
  406648:	jbe    406c5d <memcpy@plt+0x426d>
  40664e:	mov    r15,rax
  406651:	xor    ecx,ecx
  406653:	xor    r9d,r9d
  406656:	xor    ebp,ebp
  406658:	xor    edi,edi
  40665a:	xor    eax,eax
  40665c:	cmp    dl,0x2f
  40665f:	je     406780 <memcpy@plt+0x3d90>
  406665:	cmp    dl,0x5d
  406668:	jne    4067a8 <memcpy@plt+0x3db8>
  40666e:	test   eax,eax
  406670:	je     4066aa <memcpy@plt+0x3cba>
  406672:	mov    DWORD PTR [rsp+0x20],r9d
  406677:	mov    DWORD PTR [rsp+0x30],ecx
  40667b:	test   rdi,rdi
  40667e:	je     406750 <memcpy@plt+0x3d60>
  406684:	mov    edx,0xa
  406689:	lea    rsi,[rsp+0x48]
  40668e:	call   4027d0 <strtol@plt>
  406693:	mov    rdx,QWORD PTR [rsp+0x48]
  406698:	cmp    BYTE PTR [rdx],0x5d
  40669b:	jne    406750 <memcpy@plt+0x3d60>
  4066a1:	mov    r9d,DWORD PTR [rsp+0x20]
  4066a6:	mov    ecx,DWORD PTR [rsp+0x30]
  4066aa:	test   r9d,r9d
  4066ad:	je     4066ba <memcpy@plt+0x3cca>
  4066af:	mov    edx,ebp
  4066b1:	shl    edx,0x4
  4066b4:	mov    BYTE PTR [r15],dl
  4066b7:	inc    r15
  4066ba:	inc    r12
  4066bd:	cmp    r13,r12
  4066c0:	jbe    406bd8 <memcpy@plt+0x41e8>
  4066c6:	lea    rdx,[rbx+0xff]
  4066cd:	cmp    r15,rdx
  4066d0:	jae    406bd8 <memcpy@plt+0x41e8>
  4066d6:	test   eax,eax
  4066d8:	jle    4066f7 <memcpy@plt+0x3d07>
  4066da:	lea    edx,[rax+0x3]
  4066dd:	and    edx,0xfffffffc
  4066e0:	cmp    ecx,edx
  4066e2:	jne    406750 <memcpy@plt+0x3d60>
  4066e4:	mov    edx,eax
  4066e6:	sub    edx,ecx
  4066e8:	add    edx,0x8
  4066eb:	shlx   r8d,ebp,edx
  4066f0:	test   r8b,r8b
  4066f3:	jne    406750 <memcpy@plt+0x3d60>
  4066f5:	mov    ecx,eax
  4066f7:	cmp    ecx,0x100
  4066fd:	mov    eax,0x0
  406702:	cmove  ecx,eax
  406705:	mov    BYTE PTR [r14],0x41
  406709:	mov    rax,QWORD PTR [rsp+0x40]
  40670e:	mov    BYTE PTR [rax],cl
  406710:	lea    rax,[r15+0x1]
  406714:	mov    QWORD PTR [rsp+0x40],rax
  406719:	movsx  eax,BYTE PTR [r12]
  40671e:	test   eax,eax
  406720:	je     406bf8 <memcpy@plt+0x4208>
  406726:	cmp    eax,0x2e
  406729:	jne    406768 <memcpy@plt+0x3d78>
  40672b:	movsx  r13d,BYTE PTR [r12+0x1]
  406731:	lea    rax,[r12+0x2]
  406736:	test   r13d,r13d
  406739:	je     406c82 <memcpy@plt+0x4292>
  40673f:	inc    r12
  406742:	mov    r14,r15
  406745:	jmp    406437 <memcpy@plt+0x3a47>
  40674a:	nop    WORD PTR [rax+rax*1+0x0]
  406750:	mov    ebx,0x16
  406755:	call   402840 <__errno_location@plt>
  40675a:	mov    DWORD PTR [rax],ebx
  40675c:	jmp    4064eb <memcpy@plt+0x3afb>
  406761:	nop    DWORD PTR [rax+0x0]
  406768:	call   402840 <__errno_location@plt>
  40676d:	mov    DWORD PTR [rax],0x16
  406773:	jmp    4064eb <memcpy@plt+0x3afb>
  406778:	nop    DWORD PTR [rax+rax*1+0x0]
  406780:	mov    eax,0x1
  406785:	inc    r12
  406788:	cmp    r13,r12
  40678b:	jbe    406bc0 <memcpy@plt+0x41d0>
  406791:	cmp    r15,rsi
  406794:	jae    406bc0 <memcpy@plt+0x41d0>
  40679a:	movzx  edx,BYTE PTR [r12]
  40679f:	jmp    40665c <memcpy@plt+0x3c6c>
  4067a4:	nop    DWORD PTR [rax+0x0]
  4067a8:	movzx  r8d,dl
  4067ac:	movzx  r8d,WORD PTR [r10+r8*2]
  4067b1:	test   eax,eax
  4067b3:	jne    406800 <memcpy@plt+0x3e10>
  4067b5:	test   r8w,0x1000
  4067bb:	je     406750 <memcpy@plt+0x3d60>
  4067bd:	movsx  rdx,dl
  4067c1:	lea    r11,[rip+0x4f58]        # 40b720 <memcpy@plt+0x8d30>
  4067c8:	movsx  edx,BYTE PTR [r11+rdx*1]
  4067cd:	shl    ebp,0x4
  4067d0:	add    ecx,0x4
  4067d3:	add    ebp,edx
  4067d5:	add    r9d,0x4
  4067d9:	cmp    ecx,0x100
  4067df:	jg     406750 <memcpy@plt+0x3d60>
  4067e5:	cmp    r9d,0x8
  4067e9:	jne    406785 <memcpy@plt+0x3d95>
  4067eb:	mov    BYTE PTR [r15],bpl
  4067ee:	xor    r9d,r9d
  4067f1:	inc    r15
  4067f4:	jmp    406785 <memcpy@plt+0x3d95>
  4067f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406800:	test   r8w,0x800
  406806:	je     406750 <memcpy@plt+0x3d60>
  40680c:	test   rdi,rdi
  40680f:	jne    406785 <memcpy@plt+0x3d95>
  406815:	cmp    dl,0x30
  406818:	je     406750 <memcpy@plt+0x3d60>
  40681e:	mov    rdi,r12
  406821:	jmp    406785 <memcpy@plt+0x3d95>
  406826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406830:	lea    rdx,[rbx+0xff]
  406837:	cmp    r14,rdx
  40683a:	jae    4064e0 <memcpy@plt+0x3af0>
  406840:	mov    BYTE PTR [r14],al
  406843:	test   eax,eax
  406845:	je     406861 <memcpy@plt+0x3e71>
  406847:	mov    rax,QWORD PTR [rsp+0x40]
  40684c:	cmp    rax,rdx
  40684f:	jae    4064e0 <memcpy@plt+0x3af0>
  406855:	lea    rdx,[rax+0x1]
  406859:	mov    QWORD PTR [rsp+0x40],rdx
  40685e:	mov    BYTE PTR [rax],0x0
  406861:	mov    rax,QWORD PTR [rsp+0x40]
  406866:	sub    rax,rbx
  406869:	cmp    rax,0xff
  40686f:	jg     4064e0 <memcpy@plt+0x3af0>
  406875:	mov    r14,QWORD PTR [rsp+0x50]
  40687a:	xor    r12d,r12d
  40687d:	test   r14,r14
  406880:	je     40689b <memcpy@plt+0x3eab>
  406882:	cmp    QWORD PTR [rsp+0x58],0x0
  406888:	lea    r12,[rsp+0x58]
  40688d:	je     40689b <memcpy@plt+0x3eab>
  40688f:	nop
  406890:	add    r12,0x8
  406894:	cmp    QWORD PTR [r12],0x0
  406899:	jne    406890 <memcpy@plt+0x3ea0>
  40689b:	xor    esi,esi
  40689d:	mov    rcx,rbx
  4068a0:	jmp    4068d0 <memcpy@plt+0x3ee0>
  4068a2:	nop    WORD PTR [rax+rax*1+0x0]
  4068a8:	mov    rdi,rcx
  4068ab:	call   405960 <memcpy@plt+0x2f70>
  4068b0:	test   eax,eax
  4068b2:	js     4068e8 <memcpy@plt+0x3ef8>
  4068b4:	lea    esi,[rax+rsi*1+0x1]
  4068b8:	cmp    esi,0xff
  4068be:	jg     4064e0 <memcpy@plt+0x3af0>
  4068c4:	cdqe   
  4068c6:	lea    rcx,[rcx+rax*1+0x1]
  4068cb:	test   r8b,r8b
  4068ce:	je     406900 <memcpy@plt+0x3f10>
  4068d0:	movzx  r8d,BYTE PTR [rcx]
  4068d4:	mov    eax,r8d
  4068d7:	and    eax,0xffffffc0
  4068da:	cmp    al,0xc0
  4068dc:	jne    4068a8 <memcpy@plt+0x3eb8>
  4068de:	jmp    4064e0 <memcpy@plt+0x3af0>
  4068e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e8:	call   402840 <__errno_location@plt>
  4068ed:	mov    DWORD PTR [rax],0x16
  4068f3:	mov    eax,0xffffffff
  4068f8:	jmp    4064f0 <memcpy@plt+0x3b00>
  4068fd:	nop    DWORD PTR [rax]
  406900:	movsxd r8,DWORD PTR [rsp+0x18]
  406905:	lea    rax,[rbp+0xc]
  406909:	add    r8,rax
  40690c:	lea    rcx,[rsp+0x50]
  406911:	test   r14,r14
  406914:	mov    QWORD PTR [rsp+0x28],r12
  406919:	mov    QWORD PTR [rsp+0x20],r12
  40691e:	mov    QWORD PTR [rsp+0x10],rax
  406923:	mov    QWORD PTR [rsp+0x18],r8
  406928:	setne  BYTE PTR [rsp+0x30]
  40692d:	mov    DWORD PTR [rsp+0x34],0x1
  406935:	mov    QWORD PTR [rsp+0x8],rcx
  40693a:	mov    r12,rax
  40693d:	mov    QWORD PTR [rsp+0x38],rbp
  406942:	jmp    4069f6 <memcpy@plt+0x4006>
  406947:	nop    WORD PTR [rax+rax*1+0x0]
  406950:	call   402840 <__errno_location@plt>
  406955:	mov    DWORD PTR [rax],0x5a
  40695b:	mov    rax,QWORD PTR [rsp+0x8]
  406960:	mov    rdi,QWORD PTR [rsp+0x28]
  406965:	add    rax,0x98
  40696b:	cmp    rdi,rax
  40696e:	jae    4069a8 <memcpy@plt+0x3fb8>
  406970:	mov    rax,r12
  406973:	sub    rax,r14
  406976:	cmp    rax,0x3fff
  40697c:	jg     4069a8 <memcpy@plt+0x3fb8>
  40697e:	mov    ecx,DWORD PTR [rsp+0x34]
  406982:	test   ecx,ecx
  406984:	je     4069a8 <memcpy@plt+0x3fb8>
  406986:	lea    rax,[rdi+0x8]
  40698a:	mov    QWORD PTR [rdi],r12
  40698d:	mov    QWORD PTR [rdi+0x8],0x0
  406995:	mov    QWORD PTR [rsp+0x28],rax
  40699a:	mov    DWORD PTR [rsp+0x34],0x0
  4069a2:	nop    WORD PTR [rax+rax*1+0x0]
  4069a8:	and    ebp,0xffffffc0
  4069ab:	cmp    bpl,0xc0
  4069af:	je     4064e0 <memcpy@plt+0x3af0>
  4069b5:	mov    rdi,rbx
  4069b8:	call   405960 <memcpy@plt+0x2f70>
  4069bd:	movsxd rbp,eax
  4069c0:	mov    r13,rbp
  4069c3:	inc    rbp
  4069c6:	lea    r15,[r12+rbp*1]
  4069ca:	cmp    QWORD PTR [rsp+0x18],r15
  4069cf:	jbe    4064e0 <memcpy@plt+0x3af0>
  4069d5:	lea    edx,[r13+0x1]
  4069d9:	mov    rsi,rbx
  4069dc:	mov    rdi,r12
  4069df:	movsxd rdx,edx
  4069e2:	call   4029f0 <memcpy@plt>
  4069e7:	add    rbx,rbp
  4069ea:	mov    r12,r15
  4069ed:	test   r13d,r13d
  4069f0:	je     406bb0 <memcpy@plt+0x41c0>
  4069f6:	movzx  ebp,BYTE PTR [rbx]
  4069f9:	test   bpl,bpl
  4069fc:	je     4069a8 <memcpy@plt+0x3fb8>
  4069fe:	cmp    BYTE PTR [rsp+0x30],0x0
  406a03:	je     4069a8 <memcpy@plt+0x3fb8>
  406a05:	mov    rax,QWORD PTR [rsp+0x8]
  406a0a:	lea    r9,[rax+0x8]
  406a0e:	cmp    QWORD PTR [rsp+0x20],r9
  406a13:	jbe    406b10 <memcpy@plt+0x4120>
  406a19:	mov    r8,QWORD PTR [r9]
  406a1c:	movzx  esi,BYTE PTR [r8]
  406a20:	test   sil,sil
  406a23:	je     406b00 <memcpy@plt+0x4110>
  406a29:	test   sil,0xc0
  406a2d:	jne    406b00 <memcpy@plt+0x4110>
  406a33:	mov    r15,r8
  406a36:	sub    r15,r14
  406a39:	cmp    r15,0x3fff
  406a40:	jg     406b00 <memcpy@plt+0x4110>
  406a46:	mov    edx,esi
  406a48:	mov    rcx,r8
  406a4b:	mov    r10,rbx
  406a4e:	movzx  eax,dl
  406a51:	test   eax,eax
  406a53:	je     406ae6 <memcpy@plt+0x40f6>
  406a59:	and    edx,0xc0
  406a5f:	je     406a88 <memcpy@plt+0x4098>
  406a61:	cmp    dl,0xc0
  406a64:	jne    406950 <memcpy@plt+0x3f60>
  406a6a:	movzx  edx,BYTE PTR [rcx+0x1]
  406a6e:	shl    eax,0x8
  406a71:	and    eax,0x3f00
  406a76:	or     eax,edx
  406a78:	lea    rcx,[r14+rax*1]
  406a7c:	movzx  edx,BYTE PTR [rcx]
  406a7f:	jmp    406a4e <memcpy@plt+0x405e>
  406a81:	nop    DWORD PTR [rax+0x0]
  406a88:	mov    rdi,rcx
  406a8b:	call   405960 <memcpy@plt+0x2f70>
  406a90:	movzx  edx,BYTE PTR [r10]
  406a94:	lea    r11,[r10+0x1]
  406a98:	cmp    eax,edx
  406a9a:	jne    406ae6 <memcpy@plt+0x40f6>
  406a9c:	lea    rdi,[rcx+0x1]
  406aa0:	test   eax,eax
  406aa2:	je     406b20 <memcpy@plt+0x4130>
  406aa4:	dec    eax
  406aa6:	lea    rcx,[rcx+rax*1+0x2]
  406aab:	jmp    406ab5 <memcpy@plt+0x40c5>
  406aad:	nop    DWORD PTR [rax]
  406ab0:	cmp    rdi,rcx
  406ab3:	je     406b28 <memcpy@plt+0x4138>
  406ab5:	inc    r11
  406ab8:	movzx  eax,BYTE PTR [r11-0x1]
  406abd:	lea    r10d,[rax-0x41]
  406ac1:	cmp    r10d,0x1a
  406ac5:	lea    edx,[rax+0x20]
  406ac8:	cmovb  eax,edx
  406acb:	inc    rdi
  406ace:	movzx  edx,BYTE PTR [rdi-0x1]
  406ad2:	lea    r13d,[rdx-0x41]
  406ad6:	lea    r10d,[rdx+0x20]
  406ada:	cmp    r13d,0x1a
  406ade:	cmovb  edx,r10d
  406ae2:	cmp    edx,eax
  406ae4:	je     406ab0 <memcpy@plt+0x40c0>
  406ae6:	lea    r8,[r8+rsi*1+0x1]
  406aeb:	movzx  esi,BYTE PTR [r8]
  406aef:	test   sil,sil
  406af2:	jne    406a29 <memcpy@plt+0x4039>
  406af8:	nop    DWORD PTR [rax+rax*1+0x0]
  406b00:	add    r9,0x8
  406b04:	cmp    QWORD PTR [rsp+0x20],r9
  406b09:	ja     406a19 <memcpy@plt+0x4029>
  406b0f:	nop
  406b10:	call   402840 <__errno_location@plt>
  406b15:	mov    DWORD PTR [rax],0x2
  406b1b:	jmp    40695b <memcpy@plt+0x3f6b>
  406b20:	mov    rcx,rdi
  406b23:	nop    DWORD PTR [rax+rax*1+0x0]
  406b28:	cmp    BYTE PTR [r11],0x0
  406b2c:	jne    406ba8 <memcpy@plt+0x41b8>
  406b2e:	cmp    BYTE PTR [rcx],0x0
  406b31:	jne    406ae6 <memcpy@plt+0x40f6>
  406b33:	mov    eax,r15d
  406b36:	test   r15d,r15d
  406b39:	js     40695b <memcpy@plt+0x3f6b>
  406b3f:	lea    rdx,[r12+0x1]
  406b44:	mov    rbp,QWORD PTR [rsp+0x38]
  406b49:	cmp    QWORD PTR [rsp+0x18],rdx
  406b4e:	jbe    4064e0 <memcpy@plt+0x3af0>
  406b54:	sar    eax,0x8
  406b57:	or     eax,0xffffffc0
  406b5a:	mov    BYTE PTR [r12+0x1],r15b
  406b5f:	mov    BYTE PTR [r12],al
  406b63:	lea    rax,[r12+0x2]
  406b68:	sub    eax,DWORD PTR [rsp+0x10]
  406b6c:	test   eax,eax
  406b6e:	js     4064eb <memcpy@plt+0x3afb>
  406b74:	movzx  ecx,WORD PTR [rsp+0x4]
  406b79:	cdqe   
  406b7b:	add    rax,QWORD PTR [rsp+0x10]
  406b80:	movbe  WORD PTR [rax],cx
  406b85:	movzx  ecx,WORD PTR [rsp]
  406b89:	mov    edx,0x100
  406b8e:	movbe  WORD PTR [rax+0x2],cx
  406b94:	add    rax,0x4
  406b98:	mov    WORD PTR [rbp+0x4],dx
  406b9c:	sub    eax,ebp
  406b9e:	jmp    4064f0 <memcpy@plt+0x3b00>
  406ba3:	nop    DWORD PTR [rax+rax*1+0x0]
  406ba8:	mov    r10,r11
  406bab:	jmp    406a7c <memcpy@plt+0x408c>
  406bb0:	mov    eax,r15d
  406bb3:	mov    rbp,QWORD PTR [rsp+0x38]
  406bb8:	sub    eax,DWORD PTR [rsp+0x10]
  406bbc:	jmp    406b6c <memcpy@plt+0x417c>
  406bbe:	xchg   ax,ax
  406bc0:	cmp    r13,r12
  406bc3:	jbe    406bd8 <memcpy@plt+0x41e8>
  406bc5:	lea    rax,[rbx+0xff]
  406bcc:	cmp    r15,rax
  406bcf:	jb     4066f7 <memcpy@plt+0x3d07>
  406bd5:	nop    DWORD PTR [rax]
  406bd8:	mov    ebx,0x5a
  406bdd:	jmp    406755 <memcpy@plt+0x3d65>
  406be2:	nop    WORD PTR [rax+rax*1+0x0]
  406be8:	mov    BYTE PTR [rsp+0xf0],0x0
  406bf0:	jmp    406875 <memcpy@plt+0x3e85>
  406bf5:	nop    DWORD PTR [rax]
  406bf8:	lea    rax,[rbx+0xff]
  406bff:	mov    rbp,QWORD PTR [rsp+0x10]
  406c04:	cmp    r15,rax
  406c07:	jae    4064e0 <memcpy@plt+0x3af0>
  406c0d:	mov    BYTE PTR [r15],0x0
  406c11:	jmp    406861 <memcpy@plt+0x3e71>
  406c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c20:	mov    rbp,QWORD PTR [rsp+0x10]
  406c25:	mov    rdx,QWORD PTR [rsp+0x40]
  406c2a:	test   eax,eax
  406c2c:	je     406c48 <memcpy@plt+0x4258>
  406c2e:	cmp    rdx,rcx
  406c31:	jae    4064e0 <memcpy@plt+0x3af0>
  406c37:	lea    rax,[rdx+0x1]
  406c3b:	mov    QWORD PTR [rsp+0x40],rax
  406c40:	mov    BYTE PTR [rdx],0x0
  406c43:	mov    rdx,QWORD PTR [rsp+0x40]
  406c48:	sub    rdx,rbx
  406c4b:	cmp    rdx,0xff
  406c52:	jle    406875 <memcpy@plt+0x3e85>
  406c58:	jmp    4064e0 <memcpy@plt+0x3af0>
  406c5d:	mov    r15,QWORD PTR [rsp+0x8]
  406c62:	lea    rax,[rbx+0xff]
  406c69:	cmp    rax,r15
  406c6c:	jbe    406bd8 <memcpy@plt+0x41e8>
  406c72:	cmp    r13,r12
  406c75:	jbe    406bd8 <memcpy@plt+0x41e8>
  406c7b:	xor    ecx,ecx
  406c7d:	jmp    406705 <memcpy@plt+0x3d15>
  406c82:	mov    rbp,QWORD PTR [rsp+0x10]
  406c87:	mov    r14,r15
  406c8a:	jmp    4064a5 <memcpy@plt+0x3ab5>
  406c8f:	call   402880 <__stack_chk_fail@plt>
  406c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c9e:	xchg   ax,ax
  406ca0:	endbr64 
  406ca4:	sub    rsp,0x8
  406ca8:	mov    rax,rdx
  406cab:	mov    rdi,QWORD PTR [rax]
  406cae:	xor    esi,esi
  406cb0:	mov    edx,0xa
  406cb5:	call   4027d0 <strtol@plt>
  406cba:	test   eax,eax
  406cbc:	js     406cc9 <memcpy@plt+0x42d9>
  406cbe:	mov    DWORD PTR [rip+0x9dfc],eax        # 410ac0 <memcpy@plt+0xe0d0>
  406cc4:	add    rsp,0x8
  406cc8:	ret    
  406cc9:	mov    edx,eax
  406ccb:	mov    edi,0x43
  406cd0:	lea    rsi,[rip+0x4b49]        # 40b820 <memcpy@plt+0x8e30>
  406cd7:	xor    eax,eax
  406cd9:	call   403730 <memcpy@plt+0xd40>
  406cde:	mov    edi,0x3
  406ce3:	call   4025b0 <exit@plt>
  406ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  406cf0:	push   r12
  406cf2:	push   rbp
  406cf3:	push   rbx
  406cf4:	mov    rbx,QWORD PTR [rip+0xe325]        # 415020 <memcpy@plt+0x12630>
  406cfb:	test   rbx,rbx
  406cfe:	je     406d30 <memcpy@plt+0x4340>
  406d00:	mov    r12,rdi
  406d03:	jmp    406d11 <memcpy@plt+0x4321>
  406d05:	nop    DWORD PTR [rax]
  406d08:	mov    rbx,QWORD PTR [rbx+0x10]
  406d0c:	test   rbx,rbx
  406d0f:	je     406d30 <memcpy@plt+0x4340>
  406d11:	mov    rbp,QWORD PTR [rbx]
  406d14:	mov    rsi,r12
  406d17:	mov    rdi,rbp
  406d1a:	call   4025f0 <strcasecmp@plt>
  406d1f:	test   eax,eax
  406d21:	jne    406d08 <memcpy@plt+0x4318>
  406d23:	pop    rbx
  406d24:	mov    rax,rbp
  406d27:	pop    rbp
  406d28:	pop    r12
  406d2a:	ret    
  406d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406d30:	xor    ebp,ebp
  406d32:	pop    rbx
  406d33:	mov    rax,rbp
  406d36:	pop    rbp
  406d37:	pop    r12
  406d39:	ret    
  406d3a:	nop    WORD PTR [rax+rax*1+0x0]
  406d40:	push   rax
  406d41:	pop    rax
  406d42:	lea    rcx,[rip+0x4d87]        # 40bad0 <memcpy@plt+0x90e0>
  406d49:	mov    edx,0xec
  406d4e:	lea    rsi,[rip+0x47f3]        # 40b548 <memcpy@plt+0x8b58>
  406d55:	lea    rdi,[rip+0x4cd8]        # 40ba34 <memcpy@plt+0x9044>
  406d5c:	sub    rsp,0x8
  406d60:	call   4025c0 <__assert_fail@plt>
  406d65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406d70:	push   rax
  406d71:	pop    rax
  406d72:	lea    rcx,[rip+0x4d77]        # 40baf0 <memcpy@plt+0x9100>
  406d79:	mov    edx,0x120
  406d7e:	lea    rsi,[rip+0x47c3]        # 40b548 <memcpy@plt+0x8b58>
  406d85:	lea    rdi,[rip+0x47d8]        # 40b564 <memcpy@plt+0x8b74>
  406d8c:	sub    rsp,0x8
  406d90:	call   4025c0 <__assert_fail@plt>
  406d95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406da0:	endbr64 
  406da4:	push   rbx
  406da5:	sub    rsp,0x10
  406da9:	mov    rbx,QWORD PTR [rdx]
  406dac:	mov    rdi,rbx
  406daf:	call   406cf0 <memcpy@plt+0x4300>
  406db4:	test   rax,rax
  406db7:	je     406e68 <memcpy@plt+0x4478>
  406dbd:	mov    edx,DWORD PTR [rax+0x324]
  406dc3:	test   edx,edx
  406dc5:	jle    406dd8 <memcpy@plt+0x43e8>
  406dc7:	mov    BYTE PTR [rax+0x320],0x1
  406dce:	add    rsp,0x10
  406dd2:	pop    rbx
  406dd3:	ret    
  406dd4:	nop    DWORD PTR [rax+0x0]
  406dd8:	mov    rdi,QWORD PTR [rip+0xe241]        # 415020 <memcpy@plt+0x12630>
  406ddf:	test   rdi,rdi
  406de2:	je     406df2 <memcpy@plt+0x4402>
  406de4:	cmp    rax,QWORD PTR [rdi]
  406de7:	je     406e00 <memcpy@plt+0x4410>
  406de9:	mov    rdi,QWORD PTR [rdi+0x10]
  406ded:	test   rdi,rdi
  406df0:	jne    406de4 <memcpy@plt+0x43f4>
  406df2:	add    rsp,0x10
  406df6:	mov    rdi,rax
  406df9:	pop    rbx
  406dfa:	jmp    4026e0 <free@plt>
  406dff:	nop
  406e00:	mov    rcx,QWORD PTR [rdi+0x10]
  406e04:	mov    rdx,QWORD PTR [rdi+0x8]
  406e08:	test   rcx,rcx
  406e0b:	je     406e58 <memcpy@plt+0x4468>
  406e0d:	mov    QWORD PTR [rcx+0x8],rdx
  406e11:	mov    rdx,QWORD PTR [rdi+0x8]
  406e15:	test   rdx,rdx
  406e18:	je     406e88 <memcpy@plt+0x4498>
  406e1a:	mov    QWORD PTR [rdx+0x10],rcx
  406e1e:	mov    QWORD PTR [rdi+0x8],0x0
  406e26:	mov    QWORD PTR [rdi+0x10],0x0
  406e2e:	dec    QWORD PTR [rip+0xe1fb]        # 415030 <memcpy@plt+0x12640>
  406e35:	mov    QWORD PTR [rsp+0x8],rax
  406e3a:	call   4027a0 <rb_free_rb_dlink_node@plt>
  406e3f:	mov    rax,QWORD PTR [rsp+0x8]
  406e44:	add    rsp,0x10
  406e48:	mov    rdi,rax
  406e4b:	pop    rbx
  406e4c:	jmp    4026e0 <free@plt>
  406e51:	nop    DWORD PTR [rax+0x0]
  406e58:	mov    QWORD PTR [rip+0xe1c9],rdx        # 415028 <memcpy@plt+0x12638>
  406e5f:	jmp    406e15 <memcpy@plt+0x4425>
  406e61:	nop    DWORD PTR [rax+0x0]
  406e68:	add    rsp,0x10
  406e6c:	mov    rdx,rbx
  406e6f:	lea    rsi,[rip+0x49d2]        # 40b848 <memcpy@plt+0x8e58>
  406e76:	mov    edi,0x57
  406e7b:	pop    rbx
  406e7c:	jmp    403730 <memcpy@plt+0xd40>
  406e81:	nop    DWORD PTR [rax+0x0]
  406e88:	mov    QWORD PTR [rip+0xe191],rcx        # 415020 <memcpy@plt+0x12630>
  406e8f:	jmp    406e1e <memcpy@plt+0x442e>
  406e91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406e9c:	nop    DWORD PTR [rax+0x0]
  406ea0:	mov    rax,QWORD PTR [rip+0xe179]        # 415020 <memcpy@plt+0x12630>
  406ea7:	test   rax,rax
  406eaa:	je     406f90 <memcpy@plt+0x45a0>
  406eb0:	push   rbp
  406eb1:	push   rbx
  406eb2:	sub    rsp,0x8
  406eb6:	mov    rbx,QWORD PTR [rax]
  406eb9:	mov    rbp,QWORD PTR [rax+0x10]
  406ebd:	mov    eax,DWORD PTR [rbx+0x324]
  406ec3:	test   eax,eax
  406ec5:	jle    406ef0 <memcpy@plt+0x4500>
  406ec7:	nop    WORD PTR [rax+rax*1+0x0]
  406ed0:	mov    BYTE PTR [rbx+0x320],0x1
  406ed7:	test   rbp,rbp
  406eda:	je     406f1d <memcpy@plt+0x452d>
  406edc:	mov    rax,rbp
  406edf:	mov    rbx,QWORD PTR [rax]
  406ee2:	mov    rbp,QWORD PTR [rbp+0x10]
  406ee6:	mov    eax,DWORD PTR [rbx+0x324]
  406eec:	test   eax,eax
  406eee:	jg     406ed0 <memcpy@plt+0x44e0>
  406ef0:	mov    rdi,QWORD PTR [rip+0xe129]        # 415020 <memcpy@plt+0x12630>
  406ef7:	test   rdi,rdi
  406efa:	je     406f0a <memcpy@plt+0x451a>
  406efc:	cmp    rbx,QWORD PTR [rdi]
  406eff:	je     406f28 <memcpy@plt+0x4538>
  406f01:	mov    rdi,QWORD PTR [rdi+0x10]
  406f05:	test   rdi,rdi
  406f08:	jne    406efc <memcpy@plt+0x450c>
  406f0a:	mov    rdi,rbx
  406f0d:	call   4026e0 <free@plt>
  406f12:	nop    WORD PTR [rax+rax*1+0x0]
  406f18:	test   rbp,rbp
  406f1b:	jne    406edc <memcpy@plt+0x44ec>
  406f1d:	add    rsp,0x8
  406f21:	pop    rbx
  406f22:	pop    rbp
  406f23:	ret    
  406f24:	nop    DWORD PTR [rax+0x0]
  406f28:	mov    rdx,QWORD PTR [rdi+0x10]
  406f2c:	mov    rax,QWORD PTR [rdi+0x8]
  406f30:	test   rdx,rdx
  406f33:	je     406f80 <memcpy@plt+0x4590>
  406f35:	mov    QWORD PTR [rdx+0x8],rax
  406f39:	mov    rax,QWORD PTR [rdi+0x8]
  406f3d:	test   rax,rax
  406f40:	je     406f70 <memcpy@plt+0x4580>
  406f42:	mov    QWORD PTR [rax+0x10],rdx
  406f46:	mov    QWORD PTR [rdi+0x8],0x0
  406f4e:	mov    QWORD PTR [rdi+0x10],0x0
  406f56:	dec    QWORD PTR [rip+0xe0d3]        # 415030 <memcpy@plt+0x12640>
  406f5d:	call   4027a0 <rb_free_rb_dlink_node@plt>
  406f62:	mov    rdi,rbx
  406f65:	call   4026e0 <free@plt>
  406f6a:	jmp    406f18 <memcpy@plt+0x4528>
  406f6c:	nop    DWORD PTR [rax+0x0]
  406f70:	mov    QWORD PTR [rip+0xe0a9],rdx        # 415020 <memcpy@plt+0x12630>
  406f77:	jmp    406f46 <memcpy@plt+0x4556>
  406f79:	nop    DWORD PTR [rax+0x0]
  406f80:	mov    QWORD PTR [rip+0xe0a1],rax        # 415028 <memcpy@plt+0x12638>
  406f87:	jmp    406f3d <memcpy@plt+0x454d>
  406f89:	nop    DWORD PTR [rax+0x0]
  406f90:	ret    
  406f91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406f9c:	nop    DWORD PTR [rax+0x0]
  406fa0:	endbr64 
  406fa4:	jmp    406ea0 <memcpy@plt+0x44b0>
  406fa9:	nop    DWORD PTR [rax+0x0]
  406fb0:	push   r12
  406fb2:	push   rbp
  406fb3:	mov    rbp,rdi
  406fb6:	push   rbx
  406fb7:	mov    rdi,QWORD PTR [rdi+0x308]
  406fbe:	test   rdi,rdi
  406fc1:	je     407028 <memcpy@plt+0x4638>
  406fc3:	mov    rbx,QWORD PTR [rdi+0x10]
  406fc7:	mov    rax,QWORD PTR [rdi+0x8]
  406fcb:	mov    r12,rbx
  406fce:	test   rbx,rbx
  406fd1:	je     40700d <memcpy@plt+0x461d>
  406fd3:	nop    DWORD PTR [rax+rax*1+0x0]
  406fd8:	mov    QWORD PTR [rbx+0x8],rax
  406fdc:	mov    rax,QWORD PTR [rdi+0x8]
  406fe0:	test   rax,rax
  406fe3:	je     407019 <memcpy@plt+0x4629>
  406fe5:	mov    QWORD PTR [rax+0x10],rbx
  406fe9:	dec    QWORD PTR [rbp+0x318]
  406ff0:	call   4026e0 <free@plt>
  406ff5:	test   rbx,rbx
  406ff8:	je     407028 <memcpy@plt+0x4638>
  406ffa:	mov    rbx,QWORD PTR [rbx+0x10]
  406ffe:	mov    rdi,r12
  407001:	mov    rax,QWORD PTR [rdi+0x8]
  407005:	mov    r12,rbx
  407008:	test   rbx,rbx
  40700b:	jne    406fd8 <memcpy@plt+0x45e8>
  40700d:	mov    QWORD PTR [rbp+0x310],rax
  407014:	test   rax,rax
  407017:	jne    406fe5 <memcpy@plt+0x45f5>
  407019:	mov    QWORD PTR [rbp+0x308],rbx
  407020:	jmp    406fe9 <memcpy@plt+0x45f9>
  407022:	nop    WORD PTR [rax+rax*1+0x0]
  407028:	mov    rdi,QWORD PTR [rip+0xdff1]        # 415020 <memcpy@plt+0x12630>
  40702f:	test   rdi,rdi
  407032:	je     407042 <memcpy@plt+0x4652>
  407034:	cmp    rbp,QWORD PTR [rdi]
  407037:	je     407050 <memcpy@plt+0x4660>
  407039:	mov    rdi,QWORD PTR [rdi+0x10]
  40703d:	test   rdi,rdi
  407040:	jne    407034 <memcpy@plt+0x4644>
  407042:	pop    rbx
  407043:	mov    rdi,rbp
  407046:	pop    rbp
  407047:	pop    r12
  407049:	jmp    4026e0 <free@plt>
  40704e:	xchg   ax,ax
  407050:	mov    rdx,QWORD PTR [rdi+0x10]
  407054:	mov    rax,QWORD PTR [rdi+0x8]
  407058:	test   rdx,rdx
  40705b:	je     4070a0 <memcpy@plt+0x46b0>
  40705d:	mov    QWORD PTR [rdx+0x8],rax
  407061:	mov    rax,QWORD PTR [rdi+0x8]
  407065:	test   rax,rax
  407068:	je     4070ac <memcpy@plt+0x46bc>
  40706a:	mov    QWORD PTR [rax+0x10],rdx
  40706e:	mov    QWORD PTR [rdi+0x8],0x0
  407076:	mov    QWORD PTR [rdi+0x10],0x0
  40707e:	dec    QWORD PTR [rip+0xdfab]        # 415030 <memcpy@plt+0x12640>
  407085:	call   4027a0 <rb_free_rb_dlink_node@plt>
  40708a:	pop    rbx
  40708b:	mov    rdi,rbp
  40708e:	pop    rbp
  40708f:	pop    r12
  407091:	jmp    4026e0 <free@plt>
  407096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070a0:	mov    QWORD PTR [rip+0xdf81],rax        # 415028 <memcpy@plt+0x12638>
  4070a7:	test   rax,rax
  4070aa:	jne    40706a <memcpy@plt+0x467a>
  4070ac:	mov    QWORD PTR [rip+0xdf6d],rdx        # 415020 <memcpy@plt+0x12630>
  4070b3:	jmp    40706e <memcpy@plt+0x467e>
  4070b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4070c0:	endbr64 
  4070c4:	push   r15
  4070c6:	push   r14
  4070c8:	push   r13
  4070ca:	push   r12
  4070cc:	push   rbp
  4070cd:	push   rbx
  4070ce:	sub    rsp,0x48
  4070d2:	mov    QWORD PTR [rsp+0x28],rdx
  4070d7:	mov    rbp,QWORD PTR [rdx+0x10]
  4070db:	mov    rdi,rbp
  4070de:	mov    rcx,QWORD PTR fs:0x28
  4070e7:	mov    QWORD PTR [rsp+0x38],rcx
  4070ec:	xor    ecx,ecx
  4070ee:	call   4026f0 <strlen@plt>
  4070f3:	lea    rbx,[rax+0x1]
  4070f7:	mov    rdi,rbx
  4070fa:	call   402650 <malloc@plt>
  4070ff:	mov    QWORD PTR [rsp+0x20],rax
  407104:	test   rax,rax
  407107:	je     40735e <memcpy@plt+0x496e>
  40710d:	mov    rdx,rbx
  407110:	mov    rbx,QWORD PTR [rsp+0x20]
  407115:	mov    rsi,rbp
  407118:	mov    rdi,rbx
  40711b:	call   4029f0 <memcpy@plt>
  407120:	cmp    BYTE PTR [rbx],0x2a
  407123:	mov    rdi,rbx
  407126:	je     407363 <memcpy@plt+0x4973>
  40712c:	lea    rdx,[rsp+0x30]
  407131:	lea    rsi,[rip+0x4909]        # 40ba41 <memcpy@plt+0x9051>
  407138:	mov    QWORD PTR [rsp+0x10],rdx
  40713d:	call   402600 <rb_strtok_r@plt>
  407142:	mov    r13,rax
  407145:	test   rax,rax
  407148:	je     407363 <memcpy@plt+0x4973>
  40714e:	mov    QWORD PTR [rsp+0x8],0x0
  407157:	mov    QWORD PTR [rsp+0x18],0x0
  407160:	mov    QWORD PTR [rsp],0x0
  407168:	mov    esi,0x58
  40716d:	mov    edi,0x1
  407172:	call   4028f0 <calloc@plt>
  407177:	mov    r12,rax
  40717a:	test   rax,rax
  40717d:	je     40735e <memcpy@plt+0x496e>
  407183:	movzx  r15d,BYTE PTR [r13+0x0]
  407188:	test   r15b,r15b
  40718b:	je     40737c <memcpy@plt+0x498c>
  407191:	mov    r14,r13
  407194:	mov    ebp,0x2
  407199:	xor    ebx,ebx
  40719b:	jmp    4071c3 <memcpy@plt+0x47d3>
  40719d:	nop    DWORD PTR [rax]
  4071a0:	call   402720 <__ctype_b_loc@plt>
  4071a5:	mov    rax,QWORD PTR [rax]
  4071a8:	movsx  rsi,r15b
  4071ac:	test   BYTE PTR [rax+rsi*2+0x1],0x8
  4071b1:	je     4073aa <memcpy@plt+0x49ba>
  4071b7:	inc    r14
  4071ba:	movzx  r15d,BYTE PTR [r14]
  4071be:	test   r15b,r15b
  4071c1:	je     4071e5 <memcpy@plt+0x47f5>
  4071c3:	cmp    r15b,0x2e
  4071c7:	jne    4071a0 <memcpy@plt+0x47b0>
  4071c9:	inc    ebx
  4071cb:	cmp    ebx,0x3
  4071ce:	jg     407426 <memcpy@plt+0x4a36>
  4071d4:	inc    r14
  4071d7:	movzx  r15d,BYTE PTR [r14]
  4071db:	mov    ebp,0x1
  4071e0:	test   r15b,r15b
  4071e3:	jne    4071c3 <memcpy@plt+0x47d3>
  4071e5:	dec    ebx
  4071e7:	cmp    ebx,0x1
  4071ea:	jbe    40744c <memcpy@plt+0x4a5c>
  4071f0:	mov    DWORD PTR [r12],ebp
  4071f4:	lea    rdi,[r12+0x4]
  4071f9:	mov    edx,0x35
  4071fe:	mov    rsi,r13
  407201:	call   4026b0 <rb_strlcpy@plt>
  407206:	mov    rax,QWORD PTR [rsp]
  40720a:	lea    rbx,[r12+0x40]
  40720f:	mov    QWORD PTR [r12+0x40],r12
  407214:	mov    QWORD PTR [r12+0x48],0x0
  40721d:	mov    QWORD PTR [r12+0x50],rax
  407222:	test   rax,rax
  407225:	je     407348 <memcpy@plt+0x4958>
  40722b:	mov    QWORD PTR [rax+0x8],rbx
  40722f:	mov    rdx,QWORD PTR [rsp+0x10]
  407234:	lea    rsi,[rip+0x4806]        # 40ba41 <memcpy@plt+0x9051>
  40723b:	xor    edi,edi
  40723d:	inc    QWORD PTR [rsp+0x8]
  407242:	call   402600 <rb_strtok_r@plt>
  407247:	mov    r13,rax
  40724a:	mov    QWORD PTR [rsp],rbx
  40724e:	test   rax,rax
  407251:	jne    407168 <memcpy@plt+0x4778>
  407257:	mov    rdi,QWORD PTR [rsp+0x20]
  40725c:	call   4026e0 <free@plt>
  407261:	mov    r14,QWORD PTR [rsp+0x28]
  407266:	mov    edx,0xa
  40726b:	mov    rdi,QWORD PTR [r14+0x8]
  40726f:	xor    esi,esi
  407271:	call   4027d0 <strtol@plt>
  407276:	mov    r13,QWORD PTR [r14]
  407279:	mov    ebp,eax
  40727b:	mov    r12,QWORD PTR [r14+0x18]
  40727f:	and    ebp,0x3
  407282:	test   r13,r13
  407285:	sete   dl
  407288:	test   r12,r12
  40728b:	sete   al
  40728e:	or     dl,al
  407290:	jne    407443 <memcpy@plt+0x4a53>
  407296:	test   bpl,bpl
  407299:	je     407443 <memcpy@plt+0x4a53>
  40729f:	mov    rdi,r13
  4072a2:	call   406cf0 <memcpy@plt+0x4300>
  4072a7:	mov    r14,rax
  4072aa:	test   rax,rax
  4072ad:	je     4073cb <memcpy@plt+0x49db>
  4072b3:	mov    BYTE PTR [rax+0x320],0x0
  4072ba:	mov    edx,0x100
  4072bf:	mov    rsi,r13
  4072c2:	mov    rdi,r14
  4072c5:	call   4026b0 <rb_strlcpy@plt>
  4072ca:	lea    rdi,[r14+0x100]
  4072d1:	mov    edx,0x200
  4072d6:	mov    rsi,r12
  4072d9:	call   4026b0 <rb_strlcpy@plt>
  4072de:	mov    BYTE PTR [r14+0x300],bpl
  4072e5:	test   rbx,rbx
  4072e8:	je     40731a <memcpy@plt+0x492a>
  4072ea:	mov    rax,QWORD PTR [r14+0x308]
  4072f1:	test   rax,rax
  4072f4:	je     407386 <memcpy@plt+0x4996>
  4072fa:	mov    rcx,QWORD PTR [rsp+0x18]
  4072ff:	mov    QWORD PTR [rcx+0x10],rax
  407303:	mov    QWORD PTR [rax+0x8],rcx
  407307:	mov    rax,QWORD PTR [rsp+0x8]
  40730c:	mov    QWORD PTR [r14+0x308],rbx
  407313:	add    QWORD PTR [r14+0x318],rax
  40731a:	mov    QWORD PTR [r14+0x330],0x0
  407325:	mov    rax,QWORD PTR [rsp+0x38]
  40732a:	xor    rax,QWORD PTR fs:0x28
  407333:	jne    407455 <memcpy@plt+0x4a65>
  407339:	add    rsp,0x48
  40733d:	pop    rbx
  40733e:	pop    rbp
  40733f:	pop    r12
  407341:	pop    r13
  407343:	pop    r14
  407345:	pop    r15
  407347:	ret    
  407348:	mov    rax,QWORD PTR [rsp+0x18]
  40734d:	test   rax,rax
  407350:	cmove  rax,rbx
  407354:	mov    QWORD PTR [rsp+0x18],rax
  407359:	jmp    40722f <memcpy@plt+0x483f>
  40735e:	call   402830 <rb_outofmemory@plt>
  407363:	mov    QWORD PTR [rsp+0x8],0x0
  40736c:	mov    QWORD PTR [rsp+0x18],0x0
  407375:	xor    ebx,ebx
  407377:	jmp    407257 <memcpy@plt+0x4867>
  40737c:	mov    ebp,0x2
  407381:	jmp    4071f0 <memcpy@plt+0x4800>
  407386:	mov    rax,QWORD PTR [rsp+0x18]
  40738b:	mov    QWORD PTR [r14+0x308],rbx
  407392:	mov    QWORD PTR [r14+0x310],rax
  407399:	mov    rax,QWORD PTR [rsp+0x8]
  40739e:	mov    QWORD PTR [r14+0x318],rax
  4073a5:	jmp    40731a <memcpy@plt+0x492a>
  4073aa:	mov    edi,0x43
  4073af:	movsx  edx,r15b
  4073b3:	lea    rsi,[rip+0x44fe]        # 40b8b8 <memcpy@plt+0x8ec8>
  4073ba:	xor    eax,eax
  4073bc:	call   403730 <memcpy@plt+0xd40>
  4073c1:	mov    edi,0x3
  4073c6:	call   4025b0 <exit@plt>
  4073cb:	mov    esi,0x338
  4073d0:	mov    edi,0x1
  4073d5:	call   4028f0 <calloc@plt>
  4073da:	mov    r14,rax
  4073dd:	test   rax,rax
  4073e0:	je     40735e <memcpy@plt+0x496e>
  4073e6:	call   402980 <rb_make_rb_dlink_node@plt>
  4073eb:	test   rax,rax
  4073ee:	je     407473 <memcpy@plt+0x4a83>
  4073f4:	mov    rdx,QWORD PTR [rip+0xdc25]        # 415020 <memcpy@plt+0x12630>
  4073fb:	mov    QWORD PTR [rax],r14
  4073fe:	mov    QWORD PTR [rax+0x8],0x0
  407406:	mov    QWORD PTR [rax+0x10],rdx
  40740a:	test   rdx,rdx
  40740d:	je     407460 <memcpy@plt+0x4a70>
  40740f:	mov    QWORD PTR [rdx+0x8],rax
  407413:	mov    QWORD PTR [rip+0xdc06],rax        # 415020 <memcpy@plt+0x12630>
  40741a:	inc    QWORD PTR [rip+0xdc0f]        # 415030 <memcpy@plt+0x12640>
  407421:	jmp    4072ba <memcpy@plt+0x48ca>
  407426:	lea    rsi,[rip+0x444b]        # 40b878 <memcpy@plt+0x8e88>
  40742d:	mov    edi,0x43
  407432:	xor    eax,eax
  407434:	call   403730 <memcpy@plt+0xd40>
  407439:	mov    edi,0x3
  40743e:	call   4025b0 <exit@plt>
  407443:	lea    rsi,[rip+0x44fe]        # 40b948 <memcpy@plt+0x8f58>
  40744a:	jmp    40742d <memcpy@plt+0x4a3d>
  40744c:	lea    rsi,[rip+0x44b5]        # 40b908 <memcpy@plt+0x8f18>
  407453:	jmp    40742d <memcpy@plt+0x4a3d>
  407455:	call   402880 <__stack_chk_fail@plt>
  40745a:	nop    WORD PTR [rax+rax*1+0x0]
  407460:	cmp    QWORD PTR [rip+0xdbc0],0x0        # 415028 <memcpy@plt+0x12638>
  407468:	jne    407413 <memcpy@plt+0x4a23>
  40746a:	mov    QWORD PTR [rip+0xdbb7],rax        # 415028 <memcpy@plt+0x12638>
  407471:	jmp    407413 <memcpy@plt+0x4a23>
  407473:	lea    rcx,[rip+0x4666]        # 40bae0 <memcpy@plt+0x90f0>
  40747a:	mov    edx,0x90
  40747f:	lea    rsi,[rip+0x40c2]        # 40b548 <memcpy@plt+0x8b58>
  407486:	lea    rdi,[rip+0x40e4]        # 40b571 <memcpy@plt+0x8b81>
  40748d:	call   4025c0 <__assert_fail@plt>
  407492:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40749d:	nop    DWORD PTR [rax]
  4074a0:	endbr64 
  4074a4:	push   r15
  4074a6:	push   r14
  4074a8:	push   r13
  4074aa:	push   r12
  4074ac:	push   rbp
  4074ad:	push   rbx
  4074ae:	sub    rsp,0x18
  4074b2:	mov    rax,0x410ae0
  4074b9:	mov    r12,QWORD PTR [rcx+0x8]
  4074bd:	mov    eax,DWORD PTR [rax+0x18]
  4074c0:	mov    DWORD PTR [rsp+0x4],eax
  4074c4:	shl    rax,0x5
  4074c8:	add    rax,QWORD PTR [r12+0x1d0]
  4074d0:	mov    rbx,QWORD PTR [rax+0x10]
  4074d4:	test   rbx,rbx
  4074d7:	je     407554 <memcpy@plt+0x4b64>
  4074d9:	mov    r13,rcx
  4074dc:	mov    rbp,rdi
  4074df:	mov    r15,QWORD PTR [rcx]
  4074e2:	test   rdi,rdi
  4074e5:	je     4074ec <memcpy@plt+0x4afc>
  4074e7:	test   sil,sil
  4074ea:	jne    407568 <memcpy@plt+0x4b78>
  4074ec:	mov    eax,DWORD PTR [r15+0x324]
  4074f3:	dec    eax
  4074f5:	cmp    BYTE PTR [r15+0x320],0x0
  4074fd:	mov    DWORD PTR [r15+0x324],eax
  407504:	je     40750e <memcpy@plt+0x4b1e>
  407506:	test   eax,eax
  407508:	jle    407690 <memcpy@plt+0x4ca0>
  40750e:	mov    rdi,QWORD PTR [r13+0x10]
  407512:	call   403350 <memcpy@plt+0x960>
  407517:	mov    rax,QWORD PTR [r13+0x28]
  40751b:	test   rax,rax
  40751e:	je     407680 <memcpy@plt+0x4c90>
  407524:	mov    rdx,QWORD PTR [r13+0x20]
  407528:	mov    QWORD PTR [rax+0x8],rdx
  40752c:	mov    rdx,QWORD PTR [r13+0x20]
  407530:	test   rdx,rdx
  407533:	je     407670 <memcpy@plt+0x4c80>
  407539:	mov    QWORD PTR [rdx+0x10],rax
  40753d:	dec    QWORD PTR [rbx+0x18]
  407541:	mov    rdi,r13
  407544:	call   4026e0 <free@plt>
  407549:	cmp    QWORD PTR [rbx+0x18],0x0
  40754e:	je     4075f0 <memcpy@plt+0x4c00>
  407554:	add    rsp,0x18
  407558:	pop    rbx
  407559:	pop    rbp
  40755a:	pop    r12
  40755c:	pop    r13
  40755e:	pop    r14
  407560:	pop    r15
  407562:	ret    
  407563:	nop    DWORD PTR [rax+rax*1+0x0]
  407568:	cmp    QWORD PTR [r15+0x318],0x0
  407570:	je     4076a0 <memcpy@plt+0x4cb0>
  407576:	mov    esi,0x2e
  40757b:	call   402750 <strrchr@plt>
  407580:	test   rax,rax
  407583:	je     4076f8 <memcpy@plt+0x4d08>
  407589:	cmp    BYTE PTR [rax+0x1],0x0
  40758d:	je     4076f8 <memcpy@plt+0x4d08>
  407593:	mov    r14,QWORD PTR [r15+0x308]
  40759a:	test   r14,r14
  40759d:	je     4074ec <memcpy@plt+0x4afc>
  4075a3:	inc    rax
  4075a6:	mov    QWORD PTR [rsp+0x8],rax
  4075ab:	jmp    4075dc <memcpy@plt+0x4bec>
  4075ad:	nop    DWORD PTR [rax]
  4075b0:	cmp    ecx,0x2
  4075b3:	jne    4077e6 <memcpy@plt+0x4df6>
  4075b9:	mov    rdi,QWORD PTR [rsp+0x8]
  4075be:	add    rsi,0x4
  4075c2:	call   4028a0 <strcmp@plt>
  4075c7:	test   eax,eax
  4075c9:	je     4076a0 <memcpy@plt+0x4cb0>
  4075cf:	mov    r14,QWORD PTR [r14+0x10]
  4075d3:	test   r14,r14
  4075d6:	je     4074ec <memcpy@plt+0x4afc>
  4075dc:	mov    rsi,QWORD PTR [r14]
  4075df:	mov    ecx,DWORD PTR [rsi]
  4075e1:	cmp    ecx,0x1
  4075e4:	jne    4075b0 <memcpy@plt+0x4bc0>
  4075e6:	mov    rdi,rbp
  4075e9:	jmp    4075be <memcpy@plt+0x4bce>
  4075eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4075f0:	mov    edi,DWORD PTR [r12]
  4075f4:	lea    rsi,[rip+0x43ed]        # 40b9e8 <memcpy@plt+0x8ff8>
  4075fb:	xor    eax,eax
  4075fd:	call   403610 <memcpy@plt+0xc20>
  407602:	mov    rdi,rbx
  407605:	call   4026e0 <free@plt>
  40760a:	mov    rax,0x410ae0
  407611:	mov    rdx,QWORD PTR [r12+0x1d0]
  407619:	mov    eax,DWORD PTR [rax+0x18]
  40761c:	mov    rdi,r12
  40761f:	mov    rsi,rax
  407622:	shl    rax,0x5
  407626:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  40762f:	mov    rdx,QWORD PTR [r12+0x1d0]
  407637:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407640:	call   404370 <memcpy@plt+0x1980>
  407645:	dec    DWORD PTR [r12+0x1cc]
  40764d:	jne    407554 <memcpy@plt+0x4b64>
  407653:	add    rsp,0x18
  407657:	pop    rbx
  407658:	pop    rbp
  407659:	mov    rdi,r12
  40765c:	pop    r12
  40765e:	pop    r13
  407660:	pop    r14
  407662:	pop    r15
  407664:	jmp    403e40 <memcpy@plt+0x1450>
  407669:	nop    DWORD PTR [rax+0x0]
  407670:	mov    QWORD PTR [rbx+0x8],rax
  407674:	jmp    40753d <memcpy@plt+0x4b4d>
  407679:	nop    DWORD PTR [rax+0x0]
  407680:	mov    rdx,QWORD PTR [r13+0x20]
  407684:	mov    QWORD PTR [rbx+0x10],rdx
  407688:	jmp    407530 <memcpy@plt+0x4b40>
  40768d:	nop    DWORD PTR [rax]
  407690:	mov    rdi,r15
  407693:	call   406fb0 <memcpy@plt+0x45c0>
  407698:	jmp    40750e <memcpy@plt+0x4b1e>
  40769d:	nop    DWORD PTR [rax]
  4076a0:	inc    DWORD PTR [r15+0x328]
  4076a7:	mov    esi,DWORD PTR [rsp+0x4]
  4076ab:	xor    eax,eax
  4076ad:	lea    rcx,[r15+0x100]
  4076b4:	mov    rdx,r15
  4076b7:	mov    rdi,r12
  4076ba:	call   404030 <memcpy@plt+0x1640>
  4076bf:	mov    rax,0x410ae0
  4076c6:	mov    eax,DWORD PTR [rax+0x18]
  4076c9:	shl    rax,0x5
  4076cd:	add    rax,QWORD PTR [r12+0x1d0]
  4076d5:	mov    rbp,QWORD PTR [rax+0x10]
  4076d9:	test   rbp,rbp
  4076dc:	je     407554 <memcpy@plt+0x4b64>
  4076e2:	cmp    QWORD PTR [rbp+0x18],0x0
  4076e7:	jne    407740 <memcpy@plt+0x4d50>
  4076e9:	mov    rdi,rbp
  4076ec:	jmp    407605 <memcpy@plt+0x4c15>
  4076f1:	nop    DWORD PTR [rax+0x0]
  4076f8:	mov    rax,QWORD PTR [r15+0x330]
  4076ff:	lea    r14,[rax+0xe10]
  407706:	call   402760 <rb_current_time@plt>
  40770b:	cmp    r14,rax
  40770e:	jge    4074ec <memcpy@plt+0x4afc>
  407714:	mov    rcx,rbp
  407717:	mov    rdx,r15
  40771a:	lea    rsi,[rip+0x4287]        # 40b9a8 <memcpy@plt+0x8fb8>
  407721:	mov    edi,0x57
  407726:	xor    eax,eax
  407728:	call   403730 <memcpy@plt+0xd40>
  40772d:	call   402760 <rb_current_time@plt>
  407732:	mov    QWORD PTR [r15+0x330],rax
  407739:	jmp    4074ec <memcpy@plt+0x4afc>
  40773e:	xchg   ax,ax
  407740:	mov    edi,DWORD PTR [r12]
  407744:	xor    eax,eax
  407746:	lea    rsi,[rip+0x42f6]        # 40ba43 <memcpy@plt+0x9053>
  40774d:	call   403610 <memcpy@plt+0xc20>
  407752:	mov    rax,QWORD PTR [rbp+0x8]
  407756:	test   rax,rax
  407759:	je     4076e9 <memcpy@plt+0x4cf9>
  40775b:	mov    r14,QWORD PTR [rax+0x10]
  40775f:	nop
  407760:	mov    rbx,QWORD PTR [rax]
  407763:	mov    rdi,QWORD PTR [rbx+0x10]
  407767:	call   403350 <memcpy@plt+0x960>
  40776c:	mov    rdi,QWORD PTR [rbx]
  40776f:	mov    eax,DWORD PTR [rdi+0x324]
  407775:	dec    eax
  407777:	mov    DWORD PTR [rdi+0x324],eax
  40777d:	test   eax,eax
  40777f:	jg     40778f <memcpy@plt+0x4d9f>
  407781:	cmp    BYTE PTR [rdi+0x320],0x0
  407788:	je     40778f <memcpy@plt+0x4d9f>
  40778a:	call   406fb0 <memcpy@plt+0x45c0>
  40778f:	mov    rdx,QWORD PTR [rbx+0x28]
  407793:	mov    rax,QWORD PTR [rbx+0x20]
  407797:	test   rdx,rdx
  40779a:	je     4077d0 <memcpy@plt+0x4de0>
  40779c:	mov    QWORD PTR [rdx+0x8],rax
  4077a0:	mov    rax,QWORD PTR [rbx+0x20]
  4077a4:	test   rax,rax
  4077a7:	je     4077e0 <memcpy@plt+0x4df0>
  4077a9:	mov    QWORD PTR [rax+0x10],rdx
  4077ad:	dec    QWORD PTR [rbp+0x18]
  4077b1:	mov    rdi,rbx
  4077b4:	call   4026e0 <free@plt>
  4077b9:	test   r14,r14
  4077bc:	je     4076e9 <memcpy@plt+0x4cf9>
  4077c2:	mov    rax,r14
  4077c5:	mov    r14,QWORD PTR [r14+0x10]
  4077c9:	jmp    407760 <memcpy@plt+0x4d70>
  4077cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077d0:	mov    QWORD PTR [rbp+0x10],rax
  4077d4:	jmp    4077a4 <memcpy@plt+0x4db4>
  4077d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077e0:	mov    QWORD PTR [rbp+0x8],rdx
  4077e4:	jmp    4077ad <memcpy@plt+0x4dbd>
  4077e6:	mov    edi,0x43
  4077eb:	mov    rdx,r15
  4077ee:	lea    rsi,[rip+0x4183]        # 40b978 <memcpy@plt+0x8f88>
  4077f5:	xor    eax,eax
  4077f7:	call   403730 <memcpy@plt+0xd40>
  4077fc:	mov    edi,0x3
  407801:	call   4025b0 <exit@plt>
  407806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407810:	push   r13
  407812:	push   r12
  407814:	mov    r12,rdi
  407817:	mov    edi,0x1
  40781c:	push   rbp
  40781d:	mov    rbp,rsi
  407820:	mov    esi,0x30
  407825:	push   rbx
  407826:	sub    rsp,0x118
  40782d:	mov    rax,QWORD PTR fs:0x28
  407836:	mov    QWORD PTR [rsp+0x108],rax
  40783e:	xor    eax,eax
  407840:	call   4028f0 <calloc@plt>
  407845:	test   rax,rax
  407848:	je     407988 <memcpy@plt+0x4f98>
  40784e:	mov    rbx,rax
  407851:	mov    rax,0x410ae0
  407858:	mov    eax,DWORD PTR [rax+0x18]
  40785b:	shl    rax,0x5
  40785f:	add    rax,QWORD PTR [rbp+0x1d0]
  407866:	mov    r13,QWORD PTR [rax+0x10]
  40786a:	movzx  eax,WORD PTR [rbp+0xf8]
  407871:	mov    QWORD PTR [rbx],r12
  407874:	mov    QWORD PTR [rbx+0x8],rbp
  407878:	cmp    eax,0x2
  40787b:	je     407930 <memcpy@plt+0x4f40>
  407881:	cmp    eax,0xa
  407884:	jne    407895 <memcpy@plt+0x4ea5>
  407886:	test   BYTE PTR [r12+0x300],0x2
  40788f:	je     40793f <memcpy@plt+0x4f4f>
  407895:	lea    rdx,[rbp+0xf8]
  40789c:	mov    rbp,rsp
  40789f:	mov    rcx,r12
  4078a2:	mov    esi,0x100
  4078a7:	mov    rdi,rbp
  4078aa:	call   404f00 <memcpy@plt+0x2510>
  4078af:	lea    rdx,[rip+0xfffffffffffffbea]        # 4074a0 <memcpy@plt+0x4ab0>
  4078b6:	mov    rcx,rbx
  4078b9:	mov    esi,0x2
  4078be:	mov    rdi,rbp
  4078c1:	call   4031a0 <memcpy@plt+0x7b0>
  4078c6:	mov    QWORD PTR [rbx+0x10],rax
  4078ca:	lea    rdx,[rbx+0x18]
  4078ce:	cmp    r13,0xfffffffffffffff8
  4078d2:	je     407992 <memcpy@plt+0x4fa2>
  4078d8:	mov    rax,QWORD PTR [r13+0x8]
  4078dc:	mov    QWORD PTR [rbx+0x18],rbx
  4078e0:	mov    QWORD PTR [rbx+0x20],0x0
  4078e8:	mov    QWORD PTR [rbx+0x28],rax
  4078ec:	test   rax,rax
  4078ef:	je     407970 <memcpy@plt+0x4f80>
  4078f1:	mov    QWORD PTR [rax+0x8],rdx
  4078f5:	mov    QWORD PTR [r13+0x8],rdx
  4078f9:	inc    QWORD PTR [r13+0x18]
  4078fd:	inc    DWORD PTR [r12+0x324]
  407905:	mov    rax,QWORD PTR [rsp+0x108]
  40790d:	xor    rax,QWORD PTR fs:0x28
  407916:	jne    40798d <memcpy@plt+0x4f9d>
  407918:	add    rsp,0x118
  40791f:	pop    rbx
  407920:	pop    rbp
  407921:	pop    r12
  407923:	pop    r13
  407925:	ret    
  407926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407930:	test   BYTE PTR [r12+0x300],0x1
  407939:	jne    407895 <memcpy@plt+0x4ea5>
  40793f:	mov    rax,QWORD PTR [rsp+0x108]
  407947:	xor    rax,QWORD PTR fs:0x28
  407950:	jne    40798d <memcpy@plt+0x4f9d>
  407952:	add    rsp,0x118
  407959:	mov    rdi,rbx
  40795c:	pop    rbx
  40795d:	pop    rbp
  40795e:	pop    r12
  407960:	pop    r13
  407962:	jmp    4026e0 <free@plt>
  407967:	nop    WORD PTR [rax+rax*1+0x0]
  407970:	cmp    QWORD PTR [r13+0x10],0x0
  407975:	jne    4078f5 <memcpy@plt+0x4f05>
  40797b:	mov    QWORD PTR [r13+0x10],rdx
  40797f:	jmp    4078f5 <memcpy@plt+0x4f05>
  407984:	nop    DWORD PTR [rax+0x0]
  407988:	call   402830 <rb_outofmemory@plt>
  40798d:	call   402880 <__stack_chk_fail@plt>
  407992:	lea    rcx,[rip+0x4147]        # 40bae0 <memcpy@plt+0x90f0>
  407999:	mov    edx,0x91
  40799e:	lea    rsi,[rip+0x3ba3]        # 40b548 <memcpy@plt+0x8b58>
  4079a5:	lea    rdi,[rip+0x4088]        # 40ba34 <memcpy@plt+0x9044>
  4079ac:	call   4025c0 <__assert_fail@plt>
  4079b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4079bc:	nop    DWORD PTR [rax+0x0]
  4079c0:	endbr64 
  4079c4:	push   r15
  4079c6:	push   r14
  4079c8:	push   r13
  4079ca:	push   r12
  4079cc:	push   rbp
  4079cd:	push   rbx
  4079ce:	sub    rsp,0x28
  4079d2:	mov    r13,0x4151f0
  4079d9:	mov    r14,rsp
  4079dc:	mov    rdi,QWORD PTR [r13+0x0]
  4079e0:	mov    rsi,r14
  4079e3:	mov    rax,QWORD PTR fs:0x28
  4079ec:	mov    QWORD PTR [rsp+0x18],rax
  4079f1:	xor    eax,eax
  4079f3:	call   402730 <rb_dictionary_foreach_start@plt>
  4079f8:	jmp    407a0c <memcpy@plt+0x501c>
  4079fa:	nop    WORD PTR [rax+rax*1+0x0]
  407a00:	mov    rdi,QWORD PTR [r13+0x0]
  407a04:	mov    rsi,r14
  407a07:	call   4026c0 <rb_dictionary_foreach_next@plt>
  407a0c:	mov    rdi,QWORD PTR [r13+0x0]
  407a10:	mov    rsi,r14
  407a13:	call   402610 <rb_dictionary_foreach_cur@plt>
  407a18:	mov    rbx,rax
  407a1b:	test   rax,rax
  407a1e:	je     407b50 <memcpy@plt+0x5160>
  407a24:	mov    rax,0x410ae0
  407a2b:	mov    eax,DWORD PTR [rax+0x18]
  407a2e:	shl    rax,0x5
  407a32:	add    rax,QWORD PTR [rbx+0x1d0]
  407a39:	mov    r15,QWORD PTR [rax+0x10]
  407a3d:	test   r15,r15
  407a40:	je     407a00 <memcpy@plt+0x5010>
  407a42:	cmp    QWORD PTR [r15+0x18],0x0
  407a47:	jne    407aa8 <memcpy@plt+0x50b8>
  407a49:	mov    rdi,r15
  407a4c:	call   4026e0 <free@plt>
  407a51:	mov    rax,0x410ae0
  407a58:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407a5f:	mov    eax,DWORD PTR [rax+0x18]
  407a62:	mov    rdi,rbx
  407a65:	mov    rsi,rax
  407a68:	shl    rax,0x5
  407a6c:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407a75:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407a7c:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407a85:	call   404370 <memcpy@plt+0x1980>
  407a8a:	dec    DWORD PTR [rbx+0x1cc]
  407a90:	jne    407a00 <memcpy@plt+0x5010>
  407a96:	mov    rdi,rbx
  407a99:	call   403e40 <memcpy@plt+0x1450>
  407a9e:	jmp    407a00 <memcpy@plt+0x5010>
  407aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  407aa8:	mov    edi,DWORD PTR [rbx]
  407aaa:	xor    eax,eax
  407aac:	lea    rsi,[rip+0x3f90]        # 40ba43 <memcpy@plt+0x9053>
  407ab3:	call   403610 <memcpy@plt+0xc20>
  407ab8:	mov    rax,QWORD PTR [r15+0x8]
  407abc:	test   rax,rax
  407abf:	je     407a49 <memcpy@plt+0x5059>
  407ac1:	mov    rbp,QWORD PTR [rax+0x10]
  407ac5:	nop    DWORD PTR [rax]
  407ac8:	mov    r12,QWORD PTR [rax]
  407acb:	mov    rdi,QWORD PTR [r12+0x10]
  407ad0:	call   403350 <memcpy@plt+0x960>
  407ad5:	mov    rdi,QWORD PTR [r12]
  407ad9:	mov    eax,DWORD PTR [rdi+0x324]
  407adf:	cmp    BYTE PTR [rdi+0x320],0x0
  407ae6:	lea    ecx,[rax-0x1]
  407ae9:	mov    DWORD PTR [rdi+0x324],ecx
  407aef:	je     407afa <memcpy@plt+0x510a>
  407af1:	test   ecx,ecx
  407af3:	jg     407afa <memcpy@plt+0x510a>
  407af5:	call   406fb0 <memcpy@plt+0x45c0>
  407afa:	mov    rsi,QWORD PTR [r12+0x28]
  407aff:	mov    rcx,QWORD PTR [r12+0x20]
  407b04:	test   rsi,rsi
  407b07:	je     407b40 <memcpy@plt+0x5150>
  407b09:	mov    QWORD PTR [rsi+0x8],rcx
  407b0d:	mov    rcx,QWORD PTR [r12+0x20]
  407b12:	test   rcx,rcx
  407b15:	je     407b49 <memcpy@plt+0x5159>
  407b17:	mov    QWORD PTR [rcx+0x10],rsi
  407b1b:	dec    QWORD PTR [r15+0x18]
  407b1f:	mov    rdi,r12
  407b22:	call   4026e0 <free@plt>
  407b27:	test   rbp,rbp
  407b2a:	je     407a49 <memcpy@plt+0x5059>
  407b30:	mov    rax,rbp
  407b33:	mov    rbp,QWORD PTR [rbp+0x10]
  407b37:	jmp    407ac8 <memcpy@plt+0x50d8>
  407b39:	nop    DWORD PTR [rax+0x0]
  407b40:	mov    QWORD PTR [r15+0x10],rcx
  407b44:	test   rcx,rcx
  407b47:	jne    407b17 <memcpy@plt+0x5127>
  407b49:	mov    QWORD PTR [r15+0x8],rsi
  407b4d:	jmp    407b1b <memcpy@plt+0x512b>
  407b4f:	nop
  407b50:	call   406ea0 <memcpy@plt+0x44b0>
  407b55:	mov    rax,QWORD PTR [rsp+0x18]
  407b5a:	xor    rax,QWORD PTR fs:0x28
  407b63:	jne    407b74 <memcpy@plt+0x5184>
  407b65:	add    rsp,0x28
  407b69:	pop    rbx
  407b6a:	pop    rbp
  407b6b:	pop    r12
  407b6d:	pop    r13
  407b6f:	pop    r14
  407b71:	pop    r15
  407b73:	ret    
  407b74:	call   402880 <__stack_chk_fail@plt>
  407b79:	nop    DWORD PTR [rax+0x0]
  407b80:	endbr64 
  407b84:	push   r14
  407b86:	push   r13
  407b88:	mov    r13,0x410ae0
  407b8f:	push   r12
  407b91:	push   rbp
  407b92:	push   rbx
  407b93:	mov    eax,DWORD PTR [r13+0x18]
  407b97:	shl    rax,0x5
  407b9b:	add    rax,QWORD PTR [rdi+0x1d0]
  407ba2:	mov    rbp,QWORD PTR [rax+0x10]
  407ba6:	test   rbp,rbp
  407ba9:	je     407bfc <memcpy@plt+0x520c>
  407bab:	cmp    QWORD PTR [rbp+0x18],0x0
  407bb0:	mov    rbx,rdi
  407bb3:	jne    407c08 <memcpy@plt+0x5218>
  407bb5:	mov    rdi,rbp
  407bb8:	call   4026e0 <free@plt>
  407bbd:	mov    eax,DWORD PTR [r13+0x18]
  407bc1:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407bc8:	mov    rsi,rax
  407bcb:	shl    rax,0x5
  407bcf:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407bd8:	mov    rdi,rbx
  407bdb:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407be2:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407beb:	call   404370 <memcpy@plt+0x1980>
  407bf0:	dec    DWORD PTR [rbx+0x1cc]
  407bf6:	je     407ca0 <memcpy@plt+0x52b0>
  407bfc:	pop    rbx
  407bfd:	pop    rbp
  407bfe:	pop    r12
  407c00:	pop    r13
  407c02:	pop    r14
  407c04:	ret    
  407c05:	nop    DWORD PTR [rax]
  407c08:	mov    edi,DWORD PTR [rdi]
  407c0a:	xor    eax,eax
  407c0c:	lea    rsi,[rip+0x3e30]        # 40ba43 <memcpy@plt+0x9053>
  407c13:	call   403610 <memcpy@plt+0xc20>
  407c18:	mov    rax,QWORD PTR [rbp+0x8]
  407c1c:	test   rax,rax
  407c1f:	je     407bb5 <memcpy@plt+0x51c5>
  407c21:	mov    r14,QWORD PTR [rax+0x10]
  407c25:	nop    DWORD PTR [rax]
  407c28:	mov    r12,QWORD PTR [rax]
  407c2b:	mov    rdi,QWORD PTR [r12+0x10]
  407c30:	call   403350 <memcpy@plt+0x960>
  407c35:	mov    rdi,QWORD PTR [r12]
  407c39:	mov    eax,DWORD PTR [rdi+0x324]
  407c3f:	dec    eax
  407c41:	cmp    BYTE PTR [rdi+0x320],0x0
  407c48:	mov    DWORD PTR [rdi+0x324],eax
  407c4e:	je     407c59 <memcpy@plt+0x5269>
  407c50:	test   eax,eax
  407c52:	jg     407c59 <memcpy@plt+0x5269>
  407c54:	call   406fb0 <memcpy@plt+0x45c0>
  407c59:	mov    rdx,QWORD PTR [r12+0x28]
  407c5e:	mov    rax,QWORD PTR [r12+0x20]
  407c63:	test   rdx,rdx
  407c66:	je     407cb0 <memcpy@plt+0x52c0>
  407c68:	mov    QWORD PTR [rdx+0x8],rax
  407c6c:	mov    rax,QWORD PTR [r12+0x20]
  407c71:	test   rax,rax
  407c74:	je     407cb9 <memcpy@plt+0x52c9>
  407c76:	mov    QWORD PTR [rax+0x10],rdx
  407c7a:	dec    QWORD PTR [rbp+0x18]
  407c7e:	mov    rdi,r12
  407c81:	call   4026e0 <free@plt>
  407c86:	test   r14,r14
  407c89:	je     407bb5 <memcpy@plt+0x51c5>
  407c8f:	mov    rax,r14
  407c92:	mov    r14,QWORD PTR [r14+0x10]
  407c96:	jmp    407c28 <memcpy@plt+0x5238>
  407c98:	nop    DWORD PTR [rax+rax*1+0x0]
  407ca0:	mov    rdi,rbx
  407ca3:	pop    rbx
  407ca4:	pop    rbp
  407ca5:	pop    r12
  407ca7:	pop    r13
  407ca9:	pop    r14
  407cab:	jmp    403e40 <memcpy@plt+0x1450>
  407cb0:	mov    QWORD PTR [rbp+0x10],rax
  407cb4:	test   rax,rax
  407cb7:	jne    407c76 <memcpy@plt+0x5286>
  407cb9:	mov    QWORD PTR [rbp+0x8],rdx
  407cbd:	jmp    407c7a <memcpy@plt+0x528a>
  407cbf:	nop
  407cc0:	endbr64 
  407cc4:	push   r14
  407cc6:	push   r13
  407cc8:	mov    r13,0x410ae0
  407ccf:	push   r12
  407cd1:	push   rbp
  407cd2:	push   rbx
  407cd3:	mov    eax,DWORD PTR [r13+0x18]
  407cd7:	shl    rax,0x5
  407cdb:	add    rax,QWORD PTR [rdi+0x1d0]
  407ce2:	mov    rbp,QWORD PTR [rax+0x10]
  407ce6:	test   rbp,rbp
  407ce9:	je     407d3c <memcpy@plt+0x534c>
  407ceb:	cmp    QWORD PTR [rbp+0x18],0x0
  407cf0:	mov    rbx,rdi
  407cf3:	jne    407d48 <memcpy@plt+0x5358>
  407cf5:	mov    rdi,rbp
  407cf8:	call   4026e0 <free@plt>
  407cfd:	mov    eax,DWORD PTR [r13+0x18]
  407d01:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407d08:	mov    rsi,rax
  407d0b:	shl    rax,0x5
  407d0f:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407d18:	mov    rdi,rbx
  407d1b:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407d22:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407d2b:	call   404370 <memcpy@plt+0x1980>
  407d30:	dec    DWORD PTR [rbx+0x1cc]
  407d36:	je     407de0 <memcpy@plt+0x53f0>
  407d3c:	pop    rbx
  407d3d:	pop    rbp
  407d3e:	pop    r12
  407d40:	pop    r13
  407d42:	pop    r14
  407d44:	ret    
  407d45:	nop    DWORD PTR [rax]
  407d48:	mov    edi,DWORD PTR [rdi]
  407d4a:	xor    eax,eax
  407d4c:	lea    rsi,[rip+0x3d0a]        # 40ba5d <memcpy@plt+0x906d>
  407d53:	call   403610 <memcpy@plt+0xc20>
  407d58:	mov    rax,QWORD PTR [rbp+0x8]
  407d5c:	test   rax,rax
  407d5f:	je     407cf5 <memcpy@plt+0x5305>
  407d61:	mov    r14,QWORD PTR [rax+0x10]
  407d65:	nop    DWORD PTR [rax]
  407d68:	mov    r12,QWORD PTR [rax]
  407d6b:	mov    rdi,QWORD PTR [r12+0x10]
  407d70:	call   403350 <memcpy@plt+0x960>
  407d75:	mov    rdi,QWORD PTR [r12]
  407d79:	mov    eax,DWORD PTR [rdi+0x324]
  407d7f:	dec    eax
  407d81:	cmp    BYTE PTR [rdi+0x320],0x0
  407d88:	mov    DWORD PTR [rdi+0x324],eax
  407d8e:	je     407d99 <memcpy@plt+0x53a9>
  407d90:	test   eax,eax
  407d92:	jg     407d99 <memcpy@plt+0x53a9>
  407d94:	call   406fb0 <memcpy@plt+0x45c0>
  407d99:	mov    rdx,QWORD PTR [r12+0x28]
  407d9e:	mov    rax,QWORD PTR [r12+0x20]
  407da3:	test   rdx,rdx
  407da6:	je     407df0 <memcpy@plt+0x5400>
  407da8:	mov    QWORD PTR [rdx+0x8],rax
  407dac:	mov    rax,QWORD PTR [r12+0x20]
  407db1:	test   rax,rax
  407db4:	je     407df9 <memcpy@plt+0x5409>
  407db6:	mov    QWORD PTR [rax+0x10],rdx
  407dba:	dec    QWORD PTR [rbp+0x18]
  407dbe:	mov    rdi,r12
  407dc1:	call   4026e0 <free@plt>
  407dc6:	test   r14,r14
  407dc9:	je     407cf5 <memcpy@plt+0x5305>
  407dcf:	mov    rax,r14
  407dd2:	mov    r14,QWORD PTR [r14+0x10]
  407dd6:	jmp    407d68 <memcpy@plt+0x5378>
  407dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  407de0:	mov    rdi,rbx
  407de3:	pop    rbx
  407de4:	pop    rbp
  407de5:	pop    r12
  407de7:	pop    r13
  407de9:	pop    r14
  407deb:	jmp    403e40 <memcpy@plt+0x1450>
  407df0:	mov    QWORD PTR [rbp+0x10],rax
  407df4:	test   rax,rax
  407df7:	jne    407db6 <memcpy@plt+0x53c6>
  407df9:	mov    QWORD PTR [rbp+0x8],rdx
  407dfd:	jmp    407dba <memcpy@plt+0x53ca>
  407dff:	nop
  407e00:	endbr64 
  407e04:	push   r15
  407e06:	push   r14
  407e08:	push   r13
  407e0a:	push   r12
  407e0c:	push   rbp
  407e0d:	mov    rbp,rdi
  407e10:	push   rbx
  407e11:	sub    rsp,0x8
  407e15:	cmp    QWORD PTR [rip+0xd213],0x0        # 415030 <memcpy@plt+0x12640>
  407e1d:	je     408028 <memcpy@plt+0x5638>
  407e23:	inc    DWORD PTR [rdi+0x1cc]
  407e29:	mov    esi,0x20
  407e2e:	mov    edi,0x1
  407e33:	call   4028f0 <calloc@plt>
  407e38:	test   rax,rax
  407e3b:	je     408070 <memcpy@plt+0x5680>
  407e41:	mov    rcx,0x410ae0
  407e48:	mov    rdx,QWORD PTR [rbp+0x1d0]
  407e4f:	mov    r14d,DWORD PTR [rcx+0x18]
  407e53:	shl    r14,0x5
  407e57:	mov    QWORD PTR [rdx+r14*1+0x10],rax
  407e5c:	mov    rax,0x415200
  407e63:	mov    rbx,QWORD PTR [rax]
  407e66:	test   rbx,rbx
  407e69:	je     408088 <memcpy@plt+0x5698>
  407e6f:	mov    r12,rbx
  407e72:	lea    r15,[rip+0x3c00]        # 40ba79 <memcpy@plt+0x9089>
  407e79:	jmp    407e8e <memcpy@plt+0x549e>
  407e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e80:	mov    r12,QWORD PTR [r12+0x10]
  407e85:	test   r12,r12
  407e88:	je     408040 <memcpy@plt+0x5650>
  407e8e:	mov    r13,QWORD PTR [r12]
  407e92:	mov    rsi,r15
  407e95:	mov    rdi,QWORD PTR [r13+0x20]
  407e99:	call   4025f0 <strcasecmp@plt>
  407e9e:	test   eax,eax
  407ea0:	jne    407e80 <memcpy@plt+0x5490>
  407ea2:	mov    eax,DWORD PTR [r13+0x18]
  407ea6:	mov    r12,QWORD PTR [rbp+0x1d0]
  407ead:	shl    rax,0x5
  407eb1:	cmp    DWORD PTR [r12+rax*1+0x18],0x2
  407eb7:	jne    408010 <memcpy@plt+0x5620>
  407ebd:	lea    r15,[rip+0x3bba]        # 40ba7e <memcpy@plt+0x908e>
  407ec4:	jmp    407ed9 <memcpy@plt+0x54e9>
  407ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ed0:	mov    rbx,QWORD PTR [rbx+0x10]
  407ed4:	test   rbx,rbx
  407ed7:	je     407f00 <memcpy@plt+0x5510>
  407ed9:	mov    r13,QWORD PTR [rbx]
  407edc:	mov    rsi,r15
  407edf:	mov    rdi,QWORD PTR [r13+0x20]
  407ee3:	call   4025f0 <strcasecmp@plt>
  407ee8:	test   eax,eax
  407eea:	jne    407ed0 <memcpy@plt+0x54e0>
  407eec:	mov    eax,DWORD PTR [r13+0x18]
  407ef0:	shl    rax,0x5
  407ef4:	cmp    DWORD PTR [r12+rax*1+0x18],0x2
  407efa:	jne    408010 <memcpy@plt+0x5620>
  407f00:	movzx  eax,WORD PTR [rbp+0xf8]
  407f07:	mov    r12,QWORD PTR [r12+r14*1+0x10]
  407f0c:	cmp    ax,0x2
  407f10:	je     408078 <memcpy@plt+0x5688>
  407f16:	mov    r14d,0x2
  407f1c:	cmp    ax,0xa
  407f20:	jne    407fae <memcpy@plt+0x55be>
  407f26:	mov    BYTE PTR [r12],0x1
  407f2b:	mov    edi,DWORD PTR [rbp+0x0]
  407f2e:	lea    rsi,[rip+0x3adb]        # 40ba10 <memcpy@plt+0x9020>
  407f35:	xor    eax,eax
  407f37:	call   403610 <memcpy@plt+0xc20>
  407f3c:	mov    rbx,QWORD PTR [rip+0xd0dd]        # 415020 <memcpy@plt+0x12630>
  407f43:	test   rbx,rbx
  407f46:	jne    407f59 <memcpy@plt+0x5569>
  407f48:	jmp    407f88 <memcpy@plt+0x5598>
  407f4a:	nop    WORD PTR [rax+rax*1+0x0]
  407f50:	mov    rbx,QWORD PTR [rbx+0x10]
  407f54:	test   rbx,rbx
  407f57:	je     407f88 <memcpy@plt+0x5598>
  407f59:	mov    rdi,QWORD PTR [rbx]
  407f5c:	cmp    BYTE PTR [rdi+0x320],0x0
  407f63:	jne    407f50 <memcpy@plt+0x5560>
  407f65:	movzx  eax,BYTE PTR [rdi+0x300]
  407f6c:	test   eax,r14d
  407f6f:	je     407f50 <memcpy@plt+0x5560>
  407f71:	mov    rsi,rbp
  407f74:	call   407810 <memcpy@plt+0x4e20>
  407f79:	mov    rbx,QWORD PTR [rbx+0x10]
  407f7d:	test   rbx,rbx
  407f80:	jne    407f59 <memcpy@plt+0x5569>
  407f82:	nop    WORD PTR [rax+rax*1+0x0]
  407f88:	mov    rax,0x410ae0
  407f8f:	mov    ebx,DWORD PTR [rax+0x18]
  407f92:	shl    rbx,0x5
  407f96:	cmp    QWORD PTR [r12+0x18],0x0
  407f9c:	jne    408050 <memcpy@plt+0x5660>
  407fa2:	mov    rax,QWORD PTR [rbp+0x1d0]
  407fa9:	mov    r12,QWORD PTR [rax+rbx*1+0x10]
  407fae:	test   r12,r12
  407fb1:	je     408010 <memcpy@plt+0x5620>
  407fb3:	cmp    QWORD PTR [r12+0x18],0x0
  407fb9:	jne    408098 <memcpy@plt+0x56a8>
  407fbf:	mov    rdi,r12
  407fc2:	call   4026e0 <free@plt>
  407fc7:	mov    rax,0x410ae0
  407fce:	mov    rdx,QWORD PTR [rbp+0x1d0]
  407fd5:	mov    eax,DWORD PTR [rax+0x18]
  407fd8:	mov    rdi,rbp
  407fdb:	mov    rsi,rax
  407fde:	shl    rax,0x5
  407fe2:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407feb:	mov    rdx,QWORD PTR [rbp+0x1d0]
  407ff2:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407ffb:	call   404370 <memcpy@plt+0x1980>
  408000:	dec    DWORD PTR [rbp+0x1cc]
  408006:	jne    408010 <memcpy@plt+0x5620>
  408008:	mov    rdi,rbp
  40800b:	call   403e40 <memcpy@plt+0x1450>
  408010:	add    rsp,0x8
  408014:	pop    rbx
  408015:	pop    rbp
  408016:	pop    r12
  408018:	pop    r13
  40801a:	pop    r14
  40801c:	mov    eax,0x1
  408021:	pop    r15
  408023:	ret    
  408024:	nop    DWORD PTR [rax+0x0]
  408028:	mov    rax,0x410ae0
  40802f:	mov    esi,DWORD PTR [rax+0x18]
  408032:	call   404370 <memcpy@plt+0x1980>
  408037:	jmp    408010 <memcpy@plt+0x5620>
  408039:	nop    DWORD PTR [rax+0x0]
  408040:	mov    r12,QWORD PTR [rbp+0x1d0]
  408047:	jmp    407ebd <memcpy@plt+0x54cd>
  40804c:	nop    DWORD PTR [rax+0x0]
  408050:	movsxd r12,DWORD PTR [rip+0x8a69]        # 410ac0 <memcpy@plt+0xe0d0>
  408057:	call   402760 <rb_current_time@plt>
  40805c:	mov    rdx,QWORD PTR [rbp+0x1d0]
  408063:	add    r12,rax
  408066:	mov    QWORD PTR [rdx+rbx*1+0x8],r12
  40806b:	jmp    408010 <memcpy@plt+0x5620>
  40806d:	nop    DWORD PTR [rax]
  408070:	call   402830 <rb_outofmemory@plt>
  408075:	nop    DWORD PTR [rax]
  408078:	mov    r14d,0x1
  40807e:	jmp    407f26 <memcpy@plt+0x5536>
  408083:	nop    DWORD PTR [rax+rax*1+0x0]
  408088:	mov    r12,QWORD PTR [rbp+0x1d0]
  40808f:	jmp    407f00 <memcpy@plt+0x5510>
  408094:	nop    DWORD PTR [rax+0x0]
  408098:	mov    edi,DWORD PTR [rbp+0x0]
  40809b:	xor    eax,eax
  40809d:	lea    rsi,[rip+0x39e0]        # 40ba84 <memcpy@plt+0x9094>
  4080a4:	call   403610 <memcpy@plt+0xc20>
  4080a9:	mov    rax,QWORD PTR [r12+0x8]
  4080ae:	test   rax,rax
  4080b1:	je     407fbf <memcpy@plt+0x55cf>
  4080b7:	mov    r14,QWORD PTR [rax+0x10]
  4080bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4080c0:	mov    rbx,QWORD PTR [rax]
  4080c3:	mov    rdi,QWORD PTR [rbx+0x10]
  4080c7:	call   403350 <memcpy@plt+0x960>
  4080cc:	mov    rdi,QWORD PTR [rbx]
  4080cf:	mov    eax,DWORD PTR [rdi+0x324]
  4080d5:	dec    eax
  4080d7:	cmp    BYTE PTR [rdi+0x320],0x0
  4080de:	mov    DWORD PTR [rdi+0x324],eax
  4080e4:	je     4080ef <memcpy@plt+0x56ff>
  4080e6:	test   eax,eax
  4080e8:	jg     4080ef <memcpy@plt+0x56ff>
  4080ea:	call   406fb0 <memcpy@plt+0x45c0>
  4080ef:	mov    rdx,QWORD PTR [rbx+0x28]
  4080f3:	mov    rax,QWORD PTR [rbx+0x20]
  4080f7:	test   rdx,rdx
  4080fa:	je     408130 <memcpy@plt+0x5740>
  4080fc:	mov    QWORD PTR [rdx+0x8],rax
  408100:	mov    rax,QWORD PTR [rbx+0x20]
  408104:	test   rax,rax
  408107:	je     408140 <memcpy@plt+0x5750>
  408109:	mov    QWORD PTR [rax+0x10],rdx
  40810d:	dec    QWORD PTR [r12+0x18]
  408112:	mov    rdi,rbx
  408115:	call   4026e0 <free@plt>
  40811a:	test   r14,r14
  40811d:	je     407fbf <memcpy@plt+0x55cf>
  408123:	mov    rax,r14
  408126:	mov    r14,QWORD PTR [r14+0x10]
  40812a:	jmp    4080c0 <memcpy@plt+0x56d0>
  40812c:	nop    DWORD PTR [rax+0x0]
  408130:	mov    QWORD PTR [r12+0x10],rax
  408135:	jmp    408104 <memcpy@plt+0x5714>
  408137:	nop    WORD PTR [rax+rax*1+0x0]
  408140:	mov    QWORD PTR [r12+0x8],rdx
  408145:	jmp    40810d <memcpy@plt+0x571d>
  408147:	nop    WORD PTR [rax+rax*1+0x0]
  408150:	endbr64 
  408154:	push   r15
  408156:	push   r14
  408158:	push   r13
  40815a:	push   r12
  40815c:	push   rbp
  40815d:	push   rbx
  40815e:	sub    rsp,0x8
  408162:	mov    rax,0x410ae0
  408169:	mov    r13,QWORD PTR [rdi+0x1d0]
  408170:	mov    eax,DWORD PTR [rax+0x18]
  408173:	shl    rax,0x5
  408177:	mov    r12,QWORD PTR [r13+rax*1+0x10]
  40817c:	test   r12,r12
  40817f:	je     408188 <memcpy@plt+0x5798>
  408181:	cmp    BYTE PTR [r12],0x0
  408186:	je     4081a0 <memcpy@plt+0x57b0>
  408188:	add    rsp,0x8
  40818c:	pop    rbx
  40818d:	pop    rbp
  40818e:	pop    r12
  408190:	pop    r13
  408192:	pop    r14
  408194:	pop    r15
  408196:	ret    
  408197:	nop    WORD PTR [rax+rax*1+0x0]
  4081a0:	mov    rax,0x415200
  4081a7:	mov    rbp,rdi
  4081aa:	mov    rbx,QWORD PTR [rax]
  4081ad:	test   rbx,rbx
  4081b0:	je     408230 <memcpy@plt+0x5840>
  4081b2:	mov    r15,rbx
  4081b5:	jmp    4081c9 <memcpy@plt+0x57d9>
  4081b7:	nop    WORD PTR [rax+rax*1+0x0]
  4081c0:	mov    r15,QWORD PTR [r15+0x10]
  4081c4:	test   r15,r15
  4081c7:	je     4081f0 <memcpy@plt+0x5800>
  4081c9:	mov    r14,QWORD PTR [r15]
  4081cc:	lea    rsi,[rip+0x38a6]        # 40ba79 <memcpy@plt+0x9089>
  4081d3:	mov    rdi,QWORD PTR [r14+0x20]
  4081d7:	call   4025f0 <strcasecmp@plt>
  4081dc:	test   eax,eax
  4081de:	jne    4081c0 <memcpy@plt+0x57d0>
  4081e0:	mov    eax,DWORD PTR [r14+0x18]
  4081e4:	shl    rax,0x5
  4081e8:	cmp    DWORD PTR [r13+rax*1+0x18],0x2
  4081ee:	jne    408188 <memcpy@plt+0x5798>
  4081f0:	lea    r15,[rip+0x3887]        # 40ba7e <memcpy@plt+0x908e>
  4081f7:	jmp    408209 <memcpy@plt+0x5819>
  4081f9:	nop    DWORD PTR [rax+0x0]
  408200:	mov    rbx,QWORD PTR [rbx+0x10]
  408204:	test   rbx,rbx
  408207:	je     408230 <memcpy@plt+0x5840>
  408209:	mov    r14,QWORD PTR [rbx]
  40820c:	mov    rsi,r15
  40820f:	mov    rdi,QWORD PTR [r14+0x20]
  408213:	call   4025f0 <strcasecmp@plt>
  408218:	test   eax,eax
  40821a:	jne    408200 <memcpy@plt+0x5810>
  40821c:	mov    eax,DWORD PTR [r14+0x18]
  408220:	shl    rax,0x5
  408224:	cmp    DWORD PTR [r13+rax*1+0x18],0x2
  40822a:	jne    408188 <memcpy@plt+0x5798>
  408230:	movzx  eax,WORD PTR [rbp+0xf8]
  408237:	cmp    ax,0x2
  40823b:	je     4082c0 <memcpy@plt+0x58d0>
  408241:	mov    r13d,0x2
  408247:	cmp    ax,0xa
  40824b:	je     4082c6 <memcpy@plt+0x58d6>
  40824d:	cmp    QWORD PTR [r12+0x18],0x0
  408253:	jne    408360 <memcpy@plt+0x5970>
  408259:	mov    rdi,r12
  40825c:	call   4026e0 <free@plt>
  408261:	mov    rax,0x410ae0
  408268:	mov    rdx,QWORD PTR [rbp+0x1d0]
  40826f:	mov    eax,DWORD PTR [rax+0x18]
  408272:	mov    rdi,rbp
  408275:	mov    rsi,rax
  408278:	shl    rax,0x5
  40827c:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408285:	mov    rdx,QWORD PTR [rbp+0x1d0]
  40828c:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408295:	call   404370 <memcpy@plt+0x1980>
  40829a:	dec    DWORD PTR [rbp+0x1cc]
  4082a0:	jne    408188 <memcpy@plt+0x5798>
  4082a6:	add    rsp,0x8
  4082aa:	pop    rbx
  4082ab:	mov    rdi,rbp
  4082ae:	pop    rbp
  4082af:	pop    r12
  4082b1:	pop    r13
  4082b3:	pop    r14
  4082b5:	pop    r15
  4082b7:	jmp    403e40 <memcpy@plt+0x1450>
  4082bc:	nop    DWORD PTR [rax+0x0]
  4082c0:	mov    r13d,0x1
  4082c6:	mov    BYTE PTR [r12],0x1
  4082cb:	mov    edi,DWORD PTR [rbp+0x0]
  4082ce:	lea    rsi,[rip+0x373b]        # 40ba10 <memcpy@plt+0x9020>
  4082d5:	xor    eax,eax
  4082d7:	call   403610 <memcpy@plt+0xc20>
  4082dc:	mov    rbx,QWORD PTR [rip+0xcd3d]        # 415020 <memcpy@plt+0x12630>
  4082e3:	test   rbx,rbx
  4082e6:	jne    4082f9 <memcpy@plt+0x5909>
  4082e8:	jmp    408320 <memcpy@plt+0x5930>
  4082ea:	nop    WORD PTR [rax+rax*1+0x0]
  4082f0:	mov    rbx,QWORD PTR [rbx+0x10]
  4082f4:	test   rbx,rbx
  4082f7:	je     408320 <memcpy@plt+0x5930>
  4082f9:	mov    rdi,QWORD PTR [rbx]
  4082fc:	cmp    BYTE PTR [rdi+0x320],0x0
  408303:	jne    4082f0 <memcpy@plt+0x5900>
  408305:	movzx  eax,BYTE PTR [rdi+0x300]
  40830c:	test   eax,r13d
  40830f:	je     4082f0 <memcpy@plt+0x5900>
  408311:	mov    rsi,rbp
  408314:	call   407810 <memcpy@plt+0x4e20>
  408319:	jmp    4082f0 <memcpy@plt+0x5900>
  40831b:	nop    DWORD PTR [rax+rax*1+0x0]
  408320:	mov    rax,0x410ae0
  408327:	mov    eax,DWORD PTR [rax+0x18]
  40832a:	shl    rax,0x5
  40832e:	cmp    QWORD PTR [r12+0x18],0x0
  408334:	mov    rbx,rax
  408337:	jne    4083f8 <memcpy@plt+0x5a08>
  40833d:	mov    rax,QWORD PTR [rbp+0x1d0]
  408344:	mov    r12,QWORD PTR [rax+rbx*1+0x10]
  408349:	test   r12,r12
  40834c:	je     408188 <memcpy@plt+0x5798>
  408352:	jmp    40824d <memcpy@plt+0x585d>
  408357:	nop    WORD PTR [rax+rax*1+0x0]
  408360:	mov    edi,DWORD PTR [rbp+0x0]
  408363:	xor    eax,eax
  408365:	lea    rsi,[rip+0x3718]        # 40ba84 <memcpy@plt+0x9094>
  40836c:	call   403610 <memcpy@plt+0xc20>
  408371:	mov    rax,QWORD PTR [r12+0x8]
  408376:	test   rax,rax
  408379:	je     408259 <memcpy@plt+0x5869>
  40837f:	mov    r13,QWORD PTR [rax+0x10]
  408383:	nop    DWORD PTR [rax+rax*1+0x0]
  408388:	mov    rbx,QWORD PTR [rax]
  40838b:	mov    rdi,QWORD PTR [rbx+0x10]
  40838f:	call   403350 <memcpy@plt+0x960>
  408394:	mov    rdi,QWORD PTR [rbx]
  408397:	mov    eax,DWORD PTR [rdi+0x324]
  40839d:	dec    eax
  40839f:	cmp    BYTE PTR [rdi+0x320],0x0
  4083a6:	mov    DWORD PTR [rdi+0x324],eax
  4083ac:	je     4083b7 <memcpy@plt+0x59c7>
  4083ae:	test   eax,eax
  4083b0:	jg     4083b7 <memcpy@plt+0x59c7>
  4083b2:	call   406fb0 <memcpy@plt+0x45c0>
  4083b7:	mov    rdx,QWORD PTR [rbx+0x28]
  4083bb:	mov    rax,QWORD PTR [rbx+0x20]
  4083bf:	test   rdx,rdx
  4083c2:	je     408430 <memcpy@plt+0x5a40>
  4083c4:	mov    QWORD PTR [rdx+0x8],rax
  4083c8:	mov    rax,QWORD PTR [rbx+0x20]
  4083cc:	test   rax,rax
  4083cf:	je     408420 <memcpy@plt+0x5a30>
  4083d1:	mov    QWORD PTR [rax+0x10],rdx
  4083d5:	dec    QWORD PTR [r12+0x18]
  4083da:	mov    rdi,rbx
  4083dd:	call   4026e0 <free@plt>
  4083e2:	test   r13,r13
  4083e5:	je     408259 <memcpy@plt+0x5869>
  4083eb:	mov    rax,r13
  4083ee:	mov    r13,QWORD PTR [r13+0x10]
  4083f2:	jmp    408388 <memcpy@plt+0x5998>
  4083f4:	nop    DWORD PTR [rax+0x0]
  4083f8:	movsxd r12,DWORD PTR [rip+0x86c1]        # 410ac0 <memcpy@plt+0xe0d0>
  4083ff:	call   402760 <rb_current_time@plt>
  408404:	mov    rdx,QWORD PTR [rbp+0x1d0]
  40840b:	add    r12,rax
  40840e:	mov    QWORD PTR [rdx+rbx*1+0x8],r12
  408413:	jmp    408188 <memcpy@plt+0x5798>
  408418:	nop    DWORD PTR [rax+rax*1+0x0]
  408420:	mov    QWORD PTR [r12+0x8],rdx
  408425:	jmp    4083d5 <memcpy@plt+0x59e5>
  408427:	nop    WORD PTR [rax+rax*1+0x0]
  408430:	mov    QWORD PTR [r12+0x10],rax
  408435:	jmp    4083cc <memcpy@plt+0x59dc>
  408437:	nop    WORD PTR [rax+rax*1+0x0]
  408440:	endbr64 
  408444:	mov    rax,QWORD PTR [rdx]
  408447:	cmp    BYTE PTR [rax],0x31
  40844a:	sete   BYTE PTR [rip+0x8787]        # 410bd8 <memcpy@plt+0xe1e8>
  408451:	ret    
  408452:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40845d:	nop    DWORD PTR [rax]
  408460:	endbr64 
  408464:	sub    rsp,0x8
  408468:	mov    rax,rdx
  40846b:	mov    rdi,QWORD PTR [rax]
  40846e:	xor    esi,esi
  408470:	mov    edx,0xa
  408475:	call   4027d0 <strtol@plt>
  40847a:	test   eax,eax
  40847c:	js     408489 <memcpy@plt+0x5a99>
  40847e:	mov    DWORD PTR [rip+0x8758],eax        # 410bdc <memcpy@plt+0xe1ec>
  408484:	add    rsp,0x8
  408488:	ret    
  408489:	mov    edx,eax
  40848b:	mov    edi,0x43
  408490:	lea    rsi,[rip+0x3671]        # 40bb08 <memcpy@plt+0x9118>
  408497:	xor    eax,eax
  408499:	call   403730 <memcpy@plt+0xd40>
  40849e:	mov    edi,0x3
  4084a3:	call   4025b0 <exit@plt>
  4084a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084b0:	push   r13
  4084b2:	mov    edx,0xb
  4084b7:	push   r12
  4084b9:	mov    r12d,esi
  4084bc:	lea    rsi,[rip+0x2e30]        # 40b2f3 <memcpy@plt+0x8903>
  4084c3:	push   rbp
  4084c4:	push   rbx
  4084c5:	mov    rbx,rdi
  4084c8:	add    rdi,0x1b8
  4084cf:	sub    rsp,0x8
  4084d3:	mov    rbp,0x410be0
  4084da:	mov    eax,DWORD PTR [rbp+0x18]
  4084dd:	shl    rax,0x5
  4084e1:	add    rax,QWORD PTR [rdi+0x18]
  4084e5:	mov    r13,QWORD PTR [rax+0x10]
  4084e9:	call   4026b0 <rb_strlcpy@plt>
  4084ee:	mov    rdi,QWORD PTR [r13+0x0]
  4084f2:	test   rdi,rdi
  4084f5:	je     4084fc <memcpy@plt+0x5b0c>
  4084f7:	call   4027c0 <rb_close@plt>
  4084fc:	mov    rdi,r13
  4084ff:	call   4026e0 <free@plt>
  408504:	mov    eax,DWORD PTR [rbp+0x18]
  408507:	mov    rdx,QWORD PTR [rbx+0x1d0]
  40850e:	shl    rax,0x5
  408512:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  40851b:	mov    edi,DWORD PTR [rbx]
  40851d:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408524:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  40852d:	lea    rax,[rip+0x686c]        # 40eda0 <memcpy@plt+0xc3b0>
  408534:	mov    rsi,QWORD PTR [rax+r12*8]
  408538:	xor    eax,eax
  40853a:	call   403610 <memcpy@plt+0xc20>
  40853f:	mov    esi,DWORD PTR [rbp+0x18]
  408542:	mov    rdi,rbx
  408545:	call   404370 <memcpy@plt+0x1980>
  40854a:	dec    DWORD PTR [rbx+0x1cc]
  408550:	je     408560 <memcpy@plt+0x5b70>
  408552:	add    rsp,0x8
  408556:	pop    rbx
  408557:	pop    rbp
  408558:	pop    r12
  40855a:	pop    r13
  40855c:	ret    
  40855d:	nop    DWORD PTR [rax]
  408560:	add    rsp,0x8
  408564:	mov    rdi,rbx
  408567:	pop    rbx
  408568:	pop    rbp
  408569:	pop    r12
  40856b:	pop    r13
  40856d:	jmp    403e40 <memcpy@plt+0x1450>
  408572:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40857d:	nop    DWORD PTR [rax]
  408580:	endbr64 
  408584:	mov    rax,0x410be0
  40858b:	mov    eax,DWORD PTR [rax+0x18]
  40858e:	shl    rax,0x5
  408592:	add    rax,QWORD PTR [rdi+0x1d0]
  408599:	cmp    QWORD PTR [rax+0x10],0x0
  40859e:	je     4085b0 <memcpy@plt+0x5bc0>
  4085a0:	mov    esi,0x2
  4085a5:	jmp    4084b0 <memcpy@plt+0x5ac0>
  4085aa:	nop    WORD PTR [rax+rax*1+0x0]
  4085b0:	ret    
  4085b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4085bc:	nop    DWORD PTR [rax+0x0]
  4085c0:	endbr64 
  4085c4:	push   r14
  4085c6:	mov    ecx,0x10
  4085cb:	mov    edx,0x80
  4085d0:	push   r13
  4085d2:	push   r12
  4085d4:	mov    r12,rdi
  4085d7:	push   rbp
  4085d8:	push   rbx
  4085d9:	mov    rbx,rsi
  4085dc:	sub    rsp,0x90
  4085e3:	mov    rax,QWORD PTR fs:0x28
  4085ec:	mov    QWORD PTR [rsp+0x88],rax
  4085f4:	xor    eax,eax
  4085f6:	mov    rdi,rsp
  4085f9:	mov    rbp,rsp
  4085fc:	mov    rsi,rbp
  4085ff:	rep stos QWORD PTR es:[rdi],rax
  408602:	mov    BYTE PTR [rdi],0x0
  408605:	mov    rdi,r12
  408608:	call   402710 <rb_read@plt>
  40860d:	test   rax,rax
  408610:	js     4087b0 <memcpy@plt+0x5dc0>
  408616:	je     4087c0 <memcpy@plt+0x5dd0>
  40861c:	mov    esi,0x3a
  408621:	mov    rdi,rbp
  408624:	call   402800 <strchr@plt>
  408629:	test   rax,rax
  40862c:	je     408778 <memcpy@plt+0x5d88>
  408632:	mov    BYTE PTR [rax],0x0
  408635:	lea    r13,[rax+0x1]
  408639:	mov    esi,0x3a
  40863e:	mov    rdi,r13
  408641:	call   402800 <strchr@plt>
  408646:	mov    r14,rax
  408649:	test   rax,rax
  40864c:	je     408778 <memcpy@plt+0x5d88>
  408652:	mov    BYTE PTR [rax],0x0
  408655:	mov    esi,0x2c
  40865a:	mov    rdi,rbp
  40865d:	call   402800 <strchr@plt>
  408662:	mov    r12,rax
  408665:	test   rax,rax
  408668:	je     408778 <memcpy@plt+0x5d88>
  40866e:	mov    BYTE PTR [rax],0x0
  408671:	xor    esi,esi
  408673:	mov    edx,0xa
  408678:	mov    rdi,rbp
  40867b:	call   4027d0 <strtol@plt>
  408680:	test   eax,eax
  408682:	je     408778 <memcpy@plt+0x5d88>
  408688:	xor    esi,esi
  40868a:	lea    rdi,[r12+0x1]
  40868f:	mov    edx,0xa
  408694:	call   4027d0 <strtol@plt>
  408699:	test   eax,eax
  40869b:	je     408778 <memcpy@plt+0x5d88>
  4086a1:	lea    rsi,[rip+0x3509]        # 40bbb1 <memcpy@plt+0x91c1>
  4086a8:	mov    rdi,r13
  4086ab:	call   402790 <strstr@plt>
  4086b0:	test   rax,rax
  4086b3:	je     408778 <memcpy@plt+0x5d88>
  4086b9:	lea    rdi,[r14+0x1]
  4086bd:	mov    esi,0x3a
  4086c2:	call   402800 <strchr@plt>
  4086c7:	test   rax,rax
  4086ca:	je     408778 <memcpy@plt+0x5d88>
  4086d0:	mov    rdx,rax
  4086d3:	mov    BYTE PTR [rax],0x0
  4086d6:	inc    rdx
  4086d9:	je     408778 <memcpy@plt+0x5d88>
  4086df:	movzx  eax,BYTE PTR [rax+0x1]
  4086e3:	lea    rdi,[rbx+0x1b8]
  4086ea:	mov    ecx,eax
  4086ec:	and    ecx,0xffffffdf
  4086ef:	cmp    cl,0x5e
  4086f2:	jne    408708 <memcpy@plt+0x5d18>
  4086f4:	nop    DWORD PTR [rax+0x0]
  4086f8:	inc    rdx
  4086fb:	movzx  eax,BYTE PTR [rdx]
  4086fe:	mov    ecx,eax
  408700:	and    ecx,0xffffffdf
  408703:	cmp    cl,0x5e
  408706:	je     4086f8 <memcpy@plt+0x5d08>
  408708:	test   al,0xbf
  40870a:	je     4087f0 <memcpy@plt+0x5e00>
  408710:	cmp    al,0xd
  408712:	je     4087f0 <memcpy@plt+0x5e00>
  408718:	cmp    al,0xa
  40871a:	je     4087f0 <memcpy@plt+0x5e00>
  408720:	mov    esi,0xa
  408725:	movabs r8,0x800000004000001
  40872f:	jmp    408765 <memcpy@plt+0x5d75>
  408731:	nop    DWORD PTR [rax+0x0]
  408738:	mov    BYTE PTR [rdi],al
  40873a:	dec    esi
  40873c:	inc    rdi
  40873f:	inc    rdx
  408742:	movzx  eax,BYTE PTR [rdx]
  408745:	test   al,0xbf
  408747:	je     4087f0 <memcpy@plt+0x5e00>
  40874d:	test   esi,esi
  40874f:	je     4087f0 <memcpy@plt+0x5e00>
  408755:	cmp    al,0xd
  408757:	je     4087f0 <memcpy@plt+0x5e00>
  40875d:	cmp    al,0xa
  40875f:	je     4087f0 <memcpy@plt+0x5e00>
  408765:	lea    ecx,[rax-0x20]
  408768:	cmp    cl,0x3b
  40876b:	ja     408738 <memcpy@plt+0x5d48>
  40876d:	bt     r8,rcx
  408771:	jb     40873f <memcpy@plt+0x5d4f>
  408773:	jmp    408738 <memcpy@plt+0x5d48>
  408775:	nop    DWORD PTR [rax]
  408778:	mov    esi,0x3
  40877d:	mov    rdi,rbx
  408780:	call   4084b0 <memcpy@plt+0x5ac0>
  408785:	mov    rax,QWORD PTR [rsp+0x88]
  40878d:	xor    rax,QWORD PTR fs:0x28
  408796:	jne    40887d <memcpy@plt+0x5e8d>
  40879c:	add    rsp,0x90
  4087a3:	pop    rbx
  4087a4:	pop    rbp
  4087a5:	pop    r12
  4087a7:	pop    r13
  4087a9:	pop    r14
  4087ab:	ret    
  4087ac:	nop    DWORD PTR [rax+0x0]
  4087b0:	call   402840 <__errno_location@plt>
  4087b5:	mov    edi,DWORD PTR [rax]
  4087b7:	call   402550 <rb_ignore_errno@plt>
  4087bc:	test   eax,eax
  4087be:	jne    4087d0 <memcpy@plt+0x5de0>
  4087c0:	mov    esi,0x2
  4087c5:	jmp    40877d <memcpy@plt+0x5d8d>
  4087c7:	nop    WORD PTR [rax+rax*1+0x0]
  4087d0:	mov    rcx,rbx
  4087d3:	lea    rdx,[rip+0xfffffffffffffde6]        # 4085c0 <memcpy@plt+0x5bd0>
  4087da:	mov    esi,0x1
  4087df:	mov    rdi,r12
  4087e2:	call   402590 <rb_setselect@plt>
  4087e7:	jmp    408785 <memcpy@plt+0x5d95>
  4087e9:	nop    DWORD PTR [rax+0x0]
  4087f0:	mov    BYTE PTR [rdi],0x0
  4087f3:	mov    rbp,0x410be0
  4087fa:	mov    eax,DWORD PTR [rbp+0x18]
  4087fd:	shl    rax,0x5
  408801:	add    rax,QWORD PTR [rbx+0x1d0]
  408808:	mov    r12,QWORD PTR [rax+0x10]
  40880c:	mov    rdi,QWORD PTR [r12]
  408810:	test   rdi,rdi
  408813:	je     40881a <memcpy@plt+0x5e2a>
  408815:	call   4027c0 <rb_close@plt>
  40881a:	mov    rdi,r12
  40881d:	call   4026e0 <free@plt>
  408822:	mov    eax,DWORD PTR [rbp+0x18]
  408825:	mov    rdx,QWORD PTR [rbx+0x1d0]
  40882c:	shl    rax,0x5
  408830:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408839:	mov    edi,DWORD PTR [rbx]
  40883b:	lea    rsi,[rip+0x3376]        # 40bbb8 <memcpy@plt+0x91c8>
  408842:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408849:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408852:	xor    eax,eax
  408854:	call   403610 <memcpy@plt+0xc20>
  408859:	mov    esi,DWORD PTR [rbp+0x18]
  40885c:	mov    rdi,rbx
  40885f:	call   404370 <memcpy@plt+0x1980>
  408864:	dec    DWORD PTR [rbx+0x1cc]
  40886a:	jne    408785 <memcpy@plt+0x5d95>
  408870:	mov    rdi,rbx
  408873:	call   403e40 <memcpy@plt+0x1450>
  408878:	jmp    408785 <memcpy@plt+0x5d95>
  40887d:	call   402880 <__stack_chk_fail@plt>
  408882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40888d:	nop    DWORD PTR [rax]
  408890:	endbr64 
  408894:	push   rbp
  408895:	mov    rbp,rsp
  408898:	push   r14
  40889a:	mov    r14,rdx
  40889d:	push   r13
  40889f:	push   r12
  4088a1:	push   rbx
  4088a2:	sub    rsp,0x30
  4088a6:	mov    rax,QWORD PTR fs:0x28
  4088af:	mov    QWORD PTR [rbp-0x28],rax
  4088b3:	xor    eax,eax
  4088b5:	test   esi,esi
  4088b7:	jne    40895c <memcpy@plt+0x5f6c>
  4088bd:	mov    rax,0x410be0
  4088c4:	sub    rsp,0x8
  4088c8:	mov    eax,DWORD PTR [rax+0x18]
  4088cb:	lea    r12,[rbp-0x50]
  4088cf:	shl    rax,0x5
  4088d3:	add    rax,QWORD PTR [rdx+0x1d0]
  4088da:	mov    r13,QWORD PTR [rax+0x10]
  4088de:	movzx  eax,WORD PTR [rdx+0x3e]
  4088e2:	movzx  r9d,WORD PTR [rdx+0xf6]
  4088ea:	push   rax
  4088eb:	lea    r8,[rip+0x32dd]        # 40bbcf <memcpy@plt+0x91df>
  4088f2:	mov    ecx,0x20
  4088f7:	mov    edx,0x1
  4088fc:	mov    esi,0x20
  408901:	mov    rdi,r12
  408904:	xor    eax,eax
  408906:	call   402970 <__snprintf_chk@plt>
  40890b:	mov    rbx,r12
  40890e:	mov    edx,DWORD PTR [rbx]
  408910:	add    rbx,0x4
  408914:	lea    eax,[rdx-0x1010101]
  40891a:	andn   eax,edx,eax
  40891f:	and    eax,0x80808080
  408924:	je     40890e <memcpy@plt+0x5f1e>
  408926:	mov    edx,eax
  408928:	shr    edx,0x10
  40892b:	test   eax,0x8080
  408930:	cmove  eax,edx
  408933:	lea    rdx,[rbx+0x2]
  408937:	cmove  rbx,rdx
  40893b:	mov    edi,eax
  40893d:	add    dil,al
  408940:	sbb    rbx,0x3
  408944:	sub    rbx,r12
  408947:	mov    rdi,QWORD PTR [r13+0x0]
  40894b:	mov    edx,ebx
  40894d:	mov    rsi,r12
  408950:	call   402670 <rb_write@plt>
  408955:	pop    rdx
  408956:	pop    rcx
  408957:	cmp    rax,rbx
  40895a:	je     408988 <memcpy@plt+0x5f98>
  40895c:	mov    esi,0x2
  408961:	mov    rdi,r14
  408964:	call   4084b0 <memcpy@plt+0x5ac0>
  408969:	mov    rax,QWORD PTR [rbp-0x28]
  40896d:	xor    rax,QWORD PTR fs:0x28
  408976:	jne    408996 <memcpy@plt+0x5fa6>
  408978:	lea    rsp,[rbp-0x20]
  40897c:	pop    rbx
  40897d:	pop    r12
  40897f:	pop    r13
  408981:	pop    r14
  408983:	pop    rbp
  408984:	ret    
  408985:	nop    DWORD PTR [rax]
  408988:	mov    rdi,QWORD PTR [r13+0x0]
  40898c:	mov    rsi,r14
  40898f:	call   4085c0 <memcpy@plt+0x5bd0>
  408994:	jmp    408969 <memcpy@plt+0x5f79>
  408996:	call   402880 <__stack_chk_fail@plt>
  40899b:	nop    DWORD PTR [rax+rax*1+0x0]
  4089a0:	endbr64 
  4089a4:	push   rbp
  4089a5:	push   rbx
  4089a6:	sub    rsp,0x28
  4089aa:	mov    rbx,0x4151f0
  4089b1:	mov    rbp,rsp
  4089b4:	mov    rdi,QWORD PTR [rbx]
  4089b7:	mov    rsi,rbp
  4089ba:	mov    rax,QWORD PTR fs:0x28
  4089c3:	mov    QWORD PTR [rsp+0x18],rax
  4089c8:	xor    eax,eax
  4089ca:	call   402730 <rb_dictionary_foreach_start@plt>
  4089cf:	jmp    408a0c <memcpy@plt+0x601c>
  4089d1:	nop    DWORD PTR [rax+0x0]
  4089d8:	mov    rdx,0x410be0
  4089df:	mov    edx,DWORD PTR [rdx+0x18]
  4089e2:	shl    rdx,0x5
  4089e6:	add    rdx,QWORD PTR [rax+0x1d0]
  4089ed:	cmp    QWORD PTR [rdx+0x10],0x0
  4089f2:	je     408a01 <memcpy@plt+0x6011>
  4089f4:	mov    esi,0x2
  4089f9:	mov    rdi,rax
  4089fc:	call   4084b0 <memcpy@plt+0x5ac0>
  408a01:	mov    rdi,QWORD PTR [rbx]
  408a04:	mov    rsi,rbp
  408a07:	call   4026c0 <rb_dictionary_foreach_next@plt>
  408a0c:	mov    rdi,QWORD PTR [rbx]
  408a0f:	mov    rsi,rbp
  408a12:	call   402610 <rb_dictionary_foreach_cur@plt>
  408a17:	test   rax,rax
  408a1a:	jne    4089d8 <memcpy@plt+0x5fe8>
  408a1c:	mov    rax,QWORD PTR [rsp+0x18]
  408a21:	xor    rax,QWORD PTR fs:0x28
  408a2a:	jne    408a33 <memcpy@plt+0x6043>
  408a2c:	add    rsp,0x28
  408a30:	pop    rbx
  408a31:	pop    rbp
  408a32:	ret    
  408a33:	call   402880 <__stack_chk_fail@plt>
  408a38:	nop    DWORD PTR [rax+rax*1+0x0]
  408a40:	endbr64 
  408a44:	push   r14
  408a46:	mov    esi,0x8
  408a4b:	push   r13
  408a4d:	push   r12
  408a4f:	push   rbp
  408a50:	push   rbx
  408a51:	mov    rbx,rdi
  408a54:	mov    edi,0x1
  408a59:	sub    rsp,0x110
  408a60:	mov    rax,QWORD PTR fs:0x28
  408a69:	mov    QWORD PTR [rsp+0x108],rax
  408a71:	xor    eax,eax
  408a73:	call   4028f0 <calloc@plt>
  408a78:	test   rax,rax
  408a7b:	je     408c90 <memcpy@plt+0x62a0>
  408a81:	cmp    BYTE PTR [rip+0x8150],0x0        # 410bd8 <memcpy@plt+0xe1e8>
  408a88:	mov    rbp,rax
  408a8b:	jne    408ae8 <memcpy@plt+0x60f8>
  408a8d:	mov    rdi,rax
  408a90:	call   4026e0 <free@plt>
  408a95:	mov    edi,DWORD PTR [rbx]
  408a97:	lea    rsi,[rip+0x3092]        # 40bb30 <memcpy@plt+0x9140>
  408a9e:	xor    eax,eax
  408aa0:	call   403610 <memcpy@plt+0xc20>
  408aa5:	mov    rax,0x410be0
  408aac:	mov    rdi,rbx
  408aaf:	mov    esi,DWORD PTR [rax+0x18]
  408ab2:	call   404370 <memcpy@plt+0x1980>
  408ab7:	mov    rcx,QWORD PTR [rsp+0x108]
  408abf:	xor    rcx,QWORD PTR fs:0x28
  408ac8:	mov    eax,0x1
  408acd:	jne    408ccc <memcpy@plt+0x62dc>
  408ad3:	add    rsp,0x110
  408ada:	pop    rbx
  408adb:	pop    rbp
  408adc:	pop    r12
  408ade:	pop    r13
  408ae0:	pop    r14
  408ae2:	ret    
  408ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  408ae8:	inc    DWORD PTR [rbx+0x1cc]
  408aee:	mov    edi,DWORD PTR [rbx]
  408af0:	lea    rsi,[rip+0x30e2]        # 40bbd9 <memcpy@plt+0x91e9>
  408af7:	xor    eax,eax
  408af9:	movzx  r14d,WORD PTR [rbx+0xf8]
  408b01:	call   403610 <memcpy@plt+0xc20>
  408b06:	mov    rax,0x410be0
  408b0d:	movsxd r13,DWORD PTR [rip+0x80c8]        # 410bdc <memcpy@plt+0xe1ec>
  408b14:	mov    r12d,DWORD PTR [rax+0x18]
  408b18:	mov    rax,QWORD PTR [rbx+0x1d0]
  408b1f:	shl    r12,0x5
  408b23:	mov    QWORD PTR [rax+r12*1+0x10],rbp
  408b28:	call   402760 <rb_current_time@plt>
  408b2d:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408b34:	add    r13,rax
  408b37:	mov    QWORD PTR [rdx+r12*1+0x8],r13
  408b3c:	mov    edx,DWORD PTR [rbx+0x4]
  408b3f:	lea    rcx,[rip+0x2f38]        # 40ba7e <memcpy@plt+0x908e>
  408b46:	mov    esi,0x1
  408b4b:	movzx  edi,r14w
  408b4f:	call   4025e0 <rb_socket@plt>
  408b54:	mov    QWORD PTR [rbp+0x0],rax
  408b58:	test   rax,rax
  408b5b:	je     408c98 <memcpy@plt+0x62a8>
  408b61:	vmovdqu xmm0,XMMWORD PTR [rbx+0x40]
  408b66:	vmovdqu xmm1,XMMWORD PTR [rbx+0x50]
  408b6b:	vmovdqu xmm2,XMMWORD PTR [rbx+0x60]
  408b70:	vmovdqu xmm3,XMMWORD PTR [rbx+0x70]
  408b75:	vmovdqu xmm4,XMMWORD PTR [rbx+0x80]
  408b7d:	vmovdqu xmm5,XMMWORD PTR [rbx+0x90]
  408b85:	vmovdqu xmm6,XMMWORD PTR [rbx+0xa0]
  408b8d:	vmovdqu xmm7,XMMWORD PTR [rbx+0xb0]
  408b95:	vmovaps XMMWORD PTR [rsp],xmm0
  408b9a:	vmovaps XMMWORD PTR [rsp+0x10],xmm1
  408ba0:	vmovaps XMMWORD PTR [rsp+0x20],xmm2
  408ba6:	vmovaps XMMWORD PTR [rsp+0x30],xmm3
  408bac:	vmovaps XMMWORD PTR [rsp+0x40],xmm4
  408bb2:	vmovaps XMMWORD PTR [rsp+0x50],xmm5
  408bb8:	vmovaps XMMWORD PTR [rsp+0x60],xmm6
  408bbe:	vmovaps XMMWORD PTR [rsp+0x70],xmm7
  408bc4:	vmovdqu xmm0,XMMWORD PTR [rbx+0xf8]
  408bcc:	vmovdqu xmm1,XMMWORD PTR [rbx+0x108]
  408bd4:	vmovdqu xmm2,XMMWORD PTR [rbx+0x118]
  408bdc:	vmovdqu xmm3,XMMWORD PTR [rbx+0x128]
  408be4:	vmovdqu xmm4,XMMWORD PTR [rbx+0x138]
  408bec:	vmovdqu xmm5,XMMWORD PTR [rbx+0x148]
  408bf4:	vmovdqu xmm6,XMMWORD PTR [rbx+0x158]
  408bfc:	vmovdqu xmm7,XMMWORD PTR [rbx+0x168]
  408c04:	xor    edx,edx
  408c06:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  408c0f:	vmovaps XMMWORD PTR [rsp+0x90],xmm1
  408c18:	vmovaps XMMWORD PTR [rsp+0xa0],xmm2
  408c21:	vmovaps XMMWORD PTR [rsp+0xb0],xmm3
  408c2a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm4
  408c33:	vmovaps XMMWORD PTR [rsp+0xd0],xmm5
  408c3c:	vmovaps XMMWORD PTR [rsp+0xe0],xmm6
  408c45:	vmovaps XMMWORD PTR [rsp+0xf0],xmm7
  408c4e:	mov    ecx,0x7100
  408c53:	mov    WORD PTR [rsp+0x2],dx
  408c58:	mov    r9d,DWORD PTR [rip+0x7f7d]        # 410bdc <memcpy@plt+0xe1ec>
  408c5f:	mov    WORD PTR [rsp+0x82],cx
  408c67:	mov    rdx,rsp
  408c6a:	lea    rsi,[rsp+0x80]
  408c72:	mov    r8,rbx
  408c75:	lea    rcx,[rip+0xfffffffffffffc14]        # 408890 <memcpy@plt+0x5ea0>
  408c7c:	mov    rdi,rax
  408c7f:	call   402570 <rb_connect_tcp@plt>
  408c84:	jmp    408ab7 <memcpy@plt+0x60c7>
  408c89:	nop    DWORD PTR [rax+0x0]
  408c90:	call   402830 <rb_outofmemory@plt>
  408c95:	nop    DWORD PTR [rax]
  408c98:	call   402840 <__errno_location@plt>
  408c9d:	mov    edi,DWORD PTR [rax]
  408c9f:	call   402780 <strerror@plt>
  408ca4:	mov    rdx,rax
  408ca7:	lea    rsi,[rip+0x2eaa]        # 40bb58 <memcpy@plt+0x9168>
  408cae:	mov    edi,0x44
  408cb3:	xor    eax,eax
  408cb5:	call   403730 <memcpy@plt+0xd40>
  408cba:	mov    esi,0x2
  408cbf:	mov    rdi,rbx
  408cc2:	call   4084b0 <memcpy@plt+0x5ac0>
  408cc7:	jmp    408ab7 <memcpy@plt+0x60c7>
  408ccc:	call   402880 <__stack_chk_fail@plt>
  408cd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ce0:	endbr64 
  408ce4:	sub    rsp,0x8
  408ce8:	mov    rax,rdx
  408ceb:	mov    rdi,QWORD PTR [rax]
  408cee:	xor    esi,esi
  408cf0:	mov    edx,0xa
  408cf5:	call   4027d0 <strtol@plt>
  408cfa:	test   eax,eax
  408cfc:	js     408d09 <memcpy@plt+0x6319>
  408cfe:	mov    DWORD PTR [rip+0x7fa4],eax        # 410ca8 <memcpy@plt+0xe2b8>
  408d04:	add    rsp,0x8
  408d08:	ret    
  408d09:	mov    edx,eax
  408d0b:	mov    edi,0x43
  408d10:	lea    rsi,[rip+0x2f09]        # 40bc20 <memcpy@plt+0x9230>
  408d17:	xor    eax,eax
  408d19:	call   403730 <memcpy@plt+0xd40>
  408d1e:	mov    edi,0x3
  408d23:	call   4025b0 <exit@plt>
  408d28:	nop    DWORD PTR [rax+rax*1+0x0]
  408d30:	push   r13
  408d32:	mov    edx,0x40
  408d37:	push   r12
  408d39:	push   rbp
  408d3a:	mov    ebp,esi
  408d3c:	lea    rsi,[rip+0x25b0]        # 40b2f3 <memcpy@plt+0x8903>
  408d43:	push   rbx
  408d44:	mov    rbx,rdi
  408d47:	add    rdi,0x178
  408d4e:	sub    rsp,0x8
  408d52:	mov    r12,0x410cc0
  408d59:	mov    eax,DWORD PTR [r12+0x18]
  408d5e:	shl    rax,0x5
  408d62:	add    rax,QWORD PTR [rdi+0x58]
  408d66:	mov    r13,QWORD PTR [rax+0x10]
  408d6a:	call   4026b0 <rb_strlcpy@plt>
  408d6f:	lea    rax,[rip+0x605a]        # 40edd0 <memcpy@plt+0xc3e0>
  408d76:	mov    rsi,QWORD PTR [rax+rbp*8]
  408d7a:	mov    edi,DWORD PTR [rbx]
  408d7c:	xor    eax,eax
  408d7e:	call   403610 <memcpy@plt+0xc20>
  408d83:	mov    rdi,QWORD PTR [r13+0x0]
  408d87:	call   403350 <memcpy@plt+0x960>
  408d8c:	mov    rdi,r13
  408d8f:	call   4026e0 <free@plt>
  408d94:	mov    eax,DWORD PTR [r12+0x18]
  408d99:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408da0:	mov    rsi,rax
  408da3:	shl    rax,0x5
  408da7:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408db0:	mov    rdi,rbx
  408db3:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408dba:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408dc3:	call   404370 <memcpy@plt+0x1980>
  408dc8:	dec    DWORD PTR [rbx+0x1cc]
  408dce:	je     408de0 <memcpy@plt+0x63f0>
  408dd0:	add    rsp,0x8
  408dd4:	pop    rbx
  408dd5:	pop    rbp
  408dd6:	pop    r12
  408dd8:	pop    r13
  408dda:	ret    
  408ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  408de0:	add    rsp,0x8
  408de4:	mov    rdi,rbx
  408de7:	pop    rbx
  408de8:	pop    rbp
  408de9:	pop    r12
  408deb:	pop    r13
  408ded:	jmp    403e40 <memcpy@plt+0x1450>
  408df2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408dfd:	nop    DWORD PTR [rax]
  408e00:	endbr64 
  408e04:	mov    rax,0x410cc0
  408e0b:	mov    eax,DWORD PTR [rax+0x18]
  408e0e:	shl    rax,0x5
  408e12:	add    rax,QWORD PTR [rdi+0x1d0]
  408e19:	cmp    QWORD PTR [rax+0x10],0x0
  408e1e:	je     408e30 <memcpy@plt+0x6440>
  408e20:	mov    esi,0x1
  408e25:	jmp    408d30 <memcpy@plt+0x6340>
  408e2a:	nop    WORD PTR [rax+rax*1+0x0]
  408e30:	ret    
  408e31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408e3c:	nop    DWORD PTR [rax+0x0]
  408e40:	endbr64 
  408e44:	push   rbp
  408e45:	push   rbx
  408e46:	sub    rsp,0x28
  408e4a:	mov    rbx,0x4151f0
  408e51:	mov    rbp,rsp
  408e54:	mov    rdi,QWORD PTR [rbx]
  408e57:	mov    rsi,rbp
  408e5a:	mov    rax,QWORD PTR fs:0x28
  408e63:	mov    QWORD PTR [rsp+0x18],rax
  408e68:	xor    eax,eax
  408e6a:	call   402730 <rb_dictionary_foreach_start@plt>
  408e6f:	jmp    408eac <memcpy@plt+0x64bc>
  408e71:	nop    DWORD PTR [rax+0x0]
  408e78:	mov    rdx,0x410cc0
  408e7f:	mov    edx,DWORD PTR [rdx+0x18]
  408e82:	shl    rdx,0x5
  408e86:	add    rdx,QWORD PTR [rax+0x1d0]
  408e8d:	cmp    QWORD PTR [rdx+0x10],0x0
  408e92:	je     408ea1 <memcpy@plt+0x64b1>
  408e94:	mov    esi,0x1
  408e99:	mov    rdi,rax
  408e9c:	call   408d30 <memcpy@plt+0x6340>
  408ea1:	mov    rdi,QWORD PTR [rbx]
  408ea4:	mov    rsi,rbp
  408ea7:	call   4026c0 <rb_dictionary_foreach_next@plt>
  408eac:	mov    rdi,QWORD PTR [rbx]
  408eaf:	mov    rsi,rbp
  408eb2:	call   402610 <rb_dictionary_foreach_cur@plt>
  408eb7:	test   rax,rax
  408eba:	jne    408e78 <memcpy@plt+0x6488>
  408ebc:	mov    rax,QWORD PTR [rsp+0x18]
  408ec1:	xor    rax,QWORD PTR fs:0x28
  408eca:	jne    408ed3 <memcpy@plt+0x64e3>
  408ecc:	add    rsp,0x28
  408ed0:	pop    rbx
  408ed1:	pop    rbp
  408ed2:	ret    
  408ed3:	call   402880 <__stack_chk_fail@plt>
  408ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ee0:	endbr64 
  408ee4:	test   rdi,rdi
  408ee7:	je     408fd0 <memcpy@plt+0x65e0>
  408eed:	cmp    sil,0x1
  408ef1:	jne    408fd0 <memcpy@plt+0x65e0>
  408ef7:	push   r13
  408ef9:	push   r12
  408efb:	push   rbp
  408efc:	mov    rbp,rdi
  408eff:	push   rbx
  408f00:	mov    rbx,rcx
  408f03:	sub    rsp,0x8
  408f07:	call   4026f0 <strlen@plt>
  408f0c:	cmp    rax,0x3f
  408f10:	ja     408fb0 <memcpy@plt+0x65c0>
  408f16:	lea    r13,[rbx+0x178]
  408f1d:	mov    rsi,rbp
  408f20:	mov    edx,0x40
  408f25:	mov    rdi,r13
  408f28:	call   4026b0 <rb_strlcpy@plt>
  408f2d:	mov    rbp,0x410cc0
  408f34:	mov    edi,DWORD PTR [rbx]
  408f36:	mov    eax,DWORD PTR [rbp+0x18]
  408f39:	mov    rdx,r13
  408f3c:	shl    rax,0x5
  408f40:	add    rax,QWORD PTR [rbx+0x1d0]
  408f47:	mov    r12,QWORD PTR [rax+0x10]
  408f4b:	lea    rsi,[rip+0x2d6f]        # 40bcc1 <memcpy@plt+0x92d1>
  408f52:	xor    eax,eax
  408f54:	call   403610 <memcpy@plt+0xc20>
  408f59:	mov    rdi,QWORD PTR [r12]
  408f5d:	call   403350 <memcpy@plt+0x960>
  408f62:	mov    rdi,r12
  408f65:	call   4026e0 <free@plt>
  408f6a:	mov    eax,DWORD PTR [rbp+0x18]
  408f6d:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408f74:	mov    rsi,rax
  408f77:	shl    rax,0x5
  408f7b:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408f84:	mov    rdi,rbx
  408f87:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408f8e:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408f97:	call   404370 <memcpy@plt+0x1980>
  408f9c:	dec    DWORD PTR [rbx+0x1cc]
  408fa2:	je     408fe0 <memcpy@plt+0x65f0>
  408fa4:	add    rsp,0x8
  408fa8:	pop    rbx
  408fa9:	pop    rbp
  408faa:	pop    r12
  408fac:	pop    r13
  408fae:	ret    
  408faf:	nop
  408fb0:	add    rsp,0x8
  408fb4:	mov    rdi,rbx
  408fb7:	pop    rbx
  408fb8:	pop    rbp
  408fb9:	pop    r12
  408fbb:	mov    esi,0x2
  408fc0:	pop    r13
  408fc2:	jmp    408d30 <memcpy@plt+0x6340>
  408fc7:	nop    WORD PTR [rax+rax*1+0x0]
  408fd0:	mov    esi,0x1
  408fd5:	mov    rdi,rcx
  408fd8:	jmp    408d30 <memcpy@plt+0x6340>
  408fdd:	nop    DWORD PTR [rax]
  408fe0:	add    rsp,0x8
  408fe4:	mov    rdi,rbx
  408fe7:	pop    rbx
  408fe8:	pop    rbp
  408fe9:	pop    r12
  408feb:	pop    r13
  408fed:	jmp    403e40 <memcpy@plt+0x1450>
  408ff2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408ffd:	nop    DWORD PTR [rax]
  409000:	endbr64 
  409004:	push   r13
  409006:	mov    esi,0x8
  40900b:	push   r12
  40900d:	push   rbp
  40900e:	push   rbx
  40900f:	mov    rbx,rdi
  409012:	mov    edi,0x1
  409017:	sub    rsp,0x8
  40901b:	call   4028f0 <calloc@plt>
  409020:	test   rax,rax
  409023:	je     4090a0 <memcpy@plt+0x66b0>
  409025:	mov    r12,rax
  409028:	mov    rax,0x410cc0
  40902f:	inc    DWORD PTR [rbx+0x1cc]
  409035:	mov    ebp,DWORD PTR [rax+0x18]
  409038:	mov    rax,QWORD PTR [rbx+0x1d0]
  40903f:	shl    rbp,0x5
  409043:	mov    QWORD PTR [rax+rbp*1+0x10],r12
  409048:	movsxd r13,DWORD PTR [rip+0x7c59]        # 410ca8 <memcpy@plt+0xe2b8>
  40904f:	call   402760 <rb_current_time@plt>
  409054:	mov    rdx,QWORD PTR [rbx+0x1d0]
  40905b:	add    r13,rax
  40905e:	mov    QWORD PTR [rdx+rbp*1+0x8],r13
  409063:	lea    rdi,[rbx+0xc0]
  40906a:	mov    rdx,rbx
  40906d:	lea    rsi,[rip+0xfffffffffffffe6c]        # 408ee0 <memcpy@plt+0x64f0>
  409074:	call   403270 <memcpy@plt+0x880>
  409079:	mov    QWORD PTR [r12],rax
  40907d:	mov    edi,DWORD PTR [rbx]
  40907f:	xor    eax,eax
  409081:	lea    rsi,[rip+0x2bc0]        # 40bc48 <memcpy@plt+0x9258>
  409088:	call   403610 <memcpy@plt+0xc20>
  40908d:	add    rsp,0x8
  409091:	pop    rbx
  409092:	pop    rbp
  409093:	pop    r12
  409095:	mov    eax,0x1
  40909a:	pop    r13
  40909c:	ret    
  40909d:	nop    DWORD PTR [rax]
  4090a0:	call   402830 <rb_outofmemory@plt>
  4090a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090af:	nop
  4090b0:	endbr64 
  4090b4:	push   r14
  4090b6:	push   r13
  4090b8:	mov    r13,0x410d80
  4090bf:	push   r12
  4090c1:	push   rbp
  4090c2:	push   rbx
  4090c3:	mov    eax,DWORD PTR [r13+0x18]
  4090c7:	shl    rax,0x5
  4090cb:	add    rax,QWORD PTR [rdi+0x1d0]
  4090d2:	mov    r14,QWORD PTR [rax+0x10]
  4090d6:	test   r14,r14
  4090d9:	je     40916f <memcpy@plt+0x677f>
  4090df:	mov    r12,rdi
  4090e2:	mov    edi,DWORD PTR [rdi]
  4090e4:	xor    eax,eax
  4090e6:	lea    rsi,[rip+0x2c03]        # 40bcf0 <memcpy@plt+0x9300>
  4090ed:	call   403610 <memcpy@plt+0xc20>
  4090f2:	mov    rax,QWORD PTR [r14]
  4090f5:	test   rax,rax
  4090f8:	je     409128 <memcpy@plt+0x6738>
  4090fa:	mov    rbx,QWORD PTR [rax+0x10]
  4090fe:	xchg   ax,ax
  409100:	mov    rbp,QWORD PTR [rax]
  409103:	mov    rdi,QWORD PTR [rbp+0x8]
  409107:	call   4027c0 <rb_close@plt>
  40910c:	mov    rdi,rbp
  40910f:	call   4026e0 <free@plt>
  409114:	test   rbx,rbx
  409117:	je     409128 <memcpy@plt+0x6738>
  409119:	mov    rax,rbx
  40911c:	mov    rbx,QWORD PTR [rbx+0x10]
  409120:	jmp    409100 <memcpy@plt+0x6710>
  409122:	nop    WORD PTR [rax+rax*1+0x0]
  409128:	mov    rdi,r14
  40912b:	call   4026e0 <free@plt>
  409130:	mov    eax,DWORD PTR [r13+0x18]
  409134:	mov    rdx,QWORD PTR [r12+0x1d0]
  40913c:	mov    rsi,rax
  40913f:	shl    rax,0x5
  409143:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  40914c:	mov    rdi,r12
  40914f:	mov    rdx,QWORD PTR [r12+0x1d0]
  409157:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  409160:	call   404370 <memcpy@plt+0x1980>
  409165:	dec    DWORD PTR [r12+0x1cc]
  40916d:	je     409180 <memcpy@plt+0x6790>
  40916f:	pop    rbx
  409170:	pop    rbp
  409171:	pop    r12
  409173:	pop    r13
  409175:	pop    r14
  409177:	ret    
  409178:	nop    DWORD PTR [rax+rax*1+0x0]
  409180:	pop    rbx
  409181:	pop    rbp
  409182:	mov    rdi,r12
  409185:	pop    r12
  409187:	pop    r13
  409189:	pop    r14
  40918b:	jmp    403e40 <memcpy@plt+0x1450>
  409190:	endbr64 
  409194:	push   rbp
  409195:	push   rbx
  409196:	sub    rsp,0x28
  40919a:	mov    rbx,0x4151f0
  4091a1:	mov    rbp,rsp
  4091a4:	mov    rdi,QWORD PTR [rbx]
  4091a7:	mov    rsi,rbp
  4091aa:	mov    rax,QWORD PTR fs:0x28
  4091b3:	mov    QWORD PTR [rsp+0x18],rax
  4091b8:	xor    eax,eax
  4091ba:	call   402730 <rb_dictionary_foreach_start@plt>
  4091bf:	jmp    4091db <memcpy@plt+0x67eb>
  4091c1:	nop    DWORD PTR [rax+0x0]
  4091c8:	mov    rdi,rax
  4091cb:	call   4090b0 <memcpy@plt+0x66c0>
  4091d0:	mov    rdi,QWORD PTR [rbx]
  4091d3:	mov    rsi,rbp
  4091d6:	call   4026c0 <rb_dictionary_foreach_next@plt>
  4091db:	mov    rdi,QWORD PTR [rbx]
  4091de:	mov    rsi,rbp
  4091e1:	call   402610 <rb_dictionary_foreach_cur@plt>
  4091e6:	test   rax,rax
  4091e9:	jne    4091c8 <memcpy@plt+0x67d8>
  4091eb:	mov    rax,QWORD PTR [rsp+0x18]
  4091f0:	xor    rax,QWORD PTR fs:0x28
  4091f9:	jne    409202 <memcpy@plt+0x6812>
  4091fb:	add    rsp,0x28
  4091ff:	pop    rbx
  409200:	pop    rbp
  409201:	ret    
  409202:	call   402880 <__stack_chk_fail@plt>
  409207:	nop    WORD PTR [rax+rax*1+0x0]
  409210:	endbr64 
  409214:	sub    rsp,0x8
  409218:	mov    rax,rdx
  40921b:	mov    rdi,QWORD PTR [rax]
  40921e:	xor    esi,esi
  409220:	mov    edx,0xa
  409225:	call   4027d0 <strtol@plt>
  40922a:	test   eax,eax
  40922c:	js     409240 <memcpy@plt+0x6850>
  40922e:	mov    DWORD PTR [rip+0x7b3c],eax        # 410d70 <memcpy@plt+0xe380>
  409234:	add    rsp,0x8
  409238:	ret    
  409239:	nop    DWORD PTR [rax+0x0]
  409240:	mov    edx,eax
  409242:	lea    rsi,[rip+0x2ac7]        # 40bd10 <memcpy@plt+0x9320>
  409249:	mov    edi,0x43
  40924e:	xor    eax,eax
  409250:	add    rsp,0x8
  409254:	jmp    403730 <memcpy@plt+0xd40>
  409259:	nop    DWORD PTR [rax+0x0]
  409260:	endbr64 
  409264:	push   r12
  409266:	mov    r12,rdi
  409269:	push   rbp
  40926a:	push   rbx
  40926b:	sub    rsp,0xb0
  409272:	mov    rax,QWORD PTR fs:0x28
  40927b:	mov    QWORD PTR [rsp+0xa8],rax
  409283:	xor    eax,eax
  409285:	mov    DWORD PTR [rsp+0xc],0x80
  40928d:	test   esi,esi
  40928f:	jne    409368 <memcpy@plt+0x6978>
  409295:	test   r8,r8
  409298:	je     409368 <memcpy@plt+0x6978>
  40929e:	call   4025a0 <rb_get_fd@plt>
  4092a3:	mov    edi,eax
  4092a5:	lea    rdx,[rsp+0xc]
  4092aa:	lea    rsi,[rsp+0x20]
  4092af:	call   4027e0 <getsockname@plt>
  4092b4:	test   eax,eax
  4092b6:	jne    409368 <memcpy@plt+0x6978>
  4092bc:	mov    rbx,0x4151f0
  4092c3:	lea    rbp,[rsp+0x10]
  4092c8:	mov    rdi,QWORD PTR [rbx]
  4092cb:	mov    rsi,rbp
  4092ce:	call   402730 <rb_dictionary_foreach_start@plt>
  4092d3:	jmp    4092ef <memcpy@plt+0x68ff>
  4092d5:	nop    DWORD PTR [rax]
  4092d8:	mov    ecx,DWORD PTR [rax+0xfc]
  4092de:	cmp    DWORD PTR [rsp+0x24],ecx
  4092e2:	je     409349 <memcpy@plt+0x6959>
  4092e4:	mov    rdi,QWORD PTR [rbx]
  4092e7:	mov    rsi,rbp
  4092ea:	call   4026c0 <rb_dictionary_foreach_next@plt>
  4092ef:	mov    rdi,QWORD PTR [rbx]
  4092f2:	mov    rsi,rbp
  4092f5:	call   402610 <rb_dictionary_foreach_cur@plt>
  4092fa:	test   rax,rax
  4092fd:	je     409368 <memcpy@plt+0x6978>
  4092ff:	movzx  edx,WORD PTR [rsp+0x20]
  409304:	cmp    WORD PTR [rax+0xf8],dx
  40930b:	jne    4092e4 <memcpy@plt+0x68f4>
  40930d:	cmp    dx,0x2
  409311:	je     4092d8 <memcpy@plt+0x68e8>
  409313:	cmp    dx,0xa
  409317:	jne    40938f <memcpy@plt+0x699f>
  409319:	mov    ecx,DWORD PTR [rax+0x100]
  40931f:	cmp    DWORD PTR [rsp+0x28],ecx
  409323:	jne    4092e4 <memcpy@plt+0x68f4>
  409325:	mov    ecx,DWORD PTR [rax+0x104]
  40932b:	cmp    DWORD PTR [rsp+0x2c],ecx
  40932f:	jne    4092e4 <memcpy@plt+0x68f4>
  409331:	mov    ecx,DWORD PTR [rax+0x108]
  409337:	cmp    DWORD PTR [rsp+0x30],ecx
  40933b:	jne    4092e4 <memcpy@plt+0x68f4>
  40933d:	mov    ecx,DWORD PTR [rax+0x10c]
  409343:	cmp    DWORD PTR [rsp+0x34],ecx
  409347:	jne    4092e4 <memcpy@plt+0x68f4>
  409349:	mov    rcx,rax
  40934c:	lea    rdx,[rip+0x6d]        # 4093c0 <memcpy@plt+0x69d0>
  409353:	mov    esi,0x1
  409358:	mov    rdi,r12
  40935b:	call   402590 <rb_setselect@plt>
  409360:	jmp    409370 <memcpy@plt+0x6980>
  409362:	nop    WORD PTR [rax+rax*1+0x0]
  409368:	mov    rdi,r12
  40936b:	call   4027c0 <rb_close@plt>
  409370:	mov    rax,QWORD PTR [rsp+0xa8]
  409378:	xor    rax,QWORD PTR fs:0x28
  409381:	jne    4093ac <memcpy@plt+0x69bc>
  409383:	add    rsp,0xb0
  40938a:	pop    rbx
  40938b:	pop    rbp
  40938c:	pop    r12
  40938e:	ret    
  40938f:	mov    edi,0x43
  409394:	lea    rsi,[rip+0x299d]        # 40bd38 <memcpy@plt+0x9348>
  40939b:	xor    eax,eax
  40939d:	call   403730 <memcpy@plt+0xd40>
  4093a2:	mov    edi,0x3
  4093a7:	call   4025b0 <exit@plt>
  4093ac:	call   402880 <__stack_chk_fail@plt>
  4093b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4093bc:	nop    DWORD PTR [rax+0x0]
  4093c0:	endbr64 
  4093c4:	push   r15
  4093c6:	mov    edx,0x80
  4093cb:	push   r14
  4093cd:	mov    r14,rdi
  4093d0:	push   r13
  4093d2:	push   r12
  4093d4:	mov    r12,rsi
  4093d7:	push   rbp
  4093d8:	push   rbx
  4093d9:	sub    rsp,0x98
  4093e0:	mov    rax,QWORD PTR fs:0x28
  4093e9:	mov    QWORD PTR [rsp+0x88],rax
  4093f1:	xor    eax,eax
  4093f3:	mov    rax,0x410d80
  4093fa:	mov    rbp,rsp
  4093fd:	mov    eax,DWORD PTR [rax+0x18]
  409400:	shl    rax,0x5
  409404:	add    rax,QWORD PTR [rsi+0x1d0]
  40940b:	mov    rsi,rbp
  40940e:	mov    r15,QWORD PTR [rax+0x10]
  409412:	call   402710 <rb_read@plt>
  409417:	test   rax,rax
  40941a:	js     4094f8 <memcpy@plt+0x6b08>
  409420:	je     4094c6 <memcpy@plt+0x6ad6>
  409426:	mov    rbx,QWORD PTR [rip+0xbda3]        # 4151d0 <memcpy@plt+0x127e0>
  40942d:	test   rbx,rbx
  409430:	jne    409449 <memcpy@plt+0x6a59>
  409432:	jmp    4094c6 <memcpy@plt+0x6ad6>
  409437:	nop    WORD PTR [rax+rax*1+0x0]
  409440:	mov    rbx,QWORD PTR [rbx+0x10]
  409444:	test   rbx,rbx
  409447:	je     4094c6 <memcpy@plt+0x6ad6>
  409449:	mov    r13,QWORD PTR [rbx]
  40944c:	mov    rdi,r13
  40944f:	call   4026f0 <strlen@plt>
  409454:	mov    rdx,rax
  409457:	mov    rsi,rbp
  40945a:	mov    rdi,r13
  40945d:	call   402640 <strncmp@plt>
  409462:	test   eax,eax
  409464:	jne    409440 <memcpy@plt+0x6a50>
  409466:	mov    rax,QWORD PTR [r15]
  409469:	test   rax,rax
  40946c:	je     4094a0 <memcpy@plt+0x6ab0>
  40946e:	mov    rbx,QWORD PTR [rax+0x10]
  409472:	nop    WORD PTR [rax+rax*1+0x0]
  409478:	mov    r13,QWORD PTR [rax]
  40947b:	mov    rdi,QWORD PTR [r13+0x8]
  40947f:	call   4027c0 <rb_close@plt>
  409484:	mov    rdi,r13
  409487:	call   4026e0 <free@plt>
  40948c:	test   rbx,rbx
  40948f:	je     4094a0 <memcpy@plt+0x6ab0>
  409491:	mov    rax,rbx
  409494:	mov    rbx,QWORD PTR [rbx+0x10]
  409498:	jmp    409478 <memcpy@plt+0x6a88>
  40949a:	nop    WORD PTR [rax+rax*1+0x0]
  4094a0:	mov    rdi,r15
  4094a3:	call   4026e0 <free@plt>
  4094a8:	mov    rax,0x410d80
  4094af:	lea    rcx,[rip+0x2ad9]        # 40bf8f <memcpy@plt+0x959f>
  4094b6:	mov    esi,DWORD PTR [rax+0x18]
  4094b9:	mov    rdx,rbp
  4094bc:	mov    rdi,r12
  4094bf:	xor    eax,eax
  4094c1:	call   404030 <memcpy@plt+0x1640>
  4094c6:	mov    rdi,r14
  4094c9:	call   4027c0 <rb_close@plt>
  4094ce:	mov    rax,QWORD PTR [rsp+0x88]
  4094d6:	xor    rax,QWORD PTR fs:0x28
  4094df:	jne    409521 <memcpy@plt+0x6b31>
  4094e1:	add    rsp,0x98
  4094e8:	pop    rbx
  4094e9:	pop    rbp
  4094ea:	pop    r12
  4094ec:	pop    r13
  4094ee:	pop    r14
  4094f0:	pop    r15
  4094f2:	ret    
  4094f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4094f8:	call   402840 <__errno_location@plt>
  4094fd:	mov    edi,DWORD PTR [rax]
  4094ff:	call   402550 <rb_ignore_errno@plt>
  409504:	test   eax,eax
  409506:	je     4094c6 <memcpy@plt+0x6ad6>
  409508:	mov    rcx,r12
  40950b:	lea    rdx,[rip+0xfffffffffffffeae]        # 4093c0 <memcpy@plt+0x69d0>
  409512:	mov    esi,0x1
  409517:	mov    rdi,r14
  40951a:	call   402590 <rb_setselect@plt>
  40951f:	jmp    4094ce <memcpy@plt+0x6ade>
  409521:	call   402880 <__stack_chk_fail@plt>
  409526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409530:	push   r15
  409532:	push   r14
  409534:	mov    r14d,esi
  409537:	push   r13
  409539:	mov    r13,rdi
  40953c:	push   r12
  40953e:	push   rbp
  40953f:	push   rbx
  409540:	sub    rsp,0xb8
  409547:	lea    rbp,[rsp+0x20]
  40954c:	mov    rsi,rbp
  40954f:	mov    rax,QWORD PTR fs:0x28
  409558:	mov    QWORD PTR [rsp+0xa8],rax
  409560:	xor    eax,eax
  409562:	mov    DWORD PTR [rsp+0xc],0x1
  40956a:	call   402740 <rb_inet_pton_sock@plt>
  40956f:	movzx  edx,r14w
  409573:	test   eax,eax
  409575:	je     4098b6 <memcpy@plt+0x6ec6>
  40957b:	mov    eax,edx
  40957d:	movzx  edi,WORD PTR [rsp+0x20]
  409582:	rol    ax,0x8
  409586:	mov    WORD PTR [rsp+0x22],ax
  40958b:	cmp    di,0x2
  40958f:	je     4097a0 <memcpy@plt+0x6db0>
  409595:	cmp    di,0xa
  409599:	jne    409780 <memcpy@plt+0x6d90>
  40959f:	mov    ecx,DWORD PTR [rip+0xbb9b]        # 415140 <memcpy@plt+0x12750>
  4095a5:	lea    r12,[rip+0xbb54]        # 415100 <memcpy@plt+0x12710>
  4095ac:	cmp    DWORD PTR [rsp+0x28],ecx
  4095b0:	je     409820 <memcpy@plt+0x6e30>
  4095b6:	lea    rcx,[rip+0x29e6]        # 40bfa3 <memcpy@plt+0x95b3>
  4095bd:	xor    edx,edx
  4095bf:	mov    esi,0x1
  4095c4:	call   4025e0 <rb_socket@plt>
  4095c9:	mov    rbx,rax
  4095cc:	test   rax,rax
  4095cf:	je     409872 <memcpy@plt+0x6e82>
  4095d5:	mov    rdi,rax
  4095d8:	call   4025a0 <rb_get_fd@plt>
  4095dd:	mov    edi,eax
  4095df:	lea    rcx,[rsp+0xc]
  4095e4:	mov    r8d,0x4
  4095ea:	mov    edx,0x2
  4095ef:	mov    esi,0x1
  4095f4:	call   402680 <setsockopt@plt>
  4095f9:	test   eax,eax
  4095fb:	jne    40989e <memcpy@plt+0x6eae>
  409601:	cmp    WORD PTR [rsp+0x20],0x2
  409607:	mov    edx,0x1c
  40960c:	mov    r15d,0x10
  409612:	cmovne r15d,edx
  409616:	mov    rdi,rbx
  409619:	call   4025a0 <rb_get_fd@plt>
  40961e:	mov    edi,eax
  409620:	mov    edx,r15d
  409623:	mov    rsi,rbp
  409626:	call   4029b0 <bind@plt>
  40962b:	test   eax,eax
  40962d:	jne    4097d0 <memcpy@plt+0x6de0>
  409633:	xor    edx,edx
  409635:	mov    esi,0x1000
  40963a:	mov    rdi,rbx
  40963d:	call   4029d0 <rb_listen@plt>
  409642:	test   eax,eax
  409644:	jne    409808 <memcpy@plt+0x6e18>
  40964a:	mov    rdi,QWORD PTR [r12+0xb8]
  409652:	test   rdi,rdi
  409655:	je     40965c <memcpy@plt+0x6c6c>
  409657:	call   4027c0 <rb_close@plt>
  40965c:	mov    QWORD PTR [r12+0xb8],rbx
  409664:	mov    rbx,0x4151f0
  40966b:	lea    rbp,[rsp+0x10]
  409670:	mov    rdi,QWORD PTR [rbx]
  409673:	mov    rsi,rbp
  409676:	call   402730 <rb_dictionary_foreach_start@plt>
  40967b:	jmp    409693 <memcpy@plt+0x6ca3>
  40967d:	nop    DWORD PTR [rax]
  409680:	mov    rdi,rax
  409683:	call   4090b0 <memcpy@plt+0x66c0>
  409688:	mov    rdi,QWORD PTR [rbx]
  40968b:	mov    rsi,rbp
  40968e:	call   4026c0 <rb_dictionary_foreach_next@plt>
  409693:	mov    rdi,QWORD PTR [rbx]
  409696:	mov    rsi,rbp
  409699:	call   402610 <rb_dictionary_foreach_cur@plt>
  40969e:	test   rax,rax
  4096a1:	jne    409680 <memcpy@plt+0x6c90>
  4096a3:	mov    edx,0x35
  4096a8:	mov    rsi,r13
  4096ab:	mov    rdi,r12
  4096ae:	call   4026b0 <rb_strlcpy@plt>
  4096b3:	vmovdqa xmm0,XMMWORD PTR [rsp+0x20]
  4096b9:	vmovdqa xmm1,XMMWORD PTR [rsp+0x30]
  4096bf:	vmovdqa xmm2,XMMWORD PTR [rsp+0x40]
  4096c5:	vmovdqa xmm3,XMMWORD PTR [rsp+0x50]
  4096cb:	vmovdqa xmm4,XMMWORD PTR [rsp+0x60]
  4096d1:	vmovdqa xmm5,XMMWORD PTR [rsp+0x70]
  4096d7:	vmovdqa xmm6,XMMWORD PTR [rsp+0x80]
  4096e0:	vmovdqa xmm7,XMMWORD PTR [rsp+0x90]
  4096e9:	mov    rdi,QWORD PTR [r12+0xb8]
  4096f1:	mov    rcx,r12
  4096f4:	lea    rdx,[rip+0xfffffffffffffb65]        # 409260 <memcpy@plt+0x6870>
  4096fb:	xor    esi,esi
  4096fd:	mov    WORD PTR [r12+0x36],r14w
  409703:	vmovups XMMWORD PTR [r12+0x38],xmm0
  40970a:	vmovups XMMWORD PTR [r12+0x48],xmm1
  409711:	vmovups XMMWORD PTR [r12+0x58],xmm2
  409718:	vmovups XMMWORD PTR [r12+0x68],xmm3
  40971f:	vmovups XMMWORD PTR [r12+0x78],xmm4
  409726:	vmovups XMMWORD PTR [r12+0x88],xmm5
  409730:	vmovups XMMWORD PTR [r12+0x98],xmm6
  40973a:	vmovups XMMWORD PTR [r12+0xa8],xmm7
  409744:	mov    BYTE PTR [rip+0xba75],0x1        # 4151c0 <memcpy@plt+0x127d0>
  40974b:	call   4028e0 <rb_accept_tcp@plt>
  409750:	mov    eax,0x1
  409755:	mov    rcx,QWORD PTR [rsp+0xa8]
  40975d:	xor    rcx,QWORD PTR fs:0x28
  409766:	jne    4098d6 <memcpy@plt+0x6ee6>
  40976c:	add    rsp,0xb8
  409773:	pop    rbx
  409774:	pop    rbp
  409775:	pop    r12
  409777:	pop    r13
  409779:	pop    r14
  40977b:	pop    r15
  40977d:	ret    
  40977e:	xchg   ax,ax
  409780:	mov    ecx,DWORD PTR [rip+0xb8f6]        # 41507c <memcpy@plt+0x1268c>
  409786:	cmp    DWORD PTR [rsp+0x24],ecx
  40978a:	je     4097ac <memcpy@plt+0x6dbc>
  40978c:	lea    r12,[rip+0xb8ad]        # 415040 <memcpy@plt+0x12650>
  409793:	jmp    4095b6 <memcpy@plt+0x6bc6>
  409798:	nop    DWORD PTR [rax+rax*1+0x0]
  4097a0:	mov    ecx,DWORD PTR [rsp+0x24]
  4097a4:	cmp    DWORD PTR [rip+0xb8d2],ecx        # 41507c <memcpy@plt+0x1268c>
  4097aa:	jne    40978c <memcpy@plt+0x6d9c>
  4097ac:	movzx  edx,WORD PTR [rip+0xb8c7]        # 41507a <memcpy@plt+0x1268a>
  4097b3:	movzx  eax,ax
  4097b6:	cmp    eax,edx
  4097b8:	jne    40978c <memcpy@plt+0x6d9c>
  4097ba:	cmp    QWORD PTR [rip+0xb936],0x0        # 4150f8 <memcpy@plt+0x12708>
  4097c2:	je     40978c <memcpy@plt+0x6d9c>
  4097c4:	xor    eax,eax
  4097c6:	jmp    409755 <memcpy@plt+0x6d65>
  4097c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4097d0:	call   402840 <__errno_location@plt>
  4097d5:	mov    edi,DWORD PTR [rax]
  4097d7:	call   402780 <strerror@plt>
  4097dc:	mov    rdx,rax
  4097df:	lea    rsi,[rip+0x25ca]        # 40bdb0 <memcpy@plt+0x93c0>
  4097e6:	xor    eax,eax
  4097e8:	mov    edi,0x57
  4097ed:	call   403730 <memcpy@plt+0xd40>
  4097f2:	mov    rdi,rbx
  4097f5:	call   4027c0 <rb_close@plt>
  4097fa:	xor    eax,eax
  4097fc:	jmp    409755 <memcpy@plt+0x6d65>
  409801:	nop    DWORD PTR [rax+0x0]
  409808:	call   402840 <__errno_location@plt>
  40980d:	mov    edi,DWORD PTR [rax]
  40980f:	call   402780 <strerror@plt>
  409814:	mov    rdx,rax
  409817:	lea    rsi,[rip+0x25b2]        # 40bdd0 <memcpy@plt+0x93e0>
  40981e:	jmp    4097e6 <memcpy@plt+0x6df6>
  409820:	mov    ecx,DWORD PTR [rip+0xb91e]        # 415144 <memcpy@plt+0x12754>
  409826:	cmp    DWORD PTR [rsp+0x2c],ecx
  40982a:	jne    4095b6 <memcpy@plt+0x6bc6>
  409830:	mov    ecx,DWORD PTR [rip+0xb912]        # 415148 <memcpy@plt+0x12758>
  409836:	cmp    DWORD PTR [rsp+0x30],ecx
  40983a:	jne    4095b6 <memcpy@plt+0x6bc6>
  409840:	mov    ecx,DWORD PTR [rip+0xb906]        # 41514c <memcpy@plt+0x1275c>
  409846:	cmp    DWORD PTR [rsp+0x34],ecx
  40984a:	jne    4095b6 <memcpy@plt+0x6bc6>
  409850:	cmp    WORD PTR [rip+0xb8e3],ax        # 41513a <memcpy@plt+0x1274a>
  409857:	jne    4095b6 <memcpy@plt+0x6bc6>
  40985d:	cmp    QWORD PTR [rip+0xb953],0x0        # 4151b8 <memcpy@plt+0x127c8>
  409865:	je     4095b6 <memcpy@plt+0x6bc6>
  40986b:	xor    eax,eax
  40986d:	jmp    409755 <memcpy@plt+0x6d65>
  409872:	call   402840 <__errno_location@plt>
  409877:	mov    edi,DWORD PTR [rax]
  409879:	call   402780 <strerror@plt>
  40987e:	mov    rdx,rax
  409881:	lea    rsi,[rip+0x272f]        # 40bfb7 <memcpy@plt+0x95c7>
  409888:	mov    edi,0x43
  40988d:	xor    eax,eax
  40988f:	call   403730 <memcpy@plt+0xd40>
  409894:	mov    edi,0x3
  409899:	call   4025b0 <exit@plt>
  40989e:	call   402840 <__errno_location@plt>
  4098a3:	mov    edi,DWORD PTR [rax]
  4098a5:	call   402780 <strerror@plt>
  4098aa:	mov    rdx,rax
  4098ad:	lea    rsi,[rip+0x24d4]        # 40bd88 <memcpy@plt+0x9398>
  4098b4:	jmp    409888 <memcpy@plt+0x6e98>
  4098b6:	mov    ecx,edx
  4098b8:	mov    edi,0x43
  4098bd:	mov    rdx,r13
  4098c0:	lea    rsi,[rip+0x24a1]        # 40bd68 <memcpy@plt+0x9378>
  4098c7:	call   403730 <memcpy@plt+0xd40>
  4098cc:	mov    edi,0x3
  4098d1:	call   4025b0 <exit@plt>
  4098d6:	call   402880 <__stack_chk_fail@plt>
  4098db:	nop    DWORD PTR [rax+rax*1+0x0]
  4098e0:	endbr64 
  4098e4:	push   r12
  4098e6:	push   rbp
  4098e7:	push   rbx
  4098e8:	sub    rsp,0x20
  4098ec:	mov    rax,QWORD PTR fs:0x28
  4098f5:	mov    QWORD PTR [rsp+0x18],rax
  4098fa:	xor    eax,eax
  4098fc:	mov    rax,QWORD PTR [rdx]
  4098ff:	movzx  eax,BYTE PTR [rax]
  409902:	cmp    al,0x31
  409904:	sete   r12b
  409908:	je     4099b0 <memcpy@plt+0x6fc0>
  40990e:	mov    rdi,QWORD PTR [rip+0xb7e3]        # 4150f8 <memcpy@plt+0x12708>
  409915:	test   rdi,rdi
  409918:	je     409a00 <memcpy@plt+0x7010>
  40991e:	call   4027c0 <rb_close@plt>
  409923:	mov    rdi,QWORD PTR [rip+0xb88e]        # 4151b8 <memcpy@plt+0x127c8>
  40992a:	test   rdi,rdi
  40992d:	jne    409a10 <memcpy@plt+0x7020>
  409933:	mov    rbx,0x4151f0
  40993a:	mov    rbp,rsp
  40993d:	mov    rdi,QWORD PTR [rbx]
  409940:	mov    rsi,rbp
  409943:	mov    QWORD PTR [rip+0xb86a],0x0        # 4151b8 <memcpy@plt+0x127c8>
  40994e:	mov    QWORD PTR [rip+0xb79f],0x0        # 4150f8 <memcpy@plt+0x12708>
  409959:	call   402730 <rb_dictionary_foreach_start@plt>
  40995e:	jmp    409973 <memcpy@plt+0x6f83>
  409960:	mov    rdi,rax
  409963:	call   4090b0 <memcpy@plt+0x66c0>
  409968:	mov    rdi,QWORD PTR [rbx]
  40996b:	mov    rsi,rbp
  40996e:	call   4026c0 <rb_dictionary_foreach_next@plt>
  409973:	mov    rdi,QWORD PTR [rbx]
  409976:	mov    rsi,rbp
  409979:	call   402610 <rb_dictionary_foreach_cur@plt>
  40997e:	test   rax,rax
  409981:	jne    409960 <memcpy@plt+0x6f70>
  409983:	mov    BYTE PTR [rip+0xb836],r12b        # 4151c0 <memcpy@plt+0x127d0>
  40998a:	mov    rax,QWORD PTR [rsp+0x18]
  40998f:	xor    rax,QWORD PTR fs:0x28
  409998:	jne    409a28 <memcpy@plt+0x7038>
  40999e:	add    rsp,0x20
  4099a2:	pop    rbx
  4099a3:	pop    rbp
  4099a4:	pop    r12
  4099a6:	ret    
  4099a7:	nop    WORD PTR [rax+rax*1+0x0]
  4099b0:	cmp    BYTE PTR [rip+0xb689],0x0        # 415040 <memcpy@plt+0x12650>
  4099b7:	je     4099cf <memcpy@plt+0x6fdf>
  4099b9:	movzx  esi,WORD PTR [rip+0xb6b6]        # 415076 <memcpy@plt+0x12686>
  4099c0:	test   si,si
  4099c3:	je     4099cf <memcpy@plt+0x6fdf>
  4099c5:	cmp    QWORD PTR [rip+0xb72b],0x0        # 4150f8 <memcpy@plt+0x12708>
  4099cd:	je     409a1a <memcpy@plt+0x702a>
  4099cf:	cmp    BYTE PTR [rip+0xb72a],0x0        # 415100 <memcpy@plt+0x12710>
  4099d6:	je     409983 <memcpy@plt+0x6f93>
  4099d8:	movzx  esi,WORD PTR [rip+0xb757]        # 415136 <memcpy@plt+0x12746>
  4099df:	test   si,si
  4099e2:	je     409983 <memcpy@plt+0x6f93>
  4099e4:	cmp    QWORD PTR [rip+0xb7cc],0x0        # 4151b8 <memcpy@plt+0x127c8>
  4099ec:	jne    409983 <memcpy@plt+0x6f93>
  4099ee:	lea    rdi,[rip+0xb70b]        # 415100 <memcpy@plt+0x12710>
  4099f5:	call   409530 <memcpy@plt+0x6b40>
  4099fa:	jmp    409983 <memcpy@plt+0x6f93>
  4099fc:	nop    DWORD PTR [rax+0x0]
  409a00:	mov    rdi,QWORD PTR [rip+0xb7b1]        # 4151b8 <memcpy@plt+0x127c8>
  409a07:	test   rdi,rdi
  409a0a:	je     409983 <memcpy@plt+0x6f93>
  409a10:	call   4027c0 <rb_close@plt>
  409a15:	jmp    409933 <memcpy@plt+0x6f43>
  409a1a:	lea    rdi,[rip+0xb61f]        # 415040 <memcpy@plt+0x12650>
  409a21:	call   409530 <memcpy@plt+0x6b40>
  409a26:	jmp    4099cf <memcpy@plt+0x6fdf>
  409a28:	call   402880 <__stack_chk_fail@plt>
  409a2d:	nop    DWORD PTR [rax]
  409a30:	push   rax
  409a31:	pop    rax
  409a32:	lea    rcx,[rip+0x269f]        # 40c0d8 <memcpy@plt+0x96e8>
  409a39:	mov    edx,0xec
  409a3e:	lea    rsi,[rip+0x1b03]        # 40b548 <memcpy@plt+0x8b58>
  409a45:	lea    rdi,[rip+0x1fe8]        # 40ba34 <memcpy@plt+0x9044>
  409a4c:	sub    rsp,0x8
  409a50:	call   4025c0 <__assert_fail@plt>
  409a55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409a60:	push   r13
  409a62:	push   r12
  409a64:	mov    r12,rsi
  409a67:	mov    esi,0x38
  409a6c:	push   rbp
  409a6d:	push   rbx
  409a6e:	mov    rbx,rdi
  409a71:	sub    rsp,0x128
  409a78:	mov    rax,QWORD PTR fs:0x28
  409a81:	mov    QWORD PTR [rsp+0x118],rax
  409a89:	xor    eax,eax
  409a8b:	mov    rax,0x410d80
  409a92:	mov    eax,DWORD PTR [rax+0x18]
  409a95:	shl    rax,0x5
  409a99:	add    rax,QWORD PTR [rdi+0x1d0]
  409aa0:	mov    edi,0x1
  409aa5:	mov    r13,QWORD PTR [rax+0x10]
  409aa9:	call   4028f0 <calloc@plt>
  409aae:	test   rax,rax
  409ab1:	je     409d58 <memcpy@plt+0x7368>
  409ab7:	movzx  edi,WORD PTR [rbx+0xf8]
  409abe:	mov    rbp,rax
  409ac1:	mov    DWORD PTR [rsp+0xc],0x1
  409ac9:	lea    rax,[rip+0xb570]        # 415040 <memcpy@plt+0x12650>
  409ad0:	cmp    di,0xa
  409ad4:	je     409d18 <memcpy@plt+0x7328>
  409ada:	cmp    QWORD PTR [rax+0xb8],0x0
  409ae2:	je     409ced <memcpy@plt+0x72fd>
  409ae8:	vmovdqu xmm0,XMMWORD PTR [rbx+0xf8]
  409af0:	vmovdqu xmm1,XMMWORD PTR [rbx+0x108]
  409af8:	vmovdqu xmm2,XMMWORD PTR [rbx+0x118]
  409b00:	vmovdqu xmm3,XMMWORD PTR [rbx+0x128]
  409b08:	vmovdqu xmm4,XMMWORD PTR [rbx+0x138]
  409b10:	vmovdqu xmm5,XMMWORD PTR [rbx+0x148]
  409b18:	vmovdqu xmm6,XMMWORD PTR [rbx+0x158]
  409b20:	vmovdqu xmm7,XMMWORD PTR [rbx+0x168]
  409b28:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  409b2e:	vmovaps XMMWORD PTR [rsp+0x20],xmm1
  409b34:	vmovdqu xmm0,XMMWORD PTR [rax+0x38]
  409b39:	vmovdqu xmm1,XMMWORD PTR [rax+0x48]
  409b3e:	vmovaps XMMWORD PTR [rsp+0x30],xmm2
  409b44:	vmovaps XMMWORD PTR [rsp+0x40],xmm3
  409b4a:	vmovdqu xmm2,XMMWORD PTR [rax+0x58]
  409b4f:	vmovdqu xmm3,XMMWORD PTR [rax+0x68]
  409b54:	vmovaps XMMWORD PTR [rsp+0x50],xmm4
  409b5a:	vmovaps XMMWORD PTR [rsp+0x60],xmm5
  409b60:	vmovdqu xmm4,XMMWORD PTR [rax+0x78]
  409b65:	vmovdqu xmm5,XMMWORD PTR [rax+0x88]
  409b6d:	vmovaps XMMWORD PTR [rsp+0x70],xmm6
  409b73:	vmovaps XMMWORD PTR [rsp+0x80],xmm7
  409b7c:	vmovdqu xmm6,XMMWORD PTR [rax+0x98]
  409b84:	vmovdqu xmm7,XMMWORD PTR [rax+0xa8]
  409b8c:	vmovaps XMMWORD PTR [rsp+0x90],xmm0
  409b95:	vmovaps XMMWORD PTR [rsp+0xa0],xmm1
  409b9e:	vmovaps XMMWORD PTR [rsp+0xb0],xmm2
  409ba7:	vmovaps XMMWORD PTR [rsp+0xc0],xmm3
  409bb0:	vmovaps XMMWORD PTR [rsp+0xd0],xmm4
  409bb9:	vmovaps XMMWORD PTR [rsp+0xe0],xmm5
  409bc2:	vmovaps XMMWORD PTR [rsp+0xf0],xmm6
  409bcb:	vmovaps XMMWORD PTR [rsp+0x100],xmm7
  409bd4:	mov    QWORD PTR [rbp+0x0],rbx
  409bd8:	mov    QWORD PTR [rbp+0x10],r12
  409bdc:	mov    QWORD PTR [rbp+0x18],rax
  409be0:	mov    rcx,r12
  409be3:	xor    edx,edx
  409be5:	mov    esi,0x1
  409bea:	call   4025e0 <rb_socket@plt>
  409bef:	mov    QWORD PTR [rbp+0x8],rax
  409bf3:	test   rax,rax
  409bf6:	je     409cc8 <memcpy@plt+0x72d8>
  409bfc:	mov    rdi,rax
  409bff:	call   4025a0 <rb_get_fd@plt>
  409c04:	mov    edi,eax
  409c06:	mov    edx,0x1
  409c0b:	lea    rcx,[rsp+0xc]
  409c10:	mov    r8d,0x4
  409c16:	mov    esi,0x6
  409c1b:	call   402680 <setsockopt@plt>
  409c20:	xor    eax,eax
  409c22:	mov    WORD PTR [rsp+0x92],ax
  409c2a:	movbe  ax,WORD PTR [r12+0x14]
  409c32:	lea    rdx,[rbp+0x20]
  409c36:	mov    WORD PTR [rsp+0x12],ax
  409c3b:	test   r13,r13
  409c3e:	je     409d62 <memcpy@plt+0x7372>
  409c44:	mov    rax,QWORD PTR [r13+0x0]
  409c48:	mov    QWORD PTR [rbp+0x20],rbp
  409c4c:	mov    QWORD PTR [rbp+0x28],0x0
  409c54:	mov    QWORD PTR [rbp+0x30],rax
  409c58:	test   rax,rax
  409c5b:	je     409d40 <memcpy@plt+0x7350>
  409c61:	mov    QWORD PTR [rax+0x8],rdx
  409c65:	inc    QWORD PTR [r13+0x10]
  409c69:	cmp    BYTE PTR [r12+0x16],0x0
  409c6f:	mov    QWORD PTR [r13+0x0],rdx
  409c73:	mov    r9d,DWORD PTR [rip+0x70f6]        # 410d70 <memcpy@plt+0xe380>
  409c7a:	mov    rdi,QWORD PTR [rbp+0x8]
  409c7e:	lea    rdx,[rsp+0x90]
  409c86:	lea    rsi,[rsp+0x10]
  409c8b:	mov    r8,rbp
  409c8e:	lea    rcx,[rip+0xe4b]        # 40aae0 <memcpy@plt+0x80f0>
  409c95:	jne    409d30 <memcpy@plt+0x7340>
  409c9b:	call   402570 <rb_connect_tcp@plt>
  409ca0:	mov    rax,QWORD PTR [rsp+0x118]
  409ca8:	xor    rax,QWORD PTR fs:0x28
  409cb1:	jne    409d5d <memcpy@plt+0x736d>
  409cb7:	add    rsp,0x128
  409cbe:	pop    rbx
  409cbf:	pop    rbp
  409cc0:	pop    r12
  409cc2:	pop    r13
  409cc4:	ret    
  409cc5:	nop    DWORD PTR [rax]
  409cc8:	call   402840 <__errno_location@plt>
  409ccd:	mov    edi,DWORD PTR [rax]
  409ccf:	call   402780 <strerror@plt>
  409cd4:	mov    rcx,rax
  409cd7:	mov    rdx,r12
  409cda:	lea    rsi,[rip+0x2117]        # 40bdf8 <memcpy@plt+0x9408>
  409ce1:	mov    edi,0x57
  409ce6:	xor    eax,eax
  409ce8:	call   403730 <memcpy@plt+0xd40>
  409ced:	mov    rax,QWORD PTR [rsp+0x118]
  409cf5:	xor    rax,QWORD PTR fs:0x28
  409cfe:	jne    409d5d <memcpy@plt+0x736d>
  409d00:	add    rsp,0x128
  409d07:	pop    rbx
  409d08:	mov    rdi,rbp
  409d0b:	pop    rbp
  409d0c:	pop    r12
  409d0e:	pop    r13
  409d10:	jmp    4026e0 <free@plt>
  409d15:	nop    DWORD PTR [rax]
  409d18:	add    rax,0xc0
  409d1e:	cmp    DWORD PTR [r12+0x10],0x1
  409d24:	jne    409ada <memcpy@plt+0x70ea>
  409d2a:	jmp    409ced <memcpy@plt+0x72fd>
  409d2c:	nop    DWORD PTR [rax+0x0]
  409d30:	call   402560 <rb_connect_tcp_ssl@plt>
  409d35:	jmp    409ca0 <memcpy@plt+0x72b0>
  409d3a:	nop    WORD PTR [rax+rax*1+0x0]
  409d40:	cmp    QWORD PTR [r13+0x8],0x0
  409d45:	jne    409c65 <memcpy@plt+0x7275>
  409d4b:	mov    QWORD PTR [r13+0x8],rdx
  409d4f:	jmp    409c65 <memcpy@plt+0x7275>
  409d54:	nop    DWORD PTR [rax+0x0]
  409d58:	call   402830 <rb_outofmemory@plt>
  409d5d:	call   402880 <__stack_chk_fail@plt>
  409d62:	lea    rcx,[rip+0x235f]        # 40c0c8 <memcpy@plt+0x96d8>
  409d69:	mov    edx,0x91
  409d6e:	lea    rsi,[rip+0x17d3]        # 40b548 <memcpy@plt+0x8b58>
  409d75:	lea    rdi,[rip+0x1cb8]        # 40ba34 <memcpy@plt+0x9044>
  409d7c:	call   4025c0 <__assert_fail@plt>
  409d81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409d8c:	nop    DWORD PTR [rax+0x0]
  409d90:	push   r13
  409d92:	push   r12
  409d94:	push   rbp
  409d95:	mov    rbp,rdi
  409d98:	push   rbx
  409d99:	sub    rsp,0x8
  409d9d:	mov    rax,0x410d80
  409da4:	movsxd r12,DWORD PTR [rip+0x6fc5]        # 410d70 <memcpy@plt+0xe380>
  409dab:	mov    ebx,DWORD PTR [rax+0x18]
  409dae:	mov    rax,QWORD PTR [rdi+0x1d0]
  409db5:	shl    rbx,0x5
  409db9:	mov    r13,QWORD PTR [rax+rbx*1+0x10]
  409dbe:	call   402760 <rb_current_time@plt>
  409dc3:	mov    rdx,QWORD PTR [rbp+0x1d0]
  409dca:	add    r12,rax
  409dcd:	mov    QWORD PTR [rdx+rbx*1+0x8],r12
  409dd2:	mov    rbx,QWORD PTR [rip+0xb3f7]        # 4151d0 <memcpy@plt+0x127e0>
  409dd9:	mov    BYTE PTR [r13+0x18],0x1
  409dde:	test   rbx,rbx
  409de1:	je     409dfc <memcpy@plt+0x740c>
  409de3:	nop    DWORD PTR [rax+rax*1+0x0]
  409de8:	mov    rsi,QWORD PTR [rbx]
  409deb:	mov    rdi,rbp
  409dee:	call   409a60 <memcpy@plt+0x7070>
  409df3:	mov    rbx,QWORD PTR [rbx+0x10]
  409df7:	test   rbx,rbx
  409dfa:	jne    409de8 <memcpy@plt+0x73f8>
  409dfc:	mov    edi,DWORD PTR [rbp+0x0]
  409dff:	add    rsp,0x8
  409e03:	pop    rbx
  409e04:	pop    rbp
  409e05:	pop    r12
  409e07:	lea    rsi,[rip+0x201a]        # 40be28 <memcpy@plt+0x9438>
  409e0e:	xor    eax,eax
  409e10:	pop    r13
  409e12:	jmp    403610 <memcpy@plt+0xc20>
  409e17:	nop    WORD PTR [rax+rax*1+0x0]
  409e20:	endbr64 
  409e24:	sub    rsp,0x8
  409e28:	mov    rdi,QWORD PTR [rip+0xb2c9]        # 4150f8 <memcpy@plt+0x12708>
  409e2f:	test   rdi,rdi
  409e32:	je     409e39 <memcpy@plt+0x7449>
  409e34:	call   4027c0 <rb_close@plt>
  409e39:	mov    rdi,QWORD PTR [rip+0xb378]        # 4151b8 <memcpy@plt+0x127c8>
  409e40:	test   rdi,rdi
  409e43:	je     409e4a <memcpy@plt+0x745a>
  409e45:	call   4027c0 <rb_close@plt>
  409e4a:	lea    rdx,[rip+0xb1ef]        # 415040 <memcpy@plt+0x12650>
  409e51:	mov    ecx,0x30
  409e56:	xor    eax,eax
  409e58:	mov    rdi,rdx
  409e5b:	rep stos QWORD PTR es:[rdi],rax
  409e5e:	add    rsp,0x8
  409e62:	ret    
  409e63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409e6e:	xchg   ax,ax
  409e70:	endbr64 
  409e74:	push   rbp
  409e75:	mov    edx,0x1
  409e7a:	lea    r8,[rip+0x2154]        # 40bfd5 <memcpy@plt+0x95e5>
  409e81:	mov    rbp,rsp
  409e84:	push   r14
  409e86:	mov    ecx,0x80
  409e8b:	mov    r14,rdi
  409e8e:	push   rbx
  409e8f:	lea    rbx,[rbp-0xa0]
  409e96:	sub    rsp,0x98
  409e9d:	mov    r9,QWORD PTR [rdi+0x18]
  409ea1:	mov    rsi,QWORD PTR fs:0x28
  409eaa:	mov    QWORD PTR [rbp-0x18],rsi
  409eae:	xor    esi,esi
  409eb0:	movzx  eax,WORD PTR [r9+0x36]
  409eb5:	mov    esi,0x80
  409eba:	push   rax
  409ebb:	mov    rdi,rbx
  409ebe:	xor    eax,eax
  409ec0:	call   402970 <__snprintf_chk@plt>
  409ec5:	mov    rdx,rbx
  409ec8:	mov    ecx,DWORD PTR [rdx]
  409eca:	add    rdx,0x4
  409ece:	lea    eax,[rcx-0x1010101]
  409ed4:	andn   eax,ecx,eax
  409ed9:	and    eax,0x80808080
  409ede:	je     409ec8 <memcpy@plt+0x74d8>
  409ee0:	mov    ecx,eax
  409ee2:	shr    ecx,0x10
  409ee5:	test   eax,0x8080
  409eea:	cmove  eax,ecx
  409eed:	lea    rcx,[rdx+0x2]
  409ef1:	cmove  rdx,rcx
  409ef5:	mov    esi,eax
  409ef7:	add    sil,al
  409efa:	sbb    rdx,0x3
  409efe:	mov    rdi,QWORD PTR [r14+0x8]
  409f02:	sub    rdx,rbx
  409f05:	mov    rsi,rbx
  409f08:	call   402670 <rb_write@plt>
  409f0d:	pop    rdx
  409f0e:	pop    rcx
  409f0f:	test   rax,rax
  409f12:	jle    409f34 <memcpy@plt+0x7544>
  409f14:	mov    rbx,QWORD PTR [r14+0x10]
  409f18:	mov    rdi,rbx
  409f1b:	call   4026f0 <strlen@plt>
  409f20:	mov    rdi,QWORD PTR [r14+0x8]
  409f24:	lea    edx,[rax+0x1]
  409f27:	mov    rsi,rbx
  409f2a:	call   402670 <rb_write@plt>
  409f2f:	test   rax,rax
  409f32:	jg     409f50 <memcpy@plt+0x7560>
  409f34:	mov    rax,QWORD PTR [rbp-0x18]
  409f38:	xor    rax,QWORD PTR fs:0x28
  409f41:	jne    409f67 <memcpy@plt+0x7577>
  409f43:	lea    rsp,[rbp-0x10]
  409f47:	pop    rbx
  409f48:	pop    r14
  409f4a:	pop    rbp
  409f4b:	ret    
  409f4c:	nop    DWORD PTR [rax+0x0]
  409f50:	mov    rdi,QWORD PTR [r14+0x8]
  409f54:	mov    edx,0x2
  409f59:	lea    rsi,[rip+0x208e]        # 40bfee <memcpy@plt+0x95fe>
  409f60:	call   402670 <rb_write@plt>
  409f65:	jmp    409f34 <memcpy@plt+0x7544>
  409f67:	call   402880 <__stack_chk_fail@plt>
  409f6c:	nop    DWORD PTR [rax+0x0]
  409f70:	endbr64 
  409f74:	push   rbp
  409f75:	push   rbx
  409f76:	mov    rbx,rdi
  409f79:	sub    rsp,0x38
  409f7d:	mov    rax,QWORD PTR fs:0x28
  409f86:	mov    QWORD PTR [rsp+0x28],rax
  409f8b:	xor    eax,eax
  409f8d:	mov    edx,DWORD PTR [rip+0x212d]        # 40c0c0 <memcpy@plt+0x96d0>
  409f93:	mov    rax,QWORD PTR [rdi]
  409f96:	mov    DWORD PTR [rsp],edx
  409f99:	movzx  eax,WORD PTR [rax+0xf8]
  409fa0:	movzx  edx,WORD PTR [rip+0x211d]        # 40c0c4 <memcpy@plt+0x96d4>
  409fa7:	mov    WORD PTR [rsp+0x4],dx
  409fac:	cmp    ax,0x2
  409fb0:	je     40a028 <memcpy@plt+0x7638>
  409fb2:	cmp    ax,0xa
  409fb6:	jne    409feb <memcpy@plt+0x75fb>
  409fb8:	mov    rax,QWORD PTR [rdi+0x18]
  409fbc:	mov    BYTE PTR [rsp+0x6],0x4
  409fc1:	vmovdqu xmm0,XMMWORD PTR [rax+0x40]
  409fc6:	movzx  eax,WORD PTR [rax+0x3a]
  409fca:	vmovups XMMWORD PTR [rsp+0x7],xmm0
  409fd0:	mov    WORD PTR [rsp+0x17],ax
  409fd5:	mov    edx,0xffffffe7
  409fda:	mov    rdi,QWORD PTR [rbx+0x8]
  409fde:	mov    rsi,rsp
  409fe1:	call   402670 <rb_write@plt>
  409fe6:	test   rax,rax
  409fe9:	jg     40a008 <memcpy@plt+0x7618>
  409feb:	mov    rax,QWORD PTR [rsp+0x28]
  409ff0:	xor    rax,QWORD PTR fs:0x28
  409ff9:	jne    40a048 <memcpy@plt+0x7658>
  409ffb:	add    rsp,0x38
  409fff:	pop    rbx
  40a000:	pop    rbp
  40a001:	ret    
  40a002:	nop    WORD PTR [rax+rax*1+0x0]
  40a008:	mov    rbp,QWORD PTR [rbx+0x10]
  40a00c:	mov    rdi,rbp
  40a00f:	call   4026f0 <strlen@plt>
  40a014:	mov    rdi,QWORD PTR [rbx+0x8]
  40a018:	lea    edx,[rax+0x1]
  40a01b:	mov    rsi,rbp
  40a01e:	call   402670 <rb_write@plt>
  40a023:	jmp    409feb <memcpy@plt+0x75fb>
  40a025:	nop    DWORD PTR [rax]
  40a028:	mov    rax,QWORD PTR [rdi+0x18]
  40a02c:	mov    BYTE PTR [rsp+0x6],0x1
  40a031:	mov    edx,DWORD PTR [rax+0x3c]
  40a034:	movzx  eax,WORD PTR [rax+0x3a]
  40a038:	mov    DWORD PTR [rsp+0x7],edx
  40a03c:	mov    WORD PTR [rsp+0xb],ax
  40a041:	mov    edx,0xfffffff3
  40a046:	jmp    409fda <memcpy@plt+0x75ea>
  40a048:	call   402880 <__stack_chk_fail@plt>
  40a04d:	nop    DWORD PTR [rax]
  40a050:	endbr64 
  40a054:	push   rbp
  40a055:	push   rbx
  40a056:	mov    rbx,rdi
  40a059:	sub    rsp,0x28
  40a05d:	mov    rax,QWORD PTR fs:0x28
  40a066:	mov    QWORD PTR [rsp+0x18],rax
  40a06b:	xor    eax,eax
  40a06d:	mov    eax,0x104
  40a072:	mov    WORD PTR [rsp+0xf],ax
  40a077:	mov    rax,QWORD PTR [rdi+0x18]
  40a07b:	mov    rdi,QWORD PTR [rdi+0x8]
  40a07f:	movzx  edx,WORD PTR [rax+0x3a]
  40a083:	mov    eax,DWORD PTR [rax+0x3c]
  40a086:	mov    WORD PTR [rsp+0x11],dx
  40a08b:	lea    rsi,[rsp+0xf]
  40a090:	mov    edx,0x9
  40a095:	mov    DWORD PTR [rsp+0x13],eax
  40a099:	mov    BYTE PTR [rsp+0x17],0x0
  40a09e:	call   402670 <rb_write@plt>
  40a0a3:	test   rax,rax
  40a0a6:	js     40a0c3 <memcpy@plt+0x76d3>
  40a0a8:	mov    rbp,QWORD PTR [rbx+0x10]
  40a0ac:	mov    rdi,rbp
  40a0af:	call   4026f0 <strlen@plt>
  40a0b4:	mov    rdi,QWORD PTR [rbx+0x8]
  40a0b8:	lea    edx,[rax+0x1]
  40a0bb:	mov    rsi,rbp
  40a0be:	call   402670 <rb_write@plt>
  40a0c3:	mov    rax,QWORD PTR [rsp+0x18]
  40a0c8:	xor    rax,QWORD PTR fs:0x28
  40a0d1:	jne    40a0da <memcpy@plt+0x76ea>
  40a0d3:	add    rsp,0x28
  40a0d7:	pop    rbx
  40a0d8:	pop    rbp
  40a0d9:	ret    
  40a0da:	call   402880 <__stack_chk_fail@plt>
  40a0df:	nop
  40a0e0:	endbr64 
  40a0e4:	push   rbp
  40a0e5:	xor    esi,esi
  40a0e7:	push   rbx
  40a0e8:	mov    rbx,rdx
  40a0eb:	sub    rsp,0x8
  40a0ef:	mov    rdi,QWORD PTR [rdx+0x8]
  40a0f3:	mov    rbp,QWORD PTR [rdx]
  40a0f6:	mov    edx,0xa
  40a0fb:	call   4027d0 <strtol@plt>
  40a100:	lea    edx,[rax-0x1]
  40a103:	cmp    edx,0xfffe
  40a109:	ja     40a11c <memcpy@plt+0x772c>
  40a10b:	add    rsp,0x8
  40a10f:	pop    rbx
  40a110:	mov    rdi,rbp
  40a113:	movzx  esi,ax
  40a116:	pop    rbp
  40a117:	jmp    409530 <memcpy@plt+0x6b40>
  40a11c:	mov    rcx,QWORD PTR [rbx+0x8]
  40a120:	mov    rdx,QWORD PTR [rbx]
  40a123:	mov    edi,0x43
  40a128:	lea    rsi,[rip+0x1d21]        # 40be50 <memcpy@plt+0x9460>
  40a12f:	xor    eax,eax
  40a131:	call   403730 <memcpy@plt+0xd40>
  40a136:	mov    edi,0x3
  40a13b:	call   4025b0 <exit@plt>
  40a140:	endbr64 
  40a144:	push   rbp
  40a145:	push   rbx
  40a146:	sub    rsp,0x28
  40a14a:	mov    rbx,QWORD PTR [rip+0xb07f]        # 4151d0 <memcpy@plt+0x127e0>
  40a151:	mov    rax,QWORD PTR fs:0x28
  40a15a:	mov    QWORD PTR [rsp+0x18],rax
  40a15f:	xor    eax,eax
  40a161:	test   rbx,rbx
  40a164:	je     40a1f8 <memcpy@plt+0x7808>
  40a16a:	mov    rdi,QWORD PTR [rbx]
  40a16d:	mov    rbp,QWORD PTR [rbx+0x10]
  40a171:	test   rdi,rdi
  40a174:	je     40a185 <memcpy@plt+0x7795>
  40a176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a180:	call   4026e0 <free@plt>
  40a185:	mov    rdx,QWORD PTR [rbx+0x10]
  40a189:	mov    rax,QWORD PTR [rbx+0x8]
  40a18d:	test   rdx,rdx
  40a190:	je     40a1e0 <memcpy@plt+0x77f0>
  40a192:	mov    QWORD PTR [rdx+0x8],rax
  40a196:	mov    rax,QWORD PTR [rbx+0x8]
  40a19a:	test   rax,rax
  40a19d:	je     40a1ec <memcpy@plt+0x77fc>
  40a19f:	mov    QWORD PTR [rax+0x10],rdx
  40a1a3:	mov    QWORD PTR [rbx+0x8],0x0
  40a1ab:	mov    QWORD PTR [rbx+0x10],0x0
  40a1b3:	dec    QWORD PTR [rip+0xb026]        # 4151e0 <memcpy@plt+0x127f0>
  40a1ba:	test   rbp,rbp
  40a1bd:	je     40a1f8 <memcpy@plt+0x7808>
  40a1bf:	mov    rbx,rbp
  40a1c2:	mov    rdi,QWORD PTR [rbx]
  40a1c5:	mov    rbp,QWORD PTR [rbp+0x10]
  40a1c9:	test   rdi,rdi
  40a1cc:	jne    40a180 <memcpy@plt+0x7790>
  40a1ce:	mov    rdx,QWORD PTR [rbx+0x10]
  40a1d2:	mov    rax,QWORD PTR [rbx+0x8]
  40a1d6:	test   rdx,rdx
  40a1d9:	jne    40a192 <memcpy@plt+0x77a2>
  40a1db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1e0:	mov    QWORD PTR [rip+0xaff1],rax        # 4151d8 <memcpy@plt+0x127e8>
  40a1e7:	test   rax,rax
  40a1ea:	jne    40a19f <memcpy@plt+0x77af>
  40a1ec:	mov    QWORD PTR [rip+0xafdd],rdx        # 4151d0 <memcpy@plt+0x127e0>
  40a1f3:	jmp    40a1a3 <memcpy@plt+0x77b3>
  40a1f5:	nop    DWORD PTR [rax]
  40a1f8:	mov    rbx,0x4151f0
  40a1ff:	mov    rbp,rsp
  40a202:	mov    rdi,QWORD PTR [rbx]
  40a205:	mov    rsi,rbp
  40a208:	call   402730 <rb_dictionary_foreach_start@plt>
  40a20d:	jmp    40a223 <memcpy@plt+0x7833>
  40a20f:	nop
  40a210:	mov    rdi,rax
  40a213:	call   4090b0 <memcpy@plt+0x66c0>
  40a218:	mov    rdi,QWORD PTR [rbx]
  40a21b:	mov    rsi,rbp
  40a21e:	call   4026c0 <rb_dictionary_foreach_next@plt>
  40a223:	mov    rdi,QWORD PTR [rbx]
  40a226:	mov    rsi,rbp
  40a229:	call   402610 <rb_dictionary_foreach_cur@plt>
  40a22e:	test   rax,rax
  40a231:	jne    40a210 <memcpy@plt+0x7820>
  40a233:	mov    BYTE PTR [rip+0xaf86],0x0        # 4151c0 <memcpy@plt+0x127d0>
  40a23a:	mov    rax,QWORD PTR [rsp+0x18]
  40a23f:	xor    rax,QWORD PTR fs:0x28
  40a248:	jne    40a251 <memcpy@plt+0x7861>
  40a24a:	add    rsp,0x28
  40a24e:	pop    rbx
  40a24f:	pop    rbp
  40a250:	ret    
  40a251:	call   402880 <__stack_chk_fail@plt>
  40a256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a260:	endbr64 
  40a264:	push   r13
  40a266:	xor    esi,esi
  40a268:	push   r12
  40a26a:	push   rbp
  40a26b:	mov    rbp,rdx
  40a26e:	push   rbx
  40a26f:	sub    rsp,0x8
  40a273:	mov    rdi,QWORD PTR [rdx+0x8]
  40a277:	mov    edx,0xa
  40a27c:	call   4027d0 <strtol@plt>
  40a281:	mov    esi,0x38
  40a286:	mov    edi,0x1
  40a28b:	mov    r12,rax
  40a28e:	call   4028f0 <calloc@plt>
  40a293:	test   rax,rax
  40a296:	je     40a4ff <memcpy@plt+0x7b0f>
  40a29c:	mov    rbx,rax
  40a29f:	lea    eax,[r12-0x1]
  40a2a4:	mov    r13,QWORD PTR [rbp+0x0]
  40a2a8:	cmp    eax,0xfffe
  40a2ad:	ja     40a504 <memcpy@plt+0x7b14>
  40a2b3:	mov    WORD PTR [rbx+0x14],r12w
  40a2b8:	lea    rsi,[rip+0x1d32]        # 40bff1 <memcpy@plt+0x9601>
  40a2bf:	mov    rdi,r13
  40a2c2:	call   4025f0 <strcasecmp@plt>
  40a2c7:	test   eax,eax
  40a2c9:	je     40a3e0 <memcpy@plt+0x79f0>
  40a2cf:	lea    rsi,[rip+0x1d2d]        # 40c003 <memcpy@plt+0x9613>
  40a2d6:	mov    rdi,r13
  40a2d9:	call   4025f0 <strcasecmp@plt>
  40a2de:	test   eax,eax
  40a2e0:	je     40a33b <memcpy@plt+0x794b>
  40a2e2:	lea    rsi,[rip+0x1d21]        # 40c00a <memcpy@plt+0x961a>
  40a2e9:	mov    rdi,r13
  40a2ec:	call   4025f0 <strcasecmp@plt>
  40a2f1:	test   eax,eax
  40a2f3:	je     40a48e <memcpy@plt+0x7a9e>
  40a2f9:	lea    rsi,[rip+0x1d16]        # 40c016 <memcpy@plt+0x9626>
  40a300:	mov    rdi,r13
  40a303:	call   4025f0 <strcasecmp@plt>
  40a308:	test   eax,eax
  40a30a:	je     40a451 <memcpy@plt+0x7a61>
  40a310:	mov    DWORD PTR [rbx+0x10],0x0
  40a317:	mov    edi,0x43
  40a31c:	movzx  ecx,r12w
  40a320:	mov    rdx,r13
  40a323:	lea    rsi,[rip+0x1b6e]        # 40be98 <memcpy@plt+0x94a8>
  40a32a:	xor    eax,eax
  40a32c:	call   403730 <memcpy@plt+0xd40>
  40a331:	mov    edi,0x3
  40a336:	call   4025b0 <exit@plt>
  40a33b:	mov    DWORD PTR [rbx+0x10],0x2
  40a342:	movzx  r9d,r12w
  40a346:	lea    r8,[rip+0x1cf7]        # 40c044 <memcpy@plt+0x9654>
  40a34d:	mov    ecx,0x10
  40a352:	mov    edx,0x1
  40a357:	mov    esi,0x10
  40a35c:	mov    rdi,rbx
  40a35f:	xor    eax,eax
  40a361:	call   402970 <__snprintf_chk@plt>
  40a366:	lea    rax,[rip+0xfffffffffffffc03]        # 409f70 <memcpy@plt+0x7580>
  40a36d:	mov    BYTE PTR [rbx+0x16],0x0
  40a371:	mov    QWORD PTR [rbx+0x18],rax
  40a375:	mov    rdi,QWORD PTR [rip+0xae54]        # 4151d0 <memcpy@plt+0x127e0>
  40a37c:	movzx  ecx,WORD PTR [rbx+0x14]
  40a380:	mov    esi,DWORD PTR [rbx+0x10]
  40a383:	test   rdi,rdi
  40a386:	je     40a4cd <memcpy@plt+0x7add>
  40a38c:	mov    rax,rdi
  40a38f:	jmp    40a3a1 <memcpy@plt+0x79b1>
  40a391:	nop    DWORD PTR [rax+0x0]
  40a398:	mov    rax,QWORD PTR [rax+0x10]
  40a39c:	test   rax,rax
  40a39f:	je     40a420 <memcpy@plt+0x7a30>
  40a3a1:	mov    rdx,QWORD PTR [rax]
  40a3a4:	cmp    esi,DWORD PTR [rdx+0x10]
  40a3a7:	jne    40a398 <memcpy@plt+0x79a8>
  40a3a9:	cmp    cx,WORD PTR [rdx+0x14]
  40a3ad:	jne    40a398 <memcpy@plt+0x79a8>
  40a3af:	mov    rdx,QWORD PTR [rbp+0x0]
  40a3b3:	mov    edi,0x43
  40a3b8:	lea    rsi,[rip+0x1b09]        # 40bec8 <memcpy@plt+0x94d8>
  40a3bf:	xor    eax,eax
  40a3c1:	call   403730 <memcpy@plt+0xd40>
  40a3c6:	add    rsp,0x8
  40a3ca:	mov    rdi,rbx
  40a3cd:	pop    rbx
  40a3ce:	pop    rbp
  40a3cf:	pop    r12
  40a3d1:	pop    r13
  40a3d3:	jmp    4026e0 <free@plt>
  40a3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3e0:	mov    DWORD PTR [rbx+0x10],0x1
  40a3e7:	movzx  r9d,r12w
  40a3eb:	lea    r8,[rip+0x1c06]        # 40bff8 <memcpy@plt+0x9608>
  40a3f2:	mov    ecx,0x10
  40a3f7:	mov    edx,0x1
  40a3fc:	mov    esi,0x10
  40a401:	mov    rdi,rbx
  40a404:	call   402970 <__snprintf_chk@plt>
  40a409:	lea    rax,[rip+0xfffffffffffffc40]        # 40a050 <memcpy@plt+0x7660>
  40a410:	mov    BYTE PTR [rbx+0x16],0x0
  40a414:	mov    QWORD PTR [rbx+0x18],rax
  40a418:	jmp    40a375 <memcpy@plt+0x7985>
  40a41d:	nop    DWORD PTR [rax]
  40a420:	lea    rax,[rbx+0x20]
  40a424:	mov    QWORD PTR [rbx+0x20],rbx
  40a428:	mov    QWORD PTR [rbx+0x28],0x0
  40a430:	mov    QWORD PTR [rbx+0x30],rdi
  40a434:	mov    QWORD PTR [rdi+0x8],rax
  40a438:	mov    QWORD PTR [rip+0xad91],rax        # 4151d0 <memcpy@plt+0x127e0>
  40a43f:	inc    QWORD PTR [rip+0xad9a]        # 4151e0 <memcpy@plt+0x127f0>
  40a446:	add    rsp,0x8
  40a44a:	pop    rbx
  40a44b:	pop    rbp
  40a44c:	pop    r12
  40a44e:	pop    r13
  40a450:	ret    
  40a451:	mov    DWORD PTR [rbx+0x10],0x4
  40a458:	movzx  r9d,r12w
  40a45c:	lea    r8,[rip+0x1bc0]        # 40c023 <memcpy@plt+0x9633>
  40a463:	mov    ecx,0x10
  40a468:	mov    edx,0x1
  40a46d:	mov    esi,0x10
  40a472:	mov    rdi,rbx
  40a475:	call   402970 <__snprintf_chk@plt>
  40a47a:	lea    rax,[rip+0xfffffffffffff9ef]        # 409e70 <memcpy@plt+0x7480>
  40a481:	mov    QWORD PTR [rbx+0x18],rax
  40a485:	mov    BYTE PTR [rbx+0x16],0x1
  40a489:	jmp    40a375 <memcpy@plt+0x7985>
  40a48e:	mov    DWORD PTR [rbx+0x10],0x3
  40a495:	movzx  r9d,r12w
  40a499:	lea    r8,[rip+0x1b94]        # 40c034 <memcpy@plt+0x9644>
  40a4a0:	mov    ecx,0x10
  40a4a5:	mov    edx,0x1
  40a4aa:	mov    esi,0x10
  40a4af:	mov    rdi,rbx
  40a4b2:	xor    eax,eax
  40a4b4:	call   402970 <__snprintf_chk@plt>
  40a4b9:	lea    rax,[rip+0xfffffffffffff9b0]        # 409e70 <memcpy@plt+0x7480>
  40a4c0:	mov    BYTE PTR [rbx+0x16],0x0
  40a4c4:	mov    QWORD PTR [rbx+0x18],rax
  40a4c8:	jmp    40a375 <memcpy@plt+0x7985>
  40a4cd:	cmp    QWORD PTR [rip+0xad03],0x0        # 4151d8 <memcpy@plt+0x127e8>
  40a4d5:	lea    rax,[rbx+0x20]
  40a4d9:	mov    QWORD PTR [rbx+0x20],rbx
  40a4dd:	mov    QWORD PTR [rbx+0x28],0x0
  40a4e5:	mov    QWORD PTR [rbx+0x30],0x0
  40a4ed:	jne    40a438 <memcpy@plt+0x7a48>
  40a4f3:	mov    QWORD PTR [rip+0xacde],rax        # 4151d8 <memcpy@plt+0x127e8>
  40a4fa:	jmp    40a438 <memcpy@plt+0x7a48>
  40a4ff:	call   402830 <rb_outofmemory@plt>
  40a504:	mov    rcx,QWORD PTR [rbp+0x8]
  40a508:	mov    edi,0x43
  40a50d:	mov    rdx,r13
  40a510:	lea    rsi,[rip+0x1959]        # 40be70 <memcpy@plt+0x9480>
  40a517:	xor    eax,eax
  40a519:	call   403730 <memcpy@plt+0xd40>
  40a51e:	mov    edi,0x3
  40a523:	call   4025b0 <exit@plt>
  40a528:	nop    DWORD PTR [rax+rax*1+0x0]
  40a530:	endbr64 
  40a534:	push   r14
  40a536:	cmp    BYTE PTR [rip+0xac83],0x0        # 4151c0 <memcpy@plt+0x127d0>
  40a53d:	push   r13
  40a53f:	push   r12
  40a541:	mov    r12,rdi
  40a544:	push   rbp
  40a545:	push   rbx
  40a546:	je     40a552 <memcpy@plt+0x7b62>
  40a548:	cmp    QWORD PTR [rip+0xac90],0x0        # 4151e0 <memcpy@plt+0x127f0>
  40a550:	jne    40a578 <memcpy@plt+0x7b88>
  40a552:	mov    rax,0x410d80
  40a559:	mov    rdi,r12
  40a55c:	mov    esi,DWORD PTR [rax+0x18]
  40a55f:	call   404370 <memcpy@plt+0x1980>
  40a564:	pop    rbx
  40a565:	pop    rbp
  40a566:	pop    r12
  40a568:	pop    r13
  40a56a:	mov    eax,0x1
  40a56f:	pop    r14
  40a571:	ret    
  40a572:	nop    WORD PTR [rax+rax*1+0x0]
  40a578:	inc    DWORD PTR [rdi+0x1cc]
  40a57e:	mov    esi,0x20
  40a583:	mov    edi,0x1
  40a588:	call   4028f0 <calloc@plt>
  40a58d:	test   rax,rax
  40a590:	je     40a660 <memcpy@plt+0x7c70>
  40a596:	mov    rdx,0x410d80
  40a59d:	mov    edx,DWORD PTR [rdx+0x18]
  40a5a0:	shl    rdx,0x5
  40a5a4:	add    rdx,QWORD PTR [r12+0x1d0]
  40a5ac:	mov    QWORD PTR [rdx+0x10],rax
  40a5b0:	mov    rax,0x415200
  40a5b7:	mov    rbx,QWORD PTR [rax]
  40a5ba:	test   rbx,rbx
  40a5bd:	je     40a645 <memcpy@plt+0x7c55>
  40a5c3:	mov    rbp,rbx
  40a5c6:	lea    r14,[rip+0x14ac]        # 40ba79 <memcpy@plt+0x9089>
  40a5cd:	jmp    40a5d9 <memcpy@plt+0x7be9>
  40a5cf:	nop
  40a5d0:	mov    rbp,QWORD PTR [rbp+0x10]
  40a5d4:	test   rbp,rbp
  40a5d7:	je     40a607 <memcpy@plt+0x7c17>
  40a5d9:	mov    r13,QWORD PTR [rbp+0x0]
  40a5dd:	mov    rsi,r14
  40a5e0:	mov    rdi,QWORD PTR [r13+0x20]
  40a5e4:	call   4025f0 <strcasecmp@plt>
  40a5e9:	test   eax,eax
  40a5eb:	jne    40a5d0 <memcpy@plt+0x7be0>
  40a5ed:	mov    eax,DWORD PTR [r13+0x18]
  40a5f1:	shl    rax,0x5
  40a5f5:	add    rax,QWORD PTR [r12+0x1d0]
  40a5fd:	cmp    DWORD PTR [rax+0x18],0x2
  40a601:	jne    40a564 <memcpy@plt+0x7b74>
  40a607:	lea    r13,[rip+0x1470]        # 40ba7e <memcpy@plt+0x908e>
  40a60e:	jmp    40a619 <memcpy@plt+0x7c29>
  40a610:	mov    rbx,QWORD PTR [rbx+0x10]
  40a614:	test   rbx,rbx
  40a617:	je     40a645 <memcpy@plt+0x7c55>
  40a619:	mov    rbp,QWORD PTR [rbx]
  40a61c:	mov    rsi,r13
  40a61f:	mov    rdi,QWORD PTR [rbp+0x20]
  40a623:	call   4025f0 <strcasecmp@plt>
  40a628:	test   eax,eax
  40a62a:	jne    40a610 <memcpy@plt+0x7c20>
  40a62c:	mov    eax,DWORD PTR [rbp+0x18]
  40a62f:	shl    rax,0x5
  40a633:	add    rax,QWORD PTR [r12+0x1d0]
  40a63b:	cmp    DWORD PTR [rax+0x18],0x2
  40a63f:	jne    40a564 <memcpy@plt+0x7b74>
  40a645:	mov    rdi,r12
  40a648:	call   409d90 <memcpy@plt+0x73a0>
  40a64d:	pop    rbx
  40a64e:	pop    rbp
  40a64f:	pop    r12
  40a651:	pop    r13
  40a653:	mov    eax,0x1
  40a658:	pop    r14
  40a65a:	ret    
  40a65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a660:	call   402830 <rb_outofmemory@plt>
  40a665:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a670:	endbr64 
  40a674:	push   r15
  40a676:	push   r14
  40a678:	push   r13
  40a67a:	push   r12
  40a67c:	push   rbp
  40a67d:	push   rbx
  40a67e:	sub    rsp,0x8
  40a682:	mov    rax,0x410d80
  40a689:	mov    r12,QWORD PTR [rdi+0x1d0]
  40a690:	mov    eax,DWORD PTR [rax+0x18]
  40a693:	shl    rax,0x5
  40a697:	mov    rax,QWORD PTR [r12+rax*1+0x10]
  40a69c:	test   rax,rax
  40a69f:	je     40a6a7 <memcpy@plt+0x7cb7>
  40a6a1:	cmp    BYTE PTR [rax+0x18],0x0
  40a6a5:	je     40a6c0 <memcpy@plt+0x7cd0>
  40a6a7:	add    rsp,0x8
  40a6ab:	pop    rbx
  40a6ac:	pop    rbp
  40a6ad:	pop    r12
  40a6af:	pop    r13
  40a6b1:	pop    r14
  40a6b3:	pop    r15
  40a6b5:	ret    
  40a6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6c0:	mov    rax,0x415200
  40a6c7:	mov    r13,rdi
  40a6ca:	mov    rbx,QWORD PTR [rax]
  40a6cd:	test   rbx,rbx
  40a6d0:	je     40a74f <memcpy@plt+0x7d5f>
  40a6d2:	mov    rbp,rbx
  40a6d5:	lea    r15,[rip+0x139d]        # 40ba79 <memcpy@plt+0x9089>
  40a6dc:	jmp    40a6e9 <memcpy@plt+0x7cf9>
  40a6de:	xchg   ax,ax
  40a6e0:	mov    rbp,QWORD PTR [rbp+0x10]
  40a6e4:	test   rbp,rbp
  40a6e7:	je     40a70d <memcpy@plt+0x7d1d>
  40a6e9:	mov    r14,QWORD PTR [rbp+0x0]
  40a6ed:	mov    rsi,r15
  40a6f0:	mov    rdi,QWORD PTR [r14+0x20]
  40a6f4:	call   4025f0 <strcasecmp@plt>
  40a6f9:	test   eax,eax
  40a6fb:	jne    40a6e0 <memcpy@plt+0x7cf0>
  40a6fd:	mov    eax,DWORD PTR [r14+0x18]
  40a701:	shl    rax,0x5
  40a705:	cmp    DWORD PTR [r12+rax*1+0x18],0x2
  40a70b:	jne    40a6a7 <memcpy@plt+0x7cb7>
  40a70d:	lea    r14,[rip+0x136a]        # 40ba7e <memcpy@plt+0x908e>
  40a714:	jmp    40a729 <memcpy@plt+0x7d39>
  40a716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a720:	mov    rbx,QWORD PTR [rbx+0x10]
  40a724:	test   rbx,rbx
  40a727:	je     40a74f <memcpy@plt+0x7d5f>
  40a729:	mov    rbp,QWORD PTR [rbx]
  40a72c:	mov    rsi,r14
  40a72f:	mov    rdi,QWORD PTR [rbp+0x20]
  40a733:	call   4025f0 <strcasecmp@plt>
  40a738:	test   eax,eax
  40a73a:	jne    40a720 <memcpy@plt+0x7d30>
  40a73c:	mov    eax,DWORD PTR [rbp+0x18]
  40a73f:	shl    rax,0x5
  40a743:	cmp    DWORD PTR [r12+rax*1+0x18],0x2
  40a749:	jne    40a6a7 <memcpy@plt+0x7cb7>
  40a74f:	add    rsp,0x8
  40a753:	pop    rbx
  40a754:	pop    rbp
  40a755:	pop    r12
  40a757:	mov    rdi,r13
  40a75a:	pop    r13
  40a75c:	pop    r14
  40a75e:	pop    r15
  40a760:	jmp    409d90 <memcpy@plt+0x73a0>
  40a765:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a770:	endbr64 
  40a774:	push   r14
  40a776:	lea    rsi,[rip+0x1874]        # 40bff1 <memcpy@plt+0x9601>
  40a77d:	push   r13
  40a77f:	push   r12
  40a781:	mov    r12,rdx
  40a784:	push   rbp
  40a785:	push   rbx
  40a786:	sub    rsp,0x30
  40a78a:	mov    rbx,QWORD PTR [rdx]
  40a78d:	mov    rax,QWORD PTR fs:0x28
  40a796:	mov    QWORD PTR [rsp+0x28],rax
  40a79b:	xor    eax,eax
  40a79d:	mov    rdi,rbx
  40a7a0:	call   4025f0 <strcasecmp@plt>
  40a7a5:	mov    r13,QWORD PTR [r12+0x8]
  40a7aa:	test   eax,eax
  40a7ac:	je     40a83b <memcpy@plt+0x7e4b>
  40a7b2:	lea    rsi,[rip+0x184a]        # 40c003 <memcpy@plt+0x9613>
  40a7b9:	mov    rdi,rbx
  40a7bc:	call   4025f0 <strcasecmp@plt>
  40a7c1:	test   eax,eax
  40a7c3:	je     40aa8b <memcpy@plt+0x809b>
  40a7c9:	lea    rsi,[rip+0x183a]        # 40c00a <memcpy@plt+0x961a>
  40a7d0:	mov    rdi,rbx
  40a7d3:	call   4025f0 <strcasecmp@plt>
  40a7d8:	test   eax,eax
  40a7da:	je     40aa81 <memcpy@plt+0x8091>
  40a7e0:	lea    rsi,[rip+0x182f]        # 40c016 <memcpy@plt+0x9626>
  40a7e7:	mov    rdi,rbx
  40a7ea:	call   4025f0 <strcasecmp@plt>
  40a7ef:	test   eax,eax
  40a7f1:	je     40aa95 <memcpy@plt+0x80a5>
  40a7f7:	mov    edx,0xa
  40a7fc:	xor    esi,esi
  40a7fe:	mov    rdi,r13
  40a801:	call   4027d0 <strtol@plt>
  40a806:	lea    edx,[rax-0x1]
  40a809:	cmp    edx,0xfffe
  40a80f:	jbe    40aa9f <memcpy@plt+0x80af>
  40a815:	mov    rcx,QWORD PTR [r12+0x8]
  40a81a:	mov    rdx,QWORD PTR [r12]
  40a81e:	mov    edi,0x43
  40a823:	lea    rsi,[rip+0x16ce]        # 40bef8 <memcpy@plt+0x9508>
  40a82a:	xor    eax,eax
  40a82c:	call   403730 <memcpy@plt+0xd40>
  40a831:	mov    edi,0x3
  40a836:	call   4025b0 <exit@plt>
  40a83b:	mov    ebp,0x1
  40a840:	mov    edx,0xa
  40a845:	xor    esi,esi
  40a847:	mov    rdi,r13
  40a84a:	call   4027d0 <strtol@plt>
  40a84f:	lea    edx,[rax-0x1]
  40a852:	cmp    edx,0xfffe
  40a858:	ja     40a815 <memcpy@plt+0x7e25>
  40a85a:	mov    rdx,QWORD PTR [rip+0xa96f]        # 4151d0 <memcpy@plt+0x127e0>
  40a861:	mov    esi,eax
  40a863:	test   rdx,rdx
  40a866:	jne    40a87d <memcpy@plt+0x7e8d>
  40a868:	jmp    40aac2 <memcpy@plt+0x80d2>
  40a86d:	nop    DWORD PTR [rax]
  40a870:	mov    rdx,QWORD PTR [rdx+0x10]
  40a874:	test   rdx,rdx
  40a877:	je     40aac2 <memcpy@plt+0x80d2>
  40a87d:	mov    rbx,QWORD PTR [rdx]
  40a880:	cmp    DWORD PTR [rbx+0x10],ebp
  40a883:	jne    40a870 <memcpy@plt+0x7e80>
  40a885:	cmp    si,WORD PTR [rbx+0x14]
  40a889:	jne    40a870 <memcpy@plt+0x7e80>
  40a88b:	mov    rbp,0x4151f0
  40a892:	lea    r12,[rsp+0x10]
  40a897:	mov    rdi,QWORD PTR [rbp+0x0]
  40a89b:	mov    rsi,r12
  40a89e:	call   402730 <rb_dictionary_foreach_start@plt>
  40a8a3:	movabs r13,0xffffffffffff
  40a8ad:	nop    DWORD PTR [rax]
  40a8b0:	mov    rdi,QWORD PTR [rbp+0x0]
  40a8b4:	mov    rsi,r12
  40a8b7:	call   402610 <rb_dictionary_foreach_cur@plt>
  40a8bc:	test   rax,rax
  40a8bf:	je     40a9c8 <memcpy@plt+0x7fd8>
  40a8c5:	mov    rdx,0x410d80
  40a8cc:	mov    edx,DWORD PTR [rdx+0x18]
  40a8cf:	shl    rdx,0x5
  40a8d3:	add    rdx,QWORD PTR [rax+0x1d0]
  40a8da:	mov    r14,QWORD PTR [rdx+0x10]
  40a8de:	test   r14,r14
  40a8e1:	je     40a948 <memcpy@plt+0x7f58>
  40a8e3:	mov    r8d,DWORD PTR [rax+0x1cc]
  40a8ea:	lea    edx,[r8+0x1]
  40a8ee:	mov    DWORD PTR [rax+0x1cc],edx
  40a8f4:	mov    rdx,QWORD PTR [r14]
  40a8f7:	test   rdx,rdx
  40a8fa:	je     40a93c <memcpy@plt+0x7f4c>
  40a8fc:	mov    rdi,QWORD PTR [rdx]
  40a8ff:	mov    rsi,QWORD PTR [rbx+0x10]
  40a903:	mov    rcx,QWORD PTR [rdi+0x10]
  40a907:	and    rsi,r13
  40a90a:	mov    r10,QWORD PTR [rcx+0x10]
  40a90e:	and    r10,r13
  40a911:	cmp    rsi,r10
  40a914:	jne    40a933 <memcpy@plt+0x7f43>
  40a916:	jmp    40a960 <memcpy@plt+0x7f70>
  40a918:	nop    DWORD PTR [rax+rax*1+0x0]
  40a920:	mov    rdi,QWORD PTR [rdx]
  40a923:	mov    rcx,QWORD PTR [rdi+0x10]
  40a927:	mov    r9,QWORD PTR [rcx+0x10]
  40a92b:	and    r9,r13
  40a92e:	cmp    r9,rsi
  40a931:	je     40a960 <memcpy@plt+0x7f70>
  40a933:	mov    rdx,QWORD PTR [rdx+0x10]
  40a937:	test   rdx,rdx
  40a93a:	jne    40a920 <memcpy@plt+0x7f30>
  40a93c:	mov    DWORD PTR [rax+0x1cc],r8d
  40a943:	test   r8d,r8d
  40a946:	je     40a9ba <memcpy@plt+0x7fca>
  40a948:	mov    rdi,QWORD PTR [rbp+0x0]
  40a94c:	mov    rsi,r12
  40a94f:	call   4026c0 <rb_dictionary_foreach_next@plt>
  40a954:	jmp    40a8b0 <memcpy@plt+0x7ec0>
  40a959:	nop    DWORD PTR [rax+0x0]
  40a960:	mov    rcx,QWORD PTR [rdi+0x30]
  40a964:	mov    rdx,QWORD PTR [rdi+0x28]
  40a968:	test   rcx,rcx
  40a96b:	je     40aa60 <memcpy@plt+0x8070>
  40a971:	mov    QWORD PTR [rcx+0x8],rdx
  40a975:	mov    rdx,QWORD PTR [rdi+0x28]
  40a979:	test   rdx,rdx
  40a97c:	je     40aa50 <memcpy@plt+0x8060>
  40a982:	mov    QWORD PTR [rdx+0x10],rcx
  40a986:	dec    QWORD PTR [r14+0x10]
  40a98a:	mov    QWORD PTR [rsp+0x8],rax
  40a98f:	call   4026e0 <free@plt>
  40a994:	cmp    QWORD PTR [r14+0x10],0x0
  40a999:	mov    rax,QWORD PTR [rsp+0x8]
  40a99e:	je     40aa30 <memcpy@plt+0x8040>
  40a9a4:	mov    esi,DWORD PTR [rax+0x1cc]
  40a9aa:	lea    r8d,[rsi-0x1]
  40a9ae:	mov    DWORD PTR [rax+0x1cc],r8d
  40a9b5:	test   r8d,r8d
  40a9b8:	jne    40a948 <memcpy@plt+0x7f58>
  40a9ba:	mov    rdi,rax
  40a9bd:	call   403e40 <memcpy@plt+0x1450>
  40a9c2:	jmp    40a948 <memcpy@plt+0x7f58>
  40a9c4:	nop    DWORD PTR [rax+0x0]
  40a9c8:	mov    rdx,QWORD PTR [rbx+0x30]
  40a9cc:	mov    rax,QWORD PTR [rbx+0x28]
  40a9d0:	test   rdx,rdx
  40a9d3:	je     40aa75 <memcpy@plt+0x8085>
  40a9d9:	mov    QWORD PTR [rdx+0x8],rax
  40a9dd:	mov    rax,QWORD PTR [rbx+0x28]
  40a9e1:	test   rax,rax
  40a9e4:	je     40aa69 <memcpy@plt+0x8079>
  40a9ea:	mov    QWORD PTR [rax+0x10],rdx
  40a9ee:	mov    rdi,rbx
  40a9f1:	dec    QWORD PTR [rip+0xa7e8]        # 4151e0 <memcpy@plt+0x127f0>
  40a9f8:	call   4026e0 <free@plt>
  40a9fd:	cmp    QWORD PTR [rip+0xa7db],0x0        # 4151e0 <memcpy@plt+0x127f0>
  40aa05:	jne    40aa0e <memcpy@plt+0x801e>
  40aa07:	mov    BYTE PTR [rip+0xa7b2],0x0        # 4151c0 <memcpy@plt+0x127d0>
  40aa0e:	mov    rax,QWORD PTR [rsp+0x28]
  40aa13:	xor    rax,QWORD PTR fs:0x28
  40aa1c:	jne    40aad1 <memcpy@plt+0x80e1>
  40aa22:	add    rsp,0x30
  40aa26:	pop    rbx
  40aa27:	pop    rbp
  40aa28:	pop    r12
  40aa2a:	pop    r13
  40aa2c:	pop    r14
  40aa2e:	ret    
  40aa2f:	nop
  40aa30:	mov    rdi,rax
  40aa33:	mov    QWORD PTR [rsp+0x8],rax
  40aa38:	call   4090b0 <memcpy@plt+0x66c0>
  40aa3d:	mov    rax,QWORD PTR [rsp+0x8]
  40aa42:	jmp    40a9a4 <memcpy@plt+0x7fb4>
  40aa47:	nop    WORD PTR [rax+rax*1+0x0]
  40aa50:	mov    QWORD PTR [r14],rcx
  40aa53:	jmp    40a986 <memcpy@plt+0x7f96>
  40aa58:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa60:	mov    QWORD PTR [r14+0x8],rdx
  40aa64:	jmp    40a979 <memcpy@plt+0x7f89>
  40aa69:	mov    QWORD PTR [rip+0xa760],rdx        # 4151d0 <memcpy@plt+0x127e0>
  40aa70:	jmp    40a9ee <memcpy@plt+0x7ffe>
  40aa75:	mov    QWORD PTR [rip+0xa75c],rax        # 4151d8 <memcpy@plt+0x127e8>
  40aa7c:	jmp    40a9e1 <memcpy@plt+0x7ff1>
  40aa81:	mov    ebp,0x3
  40aa86:	jmp    40a840 <memcpy@plt+0x7e50>
  40aa8b:	mov    ebp,0x2
  40aa90:	jmp    40a840 <memcpy@plt+0x7e50>
  40aa95:	mov    ebp,0x4
  40aa9a:	jmp    40a840 <memcpy@plt+0x7e50>
  40aa9f:	mov    rdx,QWORD PTR [r12]
  40aaa3:	mov    ecx,eax
  40aaa5:	lea    rsi,[rip+0x147c]        # 40bf28 <memcpy@plt+0x9538>
  40aaac:	mov    edi,0x43
  40aab1:	xor    eax,eax
  40aab3:	call   403730 <memcpy@plt+0xd40>
  40aab8:	mov    edi,0x3
  40aabd:	call   4025b0 <exit@plt>
  40aac2:	mov    ecx,eax
  40aac4:	mov    rdx,QWORD PTR [r12]
  40aac8:	lea    rsi,[rip+0x1491]        # 40bf60 <memcpy@plt+0x9570>
  40aacf:	jmp    40aaac <memcpy@plt+0x80bc>
  40aad1:	call   402880 <__stack_chk_fail@plt>
  40aad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aae0:	endbr64 
  40aae4:	push   rbp
  40aae5:	push   rbx
  40aae6:	mov    rbx,rdx
  40aae9:	sub    rsp,0x8
  40aaed:	mov    rax,0x410d80
  40aaf4:	mov    rdx,QWORD PTR [rdx]
  40aaf7:	mov    eax,DWORD PTR [rax+0x18]
  40aafa:	shl    rax,0x5
  40aafe:	add    rax,QWORD PTR [rdx+0x1d0]
  40ab05:	mov    rbp,QWORD PTR [rax+0x10]
  40ab09:	test   esi,esi
  40ab0b:	jne    40ab50 <memcpy@plt+0x8160>
  40ab0d:	cmp    BYTE PTR [rip+0xa6ac],0x0        # 4151c0 <memcpy@plt+0x127d0>
  40ab14:	je     40ab50 <memcpy@plt+0x8160>
  40ab16:	movzx  eax,WORD PTR [rdx+0xf8]
  40ab1d:	mov    rcx,QWORD PTR [rbx+0x10]
  40ab21:	cmp    ax,0x2
  40ab25:	je     40abb0 <memcpy@plt+0x81c0>
  40ab2b:	cmp    ax,0xa
  40ab2f:	jne    40ab50 <memcpy@plt+0x8160>
  40ab31:	cmp    BYTE PTR [rcx+0x17],0x0
  40ab35:	je     40ab50 <memcpy@plt+0x8160>
  40ab37:	cmp    QWORD PTR [rip+0xa679],0x0        # 4151b8 <memcpy@plt+0x127c8>
  40ab3f:	je     40ab50 <memcpy@plt+0x8160>
  40ab41:	mov    rdi,rbx
  40ab44:	call   QWORD PTR [rcx+0x18]
  40ab47:	nop    WORD PTR [rax+rax*1+0x0]
  40ab50:	endbr64 
  40ab54:	mov    rdi,QWORD PTR [rbx+0x8]
  40ab58:	call   4027c0 <rb_close@plt>
  40ab5d:	test   rbp,rbp
  40ab60:	je     40abbc <memcpy@plt+0x81cc>
  40ab62:	mov    rdx,QWORD PTR [rbx+0x30]
  40ab66:	mov    rax,QWORD PTR [rbx+0x28]
  40ab6a:	test   rdx,rdx
  40ab6d:	je     40aba0 <memcpy@plt+0x81b0>
  40ab6f:	mov    QWORD PTR [rdx+0x8],rax
  40ab73:	mov    rax,QWORD PTR [rbx+0x28]
  40ab77:	test   rax,rax
  40ab7a:	je     40ab98 <memcpy@plt+0x81a8>
  40ab7c:	mov    QWORD PTR [rax+0x10],rdx
  40ab80:	dec    QWORD PTR [rbp+0x10]
  40ab84:	add    rsp,0x8
  40ab88:	mov    rdi,rbx
  40ab8b:	pop    rbx
  40ab8c:	pop    rbp
  40ab8d:	jmp    4026e0 <free@plt>
  40ab92:	nop    WORD PTR [rax+rax*1+0x0]
  40ab98:	mov    QWORD PTR [rbp+0x0],rdx
  40ab9c:	jmp    40ab80 <memcpy@plt+0x8190>
  40ab9e:	xchg   ax,ax
  40aba0:	mov    QWORD PTR [rbp+0x8],rax
  40aba4:	jmp    40ab77 <memcpy@plt+0x8187>
  40aba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abb0:	cmp    QWORD PTR [rip+0xa540],0x0        # 4150f8 <memcpy@plt+0x12708>
  40abb8:	jne    40ab41 <memcpy@plt+0x8151>
  40abba:	jmp    40ab50 <memcpy@plt+0x8160>
  40abbc:	call   409a30 <memcpy@plt+0x7040>
  40abc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40abd0:	endbr64 
  40abd4:	push   r15
  40abd6:	lea    r15,[rip+0x41b3]        # 40ed90 <memcpy@plt+0xc3a0>
  40abdd:	push   r14
  40abdf:	mov    r14,rdx
  40abe2:	push   r13
  40abe4:	mov    r13,rsi
  40abe7:	push   r12
  40abe9:	mov    r12d,edi
  40abec:	push   rbp
  40abed:	lea    rbp,[rip+0x41a4]        # 40ed98 <memcpy@plt+0xc3a8>
  40abf4:	push   rbx
  40abf5:	sub    rbp,r15
  40abf8:	sub    rsp,0x8
  40abfc:	call   402000 <rb_strcasecmp@plt-0x510>
  40ac01:	sar    rbp,0x3
  40ac05:	je     40ac26 <memcpy@plt+0x8236>
  40ac07:	xor    ebx,ebx
  40ac09:	nop    DWORD PTR [rax+0x0]
  40ac10:	mov    rdx,r14
  40ac13:	mov    rsi,r13
  40ac16:	mov    edi,r12d
  40ac19:	call   QWORD PTR [r15+rbx*8]
  40ac1d:	add    rbx,0x1
  40ac21:	cmp    rbp,rbx
  40ac24:	jne    40ac10 <memcpy@plt+0x8220>
  40ac26:	add    rsp,0x8
  40ac2a:	pop    rbx
  40ac2b:	pop    rbp
  40ac2c:	pop    r12
  40ac2e:	pop    r13
  40ac30:	pop    r14
  40ac32:	pop    r15
  40ac34:	ret    
  40ac35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ac40:	endbr64 
  40ac44:	ret    

Disassembly of section .fini:

000000000040ac48 <.fini>:
  40ac48:	endbr64 
  40ac4c:	sub    rsp,0x8
  40ac50:	add    rsp,0x8
  40ac54:	ret    
