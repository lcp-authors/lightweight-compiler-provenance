
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x11fc9]        # 413fd8 <rb_strcasecmp@plt+0x11a68>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_helper_loop@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <rb_helper_loop@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x11fe2]        # 414008 <rb_strcasecmp@plt+0x11a98>
  402026:	jmp    QWORD PTR [rip+0x11fe4]        # 414010 <rb_strcasecmp@plt+0x11aa0>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <rb_helper_loop@plt>:
  402030:	jmp    QWORD PTR [rip+0x11fe2]        # 414018 <rb_strcasecmp@plt+0x11aa8>
  402036:	push   0x0
  40203b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402040 <memset@plt>:
  402040:	jmp    QWORD PTR [rip+0x11fda]        # 414020 <rb_strcasecmp@plt+0x11ab0>
  402046:	push   0x1
  40204b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402050 <rb_event_addish@plt>:
  402050:	jmp    QWORD PTR [rip+0x11fd2]        # 414028 <rb_strcasecmp@plt+0x11ab8>
  402056:	push   0x2
  40205b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402060 <rb_ignore_errno@plt>:
  402060:	jmp    QWORD PTR [rip+0x11fca]        # 414030 <rb_strcasecmp@plt+0x11ac0>
  402066:	push   0x3
  40206b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402070 <rb_connect_tcp_ssl@plt>:
  402070:	jmp    QWORD PTR [rip+0x11fc2]        # 414038 <rb_strcasecmp@plt+0x11ac8>
  402076:	push   0x4
  40207b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402080 <snprintf@plt>:
  402080:	jmp    QWORD PTR [rip+0x11fba]        # 414040 <rb_strcasecmp@plt+0x11ad0>
  402086:	push   0x5
  40208b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402090 <rb_connect_tcp@plt>:
  402090:	jmp    QWORD PTR [rip+0x11fb2]        # 414048 <rb_strcasecmp@plt+0x11ad8>
  402096:	push   0x6
  40209b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020a0 <rb_event_delete@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x11faa]        # 414050 <rb_strcasecmp@plt+0x11ae0>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020b0 <rb_setselect@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x11fa2]        # 414058 <rb_strcasecmp@plt+0x11ae8>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020c0 <rb_get_fd@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x11f9a]        # 414060 <rb_strcasecmp@plt+0x11af0>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020d0 <htons@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x11f92]        # 414068 <rb_strcasecmp@plt+0x11af8>
  4020d6:	push   0xa
  4020db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020e0 <exit@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x11f8a]        # 414070 <rb_strcasecmp@plt+0x11b00>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020f0 <__assert_fail@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x11f82]        # 414078 <rb_strcasecmp@plt+0x11b08>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402100 <getaddrinfo@plt>:
  402100:	jmp    QWORD PTR [rip+0x11f7a]        # 414080 <rb_strcasecmp@plt+0x11b10>
  402106:	push   0xd
  40210b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402110 <rb_socket@plt>:
  402110:	jmp    QWORD PTR [rip+0x11f72]        # 414088 <rb_strcasecmp@plt+0x11b18>
  402116:	push   0xe
  40211b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402120 <strcasecmp@plt>:
  402120:	jmp    QWORD PTR [rip+0x11f6a]        # 414090 <rb_strcasecmp@plt+0x11b20>
  402126:	push   0xf
  40212b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402130 <rb_strtok_r@plt>:
  402130:	jmp    QWORD PTR [rip+0x11f62]        # 414098 <rb_strcasecmp@plt+0x11b28>
  402136:	push   0x10
  40213b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402140 <rb_dictionary_foreach_cur@plt>:
  402140:	jmp    QWORD PTR [rip+0x11f5a]        # 4140a0 <rb_strcasecmp@plt+0x11b30>
  402146:	push   0x11
  40214b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402150 <strpbrk@plt>:
  402150:	jmp    QWORD PTR [rip+0x11f52]        # 4140a8 <rb_strcasecmp@plt+0x11b38>
  402156:	push   0x12
  40215b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402160 <rb_helper_child@plt>:
  402160:	jmp    QWORD PTR [rip+0x11f4a]        # 4140b0 <rb_strcasecmp@plt+0x11b40>
  402166:	push   0x13
  40216b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402170 <strncmp@plt>:
  402170:	jmp    QWORD PTR [rip+0x11f42]        # 4140b8 <rb_strcasecmp@plt+0x11b48>
  402176:	push   0x14
  40217b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402180 <malloc@plt>:
  402180:	jmp    QWORD PTR [rip+0x11f3a]        # 4140c0 <rb_strcasecmp@plt+0x11b50>
  402186:	push   0x15
  40218b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402190 <fopen@plt>:
  402190:	jmp    QWORD PTR [rip+0x11f32]        # 4140c8 <rb_strcasecmp@plt+0x11b58>
  402196:	push   0x16
  40219b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021a0 <rb_write@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x11f2a]        # 4140d0 <rb_strcasecmp@plt+0x11b60>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021b0 <setsockopt@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x11f22]        # 4140d8 <rb_strcasecmp@plt+0x11b68>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021c0 <fgets@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x11f1a]        # 4140e0 <rb_strcasecmp@plt+0x11b70>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021d0 <rb_strlcpy@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x11f12]        # 4140e8 <rb_strcasecmp@plt+0x11b78>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021e0 <rb_dictionary_foreach_next@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x11f0a]        # 4140f0 <rb_strcasecmp@plt+0x11b80>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021f0 <freeaddrinfo@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x11f02]        # 4140f8 <rb_strcasecmp@plt+0x11b88>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402200 <free@plt>:
  402200:	jmp    QWORD PTR [rip+0x11efa]        # 414100 <rb_strcasecmp@plt+0x11b90>
  402206:	push   0x1d
  40220b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402210 <strlen@plt>:
  402210:	jmp    QWORD PTR [rip+0x11ef2]        # 414108 <rb_strcasecmp@plt+0x11b98>
  402216:	push   0x1e
  40221b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402220 <rb_string_to_array@plt>:
  402220:	jmp    QWORD PTR [rip+0x11eea]        # 414110 <rb_strcasecmp@plt+0x11ba0>
  402226:	push   0x1f
  40222b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402230 <rb_read@plt>:
  402230:	jmp    QWORD PTR [rip+0x11ee2]        # 414118 <rb_strcasecmp@plt+0x11ba8>
  402236:	push   0x20
  40223b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402240 <__ctype_b_loc@plt>:
  402240:	jmp    QWORD PTR [rip+0x11eda]        # 414120 <rb_strcasecmp@plt+0x11bb0>
  402246:	push   0x21
  40224b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402250 <rb_dictionary_foreach_start@plt>:
  402250:	jmp    QWORD PTR [rip+0x11ed2]        # 414128 <rb_strcasecmp@plt+0x11bb8>
  402256:	push   0x22
  40225b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402260 <sprintf@plt>:
  402260:	jmp    QWORD PTR [rip+0x11eca]        # 414130 <rb_strcasecmp@plt+0x11bc0>
  402266:	push   0x23
  40226b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402270 <ntohs@plt>:
  402270:	jmp    QWORD PTR [rip+0x11ec2]        # 414138 <rb_strcasecmp@plt+0x11bc8>
  402276:	push   0x24
  40227b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402280 <rb_inet_pton_sock@plt>:
  402280:	jmp    QWORD PTR [rip+0x11eba]        # 414140 <rb_strcasecmp@plt+0x11bd0>
  402286:	push   0x25
  40228b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402290 <strrchr@plt>:
  402290:	jmp    QWORD PTR [rip+0x11eb2]        # 414148 <rb_strcasecmp@plt+0x11bd8>
  402296:	push   0x26
  40229b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022a0 <rb_current_time@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x11eaa]        # 414150 <rb_strcasecmp@plt+0x11be0>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022b0 <rb_dictionary_delete@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x11ea2]        # 414158 <rb_strcasecmp@plt+0x11be8>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022c0 <strerror@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x11e9a]        # 414160 <rb_strcasecmp@plt+0x11bf0>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022d0 <strstr@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x11e92]        # 414168 <rb_strcasecmp@plt+0x11bf8>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022e0 <rb_free_rb_dlink_node@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x11e8a]        # 414170 <rb_strcasecmp@plt+0x11c00>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022f0 <sigaction@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x11e82]        # 414178 <rb_strcasecmp@plt+0x11c08>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402300 <rb_close@plt>:
  402300:	jmp    QWORD PTR [rip+0x11e7a]        # 414180 <rb_strcasecmp@plt+0x11c10>
  402306:	push   0x2d
  40230b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402310 <strtol@plt>:
  402310:	jmp    QWORD PTR [rip+0x11e72]        # 414188 <rb_strcasecmp@plt+0x11c18>
  402316:	push   0x2e
  40231b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402320 <getsockname@plt>:
  402320:	jmp    QWORD PTR [rip+0x11e6a]        # 414190 <rb_strcasecmp@plt+0x11c20>
  402326:	push   0x2f
  40232b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402330 <atoi@plt>:
  402330:	jmp    QWORD PTR [rip+0x11e62]        # 414198 <rb_strcasecmp@plt+0x11c28>
  402336:	push   0x30
  40233b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402340 <rb_dictionary_destroy@plt>:
  402340:	jmp    QWORD PTR [rip+0x11e5a]        # 4141a0 <rb_strcasecmp@plt+0x11c30>
  402346:	push   0x31
  40234b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402350 <rb_lib_log@plt>:
  402350:	jmp    QWORD PTR [rip+0x11e52]        # 4141a8 <rb_strcasecmp@plt+0x11c38>
  402356:	push   0x32
  40235b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402360 <memmove@plt>:
  402360:	jmp    QWORD PTR [rip+0x11e4a]        # 4141b0 <rb_strcasecmp@plt+0x11c40>
  402366:	push   0x33
  40236b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402370 <strchr@plt>:
  402370:	jmp    QWORD PTR [rip+0x11e42]        # 4141b8 <rb_strcasecmp@plt+0x11c48>
  402376:	push   0x34
  40237b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402380 <vsnprintf@plt>:
  402380:	jmp    QWORD PTR [rip+0x11e3a]        # 4141c0 <rb_strcasecmp@plt+0x11c50>
  402386:	push   0x35
  40238b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402390 <rb_init_prng@plt>:
  402390:	jmp    QWORD PTR [rip+0x11e32]        # 4141c8 <rb_strcasecmp@plt+0x11c58>
  402396:	push   0x36
  40239b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023a0 <rb_dictionary_retrieve@plt>:
  4023a0:	jmp    QWORD PTR [rip+0x11e2a]        # 4141d0 <rb_strcasecmp@plt+0x11c60>
  4023a6:	push   0x37
  4023ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023b0 <rb_outofmemory@plt>:
  4023b0:	jmp    QWORD PTR [rip+0x11e22]        # 4141d8 <rb_strcasecmp@plt+0x11c68>
  4023b6:	push   0x38
  4023bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023c0 <__errno_location@plt>:
  4023c0:	jmp    QWORD PTR [rip+0x11e1a]        # 4141e0 <rb_strcasecmp@plt+0x11c70>
  4023c6:	push   0x39
  4023cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023d0 <rb_dictionary_add@plt>:
  4023d0:	jmp    QWORD PTR [rip+0x11e12]        # 4141e8 <rb_strcasecmp@plt+0x11c78>
  4023d6:	push   0x3a
  4023db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023e0 <rb_set_time@plt>:
  4023e0:	jmp    QWORD PTR [rip+0x11e0a]        # 4141f0 <rb_strcasecmp@plt+0x11c80>
  4023e6:	push   0x3b
  4023eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023f0 <sigaddset@plt>:
  4023f0:	jmp    QWORD PTR [rip+0x11e02]        # 4141f8 <rb_strcasecmp@plt+0x11c88>
  4023f6:	push   0x3c
  4023fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402400 <__stack_chk_fail@plt>:
  402400:	jmp    QWORD PTR [rip+0x11dfa]        # 414200 <rb_strcasecmp@plt+0x11c90>
  402406:	push   0x3d
  40240b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402410 <rb_helper_read@plt>:
  402410:	jmp    QWORD PTR [rip+0x11df2]        # 414208 <rb_strcasecmp@plt+0x11c98>
  402416:	push   0x3e
  40241b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402420 <strcmp@plt>:
  402420:	jmp    QWORD PTR [rip+0x11dea]        # 414210 <rb_strcasecmp@plt+0x11ca0>
  402426:	push   0x3f
  40242b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402430 <rb_inet_ntop_sock@plt>:
  402430:	jmp    QWORD PTR [rip+0x11de2]        # 414218 <rb_strcasecmp@plt+0x11ca8>
  402436:	push   0x40
  40243b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402440 <rb_dictionary_find@plt>:
  402440:	jmp    QWORD PTR [rip+0x11dda]        # 414220 <rb_strcasecmp@plt+0x11cb0>
  402446:	push   0x41
  40244b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402450 <strcpy@plt>:
  402450:	jmp    QWORD PTR [rip+0x11dd2]        # 414228 <rb_strcasecmp@plt+0x11cb8>
  402456:	push   0x42
  40245b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402460 <rb_dictionary_create@plt>:
  402460:	jmp    QWORD PTR [rip+0x11dca]        # 414230 <rb_strcasecmp@plt+0x11cc0>
  402466:	push   0x43
  40246b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402470 <rb_accept_tcp@plt>:
  402470:	jmp    QWORD PTR [rip+0x11dc2]        # 414238 <rb_strcasecmp@plt+0x11cc8>
  402476:	push   0x44
  40247b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402480 <memcmp@plt>:
  402480:	jmp    QWORD PTR [rip+0x11dba]        # 414240 <rb_strcasecmp@plt+0x11cd0>
  402486:	push   0x45
  40248b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402490 <calloc@plt>:
  402490:	jmp    QWORD PTR [rip+0x11db2]        # 414248 <rb_strcasecmp@plt+0x11cd8>
  402496:	push   0x46
  40249b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024a0 <rb_helper_write@plt>:
  4024a0:	jmp    QWORD PTR [rip+0x11daa]        # 414250 <rb_strcasecmp@plt+0x11ce0>
  4024a6:	push   0x47
  4024ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024b0 <fclose@plt>:
  4024b0:	jmp    QWORD PTR [rip+0x11da2]        # 414258 <rb_strcasecmp@plt+0x11ce8>
  4024b6:	push   0x48
  4024bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024c0 <recvfrom@plt>:
  4024c0:	jmp    QWORD PTR [rip+0x11d9a]        # 414260 <rb_strcasecmp@plt+0x11cf0>
  4024c6:	push   0x49
  4024cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024d0 <rb_event_add@plt>:
  4024d0:	jmp    QWORD PTR [rip+0x11d92]        # 414268 <rb_strcasecmp@plt+0x11cf8>
  4024d6:	push   0x4a
  4024db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024e0 <strtoull@plt>:
  4024e0:	jmp    QWORD PTR [rip+0x11d8a]        # 414270 <rb_strcasecmp@plt+0x11d00>
  4024e6:	push   0x4b
  4024eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024f0 <rb_get_random@plt>:
  4024f0:	jmp    QWORD PTR [rip+0x11d82]        # 414278 <rb_strcasecmp@plt+0x11d08>
  4024f6:	push   0x4c
  4024fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402500 <rb_make_rb_dlink_node@plt>:
  402500:	jmp    QWORD PTR [rip+0x11d7a]        # 414280 <rb_strcasecmp@plt+0x11d10>
  402506:	push   0x4d
  40250b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402510 <sigemptyset@plt>:
  402510:	jmp    QWORD PTR [rip+0x11d72]        # 414288 <rb_strcasecmp@plt+0x11d18>
  402516:	push   0x4e
  40251b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402520 <sendto@plt>:
  402520:	jmp    QWORD PTR [rip+0x11d6a]        # 414290 <rb_strcasecmp@plt+0x11d20>
  402526:	push   0x4f
  40252b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402530 <bind@plt>:
  402530:	jmp    QWORD PTR [rip+0x11d62]        # 414298 <rb_strcasecmp@plt+0x11d28>
  402536:	push   0x50
  40253b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402540 <fwrite@plt>:
  402540:	jmp    QWORD PTR [rip+0x11d5a]        # 4142a0 <rb_strcasecmp@plt+0x11d30>
  402546:	push   0x51
  40254b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402550 <rb_listen@plt>:
  402550:	jmp    QWORD PTR [rip+0x11d52]        # 4142a8 <rb_strcasecmp@plt+0x11d38>
  402556:	push   0x52
  40255b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402560 <memcpy@plt>:
  402560:	jmp    QWORD PTR [rip+0x11d4a]        # 4142b0 <rb_strcasecmp@plt+0x11d40>
  402566:	push   0x53
  40256b:	jmp    402020 <rb_helper_loop@plt-0x10>

Disassembly of section .plt.got:

0000000000402570 <rb_strcasecmp@plt>:
  402570:	jmp    QWORD PTR [rip+0x11a72]        # 413fe8 <rb_strcasecmp@plt+0x11a78>
  402576:	xchg   ax,ax

Disassembly of section .text:

0000000000402580 <.text>:
  402580:	endbr64 
  402584:	xor    ebp,ebp
  402586:	mov    r9,rdx
  402589:	pop    rsi
  40258a:	mov    rdx,rsp
  40258d:	and    rsp,0xfffffffffffffff0
  402591:	push   rax
  402592:	push   rsp
  402593:	mov    r8,0x40e0c0
  40259a:	mov    rcx,0x40e050
  4025a1:	mov    rdi,0x402aba
  4025a8:	call   QWORD PTR [rip+0x11a32]        # 413fe0 <rb_strcasecmp@plt+0x11a70>
  4025ae:	hlt    
  4025af:	nop
  4025b0:	endbr64 
  4025b4:	ret    
  4025b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025bf:	nop
  4025c0:	mov    eax,0x415f3f
  4025c5:	push   rbp
  4025c6:	sub    rax,0x415f38
  4025cc:	cmp    rax,0xe
  4025d0:	mov    rbp,rsp
  4025d3:	jbe    4025f0 <rb_strcasecmp@plt+0x80>
  4025d5:	mov    eax,0x0
  4025da:	test   rax,rax
  4025dd:	je     4025f0 <rb_strcasecmp@plt+0x80>
  4025df:	pop    rbp
  4025e0:	mov    edi,0x415f38
  4025e5:	jmp    rax
  4025e7:	nop    WORD PTR [rax+rax*1+0x0]
  4025f0:	pop    rbp
  4025f1:	ret    
  4025f2:	nop    DWORD PTR [rax+0x0]
  4025f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402600:	mov    esi,0x415f38
  402605:	push   rbp
  402606:	sub    rsi,0x415f38
  40260d:	sar    rsi,0x3
  402611:	mov    rbp,rsp
  402614:	mov    rax,rsi
  402617:	shr    rax,0x3f
  40261b:	add    rsi,rax
  40261e:	sar    rsi,1
  402621:	je     402638 <rb_strcasecmp@plt+0xc8>
  402623:	mov    eax,0x0
  402628:	test   rax,rax
  40262b:	je     402638 <rb_strcasecmp@plt+0xc8>
  40262d:	pop    rbp
  40262e:	mov    edi,0x415f38
  402633:	jmp    rax
  402635:	nop    DWORD PTR [rax]
  402638:	pop    rbp
  402639:	ret    
  40263a:	nop    WORD PTR [rax+rax*1+0x0]
  402640:	cmp    BYTE PTR [rip+0x138f9],0x0        # 415f40 <rb_strcasecmp@plt+0x139d0>
  402647:	jne    40265a <rb_strcasecmp@plt+0xea>
  402649:	push   rbp
  40264a:	mov    rbp,rsp
  40264d:	call   4025c0 <rb_strcasecmp@plt+0x50>
  402652:	pop    rbp
  402653:	mov    BYTE PTR [rip+0x138e6],0x1        # 415f40 <rb_strcasecmp@plt+0x139d0>
  40265a:	repz ret 
  40265c:	nop    DWORD PTR [rax+0x0]
  402660:	mov    edi,0x413de0
  402665:	cmp    QWORD PTR [rdi],0x0
  402669:	jne    402670 <rb_strcasecmp@plt+0x100>
  40266b:	jmp    402600 <rb_strcasecmp@plt+0x90>
  40266d:	nop    DWORD PTR [rax]
  402670:	mov    eax,0x0
  402675:	test   rax,rax
  402678:	je     40266b <rb_strcasecmp@plt+0xfb>
  40267a:	push   rbp
  40267b:	mov    rbp,rsp
  40267e:	call   rax
  402680:	pop    rbp
  402681:	jmp    402600 <rb_strcasecmp@plt+0x90>
  402686:	push   rbp
  402687:	mov    rbp,rsp
  40268a:	sub    rsp,0x20
  40268e:	mov    DWORD PTR [rbp-0x14],edi
  402691:	mov    QWORD PTR [rbp-0x20],rsi
  402695:	cmp    DWORD PTR [rbp-0x14],0x2
  402699:	jg     4026bb <rb_strcasecmp@plt+0x14b>
  40269b:	mov    eax,DWORD PTR [rbp-0x14]
  40269e:	mov    edx,eax
  4026a0:	lea    rsi,[rip+0xc961]        # 40f008 <rb_strcasecmp@plt+0xca98>
  4026a7:	mov    edi,0x43
  4026ac:	mov    eax,0x0
  4026b1:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  4026b6:	jmp    40275b <rb_strcasecmp@plt+0x1eb>
  4026bb:	mov    rax,QWORD PTR [rbp-0x20]
  4026bf:	add    rax,0x8
  4026c3:	mov    rax,QWORD PTR [rax]
  4026c6:	mov    edx,0x10
  4026cb:	mov    esi,0x0
  4026d0:	mov    rdi,rax
  4026d3:	call   4024e0 <strtoull@plt>
  4026d8:	mov    QWORD PTR [rbp-0x10],rax
  4026dc:	mov    eax,0xffffffff
  4026e1:	cmp    QWORD PTR [rbp-0x10],rax
  4026e5:	jbe    40270d <rb_strcasecmp@plt+0x19d>
  4026e7:	mov    rax,QWORD PTR [rbp-0x20]
  4026eb:	add    rax,0x8
  4026ef:	mov    rax,QWORD PTR [rax]
  4026f2:	mov    rdx,rax
  4026f5:	lea    rsi,[rip+0xc95c]        # 40f058 <rb_strcasecmp@plt+0xcae8>
  4026fc:	mov    edi,0x43
  402701:	mov    eax,0x0
  402706:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40270b:	jmp    40275b <rb_strcasecmp@plt+0x1eb>
  40270d:	mov    rax,QWORD PTR [rbp-0x20]
  402711:	add    rax,0x10
  402715:	mov    rax,QWORD PTR [rax]
  402718:	movzx  eax,BYTE PTR [rax]
  40271b:	movzx  edx,al
  40271e:	mov    rax,0x414ae0
  402725:	movsxd rdx,edx
  402728:	mov    rax,QWORD PTR [rax+rdx*8]
  40272c:	mov    QWORD PTR [rbp-0x8],rax
  402730:	cmp    QWORD PTR [rbp-0x8],0x0
  402735:	je     40275a <rb_strcasecmp@plt+0x1ea>
  402737:	mov    rax,QWORD PTR [rbp-0x20]
  40273b:	add    rax,0x10
  40273f:	mov    rax,QWORD PTR [rax]
  402742:	movzx  eax,BYTE PTR [rax]
  402745:	movsx  edx,al
  402748:	mov    rax,QWORD PTR [rbp-0x10]
  40274c:	mov    ecx,eax
  40274e:	mov    rax,QWORD PTR [rbp-0x8]
  402752:	mov    esi,edx
  402754:	mov    edi,ecx
  402756:	call   rax
  402758:	jmp    40275b <rb_strcasecmp@plt+0x1eb>
  40275a:	nop
  40275b:	leave  
  40275c:	ret    
  40275d:	push   rbp
  40275e:	mov    rbp,rsp
  402761:	sub    rsp,0x20
  402765:	mov    DWORD PTR [rbp-0x14],edi
  402768:	mov    QWORD PTR [rbp-0x20],rsi
  40276c:	cmp    DWORD PTR [rbp-0x14],0x1
  402770:	jg     402792 <rb_strcasecmp@plt+0x222>
  402772:	mov    eax,DWORD PTR [rbp-0x14]
  402775:	mov    edx,eax
  402777:	lea    rsi,[rip+0xc912]        # 40f090 <rb_strcasecmp@plt+0xcb20>
  40277e:	mov    edi,0x43
  402783:	mov    eax,0x0
  402788:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40278d:	jmp    402840 <rb_strcasecmp@plt+0x2d0>
  402792:	mov    rax,QWORD PTR [rbp-0x20]
  402796:	add    rax,0x8
  40279a:	mov    rdx,QWORD PTR [rax]
  40279d:	mov    rax,0x41a260
  4027a4:	mov    rax,QWORD PTR [rax]
  4027a7:	mov    rsi,rdx
  4027aa:	mov    rdi,rax
  4027ad:	call   4023a0 <rb_dictionary_retrieve@plt>
  4027b2:	mov    QWORD PTR [rbp-0x8],rax
  4027b6:	cmp    QWORD PTR [rbp-0x8],0x0
  4027bb:	jne    4027e3 <rb_strcasecmp@plt+0x273>
  4027bd:	mov    rax,QWORD PTR [rbp-0x20]
  4027c1:	add    rax,0x8
  4027c5:	mov    rax,QWORD PTR [rax]
  4027c8:	mov    rdx,rax
  4027cb:	lea    rsi,[rip+0xc90e]        # 40f0e0 <rb_strcasecmp@plt+0xcb70>
  4027d2:	mov    edi,0x43
  4027d7:	mov    eax,0x0
  4027dc:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  4027e1:	jmp    402840 <rb_strcasecmp@plt+0x2d0>
  4027e3:	mov    eax,DWORD PTR [rbp-0x14]
  4027e6:	lea    edx,[rax-0x2]
  4027e9:	mov    rax,QWORD PTR [rbp-0x8]
  4027ed:	mov    eax,DWORD PTR [rax+0x8]
  4027f0:	cmp    edx,eax
  4027f2:	jge    40281a <rb_strcasecmp@plt+0x2aa>
  4027f4:	mov    rax,QWORD PTR [rbp-0x8]
  4027f8:	mov    eax,DWORD PTR [rax+0x8]
  4027fb:	mov    edx,DWORD PTR [rbp-0x14]
  4027fe:	mov    ecx,edx
  402800:	mov    edx,eax
  402802:	lea    rsi,[rip+0xc907]        # 40f110 <rb_strcasecmp@plt+0xcba0>
  402809:	mov    edi,0x43
  40280e:	mov    eax,0x0
  402813:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  402818:	jmp    402840 <rb_strcasecmp@plt+0x2d0>
  40281a:	mov    rax,QWORD PTR [rbp-0x8]
  40281e:	mov    rax,QWORD PTR [rax+0x10]
  402822:	mov    rdx,QWORD PTR [rbp-0x20]
  402826:	add    rdx,0x10
  40282a:	mov    ecx,DWORD PTR [rbp-0x14]
  40282d:	lea    esi,[rcx-0x2]
  402830:	mov    rcx,QWORD PTR [rbp-0x20]
  402834:	add    rcx,0x8
  402838:	mov    rcx,QWORD PTR [rcx]
  40283b:	mov    rdi,rcx
  40283e:	call   rax
  402840:	leave  
  402841:	ret    
  402842:	push   rbp
  402843:	mov    rbp,rsp
  402846:	sub    rsp,0x20
  40284a:	mov    DWORD PTR [rbp-0x14],edi
  40284d:	mov    QWORD PTR [rbp-0x20],rsi
  402851:	cmp    DWORD PTR [rbp-0x14],0x2
  402855:	jg     40289d <rb_strcasecmp@plt+0x32d>
  402857:	mov    QWORD PTR [rbp-0x10],0x0
  40285f:	jmp    402891 <rb_strcasecmp@plt+0x321>
  402861:	mov    rax,QWORD PTR [rbp-0x10]
  402865:	movzx  edx,al
  402868:	mov    rax,0x4152e0
  40286f:	movsxd rdx,edx
  402872:	mov    rax,QWORD PTR [rax+rdx*8]
  402876:	mov    QWORD PTR [rbp-0x8],rax
  40287a:	cmp    QWORD PTR [rbp-0x8],0x0
  40287f:	je     40288c <rb_strcasecmp@plt+0x31c>
  402881:	mov    rax,QWORD PTR [rbp-0x8]
  402885:	mov    edi,0x0
  40288a:	call   rax
  40288c:	add    QWORD PTR [rbp-0x10],0x1
  402891:	cmp    QWORD PTR [rbp-0x10],0xff
  402899:	jbe    402861 <rb_strcasecmp@plt+0x2f1>
  40289b:	jmp    4028e3 <rb_strcasecmp@plt+0x373>
  40289d:	mov    rax,QWORD PTR [rbp-0x20]
  4028a1:	add    rax,0x8
  4028a5:	mov    rax,QWORD PTR [rax]
  4028a8:	movzx  eax,BYTE PTR [rax]
  4028ab:	movzx  edx,al
  4028ae:	mov    rax,0x4152e0
  4028b5:	movsxd rdx,edx
  4028b8:	mov    rax,QWORD PTR [rax+rdx*8]
  4028bc:	mov    QWORD PTR [rbp-0x8],rax
  4028c0:	cmp    QWORD PTR [rbp-0x8],0x0
  4028c5:	je     4028e2 <rb_strcasecmp@plt+0x372>
  4028c7:	mov    rax,QWORD PTR [rbp-0x20]
  4028cb:	add    rax,0x8
  4028cf:	mov    rax,QWORD PTR [rax]
  4028d2:	movzx  eax,BYTE PTR [rax]
  4028d5:	movsx  edx,al
  4028d8:	mov    rax,QWORD PTR [rbp-0x8]
  4028dc:	mov    edi,edx
  4028de:	call   rax
  4028e0:	jmp    4028e3 <rb_strcasecmp@plt+0x373>
  4028e2:	nop
  4028e3:	leave  
  4028e4:	ret    
  4028e5:	push   rbp
  4028e6:	mov    rbp,rsp
  4028e9:	sub    rsp,0x20
  4028ed:	mov    QWORD PTR [rbp-0x18],rdi
  4028f1:	jmp    40294e <rb_strcasecmp@plt+0x3de>
  4028f3:	mov    edx,0xa
  4028f8:	lea    rsi,[rip+0x17681]        # 419f80 <rb_strcasecmp@plt+0x17a10>
  4028ff:	lea    rdi,[rip+0x1367a]        # 415f80 <rb_strcasecmp@plt+0x13a10>
  402906:	call   402220 <rb_string_to_array@plt>
  40290b:	mov    DWORD PTR [rbp-0xc],eax
  40290e:	cmp    DWORD PTR [rbp-0xc],0x0
  402912:	jg     402916 <rb_strcasecmp@plt+0x3a6>
  402914:	jmp    40294e <rb_strcasecmp@plt+0x3de>
  402916:	mov    rax,QWORD PTR [rip+0x17663]        # 419f80 <rb_strcasecmp@plt+0x17a10>
  40291d:	movzx  eax,BYTE PTR [rax]
  402920:	movzx  edx,al
  402923:	mov    rax,0x4142e0
  40292a:	movsxd rdx,edx
  40292d:	mov    rax,QWORD PTR [rax+rdx*8]
  402931:	mov    QWORD PTR [rbp-0x8],rax
  402935:	cmp    QWORD PTR [rbp-0x8],0x0
  40293a:	je     40294e <rb_strcasecmp@plt+0x3de>
  40293c:	mov    edx,DWORD PTR [rbp-0xc]
  40293f:	mov    rax,QWORD PTR [rbp-0x8]
  402943:	lea    rsi,[rip+0x17636]        # 419f80 <rb_strcasecmp@plt+0x17a10>
  40294a:	mov    edi,edx
  40294c:	call   rax
  40294e:	mov    rax,QWORD PTR [rbp-0x18]
  402952:	mov    edx,0x4000
  402957:	lea    rsi,[rip+0x13622]        # 415f80 <rb_strcasecmp@plt+0x13a10>
  40295e:	mov    rdi,rax
  402961:	call   402410 <rb_helper_read@plt>
  402966:	mov    DWORD PTR [rbp-0x10],eax
  402969:	cmp    DWORD PTR [rbp-0x10],0x0
  40296d:	jg     4028f3 <rb_strcasecmp@plt+0x383>
  40296f:	nop
  402970:	leave  
  402971:	ret    
  402972:	push   rbp
  402973:	mov    rbp,rsp
  402976:	sub    rsp,0x10
  40297a:	mov    QWORD PTR [rbp-0x8],rdi
  40297e:	mov    edi,0x1
  402983:	call   4020e0 <exit@plt>
  402988:	push   rbp
  402989:	mov    rbp,rsp
  40298c:	mov    DWORD PTR [rbp-0x4],edi
  40298f:	nop
  402990:	pop    rbp
  402991:	ret    
  402992:	push   rbp
  402993:	mov    rbp,rsp
  402996:	sub    rsp,0xa0
  40299d:	mov    rax,QWORD PTR fs:0x28
  4029a6:	mov    QWORD PTR [rbp-0x8],rax
  4029aa:	xor    eax,eax
  4029ac:	mov    DWORD PTR [rbp-0x18],0x0
  4029b3:	mov    QWORD PTR [rbp-0xa0],0x1
  4029be:	lea    rax,[rbp-0xa0]
  4029c5:	add    rax,0x8
  4029c9:	mov    rdi,rax
  4029cc:	call   402510 <sigemptyset@plt>
  4029d1:	lea    rax,[rbp-0xa0]
  4029d8:	add    rax,0x8
  4029dc:	mov    esi,0xd
  4029e1:	mov    rdi,rax
  4029e4:	call   4023f0 <sigaddset@plt>
  4029e9:	lea    rax,[rbp-0xa0]
  4029f0:	add    rax,0x8
  4029f4:	mov    esi,0xe
  4029f9:	mov    rdi,rax
  4029fc:	call   4023f0 <sigaddset@plt>
  402a01:	lea    rax,[rbp-0xa0]
  402a08:	add    rax,0x8
  402a0c:	mov    esi,0x5
  402a11:	mov    rdi,rax
  402a14:	call   4023f0 <sigaddset@plt>
  402a19:	lea    rax,[rbp-0xa0]
  402a20:	add    rax,0x8
  402a24:	mov    esi,0x1c
  402a29:	mov    rdi,rax
  402a2c:	call   4023f0 <sigaddset@plt>
  402a31:	lea    rax,[rbp-0xa0]
  402a38:	mov    edx,0x0
  402a3d:	mov    rsi,rax
  402a40:	mov    edi,0x1c
  402a45:	call   4022f0 <sigaction@plt>
  402a4a:	lea    rax,[rbp-0xa0]
  402a51:	mov    edx,0x0
  402a56:	mov    rsi,rax
  402a59:	mov    edi,0xd
  402a5e:	call   4022f0 <sigaction@plt>
  402a63:	lea    rax,[rbp-0xa0]
  402a6a:	mov    edx,0x0
  402a6f:	mov    rsi,rax
  402a72:	mov    edi,0x5
  402a77:	call   4022f0 <sigaction@plt>
  402a7c:	lea    rax,[rip+0xffffffffffffff05]        # 402988 <rb_strcasecmp@plt+0x418>
  402a83:	mov    QWORD PTR [rbp-0xa0],rax
  402a8a:	lea    rax,[rbp-0xa0]
  402a91:	mov    edx,0x0
  402a96:	mov    rsi,rax
  402a99:	mov    edi,0xe
  402a9e:	call   4022f0 <sigaction@plt>
  402aa3:	nop
  402aa4:	mov    rax,QWORD PTR [rbp-0x8]
  402aa8:	xor    rax,QWORD PTR fs:0x28
  402ab1:	je     402ab8 <rb_strcasecmp@plt+0x548>
  402ab3:	call   402400 <__stack_chk_fail@plt>
  402ab8:	leave  
  402ab9:	ret    
  402aba:	push   rbp
  402abb:	mov    rbp,rsp
  402abe:	sub    rsp,0x10
  402ac2:	mov    DWORD PTR [rbp-0x4],edi
  402ac5:	mov    QWORD PTR [rbp-0x10],rsi
  402ac9:	call   402992 <rb_strcasecmp@plt+0x422>
  402ace:	push   0x100
  402ad3:	push   0x100
  402ad8:	mov    r9d,0x100
  402ade:	mov    r8d,0x0
  402ae4:	mov    ecx,0x0
  402ae9:	mov    edx,0x0
  402aee:	lea    rsi,[rip+0xfffffffffffffe7d]        # 402972 <rb_strcasecmp@plt+0x402>
  402af5:	lea    rdi,[rip+0xfffffffffffffde9]        # 4028e5 <rb_strcasecmp@plt+0x375>
  402afc:	call   402160 <rb_helper_child@plt>
  402b01:	add    rsp,0x10
  402b05:	mov    rdx,rax
  402b08:	mov    rax,0x415f60
  402b0f:	mov    QWORD PTR [rax],rdx
  402b12:	mov    rax,0x415f60
  402b19:	mov    rax,QWORD PTR [rax]
  402b1c:	test   rax,rax
  402b1f:	jne    402b4e <rb_strcasecmp@plt+0x5de>
  402b21:	mov    rax,QWORD PTR [rip+0x114d0]        # 413ff8 <rb_strcasecmp@plt+0x11a88>
  402b28:	mov    rax,QWORD PTR [rax]
  402b2b:	mov    rcx,rax
  402b2e:	mov    edx,0x2e
  402b33:	mov    esi,0x1
  402b38:	lea    rdi,[rip+0xc621]        # 40f160 <rb_strcasecmp@plt+0xcbf0>
  402b3f:	call   402540 <fwrite@plt>
  402b44:	mov    edi,0x1
  402b49:	call   4020e0 <exit@plt>
  402b4e:	call   4023e0 <rb_set_time@plt>
  402b53:	call   402992 <rb_strcasecmp@plt+0x422>
  402b58:	mov    rax,QWORD PTR [rip+0x11489]        # 413fe8 <rb_strcasecmp@plt+0x11a78>
  402b5f:	mov    rsi,rax
  402b62:	lea    rdi,[rip+0xc626]        # 40f18f <rb_strcasecmp@plt+0xcc1f>
  402b69:	call   402460 <rb_dictionary_create@plt>
  402b6e:	mov    rdx,rax
  402b71:	mov    rax,0x41a260
  402b78:	mov    QWORD PTR [rax],rdx
  402b7b:	call   405261 <rb_strcasecmp@plt+0x2cf1>
  402b80:	call   403e09 <rb_strcasecmp@plt+0x1899>
  402b85:	mov    esi,0x1
  402b8a:	mov    edi,0x0
  402b8f:	call   402390 <rb_init_prng@plt>
  402b94:	mov    rax,0x415f60
  402b9b:	mov    rax,QWORD PTR [rax]
  402b9e:	mov    esi,0x0
  402ba3:	mov    rdi,rax
  402ba6:	call   402030 <rb_helper_loop@plt>
  402bab:	push   rbp
  402bac:	mov    rbp,rsp
  402baf:	sub    rsp,0x20
  402bb3:	mov    QWORD PTR [rbp-0x18],rdi
  402bb7:	mov    rax,QWORD PTR [rbp-0x18]
  402bbb:	mov    rsi,rax
  402bbe:	mov    edi,0x1
  402bc3:	call   402490 <calloc@plt>
  402bc8:	mov    QWORD PTR [rbp-0x8],rax
  402bcc:	cmp    QWORD PTR [rbp-0x8],0x0
  402bd1:	sete   al
  402bd4:	movzx  eax,al
  402bd7:	test   rax,rax
  402bda:	je     402be1 <rb_strcasecmp@plt+0x671>
  402bdc:	call   4023b0 <rb_outofmemory@plt>
  402be1:	mov    rax,QWORD PTR [rbp-0x8]
  402be5:	leave  
  402be6:	ret    
  402be7:	push   rbp
  402be8:	mov    rbp,rsp
  402beb:	sub    rsp,0x20
  402bef:	mov    QWORD PTR [rbp-0x18],rdi
  402bf3:	mov    rax,QWORD PTR [rbp-0x18]
  402bf7:	mov    rdi,rax
  402bfa:	call   402210 <strlen@plt>
  402bff:	add    rax,0x1
  402c03:	mov    rdi,rax
  402c06:	call   402180 <malloc@plt>
  402c0b:	mov    QWORD PTR [rbp-0x8],rax
  402c0f:	cmp    QWORD PTR [rbp-0x8],0x0
  402c14:	sete   al
  402c17:	movzx  eax,al
  402c1a:	test   rax,rax
  402c1d:	je     402c24 <rb_strcasecmp@plt+0x6b4>
  402c1f:	call   4023b0 <rb_outofmemory@plt>
  402c24:	mov    rdx,QWORD PTR [rbp-0x18]
  402c28:	mov    rax,QWORD PTR [rbp-0x8]
  402c2c:	mov    rsi,rdx
  402c2f:	mov    rdi,rax
  402c32:	call   402450 <strcpy@plt>
  402c37:	mov    rax,QWORD PTR [rbp-0x8]
  402c3b:	leave  
  402c3c:	ret    
  402c3d:	push   rbp
  402c3e:	mov    rbp,rsp
  402c41:	sub    rsp,0x10
  402c45:	mov    QWORD PTR [rbp-0x8],rdi
  402c49:	cmp    QWORD PTR [rbp-0x8],0x0
  402c4e:	setne  al
  402c51:	movzx  eax,al
  402c54:	test   rax,rax
  402c57:	je     402c65 <rb_strcasecmp@plt+0x6f5>
  402c59:	mov    rax,QWORD PTR [rbp-0x8]
  402c5d:	mov    rdi,rax
  402c60:	call   402200 <free@plt>
  402c65:	nop
  402c66:	leave  
  402c67:	ret    
  402c68:	push   rbp
  402c69:	mov    rbp,rsp
  402c6c:	sub    rsp,0x30
  402c70:	mov    QWORD PTR [rbp-0x18],rdi
  402c74:	mov    DWORD PTR [rbp-0x1c],esi
  402c77:	mov    QWORD PTR [rbp-0x28],rdx
  402c7b:	mov    QWORD PTR [rbp-0x30],rcx
  402c7f:	mov    edi,0xb0
  402c84:	call   402bab <rb_strcasecmp@plt+0x63b>
  402c89:	mov    QWORD PTR [rbp-0x8],rax
  402c8d:	cmp    DWORD PTR [rbp-0x1c],0x2
  402c91:	jne    402ca7 <rb_strcasecmp@plt+0x737>
  402c93:	mov    rax,QWORD PTR [rbp-0x8]
  402c97:	mov    DWORD PTR [rax+0x10],0x34
  402c9e:	mov    DWORD PTR [rbp-0xc],0x1
  402ca5:	jmp    402cd4 <rb_strcasecmp@plt+0x764>
  402ca7:	cmp    DWORD PTR [rbp-0x1c],0xa
  402cab:	jne    402cc1 <rb_strcasecmp@plt+0x751>
  402cad:	mov    rax,QWORD PTR [rbp-0x8]
  402cb1:	mov    DWORD PTR [rax+0x10],0x36
  402cb8:	mov    DWORD PTR [rbp-0xc],0x1c
  402cbf:	jmp    402cd4 <rb_strcasecmp@plt+0x764>
  402cc1:	mov    rax,QWORD PTR [rbp-0x8]
  402cc5:	mov    rdi,rax
  402cc8:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  402ccd:	mov    eax,0x0
  402cd2:	jmp    402d49 <rb_strcasecmp@plt+0x7d9>
  402cd4:	mov    rax,0x419fd8
  402cdb:	mov    rax,QWORD PTR [rax]
  402cde:	lea    rcx,[rax+0x1]
  402ce2:	mov    rdx,0x419fd8
  402ce9:	mov    QWORD PTR [rdx],rcx
  402cec:	mov    rdx,QWORD PTR [rbp-0x8]
  402cf0:	mov    QWORD PTR [rdx+0x98],rax
  402cf7:	mov    rax,QWORD PTR [rbp-0x8]
  402cfb:	mov    rdx,QWORD PTR [rbp-0x28]
  402cff:	mov    QWORD PTR [rax+0xa0],rdx
  402d06:	mov    rax,QWORD PTR [rbp-0x8]
  402d0a:	mov    rdx,QWORD PTR [rbp-0x30]
  402d0e:	mov    QWORD PTR [rax+0xa8],rdx
  402d15:	mov    rax,QWORD PTR [rbp-0x8]
  402d19:	mov    rdx,QWORD PTR [rbp-0x8]
  402d1d:	mov    QWORD PTR [rax],rdx
  402d20:	mov    rax,QWORD PTR [rbp-0x8]
  402d24:	lea    rdx,[rip+0x15e]        # 402e89 <rb_strcasecmp@plt+0x919>
  402d2b:	mov    QWORD PTR [rax+0x8],rdx
  402d2f:	mov    rcx,QWORD PTR [rbp-0x8]
  402d33:	mov    edx,DWORD PTR [rbp-0xc]
  402d36:	mov    rax,QWORD PTR [rbp-0x18]
  402d3a:	mov    rsi,rcx
  402d3d:	mov    rdi,rax
  402d40:	call   40572b <rb_strcasecmp@plt+0x31bb>
  402d45:	mov    rax,QWORD PTR [rbp-0x8]
  402d49:	leave  
  402d4a:	ret    
  402d4b:	push   rbp
  402d4c:	mov    rbp,rsp
  402d4f:	sub    rsp,0x30
  402d53:	mov    QWORD PTR [rbp-0x18],rdi
  402d57:	mov    QWORD PTR [rbp-0x20],rsi
  402d5b:	mov    QWORD PTR [rbp-0x28],rdx
  402d5f:	mov    edi,0xb0
  402d64:	call   402bab <rb_strcasecmp@plt+0x63b>
  402d69:	mov    QWORD PTR [rbp-0x8],rax
  402d6d:	mov    rax,QWORD PTR [rbp-0x8]
  402d71:	lea    rdx,[rax+0x18]
  402d75:	mov    rax,QWORD PTR [rbp-0x18]
  402d79:	mov    rsi,rdx
  402d7c:	mov    rdi,rax
  402d7f:	call   402280 <rb_inet_pton_sock@plt>
  402d84:	test   eax,eax
  402d86:	jne    402d9e <rb_strcasecmp@plt+0x82e>
  402d88:	mov    rax,QWORD PTR [rbp-0x8]
  402d8c:	mov    rdi,rax
  402d8f:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  402d94:	mov    eax,0x0
  402d99:	jmp    402e5e <rb_strcasecmp@plt+0x8ee>
  402d9e:	mov    rax,QWORD PTR [rbp-0x8]
  402da2:	add    rax,0x18
  402da6:	movzx  eax,WORD PTR [rax]
  402da9:	movzx  eax,ax
  402dac:	mov    DWORD PTR [rbp-0xc],eax
  402daf:	cmp    DWORD PTR [rbp-0xc],0x2
  402db3:	jne    402dc2 <rb_strcasecmp@plt+0x852>
  402db5:	mov    rax,QWORD PTR [rbp-0x8]
  402db9:	mov    DWORD PTR [rax+0x10],0x52
  402dc0:	jmp    402de8 <rb_strcasecmp@plt+0x878>
  402dc2:	cmp    DWORD PTR [rbp-0xc],0xa
  402dc6:	jne    402dd5 <rb_strcasecmp@plt+0x865>
  402dc8:	mov    rax,QWORD PTR [rbp-0x8]
  402dcc:	mov    DWORD PTR [rax+0x10],0x53
  402dd3:	jmp    402de8 <rb_strcasecmp@plt+0x878>
  402dd5:	mov    rax,QWORD PTR [rbp-0x8]
  402dd9:	mov    rdi,rax
  402ddc:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  402de1:	mov    eax,0x0
  402de6:	jmp    402e5e <rb_strcasecmp@plt+0x8ee>
  402de8:	mov    rax,0x419fd8
  402def:	mov    rax,QWORD PTR [rax]
  402df2:	lea    rcx,[rax+0x1]
  402df6:	mov    rdx,0x419fd8
  402dfd:	mov    QWORD PTR [rdx],rcx
  402e00:	mov    rdx,QWORD PTR [rbp-0x8]
  402e04:	mov    QWORD PTR [rdx+0x98],rax
  402e0b:	mov    rax,QWORD PTR [rbp-0x8]
  402e0f:	mov    rdx,QWORD PTR [rbp-0x20]
  402e13:	mov    QWORD PTR [rax+0xa0],rdx
  402e1a:	mov    rax,QWORD PTR [rbp-0x8]
  402e1e:	mov    rdx,QWORD PTR [rbp-0x28]
  402e22:	mov    QWORD PTR [rax+0xa8],rdx
  402e29:	mov    rax,QWORD PTR [rbp-0x8]
  402e2d:	mov    rdx,QWORD PTR [rbp-0x8]
  402e31:	mov    QWORD PTR [rax],rdx
  402e34:	mov    rax,QWORD PTR [rbp-0x8]
  402e38:	lea    rdx,[rip+0x218]        # 403057 <rb_strcasecmp@plt+0xae7>
  402e3f:	mov    QWORD PTR [rax+0x8],rdx
  402e43:	mov    rax,QWORD PTR [rbp-0x8]
  402e47:	mov    rdx,QWORD PTR [rbp-0x8]
  402e4b:	add    rdx,0x18
  402e4f:	mov    rsi,rax
  402e52:	mov    rdi,rdx
  402e55:	call   405840 <rb_strcasecmp@plt+0x32d0>
  402e5a:	mov    rax,QWORD PTR [rbp-0x8]
  402e5e:	leave  
  402e5f:	ret    
  402e60:	push   rbp
  402e61:	mov    rbp,rsp
  402e64:	mov    QWORD PTR [rbp-0x8],rdi
  402e68:	mov    rax,QWORD PTR [rbp-0x8]
  402e6c:	mov    QWORD PTR [rax+0xa8],0x0
  402e77:	mov    rax,QWORD PTR [rbp-0x8]
  402e7b:	mov    QWORD PTR [rax+0xa0],0x0
  402e86:	nop
  402e87:	pop    rbp
  402e88:	ret    
  402e89:	push   rbp
  402e8a:	mov    rbp,rsp
  402e8d:	sub    rsp,0x60
  402e91:	mov    QWORD PTR [rbp-0x58],rdi
  402e95:	mov    QWORD PTR [rbp-0x60],rsi
  402e99:	mov    rax,QWORD PTR fs:0x28
  402ea2:	mov    QWORD PTR [rbp-0x8],rax
  402ea6:	xor    eax,eax
  402ea8:	mov    rax,QWORD PTR [rbp-0x58]
  402eac:	mov    QWORD PTR [rbp-0x48],rax
  402eb0:	mov    QWORD PTR [rbp-0x40],0x2a
  402eb8:	lea    rdx,[rbp-0x38]
  402ebc:	mov    eax,0x0
  402ec1:	mov    ecx,0x5
  402ec6:	mov    rdi,rdx
  402ec9:	rep stos QWORD PTR es:[rdi],rax
  402ecc:	mov    rdx,rdi
  402ecf:	mov    DWORD PTR [rdx],eax
  402ed1:	add    rdx,0x4
  402ed5:	mov    BYTE PTR [rdx],al
  402ed7:	add    rdx,0x1
  402edb:	cmp    QWORD PTR [rbp-0x48],0x0
  402ee0:	jne    402f02 <rb_strcasecmp@plt+0x992>
  402ee2:	lea    rsi,[rip+0xc2bf]        # 40f1a8 <rb_strcasecmp@plt+0xcc38>
  402ee9:	mov    edi,0x43
  402eee:	mov    eax,0x0
  402ef3:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  402ef8:	mov    edi,0x2
  402efd:	call   4020e0 <exit@plt>
  402f02:	cmp    QWORD PTR [rbp-0x60],0x0
  402f07:	je     402fea <rb_strcasecmp@plt+0xa7a>
  402f0d:	mov    rax,QWORD PTR [rbp-0x48]
  402f11:	mov    eax,DWORD PTR [rax+0x10]
  402f14:	cmp    eax,0x34
  402f17:	je     402f23 <rb_strcasecmp@plt+0x9b3>
  402f19:	cmp    eax,0x36
  402f1c:	je     402f59 <rb_strcasecmp@plt+0x9e9>
  402f1e:	jmp    402fc1 <rb_strcasecmp@plt+0xa51>
  402f23:	mov    rax,QWORD PTR [rbp-0x60]
  402f27:	add    rax,0x8
  402f2b:	movzx  eax,WORD PTR [rax]
  402f2e:	cmp    ax,0x2
  402f32:	jne    402fed <rb_strcasecmp@plt+0xa7d>
  402f38:	mov    rax,QWORD PTR [rbp-0x60]
  402f3c:	lea    rcx,[rax+0x8]
  402f40:	lea    rax,[rbp-0x40]
  402f44:	mov    edx,0x35
  402f49:	mov    rsi,rax
  402f4c:	mov    rdi,rcx
  402f4f:	call   402430 <rb_inet_ntop_sock@plt>
  402f54:	jmp    402fed <rb_strcasecmp@plt+0xa7d>
  402f59:	mov    rax,QWORD PTR [rbp-0x60]
  402f5d:	add    rax,0x8
  402f61:	movzx  eax,WORD PTR [rax]
  402f64:	cmp    ax,0xa
  402f68:	jne    402ff0 <rb_strcasecmp@plt+0xa80>
  402f6e:	mov    rax,QWORD PTR [rbp-0x60]
  402f72:	lea    rcx,[rax+0x8]
  402f76:	lea    rax,[rbp-0x40]
  402f7a:	mov    edx,0x35
  402f7f:	mov    rsi,rax
  402f82:	mov    rdi,rcx
  402f85:	call   402430 <rb_inet_ntop_sock@plt>
  402f8a:	movzx  eax,BYTE PTR [rbp-0x40]
  402f8e:	cmp    al,0x3a
  402f90:	jne    402ff0 <rb_strcasecmp@plt+0xa80>
  402f92:	lea    rax,[rbp-0x40]
  402f96:	mov    rdi,rax
  402f99:	call   402210 <strlen@plt>
  402f9e:	mov    rsi,rax
  402fa1:	lea    rax,[rbp-0x40]
  402fa5:	lea    rdx,[rbp-0x40]
  402fa9:	lea    rcx,[rdx+0x1]
  402fad:	mov    rdx,rsi
  402fb0:	mov    rsi,rax
  402fb3:	mov    rdi,rcx
  402fb6:	call   402360 <memmove@plt>
  402fbb:	mov    BYTE PTR [rbp-0x40],0x30
  402fbf:	jmp    402ff0 <rb_strcasecmp@plt+0xa80>
  402fc1:	mov    rax,QWORD PTR [rbp-0x48]
  402fc5:	mov    eax,DWORD PTR [rax+0x10]
  402fc8:	mov    edx,eax
  402fca:	lea    rsi,[rip+0xc207]        # 40f1d8 <rb_strcasecmp@plt+0xcc68>
  402fd1:	mov    edi,0x43
  402fd6:	mov    eax,0x0
  402fdb:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  402fe0:	mov    edi,0x2
  402fe5:	call   4020e0 <exit@plt>
  402fea:	nop
  402feb:	jmp    402ff1 <rb_strcasecmp@plt+0xa81>
  402fed:	nop
  402fee:	jmp    402ff1 <rb_strcasecmp@plt+0xa81>
  402ff0:	nop
  402ff1:	mov    rax,QWORD PTR [rbp-0x48]
  402ff5:	mov    rax,QWORD PTR [rax+0xa0]
  402ffc:	test   rax,rax
  402fff:	je     403034 <rb_strcasecmp@plt+0xac4>
  403001:	mov    rax,QWORD PTR [rbp-0x48]
  403005:	mov    rax,QWORD PTR [rax+0xa0]
  40300c:	mov    rdx,QWORD PTR [rbp-0x48]
  403010:	mov    rcx,QWORD PTR [rdx+0xa8]
  403017:	mov    rdx,QWORD PTR [rbp-0x48]
  40301b:	mov    edx,DWORD PTR [rdx+0x10]
  40301e:	movzx  esi,BYTE PTR [rbp-0x40]
  403022:	cmp    sil,0x2a
  403026:	setne  sil
  40302a:	movzx  esi,sil
  40302e:	lea    rdi,[rbp-0x40]
  403032:	call   rax
  403034:	mov    rax,QWORD PTR [rbp-0x48]
  403038:	mov    rdi,rax
  40303b:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  403040:	nop
  403041:	mov    rax,QWORD PTR [rbp-0x8]
  403045:	xor    rax,QWORD PTR fs:0x28
  40304e:	je     403055 <rb_strcasecmp@plt+0xae5>
  403050:	call   402400 <__stack_chk_fail@plt>
  403055:	leave  
  403056:	ret    
  403057:	push   rbp
  403058:	mov    rbp,rsp
  40305b:	sub    rsp,0x40
  40305f:	mov    QWORD PTR [rbp-0x38],rdi
  403063:	mov    QWORD PTR [rbp-0x40],rsi
  403067:	mov    rax,QWORD PTR [rbp-0x38]
  40306b:	mov    QWORD PTR [rbp-0x28],rax
  40306f:	mov    QWORD PTR [rbp-0x30],0x0
  403077:	cmp    QWORD PTR [rbp-0x28],0x0
  40307c:	jne    40309e <rb_strcasecmp@plt+0xb2e>
  40307e:	lea    rsi,[rip+0xc18b]        # 40f210 <rb_strcasecmp@plt+0xcca0>
  403085:	mov    edi,0x43
  40308a:	mov    eax,0x0
  40308f:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  403094:	mov    edi,0x2
  403099:	call   4020e0 <exit@plt>
  40309e:	cmp    QWORD PTR [rbp-0x40],0x0
  4030a3:	je     40316e <rb_strcasecmp@plt+0xbfe>
  4030a9:	mov    rax,QWORD PTR [rbp-0x28]
  4030ad:	mov    eax,DWORD PTR [rax+0x10]
  4030b0:	cmp    eax,0x52
  4030b3:	jne    4030f0 <rb_strcasecmp@plt+0xb80>
  4030b5:	mov    rax,QWORD PTR [rbp-0x28]
  4030b9:	add    rax,0x18
  4030bd:	mov    QWORD PTR [rbp-0x20],rax
  4030c1:	mov    rax,QWORD PTR [rbp-0x40]
  4030c5:	add    rax,0x8
  4030c9:	mov    QWORD PTR [rbp-0x18],rax
  4030cd:	mov    rax,QWORD PTR [rbp-0x20]
  4030d1:	mov    edx,DWORD PTR [rax+0x4]
  4030d4:	mov    rax,QWORD PTR [rbp-0x18]
  4030d8:	mov    eax,DWORD PTR [rax+0x4]
  4030db:	cmp    edx,eax
  4030dd:	jne    40316f <rb_strcasecmp@plt+0xbff>
  4030e3:	mov    rax,QWORD PTR [rbp-0x40]
  4030e7:	mov    rax,QWORD PTR [rax]
  4030ea:	mov    QWORD PTR [rbp-0x30],rax
  4030ee:	jmp    40316f <rb_strcasecmp@plt+0xbff>
  4030f0:	mov    rax,QWORD PTR [rbp-0x28]
  4030f4:	mov    eax,DWORD PTR [rax+0x10]
  4030f7:	cmp    eax,0x53
  4030fa:	jne    403145 <rb_strcasecmp@plt+0xbd5>
  4030fc:	mov    rax,QWORD PTR [rbp-0x28]
  403100:	add    rax,0x18
  403104:	mov    QWORD PTR [rbp-0x10],rax
  403108:	mov    rax,QWORD PTR [rbp-0x40]
  40310c:	add    rax,0x8
  403110:	mov    QWORD PTR [rbp-0x8],rax
  403114:	mov    rax,QWORD PTR [rbp-0x8]
  403118:	lea    rcx,[rax+0x8]
  40311c:	mov    rax,QWORD PTR [rbp-0x10]
  403120:	add    rax,0x8
  403124:	mov    edx,0x10
  403129:	mov    rsi,rcx
  40312c:	mov    rdi,rax
  40312f:	call   402480 <memcmp@plt>
  403134:	test   eax,eax
  403136:	jne    40316f <rb_strcasecmp@plt+0xbff>
  403138:	mov    rax,QWORD PTR [rbp-0x40]
  40313c:	mov    rax,QWORD PTR [rax]
  40313f:	mov    QWORD PTR [rbp-0x30],rax
  403143:	jmp    40316f <rb_strcasecmp@plt+0xbff>
  403145:	mov    rax,QWORD PTR [rbp-0x28]
  403149:	mov    eax,DWORD PTR [rax+0x10]
  40314c:	mov    edx,eax
  40314e:	lea    rsi,[rip+0xc0f3]        # 40f248 <rb_strcasecmp@plt+0xccd8>
  403155:	mov    edi,0x43
  40315a:	mov    eax,0x0
  40315f:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  403164:	mov    edi,0x2
  403169:	call   4020e0 <exit@plt>
  40316e:	nop
  40316f:	mov    rax,QWORD PTR [rbp-0x28]
  403173:	mov    rax,QWORD PTR [rax+0xa0]
  40317a:	test   rax,rax
  40317d:	je     4031af <rb_strcasecmp@plt+0xc3f>
  40317f:	mov    rax,QWORD PTR [rbp-0x28]
  403183:	mov    rax,QWORD PTR [rax+0xa0]
  40318a:	mov    rdx,QWORD PTR [rbp-0x28]
  40318e:	mov    rcx,QWORD PTR [rdx+0xa8]
  403195:	mov    rdx,QWORD PTR [rbp-0x28]
  403199:	mov    edx,DWORD PTR [rdx+0x10]
  40319c:	cmp    QWORD PTR [rbp-0x30],0x0
  4031a1:	setne  sil
  4031a5:	movzx  esi,sil
  4031a9:	mov    rdi,QWORD PTR [rbp-0x30]
  4031ad:	call   rax
  4031af:	mov    rax,QWORD PTR [rbp-0x28]
  4031b3:	mov    rdi,rax
  4031b6:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  4031bb:	nop
  4031bc:	leave  
  4031bd:	ret    
  4031be:	push   rbp
  4031bf:	mov    rbp,rsp
  4031c2:	sub    rsp,0x30
  4031c6:	mov    QWORD PTR [rbp-0x18],rdi
  4031ca:	mov    eax,esi
  4031cc:	mov    DWORD PTR [rbp-0x20],edx
  4031cf:	mov    QWORD PTR [rbp-0x28],rcx
  4031d3:	mov    BYTE PTR [rbp-0x1c],al
  4031d6:	mov    rax,QWORD PTR [rbp-0x28]
  4031da:	mov    QWORD PTR [rbp-0x8],rax
  4031de:	cmp    QWORD PTR [rbp-0x8],0x0
  4031e3:	je     4031eb <rb_strcasecmp@plt+0xc7b>
  4031e5:	cmp    DWORD PTR [rbp-0x20],0x0
  4031e9:	jne    40320b <rb_strcasecmp@plt+0xc9b>
  4031eb:	lea    rsi,[rip+0xc096]        # 40f288 <rb_strcasecmp@plt+0xcd18>
  4031f2:	mov    edi,0x43
  4031f7:	mov    eax,0x0
  4031fc:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  403201:	mov    edi,0x2
  403206:	call   4020e0 <exit@plt>
  40320b:	cmp    QWORD PTR [rbp-0x18],0x0
  403210:	je     40321d <rb_strcasecmp@plt+0xcad>
  403212:	movzx  eax,BYTE PTR [rbp-0x1c]
  403216:	xor    eax,0x1
  403219:	test   al,al
  40321b:	je     403250 <rb_strcasecmp@plt+0xce0>
  40321d:	mov    rax,0x415f60
  403224:	mov    rax,QWORD PTR [rax]
  403227:	mov    ecx,DWORD PTR [rbp-0x20]
  40322a:	mov    rdx,QWORD PTR [rbp-0x8]
  40322e:	lea    rsi,[rip+0xc07e]        # 40f2b3 <rb_strcasecmp@plt+0xcd43>
  403235:	mov    rdi,rax
  403238:	mov    eax,0x0
  40323d:	call   4024a0 <rb_helper_write@plt>
  403242:	mov    rax,QWORD PTR [rbp-0x8]
  403246:	mov    rdi,rax
  403249:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  40324e:	jmp    403288 <rb_strcasecmp@plt+0xd18>
  403250:	mov    rax,0x415f60
  403257:	mov    rax,QWORD PTR [rax]
  40325a:	mov    rsi,QWORD PTR [rbp-0x18]
  40325e:	mov    ecx,DWORD PTR [rbp-0x20]
  403261:	mov    rdx,QWORD PTR [rbp-0x8]
  403265:	mov    r8,rsi
  403268:	lea    rsi,[rip+0xc050]        # 40f2bf <rb_strcasecmp@plt+0xcd4f>
  40326f:	mov    rdi,rax
  403272:	mov    eax,0x0
  403277:	call   4024a0 <rb_helper_write@plt>
  40327c:	mov    rax,QWORD PTR [rbp-0x8]
  403280:	mov    rdi,rax
  403283:	call   402c3d <rb_strcasecmp@plt+0x6cd>
  403288:	leave  
  403289:	ret    
  40328a:	push   rbp
  40328b:	mov    rbp,rsp
  40328e:	sub    rsp,0x30
  403292:	mov    DWORD PTR [rbp-0x24],edi
  403295:	mov    QWORD PTR [rbp-0x30],rsi
  403299:	mov    rax,QWORD PTR [rbp-0x30]
  40329d:	add    rax,0x8
  4032a1:	mov    rax,QWORD PTR [rax]
  4032a4:	mov    rdi,rax
  4032a7:	call   402be7 <rb_strcasecmp@plt+0x677>
  4032ac:	mov    QWORD PTR [rbp-0x10],rax
  4032b0:	mov    rax,QWORD PTR [rbp-0x30]
  4032b4:	add    rax,0x10
  4032b8:	mov    rax,QWORD PTR [rax]
  4032bb:	movzx  eax,BYTE PTR [rax]
  4032be:	mov    BYTE PTR [rbp-0x15],al
  4032c1:	mov    rax,QWORD PTR [rbp-0x30]
  4032c5:	mov    rax,QWORD PTR [rax+0x18]
  4032c9:	mov    QWORD PTR [rbp-0x8],rax
  4032cd:	mov    DWORD PTR [rbp-0x14],0x2
  4032d4:	movsx  eax,BYTE PTR [rbp-0x15]
  4032d8:	cmp    eax,0x36
  4032db:	je     4032f6 <rb_strcasecmp@plt+0xd86>
  4032dd:	cmp    eax,0x36
  4032e0:	jg     4032ec <rb_strcasecmp@plt+0xd7c>
  4032e2:	cmp    eax,0x34
  4032e5:	je     4032fd <rb_strcasecmp@plt+0xd8d>
  4032e7:	jmp    403373 <rb_strcasecmp@plt+0xe03>
  4032ec:	sub    eax,0x52
  4032ef:	cmp    eax,0x1
  4032f2:	ja     403373 <rb_strcasecmp@plt+0xe03>
  4032f4:	jmp    40333b <rb_strcasecmp@plt+0xdcb>
  4032f6:	mov    DWORD PTR [rbp-0x14],0xa
  4032fd:	mov    rdx,QWORD PTR [rbp-0x10]
  403301:	mov    esi,DWORD PTR [rbp-0x14]
  403304:	mov    rax,QWORD PTR [rbp-0x8]
  403308:	mov    rcx,rdx
  40330b:	lea    rdx,[rip+0xfffffffffffffeac]        # 4031be <rb_strcasecmp@plt+0xc4e>
  403312:	mov    rdi,rax
  403315:	call   402c68 <rb_strcasecmp@plt+0x6f8>
  40331a:	test   rax,rax
  40331d:	jne    403399 <rb_strcasecmp@plt+0xe29>
  40331f:	movsx  eax,BYTE PTR [rbp-0x15]
  403323:	mov    ecx,0x0
  403328:	mov    edx,eax
  40332a:	mov    esi,0x0
  40332f:	mov    edi,0x0
  403334:	call   4031be <rb_strcasecmp@plt+0xc4e>
  403339:	jmp    403399 <rb_strcasecmp@plt+0xe29>
  40333b:	mov    rdx,QWORD PTR [rbp-0x10]
  40333f:	mov    rax,QWORD PTR [rbp-0x8]
  403343:	lea    rsi,[rip+0xfffffffffffffe74]        # 4031be <rb_strcasecmp@plt+0xc4e>
  40334a:	mov    rdi,rax
  40334d:	call   402d4b <rb_strcasecmp@plt+0x7db>
  403352:	test   rax,rax
  403355:	jne    40339c <rb_strcasecmp@plt+0xe2c>
  403357:	movsx  eax,BYTE PTR [rbp-0x15]
  40335b:	mov    ecx,0x0
  403360:	mov    edx,eax
  403362:	mov    esi,0x0
  403367:	mov    edi,0x0
  40336c:	call   4031be <rb_strcasecmp@plt+0xc4e>
  403371:	jmp    40339c <rb_strcasecmp@plt+0xe2c>
  403373:	movsx  eax,BYTE PTR [rbp-0x15]
  403377:	mov    edx,eax
  403379:	lea    rsi,[rip+0xbf50]        # 40f2d0 <rb_strcasecmp@plt+0xcd60>
  403380:	mov    edi,0x43
  403385:	mov    eax,0x0
  40338a:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40338f:	mov    edi,0x2
  403394:	call   4020e0 <exit@plt>
  403399:	nop
  40339a:	jmp    40339d <rb_strcasecmp@plt+0xe2d>
  40339c:	nop
  40339d:	nop
  40339e:	leave  
  40339f:	ret    
  4033a0:	push   rbp
  4033a1:	mov    rbp,rsp
  4033a4:	sub    rsp,0x2a0
  4033ab:	mov    DWORD PTR [rbp-0x294],edi
  4033b1:	mov    eax,esi
  4033b3:	mov    BYTE PTR [rbp-0x298],al
  4033b9:	mov    rax,QWORD PTR fs:0x28
  4033c2:	mov    QWORD PTR [rbp-0x8],rax
  4033c6:	xor    eax,eax
  4033c8:	mov    QWORD PTR [rbp-0x280],0x0
  4033d3:	mov    rax,0x41a094
  4033da:	mov    eax,DWORD PTR [rax]
  4033dc:	test   eax,eax
  4033de:	jne    403422 <rb_strcasecmp@plt+0xeb2>
  4033e0:	lea    rsi,[rip+0xbf1a]        # 40f301 <rb_strcasecmp@plt+0xcd91>
  4033e7:	mov    edi,0x43
  4033ec:	mov    eax,0x0
  4033f1:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  4033f6:	movsx  ecx,BYTE PTR [rbp-0x298]
  4033fd:	mov    eax,DWORD PTR [rbp-0x294]
  403403:	lea    rdx,[rip+0xbf0d]        # 40f317 <rb_strcasecmp@plt+0xcda7>
  40340a:	mov    esi,ecx
  40340c:	mov    edi,eax
  40340e:	mov    eax,0x0
  403413:	call   4038c7 <rb_strcasecmp@plt+0x1357>
  403418:	mov    edi,0x2
  40341d:	call   4020e0 <exit@plt>
  403422:	mov    DWORD PTR [rbp-0x284],0x0
  40342c:	jmp    40351a <rb_strcasecmp@plt+0xfaa>
  403431:	mov    eax,DWORD PTR [rbp-0x284]
  403437:	cdqe   
  403439:	shl    rax,0x7
  40343d:	mov    rdx,rax
  403440:	mov    rax,0x41a3c0
  403447:	lea    rcx,[rdx+rax*1]
  40344b:	lea    rax,[rbp-0x270]
  403452:	mov    edx,0x35
  403457:	mov    rsi,rax
  40345a:	mov    rdi,rcx
  40345d:	call   402430 <rb_inet_ntop_sock@plt>
  403462:	movzx  eax,BYTE PTR [rbp-0x270]
  403469:	test   al,al
  40346b:	jne    4034af <rb_strcasecmp@plt+0xf3f>
  40346d:	lea    rsi,[rip+0xbeb1]        # 40f325 <rb_strcasecmp@plt+0xcdb5>
  403474:	mov    edi,0x43
  403479:	mov    eax,0x0
  40347e:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  403483:	movsx  ecx,BYTE PTR [rbp-0x298]
  40348a:	mov    eax,DWORD PTR [rbp-0x294]
  403490:	lea    rdx,[rip+0xbea3]        # 40f33a <rb_strcasecmp@plt+0xcdca>
  403497:	mov    esi,ecx
  403499:	mov    edi,eax
  40349b:	mov    eax,0x0
  4034a0:	call   4038c7 <rb_strcasecmp@plt+0x1357>
  4034a5:	mov    edi,0x2
  4034aa:	call   4020e0 <exit@plt>
  4034af:	lea    rax,[rbp-0x270]
  4034b6:	mov    rdi,rax
  4034b9:	call   402210 <strlen@plt>
  4034be:	add    rax,0x1
  4034c2:	mov    QWORD PTR [rbp-0x278],rax
  4034c9:	mov    eax,0x21c
  4034ce:	sub    rax,QWORD PTR [rbp-0x280]
  4034d5:	lea    rcx,[rbp-0x230]
  4034dc:	mov    rdx,QWORD PTR [rbp-0x280]
  4034e3:	lea    rdi,[rcx+rdx*1]
  4034e7:	lea    rdx,[rbp-0x270]
  4034ee:	mov    rcx,rdx
  4034f1:	lea    rdx,[rip+0xbe54]        # 40f34c <rb_strcasecmp@plt+0xcddc>
  4034f8:	mov    rsi,rax
  4034fb:	mov    eax,0x0
  403500:	call   402080 <snprintf@plt>
  403505:	mov    rax,QWORD PTR [rbp-0x278]
  40350c:	add    QWORD PTR [rbp-0x280],rax
  403513:	add    DWORD PTR [rbp-0x284],0x1
  40351a:	mov    rax,0x41a094
  403521:	mov    eax,DWORD PTR [rax]
  403523:	cmp    DWORD PTR [rbp-0x284],eax
  403529:	jl     403431 <rb_strcasecmp@plt+0xec1>
  40352f:	cmp    QWORD PTR [rbp-0x280],0x0
  403537:	je     403555 <rb_strcasecmp@plt+0xfe5>
  403539:	sub    QWORD PTR [rbp-0x280],0x1
  403541:	lea    rdx,[rbp-0x230]
  403548:	mov    rax,QWORD PTR [rbp-0x280]
  40354f:	add    rax,rdx
  403552:	mov    BYTE PTR [rax],0x0
  403555:	movsx  esi,BYTE PTR [rbp-0x298]
  40355c:	lea    rdx,[rbp-0x230]
  403563:	mov    eax,DWORD PTR [rbp-0x294]
  403569:	mov    rcx,rdx
  40356c:	lea    rdx,[rip+0xbddd]        # 40f350 <rb_strcasecmp@plt+0xcde0>
  403573:	mov    edi,eax
  403575:	mov    eax,0x0
  40357a:	call   4037b7 <rb_strcasecmp@plt+0x1247>
  40357f:	nop
  403580:	mov    rax,QWORD PTR [rbp-0x8]
  403584:	xor    rax,QWORD PTR fs:0x28
  40358d:	je     403594 <rb_strcasecmp@plt+0x1024>
  40358f:	call   402400 <__stack_chk_fail@plt>
  403594:	leave  
  403595:	ret    
  403596:	push   rbp
  403597:	mov    rbp,rsp
  40359a:	sub    rsp,0x10
  40359e:	mov    eax,edi
  4035a0:	mov    BYTE PTR [rbp-0x4],al
  4035a3:	call   40526d <rb_strcasecmp@plt+0x2cfd>
  4035a8:	nop
  4035a9:	leave  
  4035aa:	ret    
  4035ab:	push   rbp
  4035ac:	mov    rbp,rsp
  4035af:	sub    rsp,0x2f0
  4035b6:	mov    DWORD PTR [rbp-0x2e4],edi
  4035bc:	mov    QWORD PTR [rbp-0x2f0],rsi
  4035c3:	mov    QWORD PTR [rbp-0xa0],rdx
  4035ca:	mov    QWORD PTR [rbp-0x98],rcx
  4035d1:	mov    QWORD PTR [rbp-0x90],r8
  4035d8:	mov    QWORD PTR [rbp-0x88],r9
  4035df:	test   al,al
  4035e1:	je     40360b <rb_strcasecmp@plt+0x109b>
  4035e3:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4035e8:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  4035ed:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  4035f2:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  4035f7:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  4035fc:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403601:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  403606:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  40360b:	mov    rax,QWORD PTR fs:0x28
  403614:	mov    QWORD PTR [rbp-0xb8],rax
  40361b:	xor    eax,eax
  40361d:	mov    DWORD PTR [rbp-0x2d8],0x10
  403627:	mov    DWORD PTR [rbp-0x2d4],0x30
  403631:	lea    rax,[rbp+0x10]
  403635:	mov    QWORD PTR [rbp-0x2d0],rax
  40363c:	lea    rax,[rbp-0xb0]
  403643:	mov    QWORD PTR [rbp-0x2c8],rax
  40364a:	lea    rcx,[rbp-0x2d8]
  403651:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403658:	lea    rax,[rbp-0x2c0]
  40365f:	mov    esi,0x200
  403664:	mov    rdi,rax
  403667:	call   402380 <vsnprintf@plt>
  40366c:	mov    rax,0x415f60
  403673:	mov    rax,QWORD PTR [rax]
  403676:	lea    rcx,[rbp-0x2c0]
  40367d:	mov    edx,DWORD PTR [rbp-0x2e4]
  403683:	lea    rsi,[rip+0xbcc9]        # 40f353 <rb_strcasecmp@plt+0xcde3>
  40368a:	mov    rdi,rax
  40368d:	mov    eax,0x0
  403692:	call   4024a0 <rb_helper_write@plt>
  403697:	nop
  403698:	mov    rax,QWORD PTR [rbp-0xb8]
  40369f:	xor    rax,QWORD PTR fs:0x28
  4036a8:	je     4036af <rb_strcasecmp@plt+0x113f>
  4036aa:	call   402400 <__stack_chk_fail@plt>
  4036af:	leave  
  4036b0:	ret    
  4036b1:	push   rbp
  4036b2:	mov    rbp,rsp
  4036b5:	sub    rsp,0x2f0
  4036bc:	mov    DWORD PTR [rbp-0x2e4],edi
  4036c2:	mov    QWORD PTR [rbp-0x2f0],rsi
  4036c9:	mov    QWORD PTR [rbp-0xa0],rdx
  4036d0:	mov    QWORD PTR [rbp-0x98],rcx
  4036d7:	mov    QWORD PTR [rbp-0x90],r8
  4036de:	mov    QWORD PTR [rbp-0x88],r9
  4036e5:	test   al,al
  4036e7:	je     403711 <rb_strcasecmp@plt+0x11a1>
  4036e9:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4036ee:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  4036f3:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  4036f8:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  4036fd:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403702:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403707:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  40370c:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403711:	mov    rax,QWORD PTR fs:0x28
  40371a:	mov    QWORD PTR [rbp-0xb8],rax
  403721:	xor    eax,eax
  403723:	mov    DWORD PTR [rbp-0x2d8],0x10
  40372d:	mov    DWORD PTR [rbp-0x2d4],0x30
  403737:	lea    rax,[rbp+0x10]
  40373b:	mov    QWORD PTR [rbp-0x2d0],rax
  403742:	lea    rax,[rbp-0xb0]
  403749:	mov    QWORD PTR [rbp-0x2c8],rax
  403750:	lea    rcx,[rbp-0x2d8]
  403757:	mov    rdx,QWORD PTR [rbp-0x2f0]
  40375e:	lea    rax,[rbp-0x2c0]
  403765:	mov    esi,0x200
  40376a:	mov    rdi,rax
  40376d:	call   402380 <vsnprintf@plt>
  403772:	mov    rax,0x415f60
  403779:	mov    rax,QWORD PTR [rax]
  40377c:	lea    rcx,[rbp-0x2c0]
  403783:	mov    edx,DWORD PTR [rbp-0x2e4]
  403789:	lea    rsi,[rip+0xbbcc]        # 40f35c <rb_strcasecmp@plt+0xcdec>
  403790:	mov    rdi,rax
  403793:	mov    eax,0x0
  403798:	call   4024a0 <rb_helper_write@plt>
  40379d:	nop
  40379e:	mov    rax,QWORD PTR [rbp-0xb8]
  4037a5:	xor    rax,QWORD PTR fs:0x28
  4037ae:	je     4037b5 <rb_strcasecmp@plt+0x1245>
  4037b0:	call   402400 <__stack_chk_fail@plt>
  4037b5:	leave  
  4037b6:	ret    
  4037b7:	push   rbp
  4037b8:	mov    rbp,rsp
  4037bb:	sub    rsp,0x2f0
  4037c2:	mov    DWORD PTR [rbp-0x2e4],edi
  4037c8:	mov    QWORD PTR [rbp-0x2f0],rdx
  4037cf:	mov    QWORD PTR [rbp-0x98],rcx
  4037d6:	mov    QWORD PTR [rbp-0x90],r8
  4037dd:	mov    QWORD PTR [rbp-0x88],r9
  4037e4:	test   al,al
  4037e6:	je     403810 <rb_strcasecmp@plt+0x12a0>
  4037e8:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4037ed:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  4037f2:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  4037f7:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  4037fc:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403801:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403806:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  40380b:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403810:	mov    BYTE PTR [rbp-0x2e8],sil
  403817:	mov    rax,QWORD PTR fs:0x28
  403820:	mov    QWORD PTR [rbp-0xb8],rax
  403827:	xor    eax,eax
  403829:	mov    DWORD PTR [rbp-0x2d8],0x18
  403833:	mov    DWORD PTR [rbp-0x2d4],0x30
  40383d:	lea    rax,[rbp+0x10]
  403841:	mov    QWORD PTR [rbp-0x2d0],rax
  403848:	lea    rax,[rbp-0xb0]
  40384f:	mov    QWORD PTR [rbp-0x2c8],rax
  403856:	lea    rcx,[rbp-0x2d8]
  40385d:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403864:	lea    rax,[rbp-0x2c0]
  40386b:	mov    esi,0x200
  403870:	mov    rdi,rax
  403873:	call   402380 <vsnprintf@plt>
  403878:	movsx  ecx,BYTE PTR [rbp-0x2e8]
  40387f:	mov    rax,0x415f60
  403886:	mov    rax,QWORD PTR [rax]
  403889:	lea    rsi,[rbp-0x2c0]
  403890:	mov    edx,DWORD PTR [rbp-0x2e4]
  403896:	mov    r8,rsi
  403899:	lea    rsi,[rip+0xbac5]        # 40f365 <rb_strcasecmp@plt+0xcdf5>
  4038a0:	mov    rdi,rax
  4038a3:	mov    eax,0x0
  4038a8:	call   4024a0 <rb_helper_write@plt>
  4038ad:	nop
  4038ae:	mov    rax,QWORD PTR [rbp-0xb8]
  4038b5:	xor    rax,QWORD PTR fs:0x28
  4038be:	je     4038c5 <rb_strcasecmp@plt+0x1355>
  4038c0:	call   402400 <__stack_chk_fail@plt>
  4038c5:	leave  
  4038c6:	ret    
  4038c7:	push   rbp
  4038c8:	mov    rbp,rsp
  4038cb:	sub    rsp,0x2f0
  4038d2:	mov    DWORD PTR [rbp-0x2e4],edi
  4038d8:	mov    QWORD PTR [rbp-0x2f0],rdx
  4038df:	mov    QWORD PTR [rbp-0x98],rcx
  4038e6:	mov    QWORD PTR [rbp-0x90],r8
  4038ed:	mov    QWORD PTR [rbp-0x88],r9
  4038f4:	test   al,al
  4038f6:	je     403920 <rb_strcasecmp@plt+0x13b0>
  4038f8:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4038fd:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  403902:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  403907:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  40390c:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403911:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403916:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  40391b:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403920:	mov    BYTE PTR [rbp-0x2e8],sil
  403927:	mov    rax,QWORD PTR fs:0x28
  403930:	mov    QWORD PTR [rbp-0xb8],rax
  403937:	xor    eax,eax
  403939:	mov    DWORD PTR [rbp-0x2d8],0x18
  403943:	mov    DWORD PTR [rbp-0x2d4],0x30
  40394d:	lea    rax,[rbp+0x10]
  403951:	mov    QWORD PTR [rbp-0x2d0],rax
  403958:	lea    rax,[rbp-0xb0]
  40395f:	mov    QWORD PTR [rbp-0x2c8],rax
  403966:	lea    rcx,[rbp-0x2d8]
  40396d:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403974:	lea    rax,[rbp-0x2c0]
  40397b:	mov    esi,0x200
  403980:	mov    rdi,rax
  403983:	call   402380 <vsnprintf@plt>
  403988:	movsx  ecx,BYTE PTR [rbp-0x2e8]
  40398f:	mov    rax,0x415f60
  403996:	mov    rax,QWORD PTR [rax]
  403999:	lea    rsi,[rbp-0x2c0]
  4039a0:	mov    edx,DWORD PTR [rbp-0x2e4]
  4039a6:	mov    r8,rsi
  4039a9:	lea    rsi,[rip+0xb9c0]        # 40f370 <rb_strcasecmp@plt+0xce00>
  4039b0:	mov    rdi,rax
  4039b3:	mov    eax,0x0
  4039b8:	call   4024a0 <rb_helper_write@plt>
  4039bd:	nop
  4039be:	mov    rax,QWORD PTR [rbp-0xb8]
  4039c5:	xor    rax,QWORD PTR fs:0x28
  4039ce:	je     4039d5 <rb_strcasecmp@plt+0x1465>
  4039d0:	call   402400 <__stack_chk_fail@plt>
  4039d5:	leave  
  4039d6:	ret    
  4039d7:	push   rbp
  4039d8:	mov    rbp,rsp
  4039db:	sub    rsp,0x10
  4039df:	mov    DWORD PTR [rbp-0x4],edi
  4039e2:	mov    eax,esi
  4039e4:	mov    BYTE PTR [rbp-0x8],al
  4039e7:	movsx  ecx,BYTE PTR [rbp-0x8]
  4039eb:	mov    rax,0x415f60
  4039f2:	mov    rax,QWORD PTR [rax]
  4039f5:	mov    edx,DWORD PTR [rbp-0x4]
  4039f8:	lea    rsi,[rip+0xb97c]        # 40f37b <rb_strcasecmp@plt+0xce0b>
  4039ff:	mov    rdi,rax
  403a02:	mov    eax,0x0
  403a07:	call   4024a0 <rb_helper_write@plt>
  403a0c:	nop
  403a0d:	leave  
  403a0e:	ret    
  403a0f:	push   rbp
  403a10:	mov    rbp,rsp
  403a13:	sub    rsp,0x20
  403a17:	mov    QWORD PTR [rbp-0x8],rdi
  403a1b:	mov    QWORD PTR [rbp-0x10],rsi
  403a1f:	mov    QWORD PTR [rbp-0x18],rdx
  403a23:	cmp    QWORD PTR [rbp-0x8],0x0
  403a28:	jne    403a49 <rb_strcasecmp@plt+0x14d9>
  403a2a:	lea    rcx,[rip+0xbb97]        # 40f5c8 <rb_strcasecmp@plt+0xd058>
  403a31:	mov    edx,0x8f
  403a36:	lea    rsi,[rip+0xb94b]        # 40f388 <rb_strcasecmp@plt+0xce18>
  403a3d:	lea    rdi,[rip+0xb960]        # 40f3a4 <rb_strcasecmp@plt+0xce34>
  403a44:	call   4020f0 <__assert_fail@plt>
  403a49:	cmp    QWORD PTR [rbp-0x10],0x0
  403a4e:	jne    403a6f <rb_strcasecmp@plt+0x14ff>
  403a50:	lea    rcx,[rip+0xbb71]        # 40f5c8 <rb_strcasecmp@plt+0xd058>
  403a57:	mov    edx,0x90
  403a5c:	lea    rsi,[rip+0xb925]        # 40f388 <rb_strcasecmp@plt+0xce18>
  403a63:	lea    rdi,[rip+0xb947]        # 40f3b1 <rb_strcasecmp@plt+0xce41>
  403a6a:	call   4020f0 <__assert_fail@plt>
  403a6f:	cmp    QWORD PTR [rbp-0x18],0x0
  403a74:	jne    403a95 <rb_strcasecmp@plt+0x1525>
  403a76:	lea    rcx,[rip+0xbb4b]        # 40f5c8 <rb_strcasecmp@plt+0xd058>
  403a7d:	mov    edx,0x91
  403a82:	lea    rsi,[rip+0xb8ff]        # 40f388 <rb_strcasecmp@plt+0xce18>
  403a89:	lea    rdi,[rip+0xb92b]        # 40f3bb <rb_strcasecmp@plt+0xce4b>
  403a90:	call   4020f0 <__assert_fail@plt>
  403a95:	mov    rax,QWORD PTR [rbp-0x10]
  403a99:	mov    rdx,QWORD PTR [rbp-0x8]
  403a9d:	mov    QWORD PTR [rax],rdx
  403aa0:	mov    rax,QWORD PTR [rbp-0x10]
  403aa4:	mov    QWORD PTR [rax+0x8],0x0
  403aac:	mov    rax,QWORD PTR [rbp-0x18]
  403ab0:	mov    rdx,QWORD PTR [rax]
  403ab3:	mov    rax,QWORD PTR [rbp-0x10]
  403ab7:	mov    QWORD PTR [rax+0x10],rdx
  403abb:	mov    rax,QWORD PTR [rbp-0x18]
  403abf:	mov    rax,QWORD PTR [rax]
  403ac2:	test   rax,rax
  403ac5:	je     403ad8 <rb_strcasecmp@plt+0x1568>
  403ac7:	mov    rax,QWORD PTR [rbp-0x18]
  403acb:	mov    rax,QWORD PTR [rax]
  403ace:	mov    rdx,QWORD PTR [rbp-0x10]
  403ad2:	mov    QWORD PTR [rax+0x8],rdx
  403ad6:	jmp    403af1 <rb_strcasecmp@plt+0x1581>
  403ad8:	mov    rax,QWORD PTR [rbp-0x18]
  403adc:	mov    rax,QWORD PTR [rax+0x8]
  403ae0:	test   rax,rax
  403ae3:	jne    403af1 <rb_strcasecmp@plt+0x1581>
  403ae5:	mov    rax,QWORD PTR [rbp-0x18]
  403ae9:	mov    rdx,QWORD PTR [rbp-0x10]
  403aed:	mov    QWORD PTR [rax+0x8],rdx
  403af1:	mov    rax,QWORD PTR [rbp-0x18]
  403af5:	mov    rdx,QWORD PTR [rbp-0x10]
  403af9:	mov    QWORD PTR [rax],rdx
  403afc:	mov    rax,QWORD PTR [rbp-0x18]
  403b00:	mov    rax,QWORD PTR [rax+0x10]
  403b04:	lea    rdx,[rax+0x1]
  403b08:	mov    rax,QWORD PTR [rbp-0x18]
  403b0c:	mov    QWORD PTR [rax+0x10],rdx
  403b10:	nop
  403b11:	leave  
  403b12:	ret    
  403b13:	push   rbp
  403b14:	mov    rbp,rsp
  403b17:	sub    rsp,0x10
  403b1b:	mov    QWORD PTR [rbp-0x8],rdi
  403b1f:	mov    QWORD PTR [rbp-0x10],rsi
  403b23:	cmp    QWORD PTR [rbp-0x8],0x0
  403b28:	jne    403b49 <rb_strcasecmp@plt+0x15d9>
  403b2a:	lea    rcx,[rip+0xba87]        # 40f5b8 <rb_strcasecmp@plt+0xd048>
  403b31:	mov    edx,0xeb
  403b36:	lea    rsi,[rip+0xb84b]        # 40f388 <rb_strcasecmp@plt+0xce18>
  403b3d:	lea    rdi,[rip+0xb86d]        # 40f3b1 <rb_strcasecmp@plt+0xce41>
  403b44:	call   4020f0 <__assert_fail@plt>
  403b49:	cmp    QWORD PTR [rbp-0x10],0x0
  403b4e:	jne    403b6f <rb_strcasecmp@plt+0x15ff>
  403b50:	lea    rcx,[rip+0xba61]        # 40f5b8 <rb_strcasecmp@plt+0xd048>
  403b57:	mov    edx,0xec
  403b5c:	lea    rsi,[rip+0xb825]        # 40f388 <rb_strcasecmp@plt+0xce18>
  403b63:	lea    rdi,[rip+0xb851]        # 40f3bb <rb_strcasecmp@plt+0xce4b>
  403b6a:	call   4020f0 <__assert_fail@plt>
  403b6f:	mov    rax,QWORD PTR [rbp-0x8]
  403b73:	mov    rax,QWORD PTR [rax+0x10]
  403b77:	test   rax,rax
  403b7a:	je     403b92 <rb_strcasecmp@plt+0x1622>
  403b7c:	mov    rax,QWORD PTR [rbp-0x8]
  403b80:	mov    rax,QWORD PTR [rax+0x10]
  403b84:	mov    rdx,QWORD PTR [rbp-0x8]
  403b88:	mov    rdx,QWORD PTR [rdx+0x8]
  403b8c:	mov    QWORD PTR [rax+0x8],rdx
  403b90:	jmp    403ba2 <rb_strcasecmp@plt+0x1632>
  403b92:	mov    rax,QWORD PTR [rbp-0x8]
  403b96:	mov    rdx,QWORD PTR [rax+0x8]
  403b9a:	mov    rax,QWORD PTR [rbp-0x10]
  403b9e:	mov    QWORD PTR [rax+0x8],rdx
  403ba2:	mov    rax,QWORD PTR [rbp-0x8]
  403ba6:	mov    rax,QWORD PTR [rax+0x8]
  403baa:	test   rax,rax
  403bad:	je     403bc5 <rb_strcasecmp@plt+0x1655>
  403baf:	mov    rax,QWORD PTR [rbp-0x8]
  403bb3:	mov    rax,QWORD PTR [rax+0x8]
  403bb7:	mov    rdx,QWORD PTR [rbp-0x8]
  403bbb:	mov    rdx,QWORD PTR [rdx+0x10]
  403bbf:	mov    QWORD PTR [rax+0x10],rdx
  403bc3:	jmp    403bd4 <rb_strcasecmp@plt+0x1664>
  403bc5:	mov    rax,QWORD PTR [rbp-0x8]
  403bc9:	mov    rdx,QWORD PTR [rax+0x10]
  403bcd:	mov    rax,QWORD PTR [rbp-0x10]
  403bd1:	mov    QWORD PTR [rax],rdx
  403bd4:	mov    rax,QWORD PTR [rbp-0x8]
  403bd8:	mov    QWORD PTR [rax+0x8],0x0
  403be0:	mov    rax,QWORD PTR [rbp-0x8]
  403be4:	mov    rdx,QWORD PTR [rax+0x8]
  403be8:	mov    rax,QWORD PTR [rbp-0x8]
  403bec:	mov    QWORD PTR [rax+0x10],rdx
  403bf0:	mov    rax,QWORD PTR [rbp-0x10]
  403bf4:	mov    rax,QWORD PTR [rax+0x10]
  403bf8:	lea    rdx,[rax-0x1]
  403bfc:	mov    rax,QWORD PTR [rbp-0x10]
  403c00:	mov    QWORD PTR [rax+0x10],rdx
  403c04:	nop
  403c05:	leave  
  403c06:	ret    
  403c07:	push   rbp
  403c08:	mov    rbp,rsp
  403c0b:	sub    rsp,0x20
  403c0f:	mov    QWORD PTR [rbp-0x18],rdi
  403c13:	mov    rax,QWORD PTR [rbp-0x18]
  403c17:	mov    rsi,rax
  403c1a:	mov    edi,0x1
  403c1f:	call   402490 <calloc@plt>
  403c24:	mov    QWORD PTR [rbp-0x8],rax
  403c28:	cmp    QWORD PTR [rbp-0x8],0x0
  403c2d:	sete   al
  403c30:	movzx  eax,al
  403c33:	test   rax,rax
  403c36:	je     403c3d <rb_strcasecmp@plt+0x16cd>
  403c38:	call   4023b0 <rb_outofmemory@plt>
  403c3d:	mov    rax,QWORD PTR [rbp-0x8]
  403c41:	leave  
  403c42:	ret    
  403c43:	push   rbp
  403c44:	mov    rbp,rsp
  403c47:	sub    rsp,0x10
  403c4b:	mov    QWORD PTR [rbp-0x8],rdi
  403c4f:	cmp    QWORD PTR [rbp-0x8],0x0
  403c54:	setne  al
  403c57:	movzx  eax,al
  403c5a:	test   rax,rax
  403c5d:	je     403c6b <rb_strcasecmp@plt+0x16fb>
  403c5f:	mov    rax,QWORD PTR [rbp-0x8]
  403c63:	mov    rdi,rax
  403c66:	call   402200 <free@plt>
  403c6b:	nop
  403c6c:	leave  
  403c6d:	ret    
  403c6e:	push   rbp
  403c6f:	mov    rbp,rsp
  403c72:	mov    QWORD PTR [rbp-0x8],rdi
  403c76:	mov    QWORD PTR [rbp-0x10],rsi
  403c7a:	mov    rax,QWORD PTR [rbp-0x10]
  403c7e:	mov    edx,eax
  403c80:	mov    rax,QWORD PTR [rbp-0x8]
  403c84:	sub    edx,eax
  403c86:	mov    eax,edx
  403c88:	pop    rbp
  403c89:	ret    
  403c8a:	push   rbp
  403c8b:	mov    rbp,rsp
  403c8e:	mov    QWORD PTR [rbp-0x8],rdi
  403c92:	mov    rax,QWORD PTR [rbp-0x8]
  403c96:	mov    eax,DWORD PTR [rax+0x1cc]
  403c9c:	lea    edx,[rax+0x1]
  403c9f:	mov    rax,QWORD PTR [rbp-0x8]
  403ca3:	mov    DWORD PTR [rax+0x1cc],edx
  403ca9:	nop
  403caa:	pop    rbp
  403cab:	ret    
  403cac:	push   rbp
  403cad:	mov    rbp,rsp
  403cb0:	sub    rsp,0x10
  403cb4:	mov    QWORD PTR [rbp-0x8],rdi
  403cb8:	mov    rax,QWORD PTR [rbp-0x8]
  403cbc:	mov    eax,DWORD PTR [rax+0x1cc]
  403cc2:	lea    edx,[rax-0x1]
  403cc5:	mov    rax,QWORD PTR [rbp-0x8]
  403cc9:	mov    DWORD PTR [rax+0x1cc],edx
  403ccf:	mov    rax,QWORD PTR [rbp-0x8]
  403cd3:	mov    eax,DWORD PTR [rax+0x1cc]
  403cd9:	test   eax,eax
  403cdb:	jne    403ce9 <rb_strcasecmp@plt+0x1779>
  403cdd:	mov    rax,QWORD PTR [rbp-0x8]
  403ce1:	mov    rdi,rax
  403ce4:	call   40421d <rb_strcasecmp@plt+0x1cad>
  403ce9:	nop
  403cea:	leave  
  403ceb:	ret    
  403cec:	push   rbp
  403ced:	mov    rbp,rsp
  403cf0:	mov    QWORD PTR [rbp-0x8],rdi
  403cf4:	mov    DWORD PTR [rbp-0xc],esi
  403cf7:	mov    rax,QWORD PTR [rbp-0x8]
  403cfb:	mov    rax,QWORD PTR [rax+0x1d0]
  403d02:	mov    edx,DWORD PTR [rbp-0xc]
  403d05:	shl    rdx,0x5
  403d09:	add    rax,rdx
  403d0c:	mov    eax,DWORD PTR [rax+0x18]
  403d0f:	pop    rbp
  403d10:	ret    
  403d11:	push   rbp
  403d12:	mov    rbp,rsp
  403d15:	sub    rsp,0x10
  403d19:	mov    QWORD PTR [rbp-0x8],rdi
  403d1d:	mov    DWORD PTR [rbp-0xc],esi
  403d20:	mov    edx,DWORD PTR [rbp-0xc]
  403d23:	mov    rax,QWORD PTR [rbp-0x8]
  403d27:	mov    esi,edx
  403d29:	mov    rdi,rax
  403d2c:	call   403cec <rb_strcasecmp@plt+0x177c>
  403d31:	cmp    eax,0x1
  403d34:	sete   al
  403d37:	leave  
  403d38:	ret    
  403d39:	push   rbp
  403d3a:	mov    rbp,rsp
  403d3d:	mov    QWORD PTR [rbp-0x8],rdi
  403d41:	mov    DWORD PTR [rbp-0xc],esi
  403d44:	mov    rax,QWORD PTR [rbp-0x8]
  403d48:	mov    rax,QWORD PTR [rax+0x1d0]
  403d4f:	mov    edx,DWORD PTR [rbp-0xc]
  403d52:	shl    rdx,0x5
  403d56:	add    rax,rdx
  403d59:	mov    rax,QWORD PTR [rax+0x8]
  403d5d:	pop    rbp
  403d5e:	ret    
  403d5f:	push   rbp
  403d60:	mov    rbp,rsp
  403d63:	mov    QWORD PTR [rbp-0x8],rdi
  403d67:	mov    DWORD PTR [rbp-0xc],esi
  403d6a:	mov    DWORD PTR [rbp-0x10],edx
  403d6d:	mov    rax,QWORD PTR [rbp-0x8]
  403d71:	mov    rax,QWORD PTR [rax+0x1d0]
  403d78:	mov    edx,DWORD PTR [rbp-0xc]
  403d7b:	shl    rdx,0x5
  403d7f:	add    rdx,rax
  403d82:	mov    eax,DWORD PTR [rbp-0x10]
  403d85:	mov    DWORD PTR [rdx+0x18],eax
  403d88:	nop
  403d89:	pop    rbp
  403d8a:	ret    
  403d8b:	push   rbp
  403d8c:	mov    rbp,rsp
  403d8f:	sub    rsp,0x10
  403d93:	mov    QWORD PTR [rbp-0x8],rdi
  403d97:	mov    DWORD PTR [rbp-0xc],esi
  403d9a:	mov    rax,QWORD PTR [rbp-0x8]
  403d9e:	mov    eax,DWORD PTR [rax+0x1c8]
  403da4:	lea    edx,[rax+0x1]
  403da7:	mov    rax,QWORD PTR [rbp-0x8]
  403dab:	mov    DWORD PTR [rax+0x1c8],edx
  403db1:	mov    ecx,DWORD PTR [rbp-0xc]
  403db4:	mov    rax,QWORD PTR [rbp-0x8]
  403db8:	mov    edx,0x1
  403dbd:	mov    esi,ecx
  403dbf:	mov    rdi,rax
  403dc2:	call   403d5f <rb_strcasecmp@plt+0x17ef>
  403dc7:	nop
  403dc8:	leave  
  403dc9:	ret    
  403dca:	push   rbp
  403dcb:	mov    rbp,rsp
  403dce:	sub    rsp,0x10
  403dd2:	mov    QWORD PTR [rbp-0x8],rdi
  403dd6:	mov    DWORD PTR [rbp-0xc],esi
  403dd9:	mov    ecx,DWORD PTR [rbp-0xc]
  403ddc:	mov    rax,QWORD PTR [rbp-0x8]
  403de0:	mov    edx,0x2
  403de5:	mov    esi,ecx
  403de7:	mov    rdi,rax
  403dea:	call   403d5f <rb_strcasecmp@plt+0x17ef>
  403def:	mov    rax,QWORD PTR [rbp-0x8]
  403df3:	mov    eax,DWORD PTR [rax+0x1c8]
  403df9:	lea    edx,[rax-0x1]
  403dfc:	mov    rax,QWORD PTR [rbp-0x8]
  403e00:	mov    DWORD PTR [rax+0x1c8],edx
  403e06:	nop
  403e07:	leave  
  403e08:	ret    
  403e09:	push   rbp
  403e0a:	mov    rbp,rsp
  403e0d:	lea    rsi,[rip+0xfffffffffffffe5a]        # 403c6e <rb_strcasecmp@plt+0x16fe>
  403e14:	lea    rdi,[rip+0xb5ad]        # 40f3c8 <rb_strcasecmp@plt+0xce58>
  403e1b:	call   402460 <rb_dictionary_create@plt>
  403e20:	mov    rdx,rax
  403e23:	mov    rax,0x41a270
  403e2a:	mov    QWORD PTR [rax],rdx
  403e2d:	mov    ecx,0x1
  403e32:	mov    edx,0x0
  403e37:	lea    rsi,[rip+0xc98]        # 404ad6 <rb_strcasecmp@plt+0x2566>
  403e3e:	lea    rdi,[rip+0xb598]        # 40f3dd <rb_strcasecmp@plt+0xce6d>
  403e45:	call   402050 <rb_event_addish@plt>
  403e4a:	mov    QWORD PTR [rip+0x161af],rax        # 41a000 <rb_strcasecmp@plt+0x17a90>
  403e51:	mov    rax,0x415b80
  403e58:	mov    rdi,rax
  403e5b:	call   404008 <rb_strcasecmp@plt+0x1a98>
  403e60:	mov    rax,0x415ec0
  403e67:	mov    rdi,rax
  403e6a:	call   404008 <rb_strcasecmp@plt+0x1a98>
  403e6f:	mov    rax,0x415d80
  403e76:	mov    rdi,rax
  403e79:	call   404008 <rb_strcasecmp@plt+0x1a98>
  403e7e:	mov    rax,0x415ca0
  403e85:	mov    rdi,rax
  403e88:	call   404008 <rb_strcasecmp@plt+0x1a98>
  403e8d:	nop
  403e8e:	pop    rbp
  403e8f:	ret    
  403e90:	push   rbp
  403e91:	mov    rbp,rsp
  403e94:	sub    rsp,0x40
  403e98:	mov    rax,QWORD PTR fs:0x28
  403ea1:	mov    QWORD PTR [rbp-0x8],rax
  403ea5:	xor    eax,eax
  403ea7:	mov    rax,0x41a270
  403eae:	mov    rax,QWORD PTR [rax]
  403eb1:	lea    rdx,[rbp-0x20]
  403eb5:	mov    rsi,rdx
  403eb8:	mov    rdi,rax
  403ebb:	call   402250 <rb_dictionary_foreach_start@plt>
  403ec0:	jmp    403f17 <rb_strcasecmp@plt+0x19a7>
  403ec2:	mov    rax,QWORD PTR [rbp-0x30]
  403ec6:	mov    rdi,rax
  403ec9:	call   403c8a <rb_strcasecmp@plt+0x171a>
  403ece:	mov    rax,QWORD PTR [rbp-0x30]
  403ed2:	lea    rcx,[rip+0xb51f]        # 40f3f8 <rb_strcasecmp@plt+0xce88>
  403ed9:	lea    rdx,[rip+0xb55b]        # 40f43b <rb_strcasecmp@plt+0xcecb>
  403ee0:	mov    esi,0xffffffff
  403ee5:	mov    rdi,rax
  403ee8:	mov    eax,0x0
  403eed:	call   4043c7 <rb_strcasecmp@plt+0x1e57>
  403ef2:	mov    rax,QWORD PTR [rbp-0x30]
  403ef6:	mov    rdi,rax
  403ef9:	call   403cac <rb_strcasecmp@plt+0x173c>
  403efe:	mov    rax,0x41a270
  403f05:	mov    rax,QWORD PTR [rax]
  403f08:	lea    rdx,[rbp-0x20]
  403f0c:	mov    rsi,rdx
  403f0f:	mov    rdi,rax
  403f12:	call   4021e0 <rb_dictionary_foreach_next@plt>
  403f17:	mov    rax,0x41a270
  403f1e:	mov    rax,QWORD PTR [rax]
  403f21:	lea    rdx,[rbp-0x20]
  403f25:	mov    rsi,rdx
  403f28:	mov    rdi,rax
  403f2b:	call   402140 <rb_dictionary_foreach_cur@plt>
  403f30:	mov    QWORD PTR [rbp-0x30],rax
  403f34:	cmp    QWORD PTR [rbp-0x30],0x0
  403f39:	jne    403ec2 <rb_strcasecmp@plt+0x1952>
  403f3b:	mov    rax,0x41a280
  403f42:	mov    rax,QWORD PTR [rax]
  403f45:	mov    QWORD PTR [rbp-0x40],rax
  403f49:	cmp    QWORD PTR [rbp-0x40],0x0
  403f4e:	je     403f5a <rb_strcasecmp@plt+0x19ea>
  403f50:	mov    rax,QWORD PTR [rbp-0x40]
  403f54:	mov    rax,QWORD PTR [rax+0x10]
  403f58:	jmp    403f5f <rb_strcasecmp@plt+0x19ef>
  403f5a:	mov    eax,0x0
  403f5f:	mov    QWORD PTR [rbp-0x38],rax
  403f63:	jmp    403fbf <rb_strcasecmp@plt+0x1a4f>
  403f65:	mov    rax,QWORD PTR [rbp-0x40]
  403f69:	mov    rax,QWORD PTR [rax]
  403f6c:	mov    QWORD PTR [rbp-0x28],rax
  403f70:	mov    rax,QWORD PTR [rbp-0x28]
  403f74:	mov    rax,QWORD PTR [rax+0x38]
  403f78:	test   rax,rax
  403f7b:	je     403f87 <rb_strcasecmp@plt+0x1a17>
  403f7d:	mov    rax,QWORD PTR [rbp-0x28]
  403f81:	mov    rax,QWORD PTR [rax+0x38]
  403f85:	call   rax
  403f87:	mov    rax,QWORD PTR [rbp-0x40]
  403f8b:	mov    rdx,0x41a280
  403f92:	mov    rsi,rdx
  403f95:	mov    rdi,rax
  403f98:	call   403b13 <rb_strcasecmp@plt+0x15a3>
  403f9d:	mov    rax,QWORD PTR [rbp-0x38]
  403fa1:	mov    QWORD PTR [rbp-0x40],rax
  403fa5:	cmp    QWORD PTR [rbp-0x40],0x0
  403faa:	je     403fb6 <rb_strcasecmp@plt+0x1a46>
  403fac:	mov    rax,QWORD PTR [rbp-0x40]
  403fb0:	mov    rax,QWORD PTR [rax+0x10]
  403fb4:	jmp    403fbb <rb_strcasecmp@plt+0x1a4b>
  403fb6:	mov    eax,0x0
  403fbb:	mov    QWORD PTR [rbp-0x38],rax
  403fbf:	cmp    QWORD PTR [rbp-0x40],0x0
  403fc4:	jne    403f65 <rb_strcasecmp@plt+0x19f5>
  403fc6:	mov    rax,0x41a270
  403fcd:	mov    rax,QWORD PTR [rax]
  403fd0:	mov    edx,0x0
  403fd5:	mov    esi,0x0
  403fda:	mov    rdi,rax
  403fdd:	call   402340 <rb_dictionary_destroy@plt>
  403fe2:	mov    rax,QWORD PTR [rip+0x16017]        # 41a000 <rb_strcasecmp@plt+0x17a90>
  403fe9:	mov    rdi,rax
  403fec:	call   4020a0 <rb_event_delete@plt>
  403ff1:	nop
  403ff2:	mov    rax,QWORD PTR [rbp-0x8]
  403ff6:	xor    rax,QWORD PTR fs:0x28
  403fff:	je     404006 <rb_strcasecmp@plt+0x1a96>
  404001:	call   402400 <__stack_chk_fail@plt>
  404006:	leave  
  404007:	ret    
  404008:	push   rbp
  404009:	mov    rbp,rsp
  40400c:	sub    rsp,0x20
  404010:	mov    QWORD PTR [rbp-0x18],rdi
  404014:	mov    rax,QWORD PTR [rip+0x15fd5]        # 419ff0 <rb_strcasecmp@plt+0x17a80>
  40401b:	test   rax,rax
  40401e:	je     40405a <rb_strcasecmp@plt+0x1aea>
  404020:	mov    rax,QWORD PTR [rip+0x15fb9]        # 419fe0 <rb_strcasecmp@plt+0x17a70>
  404027:	mov    rax,QWORD PTR [rax]
  40402a:	mov    edx,eax
  40402c:	mov    rax,QWORD PTR [rbp-0x18]
  404030:	mov    DWORD PTR [rax+0x18],edx
  404033:	mov    rax,QWORD PTR [rip+0x15fa6]        # 419fe0 <rb_strcasecmp@plt+0x17a70>
  40403a:	lea    rsi,[rip+0x15f9f]        # 419fe0 <rb_strcasecmp@plt+0x17a70>
  404041:	mov    rdi,rax
  404044:	call   403b13 <rb_strcasecmp@plt+0x15a3>
  404049:	mov    rax,QWORD PTR [rip+0x15f90]        # 419fe0 <rb_strcasecmp@plt+0x17a70>
  404050:	mov    rdi,rax
  404053:	call   4022e0 <rb_free_rb_dlink_node@plt>
  404058:	jmp    4040a1 <rb_strcasecmp@plt+0x1b31>
  40405a:	mov    eax,DWORD PTR [rip+0x15f98]        # 419ff8 <rb_strcasecmp@plt+0x17a88>
  404060:	cmp    eax,0x20
  404063:	je     404070 <rb_strcasecmp@plt+0x1b00>
  404065:	mov    eax,DWORD PTR [rip+0x15f8d]        # 419ff8 <rb_strcasecmp@plt+0x17a88>
  40406b:	cmp    eax,0xffffffff
  40406e:	jne    40408b <rb_strcasecmp@plt+0x1b1b>
  404070:	lea    rsi,[rip+0xb3d1]        # 40f448 <rb_strcasecmp@plt+0xced8>
  404077:	mov    edi,0x57
  40407c:	mov    eax,0x0
  404081:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  404086:	jmp    40414b <rb_strcasecmp@plt+0x1bdb>
  40408b:	mov    eax,DWORD PTR [rip+0x15f67]        # 419ff8 <rb_strcasecmp@plt+0x17a88>
  404091:	lea    edx,[rax+0x1]
  404094:	mov    DWORD PTR [rip+0x15f5e],edx        # 419ff8 <rb_strcasecmp@plt+0x17a88>
  40409a:	mov    rdx,QWORD PTR [rbp-0x18]
  40409e:	mov    DWORD PTR [rdx+0x18],eax
  4040a1:	mov    rax,QWORD PTR [rbp-0x18]
  4040a5:	mov    rax,QWORD PTR [rax+0x70]
  4040a9:	test   rax,rax
  4040ac:	je     4040ed <rb_strcasecmp@plt+0x1b7d>
  4040ae:	mov    rax,QWORD PTR [rbp-0x18]
  4040b2:	mov    rax,QWORD PTR [rax+0x70]
  4040b6:	mov    QWORD PTR [rbp-0x8],rax
  4040ba:	jmp    4040e1 <rb_strcasecmp@plt+0x1b71>
  4040bc:	mov    rax,QWORD PTR [rbp-0x8]
  4040c0:	mov    rcx,QWORD PTR [rax]
  4040c3:	mov    rax,0x41a260
  4040ca:	mov    rax,QWORD PTR [rax]
  4040cd:	mov    rdx,QWORD PTR [rbp-0x8]
  4040d1:	mov    rsi,rcx
  4040d4:	mov    rdi,rax
  4040d7:	call   4023d0 <rb_dictionary_add@plt>
  4040dc:	add    QWORD PTR [rbp-0x8],0x18
  4040e1:	mov    rax,QWORD PTR [rbp-0x8]
  4040e5:	mov    rax,QWORD PTR [rax]
  4040e8:	test   rax,rax
  4040eb:	jne    4040bc <rb_strcasecmp@plt+0x1b4c>
  4040ed:	mov    rax,QWORD PTR [rbp-0x18]
  4040f1:	movzx  eax,BYTE PTR [rax+0x60]
  4040f5:	test   al,al
  4040f7:	je     40411a <rb_strcasecmp@plt+0x1baa>
  4040f9:	mov    rax,QWORD PTR [rbp-0x18]
  4040fd:	movzx  eax,BYTE PTR [rax+0x60]
  404101:	movzx  edx,al
  404104:	mov    rax,QWORD PTR [rbp-0x18]
  404108:	mov    rcx,QWORD PTR [rax+0x68]
  40410c:	mov    rax,0x414ae0
  404113:	movsxd rdx,edx
  404116:	mov    QWORD PTR [rax+rdx*8],rcx
  40411a:	mov    rax,QWORD PTR [rbp-0x18]
  40411e:	mov    rax,QWORD PTR [rax+0x30]
  404122:	test   rax,rax
  404125:	je     404131 <rb_strcasecmp@plt+0x1bc1>
  404127:	mov    rax,QWORD PTR [rbp-0x18]
  40412b:	mov    rax,QWORD PTR [rax+0x30]
  40412f:	call   rax
  404131:	mov    rcx,QWORD PTR [rbp-0x18]
  404135:	mov    rax,QWORD PTR [rbp-0x18]
  404139:	mov    rdx,0x41a280
  404140:	mov    rsi,rcx
  404143:	mov    rdi,rax
  404146:	call   403a0f <rb_strcasecmp@plt+0x149f>
  40414b:	leave  
  40414c:	ret    
  40414d:	push   rbp
  40414e:	mov    rbp,rsp
  404151:	sub    rsp,0x20
  404155:	mov    QWORD PTR [rbp-0x18],rdi
  404159:	mov    rax,QWORD PTR [rbp-0x18]
  40415d:	mov    rax,QWORD PTR [rax+0x70]
  404161:	test   rax,rax
  404164:	je     4041a1 <rb_strcasecmp@plt+0x1c31>
  404166:	mov    rax,QWORD PTR [rbp-0x18]
  40416a:	mov    rax,QWORD PTR [rax+0x70]
  40416e:	mov    QWORD PTR [rbp-0x8],rax
  404172:	jmp    404195 <rb_strcasecmp@plt+0x1c25>
  404174:	mov    rax,QWORD PTR [rbp-0x8]
  404178:	mov    rdx,QWORD PTR [rax]
  40417b:	mov    rax,0x41a260
  404182:	mov    rax,QWORD PTR [rax]
  404185:	mov    rsi,rdx
  404188:	mov    rdi,rax
  40418b:	call   4022b0 <rb_dictionary_delete@plt>
  404190:	add    QWORD PTR [rbp-0x8],0x18
  404195:	mov    rax,QWORD PTR [rbp-0x8]
  404199:	mov    rax,QWORD PTR [rax]
  40419c:	test   rax,rax
  40419f:	jne    404174 <rb_strcasecmp@plt+0x1c04>
  4041a1:	mov    rax,QWORD PTR [rbp-0x18]
  4041a5:	movzx  eax,BYTE PTR [rax+0x60]
  4041a9:	test   al,al
  4041ab:	je     4041ca <rb_strcasecmp@plt+0x1c5a>
  4041ad:	mov    rax,QWORD PTR [rbp-0x18]
  4041b1:	movzx  eax,BYTE PTR [rax+0x60]
  4041b5:	movzx  edx,al
  4041b8:	mov    rax,0x414ae0
  4041bf:	movsxd rdx,edx
  4041c2:	mov    QWORD PTR [rax+rdx*8],0x0
  4041ca:	mov    rax,QWORD PTR [rbp-0x18]
  4041ce:	mov    rax,QWORD PTR [rax+0x38]
  4041d2:	test   rax,rax
  4041d5:	je     4041e1 <rb_strcasecmp@plt+0x1c71>
  4041d7:	mov    rax,QWORD PTR [rbp-0x18]
  4041db:	mov    rax,QWORD PTR [rax+0x38]
  4041df:	call   rax
  4041e1:	mov    rax,QWORD PTR [rbp-0x18]
  4041e5:	mov    rdx,0x41a280
  4041ec:	mov    rsi,rdx
  4041ef:	mov    rdi,rax
  4041f2:	call   403b13 <rb_strcasecmp@plt+0x15a3>
  4041f7:	call   402500 <rb_make_rb_dlink_node@plt>
  4041fc:	mov    rcx,rax
  4041ff:	mov    rax,QWORD PTR [rbp-0x18]
  404203:	mov    eax,DWORD PTR [rax+0x18]
  404206:	mov    eax,eax
  404208:	lea    rdx,[rip+0x15dd1]        # 419fe0 <rb_strcasecmp@plt+0x17a70>
  40420f:	mov    rsi,rcx
  404212:	mov    rdi,rax
  404215:	call   403a0f <rb_strcasecmp@plt+0x149f>
  40421a:	nop
  40421b:	leave  
  40421c:	ret    
  40421d:	push   rbp
  40421e:	mov    rbp,rsp
  404221:	sub    rsp,0x10
  404225:	mov    QWORD PTR [rbp-0x8],rdi
  404229:	mov    rax,QWORD PTR [rbp-0x8]
  40422d:	mov    eax,DWORD PTR [rax]
  40422f:	mov    eax,eax
  404231:	mov    rdx,rax
  404234:	mov    rax,0x41a270
  40423b:	mov    rax,QWORD PTR [rax]
  40423e:	mov    rsi,rdx
  404241:	mov    rdi,rax
  404244:	call   4022b0 <rb_dictionary_delete@plt>
  404249:	mov    rax,QWORD PTR [rbp-0x8]
  40424d:	mov    rax,QWORD PTR [rax+0x1d0]
  404254:	mov    rdi,rax
  404257:	call   403c43 <rb_strcasecmp@plt+0x16d3>
  40425c:	mov    rax,QWORD PTR [rbp-0x8]
  404260:	mov    rdi,rax
  404263:	call   403c43 <rb_strcasecmp@plt+0x16d3>
  404268:	nop
  404269:	leave  
  40426a:	ret    
  40426b:	push   rbp
  40426c:	mov    rbp,rsp
  40426f:	sub    rsp,0x20
  404273:	mov    QWORD PTR [rbp-0x18],rdi
  404277:	mov    rax,QWORD PTR [rbp-0x18]
  40427b:	movzx  eax,BYTE PTR [rax+0x1c4]
  404282:	test   al,al
  404284:	jne    40430a <rb_strcasecmp@plt+0x1d9a>
  40428a:	mov    rax,QWORD PTR [rbp-0x18]
  40428e:	mov    BYTE PTR [rax+0x1c4],0x1
  404295:	mov    rax,QWORD PTR [rbp-0x18]
  404299:	mov    eax,DWORD PTR [rax+0x1c8]
  40429f:	test   eax,eax
  4042a1:	je     40430b <rb_strcasecmp@plt+0x1d9b>
  4042a3:	mov    rax,0x41a280
  4042aa:	mov    rax,QWORD PTR [rax]
  4042ad:	mov    QWORD PTR [rbp-0x10],rax
  4042b1:	jmp    404301 <rb_strcasecmp@plt+0x1d91>
  4042b3:	mov    rax,QWORD PTR [rbp-0x10]
  4042b7:	mov    rax,QWORD PTR [rax]
  4042ba:	mov    QWORD PTR [rbp-0x8],rax
  4042be:	mov    rax,QWORD PTR [rbp-0x8]
  4042c2:	mov    rax,QWORD PTR [rax+0x48]
  4042c6:	test   rax,rax
  4042c9:	je     4042f5 <rb_strcasecmp@plt+0x1d85>
  4042cb:	mov    rax,QWORD PTR [rbp-0x8]
  4042cf:	mov    edx,DWORD PTR [rax+0x18]
  4042d2:	mov    rax,QWORD PTR [rbp-0x18]
  4042d6:	mov    esi,edx
  4042d8:	mov    rdi,rax
  4042db:	call   403d11 <rb_strcasecmp@plt+0x17a1>
  4042e0:	test   al,al
  4042e2:	je     4042f5 <rb_strcasecmp@plt+0x1d85>
  4042e4:	mov    rax,QWORD PTR [rbp-0x8]
  4042e8:	mov    rax,QWORD PTR [rax+0x48]
  4042ec:	mov    rdx,QWORD PTR [rbp-0x18]
  4042f0:	mov    rdi,rdx
  4042f3:	call   rax
  4042f5:	mov    rax,QWORD PTR [rbp-0x10]
  4042f9:	mov    rax,QWORD PTR [rax+0x10]
  4042fd:	mov    QWORD PTR [rbp-0x10],rax
  404301:	cmp    QWORD PTR [rbp-0x10],0x0
  404306:	jne    4042b3 <rb_strcasecmp@plt+0x1d43>
  404308:	jmp    40430b <rb_strcasecmp@plt+0x1d9b>
  40430a:	nop
  40430b:	leave  
  40430c:	ret    
  40430d:	push   rbp
  40430e:	mov    rbp,rsp
  404311:	sub    rsp,0x20
  404315:	mov    QWORD PTR [rbp-0x18],rdi
  404319:	mov    DWORD PTR [rbp-0x1c],esi
  40431c:	mov    edx,DWORD PTR [rbp-0x1c]
  40431f:	mov    rax,QWORD PTR [rbp-0x18]
  404323:	mov    esi,edx
  404325:	mov    rdi,rax
  404328:	call   403dca <rb_strcasecmp@plt+0x185a>
  40432d:	mov    rax,QWORD PTR [rbp-0x18]
  404331:	mov    eax,DWORD PTR [rax+0x1c8]
  404337:	test   eax,eax
  404339:	jne    40435b <rb_strcasecmp@plt+0x1deb>
  40433b:	mov    rax,QWORD PTR [rbp-0x18]
  40433f:	movzx  eax,BYTE PTR [rax+0x1c3]
  404346:	xor    eax,0x1
  404349:	test   al,al
  40434b:	je     40435b <rb_strcasecmp@plt+0x1deb>
  40434d:	mov    rax,QWORD PTR [rbp-0x18]
  404351:	mov    rdi,rax
  404354:	call   404571 <rb_strcasecmp@plt+0x2001>
  404359:	jmp    4043c5 <rb_strcasecmp@plt+0x1e55>
  40435b:	mov    rax,0x41a280
  404362:	mov    rax,QWORD PTR [rax]
  404365:	mov    QWORD PTR [rbp-0x10],rax
  404369:	jmp    4043be <rb_strcasecmp@plt+0x1e4e>
  40436b:	mov    rax,QWORD PTR [rbp-0x10]
  40436f:	mov    rax,QWORD PTR [rax]
  404372:	mov    QWORD PTR [rbp-0x8],rax
  404376:	mov    rax,QWORD PTR [rbp-0x8]
  40437a:	mov    rax,QWORD PTR [rax+0x58]
  40437e:	test   rax,rax
  404381:	je     4043b2 <rb_strcasecmp@plt+0x1e42>
  404383:	mov    rax,QWORD PTR [rbp-0x8]
  404387:	mov    edx,DWORD PTR [rax+0x18]
  40438a:	mov    rax,QWORD PTR [rbp-0x18]
  40438e:	mov    esi,edx
  404390:	mov    rdi,rax
  404393:	call   403d11 <rb_strcasecmp@plt+0x17a1>
  404398:	test   al,al
  40439a:	je     4043b2 <rb_strcasecmp@plt+0x1e42>
  40439c:	mov    rax,QWORD PTR [rbp-0x8]
  4043a0:	mov    rax,QWORD PTR [rax+0x58]
  4043a4:	mov    ecx,DWORD PTR [rbp-0x1c]
  4043a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4043ab:	mov    esi,ecx
  4043ad:	mov    rdi,rdx
  4043b0:	call   rax
  4043b2:	mov    rax,QWORD PTR [rbp-0x10]
  4043b6:	mov    rax,QWORD PTR [rax+0x10]
  4043ba:	mov    QWORD PTR [rbp-0x10],rax
  4043be:	cmp    QWORD PTR [rbp-0x10],0x0
  4043c3:	jne    40436b <rb_strcasecmp@plt+0x1dfb>
  4043c5:	leave  
  4043c6:	ret    
  4043c7:	push   rbp
  4043c8:	mov    rbp,rsp
  4043cb:	sub    rsp,0x300
  4043d2:	mov    QWORD PTR [rbp-0x2e8],rdi
  4043d9:	mov    DWORD PTR [rbp-0x2ec],esi
  4043df:	mov    QWORD PTR [rbp-0x2f8],rdx
  4043e6:	mov    QWORD PTR [rbp-0x300],rcx
  4043ed:	mov    QWORD PTR [rbp-0x90],r8
  4043f4:	mov    QWORD PTR [rbp-0x88],r9
  4043fb:	test   al,al
  4043fd:	je     404427 <rb_strcasecmp@plt+0x1eb7>
  4043ff:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  404404:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  404409:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  40440e:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  404413:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  404418:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  40441d:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  404422:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  404427:	mov    rax,QWORD PTR fs:0x28
  404430:	mov    QWORD PTR [rbp-0xb8],rax
  404437:	xor    eax,eax
  404439:	mov    DWORD PTR [rbp-0x2d8],0x20
  404443:	mov    DWORD PTR [rbp-0x2d4],0x30
  40444d:	lea    rax,[rbp+0x10]
  404451:	mov    QWORD PTR [rbp-0x2d0],rax
  404458:	lea    rax,[rbp-0xb0]
  40445f:	mov    QWORD PTR [rbp-0x2c8],rax
  404466:	lea    rcx,[rbp-0x2d8]
  40446d:	mov    rdx,QWORD PTR [rbp-0x300]
  404474:	lea    rax,[rbp-0x2c0]
  40447b:	mov    esi,0x200
  404480:	mov    rdi,rax
  404483:	call   402380 <vsnprintf@plt>
  404488:	cmp    QWORD PTR [rbp-0x2f8],0x0
  404490:	je     40449b <rb_strcasecmp@plt+0x1f2b>
  404492:	mov    rax,QWORD PTR [rbp-0x2f8]
  404499:	jmp    4044a2 <rb_strcasecmp@plt+0x1f32>
  40449b:	lea    rax,[rip+0xafd4]        # 40f476 <rb_strcasecmp@plt+0xcf06>
  4044a2:	mov    rdx,QWORD PTR [rbp-0x2e8]
  4044a9:	lea    r9,[rdx+0x178]
  4044b0:	mov    rdx,QWORD PTR [rbp-0x2e8]
  4044b7:	lea    r8,[rdx+0x1b8]
  4044be:	cmp    DWORD PTR [rbp-0x2ec],0xffffffff
  4044c5:	je     4044ee <rb_strcasecmp@plt+0x1f7e>
  4044c7:	mov    rdx,QWORD PTR [rbp-0x2e8]
  4044ce:	mov    rdx,QWORD PTR [rdx+0x1d0]
  4044d5:	mov    ecx,DWORD PTR [rbp-0x2ec]
  4044db:	shl    rcx,0x5
  4044df:	add    rdx,rcx
  4044e2:	mov    rdx,QWORD PTR [rdx]
  4044e5:	movzx  edx,BYTE PTR [rdx+0x28]
  4044e9:	movsx  edx,dl
  4044ec:	jmp    4044f3 <rb_strcasecmp@plt+0x1f83>
  4044ee:	mov    edx,0x2a
  4044f3:	mov    rcx,QWORD PTR [rbp-0x2e8]
  4044fa:	mov    esi,DWORD PTR [rcx]
  4044fc:	mov    rcx,0x415f60
  404503:	mov    rdi,QWORD PTR [rcx]
  404506:	lea    rcx,[rbp-0x2c0]
  40450d:	push   rcx
  40450e:	push   rax
  40450f:	mov    ecx,edx
  404511:	mov    edx,esi
  404513:	lea    rsi,[rip+0xaf5e]        # 40f478 <rb_strcasecmp@plt+0xcf08>
  40451a:	mov    eax,0x0
  40451f:	call   4024a0 <rb_helper_write@plt>
  404524:	add    rsp,0x10
  404528:	cmp    DWORD PTR [rbp-0x2ec],0xffffffff
  40452f:	je     404548 <rb_strcasecmp@plt+0x1fd8>
  404531:	mov    edx,DWORD PTR [rbp-0x2ec]
  404537:	mov    rax,QWORD PTR [rbp-0x2e8]
  40453e:	mov    esi,edx
  404540:	mov    rdi,rax
  404543:	call   403dca <rb_strcasecmp@plt+0x185a>
  404548:	mov    rax,QWORD PTR [rbp-0x2e8]
  40454f:	mov    rdi,rax
  404552:	call   40426b <rb_strcasecmp@plt+0x1cfb>
  404557:	nop
  404558:	mov    rax,QWORD PTR [rbp-0xb8]
  40455f:	xor    rax,QWORD PTR fs:0x28
  404568:	je     40456f <rb_strcasecmp@plt+0x1fff>
  40456a:	call   402400 <__stack_chk_fail@plt>
  40456f:	leave  
  404570:	ret    
  404571:	push   rbp
  404572:	mov    rbp,rsp
  404575:	sub    rsp,0x10
  404579:	mov    QWORD PTR [rbp-0x8],rdi
  40457d:	mov    rax,QWORD PTR [rbp-0x8]
  404581:	lea    rsi,[rax+0x178]
  404588:	mov    rax,QWORD PTR [rbp-0x8]
  40458c:	lea    rcx,[rax+0x1b8]
  404593:	mov    rax,QWORD PTR [rbp-0x8]
  404597:	mov    edx,DWORD PTR [rax]
  404599:	mov    rax,0x415f60
  4045a0:	mov    rax,QWORD PTR [rax]
  4045a3:	mov    r8,rsi
  4045a6:	lea    rsi,[rip+0xaee0]        # 40f48d <rb_strcasecmp@plt+0xcf1d>
  4045ad:	mov    rdi,rax
  4045b0:	mov    eax,0x0
  4045b5:	call   4024a0 <rb_helper_write@plt>
  4045ba:	mov    rax,QWORD PTR [rbp-0x8]
  4045be:	mov    rdi,rax
  4045c1:	call   40426b <rb_strcasecmp@plt+0x1cfb>
  4045c6:	nop
  4045c7:	leave  
  4045c8:	ret    
  4045c9:	push   rbp
  4045ca:	mov    rbp,rsp
  4045cd:	push   rbx
  4045ce:	sub    rsp,0x58
  4045d2:	mov    QWORD PTR [rbp-0x38],rdi
  4045d6:	mov    QWORD PTR [rbp-0x40],rsi
  4045da:	mov    QWORD PTR [rbp-0x48],rdx
  4045de:	mov    QWORD PTR [rbp-0x50],rcx
  4045e2:	mov    QWORD PTR [rbp-0x58],r8
  4045e6:	mov    QWORD PTR [rbp-0x60],r9
  4045ea:	mov    rax,QWORD PTR [rbp-0x38]
  4045ee:	mov    edx,0x10
  4045f3:	mov    esi,0x0
  4045f8:	mov    rdi,rax
  4045fb:	call   4024e0 <strtoull@plt>
  404600:	mov    QWORD PTR [rbp-0x28],rax
  404604:	cmp    QWORD PTR [rbp-0x28],0x0
  404609:	je     40494e <rb_strcasecmp@plt+0x23de>
  40460f:	mov    eax,0xffffffff
  404614:	cmp    QWORD PTR [rbp-0x28],rax
  404618:	ja     40494e <rb_strcasecmp@plt+0x23de>
  40461e:	mov    edi,0x1d8
  404623:	call   403c07 <rb_strcasecmp@plt+0x1697>
  404628:	mov    QWORD PTR [rbp-0x20],rax
  40462c:	mov    rax,QWORD PTR [rbp-0x20]
  404630:	mov    rdi,rax
  404633:	call   403c8a <rb_strcasecmp@plt+0x171a>
  404638:	mov    rax,QWORD PTR [rbp-0x28]
  40463c:	mov    edx,eax
  40463e:	mov    rax,QWORD PTR [rbp-0x20]
  404642:	mov    DWORD PTR [rax],edx
  404644:	mov    rax,QWORD PTR [rbp-0x20]
  404648:	mov    eax,DWORD PTR [rax]
  40464a:	mov    eax,eax
  40464c:	mov    rdx,rax
  40464f:	mov    rax,0x41a270
  404656:	mov    rax,QWORD PTR [rax]
  404659:	mov    rsi,rdx
  40465c:	mov    rdi,rax
  40465f:	call   402440 <rb_dictionary_find@plt>
  404664:	test   rax,rax
  404667:	jne    40470c <rb_strcasecmp@plt+0x219c>
  40466d:	mov    rax,QWORD PTR [rbp-0x20]
  404671:	mov    eax,DWORD PTR [rax]
  404673:	mov    eax,eax
  404675:	mov    rcx,rax
  404678:	mov    rax,0x41a270
  40467f:	mov    rax,QWORD PTR [rax]
  404682:	mov    rdx,QWORD PTR [rbp-0x20]
  404686:	mov    rsi,rcx
  404689:	mov    rdi,rax
  40468c:	call   4023d0 <rb_dictionary_add@plt>
  404691:	mov    rax,QWORD PTR [rbp-0x60]
  404695:	mov    edx,0x10
  40469a:	mov    esi,0x0
  40469f:	mov    rdi,rax
  4046a2:	call   4024e0 <strtoull@plt>
  4046a7:	mov    edx,eax
  4046a9:	mov    rax,QWORD PTR [rbp-0x20]
  4046ad:	mov    DWORD PTR [rax+0x4],edx
  4046b0:	mov    rax,QWORD PTR [rbp-0x20]
  4046b4:	lea    rcx,[rax+0x8]
  4046b8:	mov    rax,QWORD PTR [rbp-0x40]
  4046bc:	mov    edx,0x36
  4046c1:	mov    rsi,rax
  4046c4:	mov    rdi,rcx
  4046c7:	call   4021d0 <rb_strlcpy@plt>
  4046cc:	mov    rax,QWORD PTR [rbp-0x48]
  4046d0:	mov    rdi,rax
  4046d3:	call   402330 <atoi@plt>
  4046d8:	mov    edx,eax
  4046da:	mov    rax,QWORD PTR [rbp-0x20]
  4046de:	mov    WORD PTR [rax+0x3e],dx
  4046e2:	mov    rax,QWORD PTR [rbp-0x20]
  4046e6:	lea    rdx,[rax+0x40]
  4046ea:	mov    rax,QWORD PTR [rbp-0x40]
  4046ee:	mov    rsi,rdx
  4046f1:	mov    rdi,rax
  4046f4:	call   402280 <rb_inet_pton_sock@plt>
  4046f9:	mov    rax,QWORD PTR [rbp-0x20]
  4046fd:	add    rax,0x40
  404701:	movzx  eax,WORD PTR [rax]
  404704:	cmp    ax,0x2
  404708:	jne    404753 <rb_strcasecmp@plt+0x21e3>
  40470a:	jmp    404733 <rb_strcasecmp@plt+0x21c3>
  40470c:	mov    rax,QWORD PTR [rbp-0x38]
  404710:	mov    rdx,rax
  404713:	lea    rsi,[rip+0xad7e]        # 40f498 <rb_strcasecmp@plt+0xcf28>
  40471a:	mov    edi,0x43
  40471f:	mov    eax,0x0
  404724:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  404729:	mov    edi,0x3
  40472e:	call   4020e0 <exit@plt>
  404733:	mov    rax,QWORD PTR [rbp-0x20]
  404737:	lea    rbx,[rax+0x40]
  40473b:	mov    rax,QWORD PTR [rbp-0x20]
  40473f:	movzx  eax,WORD PTR [rax+0x3e]
  404743:	movzx  eax,ax
  404746:	mov    edi,eax
  404748:	call   4020d0 <htons@plt>
  40474d:	mov    WORD PTR [rbx+0x2],ax
  404751:	jmp    404771 <rb_strcasecmp@plt+0x2201>
  404753:	mov    rax,QWORD PTR [rbp-0x20]
  404757:	lea    rbx,[rax+0x40]
  40475b:	mov    rax,QWORD PTR [rbp-0x20]
  40475f:	movzx  eax,WORD PTR [rax+0x3e]
  404763:	movzx  eax,ax
  404766:	mov    edi,eax
  404768:	call   4020d0 <htons@plt>
  40476d:	mov    WORD PTR [rbx+0x2],ax
  404771:	mov    rax,QWORD PTR [rbp-0x20]
  404775:	lea    rcx,[rax+0xc0]
  40477c:	mov    rax,QWORD PTR [rbp-0x50]
  404780:	mov    edx,0x36
  404785:	mov    rsi,rax
  404788:	mov    rdi,rcx
  40478b:	call   4021d0 <rb_strlcpy@plt>
  404790:	mov    rax,QWORD PTR [rbp-0x58]
  404794:	mov    rdi,rax
  404797:	call   402330 <atoi@plt>
  40479c:	mov    edx,eax
  40479e:	mov    rax,QWORD PTR [rbp-0x20]
  4047a2:	mov    WORD PTR [rax+0xf6],dx
  4047a9:	mov    rax,QWORD PTR [rbp-0x20]
  4047ad:	lea    rdx,[rax+0xf8]
  4047b4:	mov    rax,QWORD PTR [rbp-0x50]
  4047b8:	mov    rsi,rdx
  4047bb:	mov    rdi,rax
  4047be:	call   402280 <rb_inet_pton_sock@plt>
  4047c3:	mov    rax,QWORD PTR [rbp-0x20]
  4047c7:	add    rax,0xf8
  4047cd:	movzx  eax,WORD PTR [rax]
  4047d0:	cmp    ax,0x2
  4047d4:	jne    4047fc <rb_strcasecmp@plt+0x228c>
  4047d6:	mov    rax,QWORD PTR [rbp-0x20]
  4047da:	lea    rbx,[rax+0xf8]
  4047e1:	mov    rax,QWORD PTR [rbp-0x20]
  4047e5:	movzx  eax,WORD PTR [rax+0xf6]
  4047ec:	movzx  eax,ax
  4047ef:	mov    edi,eax
  4047f1:	call   4020d0 <htons@plt>
  4047f6:	mov    WORD PTR [rbx+0x2],ax
  4047fa:	jmp    404820 <rb_strcasecmp@plt+0x22b0>
  4047fc:	mov    rax,QWORD PTR [rbp-0x20]
  404800:	lea    rbx,[rax+0xf8]
  404807:	mov    rax,QWORD PTR [rbp-0x20]
  40480b:	movzx  eax,WORD PTR [rax+0xf6]
  404812:	movzx  eax,ax
  404815:	mov    edi,eax
  404817:	call   4020d0 <htons@plt>
  40481c:	mov    WORD PTR [rbx+0x2],ax
  404820:	mov    rax,QWORD PTR [rbp-0x20]
  404824:	add    rax,0x178
  40482a:	mov    edx,0x40
  40482f:	lea    rsi,[rip+0xac40]        # 40f476 <rb_strcasecmp@plt+0xcf06>
  404836:	mov    rdi,rax
  404839:	call   4021d0 <rb_strlcpy@plt>
  40483e:	mov    rax,QWORD PTR [rbp-0x20]
  404842:	add    rax,0x1b8
  404848:	mov    edx,0xb
  40484d:	lea    rsi,[rip+0xac22]        # 40f476 <rb_strcasecmp@plt+0xcf06>
  404854:	mov    rdi,rax
  404857:	call   4021d0 <rb_strlcpy@plt>
  40485c:	mov    eax,DWORD PTR [rip+0x15796]        # 419ff8 <rb_strcasecmp@plt+0x17a88>
  404862:	mov    eax,eax
  404864:	shl    rax,0x5
  404868:	mov    rdi,rax
  40486b:	call   403c07 <rb_strcasecmp@plt+0x1697>
  404870:	mov    rdx,rax
  404873:	mov    rax,QWORD PTR [rbp-0x20]
  404877:	mov    QWORD PTR [rax+0x1d0],rdx
  40487e:	mov    rax,QWORD PTR [rbp-0x20]
  404882:	mov    BYTE PTR [rax+0x1c3],0x1
  404889:	mov    rax,0x41a280
  404890:	mov    rax,QWORD PTR [rax]
  404893:	mov    QWORD PTR [rbp-0x30],rax
  404897:	jmp    40490e <rb_strcasecmp@plt+0x239e>
  404899:	mov    rax,QWORD PTR [rbp-0x30]
  40489d:	mov    rax,QWORD PTR [rax]
  4048a0:	mov    QWORD PTR [rbp-0x18],rax
  4048a4:	mov    rax,QWORD PTR [rbp-0x20]
  4048a8:	mov    rdx,QWORD PTR [rax+0x1d0]
  4048af:	mov    rax,QWORD PTR [rbp-0x18]
  4048b3:	mov    eax,DWORD PTR [rax+0x18]
  4048b6:	mov    eax,eax
  4048b8:	shl    rax,0x5
  4048bc:	add    rdx,rax
  4048bf:	mov    rax,QWORD PTR [rbp-0x18]
  4048c3:	mov    QWORD PTR [rdx],rax
  4048c6:	mov    rax,QWORD PTR [rbp-0x18]
  4048ca:	mov    edx,DWORD PTR [rax+0x18]
  4048cd:	mov    rax,QWORD PTR [rbp-0x20]
  4048d1:	mov    esi,edx
  4048d3:	mov    rdi,rax
  4048d6:	call   403d8b <rb_strcasecmp@plt+0x181b>
  4048db:	mov    rax,QWORD PTR [rbp-0x18]
  4048df:	mov    rax,QWORD PTR [rax+0x40]
  4048e3:	mov    rdx,QWORD PTR [rbp-0x20]
  4048e7:	mov    rdi,rdx
  4048ea:	call   rax
  4048ec:	xor    eax,0x1
  4048ef:	test   al,al
  4048f1:	jne    40493f <rb_strcasecmp@plt+0x23cf>
  4048f3:	mov    rax,QWORD PTR [rbp-0x20]
  4048f7:	movzx  eax,BYTE PTR [rax+0x1c4]
  4048fe:	test   al,al
  404900:	jne    404917 <rb_strcasecmp@plt+0x23a7>
  404902:	mov    rax,QWORD PTR [rbp-0x30]
  404906:	mov    rax,QWORD PTR [rax+0x10]
  40490a:	mov    QWORD PTR [rbp-0x30],rax
  40490e:	cmp    QWORD PTR [rbp-0x30],0x0
  404913:	jne    404899 <rb_strcasecmp@plt+0x2329>
  404915:	jmp    404918 <rb_strcasecmp@plt+0x23a8>
  404917:	nop
  404918:	mov    rax,QWORD PTR [rbp-0x20]
  40491c:	mov    BYTE PTR [rax+0x1c3],0x0
  404923:	mov    rax,QWORD PTR [rbp-0x20]
  404927:	mov    eax,DWORD PTR [rax+0x1c8]
  40492d:	test   eax,eax
  40492f:	jne    404940 <rb_strcasecmp@plt+0x23d0>
  404931:	mov    rax,QWORD PTR [rbp-0x20]
  404935:	mov    rdi,rax
  404938:	call   404571 <rb_strcasecmp@plt+0x2001>
  40493d:	jmp    404940 <rb_strcasecmp@plt+0x23d0>
  40493f:	nop
  404940:	mov    rax,QWORD PTR [rbp-0x20]
  404944:	mov    rdi,rax
  404947:	call   403cac <rb_strcasecmp@plt+0x173c>
  40494c:	jmp    40494f <rb_strcasecmp@plt+0x23df>
  40494e:	nop
  40494f:	add    rsp,0x58
  404953:	pop    rbx
  404954:	pop    rbp
  404955:	ret    
  404956:	push   rbp
  404957:	mov    rbp,rsp
  40495a:	sub    rsp,0x10
  40495e:	mov    DWORD PTR [rbp-0x4],edi
  404961:	mov    QWORD PTR [rbp-0x10],rsi
  404965:	cmp    DWORD PTR [rbp-0x4],0x5
  404969:	jg     404990 <rb_strcasecmp@plt+0x2420>
  40496b:	mov    eax,DWORD PTR [rbp-0x4]
  40496e:	mov    edx,eax
  404970:	lea    rsi,[rip+0xab59]        # 40f4d0 <rb_strcasecmp@plt+0xcf60>
  404977:	mov    edi,0x43
  40497c:	mov    eax,0x0
  404981:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  404986:	mov    edi,0x3
  40498b:	call   4020e0 <exit@plt>
  404990:	cmp    DWORD PTR [rbp-0x4],0x6
  404994:	jle    4049a0 <rb_strcasecmp@plt+0x2430>
  404996:	mov    rax,QWORD PTR [rbp-0x10]
  40499a:	mov    rax,QWORD PTR [rax+0x30]
  40499e:	jmp    4049a7 <rb_strcasecmp@plt+0x2437>
  4049a0:	lea    rax,[rip+0xab73]        # 40f51a <rb_strcasecmp@plt+0xcfaa>
  4049a7:	mov    rdx,QWORD PTR [rbp-0x10]
  4049ab:	add    rdx,0x28
  4049af:	mov    r8,QWORD PTR [rdx]
  4049b2:	mov    rdx,QWORD PTR [rbp-0x10]
  4049b6:	add    rdx,0x20
  4049ba:	mov    rcx,QWORD PTR [rdx]
  4049bd:	mov    rdx,QWORD PTR [rbp-0x10]
  4049c1:	add    rdx,0x18
  4049c5:	mov    rdx,QWORD PTR [rdx]
  4049c8:	mov    rsi,QWORD PTR [rbp-0x10]
  4049cc:	add    rsi,0x10
  4049d0:	mov    rsi,QWORD PTR [rsi]
  4049d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4049d7:	add    rdi,0x8
  4049db:	mov    rdi,QWORD PTR [rdi]
  4049de:	mov    r9,rax
  4049e1:	call   4045c9 <rb_strcasecmp@plt+0x2059>
  4049e6:	nop
  4049e7:	leave  
  4049e8:	ret    
  4049e9:	push   rbp
  4049ea:	mov    rbp,rsp
  4049ed:	sub    rsp,0x20
  4049f1:	mov    DWORD PTR [rbp-0x14],edi
  4049f4:	mov    QWORD PTR [rbp-0x20],rsi
  4049f8:	cmp    DWORD PTR [rbp-0x14],0x1
  4049fc:	jg     404a23 <rb_strcasecmp@plt+0x24b3>
  4049fe:	mov    eax,DWORD PTR [rbp-0x14]
  404a01:	mov    edx,eax
  404a03:	lea    rsi,[rip+0xab16]        # 40f520 <rb_strcasecmp@plt+0xcfb0>
  404a0a:	mov    edi,0x43
  404a0f:	mov    eax,0x0
  404a14:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  404a19:	mov    edi,0x3
  404a1e:	call   4020e0 <exit@plt>
  404a23:	mov    rax,QWORD PTR [rbp-0x20]
  404a27:	add    rax,0x8
  404a2b:	mov    rax,QWORD PTR [rax]
  404a2e:	mov    edx,0x10
  404a33:	mov    esi,0x0
  404a38:	mov    rdi,rax
  404a3b:	call   4024e0 <strtoull@plt>
  404a40:	mov    QWORD PTR [rbp-0x10],rax
  404a44:	cmp    QWORD PTR [rbp-0x10],0x0
  404a49:	je     404a56 <rb_strcasecmp@plt+0x24e6>
  404a4b:	mov    eax,0xffffffff
  404a50:	cmp    QWORD PTR [rbp-0x10],rax
  404a54:	jbe    404a84 <rb_strcasecmp@plt+0x2514>
  404a56:	mov    rax,QWORD PTR [rbp-0x20]
  404a5a:	add    rax,0x8
  404a5e:	mov    rax,QWORD PTR [rax]
  404a61:	mov    rdx,rax
  404a64:	lea    rsi,[rip+0xab05]        # 40f570 <rb_strcasecmp@plt+0xd000>
  404a6b:	mov    edi,0x43
  404a70:	mov    eax,0x0
  404a75:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  404a7a:	mov    edi,0x3
  404a7f:	call   4020e0 <exit@plt>
  404a84:	mov    rax,QWORD PTR [rbp-0x10]
  404a88:	mov    eax,eax
  404a8a:	mov    rdx,rax
  404a8d:	mov    rax,0x41a270
  404a94:	mov    rax,QWORD PTR [rax]
  404a97:	mov    rsi,rdx
  404a9a:	mov    rdi,rax
  404a9d:	call   4023a0 <rb_dictionary_retrieve@plt>
  404aa2:	mov    QWORD PTR [rbp-0x8],rax
  404aa6:	cmp    QWORD PTR [rbp-0x8],0x0
  404aab:	je     404ad3 <rb_strcasecmp@plt+0x2563>
  404aad:	mov    rax,QWORD PTR [rbp-0x8]
  404ab1:	mov    rdi,rax
  404ab4:	call   403c8a <rb_strcasecmp@plt+0x171a>
  404ab9:	mov    rax,QWORD PTR [rbp-0x8]
  404abd:	mov    rdi,rax
  404ac0:	call   40426b <rb_strcasecmp@plt+0x1cfb>
  404ac5:	mov    rax,QWORD PTR [rbp-0x8]
  404ac9:	mov    rdi,rax
  404acc:	call   403cac <rb_strcasecmp@plt+0x173c>
  404ad1:	jmp    404ad4 <rb_strcasecmp@plt+0x2564>
  404ad3:	nop
  404ad4:	leave  
  404ad5:	ret    
  404ad6:	push   rbp
  404ad7:	mov    rbp,rsp
  404ada:	sub    rsp,0x60
  404ade:	mov    QWORD PTR [rbp-0x58],rdi
  404ae2:	mov    rax,QWORD PTR fs:0x28
  404aeb:	mov    QWORD PTR [rbp-0x8],rax
  404aef:	xor    eax,eax
  404af1:	call   4022a0 <rb_current_time@plt>
  404af6:	mov    QWORD PTR [rbp-0x40],rax
  404afa:	mov    rax,0x41a270
  404b01:	mov    rax,QWORD PTR [rax]
  404b04:	lea    rdx,[rbp-0x20]
  404b08:	mov    rsi,rdx
  404b0b:	mov    rdi,rax
  404b0e:	call   402250 <rb_dictionary_foreach_start@plt>
  404b13:	jmp    404bd8 <rb_strcasecmp@plt+0x2668>
  404b18:	mov    rax,QWORD PTR [rbp-0x38]
  404b1c:	mov    rdi,rax
  404b1f:	call   403c8a <rb_strcasecmp@plt+0x171a>
  404b24:	mov    rax,0x41a280
  404b2b:	mov    rax,QWORD PTR [rax]
  404b2e:	mov    QWORD PTR [rbp-0x48],rax
  404b32:	jmp    404bac <rb_strcasecmp@plt+0x263c>
  404b34:	mov    rax,QWORD PTR [rbp-0x48]
  404b38:	mov    rax,QWORD PTR [rax]
  404b3b:	mov    QWORD PTR [rbp-0x30],rax
  404b3f:	mov    rax,QWORD PTR [rbp-0x30]
  404b43:	mov    edx,DWORD PTR [rax+0x18]
  404b46:	mov    rax,QWORD PTR [rbp-0x38]
  404b4a:	mov    esi,edx
  404b4c:	mov    rdi,rax
  404b4f:	call   403d39 <rb_strcasecmp@plt+0x17c9>
  404b54:	mov    QWORD PTR [rbp-0x28],rax
  404b58:	mov    rax,QWORD PTR [rbp-0x30]
  404b5c:	mov    edx,DWORD PTR [rax+0x18]
  404b5f:	mov    rax,QWORD PTR [rbp-0x38]
  404b63:	mov    esi,edx
  404b65:	mov    rdi,rax
  404b68:	call   403d11 <rb_strcasecmp@plt+0x17a1>
  404b6d:	test   al,al
  404b6f:	je     404ba0 <rb_strcasecmp@plt+0x2630>
  404b71:	mov    rax,QWORD PTR [rbp-0x30]
  404b75:	mov    rax,QWORD PTR [rax+0x50]
  404b79:	test   rax,rax
  404b7c:	je     404ba0 <rb_strcasecmp@plt+0x2630>
  404b7e:	cmp    QWORD PTR [rbp-0x28],0x0
  404b83:	jle    404ba0 <rb_strcasecmp@plt+0x2630>
  404b85:	mov    rax,QWORD PTR [rbp-0x28]
  404b89:	cmp    rax,QWORD PTR [rbp-0x40]
  404b8d:	jge    404ba0 <rb_strcasecmp@plt+0x2630>
  404b8f:	mov    rax,QWORD PTR [rbp-0x30]
  404b93:	mov    rax,QWORD PTR [rax+0x50]
  404b97:	mov    rdx,QWORD PTR [rbp-0x38]
  404b9b:	mov    rdi,rdx
  404b9e:	call   rax
  404ba0:	mov    rax,QWORD PTR [rbp-0x48]
  404ba4:	mov    rax,QWORD PTR [rax+0x10]
  404ba8:	mov    QWORD PTR [rbp-0x48],rax
  404bac:	cmp    QWORD PTR [rbp-0x48],0x0
  404bb1:	jne    404b34 <rb_strcasecmp@plt+0x25c4>
  404bb3:	mov    rax,QWORD PTR [rbp-0x38]
  404bb7:	mov    rdi,rax
  404bba:	call   403cac <rb_strcasecmp@plt+0x173c>
  404bbf:	mov    rax,0x41a270
  404bc6:	mov    rax,QWORD PTR [rax]
  404bc9:	lea    rdx,[rbp-0x20]
  404bcd:	mov    rsi,rdx
  404bd0:	mov    rdi,rax
  404bd3:	call   4021e0 <rb_dictionary_foreach_next@plt>
  404bd8:	mov    rax,0x41a270
  404bdf:	mov    rax,QWORD PTR [rax]
  404be2:	lea    rdx,[rbp-0x20]
  404be6:	mov    rsi,rdx
  404be9:	mov    rdi,rax
  404bec:	call   402140 <rb_dictionary_foreach_cur@plt>
  404bf1:	mov    QWORD PTR [rbp-0x38],rax
  404bf5:	cmp    QWORD PTR [rbp-0x38],0x0
  404bfa:	jne    404b18 <rb_strcasecmp@plt+0x25a8>
  404c00:	nop
  404c01:	mov    rax,QWORD PTR [rbp-0x8]
  404c05:	xor    rax,QWORD PTR fs:0x28
  404c0e:	je     404c15 <rb_strcasecmp@plt+0x26a5>
  404c10:	call   402400 <__stack_chk_fail@plt>
  404c15:	leave  
  404c16:	ret    
  404c17:	push   rbp
  404c18:	mov    rbp,rsp
  404c1b:	sub    rsp,0x20
  404c1f:	mov    QWORD PTR [rbp-0x8],rdi
  404c23:	mov    QWORD PTR [rbp-0x10],rsi
  404c27:	mov    QWORD PTR [rbp-0x18],rdx
  404c2b:	cmp    QWORD PTR [rbp-0x8],0x0
  404c30:	jne    404c51 <rb_strcasecmp@plt+0x26e1>
  404c32:	lea    rcx,[rip+0xab17]        # 40f750 <rb_strcasecmp@plt+0xd1e0>
  404c39:	mov    edx,0x8f
  404c3e:	lea    rsi,[rip+0xa99b]        # 40f5e0 <rb_strcasecmp@plt+0xd070>
  404c45:	lea    rdi,[rip+0xa9b0]        # 40f5fc <rb_strcasecmp@plt+0xd08c>
  404c4c:	call   4020f0 <__assert_fail@plt>
  404c51:	cmp    QWORD PTR [rbp-0x10],0x0
  404c56:	jne    404c77 <rb_strcasecmp@plt+0x2707>
  404c58:	lea    rcx,[rip+0xaaf1]        # 40f750 <rb_strcasecmp@plt+0xd1e0>
  404c5f:	mov    edx,0x90
  404c64:	lea    rsi,[rip+0xa975]        # 40f5e0 <rb_strcasecmp@plt+0xd070>
  404c6b:	lea    rdi,[rip+0xa997]        # 40f609 <rb_strcasecmp@plt+0xd099>
  404c72:	call   4020f0 <__assert_fail@plt>
  404c77:	cmp    QWORD PTR [rbp-0x18],0x0
  404c7c:	jne    404c9d <rb_strcasecmp@plt+0x272d>
  404c7e:	lea    rcx,[rip+0xaacb]        # 40f750 <rb_strcasecmp@plt+0xd1e0>
  404c85:	mov    edx,0x91
  404c8a:	lea    rsi,[rip+0xa94f]        # 40f5e0 <rb_strcasecmp@plt+0xd070>
  404c91:	lea    rdi,[rip+0xa97b]        # 40f613 <rb_strcasecmp@plt+0xd0a3>
  404c98:	call   4020f0 <__assert_fail@plt>
  404c9d:	mov    rax,QWORD PTR [rbp-0x10]
  404ca1:	mov    rdx,QWORD PTR [rbp-0x8]
  404ca5:	mov    QWORD PTR [rax],rdx
  404ca8:	mov    rax,QWORD PTR [rbp-0x10]
  404cac:	mov    QWORD PTR [rax+0x8],0x0
  404cb4:	mov    rax,QWORD PTR [rbp-0x18]
  404cb8:	mov    rdx,QWORD PTR [rax]
  404cbb:	mov    rax,QWORD PTR [rbp-0x10]
  404cbf:	mov    QWORD PTR [rax+0x10],rdx
  404cc3:	mov    rax,QWORD PTR [rbp-0x18]
  404cc7:	mov    rax,QWORD PTR [rax]
  404cca:	test   rax,rax
  404ccd:	je     404ce0 <rb_strcasecmp@plt+0x2770>
  404ccf:	mov    rax,QWORD PTR [rbp-0x18]
  404cd3:	mov    rax,QWORD PTR [rax]
  404cd6:	mov    rdx,QWORD PTR [rbp-0x10]
  404cda:	mov    QWORD PTR [rax+0x8],rdx
  404cde:	jmp    404cf9 <rb_strcasecmp@plt+0x2789>
  404ce0:	mov    rax,QWORD PTR [rbp-0x18]
  404ce4:	mov    rax,QWORD PTR [rax+0x8]
  404ce8:	test   rax,rax
  404ceb:	jne    404cf9 <rb_strcasecmp@plt+0x2789>
  404ced:	mov    rax,QWORD PTR [rbp-0x18]
  404cf1:	mov    rdx,QWORD PTR [rbp-0x10]
  404cf5:	mov    QWORD PTR [rax+0x8],rdx
  404cf9:	mov    rax,QWORD PTR [rbp-0x18]
  404cfd:	mov    rdx,QWORD PTR [rbp-0x10]
  404d01:	mov    QWORD PTR [rax],rdx
  404d04:	mov    rax,QWORD PTR [rbp-0x18]
  404d08:	mov    rax,QWORD PTR [rax+0x10]
  404d0c:	lea    rdx,[rax+0x1]
  404d10:	mov    rax,QWORD PTR [rbp-0x18]
  404d14:	mov    QWORD PTR [rax+0x10],rdx
  404d18:	nop
  404d19:	leave  
  404d1a:	ret    
  404d1b:	push   rbp
  404d1c:	mov    rbp,rsp
  404d1f:	sub    rsp,0x10
  404d23:	mov    QWORD PTR [rbp-0x8],rdi
  404d27:	mov    QWORD PTR [rbp-0x10],rsi
  404d2b:	cmp    QWORD PTR [rbp-0x8],0x0
  404d30:	jne    404d51 <rb_strcasecmp@plt+0x27e1>
  404d32:	lea    rcx,[rip+0xaa07]        # 40f740 <rb_strcasecmp@plt+0xd1d0>
  404d39:	mov    edx,0xeb
  404d3e:	lea    rsi,[rip+0xa89b]        # 40f5e0 <rb_strcasecmp@plt+0xd070>
  404d45:	lea    rdi,[rip+0xa8bd]        # 40f609 <rb_strcasecmp@plt+0xd099>
  404d4c:	call   4020f0 <__assert_fail@plt>
  404d51:	cmp    QWORD PTR [rbp-0x10],0x0
  404d56:	jne    404d77 <rb_strcasecmp@plt+0x2807>
  404d58:	lea    rcx,[rip+0xa9e1]        # 40f740 <rb_strcasecmp@plt+0xd1d0>
  404d5f:	mov    edx,0xec
  404d64:	lea    rsi,[rip+0xa875]        # 40f5e0 <rb_strcasecmp@plt+0xd070>
  404d6b:	lea    rdi,[rip+0xa8a1]        # 40f613 <rb_strcasecmp@plt+0xd0a3>
  404d72:	call   4020f0 <__assert_fail@plt>
  404d77:	mov    rax,QWORD PTR [rbp-0x8]
  404d7b:	mov    rax,QWORD PTR [rax+0x10]
  404d7f:	test   rax,rax
  404d82:	je     404d9a <rb_strcasecmp@plt+0x282a>
  404d84:	mov    rax,QWORD PTR [rbp-0x8]
  404d88:	mov    rax,QWORD PTR [rax+0x10]
  404d8c:	mov    rdx,QWORD PTR [rbp-0x8]
  404d90:	mov    rdx,QWORD PTR [rdx+0x8]
  404d94:	mov    QWORD PTR [rax+0x8],rdx
  404d98:	jmp    404daa <rb_strcasecmp@plt+0x283a>
  404d9a:	mov    rax,QWORD PTR [rbp-0x8]
  404d9e:	mov    rdx,QWORD PTR [rax+0x8]
  404da2:	mov    rax,QWORD PTR [rbp-0x10]
  404da6:	mov    QWORD PTR [rax+0x8],rdx
  404daa:	mov    rax,QWORD PTR [rbp-0x8]
  404dae:	mov    rax,QWORD PTR [rax+0x8]
  404db2:	test   rax,rax
  404db5:	je     404dcd <rb_strcasecmp@plt+0x285d>
  404db7:	mov    rax,QWORD PTR [rbp-0x8]
  404dbb:	mov    rax,QWORD PTR [rax+0x8]
  404dbf:	mov    rdx,QWORD PTR [rbp-0x8]
  404dc3:	mov    rdx,QWORD PTR [rdx+0x10]
  404dc7:	mov    QWORD PTR [rax+0x10],rdx
  404dcb:	jmp    404ddc <rb_strcasecmp@plt+0x286c>
  404dcd:	mov    rax,QWORD PTR [rbp-0x8]
  404dd1:	mov    rdx,QWORD PTR [rax+0x10]
  404dd5:	mov    rax,QWORD PTR [rbp-0x10]
  404dd9:	mov    QWORD PTR [rax],rdx
  404ddc:	mov    rax,QWORD PTR [rbp-0x8]
  404de0:	mov    QWORD PTR [rax+0x8],0x0
  404de8:	mov    rax,QWORD PTR [rbp-0x8]
  404dec:	mov    rdx,QWORD PTR [rax+0x8]
  404df0:	mov    rax,QWORD PTR [rbp-0x8]
  404df4:	mov    QWORD PTR [rax+0x10],rdx
  404df8:	mov    rax,QWORD PTR [rbp-0x10]
  404dfc:	mov    rax,QWORD PTR [rax+0x10]
  404e00:	lea    rdx,[rax-0x1]
  404e04:	mov    rax,QWORD PTR [rbp-0x10]
  404e08:	mov    QWORD PTR [rax+0x10],rdx
  404e0c:	nop
  404e0d:	leave  
  404e0e:	ret    
  404e0f:	push   rbp
  404e10:	mov    rbp,rsp
  404e13:	sub    rsp,0x20
  404e17:	mov    QWORD PTR [rbp-0x18],rdi
  404e1b:	mov    rax,QWORD PTR [rbp-0x18]
  404e1f:	mov    rsi,rax
  404e22:	mov    edi,0x1
  404e27:	call   402490 <calloc@plt>
  404e2c:	mov    QWORD PTR [rbp-0x8],rax
  404e30:	cmp    QWORD PTR [rbp-0x8],0x0
  404e35:	sete   al
  404e38:	movzx  eax,al
  404e3b:	test   rax,rax
  404e3e:	je     404e45 <rb_strcasecmp@plt+0x28d5>
  404e40:	call   4023b0 <rb_outofmemory@plt>
  404e45:	mov    rax,QWORD PTR [rbp-0x8]
  404e49:	leave  
  404e4a:	ret    
  404e4b:	push   rbp
  404e4c:	mov    rbp,rsp
  404e4f:	sub    rsp,0x20
  404e53:	mov    QWORD PTR [rbp-0x18],rdi
  404e57:	mov    rax,QWORD PTR [rbp-0x18]
  404e5b:	mov    rdi,rax
  404e5e:	call   402210 <strlen@plt>
  404e63:	add    rax,0x1
  404e67:	mov    rdi,rax
  404e6a:	call   402180 <malloc@plt>
  404e6f:	mov    QWORD PTR [rbp-0x8],rax
  404e73:	cmp    QWORD PTR [rbp-0x8],0x0
  404e78:	sete   al
  404e7b:	movzx  eax,al
  404e7e:	test   rax,rax
  404e81:	je     404e88 <rb_strcasecmp@plt+0x2918>
  404e83:	call   4023b0 <rb_outofmemory@plt>
  404e88:	mov    rdx,QWORD PTR [rbp-0x18]
  404e8c:	mov    rax,QWORD PTR [rbp-0x8]
  404e90:	mov    rsi,rdx
  404e93:	mov    rdi,rax
  404e96:	call   402450 <strcpy@plt>
  404e9b:	mov    rax,QWORD PTR [rbp-0x8]
  404e9f:	leave  
  404ea0:	ret    
  404ea1:	push   rbp
  404ea2:	mov    rbp,rsp
  404ea5:	sub    rsp,0x10
  404ea9:	mov    QWORD PTR [rbp-0x8],rdi
  404ead:	cmp    QWORD PTR [rbp-0x8],0x0
  404eb2:	setne  al
  404eb5:	movzx  eax,al
  404eb8:	test   rax,rax
  404ebb:	je     404ec9 <rb_strcasecmp@plt+0x2959>
  404ebd:	mov    rax,QWORD PTR [rbp-0x8]
  404ec1:	mov    rdi,rax
  404ec4:	call   402200 <free@plt>
  404ec9:	nop
  404eca:	leave  
  404ecb:	ret    
  404ecc:	push   rbp
  404ecd:	mov    rbp,rsp
  404ed0:	sub    rsp,0x40
  404ed4:	mov    QWORD PTR [rbp-0x38],rdi
  404ed8:	mov    rax,QWORD PTR [rbp-0x38]
  404edc:	mov    QWORD PTR [rbp-0x28],rax
  404ee0:	mov    rax,QWORD PTR [rbp-0x38]
  404ee4:	mov    QWORD PTR [rbp-0x20],rax
  404ee8:	mov    DWORD PTR [rbp-0x2c],0x0
  404eef:	jmp    40500d <rb_strcasecmp@plt+0x2a9d>
  404ef4:	mov    eax,DWORD PTR [rbp-0x2c]
  404ef7:	cdqe   
  404ef9:	shl    rax,0x7
  404efd:	mov    rdx,rax
  404f00:	mov    rax,0x41a3c0
  404f07:	add    rax,rdx
  404f0a:	mov    QWORD PTR [rbp-0x18],rax
  404f0e:	mov    rax,QWORD PTR [rbp-0x18]
  404f12:	mov    QWORD PTR [rbp-0x10],rax
  404f16:	mov    rax,QWORD PTR [rbp-0x18]
  404f1a:	mov    QWORD PTR [rbp-0x8],rax
  404f1e:	mov    rax,QWORD PTR [rbp-0x18]
  404f22:	movzx  eax,WORD PTR [rax]
  404f25:	movzx  eax,ax
  404f28:	cmp    eax,0x2
  404f2b:	je     404fb9 <rb_strcasecmp@plt+0x2a49>
  404f31:	cmp    eax,0xa
  404f34:	je     404f3b <rb_strcasecmp@plt+0x29cb>
  404f36:	jmp    405009 <rb_strcasecmp@plt+0x2a99>
  404f3b:	mov    rax,QWORD PTR [rbp-0x18]
  404f3f:	movzx  edx,WORD PTR [rax]
  404f42:	mov    rax,QWORD PTR [rbp-0x38]
  404f46:	movzx  eax,WORD PTR [rax]
  404f49:	cmp    dx,ax
  404f4c:	jne    405005 <rb_strcasecmp@plt+0x2a95>
  404f52:	mov    rax,QWORD PTR [rbp-0x10]
  404f56:	movzx  edx,WORD PTR [rax+0x2]
  404f5a:	mov    rax,QWORD PTR [rbp-0x28]
  404f5e:	movzx  eax,WORD PTR [rax+0x2]
  404f62:	cmp    dx,ax
  404f65:	jne    405005 <rb_strcasecmp@plt+0x2a95>
  404f6b:	mov    rax,QWORD PTR [rbp-0x28]
  404f6f:	lea    rcx,[rax+0x8]
  404f73:	mov    rax,QWORD PTR [rbp-0x10]
  404f77:	add    rax,0x8
  404f7b:	mov    edx,0x10
  404f80:	mov    rsi,rcx
  404f83:	mov    rdi,rax
  404f86:	call   402480 <memcmp@plt>
  404f8b:	test   eax,eax
  404f8d:	je     404fb2 <rb_strcasecmp@plt+0x2a42>
  404f8f:	mov    rax,QWORD PTR [rbp-0x10]
  404f93:	lea    rcx,[rax+0x8]
  404f97:	mov    edx,0x10
  404f9c:	mov    rax,QWORD PTR [rip+0xf04d]        # 413ff0 <rb_strcasecmp@plt+0x11a80>
  404fa3:	mov    rsi,rax
  404fa6:	mov    rdi,rcx
  404fa9:	call   402480 <memcmp@plt>
  404fae:	test   eax,eax
  404fb0:	jne    405005 <rb_strcasecmp@plt+0x2a95>
  404fb2:	mov    eax,0x1
  404fb7:	jmp    405024 <rb_strcasecmp@plt+0x2ab4>
  404fb9:	mov    rax,QWORD PTR [rbp-0x18]
  404fbd:	movzx  edx,WORD PTR [rax]
  404fc0:	mov    rax,QWORD PTR [rbp-0x38]
  404fc4:	movzx  eax,WORD PTR [rax]
  404fc7:	cmp    dx,ax
  404fca:	jne    405008 <rb_strcasecmp@plt+0x2a98>
  404fcc:	mov    rax,QWORD PTR [rbp-0x8]
  404fd0:	movzx  edx,WORD PTR [rax+0x2]
  404fd4:	mov    rax,QWORD PTR [rbp-0x20]
  404fd8:	movzx  eax,WORD PTR [rax+0x2]
  404fdc:	cmp    dx,ax
  404fdf:	jne    405008 <rb_strcasecmp@plt+0x2a98>
  404fe1:	mov    rax,QWORD PTR [rbp-0x8]
  404fe5:	mov    eax,DWORD PTR [rax+0x4]
  404fe8:	test   eax,eax
  404fea:	je     404ffe <rb_strcasecmp@plt+0x2a8e>
  404fec:	mov    rax,QWORD PTR [rbp-0x8]
  404ff0:	mov    edx,DWORD PTR [rax+0x4]
  404ff3:	mov    rax,QWORD PTR [rbp-0x20]
  404ff7:	mov    eax,DWORD PTR [rax+0x4]
  404ffa:	cmp    edx,eax
  404ffc:	jne    405008 <rb_strcasecmp@plt+0x2a98>
  404ffe:	mov    eax,0x1
  405003:	jmp    405024 <rb_strcasecmp@plt+0x2ab4>
  405005:	nop
  405006:	jmp    405009 <rb_strcasecmp@plt+0x2a99>
  405008:	nop
  405009:	add    DWORD PTR [rbp-0x2c],0x1
  40500d:	mov    rax,0x41a094
  405014:	mov    eax,DWORD PTR [rax]
  405016:	cmp    DWORD PTR [rbp-0x2c],eax
  405019:	jl     404ef4 <rb_strcasecmp@plt+0x2984>
  40501f:	mov    eax,0x0
  405024:	leave  
  405025:	ret    
  405026:	push   rbp
  405027:	mov    rbp,rsp
  40502a:	sub    rsp,0x40
  40502e:	mov    QWORD PTR [rbp-0x38],rdi
  405032:	mov    QWORD PTR [rbp-0x18],0x0
  40503a:	mov    QWORD PTR [rbp-0x10],0x0
  405042:	mov    rax,QWORD PTR [rip+0x14fe7]        # 41a030 <rb_strcasecmp@plt+0x17ac0>
  405049:	mov    QWORD PTR [rbp-0x28],rax
  40504d:	cmp    QWORD PTR [rbp-0x28],0x0
  405052:	je     40505e <rb_strcasecmp@plt+0x2aee>
  405054:	mov    rax,QWORD PTR [rbp-0x28]
  405058:	mov    rax,QWORD PTR [rax+0x10]
  40505c:	jmp    405063 <rb_strcasecmp@plt+0x2af3>
  40505e:	mov    eax,0x0
  405063:	mov    QWORD PTR [rbp-0x20],rax
  405067:	jmp    40514e <rb_strcasecmp@plt+0x2bde>
  40506c:	mov    rax,QWORD PTR [rbp-0x28]
  405070:	mov    rax,QWORD PTR [rax]
  405073:	mov    QWORD PTR [rbp-0x8],rax
  405077:	mov    rax,QWORD PTR [rbp-0x8]
  40507b:	mov    rdx,QWORD PTR [rax+0x130]
  405082:	mov    rax,QWORD PTR [rbp-0x8]
  405086:	mov    rax,QWORD PTR [rax+0x138]
  40508d:	add    rax,rdx
  405090:	mov    QWORD PTR [rbp-0x10],rax
  405094:	mov    rax,QWORD PTR [rbp-0x38]
  405098:	cmp    rax,QWORD PTR [rbp-0x10]
  40509c:	jl     405113 <rb_strcasecmp@plt+0x2ba3>
  40509e:	mov    rax,QWORD PTR [rbp-0x8]
  4050a2:	mov    eax,DWORD PTR [rax+0x140]
  4050a8:	movsxd rdx,eax
  4050ab:	lea    rcx,[rdx*4+0x0]
  4050b3:	lea    rdx,[rip+0x14fa6]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4050ba:	mov    edx,DWORD PTR [rcx+rdx*1]
  4050bd:	lea    ecx,[rdx+0x1]
  4050c0:	cdqe   
  4050c2:	lea    rdx,[rax*4+0x0]
  4050ca:	lea    rax,[rip+0x14f8f]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4050d1:	mov    DWORD PTR [rdx+rax*1],ecx
  4050d4:	mov    rax,QWORD PTR [rbp-0x8]
  4050d8:	mov    rdx,QWORD PTR [rbp-0x38]
  4050dc:	mov    QWORD PTR [rax+0x130],rdx
  4050e3:	mov    rax,QWORD PTR [rbp-0x8]
  4050e7:	mov    rdx,QWORD PTR [rax+0x138]
  4050ee:	mov    rax,QWORD PTR [rbp-0x8]
  4050f2:	mov    rax,QWORD PTR [rax+0x138]
  4050f9:	add    rdx,rax
  4050fc:	mov    rax,QWORD PTR [rbp-0x8]
  405100:	mov    QWORD PTR [rax+0x138],rdx
  405107:	mov    rax,QWORD PTR [rbp-0x8]
  40510b:	mov    rdi,rax
  40510e:	call   405f64 <rb_strcasecmp@plt+0x39f4>
  405113:	cmp    QWORD PTR [rbp-0x18],0x0
  405118:	je     405124 <rb_strcasecmp@plt+0x2bb4>
  40511a:	mov    rax,QWORD PTR [rbp-0x10]
  40511e:	cmp    rax,QWORD PTR [rbp-0x18]
  405122:	jge    40512c <rb_strcasecmp@plt+0x2bbc>
  405124:	mov    rax,QWORD PTR [rbp-0x10]
  405128:	mov    QWORD PTR [rbp-0x18],rax
  40512c:	mov    rax,QWORD PTR [rbp-0x20]
  405130:	mov    QWORD PTR [rbp-0x28],rax
  405134:	cmp    QWORD PTR [rbp-0x28],0x0
  405139:	je     405145 <rb_strcasecmp@plt+0x2bd5>
  40513b:	mov    rax,QWORD PTR [rbp-0x28]
  40513f:	mov    rax,QWORD PTR [rax+0x10]
  405143:	jmp    40514a <rb_strcasecmp@plt+0x2bda>
  405145:	mov    eax,0x0
  40514a:	mov    QWORD PTR [rbp-0x20],rax
  40514e:	cmp    QWORD PTR [rbp-0x28],0x0
  405153:	jne    40506c <rb_strcasecmp@plt+0x2afc>
  405159:	mov    rax,QWORD PTR [rbp-0x18]
  40515d:	cmp    rax,QWORD PTR [rbp-0x38]
  405161:	jg     40516f <rb_strcasecmp@plt+0x2bff>
  405163:	mov    rax,QWORD PTR [rbp-0x38]
  405167:	add    rax,0x258
  40516d:	jmp    405173 <rb_strcasecmp@plt+0x2c03>
  40516f:	mov    rax,QWORD PTR [rbp-0x18]
  405173:	leave  
  405174:	ret    
  405175:	push   rbp
  405176:	mov    rbp,rsp
  405179:	sub    rsp,0x10
  40517d:	mov    QWORD PTR [rbp-0x8],rdi
  405181:	call   4022a0 <rb_current_time@plt>
  405186:	mov    rdi,rax
  405189:	call   405026 <rb_strcasecmp@plt+0x2ab6>
  40518e:	nop
  40518f:	leave  
  405190:	ret    
  405191:	push   rbp
  405192:	mov    rbp,rsp
  405195:	sub    rsp,0x10
  405199:	call   406bbd <rb_strcasecmp@plt+0x464d>
  40519e:	mov    DWORD PTR [rbp-0x4],0x0
  4051a5:	jmp    4051c6 <rb_strcasecmp@plt+0x2c56>
  4051a7:	mov    eax,DWORD PTR [rbp-0x4]
  4051aa:	cdqe   
  4051ac:	lea    rdx,[rax*4+0x0]
  4051b4:	lea    rax,[rip+0x14ea5]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4051bb:	mov    DWORD PTR [rdx+rax*1],0x0
  4051c2:	add    DWORD PTR [rbp-0x4],0x1
  4051c6:	mov    rax,0x41a094
  4051cd:	mov    eax,DWORD PTR [rax]
  4051cf:	cmp    DWORD PTR [rbp-0x4],eax
  4051d2:	jl     4051a7 <rb_strcasecmp@plt+0x2c37>
  4051d4:	mov    rax,QWORD PTR [rip+0x14e45]        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  4051db:	test   rax,rax
  4051de:	jne    40525f <rb_strcasecmp@plt+0x2cef>
  4051e0:	mov    rax,0x41a3c0
  4051e7:	movzx  eax,WORD PTR [rax]
  4051ea:	movzx  eax,ax
  4051ed:	lea    rcx,[rip+0xa42c]        # 40f620 <rb_strcasecmp@plt+0xd0b0>
  4051f4:	mov    edx,0x0
  4051f9:	mov    esi,0x2
  4051fe:	mov    edi,eax
  405200:	call   402110 <rb_socket@plt>
  405205:	mov    QWORD PTR [rip+0x14e14],rax        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  40520c:	mov    rax,QWORD PTR [rip+0x14e0d]        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  405213:	test   rax,rax
  405216:	je     40525e <rb_strcasecmp@plt+0x2cee>
  405218:	mov    rax,QWORD PTR [rip+0x14e01]        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  40521f:	mov    ecx,0x0
  405224:	lea    rdx,[rip+0x189b]        # 406ac6 <rb_strcasecmp@plt+0x4556>
  40522b:	mov    esi,0x1
  405230:	mov    rdi,rax
  405233:	call   4020b0 <rb_setselect@plt>
  405238:	mov    ecx,0x1
  40523d:	mov    edx,0x0
  405242:	lea    rsi,[rip+0xffffffffffffff2c]        # 405175 <rb_strcasecmp@plt+0x2c05>
  405249:	lea    rdi,[rip+0xa3e4]        # 40f634 <rb_strcasecmp@plt+0xd0c4>
  405250:	call   4024d0 <rb_event_add@plt>
  405255:	mov    QWORD PTR [rip+0x14e2c],rax        # 41a088 <rb_strcasecmp@plt+0x17b18>
  40525c:	jmp    40525f <rb_strcasecmp@plt+0x2cef>
  40525e:	nop
  40525f:	leave  
  405260:	ret    
  405261:	push   rbp
  405262:	mov    rbp,rsp
  405265:	call   405191 <rb_strcasecmp@plt+0x2c21>
  40526a:	nop
  40526b:	pop    rbp
  40526c:	ret    
  40526d:	push   rbp
  40526e:	mov    rbp,rsp
  405271:	mov    rax,QWORD PTR [rip+0x14da8]        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  405278:	mov    rdi,rax
  40527b:	call   402300 <rb_close@plt>
  405280:	mov    QWORD PTR [rip+0x14d95],0x0        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  40528b:	mov    rax,QWORD PTR [rip+0x14df6]        # 41a088 <rb_strcasecmp@plt+0x17b18>
  405292:	mov    rdi,rax
  405295:	call   4020a0 <rb_event_delete@plt>
  40529a:	call   405191 <rb_strcasecmp@plt+0x2c21>
  40529f:	nop
  4052a0:	pop    rbp
  4052a1:	ret    
  4052a2:	push   rbp
  4052a3:	mov    rbp,rsp
  4052a6:	sub    rsp,0x20
  4052aa:	mov    QWORD PTR [rbp-0x18],rdi
  4052ae:	mov    QWORD PTR [rbp-0x20],rsi
  4052b2:	mov    rax,QWORD PTR [rbp-0x18]
  4052b6:	mov    esi,0x2e
  4052bb:	mov    rdi,rax
  4052be:	call   402370 <strchr@plt>
  4052c3:	test   rax,rax
  4052c6:	jne    40533c <rb_strcasecmp@plt+0x2dcc>
  4052c8:	mov    rax,0x41a2c0
  4052cf:	movzx  eax,BYTE PTR [rax]
  4052d2:	test   al,al
  4052d4:	je     40533c <rb_strcasecmp@plt+0x2dcc>
  4052d6:	mov    rax,QWORD PTR [rbp-0x18]
  4052da:	mov    rdi,rax
  4052dd:	call   402210 <strlen@plt>
  4052e2:	mov    QWORD PTR [rbp-0x8],rax
  4052e6:	mov    rax,0x41a2c0
  4052ed:	mov    rdi,rax
  4052f0:	call   402210 <strlen@plt>
  4052f5:	mov    rdx,rax
  4052f8:	mov    rax,QWORD PTR [rbp-0x8]
  4052fc:	add    rax,rdx
  4052ff:	add    rax,0x2
  405303:	cmp    rax,QWORD PTR [rbp-0x20]
  405307:	jae    40533c <rb_strcasecmp@plt+0x2dcc>
  405309:	mov    rax,QWORD PTR [rbp-0x8]
  40530d:	lea    rdx,[rax+0x1]
  405311:	mov    QWORD PTR [rbp-0x8],rdx
  405315:	mov    rdx,QWORD PTR [rbp-0x18]
  405319:	add    rax,rdx
  40531c:	mov    BYTE PTR [rax],0x2e
  40531f:	mov    rdx,QWORD PTR [rbp-0x18]
  405323:	mov    rax,QWORD PTR [rbp-0x8]
  405327:	add    rdx,rax
  40532a:	mov    rax,0x41a2c0
  405331:	mov    rsi,rax
  405334:	mov    rdi,rdx
  405337:	call   402450 <strcpy@plt>
  40533c:	nop
  40533d:	leave  
  40533e:	ret    
  40533f:	push   rbp
  405340:	mov    rbp,rsp
  405343:	sub    rsp,0x10
  405347:	mov    QWORD PTR [rbp-0x8],rdi
  40534b:	mov    rax,QWORD PTR [rbp-0x8]
  40534f:	lea    rsi,[rip+0x14cda]        # 41a030 <rb_strcasecmp@plt+0x17ac0>
  405356:	mov    rdi,rax
  405359:	call   404d1b <rb_strcasecmp@plt+0x27ab>
  40535e:	mov    rax,QWORD PTR [rbp-0x8]
  405362:	mov    rax,QWORD PTR [rax+0x1c8]
  405369:	mov    rdi,rax
  40536c:	call   404ea1 <rb_strcasecmp@plt+0x2931>
  405371:	mov    rax,QWORD PTR [rbp-0x8]
  405375:	mov    rdi,rax
  405378:	call   404ea1 <rb_strcasecmp@plt+0x2931>
  40537d:	nop
  40537e:	leave  
  40537f:	ret    
  405380:	push   rbp
  405381:	mov    rbp,rsp
  405384:	sub    rsp,0x20
  405388:	mov    QWORD PTR [rbp-0x18],rdi
  40538c:	mov    edi,0x1d8
  405391:	call   404e0f <rb_strcasecmp@plt+0x289f>
  405396:	mov    QWORD PTR [rbp-0x8],rax
  40539a:	call   4022a0 <rb_current_time@plt>
  40539f:	mov    rdx,rax
  4053a2:	mov    rax,QWORD PTR [rbp-0x8]
  4053a6:	mov    QWORD PTR [rax+0x130],rdx
  4053ad:	mov    rax,QWORD PTR [rbp-0x8]
  4053b1:	mov    BYTE PTR [rax+0x129],0x3
  4053b8:	mov    rax,QWORD PTR [rbp-0x8]
  4053bc:	mov    QWORD PTR [rax+0x138],0x4
  4053c7:	mov    rax,QWORD PTR [rbp-0x8]
  4053cb:	mov    rdx,QWORD PTR [rbp-0x18]
  4053cf:	mov    QWORD PTR [rax+0x1d0],rdx
  4053d6:	call   4056ce <rb_strcasecmp@plt+0x315e>
  4053db:	movzx  edx,ax
  4053de:	mov    rax,QWORD PTR [rbp-0x8]
  4053e2:	mov    DWORD PTR [rax+0x18],edx
  4053e5:	mov    rcx,QWORD PTR [rbp-0x8]
  4053e9:	mov    rax,QWORD PTR [rbp-0x8]
  4053ed:	lea    rdx,[rip+0x14c3c]        # 41a030 <rb_strcasecmp@plt+0x17ac0>
  4053f4:	mov    rsi,rcx
  4053f7:	mov    rdi,rax
  4053fa:	call   404c17 <rb_strcasecmp@plt+0x26a7>
  4053ff:	mov    rax,QWORD PTR [rbp-0x8]
  405403:	leave  
  405404:	ret    
  405405:	push   rbp
  405406:	mov    rbp,rsp
  405409:	mov    DWORD PTR [rbp-0x4],edi
  40540c:	mov    eax,DWORD PTR [rbp-0x4]
  40540f:	cmp    eax,0x2
  405412:	je     405433 <rb_strcasecmp@plt+0x2ec3>
  405414:	cmp    eax,0x2
  405417:	jg     405420 <rb_strcasecmp@plt+0x2eb0>
  405419:	cmp    eax,0x1
  40541c:	je     40542c <rb_strcasecmp@plt+0x2ebc>
  40541e:	jmp    405448 <rb_strcasecmp@plt+0x2ed8>
  405420:	cmp    eax,0x3
  405423:	je     40543a <rb_strcasecmp@plt+0x2eca>
  405425:	cmp    eax,0x4
  405428:	je     405441 <rb_strcasecmp@plt+0x2ed1>
  40542a:	jmp    405448 <rb_strcasecmp@plt+0x2ed8>
  40542c:	mov    eax,0x3
  405431:	jmp    40544d <rb_strcasecmp@plt+0x2edd>
  405433:	mov    eax,0x9
  405438:	jmp    40544d <rb_strcasecmp@plt+0x2edd>
  40543a:	mov    eax,0x1b
  40543f:	jmp    40544d <rb_strcasecmp@plt+0x2edd>
  405441:	mov    eax,0x51
  405446:	jmp    40544d <rb_strcasecmp@plt+0x2edd>
  405448:	mov    eax,0xf3
  40544d:	pop    rbp
  40544e:	ret    
  40544f:	push   rbp
  405450:	mov    rbp,rsp
  405453:	push   r13
  405455:	push   r12
  405457:	push   rbx
  405458:	sub    rsp,0x28
  40545c:	mov    QWORD PTR [rbp-0x38],rdi
  405460:	mov    DWORD PTR [rbp-0x3c],esi
  405463:	mov    DWORD PTR [rbp-0x40],edx
  405466:	mov    eax,DWORD PTR [rip+0x14c24]        # 41a090 <rb_strcasecmp@plt+0x17b20>
  40546c:	add    eax,0x1
  40546f:	mov    DWORD PTR [rip+0x14c1b],eax        # 41a090 <rb_strcasecmp@plt+0x17b20>
  405475:	mov    DWORD PTR [rbp-0x28],0x0
  40547c:	jmp    40557c <rb_strcasecmp@plt+0x300c>
  405481:	mov    edx,DWORD PTR [rbp-0x28]
  405484:	mov    eax,DWORD PTR [rbp-0x40]
  405487:	add    eax,edx
  405489:	lea    edx,[rax-0x1]
  40548c:	mov    rax,0x41a094
  405493:	mov    ecx,DWORD PTR [rax]
  405495:	mov    eax,edx
  405497:	cdq    
  405498:	idiv   ecx
  40549a:	mov    DWORD PTR [rbp-0x24],edx
  40549d:	mov    eax,DWORD PTR [rbp-0x24]
  4054a0:	cdqe   
  4054a2:	lea    rdx,[rax*4+0x0]
  4054aa:	lea    rax,[rip+0x14baf]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4054b1:	mov    eax,DWORD PTR [rdx+rax*1]
  4054b4:	test   eax,eax
  4054b6:	je     4054ed <rb_strcasecmp@plt+0x2f7d>
  4054b8:	mov    ebx,DWORD PTR [rip+0x14bd2]        # 41a090 <rb_strcasecmp@plt+0x17b20>
  4054be:	mov    eax,DWORD PTR [rbp-0x24]
  4054c1:	cdqe   
  4054c3:	lea    rdx,[rax*4+0x0]
  4054cb:	lea    rax,[rip+0x14b8e]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4054d2:	mov    eax,DWORD PTR [rdx+rax*1]
  4054d5:	mov    edi,eax
  4054d7:	call   405405 <rb_strcasecmp@plt+0x2e95>
  4054dc:	mov    ecx,eax
  4054de:	mov    eax,ebx
  4054e0:	cdq    
  4054e1:	idiv   ecx
  4054e3:	mov    eax,edx
  4054e5:	test   eax,eax
  4054e7:	jne    405577 <rb_strcasecmp@plt+0x3007>
  4054ed:	mov    eax,DWORD PTR [rbp-0x24]
  4054f0:	cdqe   
  4054f2:	shl    rax,0x7
  4054f6:	mov    rdx,rax
  4054f9:	mov    rax,0x41a3c0
  405500:	add    rax,rdx
  405503:	movzx  eax,WORD PTR [rax]
  405506:	cmp    ax,0x2
  40550a:	jne    405514 <rb_strcasecmp@plt+0x2fa4>
  40550c:	mov    r13d,0x10
  405512:	jmp    40551a <rb_strcasecmp@plt+0x2faa>
  405514:	mov    r13d,0x1c
  40551a:	mov    eax,DWORD PTR [rbp-0x24]
  40551d:	cdqe   
  40551f:	shl    rax,0x7
  405523:	mov    rdx,rax
  405526:	mov    rax,0x41a3c0
  40552d:	lea    r12,[rdx+rax*1]
  405531:	mov    eax,DWORD PTR [rbp-0x3c]
  405534:	movsxd rbx,eax
  405537:	mov    rax,QWORD PTR [rip+0x14ae2]        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  40553e:	mov    rdi,rax
  405541:	call   4020c0 <rb_get_fd@plt>
  405546:	mov    edi,eax
  405548:	mov    rax,QWORD PTR [rbp-0x38]
  40554c:	mov    r9d,r13d
  40554f:	mov    r8,r12
  405552:	mov    ecx,0x0
  405557:	mov    rdx,rbx
  40555a:	mov    rsi,rax
  40555d:	call   402520 <sendto@plt>
  405562:	mov    rdx,rax
  405565:	mov    eax,DWORD PTR [rbp-0x3c]
  405568:	cdqe   
  40556a:	cmp    rdx,rax
  40556d:	jne    405578 <rb_strcasecmp@plt+0x3008>
  40556f:	mov    eax,DWORD PTR [rbp-0x24]
  405572:	jmp    405678 <rb_strcasecmp@plt+0x3108>
  405577:	nop
  405578:	add    DWORD PTR [rbp-0x28],0x1
  40557c:	mov    rax,0x41a094
  405583:	mov    eax,DWORD PTR [rax]
  405585:	cmp    DWORD PTR [rbp-0x28],eax
  405588:	jl     405481 <rb_strcasecmp@plt+0x2f11>
  40558e:	mov    DWORD PTR [rbp-0x28],0x0
  405595:	jmp    405661 <rb_strcasecmp@plt+0x30f1>
  40559a:	mov    edx,DWORD PTR [rbp-0x28]
  40559d:	mov    eax,DWORD PTR [rbp-0x40]
  4055a0:	add    eax,edx
  4055a2:	lea    edx,[rax-0x1]
  4055a5:	mov    rax,0x41a094
  4055ac:	mov    ecx,DWORD PTR [rax]
  4055ae:	mov    eax,edx
  4055b0:	cdq    
  4055b1:	idiv   ecx
  4055b3:	mov    DWORD PTR [rbp-0x24],edx
  4055b6:	mov    eax,DWORD PTR [rbp-0x24]
  4055b9:	cdqe   
  4055bb:	lea    rdx,[rax*4+0x0]
  4055c3:	lea    rax,[rip+0x14a96]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4055ca:	mov    eax,DWORD PTR [rdx+rax*1]
  4055cd:	test   eax,eax
  4055cf:	je     40565c <rb_strcasecmp@plt+0x30ec>
  4055d5:	mov    eax,DWORD PTR [rbp-0x24]
  4055d8:	cdqe   
  4055da:	shl    rax,0x7
  4055de:	mov    rdx,rax
  4055e1:	mov    rax,0x41a3c0
  4055e8:	add    rax,rdx
  4055eb:	movzx  eax,WORD PTR [rax]
  4055ee:	cmp    ax,0x2
  4055f2:	jne    4055fc <rb_strcasecmp@plt+0x308c>
  4055f4:	mov    r13d,0x10
  4055fa:	jmp    405602 <rb_strcasecmp@plt+0x3092>
  4055fc:	mov    r13d,0x1c
  405602:	mov    eax,DWORD PTR [rbp-0x24]
  405605:	cdqe   
  405607:	shl    rax,0x7
  40560b:	mov    rdx,rax
  40560e:	mov    rax,0x41a3c0
  405615:	lea    r12,[rdx+rax*1]
  405619:	mov    eax,DWORD PTR [rbp-0x3c]
  40561c:	movsxd rbx,eax
  40561f:	mov    rax,QWORD PTR [rip+0x149fa]        # 41a020 <rb_strcasecmp@plt+0x17ab0>
  405626:	mov    rdi,rax
  405629:	call   4020c0 <rb_get_fd@plt>
  40562e:	mov    edi,eax
  405630:	mov    rax,QWORD PTR [rbp-0x38]
  405634:	mov    r9d,r13d
  405637:	mov    r8,r12
  40563a:	mov    ecx,0x0
  40563f:	mov    rdx,rbx
  405642:	mov    rsi,rax
  405645:	call   402520 <sendto@plt>
  40564a:	mov    rdx,rax
  40564d:	mov    eax,DWORD PTR [rbp-0x3c]
  405650:	cdqe   
  405652:	cmp    rdx,rax
  405655:	jne    40565d <rb_strcasecmp@plt+0x30ed>
  405657:	mov    eax,DWORD PTR [rbp-0x24]
  40565a:	jmp    405678 <rb_strcasecmp@plt+0x3108>
  40565c:	nop
  40565d:	add    DWORD PTR [rbp-0x28],0x1
  405661:	mov    rax,0x41a094
  405668:	mov    eax,DWORD PTR [rax]
  40566a:	cmp    DWORD PTR [rbp-0x28],eax
  40566d:	jl     40559a <rb_strcasecmp@plt+0x302a>
  405673:	mov    eax,0xffffffff
  405678:	add    rsp,0x28
  40567c:	pop    rbx
  40567d:	pop    r12
  40567f:	pop    r13
  405681:	pop    rbp
  405682:	ret    
  405683:	push   rbp
  405684:	mov    rbp,rsp
  405687:	mov    DWORD PTR [rbp-0x14],edi
  40568a:	mov    rax,QWORD PTR [rip+0x1499f]        # 41a030 <rb_strcasecmp@plt+0x17ac0>
  405691:	mov    QWORD PTR [rbp-0x10],rax
  405695:	jmp    4056c0 <rb_strcasecmp@plt+0x3150>
  405697:	mov    rax,QWORD PTR [rbp-0x10]
  40569b:	mov    rax,QWORD PTR [rax]
  40569e:	mov    QWORD PTR [rbp-0x8],rax
  4056a2:	mov    rax,QWORD PTR [rbp-0x8]
  4056a6:	mov    eax,DWORD PTR [rax+0x18]
  4056a9:	cmp    eax,DWORD PTR [rbp-0x14]
  4056ac:	jne    4056b4 <rb_strcasecmp@plt+0x3144>
  4056ae:	mov    rax,QWORD PTR [rbp-0x8]
  4056b2:	jmp    4056cc <rb_strcasecmp@plt+0x315c>
  4056b4:	mov    rax,QWORD PTR [rbp-0x10]
  4056b8:	mov    rax,QWORD PTR [rax+0x10]
  4056bc:	mov    QWORD PTR [rbp-0x10],rax
  4056c0:	cmp    QWORD PTR [rbp-0x10],0x0
  4056c5:	jne    405697 <rb_strcasecmp@plt+0x3127>
  4056c7:	mov    eax,0x0
  4056cc:	pop    rbp
  4056cd:	ret    
  4056ce:	push   rbp
  4056cf:	mov    rbp,rsp
  4056d2:	sub    rsp,0x10
  4056d6:	mov    rax,QWORD PTR fs:0x28
  4056df:	mov    QWORD PTR [rbp-0x8],rax
  4056e3:	xor    eax,eax
  4056e5:	lea    rax,[rbp-0xa]
  4056e9:	mov    esi,0x2
  4056ee:	mov    rdi,rax
  4056f1:	call   4024f0 <rb_get_random@plt>
  4056f6:	movzx  eax,WORD PTR [rbp-0xa]
  4056fa:	cmp    ax,0xffff
  4056fe:	movzx  eax,WORD PTR [rbp-0xa]
  405702:	movzx  eax,ax
  405705:	mov    edi,eax
  405707:	call   405683 <rb_strcasecmp@plt+0x3113>
  40570c:	test   rax,rax
  40570f:	jne    4056e5 <rb_strcasecmp@plt+0x3175>
  405711:	movzx  eax,WORD PTR [rbp-0xa]
  405715:	mov    rdx,QWORD PTR [rbp-0x8]
  405719:	xor    rdx,QWORD PTR fs:0x28
  405722:	je     405729 <rb_strcasecmp@plt+0x31b9>
  405724:	call   402400 <__stack_chk_fail@plt>
  405729:	leave  
  40572a:	ret    
  40572b:	push   rbp
  40572c:	mov    rbp,rsp
  40572f:	sub    rsp,0x130
  405736:	mov    QWORD PTR [rbp-0x118],rdi
  40573d:	mov    QWORD PTR [rbp-0x120],rsi
  405744:	mov    DWORD PTR [rbp-0x124],edx
  40574a:	mov    rax,QWORD PTR fs:0x28
  405753:	mov    QWORD PTR [rbp-0x8],rax
  405757:	xor    eax,eax
  405759:	cmp    QWORD PTR [rbp-0x118],0x0
  405761:	jne    405782 <rb_strcasecmp@plt+0x3212>
  405763:	lea    rcx,[rip+0x9ff6]        # 40f760 <rb_strcasecmp@plt+0xd1f0>
  40576a:	mov    edx,0x19c
  40576f:	lea    rsi,[rip+0x9ecf]        # 40f645 <rb_strcasecmp@plt+0xd0d5>
  405776:	lea    rdi,[rip+0x9ece]        # 40f64b <rb_strcasecmp@plt+0xd0db>
  40577d:	call   4020f0 <__assert_fail@plt>
  405782:	mov    rcx,QWORD PTR [rbp-0x118]
  405789:	lea    rax,[rbp-0x110]
  405790:	mov    edx,0x100
  405795:	mov    rsi,rcx
  405798:	mov    rdi,rax
  40579b:	call   4021d0 <rb_strlcpy@plt>
  4057a0:	lea    rax,[rbp-0x110]
  4057a7:	mov    esi,0xff
  4057ac:	mov    rdi,rax
  4057af:	call   4052a2 <rb_strcasecmp@plt+0x2d32>
  4057b4:	mov    edx,DWORD PTR [rbp-0x124]
  4057ba:	mov    rcx,QWORD PTR [rbp-0x120]
  4057c1:	lea    rax,[rbp-0x110]
  4057c8:	mov    rsi,rcx
  4057cb:	mov    rdi,rax
  4057ce:	call   4057ea <rb_strcasecmp@plt+0x327a>
  4057d3:	nop
  4057d4:	mov    rax,QWORD PTR [rbp-0x8]
  4057d8:	xor    rax,QWORD PTR fs:0x28
  4057e1:	je     4057e8 <rb_strcasecmp@plt+0x3278>
  4057e3:	call   402400 <__stack_chk_fail@plt>
  4057e8:	leave  
  4057e9:	ret    
  4057ea:	push   rbp
  4057eb:	mov    rbp,rsp
  4057ee:	sub    rsp,0x20
  4057f2:	mov    QWORD PTR [rbp-0x8],rdi
  4057f6:	mov    QWORD PTR [rbp-0x10],rsi
  4057fa:	mov    DWORD PTR [rbp-0x14],edx
  4057fd:	cmp    QWORD PTR [rbp-0x8],0x0
  405802:	jne    405823 <rb_strcasecmp@plt+0x32b3>
  405804:	lea    rcx,[rip+0x9f75]        # 40f780 <rb_strcasecmp@plt+0xd210>
  40580b:	mov    edx,0x1a9
  405810:	lea    rsi,[rip+0x9e2e]        # 40f645 <rb_strcasecmp@plt+0xd0d5>
  405817:	lea    rdi,[rip+0x9e2d]        # 40f64b <rb_strcasecmp@plt+0xd0db>
  40581e:	call   4020f0 <__assert_fail@plt>
  405823:	mov    edx,DWORD PTR [rbp-0x14]
  405826:	mov    rsi,QWORD PTR [rbp-0x8]
  40582a:	mov    rax,QWORD PTR [rbp-0x10]
  40582e:	mov    ecx,edx
  405830:	mov    edx,0x0
  405835:	mov    rdi,rax
  405838:	call   40586b <rb_strcasecmp@plt+0x32fb>
  40583d:	nop
  40583e:	leave  
  40583f:	ret    
  405840:	push   rbp
  405841:	mov    rbp,rsp
  405844:	sub    rsp,0x10
  405848:	mov    QWORD PTR [rbp-0x8],rdi
  40584c:	mov    QWORD PTR [rbp-0x10],rsi
  405850:	mov    rcx,QWORD PTR [rbp-0x8]
  405854:	mov    rax,QWORD PTR [rbp-0x10]
  405858:	mov    edx,0x0
  40585d:	mov    rsi,rcx
  405860:	mov    rdi,rax
  405863:	call   405d9c <rb_strcasecmp@plt+0x382c>
  405868:	nop
  405869:	leave  
  40586a:	ret    
  40586b:	push   rbp
  40586c:	mov    rbp,rsp
  40586f:	sub    rsp,0x20
  405873:	mov    QWORD PTR [rbp-0x8],rdi
  405877:	mov    QWORD PTR [rbp-0x10],rsi
  40587b:	mov    QWORD PTR [rbp-0x18],rdx
  40587f:	mov    DWORD PTR [rbp-0x1c],ecx
  405882:	cmp    QWORD PTR [rbp-0x18],0x0
  405887:	jne    4058b3 <rb_strcasecmp@plt+0x3343>
  405889:	mov    rax,QWORD PTR [rbp-0x8]
  40588d:	mov    rdi,rax
  405890:	call   405380 <rb_strcasecmp@plt+0x2e10>
  405895:	mov    QWORD PTR [rbp-0x18],rax
  405899:	mov    rax,QWORD PTR [rbp-0x10]
  40589d:	mov    rdi,rax
  4058a0:	call   404e4b <rb_strcasecmp@plt+0x28db>
  4058a5:	mov    rdx,rax
  4058a8:	mov    rax,QWORD PTR [rbp-0x18]
  4058ac:	mov    QWORD PTR [rax+0x1c8],rdx
  4058b3:	mov    rax,QWORD PTR [rbp-0x18]
  4058b7:	lea    rcx,[rax+0x29]
  4058bb:	mov    rax,QWORD PTR [rbp-0x10]
  4058bf:	mov    edx,0x100
  4058c4:	mov    rsi,rax
  4058c7:	mov    rdi,rcx
  4058ca:	call   4021d0 <rb_strlcpy@plt>
  4058cf:	mov    eax,DWORD PTR [rbp-0x1c]
  4058d2:	mov    edx,eax
  4058d4:	mov    rax,QWORD PTR [rbp-0x18]
  4058d8:	mov    BYTE PTR [rax+0x28],dl
  4058db:	mov    rax,QWORD PTR [rbp-0x18]
  4058df:	mov    rdi,rax
  4058e2:	call   405e33 <rb_strcasecmp@plt+0x38c3>
  4058e7:	nop
  4058e8:	leave  
  4058e9:	ret    
  4058ea:	push   rbp
  4058eb:	mov    rbp,rsp
  4058ee:	push   r15
  4058f0:	push   r14
  4058f2:	push   r13
  4058f4:	push   r12
  4058f6:	push   rbx
  4058f7:	sub    rsp,0xa8
  4058fe:	mov    QWORD PTR [rbp-0x58],rdi
  405902:	mov    QWORD PTR [rbp-0x60],rsi
  405906:	mov    QWORD PTR [rbp-0x68],rdx
  40590a:	mov    QWORD PTR [rbp-0x70],rcx
  40590e:	mov    rax,QWORD PTR [rbp-0x68]
  405912:	movzx  eax,WORD PTR [rax]
  405915:	cmp    ax,0x2
  405919:	jne    4059a3 <rb_strcasecmp@plt+0x3433>
  40591f:	mov    rax,QWORD PTR [rbp-0x68]
  405923:	mov    QWORD PTR [rbp-0x48],rax
  405927:	mov    rax,QWORD PTR [rbp-0x48]
  40592b:	add    rax,0x4
  40592f:	mov    QWORD PTR [rbp-0x40],rax
  405933:	cmp    QWORD PTR [rbp-0x70],0x0
  405938:	je     405940 <rb_strcasecmp@plt+0x33d0>
  40593a:	mov    rax,QWORD PTR [rbp-0x70]
  40593e:	jmp    405947 <rb_strcasecmp@plt+0x33d7>
  405940:	lea    rax,[rip+0x9d0e]        # 40f655 <rb_strcasecmp@plt+0xd0e5>
  405947:	mov    rdx,QWORD PTR [rbp-0x40]
  40594b:	movzx  edx,BYTE PTR [rdx]
  40594e:	movzx  ecx,dl
  405951:	mov    rdx,QWORD PTR [rbp-0x40]
  405955:	add    rdx,0x1
  405959:	movzx  edx,BYTE PTR [rdx]
  40595c:	movzx  r9d,dl
  405960:	mov    rdx,QWORD PTR [rbp-0x40]
  405964:	add    rdx,0x2
  405968:	movzx  edx,BYTE PTR [rdx]
  40596b:	movzx  r8d,dl
  40596f:	mov    rdx,QWORD PTR [rbp-0x40]
  405973:	add    rdx,0x3
  405977:	movzx  edx,BYTE PTR [rdx]
  40597a:	movzx  edx,dl
  40597d:	mov    rsi,QWORD PTR [rbp-0x60]
  405981:	mov    rdi,QWORD PTR [rbp-0x58]
  405985:	push   rax
  405986:	push   rcx
  405987:	mov    ecx,edx
  405989:	lea    rdx,[rip+0x9cd2]        # 40f662 <rb_strcasecmp@plt+0xd0f2>
  405990:	mov    eax,0x0
  405995:	call   402080 <snprintf@plt>
  40599a:	add    rsp,0x10
  40599e:	jmp    405d8c <rb_strcasecmp@plt+0x381c>
  4059a3:	mov    rax,QWORD PTR [rbp-0x68]
  4059a7:	movzx  eax,WORD PTR [rax]
  4059aa:	cmp    ax,0xa
  4059ae:	jne    405d8c <rb_strcasecmp@plt+0x381c>
  4059b4:	mov    rax,QWORD PTR [rbp-0x68]
  4059b8:	mov    QWORD PTR [rbp-0x38],rax
  4059bc:	mov    rax,QWORD PTR [rbp-0x38]
  4059c0:	add    rax,0x8
  4059c4:	mov    QWORD PTR [rbp-0x40],rax
  4059c8:	cmp    QWORD PTR [rbp-0x70],0x0
  4059cd:	je     4059d5 <rb_strcasecmp@plt+0x3465>
  4059cf:	mov    r12,QWORD PTR [rbp-0x70]
  4059d3:	jmp    4059dc <rb_strcasecmp@plt+0x346c>
  4059d5:	lea    r12,[rip+0x9c95]        # 40f671 <rb_strcasecmp@plt+0xd101>
  4059dc:	mov    rax,QWORD PTR [rbp-0x40]
  4059e0:	movzx  eax,BYTE PTR [rax]
  4059e3:	shr    al,0x4
  4059e6:	movzx  eax,al
  4059e9:	mov    DWORD PTR [rbp-0x74],eax
  4059ec:	mov    rax,QWORD PTR [rbp-0x40]
  4059f0:	movzx  eax,BYTE PTR [rax]
  4059f3:	movzx  eax,al
  4059f6:	and    eax,0xf
  4059f9:	mov    DWORD PTR [rbp-0x78],eax
  4059fc:	mov    rax,QWORD PTR [rbp-0x40]
  405a00:	add    rax,0x1
  405a04:	movzx  eax,BYTE PTR [rax]
  405a07:	shr    al,0x4
  405a0a:	movzx  ebx,al
  405a0d:	mov    DWORD PTR [rbp-0x7c],ebx
  405a10:	mov    rax,QWORD PTR [rbp-0x40]
  405a14:	add    rax,0x1
  405a18:	movzx  eax,BYTE PTR [rax]
  405a1b:	movzx  eax,al
  405a1e:	and    eax,0xf
  405a21:	mov    DWORD PTR [rbp-0x80],eax
  405a24:	mov    rax,QWORD PTR [rbp-0x40]
  405a28:	add    rax,0x2
  405a2c:	movzx  eax,BYTE PTR [rax]
  405a2f:	shr    al,0x4
  405a32:	movzx  ecx,al
  405a35:	mov    DWORD PTR [rbp-0x84],ecx
  405a3b:	mov    rax,QWORD PTR [rbp-0x40]
  405a3f:	add    rax,0x2
  405a43:	movzx  eax,BYTE PTR [rax]
  405a46:	movzx  eax,al
  405a49:	mov    ebx,eax
  405a4b:	and    ebx,0xf
  405a4e:	mov    DWORD PTR [rbp-0x88],ebx
  405a54:	mov    rax,QWORD PTR [rbp-0x40]
  405a58:	add    rax,0x3
  405a5c:	movzx  eax,BYTE PTR [rax]
  405a5f:	shr    al,0x4
  405a62:	movzx  esi,al
  405a65:	mov    DWORD PTR [rbp-0x8c],esi
  405a6b:	mov    rax,QWORD PTR [rbp-0x40]
  405a6f:	add    rax,0x3
  405a73:	movzx  eax,BYTE PTR [rax]
  405a76:	movzx  eax,al
  405a79:	mov    ecx,eax
  405a7b:	and    ecx,0xf
  405a7e:	mov    DWORD PTR [rbp-0x90],ecx
  405a84:	mov    rax,QWORD PTR [rbp-0x40]
  405a88:	add    rax,0x4
  405a8c:	movzx  eax,BYTE PTR [rax]
  405a8f:	shr    al,0x4
  405a92:	movzx  edi,al
  405a95:	mov    DWORD PTR [rbp-0x94],edi
  405a9b:	mov    rax,QWORD PTR [rbp-0x40]
  405a9f:	add    rax,0x4
  405aa3:	movzx  eax,BYTE PTR [rax]
  405aa6:	movzx  eax,al
  405aa9:	mov    esi,eax
  405aab:	and    esi,0xf
  405aae:	mov    DWORD PTR [rbp-0x98],esi
  405ab4:	mov    rax,QWORD PTR [rbp-0x40]
  405ab8:	add    rax,0x5
  405abc:	movzx  eax,BYTE PTR [rax]
  405abf:	shr    al,0x4
  405ac2:	movzx  edx,al
  405ac5:	mov    DWORD PTR [rbp-0x9c],edx
  405acb:	mov    rax,QWORD PTR [rbp-0x40]
  405acf:	add    rax,0x5
  405ad3:	movzx  eax,BYTE PTR [rax]
  405ad6:	movzx  eax,al
  405ad9:	mov    edi,eax
  405adb:	and    edi,0xf
  405ade:	mov    DWORD PTR [rbp-0xa0],edi
  405ae4:	mov    rax,QWORD PTR [rbp-0x40]
  405ae8:	add    rax,0x6
  405aec:	movzx  eax,BYTE PTR [rax]
  405aef:	shr    al,0x4
  405af2:	movzx  r15d,al
  405af6:	mov    DWORD PTR [rbp-0xa4],r15d
  405afd:	mov    rax,QWORD PTR [rbp-0x40]
  405b01:	add    rax,0x6
  405b05:	movzx  eax,BYTE PTR [rax]
  405b08:	movzx  eax,al
  405b0b:	mov    edx,eax
  405b0d:	and    edx,0xf
  405b10:	mov    DWORD PTR [rbp-0xa8],edx
  405b16:	mov    rax,QWORD PTR [rbp-0x40]
  405b1a:	add    rax,0x7
  405b1e:	movzx  eax,BYTE PTR [rax]
  405b21:	shr    al,0x4
  405b24:	movzx  r11d,al
  405b28:	mov    DWORD PTR [rbp-0xac],r11d
  405b2f:	mov    rax,QWORD PTR [rbp-0x40]
  405b33:	add    rax,0x7
  405b37:	movzx  eax,BYTE PTR [rax]
  405b3a:	movzx  eax,al
  405b3d:	mov    r10d,eax
  405b40:	and    r10d,0xf
  405b44:	mov    DWORD PTR [rbp-0xb0],r10d
  405b4b:	mov    rax,QWORD PTR [rbp-0x40]
  405b4f:	add    rax,0x8
  405b53:	movzx  eax,BYTE PTR [rax]
  405b56:	shr    al,0x4
  405b59:	movzx  r9d,al
  405b5d:	mov    DWORD PTR [rbp-0xb4],r9d
  405b64:	mov    rax,QWORD PTR [rbp-0x40]
  405b68:	add    rax,0x8
  405b6c:	movzx  eax,BYTE PTR [rax]
  405b6f:	movzx  eax,al
  405b72:	mov    r11d,eax
  405b75:	and    r11d,0xf
  405b79:	mov    DWORD PTR [rbp-0xb8],r11d
  405b80:	mov    rax,QWORD PTR [rbp-0x40]
  405b84:	add    rax,0x9
  405b88:	movzx  eax,BYTE PTR [rax]
  405b8b:	shr    al,0x4
  405b8e:	movzx  r14d,al
  405b92:	mov    DWORD PTR [rbp-0xbc],r14d
  405b99:	mov    rax,QWORD PTR [rbp-0x40]
  405b9d:	add    rax,0x9
  405ba1:	movzx  eax,BYTE PTR [rax]
  405ba4:	movzx  eax,al
  405ba7:	mov    r14d,eax
  405baa:	and    r14d,0xf
  405bae:	mov    DWORD PTR [rbp-0xc0],r14d
  405bb5:	mov    rax,QWORD PTR [rbp-0x40]
  405bb9:	add    rax,0xa
  405bbd:	movzx  eax,BYTE PTR [rax]
  405bc0:	shr    al,0x4
  405bc3:	movzx  r15d,al
  405bc7:	mov    rax,QWORD PTR [rbp-0x40]
  405bcb:	add    rax,0xa
  405bcf:	movzx  eax,BYTE PTR [rax]
  405bd2:	movzx  eax,al
  405bd5:	mov    r8d,eax
  405bd8:	and    r8d,0xf
  405bdc:	mov    DWORD PTR [rbp-0xc4],r8d
  405be3:	mov    rax,QWORD PTR [rbp-0x40]
  405be7:	add    rax,0xb
  405beb:	movzx  eax,BYTE PTR [rax]
  405bee:	shr    al,0x4
  405bf1:	movzx  r13d,al
  405bf5:	mov    rax,QWORD PTR [rbp-0x40]
  405bf9:	add    rax,0xb
  405bfd:	movzx  eax,BYTE PTR [rax]
  405c00:	movzx  eax,al
  405c03:	mov    r14d,eax
  405c06:	and    r14d,0xf
  405c0a:	mov    rax,QWORD PTR [rbp-0x40]
  405c0e:	add    rax,0xc
  405c12:	movzx  eax,BYTE PTR [rax]
  405c15:	shr    al,0x4
  405c18:	movzx  r11d,al
  405c1c:	mov    rax,QWORD PTR [rbp-0x40]
  405c20:	add    rax,0xc
  405c24:	movzx  eax,BYTE PTR [rax]
  405c27:	movzx  eax,al
  405c2a:	mov    ebx,eax
  405c2c:	and    ebx,0xf
  405c2f:	mov    rax,QWORD PTR [rbp-0x40]
  405c33:	add    rax,0xd
  405c37:	movzx  eax,BYTE PTR [rax]
  405c3a:	shr    al,0x4
  405c3d:	movzx  r9d,al
  405c41:	mov    rax,QWORD PTR [rbp-0x40]
  405c45:	add    rax,0xd
  405c49:	movzx  eax,BYTE PTR [rax]
  405c4c:	movzx  eax,al
  405c4f:	mov    r10d,eax
  405c52:	and    r10d,0xf
  405c56:	mov    rax,QWORD PTR [rbp-0x40]
  405c5a:	add    rax,0xe
  405c5e:	movzx  eax,BYTE PTR [rax]
  405c61:	shr    al,0x4
  405c64:	movzx  edi,al
  405c67:	mov    rax,QWORD PTR [rbp-0x40]
  405c6b:	add    rax,0xe
  405c6f:	movzx  eax,BYTE PTR [rax]
  405c72:	movzx  eax,al
  405c75:	mov    r8d,eax
  405c78:	and    r8d,0xf
  405c7c:	mov    rax,QWORD PTR [rbp-0x40]
  405c80:	add    rax,0xf
  405c84:	movzx  eax,BYTE PTR [rax]
  405c87:	shr    al,0x4
  405c8a:	movzx  ecx,al
  405c8d:	mov    rax,QWORD PTR [rbp-0x40]
  405c91:	add    rax,0xf
  405c95:	movzx  eax,BYTE PTR [rax]
  405c98:	movzx  eax,al
  405c9b:	mov    edx,eax
  405c9d:	and    edx,0xf
  405ca0:	mov    rsi,QWORD PTR [rbp-0x60]
  405ca4:	mov    rax,QWORD PTR [rbp-0x58]
  405ca8:	push   r12
  405caa:	mov    r12d,DWORD PTR [rbp-0x74]
  405cae:	push   r12
  405cb0:	mov    r12d,DWORD PTR [rbp-0x78]
  405cb4:	push   r12
  405cb6:	mov    r12d,DWORD PTR [rbp-0x7c]
  405cba:	push   r12
  405cbc:	mov    r12d,DWORD PTR [rbp-0x80]
  405cc0:	push   r12
  405cc2:	mov    r12d,DWORD PTR [rbp-0x84]
  405cc9:	push   r12
  405ccb:	mov    r12d,DWORD PTR [rbp-0x88]
  405cd2:	push   r12
  405cd4:	mov    r12d,DWORD PTR [rbp-0x8c]
  405cdb:	push   r12
  405cdd:	mov    r12d,DWORD PTR [rbp-0x90]
  405ce4:	push   r12
  405ce6:	mov    r12d,DWORD PTR [rbp-0x94]
  405ced:	push   r12
  405cef:	mov    r12d,DWORD PTR [rbp-0x98]
  405cf6:	push   r12
  405cf8:	mov    r12d,DWORD PTR [rbp-0x9c]
  405cff:	push   r12
  405d01:	mov    r12d,DWORD PTR [rbp-0xa0]
  405d08:	push   r12
  405d0a:	mov    r12d,DWORD PTR [rbp-0xa4]
  405d11:	push   r12
  405d13:	mov    r12d,DWORD PTR [rbp-0xa8]
  405d1a:	push   r12
  405d1c:	mov    r12d,DWORD PTR [rbp-0xac]
  405d23:	push   r12
  405d25:	mov    r12d,DWORD PTR [rbp-0xb0]
  405d2c:	push   r12
  405d2e:	mov    r12d,DWORD PTR [rbp-0xb4]
  405d35:	push   r12
  405d37:	mov    r12d,DWORD PTR [rbp-0xb8]
  405d3e:	push   r12
  405d40:	mov    r12d,DWORD PTR [rbp-0xbc]
  405d47:	push   r12
  405d49:	mov    r12d,DWORD PTR [rbp-0xc0]
  405d50:	push   r12
  405d52:	push   r15
  405d54:	mov    r15d,DWORD PTR [rbp-0xc4]
  405d5b:	push   r15
  405d5d:	push   r13
  405d5f:	push   r14
  405d61:	push   r11
  405d63:	push   rbx
  405d64:	push   r9
  405d66:	push   r10
  405d68:	push   rdi
  405d69:	mov    r9d,r8d
  405d6c:	mov    r8d,ecx
  405d6f:	mov    ecx,edx
  405d71:	lea    rdx,[rip+0x9908]        # 40f680 <rb_strcasecmp@plt+0xd110>
  405d78:	mov    rdi,rax
  405d7b:	mov    eax,0x0
  405d80:	call   402080 <snprintf@plt>
  405d85:	add    rsp,0xf0
  405d8c:	nop
  405d8d:	lea    rsp,[rbp-0x28]
  405d91:	pop    rbx
  405d92:	pop    r12
  405d94:	pop    r13
  405d96:	pop    r14
  405d98:	pop    r15
  405d9a:	pop    rbp
  405d9b:	ret    
  405d9c:	push   rbp
  405d9d:	mov    rbp,rsp
  405da0:	sub    rsp,0x20
  405da4:	mov    QWORD PTR [rbp-0x8],rdi
  405da8:	mov    QWORD PTR [rbp-0x10],rsi
  405dac:	mov    QWORD PTR [rbp-0x18],rdx
  405db0:	cmp    QWORD PTR [rbp-0x18],0x0
  405db5:	jne    405dfe <rb_strcasecmp@plt+0x388e>
  405db7:	mov    rax,QWORD PTR [rbp-0x8]
  405dbb:	mov    rdi,rax
  405dbe:	call   405380 <rb_strcasecmp@plt+0x2e10>
  405dc3:	mov    QWORD PTR [rbp-0x18],rax
  405dc7:	mov    rax,QWORD PTR [rbp-0x18]
  405dcb:	lea    rcx,[rax+0x148]
  405dd2:	mov    rax,QWORD PTR [rbp-0x10]
  405dd6:	mov    edx,0x80
  405ddb:	mov    rsi,rax
  405dde:	mov    rdi,rcx
  405de1:	call   402560 <memcpy@plt>
  405de6:	mov    edi,0x100
  405deb:	call   404e0f <rb_strcasecmp@plt+0x289f>
  405df0:	mov    rdx,rax
  405df3:	mov    rax,QWORD PTR [rbp-0x18]
  405df7:	mov    QWORD PTR [rax+0x1c8],rdx
  405dfe:	mov    rax,QWORD PTR [rbp-0x18]
  405e02:	lea    rdi,[rax+0x29]
  405e06:	mov    rax,QWORD PTR [rbp-0x10]
  405e0a:	mov    ecx,0x0
  405e0f:	mov    rdx,rax
  405e12:	mov    esi,0x100
  405e17:	call   4058ea <rb_strcasecmp@plt+0x337a>
  405e1c:	mov    rax,QWORD PTR [rbp-0x18]
  405e20:	mov    BYTE PTR [rax+0x28],0xc
  405e24:	mov    rax,QWORD PTR [rbp-0x18]
  405e28:	mov    rdi,rax
  405e2b:	call   405e33 <rb_strcasecmp@plt+0x38c3>
  405e30:	nop
  405e31:	leave  
  405e32:	ret    
  405e33:	push   rbp
  405e34:	mov    rbp,rsp
  405e37:	sub    rsp,0x430
  405e3e:	mov    QWORD PTR [rbp-0x428],rdi
  405e45:	mov    rax,QWORD PTR fs:0x28
  405e4e:	mov    QWORD PTR [rbp-0x8],rax
  405e52:	xor    eax,eax
  405e54:	mov    DWORD PTR [rbp-0x420],0x0
  405e5e:	lea    rax,[rbp-0x410]
  405e65:	mov    edx,0x400
  405e6a:	mov    esi,0x0
  405e6f:	mov    rdi,rax
  405e72:	call   402040 <memset@plt>
  405e77:	mov    rax,QWORD PTR [rbp-0x428]
  405e7e:	movzx  eax,BYTE PTR [rax+0x28]
  405e82:	movsx  eax,al
  405e85:	mov    rdx,QWORD PTR [rbp-0x428]
  405e8c:	lea    rdi,[rdx+0x29]
  405e90:	lea    rdx,[rbp-0x410]
  405e97:	mov    r8d,0x400
  405e9d:	mov    rcx,rdx
  405ea0:	mov    edx,eax
  405ea2:	mov    esi,0x1
  405ea7:	call   408a6a <rb_strcasecmp@plt+0x64fa>
  405eac:	mov    DWORD PTR [rbp-0x420],eax
  405eb2:	cmp    DWORD PTR [rbp-0x420],0x0
  405eb9:	jle    405f4d <rb_strcasecmp@plt+0x39dd>
  405ebf:	lea    rax,[rbp-0x410]
  405ec6:	mov    QWORD PTR [rbp-0x418],rax
  405ecd:	mov    rax,QWORD PTR [rbp-0x428]
  405ed4:	mov    eax,DWORD PTR [rax+0x18]
  405ed7:	mov    edx,eax
  405ed9:	mov    rax,QWORD PTR [rbp-0x418]
  405ee0:	mov    WORD PTR [rax],dx
  405ee3:	mov    rax,QWORD PTR [rbp-0x428]
  405eea:	movzx  eax,BYTE PTR [rax+0x12a]
  405ef1:	add    eax,0x1
  405ef4:	mov    edx,eax
  405ef6:	mov    rax,QWORD PTR [rbp-0x428]
  405efd:	mov    BYTE PTR [rax+0x12a],dl
  405f03:	mov    rax,QWORD PTR [rbp-0x428]
  405f0a:	movzx  eax,BYTE PTR [rax+0x12a]
  405f11:	movsx  edx,al
  405f14:	mov    ecx,DWORD PTR [rbp-0x420]
  405f1a:	lea    rax,[rbp-0x410]
  405f21:	mov    esi,ecx
  405f23:	mov    rdi,rax
  405f26:	call   40544f <rb_strcasecmp@plt+0x2edf>
  405f2b:	mov    DWORD PTR [rbp-0x41c],eax
  405f31:	cmp    DWORD PTR [rbp-0x41c],0xffffffff
  405f38:	je     405f4d <rb_strcasecmp@plt+0x39dd>
  405f3a:	mov    rax,QWORD PTR [rbp-0x428]
  405f41:	mov    edx,DWORD PTR [rbp-0x41c]
  405f47:	mov    DWORD PTR [rax+0x140],edx
  405f4d:	nop
  405f4e:	mov    rax,QWORD PTR [rbp-0x8]
  405f52:	xor    rax,QWORD PTR fs:0x28
  405f5b:	je     405f62 <rb_strcasecmp@plt+0x39f2>
  405f5d:	call   402400 <__stack_chk_fail@plt>
  405f62:	leave  
  405f63:	ret    
  405f64:	push   rbp
  405f65:	mov    rbp,rsp
  405f68:	sub    rsp,0x10
  405f6c:	mov    QWORD PTR [rbp-0x8],rdi
  405f70:	mov    rax,QWORD PTR [rbp-0x8]
  405f74:	movzx  eax,BYTE PTR [rax+0x129]
  405f7b:	sub    eax,0x1
  405f7e:	mov    edx,eax
  405f80:	mov    rax,QWORD PTR [rbp-0x8]
  405f84:	mov    BYTE PTR [rax+0x129],dl
  405f8a:	mov    rax,QWORD PTR [rbp-0x8]
  405f8e:	movzx  eax,BYTE PTR [rax+0x129]
  405f95:	test   al,al
  405f97:	jg     405fce <rb_strcasecmp@plt+0x3a5e>
  405f99:	mov    rax,QWORD PTR [rbp-0x8]
  405f9d:	mov    rax,QWORD PTR [rax+0x1d0]
  405fa4:	mov    rax,QWORD PTR [rax+0x8]
  405fa8:	mov    rdx,QWORD PTR [rbp-0x8]
  405fac:	mov    rdx,QWORD PTR [rdx+0x1d0]
  405fb3:	mov    rdx,QWORD PTR [rdx]
  405fb6:	mov    esi,0x0
  405fbb:	mov    rdi,rdx
  405fbe:	call   rax
  405fc0:	mov    rax,QWORD PTR [rbp-0x8]
  405fc4:	mov    rdi,rax
  405fc7:	call   40533f <rb_strcasecmp@plt+0x2dcf>
  405fcc:	jmp    406033 <rb_strcasecmp@plt+0x3ac3>
  405fce:	mov    rax,QWORD PTR [rbp-0x8]
  405fd2:	movzx  eax,BYTE PTR [rax+0x28]
  405fd6:	movsx  eax,al
  405fd9:	cmp    eax,0xc
  405fdc:	je     405fea <rb_strcasecmp@plt+0x3a7a>
  405fde:	cmp    eax,0x1c
  405fe1:	je     40600b <rb_strcasecmp@plt+0x3a9b>
  405fe3:	cmp    eax,0x1
  405fe6:	je     40600b <rb_strcasecmp@plt+0x3a9b>
  405fe8:	jmp    406033 <rb_strcasecmp@plt+0x3ac3>
  405fea:	mov    rax,QWORD PTR [rbp-0x8]
  405fee:	lea    rcx,[rax+0x148]
  405ff5:	mov    rax,QWORD PTR [rbp-0x8]
  405ff9:	mov    rdx,rax
  405ffc:	mov    rsi,rcx
  405fff:	mov    edi,0x0
  406004:	call   405d9c <rb_strcasecmp@plt+0x382c>
  406009:	jmp    406033 <rb_strcasecmp@plt+0x3ac3>
  40600b:	mov    rax,QWORD PTR [rbp-0x8]
  40600f:	movzx  eax,BYTE PTR [rax+0x28]
  406013:	movsx  ecx,al
  406016:	mov    rax,QWORD PTR [rbp-0x8]
  40601a:	mov    rax,QWORD PTR [rax+0x1c8]
  406021:	mov    rdx,QWORD PTR [rbp-0x8]
  406025:	mov    rsi,rax
  406028:	mov    edi,0x0
  40602d:	call   40586b <rb_strcasecmp@plt+0x32fb>
  406032:	nop
  406033:	leave  
  406034:	ret    
  406035:	push   rbp
  406036:	mov    rbp,rsp
  406039:	sub    rsp,0x140
  406040:	mov    QWORD PTR [rbp-0x128],rdi
  406047:	mov    QWORD PTR [rbp-0x130],rsi
  40604e:	mov    QWORD PTR [rbp-0x138],rdx
  406055:	mov    QWORD PTR [rbp-0x140],rcx
  40605c:	mov    rax,QWORD PTR fs:0x28
  406065:	mov    QWORD PTR [rbp-0x8],rax
  406069:	xor    eax,eax
  40606b:	mov    rax,QWORD PTR [rbp-0x138]
  406072:	add    rax,0xc
  406076:	mov    QWORD PTR [rbp-0x118],rax
  40607d:	mov    rax,QWORD PTR [rbp-0x130]
  406084:	movzx  eax,WORD PTR [rax+0x4]
  406088:	cmp    ax,0x1
  40608c:	je     406095 <rb_strcasecmp@plt+0x3b25>
  40608e:	mov    eax,0x0
  406093:	jmp    406102 <rb_strcasecmp@plt+0x3b92>
  406095:	lea    rcx,[rbp-0x110]
  40609c:	mov    rdx,QWORD PTR [rbp-0x118]
  4060a3:	mov    rsi,QWORD PTR [rbp-0x140]
  4060aa:	mov    rax,QWORD PTR [rbp-0x138]
  4060b1:	mov    r8d,0x100
  4060b7:	mov    rdi,rax
  4060ba:	call   406fcb <rb_strcasecmp@plt+0x4a5b>
  4060bf:	mov    DWORD PTR [rbp-0x11c],eax
  4060c5:	cmp    DWORD PTR [rbp-0x11c],0x0
  4060cc:	jg     4060d5 <rb_strcasecmp@plt+0x3b65>
  4060ce:	mov    eax,0x0
  4060d3:	jmp    406102 <rb_strcasecmp@plt+0x3b92>
  4060d5:	mov    rax,QWORD PTR [rbp-0x128]
  4060dc:	lea    rdx,[rax+0x29]
  4060e0:	lea    rax,[rbp-0x110]
  4060e7:	mov    rsi,rdx
  4060ea:	mov    rdi,rax
  4060ed:	call   402570 <rb_strcasecmp@plt>
  4060f2:	test   eax,eax
  4060f4:	je     4060fd <rb_strcasecmp@plt+0x3b8d>
  4060f6:	mov    eax,0x0
  4060fb:	jmp    406102 <rb_strcasecmp@plt+0x3b92>
  4060fd:	mov    eax,0x1
  406102:	mov    rdi,QWORD PTR [rbp-0x8]
  406106:	xor    rdi,QWORD PTR fs:0x28
  40610f:	je     406116 <rb_strcasecmp@plt+0x3ba6>
  406111:	call   402400 <__stack_chk_fail@plt>
  406116:	leave  
  406117:	ret    
  406118:	push   rbp
  406119:	mov    rbp,rsp
  40611c:	sub    rsp,0x1c0
  406123:	mov    QWORD PTR [rbp-0x1a8],rdi
  40612a:	mov    QWORD PTR [rbp-0x1b0],rsi
  406131:	mov    QWORD PTR [rbp-0x1b8],rdx
  406138:	mov    QWORD PTR [rbp-0x1c0],rcx
  40613f:	mov    rax,QWORD PTR fs:0x28
  406148:	mov    QWORD PTR [rbp-0x8],rax
  40614c:	xor    eax,eax
  40614e:	mov    rax,QWORD PTR [rbp-0x1b8]
  406155:	add    rax,0xc
  406159:	mov    QWORD PTR [rbp-0x188],rax
  406160:	jmp    4061c0 <rb_strcasecmp@plt+0x3c50>
  406162:	mov    rdx,QWORD PTR [rbp-0x1c0]
  406169:	mov    rax,QWORD PTR [rbp-0x188]
  406170:	mov    rsi,rdx
  406173:	mov    rdi,rax
  406176:	call   40776d <rb_strcasecmp@plt+0x51fd>
  40617b:	mov    DWORD PTR [rbp-0x194],eax
  406181:	cmp    DWORD PTR [rbp-0x194],0x0
  406188:	jns    406194 <rb_strcasecmp@plt+0x3c24>
  40618a:	mov    eax,0x0
  40618f:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406194:	mov    eax,DWORD PTR [rbp-0x194]
  40619a:	cdqe   
  40619c:	add    rax,0x4
  4061a0:	add    QWORD PTR [rbp-0x188],rax
  4061a7:	mov    rax,QWORD PTR [rbp-0x1b0]
  4061ae:	movzx  eax,WORD PTR [rax+0x4]
  4061b2:	lea    edx,[rax-0x1]
  4061b5:	mov    rax,QWORD PTR [rbp-0x1b0]
  4061bc:	mov    WORD PTR [rax+0x4],dx
  4061c0:	mov    rax,QWORD PTR [rbp-0x1b0]
  4061c7:	movzx  eax,WORD PTR [rax+0x4]
  4061cb:	test   ax,ax
  4061ce:	jne    406162 <rb_strcasecmp@plt+0x3bf2>
  4061d0:	jmp    4064ce <rb_strcasecmp@plt+0x3f5e>
  4061d5:	mov    rax,QWORD PTR [rbp-0x1b0]
  4061dc:	movzx  eax,WORD PTR [rax+0x6]
  4061e0:	lea    edx,[rax-0x1]
  4061e3:	mov    rax,QWORD PTR [rbp-0x1b0]
  4061ea:	mov    WORD PTR [rax+0x6],dx
  4061ee:	lea    rcx,[rbp-0x170]
  4061f5:	mov    rdx,QWORD PTR [rbp-0x188]
  4061fc:	mov    rsi,QWORD PTR [rbp-0x1c0]
  406203:	mov    rax,QWORD PTR [rbp-0x1b8]
  40620a:	mov    r8d,0x163
  406210:	mov    rdi,rax
  406213:	call   406fcb <rb_strcasecmp@plt+0x4a5b>
  406218:	mov    DWORD PTR [rbp-0x194],eax
  40621e:	cmp    DWORD PTR [rbp-0x194],0x0
  406225:	jns    406231 <rb_strcasecmp@plt+0x3cc1>
  406227:	mov    eax,0x0
  40622c:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406231:	cmp    DWORD PTR [rbp-0x194],0x0
  406238:	jne    406244 <rb_strcasecmp@plt+0x3cd4>
  40623a:	mov    eax,0x0
  40623f:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406244:	mov    BYTE PTR [rbp-0x71],0x0
  406248:	mov    eax,DWORD PTR [rbp-0x194]
  40624e:	cdqe   
  406250:	add    QWORD PTR [rbp-0x188],rax
  406257:	mov    rax,QWORD PTR [rbp-0x188]
  40625e:	add    rax,0xa
  406262:	cmp    rax,QWORD PTR [rbp-0x1c0]
  406269:	jae    4064f4 <rb_strcasecmp@plt+0x3f84>
  40626f:	mov    rax,QWORD PTR [rbp-0x188]
  406276:	mov    rdi,rax
  406279:	call   40789c <rb_strcasecmp@plt+0x532c>
  40627e:	mov    DWORD PTR [rbp-0x190],eax
  406284:	add    QWORD PTR [rbp-0x188],0x2
  40628c:	mov    rax,QWORD PTR [rbp-0x188]
  406293:	mov    rdi,rax
  406296:	call   40789c <rb_strcasecmp@plt+0x532c>
  40629b:	add    QWORD PTR [rbp-0x188],0x2
  4062a3:	mov    rax,QWORD PTR [rbp-0x188]
  4062aa:	mov    rdi,rax
  4062ad:	call   4078d8 <rb_strcasecmp@plt+0x5368>
  4062b2:	mov    rdx,rax
  4062b5:	mov    rax,QWORD PTR [rbp-0x1a8]
  4062bc:	mov    QWORD PTR [rax+0x20],rdx
  4062c0:	add    QWORD PTR [rbp-0x188],0x4
  4062c8:	mov    rax,QWORD PTR [rbp-0x188]
  4062cf:	mov    rdi,rax
  4062d2:	call   40789c <rb_strcasecmp@plt+0x532c>
  4062d7:	mov    DWORD PTR [rbp-0x18c],eax
  4062dd:	add    QWORD PTR [rbp-0x188],0x2
  4062e5:	mov    eax,DWORD PTR [rbp-0x190]
  4062eb:	cmp    eax,0xc
  4062ee:	je     40642a <rb_strcasecmp@plt+0x3eba>
  4062f4:	cmp    eax,0x1c
  4062f7:	je     406393 <rb_strcasecmp@plt+0x3e23>
  4062fd:	cmp    eax,0x1
  406300:	jne    4064bf <rb_strcasecmp@plt+0x3f4f>
  406306:	mov    rax,QWORD PTR [rbp-0x1a8]
  40630d:	movzx  eax,BYTE PTR [rax+0x28]
  406311:	cmp    al,0x1
  406313:	je     40631f <rb_strcasecmp@plt+0x3daf>
  406315:	mov    eax,0x0
  40631a:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  40631f:	cmp    DWORD PTR [rbp-0x18c],0x4
  406326:	je     406332 <rb_strcasecmp@plt+0x3dc2>
  406328:	mov    eax,0x0
  40632d:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406332:	mov    rax,QWORD PTR [rbp-0x1a8]
  406339:	add    rax,0x148
  40633f:	mov    QWORD PTR [rbp-0x180],rax
  406346:	mov    rax,QWORD PTR [rbp-0x1a8]
  40634d:	lea    rdx,[rax+0x148]
  406354:	mov    rax,QWORD PTR [rbp-0x1a8]
  40635b:	add    rax,0x148
  406361:	movzx  eax,WORD PTR [rax]
  406364:	mov    WORD PTR [rdx],ax
  406367:	mov    rax,QWORD PTR [rbp-0x180]
  40636e:	mov    WORD PTR [rax],0x2
  406373:	mov    rax,QWORD PTR [rbp-0x180]
  40637a:	lea    rdx,[rax+0x4]
  40637e:	mov    rax,QWORD PTR [rbp-0x188]
  406385:	mov    eax,DWORD PTR [rax]
  406387:	mov    DWORD PTR [rdx],eax
  406389:	mov    eax,0x1
  40638e:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406393:	mov    rax,QWORD PTR [rbp-0x1a8]
  40639a:	movzx  eax,BYTE PTR [rax+0x28]
  40639e:	cmp    al,0x1c
  4063a0:	je     4063ac <rb_strcasecmp@plt+0x3e3c>
  4063a2:	mov    eax,0x0
  4063a7:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  4063ac:	cmp    DWORD PTR [rbp-0x18c],0x10
  4063b3:	je     4063bf <rb_strcasecmp@plt+0x3e4f>
  4063b5:	mov    eax,0x0
  4063ba:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  4063bf:	mov    rax,QWORD PTR [rbp-0x1a8]
  4063c6:	lea    rdx,[rax+0x148]
  4063cd:	mov    rax,QWORD PTR [rbp-0x1a8]
  4063d4:	add    rax,0x148
  4063da:	movzx  eax,WORD PTR [rax]
  4063dd:	mov    WORD PTR [rdx],ax
  4063e0:	mov    rax,QWORD PTR [rbp-0x1a8]
  4063e7:	add    rax,0x148
  4063ed:	mov    QWORD PTR [rbp-0x178],rax
  4063f4:	mov    rax,QWORD PTR [rbp-0x178]
  4063fb:	mov    WORD PTR [rax],0xa
  406400:	mov    rax,QWORD PTR [rbp-0x178]
  406407:	lea    rcx,[rax+0x8]
  40640b:	mov    rax,QWORD PTR [rbp-0x188]
  406412:	mov    rdx,QWORD PTR [rax+0x8]
  406416:	mov    rax,QWORD PTR [rax]
  406419:	mov    QWORD PTR [rcx],rax
  40641c:	mov    QWORD PTR [rcx+0x8],rdx
  406420:	mov    eax,0x1
  406425:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  40642a:	mov    rax,QWORD PTR [rbp-0x1a8]
  406431:	movzx  eax,BYTE PTR [rax+0x28]
  406435:	cmp    al,0xc
  406437:	je     406443 <rb_strcasecmp@plt+0x3ed3>
  406439:	mov    eax,0x0
  40643e:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406443:	lea    rcx,[rbp-0x170]
  40644a:	mov    rdx,QWORD PTR [rbp-0x188]
  406451:	mov    rsi,QWORD PTR [rbp-0x1c0]
  406458:	mov    rax,QWORD PTR [rbp-0x1b8]
  40645f:	mov    r8d,0x163
  406465:	mov    rdi,rax
  406468:	call   406fcb <rb_strcasecmp@plt+0x4a5b>
  40646d:	mov    DWORD PTR [rbp-0x194],eax
  406473:	cmp    DWORD PTR [rbp-0x194],0x0
  40647a:	jns    406483 <rb_strcasecmp@plt+0x3f13>
  40647c:	mov    eax,0x0
  406481:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406483:	cmp    DWORD PTR [rbp-0x194],0x0
  40648a:	jne    406493 <rb_strcasecmp@plt+0x3f23>
  40648c:	mov    eax,0x0
  406491:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  406493:	mov    rax,QWORD PTR [rbp-0x1a8]
  40649a:	mov    rax,QWORD PTR [rax+0x1c8]
  4064a1:	lea    rcx,[rbp-0x170]
  4064a8:	mov    edx,0x100
  4064ad:	mov    rsi,rcx
  4064b0:	mov    rdi,rax
  4064b3:	call   4021d0 <rb_strlcpy@plt>
  4064b8:	mov    eax,0x1
  4064bd:	jmp    4064fa <rb_strcasecmp@plt+0x3f8a>
  4064bf:	mov    eax,DWORD PTR [rbp-0x18c]
  4064c5:	cdqe   
  4064c7:	add    QWORD PTR [rbp-0x188],rax
  4064ce:	mov    rax,QWORD PTR [rbp-0x1b0]
  4064d5:	movzx  eax,WORD PTR [rax+0x6]
  4064d9:	test   ax,ax
  4064dc:	je     4064f5 <rb_strcasecmp@plt+0x3f85>
  4064de:	mov    rax,QWORD PTR [rbp-0x188]
  4064e5:	cmp    rax,QWORD PTR [rbp-0x1c0]
  4064ec:	jb     4061d5 <rb_strcasecmp@plt+0x3c65>
  4064f2:	jmp    4064f5 <rb_strcasecmp@plt+0x3f85>
  4064f4:	nop
  4064f5:	mov    eax,0x1
  4064fa:	mov    rsi,QWORD PTR [rbp-0x8]
  4064fe:	xor    rsi,QWORD PTR fs:0x28
  406507:	je     40650e <rb_strcasecmp@plt+0x3f9e>
  406509:	call   402400 <__stack_chk_fail@plt>
  40650e:	leave  
  40650f:	ret    
  406510:	push   rbp
  406511:	mov    rbp,rsp
  406514:	sub    rsp,0x4e0
  40651b:	mov    QWORD PTR [rbp-0x4d8],rdi
  406522:	mov    QWORD PTR [rbp-0x4e0],rsi
  406529:	mov    rax,QWORD PTR fs:0x28
  406532:	mov    QWORD PTR [rbp-0x8],rax
  406536:	xor    eax,eax
  406538:	mov    QWORD PTR [rbp-0x4b8],0x0
  406543:	mov    QWORD PTR [rbp-0x4b0],0x0
  40654e:	mov    DWORD PTR [rbp-0x4c8],0x80
  406558:	mov    rax,QWORD PTR [rbp-0x4d8]
  40655f:	mov    rdi,rax
  406562:	call   4020c0 <rb_get_fd@plt>
  406567:	mov    edi,eax
  406569:	lea    rcx,[rbp-0x4c8]
  406570:	lea    rdx,[rbp-0x4a0]
  406577:	lea    rax,[rbp-0x420]
  40657e:	mov    r9,rcx
  406581:	mov    r8,rdx
  406584:	mov    ecx,0x0
  406589:	mov    edx,0x40c
  40658e:	mov    rsi,rax
  406591:	call   4024c0 <recvfrom@plt>
  406596:	mov    DWORD PTR [rbp-0x4c4],eax
  40659c:	cmp    DWORD PTR [rbp-0x4c4],0x0
  4065a3:	je     4065ae <rb_strcasecmp@plt+0x403e>
  4065a5:	cmp    DWORD PTR [rbp-0x4c4],0xffffffff
  4065ac:	jne    4065b8 <rb_strcasecmp@plt+0x4048>
  4065ae:	mov    eax,0x0
  4065b3:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  4065b8:	cmp    DWORD PTR [rbp-0x4c4],0xc
  4065bf:	jg     4065cb <rb_strcasecmp@plt+0x405b>
  4065c1:	mov    eax,0x1
  4065c6:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  4065cb:	lea    rax,[rbp-0x420]
  4065d2:	mov    QWORD PTR [rbp-0x4a8],rax
  4065d9:	mov    rax,QWORD PTR [rbp-0x4a8]
  4065e0:	movzx  eax,WORD PTR [rax+0x6]
  4065e4:	movzx  eax,ax
  4065e7:	mov    edi,eax
  4065e9:	call   402270 <ntohs@plt>
  4065ee:	mov    edx,eax
  4065f0:	mov    rax,QWORD PTR [rbp-0x4a8]
  4065f7:	mov    WORD PTR [rax+0x6],dx
  4065fb:	mov    rax,QWORD PTR [rbp-0x4a8]
  406602:	movzx  eax,WORD PTR [rax+0x4]
  406606:	movzx  eax,ax
  406609:	mov    edi,eax
  40660b:	call   402270 <ntohs@plt>
  406610:	mov    edx,eax
  406612:	mov    rax,QWORD PTR [rbp-0x4a8]
  406619:	mov    WORD PTR [rax+0x4],dx
  40661d:	mov    rax,QWORD PTR [rbp-0x4a8]
  406624:	movzx  eax,WORD PTR [rax+0x8]
  406628:	movzx  eax,ax
  40662b:	mov    edi,eax
  40662d:	call   402270 <ntohs@plt>
  406632:	mov    edx,eax
  406634:	mov    rax,QWORD PTR [rbp-0x4a8]
  40663b:	mov    WORD PTR [rax+0x8],dx
  40663f:	mov    rax,QWORD PTR [rbp-0x4a8]
  406646:	movzx  eax,WORD PTR [rax+0xa]
  40664a:	movzx  eax,ax
  40664d:	mov    edi,eax
  40664f:	call   402270 <ntohs@plt>
  406654:	mov    edx,eax
  406656:	mov    rax,QWORD PTR [rbp-0x4a8]
  40665d:	mov    WORD PTR [rax+0xa],dx
  406661:	mov    rax,QWORD PTR [rbp-0x4a8]
  406668:	movzx  eax,WORD PTR [rax]
  40666b:	movzx  eax,ax
  40666e:	mov    edi,eax
  406670:	call   405683 <rb_strcasecmp@plt+0x3113>
  406675:	mov    QWORD PTR [rbp-0x4b8],rax
  40667c:	cmp    QWORD PTR [rbp-0x4b8],0x0
  406684:	jne    406690 <rb_strcasecmp@plt+0x4120>
  406686:	mov    eax,0x1
  40668b:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  406690:	lea    rax,[rbp-0x4a0]
  406697:	mov    rdi,rax
  40669a:	call   404ecc <rb_strcasecmp@plt+0x295c>
  40669f:	mov    DWORD PTR [rbp-0x4c0],eax
  4066a5:	cmp    DWORD PTR [rbp-0x4c0],0xffffffff
  4066ac:	jne    4066b8 <rb_strcasecmp@plt+0x4148>
  4066ae:	mov    eax,0x1
  4066b3:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  4066b8:	mov    rax,QWORD PTR [rbp-0x4b8]
  4066bf:	mov    eax,DWORD PTR [rax+0x140]
  4066c5:	cmp    eax,DWORD PTR [rbp-0x4c0]
  4066cb:	je     406704 <rb_strcasecmp@plt+0x4194>
  4066cd:	mov    eax,DWORD PTR [rbp-0x4c0]
  4066d3:	cdqe   
  4066d5:	lea    rdx,[rax*4+0x0]
  4066dd:	lea    rax,[rip+0x1397c]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4066e4:	mov    eax,DWORD PTR [rdx+rax*1]
  4066e7:	lea    ecx,[rax+0x3]
  4066ea:	mov    eax,DWORD PTR [rbp-0x4c0]
  4066f0:	cdqe   
  4066f2:	lea    rdx,[rax*4+0x0]
  4066fa:	lea    rax,[rip+0x1395f]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406701:	mov    DWORD PTR [rdx+rax*1],ecx
  406704:	mov    eax,DWORD PTR [rbp-0x4c4]
  40670a:	cdqe   
  40670c:	lea    rdx,[rbp-0x420]
  406713:	lea    rcx,[rdx+rax*1]
  406717:	lea    rdx,[rbp-0x420]
  40671e:	mov    rsi,QWORD PTR [rbp-0x4a8]
  406725:	mov    rax,QWORD PTR [rbp-0x4b8]
  40672c:	mov    rdi,rax
  40672f:	call   406035 <rb_strcasecmp@plt+0x3ac5>
  406734:	test   eax,eax
  406736:	jne    406742 <rb_strcasecmp@plt+0x41d2>
  406738:	mov    eax,0x1
  40673d:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  406742:	mov    rax,QWORD PTR [rbp-0x4a8]
  406749:	movzx  eax,BYTE PTR [rax+0x3]
  40674d:	and    eax,0xf
  406750:	test   al,al
  406752:	jne    406768 <rb_strcasecmp@plt+0x41f8>
  406754:	mov    rax,QWORD PTR [rbp-0x4a8]
  40675b:	movzx  eax,WORD PTR [rax+0x6]
  40675f:	test   ax,ax
  406762:	jne    406882 <rb_strcasecmp@plt+0x4312>
  406768:	mov    rax,QWORD PTR [rbp-0x4a8]
  40676f:	movzx  eax,BYTE PTR [rax+0x3]
  406773:	and    eax,0xf
  406776:	cmp    al,0x2
  406778:	je     40679e <rb_strcasecmp@plt+0x422e>
  40677a:	mov    rax,QWORD PTR [rbp-0x4a8]
  406781:	movzx  eax,BYTE PTR [rax+0x3]
  406785:	and    eax,0xf
  406788:	cmp    al,0x4
  40678a:	je     40679e <rb_strcasecmp@plt+0x422e>
  40678c:	mov    rax,QWORD PTR [rbp-0x4a8]
  406793:	movzx  eax,BYTE PTR [rax+0x3]
  406797:	and    eax,0xf
  40679a:	cmp    al,0x5
  40679c:	jne    4067e9 <rb_strcasecmp@plt+0x4279>
  40679e:	mov    eax,DWORD PTR [rbp-0x4c0]
  4067a4:	cdqe   
  4067a6:	lea    rdx,[rax*4+0x0]
  4067ae:	lea    rax,[rip+0x138ab]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4067b5:	mov    eax,DWORD PTR [rdx+rax*1]
  4067b8:	lea    ecx,[rax+0x1]
  4067bb:	mov    eax,DWORD PTR [rbp-0x4c0]
  4067c1:	cdqe   
  4067c3:	lea    rdx,[rax*4+0x0]
  4067cb:	lea    rax,[rip+0x1388e]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  4067d2:	mov    DWORD PTR [rdx+rax*1],ecx
  4067d5:	mov    rax,QWORD PTR [rbp-0x4b8]
  4067dc:	mov    rdi,rax
  4067df:	call   405f64 <rb_strcasecmp@plt+0x39f4>
  4067e4:	jmp    406878 <rb_strcasecmp@plt+0x4308>
  4067e9:	mov    rax,QWORD PTR [rbp-0x4a8]
  4067f0:	movzx  eax,BYTE PTR [rax+0x3]
  4067f4:	and    eax,0xf
  4067f7:	cmp    al,0x3
  4067f9:	jne    40683c <rb_strcasecmp@plt+0x42cc>
  4067fb:	mov    eax,DWORD PTR [rbp-0x4c0]
  406801:	cdqe   
  406803:	lea    rdx,[rax*4+0x0]
  40680b:	lea    rax,[rip+0x1384e]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406812:	mov    eax,DWORD PTR [rdx+rax*1]
  406815:	lea    edx,[rax+0x3]
  406818:	test   eax,eax
  40681a:	cmovs  eax,edx
  40681d:	sar    eax,0x2
  406820:	mov    ecx,eax
  406822:	mov    eax,DWORD PTR [rbp-0x4c0]
  406828:	cdqe   
  40682a:	lea    rdx,[rax*4+0x0]
  406832:	lea    rax,[rip+0x13827]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406839:	mov    DWORD PTR [rdx+rax*1],ecx
  40683c:	mov    rax,QWORD PTR [rbp-0x4b8]
  406843:	mov    rax,QWORD PTR [rax+0x1d0]
  40684a:	mov    rax,QWORD PTR [rax+0x8]
  40684e:	mov    rdx,QWORD PTR [rbp-0x4b8]
  406855:	mov    rdx,QWORD PTR [rdx+0x1d0]
  40685c:	mov    rdx,QWORD PTR [rdx]
  40685f:	mov    esi,0x0
  406864:	mov    rdi,rdx
  406867:	call   rax
  406869:	mov    rax,QWORD PTR [rbp-0x4b8]
  406870:	mov    rdi,rax
  406873:	call   40533f <rb_strcasecmp@plt+0x2dcf>
  406878:	mov    eax,0x1
  40687d:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  406882:	mov    eax,DWORD PTR [rbp-0x4c4]
  406888:	cdqe   
  40688a:	lea    rdx,[rbp-0x420]
  406891:	lea    rcx,[rdx+rax*1]
  406895:	lea    rdx,[rbp-0x420]
  40689c:	mov    rsi,QWORD PTR [rbp-0x4a8]
  4068a3:	mov    rax,QWORD PTR [rbp-0x4b8]
  4068aa:	mov    rdi,rax
  4068ad:	call   406118 <rb_strcasecmp@plt+0x3ba8>
  4068b2:	mov    DWORD PTR [rbp-0x4bc],eax
  4068b8:	cmp    DWORD PTR [rbp-0x4bc],0x0
  4068bf:	je     406a65 <rb_strcasecmp@plt+0x44f5>
  4068c5:	mov    rax,QWORD PTR [rbp-0x4b8]
  4068cc:	movzx  eax,BYTE PTR [rax+0x28]
  4068d0:	cmp    al,0xc
  4068d2:	jne    4069bc <rb_strcasecmp@plt+0x444c>
  4068d8:	mov    rax,QWORD PTR [rbp-0x4b8]
  4068df:	mov    rax,QWORD PTR [rax+0x1c8]
  4068e6:	test   rax,rax
  4068e9:	jne    40693b <rb_strcasecmp@plt+0x43cb>
  4068eb:	mov    eax,DWORD PTR [rbp-0x4c0]
  4068f1:	cdqe   
  4068f3:	lea    rdx,[rax*4+0x0]
  4068fb:	lea    rax,[rip+0x1375e]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406902:	mov    eax,DWORD PTR [rdx+rax*1]
  406905:	lea    ecx,[rax+0x1]
  406908:	mov    eax,DWORD PTR [rbp-0x4c0]
  40690e:	cdqe   
  406910:	lea    rdx,[rax*4+0x0]
  406918:	lea    rax,[rip+0x13741]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  40691f:	mov    DWORD PTR [rdx+rax*1],ecx
  406922:	mov    rax,QWORD PTR [rbp-0x4b8]
  406929:	mov    rdi,rax
  40692c:	call   405f64 <rb_strcasecmp@plt+0x39f4>
  406931:	mov    eax,0x1
  406936:	jmp    406ab0 <rb_strcasecmp@plt+0x4540>
  40693b:	mov    rax,QWORD PTR [rbp-0x4b8]
  406942:	add    rax,0x148
  406948:	movzx  eax,WORD PTR [rax]
  40694b:	cmp    ax,0xa
  40694f:	jne    40697f <rb_strcasecmp@plt+0x440f>
  406951:	mov    rax,QWORD PTR [rbp-0x4b8]
  406958:	mov    rcx,QWORD PTR [rax+0x1d0]
  40695f:	mov    rax,QWORD PTR [rbp-0x4b8]
  406966:	mov    rax,QWORD PTR [rax+0x1c8]
  40696d:	mov    edx,0x1c
  406972:	mov    rsi,rcx
  406975:	mov    rdi,rax
  406978:	call   4057ea <rb_strcasecmp@plt+0x327a>
  40697d:	jmp    4069ab <rb_strcasecmp@plt+0x443b>
  40697f:	mov    rax,QWORD PTR [rbp-0x4b8]
  406986:	mov    rcx,QWORD PTR [rax+0x1d0]
  40698d:	mov    rax,QWORD PTR [rbp-0x4b8]
  406994:	mov    rax,QWORD PTR [rax+0x1c8]
  40699b:	mov    edx,0x1
  4069a0:	mov    rsi,rcx
  4069a3:	mov    rdi,rax
  4069a6:	call   4057ea <rb_strcasecmp@plt+0x327a>
  4069ab:	mov    rax,QWORD PTR [rbp-0x4b8]
  4069b2:	mov    rdi,rax
  4069b5:	call   40533f <rb_strcasecmp@plt+0x2dcf>
  4069ba:	jmp    406a22 <rb_strcasecmp@plt+0x44b2>
  4069bc:	mov    rax,QWORD PTR [rbp-0x4b8]
  4069c3:	mov    rdi,rax
  4069c6:	call   406b0e <rb_strcasecmp@plt+0x459e>
  4069cb:	mov    QWORD PTR [rbp-0x4b0],rax
  4069d2:	mov    rax,QWORD PTR [rbp-0x4b8]
  4069d9:	mov    rax,QWORD PTR [rax+0x1d0]
  4069e0:	mov    rax,QWORD PTR [rax+0x8]
  4069e4:	mov    rdx,QWORD PTR [rbp-0x4b8]
  4069eb:	mov    rdx,QWORD PTR [rdx+0x1d0]
  4069f2:	mov    rdx,QWORD PTR [rdx]
  4069f5:	mov    rcx,QWORD PTR [rbp-0x4b0]
  4069fc:	mov    rsi,rcx
  4069ff:	mov    rdi,rdx
  406a02:	call   rax
  406a04:	mov    rax,QWORD PTR [rbp-0x4b0]
  406a0b:	mov    rdi,rax
  406a0e:	call   404ea1 <rb_strcasecmp@plt+0x2931>
  406a13:	mov    rax,QWORD PTR [rbp-0x4b8]
  406a1a:	mov    rdi,rax
  406a1d:	call   40533f <rb_strcasecmp@plt+0x2dcf>
  406a22:	mov    eax,DWORD PTR [rbp-0x4c0]
  406a28:	cdqe   
  406a2a:	lea    rdx,[rax*4+0x0]
  406a32:	lea    rax,[rip+0x13627]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406a39:	mov    eax,DWORD PTR [rdx+rax*1]
  406a3c:	lea    edx,[rax+0x3]
  406a3f:	test   eax,eax
  406a41:	cmovs  eax,edx
  406a44:	sar    eax,0x2
  406a47:	mov    ecx,eax
  406a49:	mov    eax,DWORD PTR [rbp-0x4c0]
  406a4f:	cdqe   
  406a51:	lea    rdx,[rax*4+0x0]
  406a59:	lea    rax,[rip+0x13600]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406a60:	mov    DWORD PTR [rdx+rax*1],ecx
  406a63:	jmp    406aab <rb_strcasecmp@plt+0x453b>
  406a65:	mov    eax,DWORD PTR [rbp-0x4c0]
  406a6b:	cdqe   
  406a6d:	lea    rdx,[rax*4+0x0]
  406a75:	lea    rax,[rip+0x135e4]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406a7c:	mov    eax,DWORD PTR [rdx+rax*1]
  406a7f:	lea    ecx,[rax+0x1]
  406a82:	mov    eax,DWORD PTR [rbp-0x4c0]
  406a88:	cdqe   
  406a8a:	lea    rdx,[rax*4+0x0]
  406a92:	lea    rax,[rip+0x135c7]        # 41a060 <rb_strcasecmp@plt+0x17af0>
  406a99:	mov    DWORD PTR [rdx+rax*1],ecx
  406a9c:	mov    rax,QWORD PTR [rbp-0x4b8]
  406aa3:	mov    rdi,rax
  406aa6:	call   405f64 <rb_strcasecmp@plt+0x39f4>
  406aab:	mov    eax,0x1
  406ab0:	mov    rsi,QWORD PTR [rbp-0x8]
  406ab4:	xor    rsi,QWORD PTR fs:0x28
  406abd:	je     406ac4 <rb_strcasecmp@plt+0x4554>
  406abf:	call   402400 <__stack_chk_fail@plt>
  406ac4:	leave  
  406ac5:	ret    
  406ac6:	push   rbp
  406ac7:	mov    rbp,rsp
  406aca:	sub    rsp,0x10
  406ace:	mov    QWORD PTR [rbp-0x8],rdi
  406ad2:	mov    QWORD PTR [rbp-0x10],rsi
  406ad6:	nop
  406ad7:	mov    rdx,QWORD PTR [rbp-0x10]
  406adb:	mov    rax,QWORD PTR [rbp-0x8]
  406adf:	mov    rsi,rdx
  406ae2:	mov    rdi,rax
  406ae5:	call   406510 <rb_strcasecmp@plt+0x3fa0>
  406aea:	test   eax,eax
  406aec:	jne    406ad7 <rb_strcasecmp@plt+0x4567>
  406aee:	mov    rax,QWORD PTR [rbp-0x8]
  406af2:	mov    ecx,0x0
  406af7:	lea    rdx,[rip+0xffffffffffffffc8]        # 406ac6 <rb_strcasecmp@plt+0x4556>
  406afe:	mov    esi,0x1
  406b03:	mov    rdi,rax
  406b06:	call   4020b0 <rb_setselect@plt>
  406b0b:	nop
  406b0c:	leave  
  406b0d:	ret    
  406b0e:	push   rbp
  406b0f:	mov    rbp,rsp
  406b12:	sub    rsp,0x20
  406b16:	mov    QWORD PTR [rbp-0x18],rdi
  406b1a:	cmp    QWORD PTR [rbp-0x18],0x0
  406b1f:	setne  al
  406b22:	movzx  eax,al
  406b25:	test   rax,rax
  406b28:	jne    406b74 <rb_strcasecmp@plt+0x4604>
  406b2a:	lea    r8,[rip+0x8bb2]        # 40f6e3 <rb_strcasecmp@plt+0xd173>
  406b31:	lea    rcx,[rip+0x8c68]        # 40f7a0 <rb_strcasecmp@plt+0xd230>
  406b38:	mov    edx,0x36e
  406b3d:	lea    rsi,[rip+0x8b01]        # 40f645 <rb_strcasecmp@plt+0xd0d5>
  406b44:	lea    rdi,[rip+0x8ba5]        # 40f6f0 <rb_strcasecmp@plt+0xd180>
  406b4b:	mov    eax,0x0
  406b50:	call   402350 <rb_lib_log@plt>
  406b55:	lea    rcx,[rip+0x8c44]        # 40f7a0 <rb_strcasecmp@plt+0xd230>
  406b5c:	mov    edx,0x36e
  406b61:	lea    rsi,[rip+0x8add]        # 40f645 <rb_strcasecmp@plt+0xd0d5>
  406b68:	lea    rdi,[rip+0x8bb0]        # 40f71f <rb_strcasecmp@plt+0xd1af>
  406b6f:	call   4020f0 <__assert_fail@plt>
  406b74:	mov    edi,0x88
  406b79:	call   404e0f <rb_strcasecmp@plt+0x289f>
  406b7e:	mov    QWORD PTR [rbp-0x8],rax
  406b82:	mov    rax,QWORD PTR [rbp-0x18]
  406b86:	mov    rdx,QWORD PTR [rax+0x1c8]
  406b8d:	mov    rax,QWORD PTR [rbp-0x8]
  406b91:	mov    QWORD PTR [rax],rdx
  406b94:	mov    rax,QWORD PTR [rbp-0x18]
  406b98:	lea    rcx,[rax+0x148]
  406b9f:	mov    rax,QWORD PTR [rbp-0x8]
  406ba3:	add    rax,0x8
  406ba7:	mov    edx,0x80
  406bac:	mov    rsi,rcx
  406baf:	mov    rdi,rax
  406bb2:	call   402560 <memcpy@plt>
  406bb7:	mov    rax,QWORD PTR [rbp-0x8]
  406bbb:	leave  
  406bbc:	ret    
  406bbd:	push   rbp
  406bbe:	mov    rbp,rsp
  406bc1:	mov    rax,0x41a094
  406bc8:	mov    DWORD PTR [rax],0x0
  406bce:	call   406bf3 <rb_strcasecmp@plt+0x4683>
  406bd3:	mov    rax,0x41a094
  406bda:	mov    eax,DWORD PTR [rax]
  406bdc:	test   eax,eax
  406bde:	jne    406bec <rb_strcasecmp@plt+0x467c>
  406be0:	lea    rdi,[rip+0x8ce4]        # 40f8cb <rb_strcasecmp@plt+0xd35b>
  406be7:	call   406e89 <rb_strcasecmp@plt+0x4919>
  406bec:	mov    eax,0x0
  406bf1:	pop    rbp
  406bf2:	ret    
  406bf3:	push   rbp
  406bf4:	mov    rbp,rsp
  406bf7:	sub    rsp,0xb0
  406bfe:	mov    rax,QWORD PTR fs:0x28
  406c07:	mov    QWORD PTR [rbp-0x8],rax
  406c0b:	xor    eax,eax
  406c0d:	lea    rsi,[rip+0x8cc1]        # 40f8d5 <rb_strcasecmp@plt+0xd365>
  406c14:	lea    rdi,[rip+0x8cbc]        # 40f8d7 <rb_strcasecmp@plt+0xd367>
  406c1b:	call   402190 <fopen@plt>
  406c20:	mov    QWORD PTR [rbp-0xa8],rax
  406c27:	cmp    QWORD PTR [rbp-0xa8],0x0
  406c2f:	jne    406e3b <rb_strcasecmp@plt+0x48cb>
  406c35:	mov    eax,0xffffffff
  406c3a:	jmp    406e73 <rb_strcasecmp@plt+0x4903>
  406c3f:	lea    rax,[rbp-0x90]
  406c46:	lea    rsi,[rip+0x8c9b]        # 40f8e8 <rb_strcasecmp@plt+0xd378>
  406c4d:	mov    rdi,rax
  406c50:	call   402150 <strpbrk@plt>
  406c55:	mov    QWORD PTR [rbp-0xb0],rax
  406c5c:	cmp    QWORD PTR [rbp-0xb0],0x0
  406c64:	je     406c70 <rb_strcasecmp@plt+0x4700>
  406c66:	mov    rax,QWORD PTR [rbp-0xb0]
  406c6d:	mov    BYTE PTR [rax],0x0
  406c70:	lea    rax,[rbp-0x90]
  406c77:	mov    QWORD PTR [rbp-0xb0],rax
  406c7e:	jmp    406c88 <rb_strcasecmp@plt+0x4718>
  406c80:	add    QWORD PTR [rbp-0xb0],0x1
  406c88:	call   402240 <__ctype_b_loc@plt>
  406c8d:	mov    rdx,QWORD PTR [rax]
  406c90:	mov    rax,QWORD PTR [rbp-0xb0]
  406c97:	movzx  eax,BYTE PTR [rax]
  406c9a:	movsx  rax,al
  406c9e:	add    rax,rax
  406ca1:	add    rax,rdx
  406ca4:	movzx  eax,WORD PTR [rax]
  406ca7:	movzx  eax,ax
  406caa:	and    eax,0x2000
  406caf:	test   eax,eax
  406cb1:	jne    406c80 <rb_strcasecmp@plt+0x4710>
  406cb3:	mov    rax,QWORD PTR [rbp-0xb0]
  406cba:	movzx  eax,BYTE PTR [rax]
  406cbd:	test   al,al
  406cbf:	jne    406cc6 <rb_strcasecmp@plt+0x4756>
  406cc1:	jmp    406e3b <rb_strcasecmp@plt+0x48cb>
  406cc6:	mov    rax,QWORD PTR [rbp-0xb0]
  406ccd:	movzx  eax,BYTE PTR [rax]
  406cd0:	cmp    al,0x23
  406cd2:	je     406e3b <rb_strcasecmp@plt+0x48cb>
  406cd8:	mov    rax,QWORD PTR [rbp-0xb0]
  406cdf:	movzx  eax,BYTE PTR [rax]
  406ce2:	cmp    al,0x3b
  406ce4:	jne    406ceb <rb_strcasecmp@plt+0x477b>
  406ce6:	jmp    406e3b <rb_strcasecmp@plt+0x48cb>
  406ceb:	mov    rax,QWORD PTR [rbp-0xb0]
  406cf2:	mov    QWORD PTR [rbp-0xa0],rax
  406cf9:	jmp    406d03 <rb_strcasecmp@plt+0x4793>
  406cfb:	add    QWORD PTR [rbp-0xb0],0x1
  406d03:	call   402240 <__ctype_b_loc@plt>
  406d08:	mov    rdx,QWORD PTR [rax]
  406d0b:	mov    rax,QWORD PTR [rbp-0xb0]
  406d12:	movzx  eax,BYTE PTR [rax]
  406d15:	movsx  rax,al
  406d19:	add    rax,rax
  406d1c:	add    rax,rdx
  406d1f:	movzx  eax,WORD PTR [rax]
  406d22:	movzx  eax,ax
  406d25:	and    eax,0x2000
  406d2a:	test   eax,eax
  406d2c:	jne    406d3c <rb_strcasecmp@plt+0x47cc>
  406d2e:	mov    rax,QWORD PTR [rbp-0xb0]
  406d35:	movzx  eax,BYTE PTR [rax]
  406d38:	test   al,al
  406d3a:	jne    406cfb <rb_strcasecmp@plt+0x478b>
  406d3c:	mov    rax,QWORD PTR [rbp-0xb0]
  406d43:	movzx  eax,BYTE PTR [rax]
  406d46:	test   al,al
  406d48:	jne    406d4f <rb_strcasecmp@plt+0x47df>
  406d4a:	jmp    406e3b <rb_strcasecmp@plt+0x48cb>
  406d4f:	mov    rax,QWORD PTR [rbp-0xb0]
  406d56:	lea    rdx,[rax+0x1]
  406d5a:	mov    QWORD PTR [rbp-0xb0],rdx
  406d61:	mov    BYTE PTR [rax],0x0
  406d64:	jmp    406d6e <rb_strcasecmp@plt+0x47fe>
  406d66:	add    QWORD PTR [rbp-0xb0],0x1
  406d6e:	call   402240 <__ctype_b_loc@plt>
  406d73:	mov    rdx,QWORD PTR [rax]
  406d76:	mov    rax,QWORD PTR [rbp-0xb0]
  406d7d:	movzx  eax,BYTE PTR [rax]
  406d80:	movsx  rax,al
  406d84:	add    rax,rax
  406d87:	add    rax,rdx
  406d8a:	movzx  eax,WORD PTR [rax]
  406d8d:	movzx  eax,ax
  406d90:	and    eax,0x2000
  406d95:	test   eax,eax
  406d97:	jne    406d66 <rb_strcasecmp@plt+0x47f6>
  406d99:	mov    rax,QWORD PTR [rbp-0xb0]
  406da0:	mov    QWORD PTR [rbp-0x98],rax
  406da7:	mov    rax,QWORD PTR [rbp-0x98]
  406dae:	lea    rsi,[rip+0x8b36]        # 40f8eb <rb_strcasecmp@plt+0xd37b>
  406db5:	mov    rdi,rax
  406db8:	call   402150 <strpbrk@plt>
  406dbd:	mov    QWORD PTR [rbp-0xb0],rax
  406dc4:	cmp    QWORD PTR [rbp-0xb0],0x0
  406dcc:	je     406dd8 <rb_strcasecmp@plt+0x4868>
  406dce:	mov    rax,QWORD PTR [rbp-0xb0]
  406dd5:	mov    BYTE PTR [rax],0x0
  406dd8:	mov    rax,QWORD PTR [rbp-0xa0]
  406ddf:	lea    rsi,[rip+0x8b08]        # 40f8ee <rb_strcasecmp@plt+0xd37e>
  406de6:	mov    rdi,rax
  406de9:	call   402570 <rb_strcasecmp@plt>
  406dee:	test   eax,eax
  406df0:	jne    406e12 <rb_strcasecmp@plt+0x48a2>
  406df2:	mov    rax,QWORD PTR [rbp-0x98]
  406df9:	mov    edx,0x100
  406dfe:	mov    rsi,rax
  406e01:	mov    rax,0x41a2c0
  406e08:	mov    rdi,rax
  406e0b:	call   4021d0 <rb_strlcpy@plt>
  406e10:	jmp    406e3b <rb_strcasecmp@plt+0x48cb>
  406e12:	mov    rax,QWORD PTR [rbp-0xa0]
  406e19:	lea    rsi,[rip+0x8ad5]        # 40f8f5 <rb_strcasecmp@plt+0xd385>
  406e20:	mov    rdi,rax
  406e23:	call   402570 <rb_strcasecmp@plt>
  406e28:	test   eax,eax
  406e2a:	jne    406e3b <rb_strcasecmp@plt+0x48cb>
  406e2c:	mov    rax,QWORD PTR [rbp-0x98]
  406e33:	mov    rdi,rax
  406e36:	call   406e89 <rb_strcasecmp@plt+0x4919>
  406e3b:	mov    rdx,QWORD PTR [rbp-0xa8]
  406e42:	lea    rax,[rbp-0x90]
  406e49:	mov    esi,0x80
  406e4e:	mov    rdi,rax
  406e51:	call   4021c0 <fgets@plt>
  406e56:	test   rax,rax
  406e59:	jne    406c3f <rb_strcasecmp@plt+0x46cf>
  406e5f:	mov    rax,QWORD PTR [rbp-0xa8]
  406e66:	mov    rdi,rax
  406e69:	call   4024b0 <fclose@plt>
  406e6e:	mov    eax,0x0
  406e73:	mov    rcx,QWORD PTR [rbp-0x8]
  406e77:	xor    rcx,QWORD PTR fs:0x28
  406e80:	je     406e87 <rb_strcasecmp@plt+0x4917>
  406e82:	call   402400 <__stack_chk_fail@plt>
  406e87:	leave  
  406e88:	ret    
  406e89:	push   rbp
  406e8a:	mov    rbp,rsp
  406e8d:	sub    rsp,0x60
  406e91:	mov    QWORD PTR [rbp-0x58],rdi
  406e95:	mov    rax,QWORD PTR fs:0x28
  406e9e:	mov    QWORD PTR [rbp-0x8],rax
  406ea2:	xor    eax,eax
  406ea4:	mov    rax,0x41a094
  406eab:	mov    eax,DWORD PTR [rax]
  406ead:	cmp    eax,0x9
  406eb0:	jg     406fae <rb_strcasecmp@plt+0x4a3e>
  406eb6:	lea    rax,[rbp-0x40]
  406eba:	mov    edx,0x30
  406ebf:	mov    esi,0x0
  406ec4:	mov    rdi,rax
  406ec7:	call   402040 <memset@plt>
  406ecc:	mov    DWORD PTR [rbp-0x3c],0x0
  406ed3:	mov    DWORD PTR [rbp-0x38],0x2
  406eda:	mov    DWORD PTR [rbp-0x40],0x5
  406ee1:	lea    rcx,[rbp-0x48]
  406ee5:	lea    rdx,[rbp-0x40]
  406ee9:	mov    rax,QWORD PTR [rbp-0x58]
  406eed:	lea    rsi,[rip+0x89fa]        # 40f8ee <rb_strcasecmp@plt+0xd37e>
  406ef4:	mov    rdi,rax
  406ef7:	call   402100 <getaddrinfo@plt>
  406efc:	test   eax,eax
  406efe:	jne    406fb1 <rb_strcasecmp@plt+0x4a41>
  406f04:	mov    rax,QWORD PTR [rbp-0x48]
  406f08:	test   rax,rax
  406f0b:	je     406fb4 <rb_strcasecmp@plt+0x4a44>
  406f11:	mov    rax,QWORD PTR [rbp-0x48]
  406f15:	mov    eax,DWORD PTR [rax+0x10]
  406f18:	mov    esi,eax
  406f1a:	mov    rax,QWORD PTR [rbp-0x48]
  406f1e:	mov    rax,QWORD PTR [rax+0x18]
  406f22:	mov    rdx,0x41a094
  406f29:	mov    edx,DWORD PTR [rdx]
  406f2b:	movsxd rdx,edx
  406f2e:	mov    rcx,rdx
  406f31:	shl    rcx,0x7
  406f35:	mov    rdx,0x41a3c0
  406f3c:	add    rcx,rdx
  406f3f:	mov    rdx,rsi
  406f42:	mov    rsi,rax
  406f45:	mov    rdi,rcx
  406f48:	call   402560 <memcpy@plt>
  406f4d:	mov    rax,0x41a094
  406f54:	mov    eax,DWORD PTR [rax]
  406f56:	cdqe   
  406f58:	shl    rax,0x7
  406f5c:	mov    rdx,rax
  406f5f:	mov    rax,0x41a3c0
  406f66:	add    rdx,rax
  406f69:	mov    rax,0x41a094
  406f70:	mov    eax,DWORD PTR [rax]
  406f72:	cdqe   
  406f74:	shl    rax,0x7
  406f78:	mov    rcx,rax
  406f7b:	mov    rax,0x41a3c0
  406f82:	add    rax,rcx
  406f85:	movzx  eax,WORD PTR [rax]
  406f88:	mov    WORD PTR [rdx],ax
  406f8b:	mov    rax,0x41a094
  406f92:	mov    eax,DWORD PTR [rax]
  406f94:	lea    edx,[rax+0x1]
  406f97:	mov    rax,0x41a094
  406f9e:	mov    DWORD PTR [rax],edx
  406fa0:	mov    rax,QWORD PTR [rbp-0x48]
  406fa4:	mov    rdi,rax
  406fa7:	call   4021f0 <freeaddrinfo@plt>
  406fac:	jmp    406fb5 <rb_strcasecmp@plt+0x4a45>
  406fae:	nop
  406faf:	jmp    406fb5 <rb_strcasecmp@plt+0x4a45>
  406fb1:	nop
  406fb2:	jmp    406fb5 <rb_strcasecmp@plt+0x4a45>
  406fb4:	nop
  406fb5:	mov    rax,QWORD PTR [rbp-0x8]
  406fb9:	xor    rax,QWORD PTR fs:0x28
  406fc2:	je     406fc9 <rb_strcasecmp@plt+0x4a59>
  406fc4:	call   402400 <__stack_chk_fail@plt>
  406fc9:	leave  
  406fca:	ret    
  406fcb:	push   rbp
  406fcc:	mov    rbp,rsp
  406fcf:	sub    rsp,0x40
  406fd3:	mov    QWORD PTR [rbp-0x18],rdi
  406fd7:	mov    QWORD PTR [rbp-0x20],rsi
  406fdb:	mov    QWORD PTR [rbp-0x28],rdx
  406fdf:	mov    QWORD PTR [rbp-0x30],rcx
  406fe3:	mov    DWORD PTR [rbp-0x34],r8d
  406fe7:	mov    eax,DWORD PTR [rbp-0x34]
  406fea:	movsxd rdi,eax
  406fed:	mov    rcx,QWORD PTR [rbp-0x30]
  406ff1:	mov    rdx,QWORD PTR [rbp-0x28]
  406ff5:	mov    rsi,QWORD PTR [rbp-0x20]
  406ff9:	mov    rax,QWORD PTR [rbp-0x18]
  406ffd:	mov    r8,rdi
  407000:	mov    rdi,rax
  407003:	call   407028 <rb_strcasecmp@plt+0x4ab8>
  407008:	mov    DWORD PTR [rbp-0x4],eax
  40700b:	cmp    DWORD PTR [rbp-0x4],0x0
  40700f:	jle    407023 <rb_strcasecmp@plt+0x4ab3>
  407011:	mov    rax,QWORD PTR [rbp-0x30]
  407015:	movzx  eax,BYTE PTR [rax]
  407018:	cmp    al,0x2e
  40701a:	jne    407023 <rb_strcasecmp@plt+0x4ab3>
  40701c:	mov    rax,QWORD PTR [rbp-0x30]
  407020:	mov    BYTE PTR [rax],0x0
  407023:	mov    eax,DWORD PTR [rbp-0x4]
  407026:	leave  
  407027:	ret    
  407028:	push   rbp
  407029:	mov    rbp,rsp
  40702c:	sub    rsp,0x150
  407033:	mov    QWORD PTR [rbp-0x128],rdi
  40703a:	mov    QWORD PTR [rbp-0x130],rsi
  407041:	mov    QWORD PTR [rbp-0x138],rdx
  407048:	mov    QWORD PTR [rbp-0x140],rcx
  40704f:	mov    QWORD PTR [rbp-0x148],r8
  407056:	mov    rax,QWORD PTR fs:0x28
  40705f:	mov    QWORD PTR [rbp-0x8],rax
  407063:	xor    eax,eax
  407065:	lea    rcx,[rbp-0x110]
  40706c:	mov    rdx,QWORD PTR [rbp-0x138]
  407073:	mov    rsi,QWORD PTR [rbp-0x130]
  40707a:	mov    rax,QWORD PTR [rbp-0x128]
  407081:	mov    r8d,0xff
  407087:	mov    rdi,rax
  40708a:	call   4070ed <rb_strcasecmp@plt+0x4b7d>
  40708f:	mov    DWORD PTR [rbp-0x114],eax
  407095:	cmp    DWORD PTR [rbp-0x114],0xffffffff
  40709c:	jne    4070a5 <rb_strcasecmp@plt+0x4b35>
  40709e:	mov    eax,0xffffffff
  4070a3:	jmp    4070d7 <rb_strcasecmp@plt+0x4b67>
  4070a5:	mov    rdx,QWORD PTR [rbp-0x148]
  4070ac:	mov    rcx,QWORD PTR [rbp-0x140]
  4070b3:	lea    rax,[rbp-0x110]
  4070ba:	mov    rsi,rcx
  4070bd:	mov    rdi,rax
  4070c0:	call   407344 <rb_strcasecmp@plt+0x4dd4>
  4070c5:	cmp    eax,0xffffffff
  4070c8:	jne    4070d1 <rb_strcasecmp@plt+0x4b61>
  4070ca:	mov    eax,0xffffffff
  4070cf:	jmp    4070d7 <rb_strcasecmp@plt+0x4b67>
  4070d1:	mov    eax,DWORD PTR [rbp-0x114]
  4070d7:	mov    rdi,QWORD PTR [rbp-0x8]
  4070db:	xor    rdi,QWORD PTR fs:0x28
  4070e4:	je     4070eb <rb_strcasecmp@plt+0x4b7b>
  4070e6:	call   402400 <__stack_chk_fail@plt>
  4070eb:	leave  
  4070ec:	ret    
  4070ed:	push   rbp
  4070ee:	mov    rbp,rsp
  4070f1:	sub    rsp,0x60
  4070f5:	mov    QWORD PTR [rbp-0x38],rdi
  4070f9:	mov    QWORD PTR [rbp-0x40],rsi
  4070fd:	mov    QWORD PTR [rbp-0x48],rdx
  407101:	mov    QWORD PTR [rbp-0x50],rcx
  407105:	mov    QWORD PTR [rbp-0x58],r8
  407109:	mov    DWORD PTR [rbp-0x28],0xffffffff
  407110:	mov    DWORD PTR [rbp-0x24],0x0
  407117:	mov    rax,QWORD PTR [rbp-0x50]
  40711b:	mov    QWORD PTR [rbp-0x10],rax
  40711f:	mov    rax,QWORD PTR [rbp-0x48]
  407123:	mov    QWORD PTR [rbp-0x18],rax
  407127:	mov    rdx,QWORD PTR [rbp-0x50]
  40712b:	mov    rax,QWORD PTR [rbp-0x58]
  40712f:	add    rax,rdx
  407132:	mov    QWORD PTR [rbp-0x8],rax
  407136:	mov    rax,QWORD PTR [rbp-0x18]
  40713a:	cmp    rax,QWORD PTR [rbp-0x38]
  40713e:	jb     40714e <rb_strcasecmp@plt+0x4bde>
  407140:	mov    rax,QWORD PTR [rbp-0x18]
  407144:	cmp    rax,QWORD PTR [rbp-0x40]
  407148:	jb     407302 <rb_strcasecmp@plt+0x4d92>
  40714e:	call   4023c0 <__errno_location@plt>
  407153:	mov    DWORD PTR [rax],0x5a
  407159:	mov    eax,0xffffffff
  40715e:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  407163:	mov    eax,DWORD PTR [rbp-0x20]
  407166:	and    eax,0xc0
  40716b:	cmp    eax,0x40
  40716e:	je     407183 <rb_strcasecmp@plt+0x4c13>
  407170:	cmp    eax,0xc0
  407175:	je     407239 <rb_strcasecmp@plt+0x4cc9>
  40717b:	test   eax,eax
  40717d:	jne    4072f0 <rb_strcasecmp@plt+0x4d80>
  407183:	mov    rax,QWORD PTR [rbp-0x18]
  407187:	sub    rax,0x1
  40718b:	mov    rdi,rax
  40718e:	call   407a2f <rb_strcasecmp@plt+0x54bf>
  407193:	mov    DWORD PTR [rbp-0x1c],eax
  407196:	cmp    DWORD PTR [rbp-0x1c],0x0
  40719a:	jns    4071b1 <rb_strcasecmp@plt+0x4c41>
  40719c:	call   4023c0 <__errno_location@plt>
  4071a1:	mov    DWORD PTR [rax],0x5a
  4071a7:	mov    eax,0xffffffff
  4071ac:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  4071b1:	mov    eax,DWORD PTR [rbp-0x1c]
  4071b4:	cdqe   
  4071b6:	lea    rdx,[rax+0x1]
  4071ba:	mov    rax,QWORD PTR [rbp-0x10]
  4071be:	add    rax,rdx
  4071c1:	cmp    rax,QWORD PTR [rbp-0x8]
  4071c5:	jae    4071da <rb_strcasecmp@plt+0x4c6a>
  4071c7:	mov    eax,DWORD PTR [rbp-0x1c]
  4071ca:	movsxd rdx,eax
  4071cd:	mov    rax,QWORD PTR [rbp-0x18]
  4071d1:	add    rax,rdx
  4071d4:	cmp    rax,QWORD PTR [rbp-0x40]
  4071d8:	jb     4071ef <rb_strcasecmp@plt+0x4c7f>
  4071da:	call   4023c0 <__errno_location@plt>
  4071df:	mov    DWORD PTR [rax],0x5a
  4071e5:	mov    eax,0xffffffff
  4071ea:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  4071ef:	mov    eax,DWORD PTR [rbp-0x1c]
  4071f2:	add    eax,0x1
  4071f5:	add    DWORD PTR [rbp-0x24],eax
  4071f8:	mov    rax,QWORD PTR [rbp-0x10]
  4071fc:	lea    rdx,[rax+0x1]
  407200:	mov    QWORD PTR [rbp-0x10],rdx
  407204:	mov    edx,DWORD PTR [rbp-0x20]
  407207:	mov    BYTE PTR [rax],dl
  407209:	mov    eax,DWORD PTR [rbp-0x1c]
  40720c:	movsxd rdx,eax
  40720f:	mov    rcx,QWORD PTR [rbp-0x18]
  407213:	mov    rax,QWORD PTR [rbp-0x10]
  407217:	mov    rsi,rcx
  40721a:	mov    rdi,rax
  40721d:	call   402560 <memcpy@plt>
  407222:	mov    eax,DWORD PTR [rbp-0x1c]
  407225:	cdqe   
  407227:	add    QWORD PTR [rbp-0x10],rax
  40722b:	mov    eax,DWORD PTR [rbp-0x1c]
  40722e:	cdqe   
  407230:	add    QWORD PTR [rbp-0x18],rax
  407234:	jmp    407302 <rb_strcasecmp@plt+0x4d92>
  407239:	mov    rax,QWORD PTR [rbp-0x18]
  40723d:	cmp    rax,QWORD PTR [rbp-0x40]
  407241:	jb     407258 <rb_strcasecmp@plt+0x4ce8>
  407243:	call   4023c0 <__errno_location@plt>
  407248:	mov    DWORD PTR [rax],0x5a
  40724e:	mov    eax,0xffffffff
  407253:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  407258:	cmp    DWORD PTR [rbp-0x28],0x0
  40725c:	jns    407272 <rb_strcasecmp@plt+0x4d02>
  40725e:	mov    rdx,QWORD PTR [rbp-0x18]
  407262:	mov    rax,QWORD PTR [rbp-0x48]
  407266:	sub    rdx,rax
  407269:	mov    rax,rdx
  40726c:	add    eax,0x1
  40726f:	mov    DWORD PTR [rbp-0x28],eax
  407272:	mov    eax,DWORD PTR [rbp-0x20]
  407275:	shl    eax,0x8
  407278:	and    eax,0x3f00
  40727d:	mov    edx,eax
  40727f:	mov    rax,QWORD PTR [rbp-0x18]
  407283:	movzx  eax,BYTE PTR [rax]
  407286:	movzx  eax,al
  407289:	or     eax,edx
  40728b:	movsxd rdx,eax
  40728e:	mov    rax,QWORD PTR [rbp-0x38]
  407292:	add    rax,rdx
  407295:	mov    QWORD PTR [rbp-0x18],rax
  407299:	mov    rax,QWORD PTR [rbp-0x18]
  40729d:	cmp    rax,QWORD PTR [rbp-0x38]
  4072a1:	jb     4072ad <rb_strcasecmp@plt+0x4d3d>
  4072a3:	mov    rax,QWORD PTR [rbp-0x18]
  4072a7:	cmp    rax,QWORD PTR [rbp-0x40]
  4072ab:	jb     4072c2 <rb_strcasecmp@plt+0x4d52>
  4072ad:	call   4023c0 <__errno_location@plt>
  4072b2:	mov    DWORD PTR [rax],0x5a
  4072b8:	mov    eax,0xffffffff
  4072bd:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  4072c2:	add    DWORD PTR [rbp-0x24],0x2
  4072c6:	mov    eax,DWORD PTR [rbp-0x24]
  4072c9:	cdqe   
  4072cb:	mov    rcx,QWORD PTR [rbp-0x40]
  4072cf:	mov    rdx,QWORD PTR [rbp-0x38]
  4072d3:	sub    rcx,rdx
  4072d6:	mov    rdx,rcx
  4072d9:	cmp    rax,rdx
  4072dc:	jl     407302 <rb_strcasecmp@plt+0x4d92>
  4072de:	call   4023c0 <__errno_location@plt>
  4072e3:	mov    DWORD PTR [rax],0x5a
  4072e9:	mov    eax,0xffffffff
  4072ee:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  4072f0:	call   4023c0 <__errno_location@plt>
  4072f5:	mov    DWORD PTR [rax],0x5a
  4072fb:	mov    eax,0xffffffff
  407300:	jmp    407342 <rb_strcasecmp@plt+0x4dd2>
  407302:	mov    rax,QWORD PTR [rbp-0x18]
  407306:	lea    rdx,[rax+0x1]
  40730a:	mov    QWORD PTR [rbp-0x18],rdx
  40730e:	movzx  eax,BYTE PTR [rax]
  407311:	movzx  eax,al
  407314:	mov    DWORD PTR [rbp-0x20],eax
  407317:	cmp    DWORD PTR [rbp-0x20],0x0
  40731b:	jne    407163 <rb_strcasecmp@plt+0x4bf3>
  407321:	mov    rax,QWORD PTR [rbp-0x10]
  407325:	mov    BYTE PTR [rax],0x0
  407328:	cmp    DWORD PTR [rbp-0x28],0x0
  40732c:	jns    40733f <rb_strcasecmp@plt+0x4dcf>
  40732e:	mov    rdx,QWORD PTR [rbp-0x18]
  407332:	mov    rax,QWORD PTR [rbp-0x48]
  407336:	sub    rdx,rax
  407339:	mov    rax,rdx
  40733c:	mov    DWORD PTR [rbp-0x28],eax
  40733f:	mov    eax,DWORD PTR [rbp-0x28]
  407342:	leave  
  407343:	ret    
  407344:	push   rbp
  407345:	mov    rbp,rsp
  407348:	sub    rsp,0x50
  40734c:	mov    QWORD PTR [rbp-0x38],rdi
  407350:	mov    QWORD PTR [rbp-0x40],rsi
  407354:	mov    QWORD PTR [rbp-0x48],rdx
  407358:	mov    rax,QWORD PTR fs:0x28
  407361:	mov    QWORD PTR [rbp-0x8],rax
  407365:	xor    eax,eax
  407367:	mov    rax,QWORD PTR [rbp-0x38]
  40736b:	mov    QWORD PTR [rbp-0x20],rax
  40736f:	mov    rax,QWORD PTR [rbp-0x40]
  407373:	mov    QWORD PTR [rbp-0x18],rax
  407377:	mov    rdx,QWORD PTR [rbp-0x40]
  40737b:	mov    rax,QWORD PTR [rbp-0x48]
  40737f:	add    rax,rdx
  407382:	mov    QWORD PTR [rbp-0x10],rax
  407386:	jmp    40768c <rb_strcasecmp@plt+0x511c>
  40738b:	mov    eax,DWORD PTR [rbp-0x28]
  40738e:	and    eax,0xc0
  407393:	cmp    eax,0xc0
  407398:	jne    4073af <rb_strcasecmp@plt+0x4e3f>
  40739a:	call   4023c0 <__errno_location@plt>
  40739f:	mov    DWORD PTR [rax],0x5a
  4073a5:	mov    eax,0xffffffff
  4073aa:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  4073af:	mov    rax,QWORD PTR [rbp-0x18]
  4073b3:	cmp    rax,QWORD PTR [rbp-0x40]
  4073b7:	je     4073e7 <rb_strcasecmp@plt+0x4e77>
  4073b9:	mov    rax,QWORD PTR [rbp-0x18]
  4073bd:	cmp    rax,QWORD PTR [rbp-0x10]
  4073c1:	jb     4073d8 <rb_strcasecmp@plt+0x4e68>
  4073c3:	call   4023c0 <__errno_location@plt>
  4073c8:	mov    DWORD PTR [rax],0x5a
  4073ce:	mov    eax,0xffffffff
  4073d3:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  4073d8:	mov    rax,QWORD PTR [rbp-0x18]
  4073dc:	lea    rdx,[rax+0x1]
  4073e0:	mov    QWORD PTR [rbp-0x18],rdx
  4073e4:	mov    BYTE PTR [rax],0x2e
  4073e7:	mov    rax,QWORD PTR [rbp-0x20]
  4073eb:	sub    rax,0x1
  4073ef:	mov    rdi,rax
  4073f2:	call   407a2f <rb_strcasecmp@plt+0x54bf>
  4073f7:	mov    DWORD PTR [rbp-0x2c],eax
  4073fa:	cmp    DWORD PTR [rbp-0x2c],0x0
  4073fe:	jns    407415 <rb_strcasecmp@plt+0x4ea5>
  407400:	call   4023c0 <__errno_location@plt>
  407405:	mov    DWORD PTR [rax],0x5a
  40740b:	mov    eax,0xffffffff
  407410:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  407415:	mov    eax,DWORD PTR [rbp-0x2c]
  407418:	movsxd rdx,eax
  40741b:	mov    rax,QWORD PTR [rbp-0x18]
  40741f:	add    rax,rdx
  407422:	cmp    rax,QWORD PTR [rbp-0x10]
  407426:	jb     40743d <rb_strcasecmp@plt+0x4ecd>
  407428:	call   4023c0 <__errno_location@plt>
  40742d:	mov    DWORD PTR [rax],0x5a
  407433:	mov    eax,0xffffffff
  407438:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  40743d:	mov    eax,DWORD PTR [rbp-0x28]
  407440:	and    eax,0xc0
  407445:	cmp    eax,0x40
  407448:	jne    407682 <rb_strcasecmp@plt+0x5112>
  40744e:	cmp    DWORD PTR [rbp-0x28],0x41
  407452:	je     407469 <rb_strcasecmp@plt+0x4ef9>
  407454:	call   4023c0 <__errno_location@plt>
  407459:	mov    DWORD PTR [rax],0x16
  40745f:	mov    eax,0xffffffff
  407464:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  407469:	mov    rdx,QWORD PTR [rbp-0x10]
  40746d:	mov    rcx,QWORD PTR [rbp-0x18]
  407471:	lea    rax,[rbp-0x20]
  407475:	mov    rsi,rcx
  407478:	mov    rdi,rax
  40747b:	call   407ace <rb_strcasecmp@plt+0x555e>
  407480:	mov    DWORD PTR [rbp-0x24],eax
  407483:	cmp    DWORD PTR [rbp-0x24],0x0
  407487:	jns    40749e <rb_strcasecmp@plt+0x4f2e>
  407489:	call   4023c0 <__errno_location@plt>
  40748e:	mov    DWORD PTR [rax],0x5a
  407494:	mov    eax,0xffffffff
  407499:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  40749e:	mov    eax,DWORD PTR [rbp-0x24]
  4074a1:	cdqe   
  4074a3:	add    QWORD PTR [rbp-0x18],rax
  4074a7:	jmp    40768c <rb_strcasecmp@plt+0x511c>
  4074ac:	mov    rax,QWORD PTR [rbp-0x20]
  4074b0:	lea    rdx,[rax+0x1]
  4074b4:	mov    QWORD PTR [rbp-0x20],rdx
  4074b8:	movzx  eax,BYTE PTR [rax]
  4074bb:	mov    BYTE PTR [rbp-0x2d],al
  4074be:	movzx  eax,BYTE PTR [rbp-0x2d]
  4074c2:	mov    edi,eax
  4074c4:	call   4079ec <rb_strcasecmp@plt+0x547c>
  4074c9:	test   eax,eax
  4074cb:	je     407516 <rb_strcasecmp@plt+0x4fa6>
  4074cd:	mov    rax,QWORD PTR [rbp-0x18]
  4074d1:	add    rax,0x1
  4074d5:	cmp    rax,QWORD PTR [rbp-0x10]
  4074d9:	jb     4074f0 <rb_strcasecmp@plt+0x4f80>
  4074db:	call   4023c0 <__errno_location@plt>
  4074e0:	mov    DWORD PTR [rax],0x5a
  4074e6:	mov    eax,0xffffffff
  4074eb:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  4074f0:	mov    rax,QWORD PTR [rbp-0x18]
  4074f4:	lea    rdx,[rax+0x1]
  4074f8:	mov    QWORD PTR [rbp-0x18],rdx
  4074fc:	mov    BYTE PTR [rax],0x5c
  4074ff:	mov    rax,QWORD PTR [rbp-0x18]
  407503:	lea    rdx,[rax+0x1]
  407507:	mov    QWORD PTR [rbp-0x18],rdx
  40750b:	movzx  edx,BYTE PTR [rbp-0x2d]
  40750f:	mov    BYTE PTR [rax],dl
  407511:	jmp    40767e <rb_strcasecmp@plt+0x510e>
  407516:	movzx  eax,BYTE PTR [rbp-0x2d]
  40751a:	mov    edi,eax
  40751c:	call   407aad <rb_strcasecmp@plt+0x553d>
  407521:	test   eax,eax
  407523:	jne    40764d <rb_strcasecmp@plt+0x50dd>
  407529:	mov    rax,QWORD PTR [rbp-0x18]
  40752d:	add    rax,0x3
  407531:	cmp    rax,QWORD PTR [rbp-0x10]
  407535:	jb     40754c <rb_strcasecmp@plt+0x4fdc>
  407537:	call   4023c0 <__errno_location@plt>
  40753c:	mov    DWORD PTR [rax],0x5a
  407542:	mov    eax,0xffffffff
  407547:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  40754c:	mov    rax,QWORD PTR [rbp-0x18]
  407550:	lea    rdx,[rax+0x1]
  407554:	mov    QWORD PTR [rbp-0x18],rdx
  407558:	mov    BYTE PTR [rax],0x5c
  40755b:	mov    rcx,QWORD PTR [rbp-0x18]
  40755f:	lea    rax,[rcx+0x1]
  407563:	mov    QWORD PTR [rbp-0x18],rax
  407567:	movzx  eax,BYTE PTR [rbp-0x2d]
  40756b:	movzx  edx,al
  40756e:	mov    eax,edx
  407570:	shl    eax,0x2
  407573:	add    eax,edx
  407575:	shl    eax,0x3
  407578:	add    eax,edx
  40757a:	shr    ax,0x8
  40757e:	shr    al,0x4
  407581:	movzx  eax,al
  407584:	movsxd rdx,eax
  407587:	lea    rax,[rip+0x8332]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  40758e:	movzx  eax,BYTE PTR [rdx+rax*1]
  407592:	mov    BYTE PTR [rcx],al
  407594:	mov    rcx,QWORD PTR [rbp-0x18]
  407598:	lea    rax,[rcx+0x1]
  40759c:	mov    QWORD PTR [rbp-0x18],rax
  4075a0:	movzx  esi,BYTE PTR [rbp-0x2d]
  4075a4:	movzx  edx,sil
  4075a8:	mov    eax,edx
  4075aa:	shl    eax,0x2
  4075ad:	add    eax,edx
  4075af:	shl    eax,0x3
  4075b2:	add    eax,edx
  4075b4:	shr    ax,0x8
  4075b8:	shr    al,0x4
  4075bb:	mov    edx,0x64
  4075c0:	imul   eax,edx
  4075c3:	sub    esi,eax
  4075c5:	mov    eax,esi
  4075c7:	movzx  edx,al
  4075ca:	mov    eax,edx
  4075cc:	shl    eax,0x2
  4075cf:	add    eax,edx
  4075d1:	shl    eax,0x3
  4075d4:	add    eax,edx
  4075d6:	lea    edx,[rax*4+0x0]
  4075dd:	add    eax,edx
  4075df:	shr    ax,0x8
  4075e3:	shr    al,0x3
  4075e6:	movzx  eax,al
  4075e9:	movsxd rdx,eax
  4075ec:	lea    rax,[rip+0x82cd]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  4075f3:	movzx  eax,BYTE PTR [rdx+rax*1]
  4075f7:	mov    BYTE PTR [rcx],al
  4075f9:	mov    rcx,QWORD PTR [rbp-0x18]
  4075fd:	lea    rax,[rcx+0x1]
  407601:	mov    QWORD PTR [rbp-0x18],rax
  407605:	movzx  esi,BYTE PTR [rbp-0x2d]
  407609:	movzx  edx,sil
  40760d:	mov    eax,edx
  40760f:	shl    eax,0x2
  407612:	add    eax,edx
  407614:	shl    eax,0x3
  407617:	add    eax,edx
  407619:	lea    edx,[rax*4+0x0]
  407620:	add    eax,edx
  407622:	shr    ax,0x8
  407626:	mov    edx,eax
  407628:	shr    dl,0x3
  40762b:	mov    eax,edx
  40762d:	shl    eax,0x2
  407630:	add    eax,edx
  407632:	add    eax,eax
  407634:	sub    esi,eax
  407636:	mov    edx,esi
  407638:	movzx  eax,dl
  40763b:	movsxd rdx,eax
  40763e:	lea    rax,[rip+0x827b]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407645:	movzx  eax,BYTE PTR [rdx+rax*1]
  407649:	mov    BYTE PTR [rcx],al
  40764b:	jmp    40767e <rb_strcasecmp@plt+0x510e>
  40764d:	mov    rax,QWORD PTR [rbp-0x18]
  407651:	cmp    rax,QWORD PTR [rbp-0x10]
  407655:	jb     40766c <rb_strcasecmp@plt+0x50fc>
  407657:	call   4023c0 <__errno_location@plt>
  40765c:	mov    DWORD PTR [rax],0x5a
  407662:	mov    eax,0xffffffff
  407667:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  40766c:	mov    rax,QWORD PTR [rbp-0x18]
  407670:	lea    rdx,[rax+0x1]
  407674:	mov    QWORD PTR [rbp-0x18],rdx
  407678:	movzx  edx,BYTE PTR [rbp-0x2d]
  40767c:	mov    BYTE PTR [rax],dl
  40767e:	sub    DWORD PTR [rbp-0x2c],0x1
  407682:	cmp    DWORD PTR [rbp-0x2c],0x0
  407686:	jg     4074ac <rb_strcasecmp@plt+0x4f3c>
  40768c:	mov    rax,QWORD PTR [rbp-0x20]
  407690:	lea    rdx,[rax+0x1]
  407694:	mov    QWORD PTR [rbp-0x20],rdx
  407698:	movzx  eax,BYTE PTR [rax]
  40769b:	movsx  eax,al
  40769e:	mov    DWORD PTR [rbp-0x28],eax
  4076a1:	cmp    DWORD PTR [rbp-0x28],0x0
  4076a5:	jne    40738b <rb_strcasecmp@plt+0x4e1b>
  4076ab:	mov    rax,QWORD PTR [rbp-0x18]
  4076af:	cmp    rax,QWORD PTR [rbp-0x40]
  4076b3:	jne    4076e0 <rb_strcasecmp@plt+0x5170>
  4076b5:	mov    rax,QWORD PTR [rbp-0x18]
  4076b9:	cmp    rax,QWORD PTR [rbp-0x10]
  4076bd:	jb     4076d1 <rb_strcasecmp@plt+0x5161>
  4076bf:	call   4023c0 <__errno_location@plt>
  4076c4:	mov    DWORD PTR [rax],0x5a
  4076ca:	mov    eax,0xffffffff
  4076cf:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  4076d1:	mov    rax,QWORD PTR [rbp-0x18]
  4076d5:	lea    rdx,[rax+0x1]
  4076d9:	mov    QWORD PTR [rbp-0x18],rdx
  4076dd:	mov    BYTE PTR [rax],0x2e
  4076e0:	mov    rax,QWORD PTR [rbp-0x18]
  4076e4:	cmp    rax,QWORD PTR [rbp-0x10]
  4076e8:	jb     4076fc <rb_strcasecmp@plt+0x518c>
  4076ea:	call   4023c0 <__errno_location@plt>
  4076ef:	mov    DWORD PTR [rax],0x5a
  4076f5:	mov    eax,0xffffffff
  4076fa:	jmp    407719 <rb_strcasecmp@plt+0x51a9>
  4076fc:	mov    rax,QWORD PTR [rbp-0x18]
  407700:	lea    rdx,[rax+0x1]
  407704:	mov    QWORD PTR [rbp-0x18],rdx
  407708:	mov    BYTE PTR [rax],0x0
  40770b:	mov    rdx,QWORD PTR [rbp-0x18]
  40770f:	mov    rax,QWORD PTR [rbp-0x40]
  407713:	sub    rdx,rax
  407716:	mov    rax,rdx
  407719:	mov    rdi,QWORD PTR [rbp-0x8]
  40771d:	xor    rdi,QWORD PTR fs:0x28
  407726:	je     40772d <rb_strcasecmp@plt+0x51bd>
  407728:	call   402400 <__stack_chk_fail@plt>
  40772d:	leave  
  40772e:	ret    
  40772f:	push   rbp
  407730:	mov    rbp,rsp
  407733:	sub    rsp,0x30
  407737:	mov    QWORD PTR [rbp-0x8],rdi
  40773b:	mov    QWORD PTR [rbp-0x10],rsi
  40773f:	mov    DWORD PTR [rbp-0x14],edx
  407742:	mov    QWORD PTR [rbp-0x20],rcx
  407746:	mov    QWORD PTR [rbp-0x28],r8
  40774a:	mov    eax,DWORD PTR [rbp-0x14]
  40774d:	movsxd rdx,eax
  407750:	mov    rdi,QWORD PTR [rbp-0x28]
  407754:	mov    rcx,QWORD PTR [rbp-0x20]
  407758:	mov    rsi,QWORD PTR [rbp-0x10]
  40775c:	mov    rax,QWORD PTR [rbp-0x8]
  407760:	mov    r8,rdi
  407763:	mov    rdi,rax
  407766:	call   40846f <rb_strcasecmp@plt+0x5eff>
  40776b:	leave  
  40776c:	ret    
  40776d:	push   rbp
  40776e:	mov    rbp,rsp
  407771:	sub    rsp,0x20
  407775:	mov    QWORD PTR [rbp-0x18],rdi
  407779:	mov    QWORD PTR [rbp-0x20],rsi
  40777d:	mov    rax,QWORD PTR [rbp-0x18]
  407781:	mov    QWORD PTR [rbp-0x8],rax
  407785:	mov    rdx,QWORD PTR [rbp-0x20]
  407789:	lea    rax,[rbp-0x18]
  40778d:	mov    rsi,rdx
  407790:	mov    rdi,rax
  407793:	call   4077b7 <rb_strcasecmp@plt+0x5247>
  407798:	cmp    eax,0xffffffff
  40779b:	jne    4077a4 <rb_strcasecmp@plt+0x5234>
  40779d:	mov    eax,0xffffffff
  4077a2:	jmp    4077b5 <rb_strcasecmp@plt+0x5245>
  4077a4:	mov    rax,QWORD PTR [rbp-0x18]
  4077a8:	mov    rdx,rax
  4077ab:	mov    rax,QWORD PTR [rbp-0x8]
  4077af:	sub    rdx,rax
  4077b2:	mov    rax,rdx
  4077b5:	leave  
  4077b6:	ret    
  4077b7:	push   rbp
  4077b8:	mov    rbp,rsp
  4077bb:	sub    rsp,0x20
  4077bf:	mov    QWORD PTR [rbp-0x18],rdi
  4077c3:	mov    QWORD PTR [rbp-0x20],rsi
  4077c7:	mov    rax,QWORD PTR [rbp-0x18]
  4077cb:	mov    rax,QWORD PTR [rax]
  4077ce:	mov    QWORD PTR [rbp-0x8],rax
  4077d2:	jmp    407845 <rb_strcasecmp@plt+0x52d5>
  4077d4:	mov    eax,DWORD PTR [rbp-0x10]
  4077d7:	and    eax,0xc0
  4077dc:	cmp    eax,0x40
  4077df:	je     4077f5 <rb_strcasecmp@plt+0x5285>
  4077e1:	cmp    eax,0xc0
  4077e6:	je     40782b <rb_strcasecmp@plt+0x52bb>
  4077e8:	test   eax,eax
  4077ea:	jne    407833 <rb_strcasecmp@plt+0x52c3>
  4077ec:	mov    eax,DWORD PTR [rbp-0x10]
  4077ef:	add    QWORD PTR [rbp-0x8],rax
  4077f3:	jmp    407845 <rb_strcasecmp@plt+0x52d5>
  4077f5:	mov    rax,QWORD PTR [rbp-0x8]
  4077f9:	sub    rax,0x1
  4077fd:	mov    rdi,rax
  407800:	call   407a2f <rb_strcasecmp@plt+0x54bf>
  407805:	mov    DWORD PTR [rbp-0xc],eax
  407808:	cmp    DWORD PTR [rbp-0xc],0x0
  40780c:	jns    407820 <rb_strcasecmp@plt+0x52b0>
  40780e:	call   4023c0 <__errno_location@plt>
  407813:	mov    DWORD PTR [rax],0x5a
  407819:	mov    eax,0xffffffff
  40781e:	jmp    40789a <rb_strcasecmp@plt+0x532a>
  407820:	mov    eax,DWORD PTR [rbp-0xc]
  407823:	cdqe   
  407825:	add    QWORD PTR [rbp-0x8],rax
  407829:	jmp    407845 <rb_strcasecmp@plt+0x52d5>
  40782b:	add    QWORD PTR [rbp-0x8],0x1
  407830:	nop
  407831:	jmp    40786e <rb_strcasecmp@plt+0x52fe>
  407833:	call   4023c0 <__errno_location@plt>
  407838:	mov    DWORD PTR [rax],0x5a
  40783e:	mov    eax,0xffffffff
  407843:	jmp    40789a <rb_strcasecmp@plt+0x532a>
  407845:	mov    rax,QWORD PTR [rbp-0x8]
  407849:	cmp    rax,QWORD PTR [rbp-0x20]
  40784d:	jae    40786e <rb_strcasecmp@plt+0x52fe>
  40784f:	mov    rax,QWORD PTR [rbp-0x8]
  407853:	lea    rdx,[rax+0x1]
  407857:	mov    QWORD PTR [rbp-0x8],rdx
  40785b:	movzx  eax,BYTE PTR [rax]
  40785e:	movzx  eax,al
  407861:	mov    DWORD PTR [rbp-0x10],eax
  407864:	cmp    DWORD PTR [rbp-0x10],0x0
  407868:	jne    4077d4 <rb_strcasecmp@plt+0x5264>
  40786e:	mov    rax,QWORD PTR [rbp-0x8]
  407872:	cmp    rax,QWORD PTR [rbp-0x20]
  407876:	jbe    40788a <rb_strcasecmp@plt+0x531a>
  407878:	call   4023c0 <__errno_location@plt>
  40787d:	mov    DWORD PTR [rax],0x5a
  407883:	mov    eax,0xffffffff
  407888:	jmp    40789a <rb_strcasecmp@plt+0x532a>
  40788a:	mov    rax,QWORD PTR [rbp-0x18]
  40788e:	mov    rdx,QWORD PTR [rbp-0x8]
  407892:	mov    QWORD PTR [rax],rdx
  407895:	mov    eax,0x0
  40789a:	leave  
  40789b:	ret    
  40789c:	push   rbp
  40789d:	mov    rbp,rsp
  4078a0:	mov    QWORD PTR [rbp-0x18],rdi
  4078a4:	mov    rax,QWORD PTR [rbp-0x18]
  4078a8:	mov    QWORD PTR [rbp-0x8],rax
  4078ac:	mov    rax,QWORD PTR [rbp-0x8]
  4078b0:	movzx  eax,BYTE PTR [rax]
  4078b3:	movzx  eax,al
  4078b6:	shl    eax,0x8
  4078b9:	mov    edx,eax
  4078bb:	mov    rax,QWORD PTR [rbp-0x8]
  4078bf:	add    rax,0x1
  4078c3:	movzx  eax,BYTE PTR [rax]
  4078c6:	movzx  eax,al
  4078c9:	or     eax,edx
  4078cb:	mov    DWORD PTR [rbp-0xc],eax
  4078ce:	add    QWORD PTR [rbp-0x18],0x2
  4078d3:	mov    eax,DWORD PTR [rbp-0xc]
  4078d6:	pop    rbp
  4078d7:	ret    
  4078d8:	push   rbp
  4078d9:	mov    rbp,rsp
  4078dc:	mov    QWORD PTR [rbp-0x18],rdi
  4078e0:	mov    rax,QWORD PTR [rbp-0x18]
  4078e4:	mov    QWORD PTR [rbp-0x10],rax
  4078e8:	mov    rax,QWORD PTR [rbp-0x10]
  4078ec:	movzx  eax,BYTE PTR [rax]
  4078ef:	movzx  eax,al
  4078f2:	shl    eax,0x18
  4078f5:	mov    edx,eax
  4078f7:	mov    rax,QWORD PTR [rbp-0x10]
  4078fb:	add    rax,0x1
  4078ff:	movzx  eax,BYTE PTR [rax]
  407902:	movzx  eax,al
  407905:	shl    eax,0x10
  407908:	or     edx,eax
  40790a:	mov    rax,QWORD PTR [rbp-0x10]
  40790e:	add    rax,0x2
  407912:	movzx  eax,BYTE PTR [rax]
  407915:	movzx  eax,al
  407918:	shl    eax,0x8
  40791b:	or     edx,eax
  40791d:	mov    rax,QWORD PTR [rbp-0x10]
  407921:	add    rax,0x3
  407925:	movzx  eax,BYTE PTR [rax]
  407928:	movzx  eax,al
  40792b:	or     eax,edx
  40792d:	mov    eax,eax
  40792f:	mov    QWORD PTR [rbp-0x8],rax
  407933:	add    QWORD PTR [rbp-0x18],0x4
  407938:	mov    rax,QWORD PTR [rbp-0x8]
  40793c:	pop    rbp
  40793d:	ret    
  40793e:	push   rbp
  40793f:	mov    rbp,rsp
  407942:	mov    DWORD PTR [rbp-0x14],edi
  407945:	mov    QWORD PTR [rbp-0x20],rsi
  407949:	mov    eax,DWORD PTR [rbp-0x14]
  40794c:	mov    WORD PTR [rbp-0xa],ax
  407950:	mov    rax,QWORD PTR [rbp-0x20]
  407954:	mov    QWORD PTR [rbp-0x8],rax
  407958:	mov    rax,QWORD PTR [rbp-0x8]
  40795c:	lea    rdx,[rax+0x1]
  407960:	mov    QWORD PTR [rbp-0x8],rdx
  407964:	movzx  edx,WORD PTR [rbp-0xa]
  407968:	shr    dx,0x8
  40796c:	mov    BYTE PTR [rax],dl
  40796e:	movzx  eax,WORD PTR [rbp-0xa]
  407972:	mov    edx,eax
  407974:	mov    rax,QWORD PTR [rbp-0x8]
  407978:	mov    BYTE PTR [rax],dl
  40797a:	add    QWORD PTR [rbp-0x20],0x2
  40797f:	nop
  407980:	pop    rbp
  407981:	ret    
  407982:	push   rbp
  407983:	mov    rbp,rsp
  407986:	mov    QWORD PTR [rbp-0x18],rdi
  40798a:	mov    QWORD PTR [rbp-0x20],rsi
  40798e:	mov    rax,QWORD PTR [rbp-0x18]
  407992:	mov    DWORD PTR [rbp-0xc],eax
  407995:	mov    rax,QWORD PTR [rbp-0x20]
  407999:	mov    QWORD PTR [rbp-0x8],rax
  40799d:	mov    rax,QWORD PTR [rbp-0x8]
  4079a1:	lea    rdx,[rax+0x1]
  4079a5:	mov    QWORD PTR [rbp-0x8],rdx
  4079a9:	mov    edx,DWORD PTR [rbp-0xc]
  4079ac:	shr    edx,0x18
  4079af:	mov    BYTE PTR [rax],dl
  4079b1:	mov    rax,QWORD PTR [rbp-0x8]
  4079b5:	lea    rdx,[rax+0x1]
  4079b9:	mov    QWORD PTR [rbp-0x8],rdx
  4079bd:	mov    edx,DWORD PTR [rbp-0xc]
  4079c0:	shr    edx,0x10
  4079c3:	mov    BYTE PTR [rax],dl
  4079c5:	mov    rax,QWORD PTR [rbp-0x8]
  4079c9:	lea    rdx,[rax+0x1]
  4079cd:	mov    QWORD PTR [rbp-0x8],rdx
  4079d1:	mov    edx,DWORD PTR [rbp-0xc]
  4079d4:	shr    edx,0x8
  4079d7:	mov    BYTE PTR [rax],dl
  4079d9:	mov    eax,DWORD PTR [rbp-0xc]
  4079dc:	mov    edx,eax
  4079de:	mov    rax,QWORD PTR [rbp-0x8]
  4079e2:	mov    BYTE PTR [rax],dl
  4079e4:	add    QWORD PTR [rbp-0x20],0x4
  4079e9:	nop
  4079ea:	pop    rbp
  4079eb:	ret    
  4079ec:	push   rbp
  4079ed:	mov    rbp,rsp
  4079f0:	mov    DWORD PTR [rbp-0x4],edi
  4079f3:	mov    eax,DWORD PTR [rbp-0x4]
  4079f6:	sub    eax,0x22
  4079f9:	cmp    eax,0x3a
  4079fc:	ja     407a28 <rb_strcasecmp@plt+0x54b8>
  4079fe:	mov    eax,eax
  407a00:	lea    rdx,[rax*4+0x0]
  407a08:	lea    rax,[rip+0x7ef1]        # 40f900 <rb_strcasecmp@plt+0xd390>
  407a0f:	mov    eax,DWORD PTR [rdx+rax*1]
  407a12:	movsxd rdx,eax
  407a15:	lea    rax,[rip+0x7ee4]        # 40f900 <rb_strcasecmp@plt+0xd390>
  407a1c:	add    rax,rdx
  407a1f:	jmp    rax
  407a21:	mov    eax,0x1
  407a26:	jmp    407a2d <rb_strcasecmp@plt+0x54bd>
  407a28:	mov    eax,0x0
  407a2d:	pop    rbp
  407a2e:	ret    
  407a2f:	push   rbp
  407a30:	mov    rbp,rsp
  407a33:	mov    QWORD PTR [rbp-0x18],rdi
  407a37:	mov    rax,QWORD PTR [rbp-0x18]
  407a3b:	movzx  eax,BYTE PTR [rax]
  407a3e:	mov    BYTE PTR [rbp-0x5],al
  407a41:	movzx  eax,BYTE PTR [rbp-0x5]
  407a45:	and    eax,0xc0
  407a4a:	cmp    eax,0xc0
  407a4f:	jne    407a58 <rb_strcasecmp@plt+0x54e8>
  407a51:	mov    eax,0xffffffff
  407a56:	jmp    407aab <rb_strcasecmp@plt+0x553b>
  407a58:	movzx  eax,BYTE PTR [rbp-0x5]
  407a5c:	and    eax,0xc0
  407a61:	cmp    eax,0x40
  407a64:	jne    407aa7 <rb_strcasecmp@plt+0x5537>
  407a66:	cmp    BYTE PTR [rbp-0x5],0x41
  407a6a:	jne    407aa0 <rb_strcasecmp@plt+0x5530>
  407a6c:	mov    rax,QWORD PTR [rbp-0x18]
  407a70:	add    rax,0x1
  407a74:	movzx  eax,BYTE PTR [rax]
  407a77:	movzx  eax,al
  407a7a:	mov    DWORD PTR [rbp-0x4],eax
  407a7d:	cmp    DWORD PTR [rbp-0x4],0x0
  407a81:	jne    407a8a <rb_strcasecmp@plt+0x551a>
  407a83:	mov    DWORD PTR [rbp-0x4],0x100
  407a8a:	mov    eax,DWORD PTR [rbp-0x4]
  407a8d:	add    eax,0x7
  407a90:	lea    edx,[rax+0x7]
  407a93:	test   eax,eax
  407a95:	cmovs  eax,edx
  407a98:	sar    eax,0x3
  407a9b:	add    eax,0x1
  407a9e:	jmp    407aab <rb_strcasecmp@plt+0x553b>
  407aa0:	mov    eax,0xffffffff
  407aa5:	jmp    407aab <rb_strcasecmp@plt+0x553b>
  407aa7:	movzx  eax,BYTE PTR [rbp-0x5]
  407aab:	pop    rbp
  407aac:	ret    
  407aad:	push   rbp
  407aae:	mov    rbp,rsp
  407ab1:	mov    DWORD PTR [rbp-0x4],edi
  407ab4:	cmp    DWORD PTR [rbp-0x4],0x20
  407ab8:	jle    407ac7 <rb_strcasecmp@plt+0x5557>
  407aba:	cmp    DWORD PTR [rbp-0x4],0x7e
  407abe:	jg     407ac7 <rb_strcasecmp@plt+0x5557>
  407ac0:	mov    eax,0x1
  407ac5:	jmp    407acc <rb_strcasecmp@plt+0x555c>
  407ac7:	mov    eax,0x0
  407acc:	pop    rbp
  407acd:	ret    
  407ace:	push   rbp
  407acf:	mov    rbp,rsp
  407ad2:	sub    rsp,0x40
  407ad6:	mov    QWORD PTR [rbp-0x28],rdi
  407ada:	mov    QWORD PTR [rbp-0x30],rsi
  407ade:	mov    QWORD PTR [rbp-0x38],rdx
  407ae2:	mov    rax,QWORD PTR [rbp-0x28]
  407ae6:	mov    rax,QWORD PTR [rax]
  407ae9:	mov    QWORD PTR [rbp-0x10],rax
  407aed:	mov    rax,QWORD PTR [rbp-0x30]
  407af1:	mov    QWORD PTR [rbp-0x8],rax
  407af5:	mov    rax,QWORD PTR [rbp-0x10]
  407af9:	movzx  eax,BYTE PTR [rax]
  407afc:	movsx  eax,al
  407aff:	and    eax,0xff
  407b04:	mov    DWORD PTR [rbp-0x18],eax
  407b07:	cmp    DWORD PTR [rbp-0x18],0x0
  407b0b:	jne    407b14 <rb_strcasecmp@plt+0x55a4>
  407b0d:	mov    DWORD PTR [rbp-0x18],0x100
  407b14:	mov    eax,DWORD PTR [rbp-0x18]
  407b17:	add    eax,0x3
  407b1a:	lea    edx,[rax+0x3]
  407b1d:	test   eax,eax
  407b1f:	cmovs  eax,edx
  407b22:	sar    eax,0x2
  407b25:	mov    DWORD PTR [rbp-0x14],eax
  407b28:	cmp    DWORD PTR [rbp-0x18],0x63
  407b2c:	jg     407b42 <rb_strcasecmp@plt+0x55d2>
  407b2e:	cmp    DWORD PTR [rbp-0x18],0x9
  407b32:	jle    407b3b <rb_strcasecmp@plt+0x55cb>
  407b34:	mov    eax,0x8
  407b39:	jmp    407b47 <rb_strcasecmp@plt+0x55d7>
  407b3b:	mov    eax,0x7
  407b40:	jmp    407b47 <rb_strcasecmp@plt+0x55d7>
  407b42:	mov    eax,0x9
  407b47:	mov    edx,DWORD PTR [rbp-0x14]
  407b4a:	add    eax,edx
  407b4c:	mov    DWORD PTR [rbp-0x14],eax
  407b4f:	mov    eax,DWORD PTR [rbp-0x14]
  407b52:	movsxd rdx,eax
  407b55:	mov    rax,QWORD PTR [rbp-0x30]
  407b59:	add    rax,rdx
  407b5c:	cmp    rax,QWORD PTR [rbp-0x38]
  407b60:	jb     407b6c <rb_strcasecmp@plt+0x55fc>
  407b62:	mov    eax,0xffffffff
  407b67:	jmp    407cab <rb_strcasecmp@plt+0x573b>
  407b6c:	add    QWORD PTR [rbp-0x10],0x1
  407b71:	mov    rax,QWORD PTR [rbp-0x30]
  407b75:	mov    DWORD PTR [rax],0x785b5c
  407b7b:	mov    eax,0x3
  407b80:	cdqe   
  407b82:	add    QWORD PTR [rbp-0x30],rax
  407b86:	mov    eax,DWORD PTR [rbp-0x18]
  407b89:	mov    DWORD PTR [rbp-0x1c],eax
  407b8c:	jmp    407bc2 <rb_strcasecmp@plt+0x5652>
  407b8e:	mov    rax,QWORD PTR [rbp-0x10]
  407b92:	movzx  eax,BYTE PTR [rax]
  407b95:	movsx  eax,al
  407b98:	movzx  edx,al
  407b9b:	mov    rax,QWORD PTR [rbp-0x30]
  407b9f:	lea    rsi,[rip+0x7e46]        # 40f9ec <rb_strcasecmp@plt+0xd47c>
  407ba6:	mov    rdi,rax
  407ba9:	mov    eax,0x0
  407bae:	call   402260 <sprintf@plt>
  407bb3:	cdqe   
  407bb5:	add    QWORD PTR [rbp-0x30],rax
  407bb9:	sub    DWORD PTR [rbp-0x1c],0x8
  407bbd:	add    QWORD PTR [rbp-0x10],0x1
  407bc2:	cmp    DWORD PTR [rbp-0x1c],0x7
  407bc6:	jg     407b8e <rb_strcasecmp@plt+0x561e>
  407bc8:	cmp    DWORD PTR [rbp-0x1c],0x4
  407bcc:	jle    407c18 <rb_strcasecmp@plt+0x56a8>
  407bce:	mov    rax,QWORD PTR [rbp-0x10]
  407bd2:	lea    rdx,[rax+0x1]
  407bd6:	mov    QWORD PTR [rbp-0x10],rdx
  407bda:	movzx  eax,BYTE PTR [rax]
  407bdd:	mov    BYTE PTR [rbp-0x1d],al
  407be0:	movsx  edx,BYTE PTR [rbp-0x1d]
  407be4:	mov    eax,0x8
  407be9:	sub    eax,DWORD PTR [rbp-0x1c]
  407bec:	mov    ecx,0xff
  407bf1:	shlx   eax,ecx,eax
  407bf6:	and    edx,eax
  407bf8:	mov    rax,QWORD PTR [rbp-0x30]
  407bfc:	lea    rsi,[rip+0x7de9]        # 40f9ec <rb_strcasecmp@plt+0xd47c>
  407c03:	mov    rdi,rax
  407c06:	mov    eax,0x0
  407c0b:	call   402260 <sprintf@plt>
  407c10:	cdqe   
  407c12:	add    QWORD PTR [rbp-0x30],rax
  407c16:	jmp    407c71 <rb_strcasecmp@plt+0x5701>
  407c18:	cmp    DWORD PTR [rbp-0x1c],0x0
  407c1c:	jle    407c71 <rb_strcasecmp@plt+0x5701>
  407c1e:	mov    rax,QWORD PTR [rbp-0x10]
  407c22:	lea    rdx,[rax+0x1]
  407c26:	mov    QWORD PTR [rbp-0x10],rdx
  407c2a:	movzx  eax,BYTE PTR [rax]
  407c2d:	mov    BYTE PTR [rbp-0x1d],al
  407c30:	movzx  eax,BYTE PTR [rbp-0x1d]
  407c34:	sar    al,0x4
  407c37:	movsx  eax,al
  407c3a:	and    eax,0xf
  407c3d:	mov    edx,eax
  407c3f:	mov    eax,0x4
  407c44:	sub    eax,DWORD PTR [rbp-0x1c]
  407c47:	mov    ecx,0xf
  407c4c:	shlx   eax,ecx,eax
  407c51:	and    edx,eax
  407c53:	mov    rax,QWORD PTR [rbp-0x30]
  407c57:	lea    rsi,[rip+0x7d93]        # 40f9f1 <rb_strcasecmp@plt+0xd481>
  407c5e:	mov    rdi,rax
  407c61:	mov    eax,0x0
  407c66:	call   402260 <sprintf@plt>
  407c6b:	cdqe   
  407c6d:	add    QWORD PTR [rbp-0x30],rax
  407c71:	mov    edx,DWORD PTR [rbp-0x18]
  407c74:	mov    rax,QWORD PTR [rbp-0x30]
  407c78:	lea    rsi,[rip+0x7d76]        # 40f9f5 <rb_strcasecmp@plt+0xd485>
  407c7f:	mov    rdi,rax
  407c82:	mov    eax,0x0
  407c87:	call   402260 <sprintf@plt>
  407c8c:	cdqe   
  407c8e:	add    QWORD PTR [rbp-0x30],rax
  407c92:	mov    rax,QWORD PTR [rbp-0x28]
  407c96:	mov    rdx,QWORD PTR [rbp-0x10]
  407c9a:	mov    QWORD PTR [rax],rdx
  407c9d:	mov    rdx,QWORD PTR [rbp-0x30]
  407ca1:	mov    rax,QWORD PTR [rbp-0x8]
  407ca5:	sub    rdx,rax
  407ca8:	mov    rax,rdx
  407cab:	leave  
  407cac:	ret    
  407cad:	push   rbp
  407cae:	mov    rbp,rsp
  407cb1:	sub    rsp,0x60
  407cb5:	mov    QWORD PTR [rbp-0x48],rdi
  407cb9:	mov    QWORD PTR [rbp-0x50],rsi
  407cbd:	mov    QWORD PTR [rbp-0x58],rdx
  407cc1:	mov    rax,QWORD PTR fs:0x28
  407cca:	mov    QWORD PTR [rbp-0x8],rax
  407cce:	xor    eax,eax
  407cd0:	mov    DWORD PTR [rbp-0x30],0x0
  407cd7:	mov    DWORD PTR [rbp-0x34],0x0
  407cde:	mov    rax,QWORD PTR [rbp-0x50]
  407ce2:	mov    QWORD PTR [rbp-0x20],rax
  407ce6:	mov    rdx,QWORD PTR [rbp-0x50]
  407cea:	mov    rax,QWORD PTR [rbp-0x58]
  407cee:	add    rax,rdx
  407cf1:	mov    QWORD PTR [rbp-0x18],rax
  407cf5:	mov    rax,QWORD PTR [rbp-0x20]
  407cf9:	lea    rdx,[rax+0x1]
  407cfd:	mov    QWORD PTR [rbp-0x20],rdx
  407d01:	mov    QWORD PTR [rbp-0x28],rax
  407d05:	jmp    408082 <rb_strcasecmp@plt+0x5b12>
  407d0a:	cmp    DWORD PTR [rbp-0x34],0x0
  407d0e:	je     407f27 <rb_strcasecmp@plt+0x59b7>
  407d14:	cmp    DWORD PTR [rbp-0x38],0x5b
  407d18:	jne    407de7 <rb_strcasecmp@plt+0x5877>
  407d1e:	mov    rax,QWORD PTR [rbp-0x48]
  407d22:	mov    esi,0x5d
  407d27:	mov    rdi,rax
  407d2a:	call   402370 <strchr@plt>
  407d2f:	mov    QWORD PTR [rbp-0x10],rax
  407d33:	cmp    QWORD PTR [rbp-0x10],0x0
  407d38:	jne    407d4f <rb_strcasecmp@plt+0x57df>
  407d3a:	call   4023c0 <__errno_location@plt>
  407d3f:	mov    DWORD PTR [rax],0x16
  407d45:	mov    eax,0xffffffff
  407d4a:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407d4f:	mov    rax,QWORD PTR [rbp-0x10]
  407d53:	lea    rsi,[rax+0x2]
  407d57:	mov    rdi,QWORD PTR [rbp-0x18]
  407d5b:	lea    rcx,[rbp-0x20]
  407d5f:	lea    rdx,[rbp-0x28]
  407d63:	lea    rax,[rbp-0x48]
  407d67:	mov    r8,rdi
  407d6a:	mov    rdi,rax
  407d6d:	call   408521 <rb_strcasecmp@plt+0x5fb1>
  407d72:	mov    DWORD PTR [rbp-0x30],eax
  407d75:	cmp    DWORD PTR [rbp-0x30],0x0
  407d79:	je     407d92 <rb_strcasecmp@plt+0x5822>
  407d7b:	call   4023c0 <__errno_location@plt>
  407d80:	mov    rdx,rax
  407d83:	mov    eax,DWORD PTR [rbp-0x30]
  407d86:	mov    DWORD PTR [rdx],eax
  407d88:	mov    eax,0xffffffff
  407d8d:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407d92:	mov    DWORD PTR [rbp-0x34],0x0
  407d99:	mov    rax,QWORD PTR [rbp-0x20]
  407d9d:	lea    rdx,[rax+0x1]
  407da1:	mov    QWORD PTR [rbp-0x20],rdx
  407da5:	mov    QWORD PTR [rbp-0x28],rax
  407da9:	mov    rax,QWORD PTR [rbp-0x48]
  407dad:	lea    rdx,[rax+0x1]
  407db1:	mov    QWORD PTR [rbp-0x48],rdx
  407db5:	movzx  eax,BYTE PTR [rax]
  407db8:	movsx  eax,al
  407dbb:	mov    DWORD PTR [rbp-0x38],eax
  407dbe:	cmp    DWORD PTR [rbp-0x38],0x0
  407dc2:	je     4080d9 <rb_strcasecmp@plt+0x5b69>
  407dc8:	cmp    DWORD PTR [rbp-0x38],0x2e
  407dcc:	je     408082 <rb_strcasecmp@plt+0x5b12>
  407dd2:	call   4023c0 <__errno_location@plt>
  407dd7:	mov    DWORD PTR [rax],0x16
  407ddd:	mov    eax,0xffffffff
  407de2:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407de7:	mov    eax,DWORD PTR [rbp-0x38]
  407dea:	mov    esi,eax
  407dec:	lea    rdi,[rip+0x7acd]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407df3:	call   402370 <strchr@plt>
  407df8:	mov    QWORD PTR [rbp-0x10],rax
  407dfc:	cmp    QWORD PTR [rbp-0x10],0x0
  407e01:	je     407f1b <rb_strcasecmp@plt+0x59ab>
  407e07:	mov    rdx,QWORD PTR [rbp-0x10]
  407e0b:	lea    rax,[rip+0x7aae]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407e12:	sub    rdx,rax
  407e15:	mov    rax,rdx
  407e18:	imul   eax,eax,0x64
  407e1b:	mov    DWORD PTR [rbp-0x2c],eax
  407e1e:	mov    rax,QWORD PTR [rbp-0x48]
  407e22:	lea    rdx,[rax+0x1]
  407e26:	mov    QWORD PTR [rbp-0x48],rdx
  407e2a:	movzx  eax,BYTE PTR [rax]
  407e2d:	movsx  eax,al
  407e30:	mov    DWORD PTR [rbp-0x38],eax
  407e33:	cmp    DWORD PTR [rbp-0x38],0x0
  407e37:	je     407e55 <rb_strcasecmp@plt+0x58e5>
  407e39:	mov    eax,DWORD PTR [rbp-0x38]
  407e3c:	mov    esi,eax
  407e3e:	lea    rdi,[rip+0x7a7b]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407e45:	call   402370 <strchr@plt>
  407e4a:	mov    QWORD PTR [rbp-0x10],rax
  407e4e:	cmp    QWORD PTR [rbp-0x10],0x0
  407e53:	jne    407e6a <rb_strcasecmp@plt+0x58fa>
  407e55:	call   4023c0 <__errno_location@plt>
  407e5a:	mov    DWORD PTR [rax],0x5a
  407e60:	mov    eax,0xffffffff
  407e65:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407e6a:	mov    rdx,QWORD PTR [rbp-0x10]
  407e6e:	lea    rax,[rip+0x7a4b]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407e75:	sub    rdx,rax
  407e78:	mov    rax,rdx
  407e7b:	mov    edx,eax
  407e7d:	mov    eax,edx
  407e7f:	shl    eax,0x2
  407e82:	add    eax,edx
  407e84:	add    eax,eax
  407e86:	mov    edx,eax
  407e88:	mov    eax,DWORD PTR [rbp-0x2c]
  407e8b:	add    eax,edx
  407e8d:	mov    DWORD PTR [rbp-0x2c],eax
  407e90:	mov    rax,QWORD PTR [rbp-0x48]
  407e94:	lea    rdx,[rax+0x1]
  407e98:	mov    QWORD PTR [rbp-0x48],rdx
  407e9c:	movzx  eax,BYTE PTR [rax]
  407e9f:	movsx  eax,al
  407ea2:	mov    DWORD PTR [rbp-0x38],eax
  407ea5:	cmp    DWORD PTR [rbp-0x38],0x0
  407ea9:	je     407ec7 <rb_strcasecmp@plt+0x5957>
  407eab:	mov    eax,DWORD PTR [rbp-0x38]
  407eae:	mov    esi,eax
  407eb0:	lea    rdi,[rip+0x7a09]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407eb7:	call   402370 <strchr@plt>
  407ebc:	mov    QWORD PTR [rbp-0x10],rax
  407ec0:	cmp    QWORD PTR [rbp-0x10],0x0
  407ec5:	jne    407edc <rb_strcasecmp@plt+0x596c>
  407ec7:	call   4023c0 <__errno_location@plt>
  407ecc:	mov    DWORD PTR [rax],0x5a
  407ed2:	mov    eax,0xffffffff
  407ed7:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407edc:	mov    rdx,QWORD PTR [rbp-0x10]
  407ee0:	lea    rax,[rip+0x79d9]        # 40f8c0 <rb_strcasecmp@plt+0xd350>
  407ee7:	sub    rdx,rax
  407eea:	mov    rax,rdx
  407eed:	mov    edx,eax
  407eef:	mov    eax,DWORD PTR [rbp-0x2c]
  407ef2:	add    eax,edx
  407ef4:	mov    DWORD PTR [rbp-0x2c],eax
  407ef7:	cmp    DWORD PTR [rbp-0x2c],0xff
  407efe:	jle    407f15 <rb_strcasecmp@plt+0x59a5>
  407f00:	call   4023c0 <__errno_location@plt>
  407f05:	mov    DWORD PTR [rax],0x5a
  407f0b:	mov    eax,0xffffffff
  407f10:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407f15:	mov    eax,DWORD PTR [rbp-0x2c]
  407f18:	mov    DWORD PTR [rbp-0x38],eax
  407f1b:	mov    DWORD PTR [rbp-0x34],0x0
  407f22:	jmp    408052 <rb_strcasecmp@plt+0x5ae2>
  407f27:	cmp    DWORD PTR [rbp-0x38],0x5c
  407f2b:	jne    407f39 <rb_strcasecmp@plt+0x59c9>
  407f2d:	mov    DWORD PTR [rbp-0x34],0x1
  407f34:	jmp    408082 <rb_strcasecmp@plt+0x5b12>
  407f39:	cmp    DWORD PTR [rbp-0x38],0x2e
  407f3d:	jne    408052 <rb_strcasecmp@plt+0x5ae2>
  407f43:	mov    rax,QWORD PTR [rbp-0x20]
  407f47:	mov    rdx,rax
  407f4a:	mov    rax,QWORD PTR [rbp-0x28]
  407f4e:	sub    rdx,rax
  407f51:	mov    rax,rdx
  407f54:	sub    eax,0x1
  407f57:	mov    DWORD PTR [rbp-0x38],eax
  407f5a:	mov    eax,DWORD PTR [rbp-0x38]
  407f5d:	and    eax,0xc0
  407f62:	test   eax,eax
  407f64:	je     407f7b <rb_strcasecmp@plt+0x5a0b>
  407f66:	call   4023c0 <__errno_location@plt>
  407f6b:	mov    DWORD PTR [rax],0x5a
  407f71:	mov    eax,0xffffffff
  407f76:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407f7b:	mov    rax,QWORD PTR [rbp-0x28]
  407f7f:	cmp    rax,QWORD PTR [rbp-0x18]
  407f83:	jb     407f9a <rb_strcasecmp@plt+0x5a2a>
  407f85:	call   4023c0 <__errno_location@plt>
  407f8a:	mov    DWORD PTR [rax],0x5a
  407f90:	mov    eax,0xffffffff
  407f95:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407f9a:	mov    rax,QWORD PTR [rbp-0x28]
  407f9e:	mov    edx,DWORD PTR [rbp-0x38]
  407fa1:	mov    BYTE PTR [rax],dl
  407fa3:	mov    rax,QWORD PTR [rbp-0x48]
  407fa7:	movzx  eax,BYTE PTR [rax]
  407faa:	test   al,al
  407fac:	jne    40801a <rb_strcasecmp@plt+0x5aaa>
  407fae:	cmp    DWORD PTR [rbp-0x38],0x0
  407fb2:	je     407fe2 <rb_strcasecmp@plt+0x5a72>
  407fb4:	mov    rax,QWORD PTR [rbp-0x20]
  407fb8:	cmp    rax,QWORD PTR [rbp-0x18]
  407fbc:	jb     407fd3 <rb_strcasecmp@plt+0x5a63>
  407fbe:	call   4023c0 <__errno_location@plt>
  407fc3:	mov    DWORD PTR [rax],0x5a
  407fc9:	mov    eax,0xffffffff
  407fce:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  407fd3:	mov    rax,QWORD PTR [rbp-0x20]
  407fd7:	lea    rdx,[rax+0x1]
  407fdb:	mov    QWORD PTR [rbp-0x20],rdx
  407fdf:	mov    BYTE PTR [rax],0x0
  407fe2:	mov    rax,QWORD PTR [rbp-0x20]
  407fe6:	mov    rdx,rax
  407fe9:	mov    rax,QWORD PTR [rbp-0x50]
  407fed:	sub    rdx,rax
  407ff0:	mov    rax,rdx
  407ff3:	cmp    rax,0xff
  407ff9:	jle    408010 <rb_strcasecmp@plt+0x5aa0>
  407ffb:	call   4023c0 <__errno_location@plt>
  408000:	mov    DWORD PTR [rax],0x5a
  408006:	mov    eax,0xffffffff
  40800b:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  408010:	mov    eax,0x1
  408015:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  40801a:	cmp    DWORD PTR [rbp-0x38],0x0
  40801e:	je     40802b <rb_strcasecmp@plt+0x5abb>
  408020:	mov    rax,QWORD PTR [rbp-0x48]
  408024:	movzx  eax,BYTE PTR [rax]
  408027:	cmp    al,0x2e
  408029:	jne    408040 <rb_strcasecmp@plt+0x5ad0>
  40802b:	call   4023c0 <__errno_location@plt>
  408030:	mov    DWORD PTR [rax],0x5a
  408036:	mov    eax,0xffffffff
  40803b:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  408040:	mov    rax,QWORD PTR [rbp-0x20]
  408044:	lea    rdx,[rax+0x1]
  408048:	mov    QWORD PTR [rbp-0x20],rdx
  40804c:	mov    QWORD PTR [rbp-0x28],rax
  408050:	jmp    408082 <rb_strcasecmp@plt+0x5b12>
  408052:	mov    rax,QWORD PTR [rbp-0x20]
  408056:	cmp    rax,QWORD PTR [rbp-0x18]
  40805a:	jb     408071 <rb_strcasecmp@plt+0x5b01>
  40805c:	call   4023c0 <__errno_location@plt>
  408061:	mov    DWORD PTR [rax],0x5a
  408067:	mov    eax,0xffffffff
  40806c:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  408071:	mov    rax,QWORD PTR [rbp-0x20]
  408075:	lea    rdx,[rax+0x1]
  408079:	mov    QWORD PTR [rbp-0x20],rdx
  40807d:	mov    edx,DWORD PTR [rbp-0x38]
  408080:	mov    BYTE PTR [rax],dl
  408082:	mov    rax,QWORD PTR [rbp-0x48]
  408086:	lea    rdx,[rax+0x1]
  40808a:	mov    QWORD PTR [rbp-0x48],rdx
  40808e:	movzx  eax,BYTE PTR [rax]
  408091:	movsx  eax,al
  408094:	mov    DWORD PTR [rbp-0x38],eax
  408097:	cmp    DWORD PTR [rbp-0x38],0x0
  40809b:	jne    407d0a <rb_strcasecmp@plt+0x579a>
  4080a1:	mov    rax,QWORD PTR [rbp-0x20]
  4080a5:	mov    rdx,rax
  4080a8:	mov    rax,QWORD PTR [rbp-0x28]
  4080ac:	sub    rdx,rax
  4080af:	mov    rax,rdx
  4080b2:	sub    eax,0x1
  4080b5:	mov    DWORD PTR [rbp-0x38],eax
  4080b8:	mov    eax,DWORD PTR [rbp-0x38]
  4080bb:	and    eax,0xc0
  4080c0:	test   eax,eax
  4080c2:	je     4080da <rb_strcasecmp@plt+0x5b6a>
  4080c4:	call   4023c0 <__errno_location@plt>
  4080c9:	mov    DWORD PTR [rax],0x5a
  4080cf:	mov    eax,0xffffffff
  4080d4:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  4080d9:	nop
  4080da:	mov    rax,QWORD PTR [rbp-0x28]
  4080de:	cmp    rax,QWORD PTR [rbp-0x18]
  4080e2:	jb     4080f6 <rb_strcasecmp@plt+0x5b86>
  4080e4:	call   4023c0 <__errno_location@plt>
  4080e9:	mov    DWORD PTR [rax],0x5a
  4080ef:	mov    eax,0xffffffff
  4080f4:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  4080f6:	mov    rax,QWORD PTR [rbp-0x28]
  4080fa:	mov    edx,DWORD PTR [rbp-0x38]
  4080fd:	mov    BYTE PTR [rax],dl
  4080ff:	cmp    DWORD PTR [rbp-0x38],0x0
  408103:	je     408130 <rb_strcasecmp@plt+0x5bc0>
  408105:	mov    rax,QWORD PTR [rbp-0x20]
  408109:	cmp    rax,QWORD PTR [rbp-0x18]
  40810d:	jb     408121 <rb_strcasecmp@plt+0x5bb1>
  40810f:	call   4023c0 <__errno_location@plt>
  408114:	mov    DWORD PTR [rax],0x5a
  40811a:	mov    eax,0xffffffff
  40811f:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  408121:	mov    rax,QWORD PTR [rbp-0x20]
  408125:	lea    rdx,[rax+0x1]
  408129:	mov    QWORD PTR [rbp-0x20],rdx
  40812d:	mov    BYTE PTR [rax],0x0
  408130:	mov    rax,QWORD PTR [rbp-0x20]
  408134:	mov    rdx,rax
  408137:	mov    rax,QWORD PTR [rbp-0x50]
  40813b:	sub    rdx,rax
  40813e:	mov    rax,rdx
  408141:	cmp    rax,0xff
  408147:	jle    40815b <rb_strcasecmp@plt+0x5beb>
  408149:	call   4023c0 <__errno_location@plt>
  40814e:	mov    DWORD PTR [rax],0x5a
  408154:	mov    eax,0xffffffff
  408159:	jmp    408160 <rb_strcasecmp@plt+0x5bf0>
  40815b:	mov    eax,0x0
  408160:	mov    rcx,QWORD PTR [rbp-0x8]
  408164:	xor    rcx,QWORD PTR fs:0x28
  40816d:	je     408174 <rb_strcasecmp@plt+0x5c04>
  40816f:	call   402400 <__stack_chk_fail@plt>
  408174:	leave  
  408175:	ret    
  408176:	push   rbp
  408177:	mov    rbp,rsp
  40817a:	sub    rsp,0x70
  40817e:	mov    QWORD PTR [rbp-0x48],rdi
  408182:	mov    QWORD PTR [rbp-0x50],rsi
  408186:	mov    DWORD PTR [rbp-0x54],edx
  408189:	mov    QWORD PTR [rbp-0x60],rcx
  40818d:	mov    QWORD PTR [rbp-0x68],r8
  408191:	mov    DWORD PTR [rbp-0x3c],0x1
  408198:	mov    rax,QWORD PTR [rbp-0x48]
  40819c:	mov    QWORD PTR [rbp-0x10],rax
  4081a0:	mov    rax,QWORD PTR [rbp-0x50]
  4081a4:	mov    QWORD PTR [rbp-0x30],rax
  4081a8:	mov    eax,DWORD PTR [rbp-0x54]
  4081ab:	movsxd rdx,eax
  4081ae:	mov    rax,QWORD PTR [rbp-0x30]
  4081b2:	add    rax,rdx
  4081b5:	mov    QWORD PTR [rbp-0x8],rax
  4081b9:	mov    QWORD PTR [rbp-0x28],0x0
  4081c1:	mov    rax,QWORD PTR [rbp-0x28]
  4081c5:	mov    QWORD PTR [rbp-0x20],rax
  4081c9:	cmp    QWORD PTR [rbp-0x60],0x0
  4081ce:	je     40820f <rb_strcasecmp@plt+0x5c9f>
  4081d0:	mov    rax,QWORD PTR [rbp-0x60]
  4081d4:	lea    rdx,[rax+0x8]
  4081d8:	mov    QWORD PTR [rbp-0x60],rdx
  4081dc:	mov    rax,QWORD PTR [rax]
  4081df:	mov    QWORD PTR [rbp-0x18],rax
  4081e3:	cmp    QWORD PTR [rbp-0x18],0x0
  4081e8:	je     408217 <rb_strcasecmp@plt+0x5ca7>
  4081ea:	mov    rax,QWORD PTR [rbp-0x60]
  4081ee:	mov    QWORD PTR [rbp-0x28],rax
  4081f2:	jmp    4081f9 <rb_strcasecmp@plt+0x5c89>
  4081f4:	add    QWORD PTR [rbp-0x28],0x8
  4081f9:	mov    rax,QWORD PTR [rbp-0x28]
  4081fd:	mov    rax,QWORD PTR [rax]
  408200:	test   rax,rax
  408203:	jne    4081f4 <rb_strcasecmp@plt+0x5c84>
  408205:	mov    rax,QWORD PTR [rbp-0x28]
  408209:	mov    QWORD PTR [rbp-0x20],rax
  40820d:	jmp    408217 <rb_strcasecmp@plt+0x5ca7>
  40820f:	mov    QWORD PTR [rbp-0x18],0x0
  408217:	mov    DWORD PTR [rbp-0x40],0x0
  40821e:	mov    rax,QWORD PTR [rbp-0x10]
  408222:	movzx  eax,BYTE PTR [rax]
  408225:	movzx  eax,al
  408228:	mov    DWORD PTR [rbp-0x38],eax
  40822b:	mov    eax,DWORD PTR [rbp-0x38]
  40822e:	and    eax,0xc0
  408233:	cmp    eax,0xc0
  408238:	jne    40824f <rb_strcasecmp@plt+0x5cdf>
  40823a:	call   4023c0 <__errno_location@plt>
  40823f:	mov    DWORD PTR [rax],0x5a
  408245:	mov    eax,0xffffffff
  40824a:	jmp    40846d <rb_strcasecmp@plt+0x5efd>
  40824f:	mov    rax,QWORD PTR [rbp-0x10]
  408253:	mov    rdi,rax
  408256:	call   407a2f <rb_strcasecmp@plt+0x54bf>
  40825b:	mov    DWORD PTR [rbp-0x34],eax
  40825e:	cmp    DWORD PTR [rbp-0x34],0x0
  408262:	jns    408279 <rb_strcasecmp@plt+0x5d09>
  408264:	call   4023c0 <__errno_location@plt>
  408269:	mov    DWORD PTR [rax],0x16
  40826f:	mov    eax,0xffffffff
  408274:	jmp    40846d <rb_strcasecmp@plt+0x5efd>
  408279:	mov    eax,DWORD PTR [rbp-0x34]
  40827c:	add    eax,0x1
  40827f:	add    DWORD PTR [rbp-0x40],eax
  408282:	cmp    DWORD PTR [rbp-0x40],0xff
  408289:	jle    4082a0 <rb_strcasecmp@plt+0x5d30>
  40828b:	call   4023c0 <__errno_location@plt>
  408290:	mov    DWORD PTR [rax],0x5a
  408296:	mov    eax,0xffffffff
  40829b:	jmp    40846d <rb_strcasecmp@plt+0x5efd>
  4082a0:	mov    eax,DWORD PTR [rbp-0x34]
  4082a3:	cdqe   
  4082a5:	add    rax,0x1
  4082a9:	add    QWORD PTR [rbp-0x10],rax
  4082ad:	cmp    DWORD PTR [rbp-0x38],0x0
  4082b1:	jne    40821e <rb_strcasecmp@plt+0x5cae>
  4082b7:	mov    rax,QWORD PTR [rbp-0x48]
  4082bb:	mov    QWORD PTR [rbp-0x10],rax
  4082bf:	mov    rax,QWORD PTR [rbp-0x10]
  4082c3:	movzx  eax,BYTE PTR [rax]
  4082c6:	movzx  eax,al
  4082c9:	mov    DWORD PTR [rbp-0x38],eax
  4082cc:	cmp    DWORD PTR [rbp-0x38],0x0
  4082d0:	je     4083b4 <rb_strcasecmp@plt+0x5e44>
  4082d6:	cmp    QWORD PTR [rbp-0x18],0x0
  4082db:	je     4083b4 <rb_strcasecmp@plt+0x5e44>
  4082e1:	mov    rcx,QWORD PTR [rbp-0x20]
  4082e5:	mov    rdx,QWORD PTR [rbp-0x60]
  4082e9:	mov    rsi,QWORD PTR [rbp-0x18]
  4082ed:	mov    rax,QWORD PTR [rbp-0x10]
  4082f1:	mov    rdi,rax
  4082f4:	call   40885e <rb_strcasecmp@plt+0x62ee>
  4082f9:	mov    DWORD PTR [rbp-0x40],eax
  4082fc:	cmp    DWORD PTR [rbp-0x40],0x0
  408300:	js     40835e <rb_strcasecmp@plt+0x5dee>
  408302:	mov    rax,QWORD PTR [rbp-0x30]
  408306:	add    rax,0x1
  40830a:	cmp    rax,QWORD PTR [rbp-0x8]
  40830e:	jae    408434 <rb_strcasecmp@plt+0x5ec4>
  408314:	mov    rax,QWORD PTR [rbp-0x30]
  408318:	lea    rdx,[rax+0x1]
  40831c:	mov    QWORD PTR [rbp-0x30],rdx
  408320:	mov    edx,DWORD PTR [rbp-0x40]
  408323:	sar    edx,0x8
  408326:	or     edx,0xffffffc0
  408329:	mov    BYTE PTR [rax],dl
  40832b:	mov    rax,QWORD PTR [rbp-0x30]
  40832f:	lea    rdx,[rax+0x1]
  408333:	mov    QWORD PTR [rbp-0x30],rdx
  408337:	mov    edx,DWORD PTR [rbp-0x40]
  40833a:	mov    ecx,edx
  40833c:	sar    ecx,0x1f
  40833f:	shr    ecx,0x18
  408342:	add    edx,ecx
  408344:	movzx  edx,dl
  408347:	sub    edx,ecx
  408349:	mov    BYTE PTR [rax],dl
  40834b:	mov    rdx,QWORD PTR [rbp-0x30]
  40834f:	mov    rax,QWORD PTR [rbp-0x50]
  408353:	sub    rdx,rax
  408356:	mov    rax,rdx
  408359:	jmp    40846d <rb_strcasecmp@plt+0x5efd>
  40835e:	cmp    QWORD PTR [rbp-0x68],0x0
  408363:	je     4083b4 <rb_strcasecmp@plt+0x5e44>
  408365:	mov    rax,QWORD PTR [rbp-0x68]
  408369:	sub    rax,0x8
  40836d:	cmp    rax,QWORD PTR [rbp-0x28]
  408371:	jbe    4083b4 <rb_strcasecmp@plt+0x5e44>
  408373:	mov    rdx,QWORD PTR [rbp-0x30]
  408377:	mov    rax,QWORD PTR [rbp-0x18]
  40837b:	sub    rdx,rax
  40837e:	mov    rax,rdx
  408381:	cmp    rax,0x3fff
  408387:	jg     4083b4 <rb_strcasecmp@plt+0x5e44>
  408389:	cmp    DWORD PTR [rbp-0x3c],0x0
  40838d:	je     4083b4 <rb_strcasecmp@plt+0x5e44>
  40838f:	mov    rax,QWORD PTR [rbp-0x28]
  408393:	lea    rdx,[rax+0x8]
  408397:	mov    QWORD PTR [rbp-0x28],rdx
  40839b:	mov    rdx,QWORD PTR [rbp-0x30]
  40839f:	mov    QWORD PTR [rax],rdx
  4083a2:	mov    rax,QWORD PTR [rbp-0x28]
  4083a6:	mov    QWORD PTR [rax],0x0
  4083ad:	mov    DWORD PTR [rbp-0x3c],0x0
  4083b4:	mov    eax,DWORD PTR [rbp-0x38]
  4083b7:	and    eax,0xc0
  4083bc:	cmp    eax,0xc0
  4083c1:	je     408437 <rb_strcasecmp@plt+0x5ec7>
  4083c3:	mov    rax,QWORD PTR [rbp-0x10]
  4083c7:	mov    rdi,rax
  4083ca:	call   407a2f <rb_strcasecmp@plt+0x54bf>
  4083cf:	mov    DWORD PTR [rbp-0x38],eax
  4083d2:	mov    eax,DWORD PTR [rbp-0x38]
  4083d5:	cdqe   
  4083d7:	lea    rdx,[rax+0x1]
  4083db:	mov    rax,QWORD PTR [rbp-0x30]
  4083df:	add    rax,rdx
  4083e2:	cmp    rax,QWORD PTR [rbp-0x8]
  4083e6:	jae    40843a <rb_strcasecmp@plt+0x5eca>
  4083e8:	mov    eax,DWORD PTR [rbp-0x38]
  4083eb:	add    eax,0x1
  4083ee:	movsxd rdx,eax
  4083f1:	mov    rcx,QWORD PTR [rbp-0x10]
  4083f5:	mov    rax,QWORD PTR [rbp-0x30]
  4083f9:	mov    rsi,rcx
  4083fc:	mov    rdi,rax
  4083ff:	call   402560 <memcpy@plt>
  408404:	mov    eax,DWORD PTR [rbp-0x38]
  408407:	cdqe   
  408409:	add    rax,0x1
  40840d:	add    QWORD PTR [rbp-0x10],rax
  408411:	mov    eax,DWORD PTR [rbp-0x38]
  408414:	cdqe   
  408416:	add    rax,0x1
  40841a:	add    QWORD PTR [rbp-0x30],rax
  40841e:	cmp    DWORD PTR [rbp-0x38],0x0
  408422:	jne    4082bf <rb_strcasecmp@plt+0x5d4f>
  408428:	mov    rax,QWORD PTR [rbp-0x30]
  40842c:	cmp    rax,QWORD PTR [rbp-0x8]
  408430:	jbe    40845f <rb_strcasecmp@plt+0x5eef>
  408432:	jmp    40843b <rb_strcasecmp@plt+0x5ecb>
  408434:	nop
  408435:	jmp    40843b <rb_strcasecmp@plt+0x5ecb>
  408437:	nop
  408438:	jmp    40843b <rb_strcasecmp@plt+0x5ecb>
  40843a:	nop
  40843b:	cmp    QWORD PTR [rbp-0x18],0x0
  408440:	je     40844d <rb_strcasecmp@plt+0x5edd>
  408442:	mov    rax,QWORD PTR [rbp-0x20]
  408446:	mov    QWORD PTR [rax],0x0
  40844d:	call   4023c0 <__errno_location@plt>
  408452:	mov    DWORD PTR [rax],0x5a
  408458:	mov    eax,0xffffffff
  40845d:	jmp    40846d <rb_strcasecmp@plt+0x5efd>
  40845f:	mov    rdx,QWORD PTR [rbp-0x30]
  408463:	mov    rax,QWORD PTR [rbp-0x50]
  408467:	sub    rdx,rax
  40846a:	mov    rax,rdx
  40846d:	leave  
  40846e:	ret    
  40846f:	push   rbp
  408470:	mov    rbp,rsp
  408473:	sub    rsp,0x140
  40847a:	mov    QWORD PTR [rbp-0x118],rdi
  408481:	mov    QWORD PTR [rbp-0x120],rsi
  408488:	mov    QWORD PTR [rbp-0x128],rdx
  40848f:	mov    QWORD PTR [rbp-0x130],rcx
  408496:	mov    QWORD PTR [rbp-0x138],r8
  40849d:	mov    rax,QWORD PTR fs:0x28
  4084a6:	mov    QWORD PTR [rbp-0x8],rax
  4084aa:	xor    eax,eax
  4084ac:	lea    rcx,[rbp-0x110]
  4084b3:	mov    rax,QWORD PTR [rbp-0x118]
  4084ba:	mov    edx,0xff
  4084bf:	mov    rsi,rcx
  4084c2:	mov    rdi,rax
  4084c5:	call   407cad <rb_strcasecmp@plt+0x573d>
  4084ca:	cmp    eax,0xffffffff
  4084cd:	jne    4084d6 <rb_strcasecmp@plt+0x5f66>
  4084cf:	mov    eax,0xffffffff
  4084d4:	jmp    40850b <rb_strcasecmp@plt+0x5f9b>
  4084d6:	mov    rax,QWORD PTR [rbp-0x128]
  4084dd:	mov    edi,eax
  4084df:	mov    rcx,QWORD PTR [rbp-0x138]
  4084e6:	mov    rdx,QWORD PTR [rbp-0x130]
  4084ed:	mov    rsi,QWORD PTR [rbp-0x120]
  4084f4:	lea    rax,[rbp-0x110]
  4084fb:	mov    r8,rcx
  4084fe:	mov    rcx,rdx
  408501:	mov    edx,edi
  408503:	mov    rdi,rax
  408506:	call   408176 <rb_strcasecmp@plt+0x5c06>
  40850b:	mov    rdx,QWORD PTR [rbp-0x8]
  40850f:	xor    rdx,QWORD PTR fs:0x28
  408518:	je     40851f <rb_strcasecmp@plt+0x5faf>
  40851a:	call   402400 <__stack_chk_fail@plt>
  40851f:	leave  
  408520:	ret    
  408521:	push   rbp
  408522:	mov    rbp,rsp
  408525:	add    rsp,0xffffffffffffff80
  408529:	mov    QWORD PTR [rbp-0x58],rdi
  40852d:	mov    QWORD PTR [rbp-0x60],rsi
  408531:	mov    QWORD PTR [rbp-0x68],rdx
  408535:	mov    QWORD PTR [rbp-0x70],rcx
  408539:	mov    QWORD PTR [rbp-0x78],r8
  40853d:	mov    rax,QWORD PTR fs:0x28
  408546:	mov    QWORD PTR [rbp-0x8],rax
  40854a:	xor    eax,eax
  40854c:	mov    DWORD PTR [rbp-0x40],0x0
  408553:	mov    rax,QWORD PTR [rbp-0x58]
  408557:	mov    rax,QWORD PTR [rax]
  40855a:	mov    QWORD PTR [rbp-0x20],rax
  40855e:	mov    QWORD PTR [rbp-0x28],0x0
  408566:	mov    DWORD PTR [rbp-0x3c],0x0
  40856d:	mov    DWORD PTR [rbp-0x38],0x0
  408574:	mov    DWORD PTR [rbp-0x34],0x0
  40857b:	mov    DWORD PTR [rbp-0x30],0x0
  408582:	mov    QWORD PTR [rbp-0x28],0x0
  40858a:	mov    QWORD PTR [rbp-0x10],0x0
  408592:	mov    rdx,QWORD PTR [rbp-0x60]
  408596:	mov    rax,QWORD PTR [rbp-0x20]
  40859a:	sub    rdx,rax
  40859d:	mov    rax,rdx
  4085a0:	cmp    rax,0x1
  4085a4:	jg     4085b0 <rb_strcasecmp@plt+0x6040>
  4085a6:	mov    eax,0x16
  4085ab:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  4085b0:	mov    rax,QWORD PTR [rbp-0x20]
  4085b4:	lea    rdx,[rax+0x1]
  4085b8:	mov    QWORD PTR [rbp-0x20],rdx
  4085bc:	movzx  eax,BYTE PTR [rax]
  4085bf:	cmp    al,0x78
  4085c1:	je     4085cd <rb_strcasecmp@plt+0x605d>
  4085c3:	mov    eax,0x16
  4085c8:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  4085cd:	call   402240 <__ctype_b_loc@plt>
  4085d2:	mov    rdx,QWORD PTR [rax]
  4085d5:	mov    rax,QWORD PTR [rbp-0x20]
  4085d9:	movzx  eax,BYTE PTR [rax]
  4085dc:	movsx  rax,al
  4085e0:	movzx  eax,al
  4085e3:	add    rax,rax
  4085e6:	add    rax,rdx
  4085e9:	movzx  eax,WORD PTR [rax]
  4085ec:	movzx  eax,ax
  4085ef:	and    eax,0x1000
  4085f4:	test   eax,eax
  4085f6:	jne    408602 <rb_strcasecmp@plt+0x6092>
  4085f8:	mov    eax,0x16
  4085fd:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  408602:	mov    rax,QWORD PTR [rbp-0x70]
  408606:	add    rax,0x8
  40860a:	mov    QWORD PTR [rbp-0x18],rax
  40860e:	jmp    408789 <rb_strcasecmp@plt+0x6219>
  408613:	mov    rax,QWORD PTR [rbp-0x20]
  408617:	movzx  eax,BYTE PTR [rax]
  40861a:	mov    BYTE PTR [rbp-0x41],al
  40861d:	movsx  eax,BYTE PTR [rbp-0x41]
  408621:	cmp    eax,0x2f
  408624:	je     408696 <rb_strcasecmp@plt+0x6126>
  408626:	cmp    eax,0x5d
  408629:	jne    4086a2 <rb_strcasecmp@plt+0x6132>
  40862b:	cmp    DWORD PTR [rbp-0x40],0x0
  40862f:	je     408672 <rb_strcasecmp@plt+0x6102>
  408631:	cmp    QWORD PTR [rbp-0x10],0x0
  408636:	jne    408642 <rb_strcasecmp@plt+0x60d2>
  408638:	mov    eax,0x16
  40863d:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  408642:	lea    rcx,[rbp-0x28]
  408646:	mov    rax,QWORD PTR [rbp-0x10]
  40864a:	mov    edx,0xa
  40864f:	mov    rsi,rcx
  408652:	mov    rdi,rax
  408655:	call   402310 <strtol@plt>
  40865a:	mov    DWORD PTR [rbp-0x30],eax
  40865d:	mov    rax,QWORD PTR [rbp-0x28]
  408661:	movzx  eax,BYTE PTR [rax]
  408664:	cmp    al,0x5d
  408666:	je     408672 <rb_strcasecmp@plt+0x6102>
  408668:	mov    eax,0x16
  40866d:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  408672:	cmp    DWORD PTR [rbp-0x38],0x0
  408676:	je     40868c <rb_strcasecmp@plt+0x611c>
  408678:	mov    rax,QWORD PTR [rbp-0x18]
  40867c:	lea    rdx,[rax+0x1]
  408680:	mov    QWORD PTR [rbp-0x18],rdx
  408684:	mov    edx,DWORD PTR [rbp-0x3c]
  408687:	shl    edx,0x4
  40868a:	mov    BYTE PTR [rax],dl
  40868c:	add    QWORD PTR [rbp-0x20],0x1
  408691:	jmp    4087a1 <rb_strcasecmp@plt+0x6231>
  408696:	mov    DWORD PTR [rbp-0x40],0x1
  40869d:	jmp    408784 <rb_strcasecmp@plt+0x6214>
  4086a2:	cmp    DWORD PTR [rbp-0x40],0x0
  4086a6:	je     4086ff <rb_strcasecmp@plt+0x618f>
  4086a8:	call   402240 <__ctype_b_loc@plt>
  4086ad:	mov    rax,QWORD PTR [rax]
  4086b0:	movsx  rdx,BYTE PTR [rbp-0x41]
  4086b5:	movzx  edx,dl
  4086b8:	add    rdx,rdx
  4086bb:	add    rax,rdx
  4086be:	movzx  eax,WORD PTR [rax]
  4086c1:	movzx  eax,ax
  4086c4:	and    eax,0x800
  4086c9:	test   eax,eax
  4086cb:	jne    4086d7 <rb_strcasecmp@plt+0x6167>
  4086cd:	mov    eax,0x16
  4086d2:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  4086d7:	cmp    QWORD PTR [rbp-0x10],0x0
  4086dc:	jne    408783 <rb_strcasecmp@plt+0x6213>
  4086e2:	cmp    BYTE PTR [rbp-0x41],0x30
  4086e6:	jne    4086f2 <rb_strcasecmp@plt+0x6182>
  4086e8:	mov    eax,0x16
  4086ed:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  4086f2:	mov    rax,QWORD PTR [rbp-0x20]
  4086f6:	mov    QWORD PTR [rbp-0x10],rax
  4086fa:	jmp    408783 <rb_strcasecmp@plt+0x6213>
  4086ff:	call   402240 <__ctype_b_loc@plt>
  408704:	mov    rax,QWORD PTR [rax]
  408707:	movsx  rdx,BYTE PTR [rbp-0x41]
  40870c:	movzx  edx,dl
  40870f:	add    rdx,rdx
  408712:	add    rax,rdx
  408715:	movzx  eax,WORD PTR [rax]
  408718:	movzx  eax,ax
  40871b:	and    eax,0x1000
  408720:	test   eax,eax
  408722:	jne    40872e <rb_strcasecmp@plt+0x61be>
  408724:	mov    eax,0x16
  408729:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  40872e:	shl    DWORD PTR [rbp-0x3c],0x4
  408732:	movsx  eax,BYTE PTR [rbp-0x41]
  408736:	movsxd rdx,eax
  408739:	lea    rax,[rip+0x7080]        # 40f7c0 <rb_strcasecmp@plt+0xd250>
  408740:	movzx  eax,BYTE PTR [rdx+rax*1]
  408744:	movsx  eax,al
  408747:	add    DWORD PTR [rbp-0x3c],eax
  40874a:	add    DWORD PTR [rbp-0x38],0x4
  40874e:	add    DWORD PTR [rbp-0x34],0x4
  408752:	cmp    DWORD PTR [rbp-0x34],0x100
  408759:	jle    408765 <rb_strcasecmp@plt+0x61f5>
  40875b:	mov    eax,0x16
  408760:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  408765:	cmp    DWORD PTR [rbp-0x38],0x8
  408769:	jne    408783 <rb_strcasecmp@plt+0x6213>
  40876b:	mov    rax,QWORD PTR [rbp-0x18]
  40876f:	lea    rdx,[rax+0x1]
  408773:	mov    QWORD PTR [rbp-0x18],rdx
  408777:	mov    edx,DWORD PTR [rbp-0x3c]
  40877a:	mov    BYTE PTR [rax],dl
  40877c:	mov    DWORD PTR [rbp-0x38],0x0
  408783:	nop
  408784:	add    QWORD PTR [rbp-0x20],0x1
  408789:	mov    rax,QWORD PTR [rbp-0x20]
  40878d:	cmp    rax,QWORD PTR [rbp-0x60]
  408791:	jae    4087a1 <rb_strcasecmp@plt+0x6231>
  408793:	mov    rax,QWORD PTR [rbp-0x18]
  408797:	cmp    rax,QWORD PTR [rbp-0x78]
  40879b:	jb     408613 <rb_strcasecmp@plt+0x60a3>
  4087a1:	mov    rax,QWORD PTR [rbp-0x20]
  4087a5:	cmp    rax,QWORD PTR [rbp-0x60]
  4087a9:	jae    4087b5 <rb_strcasecmp@plt+0x6245>
  4087ab:	mov    rax,QWORD PTR [rbp-0x18]
  4087af:	cmp    rax,QWORD PTR [rbp-0x78]
  4087b3:	jb     4087bf <rb_strcasecmp@plt+0x624f>
  4087b5:	mov    eax,0x5a
  4087ba:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  4087bf:	cmp    DWORD PTR [rbp-0x30],0x0
  4087c3:	jle    408801 <rb_strcasecmp@plt+0x6291>
  4087c5:	mov    eax,DWORD PTR [rbp-0x30]
  4087c8:	add    eax,0x3
  4087cb:	and    eax,0xfffffffc
  4087ce:	cmp    eax,DWORD PTR [rbp-0x34]
  4087d1:	je     4087da <rb_strcasecmp@plt+0x626a>
  4087d3:	mov    eax,0x16
  4087d8:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  4087da:	mov    eax,DWORD PTR [rbp-0x34]
  4087dd:	sub    eax,DWORD PTR [rbp-0x30]
  4087e0:	mov    DWORD PTR [rbp-0x2c],eax
  4087e3:	mov    eax,0x8
  4087e8:	sub    eax,DWORD PTR [rbp-0x2c]
  4087eb:	mov    edx,DWORD PTR [rbp-0x3c]
  4087ee:	shlx   eax,edx,eax
  4087f3:	movzx  eax,al
  4087f6:	test   eax,eax
  4087f8:	je     408807 <rb_strcasecmp@plt+0x6297>
  4087fa:	mov    eax,0x16
  4087ff:	jmp    408848 <rb_strcasecmp@plt+0x62d8>
  408801:	mov    eax,DWORD PTR [rbp-0x34]
  408804:	mov    DWORD PTR [rbp-0x30],eax
  408807:	cmp    DWORD PTR [rbp-0x30],0x100
  40880e:	jne    408817 <rb_strcasecmp@plt+0x62a7>
  408810:	mov    DWORD PTR [rbp-0x30],0x0
  408817:	mov    rax,QWORD PTR [rbp-0x68]
  40881b:	mov    rax,QWORD PTR [rax]
  40881e:	mov    BYTE PTR [rax],0x41
  408821:	mov    rax,QWORD PTR [rbp-0x70]
  408825:	mov    rax,QWORD PTR [rax]
  408828:	mov    edx,DWORD PTR [rbp-0x30]
  40882b:	mov    BYTE PTR [rax],dl
  40882d:	mov    rax,QWORD PTR [rbp-0x58]
  408831:	mov    rdx,QWORD PTR [rbp-0x20]
  408835:	mov    QWORD PTR [rax],rdx
  408838:	mov    rax,QWORD PTR [rbp-0x70]
  40883c:	mov    rdx,QWORD PTR [rbp-0x18]
  408840:	mov    QWORD PTR [rax],rdx
  408843:	mov    eax,0x0
  408848:	mov    rsi,QWORD PTR [rbp-0x8]
  40884c:	xor    rsi,QWORD PTR fs:0x28
  408855:	je     40885c <rb_strcasecmp@plt+0x62ec>
  408857:	call   402400 <__stack_chk_fail@plt>
  40885c:	leave  
  40885d:	ret    
  40885e:	push   rbp
  40885f:	mov    rbp,rsp
  408862:	push   rbx
  408863:	sub    rsp,0x58
  408867:	mov    QWORD PTR [rbp-0x48],rdi
  40886b:	mov    QWORD PTR [rbp-0x50],rsi
  40886f:	mov    QWORD PTR [rbp-0x58],rdx
  408873:	mov    QWORD PTR [rbp-0x60],rcx
  408877:	mov    rax,QWORD PTR [rbp-0x58]
  40887b:	mov    QWORD PTR [rbp-0x18],rax
  40887f:	jmp    408a25 <rb_strcasecmp@plt+0x64b5>
  408884:	mov    rax,QWORD PTR [rbp-0x18]
  408888:	mov    rax,QWORD PTR [rax]
  40888b:	mov    QWORD PTR [rbp-0x20],rax
  40888f:	jmp    4089e8 <rb_strcasecmp@plt+0x6478>
  408894:	mov    rax,QWORD PTR [rbp-0x48]
  408898:	mov    QWORD PTR [rbp-0x30],rax
  40889c:	mov    rax,QWORD PTR [rbp-0x20]
  4088a0:	mov    QWORD PTR [rbp-0x28],rax
  4088a4:	jmp    4089ae <rb_strcasecmp@plt+0x643e>
  4088a9:	mov    eax,DWORD PTR [rbp-0x34]
  4088ac:	and    eax,0xc0
  4088b1:	test   eax,eax
  4088b3:	je     4088c5 <rb_strcasecmp@plt+0x6355>
  4088b5:	cmp    eax,0xc0
  4088ba:	je     408971 <rb_strcasecmp@plt+0x6401>
  4088c0:	jmp    408999 <rb_strcasecmp@plt+0x6429>
  4088c5:	mov    rax,QWORD PTR [rbp-0x28]
  4088c9:	sub    rax,0x1
  4088cd:	mov    rdi,rax
  4088d0:	call   407a2f <rb_strcasecmp@plt+0x54bf>
  4088d5:	mov    DWORD PTR [rbp-0x34],eax
  4088d8:	mov    rax,QWORD PTR [rbp-0x30]
  4088dc:	lea    rdx,[rax+0x1]
  4088e0:	mov    QWORD PTR [rbp-0x30],rdx
  4088e4:	movzx  eax,BYTE PTR [rax]
  4088e7:	movzx  eax,al
  4088ea:	cmp    eax,DWORD PTR [rbp-0x34]
  4088ed:	jne    4089cf <rb_strcasecmp@plt+0x645f>
  4088f3:	jmp    408935 <rb_strcasecmp@plt+0x63c5>
  4088f5:	mov    rax,QWORD PTR [rbp-0x30]
  4088f9:	lea    rdx,[rax+0x1]
  4088fd:	mov    QWORD PTR [rbp-0x30],rdx
  408901:	movzx  eax,BYTE PTR [rax]
  408904:	movzx  eax,al
  408907:	mov    edi,eax
  408909:	call   408a4a <rb_strcasecmp@plt+0x64da>
  40890e:	mov    ebx,eax
  408910:	mov    rax,QWORD PTR [rbp-0x28]
  408914:	lea    rdx,[rax+0x1]
  408918:	mov    QWORD PTR [rbp-0x28],rdx
  40891c:	movzx  eax,BYTE PTR [rax]
  40891f:	movzx  eax,al
  408922:	mov    edi,eax
  408924:	call   408a4a <rb_strcasecmp@plt+0x64da>
  408929:	cmp    ebx,eax
  40892b:	jne    4089d2 <rb_strcasecmp@plt+0x6462>
  408931:	sub    DWORD PTR [rbp-0x34],0x1
  408935:	cmp    DWORD PTR [rbp-0x34],0x0
  408939:	jne    4088f5 <rb_strcasecmp@plt+0x6385>
  40893b:	mov    rax,QWORD PTR [rbp-0x30]
  40893f:	movzx  eax,BYTE PTR [rax]
  408942:	test   al,al
  408944:	jne    408964 <rb_strcasecmp@plt+0x63f4>
  408946:	mov    rax,QWORD PTR [rbp-0x28]
  40894a:	movzx  eax,BYTE PTR [rax]
  40894d:	test   al,al
  40894f:	jne    408964 <rb_strcasecmp@plt+0x63f4>
  408951:	mov    rdx,QWORD PTR [rbp-0x20]
  408955:	mov    rax,QWORD PTR [rbp-0x50]
  408959:	sub    rdx,rax
  40895c:	mov    rax,rdx
  40895f:	jmp    408a43 <rb_strcasecmp@plt+0x64d3>
  408964:	mov    rax,QWORD PTR [rbp-0x30]
  408968:	movzx  eax,BYTE PTR [rax]
  40896b:	test   al,al
  40896d:	je     4089d5 <rb_strcasecmp@plt+0x6465>
  40896f:	jmp    4089ae <rb_strcasecmp@plt+0x643e>
  408971:	mov    eax,DWORD PTR [rbp-0x34]
  408974:	shl    eax,0x8
  408977:	and    eax,0x3f00
  40897c:	mov    edx,eax
  40897e:	mov    rax,QWORD PTR [rbp-0x28]
  408982:	movzx  eax,BYTE PTR [rax]
  408985:	movzx  eax,al
  408988:	or     eax,edx
  40898a:	mov    edx,eax
  40898c:	mov    rax,QWORD PTR [rbp-0x50]
  408990:	add    rax,rdx
  408993:	mov    QWORD PTR [rbp-0x28],rax
  408997:	jmp    4089ae <rb_strcasecmp@plt+0x643e>
  408999:	call   4023c0 <__errno_location@plt>
  40899e:	mov    DWORD PTR [rax],0x5a
  4089a4:	mov    eax,0xffffffff
  4089a9:	jmp    408a43 <rb_strcasecmp@plt+0x64d3>
  4089ae:	mov    rax,QWORD PTR [rbp-0x28]
  4089b2:	lea    rdx,[rax+0x1]
  4089b6:	mov    QWORD PTR [rbp-0x28],rdx
  4089ba:	movzx  eax,BYTE PTR [rax]
  4089bd:	movzx  eax,al
  4089c0:	mov    DWORD PTR [rbp-0x34],eax
  4089c3:	cmp    DWORD PTR [rbp-0x34],0x0
  4089c7:	jne    4088a9 <rb_strcasecmp@plt+0x6339>
  4089cd:	jmp    4089d6 <rb_strcasecmp@plt+0x6466>
  4089cf:	nop
  4089d0:	jmp    4089d6 <rb_strcasecmp@plt+0x6466>
  4089d2:	nop
  4089d3:	jmp    4089d6 <rb_strcasecmp@plt+0x6466>
  4089d5:	nop
  4089d6:	mov    rax,QWORD PTR [rbp-0x20]
  4089da:	movzx  eax,BYTE PTR [rax]
  4089dd:	movzx  eax,al
  4089e0:	add    rax,0x1
  4089e4:	add    QWORD PTR [rbp-0x20],rax
  4089e8:	mov    rax,QWORD PTR [rbp-0x20]
  4089ec:	movzx  eax,BYTE PTR [rax]
  4089ef:	test   al,al
  4089f1:	je     408a20 <rb_strcasecmp@plt+0x64b0>
  4089f3:	mov    rax,QWORD PTR [rbp-0x20]
  4089f7:	movzx  eax,BYTE PTR [rax]
  4089fa:	movzx  eax,al
  4089fd:	and    eax,0xc0
  408a02:	test   eax,eax
  408a04:	jne    408a20 <rb_strcasecmp@plt+0x64b0>
  408a06:	mov    rdx,QWORD PTR [rbp-0x20]
  408a0a:	mov    rax,QWORD PTR [rbp-0x50]
  408a0e:	sub    rdx,rax
  408a11:	mov    rax,rdx
  408a14:	cmp    rax,0x3fff
  408a1a:	jle    408894 <rb_strcasecmp@plt+0x6324>
  408a20:	add    QWORD PTR [rbp-0x18],0x8
  408a25:	mov    rax,QWORD PTR [rbp-0x18]
  408a29:	cmp    rax,QWORD PTR [rbp-0x60]
  408a2d:	jb     408884 <rb_strcasecmp@plt+0x6314>
  408a33:	call   4023c0 <__errno_location@plt>
  408a38:	mov    DWORD PTR [rax],0x2
  408a3e:	mov    eax,0xffffffff
  408a43:	add    rsp,0x58
  408a47:	pop    rbx
  408a48:	pop    rbp
  408a49:	ret    
  408a4a:	push   rbp
  408a4b:	mov    rbp,rsp
  408a4e:	mov    DWORD PTR [rbp-0x4],edi
  408a51:	cmp    DWORD PTR [rbp-0x4],0x40
  408a55:	jle    408a65 <rb_strcasecmp@plt+0x64f5>
  408a57:	cmp    DWORD PTR [rbp-0x4],0x5a
  408a5b:	jg     408a65 <rb_strcasecmp@plt+0x64f5>
  408a5d:	mov    eax,DWORD PTR [rbp-0x4]
  408a60:	add    eax,0x20
  408a63:	jmp    408a68 <rb_strcasecmp@plt+0x64f8>
  408a65:	mov    eax,DWORD PTR [rbp-0x4]
  408a68:	pop    rbp
  408a69:	ret    
  408a6a:	push   rbp
  408a6b:	mov    rbp,rsp
  408a6e:	sub    rsp,0x110
  408a75:	mov    QWORD PTR [rbp-0xf8],rdi
  408a7c:	mov    DWORD PTR [rbp-0xfc],esi
  408a82:	mov    DWORD PTR [rbp-0x100],edx
  408a88:	mov    QWORD PTR [rbp-0x108],rcx
  408a8f:	mov    DWORD PTR [rbp-0x10c],r8d
  408a96:	mov    rax,QWORD PTR fs:0x28
  408a9f:	mov    QWORD PTR [rbp-0x8],rax
  408aa3:	xor    eax,eax
  408aa5:	cmp    QWORD PTR [rbp-0x108],0x0
  408aad:	je     408ab8 <rb_strcasecmp@plt+0x6548>
  408aaf:	cmp    DWORD PTR [rbp-0x10c],0xb
  408ab6:	jg     408ac2 <rb_strcasecmp@plt+0x6552>
  408ab8:	mov    eax,0xffffffff
  408abd:	jmp    408ce6 <rb_strcasecmp@plt+0x6776>
  408ac2:	mov    rax,QWORD PTR [rbp-0x108]
  408ac9:	mov    edx,0xc
  408ace:	mov    esi,0x0
  408ad3:	mov    rdi,rax
  408ad6:	call   402040 <memset@plt>
  408adb:	mov    rax,QWORD PTR [rbp-0x108]
  408ae2:	mov    QWORD PTR [rbp-0xe0],rax
  408ae9:	mov    rax,QWORD PTR [rbp-0xe0]
  408af0:	mov    WORD PTR [rax],0x0
  408af5:	mov    rax,QWORD PTR [rbp-0xe0]
  408afc:	movzx  edx,BYTE PTR [rax+0x2]
  408b00:	and    edx,0xffffff87
  408b03:	mov    BYTE PTR [rax+0x2],dl
  408b06:	mov    rax,QWORD PTR [rbp-0xe0]
  408b0d:	movzx  edx,BYTE PTR [rax+0x2]
  408b11:	or     edx,0x1
  408b14:	mov    BYTE PTR [rax+0x2],dl
  408b17:	mov    rax,QWORD PTR [rbp-0xe0]
  408b1e:	movzx  edx,BYTE PTR [rax+0x3]
  408b22:	and    edx,0xfffffff0
  408b25:	mov    BYTE PTR [rax+0x3],dl
  408b28:	mov    rax,QWORD PTR [rbp-0x108]
  408b2f:	add    rax,0xc
  408b33:	mov    QWORD PTR [rbp-0xd8],rax
  408b3a:	sub    DWORD PTR [rbp-0x10c],0xc
  408b41:	lea    rax,[rbp-0xb0]
  408b48:	mov    QWORD PTR [rbp-0xd0],rax
  408b4f:	mov    rax,QWORD PTR [rbp-0xd0]
  408b56:	lea    rdx,[rax+0x8]
  408b5a:	mov    QWORD PTR [rbp-0xd0],rdx
  408b61:	mov    rdx,QWORD PTR [rbp-0x108]
  408b68:	mov    QWORD PTR [rax],rdx
  408b6b:	mov    rax,QWORD PTR [rbp-0xd0]
  408b72:	lea    rdx,[rax+0x8]
  408b76:	mov    QWORD PTR [rbp-0xd0],rdx
  408b7d:	mov    QWORD PTR [rax],0x0
  408b84:	lea    rax,[rbp-0xb0]
  408b8b:	add    rax,0xa0
  408b91:	mov    QWORD PTR [rbp-0xc8],rax
  408b98:	sub    DWORD PTR [rbp-0x10c],0x4
  408b9f:	cmp    DWORD PTR [rbp-0x10c],0x0
  408ba6:	jns    408bb2 <rb_strcasecmp@plt+0x6642>
  408ba8:	mov    eax,0xffffffff
  408bad:	jmp    408ce6 <rb_strcasecmp@plt+0x6776>
  408bb2:	mov    rdi,QWORD PTR [rbp-0xc8]
  408bb9:	lea    rcx,[rbp-0xb0]
  408bc0:	mov    edx,DWORD PTR [rbp-0x10c]
  408bc6:	mov    rsi,QWORD PTR [rbp-0xd8]
  408bcd:	mov    rax,QWORD PTR [rbp-0xf8]
  408bd4:	mov    r8,rdi
  408bd7:	mov    rdi,rax
  408bda:	call   40772f <rb_strcasecmp@plt+0x51bf>
  408bdf:	mov    DWORD PTR [rbp-0xe4],eax
  408be5:	cmp    DWORD PTR [rbp-0xe4],0x0
  408bec:	jns    408bf8 <rb_strcasecmp@plt+0x6688>
  408bee:	mov    eax,0xffffffff
  408bf3:	jmp    408ce6 <rb_strcasecmp@plt+0x6776>
  408bf8:	mov    eax,DWORD PTR [rbp-0xe4]
  408bfe:	cdqe   
  408c00:	add    QWORD PTR [rbp-0xd8],rax
  408c07:	mov    eax,DWORD PTR [rbp-0xe4]
  408c0d:	sub    DWORD PTR [rbp-0x10c],eax
  408c13:	mov    eax,DWORD PTR [rbp-0x100]
  408c19:	mov    WORD PTR [rbp-0xe8],ax
  408c20:	mov    rax,QWORD PTR [rbp-0xd8]
  408c27:	mov    QWORD PTR [rbp-0xc0],rax
  408c2e:	mov    rax,QWORD PTR [rbp-0xc0]
  408c35:	lea    rdx,[rax+0x1]
  408c39:	mov    QWORD PTR [rbp-0xc0],rdx
  408c40:	movzx  edx,WORD PTR [rbp-0xe8]
  408c47:	shr    dx,0x8
  408c4b:	mov    BYTE PTR [rax],dl
  408c4d:	movzx  eax,WORD PTR [rbp-0xe8]
  408c54:	mov    edx,eax
  408c56:	mov    rax,QWORD PTR [rbp-0xc0]
  408c5d:	mov    BYTE PTR [rax],dl
  408c5f:	add    QWORD PTR [rbp-0xd8],0x2
  408c67:	mov    eax,DWORD PTR [rbp-0xfc]
  408c6d:	mov    WORD PTR [rbp-0xe6],ax
  408c74:	mov    rax,QWORD PTR [rbp-0xd8]
  408c7b:	mov    QWORD PTR [rbp-0xb8],rax
  408c82:	mov    rax,QWORD PTR [rbp-0xb8]
  408c89:	lea    rdx,[rax+0x1]
  408c8d:	mov    QWORD PTR [rbp-0xb8],rdx
  408c94:	movzx  edx,WORD PTR [rbp-0xe6]
  408c9b:	shr    dx,0x8
  408c9f:	mov    BYTE PTR [rax],dl
  408ca1:	movzx  eax,WORD PTR [rbp-0xe6]
  408ca8:	mov    edx,eax
  408caa:	mov    rax,QWORD PTR [rbp-0xb8]
  408cb1:	mov    BYTE PTR [rax],dl
  408cb3:	add    QWORD PTR [rbp-0xd8],0x2
  408cbb:	mov    edi,0x1
  408cc0:	call   4020d0 <htons@plt>
  408cc5:	mov    edx,eax
  408cc7:	mov    rax,QWORD PTR [rbp-0xe0]
  408cce:	mov    WORD PTR [rax+0x4],dx
  408cd2:	mov    rdx,QWORD PTR [rbp-0xd8]
  408cd9:	mov    rax,QWORD PTR [rbp-0x108]
  408ce0:	sub    rdx,rax
  408ce3:	mov    rax,rdx
  408ce6:	mov    rcx,QWORD PTR [rbp-0x8]
  408cea:	xor    rcx,QWORD PTR fs:0x28
  408cf3:	je     408cfa <rb_strcasecmp@plt+0x678a>
  408cf5:	call   402400 <__stack_chk_fail@plt>
  408cfa:	leave  
  408cfb:	ret    
  408cfc:	push   rbp
  408cfd:	mov    rbp,rsp
  408d00:	sub    rsp,0x20
  408d04:	mov    QWORD PTR [rbp-0x8],rdi
  408d08:	mov    QWORD PTR [rbp-0x10],rsi
  408d0c:	mov    QWORD PTR [rbp-0x18],rdx
  408d10:	cmp    QWORD PTR [rbp-0x8],0x0
  408d15:	jne    408d36 <rb_strcasecmp@plt+0x67c6>
  408d17:	lea    rcx,[rip+0x702a]        # 40fd48 <rb_strcasecmp@plt+0xd7d8>
  408d1e:	mov    edx,0x8f
  408d23:	lea    rsi,[rip+0x6cd6]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408d2a:	lea    rdi,[rip+0x6ceb]        # 40fa1c <rb_strcasecmp@plt+0xd4ac>
  408d31:	call   4020f0 <__assert_fail@plt>
  408d36:	cmp    QWORD PTR [rbp-0x10],0x0
  408d3b:	jne    408d5c <rb_strcasecmp@plt+0x67ec>
  408d3d:	lea    rcx,[rip+0x7004]        # 40fd48 <rb_strcasecmp@plt+0xd7d8>
  408d44:	mov    edx,0x90
  408d49:	lea    rsi,[rip+0x6cb0]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408d50:	lea    rdi,[rip+0x6cd2]        # 40fa29 <rb_strcasecmp@plt+0xd4b9>
  408d57:	call   4020f0 <__assert_fail@plt>
  408d5c:	cmp    QWORD PTR [rbp-0x18],0x0
  408d61:	jne    408d82 <rb_strcasecmp@plt+0x6812>
  408d63:	lea    rcx,[rip+0x6fde]        # 40fd48 <rb_strcasecmp@plt+0xd7d8>
  408d6a:	mov    edx,0x91
  408d6f:	lea    rsi,[rip+0x6c8a]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408d76:	lea    rdi,[rip+0x6cb6]        # 40fa33 <rb_strcasecmp@plt+0xd4c3>
  408d7d:	call   4020f0 <__assert_fail@plt>
  408d82:	mov    rax,QWORD PTR [rbp-0x10]
  408d86:	mov    rdx,QWORD PTR [rbp-0x8]
  408d8a:	mov    QWORD PTR [rax],rdx
  408d8d:	mov    rax,QWORD PTR [rbp-0x10]
  408d91:	mov    QWORD PTR [rax+0x8],0x0
  408d99:	mov    rax,QWORD PTR [rbp-0x18]
  408d9d:	mov    rdx,QWORD PTR [rax]
  408da0:	mov    rax,QWORD PTR [rbp-0x10]
  408da4:	mov    QWORD PTR [rax+0x10],rdx
  408da8:	mov    rax,QWORD PTR [rbp-0x18]
  408dac:	mov    rax,QWORD PTR [rax]
  408daf:	test   rax,rax
  408db2:	je     408dc5 <rb_strcasecmp@plt+0x6855>
  408db4:	mov    rax,QWORD PTR [rbp-0x18]
  408db8:	mov    rax,QWORD PTR [rax]
  408dbb:	mov    rdx,QWORD PTR [rbp-0x10]
  408dbf:	mov    QWORD PTR [rax+0x8],rdx
  408dc3:	jmp    408dde <rb_strcasecmp@plt+0x686e>
  408dc5:	mov    rax,QWORD PTR [rbp-0x18]
  408dc9:	mov    rax,QWORD PTR [rax+0x8]
  408dcd:	test   rax,rax
  408dd0:	jne    408dde <rb_strcasecmp@plt+0x686e>
  408dd2:	mov    rax,QWORD PTR [rbp-0x18]
  408dd6:	mov    rdx,QWORD PTR [rbp-0x10]
  408dda:	mov    QWORD PTR [rax+0x8],rdx
  408dde:	mov    rax,QWORD PTR [rbp-0x18]
  408de2:	mov    rdx,QWORD PTR [rbp-0x10]
  408de6:	mov    QWORD PTR [rax],rdx
  408de9:	mov    rax,QWORD PTR [rbp-0x18]
  408ded:	mov    rax,QWORD PTR [rax+0x10]
  408df1:	lea    rdx,[rax+0x1]
  408df5:	mov    rax,QWORD PTR [rbp-0x18]
  408df9:	mov    QWORD PTR [rax+0x10],rdx
  408dfd:	nop
  408dfe:	leave  
  408dff:	ret    
  408e00:	push   rbp
  408e01:	mov    rbp,rsp
  408e04:	sub    rsp,0x10
  408e08:	mov    QWORD PTR [rbp-0x8],rdi
  408e0c:	mov    QWORD PTR [rbp-0x10],rsi
  408e10:	cmp    QWORD PTR [rbp-0x8],0x0
  408e15:	jne    408e36 <rb_strcasecmp@plt+0x68c6>
  408e17:	lea    rcx,[rip+0x6eda]        # 40fcf8 <rb_strcasecmp@plt+0xd788>
  408e1e:	mov    edx,0xeb
  408e23:	lea    rsi,[rip+0x6bd6]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408e2a:	lea    rdi,[rip+0x6bf8]        # 40fa29 <rb_strcasecmp@plt+0xd4b9>
  408e31:	call   4020f0 <__assert_fail@plt>
  408e36:	cmp    QWORD PTR [rbp-0x10],0x0
  408e3b:	jne    408e5c <rb_strcasecmp@plt+0x68ec>
  408e3d:	lea    rcx,[rip+0x6eb4]        # 40fcf8 <rb_strcasecmp@plt+0xd788>
  408e44:	mov    edx,0xec
  408e49:	lea    rsi,[rip+0x6bb0]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408e50:	lea    rdi,[rip+0x6bdc]        # 40fa33 <rb_strcasecmp@plt+0xd4c3>
  408e57:	call   4020f0 <__assert_fail@plt>
  408e5c:	mov    rax,QWORD PTR [rbp-0x8]
  408e60:	mov    rax,QWORD PTR [rax+0x10]
  408e64:	test   rax,rax
  408e67:	je     408e7f <rb_strcasecmp@plt+0x690f>
  408e69:	mov    rax,QWORD PTR [rbp-0x8]
  408e6d:	mov    rax,QWORD PTR [rax+0x10]
  408e71:	mov    rdx,QWORD PTR [rbp-0x8]
  408e75:	mov    rdx,QWORD PTR [rdx+0x8]
  408e79:	mov    QWORD PTR [rax+0x8],rdx
  408e7d:	jmp    408e8f <rb_strcasecmp@plt+0x691f>
  408e7f:	mov    rax,QWORD PTR [rbp-0x8]
  408e83:	mov    rdx,QWORD PTR [rax+0x8]
  408e87:	mov    rax,QWORD PTR [rbp-0x10]
  408e8b:	mov    QWORD PTR [rax+0x8],rdx
  408e8f:	mov    rax,QWORD PTR [rbp-0x8]
  408e93:	mov    rax,QWORD PTR [rax+0x8]
  408e97:	test   rax,rax
  408e9a:	je     408eb2 <rb_strcasecmp@plt+0x6942>
  408e9c:	mov    rax,QWORD PTR [rbp-0x8]
  408ea0:	mov    rax,QWORD PTR [rax+0x8]
  408ea4:	mov    rdx,QWORD PTR [rbp-0x8]
  408ea8:	mov    rdx,QWORD PTR [rdx+0x10]
  408eac:	mov    QWORD PTR [rax+0x10],rdx
  408eb0:	jmp    408ec1 <rb_strcasecmp@plt+0x6951>
  408eb2:	mov    rax,QWORD PTR [rbp-0x8]
  408eb6:	mov    rdx,QWORD PTR [rax+0x10]
  408eba:	mov    rax,QWORD PTR [rbp-0x10]
  408ebe:	mov    QWORD PTR [rax],rdx
  408ec1:	mov    rax,QWORD PTR [rbp-0x8]
  408ec5:	mov    QWORD PTR [rax+0x8],0x0
  408ecd:	mov    rax,QWORD PTR [rbp-0x8]
  408ed1:	mov    rdx,QWORD PTR [rax+0x8]
  408ed5:	mov    rax,QWORD PTR [rbp-0x8]
  408ed9:	mov    QWORD PTR [rax+0x10],rdx
  408edd:	mov    rax,QWORD PTR [rbp-0x10]
  408ee1:	mov    rax,QWORD PTR [rax+0x10]
  408ee5:	lea    rdx,[rax-0x1]
  408ee9:	mov    rax,QWORD PTR [rbp-0x10]
  408eed:	mov    QWORD PTR [rax+0x10],rdx
  408ef1:	nop
  408ef2:	leave  
  408ef3:	ret    
  408ef4:	push   rbp
  408ef5:	mov    rbp,rsp
  408ef8:	sub    rsp,0x20
  408efc:	mov    QWORD PTR [rbp-0x18],rdi
  408f00:	mov    QWORD PTR [rbp-0x20],rsi
  408f04:	cmp    QWORD PTR [rbp-0x20],0x0
  408f09:	jne    408f2a <rb_strcasecmp@plt+0x69ba>
  408f0b:	lea    rcx,[rip+0x6e1e]        # 40fd30 <rb_strcasecmp@plt+0xd7c0>
  408f12:	mov    edx,0x102
  408f17:	lea    rsi,[rip+0x6ae2]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408f1e:	lea    rdi,[rip+0x6b0e]        # 40fa33 <rb_strcasecmp@plt+0xd4c3>
  408f25:	call   4020f0 <__assert_fail@plt>
  408f2a:	cmp    QWORD PTR [rbp-0x18],0x0
  408f2f:	jne    408f50 <rb_strcasecmp@plt+0x69e0>
  408f31:	lea    rcx,[rip+0x6df8]        # 40fd30 <rb_strcasecmp@plt+0xd7c0>
  408f38:	mov    edx,0x103
  408f3d:	lea    rsi,[rip+0x6abc]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  408f44:	lea    rdi,[rip+0x6ad1]        # 40fa1c <rb_strcasecmp@plt+0xd4ac>
  408f4b:	call   4020f0 <__assert_fail@plt>
  408f50:	mov    rax,QWORD PTR [rbp-0x20]
  408f54:	mov    rax,QWORD PTR [rax]
  408f57:	mov    QWORD PTR [rbp-0x8],rax
  408f5b:	jmp    409019 <rb_strcasecmp@plt+0x6aa9>
  408f60:	mov    rax,QWORD PTR [rbp-0x8]
  408f64:	mov    rax,QWORD PTR [rax]
  408f67:	cmp    rax,QWORD PTR [rbp-0x18]
  408f6b:	je     408f7e <rb_strcasecmp@plt+0x6a0e>
  408f6d:	mov    rax,QWORD PTR [rbp-0x8]
  408f71:	mov    rax,QWORD PTR [rax+0x10]
  408f75:	mov    QWORD PTR [rbp-0x8],rax
  408f79:	jmp    409019 <rb_strcasecmp@plt+0x6aa9>
  408f7e:	mov    rax,QWORD PTR [rbp-0x8]
  408f82:	mov    rax,QWORD PTR [rax+0x10]
  408f86:	test   rax,rax
  408f89:	je     408fa1 <rb_strcasecmp@plt+0x6a31>
  408f8b:	mov    rax,QWORD PTR [rbp-0x8]
  408f8f:	mov    rax,QWORD PTR [rax+0x10]
  408f93:	mov    rdx,QWORD PTR [rbp-0x8]
  408f97:	mov    rdx,QWORD PTR [rdx+0x8]
  408f9b:	mov    QWORD PTR [rax+0x8],rdx
  408f9f:	jmp    408fb1 <rb_strcasecmp@plt+0x6a41>
  408fa1:	mov    rax,QWORD PTR [rbp-0x8]
  408fa5:	mov    rdx,QWORD PTR [rax+0x8]
  408fa9:	mov    rax,QWORD PTR [rbp-0x20]
  408fad:	mov    QWORD PTR [rax+0x8],rdx
  408fb1:	mov    rax,QWORD PTR [rbp-0x8]
  408fb5:	mov    rax,QWORD PTR [rax+0x8]
  408fb9:	test   rax,rax
  408fbc:	je     408fd4 <rb_strcasecmp@plt+0x6a64>
  408fbe:	mov    rax,QWORD PTR [rbp-0x8]
  408fc2:	mov    rax,QWORD PTR [rax+0x8]
  408fc6:	mov    rdx,QWORD PTR [rbp-0x8]
  408fca:	mov    rdx,QWORD PTR [rdx+0x10]
  408fce:	mov    QWORD PTR [rax+0x10],rdx
  408fd2:	jmp    408fe3 <rb_strcasecmp@plt+0x6a73>
  408fd4:	mov    rax,QWORD PTR [rbp-0x8]
  408fd8:	mov    rdx,QWORD PTR [rax+0x10]
  408fdc:	mov    rax,QWORD PTR [rbp-0x20]
  408fe0:	mov    QWORD PTR [rax],rdx
  408fe3:	mov    rax,QWORD PTR [rbp-0x8]
  408fe7:	mov    QWORD PTR [rax+0x8],0x0
  408fef:	mov    rax,QWORD PTR [rbp-0x8]
  408ff3:	mov    rdx,QWORD PTR [rax+0x8]
  408ff7:	mov    rax,QWORD PTR [rbp-0x8]
  408ffb:	mov    QWORD PTR [rax+0x10],rdx
  408fff:	mov    rax,QWORD PTR [rbp-0x20]
  409003:	mov    rax,QWORD PTR [rax+0x10]
  409007:	lea    rdx,[rax-0x1]
  40900b:	mov    rax,QWORD PTR [rbp-0x20]
  40900f:	mov    QWORD PTR [rax+0x10],rdx
  409013:	mov    rax,QWORD PTR [rbp-0x8]
  409017:	jmp    409029 <rb_strcasecmp@plt+0x6ab9>
  409019:	cmp    QWORD PTR [rbp-0x8],0x0
  40901e:	jne    408f60 <rb_strcasecmp@plt+0x69f0>
  409024:	mov    eax,0x0
  409029:	leave  
  40902a:	ret    
  40902b:	push   rbp
  40902c:	mov    rbp,rsp
  40902f:	sub    rsp,0x20
  409033:	mov    QWORD PTR [rbp-0x18],rdi
  409037:	mov    QWORD PTR [rbp-0x20],rsi
  40903b:	cmp    QWORD PTR [rbp-0x20],0x0
  409040:	jne    409061 <rb_strcasecmp@plt+0x6af1>
  409042:	lea    rcx,[rip+0x6cc7]        # 40fd10 <rb_strcasecmp@plt+0xd7a0>
  409049:	mov    edx,0x11f
  40904e:	lea    rsi,[rip+0x69ab]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  409055:	lea    rdi,[rip+0x69d7]        # 40fa33 <rb_strcasecmp@plt+0xd4c3>
  40905c:	call   4020f0 <__assert_fail@plt>
  409061:	cmp    QWORD PTR [rbp-0x18],0x0
  409066:	jne    409087 <rb_strcasecmp@plt+0x6b17>
  409068:	lea    rcx,[rip+0x6ca1]        # 40fd10 <rb_strcasecmp@plt+0xd7a0>
  40906f:	mov    edx,0x120
  409074:	lea    rsi,[rip+0x6985]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  40907b:	lea    rdi,[rip+0x699a]        # 40fa1c <rb_strcasecmp@plt+0xd4ac>
  409082:	call   4020f0 <__assert_fail@plt>
  409087:	mov    rdx,QWORD PTR [rbp-0x20]
  40908b:	mov    rax,QWORD PTR [rbp-0x18]
  40908f:	mov    rsi,rdx
  409092:	mov    rdi,rax
  409095:	call   408ef4 <rb_strcasecmp@plt+0x6984>
  40909a:	mov    QWORD PTR [rbp-0x8],rax
  40909e:	cmp    QWORD PTR [rbp-0x8],0x0
  4090a3:	je     4090b8 <rb_strcasecmp@plt+0x6b48>
  4090a5:	mov    rax,QWORD PTR [rbp-0x8]
  4090a9:	mov    rdi,rax
  4090ac:	call   4022e0 <rb_free_rb_dlink_node@plt>
  4090b1:	mov    eax,0x1
  4090b6:	jmp    4090bd <rb_strcasecmp@plt+0x6b4d>
  4090b8:	mov    eax,0x0
  4090bd:	leave  
  4090be:	ret    
  4090bf:	push   rbp
  4090c0:	mov    rbp,rsp
  4090c3:	sub    rsp,0x10
  4090c7:	mov    QWORD PTR [rbp-0x8],rdi
  4090cb:	mov    QWORD PTR [rbp-0x10],rsi
  4090cf:	cmp    QWORD PTR [rbp-0x8],0x0
  4090d4:	jne    4090f5 <rb_strcasecmp@plt+0x6b85>
  4090d6:	lea    rcx,[rip+0x6c83]        # 40fd60 <rb_strcasecmp@plt+0xd7f0>
  4090dd:	mov    edx,0x144
  4090e2:	lea    rsi,[rip+0x6917]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  4090e9:	lea    rdi,[rip+0x6950]        # 40fa40 <rb_strcasecmp@plt+0xd4d0>
  4090f0:	call   4020f0 <__assert_fail@plt>
  4090f5:	cmp    QWORD PTR [rbp-0x10],0x0
  4090fa:	jne    40911b <rb_strcasecmp@plt+0x6bab>
  4090fc:	lea    rcx,[rip+0x6c5d]        # 40fd60 <rb_strcasecmp@plt+0xd7f0>
  409103:	mov    edx,0x145
  409108:	lea    rsi,[rip+0x68f1]        # 40fa00 <rb_strcasecmp@plt+0xd490>
  40910f:	lea    rdi,[rip+0x6937]        # 40fa4d <rb_strcasecmp@plt+0xd4dd>
  409116:	call   4020f0 <__assert_fail@plt>
  40911b:	mov    rax,QWORD PTR [rbp-0x8]
  40911f:	mov    rax,QWORD PTR [rax]
  409122:	test   rax,rax
  409125:	je     409206 <rb_strcasecmp@plt+0x6c96>
  40912b:	mov    rax,QWORD PTR [rbp-0x10]
  40912f:	mov    rax,QWORD PTR [rax]
  409132:	test   rax,rax
  409135:	jne    40918e <rb_strcasecmp@plt+0x6c1e>
  409137:	mov    rax,QWORD PTR [rbp-0x8]
  40913b:	mov    rdx,QWORD PTR [rax]
  40913e:	mov    rax,QWORD PTR [rbp-0x10]
  409142:	mov    QWORD PTR [rax],rdx
  409145:	mov    rax,QWORD PTR [rbp-0x8]
  409149:	mov    rdx,QWORD PTR [rax+0x8]
  40914d:	mov    rax,QWORD PTR [rbp-0x10]
  409151:	mov    QWORD PTR [rax+0x8],rdx
  409155:	mov    rax,QWORD PTR [rbp-0x8]
  409159:	mov    QWORD PTR [rax+0x8],0x0
  409161:	mov    rax,QWORD PTR [rbp-0x8]
  409165:	mov    rdx,QWORD PTR [rax+0x8]
  409169:	mov    rax,QWORD PTR [rbp-0x8]
  40916d:	mov    QWORD PTR [rax],rdx
  409170:	mov    rax,QWORD PTR [rbp-0x8]
  409174:	mov    rdx,QWORD PTR [rax+0x10]
  409178:	mov    rax,QWORD PTR [rbp-0x10]
  40917c:	mov    QWORD PTR [rax+0x10],rdx
  409180:	mov    rax,QWORD PTR [rbp-0x8]
  409184:	mov    QWORD PTR [rax+0x10],0x0
  40918c:	jmp    409207 <rb_strcasecmp@plt+0x6c97>
  40918e:	mov    rax,QWORD PTR [rbp-0x8]
  409192:	mov    rax,QWORD PTR [rax+0x8]
  409196:	mov    rdx,QWORD PTR [rbp-0x10]
  40919a:	mov    rdx,QWORD PTR [rdx]
  40919d:	mov    QWORD PTR [rax+0x10],rdx
  4091a1:	mov    rax,QWORD PTR [rbp-0x10]
  4091a5:	mov    rax,QWORD PTR [rax]
  4091a8:	mov    rdx,QWORD PTR [rbp-0x8]
  4091ac:	mov    rdx,QWORD PTR [rdx+0x8]
  4091b0:	mov    QWORD PTR [rax+0x8],rdx
  4091b4:	mov    rax,QWORD PTR [rbp-0x8]
  4091b8:	mov    rdx,QWORD PTR [rax]
  4091bb:	mov    rax,QWORD PTR [rbp-0x10]
  4091bf:	mov    QWORD PTR [rax],rdx
  4091c2:	mov    rax,QWORD PTR [rbp-0x8]
  4091c6:	mov    QWORD PTR [rax+0x8],0x0
  4091ce:	mov    rax,QWORD PTR [rbp-0x8]
  4091d2:	mov    rdx,QWORD PTR [rax+0x8]
  4091d6:	mov    rax,QWORD PTR [rbp-0x8]
  4091da:	mov    QWORD PTR [rax],rdx
  4091dd:	mov    rax,QWORD PTR [rbp-0x10]
  4091e1:	mov    rdx,QWORD PTR [rax+0x10]
  4091e5:	mov    rax,QWORD PTR [rbp-0x8]
  4091e9:	mov    rax,QWORD PTR [rax+0x10]
  4091ed:	add    rdx,rax
  4091f0:	mov    rax,QWORD PTR [rbp-0x10]
  4091f4:	mov    QWORD PTR [rax+0x10],rdx
  4091f8:	mov    rax,QWORD PTR [rbp-0x8]
  4091fc:	mov    QWORD PTR [rax+0x10],0x0
  409204:	jmp    409207 <rb_strcasecmp@plt+0x6c97>
  409206:	nop
  409207:	leave  
  409208:	ret    
  409209:	push   rbp
  40920a:	mov    rbp,rsp
  40920d:	sub    rsp,0x20
  409211:	mov    QWORD PTR [rbp-0x18],rdi
  409215:	mov    rax,QWORD PTR [rbp-0x18]
  409219:	mov    rsi,rax
  40921c:	mov    edi,0x1
  409221:	call   402490 <calloc@plt>
  409226:	mov    QWORD PTR [rbp-0x8],rax
  40922a:	cmp    QWORD PTR [rbp-0x8],0x0
  40922f:	sete   al
  409232:	movzx  eax,al
  409235:	test   rax,rax
  409238:	je     40923f <rb_strcasecmp@plt+0x6ccf>
  40923a:	call   4023b0 <rb_outofmemory@plt>
  40923f:	mov    rax,QWORD PTR [rbp-0x8]
  409243:	leave  
  409244:	ret    
  409245:	push   rbp
  409246:	mov    rbp,rsp
  409249:	sub    rsp,0x20
  40924d:	mov    QWORD PTR [rbp-0x18],rdi
  409251:	mov    rax,QWORD PTR [rbp-0x18]
  409255:	mov    rdi,rax
  409258:	call   402210 <strlen@plt>
  40925d:	add    rax,0x1
  409261:	mov    rdi,rax
  409264:	call   402180 <malloc@plt>
  409269:	mov    QWORD PTR [rbp-0x8],rax
  40926d:	cmp    QWORD PTR [rbp-0x8],0x0
  409272:	sete   al
  409275:	movzx  eax,al
  409278:	test   rax,rax
  40927b:	je     409282 <rb_strcasecmp@plt+0x6d12>
  40927d:	call   4023b0 <rb_outofmemory@plt>
  409282:	mov    rdx,QWORD PTR [rbp-0x18]
  409286:	mov    rax,QWORD PTR [rbp-0x8]
  40928a:	mov    rsi,rdx
  40928d:	mov    rdi,rax
  409290:	call   402450 <strcpy@plt>
  409295:	mov    rax,QWORD PTR [rbp-0x8]
  409299:	leave  
  40929a:	ret    
  40929b:	push   rbp
  40929c:	mov    rbp,rsp
  40929f:	sub    rsp,0x10
  4092a3:	mov    QWORD PTR [rbp-0x8],rdi
  4092a7:	cmp    QWORD PTR [rbp-0x8],0x0
  4092ac:	setne  al
  4092af:	movzx  eax,al
  4092b2:	test   rax,rax
  4092b5:	je     4092c3 <rb_strcasecmp@plt+0x6d53>
  4092b7:	mov    rax,QWORD PTR [rbp-0x8]
  4092bb:	mov    rdi,rax
  4092be:	call   402200 <free@plt>
  4092c3:	nop
  4092c4:	leave  
  4092c5:	ret    
  4092c6:	push   rbp
  4092c7:	mov    rbp,rsp
  4092ca:	mov    QWORD PTR [rbp-0x8],rdi
  4092ce:	mov    rax,QWORD PTR [rbp-0x8]
  4092d2:	mov    eax,DWORD PTR [rax+0x1cc]
  4092d8:	lea    edx,[rax+0x1]
  4092db:	mov    rax,QWORD PTR [rbp-0x8]
  4092df:	mov    DWORD PTR [rax+0x1cc],edx
  4092e5:	nop
  4092e6:	pop    rbp
  4092e7:	ret    
  4092e8:	push   rbp
  4092e9:	mov    rbp,rsp
  4092ec:	sub    rsp,0x10
  4092f0:	mov    QWORD PTR [rbp-0x8],rdi
  4092f4:	mov    rax,QWORD PTR [rbp-0x8]
  4092f8:	mov    eax,DWORD PTR [rax+0x1cc]
  4092fe:	lea    edx,[rax-0x1]
  409301:	mov    rax,QWORD PTR [rbp-0x8]
  409305:	mov    DWORD PTR [rax+0x1cc],edx
  40930b:	mov    rax,QWORD PTR [rbp-0x8]
  40930f:	mov    eax,DWORD PTR [rax+0x1cc]
  409315:	test   eax,eax
  409317:	jne    409325 <rb_strcasecmp@plt+0x6db5>
  409319:	mov    rax,QWORD PTR [rbp-0x8]
  40931d:	mov    rdi,rax
  409320:	call   40421d <rb_strcasecmp@plt+0x1cad>
  409325:	nop
  409326:	leave  
  409327:	ret    
  409328:	push   rbp
  409329:	mov    rbp,rsp
  40932c:	sub    rsp,0x20
  409330:	mov    QWORD PTR [rbp-0x18],rdi
  409334:	mov    rax,0x41a280
  40933b:	mov    rax,QWORD PTR [rax]
  40933e:	mov    QWORD PTR [rbp-0x10],rax
  409342:	jmp    40937c <rb_strcasecmp@plt+0x6e0c>
  409344:	mov    rax,QWORD PTR [rbp-0x10]
  409348:	mov    rax,QWORD PTR [rax]
  40934b:	mov    QWORD PTR [rbp-0x8],rax
  40934f:	mov    rax,QWORD PTR [rbp-0x8]
  409353:	mov    rax,QWORD PTR [rax+0x20]
  409357:	mov    rdx,QWORD PTR [rbp-0x18]
  40935b:	mov    rsi,rdx
  40935e:	mov    rdi,rax
  409361:	call   402120 <strcasecmp@plt>
  409366:	test   eax,eax
  409368:	jne    409370 <rb_strcasecmp@plt+0x6e00>
  40936a:	mov    rax,QWORD PTR [rbp-0x8]
  40936e:	jmp    409388 <rb_strcasecmp@plt+0x6e18>
  409370:	mov    rax,QWORD PTR [rbp-0x10]
  409374:	mov    rax,QWORD PTR [rax+0x10]
  409378:	mov    QWORD PTR [rbp-0x10],rax
  40937c:	cmp    QWORD PTR [rbp-0x10],0x0
  409381:	jne    409344 <rb_strcasecmp@plt+0x6dd4>
  409383:	mov    eax,0x0
  409388:	leave  
  409389:	ret    
  40938a:	push   rbp
  40938b:	mov    rbp,rsp
  40938e:	sub    rsp,0x20
  409392:	mov    QWORD PTR [rbp-0x18],rdi
  409396:	mov    QWORD PTR [rbp-0x20],rsi
  40939a:	mov    rax,QWORD PTR [rbp-0x18]
  40939e:	mov    rdi,rax
  4093a1:	call   409328 <rb_strcasecmp@plt+0x6db8>
  4093a6:	mov    QWORD PTR [rbp-0x8],rax
  4093aa:	cmp    QWORD PTR [rbp-0x8],0x0
  4093af:	je     4093c5 <rb_strcasecmp@plt+0x6e55>
  4093b1:	mov    rax,QWORD PTR [rbp-0x8]
  4093b5:	mov    edx,DWORD PTR [rax+0x18]
  4093b8:	mov    rax,QWORD PTR [rbp-0x20]
  4093bc:	mov    DWORD PTR [rax],edx
  4093be:	mov    eax,0x1
  4093c3:	jmp    4093ca <rb_strcasecmp@plt+0x6e5a>
  4093c5:	mov    eax,0x0
  4093ca:	leave  
  4093cb:	ret    
  4093cc:	push   rbp
  4093cd:	mov    rbp,rsp
  4093d0:	mov    QWORD PTR [rbp-0x8],rdi
  4093d4:	mov    DWORD PTR [rbp-0xc],esi
  4093d7:	mov    rax,QWORD PTR [rbp-0x8]
  4093db:	mov    rax,QWORD PTR [rax+0x1d0]
  4093e2:	mov    edx,DWORD PTR [rbp-0xc]
  4093e5:	shl    rdx,0x5
  4093e9:	add    rax,rdx
  4093ec:	mov    eax,DWORD PTR [rax+0x18]
  4093ef:	pop    rbp
  4093f0:	ret    
  4093f1:	push   rbp
  4093f2:	mov    rbp,rsp
  4093f5:	sub    rsp,0x20
  4093f9:	mov    QWORD PTR [rbp-0x18],rdi
  4093fd:	mov    QWORD PTR [rbp-0x20],rsi
  409401:	mov    rax,QWORD PTR fs:0x28
  40940a:	mov    QWORD PTR [rbp-0x8],rax
  40940e:	xor    eax,eax
  409410:	lea    rdx,[rbp-0xc]
  409414:	mov    rax,QWORD PTR [rbp-0x20]
  409418:	mov    rsi,rdx
  40941b:	mov    rdi,rax
  40941e:	call   40938a <rb_strcasecmp@plt+0x6e1a>
  409423:	test   al,al
  409425:	je     409440 <rb_strcasecmp@plt+0x6ed0>
  409427:	mov    edx,DWORD PTR [rbp-0xc]
  40942a:	mov    rax,QWORD PTR [rbp-0x18]
  40942e:	mov    esi,edx
  409430:	mov    rdi,rax
  409433:	call   4093cc <rb_strcasecmp@plt+0x6e5c>
  409438:	cmp    eax,0x2
  40943b:	sete   al
  40943e:	jmp    409445 <rb_strcasecmp@plt+0x6ed5>
  409440:	mov    eax,0x1
  409445:	mov    rcx,QWORD PTR [rbp-0x8]
  409449:	xor    rcx,QWORD PTR fs:0x28
  409452:	je     409459 <rb_strcasecmp@plt+0x6ee9>
  409454:	call   402400 <__stack_chk_fail@plt>
  409459:	leave  
  40945a:	ret    
  40945b:	push   rbp
  40945c:	mov    rbp,rsp
  40945f:	mov    QWORD PTR [rbp-0x8],rdi
  409463:	mov    DWORD PTR [rbp-0xc],esi
  409466:	mov    rax,QWORD PTR [rbp-0x8]
  40946a:	mov    rax,QWORD PTR [rax+0x1d0]
  409471:	mov    edx,DWORD PTR [rbp-0xc]
  409474:	shl    rdx,0x5
  409478:	add    rax,rdx
  40947b:	mov    rax,QWORD PTR [rax+0x10]
  40947f:	pop    rbp
  409480:	ret    
  409481:	push   rbp
  409482:	mov    rbp,rsp
  409485:	mov    QWORD PTR [rbp-0x8],rdi
  409489:	mov    DWORD PTR [rbp-0xc],esi
  40948c:	mov    QWORD PTR [rbp-0x18],rdx
  409490:	mov    rax,QWORD PTR [rbp-0x8]
  409494:	mov    rax,QWORD PTR [rax+0x1d0]
  40949b:	mov    edx,DWORD PTR [rbp-0xc]
  40949e:	shl    rdx,0x5
  4094a2:	add    rdx,rax
  4094a5:	mov    rax,QWORD PTR [rbp-0x18]
  4094a9:	mov    QWORD PTR [rdx+0x10],rax
  4094ad:	nop
  4094ae:	pop    rbp
  4094af:	ret    
  4094b0:	push   rbp
  4094b1:	mov    rbp,rsp
  4094b4:	push   rbx
  4094b5:	sub    rsp,0x28
  4094b9:	mov    QWORD PTR [rbp-0x18],rdi
  4094bd:	mov    DWORD PTR [rbp-0x1c],esi
  4094c0:	mov    QWORD PTR [rbp-0x28],rdx
  4094c4:	mov    rax,QWORD PTR [rbp-0x18]
  4094c8:	mov    rax,QWORD PTR [rax+0x1d0]
  4094cf:	mov    edx,DWORD PTR [rbp-0x1c]
  4094d2:	shl    rdx,0x5
  4094d6:	lea    rbx,[rax+rdx*1]
  4094da:	call   4022a0 <rb_current_time@plt>
  4094df:	mov    rdx,rax
  4094e2:	mov    rax,QWORD PTR [rbp-0x28]
  4094e6:	add    rax,rdx
  4094e9:	mov    QWORD PTR [rbx+0x8],rax
  4094ed:	nop
  4094ee:	add    rsp,0x28
  4094f2:	pop    rbx
  4094f3:	pop    rbp
  4094f4:	ret    
  4094f5:	push   rbp
  4094f6:	mov    rbp,rsp
  4094f9:	mov    QWORD PTR [rbp-0x8],rdi
  4094fd:	mov    DWORD PTR [rbp-0xc],esi
  409500:	mov    QWORD PTR [rbp-0x18],rdx
  409504:	mov    rax,QWORD PTR [rbp-0x8]
  409508:	mov    rax,QWORD PTR [rax+0x1d0]
  40950f:	mov    edx,DWORD PTR [rbp-0xc]
  409512:	shl    rdx,0x5
  409516:	add    rdx,rax
  409519:	mov    rax,QWORD PTR [rbp-0x18]
  40951d:	mov    QWORD PTR [rdx+0x8],rax
  409521:	nop
  409522:	pop    rbp
  409523:	ret    
  409524:	push   rbp
  409525:	mov    rbp,rsp
  409528:	sub    rsp,0x20
  40952c:	mov    QWORD PTR [rbp-0x18],rdi
  409530:	mov    rax,QWORD PTR [rbp-0x18]
  409534:	mov    eax,DWORD PTR [rax+0x324]
  40953a:	lea    edx,[rax-0x1]
  40953d:	mov    rax,QWORD PTR [rbp-0x18]
  409541:	mov    DWORD PTR [rax+0x324],edx
  409547:	mov    rax,QWORD PTR [rbp-0x18]
  40954b:	movzx  eax,BYTE PTR [rax+0x320]
  409552:	test   al,al
  409554:	je     409605 <rb_strcasecmp@plt+0x7095>
  40955a:	mov    rax,QWORD PTR [rbp-0x18]
  40955e:	mov    eax,DWORD PTR [rax+0x324]
  409564:	test   eax,eax
  409566:	jg     409605 <rb_strcasecmp@plt+0x7095>
  40956c:	mov    rax,QWORD PTR [rbp-0x18]
  409570:	mov    rax,QWORD PTR [rax+0x308]
  409577:	mov    QWORD PTR [rbp-0x10],rax
  40957b:	cmp    QWORD PTR [rbp-0x10],0x0
  409580:	je     40958c <rb_strcasecmp@plt+0x701c>
  409582:	mov    rax,QWORD PTR [rbp-0x10]
  409586:	mov    rax,QWORD PTR [rax+0x10]
  40958a:	jmp    409591 <rb_strcasecmp@plt+0x7021>
  40958c:	mov    eax,0x0
  409591:	mov    QWORD PTR [rbp-0x8],rax
  409595:	jmp    4095df <rb_strcasecmp@plt+0x706f>
  409597:	mov    rax,QWORD PTR [rbp-0x18]
  40959b:	lea    rdx,[rax+0x308]
  4095a2:	mov    rax,QWORD PTR [rbp-0x10]
  4095a6:	mov    rsi,rdx
  4095a9:	mov    rdi,rax
  4095ac:	call   408e00 <rb_strcasecmp@plt+0x6890>
  4095b1:	mov    rax,QWORD PTR [rbp-0x10]
  4095b5:	mov    rdi,rax
  4095b8:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  4095bd:	mov    rax,QWORD PTR [rbp-0x8]
  4095c1:	mov    QWORD PTR [rbp-0x10],rax
  4095c5:	cmp    QWORD PTR [rbp-0x10],0x0
  4095ca:	je     4095d6 <rb_strcasecmp@plt+0x7066>
  4095cc:	mov    rax,QWORD PTR [rbp-0x10]
  4095d0:	mov    rax,QWORD PTR [rax+0x10]
  4095d4:	jmp    4095db <rb_strcasecmp@plt+0x706b>
  4095d6:	mov    eax,0x0
  4095db:	mov    QWORD PTR [rbp-0x8],rax
  4095df:	cmp    QWORD PTR [rbp-0x10],0x0
  4095e4:	jne    409597 <rb_strcasecmp@plt+0x7027>
  4095e6:	mov    rax,QWORD PTR [rbp-0x18]
  4095ea:	lea    rsi,[rip+0x10aaf]        # 41a0a0 <rb_strcasecmp@plt+0x17b30>
  4095f1:	mov    rdi,rax
  4095f4:	call   40902b <rb_strcasecmp@plt+0x6abb>
  4095f9:	mov    rax,QWORD PTR [rbp-0x18]
  4095fd:	mov    rdi,rax
  409600:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  409605:	nop
  409606:	leave  
  409607:	ret    
  409608:	push   rbp
  409609:	mov    rbp,rsp
  40960c:	sub    rsp,0x30
  409610:	mov    QWORD PTR [rbp-0x18],rdi
  409614:	mov    QWORD PTR [rbp-0x20],rsi
  409618:	mov    eax,edx
  40961a:	mov    QWORD PTR [rbp-0x30],rcx
  40961e:	mov    BYTE PTR [rbp-0x24],al
  409621:	cmp    QWORD PTR [rbp-0x18],0x0
  409626:	je     409635 <rb_strcasecmp@plt+0x70c5>
  409628:	cmp    QWORD PTR [rbp-0x20],0x0
  40962d:	je     409635 <rb_strcasecmp@plt+0x70c5>
  40962f:	cmp    BYTE PTR [rbp-0x24],0x0
  409633:	jne    40963f <rb_strcasecmp@plt+0x70cf>
  409635:	mov    eax,0x0
  40963a:	jmp    409701 <rb_strcasecmp@plt+0x7191>
  40963f:	mov    rax,QWORD PTR [rbp-0x18]
  409643:	mov    rdi,rax
  409646:	call   409703 <rb_strcasecmp@plt+0x7193>
  40964b:	mov    QWORD PTR [rbp-0x8],rax
  40964f:	cmp    QWORD PTR [rbp-0x8],0x0
  409654:	jne    409684 <rb_strcasecmp@plt+0x7114>
  409656:	mov    edi,0x338
  40965b:	call   409209 <rb_strcasecmp@plt+0x6c99>
  409660:	mov    QWORD PTR [rbp-0x8],rax
  409664:	call   402500 <rb_make_rb_dlink_node@plt>
  409669:	mov    rcx,rax
  40966c:	mov    rax,QWORD PTR [rbp-0x8]
  409670:	lea    rdx,[rip+0x10a29]        # 41a0a0 <rb_strcasecmp@plt+0x17b30>
  409677:	mov    rsi,rcx
  40967a:	mov    rdi,rax
  40967d:	call   408cfc <rb_strcasecmp@plt+0x678c>
  409682:	jmp    40968f <rb_strcasecmp@plt+0x711f>
  409684:	mov    rax,QWORD PTR [rbp-0x8]
  409688:	mov    BYTE PTR [rax+0x320],0x0
  40968f:	mov    rax,QWORD PTR [rbp-0x8]
  409693:	mov    rcx,QWORD PTR [rbp-0x18]
  409697:	mov    edx,0x100
  40969c:	mov    rsi,rcx
  40969f:	mov    rdi,rax
  4096a2:	call   4021d0 <rb_strlcpy@plt>
  4096a7:	mov    rax,QWORD PTR [rbp-0x8]
  4096ab:	lea    rcx,[rax+0x100]
  4096b2:	mov    rax,QWORD PTR [rbp-0x20]
  4096b6:	mov    edx,0x200
  4096bb:	mov    rsi,rax
  4096be:	mov    rdi,rcx
  4096c1:	call   4021d0 <rb_strlcpy@plt>
  4096c6:	mov    rax,QWORD PTR [rbp-0x8]
  4096ca:	movzx  edx,BYTE PTR [rbp-0x24]
  4096ce:	mov    BYTE PTR [rax+0x300],dl
  4096d4:	mov    rax,QWORD PTR [rbp-0x8]
  4096d8:	lea    rdx,[rax+0x308]
  4096df:	mov    rax,QWORD PTR [rbp-0x30]
  4096e3:	mov    rsi,rdx
  4096e6:	mov    rdi,rax
  4096e9:	call   4090bf <rb_strcasecmp@plt+0x6b4f>
  4096ee:	mov    rax,QWORD PTR [rbp-0x8]
  4096f2:	mov    QWORD PTR [rax+0x330],0x0
  4096fd:	mov    rax,QWORD PTR [rbp-0x8]
  409701:	leave  
  409702:	ret    
  409703:	push   rbp
  409704:	mov    rbp,rsp
  409707:	sub    rsp,0x20
  40970b:	mov    QWORD PTR [rbp-0x18],rdi
  40970f:	mov    rax,QWORD PTR [rip+0x1098a]        # 41a0a0 <rb_strcasecmp@plt+0x17b30>
  409716:	mov    QWORD PTR [rbp-0x10],rax
  40971a:	jmp    409750 <rb_strcasecmp@plt+0x71e0>
  40971c:	mov    rax,QWORD PTR [rbp-0x10]
  409720:	mov    rax,QWORD PTR [rax]
  409723:	mov    QWORD PTR [rbp-0x8],rax
  409727:	mov    rax,QWORD PTR [rbp-0x8]
  40972b:	mov    rdx,QWORD PTR [rbp-0x18]
  40972f:	mov    rsi,rdx
  409732:	mov    rdi,rax
  409735:	call   402120 <strcasecmp@plt>
  40973a:	test   eax,eax
  40973c:	jne    409744 <rb_strcasecmp@plt+0x71d4>
  40973e:	mov    rax,QWORD PTR [rbp-0x8]
  409742:	jmp    40975c <rb_strcasecmp@plt+0x71ec>
  409744:	mov    rax,QWORD PTR [rbp-0x10]
  409748:	mov    rax,QWORD PTR [rax+0x10]
  40974c:	mov    QWORD PTR [rbp-0x10],rax
  409750:	cmp    QWORD PTR [rbp-0x10],0x0
  409755:	jne    40971c <rb_strcasecmp@plt+0x71ac>
  409757:	mov    eax,0x0
  40975c:	leave  
  40975d:	ret    
  40975e:	push   rbp
  40975f:	mov    rbp,rsp
  409762:	push   rbx
  409763:	sub    rsp,0x48
  409767:	mov    QWORD PTR [rbp-0x48],rdi
  40976b:	mov    QWORD PTR [rbp-0x50],rsi
  40976f:	mov    rax,QWORD PTR [rbp-0x48]
  409773:	mov    rax,QWORD PTR [rax]
  409776:	mov    QWORD PTR [rbp-0x28],rax
  40977a:	mov    rax,QWORD PTR [rbp-0x28]
  40977e:	mov    rax,QWORD PTR [rax+0x318]
  409785:	test   rax,rax
  409788:	jne    409794 <rb_strcasecmp@plt+0x7224>
  40978a:	mov    eax,0x1
  40978f:	jmp    4098d8 <rb_strcasecmp@plt+0x7368>
  409794:	mov    rax,QWORD PTR [rbp-0x50]
  409798:	mov    esi,0x2e
  40979d:	mov    rdi,rax
  4097a0:	call   402290 <strrchr@plt>
  4097a5:	mov    QWORD PTR [rbp-0x20],rax
  4097a9:	cmp    QWORD PTR [rbp-0x20],0x0
  4097ae:	je     409880 <rb_strcasecmp@plt+0x7310>
  4097b4:	add    QWORD PTR [rbp-0x20],0x1
  4097b9:	mov    rax,QWORD PTR [rbp-0x20]
  4097bd:	movzx  eax,BYTE PTR [rax]
  4097c0:	test   al,al
  4097c2:	je     409880 <rb_strcasecmp@plt+0x7310>
  4097c8:	mov    rax,QWORD PTR [rbp-0x28]
  4097cc:	mov    rax,QWORD PTR [rax+0x308]
  4097d3:	mov    QWORD PTR [rbp-0x38],rax
  4097d7:	jmp    40986e <rb_strcasecmp@plt+0x72fe>
  4097dc:	mov    rax,QWORD PTR [rbp-0x38]
  4097e0:	mov    rax,QWORD PTR [rax]
  4097e3:	mov    QWORD PTR [rbp-0x18],rax
  4097e7:	mov    rax,QWORD PTR [rbp-0x18]
  4097eb:	mov    eax,DWORD PTR [rax]
  4097ed:	cmp    eax,0x1
  4097f0:	jne    4097fc <rb_strcasecmp@plt+0x728c>
  4097f2:	mov    rax,QWORD PTR [rbp-0x50]
  4097f6:	mov    QWORD PTR [rbp-0x30],rax
  4097fa:	jmp    409840 <rb_strcasecmp@plt+0x72d0>
  4097fc:	mov    rax,QWORD PTR [rbp-0x18]
  409800:	mov    eax,DWORD PTR [rax]
  409802:	cmp    eax,0x2
  409805:	jne    409811 <rb_strcasecmp@plt+0x72a1>
  409807:	mov    rax,QWORD PTR [rbp-0x20]
  40980b:	mov    QWORD PTR [rbp-0x30],rax
  40980f:	jmp    409840 <rb_strcasecmp@plt+0x72d0>
  409811:	mov    rax,QWORD PTR [rbp-0x18]
  409815:	mov    edx,DWORD PTR [rax]
  409817:	mov    rax,QWORD PTR [rbp-0x28]
  40981b:	mov    ecx,edx
  40981d:	mov    rdx,rax
  409820:	lea    rsi,[rip+0x6231]        # 40fa58 <rb_strcasecmp@plt+0xd4e8>
  409827:	mov    edi,0x43
  40982c:	mov    eax,0x0
  409831:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  409836:	mov    edi,0x3
  40983b:	call   4020e0 <exit@plt>
  409840:	mov    rax,QWORD PTR [rbp-0x18]
  409844:	lea    rdx,[rax+0x4]
  409848:	mov    rax,QWORD PTR [rbp-0x30]
  40984c:	mov    rsi,rdx
  40984f:	mov    rdi,rax
  409852:	call   402420 <strcmp@plt>
  409857:	test   eax,eax
  409859:	jne    409862 <rb_strcasecmp@plt+0x72f2>
  40985b:	mov    eax,0x1
  409860:	jmp    4098d8 <rb_strcasecmp@plt+0x7368>
  409862:	mov    rax,QWORD PTR [rbp-0x38]
  409866:	mov    rax,QWORD PTR [rax+0x10]
  40986a:	mov    QWORD PTR [rbp-0x38],rax
  40986e:	cmp    QWORD PTR [rbp-0x38],0x0
  409873:	jne    4097dc <rb_strcasecmp@plt+0x726c>
  409879:	mov    eax,0x0
  40987e:	jmp    4098d8 <rb_strcasecmp@plt+0x7368>
  409880:	mov    rax,QWORD PTR [rbp-0x28]
  409884:	mov    rax,QWORD PTR [rax+0x330]
  40988b:	lea    rbx,[rax+0xe10]
  409892:	call   4022a0 <rb_current_time@plt>
  409897:	cmp    rbx,rax
  40989a:	jge    4098d3 <rb_strcasecmp@plt+0x7363>
  40989c:	mov    rax,QWORD PTR [rbp-0x28]
  4098a0:	mov    rdx,QWORD PTR [rbp-0x50]
  4098a4:	mov    rcx,rdx
  4098a7:	mov    rdx,rax
  4098aa:	lea    rsi,[rip+0x61d7]        # 40fa88 <rb_strcasecmp@plt+0xd518>
  4098b1:	mov    edi,0x57
  4098b6:	mov    eax,0x0
  4098bb:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  4098c0:	call   4022a0 <rb_current_time@plt>
  4098c5:	mov    rdx,rax
  4098c8:	mov    rax,QWORD PTR [rbp-0x28]
  4098cc:	mov    QWORD PTR [rax+0x330],rdx
  4098d3:	mov    eax,0x0
  4098d8:	add    rsp,0x48
  4098dc:	pop    rbx
  4098dd:	pop    rbp
  4098de:	ret    
  4098df:	push   rbp
  4098e0:	mov    rbp,rsp
  4098e3:	sub    rsp,0x40
  4098e7:	mov    QWORD PTR [rbp-0x28],rdi
  4098eb:	mov    eax,esi
  4098ed:	mov    DWORD PTR [rbp-0x30],edx
  4098f0:	mov    QWORD PTR [rbp-0x38],rcx
  4098f4:	mov    BYTE PTR [rbp-0x2c],al
  4098f7:	mov    rax,QWORD PTR [rbp-0x38]
  4098fb:	mov    QWORD PTR [rbp-0x20],rax
  4098ff:	mov    rax,QWORD PTR [rbp-0x20]
  409903:	mov    rax,QWORD PTR [rax]
  409906:	mov    QWORD PTR [rbp-0x18],rax
  40990a:	mov    rax,QWORD PTR [rbp-0x20]
  40990e:	mov    rax,QWORD PTR [rax+0x8]
  409912:	mov    QWORD PTR [rbp-0x10],rax
  409916:	mov    rax,0x415b80
  40991d:	mov    edx,DWORD PTR [rax+0x18]
  409920:	mov    rax,QWORD PTR [rbp-0x10]
  409924:	mov    esi,edx
  409926:	mov    rdi,rax
  409929:	call   40945b <rb_strcasecmp@plt+0x6eeb>
  40992e:	mov    QWORD PTR [rbp-0x8],rax
  409932:	cmp    QWORD PTR [rbp-0x8],0x0
  409937:	je     409a8c <rb_strcasecmp@plt+0x751c>
  40993d:	cmp    QWORD PTR [rbp-0x28],0x0
  409942:	je     4099b3 <rb_strcasecmp@plt+0x7443>
  409944:	cmp    BYTE PTR [rbp-0x2c],0x0
  409948:	je     4099b3 <rb_strcasecmp@plt+0x7443>
  40994a:	mov    rdx,QWORD PTR [rbp-0x28]
  40994e:	mov    rax,QWORD PTR [rbp-0x20]
  409952:	mov    rsi,rdx
  409955:	mov    rdi,rax
  409958:	call   40975e <rb_strcasecmp@plt+0x71ee>
  40995d:	test   al,al
  40995f:	je     4099b3 <rb_strcasecmp@plt+0x7443>
  409961:	mov    rax,QWORD PTR [rbp-0x18]
  409965:	mov    eax,DWORD PTR [rax+0x328]
  40996b:	lea    edx,[rax+0x1]
  40996e:	mov    rax,QWORD PTR [rbp-0x18]
  409972:	mov    DWORD PTR [rax+0x328],edx
  409978:	mov    rax,QWORD PTR [rbp-0x18]
  40997c:	lea    rcx,[rax+0x100]
  409983:	mov    rdx,QWORD PTR [rbp-0x18]
  409987:	mov    rax,0x415b80
  40998e:	mov    esi,DWORD PTR [rax+0x18]
  409991:	mov    rax,QWORD PTR [rbp-0x10]
  409995:	mov    rdi,rax
  409998:	mov    eax,0x0
  40999d:	call   4043c7 <rb_strcasecmp@plt+0x1e57>
  4099a2:	mov    rax,QWORD PTR [rbp-0x10]
  4099a6:	mov    rdi,rax
  4099a9:	call   40a100 <rb_strcasecmp@plt+0x7b90>
  4099ae:	jmp    409a8d <rb_strcasecmp@plt+0x751d>
  4099b3:	mov    rax,QWORD PTR [rbp-0x18]
  4099b7:	mov    rdi,rax
  4099ba:	call   409524 <rb_strcasecmp@plt+0x6fb4>
  4099bf:	mov    rax,QWORD PTR [rbp-0x20]
  4099c3:	mov    rax,QWORD PTR [rax+0x10]
  4099c7:	mov    rdi,rax
  4099ca:	call   402e60 <rb_strcasecmp@plt+0x8f0>
  4099cf:	mov    rax,QWORD PTR [rbp-0x8]
  4099d3:	lea    rdx,[rax+0x8]
  4099d7:	mov    rax,QWORD PTR [rbp-0x20]
  4099db:	add    rax,0x18
  4099df:	mov    rsi,rdx
  4099e2:	mov    rdi,rax
  4099e5:	call   408e00 <rb_strcasecmp@plt+0x6890>
  4099ea:	mov    rax,QWORD PTR [rbp-0x20]
  4099ee:	mov    rdi,rax
  4099f1:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  4099f6:	mov    rax,QWORD PTR [rbp-0x8]
  4099fa:	mov    rax,QWORD PTR [rax+0x18]
  4099fe:	test   rax,rax
  409a01:	jne    409a8d <rb_strcasecmp@plt+0x751d>
  409a07:	mov    rax,QWORD PTR [rbp-0x10]
  409a0b:	mov    eax,DWORD PTR [rax]
  409a0d:	lea    rsi,[rip+0x60b4]        # 40fac8 <rb_strcasecmp@plt+0xd558>
  409a14:	mov    edi,eax
  409a16:	mov    eax,0x0
  409a1b:	call   4035ab <rb_strcasecmp@plt+0x103b>
  409a20:	mov    rax,QWORD PTR [rbp-0x8]
  409a24:	mov    rdi,rax
  409a27:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  409a2c:	mov    rax,0x415b80
  409a33:	mov    ecx,DWORD PTR [rax+0x18]
  409a36:	mov    rax,QWORD PTR [rbp-0x10]
  409a3a:	mov    edx,0x0
  409a3f:	mov    esi,ecx
  409a41:	mov    rdi,rax
  409a44:	call   409481 <rb_strcasecmp@plt+0x6f11>
  409a49:	mov    rax,0x415b80
  409a50:	mov    ecx,DWORD PTR [rax+0x18]
  409a53:	mov    rax,QWORD PTR [rbp-0x10]
  409a57:	mov    edx,0x0
  409a5c:	mov    esi,ecx
  409a5e:	mov    rdi,rax
  409a61:	call   4094f5 <rb_strcasecmp@plt+0x6f85>
  409a66:	mov    rax,0x415b80
  409a6d:	mov    edx,DWORD PTR [rax+0x18]
  409a70:	mov    rax,QWORD PTR [rbp-0x10]
  409a74:	mov    esi,edx
  409a76:	mov    rdi,rax
  409a79:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  409a7e:	mov    rax,QWORD PTR [rbp-0x10]
  409a82:	mov    rdi,rax
  409a85:	call   4092e8 <rb_strcasecmp@plt+0x6d78>
  409a8a:	jmp    409a8d <rb_strcasecmp@plt+0x751d>
  409a8c:	nop
  409a8d:	leave  
  409a8e:	ret    
  409a8f:	push   rbp
  409a90:	mov    rbp,rsp
  409a93:	sub    rsp,0x140
  409a9a:	mov    QWORD PTR [rbp-0x138],rdi
  409aa1:	mov    QWORD PTR [rbp-0x140],rsi
  409aa8:	mov    rax,QWORD PTR fs:0x28
  409ab1:	mov    QWORD PTR [rbp-0x8],rax
  409ab5:	xor    eax,eax
  409ab7:	mov    edi,0x30
  409abc:	call   409209 <rb_strcasecmp@plt+0x6c99>
  409ac1:	mov    QWORD PTR [rbp-0x120],rax
  409ac8:	mov    rax,0x415b80
  409acf:	mov    edx,DWORD PTR [rax+0x18]
  409ad2:	mov    rax,QWORD PTR [rbp-0x140]
  409ad9:	mov    esi,edx
  409adb:	mov    rdi,rax
  409ade:	call   40945b <rb_strcasecmp@plt+0x6eeb>
  409ae3:	mov    QWORD PTR [rbp-0x118],rax
  409aea:	mov    rax,QWORD PTR [rbp-0x120]
  409af1:	mov    rdx,QWORD PTR [rbp-0x138]
  409af8:	mov    QWORD PTR [rax],rdx
  409afb:	mov    rax,QWORD PTR [rbp-0x120]
  409b02:	mov    rdx,QWORD PTR [rbp-0x140]
  409b09:	mov    QWORD PTR [rax+0x8],rdx
  409b0d:	mov    rax,QWORD PTR [rbp-0x140]
  409b14:	add    rax,0xf8
  409b1a:	movzx  eax,WORD PTR [rax]
  409b1d:	movzx  eax,ax
  409b20:	mov    DWORD PTR [rbp-0x124],eax
  409b26:	cmp    DWORD PTR [rbp-0x124],0x2
  409b2d:	jne    409b47 <rb_strcasecmp@plt+0x75d7>
  409b2f:	mov    rax,QWORD PTR [rbp-0x138]
  409b36:	movzx  eax,BYTE PTR [rax+0x300]
  409b3d:	movzx  eax,al
  409b40:	and    eax,0x1
  409b43:	test   eax,eax
  409b45:	je     409b68 <rb_strcasecmp@plt+0x75f8>
  409b47:	cmp    DWORD PTR [rbp-0x124],0xa
  409b4e:	jne    409b7c <rb_strcasecmp@plt+0x760c>
  409b50:	mov    rax,QWORD PTR [rbp-0x138]
  409b57:	movzx  eax,BYTE PTR [rax+0x300]
  409b5e:	movzx  eax,al
  409b61:	and    eax,0x2
  409b64:	test   eax,eax
  409b66:	jne    409b7c <rb_strcasecmp@plt+0x760c>
  409b68:	mov    rax,QWORD PTR [rbp-0x120]
  409b6f:	mov    rdi,rax
  409b72:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  409b77:	jmp    409c23 <rb_strcasecmp@plt+0x76b3>
  409b7c:	mov    rdx,QWORD PTR [rbp-0x138]
  409b83:	mov    rax,QWORD PTR [rbp-0x140]
  409b8a:	lea    rsi,[rax+0xf8]
  409b91:	lea    rax,[rbp-0x110]
  409b98:	mov    rcx,rdx
  409b9b:	mov    rdx,rsi
  409b9e:	mov    esi,0x100
  409ba3:	mov    rdi,rax
  409ba6:	call   4058ea <rb_strcasecmp@plt+0x337a>
  409bab:	mov    rdx,QWORD PTR [rbp-0x120]
  409bb2:	lea    rax,[rbp-0x110]
  409bb9:	mov    rcx,rdx
  409bbc:	lea    rdx,[rip+0xfffffffffffffd1c]        # 4098df <rb_strcasecmp@plt+0x736f>
  409bc3:	mov    esi,0x2
  409bc8:	mov    rdi,rax
  409bcb:	call   402c68 <rb_strcasecmp@plt+0x6f8>
  409bd0:	mov    rdx,rax
  409bd3:	mov    rax,QWORD PTR [rbp-0x120]
  409bda:	mov    QWORD PTR [rax+0x10],rdx
  409bde:	mov    rax,QWORD PTR [rbp-0x118]
  409be5:	lea    rdx,[rax+0x8]
  409be9:	mov    rax,QWORD PTR [rbp-0x120]
  409bf0:	lea    rcx,[rax+0x18]
  409bf4:	mov    rax,QWORD PTR [rbp-0x120]
  409bfb:	mov    rsi,rcx
  409bfe:	mov    rdi,rax
  409c01:	call   408cfc <rb_strcasecmp@plt+0x678c>
  409c06:	mov    rax,QWORD PTR [rbp-0x138]
  409c0d:	mov    eax,DWORD PTR [rax+0x324]
  409c13:	lea    edx,[rax+0x1]
  409c16:	mov    rax,QWORD PTR [rbp-0x138]
  409c1d:	mov    DWORD PTR [rax+0x324],edx
  409c23:	mov    rax,QWORD PTR [rbp-0x8]
  409c27:	xor    rax,QWORD PTR fs:0x28
  409c30:	je     409c37 <rb_strcasecmp@plt+0x76c7>
  409c32:	call   402400 <__stack_chk_fail@plt>
  409c37:	leave  
  409c38:	ret    
  409c39:	push   rbp
  409c3a:	mov    rbp,rsp
  409c3d:	sub    rsp,0x30
  409c41:	mov    QWORD PTR [rbp-0x28],rdi
  409c45:	mov    rax,0x415b80
  409c4c:	mov    edx,DWORD PTR [rax+0x18]
  409c4f:	mov    rax,QWORD PTR [rbp-0x28]
  409c53:	mov    esi,edx
  409c55:	mov    rdi,rax
  409c58:	call   40945b <rb_strcasecmp@plt+0x6eeb>
  409c5d:	mov    QWORD PTR [rbp-0x10],rax
  409c61:	mov    rax,QWORD PTR [rbp-0x28]
  409c65:	add    rax,0xf8
  409c6b:	movzx  eax,WORD PTR [rax]
  409c6e:	cmp    ax,0x2
  409c72:	jne    409c7d <rb_strcasecmp@plt+0x770d>
  409c74:	mov    DWORD PTR [rbp-0x1c],0x1
  409c7b:	jmp    409ca3 <rb_strcasecmp@plt+0x7733>
  409c7d:	mov    rax,QWORD PTR [rbp-0x28]
  409c81:	add    rax,0xf8
  409c87:	movzx  eax,WORD PTR [rax]
  409c8a:	cmp    ax,0xa
  409c8e:	jne    409c99 <rb_strcasecmp@plt+0x7729>
  409c90:	mov    DWORD PTR [rbp-0x1c],0x2
  409c97:	jmp    409ca3 <rb_strcasecmp@plt+0x7733>
  409c99:	mov    eax,0x0
  409c9e:	jmp    409d62 <rb_strcasecmp@plt+0x77f2>
  409ca3:	mov    rax,QWORD PTR [rbp-0x10]
  409ca7:	mov    BYTE PTR [rax],0x1
  409caa:	mov    rax,QWORD PTR [rbp-0x28]
  409cae:	mov    eax,DWORD PTR [rax]
  409cb0:	lea    rsi,[rip+0x5e39]        # 40faf0 <rb_strcasecmp@plt+0xd580>
  409cb7:	mov    edi,eax
  409cb9:	mov    eax,0x0
  409cbe:	call   4035ab <rb_strcasecmp@plt+0x103b>
  409cc3:	mov    rax,QWORD PTR [rip+0x103d6]        # 41a0a0 <rb_strcasecmp@plt+0x17b30>
  409cca:	mov    QWORD PTR [rbp-0x18],rax
  409cce:	jmp    409d21 <rb_strcasecmp@plt+0x77b1>
  409cd0:	mov    rax,QWORD PTR [rbp-0x18]
  409cd4:	mov    rax,QWORD PTR [rax]
  409cd7:	mov    QWORD PTR [rbp-0x8],rax
  409cdb:	mov    rax,QWORD PTR [rbp-0x8]
  409cdf:	movzx  eax,BYTE PTR [rax+0x320]
  409ce6:	xor    eax,0x1
  409ce9:	test   al,al
  409ceb:	je     409d15 <rb_strcasecmp@plt+0x77a5>
  409ced:	mov    rax,QWORD PTR [rbp-0x8]
  409cf1:	movzx  eax,BYTE PTR [rax+0x300]
  409cf8:	movzx  eax,al
  409cfb:	and    eax,DWORD PTR [rbp-0x1c]
  409cfe:	test   eax,eax
  409d00:	je     409d15 <rb_strcasecmp@plt+0x77a5>
  409d02:	mov    rdx,QWORD PTR [rbp-0x28]
  409d06:	mov    rax,QWORD PTR [rbp-0x8]
  409d0a:	mov    rsi,rdx
  409d0d:	mov    rdi,rax
  409d10:	call   409a8f <rb_strcasecmp@plt+0x751f>
  409d15:	mov    rax,QWORD PTR [rbp-0x18]
  409d19:	mov    rax,QWORD PTR [rax+0x10]
  409d1d:	mov    QWORD PTR [rbp-0x18],rax
  409d21:	cmp    QWORD PTR [rbp-0x18],0x0
  409d26:	jne    409cd0 <rb_strcasecmp@plt+0x7760>
  409d28:	mov    rax,QWORD PTR [rbp-0x10]
  409d2c:	mov    rax,QWORD PTR [rax+0x18]
  409d30:	test   rax,rax
  409d33:	jne    409d3c <rb_strcasecmp@plt+0x77cc>
  409d35:	mov    eax,0x0
  409d3a:	jmp    409d62 <rb_strcasecmp@plt+0x77f2>
  409d3c:	mov    eax,DWORD PTR [rip+0xbd9e]        # 415ae0 <rb_strcasecmp@plt+0x13570>
  409d42:	movsxd rdx,eax
  409d45:	mov    rax,0x415b80
  409d4c:	mov    ecx,DWORD PTR [rax+0x18]
  409d4f:	mov    rax,QWORD PTR [rbp-0x28]
  409d53:	mov    esi,ecx
  409d55:	mov    rdi,rax
  409d58:	call   4094b0 <rb_strcasecmp@plt+0x6f40>
  409d5d:	mov    eax,0x1
  409d62:	leave  
  409d63:	ret    
  409d64:	push   rbp
  409d65:	mov    rbp,rsp
  409d68:	sub    rsp,0x10
  409d6c:	mov    QWORD PTR [rbp-0x8],rdi
  409d70:	mov    rax,QWORD PTR [rbp-0x8]
  409d74:	mov    eax,DWORD PTR [rax+0x324]
  409d7a:	test   eax,eax
  409d7c:	jle    409d8b <rb_strcasecmp@plt+0x781b>
  409d7e:	mov    rax,QWORD PTR [rbp-0x8]
  409d82:	mov    BYTE PTR [rax+0x320],0x1
  409d89:	jmp    409daa <rb_strcasecmp@plt+0x783a>
  409d8b:	mov    rax,QWORD PTR [rbp-0x8]
  409d8f:	lea    rsi,[rip+0x1030a]        # 41a0a0 <rb_strcasecmp@plt+0x17b30>
  409d96:	mov    rdi,rax
  409d99:	call   40902b <rb_strcasecmp@plt+0x6abb>
  409d9e:	mov    rax,QWORD PTR [rbp-0x8]
  409da2:	mov    rdi,rax
  409da5:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  409daa:	nop
  409dab:	leave  
  409dac:	ret    
  409dad:	push   rbp
  409dae:	mov    rbp,rsp
  409db1:	sub    rsp,0x10
  409db5:	mov    rax,QWORD PTR [rip+0x102e4]        # 41a0a0 <rb_strcasecmp@plt+0x17b30>
  409dbc:	mov    QWORD PTR [rbp-0x10],rax
  409dc0:	cmp    QWORD PTR [rbp-0x10],0x0
  409dc5:	je     409dd1 <rb_strcasecmp@plt+0x7861>
  409dc7:	mov    rax,QWORD PTR [rbp-0x10]
  409dcb:	mov    rax,QWORD PTR [rax+0x10]
  409dcf:	jmp    409dd6 <rb_strcasecmp@plt+0x7866>
  409dd1:	mov    eax,0x0
  409dd6:	mov    QWORD PTR [rbp-0x8],rax
  409dda:	jmp    409e0d <rb_strcasecmp@plt+0x789d>
  409ddc:	mov    rax,QWORD PTR [rbp-0x10]
  409de0:	mov    rax,QWORD PTR [rax]
  409de3:	mov    rdi,rax
  409de6:	call   409d64 <rb_strcasecmp@plt+0x77f4>
  409deb:	mov    rax,QWORD PTR [rbp-0x8]
  409def:	mov    QWORD PTR [rbp-0x10],rax
  409df3:	cmp    QWORD PTR [rbp-0x10],0x0
  409df8:	je     409e04 <rb_strcasecmp@plt+0x7894>
  409dfa:	mov    rax,QWORD PTR [rbp-0x10]
  409dfe:	mov    rax,QWORD PTR [rax+0x10]
  409e02:	jmp    409e09 <rb_strcasecmp@plt+0x7899>
  409e04:	mov    eax,0x0
  409e09:	mov    QWORD PTR [rbp-0x8],rax
  409e0d:	cmp    QWORD PTR [rbp-0x10],0x0
  409e12:	jne    409ddc <rb_strcasecmp@plt+0x786c>
  409e14:	nop
  409e15:	leave  
  409e16:	ret    
  409e17:	push   rbp
  409e18:	mov    rbp,rsp
  409e1b:	sub    rsp,0x10
  409e1f:	mov    QWORD PTR [rbp-0x8],rdi
  409e23:	mov    rax,QWORD PTR [rip+0x10286]        # 41a0b0 <rb_strcasecmp@plt+0x17b40>
  409e2a:	test   rax,rax
  409e2d:	jne    409e51 <rb_strcasecmp@plt+0x78e1>
  409e2f:	mov    rax,0x415b80
  409e36:	mov    edx,DWORD PTR [rax+0x18]
  409e39:	mov    rax,QWORD PTR [rbp-0x8]
  409e3d:	mov    esi,edx
  409e3f:	mov    rdi,rax
  409e42:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  409e47:	mov    eax,0x1
  409e4c:	jmp    409edb <rb_strcasecmp@plt+0x796b>
  409e51:	mov    rax,QWORD PTR [rbp-0x8]
  409e55:	mov    rdi,rax
  409e58:	call   4092c6 <rb_strcasecmp@plt+0x6d56>
  409e5d:	mov    edi,0x20
  409e62:	call   409209 <rb_strcasecmp@plt+0x6c99>
  409e67:	mov    rdx,rax
  409e6a:	mov    rax,0x415b80
  409e71:	mov    ecx,DWORD PTR [rax+0x18]
  409e74:	mov    rax,QWORD PTR [rbp-0x8]
  409e78:	mov    esi,ecx
  409e7a:	mov    rdi,rax
  409e7d:	call   409481 <rb_strcasecmp@plt+0x6f11>
  409e82:	mov    rax,QWORD PTR [rbp-0x8]
  409e86:	lea    rsi,[rip+0x5c87]        # 40fb14 <rb_strcasecmp@plt+0xd5a4>
  409e8d:	mov    rdi,rax
  409e90:	call   4093f1 <rb_strcasecmp@plt+0x6e81>
  409e95:	test   al,al
  409e97:	je     409ed6 <rb_strcasecmp@plt+0x7966>
  409e99:	mov    rax,QWORD PTR [rbp-0x8]
  409e9d:	lea    rsi,[rip+0x5c75]        # 40fb19 <rb_strcasecmp@plt+0xd5a9>
  409ea4:	mov    rdi,rax
  409ea7:	call   4093f1 <rb_strcasecmp@plt+0x6e81>
  409eac:	test   al,al
  409eae:	je     409ed6 <rb_strcasecmp@plt+0x7966>
  409eb0:	mov    rax,QWORD PTR [rbp-0x8]
  409eb4:	mov    rdi,rax
  409eb7:	call   409c39 <rb_strcasecmp@plt+0x76c9>
  409ebc:	xor    eax,0x1
  409ebf:	test   al,al
  409ec1:	je     409ed6 <rb_strcasecmp@plt+0x7966>
  409ec3:	mov    rax,QWORD PTR [rbp-0x8]
  409ec7:	mov    rdi,rax
  409eca:	call   40a122 <rb_strcasecmp@plt+0x7bb2>
  409ecf:	mov    eax,0x1
  409ed4:	jmp    409edb <rb_strcasecmp@plt+0x796b>
  409ed6:	mov    eax,0x1
  409edb:	leave  
  409edc:	ret    
  409edd:	push   rbp
  409ede:	mov    rbp,rsp
  409ee1:	sub    rsp,0x20
  409ee5:	mov    QWORD PTR [rbp-0x18],rdi
  409ee9:	mov    DWORD PTR [rbp-0x1c],esi
  409eec:	mov    rax,0x415b80
  409ef3:	mov    edx,DWORD PTR [rax+0x18]
  409ef6:	mov    rax,QWORD PTR [rbp-0x18]
  409efa:	mov    esi,edx
  409efc:	mov    rdi,rax
  409eff:	call   40945b <rb_strcasecmp@plt+0x6eeb>
  409f04:	mov    QWORD PTR [rbp-0x8],rax
  409f08:	cmp    QWORD PTR [rbp-0x8],0x0
  409f0d:	je     409f69 <rb_strcasecmp@plt+0x79f9>
  409f0f:	mov    rax,QWORD PTR [rbp-0x8]
  409f13:	movzx  eax,BYTE PTR [rax]
  409f16:	test   al,al
  409f18:	jne    409f69 <rb_strcasecmp@plt+0x79f9>
  409f1a:	mov    rax,QWORD PTR [rbp-0x18]
  409f1e:	lea    rsi,[rip+0x5bef]        # 40fb14 <rb_strcasecmp@plt+0xd5a4>
  409f25:	mov    rdi,rax
  409f28:	call   4093f1 <rb_strcasecmp@plt+0x6e81>
  409f2d:	test   al,al
  409f2f:	je     409f6a <rb_strcasecmp@plt+0x79fa>
  409f31:	mov    rax,QWORD PTR [rbp-0x18]
  409f35:	lea    rsi,[rip+0x5bdd]        # 40fb19 <rb_strcasecmp@plt+0xd5a9>
  409f3c:	mov    rdi,rax
  409f3f:	call   4093f1 <rb_strcasecmp@plt+0x6e81>
  409f44:	test   al,al
  409f46:	je     409f6a <rb_strcasecmp@plt+0x79fa>
  409f48:	mov    rax,QWORD PTR [rbp-0x18]
  409f4c:	mov    rdi,rax
  409f4f:	call   409c39 <rb_strcasecmp@plt+0x76c9>
  409f54:	xor    eax,0x1
  409f57:	test   al,al
  409f59:	je     409f6a <rb_strcasecmp@plt+0x79fa>
  409f5b:	mov    rax,QWORD PTR [rbp-0x18]
  409f5f:	mov    rdi,rax
  409f62:	call   40a122 <rb_strcasecmp@plt+0x7bb2>
  409f67:	jmp    409f6a <rb_strcasecmp@plt+0x79fa>
  409f69:	nop
  409f6a:	leave  
  409f6b:	ret    
  409f6c:	push   rbp
  409f6d:	mov    rbp,rsp
  409f70:	sub    rsp,0x30
  409f74:	mov    QWORD PTR [rbp-0x28],rdi
  409f78:	mov    QWORD PTR [rbp-0x30],rsi
  409f7c:	mov    rax,0x415b80
  409f83:	mov    edx,DWORD PTR [rax+0x18]
  409f86:	mov    rax,QWORD PTR [rbp-0x28]
  409f8a:	mov    esi,edx
  409f8c:	mov    rdi,rax
  409f8f:	call   40945b <rb_strcasecmp@plt+0x6eeb>
  409f94:	mov    QWORD PTR [rbp-0x10],rax
  409f98:	cmp    QWORD PTR [rbp-0x10],0x0
  409f9d:	je     40a0db <rb_strcasecmp@plt+0x7b6b>
  409fa3:	mov    rax,QWORD PTR [rbp-0x10]
  409fa7:	mov    rax,QWORD PTR [rax+0x18]
  409fab:	test   rax,rax
  409fae:	je     40a06f <rb_strcasecmp@plt+0x7aff>
  409fb4:	mov    rax,QWORD PTR [rbp-0x28]
  409fb8:	mov    eax,DWORD PTR [rax]
  409fba:	mov    rdx,QWORD PTR [rbp-0x30]
  409fbe:	mov    rsi,rdx
  409fc1:	mov    edi,eax
  409fc3:	mov    eax,0x0
  409fc8:	call   4035ab <rb_strcasecmp@plt+0x103b>
  409fcd:	mov    rax,QWORD PTR [rbp-0x10]
  409fd1:	mov    rax,QWORD PTR [rax+0x8]
  409fd5:	mov    QWORD PTR [rbp-0x20],rax
  409fd9:	cmp    QWORD PTR [rbp-0x20],0x0
  409fde:	je     409fea <rb_strcasecmp@plt+0x7a7a>
  409fe0:	mov    rax,QWORD PTR [rbp-0x20]
  409fe4:	mov    rax,QWORD PTR [rax+0x10]
  409fe8:	jmp    409fef <rb_strcasecmp@plt+0x7a7f>
  409fea:	mov    eax,0x0
  409fef:	mov    QWORD PTR [rbp-0x18],rax
  409ff3:	jmp    40a068 <rb_strcasecmp@plt+0x7af8>
  409ff5:	mov    rax,QWORD PTR [rbp-0x20]
  409ff9:	mov    rax,QWORD PTR [rax]
  409ffc:	mov    QWORD PTR [rbp-0x8],rax
  40a000:	mov    rax,QWORD PTR [rbp-0x8]
  40a004:	mov    rax,QWORD PTR [rax+0x10]
  40a008:	mov    rdi,rax
  40a00b:	call   402e60 <rb_strcasecmp@plt+0x8f0>
  40a010:	mov    rax,QWORD PTR [rbp-0x8]
  40a014:	mov    rax,QWORD PTR [rax]
  40a017:	mov    rdi,rax
  40a01a:	call   409524 <rb_strcasecmp@plt+0x6fb4>
  40a01f:	mov    rax,QWORD PTR [rbp-0x10]
  40a023:	lea    rdx,[rax+0x8]
  40a027:	mov    rax,QWORD PTR [rbp-0x8]
  40a02b:	add    rax,0x18
  40a02f:	mov    rsi,rdx
  40a032:	mov    rdi,rax
  40a035:	call   408e00 <rb_strcasecmp@plt+0x6890>
  40a03a:	mov    rax,QWORD PTR [rbp-0x8]
  40a03e:	mov    rdi,rax
  40a041:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  40a046:	mov    rax,QWORD PTR [rbp-0x18]
  40a04a:	mov    QWORD PTR [rbp-0x20],rax
  40a04e:	cmp    QWORD PTR [rbp-0x20],0x0
  40a053:	je     40a05f <rb_strcasecmp@plt+0x7aef>
  40a055:	mov    rax,QWORD PTR [rbp-0x20]
  40a059:	mov    rax,QWORD PTR [rax+0x10]
  40a05d:	jmp    40a064 <rb_strcasecmp@plt+0x7af4>
  40a05f:	mov    eax,0x0
  40a064:	mov    QWORD PTR [rbp-0x18],rax
  40a068:	cmp    QWORD PTR [rbp-0x20],0x0
  40a06d:	jne    409ff5 <rb_strcasecmp@plt+0x7a85>
  40a06f:	mov    rax,QWORD PTR [rbp-0x10]
  40a073:	mov    rdi,rax
  40a076:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  40a07b:	mov    rax,0x415b80
  40a082:	mov    ecx,DWORD PTR [rax+0x18]
  40a085:	mov    rax,QWORD PTR [rbp-0x28]
  40a089:	mov    edx,0x0
  40a08e:	mov    esi,ecx
  40a090:	mov    rdi,rax
  40a093:	call   409481 <rb_strcasecmp@plt+0x6f11>
  40a098:	mov    rax,0x415b80
  40a09f:	mov    ecx,DWORD PTR [rax+0x18]
  40a0a2:	mov    rax,QWORD PTR [rbp-0x28]
  40a0a6:	mov    edx,0x0
  40a0ab:	mov    esi,ecx
  40a0ad:	mov    rdi,rax
  40a0b0:	call   4094f5 <rb_strcasecmp@plt+0x6f85>
  40a0b5:	mov    rax,0x415b80
  40a0bc:	mov    edx,DWORD PTR [rax+0x18]
  40a0bf:	mov    rax,QWORD PTR [rbp-0x28]
  40a0c3:	mov    esi,edx
  40a0c5:	mov    rdi,rax
  40a0c8:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40a0cd:	mov    rax,QWORD PTR [rbp-0x28]
  40a0d1:	mov    rdi,rax
  40a0d4:	call   4092e8 <rb_strcasecmp@plt+0x6d78>
  40a0d9:	jmp    40a0dc <rb_strcasecmp@plt+0x7b6c>
  40a0db:	nop
  40a0dc:	leave  
  40a0dd:	ret    
  40a0de:	push   rbp
  40a0df:	mov    rbp,rsp
  40a0e2:	sub    rsp,0x10
  40a0e6:	mov    QWORD PTR [rbp-0x8],rdi
  40a0ea:	mov    rax,QWORD PTR [rbp-0x8]
  40a0ee:	lea    rsi,[rip+0x5a2a]        # 40fb1f <rb_strcasecmp@plt+0xd5af>
  40a0f5:	mov    rdi,rax
  40a0f8:	call   409f6c <rb_strcasecmp@plt+0x79fc>
  40a0fd:	nop
  40a0fe:	leave  
  40a0ff:	ret    
  40a100:	push   rbp
  40a101:	mov    rbp,rsp
  40a104:	sub    rsp,0x10
  40a108:	mov    QWORD PTR [rbp-0x8],rdi
  40a10c:	mov    rax,QWORD PTR [rbp-0x8]
  40a110:	lea    rsi,[rip+0x5a24]        # 40fb3b <rb_strcasecmp@plt+0xd5cb>
  40a117:	mov    rdi,rax
  40a11a:	call   409f6c <rb_strcasecmp@plt+0x79fc>
  40a11f:	nop
  40a120:	leave  
  40a121:	ret    
  40a122:	push   rbp
  40a123:	mov    rbp,rsp
  40a126:	sub    rsp,0x10
  40a12a:	mov    QWORD PTR [rbp-0x8],rdi
  40a12e:	mov    rax,QWORD PTR [rbp-0x8]
  40a132:	lea    rsi,[rip+0x5a1c]        # 40fb55 <rb_strcasecmp@plt+0xd5e5>
  40a139:	mov    rdi,rax
  40a13c:	call   409f6c <rb_strcasecmp@plt+0x79fc>
  40a141:	nop
  40a142:	leave  
  40a143:	ret    
  40a144:	push   rbp
  40a145:	mov    rbp,rsp
  40a148:	sub    rsp,0x30
  40a14c:	mov    rax,QWORD PTR fs:0x28
  40a155:	mov    QWORD PTR [rbp-0x8],rax
  40a159:	xor    eax,eax
  40a15b:	mov    rax,0x41a270
  40a162:	mov    rax,QWORD PTR [rax]
  40a165:	lea    rdx,[rbp-0x20]
  40a169:	mov    rsi,rdx
  40a16c:	mov    rdi,rax
  40a16f:	call   402250 <rb_dictionary_foreach_start@plt>
  40a174:	jmp    40a19b <rb_strcasecmp@plt+0x7c2b>
  40a176:	mov    rax,QWORD PTR [rbp-0x28]
  40a17a:	mov    rdi,rax
  40a17d:	call   40a100 <rb_strcasecmp@plt+0x7b90>
  40a182:	mov    rax,0x41a270
  40a189:	mov    rax,QWORD PTR [rax]
  40a18c:	lea    rdx,[rbp-0x20]
  40a190:	mov    rsi,rdx
  40a193:	mov    rdi,rax
  40a196:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40a19b:	mov    rax,0x41a270
  40a1a2:	mov    rax,QWORD PTR [rax]
  40a1a5:	lea    rdx,[rbp-0x20]
  40a1a9:	mov    rsi,rdx
  40a1ac:	mov    rdi,rax
  40a1af:	call   402140 <rb_dictionary_foreach_cur@plt>
  40a1b4:	mov    QWORD PTR [rbp-0x28],rax
  40a1b8:	cmp    QWORD PTR [rbp-0x28],0x0
  40a1bd:	jne    40a176 <rb_strcasecmp@plt+0x7c06>
  40a1bf:	call   409dad <rb_strcasecmp@plt+0x783d>
  40a1c4:	nop
  40a1c5:	mov    rax,QWORD PTR [rbp-0x8]
  40a1c9:	xor    rax,QWORD PTR fs:0x28
  40a1d2:	je     40a1d9 <rb_strcasecmp@plt+0x7c69>
  40a1d4:	call   402400 <__stack_chk_fail@plt>
  40a1d9:	leave  
  40a1da:	ret    
  40a1db:	push   rbp
  40a1dc:	mov    rbp,rsp
  40a1df:	add    rsp,0xffffffffffffff80
  40a1e3:	mov    QWORD PTR [rbp-0x68],rdi
  40a1e7:	mov    DWORD PTR [rbp-0x6c],esi
  40a1ea:	mov    QWORD PTR [rbp-0x78],rdx
  40a1ee:	mov    rax,QWORD PTR fs:0x28
  40a1f7:	mov    QWORD PTR [rbp-0x8],rax
  40a1fb:	xor    eax,eax
  40a1fd:	mov    QWORD PTR [rbp-0x20],0x0
  40a205:	mov    QWORD PTR [rbp-0x18],0x0
  40a20d:	mov    QWORD PTR [rbp-0x10],0x0
  40a215:	mov    rax,QWORD PTR [rbp-0x78]
  40a219:	add    rax,0x10
  40a21d:	mov    rax,QWORD PTR [rax]
  40a220:	mov    rdi,rax
  40a223:	call   409245 <rb_strcasecmp@plt+0x6cd5>
  40a228:	mov    QWORD PTR [rbp-0x30],rax
  40a22c:	mov    rax,QWORD PTR [rbp-0x30]
  40a230:	movzx  eax,BYTE PTR [rax]
  40a233:	cmp    al,0x2a
  40a235:	je     40a3bf <rb_strcasecmp@plt+0x7e4f>
  40a23b:	lea    rdx,[rbp-0x48]
  40a23f:	mov    rax,QWORD PTR [rbp-0x30]
  40a243:	lea    rsi,[rip+0x5926]        # 40fb70 <rb_strcasecmp@plt+0xd600>
  40a24a:	mov    rdi,rax
  40a24d:	call   402130 <rb_strtok_r@plt>
  40a252:	mov    QWORD PTR [rbp-0x40],rax
  40a256:	jmp    40a3b2 <rb_strcasecmp@plt+0x7e42>
  40a25b:	mov    edi,0x58
  40a260:	call   409209 <rb_strcasecmp@plt+0x6c99>
  40a265:	mov    QWORD PTR [rbp-0x28],rax
  40a269:	mov    DWORD PTR [rbp-0x50],0x0
  40a270:	mov    DWORD PTR [rbp-0x4c],0x2
  40a277:	mov    rax,QWORD PTR [rbp-0x40]
  40a27b:	mov    QWORD PTR [rbp-0x38],rax
  40a27f:	jmp    40a31b <rb_strcasecmp@plt+0x7dab>
  40a284:	mov    rax,QWORD PTR [rbp-0x38]
  40a288:	movzx  eax,BYTE PTR [rax]
  40a28b:	cmp    al,0x2e
  40a28d:	jne    40a2c2 <rb_strcasecmp@plt+0x7d52>
  40a28f:	add    DWORD PTR [rbp-0x50],0x1
  40a293:	cmp    DWORD PTR [rbp-0x50],0x3
  40a297:	jle    40a2b9 <rb_strcasecmp@plt+0x7d49>
  40a299:	lea    rsi,[rip+0x58d8]        # 40fb78 <rb_strcasecmp@plt+0xd608>
  40a2a0:	mov    edi,0x43
  40a2a5:	mov    eax,0x0
  40a2aa:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40a2af:	mov    edi,0x3
  40a2b4:	call   4020e0 <exit@plt>
  40a2b9:	mov    DWORD PTR [rbp-0x4c],0x1
  40a2c0:	jmp    40a316 <rb_strcasecmp@plt+0x7da6>
  40a2c2:	call   402240 <__ctype_b_loc@plt>
  40a2c7:	mov    rdx,QWORD PTR [rax]
  40a2ca:	mov    rax,QWORD PTR [rbp-0x38]
  40a2ce:	movzx  eax,BYTE PTR [rax]
  40a2d1:	movsx  rax,al
  40a2d5:	add    rax,rax
  40a2d8:	add    rax,rdx
  40a2db:	movzx  eax,WORD PTR [rax]
  40a2de:	movzx  eax,ax
  40a2e1:	and    eax,0x800
  40a2e6:	test   eax,eax
  40a2e8:	jne    40a316 <rb_strcasecmp@plt+0x7da6>
  40a2ea:	mov    rax,QWORD PTR [rbp-0x38]
  40a2ee:	movzx  eax,BYTE PTR [rax]
  40a2f1:	movsx  eax,al
  40a2f4:	mov    edx,eax
  40a2f6:	lea    rsi,[rip+0x58bb]        # 40fbb8 <rb_strcasecmp@plt+0xd648>
  40a2fd:	mov    edi,0x43
  40a302:	mov    eax,0x0
  40a307:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40a30c:	mov    edi,0x3
  40a311:	call   4020e0 <exit@plt>
  40a316:	add    QWORD PTR [rbp-0x38],0x1
  40a31b:	mov    rax,QWORD PTR [rbp-0x38]
  40a31f:	movzx  eax,BYTE PTR [rax]
  40a322:	test   al,al
  40a324:	jne    40a284 <rb_strcasecmp@plt+0x7d14>
  40a32a:	cmp    DWORD PTR [rbp-0x50],0x0
  40a32e:	jle    40a356 <rb_strcasecmp@plt+0x7de6>
  40a330:	cmp    DWORD PTR [rbp-0x50],0x2
  40a334:	jg     40a356 <rb_strcasecmp@plt+0x7de6>
  40a336:	lea    rsi,[rip+0x58cb]        # 40fc08 <rb_strcasecmp@plt+0xd698>
  40a33d:	mov    edi,0x43
  40a342:	mov    eax,0x0
  40a347:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40a34c:	mov    edi,0x3
  40a351:	call   4020e0 <exit@plt>
  40a356:	mov    rax,QWORD PTR [rbp-0x28]
  40a35a:	mov    edx,DWORD PTR [rbp-0x4c]
  40a35d:	mov    DWORD PTR [rax],edx
  40a35f:	mov    rax,QWORD PTR [rbp-0x28]
  40a363:	lea    rcx,[rax+0x4]
  40a367:	mov    rax,QWORD PTR [rbp-0x40]
  40a36b:	mov    edx,0x35
  40a370:	mov    rsi,rax
  40a373:	mov    rdi,rcx
  40a376:	call   4021d0 <rb_strlcpy@plt>
  40a37b:	mov    rax,QWORD PTR [rbp-0x28]
  40a37f:	lea    rcx,[rax+0x40]
  40a383:	lea    rdx,[rbp-0x20]
  40a387:	mov    rax,QWORD PTR [rbp-0x28]
  40a38b:	mov    rsi,rcx
  40a38e:	mov    rdi,rax
  40a391:	call   408cfc <rb_strcasecmp@plt+0x678c>
  40a396:	lea    rax,[rbp-0x48]
  40a39a:	mov    rdx,rax
  40a39d:	lea    rsi,[rip+0x57cc]        # 40fb70 <rb_strcasecmp@plt+0xd600>
  40a3a4:	mov    edi,0x0
  40a3a9:	call   402130 <rb_strtok_r@plt>
  40a3ae:	mov    QWORD PTR [rbp-0x40],rax
  40a3b2:	cmp    QWORD PTR [rbp-0x40],0x0
  40a3b7:	jne    40a25b <rb_strcasecmp@plt+0x7ceb>
  40a3bd:	jmp    40a3c0 <rb_strcasecmp@plt+0x7e50>
  40a3bf:	nop
  40a3c0:	mov    rax,QWORD PTR [rbp-0x30]
  40a3c4:	mov    rdi,rax
  40a3c7:	call   40929b <rb_strcasecmp@plt+0x6d2b>
  40a3cc:	mov    rax,QWORD PTR [rbp-0x78]
  40a3d0:	add    rax,0x8
  40a3d4:	mov    rax,QWORD PTR [rax]
  40a3d7:	mov    rdi,rax
  40a3da:	call   402330 <atoi@plt>
  40a3df:	and    eax,0x3
  40a3e2:	mov    BYTE PTR [rbp-0x51],al
  40a3e5:	movzx  edx,BYTE PTR [rbp-0x51]
  40a3e9:	mov    rax,QWORD PTR [rbp-0x78]
  40a3ed:	add    rax,0x18
  40a3f1:	mov    rsi,QWORD PTR [rax]
  40a3f4:	mov    rax,QWORD PTR [rbp-0x78]
  40a3f8:	mov    rax,QWORD PTR [rax]
  40a3fb:	lea    rcx,[rbp-0x20]
  40a3ff:	mov    rdi,rax
  40a402:	call   409608 <rb_strcasecmp@plt+0x7098>
  40a407:	test   rax,rax
  40a40a:	jne    40a42c <rb_strcasecmp@plt+0x7ebc>
  40a40c:	lea    rsi,[rip+0x5835]        # 40fc48 <rb_strcasecmp@plt+0xd6d8>
  40a413:	mov    edi,0x43
  40a418:	mov    eax,0x0
  40a41d:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40a422:	mov    edi,0x3
  40a427:	call   4020e0 <exit@plt>
  40a42c:	nop
  40a42d:	mov    rax,QWORD PTR [rbp-0x8]
  40a431:	xor    rax,QWORD PTR fs:0x28
  40a43a:	je     40a441 <rb_strcasecmp@plt+0x7ed1>
  40a43c:	call   402400 <__stack_chk_fail@plt>
  40a441:	leave  
  40a442:	ret    
  40a443:	push   rbp
  40a444:	mov    rbp,rsp
  40a447:	sub    rsp,0x30
  40a44b:	mov    QWORD PTR [rbp-0x18],rdi
  40a44f:	mov    DWORD PTR [rbp-0x1c],esi
  40a452:	mov    QWORD PTR [rbp-0x28],rdx
  40a456:	mov    rax,QWORD PTR [rbp-0x28]
  40a45a:	mov    rax,QWORD PTR [rax]
  40a45d:	mov    rdi,rax
  40a460:	call   409703 <rb_strcasecmp@plt+0x7193>
  40a465:	mov    QWORD PTR [rbp-0x8],rax
  40a469:	cmp    QWORD PTR [rbp-0x8],0x0
  40a46e:	jne    40a492 <rb_strcasecmp@plt+0x7f22>
  40a470:	mov    rax,QWORD PTR [rbp-0x28]
  40a474:	mov    rax,QWORD PTR [rax]
  40a477:	mov    rdx,rax
  40a47a:	lea    rsi,[rip+0x57f7]        # 40fc78 <rb_strcasecmp@plt+0xd708>
  40a481:	mov    edi,0x57
  40a486:	mov    eax,0x0
  40a48b:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40a490:	jmp    40a49e <rb_strcasecmp@plt+0x7f2e>
  40a492:	mov    rax,QWORD PTR [rbp-0x8]
  40a496:	mov    rdi,rax
  40a499:	call   409d64 <rb_strcasecmp@plt+0x77f4>
  40a49e:	leave  
  40a49f:	ret    
  40a4a0:	push   rbp
  40a4a1:	mov    rbp,rsp
  40a4a4:	sub    rsp,0x20
  40a4a8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4ac:	mov    DWORD PTR [rbp-0xc],esi
  40a4af:	mov    QWORD PTR [rbp-0x18],rdx
  40a4b3:	call   409dad <rb_strcasecmp@plt+0x783d>
  40a4b8:	nop
  40a4b9:	leave  
  40a4ba:	ret    
  40a4bb:	push   rbp
  40a4bc:	mov    rbp,rsp
  40a4bf:	sub    rsp,0x30
  40a4c3:	mov    QWORD PTR [rbp-0x18],rdi
  40a4c7:	mov    DWORD PTR [rbp-0x1c],esi
  40a4ca:	mov    QWORD PTR [rbp-0x28],rdx
  40a4ce:	mov    rax,QWORD PTR [rbp-0x28]
  40a4d2:	mov    rax,QWORD PTR [rax]
  40a4d5:	mov    rdi,rax
  40a4d8:	call   402330 <atoi@plt>
  40a4dd:	mov    DWORD PTR [rbp-0x4],eax
  40a4e0:	cmp    DWORD PTR [rbp-0x4],0x0
  40a4e4:	jns    40a50b <rb_strcasecmp@plt+0x7f9b>
  40a4e6:	mov    eax,DWORD PTR [rbp-0x4]
  40a4e9:	mov    edx,eax
  40a4eb:	lea    rsi,[rip+0x57b6]        # 40fca8 <rb_strcasecmp@plt+0xd738>
  40a4f2:	mov    edi,0x43
  40a4f7:	mov    eax,0x0
  40a4fc:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40a501:	mov    edi,0x3
  40a506:	call   4020e0 <exit@plt>
  40a50b:	mov    eax,DWORD PTR [rbp-0x4]
  40a50e:	mov    DWORD PTR [rip+0xb5cc],eax        # 415ae0 <rb_strcasecmp@plt+0x13570>
  40a514:	nop
  40a515:	leave  
  40a516:	ret    
  40a517:	push   rbp
  40a518:	mov    rbp,rsp
  40a51b:	sub    rsp,0x20
  40a51f:	mov    QWORD PTR [rbp-0x18],rdi
  40a523:	mov    rax,QWORD PTR [rbp-0x18]
  40a527:	mov    rsi,rax
  40a52a:	mov    edi,0x1
  40a52f:	call   402490 <calloc@plt>
  40a534:	mov    QWORD PTR [rbp-0x8],rax
  40a538:	cmp    QWORD PTR [rbp-0x8],0x0
  40a53d:	sete   al
  40a540:	movzx  eax,al
  40a543:	test   rax,rax
  40a546:	je     40a54d <rb_strcasecmp@plt+0x7fdd>
  40a548:	call   4023b0 <rb_outofmemory@plt>
  40a54d:	mov    rax,QWORD PTR [rbp-0x8]
  40a551:	leave  
  40a552:	ret    
  40a553:	push   rbp
  40a554:	mov    rbp,rsp
  40a557:	sub    rsp,0x10
  40a55b:	mov    QWORD PTR [rbp-0x8],rdi
  40a55f:	cmp    QWORD PTR [rbp-0x8],0x0
  40a564:	setne  al
  40a567:	movzx  eax,al
  40a56a:	test   rax,rax
  40a56d:	je     40a57b <rb_strcasecmp@plt+0x800b>
  40a56f:	mov    rax,QWORD PTR [rbp-0x8]
  40a573:	mov    rdi,rax
  40a576:	call   402200 <free@plt>
  40a57b:	nop
  40a57c:	leave  
  40a57d:	ret    
  40a57e:	push   rbp
  40a57f:	mov    rbp,rsp
  40a582:	mov    QWORD PTR [rbp-0x8],rdi
  40a586:	mov    rax,QWORD PTR [rbp-0x8]
  40a58a:	mov    eax,DWORD PTR [rax+0x1cc]
  40a590:	lea    edx,[rax+0x1]
  40a593:	mov    rax,QWORD PTR [rbp-0x8]
  40a597:	mov    DWORD PTR [rax+0x1cc],edx
  40a59d:	nop
  40a59e:	pop    rbp
  40a59f:	ret    
  40a5a0:	push   rbp
  40a5a1:	mov    rbp,rsp
  40a5a4:	sub    rsp,0x10
  40a5a8:	mov    QWORD PTR [rbp-0x8],rdi
  40a5ac:	mov    rax,QWORD PTR [rbp-0x8]
  40a5b0:	mov    eax,DWORD PTR [rax+0x1cc]
  40a5b6:	lea    edx,[rax-0x1]
  40a5b9:	mov    rax,QWORD PTR [rbp-0x8]
  40a5bd:	mov    DWORD PTR [rax+0x1cc],edx
  40a5c3:	mov    rax,QWORD PTR [rbp-0x8]
  40a5c7:	mov    eax,DWORD PTR [rax+0x1cc]
  40a5cd:	test   eax,eax
  40a5cf:	jne    40a5dd <rb_strcasecmp@plt+0x806d>
  40a5d1:	mov    rax,QWORD PTR [rbp-0x8]
  40a5d5:	mov    rdi,rax
  40a5d8:	call   40421d <rb_strcasecmp@plt+0x1cad>
  40a5dd:	nop
  40a5de:	leave  
  40a5df:	ret    
  40a5e0:	push   rbp
  40a5e1:	mov    rbp,rsp
  40a5e4:	mov    QWORD PTR [rbp-0x8],rdi
  40a5e8:	mov    DWORD PTR [rbp-0xc],esi
  40a5eb:	mov    rax,QWORD PTR [rbp-0x8]
  40a5ef:	mov    rax,QWORD PTR [rax+0x1d0]
  40a5f6:	mov    edx,DWORD PTR [rbp-0xc]
  40a5f9:	shl    rdx,0x5
  40a5fd:	add    rax,rdx
  40a600:	mov    rax,QWORD PTR [rax+0x10]
  40a604:	pop    rbp
  40a605:	ret    
  40a606:	push   rbp
  40a607:	mov    rbp,rsp
  40a60a:	mov    QWORD PTR [rbp-0x8],rdi
  40a60e:	mov    DWORD PTR [rbp-0xc],esi
  40a611:	mov    QWORD PTR [rbp-0x18],rdx
  40a615:	mov    rax,QWORD PTR [rbp-0x8]
  40a619:	mov    rax,QWORD PTR [rax+0x1d0]
  40a620:	mov    edx,DWORD PTR [rbp-0xc]
  40a623:	shl    rdx,0x5
  40a627:	add    rdx,rax
  40a62a:	mov    rax,QWORD PTR [rbp-0x18]
  40a62e:	mov    QWORD PTR [rdx+0x10],rax
  40a632:	nop
  40a633:	pop    rbp
  40a634:	ret    
  40a635:	push   rbp
  40a636:	mov    rbp,rsp
  40a639:	push   rbx
  40a63a:	sub    rsp,0x28
  40a63e:	mov    QWORD PTR [rbp-0x18],rdi
  40a642:	mov    DWORD PTR [rbp-0x1c],esi
  40a645:	mov    QWORD PTR [rbp-0x28],rdx
  40a649:	mov    rax,QWORD PTR [rbp-0x18]
  40a64d:	mov    rax,QWORD PTR [rax+0x1d0]
  40a654:	mov    edx,DWORD PTR [rbp-0x1c]
  40a657:	shl    rdx,0x5
  40a65b:	lea    rbx,[rax+rdx*1]
  40a65f:	call   4022a0 <rb_current_time@plt>
  40a664:	mov    rdx,rax
  40a667:	mov    rax,QWORD PTR [rbp-0x28]
  40a66b:	add    rax,rdx
  40a66e:	mov    QWORD PTR [rbx+0x8],rax
  40a672:	nop
  40a673:	add    rsp,0x28
  40a677:	pop    rbx
  40a678:	pop    rbp
  40a679:	ret    
  40a67a:	push   rbp
  40a67b:	mov    rbp,rsp
  40a67e:	mov    QWORD PTR [rbp-0x8],rdi
  40a682:	mov    DWORD PTR [rbp-0xc],esi
  40a685:	mov    QWORD PTR [rbp-0x18],rdx
  40a689:	mov    rax,QWORD PTR [rbp-0x8]
  40a68d:	mov    rax,QWORD PTR [rax+0x1d0]
  40a694:	mov    edx,DWORD PTR [rbp-0xc]
  40a697:	shl    rdx,0x5
  40a69b:	add    rdx,rax
  40a69e:	mov    rax,QWORD PTR [rbp-0x18]
  40a6a2:	mov    QWORD PTR [rdx+0x8],rax
  40a6a6:	nop
  40a6a7:	pop    rbp
  40a6a8:	ret    
  40a6a9:	push   rbp
  40a6aa:	mov    rbp,rsp
  40a6ad:	sub    rsp,0x70
  40a6b1:	mov    QWORD PTR [rbp-0x58],rdi
  40a6b5:	mov    DWORD PTR [rbp-0x5c],esi
  40a6b8:	mov    QWORD PTR [rbp-0x68],rdx
  40a6bc:	mov    rax,QWORD PTR fs:0x28
  40a6c5:	mov    QWORD PTR [rbp-0x8],rax
  40a6c9:	xor    eax,eax
  40a6cb:	mov    rax,QWORD PTR [rbp-0x68]
  40a6cf:	mov    QWORD PTR [rbp-0x40],rax
  40a6d3:	mov    rax,0x415ca0
  40a6da:	mov    edx,DWORD PTR [rax+0x18]
  40a6dd:	mov    rax,QWORD PTR [rbp-0x40]
  40a6e1:	mov    esi,edx
  40a6e3:	mov    rdi,rax
  40a6e6:	call   40a5e0 <rb_strcasecmp@plt+0x8070>
  40a6eb:	mov    QWORD PTR [rbp-0x38],rax
  40a6ef:	cmp    DWORD PTR [rbp-0x5c],0x0
  40a6f3:	je     40a70b <rb_strcasecmp@plt+0x819b>
  40a6f5:	mov    rax,QWORD PTR [rbp-0x40]
  40a6f9:	mov    esi,0x2
  40a6fe:	mov    rdi,rax
  40a701:	call   40aa18 <rb_strcasecmp@plt+0x84a8>
  40a706:	jmp    40a7a4 <rb_strcasecmp@plt+0x8234>
  40a70b:	mov    rax,QWORD PTR [rbp-0x40]
  40a70f:	movzx  eax,WORD PTR [rax+0x3e]
  40a713:	movzx  ecx,ax
  40a716:	mov    rax,QWORD PTR [rbp-0x40]
  40a71a:	movzx  eax,WORD PTR [rax+0xf6]
  40a721:	movzx  edx,ax
  40a724:	lea    rax,[rbp-0x30]
  40a728:	mov    r8d,ecx
  40a72b:	mov    ecx,edx
  40a72d:	lea    rdx,[rip+0x56e3]        # 40fe17 <rb_strcasecmp@plt+0xd8a7>
  40a734:	mov    esi,0x20
  40a739:	mov    rdi,rax
  40a73c:	mov    eax,0x0
  40a741:	call   402080 <snprintf@plt>
  40a746:	lea    rax,[rbp-0x30]
  40a74a:	mov    rdi,rax
  40a74d:	call   402210 <strlen@plt>
  40a752:	mov    DWORD PTR [rbp-0x44],eax
  40a755:	mov    rax,QWORD PTR [rbp-0x38]
  40a759:	mov    rax,QWORD PTR [rax]
  40a75c:	mov    edx,DWORD PTR [rbp-0x44]
  40a75f:	lea    rcx,[rbp-0x30]
  40a763:	mov    rsi,rcx
  40a766:	mov    rdi,rax
  40a769:	call   4021a0 <rb_write@plt>
  40a76e:	mov    rdx,rax
  40a771:	mov    eax,DWORD PTR [rbp-0x44]
  40a774:	cdqe   
  40a776:	cmp    rdx,rax
  40a779:	je     40a78e <rb_strcasecmp@plt+0x821e>
  40a77b:	mov    rax,QWORD PTR [rbp-0x40]
  40a77f:	mov    esi,0x2
  40a784:	mov    rdi,rax
  40a787:	call   40aa18 <rb_strcasecmp@plt+0x84a8>
  40a78c:	jmp    40a7a4 <rb_strcasecmp@plt+0x8234>
  40a78e:	mov    rax,QWORD PTR [rbp-0x38]
  40a792:	mov    rax,QWORD PTR [rax]
  40a795:	mov    rdx,QWORD PTR [rbp-0x40]
  40a799:	mov    rsi,rdx
  40a79c:	mov    rdi,rax
  40a79f:	call   40a7ba <rb_strcasecmp@plt+0x824a>
  40a7a4:	mov    rax,QWORD PTR [rbp-0x8]
  40a7a8:	xor    rax,QWORD PTR fs:0x28
  40a7b1:	je     40a7b8 <rb_strcasecmp@plt+0x8248>
  40a7b3:	call   402400 <__stack_chk_fail@plt>
  40a7b8:	leave  
  40a7b9:	ret    
  40a7ba:	push   rbp
  40a7bb:	mov    rbp,rsp
  40a7be:	sub    rsp,0xd0
  40a7c5:	mov    QWORD PTR [rbp-0xc8],rdi
  40a7cc:	mov    QWORD PTR [rbp-0xd0],rsi
  40a7d3:	mov    rax,QWORD PTR fs:0x28
  40a7dc:	mov    QWORD PTR [rbp-0x8],rax
  40a7e0:	xor    eax,eax
  40a7e2:	mov    rax,QWORD PTR [rbp-0xd0]
  40a7e9:	mov    QWORD PTR [rbp-0xa0],rax
  40a7f0:	lea    rdx,[rbp-0x90]
  40a7f7:	mov    eax,0x0
  40a7fc:	mov    ecx,0x10
  40a801:	mov    rdi,rdx
  40a804:	rep stos QWORD PTR es:[rdi],rax
  40a807:	mov    rdx,rdi
  40a80a:	mov    BYTE PTR [rdx],al
  40a80c:	add    rdx,0x1
  40a810:	mov    DWORD PTR [rbp-0xb8],0x2
  40a81a:	mov    QWORD PTR [rbp-0xb0],0x0
  40a825:	mov    QWORD PTR [rbp-0xa8],0x0
  40a830:	lea    rcx,[rbp-0x90]
  40a837:	mov    rax,QWORD PTR [rbp-0xc8]
  40a83e:	mov    edx,0x80
  40a843:	mov    rsi,rcx
  40a846:	mov    rdi,rax
  40a849:	call   402230 <rb_read@plt>
  40a84e:	mov    QWORD PTR [rbp-0x98],rax
  40a855:	cmp    QWORD PTR [rbp-0x98],0x0
  40a85d:	jns    40a89b <rb_strcasecmp@plt+0x832b>
  40a85f:	call   4023c0 <__errno_location@plt>
  40a864:	mov    eax,DWORD PTR [rax]
  40a866:	mov    edi,eax
  40a868:	call   402060 <rb_ignore_errno@plt>
  40a86d:	test   eax,eax
  40a86f:	je     40a89b <rb_strcasecmp@plt+0x832b>
  40a871:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a878:	mov    rax,QWORD PTR [rbp-0xc8]
  40a87f:	mov    rcx,rdx
  40a882:	lea    rdx,[rip+0xffffffffffffff31]        # 40a7ba <rb_strcasecmp@plt+0x824a>
  40a889:	mov    esi,0x1
  40a88e:	mov    rdi,rax
  40a891:	call   4020b0 <rb_setselect@plt>
  40a896:	jmp    40aa02 <rb_strcasecmp@plt+0x8492>
  40a89b:	cmp    QWORD PTR [rbp-0x98],0x0
  40a8a3:	jle    40a9d0 <rb_strcasecmp@plt+0x8460>
  40a8a9:	lea    rax,[rbp-0x90]
  40a8b0:	mov    rdi,rax
  40a8b3:	call   40abe0 <rb_strcasecmp@plt+0x8670>
  40a8b8:	mov    QWORD PTR [rbp-0xb0],rax
  40a8bf:	cmp    QWORD PTR [rbp-0xb0],0x0
  40a8c7:	je     40a9c6 <rb_strcasecmp@plt+0x8456>
  40a8cd:	mov    rax,QWORD PTR [rbp-0xa0]
  40a8d4:	add    rax,0x1b8
  40a8da:	mov    QWORD PTR [rbp-0xa8],rax
  40a8e1:	jmp    40a8eb <rb_strcasecmp@plt+0x837b>
  40a8e3:	add    QWORD PTR [rbp-0xb0],0x1
  40a8eb:	mov    rax,QWORD PTR [rbp-0xb0]
  40a8f2:	movzx  eax,BYTE PTR [rax]
  40a8f5:	cmp    al,0x7e
  40a8f7:	je     40a8e3 <rb_strcasecmp@plt+0x8373>
  40a8f9:	mov    rax,QWORD PTR [rbp-0xb0]
  40a900:	movzx  eax,BYTE PTR [rax]
  40a903:	cmp    al,0x5e
  40a905:	je     40a8e3 <rb_strcasecmp@plt+0x8373>
  40a907:	mov    DWORD PTR [rbp-0xb4],0xa
  40a911:	jmp    40a99f <rb_strcasecmp@plt+0x842f>
  40a916:	mov    rax,QWORD PTR [rbp-0xb0]
  40a91d:	movzx  eax,BYTE PTR [rax]
  40a920:	cmp    al,0x40
  40a922:	je     40a9ba <rb_strcasecmp@plt+0x844a>
  40a928:	mov    rax,QWORD PTR [rbp-0xb0]
  40a92f:	movzx  eax,BYTE PTR [rax]
  40a932:	cmp    al,0xd
  40a934:	je     40a9ba <rb_strcasecmp@plt+0x844a>
  40a93a:	mov    rax,QWORD PTR [rbp-0xb0]
  40a941:	movzx  eax,BYTE PTR [rax]
  40a944:	cmp    al,0xa
  40a946:	je     40a9ba <rb_strcasecmp@plt+0x844a>
  40a948:	mov    rax,QWORD PTR [rbp-0xb0]
  40a94f:	movzx  eax,BYTE PTR [rax]
  40a952:	cmp    al,0x20
  40a954:	je     40a997 <rb_strcasecmp@plt+0x8427>
  40a956:	mov    rax,QWORD PTR [rbp-0xb0]
  40a95d:	movzx  eax,BYTE PTR [rax]
  40a960:	cmp    al,0x3a
  40a962:	je     40a997 <rb_strcasecmp@plt+0x8427>
  40a964:	mov    rax,QWORD PTR [rbp-0xb0]
  40a96b:	movzx  eax,BYTE PTR [rax]
  40a96e:	cmp    al,0x5b
  40a970:	je     40a997 <rb_strcasecmp@plt+0x8427>
  40a972:	mov    rax,QWORD PTR [rbp-0xa8]
  40a979:	lea    rdx,[rax+0x1]
  40a97d:	mov    QWORD PTR [rbp-0xa8],rdx
  40a984:	mov    rdx,QWORD PTR [rbp-0xb0]
  40a98b:	movzx  edx,BYTE PTR [rdx]
  40a98e:	mov    BYTE PTR [rax],dl
  40a990:	sub    DWORD PTR [rbp-0xb4],0x1
  40a997:	add    QWORD PTR [rbp-0xb0],0x1
  40a99f:	mov    rax,QWORD PTR [rbp-0xb0]
  40a9a6:	movzx  eax,BYTE PTR [rax]
  40a9a9:	test   al,al
  40a9ab:	je     40a9ba <rb_strcasecmp@plt+0x844a>
  40a9ad:	cmp    DWORD PTR [rbp-0xb4],0x0
  40a9b4:	jne    40a916 <rb_strcasecmp@plt+0x83a6>
  40a9ba:	mov    rax,QWORD PTR [rbp-0xa8]
  40a9c1:	mov    BYTE PTR [rax],0x0
  40a9c4:	jmp    40a9d0 <rb_strcasecmp@plt+0x8460>
  40a9c6:	mov    DWORD PTR [rbp-0xb8],0x3
  40a9d0:	cmp    QWORD PTR [rbp-0xb0],0x0
  40a9d8:	jne    40a9f3 <rb_strcasecmp@plt+0x8483>
  40a9da:	mov    edx,DWORD PTR [rbp-0xb8]
  40a9e0:	mov    rax,QWORD PTR [rbp-0xa0]
  40a9e7:	mov    esi,edx
  40a9e9:	mov    rdi,rax
  40a9ec:	call   40aa18 <rb_strcasecmp@plt+0x84a8>
  40a9f1:	jmp    40aa02 <rb_strcasecmp@plt+0x8492>
  40a9f3:	mov    rax,QWORD PTR [rbp-0xa0]
  40a9fa:	mov    rdi,rax
  40a9fd:	call   40ab14 <rb_strcasecmp@plt+0x85a4>
  40aa02:	mov    rax,QWORD PTR [rbp-0x8]
  40aa06:	xor    rax,QWORD PTR fs:0x28
  40aa0f:	je     40aa16 <rb_strcasecmp@plt+0x84a6>
  40aa11:	call   402400 <__stack_chk_fail@plt>
  40aa16:	leave  
  40aa17:	ret    
  40aa18:	push   rbp
  40aa19:	mov    rbp,rsp
  40aa1c:	sub    rsp,0x20
  40aa20:	mov    QWORD PTR [rbp-0x18],rdi
  40aa24:	mov    DWORD PTR [rbp-0x1c],esi
  40aa27:	mov    rax,0x415ca0
  40aa2e:	mov    edx,DWORD PTR [rax+0x18]
  40aa31:	mov    rax,QWORD PTR [rbp-0x18]
  40aa35:	mov    esi,edx
  40aa37:	mov    rdi,rax
  40aa3a:	call   40a5e0 <rb_strcasecmp@plt+0x8070>
  40aa3f:	mov    QWORD PTR [rbp-0x8],rax
  40aa43:	mov    rax,QWORD PTR [rbp-0x18]
  40aa47:	add    rax,0x1b8
  40aa4d:	mov    edx,0xb
  40aa52:	lea    rsi,[rip+0x53c8]        # 40fe21 <rb_strcasecmp@plt+0xd8b1>
  40aa59:	mov    rdi,rax
  40aa5c:	call   4021d0 <rb_strlcpy@plt>
  40aa61:	mov    rax,QWORD PTR [rbp-0x8]
  40aa65:	mov    rax,QWORD PTR [rax]
  40aa68:	test   rax,rax
  40aa6b:	je     40aa7c <rb_strcasecmp@plt+0x850c>
  40aa6d:	mov    rax,QWORD PTR [rbp-0x8]
  40aa71:	mov    rax,QWORD PTR [rax]
  40aa74:	mov    rdi,rax
  40aa77:	call   402300 <rb_close@plt>
  40aa7c:	mov    rax,QWORD PTR [rbp-0x8]
  40aa80:	mov    rdi,rax
  40aa83:	call   40a553 <rb_strcasecmp@plt+0x7fe3>
  40aa88:	mov    rax,0x415ca0
  40aa8f:	mov    ecx,DWORD PTR [rax+0x18]
  40aa92:	mov    rax,QWORD PTR [rbp-0x18]
  40aa96:	mov    edx,0x0
  40aa9b:	mov    esi,ecx
  40aa9d:	mov    rdi,rax
  40aaa0:	call   40a606 <rb_strcasecmp@plt+0x8096>
  40aaa5:	mov    rax,0x415ca0
  40aaac:	mov    ecx,DWORD PTR [rax+0x18]
  40aaaf:	mov    rax,QWORD PTR [rbp-0x18]
  40aab3:	mov    edx,0x0
  40aab8:	mov    esi,ecx
  40aaba:	mov    rdi,rax
  40aabd:	call   40a67a <rb_strcasecmp@plt+0x810a>
  40aac2:	mov    eax,DWORD PTR [rbp-0x1c]
  40aac5:	lea    rdx,[rax*8+0x0]
  40aacd:	lea    rax,[rip+0xb12c]        # 415c00 <rb_strcasecmp@plt+0x13690>
  40aad4:	mov    rdx,QWORD PTR [rdx+rax*1]
  40aad8:	mov    rax,QWORD PTR [rbp-0x18]
  40aadc:	mov    eax,DWORD PTR [rax]
  40aade:	mov    rsi,rdx
  40aae1:	mov    edi,eax
  40aae3:	mov    eax,0x0
  40aae8:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40aaed:	mov    rax,0x415ca0
  40aaf4:	mov    edx,DWORD PTR [rax+0x18]
  40aaf7:	mov    rax,QWORD PTR [rbp-0x18]
  40aafb:	mov    esi,edx
  40aafd:	mov    rdi,rax
  40ab00:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40ab05:	mov    rax,QWORD PTR [rbp-0x18]
  40ab09:	mov    rdi,rax
  40ab0c:	call   40a5a0 <rb_strcasecmp@plt+0x8030>
  40ab11:	nop
  40ab12:	leave  
  40ab13:	ret    
  40ab14:	push   rbp
  40ab15:	mov    rbp,rsp
  40ab18:	sub    rsp,0x20
  40ab1c:	mov    QWORD PTR [rbp-0x18],rdi
  40ab20:	mov    rax,0x415ca0
  40ab27:	mov    edx,DWORD PTR [rax+0x18]
  40ab2a:	mov    rax,QWORD PTR [rbp-0x18]
  40ab2e:	mov    esi,edx
  40ab30:	mov    rdi,rax
  40ab33:	call   40a5e0 <rb_strcasecmp@plt+0x8070>
  40ab38:	mov    QWORD PTR [rbp-0x8],rax
  40ab3c:	mov    rax,QWORD PTR [rbp-0x8]
  40ab40:	mov    rax,QWORD PTR [rax]
  40ab43:	test   rax,rax
  40ab46:	je     40ab57 <rb_strcasecmp@plt+0x85e7>
  40ab48:	mov    rax,QWORD PTR [rbp-0x8]
  40ab4c:	mov    rax,QWORD PTR [rax]
  40ab4f:	mov    rdi,rax
  40ab52:	call   402300 <rb_close@plt>
  40ab57:	mov    rax,QWORD PTR [rbp-0x8]
  40ab5b:	mov    rdi,rax
  40ab5e:	call   40a553 <rb_strcasecmp@plt+0x7fe3>
  40ab63:	mov    rax,0x415ca0
  40ab6a:	mov    ecx,DWORD PTR [rax+0x18]
  40ab6d:	mov    rax,QWORD PTR [rbp-0x18]
  40ab71:	mov    edx,0x0
  40ab76:	mov    esi,ecx
  40ab78:	mov    rdi,rax
  40ab7b:	call   40a606 <rb_strcasecmp@plt+0x8096>
  40ab80:	mov    rax,0x415ca0
  40ab87:	mov    ecx,DWORD PTR [rax+0x18]
  40ab8a:	mov    rax,QWORD PTR [rbp-0x18]
  40ab8e:	mov    edx,0x0
  40ab93:	mov    esi,ecx
  40ab95:	mov    rdi,rax
  40ab98:	call   40a67a <rb_strcasecmp@plt+0x810a>
  40ab9d:	mov    rdx,QWORD PTR [rip+0xb064]        # 415c08 <rb_strcasecmp@plt+0x13698>
  40aba4:	mov    rax,QWORD PTR [rbp-0x18]
  40aba8:	mov    eax,DWORD PTR [rax]
  40abaa:	mov    rsi,rdx
  40abad:	mov    edi,eax
  40abaf:	mov    eax,0x0
  40abb4:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40abb9:	mov    rax,0x415ca0
  40abc0:	mov    edx,DWORD PTR [rax+0x18]
  40abc3:	mov    rax,QWORD PTR [rbp-0x18]
  40abc7:	mov    esi,edx
  40abc9:	mov    rdi,rax
  40abcc:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40abd1:	mov    rax,QWORD PTR [rbp-0x18]
  40abd5:	mov    rdi,rax
  40abd8:	call   40a5a0 <rb_strcasecmp@plt+0x8030>
  40abdd:	nop
  40abde:	leave  
  40abdf:	ret    
  40abe0:	push   rbp
  40abe1:	mov    rbp,rsp
  40abe4:	sub    rsp,0x40
  40abe8:	mov    QWORD PTR [rbp-0x38],rdi
  40abec:	mov    DWORD PTR [rbp-0x30],0x0
  40abf3:	mov    DWORD PTR [rbp-0x2c],0x0
  40abfa:	mov    rax,QWORD PTR [rbp-0x38]
  40abfe:	mov    QWORD PTR [rbp-0x28],rax
  40ac02:	mov    rax,QWORD PTR [rbp-0x28]
  40ac06:	mov    esi,0x3a
  40ac0b:	mov    rdi,rax
  40ac0e:	call   402370 <strchr@plt>
  40ac13:	mov    QWORD PTR [rbp-0x20],rax
  40ac17:	cmp    QWORD PTR [rbp-0x20],0x0
  40ac1c:	jne    40ac28 <rb_strcasecmp@plt+0x86b8>
  40ac1e:	mov    eax,0x0
  40ac23:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40ac28:	mov    rax,QWORD PTR [rbp-0x20]
  40ac2c:	mov    BYTE PTR [rax],0x0
  40ac2f:	add    QWORD PTR [rbp-0x20],0x1
  40ac34:	mov    rax,QWORD PTR [rbp-0x20]
  40ac38:	mov    esi,0x3a
  40ac3d:	mov    rdi,rax
  40ac40:	call   402370 <strchr@plt>
  40ac45:	mov    QWORD PTR [rbp-0x18],rax
  40ac49:	cmp    QWORD PTR [rbp-0x18],0x0
  40ac4e:	jne    40ac5a <rb_strcasecmp@plt+0x86ea>
  40ac50:	mov    eax,0x0
  40ac55:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40ac5a:	mov    rax,QWORD PTR [rbp-0x18]
  40ac5e:	mov    BYTE PTR [rax],0x0
  40ac61:	add    QWORD PTR [rbp-0x18],0x1
  40ac66:	mov    rax,QWORD PTR [rbp-0x28]
  40ac6a:	mov    esi,0x2c
  40ac6f:	mov    rdi,rax
  40ac72:	call   402370 <strchr@plt>
  40ac77:	mov    QWORD PTR [rbp-0x10],rax
  40ac7b:	cmp    QWORD PTR [rbp-0x10],0x0
  40ac80:	jne    40ac8c <rb_strcasecmp@plt+0x871c>
  40ac82:	mov    eax,0x0
  40ac87:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40ac8c:	mov    rax,QWORD PTR [rbp-0x10]
  40ac90:	mov    BYTE PTR [rax],0x0
  40ac93:	add    QWORD PTR [rbp-0x10],0x1
  40ac98:	mov    rax,QWORD PTR [rbp-0x28]
  40ac9c:	mov    rdi,rax
  40ac9f:	call   402330 <atoi@plt>
  40aca4:	mov    DWORD PTR [rbp-0x30],eax
  40aca7:	cmp    DWORD PTR [rbp-0x30],0x0
  40acab:	jne    40acb4 <rb_strcasecmp@plt+0x8744>
  40acad:	mov    eax,0x0
  40acb2:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40acb4:	mov    rax,QWORD PTR [rbp-0x10]
  40acb8:	mov    rdi,rax
  40acbb:	call   402330 <atoi@plt>
  40acc0:	mov    DWORD PTR [rbp-0x2c],eax
  40acc3:	cmp    DWORD PTR [rbp-0x2c],0x0
  40acc7:	jne    40acd0 <rb_strcasecmp@plt+0x8760>
  40acc9:	mov    eax,0x0
  40acce:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40acd0:	mov    rax,QWORD PTR [rbp-0x20]
  40acd4:	lea    rsi,[rip+0x5148]        # 40fe23 <rb_strcasecmp@plt+0xd8b3>
  40acdb:	mov    rdi,rax
  40acde:	call   4022d0 <strstr@plt>
  40ace3:	test   rax,rax
  40ace6:	jne    40acef <rb_strcasecmp@plt+0x877f>
  40ace8:	mov    eax,0x0
  40aced:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40acef:	mov    rax,QWORD PTR [rbp-0x18]
  40acf3:	mov    esi,0x3a
  40acf8:	mov    rdi,rax
  40acfb:	call   402370 <strchr@plt>
  40ad00:	mov    QWORD PTR [rbp-0x8],rax
  40ad04:	cmp    QWORD PTR [rbp-0x8],0x0
  40ad09:	jne    40ad12 <rb_strcasecmp@plt+0x87a2>
  40ad0b:	mov    eax,0x0
  40ad10:	jmp    40ad22 <rb_strcasecmp@plt+0x87b2>
  40ad12:	mov    rax,QWORD PTR [rbp-0x8]
  40ad16:	mov    BYTE PTR [rax],0x0
  40ad19:	add    QWORD PTR [rbp-0x8],0x1
  40ad1e:	mov    rax,QWORD PTR [rbp-0x8]
  40ad22:	leave  
  40ad23:	ret    
  40ad24:	push   rbp
  40ad25:	mov    rbp,rsp
  40ad28:	sub    rsp,0x30
  40ad2c:	mov    rax,QWORD PTR fs:0x28
  40ad35:	mov    QWORD PTR [rbp-0x8],rax
  40ad39:	xor    eax,eax
  40ad3b:	mov    rax,0x41a270
  40ad42:	mov    rax,QWORD PTR [rax]
  40ad45:	lea    rdx,[rbp-0x20]
  40ad49:	mov    rsi,rdx
  40ad4c:	mov    rdi,rax
  40ad4f:	call   402250 <rb_dictionary_foreach_start@plt>
  40ad54:	jmp    40ad9d <rb_strcasecmp@plt+0x882d>
  40ad56:	mov    rax,0x415ca0
  40ad5d:	mov    edx,DWORD PTR [rax+0x18]
  40ad60:	mov    rax,QWORD PTR [rbp-0x28]
  40ad64:	mov    esi,edx
  40ad66:	mov    rdi,rax
  40ad69:	call   40a5e0 <rb_strcasecmp@plt+0x8070>
  40ad6e:	test   rax,rax
  40ad71:	je     40ad84 <rb_strcasecmp@plt+0x8814>
  40ad73:	mov    rax,QWORD PTR [rbp-0x28]
  40ad77:	mov    esi,0x2
  40ad7c:	mov    rdi,rax
  40ad7f:	call   40aa18 <rb_strcasecmp@plt+0x84a8>
  40ad84:	mov    rax,0x41a270
  40ad8b:	mov    rax,QWORD PTR [rax]
  40ad8e:	lea    rdx,[rbp-0x20]
  40ad92:	mov    rsi,rdx
  40ad95:	mov    rdi,rax
  40ad98:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40ad9d:	mov    rax,0x41a270
  40ada4:	mov    rax,QWORD PTR [rax]
  40ada7:	lea    rdx,[rbp-0x20]
  40adab:	mov    rsi,rdx
  40adae:	mov    rdi,rax
  40adb1:	call   402140 <rb_dictionary_foreach_cur@plt>
  40adb6:	mov    QWORD PTR [rbp-0x28],rax
  40adba:	cmp    QWORD PTR [rbp-0x28],0x0
  40adbf:	jne    40ad56 <rb_strcasecmp@plt+0x87e6>
  40adc1:	nop
  40adc2:	mov    rax,QWORD PTR [rbp-0x8]
  40adc6:	xor    rax,QWORD PTR fs:0x28
  40adcf:	je     40add6 <rb_strcasecmp@plt+0x8866>
  40add1:	call   402400 <__stack_chk_fail@plt>
  40add6:	leave  
  40add7:	ret    
  40add8:	push   rbp
  40add9:	mov    rbp,rsp
  40addc:	push   rbx
  40addd:	sub    rsp,0x138
  40ade4:	mov    QWORD PTR [rbp-0x138],rdi
  40adeb:	mov    rax,QWORD PTR fs:0x28
  40adf4:	mov    QWORD PTR [rbp-0x18],rax
  40adf8:	xor    eax,eax
  40adfa:	mov    edi,0x8
  40adff:	call   40a517 <rb_strcasecmp@plt+0x7fa7>
  40ae04:	mov    QWORD PTR [rbp-0x128],rax
  40ae0b:	mov    rax,QWORD PTR [rbp-0x138]
  40ae12:	add    rax,0xf8
  40ae18:	movzx  eax,WORD PTR [rax]
  40ae1b:	movzx  eax,ax
  40ae1e:	mov    DWORD PTR [rbp-0x12c],eax
  40ae24:	movzx  eax,BYTE PTR [rip+0xadd1]        # 415bfc <rb_strcasecmp@plt+0x1368c>
  40ae2b:	xor    eax,0x1
  40ae2e:	test   al,al
  40ae30:	je     40ae85 <rb_strcasecmp@plt+0x8915>
  40ae32:	mov    rax,QWORD PTR [rbp-0x128]
  40ae39:	mov    rdi,rax
  40ae3c:	call   40a553 <rb_strcasecmp@plt+0x7fe3>
  40ae41:	mov    rdx,QWORD PTR [rip+0xadd8]        # 415c20 <rb_strcasecmp@plt+0x136b0>
  40ae48:	mov    rax,QWORD PTR [rbp-0x138]
  40ae4f:	mov    eax,DWORD PTR [rax]
  40ae51:	mov    rsi,rdx
  40ae54:	mov    edi,eax
  40ae56:	mov    eax,0x0
  40ae5b:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40ae60:	mov    rax,0x415ca0
  40ae67:	mov    edx,DWORD PTR [rax+0x18]
  40ae6a:	mov    rax,QWORD PTR [rbp-0x138]
  40ae71:	mov    esi,edx
  40ae73:	mov    rdi,rax
  40ae76:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40ae7b:	mov    eax,0x1
  40ae80:	jmp    40b1b6 <rb_strcasecmp@plt+0x8c46>
  40ae85:	mov    rax,QWORD PTR [rbp-0x138]
  40ae8c:	mov    rdi,rax
  40ae8f:	call   40a57e <rb_strcasecmp@plt+0x800e>
  40ae94:	mov    rdx,QWORD PTR [rip+0xad65]        # 415c00 <rb_strcasecmp@plt+0x13690>
  40ae9b:	mov    rax,QWORD PTR [rbp-0x138]
  40aea2:	mov    eax,DWORD PTR [rax]
  40aea4:	mov    rsi,rdx
  40aea7:	mov    edi,eax
  40aea9:	mov    eax,0x0
  40aeae:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40aeb3:	mov    rax,0x415ca0
  40aeba:	mov    ecx,DWORD PTR [rax+0x18]
  40aebd:	mov    rdx,QWORD PTR [rbp-0x128]
  40aec4:	mov    rax,QWORD PTR [rbp-0x138]
  40aecb:	mov    esi,ecx
  40aecd:	mov    rdi,rax
  40aed0:	call   40a606 <rb_strcasecmp@plt+0x8096>
  40aed5:	mov    eax,DWORD PTR [rip+0xad1d]        # 415bf8 <rb_strcasecmp@plt+0x13688>
  40aedb:	movsxd rdx,eax
  40aede:	mov    rax,0x415ca0
  40aee5:	mov    ecx,DWORD PTR [rax+0x18]
  40aee8:	mov    rax,QWORD PTR [rbp-0x138]
  40aeef:	mov    esi,ecx
  40aef1:	mov    rdi,rax
  40aef4:	call   40a635 <rb_strcasecmp@plt+0x80c5>
  40aef9:	mov    rax,QWORD PTR [rbp-0x138]
  40af00:	mov    edx,DWORD PTR [rax+0x4]
  40af03:	mov    eax,DWORD PTR [rbp-0x12c]
  40af09:	lea    rcx,[rip+0x4f1a]        # 40fe2a <rb_strcasecmp@plt+0xd8ba>
  40af10:	mov    esi,0x1
  40af15:	mov    edi,eax
  40af17:	call   402110 <rb_socket@plt>
  40af1c:	mov    rdx,rax
  40af1f:	mov    rax,QWORD PTR [rbp-0x128]
  40af26:	mov    QWORD PTR [rax],rdx
  40af29:	mov    rax,QWORD PTR [rbp-0x128]
  40af30:	mov    rax,QWORD PTR [rax]
  40af33:	test   rax,rax
  40af36:	jne    40af7d <rb_strcasecmp@plt+0x8a0d>
  40af38:	call   4023c0 <__errno_location@plt>
  40af3d:	mov    eax,DWORD PTR [rax]
  40af3f:	mov    edi,eax
  40af41:	call   4022c0 <strerror@plt>
  40af46:	mov    rdx,rax
  40af49:	lea    rsi,[rip+0x4ee0]        # 40fe30 <rb_strcasecmp@plt+0xd8c0>
  40af50:	mov    edi,0x44
  40af55:	mov    eax,0x0
  40af5a:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40af5f:	mov    rax,QWORD PTR [rbp-0x138]
  40af66:	mov    esi,0x2
  40af6b:	mov    rdi,rax
  40af6e:	call   40aa18 <rb_strcasecmp@plt+0x84a8>
  40af73:	mov    eax,0x1
  40af78:	jmp    40b1b6 <rb_strcasecmp@plt+0x8c46>
  40af7d:	mov    rax,QWORD PTR [rbp-0x138]
  40af84:	mov    rdx,QWORD PTR [rax+0x40]
  40af88:	mov    QWORD PTR [rbp-0x120],rdx
  40af8f:	mov    rdx,QWORD PTR [rax+0x48]
  40af93:	mov    QWORD PTR [rbp-0x118],rdx
  40af9a:	mov    rdx,QWORD PTR [rax+0x50]
  40af9e:	mov    QWORD PTR [rbp-0x110],rdx
  40afa5:	mov    rdx,QWORD PTR [rax+0x58]
  40afa9:	mov    QWORD PTR [rbp-0x108],rdx
  40afb0:	mov    rdx,QWORD PTR [rax+0x60]
  40afb4:	mov    QWORD PTR [rbp-0x100],rdx
  40afbb:	mov    rdx,QWORD PTR [rax+0x68]
  40afbf:	mov    QWORD PTR [rbp-0xf8],rdx
  40afc6:	mov    rdx,QWORD PTR [rax+0x70]
  40afca:	mov    QWORD PTR [rbp-0xf0],rdx
  40afd1:	mov    rdx,QWORD PTR [rax+0x78]
  40afd5:	mov    QWORD PTR [rbp-0xe8],rdx
  40afdc:	mov    rdx,QWORD PTR [rax+0x80]
  40afe3:	mov    QWORD PTR [rbp-0xe0],rdx
  40afea:	mov    rdx,QWORD PTR [rax+0x88]
  40aff1:	mov    QWORD PTR [rbp-0xd8],rdx
  40aff8:	mov    rdx,QWORD PTR [rax+0x90]
  40afff:	mov    QWORD PTR [rbp-0xd0],rdx
  40b006:	mov    rdx,QWORD PTR [rax+0x98]
  40b00d:	mov    QWORD PTR [rbp-0xc8],rdx
  40b014:	mov    rdx,QWORD PTR [rax+0xa0]
  40b01b:	mov    QWORD PTR [rbp-0xc0],rdx
  40b022:	mov    rdx,QWORD PTR [rax+0xa8]
  40b029:	mov    QWORD PTR [rbp-0xb8],rdx
  40b030:	mov    rdx,QWORD PTR [rax+0xb0]
  40b037:	mov    QWORD PTR [rbp-0xb0],rdx
  40b03e:	mov    rax,QWORD PTR [rax+0xb8]
  40b045:	mov    QWORD PTR [rbp-0xa8],rax
  40b04c:	mov    rax,QWORD PTR [rbp-0x138]
  40b053:	mov    rdx,QWORD PTR [rax+0xf8]
  40b05a:	mov    QWORD PTR [rbp-0xa0],rdx
  40b061:	mov    rdx,QWORD PTR [rax+0x100]
  40b068:	mov    QWORD PTR [rbp-0x98],rdx
  40b06f:	mov    rdx,QWORD PTR [rax+0x108]
  40b076:	mov    QWORD PTR [rbp-0x90],rdx
  40b07d:	mov    rdx,QWORD PTR [rax+0x110]
  40b084:	mov    QWORD PTR [rbp-0x88],rdx
  40b08b:	mov    rdx,QWORD PTR [rax+0x118]
  40b092:	mov    QWORD PTR [rbp-0x80],rdx
  40b096:	mov    rdx,QWORD PTR [rax+0x120]
  40b09d:	mov    QWORD PTR [rbp-0x78],rdx
  40b0a1:	mov    rdx,QWORD PTR [rax+0x128]
  40b0a8:	mov    QWORD PTR [rbp-0x70],rdx
  40b0ac:	mov    rdx,QWORD PTR [rax+0x130]
  40b0b3:	mov    QWORD PTR [rbp-0x68],rdx
  40b0b7:	mov    rdx,QWORD PTR [rax+0x138]
  40b0be:	mov    QWORD PTR [rbp-0x60],rdx
  40b0c2:	mov    rdx,QWORD PTR [rax+0x140]
  40b0c9:	mov    QWORD PTR [rbp-0x58],rdx
  40b0cd:	mov    rdx,QWORD PTR [rax+0x148]
  40b0d4:	mov    QWORD PTR [rbp-0x50],rdx
  40b0d8:	mov    rdx,QWORD PTR [rax+0x150]
  40b0df:	mov    QWORD PTR [rbp-0x48],rdx
  40b0e3:	mov    rdx,QWORD PTR [rax+0x158]
  40b0ea:	mov    QWORD PTR [rbp-0x40],rdx
  40b0ee:	mov    rdx,QWORD PTR [rax+0x160]
  40b0f5:	mov    QWORD PTR [rbp-0x38],rdx
  40b0f9:	mov    rdx,QWORD PTR [rax+0x168]
  40b100:	mov    QWORD PTR [rbp-0x30],rdx
  40b104:	mov    rax,QWORD PTR [rax+0x170]
  40b10b:	mov    QWORD PTR [rbp-0x28],rax
  40b10f:	lea    rax,[rbp-0x120]
  40b116:	movzx  eax,WORD PTR [rax]
  40b119:	cmp    ax,0x2
  40b11d:	jne    40b12e <rb_strcasecmp@plt+0x8bbe>
  40b11f:	lea    rax,[rbp-0x120]
  40b126:	mov    WORD PTR [rax+0x2],0x0
  40b12c:	jmp    40b13b <rb_strcasecmp@plt+0x8bcb>
  40b12e:	lea    rax,[rbp-0x120]
  40b135:	mov    WORD PTR [rax+0x2],0x0
  40b13b:	lea    rax,[rbp-0xa0]
  40b142:	movzx  eax,WORD PTR [rax]
  40b145:	cmp    ax,0x2
  40b149:	jne    40b162 <rb_strcasecmp@plt+0x8bf2>
  40b14b:	lea    rbx,[rbp-0xa0]
  40b152:	mov    edi,0x71
  40b157:	call   4020d0 <htons@plt>
  40b15c:	mov    WORD PTR [rbx+0x2],ax
  40b160:	jmp    40b177 <rb_strcasecmp@plt+0x8c07>
  40b162:	lea    rbx,[rbp-0xa0]
  40b169:	mov    edi,0x71
  40b16e:	call   4020d0 <htons@plt>
  40b173:	mov    WORD PTR [rbx+0x2],ax
  40b177:	mov    edi,DWORD PTR [rip+0xaa7b]        # 415bf8 <rb_strcasecmp@plt+0x13688>
  40b17d:	mov    rax,QWORD PTR [rbp-0x128]
  40b184:	mov    rax,QWORD PTR [rax]
  40b187:	mov    rcx,QWORD PTR [rbp-0x138]
  40b18e:	lea    rdx,[rbp-0x120]
  40b195:	lea    rsi,[rbp-0xa0]
  40b19c:	mov    r9d,edi
  40b19f:	mov    r8,rcx
  40b1a2:	lea    rcx,[rip+0xfffffffffffff500]        # 40a6a9 <rb_strcasecmp@plt+0x8139>
  40b1a9:	mov    rdi,rax
  40b1ac:	call   402090 <rb_connect_tcp@plt>
  40b1b1:	mov    eax,0x1
  40b1b6:	mov    rbx,QWORD PTR [rbp-0x18]
  40b1ba:	xor    rbx,QWORD PTR fs:0x28
  40b1c3:	je     40b1ca <rb_strcasecmp@plt+0x8c5a>
  40b1c5:	call   402400 <__stack_chk_fail@plt>
  40b1ca:	add    rsp,0x138
  40b1d1:	pop    rbx
  40b1d2:	pop    rbp
  40b1d3:	ret    
  40b1d4:	push   rbp
  40b1d5:	mov    rbp,rsp
  40b1d8:	sub    rsp,0x20
  40b1dc:	mov    QWORD PTR [rbp-0x18],rdi
  40b1e0:	mov    rax,0x415ca0
  40b1e7:	mov    edx,DWORD PTR [rax+0x18]
  40b1ea:	mov    rax,QWORD PTR [rbp-0x18]
  40b1ee:	mov    esi,edx
  40b1f0:	mov    rdi,rax
  40b1f3:	call   40a5e0 <rb_strcasecmp@plt+0x8070>
  40b1f8:	mov    QWORD PTR [rbp-0x8],rax
  40b1fc:	cmp    QWORD PTR [rbp-0x8],0x0
  40b201:	je     40b214 <rb_strcasecmp@plt+0x8ca4>
  40b203:	mov    rax,QWORD PTR [rbp-0x18]
  40b207:	mov    esi,0x2
  40b20c:	mov    rdi,rax
  40b20f:	call   40aa18 <rb_strcasecmp@plt+0x84a8>
  40b214:	nop
  40b215:	leave  
  40b216:	ret    
  40b217:	push   rbp
  40b218:	mov    rbp,rsp
  40b21b:	sub    rsp,0x30
  40b21f:	mov    QWORD PTR [rbp-0x18],rdi
  40b223:	mov    DWORD PTR [rbp-0x1c],esi
  40b226:	mov    QWORD PTR [rbp-0x28],rdx
  40b22a:	mov    rax,QWORD PTR [rbp-0x28]
  40b22e:	mov    rax,QWORD PTR [rax]
  40b231:	mov    rdi,rax
  40b234:	call   402330 <atoi@plt>
  40b239:	mov    DWORD PTR [rbp-0x4],eax
  40b23c:	cmp    DWORD PTR [rbp-0x4],0x0
  40b240:	jns    40b267 <rb_strcasecmp@plt+0x8cf7>
  40b242:	mov    eax,DWORD PTR [rbp-0x4]
  40b245:	mov    edx,eax
  40b247:	lea    rsi,[rip+0x4c0a]        # 40fe58 <rb_strcasecmp@plt+0xd8e8>
  40b24e:	mov    edi,0x43
  40b253:	mov    eax,0x0
  40b258:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40b25d:	mov    edi,0x3
  40b262:	call   4020e0 <exit@plt>
  40b267:	mov    eax,DWORD PTR [rbp-0x4]
  40b26a:	mov    DWORD PTR [rip+0xa988],eax        # 415bf8 <rb_strcasecmp@plt+0x13688>
  40b270:	nop
  40b271:	leave  
  40b272:	ret    
  40b273:	push   rbp
  40b274:	mov    rbp,rsp
  40b277:	mov    QWORD PTR [rbp-0x8],rdi
  40b27b:	mov    DWORD PTR [rbp-0xc],esi
  40b27e:	mov    QWORD PTR [rbp-0x18],rdx
  40b282:	mov    rax,QWORD PTR [rbp-0x18]
  40b286:	mov    rax,QWORD PTR [rax]
  40b289:	movzx  eax,BYTE PTR [rax]
  40b28c:	cmp    al,0x31
  40b28e:	sete   al
  40b291:	mov    BYTE PTR [rip+0xa965],al        # 415bfc <rb_strcasecmp@plt+0x1368c>
  40b297:	nop
  40b298:	pop    rbp
  40b299:	ret    
  40b29a:	push   rbp
  40b29b:	mov    rbp,rsp
  40b29e:	sub    rsp,0x20
  40b2a2:	mov    QWORD PTR [rbp-0x18],rdi
  40b2a6:	mov    rax,QWORD PTR [rbp-0x18]
  40b2aa:	mov    rsi,rax
  40b2ad:	mov    edi,0x1
  40b2b2:	call   402490 <calloc@plt>
  40b2b7:	mov    QWORD PTR [rbp-0x8],rax
  40b2bb:	cmp    QWORD PTR [rbp-0x8],0x0
  40b2c0:	sete   al
  40b2c3:	movzx  eax,al
  40b2c6:	test   rax,rax
  40b2c9:	je     40b2d0 <rb_strcasecmp@plt+0x8d60>
  40b2cb:	call   4023b0 <rb_outofmemory@plt>
  40b2d0:	mov    rax,QWORD PTR [rbp-0x8]
  40b2d4:	leave  
  40b2d5:	ret    
  40b2d6:	push   rbp
  40b2d7:	mov    rbp,rsp
  40b2da:	sub    rsp,0x10
  40b2de:	mov    QWORD PTR [rbp-0x8],rdi
  40b2e2:	cmp    QWORD PTR [rbp-0x8],0x0
  40b2e7:	setne  al
  40b2ea:	movzx  eax,al
  40b2ed:	test   rax,rax
  40b2f0:	je     40b2fe <rb_strcasecmp@plt+0x8d8e>
  40b2f2:	mov    rax,QWORD PTR [rbp-0x8]
  40b2f6:	mov    rdi,rax
  40b2f9:	call   402200 <free@plt>
  40b2fe:	nop
  40b2ff:	leave  
  40b300:	ret    
  40b301:	push   rbp
  40b302:	mov    rbp,rsp
  40b305:	mov    QWORD PTR [rbp-0x8],rdi
  40b309:	mov    rax,QWORD PTR [rbp-0x8]
  40b30d:	mov    eax,DWORD PTR [rax+0x1cc]
  40b313:	lea    edx,[rax+0x1]
  40b316:	mov    rax,QWORD PTR [rbp-0x8]
  40b31a:	mov    DWORD PTR [rax+0x1cc],edx
  40b320:	nop
  40b321:	pop    rbp
  40b322:	ret    
  40b323:	push   rbp
  40b324:	mov    rbp,rsp
  40b327:	sub    rsp,0x10
  40b32b:	mov    QWORD PTR [rbp-0x8],rdi
  40b32f:	mov    rax,QWORD PTR [rbp-0x8]
  40b333:	mov    eax,DWORD PTR [rax+0x1cc]
  40b339:	lea    edx,[rax-0x1]
  40b33c:	mov    rax,QWORD PTR [rbp-0x8]
  40b340:	mov    DWORD PTR [rax+0x1cc],edx
  40b346:	mov    rax,QWORD PTR [rbp-0x8]
  40b34a:	mov    eax,DWORD PTR [rax+0x1cc]
  40b350:	test   eax,eax
  40b352:	jne    40b360 <rb_strcasecmp@plt+0x8df0>
  40b354:	mov    rax,QWORD PTR [rbp-0x8]
  40b358:	mov    rdi,rax
  40b35b:	call   40421d <rb_strcasecmp@plt+0x1cad>
  40b360:	nop
  40b361:	leave  
  40b362:	ret    
  40b363:	push   rbp
  40b364:	mov    rbp,rsp
  40b367:	mov    QWORD PTR [rbp-0x8],rdi
  40b36b:	mov    DWORD PTR [rbp-0xc],esi
  40b36e:	mov    rax,QWORD PTR [rbp-0x8]
  40b372:	mov    rax,QWORD PTR [rax+0x1d0]
  40b379:	mov    edx,DWORD PTR [rbp-0xc]
  40b37c:	shl    rdx,0x5
  40b380:	add    rax,rdx
  40b383:	mov    rax,QWORD PTR [rax+0x10]
  40b387:	pop    rbp
  40b388:	ret    
  40b389:	push   rbp
  40b38a:	mov    rbp,rsp
  40b38d:	mov    QWORD PTR [rbp-0x8],rdi
  40b391:	mov    DWORD PTR [rbp-0xc],esi
  40b394:	mov    QWORD PTR [rbp-0x18],rdx
  40b398:	mov    rax,QWORD PTR [rbp-0x8]
  40b39c:	mov    rax,QWORD PTR [rax+0x1d0]
  40b3a3:	mov    edx,DWORD PTR [rbp-0xc]
  40b3a6:	shl    rdx,0x5
  40b3aa:	add    rdx,rax
  40b3ad:	mov    rax,QWORD PTR [rbp-0x18]
  40b3b1:	mov    QWORD PTR [rdx+0x10],rax
  40b3b5:	nop
  40b3b6:	pop    rbp
  40b3b7:	ret    
  40b3b8:	push   rbp
  40b3b9:	mov    rbp,rsp
  40b3bc:	push   rbx
  40b3bd:	sub    rsp,0x28
  40b3c1:	mov    QWORD PTR [rbp-0x18],rdi
  40b3c5:	mov    DWORD PTR [rbp-0x1c],esi
  40b3c8:	mov    QWORD PTR [rbp-0x28],rdx
  40b3cc:	mov    rax,QWORD PTR [rbp-0x18]
  40b3d0:	mov    rax,QWORD PTR [rax+0x1d0]
  40b3d7:	mov    edx,DWORD PTR [rbp-0x1c]
  40b3da:	shl    rdx,0x5
  40b3de:	lea    rbx,[rax+rdx*1]
  40b3e2:	call   4022a0 <rb_current_time@plt>
  40b3e7:	mov    rdx,rax
  40b3ea:	mov    rax,QWORD PTR [rbp-0x28]
  40b3ee:	add    rax,rdx
  40b3f1:	mov    QWORD PTR [rbx+0x8],rax
  40b3f5:	nop
  40b3f6:	add    rsp,0x28
  40b3fa:	pop    rbx
  40b3fb:	pop    rbp
  40b3fc:	ret    
  40b3fd:	push   rbp
  40b3fe:	mov    rbp,rsp
  40b401:	mov    QWORD PTR [rbp-0x8],rdi
  40b405:	mov    DWORD PTR [rbp-0xc],esi
  40b408:	mov    QWORD PTR [rbp-0x18],rdx
  40b40c:	mov    rax,QWORD PTR [rbp-0x8]
  40b410:	mov    rax,QWORD PTR [rax+0x1d0]
  40b417:	mov    edx,DWORD PTR [rbp-0xc]
  40b41a:	shl    rdx,0x5
  40b41e:	add    rdx,rax
  40b421:	mov    rax,QWORD PTR [rbp-0x18]
  40b425:	mov    QWORD PTR [rdx+0x8],rax
  40b429:	nop
  40b42a:	pop    rbp
  40b42b:	ret    
  40b42c:	push   rbp
  40b42d:	mov    rbp,rsp
  40b430:	sub    rsp,0x30
  40b434:	mov    QWORD PTR [rbp-0x18],rdi
  40b438:	mov    eax,esi
  40b43a:	mov    DWORD PTR [rbp-0x20],edx
  40b43d:	mov    QWORD PTR [rbp-0x28],rcx
  40b441:	mov    BYTE PTR [rbp-0x1c],al
  40b444:	mov    rax,QWORD PTR [rbp-0x28]
  40b448:	mov    QWORD PTR [rbp-0x8],rax
  40b44c:	cmp    QWORD PTR [rbp-0x18],0x0
  40b451:	je     40b45e <rb_strcasecmp@plt+0x8eee>
  40b453:	movzx  eax,BYTE PTR [rbp-0x1c]
  40b457:	xor    eax,0x1
  40b45a:	test   al,al
  40b45c:	je     40b471 <rb_strcasecmp@plt+0x8f01>
  40b45e:	mov    rax,QWORD PTR [rbp-0x8]
  40b462:	mov    esi,0x1
  40b467:	mov    rdi,rax
  40b46a:	call   40b4c4 <rb_strcasecmp@plt+0x8f54>
  40b46f:	jmp    40b4c1 <rb_strcasecmp@plt+0x8f51>
  40b471:	mov    rax,QWORD PTR [rbp-0x18]
  40b475:	mov    rdi,rax
  40b478:	call   402210 <strlen@plt>
  40b47d:	cmp    rax,0x3f
  40b481:	jbe    40b496 <rb_strcasecmp@plt+0x8f26>
  40b483:	mov    rax,QWORD PTR [rbp-0x8]
  40b487:	mov    esi,0x2
  40b48c:	mov    rdi,rax
  40b48f:	call   40b4c4 <rb_strcasecmp@plt+0x8f54>
  40b494:	jmp    40b4c1 <rb_strcasecmp@plt+0x8f51>
  40b496:	mov    rax,QWORD PTR [rbp-0x8]
  40b49a:	lea    rcx,[rax+0x178]
  40b4a1:	mov    rax,QWORD PTR [rbp-0x18]
  40b4a5:	mov    edx,0x40
  40b4aa:	mov    rsi,rax
  40b4ad:	mov    rdi,rcx
  40b4b0:	call   4021d0 <rb_strlcpy@plt>
  40b4b5:	mov    rax,QWORD PTR [rbp-0x8]
  40b4b9:	mov    rdi,rax
  40b4bc:	call   40b5b4 <rb_strcasecmp@plt+0x9044>
  40b4c1:	nop
  40b4c2:	leave  
  40b4c3:	ret    
  40b4c4:	push   rbp
  40b4c5:	mov    rbp,rsp
  40b4c8:	sub    rsp,0x20
  40b4cc:	mov    QWORD PTR [rbp-0x18],rdi
  40b4d0:	mov    DWORD PTR [rbp-0x1c],esi
  40b4d3:	mov    rax,0x415d80
  40b4da:	mov    edx,DWORD PTR [rax+0x18]
  40b4dd:	mov    rax,QWORD PTR [rbp-0x18]
  40b4e1:	mov    esi,edx
  40b4e3:	mov    rdi,rax
  40b4e6:	call   40b363 <rb_strcasecmp@plt+0x8df3>
  40b4eb:	mov    QWORD PTR [rbp-0x8],rax
  40b4ef:	mov    rax,QWORD PTR [rbp-0x18]
  40b4f3:	add    rax,0x178
  40b4f9:	mov    edx,0x40
  40b4fe:	lea    rsi,[rip+0x4a14]        # 40ff19 <rb_strcasecmp@plt+0xd9a9>
  40b505:	mov    rdi,rax
  40b508:	call   4021d0 <rb_strlcpy@plt>
  40b50d:	mov    eax,DWORD PTR [rbp-0x1c]
  40b510:	lea    rdx,[rax*8+0x0]
  40b518:	lea    rax,[rip+0xa801]        # 415d20 <rb_strcasecmp@plt+0x137b0>
  40b51f:	mov    rdx,QWORD PTR [rdx+rax*1]
  40b523:	mov    rax,QWORD PTR [rbp-0x18]
  40b527:	mov    eax,DWORD PTR [rax]
  40b529:	mov    rsi,rdx
  40b52c:	mov    edi,eax
  40b52e:	mov    eax,0x0
  40b533:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40b538:	mov    rax,QWORD PTR [rbp-0x8]
  40b53c:	mov    rax,QWORD PTR [rax]
  40b53f:	mov    rdi,rax
  40b542:	call   402e60 <rb_strcasecmp@plt+0x8f0>
  40b547:	mov    rax,QWORD PTR [rbp-0x8]
  40b54b:	mov    rdi,rax
  40b54e:	call   40b2d6 <rb_strcasecmp@plt+0x8d66>
  40b553:	mov    rax,0x415d80
  40b55a:	mov    ecx,DWORD PTR [rax+0x18]
  40b55d:	mov    rax,QWORD PTR [rbp-0x18]
  40b561:	mov    edx,0x0
  40b566:	mov    esi,ecx
  40b568:	mov    rdi,rax
  40b56b:	call   40b389 <rb_strcasecmp@plt+0x8e19>
  40b570:	mov    rax,0x415d80
  40b577:	mov    ecx,DWORD PTR [rax+0x18]
  40b57a:	mov    rax,QWORD PTR [rbp-0x18]
  40b57e:	mov    edx,0x0
  40b583:	mov    esi,ecx
  40b585:	mov    rdi,rax
  40b588:	call   40b3fd <rb_strcasecmp@plt+0x8e8d>
  40b58d:	mov    rax,0x415d80
  40b594:	mov    edx,DWORD PTR [rax+0x18]
  40b597:	mov    rax,QWORD PTR [rbp-0x18]
  40b59b:	mov    esi,edx
  40b59d:	mov    rdi,rax
  40b5a0:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40b5a5:	mov    rax,QWORD PTR [rbp-0x18]
  40b5a9:	mov    rdi,rax
  40b5ac:	call   40b323 <rb_strcasecmp@plt+0x8db3>
  40b5b1:	nop
  40b5b2:	leave  
  40b5b3:	ret    
  40b5b4:	push   rbp
  40b5b5:	mov    rbp,rsp
  40b5b8:	sub    rsp,0x20
  40b5bc:	mov    QWORD PTR [rbp-0x18],rdi
  40b5c0:	mov    rax,0x415d80
  40b5c7:	mov    edx,DWORD PTR [rax+0x18]
  40b5ca:	mov    rax,QWORD PTR [rbp-0x18]
  40b5ce:	mov    esi,edx
  40b5d0:	mov    rdi,rax
  40b5d3:	call   40b363 <rb_strcasecmp@plt+0x8df3>
  40b5d8:	mov    QWORD PTR [rbp-0x8],rax
  40b5dc:	mov    rax,QWORD PTR [rbp-0x18]
  40b5e0:	lea    rdx,[rax+0x178]
  40b5e7:	mov    rax,QWORD PTR [rbp-0x18]
  40b5eb:	mov    eax,DWORD PTR [rax]
  40b5ed:	lea    rsi,[rip+0x4927]        # 40ff1b <rb_strcasecmp@plt+0xd9ab>
  40b5f4:	mov    edi,eax
  40b5f6:	mov    eax,0x0
  40b5fb:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40b600:	mov    rax,QWORD PTR [rbp-0x8]
  40b604:	mov    rax,QWORD PTR [rax]
  40b607:	mov    rdi,rax
  40b60a:	call   402e60 <rb_strcasecmp@plt+0x8f0>
  40b60f:	mov    rax,QWORD PTR [rbp-0x8]
  40b613:	mov    rdi,rax
  40b616:	call   40b2d6 <rb_strcasecmp@plt+0x8d66>
  40b61b:	mov    rax,0x415d80
  40b622:	mov    ecx,DWORD PTR [rax+0x18]
  40b625:	mov    rax,QWORD PTR [rbp-0x18]
  40b629:	mov    edx,0x0
  40b62e:	mov    esi,ecx
  40b630:	mov    rdi,rax
  40b633:	call   40b389 <rb_strcasecmp@plt+0x8e19>
  40b638:	mov    rax,0x415d80
  40b63f:	mov    ecx,DWORD PTR [rax+0x18]
  40b642:	mov    rax,QWORD PTR [rbp-0x18]
  40b646:	mov    edx,0x0
  40b64b:	mov    esi,ecx
  40b64d:	mov    rdi,rax
  40b650:	call   40b3fd <rb_strcasecmp@plt+0x8e8d>
  40b655:	mov    rax,0x415d80
  40b65c:	mov    edx,DWORD PTR [rax+0x18]
  40b65f:	mov    rax,QWORD PTR [rbp-0x18]
  40b663:	mov    esi,edx
  40b665:	mov    rdi,rax
  40b668:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40b66d:	mov    rax,QWORD PTR [rbp-0x18]
  40b671:	mov    rdi,rax
  40b674:	call   40b323 <rb_strcasecmp@plt+0x8db3>
  40b679:	nop
  40b67a:	leave  
  40b67b:	ret    
  40b67c:	push   rbp
  40b67d:	mov    rbp,rsp
  40b680:	sub    rsp,0x30
  40b684:	mov    rax,QWORD PTR fs:0x28
  40b68d:	mov    QWORD PTR [rbp-0x8],rax
  40b691:	xor    eax,eax
  40b693:	mov    rax,0x41a270
  40b69a:	mov    rax,QWORD PTR [rax]
  40b69d:	lea    rdx,[rbp-0x20]
  40b6a1:	mov    rsi,rdx
  40b6a4:	mov    rdi,rax
  40b6a7:	call   402250 <rb_dictionary_foreach_start@plt>
  40b6ac:	jmp    40b6f5 <rb_strcasecmp@plt+0x9185>
  40b6ae:	mov    rax,0x415d80
  40b6b5:	mov    edx,DWORD PTR [rax+0x18]
  40b6b8:	mov    rax,QWORD PTR [rbp-0x28]
  40b6bc:	mov    esi,edx
  40b6be:	mov    rdi,rax
  40b6c1:	call   40b363 <rb_strcasecmp@plt+0x8df3>
  40b6c6:	test   rax,rax
  40b6c9:	je     40b6dc <rb_strcasecmp@plt+0x916c>
  40b6cb:	mov    rax,QWORD PTR [rbp-0x28]
  40b6cf:	mov    esi,0x1
  40b6d4:	mov    rdi,rax
  40b6d7:	call   40b4c4 <rb_strcasecmp@plt+0x8f54>
  40b6dc:	mov    rax,0x41a270
  40b6e3:	mov    rax,QWORD PTR [rax]
  40b6e6:	lea    rdx,[rbp-0x20]
  40b6ea:	mov    rsi,rdx
  40b6ed:	mov    rdi,rax
  40b6f0:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40b6f5:	mov    rax,0x41a270
  40b6fc:	mov    rax,QWORD PTR [rax]
  40b6ff:	lea    rdx,[rbp-0x20]
  40b703:	mov    rsi,rdx
  40b706:	mov    rdi,rax
  40b709:	call   402140 <rb_dictionary_foreach_cur@plt>
  40b70e:	mov    QWORD PTR [rbp-0x28],rax
  40b712:	cmp    QWORD PTR [rbp-0x28],0x0
  40b717:	jne    40b6ae <rb_strcasecmp@plt+0x913e>
  40b719:	nop
  40b71a:	mov    rax,QWORD PTR [rbp-0x8]
  40b71e:	xor    rax,QWORD PTR fs:0x28
  40b727:	je     40b72e <rb_strcasecmp@plt+0x91be>
  40b729:	call   402400 <__stack_chk_fail@plt>
  40b72e:	leave  
  40b72f:	ret    
  40b730:	push   rbp
  40b731:	mov    rbp,rsp
  40b734:	sub    rsp,0x20
  40b738:	mov    QWORD PTR [rbp-0x18],rdi
  40b73c:	mov    edi,0x8
  40b741:	call   40b29a <rb_strcasecmp@plt+0x8d2a>
  40b746:	mov    QWORD PTR [rbp-0x8],rax
  40b74a:	mov    rax,QWORD PTR [rbp-0x18]
  40b74e:	mov    rdi,rax
  40b751:	call   40b301 <rb_strcasecmp@plt+0x8d91>
  40b756:	mov    rax,0x415d80
  40b75d:	mov    ecx,DWORD PTR [rax+0x18]
  40b760:	mov    rdx,QWORD PTR [rbp-0x8]
  40b764:	mov    rax,QWORD PTR [rbp-0x18]
  40b768:	mov    esi,ecx
  40b76a:	mov    rdi,rax
  40b76d:	call   40b389 <rb_strcasecmp@plt+0x8e19>
  40b772:	mov    eax,DWORD PTR [rip+0xa5a0]        # 415d18 <rb_strcasecmp@plt+0x137a8>
  40b778:	movsxd rdx,eax
  40b77b:	mov    rax,0x415d80
  40b782:	mov    ecx,DWORD PTR [rax+0x18]
  40b785:	mov    rax,QWORD PTR [rbp-0x18]
  40b789:	mov    esi,ecx
  40b78b:	mov    rdi,rax
  40b78e:	call   40b3b8 <rb_strcasecmp@plt+0x8e48>
  40b793:	mov    rax,QWORD PTR [rbp-0x18]
  40b797:	lea    rcx,[rax+0xc0]
  40b79e:	mov    rax,QWORD PTR [rbp-0x18]
  40b7a2:	mov    rdx,rax
  40b7a5:	lea    rsi,[rip+0xfffffffffffffc80]        # 40b42c <rb_strcasecmp@plt+0x8ebc>
  40b7ac:	mov    rdi,rcx
  40b7af:	call   402d4b <rb_strcasecmp@plt+0x7db>
  40b7b4:	mov    rdx,rax
  40b7b7:	mov    rax,QWORD PTR [rbp-0x8]
  40b7bb:	mov    QWORD PTR [rax],rdx
  40b7be:	mov    rdx,QWORD PTR [rip+0xa55b]        # 415d20 <rb_strcasecmp@plt+0x137b0>
  40b7c5:	mov    rax,QWORD PTR [rbp-0x18]
  40b7c9:	mov    eax,DWORD PTR [rax]
  40b7cb:	mov    rsi,rdx
  40b7ce:	mov    edi,eax
  40b7d0:	mov    eax,0x0
  40b7d5:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40b7da:	mov    eax,0x1
  40b7df:	leave  
  40b7e0:	ret    
  40b7e1:	push   rbp
  40b7e2:	mov    rbp,rsp
  40b7e5:	sub    rsp,0x20
  40b7e9:	mov    QWORD PTR [rbp-0x18],rdi
  40b7ed:	mov    rax,0x415d80
  40b7f4:	mov    edx,DWORD PTR [rax+0x18]
  40b7f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b7fb:	mov    esi,edx
  40b7fd:	mov    rdi,rax
  40b800:	call   40b363 <rb_strcasecmp@plt+0x8df3>
  40b805:	mov    QWORD PTR [rbp-0x8],rax
  40b809:	cmp    QWORD PTR [rbp-0x8],0x0
  40b80e:	je     40b821 <rb_strcasecmp@plt+0x92b1>
  40b810:	mov    rax,QWORD PTR [rbp-0x18]
  40b814:	mov    esi,0x1
  40b819:	mov    rdi,rax
  40b81c:	call   40b4c4 <rb_strcasecmp@plt+0x8f54>
  40b821:	nop
  40b822:	leave  
  40b823:	ret    
  40b824:	push   rbp
  40b825:	mov    rbp,rsp
  40b828:	sub    rsp,0x30
  40b82c:	mov    QWORD PTR [rbp-0x18],rdi
  40b830:	mov    DWORD PTR [rbp-0x1c],esi
  40b833:	mov    QWORD PTR [rbp-0x28],rdx
  40b837:	mov    rax,QWORD PTR [rbp-0x28]
  40b83b:	mov    rax,QWORD PTR [rax]
  40b83e:	mov    rdi,rax
  40b841:	call   402330 <atoi@plt>
  40b846:	mov    DWORD PTR [rbp-0x4],eax
  40b849:	cmp    DWORD PTR [rbp-0x4],0x0
  40b84d:	jns    40b874 <rb_strcasecmp@plt+0x9304>
  40b84f:	mov    eax,DWORD PTR [rbp-0x4]
  40b852:	mov    edx,eax
  40b854:	lea    rsi,[rip+0x46dd]        # 40ff38 <rb_strcasecmp@plt+0xd9c8>
  40b85b:	mov    edi,0x43
  40b860:	mov    eax,0x0
  40b865:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40b86a:	mov    edi,0x3
  40b86f:	call   4020e0 <exit@plt>
  40b874:	mov    eax,DWORD PTR [rbp-0x4]
  40b877:	mov    DWORD PTR [rip+0xa49b],eax        # 415d18 <rb_strcasecmp@plt+0x137a8>
  40b87d:	nop
  40b87e:	leave  
  40b87f:	ret    
  40b880:	push   rbp
  40b881:	mov    rbp,rsp
  40b884:	sub    rsp,0x20
  40b888:	mov    QWORD PTR [rbp-0x8],rdi
  40b88c:	mov    QWORD PTR [rbp-0x10],rsi
  40b890:	mov    QWORD PTR [rbp-0x18],rdx
  40b894:	cmp    QWORD PTR [rbp-0x8],0x0
  40b899:	jne    40b8ba <rb_strcasecmp@plt+0x934a>
  40b89b:	lea    rcx,[rip+0x4b0e]        # 4103b0 <rb_strcasecmp@plt+0xde40>
  40b8a2:	mov    edx,0x8f
  40b8a7:	lea    rsi,[rip+0x46c2]        # 40ff70 <rb_strcasecmp@plt+0xda00>
  40b8ae:	lea    rdi,[rip+0x46d7]        # 40ff8c <rb_strcasecmp@plt+0xda1c>
  40b8b5:	call   4020f0 <__assert_fail@plt>
  40b8ba:	cmp    QWORD PTR [rbp-0x10],0x0
  40b8bf:	jne    40b8e0 <rb_strcasecmp@plt+0x9370>
  40b8c1:	lea    rcx,[rip+0x4ae8]        # 4103b0 <rb_strcasecmp@plt+0xde40>
  40b8c8:	mov    edx,0x90
  40b8cd:	lea    rsi,[rip+0x469c]        # 40ff70 <rb_strcasecmp@plt+0xda00>
  40b8d4:	lea    rdi,[rip+0x46be]        # 40ff99 <rb_strcasecmp@plt+0xda29>
  40b8db:	call   4020f0 <__assert_fail@plt>
  40b8e0:	cmp    QWORD PTR [rbp-0x18],0x0
  40b8e5:	jne    40b906 <rb_strcasecmp@plt+0x9396>
  40b8e7:	lea    rcx,[rip+0x4ac2]        # 4103b0 <rb_strcasecmp@plt+0xde40>
  40b8ee:	mov    edx,0x91
  40b8f3:	lea    rsi,[rip+0x4676]        # 40ff70 <rb_strcasecmp@plt+0xda00>
  40b8fa:	lea    rdi,[rip+0x46a2]        # 40ffa3 <rb_strcasecmp@plt+0xda33>
  40b901:	call   4020f0 <__assert_fail@plt>
  40b906:	mov    rax,QWORD PTR [rbp-0x10]
  40b90a:	mov    rdx,QWORD PTR [rbp-0x8]
  40b90e:	mov    QWORD PTR [rax],rdx
  40b911:	mov    rax,QWORD PTR [rbp-0x10]
  40b915:	mov    QWORD PTR [rax+0x8],0x0
  40b91d:	mov    rax,QWORD PTR [rbp-0x18]
  40b921:	mov    rdx,QWORD PTR [rax]
  40b924:	mov    rax,QWORD PTR [rbp-0x10]
  40b928:	mov    QWORD PTR [rax+0x10],rdx
  40b92c:	mov    rax,QWORD PTR [rbp-0x18]
  40b930:	mov    rax,QWORD PTR [rax]
  40b933:	test   rax,rax
  40b936:	je     40b949 <rb_strcasecmp@plt+0x93d9>
  40b938:	mov    rax,QWORD PTR [rbp-0x18]
  40b93c:	mov    rax,QWORD PTR [rax]
  40b93f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b943:	mov    QWORD PTR [rax+0x8],rdx
  40b947:	jmp    40b962 <rb_strcasecmp@plt+0x93f2>
  40b949:	mov    rax,QWORD PTR [rbp-0x18]
  40b94d:	mov    rax,QWORD PTR [rax+0x8]
  40b951:	test   rax,rax
  40b954:	jne    40b962 <rb_strcasecmp@plt+0x93f2>
  40b956:	mov    rax,QWORD PTR [rbp-0x18]
  40b95a:	mov    rdx,QWORD PTR [rbp-0x10]
  40b95e:	mov    QWORD PTR [rax+0x8],rdx
  40b962:	mov    rax,QWORD PTR [rbp-0x18]
  40b966:	mov    rdx,QWORD PTR [rbp-0x10]
  40b96a:	mov    QWORD PTR [rax],rdx
  40b96d:	mov    rax,QWORD PTR [rbp-0x18]
  40b971:	mov    rax,QWORD PTR [rax+0x10]
  40b975:	lea    rdx,[rax+0x1]
  40b979:	mov    rax,QWORD PTR [rbp-0x18]
  40b97d:	mov    QWORD PTR [rax+0x10],rdx
  40b981:	nop
  40b982:	leave  
  40b983:	ret    
  40b984:	push   rbp
  40b985:	mov    rbp,rsp
  40b988:	sub    rsp,0x10
  40b98c:	mov    QWORD PTR [rbp-0x8],rdi
  40b990:	mov    QWORD PTR [rbp-0x10],rsi
  40b994:	cmp    QWORD PTR [rbp-0x8],0x0
  40b999:	jne    40b9ba <rb_strcasecmp@plt+0x944a>
  40b99b:	lea    rcx,[rip+0x49fe]        # 4103a0 <rb_strcasecmp@plt+0xde30>
  40b9a2:	mov    edx,0xeb
  40b9a7:	lea    rsi,[rip+0x45c2]        # 40ff70 <rb_strcasecmp@plt+0xda00>
  40b9ae:	lea    rdi,[rip+0x45e4]        # 40ff99 <rb_strcasecmp@plt+0xda29>
  40b9b5:	call   4020f0 <__assert_fail@plt>
  40b9ba:	cmp    QWORD PTR [rbp-0x10],0x0
  40b9bf:	jne    40b9e0 <rb_strcasecmp@plt+0x9470>
  40b9c1:	lea    rcx,[rip+0x49d8]        # 4103a0 <rb_strcasecmp@plt+0xde30>
  40b9c8:	mov    edx,0xec
  40b9cd:	lea    rsi,[rip+0x459c]        # 40ff70 <rb_strcasecmp@plt+0xda00>
  40b9d4:	lea    rdi,[rip+0x45c8]        # 40ffa3 <rb_strcasecmp@plt+0xda33>
  40b9db:	call   4020f0 <__assert_fail@plt>
  40b9e0:	mov    rax,QWORD PTR [rbp-0x8]
  40b9e4:	mov    rax,QWORD PTR [rax+0x10]
  40b9e8:	test   rax,rax
  40b9eb:	je     40ba03 <rb_strcasecmp@plt+0x9493>
  40b9ed:	mov    rax,QWORD PTR [rbp-0x8]
  40b9f1:	mov    rax,QWORD PTR [rax+0x10]
  40b9f5:	mov    rdx,QWORD PTR [rbp-0x8]
  40b9f9:	mov    rdx,QWORD PTR [rdx+0x8]
  40b9fd:	mov    QWORD PTR [rax+0x8],rdx
  40ba01:	jmp    40ba13 <rb_strcasecmp@plt+0x94a3>
  40ba03:	mov    rax,QWORD PTR [rbp-0x8]
  40ba07:	mov    rdx,QWORD PTR [rax+0x8]
  40ba0b:	mov    rax,QWORD PTR [rbp-0x10]
  40ba0f:	mov    QWORD PTR [rax+0x8],rdx
  40ba13:	mov    rax,QWORD PTR [rbp-0x8]
  40ba17:	mov    rax,QWORD PTR [rax+0x8]
  40ba1b:	test   rax,rax
  40ba1e:	je     40ba36 <rb_strcasecmp@plt+0x94c6>
  40ba20:	mov    rax,QWORD PTR [rbp-0x8]
  40ba24:	mov    rax,QWORD PTR [rax+0x8]
  40ba28:	mov    rdx,QWORD PTR [rbp-0x8]
  40ba2c:	mov    rdx,QWORD PTR [rdx+0x10]
  40ba30:	mov    QWORD PTR [rax+0x10],rdx
  40ba34:	jmp    40ba45 <rb_strcasecmp@plt+0x94d5>
  40ba36:	mov    rax,QWORD PTR [rbp-0x8]
  40ba3a:	mov    rdx,QWORD PTR [rax+0x10]
  40ba3e:	mov    rax,QWORD PTR [rbp-0x10]
  40ba42:	mov    QWORD PTR [rax],rdx
  40ba45:	mov    rax,QWORD PTR [rbp-0x8]
  40ba49:	mov    QWORD PTR [rax+0x8],0x0
  40ba51:	mov    rax,QWORD PTR [rbp-0x8]
  40ba55:	mov    rdx,QWORD PTR [rax+0x8]
  40ba59:	mov    rax,QWORD PTR [rbp-0x8]
  40ba5d:	mov    QWORD PTR [rax+0x10],rdx
  40ba61:	mov    rax,QWORD PTR [rbp-0x10]
  40ba65:	mov    rax,QWORD PTR [rax+0x10]
  40ba69:	lea    rdx,[rax-0x1]
  40ba6d:	mov    rax,QWORD PTR [rbp-0x10]
  40ba71:	mov    QWORD PTR [rax+0x10],rdx
  40ba75:	nop
  40ba76:	leave  
  40ba77:	ret    
  40ba78:	push   rbp
  40ba79:	mov    rbp,rsp
  40ba7c:	sub    rsp,0x20
  40ba80:	mov    QWORD PTR [rbp-0x18],rdi
  40ba84:	mov    rax,QWORD PTR [rbp-0x18]
  40ba88:	mov    rsi,rax
  40ba8b:	mov    edi,0x1
  40ba90:	call   402490 <calloc@plt>
  40ba95:	mov    QWORD PTR [rbp-0x8],rax
  40ba99:	cmp    QWORD PTR [rbp-0x8],0x0
  40ba9e:	sete   al
  40baa1:	movzx  eax,al
  40baa4:	test   rax,rax
  40baa7:	je     40baae <rb_strcasecmp@plt+0x953e>
  40baa9:	call   4023b0 <rb_outofmemory@plt>
  40baae:	mov    rax,QWORD PTR [rbp-0x8]
  40bab2:	leave  
  40bab3:	ret    
  40bab4:	push   rbp
  40bab5:	mov    rbp,rsp
  40bab8:	sub    rsp,0x10
  40babc:	mov    QWORD PTR [rbp-0x8],rdi
  40bac0:	cmp    QWORD PTR [rbp-0x8],0x0
  40bac5:	setne  al
  40bac8:	movzx  eax,al
  40bacb:	test   rax,rax
  40bace:	je     40badc <rb_strcasecmp@plt+0x956c>
  40bad0:	mov    rax,QWORD PTR [rbp-0x8]
  40bad4:	mov    rdi,rax
  40bad7:	call   402200 <free@plt>
  40badc:	nop
  40badd:	leave  
  40bade:	ret    
  40badf:	push   rbp
  40bae0:	mov    rbp,rsp
  40bae3:	mov    QWORD PTR [rbp-0x8],rdi
  40bae7:	mov    rax,QWORD PTR [rbp-0x8]
  40baeb:	mov    eax,DWORD PTR [rax+0x1cc]
  40baf1:	lea    edx,[rax+0x1]
  40baf4:	mov    rax,QWORD PTR [rbp-0x8]
  40baf8:	mov    DWORD PTR [rax+0x1cc],edx
  40bafe:	nop
  40baff:	pop    rbp
  40bb00:	ret    
  40bb01:	push   rbp
  40bb02:	mov    rbp,rsp
  40bb05:	sub    rsp,0x10
  40bb09:	mov    QWORD PTR [rbp-0x8],rdi
  40bb0d:	mov    rax,QWORD PTR [rbp-0x8]
  40bb11:	mov    eax,DWORD PTR [rax+0x1cc]
  40bb17:	lea    edx,[rax-0x1]
  40bb1a:	mov    rax,QWORD PTR [rbp-0x8]
  40bb1e:	mov    DWORD PTR [rax+0x1cc],edx
  40bb24:	mov    rax,QWORD PTR [rbp-0x8]
  40bb28:	mov    eax,DWORD PTR [rax+0x1cc]
  40bb2e:	test   eax,eax
  40bb30:	jne    40bb3e <rb_strcasecmp@plt+0x95ce>
  40bb32:	mov    rax,QWORD PTR [rbp-0x8]
  40bb36:	mov    rdi,rax
  40bb39:	call   40421d <rb_strcasecmp@plt+0x1cad>
  40bb3e:	nop
  40bb3f:	leave  
  40bb40:	ret    
  40bb41:	push   rbp
  40bb42:	mov    rbp,rsp
  40bb45:	sub    rsp,0x20
  40bb49:	mov    QWORD PTR [rbp-0x18],rdi
  40bb4d:	mov    rax,0x41a280
  40bb54:	mov    rax,QWORD PTR [rax]
  40bb57:	mov    QWORD PTR [rbp-0x10],rax
  40bb5b:	jmp    40bb95 <rb_strcasecmp@plt+0x9625>
  40bb5d:	mov    rax,QWORD PTR [rbp-0x10]
  40bb61:	mov    rax,QWORD PTR [rax]
  40bb64:	mov    QWORD PTR [rbp-0x8],rax
  40bb68:	mov    rax,QWORD PTR [rbp-0x8]
  40bb6c:	mov    rax,QWORD PTR [rax+0x20]
  40bb70:	mov    rdx,QWORD PTR [rbp-0x18]
  40bb74:	mov    rsi,rdx
  40bb77:	mov    rdi,rax
  40bb7a:	call   402120 <strcasecmp@plt>
  40bb7f:	test   eax,eax
  40bb81:	jne    40bb89 <rb_strcasecmp@plt+0x9619>
  40bb83:	mov    rax,QWORD PTR [rbp-0x8]
  40bb87:	jmp    40bba1 <rb_strcasecmp@plt+0x9631>
  40bb89:	mov    rax,QWORD PTR [rbp-0x10]
  40bb8d:	mov    rax,QWORD PTR [rax+0x10]
  40bb91:	mov    QWORD PTR [rbp-0x10],rax
  40bb95:	cmp    QWORD PTR [rbp-0x10],0x0
  40bb9a:	jne    40bb5d <rb_strcasecmp@plt+0x95ed>
  40bb9c:	mov    eax,0x0
  40bba1:	leave  
  40bba2:	ret    
  40bba3:	push   rbp
  40bba4:	mov    rbp,rsp
  40bba7:	sub    rsp,0x20
  40bbab:	mov    QWORD PTR [rbp-0x18],rdi
  40bbaf:	mov    QWORD PTR [rbp-0x20],rsi
  40bbb3:	mov    rax,QWORD PTR [rbp-0x18]
  40bbb7:	mov    rdi,rax
  40bbba:	call   40bb41 <rb_strcasecmp@plt+0x95d1>
  40bbbf:	mov    QWORD PTR [rbp-0x8],rax
  40bbc3:	cmp    QWORD PTR [rbp-0x8],0x0
  40bbc8:	je     40bbde <rb_strcasecmp@plt+0x966e>
  40bbca:	mov    rax,QWORD PTR [rbp-0x8]
  40bbce:	mov    edx,DWORD PTR [rax+0x18]
  40bbd1:	mov    rax,QWORD PTR [rbp-0x20]
  40bbd5:	mov    DWORD PTR [rax],edx
  40bbd7:	mov    eax,0x1
  40bbdc:	jmp    40bbe3 <rb_strcasecmp@plt+0x9673>
  40bbde:	mov    eax,0x0
  40bbe3:	leave  
  40bbe4:	ret    
  40bbe5:	push   rbp
  40bbe6:	mov    rbp,rsp
  40bbe9:	mov    QWORD PTR [rbp-0x8],rdi
  40bbed:	mov    DWORD PTR [rbp-0xc],esi
  40bbf0:	mov    rax,QWORD PTR [rbp-0x8]
  40bbf4:	mov    rax,QWORD PTR [rax+0x1d0]
  40bbfb:	mov    edx,DWORD PTR [rbp-0xc]
  40bbfe:	shl    rdx,0x5
  40bc02:	add    rax,rdx
  40bc05:	mov    eax,DWORD PTR [rax+0x18]
  40bc08:	pop    rbp
  40bc09:	ret    
  40bc0a:	push   rbp
  40bc0b:	mov    rbp,rsp
  40bc0e:	sub    rsp,0x20
  40bc12:	mov    QWORD PTR [rbp-0x18],rdi
  40bc16:	mov    QWORD PTR [rbp-0x20],rsi
  40bc1a:	mov    rax,QWORD PTR fs:0x28
  40bc23:	mov    QWORD PTR [rbp-0x8],rax
  40bc27:	xor    eax,eax
  40bc29:	lea    rdx,[rbp-0xc]
  40bc2d:	mov    rax,QWORD PTR [rbp-0x20]
  40bc31:	mov    rsi,rdx
  40bc34:	mov    rdi,rax
  40bc37:	call   40bba3 <rb_strcasecmp@plt+0x9633>
  40bc3c:	test   al,al
  40bc3e:	je     40bc59 <rb_strcasecmp@plt+0x96e9>
  40bc40:	mov    edx,DWORD PTR [rbp-0xc]
  40bc43:	mov    rax,QWORD PTR [rbp-0x18]
  40bc47:	mov    esi,edx
  40bc49:	mov    rdi,rax
  40bc4c:	call   40bbe5 <rb_strcasecmp@plt+0x9675>
  40bc51:	cmp    eax,0x2
  40bc54:	sete   al
  40bc57:	jmp    40bc5e <rb_strcasecmp@plt+0x96ee>
  40bc59:	mov    eax,0x1
  40bc5e:	mov    rcx,QWORD PTR [rbp-0x8]
  40bc62:	xor    rcx,QWORD PTR fs:0x28
  40bc6b:	je     40bc72 <rb_strcasecmp@plt+0x9702>
  40bc6d:	call   402400 <__stack_chk_fail@plt>
  40bc72:	leave  
  40bc73:	ret    
  40bc74:	push   rbp
  40bc75:	mov    rbp,rsp
  40bc78:	mov    QWORD PTR [rbp-0x8],rdi
  40bc7c:	mov    DWORD PTR [rbp-0xc],esi
  40bc7f:	mov    rax,QWORD PTR [rbp-0x8]
  40bc83:	mov    rax,QWORD PTR [rax+0x1d0]
  40bc8a:	mov    edx,DWORD PTR [rbp-0xc]
  40bc8d:	shl    rdx,0x5
  40bc91:	add    rax,rdx
  40bc94:	mov    rax,QWORD PTR [rax+0x10]
  40bc98:	pop    rbp
  40bc99:	ret    
  40bc9a:	push   rbp
  40bc9b:	mov    rbp,rsp
  40bc9e:	mov    QWORD PTR [rbp-0x8],rdi
  40bca2:	mov    DWORD PTR [rbp-0xc],esi
  40bca5:	mov    QWORD PTR [rbp-0x18],rdx
  40bca9:	mov    rax,QWORD PTR [rbp-0x8]
  40bcad:	mov    rax,QWORD PTR [rax+0x1d0]
  40bcb4:	mov    edx,DWORD PTR [rbp-0xc]
  40bcb7:	shl    rdx,0x5
  40bcbb:	add    rdx,rax
  40bcbe:	mov    rax,QWORD PTR [rbp-0x18]
  40bcc2:	mov    QWORD PTR [rdx+0x10],rax
  40bcc6:	nop
  40bcc7:	pop    rbp
  40bcc8:	ret    
  40bcc9:	push   rbp
  40bcca:	mov    rbp,rsp
  40bccd:	push   rbx
  40bcce:	sub    rsp,0x28
  40bcd2:	mov    QWORD PTR [rbp-0x18],rdi
  40bcd6:	mov    DWORD PTR [rbp-0x1c],esi
  40bcd9:	mov    QWORD PTR [rbp-0x28],rdx
  40bcdd:	mov    rax,QWORD PTR [rbp-0x18]
  40bce1:	mov    rax,QWORD PTR [rax+0x1d0]
  40bce8:	mov    edx,DWORD PTR [rbp-0x1c]
  40bceb:	shl    rdx,0x5
  40bcef:	lea    rbx,[rax+rdx*1]
  40bcf3:	call   4022a0 <rb_current_time@plt>
  40bcf8:	mov    rdx,rax
  40bcfb:	mov    rax,QWORD PTR [rbp-0x28]
  40bcff:	add    rax,rdx
  40bd02:	mov    QWORD PTR [rbx+0x8],rax
  40bd06:	nop
  40bd07:	add    rsp,0x28
  40bd0b:	pop    rbx
  40bd0c:	pop    rbp
  40bd0d:	ret    
  40bd0e:	push   rbp
  40bd0f:	mov    rbp,rsp
  40bd12:	mov    QWORD PTR [rbp-0x8],rdi
  40bd16:	mov    DWORD PTR [rbp-0xc],esi
  40bd19:	mov    QWORD PTR [rbp-0x18],rdx
  40bd1d:	mov    rax,QWORD PTR [rbp-0x8]
  40bd21:	mov    rax,QWORD PTR [rax+0x1d0]
  40bd28:	mov    edx,DWORD PTR [rbp-0xc]
  40bd2b:	shl    rdx,0x5
  40bd2f:	add    rdx,rax
  40bd32:	mov    rax,QWORD PTR [rbp-0x18]
  40bd36:	mov    QWORD PTR [rdx+0x8],rax
  40bd3a:	nop
  40bd3b:	pop    rbp
  40bd3c:	ret    
  40bd3d:	push   rbp
  40bd3e:	mov    rbp,rsp
  40bd41:	sub    rsp,0x10
  40bd45:	mov    QWORD PTR [rbp-0x8],rdi
  40bd49:	mov    rax,QWORD PTR [rbp-0x8]
  40bd4d:	lea    rsi,[rip+0x425c]        # 40ffb0 <rb_strcasecmp@plt+0xda40>
  40bd54:	mov    rdi,rax
  40bd57:	call   402120 <strcasecmp@plt>
  40bd5c:	test   eax,eax
  40bd5e:	jne    40bd67 <rb_strcasecmp@plt+0x97f7>
  40bd60:	mov    eax,0x1
  40bd65:	jmp    40bdc6 <rb_strcasecmp@plt+0x9856>
  40bd67:	mov    rax,QWORD PTR [rbp-0x8]
  40bd6b:	lea    rsi,[rip+0x4245]        # 40ffb7 <rb_strcasecmp@plt+0xda47>
  40bd72:	mov    rdi,rax
  40bd75:	call   402120 <strcasecmp@plt>
  40bd7a:	test   eax,eax
  40bd7c:	jne    40bd85 <rb_strcasecmp@plt+0x9815>
  40bd7e:	mov    eax,0x2
  40bd83:	jmp    40bdc6 <rb_strcasecmp@plt+0x9856>
  40bd85:	mov    rax,QWORD PTR [rbp-0x8]
  40bd89:	lea    rsi,[rip+0x422e]        # 40ffbe <rb_strcasecmp@plt+0xda4e>
  40bd90:	mov    rdi,rax
  40bd93:	call   402120 <strcasecmp@plt>
  40bd98:	test   eax,eax
  40bd9a:	jne    40bda3 <rb_strcasecmp@plt+0x9833>
  40bd9c:	mov    eax,0x3
  40bda1:	jmp    40bdc6 <rb_strcasecmp@plt+0x9856>
  40bda3:	mov    rax,QWORD PTR [rbp-0x8]
  40bda7:	lea    rsi,[rip+0x421c]        # 40ffca <rb_strcasecmp@plt+0xda5a>
  40bdae:	mov    rdi,rax
  40bdb1:	call   402120 <strcasecmp@plt>
  40bdb6:	test   eax,eax
  40bdb8:	jne    40bdc1 <rb_strcasecmp@plt+0x9851>
  40bdba:	mov    eax,0x4
  40bdbf:	jmp    40bdc6 <rb_strcasecmp@plt+0x9856>
  40bdc1:	mov    eax,0x0
  40bdc6:	leave  
  40bdc7:	ret    
  40bdc8:	push   rbp
  40bdc9:	mov    rbp,rsp
  40bdcc:	mov    DWORD PTR [rbp-0x14],edi
  40bdcf:	mov    eax,esi
  40bdd1:	mov    WORD PTR [rbp-0x18],ax
  40bdd5:	mov    rax,QWORD PTR [rip+0xe2e4]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40bddc:	mov    QWORD PTR [rbp-0x10],rax
  40bde0:	jmp    40be19 <rb_strcasecmp@plt+0x98a9>
  40bde2:	mov    rax,QWORD PTR [rbp-0x10]
  40bde6:	mov    rax,QWORD PTR [rax]
  40bde9:	mov    QWORD PTR [rbp-0x8],rax
  40bded:	mov    rax,QWORD PTR [rbp-0x8]
  40bdf1:	mov    eax,DWORD PTR [rax+0x10]
  40bdf4:	cmp    eax,DWORD PTR [rbp-0x14]
  40bdf7:	jne    40be0d <rb_strcasecmp@plt+0x989d>
  40bdf9:	mov    rax,QWORD PTR [rbp-0x8]
  40bdfd:	movzx  eax,WORD PTR [rax+0x14]
  40be01:	cmp    ax,WORD PTR [rbp-0x18]
  40be05:	jne    40be0d <rb_strcasecmp@plt+0x989d>
  40be07:	mov    rax,QWORD PTR [rbp-0x8]
  40be0b:	jmp    40be25 <rb_strcasecmp@plt+0x98b5>
  40be0d:	mov    rax,QWORD PTR [rbp-0x10]
  40be11:	mov    rax,QWORD PTR [rax+0x10]
  40be15:	mov    QWORD PTR [rbp-0x10],rax
  40be19:	cmp    QWORD PTR [rbp-0x10],0x0
  40be1e:	jne    40bde2 <rb_strcasecmp@plt+0x9872>
  40be20:	mov    eax,0x0
  40be25:	pop    rbp
  40be26:	ret    
  40be27:	push   rbp
  40be28:	mov    rbp,rsp
  40be2b:	sub    rsp,0xe0
  40be32:	mov    QWORD PTR [rbp-0xd8],rdi
  40be39:	mov    QWORD PTR [rbp-0xe0],rsi
  40be40:	mov    rax,QWORD PTR fs:0x28
  40be49:	mov    QWORD PTR [rbp-0x8],rax
  40be4d:	xor    eax,eax
  40be4f:	mov    rax,QWORD PTR [rbp-0xe0]
  40be56:	mov    QWORD PTR [rbp-0xb8],rax
  40be5d:	mov    rax,0x415ec0
  40be64:	mov    edx,DWORD PTR [rax+0x18]
  40be67:	mov    rax,QWORD PTR [rbp-0xb8]
  40be6e:	mov    esi,edx
  40be70:	mov    rdi,rax
  40be73:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40be78:	mov    QWORD PTR [rbp-0xb0],rax
  40be7f:	lea    rcx,[rbp-0x90]
  40be86:	mov    rax,QWORD PTR [rbp-0xd8]
  40be8d:	mov    edx,0x80
  40be92:	mov    rsi,rcx
  40be95:	mov    rdi,rax
  40be98:	call   402230 <rb_read@plt>
  40be9d:	mov    QWORD PTR [rbp-0xa8],rax
  40bea4:	cmp    QWORD PTR [rbp-0xa8],0x0
  40beac:	jns    40beea <rb_strcasecmp@plt+0x997a>
  40beae:	call   4023c0 <__errno_location@plt>
  40beb3:	mov    eax,DWORD PTR [rax]
  40beb5:	mov    edi,eax
  40beb7:	call   402060 <rb_ignore_errno@plt>
  40bebc:	test   eax,eax
  40bebe:	je     40beea <rb_strcasecmp@plt+0x997a>
  40bec0:	mov    rdx,QWORD PTR [rbp-0xb8]
  40bec7:	mov    rax,QWORD PTR [rbp-0xd8]
  40bece:	mov    rcx,rdx
  40bed1:	lea    rdx,[rip+0xffffffffffffff4f]        # 40be27 <rb_strcasecmp@plt+0x98b7>
  40bed8:	mov    esi,0x1
  40bedd:	mov    rdi,rax
  40bee0:	call   4020b0 <rb_setselect@plt>
  40bee5:	jmp    40c06f <rb_strcasecmp@plt+0x9aff>
  40beea:	cmp    QWORD PTR [rbp-0xa8],0x0
  40bef2:	jg     40bf08 <rb_strcasecmp@plt+0x9998>
  40bef4:	mov    rax,QWORD PTR [rbp-0xd8]
  40befb:	mov    rdi,rax
  40befe:	call   402300 <rb_close@plt>
  40bf03:	jmp    40c06f <rb_strcasecmp@plt+0x9aff>
  40bf08:	mov    rax,QWORD PTR [rip+0xe1b1]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40bf0f:	mov    QWORD PTR [rbp-0xd0],rax
  40bf16:	jmp    40c052 <rb_strcasecmp@plt+0x9ae2>
  40bf1b:	mov    rax,QWORD PTR [rbp-0xd0]
  40bf22:	mov    rax,QWORD PTR [rax]
  40bf25:	mov    QWORD PTR [rbp-0xa0],rax
  40bf2c:	mov    rax,QWORD PTR [rbp-0xa0]
  40bf33:	mov    rdi,rax
  40bf36:	call   402210 <strlen@plt>
  40bf3b:	mov    rdx,rax
  40bf3e:	mov    rax,QWORD PTR [rbp-0xa0]
  40bf45:	lea    rcx,[rbp-0x90]
  40bf4c:	mov    rsi,rcx
  40bf4f:	mov    rdi,rax
  40bf52:	call   402170 <strncmp@plt>
  40bf57:	test   eax,eax
  40bf59:	jne    40c040 <rb_strcasecmp@plt+0x9ad0>
  40bf5f:	mov    rax,QWORD PTR [rbp-0xb0]
  40bf66:	mov    rax,QWORD PTR [rax]
  40bf69:	mov    QWORD PTR [rbp-0xc8],rax
  40bf70:	cmp    QWORD PTR [rbp-0xc8],0x0
  40bf78:	je     40bf87 <rb_strcasecmp@plt+0x9a17>
  40bf7a:	mov    rax,QWORD PTR [rbp-0xc8]
  40bf81:	mov    rax,QWORD PTR [rax+0x10]
  40bf85:	jmp    40bf8c <rb_strcasecmp@plt+0x9a1c>
  40bf87:	mov    eax,0x0
  40bf8c:	mov    QWORD PTR [rbp-0xc0],rax
  40bf93:	jmp    40bff9 <rb_strcasecmp@plt+0x9a89>
  40bf95:	mov    rax,QWORD PTR [rbp-0xc8]
  40bf9c:	mov    rax,QWORD PTR [rax]
  40bf9f:	mov    QWORD PTR [rbp-0x98],rax
  40bfa6:	mov    rax,QWORD PTR [rbp-0x98]
  40bfad:	mov    rax,QWORD PTR [rax+0x8]
  40bfb1:	mov    rdi,rax
  40bfb4:	call   402300 <rb_close@plt>
  40bfb9:	mov    rax,QWORD PTR [rbp-0x98]
  40bfc0:	mov    rdi,rax
  40bfc3:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40bfc8:	mov    rax,QWORD PTR [rbp-0xc0]
  40bfcf:	mov    QWORD PTR [rbp-0xc8],rax
  40bfd6:	cmp    QWORD PTR [rbp-0xc8],0x0
  40bfde:	je     40bfed <rb_strcasecmp@plt+0x9a7d>
  40bfe0:	mov    rax,QWORD PTR [rbp-0xc8]
  40bfe7:	mov    rax,QWORD PTR [rax+0x10]
  40bfeb:	jmp    40bff2 <rb_strcasecmp@plt+0x9a82>
  40bfed:	mov    eax,0x0
  40bff2:	mov    QWORD PTR [rbp-0xc0],rax
  40bff9:	cmp    QWORD PTR [rbp-0xc8],0x0
  40c001:	jne    40bf95 <rb_strcasecmp@plt+0x9a25>
  40c003:	mov    rax,QWORD PTR [rbp-0xb0]
  40c00a:	mov    rdi,rax
  40c00d:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40c012:	mov    rax,0x415ec0
  40c019:	mov    esi,DWORD PTR [rax+0x18]
  40c01c:	lea    rdx,[rbp-0x90]
  40c023:	mov    rax,QWORD PTR [rbp-0xb8]
  40c02a:	lea    rcx,[rip+0x3fa6]        # 40ffd7 <rb_strcasecmp@plt+0xda67>
  40c031:	mov    rdi,rax
  40c034:	mov    eax,0x0
  40c039:	call   4043c7 <rb_strcasecmp@plt+0x1e57>
  40c03e:	jmp    40c060 <rb_strcasecmp@plt+0x9af0>
  40c040:	mov    rax,QWORD PTR [rbp-0xd0]
  40c047:	mov    rax,QWORD PTR [rax+0x10]
  40c04b:	mov    QWORD PTR [rbp-0xd0],rax
  40c052:	cmp    QWORD PTR [rbp-0xd0],0x0
  40c05a:	jne    40bf1b <rb_strcasecmp@plt+0x99ab>
  40c060:	mov    rax,QWORD PTR [rbp-0xd8]
  40c067:	mov    rdi,rax
  40c06a:	call   402300 <rb_close@plt>
  40c06f:	mov    rax,QWORD PTR [rbp-0x8]
  40c073:	xor    rax,QWORD PTR fs:0x28
  40c07c:	je     40c083 <rb_strcasecmp@plt+0x9b13>
  40c07e:	call   402400 <__stack_chk_fail@plt>
  40c083:	leave  
  40c084:	ret    
  40c085:	push   rbp
  40c086:	mov    rbp,rsp
  40c089:	sub    rsp,0x110
  40c090:	mov    QWORD PTR [rbp-0xf8],rdi
  40c097:	mov    DWORD PTR [rbp-0xfc],esi
  40c09d:	mov    QWORD PTR [rbp-0x108],rdx
  40c0a4:	mov    DWORD PTR [rbp-0x100],ecx
  40c0aa:	mov    QWORD PTR [rbp-0x110],r8
  40c0b1:	mov    rax,QWORD PTR fs:0x28
  40c0ba:	mov    QWORD PTR [rbp-0x8],rax
  40c0be:	xor    eax,eax
  40c0c0:	mov    QWORD PTR [rbp-0xe0],0x0
  40c0cb:	mov    rax,QWORD PTR [rbp-0x110]
  40c0d2:	mov    QWORD PTR [rbp-0xd8],rax
  40c0d9:	mov    DWORD PTR [rbp-0xe4],0x80
  40c0e3:	cmp    DWORD PTR [rbp-0xfc],0x0
  40c0ea:	jne    40c0f6 <rb_strcasecmp@plt+0x9b86>
  40c0ec:	cmp    QWORD PTR [rbp-0xd8],0x0
  40c0f4:	jne    40c10a <rb_strcasecmp@plt+0x9b9a>
  40c0f6:	mov    rax,QWORD PTR [rbp-0xf8]
  40c0fd:	mov    rdi,rax
  40c100:	call   402300 <rb_close@plt>
  40c105:	jmp    40c374 <rb_strcasecmp@plt+0x9e04>
  40c10a:	mov    rax,QWORD PTR [rbp-0xf8]
  40c111:	mov    rdi,rax
  40c114:	call   4020c0 <rb_get_fd@plt>
  40c119:	mov    ecx,eax
  40c11b:	lea    rdx,[rbp-0xe4]
  40c122:	lea    rax,[rbp-0x90]
  40c129:	mov    rsi,rax
  40c12c:	mov    edi,ecx
  40c12e:	call   402320 <getsockname@plt>
  40c133:	test   eax,eax
  40c135:	je     40c14b <rb_strcasecmp@plt+0x9bdb>
  40c137:	mov    rax,QWORD PTR [rbp-0xf8]
  40c13e:	mov    rdi,rax
  40c141:	call   402300 <rb_close@plt>
  40c146:	jmp    40c374 <rb_strcasecmp@plt+0x9e04>
  40c14b:	mov    rax,0x41a270
  40c152:	mov    rax,QWORD PTR [rax]
  40c155:	lea    rdx,[rbp-0xa0]
  40c15c:	mov    rsi,rdx
  40c15f:	mov    rdi,rax
  40c162:	call   402250 <rb_dictionary_foreach_start@plt>
  40c167:	jmp    40c334 <rb_strcasecmp@plt+0x9dc4>
  40c16c:	mov    rax,QWORD PTR [rbp-0xe0]
  40c173:	add    rax,0xf8
  40c179:	movzx  edx,WORD PTR [rax]
  40c17c:	lea    rax,[rbp-0x90]
  40c183:	movzx  eax,WORD PTR [rax]
  40c186:	cmp    dx,ax
  40c189:	jne    40c311 <rb_strcasecmp@plt+0x9da1>
  40c18f:	lea    rax,[rbp-0x90]
  40c196:	movzx  eax,WORD PTR [rax]
  40c199:	movzx  eax,ax
  40c19c:	cmp    eax,0x2
  40c19f:	je     40c1ab <rb_strcasecmp@plt+0x9c3b>
  40c1a1:	cmp    eax,0xa
  40c1a4:	je     40c213 <rb_strcasecmp@plt+0x9ca3>
  40c1a6:	jmp    40c2f1 <rb_strcasecmp@plt+0x9d81>
  40c1ab:	lea    rax,[rbp-0x90]
  40c1b2:	mov    QWORD PTR [rbp-0xd0],rax
  40c1b9:	mov    rax,QWORD PTR [rbp-0xe0]
  40c1c0:	add    rax,0xf8
  40c1c6:	mov    QWORD PTR [rbp-0xc8],rax
  40c1cd:	mov    rax,QWORD PTR [rbp-0xd0]
  40c1d4:	mov    edx,DWORD PTR [rax+0x4]
  40c1d7:	mov    rax,QWORD PTR [rbp-0xc8]
  40c1de:	mov    eax,DWORD PTR [rax+0x4]
  40c1e1:	cmp    edx,eax
  40c1e3:	jne    40c314 <rb_strcasecmp@plt+0x9da4>
  40c1e9:	mov    rdx,QWORD PTR [rbp-0xe0]
  40c1f0:	mov    rax,QWORD PTR [rbp-0xf8]
  40c1f7:	mov    rcx,rdx
  40c1fa:	lea    rdx,[rip+0xfffffffffffffc26]        # 40be27 <rb_strcasecmp@plt+0x98b7>
  40c201:	mov    esi,0x1
  40c206:	mov    rdi,rax
  40c209:	call   4020b0 <rb_setselect@plt>
  40c20e:	jmp    40c374 <rb_strcasecmp@plt+0x9e04>
  40c213:	lea    rax,[rbp-0x90]
  40c21a:	mov    QWORD PTR [rbp-0xc0],rax
  40c221:	mov    rax,QWORD PTR [rbp-0xe0]
  40c228:	add    rax,0xf8
  40c22e:	mov    QWORD PTR [rbp-0xb8],rax
  40c235:	mov    rax,QWORD PTR [rbp-0xc0]
  40c23c:	add    rax,0x8
  40c240:	mov    QWORD PTR [rbp-0xb0],rax
  40c247:	mov    rax,QWORD PTR [rbp-0xb8]
  40c24e:	add    rax,0x8
  40c252:	mov    QWORD PTR [rbp-0xa8],rax
  40c259:	mov    rax,QWORD PTR [rbp-0xb0]
  40c260:	mov    edx,DWORD PTR [rax]
  40c262:	mov    rax,QWORD PTR [rbp-0xa8]
  40c269:	mov    eax,DWORD PTR [rax]
  40c26b:	cmp    edx,eax
  40c26d:	jne    40c2be <rb_strcasecmp@plt+0x9d4e>
  40c26f:	mov    rax,QWORD PTR [rbp-0xb0]
  40c276:	mov    edx,DWORD PTR [rax+0x4]
  40c279:	mov    rax,QWORD PTR [rbp-0xa8]
  40c280:	mov    eax,DWORD PTR [rax+0x4]
  40c283:	cmp    edx,eax
  40c285:	jne    40c2be <rb_strcasecmp@plt+0x9d4e>
  40c287:	mov    rax,QWORD PTR [rbp-0xb0]
  40c28e:	mov    edx,DWORD PTR [rax+0x8]
  40c291:	mov    rax,QWORD PTR [rbp-0xa8]
  40c298:	mov    eax,DWORD PTR [rax+0x8]
  40c29b:	cmp    edx,eax
  40c29d:	jne    40c2be <rb_strcasecmp@plt+0x9d4e>
  40c29f:	mov    rax,QWORD PTR [rbp-0xb0]
  40c2a6:	mov    edx,DWORD PTR [rax+0xc]
  40c2a9:	mov    rax,QWORD PTR [rbp-0xa8]
  40c2b0:	mov    eax,DWORD PTR [rax+0xc]
  40c2b3:	cmp    edx,eax
  40c2b5:	jne    40c2be <rb_strcasecmp@plt+0x9d4e>
  40c2b7:	mov    eax,0x1
  40c2bc:	jmp    40c2c3 <rb_strcasecmp@plt+0x9d53>
  40c2be:	mov    eax,0x0
  40c2c3:	test   eax,eax
  40c2c5:	je     40c317 <rb_strcasecmp@plt+0x9da7>
  40c2c7:	mov    rdx,QWORD PTR [rbp-0xe0]
  40c2ce:	mov    rax,QWORD PTR [rbp-0xf8]
  40c2d5:	mov    rcx,rdx
  40c2d8:	lea    rdx,[rip+0xfffffffffffffb48]        # 40be27 <rb_strcasecmp@plt+0x98b7>
  40c2df:	mov    esi,0x1
  40c2e4:	mov    rdi,rax
  40c2e7:	call   4020b0 <rb_setselect@plt>
  40c2ec:	jmp    40c374 <rb_strcasecmp@plt+0x9e04>
  40c2f1:	lea    rsi,[rip+0x3cf8]        # 40fff0 <rb_strcasecmp@plt+0xda80>
  40c2f8:	mov    edi,0x43
  40c2fd:	mov    eax,0x0
  40c302:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40c307:	mov    edi,0x3
  40c30c:	call   4020e0 <exit@plt>
  40c311:	nop
  40c312:	jmp    40c318 <rb_strcasecmp@plt+0x9da8>
  40c314:	nop
  40c315:	jmp    40c318 <rb_strcasecmp@plt+0x9da8>
  40c317:	nop
  40c318:	mov    rax,0x41a270
  40c31f:	mov    rax,QWORD PTR [rax]
  40c322:	lea    rdx,[rbp-0xa0]
  40c329:	mov    rsi,rdx
  40c32c:	mov    rdi,rax
  40c32f:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40c334:	mov    rax,0x41a270
  40c33b:	mov    rax,QWORD PTR [rax]
  40c33e:	lea    rdx,[rbp-0xa0]
  40c345:	mov    rsi,rdx
  40c348:	mov    rdi,rax
  40c34b:	call   402140 <rb_dictionary_foreach_cur@plt>
  40c350:	mov    QWORD PTR [rbp-0xe0],rax
  40c357:	cmp    QWORD PTR [rbp-0xe0],0x0
  40c35f:	jne    40c16c <rb_strcasecmp@plt+0x9bfc>
  40c365:	mov    rax,QWORD PTR [rbp-0xf8]
  40c36c:	mov    rdi,rax
  40c36f:	call   402300 <rb_close@plt>
  40c374:	mov    rax,QWORD PTR [rbp-0x8]
  40c378:	xor    rax,QWORD PTR fs:0x28
  40c381:	je     40c388 <rb_strcasecmp@plt+0x9e18>
  40c383:	call   402400 <__stack_chk_fail@plt>
  40c388:	leave  
  40c389:	ret    
  40c38a:	push   rbp
  40c38b:	mov    rbp,rsp
  40c38e:	sub    rsp,0x40
  40c392:	mov    QWORD PTR [rbp-0x28],rdi
  40c396:	mov    DWORD PTR [rbp-0x2c],esi
  40c399:	mov    QWORD PTR [rbp-0x38],rdx
  40c39d:	mov    rax,QWORD PTR [rbp-0x38]
  40c3a1:	mov    QWORD PTR [rbp-0x20],rax
  40c3a5:	mov    rax,QWORD PTR [rbp-0x20]
  40c3a9:	mov    rax,QWORD PTR [rax+0x10]
  40c3ad:	mov    QWORD PTR [rbp-0x18],rax
  40c3b1:	mov    rax,QWORD PTR [rbp-0x20]
  40c3b5:	mov    rax,QWORD PTR [rax]
  40c3b8:	mov    QWORD PTR [rbp-0x10],rax
  40c3bc:	mov    rax,0x415ec0
  40c3c3:	mov    edx,DWORD PTR [rax+0x18]
  40c3c6:	mov    rax,QWORD PTR [rbp-0x10]
  40c3ca:	mov    esi,edx
  40c3cc:	mov    rdi,rax
  40c3cf:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40c3d4:	mov    QWORD PTR [rbp-0x8],rax
  40c3d8:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c3dc:	jne    40c44b <rb_strcasecmp@plt+0x9edb>
  40c3de:	movzx  eax,BYTE PTR [rip+0xdcf3]        # 41a0d8 <rb_strcasecmp@plt+0x17b68>
  40c3e5:	xor    eax,0x1
  40c3e8:	test   al,al
  40c3ea:	jne    40c44b <rb_strcasecmp@plt+0x9edb>
  40c3ec:	mov    rax,QWORD PTR [rbp-0x10]
  40c3f0:	add    rax,0xf8
  40c3f6:	movzx  eax,WORD PTR [rax]
  40c3f9:	movzx  eax,ax
  40c3fc:	cmp    eax,0x2
  40c3ff:	je     40c408 <rb_strcasecmp@plt+0x9e98>
  40c401:	cmp    eax,0xa
  40c404:	je     40c416 <rb_strcasecmp@plt+0x9ea6>
  40c406:	jmp    40c44b <rb_strcasecmp@plt+0x9edb>
  40c408:	mov    rax,QWORD PTR [rip+0xdd89]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40c40f:	test   rax,rax
  40c412:	jne    40c433 <rb_strcasecmp@plt+0x9ec3>
  40c414:	jmp    40c44b <rb_strcasecmp@plt+0x9edb>
  40c416:	mov    rax,QWORD PTR [rbp-0x18]
  40c41a:	movzx  eax,BYTE PTR [rax+0x17]
  40c41e:	xor    eax,0x1
  40c421:	test   al,al
  40c423:	jne    40c447 <rb_strcasecmp@plt+0x9ed7>
  40c425:	mov    rax,QWORD PTR [rip+0xde2c]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40c42c:	test   rax,rax
  40c42f:	je     40c44a <rb_strcasecmp@plt+0x9eda>
  40c431:	jmp    40c434 <rb_strcasecmp@plt+0x9ec4>
  40c433:	nop
  40c434:	mov    rax,QWORD PTR [rbp-0x18]
  40c438:	mov    rax,QWORD PTR [rax+0x18]
  40c43c:	mov    rdx,QWORD PTR [rbp-0x20]
  40c440:	mov    rdi,rdx
  40c443:	call   rax
  40c445:	jmp    40c44b <rb_strcasecmp@plt+0x9edb>
  40c447:	nop
  40c448:	jmp    40c44b <rb_strcasecmp@plt+0x9edb>
  40c44a:	nop
  40c44b:	mov    rax,QWORD PTR [rbp-0x20]
  40c44f:	mov    rax,QWORD PTR [rax+0x8]
  40c453:	mov    rdi,rax
  40c456:	call   402300 <rb_close@plt>
  40c45b:	mov    rax,QWORD PTR [rbp-0x8]
  40c45f:	mov    rdx,QWORD PTR [rbp-0x20]
  40c463:	add    rdx,0x20
  40c467:	mov    rsi,rax
  40c46a:	mov    rdi,rdx
  40c46d:	call   40b984 <rb_strcasecmp@plt+0x9414>
  40c472:	mov    rax,QWORD PTR [rbp-0x20]
  40c476:	mov    rdi,rax
  40c479:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40c47e:	nop
  40c47f:	leave  
  40c480:	ret    
  40c481:	push   rbp
  40c482:	mov    rbp,rsp
  40c485:	sub    rsp,0x30
  40c489:	mov    QWORD PTR [rbp-0x28],rdi
  40c48d:	mov    rax,QWORD PTR fs:0x28
  40c496:	mov    QWORD PTR [rbp-0x8],rax
  40c49a:	xor    eax,eax
  40c49c:	lea    rax,[rbp-0x11]
  40c4a0:	mov    QWORD PTR [rbp-0x20],rax
  40c4a4:	mov    rax,QWORD PTR [rbp-0x20]
  40c4a8:	mov    edx,0x2
  40c4ad:	lea    rsi,[rip+0x3b69]        # 41001d <rb_strcasecmp@plt+0xdaad>
  40c4b4:	mov    rdi,rax
  40c4b7:	call   402560 <memcpy@plt>
  40c4bc:	add    QWORD PTR [rbp-0x20],0x2
  40c4c1:	mov    rax,QWORD PTR [rbp-0x28]
  40c4c5:	mov    rax,QWORD PTR [rax+0x18]
  40c4c9:	add    rax,0x38
  40c4cd:	add    rax,0x2
  40c4d1:	movzx  edx,WORD PTR [rax]
  40c4d4:	mov    rax,QWORD PTR [rbp-0x20]
  40c4d8:	mov    WORD PTR [rax],dx
  40c4db:	add    QWORD PTR [rbp-0x20],0x2
  40c4e0:	mov    rax,QWORD PTR [rbp-0x28]
  40c4e4:	mov    rax,QWORD PTR [rax+0x18]
  40c4e8:	add    rax,0x38
  40c4ec:	add    rax,0x4
  40c4f0:	mov    edx,DWORD PTR [rax]
  40c4f2:	mov    rax,QWORD PTR [rbp-0x20]
  40c4f6:	mov    DWORD PTR [rax],edx
  40c4f8:	add    QWORD PTR [rbp-0x20],0x4
  40c4fd:	mov    rax,QWORD PTR [rbp-0x20]
  40c501:	mov    BYTE PTR [rax],0x0
  40c504:	mov    rax,QWORD PTR [rbp-0x28]
  40c508:	mov    rax,QWORD PTR [rax+0x8]
  40c50c:	lea    rcx,[rbp-0x11]
  40c510:	mov    edx,0x9
  40c515:	mov    rsi,rcx
  40c518:	mov    rdi,rax
  40c51b:	call   4021a0 <rb_write@plt>
  40c520:	test   rax,rax
  40c523:	js     40c55d <rb_strcasecmp@plt+0x9fed>
  40c525:	mov    rax,QWORD PTR [rbp-0x28]
  40c529:	mov    rax,QWORD PTR [rax+0x10]
  40c52d:	mov    rdi,rax
  40c530:	call   402210 <strlen@plt>
  40c535:	add    eax,0x1
  40c538:	mov    edx,eax
  40c53a:	mov    rax,QWORD PTR [rbp-0x28]
  40c53e:	mov    rax,QWORD PTR [rax+0x10]
  40c542:	mov    rcx,rax
  40c545:	mov    rax,QWORD PTR [rbp-0x28]
  40c549:	mov    rax,QWORD PTR [rax+0x8]
  40c54d:	mov    rsi,rcx
  40c550:	mov    rdi,rax
  40c553:	call   4021a0 <rb_write@plt>
  40c558:	test   rax,rax
  40c55b:	jmp    40c55e <rb_strcasecmp@plt+0x9fee>
  40c55d:	nop
  40c55e:	mov    rax,QWORD PTR [rbp-0x8]
  40c562:	xor    rax,QWORD PTR fs:0x28
  40c56b:	je     40c572 <rb_strcasecmp@plt+0xa002>
  40c56d:	call   402400 <__stack_chk_fail@plt>
  40c572:	leave  
  40c573:	ret    
  40c574:	push   rbp
  40c575:	mov    rbp,rsp
  40c578:	sub    rsp,0x50
  40c57c:	mov    QWORD PTR [rbp-0x48],rdi
  40c580:	mov    rax,QWORD PTR fs:0x28
  40c589:	mov    QWORD PTR [rbp-0x8],rax
  40c58d:	xor    eax,eax
  40c58f:	mov    rax,QWORD PTR [rbp-0x48]
  40c593:	mov    rax,QWORD PTR [rax]
  40c596:	mov    QWORD PTR [rbp-0x38],rax
  40c59a:	lea    rax,[rbp-0x30]
  40c59e:	mov    QWORD PTR [rbp-0x40],rax
  40c5a2:	mov    rax,QWORD PTR [rbp-0x40]
  40c5a6:	mov    edx,0x6
  40c5ab:	lea    rsi,[rip+0x3a6e]        # 410020 <rb_strcasecmp@plt+0xdab0>
  40c5b2:	mov    rdi,rax
  40c5b5:	call   402560 <memcpy@plt>
  40c5ba:	add    QWORD PTR [rbp-0x40],0x6
  40c5bf:	mov    rax,QWORD PTR [rbp-0x38]
  40c5c3:	add    rax,0xf8
  40c5c9:	movzx  eax,WORD PTR [rax]
  40c5cc:	movzx  eax,ax
  40c5cf:	cmp    eax,0x2
  40c5d2:	je     40c5de <rb_strcasecmp@plt+0xa06e>
  40c5d4:	cmp    eax,0xa
  40c5d7:	je     40c62b <rb_strcasecmp@plt+0xa0bb>
  40c5d9:	jmp    40c6e6 <rb_strcasecmp@plt+0xa176>
  40c5de:	mov    rax,QWORD PTR [rbp-0x40]
  40c5e2:	lea    rdx,[rax+0x1]
  40c5e6:	mov    QWORD PTR [rbp-0x40],rdx
  40c5ea:	mov    BYTE PTR [rax],0x1
  40c5ed:	mov    rax,QWORD PTR [rbp-0x48]
  40c5f1:	mov    rax,QWORD PTR [rax+0x18]
  40c5f5:	add    rax,0x38
  40c5f9:	add    rax,0x4
  40c5fd:	mov    edx,DWORD PTR [rax]
  40c5ff:	mov    rax,QWORD PTR [rbp-0x40]
  40c603:	mov    DWORD PTR [rax],edx
  40c605:	add    QWORD PTR [rbp-0x40],0x4
  40c60a:	mov    rax,QWORD PTR [rbp-0x48]
  40c60e:	mov    rax,QWORD PTR [rax+0x18]
  40c612:	add    rax,0x38
  40c616:	add    rax,0x2
  40c61a:	movzx  edx,WORD PTR [rax]
  40c61d:	mov    rax,QWORD PTR [rbp-0x40]
  40c621:	mov    WORD PTR [rax],dx
  40c624:	add    QWORD PTR [rbp-0x40],0x2
  40c629:	jmp    40c681 <rb_strcasecmp@plt+0xa111>
  40c62b:	mov    rax,QWORD PTR [rbp-0x40]
  40c62f:	lea    rdx,[rax+0x1]
  40c633:	mov    QWORD PTR [rbp-0x40],rdx
  40c637:	mov    BYTE PTR [rax],0x4
  40c63a:	mov    rax,QWORD PTR [rbp-0x48]
  40c63e:	mov    rax,QWORD PTR [rax+0x18]
  40c642:	add    rax,0x38
  40c646:	add    rax,0x8
  40c64a:	mov    rdx,QWORD PTR [rax+0x8]
  40c64e:	mov    rax,QWORD PTR [rax]
  40c651:	mov    rcx,QWORD PTR [rbp-0x40]
  40c655:	mov    QWORD PTR [rcx],rax
  40c658:	mov    QWORD PTR [rcx+0x8],rdx
  40c65c:	add    QWORD PTR [rbp-0x40],0x10
  40c661:	mov    rax,QWORD PTR [rbp-0x48]
  40c665:	mov    rax,QWORD PTR [rax+0x18]
  40c669:	add    rax,0x38
  40c66d:	add    rax,0x2
  40c671:	movzx  edx,WORD PTR [rax]
  40c674:	mov    rax,QWORD PTR [rbp-0x40]
  40c678:	mov    WORD PTR [rax],dx
  40c67b:	add    QWORD PTR [rbp-0x40],0x2
  40c680:	nop
  40c681:	lea    rdx,[rbp-0x30]
  40c685:	mov    rax,QWORD PTR [rbp-0x40]
  40c689:	sub    rdx,rax
  40c68c:	mov    rax,rdx
  40c68f:	mov    edx,eax
  40c691:	mov    rax,QWORD PTR [rbp-0x48]
  40c695:	mov    rax,QWORD PTR [rax+0x8]
  40c699:	lea    rcx,[rbp-0x30]
  40c69d:	mov    rsi,rcx
  40c6a0:	mov    rdi,rax
  40c6a3:	call   4021a0 <rb_write@plt>
  40c6a8:	test   rax,rax
  40c6ab:	jle    40c6e5 <rb_strcasecmp@plt+0xa175>
  40c6ad:	mov    rax,QWORD PTR [rbp-0x48]
  40c6b1:	mov    rax,QWORD PTR [rax+0x10]
  40c6b5:	mov    rdi,rax
  40c6b8:	call   402210 <strlen@plt>
  40c6bd:	add    eax,0x1
  40c6c0:	mov    edx,eax
  40c6c2:	mov    rax,QWORD PTR [rbp-0x48]
  40c6c6:	mov    rax,QWORD PTR [rax+0x10]
  40c6ca:	mov    rcx,rax
  40c6cd:	mov    rax,QWORD PTR [rbp-0x48]
  40c6d1:	mov    rax,QWORD PTR [rax+0x8]
  40c6d5:	mov    rsi,rcx
  40c6d8:	mov    rdi,rax
  40c6db:	call   4021a0 <rb_write@plt>
  40c6e0:	test   rax,rax
  40c6e3:	jmp    40c6e6 <rb_strcasecmp@plt+0xa176>
  40c6e5:	nop
  40c6e6:	mov    rax,QWORD PTR [rbp-0x8]
  40c6ea:	xor    rax,QWORD PTR fs:0x28
  40c6f3:	je     40c6fa <rb_strcasecmp@plt+0xa18a>
  40c6f5:	call   402400 <__stack_chk_fail@plt>
  40c6fa:	leave  
  40c6fb:	ret    
  40c6fc:	push   rbp
  40c6fd:	mov    rbp,rsp
  40c700:	sub    rsp,0xa0
  40c707:	mov    QWORD PTR [rbp-0x98],rdi
  40c70e:	mov    rax,QWORD PTR fs:0x28
  40c717:	mov    QWORD PTR [rbp-0x8],rax
  40c71b:	xor    eax,eax
  40c71d:	mov    rax,QWORD PTR [rbp-0x98]
  40c724:	mov    rax,QWORD PTR [rax+0x18]
  40c728:	movzx  eax,WORD PTR [rax+0x36]
  40c72c:	movzx  edx,ax
  40c72f:	mov    rax,QWORD PTR [rbp-0x98]
  40c736:	mov    rax,QWORD PTR [rax+0x18]
  40c73a:	mov    rcx,rax
  40c73d:	lea    rax,[rbp-0x90]
  40c744:	mov    r8d,edx
  40c747:	lea    rdx,[rip+0x38d9]        # 410027 <rb_strcasecmp@plt+0xdab7>
  40c74e:	mov    esi,0x80
  40c753:	mov    rdi,rax
  40c756:	mov    eax,0x0
  40c75b:	call   402080 <snprintf@plt>
  40c760:	lea    rax,[rbp-0x90]
  40c767:	mov    rdi,rax
  40c76a:	call   402210 <strlen@plt>
  40c76f:	mov    edx,eax
  40c771:	mov    rax,QWORD PTR [rbp-0x98]
  40c778:	mov    rax,QWORD PTR [rax+0x8]
  40c77c:	lea    rcx,[rbp-0x90]
  40c783:	mov    rsi,rcx
  40c786:	mov    rdi,rax
  40c789:	call   4021a0 <rb_write@plt>
  40c78e:	test   rax,rax
  40c791:	jle    40c7f8 <rb_strcasecmp@plt+0xa288>
  40c793:	mov    rax,QWORD PTR [rbp-0x98]
  40c79a:	mov    rax,QWORD PTR [rax+0x10]
  40c79e:	mov    rdi,rax
  40c7a1:	call   402210 <strlen@plt>
  40c7a6:	add    eax,0x1
  40c7a9:	mov    edx,eax
  40c7ab:	mov    rax,QWORD PTR [rbp-0x98]
  40c7b2:	mov    rax,QWORD PTR [rax+0x10]
  40c7b6:	mov    rcx,rax
  40c7b9:	mov    rax,QWORD PTR [rbp-0x98]
  40c7c0:	mov    rax,QWORD PTR [rax+0x8]
  40c7c4:	mov    rsi,rcx
  40c7c7:	mov    rdi,rax
  40c7ca:	call   4021a0 <rb_write@plt>
  40c7cf:	test   rax,rax
  40c7d2:	jle    40c7fb <rb_strcasecmp@plt+0xa28b>
  40c7d4:	mov    rax,QWORD PTR [rbp-0x98]
  40c7db:	mov    rax,QWORD PTR [rax+0x8]
  40c7df:	mov    edx,0x2
  40c7e4:	lea    rsi,[rip+0x3858]        # 410043 <rb_strcasecmp@plt+0xdad3>
  40c7eb:	mov    rdi,rax
  40c7ee:	call   4021a0 <rb_write@plt>
  40c7f3:	test   rax,rax
  40c7f6:	jmp    40c7fc <rb_strcasecmp@plt+0xa28c>
  40c7f8:	nop
  40c7f9:	jmp    40c7fc <rb_strcasecmp@plt+0xa28c>
  40c7fb:	nop
  40c7fc:	mov    rax,QWORD PTR [rbp-0x8]
  40c800:	xor    rax,QWORD PTR fs:0x28
  40c809:	je     40c810 <rb_strcasecmp@plt+0xa2a0>
  40c80b:	call   402400 <__stack_chk_fail@plt>
  40c810:	leave  
  40c811:	ret    
  40c812:	push   rbp
  40c813:	mov    rbp,rsp
  40c816:	push   rbx
  40c817:	sub    rsp,0x148
  40c81e:	mov    QWORD PTR [rbp-0x148],rdi
  40c825:	mov    QWORD PTR [rbp-0x150],rsi
  40c82c:	mov    rax,QWORD PTR fs:0x28
  40c835:	mov    QWORD PTR [rbp-0x18],rax
  40c839:	xor    eax,eax
  40c83b:	mov    rax,0x415ec0
  40c842:	mov    edx,DWORD PTR [rax+0x18]
  40c845:	mov    rax,QWORD PTR [rbp-0x148]
  40c84c:	mov    esi,edx
  40c84e:	mov    rdi,rax
  40c851:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40c856:	mov    QWORD PTR [rbp-0x130],rax
  40c85d:	mov    edi,0x38
  40c862:	call   40ba78 <rb_strcasecmp@plt+0x9508>
  40c867:	mov    QWORD PTR [rbp-0x128],rax
  40c86e:	mov    DWORD PTR [rbp-0x13c],0x1
  40c878:	mov    rax,QWORD PTR [rbp-0x148]
  40c87f:	add    rax,0xf8
  40c885:	movzx  eax,WORD PTR [rax]
  40c888:	cmp    ax,0xa
  40c88c:	jne    40c8c1 <rb_strcasecmp@plt+0xa351>
  40c88e:	mov    rax,QWORD PTR [rbp-0x150]
  40c895:	mov    eax,DWORD PTR [rax+0x10]
  40c898:	cmp    eax,0x1
  40c89b:	jne    40c8b1 <rb_strcasecmp@plt+0xa341>
  40c89d:	mov    rax,QWORD PTR [rbp-0x128]
  40c8a4:	mov    rdi,rax
  40c8a7:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40c8ac:	jmp    40ccae <rb_strcasecmp@plt+0xa73e>
  40c8b1:	lea    rax,[rip+0xd8e8]        # 41a1a0 <rb_strcasecmp@plt+0x17c30>
  40c8b8:	mov    QWORD PTR [rbp-0x138],rax
  40c8bf:	jmp    40c8cf <rb_strcasecmp@plt+0xa35f>
  40c8c1:	lea    rax,[rip+0xd818]        # 41a0e0 <rb_strcasecmp@plt+0x17b70>
  40c8c8:	mov    QWORD PTR [rbp-0x138],rax
  40c8cf:	mov    rax,QWORD PTR [rbp-0x138]
  40c8d6:	mov    rax,QWORD PTR [rax+0xb8]
  40c8dd:	test   rax,rax
  40c8e0:	jne    40c8f6 <rb_strcasecmp@plt+0xa386>
  40c8e2:	mov    rax,QWORD PTR [rbp-0x128]
  40c8e9:	mov    rdi,rax
  40c8ec:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40c8f1:	jmp    40ccae <rb_strcasecmp@plt+0xa73e>
  40c8f6:	mov    rax,QWORD PTR [rbp-0x148]
  40c8fd:	mov    rdx,QWORD PTR [rax+0xf8]
  40c904:	mov    QWORD PTR [rbp-0x120],rdx
  40c90b:	mov    rdx,QWORD PTR [rax+0x100]
  40c912:	mov    QWORD PTR [rbp-0x118],rdx
  40c919:	mov    rdx,QWORD PTR [rax+0x108]
  40c920:	mov    QWORD PTR [rbp-0x110],rdx
  40c927:	mov    rdx,QWORD PTR [rax+0x110]
  40c92e:	mov    QWORD PTR [rbp-0x108],rdx
  40c935:	mov    rdx,QWORD PTR [rax+0x118]
  40c93c:	mov    QWORD PTR [rbp-0x100],rdx
  40c943:	mov    rdx,QWORD PTR [rax+0x120]
  40c94a:	mov    QWORD PTR [rbp-0xf8],rdx
  40c951:	mov    rdx,QWORD PTR [rax+0x128]
  40c958:	mov    QWORD PTR [rbp-0xf0],rdx
  40c95f:	mov    rdx,QWORD PTR [rax+0x130]
  40c966:	mov    QWORD PTR [rbp-0xe8],rdx
  40c96d:	mov    rdx,QWORD PTR [rax+0x138]
  40c974:	mov    QWORD PTR [rbp-0xe0],rdx
  40c97b:	mov    rdx,QWORD PTR [rax+0x140]
  40c982:	mov    QWORD PTR [rbp-0xd8],rdx
  40c989:	mov    rdx,QWORD PTR [rax+0x148]
  40c990:	mov    QWORD PTR [rbp-0xd0],rdx
  40c997:	mov    rdx,QWORD PTR [rax+0x150]
  40c99e:	mov    QWORD PTR [rbp-0xc8],rdx
  40c9a5:	mov    rdx,QWORD PTR [rax+0x158]
  40c9ac:	mov    QWORD PTR [rbp-0xc0],rdx
  40c9b3:	mov    rdx,QWORD PTR [rax+0x160]
  40c9ba:	mov    QWORD PTR [rbp-0xb8],rdx
  40c9c1:	mov    rdx,QWORD PTR [rax+0x168]
  40c9c8:	mov    QWORD PTR [rbp-0xb0],rdx
  40c9cf:	mov    rax,QWORD PTR [rax+0x170]
  40c9d6:	mov    QWORD PTR [rbp-0xa8],rax
  40c9dd:	mov    rax,QWORD PTR [rbp-0x138]
  40c9e4:	mov    rdx,QWORD PTR [rax+0x38]
  40c9e8:	mov    QWORD PTR [rbp-0xa0],rdx
  40c9ef:	mov    rdx,QWORD PTR [rax+0x40]
  40c9f3:	mov    QWORD PTR [rbp-0x98],rdx
  40c9fa:	mov    rdx,QWORD PTR [rax+0x48]
  40c9fe:	mov    QWORD PTR [rbp-0x90],rdx
  40ca05:	mov    rdx,QWORD PTR [rax+0x50]
  40ca09:	mov    QWORD PTR [rbp-0x88],rdx
  40ca10:	mov    rdx,QWORD PTR [rax+0x58]
  40ca14:	mov    QWORD PTR [rbp-0x80],rdx
  40ca18:	mov    rdx,QWORD PTR [rax+0x60]
  40ca1c:	mov    QWORD PTR [rbp-0x78],rdx
  40ca20:	mov    rdx,QWORD PTR [rax+0x68]
  40ca24:	mov    QWORD PTR [rbp-0x70],rdx
  40ca28:	mov    rdx,QWORD PTR [rax+0x70]
  40ca2c:	mov    QWORD PTR [rbp-0x68],rdx
  40ca30:	mov    rdx,QWORD PTR [rax+0x78]
  40ca34:	mov    QWORD PTR [rbp-0x60],rdx
  40ca38:	mov    rdx,QWORD PTR [rax+0x80]
  40ca3f:	mov    QWORD PTR [rbp-0x58],rdx
  40ca43:	mov    rdx,QWORD PTR [rax+0x88]
  40ca4a:	mov    QWORD PTR [rbp-0x50],rdx
  40ca4e:	mov    rdx,QWORD PTR [rax+0x90]
  40ca55:	mov    QWORD PTR [rbp-0x48],rdx
  40ca59:	mov    rdx,QWORD PTR [rax+0x98]
  40ca60:	mov    QWORD PTR [rbp-0x40],rdx
  40ca64:	mov    rdx,QWORD PTR [rax+0xa0]
  40ca6b:	mov    QWORD PTR [rbp-0x38],rdx
  40ca6f:	mov    rdx,QWORD PTR [rax+0xa8]
  40ca76:	mov    QWORD PTR [rbp-0x30],rdx
  40ca7a:	mov    rax,QWORD PTR [rax+0xb0]
  40ca81:	mov    QWORD PTR [rbp-0x28],rax
  40ca85:	mov    rax,QWORD PTR [rbp-0x128]
  40ca8c:	mov    rdx,QWORD PTR [rbp-0x148]
  40ca93:	mov    QWORD PTR [rax],rdx
  40ca96:	mov    rax,QWORD PTR [rbp-0x128]
  40ca9d:	mov    rdx,QWORD PTR [rbp-0x150]
  40caa4:	mov    QWORD PTR [rax+0x10],rdx
  40caa8:	mov    rax,QWORD PTR [rbp-0x128]
  40caaf:	mov    rdx,QWORD PTR [rbp-0x138]
  40cab6:	mov    QWORD PTR [rax+0x18],rdx
  40caba:	mov    rdx,QWORD PTR [rbp-0x150]
  40cac1:	mov    rax,QWORD PTR [rbp-0x148]
  40cac8:	add    rax,0xf8
  40cace:	movzx  eax,WORD PTR [rax]
  40cad1:	movzx  eax,ax
  40cad4:	mov    rcx,rdx
  40cad7:	mov    edx,0x0
  40cadc:	mov    esi,0x1
  40cae1:	mov    edi,eax
  40cae3:	call   402110 <rb_socket@plt>
  40cae8:	mov    rdx,rax
  40caeb:	mov    rax,QWORD PTR [rbp-0x128]
  40caf2:	mov    QWORD PTR [rax+0x8],rdx
  40caf6:	mov    rax,QWORD PTR [rbp-0x128]
  40cafd:	mov    rax,QWORD PTR [rax+0x8]
  40cb01:	test   rax,rax
  40cb04:	jne    40cb4e <rb_strcasecmp@plt+0xa5de>
  40cb06:	call   4023c0 <__errno_location@plt>
  40cb0b:	mov    eax,DWORD PTR [rax]
  40cb0d:	mov    edi,eax
  40cb0f:	call   4022c0 <strerror@plt>
  40cb14:	mov    rdx,rax
  40cb17:	mov    rax,QWORD PTR [rbp-0x150]
  40cb1e:	mov    rcx,rdx
  40cb21:	mov    rdx,rax
  40cb24:	lea    rsi,[rip+0x351d]        # 410048 <rb_strcasecmp@plt+0xdad8>
  40cb2b:	mov    edi,0x57
  40cb30:	mov    eax,0x0
  40cb35:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40cb3a:	mov    rax,QWORD PTR [rbp-0x128]
  40cb41:	mov    rdi,rax
  40cb44:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40cb49:	jmp    40ccae <rb_strcasecmp@plt+0xa73e>
  40cb4e:	mov    rax,QWORD PTR [rbp-0x128]
  40cb55:	mov    rax,QWORD PTR [rax+0x8]
  40cb59:	mov    rdi,rax
  40cb5c:	call   4020c0 <rb_get_fd@plt>
  40cb61:	mov    edi,eax
  40cb63:	lea    rax,[rbp-0x13c]
  40cb6a:	mov    r8d,0x4
  40cb70:	mov    rcx,rax
  40cb73:	mov    edx,0x1
  40cb78:	mov    esi,0x6
  40cb7d:	call   4021b0 <setsockopt@plt>
  40cb82:	lea    rax,[rbp-0xa0]
  40cb89:	movzx  eax,WORD PTR [rax]
  40cb8c:	cmp    ax,0x2
  40cb90:	jne    40cba1 <rb_strcasecmp@plt+0xa631>
  40cb92:	lea    rax,[rbp-0xa0]
  40cb99:	mov    WORD PTR [rax+0x2],0x0
  40cb9f:	jmp    40cbae <rb_strcasecmp@plt+0xa63e>
  40cba1:	lea    rax,[rbp-0xa0]
  40cba8:	mov    WORD PTR [rax+0x2],0x0
  40cbae:	lea    rax,[rbp-0x120]
  40cbb5:	movzx  eax,WORD PTR [rax]
  40cbb8:	cmp    ax,0x2
  40cbbc:	jne    40cbe0 <rb_strcasecmp@plt+0xa670>
  40cbbe:	lea    rbx,[rbp-0x120]
  40cbc5:	mov    rax,QWORD PTR [rbp-0x150]
  40cbcc:	movzx  eax,WORD PTR [rax+0x14]
  40cbd0:	movzx  eax,ax
  40cbd3:	mov    edi,eax
  40cbd5:	call   4020d0 <htons@plt>
  40cbda:	mov    WORD PTR [rbx+0x2],ax
  40cbde:	jmp    40cc00 <rb_strcasecmp@plt+0xa690>
  40cbe0:	lea    rbx,[rbp-0x120]
  40cbe7:	mov    rax,QWORD PTR [rbp-0x150]
  40cbee:	movzx  eax,WORD PTR [rax+0x14]
  40cbf2:	movzx  eax,ax
  40cbf5:	mov    edi,eax
  40cbf7:	call   4020d0 <htons@plt>
  40cbfc:	mov    WORD PTR [rbx+0x2],ax
  40cc00:	mov    rdx,QWORD PTR [rbp-0x130]
  40cc07:	mov    rax,QWORD PTR [rbp-0x128]
  40cc0e:	lea    rcx,[rax+0x20]
  40cc12:	mov    rax,QWORD PTR [rbp-0x128]
  40cc19:	mov    rsi,rcx
  40cc1c:	mov    rdi,rax
  40cc1f:	call   40b880 <rb_strcasecmp@plt+0x9310>
  40cc24:	mov    rax,QWORD PTR [rbp-0x150]
  40cc2b:	movzx  eax,BYTE PTR [rax+0x16]
  40cc2f:	xor    eax,0x1
  40cc32:	test   al,al
  40cc34:	je     40cc73 <rb_strcasecmp@plt+0xa703>
  40cc36:	mov    edi,DWORD PTR [rip+0x91bc]        # 415df8 <rb_strcasecmp@plt+0x13888>
  40cc3c:	mov    rax,QWORD PTR [rbp-0x128]
  40cc43:	mov    rax,QWORD PTR [rax+0x8]
  40cc47:	mov    rcx,QWORD PTR [rbp-0x128]
  40cc4e:	lea    rdx,[rbp-0xa0]
  40cc55:	lea    rsi,[rbp-0x120]
  40cc5c:	mov    r9d,edi
  40cc5f:	mov    r8,rcx
  40cc62:	lea    rcx,[rip+0xfffffffffffff721]        # 40c38a <rb_strcasecmp@plt+0x9e1a>
  40cc69:	mov    rdi,rax
  40cc6c:	call   402090 <rb_connect_tcp@plt>
  40cc71:	jmp    40ccae <rb_strcasecmp@plt+0xa73e>
  40cc73:	mov    edi,DWORD PTR [rip+0x917f]        # 415df8 <rb_strcasecmp@plt+0x13888>
  40cc79:	mov    rax,QWORD PTR [rbp-0x128]
  40cc80:	mov    rax,QWORD PTR [rax+0x8]
  40cc84:	mov    rcx,QWORD PTR [rbp-0x128]
  40cc8b:	lea    rdx,[rbp-0xa0]
  40cc92:	lea    rsi,[rbp-0x120]
  40cc99:	mov    r9d,edi
  40cc9c:	mov    r8,rcx
  40cc9f:	lea    rcx,[rip+0xfffffffffffff6e4]        # 40c38a <rb_strcasecmp@plt+0x9e1a>
  40cca6:	mov    rdi,rax
  40cca9:	call   402070 <rb_connect_tcp_ssl@plt>
  40ccae:	mov    rax,QWORD PTR [rbp-0x18]
  40ccb2:	xor    rax,QWORD PTR fs:0x28
  40ccbb:	je     40ccc2 <rb_strcasecmp@plt+0xa752>
  40ccbd:	call   402400 <__stack_chk_fail@plt>
  40ccc2:	add    rsp,0x148
  40ccc9:	pop    rbx
  40ccca:	pop    rbp
  40cccb:	ret    
  40cccc:	push   rbp
  40cccd:	mov    rbp,rsp
  40ccd0:	push   rbx
  40ccd1:	sub    rsp,0x108
  40ccd8:	mov    QWORD PTR [rbp-0x108],rdi
  40ccdf:	mov    eax,esi
  40cce1:	mov    WORD PTR [rbp-0x10c],ax
  40cce8:	mov    rax,QWORD PTR fs:0x28
  40ccf1:	mov    QWORD PTR [rbp-0x18],rax
  40ccf5:	xor    eax,eax
  40ccf7:	mov    DWORD PTR [rbp-0xfc],0x1
  40cd01:	lea    rdx,[rbp-0xa0]
  40cd08:	mov    rax,QWORD PTR [rbp-0x108]
  40cd0f:	mov    rsi,rdx
  40cd12:	mov    rdi,rax
  40cd15:	call   402280 <rb_inet_pton_sock@plt>
  40cd1a:	test   eax,eax
  40cd1c:	jne    40cd51 <rb_strcasecmp@plt+0xa7e1>
  40cd1e:	movzx  edx,WORD PTR [rbp-0x10c]
  40cd25:	mov    rax,QWORD PTR [rbp-0x108]
  40cd2c:	mov    ecx,edx
  40cd2e:	mov    rdx,rax
  40cd31:	lea    rsi,[rip+0x3340]        # 410078 <rb_strcasecmp@plt+0xdb08>
  40cd38:	mov    edi,0x43
  40cd3d:	mov    eax,0x0
  40cd42:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40cd47:	mov    edi,0x3
  40cd4c:	call   4020e0 <exit@plt>
  40cd51:	lea    rax,[rbp-0xa0]
  40cd58:	movzx  eax,WORD PTR [rax]
  40cd5b:	cmp    ax,0x2
  40cd5f:	jne    40cd7c <rb_strcasecmp@plt+0xa80c>
  40cd61:	lea    rbx,[rbp-0xa0]
  40cd68:	movzx  eax,WORD PTR [rbp-0x10c]
  40cd6f:	mov    edi,eax
  40cd71:	call   4020d0 <htons@plt>
  40cd76:	mov    WORD PTR [rbx+0x2],ax
  40cd7a:	jmp    40cd95 <rb_strcasecmp@plt+0xa825>
  40cd7c:	lea    rbx,[rbp-0xa0]
  40cd83:	movzx  eax,WORD PTR [rbp-0x10c]
  40cd8a:	mov    edi,eax
  40cd8c:	call   4020d0 <htons@plt>
  40cd91:	mov    WORD PTR [rbx+0x2],ax
  40cd95:	lea    rax,[rbp-0xa0]
  40cd9c:	movzx  eax,WORD PTR [rax]
  40cd9f:	cmp    ax,0xa
  40cda3:	jne    40cefe <rb_strcasecmp@plt+0xa98e>
  40cda9:	lea    rax,[rip+0xd3f0]        # 41a1a0 <rb_strcasecmp@plt+0x17c30>
  40cdb0:	mov    QWORD PTR [rbp-0xf8],rax
  40cdb7:	lea    rax,[rbp-0xa0]
  40cdbe:	mov    QWORD PTR [rbp-0xf0],rax
  40cdc5:	mov    rax,QWORD PTR [rbp-0xf8]
  40cdcc:	add    rax,0x38
  40cdd0:	mov    QWORD PTR [rbp-0xe8],rax
  40cdd7:	mov    rax,QWORD PTR [rbp-0xf0]
  40cdde:	add    rax,0x8
  40cde2:	mov    QWORD PTR [rbp-0xe0],rax
  40cde9:	mov    rax,QWORD PTR [rbp-0xe8]
  40cdf0:	add    rax,0x8
  40cdf4:	mov    QWORD PTR [rbp-0xd8],rax
  40cdfb:	mov    rax,QWORD PTR [rbp-0xe0]
  40ce02:	mov    edx,DWORD PTR [rax]
  40ce04:	mov    rax,QWORD PTR [rbp-0xd8]
  40ce0b:	mov    eax,DWORD PTR [rax]
  40ce0d:	cmp    edx,eax
  40ce0f:	jne    40ce60 <rb_strcasecmp@plt+0xa8f0>
  40ce11:	mov    rax,QWORD PTR [rbp-0xe0]
  40ce18:	mov    edx,DWORD PTR [rax+0x4]
  40ce1b:	mov    rax,QWORD PTR [rbp-0xd8]
  40ce22:	mov    eax,DWORD PTR [rax+0x4]
  40ce25:	cmp    edx,eax
  40ce27:	jne    40ce60 <rb_strcasecmp@plt+0xa8f0>
  40ce29:	mov    rax,QWORD PTR [rbp-0xe0]
  40ce30:	mov    edx,DWORD PTR [rax+0x8]
  40ce33:	mov    rax,QWORD PTR [rbp-0xd8]
  40ce3a:	mov    eax,DWORD PTR [rax+0x8]
  40ce3d:	cmp    edx,eax
  40ce3f:	jne    40ce60 <rb_strcasecmp@plt+0xa8f0>
  40ce41:	mov    rax,QWORD PTR [rbp-0xe0]
  40ce48:	mov    edx,DWORD PTR [rax+0xc]
  40ce4b:	mov    rax,QWORD PTR [rbp-0xd8]
  40ce52:	mov    eax,DWORD PTR [rax+0xc]
  40ce55:	cmp    edx,eax
  40ce57:	jne    40ce60 <rb_strcasecmp@plt+0xa8f0>
  40ce59:	mov    eax,0x1
  40ce5e:	jmp    40ce65 <rb_strcasecmp@plt+0xa8f5>
  40ce60:	mov    eax,0x0
  40ce65:	test   eax,eax
  40ce67:	je     40cfd1 <rb_strcasecmp@plt+0xaa61>
  40ce6d:	lea    rax,[rbp-0xa0]
  40ce74:	movzx  eax,WORD PTR [rax]
  40ce77:	cmp    ax,0x2
  40ce7b:	jne    40ce8d <rb_strcasecmp@plt+0xa91d>
  40ce7d:	lea    rax,[rbp-0xa0]
  40ce84:	movzx  eax,WORD PTR [rax+0x2]
  40ce88:	movzx  edx,ax
  40ce8b:	jmp    40ce9b <rb_strcasecmp@plt+0xa92b>
  40ce8d:	lea    rax,[rbp-0xa0]
  40ce94:	movzx  eax,WORD PTR [rax+0x2]
  40ce98:	movzx  edx,ax
  40ce9b:	mov    rax,QWORD PTR [rbp-0xf8]
  40cea2:	add    rax,0x38
  40cea6:	movzx  eax,WORD PTR [rax]
  40cea9:	cmp    ax,0x2
  40cead:	jne    40cec3 <rb_strcasecmp@plt+0xa953>
  40ceaf:	mov    rax,QWORD PTR [rbp-0xf8]
  40ceb6:	add    rax,0x38
  40ceba:	movzx  eax,WORD PTR [rax+0x2]
  40cebe:	movzx  eax,ax
  40cec1:	jmp    40ced5 <rb_strcasecmp@plt+0xa965>
  40cec3:	mov    rax,QWORD PTR [rbp-0xf8]
  40ceca:	add    rax,0x38
  40cece:	movzx  eax,WORD PTR [rax+0x2]
  40ced2:	movzx  eax,ax
  40ced5:	cmp    edx,eax
  40ced7:	jne    40cfd1 <rb_strcasecmp@plt+0xaa61>
  40cedd:	mov    rax,QWORD PTR [rbp-0xf8]
  40cee4:	mov    rax,QWORD PTR [rax+0xb8]
  40ceeb:	test   rax,rax
  40ceee:	je     40cfd1 <rb_strcasecmp@plt+0xaa61>
  40cef4:	mov    eax,0x0
  40cef9:	jmp    40d342 <rb_strcasecmp@plt+0xadd2>
  40cefe:	lea    rax,[rip+0xd1db]        # 41a0e0 <rb_strcasecmp@plt+0x17b70>
  40cf05:	mov    QWORD PTR [rbp-0xf8],rax
  40cf0c:	lea    rax,[rbp-0xa0]
  40cf13:	mov    QWORD PTR [rbp-0xd0],rax
  40cf1a:	mov    rax,QWORD PTR [rbp-0xf8]
  40cf21:	add    rax,0x38
  40cf25:	mov    QWORD PTR [rbp-0xc8],rax
  40cf2c:	mov    rax,QWORD PTR [rbp-0xd0]
  40cf33:	mov    edx,DWORD PTR [rax+0x4]
  40cf36:	mov    rax,QWORD PTR [rbp-0xc8]
  40cf3d:	mov    eax,DWORD PTR [rax+0x4]
  40cf40:	cmp    edx,eax
  40cf42:	jne    40cfd1 <rb_strcasecmp@plt+0xaa61>
  40cf48:	lea    rax,[rbp-0xa0]
  40cf4f:	movzx  eax,WORD PTR [rax]
  40cf52:	cmp    ax,0x2
  40cf56:	jne    40cf68 <rb_strcasecmp@plt+0xa9f8>
  40cf58:	lea    rax,[rbp-0xa0]
  40cf5f:	movzx  eax,WORD PTR [rax+0x2]
  40cf63:	movzx  edx,ax
  40cf66:	jmp    40cf76 <rb_strcasecmp@plt+0xaa06>
  40cf68:	lea    rax,[rbp-0xa0]
  40cf6f:	movzx  eax,WORD PTR [rax+0x2]
  40cf73:	movzx  edx,ax
  40cf76:	mov    rax,QWORD PTR [rbp-0xf8]
  40cf7d:	add    rax,0x38
  40cf81:	movzx  eax,WORD PTR [rax]
  40cf84:	cmp    ax,0x2
  40cf88:	jne    40cf9e <rb_strcasecmp@plt+0xaa2e>
  40cf8a:	mov    rax,QWORD PTR [rbp-0xf8]
  40cf91:	add    rax,0x38
  40cf95:	movzx  eax,WORD PTR [rax+0x2]
  40cf99:	movzx  eax,ax
  40cf9c:	jmp    40cfb0 <rb_strcasecmp@plt+0xaa40>
  40cf9e:	mov    rax,QWORD PTR [rbp-0xf8]
  40cfa5:	add    rax,0x38
  40cfa9:	movzx  eax,WORD PTR [rax+0x2]
  40cfad:	movzx  eax,ax
  40cfb0:	cmp    edx,eax
  40cfb2:	jne    40cfd1 <rb_strcasecmp@plt+0xaa61>
  40cfb4:	mov    rax,QWORD PTR [rbp-0xf8]
  40cfbb:	mov    rax,QWORD PTR [rax+0xb8]
  40cfc2:	test   rax,rax
  40cfc5:	je     40cfd1 <rb_strcasecmp@plt+0xaa61>
  40cfc7:	mov    eax,0x0
  40cfcc:	jmp    40d342 <rb_strcasecmp@plt+0xadd2>
  40cfd1:	lea    rax,[rbp-0xa0]
  40cfd8:	movzx  eax,WORD PTR [rax]
  40cfdb:	movzx  eax,ax
  40cfde:	lea    rcx,[rip+0x30b3]        # 410098 <rb_strcasecmp@plt+0xdb28>
  40cfe5:	mov    edx,0x0
  40cfea:	mov    esi,0x1
  40cfef:	mov    edi,eax
  40cff1:	call   402110 <rb_socket@plt>
  40cff6:	mov    QWORD PTR [rbp-0xc0],rax
  40cffd:	cmp    QWORD PTR [rbp-0xc0],0x0
  40d005:	jne    40d038 <rb_strcasecmp@plt+0xaac8>
  40d007:	call   4023c0 <__errno_location@plt>
  40d00c:	mov    eax,DWORD PTR [rax]
  40d00e:	mov    edi,eax
  40d010:	call   4022c0 <strerror@plt>
  40d015:	mov    rdx,rax
  40d018:	lea    rsi,[rip+0x308d]        # 4100ac <rb_strcasecmp@plt+0xdb3c>
  40d01f:	mov    edi,0x43
  40d024:	mov    eax,0x0
  40d029:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40d02e:	mov    edi,0x3
  40d033:	call   4020e0 <exit@plt>
  40d038:	mov    rax,QWORD PTR [rbp-0xc0]
  40d03f:	mov    rdi,rax
  40d042:	call   4020c0 <rb_get_fd@plt>
  40d047:	mov    edi,eax
  40d049:	lea    rax,[rbp-0xfc]
  40d050:	mov    r8d,0x4
  40d056:	mov    rcx,rax
  40d059:	mov    edx,0x2
  40d05e:	mov    esi,0x1
  40d063:	call   4021b0 <setsockopt@plt>
  40d068:	test   eax,eax
  40d06a:	je     40d09d <rb_strcasecmp@plt+0xab2d>
  40d06c:	call   4023c0 <__errno_location@plt>
  40d071:	mov    eax,DWORD PTR [rax]
  40d073:	mov    edi,eax
  40d075:	call   4022c0 <strerror@plt>
  40d07a:	mov    rdx,rax
  40d07d:	lea    rsi,[rip+0x304c]        # 4100d0 <rb_strcasecmp@plt+0xdb60>
  40d084:	mov    edi,0x43
  40d089:	mov    eax,0x0
  40d08e:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40d093:	mov    edi,0x3
  40d098:	call   4020e0 <exit@plt>
  40d09d:	lea    rax,[rbp-0xa0]
  40d0a4:	movzx  eax,WORD PTR [rax]
  40d0a7:	cmp    ax,0x2
  40d0ab:	jne    40d0b4 <rb_strcasecmp@plt+0xab44>
  40d0ad:	mov    ebx,0x10
  40d0b2:	jmp    40d0b9 <rb_strcasecmp@plt+0xab49>
  40d0b4:	mov    ebx,0x1c
  40d0b9:	mov    rax,QWORD PTR [rbp-0xc0]
  40d0c0:	mov    rdi,rax
  40d0c3:	call   4020c0 <rb_get_fd@plt>
  40d0c8:	mov    ecx,eax
  40d0ca:	lea    rax,[rbp-0xa0]
  40d0d1:	mov    edx,ebx
  40d0d3:	mov    rsi,rax
  40d0d6:	mov    edi,ecx
  40d0d8:	call   402530 <bind@plt>
  40d0dd:	test   eax,eax
  40d0df:	je     40d121 <rb_strcasecmp@plt+0xabb1>
  40d0e1:	call   4023c0 <__errno_location@plt>
  40d0e6:	mov    eax,DWORD PTR [rax]
  40d0e8:	mov    edi,eax
  40d0ea:	call   4022c0 <strerror@plt>
  40d0ef:	mov    rdx,rax
  40d0f2:	lea    rsi,[rip+0x2fff]        # 4100f8 <rb_strcasecmp@plt+0xdb88>
  40d0f9:	mov    edi,0x57
  40d0fe:	mov    eax,0x0
  40d103:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40d108:	mov    rax,QWORD PTR [rbp-0xc0]
  40d10f:	mov    rdi,rax
  40d112:	call   402300 <rb_close@plt>
  40d117:	mov    eax,0x0
  40d11c:	jmp    40d342 <rb_strcasecmp@plt+0xadd2>
  40d121:	mov    rax,QWORD PTR [rbp-0xc0]
  40d128:	mov    edx,0x0
  40d12d:	mov    esi,0x1000
  40d132:	mov    rdi,rax
  40d135:	call   402550 <rb_listen@plt>
  40d13a:	test   eax,eax
  40d13c:	je     40d17e <rb_strcasecmp@plt+0xac0e>
  40d13e:	call   4023c0 <__errno_location@plt>
  40d143:	mov    eax,DWORD PTR [rax]
  40d145:	mov    edi,eax
  40d147:	call   4022c0 <strerror@plt>
  40d14c:	mov    rdx,rax
  40d14f:	lea    rsi,[rip+0x2fc2]        # 410118 <rb_strcasecmp@plt+0xdba8>
  40d156:	mov    edi,0x57
  40d15b:	mov    eax,0x0
  40d160:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40d165:	mov    rax,QWORD PTR [rbp-0xc0]
  40d16c:	mov    rdi,rax
  40d16f:	call   402300 <rb_close@plt>
  40d174:	mov    eax,0x0
  40d179:	jmp    40d342 <rb_strcasecmp@plt+0xadd2>
  40d17e:	mov    rax,QWORD PTR [rbp-0xf8]
  40d185:	mov    rax,QWORD PTR [rax+0xb8]
  40d18c:	test   rax,rax
  40d18f:	je     40d1a7 <rb_strcasecmp@plt+0xac37>
  40d191:	mov    rax,QWORD PTR [rbp-0xf8]
  40d198:	mov    rax,QWORD PTR [rax+0xb8]
  40d19f:	mov    rdi,rax
  40d1a2:	call   402300 <rb_close@plt>
  40d1a7:	mov    rax,QWORD PTR [rbp-0xf8]
  40d1ae:	mov    rdx,QWORD PTR [rbp-0xc0]
  40d1b5:	mov    QWORD PTR [rax+0xb8],rdx
  40d1bc:	mov    rax,0x41a270
  40d1c3:	mov    rax,QWORD PTR [rax]
  40d1c6:	lea    rdx,[rbp-0xb0]
  40d1cd:	mov    rsi,rdx
  40d1d0:	mov    rdi,rax
  40d1d3:	call   402250 <rb_dictionary_foreach_start@plt>
  40d1d8:	jmp    40d205 <rb_strcasecmp@plt+0xac95>
  40d1da:	mov    rax,QWORD PTR [rbp-0xb8]
  40d1e1:	mov    rdi,rax
  40d1e4:	call   40d53f <rb_strcasecmp@plt+0xafcf>
  40d1e9:	mov    rax,0x41a270
  40d1f0:	mov    rax,QWORD PTR [rax]
  40d1f3:	lea    rdx,[rbp-0xb0]
  40d1fa:	mov    rsi,rdx
  40d1fd:	mov    rdi,rax
  40d200:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40d205:	mov    rax,0x41a270
  40d20c:	mov    rax,QWORD PTR [rax]
  40d20f:	lea    rdx,[rbp-0xb0]
  40d216:	mov    rsi,rdx
  40d219:	mov    rdi,rax
  40d21c:	call   402140 <rb_dictionary_foreach_cur@plt>
  40d221:	mov    QWORD PTR [rbp-0xb8],rax
  40d228:	cmp    QWORD PTR [rbp-0xb8],0x0
  40d230:	jne    40d1da <rb_strcasecmp@plt+0xac6a>
  40d232:	mov    rax,QWORD PTR [rbp-0xf8]
  40d239:	mov    rcx,QWORD PTR [rbp-0x108]
  40d240:	mov    edx,0x35
  40d245:	mov    rsi,rcx
  40d248:	mov    rdi,rax
  40d24b:	call   4021d0 <rb_strlcpy@plt>
  40d250:	mov    rax,QWORD PTR [rbp-0xf8]
  40d257:	movzx  edx,WORD PTR [rbp-0x10c]
  40d25e:	mov    WORD PTR [rax+0x36],dx
  40d262:	mov    rax,QWORD PTR [rbp-0xf8]
  40d269:	mov    rdx,QWORD PTR [rbp-0xa0]
  40d270:	mov    QWORD PTR [rax+0x38],rdx
  40d274:	mov    rdx,QWORD PTR [rbp-0x98]
  40d27b:	mov    QWORD PTR [rax+0x40],rdx
  40d27f:	mov    rdx,QWORD PTR [rbp-0x90]
  40d286:	mov    QWORD PTR [rax+0x48],rdx
  40d28a:	mov    rdx,QWORD PTR [rbp-0x88]
  40d291:	mov    QWORD PTR [rax+0x50],rdx
  40d295:	mov    rdx,QWORD PTR [rbp-0x80]
  40d299:	mov    QWORD PTR [rax+0x58],rdx
  40d29d:	mov    rdx,QWORD PTR [rbp-0x78]
  40d2a1:	mov    QWORD PTR [rax+0x60],rdx
  40d2a5:	mov    rdx,QWORD PTR [rbp-0x70]
  40d2a9:	mov    QWORD PTR [rax+0x68],rdx
  40d2ad:	mov    rdx,QWORD PTR [rbp-0x68]
  40d2b1:	mov    QWORD PTR [rax+0x70],rdx
  40d2b5:	mov    rdx,QWORD PTR [rbp-0x60]
  40d2b9:	mov    QWORD PTR [rax+0x78],rdx
  40d2bd:	mov    rdx,QWORD PTR [rbp-0x58]
  40d2c1:	mov    QWORD PTR [rax+0x80],rdx
  40d2c8:	mov    rdx,QWORD PTR [rbp-0x50]
  40d2cc:	mov    QWORD PTR [rax+0x88],rdx
  40d2d3:	mov    rdx,QWORD PTR [rbp-0x48]
  40d2d7:	mov    QWORD PTR [rax+0x90],rdx
  40d2de:	mov    rdx,QWORD PTR [rbp-0x40]
  40d2e2:	mov    QWORD PTR [rax+0x98],rdx
  40d2e9:	mov    rdx,QWORD PTR [rbp-0x38]
  40d2ed:	mov    QWORD PTR [rax+0xa0],rdx
  40d2f4:	mov    rdx,QWORD PTR [rbp-0x30]
  40d2f8:	mov    QWORD PTR [rax+0xa8],rdx
  40d2ff:	mov    rdx,QWORD PTR [rbp-0x28]
  40d303:	mov    QWORD PTR [rax+0xb0],rdx
  40d30a:	mov    BYTE PTR [rip+0xcdc7],0x1        # 41a0d8 <rb_strcasecmp@plt+0x17b68>
  40d311:	mov    rax,QWORD PTR [rbp-0xf8]
  40d318:	mov    rax,QWORD PTR [rax+0xb8]
  40d31f:	mov    rdx,QWORD PTR [rbp-0xf8]
  40d326:	mov    rcx,rdx
  40d329:	lea    rdx,[rip+0xffffffffffffed55]        # 40c085 <rb_strcasecmp@plt+0x9b15>
  40d330:	mov    esi,0x0
  40d335:	mov    rdi,rax
  40d338:	call   402470 <rb_accept_tcp@plt>
  40d33d:	mov    eax,0x1
  40d342:	mov    rbx,QWORD PTR [rbp-0x18]
  40d346:	xor    rbx,QWORD PTR fs:0x28
  40d34f:	je     40d356 <rb_strcasecmp@plt+0xade6>
  40d351:	call   402400 <__stack_chk_fail@plt>
  40d356:	add    rsp,0x108
  40d35d:	pop    rbx
  40d35e:	pop    rbp
  40d35f:	ret    
  40d360:	push   rbp
  40d361:	mov    rbp,rsp
  40d364:	sub    rsp,0x30
  40d368:	mov    QWORD PTR [rbp-0x28],rdi
  40d36c:	mov    rax,0x415ec0
  40d373:	mov    edx,DWORD PTR [rax+0x18]
  40d376:	mov    rax,QWORD PTR [rbp-0x28]
  40d37a:	mov    esi,edx
  40d37c:	mov    rdi,rax
  40d37f:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40d384:	mov    QWORD PTR [rbp-0x10],rax
  40d388:	mov    eax,DWORD PTR [rip+0x8a6a]        # 415df8 <rb_strcasecmp@plt+0x13888>
  40d38e:	movsxd rdx,eax
  40d391:	mov    rax,0x415ec0
  40d398:	mov    ecx,DWORD PTR [rax+0x18]
  40d39b:	mov    rax,QWORD PTR [rbp-0x28]
  40d39f:	mov    esi,ecx
  40d3a1:	mov    rdi,rax
  40d3a4:	call   40bcc9 <rb_strcasecmp@plt+0x9759>
  40d3a9:	mov    rax,QWORD PTR [rbp-0x10]
  40d3ad:	mov    BYTE PTR [rax+0x18],0x1
  40d3b1:	mov    rax,QWORD PTR [rip+0xcd08]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40d3b8:	mov    QWORD PTR [rbp-0x18],rax
  40d3bc:	jmp    40d3e8 <rb_strcasecmp@plt+0xae78>
  40d3be:	mov    rax,QWORD PTR [rbp-0x18]
  40d3c2:	mov    rax,QWORD PTR [rax]
  40d3c5:	mov    QWORD PTR [rbp-0x8],rax
  40d3c9:	mov    rdx,QWORD PTR [rbp-0x8]
  40d3cd:	mov    rax,QWORD PTR [rbp-0x28]
  40d3d1:	mov    rsi,rdx
  40d3d4:	mov    rdi,rax
  40d3d7:	call   40c812 <rb_strcasecmp@plt+0xa2a2>
  40d3dc:	mov    rax,QWORD PTR [rbp-0x18]
  40d3e0:	mov    rax,QWORD PTR [rax+0x10]
  40d3e4:	mov    QWORD PTR [rbp-0x18],rax
  40d3e8:	cmp    QWORD PTR [rbp-0x18],0x0
  40d3ed:	jne    40d3be <rb_strcasecmp@plt+0xae4e>
  40d3ef:	mov    rax,QWORD PTR [rbp-0x28]
  40d3f3:	mov    eax,DWORD PTR [rax]
  40d3f5:	lea    rsi,[rip+0x2d44]        # 410140 <rb_strcasecmp@plt+0xdbd0>
  40d3fc:	mov    edi,eax
  40d3fe:	mov    eax,0x0
  40d403:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40d408:	nop
  40d409:	leave  
  40d40a:	ret    
  40d40b:	push   rbp
  40d40c:	mov    rbp,rsp
  40d40f:	sub    rsp,0x20
  40d413:	mov    QWORD PTR [rbp-0x18],rdi
  40d417:	mov    DWORD PTR [rbp-0x1c],esi
  40d41a:	mov    rax,0x415ec0
  40d421:	mov    edx,DWORD PTR [rax+0x18]
  40d424:	mov    rax,QWORD PTR [rbp-0x18]
  40d428:	mov    esi,edx
  40d42a:	mov    rdi,rax
  40d42d:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40d432:	mov    QWORD PTR [rbp-0x8],rax
  40d436:	cmp    QWORD PTR [rbp-0x8],0x0
  40d43b:	je     40d485 <rb_strcasecmp@plt+0xaf15>
  40d43d:	mov    rax,QWORD PTR [rbp-0x8]
  40d441:	movzx  eax,BYTE PTR [rax+0x18]
  40d445:	test   al,al
  40d447:	jne    40d485 <rb_strcasecmp@plt+0xaf15>
  40d449:	mov    rax,QWORD PTR [rbp-0x18]
  40d44d:	lea    rsi,[rip+0x2d0d]        # 410161 <rb_strcasecmp@plt+0xdbf1>
  40d454:	mov    rdi,rax
  40d457:	call   40bc0a <rb_strcasecmp@plt+0x969a>
  40d45c:	test   al,al
  40d45e:	je     40d486 <rb_strcasecmp@plt+0xaf16>
  40d460:	mov    rax,QWORD PTR [rbp-0x18]
  40d464:	lea    rsi,[rip+0x2cfb]        # 410166 <rb_strcasecmp@plt+0xdbf6>
  40d46b:	mov    rdi,rax
  40d46e:	call   40bc0a <rb_strcasecmp@plt+0x969a>
  40d473:	test   al,al
  40d475:	je     40d486 <rb_strcasecmp@plt+0xaf16>
  40d477:	mov    rax,QWORD PTR [rbp-0x18]
  40d47b:	mov    rdi,rax
  40d47e:	call   40d360 <rb_strcasecmp@plt+0xadf0>
  40d483:	jmp    40d486 <rb_strcasecmp@plt+0xaf16>
  40d485:	nop
  40d486:	leave  
  40d487:	ret    
  40d488:	push   rbp
  40d489:	mov    rbp,rsp
  40d48c:	sub    rsp,0x10
  40d490:	mov    QWORD PTR [rbp-0x8],rdi
  40d494:	movzx  eax,BYTE PTR [rip+0xcc3d]        # 41a0d8 <rb_strcasecmp@plt+0x17b68>
  40d49b:	xor    eax,0x1
  40d49e:	test   al,al
  40d4a0:	jne    40d4ae <rb_strcasecmp@plt+0xaf3e>
  40d4a2:	mov    rax,QWORD PTR [rip+0xcc27]        # 41a0d0 <rb_strcasecmp@plt+0x17b60>
  40d4a9:	test   rax,rax
  40d4ac:	jne    40d4cd <rb_strcasecmp@plt+0xaf5d>
  40d4ae:	mov    rax,0x415ec0
  40d4b5:	mov    edx,DWORD PTR [rax+0x18]
  40d4b8:	mov    rax,QWORD PTR [rbp-0x8]
  40d4bc:	mov    esi,edx
  40d4be:	mov    rdi,rax
  40d4c1:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40d4c6:	mov    eax,0x1
  40d4cb:	jmp    40d53d <rb_strcasecmp@plt+0xafcd>
  40d4cd:	mov    rax,QWORD PTR [rbp-0x8]
  40d4d1:	mov    rdi,rax
  40d4d4:	call   40badf <rb_strcasecmp@plt+0x956f>
  40d4d9:	mov    edi,0x20
  40d4de:	call   40ba78 <rb_strcasecmp@plt+0x9508>
  40d4e3:	mov    rdx,rax
  40d4e6:	mov    rax,0x415ec0
  40d4ed:	mov    ecx,DWORD PTR [rax+0x18]
  40d4f0:	mov    rax,QWORD PTR [rbp-0x8]
  40d4f4:	mov    esi,ecx
  40d4f6:	mov    rdi,rax
  40d4f9:	call   40bc9a <rb_strcasecmp@plt+0x972a>
  40d4fe:	mov    rax,QWORD PTR [rbp-0x8]
  40d502:	lea    rsi,[rip+0x2c58]        # 410161 <rb_strcasecmp@plt+0xdbf1>
  40d509:	mov    rdi,rax
  40d50c:	call   40bc0a <rb_strcasecmp@plt+0x969a>
  40d511:	test   al,al
  40d513:	je     40d538 <rb_strcasecmp@plt+0xafc8>
  40d515:	mov    rax,QWORD PTR [rbp-0x8]
  40d519:	lea    rsi,[rip+0x2c46]        # 410166 <rb_strcasecmp@plt+0xdbf6>
  40d520:	mov    rdi,rax
  40d523:	call   40bc0a <rb_strcasecmp@plt+0x969a>
  40d528:	test   al,al
  40d52a:	je     40d538 <rb_strcasecmp@plt+0xafc8>
  40d52c:	mov    rax,QWORD PTR [rbp-0x8]
  40d530:	mov    rdi,rax
  40d533:	call   40d360 <rb_strcasecmp@plt+0xadf0>
  40d538:	mov    eax,0x1
  40d53d:	leave  
  40d53e:	ret    
  40d53f:	push   rbp
  40d540:	mov    rbp,rsp
  40d543:	sub    rsp,0x30
  40d547:	mov    QWORD PTR [rbp-0x28],rdi
  40d54b:	mov    rax,0x415ec0
  40d552:	mov    edx,DWORD PTR [rax+0x18]
  40d555:	mov    rax,QWORD PTR [rbp-0x28]
  40d559:	mov    esi,edx
  40d55b:	mov    rdi,rax
  40d55e:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40d563:	mov    QWORD PTR [rbp-0x10],rax
  40d567:	cmp    QWORD PTR [rbp-0x10],0x0
  40d56c:	je     40d66c <rb_strcasecmp@plt+0xb0fc>
  40d572:	mov    rax,QWORD PTR [rbp-0x28]
  40d576:	mov    eax,DWORD PTR [rax]
  40d578:	lea    rsi,[rip+0x2bf1]        # 410170 <rb_strcasecmp@plt+0xdc00>
  40d57f:	mov    edi,eax
  40d581:	mov    eax,0x0
  40d586:	call   4035ab <rb_strcasecmp@plt+0x103b>
  40d58b:	mov    rax,QWORD PTR [rbp-0x10]
  40d58f:	mov    rax,QWORD PTR [rax]
  40d592:	mov    QWORD PTR [rbp-0x20],rax
  40d596:	cmp    QWORD PTR [rbp-0x20],0x0
  40d59b:	je     40d5a7 <rb_strcasecmp@plt+0xb037>
  40d59d:	mov    rax,QWORD PTR [rbp-0x20]
  40d5a1:	mov    rax,QWORD PTR [rax+0x10]
  40d5a5:	jmp    40d5ac <rb_strcasecmp@plt+0xb03c>
  40d5a7:	mov    eax,0x0
  40d5ac:	mov    QWORD PTR [rbp-0x18],rax
  40d5b0:	jmp    40d5fb <rb_strcasecmp@plt+0xb08b>
  40d5b2:	mov    rax,QWORD PTR [rbp-0x20]
  40d5b6:	mov    rax,QWORD PTR [rax]
  40d5b9:	mov    QWORD PTR [rbp-0x8],rax
  40d5bd:	mov    rax,QWORD PTR [rbp-0x8]
  40d5c1:	mov    rax,QWORD PTR [rax+0x8]
  40d5c5:	mov    rdi,rax
  40d5c8:	call   402300 <rb_close@plt>
  40d5cd:	mov    rax,QWORD PTR [rbp-0x8]
  40d5d1:	mov    rdi,rax
  40d5d4:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40d5d9:	mov    rax,QWORD PTR [rbp-0x18]
  40d5dd:	mov    QWORD PTR [rbp-0x20],rax
  40d5e1:	cmp    QWORD PTR [rbp-0x20],0x0
  40d5e6:	je     40d5f2 <rb_strcasecmp@plt+0xb082>
  40d5e8:	mov    rax,QWORD PTR [rbp-0x20]
  40d5ec:	mov    rax,QWORD PTR [rax+0x10]
  40d5f0:	jmp    40d5f7 <rb_strcasecmp@plt+0xb087>
  40d5f2:	mov    eax,0x0
  40d5f7:	mov    QWORD PTR [rbp-0x18],rax
  40d5fb:	cmp    QWORD PTR [rbp-0x20],0x0
  40d600:	jne    40d5b2 <rb_strcasecmp@plt+0xb042>
  40d602:	mov    rax,QWORD PTR [rbp-0x10]
  40d606:	mov    rdi,rax
  40d609:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40d60e:	mov    rax,0x415ec0
  40d615:	mov    ecx,DWORD PTR [rax+0x18]
  40d618:	mov    rax,QWORD PTR [rbp-0x28]
  40d61c:	mov    edx,0x0
  40d621:	mov    esi,ecx
  40d623:	mov    rdi,rax
  40d626:	call   40bc9a <rb_strcasecmp@plt+0x972a>
  40d62b:	mov    rax,0x415ec0
  40d632:	mov    ecx,DWORD PTR [rax+0x18]
  40d635:	mov    rax,QWORD PTR [rbp-0x28]
  40d639:	mov    edx,0x0
  40d63e:	mov    esi,ecx
  40d640:	mov    rdi,rax
  40d643:	call   40bd0e <rb_strcasecmp@plt+0x979e>
  40d648:	mov    rax,0x415ec0
  40d64f:	mov    edx,DWORD PTR [rax+0x18]
  40d652:	mov    rax,QWORD PTR [rbp-0x28]
  40d656:	mov    esi,edx
  40d658:	mov    rdi,rax
  40d65b:	call   40430d <rb_strcasecmp@plt+0x1d9d>
  40d660:	mov    rax,QWORD PTR [rbp-0x28]
  40d664:	mov    rdi,rax
  40d667:	call   40bb01 <rb_strcasecmp@plt+0x9591>
  40d66c:	nop
  40d66d:	leave  
  40d66e:	ret    
  40d66f:	push   rbp
  40d670:	mov    rbp,rsp
  40d673:	sub    rsp,0x30
  40d677:	mov    rax,QWORD PTR fs:0x28
  40d680:	mov    QWORD PTR [rbp-0x8],rax
  40d684:	xor    eax,eax
  40d686:	mov    rax,0x41a270
  40d68d:	mov    rax,QWORD PTR [rax]
  40d690:	lea    rdx,[rbp-0x20]
  40d694:	mov    rsi,rdx
  40d697:	mov    rdi,rax
  40d69a:	call   402250 <rb_dictionary_foreach_start@plt>
  40d69f:	jmp    40d6c6 <rb_strcasecmp@plt+0xb156>
  40d6a1:	mov    rax,QWORD PTR [rbp-0x28]
  40d6a5:	mov    rdi,rax
  40d6a8:	call   40d53f <rb_strcasecmp@plt+0xafcf>
  40d6ad:	mov    rax,0x41a270
  40d6b4:	mov    rax,QWORD PTR [rax]
  40d6b7:	lea    rdx,[rbp-0x20]
  40d6bb:	mov    rsi,rdx
  40d6be:	mov    rdi,rax
  40d6c1:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40d6c6:	mov    rax,0x41a270
  40d6cd:	mov    rax,QWORD PTR [rax]
  40d6d0:	lea    rdx,[rbp-0x20]
  40d6d4:	mov    rsi,rdx
  40d6d7:	mov    rdi,rax
  40d6da:	call   402140 <rb_dictionary_foreach_cur@plt>
  40d6df:	mov    QWORD PTR [rbp-0x28],rax
  40d6e3:	cmp    QWORD PTR [rbp-0x28],0x0
  40d6e8:	jne    40d6a1 <rb_strcasecmp@plt+0xb131>
  40d6ea:	nop
  40d6eb:	mov    rax,QWORD PTR [rbp-0x8]
  40d6ef:	xor    rax,QWORD PTR fs:0x28
  40d6f8:	je     40d6ff <rb_strcasecmp@plt+0xb18f>
  40d6fa:	call   402400 <__stack_chk_fail@plt>
  40d6ff:	leave  
  40d700:	ret    
  40d701:	push   rbp
  40d702:	mov    rbp,rsp
  40d705:	sub    rsp,0x30
  40d709:	mov    QWORD PTR [rbp-0x18],rdi
  40d70d:	mov    DWORD PTR [rbp-0x1c],esi
  40d710:	mov    QWORD PTR [rbp-0x28],rdx
  40d714:	mov    rax,QWORD PTR [rbp-0x28]
  40d718:	mov    rax,QWORD PTR [rax]
  40d71b:	mov    rdi,rax
  40d71e:	call   402330 <atoi@plt>
  40d723:	mov    DWORD PTR [rbp-0x4],eax
  40d726:	cmp    DWORD PTR [rbp-0x4],0x0
  40d72a:	jns    40d749 <rb_strcasecmp@plt+0xb1d9>
  40d72c:	mov    eax,DWORD PTR [rbp-0x4]
  40d72f:	mov    edx,eax
  40d731:	lea    rsi,[rip+0x2a58]        # 410190 <rb_strcasecmp@plt+0xdc20>
  40d738:	mov    edi,0x43
  40d73d:	mov    eax,0x0
  40d742:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40d747:	jmp    40d752 <rb_strcasecmp@plt+0xb1e2>
  40d749:	mov    eax,DWORD PTR [rbp-0x4]
  40d74c:	mov    DWORD PTR [rip+0x86a6],eax        # 415df8 <rb_strcasecmp@plt+0x13888>
  40d752:	leave  
  40d753:	ret    
  40d754:	push   rbp
  40d755:	mov    rbp,rsp
  40d758:	sub    rsp,0x50
  40d75c:	mov    QWORD PTR [rbp-0x38],rdi
  40d760:	mov    DWORD PTR [rbp-0x3c],esi
  40d763:	mov    QWORD PTR [rbp-0x48],rdx
  40d767:	mov    rax,QWORD PTR fs:0x28
  40d770:	mov    QWORD PTR [rbp-0x8],rax
  40d774:	xor    eax,eax
  40d776:	mov    rax,QWORD PTR [rbp-0x48]
  40d77a:	mov    rax,QWORD PTR [rax]
  40d77d:	movzx  eax,BYTE PTR [rax]
  40d780:	cmp    al,0x31
  40d782:	sete   al
  40d785:	mov    BYTE PTR [rbp-0x29],al
  40d788:	movzx  eax,BYTE PTR [rbp-0x29]
  40d78c:	xor    eax,0x1
  40d78f:	test   al,al
  40d791:	je     40d868 <rb_strcasecmp@plt+0xb2f8>
  40d797:	mov    rax,QWORD PTR [rip+0xc9fa]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40d79e:	test   rax,rax
  40d7a1:	jne    40d7b3 <rb_strcasecmp@plt+0xb243>
  40d7a3:	mov    rax,QWORD PTR [rip+0xcaae]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40d7aa:	test   rax,rax
  40d7ad:	je     40d8de <rb_strcasecmp@plt+0xb36e>
  40d7b3:	mov    rax,QWORD PTR [rip+0xc9de]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40d7ba:	test   rax,rax
  40d7bd:	je     40d7ce <rb_strcasecmp@plt+0xb25e>
  40d7bf:	mov    rax,QWORD PTR [rip+0xc9d2]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40d7c6:	mov    rdi,rax
  40d7c9:	call   402300 <rb_close@plt>
  40d7ce:	mov    rax,QWORD PTR [rip+0xca83]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40d7d5:	test   rax,rax
  40d7d8:	je     40d7e9 <rb_strcasecmp@plt+0xb279>
  40d7da:	mov    rax,QWORD PTR [rip+0xca77]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40d7e1:	mov    rdi,rax
  40d7e4:	call   402300 <rb_close@plt>
  40d7e9:	mov    QWORD PTR [rip+0xca64],0x0        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40d7f4:	mov    rax,QWORD PTR [rip+0xca5d]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40d7fb:	mov    QWORD PTR [rip+0xc996],rax        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40d802:	mov    rax,0x41a270
  40d809:	mov    rax,QWORD PTR [rax]
  40d80c:	lea    rdx,[rbp-0x20]
  40d810:	mov    rsi,rdx
  40d813:	mov    rdi,rax
  40d816:	call   402250 <rb_dictionary_foreach_start@plt>
  40d81b:	jmp    40d842 <rb_strcasecmp@plt+0xb2d2>
  40d81d:	mov    rax,QWORD PTR [rbp-0x28]
  40d821:	mov    rdi,rax
  40d824:	call   40d53f <rb_strcasecmp@plt+0xafcf>
  40d829:	mov    rax,0x41a270
  40d830:	mov    rax,QWORD PTR [rax]
  40d833:	lea    rdx,[rbp-0x20]
  40d837:	mov    rsi,rdx
  40d83a:	mov    rdi,rax
  40d83d:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40d842:	mov    rax,0x41a270
  40d849:	mov    rax,QWORD PTR [rax]
  40d84c:	lea    rdx,[rbp-0x20]
  40d850:	mov    rsi,rdx
  40d853:	mov    rdi,rax
  40d856:	call   402140 <rb_dictionary_foreach_cur@plt>
  40d85b:	mov    QWORD PTR [rbp-0x28],rax
  40d85f:	cmp    QWORD PTR [rbp-0x28],0x0
  40d864:	jne    40d81d <rb_strcasecmp@plt+0xb2ad>
  40d866:	jmp    40d8de <rb_strcasecmp@plt+0xb36e>
  40d868:	movzx  eax,BYTE PTR [rip+0xc871]        # 41a0e0 <rb_strcasecmp@plt+0x17b70>
  40d86f:	test   al,al
  40d871:	je     40d8a3 <rb_strcasecmp@plt+0xb333>
  40d873:	movzx  eax,WORD PTR [rip+0xc89c]        # 41a116 <rb_strcasecmp@plt+0x17ba6>
  40d87a:	test   ax,ax
  40d87d:	je     40d8a3 <rb_strcasecmp@plt+0xb333>
  40d87f:	mov    rax,QWORD PTR [rip+0xc912]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40d886:	test   rax,rax
  40d889:	jne    40d8a3 <rb_strcasecmp@plt+0xb333>
  40d88b:	movzx  eax,WORD PTR [rip+0xc884]        # 41a116 <rb_strcasecmp@plt+0x17ba6>
  40d892:	movzx  eax,ax
  40d895:	mov    esi,eax
  40d897:	lea    rdi,[rip+0xc842]        # 41a0e0 <rb_strcasecmp@plt+0x17b70>
  40d89e:	call   40cccc <rb_strcasecmp@plt+0xa75c>
  40d8a3:	movzx  eax,BYTE PTR [rip+0xc8f6]        # 41a1a0 <rb_strcasecmp@plt+0x17c30>
  40d8aa:	test   al,al
  40d8ac:	je     40d8de <rb_strcasecmp@plt+0xb36e>
  40d8ae:	movzx  eax,WORD PTR [rip+0xc921]        # 41a1d6 <rb_strcasecmp@plt+0x17c66>
  40d8b5:	test   ax,ax
  40d8b8:	je     40d8de <rb_strcasecmp@plt+0xb36e>
  40d8ba:	mov    rax,QWORD PTR [rip+0xc997]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40d8c1:	test   rax,rax
  40d8c4:	jne    40d8de <rb_strcasecmp@plt+0xb36e>
  40d8c6:	movzx  eax,WORD PTR [rip+0xc909]        # 41a1d6 <rb_strcasecmp@plt+0x17c66>
  40d8cd:	movzx  eax,ax
  40d8d0:	mov    esi,eax
  40d8d2:	lea    rdi,[rip+0xc8c7]        # 41a1a0 <rb_strcasecmp@plt+0x17c30>
  40d8d9:	call   40cccc <rb_strcasecmp@plt+0xa75c>
  40d8de:	movzx  eax,BYTE PTR [rbp-0x29]
  40d8e2:	mov    BYTE PTR [rip+0xc7f0],al        # 41a0d8 <rb_strcasecmp@plt+0x17b68>
  40d8e8:	nop
  40d8e9:	mov    rax,QWORD PTR [rbp-0x8]
  40d8ed:	xor    rax,QWORD PTR fs:0x28
  40d8f6:	je     40d8fd <rb_strcasecmp@plt+0xb38d>
  40d8f8:	call   402400 <__stack_chk_fail@plt>
  40d8fd:	leave  
  40d8fe:	ret    
  40d8ff:	push   rbp
  40d900:	mov    rbp,rsp
  40d903:	sub    rsp,0x30
  40d907:	mov    QWORD PTR [rbp-0x18],rdi
  40d90b:	mov    DWORD PTR [rbp-0x1c],esi
  40d90e:	mov    QWORD PTR [rbp-0x28],rdx
  40d912:	mov    rax,QWORD PTR [rbp-0x28]
  40d916:	mov    rax,QWORD PTR [rax]
  40d919:	mov    QWORD PTR [rbp-0x8],rax
  40d91d:	mov    rax,QWORD PTR [rbp-0x28]
  40d921:	add    rax,0x8
  40d925:	mov    rax,QWORD PTR [rax]
  40d928:	mov    rdi,rax
  40d92b:	call   402330 <atoi@plt>
  40d930:	mov    DWORD PTR [rbp-0xc],eax
  40d933:	cmp    DWORD PTR [rbp-0xc],0xffff
  40d93a:	jg     40d942 <rb_strcasecmp@plt+0xb3d2>
  40d93c:	cmp    DWORD PTR [rbp-0xc],0x0
  40d940:	jg     40d97a <rb_strcasecmp@plt+0xb40a>
  40d942:	mov    rax,QWORD PTR [rbp-0x28]
  40d946:	add    rax,0x8
  40d94a:	mov    rdx,QWORD PTR [rax]
  40d94d:	mov    rax,QWORD PTR [rbp-0x28]
  40d951:	mov    rax,QWORD PTR [rax]
  40d954:	mov    rcx,rdx
  40d957:	mov    rdx,rax
  40d95a:	lea    rsi,[rip+0x2857]        # 4101b8 <rb_strcasecmp@plt+0xdc48>
  40d961:	mov    edi,0x43
  40d966:	mov    eax,0x0
  40d96b:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40d970:	mov    edi,0x3
  40d975:	call   4020e0 <exit@plt>
  40d97a:	mov    eax,DWORD PTR [rbp-0xc]
  40d97d:	movzx  edx,ax
  40d980:	mov    rax,QWORD PTR [rbp-0x8]
  40d984:	mov    esi,edx
  40d986:	mov    rdi,rax
  40d989:	call   40cccc <rb_strcasecmp@plt+0xa75c>
  40d98e:	nop
  40d98f:	leave  
  40d990:	ret    
  40d991:	push   rbp
  40d992:	mov    rbp,rsp
  40d995:	sub    rsp,0x30
  40d999:	mov    QWORD PTR [rbp-0x18],rdi
  40d99d:	mov    DWORD PTR [rbp-0x1c],esi
  40d9a0:	mov    QWORD PTR [rbp-0x28],rdx
  40d9a4:	mov    rax,QWORD PTR [rbp-0x28]
  40d9a8:	add    rax,0x8
  40d9ac:	mov    rax,QWORD PTR [rax]
  40d9af:	mov    rdi,rax
  40d9b2:	call   402330 <atoi@plt>
  40d9b7:	mov    DWORD PTR [rbp-0xc],eax
  40d9ba:	mov    edi,0x38
  40d9bf:	call   40ba78 <rb_strcasecmp@plt+0x9508>
  40d9c4:	mov    QWORD PTR [rbp-0x8],rax
  40d9c8:	cmp    DWORD PTR [rbp-0xc],0x0
  40d9cc:	jle    40d9d7 <rb_strcasecmp@plt+0xb467>
  40d9ce:	cmp    DWORD PTR [rbp-0xc],0xffff
  40d9d5:	jle    40da0f <rb_strcasecmp@plt+0xb49f>
  40d9d7:	mov    rax,QWORD PTR [rbp-0x28]
  40d9db:	add    rax,0x8
  40d9df:	mov    rdx,QWORD PTR [rax]
  40d9e2:	mov    rax,QWORD PTR [rbp-0x28]
  40d9e6:	mov    rax,QWORD PTR [rax]
  40d9e9:	mov    rcx,rdx
  40d9ec:	mov    rdx,rax
  40d9ef:	lea    rsi,[rip+0x27e2]        # 4101d8 <rb_strcasecmp@plt+0xdc68>
  40d9f6:	mov    edi,0x43
  40d9fb:	mov    eax,0x0
  40da00:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40da05:	mov    edi,0x3
  40da0a:	call   4020e0 <exit@plt>
  40da0f:	mov    eax,DWORD PTR [rbp-0xc]
  40da12:	mov    edx,eax
  40da14:	mov    rax,QWORD PTR [rbp-0x8]
  40da18:	mov    WORD PTR [rax+0x14],dx
  40da1c:	mov    rax,QWORD PTR [rbp-0x28]
  40da20:	mov    rax,QWORD PTR [rax]
  40da23:	mov    rdi,rax
  40da26:	call   40bd3d <rb_strcasecmp@plt+0x97cd>
  40da2b:	mov    edx,eax
  40da2d:	mov    rax,QWORD PTR [rbp-0x8]
  40da31:	mov    DWORD PTR [rax+0x10],edx
  40da34:	mov    rax,QWORD PTR [rbp-0x8]
  40da38:	mov    eax,DWORD PTR [rax+0x10]
  40da3b:	cmp    eax,0x2
  40da3e:	je     40daac <rb_strcasecmp@plt+0xb53c>
  40da40:	cmp    eax,0x2
  40da43:	ja     40da4f <rb_strcasecmp@plt+0xb4df>
  40da45:	cmp    eax,0x1
  40da48:	je     40da66 <rb_strcasecmp@plt+0xb4f6>
  40da4a:	jmp    40db78 <rb_strcasecmp@plt+0xb608>
  40da4f:	cmp    eax,0x3
  40da52:	je     40daf2 <rb_strcasecmp@plt+0xb582>
  40da58:	cmp    eax,0x4
  40da5b:	je     40db35 <rb_strcasecmp@plt+0xb5c5>
  40da61:	jmp    40db78 <rb_strcasecmp@plt+0xb608>
  40da66:	mov    rax,QWORD PTR [rbp-0x8]
  40da6a:	movzx  eax,WORD PTR [rax+0x14]
  40da6e:	movzx  edx,ax
  40da71:	mov    rax,QWORD PTR [rbp-0x8]
  40da75:	mov    ecx,edx
  40da77:	lea    rdx,[rip+0x277f]        # 4101fd <rb_strcasecmp@plt+0xdc8d>
  40da7e:	mov    esi,0x10
  40da83:	mov    rdi,rax
  40da86:	mov    eax,0x0
  40da8b:	call   402080 <snprintf@plt>
  40da90:	mov    rax,QWORD PTR [rbp-0x8]
  40da94:	mov    BYTE PTR [rax+0x16],0x0
  40da98:	mov    rax,QWORD PTR [rbp-0x8]
  40da9c:	lea    rdx,[rip+0xffffffffffffe9de]        # 40c481 <rb_strcasecmp@plt+0x9f11>
  40daa3:	mov    QWORD PTR [rax+0x18],rdx
  40daa7:	jmp    40dbaf <rb_strcasecmp@plt+0xb63f>
  40daac:	mov    rax,QWORD PTR [rbp-0x8]
  40dab0:	movzx  eax,WORD PTR [rax+0x14]
  40dab4:	movzx  edx,ax
  40dab7:	mov    rax,QWORD PTR [rbp-0x8]
  40dabb:	mov    ecx,edx
  40dabd:	lea    rdx,[rip+0x2744]        # 410208 <rb_strcasecmp@plt+0xdc98>
  40dac4:	mov    esi,0x10
  40dac9:	mov    rdi,rax
  40dacc:	mov    eax,0x0
  40dad1:	call   402080 <snprintf@plt>
  40dad6:	mov    rax,QWORD PTR [rbp-0x8]
  40dada:	mov    BYTE PTR [rax+0x16],0x0
  40dade:	mov    rax,QWORD PTR [rbp-0x8]
  40dae2:	lea    rdx,[rip+0xffffffffffffea8b]        # 40c574 <rb_strcasecmp@plt+0xa004>
  40dae9:	mov    QWORD PTR [rax+0x18],rdx
  40daed:	jmp    40dbaf <rb_strcasecmp@plt+0xb63f>
  40daf2:	mov    rax,QWORD PTR [rbp-0x8]
  40daf6:	movzx  eax,WORD PTR [rax+0x14]
  40dafa:	movzx  edx,ax
  40dafd:	mov    rax,QWORD PTR [rbp-0x8]
  40db01:	mov    ecx,edx
  40db03:	lea    rdx,[rip+0x2709]        # 410213 <rb_strcasecmp@plt+0xdca3>
  40db0a:	mov    esi,0x10
  40db0f:	mov    rdi,rax
  40db12:	mov    eax,0x0
  40db17:	call   402080 <snprintf@plt>
  40db1c:	mov    rax,QWORD PTR [rbp-0x8]
  40db20:	mov    BYTE PTR [rax+0x16],0x0
  40db24:	mov    rax,QWORD PTR [rbp-0x8]
  40db28:	lea    rdx,[rip+0xffffffffffffebcd]        # 40c6fc <rb_strcasecmp@plt+0xa18c>
  40db2f:	mov    QWORD PTR [rax+0x18],rdx
  40db33:	jmp    40dbaf <rb_strcasecmp@plt+0xb63f>
  40db35:	mov    rax,QWORD PTR [rbp-0x8]
  40db39:	movzx  eax,WORD PTR [rax+0x14]
  40db3d:	movzx  edx,ax
  40db40:	mov    rax,QWORD PTR [rbp-0x8]
  40db44:	mov    ecx,edx
  40db46:	lea    rdx,[rip+0x26d6]        # 410223 <rb_strcasecmp@plt+0xdcb3>
  40db4d:	mov    esi,0x10
  40db52:	mov    rdi,rax
  40db55:	mov    eax,0x0
  40db5a:	call   402080 <snprintf@plt>
  40db5f:	mov    rax,QWORD PTR [rbp-0x8]
  40db63:	lea    rdx,[rip+0xffffffffffffeb92]        # 40c6fc <rb_strcasecmp@plt+0xa18c>
  40db6a:	mov    QWORD PTR [rax+0x18],rdx
  40db6e:	mov    rax,QWORD PTR [rbp-0x8]
  40db72:	mov    BYTE PTR [rax+0x16],0x1
  40db76:	jmp    40dbaf <rb_strcasecmp@plt+0xb63f>
  40db78:	mov    rax,QWORD PTR [rbp-0x8]
  40db7c:	movzx  eax,WORD PTR [rax+0x14]
  40db80:	movzx  edx,ax
  40db83:	mov    rax,QWORD PTR [rbp-0x28]
  40db87:	mov    rax,QWORD PTR [rax]
  40db8a:	mov    ecx,edx
  40db8c:	mov    rdx,rax
  40db8f:	lea    rsi,[rip+0x26a2]        # 410238 <rb_strcasecmp@plt+0xdcc8>
  40db96:	mov    edi,0x43
  40db9b:	mov    eax,0x0
  40dba0:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40dba5:	mov    edi,0x3
  40dbaa:	call   4020e0 <exit@plt>
  40dbaf:	mov    rax,QWORD PTR [rbp-0x8]
  40dbb3:	movzx  eax,WORD PTR [rax+0x14]
  40dbb7:	movzx  edx,ax
  40dbba:	mov    rax,QWORD PTR [rbp-0x8]
  40dbbe:	mov    eax,DWORD PTR [rax+0x10]
  40dbc1:	mov    esi,edx
  40dbc3:	mov    edi,eax
  40dbc5:	call   40bdc8 <rb_strcasecmp@plt+0x9858>
  40dbca:	test   rax,rax
  40dbcd:	je     40dc0a <rb_strcasecmp@plt+0xb69a>
  40dbcf:	mov    rax,QWORD PTR [rbp-0x8]
  40dbd3:	movzx  eax,WORD PTR [rax+0x14]
  40dbd7:	movzx  edx,ax
  40dbda:	mov    rax,QWORD PTR [rbp-0x28]
  40dbde:	mov    rax,QWORD PTR [rax]
  40dbe1:	mov    ecx,edx
  40dbe3:	mov    rdx,rax
  40dbe6:	lea    rsi,[rip+0x267b]        # 410268 <rb_strcasecmp@plt+0xdcf8>
  40dbed:	mov    edi,0x43
  40dbf2:	mov    eax,0x0
  40dbf7:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40dbfc:	mov    rax,QWORD PTR [rbp-0x8]
  40dc00:	mov    rdi,rax
  40dc03:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40dc08:	jmp    40dc28 <rb_strcasecmp@plt+0xb6b8>
  40dc0a:	mov    rax,QWORD PTR [rbp-0x8]
  40dc0e:	lea    rcx,[rax+0x20]
  40dc12:	mov    rax,QWORD PTR [rbp-0x8]
  40dc16:	lea    rdx,[rip+0xc4a3]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40dc1d:	mov    rsi,rcx
  40dc20:	mov    rdi,rax
  40dc23:	call   40b880 <rb_strcasecmp@plt+0x9310>
  40dc28:	leave  
  40dc29:	ret    
  40dc2a:	push   rbp
  40dc2b:	mov    rbp,rsp
  40dc2e:	sub    rsp,0x70
  40dc32:	mov    QWORD PTR [rbp-0x58],rdi
  40dc36:	mov    DWORD PTR [rbp-0x5c],esi
  40dc39:	mov    QWORD PTR [rbp-0x68],rdx
  40dc3d:	mov    rax,QWORD PTR fs:0x28
  40dc46:	mov    QWORD PTR [rbp-0x8],rax
  40dc4a:	xor    eax,eax
  40dc4c:	mov    rax,QWORD PTR [rbp-0x68]
  40dc50:	mov    rax,QWORD PTR [rax]
  40dc53:	mov    rdi,rax
  40dc56:	call   40bd3d <rb_strcasecmp@plt+0x97cd>
  40dc5b:	mov    DWORD PTR [rbp-0x50],eax
  40dc5e:	mov    rax,QWORD PTR [rbp-0x68]
  40dc62:	add    rax,0x8
  40dc66:	mov    rax,QWORD PTR [rax]
  40dc69:	mov    rdi,rax
  40dc6c:	call   402330 <atoi@plt>
  40dc71:	mov    DWORD PTR [rbp-0x4c],eax
  40dc74:	cmp    DWORD PTR [rbp-0x4c],0x0
  40dc78:	jle    40dc83 <rb_strcasecmp@plt+0xb713>
  40dc7a:	cmp    DWORD PTR [rbp-0x4c],0xffff
  40dc81:	jle    40dcbb <rb_strcasecmp@plt+0xb74b>
  40dc83:	mov    rax,QWORD PTR [rbp-0x68]
  40dc87:	add    rax,0x8
  40dc8b:	mov    rdx,QWORD PTR [rax]
  40dc8e:	mov    rax,QWORD PTR [rbp-0x68]
  40dc92:	mov    rax,QWORD PTR [rax]
  40dc95:	mov    rcx,rdx
  40dc98:	mov    rdx,rax
  40dc9b:	lea    rsi,[rip+0x25f6]        # 410298 <rb_strcasecmp@plt+0xdd28>
  40dca2:	mov    edi,0x43
  40dca7:	mov    eax,0x0
  40dcac:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40dcb1:	mov    edi,0x3
  40dcb6:	call   4020e0 <exit@plt>
  40dcbb:	cmp    DWORD PTR [rbp-0x50],0x0
  40dcbf:	jne    40dcf0 <rb_strcasecmp@plt+0xb780>
  40dcc1:	mov    rax,QWORD PTR [rbp-0x68]
  40dcc5:	mov    rax,QWORD PTR [rax]
  40dcc8:	mov    edx,DWORD PTR [rbp-0x4c]
  40dccb:	mov    ecx,edx
  40dccd:	mov    rdx,rax
  40dcd0:	lea    rsi,[rip+0x25f1]        # 4102c8 <rb_strcasecmp@plt+0xdd58>
  40dcd7:	mov    edi,0x43
  40dcdc:	mov    eax,0x0
  40dce1:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40dce6:	mov    edi,0x3
  40dceb:	call   4020e0 <exit@plt>
  40dcf0:	mov    eax,DWORD PTR [rbp-0x4c]
  40dcf3:	movzx  edx,ax
  40dcf6:	mov    eax,DWORD PTR [rbp-0x50]
  40dcf9:	mov    esi,edx
  40dcfb:	mov    edi,eax
  40dcfd:	call   40bdc8 <rb_strcasecmp@plt+0x9858>
  40dd02:	mov    QWORD PTR [rbp-0x40],rax
  40dd06:	cmp    QWORD PTR [rbp-0x40],0x0
  40dd0b:	jne    40dd3c <rb_strcasecmp@plt+0xb7cc>
  40dd0d:	mov    rax,QWORD PTR [rbp-0x68]
  40dd11:	mov    rax,QWORD PTR [rax]
  40dd14:	mov    edx,DWORD PTR [rbp-0x4c]
  40dd17:	mov    ecx,edx
  40dd19:	mov    rdx,rax
  40dd1c:	lea    rsi,[rip+0x25dd]        # 410300 <rb_strcasecmp@plt+0xdd90>
  40dd23:	mov    edi,0x43
  40dd28:	mov    eax,0x0
  40dd2d:	call   4036b1 <rb_strcasecmp@plt+0x1141>
  40dd32:	mov    edi,0x3
  40dd37:	call   4020e0 <exit@plt>
  40dd3c:	mov    rax,0x41a270
  40dd43:	mov    rax,QWORD PTR [rax]
  40dd46:	lea    rdx,[rbp-0x20]
  40dd4a:	mov    rsi,rdx
  40dd4d:	mov    rdi,rax
  40dd50:	call   402250 <rb_dictionary_foreach_start@plt>
  40dd55:	jmp    40de57 <rb_strcasecmp@plt+0xb8e7>
  40dd5a:	mov    rax,0x415ec0
  40dd61:	mov    edx,DWORD PTR [rax+0x18]
  40dd64:	mov    rax,QWORD PTR [rbp-0x38]
  40dd68:	mov    esi,edx
  40dd6a:	mov    rdi,rax
  40dd6d:	call   40bc74 <rb_strcasecmp@plt+0x9704>
  40dd72:	mov    QWORD PTR [rbp-0x30],rax
  40dd76:	cmp    QWORD PTR [rbp-0x30],0x0
  40dd7b:	je     40de3d <rb_strcasecmp@plt+0xb8cd>
  40dd81:	mov    rax,QWORD PTR [rbp-0x38]
  40dd85:	mov    rdi,rax
  40dd88:	call   40badf <rb_strcasecmp@plt+0x956f>
  40dd8d:	mov    rax,QWORD PTR [rbp-0x30]
  40dd91:	mov    rax,QWORD PTR [rax]
  40dd94:	mov    QWORD PTR [rbp-0x48],rax
  40dd98:	jmp    40de21 <rb_strcasecmp@plt+0xb8b1>
  40dd9d:	mov    rax,QWORD PTR [rbp-0x48]
  40dda1:	mov    rax,QWORD PTR [rax]
  40dda4:	mov    QWORD PTR [rbp-0x28],rax
  40dda8:	mov    rax,QWORD PTR [rbp-0x28]
  40ddac:	mov    rax,QWORD PTR [rax+0x10]
  40ddb0:	movzx  edx,WORD PTR [rax+0x14]
  40ddb4:	mov    rax,QWORD PTR [rbp-0x40]
  40ddb8:	movzx  eax,WORD PTR [rax+0x14]
  40ddbc:	cmp    dx,ax
  40ddbf:	jne    40de15 <rb_strcasecmp@plt+0xb8a5>
  40ddc1:	mov    rax,QWORD PTR [rbp-0x28]
  40ddc5:	mov    rax,QWORD PTR [rax+0x10]
  40ddc9:	mov    edx,DWORD PTR [rax+0x10]
  40ddcc:	mov    rax,QWORD PTR [rbp-0x40]
  40ddd0:	mov    eax,DWORD PTR [rax+0x10]
  40ddd3:	cmp    edx,eax
  40ddd5:	jne    40de15 <rb_strcasecmp@plt+0xb8a5>
  40ddd7:	mov    rax,QWORD PTR [rbp-0x30]
  40dddb:	mov    rdx,QWORD PTR [rbp-0x28]
  40dddf:	add    rdx,0x20
  40dde3:	mov    rsi,rax
  40dde6:	mov    rdi,rdx
  40dde9:	call   40b984 <rb_strcasecmp@plt+0x9414>
  40ddee:	mov    rax,QWORD PTR [rbp-0x28]
  40ddf2:	mov    rdi,rax
  40ddf5:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40ddfa:	mov    rax,QWORD PTR [rbp-0x30]
  40ddfe:	mov    rax,QWORD PTR [rax+0x10]
  40de02:	test   rax,rax
  40de05:	jne    40de2e <rb_strcasecmp@plt+0xb8be>
  40de07:	mov    rax,QWORD PTR [rbp-0x38]
  40de0b:	mov    rdi,rax
  40de0e:	call   40d53f <rb_strcasecmp@plt+0xafcf>
  40de13:	jmp    40de2e <rb_strcasecmp@plt+0xb8be>
  40de15:	mov    rax,QWORD PTR [rbp-0x48]
  40de19:	mov    rax,QWORD PTR [rax+0x10]
  40de1d:	mov    QWORD PTR [rbp-0x48],rax
  40de21:	cmp    QWORD PTR [rbp-0x48],0x0
  40de26:	jne    40dd9d <rb_strcasecmp@plt+0xb82d>
  40de2c:	jmp    40de2f <rb_strcasecmp@plt+0xb8bf>
  40de2e:	nop
  40de2f:	mov    rax,QWORD PTR [rbp-0x38]
  40de33:	mov    rdi,rax
  40de36:	call   40bb01 <rb_strcasecmp@plt+0x9591>
  40de3b:	jmp    40de3e <rb_strcasecmp@plt+0xb8ce>
  40de3d:	nop
  40de3e:	mov    rax,0x41a270
  40de45:	mov    rax,QWORD PTR [rax]
  40de48:	lea    rdx,[rbp-0x20]
  40de4c:	mov    rsi,rdx
  40de4f:	mov    rdi,rax
  40de52:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40de57:	mov    rax,0x41a270
  40de5e:	mov    rax,QWORD PTR [rax]
  40de61:	lea    rdx,[rbp-0x20]
  40de65:	mov    rsi,rdx
  40de68:	mov    rdi,rax
  40de6b:	call   402140 <rb_dictionary_foreach_cur@plt>
  40de70:	mov    QWORD PTR [rbp-0x38],rax
  40de74:	cmp    QWORD PTR [rbp-0x38],0x0
  40de79:	jne    40dd5a <rb_strcasecmp@plt+0xb7ea>
  40de7f:	mov    rax,QWORD PTR [rbp-0x40]
  40de83:	add    rax,0x20
  40de87:	lea    rsi,[rip+0xc232]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40de8e:	mov    rdi,rax
  40de91:	call   40b984 <rb_strcasecmp@plt+0x9414>
  40de96:	mov    rax,QWORD PTR [rbp-0x40]
  40de9a:	mov    rdi,rax
  40de9d:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40dea2:	mov    rax,QWORD PTR [rip+0xc227]        # 41a0d0 <rb_strcasecmp@plt+0x17b60>
  40dea9:	test   rax,rax
  40deac:	jne    40deb5 <rb_strcasecmp@plt+0xb945>
  40deae:	mov    BYTE PTR [rip+0xc223],0x0        # 41a0d8 <rb_strcasecmp@plt+0x17b68>
  40deb5:	nop
  40deb6:	mov    rax,QWORD PTR [rbp-0x8]
  40deba:	xor    rax,QWORD PTR fs:0x28
  40dec3:	je     40deca <rb_strcasecmp@plt+0xb95a>
  40dec5:	call   402400 <__stack_chk_fail@plt>
  40deca:	leave  
  40decb:	ret    
  40decc:	push   rbp
  40decd:	mov    rbp,rsp
  40ded0:	sub    rsp,0x60
  40ded4:	mov    QWORD PTR [rbp-0x48],rdi
  40ded8:	mov    DWORD PTR [rbp-0x4c],esi
  40dedb:	mov    QWORD PTR [rbp-0x58],rdx
  40dedf:	mov    rax,QWORD PTR fs:0x28
  40dee8:	mov    QWORD PTR [rbp-0x8],rax
  40deec:	xor    eax,eax
  40deee:	mov    rax,QWORD PTR [rip+0xc1cb]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40def5:	mov    QWORD PTR [rbp-0x38],rax
  40def9:	cmp    QWORD PTR [rbp-0x38],0x0
  40defe:	je     40df0a <rb_strcasecmp@plt+0xb99a>
  40df00:	mov    rax,QWORD PTR [rbp-0x38]
  40df04:	mov    rax,QWORD PTR [rax+0x10]
  40df08:	jmp    40df0f <rb_strcasecmp@plt+0xb99f>
  40df0a:	mov    eax,0x0
  40df0f:	mov    QWORD PTR [rbp-0x30],rax
  40df13:	jmp    40df59 <rb_strcasecmp@plt+0xb9e9>
  40df15:	mov    rax,QWORD PTR [rbp-0x38]
  40df19:	mov    rax,QWORD PTR [rax]
  40df1c:	mov    rdi,rax
  40df1f:	call   40bab4 <rb_strcasecmp@plt+0x9544>
  40df24:	mov    rax,QWORD PTR [rbp-0x38]
  40df28:	lea    rsi,[rip+0xc191]        # 41a0c0 <rb_strcasecmp@plt+0x17b50>
  40df2f:	mov    rdi,rax
  40df32:	call   40b984 <rb_strcasecmp@plt+0x9414>
  40df37:	mov    rax,QWORD PTR [rbp-0x30]
  40df3b:	mov    QWORD PTR [rbp-0x38],rax
  40df3f:	cmp    QWORD PTR [rbp-0x38],0x0
  40df44:	je     40df50 <rb_strcasecmp@plt+0xb9e0>
  40df46:	mov    rax,QWORD PTR [rbp-0x38]
  40df4a:	mov    rax,QWORD PTR [rax+0x10]
  40df4e:	jmp    40df55 <rb_strcasecmp@plt+0xb9e5>
  40df50:	mov    eax,0x0
  40df55:	mov    QWORD PTR [rbp-0x30],rax
  40df59:	cmp    QWORD PTR [rbp-0x38],0x0
  40df5e:	jne    40df15 <rb_strcasecmp@plt+0xb9a5>
  40df60:	mov    rax,0x41a270
  40df67:	mov    rax,QWORD PTR [rax]
  40df6a:	lea    rdx,[rbp-0x20]
  40df6e:	mov    rsi,rdx
  40df71:	mov    rdi,rax
  40df74:	call   402250 <rb_dictionary_foreach_start@plt>
  40df79:	jmp    40dfa0 <rb_strcasecmp@plt+0xba30>
  40df7b:	mov    rax,QWORD PTR [rbp-0x28]
  40df7f:	mov    rdi,rax
  40df82:	call   40d53f <rb_strcasecmp@plt+0xafcf>
  40df87:	mov    rax,0x41a270
  40df8e:	mov    rax,QWORD PTR [rax]
  40df91:	lea    rdx,[rbp-0x20]
  40df95:	mov    rsi,rdx
  40df98:	mov    rdi,rax
  40df9b:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40dfa0:	mov    rax,0x41a270
  40dfa7:	mov    rax,QWORD PTR [rax]
  40dfaa:	lea    rdx,[rbp-0x20]
  40dfae:	mov    rsi,rdx
  40dfb1:	mov    rdi,rax
  40dfb4:	call   402140 <rb_dictionary_foreach_cur@plt>
  40dfb9:	mov    QWORD PTR [rbp-0x28],rax
  40dfbd:	cmp    QWORD PTR [rbp-0x28],0x0
  40dfc2:	jne    40df7b <rb_strcasecmp@plt+0xba0b>
  40dfc4:	mov    BYTE PTR [rip+0xc10d],0x0        # 41a0d8 <rb_strcasecmp@plt+0x17b68>
  40dfcb:	nop
  40dfcc:	mov    rax,QWORD PTR [rbp-0x8]
  40dfd0:	xor    rax,QWORD PTR fs:0x28
  40dfd9:	je     40dfe0 <rb_strcasecmp@plt+0xba70>
  40dfdb:	call   402400 <__stack_chk_fail@plt>
  40dfe0:	leave  
  40dfe1:	ret    
  40dfe2:	push   rbp
  40dfe3:	mov    rbp,rsp
  40dfe6:	sub    rsp,0x20
  40dfea:	mov    QWORD PTR [rbp-0x8],rdi
  40dfee:	mov    DWORD PTR [rbp-0xc],esi
  40dff1:	mov    QWORD PTR [rbp-0x18],rdx
  40dff5:	mov    rax,QWORD PTR [rip+0xc19c]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40dffc:	test   rax,rax
  40dfff:	je     40e010 <rb_strcasecmp@plt+0xbaa0>
  40e001:	mov    rax,QWORD PTR [rip+0xc190]        # 41a198 <rb_strcasecmp@plt+0x17c28>
  40e008:	mov    rdi,rax
  40e00b:	call   402300 <rb_close@plt>
  40e010:	mov    rax,QWORD PTR [rip+0xc241]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40e017:	test   rax,rax
  40e01a:	je     40e02b <rb_strcasecmp@plt+0xbabb>
  40e01c:	mov    rax,QWORD PTR [rip+0xc235]        # 41a258 <rb_strcasecmp@plt+0x17ce8>
  40e023:	mov    rdi,rax
  40e026:	call   402300 <rb_close@plt>
  40e02b:	mov    edx,0x180
  40e030:	mov    esi,0x0
  40e035:	lea    rdi,[rip+0xc0a4]        # 41a0e0 <rb_strcasecmp@plt+0x17b70>
  40e03c:	call   402040 <memset@plt>
  40e041:	nop
  40e042:	leave  
  40e043:	ret    
  40e044:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e04e:	xchg   ax,ax
  40e050:	endbr64 
  40e054:	push   r15
  40e056:	lea    r15,[rip+0x5d73]        # 413dd0 <rb_strcasecmp@plt+0x11860>
  40e05d:	push   r14
  40e05f:	mov    r14,rdx
  40e062:	push   r13
  40e064:	mov    r13,rsi
  40e067:	push   r12
  40e069:	mov    r12d,edi
  40e06c:	push   rbp
  40e06d:	lea    rbp,[rip+0x5d64]        # 413dd8 <rb_strcasecmp@plt+0x11868>
  40e074:	push   rbx
  40e075:	sub    rbp,r15
  40e078:	sub    rsp,0x8
  40e07c:	call   402000 <rb_helper_loop@plt-0x30>
  40e081:	sar    rbp,0x3
  40e085:	je     40e0a6 <rb_strcasecmp@plt+0xbb36>
  40e087:	xor    ebx,ebx
  40e089:	nop    DWORD PTR [rax+0x0]
  40e090:	mov    rdx,r14
  40e093:	mov    rsi,r13
  40e096:	mov    edi,r12d
  40e099:	call   QWORD PTR [r15+rbx*8]
  40e09d:	add    rbx,0x1
  40e0a1:	cmp    rbp,rbx
  40e0a4:	jne    40e090 <rb_strcasecmp@plt+0xbb20>
  40e0a6:	add    rsp,0x8
  40e0aa:	pop    rbx
  40e0ab:	pop    rbp
  40e0ac:	pop    r12
  40e0ae:	pop    r13
  40e0b0:	pop    r14
  40e0b2:	pop    r15
  40e0b4:	ret    
  40e0b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e0c0:	endbr64 
  40e0c4:	ret    

Disassembly of section .fini:

000000000040e0c8 <.fini>:
  40e0c8:	endbr64 
  40e0cc:	sub    rsp,0x8
  40e0d0:	add    rsp,0x8
  40e0d4:	ret    
