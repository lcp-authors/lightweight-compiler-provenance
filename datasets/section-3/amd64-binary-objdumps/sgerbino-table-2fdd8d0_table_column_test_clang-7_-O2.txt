
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	jmp    QWORD PTR [rip+0x6fe4]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x6fe2]        # 40a018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strcpy@plt>:
  403040:	jmp    QWORD PTR [rip+0x6fda]        # 40a020 <strcpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0x6fd2]        # 40a028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <printf@plt>:
  403060:	jmp    QWORD PTR [rip+0x6fca]        # 40a030 <printf@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <snprintf@plt>:
  403070:	jmp    QWORD PTR [rip+0x6fc2]        # 40a038 <snprintf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <strcmp@plt>:
  403080:	jmp    QWORD PTR [rip+0x6fba]        # 40a040 <strcmp@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <malloc@plt>:
  403090:	jmp    QWORD PTR [rip+0x6fb2]        # 40a048 <malloc@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <__isoc99_sscanf@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x6faa]        # 40a050 <__isoc99_sscanf@GLIBC_2.7>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <realloc@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x6fa2]        # 40a058 <realloc@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030c0 <_start@@Base>:
  4030c0:	endbr64 
  4030c4:	xor    ebp,ebp
  4030c6:	mov    r9,rdx
  4030c9:	pop    rsi
  4030ca:	mov    rdx,rsp
  4030cd:	and    rsp,0xfffffffffffffff0
  4030d1:	push   rax
  4030d2:	push   rsp
  4030d3:	mov    r8,0x406480
  4030da:	mov    rcx,0x406410
  4030e1:	mov    rdi,0x4031b0
  4030e8:	call   QWORD PTR [rip+0x6f02]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  4030ee:	hlt    
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	ret    
  4030f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030ff:	nop
  403100:	mov    eax,0x40a070
  403105:	cmp    rax,0x40a070
  40310b:	je     403120 <_start@@Base+0x60>
  40310d:	mov    eax,0x0
  403112:	test   rax,rax
  403115:	je     403120 <_start@@Base+0x60>
  403117:	mov    edi,0x40a070
  40311c:	jmp    rax
  40311e:	xchg   ax,ax
  403120:	ret    
  403121:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40312c:	nop    DWORD PTR [rax+0x0]
  403130:	mov    esi,0x40a070
  403135:	sub    rsi,0x40a070
  40313c:	mov    rax,rsi
  40313f:	shr    rsi,0x3f
  403143:	sar    rax,0x3
  403147:	add    rsi,rax
  40314a:	sar    rsi,1
  40314d:	je     403160 <_start@@Base+0xa0>
  40314f:	mov    eax,0x0
  403154:	test   rax,rax
  403157:	je     403160 <_start@@Base+0xa0>
  403159:	mov    edi,0x40a070
  40315e:	jmp    rax
  403160:	ret    
  403161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	endbr64 
  403174:	cmp    BYTE PTR [rip+0x6ef5],0x0        # 40a070 <__bss_start@@Base>
  40317b:	jne    403190 <_start@@Base+0xd0>
  40317d:	push   rbp
  40317e:	mov    rbp,rsp
  403181:	call   403100 <_start@@Base+0x40>
  403186:	mov    BYTE PTR [rip+0x6ee3],0x1        # 40a070 <__bss_start@@Base>
  40318d:	pop    rbp
  40318e:	ret    
  40318f:	nop
  403190:	ret    
  403191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40319c:	nop    DWORD PTR [rax+0x0]
  4031a0:	endbr64 
  4031a4:	jmp    403130 <_start@@Base+0x70>
  4031a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031b0 <main@@Base>:
  4031b0:	push   rbp
  4031b1:	push   r15
  4031b3:	push   r14
  4031b5:	push   rbx
  4031b6:	sub    rsp,0x78
  4031ba:	lea    rbp,[rsp+0x8]
  4031bf:	mov    rdi,rbp
  4031c2:	call   403310 <table_init@@Base>
  4031c7:	lea    rsi,[rip+0x3e36]        # 407004 <_IO_stdin_used@@Base+0x4>
  4031ce:	xor    ebx,ebx
  4031d0:	xor    edx,edx
  4031d2:	mov    rdi,rbp
  4031d5:	call   403d20 <table_add_column@@Base>
  4031da:	mov    r15d,eax
  4031dd:	lea    rsi,[rip+0x3e62]        # 407046 <_IO_stdin_used@@Base+0x46>
  4031e4:	mov    edx,0x15
  4031e9:	mov    rdi,rbp
  4031ec:	call   403d20 <table_add_column@@Base>
  4031f1:	mov    r14d,eax
  4031f4:	mov    rdi,rbp
  4031f7:	call   403c90 <table_get_column_length@@Base>
  4031fc:	cmp    eax,0x2
  4031ff:	je     403214 <main@@Base+0x64>
  403201:	lea    rdi,[rip+0x3dff]        # 407007 <_IO_stdin_used@@Base+0x7>
  403208:	xor    eax,eax
  40320a:	call   403060 <printf@plt>
  40320f:	mov    ebx,0xffffffff
  403214:	lea    rdi,[rsp+0x8]
  403219:	mov    esi,r15d
  40321c:	call   403d00 <table_get_column_name@@Base>
  403221:	lea    rsi,[rip+0x3ddc]        # 407004 <_IO_stdin_used@@Base+0x4>
  403228:	mov    rdi,rax
  40322b:	call   403080 <strcmp@plt>
  403230:	test   eax,eax
  403232:	je     403247 <main@@Base+0x97>
  403234:	lea    rdi,[rip+0x3df1]        # 40702c <_IO_stdin_used@@Base+0x2c>
  40323b:	xor    eax,eax
  40323d:	call   403060 <printf@plt>
  403242:	mov    ebx,0xffffffff
  403247:	lea    rdi,[rsp+0x8]
  40324c:	mov    esi,r14d
  40324f:	call   403d00 <table_get_column_name@@Base>
  403254:	lea    rsi,[rip+0x3deb]        # 407046 <_IO_stdin_used@@Base+0x46>
  40325b:	mov    rdi,rax
  40325e:	call   403080 <strcmp@plt>
  403263:	test   eax,eax
  403265:	je     40327a <main@@Base+0xca>
  403267:	lea    rdi,[rip+0x3dbe]        # 40702c <_IO_stdin_used@@Base+0x2c>
  40326e:	xor    eax,eax
  403270:	call   403060 <printf@plt>
  403275:	mov    ebx,0xffffffff
  40327a:	lea    rdi,[rsp+0x8]
  40327f:	call   4033a0 <table_destroy@@Base>
  403284:	mov    eax,ebx
  403286:	add    rsp,0x78
  40328a:	pop    rbx
  40328b:	pop    r14
  40328d:	pop    r15
  40328f:	pop    rbp
  403290:	ret    
  403291:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032a0 <table_new@@Base>:
  4032a0:	push   rax
  4032a1:	mov    edi,0x70
  4032a6:	call   403090 <malloc@plt>
  4032ab:	mov    QWORD PTR [rax],0x0
  4032b2:	mov    DWORD PTR [rax+0x8],0x0
  4032b9:	mov    ecx,0xa
  4032be:	vmovq  xmm0,rcx
  4032c3:	vmovdqu XMMWORD PTR [rax+0x10],xmm0
  4032c8:	mov    QWORD PTR [rax+0x20],0x0
  4032d0:	mov    DWORD PTR [rax+0x28],0x0
  4032d7:	mov    ecx,0x14
  4032dc:	vmovq  xmm0,rcx
  4032e1:	vmovdqu XMMWORD PTR [rax+0x30],xmm0
  4032e6:	mov    DWORD PTR [rax+0x40],0x0
  4032ed:	mov    QWORD PTR [rax+0x68],0x0
  4032f5:	vpxor  xmm0,xmm0,xmm0
  4032f9:	vmovdqu XMMWORD PTR [rax+0x48],xmm0
  4032fe:	mov    QWORD PTR [rax+0x58],0x0
  403306:	mov    QWORD PTR [rax+0x60],0xa
  40330e:	pop    rcx
  40330f:	ret    

0000000000403310 <table_init@@Base>:
  403310:	mov    QWORD PTR [rdi],0x0
  403317:	mov    DWORD PTR [rdi+0x8],0x0
  40331e:	mov    eax,0xa
  403323:	vmovq  xmm0,rax
  403328:	vmovdqu XMMWORD PTR [rdi+0x10],xmm0
  40332d:	mov    QWORD PTR [rdi+0x20],0x0
  403335:	mov    DWORD PTR [rdi+0x28],0x0
  40333c:	mov    eax,0x14
  403341:	vmovq  xmm0,rax
  403346:	vmovdqu XMMWORD PTR [rdi+0x30],xmm0
  40334b:	mov    DWORD PTR [rdi+0x40],0x0
  403352:	mov    QWORD PTR [rdi+0x68],0x0
  40335a:	vpxor  xmm0,xmm0,xmm0
  40335e:	vmovdqu XMMWORD PTR [rdi+0x48],xmm0
  403363:	mov    QWORD PTR [rdi+0x58],0x0
  40336b:	mov    QWORD PTR [rdi+0x60],0xa
  403373:	ret    
  403374:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40337e:	xchg   ax,ax

0000000000403380 <table_delete@@Base>:
  403380:	push   rbx
  403381:	mov    rbx,rdi
  403384:	call   4033a0 <table_destroy@@Base>
  403389:	mov    rdi,rbx
  40338c:	pop    rbx
  40338d:	jmp    403030 <free@plt>
  403392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40339c:	nop    DWORD PTR [rax+0x0]

00000000004033a0 <table_destroy@@Base>:
  4033a0:	test   rdi,rdi
  4033a3:	je     40345c <table_destroy@@Base+0xbc>
  4033a9:	push   rbp
  4033aa:	push   r14
  4033ac:	push   rbx
  4033ad:	mov    r14,rdi
  4033b0:	mov    esi,0xffffffff
  4033b5:	mov    edx,0xffffffff
  4033ba:	mov    ecx,0x40
  4033bf:	call   403ba0 <table_notify@@Base>
  4033c4:	mov    rdi,r14
  4033c7:	call   4049a0 <table_get_row_length@@Base>
  4033cc:	test   eax,eax
  4033ce:	jle    4033f1 <table_destroy@@Base+0x51>
  4033d0:	mov    ebp,eax
  4033d2:	xor    ebx,ebx
  4033d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033de:	xchg   ax,ax
  4033e0:	mov    rdi,r14
  4033e3:	mov    esi,ebx
  4033e5:	call   404930 <table_row_destroy@@Base>
  4033ea:	add    ebx,0x1
  4033ed:	cmp    ebp,ebx
  4033ef:	jne    4033e0 <table_destroy@@Base+0x40>
  4033f1:	mov    rdi,QWORD PTR [r14+0x20]
  4033f5:	test   rdi,rdi
  4033f8:	je     4033ff <table_destroy@@Base+0x5f>
  4033fa:	call   403030 <free@plt>
  4033ff:	mov    rdi,r14
  403402:	call   403c90 <table_get_column_length@@Base>
  403407:	test   eax,eax
  403409:	jle    403421 <table_destroy@@Base+0x81>
  40340b:	mov    ebp,eax
  40340d:	xor    ebx,ebx
  40340f:	nop
  403410:	mov    rdi,r14
  403413:	mov    esi,ebx
  403415:	call   403c70 <table_column_destroy@@Base>
  40341a:	add    ebx,0x1
  40341d:	cmp    ebp,ebx
  40341f:	jne    403410 <table_destroy@@Base+0x70>
  403421:	mov    rdi,QWORD PTR [r14]
  403424:	test   rdi,rdi
  403427:	je     40342e <table_destroy@@Base+0x8e>
  403429:	call   403030 <free@plt>
  40342e:	mov    rdi,QWORD PTR [r14+0x48]
  403432:	test   rdi,rdi
  403435:	je     40343c <table_destroy@@Base+0x9c>
  403437:	call   403030 <free@plt>
  40343c:	mov    rdi,QWORD PTR [r14+0x50]
  403440:	test   rdi,rdi
  403443:	je     40344a <table_destroy@@Base+0xaa>
  403445:	call   403030 <free@plt>
  40344a:	mov    rdi,QWORD PTR [r14+0x58]
  40344e:	test   rdi,rdi
  403451:	pop    rbx
  403452:	pop    r14
  403454:	pop    rbp
  403455:	je     40345c <table_destroy@@Base+0xbc>
  403457:	jmp    403030 <free@plt>
  40345c:	ret    
  40345d:	nop    DWORD PTR [rax]

0000000000403460 <table_dupe@@Base>:
  403460:	push   rbp
  403461:	push   r15
  403463:	push   r14
  403465:	push   r13
  403467:	push   r12
  403469:	push   rbx
  40346a:	sub    rsp,0x28
  40346e:	mov    rbx,rdi
  403471:	call   4049a0 <table_get_row_length@@Base>
  403476:	mov    DWORD PTR [rsp+0x1c],eax
  40347a:	mov    rdi,rbx
  40347d:	call   403c90 <table_get_column_length@@Base>
  403482:	mov    r12d,eax
  403485:	mov    edi,0x70
  40348a:	call   403090 <malloc@plt>
  40348f:	mov    r15,rax
  403492:	mov    QWORD PTR [rax],0x0
  403499:	mov    DWORD PTR [rax+0x8],0x0
  4034a0:	mov    eax,0xa
  4034a5:	vmovq  xmm0,rax
  4034aa:	vmovdqu XMMWORD PTR [r15+0x10],xmm0
  4034b0:	mov    QWORD PTR [r15+0x20],0x0
  4034b8:	mov    DWORD PTR [r15+0x28],0x0
  4034c0:	mov    eax,0x14
  4034c5:	vmovq  xmm0,rax
  4034ca:	vmovdqu XMMWORD PTR [r15+0x30],xmm0
  4034d0:	mov    DWORD PTR [r15+0x40],0x0
  4034d8:	mov    QWORD PTR [r15+0x68],0x0
  4034e0:	vpxor  xmm0,xmm0,xmm0
  4034e4:	vmovdqu XMMWORD PTR [r15+0x48],xmm0
  4034ea:	mov    QWORD PTR [r15+0x58],0x0
  4034f2:	mov    QWORD PTR [r15+0x60],0xa
  4034fa:	test   r12d,r12d
  4034fd:	jle    40353c <table_dupe@@Base+0xdc>
  4034ff:	xor    ebp,ebp
  403501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40350b:	nop    DWORD PTR [rax+rax*1+0x0]
  403510:	mov    rdi,rbx
  403513:	mov    esi,ebp
  403515:	call   403d00 <table_get_column_name@@Base>
  40351a:	mov    r13,rax
  40351d:	mov    rdi,rbx
  403520:	mov    esi,ebp
  403522:	call   403d10 <table_get_column_data_type@@Base>
  403527:	mov    rdi,r15
  40352a:	mov    rsi,r13
  40352d:	mov    edx,eax
  40352f:	call   403d20 <table_add_column@@Base>
  403534:	add    ebp,0x1
  403537:	cmp    r12d,ebp
  40353a:	jne    403510 <table_dupe@@Base+0xb0>
  40353c:	cmp    DWORD PTR [rsp+0x1c],0x0
  403541:	jle    4038ca <table_dupe@@Base+0x46a>
  403547:	xor    ebp,ebp
  403549:	lea    r14,[rip+0x3afc]        # 40704c <_IO_stdin_used@@Base+0x4c>
  403550:	mov    rdi,r15
  403553:	call   4049b0 <table_add_row@@Base>
  403558:	test   r12d,r12d
  40355b:	jle    4038bd <table_dupe@@Base+0x45d>
  403561:	xor    r13d,r13d
  403564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40356e:	xchg   ax,ax
  403570:	mov    rdi,rbx
  403573:	mov    esi,r13d
  403576:	call   403d10 <table_get_column_data_type@@Base>
  40357b:	cmp    eax,0x17
  40357e:	ja     4038b0 <table_dupe@@Base+0x450>
  403584:	mov    eax,eax
  403586:	movsxd rax,DWORD PTR [r14+rax*4]
  40358a:	add    rax,r14
  40358d:	jmp    rax
  40358f:	mov    rdi,rbx
  403592:	mov    esi,ebp
  403594:	mov    edx,r13d
  403597:	call   404780 <table_get_int@@Base>
  40359c:	mov    rdi,r15
  40359f:	mov    esi,ebp
  4035a1:	mov    edx,r13d
  4035a4:	mov    ecx,eax
  4035a6:	call   404f60 <table_set_int@@Base>
  4035ab:	jmp    4038b0 <table_dupe@@Base+0x450>
  4035b0:	mov    rdi,rbx
  4035b3:	mov    esi,ebp
  4035b5:	mov    edx,r13d
  4035b8:	call   404790 <table_get_uint@@Base>
  4035bd:	mov    rdi,r15
  4035c0:	mov    esi,ebp
  4035c2:	mov    edx,r13d
  4035c5:	mov    ecx,eax
  4035c7:	call   404fe0 <table_set_uint@@Base>
  4035cc:	jmp    4038b0 <table_dupe@@Base+0x450>
  4035d1:	mov    rdi,rbx
  4035d4:	mov    esi,ebp
  4035d6:	mov    edx,r13d
  4035d9:	call   4047a0 <table_get_int8@@Base>
  4035de:	movsx  ecx,al
  4035e1:	mov    rdi,r15
  4035e4:	mov    esi,ebp
  4035e6:	mov    edx,r13d
  4035e9:	call   405060 <table_set_int8@@Base>
  4035ee:	jmp    4038b0 <table_dupe@@Base+0x450>
  4035f3:	mov    rdi,rbx
  4035f6:	mov    esi,ebp
  4035f8:	mov    edx,r13d
  4035fb:	call   4047b0 <table_get_uint8@@Base>
  403600:	movzx  ecx,al
  403603:	mov    rdi,r15
  403606:	mov    esi,ebp
  403608:	mov    edx,r13d
  40360b:	call   4050e0 <table_set_uint8@@Base>
  403610:	jmp    4038b0 <table_dupe@@Base+0x450>
  403615:	mov    rdi,rbx
  403618:	mov    esi,ebp
  40361a:	mov    edx,r13d
  40361d:	call   4047c0 <table_get_int16@@Base>
  403622:	movsx  ecx,ax
  403625:	mov    rdi,r15
  403628:	mov    esi,ebp
  40362a:	mov    edx,r13d
  40362d:	call   405160 <table_set_int16@@Base>
  403632:	jmp    4038b0 <table_dupe@@Base+0x450>
  403637:	mov    rdi,rbx
  40363a:	mov    esi,ebp
  40363c:	mov    edx,r13d
  40363f:	call   4047d0 <table_get_uint16@@Base>
  403644:	movzx  ecx,ax
  403647:	mov    rdi,r15
  40364a:	mov    esi,ebp
  40364c:	mov    edx,r13d
  40364f:	call   4051e0 <table_set_uint16@@Base>
  403654:	jmp    4038b0 <table_dupe@@Base+0x450>
  403659:	mov    rdi,rbx
  40365c:	mov    esi,ebp
  40365e:	mov    edx,r13d
  403661:	call   4047e0 <table_get_int32@@Base>
  403666:	mov    rdi,r15
  403669:	mov    esi,ebp
  40366b:	mov    edx,r13d
  40366e:	mov    ecx,eax
  403670:	call   405260 <table_set_int32@@Base>
  403675:	jmp    4038b0 <table_dupe@@Base+0x450>
  40367a:	mov    rdi,rbx
  40367d:	mov    esi,ebp
  40367f:	mov    edx,r13d
  403682:	call   4047f0 <table_get_uint32@@Base>
  403687:	mov    rdi,r15
  40368a:	mov    esi,ebp
  40368c:	mov    edx,r13d
  40368f:	mov    ecx,eax
  403691:	call   4052e0 <table_set_uint32@@Base>
  403696:	jmp    4038b0 <table_dupe@@Base+0x450>
  40369b:	mov    rdi,rbx
  40369e:	mov    esi,ebp
  4036a0:	mov    edx,r13d
  4036a3:	call   404800 <table_get_int64@@Base>
  4036a8:	mov    rdi,r15
  4036ab:	mov    esi,ebp
  4036ad:	mov    edx,r13d
  4036b0:	mov    rcx,rax
  4036b3:	call   405360 <table_set_int64@@Base>
  4036b8:	jmp    4038b0 <table_dupe@@Base+0x450>
  4036bd:	mov    rdi,rbx
  4036c0:	mov    esi,ebp
  4036c2:	mov    edx,r13d
  4036c5:	call   404810 <table_get_uint64@@Base>
  4036ca:	mov    rdi,r15
  4036cd:	mov    esi,ebp
  4036cf:	mov    edx,r13d
  4036d2:	mov    rcx,rax
  4036d5:	call   4053e0 <table_set_uint64@@Base>
  4036da:	jmp    4038b0 <table_dupe@@Base+0x450>
  4036df:	mov    rdi,rbx
  4036e2:	mov    esi,ebp
  4036e4:	mov    edx,r13d
  4036e7:	call   404820 <table_get_short@@Base>
  4036ec:	movsx  ecx,ax
  4036ef:	mov    rdi,r15
  4036f2:	mov    esi,ebp
  4036f4:	mov    edx,r13d
  4036f7:	call   405460 <table_set_short@@Base>
  4036fc:	jmp    4038b0 <table_dupe@@Base+0x450>
  403701:	mov    rdi,rbx
  403704:	mov    esi,ebp
  403706:	mov    edx,r13d
  403709:	call   404830 <table_get_ushort@@Base>
  40370e:	movzx  ecx,ax
  403711:	mov    rdi,r15
  403714:	mov    esi,ebp
  403716:	mov    edx,r13d
  403719:	call   4054e0 <table_set_ushort@@Base>
  40371e:	jmp    4038b0 <table_dupe@@Base+0x450>
  403723:	mov    rdi,rbx
  403726:	mov    esi,ebp
  403728:	mov    edx,r13d
  40372b:	call   404840 <table_get_long@@Base>
  403730:	mov    rdi,r15
  403733:	mov    esi,ebp
  403735:	mov    edx,r13d
  403738:	mov    rcx,rax
  40373b:	call   405560 <table_set_long@@Base>
  403740:	jmp    4038b0 <table_dupe@@Base+0x450>
  403745:	mov    rdi,rbx
  403748:	mov    esi,ebp
  40374a:	mov    edx,r13d
  40374d:	call   404850 <table_get_ulong@@Base>
  403752:	mov    rdi,r15
  403755:	mov    esi,ebp
  403757:	mov    edx,r13d
  40375a:	mov    rcx,rax
  40375d:	call   4055e0 <table_set_ulong@@Base>
  403762:	jmp    4038b0 <table_dupe@@Base+0x450>
  403767:	mov    rdi,rbx
  40376a:	mov    esi,ebp
  40376c:	mov    edx,r13d
  40376f:	call   404860 <table_get_llong@@Base>
  403774:	mov    rdi,r15
  403777:	mov    esi,ebp
  403779:	mov    edx,r13d
  40377c:	mov    rcx,rax
  40377f:	call   405660 <table_set_llong@@Base>
  403784:	jmp    4038b0 <table_dupe@@Base+0x450>
  403789:	mov    rdi,rbx
  40378c:	mov    esi,ebp
  40378e:	mov    edx,r13d
  403791:	call   404870 <table_get_ullong@@Base>
  403796:	mov    rdi,r15
  403799:	mov    esi,ebp
  40379b:	mov    edx,r13d
  40379e:	mov    rcx,rax
  4037a1:	call   4056e0 <table_set_ullong@@Base>
  4037a6:	jmp    4038b0 <table_dupe@@Base+0x450>
  4037ab:	mov    rdi,rbx
  4037ae:	mov    esi,ebp
  4037b0:	mov    edx,r13d
  4037b3:	call   404880 <table_get_float@@Base>
  4037b8:	mov    rdi,r15
  4037bb:	mov    esi,ebp
  4037bd:	mov    edx,r13d
  4037c0:	call   405760 <table_set_float@@Base>
  4037c5:	jmp    4038b0 <table_dupe@@Base+0x450>
  4037ca:	mov    rdi,rbx
  4037cd:	mov    esi,ebp
  4037cf:	mov    edx,r13d
  4037d2:	call   404890 <table_get_double@@Base>
  4037d7:	mov    rdi,r15
  4037da:	mov    esi,ebp
  4037dc:	mov    edx,r13d
  4037df:	call   4057f0 <table_set_double@@Base>
  4037e4:	jmp    4038b0 <table_dupe@@Base+0x450>
  4037e9:	mov    rdi,rbx
  4037ec:	mov    esi,ebp
  4037ee:	mov    edx,r13d
  4037f1:	call   4048a0 <table_get_ldouble@@Base>
  4037f6:	fstp   TBYTE PTR [rsp]
  4037f9:	mov    rdi,r15
  4037fc:	mov    esi,ebp
  4037fe:	mov    edx,r13d
  403801:	call   405880 <table_set_ldouble@@Base>
  403806:	jmp    4038b0 <table_dupe@@Base+0x450>
  40380b:	mov    rdi,rbx
  40380e:	mov    esi,ebp
  403810:	mov    edx,r13d
  403813:	call   4048b0 <table_get_char@@Base>
  403818:	movsx  ecx,al
  40381b:	mov    rdi,r15
  40381e:	mov    esi,ebp
  403820:	mov    edx,r13d
  403823:	call   405930 <table_set_char@@Base>
  403828:	jmp    4038b0 <table_dupe@@Base+0x450>
  40382d:	mov    rdi,rbx
  403830:	mov    esi,ebp
  403832:	mov    edx,r13d
  403835:	call   4048c0 <table_get_uchar@@Base>
  40383a:	movzx  ecx,al
  40383d:	mov    rdi,r15
  403840:	mov    esi,ebp
  403842:	mov    edx,r13d
  403845:	call   4059b0 <table_set_uchar@@Base>
  40384a:	jmp    4038b0 <table_dupe@@Base+0x450>
  40384c:	mov    rdi,rbx
  40384f:	mov    esi,ebp
  403851:	mov    edx,r13d
  403854:	call   4048d0 <table_get_string@@Base>
  403859:	mov    rdi,r15
  40385c:	mov    esi,ebp
  40385e:	mov    edx,r13d
  403861:	mov    rcx,rax
  403864:	call   405920 <table_set_string@@Base>
  403869:	jmp    4038b0 <table_dupe@@Base+0x450>
  40386b:	mov    rdi,rbx
  40386e:	mov    esi,ebp
  403870:	mov    edx,r13d
  403873:	call   404770 <table_get_bool@@Base>
  403878:	movzx  ecx,al
  40387b:	mov    rdi,r15
  40387e:	mov    esi,ebp
  403880:	mov    edx,r13d
  403883:	call   404ee0 <table_set_bool@@Base>
  403888:	jmp    4038b0 <table_dupe@@Base+0x450>
  40388a:	mov    rdi,rbx
  40388d:	mov    esi,ebp
  40388f:	mov    edx,r13d
  403892:	call   4048e0 <table_get_ptr@@Base>
  403897:	mov    QWORD PTR [rsp+0x20],rax
  40389c:	mov    rdi,r15
  40389f:	mov    esi,ebp
  4038a1:	mov    edx,r13d
  4038a4:	lea    rcx,[rsp+0x20]
  4038a9:	call   405a30 <table_set_ptr@@Base>
  4038ae:	xchg   ax,ax
  4038b0:	add    r13d,0x1
  4038b4:	cmp    r12d,r13d
  4038b7:	jne    403570 <table_dupe@@Base+0x110>
  4038bd:	add    ebp,0x1
  4038c0:	cmp    ebp,DWORD PTR [rsp+0x1c]
  4038c4:	jne    403550 <table_dupe@@Base+0xf0>
  4038ca:	mov    rax,r15
  4038cd:	add    rsp,0x28
  4038d1:	pop    rbx
  4038d2:	pop    r12
  4038d4:	pop    r13
  4038d6:	pop    r14
  4038d8:	pop    r15
  4038da:	pop    rbp
  4038db:	ret    
  4038dc:	nop    DWORD PTR [rax+0x0]

00000000004038e0 <table_get_major_version@@Base>:
  4038e0:	xor    eax,eax
  4038e2:	ret    
  4038e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038ed:	nop    DWORD PTR [rax]

00000000004038f0 <table_get_minor_version@@Base>:
  4038f0:	xor    eax,eax
  4038f2:	ret    
  4038f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038fd:	nop    DWORD PTR [rax]

0000000000403900 <table_get_patch_version@@Base>:
  403900:	xor    eax,eax
  403902:	ret    
  403903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40390d:	nop    DWORD PTR [rax]

0000000000403910 <table_get_version@@Base>:
  403910:	lea    rax,[rip+0x38e5]        # 4071fc <_IO_stdin_used@@Base+0x1fc>
  403917:	ret    
  403918:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403920 <table_get_callback_length@@Base>:
  403920:	mov    eax,DWORD PTR [rdi+0x40]
  403923:	ret    
  403924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40392e:	xchg   ax,ax

0000000000403930 <table_register_callback@@Base>:
  403930:	push   rbp
  403931:	push   r15
  403933:	push   r14
  403935:	push   rbx
  403936:	push   rax
  403937:	mov    r14d,ecx
  40393a:	mov    r15,rdx
  40393d:	mov    rbp,rsi
  403940:	mov    rbx,rdi
  403943:	movsxd rcx,DWORD PTR [rdi+0x40]
  403947:	test   rcx,rcx
  40394a:	jle    40397d <table_register_callback@@Base+0x4d>
  40394c:	mov    rdx,QWORD PTR [rbx+0x48]
  403950:	xor    eax,eax
  403952:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40395c:	nop    DWORD PTR [rax+0x0]
  403960:	cmp    QWORD PTR [rdx+rax*8],rbp
  403964:	jne    403974 <table_register_callback@@Base+0x44>
  403966:	mov    rsi,QWORD PTR [rbx+0x50]
  40396a:	cmp    QWORD PTR [rsi+rax*8],r15
  40396e:	je     403a15 <table_register_callback@@Base+0xe5>
  403974:	add    rax,0x1
  403978:	cmp    rax,rcx
  40397b:	jl     403960 <table_register_callback@@Base+0x30>
  40397d:	mov    rsi,QWORD PTR [rbx+0x60]
  403981:	mov    rax,rcx
  403984:	or     rax,rsi
  403987:	shr    rax,0x20
  40398b:	je     403a08 <table_register_callback@@Base+0xd8>
  40398d:	xor    edx,edx
  40398f:	mov    rax,rcx
  403992:	div    rsi
  403995:	test   rdx,rdx
  403998:	jne    4039e1 <table_register_callback@@Base+0xb1>
  40399a:	add    rsi,QWORD PTR [rbx+0x68]
  40399e:	mov    QWORD PTR [rbx+0x68],rsi
  4039a2:	mov    rdi,QWORD PTR [rbx+0x48]
  4039a6:	shl    rsi,0x3
  4039aa:	call   4030b0 <realloc@plt>
  4039af:	mov    QWORD PTR [rbx+0x48],rax
  4039b3:	mov    rdi,QWORD PTR [rbx+0x50]
  4039b7:	mov    rsi,QWORD PTR [rbx+0x68]
  4039bb:	shl    rsi,0x3
  4039bf:	call   4030b0 <realloc@plt>
  4039c4:	mov    QWORD PTR [rbx+0x50],rax
  4039c8:	mov    rdi,QWORD PTR [rbx+0x58]
  4039cc:	mov    rsi,QWORD PTR [rbx+0x68]
  4039d0:	shl    rsi,0x2
  4039d4:	call   4030b0 <realloc@plt>
  4039d9:	mov    QWORD PTR [rbx+0x58],rax
  4039dd:	movsxd rcx,DWORD PTR [rbx+0x40]
  4039e1:	mov    rax,QWORD PTR [rbx+0x48]
  4039e5:	mov    QWORD PTR [rax+rcx*8],rbp
  4039e9:	mov    rax,QWORD PTR [rbx+0x50]
  4039ed:	mov    QWORD PTR [rax+rcx*8],r15
  4039f1:	mov    rax,QWORD PTR [rbx+0x58]
  4039f5:	mov    DWORD PTR [rax+rcx*4],r14d
  4039f9:	add    DWORD PTR [rbx+0x40],0x1
  4039fd:	add    rsp,0x8
  403a01:	pop    rbx
  403a02:	pop    r14
  403a04:	pop    r15
  403a06:	pop    rbp
  403a07:	ret    
  403a08:	xor    edx,edx
  403a0a:	mov    eax,ecx
  403a0c:	div    esi
  403a0e:	test   rdx,rdx
  403a11:	jne    4039e1 <table_register_callback@@Base+0xb1>
  403a13:	jmp    40399a <table_register_callback@@Base+0x6a>
  403a15:	test   eax,eax
  403a17:	jle    40397d <table_register_callback@@Base+0x4d>
  403a1d:	mov    rcx,QWORD PTR [rbx+0x58]
  403a21:	or     DWORD PTR [rcx+rax*4],r14d
  403a25:	jmp    4039fd <table_register_callback@@Base+0xcd>
  403a27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403a30 <table_unregister_callback@@Base>:
  403a30:	push   r15
  403a32:	push   r14
  403a34:	push   rbx
  403a35:	movsxd rcx,DWORD PTR [rdi+0x40]
  403a39:	test   rcx,rcx
  403a3c:	jle    403a69 <table_unregister_callback@@Base+0x39>
  403a3e:	mov    r15,rdi
  403a41:	lea    r14,[rdi+0x48]
  403a45:	mov    rdi,QWORD PTR [rdi+0x48]
  403a49:	xor    eax,eax
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a50:	cmp    QWORD PTR [rdi+rax*8],rsi
  403a54:	jne    403a60 <table_unregister_callback@@Base+0x30>
  403a56:	mov    rbx,QWORD PTR [r15+0x50]
  403a5a:	cmp    QWORD PTR [rbx+rax*8],rdx
  403a5e:	je     403a6f <table_unregister_callback@@Base+0x3f>
  403a60:	add    rax,0x1
  403a64:	cmp    rax,rcx
  403a67:	jl     403a50 <table_unregister_callback@@Base+0x20>
  403a69:	pop    rbx
  403a6a:	pop    r14
  403a6c:	pop    r15
  403a6e:	ret    
  403a6f:	cmp    eax,0xffffffff
  403a72:	je     403a69 <table_unregister_callback@@Base+0x39>
  403a74:	add    ecx,0xffffffff
  403a77:	cmp    ecx,eax
  403a79:	jle    403aea <table_unregister_callback@@Base+0xba>
  403a7b:	mov    rcx,QWORD PTR [rdi+rax*8+0x8]
  403a80:	mov    QWORD PTR [rdi+rax*8],rcx
  403a84:	mov    rcx,QWORD PTR [r15+0x50]
  403a88:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
  403a8d:	mov    QWORD PTR [rcx+rax*8],rdx
  403a91:	mov    rcx,QWORD PTR [r15+0x58]
  403a95:	mov    edx,DWORD PTR [rcx+rax*4+0x4]
  403a99:	mov    DWORD PTR [rcx+rax*4],edx
  403a9c:	lea    rdx,[rax+0x1]
  403aa0:	movsxd rax,DWORD PTR [r15+0x40]
  403aa4:	add    rax,0xffffffffffffffff
  403aa8:	mov    ecx,eax
  403aaa:	cmp    rdx,rax
  403aad:	jge    403aed <table_unregister_callback@@Base+0xbd>
  403aaf:	nop
  403ab0:	mov    rax,QWORD PTR [r15+0x48]
  403ab4:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  403ab9:	mov    QWORD PTR [rax+rdx*8],rcx
  403abd:	mov    rax,QWORD PTR [r15+0x50]
  403ac1:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  403ac6:	mov    QWORD PTR [rax+rdx*8],rcx
  403aca:	mov    rax,QWORD PTR [r15+0x58]
  403ace:	mov    ecx,DWORD PTR [rax+rdx*4+0x4]
  403ad2:	mov    DWORD PTR [rax+rdx*4],ecx
  403ad5:	lea    rdx,[rdx+0x1]
  403ad9:	movsxd rax,DWORD PTR [r15+0x40]
  403add:	add    rax,0xffffffffffffffff
  403ae1:	cmp    rdx,rax
  403ae4:	jl     403ab0 <table_unregister_callback@@Base+0x80>
  403ae6:	mov    ecx,eax
  403ae8:	jmp    403aed <table_unregister_callback@@Base+0xbd>
  403aea:	movsxd rax,ecx
  403aed:	mov    DWORD PTR [r15+0x40],ecx
  403af1:	mov    rcx,QWORD PTR [r15+0x60]
  403af5:	mov    rdx,rax
  403af8:	or     rdx,rcx
  403afb:	shr    rdx,0x20
  403aff:	je     403b11 <table_unregister_callback@@Base+0xe1>
  403b01:	xor    edx,edx
  403b03:	div    rcx
  403b06:	test   rdx,rdx
  403b09:	jne    403a69 <table_unregister_callback@@Base+0x39>
  403b0f:	jmp    403b1e <table_unregister_callback@@Base+0xee>
  403b11:	xor    edx,edx
  403b13:	div    ecx
  403b15:	test   rdx,rdx
  403b18:	jne    403a69 <table_unregister_callback@@Base+0x39>
  403b1e:	mov    rdi,QWORD PTR [r15+0x48]
  403b22:	mov    rsi,QWORD PTR [r15+0x68]
  403b26:	sub    rsi,rcx
  403b29:	mov    QWORD PTR [r15+0x68],rsi
  403b2d:	je     403b6b <table_unregister_callback@@Base+0x13b>
  403b2f:	shl    rsi,0x3
  403b33:	call   4030b0 <realloc@plt>
  403b38:	mov    QWORD PTR [r15+0x48],rax
  403b3c:	mov    rdi,QWORD PTR [r15+0x50]
  403b40:	mov    rsi,QWORD PTR [r15+0x68]
  403b44:	shl    rsi,0x3
  403b48:	call   4030b0 <realloc@plt>
  403b4d:	mov    QWORD PTR [r15+0x50],rax
  403b51:	mov    rdi,QWORD PTR [r15+0x58]
  403b55:	mov    rsi,QWORD PTR [r15+0x68]
  403b59:	shl    rsi,0x2
  403b5d:	call   4030b0 <realloc@plt>
  403b62:	mov    QWORD PTR [r15+0x58],rax
  403b66:	jmp    403a69 <table_unregister_callback@@Base+0x39>
  403b6b:	call   403030 <free@plt>
  403b70:	mov    rdi,QWORD PTR [r15+0x50]
  403b74:	call   403030 <free@plt>
  403b79:	mov    rdi,QWORD PTR [r15+0x58]
  403b7d:	call   403030 <free@plt>
  403b82:	vxorps xmm0,xmm0,xmm0
  403b86:	vmovups XMMWORD PTR [r14],xmm0
  403b8b:	mov    QWORD PTR [r14+0x10],0x0
  403b93:	jmp    403a69 <table_unregister_callback@@Base+0x39>
  403b98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ba0 <table_notify@@Base>:
  403ba0:	push   rbp
  403ba1:	push   r15
  403ba3:	push   r14
  403ba5:	push   r12
  403ba7:	push   rbx
  403ba8:	mov    eax,DWORD PTR [rdi+0x40]
  403bab:	test   eax,eax
  403bad:	jle    403bf4 <table_notify@@Base+0x54>
  403baf:	mov    r12d,ecx
  403bb2:	mov    r14d,edx
  403bb5:	mov    r15d,esi
  403bb8:	mov    rbp,rdi
  403bbb:	xor    ebx,ebx
  403bbd:	nop    DWORD PTR [rax]
  403bc0:	mov    rcx,QWORD PTR [rbp+0x58]
  403bc4:	test   DWORD PTR [rcx+rbx*4],r12d
  403bc8:	je     403be8 <table_notify@@Base+0x48>
  403bca:	mov    rax,QWORD PTR [rbp+0x48]
  403bce:	mov    rcx,QWORD PTR [rbp+0x50]
  403bd2:	mov    r8,QWORD PTR [rcx+rbx*8]
  403bd6:	mov    rdi,rbp
  403bd9:	mov    esi,r15d
  403bdc:	mov    edx,r14d
  403bdf:	mov    ecx,r12d
  403be2:	call   QWORD PTR [rax+rbx*8]
  403be5:	mov    eax,DWORD PTR [rbp+0x40]
  403be8:	add    rbx,0x1
  403bec:	movsxd rcx,eax
  403bef:	cmp    rbx,rcx
  403bf2:	jl     403bc0 <table_notify@@Base+0x20>
  403bf4:	pop    rbx
  403bf5:	pop    r12
  403bf7:	pop    r14
  403bf9:	pop    r15
  403bfb:	pop    rbp
  403bfc:	ret    
  403bfd:	nop    DWORD PTR [rax]

0000000000403c00 <table_column_init@@Base>:
  403c00:	push   rbp
  403c01:	push   r15
  403c03:	push   r14
  403c05:	push   r12
  403c07:	push   rbx
  403c08:	mov    r14,r8
  403c0b:	mov    r15d,ecx
  403c0e:	mov    r12,rdx
  403c11:	mov    rbp,QWORD PTR [rdi]
  403c14:	movsxd rbx,esi
  403c17:	mov    rdi,rdx
  403c1a:	call   403050 <strlen@plt>
  403c1f:	lea    rdi,[rax+0x1]
  403c23:	call   403090 <malloc@plt>
  403c28:	lea    rbx,[rbx+rbx*2]
  403c2c:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  403c31:	test   rax,rax
  403c34:	je     403c41 <table_column_init@@Base+0x41>
  403c36:	mov    rdi,rax
  403c39:	mov    rsi,r12
  403c3c:	call   403040 <strcpy@plt>
  403c41:	mov    DWORD PTR [rbp+rbx*8+0x8],r15d
  403c46:	mov    QWORD PTR [rbp+rbx*8+0x10],r14
  403c4b:	pop    rbx
  403c4c:	pop    r12
  403c4e:	pop    r14
  403c50:	pop    r15
  403c52:	pop    rbp
  403c53:	ret    
  403c54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c5e:	xchg   ax,ax

0000000000403c60 <table_get_col_ptr@@Base>:
  403c60:	movsxd rax,esi
  403c63:	lea    rax,[rax+rax*2]
  403c67:	shl    rax,0x3
  403c6b:	add    rax,QWORD PTR [rdi]
  403c6e:	ret    
  403c6f:	nop

0000000000403c70 <table_column_destroy@@Base>:
  403c70:	mov    rax,QWORD PTR [rdi]
  403c73:	movsxd rcx,esi
  403c76:	lea    rcx,[rcx+rcx*2]
  403c7a:	mov    rdi,QWORD PTR [rax+rcx*8]
  403c7e:	test   rdi,rdi
  403c81:	je     403c88 <table_column_destroy@@Base+0x18>
  403c83:	jmp    403030 <free@plt>
  403c88:	ret    
  403c89:	nop    DWORD PTR [rax+0x0]

0000000000403c90 <table_get_column_length@@Base>:
  403c90:	mov    eax,DWORD PTR [rdi+0x8]
  403c93:	ret    
  403c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c9e:	xchg   ax,ax

0000000000403ca0 <table_get_column@@Base>:
  403ca0:	push   r15
  403ca2:	push   r14
  403ca4:	push   r12
  403ca6:	push   rbx
  403ca7:	push   rax
  403ca8:	movsxd r14,DWORD PTR [rdi+0x8]
  403cac:	test   r14,r14
  403caf:	jle    403cde <table_get_column@@Base+0x3e>
  403cb1:	mov    r15,rsi
  403cb4:	mov    rbx,QWORD PTR [rdi]
  403cb7:	xor    r12d,r12d
  403cba:	nop    WORD PTR [rax+rax*1+0x0]
  403cc0:	mov    rdi,QWORD PTR [rbx]
  403cc3:	mov    rsi,r15
  403cc6:	call   403080 <strcmp@plt>
  403ccb:	test   eax,eax
  403ccd:	je     403ce1 <table_get_column@@Base+0x41>
  403ccf:	add    r12,0x1
  403cd3:	add    rbx,0x18
  403cd7:	cmp    r12,r14
  403cda:	jl     403cc0 <table_get_column@@Base+0x20>
  403cdc:	jmp    403ce1 <table_get_column@@Base+0x41>
  403cde:	xor    r12d,r12d
  403ce1:	cmp    r12d,r14d
  403ce4:	mov    eax,0xffffffff
  403ce9:	cmovne eax,r12d
  403ced:	add    rsp,0x8
  403cf1:	pop    rbx
  403cf2:	pop    r12
  403cf4:	pop    r14
  403cf6:	pop    r15
  403cf8:	ret    
  403cf9:	nop    DWORD PTR [rax+0x0]

0000000000403d00 <table_get_column_name@@Base>:
  403d00:	mov    rax,QWORD PTR [rdi]
  403d03:	movsxd rcx,esi
  403d06:	lea    rcx,[rcx+rcx*2]
  403d0a:	mov    rax,QWORD PTR [rax+rcx*8]
  403d0e:	ret    
  403d0f:	nop

0000000000403d10 <table_get_column_data_type@@Base>:
  403d10:	mov    rax,QWORD PTR [rdi]
  403d13:	movsxd rcx,esi
  403d16:	lea    rcx,[rcx+rcx*2]
  403d1a:	mov    eax,DWORD PTR [rax+rcx*8+0x8]
  403d1e:	ret    
  403d1f:	nop

0000000000403d20 <table_add_column@@Base>:
  403d20:	push   rbp
  403d21:	push   r15
  403d23:	push   r14
  403d25:	push   r13
  403d27:	push   r12
  403d29:	push   rbx
  403d2a:	sub    rsp,0x18
  403d2e:	mov    r15d,edx
  403d31:	mov    r13,rsi
  403d34:	mov    r12,rdi
  403d37:	movsxd rax,DWORD PTR [rdi+0x8]
  403d3b:	mov    rcx,QWORD PTR [rdi+0x10]
  403d3f:	mov    rdx,rax
  403d42:	or     rdx,rcx
  403d45:	shr    rdx,0x20
  403d49:	je     403d57 <table_add_column@@Base+0x37>
  403d4b:	xor    edx,edx
  403d4d:	div    rcx
  403d50:	test   rdx,rdx
  403d53:	jne    403db9 <table_add_column@@Base+0x99>
  403d55:	jmp    403d60 <table_add_column@@Base+0x40>
  403d57:	xor    edx,edx
  403d59:	div    ecx
  403d5b:	test   rdx,rdx
  403d5e:	jne    403db9 <table_add_column@@Base+0x99>
  403d60:	add    rcx,QWORD PTR [r12+0x18]
  403d65:	mov    QWORD PTR [r12+0x18],rcx
  403d6a:	mov    rdi,QWORD PTR [r12]
  403d6e:	shl    rcx,0x3
  403d72:	lea    rsi,[rcx+rcx*2]
  403d76:	call   4030b0 <realloc@plt>
  403d7b:	mov    QWORD PTR [r12],rax
  403d7f:	mov    rdi,r12
  403d82:	call   4049a0 <table_get_row_length@@Base>
  403d87:	test   eax,eax
  403d89:	jle    403db9 <table_add_column@@Base+0x99>
  403d8b:	mov    r14d,eax
  403d8e:	xor    ebp,ebp
  403d90:	mov    rdi,r12
  403d93:	mov    esi,ebp
  403d95:	call   404920 <table_get_row_ptr@@Base>
  403d9a:	mov    rbx,rax
  403d9d:	mov    rdi,QWORD PTR [rax]
  403da0:	mov    rsi,QWORD PTR [r12+0x18]
  403da5:	shl    rsi,0x3
  403da9:	call   4030b0 <realloc@plt>
  403dae:	mov    QWORD PTR [rbx],rax
  403db1:	add    ebp,0x1
  403db4:	cmp    r14d,ebp
  403db7:	jne    403d90 <table_add_column@@Base+0x70>
  403db9:	mov    rdi,r12
  403dbc:	call   4049a0 <table_get_row_length@@Base>
  403dc1:	mov    r14d,eax
  403dc4:	movsxd rbx,DWORD PTR [r12+0x8]
  403dc9:	mov    DWORD PTR [rsp+0xc],r15d
  403dce:	mov    edi,r15d
  403dd1:	call   404740 <table_get_default_compare_function_for_data_type@@Base>
  403dd6:	mov    QWORD PTR [rsp+0x10],rax
  403ddb:	mov    rbp,QWORD PTR [r12]
  403ddf:	mov    rdi,r13
  403de2:	call   403050 <strlen@plt>
  403de7:	lea    rdi,[rax+0x1]
  403deb:	call   403090 <malloc@plt>
  403df0:	lea    r15,[rbx+rbx*2]
  403df4:	mov    QWORD PTR [rbp+r15*8+0x0],rax
  403df9:	test   rax,rax
  403dfc:	je     403e09 <table_add_column@@Base+0xe9>
  403dfe:	mov    rdi,rax
  403e01:	mov    rsi,r13
  403e04:	call   403040 <strcpy@plt>
  403e09:	mov    eax,DWORD PTR [rsp+0xc]
  403e0d:	mov    DWORD PTR [rbp+r15*8+0x8],eax
  403e12:	mov    rax,QWORD PTR [rsp+0x10]
  403e17:	mov    QWORD PTR [rbp+r15*8+0x10],rax
  403e1c:	test   r14d,r14d
  403e1f:	jle    403e44 <table_add_column@@Base+0x124>
  403e21:	xor    ebp,ebp
  403e23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e2d:	nop    DWORD PTR [rax]
  403e30:	mov    rdi,r12
  403e33:	mov    esi,ebp
  403e35:	mov    edx,ebx
  403e37:	call   405a90 <table_cell_init@@Base>
  403e3c:	add    ebp,0x1
  403e3f:	cmp    r14d,ebp
  403e42:	jne    403e30 <table_add_column@@Base+0x110>
  403e44:	mov    edx,DWORD PTR [r12+0x8]
  403e49:	mov    esi,0xffffffff
  403e4e:	mov    ecx,0x8
  403e53:	mov    rdi,r12
  403e56:	call   403ba0 <table_notify@@Base>
  403e5b:	mov    eax,DWORD PTR [r12+0x8]
  403e60:	lea    ecx,[rax+0x1]
  403e63:	mov    DWORD PTR [r12+0x8],ecx
  403e68:	add    rsp,0x18
  403e6c:	pop    rbx
  403e6d:	pop    r12
  403e6f:	pop    r13
  403e71:	pop    r14
  403e73:	pop    r15
  403e75:	pop    rbp
  403e76:	ret    
  403e77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403e80 <table_remove_column@@Base>:
  403e80:	push   rbp
  403e81:	push   r15
  403e83:	push   r14
  403e85:	push   r13
  403e87:	push   r12
  403e89:	push   rbx
  403e8a:	sub    rsp,0x28
  403e8e:	mov    r14d,esi
  403e91:	mov    r12,rdi
  403e94:	mov    rax,QWORD PTR [rdi]
  403e97:	movsxd r15,esi
  403e9a:	lea    rcx,[r15+r15*2]
  403e9e:	mov    rdi,QWORD PTR [rax+rcx*8]
  403ea2:	test   rdi,rdi
  403ea5:	je     403eac <table_remove_column@@Base+0x2c>
  403ea7:	call   403030 <free@plt>
  403eac:	mov    eax,DWORD PTR [r12+0x8]
  403eb1:	add    eax,0xffffffff
  403eb4:	mov    DWORD PTR [rsp+0xc],eax
  403eb8:	sub    eax,r14d
  403ebb:	mov    QWORD PTR [rsp+0x10],rax
  403ec0:	jle    404054 <table_remove_column@@Base+0x1d4>
  403ec6:	movsxd rax,DWORD PTR [rsp+0xc]
  403ecb:	mov    rcx,r15
  403ece:	not    rcx
  403ed1:	add    rcx,rax
  403ed4:	mov    rdx,QWORD PTR [rsp+0x10]
  403ed9:	mov    rsi,r15
  403edc:	and    rdx,0x7
  403ee0:	je     403f2d <table_remove_column@@Base+0xad>
  403ee2:	lea    rsi,[r15*8+0x0]
  403eea:	lea    rsi,[rsi+rsi*2]
  403eee:	neg    rdx
  403ef1:	xor    edi,edi
  403ef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403efd:	nop    DWORD PTR [rax]
  403f00:	mov    rbp,QWORD PTR [r12]
  403f04:	mov    rbx,QWORD PTR [rbp+rsi*1+0x28]
  403f09:	mov    QWORD PTR [rbp+rsi*1+0x10],rbx
  403f0e:	vmovups xmm0,XMMWORD PTR [rbp+rsi*1+0x18]
  403f14:	vmovups XMMWORD PTR [rbp+rsi*1+0x0],xmm0
  403f1a:	add    rdi,0xffffffffffffffff
  403f1e:	add    rsi,0x18
  403f22:	cmp    rdx,rdi
  403f25:	jne    403f00 <table_remove_column@@Base+0x80>
  403f27:	mov    rsi,r15
  403f2a:	sub    rsi,rdi
  403f2d:	cmp    rcx,0x7
  403f31:	jb     404054 <table_remove_column@@Base+0x1d4>
  403f37:	sub    rax,rsi
  403f3a:	shl    rsi,0x3
  403f3e:	lea    rcx,[rsi+rsi*2]
  403f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f4c:	nop    DWORD PTR [rax+0x0]
  403f50:	mov    rdx,QWORD PTR [r12]
  403f54:	mov    rsi,QWORD PTR [rdx+rcx*1+0x28]
  403f59:	mov    QWORD PTR [rdx+rcx*1+0x10],rsi
  403f5e:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x18]
  403f64:	vmovups XMMWORD PTR [rdx+rcx*1],xmm0
  403f69:	mov    rdx,QWORD PTR [r12]
  403f6d:	mov    rsi,QWORD PTR [rdx+rcx*1+0x40]
  403f72:	mov    QWORD PTR [rdx+rcx*1+0x28],rsi
  403f77:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
  403f7d:	vmovups XMMWORD PTR [rdx+rcx*1+0x18],xmm0
  403f83:	mov    rdx,QWORD PTR [r12]
  403f87:	mov    rsi,QWORD PTR [rdx+rcx*1+0x58]
  403f8c:	mov    QWORD PTR [rdx+rcx*1+0x40],rsi
  403f91:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x48]
  403f97:	vmovups XMMWORD PTR [rdx+rcx*1+0x30],xmm0
  403f9d:	mov    rdx,QWORD PTR [r12]
  403fa1:	mov    rsi,QWORD PTR [rdx+rcx*1+0x70]
  403fa6:	mov    QWORD PTR [rdx+rcx*1+0x58],rsi
  403fab:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x60]
  403fb1:	vmovups XMMWORD PTR [rdx+rcx*1+0x48],xmm0
  403fb7:	mov    rdx,QWORD PTR [r12]
  403fbb:	mov    rsi,QWORD PTR [rdx+rcx*1+0x88]
  403fc3:	mov    QWORD PTR [rdx+rcx*1+0x70],rsi
  403fc8:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x78]
  403fce:	vmovups XMMWORD PTR [rdx+rcx*1+0x60],xmm0
  403fd4:	mov    rdx,QWORD PTR [r12]
  403fd8:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x90]
  403fe1:	vmovups XMMWORD PTR [rdx+rcx*1+0x78],xmm0
  403fe7:	mov    rsi,QWORD PTR [rdx+rcx*1+0xa0]
  403fef:	mov    QWORD PTR [rdx+rcx*1+0x88],rsi
  403ff7:	mov    rdx,QWORD PTR [r12]
  403ffb:	mov    rsi,QWORD PTR [rdx+rcx*1+0xb8]
  404003:	mov    QWORD PTR [rdx+rcx*1+0xa0],rsi
  40400b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xa8]
  404014:	vmovups XMMWORD PTR [rdx+rcx*1+0x90],xmm0
  40401d:	mov    rdx,QWORD PTR [r12]
  404021:	mov    rsi,QWORD PTR [rdx+rcx*1+0xd0]
  404029:	mov    QWORD PTR [rdx+rcx*1+0xb8],rsi
  404031:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xc0]
  40403a:	vmovups XMMWORD PTR [rdx+rcx*1+0xa8],xmm0
  404043:	add    rcx,0xc0
  40404a:	add    rax,0xfffffffffffffff8
  40404e:	jne    403f50 <table_remove_column@@Base+0xd0>
  404054:	mov    rbx,r15
  404057:	mov    rdi,r12
  40405a:	call   4049a0 <table_get_row_length@@Base>
  40405f:	test   eax,eax
  404061:	jle    40417c <table_remove_column@@Base+0x2fc>
  404067:	mov    r15d,eax
  40406a:	movsxd r13,DWORD PTR [rsp+0xc]
  40406f:	mov    rax,rbx
  404072:	not    rax
  404075:	add    rax,r13
  404078:	mov    QWORD PTR [rsp+0x20],rax
  40407d:	mov    rax,QWORD PTR [rsp+0x10]
  404082:	and    eax,0x7
  404085:	mov    QWORD PTR [rsp+0x10],rax
  40408a:	neg    rax
  40408d:	mov    QWORD PTR [rsp+0x18],rax
  404092:	xor    ebp,ebp
  404094:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40409e:	xchg   ax,ax
  4040a0:	mov    rdi,r12
  4040a3:	mov    esi,ebp
  4040a5:	mov    edx,r14d
  4040a8:	call   405ad0 <table_cell_destroy@@Base>
  4040ad:	mov    rdi,r12
  4040b0:	mov    esi,ebp
  4040b2:	call   404920 <table_get_row_ptr@@Base>
  4040b7:	cmp    DWORD PTR [rsp+0xc],r14d
  4040bc:	jle    404170 <table_remove_column@@Base+0x2f0>
  4040c2:	mov    rcx,rbx
  4040c5:	cmp    QWORD PTR [rsp+0x10],0x0
  4040cb:	je     4040f6 <table_remove_column@@Base+0x276>
  4040cd:	mov    rdx,QWORD PTR [rsp+0x18]
  4040d2:	mov    rcx,rbx
  4040d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040df:	nop
  4040e0:	mov    rsi,QWORD PTR [rax]
  4040e3:	mov    rdi,QWORD PTR [rsi+rcx*8+0x8]
  4040e8:	mov    QWORD PTR [rsi+rcx*8],rdi
  4040ec:	add    rcx,0x1
  4040f0:	add    rdx,0x1
  4040f4:	jne    4040e0 <table_remove_column@@Base+0x260>
  4040f6:	cmp    QWORD PTR [rsp+0x20],0x7
  4040fc:	jb     404170 <table_remove_column@@Base+0x2f0>
  4040fe:	xchg   ax,ax
  404100:	mov    rdx,QWORD PTR [rax]
  404103:	mov    rsi,QWORD PTR [rdx+rcx*8+0x8]
  404108:	mov    QWORD PTR [rdx+rcx*8],rsi
  40410c:	mov    rdx,QWORD PTR [rax]
  40410f:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  404114:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  404119:	mov    rdx,QWORD PTR [rax]
  40411c:	mov    rsi,QWORD PTR [rdx+rcx*8+0x18]
  404121:	mov    QWORD PTR [rdx+rcx*8+0x10],rsi
  404126:	mov    rdx,QWORD PTR [rax]
  404129:	mov    rsi,QWORD PTR [rdx+rcx*8+0x20]
  40412e:	mov    QWORD PTR [rdx+rcx*8+0x18],rsi
  404133:	mov    rdx,QWORD PTR [rax]
  404136:	mov    rsi,QWORD PTR [rdx+rcx*8+0x28]
  40413b:	mov    QWORD PTR [rdx+rcx*8+0x20],rsi
  404140:	mov    rdx,QWORD PTR [rax]
  404143:	mov    rsi,QWORD PTR [rdx+rcx*8+0x30]
  404148:	mov    QWORD PTR [rdx+rcx*8+0x28],rsi
  40414d:	mov    rdx,QWORD PTR [rax]
  404150:	mov    rsi,QWORD PTR [rdx+rcx*8+0x38]
  404155:	mov    QWORD PTR [rdx+rcx*8+0x30],rsi
  40415a:	mov    rdx,QWORD PTR [rax]
  40415d:	mov    rsi,QWORD PTR [rdx+rcx*8+0x40]
  404162:	mov    QWORD PTR [rdx+rcx*8+0x38],rsi
  404167:	add    rcx,0x8
  40416b:	cmp    r13,rcx
  40416e:	jne    404100 <table_remove_column@@Base+0x280>
  404170:	add    ebp,0x1
  404173:	cmp    ebp,r15d
  404176:	jne    4040a0 <table_remove_column@@Base+0x220>
  40417c:	movsxd rax,DWORD PTR [r12+0x8]
  404181:	add    rax,0xffffffffffffffff
  404185:	mov    DWORD PTR [r12+0x8],eax
  40418a:	mov    rcx,QWORD PTR [r12+0x10]
  40418f:	mov    rdx,rax
  404192:	or     rdx,rcx
  404195:	shr    rdx,0x20
  404199:	je     4041a7 <table_remove_column@@Base+0x327>
  40419b:	xor    edx,edx
  40419d:	div    rcx
  4041a0:	test   rdx,rdx
  4041a3:	jne    404219 <table_remove_column@@Base+0x399>
  4041a5:	jmp    4041b0 <table_remove_column@@Base+0x330>
  4041a7:	xor    edx,edx
  4041a9:	div    ecx
  4041ab:	test   rdx,rdx
  4041ae:	jne    404219 <table_remove_column@@Base+0x399>
  4041b0:	mov    rdi,QWORD PTR [r12]
  4041b4:	mov    rax,QWORD PTR [r12+0x18]
  4041b9:	sub    rax,rcx
  4041bc:	mov    QWORD PTR [r12+0x18],rax
  4041c1:	shl    rax,0x3
  4041c5:	lea    rsi,[rax+rax*2]
  4041c9:	call   4030b0 <realloc@plt>
  4041ce:	mov    QWORD PTR [r12],rax
  4041d2:	mov    rdi,r12
  4041d5:	call   4049a0 <table_get_row_length@@Base>
  4041da:	test   eax,eax
  4041dc:	jle    404219 <table_remove_column@@Base+0x399>
  4041de:	mov    r15d,eax
  4041e1:	xor    ebp,ebp
  4041e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041ed:	nop    DWORD PTR [rax]
  4041f0:	mov    rdi,r12
  4041f3:	mov    esi,ebp
  4041f5:	call   404920 <table_get_row_ptr@@Base>
  4041fa:	mov    rbx,rax
  4041fd:	mov    rdi,QWORD PTR [rax]
  404200:	mov    rsi,QWORD PTR [r12+0x18]
  404205:	shl    rsi,0x3
  404209:	call   4030b0 <realloc@plt>
  40420e:	mov    QWORD PTR [rbx],rax
  404211:	add    ebp,0x1
  404214:	cmp    r15d,ebp
  404217:	jne    4041f0 <table_remove_column@@Base+0x370>
  404219:	mov    esi,0xffffffff
  40421e:	mov    ecx,0x10
  404223:	mov    rdi,r12
  404226:	mov    edx,r14d
  404229:	call   403ba0 <table_notify@@Base>
  40422e:	xor    eax,eax
  404230:	add    rsp,0x28
  404234:	pop    rbx
  404235:	pop    r12
  404237:	pop    r13
  404239:	pop    r14
  40423b:	pop    r15
  40423d:	pop    rbp
  40423e:	ret    
  40423f:	nop

0000000000404240 <table_get_column_compare_function@@Base>:
  404240:	mov    rax,QWORD PTR [rdi]
  404243:	movsxd rcx,esi
  404246:	lea    rcx,[rcx+rcx*2]
  40424a:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  40424f:	ret    

0000000000404250 <table_set_column_compare_function@@Base>:
  404250:	mov    rax,QWORD PTR [rdi]
  404253:	movsxd rcx,esi
  404256:	lea    rcx,[rcx+rcx*2]
  40425a:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  40425f:	ret    

0000000000404260 <table_compare_bool@@Base>:
  404260:	test   rdi,rdi
  404263:	je     40427d <table_compare_bool@@Base+0x1d>
  404265:	test   rsi,rsi
  404268:	je     404283 <table_compare_bool@@Base+0x23>
  40426a:	mov    al,BYTE PTR [rdi]
  40426c:	mov    cl,BYTE PTR [rsi]
  40426e:	cmp    al,cl
  404270:	sbb    edx,edx
  404272:	cmp    al,cl
  404274:	mov    eax,0x1
  404279:	cmovbe eax,edx
  40427c:	ret    
  40427d:	neg    rsi
  404280:	sbb    eax,eax
  404282:	ret    
  404283:	mov    eax,0x1
  404288:	ret    
  404289:	nop    DWORD PTR [rax+0x0]

0000000000404290 <table_compare_int@@Base>:
  404290:	test   rdi,rdi
  404293:	je     4042b2 <table_compare_int@@Base+0x22>
  404295:	test   rsi,rsi
  404298:	je     4042b8 <table_compare_int@@Base+0x28>
  40429a:	mov    eax,DWORD PTR [rdi]
  40429c:	mov    ecx,DWORD PTR [rsi]
  40429e:	xor    edx,edx
  4042a0:	cmp    eax,ecx
  4042a2:	setl   dl
  4042a5:	neg    edx
  4042a7:	cmp    eax,ecx
  4042a9:	mov    eax,0x1
  4042ae:	cmovle eax,edx
  4042b1:	ret    
  4042b2:	neg    rsi
  4042b5:	sbb    eax,eax
  4042b7:	ret    
  4042b8:	mov    eax,0x1
  4042bd:	ret    
  4042be:	xchg   ax,ax

00000000004042c0 <table_compare_uint@@Base>:
  4042c0:	test   rdi,rdi
  4042c3:	je     4042dd <table_compare_uint@@Base+0x1d>
  4042c5:	test   rsi,rsi
  4042c8:	je     4042e3 <table_compare_uint@@Base+0x23>
  4042ca:	mov    eax,DWORD PTR [rdi]
  4042cc:	mov    ecx,DWORD PTR [rsi]
  4042ce:	cmp    eax,ecx
  4042d0:	sbb    edx,edx
  4042d2:	cmp    eax,ecx
  4042d4:	mov    eax,0x1
  4042d9:	cmovbe eax,edx
  4042dc:	ret    
  4042dd:	neg    rsi
  4042e0:	sbb    eax,eax
  4042e2:	ret    
  4042e3:	mov    eax,0x1
  4042e8:	ret    
  4042e9:	nop    DWORD PTR [rax+0x0]

00000000004042f0 <table_compare_int8@@Base>:
  4042f0:	test   rdi,rdi
  4042f3:	je     404312 <table_compare_int8@@Base+0x22>
  4042f5:	test   rsi,rsi
  4042f8:	je     404318 <table_compare_int8@@Base+0x28>
  4042fa:	mov    al,BYTE PTR [rdi]
  4042fc:	mov    cl,BYTE PTR [rsi]
  4042fe:	xor    edx,edx
  404300:	cmp    al,cl
  404302:	setl   dl
  404305:	neg    edx
  404307:	cmp    al,cl
  404309:	mov    eax,0x1
  40430e:	cmovle eax,edx
  404311:	ret    
  404312:	neg    rsi
  404315:	sbb    eax,eax
  404317:	ret    
  404318:	mov    eax,0x1
  40431d:	ret    
  40431e:	xchg   ax,ax

0000000000404320 <table_compare_uint8@@Base>:
  404320:	test   rdi,rdi
  404323:	je     40433d <table_compare_uint8@@Base+0x1d>
  404325:	test   rsi,rsi
  404328:	je     404343 <table_compare_uint8@@Base+0x23>
  40432a:	mov    al,BYTE PTR [rdi]
  40432c:	mov    cl,BYTE PTR [rsi]
  40432e:	cmp    al,cl
  404330:	sbb    edx,edx
  404332:	cmp    al,cl
  404334:	mov    eax,0x1
  404339:	cmovbe eax,edx
  40433c:	ret    
  40433d:	neg    rsi
  404340:	sbb    eax,eax
  404342:	ret    
  404343:	mov    eax,0x1
  404348:	ret    
  404349:	nop    DWORD PTR [rax+0x0]

0000000000404350 <table_compare_int16@@Base>:
  404350:	test   rdi,rdi
  404353:	je     404376 <table_compare_int16@@Base+0x26>
  404355:	test   rsi,rsi
  404358:	je     40437c <table_compare_int16@@Base+0x2c>
  40435a:	movzx  eax,WORD PTR [rdi]
  40435d:	movzx  ecx,WORD PTR [rsi]
  404360:	xor    edx,edx
  404362:	cmp    ax,cx
  404365:	setl   dl
  404368:	neg    edx
  40436a:	cmp    ax,cx
  40436d:	mov    eax,0x1
  404372:	cmovle eax,edx
  404375:	ret    
  404376:	neg    rsi
  404379:	sbb    eax,eax
  40437b:	ret    
  40437c:	mov    eax,0x1
  404381:	ret    
  404382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40438c:	nop    DWORD PTR [rax+0x0]

0000000000404390 <table_compare_uint16@@Base>:
  404390:	test   rdi,rdi
  404393:	je     4043b1 <table_compare_uint16@@Base+0x21>
  404395:	test   rsi,rsi
  404398:	je     4043b7 <table_compare_uint16@@Base+0x27>
  40439a:	movzx  eax,WORD PTR [rdi]
  40439d:	movzx  ecx,WORD PTR [rsi]
  4043a0:	cmp    ax,cx
  4043a3:	sbb    edx,edx
  4043a5:	cmp    ax,cx
  4043a8:	mov    eax,0x1
  4043ad:	cmovbe eax,edx
  4043b0:	ret    
  4043b1:	neg    rsi
  4043b4:	sbb    eax,eax
  4043b6:	ret    
  4043b7:	mov    eax,0x1
  4043bc:	ret    
  4043bd:	nop    DWORD PTR [rax]

00000000004043c0 <table_compare_int32@@Base>:
  4043c0:	test   rdi,rdi
  4043c3:	je     4043e2 <table_compare_int32@@Base+0x22>
  4043c5:	test   rsi,rsi
  4043c8:	je     4043e8 <table_compare_int32@@Base+0x28>
  4043ca:	mov    eax,DWORD PTR [rdi]
  4043cc:	mov    ecx,DWORD PTR [rsi]
  4043ce:	xor    edx,edx
  4043d0:	cmp    eax,ecx
  4043d2:	setl   dl
  4043d5:	neg    edx
  4043d7:	cmp    eax,ecx
  4043d9:	mov    eax,0x1
  4043de:	cmovle eax,edx
  4043e1:	ret    
  4043e2:	neg    rsi
  4043e5:	sbb    eax,eax
  4043e7:	ret    
  4043e8:	mov    eax,0x1
  4043ed:	ret    
  4043ee:	xchg   ax,ax

00000000004043f0 <table_compare_uint32@@Base>:
  4043f0:	test   rdi,rdi
  4043f3:	je     40440d <table_compare_uint32@@Base+0x1d>
  4043f5:	test   rsi,rsi
  4043f8:	je     404413 <table_compare_uint32@@Base+0x23>
  4043fa:	mov    eax,DWORD PTR [rdi]
  4043fc:	mov    ecx,DWORD PTR [rsi]
  4043fe:	cmp    eax,ecx
  404400:	sbb    edx,edx
  404402:	cmp    eax,ecx
  404404:	mov    eax,0x1
  404409:	cmovbe eax,edx
  40440c:	ret    
  40440d:	neg    rsi
  404410:	sbb    eax,eax
  404412:	ret    
  404413:	mov    eax,0x1
  404418:	ret    
  404419:	nop    DWORD PTR [rax+0x0]

0000000000404420 <table_compare_int64@@Base>:
  404420:	test   rdi,rdi
  404423:	je     404446 <table_compare_int64@@Base+0x26>
  404425:	test   rsi,rsi
  404428:	je     40444c <table_compare_int64@@Base+0x2c>
  40442a:	mov    rax,QWORD PTR [rdi]
  40442d:	mov    rcx,QWORD PTR [rsi]
  404430:	xor    edx,edx
  404432:	cmp    rax,rcx
  404435:	setl   dl
  404438:	neg    edx
  40443a:	cmp    rax,rcx
  40443d:	mov    eax,0x1
  404442:	cmovle eax,edx
  404445:	ret    
  404446:	neg    rsi
  404449:	sbb    eax,eax
  40444b:	ret    
  40444c:	mov    eax,0x1
  404451:	ret    
  404452:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40445c:	nop    DWORD PTR [rax+0x0]

0000000000404460 <table_compare_uint64@@Base>:
  404460:	test   rdi,rdi
  404463:	je     404481 <table_compare_uint64@@Base+0x21>
  404465:	test   rsi,rsi
  404468:	je     404487 <table_compare_uint64@@Base+0x27>
  40446a:	mov    rax,QWORD PTR [rdi]
  40446d:	mov    rcx,QWORD PTR [rsi]
  404470:	cmp    rax,rcx
  404473:	sbb    edx,edx
  404475:	cmp    rax,rcx
  404478:	mov    eax,0x1
  40447d:	cmovbe eax,edx
  404480:	ret    
  404481:	neg    rsi
  404484:	sbb    eax,eax
  404486:	ret    
  404487:	mov    eax,0x1
  40448c:	ret    
  40448d:	nop    DWORD PTR [rax]

0000000000404490 <table_compare_short@@Base>:
  404490:	test   rdi,rdi
  404493:	je     4044b6 <table_compare_short@@Base+0x26>
  404495:	test   rsi,rsi
  404498:	je     4044bc <table_compare_short@@Base+0x2c>
  40449a:	movzx  eax,WORD PTR [rdi]
  40449d:	movzx  ecx,WORD PTR [rsi]
  4044a0:	xor    edx,edx
  4044a2:	cmp    ax,cx
  4044a5:	setl   dl
  4044a8:	neg    edx
  4044aa:	cmp    ax,cx
  4044ad:	mov    eax,0x1
  4044b2:	cmovle eax,edx
  4044b5:	ret    
  4044b6:	neg    rsi
  4044b9:	sbb    eax,eax
  4044bb:	ret    
  4044bc:	mov    eax,0x1
  4044c1:	ret    
  4044c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044cc:	nop    DWORD PTR [rax+0x0]

00000000004044d0 <table_compare_ushort@@Base>:
  4044d0:	test   rdi,rdi
  4044d3:	je     4044f1 <table_compare_ushort@@Base+0x21>
  4044d5:	test   rsi,rsi
  4044d8:	je     4044f7 <table_compare_ushort@@Base+0x27>
  4044da:	movzx  eax,WORD PTR [rdi]
  4044dd:	movzx  ecx,WORD PTR [rsi]
  4044e0:	cmp    ax,cx
  4044e3:	sbb    edx,edx
  4044e5:	cmp    ax,cx
  4044e8:	mov    eax,0x1
  4044ed:	cmovbe eax,edx
  4044f0:	ret    
  4044f1:	neg    rsi
  4044f4:	sbb    eax,eax
  4044f6:	ret    
  4044f7:	mov    eax,0x1
  4044fc:	ret    
  4044fd:	nop    DWORD PTR [rax]

0000000000404500 <table_compare_long@@Base>:
  404500:	test   rdi,rdi
  404503:	je     404526 <table_compare_long@@Base+0x26>
  404505:	test   rsi,rsi
  404508:	je     40452c <table_compare_long@@Base+0x2c>
  40450a:	mov    rax,QWORD PTR [rdi]
  40450d:	mov    rcx,QWORD PTR [rsi]
  404510:	xor    edx,edx
  404512:	cmp    rax,rcx
  404515:	setl   dl
  404518:	neg    edx
  40451a:	cmp    rax,rcx
  40451d:	mov    eax,0x1
  404522:	cmovle eax,edx
  404525:	ret    
  404526:	neg    rsi
  404529:	sbb    eax,eax
  40452b:	ret    
  40452c:	mov    eax,0x1
  404531:	ret    
  404532:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40453c:	nop    DWORD PTR [rax+0x0]

0000000000404540 <table_compare_ulong@@Base>:
  404540:	test   rdi,rdi
  404543:	je     404561 <table_compare_ulong@@Base+0x21>
  404545:	test   rsi,rsi
  404548:	je     404567 <table_compare_ulong@@Base+0x27>
  40454a:	mov    rax,QWORD PTR [rdi]
  40454d:	mov    rcx,QWORD PTR [rsi]
  404550:	cmp    rax,rcx
  404553:	sbb    edx,edx
  404555:	cmp    rax,rcx
  404558:	mov    eax,0x1
  40455d:	cmovbe eax,edx
  404560:	ret    
  404561:	neg    rsi
  404564:	sbb    eax,eax
  404566:	ret    
  404567:	mov    eax,0x1
  40456c:	ret    
  40456d:	nop    DWORD PTR [rax]

0000000000404570 <table_compare_llong@@Base>:
  404570:	test   rdi,rdi
  404573:	je     404596 <table_compare_llong@@Base+0x26>
  404575:	test   rsi,rsi
  404578:	je     40459c <table_compare_llong@@Base+0x2c>
  40457a:	mov    rax,QWORD PTR [rdi]
  40457d:	mov    rcx,QWORD PTR [rsi]
  404580:	xor    edx,edx
  404582:	cmp    rax,rcx
  404585:	setl   dl
  404588:	neg    edx
  40458a:	cmp    rax,rcx
  40458d:	mov    eax,0x1
  404592:	cmovle eax,edx
  404595:	ret    
  404596:	neg    rsi
  404599:	sbb    eax,eax
  40459b:	ret    
  40459c:	mov    eax,0x1
  4045a1:	ret    
  4045a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045ac:	nop    DWORD PTR [rax+0x0]

00000000004045b0 <table_compare_ullong@@Base>:
  4045b0:	test   rdi,rdi
  4045b3:	je     4045d1 <table_compare_ullong@@Base+0x21>
  4045b5:	test   rsi,rsi
  4045b8:	je     4045d7 <table_compare_ullong@@Base+0x27>
  4045ba:	mov    rax,QWORD PTR [rdi]
  4045bd:	mov    rcx,QWORD PTR [rsi]
  4045c0:	cmp    rax,rcx
  4045c3:	sbb    edx,edx
  4045c5:	cmp    rax,rcx
  4045c8:	mov    eax,0x1
  4045cd:	cmovbe eax,edx
  4045d0:	ret    
  4045d1:	neg    rsi
  4045d4:	sbb    eax,eax
  4045d6:	ret    
  4045d7:	mov    eax,0x1
  4045dc:	ret    
  4045dd:	nop    DWORD PTR [rax]

00000000004045e0 <table_compare_float@@Base>:
  4045e0:	test   rdi,rdi
  4045e3:	je     40460a <table_compare_float@@Base+0x2a>
  4045e5:	test   rsi,rsi
  4045e8:	je     404610 <table_compare_float@@Base+0x30>
  4045ea:	vmovss xmm0,DWORD PTR [rdi]
  4045ee:	vmovss xmm1,DWORD PTR [rsi]
  4045f2:	xor    ecx,ecx
  4045f4:	vucomiss xmm1,xmm0
  4045f8:	seta   cl
  4045fb:	neg    ecx
  4045fd:	vucomiss xmm0,xmm1
  404601:	mov    eax,0x1
  404606:	cmovbe eax,ecx
  404609:	ret    
  40460a:	neg    rsi
  40460d:	sbb    eax,eax
  40460f:	ret    
  404610:	mov    eax,0x1
  404615:	ret    
  404616:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404620 <table_compare_double@@Base>:
  404620:	test   rdi,rdi
  404623:	je     40464a <table_compare_double@@Base+0x2a>
  404625:	test   rsi,rsi
  404628:	je     404650 <table_compare_double@@Base+0x30>
  40462a:	vmovsd xmm0,QWORD PTR [rdi]
  40462e:	vmovsd xmm1,QWORD PTR [rsi]
  404632:	xor    ecx,ecx
  404634:	vucomisd xmm1,xmm0
  404638:	seta   cl
  40463b:	neg    ecx
  40463d:	vucomisd xmm0,xmm1
  404641:	mov    eax,0x1
  404646:	cmovbe eax,ecx
  404649:	ret    
  40464a:	neg    rsi
  40464d:	sbb    eax,eax
  40464f:	ret    
  404650:	mov    eax,0x1
  404655:	ret    
  404656:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404660 <table_compare_ldouble@@Base>:
  404660:	test   rdi,rdi
  404663:	je     404686 <table_compare_ldouble@@Base+0x26>
  404665:	test   rsi,rsi
  404668:	je     40468c <table_compare_ldouble@@Base+0x2c>
  40466a:	fld    TBYTE PTR [rdi]
  40466c:	fld    TBYTE PTR [rsi]
  40466e:	xor    ecx,ecx
  404670:	fucomi st,st(1)
  404672:	seta   cl
  404675:	neg    ecx
  404677:	fxch   st(1)
  404679:	fucomip st,st(1)
  40467b:	fstp   st(0)
  40467d:	mov    eax,0x1
  404682:	cmovbe eax,ecx
  404685:	ret    
  404686:	neg    rsi
  404689:	sbb    eax,eax
  40468b:	ret    
  40468c:	mov    eax,0x1
  404691:	ret    
  404692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40469c:	nop    DWORD PTR [rax+0x0]

00000000004046a0 <table_compare_char@@Base>:
  4046a0:	test   rdi,rdi
  4046a3:	je     4046c2 <table_compare_char@@Base+0x22>
  4046a5:	test   rsi,rsi
  4046a8:	je     4046c8 <table_compare_char@@Base+0x28>
  4046aa:	mov    al,BYTE PTR [rdi]
  4046ac:	mov    cl,BYTE PTR [rsi]
  4046ae:	xor    edx,edx
  4046b0:	cmp    al,cl
  4046b2:	setl   dl
  4046b5:	neg    edx
  4046b7:	cmp    al,cl
  4046b9:	mov    eax,0x1
  4046be:	cmovle eax,edx
  4046c1:	ret    
  4046c2:	neg    rsi
  4046c5:	sbb    eax,eax
  4046c7:	ret    
  4046c8:	mov    eax,0x1
  4046cd:	ret    
  4046ce:	xchg   ax,ax

00000000004046d0 <table_compare_uchar@@Base>:
  4046d0:	test   rdi,rdi
  4046d3:	je     4046ed <table_compare_uchar@@Base+0x1d>
  4046d5:	test   rsi,rsi
  4046d8:	je     4046f3 <table_compare_uchar@@Base+0x23>
  4046da:	mov    al,BYTE PTR [rdi]
  4046dc:	mov    cl,BYTE PTR [rsi]
  4046de:	cmp    al,cl
  4046e0:	sbb    edx,edx
  4046e2:	cmp    al,cl
  4046e4:	mov    eax,0x1
  4046e9:	cmovbe eax,edx
  4046ec:	ret    
  4046ed:	neg    rsi
  4046f0:	sbb    eax,eax
  4046f2:	ret    
  4046f3:	mov    eax,0x1
  4046f8:	ret    
  4046f9:	nop    DWORD PTR [rax+0x0]

0000000000404700 <table_compare_string@@Base>:
  404700:	test   rdi,rdi
  404703:	je     40470f <table_compare_string@@Base+0xf>
  404705:	test   rsi,rsi
  404708:	je     404715 <table_compare_string@@Base+0x15>
  40470a:	jmp    403080 <strcmp@plt>
  40470f:	neg    rsi
  404712:	sbb    eax,eax
  404714:	ret    
  404715:	mov    eax,0x1
  40471a:	ret    
  40471b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404720 <table_compare_ptr@@Base>:
  404720:	cmp    rdi,rsi
  404723:	sbb    ecx,ecx
  404725:	cmp    rdi,rsi
  404728:	mov    eax,0x1
  40472d:	cmovbe eax,ecx
  404730:	ret    
  404731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40473b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404740 <table_get_default_compare_function_for_data_type@@Base>:
  404740:	cmp    edi,0x17
  404743:	ja     404754 <table_get_default_compare_function_for_data_type@@Base+0x14>
  404745:	movsxd rax,edi
  404748:	lea    rcx,[rip+0x5601]        # 409d50 <_IO_stdin_used@@Base+0x2d50>
  40474f:	mov    rax,QWORD PTR [rcx+rax*8]
  404753:	ret    
  404754:	xor    eax,eax
  404756:	ret    
  404757:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404760 <table_get@@Base>:
  404760:	push   rax
  404761:	call   405ab0 <table_get_cell_ptr@@Base>
  404766:	mov    rax,QWORD PTR [rax]
  404769:	pop    rcx
  40476a:	ret    
  40476b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404770 <table_get_bool@@Base>:
  404770:	push   rax
  404771:	call   405ab0 <table_get_cell_ptr@@Base>
  404776:	mov    rax,QWORD PTR [rax]
  404779:	mov    al,BYTE PTR [rax]
  40477b:	pop    rcx
  40477c:	ret    
  40477d:	nop    DWORD PTR [rax]

0000000000404780 <table_get_int@@Base>:
  404780:	push   rax
  404781:	call   405ab0 <table_get_cell_ptr@@Base>
  404786:	mov    rax,QWORD PTR [rax]
  404789:	mov    eax,DWORD PTR [rax]
  40478b:	pop    rcx
  40478c:	ret    
  40478d:	nop    DWORD PTR [rax]

0000000000404790 <table_get_uint@@Base>:
  404790:	push   rax
  404791:	call   405ab0 <table_get_cell_ptr@@Base>
  404796:	mov    rax,QWORD PTR [rax]
  404799:	mov    eax,DWORD PTR [rax]
  40479b:	pop    rcx
  40479c:	ret    
  40479d:	nop    DWORD PTR [rax]

00000000004047a0 <table_get_int8@@Base>:
  4047a0:	push   rax
  4047a1:	call   405ab0 <table_get_cell_ptr@@Base>
  4047a6:	mov    rax,QWORD PTR [rax]
  4047a9:	mov    al,BYTE PTR [rax]
  4047ab:	pop    rcx
  4047ac:	ret    
  4047ad:	nop    DWORD PTR [rax]

00000000004047b0 <table_get_uint8@@Base>:
  4047b0:	push   rax
  4047b1:	call   405ab0 <table_get_cell_ptr@@Base>
  4047b6:	mov    rax,QWORD PTR [rax]
  4047b9:	mov    al,BYTE PTR [rax]
  4047bb:	pop    rcx
  4047bc:	ret    
  4047bd:	nop    DWORD PTR [rax]

00000000004047c0 <table_get_int16@@Base>:
  4047c0:	push   rax
  4047c1:	call   405ab0 <table_get_cell_ptr@@Base>
  4047c6:	mov    rax,QWORD PTR [rax]
  4047c9:	movzx  eax,WORD PTR [rax]
  4047cc:	pop    rcx
  4047cd:	ret    
  4047ce:	xchg   ax,ax

00000000004047d0 <table_get_uint16@@Base>:
  4047d0:	push   rax
  4047d1:	call   405ab0 <table_get_cell_ptr@@Base>
  4047d6:	mov    rax,QWORD PTR [rax]
  4047d9:	movzx  eax,WORD PTR [rax]
  4047dc:	pop    rcx
  4047dd:	ret    
  4047de:	xchg   ax,ax

00000000004047e0 <table_get_int32@@Base>:
  4047e0:	push   rax
  4047e1:	call   405ab0 <table_get_cell_ptr@@Base>
  4047e6:	mov    rax,QWORD PTR [rax]
  4047e9:	mov    eax,DWORD PTR [rax]
  4047eb:	pop    rcx
  4047ec:	ret    
  4047ed:	nop    DWORD PTR [rax]

00000000004047f0 <table_get_uint32@@Base>:
  4047f0:	push   rax
  4047f1:	call   405ab0 <table_get_cell_ptr@@Base>
  4047f6:	mov    rax,QWORD PTR [rax]
  4047f9:	mov    eax,DWORD PTR [rax]
  4047fb:	pop    rcx
  4047fc:	ret    
  4047fd:	nop    DWORD PTR [rax]

0000000000404800 <table_get_int64@@Base>:
  404800:	push   rax
  404801:	call   405ab0 <table_get_cell_ptr@@Base>
  404806:	mov    rax,QWORD PTR [rax]
  404809:	mov    rax,QWORD PTR [rax]
  40480c:	pop    rcx
  40480d:	ret    
  40480e:	xchg   ax,ax

0000000000404810 <table_get_uint64@@Base>:
  404810:	push   rax
  404811:	call   405ab0 <table_get_cell_ptr@@Base>
  404816:	mov    rax,QWORD PTR [rax]
  404819:	mov    rax,QWORD PTR [rax]
  40481c:	pop    rcx
  40481d:	ret    
  40481e:	xchg   ax,ax

0000000000404820 <table_get_short@@Base>:
  404820:	push   rax
  404821:	call   405ab0 <table_get_cell_ptr@@Base>
  404826:	mov    rax,QWORD PTR [rax]
  404829:	movzx  eax,WORD PTR [rax]
  40482c:	pop    rcx
  40482d:	ret    
  40482e:	xchg   ax,ax

0000000000404830 <table_get_ushort@@Base>:
  404830:	push   rax
  404831:	call   405ab0 <table_get_cell_ptr@@Base>
  404836:	mov    rax,QWORD PTR [rax]
  404839:	movzx  eax,WORD PTR [rax]
  40483c:	pop    rcx
  40483d:	ret    
  40483e:	xchg   ax,ax

0000000000404840 <table_get_long@@Base>:
  404840:	push   rax
  404841:	call   405ab0 <table_get_cell_ptr@@Base>
  404846:	mov    rax,QWORD PTR [rax]
  404849:	mov    rax,QWORD PTR [rax]
  40484c:	pop    rcx
  40484d:	ret    
  40484e:	xchg   ax,ax

0000000000404850 <table_get_ulong@@Base>:
  404850:	push   rax
  404851:	call   405ab0 <table_get_cell_ptr@@Base>
  404856:	mov    rax,QWORD PTR [rax]
  404859:	mov    rax,QWORD PTR [rax]
  40485c:	pop    rcx
  40485d:	ret    
  40485e:	xchg   ax,ax

0000000000404860 <table_get_llong@@Base>:
  404860:	push   rax
  404861:	call   405ab0 <table_get_cell_ptr@@Base>
  404866:	mov    rax,QWORD PTR [rax]
  404869:	mov    rax,QWORD PTR [rax]
  40486c:	pop    rcx
  40486d:	ret    
  40486e:	xchg   ax,ax

0000000000404870 <table_get_ullong@@Base>:
  404870:	push   rax
  404871:	call   405ab0 <table_get_cell_ptr@@Base>
  404876:	mov    rax,QWORD PTR [rax]
  404879:	mov    rax,QWORD PTR [rax]
  40487c:	pop    rcx
  40487d:	ret    
  40487e:	xchg   ax,ax

0000000000404880 <table_get_float@@Base>:
  404880:	push   rax
  404881:	call   405ab0 <table_get_cell_ptr@@Base>
  404886:	mov    rax,QWORD PTR [rax]
  404889:	vmovss xmm0,DWORD PTR [rax]
  40488d:	pop    rax
  40488e:	ret    
  40488f:	nop

0000000000404890 <table_get_double@@Base>:
  404890:	push   rax
  404891:	call   405ab0 <table_get_cell_ptr@@Base>
  404896:	mov    rax,QWORD PTR [rax]
  404899:	vmovsd xmm0,QWORD PTR [rax]
  40489d:	pop    rax
  40489e:	ret    
  40489f:	nop

00000000004048a0 <table_get_ldouble@@Base>:
  4048a0:	push   rax
  4048a1:	call   405ab0 <table_get_cell_ptr@@Base>
  4048a6:	mov    rax,QWORD PTR [rax]
  4048a9:	fld    TBYTE PTR [rax]
  4048ab:	pop    rax
  4048ac:	ret    
  4048ad:	nop    DWORD PTR [rax]

00000000004048b0 <table_get_char@@Base>:
  4048b0:	push   rax
  4048b1:	call   405ab0 <table_get_cell_ptr@@Base>
  4048b6:	mov    rax,QWORD PTR [rax]
  4048b9:	mov    al,BYTE PTR [rax]
  4048bb:	pop    rcx
  4048bc:	ret    
  4048bd:	nop    DWORD PTR [rax]

00000000004048c0 <table_get_uchar@@Base>:
  4048c0:	push   rax
  4048c1:	call   405ab0 <table_get_cell_ptr@@Base>
  4048c6:	mov    rax,QWORD PTR [rax]
  4048c9:	mov    al,BYTE PTR [rax]
  4048cb:	pop    rcx
  4048cc:	ret    
  4048cd:	nop    DWORD PTR [rax]

00000000004048d0 <table_get_string@@Base>:
  4048d0:	push   rax
  4048d1:	call   405ab0 <table_get_cell_ptr@@Base>
  4048d6:	mov    rax,QWORD PTR [rax]
  4048d9:	pop    rcx
  4048da:	ret    
  4048db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004048e0 <table_get_ptr@@Base>:
  4048e0:	push   rax
  4048e1:	call   405ab0 <table_get_cell_ptr@@Base>
  4048e6:	mov    rax,QWORD PTR [rax]
  4048e9:	pop    rcx
  4048ea:	ret    
  4048eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004048f0 <table_row_init@@Base>:
  4048f0:	push   r14
  4048f2:	push   rbx
  4048f3:	push   rax
  4048f4:	mov    rax,QWORD PTR [rdi+0x18]
  4048f8:	mov    r14,QWORD PTR [rdi+0x20]
  4048fc:	movsxd rbx,esi
  4048ff:	shl    rax,0x3
  404903:	mov    rdi,rax
  404906:	call   403090 <malloc@plt>
  40490b:	mov    QWORD PTR [r14+rbx*8],rax
  40490f:	add    rsp,0x8
  404913:	pop    rbx
  404914:	pop    r14
  404916:	ret    
  404917:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404920 <table_get_row_ptr@@Base>:
  404920:	movsxd rax,esi
  404923:	shl    rax,0x3
  404927:	add    rax,QWORD PTR [rdi+0x20]
  40492b:	ret    
  40492c:	nop    DWORD PTR [rax+0x0]

0000000000404930 <table_row_destroy@@Base>:
  404930:	push   rbp
  404931:	push   r15
  404933:	push   r14
  404935:	push   r13
  404937:	push   r12
  404939:	push   rbx
  40493a:	push   rax
  40493b:	mov    r14d,esi
  40493e:	mov    r15,rdi
  404941:	call   403c90 <table_get_column_length@@Base>
  404946:	mov    r12,QWORD PTR [r15+0x20]
  40494a:	movsxd r13,r14d
  40494d:	test   eax,eax
  40494f:	jle    404974 <table_row_destroy@@Base+0x44>
  404951:	mov    ebp,eax
  404953:	xor    ebx,ebx
  404955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40495f:	nop
  404960:	mov    rdi,r15
  404963:	mov    esi,r14d
  404966:	mov    edx,ebx
  404968:	call   405ad0 <table_cell_destroy@@Base>
  40496d:	add    ebx,0x1
  404970:	cmp    ebp,ebx
  404972:	jne    404960 <table_row_destroy@@Base+0x30>
  404974:	mov    rdi,QWORD PTR [r12+r13*8]
  404978:	add    rsp,0x8
  40497c:	test   rdi,rdi
  40497f:	je     404990 <table_row_destroy@@Base+0x60>
  404981:	pop    rbx
  404982:	pop    r12
  404984:	pop    r13
  404986:	pop    r14
  404988:	pop    r15
  40498a:	pop    rbp
  40498b:	jmp    403030 <free@plt>
  404990:	pop    rbx
  404991:	pop    r12
  404993:	pop    r13
  404995:	pop    r14
  404997:	pop    r15
  404999:	pop    rbp
  40499a:	ret    
  40499b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004049a0 <table_get_row_length@@Base>:
  4049a0:	mov    eax,DWORD PTR [rdi+0x28]
  4049a3:	ret    
  4049a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049ae:	xchg   ax,ax

00000000004049b0 <table_add_row@@Base>:
  4049b0:	push   rbp
  4049b1:	push   r15
  4049b3:	push   r14
  4049b5:	push   r12
  4049b7:	push   rbx
  4049b8:	mov    r12,rdi
  4049bb:	mov    r15d,DWORD PTR [rdi+0x28]
  4049bf:	movsxd r14,r15d
  4049c2:	mov    rsi,QWORD PTR [rdi+0x30]
  4049c6:	mov    rax,r14
  4049c9:	or     rax,rsi
  4049cc:	shr    rax,0x20
  4049d0:	je     404a71 <table_add_row@@Base+0xc1>
  4049d6:	xor    edx,edx
  4049d8:	mov    rax,r14
  4049db:	div    rsi
  4049de:	test   rdx,rdx
  4049e1:	jne    404a08 <table_add_row@@Base+0x58>
  4049e3:	add    rsi,QWORD PTR [r12+0x38]
  4049e8:	mov    QWORD PTR [r12+0x38],rsi
  4049ed:	mov    rdi,QWORD PTR [r12+0x20]
  4049f2:	shl    rsi,0x3
  4049f6:	call   4030b0 <realloc@plt>
  4049fb:	mov    QWORD PTR [r12+0x20],rax
  404a00:	mov    r15d,DWORD PTR [r12+0x28]
  404a05:	movsxd r14,r15d
  404a08:	mov    rdi,r12
  404a0b:	call   403c90 <table_get_column_length@@Base>
  404a10:	mov    ebp,eax
  404a12:	mov    rdi,QWORD PTR [r12+0x18]
  404a17:	mov    rbx,QWORD PTR [r12+0x20]
  404a1c:	shl    rdi,0x3
  404a20:	call   403090 <malloc@plt>
  404a25:	mov    QWORD PTR [rbx+r14*8],rax
  404a29:	test   ebp,ebp
  404a2b:	jle    404a44 <table_add_row@@Base+0x94>
  404a2d:	xor    ebx,ebx
  404a2f:	nop
  404a30:	mov    rdi,r12
  404a33:	mov    esi,r15d
  404a36:	mov    edx,ebx
  404a38:	call   405a90 <table_cell_init@@Base>
  404a3d:	add    ebx,0x1
  404a40:	cmp    ebp,ebx
  404a42:	jne    404a30 <table_add_row@@Base+0x80>
  404a44:	mov    esi,DWORD PTR [r12+0x28]
  404a49:	mov    edx,0xffffffff
  404a4e:	mov    ecx,0x2
  404a53:	mov    rdi,r12
  404a56:	call   403ba0 <table_notify@@Base>
  404a5b:	mov    eax,DWORD PTR [r12+0x28]
  404a60:	lea    ecx,[rax+0x1]
  404a63:	mov    DWORD PTR [r12+0x28],ecx
  404a68:	pop    rbx
  404a69:	pop    r12
  404a6b:	pop    r14
  404a6d:	pop    r15
  404a6f:	pop    rbp
  404a70:	ret    
  404a71:	xor    edx,edx
  404a73:	mov    eax,r15d
  404a76:	div    esi
  404a78:	test   rdx,rdx
  404a7b:	jne    404a08 <table_add_row@@Base+0x58>
  404a7d:	jmp    4049e3 <table_add_row@@Base+0x33>
  404a82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a8c:	nop    DWORD PTR [rax+0x0]

0000000000404a90 <table_remove_row@@Base>:
  404a90:	push   rbp
  404a91:	push   r15
  404a93:	push   r14
  404a95:	push   r12
  404a97:	push   rbx
  404a98:	mov    r14d,esi
  404a9b:	mov    rbx,rdi
  404a9e:	mov    r12d,DWORD PTR [rdi+0x28]
  404aa2:	call   403c90 <table_get_column_length@@Base>
  404aa7:	test   eax,eax
  404aa9:	jle    404ae1 <table_remove_row@@Base+0x51>
  404aab:	mov    r15d,eax
  404aae:	xor    ebp,ebp
  404ab0:	mov    rdi,rbx
  404ab3:	mov    esi,ebp
  404ab5:	call   403d10 <table_get_column_data_type@@Base>
  404aba:	cmp    eax,0x17
  404abd:	je     404ad9 <table_remove_row@@Base+0x49>
  404abf:	mov    rdi,rbx
  404ac2:	mov    esi,r14d
  404ac5:	mov    edx,ebp
  404ac7:	call   405ab0 <table_get_cell_ptr@@Base>
  404acc:	mov    rdi,QWORD PTR [rax]
  404acf:	test   rdi,rdi
  404ad2:	je     404ad9 <table_remove_row@@Base+0x49>
  404ad4:	call   403030 <free@plt>
  404ad9:	add    ebp,0x1
  404adc:	cmp    r15d,ebp
  404adf:	jne    404ab0 <table_remove_row@@Base+0x20>
  404ae1:	mov    rax,QWORD PTR [rbx+0x20]
  404ae5:	movsxd rbp,r14d
  404ae8:	mov    rdi,QWORD PTR [rax+rbp*8]
  404aec:	test   rdi,rdi
  404aef:	je     404af6 <table_remove_row@@Base+0x66>
  404af1:	call   403030 <free@plt>
  404af6:	add    r12d,0xffffffff
  404afa:	mov    ecx,r12d
  404afd:	sub    ecx,r14d
  404b00:	jle    404bb8 <table_remove_row@@Base+0x128>
  404b06:	movsxd rax,r12d
  404b09:	mov    rdx,rbp
  404b0c:	not    rdx
  404b0f:	add    rdx,rax
  404b12:	and    rcx,0x7
  404b16:	je     404b37 <table_remove_row@@Base+0xa7>
  404b18:	neg    rcx
  404b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b20:	mov    rsi,QWORD PTR [rbx+0x20]
  404b24:	mov    rdi,QWORD PTR [rsi+rbp*8+0x8]
  404b29:	mov    QWORD PTR [rsi+rbp*8],rdi
  404b2d:	add    rbp,0x1
  404b31:	add    rcx,0x1
  404b35:	jne    404b20 <table_remove_row@@Base+0x90>
  404b37:	cmp    rdx,0x7
  404b3b:	jb     404bb8 <table_remove_row@@Base+0x128>
  404b3d:	nop    DWORD PTR [rax]
  404b40:	mov    rcx,QWORD PTR [rbx+0x20]
  404b44:	mov    rdx,QWORD PTR [rcx+rbp*8+0x8]
  404b49:	mov    QWORD PTR [rcx+rbp*8],rdx
  404b4d:	mov    rcx,QWORD PTR [rbx+0x20]
  404b51:	mov    rdx,QWORD PTR [rcx+rbp*8+0x10]
  404b56:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  404b5b:	mov    rcx,QWORD PTR [rbx+0x20]
  404b5f:	mov    rdx,QWORD PTR [rcx+rbp*8+0x18]
  404b64:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  404b69:	mov    rcx,QWORD PTR [rbx+0x20]
  404b6d:	mov    rdx,QWORD PTR [rcx+rbp*8+0x20]
  404b72:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  404b77:	mov    rcx,QWORD PTR [rbx+0x20]
  404b7b:	mov    rdx,QWORD PTR [rcx+rbp*8+0x28]
  404b80:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  404b85:	mov    rcx,QWORD PTR [rbx+0x20]
  404b89:	mov    rdx,QWORD PTR [rcx+rbp*8+0x30]
  404b8e:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  404b93:	mov    rcx,QWORD PTR [rbx+0x20]
  404b97:	mov    rdx,QWORD PTR [rcx+rbp*8+0x38]
  404b9c:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  404ba1:	mov    rcx,QWORD PTR [rbx+0x20]
  404ba5:	mov    rdx,QWORD PTR [rcx+rbp*8+0x40]
  404baa:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  404baf:	add    rbp,0x8
  404bb3:	cmp    rax,rbp
  404bb6:	jne    404b40 <table_remove_row@@Base+0xb0>
  404bb8:	movsxd rax,DWORD PTR [rbx+0x28]
  404bbc:	add    rax,0xffffffffffffffff
  404bc0:	mov    DWORD PTR [rbx+0x28],eax
  404bc3:	mov    rcx,QWORD PTR [rbx+0x30]
  404bc7:	mov    rdx,rax
  404bca:	or     rdx,rcx
  404bcd:	shr    rdx,0x20
  404bd1:	je     404c19 <table_remove_row@@Base+0x189>
  404bd3:	xor    edx,edx
  404bd5:	div    rcx
  404bd8:	test   rdx,rdx
  404bdb:	jne    404bf9 <table_remove_row@@Base+0x169>
  404bdd:	mov    rdi,QWORD PTR [rbx+0x20]
  404be1:	mov    rsi,QWORD PTR [rbx+0x38]
  404be5:	sub    rsi,rcx
  404be8:	mov    QWORD PTR [rbx+0x38],rsi
  404bec:	shl    rsi,0x3
  404bf0:	call   4030b0 <realloc@plt>
  404bf5:	mov    QWORD PTR [rbx+0x20],rax
  404bf9:	mov    edx,0xffffffff
  404bfe:	mov    ecx,0x4
  404c03:	mov    rdi,rbx
  404c06:	mov    esi,r14d
  404c09:	call   403ba0 <table_notify@@Base>
  404c0e:	xor    eax,eax
  404c10:	pop    rbx
  404c11:	pop    r12
  404c13:	pop    r14
  404c15:	pop    r15
  404c17:	pop    rbp
  404c18:	ret    
  404c19:	xor    edx,edx
  404c1b:	div    ecx
  404c1d:	test   rdx,rdx
  404c20:	jne    404bf9 <table_remove_row@@Base+0x169>
  404c22:	jmp    404bdd <table_remove_row@@Base+0x14d>
  404c24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c2e:	xchg   ax,ax

0000000000404c30 <table_set_row_ptr@@Base>:
  404c30:	mov    rax,QWORD PTR [rdi+0x20]
  404c34:	movsxd rcx,esi
  404c37:	mov    rdx,QWORD PTR [rdx]
  404c3a:	mov    QWORD PTR [rax+rcx*8],rdx
  404c3e:	ret    
  404c3f:	nop

0000000000404c40 <table_set@@Base>:
  404c40:	push   rbp
  404c41:	push   r15
  404c43:	push   r14
  404c45:	push   r13
  404c47:	push   r12
  404c49:	push   rbx
  404c4a:	push   rax
  404c4b:	mov    r12d,r8d
  404c4e:	mov    QWORD PTR [rsp],rcx
  404c52:	mov    ebx,edx
  404c54:	mov    r14d,esi
  404c57:	mov    rbp,rdi
  404c5a:	call   405ab0 <table_get_cell_ptr@@Base>
  404c5f:	mov    r13,rax
  404c62:	mov    rdi,rbp
  404c65:	mov    esi,ebx
  404c67:	call   403c60 <table_get_col_ptr@@Base>
  404c6c:	mov    r15d,0xffffffff
  404c72:	cmp    r12d,0x17
  404c76:	ja     404eb7 <table_set@@Base+0x277>
  404c7c:	mov    ecx,r12d
  404c7f:	lea    rdx,[rip+0x2426]        # 4070ac <_IO_stdin_used@@Base+0xac>
  404c86:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  404c8a:	add    rcx,rdx
  404c8d:	jmp    rcx
  404c8f:	cmp    DWORD PTR [rax+0x8],0x0
  404c93:	jne    404eb7 <table_set@@Base+0x277>
  404c99:	jmp    404d97 <table_set@@Base+0x157>
  404c9e:	cmp    DWORD PTR [rax+0x8],0x1
  404ca2:	je     404d97 <table_set@@Base+0x157>
  404ca8:	jmp    404eb7 <table_set@@Base+0x277>
  404cad:	cmp    DWORD PTR [rax+0x8],0x2
  404cb1:	je     404e7e <table_set@@Base+0x23e>
  404cb7:	jmp    404eb7 <table_set@@Base+0x277>
  404cbc:	cmp    DWORD PTR [rax+0x8],0x3
  404cc0:	je     404e7e <table_set@@Base+0x23e>
  404cc6:	jmp    404eb7 <table_set@@Base+0x277>
  404ccb:	cmp    DWORD PTR [rax+0x8],0x4
  404ccf:	je     404d32 <table_set@@Base+0xf2>
  404cd1:	jmp    404eb7 <table_set@@Base+0x277>
  404cd6:	cmp    DWORD PTR [rax+0x8],0x5
  404cda:	je     404d32 <table_set@@Base+0xf2>
  404cdc:	jmp    404eb7 <table_set@@Base+0x277>
  404ce1:	cmp    DWORD PTR [rax+0x8],0x6
  404ce5:	je     404d97 <table_set@@Base+0x157>
  404ceb:	jmp    404eb7 <table_set@@Base+0x277>
  404cf0:	cmp    DWORD PTR [rax+0x8],0x7
  404cf4:	je     404d97 <table_set@@Base+0x157>
  404cfa:	jmp    404eb7 <table_set@@Base+0x277>
  404cff:	cmp    DWORD PTR [rax+0x8],0x8
  404d03:	je     404dce <table_set@@Base+0x18e>
  404d09:	jmp    404eb7 <table_set@@Base+0x277>
  404d0e:	cmp    DWORD PTR [rax+0x8],0x9
  404d12:	je     404dce <table_set@@Base+0x18e>
  404d18:	jmp    404eb7 <table_set@@Base+0x277>
  404d1d:	cmp    DWORD PTR [rax+0x8],0xa
  404d21:	je     404d32 <table_set@@Base+0xf2>
  404d23:	jmp    404eb7 <table_set@@Base+0x277>
  404d28:	cmp    DWORD PTR [rax+0x8],0xb
  404d2c:	jne    404eb7 <table_set@@Base+0x277>
  404d32:	mov    rax,QWORD PTR [r13+0x0]
  404d36:	test   rax,rax
  404d39:	jne    404d52 <table_set@@Base+0x112>
  404d3b:	mov    edi,0x2
  404d40:	call   403090 <malloc@plt>
  404d45:	mov    QWORD PTR [r13+0x0],rax
  404d49:	test   rax,rax
  404d4c:	je     404eb7 <table_set@@Base+0x277>
  404d52:	mov    rcx,QWORD PTR [rsp]
  404d56:	movzx  ecx,WORD PTR [rcx]
  404d59:	mov    WORD PTR [rax],cx
  404d5c:	jmp    404ea2 <table_set@@Base+0x262>
  404d61:	cmp    DWORD PTR [rax+0x8],0xc
  404d65:	je     404dce <table_set@@Base+0x18e>
  404d67:	jmp    404eb7 <table_set@@Base+0x277>
  404d6c:	cmp    DWORD PTR [rax+0x8],0xd
  404d70:	je     404dce <table_set@@Base+0x18e>
  404d72:	jmp    404eb7 <table_set@@Base+0x277>
  404d77:	cmp    DWORD PTR [rax+0x8],0xe
  404d7b:	je     404dce <table_set@@Base+0x18e>
  404d7d:	jmp    404eb7 <table_set@@Base+0x277>
  404d82:	cmp    DWORD PTR [rax+0x8],0xf
  404d86:	je     404dce <table_set@@Base+0x18e>
  404d88:	jmp    404eb7 <table_set@@Base+0x277>
  404d8d:	cmp    DWORD PTR [rax+0x8],0x10
  404d91:	jne    404eb7 <table_set@@Base+0x277>
  404d97:	mov    rax,QWORD PTR [r13+0x0]
  404d9b:	test   rax,rax
  404d9e:	jne    404db7 <table_set@@Base+0x177>
  404da0:	mov    edi,0x4
  404da5:	call   403090 <malloc@plt>
  404daa:	mov    QWORD PTR [r13+0x0],rax
  404dae:	test   rax,rax
  404db1:	je     404eb7 <table_set@@Base+0x277>
  404db7:	mov    rcx,QWORD PTR [rsp]
  404dbb:	mov    ecx,DWORD PTR [rcx]
  404dbd:	mov    DWORD PTR [rax],ecx
  404dbf:	jmp    404ea2 <table_set@@Base+0x262>
  404dc4:	cmp    DWORD PTR [rax+0x8],0x11
  404dc8:	jne    404eb7 <table_set@@Base+0x277>
  404dce:	mov    rax,QWORD PTR [r13+0x0]
  404dd2:	test   rax,rax
  404dd5:	jne    404dee <table_set@@Base+0x1ae>
  404dd7:	mov    edi,0x8
  404ddc:	call   403090 <malloc@plt>
  404de1:	mov    QWORD PTR [r13+0x0],rax
  404de5:	test   rax,rax
  404de8:	je     404eb7 <table_set@@Base+0x277>
  404dee:	mov    rcx,QWORD PTR [rsp]
  404df2:	mov    rcx,QWORD PTR [rcx]
  404df5:	mov    QWORD PTR [rax],rcx
  404df8:	jmp    404ea2 <table_set@@Base+0x262>
  404dfd:	cmp    DWORD PTR [rax+0x8],0x12
  404e01:	jne    404eb7 <table_set@@Base+0x277>
  404e07:	mov    rax,QWORD PTR [r13+0x0]
  404e0b:	test   rax,rax
  404e0e:	jne    404e27 <table_set@@Base+0x1e7>
  404e10:	mov    edi,0x10
  404e15:	call   403090 <malloc@plt>
  404e1a:	mov    QWORD PTR [r13+0x0],rax
  404e1e:	test   rax,rax
  404e21:	je     404eb7 <table_set@@Base+0x277>
  404e27:	mov    rcx,QWORD PTR [rsp]
  404e2b:	vmovups xmm0,XMMWORD PTR [rcx]
  404e2f:	vmovups XMMWORD PTR [rax],xmm0
  404e33:	jmp    404ea2 <table_set@@Base+0x262>
  404e35:	cmp    DWORD PTR [rax+0x8],0x13
  404e39:	je     404e7e <table_set@@Base+0x23e>
  404e3b:	jmp    404eb7 <table_set@@Base+0x277>
  404e3d:	cmp    DWORD PTR [rax+0x8],0x14
  404e41:	je     404e7e <table_set@@Base+0x23e>
  404e43:	jmp    404eb7 <table_set@@Base+0x277>
  404e45:	cmp    DWORD PTR [rax+0x8],0x15
  404e49:	jne    404eb7 <table_set@@Base+0x277>
  404e4b:	mov    rdi,QWORD PTR [rsp]
  404e4f:	call   403050 <strlen@plt>
  404e54:	mov    rdi,QWORD PTR [r13+0x0]
  404e58:	lea    rsi,[rax+0x1]
  404e5c:	call   4030b0 <realloc@plt>
  404e61:	mov    QWORD PTR [r13+0x0],rax
  404e65:	test   rax,rax
  404e68:	je     404eb7 <table_set@@Base+0x277>
  404e6a:	mov    rdi,rax
  404e6d:	mov    rsi,QWORD PTR [rsp]
  404e71:	call   403040 <strcpy@plt>
  404e76:	jmp    404ea2 <table_set@@Base+0x262>
  404e78:	cmp    DWORD PTR [rax+0x8],0x16
  404e7c:	jne    404eb7 <table_set@@Base+0x277>
  404e7e:	mov    rax,QWORD PTR [r13+0x0]
  404e82:	test   rax,rax
  404e85:	jne    404e9a <table_set@@Base+0x25a>
  404e87:	mov    edi,0x1
  404e8c:	call   403090 <malloc@plt>
  404e91:	mov    QWORD PTR [r13+0x0],rax
  404e95:	test   rax,rax
  404e98:	je     404eb7 <table_set@@Base+0x277>
  404e9a:	mov    rcx,QWORD PTR [rsp]
  404e9e:	mov    cl,BYTE PTR [rcx]
  404ea0:	mov    BYTE PTR [rax],cl
  404ea2:	mov    ecx,0x1
  404ea7:	mov    rdi,rbp
  404eaa:	mov    esi,r14d
  404ead:	mov    edx,ebx
  404eaf:	call   403ba0 <table_notify@@Base>
  404eb4:	xor    r15d,r15d
  404eb7:	mov    eax,r15d
  404eba:	add    rsp,0x8
  404ebe:	pop    rbx
  404ebf:	pop    r12
  404ec1:	pop    r13
  404ec3:	pop    r14
  404ec5:	pop    r15
  404ec7:	pop    rbp
  404ec8:	ret    
  404ec9:	cmp    DWORD PTR [rax+0x8],0x17
  404ecd:	jne    404eb7 <table_set@@Base+0x277>
  404ecf:	mov    rax,QWORD PTR [rsp]
  404ed3:	mov    QWORD PTR [r13+0x0],rax
  404ed7:	jmp    404ea2 <table_set@@Base+0x262>
  404ed9:	nop    DWORD PTR [rax+0x0]

0000000000404ee0 <table_set_bool@@Base>:
  404ee0:	push   rbp
  404ee1:	push   r15
  404ee3:	push   r14
  404ee5:	push   r13
  404ee7:	push   r12
  404ee9:	push   rbx
  404eea:	push   rax
  404eeb:	mov    r15d,ecx
  404eee:	mov    ebx,edx
  404ef0:	mov    r14d,esi
  404ef3:	mov    rbp,rdi
  404ef6:	call   405ab0 <table_get_cell_ptr@@Base>
  404efb:	mov    r13,rax
  404efe:	mov    rdi,rbp
  404f01:	mov    esi,ebx
  404f03:	call   403c60 <table_get_col_ptr@@Base>
  404f08:	mov    r12d,0xffffffff
  404f0e:	cmp    DWORD PTR [rax+0x8],0x16
  404f12:	jne    404f48 <table_set_bool@@Base+0x68>
  404f14:	mov    rax,QWORD PTR [r13+0x0]
  404f18:	test   rax,rax
  404f1b:	jne    404f30 <table_set_bool@@Base+0x50>
  404f1d:	mov    edi,0x1
  404f22:	call   403090 <malloc@plt>
  404f27:	mov    QWORD PTR [r13+0x0],rax
  404f2b:	test   rax,rax
  404f2e:	je     404f48 <table_set_bool@@Base+0x68>
  404f30:	mov    BYTE PTR [rax],r15b
  404f33:	mov    ecx,0x1
  404f38:	mov    rdi,rbp
  404f3b:	mov    esi,r14d
  404f3e:	mov    edx,ebx
  404f40:	call   403ba0 <table_notify@@Base>
  404f45:	xor    r12d,r12d
  404f48:	mov    eax,r12d
  404f4b:	add    rsp,0x8
  404f4f:	pop    rbx
  404f50:	pop    r12
  404f52:	pop    r13
  404f54:	pop    r14
  404f56:	pop    r15
  404f58:	pop    rbp
  404f59:	ret    
  404f5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404f60 <table_set_int@@Base>:
  404f60:	push   rbp
  404f61:	push   r15
  404f63:	push   r14
  404f65:	push   r13
  404f67:	push   r12
  404f69:	push   rbx
  404f6a:	push   rax
  404f6b:	mov    r15d,ecx
  404f6e:	mov    ebx,edx
  404f70:	mov    r14d,esi
  404f73:	mov    rbp,rdi
  404f76:	call   405ab0 <table_get_cell_ptr@@Base>
  404f7b:	mov    r13,rax
  404f7e:	mov    rdi,rbp
  404f81:	mov    esi,ebx
  404f83:	call   403c60 <table_get_col_ptr@@Base>
  404f88:	mov    r12d,0xffffffff
  404f8e:	cmp    DWORD PTR [rax+0x8],0x0
  404f92:	jne    404fc8 <table_set_int@@Base+0x68>
  404f94:	mov    rax,QWORD PTR [r13+0x0]
  404f98:	test   rax,rax
  404f9b:	jne    404fb0 <table_set_int@@Base+0x50>
  404f9d:	mov    edi,0x4
  404fa2:	call   403090 <malloc@plt>
  404fa7:	mov    QWORD PTR [r13+0x0],rax
  404fab:	test   rax,rax
  404fae:	je     404fc8 <table_set_int@@Base+0x68>
  404fb0:	mov    DWORD PTR [rax],r15d
  404fb3:	mov    ecx,0x1
  404fb8:	mov    rdi,rbp
  404fbb:	mov    esi,r14d
  404fbe:	mov    edx,ebx
  404fc0:	call   403ba0 <table_notify@@Base>
  404fc5:	xor    r12d,r12d
  404fc8:	mov    eax,r12d
  404fcb:	add    rsp,0x8
  404fcf:	pop    rbx
  404fd0:	pop    r12
  404fd2:	pop    r13
  404fd4:	pop    r14
  404fd6:	pop    r15
  404fd8:	pop    rbp
  404fd9:	ret    
  404fda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404fe0 <table_set_uint@@Base>:
  404fe0:	push   rbp
  404fe1:	push   r15
  404fe3:	push   r14
  404fe5:	push   r13
  404fe7:	push   r12
  404fe9:	push   rbx
  404fea:	push   rax
  404feb:	mov    r15d,ecx
  404fee:	mov    ebx,edx
  404ff0:	mov    r14d,esi
  404ff3:	mov    rbp,rdi
  404ff6:	call   405ab0 <table_get_cell_ptr@@Base>
  404ffb:	mov    r13,rax
  404ffe:	mov    rdi,rbp
  405001:	mov    esi,ebx
  405003:	call   403c60 <table_get_col_ptr@@Base>
  405008:	mov    r12d,0xffffffff
  40500e:	cmp    DWORD PTR [rax+0x8],0x1
  405012:	jne    405048 <table_set_uint@@Base+0x68>
  405014:	mov    rax,QWORD PTR [r13+0x0]
  405018:	test   rax,rax
  40501b:	jne    405030 <table_set_uint@@Base+0x50>
  40501d:	mov    edi,0x4
  405022:	call   403090 <malloc@plt>
  405027:	mov    QWORD PTR [r13+0x0],rax
  40502b:	test   rax,rax
  40502e:	je     405048 <table_set_uint@@Base+0x68>
  405030:	mov    DWORD PTR [rax],r15d
  405033:	mov    ecx,0x1
  405038:	mov    rdi,rbp
  40503b:	mov    esi,r14d
  40503e:	mov    edx,ebx
  405040:	call   403ba0 <table_notify@@Base>
  405045:	xor    r12d,r12d
  405048:	mov    eax,r12d
  40504b:	add    rsp,0x8
  40504f:	pop    rbx
  405050:	pop    r12
  405052:	pop    r13
  405054:	pop    r14
  405056:	pop    r15
  405058:	pop    rbp
  405059:	ret    
  40505a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405060 <table_set_int8@@Base>:
  405060:	push   rbp
  405061:	push   r15
  405063:	push   r14
  405065:	push   r13
  405067:	push   r12
  405069:	push   rbx
  40506a:	push   rax
  40506b:	mov    r15d,ecx
  40506e:	mov    ebx,edx
  405070:	mov    r14d,esi
  405073:	mov    rbp,rdi
  405076:	call   405ab0 <table_get_cell_ptr@@Base>
  40507b:	mov    r13,rax
  40507e:	mov    rdi,rbp
  405081:	mov    esi,ebx
  405083:	call   403c60 <table_get_col_ptr@@Base>
  405088:	mov    r12d,0xffffffff
  40508e:	cmp    DWORD PTR [rax+0x8],0x2
  405092:	jne    4050c8 <table_set_int8@@Base+0x68>
  405094:	mov    rax,QWORD PTR [r13+0x0]
  405098:	test   rax,rax
  40509b:	jne    4050b0 <table_set_int8@@Base+0x50>
  40509d:	mov    edi,0x1
  4050a2:	call   403090 <malloc@plt>
  4050a7:	mov    QWORD PTR [r13+0x0],rax
  4050ab:	test   rax,rax
  4050ae:	je     4050c8 <table_set_int8@@Base+0x68>
  4050b0:	mov    BYTE PTR [rax],r15b
  4050b3:	mov    ecx,0x1
  4050b8:	mov    rdi,rbp
  4050bb:	mov    esi,r14d
  4050be:	mov    edx,ebx
  4050c0:	call   403ba0 <table_notify@@Base>
  4050c5:	xor    r12d,r12d
  4050c8:	mov    eax,r12d
  4050cb:	add    rsp,0x8
  4050cf:	pop    rbx
  4050d0:	pop    r12
  4050d2:	pop    r13
  4050d4:	pop    r14
  4050d6:	pop    r15
  4050d8:	pop    rbp
  4050d9:	ret    
  4050da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004050e0 <table_set_uint8@@Base>:
  4050e0:	push   rbp
  4050e1:	push   r15
  4050e3:	push   r14
  4050e5:	push   r13
  4050e7:	push   r12
  4050e9:	push   rbx
  4050ea:	push   rax
  4050eb:	mov    r15d,ecx
  4050ee:	mov    ebx,edx
  4050f0:	mov    r14d,esi
  4050f3:	mov    rbp,rdi
  4050f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4050fb:	mov    r13,rax
  4050fe:	mov    rdi,rbp
  405101:	mov    esi,ebx
  405103:	call   403c60 <table_get_col_ptr@@Base>
  405108:	mov    r12d,0xffffffff
  40510e:	cmp    DWORD PTR [rax+0x8],0x3
  405112:	jne    405148 <table_set_uint8@@Base+0x68>
  405114:	mov    rax,QWORD PTR [r13+0x0]
  405118:	test   rax,rax
  40511b:	jne    405130 <table_set_uint8@@Base+0x50>
  40511d:	mov    edi,0x1
  405122:	call   403090 <malloc@plt>
  405127:	mov    QWORD PTR [r13+0x0],rax
  40512b:	test   rax,rax
  40512e:	je     405148 <table_set_uint8@@Base+0x68>
  405130:	mov    BYTE PTR [rax],r15b
  405133:	mov    ecx,0x1
  405138:	mov    rdi,rbp
  40513b:	mov    esi,r14d
  40513e:	mov    edx,ebx
  405140:	call   403ba0 <table_notify@@Base>
  405145:	xor    r12d,r12d
  405148:	mov    eax,r12d
  40514b:	add    rsp,0x8
  40514f:	pop    rbx
  405150:	pop    r12
  405152:	pop    r13
  405154:	pop    r14
  405156:	pop    r15
  405158:	pop    rbp
  405159:	ret    
  40515a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405160 <table_set_int16@@Base>:
  405160:	push   rbp
  405161:	push   r15
  405163:	push   r14
  405165:	push   r13
  405167:	push   r12
  405169:	push   rbx
  40516a:	push   rax
  40516b:	mov    r15d,ecx
  40516e:	mov    ebx,edx
  405170:	mov    r14d,esi
  405173:	mov    rbp,rdi
  405176:	call   405ab0 <table_get_cell_ptr@@Base>
  40517b:	mov    r13,rax
  40517e:	mov    rdi,rbp
  405181:	mov    esi,ebx
  405183:	call   403c60 <table_get_col_ptr@@Base>
  405188:	mov    r12d,0xffffffff
  40518e:	cmp    DWORD PTR [rax+0x8],0x4
  405192:	jne    4051c9 <table_set_int16@@Base+0x69>
  405194:	mov    rax,QWORD PTR [r13+0x0]
  405198:	test   rax,rax
  40519b:	jne    4051b0 <table_set_int16@@Base+0x50>
  40519d:	mov    edi,0x2
  4051a2:	call   403090 <malloc@plt>
  4051a7:	mov    QWORD PTR [r13+0x0],rax
  4051ab:	test   rax,rax
  4051ae:	je     4051c9 <table_set_int16@@Base+0x69>
  4051b0:	mov    WORD PTR [rax],r15w
  4051b4:	mov    ecx,0x1
  4051b9:	mov    rdi,rbp
  4051bc:	mov    esi,r14d
  4051bf:	mov    edx,ebx
  4051c1:	call   403ba0 <table_notify@@Base>
  4051c6:	xor    r12d,r12d
  4051c9:	mov    eax,r12d
  4051cc:	add    rsp,0x8
  4051d0:	pop    rbx
  4051d1:	pop    r12
  4051d3:	pop    r13
  4051d5:	pop    r14
  4051d7:	pop    r15
  4051d9:	pop    rbp
  4051da:	ret    
  4051db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004051e0 <table_set_uint16@@Base>:
  4051e0:	push   rbp
  4051e1:	push   r15
  4051e3:	push   r14
  4051e5:	push   r13
  4051e7:	push   r12
  4051e9:	push   rbx
  4051ea:	push   rax
  4051eb:	mov    r15d,ecx
  4051ee:	mov    ebx,edx
  4051f0:	mov    r14d,esi
  4051f3:	mov    rbp,rdi
  4051f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4051fb:	mov    r13,rax
  4051fe:	mov    rdi,rbp
  405201:	mov    esi,ebx
  405203:	call   403c60 <table_get_col_ptr@@Base>
  405208:	mov    r12d,0xffffffff
  40520e:	cmp    DWORD PTR [rax+0x8],0x5
  405212:	jne    405249 <table_set_uint16@@Base+0x69>
  405214:	mov    rax,QWORD PTR [r13+0x0]
  405218:	test   rax,rax
  40521b:	jne    405230 <table_set_uint16@@Base+0x50>
  40521d:	mov    edi,0x2
  405222:	call   403090 <malloc@plt>
  405227:	mov    QWORD PTR [r13+0x0],rax
  40522b:	test   rax,rax
  40522e:	je     405249 <table_set_uint16@@Base+0x69>
  405230:	mov    WORD PTR [rax],r15w
  405234:	mov    ecx,0x1
  405239:	mov    rdi,rbp
  40523c:	mov    esi,r14d
  40523f:	mov    edx,ebx
  405241:	call   403ba0 <table_notify@@Base>
  405246:	xor    r12d,r12d
  405249:	mov    eax,r12d
  40524c:	add    rsp,0x8
  405250:	pop    rbx
  405251:	pop    r12
  405253:	pop    r13
  405255:	pop    r14
  405257:	pop    r15
  405259:	pop    rbp
  40525a:	ret    
  40525b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405260 <table_set_int32@@Base>:
  405260:	push   rbp
  405261:	push   r15
  405263:	push   r14
  405265:	push   r13
  405267:	push   r12
  405269:	push   rbx
  40526a:	push   rax
  40526b:	mov    r15d,ecx
  40526e:	mov    ebx,edx
  405270:	mov    r14d,esi
  405273:	mov    rbp,rdi
  405276:	call   405ab0 <table_get_cell_ptr@@Base>
  40527b:	mov    r13,rax
  40527e:	mov    rdi,rbp
  405281:	mov    esi,ebx
  405283:	call   403c60 <table_get_col_ptr@@Base>
  405288:	mov    r12d,0xffffffff
  40528e:	cmp    DWORD PTR [rax+0x8],0x6
  405292:	jne    4052c8 <table_set_int32@@Base+0x68>
  405294:	mov    rax,QWORD PTR [r13+0x0]
  405298:	test   rax,rax
  40529b:	jne    4052b0 <table_set_int32@@Base+0x50>
  40529d:	mov    edi,0x4
  4052a2:	call   403090 <malloc@plt>
  4052a7:	mov    QWORD PTR [r13+0x0],rax
  4052ab:	test   rax,rax
  4052ae:	je     4052c8 <table_set_int32@@Base+0x68>
  4052b0:	mov    DWORD PTR [rax],r15d
  4052b3:	mov    ecx,0x1
  4052b8:	mov    rdi,rbp
  4052bb:	mov    esi,r14d
  4052be:	mov    edx,ebx
  4052c0:	call   403ba0 <table_notify@@Base>
  4052c5:	xor    r12d,r12d
  4052c8:	mov    eax,r12d
  4052cb:	add    rsp,0x8
  4052cf:	pop    rbx
  4052d0:	pop    r12
  4052d2:	pop    r13
  4052d4:	pop    r14
  4052d6:	pop    r15
  4052d8:	pop    rbp
  4052d9:	ret    
  4052da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004052e0 <table_set_uint32@@Base>:
  4052e0:	push   rbp
  4052e1:	push   r15
  4052e3:	push   r14
  4052e5:	push   r13
  4052e7:	push   r12
  4052e9:	push   rbx
  4052ea:	push   rax
  4052eb:	mov    r15d,ecx
  4052ee:	mov    ebx,edx
  4052f0:	mov    r14d,esi
  4052f3:	mov    rbp,rdi
  4052f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4052fb:	mov    r13,rax
  4052fe:	mov    rdi,rbp
  405301:	mov    esi,ebx
  405303:	call   403c60 <table_get_col_ptr@@Base>
  405308:	mov    r12d,0xffffffff
  40530e:	cmp    DWORD PTR [rax+0x8],0x7
  405312:	jne    405348 <table_set_uint32@@Base+0x68>
  405314:	mov    rax,QWORD PTR [r13+0x0]
  405318:	test   rax,rax
  40531b:	jne    405330 <table_set_uint32@@Base+0x50>
  40531d:	mov    edi,0x4
  405322:	call   403090 <malloc@plt>
  405327:	mov    QWORD PTR [r13+0x0],rax
  40532b:	test   rax,rax
  40532e:	je     405348 <table_set_uint32@@Base+0x68>
  405330:	mov    DWORD PTR [rax],r15d
  405333:	mov    ecx,0x1
  405338:	mov    rdi,rbp
  40533b:	mov    esi,r14d
  40533e:	mov    edx,ebx
  405340:	call   403ba0 <table_notify@@Base>
  405345:	xor    r12d,r12d
  405348:	mov    eax,r12d
  40534b:	add    rsp,0x8
  40534f:	pop    rbx
  405350:	pop    r12
  405352:	pop    r13
  405354:	pop    r14
  405356:	pop    r15
  405358:	pop    rbp
  405359:	ret    
  40535a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405360 <table_set_int64@@Base>:
  405360:	push   rbp
  405361:	push   r15
  405363:	push   r14
  405365:	push   r13
  405367:	push   r12
  405369:	push   rbx
  40536a:	push   rax
  40536b:	mov    r15,rcx
  40536e:	mov    ebx,edx
  405370:	mov    r14d,esi
  405373:	mov    rbp,rdi
  405376:	call   405ab0 <table_get_cell_ptr@@Base>
  40537b:	mov    r13,rax
  40537e:	mov    rdi,rbp
  405381:	mov    esi,ebx
  405383:	call   403c60 <table_get_col_ptr@@Base>
  405388:	mov    r12d,0xffffffff
  40538e:	cmp    DWORD PTR [rax+0x8],0x8
  405392:	jne    4053c8 <table_set_int64@@Base+0x68>
  405394:	mov    rax,QWORD PTR [r13+0x0]
  405398:	test   rax,rax
  40539b:	jne    4053b0 <table_set_int64@@Base+0x50>
  40539d:	mov    edi,0x8
  4053a2:	call   403090 <malloc@plt>
  4053a7:	mov    QWORD PTR [r13+0x0],rax
  4053ab:	test   rax,rax
  4053ae:	je     4053c8 <table_set_int64@@Base+0x68>
  4053b0:	mov    QWORD PTR [rax],r15
  4053b3:	mov    ecx,0x1
  4053b8:	mov    rdi,rbp
  4053bb:	mov    esi,r14d
  4053be:	mov    edx,ebx
  4053c0:	call   403ba0 <table_notify@@Base>
  4053c5:	xor    r12d,r12d
  4053c8:	mov    eax,r12d
  4053cb:	add    rsp,0x8
  4053cf:	pop    rbx
  4053d0:	pop    r12
  4053d2:	pop    r13
  4053d4:	pop    r14
  4053d6:	pop    r15
  4053d8:	pop    rbp
  4053d9:	ret    
  4053da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004053e0 <table_set_uint64@@Base>:
  4053e0:	push   rbp
  4053e1:	push   r15
  4053e3:	push   r14
  4053e5:	push   r13
  4053e7:	push   r12
  4053e9:	push   rbx
  4053ea:	push   rax
  4053eb:	mov    r15,rcx
  4053ee:	mov    ebx,edx
  4053f0:	mov    r14d,esi
  4053f3:	mov    rbp,rdi
  4053f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4053fb:	mov    r13,rax
  4053fe:	mov    rdi,rbp
  405401:	mov    esi,ebx
  405403:	call   403c60 <table_get_col_ptr@@Base>
  405408:	mov    r12d,0xffffffff
  40540e:	cmp    DWORD PTR [rax+0x8],0x9
  405412:	jne    405448 <table_set_uint64@@Base+0x68>
  405414:	mov    rax,QWORD PTR [r13+0x0]
  405418:	test   rax,rax
  40541b:	jne    405430 <table_set_uint64@@Base+0x50>
  40541d:	mov    edi,0x8
  405422:	call   403090 <malloc@plt>
  405427:	mov    QWORD PTR [r13+0x0],rax
  40542b:	test   rax,rax
  40542e:	je     405448 <table_set_uint64@@Base+0x68>
  405430:	mov    QWORD PTR [rax],r15
  405433:	mov    ecx,0x1
  405438:	mov    rdi,rbp
  40543b:	mov    esi,r14d
  40543e:	mov    edx,ebx
  405440:	call   403ba0 <table_notify@@Base>
  405445:	xor    r12d,r12d
  405448:	mov    eax,r12d
  40544b:	add    rsp,0x8
  40544f:	pop    rbx
  405450:	pop    r12
  405452:	pop    r13
  405454:	pop    r14
  405456:	pop    r15
  405458:	pop    rbp
  405459:	ret    
  40545a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405460 <table_set_short@@Base>:
  405460:	push   rbp
  405461:	push   r15
  405463:	push   r14
  405465:	push   r13
  405467:	push   r12
  405469:	push   rbx
  40546a:	push   rax
  40546b:	mov    r15d,ecx
  40546e:	mov    ebx,edx
  405470:	mov    r14d,esi
  405473:	mov    rbp,rdi
  405476:	call   405ab0 <table_get_cell_ptr@@Base>
  40547b:	mov    r13,rax
  40547e:	mov    rdi,rbp
  405481:	mov    esi,ebx
  405483:	call   403c60 <table_get_col_ptr@@Base>
  405488:	mov    r12d,0xffffffff
  40548e:	cmp    DWORD PTR [rax+0x8],0xa
  405492:	jne    4054c9 <table_set_short@@Base+0x69>
  405494:	mov    rax,QWORD PTR [r13+0x0]
  405498:	test   rax,rax
  40549b:	jne    4054b0 <table_set_short@@Base+0x50>
  40549d:	mov    edi,0x2
  4054a2:	call   403090 <malloc@plt>
  4054a7:	mov    QWORD PTR [r13+0x0],rax
  4054ab:	test   rax,rax
  4054ae:	je     4054c9 <table_set_short@@Base+0x69>
  4054b0:	mov    WORD PTR [rax],r15w
  4054b4:	mov    ecx,0x1
  4054b9:	mov    rdi,rbp
  4054bc:	mov    esi,r14d
  4054bf:	mov    edx,ebx
  4054c1:	call   403ba0 <table_notify@@Base>
  4054c6:	xor    r12d,r12d
  4054c9:	mov    eax,r12d
  4054cc:	add    rsp,0x8
  4054d0:	pop    rbx
  4054d1:	pop    r12
  4054d3:	pop    r13
  4054d5:	pop    r14
  4054d7:	pop    r15
  4054d9:	pop    rbp
  4054da:	ret    
  4054db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004054e0 <table_set_ushort@@Base>:
  4054e0:	push   rbp
  4054e1:	push   r15
  4054e3:	push   r14
  4054e5:	push   r13
  4054e7:	push   r12
  4054e9:	push   rbx
  4054ea:	push   rax
  4054eb:	mov    r15d,ecx
  4054ee:	mov    ebx,edx
  4054f0:	mov    r14d,esi
  4054f3:	mov    rbp,rdi
  4054f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4054fb:	mov    r13,rax
  4054fe:	mov    rdi,rbp
  405501:	mov    esi,ebx
  405503:	call   403c60 <table_get_col_ptr@@Base>
  405508:	mov    r12d,0xffffffff
  40550e:	cmp    DWORD PTR [rax+0x8],0xb
  405512:	jne    405549 <table_set_ushort@@Base+0x69>
  405514:	mov    rax,QWORD PTR [r13+0x0]
  405518:	test   rax,rax
  40551b:	jne    405530 <table_set_ushort@@Base+0x50>
  40551d:	mov    edi,0x2
  405522:	call   403090 <malloc@plt>
  405527:	mov    QWORD PTR [r13+0x0],rax
  40552b:	test   rax,rax
  40552e:	je     405549 <table_set_ushort@@Base+0x69>
  405530:	mov    WORD PTR [rax],r15w
  405534:	mov    ecx,0x1
  405539:	mov    rdi,rbp
  40553c:	mov    esi,r14d
  40553f:	mov    edx,ebx
  405541:	call   403ba0 <table_notify@@Base>
  405546:	xor    r12d,r12d
  405549:	mov    eax,r12d
  40554c:	add    rsp,0x8
  405550:	pop    rbx
  405551:	pop    r12
  405553:	pop    r13
  405555:	pop    r14
  405557:	pop    r15
  405559:	pop    rbp
  40555a:	ret    
  40555b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405560 <table_set_long@@Base>:
  405560:	push   rbp
  405561:	push   r15
  405563:	push   r14
  405565:	push   r13
  405567:	push   r12
  405569:	push   rbx
  40556a:	push   rax
  40556b:	mov    r15,rcx
  40556e:	mov    ebx,edx
  405570:	mov    r14d,esi
  405573:	mov    rbp,rdi
  405576:	call   405ab0 <table_get_cell_ptr@@Base>
  40557b:	mov    r13,rax
  40557e:	mov    rdi,rbp
  405581:	mov    esi,ebx
  405583:	call   403c60 <table_get_col_ptr@@Base>
  405588:	mov    r12d,0xffffffff
  40558e:	cmp    DWORD PTR [rax+0x8],0xc
  405592:	jne    4055c8 <table_set_long@@Base+0x68>
  405594:	mov    rax,QWORD PTR [r13+0x0]
  405598:	test   rax,rax
  40559b:	jne    4055b0 <table_set_long@@Base+0x50>
  40559d:	mov    edi,0x8
  4055a2:	call   403090 <malloc@plt>
  4055a7:	mov    QWORD PTR [r13+0x0],rax
  4055ab:	test   rax,rax
  4055ae:	je     4055c8 <table_set_long@@Base+0x68>
  4055b0:	mov    QWORD PTR [rax],r15
  4055b3:	mov    ecx,0x1
  4055b8:	mov    rdi,rbp
  4055bb:	mov    esi,r14d
  4055be:	mov    edx,ebx
  4055c0:	call   403ba0 <table_notify@@Base>
  4055c5:	xor    r12d,r12d
  4055c8:	mov    eax,r12d
  4055cb:	add    rsp,0x8
  4055cf:	pop    rbx
  4055d0:	pop    r12
  4055d2:	pop    r13
  4055d4:	pop    r14
  4055d6:	pop    r15
  4055d8:	pop    rbp
  4055d9:	ret    
  4055da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004055e0 <table_set_ulong@@Base>:
  4055e0:	push   rbp
  4055e1:	push   r15
  4055e3:	push   r14
  4055e5:	push   r13
  4055e7:	push   r12
  4055e9:	push   rbx
  4055ea:	push   rax
  4055eb:	mov    r15,rcx
  4055ee:	mov    ebx,edx
  4055f0:	mov    r14d,esi
  4055f3:	mov    rbp,rdi
  4055f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4055fb:	mov    r13,rax
  4055fe:	mov    rdi,rbp
  405601:	mov    esi,ebx
  405603:	call   403c60 <table_get_col_ptr@@Base>
  405608:	mov    r12d,0xffffffff
  40560e:	cmp    DWORD PTR [rax+0x8],0xd
  405612:	jne    405648 <table_set_ulong@@Base+0x68>
  405614:	mov    rax,QWORD PTR [r13+0x0]
  405618:	test   rax,rax
  40561b:	jne    405630 <table_set_ulong@@Base+0x50>
  40561d:	mov    edi,0x8
  405622:	call   403090 <malloc@plt>
  405627:	mov    QWORD PTR [r13+0x0],rax
  40562b:	test   rax,rax
  40562e:	je     405648 <table_set_ulong@@Base+0x68>
  405630:	mov    QWORD PTR [rax],r15
  405633:	mov    ecx,0x1
  405638:	mov    rdi,rbp
  40563b:	mov    esi,r14d
  40563e:	mov    edx,ebx
  405640:	call   403ba0 <table_notify@@Base>
  405645:	xor    r12d,r12d
  405648:	mov    eax,r12d
  40564b:	add    rsp,0x8
  40564f:	pop    rbx
  405650:	pop    r12
  405652:	pop    r13
  405654:	pop    r14
  405656:	pop    r15
  405658:	pop    rbp
  405659:	ret    
  40565a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405660 <table_set_llong@@Base>:
  405660:	push   rbp
  405661:	push   r15
  405663:	push   r14
  405665:	push   r13
  405667:	push   r12
  405669:	push   rbx
  40566a:	push   rax
  40566b:	mov    r15,rcx
  40566e:	mov    ebx,edx
  405670:	mov    r14d,esi
  405673:	mov    rbp,rdi
  405676:	call   405ab0 <table_get_cell_ptr@@Base>
  40567b:	mov    r13,rax
  40567e:	mov    rdi,rbp
  405681:	mov    esi,ebx
  405683:	call   403c60 <table_get_col_ptr@@Base>
  405688:	mov    r12d,0xffffffff
  40568e:	cmp    DWORD PTR [rax+0x8],0xe
  405692:	jne    4056c8 <table_set_llong@@Base+0x68>
  405694:	mov    rax,QWORD PTR [r13+0x0]
  405698:	test   rax,rax
  40569b:	jne    4056b0 <table_set_llong@@Base+0x50>
  40569d:	mov    edi,0x8
  4056a2:	call   403090 <malloc@plt>
  4056a7:	mov    QWORD PTR [r13+0x0],rax
  4056ab:	test   rax,rax
  4056ae:	je     4056c8 <table_set_llong@@Base+0x68>
  4056b0:	mov    QWORD PTR [rax],r15
  4056b3:	mov    ecx,0x1
  4056b8:	mov    rdi,rbp
  4056bb:	mov    esi,r14d
  4056be:	mov    edx,ebx
  4056c0:	call   403ba0 <table_notify@@Base>
  4056c5:	xor    r12d,r12d
  4056c8:	mov    eax,r12d
  4056cb:	add    rsp,0x8
  4056cf:	pop    rbx
  4056d0:	pop    r12
  4056d2:	pop    r13
  4056d4:	pop    r14
  4056d6:	pop    r15
  4056d8:	pop    rbp
  4056d9:	ret    
  4056da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004056e0 <table_set_ullong@@Base>:
  4056e0:	push   rbp
  4056e1:	push   r15
  4056e3:	push   r14
  4056e5:	push   r13
  4056e7:	push   r12
  4056e9:	push   rbx
  4056ea:	push   rax
  4056eb:	mov    r15,rcx
  4056ee:	mov    ebx,edx
  4056f0:	mov    r14d,esi
  4056f3:	mov    rbp,rdi
  4056f6:	call   405ab0 <table_get_cell_ptr@@Base>
  4056fb:	mov    r13,rax
  4056fe:	mov    rdi,rbp
  405701:	mov    esi,ebx
  405703:	call   403c60 <table_get_col_ptr@@Base>
  405708:	mov    r12d,0xffffffff
  40570e:	cmp    DWORD PTR [rax+0x8],0xf
  405712:	jne    405748 <table_set_ullong@@Base+0x68>
  405714:	mov    rax,QWORD PTR [r13+0x0]
  405718:	test   rax,rax
  40571b:	jne    405730 <table_set_ullong@@Base+0x50>
  40571d:	mov    edi,0x8
  405722:	call   403090 <malloc@plt>
  405727:	mov    QWORD PTR [r13+0x0],rax
  40572b:	test   rax,rax
  40572e:	je     405748 <table_set_ullong@@Base+0x68>
  405730:	mov    QWORD PTR [rax],r15
  405733:	mov    ecx,0x1
  405738:	mov    rdi,rbp
  40573b:	mov    esi,r14d
  40573e:	mov    edx,ebx
  405740:	call   403ba0 <table_notify@@Base>
  405745:	xor    r12d,r12d
  405748:	mov    eax,r12d
  40574b:	add    rsp,0x8
  40574f:	pop    rbx
  405750:	pop    r12
  405752:	pop    r13
  405754:	pop    r14
  405756:	pop    r15
  405758:	pop    rbp
  405759:	ret    
  40575a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405760 <table_set_float@@Base>:
  405760:	push   rbp
  405761:	push   r15
  405763:	push   r14
  405765:	push   r12
  405767:	push   rbx
  405768:	sub    rsp,0x10
  40576c:	vmovss DWORD PTR [rsp+0xc],xmm0
  405772:	mov    ebx,edx
  405774:	mov    r14d,esi
  405777:	mov    rbp,rdi
  40577a:	call   405ab0 <table_get_cell_ptr@@Base>
  40577f:	mov    r12,rax
  405782:	mov    rdi,rbp
  405785:	mov    esi,ebx
  405787:	call   403c60 <table_get_col_ptr@@Base>
  40578c:	mov    r15d,0xffffffff
  405792:	cmp    DWORD PTR [rax+0x8],0x10
  405796:	jne    4057d3 <table_set_float@@Base+0x73>
  405798:	mov    rax,QWORD PTR [r12]
  40579c:	test   rax,rax
  40579f:	jne    4057b4 <table_set_float@@Base+0x54>
  4057a1:	mov    edi,0x4
  4057a6:	call   403090 <malloc@plt>
  4057ab:	mov    QWORD PTR [r12],rax
  4057af:	test   rax,rax
  4057b2:	je     4057d3 <table_set_float@@Base+0x73>
  4057b4:	vmovss xmm0,DWORD PTR [rsp+0xc]
  4057ba:	vmovss DWORD PTR [rax],xmm0
  4057be:	mov    ecx,0x1
  4057c3:	mov    rdi,rbp
  4057c6:	mov    esi,r14d
  4057c9:	mov    edx,ebx
  4057cb:	call   403ba0 <table_notify@@Base>
  4057d0:	xor    r15d,r15d
  4057d3:	mov    eax,r15d
  4057d6:	add    rsp,0x10
  4057da:	pop    rbx
  4057db:	pop    r12
  4057dd:	pop    r14
  4057df:	pop    r15
  4057e1:	pop    rbp
  4057e2:	ret    
  4057e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057ed:	nop    DWORD PTR [rax]

00000000004057f0 <table_set_double@@Base>:
  4057f0:	push   rbp
  4057f1:	push   r15
  4057f3:	push   r14
  4057f5:	push   r12
  4057f7:	push   rbx
  4057f8:	sub    rsp,0x10
  4057fc:	vmovsd QWORD PTR [rsp+0x8],xmm0
  405802:	mov    ebx,edx
  405804:	mov    r14d,esi
  405807:	mov    rbp,rdi
  40580a:	call   405ab0 <table_get_cell_ptr@@Base>
  40580f:	mov    r12,rax
  405812:	mov    rdi,rbp
  405815:	mov    esi,ebx
  405817:	call   403c60 <table_get_col_ptr@@Base>
  40581c:	mov    r15d,0xffffffff
  405822:	cmp    DWORD PTR [rax+0x8],0x11
  405826:	jne    405863 <table_set_double@@Base+0x73>
  405828:	mov    rax,QWORD PTR [r12]
  40582c:	test   rax,rax
  40582f:	jne    405844 <table_set_double@@Base+0x54>
  405831:	mov    edi,0x8
  405836:	call   403090 <malloc@plt>
  40583b:	mov    QWORD PTR [r12],rax
  40583f:	test   rax,rax
  405842:	je     405863 <table_set_double@@Base+0x73>
  405844:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40584a:	vmovsd QWORD PTR [rax],xmm0
  40584e:	mov    ecx,0x1
  405853:	mov    rdi,rbp
  405856:	mov    esi,r14d
  405859:	mov    edx,ebx
  40585b:	call   403ba0 <table_notify@@Base>
  405860:	xor    r15d,r15d
  405863:	mov    eax,r15d
  405866:	add    rsp,0x10
  40586a:	pop    rbx
  40586b:	pop    r12
  40586d:	pop    r14
  40586f:	pop    r15
  405871:	pop    rbp
  405872:	ret    
  405873:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40587d:	nop    DWORD PTR [rax]

0000000000405880 <table_set_ldouble@@Base>:
  405880:	push   rbp
  405881:	push   r15
  405883:	push   r14
  405885:	push   r12
  405887:	push   rbx
  405888:	sub    rsp,0x20
  40588c:	mov    r15d,edx
  40588f:	mov    r14d,esi
  405892:	mov    rbp,rdi
  405895:	fld    TBYTE PTR [rsp+0x50]
  405899:	fstp   TBYTE PTR [rsp+0x14]
  40589d:	call   405ab0 <table_get_cell_ptr@@Base>
  4058a2:	mov    r12,rax
  4058a5:	mov    rdi,rbp
  4058a8:	mov    esi,r15d
  4058ab:	call   403c60 <table_get_col_ptr@@Base>
  4058b0:	mov    ebx,0xffffffff
  4058b5:	cmp    DWORD PTR [rax+0x8],0x12
  4058b9:	jne    405902 <table_set_ldouble@@Base+0x82>
  4058bb:	mov    rax,QWORD PTR [r12]
  4058bf:	test   rax,rax
  4058c2:	jne    4058d7 <table_set_ldouble@@Base+0x57>
  4058c4:	mov    edi,0x10
  4058c9:	call   403090 <malloc@plt>
  4058ce:	mov    QWORD PTR [r12],rax
  4058d2:	test   rax,rax
  4058d5:	je     405902 <table_set_ldouble@@Base+0x82>
  4058d7:	fld    TBYTE PTR [rsp+0x14]
  4058db:	fstp   TBYTE PTR [rax]
  4058dd:	movzx  ecx,WORD PTR [rsp+0x12]
  4058e2:	mov    WORD PTR [rax+0xe],cx
  4058e6:	mov    ecx,DWORD PTR [rsp+0xe]
  4058ea:	mov    DWORD PTR [rax+0xa],ecx
  4058ed:	mov    ecx,0x1
  4058f2:	mov    rdi,rbp
  4058f5:	mov    esi,r14d
  4058f8:	mov    edx,r15d
  4058fb:	call   403ba0 <table_notify@@Base>
  405900:	xor    ebx,ebx
  405902:	mov    eax,ebx
  405904:	add    rsp,0x20
  405908:	pop    rbx
  405909:	pop    r12
  40590b:	pop    r14
  40590d:	pop    r15
  40590f:	pop    rbp
  405910:	ret    
  405911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40591b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405920 <table_set_string@@Base>:
  405920:	mov    r8d,0x15
  405926:	jmp    404c40 <table_set@@Base>
  40592b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405930 <table_set_char@@Base>:
  405930:	push   rbp
  405931:	push   r15
  405933:	push   r14
  405935:	push   r13
  405937:	push   r12
  405939:	push   rbx
  40593a:	push   rax
  40593b:	mov    r15d,ecx
  40593e:	mov    ebx,edx
  405940:	mov    r14d,esi
  405943:	mov    rbp,rdi
  405946:	call   405ab0 <table_get_cell_ptr@@Base>
  40594b:	mov    r13,rax
  40594e:	mov    rdi,rbp
  405951:	mov    esi,ebx
  405953:	call   403c60 <table_get_col_ptr@@Base>
  405958:	mov    r12d,0xffffffff
  40595e:	cmp    DWORD PTR [rax+0x8],0x13
  405962:	jne    405998 <table_set_char@@Base+0x68>
  405964:	mov    rax,QWORD PTR [r13+0x0]
  405968:	test   rax,rax
  40596b:	jne    405980 <table_set_char@@Base+0x50>
  40596d:	mov    edi,0x1
  405972:	call   403090 <malloc@plt>
  405977:	mov    QWORD PTR [r13+0x0],rax
  40597b:	test   rax,rax
  40597e:	je     405998 <table_set_char@@Base+0x68>
  405980:	mov    BYTE PTR [rax],r15b
  405983:	mov    ecx,0x1
  405988:	mov    rdi,rbp
  40598b:	mov    esi,r14d
  40598e:	mov    edx,ebx
  405990:	call   403ba0 <table_notify@@Base>
  405995:	xor    r12d,r12d
  405998:	mov    eax,r12d
  40599b:	add    rsp,0x8
  40599f:	pop    rbx
  4059a0:	pop    r12
  4059a2:	pop    r13
  4059a4:	pop    r14
  4059a6:	pop    r15
  4059a8:	pop    rbp
  4059a9:	ret    
  4059aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004059b0 <table_set_uchar@@Base>:
  4059b0:	push   rbp
  4059b1:	push   r15
  4059b3:	push   r14
  4059b5:	push   r13
  4059b7:	push   r12
  4059b9:	push   rbx
  4059ba:	push   rax
  4059bb:	mov    r15d,ecx
  4059be:	mov    ebx,edx
  4059c0:	mov    r14d,esi
  4059c3:	mov    rbp,rdi
  4059c6:	call   405ab0 <table_get_cell_ptr@@Base>
  4059cb:	mov    r13,rax
  4059ce:	mov    rdi,rbp
  4059d1:	mov    esi,ebx
  4059d3:	call   403c60 <table_get_col_ptr@@Base>
  4059d8:	mov    r12d,0xffffffff
  4059de:	cmp    DWORD PTR [rax+0x8],0x14
  4059e2:	jne    405a18 <table_set_uchar@@Base+0x68>
  4059e4:	mov    rax,QWORD PTR [r13+0x0]
  4059e8:	test   rax,rax
  4059eb:	jne    405a00 <table_set_uchar@@Base+0x50>
  4059ed:	mov    edi,0x1
  4059f2:	call   403090 <malloc@plt>
  4059f7:	mov    QWORD PTR [r13+0x0],rax
  4059fb:	test   rax,rax
  4059fe:	je     405a18 <table_set_uchar@@Base+0x68>
  405a00:	mov    BYTE PTR [rax],r15b
  405a03:	mov    ecx,0x1
  405a08:	mov    rdi,rbp
  405a0b:	mov    esi,r14d
  405a0e:	mov    edx,ebx
  405a10:	call   403ba0 <table_notify@@Base>
  405a15:	xor    r12d,r12d
  405a18:	mov    eax,r12d
  405a1b:	add    rsp,0x8
  405a1f:	pop    rbx
  405a20:	pop    r12
  405a22:	pop    r13
  405a24:	pop    r14
  405a26:	pop    r15
  405a28:	pop    rbp
  405a29:	ret    
  405a2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405a30 <table_set_ptr@@Base>:
  405a30:	push   rbp
  405a31:	push   r15
  405a33:	push   r14
  405a35:	push   r12
  405a37:	push   rbx
  405a38:	mov    r15,rcx
  405a3b:	mov    ebx,edx
  405a3d:	mov    r14d,esi
  405a40:	mov    rbp,rdi
  405a43:	call   405ab0 <table_get_cell_ptr@@Base>
  405a48:	mov    r12,rax
  405a4b:	mov    rdi,rbp
  405a4e:	mov    esi,ebx
  405a50:	call   403c60 <table_get_col_ptr@@Base>
  405a55:	mov    rcx,rax
  405a58:	mov    eax,0xffffffff
  405a5d:	cmp    DWORD PTR [rcx+0x8],0x17
  405a61:	jne    405a7b <table_set_ptr@@Base+0x4b>
  405a63:	mov    QWORD PTR [r12],r15
  405a67:	mov    ecx,0x1
  405a6c:	mov    rdi,rbp
  405a6f:	mov    esi,r14d
  405a72:	mov    edx,ebx
  405a74:	call   403ba0 <table_notify@@Base>
  405a79:	xor    eax,eax
  405a7b:	pop    rbx
  405a7c:	pop    r12
  405a7e:	pop    r14
  405a80:	pop    r15
  405a82:	pop    rbp
  405a83:	ret    
  405a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a8e:	xchg   ax,ax

0000000000405a90 <table_cell_init@@Base>:
  405a90:	push   rbx
  405a91:	mov    ebx,edx
  405a93:	call   404920 <table_get_row_ptr@@Base>
  405a98:	mov    rax,QWORD PTR [rax]
  405a9b:	movsxd rcx,ebx
  405a9e:	mov    QWORD PTR [rax+rcx*8],0x0
  405aa6:	pop    rbx
  405aa7:	ret    
  405aa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405ab0 <table_get_cell_ptr@@Base>:
  405ab0:	push   rbx
  405ab1:	mov    ebx,edx
  405ab3:	call   404920 <table_get_row_ptr@@Base>
  405ab8:	movsxd rcx,ebx
  405abb:	shl    rcx,0x3
  405abf:	add    rcx,QWORD PTR [rax]
  405ac2:	mov    rax,rcx
  405ac5:	pop    rbx
  405ac6:	ret    
  405ac7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405ad0 <table_cell_destroy@@Base>:
  405ad0:	push   rbp
  405ad1:	push   r14
  405ad3:	push   rbx
  405ad4:	mov    ebx,edx
  405ad6:	mov    r14d,esi
  405ad9:	mov    rbp,rdi
  405adc:	mov    esi,edx
  405ade:	call   403d10 <table_get_column_data_type@@Base>
  405ae3:	cmp    eax,0x17
  405ae6:	je     405b0b <table_cell_destroy@@Base+0x3b>
  405ae8:	mov    rdi,rbp
  405aeb:	mov    esi,r14d
  405aee:	call   404920 <table_get_row_ptr@@Base>
  405af3:	mov    rax,QWORD PTR [rax]
  405af6:	movsxd rcx,ebx
  405af9:	mov    rdi,QWORD PTR [rax+rcx*8]
  405afd:	test   rdi,rdi
  405b00:	je     405b0b <table_cell_destroy@@Base+0x3b>
  405b02:	pop    rbx
  405b03:	pop    r14
  405b05:	pop    rbp
  405b06:	jmp    403030 <free@plt>
  405b0b:	pop    rbx
  405b0c:	pop    r14
  405b0e:	pop    rbp
  405b0f:	ret    

0000000000405b10 <table_cell_to_buffer@@Base>:
  405b10:	push   rbp
  405b11:	push   r15
  405b13:	push   r14
  405b15:	push   r12
  405b17:	push   rbx
  405b18:	sub    rsp,0x10
  405b1c:	mov    r14,r8
  405b1f:	mov    r15,rcx
  405b22:	mov    ebp,edx
  405b24:	mov    r12d,esi
  405b27:	mov    rbx,rdi
  405b2a:	mov    esi,edx
  405b2c:	call   403d10 <table_get_column_data_type@@Base>
  405b31:	cmp    eax,0x17
  405b34:	ja     405dc5 <table_cell_to_buffer@@Base+0x2b5>
  405b3a:	mov    eax,eax
  405b3c:	lea    rcx,[rip+0x15c9]        # 40710c <_IO_stdin_used@@Base+0x10c>
  405b43:	movsxd rax,DWORD PTR [rcx+rax*4]
  405b47:	add    rax,rcx
  405b4a:	jmp    rax
  405b4c:	mov    rdi,rbx
  405b4f:	mov    esi,r12d
  405b52:	mov    edx,ebp
  405b54:	call   404780 <table_get_int@@Base>
  405b59:	jmp    405bdf <table_cell_to_buffer@@Base+0xcf>
  405b5e:	mov    rdi,rbx
  405b61:	mov    esi,r12d
  405b64:	mov    edx,ebp
  405b66:	call   404790 <table_get_uint@@Base>
  405b6b:	jmp    405bf3 <table_cell_to_buffer@@Base+0xe3>
  405b70:	mov    rdi,rbx
  405b73:	mov    esi,r12d
  405b76:	mov    edx,ebp
  405b78:	call   4047a0 <table_get_int8@@Base>
  405b7d:	movsx  ecx,al
  405b80:	jmp    405d8b <table_cell_to_buffer@@Base+0x27b>
  405b85:	mov    rdi,rbx
  405b88:	mov    esi,r12d
  405b8b:	mov    edx,ebp
  405b8d:	call   4047b0 <table_get_uint8@@Base>
  405b92:	movzx  ecx,al
  405b95:	lea    rdx,[rip+0x1633]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  405b9c:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405ba1:	mov    rdi,rbx
  405ba4:	mov    esi,r12d
  405ba7:	mov    edx,ebp
  405ba9:	call   4047c0 <table_get_int16@@Base>
  405bae:	movsx  ecx,ax
  405bb1:	jmp    405d8b <table_cell_to_buffer@@Base+0x27b>
  405bb6:	mov    rdi,rbx
  405bb9:	mov    esi,r12d
  405bbc:	mov    edx,ebp
  405bbe:	call   4047d0 <table_get_uint16@@Base>
  405bc3:	movzx  ecx,ax
  405bc6:	lea    rdx,[rip+0x1602]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  405bcd:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405bd2:	mov    rdi,rbx
  405bd5:	mov    esi,r12d
  405bd8:	mov    edx,ebp
  405bda:	call   4047e0 <table_get_int32@@Base>
  405bdf:	mov    ecx,eax
  405be1:	jmp    405d8b <table_cell_to_buffer@@Base+0x27b>
  405be6:	mov    rdi,rbx
  405be9:	mov    esi,r12d
  405bec:	mov    edx,ebp
  405bee:	call   4047f0 <table_get_uint32@@Base>
  405bf3:	mov    ecx,eax
  405bf5:	lea    rdx,[rip+0x15d3]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  405bfc:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405c01:	mov    rdi,rbx
  405c04:	mov    esi,r12d
  405c07:	mov    edx,ebp
  405c09:	call   404800 <table_get_int64@@Base>
  405c0e:	jmp    405c64 <table_cell_to_buffer@@Base+0x154>
  405c10:	mov    rdi,rbx
  405c13:	mov    esi,r12d
  405c16:	mov    edx,ebp
  405c18:	call   404810 <table_get_uint64@@Base>
  405c1d:	jmp    405c80 <table_cell_to_buffer@@Base+0x170>
  405c1f:	mov    rdi,rbx
  405c22:	mov    esi,r12d
  405c25:	mov    edx,ebp
  405c27:	call   404820 <table_get_short@@Base>
  405c2c:	movsx  ecx,ax
  405c2f:	lea    rdx,[rip+0x15a4]        # 4071da <_IO_stdin_used@@Base+0x1da>
  405c36:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405c3b:	mov    rdi,rbx
  405c3e:	mov    esi,r12d
  405c41:	mov    edx,ebp
  405c43:	call   404830 <table_get_ushort@@Base>
  405c48:	movzx  ecx,ax
  405c4b:	lea    rdx,[rip+0x158c]        # 4071de <_IO_stdin_used@@Base+0x1de>
  405c52:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405c57:	mov    rdi,rbx
  405c5a:	mov    esi,r12d
  405c5d:	mov    edx,ebp
  405c5f:	call   404840 <table_get_long@@Base>
  405c64:	mov    rcx,rax
  405c67:	lea    rdx,[rip+0x1564]        # 4071d2 <_IO_stdin_used@@Base+0x1d2>
  405c6e:	jmp    405db8 <table_cell_to_buffer@@Base+0x2a8>
  405c73:	mov    rdi,rbx
  405c76:	mov    esi,r12d
  405c79:	mov    edx,ebp
  405c7b:	call   404850 <table_get_ulong@@Base>
  405c80:	mov    rcx,rax
  405c83:	lea    rdx,[rip+0x154c]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  405c8a:	jmp    405db8 <table_cell_to_buffer@@Base+0x2a8>
  405c8f:	mov    rdi,rbx
  405c92:	mov    esi,r12d
  405c95:	mov    edx,ebp
  405c97:	call   404860 <table_get_llong@@Base>
  405c9c:	mov    rcx,rax
  405c9f:	lea    rdx,[rip+0x153c]        # 4071e2 <_IO_stdin_used@@Base+0x1e2>
  405ca6:	jmp    405db8 <table_cell_to_buffer@@Base+0x2a8>
  405cab:	mov    rdi,rbx
  405cae:	mov    esi,r12d
  405cb1:	mov    edx,ebp
  405cb3:	call   404870 <table_get_ullong@@Base>
  405cb8:	mov    rcx,rax
  405cbb:	lea    rdx,[rip+0x1525]        # 4071e7 <_IO_stdin_used@@Base+0x1e7>
  405cc2:	jmp    405db8 <table_cell_to_buffer@@Base+0x2a8>
  405cc7:	mov    rdi,rbx
  405cca:	mov    esi,r12d
  405ccd:	mov    edx,ebp
  405ccf:	call   404880 <table_get_float@@Base>
  405cd4:	vcvtss2sd xmm0,xmm0,xmm0
  405cd8:	lea    rdx,[rip+0x1510]        # 4071ef <_IO_stdin_used@@Base+0x1ef>
  405cdf:	jmp    405cf5 <table_cell_to_buffer@@Base+0x1e5>
  405ce1:	mov    rdi,rbx
  405ce4:	mov    esi,r12d
  405ce7:	mov    edx,ebp
  405ce9:	call   404890 <table_get_double@@Base>
  405cee:	lea    rdx,[rip+0x14fd]        # 4071f2 <_IO_stdin_used@@Base+0x1f2>
  405cf5:	mov    al,0x1
  405cf7:	mov    rdi,r15
  405cfa:	mov    rsi,r14
  405cfd:	call   403070 <snprintf@plt>
  405d02:	jmp    405dc5 <table_cell_to_buffer@@Base+0x2b5>
  405d07:	mov    rdi,rbx
  405d0a:	mov    esi,r12d
  405d0d:	mov    edx,ebp
  405d0f:	call   4048a0 <table_get_ldouble@@Base>
  405d14:	fstp   TBYTE PTR [rsp]
  405d17:	lea    rdx,[rip+0x14d8]        # 4071f6 <_IO_stdin_used@@Base+0x1f6>
  405d1e:	xor    eax,eax
  405d20:	mov    rdi,r15
  405d23:	mov    rsi,r14
  405d26:	call   403070 <snprintf@plt>
  405d2b:	jmp    405dc5 <table_cell_to_buffer@@Base+0x2b5>
  405d30:	mov    rdi,rbx
  405d33:	mov    esi,r12d
  405d36:	mov    edx,ebp
  405d38:	call   4048b0 <table_get_char@@Base>
  405d3d:	movsx  ecx,al
  405d40:	lea    rdx,[rip+0x14b3]        # 4071fa <_IO_stdin_used@@Base+0x1fa>
  405d47:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405d49:	mov    rdi,rbx
  405d4c:	mov    esi,r12d
  405d4f:	mov    edx,ebp
  405d51:	call   4048c0 <table_get_uchar@@Base>
  405d56:	movzx  ecx,al
  405d59:	lea    rdx,[rip+0x149a]        # 4071fa <_IO_stdin_used@@Base+0x1fa>
  405d60:	jmp    405d92 <table_cell_to_buffer@@Base+0x282>
  405d62:	mov    rdi,rbx
  405d65:	mov    esi,r12d
  405d68:	mov    edx,ebp
  405d6a:	call   4048d0 <table_get_string@@Base>
  405d6f:	mov    rcx,rax
  405d72:	lea    rdx,[rip+0x1473]        # 4071ec <_IO_stdin_used@@Base+0x1ec>
  405d79:	jmp    405db8 <table_cell_to_buffer@@Base+0x2a8>
  405d7b:	mov    rdi,rbx
  405d7e:	mov    esi,r12d
  405d81:	mov    edx,ebp
  405d83:	call   404770 <table_get_bool@@Base>
  405d88:	movzx  ecx,al
  405d8b:	lea    rdx,[rip+0x143a]        # 4071cc <_IO_stdin_used@@Base+0x1cc>
  405d92:	xor    eax,eax
  405d94:	mov    rdi,r15
  405d97:	mov    rsi,r14
  405d9a:	call   403070 <snprintf@plt>
  405d9f:	jmp    405dc5 <table_cell_to_buffer@@Base+0x2b5>
  405da1:	mov    rdi,rbx
  405da4:	mov    esi,r12d
  405da7:	mov    edx,ebp
  405da9:	call   4048e0 <table_get_ptr@@Base>
  405dae:	mov    rcx,rax
  405db1:	lea    rdx,[rip+0x1445]        # 4071fd <_IO_stdin_used@@Base+0x1fd>
  405db8:	xor    eax,eax
  405dba:	mov    rdi,r15
  405dbd:	mov    rsi,r14
  405dc0:	call   403070 <snprintf@plt>
  405dc5:	xor    eax,eax
  405dc7:	add    rsp,0x10
  405dcb:	pop    rbx
  405dcc:	pop    r12
  405dce:	pop    r14
  405dd0:	pop    r15
  405dd2:	pop    rbp
  405dd3:	ret    
  405dd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dde:	xchg   ax,ax

0000000000405de0 <table_cell_from_buffer@@Base>:
  405de0:	push   rbp
  405de1:	push   r15
  405de3:	push   r14
  405de5:	push   rbx
  405de6:	sub    rsp,0x118
  405ded:	mov    rbx,rcx
  405df0:	mov    r15d,edx
  405df3:	mov    r14d,esi
  405df6:	mov    rbp,rdi
  405df9:	mov    esi,edx
  405dfb:	call   403d10 <table_get_column_data_type@@Base>
  405e00:	cmp    eax,0x17
  405e03:	ja     4063af <table_cell_from_buffer@@Base+0x5cf>
  405e09:	mov    eax,eax
  405e0b:	lea    rcx,[rip+0x135a]        # 40716c <_IO_stdin_used@@Base+0x16c>
  405e12:	movsxd rax,DWORD PTR [rcx+rax*4]
  405e16:	add    rax,rcx
  405e19:	jmp    rax
  405e1b:	lea    rsi,[rip+0x13aa]        # 4071cc <_IO_stdin_used@@Base+0x1cc>
  405e22:	lea    rdx,[rsp+0x10]
  405e27:	xor    eax,eax
  405e29:	mov    rdi,rbx
  405e2c:	call   4030a0 <__isoc99_sscanf@plt>
  405e31:	mov    ebx,0xffffffff
  405e36:	cmp    eax,0x1
  405e39:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405e3f:	mov    ecx,DWORD PTR [rsp+0x10]
  405e43:	mov    rdi,rbp
  405e46:	mov    esi,r14d
  405e49:	mov    edx,r15d
  405e4c:	call   404f60 <table_set_int@@Base>
  405e51:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405e56:	lea    rsi,[rip+0x1372]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  405e5d:	lea    rdx,[rsp+0x10]
  405e62:	xor    eax,eax
  405e64:	mov    rdi,rbx
  405e67:	call   4030a0 <__isoc99_sscanf@plt>
  405e6c:	mov    ebx,0xffffffff
  405e71:	cmp    eax,0x1
  405e74:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405e7a:	mov    ecx,DWORD PTR [rsp+0x10]
  405e7e:	mov    rdi,rbp
  405e81:	mov    esi,r14d
  405e84:	mov    edx,r15d
  405e87:	call   404fe0 <table_set_uint@@Base>
  405e8c:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405e91:	lea    rsi,[rip+0x1368]        # 407200 <_IO_stdin_used@@Base+0x200>
  405e98:	lea    rdx,[rsp+0x10]
  405e9d:	xor    eax,eax
  405e9f:	mov    rdi,rbx
  405ea2:	call   4030a0 <__isoc99_sscanf@plt>
  405ea7:	mov    ebx,0xffffffff
  405eac:	cmp    eax,0x1
  405eaf:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405eb5:	movsx  ecx,BYTE PTR [rsp+0x10]
  405eba:	mov    rdi,rbp
  405ebd:	mov    esi,r14d
  405ec0:	mov    edx,r15d
  405ec3:	call   405060 <table_set_int8@@Base>
  405ec8:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405ecd:	lea    rsi,[rip+0x1331]        # 407205 <_IO_stdin_used@@Base+0x205>
  405ed4:	lea    rdx,[rsp+0x10]
  405ed9:	xor    eax,eax
  405edb:	mov    rdi,rbx
  405ede:	call   4030a0 <__isoc99_sscanf@plt>
  405ee3:	mov    ebx,0xffffffff
  405ee8:	cmp    eax,0x1
  405eeb:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405ef1:	movzx  ecx,BYTE PTR [rsp+0x10]
  405ef6:	mov    rdi,rbp
  405ef9:	mov    esi,r14d
  405efc:	mov    edx,r15d
  405eff:	call   4050e0 <table_set_uint8@@Base>
  405f04:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405f09:	lea    rsi,[rip+0x12ca]        # 4071da <_IO_stdin_used@@Base+0x1da>
  405f10:	lea    rdx,[rsp+0x10]
  405f15:	xor    eax,eax
  405f17:	mov    rdi,rbx
  405f1a:	call   4030a0 <__isoc99_sscanf@plt>
  405f1f:	mov    ebx,0xffffffff
  405f24:	cmp    eax,0x1
  405f27:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405f2d:	movsx  ecx,WORD PTR [rsp+0x10]
  405f32:	mov    rdi,rbp
  405f35:	mov    esi,r14d
  405f38:	mov    edx,r15d
  405f3b:	call   405160 <table_set_int16@@Base>
  405f40:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405f45:	lea    rsi,[rip+0x1292]        # 4071de <_IO_stdin_used@@Base+0x1de>
  405f4c:	lea    rdx,[rsp+0x10]
  405f51:	xor    eax,eax
  405f53:	mov    rdi,rbx
  405f56:	call   4030a0 <__isoc99_sscanf@plt>
  405f5b:	mov    ebx,0xffffffff
  405f60:	cmp    eax,0x1
  405f63:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405f69:	movzx  ecx,WORD PTR [rsp+0x10]
  405f6e:	mov    rdi,rbp
  405f71:	mov    esi,r14d
  405f74:	mov    edx,r15d
  405f77:	call   4051e0 <table_set_uint16@@Base>
  405f7c:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405f81:	lea    rsi,[rip+0x1244]        # 4071cc <_IO_stdin_used@@Base+0x1cc>
  405f88:	lea    rdx,[rsp+0x10]
  405f8d:	xor    eax,eax
  405f8f:	mov    rdi,rbx
  405f92:	call   4030a0 <__isoc99_sscanf@plt>
  405f97:	mov    ebx,0xffffffff
  405f9c:	cmp    eax,0x1
  405f9f:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405fa5:	mov    ecx,DWORD PTR [rsp+0x10]
  405fa9:	mov    rdi,rbp
  405fac:	mov    esi,r14d
  405faf:	mov    edx,r15d
  405fb2:	call   405260 <table_set_int32@@Base>
  405fb7:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405fbc:	lea    rsi,[rip+0x120c]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  405fc3:	lea    rdx,[rsp+0x10]
  405fc8:	xor    eax,eax
  405fca:	mov    rdi,rbx
  405fcd:	call   4030a0 <__isoc99_sscanf@plt>
  405fd2:	mov    ebx,0xffffffff
  405fd7:	cmp    eax,0x1
  405fda:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  405fe0:	mov    ecx,DWORD PTR [rsp+0x10]
  405fe4:	mov    rdi,rbp
  405fe7:	mov    esi,r14d
  405fea:	mov    edx,r15d
  405fed:	call   4052e0 <table_set_uint32@@Base>
  405ff2:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  405ff7:	lea    rsi,[rip+0x11d4]        # 4071d2 <_IO_stdin_used@@Base+0x1d2>
  405ffe:	lea    rdx,[rsp+0x10]
  406003:	xor    eax,eax
  406005:	mov    rdi,rbx
  406008:	call   4030a0 <__isoc99_sscanf@plt>
  40600d:	mov    ebx,0xffffffff
  406012:	cmp    eax,0x1
  406015:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  40601b:	mov    rcx,QWORD PTR [rsp+0x10]
  406020:	mov    rdi,rbp
  406023:	mov    esi,r14d
  406026:	mov    edx,r15d
  406029:	call   405360 <table_set_int64@@Base>
  40602e:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  406033:	lea    rsi,[rip+0x119c]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  40603a:	lea    rdx,[rsp+0x10]
  40603f:	xor    eax,eax
  406041:	mov    rdi,rbx
  406044:	call   4030a0 <__isoc99_sscanf@plt>
  406049:	mov    ebx,0xffffffff
  40604e:	cmp    eax,0x1
  406051:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406057:	mov    rcx,QWORD PTR [rsp+0x10]
  40605c:	mov    rdi,rbp
  40605f:	mov    esi,r14d
  406062:	mov    edx,r15d
  406065:	call   4053e0 <table_set_uint64@@Base>
  40606a:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  40606f:	lea    rsi,[rip+0x1164]        # 4071da <_IO_stdin_used@@Base+0x1da>
  406076:	lea    rdx,[rsp+0x10]
  40607b:	xor    eax,eax
  40607d:	mov    rdi,rbx
  406080:	call   4030a0 <__isoc99_sscanf@plt>
  406085:	mov    ebx,0xffffffff
  40608a:	cmp    eax,0x1
  40608d:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406093:	movsx  ecx,WORD PTR [rsp+0x10]
  406098:	mov    rdi,rbp
  40609b:	mov    esi,r14d
  40609e:	mov    edx,r15d
  4060a1:	call   405460 <table_set_short@@Base>
  4060a6:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  4060ab:	lea    rsi,[rip+0x112c]        # 4071de <_IO_stdin_used@@Base+0x1de>
  4060b2:	lea    rdx,[rsp+0x10]
  4060b7:	xor    eax,eax
  4060b9:	mov    rdi,rbx
  4060bc:	call   4030a0 <__isoc99_sscanf@plt>
  4060c1:	mov    ebx,0xffffffff
  4060c6:	cmp    eax,0x1
  4060c9:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  4060cf:	movzx  ecx,WORD PTR [rsp+0x10]
  4060d4:	mov    rdi,rbp
  4060d7:	mov    esi,r14d
  4060da:	mov    edx,r15d
  4060dd:	call   4054e0 <table_set_ushort@@Base>
  4060e2:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  4060e7:	lea    rsi,[rip+0x10e4]        # 4071d2 <_IO_stdin_used@@Base+0x1d2>
  4060ee:	lea    rdx,[rsp+0x10]
  4060f3:	xor    eax,eax
  4060f5:	mov    rdi,rbx
  4060f8:	call   4030a0 <__isoc99_sscanf@plt>
  4060fd:	mov    ebx,0xffffffff
  406102:	cmp    eax,0x1
  406105:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  40610b:	mov    rcx,QWORD PTR [rsp+0x10]
  406110:	mov    rdi,rbp
  406113:	mov    esi,r14d
  406116:	mov    edx,r15d
  406119:	call   405560 <table_set_long@@Base>
  40611e:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  406123:	lea    rsi,[rip+0x10ac]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  40612a:	lea    rdx,[rsp+0x10]
  40612f:	xor    eax,eax
  406131:	mov    rdi,rbx
  406134:	call   4030a0 <__isoc99_sscanf@plt>
  406139:	mov    ebx,0xffffffff
  40613e:	cmp    eax,0x1
  406141:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406147:	mov    rcx,QWORD PTR [rsp+0x10]
  40614c:	mov    rdi,rbp
  40614f:	mov    esi,r14d
  406152:	mov    edx,r15d
  406155:	call   4055e0 <table_set_ulong@@Base>
  40615a:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  40615f:	lea    rsi,[rip+0x107c]        # 4071e2 <_IO_stdin_used@@Base+0x1e2>
  406166:	lea    rdx,[rsp+0x10]
  40616b:	xor    eax,eax
  40616d:	mov    rdi,rbx
  406170:	call   4030a0 <__isoc99_sscanf@plt>
  406175:	mov    ebx,0xffffffff
  40617a:	cmp    eax,0x1
  40617d:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406183:	mov    rcx,QWORD PTR [rsp+0x10]
  406188:	mov    rdi,rbp
  40618b:	mov    esi,r14d
  40618e:	mov    edx,r15d
  406191:	call   405660 <table_set_llong@@Base>
  406196:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  40619b:	lea    rsi,[rip+0x1045]        # 4071e7 <_IO_stdin_used@@Base+0x1e7>
  4061a2:	lea    rdx,[rsp+0x10]
  4061a7:	xor    eax,eax
  4061a9:	mov    rdi,rbx
  4061ac:	call   4030a0 <__isoc99_sscanf@plt>
  4061b1:	mov    ebx,0xffffffff
  4061b6:	cmp    eax,0x1
  4061b9:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  4061bf:	mov    rcx,QWORD PTR [rsp+0x10]
  4061c4:	mov    rdi,rbp
  4061c7:	mov    esi,r14d
  4061ca:	mov    edx,r15d
  4061cd:	call   4056e0 <table_set_ullong@@Base>
  4061d2:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  4061d7:	lea    rsi,[rip+0x1011]        # 4071ef <_IO_stdin_used@@Base+0x1ef>
  4061de:	lea    rdx,[rsp+0x10]
  4061e3:	xor    eax,eax
  4061e5:	mov    rdi,rbx
  4061e8:	call   4030a0 <__isoc99_sscanf@plt>
  4061ed:	mov    ebx,0xffffffff
  4061f2:	cmp    eax,0x1
  4061f5:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  4061fb:	vmovss xmm0,DWORD PTR [rsp+0x10]
  406201:	mov    rdi,rbp
  406204:	mov    esi,r14d
  406207:	mov    edx,r15d
  40620a:	call   405760 <table_set_float@@Base>
  40620f:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  406214:	lea    rsi,[rip+0xfd7]        # 4071f2 <_IO_stdin_used@@Base+0x1f2>
  40621b:	lea    rdx,[rsp+0x10]
  406220:	xor    eax,eax
  406222:	mov    rdi,rbx
  406225:	call   4030a0 <__isoc99_sscanf@plt>
  40622a:	mov    ebx,0xffffffff
  40622f:	cmp    eax,0x1
  406232:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406238:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  40623e:	mov    rdi,rbp
  406241:	mov    esi,r14d
  406244:	mov    edx,r15d
  406247:	call   4057f0 <table_set_double@@Base>
  40624c:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  406251:	lea    rsi,[rip+0xf9e]        # 4071f6 <_IO_stdin_used@@Base+0x1f6>
  406258:	lea    rdx,[rsp+0x10]
  40625d:	xor    eax,eax
  40625f:	mov    rdi,rbx
  406262:	call   4030a0 <__isoc99_sscanf@plt>
  406267:	mov    ebx,0xffffffff
  40626c:	cmp    eax,0x1
  40626f:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406275:	fld    TBYTE PTR [rsp+0x10]
  406279:	fstp   TBYTE PTR [rsp]
  40627c:	mov    rdi,rbp
  40627f:	mov    esi,r14d
  406282:	mov    edx,r15d
  406285:	call   405880 <table_set_ldouble@@Base>
  40628a:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  40628f:	lea    rsi,[rip+0xf64]        # 4071fa <_IO_stdin_used@@Base+0x1fa>
  406296:	lea    rdx,[rsp+0x10]
  40629b:	xor    eax,eax
  40629d:	mov    rdi,rbx
  4062a0:	call   4030a0 <__isoc99_sscanf@plt>
  4062a5:	mov    ebx,0xffffffff
  4062aa:	cmp    eax,0x1
  4062ad:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  4062b3:	movsx  ecx,BYTE PTR [rsp+0x10]
  4062b8:	mov    rdi,rbp
  4062bb:	mov    esi,r14d
  4062be:	mov    edx,r15d
  4062c1:	call   405930 <table_set_char@@Base>
  4062c6:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  4062cb:	lea    rsi,[rip+0xf28]        # 4071fa <_IO_stdin_used@@Base+0x1fa>
  4062d2:	lea    rdx,[rsp+0x10]
  4062d7:	xor    eax,eax
  4062d9:	mov    rdi,rbx
  4062dc:	call   4030a0 <__isoc99_sscanf@plt>
  4062e1:	mov    ebx,0xffffffff
  4062e6:	cmp    eax,0x1
  4062e9:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  4062ef:	movzx  ecx,BYTE PTR [rsp+0x10]
  4062f4:	mov    rdi,rbp
  4062f7:	mov    esi,r14d
  4062fa:	mov    edx,r15d
  4062fd:	call   4059b0 <table_set_uchar@@Base>
  406302:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  406307:	lea    rsi,[rip+0xede]        # 4071ec <_IO_stdin_used@@Base+0x1ec>
  40630e:	lea    rdx,[rsp+0x10]
  406313:	xor    eax,eax
  406315:	mov    rdi,rbx
  406318:	call   4030a0 <__isoc99_sscanf@plt>
  40631d:	mov    ebx,0xffffffff
  406322:	cmp    eax,0x1
  406325:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  40632b:	lea    rcx,[rsp+0x10]
  406330:	mov    rdi,rbp
  406333:	mov    esi,r14d
  406336:	mov    edx,r15d
  406339:	call   405920 <table_set_string@@Base>
  40633e:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  406340:	lea    rsi,[rip+0xe85]        # 4071cc <_IO_stdin_used@@Base+0x1cc>
  406347:	lea    rdx,[rsp+0x10]
  40634c:	xor    eax,eax
  40634e:	mov    rdi,rbx
  406351:	call   4030a0 <__isoc99_sscanf@plt>
  406356:	mov    ebx,0xffffffff
  40635b:	cmp    eax,0x1
  40635e:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  406360:	cmp    DWORD PTR [rsp+0x10],0x0
  406365:	je     4063c1 <table_cell_from_buffer@@Base+0x5e1>
  406367:	mov    ecx,0x1
  40636c:	mov    rdi,rbp
  40636f:	mov    esi,r14d
  406372:	mov    edx,r15d
  406375:	call   404ee0 <table_set_bool@@Base>
  40637a:	jmp    4063af <table_cell_from_buffer@@Base+0x5cf>
  40637c:	lea    rsi,[rip+0xe7a]        # 4071fd <_IO_stdin_used@@Base+0x1fd>
  406383:	lea    rdx,[rsp+0x10]
  406388:	xor    eax,eax
  40638a:	mov    rdi,rbx
  40638d:	call   4030a0 <__isoc99_sscanf@plt>
  406392:	mov    ebx,0xffffffff
  406397:	cmp    eax,0x1
  40639a:	jne    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  40639c:	mov    rcx,QWORD PTR [rsp+0x10]
  4063a1:	mov    rdi,rbp
  4063a4:	mov    esi,r14d
  4063a7:	mov    edx,r15d
  4063aa:	call   405a30 <table_set_ptr@@Base>
  4063af:	xor    ebx,ebx
  4063b1:	mov    eax,ebx
  4063b3:	add    rsp,0x118
  4063ba:	pop    rbx
  4063bb:	pop    r14
  4063bd:	pop    r15
  4063bf:	pop    rbp
  4063c0:	ret    
  4063c1:	xor    ebx,ebx
  4063c3:	xor    ecx,ecx
  4063c5:	mov    rdi,rbp
  4063c8:	mov    esi,r14d
  4063cb:	mov    edx,r15d
  4063ce:	call   404ee0 <table_set_bool@@Base>
  4063d3:	jmp    4063b1 <table_cell_from_buffer@@Base+0x5d1>
  4063d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063df:	nop

00000000004063e0 <table_cell_nullify@@Base>:
  4063e0:	push   rbp
  4063e1:	push   rbx
  4063e2:	push   rax
  4063e3:	mov    ebp,edx
  4063e5:	call   404920 <table_get_row_ptr@@Base>
  4063ea:	mov    rbx,QWORD PTR [rax]
  4063ed:	movsxd rbp,ebp
  4063f0:	mov    rdi,QWORD PTR [rbx+rbp*8]
  4063f4:	test   rdi,rdi
  4063f7:	je     406406 <table_cell_nullify@@Base+0x26>
  4063f9:	call   403030 <free@plt>
  4063fe:	mov    QWORD PTR [rbx+rbp*8],0x0
  406406:	xor    eax,eax
  406408:	add    rsp,0x8
  40640c:	pop    rbx
  40640d:	pop    rbp
  40640e:	ret    
  40640f:	nop

0000000000406410 <__libc_csu_init@@Base>:
  406410:	endbr64 
  406414:	push   r15
  406416:	lea    r15,[rip+0x3923]        # 409d40 <_IO_stdin_used@@Base+0x2d40>
  40641d:	push   r14
  40641f:	mov    r14,rdx
  406422:	push   r13
  406424:	mov    r13,rsi
  406427:	push   r12
  406429:	mov    r12d,edi
  40642c:	push   rbp
  40642d:	lea    rbp,[rip+0x3914]        # 409d48 <_IO_stdin_used@@Base+0x2d48>
  406434:	push   rbx
  406435:	sub    rbp,r15
  406438:	sub    rsp,0x8
  40643c:	call   403000 <free@plt-0x30>
  406441:	sar    rbp,0x3
  406445:	je     406466 <__libc_csu_init@@Base+0x56>
  406447:	xor    ebx,ebx
  406449:	nop    DWORD PTR [rax+0x0]
  406450:	mov    rdx,r14
  406453:	mov    rsi,r13
  406456:	mov    edi,r12d
  406459:	call   QWORD PTR [r15+rbx*8]
  40645d:	add    rbx,0x1
  406461:	cmp    rbp,rbx
  406464:	jne    406450 <__libc_csu_init@@Base+0x40>
  406466:	add    rsp,0x8
  40646a:	pop    rbx
  40646b:	pop    rbp
  40646c:	pop    r12
  40646e:	pop    r13
  406470:	pop    r14
  406472:	pop    r15
  406474:	ret    
  406475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406480 <__libc_csu_fini@@Base>:
  406480:	endbr64 
  406484:	ret    

Disassembly of section .fini:

0000000000406488 <.fini>:
  406488:	endbr64 
  40648c:	sub    rsp,0x8
  406490:	add    rsp,0x8
  406494:	ret    
