
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xbfe1]        # 40eff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xbfe2]        # 40f008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xbfe4]        # 40f010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xbfe2]        # 40f018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xbfda]        # 40f020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xbfd2]        # 40f028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xbfca]        # 40f030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xbfc2]        # 40f038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xbfba]        # 40f040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <puts@plt>:
  403090:	jmp    QWORD PTR [rip+0xbfb2]        # 40f048 <puts@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <fcntl@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xbfaa]        # 40f050 <fcntl@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <getpid@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xbfa2]        # 40f058 <getpid@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fclose@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xbf9a]        # 40f060 <fclose@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <msync@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xbf92]        # 40f068 <msync@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strlen@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xbf8a]        # 40f070 <strlen@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <mmap@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xbf82]        # 40f078 <mmap@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <setbuf@plt>:
  403100:	jmp    QWORD PTR [rip+0xbf7a]        # 40f080 <setbuf@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <strchr@plt>:
  403110:	jmp    QWORD PTR [rip+0xbf72]        # 40f088 <strchr@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <printf@plt>:
  403120:	jmp    QWORD PTR [rip+0xbf6a]        # 40f090 <printf@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <strrchr@plt>:
  403130:	jmp    QWORD PTR [rip+0xbf62]        # 40f098 <strrchr@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <uname@plt>:
  403140:	jmp    QWORD PTR [rip+0xbf5a]        # 40f0a0 <uname@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <__assert_fail@plt>:
  403150:	jmp    QWORD PTR [rip+0xbf52]        # 40f0a8 <__assert_fail@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <memset@plt>:
  403160:	jmp    QWORD PTR [rip+0xbf4a]        # 40f0b0 <memset@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <strnlen@plt>:
  403170:	jmp    QWORD PTR [rip+0xbf42]        # 40f0b8 <strnlen@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <fprintf@plt>:
  403180:	jmp    QWORD PTR [rip+0xbf3a]        # 40f0c0 <fprintf@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <ftell@plt>:
  403190:	jmp    QWORD PTR [rip+0xbf32]        # 40f0c8 <ftell@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <strtol@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xbf2a]        # 40f0d0 <strtol@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <memcpy@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xbf22]        # 40f0d8 <memcpy@GLIBC_2.14>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <prctl@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xbf1a]        # 40f0e0 <prctl@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <fileno@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xbf12]        # 40f0e8 <fileno@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <malloc@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xbf0a]        # 40f0f0 <malloc@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <fflush@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xbf02]        # 40f0f8 <fflush@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <fseek@plt>:
  403200:	jmp    QWORD PTR [rip+0xbefa]        # 40f100 <fseek@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <realloc@plt>:
  403210:	jmp    QWORD PTR [rip+0xbef2]        # 40f108 <realloc@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <fdopen@plt>:
  403220:	jmp    QWORD PTR [rip+0xbeea]        # 40f110 <fdopen@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <munmap@plt>:
  403230:	jmp    QWORD PTR [rip+0xbee2]        # 40f118 <munmap@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <open@plt>:
  403240:	jmp    QWORD PTR [rip+0xbeda]        # 40f120 <open@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <__cxa_atexit@plt>:
  403250:	jmp    QWORD PTR [rip+0xbed2]        # 40f128 <__cxa_atexit@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <exit@plt>:
  403260:	jmp    QWORD PTR [rip+0xbeca]        # 40f130 <exit@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <fwrite@plt>:
  403270:	jmp    QWORD PTR [rip+0xbec2]        # 40f138 <fwrite@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strdup@plt>:
  403280:	jmp    QWORD PTR [rip+0xbeba]        # 40f140 <strdup@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

0000000000403290 <strerror@plt>:
  403290:	jmp    QWORD PTR [rip+0xbeb2]        # 40f148 <strerror@GLIBC_2.2.5>
  403296:	push   0x26
  40329b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

00000000004032a0 <_start@@Base>:
  4032a0:	endbr64 
  4032a4:	xor    ebp,ebp
  4032a6:	mov    r9,rdx
  4032a9:	pop    rsi
  4032aa:	mov    rdx,rsp
  4032ad:	and    rsp,0xfffffffffffffff0
  4032b1:	push   rax
  4032b2:	push   rsp
  4032b3:	mov    r8,0x4096d0
  4032ba:	mov    rcx,0x409660
  4032c1:	mov    rdi,0x404ee0
  4032c8:	call   QWORD PTR [rip+0xbd1a]        # 40efe8 <__libc_start_main@GLIBC_2.2.5>
  4032ce:	hlt    
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	ret    
  4032d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032df:	nop
  4032e0:	mov    eax,0x40f168
  4032e5:	cmp    rax,0x40f168
  4032eb:	je     403300 <_start@@Base+0x60>
  4032ed:	mov    eax,0x0
  4032f2:	test   rax,rax
  4032f5:	je     403300 <_start@@Base+0x60>
  4032f7:	mov    edi,0x40f168
  4032fc:	jmp    rax
  4032fe:	xchg   ax,ax
  403300:	ret    
  403301:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40330c:	nop    DWORD PTR [rax+0x0]
  403310:	mov    esi,0x40f168
  403315:	sub    rsi,0x40f168
  40331c:	mov    rax,rsi
  40331f:	shr    rsi,0x3f
  403323:	sar    rax,0x3
  403327:	add    rsi,rax
  40332a:	sar    rsi,1
  40332d:	je     403340 <_start@@Base+0xa0>
  40332f:	mov    eax,0x0
  403334:	test   rax,rax
  403337:	je     403340 <_start@@Base+0xa0>
  403339:	mov    edi,0x40f168
  40333e:	jmp    rax
  403340:	ret    
  403341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	endbr64 
  403354:	cmp    BYTE PTR [rip+0xbe15],0x0        # 40f170 <__bss_start@@Base+0x8>
  40335b:	jne    403370 <_start@@Base+0xd0>
  40335d:	push   rbp
  40335e:	mov    rbp,rsp
  403361:	call   4032e0 <_start@@Base+0x40>
  403366:	mov    BYTE PTR [rip+0xbe03],0x1        # 40f170 <__bss_start@@Base+0x8>
  40336d:	pop    rbp
  40336e:	ret    
  40336f:	nop
  403370:	ret    
  403371:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40337c:	nop    DWORD PTR [rax+0x0]
  403380:	endbr64 
  403384:	jmp    403310 <_start@@Base+0x70>
  403386:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403390 <next@@Base>:
  403390:	push   rax
  403391:	inc    QWORD PTR [rip+0xbde8]        # 40f180 <__bss_start@@Base+0x18>
  403398:	lea    rax,[rip+0xce31]        # 4101d0 <next_fake@@Base>
  40339f:	mov    QWORD PTR [rax],rdi
  4033a2:	mov    ecx,DWORD PTR [rax+0x198]
  4033a8:	cmp    rcx,0x31
  4033ac:	ja     4033c9 <next@@Base+0x39>
  4033ae:	inc    QWORD PTR [rip+0xbdd3]        # 40f188 <__bss_start@@Base+0x20>
  4033b5:	mov    QWORD PTR [rax+rcx*8+0x8],rdi
  4033ba:	mov    ecx,DWORD PTR [rax+0x198]
  4033c0:	lea    rdx,[rip+0xbdd1]        # 40f198 <__bss_start@@Base+0x30>
  4033c7:	jmp    4033dd <next@@Base+0x4d>
  4033c9:	inc    QWORD PTR [rip+0xbdc0]        # 40f190 <__bss_start@@Base+0x28>
  4033d0:	inc    DWORD PTR [rax+0x1a0]
  4033d6:	lea    rdx,[rip+0xbdc3]        # 40f1a0 <__bss_start@@Base+0x38>
  4033dd:	inc    QWORD PTR [rdx]
  4033e0:	inc    ecx
  4033e2:	mov    DWORD PTR [rax+0x198],ecx
  4033e8:	lea    rcx,[rip+0xcfa9]        # 410398 <fff@@Base>
  4033ef:	mov    edx,DWORD PTR [rcx+0x190]
  4033f5:	cmp    rdx,0x31
  4033f9:	ja     40341f <next@@Base+0x8f>
  4033fb:	inc    QWORD PTR [rip+0xbda6]        # 40f1a8 <__bss_start@@Base+0x40>
  403402:	lea    esi,[rdx+0x1]
  403405:	mov    DWORD PTR [rcx+0x190],esi
  40340b:	lea    rsi,[rip+0xffffffffffffff7e]        # 403390 <next@@Base>
  403412:	mov    QWORD PTR [rcx+rdx*8],rsi
  403416:	lea    rcx,[rip+0xbd9b]        # 40f1b8 <__bss_start@@Base+0x50>
  40341d:	jmp    403426 <next@@Base+0x96>
  40341f:	lea    rcx,[rip+0xbd8a]        # 40f1b0 <__bss_start@@Base+0x48>
  403426:	inc    QWORD PTR [rcx]
  403429:	mov    rcx,QWORD PTR [rax+0x1c0]
  403430:	test   rcx,rcx
  403433:	je     403451 <next@@Base+0xc1>
  403435:	inc    QWORD PTR [rip+0xbd84]        # 40f1c0 <__bss_start@@Base+0x58>
  40343c:	call   rcx
  40343e:	lea    rcx,[rip+0xbd8b]        # 40f1d0 <__bss_start@@Base+0x68>
  403445:	inc    QWORD PTR [rcx]
  403448:	inc    QWORD PTR [rip+0xbdc1]        # 40f210 <__bss_start@@Base+0xa8>
  40344f:	pop    rcx
  403450:	ret    
  403451:	inc    QWORD PTR [rip+0xbd70]        # 40f1c8 <__bss_start@@Base+0x60>
  403458:	movsxd rcx,DWORD PTR [rax+0x1b0]
  40345f:	test   rcx,rcx
  403462:	je     40349a <next@@Base+0x10a>
  403464:	inc    QWORD PTR [rip+0xbd6d]        # 40f1d8 <__bss_start@@Base+0x70>
  40346b:	movsxd rdx,DWORD PTR [rax+0x1b4]
  403472:	mov    rsi,QWORD PTR [rax+0x1b8]
  403479:	cmp    edx,ecx
  40347b:	jge    4034b1 <next@@Base+0x121>
  40347d:	inc    QWORD PTR [rip+0xbd64]        # 40f1e8 <__bss_start@@Base+0x80>
  403484:	lea    ecx,[rdx+0x1]
  403487:	mov    DWORD PTR [rax+0x1b4],ecx
  40348d:	mov    rax,QWORD PTR [rsi+rdx*8]
  403491:	lea    rcx,[rip+0xbd60]        # 40f1f8 <__bss_start@@Base+0x90>
  403498:	jmp    403445 <next@@Base+0xb5>
  40349a:	inc    QWORD PTR [rip+0xbd3f]        # 40f1e0 <__bss_start@@Base+0x78>
  4034a1:	mov    rax,QWORD PTR [rax+0x1a8]
  4034a8:	lea    rcx,[rip+0xbd59]        # 40f208 <__bss_start@@Base+0xa0>
  4034af:	jmp    403445 <next@@Base+0xb5>
  4034b1:	inc    QWORD PTR [rip+0xbd38]        # 40f1f0 <__bss_start@@Base+0x88>
  4034b8:	mov    rax,QWORD PTR [rsi+rcx*8-0x8]
  4034bd:	lea    rcx,[rip+0xbd3c]        # 40f200 <__bss_start@@Base+0x98>
  4034c4:	jmp    403445 <next@@Base+0xb5>
  4034c9:	nop    DWORD PTR [rax+0x0]

00000000004034d0 <next_reset@@Base>:
  4034d0:	vmovdqa xmm0,XMMWORD PTR [rip+0xbd48]        # 40f220 <__bss_start@@Base+0xb8>
  4034d8:	vpcmpeqd xmm1,xmm1,xmm1
  4034dc:	vpsubq xmm0,xmm0,xmm1
  4034e0:	vmovdqa XMMWORD PTR [rip+0xbd38],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4034e8:	vpxor  xmm0,xmm0,xmm0
  4034ec:	lea    rax,[rip+0xccdd]        # 4101d0 <next_fake@@Base>
  4034f3:	vmovdqu YMMWORD PTR [rax+0x180],ymm0
  4034fb:	vmovdqu YMMWORD PTR [rax],ymm0
  4034ff:	vmovdqu YMMWORD PTR [rax+0x20],ymm0
  403504:	vmovdqu YMMWORD PTR [rax+0x40],ymm0
  403509:	vmovdqu YMMWORD PTR [rax+0x60],ymm0
  40350e:	vmovdqu YMMWORD PTR [rax+0x80],ymm0
  403516:	vmovdqu YMMWORD PTR [rax+0xa0],ymm0
  40351e:	vmovdqu YMMWORD PTR [rax+0xc0],ymm0
  403526:	vmovdqu YMMWORD PTR [rax+0xe0],ymm0
  40352e:	vmovdqu YMMWORD PTR [rax+0x100],ymm0
  403536:	vmovdqu YMMWORD PTR [rax+0x120],ymm0
  40353e:	vmovdqu YMMWORD PTR [rax+0x140],ymm0
  403546:	vmovdqu YMMWORD PTR [rax+0x160],ymm0
  40354e:	vmovdqu YMMWORD PTR [rax+0x1a0],ymm0
  403556:	mov    QWORD PTR [rax+0x1c0],0x0
  403561:	mov    DWORD PTR [rax+0x19c],0x32
  40356b:	vzeroupper 
  40356e:	ret    
  40356f:	nop

0000000000403570 <push_back@@Base>:
  403570:	push   rax
  403571:	inc    QWORD PTR [rip+0xbcb8]        # 40f230 <__bss_start@@Base+0xc8>
  403578:	lea    rax,[rip+0xc909]        # 40fe88 <push_back_fake@@Base>
  40357f:	mov    QWORD PTR [rax],rdi
  403582:	mov    QWORD PTR [rax+0x198],rsi
  403589:	mov    ecx,DWORD PTR [rax+0x330]
  40358f:	cmp    rcx,0x31
  403593:	ja     4035be <push_back@@Base+0x4e>
  403595:	inc    QWORD PTR [rip+0xbc9c]        # 40f238 <__bss_start@@Base+0xd0>
  40359c:	mov    QWORD PTR [rax+rcx*8+0x8],rdi
  4035a1:	mov    ecx,DWORD PTR [rax+0x330]
  4035a7:	mov    QWORD PTR [rax+rcx*8+0x1a0],rsi
  4035af:	mov    ecx,DWORD PTR [rax+0x330]
  4035b5:	lea    rdx,[rip+0xbc8c]        # 40f248 <__bss_start@@Base+0xe0>
  4035bc:	jmp    4035d2 <push_back@@Base+0x62>
  4035be:	inc    QWORD PTR [rip+0xbc7b]        # 40f240 <__bss_start@@Base+0xd8>
  4035c5:	inc    DWORD PTR [rax+0x338]
  4035cb:	lea    rdx,[rip+0xbc7e]        # 40f250 <__bss_start@@Base+0xe8>
  4035d2:	inc    QWORD PTR [rdx]
  4035d5:	inc    ecx
  4035d7:	mov    DWORD PTR [rax+0x330],ecx
  4035dd:	lea    r8,[rip+0xcdb4]        # 410398 <fff@@Base>
  4035e4:	mov    edx,DWORD PTR [r8+0x190]
  4035eb:	cmp    rdx,0x31
  4035ef:	ja     403616 <push_back@@Base+0xa6>
  4035f1:	inc    QWORD PTR [rip+0xbc60]        # 40f258 <__bss_start@@Base+0xf0>
  4035f8:	lea    ecx,[rdx+0x1]
  4035fb:	mov    DWORD PTR [r8+0x190],ecx
  403602:	lea    rcx,[rip+0xffffffffffffff67]        # 403570 <push_back@@Base>
  403609:	mov    QWORD PTR [r8+rdx*8],rcx
  40360d:	lea    rcx,[rip+0xbc54]        # 40f268 <__bss_start@@Base+0x100>
  403614:	jmp    40361d <push_back@@Base+0xad>
  403616:	lea    rcx,[rip+0xbc43]        # 40f260 <__bss_start@@Base+0xf8>
  40361d:	inc    QWORD PTR [rcx]
  403620:	mov    rax,QWORD PTR [rax+0x340]
  403627:	test   rax,rax
  40362a:	je     40363e <push_back@@Base+0xce>
  40362c:	inc    QWORD PTR [rip+0xbc3d]        # 40f270 <__bss_start@@Base+0x108>
  403633:	call   rax
  403635:	lea    rax,[rip+0xbc44]        # 40f280 <__bss_start@@Base+0x118>
  40363c:	jmp    403645 <push_back@@Base+0xd5>
  40363e:	lea    rax,[rip+0xbc33]        # 40f278 <__bss_start@@Base+0x110>
  403645:	inc    QWORD PTR [rax]
  403648:	inc    QWORD PTR [rip+0xbc39]        # 40f288 <__bss_start@@Base+0x120>
  40364f:	pop    rax
  403650:	ret    
  403651:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40365b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403660 <push_back_reset@@Base>:
  403660:	push   rbx
  403661:	vmovdqa xmm0,XMMWORD PTR [rip+0xbc27]        # 40f290 <__bss_start@@Base+0x128>
  403669:	vpcmpeqd xmm1,xmm1,xmm1
  40366d:	vpsubq xmm0,xmm0,xmm1
  403671:	vmovdqa XMMWORD PTR [rip+0xbc17],xmm0        # 40f290 <__bss_start@@Base+0x128>
  403679:	lea    rbx,[rip+0xc808]        # 40fe88 <push_back_fake@@Base>
  403680:	mov    edx,0x348
  403685:	mov    rdi,rbx
  403688:	xor    esi,esi
  40368a:	call   403160 <memset@plt>
  40368f:	mov    DWORD PTR [rbx+0x334],0x32
  403699:	pop    rbx
  40369a:	ret    
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036a0 <setup@@Base>:
  4036a0:	push   rbx
  4036a1:	vmovdqa xmm0,XMMWORD PTR [rip+0xbbf7]        # 40f2a0 <__bss_start@@Base+0x138>
  4036a9:	vpcmpeqd xmm1,xmm1,xmm1
  4036ad:	vpsubq xmm0,xmm0,xmm1
  4036b1:	vmovdqa XMMWORD PTR [rip+0xbbe7],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4036b9:	vmovdqa xmm0,XMMWORD PTR [rip+0xbb5f]        # 40f220 <__bss_start@@Base+0xb8>
  4036c1:	vpsubq xmm0,xmm0,xmm1
  4036c5:	vmovdqa XMMWORD PTR [rip+0xbb53],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4036cd:	vpxor  xmm0,xmm0,xmm0
  4036d1:	lea    rax,[rip+0xcaf8]        # 4101d0 <next_fake@@Base>
  4036d8:	vmovdqu YMMWORD PTR [rax],ymm0
  4036dc:	vmovdqu YMMWORD PTR [rax+0x20],ymm0
  4036e1:	vmovdqu YMMWORD PTR [rax+0x40],ymm0
  4036e6:	vmovdqu YMMWORD PTR [rax+0x60],ymm0
  4036eb:	vmovdqu YMMWORD PTR [rax+0x80],ymm0
  4036f3:	vmovdqu YMMWORD PTR [rax+0xa0],ymm0
  4036fb:	vmovdqu YMMWORD PTR [rax+0xc0],ymm0
  403703:	vmovdqu YMMWORD PTR [rax+0xe0],ymm0
  40370b:	vmovdqu YMMWORD PTR [rax+0x100],ymm0
  403713:	vmovdqu YMMWORD PTR [rax+0x120],ymm0
  40371b:	vmovdqu YMMWORD PTR [rax+0x140],ymm0
  403723:	vmovdqu YMMWORD PTR [rax+0x160],ymm0
  40372b:	vmovdqu YMMWORD PTR [rax+0x180],ymm0
  403733:	vmovdqu YMMWORD PTR [rax+0x1a0],ymm0
  40373b:	mov    QWORD PTR [rax+0x1c0],0x0
  403746:	mov    DWORD PTR [rax+0x19c],0x32
  403750:	vmovdqa xmm0,XMMWORD PTR [rip+0xbb38]        # 40f290 <__bss_start@@Base+0x128>
  403758:	vpsubq xmm0,xmm0,xmm1
  40375c:	vmovdqa XMMWORD PTR [rip+0xbb2c],xmm0        # 40f290 <__bss_start@@Base+0x128>
  403764:	lea    rbx,[rip+0xc71d]        # 40fe88 <push_back_fake@@Base>
  40376b:	mov    edx,0x348
  403770:	mov    rdi,rbx
  403773:	xor    esi,esi
  403775:	vzeroupper 
  403778:	call   403160 <memset@plt>
  40377d:	mov    DWORD PTR [rbx+0x334],0x32
  403787:	pop    rbx
  403788:	ret    
  403789:	nop    DWORD PTR [rax+0x0]

0000000000403790 <no_int_as_first_stuff@@Base>:
  403790:	push   r15
  403792:	push   r14
  403794:	push   rbx
  403795:	sub    rsp,0x20
  403799:	inc    QWORD PTR [rip+0xbb10]        # 40f2b0 <__bss_start@@Base+0x148>
  4037a0:	mov    r14,rsp
  4037a3:	lea    rsi,[rsp+0x8]
  4037a8:	mov    rdi,r14
  4037ab:	call   406dc0 <init_grammar@@Base>
  4037b0:	mov    edi,0x4
  4037b5:	call   4031e0 <malloc@plt>
  4037ba:	mov    rbx,rax
  4037bd:	mov    rdi,rax
  4037c0:	call   405e30 <init_token_opar@@Base>
  4037c5:	lea    r15,[rip+0xca04]        # 4101d0 <next_fake@@Base>
  4037cc:	mov    QWORD PTR [r15+0x1a8],rbx
  4037d3:	mov    rdi,r14
  4037d6:	call   406e20 <read_function_ast_node@@Base>
  4037db:	cmp    DWORD PTR [r15+0x198],0x1
  4037e3:	jne    403809 <no_int_as_first_stuff@@Base+0x79>
  4037e5:	inc    QWORD PTR [rip+0xbacc]        # 40f2b8 <__bss_start@@Base+0x150>
  4037ec:	test   rax,rax
  4037ef:	jne    40382f <no_int_as_first_stuff@@Base+0x9f>
  4037f1:	inc    QWORD PTR [rip+0xbad0]        # 40f2c8 <__bss_start@@Base+0x160>
  4037f8:	inc    QWORD PTR [rip+0xbad9]        # 40f2d8 <__bss_start@@Base+0x170>
  4037ff:	add    rsp,0x20
  403803:	pop    rbx
  403804:	pop    r14
  403806:	pop    r15
  403808:	ret    
  403809:	inc    QWORD PTR [rip+0xbab0]        # 40f2c0 <__bss_start@@Base+0x158>
  403810:	lea    rdi,[rip+0x67ed]        # 40a004 <_IO_stdin_used@@Base+0x4>
  403817:	lea    rsi,[rip+0x6800]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40381e:	lea    rcx,[rip+0x6857]        # 40a07c <_IO_stdin_used@@Base+0x7c>
  403825:	mov    edx,0x29
  40382a:	call   403150 <__assert_fail@plt>
  40382f:	inc    QWORD PTR [rip+0xba9a]        # 40f2d0 <__bss_start@@Base+0x168>
  403836:	lea    rdi,[rip+0x685c]        # 40a099 <_IO_stdin_used@@Base+0x99>
  40383d:	lea    rsi,[rip+0x67da]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403844:	lea    rcx,[rip+0x6831]        # 40a07c <_IO_stdin_used@@Base+0x7c>
  40384b:	mov    edx,0x2a
  403850:	call   403150 <__assert_fail@plt>
  403855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40385f:	nop

0000000000403860 <int_but_not_followed_by_function@@Base>:
  403860:	push   r15
  403862:	push   r14
  403864:	push   rbx
  403865:	sub    rsp,0x20
  403869:	inc    QWORD PTR [rip+0xba70]        # 40f2e0 <__bss_start@@Base+0x178>
  403870:	mov    r14,rsp
  403873:	lea    rsi,[rsp+0x8]
  403878:	mov    rdi,r14
  40387b:	call   406dc0 <init_grammar@@Base>
  403880:	mov    edi,0x10
  403885:	call   4031e0 <malloc@plt>
  40388a:	mov    rbx,rax
  40388d:	mov    edi,0x4
  403892:	call   4031e0 <malloc@plt>
  403897:	mov    QWORD PTR [rbx],rax
  40389a:	mov    rdi,rax
  40389d:	call   405db0 <init_token_int_type@@Base>
  4038a2:	mov    edi,0x4
  4038a7:	call   4031e0 <malloc@plt>
  4038ac:	mov    QWORD PTR [rbx+0x8],rax
  4038b0:	mov    rdi,rax
  4038b3:	call   405e30 <init_token_opar@@Base>
  4038b8:	lea    r15,[rip+0xc911]        # 4101d0 <next_fake@@Base>
  4038bf:	mov    QWORD PTR [r15+0x1b8],rbx
  4038c6:	mov    DWORD PTR [r15+0x1b0],0x2
  4038d1:	mov    rdi,r14
  4038d4:	call   406e20 <read_function_ast_node@@Base>
  4038d9:	cmp    DWORD PTR [r15+0x198],0x2
  4038e1:	jne    403907 <int_but_not_followed_by_function@@Base+0xa7>
  4038e3:	inc    QWORD PTR [rip+0xb9fe]        # 40f2e8 <__bss_start@@Base+0x180>
  4038ea:	test   rax,rax
  4038ed:	jne    40392d <int_but_not_followed_by_function@@Base+0xcd>
  4038ef:	inc    QWORD PTR [rip+0xba02]        # 40f2f8 <__bss_start@@Base+0x190>
  4038f6:	inc    QWORD PTR [rip+0xba0b]        # 40f308 <__bss_start@@Base+0x1a0>
  4038fd:	add    rsp,0x20
  403901:	pop    rbx
  403902:	pop    r14
  403904:	pop    r15
  403906:	ret    
  403907:	inc    QWORD PTR [rip+0xb9e2]        # 40f2f0 <__bss_start@@Base+0x188>
  40390e:	lea    rdi,[rip+0x6790]        # 40a0a5 <_IO_stdin_used@@Base+0xa5>
  403915:	lea    rsi,[rip+0x6702]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40391c:	lea    rcx,[rip+0x679c]        # 40a0bf <_IO_stdin_used@@Base+0xbf>
  403923:	mov    edx,0x43
  403928:	call   403150 <__assert_fail@plt>
  40392d:	inc    QWORD PTR [rip+0xb9cc]        # 40f300 <__bss_start@@Base+0x198>
  403934:	lea    rdi,[rip+0x675e]        # 40a099 <_IO_stdin_used@@Base+0x99>
  40393b:	lea    rsi,[rip+0x66dc]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403942:	lea    rcx,[rip+0x6776]        # 40a0bf <_IO_stdin_used@@Base+0xbf>
  403949:	mov    edx,0x44
  40394e:	call   403150 <__assert_fail@plt>
  403953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40395d:	nop    DWORD PTR [rax]

0000000000403960 <boolean_expression_is_read_properly@@Base>:
  403960:	push   r15
  403962:	push   r14
  403964:	push   rbx
  403965:	sub    rsp,0x20
  403969:	inc    QWORD PTR [rip+0xb9a0]        # 40f310 <__bss_start@@Base+0x1a8>
  403970:	mov    edi,0x3
  403975:	call   4031e0 <malloc@plt>
  40397a:	mov    r15,rax
  40397d:	mov    WORD PTR [rax],0x3d21
  403982:	mov    BYTE PTR [rax+0x2],0x0
  403986:	mov    r14,rsp
  403989:	lea    rsi,[rsp+0x8]
  40398e:	mov    rdi,r14
  403991:	call   406dc0 <init_grammar@@Base>
  403996:	mov    edi,0x28
  40399b:	call   4031e0 <malloc@plt>
  4039a0:	mov    rbx,rax
  4039a3:	mov    edi,0x8
  4039a8:	call   4031e0 <malloc@plt>
  4039ad:	mov    QWORD PTR [rbx],rax
  4039b0:	mov    rdi,rax
  4039b3:	mov    esi,0x2
  4039b8:	call   405dd0 <init_token_int_value@@Base>
  4039bd:	mov    edi,0x8
  4039c2:	call   4031e0 <malloc@plt>
  4039c7:	mov    QWORD PTR [rbx+0x8],rax
  4039cb:	mov    rdi,rax
  4039ce:	mov    esi,0x2
  4039d3:	call   405dd0 <init_token_int_value@@Base>
  4039d8:	mov    edi,0x10
  4039dd:	call   4031e0 <malloc@plt>
  4039e2:	mov    QWORD PTR [rbx+0x10],rax
  4039e6:	mov    rdi,rax
  4039e9:	mov    rsi,r15
  4039ec:	call   405f50 <init_token_boolean_op@@Base>
  4039f1:	mov    edi,0x8
  4039f6:	call   4031e0 <malloc@plt>
  4039fb:	mov    QWORD PTR [rbx+0x18],rax
  4039ff:	mov    rdi,rax
  403a02:	mov    esi,0x1
  403a07:	call   405dd0 <init_token_int_value@@Base>
  403a0c:	mov    edi,0x4
  403a11:	call   4031e0 <malloc@plt>
  403a16:	mov    QWORD PTR [rbx+0x20],rax
  403a1a:	mov    rdi,rax
  403a1d:	call   405e50 <init_token_cpar@@Base>
  403a22:	lea    r15,[rip+0xc7a7]        # 4101d0 <next_fake@@Base>
  403a29:	mov    QWORD PTR [r15+0x1b8],rbx
  403a30:	mov    DWORD PTR [r15+0x1b0],0x5
  403a3b:	mov    rdi,r14
  403a3e:	call   407250 <read_boolean_expression@@Base>
  403a43:	cmp    DWORD PTR [r15+0x198],0x5
  403a4b:	jne    403a88 <boolean_expression_is_read_properly@@Base+0x128>
  403a4d:	inc    QWORD PTR [rip+0xb8c4]        # 40f318 <__bss_start@@Base+0x1b0>
  403a54:	lea    rcx,[rip+0xc42d]        # 40fe88 <push_back_fake@@Base>
  403a5b:	cmp    DWORD PTR [rcx+0x330],0x1
  403a62:	jne    403aae <boolean_expression_is_read_properly@@Base+0x14e>
  403a64:	inc    QWORD PTR [rip+0xb8bd]        # 40f328 <__bss_start@@Base+0x1c0>
  403a6b:	cmp    DWORD PTR [rax],0x5
  403a6e:	jne    403ad4 <boolean_expression_is_read_properly@@Base+0x174>
  403a70:	inc    QWORD PTR [rip+0xb8c1]        # 40f338 <__bss_start@@Base+0x1d0>
  403a77:	inc    QWORD PTR [rip+0xb8ca]        # 40f348 <__bss_start@@Base+0x1e0>
  403a7e:	add    rsp,0x20
  403a82:	pop    rbx
  403a83:	pop    r14
  403a85:	pop    r15
  403a87:	ret    
  403a88:	inc    QWORD PTR [rip+0xb891]        # 40f320 <__bss_start@@Base+0x1b8>
  403a8f:	lea    rdi,[rip+0x6651]        # 40a0e7 <_IO_stdin_used@@Base+0xe7>
  403a96:	lea    rsi,[rip+0x6581]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403a9d:	lea    rcx,[rip+0x665d]        # 40a101 <_IO_stdin_used@@Base+0x101>
  403aa4:	mov    edx,0x69
  403aa9:	call   403150 <__assert_fail@plt>
  403aae:	inc    QWORD PTR [rip+0xb87b]        # 40f330 <__bss_start@@Base+0x1c8>
  403ab5:	lea    rdi,[rip+0x6670]        # 40a12c <_IO_stdin_used@@Base+0x12c>
  403abc:	lea    rsi,[rip+0x655b]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403ac3:	lea    rcx,[rip+0x6637]        # 40a101 <_IO_stdin_used@@Base+0x101>
  403aca:	mov    edx,0x6a
  403acf:	call   403150 <__assert_fail@plt>
  403ad4:	inc    QWORD PTR [rip+0xb865]        # 40f340 <__bss_start@@Base+0x1d8>
  403adb:	lea    rdi,[rip+0x6669]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  403ae2:	lea    rsi,[rip+0x6535]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403ae9:	lea    rcx,[rip+0x6611]        # 40a101 <_IO_stdin_used@@Base+0x101>
  403af0:	mov    edx,0x6b
  403af5:	call   403150 <__assert_fail@plt>
  403afa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403b00 <boolean_expression_complex@@Base>:
  403b00:	push   r15
  403b02:	push   r14
  403b04:	push   r13
  403b06:	push   r12
  403b08:	push   rbx
  403b09:	sub    rsp,0x20
  403b0d:	inc    QWORD PTR [rip+0xb83c]        # 40f350 <__bss_start@@Base+0x1e8>
  403b14:	mov    edi,0x3
  403b19:	call   4031e0 <malloc@plt>
  403b1e:	mov    r13,rax
  403b21:	mov    edi,0x3
  403b26:	call   4031e0 <malloc@plt>
  403b2b:	mov    r12,rax
  403b2e:	mov    edi,0x3
  403b33:	call   4031e0 <malloc@plt>
  403b38:	mov    r15,rax
  403b3b:	mov    WORD PTR [r13+0x0],0x3d3c
  403b42:	mov    BYTE PTR [r13+0x2],0x0
  403b47:	mov    WORD PTR [r12],0x2626
  403b4e:	mov    BYTE PTR [r12+0x2],0x0
  403b54:	mov    WORD PTR [rax],0x3d3d
  403b59:	mov    BYTE PTR [rax+0x2],0x0
  403b5d:	mov    r14,rsp
  403b60:	lea    rsi,[rsp+0x8]
  403b65:	mov    rdi,r14
  403b68:	call   406dc0 <init_grammar@@Base>
  403b6d:	mov    edi,0x50
  403b72:	call   4031e0 <malloc@plt>
  403b77:	mov    rbx,rax
  403b7a:	mov    edi,0x8
  403b7f:	call   4031e0 <malloc@plt>
  403b84:	mov    QWORD PTR [rbx],rax
  403b87:	mov    rdi,rax
  403b8a:	mov    esi,0x2
  403b8f:	call   405dd0 <init_token_int_value@@Base>
  403b94:	mov    edi,0x8
  403b99:	call   4031e0 <malloc@plt>
  403b9e:	mov    QWORD PTR [rbx+0x8],rax
  403ba2:	mov    rdi,rax
  403ba5:	mov    esi,0x2
  403baa:	call   405dd0 <init_token_int_value@@Base>
  403baf:	mov    edi,0x10
  403bb4:	call   4031e0 <malloc@plt>
  403bb9:	mov    QWORD PTR [rbx+0x10],rax
  403bbd:	mov    rdi,rax
  403bc0:	mov    rsi,r13
  403bc3:	call   405f50 <init_token_boolean_op@@Base>
  403bc8:	mov    edi,0x8
  403bcd:	call   4031e0 <malloc@plt>
  403bd2:	mov    QWORD PTR [rbx+0x18],rax
  403bd6:	mov    rdi,rax
  403bd9:	mov    esi,0x1
  403bde:	call   405dd0 <init_token_int_value@@Base>
  403be3:	mov    edi,0x10
  403be8:	call   4031e0 <malloc@plt>
  403bed:	mov    QWORD PTR [rbx+0x20],rax
  403bf1:	mov    rdi,rax
  403bf4:	mov    rsi,r12
  403bf7:	call   405f50 <init_token_boolean_op@@Base>
  403bfc:	mov    edi,0x8
  403c01:	call   4031e0 <malloc@plt>
  403c06:	mov    QWORD PTR [rbx+0x28],rax
  403c0a:	mov    rdi,rax
  403c0d:	mov    esi,0x4
  403c12:	call   405dd0 <init_token_int_value@@Base>
  403c17:	mov    edi,0x8
  403c1c:	call   4031e0 <malloc@plt>
  403c21:	mov    QWORD PTR [rbx+0x30],rax
  403c25:	mov    rdi,rax
  403c28:	mov    esi,0x4
  403c2d:	call   405dd0 <init_token_int_value@@Base>
  403c32:	mov    edi,0x10
  403c37:	call   4031e0 <malloc@plt>
  403c3c:	mov    QWORD PTR [rbx+0x38],rax
  403c40:	mov    rdi,rax
  403c43:	mov    rsi,r15
  403c46:	call   405f50 <init_token_boolean_op@@Base>
  403c4b:	mov    edi,0x8
  403c50:	call   4031e0 <malloc@plt>
  403c55:	mov    QWORD PTR [rbx+0x40],rax
  403c59:	mov    rdi,rax
  403c5c:	mov    esi,0x4
  403c61:	call   405dd0 <init_token_int_value@@Base>
  403c66:	mov    edi,0x4
  403c6b:	call   4031e0 <malloc@plt>
  403c70:	mov    QWORD PTR [rbx+0x48],rax
  403c74:	mov    rdi,rax
  403c77:	call   405e50 <init_token_cpar@@Base>
  403c7c:	lea    r15,[rip+0xc54d]        # 4101d0 <next_fake@@Base>
  403c83:	mov    QWORD PTR [r15+0x1b8],rbx
  403c8a:	mov    DWORD PTR [r15+0x1b0],0xa
  403c95:	mov    rdi,r14
  403c98:	call   407250 <read_boolean_expression@@Base>
  403c9d:	cmp    DWORD PTR [r15+0x198],0xa
  403ca5:	jne    403ccf <boolean_expression_complex@@Base+0x1cf>
  403ca7:	inc    QWORD PTR [rip+0xb6aa]        # 40f358 <__bss_start@@Base+0x1f0>
  403cae:	cmp    DWORD PTR [rax],0x5
  403cb1:	jne    403cf5 <boolean_expression_complex@@Base+0x1f5>
  403cb3:	inc    QWORD PTR [rip+0xb6ae]        # 40f368 <__bss_start@@Base+0x200>
  403cba:	inc    QWORD PTR [rip+0xb6b7]        # 40f378 <__bss_start@@Base+0x210>
  403cc1:	add    rsp,0x20
  403cc5:	pop    rbx
  403cc6:	pop    r12
  403cc8:	pop    r13
  403cca:	pop    r14
  403ccc:	pop    r15
  403cce:	ret    
  403ccf:	inc    QWORD PTR [rip+0xb68a]        # 40f360 <__bss_start@@Base+0x1f8>
  403cd6:	lea    rdi,[rip+0x648e]        # 40a16b <_IO_stdin_used@@Base+0x16b>
  403cdd:	lea    rsi,[rip+0x633a]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403ce4:	lea    rcx,[rip+0x649b]        # 40a186 <_IO_stdin_used@@Base+0x186>
  403ceb:	mov    edx,0xa6
  403cf0:	call   403150 <__assert_fail@plt>
  403cf5:	inc    QWORD PTR [rip+0xb674]        # 40f370 <__bss_start@@Base+0x208>
  403cfc:	lea    rdi,[rip+0x6448]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  403d03:	lea    rsi,[rip+0x6314]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403d0a:	lea    rcx,[rip+0x6475]        # 40a186 <_IO_stdin_used@@Base+0x186>
  403d11:	mov    edx,0xa7
  403d16:	call   403150 <__assert_fail@plt>
  403d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d20 <boolean_binary_operator_is_read_properly@@Base>:
  403d20:	push   r15
  403d22:	push   r14
  403d24:	push   rbx
  403d25:	sub    rsp,0x20
  403d29:	inc    QWORD PTR [rip+0xb650]        # 40f380 <__bss_start@@Base+0x218>
  403d30:	mov    edi,0x3
  403d35:	call   4031e0 <malloc@plt>
  403d3a:	mov    r15,rax
  403d3d:	mov    WORD PTR [rax],0x3d21
  403d42:	mov    BYTE PTR [rax+0x2],0x0
  403d46:	mov    r14,rsp
  403d49:	lea    rsi,[rsp+0x8]
  403d4e:	mov    rdi,r14
  403d51:	call   406dc0 <init_grammar@@Base>
  403d56:	mov    edi,0x18
  403d5b:	call   4031e0 <malloc@plt>
  403d60:	mov    rbx,rax
  403d63:	mov    edi,0x8
  403d68:	call   4031e0 <malloc@plt>
  403d6d:	mov    QWORD PTR [rbx],rax
  403d70:	mov    rdi,rax
  403d73:	mov    esi,0x2
  403d78:	call   405dd0 <init_token_int_value@@Base>
  403d7d:	mov    edi,0x10
  403d82:	call   4031e0 <malloc@plt>
  403d87:	mov    QWORD PTR [rbx+0x8],rax
  403d8b:	mov    rdi,rax
  403d8e:	mov    rsi,r15
  403d91:	call   405f50 <init_token_boolean_op@@Base>
  403d96:	mov    edi,0x8
  403d9b:	call   4031e0 <malloc@plt>
  403da0:	mov    QWORD PTR [rbx+0x10],rax
  403da4:	mov    rdi,rax
  403da7:	mov    esi,0x1
  403dac:	call   405dd0 <init_token_int_value@@Base>
  403db1:	lea    r15,[rip+0xc418]        # 4101d0 <next_fake@@Base>
  403db8:	mov    QWORD PTR [r15+0x1b8],rbx
  403dbf:	mov    DWORD PTR [r15+0x1b0],0x3
  403dca:	mov    rdi,r14
  403dcd:	call   407460 <read_boolean_binary_expression@@Base>
  403dd2:	cmp    DWORD PTR [r15+0x198],0x3
  403dda:	jne    403e39 <boolean_binary_operator_is_read_properly@@Base+0x119>
  403ddc:	inc    QWORD PTR [rip+0xb5a5]        # 40f388 <__bss_start@@Base+0x220>
  403de3:	cmp    DWORD PTR [rax],0x5
  403de6:	jne    403e5f <boolean_binary_operator_is_read_properly@@Base+0x13f>
  403de8:	inc    QWORD PTR [rip+0xb5a9]        # 40f398 <__bss_start@@Base+0x230>
  403def:	mov    rcx,QWORD PTR [rax+0x10]
  403df3:	cmp    DWORD PTR [rcx],0x1
  403df6:	jne    403e85 <boolean_binary_operator_is_read_properly@@Base+0x165>
  403dfc:	inc    QWORD PTR [rip+0xb5a5]        # 40f3a8 <__bss_start@@Base+0x240>
  403e03:	cmp    DWORD PTR [rax+0x20],0x1
  403e07:	jne    403eab <boolean_binary_operator_is_read_properly@@Base+0x18b>
  403e0d:	inc    QWORD PTR [rip+0xb5a4]        # 40f3b8 <__bss_start@@Base+0x250>
  403e14:	mov    rax,QWORD PTR [rax+0x18]
  403e18:	cmp    DWORD PTR [rax],0x1
  403e1b:	jne    403ed1 <boolean_binary_operator_is_read_properly@@Base+0x1b1>
  403e21:	inc    QWORD PTR [rip+0xb5a0]        # 40f3c8 <__bss_start@@Base+0x260>
  403e28:	inc    QWORD PTR [rip+0xb5a9]        # 40f3d8 <__bss_start@@Base+0x270>
  403e2f:	add    rsp,0x20
  403e33:	pop    rbx
  403e34:	pop    r14
  403e36:	pop    r15
  403e38:	ret    
  403e39:	inc    QWORD PTR [rip+0xb550]        # 40f390 <__bss_start@@Base+0x228>
  403e40:	lea    rdi,[rip+0x6361]        # 40a1a8 <_IO_stdin_used@@Base+0x1a8>
  403e47:	lea    rsi,[rip+0x61d0]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403e4e:	lea    rcx,[rip+0x636d]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403e55:	mov    edx,0xc8
  403e5a:	call   403150 <__assert_fail@plt>
  403e5f:	inc    QWORD PTR [rip+0xb53a]        # 40f3a0 <__bss_start@@Base+0x238>
  403e66:	lea    rdi,[rip+0x62de]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  403e6d:	lea    rsi,[rip+0x61aa]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403e74:	lea    rcx,[rip+0x6347]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403e7b:	mov    edx,0xc9
  403e80:	call   403150 <__assert_fail@plt>
  403e85:	inc    QWORD PTR [rip+0xb524]        # 40f3b0 <__bss_start@@Base+0x248>
  403e8c:	lea    rdi,[rip+0x635f]        # 40a1f2 <_IO_stdin_used@@Base+0x1f2>
  403e93:	lea    rsi,[rip+0x6184]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403e9a:	lea    rcx,[rip+0x6321]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403ea1:	mov    edx,0xcb
  403ea6:	call   403150 <__assert_fail@plt>
  403eab:	inc    QWORD PTR [rip+0xb50e]        # 40f3c0 <__bss_start@@Base+0x258>
  403eb2:	lea    rdi,[rip+0x6354]        # 40a20d <_IO_stdin_used@@Base+0x20d>
  403eb9:	lea    rsi,[rip+0x615e]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403ec0:	lea    rcx,[rip+0x62fb]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403ec7:	mov    edx,0xcc
  403ecc:	call   403150 <__assert_fail@plt>
  403ed1:	inc    QWORD PTR [rip+0xb4f8]        # 40f3d0 <__bss_start@@Base+0x268>
  403ed8:	lea    rdi,[rip+0x6347]        # 40a226 <_IO_stdin_used@@Base+0x226>
  403edf:	lea    rsi,[rip+0x6138]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  403ee6:	lea    rcx,[rip+0x62d5]        # 40a1c2 <_IO_stdin_used@@Base+0x1c2>
  403eed:	mov    edx,0xcd
  403ef2:	call   403150 <__assert_fail@plt>
  403ef7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403f00 <boolean_unary_operator_is_read_properly@@Base>:
  403f00:	push   r15
  403f02:	push   r14
  403f04:	push   rbx
  403f05:	sub    rsp,0x20
  403f09:	inc    QWORD PTR [rip+0xb4d0]        # 40f3e0 <__bss_start@@Base+0x278>
  403f10:	mov    edi,0x2
  403f15:	call   4031e0 <malloc@plt>
  403f1a:	mov    r15,rax
  403f1d:	mov    WORD PTR [rax],0x21
  403f22:	mov    r14,rsp
  403f25:	lea    rsi,[rsp+0x8]
  403f2a:	mov    rdi,r14
  403f2d:	call   406dc0 <init_grammar@@Base>
  403f32:	mov    edi,0x10
  403f37:	call   4031e0 <malloc@plt>
  403f3c:	mov    rbx,rax
  403f3f:	mov    edi,0x10
  403f44:	call   4031e0 <malloc@plt>
  403f49:	mov    QWORD PTR [rbx],rax
  403f4c:	mov    rdi,rax
  403f4f:	mov    rsi,r15
  403f52:	call   405f50 <init_token_boolean_op@@Base>
  403f57:	mov    edi,0x8
  403f5c:	call   4031e0 <malloc@plt>
  403f61:	mov    QWORD PTR [rbx+0x8],rax
  403f65:	mov    rdi,rax
  403f68:	mov    esi,0x1
  403f6d:	call   405dd0 <init_token_int_value@@Base>
  403f72:	lea    r15,[rip+0xc257]        # 4101d0 <next_fake@@Base>
  403f79:	mov    QWORD PTR [r15+0x1b8],rbx
  403f80:	mov    DWORD PTR [r15+0x1b0],0x2
  403f8b:	mov    rdi,r14
  403f8e:	call   4075d0 <read_boolean_unary_expression@@Base>
  403f93:	cmp    DWORD PTR [r15+0x198],0x2
  403f9b:	jne    403ff8 <boolean_unary_operator_is_read_properly@@Base+0xf8>
  403f9d:	inc    QWORD PTR [rip+0xb444]        # 40f3e8 <__bss_start@@Base+0x280>
  403fa4:	cmp    DWORD PTR [rax],0x5
  403fa7:	jne    40401e <boolean_unary_operator_is_read_properly@@Base+0x11e>
  403fa9:	inc    QWORD PTR [rip+0xb448]        # 40f3f8 <__bss_start@@Base+0x290>
  403fb0:	mov    rcx,QWORD PTR [rax+0x10]
  403fb4:	cmp    DWORD PTR [rcx],0x1
  403fb7:	jne    404044 <boolean_unary_operator_is_read_properly@@Base+0x144>
  403fbd:	inc    QWORD PTR [rip+0xb444]        # 40f408 <__bss_start@@Base+0x2a0>
  403fc4:	cmp    DWORD PTR [rax+0x20],0x8
  403fc8:	jne    40406a <boolean_unary_operator_is_read_properly@@Base+0x16a>
  403fce:	inc    QWORD PTR [rip+0xb443]        # 40f418 <__bss_start@@Base+0x2b0>
  403fd5:	cmp    QWORD PTR [rax+0x18],0x0
  403fda:	jne    404090 <boolean_unary_operator_is_read_properly@@Base+0x190>
  403fe0:	inc    QWORD PTR [rip+0xb441]        # 40f428 <__bss_start@@Base+0x2c0>
  403fe7:	inc    QWORD PTR [rip+0xb44a]        # 40f438 <__bss_start@@Base+0x2d0>
  403fee:	add    rsp,0x20
  403ff2:	pop    rbx
  403ff3:	pop    r14
  403ff5:	pop    r15
  403ff7:	ret    
  403ff8:	inc    QWORD PTR [rip+0xb3f1]        # 40f3f0 <__bss_start@@Base+0x288>
  403fff:	lea    rdi,[rip+0x609f]        # 40a0a5 <_IO_stdin_used@@Base+0xa5>
  404006:	lea    rsi,[rip+0x6011]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40400d:	lea    rcx,[rip+0x622e]        # 40a242 <_IO_stdin_used@@Base+0x242>
  404014:	mov    edx,0xeb
  404019:	call   403150 <__assert_fail@plt>
  40401e:	inc    QWORD PTR [rip+0xb3db]        # 40f400 <__bss_start@@Base+0x298>
  404025:	lea    rdi,[rip+0x611f]        # 40a14b <_IO_stdin_used@@Base+0x14b>
  40402c:	lea    rsi,[rip+0x5feb]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404033:	lea    rcx,[rip+0x6208]        # 40a242 <_IO_stdin_used@@Base+0x242>
  40403a:	mov    edx,0xec
  40403f:	call   403150 <__assert_fail@plt>
  404044:	inc    QWORD PTR [rip+0xb3c5]        # 40f410 <__bss_start@@Base+0x2a8>
  40404b:	lea    rdi,[rip+0x61a0]        # 40a1f2 <_IO_stdin_used@@Base+0x1f2>
  404052:	lea    rsi,[rip+0x5fc5]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404059:	lea    rcx,[rip+0x61e2]        # 40a242 <_IO_stdin_used@@Base+0x242>
  404060:	mov    edx,0xee
  404065:	call   403150 <__assert_fail@plt>
  40406a:	inc    QWORD PTR [rip+0xb3af]        # 40f420 <__bss_start@@Base+0x2b8>
  404071:	lea    rdi,[rip+0x61f9]        # 40a271 <_IO_stdin_used@@Base+0x271>
  404078:	lea    rsi,[rip+0x5f9f]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40407f:	lea    rcx,[rip+0x61bc]        # 40a242 <_IO_stdin_used@@Base+0x242>
  404086:	mov    edx,0xef
  40408b:	call   403150 <__assert_fail@plt>
  404090:	inc    QWORD PTR [rip+0xb399]        # 40f430 <__bss_start@@Base+0x2c8>
  404097:	lea    rdi,[rip+0x61e7]        # 40a285 <_IO_stdin_used@@Base+0x285>
  40409e:	lea    rsi,[rip+0x5f79]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4040a5:	lea    rcx,[rip+0x6196]        # 40a242 <_IO_stdin_used@@Base+0x242>
  4040ac:	mov    edx,0xf0
  4040b1:	call   403150 <__assert_fail@plt>
  4040b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004040c0 <if_statement_only@@Base>:
  4040c0:	push   r15
  4040c2:	push   r14
  4040c4:	push   rbx
  4040c5:	sub    rsp,0x20
  4040c9:	inc    QWORD PTR [rip+0xb370]        # 40f440 <__bss_start@@Base+0x2d8>
  4040d0:	mov    r14,rsp
  4040d3:	lea    rsi,[rsp+0x8]
  4040d8:	mov    rdi,r14
  4040db:	call   406dc0 <init_grammar@@Base>
  4040e0:	mov    edi,0x3
  4040e5:	call   4031e0 <malloc@plt>
  4040ea:	mov    r15,rax
  4040ed:	mov    WORD PTR [rax],0x3d21
  4040f2:	mov    BYTE PTR [rax+0x2],0x0
  4040f6:	mov    edi,0x48
  4040fb:	call   4031e0 <malloc@plt>
  404100:	mov    rbx,rax
  404103:	mov    edi,0x4
  404108:	call   4031e0 <malloc@plt>
  40410d:	mov    QWORD PTR [rbx],rax
  404110:	mov    rdi,rax
  404113:	call   405e30 <init_token_opar@@Base>
  404118:	mov    edi,0x8
  40411d:	call   4031e0 <malloc@plt>
  404122:	mov    QWORD PTR [rbx+0x8],rax
  404126:	mov    rdi,rax
  404129:	mov    esi,0x1
  40412e:	call   405dd0 <init_token_int_value@@Base>
  404133:	mov    edi,0x8
  404138:	call   4031e0 <malloc@plt>
  40413d:	mov    QWORD PTR [rbx+0x10],rax
  404141:	mov    rdi,rax
  404144:	mov    esi,0x1
  404149:	call   405dd0 <init_token_int_value@@Base>
  40414e:	mov    edi,0x10
  404153:	call   4031e0 <malloc@plt>
  404158:	mov    QWORD PTR [rbx+0x18],rax
  40415c:	mov    rdi,rax
  40415f:	mov    rsi,r15
  404162:	call   405f50 <init_token_boolean_op@@Base>
  404167:	mov    edi,0x8
  40416c:	call   4031e0 <malloc@plt>
  404171:	mov    QWORD PTR [rbx+0x20],rax
  404175:	mov    rdi,rax
  404178:	mov    esi,0x1
  40417d:	call   405dd0 <init_token_int_value@@Base>
  404182:	mov    edi,0x4
  404187:	call   4031e0 <malloc@plt>
  40418c:	mov    QWORD PTR [rbx+0x28],rax
  404190:	mov    rdi,rax
  404193:	call   405e50 <init_token_cpar@@Base>
  404198:	mov    edi,0x4
  40419d:	call   4031e0 <malloc@plt>
  4041a2:	mov    QWORD PTR [rbx+0x30],rax
  4041a6:	mov    rdi,rax
  4041a9:	call   405e70 <init_token_obra@@Base>
  4041ae:	mov    edi,0x4
  4041b3:	call   4031e0 <malloc@plt>
  4041b8:	mov    QWORD PTR [rbx+0x38],rax
  4041bc:	mov    rdi,rax
  4041bf:	call   405e90 <init_token_cbra@@Base>
  4041c4:	mov    edi,0x4
  4041c9:	call   4031e0 <malloc@plt>
  4041ce:	mov    QWORD PTR [rbx+0x40],rax
  4041d2:	mov    rdi,rax
  4041d5:	call   405ef0 <init_token_eof@@Base>
  4041da:	lea    r15,[rip+0xbfef]        # 4101d0 <next_fake@@Base>
  4041e1:	mov    QWORD PTR [r15+0x1b8],rbx
  4041e8:	mov    DWORD PTR [r15+0x1b0],0x9
  4041f3:	mov    rdi,r14
  4041f6:	call   407160 <read_if_statement@@Base>
  4041fb:	cmp    DWORD PTR [r15+0x198],0x9
  404203:	jne    404235 <if_statement_only@@Base+0x175>
  404205:	inc    QWORD PTR [rip+0xb23c]        # 40f448 <__bss_start@@Base+0x2e0>
  40420c:	test   rax,rax
  40420f:	je     40425b <if_statement_only@@Base+0x19b>
  404211:	inc    QWORD PTR [rip+0xb240]        # 40f458 <__bss_start@@Base+0x2f0>
  404218:	cmp    DWORD PTR [rax],0x4
  40421b:	jne    404281 <if_statement_only@@Base+0x1c1>
  40421d:	inc    QWORD PTR [rip+0xb244]        # 40f468 <__bss_start@@Base+0x300>
  404224:	inc    QWORD PTR [rip+0xb24d]        # 40f478 <__bss_start@@Base+0x310>
  40422b:	add    rsp,0x20
  40422f:	pop    rbx
  404230:	pop    r14
  404232:	pop    r15
  404234:	ret    
  404235:	inc    QWORD PTR [rip+0xb214]        # 40f450 <__bss_start@@Base+0x2e8>
  40423c:	lea    rdi,[rip+0x6057]        # 40a29a <_IO_stdin_used@@Base+0x29a>
  404243:	lea    rsi,[rip+0x5dd4]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40424a:	lea    rcx,[rip+0x6063]        # 40a2b4 <_IO_stdin_used@@Base+0x2b4>
  404251:	mov    edx,0x11b
  404256:	call   403150 <__assert_fail@plt>
  40425b:	inc    QWORD PTR [rip+0xb1fe]        # 40f460 <__bss_start@@Base+0x2f8>
  404262:	lea    rdi,[rip+0x6064]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404269:	lea    rsi,[rip+0x5dae]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404270:	lea    rcx,[rip+0x603d]        # 40a2b4 <_IO_stdin_used@@Base+0x2b4>
  404277:	mov    edx,0x11c
  40427c:	call   403150 <__assert_fail@plt>
  404281:	inc    QWORD PTR [rip+0xb1e8]        # 40f470 <__bss_start@@Base+0x308>
  404288:	lea    rdi,[rip+0x604a]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  40428f:	lea    rsi,[rip+0x5d88]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404296:	lea    rcx,[rip+0x6017]        # 40a2b4 <_IO_stdin_used@@Base+0x2b4>
  40429d:	mov    edx,0x11d
  4042a2:	call   403150 <__assert_fail@plt>
  4042a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004042b0 <if_else_statements@@Base>:
  4042b0:	push   r15
  4042b2:	push   r14
  4042b4:	push   rbx
  4042b5:	sub    rsp,0x20
  4042b9:	inc    QWORD PTR [rip+0xb1c0]        # 40f480 <__bss_start@@Base+0x318>
  4042c0:	mov    r14,rsp
  4042c3:	lea    rsi,[rsp+0x8]
  4042c8:	mov    rdi,r14
  4042cb:	call   406dc0 <init_grammar@@Base>
  4042d0:	mov    edi,0x3
  4042d5:	call   4031e0 <malloc@plt>
  4042da:	mov    r15,rax
  4042dd:	mov    WORD PTR [rax],0x3d21
  4042e2:	mov    BYTE PTR [rax+0x2],0x0
  4042e6:	mov    edi,0x58
  4042eb:	call   4031e0 <malloc@plt>
  4042f0:	mov    rbx,rax
  4042f3:	mov    edi,0x4
  4042f8:	call   4031e0 <malloc@plt>
  4042fd:	mov    QWORD PTR [rbx],rax
  404300:	mov    rdi,rax
  404303:	call   405e30 <init_token_opar@@Base>
  404308:	mov    edi,0x8
  40430d:	call   4031e0 <malloc@plt>
  404312:	mov    QWORD PTR [rbx+0x8],rax
  404316:	mov    rdi,rax
  404319:	mov    esi,0x1
  40431e:	call   405dd0 <init_token_int_value@@Base>
  404323:	mov    edi,0x8
  404328:	call   4031e0 <malloc@plt>
  40432d:	mov    QWORD PTR [rbx+0x10],rax
  404331:	mov    rdi,rax
  404334:	mov    esi,0x1
  404339:	call   405dd0 <init_token_int_value@@Base>
  40433e:	mov    edi,0x10
  404343:	call   4031e0 <malloc@plt>
  404348:	mov    QWORD PTR [rbx+0x18],rax
  40434c:	mov    rdi,rax
  40434f:	mov    rsi,r15
  404352:	call   405f50 <init_token_boolean_op@@Base>
  404357:	mov    edi,0x8
  40435c:	call   4031e0 <malloc@plt>
  404361:	mov    QWORD PTR [rbx+0x20],rax
  404365:	mov    rdi,rax
  404368:	mov    esi,0x1
  40436d:	call   405dd0 <init_token_int_value@@Base>
  404372:	mov    edi,0x4
  404377:	call   4031e0 <malloc@plt>
  40437c:	mov    QWORD PTR [rbx+0x28],rax
  404380:	mov    rdi,rax
  404383:	call   405e50 <init_token_cpar@@Base>
  404388:	mov    edi,0x4
  40438d:	call   4031e0 <malloc@plt>
  404392:	mov    QWORD PTR [rbx+0x30],rax
  404396:	mov    rdi,rax
  404399:	call   405e70 <init_token_obra@@Base>
  40439e:	mov    edi,0x4
  4043a3:	call   4031e0 <malloc@plt>
  4043a8:	mov    QWORD PTR [rbx+0x38],rax
  4043ac:	mov    rdi,rax
  4043af:	call   405e90 <init_token_cbra@@Base>
  4043b4:	mov    edi,0x4
  4043b9:	call   4031e0 <malloc@plt>
  4043be:	mov    QWORD PTR [rbx+0x40],rax
  4043c2:	mov    rdi,rax
  4043c5:	call   405f30 <init_token_else@@Base>
  4043ca:	mov    edi,0x4
  4043cf:	call   4031e0 <malloc@plt>
  4043d4:	mov    QWORD PTR [rbx+0x48],rax
  4043d8:	mov    rdi,rax
  4043db:	call   405e70 <init_token_obra@@Base>
  4043e0:	mov    edi,0x4
  4043e5:	call   4031e0 <malloc@plt>
  4043ea:	mov    QWORD PTR [rbx+0x50],rax
  4043ee:	mov    rdi,rax
  4043f1:	call   405e90 <init_token_cbra@@Base>
  4043f6:	lea    r15,[rip+0xbdd3]        # 4101d0 <next_fake@@Base>
  4043fd:	mov    QWORD PTR [r15+0x1b8],rbx
  404404:	mov    DWORD PTR [r15+0x1b0],0xb
  40440f:	mov    rdi,r14
  404412:	call   407160 <read_if_statement@@Base>
  404417:	cmp    DWORD PTR [r15+0x198],0xb
  40441f:	jne    404451 <if_else_statements@@Base+0x1a1>
  404421:	inc    QWORD PTR [rip+0xb060]        # 40f488 <__bss_start@@Base+0x320>
  404428:	test   rax,rax
  40442b:	je     404477 <if_else_statements@@Base+0x1c7>
  40442d:	inc    QWORD PTR [rip+0xb064]        # 40f498 <__bss_start@@Base+0x330>
  404434:	cmp    DWORD PTR [rax],0x4
  404437:	jne    40449d <if_else_statements@@Base+0x1ed>
  404439:	inc    QWORD PTR [rip+0xb068]        # 40f4a8 <__bss_start@@Base+0x340>
  404440:	inc    QWORD PTR [rip+0xb071]        # 40f4b8 <__bss_start@@Base+0x350>
  404447:	add    rsp,0x20
  40444b:	pop    rbx
  40444c:	pop    r14
  40444e:	pop    r15
  404450:	ret    
  404451:	inc    QWORD PTR [rip+0xb038]        # 40f490 <__bss_start@@Base+0x328>
  404458:	lea    rdi,[rip+0x5e8c]        # 40a2eb <_IO_stdin_used@@Base+0x2eb>
  40445f:	lea    rsi,[rip+0x5bb8]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404466:	lea    rcx,[rip+0x5e99]        # 40a306 <_IO_stdin_used@@Base+0x306>
  40446d:	mov    edx,0x14c
  404472:	call   403150 <__assert_fail@plt>
  404477:	inc    QWORD PTR [rip+0xb022]        # 40f4a0 <__bss_start@@Base+0x338>
  40447e:	lea    rdi,[rip+0x5e48]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404485:	lea    rsi,[rip+0x5b92]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40448c:	lea    rcx,[rip+0x5e73]        # 40a306 <_IO_stdin_used@@Base+0x306>
  404493:	mov    edx,0x14d
  404498:	call   403150 <__assert_fail@plt>
  40449d:	inc    QWORD PTR [rip+0xb00c]        # 40f4b0 <__bss_start@@Base+0x348>
  4044a4:	lea    rdi,[rip+0x5e2e]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  4044ab:	lea    rsi,[rip+0x5b6c]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4044b2:	lea    rcx,[rip+0x5e4d]        # 40a306 <_IO_stdin_used@@Base+0x306>
  4044b9:	mov    edx,0x14e
  4044be:	call   403150 <__assert_fail@plt>
  4044c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044cd:	nop    DWORD PTR [rax]

00000000004044d0 <body_with_two_returns@@Base>:
  4044d0:	push   r15
  4044d2:	push   r14
  4044d4:	push   rbx
  4044d5:	sub    rsp,0x20
  4044d9:	inc    QWORD PTR [rip+0xafe0]        # 40f4c0 <__bss_start@@Base+0x358>
  4044e0:	mov    r14,rsp
  4044e3:	lea    rsi,[rsp+0x8]
  4044e8:	mov    rdi,r14
  4044eb:	call   406dc0 <init_grammar@@Base>
  4044f0:	mov    edi,0x40
  4044f5:	call   4031e0 <malloc@plt>
  4044fa:	mov    rbx,rax
  4044fd:	mov    edi,0x4
  404502:	call   4031e0 <malloc@plt>
  404507:	mov    QWORD PTR [rbx],rax
  40450a:	mov    rdi,rax
  40450d:	call   405e70 <init_token_obra@@Base>
  404512:	mov    edi,0x4
  404517:	call   4031e0 <malloc@plt>
  40451c:	mov    QWORD PTR [rbx+0x8],rax
  404520:	mov    rdi,rax
  404523:	call   405eb0 <init_token_return@@Base>
  404528:	mov    edi,0x8
  40452d:	call   4031e0 <malloc@plt>
  404532:	mov    QWORD PTR [rbx+0x10],rax
  404536:	mov    rdi,rax
  404539:	mov    esi,0x1
  40453e:	call   405dd0 <init_token_int_value@@Base>
  404543:	mov    edi,0x4
  404548:	call   4031e0 <malloc@plt>
  40454d:	mov    QWORD PTR [rbx+0x18],rax
  404551:	mov    rdi,rax
  404554:	call   405ed0 <init_token_semicolon@@Base>
  404559:	mov    edi,0x4
  40455e:	call   4031e0 <malloc@plt>
  404563:	mov    QWORD PTR [rbx+0x20],rax
  404567:	mov    rdi,rax
  40456a:	call   405eb0 <init_token_return@@Base>
  40456f:	mov    edi,0x8
  404574:	call   4031e0 <malloc@plt>
  404579:	mov    QWORD PTR [rbx+0x28],rax
  40457d:	mov    rdi,rax
  404580:	mov    esi,0x1
  404585:	call   405dd0 <init_token_int_value@@Base>
  40458a:	mov    edi,0x4
  40458f:	call   4031e0 <malloc@plt>
  404594:	mov    QWORD PTR [rbx+0x30],rax
  404598:	mov    rdi,rax
  40459b:	call   405ed0 <init_token_semicolon@@Base>
  4045a0:	mov    edi,0x4
  4045a5:	call   4031e0 <malloc@plt>
  4045aa:	mov    QWORD PTR [rbx+0x38],rax
  4045ae:	mov    rdi,rax
  4045b1:	call   405e90 <init_token_cbra@@Base>
  4045b6:	lea    r15,[rip+0xbc13]        # 4101d0 <next_fake@@Base>
  4045bd:	mov    QWORD PTR [r15+0x1b8],rbx
  4045c4:	mov    DWORD PTR [r15+0x1b0],0x8
  4045cf:	mov    rdi,r14
  4045d2:	call   406f30 <read_body@@Base>
  4045d7:	cmp    DWORD PTR [r15+0x198],0x8
  4045df:	jne    40463b <body_with_two_returns@@Base+0x16b>
  4045e1:	inc    QWORD PTR [rip+0xaee0]        # 40f4c8 <__bss_start@@Base+0x360>
  4045e8:	test   rax,rax
  4045eb:	je     404661 <body_with_two_returns@@Base+0x191>
  4045ed:	inc    QWORD PTR [rip+0xaee4]        # 40f4d8 <__bss_start@@Base+0x370>
  4045f4:	cmp    DWORD PTR [rax],0x3
  4045f7:	jne    404687 <body_with_two_returns@@Base+0x1b7>
  4045fd:	inc    QWORD PTR [rip+0xaee4]        # 40f4e8 <__bss_start@@Base+0x380>
  404604:	mov    rax,QWORD PTR [rax+0x8]
  404608:	cmp    DWORD PTR [rax],0x3
  40460b:	jne    4046ad <body_with_two_returns@@Base+0x1dd>
  404611:	inc    QWORD PTR [rip+0xaee0]        # 40f4f8 <__bss_start@@Base+0x390>
  404618:	cmp    QWORD PTR [rax+0x8],0x0
  40461d:	jne    4046d3 <body_with_two_returns@@Base+0x203>
  404623:	inc    QWORD PTR [rip+0xaede]        # 40f508 <__bss_start@@Base+0x3a0>
  40462a:	inc    QWORD PTR [rip+0xaee7]        # 40f518 <__bss_start@@Base+0x3b0>
  404631:	add    rsp,0x20
  404635:	pop    rbx
  404636:	pop    r14
  404638:	pop    r15
  40463a:	ret    
  40463b:	inc    QWORD PTR [rip+0xae8e]        # 40f4d0 <__bss_start@@Base+0x368>
  404642:	lea    rdi,[rip+0x5cd7]        # 40a320 <_IO_stdin_used@@Base+0x320>
  404649:	lea    rsi,[rip+0x59ce]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404650:	lea    rcx,[rip+0x5ce3]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  404657:	mov    edx,0x173
  40465c:	call   403150 <__assert_fail@plt>
  404661:	inc    QWORD PTR [rip+0xae78]        # 40f4e0 <__bss_start@@Base+0x378>
  404668:	lea    rdi,[rip+0x5c5e]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  40466f:	lea    rsi,[rip+0x59a8]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404676:	lea    rcx,[rip+0x5cbd]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  40467d:	mov    edx,0x174
  404682:	call   403150 <__assert_fail@plt>
  404687:	inc    QWORD PTR [rip+0xae62]        # 40f4f0 <__bss_start@@Base+0x388>
  40468e:	lea    rdi,[rip+0x5cc2]        # 40a357 <_IO_stdin_used@@Base+0x357>
  404695:	lea    rsi,[rip+0x5982]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40469c:	lea    rcx,[rip+0x5c97]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  4046a3:	mov    edx,0x175
  4046a8:	call   403150 <__assert_fail@plt>
  4046ad:	inc    QWORD PTR [rip+0xae4c]        # 40f500 <__bss_start@@Base+0x398>
  4046b4:	lea    rdi,[rip+0x5cb2]        # 40a36d <_IO_stdin_used@@Base+0x36d>
  4046bb:	lea    rsi,[rip+0x595c]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4046c2:	lea    rcx,[rip+0x5c71]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  4046c9:	mov    edx,0x176
  4046ce:	call   403150 <__assert_fail@plt>
  4046d3:	inc    QWORD PTR [rip+0xae36]        # 40f510 <__bss_start@@Base+0x3a8>
  4046da:	lea    rdi,[rip+0x5ca8]        # 40a389 <_IO_stdin_used@@Base+0x389>
  4046e1:	lea    rsi,[rip+0x5936]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  4046e8:	lea    rcx,[rip+0x5c4b]        # 40a33a <_IO_stdin_used@@Base+0x33a>
  4046ef:	mov    edx,0x177
  4046f4:	call   403150 <__assert_fail@plt>
  4046f9:	nop    DWORD PTR [rax+0x0]

0000000000404700 <body_with_one_return@@Base>:
  404700:	push   r15
  404702:	push   r14
  404704:	push   rbx
  404705:	sub    rsp,0x20
  404709:	inc    QWORD PTR [rip+0xae10]        # 40f520 <__bss_start@@Base+0x3b8>
  404710:	mov    r14,rsp
  404713:	lea    rsi,[rsp+0x8]
  404718:	mov    rdi,r14
  40471b:	call   406dc0 <init_grammar@@Base>
  404720:	mov    edi,0x28
  404725:	call   4031e0 <malloc@plt>
  40472a:	mov    rbx,rax
  40472d:	mov    edi,0x4
  404732:	call   4031e0 <malloc@plt>
  404737:	mov    QWORD PTR [rbx],rax
  40473a:	mov    rdi,rax
  40473d:	call   405e70 <init_token_obra@@Base>
  404742:	mov    edi,0x4
  404747:	call   4031e0 <malloc@plt>
  40474c:	mov    QWORD PTR [rbx+0x8],rax
  404750:	mov    rdi,rax
  404753:	call   405eb0 <init_token_return@@Base>
  404758:	mov    edi,0x8
  40475d:	call   4031e0 <malloc@plt>
  404762:	mov    QWORD PTR [rbx+0x10],rax
  404766:	mov    rdi,rax
  404769:	mov    esi,0x1
  40476e:	call   405dd0 <init_token_int_value@@Base>
  404773:	mov    edi,0x4
  404778:	call   4031e0 <malloc@plt>
  40477d:	mov    QWORD PTR [rbx+0x18],rax
  404781:	mov    rdi,rax
  404784:	call   405ed0 <init_token_semicolon@@Base>
  404789:	mov    edi,0x4
  40478e:	call   4031e0 <malloc@plt>
  404793:	mov    QWORD PTR [rbx+0x20],rax
  404797:	mov    rdi,rax
  40479a:	call   405e90 <init_token_cbra@@Base>
  40479f:	lea    r15,[rip+0xba2a]        # 4101d0 <next_fake@@Base>
  4047a6:	mov    QWORD PTR [r15+0x1b8],rbx
  4047ad:	mov    DWORD PTR [r15+0x1b0],0x5
  4047b8:	mov    rdi,r14
  4047bb:	call   406f30 <read_body@@Base>
  4047c0:	cmp    DWORD PTR [r15+0x198],0x5
  4047c8:	jne    40480c <body_with_one_return@@Base+0x10c>
  4047ca:	inc    QWORD PTR [rip+0xad57]        # 40f528 <__bss_start@@Base+0x3c0>
  4047d1:	test   rax,rax
  4047d4:	je     404832 <body_with_one_return@@Base+0x132>
  4047d6:	inc    QWORD PTR [rip+0xad5b]        # 40f538 <__bss_start@@Base+0x3d0>
  4047dd:	cmp    DWORD PTR [rax],0x3
  4047e0:	jne    404858 <body_with_one_return@@Base+0x158>
  4047e2:	inc    QWORD PTR [rip+0xad5f]        # 40f548 <__bss_start@@Base+0x3e0>
  4047e9:	cmp    QWORD PTR [rax+0x8],0x0
  4047ee:	jne    40487e <body_with_one_return@@Base+0x17e>
  4047f4:	inc    QWORD PTR [rip+0xad5d]        # 40f558 <__bss_start@@Base+0x3f0>
  4047fb:	inc    QWORD PTR [rip+0xad66]        # 40f568 <__bss_start@@Base+0x400>
  404802:	add    rsp,0x20
  404806:	pop    rbx
  404807:	pop    r14
  404809:	pop    r15
  40480b:	ret    
  40480c:	inc    QWORD PTR [rip+0xad1d]        # 40f530 <__bss_start@@Base+0x3c8>
  404813:	lea    rdi,[rip+0x58cd]        # 40a0e7 <_IO_stdin_used@@Base+0xe7>
  40481a:	lea    rsi,[rip+0x57fd]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404821:	lea    rcx,[rip+0x5b79]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  404828:	mov    edx,0x196
  40482d:	call   403150 <__assert_fail@plt>
  404832:	inc    QWORD PTR [rip+0xad07]        # 40f540 <__bss_start@@Base+0x3d8>
  404839:	lea    rdi,[rip+0x5a8d]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404840:	lea    rsi,[rip+0x57d7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404847:	lea    rcx,[rip+0x5b53]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  40484e:	mov    edx,0x197
  404853:	call   403150 <__assert_fail@plt>
  404858:	inc    QWORD PTR [rip+0xacf1]        # 40f550 <__bss_start@@Base+0x3e8>
  40485f:	lea    rdi,[rip+0x5af1]        # 40a357 <_IO_stdin_used@@Base+0x357>
  404866:	lea    rsi,[rip+0x57b1]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  40486d:	lea    rcx,[rip+0x5b2d]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  404874:	mov    edx,0x198
  404879:	call   403150 <__assert_fail@plt>
  40487e:	inc    QWORD PTR [rip+0xacdb]        # 40f560 <__bss_start@@Base+0x3f8>
  404885:	lea    rdi,[rip+0x5b31]        # 40a3bd <_IO_stdin_used@@Base+0x3bd>
  40488c:	lea    rsi,[rip+0x578b]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404893:	lea    rcx,[rip+0x5b07]        # 40a3a1 <_IO_stdin_used@@Base+0x3a1>
  40489a:	mov    edx,0x199
  40489f:	call   403150 <__assert_fail@plt>
  4048a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048ae:	xchg   ax,ax

00000000004048b0 <if_statement_inside_if_statement@@Base>:
  4048b0:	push   r15
  4048b2:	push   r14
  4048b4:	push   r12
  4048b6:	push   rbx
  4048b7:	sub    rsp,0x28
  4048bb:	inc    QWORD PTR [rip+0xacae]        # 40f570 <__bss_start@@Base+0x408>
  4048c2:	lea    r14,[rsp+0x8]
  4048c7:	lea    rsi,[rsp+0x10]
  4048cc:	mov    rdi,r14
  4048cf:	call   406dc0 <init_grammar@@Base>
  4048d4:	mov    edi,0x3
  4048d9:	call   4031e0 <malloc@plt>
  4048de:	mov    r12,rax
  4048e1:	mov    edi,0x3
  4048e6:	call   4031e0 <malloc@plt>
  4048eb:	mov    r15,rax
  4048ee:	mov    WORD PTR [r12],0x3d21
  4048f5:	mov    BYTE PTR [r12+0x2],0x0
  4048fb:	mov    WORD PTR [rax],0x3d21
  404900:	mov    BYTE PTR [rax+0x2],0x0
  404904:	mov    edi,0x98
  404909:	call   4031e0 <malloc@plt>
  40490e:	mov    rbx,rax
  404911:	mov    edi,0x4
  404916:	call   4031e0 <malloc@plt>
  40491b:	mov    QWORD PTR [rbx],rax
  40491e:	mov    rdi,rax
  404921:	call   405e30 <init_token_opar@@Base>
  404926:	mov    edi,0x8
  40492b:	call   4031e0 <malloc@plt>
  404930:	mov    QWORD PTR [rbx+0x8],rax
  404934:	mov    rdi,rax
  404937:	mov    esi,0x1
  40493c:	call   405dd0 <init_token_int_value@@Base>
  404941:	mov    edi,0x8
  404946:	call   4031e0 <malloc@plt>
  40494b:	mov    QWORD PTR [rbx+0x10],rax
  40494f:	mov    rdi,rax
  404952:	mov    esi,0x1
  404957:	call   405dd0 <init_token_int_value@@Base>
  40495c:	mov    edi,0x10
  404961:	call   4031e0 <malloc@plt>
  404966:	mov    QWORD PTR [rbx+0x18],rax
  40496a:	mov    rdi,rax
  40496d:	mov    rsi,r12
  404970:	call   405f50 <init_token_boolean_op@@Base>
  404975:	mov    edi,0x8
  40497a:	call   4031e0 <malloc@plt>
  40497f:	mov    QWORD PTR [rbx+0x20],rax
  404983:	mov    rdi,rax
  404986:	mov    esi,0x1
  40498b:	call   405dd0 <init_token_int_value@@Base>
  404990:	mov    edi,0x4
  404995:	call   4031e0 <malloc@plt>
  40499a:	mov    QWORD PTR [rbx+0x28],rax
  40499e:	mov    rdi,rax
  4049a1:	call   405e50 <init_token_cpar@@Base>
  4049a6:	mov    edi,0x4
  4049ab:	call   4031e0 <malloc@plt>
  4049b0:	mov    QWORD PTR [rbx+0x30],rax
  4049b4:	mov    rdi,rax
  4049b7:	call   405e70 <init_token_obra@@Base>
  4049bc:	mov    edi,0x4
  4049c1:	call   4031e0 <malloc@plt>
  4049c6:	mov    QWORD PTR [rbx+0x38],rax
  4049ca:	mov    rdi,rax
  4049cd:	call   405f10 <init_token_if@@Base>
  4049d2:	mov    edi,0x4
  4049d7:	call   4031e0 <malloc@plt>
  4049dc:	mov    QWORD PTR [rbx+0x40],rax
  4049e0:	mov    rdi,rax
  4049e3:	call   405e30 <init_token_opar@@Base>
  4049e8:	mov    edi,0x8
  4049ed:	call   4031e0 <malloc@plt>
  4049f2:	mov    QWORD PTR [rbx+0x48],rax
  4049f6:	mov    rdi,rax
  4049f9:	mov    esi,0x1
  4049fe:	call   405dd0 <init_token_int_value@@Base>
  404a03:	mov    edi,0x8
  404a08:	call   4031e0 <malloc@plt>
  404a0d:	mov    QWORD PTR [rbx+0x50],rax
  404a11:	mov    rdi,rax
  404a14:	mov    esi,0x1
  404a19:	call   405dd0 <init_token_int_value@@Base>
  404a1e:	mov    edi,0x10
  404a23:	call   4031e0 <malloc@plt>
  404a28:	mov    QWORD PTR [rbx+0x58],rax
  404a2c:	mov    rdi,rax
  404a2f:	mov    rsi,r15
  404a32:	call   405f50 <init_token_boolean_op@@Base>
  404a37:	mov    edi,0x8
  404a3c:	call   4031e0 <malloc@plt>
  404a41:	mov    QWORD PTR [rbx+0x60],rax
  404a45:	mov    rdi,rax
  404a48:	mov    esi,0x1
  404a4d:	call   405dd0 <init_token_int_value@@Base>
  404a52:	mov    edi,0x4
  404a57:	call   4031e0 <malloc@plt>
  404a5c:	mov    QWORD PTR [rbx+0x68],rax
  404a60:	mov    rdi,rax
  404a63:	call   405e50 <init_token_cpar@@Base>
  404a68:	mov    edi,0x4
  404a6d:	call   4031e0 <malloc@plt>
  404a72:	mov    QWORD PTR [rbx+0x70],rax
  404a76:	mov    rdi,rax
  404a79:	call   405e70 <init_token_obra@@Base>
  404a7e:	mov    edi,0x4
  404a83:	call   4031e0 <malloc@plt>
  404a88:	mov    QWORD PTR [rbx+0x78],rax
  404a8c:	mov    rdi,rax
  404a8f:	call   405e90 <init_token_cbra@@Base>
  404a94:	mov    edi,0x4
  404a99:	call   4031e0 <malloc@plt>
  404a9e:	mov    QWORD PTR [rbx+0x80],rax
  404aa5:	mov    rdi,rax
  404aa8:	call   405e90 <init_token_cbra@@Base>
  404aad:	mov    edi,0x4
  404ab2:	call   4031e0 <malloc@plt>
  404ab7:	mov    QWORD PTR [rbx+0x88],rax
  404abe:	mov    rdi,rax
  404ac1:	call   405e90 <init_token_cbra@@Base>
  404ac6:	mov    edi,0x4
  404acb:	call   4031e0 <malloc@plt>
  404ad0:	mov    QWORD PTR [rbx+0x90],rax
  404ad7:	mov    rdi,rax
  404ada:	call   405ef0 <init_token_eof@@Base>
  404adf:	lea    r15,[rip+0xb6ea]        # 4101d0 <next_fake@@Base>
  404ae6:	mov    QWORD PTR [r15+0x1b8],rbx
  404aed:	mov    DWORD PTR [r15+0x1b0],0x13
  404af8:	mov    rdi,r14
  404afb:	call   407160 <read_if_statement@@Base>
  404b00:	cmp    DWORD PTR [r15+0x198],0x13
  404b08:	jne    404b3c <if_statement_inside_if_statement@@Base+0x28c>
  404b0a:	inc    QWORD PTR [rip+0xaa67]        # 40f578 <__bss_start@@Base+0x410>
  404b11:	test   rax,rax
  404b14:	je     404b62 <if_statement_inside_if_statement@@Base+0x2b2>
  404b16:	inc    QWORD PTR [rip+0xaa6b]        # 40f588 <__bss_start@@Base+0x420>
  404b1d:	cmp    DWORD PTR [rax],0x4
  404b20:	jne    404b88 <if_statement_inside_if_statement@@Base+0x2d8>
  404b22:	inc    QWORD PTR [rip+0xaa6f]        # 40f598 <__bss_start@@Base+0x430>
  404b29:	inc    QWORD PTR [rip+0xaa78]        # 40f5a8 <__bss_start@@Base+0x440>
  404b30:	add    rsp,0x28
  404b34:	pop    rbx
  404b35:	pop    r12
  404b37:	pop    r14
  404b39:	pop    r15
  404b3b:	ret    
  404b3c:	inc    QWORD PTR [rip+0xaa3d]        # 40f580 <__bss_start@@Base+0x418>
  404b43:	lea    rdi,[rip+0x5885]        # 40a3cf <_IO_stdin_used@@Base+0x3cf>
  404b4a:	lea    rsi,[rip+0x54cd]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404b51:	lea    rcx,[rip+0x5892]        # 40a3ea <_IO_stdin_used@@Base+0x3ea>
  404b58:	mov    edx,0x1e0
  404b5d:	call   403150 <__assert_fail@plt>
  404b62:	inc    QWORD PTR [rip+0xaa27]        # 40f590 <__bss_start@@Base+0x428>
  404b69:	lea    rdi,[rip+0x575d]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404b70:	lea    rsi,[rip+0x54a7]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404b77:	lea    rcx,[rip+0x586c]        # 40a3ea <_IO_stdin_used@@Base+0x3ea>
  404b7e:	mov    edx,0x1e1
  404b83:	call   403150 <__assert_fail@plt>
  404b88:	inc    QWORD PTR [rip+0xaa11]        # 40f5a0 <__bss_start@@Base+0x438>
  404b8f:	lea    rdi,[rip+0x5743]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  404b96:	lea    rsi,[rip+0x5481]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404b9d:	lea    rcx,[rip+0x5846]        # 40a3ea <_IO_stdin_used@@Base+0x3ea>
  404ba4:	mov    edx,0x1e2
  404ba9:	call   403150 <__assert_fail@plt>
  404bae:	xchg   ax,ax

0000000000404bb0 <if_statement_inside_else_statement@@Base>:
  404bb0:	push   r15
  404bb2:	push   r14
  404bb4:	push   r12
  404bb6:	push   rbx
  404bb7:	sub    rsp,0x28
  404bbb:	inc    QWORD PTR [rip+0xa9ee]        # 40f5b0 <__bss_start@@Base+0x448>
  404bc2:	lea    r14,[rsp+0x8]
  404bc7:	lea    rsi,[rsp+0x10]
  404bcc:	mov    rdi,r14
  404bcf:	call   406dc0 <init_grammar@@Base>
  404bd4:	mov    edi,0x3
  404bd9:	call   4031e0 <malloc@plt>
  404bde:	mov    r12,rax
  404be1:	mov    edi,0x3
  404be6:	call   4031e0 <malloc@plt>
  404beb:	mov    r15,rax
  404bee:	mov    WORD PTR [r12],0x3d21
  404bf5:	mov    BYTE PTR [r12+0x2],0x0
  404bfb:	mov    WORD PTR [rax],0x3d21
  404c00:	mov    BYTE PTR [rax+0x2],0x0
  404c04:	mov    edi,0xa8
  404c09:	call   4031e0 <malloc@plt>
  404c0e:	mov    rbx,rax
  404c11:	mov    edi,0x4
  404c16:	call   4031e0 <malloc@plt>
  404c1b:	mov    QWORD PTR [rbx],rax
  404c1e:	mov    rdi,rax
  404c21:	call   405e30 <init_token_opar@@Base>
  404c26:	mov    edi,0x8
  404c2b:	call   4031e0 <malloc@plt>
  404c30:	mov    QWORD PTR [rbx+0x8],rax
  404c34:	mov    rdi,rax
  404c37:	mov    esi,0x1
  404c3c:	call   405dd0 <init_token_int_value@@Base>
  404c41:	mov    edi,0x8
  404c46:	call   4031e0 <malloc@plt>
  404c4b:	mov    QWORD PTR [rbx+0x10],rax
  404c4f:	mov    rdi,rax
  404c52:	mov    esi,0x1
  404c57:	call   405dd0 <init_token_int_value@@Base>
  404c5c:	mov    edi,0x10
  404c61:	call   4031e0 <malloc@plt>
  404c66:	mov    QWORD PTR [rbx+0x18],rax
  404c6a:	mov    rdi,rax
  404c6d:	mov    rsi,r12
  404c70:	call   405f50 <init_token_boolean_op@@Base>
  404c75:	mov    edi,0x8
  404c7a:	call   4031e0 <malloc@plt>
  404c7f:	mov    QWORD PTR [rbx+0x20],rax
  404c83:	mov    rdi,rax
  404c86:	mov    esi,0x1
  404c8b:	call   405dd0 <init_token_int_value@@Base>
  404c90:	mov    edi,0x4
  404c95:	call   4031e0 <malloc@plt>
  404c9a:	mov    QWORD PTR [rbx+0x28],rax
  404c9e:	mov    rdi,rax
  404ca1:	call   405e50 <init_token_cpar@@Base>
  404ca6:	mov    edi,0x4
  404cab:	call   4031e0 <malloc@plt>
  404cb0:	mov    QWORD PTR [rbx+0x30],rax
  404cb4:	mov    rdi,rax
  404cb7:	call   405e70 <init_token_obra@@Base>
  404cbc:	mov    edi,0x4
  404cc1:	call   4031e0 <malloc@plt>
  404cc6:	mov    QWORD PTR [rbx+0x38],rax
  404cca:	mov    rdi,rax
  404ccd:	call   405e90 <init_token_cbra@@Base>
  404cd2:	mov    edi,0x4
  404cd7:	call   4031e0 <malloc@plt>
  404cdc:	mov    QWORD PTR [rbx+0x40],rax
  404ce0:	mov    rdi,rax
  404ce3:	call   405f30 <init_token_else@@Base>
  404ce8:	mov    edi,0x4
  404ced:	call   4031e0 <malloc@plt>
  404cf2:	mov    QWORD PTR [rbx+0x48],rax
  404cf6:	mov    rdi,rax
  404cf9:	call   405e70 <init_token_obra@@Base>
  404cfe:	mov    edi,0x4
  404d03:	call   4031e0 <malloc@plt>
  404d08:	mov    QWORD PTR [rbx+0x50],rax
  404d0c:	mov    rdi,rax
  404d0f:	call   405f10 <init_token_if@@Base>
  404d14:	mov    edi,0x4
  404d19:	call   4031e0 <malloc@plt>
  404d1e:	mov    QWORD PTR [rbx+0x58],rax
  404d22:	mov    rdi,rax
  404d25:	call   405e30 <init_token_opar@@Base>
  404d2a:	mov    edi,0x8
  404d2f:	call   4031e0 <malloc@plt>
  404d34:	mov    QWORD PTR [rbx+0x60],rax
  404d38:	mov    rdi,rax
  404d3b:	mov    esi,0x1
  404d40:	call   405dd0 <init_token_int_value@@Base>
  404d45:	mov    edi,0x8
  404d4a:	call   4031e0 <malloc@plt>
  404d4f:	mov    QWORD PTR [rbx+0x68],rax
  404d53:	mov    rdi,rax
  404d56:	mov    esi,0x1
  404d5b:	call   405dd0 <init_token_int_value@@Base>
  404d60:	mov    edi,0x10
  404d65:	call   4031e0 <malloc@plt>
  404d6a:	mov    QWORD PTR [rbx+0x70],rax
  404d6e:	mov    rdi,rax
  404d71:	mov    rsi,r15
  404d74:	call   405f50 <init_token_boolean_op@@Base>
  404d79:	mov    edi,0x8
  404d7e:	call   4031e0 <malloc@plt>
  404d83:	mov    QWORD PTR [rbx+0x78],rax
  404d87:	mov    rdi,rax
  404d8a:	mov    esi,0x1
  404d8f:	call   405dd0 <init_token_int_value@@Base>
  404d94:	mov    edi,0x4
  404d99:	call   4031e0 <malloc@plt>
  404d9e:	mov    QWORD PTR [rbx+0x80],rax
  404da5:	mov    rdi,rax
  404da8:	call   405e50 <init_token_cpar@@Base>
  404dad:	mov    edi,0x4
  404db2:	call   4031e0 <malloc@plt>
  404db7:	mov    QWORD PTR [rbx+0x88],rax
  404dbe:	mov    rdi,rax
  404dc1:	call   405e70 <init_token_obra@@Base>
  404dc6:	mov    edi,0x4
  404dcb:	call   4031e0 <malloc@plt>
  404dd0:	mov    QWORD PTR [rbx+0x90],rax
  404dd7:	mov    rdi,rax
  404dda:	call   405e90 <init_token_cbra@@Base>
  404ddf:	mov    edi,0x4
  404de4:	call   4031e0 <malloc@plt>
  404de9:	mov    QWORD PTR [rbx+0x98],rax
  404df0:	mov    rdi,rax
  404df3:	call   405e90 <init_token_cbra@@Base>
  404df8:	mov    edi,0x4
  404dfd:	call   4031e0 <malloc@plt>
  404e02:	mov    QWORD PTR [rbx+0xa0],rax
  404e09:	mov    rdi,rax
  404e0c:	call   405e90 <init_token_cbra@@Base>
  404e11:	lea    r15,[rip+0xb3b8]        # 4101d0 <next_fake@@Base>
  404e18:	mov    QWORD PTR [r15+0x1b8],rbx
  404e1f:	mov    DWORD PTR [r15+0x1b0],0x15
  404e2a:	mov    rdi,r14
  404e2d:	call   407160 <read_if_statement@@Base>
  404e32:	cmp    DWORD PTR [r15+0x198],0x15
  404e3a:	jne    404e6e <if_statement_inside_else_statement@@Base+0x2be>
  404e3c:	inc    QWORD PTR [rip+0xa775]        # 40f5b8 <__bss_start@@Base+0x450>
  404e43:	test   rax,rax
  404e46:	je     404e94 <if_statement_inside_else_statement@@Base+0x2e4>
  404e48:	inc    QWORD PTR [rip+0xa779]        # 40f5c8 <__bss_start@@Base+0x460>
  404e4f:	cmp    DWORD PTR [rax],0x4
  404e52:	jne    404eba <if_statement_inside_else_statement@@Base+0x30a>
  404e54:	inc    QWORD PTR [rip+0xa77d]        # 40f5d8 <__bss_start@@Base+0x470>
  404e5b:	inc    QWORD PTR [rip+0xa786]        # 40f5e8 <__bss_start@@Base+0x480>
  404e62:	add    rsp,0x28
  404e66:	pop    rbx
  404e67:	pop    r12
  404e69:	pop    r14
  404e6b:	pop    r15
  404e6d:	ret    
  404e6e:	inc    QWORD PTR [rip+0xa74b]        # 40f5c0 <__bss_start@@Base+0x458>
  404e75:	lea    rdi,[rip+0x5596]        # 40a412 <_IO_stdin_used@@Base+0x412>
  404e7c:	lea    rsi,[rip+0x519b]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404e83:	lea    rcx,[rip+0x55a3]        # 40a42d <_IO_stdin_used@@Base+0x42d>
  404e8a:	mov    edx,0x22e
  404e8f:	call   403150 <__assert_fail@plt>
  404e94:	inc    QWORD PTR [rip+0xa735]        # 40f5d0 <__bss_start@@Base+0x468>
  404e9b:	lea    rdi,[rip+0x542b]        # 40a2cd <_IO_stdin_used@@Base+0x2cd>
  404ea2:	lea    rsi,[rip+0x5175]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404ea9:	lea    rcx,[rip+0x557d]        # 40a42d <_IO_stdin_used@@Base+0x42d>
  404eb0:	mov    edx,0x22f
  404eb5:	call   403150 <__assert_fail@plt>
  404eba:	inc    QWORD PTR [rip+0xa71f]        # 40f5e0 <__bss_start@@Base+0x478>
  404ec1:	lea    rdi,[rip+0x5411]        # 40a2d9 <_IO_stdin_used@@Base+0x2d9>
  404ec8:	lea    rsi,[rip+0x514f]        # 40a01e <_IO_stdin_used@@Base+0x1e>
  404ecf:	lea    rcx,[rip+0x5557]        # 40a42d <_IO_stdin_used@@Base+0x42d>
  404ed6:	mov    edx,0x230
  404edb:	call   403150 <__assert_fail@plt>

0000000000404ee0 <main@@Base>:
  404ee0:	push   rbp
  404ee1:	push   r15
  404ee3:	push   r14
  404ee5:	push   r13
  404ee7:	push   r12
  404ee9:	push   rbx
  404eea:	push   rax
  404eeb:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6fd]        # 40f5f0 <__bss_start@@Base+0x488>
  404ef3:	vpcmpeqd xmm1,xmm1,xmm1
  404ef7:	vpsubq xmm0,xmm0,xmm1
  404efb:	vmovdqa XMMWORD PTR [rip+0xa6ed],xmm0        # 40f5f0 <__bss_start@@Base+0x488>
  404f03:	mov    rbx,QWORD PTR [rip+0xa0d6]        # 40efe0 <stdout@GLIBC_2.2.5>
  404f0a:	mov    rdi,QWORD PTR [rbx]
  404f0d:	xor    esi,esi
  404f0f:	call   403100 <setbuf@plt>
  404f14:	mov    rcx,QWORD PTR [rbx]
  404f17:	lea    r14,[rip+0x57ac]        # 40a6ca <_IO_stdin_used@@Base+0x6ca>
  404f1e:	mov    esi,0xe
  404f23:	mov    edx,0x1
  404f28:	mov    rdi,r14
  404f2b:	call   403270 <fwrite@plt>
  404f30:	mov    rcx,QWORD PTR [rbx]
  404f33:	lea    rdi,[rip+0x551d]        # 40a457 <_IO_stdin_used@@Base+0x457>
  404f3a:	mov    esi,0xe
  404f3f:	mov    edx,0x1
  404f44:	call   403270 <fwrite@plt>
  404f49:	mov    rcx,QWORD PTR [rbx]
  404f4c:	lea    rdi,[rip+0x5513]        # 40a466 <_IO_stdin_used@@Base+0x466>
  404f53:	mov    esi,0xf
  404f58:	mov    edx,0x1
  404f5d:	call   403270 <fwrite@plt>
  404f62:	xor    edi,edi
  404f64:	call   4031f0 <fflush@plt>
  404f69:	lea    r12,[rip+0x5506]        # 40a476 <_IO_stdin_used@@Base+0x476>
  404f70:	lea    r15,[rip+0x5511]        # 40a488 <_IO_stdin_used@@Base+0x488>
  404f77:	lea    rdx,[rip+0x55cb]        # 40a549 <_IO_stdin_used@@Base+0x549>
  404f7e:	mov    rdi,r12
  404f81:	mov    rsi,r15
  404f84:	xor    eax,eax
  404f86:	call   403120 <printf@plt>
  404f8b:	vmovdqa xmm0,XMMWORD PTR [rip+0xa30d]        # 40f2a0 <__bss_start@@Base+0x138>
  404f93:	vpcmpeqd xmm1,xmm1,xmm1
  404f97:	vpsubq xmm0,xmm0,xmm1
  404f9b:	vmovdqa XMMWORD PTR [rip+0xa2fd],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  404fa3:	vmovdqa xmm0,XMMWORD PTR [rip+0xa275]        # 40f220 <__bss_start@@Base+0xb8>
  404fab:	vpsubq xmm0,xmm0,xmm1
  404faf:	vpcmpeqd xmm1,xmm1,xmm1
  404fb3:	vmovdqa XMMWORD PTR [rip+0xa265],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  404fbb:	vpxor  xmm0,xmm0,xmm0
  404fbf:	lea    rbp,[rip+0xb20a]        # 4101d0 <next_fake@@Base>
  404fc6:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  404fcb:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  404fd0:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  404fd5:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  404fda:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  404fe2:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  404fea:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  404ff2:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  404ffa:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405002:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  40500a:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405012:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  40501a:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405022:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  40502a:	mov    QWORD PTR [rbp+0x1c0],0x0
  405035:	mov    DWORD PTR [rbp+0x19c],0x32
  40503f:	vmovdqa xmm0,XMMWORD PTR [rip+0xa249]        # 40f290 <__bss_start@@Base+0x128>
  405047:	vpsubq xmm0,xmm0,xmm1
  40504b:	vmovdqa XMMWORD PTR [rip+0xa23d],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405053:	lea    rbx,[rip+0xae2e]        # 40fe88 <push_back_fake@@Base>
  40505a:	mov    edx,0x348
  40505f:	mov    rdi,rbx
  405062:	xor    esi,esi
  405064:	vzeroupper 
  405067:	call   403160 <memset@plt>
  40506c:	mov    DWORD PTR [rbx+0x334],0x32
  405076:	call   403790 <no_int_as_first_stuff@@Base>
  40507b:	lea    r13,[rip+0x5627]        # 40a6a9 <_IO_stdin_used@@Base+0x6a9>
  405082:	mov    rdi,r13
  405085:	call   403090 <puts@plt>
  40508a:	lea    rdx,[rip+0x54ce]        # 40a55f <_IO_stdin_used@@Base+0x55f>
  405091:	mov    rdi,r12
  405094:	mov    rsi,r15
  405097:	xor    eax,eax
  405099:	call   403120 <printf@plt>
  40509e:	vmovdqa xmm0,XMMWORD PTR [rip+0xa1fa]        # 40f2a0 <__bss_start@@Base+0x138>
  4050a6:	vpcmpeqd xmm1,xmm1,xmm1
  4050aa:	vpsubq xmm0,xmm0,xmm1
  4050ae:	vmovdqa XMMWORD PTR [rip+0xa1ea],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4050b6:	vmovdqa xmm0,XMMWORD PTR [rip+0xa162]        # 40f220 <__bss_start@@Base+0xb8>
  4050be:	vpsubq xmm0,xmm0,xmm1
  4050c2:	vpcmpeqd xmm1,xmm1,xmm1
  4050c6:	vmovdqa XMMWORD PTR [rip+0xa152],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4050ce:	vpxor  xmm0,xmm0,xmm0
  4050d2:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4050d7:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4050dc:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4050e1:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4050e6:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4050ee:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4050f6:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4050fe:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405106:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  40510e:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405116:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  40511e:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405126:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  40512e:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405136:	mov    QWORD PTR [rbp+0x1c0],0x0
  405141:	mov    DWORD PTR [rbp+0x19c],0x32
  40514b:	vmovdqa xmm0,XMMWORD PTR [rip+0xa13d]        # 40f290 <__bss_start@@Base+0x128>
  405153:	vpsubq xmm0,xmm0,xmm1
  405157:	vmovdqa XMMWORD PTR [rip+0xa131],xmm0        # 40f290 <__bss_start@@Base+0x128>
  40515f:	mov    edx,0x348
  405164:	mov    rdi,rbx
  405167:	xor    esi,esi
  405169:	vzeroupper 
  40516c:	call   403160 <memset@plt>
  405171:	mov    DWORD PTR [rbx+0x334],0x32
  40517b:	call   403860 <int_but_not_followed_by_function@@Base>
  405180:	mov    rdi,r13
  405183:	call   403090 <puts@plt>
  405188:	lea    rdx,[rip+0x5459]        # 40a5e8 <_IO_stdin_used@@Base+0x5e8>
  40518f:	mov    rdi,r12
  405192:	mov    rsi,r15
  405195:	xor    eax,eax
  405197:	call   403120 <printf@plt>
  40519c:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0fc]        # 40f2a0 <__bss_start@@Base+0x138>
  4051a4:	vpcmpeqd xmm1,xmm1,xmm1
  4051a8:	vpsubq xmm0,xmm0,xmm1
  4051ac:	vmovdqa XMMWORD PTR [rip+0xa0ec],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4051b4:	vmovdqa xmm0,XMMWORD PTR [rip+0xa064]        # 40f220 <__bss_start@@Base+0xb8>
  4051bc:	vpsubq xmm0,xmm0,xmm1
  4051c0:	vpcmpeqd xmm1,xmm1,xmm1
  4051c4:	vmovdqa XMMWORD PTR [rip+0xa054],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4051cc:	vpxor  xmm0,xmm0,xmm0
  4051d0:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4051d5:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4051da:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4051df:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4051e4:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4051ec:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4051f4:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4051fc:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405204:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  40520c:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405214:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  40521c:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405224:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  40522c:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405234:	mov    QWORD PTR [rbp+0x1c0],0x0
  40523f:	mov    DWORD PTR [rbp+0x19c],0x32
  405249:	vmovdqa xmm0,XMMWORD PTR [rip+0xa03f]        # 40f290 <__bss_start@@Base+0x128>
  405251:	vpsubq xmm0,xmm0,xmm1
  405255:	vmovdqa XMMWORD PTR [rip+0xa033],xmm0        # 40f290 <__bss_start@@Base+0x128>
  40525d:	mov    edx,0x348
  405262:	mov    rdi,rbx
  405265:	xor    esi,esi
  405267:	vzeroupper 
  40526a:	call   403160 <memset@plt>
  40526f:	mov    DWORD PTR [rbx+0x334],0x32
  405279:	call   403f00 <boolean_unary_operator_is_read_properly@@Base>
  40527e:	mov    rdi,r13
  405281:	call   403090 <puts@plt>
  405286:	lea    rdx,[rip+0x5332]        # 40a5bf <_IO_stdin_used@@Base+0x5bf>
  40528d:	mov    rdi,r12
  405290:	mov    rsi,r15
  405293:	xor    eax,eax
  405295:	call   403120 <printf@plt>
  40529a:	vmovdqa xmm0,XMMWORD PTR [rip+0x9ffe]        # 40f2a0 <__bss_start@@Base+0x138>
  4052a2:	vpcmpeqd xmm1,xmm1,xmm1
  4052a6:	vpsubq xmm0,xmm0,xmm1
  4052aa:	vmovdqa XMMWORD PTR [rip+0x9fee],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4052b2:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f66]        # 40f220 <__bss_start@@Base+0xb8>
  4052ba:	vpsubq xmm0,xmm0,xmm1
  4052be:	vpcmpeqd xmm1,xmm1,xmm1
  4052c2:	vmovdqa XMMWORD PTR [rip+0x9f56],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4052ca:	vpxor  xmm0,xmm0,xmm0
  4052ce:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4052d3:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4052d8:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4052dd:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4052e2:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4052ea:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4052f2:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4052fa:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405302:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  40530a:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405312:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  40531a:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405322:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  40532a:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405332:	mov    QWORD PTR [rbp+0x1c0],0x0
  40533d:	mov    DWORD PTR [rbp+0x19c],0x32
  405347:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f41]        # 40f290 <__bss_start@@Base+0x128>
  40534f:	vpsubq xmm0,xmm0,xmm1
  405353:	vmovdqa XMMWORD PTR [rip+0x9f35],xmm0        # 40f290 <__bss_start@@Base+0x128>
  40535b:	mov    edx,0x348
  405360:	mov    rdi,rbx
  405363:	xor    esi,esi
  405365:	vzeroupper 
  405368:	call   403160 <memset@plt>
  40536d:	mov    DWORD PTR [rbx+0x334],0x32
  405377:	call   403d20 <boolean_binary_operator_is_read_properly@@Base>
  40537c:	mov    rdi,r13
  40537f:	call   403090 <puts@plt>
  405384:	lea    rdx,[rip+0x51f5]        # 40a580 <_IO_stdin_used@@Base+0x580>
  40538b:	mov    rdi,r12
  40538e:	mov    rsi,r15
  405391:	xor    eax,eax
  405393:	call   403120 <printf@plt>
  405398:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f00]        # 40f2a0 <__bss_start@@Base+0x138>
  4053a0:	vpcmpeqd xmm1,xmm1,xmm1
  4053a4:	vpsubq xmm0,xmm0,xmm1
  4053a8:	vmovdqa XMMWORD PTR [rip+0x9ef0],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4053b0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e68]        # 40f220 <__bss_start@@Base+0xb8>
  4053b8:	vpsubq xmm0,xmm0,xmm1
  4053bc:	vpcmpeqd xmm1,xmm1,xmm1
  4053c0:	vmovdqa XMMWORD PTR [rip+0x9e58],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4053c8:	vpxor  xmm0,xmm0,xmm0
  4053cc:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4053d1:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4053d6:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4053db:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4053e0:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4053e8:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4053f0:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4053f8:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405400:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405408:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405410:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405418:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405420:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405428:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405430:	mov    QWORD PTR [rbp+0x1c0],0x0
  40543b:	mov    DWORD PTR [rbp+0x19c],0x32
  405445:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e43]        # 40f290 <__bss_start@@Base+0x128>
  40544d:	vpsubq xmm0,xmm0,xmm1
  405451:	vmovdqa XMMWORD PTR [rip+0x9e37],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405459:	mov    edx,0x348
  40545e:	mov    rdi,rbx
  405461:	xor    esi,esi
  405463:	vzeroupper 
  405466:	call   403160 <memset@plt>
  40546b:	mov    DWORD PTR [rbx+0x334],0x32
  405475:	call   403960 <boolean_expression_is_read_properly@@Base>
  40547a:	mov    rdi,r13
  40547d:	call   403090 <puts@plt>
  405482:	lea    rdx,[rip+0x511b]        # 40a5a4 <_IO_stdin_used@@Base+0x5a4>
  405489:	mov    rdi,r12
  40548c:	mov    rsi,r15
  40548f:	xor    eax,eax
  405491:	call   403120 <printf@plt>
  405496:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e02]        # 40f2a0 <__bss_start@@Base+0x138>
  40549e:	vpcmpeqd xmm1,xmm1,xmm1
  4054a2:	vpsubq xmm0,xmm0,xmm1
  4054a6:	vmovdqa XMMWORD PTR [rip+0x9df2],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4054ae:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d6a]        # 40f220 <__bss_start@@Base+0xb8>
  4054b6:	vpsubq xmm0,xmm0,xmm1
  4054ba:	vpcmpeqd xmm1,xmm1,xmm1
  4054be:	vmovdqa XMMWORD PTR [rip+0x9d5a],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4054c6:	vpxor  xmm0,xmm0,xmm0
  4054ca:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4054cf:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4054d4:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4054d9:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4054de:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4054e6:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4054ee:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4054f6:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4054fe:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405506:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  40550e:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405516:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  40551e:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405526:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  40552e:	mov    QWORD PTR [rbp+0x1c0],0x0
  405539:	mov    DWORD PTR [rbp+0x19c],0x32
  405543:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d45]        # 40f290 <__bss_start@@Base+0x128>
  40554b:	vpsubq xmm0,xmm0,xmm1
  40554f:	vmovdqa XMMWORD PTR [rip+0x9d39],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405557:	mov    edx,0x348
  40555c:	mov    rdi,rbx
  40555f:	xor    esi,esi
  405561:	vzeroupper 
  405564:	call   403160 <memset@plt>
  405569:	mov    DWORD PTR [rbx+0x334],0x32
  405573:	call   403b00 <boolean_expression_complex@@Base>
  405578:	mov    rdi,r13
  40557b:	call   403090 <puts@plt>
  405580:	lea    rdx,[rip+0x5089]        # 40a610 <_IO_stdin_used@@Base+0x610>
  405587:	mov    rdi,r12
  40558a:	mov    rsi,r15
  40558d:	xor    eax,eax
  40558f:	call   403120 <printf@plt>
  405594:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d04]        # 40f2a0 <__bss_start@@Base+0x138>
  40559c:	vpcmpeqd xmm1,xmm1,xmm1
  4055a0:	vpsubq xmm0,xmm0,xmm1
  4055a4:	vmovdqa XMMWORD PTR [rip+0x9cf4],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4055ac:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c6c]        # 40f220 <__bss_start@@Base+0xb8>
  4055b4:	vpsubq xmm0,xmm0,xmm1
  4055b8:	vpcmpeqd xmm1,xmm1,xmm1
  4055bc:	vmovdqa XMMWORD PTR [rip+0x9c5c],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4055c4:	vpxor  xmm0,xmm0,xmm0
  4055c8:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4055cd:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4055d2:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4055d7:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4055dc:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4055e4:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4055ec:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4055f4:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4055fc:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405604:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  40560c:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405614:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  40561c:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405624:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  40562c:	mov    QWORD PTR [rbp+0x1c0],0x0
  405637:	mov    DWORD PTR [rbp+0x19c],0x32
  405641:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c47]        # 40f290 <__bss_start@@Base+0x128>
  405649:	vpsubq xmm0,xmm0,xmm1
  40564d:	vmovdqa XMMWORD PTR [rip+0x9c3b],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405655:	mov    edx,0x348
  40565a:	mov    rdi,rbx
  40565d:	xor    esi,esi
  40565f:	vzeroupper 
  405662:	call   403160 <memset@plt>
  405667:	mov    DWORD PTR [rbx+0x334],0x32
  405671:	call   4040c0 <if_statement_only@@Base>
  405676:	mov    rdi,r13
  405679:	call   403090 <puts@plt>
  40567e:	lea    rdx,[rip+0x4f9d]        # 40a622 <_IO_stdin_used@@Base+0x622>
  405685:	mov    rdi,r12
  405688:	mov    rsi,r15
  40568b:	xor    eax,eax
  40568d:	call   403120 <printf@plt>
  405692:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c06]        # 40f2a0 <__bss_start@@Base+0x138>
  40569a:	vpcmpeqd xmm1,xmm1,xmm1
  40569e:	vpsubq xmm0,xmm0,xmm1
  4056a2:	vmovdqa XMMWORD PTR [rip+0x9bf6],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4056aa:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b6e]        # 40f220 <__bss_start@@Base+0xb8>
  4056b2:	vpsubq xmm0,xmm0,xmm1
  4056b6:	vpcmpeqd xmm1,xmm1,xmm1
  4056ba:	vmovdqa XMMWORD PTR [rip+0x9b5e],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4056c2:	vpxor  xmm0,xmm0,xmm0
  4056c6:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4056cb:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4056d0:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4056d5:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4056da:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4056e2:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4056ea:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4056f2:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4056fa:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405702:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  40570a:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405712:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  40571a:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405722:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  40572a:	mov    QWORD PTR [rbp+0x1c0],0x0
  405735:	mov    DWORD PTR [rbp+0x19c],0x32
  40573f:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b49]        # 40f290 <__bss_start@@Base+0x128>
  405747:	vpsubq xmm0,xmm0,xmm1
  40574b:	vmovdqa XMMWORD PTR [rip+0x9b3d],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405753:	mov    edx,0x348
  405758:	mov    rdi,rbx
  40575b:	xor    esi,esi
  40575d:	vzeroupper 
  405760:	call   403160 <memset@plt>
  405765:	mov    DWORD PTR [rbx+0x334],0x32
  40576f:	call   4042b0 <if_else_statements@@Base>
  405774:	mov    rdi,r13
  405777:	call   403090 <puts@plt>
  40577c:	lea    rdx,[rip+0x4edd]        # 40a660 <_IO_stdin_used@@Base+0x660>
  405783:	mov    rdi,r12
  405786:	mov    rsi,r15
  405789:	xor    eax,eax
  40578b:	call   403120 <printf@plt>
  405790:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b08]        # 40f2a0 <__bss_start@@Base+0x138>
  405798:	vpcmpeqd xmm1,xmm1,xmm1
  40579c:	vpsubq xmm0,xmm0,xmm1
  4057a0:	vmovdqa XMMWORD PTR [rip+0x9af8],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4057a8:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a70]        # 40f220 <__bss_start@@Base+0xb8>
  4057b0:	vpsubq xmm0,xmm0,xmm1
  4057b4:	vpcmpeqd xmm1,xmm1,xmm1
  4057b8:	vmovdqa XMMWORD PTR [rip+0x9a60],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4057c0:	vpxor  xmm0,xmm0,xmm0
  4057c4:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4057c9:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4057ce:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4057d3:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4057d8:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4057e0:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4057e8:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4057f0:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4057f8:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405800:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405808:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405810:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405818:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405820:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405828:	mov    QWORD PTR [rbp+0x1c0],0x0
  405833:	mov    DWORD PTR [rbp+0x19c],0x32
  40583d:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a4b]        # 40f290 <__bss_start@@Base+0x128>
  405845:	vpsubq xmm0,xmm0,xmm1
  405849:	vmovdqa XMMWORD PTR [rip+0x9a3f],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405851:	mov    edx,0x348
  405856:	mov    rdi,rbx
  405859:	xor    esi,esi
  40585b:	vzeroupper 
  40585e:	call   403160 <memset@plt>
  405863:	mov    DWORD PTR [rbx+0x334],0x32
  40586d:	call   4048b0 <if_statement_inside_if_statement@@Base>
  405872:	mov    rdi,r13
  405875:	call   403090 <puts@plt>
  40587a:	lea    rdx,[rip+0x4e00]        # 40a681 <_IO_stdin_used@@Base+0x681>
  405881:	mov    rdi,r12
  405884:	mov    rsi,r15
  405887:	xor    eax,eax
  405889:	call   403120 <printf@plt>
  40588e:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a0a]        # 40f2a0 <__bss_start@@Base+0x138>
  405896:	vpcmpeqd xmm1,xmm1,xmm1
  40589a:	vpsubq xmm0,xmm0,xmm1
  40589e:	vmovdqa XMMWORD PTR [rip+0x99fa],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4058a6:	vmovdqa xmm0,XMMWORD PTR [rip+0x9972]        # 40f220 <__bss_start@@Base+0xb8>
  4058ae:	vpsubq xmm0,xmm0,xmm1
  4058b2:	vpcmpeqd xmm1,xmm1,xmm1
  4058b6:	vmovdqa XMMWORD PTR [rip+0x9962],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4058be:	vpxor  xmm0,xmm0,xmm0
  4058c2:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4058c7:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4058cc:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4058d1:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4058d6:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4058de:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4058e6:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4058ee:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4058f6:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4058fe:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405906:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  40590e:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405916:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  40591e:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405926:	mov    QWORD PTR [rbp+0x1c0],0x0
  405931:	mov    DWORD PTR [rbp+0x19c],0x32
  40593b:	vmovdqa xmm0,XMMWORD PTR [rip+0x994d]        # 40f290 <__bss_start@@Base+0x128>
  405943:	vpsubq xmm0,xmm0,xmm1
  405947:	vmovdqa XMMWORD PTR [rip+0x9941],xmm0        # 40f290 <__bss_start@@Base+0x128>
  40594f:	mov    edx,0x348
  405954:	mov    rdi,rbx
  405957:	xor    esi,esi
  405959:	vzeroupper 
  40595c:	call   403160 <memset@plt>
  405961:	mov    DWORD PTR [rbx+0x334],0x32
  40596b:	call   404bb0 <if_statement_inside_else_statement@@Base>
  405970:	mov    rdi,r13
  405973:	call   403090 <puts@plt>
  405978:	lea    rdx,[rip+0x4ccc]        # 40a64b <_IO_stdin_used@@Base+0x64b>
  40597f:	mov    rdi,r12
  405982:	mov    rsi,r15
  405985:	xor    eax,eax
  405987:	call   403120 <printf@plt>
  40598c:	vmovdqa xmm0,XMMWORD PTR [rip+0x990c]        # 40f2a0 <__bss_start@@Base+0x138>
  405994:	vpcmpeqd xmm1,xmm1,xmm1
  405998:	vpsubq xmm0,xmm0,xmm1
  40599c:	vmovdqa XMMWORD PTR [rip+0x98fc],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  4059a4:	vmovdqa xmm0,XMMWORD PTR [rip+0x9874]        # 40f220 <__bss_start@@Base+0xb8>
  4059ac:	vpsubq xmm0,xmm0,xmm1
  4059b0:	vpcmpeqd xmm1,xmm1,xmm1
  4059b4:	vmovdqa XMMWORD PTR [rip+0x9864],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  4059bc:	vpxor  xmm0,xmm0,xmm0
  4059c0:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  4059c5:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  4059ca:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  4059cf:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  4059d4:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  4059dc:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  4059e4:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  4059ec:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  4059f4:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  4059fc:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405a04:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405a0c:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405a14:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405a1c:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405a24:	mov    QWORD PTR [rbp+0x1c0],0x0
  405a2f:	mov    DWORD PTR [rbp+0x19c],0x32
  405a39:	vmovdqa xmm0,XMMWORD PTR [rip+0x984f]        # 40f290 <__bss_start@@Base+0x128>
  405a41:	vpsubq xmm0,xmm0,xmm1
  405a45:	vmovdqa XMMWORD PTR [rip+0x9843],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405a4d:	mov    edx,0x348
  405a52:	mov    rdi,rbx
  405a55:	xor    esi,esi
  405a57:	vzeroupper 
  405a5a:	call   403160 <memset@plt>
  405a5f:	mov    DWORD PTR [rbx+0x334],0x32
  405a69:	call   404700 <body_with_one_return@@Base>
  405a6e:	mov    rdi,r13
  405a71:	call   403090 <puts@plt>
  405a76:	lea    rdx,[rip+0x4bb8]        # 40a635 <_IO_stdin_used@@Base+0x635>
  405a7d:	mov    rdi,r12
  405a80:	mov    rsi,r15
  405a83:	xor    eax,eax
  405a85:	call   403120 <printf@plt>
  405a8a:	vmovdqa xmm0,XMMWORD PTR [rip+0x980e]        # 40f2a0 <__bss_start@@Base+0x138>
  405a92:	vpcmpeqd xmm1,xmm1,xmm1
  405a96:	vpsubq xmm0,xmm0,xmm1
  405a9a:	vmovdqa XMMWORD PTR [rip+0x97fe],xmm0        # 40f2a0 <__bss_start@@Base+0x138>
  405aa2:	vmovdqa xmm0,XMMWORD PTR [rip+0x9776]        # 40f220 <__bss_start@@Base+0xb8>
  405aaa:	vpsubq xmm0,xmm0,xmm1
  405aae:	vpcmpeqd xmm1,xmm1,xmm1
  405ab2:	vmovdqa XMMWORD PTR [rip+0x9766],xmm0        # 40f220 <__bss_start@@Base+0xb8>
  405aba:	vpxor  xmm0,xmm0,xmm0
  405abe:	vmovdqu YMMWORD PTR [rbp+0x0],ymm0
  405ac3:	vmovdqu YMMWORD PTR [rbp+0x20],ymm0
  405ac8:	vmovdqu YMMWORD PTR [rbp+0x40],ymm0
  405acd:	vmovdqu YMMWORD PTR [rbp+0x60],ymm0
  405ad2:	vmovdqu YMMWORD PTR [rbp+0x80],ymm0
  405ada:	vmovdqu YMMWORD PTR [rbp+0xa0],ymm0
  405ae2:	vmovdqu YMMWORD PTR [rbp+0xc0],ymm0
  405aea:	vmovdqu YMMWORD PTR [rbp+0xe0],ymm0
  405af2:	vmovdqu YMMWORD PTR [rbp+0x100],ymm0
  405afa:	vmovdqu YMMWORD PTR [rbp+0x120],ymm0
  405b02:	vmovdqu YMMWORD PTR [rbp+0x140],ymm0
  405b0a:	vmovdqu YMMWORD PTR [rbp+0x160],ymm0
  405b12:	vmovdqu YMMWORD PTR [rbp+0x180],ymm0
  405b1a:	vmovdqu YMMWORD PTR [rbp+0x1a0],ymm0
  405b22:	mov    QWORD PTR [rbp+0x1c0],0x0
  405b2d:	mov    DWORD PTR [rbp+0x19c],0x32
  405b37:	vmovdqa xmm0,XMMWORD PTR [rip+0x9751]        # 40f290 <__bss_start@@Base+0x128>
  405b3f:	vpsubq xmm0,xmm0,xmm1
  405b43:	vmovdqa XMMWORD PTR [rip+0x9745],xmm0        # 40f290 <__bss_start@@Base+0x128>
  405b4b:	mov    edx,0x348
  405b50:	mov    rdi,rbx
  405b53:	xor    esi,esi
  405b55:	vzeroupper 
  405b58:	call   403160 <memset@plt>
  405b5d:	mov    DWORD PTR [rbx+0x334],0x32
  405b67:	call   4044d0 <body_with_two_returns@@Base>
  405b6c:	mov    rdi,r13
  405b6f:	call   403090 <puts@plt>
  405b74:	lea    rdi,[rip+0x4b37]        # 40a6b2 <_IO_stdin_used@@Base+0x6b2>
  405b7b:	call   403090 <puts@plt>
  405b80:	lea    rdi,[rip+0x4b3a]        # 40a6c1 <_IO_stdin_used@@Base+0x6c1>
  405b87:	call   403090 <puts@plt>
  405b8c:	mov    rdi,r14
  405b8f:	call   403090 <puts@plt>
  405b94:	xor    eax,eax
  405b96:	add    rsp,0x8
  405b9a:	pop    rbx
  405b9b:	pop    r12
  405b9d:	pop    r13
  405b9f:	pop    r14
  405ba1:	pop    r15
  405ba3:	pop    rbp
  405ba4:	ret    
  405ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405baf:	nop
  405bb0:	push   r15
  405bb2:	push   r14
  405bb4:	push   rbx
  405bb5:	lea    rdi,[rip+0x48d8]        # 40a494 <_IO_stdin_used@@Base+0x494>
  405bbc:	lea    rsi,[rip+0x4951]        # 40a514 <_IO_stdin_used@@Base+0x514>
  405bc3:	mov    edx,0x68b646e9
  405bc8:	call   407880 <read_boolean_unary_expression@@Base+0x2b0>
  405bcd:	xor    ebx,ebx
  405bcf:	lea    r14,[rip+0x84da]        # 40e0b0 <_IO_stdin_used@@Base+0x40b0>
  405bd6:	lea    r15,[rip+0x8713]        # 40e2f0 <_IO_stdin_used@@Base+0x42f0>
  405bdd:	nop    DWORD PTR [rax]
  405be0:	mov    edi,DWORD PTR [r14+rbx*2]
  405be4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  405be9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  405bee:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  405bf3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  405bf8:	call   407cd0 <read_boolean_unary_expression@@Base+0x700>
  405bfd:	mov    edi,DWORD PTR [rbx+r15*1]
  405c01:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  405c06:	call   4080f0 <read_boolean_unary_expression@@Base+0xb20>
  405c0b:	add    rbx,0x10
  405c0f:	cmp    rbx,0x120
  405c16:	jne    405be0 <main@@Base+0xd00>
  405c18:	call   408500 <read_boolean_unary_expression@@Base+0xf30>
  405c1d:	pop    rbx
  405c1e:	pop    r14
  405c20:	pop    r15
  405c22:	jmp    408ca0 <read_boolean_unary_expression@@Base+0x16d0>
  405c27:	nop    WORD PTR [rax+rax*1+0x0]
  405c30:	push   rax
  405c31:	call   405bb0 <main@@Base+0xcd0>
  405c36:	vxorps xmm0,xmm0,xmm0
  405c3a:	vmovups YMMWORD PTR [rip+0x95b6],ymm0        # 40f1f8 <__bss_start@@Base+0x90>
  405c42:	vmovups YMMWORD PTR [rip+0x9596],ymm0        # 40f1e0 <__bss_start@@Base+0x78>
  405c4a:	vmovups YMMWORD PTR [rip+0x956e],ymm0        # 40f1c0 <__bss_start@@Base+0x58>
  405c52:	vmovups YMMWORD PTR [rip+0x9546],ymm0        # 40f1a0 <__bss_start@@Base+0x38>
  405c5a:	vmovups YMMWORD PTR [rip+0x951e],ymm0        # 40f180 <__bss_start@@Base+0x18>
  405c62:	vxorps xmm1,xmm1,xmm1
  405c66:	vmovaps XMMWORD PTR [rip+0x95b2],xmm1        # 40f220 <__bss_start@@Base+0xb8>
  405c6e:	vmovups YMMWORD PTR [rip+0x95ba],ymm0        # 40f230 <__bss_start@@Base+0xc8>
  405c76:	vmovups YMMWORD PTR [rip+0x95d2],ymm0        # 40f250 <__bss_start@@Base+0xe8>
  405c7e:	vmovups YMMWORD PTR [rip+0x95ea],ymm0        # 40f270 <__bss_start@@Base+0x108>
  405c86:	vmovaps XMMWORD PTR [rip+0x9602],xmm1        # 40f290 <__bss_start@@Base+0x128>
  405c8e:	vmovaps XMMWORD PTR [rip+0x960a],xmm1        # 40f2a0 <__bss_start@@Base+0x138>
  405c96:	vmovups YMMWORD PTR [rip+0x9612],ymm0        # 40f2b0 <__bss_start@@Base+0x148>
  405c9e:	vmovups YMMWORD PTR [rip+0x961a],ymm0        # 40f2c0 <__bss_start@@Base+0x158>
  405ca6:	vmovups YMMWORD PTR [rip+0x9632],ymm0        # 40f2e0 <__bss_start@@Base+0x178>
  405cae:	vmovups YMMWORD PTR [rip+0x963a],ymm0        # 40f2f0 <__bss_start@@Base+0x188>
  405cb6:	vmovups YMMWORD PTR [rip+0x9652],ymm0        # 40f310 <__bss_start@@Base+0x1a8>
  405cbe:	vmovups YMMWORD PTR [rip+0x966a],ymm0        # 40f330 <__bss_start@@Base+0x1c8>
  405cc6:	vmovups YMMWORD PTR [rip+0x9692],ymm0        # 40f360 <__bss_start@@Base+0x1f8>
  405cce:	vmovups YMMWORD PTR [rip+0x967a],ymm0        # 40f350 <__bss_start@@Base+0x1e8>
  405cd6:	vmovups YMMWORD PTR [rip+0x96e2],ymm0        # 40f3c0 <__bss_start@@Base+0x258>
  405cde:	vmovups YMMWORD PTR [rip+0x96ba],ymm0        # 40f3a0 <__bss_start@@Base+0x238>
  405ce6:	vmovups YMMWORD PTR [rip+0x9692],ymm0        # 40f380 <__bss_start@@Base+0x218>
  405cee:	vmovups YMMWORD PTR [rip+0x972a],ymm0        # 40f420 <__bss_start@@Base+0x2b8>
  405cf6:	vmovups YMMWORD PTR [rip+0x9702],ymm0        # 40f400 <__bss_start@@Base+0x298>
  405cfe:	vmovups YMMWORD PTR [rip+0x96da],ymm0        # 40f3e0 <__bss_start@@Base+0x278>
  405d06:	vmovups YMMWORD PTR [rip+0x9752],ymm0        # 40f460 <__bss_start@@Base+0x2f8>
  405d0e:	vmovups YMMWORD PTR [rip+0x972a],ymm0        # 40f440 <__bss_start@@Base+0x2d8>
  405d16:	vmovups YMMWORD PTR [rip+0x9782],ymm0        # 40f4a0 <__bss_start@@Base+0x338>
  405d1e:	vmovups YMMWORD PTR [rip+0x975a],ymm0        # 40f480 <__bss_start@@Base+0x318>
  405d26:	vmovups YMMWORD PTR [rip+0x97d2],ymm0        # 40f500 <__bss_start@@Base+0x398>
  405d2e:	vmovups YMMWORD PTR [rip+0x97aa],ymm0        # 40f4e0 <__bss_start@@Base+0x378>
  405d36:	vmovups YMMWORD PTR [rip+0x9782],ymm0        # 40f4c0 <__bss_start@@Base+0x358>
  405d3e:	vmovups YMMWORD PTR [rip+0x980a],ymm0        # 40f550 <__bss_start@@Base+0x3e8>
  405d46:	vmovups YMMWORD PTR [rip+0x97f2],ymm0        # 40f540 <__bss_start@@Base+0x3d8>
  405d4e:	vmovups YMMWORD PTR [rip+0x97ca],ymm0        # 40f520 <__bss_start@@Base+0x3b8>
  405d56:	vmovups YMMWORD PTR [rip+0x9832],ymm0        # 40f590 <__bss_start@@Base+0x428>
  405d5e:	vmovups YMMWORD PTR [rip+0x980a],ymm0        # 40f570 <__bss_start@@Base+0x408>
  405d66:	vmovups YMMWORD PTR [rip+0x9862],ymm0        # 40f5d0 <__bss_start@@Base+0x468>
  405d6e:	vmovups YMMWORD PTR [rip+0x983a],ymm0        # 40f5b0 <__bss_start@@Base+0x448>
  405d76:	vmovaps XMMWORD PTR [rip+0x9872],xmm1        # 40f5f0 <__bss_start@@Base+0x488>
  405d7e:	pop    rax
  405d7f:	vzeroupper 
  405d82:	ret    
  405d83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d8d:	nop    DWORD PTR [rax]
  405d90:	lea    rdi,[rip+0xfffffffffffffe19]        # 405bb0 <main@@Base+0xcd0>
  405d97:	lea    rsi,[rip+0xfffffffffffffe92]        # 405c30 <main@@Base+0xd50>
  405d9e:	jmp    409080 <__gcov_flush@@Base+0xb0>
  405da3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dad:	nop    DWORD PTR [rax]

0000000000405db0 <init_token_int_type@@Base>:
  405db0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9848]        # 40f600 <__bss_start@@Base+0x498>
  405db8:	vpcmpeqd xmm1,xmm1,xmm1
  405dbc:	vpsubq xmm0,xmm0,xmm1
  405dc0:	vmovdqa XMMWORD PTR [rip+0x9838],xmm0        # 40f600 <__bss_start@@Base+0x498>
  405dc8:	mov    DWORD PTR [rdi],0x0
  405dce:	ret    
  405dcf:	nop

0000000000405dd0 <init_token_int_value@@Base>:
  405dd0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9838]        # 40f610 <__bss_start@@Base+0x4a8>
  405dd8:	vpcmpeqd xmm1,xmm1,xmm1
  405ddc:	vpsubq xmm0,xmm0,xmm1
  405de0:	vmovdqa XMMWORD PTR [rip+0x9828],xmm0        # 40f610 <__bss_start@@Base+0x4a8>
  405de8:	mov    DWORD PTR [rdi],0x1
  405dee:	mov    DWORD PTR [rdi+0x4],esi
  405df1:	ret    
  405df2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dfc:	nop    DWORD PTR [rax+0x0]

0000000000405e00 <init_token_function@@Base>:
  405e00:	vmovdqa xmm0,XMMWORD PTR [rip+0x9818]        # 40f620 <__bss_start@@Base+0x4b8>
  405e08:	vpcmpeqd xmm1,xmm1,xmm1
  405e0c:	vpsubq xmm0,xmm0,xmm1
  405e10:	vmovdqa XMMWORD PTR [rip+0x9808],xmm0        # 40f620 <__bss_start@@Base+0x4b8>
  405e18:	mov    DWORD PTR [rdi],0x2
  405e1e:	mov    QWORD PTR [rdi+0x8],rsi
  405e22:	ret    
  405e23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e2d:	nop    DWORD PTR [rax]

0000000000405e30 <init_token_opar@@Base>:
  405e30:	vmovdqa xmm0,XMMWORD PTR [rip+0x97f8]        # 40f630 <__bss_start@@Base+0x4c8>
  405e38:	vpcmpeqd xmm1,xmm1,xmm1
  405e3c:	vpsubq xmm0,xmm0,xmm1
  405e40:	vmovdqa XMMWORD PTR [rip+0x97e8],xmm0        # 40f630 <__bss_start@@Base+0x4c8>
  405e48:	mov    DWORD PTR [rdi],0x3
  405e4e:	ret    
  405e4f:	nop

0000000000405e50 <init_token_cpar@@Base>:
  405e50:	vmovdqa xmm0,XMMWORD PTR [rip+0x97e8]        # 40f640 <__bss_start@@Base+0x4d8>
  405e58:	vpcmpeqd xmm1,xmm1,xmm1
  405e5c:	vpsubq xmm0,xmm0,xmm1
  405e60:	vmovdqa XMMWORD PTR [rip+0x97d8],xmm0        # 40f640 <__bss_start@@Base+0x4d8>
  405e68:	mov    DWORD PTR [rdi],0x4
  405e6e:	ret    
  405e6f:	nop

0000000000405e70 <init_token_obra@@Base>:
  405e70:	vmovdqa xmm0,XMMWORD PTR [rip+0x97d8]        # 40f650 <__bss_start@@Base+0x4e8>
  405e78:	vpcmpeqd xmm1,xmm1,xmm1
  405e7c:	vpsubq xmm0,xmm0,xmm1
  405e80:	vmovdqa XMMWORD PTR [rip+0x97c8],xmm0        # 40f650 <__bss_start@@Base+0x4e8>
  405e88:	mov    DWORD PTR [rdi],0x5
  405e8e:	ret    
  405e8f:	nop

0000000000405e90 <init_token_cbra@@Base>:
  405e90:	vmovdqa xmm0,XMMWORD PTR [rip+0x97c8]        # 40f660 <__bss_start@@Base+0x4f8>
  405e98:	vpcmpeqd xmm1,xmm1,xmm1
  405e9c:	vpsubq xmm0,xmm0,xmm1
  405ea0:	vmovdqa XMMWORD PTR [rip+0x97b8],xmm0        # 40f660 <__bss_start@@Base+0x4f8>
  405ea8:	mov    DWORD PTR [rdi],0x6
  405eae:	ret    
  405eaf:	nop

0000000000405eb0 <init_token_return@@Base>:
  405eb0:	vmovdqa xmm0,XMMWORD PTR [rip+0x97b8]        # 40f670 <__bss_start@@Base+0x508>
  405eb8:	vpcmpeqd xmm1,xmm1,xmm1
  405ebc:	vpsubq xmm0,xmm0,xmm1
  405ec0:	vmovdqa XMMWORD PTR [rip+0x97a8],xmm0        # 40f670 <__bss_start@@Base+0x508>
  405ec8:	mov    DWORD PTR [rdi],0x7
  405ece:	ret    
  405ecf:	nop

0000000000405ed0 <init_token_semicolon@@Base>:
  405ed0:	vmovdqa xmm0,XMMWORD PTR [rip+0x97a8]        # 40f680 <__bss_start@@Base+0x518>
  405ed8:	vpcmpeqd xmm1,xmm1,xmm1
  405edc:	vpsubq xmm0,xmm0,xmm1
  405ee0:	vmovdqa XMMWORD PTR [rip+0x9798],xmm0        # 40f680 <__bss_start@@Base+0x518>
  405ee8:	mov    DWORD PTR [rdi],0x8
  405eee:	ret    
  405eef:	nop

0000000000405ef0 <init_token_eof@@Base>:
  405ef0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9798]        # 40f690 <__bss_start@@Base+0x528>
  405ef8:	vpcmpeqd xmm1,xmm1,xmm1
  405efc:	vpsubq xmm0,xmm0,xmm1
  405f00:	vmovdqa XMMWORD PTR [rip+0x9788],xmm0        # 40f690 <__bss_start@@Base+0x528>
  405f08:	mov    DWORD PTR [rdi],0x9
  405f0e:	ret    
  405f0f:	nop

0000000000405f10 <init_token_if@@Base>:
  405f10:	vmovdqa xmm0,XMMWORD PTR [rip+0x9788]        # 40f6a0 <__bss_start@@Base+0x538>
  405f18:	vpcmpeqd xmm1,xmm1,xmm1
  405f1c:	vpsubq xmm0,xmm0,xmm1
  405f20:	vmovdqa XMMWORD PTR [rip+0x9778],xmm0        # 40f6a0 <__bss_start@@Base+0x538>
  405f28:	mov    DWORD PTR [rdi],0xa
  405f2e:	ret    
  405f2f:	nop

0000000000405f30 <init_token_else@@Base>:
  405f30:	vmovdqa xmm0,XMMWORD PTR [rip+0x9778]        # 40f6b0 <__bss_start@@Base+0x548>
  405f38:	vpcmpeqd xmm1,xmm1,xmm1
  405f3c:	vpsubq xmm0,xmm0,xmm1
  405f40:	vmovdqa XMMWORD PTR [rip+0x9768],xmm0        # 40f6b0 <__bss_start@@Base+0x548>
  405f48:	mov    DWORD PTR [rdi],0xb
  405f4e:	ret    
  405f4f:	nop

0000000000405f50 <init_token_boolean_op@@Base>:
  405f50:	vmovdqa xmm0,XMMWORD PTR [rip+0x9768]        # 40f6c0 <__bss_start@@Base+0x558>
  405f58:	vpcmpeqd xmm1,xmm1,xmm1
  405f5c:	vpsubq xmm0,xmm0,xmm1
  405f60:	vmovdqa XMMWORD PTR [rip+0x9758],xmm0        # 40f6c0 <__bss_start@@Base+0x558>
  405f68:	mov    DWORD PTR [rdi],0xc
  405f6e:	mov    QWORD PTR [rdi+0x8],rsi
  405f72:	ret    
  405f73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f7d:	nop    DWORD PTR [rax]

0000000000405f80 <free_token_int_type@@Base>:
  405f80:	vmovdqa xmm0,XMMWORD PTR [rip+0x9748]        # 40f6d0 <__bss_start@@Base+0x568>
  405f88:	vpcmpeqd xmm1,xmm1,xmm1
  405f8c:	vpsubq xmm0,xmm0,xmm1
  405f90:	vmovdqa XMMWORD PTR [rip+0x9738],xmm0        # 40f6d0 <__bss_start@@Base+0x568>
  405f98:	jmp    403040 <free@plt>
  405f9d:	nop    DWORD PTR [rax]

0000000000405fa0 <free_token_int_value@@Base>:
  405fa0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9738]        # 40f6e0 <__bss_start@@Base+0x578>
  405fa8:	vpcmpeqd xmm1,xmm1,xmm1
  405fac:	vpsubq xmm0,xmm0,xmm1
  405fb0:	vmovdqa XMMWORD PTR [rip+0x9728],xmm0        # 40f6e0 <__bss_start@@Base+0x578>
  405fb8:	jmp    403040 <free@plt>
  405fbd:	nop    DWORD PTR [rax]

0000000000405fc0 <free_token_function@@Base>:
  405fc0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9728]        # 40f6f0 <__bss_start@@Base+0x588>
  405fc8:	vpcmpeqd xmm1,xmm1,xmm1
  405fcc:	vpsubq xmm0,xmm0,xmm1
  405fd0:	vmovdqa XMMWORD PTR [rip+0x9718],xmm0        # 40f6f0 <__bss_start@@Base+0x588>
  405fd8:	jmp    403040 <free@plt>
  405fdd:	nop    DWORD PTR [rax]

0000000000405fe0 <free_token_opar@@Base>:
  405fe0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9718]        # 40f700 <__bss_start@@Base+0x598>
  405fe8:	vpcmpeqd xmm1,xmm1,xmm1
  405fec:	vpsubq xmm0,xmm0,xmm1
  405ff0:	vmovdqa XMMWORD PTR [rip+0x9708],xmm0        # 40f700 <__bss_start@@Base+0x598>
  405ff8:	jmp    403040 <free@plt>
  405ffd:	nop    DWORD PTR [rax]

0000000000406000 <free_token_cpar@@Base>:
  406000:	vmovdqa xmm0,XMMWORD PTR [rip+0x9708]        # 40f710 <__bss_start@@Base+0x5a8>
  406008:	vpcmpeqd xmm1,xmm1,xmm1
  40600c:	vpsubq xmm0,xmm0,xmm1
  406010:	vmovdqa XMMWORD PTR [rip+0x96f8],xmm0        # 40f710 <__bss_start@@Base+0x5a8>
  406018:	jmp    403040 <free@plt>
  40601d:	nop    DWORD PTR [rax]

0000000000406020 <free_token_obra@@Base>:
  406020:	vmovdqa xmm0,XMMWORD PTR [rip+0x96f8]        # 40f720 <__bss_start@@Base+0x5b8>
  406028:	vpcmpeqd xmm1,xmm1,xmm1
  40602c:	vpsubq xmm0,xmm0,xmm1
  406030:	vmovdqa XMMWORD PTR [rip+0x96e8],xmm0        # 40f720 <__bss_start@@Base+0x5b8>
  406038:	jmp    403040 <free@plt>
  40603d:	nop    DWORD PTR [rax]

0000000000406040 <free_token_cbra@@Base>:
  406040:	vmovdqa xmm0,XMMWORD PTR [rip+0x96e8]        # 40f730 <__bss_start@@Base+0x5c8>
  406048:	vpcmpeqd xmm1,xmm1,xmm1
  40604c:	vpsubq xmm0,xmm0,xmm1
  406050:	vmovdqa XMMWORD PTR [rip+0x96d8],xmm0        # 40f730 <__bss_start@@Base+0x5c8>
  406058:	jmp    403040 <free@plt>
  40605d:	nop    DWORD PTR [rax]

0000000000406060 <free_token_return@@Base>:
  406060:	vmovdqa xmm0,XMMWORD PTR [rip+0x96d8]        # 40f740 <__bss_start@@Base+0x5d8>
  406068:	vpcmpeqd xmm1,xmm1,xmm1
  40606c:	vpsubq xmm0,xmm0,xmm1
  406070:	vmovdqa XMMWORD PTR [rip+0x96c8],xmm0        # 40f740 <__bss_start@@Base+0x5d8>
  406078:	jmp    403040 <free@plt>
  40607d:	nop    DWORD PTR [rax]

0000000000406080 <free_token_semicolon@@Base>:
  406080:	vmovdqa xmm0,XMMWORD PTR [rip+0x96c8]        # 40f750 <__bss_start@@Base+0x5e8>
  406088:	vpcmpeqd xmm1,xmm1,xmm1
  40608c:	vpsubq xmm0,xmm0,xmm1
  406090:	vmovdqa XMMWORD PTR [rip+0x96b8],xmm0        # 40f750 <__bss_start@@Base+0x5e8>
  406098:	jmp    403040 <free@plt>
  40609d:	nop    DWORD PTR [rax]

00000000004060a0 <free_token_eof@@Base>:
  4060a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x96b8]        # 40f760 <__bss_start@@Base+0x5f8>
  4060a8:	vpcmpeqd xmm1,xmm1,xmm1
  4060ac:	vpsubq xmm0,xmm0,xmm1
  4060b0:	vmovdqa XMMWORD PTR [rip+0x96a8],xmm0        # 40f760 <__bss_start@@Base+0x5f8>
  4060b8:	jmp    403040 <free@plt>
  4060bd:	nop    DWORD PTR [rax]

00000000004060c0 <free_token_if@@Base>:
  4060c0:	vmovdqa xmm0,XMMWORD PTR [rip+0x96a8]        # 40f770 <__bss_start@@Base+0x608>
  4060c8:	vpcmpeqd xmm1,xmm1,xmm1
  4060cc:	vpsubq xmm0,xmm0,xmm1
  4060d0:	vmovdqa XMMWORD PTR [rip+0x9698],xmm0        # 40f770 <__bss_start@@Base+0x608>
  4060d8:	jmp    403040 <free@plt>
  4060dd:	nop    DWORD PTR [rax]

00000000004060e0 <free_token_else@@Base>:
  4060e0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9698]        # 40f780 <__bss_start@@Base+0x618>
  4060e8:	vpcmpeqd xmm1,xmm1,xmm1
  4060ec:	vpsubq xmm0,xmm0,xmm1
  4060f0:	vmovdqa XMMWORD PTR [rip+0x9688],xmm0        # 40f780 <__bss_start@@Base+0x618>
  4060f8:	jmp    403040 <free@plt>
  4060fd:	nop    DWORD PTR [rax]

0000000000406100 <free_token_boolean_op@@Base>:
  406100:	push   rbx
  406101:	mov    rbx,rdi
  406104:	inc    QWORD PTR [rip+0x9685]        # 40f790 <__bss_start@@Base+0x628>
  40610b:	mov    rdi,QWORD PTR [rdi+0x8]
  40610f:	test   rdi,rdi
  406112:	je     406129 <free_token_boolean_op@@Base+0x29>
  406114:	inc    QWORD PTR [rip+0x967d]        # 40f798 <__bss_start@@Base+0x630>
  40611b:	call   403040 <free@plt>
  406120:	lea    rax,[rip+0x9681]        # 40f7a8 <__bss_start@@Base+0x640>
  406127:	jmp    406130 <free_token_boolean_op@@Base+0x30>
  406129:	lea    rax,[rip+0x9670]        # 40f7a0 <__bss_start@@Base+0x638>
  406130:	inc    QWORD PTR [rax]
  406133:	inc    QWORD PTR [rip+0x9676]        # 40f7b0 <__bss_start@@Base+0x648>
  40613a:	mov    rdi,rbx
  40613d:	pop    rbx
  40613e:	jmp    403040 <free@plt>
  406143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40614d:	nop    DWORD PTR [rax]
  406150:	push   r15
  406152:	push   r14
  406154:	push   rbx
  406155:	lea    rdi,[rip+0x457d]        # 40a6d9 <_IO_stdin_used@@Base+0x6d9>
  40615c:	lea    rsi,[rip+0x43b1]        # 40a514 <_IO_stdin_used@@Base+0x514>
  406163:	mov    edx,0xb7b65b46
  406168:	call   407880 <read_boolean_unary_expression@@Base+0x2b0>
  40616d:	xor    ebx,ebx
  40616f:	lea    r14,[rip+0x829a]        # 40e410 <_IO_stdin_used@@Base+0x4410>
  406176:	lea    r15,[rip+0x85d3]        # 40e750 <_IO_stdin_used@@Base+0x4750>
  40617d:	nop    DWORD PTR [rax]
  406180:	mov    edi,DWORD PTR [r14+rbx*2]
  406184:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  406189:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  40618e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  406193:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  406198:	call   407cd0 <read_boolean_unary_expression@@Base+0x700>
  40619d:	mov    edi,DWORD PTR [rbx+r15*1]
  4061a1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  4061a6:	call   4080f0 <read_boolean_unary_expression@@Base+0xb20>
  4061ab:	add    rbx,0x10
  4061af:	cmp    rbx,0x1a0
  4061b6:	jne    406180 <free_token_boolean_op@@Base+0x80>
  4061b8:	call   408500 <read_boolean_unary_expression@@Base+0xf30>
  4061bd:	pop    rbx
  4061be:	pop    r14
  4061c0:	pop    r15
  4061c2:	jmp    408ca0 <read_boolean_unary_expression@@Base+0x16d0>
  4061c7:	nop    WORD PTR [rax+rax*1+0x0]
  4061d0:	push   rax
  4061d1:	call   406150 <free_token_boolean_op@@Base+0x50>
  4061d6:	vxorps xmm0,xmm0,xmm0
  4061da:	vmovaps XMMWORD PTR [rip+0x941e],xmm0        # 40f600 <__bss_start@@Base+0x498>
  4061e2:	vmovaps XMMWORD PTR [rip+0x9426],xmm0        # 40f610 <__bss_start@@Base+0x4a8>
  4061ea:	vmovaps XMMWORD PTR [rip+0x942e],xmm0        # 40f620 <__bss_start@@Base+0x4b8>
  4061f2:	vmovaps XMMWORD PTR [rip+0x9436],xmm0        # 40f630 <__bss_start@@Base+0x4c8>
  4061fa:	vmovaps XMMWORD PTR [rip+0x943e],xmm0        # 40f640 <__bss_start@@Base+0x4d8>
  406202:	vmovaps XMMWORD PTR [rip+0x9446],xmm0        # 40f650 <__bss_start@@Base+0x4e8>
  40620a:	vmovaps XMMWORD PTR [rip+0x944e],xmm0        # 40f660 <__bss_start@@Base+0x4f8>
  406212:	vmovaps XMMWORD PTR [rip+0x9456],xmm0        # 40f670 <__bss_start@@Base+0x508>
  40621a:	vmovaps XMMWORD PTR [rip+0x945e],xmm0        # 40f680 <__bss_start@@Base+0x518>
  406222:	vmovaps XMMWORD PTR [rip+0x9466],xmm0        # 40f690 <__bss_start@@Base+0x528>
  40622a:	vmovaps XMMWORD PTR [rip+0x946e],xmm0        # 40f6a0 <__bss_start@@Base+0x538>
  406232:	vmovaps XMMWORD PTR [rip+0x9476],xmm0        # 40f6b0 <__bss_start@@Base+0x548>
  40623a:	vmovaps XMMWORD PTR [rip+0x947e],xmm0        # 40f6c0 <__bss_start@@Base+0x558>
  406242:	vmovaps XMMWORD PTR [rip+0x9486],xmm0        # 40f6d0 <__bss_start@@Base+0x568>
  40624a:	vmovaps XMMWORD PTR [rip+0x948e],xmm0        # 40f6e0 <__bss_start@@Base+0x578>
  406252:	vmovaps XMMWORD PTR [rip+0x9496],xmm0        # 40f6f0 <__bss_start@@Base+0x588>
  40625a:	vmovaps XMMWORD PTR [rip+0x949e],xmm0        # 40f700 <__bss_start@@Base+0x598>
  406262:	vmovaps XMMWORD PTR [rip+0x94a6],xmm0        # 40f710 <__bss_start@@Base+0x5a8>
  40626a:	vmovaps XMMWORD PTR [rip+0x94ae],xmm0        # 40f720 <__bss_start@@Base+0x5b8>
  406272:	vmovaps XMMWORD PTR [rip+0x94b6],xmm0        # 40f730 <__bss_start@@Base+0x5c8>
  40627a:	vmovaps XMMWORD PTR [rip+0x94be],xmm0        # 40f740 <__bss_start@@Base+0x5d8>
  406282:	vmovaps XMMWORD PTR [rip+0x94c6],xmm0        # 40f750 <__bss_start@@Base+0x5e8>
  40628a:	vmovaps XMMWORD PTR [rip+0x94ce],xmm0        # 40f760 <__bss_start@@Base+0x5f8>
  406292:	vmovaps XMMWORD PTR [rip+0x94d6],xmm0        # 40f770 <__bss_start@@Base+0x608>
  40629a:	vmovaps XMMWORD PTR [rip+0x94de],xmm0        # 40f780 <__bss_start@@Base+0x618>
  4062a2:	vxorps xmm0,xmm0,xmm0
  4062a6:	vmovups YMMWORD PTR [rip+0x94e2],ymm0        # 40f790 <__bss_start@@Base+0x628>
  4062ae:	mov    QWORD PTR [rip+0x94f7],0x0        # 40f7b0 <__bss_start@@Base+0x648>
  4062b9:	pop    rax
  4062ba:	vzeroupper 
  4062bd:	ret    
  4062be:	xchg   ax,ax
  4062c0:	lea    rdi,[rip+0xfffffffffffffe89]        # 406150 <free_token_boolean_op@@Base+0x50>
  4062c7:	lea    rsi,[rip+0xffffffffffffff02]        # 4061d0 <free_token_boolean_op@@Base+0xd0>
  4062ce:	jmp    409080 <__gcov_flush@@Base+0xb0>
  4062d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062dd:	nop    DWORD PTR [rax]

00000000004062e0 <init_ast_base@@Base>:
  4062e0:	vmovdqa xmm0,XMMWORD PTR [rip+0x94d8]        # 40f7c0 <__bss_start@@Base+0x658>
  4062e8:	vpcmpeqd xmm1,xmm1,xmm1
  4062ec:	vpsubq xmm0,xmm0,xmm1
  4062f0:	vmovdqa XMMWORD PTR [rip+0x94c8],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  4062f8:	mov    DWORD PTR [rdi],esi
  4062fa:	mov    QWORD PTR [rdi+0x8],rdx
  4062fe:	ret    
  4062ff:	nop

0000000000406300 <init_ast_base_single@@Base>:
  406300:	vmovdqa xmm0,XMMWORD PTR [rip+0x94c8]        # 40f7d0 <__bss_start@@Base+0x668>
  406308:	vpcmpeqd xmm1,xmm1,xmm1
  40630c:	vpsubq xmm0,xmm0,xmm1
  406310:	vmovdqa XMMWORD PTR [rip+0x94b8],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  406318:	vmovdqa xmm0,XMMWORD PTR [rip+0x94a0]        # 40f7c0 <__bss_start@@Base+0x658>
  406320:	vpsubq xmm0,xmm0,xmm1
  406324:	vmovdqa XMMWORD PTR [rip+0x9494],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  40632c:	mov    DWORD PTR [rdi],esi
  40632e:	mov    QWORD PTR [rdi+0x8],0x0
  406336:	ret    
  406337:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406340 <init_node_id@@Base>:
  406340:	vmovdqa xmm0,XMMWORD PTR [rip+0x9498]        # 40f7e0 <__bss_start@@Base+0x678>
  406348:	vpcmpeqd xmm1,xmm1,xmm1
  40634c:	vpsubq xmm0,xmm0,xmm1
  406350:	vmovdqa XMMWORD PTR [rip+0x9488],xmm0        # 40f7e0 <__bss_start@@Base+0x678>
  406358:	vmovdqa xmm0,XMMWORD PTR [rip+0x9470]        # 40f7d0 <__bss_start@@Base+0x668>
  406360:	vpsubq xmm0,xmm0,xmm1
  406364:	vmovdqa XMMWORD PTR [rip+0x9464],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  40636c:	vmovdqa xmm0,XMMWORD PTR [rip+0x944c]        # 40f7c0 <__bss_start@@Base+0x658>
  406374:	vpsubq xmm0,xmm0,xmm1
  406378:	vmovdqa XMMWORD PTR [rip+0x9440],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  406380:	mov    DWORD PTR [rdi],0x0
  406386:	mov    QWORD PTR [rdi+0x8],0x0
  40638e:	mov    QWORD PTR [rdi+0x10],rsi
  406392:	ret    
  406393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40639d:	nop    DWORD PTR [rax]

00000000004063a0 <init_node_int@@Base>:
  4063a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9448]        # 40f7f0 <__bss_start@@Base+0x688>
  4063a8:	vpcmpeqd xmm1,xmm1,xmm1
  4063ac:	vpsubq xmm0,xmm0,xmm1
  4063b0:	vmovdqa XMMWORD PTR [rip+0x9438],xmm0        # 40f7f0 <__bss_start@@Base+0x688>
  4063b8:	vmovdqa xmm0,XMMWORD PTR [rip+0x9410]        # 40f7d0 <__bss_start@@Base+0x668>
  4063c0:	vpsubq xmm0,xmm0,xmm1
  4063c4:	vmovdqa XMMWORD PTR [rip+0x9404],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  4063cc:	vmovdqa xmm0,XMMWORD PTR [rip+0x93ec]        # 40f7c0 <__bss_start@@Base+0x658>
  4063d4:	vpsubq xmm0,xmm0,xmm1
  4063d8:	vmovdqa XMMWORD PTR [rip+0x93e0],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  4063e0:	mov    DWORD PTR [rdi],0x1
  4063e6:	mov    QWORD PTR [rdi+0x8],0x0
  4063ee:	mov    DWORD PTR [rdi+0x10],esi
  4063f1:	ret    
  4063f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063fc:	nop    DWORD PTR [rax+0x0]

0000000000406400 <init_node_function@@Base>:
  406400:	vmovdqa xmm0,XMMWORD PTR [rip+0x93f8]        # 40f800 <__bss_start@@Base+0x698>
  406408:	vpcmpeqd xmm1,xmm1,xmm1
  40640c:	vpsubq xmm0,xmm0,xmm1
  406410:	vmovdqa XMMWORD PTR [rip+0x93e8],xmm0        # 40f800 <__bss_start@@Base+0x698>
  406418:	vmovdqa xmm0,XMMWORD PTR [rip+0x93b0]        # 40f7d0 <__bss_start@@Base+0x668>
  406420:	vpsubq xmm0,xmm0,xmm1
  406424:	vmovdqa XMMWORD PTR [rip+0x93a4],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  40642c:	vmovdqa xmm0,XMMWORD PTR [rip+0x938c]        # 40f7c0 <__bss_start@@Base+0x658>
  406434:	vpsubq xmm0,xmm0,xmm1
  406438:	vmovdqa XMMWORD PTR [rip+0x9380],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  406440:	mov    DWORD PTR [rdi],0x2
  406446:	mov    QWORD PTR [rdi+0x8],0x0
  40644e:	mov    QWORD PTR [rdi+0x10],rsi
  406452:	mov    QWORD PTR [rdi+0x18],rdx
  406456:	ret    
  406457:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406460 <init_node_return@@Base>:
  406460:	vmovdqa xmm0,XMMWORD PTR [rip+0x93a8]        # 40f810 <__bss_start@@Base+0x6a8>
  406468:	vpcmpeqd xmm1,xmm1,xmm1
  40646c:	vpsubq xmm0,xmm0,xmm1
  406470:	vmovdqa XMMWORD PTR [rip+0x9398],xmm0        # 40f810 <__bss_start@@Base+0x6a8>
  406478:	vmovdqa xmm0,XMMWORD PTR [rip+0x9350]        # 40f7d0 <__bss_start@@Base+0x668>
  406480:	vpsubq xmm0,xmm0,xmm1
  406484:	vmovdqa XMMWORD PTR [rip+0x9344],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  40648c:	vmovdqa xmm0,XMMWORD PTR [rip+0x932c]        # 40f7c0 <__bss_start@@Base+0x658>
  406494:	vpsubq xmm0,xmm0,xmm1
  406498:	vmovdqa XMMWORD PTR [rip+0x9320],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  4064a0:	mov    DWORD PTR [rdi],0x3
  4064a6:	mov    QWORD PTR [rdi+0x8],0x0
  4064ae:	mov    QWORD PTR [rdi+0x10],rsi
  4064b2:	ret    
  4064b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064bd:	nop    DWORD PTR [rax]

00000000004064c0 <init_node_if@@Base>:
  4064c0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9358]        # 40f820 <__bss_start@@Base+0x6b8>
  4064c8:	vpcmpeqd xmm1,xmm1,xmm1
  4064cc:	vpsubq xmm0,xmm0,xmm1
  4064d0:	vmovdqa XMMWORD PTR [rip+0x9348],xmm0        # 40f820 <__bss_start@@Base+0x6b8>
  4064d8:	vmovdqa xmm0,XMMWORD PTR [rip+0x92f0]        # 40f7d0 <__bss_start@@Base+0x668>
  4064e0:	vpsubq xmm0,xmm0,xmm1
  4064e4:	vmovdqa XMMWORD PTR [rip+0x92e4],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  4064ec:	vmovdqa xmm0,XMMWORD PTR [rip+0x92cc]        # 40f7c0 <__bss_start@@Base+0x658>
  4064f4:	vpsubq xmm0,xmm0,xmm1
  4064f8:	vmovdqa XMMWORD PTR [rip+0x92c0],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  406500:	mov    DWORD PTR [rdi],0x4
  406506:	mov    QWORD PTR [rdi+0x8],0x0
  40650e:	mov    QWORD PTR [rdi+0x10],rsi
  406512:	mov    QWORD PTR [rdi+0x18],rdx
  406516:	mov    QWORD PTR [rdi+0x20],rcx
  40651a:	ret    
  40651b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406520 <init_node_boolean_operator@@Base>:
  406520:	vmovdqa xmm0,XMMWORD PTR [rip+0x9308]        # 40f830 <__bss_start@@Base+0x6c8>
  406528:	vpcmpeqd xmm1,xmm1,xmm1
  40652c:	vpsubq xmm0,xmm0,xmm1
  406530:	vmovdqa XMMWORD PTR [rip+0x92f8],xmm0        # 40f830 <__bss_start@@Base+0x6c8>
  406538:	vmovdqa xmm0,XMMWORD PTR [rip+0x9290]        # 40f7d0 <__bss_start@@Base+0x668>
  406540:	vpsubq xmm0,xmm0,xmm1
  406544:	vmovdqa XMMWORD PTR [rip+0x9284],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  40654c:	vmovdqa xmm0,XMMWORD PTR [rip+0x926c]        # 40f7c0 <__bss_start@@Base+0x658>
  406554:	vpsubq xmm0,xmm0,xmm1
  406558:	vmovdqa XMMWORD PTR [rip+0x9260],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  406560:	mov    QWORD PTR [rdi+0x8],0x0
  406568:	mov    DWORD PTR [rdi],0x5
  40656e:	mov    DWORD PTR [rdi+0x20],esi
  406571:	mov    QWORD PTR [rdi+0x10],rdx
  406575:	mov    QWORD PTR [rdi+0x18],rcx
  406579:	ret    
  40657a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406580 <free_node@@Base>:
  406580:	push   rbx
  406581:	inc    QWORD PTR [rip+0x92b8]        # 40f840 <__bss_start@@Base+0x6d8>
  406588:	mov    eax,DWORD PTR [rdi]
  40658a:	cmp    rax,0x5
  40658e:	ja     406793 <free_node@@Base+0x213>
  406594:	mov    rbx,rdi
  406597:	lea    rcx,[rip+0x437e]        # 40a91c <_IO_stdin_used@@Base+0x91c>
  40659e:	movsxd rax,DWORD PTR [rcx+rax*4]
  4065a2:	add    rax,rcx
  4065a5:	jmp    rax
  4065a7:	inc    QWORD PTR [rip+0x92a2]        # 40f850 <__bss_start@@Base+0x6e8>
  4065ae:	inc    QWORD PTR [rip+0x930b]        # 40f8c0 <__bss_start@@Base+0x758>
  4065b5:	mov    rdi,QWORD PTR [rbx+0x8]
  4065b9:	test   rdi,rdi
  4065bc:	je     4066c1 <free_node@@Base+0x141>
  4065c2:	inc    QWORD PTR [rip+0x92ff]        # 40f8c8 <__bss_start@@Base+0x760>
  4065c9:	call   406580 <free_node@@Base>
  4065ce:	lea    rax,[rip+0x9303]        # 40f8d8 <__bss_start@@Base+0x770>
  4065d5:	jmp    4066c8 <free_node@@Base+0x148>
  4065da:	inc    QWORD PTR [rip+0x928f]        # 40f870 <__bss_start@@Base+0x708>
  4065e1:	mov    rdi,rbx
  4065e4:	call   406910 <free_node_if@@Base>
  4065e9:	lea    rax,[rip+0x92b0]        # 40f8a0 <__bss_start@@Base+0x738>
  4065f0:	jmp    406787 <free_node@@Base+0x207>
  4065f5:	inc    QWORD PTR [rip+0x9264]        # 40f860 <__bss_start@@Base+0x6f8>
  4065fc:	inc    QWORD PTR [rip+0x931d]        # 40f920 <__bss_start@@Base+0x7b8>
  406603:	mov    rdi,QWORD PTR [rbx+0x8]
  406607:	test   rdi,rdi
  40660a:	je     4066e6 <free_node@@Base+0x166>
  406610:	inc    QWORD PTR [rip+0x9311]        # 40f928 <__bss_start@@Base+0x7c0>
  406617:	call   406580 <free_node@@Base>
  40661c:	lea    rax,[rip+0x9315]        # 40f938 <__bss_start@@Base+0x7d0>
  406623:	jmp    4066ed <free_node@@Base+0x16d>
  406628:	inc    QWORD PTR [rip+0x9229]        # 40f858 <__bss_start@@Base+0x6f0>
  40662f:	inc    QWORD PTR [rip+0x92ba]        # 40f8f0 <__bss_start@@Base+0x788>
  406636:	mov    rdi,QWORD PTR [rbx+0x8]
  40663a:	test   rdi,rdi
  40663d:	je     406711 <free_node@@Base+0x191>
  406643:	inc    QWORD PTR [rip+0x92ae]        # 40f8f8 <__bss_start@@Base+0x790>
  40664a:	call   406580 <free_node@@Base>
  40664f:	lea    rax,[rip+0x92b2]        # 40f908 <__bss_start@@Base+0x7a0>
  406656:	jmp    406718 <free_node@@Base+0x198>
  40665b:	inc    QWORD PTR [rip+0x9206]        # 40f868 <__bss_start@@Base+0x700>
  406662:	inc    QWORD PTR [rip+0x92e7]        # 40f950 <__bss_start@@Base+0x7e8>
  406669:	mov    rdi,QWORD PTR [rbx+0x8]
  40666d:	test   rdi,rdi
  406670:	je     406733 <free_node@@Base+0x1b3>
  406676:	inc    QWORD PTR [rip+0x92db]        # 40f958 <__bss_start@@Base+0x7f0>
  40667d:	call   406580 <free_node@@Base>
  406682:	lea    rax,[rip+0x92df]        # 40f968 <__bss_start@@Base+0x800>
  406689:	jmp    40673a <free_node@@Base+0x1ba>
  40668e:	inc    QWORD PTR [rip+0x91e3]        # 40f878 <__bss_start@@Base+0x710>
  406695:	inc    QWORD PTR [rip+0x9314]        # 40f9b0 <__bss_start@@Base+0x848>
  40669c:	mov    rdi,QWORD PTR [rbx+0x8]
  4066a0:	test   rdi,rdi
  4066a3:	je     406755 <free_node@@Base+0x1d5>
  4066a9:	inc    QWORD PTR [rip+0x9308]        # 40f9b8 <__bss_start@@Base+0x850>
  4066b0:	call   406580 <free_node@@Base>
  4066b5:	lea    rax,[rip+0x930c]        # 40f9c8 <__bss_start@@Base+0x860>
  4066bc:	jmp    40675c <free_node@@Base+0x1dc>
  4066c1:	lea    rax,[rip+0x9208]        # 40f8d0 <__bss_start@@Base+0x768>
  4066c8:	inc    QWORD PTR [rax]
  4066cb:	inc    QWORD PTR [rip+0x920e]        # 40f8e0 <__bss_start@@Base+0x778>
  4066d2:	mov    rdi,rbx
  4066d5:	call   403040 <free@plt>
  4066da:	lea    rax,[rip+0x919f]        # 40f880 <__bss_start@@Base+0x718>
  4066e1:	jmp    406787 <free_node@@Base+0x207>
  4066e6:	lea    rax,[rip+0x9243]        # 40f930 <__bss_start@@Base+0x7c8>
  4066ed:	inc    QWORD PTR [rax]
  4066f0:	inc    QWORD PTR [rip+0x9249]        # 40f940 <__bss_start@@Base+0x7d8>
  4066f7:	mov    rdi,QWORD PTR [rbx+0x10]
  4066fb:	call   403040 <free@plt>
  406700:	mov    rdi,rbx
  406703:	call   403040 <free@plt>
  406708:	lea    rax,[rip+0x9181]        # 40f890 <__bss_start@@Base+0x728>
  40670f:	jmp    406787 <free_node@@Base+0x207>
  406711:	lea    rax,[rip+0x91e8]        # 40f900 <__bss_start@@Base+0x798>
  406718:	inc    QWORD PTR [rax]
  40671b:	inc    QWORD PTR [rip+0x91ee]        # 40f910 <__bss_start@@Base+0x7a8>
  406722:	mov    rdi,rbx
  406725:	call   403040 <free@plt>
  40672a:	lea    rax,[rip+0x9157]        # 40f888 <__bss_start@@Base+0x720>
  406731:	jmp    406787 <free_node@@Base+0x207>
  406733:	lea    rax,[rip+0x9226]        # 40f960 <__bss_start@@Base+0x7f8>
  40673a:	inc    QWORD PTR [rax]
  40673d:	inc    QWORD PTR [rip+0x922c]        # 40f970 <__bss_start@@Base+0x808>
  406744:	mov    rdi,rbx
  406747:	call   403040 <free@plt>
  40674c:	lea    rax,[rip+0x9145]        # 40f898 <__bss_start@@Base+0x730>
  406753:	jmp    406787 <free_node@@Base+0x207>
  406755:	lea    rax,[rip+0x9264]        # 40f9c0 <__bss_start@@Base+0x858>
  40675c:	inc    QWORD PTR [rax]
  40675f:	inc    QWORD PTR [rip+0x926a]        # 40f9d0 <__bss_start@@Base+0x868>
  406766:	mov    rdi,QWORD PTR [rbx+0x10]
  40676a:	call   406580 <free_node@@Base>
  40676f:	mov    rdi,QWORD PTR [rbx+0x18]
  406773:	call   406580 <free_node@@Base>
  406778:	mov    rdi,rbx
  40677b:	call   403040 <free@plt>
  406780:	lea    rax,[rip+0x9121]        # 40f8a8 <__bss_start@@Base+0x740>
  406787:	inc    QWORD PTR [rax]
  40678a:	inc    QWORD PTR [rip+0x911f]        # 40f8b0 <__bss_start@@Base+0x748>
  406791:	pop    rbx
  406792:	ret    
  406793:	inc    QWORD PTR [rip+0x90ae]        # 40f848 <__bss_start@@Base+0x6e0>
  40679a:	mov    rax,QWORD PTR [rip+0x8857]        # 40eff8 <stderr@GLIBC_2.2.5>
  4067a1:	mov    rcx,QWORD PTR [rax]
  4067a4:	lea    rdi,[rip+0x4189]        # 40a934 <_IO_stdin_used@@Base+0x934>
  4067ab:	mov    esi,0x1f
  4067b0:	mov    edx,0x1
  4067b5:	call   403270 <fwrite@plt>
  4067ba:	mov    edi,0x1
  4067bf:	call   403260 <exit@plt>
  4067c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067ce:	xchg   ax,ax

00000000004067d0 <free_node_id@@Base>:
  4067d0:	push   rbx
  4067d1:	mov    rbx,rdi
  4067d4:	inc    QWORD PTR [rip+0x90e5]        # 40f8c0 <__bss_start@@Base+0x758>
  4067db:	mov    rdi,QWORD PTR [rdi+0x8]
  4067df:	test   rdi,rdi
  4067e2:	je     4067f9 <free_node_id@@Base+0x29>
  4067e4:	inc    QWORD PTR [rip+0x90dd]        # 40f8c8 <__bss_start@@Base+0x760>
  4067eb:	call   406580 <free_node@@Base>
  4067f0:	lea    rax,[rip+0x90e1]        # 40f8d8 <__bss_start@@Base+0x770>
  4067f7:	jmp    406800 <free_node_id@@Base+0x30>
  4067f9:	lea    rax,[rip+0x90d0]        # 40f8d0 <__bss_start@@Base+0x768>
  406800:	inc    QWORD PTR [rax]
  406803:	inc    QWORD PTR [rip+0x90d6]        # 40f8e0 <__bss_start@@Base+0x778>
  40680a:	mov    rdi,rbx
  40680d:	pop    rbx
  40680e:	jmp    403040 <free@plt>
  406813:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40681d:	nop    DWORD PTR [rax]

0000000000406820 <free_node_int@@Base>:
  406820:	push   rbx
  406821:	mov    rbx,rdi
  406824:	inc    QWORD PTR [rip+0x90c5]        # 40f8f0 <__bss_start@@Base+0x788>
  40682b:	mov    rdi,QWORD PTR [rdi+0x8]
  40682f:	test   rdi,rdi
  406832:	je     406849 <free_node_int@@Base+0x29>
  406834:	inc    QWORD PTR [rip+0x90bd]        # 40f8f8 <__bss_start@@Base+0x790>
  40683b:	call   406580 <free_node@@Base>
  406840:	lea    rax,[rip+0x90c1]        # 40f908 <__bss_start@@Base+0x7a0>
  406847:	jmp    406850 <free_node_int@@Base+0x30>
  406849:	lea    rax,[rip+0x90b0]        # 40f900 <__bss_start@@Base+0x798>
  406850:	inc    QWORD PTR [rax]
  406853:	inc    QWORD PTR [rip+0x90b6]        # 40f910 <__bss_start@@Base+0x7a8>
  40685a:	mov    rdi,rbx
  40685d:	pop    rbx
  40685e:	jmp    403040 <free@plt>
  406863:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40686d:	nop    DWORD PTR [rax]

0000000000406870 <free_node_function@@Base>:
  406870:	push   rbx
  406871:	mov    rbx,rdi
  406874:	inc    QWORD PTR [rip+0x90a5]        # 40f920 <__bss_start@@Base+0x7b8>
  40687b:	mov    rdi,QWORD PTR [rdi+0x8]
  40687f:	test   rdi,rdi
  406882:	je     406899 <free_node_function@@Base+0x29>
  406884:	inc    QWORD PTR [rip+0x909d]        # 40f928 <__bss_start@@Base+0x7c0>
  40688b:	call   406580 <free_node@@Base>
  406890:	lea    rax,[rip+0x90a1]        # 40f938 <__bss_start@@Base+0x7d0>
  406897:	jmp    4068a0 <free_node_function@@Base+0x30>
  406899:	lea    rax,[rip+0x9090]        # 40f930 <__bss_start@@Base+0x7c8>
  4068a0:	inc    QWORD PTR [rax]
  4068a3:	inc    QWORD PTR [rip+0x9096]        # 40f940 <__bss_start@@Base+0x7d8>
  4068aa:	mov    rdi,QWORD PTR [rbx+0x10]
  4068ae:	call   403040 <free@plt>
  4068b3:	mov    rdi,rbx
  4068b6:	pop    rbx
  4068b7:	jmp    403040 <free@plt>
  4068bc:	nop    DWORD PTR [rax+0x0]

00000000004068c0 <free_node_return@@Base>:
  4068c0:	push   rbx
  4068c1:	mov    rbx,rdi
  4068c4:	inc    QWORD PTR [rip+0x9085]        # 40f950 <__bss_start@@Base+0x7e8>
  4068cb:	mov    rdi,QWORD PTR [rdi+0x8]
  4068cf:	test   rdi,rdi
  4068d2:	je     4068e9 <free_node_return@@Base+0x29>
  4068d4:	inc    QWORD PTR [rip+0x907d]        # 40f958 <__bss_start@@Base+0x7f0>
  4068db:	call   406580 <free_node@@Base>
  4068e0:	lea    rax,[rip+0x9081]        # 40f968 <__bss_start@@Base+0x800>
  4068e7:	jmp    4068f0 <free_node_return@@Base+0x30>
  4068e9:	lea    rax,[rip+0x9070]        # 40f960 <__bss_start@@Base+0x7f8>
  4068f0:	inc    QWORD PTR [rax]
  4068f3:	inc    QWORD PTR [rip+0x9076]        # 40f970 <__bss_start@@Base+0x808>
  4068fa:	mov    rdi,rbx
  4068fd:	pop    rbx
  4068fe:	jmp    403040 <free@plt>
  406903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40690d:	nop    DWORD PTR [rax]

0000000000406910 <free_node_if@@Base>:
  406910:	push   rbx
  406911:	mov    rbx,rdi
  406914:	inc    QWORD PTR [rip+0x9065]        # 40f980 <__bss_start@@Base+0x818>
  40691b:	mov    rdi,QWORD PTR [rdi+0x8]
  40691f:	test   rdi,rdi
  406922:	je     406939 <free_node_if@@Base+0x29>
  406924:	inc    QWORD PTR [rip+0x905d]        # 40f988 <__bss_start@@Base+0x820>
  40692b:	call   406580 <free_node@@Base>
  406930:	lea    rax,[rip+0x9061]        # 40f998 <__bss_start@@Base+0x830>
  406937:	jmp    406940 <free_node_if@@Base+0x30>
  406939:	lea    rax,[rip+0x9050]        # 40f990 <__bss_start@@Base+0x828>
  406940:	inc    QWORD PTR [rax]
  406943:	inc    QWORD PTR [rip+0x9056]        # 40f9a0 <__bss_start@@Base+0x838>
  40694a:	mov    rdi,QWORD PTR [rbx+0x10]
  40694e:	call   406580 <free_node@@Base>
  406953:	mov    rdi,QWORD PTR [rbx+0x18]
  406957:	call   406580 <free_node@@Base>
  40695c:	mov    rdi,QWORD PTR [rbx+0x20]
  406960:	call   406580 <free_node@@Base>
  406965:	mov    rdi,rbx
  406968:	pop    rbx
  406969:	jmp    403040 <free@plt>
  40696e:	xchg   ax,ax

0000000000406970 <free_node_boolean_operator@@Base>:
  406970:	push   rbx
  406971:	mov    rbx,rdi
  406974:	inc    QWORD PTR [rip+0x9035]        # 40f9b0 <__bss_start@@Base+0x848>
  40697b:	mov    rdi,QWORD PTR [rdi+0x8]
  40697f:	test   rdi,rdi
  406982:	je     406999 <free_node_boolean_operator@@Base+0x29>
  406984:	inc    QWORD PTR [rip+0x902d]        # 40f9b8 <__bss_start@@Base+0x850>
  40698b:	call   406580 <free_node@@Base>
  406990:	lea    rax,[rip+0x9031]        # 40f9c8 <__bss_start@@Base+0x860>
  406997:	jmp    4069a0 <free_node_boolean_operator@@Base+0x30>
  406999:	lea    rax,[rip+0x9020]        # 40f9c0 <__bss_start@@Base+0x858>
  4069a0:	inc    QWORD PTR [rax]
  4069a3:	inc    QWORD PTR [rip+0x9026]        # 40f9d0 <__bss_start@@Base+0x868>
  4069aa:	mov    rdi,QWORD PTR [rbx+0x10]
  4069ae:	call   406580 <free_node@@Base>
  4069b3:	mov    rdi,QWORD PTR [rbx+0x18]
  4069b7:	call   406580 <free_node@@Base>
  4069bc:	mov    rdi,rbx
  4069bf:	pop    rbx
  4069c0:	jmp    403040 <free@plt>
  4069c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069cf:	nop

00000000004069d0 <get_boolean_op_value@@Base>:
  4069d0:	push   rbx
  4069d1:	inc    QWORD PTR [rip+0x9008]        # 40f9e0 <__bss_start@@Base+0x878>
  4069d8:	mov    rbx,QWORD PTR [rdi+0x8]
  4069dc:	mov    esi,0x2
  4069e1:	mov    rdi,rbx
  4069e4:	call   403170 <strnlen@plt>
  4069e9:	cmp    rax,0x2
  4069ed:	jne    406add <get_boolean_op_value@@Base+0x10d>
  4069f3:	inc    QWORD PTR [rip+0x8fee]        # 40f9e8 <__bss_start@@Base+0x880>
  4069fa:	lea    rsi,[rip+0x3f53]        # 40a954 <_IO_stdin_used@@Base+0x954>
  406a01:	mov    edx,0x2
  406a06:	mov    rdi,rbx
  406a09:	call   403070 <strncmp@plt>
  406a0e:	test   eax,eax
  406a10:	je     406b12 <get_boolean_op_value@@Base+0x142>
  406a16:	inc    QWORD PTR [rip+0x8fe3]        # 40fa00 <__bss_start@@Base+0x898>
  406a1d:	lea    rsi,[rip+0x3f33]        # 40a957 <_IO_stdin_used@@Base+0x957>
  406a24:	mov    edx,0x2
  406a29:	mov    rdi,rbx
  406a2c:	call   403070 <strncmp@plt>
  406a31:	test   eax,eax
  406a33:	je     406b4e <get_boolean_op_value@@Base+0x17e>
  406a39:	inc    QWORD PTR [rip+0x8fd8]        # 40fa18 <__bss_start@@Base+0x8b0>
  406a40:	lea    rsi,[rip+0x3f13]        # 40a95a <_IO_stdin_used@@Base+0x95a>
  406a47:	mov    edx,0x2
  406a4c:	mov    rdi,rbx
  406a4f:	call   403070 <strncmp@plt>
  406a54:	test   eax,eax
  406a56:	je     406b63 <get_boolean_op_value@@Base+0x193>
  406a5c:	inc    QWORD PTR [rip+0x8fcd]        # 40fa30 <__bss_start@@Base+0x8c8>
  406a63:	lea    rsi,[rip+0x3ef3]        # 40a95d <_IO_stdin_used@@Base+0x95d>
  406a6a:	mov    edx,0x2
  406a6f:	mov    rdi,rbx
  406a72:	call   403070 <strncmp@plt>
  406a77:	test   eax,eax
  406a79:	je     406b78 <get_boolean_op_value@@Base+0x1a8>
  406a7f:	inc    QWORD PTR [rip+0x8fc2]        # 40fa48 <__bss_start@@Base+0x8e0>
  406a86:	lea    rsi,[rip+0x3ed3]        # 40a960 <_IO_stdin_used@@Base+0x960>
  406a8d:	mov    edx,0x2
  406a92:	mov    rdi,rbx
  406a95:	call   403070 <strncmp@plt>
  406a9a:	test   eax,eax
  406a9c:	je     406b8d <get_boolean_op_value@@Base+0x1bd>
  406aa2:	inc    QWORD PTR [rip+0x8fb7]        # 40fa60 <__bss_start@@Base+0x8f8>
  406aa9:	lea    rsi,[rip+0x3eb3]        # 40a963 <_IO_stdin_used@@Base+0x963>
  406ab0:	mov    edx,0x2
  406ab5:	mov    rdi,rbx
  406ab8:	call   403070 <strncmp@plt>
  406abd:	test   eax,eax
  406abf:	jne    406bd8 <get_boolean_op_value@@Base+0x208>
  406ac5:	inc    QWORD PTR [rip+0x8fa4]        # 40fa70 <__bss_start@@Base+0x908>
  406acc:	mov    eax,0x5
  406ad1:	lea    rcx,[rip+0x8fa8]        # 40fa80 <__bss_start@@Base+0x918>
  406ad8:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406add:	inc    QWORD PTR [rip+0x8f0c]        # 40f9f0 <__bss_start@@Base+0x888>
  406ae4:	movsx  eax,BYTE PTR [rbx]
  406ae7:	cmp    eax,0x3e
  406aea:	je     406b39 <get_boolean_op_value@@Base+0x169>
  406aec:	cmp    eax,0x3c
  406aef:	je     406b24 <get_boolean_op_value@@Base+0x154>
  406af1:	cmp    eax,0x21
  406af4:	jne    406bac <get_boolean_op_value@@Base+0x1dc>
  406afa:	inc    QWORD PTR [rip+0x8f8f]        # 40fa90 <__bss_start@@Base+0x928>
  406b01:	mov    eax,0x8
  406b06:	lea    rcx,[rip+0x8f9b]        # 40faa8 <__bss_start@@Base+0x940>
  406b0d:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b12:	inc    QWORD PTR [rip+0x8edf]        # 40f9f8 <__bss_start@@Base+0x890>
  406b19:	xor    eax,eax
  406b1b:	lea    rcx,[rip+0x8ee6]        # 40fa08 <__bss_start@@Base+0x8a0>
  406b22:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b24:	inc    QWORD PTR [rip+0x8f6d]        # 40fa98 <__bss_start@@Base+0x930>
  406b2b:	mov    eax,0x6
  406b30:	lea    rcx,[rip+0x8f79]        # 40fab0 <__bss_start@@Base+0x948>
  406b37:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b39:	inc    QWORD PTR [rip+0x8f60]        # 40faa0 <__bss_start@@Base+0x938>
  406b40:	mov    eax,0x7
  406b45:	lea    rcx,[rip+0x8f6c]        # 40fab8 <__bss_start@@Base+0x950>
  406b4c:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b4e:	inc    QWORD PTR [rip+0x8ebb]        # 40fa10 <__bss_start@@Base+0x8a8>
  406b55:	mov    eax,0x1
  406b5a:	lea    rcx,[rip+0x8ebf]        # 40fa20 <__bss_start@@Base+0x8b8>
  406b61:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b63:	inc    QWORD PTR [rip+0x8ebe]        # 40fa28 <__bss_start@@Base+0x8c0>
  406b6a:	mov    eax,0x2
  406b6f:	lea    rcx,[rip+0x8ec2]        # 40fa38 <__bss_start@@Base+0x8d0>
  406b76:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b78:	inc    QWORD PTR [rip+0x8ec1]        # 40fa40 <__bss_start@@Base+0x8d8>
  406b7f:	mov    eax,0x3
  406b84:	lea    rcx,[rip+0x8ec5]        # 40fa50 <__bss_start@@Base+0x8e8>
  406b8b:	jmp    406ba0 <get_boolean_op_value@@Base+0x1d0>
  406b8d:	inc    QWORD PTR [rip+0x8ec4]        # 40fa58 <__bss_start@@Base+0x8f0>
  406b94:	mov    eax,0x4
  406b99:	lea    rcx,[rip+0x8ec8]        # 40fa68 <__bss_start@@Base+0x900>
  406ba0:	inc    QWORD PTR [rcx]
  406ba3:	inc    QWORD PTR [rip+0x8f16]        # 40fac0 <__bss_start@@Base+0x958>
  406baa:	pop    rbx
  406bab:	ret    
  406bac:	inc    QWORD PTR [rip+0x8ed5]        # 40fa88 <__bss_start@@Base+0x920>
  406bb3:	mov    rax,QWORD PTR [rip+0x843e]        # 40eff8 <stderr@GLIBC_2.2.5>
  406bba:	mov    rdi,QWORD PTR [rax]
  406bbd:	lea    rsi,[rip+0x3da2]        # 40a966 <_IO_stdin_used@@Base+0x966>
  406bc4:	mov    rdx,rbx
  406bc7:	xor    eax,eax
  406bc9:	call   403180 <fprintf@plt>
  406bce:	mov    edi,0x1
  406bd3:	call   403260 <exit@plt>
  406bd8:	inc    QWORD PTR [rip+0x8e99]        # 40fa78 <__bss_start@@Base+0x910>
  406bdf:	jmp    406bb3 <get_boolean_op_value@@Base+0x1e3>
  406be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406beb:	nop    DWORD PTR [rax+rax*1+0x0]
  406bf0:	push   r15
  406bf2:	push   r14
  406bf4:	push   rbx
  406bf5:	lea    rdi,[rip+0x3da0]        # 40a99c <_IO_stdin_used@@Base+0x99c>
  406bfc:	lea    rsi,[rip+0x3911]        # 40a514 <_IO_stdin_used@@Base+0x514>
  406c03:	mov    edx,0x3bea7c70
  406c08:	call   407880 <read_boolean_unary_expression@@Base+0x2b0>
  406c0d:	xor    ebx,ebx
  406c0f:	lea    r14,[rip+0x7cda]        # 40e8f0 <_IO_stdin_used@@Base+0x48f0>
  406c16:	lea    r15,[rip+0x7ed3]        # 40eaf0 <_IO_stdin_used@@Base+0x4af0>
  406c1d:	nop    DWORD PTR [rax]
  406c20:	mov    edi,DWORD PTR [r14+rbx*2]
  406c24:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  406c29:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  406c2e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  406c33:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  406c38:	call   407cd0 <read_boolean_unary_expression@@Base+0x700>
  406c3d:	mov    edi,DWORD PTR [rbx+r15*1]
  406c41:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  406c46:	call   4080f0 <read_boolean_unary_expression@@Base+0xb20>
  406c4b:	add    rbx,0x10
  406c4f:	cmp    rbx,0x100
  406c56:	jne    406c20 <get_boolean_op_value@@Base+0x250>
  406c58:	call   408500 <read_boolean_unary_expression@@Base+0xf30>
  406c5d:	pop    rbx
  406c5e:	pop    r14
  406c60:	pop    r15
  406c62:	jmp    408ca0 <read_boolean_unary_expression@@Base+0x16d0>
  406c67:	nop    WORD PTR [rax+rax*1+0x0]
  406c70:	push   rax
  406c71:	call   406bf0 <get_boolean_op_value@@Base+0x220>
  406c76:	vxorps xmm0,xmm0,xmm0
  406c7a:	vmovaps XMMWORD PTR [rip+0x8b3e],xmm0        # 40f7c0 <__bss_start@@Base+0x658>
  406c82:	vmovaps XMMWORD PTR [rip+0x8b46],xmm0        # 40f7d0 <__bss_start@@Base+0x668>
  406c8a:	vmovaps XMMWORD PTR [rip+0x8b4e],xmm0        # 40f7e0 <__bss_start@@Base+0x678>
  406c92:	vmovaps XMMWORD PTR [rip+0x8b56],xmm0        # 40f7f0 <__bss_start@@Base+0x688>
  406c9a:	vmovaps XMMWORD PTR [rip+0x8b5e],xmm0        # 40f800 <__bss_start@@Base+0x698>
  406ca2:	vmovaps XMMWORD PTR [rip+0x8b66],xmm0        # 40f810 <__bss_start@@Base+0x6a8>
  406caa:	vmovaps XMMWORD PTR [rip+0x8b6e],xmm0        # 40f820 <__bss_start@@Base+0x6b8>
  406cb2:	vmovaps XMMWORD PTR [rip+0x8b76],xmm0        # 40f830 <__bss_start@@Base+0x6c8>
  406cba:	vxorps xmm0,xmm0,xmm0
  406cbe:	vmovups YMMWORD PTR [rip+0x8b7a],ymm0        # 40f840 <__bss_start@@Base+0x6d8>
  406cc6:	vmovups YMMWORD PTR [rip+0x8b92],ymm0        # 40f860 <__bss_start@@Base+0x6f8>
  406cce:	vmovups YMMWORD PTR [rip+0x8baa],ymm0        # 40f880 <__bss_start@@Base+0x718>
  406cd6:	vmovups YMMWORD PTR [rip+0x8bba],ymm0        # 40f898 <__bss_start@@Base+0x730>
  406cde:	vmovups YMMWORD PTR [rip+0x8bda],ymm0        # 40f8c0 <__bss_start@@Base+0x758>
  406ce6:	mov    QWORD PTR [rip+0x8bef],0x0        # 40f8e0 <__bss_start@@Base+0x778>
  406cf1:	vmovups YMMWORD PTR [rip+0x8bf7],ymm0        # 40f8f0 <__bss_start@@Base+0x788>
  406cf9:	mov    QWORD PTR [rip+0x8c0c],0x0        # 40f910 <__bss_start@@Base+0x7a8>
  406d04:	vmovups YMMWORD PTR [rip+0x8c14],ymm0        # 40f920 <__bss_start@@Base+0x7b8>
  406d0c:	mov    QWORD PTR [rip+0x8c29],0x0        # 40f940 <__bss_start@@Base+0x7d8>
  406d17:	vmovups YMMWORD PTR [rip+0x8c31],ymm0        # 40f950 <__bss_start@@Base+0x7e8>
  406d1f:	mov    QWORD PTR [rip+0x8c46],0x0        # 40f970 <__bss_start@@Base+0x808>
  406d2a:	vmovups YMMWORD PTR [rip+0x8c4e],ymm0        # 40f980 <__bss_start@@Base+0x818>
  406d32:	mov    QWORD PTR [rip+0x8c63],0x0        # 40f9a0 <__bss_start@@Base+0x838>
  406d3d:	vmovups YMMWORD PTR [rip+0x8c6b],ymm0        # 40f9b0 <__bss_start@@Base+0x848>
  406d45:	vmovups YMMWORD PTR [rip+0x8d53],ymm0        # 40faa0 <__bss_start@@Base+0x938>
  406d4d:	vmovups YMMWORD PTR [rip+0x8d2b],ymm0        # 40fa80 <__bss_start@@Base+0x918>
  406d55:	vmovups YMMWORD PTR [rip+0x8d03],ymm0        # 40fa60 <__bss_start@@Base+0x8f8>
  406d5d:	vmovups YMMWORD PTR [rip+0x8cdb],ymm0        # 40fa40 <__bss_start@@Base+0x8d8>
  406d65:	vmovups YMMWORD PTR [rip+0x8cb3],ymm0        # 40fa20 <__bss_start@@Base+0x8b8>
  406d6d:	mov    QWORD PTR [rip+0x8c58],0x0        # 40f9d0 <__bss_start@@Base+0x868>
  406d78:	vmovups YMMWORD PTR [rip+0x8c80],ymm0        # 40fa00 <__bss_start@@Base+0x898>
  406d80:	vmovups YMMWORD PTR [rip+0x8c58],ymm0        # 40f9e0 <__bss_start@@Base+0x878>
  406d88:	mov    QWORD PTR [rip+0x8d2d],0x0        # 40fac0 <__bss_start@@Base+0x958>
  406d93:	pop    rax
  406d94:	vzeroupper 
  406d97:	ret    
  406d98:	nop    DWORD PTR [rax+rax*1+0x0]
  406da0:	lea    rdi,[rip+0xfffffffffffffe49]        # 406bf0 <get_boolean_op_value@@Base+0x220>
  406da7:	lea    rsi,[rip+0xfffffffffffffec2]        # 406c70 <get_boolean_op_value@@Base+0x2a0>
  406dae:	jmp    409080 <__gcov_flush@@Base+0xb0>
  406db3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dbd:	nop    DWORD PTR [rax]

0000000000406dc0 <init_grammar@@Base>:
  406dc0:	vmovdqa xmm0,XMMWORD PTR [rip+0x8d08]        # 40fad0 <__bss_start@@Base+0x968>
  406dc8:	vpcmpeqd xmm1,xmm1,xmm1
  406dcc:	vpsubq xmm0,xmm0,xmm1
  406dd0:	vmovdqa XMMWORD PTR [rip+0x8cf8],xmm0        # 40fad0 <__bss_start@@Base+0x968>
  406dd8:	mov    QWORD PTR [rdi],rsi
  406ddb:	ret    
  406ddc:	nop    DWORD PTR [rax+0x0]

0000000000406de0 <destroy_grammar@@Base>:
  406de0:	vmovdqa xmm0,XMMWORD PTR [rip+0x8cf8]        # 40fae0 <__bss_start@@Base+0x978>
  406de8:	vpcmpeqd xmm1,xmm1,xmm1
  406dec:	vpsubq xmm0,xmm0,xmm1
  406df0:	vmovdqa XMMWORD PTR [rip+0x8ce8],xmm0        # 40fae0 <__bss_start@@Base+0x978>
  406df8:	ret    
  406df9:	nop    DWORD PTR [rax+0x0]

0000000000406e00 <build_ast@@Base>:
  406e00:	vmovdqa xmm0,XMMWORD PTR [rip+0x8ce8]        # 40faf0 <__bss_start@@Base+0x988>
  406e08:	vpcmpeqd xmm1,xmm1,xmm1
  406e0c:	vpsubq xmm0,xmm0,xmm1
  406e10:	vmovdqa XMMWORD PTR [rip+0x8cd8],xmm0        # 40faf0 <__bss_start@@Base+0x988>
  406e18:	jmp    406e20 <read_function_ast_node@@Base>
  406e1d:	nop    DWORD PTR [rax]

0000000000406e20 <read_function_ast_node@@Base>:
  406e20:	push   r15
  406e22:	push   r14
  406e24:	push   rbx
  406e25:	mov    rbx,rdi
  406e28:	inc    QWORD PTR [rip+0x8cd1]        # 40fb00 <__bss_start@@Base+0x998>
  406e2f:	mov    rdi,QWORD PTR [rdi]
  406e32:	call   403390 <next@@Base>
  406e37:	cmp    DWORD PTR [rax],0x0
  406e3a:	je     406e4f <read_function_ast_node@@Base+0x2f>
  406e3c:	inc    QWORD PTR [rip+0x8cc5]        # 40fb08 <__bss_start@@Base+0x9a0>
  406e43:	lea    rax,[rip+0x8cce]        # 40fb18 <__bss_start@@Base+0x9b0>
  406e4a:	jmp    406f13 <read_function_ast_node@@Base+0xf3>
  406e4f:	inc    QWORD PTR [rip+0x8cba]        # 40fb10 <__bss_start@@Base+0x9a8>
  406e56:	mov    rdi,rax
  406e59:	call   405f80 <free_token_int_type@@Base>
  406e5e:	mov    rdi,QWORD PTR [rbx]
  406e61:	call   403390 <next@@Base>
  406e66:	cmp    DWORD PTR [rax],0x2
  406e69:	jne    406ee5 <read_function_ast_node@@Base+0xc5>
  406e6b:	mov    r14,rax
  406e6e:	inc    QWORD PTR [rip+0x8cb3]        # 40fb28 <__bss_start@@Base+0x9c0>
  406e75:	mov    rdi,QWORD PTR [rbx]
  406e78:	call   403390 <next@@Base>
  406e7d:	cmp    DWORD PTR [rax],0x3
  406e80:	jne    406ef5 <read_function_ast_node@@Base+0xd5>
  406e82:	inc    QWORD PTR [rip+0x8cb7]        # 40fb40 <__bss_start@@Base+0x9d8>
  406e89:	mov    rdi,rax
  406e8c:	call   405fe0 <free_token_opar@@Base>
  406e91:	mov    rdi,QWORD PTR [rbx]
  406e94:	call   403390 <next@@Base>
  406e99:	cmp    DWORD PTR [rax],0x4
  406e9c:	jne    406f05 <read_function_ast_node@@Base+0xe5>
  406e9e:	inc    QWORD PTR [rip+0x8cb3]        # 40fb58 <__bss_start@@Base+0x9f0>
  406ea5:	mov    rdi,rax
  406ea8:	call   406000 <free_token_cpar@@Base>
  406ead:	mov    rdi,rbx
  406eb0:	call   406f30 <read_body@@Base>
  406eb5:	mov    r15,rax
  406eb8:	mov    edi,0x20
  406ebd:	call   4031e0 <malloc@plt>
  406ec2:	mov    rbx,rax
  406ec5:	mov    rsi,QWORD PTR [r14+0x8]
  406ec9:	mov    rdi,rax
  406ecc:	mov    rdx,r15
  406ecf:	call   406400 <init_node_function@@Base>
  406ed4:	mov    rdi,r14
  406ed7:	call   405fc0 <free_token_function@@Base>
  406edc:	lea    rax,[rip+0x8c85]        # 40fb68 <__bss_start@@Base+0xa00>
  406ee3:	jmp    406f15 <read_function_ast_node@@Base+0xf5>
  406ee5:	inc    QWORD PTR [rip+0x8c34]        # 40fb20 <__bss_start@@Base+0x9b8>
  406eec:	lea    rax,[rip+0x8c3d]        # 40fb30 <__bss_start@@Base+0x9c8>
  406ef3:	jmp    406f13 <read_function_ast_node@@Base+0xf3>
  406ef5:	inc    QWORD PTR [rip+0x8c3c]        # 40fb38 <__bss_start@@Base+0x9d0>
  406efc:	lea    rax,[rip+0x8c45]        # 40fb48 <__bss_start@@Base+0x9e0>
  406f03:	jmp    406f13 <read_function_ast_node@@Base+0xf3>
  406f05:	inc    QWORD PTR [rip+0x8c44]        # 40fb50 <__bss_start@@Base+0x9e8>
  406f0c:	lea    rax,[rip+0x8c4d]        # 40fb60 <__bss_start@@Base+0x9f8>
  406f13:	xor    ebx,ebx
  406f15:	inc    QWORD PTR [rax]
  406f18:	inc    QWORD PTR [rip+0x8c51]        # 40fb70 <__bss_start@@Base+0xa08>
  406f1f:	mov    rax,rbx
  406f22:	pop    rbx
  406f23:	pop    r14
  406f25:	pop    r15
  406f27:	ret    
  406f28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406f30 <read_body@@Base>:
  406f30:	push   rbp
  406f31:	push   r15
  406f33:	push   r14
  406f35:	push   r13
  406f37:	push   r12
  406f39:	push   rbx
  406f3a:	push   rax
  406f3b:	mov    r15,rdi
  406f3e:	inc    QWORD PTR [rip+0x8c3b]        # 40fb80 <__bss_start@@Base+0xa18>
  406f45:	mov    rdi,QWORD PTR [rdi]
  406f48:	call   403390 <next@@Base>
  406f4d:	cmp    DWORD PTR [rax],0x5
  406f50:	jne    406f7f <read_body@@Base+0x4f>
  406f52:	inc    QWORD PTR [rip+0x8c37]        # 40fb90 <__bss_start@@Base+0xa28>
  406f59:	mov    rdi,rax
  406f5c:	call   406020 <free_token_obra@@Base>
  406f61:	mov    rdi,QWORD PTR [r15]
  406f64:	call   403390 <next@@Base>
  406f69:	inc    QWORD PTR [rip+0x8c30]        # 40fba0 <__bss_start@@Base+0xa38>
  406f70:	mov    ecx,DWORD PTR [rax]
  406f72:	cmp    ecx,0x6
  406f75:	jne    406f95 <read_body@@Base+0x65>
  406f77:	xor    r14d,r14d
  406f7a:	jmp    407051 <read_body@@Base+0x121>
  406f7f:	inc    QWORD PTR [rip+0x8c02]        # 40fb88 <__bss_start@@Base+0xa20>
  406f86:	lea    rax,[rip+0x8c0b]        # 40fb98 <__bss_start@@Base+0xa30>
  406f8d:	xor    r14d,r14d
  406f90:	jmp    407082 <read_body@@Base+0x152>
  406f95:	xor    r12d,r12d
  406f98:	lea    rbp,[rip+0x8c59]        # 40fbf8 <__bss_start@@Base+0xa90>
  406f9f:	lea    r13,[rip+0x8c2a]        # 40fbd0 <__bss_start@@Base+0xa68>
  406fa6:	xor    r14d,r14d
  406fa9:	jmp    406fdd <read_body@@Base+0xad>
  406fab:	nop    DWORD PTR [rax+rax*1+0x0]
  406fb0:	inc    QWORD PTR [rip+0x8c39]        # 40fbf0 <__bss_start@@Base+0xa88>
  406fb7:	lea    rax,[rip+0x8c42]        # 40fc00 <__bss_start@@Base+0xa98>
  406fbe:	mov    r14,rbx
  406fc1:	inc    QWORD PTR [rax]
  406fc4:	mov    rdi,QWORD PTR [r15]
  406fc7:	call   403390 <next@@Base>
  406fcc:	inc    QWORD PTR [rip+0x8c35]        # 40fc08 <__bss_start@@Base+0xaa0>
  406fd3:	mov    ecx,DWORD PTR [rax]
  406fd5:	mov    r12,rbx
  406fd8:	cmp    ecx,0x6
  406fdb:	je     407051 <read_body@@Base+0x121>
  406fdd:	inc    QWORD PTR [rip+0x8bc4]        # 40fba8 <__bss_start@@Base+0xa40>
  406fe4:	cmp    ecx,0xa
  406fe7:	je     407010 <read_body@@Base+0xe0>
  406fe9:	cmp    ecx,0x7
  406fec:	jne    407069 <read_body@@Base+0x139>
  406fee:	inc    QWORD PTR [rip+0x8bcb]        # 40fbc0 <__bss_start@@Base+0xa58>
  406ff5:	mov    rdi,rax
  406ff8:	call   406060 <free_token_return@@Base>
  406ffd:	mov    rdi,r15
  407000:	call   4070a0 <read_return_expression@@Base>
  407005:	mov    rbx,rax
  407008:	mov    rax,r13
  40700b:	jmp    407031 <read_body@@Base+0x101>
  40700d:	nop    DWORD PTR [rax]
  407010:	inc    QWORD PTR [rip+0x8bb1]        # 40fbc8 <__bss_start@@Base+0xa60>
  407017:	mov    rdi,rax
  40701a:	call   4060c0 <free_token_if@@Base>
  40701f:	mov    rdi,r15
  407022:	call   407160 <read_if_statement@@Base>
  407027:	mov    rbx,rax
  40702a:	lea    rax,[rip+0x8ba7]        # 40fbd8 <__bss_start@@Base+0xa70>
  407031:	inc    QWORD PTR [rax]
  407034:	test   r14,r14
  407037:	je     406fb0 <read_body@@Base+0x80>
  40703d:	inc    QWORD PTR [rip+0x8ba4]        # 40fbe8 <__bss_start@@Base+0xa80>
  407044:	mov    QWORD PTR [r12+0x8],rbx
  407049:	mov    rax,rbp
  40704c:	jmp    406fc1 <read_body@@Base+0x91>
  407051:	inc    QWORD PTR [rip+0x8b58]        # 40fbb0 <__bss_start@@Base+0xa48>
  407058:	mov    rdi,rax
  40705b:	call   406040 <free_token_cbra@@Base>
  407060:	lea    rax,[rip+0x8ba9]        # 40fc10 <__bss_start@@Base+0xaa8>
  407067:	jmp    407082 <read_body@@Base+0x152>
  407069:	inc    QWORD PTR [rip+0x8b48]        # 40fbb8 <__bss_start@@Base+0xa50>
  407070:	mov    rdi,QWORD PTR [r15]
  407073:	mov    rsi,rax
  407076:	call   403570 <push_back@@Base>
  40707b:	lea    rax,[rip+0x8b5e]        # 40fbe0 <__bss_start@@Base+0xa78>
  407082:	inc    QWORD PTR [rax]
  407085:	inc    QWORD PTR [rip+0x8b8c]        # 40fc18 <__bss_start@@Base+0xab0>
  40708c:	mov    rax,r14
  40708f:	add    rsp,0x8
  407093:	pop    rbx
  407094:	pop    r12
  407096:	pop    r13
  407098:	pop    r14
  40709a:	pop    r15
  40709c:	pop    rbp
  40709d:	ret    
  40709e:	xchg   ax,ax

00000000004070a0 <read_return_expression@@Base>:
  4070a0:	push   r15
  4070a2:	push   r14
  4070a4:	push   rbx
  4070a5:	mov    r14,rdi
  4070a8:	inc    QWORD PTR [rip+0x8b71]        # 40fc20 <__bss_start@@Base+0xab8>
  4070af:	mov    rdi,QWORD PTR [rdi]
  4070b2:	call   403390 <next@@Base>
  4070b7:	cmp    DWORD PTR [rax],0x1
  4070ba:	jne    407123 <read_return_expression@@Base+0x83>
  4070bc:	mov    rbx,rax
  4070bf:	inc    QWORD PTR [rip+0x8b6a]        # 40fc30 <__bss_start@@Base+0xac8>
  4070c6:	mov    edi,0x18
  4070cb:	call   4031e0 <malloc@plt>
  4070d0:	mov    r15,rax
  4070d3:	mov    esi,DWORD PTR [rbx+0x4]
  4070d6:	mov    rdi,rax
  4070d9:	call   4063a0 <init_node_int@@Base>
  4070de:	mov    rdi,rbx
  4070e1:	call   405fa0 <free_token_int_value@@Base>
  4070e6:	mov    edi,0x18
  4070eb:	call   4031e0 <malloc@plt>
  4070f0:	mov    rbx,rax
  4070f3:	mov    rdi,rax
  4070f6:	mov    rsi,r15
  4070f9:	call   406460 <init_node_return@@Base>
  4070fe:	mov    rdi,QWORD PTR [r14]
  407101:	call   403390 <next@@Base>
  407106:	cmp    DWORD PTR [rax],0x8
  407109:	jne    407133 <read_return_expression@@Base+0x93>
  40710b:	inc    QWORD PTR [rip+0x8b36]        # 40fc48 <__bss_start@@Base+0xae0>
  407112:	mov    rdi,rax
  407115:	call   406080 <free_token_semicolon@@Base>
  40711a:	lea    rax,[rip+0x8b37]        # 40fc58 <__bss_start@@Base+0xaf0>
  407121:	jmp    407143 <read_return_expression@@Base+0xa3>
  407123:	inc    QWORD PTR [rip+0x8afe]        # 40fc28 <__bss_start@@Base+0xac0>
  40712a:	lea    rax,[rip+0x8b07]        # 40fc38 <__bss_start@@Base+0xad0>
  407131:	jmp    407141 <read_return_expression@@Base+0xa1>
  407133:	inc    QWORD PTR [rip+0x8b06]        # 40fc40 <__bss_start@@Base+0xad8>
  40713a:	lea    rax,[rip+0x8b0f]        # 40fc50 <__bss_start@@Base+0xae8>
  407141:	xor    ebx,ebx
  407143:	inc    QWORD PTR [rax]
  407146:	inc    QWORD PTR [rip+0x8b13]        # 40fc60 <__bss_start@@Base+0xaf8>
  40714d:	mov    rax,rbx
  407150:	pop    rbx
  407151:	pop    r14
  407153:	pop    r15
  407155:	ret    
  407156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407160 <read_if_statement@@Base>:
  407160:	push   r15
  407162:	push   r14
  407164:	push   r12
  407166:	push   rbx
  407167:	push   rax
  407168:	mov    rbx,rdi
  40716b:	inc    QWORD PTR [rip+0x8afe]        # 40fc70 <__bss_start@@Base+0xb08>
  407172:	mov    rdi,QWORD PTR [rdi]
  407175:	call   403390 <next@@Base>
  40717a:	cmp    DWORD PTR [rax],0x3
  40717d:	jne    4071d4 <read_if_statement@@Base+0x74>
  40717f:	inc    QWORD PTR [rip+0x8afa]        # 40fc80 <__bss_start@@Base+0xb18>
  407186:	mov    rdi,rax
  407189:	call   405fe0 <free_token_opar@@Base>
  40718e:	mov    rdi,rbx
  407191:	call   407250 <read_boolean_expression@@Base>
  407196:	mov    r14,rax
  407199:	mov    rdi,rbx
  40719c:	call   406f30 <read_body@@Base>
  4071a1:	mov    r15,rax
  4071a4:	mov    rdi,QWORD PTR [rbx]
  4071a7:	call   403390 <next@@Base>
  4071ac:	cmp    DWORD PTR [rax],0xb
  4071af:	jne    4071e6 <read_if_statement@@Base+0x86>
  4071b1:	inc    QWORD PTR [rip+0x8ad8]        # 40fc90 <__bss_start@@Base+0xb28>
  4071b8:	mov    rdi,rax
  4071bb:	call   4060e0 <free_token_else@@Base>
  4071c0:	mov    rdi,rbx
  4071c3:	call   406f30 <read_body@@Base>
  4071c8:	mov    r12,rax
  4071cb:	lea    rax,[rip+0x8ace]        # 40fca0 <__bss_start@@Base+0xb38>
  4071d2:	jmp    407202 <read_if_statement@@Base+0xa2>
  4071d4:	inc    QWORD PTR [rip+0x8a9d]        # 40fc78 <__bss_start@@Base+0xb10>
  4071db:	lea    rax,[rip+0x8aa6]        # 40fc88 <__bss_start@@Base+0xb20>
  4071e2:	xor    ebx,ebx
  4071e4:	jmp    40722a <read_if_statement@@Base+0xca>
  4071e6:	inc    QWORD PTR [rip+0x8aab]        # 40fc98 <__bss_start@@Base+0xb30>
  4071ed:	mov    rdi,QWORD PTR [rbx]
  4071f0:	mov    rsi,rax
  4071f3:	call   403570 <push_back@@Base>
  4071f8:	lea    rax,[rip+0x8aa9]        # 40fca8 <__bss_start@@Base+0xb40>
  4071ff:	xor    r12d,r12d
  407202:	inc    QWORD PTR [rax]
  407205:	mov    edi,0x28
  40720a:	call   4031e0 <malloc@plt>
  40720f:	mov    rbx,rax
  407212:	mov    rdi,rax
  407215:	mov    rsi,r14
  407218:	mov    rdx,r15
  40721b:	mov    rcx,r12
  40721e:	call   4064c0 <init_node_if@@Base>
  407223:	lea    rax,[rip+0x8a86]        # 40fcb0 <__bss_start@@Base+0xb48>
  40722a:	inc    QWORD PTR [rax]
  40722d:	inc    QWORD PTR [rip+0x8a84]        # 40fcb8 <__bss_start@@Base+0xb50>
  407234:	mov    rax,rbx
  407237:	add    rsp,0x8
  40723b:	pop    rbx
  40723c:	pop    r12
  40723e:	pop    r14
  407240:	pop    r15
  407242:	ret    
  407243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40724d:	nop    DWORD PTR [rax]

0000000000407250 <read_boolean_expression@@Base>:
  407250:	push   rbp
  407251:	push   r15
  407253:	push   r14
  407255:	push   r13
  407257:	push   r12
  407259:	push   rbx
  40725a:	push   rax
  40725b:	mov    rbx,rdi
  40725e:	inc    QWORD PTR [rip+0x8a5b]        # 40fcc0 <__bss_start@@Base+0xb58>
  407265:	mov    DWORD PTR [rsp+0x4],0x0
  40726d:	mov    rdi,QWORD PTR [rdi]
  407270:	call   403390 <next@@Base>
  407275:	inc    QWORD PTR [rip+0x8a4c]        # 40fcc8 <__bss_start@@Base+0xb60>
  40727c:	mov    ecx,DWORD PTR [rax]
  40727e:	xor    r14d,r14d
  407281:	cmp    ecx,0x4
  407284:	je     407345 <read_boolean_expression@@Base+0xf5>
  40728a:	lea    r15,[rsp+0x4]
  40728f:	lea    r13,[rip+0x8a7a]        # 40fd10 <__bss_start@@Base+0xba8>
  407296:	lea    r12,[rip+0x8a63]        # 40fd00 <__bss_start@@Base+0xb98>
  40729d:	jmp    4072d6 <read_boolean_expression@@Base+0x86>
  40729f:	nop
  4072a0:	inc    QWORD PTR [rip+0x8a51]        # 40fcf8 <__bss_start@@Base+0xb90>
  4072a7:	mov    rdi,rbx
  4072aa:	mov    rsi,r14
  4072ad:	mov    rdx,r15
  4072b0:	mov    ecx,ebp
  4072b2:	call   4073a0 <read_single_boolean_expression@@Base>
  4072b7:	mov    r14,rax
  4072ba:	mov    rax,r13
  4072bd:	inc    QWORD PTR [rax]
  4072c0:	mov    rdi,QWORD PTR [rbx]
  4072c3:	call   403390 <next@@Base>
  4072c8:	inc    QWORD PTR [rip+0x8a49]        # 40fd18 <__bss_start@@Base+0xbb0>
  4072cf:	mov    ecx,DWORD PTR [rax]
  4072d1:	cmp    ecx,0x4
  4072d4:	je     407345 <read_boolean_expression@@Base+0xf5>
  4072d6:	inc    QWORD PTR [rip+0x89f3]        # 40fcd0 <__bss_start@@Base+0xb68>
  4072dd:	cmp    ecx,0xc
  4072e0:	je     407320 <read_boolean_expression@@Base+0xd0>
  4072e2:	cmp    ecx,0x3
  4072e5:	je     4072a0 <read_boolean_expression@@Base+0x50>
  4072e7:	cmp    ecx,0x1
  4072ea:	jne    40736d <read_boolean_expression@@Base+0x11d>
  4072f0:	inc    QWORD PTR [rip+0x89f1]        # 40fce8 <__bss_start@@Base+0xb80>
  4072f7:	mov    rdi,QWORD PTR [rbx]
  4072fa:	mov    rsi,rax
  4072fd:	call   403570 <push_back@@Base>
  407302:	mov    rdi,rbx
  407305:	mov    rsi,r14
  407308:	mov    rdx,r15
  40730b:	mov    ecx,ebp
  40730d:	call   4073a0 <read_single_boolean_expression@@Base>
  407312:	mov    r14,rax
  407315:	mov    rax,r12
  407318:	jmp    4072bd <read_boolean_expression@@Base+0x6d>
  40731a:	nop    WORD PTR [rax+rax*1+0x0]
  407320:	inc    QWORD PTR [rip+0x89c9]        # 40fcf0 <__bss_start@@Base+0xb88>
  407327:	mov    rdi,rax
  40732a:	call   4069d0 <get_boolean_op_value@@Base>
  40732f:	mov    ebp,eax
  407331:	mov    DWORD PTR [rsp+0x4],0x1
  407339:	lea    rax,[rip+0x89c8]        # 40fd08 <__bss_start@@Base+0xba0>
  407340:	jmp    4072bd <read_boolean_expression@@Base+0x6d>
  407345:	inc    QWORD PTR [rip+0x898c]        # 40fcd8 <__bss_start@@Base+0xb70>
  40734c:	inc    QWORD PTR [rip+0x89cd]        # 40fd20 <__bss_start@@Base+0xbb8>
  407353:	mov    rdi,rax
  407356:	call   406000 <free_token_cpar@@Base>
  40735b:	mov    rax,r14
  40735e:	add    rsp,0x8
  407362:	pop    rbx
  407363:	pop    r12
  407365:	pop    r13
  407367:	pop    r14
  407369:	pop    r15
  40736b:	pop    rbp
  40736c:	ret    
  40736d:	inc    QWORD PTR [rip+0x896c]        # 40fce0 <__bss_start@@Base+0xb78>
  407374:	mov    rax,QWORD PTR [rip+0x7c7d]        # 40eff8 <stderr@GLIBC_2.2.5>
  40737b:	mov    rcx,QWORD PTR [rax]
  40737e:	lea    rdi,[rip+0x3799]        # 40ab1e <_IO_stdin_used@@Base+0xb1e>
  407385:	mov    esi,0x21
  40738a:	mov    edx,0x1
  40738f:	call   403270 <fwrite@plt>
  407394:	mov    edi,0x1
  407399:	call   403260 <exit@plt>
  40739e:	xchg   ax,ax

00000000004073a0 <read_single_boolean_expression@@Base>:
  4073a0:	push   rbp
  4073a1:	push   r15
  4073a3:	push   r14
  4073a5:	push   rbx
  4073a6:	push   rax
  4073a7:	inc    QWORD PTR [rip+0x8982]        # 40fd30 <__bss_start@@Base+0xbc8>
  4073ae:	test   rsi,rsi
  4073b1:	je     407400 <read_single_boolean_expression@@Base+0x60>
  4073b3:	mov    rbx,rdx
  4073b6:	inc    QWORD PTR [rip+0x8983]        # 40fd40 <__bss_start@@Base+0xbd8>
  4073bd:	cmp    DWORD PTR [rdx],0x0
  4073c0:	je     40742e <read_single_boolean_expression@@Base+0x8e>
  4073c2:	mov    r14d,ecx
  4073c5:	inc    QWORD PTR [rip+0x8984]        # 40fd50 <__bss_start@@Base+0xbe8>
  4073cc:	call   407460 <read_boolean_binary_expression@@Base>
  4073d1:	mov    r15,rax
  4073d4:	mov    edi,0x28
  4073d9:	call   4031e0 <malloc@plt>
  4073de:	mov    rbp,rax
  4073e1:	mov    rdi,rax
  4073e4:	mov    esi,r14d
  4073e7:	xor    edx,edx
  4073e9:	mov    rcx,r15
  4073ec:	call   406520 <init_node_boolean_operator@@Base>
  4073f1:	mov    DWORD PTR [rbx],0x0
  4073f7:	lea    rax,[rip+0x8962]        # 40fd60 <__bss_start@@Base+0xbf8>
  4073fe:	jmp    407416 <read_single_boolean_expression@@Base+0x76>
  407400:	inc    QWORD PTR [rip+0x8931]        # 40fd38 <__bss_start@@Base+0xbd0>
  407407:	call   407460 <read_boolean_binary_expression@@Base>
  40740c:	mov    rbp,rax
  40740f:	lea    rax,[rip+0x8932]        # 40fd48 <__bss_start@@Base+0xbe0>
  407416:	inc    QWORD PTR [rax]
  407419:	inc    QWORD PTR [rip+0x8948]        # 40fd68 <__bss_start@@Base+0xc00>
  407420:	mov    rax,rbp
  407423:	add    rsp,0x8
  407427:	pop    rbx
  407428:	pop    r14
  40742a:	pop    r15
  40742c:	pop    rbp
  40742d:	ret    
  40742e:	inc    QWORD PTR [rip+0x8923]        # 40fd58 <__bss_start@@Base+0xbf0>
  407435:	mov    rax,QWORD PTR [rip+0x7bbc]        # 40eff8 <stderr@GLIBC_2.2.5>
  40743c:	mov    rdi,QWORD PTR [rax]
  40743f:	mov    edx,DWORD PTR ds:0x4
  407446:	lea    rsi,[rip+0x36f3]        # 40ab40 <_IO_stdin_used@@Base+0xb40>
  40744d:	xor    eax,eax
  40744f:	call   403180 <fprintf@plt>
  407454:	mov    edi,0x1
  407459:	call   403260 <exit@plt>
  40745e:	xchg   ax,ax

0000000000407460 <read_boolean_binary_expression@@Base>:
  407460:	push   rbp
  407461:	push   r15
  407463:	push   r14
  407465:	push   rbx
  407466:	push   rax
  407467:	mov    rbx,rdi
  40746a:	inc    QWORD PTR [rip+0x88ff]        # 40fd70 <__bss_start@@Base+0xc08>
  407471:	mov    rdi,QWORD PTR [rdi]
  407474:	call   403390 <next@@Base>
  407479:	mov    rbp,rax
  40747c:	mov    eax,DWORD PTR [rax]
  40747e:	cmp    eax,0x1
  407481:	jne    40753e <read_boolean_binary_expression@@Base+0xde>
  407487:	inc    QWORD PTR [rip+0x88f2]        # 40fd80 <__bss_start@@Base+0xc18>
  40748e:	mov    edi,0x18
  407493:	call   4031e0 <malloc@plt>
  407498:	mov    r14,rax
  40749b:	mov    esi,DWORD PTR [rbp+0x4]
  40749e:	mov    rdi,rax
  4074a1:	call   4063a0 <init_node_int@@Base>
  4074a6:	mov    rdi,rbp
  4074a9:	call   405fa0 <free_token_int_value@@Base>
  4074ae:	mov    rdi,QWORD PTR [rbx]
  4074b1:	call   403390 <next@@Base>
  4074b6:	cmp    DWORD PTR [rax],0xc
  4074b9:	jne    407570 <read_boolean_binary_expression@@Base+0x110>
  4074bf:	mov    rbp,rax
  4074c2:	inc    QWORD PTR [rip+0x88e7]        # 40fdb0 <__bss_start@@Base+0xc48>
  4074c9:	mov    rdi,rax
  4074cc:	call   4069d0 <get_boolean_op_value@@Base>
  4074d1:	mov    r15d,eax
  4074d4:	mov    rdi,rbp
  4074d7:	call   406100 <free_token_boolean_op@@Base>
  4074dc:	mov    rdi,QWORD PTR [rbx]
  4074df:	call   403390 <next@@Base>
  4074e4:	cmp    DWORD PTR [rax],0x1
  4074e7:	jne    407598 <read_boolean_binary_expression@@Base+0x138>
  4074ed:	mov    rbx,rax
  4074f0:	inc    QWORD PTR [rip+0x88d1]        # 40fdc8 <__bss_start@@Base+0xc60>
  4074f7:	mov    edi,0x18
  4074fc:	call   4031e0 <malloc@plt>
  407501:	mov    rbp,rax
  407504:	mov    esi,DWORD PTR [rbx+0x4]
  407507:	mov    rdi,rax
  40750a:	call   4063a0 <init_node_int@@Base>
  40750f:	mov    rdi,rbx
  407512:	call   405fa0 <free_token_int_value@@Base>
  407517:	mov    edi,0x28
  40751c:	call   4031e0 <malloc@plt>
  407521:	mov    rbx,rax
  407524:	mov    rdi,rax
  407527:	mov    esi,r15d
  40752a:	mov    rdx,r14
  40752d:	mov    rcx,rbp
  407530:	call   406520 <init_node_boolean_operator@@Base>
  407535:	lea    rax,[rip+0x889c]        # 40fdd8 <__bss_start@@Base+0xc70>
  40753c:	jmp    4075b0 <read_boolean_binary_expression@@Base+0x150>
  40753e:	inc    QWORD PTR [rip+0x8833]        # 40fd78 <__bss_start@@Base+0xc10>
  407545:	cmp    eax,0xc
  407548:	jne    407588 <read_boolean_binary_expression@@Base+0x128>
  40754a:	inc    QWORD PTR [rip+0x8837]        # 40fd88 <__bss_start@@Base+0xc20>
  407551:	mov    rdi,QWORD PTR [rbx]
  407554:	mov    rsi,rbp
  407557:	call   403570 <push_back@@Base>
  40755c:	mov    rdi,rbx
  40755f:	call   4075d0 <read_boolean_unary_expression@@Base>
  407564:	mov    rbx,rax
  407567:	lea    rax,[rip+0x882a]        # 40fd98 <__bss_start@@Base+0xc30>
  40756e:	jmp    4075b0 <read_boolean_binary_expression@@Base+0x150>
  407570:	inc    QWORD PTR [rip+0x8831]        # 40fda8 <__bss_start@@Base+0xc40>
  407577:	mov    rdi,r14
  40757a:	call   406580 <free_node@@Base>
  40757f:	lea    rax,[rip+0x8832]        # 40fdb8 <__bss_start@@Base+0xc50>
  407586:	jmp    4075ae <read_boolean_binary_expression@@Base+0x14e>
  407588:	inc    QWORD PTR [rip+0x8801]        # 40fd90 <__bss_start@@Base+0xc28>
  40758f:	lea    rax,[rip+0x880a]        # 40fda0 <__bss_start@@Base+0xc38>
  407596:	jmp    4075ae <read_boolean_binary_expression@@Base+0x14e>
  407598:	inc    QWORD PTR [rip+0x8821]        # 40fdc0 <__bss_start@@Base+0xc58>
  40759f:	mov    rdi,r14
  4075a2:	call   406580 <free_node@@Base>
  4075a7:	lea    rax,[rip+0x8822]        # 40fdd0 <__bss_start@@Base+0xc68>
  4075ae:	xor    ebx,ebx
  4075b0:	inc    QWORD PTR [rax]
  4075b3:	inc    QWORD PTR [rip+0x8826]        # 40fde0 <__bss_start@@Base+0xc78>
  4075ba:	mov    rax,rbx
  4075bd:	add    rsp,0x8
  4075c1:	pop    rbx
  4075c2:	pop    r14
  4075c4:	pop    r15
  4075c6:	pop    rbp
  4075c7:	ret    
  4075c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004075d0 <read_boolean_unary_expression@@Base>:
  4075d0:	push   rbp
  4075d1:	push   r15
  4075d3:	push   r14
  4075d5:	push   rbx
  4075d6:	push   rax
  4075d7:	mov    rbp,rdi
  4075da:	inc    QWORD PTR [rip+0x880f]        # 40fdf0 <__bss_start@@Base+0xc88>
  4075e1:	mov    edi,0x28
  4075e6:	call   4031e0 <malloc@plt>
  4075eb:	mov    r15,rax
  4075ee:	mov    rdi,QWORD PTR [rbp+0x0]
  4075f2:	call   403390 <next@@Base>
  4075f7:	cmp    DWORD PTR [rax],0xc
  4075fa:	jne    40766a <read_boolean_unary_expression@@Base+0x9a>
  4075fc:	mov    rbx,rax
  4075ff:	inc    QWORD PTR [rip+0x87fa]        # 40fe00 <__bss_start@@Base+0xc98>
  407606:	mov    rdi,rax
  407609:	call   4069d0 <get_boolean_op_value@@Base>
  40760e:	mov    r14d,eax
  407611:	mov    rdi,rbx
  407614:	call   406100 <free_token_boolean_op@@Base>
  407619:	mov    rdi,QWORD PTR [rbp+0x0]
  40761d:	call   403390 <next@@Base>
  407622:	cmp    DWORD PTR [rax],0x1
  407625:	jne    407682 <read_boolean_unary_expression@@Base+0xb2>
  407627:	mov    rbp,rax
  40762a:	inc    QWORD PTR [rip+0x87e7]        # 40fe18 <__bss_start@@Base+0xcb0>
  407631:	mov    edi,0x18
  407636:	call   4031e0 <malloc@plt>
  40763b:	mov    rbx,rax
  40763e:	mov    esi,DWORD PTR [rbp+0x4]
  407641:	mov    rdi,rax
  407644:	call   4063a0 <init_node_int@@Base>
  407649:	mov    rdi,rbp
  40764c:	call   405fa0 <free_token_int_value@@Base>
  407651:	mov    rdi,r15
  407654:	mov    esi,r14d
  407657:	mov    rdx,rbx
  40765a:	xor    ecx,ecx
  40765c:	call   406520 <init_node_boolean_operator@@Base>
  407661:	lea    rax,[rip+0x87c0]        # 40fe28 <__bss_start@@Base+0xcc0>
  407668:	jmp    40769b <read_boolean_unary_expression@@Base+0xcb>
  40766a:	inc    QWORD PTR [rip+0x8787]        # 40fdf8 <__bss_start@@Base+0xc90>
  407671:	mov    rdi,r15
  407674:	call   406970 <free_node_boolean_operator@@Base>
  407679:	lea    rax,[rip+0x8788]        # 40fe08 <__bss_start@@Base+0xca0>
  407680:	jmp    407698 <read_boolean_unary_expression@@Base+0xc8>
  407682:	inc    QWORD PTR [rip+0x8787]        # 40fe10 <__bss_start@@Base+0xca8>
  407689:	mov    rdi,r15
  40768c:	call   406970 <free_node_boolean_operator@@Base>
  407691:	lea    rax,[rip+0x8788]        # 40fe20 <__bss_start@@Base+0xcb8>
  407698:	xor    r15d,r15d
  40769b:	inc    QWORD PTR [rax]
  40769e:	inc    QWORD PTR [rip+0x878b]        # 40fe30 <__bss_start@@Base+0xcc8>
  4076a5:	mov    rax,r15
  4076a8:	add    rsp,0x8
  4076ac:	pop    rbx
  4076ad:	pop    r14
  4076af:	pop    r15
  4076b1:	pop    rbp
  4076b2:	ret    
  4076b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076bd:	nop    DWORD PTR [rax]
  4076c0:	push   r15
  4076c2:	push   r14
  4076c4:	push   rbx
  4076c5:	lea    rdi,[rip+0x34ac]        # 40ab78 <_IO_stdin_used@@Base+0xb78>
  4076cc:	lea    rsi,[rip+0x2e41]        # 40a514 <_IO_stdin_used@@Base+0x514>
  4076d3:	mov    edx,0xa66cc747
  4076d8:	call   407880 <read_boolean_unary_expression@@Base+0x2b0>
  4076dd:	xor    ebx,ebx
  4076df:	lea    r14,[rip+0x750a]        # 40ebf0 <_IO_stdin_used@@Base+0x4bf0>
  4076e6:	lea    r15,[rip+0x7663]        # 40ed50 <_IO_stdin_used@@Base+0x4d50>
  4076ed:	nop    DWORD PTR [rax]
  4076f0:	mov    edi,DWORD PTR [r14+rbx*2]
  4076f4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  4076f9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  4076fe:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  407703:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  407708:	call   407cd0 <read_boolean_unary_expression@@Base+0x700>
  40770d:	mov    edi,DWORD PTR [rbx+r15*1]
  407711:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  407716:	call   4080f0 <read_boolean_unary_expression@@Base+0xb20>
  40771b:	add    rbx,0x10
  40771f:	cmp    rbx,0xb0
  407726:	jne    4076f0 <read_boolean_unary_expression@@Base+0x120>
  407728:	call   408500 <read_boolean_unary_expression@@Base+0xf30>
  40772d:	pop    rbx
  40772e:	pop    r14
  407730:	pop    r15
  407732:	jmp    408ca0 <read_boolean_unary_expression@@Base+0x16d0>
  407737:	nop    WORD PTR [rax+rax*1+0x0]
  407740:	push   rax
  407741:	call   4076c0 <read_boolean_unary_expression@@Base+0xf0>
  407746:	vxorps xmm0,xmm0,xmm0
  40774a:	vmovaps XMMWORD PTR [rip+0x837e],xmm0        # 40fad0 <__bss_start@@Base+0x968>
  407752:	vmovaps XMMWORD PTR [rip+0x8386],xmm0        # 40fae0 <__bss_start@@Base+0x978>
  40775a:	vmovaps XMMWORD PTR [rip+0x838e],xmm0        # 40faf0 <__bss_start@@Base+0x988>
  407762:	vxorps xmm0,xmm0,xmm0
  407766:	vmovups YMMWORD PTR [rip+0x8392],ymm0        # 40fb00 <__bss_start@@Base+0x998>
  40776e:	vmovups YMMWORD PTR [rip+0x83aa],ymm0        # 40fb20 <__bss_start@@Base+0x9b8>
  407776:	vmovups YMMWORD PTR [rip+0x83c2],ymm0        # 40fb40 <__bss_start@@Base+0x9d8>
  40777e:	vmovups YMMWORD PTR [rip+0x83d2],ymm0        # 40fb58 <__bss_start@@Base+0x9f0>
  407786:	vmovups YMMWORD PTR [rip+0x83f2],ymm0        # 40fb80 <__bss_start@@Base+0xa18>
  40778e:	vmovups YMMWORD PTR [rip+0x840a],ymm0        # 40fba0 <__bss_start@@Base+0xa38>
  407796:	vmovups YMMWORD PTR [rip+0x8422],ymm0        # 40fbc0 <__bss_start@@Base+0xa58>
  40779e:	vmovups YMMWORD PTR [rip+0x843a],ymm0        # 40fbe0 <__bss_start@@Base+0xa78>
  4077a6:	vmovups YMMWORD PTR [rip+0x8452],ymm0        # 40fc00 <__bss_start@@Base+0xa98>
  4077ae:	vmovups YMMWORD PTR [rip+0x846a],ymm0        # 40fc20 <__bss_start@@Base+0xab8>
  4077b6:	vmovups YMMWORD PTR [rip+0x8482],ymm0        # 40fc40 <__bss_start@@Base+0xad8>
  4077be:	mov    QWORD PTR [rip+0x8497],0x0        # 40fc60 <__bss_start@@Base+0xaf8>
  4077c9:	vmovups YMMWORD PTR [rip+0x849f],ymm0        # 40fc70 <__bss_start@@Base+0xb08>
  4077d1:	vmovups YMMWORD PTR [rip+0x84b7],ymm0        # 40fc90 <__bss_start@@Base+0xb28>
  4077d9:	vmovups YMMWORD PTR [rip+0x84bf],ymm0        # 40fca0 <__bss_start@@Base+0xb38>
  4077e1:	vmovups YMMWORD PTR [rip+0x84d7],ymm0        # 40fcc0 <__bss_start@@Base+0xb58>
  4077e9:	vmovups YMMWORD PTR [rip+0x84ef],ymm0        # 40fce0 <__bss_start@@Base+0xb78>
  4077f1:	vmovups YMMWORD PTR [rip+0x8507],ymm0        # 40fd00 <__bss_start@@Base+0xb98>
  4077f9:	vmovups YMMWORD PTR [rip+0x854f],ymm0        # 40fd50 <__bss_start@@Base+0xbe8>
  407801:	vmovups YMMWORD PTR [rip+0x8527],ymm0        # 40fd30 <__bss_start@@Base+0xbc8>
  407809:	vmovups YMMWORD PTR [rip+0x85b7],ymm0        # 40fdc8 <__bss_start@@Base+0xc60>
  407811:	vmovups YMMWORD PTR [rip+0x8597],ymm0        # 40fdb0 <__bss_start@@Base+0xc48>
  407819:	vmovups YMMWORD PTR [rip+0x856f],ymm0        # 40fd90 <__bss_start@@Base+0xc28>
  407821:	vmovups YMMWORD PTR [rip+0x8547],ymm0        # 40fd70 <__bss_start@@Base+0xc08>
  407829:	mov    QWORD PTR [rip+0x84ec],0x0        # 40fd20 <__bss_start@@Base+0xbb8>
  407834:	vmovups YMMWORD PTR [rip+0x85d4],ymm0        # 40fe10 <__bss_start@@Base+0xca8>
  40783c:	vmovups YMMWORD PTR [rip+0x85ac],ymm0        # 40fdf0 <__bss_start@@Base+0xc88>
  407844:	mov    QWORD PTR [rip+0x85e1],0x0        # 40fe30 <__bss_start@@Base+0xcc8>
  40784f:	pop    rax
  407850:	vzeroupper 
  407853:	ret    
  407854:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40785e:	xchg   ax,ax
  407860:	lea    rdi,[rip+0xfffffffffffffe59]        # 4076c0 <read_boolean_unary_expression@@Base+0xf0>
  407867:	lea    rsi,[rip+0xfffffffffffffed2]        # 407740 <read_boolean_unary_expression@@Base+0x170>
  40786e:	jmp    409080 <__gcov_flush@@Base+0xb0>
  407873:	nop
  407874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40787e:	xchg   ax,ax
  407880:	push   rbp
  407881:	push   r15
  407883:	push   r14
  407885:	push   r13
  407887:	push   r12
  407889:	push   rbx
  40788a:	sub    rsp,0x18
  40788e:	mov    r14d,edx
  407891:	mov    r15,rsi
  407894:	mov    r12,rdi
  407897:	lea    rdi,[rsp+0xc]
  40789c:	lea    rsi,[rsp+0x10]
  4078a1:	call   4094b0 <__gcov_flush@@Base+0x4e0>
  4078a6:	test   rax,rax
  4078a9:	je     4078e3 <read_boolean_unary_expression@@Base+0x313>
  4078ab:	mov    rbx,rax
  4078ae:	mov    r13,QWORD PTR [rsp+0x10]
  4078b3:	mov    rdi,r12
  4078b6:	call   4030e0 <strlen@plt>
  4078bb:	lea    rdi,[rax+r13*1]
  4078bf:	add    rdi,0x2
  4078c3:	call   4031e0 <malloc@plt>
  4078c8:	mov    rbp,rax
  4078cb:	mov    r8d,DWORD PTR [rsp+0xc]
  4078d0:	mov    rdi,rax
  4078d3:	mov    rsi,r12
  4078d6:	mov    rdx,rbx
  4078d9:	mov    rcx,r13
  4078dc:	call   409540 <__gcov_flush@@Base+0x570>
  4078e1:	jmp    4078ee <read_boolean_unary_expression@@Base+0x31e>
  4078e3:	mov    rdi,r12
  4078e6:	call   403280 <strdup@plt>
  4078eb:	mov    rbp,rax
  4078ee:	mov    QWORD PTR [rip+0x8543],rbp        # 40fe38 <__bss_start@@Base+0xcd0>
  4078f5:	mov    BYTE PTR [rip+0x8544],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  4078fc:	mov    rdi,rbp
  4078ff:	mov    esi,0x2
  407904:	xor    eax,eax
  407906:	call   403240 <open@plt>
  40790b:	mov    DWORD PTR [rip+0x784f],eax        # 40f160 <__data_start@@Base+0x10>
  407911:	cmp    eax,0xffffffff
  407914:	je     40791f <read_boolean_unary_expression@@Base+0x34f>
  407916:	lea    rbx,[rip+0x33b6]        # 40acd3 <_IO_stdin_used@@Base+0xcd3>
  40791d:	jmp    407983 <read_boolean_unary_expression@@Base+0x3b3>
  40791f:	mov    BYTE PTR [rip+0x851a],0x1        # 40fe40 <__bss_start@@Base+0xcd8>
  407926:	mov    rdi,QWORD PTR [rip+0x850b]        # 40fe38 <__bss_start@@Base+0xcd0>
  40792d:	mov    esi,0x42
  407932:	mov    edx,0x1a4
  407937:	xor    eax,eax
  407939:	call   403240 <open@plt>
  40793e:	mov    DWORD PTR [rip+0x781c],eax        # 40f160 <__data_start@@Base+0x10>
  407944:	lea    rbx,[rip+0x338c]        # 40acd7 <_IO_stdin_used@@Base+0xcd7>
  40794b:	cmp    eax,0xffffffff
  40794e:	jne    407983 <read_boolean_unary_expression@@Base+0x3b3>
  407950:	mov    rdi,QWORD PTR [rip+0x84e1]        # 40fe38 <__bss_start@@Base+0xcd0>
  407957:	call   409170 <__gcov_flush@@Base+0x1a0>
  40795c:	mov    rdi,QWORD PTR [rip+0x84d5]        # 40fe38 <__bss_start@@Base+0xcd0>
  407963:	mov    esi,0x42
  407968:	mov    edx,0x1a4
  40796d:	xor    eax,eax
  40796f:	call   403240 <open@plt>
  407974:	mov    DWORD PTR [rip+0x77e6],eax        # 40f160 <__data_start@@Base+0x10>
  40797a:	cmp    eax,0xffffffff
  40797d:	je     407c68 <read_boolean_unary_expression@@Base+0x698>
  407983:	mov    edi,eax
  407985:	call   409220 <__gcov_flush@@Base+0x250>
  40798a:	mov    edi,DWORD PTR [rip+0x77d0]        # 40f160 <__data_start@@Base+0x10>
  407990:	mov    rsi,rbx
  407993:	call   403220 <fdopen@plt>
  407998:	mov    QWORD PTR [rip+0x84a9],rax        # 40fe48 <__bss_start@@Base+0xce0>
  40799f:	mov    QWORD PTR [rip+0x84a6],0x0        # 40fe50 <__bss_start@@Base+0xce8>
  4079aa:	mov    QWORD PTR [rip+0x84a3],0x0        # 40fe58 <__bss_start@@Base+0xcf0>
  4079b5:	mov    QWORD PTR [rip+0x84a0],0x0        # 40fe60 <__bss_start@@Base+0xcf8>
  4079c0:	mov    ebx,0x20000
  4079c5:	cmp    BYTE PTR [rip+0x8474],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  4079cc:	je     407a69 <read_boolean_unary_expression@@Base+0x499>
  4079d2:	mov    rdi,rbx
  4079d5:	call   4031e0 <malloc@plt>
  4079da:	mov    r12,rax
  4079dd:	mov    QWORD PTR [rip+0x846c],rax        # 40fe50 <__bss_start@@Base+0xce8>
  4079e4:	mov    QWORD PTR [rip+0x846d],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  4079eb:	mov    edx,0x20000
  4079f0:	mov    rdi,r12
  4079f3:	xor    esi,esi
  4079f5:	call   403160 <memset@plt>
  4079fa:	mov    rbx,QWORD PTR [rip+0x845f]        # 40fe60 <__bss_start@@Base+0xcf8>
  407a01:	lea    rax,[rbx+0x4]
  407a05:	cmp    rax,QWORD PTR [rip+0x844c]        # 40fe58 <__bss_start@@Base+0xcf0>
  407a0c:	jbe    407b07 <read_boolean_unary_expression@@Base+0x537>
  407a12:	add    rbx,0x20003
  407a19:	and    rbx,0xfffffffffffe0000
  407a20:	mov    rdi,r12
  407a23:	mov    rsi,rbx
  407a26:	call   403210 <realloc@plt>
  407a2b:	mov    r12,rax
  407a2e:	mov    QWORD PTR [rip+0x841b],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407a35:	mov    QWORD PTR [rip+0x841c],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  407a3c:	mov    al,BYTE PTR [rip+0x83fe]        # 40fe40 <__bss_start@@Base+0xcd8>
  407a42:	mov    rbp,QWORD PTR [rip+0x8417]        # 40fe60 <__bss_start@@Base+0xcf8>
  407a49:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407a51:	lea    rbx,[rbp+0x4]
  407a55:	mov    QWORD PTR [rip+0x8404],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407a5c:	cmp    al,0x1
  407a5e:	jne    407aed <read_boolean_unary_expression@@Base+0x51d>
  407a64:	jmp    407b21 <read_boolean_unary_expression@@Base+0x551>
  407a69:	mov    rdi,rax
  407a6c:	xor    esi,esi
  407a6e:	mov    edx,0x2
  407a73:	call   403200 <fseek@plt>
  407a78:	mov    rdi,QWORD PTR [rip+0x83c9]        # 40fe48 <__bss_start@@Base+0xce0>
  407a7f:	call   403190 <ftell@plt>
  407a84:	mov    QWORD PTR [rip+0x83f5],rax        # 40fe80 <__bss_start@@Base+0xd18>
  407a8b:	test   rax,rax
  407a8e:	je     407c20 <read_boolean_unary_expression@@Base+0x650>
  407a94:	mov    r8d,DWORD PTR [rip+0x76c5]        # 40f160 <__data_start@@Base+0x10>
  407a9b:	xor    edi,edi
  407a9d:	mov    rsi,rax
  407aa0:	mov    edx,0x3
  407aa5:	mov    ecx,0x1
  407aaa:	xor    r9d,r9d
  407aad:	call   4030f0 <mmap@plt>
  407ab2:	mov    QWORD PTR [rip+0x8397],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407ab9:	cmp    rax,0xffffffffffffffff
  407abd:	je     407bec <read_boolean_unary_expression@@Base+0x61c>
  407ac3:	mov    r12,rax
  407ac6:	cmp    BYTE PTR [rip+0x8373],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  407acd:	jne    4079fa <read_boolean_unary_expression@@Base+0x42a>
  407ad3:	mov    rbx,QWORD PTR [rip+0x8386]        # 40fe60 <__bss_start@@Base+0xcf8>
  407ada:	mov    DWORD PTR [r12+rbx*1],0x67636461
  407ae2:	add    rbx,0x4
  407ae6:	mov    QWORD PTR [rip+0x8373],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407aed:	mov    eax,DWORD PTR [r15]
  407af0:	mov    DWORD PTR [r12+rbx*1],eax
  407af4:	add    rbx,0x4
  407af8:	mov    QWORD PTR [rip+0x8361],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407aff:	mov    rax,rbx
  407b02:	jmp    407bce <read_boolean_unary_expression@@Base+0x5fe>
  407b07:	mov    rbp,QWORD PTR [rip+0x8352]        # 40fe60 <__bss_start@@Base+0xcf8>
  407b0e:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407b16:	lea    rbx,[rbp+0x4]
  407b1a:	mov    QWORD PTR [rip+0x833f],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407b21:	lea    rax,[rbp+0x8]
  407b25:	cmp    rax,QWORD PTR [rip+0x832c]        # 40fe58 <__bss_start@@Base+0xcf0>
  407b2c:	jbe    407b7e <read_boolean_unary_expression@@Base+0x5ae>
  407b2e:	add    rbp,0x20007
  407b35:	and    rbp,0xfffffffffffe0000
  407b3c:	mov    rdi,r12
  407b3f:	mov    rsi,rbp
  407b42:	call   403210 <realloc@plt>
  407b47:	mov    r12,rax
  407b4a:	mov    QWORD PTR [rip+0x82ff],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407b51:	mov    QWORD PTR [rip+0x8300],rbp        # 40fe58 <__bss_start@@Base+0xcf0>
  407b58:	mov    rbx,QWORD PTR [rip+0x8301]        # 40fe60 <__bss_start@@Base+0xcf8>
  407b5f:	mov    cl,BYTE PTR [rip+0x82db]        # 40fe40 <__bss_start@@Base+0xcd8>
  407b65:	mov    eax,DWORD PTR [r15]
  407b68:	mov    DWORD PTR [r12+rbx*1],eax
  407b6c:	lea    rax,[rbx+0x4]
  407b70:	mov    QWORD PTR [rip+0x82e9],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  407b77:	cmp    cl,0x1
  407b7a:	je     407b90 <read_boolean_unary_expression@@Base+0x5c0>
  407b7c:	jmp    407bce <read_boolean_unary_expression@@Base+0x5fe>
  407b7e:	mov    eax,DWORD PTR [r15]
  407b81:	mov    DWORD PTR [r12+rbx*1],eax
  407b85:	lea    rax,[rbx+0x4]
  407b89:	mov    QWORD PTR [rip+0x82d0],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  407b90:	lea    rcx,[rbx+0x8]
  407b94:	cmp    rcx,QWORD PTR [rip+0x82bd]        # 40fe58 <__bss_start@@Base+0xcf0>
  407b9b:	jbe    407bce <read_boolean_unary_expression@@Base+0x5fe>
  407b9d:	add    rbx,0x20007
  407ba4:	and    rbx,0xfffffffffffe0000
  407bab:	mov    rdi,r12
  407bae:	mov    rsi,rbx
  407bb1:	call   403210 <realloc@plt>
  407bb6:	mov    r12,rax
  407bb9:	mov    QWORD PTR [rip+0x8290],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407bc0:	mov    QWORD PTR [rip+0x8291],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  407bc7:	mov    rax,QWORD PTR [rip+0x8292]        # 40fe60 <__bss_start@@Base+0xcf8>
  407bce:	mov    DWORD PTR [r12+rax*1],r14d
  407bd2:	add    rax,0x4
  407bd6:	mov    QWORD PTR [rip+0x8283],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  407bdd:	add    rsp,0x18
  407be1:	pop    rbx
  407be2:	pop    r12
  407be4:	pop    r13
  407be6:	pop    r14
  407be8:	pop    r15
  407bea:	pop    rbp
  407beb:	ret    
  407bec:	call   403050 <__errno_location@plt>
  407bf1:	mov    edi,DWORD PTR [rax]
  407bf3:	mov    rax,QWORD PTR [rip+0x73fe]        # 40eff8 <stderr@GLIBC_2.2.5>
  407bfa:	mov    rbx,QWORD PTR [rax]
  407bfd:	mov    rbp,QWORD PTR [rip+0x8234]        # 40fe38 <__bss_start@@Base+0xcd0>
  407c04:	call   403290 <strerror@plt>
  407c09:	lea    rsi,[rip+0x3225]        # 40ae35 <_IO_stdin_used@@Base+0xe35>
  407c10:	mov    rdi,rbx
  407c13:	mov    rdx,rbp
  407c16:	mov    rcx,rax
  407c19:	xor    eax,eax
  407c1b:	call   403180 <fprintf@plt>
  407c20:	mov    BYTE PTR [rip+0x8219],0x1        # 40fe40 <__bss_start@@Base+0xcd8>
  407c27:	mov    QWORD PTR [rip+0x821e],0x0        # 40fe50 <__bss_start@@Base+0xce8>
  407c32:	mov    QWORD PTR [rip+0x821b],0x0        # 40fe58 <__bss_start@@Base+0xcf0>
  407c3d:	mov    rbx,QWORD PTR [rip+0x821c]        # 40fe60 <__bss_start@@Base+0xcf8>
  407c44:	cmp    rbx,0xfffffffffffe0000
  407c4b:	jne    407c55 <read_boolean_unary_expression@@Base+0x685>
  407c4d:	xor    r12d,r12d
  407c50:	jmp    4079eb <read_boolean_unary_expression@@Base+0x41b>
  407c55:	add    rbx,0x3ffff
  407c5c:	and    rbx,0xfffffffffffe0000
  407c63:	jmp    4079d2 <read_boolean_unary_expression@@Base+0x402>
  407c68:	call   403050 <__errno_location@plt>
  407c6d:	mov    edi,DWORD PTR [rax]
  407c6f:	mov    rax,QWORD PTR [rip+0x7382]        # 40eff8 <stderr@GLIBC_2.2.5>
  407c76:	mov    rbx,QWORD PTR [rax]
  407c79:	mov    rbp,QWORD PTR [rip+0x81b8]        # 40fe38 <__bss_start@@Base+0xcd0>
  407c80:	call   403290 <strerror@plt>
  407c85:	lea    rsi,[rip+0x304f]        # 40acdb <_IO_stdin_used@@Base+0xcdb>
  407c8c:	mov    rdi,rbx
  407c8f:	mov    rdx,rbp
  407c92:	mov    rcx,rax
  407c95:	xor    eax,eax
  407c97:	call   403180 <fprintf@plt>
  407c9c:	jmp    407bdd <read_boolean_unary_expression@@Base+0x60d>
  407ca1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cab:	nop    DWORD PTR [rax+rax*1+0x0]
  407cb0:	mov    eax,DWORD PTR [rdi]
  407cb2:	mov    ecx,0xffffffff
  407cb7:	cmp    rax,rcx
  407cba:	je     407cc9 <read_boolean_unary_expression@@Base+0x6f9>
  407cbc:	mov    rax,QWORD PTR [rsi+rax*8]
  407cc0:	test   rax,rax
  407cc3:	je     407cc9 <read_boolean_unary_expression@@Base+0x6f9>
  407cc5:	add    QWORD PTR [rax],0x1
  407cc9:	ret    
  407cca:	nop    WORD PTR [rax+rax*1+0x0]
  407cd0:	push   rbp
  407cd1:	push   r15
  407cd3:	push   r14
  407cd5:	push   r13
  407cd7:	push   r12
  407cd9:	push   rbx
  407cda:	sub    rsp,0x18
  407cde:	mov    r15d,ecx
  407ce1:	xor    r14d,r14d
  407ce4:	test   r15b,r15b
  407ce7:	setne  al
  407cea:	cmp    QWORD PTR [rip+0x8156],0x0        # 40fe48 <__bss_start@@Base+0xce0>
  407cf2:	je     408013 <read_boolean_unary_expression@@Base+0xa43>
  407cf8:	mov    DWORD PTR [rsp+0x4],edi
  407cfc:	mov    DWORD PTR [rsp+0x14],edx
  407d00:	mov    DWORD PTR [rsp],r8d
  407d04:	mov    QWORD PTR [rsp+0x8],rsi
  407d09:	mov    r14b,al
  407d0c:	cmp    BYTE PTR [rip+0x812d],0x1        # 40fe40 <__bss_start@@Base+0xcd8>
  407d13:	jne    407d54 <read_boolean_unary_expression@@Base+0x784>
  407d15:	mov    rbx,QWORD PTR [rip+0x8144]        # 40fe60 <__bss_start@@Base+0xcf8>
  407d1c:	lea    rax,[rbx+0x4]
  407d20:	cmp    rax,QWORD PTR [rip+0x8131]        # 40fe58 <__bss_start@@Base+0xcf0>
  407d27:	jbe    407d54 <read_boolean_unary_expression@@Base+0x784>
  407d29:	add    rbx,0x20003
  407d30:	and    rbx,0xfffffffffffe0000
  407d37:	mov    rdi,QWORD PTR [rip+0x8112]        # 40fe50 <__bss_start@@Base+0xce8>
  407d3e:	mov    rsi,rbx
  407d41:	call   403210 <realloc@plt>
  407d46:	mov    QWORD PTR [rip+0x8103],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407d4d:	mov    QWORD PTR [rip+0x8104],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  407d54:	or     r14d,0x2
  407d58:	mov    r12,QWORD PTR [rip+0x80f1]        # 40fe50 <__bss_start@@Base+0xce8>
  407d5f:	mov    rbp,QWORD PTR [rip+0x80fa]        # 40fe60 <__bss_start@@Base+0xcf8>
  407d66:	mov    DWORD PTR [r12+rbp*1],0x1000000
  407d6e:	lea    r13,[rbp+0x4]
  407d72:	mov    QWORD PTR [rip+0x80e7],r13        # 40fe60 <__bss_start@@Base+0xcf8>
  407d79:	mov    rdi,QWORD PTR [rsp+0x8]
  407d7e:	test   rdi,rdi
  407d81:	je     407d94 <read_boolean_unary_expression@@Base+0x7c4>
  407d83:	call   4030e0 <strlen@plt>
  407d88:	shr    rax,0x2
  407d8c:	lea    r14d,[r14+rax*1]
  407d90:	add    r14d,0x2
  407d94:	cmp    BYTE PTR [rip+0x80a5],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  407d9b:	je     407dfd <read_boolean_unary_expression@@Base+0x82d>
  407d9d:	lea    rbx,[rbp+0x8]
  407da1:	cmp    rbx,QWORD PTR [rip+0x80b0]        # 40fe58 <__bss_start@@Base+0xcf0>
  407da8:	jbe    408022 <read_boolean_unary_expression@@Base+0xa52>
  407dae:	add    rbp,0x20007
  407db5:	and    rbp,0xfffffffffffe0000
  407dbc:	mov    rdi,r12
  407dbf:	mov    rsi,rbp
  407dc2:	call   403210 <realloc@plt>
  407dc7:	mov    r12,rax
  407dca:	mov    QWORD PTR [rip+0x807f],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407dd1:	mov    QWORD PTR [rip+0x8080],rbp        # 40fe58 <__bss_start@@Base+0xcf0>
  407dd8:	mov    r13,QWORD PTR [rip+0x8081]        # 40fe60 <__bss_start@@Base+0xcf8>
  407ddf:	mov    al,BYTE PTR [rip+0x805b]        # 40fe40 <__bss_start@@Base+0xcd8>
  407de5:	mov    DWORD PTR [r12+r13*1],r14d
  407de9:	lea    rbx,[r13+0x4]
  407ded:	mov    QWORD PTR [rip+0x806c],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407df4:	cmp    al,0x1
  407df6:	jne    407e10 <read_boolean_unary_expression@@Base+0x840>
  407df8:	jmp    40802e <read_boolean_unary_expression@@Base+0xa5e>
  407dfd:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  407e02:	add    rbp,0x8
  407e06:	mov    QWORD PTR [rip+0x8053],rbp        # 40fe60 <__bss_start@@Base+0xcf8>
  407e0d:	mov    rbx,rbp
  407e10:	mov    eax,DWORD PTR [rsp+0x4]
  407e14:	mov    DWORD PTR [r12+rbx*1],eax
  407e18:	add    rbx,0x4
  407e1c:	mov    QWORD PTR [rip+0x803d],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407e23:	mov    r13,rbx
  407e26:	lea    rbp,[r13+0x4]
  407e2a:	mov    eax,DWORD PTR [rsp+0x14]
  407e2e:	mov    DWORD PTR [r12+r13*1],eax
  407e32:	mov    QWORD PTR [rip+0x8027],rbp        # 40fe60 <__bss_start@@Base+0xcf8>
  407e39:	test   r15b,r15b
  407e3c:	je     407ea6 <read_boolean_unary_expression@@Base+0x8d6>
  407e3e:	cmp    BYTE PTR [rip+0x7ffb],0x1        # 40fe40 <__bss_start@@Base+0xcd8>
  407e45:	jne    407e85 <read_boolean_unary_expression@@Base+0x8b5>
  407e47:	lea    rax,[r13+0x8]
  407e4b:	cmp    rax,QWORD PTR [rip+0x8006]        # 40fe58 <__bss_start@@Base+0xcf0>
  407e52:	jbe    407e85 <read_boolean_unary_expression@@Base+0x8b5>
  407e54:	add    r13,0x20007
  407e5b:	and    r13,0xfffffffffffe0000
  407e62:	mov    rdi,r12
  407e65:	mov    rsi,r13
  407e68:	call   403210 <realloc@plt>
  407e6d:	mov    r12,rax
  407e70:	mov    QWORD PTR [rip+0x7fd9],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407e77:	mov    QWORD PTR [rip+0x7fda],r13        # 40fe58 <__bss_start@@Base+0xcf0>
  407e7e:	mov    rbp,QWORD PTR [rip+0x7fdb]        # 40fe60 <__bss_start@@Base+0xcf8>
  407e85:	mov    r13,QWORD PTR [rsp+0x8]
  407e8a:	mov    eax,DWORD PTR [rsp]
  407e8d:	mov    DWORD PTR [r12+rbp*1],eax
  407e91:	add    rbp,0x4
  407e95:	mov    QWORD PTR [rip+0x7fc4],rbp        # 40fe60 <__bss_start@@Base+0xcf8>
  407e9c:	test   r13,r13
  407e9f:	jne    407eb4 <read_boolean_unary_expression@@Base+0x8e4>
  407ea1:	jmp    408013 <read_boolean_unary_expression@@Base+0xa43>
  407ea6:	mov    r13,QWORD PTR [rsp+0x8]
  407eab:	test   r13,r13
  407eae:	je     408013 <read_boolean_unary_expression@@Base+0xa43>
  407eb4:	mov    rdi,r13
  407eb7:	call   4030e0 <strlen@plt>
  407ebc:	mov    rbx,rax
  407ebf:	shr    rbx,0x2
  407ec3:	add    ebx,0x1
  407ec6:	cmp    BYTE PTR [rip+0x7f73],0x1        # 40fe40 <__bss_start@@Base+0xcd8>
  407ecd:	jne    407f19 <read_boolean_unary_expression@@Base+0x949>
  407ecf:	lea    rax,[rbp+0x4]
  407ed3:	mov    r14b,0x1
  407ed6:	cmp    rax,QWORD PTR [rip+0x7f7b]        # 40fe58 <__bss_start@@Base+0xcf0>
  407edd:	jbe    407f1c <read_boolean_unary_expression@@Base+0x94c>
  407edf:	add    rbp,0x20003
  407ee6:	and    rbp,0xfffffffffffe0000
  407eed:	mov    rdi,r12
  407ef0:	mov    rsi,rbp
  407ef3:	call   403210 <realloc@plt>
  407ef8:	mov    r12,rax
  407efb:	mov    QWORD PTR [rip+0x7f4e],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407f02:	mov    QWORD PTR [rip+0x7f4f],rbp        # 40fe58 <__bss_start@@Base+0xcf0>
  407f09:	mov    r14b,BYTE PTR [rip+0x7f30]        # 40fe40 <__bss_start@@Base+0xcd8>
  407f10:	mov    rbp,QWORD PTR [rip+0x7f49]        # 40fe60 <__bss_start@@Base+0xcf8>
  407f17:	jmp    407f1c <read_boolean_unary_expression@@Base+0x94c>
  407f19:	xor    r14d,r14d
  407f1c:	mov    DWORD PTR [r12+rbp*1],ebx
  407f20:	add    rbp,0x4
  407f24:	mov    QWORD PTR [rip+0x7f35],rbp        # 40fe60 <__bss_start@@Base+0xcf8>
  407f2b:	mov    rdi,r13
  407f2e:	call   4030e0 <strlen@plt>
  407f33:	mov    rbx,rax
  407f36:	test   r14b,0x1
  407f3a:	je     407f86 <read_boolean_unary_expression@@Base+0x9b6>
  407f3c:	lea    r15,[rbx+rbp*1]
  407f40:	mov    r14b,0x1
  407f43:	cmp    r15,QWORD PTR [rip+0x7f0e]        # 40fe58 <__bss_start@@Base+0xcf0>
  407f4a:	jbe    407f89 <read_boolean_unary_expression@@Base+0x9b9>
  407f4c:	add    r15,0x1ffff
  407f53:	and    r15,0xfffffffffffe0000
  407f5a:	mov    rdi,r12
  407f5d:	mov    rsi,r15
  407f60:	call   403210 <realloc@plt>
  407f65:	mov    r12,rax
  407f68:	mov    QWORD PTR [rip+0x7ee1],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407f6f:	mov    QWORD PTR [rip+0x7ee2],r15        # 40fe58 <__bss_start@@Base+0xcf0>
  407f76:	mov    rbp,QWORD PTR [rip+0x7ee3]        # 40fe60 <__bss_start@@Base+0xcf8>
  407f7d:	mov    r14b,BYTE PTR [rip+0x7ebc]        # 40fe40 <__bss_start@@Base+0xcd8>
  407f84:	jmp    407f89 <read_boolean_unary_expression@@Base+0x9b9>
  407f86:	xor    r14d,r14d
  407f89:	lea    rdi,[r12+rbp*1]
  407f8d:	mov    rsi,r13
  407f90:	mov    rdx,rbx
  407f93:	call   4031b0 <memcpy@plt>
  407f98:	add    rbx,rbp
  407f9b:	mov    QWORD PTR [rip+0x7ebe],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  407fa2:	mov    rdi,r13
  407fa5:	call   4030e0 <strlen@plt>
  407faa:	and    eax,0x3
  407fad:	mov    ebp,0x4
  407fb2:	sub    rbp,rax
  407fb5:	test   r14b,0x1
  407fb9:	je     407ff9 <read_boolean_unary_expression@@Base+0xa29>
  407fbb:	lea    r14,[rbx+rbp*1]
  407fbf:	cmp    r14,QWORD PTR [rip+0x7e92]        # 40fe58 <__bss_start@@Base+0xcf0>
  407fc6:	jbe    407ff9 <read_boolean_unary_expression@@Base+0xa29>
  407fc8:	add    r14,0x1ffff
  407fcf:	and    r14,0xfffffffffffe0000
  407fd6:	mov    rdi,r12
  407fd9:	mov    rsi,r14
  407fdc:	call   403210 <realloc@plt>
  407fe1:	mov    r12,rax
  407fe4:	mov    QWORD PTR [rip+0x7e65],rax        # 40fe50 <__bss_start@@Base+0xce8>
  407feb:	mov    QWORD PTR [rip+0x7e66],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  407ff2:	mov    rbx,QWORD PTR [rip+0x7e67]        # 40fe60 <__bss_start@@Base+0xcf8>
  407ff9:	add    r12,rbx
  407ffc:	mov    rdi,r12
  407fff:	xor    esi,esi
  408001:	mov    rdx,rbp
  408004:	call   403160 <memset@plt>
  408009:	add    rbx,rbp
  40800c:	mov    QWORD PTR [rip+0x7e4d],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408013:	add    rsp,0x18
  408017:	pop    rbx
  408018:	pop    r12
  40801a:	pop    r13
  40801c:	pop    r14
  40801e:	pop    r15
  408020:	pop    rbp
  408021:	ret    
  408022:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  408027:	mov    QWORD PTR [rip+0x7e32],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  40802e:	lea    rax,[r13+0x8]
  408032:	cmp    rax,QWORD PTR [rip+0x7e1f]        # 40fe58 <__bss_start@@Base+0xcf0>
  408039:	jbe    40808f <read_boolean_unary_expression@@Base+0xabf>
  40803b:	add    r13,0x20007
  408042:	and    r13,0xfffffffffffe0000
  408049:	mov    rdi,r12
  40804c:	mov    rsi,r13
  40804f:	call   403210 <realloc@plt>
  408054:	mov    r12,rax
  408057:	mov    QWORD PTR [rip+0x7df2],rax        # 40fe50 <__bss_start@@Base+0xce8>
  40805e:	mov    QWORD PTR [rip+0x7df3],r13        # 40fe58 <__bss_start@@Base+0xcf0>
  408065:	mov    rbx,QWORD PTR [rip+0x7df4]        # 40fe60 <__bss_start@@Base+0xcf8>
  40806c:	mov    al,BYTE PTR [rip+0x7dce]        # 40fe40 <__bss_start@@Base+0xcd8>
  408072:	mov    ecx,DWORD PTR [rsp+0x4]
  408076:	mov    DWORD PTR [r12+rbx*1],ecx
  40807a:	lea    r13,[rbx+0x4]
  40807e:	mov    QWORD PTR [rip+0x7ddb],r13        # 40fe60 <__bss_start@@Base+0xcf8>
  408085:	cmp    al,0x1
  408087:	jne    407e26 <read_boolean_unary_expression@@Base+0x856>
  40808d:	jmp    4080a2 <read_boolean_unary_expression@@Base+0xad2>
  40808f:	mov    eax,DWORD PTR [rsp+0x4]
  408093:	mov    DWORD PTR [r12+rbx*1],eax
  408097:	lea    r13,[rbx+0x4]
  40809b:	mov    QWORD PTR [rip+0x7dbe],r13        # 40fe60 <__bss_start@@Base+0xcf8>
  4080a2:	lea    rax,[rbx+0x8]
  4080a6:	cmp    rax,QWORD PTR [rip+0x7dab]        # 40fe58 <__bss_start@@Base+0xcf0>
  4080ad:	jbe    407e26 <read_boolean_unary_expression@@Base+0x856>
  4080b3:	add    rbx,0x20007
  4080ba:	and    rbx,0xfffffffffffe0000
  4080c1:	mov    rdi,r12
  4080c4:	mov    rsi,rbx
  4080c7:	call   403210 <realloc@plt>
  4080cc:	mov    r12,rax
  4080cf:	mov    QWORD PTR [rip+0x7d7a],rax        # 40fe50 <__bss_start@@Base+0xce8>
  4080d6:	mov    QWORD PTR [rip+0x7d7b],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  4080dd:	mov    r13,QWORD PTR [rip+0x7d7c]        # 40fe60 <__bss_start@@Base+0xcf8>
  4080e4:	jmp    407e26 <read_boolean_unary_expression@@Base+0x856>
  4080e9:	nop    DWORD PTR [rax+0x0]
  4080f0:	push   rbp
  4080f1:	push   r15
  4080f3:	push   r14
  4080f5:	push   r13
  4080f7:	push   r12
  4080f9:	push   rbx
  4080fa:	sub    rsp,0x18
  4080fe:	cmp    QWORD PTR [rip+0x7d42],0x0        # 40fe48 <__bss_start@@Base+0xce0>
  408106:	je     4081aa <read_boolean_unary_expression@@Base+0xbda>
  40810c:	mov    r13d,edi
  40810f:	mov    r14,QWORD PTR [rip+0x7d4a]        # 40fe60 <__bss_start@@Base+0xcf8>
  408116:	cmp    BYTE PTR [rip+0x7d23],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  40811d:	mov    QWORD PTR [rsp+0x8],rsi
  408122:	je     4081b9 <read_boolean_unary_expression@@Base+0xbe9>
  408128:	lea    rbx,[r14+0x4]
  40812c:	cmp    rbx,QWORD PTR [rip+0x7d25]        # 40fe58 <__bss_start@@Base+0xcf0>
  408133:	jbe    408241 <read_boolean_unary_expression@@Base+0xc71>
  408139:	add    r14,0x20003
  408140:	and    r14,0xfffffffffffe0000
  408147:	mov    rdi,QWORD PTR [rip+0x7d02]        # 40fe50 <__bss_start@@Base+0xce8>
  40814e:	mov    rsi,r14
  408151:	call   403210 <realloc@plt>
  408156:	mov    rsi,QWORD PTR [rsp+0x8]
  40815b:	mov    r15,rax
  40815e:	mov    QWORD PTR [rip+0x7ceb],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408165:	mov    QWORD PTR [rip+0x7cec],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  40816c:	mov    r14,QWORD PTR [rip+0x7ced]        # 40fe60 <__bss_start@@Base+0xcf8>
  408173:	mov    al,BYTE PTR [rip+0x7cc7]        # 40fe40 <__bss_start@@Base+0xcd8>
  408179:	lea    rbx,[r14+0x4]
  40817d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  408185:	mov    QWORD PTR [rip+0x7cd4],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  40818c:	lea    ebp,[r13+r13*1+0x0]
  408191:	xor    ecx,ecx
  408193:	mov    QWORD PTR [rsp],rcx
  408197:	mov    r12d,0x0
  40819d:	cmp    al,0x1
  40819f:	je     40825c <read_boolean_unary_expression@@Base+0xc8c>
  4081a5:	jmp    40838f <read_boolean_unary_expression@@Base+0xdbf>
  4081aa:	add    rsp,0x18
  4081ae:	pop    rbx
  4081af:	pop    r12
  4081b1:	pop    r13
  4081b3:	pop    r14
  4081b5:	pop    r15
  4081b7:	pop    rbp
  4081b8:	ret    
  4081b9:	mov    r15,QWORD PTR [rip+0x7c90]        # 40fe50 <__bss_start@@Base+0xce8>
  4081c0:	mov    ecx,DWORD PTR [r15+r14*1]
  4081c4:	lea    rbx,[r14+0x4]
  4081c8:	mov    QWORD PTR [rip+0x7c91],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  4081cf:	cmp    ecx,0xffffffff
  4081d2:	je     4082b5 <read_boolean_unary_expression@@Base+0xce5>
  4081d8:	cmp    ecx,0x1a10000
  4081de:	jne    4082c3 <read_boolean_unary_expression@@Base+0xcf3>
  4081e4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  4081e9:	lea    rbp,[r14+0x8]
  4081ed:	mov    QWORD PTR [rip+0x7c6c],rbp        # 40fe60 <__bss_start@@Base+0xcf8>
  4081f4:	cmp    ecx,0xffffffff
  4081f7:	je     4082dd <read_boolean_unary_expression@@Base+0xd0d>
  4081fd:	mov    eax,ecx
  4081ff:	shr    eax,1
  408201:	cmp    eax,r13d
  408204:	jne    4082dd <read_boolean_unary_expression@@Base+0xd0d>
  40820a:	mov    r12d,r13d
  40820d:	lea    rdi,[r12*8+0x0]
  408215:	call   4031e0 <malloc@plt>
  40821a:	test   r13d,r13d
  40821d:	mov    rcx,rax
  408220:	mov    QWORD PTR [rsp],rax
  408224:	je     40830a <read_boolean_unary_expression@@Base+0xd3a>
  40822a:	mov    eax,r12d
  40822d:	and    eax,0x1
  408230:	cmp    r13d,0x1
  408234:	jne    408314 <read_boolean_unary_expression@@Base+0xd44>
  40823a:	xor    ecx,ecx
  40823c:	jmp    408353 <read_boolean_unary_expression@@Base+0xd83>
  408241:	mov    r15,QWORD PTR [rip+0x7c08]        # 40fe50 <__bss_start@@Base+0xce8>
  408248:	mov    DWORD PTR [r15+r14*1],0x1a10000
  408250:	mov    QWORD PTR [rip+0x7c09],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408257:	lea    ebp,[r13+r13*1+0x0]
  40825c:	lea    rax,[r14+0x8]
  408260:	cmp    rax,QWORD PTR [rip+0x7bf1]        # 40fe58 <__bss_start@@Base+0xcf0>
  408267:	jbe    4082a7 <read_boolean_unary_expression@@Base+0xcd7>
  408269:	add    r14,0x20007
  408270:	and    r14,0xfffffffffffe0000
  408277:	mov    rdi,r15
  40827a:	mov    rsi,r14
  40827d:	call   403210 <realloc@plt>
  408282:	mov    rsi,QWORD PTR [rsp+0x8]
  408287:	mov    r15,rax
  40828a:	mov    QWORD PTR [rip+0x7bbf],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408291:	mov    QWORD PTR [rip+0x7bc0],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  408298:	xor    eax,eax
  40829a:	mov    QWORD PTR [rsp],rax
  40829e:	mov    rbx,QWORD PTR [rip+0x7bbb]        # 40fe60 <__bss_start@@Base+0xcf8>
  4082a5:	jmp    4082ad <read_boolean_unary_expression@@Base+0xcdd>
  4082a7:	xor    eax,eax
  4082a9:	mov    QWORD PTR [rsp],rax
  4082ad:	xor    r12d,r12d
  4082b0:	jmp    40838f <read_boolean_unary_expression@@Base+0xdbf>
  4082b5:	xor    r12d,r12d
  4082b8:	xor    eax,eax
  4082ba:	mov    QWORD PTR [rsp],rax
  4082be:	jmp    408374 <read_boolean_unary_expression@@Base+0xda4>
  4082c3:	mov    rax,QWORD PTR [rip+0x6d2e]        # 40eff8 <stderr@GLIBC_2.2.5>
  4082ca:	mov    rdi,QWORD PTR [rax]
  4082cd:	mov    rdx,QWORD PTR [rip+0x7b64]        # 40fe38 <__bss_start@@Base+0xcd0>
  4082d4:	lea    rsi,[rip+0x2a20]        # 40acfb <_IO_stdin_used@@Base+0xcfb>
  4082db:	jmp    4082f5 <read_boolean_unary_expression@@Base+0xd25>
  4082dd:	mov    rax,QWORD PTR [rip+0x6d14]        # 40eff8 <stderr@GLIBC_2.2.5>
  4082e4:	mov    rdi,QWORD PTR [rax]
  4082e7:	mov    rdx,QWORD PTR [rip+0x7b4a]        # 40fe38 <__bss_start@@Base+0xcd0>
  4082ee:	lea    rsi,[rip+0x2a50]        # 40ad45 <_IO_stdin_used@@Base+0xd45>
  4082f5:	xor    eax,eax
  4082f7:	add    rsp,0x18
  4082fb:	pop    rbx
  4082fc:	pop    r12
  4082fe:	pop    r13
  408300:	pop    r14
  408302:	pop    r15
  408304:	pop    rbp
  408305:	jmp    403180 <fprintf@plt>
  40830a:	mov    r12,rax
  40830d:	mov    rsi,QWORD PTR [rsp+0x8]
  408312:	jmp    408374 <read_boolean_unary_expression@@Base+0xda4>
  408314:	mov    rbp,0xfffffffffffffff8
  40831b:	sub    rbp,r14
  40831e:	lea    rdx,[r14+r15*1]
  408322:	add    rdx,0x14
  408326:	sub    r12,rax
  408329:	xor    ecx,ecx
  40832b:	mov    rdi,QWORD PTR [rsp]
  40832f:	nop
  408330:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  408335:	mov    QWORD PTR [rdi+rcx*8],rsi
  408339:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40833e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  408343:	add    rcx,0x2
  408347:	add    rbp,0xfffffffffffffff0
  40834b:	cmp    r12,rcx
  40834e:	jne    408330 <read_boolean_unary_expression@@Base+0xd60>
  408350:	neg    rbp
  408353:	mov    rsi,QWORD PTR [rsp+0x8]
  408358:	test   rax,rax
  40835b:	mov    r12,QWORD PTR [rsp]
  40835f:	je     40836d <read_boolean_unary_expression@@Base+0xd9d>
  408361:	mov    rax,QWORD PTR [r15+rbp*1]
  408365:	mov    QWORD PTR [r12+rcx*8],rax
  408369:	add    rbp,0x8
  40836d:	mov    QWORD PTR [rip+0x7aec],rbp        # 40fe60 <__bss_start@@Base+0xcf8>
  408374:	mov    QWORD PTR [rip+0x7ae5],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40837b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  408383:	mov    QWORD PTR [rip+0x7ad6],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  40838a:	lea    ebp,[r13+r13*1+0x0]
  40838f:	mov    DWORD PTR [r15+rbx*1],ebp
  408393:	add    rbx,0x4
  408397:	mov    QWORD PTR [rip+0x7ac2],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  40839e:	test   r13d,r13d
  4083a1:	je     4084e8 <read_boolean_unary_expression@@Base+0xf18>
  4083a7:	mov    edi,r13d
  4083aa:	xor    ebp,ebp
  4083ac:	mov    QWORD PTR [rsp+0x10],rdi
  4083b1:	test   r12,r12
  4083b4:	jne    4083f6 <read_boolean_unary_expression@@Base+0xe26>
  4083b6:	jmp    408400 <read_boolean_unary_expression@@Base+0xe30>
  4083b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4083c0:	mov    DWORD PTR [r15+rbx*1],r14d
  4083c4:	add    rbx,0x4
  4083c8:	mov    QWORD PTR [rip+0x7a91],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  4083cf:	mov    rax,rbx
  4083d2:	mov    DWORD PTR [r15+rax*1],r13d
  4083d6:	add    rax,0x4
  4083da:	mov    QWORD PTR [rip+0x7a7f],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  4083e1:	add    rbp,0x1
  4083e5:	mov    rbx,rax
  4083e8:	cmp    rdi,rbp
  4083eb:	je     4084e8 <read_boolean_unary_expression@@Base+0xf18>
  4083f1:	test   r12,r12
  4083f4:	je     408400 <read_boolean_unary_expression@@Base+0xe30>
  4083f6:	mov    r14,QWORD PTR [r12+rbp*8]
  4083fa:	jmp    408403 <read_boolean_unary_expression@@Base+0xe33>
  4083fc:	nop    DWORD PTR [rax+0x0]
  408400:	xor    r14d,r14d
  408403:	add    r14,QWORD PTR [rsi+rbp*8]
  408407:	mov    QWORD PTR [rsi+rbp*8],r14
  40840b:	mov    r13,r14
  40840e:	shr    r13,0x20
  408412:	cmp    BYTE PTR [rip+0x7a27],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  408419:	je     4083c0 <read_boolean_unary_expression@@Base+0xdf0>
  40841b:	lea    rax,[rbx+0x4]
  40841f:	mov    rcx,QWORD PTR [rip+0x7a32]        # 40fe58 <__bss_start@@Base+0xcf0>
  408426:	cmp    rax,rcx
  408429:	jbe    408490 <read_boolean_unary_expression@@Base+0xec0>
  40842b:	add    rbx,0x20003
  408432:	and    rbx,0xfffffffffffe0000
  408439:	mov    rdi,r15
  40843c:	mov    rsi,rbx
  40843f:	call   403210 <realloc@plt>
  408444:	mov    rdi,QWORD PTR [rsp+0x10]
  408449:	mov    rsi,QWORD PTR [rsp+0x8]
  40844e:	mov    r15,rax
  408451:	mov    QWORD PTR [rip+0x79f8],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408458:	mov    QWORD PTR [rip+0x79f9],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  40845f:	mov    dl,BYTE PTR [rip+0x79db]        # 40fe40 <__bss_start@@Base+0xcd8>
  408465:	mov    rcx,rbx
  408468:	mov    rbx,QWORD PTR [rip+0x79f1]        # 40fe60 <__bss_start@@Base+0xcf8>
  40846f:	mov    DWORD PTR [rax+rbx*1],r14d
  408473:	lea    rax,[rbx+0x4]
  408477:	mov    QWORD PTR [rip+0x79e2],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  40847e:	cmp    dl,0x1
  408481:	jne    4083d2 <read_boolean_unary_expression@@Base+0xe02>
  408487:	jmp    40849b <read_boolean_unary_expression@@Base+0xecb>
  408489:	nop    DWORD PTR [rax+0x0]
  408490:	mov    DWORD PTR [r15+rbx*1],r14d
  408494:	mov    QWORD PTR [rip+0x79c5],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  40849b:	lea    rdx,[rbx+0x8]
  40849f:	cmp    rdx,rcx
  4084a2:	jbe    4083d2 <read_boolean_unary_expression@@Base+0xe02>
  4084a8:	add    rbx,0x20007
  4084af:	and    rbx,0xfffffffffffe0000
  4084b6:	mov    rdi,r15
  4084b9:	mov    rsi,rbx
  4084bc:	call   403210 <realloc@plt>
  4084c1:	mov    rdi,QWORD PTR [rsp+0x10]
  4084c6:	mov    rsi,QWORD PTR [rsp+0x8]
  4084cb:	mov    r15,rax
  4084ce:	mov    QWORD PTR [rip+0x797b],rax        # 40fe50 <__bss_start@@Base+0xce8>
  4084d5:	mov    QWORD PTR [rip+0x797c],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  4084dc:	mov    rax,QWORD PTR [rip+0x797d]        # 40fe60 <__bss_start@@Base+0xcf8>
  4084e3:	jmp    4083d2 <read_boolean_unary_expression@@Base+0xe02>
  4084e8:	mov    rdi,QWORD PTR [rsp]
  4084ec:	add    rsp,0x18
  4084f0:	pop    rbx
  4084f1:	pop    r12
  4084f3:	pop    r13
  4084f5:	pop    r14
  4084f7:	pop    r15
  4084f9:	pop    rbp
  4084fa:	jmp    403040 <free@plt>
  4084ff:	nop
  408500:	push   rbp
  408501:	push   r15
  408503:	push   r14
  408505:	push   rbx
  408506:	push   rax
  408507:	cmp    QWORD PTR [rip+0x7939],0x0        # 40fe48 <__bss_start@@Base+0xce0>
  40850f:	je     408886 <read_boolean_unary_expression@@Base+0x12b6>
  408515:	mov    rbx,QWORD PTR [rip+0x7944]        # 40fe60 <__bss_start@@Base+0xcf8>
  40851c:	cmp    BYTE PTR [rip+0x791d],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  408523:	je     40858f <read_boolean_unary_expression@@Base+0xfbf>
  408525:	lea    r14,[rbx+0x4]
  408529:	cmp    r14,QWORD PTR [rip+0x7928]        # 40fe58 <__bss_start@@Base+0xcf0>
  408530:	jbe    4085db <read_boolean_unary_expression@@Base+0x100b>
  408536:	add    rbx,0x20003
  40853d:	and    rbx,0xfffffffffffe0000
  408544:	mov    rdi,QWORD PTR [rip+0x7905]        # 40fe50 <__bss_start@@Base+0xce8>
  40854b:	mov    rsi,rbx
  40854e:	call   403210 <realloc@plt>
  408553:	mov    QWORD PTR [rip+0x78f6],rax        # 40fe50 <__bss_start@@Base+0xce8>
  40855a:	mov    QWORD PTR [rip+0x78f7],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  408561:	mov    rbx,QWORD PTR [rip+0x78f8]        # 40fe60 <__bss_start@@Base+0xcf8>
  408568:	mov    cl,BYTE PTR [rip+0x78d2]        # 40fe40 <__bss_start@@Base+0xcd8>
  40856e:	lea    r14,[rbx+0x4]
  408572:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  408579:	mov    QWORD PTR [rip+0x78e0],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408580:	mov    ebp,0x1
  408585:	cmp    cl,0x1
  408588:	je     4085f0 <read_boolean_unary_expression@@Base+0x1020>
  40858a:	jmp    40870b <read_boolean_unary_expression@@Base+0x113b>
  40858f:	mov    rax,QWORD PTR [rip+0x78ba]        # 40fe50 <__bss_start@@Base+0xce8>
  408596:	mov    ecx,DWORD PTR [rax+rbx*1]
  408599:	lea    r14,[rbx+0x4]
  40859d:	mov    QWORD PTR [rip+0x78bc],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  4085a4:	cmp    ecx,0xa1000000
  4085aa:	je     4086cc <read_boolean_unary_expression@@Base+0x10fc>
  4085b0:	mov    ebp,0x1
  4085b5:	cmp    ecx,0xffffffff
  4085b8:	je     4086fd <read_boolean_unary_expression@@Base+0x112d>
  4085be:	mov    rax,QWORD PTR [rip+0x6a33]        # 40eff8 <stderr@GLIBC_2.2.5>
  4085c5:	mov    rdi,QWORD PTR [rax]
  4085c8:	mov    rdx,QWORD PTR [rip+0x7869]        # 40fe38 <__bss_start@@Base+0xcd0>
  4085cf:	lea    rsi,[rip+0x27c3]        # 40ad99 <_IO_stdin_used@@Base+0xd99>
  4085d6:	jmp    408ae5 <read_boolean_unary_expression@@Base+0x1515>
  4085db:	mov    rax,QWORD PTR [rip+0x786e]        # 40fe50 <__bss_start@@Base+0xce8>
  4085e2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  4085e9:	mov    QWORD PTR [rip+0x7870],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  4085f0:	lea    rcx,[rbx+0x8]
  4085f4:	cmp    rcx,QWORD PTR [rip+0x785d]        # 40fe58 <__bss_start@@Base+0xcf0>
  4085fb:	jbe    408653 <read_boolean_unary_expression@@Base+0x1083>
  4085fd:	add    rbx,0x20007
  408604:	and    rbx,0xfffffffffffe0000
  40860b:	mov    rdi,rax
  40860e:	mov    rsi,rbx
  408611:	call   403210 <realloc@plt>
  408616:	mov    QWORD PTR [rip+0x7833],rax        # 40fe50 <__bss_start@@Base+0xce8>
  40861d:	mov    QWORD PTR [rip+0x7834],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  408624:	mov    r14,QWORD PTR [rip+0x7835]        # 40fe60 <__bss_start@@Base+0xcf8>
  40862b:	mov    cl,BYTE PTR [rip+0x780f]        # 40fe40 <__bss_start@@Base+0xcd8>
  408631:	mov    DWORD PTR [rax+r14*1],0x9
  408639:	lea    rbx,[r14+0x4]
  40863d:	mov    QWORD PTR [rip+0x781c],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408644:	mov    ebp,0x1
  408649:	cmp    cl,0x1
  40864c:	je     408666 <read_boolean_unary_expression@@Base+0x1096>
  40864e:	jmp    408721 <read_boolean_unary_expression@@Base+0x1151>
  408653:	mov    DWORD PTR [rax+r14*1],0x9
  40865b:	lea    rbx,[r14+0x4]
  40865f:	mov    QWORD PTR [rip+0x77fa],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408666:	lea    rcx,[r14+0x8]
  40866a:	cmp    rcx,QWORD PTR [rip+0x77e7]        # 40fe58 <__bss_start@@Base+0xcf0>
  408671:	jbe    40890d <read_boolean_unary_expression@@Base+0x133d>
  408677:	add    r14,0x20007
  40867e:	and    r14,0xfffffffffffe0000
  408685:	mov    rdi,rax
  408688:	mov    rsi,r14
  40868b:	call   403210 <realloc@plt>
  408690:	mov    QWORD PTR [rip+0x77b9],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408697:	mov    QWORD PTR [rip+0x77ba],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  40869e:	mov    rbx,QWORD PTR [rip+0x77bb]        # 40fe60 <__bss_start@@Base+0xcf8>
  4086a5:	mov    cl,BYTE PTR [rip+0x7795]        # 40fe40 <__bss_start@@Base+0xcd8>
  4086ab:	mov    DWORD PTR [rax+rbx*1],0x0
  4086b2:	lea    r14,[rbx+0x4]
  4086b6:	mov    QWORD PTR [rip+0x77a3],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  4086bd:	mov    ebp,0x1
  4086c2:	cmp    cl,0x1
  4086c5:	jne    408736 <read_boolean_unary_expression@@Base+0x1166>
  4086c7:	jmp    40891f <read_boolean_unary_expression@@Base+0x134f>
  4086cc:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  4086d0:	lea    rdx,[rbx+0x8]
  4086d4:	mov    QWORD PTR [rip+0x7785],rdx        # 40fe60 <__bss_start@@Base+0xcf8>
  4086db:	cmp    ecx,0x9
  4086de:	jne    408acd <read_boolean_unary_expression@@Base+0x14fd>
  4086e4:	lea    rcx,[rbx+0x14]
  4086e8:	movzx  ebp,BYTE PTR [rip+0x7779]        # 40fe68 <__bss_start@@Base+0xd00>
  4086ef:	xor    ebp,0x1
  4086f2:	add    ebp,DWORD PTR [rbx+rax*1+0x10]
  4086f6:	mov    QWORD PTR [rip+0x7763],rcx        # 40fe60 <__bss_start@@Base+0xcf8>
  4086fd:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  408704:	mov    QWORD PTR [rip+0x7755],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40870b:	mov    DWORD PTR [rax+r14*1],0x9
  408713:	add    r14,0x4
  408717:	mov    QWORD PTR [rip+0x7742],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40871e:	mov    rbx,r14
  408721:	mov    DWORD PTR [rax+rbx*1],0x0
  408728:	add    rbx,0x4
  40872c:	mov    QWORD PTR [rip+0x772d],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408733:	mov    r14,rbx
  408736:	mov    DWORD PTR [rax+r14*1],0x0
  40873e:	add    r14,0x4
  408742:	mov    QWORD PTR [rip+0x7717],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408749:	mov    rbx,r14
  40874c:	mov    DWORD PTR [rax+rbx*1],ebp
  40874f:	lea    r14,[rbx+0x4]
  408753:	mov    QWORD PTR [rip+0x7706],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40875a:	cmp    BYTE PTR [rip+0x76df],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  408761:	je     4087c7 <read_boolean_unary_expression@@Base+0x11f7>
  408763:	lea    r15,[rbx+0x8]
  408767:	cmp    r15,QWORD PTR [rip+0x76ea]        # 40fe58 <__bss_start@@Base+0xcf0>
  40876e:	jbe    408891 <read_boolean_unary_expression@@Base+0x12c1>
  408774:	add    rbx,0x20007
  40877b:	and    rbx,0xfffffffffffe0000
  408782:	mov    rdi,QWORD PTR [rip+0x76c7]        # 40fe50 <__bss_start@@Base+0xce8>
  408789:	mov    rsi,rbx
  40878c:	call   403210 <realloc@plt>
  408791:	mov    QWORD PTR [rip+0x76b8],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408798:	mov    QWORD PTR [rip+0x76b9],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  40879f:	mov    r14,QWORD PTR [rip+0x76ba]        # 40fe60 <__bss_start@@Base+0xcf8>
  4087a6:	lea    r15,[r14+0x4]
  4087aa:	cmp    BYTE PTR [rip+0x768f],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  4087b1:	mov    DWORD PTR [rax+r14*1],0x0
  4087b9:	mov    QWORD PTR [rip+0x76a0],r15        # 40fe60 <__bss_start@@Base+0xcf8>
  4087c0:	je     4087e4 <read_boolean_unary_expression@@Base+0x1214>
  4087c2:	jmp    4088a7 <read_boolean_unary_expression@@Base+0x12d7>
  4087c7:	mov    rax,QWORD PTR [rip+0x7682]        # 40fe50 <__bss_start@@Base+0xce8>
  4087ce:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  4087d6:	add    rbx,0x8
  4087da:	mov    QWORD PTR [rip+0x767f],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  4087e1:	mov    r15,rbx
  4087e4:	mov    DWORD PTR [rax+r15*1],0x0
  4087ec:	add    r15,0x4
  4087f0:	mov    QWORD PTR [rip+0x7669],r15        # 40fe60 <__bss_start@@Base+0xcf8>
  4087f7:	mov    r14,r15
  4087fa:	mov    DWORD PTR [rax+r14*1],0x0
  408802:	add    r14,0x4
  408806:	mov    QWORD PTR [rip+0x7653],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40880d:	mov    rbx,r14
  408810:	mov    DWORD PTR [rax+rbx*1],0x0
  408817:	add    rbx,0x4
  40881b:	mov    QWORD PTR [rip+0x763e],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408822:	mov    r14,rbx
  408825:	mov    DWORD PTR [rax+r14*1],0x0
  40882d:	add    r14,0x4
  408831:	mov    QWORD PTR [rip+0x7628],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408838:	mov    rbx,r14
  40883b:	mov    DWORD PTR [rax+rbx*1],0x0
  408842:	add    rbx,0x4
  408846:	mov    QWORD PTR [rip+0x7613],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  40884d:	mov    r14,rbx
  408850:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408858:	add    r14,0x4
  40885c:	mov    QWORD PTR [rip+0x75fd],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408863:	mov    rcx,r14
  408866:	mov    rax,QWORD PTR [rip+0x75e3]        # 40fe50 <__bss_start@@Base+0xce8>
  40886d:	mov    DWORD PTR [rax+rcx*1],0x0
  408874:	add    rcx,0x4
  408878:	mov    QWORD PTR [rip+0x75e1],rcx        # 40fe60 <__bss_start@@Base+0xcf8>
  40887f:	mov    BYTE PTR [rip+0x75e2],0x1        # 40fe68 <__bss_start@@Base+0xd00>
  408886:	add    rsp,0x8
  40888a:	pop    rbx
  40888b:	pop    r14
  40888d:	pop    r15
  40888f:	pop    rbp
  408890:	ret    
  408891:	mov    rax,QWORD PTR [rip+0x75b8]        # 40fe50 <__bss_start@@Base+0xce8>
  408898:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  4088a0:	mov    QWORD PTR [rip+0x75b9],r15        # 40fe60 <__bss_start@@Base+0xcf8>
  4088a7:	lea    rcx,[r14+0x8]
  4088ab:	cmp    rcx,QWORD PTR [rip+0x75a6]        # 40fe58 <__bss_start@@Base+0xcf0>
  4088b2:	jbe    40898a <read_boolean_unary_expression@@Base+0x13ba>
  4088b8:	add    r14,0x20007
  4088bf:	and    r14,0xfffffffffffe0000
  4088c6:	mov    rdi,rax
  4088c9:	mov    rsi,r14
  4088cc:	call   403210 <realloc@plt>
  4088d1:	mov    QWORD PTR [rip+0x7578],rax        # 40fe50 <__bss_start@@Base+0xce8>
  4088d8:	mov    QWORD PTR [rip+0x7579],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  4088df:	mov    r15,QWORD PTR [rip+0x757a]        # 40fe60 <__bss_start@@Base+0xcf8>
  4088e6:	mov    cl,BYTE PTR [rip+0x7554]        # 40fe40 <__bss_start@@Base+0xcd8>
  4088ec:	mov    DWORD PTR [rax+r15*1],0x0
  4088f4:	lea    r14,[r15+0x4]
  4088f8:	mov    QWORD PTR [rip+0x7561],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  4088ff:	cmp    cl,0x1
  408902:	jne    4087fa <read_boolean_unary_expression@@Base+0x122a>
  408908:	jmp    40899d <read_boolean_unary_expression@@Base+0x13cd>
  40890d:	mov    DWORD PTR [rax+rbx*1],0x0
  408914:	lea    r14,[rbx+0x4]
  408918:	mov    QWORD PTR [rip+0x7541],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40891f:	lea    rcx,[rbx+0x8]
  408923:	cmp    rcx,QWORD PTR [rip+0x752e]        # 40fe58 <__bss_start@@Base+0xcf0>
  40892a:	jbe    408a00 <read_boolean_unary_expression@@Base+0x1430>
  408930:	add    rbx,0x20007
  408937:	and    rbx,0xfffffffffffe0000
  40893e:	mov    rdi,rax
  408941:	mov    rsi,rbx
  408944:	call   403210 <realloc@plt>
  408949:	mov    QWORD PTR [rip+0x7500],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408950:	mov    QWORD PTR [rip+0x7501],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  408957:	mov    r14,QWORD PTR [rip+0x7502]        # 40fe60 <__bss_start@@Base+0xcf8>
  40895e:	mov    cl,BYTE PTR [rip+0x74dc]        # 40fe40 <__bss_start@@Base+0xcd8>
  408964:	mov    DWORD PTR [rax+r14*1],0x0
  40896c:	lea    rbx,[r14+0x4]
  408970:	mov    QWORD PTR [rip+0x74e9],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408977:	mov    ebp,0x1
  40897c:	cmp    cl,0x1
  40897f:	jne    40874c <read_boolean_unary_expression@@Base+0x117c>
  408985:	jmp    408a13 <read_boolean_unary_expression@@Base+0x1443>
  40898a:	mov    DWORD PTR [rax+r15*1],0x0
  408992:	lea    r14,[r15+0x4]
  408996:	mov    QWORD PTR [rip+0x74c3],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  40899d:	lea    rcx,[r15+0x8]
  4089a1:	cmp    rcx,QWORD PTR [rip+0x74b0]        # 40fe58 <__bss_start@@Base+0xcf0>
  4089a8:	jbe    408a5c <read_boolean_unary_expression@@Base+0x148c>
  4089ae:	add    r15,0x20007
  4089b5:	and    r15,0xfffffffffffe0000
  4089bc:	mov    rdi,rax
  4089bf:	mov    rsi,r15
  4089c2:	call   403210 <realloc@plt>
  4089c7:	mov    QWORD PTR [rip+0x7482],rax        # 40fe50 <__bss_start@@Base+0xce8>
  4089ce:	mov    QWORD PTR [rip+0x7483],r15        # 40fe58 <__bss_start@@Base+0xcf0>
  4089d5:	mov    r14,QWORD PTR [rip+0x7484]        # 40fe60 <__bss_start@@Base+0xcf8>
  4089dc:	mov    cl,BYTE PTR [rip+0x745e]        # 40fe40 <__bss_start@@Base+0xcd8>
  4089e2:	mov    DWORD PTR [rax+r14*1],0x0
  4089ea:	lea    rbx,[r14+0x4]
  4089ee:	mov    QWORD PTR [rip+0x746b],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  4089f5:	cmp    cl,0x1
  4089f8:	jne    408810 <read_boolean_unary_expression@@Base+0x1240>
  4089fe:	jmp    408a6f <read_boolean_unary_expression@@Base+0x149f>
  408a00:	mov    DWORD PTR [rax+r14*1],0x0
  408a08:	lea    rbx,[r14+0x4]
  408a0c:	mov    QWORD PTR [rip+0x744d],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408a13:	lea    rcx,[r14+0x8]
  408a17:	mov    ebp,0x1
  408a1c:	cmp    rcx,QWORD PTR [rip+0x7435]        # 40fe58 <__bss_start@@Base+0xcf0>
  408a23:	jbe    40874c <read_boolean_unary_expression@@Base+0x117c>
  408a29:	add    r14,0x20007
  408a30:	and    r14,0xfffffffffffe0000
  408a37:	mov    rdi,rax
  408a3a:	mov    rsi,r14
  408a3d:	call   403210 <realloc@plt>
  408a42:	mov    QWORD PTR [rip+0x7407],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408a49:	mov    QWORD PTR [rip+0x7408],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  408a50:	mov    rbx,QWORD PTR [rip+0x7409]        # 40fe60 <__bss_start@@Base+0xcf8>
  408a57:	jmp    40874c <read_boolean_unary_expression@@Base+0x117c>
  408a5c:	mov    DWORD PTR [rax+r14*1],0x0
  408a64:	lea    rbx,[r14+0x4]
  408a68:	mov    QWORD PTR [rip+0x73f1],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408a6f:	lea    rcx,[r14+0x8]
  408a73:	cmp    rcx,QWORD PTR [rip+0x73de]        # 40fe58 <__bss_start@@Base+0xcf0>
  408a7a:	jbe    408af6 <read_boolean_unary_expression@@Base+0x1526>
  408a7c:	add    r14,0x20007
  408a83:	and    r14,0xfffffffffffe0000
  408a8a:	mov    rdi,rax
  408a8d:	mov    rsi,r14
  408a90:	call   403210 <realloc@plt>
  408a95:	mov    QWORD PTR [rip+0x73b4],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408a9c:	mov    QWORD PTR [rip+0x73b5],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  408aa3:	mov    rbx,QWORD PTR [rip+0x73b6]        # 40fe60 <__bss_start@@Base+0xcf8>
  408aaa:	mov    cl,BYTE PTR [rip+0x7390]        # 40fe40 <__bss_start@@Base+0xcd8>
  408ab0:	mov    DWORD PTR [rax+rbx*1],0x0
  408ab7:	lea    r14,[rbx+0x4]
  408abb:	mov    QWORD PTR [rip+0x739e],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408ac2:	cmp    cl,0x1
  408ac5:	jne    408825 <read_boolean_unary_expression@@Base+0x1255>
  408acb:	jmp    408b08 <read_boolean_unary_expression@@Base+0x1538>
  408acd:	mov    rax,QWORD PTR [rip+0x6524]        # 40eff8 <stderr@GLIBC_2.2.5>
  408ad4:	mov    rdi,QWORD PTR [rax]
  408ad7:	mov    rdx,QWORD PTR [rip+0x735a]        # 40fe38 <__bss_start@@Base+0xcd0>
  408ade:	lea    rsi,[rip+0x2301]        # 40ade6 <_IO_stdin_used@@Base+0xde6>
  408ae5:	xor    eax,eax
  408ae7:	add    rsp,0x8
  408aeb:	pop    rbx
  408aec:	pop    r14
  408aee:	pop    r15
  408af0:	pop    rbp
  408af1:	jmp    403180 <fprintf@plt>
  408af6:	mov    DWORD PTR [rax+rbx*1],0x0
  408afd:	lea    r14,[rbx+0x4]
  408b01:	mov    QWORD PTR [rip+0x7358],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408b08:	lea    rcx,[rbx+0x8]
  408b0c:	cmp    rcx,QWORD PTR [rip+0x7345]        # 40fe58 <__bss_start@@Base+0xcf0>
  408b13:	jbe    408b67 <read_boolean_unary_expression@@Base+0x1597>
  408b15:	add    rbx,0x20007
  408b1c:	and    rbx,0xfffffffffffe0000
  408b23:	mov    rdi,rax
  408b26:	mov    rsi,rbx
  408b29:	call   403210 <realloc@plt>
  408b2e:	mov    QWORD PTR [rip+0x731b],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408b35:	mov    QWORD PTR [rip+0x731c],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  408b3c:	mov    r14,QWORD PTR [rip+0x731d]        # 40fe60 <__bss_start@@Base+0xcf8>
  408b43:	mov    cl,BYTE PTR [rip+0x72f7]        # 40fe40 <__bss_start@@Base+0xcd8>
  408b49:	mov    DWORD PTR [rax+r14*1],0x0
  408b51:	lea    rbx,[r14+0x4]
  408b55:	mov    QWORD PTR [rip+0x7304],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408b5c:	cmp    cl,0x1
  408b5f:	jne    40883b <read_boolean_unary_expression@@Base+0x126b>
  408b65:	jmp    408b7a <read_boolean_unary_expression@@Base+0x15aa>
  408b67:	mov    DWORD PTR [rax+r14*1],0x0
  408b6f:	lea    rbx,[r14+0x4]
  408b73:	mov    QWORD PTR [rip+0x72e6],rbx        # 40fe60 <__bss_start@@Base+0xcf8>
  408b7a:	lea    rcx,[r14+0x8]
  408b7e:	cmp    rcx,QWORD PTR [rip+0x72d3]        # 40fe58 <__bss_start@@Base+0xcf0>
  408b85:	jbe    408bd6 <read_boolean_unary_expression@@Base+0x1606>
  408b87:	add    r14,0x20007
  408b8e:	and    r14,0xfffffffffffe0000
  408b95:	mov    rdi,rax
  408b98:	mov    rsi,r14
  408b9b:	call   403210 <realloc@plt>
  408ba0:	mov    QWORD PTR [rip+0x72a9],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408ba7:	mov    QWORD PTR [rip+0x72aa],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  408bae:	mov    rbx,QWORD PTR [rip+0x72ab]        # 40fe60 <__bss_start@@Base+0xcf8>
  408bb5:	lea    r14,[rbx+0x4]
  408bb9:	cmp    BYTE PTR [rip+0x7280],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  408bc0:	mov    DWORD PTR [rax+rbx*1],0x0
  408bc7:	mov    QWORD PTR [rip+0x7292],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408bce:	je     408850 <read_boolean_unary_expression@@Base+0x1280>
  408bd4:	jmp    408be8 <read_boolean_unary_expression@@Base+0x1618>
  408bd6:	mov    DWORD PTR [rax+rbx*1],0x0
  408bdd:	lea    r14,[rbx+0x4]
  408be1:	mov    QWORD PTR [rip+0x7278],r14        # 40fe60 <__bss_start@@Base+0xcf8>
  408be8:	lea    rcx,[rbx+0x8]
  408bec:	cmp    rcx,QWORD PTR [rip+0x7265]        # 40fe58 <__bss_start@@Base+0xcf0>
  408bf3:	jbe    408c47 <read_boolean_unary_expression@@Base+0x1677>
  408bf5:	add    rbx,0x20007
  408bfc:	and    rbx,0xfffffffffffe0000
  408c03:	mov    rdi,rax
  408c06:	mov    rsi,rbx
  408c09:	call   403210 <realloc@plt>
  408c0e:	mov    QWORD PTR [rip+0x723b],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408c15:	mov    QWORD PTR [rip+0x723c],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  408c1c:	mov    dl,BYTE PTR [rip+0x721e]        # 40fe40 <__bss_start@@Base+0xcd8>
  408c22:	mov    r14,QWORD PTR [rip+0x7237]        # 40fe60 <__bss_start@@Base+0xcf8>
  408c29:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408c31:	lea    rcx,[r14+0x4]
  408c35:	mov    QWORD PTR [rip+0x7224],rcx        # 40fe60 <__bss_start@@Base+0xcf8>
  408c3c:	cmp    dl,0x1
  408c3f:	jne    408866 <read_boolean_unary_expression@@Base+0x1296>
  408c45:	jmp    408c5a <read_boolean_unary_expression@@Base+0x168a>
  408c47:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408c4f:	lea    rcx,[r14+0x4]
  408c53:	mov    QWORD PTR [rip+0x7206],rcx        # 40fe60 <__bss_start@@Base+0xcf8>
  408c5a:	lea    rdx,[r14+0x8]
  408c5e:	cmp    rdx,QWORD PTR [rip+0x71f3]        # 40fe58 <__bss_start@@Base+0xcf0>
  408c65:	jbe    408866 <read_boolean_unary_expression@@Base+0x1296>
  408c6b:	add    r14,0x20007
  408c72:	and    r14,0xfffffffffffe0000
  408c79:	mov    rdi,rax
  408c7c:	mov    rsi,r14
  408c7f:	call   403210 <realloc@plt>
  408c84:	mov    QWORD PTR [rip+0x71c5],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408c8b:	mov    QWORD PTR [rip+0x71c6],r14        # 40fe58 <__bss_start@@Base+0xcf0>
  408c92:	mov    rcx,QWORD PTR [rip+0x71c7]        # 40fe60 <__bss_start@@Base+0xcf8>
  408c99:	jmp    408866 <read_boolean_unary_expression@@Base+0x1296>
  408c9e:	xchg   ax,ax
  408ca0:	push   r14
  408ca2:	push   rbx
  408ca3:	push   rax
  408ca4:	cmp    QWORD PTR [rip+0x719c],0x0        # 40fe48 <__bss_start@@Base+0xce0>
  408cac:	je     408e07 <read_boolean_unary_expression@@Base+0x1837>
  408cb2:	cmp    BYTE PTR [rip+0x7187],0x0        # 40fe40 <__bss_start@@Base+0xcd8>
  408cb9:	je     408d2a <read_boolean_unary_expression@@Base+0x175a>
  408cbb:	mov    rbx,QWORD PTR [rip+0x719e]        # 40fe60 <__bss_start@@Base+0xcf8>
  408cc2:	lea    rax,[rbx+0x8]
  408cc6:	cmp    rax,QWORD PTR [rip+0x718b]        # 40fe58 <__bss_start@@Base+0xcf0>
  408ccd:	jbe    408d90 <read_boolean_unary_expression@@Base+0x17c0>
  408cd3:	add    rbx,0x20007
  408cda:	and    rbx,0xfffffffffffe0000
  408ce1:	mov    rdi,QWORD PTR [rip+0x7168]        # 40fe50 <__bss_start@@Base+0xce8>
  408ce8:	mov    rsi,rbx
  408ceb:	call   403210 <realloc@plt>
  408cf0:	mov    rdi,rax
  408cf3:	mov    QWORD PTR [rip+0x7156],rax        # 40fe50 <__bss_start@@Base+0xce8>
  408cfa:	mov    QWORD PTR [rip+0x7157],rbx        # 40fe58 <__bss_start@@Base+0xcf0>
  408d01:	mov    al,BYTE PTR [rip+0x7139]        # 40fe40 <__bss_start@@Base+0xcd8>
  408d07:	mov    rsi,QWORD PTR [rip+0x7152]        # 40fe60 <__bss_start@@Base+0xcf8>
  408d0e:	mov    QWORD PTR [rdi+rsi*1],0x0
  408d16:	add    rsi,0x8
  408d1a:	mov    QWORD PTR [rip+0x713f],rsi        # 40fe60 <__bss_start@@Base+0xcf8>
  408d21:	cmp    al,0x1
  408d23:	jne    408d4b <read_boolean_unary_expression@@Base+0x177b>
  408d25:	jmp    408db1 <read_boolean_unary_expression@@Base+0x17e1>
  408d2a:	mov    rdi,QWORD PTR [rip+0x711f]        # 40fe50 <__bss_start@@Base+0xce8>
  408d31:	mov    rax,QWORD PTR [rip+0x7128]        # 40fe60 <__bss_start@@Base+0xcf8>
  408d38:	mov    QWORD PTR [rdi+rax*1],0x0
  408d40:	add    rax,0x8
  408d44:	mov    QWORD PTR [rip+0x7115],rax        # 40fe60 <__bss_start@@Base+0xcf8>
  408d4b:	mov    rsi,QWORD PTR [rip+0x712e]        # 40fe80 <__bss_start@@Base+0xd18>
  408d52:	mov    edx,0x4
  408d57:	call   4030d0 <msync@plt>
  408d5c:	cmp    eax,0xffffffff
  408d5f:	je     408e1a <read_boolean_unary_expression@@Base+0x184a>
  408d65:	mov    rdi,QWORD PTR [rip+0x70e4]        # 40fe50 <__bss_start@@Base+0xce8>
  408d6c:	mov    rsi,QWORD PTR [rip+0x710d]        # 40fe80 <__bss_start@@Base+0xd18>
  408d73:	call   403230 <munmap@plt>
  408d78:	mov    QWORD PTR [rip+0x70cd],0x0        # 40fe50 <__bss_start@@Base+0xce8>
  408d83:	mov    QWORD PTR [rip+0x70f2],0x0        # 40fe80 <__bss_start@@Base+0xd18>
  408d8e:	jmp    408dce <read_boolean_unary_expression@@Base+0x17fe>
  408d90:	mov    rdi,QWORD PTR [rip+0x70b9]        # 40fe50 <__bss_start@@Base+0xce8>
  408d97:	mov    rsi,QWORD PTR [rip+0x70c2]        # 40fe60 <__bss_start@@Base+0xcf8>
  408d9e:	mov    QWORD PTR [rdi+rsi*1],0x0
  408da6:	add    rsi,0x8
  408daa:	mov    QWORD PTR [rip+0x70af],rsi        # 40fe60 <__bss_start@@Base+0xcf8>
  408db1:	mov    rcx,QWORD PTR [rip+0x7090]        # 40fe48 <__bss_start@@Base+0xce0>
  408db8:	mov    edx,0x1
  408dbd:	call   403270 <fwrite@plt>
  408dc2:	mov    rdi,QWORD PTR [rip+0x7087]        # 40fe50 <__bss_start@@Base+0xce8>
  408dc9:	call   403040 <free@plt>
  408dce:	mov    rdi,QWORD PTR [rip+0x7073]        # 40fe48 <__bss_start@@Base+0xce0>
  408dd5:	call   4031f0 <fflush@plt>
  408dda:	mov    edi,DWORD PTR [rip+0x6380]        # 40f160 <__data_start@@Base+0x10>
  408de0:	call   409290 <__gcov_flush@@Base+0x2c0>
  408de5:	mov    rdi,QWORD PTR [rip+0x705c]        # 40fe48 <__bss_start@@Base+0xce0>
  408dec:	call   4030c0 <fclose@plt>
  408df1:	mov    QWORD PTR [rip+0x704c],0x0        # 40fe48 <__bss_start@@Base+0xce0>
  408dfc:	mov    QWORD PTR [rip+0x7049],0x0        # 40fe50 <__bss_start@@Base+0xce8>
  408e07:	mov    rdi,QWORD PTR [rip+0x702a]        # 40fe38 <__bss_start@@Base+0xcd0>
  408e0e:	add    rsp,0x8
  408e12:	pop    rbx
  408e13:	pop    r14
  408e15:	jmp    403040 <free@plt>
  408e1a:	call   403050 <__errno_location@plt>
  408e1f:	mov    edi,DWORD PTR [rax]
  408e21:	mov    rax,QWORD PTR [rip+0x61d0]        # 40eff8 <stderr@GLIBC_2.2.5>
  408e28:	mov    rbx,QWORD PTR [rax]
  408e2b:	mov    r14,QWORD PTR [rip+0x7006]        # 40fe38 <__bss_start@@Base+0xcd0>
  408e32:	call   403290 <strerror@plt>
  408e37:	lea    rsi,[rip+0x2016]        # 40ae54 <_IO_stdin_used@@Base+0xe54>
  408e3e:	mov    rdi,rbx
  408e41:	mov    rdx,r14
  408e44:	mov    rcx,rax
  408e47:	xor    eax,eax
  408e49:	call   403180 <fprintf@plt>
  408e4e:	jmp    408d65 <read_boolean_unary_expression@@Base+0x1795>
  408e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e5d:	nop    DWORD PTR [rax]
  408e60:	push   rbx
  408e61:	mov    rbx,rdi
  408e64:	mov    edi,0x18
  408e69:	call   4031e0 <malloc@plt>
  408e6e:	mov    QWORD PTR [rax+0x8],rbx
  408e72:	mov    QWORD PTR [rax+0x10],0x0
  408e7a:	lea    rcx,[rip+0x6fef]        # 40fe70 <__bss_start@@Base+0xd08>
  408e81:	mov    QWORD PTR [rax],rcx
  408e84:	lea    rcx,[rip+0x76b5]        # 410540 <writeout_fn_list@@Base>
  408e8b:	lea    rdx,[rcx+0x8]
  408e8f:	mov    rsi,QWORD PTR [rcx+0x8]
  408e93:	add    rsi,0x10
  408e97:	xor    edi,edi
  408e99:	cmp    QWORD PTR [rcx],0x0
  408e9d:	setne  dil
  408ea1:	cmove  rsi,rdx
  408ea5:	mov    QWORD PTR [rsi],rax
  408ea8:	mov    QWORD PTR [rcx+rdi*8],rax
  408eac:	pop    rbx
  408ead:	ret    
  408eae:	xchg   ax,ax
  408eb0:	push   r14
  408eb2:	push   rbx
  408eb3:	push   rax
  408eb4:	lea    rax,[rip+0x7685]        # 410540 <writeout_fn_list@@Base>
  408ebb:	mov    rbx,QWORD PTR [rax]
  408ebe:	test   rbx,rbx
  408ec1:	je     408ee5 <read_boolean_unary_expression@@Base+0x1915>
  408ec3:	lea    r14,[rip+0x6fa6]        # 40fe70 <__bss_start@@Base+0xd08>
  408eca:	cmp    QWORD PTR [rbx],r14
  408ecd:	je     408ede <read_boolean_unary_expression@@Base+0x190e>
  408ecf:	nop
  408ed0:	mov    rbx,QWORD PTR [rbx+0x10]
  408ed4:	test   rbx,rbx
  408ed7:	je     408ee5 <read_boolean_unary_expression@@Base+0x1915>
  408ed9:	cmp    QWORD PTR [rbx],r14
  408edc:	jne    408ed0 <read_boolean_unary_expression@@Base+0x1900>
  408ede:	xor    eax,eax
  408ee0:	call   QWORD PTR [rbx+0x8]
  408ee3:	jmp    408ed0 <read_boolean_unary_expression@@Base+0x1900>
  408ee5:	add    rsp,0x8
  408ee9:	pop    rbx
  408eea:	pop    r14
  408eec:	ret    
  408eed:	nop    DWORD PTR [rax]
  408ef0:	push   r15
  408ef2:	push   r14
  408ef4:	push   r12
  408ef6:	push   rbx
  408ef7:	push   rax
  408ef8:	lea    r14,[rip+0x7641]        # 410540 <writeout_fn_list@@Base>
  408eff:	mov    rdi,QWORD PTR [r14]
  408f02:	test   rdi,rdi
  408f05:	je     408f6b <read_boolean_unary_expression@@Base+0x199b>
  408f07:	xor    r12d,r12d
  408f0a:	lea    r15,[rip+0x6f5f]        # 40fe70 <__bss_start@@Base+0xd08>
  408f11:	jmp    408f2d <read_boolean_unary_expression@@Base+0x195d>
  408f13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f1d:	nop    DWORD PTR [rax]
  408f20:	call   403040 <free@plt>
  408f25:	mov    rdi,rbx
  408f28:	test   rbx,rbx
  408f2b:	je     408f6b <read_boolean_unary_expression@@Base+0x199b>
  408f2d:	mov    rbx,QWORD PTR [rdi+0x10]
  408f31:	cmp    QWORD PTR [rdi],r15
  408f34:	je     408f40 <read_boolean_unary_expression@@Base+0x1970>
  408f36:	mov    r12,rdi
  408f39:	jmp    408f25 <read_boolean_unary_expression@@Base+0x1955>
  408f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f40:	cmp    rdi,QWORD PTR [r14]
  408f43:	je     408f52 <read_boolean_unary_expression@@Base+0x1982>
  408f45:	cmp    rdi,QWORD PTR [r14+0x8]
  408f49:	je     408f5b <read_boolean_unary_expression@@Base+0x198b>
  408f4b:	test   r12,r12
  408f4e:	jne    408f64 <read_boolean_unary_expression@@Base+0x1994>
  408f50:	jmp    408f20 <read_boolean_unary_expression@@Base+0x1950>
  408f52:	mov    QWORD PTR [r14],rbx
  408f55:	cmp    rdi,QWORD PTR [r14+0x8]
  408f59:	jne    408f4b <read_boolean_unary_expression@@Base+0x197b>
  408f5b:	mov    QWORD PTR [r14+0x8],r12
  408f5f:	test   r12,r12
  408f62:	je     408f20 <read_boolean_unary_expression@@Base+0x1950>
  408f64:	mov    QWORD PTR [r12+0x10],rbx
  408f69:	jmp    408f20 <read_boolean_unary_expression@@Base+0x1950>
  408f6b:	add    rsp,0x8
  408f6f:	pop    rbx
  408f70:	pop    r12
  408f72:	pop    r14
  408f74:	pop    r15
  408f76:	ret    
  408f77:	nop    WORD PTR [rax+rax*1+0x0]
  408f80:	push   rbx
  408f81:	mov    rbx,rdi
  408f84:	mov    edi,0x18
  408f89:	call   4031e0 <malloc@plt>
  408f8e:	mov    QWORD PTR [rax+0x8],rbx
  408f92:	mov    QWORD PTR [rax+0x10],0x0
  408f9a:	lea    rcx,[rip+0x6ecf]        # 40fe70 <__bss_start@@Base+0xd08>
  408fa1:	mov    QWORD PTR [rax],rcx
  408fa4:	lea    rcx,[rip+0x7585]        # 410530 <flush_fn_list@@Base>
  408fab:	lea    rdx,[rcx+0x8]
  408faf:	mov    rsi,QWORD PTR [rcx+0x8]
  408fb3:	add    rsi,0x10
  408fb7:	xor    edi,edi
  408fb9:	cmp    QWORD PTR [rcx],0x0
  408fbd:	setne  dil
  408fc1:	cmove  rsi,rdx
  408fc5:	mov    QWORD PTR [rsi],rax
  408fc8:	mov    QWORD PTR [rcx+rdi*8],rax
  408fcc:	pop    rbx
  408fcd:	ret    
  408fce:	xchg   ax,ax

0000000000408fd0 <__gcov_flush@@Base>:
  408fd0:	push   rbx
  408fd1:	lea    rax,[rip+0x7558]        # 410530 <flush_fn_list@@Base>
  408fd8:	mov    rbx,QWORD PTR [rax]
  408fdb:	test   rbx,rbx
  408fde:	je     408fee <__gcov_flush@@Base+0x1e>
  408fe0:	xor    eax,eax
  408fe2:	call   QWORD PTR [rbx+0x8]
  408fe5:	mov    rbx,QWORD PTR [rbx+0x10]
  408fe9:	test   rbx,rbx
  408fec:	jne    408fe0 <__gcov_flush@@Base+0x10>
  408fee:	pop    rbx
  408fef:	ret    
  408ff0:	push   r15
  408ff2:	push   r14
  408ff4:	push   r12
  408ff6:	push   rbx
  408ff7:	push   rax
  408ff8:	lea    r14,[rip+0x7531]        # 410530 <flush_fn_list@@Base>
  408fff:	mov    rdi,QWORD PTR [r14]
  409002:	test   rdi,rdi
  409005:	je     40906b <__gcov_flush@@Base+0x9b>
  409007:	xor    r12d,r12d
  40900a:	lea    r15,[rip+0x6e5f]        # 40fe70 <__bss_start@@Base+0xd08>
  409011:	jmp    40902d <__gcov_flush@@Base+0x5d>
  409013:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40901d:	nop    DWORD PTR [rax]
  409020:	call   403040 <free@plt>
  409025:	mov    rdi,rbx
  409028:	test   rbx,rbx
  40902b:	je     40906b <__gcov_flush@@Base+0x9b>
  40902d:	mov    rbx,QWORD PTR [rdi+0x10]
  409031:	cmp    QWORD PTR [rdi],r15
  409034:	je     409040 <__gcov_flush@@Base+0x70>
  409036:	mov    r12,rdi
  409039:	jmp    409025 <__gcov_flush@@Base+0x55>
  40903b:	nop    DWORD PTR [rax+rax*1+0x0]
  409040:	cmp    rdi,QWORD PTR [r14]
  409043:	je     409052 <__gcov_flush@@Base+0x82>
  409045:	cmp    rdi,QWORD PTR [r14+0x8]
  409049:	je     40905b <__gcov_flush@@Base+0x8b>
  40904b:	test   r12,r12
  40904e:	jne    409064 <__gcov_flush@@Base+0x94>
  409050:	jmp    409020 <__gcov_flush@@Base+0x50>
  409052:	mov    QWORD PTR [r14],rbx
  409055:	cmp    rdi,QWORD PTR [r14+0x8]
  409059:	jne    40904b <__gcov_flush@@Base+0x7b>
  40905b:	mov    QWORD PTR [r14+0x8],r12
  40905f:	test   r12,r12
  409062:	je     409020 <__gcov_flush@@Base+0x50>
  409064:	mov    QWORD PTR [r12+0x10],rbx
  409069:	jmp    409020 <__gcov_flush@@Base+0x50>
  40906b:	add    rsp,0x8
  40906f:	pop    rbx
  409070:	pop    r12
  409072:	pop    r14
  409074:	pop    r15
  409076:	ret    
  409077:	nop    WORD PTR [rax+rax*1+0x0]
  409080:	push   r14
  409082:	push   rbx
  409083:	push   rax
  409084:	mov    r14,rsi
  409087:	test   rdi,rdi
  40908a:	je     4090d7 <__gcov_flush@@Base+0x107>
  40908c:	mov    rbx,rdi
  40908f:	mov    edi,0x18
  409094:	call   4031e0 <malloc@plt>
  409099:	mov    QWORD PTR [rax+0x8],rbx
  40909d:	mov    QWORD PTR [rax+0x10],0x0
  4090a5:	lea    rcx,[rip+0x6dc4]        # 40fe70 <__bss_start@@Base+0xd08>
  4090ac:	mov    QWORD PTR [rax],rcx
  4090af:	lea    rcx,[rip+0x748a]        # 410540 <writeout_fn_list@@Base>
  4090b6:	lea    rdx,[rcx+0x8]
  4090ba:	mov    rsi,QWORD PTR [rcx+0x8]
  4090be:	add    rsi,0x10
  4090c2:	xor    edi,edi
  4090c4:	cmp    QWORD PTR [rcx],0x0
  4090c8:	setne  dil
  4090cc:	cmove  rsi,rdx
  4090d0:	mov    QWORD PTR [rsi],rax
  4090d3:	mov    QWORD PTR [rcx+rdi*8],rax
  4090d7:	test   r14,r14
  4090da:	je     409124 <__gcov_flush@@Base+0x154>
  4090dc:	mov    edi,0x18
  4090e1:	call   4031e0 <malloc@plt>
  4090e6:	mov    QWORD PTR [rax+0x8],r14
  4090ea:	mov    QWORD PTR [rax+0x10],0x0
  4090f2:	lea    rcx,[rip+0x6d77]        # 40fe70 <__bss_start@@Base+0xd08>
  4090f9:	mov    QWORD PTR [rax],rcx
  4090fc:	lea    rcx,[rip+0x742d]        # 410530 <flush_fn_list@@Base>
  409103:	lea    rdx,[rcx+0x8]
  409107:	mov    rsi,QWORD PTR [rcx+0x8]
  40910b:	add    rsi,0x10
  40910f:	xor    edi,edi
  409111:	cmp    QWORD PTR [rcx],0x0
  409115:	setne  dil
  409119:	cmove  rsi,rdx
  40911d:	mov    QWORD PTR [rsi],rax
  409120:	mov    QWORD PTR [rcx+rdi*8],rax
  409124:	cmp    BYTE PTR [rip+0x6d4d],0x0        # 40fe78 <__bss_start@@Base+0xd10>
  40912b:	je     409135 <__gcov_flush@@Base+0x165>
  40912d:	add    rsp,0x8
  409131:	pop    rbx
  409132:	pop    r14
  409134:	ret    
  409135:	mov    BYTE PTR [rip+0x6d3c],0x1        # 40fe78 <__bss_start@@Base+0xd10>
  40913c:	lea    rdi,[rip+0xfffffffffffffead]        # 408ff0 <__gcov_flush@@Base+0x20>
  409143:	call   4096e0 <__libc_csu_fini@@Base+0x10>
  409148:	lea    rdi,[rip+0xfffffffffffffda1]        # 408ef0 <read_boolean_unary_expression@@Base+0x1920>
  40914f:	call   4096e0 <__libc_csu_fini@@Base+0x10>
  409154:	lea    rdi,[rip+0xfffffffffffffd55]        # 408eb0 <read_boolean_unary_expression@@Base+0x18e0>
  40915b:	add    rsp,0x8
  40915f:	pop    rbx
  409160:	pop    r14
  409162:	jmp    4096e0 <__libc_csu_fini@@Base+0x10>
  409167:	nop
  409168:	nop    DWORD PTR [rax+rax*1+0x0]
  409170:	push   r15
  409172:	push   r14
  409174:	push   rbx
  409175:	mov    r14,rdi
  409178:	lea    rbx,[rdi+0x1]
  40917c:	lea    r15,[rip+0x5fe1]        # 40f164 <lprofDirMode@@Base>
  409183:	jmp    4091a5 <__gcov_flush@@Base+0x1d5>
  409185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40918f:	nop
  409190:	mov    BYTE PTR [rbx],0x0
  409193:	mov    esi,DWORD PTR [r15]
  409196:	mov    rdi,r14
  409199:	call   403080 <mkdir@plt>
  40919e:	mov    BYTE PTR [rbx],0x2f
  4091a1:	add    rbx,0x1
  4091a5:	movzx  eax,BYTE PTR [rbx]
  4091a8:	cmp    al,0x2f
  4091aa:	je     409190 <__gcov_flush@@Base+0x1c0>
  4091ac:	test   al,al
  4091ae:	jne    4091a1 <__gcov_flush@@Base+0x1d1>
  4091b0:	pop    rbx
  4091b1:	pop    r14
  4091b3:	pop    r15
  4091b5:	ret    
  4091b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091c0:	lea    rax,[rip+0x5f9d]        # 40f164 <lprofDirMode@@Base>
  4091c7:	mov    eax,DWORD PTR [rax]
  4091c9:	ret    
  4091ca:	nop    WORD PTR [rax+rax*1+0x0]
  4091d0:	lea    rax,[rip+0x5f8d]        # 40f164 <lprofDirMode@@Base>
  4091d7:	mov    DWORD PTR [rax],edi
  4091d9:	ret    
  4091da:	nop    WORD PTR [rax+rax*1+0x0]
  4091e0:	push   rbp
  4091e1:	push   rbx
  4091e2:	sub    rsp,0x188
  4091e9:	mov    ebp,esi
  4091eb:	mov    rbx,rdi
  4091ee:	mov    rdi,rsp
  4091f1:	call   403140 <uname@plt>
  4091f6:	test   eax,eax
  4091f8:	js     40920c <__gcov_flush@@Base+0x23c>
  4091fa:	lea    rsi,[rsp+0x41]
  4091ff:	movsxd rdx,ebp
  409202:	mov    rdi,rbx
  409205:	call   403060 <strncpy@plt>
  40920a:	xor    eax,eax
  40920c:	add    rsp,0x188
  409213:	pop    rbx
  409214:	pop    rbp
  409215:	ret    
  409216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409220:	push   rbp
  409221:	push   r14
  409223:	push   rbx
  409224:	sub    rsp,0x20
  409228:	mov    ebx,edi
  40922a:	mov    WORD PTR [rsp+0x2],0x0
  409231:	xorps  xmm0,xmm0
  409234:	movups XMMWORD PTR [rsp+0x8],xmm0
  409239:	call   4030b0 <getpid@plt>
  40923e:	mov    DWORD PTR [rsp+0x18],eax
  409242:	mov    WORD PTR [rsp],0x1
  409248:	mov    r14,rsp
  40924b:	xor    ebp,ebp
  40924d:	nop    DWORD PTR [rax]
  409250:	mov    edi,ebx
  409252:	mov    esi,0x7
  409257:	mov    rdx,r14
  40925a:	xor    eax,eax
  40925c:	call   4030a0 <fcntl@plt>
  409261:	cmp    eax,0xffffffff
  409264:	jne    40927c <__gcov_flush@@Base+0x2ac>
  409266:	call   403050 <__errno_location@plt>
  40926b:	mov    eax,DWORD PTR [rax]
  40926d:	cmp    eax,0x4
  409270:	je     409250 <__gcov_flush@@Base+0x280>
  409272:	cmp    eax,0x25
  409275:	jne    40927c <__gcov_flush@@Base+0x2ac>
  409277:	mov    ebp,0xffffffff
  40927c:	mov    eax,ebp
  40927e:	add    rsp,0x20
  409282:	pop    rbx
  409283:	pop    r14
  409285:	pop    rbp
  409286:	ret    
  409287:	nop    WORD PTR [rax+rax*1+0x0]
  409290:	push   rbp
  409291:	push   r14
  409293:	push   rbx
  409294:	sub    rsp,0x20
  409298:	mov    ebx,edi
  40929a:	mov    WORD PTR [rsp+0x2],0x0
  4092a1:	xorps  xmm0,xmm0
  4092a4:	movups XMMWORD PTR [rsp+0x8],xmm0
  4092a9:	call   4030b0 <getpid@plt>
  4092ae:	mov    DWORD PTR [rsp+0x18],eax
  4092b2:	mov    WORD PTR [rsp],0x2
  4092b8:	mov    r14,rsp
  4092bb:	xor    ebp,ebp
  4092bd:	nop    DWORD PTR [rax]
  4092c0:	mov    edi,ebx
  4092c2:	mov    esi,0x7
  4092c7:	mov    rdx,r14
  4092ca:	xor    eax,eax
  4092cc:	call   4030a0 <fcntl@plt>
  4092d1:	cmp    eax,0xffffffff
  4092d4:	jne    4092ec <__gcov_flush@@Base+0x31c>
  4092d6:	call   403050 <__errno_location@plt>
  4092db:	mov    eax,DWORD PTR [rax]
  4092dd:	cmp    eax,0x4
  4092e0:	je     4092c0 <__gcov_flush@@Base+0x2f0>
  4092e2:	cmp    eax,0x25
  4092e5:	jne    4092ec <__gcov_flush@@Base+0x31c>
  4092e7:	mov    ebp,0xffffffff
  4092ec:	mov    eax,ebp
  4092ee:	add    rsp,0x20
  4092f2:	pop    rbx
  4092f3:	pop    r14
  4092f5:	pop    rbp
  4092f6:	ret    
  4092f7:	nop    WORD PTR [rax+rax*1+0x0]
  409300:	push   rbp
  409301:	push   r14
  409303:	push   rbx
  409304:	sub    rsp,0x20
  409308:	call   4031d0 <fileno@plt>
  40930d:	mov    ebx,eax
  40930f:	mov    WORD PTR [rsp+0x2],0x0
  409316:	xorps  xmm0,xmm0
  409319:	movups XMMWORD PTR [rsp+0x8],xmm0
  40931e:	call   4030b0 <getpid@plt>
  409323:	mov    DWORD PTR [rsp+0x18],eax
  409327:	mov    WORD PTR [rsp],0x1
  40932d:	mov    r14,rsp
  409330:	xor    ebp,ebp
  409332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40933c:	nop    DWORD PTR [rax+0x0]
  409340:	mov    edi,ebx
  409342:	mov    esi,0x7
  409347:	mov    rdx,r14
  40934a:	xor    eax,eax
  40934c:	call   4030a0 <fcntl@plt>
  409351:	cmp    eax,0xffffffff
  409354:	jne    40936c <__gcov_flush@@Base+0x39c>
  409356:	call   403050 <__errno_location@plt>
  40935b:	mov    eax,DWORD PTR [rax]
  40935d:	cmp    eax,0x4
  409360:	je     409340 <__gcov_flush@@Base+0x370>
  409362:	cmp    eax,0x25
  409365:	jne    40936c <__gcov_flush@@Base+0x39c>
  409367:	mov    ebp,0xffffffff
  40936c:	mov    eax,ebp
  40936e:	add    rsp,0x20
  409372:	pop    rbx
  409373:	pop    r14
  409375:	pop    rbp
  409376:	ret    
  409377:	nop    WORD PTR [rax+rax*1+0x0]
  409380:	push   rbp
  409381:	push   r14
  409383:	push   rbx
  409384:	sub    rsp,0x20
  409388:	call   4031d0 <fileno@plt>
  40938d:	mov    ebx,eax
  40938f:	mov    WORD PTR [rsp+0x2],0x0
  409396:	xorps  xmm0,xmm0
  409399:	movups XMMWORD PTR [rsp+0x8],xmm0
  40939e:	call   4030b0 <getpid@plt>
  4093a3:	mov    DWORD PTR [rsp+0x18],eax
  4093a7:	mov    WORD PTR [rsp],0x2
  4093ad:	mov    r14,rsp
  4093b0:	xor    ebp,ebp
  4093b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093bc:	nop    DWORD PTR [rax+0x0]
  4093c0:	mov    edi,ebx
  4093c2:	mov    esi,0x7
  4093c7:	mov    rdx,r14
  4093ca:	xor    eax,eax
  4093cc:	call   4030a0 <fcntl@plt>
  4093d1:	cmp    eax,0xffffffff
  4093d4:	jne    4093ec <__gcov_flush@@Base+0x41c>
  4093d6:	call   403050 <__errno_location@plt>
  4093db:	mov    eax,DWORD PTR [rax]
  4093dd:	cmp    eax,0x4
  4093e0:	je     4093c0 <__gcov_flush@@Base+0x3f0>
  4093e2:	cmp    eax,0x25
  4093e5:	jne    4093ec <__gcov_flush@@Base+0x41c>
  4093e7:	mov    ebp,0xffffffff
  4093ec:	mov    eax,ebp
  4093ee:	add    rsp,0x20
  4093f2:	pop    rbx
  4093f3:	pop    r14
  4093f5:	pop    rbp
  4093f6:	ret    
  4093f7:	nop    WORD PTR [rax+rax*1+0x0]
  409400:	push   rbp
  409401:	push   r14
  409403:	push   rbx
  409404:	sub    rsp,0x20
  409408:	xor    ebx,ebx
  40940a:	mov    esi,0x42
  40940f:	mov    edx,0x1b6
  409414:	xor    eax,eax
  409416:	call   403240 <open@plt>
  40941b:	test   eax,eax
  40941d:	js     40947a <__gcov_flush@@Base+0x4aa>
  40941f:	mov    ebp,eax
  409421:	mov    WORD PTR [rsp+0x2],0x0
  409428:	xorps  xmm0,xmm0
  40942b:	movups XMMWORD PTR [rsp+0x8],xmm0
  409430:	call   4030b0 <getpid@plt>
  409435:	mov    DWORD PTR [rsp+0x18],eax
  409439:	mov    WORD PTR [rsp],0x1
  40943f:	mov    r14,rsp
  409442:	mov    edi,ebp
  409444:	mov    esi,0x7
  409449:	mov    rdx,r14
  40944c:	xor    eax,eax
  40944e:	call   4030a0 <fcntl@plt>
  409453:	cmp    eax,0xffffffff
  409456:	jne    409469 <__gcov_flush@@Base+0x499>
  409458:	call   403050 <__errno_location@plt>
  40945d:	mov    eax,DWORD PTR [rax]
  40945f:	cmp    eax,0x4
  409462:	je     409442 <__gcov_flush@@Base+0x472>
  409464:	cmp    eax,0x25
  409467:	je     409486 <__gcov_flush@@Base+0x4b6>
  409469:	lea    rsi,[rip+0x1863]        # 40acd3 <_IO_stdin_used@@Base+0xcd3>
  409470:	mov    edi,ebp
  409472:	call   403220 <fdopen@plt>
  409477:	mov    rbx,rax
  40947a:	mov    rax,rbx
  40947d:	add    rsp,0x20
  409481:	pop    rbx
  409482:	pop    r14
  409484:	pop    rbp
  409485:	ret    
  409486:	mov    rax,QWORD PTR [rip+0x5b6b]        # 40eff8 <stderr@GLIBC_2.2.5>
  40948d:	mov    rdi,QWORD PTR [rax]
  409490:	lea    rsi,[rip+0x19de]        # 40ae75 <_IO_stdin_used@@Base+0xe75>
  409497:	lea    rdx,[rip+0x1a20]        # 40aebe <_IO_stdin_used@@Base+0xebe>
  40949e:	xor    eax,eax
  4094a0:	call   403180 <fprintf@plt>
  4094a5:	jmp    409469 <__gcov_flush@@Base+0x499>
  4094a7:	nop    WORD PTR [rax+rax*1+0x0]
  4094b0:	push   r15
  4094b2:	push   r14
  4094b4:	push   r12
  4094b6:	push   rbx
  4094b7:	push   rax
  4094b8:	mov    r14,rsi
  4094bb:	mov    r15,rdi
  4094be:	lea    rdi,[rip+0x1a27]        # 40aeec <_IO_stdin_used@@Base+0xeec>
  4094c5:	call   403030 <getenv@plt>
  4094ca:	mov    rbx,rax
  4094cd:	lea    rdi,[rip+0x1a24]        # 40aef8 <_IO_stdin_used@@Base+0xef8>
  4094d4:	call   403030 <getenv@plt>
  4094d9:	mov    QWORD PTR [r14],0x0
  4094e0:	mov    DWORD PTR [r15],0x0
  4094e7:	test   rbx,rbx
  4094ea:	je     409521 <__gcov_flush@@Base+0x551>
  4094ec:	xor    r12d,r12d
  4094ef:	cmp    BYTE PTR [rbx],0x0
  4094f2:	je     409521 <__gcov_flush@@Base+0x551>
  4094f4:	test   rax,rax
  4094f7:	je     409511 <__gcov_flush@@Base+0x541>
  4094f9:	xor    r12d,r12d
  4094fc:	mov    rdi,rax
  4094ff:	xor    esi,esi
  409501:	mov    edx,0xa
  409506:	call   4031a0 <strtol@plt>
  40950b:	test   eax,eax
  40950d:	cmovns r12d,eax
  409511:	mov    DWORD PTR [r15],r12d
  409514:	mov    rdi,rbx
  409517:	call   4030e0 <strlen@plt>
  40951c:	mov    QWORD PTR [r14],rax
  40951f:	jmp    409523 <__gcov_flush@@Base+0x553>
  409521:	xor    ebx,ebx
  409523:	mov    rax,rbx
  409526:	add    rsp,0x8
  40952a:	pop    rbx
  40952b:	pop    r12
  40952d:	pop    r14
  40952f:	pop    r15
  409531:	ret    
  409532:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40953c:	nop    DWORD PTR [rax+0x0]
  409540:	push   r15
  409542:	push   r14
  409544:	push   r12
  409546:	push   rbx
  409547:	push   rax
  409548:	mov    r15,rcx
  40954b:	mov    r12,rdx
  40954e:	mov    rbx,rsi
  409551:	mov    r14,rdi
  409554:	test   r8d,r8d
  409557:	jle    40958b <__gcov_flush@@Base+0x5bb>
  409559:	lea    rax,[rbx+0x1]
  40955d:	xor    ecx,ecx
  40955f:	jmp    40957f <__gcov_flush@@Base+0x5af>
  409561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40956b:	nop    DWORD PTR [rax+rax*1+0x0]
  409570:	add    ecx,0x1
  409573:	mov    rbx,rax
  409576:	add    rax,0x1
  40957a:	cmp    ecx,r8d
  40957d:	jge    40958b <__gcov_flush@@Base+0x5bb>
  40957f:	movzx  edx,BYTE PTR [rax]
  409582:	cmp    dl,0x2f
  409585:	je     409570 <__gcov_flush@@Base+0x5a0>
  409587:	test   dl,dl
  409589:	jne    409576 <__gcov_flush@@Base+0x5a6>
  40958b:	mov    rdi,r14
  40958e:	mov    rsi,r12
  409591:	mov    rdx,r15
  409594:	call   4031b0 <memcpy@plt>
  409599:	cmp    BYTE PTR [r15+r12*1-0x1],0x2f
  40959f:	je     4095aa <__gcov_flush@@Base+0x5da>
  4095a1:	mov    BYTE PTR [r14+r15*1],0x2f
  4095a6:	add    r15,0x1
  4095aa:	add    r14,r15
  4095ad:	mov    rdi,rbx
  4095b0:	call   4030e0 <strlen@plt>
  4095b5:	lea    rdx,[rax+0x1]
  4095b9:	mov    rdi,r14
  4095bc:	mov    rsi,rbx
  4095bf:	add    rsp,0x8
  4095c3:	pop    rbx
  4095c4:	pop    r12
  4095c6:	pop    r14
  4095c8:	pop    r15
  4095ca:	jmp    4031b0 <memcpy@plt>
  4095cf:	nop
  4095d0:	mov    esi,0x2f
  4095d5:	jmp    403110 <strchr@plt>
  4095da:	nop    WORD PTR [rax+rax*1+0x0]
  4095e0:	mov    esi,0x2f
  4095e5:	jmp    403130 <strrchr@plt>
  4095ea:	nop    WORD PTR [rax+rax*1+0x0]
  4095f0:	push   rax
  4095f1:	mov    DWORD PTR [rsp+0x4],0x0
  4095f9:	lea    rsi,[rsp+0x4]
  4095fe:	mov    edi,0x2
  409603:	xor    eax,eax
  409605:	call   4031c0 <prctl@plt>
  40960a:	mov    ecx,DWORD PTR [rsp+0x4]
  40960e:	test   eax,eax
  409610:	jne    409629 <__gcov_flush@@Base+0x659>
  409612:	cmp    ecx,0x9
  409615:	jne    409629 <__gcov_flush@@Base+0x659>
  409617:	mov    edi,0x1
  40961c:	xor    esi,esi
  40961e:	xor    eax,eax
  409620:	call   4031c0 <prctl@plt>
  409625:	mov    ecx,DWORD PTR [rsp+0x4]
  409629:	xor    eax,eax
  40962b:	cmp    ecx,0x9
  40962e:	sete   al
  409631:	pop    rcx
  409632:	ret    
  409633:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40963d:	nop    DWORD PTR [rax]
  409640:	mov    edi,0x1
  409645:	mov    esi,0x9
  40964a:	xor    eax,eax
  40964c:	jmp    4031c0 <prctl@plt>
  409651:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40965b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409660 <__libc_csu_init@@Base>:
  409660:	endbr64 
  409664:	push   r15
  409666:	lea    r15,[rip+0x4a13]        # 40e080 <_IO_stdin_used@@Base+0x4080>
  40966d:	push   r14
  40966f:	mov    r14,rdx
  409672:	push   r13
  409674:	mov    r13,rsi
  409677:	push   r12
  409679:	mov    r12d,edi
  40967c:	push   rbp
  40967d:	lea    rbp,[rip+0x4a24]        # 40e0a8 <_IO_stdin_used@@Base+0x40a8>
  409684:	push   rbx
  409685:	sub    rbp,r15
  409688:	sub    rsp,0x8
  40968c:	call   403000 <getenv@plt-0x30>
  409691:	sar    rbp,0x3
  409695:	je     4096b6 <__libc_csu_init@@Base+0x56>
  409697:	xor    ebx,ebx
  409699:	nop    DWORD PTR [rax+0x0]
  4096a0:	mov    rdx,r14
  4096a3:	mov    rsi,r13
  4096a6:	mov    edi,r12d
  4096a9:	call   QWORD PTR [r15+rbx*8]
  4096ad:	add    rbx,0x1
  4096b1:	cmp    rbp,rbx
  4096b4:	jne    4096a0 <__libc_csu_init@@Base+0x40>
  4096b6:	add    rsp,0x8
  4096ba:	pop    rbx
  4096bb:	pop    rbp
  4096bc:	pop    r12
  4096be:	pop    r13
  4096c0:	pop    r14
  4096c2:	pop    r15
  4096c4:	ret    
  4096c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004096d0 <__libc_csu_fini@@Base>:
  4096d0:	endbr64 
  4096d4:	ret    
  4096d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096df:	nop
  4096e0:	endbr64 
  4096e4:	mov    rdx,QWORD PTR [rip+0x5a6d]        # 40f158 <__data_start@@Base+0x8>
  4096eb:	xor    esi,esi
  4096ed:	jmp    403250 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004096f4 <.fini>:
  4096f4:	endbr64 
  4096f8:	sub    rsp,0x8
  4096fc:	add    rsp,0x8
  409700:	ret    
