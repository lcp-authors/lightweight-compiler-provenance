
../repos/prog2/2.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0xaa>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0xa0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0xa0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0xa0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0xa0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0xa0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0xa0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0xa0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0xa0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0xa0>
  4010bf:	nop

Disassembly of section .plt.sec:

00000000004010c0 <free@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404018 <free@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <puts@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404020 <puts@GLIBC_2.2.5>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <__stack_chk_fail@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404028 <__stack_chk_fail@GLIBC_2.4>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <fgets@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f35]        # 404030 <fgets@GLIBC_2.2.5>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <malloc@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f2d]        # 404038 <malloc@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401110 <realloc@plt>:
  401110:	endbr64 
  401114:	bnd jmp QWORD PTR [rip+0x2f25]        # 404040 <realloc@GLIBC_2.2.5>
  40111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401120 <__printf_chk@plt>:
  401120:	endbr64 
  401124:	bnd jmp QWORD PTR [rip+0x2f1d]        # 404048 <__printf_chk@GLIBC_2.3.4>
  40112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401130 <__isoc99_scanf@plt>:
  401130:	endbr64 
  401134:	bnd jmp QWORD PTR [rip+0x2f15]        # 404050 <__isoc99_scanf@GLIBC_2.7>
  40113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401140 <getc@plt>:
  401140:	endbr64 
  401144:	bnd jmp QWORD PTR [rip+0x2f0d]        # 404058 <getc@GLIBC_2.2.5>
  40114b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401150 <main@@Base>:
  401150:	endbr64 
  401154:	push   r15
  401156:	mov    edi,0x18
  40115b:	push   r14
  40115d:	push   r13
  40115f:	push   r12
  401161:	lea    r12,[rip+0xec0]        # 402028 <_IO_stdin_used@@Base+0x28>
  401168:	push   rbp
  401169:	push   rbx
  40116a:	sub    rsp,0x88
  401171:	mov    rax,QWORD PTR fs:0x28
  40117a:	mov    QWORD PTR [rsp+0x78],rax
  40117f:	xor    eax,eax
  401181:	call   401100 <malloc@plt>
  401186:	mov    QWORD PTR [rax],0x0
  40118d:	mov    QWORD PTR [rax+0x8],0x0
  401195:	mov    QWORD PTR [rax+0x10],0x0
  40119d:	mov    rbp,QWORD PTR [rip+0x2e44]        # 403fe8 <stdin@GLIBC_2.2.5>
  4011a4:	mov    r14,rax
  4011a7:	lea    r13,[rsp+0x1c]
  4011ac:	lea    rbx,[rsp+0x20]
  4011b1:	nop    DWORD PTR [rax+0x0]
  4011b8:	mov    r15d,0x1
  4011be:	mov    edi,0x1
  4011c3:	mov    edx,r15d
  4011c6:	lea    rsi,[rip+0xe37]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011cd:	xor    eax,eax
  4011cf:	call   401120 <__printf_chk@plt>
  4011d4:	mov    rdi,QWORD PTR [r14+r15*8-0x8]
  4011d9:	test   rdi,rdi
  4011dc:	je     401378 <main@@Base+0x228>
  4011e2:	call   4010d0 <puts@plt>
  4011e7:	inc    r15
  4011ea:	cmp    r15,0x4
  4011ee:	jne    4011be <main@@Base+0x6e>
  4011f0:	mov    edx,0x3
  4011f5:	mov    rsi,r12
  4011f8:	mov    edi,0x1
  4011fd:	xor    eax,eax
  4011ff:	call   401120 <__printf_chk@plt>
  401204:	mov    rsi,r13
  401207:	lea    rdi,[rip+0xe04]        # 402012 <_IO_stdin_used@@Base+0x12>
  40120e:	xor    eax,eax
  401210:	call   401130 <__isoc99_scanf@plt>
  401215:	mov    rdi,QWORD PTR [rbp+0x0]
  401219:	call   401140 <getc@plt>
  40121e:	mov    eax,DWORD PTR [rsp+0x1c]
  401222:	cmp    eax,0x3
  401225:	ja     4011f0 <main@@Base+0xa0>
  401227:	test   eax,eax
  401229:	je     401390 <main@@Base+0x240>
  40122f:	lea    rsi,[rip+0xddf]        # 402015 <_IO_stdin_used@@Base+0x15>
  401236:	mov    edi,0x1
  40123b:	xor    eax,eax
  40123d:	call   401120 <__printf_chk@plt>
  401242:	mov    rdx,QWORD PTR [rbp+0x0]
  401246:	mov    esi,0x50
  40124b:	mov    rdi,rbx
  40124e:	call   4010f0 <fgets@plt>
  401253:	mov    rdx,rbx
  401256:	mov    ecx,DWORD PTR [rdx]
  401258:	add    rdx,0x4
  40125c:	lea    eax,[rcx-0x1010101]
  401262:	andn   eax,ecx,eax
  401267:	and    eax,0x80808080
  40126c:	je     401256 <main@@Base+0x106>
  40126e:	mov    ecx,eax
  401270:	shr    ecx,0x10
  401273:	test   eax,0x8080
  401278:	cmove  eax,ecx
  40127b:	lea    rcx,[rdx+0x2]
  40127f:	cmove  rdx,rcx
  401283:	mov    ecx,eax
  401285:	add    cl,al
  401287:	sbb    rdx,0x3
  40128b:	sub    rdx,rbx
  40128e:	mov    BYTE PTR [rsp+rdx*1+0x1f],0x0
  401293:	mov    rsi,rbx
  401296:	mov    edx,DWORD PTR [rsi]
  401298:	add    rsi,0x4
  40129c:	lea    eax,[rdx-0x1010101]
  4012a2:	andn   eax,edx,eax
  4012a7:	and    eax,0x80808080
  4012ac:	je     401296 <main@@Base+0x146>
  4012ae:	mov    edx,eax
  4012b0:	shr    edx,0x10
  4012b3:	test   eax,0x8080
  4012b8:	cmove  eax,edx
  4012bb:	lea    rdx,[rsi+0x2]
  4012bf:	cmove  rsi,rdx
  4012c3:	mov    ecx,eax
  4012c5:	add    cl,al
  4012c7:	movsxd rax,DWORD PTR [rsp+0x1c]
  4012cc:	sbb    rsi,0x3
  4012d0:	lea    rcx,[r14+rax*8-0x8]
  4012d5:	sub    rsi,rbx
  4012d8:	mov    rdi,QWORD PTR [rcx]
  4012db:	lea    r15,[rsi+0x1]
  4012df:	mov    rsi,r15
  4012e2:	mov    QWORD PTR [rsp+0x8],rcx
  4012e7:	call   401110 <realloc@plt>
  4012ec:	mov    rcx,QWORD PTR [rsp+0x8]
  4012f1:	mov    QWORD PTR [rcx],rax
  4012f4:	movsxd rax,DWORD PTR [rsp+0x1c]
  4012f9:	mov    rcx,QWORD PTR [r14+rax*8-0x8]
  4012fe:	cmp    r15d,0x8
  401302:	jae    401340 <main@@Base+0x1f0>
  401304:	test   r15b,0x4
  401308:	jne    4013e0 <main@@Base+0x290>
  40130e:	test   r15d,r15d
  401311:	je     4011b8 <main@@Base+0x68>
  401317:	movzx  eax,BYTE PTR [rbx]
  40131a:	mov    BYTE PTR [rcx],al
  40131c:	test   r15b,0x2
  401320:	je     4011b8 <main@@Base+0x68>
  401326:	mov    edx,r15d
  401329:	movzx  eax,WORD PTR [rbx+rdx*1-0x2]
  40132e:	mov    WORD PTR [rcx+rdx*1-0x2],ax
  401333:	jmp    4011b8 <main@@Base+0x68>
  401338:	nop    DWORD PTR [rax+rax*1+0x0]
  401340:	mov    rax,QWORD PTR [rbx]
  401343:	lea    rdi,[rcx+0x8]
  401347:	mov    QWORD PTR [rcx],rax
  40134a:	mov    eax,r15d
  40134d:	and    rdi,0xfffffffffffffff8
  401351:	mov    rsi,QWORD PTR [rbx+rax*1-0x8]
  401356:	mov    QWORD PTR [rcx+rax*1-0x8],rsi
  40135b:	sub    rcx,rdi
  40135e:	mov    rsi,rbx
  401361:	sub    rsi,rcx
  401364:	add    ecx,r15d
  401367:	shr    ecx,0x3
  40136a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40136d:	jmp    4011b8 <main@@Base+0x68>
  401372:	nop    WORD PTR [rax+rax*1+0x0]
  401378:	lea    rdi,[rip+0xc8b]        # 40200a <_IO_stdin_used@@Base+0xa>
  40137f:	call   4010d0 <puts@plt>
  401384:	jmp    4011e7 <main@@Base+0x97>
  401389:	nop    DWORD PTR [rax+0x0]
  401390:	mov    rdi,QWORD PTR [r14]
  401393:	call   4010c0 <free@plt>
  401398:	mov    rdi,QWORD PTR [r14+0x8]
  40139c:	call   4010c0 <free@plt>
  4013a1:	mov    rdi,QWORD PTR [r14+0x10]
  4013a5:	call   4010c0 <free@plt>
  4013aa:	mov    rdi,r14
  4013ad:	call   4010c0 <free@plt>
  4013b2:	xor    eax,eax
  4013b4:	mov    rbx,QWORD PTR [rsp+0x78]
  4013b9:	xor    rbx,QWORD PTR fs:0x28
  4013c2:	jne    4013f4 <main@@Base+0x2a4>
  4013c4:	add    rsp,0x88
  4013cb:	pop    rbx
  4013cc:	pop    rbp
  4013cd:	pop    r12
  4013cf:	pop    r13
  4013d1:	pop    r14
  4013d3:	pop    r15
  4013d5:	ret    
  4013d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013e0:	mov    eax,DWORD PTR [rbx]
  4013e2:	mov    edx,r15d
  4013e5:	mov    DWORD PTR [rcx],eax
  4013e7:	mov    eax,DWORD PTR [rbx+rdx*1-0x4]
  4013eb:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
  4013ef:	jmp    4011b8 <main@@Base+0x68>
  4013f4:	call   4010e0 <__stack_chk_fail@plt>
  4013f9:	nop    DWORD PTR [rax+0x0]

0000000000401400 <_start@@Base>:
  401400:	endbr64 
  401404:	xor    ebp,ebp
  401406:	mov    r9,rdx
  401409:	pop    rsi
  40140a:	mov    rdx,rsp
  40140d:	and    rsp,0xfffffffffffffff0
  401411:	push   rax
  401412:	push   rsp
  401413:	mov    r8,0x401560
  40141a:	mov    rcx,0x4014f0
  401421:	mov    rdi,0x401150
  401428:	call   QWORD PTR [rip+0x2bc2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40142e:	hlt    
  40142f:	nop
  401430:	endbr64 
  401434:	ret    
  401435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40143f:	nop
  401440:	mov    eax,0x404070
  401445:	cmp    rax,0x404070
  40144b:	je     401460 <_start@@Base+0x60>
  40144d:	mov    eax,0x0
  401452:	test   rax,rax
  401455:	je     401460 <_start@@Base+0x60>
  401457:	mov    edi,0x404070
  40145c:	jmp    rax
  40145e:	xchg   ax,ax
  401460:	ret    
  401461:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40146c:	nop    DWORD PTR [rax+0x0]
  401470:	mov    esi,0x404070
  401475:	sub    rsi,0x404070
  40147c:	sar    rsi,0x3
  401480:	mov    rax,rsi
  401483:	shr    rax,0x3f
  401487:	add    rsi,rax
  40148a:	sar    rsi,1
  40148d:	je     4014a0 <_start@@Base+0xa0>
  40148f:	mov    eax,0x0
  401494:	test   rax,rax
  401497:	je     4014a0 <_start@@Base+0xa0>
  401499:	mov    edi,0x404070
  40149e:	jmp    rax
  4014a0:	ret    
  4014a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014ac:	nop    DWORD PTR [rax+0x0]
  4014b0:	endbr64 
  4014b4:	cmp    BYTE PTR [rip+0x2bb5],0x0        # 404070 <__bss_start@@Base>
  4014bb:	jne    4014d0 <_start@@Base+0xd0>
  4014bd:	push   rbp
  4014be:	mov    rbp,rsp
  4014c1:	call   401440 <_start@@Base+0x40>
  4014c6:	mov    BYTE PTR [rip+0x2ba3],0x1        # 404070 <__bss_start@@Base>
  4014cd:	pop    rbp
  4014ce:	ret    
  4014cf:	nop
  4014d0:	ret    
  4014d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014dc:	nop    DWORD PTR [rax+0x0]
  4014e0:	endbr64 
  4014e4:	jmp    401470 <_start@@Base+0x70>
  4014e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004014f0 <__libc_csu_init@@Base>:
  4014f0:	endbr64 
  4014f4:	push   r15
  4014f6:	lea    r15,[rip+0x290b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  4014fd:	push   r14
  4014ff:	mov    r14,rdx
  401502:	push   r13
  401504:	mov    r13,rsi
  401507:	push   r12
  401509:	mov    r12d,edi
  40150c:	push   rbp
  40150d:	lea    rbp,[rip+0x28fc]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401514:	push   rbx
  401515:	sub    rbp,r15
  401518:	sub    rsp,0x8
  40151c:	call   401000 <free@plt-0xc0>
  401521:	sar    rbp,0x3
  401525:	je     401546 <__libc_csu_init@@Base+0x56>
  401527:	xor    ebx,ebx
  401529:	nop    DWORD PTR [rax+0x0]
  401530:	mov    rdx,r14
  401533:	mov    rsi,r13
  401536:	mov    edi,r12d
  401539:	call   QWORD PTR [r15+rbx*8]
  40153d:	add    rbx,0x1
  401541:	cmp    rbp,rbx
  401544:	jne    401530 <__libc_csu_init@@Base+0x40>
  401546:	add    rsp,0x8
  40154a:	pop    rbx
  40154b:	pop    rbp
  40154c:	pop    r12
  40154e:	pop    r13
  401550:	pop    r14
  401552:	pop    r15
  401554:	ret    
  401555:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401560 <__libc_csu_fini@@Base>:
  401560:	endbr64 
  401564:	ret    

Disassembly of section .fini:

0000000000401568 <.fini>:
  401568:	endbr64 
  40156c:	sub    rsp,0x8
  401570:	add    rsp,0x8
  401574:	ret    
