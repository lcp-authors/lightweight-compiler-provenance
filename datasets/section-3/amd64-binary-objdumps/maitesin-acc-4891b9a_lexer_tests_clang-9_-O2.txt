
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xdfe1]        # 410ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xdfe2]        # 411008 <UnitySizeMask@@Base+0x49f8>
  403026:	jmp    QWORD PTR [rip+0xdfe4]        # 411010 <UnitySizeMask@@Base+0x4a00>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xdfe2]        # 411018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xdfda]        # 411020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xdfd2]        # 411028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xdfca]        # 411030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <mkdir@plt>:
  403070:	jmp    QWORD PTR [rip+0xdfc2]        # 411038 <mkdir@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <fcntl@plt>:
  403080:	jmp    QWORD PTR [rip+0xdfba]        # 411040 <fcntl@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <getpid@plt>:
  403090:	jmp    QWORD PTR [rip+0xdfb2]        # 411048 <getpid@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <fclose@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xdfaa]        # 411050 <fclose@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <msync@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xdfa2]        # 411058 <msync@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <strlen@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xdf9a]        # 411060 <strlen@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <mmap@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xdf92]        # 411068 <mmap@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strchr@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xdf8a]        # 411070 <strchr@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <strrchr@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xdf82]        # 411078 <strrchr@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <uname@plt>:
  403100:	jmp    QWORD PTR [rip+0xdf7a]        # 411080 <uname@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <memset@plt>:
  403110:	jmp    QWORD PTR [rip+0xdf72]        # 411088 <memset@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <_setjmp@plt>:
  403120:	jmp    QWORD PTR [rip+0xdf6a]        # 411090 <_setjmp@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <putc@plt>:
  403130:	jmp    QWORD PTR [rip+0xdf62]        # 411098 <putc@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <fprintf@plt>:
  403140:	jmp    QWORD PTR [rip+0xdf5a]        # 4110a0 <fprintf@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <ftell@plt>:
  403150:	jmp    QWORD PTR [rip+0xdf52]        # 4110a8 <ftell@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <strtol@plt>:
  403160:	jmp    QWORD PTR [rip+0xdf4a]        # 4110b0 <strtol@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <memcpy@plt>:
  403170:	jmp    QWORD PTR [rip+0xdf42]        # 4110b8 <memcpy@GLIBC_2.14>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <prctl@plt>:
  403180:	jmp    QWORD PTR [rip+0xdf3a]        # 4110c0 <prctl@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <fileno@plt>:
  403190:	jmp    QWORD PTR [rip+0xdf32]        # 4110c8 <fileno@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <malloc@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xdf2a]        # 4110d0 <malloc@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <fflush@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xdf22]        # 4110d8 <fflush@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <fseek@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xdf1a]        # 4110e0 <fseek@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <realloc@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xdf12]        # 4110e8 <realloc@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fdopen@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xdf0a]        # 4110f0 <fdopen@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <munmap@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xdf02]        # 4110f8 <munmap@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <longjmp@plt>:
  403200:	jmp    QWORD PTR [rip+0xdefa]        # 411100 <longjmp@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <open@plt>:
  403210:	jmp    QWORD PTR [rip+0xdef2]        # 411108 <open@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <__cxa_atexit@plt>:
  403220:	jmp    QWORD PTR [rip+0xdeea]        # 411110 <__cxa_atexit@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <exit@plt>:
  403230:	jmp    QWORD PTR [rip+0xdee2]        # 411118 <exit@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <fwrite@plt>:
  403240:	jmp    QWORD PTR [rip+0xdeda]        # 411120 <fwrite@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <strdup@plt>:
  403250:	jmp    QWORD PTR [rip+0xded2]        # 411128 <strdup@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <strerror@plt>:
  403260:	jmp    QWORD PTR [rip+0xdeca]        # 411130 <strerror@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403270 <_start@@Base>:
  403270:	endbr64 
  403274:	xor    ebp,ebp
  403276:	mov    r9,rdx
  403279:	pop    rsi
  40327a:	mov    rdx,rsp
  40327d:	and    rsp,0xfffffffffffffff0
  403281:	push   rax
  403282:	push   rsp
  403283:	mov    r8,0x40b090
  40328a:	mov    rcx,0x40b020
  403291:	mov    rdi,0x404570
  403298:	call   QWORD PTR [rip+0xdd4a]        # 410fe8 <__libc_start_main@GLIBC_2.2.5>
  40329e:	hlt    
  40329f:	nop
  4032a0:	endbr64 
  4032a4:	ret    
  4032a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032af:	nop
  4032b0:	mov    eax,0x411150
  4032b5:	cmp    rax,0x411150
  4032bb:	je     4032d0 <_start@@Base+0x60>
  4032bd:	mov    eax,0x0
  4032c2:	test   rax,rax
  4032c5:	je     4032d0 <_start@@Base+0x60>
  4032c7:	mov    edi,0x411150
  4032cc:	jmp    rax
  4032ce:	xchg   ax,ax
  4032d0:	ret    
  4032d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032dc:	nop    DWORD PTR [rax+0x0]
  4032e0:	mov    esi,0x411150
  4032e5:	sub    rsi,0x411150
  4032ec:	mov    rax,rsi
  4032ef:	shr    rsi,0x3f
  4032f3:	sar    rax,0x3
  4032f7:	add    rsi,rax
  4032fa:	sar    rsi,1
  4032fd:	je     403310 <_start@@Base+0xa0>
  4032ff:	mov    eax,0x0
  403304:	test   rax,rax
  403307:	je     403310 <_start@@Base+0xa0>
  403309:	mov    edi,0x411150
  40330e:	jmp    rax
  403310:	ret    
  403311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40331c:	nop    DWORD PTR [rax+0x0]
  403320:	endbr64 
  403324:	cmp    BYTE PTR [rip+0xde25],0x0        # 411150 <__bss_start@@Base>
  40332b:	jne    403340 <_start@@Base+0xd0>
  40332d:	push   rbp
  40332e:	mov    rbp,rsp
  403331:	call   4032b0 <_start@@Base+0x40>
  403336:	mov    BYTE PTR [rip+0xde13],0x1        # 411150 <__bss_start@@Base>
  40333d:	pop    rbp
  40333e:	ret    
  40333f:	nop
  403340:	ret    
  403341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	endbr64 
  403354:	jmp    4032e0 <_start@@Base+0x70>
  403356:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403360 <simple_file_only_main@@Base>:
  403360:	push   rbx
  403361:	sub    rsp,0x20
  403365:	vmovdqa xmm0,XMMWORD PTR [rip+0xddf3]        # 411160 <__bss_start@@Base+0x10>
  40336d:	vpcmpeqd xmm1,xmm1,xmm1
  403371:	vpsubq xmm0,xmm0,xmm1
  403375:	vmovdqa XMMWORD PTR [rip+0xdde3],xmm0        # 411160 <__bss_start@@Base+0x10>
  40337d:	lea    rsi,[rip+0x8c80]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403384:	lea    rbx,[rsp+0x8]
  403389:	mov    rdi,rbx
  40338c:	call   408050 <init_lexer@@Base>
  403391:	mov    rdi,rbx
  403394:	call   408260 <next@@Base>
  403399:	mov    esi,DWORD PTR [rax]
  40339b:	mov    ecx,0x17
  4033a0:	xor    edi,edi
  4033a2:	xor    edx,edx
  4033a4:	mov    r8d,0x94
  4033aa:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4033af:	mov    rdi,rbx
  4033b2:	call   408260 <next@@Base>
  4033b7:	mov    esi,DWORD PTR [rax]
  4033b9:	mov    edi,0x2
  4033be:	mov    ecx,0x19
  4033c3:	xor    edx,edx
  4033c5:	mov    r8d,0x94
  4033cb:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4033d0:	mov    rdi,rbx
  4033d3:	call   408260 <next@@Base>
  4033d8:	mov    esi,DWORD PTR [rax]
  4033da:	mov    edi,0x3
  4033df:	mov    ecx,0x1b
  4033e4:	xor    edx,edx
  4033e6:	mov    r8d,0x94
  4033ec:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4033f1:	mov    rdi,rbx
  4033f4:	call   408260 <next@@Base>
  4033f9:	mov    esi,DWORD PTR [rax]
  4033fb:	mov    edi,0x4
  403400:	mov    ecx,0x1d
  403405:	xor    edx,edx
  403407:	mov    r8d,0x94
  40340d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403412:	mov    rdi,rbx
  403415:	call   408260 <next@@Base>
  40341a:	mov    esi,DWORD PTR [rax]
  40341c:	mov    edi,0x5
  403421:	mov    ecx,0x1f
  403426:	xor    edx,edx
  403428:	mov    r8d,0x94
  40342e:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403433:	mov    rdi,rbx
  403436:	call   408260 <next@@Base>
  40343b:	mov    esi,DWORD PTR [rax]
  40343d:	mov    edi,0x7
  403442:	mov    ecx,0x21
  403447:	xor    edx,edx
  403449:	mov    r8d,0x94
  40344f:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403454:	mov    rdi,rbx
  403457:	call   408260 <next@@Base>
  40345c:	mov    esi,DWORD PTR [rax]
  40345e:	mov    edi,0x1
  403463:	mov    ecx,0x23
  403468:	xor    edx,edx
  40346a:	mov    r8d,0x94
  403470:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403475:	mov    rdi,rbx
  403478:	call   408260 <next@@Base>
  40347d:	mov    esi,DWORD PTR [rax]
  40347f:	mov    edi,0x8
  403484:	mov    ecx,0x25
  403489:	xor    edx,edx
  40348b:	mov    r8d,0x94
  403491:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403496:	mov    rdi,rbx
  403499:	call   408260 <next@@Base>
  40349e:	mov    esi,DWORD PTR [rax]
  4034a0:	mov    edi,0x6
  4034a5:	mov    ecx,0x27
  4034aa:	xor    edx,edx
  4034ac:	mov    r8d,0x94
  4034b2:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4034b7:	mov    rdi,rbx
  4034ba:	call   408260 <next@@Base>
  4034bf:	mov    esi,DWORD PTR [rax]
  4034c1:	mov    edi,0x9
  4034c6:	mov    ecx,0x29
  4034cb:	xor    edx,edx
  4034cd:	mov    r8d,0x94
  4034d3:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4034d8:	mov    rdi,rbx
  4034db:	call   408080 <destroy_lexer@@Base>
  4034e0:	add    rsp,0x20
  4034e4:	pop    rbx
  4034e5:	ret    
  4034e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004034f0 <push_token_to_stack@@Base>:
  4034f0:	push   r14
  4034f2:	push   rbx
  4034f3:	sub    rsp,0x18
  4034f7:	vmovdqa xmm0,XMMWORD PTR [rip+0xdc71]        # 411170 <__bss_start@@Base+0x20>
  4034ff:	vpcmpeqd xmm1,xmm1,xmm1
  403503:	vpsubq xmm0,xmm0,xmm1
  403507:	vmovdqa XMMWORD PTR [rip+0xdc61],xmm0        # 411170 <__bss_start@@Base+0x20>
  40350f:	lea    rsi,[rip+0x8aee]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403516:	mov    r14,rsp
  403519:	mov    rdi,r14
  40351c:	call   408050 <init_lexer@@Base>
  403521:	mov    edi,0x8
  403526:	call   4031a0 <malloc@plt>
  40352b:	mov    rbx,rax
  40352e:	mov    rdi,r14
  403531:	mov    rsi,rax
  403534:	call   408100 <push_back@@Base>
  403539:	mov    rax,QWORD PTR [rsp+0x8]
  40353e:	mov    rdi,QWORD PTR [rax+0x8]
  403542:	mov    ecx,0x3e
  403547:	mov    rsi,rbx
  40354a:	xor    edx,edx
  40354c:	mov    r8d,0x94
  403552:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403557:	mov    rdi,r14
  40355a:	call   408080 <destroy_lexer@@Base>
  40355f:	mov    rdi,rbx
  403562:	call   403040 <free@plt>
  403567:	add    rsp,0x18
  40356b:	pop    rbx
  40356c:	pop    r14
  40356e:	ret    
  40356f:	nop

0000000000403570 <push_two_tokens_to_stack@@Base>:
  403570:	push   r15
  403572:	push   r14
  403574:	push   rbx
  403575:	sub    rsp,0x20
  403579:	vmovdqa xmm0,XMMWORD PTR [rip+0xdbff]        # 411180 <__bss_start@@Base+0x30>
  403581:	vpcmpeqd xmm1,xmm1,xmm1
  403585:	vpsubq xmm0,xmm0,xmm1
  403589:	vmovdqa XMMWORD PTR [rip+0xdbef],xmm0        # 411180 <__bss_start@@Base+0x30>
  403591:	lea    rsi,[rip+0x8a6c]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403598:	lea    r14,[rsp+0x8]
  40359d:	mov    rdi,r14
  4035a0:	call   408050 <init_lexer@@Base>
  4035a5:	mov    edi,0x8
  4035aa:	call   4031a0 <malloc@plt>
  4035af:	mov    r15,rax
  4035b2:	mov    edi,0x8
  4035b7:	call   4031a0 <malloc@plt>
  4035bc:	mov    rbx,rax
  4035bf:	mov    rdi,r14
  4035c2:	mov    rsi,r15
  4035c5:	call   408100 <push_back@@Base>
  4035ca:	mov    rax,QWORD PTR [rsp+0x10]
  4035cf:	mov    rdi,QWORD PTR [rax+0x8]
  4035d3:	mov    ecx,0x56
  4035d8:	mov    rsi,r15
  4035db:	xor    edx,edx
  4035dd:	mov    r8d,0x94
  4035e3:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4035e8:	mov    rdi,r14
  4035eb:	mov    rsi,rbx
  4035ee:	call   408100 <push_back@@Base>
  4035f3:	mov    rax,QWORD PTR [rsp+0x10]
  4035f8:	mov    rdi,QWORD PTR [rax+0x8]
  4035fc:	mov    ecx,0x58
  403601:	mov    rsi,rbx
  403604:	xor    edx,edx
  403606:	mov    r8d,0x94
  40360c:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403611:	mov    rdi,r14
  403614:	call   408080 <destroy_lexer@@Base>
  403619:	mov    rdi,r15
  40361c:	call   403040 <free@plt>
  403621:	mov    rdi,rbx
  403624:	call   403040 <free@plt>
  403629:	add    rsp,0x20
  40362d:	pop    rbx
  40362e:	pop    r14
  403630:	pop    r15
  403632:	ret    
  403633:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40363d:	nop    DWORD PTR [rax]

0000000000403640 <push_token_and_call_next@@Base>:
  403640:	push   r14
  403642:	push   rbx
  403643:	sub    rsp,0x18
  403647:	vmovdqa xmm0,XMMWORD PTR [rip+0xdb41]        # 411190 <__bss_start@@Base+0x40>
  40364f:	vpcmpeqd xmm1,xmm1,xmm1
  403653:	vpsubq xmm0,xmm0,xmm1
  403657:	vmovdqa XMMWORD PTR [rip+0xdb31],xmm0        # 411190 <__bss_start@@Base+0x40>
  40365f:	lea    rsi,[rip+0x899e]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403666:	mov    r14,rsp
  403669:	mov    rdi,r14
  40366c:	call   408050 <init_lexer@@Base>
  403671:	mov    edi,0x8
  403676:	call   4031a0 <malloc@plt>
  40367b:	mov    rbx,rax
  40367e:	mov    rdi,r14
  403681:	mov    rsi,rax
  403684:	call   408100 <push_back@@Base>
  403689:	mov    rdi,r14
  40368c:	call   408260 <next@@Base>
  403691:	mov    ecx,0x71
  403696:	mov    rdi,rbx
  403699:	mov    rsi,rax
  40369c:	xor    edx,edx
  40369e:	mov    r8d,0x94
  4036a4:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4036a9:	mov    rdi,r14
  4036ac:	call   408080 <destroy_lexer@@Base>
  4036b1:	mov    rdi,rbx
  4036b4:	call   403040 <free@plt>
  4036b9:	add    rsp,0x18
  4036bd:	pop    rbx
  4036be:	pop    r14
  4036c0:	ret    
  4036c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036d0 <if_without_else@@Base>:
  4036d0:	push   rbx
  4036d1:	sub    rsp,0x20
  4036d5:	vmovdqa xmm0,XMMWORD PTR [rip+0xdac3]        # 4111a0 <__bss_start@@Base+0x50>
  4036dd:	vpcmpeqd xmm1,xmm1,xmm1
  4036e1:	vpsubq xmm0,xmm0,xmm1
  4036e5:	vmovdqa XMMWORD PTR [rip+0xdab3],xmm0        # 4111a0 <__bss_start@@Base+0x50>
  4036ed:	lea    rsi,[rip+0x892a]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  4036f4:	lea    rbx,[rsp+0x8]
  4036f9:	mov    rdi,rbx
  4036fc:	call   408050 <init_lexer@@Base>
  403701:	mov    rdi,rbx
  403704:	call   408260 <next@@Base>
  403709:	mov    esi,DWORD PTR [rax]
  40370b:	mov    ecx,0x8c
  403710:	xor    edi,edi
  403712:	xor    edx,edx
  403714:	mov    r8d,0x94
  40371a:	call   4058a0 <UnityAssertEqualNumber@@Base>
  40371f:	mov    rdi,rbx
  403722:	call   408260 <next@@Base>
  403727:	mov    esi,DWORD PTR [rax]
  403729:	mov    edi,0x2
  40372e:	mov    ecx,0x8e
  403733:	xor    edx,edx
  403735:	mov    r8d,0x94
  40373b:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403740:	mov    rdi,rbx
  403743:	call   408260 <next@@Base>
  403748:	mov    esi,DWORD PTR [rax]
  40374a:	mov    edi,0x3
  40374f:	mov    ecx,0x90
  403754:	xor    edx,edx
  403756:	mov    r8d,0x94
  40375c:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403761:	mov    rdi,rbx
  403764:	call   408260 <next@@Base>
  403769:	mov    esi,DWORD PTR [rax]
  40376b:	mov    edi,0x4
  403770:	mov    ecx,0x92
  403775:	xor    edx,edx
  403777:	mov    r8d,0x94
  40377d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403782:	mov    rdi,rbx
  403785:	call   408260 <next@@Base>
  40378a:	mov    esi,DWORD PTR [rax]
  40378c:	mov    edi,0x5
  403791:	mov    ecx,0x94
  403796:	xor    edx,edx
  403798:	mov    r8d,0x94
  40379e:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4037a3:	mov    rdi,rbx
  4037a6:	call   408260 <next@@Base>
  4037ab:	mov    esi,DWORD PTR [rax]
  4037ad:	mov    edi,0xa
  4037b2:	mov    ecx,0x96
  4037b7:	xor    edx,edx
  4037b9:	mov    r8d,0x94
  4037bf:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4037c4:	mov    rdi,rbx
  4037c7:	call   408260 <next@@Base>
  4037cc:	mov    esi,DWORD PTR [rax]
  4037ce:	mov    edi,0x3
  4037d3:	mov    ecx,0x98
  4037d8:	xor    edx,edx
  4037da:	mov    r8d,0x94
  4037e0:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4037e5:	mov    rdi,rbx
  4037e8:	call   408260 <next@@Base>
  4037ed:	mov    esi,DWORD PTR [rax]
  4037ef:	mov    edi,0x1
  4037f4:	mov    ecx,0x9a
  4037f9:	xor    edx,edx
  4037fb:	mov    r8d,0x94
  403801:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403806:	mov    rdi,rbx
  403809:	call   408260 <next@@Base>
  40380e:	mov    esi,DWORD PTR [rax]
  403810:	mov    edi,0xc
  403815:	mov    ecx,0x9c
  40381a:	xor    edx,edx
  40381c:	mov    r8d,0x94
  403822:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403827:	mov    rdi,rbx
  40382a:	call   408260 <next@@Base>
  40382f:	mov    esi,DWORD PTR [rax]
  403831:	mov    edi,0x1
  403836:	mov    ecx,0x9e
  40383b:	xor    edx,edx
  40383d:	mov    r8d,0x94
  403843:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403848:	mov    rdi,rbx
  40384b:	call   408260 <next@@Base>
  403850:	mov    esi,DWORD PTR [rax]
  403852:	mov    edi,0x4
  403857:	mov    ecx,0xa0
  40385c:	xor    edx,edx
  40385e:	mov    r8d,0x94
  403864:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403869:	mov    rdi,rbx
  40386c:	call   408260 <next@@Base>
  403871:	mov    esi,DWORD PTR [rax]
  403873:	mov    edi,0x5
  403878:	mov    ecx,0xa2
  40387d:	xor    edx,edx
  40387f:	mov    r8d,0x94
  403885:	call   4058a0 <UnityAssertEqualNumber@@Base>
  40388a:	mov    rdi,rbx
  40388d:	call   408260 <next@@Base>
  403892:	mov    esi,DWORD PTR [rax]
  403894:	mov    edi,0x7
  403899:	mov    ecx,0xa4
  40389e:	xor    edx,edx
  4038a0:	mov    r8d,0x94
  4038a6:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4038ab:	mov    rdi,rbx
  4038ae:	call   408260 <next@@Base>
  4038b3:	mov    esi,DWORD PTR [rax]
  4038b5:	mov    edi,0x1
  4038ba:	mov    ecx,0xa6
  4038bf:	xor    edx,edx
  4038c1:	mov    r8d,0x94
  4038c7:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4038cc:	mov    rdi,rbx
  4038cf:	call   408260 <next@@Base>
  4038d4:	mov    esi,DWORD PTR [rax]
  4038d6:	mov    edi,0x8
  4038db:	mov    ecx,0xa8
  4038e0:	xor    edx,edx
  4038e2:	mov    r8d,0x94
  4038e8:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4038ed:	mov    rdi,rbx
  4038f0:	call   408260 <next@@Base>
  4038f5:	mov    esi,DWORD PTR [rax]
  4038f7:	mov    edi,0x6
  4038fc:	mov    ecx,0xaa
  403901:	xor    edx,edx
  403903:	mov    r8d,0x94
  403909:	call   4058a0 <UnityAssertEqualNumber@@Base>
  40390e:	mov    rdi,rbx
  403911:	call   408260 <next@@Base>
  403916:	mov    esi,DWORD PTR [rax]
  403918:	mov    edi,0x7
  40391d:	mov    ecx,0xac
  403922:	xor    edx,edx
  403924:	mov    r8d,0x94
  40392a:	call   4058a0 <UnityAssertEqualNumber@@Base>
  40392f:	mov    rdi,rbx
  403932:	call   408260 <next@@Base>
  403937:	mov    esi,DWORD PTR [rax]
  403939:	mov    edi,0x1
  40393e:	mov    ecx,0xae
  403943:	xor    edx,edx
  403945:	mov    r8d,0x94
  40394b:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403950:	mov    rdi,rbx
  403953:	call   408260 <next@@Base>
  403958:	mov    esi,DWORD PTR [rax]
  40395a:	mov    edi,0x8
  40395f:	mov    ecx,0xb0
  403964:	xor    edx,edx
  403966:	mov    r8d,0x94
  40396c:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403971:	mov    rdi,rbx
  403974:	call   408260 <next@@Base>
  403979:	mov    esi,DWORD PTR [rax]
  40397b:	mov    edi,0x6
  403980:	mov    ecx,0xb2
  403985:	xor    edx,edx
  403987:	mov    r8d,0x94
  40398d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403992:	mov    rdi,rbx
  403995:	call   408260 <next@@Base>
  40399a:	mov    esi,DWORD PTR [rax]
  40399c:	mov    edi,0x9
  4039a1:	mov    ecx,0xb4
  4039a6:	xor    edx,edx
  4039a8:	mov    r8d,0x94
  4039ae:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4039b3:	mov    rdi,rbx
  4039b6:	call   408080 <destroy_lexer@@Base>
  4039bb:	add    rsp,0x20
  4039bf:	pop    rbx
  4039c0:	ret    
  4039c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039d0 <if_with_else@@Base>:
  4039d0:	push   rbx
  4039d1:	sub    rsp,0x20
  4039d5:	vmovdqa xmm0,XMMWORD PTR [rip+0xd7d3]        # 4111b0 <__bss_start@@Base+0x60>
  4039dd:	vpcmpeqd xmm1,xmm1,xmm1
  4039e1:	vpsubq xmm0,xmm0,xmm1
  4039e5:	vmovdqa XMMWORD PTR [rip+0xd7c3],xmm0        # 4111b0 <__bss_start@@Base+0x60>
  4039ed:	lea    rsi,[rip+0x8663]        # 40c057 <_IO_stdin_used@@Base+0x57>
  4039f4:	lea    rbx,[rsp+0x8]
  4039f9:	mov    rdi,rbx
  4039fc:	call   408050 <init_lexer@@Base>
  403a01:	mov    rdi,rbx
  403a04:	call   408260 <next@@Base>
  403a09:	mov    esi,DWORD PTR [rax]
  403a0b:	mov    ecx,0xd2
  403a10:	xor    edi,edi
  403a12:	xor    edx,edx
  403a14:	mov    r8d,0x94
  403a1a:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403a1f:	mov    rdi,rbx
  403a22:	call   408260 <next@@Base>
  403a27:	mov    esi,DWORD PTR [rax]
  403a29:	mov    edi,0x2
  403a2e:	mov    ecx,0xd4
  403a33:	xor    edx,edx
  403a35:	mov    r8d,0x94
  403a3b:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403a40:	mov    rdi,rbx
  403a43:	call   408260 <next@@Base>
  403a48:	mov    esi,DWORD PTR [rax]
  403a4a:	mov    edi,0x3
  403a4f:	mov    ecx,0xd6
  403a54:	xor    edx,edx
  403a56:	mov    r8d,0x94
  403a5c:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403a61:	mov    rdi,rbx
  403a64:	call   408260 <next@@Base>
  403a69:	mov    esi,DWORD PTR [rax]
  403a6b:	mov    edi,0x4
  403a70:	mov    ecx,0xd8
  403a75:	xor    edx,edx
  403a77:	mov    r8d,0x94
  403a7d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403a82:	mov    rdi,rbx
  403a85:	call   408260 <next@@Base>
  403a8a:	mov    esi,DWORD PTR [rax]
  403a8c:	mov    edi,0x5
  403a91:	mov    ecx,0xda
  403a96:	xor    edx,edx
  403a98:	mov    r8d,0x94
  403a9e:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403aa3:	mov    rdi,rbx
  403aa6:	call   408260 <next@@Base>
  403aab:	mov    esi,DWORD PTR [rax]
  403aad:	mov    edi,0xa
  403ab2:	mov    ecx,0xdc
  403ab7:	xor    edx,edx
  403ab9:	mov    r8d,0x94
  403abf:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403ac4:	mov    rdi,rbx
  403ac7:	call   408260 <next@@Base>
  403acc:	mov    esi,DWORD PTR [rax]
  403ace:	mov    edi,0x3
  403ad3:	mov    ecx,0xde
  403ad8:	xor    edx,edx
  403ada:	mov    r8d,0x94
  403ae0:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403ae5:	mov    rdi,rbx
  403ae8:	call   408260 <next@@Base>
  403aed:	mov    esi,DWORD PTR [rax]
  403aef:	mov    edi,0x1
  403af4:	mov    ecx,0xe0
  403af9:	xor    edx,edx
  403afb:	mov    r8d,0x94
  403b01:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403b06:	mov    rdi,rbx
  403b09:	call   408260 <next@@Base>
  403b0e:	mov    esi,DWORD PTR [rax]
  403b10:	mov    edi,0xc
  403b15:	mov    ecx,0xe2
  403b1a:	xor    edx,edx
  403b1c:	mov    r8d,0x94
  403b22:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403b27:	mov    rdi,rbx
  403b2a:	call   408260 <next@@Base>
  403b2f:	mov    esi,DWORD PTR [rax]
  403b31:	mov    edi,0x1
  403b36:	mov    ecx,0xe4
  403b3b:	xor    edx,edx
  403b3d:	mov    r8d,0x94
  403b43:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403b48:	mov    rdi,rbx
  403b4b:	call   408260 <next@@Base>
  403b50:	mov    esi,DWORD PTR [rax]
  403b52:	mov    edi,0x4
  403b57:	mov    ecx,0xe6
  403b5c:	xor    edx,edx
  403b5e:	mov    r8d,0x94
  403b64:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403b69:	mov    rdi,rbx
  403b6c:	call   408260 <next@@Base>
  403b71:	mov    esi,DWORD PTR [rax]
  403b73:	mov    edi,0x5
  403b78:	mov    ecx,0xe8
  403b7d:	xor    edx,edx
  403b7f:	mov    r8d,0x94
  403b85:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403b8a:	mov    rdi,rbx
  403b8d:	call   408260 <next@@Base>
  403b92:	mov    esi,DWORD PTR [rax]
  403b94:	mov    edi,0x7
  403b99:	mov    ecx,0xea
  403b9e:	xor    edx,edx
  403ba0:	mov    r8d,0x94
  403ba6:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403bab:	mov    rdi,rbx
  403bae:	call   408260 <next@@Base>
  403bb3:	mov    esi,DWORD PTR [rax]
  403bb5:	mov    edi,0x1
  403bba:	mov    ecx,0xec
  403bbf:	xor    edx,edx
  403bc1:	mov    r8d,0x94
  403bc7:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403bcc:	mov    rdi,rbx
  403bcf:	call   408260 <next@@Base>
  403bd4:	mov    esi,DWORD PTR [rax]
  403bd6:	mov    edi,0x8
  403bdb:	mov    ecx,0xee
  403be0:	xor    edx,edx
  403be2:	mov    r8d,0x94
  403be8:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403bed:	mov    rdi,rbx
  403bf0:	call   408260 <next@@Base>
  403bf5:	mov    esi,DWORD PTR [rax]
  403bf7:	mov    edi,0x6
  403bfc:	mov    ecx,0xf0
  403c01:	xor    edx,edx
  403c03:	mov    r8d,0x94
  403c09:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403c0e:	mov    rdi,rbx
  403c11:	call   408260 <next@@Base>
  403c16:	mov    esi,DWORD PTR [rax]
  403c18:	mov    edi,0xb
  403c1d:	mov    ecx,0xf2
  403c22:	xor    edx,edx
  403c24:	mov    r8d,0x94
  403c2a:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403c2f:	mov    rdi,rbx
  403c32:	call   408260 <next@@Base>
  403c37:	mov    esi,DWORD PTR [rax]
  403c39:	mov    edi,0x5
  403c3e:	mov    ecx,0xf4
  403c43:	xor    edx,edx
  403c45:	mov    r8d,0x94
  403c4b:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403c50:	mov    rdi,rbx
  403c53:	call   408260 <next@@Base>
  403c58:	mov    esi,DWORD PTR [rax]
  403c5a:	mov    edi,0x7
  403c5f:	mov    ecx,0xf6
  403c64:	xor    edx,edx
  403c66:	mov    r8d,0x94
  403c6c:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403c71:	mov    rdi,rbx
  403c74:	call   408260 <next@@Base>
  403c79:	mov    esi,DWORD PTR [rax]
  403c7b:	mov    edi,0x1
  403c80:	mov    ecx,0xf8
  403c85:	xor    edx,edx
  403c87:	mov    r8d,0x94
  403c8d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403c92:	mov    rdi,rbx
  403c95:	call   408260 <next@@Base>
  403c9a:	mov    esi,DWORD PTR [rax]
  403c9c:	mov    edi,0x8
  403ca1:	mov    ecx,0xfa
  403ca6:	xor    edx,edx
  403ca8:	mov    r8d,0x94
  403cae:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403cb3:	mov    rdi,rbx
  403cb6:	call   408260 <next@@Base>
  403cbb:	mov    esi,DWORD PTR [rax]
  403cbd:	mov    edi,0x6
  403cc2:	mov    ecx,0xfc
  403cc7:	xor    edx,edx
  403cc9:	mov    r8d,0x94
  403ccf:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403cd4:	mov    rdi,rbx
  403cd7:	call   408260 <next@@Base>
  403cdc:	mov    esi,DWORD PTR [rax]
  403cde:	mov    edi,0x7
  403ce3:	mov    ecx,0xfe
  403ce8:	xor    edx,edx
  403cea:	mov    r8d,0x94
  403cf0:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403cf5:	mov    rdi,rbx
  403cf8:	call   408260 <next@@Base>
  403cfd:	mov    esi,DWORD PTR [rax]
  403cff:	mov    edi,0x1
  403d04:	mov    ecx,0x100
  403d09:	xor    edx,edx
  403d0b:	mov    r8d,0x94
  403d11:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403d16:	mov    rdi,rbx
  403d19:	call   408260 <next@@Base>
  403d1e:	mov    esi,DWORD PTR [rax]
  403d20:	mov    edi,0x8
  403d25:	mov    ecx,0x102
  403d2a:	xor    edx,edx
  403d2c:	mov    r8d,0x94
  403d32:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403d37:	mov    rdi,rbx
  403d3a:	call   408260 <next@@Base>
  403d3f:	mov    esi,DWORD PTR [rax]
  403d41:	mov    edi,0x6
  403d46:	mov    ecx,0x104
  403d4b:	xor    edx,edx
  403d4d:	mov    r8d,0x94
  403d53:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403d58:	mov    rdi,rbx
  403d5b:	call   408260 <next@@Base>
  403d60:	mov    esi,DWORD PTR [rax]
  403d62:	mov    edi,0x9
  403d67:	mov    ecx,0x106
  403d6c:	xor    edx,edx
  403d6e:	mov    r8d,0x94
  403d74:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403d79:	mov    rdi,rbx
  403d7c:	call   408080 <destroy_lexer@@Base>
  403d81:	add    rsp,0x20
  403d85:	pop    rbx
  403d86:	ret    
  403d87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403d90 <read_token_int_type@@Base>:
  403d90:	push   rbx
  403d91:	sub    rsp,0x20
  403d95:	vmovdqa xmm0,XMMWORD PTR [rip+0xd423]        # 4111c0 <__bss_start@@Base+0x70>
  403d9d:	vpcmpeqd xmm1,xmm1,xmm1
  403da1:	vpsubq xmm0,xmm0,xmm1
  403da5:	vmovdqa XMMWORD PTR [rip+0xd413],xmm0        # 4111c0 <__bss_start@@Base+0x70>
  403dad:	lea    rsi,[rip+0x891b]        # 40c6cf <UnitySizeMask@@Base+0xbf>
  403db4:	lea    rbx,[rsp+0x8]
  403db9:	mov    rdi,rbx
  403dbc:	call   408050 <init_lexer@@Base>
  403dc1:	mov    rdi,rbx
  403dc4:	call   408260 <next@@Base>
  403dc9:	mov    esi,DWORD PTR [rax]
  403dcb:	mov    ecx,0x117
  403dd0:	xor    edi,edi
  403dd2:	xor    edx,edx
  403dd4:	mov    r8d,0x94
  403dda:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403ddf:	mov    rdi,rbx
  403de2:	call   408080 <destroy_lexer@@Base>
  403de7:	add    rsp,0x20
  403deb:	pop    rbx
  403dec:	ret    
  403ded:	nop    DWORD PTR [rax]

0000000000403df0 <read_token_int_value@@Base>:
  403df0:	push   rbx
  403df1:	sub    rsp,0x20
  403df5:	vmovdqa xmm0,XMMWORD PTR [rip+0xd3d3]        # 4111d0 <__bss_start@@Base+0x80>
  403dfd:	vpcmpeqd xmm1,xmm1,xmm1
  403e01:	vpsubq xmm0,xmm0,xmm1
  403e05:	vmovdqa XMMWORD PTR [rip+0xd3c3],xmm0        # 4111d0 <__bss_start@@Base+0x80>
  403e0d:	lea    rsi,[rip+0x8294]        # 40c0a8 <_IO_stdin_used@@Base+0xa8>
  403e14:	lea    rbx,[rsp+0x8]
  403e19:	mov    rdi,rbx
  403e1c:	call   408050 <init_lexer@@Base>
  403e21:	mov    rdi,rbx
  403e24:	call   408260 <next@@Base>
  403e29:	mov    esi,DWORD PTR [rax]
  403e2b:	mov    edi,0x1
  403e30:	mov    ecx,0x128
  403e35:	xor    edx,edx
  403e37:	mov    r8d,0x94
  403e3d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403e42:	mov    rdi,rbx
  403e45:	call   408080 <destroy_lexer@@Base>
  403e4a:	add    rsp,0x20
  403e4e:	pop    rbx
  403e4f:	ret    

0000000000403e50 <read_token_function@@Base>:
  403e50:	push   rbx
  403e51:	sub    rsp,0x20
  403e55:	vmovdqa xmm0,XMMWORD PTR [rip+0xd383]        # 4111e0 <__bss_start@@Base+0x90>
  403e5d:	vpcmpeqd xmm1,xmm1,xmm1
  403e61:	vpsubq xmm0,xmm0,xmm1
  403e65:	vmovdqa XMMWORD PTR [rip+0xd373],xmm0        # 4111e0 <__bss_start@@Base+0x90>
  403e6d:	lea    rsi,[rip+0x8347]        # 40c1bb <_IO_stdin_used@@Base+0x1bb>
  403e74:	lea    rbx,[rsp+0x8]
  403e79:	mov    rdi,rbx
  403e7c:	call   408050 <init_lexer@@Base>
  403e81:	mov    rdi,rbx
  403e84:	call   408260 <next@@Base>
  403e89:	mov    esi,DWORD PTR [rax]
  403e8b:	mov    edi,0x2
  403e90:	mov    ecx,0x139
  403e95:	xor    edx,edx
  403e97:	mov    r8d,0x94
  403e9d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403ea2:	mov    rdi,rbx
  403ea5:	call   408080 <destroy_lexer@@Base>
  403eaa:	add    rsp,0x20
  403eae:	pop    rbx
  403eaf:	ret    

0000000000403eb0 <read_token_opar@@Base>:
  403eb0:	push   rbx
  403eb1:	sub    rsp,0x20
  403eb5:	vmovdqa xmm0,XMMWORD PTR [rip+0xd333]        # 4111f0 <__bss_start@@Base+0xa0>
  403ebd:	vpcmpeqd xmm1,xmm1,xmm1
  403ec1:	vpsubq xmm0,xmm0,xmm1
  403ec5:	vmovdqa XMMWORD PTR [rip+0xd323],xmm0        # 4111f0 <__bss_start@@Base+0xa0>
  403ecd:	lea    rsi,[rip+0x81d9]        # 40c0ad <_IO_stdin_used@@Base+0xad>
  403ed4:	lea    rbx,[rsp+0x8]
  403ed9:	mov    rdi,rbx
  403edc:	call   408050 <init_lexer@@Base>
  403ee1:	mov    rdi,rbx
  403ee4:	call   408260 <next@@Base>
  403ee9:	mov    esi,DWORD PTR [rax]
  403eeb:	mov    edi,0x3
  403ef0:	mov    ecx,0x14a
  403ef5:	xor    edx,edx
  403ef7:	mov    r8d,0x94
  403efd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403f02:	mov    rdi,rbx
  403f05:	call   408080 <destroy_lexer@@Base>
  403f0a:	add    rsp,0x20
  403f0e:	pop    rbx
  403f0f:	ret    

0000000000403f10 <read_token_cpar@@Base>:
  403f10:	push   rbx
  403f11:	sub    rsp,0x20
  403f15:	vmovdqa xmm0,XMMWORD PTR [rip+0xd2e3]        # 411200 <__bss_start@@Base+0xb0>
  403f1d:	vpcmpeqd xmm1,xmm1,xmm1
  403f21:	vpsubq xmm0,xmm0,xmm1
  403f25:	vmovdqa XMMWORD PTR [rip+0xd2d3],xmm0        # 411200 <__bss_start@@Base+0xb0>
  403f2d:	lea    rsi,[rip+0x817b]        # 40c0af <_IO_stdin_used@@Base+0xaf>
  403f34:	lea    rbx,[rsp+0x8]
  403f39:	mov    rdi,rbx
  403f3c:	call   408050 <init_lexer@@Base>
  403f41:	mov    rdi,rbx
  403f44:	call   408260 <next@@Base>
  403f49:	mov    esi,DWORD PTR [rax]
  403f4b:	mov    edi,0x4
  403f50:	mov    ecx,0x15b
  403f55:	xor    edx,edx
  403f57:	mov    r8d,0x94
  403f5d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403f62:	mov    rdi,rbx
  403f65:	call   408080 <destroy_lexer@@Base>
  403f6a:	add    rsp,0x20
  403f6e:	pop    rbx
  403f6f:	ret    

0000000000403f70 <read_token_obra@@Base>:
  403f70:	push   rbx
  403f71:	sub    rsp,0x20
  403f75:	vmovdqa xmm0,XMMWORD PTR [rip+0xd293]        # 411210 <__bss_start@@Base+0xc0>
  403f7d:	vpcmpeqd xmm1,xmm1,xmm1
  403f81:	vpsubq xmm0,xmm0,xmm1
  403f85:	vmovdqa XMMWORD PTR [rip+0xd283],xmm0        # 411210 <__bss_start@@Base+0xc0>
  403f8d:	lea    rsi,[rip+0x811d]        # 40c0b1 <_IO_stdin_used@@Base+0xb1>
  403f94:	lea    rbx,[rsp+0x8]
  403f99:	mov    rdi,rbx
  403f9c:	call   408050 <init_lexer@@Base>
  403fa1:	mov    rdi,rbx
  403fa4:	call   408260 <next@@Base>
  403fa9:	mov    esi,DWORD PTR [rax]
  403fab:	mov    edi,0x5
  403fb0:	mov    ecx,0x16c
  403fb5:	xor    edx,edx
  403fb7:	mov    r8d,0x94
  403fbd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  403fc2:	mov    rdi,rbx
  403fc5:	call   408080 <destroy_lexer@@Base>
  403fca:	add    rsp,0x20
  403fce:	pop    rbx
  403fcf:	ret    

0000000000403fd0 <read_token_cbra@@Base>:
  403fd0:	push   rbx
  403fd1:	sub    rsp,0x20
  403fd5:	vmovdqa xmm0,XMMWORD PTR [rip+0xd243]        # 411220 <__bss_start@@Base+0xd0>
  403fdd:	vpcmpeqd xmm1,xmm1,xmm1
  403fe1:	vpsubq xmm0,xmm0,xmm1
  403fe5:	vmovdqa XMMWORD PTR [rip+0xd233],xmm0        # 411220 <__bss_start@@Base+0xd0>
  403fed:	lea    rsi,[rip+0x8028]        # 40c01c <_IO_stdin_used@@Base+0x1c>
  403ff4:	lea    rbx,[rsp+0x8]
  403ff9:	mov    rdi,rbx
  403ffc:	call   408050 <init_lexer@@Base>
  404001:	mov    rdi,rbx
  404004:	call   408260 <next@@Base>
  404009:	mov    esi,DWORD PTR [rax]
  40400b:	mov    edi,0x6
  404010:	mov    ecx,0x17e
  404015:	xor    edx,edx
  404017:	mov    r8d,0x94
  40401d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404022:	mov    rdi,rbx
  404025:	call   408080 <destroy_lexer@@Base>
  40402a:	add    rsp,0x20
  40402e:	pop    rbx
  40402f:	ret    

0000000000404030 <read_token_return@@Base>:
  404030:	push   rbx
  404031:	sub    rsp,0x20
  404035:	vmovdqa xmm0,XMMWORD PTR [rip+0xd1f3]        # 411230 <__bss_start@@Base+0xe0>
  40403d:	vpcmpeqd xmm1,xmm1,xmm1
  404041:	vpsubq xmm0,xmm0,xmm1
  404045:	vmovdqa XMMWORD PTR [rip+0xd1e3],xmm0        # 411230 <__bss_start@@Base+0xe0>
  40404d:	lea    rsi,[rip+0x8257]        # 40c2ab <_IO_stdin_used@@Base+0x2ab>
  404054:	lea    rbx,[rsp+0x8]
  404059:	mov    rdi,rbx
  40405c:	call   408050 <init_lexer@@Base>
  404061:	mov    rdi,rbx
  404064:	call   408260 <next@@Base>
  404069:	mov    esi,DWORD PTR [rax]
  40406b:	mov    edi,0x7
  404070:	mov    ecx,0x18f
  404075:	xor    edx,edx
  404077:	mov    r8d,0x94
  40407d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404082:	mov    rdi,rbx
  404085:	call   408080 <destroy_lexer@@Base>
  40408a:	add    rsp,0x20
  40408e:	pop    rbx
  40408f:	ret    

0000000000404090 <read_token_semicolon@@Base>:
  404090:	push   rbx
  404091:	sub    rsp,0x20
  404095:	vmovdqa xmm0,XMMWORD PTR [rip+0xd1a3]        # 411240 <__bss_start@@Base+0xf0>
  40409d:	vpcmpeqd xmm1,xmm1,xmm1
  4040a1:	vpsubq xmm0,xmm0,xmm1
  4040a5:	vmovdqa XMMWORD PTR [rip+0xd193],xmm0        # 411240 <__bss_start@@Base+0xf0>
  4040ad:	lea    rsi,[rip+0x7fff]        # 40c0b3 <_IO_stdin_used@@Base+0xb3>
  4040b4:	lea    rbx,[rsp+0x8]
  4040b9:	mov    rdi,rbx
  4040bc:	call   408050 <init_lexer@@Base>
  4040c1:	mov    rdi,rbx
  4040c4:	call   408260 <next@@Base>
  4040c9:	mov    esi,DWORD PTR [rax]
  4040cb:	mov    edi,0x8
  4040d0:	mov    ecx,0x1a0
  4040d5:	xor    edx,edx
  4040d7:	mov    r8d,0x94
  4040dd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4040e2:	mov    rdi,rbx
  4040e5:	call   408080 <destroy_lexer@@Base>
  4040ea:	add    rsp,0x20
  4040ee:	pop    rbx
  4040ef:	ret    

00000000004040f0 <read_token_eof@@Base>:
  4040f0:	push   rbx
  4040f1:	sub    rsp,0x20
  4040f5:	vmovdqa xmm0,XMMWORD PTR [rip+0xd153]        # 411250 <__bss_start@@Base+0x100>
  4040fd:	vpcmpeqd xmm1,xmm1,xmm1
  404101:	vpsubq xmm0,xmm0,xmm1
  404105:	vmovdqa XMMWORD PTR [rip+0xd143],xmm0        # 411250 <__bss_start@@Base+0x100>
  40410d:	lea    rsi,[rip+0x8d84]        # 40ce98 <UnitySizeMask@@Base+0x888>
  404114:	lea    rbx,[rsp+0x8]
  404119:	mov    rdi,rbx
  40411c:	call   408050 <init_lexer@@Base>
  404121:	mov    rdi,rbx
  404124:	call   408260 <next@@Base>
  404129:	mov    esi,DWORD PTR [rax]
  40412b:	mov    edi,0x9
  404130:	mov    ecx,0x1b1
  404135:	xor    edx,edx
  404137:	mov    r8d,0x94
  40413d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404142:	mov    rdi,rbx
  404145:	call   408080 <destroy_lexer@@Base>
  40414a:	add    rsp,0x20
  40414e:	pop    rbx
  40414f:	ret    

0000000000404150 <read_token_if@@Base>:
  404150:	push   rbx
  404151:	sub    rsp,0x20
  404155:	vmovdqa xmm0,XMMWORD PTR [rip+0xd103]        # 411260 <__bss_start@@Base+0x110>
  40415d:	vpcmpeqd xmm1,xmm1,xmm1
  404161:	vpsubq xmm0,xmm0,xmm1
  404165:	vmovdqa XMMWORD PTR [rip+0xd0f3],xmm0        # 411260 <__bss_start@@Base+0x110>
  40416d:	lea    rsi,[rip+0x816d]        # 40c2e1 <_IO_stdin_used@@Base+0x2e1>
  404174:	lea    rbx,[rsp+0x8]
  404179:	mov    rdi,rbx
  40417c:	call   408050 <init_lexer@@Base>
  404181:	mov    rdi,rbx
  404184:	call   408260 <next@@Base>
  404189:	mov    esi,DWORD PTR [rax]
  40418b:	mov    edi,0xa
  404190:	mov    ecx,0x1c2
  404195:	xor    edx,edx
  404197:	mov    r8d,0x94
  40419d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4041a2:	mov    rdi,rbx
  4041a5:	call   408080 <destroy_lexer@@Base>
  4041aa:	add    rsp,0x20
  4041ae:	pop    rbx
  4041af:	ret    

00000000004041b0 <read_token_else@@Base>:
  4041b0:	push   rbx
  4041b1:	sub    rsp,0x20
  4041b5:	vmovdqa xmm0,XMMWORD PTR [rip+0xd0b3]        # 411270 <__bss_start@@Base+0x120>
  4041bd:	vpcmpeqd xmm1,xmm1,xmm1
  4041c1:	vpsubq xmm0,xmm0,xmm1
  4041c5:	vmovdqa XMMWORD PTR [rip+0xd0a3],xmm0        # 411270 <__bss_start@@Base+0x120>
  4041cd:	lea    rsi,[rip+0x804a]        # 40c21e <_IO_stdin_used@@Base+0x21e>
  4041d4:	lea    rbx,[rsp+0x8]
  4041d9:	mov    rdi,rbx
  4041dc:	call   408050 <init_lexer@@Base>
  4041e1:	mov    rdi,rbx
  4041e4:	call   408260 <next@@Base>
  4041e9:	mov    esi,DWORD PTR [rax]
  4041eb:	mov    edi,0xb
  4041f0:	mov    ecx,0x1d3
  4041f5:	xor    edx,edx
  4041f7:	mov    r8d,0x94
  4041fd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404202:	mov    rdi,rbx
  404205:	call   408080 <destroy_lexer@@Base>
  40420a:	add    rsp,0x20
  40420e:	pop    rbx
  40420f:	ret    

0000000000404210 <read_token_equalequal@@Base>:
  404210:	push   rbx
  404211:	sub    rsp,0x20
  404215:	vmovdqa xmm0,XMMWORD PTR [rip+0xd063]        # 411280 <__bss_start@@Base+0x130>
  40421d:	vpcmpeqd xmm1,xmm1,xmm1
  404221:	vpsubq xmm0,xmm0,xmm1
  404225:	vmovdqa XMMWORD PTR [rip+0xd053],xmm0        # 411280 <__bss_start@@Base+0x130>
  40422d:	lea    rsi,[rip+0x7e81]        # 40c0b5 <_IO_stdin_used@@Base+0xb5>
  404234:	lea    rbx,[rsp+0x8]
  404239:	mov    rdi,rbx
  40423c:	call   408050 <init_lexer@@Base>
  404241:	mov    rdi,rbx
  404244:	call   408260 <next@@Base>
  404249:	mov    esi,DWORD PTR [rax]
  40424b:	mov    edi,0xc
  404250:	mov    ecx,0x1e4
  404255:	xor    edx,edx
  404257:	mov    r8d,0x94
  40425d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404262:	mov    rdi,rbx
  404265:	call   408080 <destroy_lexer@@Base>
  40426a:	add    rsp,0x20
  40426e:	pop    rbx
  40426f:	ret    

0000000000404270 <read_token_notequal@@Base>:
  404270:	push   rbx
  404271:	sub    rsp,0x20
  404275:	vmovdqa xmm0,XMMWORD PTR [rip+0xd013]        # 411290 <__bss_start@@Base+0x140>
  40427d:	vpcmpeqd xmm1,xmm1,xmm1
  404281:	vpsubq xmm0,xmm0,xmm1
  404285:	vmovdqa XMMWORD PTR [rip+0xd003],xmm0        # 411290 <__bss_start@@Base+0x140>
  40428d:	lea    rsi,[rip+0x7e24]        # 40c0b8 <_IO_stdin_used@@Base+0xb8>
  404294:	lea    rbx,[rsp+0x8]
  404299:	mov    rdi,rbx
  40429c:	call   408050 <init_lexer@@Base>
  4042a1:	mov    rdi,rbx
  4042a4:	call   408260 <next@@Base>
  4042a9:	mov    esi,DWORD PTR [rax]
  4042ab:	mov    edi,0xc
  4042b0:	mov    ecx,0x1f5
  4042b5:	xor    edx,edx
  4042b7:	mov    r8d,0x94
  4042bd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4042c2:	mov    rdi,rbx
  4042c5:	call   408080 <destroy_lexer@@Base>
  4042ca:	add    rsp,0x20
  4042ce:	pop    rbx
  4042cf:	ret    

00000000004042d0 <read_token_lessequalthan@@Base>:
  4042d0:	push   rbx
  4042d1:	sub    rsp,0x20
  4042d5:	vmovdqa xmm0,XMMWORD PTR [rip+0xcfc3]        # 4112a0 <__bss_start@@Base+0x150>
  4042dd:	vpcmpeqd xmm1,xmm1,xmm1
  4042e1:	vpsubq xmm0,xmm0,xmm1
  4042e5:	vmovdqa XMMWORD PTR [rip+0xcfb3],xmm0        # 4112a0 <__bss_start@@Base+0x150>
  4042ed:	lea    rsi,[rip+0x7dc7]        # 40c0bb <_IO_stdin_used@@Base+0xbb>
  4042f4:	lea    rbx,[rsp+0x8]
  4042f9:	mov    rdi,rbx
  4042fc:	call   408050 <init_lexer@@Base>
  404301:	mov    rdi,rbx
  404304:	call   408260 <next@@Base>
  404309:	mov    esi,DWORD PTR [rax]
  40430b:	mov    edi,0xc
  404310:	mov    ecx,0x206
  404315:	xor    edx,edx
  404317:	mov    r8d,0x94
  40431d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404322:	mov    rdi,rbx
  404325:	call   408080 <destroy_lexer@@Base>
  40432a:	add    rsp,0x20
  40432e:	pop    rbx
  40432f:	ret    

0000000000404330 <read_token_oror@@Base>:
  404330:	push   rbx
  404331:	sub    rsp,0x20
  404335:	vmovdqa xmm0,XMMWORD PTR [rip+0xcf73]        # 4112b0 <__bss_start@@Base+0x160>
  40433d:	vpcmpeqd xmm1,xmm1,xmm1
  404341:	vpsubq xmm0,xmm0,xmm1
  404345:	vmovdqa XMMWORD PTR [rip+0xcf63],xmm0        # 4112b0 <__bss_start@@Base+0x160>
  40434d:	lea    rsi,[rip+0x7d6a]        # 40c0be <_IO_stdin_used@@Base+0xbe>
  404354:	lea    rbx,[rsp+0x8]
  404359:	mov    rdi,rbx
  40435c:	call   408050 <init_lexer@@Base>
  404361:	mov    rdi,rbx
  404364:	call   408260 <next@@Base>
  404369:	mov    esi,DWORD PTR [rax]
  40436b:	mov    edi,0xc
  404370:	mov    ecx,0x217
  404375:	xor    edx,edx
  404377:	mov    r8d,0x94
  40437d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404382:	mov    rdi,rbx
  404385:	call   408080 <destroy_lexer@@Base>
  40438a:	add    rsp,0x20
  40438e:	pop    rbx
  40438f:	ret    

0000000000404390 <read_token_andand@@Base>:
  404390:	push   rbx
  404391:	sub    rsp,0x20
  404395:	vmovdqa xmm0,XMMWORD PTR [rip+0xcf23]        # 4112c0 <__bss_start@@Base+0x170>
  40439d:	vpcmpeqd xmm1,xmm1,xmm1
  4043a1:	vpsubq xmm0,xmm0,xmm1
  4043a5:	vmovdqa XMMWORD PTR [rip+0xcf13],xmm0        # 4112c0 <__bss_start@@Base+0x170>
  4043ad:	lea    rsi,[rip+0x7d0d]        # 40c0c1 <_IO_stdin_used@@Base+0xc1>
  4043b4:	lea    rbx,[rsp+0x8]
  4043b9:	mov    rdi,rbx
  4043bc:	call   408050 <init_lexer@@Base>
  4043c1:	mov    rdi,rbx
  4043c4:	call   408260 <next@@Base>
  4043c9:	mov    esi,DWORD PTR [rax]
  4043cb:	mov    edi,0xc
  4043d0:	mov    ecx,0x228
  4043d5:	xor    edx,edx
  4043d7:	mov    r8d,0x94
  4043dd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4043e2:	mov    rdi,rbx
  4043e5:	call   408080 <destroy_lexer@@Base>
  4043ea:	add    rsp,0x20
  4043ee:	pop    rbx
  4043ef:	ret    

00000000004043f0 <read_token_greaterequalthan@@Base>:
  4043f0:	push   rbx
  4043f1:	sub    rsp,0x20
  4043f5:	vmovdqa xmm0,XMMWORD PTR [rip+0xced3]        # 4112d0 <__bss_start@@Base+0x180>
  4043fd:	vpcmpeqd xmm1,xmm1,xmm1
  404401:	vpsubq xmm0,xmm0,xmm1
  404405:	vmovdqa XMMWORD PTR [rip+0xcec3],xmm0        # 4112d0 <__bss_start@@Base+0x180>
  40440d:	lea    rsi,[rip+0x7cb0]        # 40c0c4 <_IO_stdin_used@@Base+0xc4>
  404414:	lea    rbx,[rsp+0x8]
  404419:	mov    rdi,rbx
  40441c:	call   408050 <init_lexer@@Base>
  404421:	mov    rdi,rbx
  404424:	call   408260 <next@@Base>
  404429:	mov    esi,DWORD PTR [rax]
  40442b:	mov    edi,0xc
  404430:	mov    ecx,0x239
  404435:	xor    edx,edx
  404437:	mov    r8d,0x94
  40443d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404442:	mov    rdi,rbx
  404445:	call   408080 <destroy_lexer@@Base>
  40444a:	add    rsp,0x20
  40444e:	pop    rbx
  40444f:	ret    

0000000000404450 <read_token_lessthan@@Base>:
  404450:	push   rbx
  404451:	sub    rsp,0x20
  404455:	vmovdqa xmm0,XMMWORD PTR [rip+0xce83]        # 4112e0 <__bss_start@@Base+0x190>
  40445d:	vpcmpeqd xmm1,xmm1,xmm1
  404461:	vpsubq xmm0,xmm0,xmm1
  404465:	vmovdqa XMMWORD PTR [rip+0xce73],xmm0        # 4112e0 <__bss_start@@Base+0x190>
  40446d:	lea    rsi,[rip+0x7c53]        # 40c0c7 <_IO_stdin_used@@Base+0xc7>
  404474:	lea    rbx,[rsp+0x8]
  404479:	mov    rdi,rbx
  40447c:	call   408050 <init_lexer@@Base>
  404481:	mov    rdi,rbx
  404484:	call   408260 <next@@Base>
  404489:	mov    esi,DWORD PTR [rax]
  40448b:	mov    edi,0xc
  404490:	mov    ecx,0x24a
  404495:	xor    edx,edx
  404497:	mov    r8d,0x94
  40449d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  4044a2:	mov    rdi,rbx
  4044a5:	call   408080 <destroy_lexer@@Base>
  4044aa:	add    rsp,0x20
  4044ae:	pop    rbx
  4044af:	ret    

00000000004044b0 <read_token_greaterthan@@Base>:
  4044b0:	push   rbx
  4044b1:	sub    rsp,0x20
  4044b5:	vmovdqa xmm0,XMMWORD PTR [rip+0xce33]        # 4112f0 <__bss_start@@Base+0x1a0>
  4044bd:	vpcmpeqd xmm1,xmm1,xmm1
  4044c1:	vpsubq xmm0,xmm0,xmm1
  4044c5:	vmovdqa XMMWORD PTR [rip+0xce23],xmm0        # 4112f0 <__bss_start@@Base+0x1a0>
  4044cd:	lea    rsi,[rip+0x7bf5]        # 40c0c9 <_IO_stdin_used@@Base+0xc9>
  4044d4:	lea    rbx,[rsp+0x8]
  4044d9:	mov    rdi,rbx
  4044dc:	call   408050 <init_lexer@@Base>
  4044e1:	mov    rdi,rbx
  4044e4:	call   408260 <next@@Base>
  4044e9:	mov    esi,DWORD PTR [rax]
  4044eb:	mov    edi,0xc
  4044f0:	mov    ecx,0x25b
  4044f5:	xor    edx,edx
  4044f7:	mov    r8d,0x94
  4044fd:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404502:	mov    rdi,rbx
  404505:	call   408080 <destroy_lexer@@Base>
  40450a:	add    rsp,0x20
  40450e:	pop    rbx
  40450f:	ret    

0000000000404510 <read_token_not@@Base>:
  404510:	push   rbx
  404511:	sub    rsp,0x20
  404515:	vmovdqa xmm0,XMMWORD PTR [rip+0xcde3]        # 411300 <__bss_start@@Base+0x1b0>
  40451d:	vpcmpeqd xmm1,xmm1,xmm1
  404521:	vpsubq xmm0,xmm0,xmm1
  404525:	vmovdqa XMMWORD PTR [rip+0xcdd3],xmm0        # 411300 <__bss_start@@Base+0x1b0>
  40452d:	lea    rsi,[rip+0x7b97]        # 40c0cb <_IO_stdin_used@@Base+0xcb>
  404534:	lea    rbx,[rsp+0x8]
  404539:	mov    rdi,rbx
  40453c:	call   408050 <init_lexer@@Base>
  404541:	mov    rdi,rbx
  404544:	call   408260 <next@@Base>
  404549:	mov    esi,DWORD PTR [rax]
  40454b:	mov    edi,0xc
  404550:	mov    ecx,0x26c
  404555:	xor    edx,edx
  404557:	mov    r8d,0x94
  40455d:	call   4058a0 <UnityAssertEqualNumber@@Base>
  404562:	mov    rdi,rbx
  404565:	call   408080 <destroy_lexer@@Base>
  40456a:	add    rsp,0x20
  40456e:	pop    rbx
  40456f:	ret    

0000000000404570 <main@@Base>:
  404570:	push   rax
  404571:	vmovdqa xmm0,XMMWORD PTR [rip+0xcd97]        # 411310 <__bss_start@@Base+0x1c0>
  404579:	vpcmpeqd xmm1,xmm1,xmm1
  40457d:	vpsubq xmm0,xmm0,xmm1
  404581:	vmovdqa XMMWORD PTR [rip+0xcd87],xmm0        # 411310 <__bss_start@@Base+0x1c0>
  404589:	lea    rdi,[rip+0x7b3d]        # 40c0cd <_IO_stdin_used@@Base+0xcd>
  404590:	call   4074c0 <UnityBegin@@Base>
  404595:	lea    rdi,[rip+0xffffffffffffedc4]        # 403360 <simple_file_only_main@@Base>
  40459c:	lea    rsi,[rip+0x7c07]        # 40c1aa <_IO_stdin_used@@Base+0x1aa>
  4045a3:	mov    edx,0x275
  4045a8:	call   407410 <UnityDefaultTestRun@@Base>
  4045ad:	lea    rdi,[rip+0xffffffffffffef3c]        # 4034f0 <push_token_to_stack@@Base>
  4045b4:	lea    rsi,[rip+0x7c05]        # 40c1c0 <_IO_stdin_used@@Base+0x1c0>
  4045bb:	mov    edx,0x276
  4045c0:	call   407410 <UnityDefaultTestRun@@Base>
  4045c5:	lea    rdi,[rip+0xffffffffffffefa4]        # 403570 <push_two_tokens_to_stack@@Base>
  4045cc:	lea    rsi,[rip+0x7c01]        # 40c1d4 <_IO_stdin_used@@Base+0x1d4>
  4045d3:	mov    edx,0x277
  4045d8:	call   407410 <UnityDefaultTestRun@@Base>
  4045dd:	lea    rdi,[rip+0xfffffffffffff05c]        # 403640 <push_token_and_call_next@@Base>
  4045e4:	lea    rsi,[rip+0x7c02]        # 40c1ed <_IO_stdin_used@@Base+0x1ed>
  4045eb:	mov    edx,0x278
  4045f0:	call   407410 <UnityDefaultTestRun@@Base>
  4045f5:	lea    rdi,[rip+0xfffffffffffff0d4]        # 4036d0 <if_without_else@@Base>
  4045fc:	lea    rsi,[rip+0x7c03]        # 40c206 <_IO_stdin_used@@Base+0x206>
  404603:	mov    edx,0x279
  404608:	call   407410 <UnityDefaultTestRun@@Base>
  40460d:	lea    rdi,[rip+0xfffffffffffff3bc]        # 4039d0 <if_with_else@@Base>
  404614:	lea    rsi,[rip+0x7bfb]        # 40c216 <_IO_stdin_used@@Base+0x216>
  40461b:	mov    edx,0x27a
  404620:	call   407410 <UnityDefaultTestRun@@Base>
  404625:	lea    rdi,[rip+0xfffffffffffff764]        # 403d90 <read_token_int_type@@Base>
  40462c:	lea    rsi,[rip+0x7bf0]        # 40c223 <_IO_stdin_used@@Base+0x223>
  404633:	mov    edx,0x27b
  404638:	call   407410 <UnityDefaultTestRun@@Base>
  40463d:	lea    rdi,[rip+0xfffffffffffff7ac]        # 403df0 <read_token_int_value@@Base>
  404644:	lea    rsi,[rip+0x7bec]        # 40c237 <_IO_stdin_used@@Base+0x237>
  40464b:	mov    edx,0x27c
  404650:	call   407410 <UnityDefaultTestRun@@Base>
  404655:	lea    rdi,[rip+0xfffffffffffff7f4]        # 403e50 <read_token_function@@Base>
  40465c:	lea    rsi,[rip+0x7be9]        # 40c24c <_IO_stdin_used@@Base+0x24c>
  404663:	mov    edx,0x27d
  404668:	call   407410 <UnityDefaultTestRun@@Base>
  40466d:	lea    rdi,[rip+0xfffffffffffff83c]        # 403eb0 <read_token_opar@@Base>
  404674:	lea    rsi,[rip+0x7be5]        # 40c260 <_IO_stdin_used@@Base+0x260>
  40467b:	mov    edx,0x27e
  404680:	call   407410 <UnityDefaultTestRun@@Base>
  404685:	lea    rdi,[rip+0xfffffffffffff884]        # 403f10 <read_token_cpar@@Base>
  40468c:	lea    rsi,[rip+0x7bdd]        # 40c270 <_IO_stdin_used@@Base+0x270>
  404693:	mov    edx,0x27f
  404698:	call   407410 <UnityDefaultTestRun@@Base>
  40469d:	lea    rdi,[rip+0xfffffffffffff8cc]        # 403f70 <read_token_obra@@Base>
  4046a4:	lea    rsi,[rip+0x7bd5]        # 40c280 <_IO_stdin_used@@Base+0x280>
  4046ab:	mov    edx,0x280
  4046b0:	call   407410 <UnityDefaultTestRun@@Base>
  4046b5:	lea    rdi,[rip+0xfffffffffffff914]        # 403fd0 <read_token_cbra@@Base>
  4046bc:	lea    rsi,[rip+0x7bcd]        # 40c290 <_IO_stdin_used@@Base+0x290>
  4046c3:	mov    edx,0x281
  4046c8:	call   407410 <UnityDefaultTestRun@@Base>
  4046cd:	lea    rdi,[rip+0xfffffffffffff95c]        # 404030 <read_token_return@@Base>
  4046d4:	lea    rsi,[rip+0x7bc5]        # 40c2a0 <_IO_stdin_used@@Base+0x2a0>
  4046db:	mov    edx,0x282
  4046e0:	call   407410 <UnityDefaultTestRun@@Base>
  4046e5:	lea    rdi,[rip+0xfffffffffffff9a4]        # 404090 <read_token_semicolon@@Base>
  4046ec:	lea    rsi,[rip+0x7bbf]        # 40c2b2 <_IO_stdin_used@@Base+0x2b2>
  4046f3:	mov    edx,0x283
  4046f8:	call   407410 <UnityDefaultTestRun@@Base>
  4046fd:	lea    rdi,[rip+0xfffffffffffff9ec]        # 4040f0 <read_token_eof@@Base>
  404704:	lea    rsi,[rip+0x7bbc]        # 40c2c7 <_IO_stdin_used@@Base+0x2c7>
  40470b:	mov    edx,0x284
  404710:	call   407410 <UnityDefaultTestRun@@Base>
  404715:	lea    rdi,[rip+0xfffffffffffffa34]        # 404150 <read_token_if@@Base>
  40471c:	lea    rsi,[rip+0x7bb3]        # 40c2d6 <_IO_stdin_used@@Base+0x2d6>
  404723:	mov    edx,0x285
  404728:	call   407410 <UnityDefaultTestRun@@Base>
  40472d:	lea    rdi,[rip+0xfffffffffffffa7c]        # 4041b0 <read_token_else@@Base>
  404734:	lea    rsi,[rip+0x7ba9]        # 40c2e4 <_IO_stdin_used@@Base+0x2e4>
  40473b:	mov    edx,0x286
  404740:	call   407410 <UnityDefaultTestRun@@Base>
  404745:	lea    rdi,[rip+0xfffffffffffffac4]        # 404210 <read_token_equalequal@@Base>
  40474c:	lea    rsi,[rip+0x7ba1]        # 40c2f4 <_IO_stdin_used@@Base+0x2f4>
  404753:	mov    edx,0x287
  404758:	call   407410 <UnityDefaultTestRun@@Base>
  40475d:	lea    rdi,[rip+0xfffffffffffffb0c]        # 404270 <read_token_notequal@@Base>
  404764:	lea    rsi,[rip+0x7b9f]        # 40c30a <_IO_stdin_used@@Base+0x30a>
  40476b:	mov    edx,0x288
  404770:	call   407410 <UnityDefaultTestRun@@Base>
  404775:	lea    rdi,[rip+0xfffffffffffffb54]        # 4042d0 <read_token_lessequalthan@@Base>
  40477c:	lea    rsi,[rip+0x7b9b]        # 40c31e <_IO_stdin_used@@Base+0x31e>
  404783:	mov    edx,0x289
  404788:	call   407410 <UnityDefaultTestRun@@Base>
  40478d:	lea    rdi,[rip+0xfffffffffffffc5c]        # 4043f0 <read_token_greaterequalthan@@Base>
  404794:	lea    rsi,[rip+0x7bbe]        # 40c359 <_IO_stdin_used@@Base+0x359>
  40479b:	mov    edx,0x28a
  4047a0:	call   407410 <UnityDefaultTestRun@@Base>
  4047a5:	lea    rdi,[rip+0xfffffffffffffb84]        # 404330 <read_token_oror@@Base>
  4047ac:	lea    rsi,[rip+0x7b84]        # 40c337 <_IO_stdin_used@@Base+0x337>
  4047b3:	mov    edx,0x28b
  4047b8:	call   407410 <UnityDefaultTestRun@@Base>
  4047bd:	lea    rdi,[rip+0xfffffffffffffbcc]        # 404390 <read_token_andand@@Base>
  4047c4:	lea    rsi,[rip+0x7b7c]        # 40c347 <_IO_stdin_used@@Base+0x347>
  4047cb:	mov    edx,0x28c
  4047d0:	call   407410 <UnityDefaultTestRun@@Base>
  4047d5:	lea    rdi,[rip+0xfffffffffffffc74]        # 404450 <read_token_lessthan@@Base>
  4047dc:	lea    rsi,[rip+0x7b92]        # 40c375 <_IO_stdin_used@@Base+0x375>
  4047e3:	mov    edx,0x28d
  4047e8:	call   407410 <UnityDefaultTestRun@@Base>
  4047ed:	lea    rdi,[rip+0xfffffffffffffcbc]        # 4044b0 <read_token_greaterthan@@Base>
  4047f4:	lea    rsi,[rip+0x7b8e]        # 40c389 <_IO_stdin_used@@Base+0x389>
  4047fb:	mov    edx,0x28e
  404800:	call   407410 <UnityDefaultTestRun@@Base>
  404805:	lea    rdi,[rip+0xfffffffffffffd04]        # 404510 <read_token_not@@Base>
  40480c:	lea    rsi,[rip+0x7b8d]        # 40c3a0 <_IO_stdin_used@@Base+0x3a0>
  404813:	mov    edx,0x28f
  404818:	call   407410 <UnityDefaultTestRun@@Base>
  40481d:	pop    rax
  40481e:	jmp    407500 <UnityEnd@@Base>
  404823:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40482d:	nop    DWORD PTR [rax]
  404830:	push   r15
  404832:	push   r14
  404834:	push   rbx
  404835:	lea    rdi,[rip+0x78ed]        # 40c129 <_IO_stdin_used@@Base+0x129>
  40483c:	lea    rsi,[rip+0x7962]        # 40c1a5 <_IO_stdin_used@@Base+0x1a5>
  404843:	mov    edx,0xb640350a
  404848:	call   409240 <next@@Base+0xfe0>
  40484d:	xor    ebx,ebx
  40484f:	lea    r14,[rip+0xb32a]        # 40fb80 <UnitySizeMask@@Base+0x3570>
  404856:	lea    r15,[rip+0xb6a3]        # 40ff00 <UnitySizeMask@@Base+0x38f0>
  40485d:	nop    DWORD PTR [rax]
  404860:	mov    edi,DWORD PTR [r14+rbx*2]
  404864:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  404869:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  40486e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  404873:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  404878:	call   409690 <next@@Base+0x1430>
  40487d:	mov    edi,DWORD PTR [rbx+r15*1]
  404881:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  404886:	call   409ab0 <next@@Base+0x1850>
  40488b:	add    rbx,0x10
  40488f:	cmp    rbx,0x1c0
  404896:	jne    404860 <main@@Base+0x2f0>
  404898:	call   409ec0 <next@@Base+0x1c60>
  40489d:	pop    rbx
  40489e:	pop    r14
  4048a0:	pop    r15
  4048a2:	jmp    40a660 <next@@Base+0x2400>
  4048a7:	nop    WORD PTR [rax+rax*1+0x0]
  4048b0:	push   rax
  4048b1:	call   404830 <main@@Base+0x2c0>
  4048b6:	vxorps xmm0,xmm0,xmm0
  4048ba:	vmovaps XMMWORD PTR [rip+0xc89e],xmm0        # 411160 <__bss_start@@Base+0x10>
  4048c2:	vmovaps XMMWORD PTR [rip+0xc8a6],xmm0        # 411170 <__bss_start@@Base+0x20>
  4048ca:	vmovaps XMMWORD PTR [rip+0xc8ae],xmm0        # 411180 <__bss_start@@Base+0x30>
  4048d2:	vmovaps XMMWORD PTR [rip+0xc8b6],xmm0        # 411190 <__bss_start@@Base+0x40>
  4048da:	vmovaps XMMWORD PTR [rip+0xc8be],xmm0        # 4111a0 <__bss_start@@Base+0x50>
  4048e2:	vmovaps XMMWORD PTR [rip+0xc8c6],xmm0        # 4111b0 <__bss_start@@Base+0x60>
  4048ea:	vmovaps XMMWORD PTR [rip+0xc8ce],xmm0        # 4111c0 <__bss_start@@Base+0x70>
  4048f2:	vmovaps XMMWORD PTR [rip+0xc8d6],xmm0        # 4111d0 <__bss_start@@Base+0x80>
  4048fa:	vmovaps XMMWORD PTR [rip+0xc8de],xmm0        # 4111e0 <__bss_start@@Base+0x90>
  404902:	vmovaps XMMWORD PTR [rip+0xc8e6],xmm0        # 4111f0 <__bss_start@@Base+0xa0>
  40490a:	vmovaps XMMWORD PTR [rip+0xc8ee],xmm0        # 411200 <__bss_start@@Base+0xb0>
  404912:	vmovaps XMMWORD PTR [rip+0xc8f6],xmm0        # 411210 <__bss_start@@Base+0xc0>
  40491a:	vmovaps XMMWORD PTR [rip+0xc8fe],xmm0        # 411220 <__bss_start@@Base+0xd0>
  404922:	vmovaps XMMWORD PTR [rip+0xc906],xmm0        # 411230 <__bss_start@@Base+0xe0>
  40492a:	vmovaps XMMWORD PTR [rip+0xc90e],xmm0        # 411240 <__bss_start@@Base+0xf0>
  404932:	vmovaps XMMWORD PTR [rip+0xc916],xmm0        # 411250 <__bss_start@@Base+0x100>
  40493a:	vmovaps XMMWORD PTR [rip+0xc91e],xmm0        # 411260 <__bss_start@@Base+0x110>
  404942:	vmovaps XMMWORD PTR [rip+0xc926],xmm0        # 411270 <__bss_start@@Base+0x120>
  40494a:	vmovaps XMMWORD PTR [rip+0xc92e],xmm0        # 411280 <__bss_start@@Base+0x130>
  404952:	vmovaps XMMWORD PTR [rip+0xc936],xmm0        # 411290 <__bss_start@@Base+0x140>
  40495a:	vmovaps XMMWORD PTR [rip+0xc93e],xmm0        # 4112a0 <__bss_start@@Base+0x150>
  404962:	vmovaps XMMWORD PTR [rip+0xc946],xmm0        # 4112b0 <__bss_start@@Base+0x160>
  40496a:	vmovaps XMMWORD PTR [rip+0xc94e],xmm0        # 4112c0 <__bss_start@@Base+0x170>
  404972:	vmovaps XMMWORD PTR [rip+0xc956],xmm0        # 4112d0 <__bss_start@@Base+0x180>
  40497a:	vmovaps XMMWORD PTR [rip+0xc95e],xmm0        # 4112e0 <__bss_start@@Base+0x190>
  404982:	vmovaps XMMWORD PTR [rip+0xc966],xmm0        # 4112f0 <__bss_start@@Base+0x1a0>
  40498a:	vmovaps XMMWORD PTR [rip+0xc96e],xmm0        # 411300 <__bss_start@@Base+0x1b0>
  404992:	vmovaps XMMWORD PTR [rip+0xc976],xmm0        # 411310 <__bss_start@@Base+0x1c0>
  40499a:	pop    rax
  40499b:	ret    
  40499c:	nop    DWORD PTR [rax+0x0]
  4049a0:	lea    rdi,[rip+0xfffffffffffffe89]        # 404830 <main@@Base+0x2c0>
  4049a7:	lea    rsi,[rip+0xffffffffffffff02]        # 4048b0 <main@@Base+0x340>
  4049ae:	jmp    40aa40 <__gcov_flush@@Base+0xb0>
  4049b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049bd:	nop    DWORD PTR [rax]

00000000004049c0 <UnityPrint@@Base>:
  4049c0:	push   rbp
  4049c1:	push   r15
  4049c3:	push   r14
  4049c5:	push   r13
  4049c7:	push   r12
  4049c9:	push   rbx
  4049ca:	push   rax
  4049cb:	inc    QWORD PTR [rip+0xc94e]        # 411320 <__bss_start@@Base+0x1d0>
  4049d2:	test   rdi,rdi
  4049d5:	je     404b7b <UnityPrint@@Base+0x1bb>
  4049db:	mov    rbx,rdi
  4049de:	inc    QWORD PTR [rip+0xc943]        # 411328 <__bss_start@@Base+0x1d8>
  4049e5:	mov    al,BYTE PTR [rdi]
  4049e7:	lea    rcx,[rip+0xc952]        # 411340 <__bss_start@@Base+0x1f0>
  4049ee:	test   al,al
  4049f0:	je     404b8b <UnityPrint@@Base+0x1cb>
  4049f6:	lea    r15,[rip+0xc953]        # 411350 <__bss_start@@Base+0x200>
  4049fd:	vpcmpeqd xmm1,xmm1,xmm1
  404a01:	mov    r12,QWORD PTR [rip+0xc5d8]        # 410fe0 <stdout@GLIBC_2.2.5>
  404a08:	lea    r13,[rip+0xc971]        # 411380 <__bss_start@@Base+0x230>
  404a0f:	lea    rbp,[rip+0xc94a]        # 411360 <__bss_start@@Base+0x210>
  404a16:	jmp    404a8f <UnityPrint@@Base+0xcf>
  404a18:	nop    DWORD PTR [rax+rax*1+0x0]
  404a20:	inc    QWORD PTR [rip+0xc949]        # 411370 <__bss_start@@Base+0x220>
  404a27:	vmovdqa xmm0,XMMWORD PTR [rip+0xc991]        # 4113c0 <__bss_start@@Base+0x270>
  404a2f:	vpsubq xmm0,xmm0,xmm1
  404a33:	vmovdqa XMMWORD PTR [rip+0xc985],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404a3b:	mov    rsi,QWORD PTR [r12]
  404a3f:	mov    edi,0x5c
  404a44:	call   403130 <putc@plt>
  404a49:	vmovdqa xmm0,XMMWORD PTR [rip+0xc96f]        # 4113c0 <__bss_start@@Base+0x270>
  404a51:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x7957]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  404a59:	vmovdqa XMMWORD PTR [rip+0xc95f],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404a61:	mov    rsi,QWORD PTR [r12]
  404a65:	mov    edi,0x72
  404a6a:	call   403130 <putc@plt>
  404a6f:	vpcmpeqd xmm1,xmm1,xmm1
  404a73:	mov    rax,r13
  404a76:	inc    QWORD PTR [rax]
  404a79:	inc    QWORD PTR [rip+0xc928]        # 4113a8 <__bss_start@@Base+0x258>
  404a80:	movzx  eax,BYTE PTR [rbx+0x1]
  404a84:	inc    rbx
  404a87:	test   al,al
  404a89:	je     404b84 <UnityPrint@@Base+0x1c4>
  404a8f:	inc    QWORD PTR [rip+0xc8a2]        # 411338 <__bss_start@@Base+0x1e8>
  404a96:	mov    rcx,r15
  404a99:	cmp    al,0x7f
  404a9b:	je     404ae0 <UnityPrint@@Base+0x120>
  404a9d:	inc    QWORD PTR [rip+0xc8a4]        # 411348 <__bss_start@@Base+0x1f8>
  404aa4:	mov    rcx,rbp
  404aa7:	cmp    al,0x20
  404aa9:	jl     404ae0 <UnityPrint@@Base+0x120>
  404aab:	inc    QWORD PTR [rip+0xc8a6]        # 411358 <__bss_start@@Base+0x208>
  404ab2:	movsx  edi,al
  404ab5:	vmovdqa xmm0,XMMWORD PTR [rip+0xc903]        # 4113c0 <__bss_start@@Base+0x270>
  404abd:	vpsubq xmm0,xmm0,xmm1
  404ac1:	vmovdqa XMMWORD PTR [rip+0xc8f7],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404ac9:	mov    rsi,QWORD PTR [r12]
  404acd:	call   403130 <putc@plt>
  404ad2:	vpcmpeqd xmm1,xmm1,xmm1
  404ad6:	lea    rax,[rip+0xc88b]        # 411368 <__bss_start@@Base+0x218>
  404add:	jmp    404a76 <UnityPrint@@Base+0xb6>
  404adf:	nop
  404ae0:	inc    QWORD PTR [rcx]
  404ae3:	movzx  r14d,BYTE PTR [rbx]
  404ae7:	cmp    r14b,0xd
  404aeb:	je     404a20 <UnityPrint@@Base+0x60>
  404af1:	inc    QWORD PTR [rip+0xc880]        # 411378 <__bss_start@@Base+0x228>
  404af8:	vmovdqa xmm0,XMMWORD PTR [rip+0xc8c0]        # 4113c0 <__bss_start@@Base+0x270>
  404b00:	vpsubq xmm0,xmm0,xmm1
  404b04:	vmovdqa XMMWORD PTR [rip+0xc8b4],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404b0c:	mov    rsi,QWORD PTR [r12]
  404b10:	mov    edi,0x5c
  404b15:	call   403130 <putc@plt>
  404b1a:	cmp    r14b,0xa
  404b1e:	jne    404b56 <UnityPrint@@Base+0x196>
  404b20:	inc    QWORD PTR [rip+0xc861]        # 411388 <__bss_start@@Base+0x238>
  404b27:	vmovdqa xmm0,XMMWORD PTR [rip+0xc891]        # 4113c0 <__bss_start@@Base+0x270>
  404b2f:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x7879]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  404b37:	vmovdqa XMMWORD PTR [rip+0xc881],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404b3f:	mov    rsi,QWORD PTR [r12]
  404b43:	mov    edi,0x6e
  404b48:	call   403130 <putc@plt>
  404b4d:	lea    rax,[rip+0xc844]        # 411398 <__bss_start@@Base+0x248>
  404b54:	jmp    404b72 <UnityPrint@@Base+0x1b2>
  404b56:	inc    QWORD PTR [rip+0xc833]        # 411390 <__bss_start@@Base+0x240>
  404b5d:	movsx  rdi,BYTE PTR [rbx]
  404b61:	mov    esi,0x2
  404b66:	call   404bb0 <UnityPrintNumberHex@@Base>
  404b6b:	lea    rax,[rip+0xc82e]        # 4113a0 <__bss_start@@Base+0x250>
  404b72:	vpcmpeqd xmm1,xmm1,xmm1
  404b76:	jmp    404a76 <UnityPrint@@Base+0xb6>
  404b7b:	lea    rcx,[rip+0xc7ae]        # 411330 <__bss_start@@Base+0x1e0>
  404b82:	jmp    404b8b <UnityPrint@@Base+0x1cb>
  404b84:	lea    rcx,[rip+0xc7b5]        # 411340 <__bss_start@@Base+0x1f0>
  404b8b:	inc    QWORD PTR [rcx]
  404b8e:	inc    QWORD PTR [rip+0xc81b]        # 4113b0 <__bss_start@@Base+0x260>
  404b95:	add    rsp,0x8
  404b99:	pop    rbx
  404b9a:	pop    r12
  404b9c:	pop    r13
  404b9e:	pop    r14
  404ba0:	pop    r15
  404ba2:	pop    rbp
  404ba3:	ret    
  404ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bae:	xchg   ax,ax

0000000000404bb0 <UnityPrintNumberHex@@Base>:
  404bb0:	push   rbp
  404bb1:	push   r15
  404bb3:	push   r14
  404bb5:	push   r13
  404bb7:	push   r12
  404bb9:	push   rbx
  404bba:	push   rax
  404bbb:	mov    r14d,esi
  404bbe:	mov    r12,rdi
  404bc1:	inc    QWORD PTR [rip+0xc808]        # 4113d0 <__bss_start@@Base+0x280>
  404bc8:	vmovdqa xmm0,XMMWORD PTR [rip+0xc7f0]        # 4113c0 <__bss_start@@Base+0x270>
  404bd0:	vpcmpeqd xmm1,xmm1,xmm1
  404bd4:	vpsubq xmm0,xmm0,xmm1
  404bd8:	vmovdqa XMMWORD PTR [rip+0xc7e0],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404be0:	mov    r15,QWORD PTR [rip+0xc3f9]        # 410fe0 <stdout@GLIBC_2.2.5>
  404be7:	mov    rsi,QWORD PTR [r15]
  404bea:	mov    edi,0x30
  404bef:	call   403130 <putc@plt>
  404bf4:	vmovdqa xmm0,XMMWORD PTR [rip+0xc7c4]        # 4113c0 <__bss_start@@Base+0x270>
  404bfc:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x77ac]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  404c04:	vmovdqa XMMWORD PTR [rip+0xc7b4],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404c0c:	mov    rsi,QWORD PTR [r15]
  404c0f:	mov    edi,0x78
  404c14:	call   403130 <putc@plt>
  404c19:	inc    QWORD PTR [rip+0xc7b8]        # 4113d8 <__bss_start@@Base+0x288>
  404c20:	test   r14b,r14b
  404c23:	jle    404cb0 <UnityPrintNumberHex@@Base+0x100>
  404c29:	movsx  rbp,r14b
  404c2d:	lea    rbx,[rbp*4-0x4]
  404c35:	lea    r14,[rip+0xc7cc]        # 411408 <__bss_start@@Base+0x2b8>
  404c3c:	jmp    404c81 <UnityPrintNumberHex@@Base+0xd1>
  404c3e:	xchg   ax,ax
  404c40:	inc    QWORD PTR [rip+0xc7b1]        # 4113f8 <__bss_start@@Base+0x2a8>
  404c47:	add    edi,0x37
  404c4a:	mov    r13,r14
  404c4d:	vmovdqa xmm0,XMMWORD PTR [rip+0xc76b]        # 4113c0 <__bss_start@@Base+0x270>
  404c55:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x7753]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  404c5d:	vmovdqa XMMWORD PTR [rip+0xc75b],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404c65:	mov    rsi,QWORD PTR [r15]
  404c68:	call   403130 <putc@plt>
  404c6d:	inc    QWORD PTR [r13+0x0]
  404c71:	inc    QWORD PTR [rip+0xc798]        # 411410 <__bss_start@@Base+0x2c0>
  404c78:	add    rbx,0xfffffffffffffffc
  404c7c:	test   rbp,rbp
  404c7f:	jle    404cb0 <UnityPrintNumberHex@@Base+0x100>
  404c81:	inc    QWORD PTR [rip+0xc758]        # 4113e0 <__bss_start@@Base+0x290>
  404c88:	dec    rbp
  404c8b:	mov    eax,ebx
  404c8d:	and    al,0xfc
  404c8f:	shrx   rdi,r12,rax
  404c94:	and    edi,0xf
  404c97:	cmp    rdi,0x9
  404c9b:	ja     404c40 <UnityPrintNumberHex@@Base+0x90>
  404c9d:	inc    QWORD PTR [rip+0xc74c]        # 4113f0 <__bss_start@@Base+0x2a0>
  404ca4:	or     edi,0x30
  404ca7:	lea    r13,[rip+0xc752]        # 411400 <__bss_start@@Base+0x2b0>
  404cae:	jmp    404c4d <UnityPrintNumberHex@@Base+0x9d>
  404cb0:	inc    QWORD PTR [rip+0xc731]        # 4113e8 <__bss_start@@Base+0x298>
  404cb7:	inc    QWORD PTR [rip+0xc75a]        # 411418 <__bss_start@@Base+0x2c8>
  404cbe:	add    rsp,0x8
  404cc2:	pop    rbx
  404cc3:	pop    r12
  404cc5:	pop    r13
  404cc7:	pop    r14
  404cc9:	pop    r15
  404ccb:	pop    rbp
  404ccc:	ret    
  404ccd:	nop    DWORD PTR [rax]

0000000000404cd0 <UnityPrintLen@@Base>:
  404cd0:	push   rbp
  404cd1:	push   r15
  404cd3:	push   r14
  404cd5:	push   r13
  404cd7:	push   r12
  404cd9:	push   rbx
  404cda:	push   rax
  404cdb:	inc    QWORD PTR [rip+0xc73e]        # 411420 <__bss_start@@Base+0x2d0>
  404ce2:	test   rdi,rdi
  404ce5:	je     404e9b <UnityPrintLen@@Base+0x1cb>
  404ceb:	mov    r15,rdi
  404cee:	inc    QWORD PTR [rip+0xc733]        # 411428 <__bss_start@@Base+0x2d8>
  404cf5:	mov    al,BYTE PTR [rdi]
  404cf7:	lea    rcx,[rip+0xc742]        # 411440 <__bss_start@@Base+0x2f0>
  404cfe:	test   al,al
  404d00:	je     404eb4 <UnityPrintLen@@Base+0x1e4>
  404d06:	mov    ebp,esi
  404d08:	lea    r12,[rip+0xc751]        # 411460 <__bss_start@@Base+0x310>
  404d0f:	vpcmpeqd xmm1,xmm1,xmm1
  404d13:	mov    r13,QWORD PTR [rip+0xc2c6]        # 410fe0 <stdout@GLIBC_2.2.5>
  404d1a:	mov    rbx,r15
  404d1d:	jmp    404d93 <UnityPrintLen@@Base+0xc3>
  404d1f:	nop
  404d20:	inc    QWORD PTR [rip+0xc759]        # 411480 <__bss_start@@Base+0x330>
  404d27:	vmovdqa xmm0,XMMWORD PTR [rip+0xc691]        # 4113c0 <__bss_start@@Base+0x270>
  404d2f:	vpsubq xmm0,xmm0,xmm1
  404d33:	vmovdqa XMMWORD PTR [rip+0xc685],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404d3b:	mov    rsi,QWORD PTR [r13+0x0]
  404d3f:	mov    edi,0x5c
  404d44:	call   403130 <putc@plt>
  404d49:	vmovdqa xmm0,XMMWORD PTR [rip+0xc66f]        # 4113c0 <__bss_start@@Base+0x270>
  404d51:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x7657]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  404d59:	vmovdqa XMMWORD PTR [rip+0xc65f],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404d61:	mov    rsi,QWORD PTR [r13+0x0]
  404d65:	mov    edi,0x72
  404d6a:	call   403130 <putc@plt>
  404d6f:	vpcmpeqd xmm1,xmm1,xmm1
  404d73:	lea    rax,[rip+0xc716]        # 411490 <__bss_start@@Base+0x340>
  404d7a:	inc    QWORD PTR [rax]
  404d7d:	inc    QWORD PTR [rip+0xc734]        # 4114b8 <__bss_start@@Base+0x368>
  404d84:	movzx  eax,BYTE PTR [rbx+0x1]
  404d88:	inc    rbx
  404d8b:	test   al,al
  404d8d:	je     404ea4 <UnityPrintLen@@Base+0x1d4>
  404d93:	inc    QWORD PTR [rip+0xc69e]        # 411438 <__bss_start@@Base+0x2e8>
  404d9a:	mov    ecx,ebx
  404d9c:	sub    ecx,r15d
  404d9f:	cmp    ecx,ebp
  404da1:	jae    404ead <UnityPrintLen@@Base+0x1dd>
  404da7:	inc    QWORD PTR [rip+0xc69a]        # 411448 <__bss_start@@Base+0x2f8>
  404dae:	mov    rcx,r12
  404db1:	cmp    al,0x7f
  404db3:	je     404e00 <UnityPrintLen@@Base+0x130>
  404db5:	inc    QWORD PTR [rip+0xc69c]        # 411458 <__bss_start@@Base+0x308>
  404dbc:	lea    rcx,[rip+0xc6ad]        # 411470 <__bss_start@@Base+0x320>
  404dc3:	cmp    al,0x20
  404dc5:	jl     404e00 <UnityPrintLen@@Base+0x130>
  404dc7:	inc    QWORD PTR [rip+0xc69a]        # 411468 <__bss_start@@Base+0x318>
  404dce:	movsx  edi,al
  404dd1:	vmovdqa xmm0,XMMWORD PTR [rip+0xc5e7]        # 4113c0 <__bss_start@@Base+0x270>
  404dd9:	vpsubq xmm0,xmm0,xmm1
  404ddd:	vmovdqa XMMWORD PTR [rip+0xc5db],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404de5:	mov    rsi,QWORD PTR [r13+0x0]
  404de9:	call   403130 <putc@plt>
  404dee:	vpcmpeqd xmm1,xmm1,xmm1
  404df2:	lea    rax,[rip+0xc67f]        # 411478 <__bss_start@@Base+0x328>
  404df9:	jmp    404d7a <UnityPrintLen@@Base+0xaa>
  404dfe:	xchg   ax,ax
  404e00:	inc    QWORD PTR [rcx]
  404e03:	movzx  r14d,BYTE PTR [rbx]
  404e07:	cmp    r14b,0xd
  404e0b:	je     404d20 <UnityPrintLen@@Base+0x50>
  404e11:	inc    QWORD PTR [rip+0xc670]        # 411488 <__bss_start@@Base+0x338>
  404e18:	vmovdqa xmm0,XMMWORD PTR [rip+0xc5a0]        # 4113c0 <__bss_start@@Base+0x270>
  404e20:	vpsubq xmm0,xmm0,xmm1
  404e24:	vmovdqa XMMWORD PTR [rip+0xc594],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404e2c:	mov    rsi,QWORD PTR [r13+0x0]
  404e30:	mov    edi,0x5c
  404e35:	call   403130 <putc@plt>
  404e3a:	cmp    r14b,0xa
  404e3e:	jne    404e76 <UnityPrintLen@@Base+0x1a6>
  404e40:	inc    QWORD PTR [rip+0xc651]        # 411498 <__bss_start@@Base+0x348>
  404e47:	vmovdqa xmm0,XMMWORD PTR [rip+0xc571]        # 4113c0 <__bss_start@@Base+0x270>
  404e4f:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x7559]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  404e57:	vmovdqa XMMWORD PTR [rip+0xc561],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404e5f:	mov    rsi,QWORD PTR [r13+0x0]
  404e63:	mov    edi,0x6e
  404e68:	call   403130 <putc@plt>
  404e6d:	lea    rax,[rip+0xc634]        # 4114a8 <__bss_start@@Base+0x358>
  404e74:	jmp    404e92 <UnityPrintLen@@Base+0x1c2>
  404e76:	inc    QWORD PTR [rip+0xc623]        # 4114a0 <__bss_start@@Base+0x350>
  404e7d:	movsx  rdi,BYTE PTR [rbx]
  404e81:	mov    esi,0x2
  404e86:	call   404bb0 <UnityPrintNumberHex@@Base>
  404e8b:	lea    rax,[rip+0xc61e]        # 4114b0 <__bss_start@@Base+0x360>
  404e92:	vpcmpeqd xmm1,xmm1,xmm1
  404e96:	jmp    404d7a <UnityPrintLen@@Base+0xaa>
  404e9b:	lea    rcx,[rip+0xc58e]        # 411430 <__bss_start@@Base+0x2e0>
  404ea2:	jmp    404eb4 <UnityPrintLen@@Base+0x1e4>
  404ea4:	lea    rcx,[rip+0xc595]        # 411440 <__bss_start@@Base+0x2f0>
  404eab:	jmp    404eb4 <UnityPrintLen@@Base+0x1e4>
  404ead:	lea    rcx,[rip+0xc59c]        # 411450 <__bss_start@@Base+0x300>
  404eb4:	inc    QWORD PTR [rcx]
  404eb7:	inc    QWORD PTR [rip+0xc602]        # 4114c0 <__bss_start@@Base+0x370>
  404ebe:	add    rsp,0x8
  404ec2:	pop    rbx
  404ec3:	pop    r12
  404ec5:	pop    r13
  404ec7:	pop    r14
  404ec9:	pop    r15
  404ecb:	pop    rbp
  404ecc:	ret    
  404ecd:	nop    DWORD PTR [rax]

0000000000404ed0 <UnityPrintNumberByStyle@@Base>:
  404ed0:	push   rax
  404ed1:	inc    QWORD PTR [rip+0xc5f8]        # 4114d0 <__bss_start@@Base+0x380>
  404ed8:	test   sil,0x10
  404edc:	jne    404f0b <UnityPrintNumberByStyle@@Base+0x3b>
  404ede:	inc    QWORD PTR [rip+0xc5fb]        # 4114e0 <__bss_start@@Base+0x390>
  404ee5:	test   sil,0x20
  404ee9:	jne    404f20 <UnityPrintNumberByStyle@@Base+0x50>
  404eeb:	inc    QWORD PTR [rip+0xc606]        # 4114f8 <__bss_start@@Base+0x3a8>
  404ef2:	add    sil,sil
  404ef5:	and    sil,0x1e
  404ef9:	movzx  esi,sil
  404efd:	call   404bb0 <UnityPrintNumberHex@@Base>
  404f02:	lea    rax,[rip+0xc5ff]        # 411508 <__bss_start@@Base+0x3b8>
  404f09:	jmp    404f42 <UnityPrintNumberByStyle@@Base+0x72>
  404f0b:	inc    QWORD PTR [rip+0xc5c6]        # 4114d8 <__bss_start@@Base+0x388>
  404f12:	call   404f50 <UnityPrintNumber@@Base>
  404f17:	lea    rax,[rip+0xc5ca]        # 4114e8 <__bss_start@@Base+0x398>
  404f1e:	jmp    404f42 <UnityPrintNumberByStyle@@Base+0x72>
  404f20:	inc    QWORD PTR [rip+0xc5c9]        # 4114f0 <__bss_start@@Base+0x3a0>
  404f27:	and    esi,0xf
  404f2a:	lea    rax,[rip+0x76df]        # 40c610 <UnitySizeMask@@Base>
  404f31:	and    rdi,QWORD PTR [rax+rsi*8-0x8]
  404f36:	call   405170 <UnityPrintNumberUnsigned@@Base>
  404f3b:	lea    rax,[rip+0xc5be]        # 411500 <__bss_start@@Base+0x3b0>
  404f42:	inc    QWORD PTR [rax]
  404f45:	inc    QWORD PTR [rip+0xc5c4]        # 411510 <__bss_start@@Base+0x3c0>
  404f4c:	pop    rax
  404f4d:	ret    
  404f4e:	xchg   ax,ax

0000000000404f50 <UnityPrintNumber@@Base>:
  404f50:	push   r15
  404f52:	push   r14
  404f54:	push   r13
  404f56:	push   r12
  404f58:	push   rbx
  404f59:	mov    r14,rdi
  404f5c:	inc    QWORD PTR [rip+0xc5bd]        # 411520 <__bss_start@@Base+0x3d0>
  404f63:	test   rdi,rdi
  404f66:	js     404f78 <UnityPrintNumber@@Base+0x28>
  404f68:	inc    QWORD PTR [rip+0xc5c1]        # 411530 <__bss_start@@Base+0x3e0>
  404f6f:	lea    rax,[rip+0xc5ca]        # 411540 <__bss_start@@Base+0x3f0>
  404f76:	jmp    404fb5 <UnityPrintNumber@@Base+0x65>
  404f78:	inc    QWORD PTR [rip+0xc5a9]        # 411528 <__bss_start@@Base+0x3d8>
  404f7f:	vmovdqa xmm0,XMMWORD PTR [rip+0xc439]        # 4113c0 <__bss_start@@Base+0x270>
  404f87:	vpcmpeqd xmm1,xmm1,xmm1
  404f8b:	vpsubq xmm0,xmm0,xmm1
  404f8f:	vmovdqa XMMWORD PTR [rip+0xc429],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  404f97:	mov    rax,QWORD PTR [rip+0xc042]        # 410fe0 <stdout@GLIBC_2.2.5>
  404f9e:	mov    rsi,QWORD PTR [rax]
  404fa1:	mov    edi,0x2d
  404fa6:	call   403130 <putc@plt>
  404fab:	neg    r14
  404fae:	lea    rax,[rip+0xc583]        # 411538 <__bss_start@@Base+0x3e8>
  404fb5:	inc    QWORD PTR [rax]
  404fb8:	inc    QWORD PTR [rip+0xc589]        # 411548 <__bss_start@@Base+0x3f8>
  404fbf:	cmp    r14,0xa
  404fc3:	jb     405038 <UnityPrintNumber@@Base+0xe8>
  404fc5:	mov    rdx,QWORD PTR [rip+0xc584]        # 411550 <__bss_start@@Base+0x400>
  404fcc:	inc    rdx
  404fcf:	mov    r15d,0x1
  404fd5:	lea    rcx,[rip+0xc58c]        # 411568 <__bss_start@@Base+0x418>
  404fdc:	lea    rdi,[rip+0xc575]        # 411558 <__bss_start@@Base+0x408>
  404fe3:	jmp    405005 <UnityPrintNumber@@Base+0xb5>
  404fe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fef:	nop
  404ff0:	mov    rax,r14
  404ff3:	xor    edx,edx
  404ff5:	div    rbx
  404ff8:	lea    rdx,[rsi+0x1]
  404ffc:	mov    r15,rbx
  404fff:	cmp    rax,0x9
  405003:	jbe    405047 <UnityPrintNumber@@Base+0xf7>
  405005:	mov    rsi,rdx
  405008:	lea    rax,[r15+r15*1]
  40500c:	lea    rbx,[rax+rax*4]
  405010:	cmp    rbx,r15
  405013:	jbe    40504d <UnityPrintNumber@@Base+0xfd>
  405015:	inc    QWORD PTR [rip+0xc544]        # 411560 <__bss_start@@Base+0x410>
  40501c:	inc    QWORD PTR [rip+0xc54d]        # 411570 <__bss_start@@Base+0x420>
  405023:	mov    rax,r14
  405026:	or     rax,rbx
  405029:	shr    rax,0x20
  40502d:	jne    404ff0 <UnityPrintNumber@@Base+0xa0>
  40502f:	mov    eax,r14d
  405032:	xor    edx,edx
  405034:	div    ebx
  405036:	jmp    404ff8 <UnityPrintNumber@@Base+0xa8>
  405038:	lea    rcx,[rip+0xc519]        # 411558 <__bss_start@@Base+0x408>
  40503f:	mov    r15d,0x1
  405045:	jmp    405054 <UnityPrintNumber@@Base+0x104>
  405047:	mov    r15,rbx
  40504a:	mov    rcx,rdi
  40504d:	mov    QWORD PTR [rip+0xc4fc],rsi        # 411550 <__bss_start@@Base+0x400>
  405054:	inc    QWORD PTR [rcx]
  405057:	inc    QWORD PTR [rip+0xc51a]        # 411578 <__bss_start@@Base+0x428>
  40505e:	mov    rax,r14
  405061:	or     rax,r15
  405064:	shr    rax,0x20
  405068:	je     405077 <UnityPrintNumber@@Base+0x127>
  40506a:	mov    rax,r14
  40506d:	xor    edx,edx
  40506f:	div    r15
  405072:	mov    rdi,rax
  405075:	jmp    405081 <UnityPrintNumber@@Base+0x131>
  405077:	mov    eax,r14d
  40507a:	xor    edx,edx
  40507c:	div    r15d
  40507f:	mov    edi,eax
  405081:	movabs r12,0xcccccccccccccccd
  40508b:	mov    rax,rdi
  40508e:	mul    r12
  405091:	shr    rdx,0x3
  405095:	add    edx,edx
  405097:	lea    eax,[rdx+rdx*4]
  40509a:	sub    edi,eax
  40509c:	or     edi,0x30
  40509f:	vmovdqa xmm0,XMMWORD PTR [rip+0xc319]        # 4113c0 <__bss_start@@Base+0x270>
  4050a7:	vpcmpeqd xmm1,xmm1,xmm1
  4050ab:	vpsubq xmm0,xmm0,xmm1
  4050af:	vmovdqa XMMWORD PTR [rip+0xc309],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4050b7:	mov    r13,QWORD PTR [rip+0xbf22]        # 410fe0 <stdout@GLIBC_2.2.5>
  4050be:	mov    rsi,QWORD PTR [r13+0x0]
  4050c2:	call   403130 <putc@plt>
  4050c7:	cmp    r15,0xa
  4050cb:	jae    405119 <UnityPrintNumber@@Base+0x1c9>
  4050cd:	jmp    405144 <UnityPrintNumber@@Base+0x1f4>
  4050cf:	nop
  4050d0:	mov    rax,r14
  4050d3:	xor    edx,edx
  4050d5:	div    rbx
  4050d8:	mov    rdi,rax
  4050db:	mov    rax,rdi
  4050de:	mul    r12
  4050e1:	shr    rdx,0x3
  4050e5:	add    edx,edx
  4050e7:	lea    eax,[rdx+rdx*4]
  4050ea:	sub    edi,eax
  4050ec:	or     edi,0x30
  4050ef:	vmovdqa xmm0,XMMWORD PTR [rip+0xc2c9]        # 4113c0 <__bss_start@@Base+0x270>
  4050f7:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x72b1]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4050ff:	vmovdqa XMMWORD PTR [rip+0xc2b9],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  405107:	mov    rsi,QWORD PTR [r13+0x0]
  40510b:	call   403130 <putc@plt>
  405110:	cmp    r15,0x63
  405114:	mov    r15,rbx
  405117:	jbe    405144 <UnityPrintNumber@@Base+0x1f4>
  405119:	mov    rax,r15
  40511c:	mul    r12
  40511f:	mov    rbx,rdx
  405122:	shr    rbx,0x3
  405126:	inc    QWORD PTR [rip+0xc453]        # 411580 <__bss_start@@Base+0x430>
  40512d:	mov    rax,r14
  405130:	or     rax,rbx
  405133:	shr    rax,0x20
  405137:	jne    4050d0 <UnityPrintNumber@@Base+0x180>
  405139:	mov    eax,r14d
  40513c:	xor    edx,edx
  40513e:	div    ebx
  405140:	mov    edi,eax
  405142:	jmp    4050db <UnityPrintNumber@@Base+0x18b>
  405144:	vmovdqu xmm0,XMMWORD PTR [rip+0xc43c]        # 411588 <__bss_start@@Base+0x438>
  40514c:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x725c]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405154:	vmovdqu XMMWORD PTR [rip+0xc42c],xmm0        # 411588 <__bss_start@@Base+0x438>
  40515c:	pop    rbx
  40515d:	pop    r12
  40515f:	pop    r13
  405161:	pop    r14
  405163:	pop    r15
  405165:	ret    
  405166:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405170 <UnityPrintNumberUnsigned@@Base>:
  405170:	push   r15
  405172:	push   r14
  405174:	push   r13
  405176:	push   r12
  405178:	push   rbx
  405179:	mov    r14,rdi
  40517c:	vmovdqa xmm0,XMMWORD PTR [rip+0xc41c]        # 4115a0 <__bss_start@@Base+0x450>
  405184:	vpcmpeqd xmm1,xmm1,xmm1
  405188:	vpsubq xmm0,xmm0,xmm1
  40518c:	vmovdqa XMMWORD PTR [rip+0xc40c],xmm0        # 4115a0 <__bss_start@@Base+0x450>
  405194:	cmp    rdi,0xa
  405198:	jb     405208 <UnityPrintNumberUnsigned@@Base+0x98>
  40519a:	mov    rdx,QWORD PTR [rip+0xc40f]        # 4115b0 <__bss_start@@Base+0x460>
  4051a1:	inc    rdx
  4051a4:	mov    r15d,0x1
  4051aa:	lea    rcx,[rip+0xc417]        # 4115c8 <__bss_start@@Base+0x478>
  4051b1:	lea    rdi,[rip+0xc400]        # 4115b8 <__bss_start@@Base+0x468>
  4051b8:	jmp    4051d5 <UnityPrintNumberUnsigned@@Base+0x65>
  4051ba:	nop    WORD PTR [rax+rax*1+0x0]
  4051c0:	mov    rax,r14
  4051c3:	xor    edx,edx
  4051c5:	div    rbx
  4051c8:	lea    rdx,[rsi+0x1]
  4051cc:	mov    r15,rbx
  4051cf:	cmp    rax,0x9
  4051d3:	jbe    405217 <UnityPrintNumberUnsigned@@Base+0xa7>
  4051d5:	mov    rsi,rdx
  4051d8:	lea    rax,[r15+r15*1]
  4051dc:	lea    rbx,[rax+rax*4]
  4051e0:	cmp    rbx,r15
  4051e3:	jbe    40521d <UnityPrintNumberUnsigned@@Base+0xad>
  4051e5:	inc    QWORD PTR [rip+0xc3d4]        # 4115c0 <__bss_start@@Base+0x470>
  4051ec:	inc    QWORD PTR [rip+0xc3dd]        # 4115d0 <__bss_start@@Base+0x480>
  4051f3:	mov    rax,r14
  4051f6:	or     rax,rbx
  4051f9:	shr    rax,0x20
  4051fd:	jne    4051c0 <UnityPrintNumberUnsigned@@Base+0x50>
  4051ff:	mov    eax,r14d
  405202:	xor    edx,edx
  405204:	div    ebx
  405206:	jmp    4051c8 <UnityPrintNumberUnsigned@@Base+0x58>
  405208:	lea    rcx,[rip+0xc3a9]        # 4115b8 <__bss_start@@Base+0x468>
  40520f:	mov    r15d,0x1
  405215:	jmp    405224 <UnityPrintNumberUnsigned@@Base+0xb4>
  405217:	mov    r15,rbx
  40521a:	mov    rcx,rdi
  40521d:	mov    QWORD PTR [rip+0xc38c],rsi        # 4115b0 <__bss_start@@Base+0x460>
  405224:	inc    QWORD PTR [rcx]
  405227:	inc    QWORD PTR [rip+0xc3aa]        # 4115d8 <__bss_start@@Base+0x488>
  40522e:	mov    rax,r14
  405231:	or     rax,r15
  405234:	shr    rax,0x20
  405238:	je     405247 <UnityPrintNumberUnsigned@@Base+0xd7>
  40523a:	mov    rax,r14
  40523d:	xor    edx,edx
  40523f:	div    r15
  405242:	mov    rdi,rax
  405245:	jmp    405251 <UnityPrintNumberUnsigned@@Base+0xe1>
  405247:	mov    eax,r14d
  40524a:	xor    edx,edx
  40524c:	div    r15d
  40524f:	mov    edi,eax
  405251:	movabs r12,0xcccccccccccccccd
  40525b:	mov    rax,rdi
  40525e:	mul    r12
  405261:	shr    rdx,0x3
  405265:	add    edx,edx
  405267:	lea    eax,[rdx+rdx*4]
  40526a:	sub    edi,eax
  40526c:	or     edi,0x30
  40526f:	vmovdqa xmm0,XMMWORD PTR [rip+0xc149]        # 4113c0 <__bss_start@@Base+0x270>
  405277:	vpcmpeqd xmm1,xmm1,xmm1
  40527b:	vpsubq xmm0,xmm0,xmm1
  40527f:	vmovdqa XMMWORD PTR [rip+0xc139],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  405287:	mov    r13,QWORD PTR [rip+0xbd52]        # 410fe0 <stdout@GLIBC_2.2.5>
  40528e:	mov    rsi,QWORD PTR [r13+0x0]
  405292:	call   403130 <putc@plt>
  405297:	cmp    r15,0xa
  40529b:	jae    4052e9 <UnityPrintNumberUnsigned@@Base+0x179>
  40529d:	jmp    405314 <UnityPrintNumberUnsigned@@Base+0x1a4>
  40529f:	nop
  4052a0:	mov    rax,r14
  4052a3:	xor    edx,edx
  4052a5:	div    rbx
  4052a8:	mov    rdi,rax
  4052ab:	mov    rax,rdi
  4052ae:	mul    r12
  4052b1:	shr    rdx,0x3
  4052b5:	add    edx,edx
  4052b7:	lea    eax,[rdx+rdx*4]
  4052ba:	sub    edi,eax
  4052bc:	or     edi,0x30
  4052bf:	vmovdqa xmm0,XMMWORD PTR [rip+0xc0f9]        # 4113c0 <__bss_start@@Base+0x270>
  4052c7:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x70e1]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4052cf:	vmovdqa XMMWORD PTR [rip+0xc0e9],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4052d7:	mov    rsi,QWORD PTR [r13+0x0]
  4052db:	call   403130 <putc@plt>
  4052e0:	cmp    r15,0x63
  4052e4:	mov    r15,rbx
  4052e7:	jbe    405314 <UnityPrintNumberUnsigned@@Base+0x1a4>
  4052e9:	mov    rax,r15
  4052ec:	mul    r12
  4052ef:	mov    rbx,rdx
  4052f2:	shr    rbx,0x3
  4052f6:	inc    QWORD PTR [rip+0xc2e3]        # 4115e0 <__bss_start@@Base+0x490>
  4052fd:	mov    rax,r14
  405300:	or     rax,rbx
  405303:	shr    rax,0x20
  405307:	jne    4052a0 <UnityPrintNumberUnsigned@@Base+0x130>
  405309:	mov    eax,r14d
  40530c:	xor    edx,edx
  40530e:	div    ebx
  405310:	mov    edi,eax
  405312:	jmp    4052ab <UnityPrintNumberUnsigned@@Base+0x13b>
  405314:	vmovdqu xmm0,XMMWORD PTR [rip+0xc2cc]        # 4115e8 <__bss_start@@Base+0x498>
  40531c:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x708c]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405324:	vmovdqu XMMWORD PTR [rip+0xc2bc],xmm0        # 4115e8 <__bss_start@@Base+0x498>
  40532c:	pop    rbx
  40532d:	pop    r12
  40532f:	pop    r13
  405331:	pop    r14
  405333:	pop    r15
  405335:	ret    
  405336:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405340 <UnityPrintMask@@Base>:
  405340:	push   rbp
  405341:	push   r15
  405343:	push   r14
  405345:	push   r13
  405347:	push   r12
  405349:	push   rbx
  40534a:	push   rax
  40534b:	mov    r14,rsi
  40534e:	mov    r15,rdi
  405351:	vmovdqa xmm0,XMMWORD PTR [rip+0xc2a7]        # 411600 <__bss_start@@Base+0x4b0>
  405359:	vpcmpeqd xmm1,xmm1,xmm1
  40535d:	vpsubq xmm0,xmm0,xmm1
  405361:	vmovdqa XMMWORD PTR [rip+0xc297],xmm0        # 411600 <__bss_start@@Base+0x4b0>
  405369:	mov    ebx,0x80000000
  40536e:	mov    ebp,0x20
  405373:	mov    r13,QWORD PTR [rip+0xbc66]        # 410fe0 <stdout@GLIBC_2.2.5>
  40537a:	jmp    4053c6 <UnityPrintMask@@Base+0x86>
  40537c:	nop    DWORD PTR [rax+0x0]
  405380:	inc    QWORD PTR [rip+0xc2a1]        # 411628 <__bss_start@@Base+0x4d8>
  405387:	mov    edi,0x58
  40538c:	lea    r12,[rip+0xc2bd]        # 411650 <__bss_start@@Base+0x500>
  405393:	vmovdqa xmm0,XMMWORD PTR [rip+0xc025]        # 4113c0 <__bss_start@@Base+0x270>
  40539b:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x700d]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4053a3:	vmovdqa XMMWORD PTR [rip+0xc015],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4053ab:	mov    rsi,QWORD PTR [r13+0x0]
  4053af:	call   403130 <putc@plt>
  4053b4:	inc    QWORD PTR [r12]
  4053b8:	shr    rbx,1
  4053bb:	inc    QWORD PTR [rip+0xc296]        # 411658 <__bss_start@@Base+0x508>
  4053c2:	dec    ebp
  4053c4:	je     405418 <UnityPrintMask@@Base+0xd8>
  4053c6:	inc    QWORD PTR [rip+0xc243]        # 411610 <__bss_start@@Base+0x4c0>
  4053cd:	test   rbx,r15
  4053d0:	je     405380 <UnityPrintMask@@Base+0x40>
  4053d2:	inc    QWORD PTR [rip+0xc247]        # 411620 <__bss_start@@Base+0x4d0>
  4053d9:	test   rbx,r14
  4053dc:	je     405400 <UnityPrintMask@@Base+0xc0>
  4053de:	inc    QWORD PTR [rip+0xc24b]        # 411630 <__bss_start@@Base+0x4e0>
  4053e5:	mov    edi,0x31
  4053ea:	lea    r12,[rip+0xc24f]        # 411640 <__bss_start@@Base+0x4f0>
  4053f1:	jmp    405393 <UnityPrintMask@@Base+0x53>
  4053f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053fd:	nop    DWORD PTR [rax]
  405400:	inc    QWORD PTR [rip+0xc231]        # 411638 <__bss_start@@Base+0x4e8>
  405407:	mov    edi,0x30
  40540c:	lea    r12,[rip+0xc235]        # 411648 <__bss_start@@Base+0x4f8>
  405413:	jmp    405393 <UnityPrintMask@@Base+0x53>
  405418:	inc    QWORD PTR [rip+0xc1f9]        # 411618 <__bss_start@@Base+0x4c8>
  40541f:	inc    QWORD PTR [rip+0xc23a]        # 411660 <__bss_start@@Base+0x510>
  405426:	add    rsp,0x8
  40542a:	pop    rbx
  40542b:	pop    r12
  40542d:	pop    r13
  40542f:	pop    r14
  405431:	pop    r15
  405433:	pop    rbp
  405434:	ret    
  405435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40543f:	nop

0000000000405440 <UnityPrintFail@@Base>:
  405440:	vmovdqa xmm0,XMMWORD PTR [rip+0xc228]        # 411670 <__bss_start@@Base+0x520>
  405448:	vpcmpeqd xmm1,xmm1,xmm1
  40544c:	vpsubq xmm0,xmm0,xmm1
  405450:	vmovdqa XMMWORD PTR [rip+0xc218],xmm0        # 411670 <__bss_start@@Base+0x520>
  405458:	lea    rdi,[rip+0x6f99]        # 40c3f8 <UnityStrFail@@Base>
  40545f:	jmp    4049c0 <UnityPrint@@Base>
  405464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40546e:	xchg   ax,ax

0000000000405470 <UnityPrintOk@@Base>:
  405470:	vmovdqa xmm0,XMMWORD PTR [rip+0xc208]        # 411680 <__bss_start@@Base+0x530>
  405478:	vpcmpeqd xmm1,xmm1,xmm1
  40547c:	vpsubq xmm0,xmm0,xmm1
  405480:	vmovdqa XMMWORD PTR [rip+0xc1f8],xmm0        # 411680 <__bss_start@@Base+0x530>
  405488:	lea    rdi,[rip+0x6f61]        # 40c3f0 <UnityStrOk@@Base>
  40548f:	jmp    4049c0 <UnityPrint@@Base>
  405494:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40549e:	xchg   ax,ax

00000000004054a0 <UnityConcludeTest@@Base>:
  4054a0:	push   r15
  4054a2:	push   r14
  4054a4:	push   rbx
  4054a5:	inc    QWORD PTR [rip+0xc1e4]        # 411690 <__bss_start@@Base+0x540>
  4054ac:	lea    rbx,[rip+0xd35d]        # 412810 <Unity@@Base>
  4054b3:	cmp    QWORD PTR [rbx+0x48],0x0
  4054b8:	je     4054d1 <UnityConcludeTest@@Base+0x31>
  4054ba:	inc    QWORD PTR [rip+0xc1d7]        # 411698 <__bss_start@@Base+0x548>
  4054c1:	inc    QWORD PTR [rbx+0x38]
  4054c5:	lea    rax,[rip+0xc1dc]        # 4116a8 <__bss_start@@Base+0x558>
  4054cc:	jmp    4055bb <UnityConcludeTest@@Base+0x11b>
  4054d1:	inc    QWORD PTR [rip+0xc1c8]        # 4116a0 <__bss_start@@Base+0x550>
  4054d8:	cmp    QWORD PTR [rbx+0x40],0x0
  4054dd:	je     4054f6 <UnityConcludeTest@@Base+0x56>
  4054df:	inc    QWORD PTR [rip+0xc1ca]        # 4116b0 <__bss_start@@Base+0x560>
  4054e6:	inc    QWORD PTR [rbx+0x30]
  4054ea:	lea    rax,[rip+0xc1d7]        # 4116c8 <__bss_start@@Base+0x578>
  4054f1:	jmp    4055bb <UnityConcludeTest@@Base+0x11b>
  4054f6:	inc    QWORD PTR [rip+0xc1bb]        # 4116b8 <__bss_start@@Base+0x568>
  4054fd:	mov    rdi,QWORD PTR [rbx]
  405500:	mov    r14,QWORD PTR [rbx+0x20]
  405504:	vmovdqa xmm0,XMMWORD PTR [rip+0xc1d4]        # 4116e0 <__bss_start@@Base+0x590>
  40550c:	vpcmpeqd xmm1,xmm1,xmm1
  405510:	vpsubq xmm0,xmm0,xmm1
  405514:	vmovdqa XMMWORD PTR [rip+0xc1c4],xmm0        # 4116e0 <__bss_start@@Base+0x590>
  40551c:	call   4049c0 <UnityPrint@@Base>
  405521:	vmovdqa xmm0,XMMWORD PTR [rip+0xbe97]        # 4113c0 <__bss_start@@Base+0x270>
  405529:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6e7f]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405531:	vmovdqa XMMWORD PTR [rip+0xbe87],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  405539:	mov    r15,QWORD PTR [rip+0xbaa0]        # 410fe0 <stdout@GLIBC_2.2.5>
  405540:	mov    rsi,QWORD PTR [r15]
  405543:	mov    edi,0x3a
  405548:	call   403130 <putc@plt>
  40554d:	mov    rdi,r14
  405550:	call   404f50 <UnityPrintNumber@@Base>
  405555:	vmovdqa xmm0,XMMWORD PTR [rip+0xbe63]        # 4113c0 <__bss_start@@Base+0x270>
  40555d:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6e4b]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405565:	vmovdqa XMMWORD PTR [rip+0xbe53],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40556d:	mov    rsi,QWORD PTR [r15]
  405570:	mov    edi,0x3a
  405575:	call   403130 <putc@plt>
  40557a:	mov    rdi,QWORD PTR [rbx+0x8]
  40557e:	call   4049c0 <UnityPrint@@Base>
  405583:	vmovdqa xmm0,XMMWORD PTR [rip+0xbe35]        # 4113c0 <__bss_start@@Base+0x270>
  40558b:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6e1d]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405593:	vmovdqa XMMWORD PTR [rip+0xbe25],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40559b:	mov    rsi,QWORD PTR [r15]
  40559e:	mov    edi,0x3a
  4055a3:	call   403130 <putc@plt>
  4055a8:	lea    rdi,[rip+0x6e44]        # 40c3f3 <UnityStrPass@@Base>
  4055af:	call   4049c0 <UnityPrint@@Base>
  4055b4:	lea    rax,[rip+0xc105]        # 4116c0 <__bss_start@@Base+0x570>
  4055bb:	inc    QWORD PTR [rax]
  4055be:	inc    QWORD PTR [rip+0xc10b]        # 4116d0 <__bss_start@@Base+0x580>
  4055c5:	vpxor  xmm0,xmm0,xmm0
  4055c9:	vmovdqu XMMWORD PTR [rbx+0x40],xmm0
  4055ce:	vmovdqa xmm0,XMMWORD PTR [rip+0xbdea]        # 4113c0 <__bss_start@@Base+0x270>
  4055d6:	vpcmpeqd xmm1,xmm1,xmm1
  4055da:	vpsubq xmm0,xmm0,xmm1
  4055de:	vmovdqa XMMWORD PTR [rip+0xbdda],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4055e6:	mov    rax,QWORD PTR [rip+0xb9f3]        # 410fe0 <stdout@GLIBC_2.2.5>
  4055ed:	mov    rsi,QWORD PTR [rax]
  4055f0:	mov    edi,0xa
  4055f5:	pop    rbx
  4055f6:	pop    r14
  4055f8:	pop    r15
  4055fa:	jmp    403130 <putc@plt>
  4055ff:	nop

0000000000405600 <UnityAssertBits@@Base>:
  405600:	push   r15
  405602:	push   r14
  405604:	push   r13
  405606:	push   r12
  405608:	push   rbx
  405609:	inc    QWORD PTR [rip+0xc0e0]        # 4116f0 <__bss_start@@Base+0x5a0>
  405610:	lea    rbx,[rip+0xd1f9]        # 412810 <Unity@@Base>
  405617:	mov    rax,QWORD PTR [rbx+0x48]
  40561b:	or     rax,QWORD PTR [rbx+0x40]
  40561f:	je     40562a <UnityAssertBits@@Base+0x2a>
  405621:	lea    rax,[rip+0xc0d0]        # 4116f8 <__bss_start@@Base+0x5a8>
  405628:	jmp    40564c <UnityAssertBits@@Base+0x4c>
  40562a:	mov    r15,rdx
  40562d:	mov    r13,rsi
  405630:	mov    r12,rdi
  405633:	inc    QWORD PTR [rip+0xc0c6]        # 411700 <__bss_start@@Base+0x5b0>
  40563a:	mov    rax,rdx
  40563d:	xor    rax,rsi
  405640:	test   rax,rdi
  405643:	jne    405660 <UnityAssertBits@@Base+0x60>
  405645:	lea    rax,[rip+0xc0c4]        # 411710 <__bss_start@@Base+0x5c0>
  40564c:	inc    QWORD PTR [rax]
  40564f:	inc    QWORD PTR [rip+0xc0c2]        # 411718 <__bss_start@@Base+0x5c8>
  405656:	pop    rbx
  405657:	pop    r12
  405659:	pop    r13
  40565b:	pop    r14
  40565d:	pop    r15
  40565f:	ret    
  405660:	mov    r14,rcx
  405663:	inc    QWORD PTR [rip+0xc09e]        # 411708 <__bss_start@@Base+0x5b8>
  40566a:	mov    rdi,r8
  40566d:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405672:	lea    rdi,[rip+0x6d93]        # 40c40c <UnityStrExpected@@Base>
  405679:	call   4049c0 <UnityPrint@@Base>
  40567e:	mov    rdi,r12
  405681:	mov    rsi,r13
  405684:	call   405340 <UnityPrintMask@@Base>
  405689:	lea    rdi,[rip+0x6d87]        # 40c417 <UnityStrWas@@Base>
  405690:	call   4049c0 <UnityPrint@@Base>
  405695:	mov    rdi,r12
  405698:	mov    rsi,r15
  40569b:	call   405340 <UnityPrintMask@@Base>
  4056a0:	mov    rdi,r14
  4056a3:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  4056a8:	mov    QWORD PTR [rbx+0x40],0x1
  4056b0:	add    rbx,0x50
  4056b4:	mov    rdi,rbx
  4056b7:	mov    esi,0x1
  4056bc:	call   403200 <longjmp@plt>
  4056c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4056d0:	push   r15
  4056d2:	push   r14
  4056d4:	push   rbx
  4056d5:	mov    rbx,rdi
  4056d8:	vmovdqa xmm0,XMMWORD PTR [rip+0xc040]        # 411720 <__bss_start@@Base+0x5d0>
  4056e0:	vpcmpeqd xmm1,xmm1,xmm1
  4056e4:	vpsubq xmm0,xmm0,xmm1
  4056e8:	vmovdqa XMMWORD PTR [rip+0xc030],xmm0        # 411720 <__bss_start@@Base+0x5d0>
  4056f0:	lea    r15,[rip+0xd119]        # 412810 <Unity@@Base>
  4056f7:	mov    rdi,QWORD PTR [r15]
  4056fa:	vmovdqa xmm0,XMMWORD PTR [rip+0xbfde]        # 4116e0 <__bss_start@@Base+0x590>
  405702:	vpsubq xmm0,xmm0,xmm1
  405706:	vmovdqa XMMWORD PTR [rip+0xbfd2],xmm0        # 4116e0 <__bss_start@@Base+0x590>
  40570e:	call   4049c0 <UnityPrint@@Base>
  405713:	vmovdqa xmm0,XMMWORD PTR [rip+0xbca5]        # 4113c0 <__bss_start@@Base+0x270>
  40571b:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6c8d]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405723:	vmovdqa XMMWORD PTR [rip+0xbc95],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40572b:	mov    r14,QWORD PTR [rip+0xb8ae]        # 410fe0 <stdout@GLIBC_2.2.5>
  405732:	mov    rsi,QWORD PTR [r14]
  405735:	mov    edi,0x3a
  40573a:	call   403130 <putc@plt>
  40573f:	mov    rdi,rbx
  405742:	call   404f50 <UnityPrintNumber@@Base>
  405747:	vmovdqa xmm0,XMMWORD PTR [rip+0xbc71]        # 4113c0 <__bss_start@@Base+0x270>
  40574f:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6c59]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405757:	vmovdqa XMMWORD PTR [rip+0xbc61],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40575f:	mov    rsi,QWORD PTR [r14]
  405762:	mov    edi,0x3a
  405767:	call   403130 <putc@plt>
  40576c:	mov    rdi,QWORD PTR [r15+0x8]
  405770:	call   4049c0 <UnityPrint@@Base>
  405775:	vmovdqa xmm0,XMMWORD PTR [rip+0xbc43]        # 4113c0 <__bss_start@@Base+0x270>
  40577d:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6c2b]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  405785:	vmovdqa XMMWORD PTR [rip+0xbc33],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40578d:	mov    rsi,QWORD PTR [r14]
  405790:	mov    edi,0x3a
  405795:	call   403130 <putc@plt>
  40579a:	lea    rdi,[rip+0x6c57]        # 40c3f8 <UnityStrFail@@Base>
  4057a1:	call   4049c0 <UnityPrint@@Base>
  4057a6:	vmovdqa xmm0,XMMWORD PTR [rip+0xbc12]        # 4113c0 <__bss_start@@Base+0x270>
  4057ae:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x6bfa]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4057b6:	vmovdqa XMMWORD PTR [rip+0xbc02],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4057be:	mov    rsi,QWORD PTR [r14]
  4057c1:	mov    edi,0x3a
  4057c6:	pop    rbx
  4057c7:	pop    r14
  4057c9:	pop    r15
  4057cb:	jmp    403130 <putc@plt>
  4057d0:	push   r14
  4057d2:	push   rbx
  4057d3:	push   rax
  4057d4:	inc    QWORD PTR [rip+0xbf55]        # 411730 <__bss_start@@Base+0x5e0>
  4057db:	test   rdi,rdi
  4057de:	je     40584c <UnityAssertBits@@Base+0x24c>
  4057e0:	mov    rbx,rdi
  4057e3:	inc    QWORD PTR [rip+0xbf4e]        # 411738 <__bss_start@@Base+0x5e8>
  4057ea:	lea    rdi,[rip+0x6c18]        # 40c409 <UnityStrSpacer@@Base>
  4057f1:	call   4049c0 <UnityPrint@@Base>
  4057f6:	lea    r14,[rip+0xd013]        # 412810 <Unity@@Base>
  4057fd:	cmp    QWORD PTR [r14+0x10],0x0
  405802:	je     405855 <UnityAssertBits@@Base+0x255>
  405804:	inc    QWORD PTR [rip+0xbf3d]        # 411748 <__bss_start@@Base+0x5f8>
  40580b:	lea    rdi,[rip+0x6de3]        # 40c5f5 <UnityStrDetail1Name@@Base>
  405812:	call   4049c0 <UnityPrint@@Base>
  405817:	mov    rdi,QWORD PTR [r14+0x10]
  40581b:	call   4049c0 <UnityPrint@@Base>
  405820:	cmp    QWORD PTR [r14+0x18],0x0
  405825:	je     40585e <UnityAssertBits@@Base+0x25e>
  405827:	inc    QWORD PTR [rip+0xbf2a]        # 411758 <__bss_start@@Base+0x608>
  40582e:	lea    rdi,[rip+0x6dca]        # 40c5ff <UnityStrDetail2Name@@Base>
  405835:	call   4049c0 <UnityPrint@@Base>
  40583a:	mov    rdi,QWORD PTR [r14+0x18]
  40583e:	call   4049c0 <UnityPrint@@Base>
  405843:	lea    rax,[rip+0xbf1e]        # 411768 <__bss_start@@Base+0x618>
  40584a:	jmp    405865 <UnityAssertBits@@Base+0x265>
  40584c:	lea    rax,[rip+0xbeed]        # 411740 <__bss_start@@Base+0x5f0>
  405853:	jmp    40588d <UnityAssertBits@@Base+0x28d>
  405855:	lea    rax,[rip+0xbef4]        # 411750 <__bss_start@@Base+0x600>
  40585c:	jmp    40587b <UnityAssertBits@@Base+0x27b>
  40585e:	lea    rax,[rip+0xbefb]        # 411760 <__bss_start@@Base+0x610>
  405865:	inc    QWORD PTR [rax]
  405868:	lea    rdi,[rip+0x6b9a]        # 40c409 <UnityStrSpacer@@Base>
  40586f:	call   4049c0 <UnityPrint@@Base>
  405874:	lea    rax,[rip+0xbef5]        # 411770 <__bss_start@@Base+0x620>
  40587b:	inc    QWORD PTR [rax]
  40587e:	mov    rdi,rbx
  405881:	call   4049c0 <UnityPrint@@Base>
  405886:	lea    rax,[rip+0xbeeb]        # 411778 <__bss_start@@Base+0x628>
  40588d:	inc    QWORD PTR [rax]
  405890:	inc    QWORD PTR [rip+0xbee9]        # 411780 <__bss_start@@Base+0x630>
  405897:	add    rsp,0x8
  40589b:	pop    rbx
  40589c:	pop    r14
  40589e:	ret    
  40589f:	nop

00000000004058a0 <UnityAssertEqualNumber@@Base>:
  4058a0:	push   rbp
  4058a1:	push   r15
  4058a3:	push   r14
  4058a5:	push   r12
  4058a7:	push   rbx
  4058a8:	inc    QWORD PTR [rip+0xbee1]        # 411790 <__bss_start@@Base+0x640>
  4058af:	lea    rbx,[rip+0xcf5a]        # 412810 <Unity@@Base>
  4058b6:	mov    rax,QWORD PTR [rbx+0x48]
  4058ba:	or     rax,QWORD PTR [rbx+0x40]
  4058be:	je     4058c9 <UnityAssertEqualNumber@@Base+0x29>
  4058c0:	lea    rax,[rip+0xbed1]        # 411798 <__bss_start@@Base+0x648>
  4058c7:	jmp    4058e2 <UnityAssertEqualNumber@@Base+0x42>
  4058c9:	mov    r12,rsi
  4058cc:	mov    rbp,rdi
  4058cf:	inc    QWORD PTR [rip+0xbeca]        # 4117a0 <__bss_start@@Base+0x650>
  4058d6:	cmp    rdi,rsi
  4058d9:	jne    4058f5 <UnityAssertEqualNumber@@Base+0x55>
  4058db:	lea    rax,[rip+0xbece]        # 4117b0 <__bss_start@@Base+0x660>
  4058e2:	inc    QWORD PTR [rax]
  4058e5:	inc    QWORD PTR [rip+0xbecc]        # 4117b8 <__bss_start@@Base+0x668>
  4058ec:	pop    rbx
  4058ed:	pop    r12
  4058ef:	pop    r14
  4058f1:	pop    r15
  4058f3:	pop    rbp
  4058f4:	ret    
  4058f5:	mov    r15d,r8d
  4058f8:	mov    r14,rdx
  4058fb:	inc    QWORD PTR [rip+0xbea6]        # 4117a8 <__bss_start@@Base+0x658>
  405902:	mov    rdi,rcx
  405905:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  40590a:	lea    rdi,[rip+0x6afb]        # 40c40c <UnityStrExpected@@Base>
  405911:	call   4049c0 <UnityPrint@@Base>
  405916:	mov    rdi,rbp
  405919:	mov    esi,r15d
  40591c:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405921:	lea    rdi,[rip+0x6aef]        # 40c417 <UnityStrWas@@Base>
  405928:	call   4049c0 <UnityPrint@@Base>
  40592d:	mov    rdi,r12
  405930:	mov    esi,r15d
  405933:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405938:	mov    rdi,r14
  40593b:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  405940:	mov    QWORD PTR [rbx+0x40],0x1
  405948:	add    rbx,0x50
  40594c:	mov    rdi,rbx
  40594f:	mov    esi,0x1
  405954:	call   403200 <longjmp@plt>
  405959:	nop    DWORD PTR [rax+0x0]

0000000000405960 <UnityAssertEqualIntArray@@Base>:
  405960:	push   rbp
  405961:	push   r15
  405963:	push   r14
  405965:	push   r13
  405967:	push   r12
  405969:	push   rbx
  40596a:	sub    rsp,0x18
  40596e:	inc    QWORD PTR [rip+0xbe4b]        # 4117c0 <__bss_start@@Base+0x670>
  405975:	lea    r12,[rip+0xce94]        # 412810 <Unity@@Base>
  40597c:	mov    rax,QWORD PTR [r12+0x48]
  405981:	or     rax,QWORD PTR [r12+0x40]
  405986:	je     40599b <UnityAssertEqualIntArray@@Base+0x3b>
  405988:	inc    QWORD PTR [rip+0xbe39]        # 4117c8 <__bss_start@@Base+0x678>
  40598f:	lea    rax,[rip+0xbe42]        # 4117d8 <__bss_start@@Base+0x688>
  405996:	jmp    405bf4 <UnityAssertEqualIntArray@@Base+0x294>
  40599b:	mov    rbp,rcx
  40599e:	mov    r15d,edx
  4059a1:	inc    QWORD PTR [rip+0xbe28]        # 4117d0 <__bss_start@@Base+0x680>
  4059a8:	test   edx,edx
  4059aa:	je     405d7a <UnityAssertEqualIntArray@@Base+0x41a>
  4059b0:	mov    r14,rsi
  4059b3:	mov    rbx,rdi
  4059b6:	mov    r13d,r9d
  4059b9:	inc    QWORD PTR [rip+0xbe28]        # 4117e8 <__bss_start@@Base+0x698>
  4059c0:	mov    QWORD PTR [rsp+0x8],r8
  4059c5:	mov    rdx,r8
  4059c8:	mov    rcx,rbp
  4059cb:	call   405da0 <UnityAssertEqualIntArray@@Base+0x440>
  4059d0:	cmp    eax,0x1
  4059d3:	jne    4059e8 <UnityAssertEqualIntArray@@Base+0x88>
  4059d5:	inc    QWORD PTR [rip+0xbe14]        # 4117f0 <__bss_start@@Base+0x6a0>
  4059dc:	lea    rax,[rip+0xbe1d]        # 411800 <__bss_start@@Base+0x6b0>
  4059e3:	jmp    405bf4 <UnityAssertEqualIntArray@@Base+0x294>
  4059e8:	inc    QWORD PTR [rip+0xbe09]        # 4117f8 <__bss_start@@Base+0x6a8>
  4059ef:	mov    eax,r13d
  4059f2:	and    eax,0xffffff7f
  4059f7:	add    eax,0xffffffef
  4059fa:	cmp    eax,0x37
  4059fd:	ja     405b8d <UnityAssertEqualIntArray@@Base+0x22d>
  405a03:	movabs rcx,0x1000000010001
  405a0d:	bt     rcx,rax
  405a11:	mov    QWORD PTR [rsp+0x10],rbp
  405a16:	jb     405aaf <UnityAssertEqualIntArray@@Base+0x14f>
  405a1c:	movabs rcx,0x2000000020002
  405a26:	bt     rcx,rax
  405a2a:	jb     405b1d <UnityAssertEqualIntArray@@Base+0x1bd>
  405a30:	movabs rcx,0x80000000800080
  405a3a:	bt     rcx,rax
  405a3e:	jae    405b8d <UnityAssertEqualIntArray@@Base+0x22d>
  405a44:	inc    QWORD PTR [rip+0xbe05]        # 411850 <__bss_start@@Base+0x700>
  405a4b:	inc    QWORD PTR [rip+0xbe66]        # 4118b8 <__bss_start@@Base+0x768>
  405a52:	mov    rcx,QWORD PTR [rip+0xbe67]        # 4118c0 <__bss_start@@Base+0x770>
  405a59:	inc    rcx
  405a5c:	mov    edx,r15d
  405a5f:	xor    ebp,ebp
  405a61:	vpcmpeqd xmm0,xmm0,xmm0
  405a65:	lea    rdi,[rip+0xbe5c]        # 4118c8 <__bss_start@@Base+0x778>
  405a6c:	nop    DWORD PTR [rax+0x0]
  405a70:	lea    rax,[rcx+rbp*1]
  405a74:	mov    QWORD PTR [rip+0xbe45],rax        # 4118c0 <__bss_start@@Base+0x770>
  405a7b:	mov    rax,QWORD PTR [rbx]
  405a7e:	cmp    rax,QWORD PTR [r14]
  405a81:	jne    405c0d <UnityAssertEqualIntArray@@Base+0x2ad>
  405a87:	add    rbx,0x8
  405a8b:	add    r14,0x8
  405a8f:	vmovdqu xmm1,XMMWORD PTR [rip+0xbe41]        # 4118d8 <__bss_start@@Base+0x788>
  405a97:	vpsubq xmm1,xmm1,xmm0
  405a9b:	vmovdqu XMMWORD PTR [rip+0xbe35],xmm1        # 4118d8 <__bss_start@@Base+0x788>
  405aa3:	inc    rbp
  405aa6:	cmp    edx,ebp
  405aa8:	jne    405a70 <UnityAssertEqualIntArray@@Base+0x110>
  405aaa:	jmp    405bea <UnityAssertEqualIntArray@@Base+0x28a>
  405aaf:	inc    QWORD PTR [rip+0xbd6a]        # 411820 <__bss_start@@Base+0x6d0>
  405ab6:	inc    QWORD PTR [rip+0xbd9b]        # 411858 <__bss_start@@Base+0x708>
  405abd:	mov    rcx,QWORD PTR [rip+0xbd9c]        # 411860 <__bss_start@@Base+0x710>
  405ac4:	inc    rcx
  405ac7:	mov    edx,r15d
  405aca:	xor    ebp,ebp
  405acc:	vpcmpeqd xmm0,xmm0,xmm0
  405ad0:	lea    rdi,[rip+0xbd91]        # 411868 <__bss_start@@Base+0x718>
  405ad7:	nop    WORD PTR [rax+rax*1+0x0]
  405ae0:	lea    rsi,[rcx+rbp*1]
  405ae4:	mov    QWORD PTR [rip+0xbd75],rsi        # 411860 <__bss_start@@Base+0x710>
  405aeb:	movzx  eax,BYTE PTR [rbx]
  405aee:	cmp    al,BYTE PTR [r14]
  405af1:	jne    405c5d <UnityAssertEqualIntArray@@Base+0x2fd>
  405af7:	inc    rbx
  405afa:	inc    r14
  405afd:	vmovdqu xmm1,XMMWORD PTR [rip+0xbd73]        # 411878 <__bss_start@@Base+0x728>
  405b05:	vpsubq xmm1,xmm1,xmm0
  405b09:	vmovdqu XMMWORD PTR [rip+0xbd67],xmm1        # 411878 <__bss_start@@Base+0x728>
  405b11:	inc    rbp
  405b14:	cmp    edx,ebp
  405b16:	jne    405ae0 <UnityAssertEqualIntArray@@Base+0x180>
  405b18:	jmp    405bea <UnityAssertEqualIntArray@@Base+0x28a>
  405b1d:	inc    QWORD PTR [rip+0xbd14]        # 411838 <__bss_start@@Base+0x6e8>
  405b24:	inc    QWORD PTR [rip+0xbd5d]        # 411888 <__bss_start@@Base+0x738>
  405b2b:	mov    rcx,QWORD PTR [rip+0xbd5e]        # 411890 <__bss_start@@Base+0x740>
  405b32:	inc    rcx
  405b35:	mov    edx,r15d
  405b38:	xor    ebp,ebp
  405b3a:	vpcmpeqd xmm0,xmm0,xmm0
  405b3e:	lea    rdi,[rip+0xbd53]        # 411898 <__bss_start@@Base+0x748>
  405b45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b4f:	nop
  405b50:	lea    rax,[rcx+rbp*1]
  405b54:	mov    QWORD PTR [rip+0xbd35],rax        # 411890 <__bss_start@@Base+0x740>
  405b5b:	movzx  eax,WORD PTR [rbx]
  405b5e:	cmp    ax,WORD PTR [r14]
  405b62:	jne    405cac <UnityAssertEqualIntArray@@Base+0x34c>
  405b68:	add    rbx,0x2
  405b6c:	add    r14,0x2
  405b70:	vmovdqu xmm1,XMMWORD PTR [rip+0xbd30]        # 4118a8 <__bss_start@@Base+0x758>
  405b78:	vpsubq xmm1,xmm1,xmm0
  405b7c:	vmovdqu XMMWORD PTR [rip+0xbd24],xmm1        # 4118a8 <__bss_start@@Base+0x758>
  405b84:	inc    rbp
  405b87:	cmp    edx,ebp
  405b89:	jne    405b50 <UnityAssertEqualIntArray@@Base+0x1f0>
  405b8b:	jmp    405bea <UnityAssertEqualIntArray@@Base+0x28a>
  405b8d:	inc    QWORD PTR [rip+0xbc74]        # 411808 <__bss_start@@Base+0x6b8>
  405b94:	mov    rcx,QWORD PTR [rip+0xbd4d]        # 4118e8 <__bss_start@@Base+0x798>
  405b9b:	inc    rcx
  405b9e:	mov    edx,r15d
  405ba1:	xor    r15d,r15d
  405ba4:	vpcmpeqd xmm0,xmm0,xmm0
  405ba8:	lea    rdi,[rip+0xbd41]        # 4118f0 <__bss_start@@Base+0x7a0>
  405baf:	nop
  405bb0:	lea    rax,[rcx+r15*1]
  405bb4:	mov    QWORD PTR [rip+0xbd2d],rax        # 4118e8 <__bss_start@@Base+0x798>
  405bbb:	mov    eax,DWORD PTR [rbx]
  405bbd:	cmp    eax,DWORD PTR [r14]
  405bc0:	jne    405d25 <UnityAssertEqualIntArray@@Base+0x3c5>
  405bc6:	add    rbx,0x4
  405bca:	add    r14,0x4
  405bce:	vmovdqa xmm1,XMMWORD PTR [rip+0xbd2a]        # 411900 <__bss_start@@Base+0x7b0>
  405bd6:	vpsubq xmm1,xmm1,xmm0
  405bda:	vmovdqa XMMWORD PTR [rip+0xbd1e],xmm1        # 411900 <__bss_start@@Base+0x7b0>
  405be2:	inc    r15
  405be5:	cmp    edx,r15d
  405be8:	jne    405bb0 <UnityAssertEqualIntArray@@Base+0x250>
  405bea:	inc    QWORD PTR [rdi]
  405bed:	lea    rax,[rip+0xbd1c]        # 411910 <__bss_start@@Base+0x7c0>
  405bf4:	inc    QWORD PTR [rax]
  405bf7:	inc    QWORD PTR [rip+0xbd1a]        # 411918 <__bss_start@@Base+0x7c8>
  405bfe:	add    rsp,0x18
  405c02:	pop    rbx
  405c03:	pop    r12
  405c05:	pop    r13
  405c07:	pop    r14
  405c09:	pop    r15
  405c0b:	pop    rbp
  405c0c:	ret    
  405c0d:	inc    QWORD PTR [rip+0xbcbc]        # 4118d0 <__bss_start@@Base+0x780>
  405c14:	mov    rdi,QWORD PTR [rsp+0x8]
  405c19:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405c1e:	lea    rdi,[rip+0x67fd]        # 40c422 <UnityStrElement@@Base>
  405c25:	call   4049c0 <UnityPrint@@Base>
  405c2a:	mov    rdi,rbp
  405c2d:	call   405170 <UnityPrintNumberUnsigned@@Base>
  405c32:	lea    rdi,[rip+0x67d3]        # 40c40c <UnityStrExpected@@Base>
  405c39:	call   4049c0 <UnityPrint@@Base>
  405c3e:	mov    rdi,QWORD PTR [rbx]
  405c41:	mov    esi,r13d
  405c44:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405c49:	lea    rdi,[rip+0x67c7]        # 40c417 <UnityStrWas@@Base>
  405c50:	call   4049c0 <UnityPrint@@Base>
  405c55:	mov    rdi,QWORD PTR [r14]
  405c58:	jmp    405cf9 <UnityAssertEqualIntArray@@Base+0x399>
  405c5d:	inc    QWORD PTR [rip+0xbc0c]        # 411870 <__bss_start@@Base+0x720>
  405c64:	mov    rdi,QWORD PTR [rsp+0x8]
  405c69:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405c6e:	lea    rdi,[rip+0x67ad]        # 40c422 <UnityStrElement@@Base>
  405c75:	call   4049c0 <UnityPrint@@Base>
  405c7a:	mov    rdi,rbp
  405c7d:	call   405170 <UnityPrintNumberUnsigned@@Base>
  405c82:	lea    rdi,[rip+0x6783]        # 40c40c <UnityStrExpected@@Base>
  405c89:	call   4049c0 <UnityPrint@@Base>
  405c8e:	movsx  rdi,BYTE PTR [rbx]
  405c92:	mov    esi,r13d
  405c95:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405c9a:	lea    rdi,[rip+0x6776]        # 40c417 <UnityStrWas@@Base>
  405ca1:	call   4049c0 <UnityPrint@@Base>
  405ca6:	movsx  rdi,BYTE PTR [r14]
  405caa:	jmp    405cf9 <UnityAssertEqualIntArray@@Base+0x399>
  405cac:	inc    QWORD PTR [rip+0xbbed]        # 4118a0 <__bss_start@@Base+0x750>
  405cb3:	mov    rdi,QWORD PTR [rsp+0x8]
  405cb8:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405cbd:	lea    rdi,[rip+0x675e]        # 40c422 <UnityStrElement@@Base>
  405cc4:	call   4049c0 <UnityPrint@@Base>
  405cc9:	mov    rdi,rbp
  405ccc:	call   405170 <UnityPrintNumberUnsigned@@Base>
  405cd1:	lea    rdi,[rip+0x6734]        # 40c40c <UnityStrExpected@@Base>
  405cd8:	call   4049c0 <UnityPrint@@Base>
  405cdd:	movsx  rdi,WORD PTR [rbx]
  405ce1:	mov    esi,r13d
  405ce4:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405ce9:	lea    rdi,[rip+0x6727]        # 40c417 <UnityStrWas@@Base>
  405cf0:	call   4049c0 <UnityPrint@@Base>
  405cf5:	movsx  rdi,WORD PTR [r14]
  405cf9:	mov    esi,r13d
  405cfc:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405d01:	mov    rdi,QWORD PTR [rsp+0x10]
  405d06:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  405d0b:	mov    QWORD PTR [r12+0x40],0x1
  405d14:	add    r12,0x50
  405d18:	mov    rdi,r12
  405d1b:	mov    esi,0x1
  405d20:	call   403200 <longjmp@plt>
  405d25:	inc    QWORD PTR [rip+0xbbcc]        # 4118f8 <__bss_start@@Base+0x7a8>
  405d2c:	mov    rdi,QWORD PTR [rsp+0x8]
  405d31:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405d36:	lea    rdi,[rip+0x66e5]        # 40c422 <UnityStrElement@@Base>
  405d3d:	call   4049c0 <UnityPrint@@Base>
  405d42:	mov    rdi,r15
  405d45:	call   405170 <UnityPrintNumberUnsigned@@Base>
  405d4a:	lea    rdi,[rip+0x66bb]        # 40c40c <UnityStrExpected@@Base>
  405d51:	call   4049c0 <UnityPrint@@Base>
  405d56:	movsxd rdi,DWORD PTR [rbx]
  405d59:	mov    esi,r13d
  405d5c:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405d61:	lea    rdi,[rip+0x66af]        # 40c417 <UnityStrWas@@Base>
  405d68:	call   4049c0 <UnityPrint@@Base>
  405d6d:	movsxd rdi,DWORD PTR [r14]
  405d70:	mov    esi,r13d
  405d73:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  405d78:	jmp    405d95 <UnityAssertEqualIntArray@@Base+0x435>
  405d7a:	inc    QWORD PTR [rip+0xba5f]        # 4117e0 <__bss_start@@Base+0x690>
  405d81:	mov    rdi,r8
  405d84:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405d89:	lea    rdi,[rip+0x66f0]        # 40c480 <UnityStrPointless@@Base>
  405d90:	call   4049c0 <UnityPrint@@Base>
  405d95:	mov    rdi,rbp
  405d98:	jmp    405d06 <UnityAssertEqualIntArray@@Base+0x3a6>
  405d9d:	nop    DWORD PTR [rax]
  405da0:	push   rbx
  405da1:	inc    QWORD PTR [rip+0xbb78]        # 411920 <__bss_start@@Base+0x7d0>
  405da8:	mov    rax,rdi
  405dab:	or     rax,rsi
  405dae:	jne    405dc5 <UnityAssertEqualIntArray@@Base+0x465>
  405db0:	mov    eax,0x1
  405db5:	lea    rcx,[rip+0xbb7c]        # 411938 <__bss_start@@Base+0x7e8>
  405dbc:	lea    rdx,[rip+0xbb65]        # 411928 <__bss_start@@Base+0x7d8>
  405dc3:	jmp    405df0 <UnityAssertEqualIntArray@@Base+0x490>
  405dc5:	mov    rbx,rcx
  405dc8:	inc    QWORD PTR [rip+0xbb61]        # 411930 <__bss_start@@Base+0x7e0>
  405dcf:	test   rdi,rdi
  405dd2:	je     405dff <UnityAssertEqualIntArray@@Base+0x49f>
  405dd4:	inc    QWORD PTR [rip+0xbb6d]        # 411948 <__bss_start@@Base+0x7f8>
  405ddb:	test   rsi,rsi
  405dde:	je     405e17 <UnityAssertEqualIntArray@@Base+0x4b7>
  405de0:	xor    eax,eax
  405de2:	lea    rcx,[rip+0xbb77]        # 411960 <__bss_start@@Base+0x810>
  405de9:	lea    rdx,[rip+0xbb68]        # 411958 <__bss_start@@Base+0x808>
  405df0:	inc    QWORD PTR [rdx]
  405df3:	inc    QWORD PTR [rcx]
  405df6:	inc    QWORD PTR [rip+0xbb6b]        # 411968 <__bss_start@@Base+0x818>
  405dfd:	pop    rbx
  405dfe:	ret    
  405dff:	inc    QWORD PTR [rip+0xbb3a]        # 411940 <__bss_start@@Base+0x7f0>
  405e06:	mov    rdi,rdx
  405e09:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405e0e:	lea    rdi,[rip+0x66ab]        # 40c4c0 <UnityStrNullPointerForExpected@@Base>
  405e15:	jmp    405e2d <UnityAssertEqualIntArray@@Base+0x4cd>
  405e17:	inc    QWORD PTR [rip+0xbb32]        # 411950 <__bss_start@@Base+0x800>
  405e1e:	mov    rdi,rdx
  405e21:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  405e26:	lea    rdi,[rip+0x66b3]        # 40c4e0 <UnityStrNullPointerForActual@@Base>
  405e2d:	call   4049c0 <UnityPrint@@Base>
  405e32:	mov    rdi,rbx
  405e35:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  405e3a:	lea    rdi,[rip+0xc9cf]        # 412810 <Unity@@Base>
  405e41:	mov    QWORD PTR [rdi+0x40],0x1
  405e49:	add    rdi,0x50
  405e4d:	mov    esi,0x1
  405e52:	call   403200 <longjmp@plt>
  405e57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405e60 <UnityAssertEqualFloatArray@@Base>:
  405e60:	push   rbp
  405e61:	push   r15
  405e63:	push   r14
  405e65:	push   r13
  405e67:	push   r12
  405e69:	push   rbx
  405e6a:	push   rax
  405e6b:	inc    QWORD PTR [rip+0xbafe]        # 411970 <__bss_start@@Base+0x820>
  405e72:	lea    r12,[rip+0xc997]        # 412810 <Unity@@Base>
  405e79:	mov    rax,QWORD PTR [r12+0x48]
  405e7e:	or     rax,QWORD PTR [r12+0x40]
  405e83:	je     405e98 <UnityAssertEqualFloatArray@@Base+0x38>
  405e85:	inc    QWORD PTR [rip+0xbaec]        # 411978 <__bss_start@@Base+0x828>
  405e8c:	lea    rax,[rip+0xbaf5]        # 411988 <__bss_start@@Base+0x838>
  405e93:	jmp    405fdc <UnityAssertEqualFloatArray@@Base+0x17c>
  405e98:	mov    r15,r8
  405e9b:	mov    r14,rcx
  405e9e:	mov    ebp,edx
  405ea0:	inc    QWORD PTR [rip+0xbad9]        # 411980 <__bss_start@@Base+0x830>
  405ea7:	test   edx,edx
  405ea9:	je     406045 <UnityAssertEqualFloatArray@@Base+0x1e5>
  405eaf:	mov    r13,rsi
  405eb2:	mov    rbx,rdi
  405eb5:	inc    QWORD PTR [rip+0xbadc]        # 411998 <__bss_start@@Base+0x848>
  405ebc:	mov    rdx,r15
  405ebf:	mov    rcx,r14
  405ec2:	call   405da0 <UnityAssertEqualIntArray@@Base+0x440>
  405ec7:	cmp    eax,0x1
  405eca:	jne    405edf <UnityAssertEqualFloatArray@@Base+0x7f>
  405ecc:	inc    QWORD PTR [rip+0xbacd]        # 4119a0 <__bss_start@@Base+0x850>
  405ed3:	lea    rax,[rip+0xbad6]        # 4119b0 <__bss_start@@Base+0x860>
  405eda:	jmp    405fdc <UnityAssertEqualFloatArray@@Base+0x17c>
  405edf:	inc    QWORD PTR [rip+0xbac2]        # 4119a8 <__bss_start@@Base+0x858>
  405ee6:	mov    rax,QWORD PTR [rip+0xbacb]        # 4119b8 <__bss_start@@Base+0x868>
  405eed:	inc    rax
  405ef0:	mov    ecx,ebp
  405ef2:	xor    ebp,ebp
  405ef4:	lea    r9,[rip+0xbad5]        # 4119d0 <__bss_start@@Base+0x880>
  405efb:	vxorps xmm0,xmm0,xmm0
  405eff:	lea    r11,[rip+0xbad2]        # 4119d8 <__bss_start@@Base+0x888>
  405f06:	vmovss xmm1,DWORD PTR [rip+0x64b2]        # 40c3c0 <_IO_stdin_used@@Base+0x3c0>
  405f0e:	lea    rsi,[rip+0xbad3]        # 4119e8 <__bss_start@@Base+0x898>
  405f15:	lea    rdx,[rip+0xbad4]        # 4119f0 <__bss_start@@Base+0x8a0>
  405f1c:	lea    r8,[rip+0xbad5]        # 4119f8 <__bss_start@@Base+0x8a8>
  405f23:	lea    r10,[rip+0xbade]        # 411a08 <__bss_start@@Base+0x8b8>
  405f2a:	vpcmpeqd xmm2,xmm2,xmm2
  405f2e:	xchg   ax,ax
  405f30:	lea    rdi,[rax+rbp*1]
  405f34:	mov    QWORD PTR [rip+0xba7d],rdi        # 4119b8 <__bss_start@@Base+0x868>
  405f3b:	vmovss xmm3,DWORD PTR [rbx+rbp*4]
  405f40:	vsubss xmm3,xmm3,DWORD PTR [r13+rbp*4+0x0]
  405f47:	vucomiss xmm0,xmm3
  405f4b:	jbe    405f60 <UnityAssertEqualFloatArray@@Base+0x100>
  405f4d:	inc    QWORD PTR [rip+0xba74]        # 4119c8 <__bss_start@@Base+0x878>
  405f54:	vsubss xmm3,xmm0,xmm3
  405f58:	mov    rdi,r11
  405f5b:	jmp    405f63 <UnityAssertEqualFloatArray@@Base+0x103>
  405f5d:	nop    DWORD PTR [rax]
  405f60:	mov    rdi,r9
  405f63:	inc    QWORD PTR [rdi]
  405f66:	vmulss xmm4,xmm1,DWORD PTR [rbx+rbp*4]
  405f6b:	vucomiss xmm0,xmm4
  405f6f:	jbe    405f90 <UnityAssertEqualFloatArray@@Base+0x130>
  405f71:	inc    QWORD PTR [rip+0xba68]        # 4119e0 <__bss_start@@Base+0x890>
  405f78:	vsubss xmm4,xmm0,xmm4
  405f7c:	mov    rdi,rdx
  405f7f:	jmp    405f93 <UnityAssertEqualFloatArray@@Base+0x133>
  405f81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405f90:	mov    rdi,rsi
  405f93:	inc    QWORD PTR [rdi]
  405f96:	vmulss xmm5,xmm3,xmm0
  405f9a:	vucomiss xmm5,xmm0
  405f9e:	jne    405ff8 <UnityAssertEqualFloatArray@@Base+0x198>
  405fa0:	jp     405ff8 <UnityAssertEqualFloatArray@@Base+0x198>
  405fa2:	inc    QWORD PTR [rip+0xba57]        # 411a00 <__bss_start@@Base+0x8b0>
  405fa9:	vucomiss xmm3,xmm4
  405fad:	ja     405ff5 <UnityAssertEqualFloatArray@@Base+0x195>
  405faf:	vmovdqa xmm3,XMMWORD PTR [rip+0xba59]        # 411a10 <__bss_start@@Base+0x8c0>
  405fb7:	vpsubq xmm3,xmm3,xmm2
  405fbb:	vmovdqa XMMWORD PTR [rip+0xba4d],xmm3        # 411a10 <__bss_start@@Base+0x8c0>
  405fc3:	inc    rbp
  405fc6:	cmp    ecx,ebp
  405fc8:	jne    405f30 <UnityAssertEqualFloatArray@@Base+0xd0>
  405fce:	inc    QWORD PTR [rip+0xb9eb]        # 4119c0 <__bss_start@@Base+0x870>
  405fd5:	lea    rax,[rip+0xba44]        # 411a20 <__bss_start@@Base+0x8d0>
  405fdc:	inc    QWORD PTR [rax]
  405fdf:	inc    QWORD PTR [rip+0xba42]        # 411a28 <__bss_start@@Base+0x8d8>
  405fe6:	add    rsp,0x8
  405fea:	pop    rbx
  405feb:	pop    r12
  405fed:	pop    r13
  405fef:	pop    r14
  405ff1:	pop    r15
  405ff3:	pop    rbp
  405ff4:	ret    
  405ff5:	mov    r8,r10
  405ff8:	inc    QWORD PTR [r8]
  405ffb:	mov    rdi,r15
  405ffe:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406003:	lea    rdi,[rip+0x6418]        # 40c422 <UnityStrElement@@Base>
  40600a:	call   4049c0 <UnityPrint@@Base>
  40600f:	mov    rdi,rbp
  406012:	call   405170 <UnityPrintNumberUnsigned@@Base>
  406017:	lea    rdi,[rip+0x6442]        # 40c460 <UnityStrDelta@@Base>
  40601e:	call   4049c0 <UnityPrint@@Base>
  406023:	mov    rdi,r14
  406026:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  40602b:	mov    QWORD PTR [r12+0x40],0x1
  406034:	add    r12,0x50
  406038:	mov    rdi,r12
  40603b:	mov    esi,0x1
  406040:	call   403200 <longjmp@plt>
  406045:	inc    QWORD PTR [rip+0xb944]        # 411990 <__bss_start@@Base+0x840>
  40604c:	mov    rdi,r15
  40604f:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406054:	lea    rdi,[rip+0x6425]        # 40c480 <UnityStrPointless@@Base>
  40605b:	jmp    40601e <UnityAssertEqualFloatArray@@Base+0x1be>
  40605d:	nop    DWORD PTR [rax]

0000000000406060 <UnityAssertFloatsWithin@@Base>:
  406060:	push   r14
  406062:	push   rbx
  406063:	push   rax
  406064:	inc    QWORD PTR [rip+0xb9c5]        # 411a30 <__bss_start@@Base+0x8e0>
  40606b:	lea    rbx,[rip+0xc79e]        # 412810 <Unity@@Base>
  406072:	mov    rax,QWORD PTR [rbx+0x48]
  406076:	or     rax,QWORD PTR [rbx+0x40]
  40607a:	je     40608f <UnityAssertFloatsWithin@@Base+0x2f>
  40607c:	lea    rax,[rip+0xb9c5]        # 411a48 <__bss_start@@Base+0x8f8>
  406083:	lea    rcx,[rip+0xb9ae]        # 411a38 <__bss_start@@Base+0x8e8>
  40608a:	jmp    406118 <UnityAssertFloatsWithin@@Base+0xb8>
  40608f:	mov    r14,rdi
  406092:	vsubss xmm1,xmm2,xmm1
  406096:	inc    QWORD PTR [rip+0xb9a3]        # 411a40 <__bss_start@@Base+0x8f0>
  40609d:	vxorps xmm2,xmm2,xmm2
  4060a1:	vucomiss xmm2,xmm1
  4060a5:	jbe    4060bb <UnityAssertFloatsWithin@@Base+0x5b>
  4060a7:	inc    QWORD PTR [rip+0xb9a2]        # 411a50 <__bss_start@@Base+0x900>
  4060ae:	vsubss xmm1,xmm2,xmm1
  4060b2:	lea    rax,[rip+0xb9a7]        # 411a60 <__bss_start@@Base+0x910>
  4060b9:	jmp    4060c2 <UnityAssertFloatsWithin@@Base+0x62>
  4060bb:	lea    rax,[rip+0xb996]        # 411a58 <__bss_start@@Base+0x908>
  4060c2:	inc    QWORD PTR [rax]
  4060c5:	vucomiss xmm2,xmm0
  4060c9:	jbe    4060e3 <UnityAssertFloatsWithin@@Base+0x83>
  4060cb:	inc    QWORD PTR [rip+0xb996]        # 411a68 <__bss_start@@Base+0x918>
  4060d2:	vxorps xmm2,xmm2,xmm2
  4060d6:	vsubss xmm0,xmm2,xmm0
  4060da:	lea    rax,[rip+0xb997]        # 411a78 <__bss_start@@Base+0x928>
  4060e1:	jmp    4060ea <UnityAssertFloatsWithin@@Base+0x8a>
  4060e3:	lea    rax,[rip+0xb986]        # 411a70 <__bss_start@@Base+0x920>
  4060ea:	inc    QWORD PTR [rax]
  4060ed:	vxorps xmm2,xmm2,xmm2
  4060f1:	vmulss xmm3,xmm1,xmm2
  4060f5:	vucomiss xmm3,xmm2
  4060f9:	jne    40612d <UnityAssertFloatsWithin@@Base+0xcd>
  4060fb:	jp     40612d <UnityAssertFloatsWithin@@Base+0xcd>
  4060fd:	inc    QWORD PTR [rip+0xb984]        # 411a88 <__bss_start@@Base+0x938>
  406104:	vucomiss xmm1,xmm0
  406108:	ja     406136 <UnityAssertFloatsWithin@@Base+0xd6>
  40610a:	lea    rax,[rip+0xb98f]        # 411aa0 <__bss_start@@Base+0x950>
  406111:	lea    rcx,[rip+0xb980]        # 411a98 <__bss_start@@Base+0x948>
  406118:	inc    QWORD PTR [rcx]
  40611b:	inc    QWORD PTR [rax]
  40611e:	inc    QWORD PTR [rip+0xb983]        # 411aa8 <__bss_start@@Base+0x958>
  406125:	add    rsp,0x8
  406129:	pop    rbx
  40612a:	pop    r14
  40612c:	ret    
  40612d:	lea    rax,[rip+0xb94c]        # 411a80 <__bss_start@@Base+0x930>
  406134:	jmp    40613d <UnityAssertFloatsWithin@@Base+0xdd>
  406136:	lea    rax,[rip+0xb953]        # 411a90 <__bss_start@@Base+0x940>
  40613d:	inc    QWORD PTR [rax]
  406140:	mov    rdi,rsi
  406143:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406148:	lea    rdi,[rip+0x6311]        # 40c460 <UnityStrDelta@@Base>
  40614f:	call   4049c0 <UnityPrint@@Base>
  406154:	mov    rdi,r14
  406157:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  40615c:	mov    QWORD PTR [rbx+0x40],0x1
  406164:	add    rbx,0x50
  406168:	mov    rdi,rbx
  40616b:	mov    esi,0x1
  406170:	call   403200 <longjmp@plt>
  406175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40617f:	nop

0000000000406180 <UnityAssertFloatSpecial@@Base>:
  406180:	push   r15
  406182:	push   r14
  406184:	push   r12
  406186:	push   rbx
  406187:	sub    rsp,0x28
  40618b:	inc    QWORD PTR [rip+0xb91e]        # 411ab0 <__bss_start@@Base+0x960>
  406192:	vmovups ymm1,YMMWORD PTR [rip+0x9f26]        # 4100c0 <UnitySizeMask@@Base+0x3ab0>
  40619a:	vmovups YMMWORD PTR [rsp],ymm1
  40619f:	mov    r12d,edx
  4061a2:	and    r12d,0x1
  4061a6:	sete   al
  4061a9:	lea    r15,[rip+0xc660]        # 412810 <Unity@@Base>
  4061b0:	mov    rcx,QWORD PTR [r15+0x48]
  4061b4:	or     rcx,QWORD PTR [r15+0x40]
  4061b8:	je     4061cd <UnityAssertFloatSpecial@@Base+0x4d>
  4061ba:	inc    QWORD PTR [rip+0xb8f7]        # 411ab8 <__bss_start@@Base+0x968>
  4061c1:	lea    rax,[rip+0xb900]        # 411ac8 <__bss_start@@Base+0x978>
  4061c8:	jmp    406313 <UnityAssertFloatSpecial@@Base+0x193>
  4061cd:	mov    ebx,edx
  4061cf:	mov    r14,rdi
  4061d2:	inc    QWORD PTR [rip+0xb8e7]        # 411ac0 <__bss_start@@Base+0x970>
  4061d9:	cmp    edx,0x7
  4061dc:	ja     4062cd <UnityAssertFloatSpecial@@Base+0x14d>
  4061e2:	mov    eax,ebx
  4061e4:	shr    ebx,1
  4061e6:	lea    rcx,[rip+0x61e3]        # 40c3d0 <_IO_stdin_used@@Base+0x3d0>
  4061ed:	movsxd rax,DWORD PTR [rcx+rax*4]
  4061f1:	add    rax,rcx
  4061f4:	jmp    rax
  4061f6:	inc    QWORD PTR [rip+0xb8e3]        # 411ae0 <__bss_start@@Base+0x990>
  4061fd:	vbroadcastss xmm1,DWORD PTR [rip+0x61be]        # 40c3c4 <_IO_stdin_used@@Base+0x3c4>
  406206:	vandps xmm1,xmm0,xmm1
  40620a:	vucomiss xmm1,DWORD PTR [rip+0x61b6]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  406212:	setae  cl
  406215:	vxorps xmm1,xmm1,xmm1
  406219:	vucomiss xmm0,xmm1
  40621d:	seta   al
  406220:	and    al,cl
  406222:	lea    rcx,[rip+0xb8ef]        # 411b18 <__bss_start@@Base+0x9c8>
  406229:	jmp    4062fa <UnityAssertFloatSpecial@@Base+0x17a>
  40622e:	inc    QWORD PTR [rip+0xb8cb]        # 411b00 <__bss_start@@Base+0x9b0>
  406235:	vucomiss xmm0,xmm0
  406239:	setp   al
  40623c:	lea    rcx,[rip+0xb8e5]        # 411b28 <__bss_start@@Base+0x9d8>
  406243:	jmp    4062fa <UnityAssertFloatSpecial@@Base+0x17a>
  406248:	inc    QWORD PTR [rip+0xb8c1]        # 411b10 <__bss_start@@Base+0x9c0>
  40624f:	vbroadcastss xmm1,DWORD PTR [rip+0x616c]        # 40c3c4 <_IO_stdin_used@@Base+0x3c4>
  406258:	vandps xmm1,xmm0,xmm1
  40625c:	vmovmskps eax,xmm0
  406260:	shl    eax,0x1f
  406263:	not    eax
  406265:	shr    eax,0x1f
  406268:	xor    ecx,ecx
  40626a:	vucomiss xmm1,DWORD PTR [rip+0x6156]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  406272:	lea    eax,[rax+rax*1-0x1]
  406276:	cmovb  eax,ecx
  406279:	xor    ecx,ecx
  40627b:	vucomiss xmm0,xmm0
  40627f:	setp   cl
  406282:	or     ecx,eax
  406284:	je     4062ea <UnityAssertFloatSpecial@@Base+0x16a>
  406286:	inc    QWORD PTR [rip+0xb8a3]        # 411b30 <__bss_start@@Base+0x9e0>
  40628d:	lea    rcx,[rip+0xb8ac]        # 411b40 <__bss_start@@Base+0x9f0>
  406294:	xor    eax,eax
  406296:	jmp    4062fa <UnityAssertFloatSpecial@@Base+0x17a>
  406298:	inc    QWORD PTR [rip+0xb851]        # 411af0 <__bss_start@@Base+0x9a0>
  40629f:	vbroadcastss xmm1,DWORD PTR [rip+0x611c]        # 40c3c4 <_IO_stdin_used@@Base+0x3c4>
  4062a8:	vandps xmm1,xmm0,xmm1
  4062ac:	vucomiss xmm1,DWORD PTR [rip+0x6114]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  4062b4:	setae  cl
  4062b7:	vxorps xmm1,xmm1,xmm1
  4062bb:	vucomiss xmm1,xmm0
  4062bf:	seta   al
  4062c2:	and    al,cl
  4062c4:	lea    rcx,[rip+0xb855]        # 411b20 <__bss_start@@Base+0x9d0>
  4062cb:	jmp    4062fa <UnityAssertFloatSpecial@@Base+0x17a>
  4062cd:	inc    QWORD PTR [rip+0xb7fc]        # 411ad0 <__bss_start@@Base+0x980>
  4062d4:	lea    rcx,[rip+0x6265]        # 40c540 <UnityStrInvalidFloatTrait@@Base>
  4062db:	mov    QWORD PTR [rsp],rcx
  4062df:	lea    rcx,[rip+0xb86a]        # 411b50 <__bss_start@@Base+0xa00>
  4062e6:	xor    ebx,ebx
  4062e8:	jmp    4062fa <UnityAssertFloatSpecial@@Base+0x17a>
  4062ea:	inc    QWORD PTR [rip+0xb847]        # 411b38 <__bss_start@@Base+0x9e8>
  4062f1:	mov    al,0x1
  4062f3:	lea    rcx,[rip+0xb84e]        # 411b48 <__bss_start@@Base+0x9f8>
  4062fa:	movzx  eax,al
  4062fd:	inc    QWORD PTR [rcx]
  406300:	cmp    rax,r12
  406303:	jne    40632c <UnityAssertFloatSpecial@@Base+0x1ac>
  406305:	inc    QWORD PTR [rip+0xb854]        # 411b60 <__bss_start@@Base+0xa10>
  40630c:	lea    rax,[rip+0xb885]        # 411b98 <__bss_start@@Base+0xa48>
  406313:	inc    QWORD PTR [rax]
  406316:	inc    QWORD PTR [rip+0xb883]        # 411ba0 <__bss_start@@Base+0xa50>
  40631d:	add    rsp,0x28
  406321:	pop    rbx
  406322:	pop    r12
  406324:	pop    r14
  406326:	pop    r15
  406328:	vzeroupper 
  40632b:	ret    
  40632c:	inc    QWORD PTR [rip+0xb825]        # 411b58 <__bss_start@@Base+0xa08>
  406333:	mov    rdi,rsi
  406336:	vzeroupper 
  406339:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  40633e:	lea    rdi,[rip+0x60c7]        # 40c40c <UnityStrExpected@@Base>
  406345:	call   4049c0 <UnityPrint@@Base>
  40634a:	test   r12d,r12d
  40634d:	je     406358 <UnityAssertFloatSpecial@@Base+0x1d8>
  40634f:	lea    rax,[rip+0xb812]        # 411b68 <__bss_start@@Base+0xa18>
  406356:	jmp    406372 <UnityAssertFloatSpecial@@Base+0x1f2>
  406358:	inc    QWORD PTR [rip+0xb811]        # 411b70 <__bss_start@@Base+0xa20>
  40635f:	lea    rdi,[rip+0x6193]        # 40c4f9 <UnityStrNot@@Base>
  406366:	call   4049c0 <UnityPrint@@Base>
  40636b:	lea    rax,[rip+0xb806]        # 411b78 <__bss_start@@Base+0xa28>
  406372:	inc    QWORD PTR [rax]
  406375:	mov    rbx,QWORD PTR [rsp+rbx*8]
  406379:	mov    rdi,rbx
  40637c:	call   4049c0 <UnityPrint@@Base>
  406381:	lea    rdi,[rip+0x608f]        # 40c417 <UnityStrWas@@Base>
  406388:	call   4049c0 <UnityPrint@@Base>
  40638d:	test   r12d,r12d
  406390:	je     4063ae <UnityAssertFloatSpecial@@Base+0x22e>
  406392:	inc    QWORD PTR [rip+0xb7e7]        # 411b80 <__bss_start@@Base+0xa30>
  406399:	lea    rdi,[rip+0x6159]        # 40c4f9 <UnityStrNot@@Base>
  4063a0:	call   4049c0 <UnityPrint@@Base>
  4063a5:	lea    rax,[rip+0xb7e4]        # 411b90 <__bss_start@@Base+0xa40>
  4063ac:	jmp    4063b5 <UnityAssertFloatSpecial@@Base+0x235>
  4063ae:	lea    rax,[rip+0xb7d3]        # 411b88 <__bss_start@@Base+0xa38>
  4063b5:	inc    QWORD PTR [rax]
  4063b8:	mov    rdi,rbx
  4063bb:	call   4049c0 <UnityPrint@@Base>
  4063c0:	mov    rdi,r14
  4063c3:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  4063c8:	mov    QWORD PTR [r15+0x40],0x1
  4063d0:	add    r15,0x50
  4063d4:	mov    rdi,r15
  4063d7:	mov    esi,0x1
  4063dc:	call   403200 <longjmp@plt>
  4063e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004063f0 <UnityAssertNumbersWithin@@Base>:
  4063f0:	push   rbp
  4063f1:	push   r15
  4063f3:	push   r14
  4063f5:	push   r13
  4063f7:	push   r12
  4063f9:	push   rbx
  4063fa:	push   rax
  4063fb:	inc    QWORD PTR [rip+0xb7ae]        # 411bb0 <__bss_start@@Base+0xa60>
  406402:	lea    rbx,[rip+0xc407]        # 412810 <Unity@@Base>
  406409:	mov    rax,QWORD PTR [rbx+0x48]
  40640d:	or     rax,QWORD PTR [rbx+0x40]
  406411:	je     40641f <UnityAssertNumbersWithin@@Base+0x2f>
  406413:	lea    rax,[rip+0xb79e]        # 411bb8 <__bss_start@@Base+0xa68>
  40641a:	jmp    4064be <UnityAssertNumbersWithin@@Base+0xce>
  40641f:	mov    r15d,r9d
  406422:	mov    r14,rcx
  406425:	mov    r12,rdx
  406428:	mov    r13,rsi
  40642b:	mov    rbp,rdi
  40642e:	inc    QWORD PTR [rip+0xb78b]        # 411bc0 <__bss_start@@Base+0xa70>
  406435:	test   r15b,0x10
  406439:	jne    40645a <UnityAssertNumbersWithin@@Base+0x6a>
  40643b:	inc    QWORD PTR [rip+0xb78e]        # 411bd0 <__bss_start@@Base+0xa80>
  406442:	mov    rax,r12
  406445:	sub    rax,r13
  406448:	jbe    406479 <UnityAssertNumbersWithin@@Base+0x89>
  40644a:	inc    QWORD PTR [rip+0xb7a7]        # 411bf8 <__bss_start@@Base+0xaa8>
  406451:	lea    rcx,[rip+0xb7b0]        # 411c08 <__bss_start@@Base+0xab8>
  406458:	jmp    4064a3 <UnityAssertNumbersWithin@@Base+0xb3>
  40645a:	inc    QWORD PTR [rip+0xb767]        # 411bc8 <__bss_start@@Base+0xa78>
  406461:	mov    rax,r12
  406464:	sub    rax,r13
  406467:	jle    40648f <UnityAssertNumbersWithin@@Base+0x9f>
  406469:	inc    QWORD PTR [rip+0xb768]        # 411bd8 <__bss_start@@Base+0xa88>
  406470:	lea    rcx,[rip+0xb771]        # 411be8 <__bss_start@@Base+0xa98>
  406477:	jmp    4064a3 <UnityAssertNumbersWithin@@Base+0xb3>
  406479:	inc    QWORD PTR [rip+0xb780]        # 411c00 <__bss_start@@Base+0xab0>
  406480:	mov    rax,r13
  406483:	sub    rax,r12
  406486:	lea    rcx,[rip+0xb783]        # 411c10 <__bss_start@@Base+0xac0>
  40648d:	jmp    4064a3 <UnityAssertNumbersWithin@@Base+0xb3>
  40648f:	inc    QWORD PTR [rip+0xb74a]        # 411be0 <__bss_start@@Base+0xa90>
  406496:	mov    rax,r13
  406499:	sub    rax,r12
  40649c:	lea    rcx,[rip+0xb74d]        # 411bf0 <__bss_start@@Base+0xaa0>
  4064a3:	xor    edx,edx
  4064a5:	cmp    rax,rbp
  4064a8:	seta   dl
  4064ab:	mov    QWORD PTR [rbx+0x40],rdx
  4064af:	inc    QWORD PTR [rcx]
  4064b2:	cmp    rax,rbp
  4064b5:	ja     4064d7 <UnityAssertNumbersWithin@@Base+0xe7>
  4064b7:	lea    rax,[rip+0xb762]        # 411c20 <__bss_start@@Base+0xad0>
  4064be:	inc    QWORD PTR [rax]
  4064c1:	inc    QWORD PTR [rip+0xb760]        # 411c28 <__bss_start@@Base+0xad8>
  4064c8:	add    rsp,0x8
  4064cc:	pop    rbx
  4064cd:	pop    r12
  4064cf:	pop    r13
  4064d1:	pop    r14
  4064d3:	pop    r15
  4064d5:	pop    rbp
  4064d6:	ret    
  4064d7:	inc    QWORD PTR [rip+0xb73a]        # 411c18 <__bss_start@@Base+0xac8>
  4064de:	mov    rdi,r8
  4064e1:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  4064e6:	lea    rdi,[rip+0x5f73]        # 40c460 <UnityStrDelta@@Base>
  4064ed:	call   4049c0 <UnityPrint@@Base>
  4064f2:	mov    rdi,rbp
  4064f5:	mov    esi,r15d
  4064f8:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  4064fd:	lea    rdi,[rip+0x5f08]        # 40c40c <UnityStrExpected@@Base>
  406504:	call   4049c0 <UnityPrint@@Base>
  406509:	mov    rdi,r13
  40650c:	mov    esi,r15d
  40650f:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  406514:	lea    rdi,[rip+0x5efc]        # 40c417 <UnityStrWas@@Base>
  40651b:	call   4049c0 <UnityPrint@@Base>
  406520:	mov    rdi,r12
  406523:	mov    esi,r15d
  406526:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  40652b:	mov    rdi,r14
  40652e:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  406533:	mov    QWORD PTR [rbx+0x40],0x1
  40653b:	add    rbx,0x50
  40653f:	mov    rdi,rbx
  406542:	mov    esi,0x1
  406547:	call   403200 <longjmp@plt>
  40654c:	nop    DWORD PTR [rax+0x0]

0000000000406550 <UnityAssertEqualString@@Base>:
  406550:	push   r15
  406552:	push   r14
  406554:	push   r13
  406556:	push   r12
  406558:	push   rbx
  406559:	inc    QWORD PTR [rip+0xb6d0]        # 411c30 <__bss_start@@Base+0xae0>
  406560:	lea    r15,[rip+0xc2a9]        # 412810 <Unity@@Base>
  406567:	mov    r11,QWORD PTR [r15+0x40]
  40656b:	mov    rax,QWORD PTR [r15+0x48]
  40656f:	or     rax,r11
  406572:	je     406587 <UnityAssertEqualString@@Base+0x37>
  406574:	lea    rax,[rip+0xb6cd]        # 411c48 <__bss_start@@Base+0xaf8>
  40657b:	lea    rcx,[rip+0xb6b6]        # 411c38 <__bss_start@@Base+0xae8>
  406582:	jmp    406643 <UnityAssertEqualString@@Base+0xf3>
  406587:	mov    r14,rdx
  40658a:	mov    r12,rsi
  40658d:	mov    rbx,rdi
  406590:	inc    QWORD PTR [rip+0xb6a9]        # 411c40 <__bss_start@@Base+0xaf0>
  406597:	test   rdi,rdi
  40659a:	je     40661a <UnityAssertEqualString@@Base+0xca>
  4065a0:	test   r12,r12
  4065a3:	je     40661a <UnityAssertEqualString@@Base+0xca>
  4065a5:	inc    QWORD PTR [rip+0xb6a4]        # 411c50 <__bss_start@@Base+0xb00>
  4065ac:	xor    edx,edx
  4065ae:	lea    rax,[rip+0xb6ab]        # 411c60 <__bss_start@@Base+0xb10>
  4065b5:	lea    rsi,[rip+0xb6ac]        # 411c68 <__bss_start@@Base+0xb18>
  4065bc:	lea    r13,[rip+0xb6b5]        # 411c78 <__bss_start@@Base+0xb28>
  4065c3:	lea    r10,[rip+0xb6b6]        # 411c80 <__bss_start@@Base+0xb30>
  4065ca:	lea    r8,[rip+0xb6c7]        # 411c98 <__bss_start@@Base+0xb48>
  4065d1:	lea    r9,[rip+0xb6b0]        # 411c88 <__bss_start@@Base+0xb38>
  4065d8:	lea    rdi,[rip+0xb6c1]        # 411ca0 <__bss_start@@Base+0xb50>
  4065df:	nop
  4065e0:	inc    QWORD PTR [rax]
  4065e3:	mov    edx,edx
  4065e5:	cmp    BYTE PTR [rbx+rdx*1],0x0
  4065e9:	mov    rax,rsi
  4065ec:	jne    4065ff <UnityAssertEqualString@@Base+0xaf>
  4065ee:	inc    QWORD PTR [rip+0xb67b]        # 411c70 <__bss_start@@Base+0xb20>
  4065f5:	cmp    BYTE PTR [r12+rdx*1],0x0
  4065fa:	mov    rax,r13
  4065fd:	je     40662d <UnityAssertEqualString@@Base+0xdd>
  4065ff:	inc    QWORD PTR [rax]
  406602:	movzx  eax,BYTE PTR [rbx+rdx*1]
  406606:	cmp    al,BYTE PTR [r12+rdx*1]
  40660a:	jne    406668 <UnityAssertEqualString@@Base+0x118>
  40660c:	inc    QWORD PTR [rip+0xb67d]        # 411c90 <__bss_start@@Base+0xb40>
  406613:	inc    edx
  406615:	mov    rax,rdi
  406618:	jmp    4065e0 <UnityAssertEqualString@@Base+0x90>
  40661a:	inc    QWORD PTR [rip+0xb637]        # 411c58 <__bss_start@@Base+0xb08>
  406621:	cmp    rbx,r12
  406624:	jne    40665a <UnityAssertEqualString@@Base+0x10a>
  406626:	lea    r10,[rip+0xb683]        # 411cb0 <__bss_start@@Base+0xb60>
  40662d:	inc    QWORD PTR [r10]
  406630:	test   r11,r11
  406633:	jne    406676 <UnityAssertEqualString@@Base+0x126>
  406635:	lea    rax,[rip+0xb694]        # 411cd0 <__bss_start@@Base+0xb80>
  40663c:	lea    rcx,[rip+0xb685]        # 411cc8 <__bss_start@@Base+0xb78>
  406643:	inc    QWORD PTR [rcx]
  406646:	inc    QWORD PTR [rax]
  406649:	inc    QWORD PTR [rip+0xb688]        # 411cd8 <__bss_start@@Base+0xb88>
  406650:	pop    rbx
  406651:	pop    r12
  406653:	pop    r13
  406655:	pop    r14
  406657:	pop    r15
  406659:	ret    
  40665a:	lea    r8,[rip+0xb657]        # 411cb8 <__bss_start@@Base+0xb68>
  406661:	lea    r9,[rip+0xb640]        # 411ca8 <__bss_start@@Base+0xb58>
  406668:	inc    QWORD PTR [r9]
  40666b:	mov    QWORD PTR [r15+0x40],0x1
  406673:	inc    QWORD PTR [r8]
  406676:	inc    QWORD PTR [rip+0xb643]        # 411cc0 <__bss_start@@Base+0xb70>
  40667d:	mov    rdi,rcx
  406680:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406685:	mov    rdi,rbx
  406688:	mov    rsi,r12
  40668b:	call   4066c0 <UnityAssertEqualString@@Base+0x170>
  406690:	mov    rdi,r14
  406693:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  406698:	mov    QWORD PTR [r15+0x40],0x1
  4066a0:	add    r15,0x50
  4066a4:	mov    rdi,r15
  4066a7:	mov    esi,0x1
  4066ac:	call   403200 <longjmp@plt>
  4066b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4066c0:	push   r15
  4066c2:	push   r14
  4066c4:	push   rbx
  4066c5:	mov    r14,rsi
  4066c8:	mov    rbx,rdi
  4066cb:	inc    QWORD PTR [rip+0xb60e]        # 411ce0 <__bss_start@@Base+0xb90>
  4066d2:	lea    rdi,[rip+0x5d33]        # 40c40c <UnityStrExpected@@Base>
  4066d9:	call   4049c0 <UnityPrint@@Base>
  4066de:	test   rbx,rbx
  4066e1:	je     40674c <UnityAssertEqualString@@Base+0x1fc>
  4066e3:	inc    QWORD PTR [rip+0xb5fe]        # 411ce8 <__bss_start@@Base+0xb98>
  4066ea:	vmovdqa xmm0,XMMWORD PTR [rip+0xacce]        # 4113c0 <__bss_start@@Base+0x270>
  4066f2:	vpcmpeqd xmm1,xmm1,xmm1
  4066f6:	vpsubq xmm0,xmm0,xmm1
  4066fa:	vmovdqa XMMWORD PTR [rip+0xacbe],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406702:	mov    r15,QWORD PTR [rip+0xa8d7]        # 410fe0 <stdout@GLIBC_2.2.5>
  406709:	mov    rsi,QWORD PTR [r15]
  40670c:	mov    edi,0x27
  406711:	call   403130 <putc@plt>
  406716:	mov    rdi,rbx
  406719:	call   4049c0 <UnityPrint@@Base>
  40671e:	vmovdqa xmm0,XMMWORD PTR [rip+0xac9a]        # 4113c0 <__bss_start@@Base+0x270>
  406726:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5c82]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  40672e:	vmovdqa XMMWORD PTR [rip+0xac8a],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406736:	mov    rsi,QWORD PTR [r15]
  406739:	mov    edi,0x27
  40673e:	call   403130 <putc@plt>
  406743:	lea    rax,[rip+0xb5ae]        # 411cf8 <__bss_start@@Base+0xba8>
  40674a:	jmp    406766 <UnityAssertEqualString@@Base+0x216>
  40674c:	inc    QWORD PTR [rip+0xb59d]        # 411cf0 <__bss_start@@Base+0xba0>
  406753:	lea    rdi,[rip+0x5caa]        # 40c404 <UnityStrNull@@Base>
  40675a:	call   4049c0 <UnityPrint@@Base>
  40675f:	lea    rax,[rip+0xb59a]        # 411d00 <__bss_start@@Base+0xbb0>
  406766:	inc    QWORD PTR [rax]
  406769:	lea    rdi,[rip+0x5ca7]        # 40c417 <UnityStrWas@@Base>
  406770:	call   4049c0 <UnityPrint@@Base>
  406775:	test   r14,r14
  406778:	je     4067e3 <UnityAssertEqualString@@Base+0x293>
  40677a:	inc    QWORD PTR [rip+0xb587]        # 411d08 <__bss_start@@Base+0xbb8>
  406781:	vmovdqa xmm0,XMMWORD PTR [rip+0xac37]        # 4113c0 <__bss_start@@Base+0x270>
  406789:	vpcmpeqd xmm1,xmm1,xmm1
  40678d:	vpsubq xmm0,xmm0,xmm1
  406791:	vmovdqa XMMWORD PTR [rip+0xac27],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406799:	mov    rbx,QWORD PTR [rip+0xa840]        # 410fe0 <stdout@GLIBC_2.2.5>
  4067a0:	mov    rsi,QWORD PTR [rbx]
  4067a3:	mov    edi,0x27
  4067a8:	call   403130 <putc@plt>
  4067ad:	mov    rdi,r14
  4067b0:	call   4049c0 <UnityPrint@@Base>
  4067b5:	vmovdqa xmm0,XMMWORD PTR [rip+0xac03]        # 4113c0 <__bss_start@@Base+0x270>
  4067bd:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5beb]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4067c5:	vmovdqa XMMWORD PTR [rip+0xabf3],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4067cd:	mov    rsi,QWORD PTR [rbx]
  4067d0:	mov    edi,0x27
  4067d5:	call   403130 <putc@plt>
  4067da:	lea    rax,[rip+0xb537]        # 411d18 <__bss_start@@Base+0xbc8>
  4067e1:	jmp    4067fd <UnityAssertEqualString@@Base+0x2ad>
  4067e3:	inc    QWORD PTR [rip+0xb526]        # 411d10 <__bss_start@@Base+0xbc0>
  4067ea:	lea    rdi,[rip+0x5c13]        # 40c404 <UnityStrNull@@Base>
  4067f1:	call   4049c0 <UnityPrint@@Base>
  4067f6:	lea    rax,[rip+0xb523]        # 411d20 <__bss_start@@Base+0xbd0>
  4067fd:	inc    QWORD PTR [rax]
  406800:	inc    QWORD PTR [rip+0xb521]        # 411d28 <__bss_start@@Base+0xbd8>
  406807:	pop    rbx
  406808:	pop    r14
  40680a:	pop    r15
  40680c:	ret    
  40680d:	nop    DWORD PTR [rax]

0000000000406810 <UnityAssertEqualStringLen@@Base>:
  406810:	push   rbp
  406811:	push   r15
  406813:	push   r14
  406815:	push   r13
  406817:	push   r12
  406819:	push   rbx
  40681a:	sub    rsp,0x18
  40681e:	inc    QWORD PTR [rip+0xb50b]        # 411d30 <__bss_start@@Base+0xbe0>
  406825:	mov    r14,rcx
  406828:	lea    r12,[rip+0xbfe1]        # 412810 <Unity@@Base>
  40682f:	mov    rax,QWORD PTR [r12+0x40]
  406834:	mov    rcx,QWORD PTR [r12+0x48]
  406839:	or     rcx,rax
  40683c:	je     406851 <UnityAssertEqualStringLen@@Base+0x41>
  40683e:	lea    rax,[rip+0xb503]        # 411d48 <__bss_start@@Base+0xbf8>
  406845:	lea    rcx,[rip+0xb4ec]        # 411d38 <__bss_start@@Base+0xbe8>
  40684c:	jmp    406937 <UnityAssertEqualStringLen@@Base+0x127>
  406851:	mov    r15d,edx
  406854:	mov    rbp,rsi
  406857:	mov    rbx,rdi
  40685a:	inc    QWORD PTR [rip+0xb4df]        # 411d40 <__bss_start@@Base+0xbf0>
  406861:	test   rdi,rdi
  406864:	je     406905 <UnityAssertEqualStringLen@@Base+0xf5>
  40686a:	test   rbp,rbp
  40686d:	je     406905 <UnityAssertEqualStringLen@@Base+0xf5>
  406873:	inc    QWORD PTR [rip+0xb4d6]        # 411d50 <__bss_start@@Base+0xc00>
  40687a:	mov    edi,r15d
  40687d:	lea    r9,[rip+0xb4dc]        # 411d60 <__bss_start@@Base+0xc10>
  406884:	xor    ecx,ecx
  406886:	lea    rsi,[rip+0xb4db]        # 411d68 <__bss_start@@Base+0xc18>
  40688d:	lea    r10,[rip+0xb4e4]        # 411d78 <__bss_start@@Base+0xc28>
  406894:	lea    r11,[rip+0xb4e5]        # 411d80 <__bss_start@@Base+0xc30>
  40689b:	lea    rdx,[rip+0xb506]        # 411da8 <__bss_start@@Base+0xc58>
  4068a2:	mov    QWORD PTR [rsp+0x10],rdx
  4068a7:	lea    rdx,[rip+0xb4ea]        # 411d98 <__bss_start@@Base+0xc48>
  4068ae:	mov    QWORD PTR [rsp+0x8],rdx
  4068b3:	lea    r13,[rip+0xb4f6]        # 411db0 <__bss_start@@Base+0xc60>
  4068ba:	nop    WORD PTR [rax+rax*1+0x0]
  4068c0:	inc    QWORD PTR [r9]
  4068c3:	cmp    BYTE PTR [rbx+rcx*1],0x0
  4068c7:	mov    rdx,rsi
  4068ca:	jne    4068dd <UnityAssertEqualStringLen@@Base+0xcd>
  4068cc:	inc    QWORD PTR [rip+0xb49d]        # 411d70 <__bss_start@@Base+0xc20>
  4068d3:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x0
  4068d8:	mov    rdx,r10
  4068db:	je     406921 <UnityAssertEqualStringLen@@Base+0x111>
  4068dd:	inc    QWORD PTR [rdx]
  4068e0:	cmp    rdi,rcx
  4068e3:	je     40691a <UnityAssertEqualStringLen@@Base+0x10a>
  4068e5:	inc    QWORD PTR [rip+0xb49c]        # 411d88 <__bss_start@@Base+0xc38>
  4068ec:	movzx  edx,BYTE PTR [rbx+rcx*1]
  4068f0:	cmp    dl,BYTE PTR [rbp+rcx*1+0x0]
  4068f4:	jne    40696b <UnityAssertEqualStringLen@@Base+0x15b>
  4068f6:	inc    QWORD PTR [rip+0xb4a3]        # 411da0 <__bss_start@@Base+0xc50>
  4068fd:	inc    rcx
  406900:	mov    r9,r13
  406903:	jmp    4068c0 <UnityAssertEqualStringLen@@Base+0xb0>
  406905:	inc    QWORD PTR [rip+0xb44c]        # 411d58 <__bss_start@@Base+0xc08>
  40690c:	cmp    rbx,rbp
  40690f:	jne    406953 <UnityAssertEqualStringLen@@Base+0x143>
  406911:	lea    r11,[rip+0xb4a8]        # 411dc0 <__bss_start@@Base+0xc70>
  406918:	jmp    406921 <UnityAssertEqualStringLen@@Base+0x111>
  40691a:	lea    r11,[rip+0xb46f]        # 411d90 <__bss_start@@Base+0xc40>
  406921:	inc    QWORD PTR [r11]
  406924:	test   rax,rax
  406927:	jne    406984 <UnityAssertEqualStringLen@@Base+0x174>
  406929:	lea    rax,[rip+0xb4b0]        # 411de0 <__bss_start@@Base+0xc90>
  406930:	lea    rcx,[rip+0xb4a1]        # 411dd8 <__bss_start@@Base+0xc88>
  406937:	inc    QWORD PTR [rcx]
  40693a:	inc    QWORD PTR [rax]
  40693d:	inc    QWORD PTR [rip+0xb4a4]        # 411de8 <__bss_start@@Base+0xc98>
  406944:	add    rsp,0x18
  406948:	pop    rbx
  406949:	pop    r12
  40694b:	pop    r13
  40694d:	pop    r14
  40694f:	pop    r15
  406951:	pop    rbp
  406952:	ret    
  406953:	lea    rax,[rip+0xb46e]        # 411dc8 <__bss_start@@Base+0xc78>
  40695a:	mov    QWORD PTR [rsp+0x10],rax
  40695f:	lea    rax,[rip+0xb452]        # 411db8 <__bss_start@@Base+0xc68>
  406966:	mov    QWORD PTR [rsp+0x8],rax
  40696b:	mov    rax,QWORD PTR [rsp+0x8]
  406970:	inc    QWORD PTR [rax]
  406973:	mov    QWORD PTR [r12+0x40],0x1
  40697c:	mov    rax,QWORD PTR [rsp+0x10]
  406981:	inc    QWORD PTR [rax]
  406984:	inc    QWORD PTR [rip+0xb445]        # 411dd0 <__bss_start@@Base+0xc80>
  40698b:	mov    rdi,r8
  40698e:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406993:	mov    rdi,rbx
  406996:	mov    rsi,rbp
  406999:	mov    edx,r15d
  40699c:	call   4069d0 <UnityAssertEqualStringLen@@Base+0x1c0>
  4069a1:	mov    rdi,r14
  4069a4:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  4069a9:	mov    QWORD PTR [r12+0x40],0x1
  4069b2:	add    r12,0x50
  4069b6:	mov    rdi,r12
  4069b9:	mov    esi,0x1
  4069be:	call   403200 <longjmp@plt>
  4069c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069cd:	nop    DWORD PTR [rax]
  4069d0:	push   rbp
  4069d1:	push   r15
  4069d3:	push   r14
  4069d5:	push   rbx
  4069d6:	push   rax
  4069d7:	mov    r14d,edx
  4069da:	mov    rbx,rsi
  4069dd:	mov    rbp,rdi
  4069e0:	inc    QWORD PTR [rip+0xb409]        # 411df0 <__bss_start@@Base+0xca0>
  4069e7:	lea    rdi,[rip+0x5a1e]        # 40c40c <UnityStrExpected@@Base>
  4069ee:	call   4049c0 <UnityPrint@@Base>
  4069f3:	test   rbp,rbp
  4069f6:	je     406a64 <UnityAssertEqualStringLen@@Base+0x254>
  4069f8:	inc    QWORD PTR [rip+0xb3f9]        # 411df8 <__bss_start@@Base+0xca8>
  4069ff:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9b9]        # 4113c0 <__bss_start@@Base+0x270>
  406a07:	vpcmpeqd xmm1,xmm1,xmm1
  406a0b:	vpsubq xmm0,xmm0,xmm1
  406a0f:	vmovdqa XMMWORD PTR [rip+0xa9a9],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406a17:	mov    r15,QWORD PTR [rip+0xa5c2]        # 410fe0 <stdout@GLIBC_2.2.5>
  406a1e:	mov    rsi,QWORD PTR [r15]
  406a21:	mov    edi,0x27
  406a26:	call   403130 <putc@plt>
  406a2b:	mov    rdi,rbp
  406a2e:	mov    esi,r14d
  406a31:	call   404cd0 <UnityPrintLen@@Base>
  406a36:	vmovdqa xmm0,XMMWORD PTR [rip+0xa982]        # 4113c0 <__bss_start@@Base+0x270>
  406a3e:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x596a]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  406a46:	vmovdqa XMMWORD PTR [rip+0xa972],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406a4e:	mov    rsi,QWORD PTR [r15]
  406a51:	mov    edi,0x27
  406a56:	call   403130 <putc@plt>
  406a5b:	lea    rax,[rip+0xb3a6]        # 411e08 <__bss_start@@Base+0xcb8>
  406a62:	jmp    406a7e <UnityAssertEqualStringLen@@Base+0x26e>
  406a64:	inc    QWORD PTR [rip+0xb395]        # 411e00 <__bss_start@@Base+0xcb0>
  406a6b:	lea    rdi,[rip+0x5992]        # 40c404 <UnityStrNull@@Base>
  406a72:	call   4049c0 <UnityPrint@@Base>
  406a77:	lea    rax,[rip+0xb392]        # 411e10 <__bss_start@@Base+0xcc0>
  406a7e:	inc    QWORD PTR [rax]
  406a81:	lea    rdi,[rip+0x598f]        # 40c417 <UnityStrWas@@Base>
  406a88:	call   4049c0 <UnityPrint@@Base>
  406a8d:	test   rbx,rbx
  406a90:	je     406b00 <UnityAssertEqualStringLen@@Base+0x2f0>
  406a92:	inc    QWORD PTR [rip+0xb37f]        # 411e18 <__bss_start@@Base+0xcc8>
  406a99:	vmovdqa xmm0,XMMWORD PTR [rip+0xa91f]        # 4113c0 <__bss_start@@Base+0x270>
  406aa1:	vpcmpeqd xmm1,xmm1,xmm1
  406aa5:	vpsubq xmm0,xmm0,xmm1
  406aa9:	vmovdqa XMMWORD PTR [rip+0xa90f],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406ab1:	mov    rbp,QWORD PTR [rip+0xa528]        # 410fe0 <stdout@GLIBC_2.2.5>
  406ab8:	mov    rsi,QWORD PTR [rbp+0x0]
  406abc:	mov    edi,0x27
  406ac1:	call   403130 <putc@plt>
  406ac6:	mov    rdi,rbx
  406ac9:	mov    esi,r14d
  406acc:	call   404cd0 <UnityPrintLen@@Base>
  406ad1:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8e7]        # 4113c0 <__bss_start@@Base+0x270>
  406ad9:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x58cf]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  406ae1:	vmovdqa XMMWORD PTR [rip+0xa8d7],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  406ae9:	mov    rsi,QWORD PTR [rbp+0x0]
  406aed:	mov    edi,0x27
  406af2:	call   403130 <putc@plt>
  406af7:	lea    rax,[rip+0xb32a]        # 411e28 <__bss_start@@Base+0xcd8>
  406afe:	jmp    406b1a <UnityAssertEqualStringLen@@Base+0x30a>
  406b00:	inc    QWORD PTR [rip+0xb319]        # 411e20 <__bss_start@@Base+0xcd0>
  406b07:	lea    rdi,[rip+0x58f6]        # 40c404 <UnityStrNull@@Base>
  406b0e:	call   4049c0 <UnityPrint@@Base>
  406b13:	lea    rax,[rip+0xb316]        # 411e30 <__bss_start@@Base+0xce0>
  406b1a:	inc    QWORD PTR [rax]
  406b1d:	inc    QWORD PTR [rip+0xb314]        # 411e38 <__bss_start@@Base+0xce8>
  406b24:	add    rsp,0x8
  406b28:	pop    rbx
  406b29:	pop    r14
  406b2b:	pop    r15
  406b2d:	pop    rbp
  406b2e:	ret    
  406b2f:	nop

0000000000406b30 <UnityAssertEqualStringArray@@Base>:
  406b30:	push   rbp
  406b31:	push   r15
  406b33:	push   r14
  406b35:	push   r13
  406b37:	push   r12
  406b39:	push   rbx
  406b3a:	sub    rsp,0x28
  406b3e:	inc    QWORD PTR [rip+0xb2fb]        # 411e40 <__bss_start@@Base+0xcf0>
  406b45:	lea    r15,[rip+0xbcc4]        # 412810 <Unity@@Base>
  406b4c:	mov    rax,QWORD PTR [r15+0x48]
  406b50:	or     rax,QWORD PTR [r15+0x40]
  406b54:	je     406b69 <UnityAssertEqualStringArray@@Base+0x39>
  406b56:	inc    QWORD PTR [rip+0xb2eb]        # 411e48 <__bss_start@@Base+0xcf8>
  406b5d:	lea    rax,[rip+0xb2f4]        # 411e58 <__bss_start@@Base+0xd08>
  406b64:	jmp    406ce7 <UnityAssertEqualStringArray@@Base+0x1b7>
  406b69:	mov    rbp,r8
  406b6c:	mov    r14,rcx
  406b6f:	inc    QWORD PTR [rip+0xb2da]        # 411e50 <__bss_start@@Base+0xd00>
  406b76:	mov    DWORD PTR [rsp+0x4],edx
  406b7a:	test   edx,edx
  406b7c:	je     406da9 <UnityAssertEqualStringArray@@Base+0x279>
  406b82:	mov    r12,rsi
  406b85:	mov    rbx,rdi
  406b88:	inc    QWORD PTR [rip+0xb2d9]        # 411e68 <__bss_start@@Base+0xd18>
  406b8f:	mov    rdx,rbp
  406b92:	mov    rcx,r14
  406b95:	call   405da0 <UnityAssertEqualIntArray@@Base+0x440>
  406b9a:	cmp    eax,0x1
  406b9d:	jne    406bb2 <UnityAssertEqualStringArray@@Base+0x82>
  406b9f:	inc    QWORD PTR [rip+0xb2ca]        # 411e70 <__bss_start@@Base+0xd20>
  406ba6:	lea    rax,[rip+0xb2d3]        # 411e80 <__bss_start@@Base+0xd30>
  406bad:	jmp    406ce7 <UnityAssertEqualStringArray@@Base+0x1b7>
  406bb2:	mov    QWORD PTR [rsp+0x18],rbp
  406bb7:	mov    QWORD PTR [rsp+0x20],r14
  406bbc:	mov    eax,DWORD PTR [rsp+0x4]
  406bc0:	lea    rbp,[rip+0xb2b1]        # 411e78 <__bss_start@@Base+0xd28>
  406bc7:	xor    r14d,r14d
  406bca:	lea    r11,[rip+0xb2bf]        # 411e90 <__bss_start@@Base+0xd40>
  406bd1:	lea    rsi,[rip+0xb358]        # 411f30 <__bss_start@@Base+0xde0>
  406bd8:	lea    rdi,[rip+0xb2c1]        # 411ea0 <__bss_start@@Base+0xd50>
  406bdf:	lea    r9,[rip+0xb2ca]        # 411eb0 <__bss_start@@Base+0xd60>
  406be6:	lea    r10,[rip+0xb2d3]        # 411ec0 <__bss_start@@Base+0xd70>
  406bed:	lea    rcx,[rip+0xb2ec]        # 411ee0 <__bss_start@@Base+0xd90>
  406bf4:	mov    QWORD PTR [rsp+0x10],rcx
  406bf9:	lea    rcx,[rip+0xb2d0]        # 411ed0 <__bss_start@@Base+0xd80>
  406c00:	mov    QWORD PTR [rsp+0x8],rcx
  406c05:	lea    r8,[rip+0xb2dc]        # 411ee8 <__bss_start@@Base+0xd98>
  406c0c:	nop    DWORD PTR [rax+0x0]
  406c10:	inc    QWORD PTR [rbp+0x0]
  406c14:	cmp    QWORD PTR [rbx+r14*8],0x0
  406c19:	mov    rdx,r11
  406c1c:	je     406c90 <UnityAssertEqualStringArray@@Base+0x160>
  406c1e:	inc    QWORD PTR [rip+0xb263]        # 411e88 <__bss_start@@Base+0xd38>
  406c25:	cmp    QWORD PTR [r12+r14*8],0x0
  406c2a:	mov    rdx,rdi
  406c2d:	je     406c90 <UnityAssertEqualStringArray@@Base+0x160>
  406c2f:	inc    QWORD PTR [rip+0xb262]        # 411e98 <__bss_start@@Base+0xd48>
  406c36:	xor    ebp,ebp
  406c38:	lea    r13,[rip+0xb269]        # 411ea8 <__bss_start@@Base+0xd58>
  406c3f:	nop
  406c40:	inc    QWORD PTR [r13+0x0]
  406c44:	mov    rdx,QWORD PTR [rbx+r14*8]
  406c48:	mov    ebp,ebp
  406c4a:	cmp    BYTE PTR [rdx+rbp*1],0x0
  406c4e:	mov    rdx,r9
  406c51:	jne    406c67 <UnityAssertEqualStringArray@@Base+0x137>
  406c53:	inc    QWORD PTR [rip+0xb25e]        # 411eb8 <__bss_start@@Base+0xd68>
  406c5a:	mov    rdx,QWORD PTR [r12+r14*8]
  406c5e:	cmp    BYTE PTR [rdx+rbp*1],0x0
  406c62:	mov    rdx,r10
  406c65:	je     406cb0 <UnityAssertEqualStringArray@@Base+0x180>
  406c67:	inc    QWORD PTR [rdx]
  406c6a:	mov    rdx,QWORD PTR [rbx+r14*8]
  406c6e:	movzx  edx,BYTE PTR [rdx+rbp*1]
  406c72:	mov    rcx,QWORD PTR [r12+r14*8]
  406c76:	cmp    dl,BYTE PTR [rcx+rbp*1]
  406c79:	jne    406d18 <UnityAssertEqualStringArray@@Base+0x1e8>
  406c7f:	inc    QWORD PTR [rip+0xb252]        # 411ed8 <__bss_start@@Base+0xd88>
  406c86:	inc    ebp
  406c88:	mov    r13,r8
  406c8b:	jmp    406c40 <UnityAssertEqualStringArray@@Base+0x110>
  406c8d:	nop    DWORD PTR [rax]
  406c90:	inc    QWORD PTR [rdx]
  406c93:	mov    rcx,QWORD PTR [rbx+r14*8]
  406c97:	lea    rdx,[rip+0xb25a]        # 411ef8 <__bss_start@@Base+0xda8>
  406c9e:	cmp    rcx,QWORD PTR [r12+r14*8]
  406ca2:	je     406cb7 <UnityAssertEqualStringArray@@Base+0x187>
  406ca4:	jmp    406d00 <UnityAssertEqualStringArray@@Base+0x1d0>
  406ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cb0:	lea    rdx,[rip+0xb211]        # 411ec8 <__bss_start@@Base+0xd78>
  406cb7:	mov    rcx,QWORD PTR [r15+0x40]
  406cbb:	inc    QWORD PTR [rdx]
  406cbe:	test   rcx,rcx
  406cc1:	jne    406d30 <UnityAssertEqualStringArray@@Base+0x200>
  406cc3:	inc    QWORD PTR [rip+0xb246]        # 411f10 <__bss_start@@Base+0xdc0>
  406cca:	inc    r14
  406ccd:	mov    rbp,rsi
  406cd0:	cmp    r14,rax
  406cd3:	jne    406c10 <UnityAssertEqualStringArray@@Base+0xe0>
  406cd9:	inc    QWORD PTR [rip+0xb258]        # 411f38 <__bss_start@@Base+0xde8>
  406ce0:	lea    rax,[rip+0xb259]        # 411f40 <__bss_start@@Base+0xdf0>
  406ce7:	inc    QWORD PTR [rax]
  406cea:	inc    QWORD PTR [rip+0xb257]        # 411f48 <__bss_start@@Base+0xdf8>
  406cf1:	add    rsp,0x28
  406cf5:	pop    rbx
  406cf6:	pop    r12
  406cf8:	pop    r13
  406cfa:	pop    r14
  406cfc:	pop    r15
  406cfe:	pop    rbp
  406cff:	ret    
  406d00:	lea    rax,[rip+0xb1e9]        # 411ef0 <__bss_start@@Base+0xda0>
  406d07:	mov    QWORD PTR [rsp+0x8],rax
  406d0c:	lea    rax,[rip+0xb1ed]        # 411f00 <__bss_start@@Base+0xdb0>
  406d13:	mov    QWORD PTR [rsp+0x10],rax
  406d18:	mov    rax,QWORD PTR [rsp+0x8]
  406d1d:	inc    QWORD PTR [rax]
  406d20:	mov    QWORD PTR [r15+0x40],0x1
  406d28:	mov    rax,QWORD PTR [rsp+0x10]
  406d2d:	inc    QWORD PTR [rax]
  406d30:	mov    ebp,r14d
  406d33:	inc    QWORD PTR [rip+0xb1ce]        # 411f08 <__bss_start@@Base+0xdb8>
  406d3a:	mov    rdi,QWORD PTR [rsp+0x18]
  406d3f:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406d44:	cmp    DWORD PTR [rsp+0x4],0x2
  406d49:	jb     406d6f <UnityAssertEqualStringArray@@Base+0x23f>
  406d4b:	inc    QWORD PTR [rip+0xb1c6]        # 411f18 <__bss_start@@Base+0xdc8>
  406d52:	lea    rdi,[rip+0x56c9]        # 40c422 <UnityStrElement@@Base>
  406d59:	call   4049c0 <UnityPrint@@Base>
  406d5e:	mov    rdi,rbp
  406d61:	call   405170 <UnityPrintNumberUnsigned@@Base>
  406d66:	lea    rax,[rip+0xb1bb]        # 411f28 <__bss_start@@Base+0xdd8>
  406d6d:	jmp    406d76 <UnityAssertEqualStringArray@@Base+0x246>
  406d6f:	lea    rax,[rip+0xb1aa]        # 411f20 <__bss_start@@Base+0xdd0>
  406d76:	inc    QWORD PTR [rax]
  406d79:	mov    rdi,QWORD PTR [rbx+r14*8]
  406d7d:	mov    rsi,QWORD PTR [r12+rbp*8]
  406d81:	call   4066c0 <UnityAssertEqualString@@Base+0x170>
  406d86:	mov    rdi,QWORD PTR [rsp+0x20]
  406d8b:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  406d90:	mov    QWORD PTR [r15+0x40],0x1
  406d98:	add    r15,0x50
  406d9c:	mov    rdi,r15
  406d9f:	mov    esi,0x1
  406da4:	call   403200 <longjmp@plt>
  406da9:	inc    QWORD PTR [rip+0xb0b0]        # 411e60 <__bss_start@@Base+0xd10>
  406db0:	mov    rdi,rbp
  406db3:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406db8:	lea    rdi,[rip+0x56c1]        # 40c480 <UnityStrPointless@@Base>
  406dbf:	call   4049c0 <UnityPrint@@Base>
  406dc4:	mov    rdi,r14
  406dc7:	jmp    406d8b <UnityAssertEqualStringArray@@Base+0x25b>
  406dc9:	nop    DWORD PTR [rax+0x0]

0000000000406dd0 <UnityAssertEqualMemory@@Base>:
  406dd0:	push   rbp
  406dd1:	push   r15
  406dd3:	push   r14
  406dd5:	push   r13
  406dd7:	push   r12
  406dd9:	push   rbx
  406dda:	sub    rsp,0x18
  406dde:	inc    QWORD PTR [rip+0xb16b]        # 411f50 <__bss_start@@Base+0xe00>
  406de5:	lea    r15,[rip+0xba24]        # 412810 <Unity@@Base>
  406dec:	mov    rax,QWORD PTR [r15+0x48]
  406df0:	or     rax,QWORD PTR [r15+0x40]
  406df4:	je     406e09 <UnityAssertEqualMemory@@Base+0x39>
  406df6:	inc    QWORD PTR [rip+0xb15b]        # 411f58 <__bss_start@@Base+0xe08>
  406dfd:	lea    rax,[rip+0xb164]        # 411f68 <__bss_start@@Base+0xe18>
  406e04:	jmp    406ef9 <UnityAssertEqualMemory@@Base+0x129>
  406e09:	mov    r14,r8
  406e0c:	mov    r13d,edx
  406e0f:	inc    QWORD PTR [rip+0xb14a]        # 411f60 <__bss_start@@Base+0xe10>
  406e16:	test   edx,edx
  406e18:	je     406fd2 <UnityAssertEqualMemory@@Base+0x202>
  406e1e:	mov    ebp,ecx
  406e20:	test   ecx,ecx
  406e22:	je     406fd2 <UnityAssertEqualMemory@@Base+0x202>
  406e28:	mov    r12,rsi
  406e2b:	mov    rbx,rdi
  406e2e:	inc    QWORD PTR [rip+0xb143]        # 411f78 <__bss_start@@Base+0xe28>
  406e35:	mov    QWORD PTR [rsp+0x10],r9
  406e3a:	mov    rdx,r9
  406e3d:	mov    rcx,r14
  406e40:	call   405da0 <UnityAssertEqualIntArray@@Base+0x440>
  406e45:	cmp    eax,0x1
  406e48:	jne    406e5d <UnityAssertEqualMemory@@Base+0x8d>
  406e4a:	inc    QWORD PTR [rip+0xb12f]        # 411f80 <__bss_start@@Base+0xe30>
  406e51:	lea    rax,[rip+0xb138]        # 411f90 <__bss_start@@Base+0xe40>
  406e58:	jmp    406ef9 <UnityAssertEqualMemory@@Base+0x129>
  406e5d:	mov    QWORD PTR [rsp+0x8],r14
  406e62:	inc    QWORD PTR [rip+0xb11f]        # 411f88 <__bss_start@@Base+0xe38>
  406e69:	mov    r8,QWORD PTR [rip+0xb128]        # 411f98 <__bss_start@@Base+0xe48>
  406e70:	mov    rcx,QWORD PTR [rip+0xb131]        # 411fa8 <__bss_start@@Base+0xe58>
  406e77:	mov    edx,r13d
  406e7a:	mov    QWORD PTR [rsp],rbp
  406e7e:	mov    esi,ebp
  406e80:	mov    r13d,esi
  406e83:	lea    esi,[r13-0x1]
  406e87:	inc    r8
  406e8a:	mov    QWORD PTR [rip+0xb107],r8        # 411f98 <__bss_start@@Base+0xe48>
  406e91:	inc    rcx
  406e94:	mov    QWORD PTR [rip+0xb10d],rcx        # 411fa8 <__bss_start@@Base+0xe58>
  406e9b:	mov    rdi,QWORD PTR [rip+0xb10e]        # 411fb0 <__bss_start@@Base+0xe60>
  406ea2:	inc    rdi
  406ea5:	xor    r14d,r14d
  406ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  406eb0:	lea    rbp,[rdi+r14*1]
  406eb4:	mov    QWORD PTR [rip+0xb0f5],rbp        # 411fb0 <__bss_start@@Base+0xe60>
  406ebb:	movzx  eax,BYTE PTR [rbx]
  406ebe:	cmp    al,BYTE PTR [r12]
  406ec2:	jne    406f12 <UnityAssertEqualMemory@@Base+0x142>
  406ec4:	inc    QWORD PTR [rip+0xb0fd]        # 411fc8 <__bss_start@@Base+0xe78>
  406ecb:	inc    rbx
  406ece:	inc    r12
  406ed1:	inc    QWORD PTR [rip+0xb110]        # 411fe8 <__bss_start@@Base+0xe98>
  406ed8:	inc    r14
  406edb:	cmp    edx,r14d
  406ede:	jne    406eb0 <UnityAssertEqualMemory@@Base+0xe0>
  406ee0:	inc    QWORD PTR [rip+0xb0d1]        # 411fb8 <__bss_start@@Base+0xe68>
  406ee7:	test   esi,esi
  406ee9:	jne    406e80 <UnityAssertEqualMemory@@Base+0xb0>
  406eeb:	inc    QWORD PTR [rip+0xb0ae]        # 411fa0 <__bss_start@@Base+0xe50>
  406ef2:	lea    rax,[rip+0xb0f7]        # 411ff0 <__bss_start@@Base+0xea0>
  406ef9:	inc    QWORD PTR [rax]
  406efc:	inc    QWORD PTR [rip+0xb0f5]        # 411ff8 <__bss_start@@Base+0xea8>
  406f03:	add    rsp,0x18
  406f07:	pop    rbx
  406f08:	pop    r12
  406f0a:	pop    r13
  406f0c:	pop    r14
  406f0e:	pop    r15
  406f10:	pop    rbp
  406f11:	ret    
  406f12:	inc    QWORD PTR [rip+0xb0a7]        # 411fc0 <__bss_start@@Base+0xe70>
  406f19:	mov    rdi,QWORD PTR [rsp+0x10]
  406f1e:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406f23:	lea    rdi,[rip+0x5516]        # 40c440 <UnityStrMemory@@Base>
  406f2a:	call   4049c0 <UnityPrint@@Base>
  406f2f:	cmp    DWORD PTR [rsp],0x2
  406f33:	jb     406f5d <UnityAssertEqualMemory@@Base+0x18d>
  406f35:	inc    QWORD PTR [rip+0xb094]        # 411fd0 <__bss_start@@Base+0xe80>
  406f3c:	lea    rdi,[rip+0x54df]        # 40c422 <UnityStrElement@@Base>
  406f43:	call   4049c0 <UnityPrint@@Base>
  406f48:	mov    rdi,QWORD PTR [rsp]
  406f4c:	sub    edi,r13d
  406f4f:	call   405170 <UnityPrintNumberUnsigned@@Base>
  406f54:	lea    rax,[rip+0xb085]        # 411fe0 <__bss_start@@Base+0xe90>
  406f5b:	jmp    406f64 <UnityAssertEqualMemory@@Base+0x194>
  406f5d:	lea    rax,[rip+0xb074]        # 411fd8 <__bss_start@@Base+0xe88>
  406f64:	inc    QWORD PTR [rax]
  406f67:	lea    rdi,[rip+0x54be]        # 40c42c <UnityStrByte@@Base>
  406f6e:	call   4049c0 <UnityPrint@@Base>
  406f73:	mov    rdi,r14
  406f76:	call   405170 <UnityPrintNumberUnsigned@@Base>
  406f7b:	lea    rdi,[rip+0x548a]        # 40c40c <UnityStrExpected@@Base>
  406f82:	call   4049c0 <UnityPrint@@Base>
  406f87:	movzx  edi,BYTE PTR [rbx]
  406f8a:	mov    esi,0x41
  406f8f:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  406f94:	lea    rdi,[rip+0x547c]        # 40c417 <UnityStrWas@@Base>
  406f9b:	call   4049c0 <UnityPrint@@Base>
  406fa0:	movzx  edi,BYTE PTR [r12]
  406fa5:	mov    esi,0x41
  406faa:	call   404ed0 <UnityPrintNumberByStyle@@Base>
  406faf:	mov    rdi,QWORD PTR [rsp+0x8]
  406fb4:	call   4057d0 <UnityAssertBits@@Base+0x1d0>
  406fb9:	mov    QWORD PTR [r15+0x40],0x1
  406fc1:	add    r15,0x50
  406fc5:	mov    rdi,r15
  406fc8:	mov    esi,0x1
  406fcd:	call   403200 <longjmp@plt>
  406fd2:	inc    QWORD PTR [rip+0xaf97]        # 411f70 <__bss_start@@Base+0xe20>
  406fd9:	mov    rdi,r9
  406fdc:	call   4056d0 <UnityAssertBits@@Base+0xd0>
  406fe1:	lea    rdi,[rip+0x5498]        # 40c480 <UnityStrPointless@@Base>
  406fe8:	call   4049c0 <UnityPrint@@Base>
  406fed:	mov    rdi,r14
  406ff0:	jmp    406fb4 <UnityAssertEqualMemory@@Base+0x1e4>
  406ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ffc:	nop    DWORD PTR [rax+0x0]

0000000000407000 <UnityFail@@Base>:
  407000:	push   r15
  407002:	push   r14
  407004:	push   r12
  407006:	push   rbx
  407007:	push   rax
  407008:	inc    QWORD PTR [rip+0xaff1]        # 412000 <__bss_start@@Base+0xeb0>
  40700f:	lea    r15,[rip+0xb7fa]        # 412810 <Unity@@Base>
  407016:	mov    rax,QWORD PTR [r15+0x48]
  40701a:	or     rax,QWORD PTR [r15+0x40]
  40701e:	je     40703a <UnityFail@@Base+0x3a>
  407020:	inc    QWORD PTR [rip+0xafe1]        # 412008 <__bss_start@@Base+0xeb8>
  407027:	inc    QWORD PTR [rip+0xafea]        # 412018 <__bss_start@@Base+0xec8>
  40702e:	add    rsp,0x8
  407032:	pop    rbx
  407033:	pop    r12
  407035:	pop    r14
  407037:	pop    r15
  407039:	ret    
  40703a:	mov    rbx,rsi
  40703d:	mov    r14,rdi
  407040:	inc    QWORD PTR [rip+0xafc9]        # 412010 <__bss_start@@Base+0xec0>
  407047:	mov    rdi,QWORD PTR [r15]
  40704a:	vmovdqa xmm0,XMMWORD PTR [rip+0xa68e]        # 4116e0 <__bss_start@@Base+0x590>
  407052:	vpcmpeqd xmm1,xmm1,xmm1
  407056:	vpsubq xmm0,xmm0,xmm1
  40705a:	vmovdqa XMMWORD PTR [rip+0xa67e],xmm0        # 4116e0 <__bss_start@@Base+0x590>
  407062:	call   4049c0 <UnityPrint@@Base>
  407067:	vmovdqa xmm0,XMMWORD PTR [rip+0xa351]        # 4113c0 <__bss_start@@Base+0x270>
  40706f:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5339]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  407077:	vmovdqa XMMWORD PTR [rip+0xa341],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40707f:	mov    r12,QWORD PTR [rip+0x9f5a]        # 410fe0 <stdout@GLIBC_2.2.5>
  407086:	mov    rsi,QWORD PTR [r12]
  40708a:	mov    edi,0x3a
  40708f:	call   403130 <putc@plt>
  407094:	mov    rdi,rbx
  407097:	call   404f50 <UnityPrintNumber@@Base>
  40709c:	vmovdqa xmm0,XMMWORD PTR [rip+0xa31c]        # 4113c0 <__bss_start@@Base+0x270>
  4070a4:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5304]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4070ac:	vmovdqa XMMWORD PTR [rip+0xa30c],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4070b4:	mov    rsi,QWORD PTR [r12]
  4070b8:	mov    edi,0x3a
  4070bd:	call   403130 <putc@plt>
  4070c2:	mov    rdi,QWORD PTR [r15+0x8]
  4070c6:	call   4049c0 <UnityPrint@@Base>
  4070cb:	vmovdqa xmm0,XMMWORD PTR [rip+0xa2ed]        # 4113c0 <__bss_start@@Base+0x270>
  4070d3:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x52d5]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4070db:	vmovdqa XMMWORD PTR [rip+0xa2dd],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4070e3:	mov    rsi,QWORD PTR [r12]
  4070e7:	mov    edi,0x3a
  4070ec:	call   403130 <putc@plt>
  4070f1:	vmovdqa xmm0,XMMWORD PTR [rip+0xa577]        # 411670 <__bss_start@@Base+0x520>
  4070f9:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x52af]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  407101:	vmovdqa XMMWORD PTR [rip+0xa567],xmm0        # 411670 <__bss_start@@Base+0x520>
  407109:	lea    rdi,[rip+0x52e8]        # 40c3f8 <UnityStrFail@@Base>
  407110:	call   4049c0 <UnityPrint@@Base>
  407115:	test   r14,r14
  407118:	jne    407126 <UnityFail@@Base+0x126>
  40711a:	lea    rax,[rip+0xaf07]        # 412028 <__bss_start@@Base+0xed8>
  407121:	jmp    407220 <UnityFail@@Base+0x220>
  407126:	inc    QWORD PTR [rip+0xaef3]        # 412020 <__bss_start@@Base+0xed0>
  40712d:	vmovdqa xmm0,XMMWORD PTR [rip+0xa28b]        # 4113c0 <__bss_start@@Base+0x270>
  407135:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5273]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  40713d:	vmovdqa XMMWORD PTR [rip+0xa27b],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  407145:	mov    rsi,QWORD PTR [r12]
  407149:	mov    edi,0x3a
  40714e:	call   403130 <putc@plt>
  407153:	cmp    QWORD PTR [r15+0x10],0x0
  407158:	jne    407163 <UnityFail@@Base+0x163>
  40715a:	lea    rax,[rip+0xaed7]        # 412038 <__bss_start@@Base+0xee8>
  407161:	jmp    4071c8 <UnityFail@@Base+0x1c8>
  407163:	inc    QWORD PTR [rip+0xaec6]        # 412030 <__bss_start@@Base+0xee0>
  40716a:	lea    rdi,[rip+0x5484]        # 40c5f5 <UnityStrDetail1Name@@Base>
  407171:	call   4049c0 <UnityPrint@@Base>
  407176:	mov    rdi,QWORD PTR [r15+0x10]
  40717a:	call   4049c0 <UnityPrint@@Base>
  40717f:	cmp    QWORD PTR [r15+0x18],0x0
  407184:	jne    40718f <UnityFail@@Base+0x18f>
  407186:	lea    rax,[rip+0xaebb]        # 412048 <__bss_start@@Base+0xef8>
  40718d:	jmp    4071b2 <UnityFail@@Base+0x1b2>
  40718f:	inc    QWORD PTR [rip+0xaeaa]        # 412040 <__bss_start@@Base+0xef0>
  407196:	lea    rdi,[rip+0x5462]        # 40c5ff <UnityStrDetail2Name@@Base>
  40719d:	call   4049c0 <UnityPrint@@Base>
  4071a2:	mov    rdi,QWORD PTR [r15+0x18]
  4071a6:	call   4049c0 <UnityPrint@@Base>
  4071ab:	lea    rax,[rip+0xae9e]        # 412050 <__bss_start@@Base+0xf00>
  4071b2:	inc    QWORD PTR [rax]
  4071b5:	lea    rdi,[rip+0x524d]        # 40c409 <UnityStrSpacer@@Base>
  4071bc:	call   4049c0 <UnityPrint@@Base>
  4071c1:	lea    rax,[rip+0xae90]        # 412058 <__bss_start@@Base+0xf08>
  4071c8:	inc    QWORD PTR [rax]
  4071cb:	cmp    BYTE PTR [r14],0x20
  4071cf:	jne    4071da <UnityFail@@Base+0x1da>
  4071d1:	lea    rax,[rip+0xae90]        # 412068 <__bss_start@@Base+0xf18>
  4071d8:	jmp    40720e <UnityFail@@Base+0x20e>
  4071da:	inc    QWORD PTR [rip+0xae7f]        # 412060 <__bss_start@@Base+0xf10>
  4071e1:	vmovdqa xmm0,XMMWORD PTR [rip+0xa1d7]        # 4113c0 <__bss_start@@Base+0x270>
  4071e9:	vpcmpeqd xmm1,xmm1,xmm1
  4071ed:	vpsubq xmm0,xmm0,xmm1
  4071f1:	vmovdqa XMMWORD PTR [rip+0xa1c7],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4071f9:	mov    rsi,QWORD PTR [r12]
  4071fd:	mov    edi,0x20
  407202:	call   403130 <putc@plt>
  407207:	lea    rax,[rip+0xae62]        # 412070 <__bss_start@@Base+0xf20>
  40720e:	inc    QWORD PTR [rax]
  407211:	mov    rdi,r14
  407214:	call   4049c0 <UnityPrint@@Base>
  407219:	lea    rax,[rip+0xae58]        # 412078 <__bss_start@@Base+0xf28>
  407220:	inc    QWORD PTR [rax]
  407223:	mov    QWORD PTR [r15+0x40],0x1
  40722b:	add    r15,0x50
  40722f:	mov    rdi,r15
  407232:	mov    esi,0x1
  407237:	call   403200 <longjmp@plt>
  40723c:	nop    DWORD PTR [rax+0x0]

0000000000407240 <UnityIgnore@@Base>:
  407240:	push   r15
  407242:	push   r14
  407244:	push   r12
  407246:	push   rbx
  407247:	push   rax
  407248:	inc    QWORD PTR [rip+0xae31]        # 412080 <__bss_start@@Base+0xf30>
  40724f:	lea    rbx,[rip+0xb5ba]        # 412810 <Unity@@Base>
  407256:	mov    rax,QWORD PTR [rbx+0x48]
  40725a:	or     rax,QWORD PTR [rbx+0x40]
  40725e:	je     40727a <UnityIgnore@@Base+0x3a>
  407260:	inc    QWORD PTR [rip+0xae21]        # 412088 <__bss_start@@Base+0xf38>
  407267:	inc    QWORD PTR [rip+0xae2a]        # 412098 <__bss_start@@Base+0xf48>
  40726e:	add    rsp,0x8
  407272:	pop    rbx
  407273:	pop    r12
  407275:	pop    r14
  407277:	pop    r15
  407279:	ret    
  40727a:	mov    r15,rsi
  40727d:	mov    r14,rdi
  407280:	inc    QWORD PTR [rip+0xae09]        # 412090 <__bss_start@@Base+0xf40>
  407287:	mov    rdi,QWORD PTR [rbx]
  40728a:	vmovdqa xmm0,XMMWORD PTR [rip+0xa44e]        # 4116e0 <__bss_start@@Base+0x590>
  407292:	vpcmpeqd xmm1,xmm1,xmm1
  407296:	vpsubq xmm0,xmm0,xmm1
  40729a:	vmovdqa XMMWORD PTR [rip+0xa43e],xmm0        # 4116e0 <__bss_start@@Base+0x590>
  4072a2:	call   4049c0 <UnityPrint@@Base>
  4072a7:	vmovdqa xmm0,XMMWORD PTR [rip+0xa111]        # 4113c0 <__bss_start@@Base+0x270>
  4072af:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x50f9]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4072b7:	vmovdqa XMMWORD PTR [rip+0xa101],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4072bf:	mov    r12,QWORD PTR [rip+0x9d1a]        # 410fe0 <stdout@GLIBC_2.2.5>
  4072c6:	mov    rsi,QWORD PTR [r12]
  4072ca:	mov    edi,0x3a
  4072cf:	call   403130 <putc@plt>
  4072d4:	mov    rdi,r15
  4072d7:	call   404f50 <UnityPrintNumber@@Base>
  4072dc:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0dc]        # 4113c0 <__bss_start@@Base+0x270>
  4072e4:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x50c4]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4072ec:	vmovdqa XMMWORD PTR [rip+0xa0cc],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4072f4:	mov    rsi,QWORD PTR [r12]
  4072f8:	mov    edi,0x3a
  4072fd:	call   403130 <putc@plt>
  407302:	mov    rdi,QWORD PTR [rbx+0x8]
  407306:	call   4049c0 <UnityPrint@@Base>
  40730b:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0ad]        # 4113c0 <__bss_start@@Base+0x270>
  407313:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5095]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  40731b:	vmovdqa XMMWORD PTR [rip+0xa09d],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  407323:	mov    rsi,QWORD PTR [r12]
  407327:	mov    edi,0x3a
  40732c:	call   403130 <putc@plt>
  407331:	lea    rdi,[rip+0x50c5]        # 40c3fd <UnityStrIgnore@@Base>
  407338:	call   4049c0 <UnityPrint@@Base>
  40733d:	test   r14,r14
  407340:	jne    40734b <UnityIgnore@@Base+0x10b>
  407342:	lea    rax,[rip+0xad5f]        # 4120a8 <__bss_start@@Base+0xf58>
  407349:	jmp    4073ad <UnityIgnore@@Base+0x16d>
  40734b:	inc    QWORD PTR [rip+0xad4e]        # 4120a0 <__bss_start@@Base+0xf50>
  407352:	vmovdqa xmm0,XMMWORD PTR [rip+0xa066]        # 4113c0 <__bss_start@@Base+0x270>
  40735a:	vpcmpeqd xmm1,xmm1,xmm1
  40735e:	vpsubq xmm0,xmm0,xmm1
  407362:	vmovdqa XMMWORD PTR [rip+0xa056],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40736a:	mov    rsi,QWORD PTR [r12]
  40736e:	mov    edi,0x3a
  407373:	call   403130 <putc@plt>
  407378:	vmovdqa xmm0,XMMWORD PTR [rip+0xa040]        # 4113c0 <__bss_start@@Base+0x270>
  407380:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5028]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  407388:	vmovdqa XMMWORD PTR [rip+0xa030],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  407390:	mov    rsi,QWORD PTR [r12]
  407394:	mov    edi,0x20
  407399:	call   403130 <putc@plt>
  40739e:	mov    rdi,r14
  4073a1:	call   4049c0 <UnityPrint@@Base>
  4073a6:	lea    rax,[rip+0xad03]        # 4120b0 <__bss_start@@Base+0xf60>
  4073ad:	inc    QWORD PTR [rax]
  4073b0:	mov    QWORD PTR [rbx+0x48],0x1
  4073b8:	add    rbx,0x50
  4073bc:	mov    rdi,rbx
  4073bf:	mov    esi,0x1
  4073c4:	call   403200 <longjmp@plt>
  4073c9:	nop    DWORD PTR [rax+0x0]

00000000004073d0 <setUp@@Base>:
  4073d0:	vmovdqa xmm0,XMMWORD PTR [rip+0xace8]        # 4120c0 <__bss_start@@Base+0xf70>
  4073d8:	vpcmpeqd xmm1,xmm1,xmm1
  4073dc:	vpsubq xmm0,xmm0,xmm1
  4073e0:	vmovdqa XMMWORD PTR [rip+0xacd8],xmm0        # 4120c0 <__bss_start@@Base+0xf70>
  4073e8:	ret    
  4073e9:	nop    DWORD PTR [rax+0x0]

00000000004073f0 <tearDown@@Base>:
  4073f0:	vmovdqa xmm0,XMMWORD PTR [rip+0xacd8]        # 4120d0 <__bss_start@@Base+0xf80>
  4073f8:	vpcmpeqd xmm1,xmm1,xmm1
  4073fc:	vpsubq xmm0,xmm0,xmm1
  407400:	vmovdqa XMMWORD PTR [rip+0xacc8],xmm0        # 4120d0 <__bss_start@@Base+0xf80>
  407408:	ret    
  407409:	nop    DWORD PTR [rax+0x0]

0000000000407410 <UnityDefaultTestRun@@Base>:
  407410:	push   r15
  407412:	push   r14
  407414:	push   rbx
  407415:	inc    QWORD PTR [rip+0xacc4]        # 4120e0 <__bss_start@@Base+0xf90>
  40741c:	mov    r14,rdi
  40741f:	lea    r15,[rip+0xb3ea]        # 412810 <Unity@@Base>
  407426:	mov    QWORD PTR [r15+0x8],rsi
  40742a:	movsxd rax,edx
  40742d:	mov    QWORD PTR [r15+0x20],rax
  407431:	inc    QWORD PTR [r15+0x28]
  407435:	vxorps xmm0,xmm0,xmm0
  407439:	vmovups XMMWORD PTR [r15+0x10],xmm0
  40743f:	lea    rbx,[r15+0x50]
  407443:	mov    rdi,rbx
  407446:	call   403120 <_setjmp@plt>
  40744b:	test   eax,eax
  40744d:	je     407458 <UnityDefaultTestRun@@Base+0x48>
  40744f:	lea    rax,[rip+0xac9a]        # 4120f0 <__bss_start@@Base+0xfa0>
  407456:	jmp    40746e <UnityDefaultTestRun@@Base+0x5e>
  407458:	inc    QWORD PTR [rip+0xac89]        # 4120e8 <__bss_start@@Base+0xf98>
  40745f:	call   4073d0 <setUp@@Base>
  407464:	call   r14
  407467:	lea    rax,[rip+0xac8a]        # 4120f8 <__bss_start@@Base+0xfa8>
  40746e:	inc    QWORD PTR [rax]
  407471:	mov    rdi,rbx
  407474:	call   403120 <_setjmp@plt>
  407479:	lea    rcx,[rip+0xac80]        # 412100 <__bss_start@@Base+0xfb0>
  407480:	test   eax,eax
  407482:	jne    40749e <UnityDefaultTestRun@@Base+0x8e>
  407484:	cmp    QWORD PTR [r15+0x48],0x0
  407489:	jne    40749e <UnityDefaultTestRun@@Base+0x8e>
  40748b:	inc    QWORD PTR [rip+0xac76]        # 412108 <__bss_start@@Base+0xfb8>
  407492:	call   4073f0 <tearDown@@Base>
  407497:	lea    rcx,[rip+0xac72]        # 412110 <__bss_start@@Base+0xfc0>
  40749e:	inc    QWORD PTR [rcx]
  4074a1:	inc    QWORD PTR [rip+0xac70]        # 412118 <__bss_start@@Base+0xfc8>
  4074a8:	call   4054a0 <UnityConcludeTest@@Base>
  4074ad:	pop    rbx
  4074ae:	pop    r14
  4074b0:	pop    r15
  4074b2:	ret    
  4074b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074bd:	nop    DWORD PTR [rax]

00000000004074c0 <UnityBegin@@Base>:
  4074c0:	vmovdqa xmm0,XMMWORD PTR [rip+0xac58]        # 412120 <__bss_start@@Base+0xfd0>
  4074c8:	vpcmpeqd xmm1,xmm1,xmm1
  4074cc:	vpsubq xmm0,xmm0,xmm1
  4074d0:	vmovdqa XMMWORD PTR [rip+0xac48],xmm0        # 412120 <__bss_start@@Base+0xfd0>
  4074d8:	lea    rax,[rip+0xb331]        # 412810 <Unity@@Base>
  4074df:	mov    QWORD PTR [rax],rdi
  4074e2:	vpxor  xmm0,xmm0,xmm0
  4074e6:	vmovdqu YMMWORD PTR [rax+0x8],ymm0
  4074eb:	vmovdqu YMMWORD PTR [rax+0x28],ymm0
  4074f0:	mov    QWORD PTR [rax+0x48],0x0
  4074f8:	vzeroupper 
  4074fb:	ret    
  4074fc:	nop    DWORD PTR [rax+0x0]

0000000000407500 <UnityEnd@@Base>:
  407500:	push   r15
  407502:	push   r14
  407504:	push   rbx
  407505:	inc    QWORD PTR [rip+0xac24]        # 412130 <__bss_start@@Base+0xfe0>
  40750c:	vmovdqa xmm0,XMMWORD PTR [rip+0x9eac]        # 4113c0 <__bss_start@@Base+0x270>
  407514:	vpcmpeqd xmm1,xmm1,xmm1
  407518:	vpsubq xmm0,xmm0,xmm1
  40751c:	vmovdqa XMMWORD PTR [rip+0x9e9c],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  407524:	mov    r14,QWORD PTR [rip+0x9ab5]        # 410fe0 <stdout@GLIBC_2.2.5>
  40752b:	mov    rsi,QWORD PTR [r14]
  40752e:	mov    edi,0xa
  407533:	call   403130 <putc@plt>
  407538:	lea    rdi,[rip+0x5081]        # 40c5c0 <UnityStrBreaker@@Base>
  40753f:	call   4049c0 <UnityPrint@@Base>
  407544:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e74]        # 4113c0 <__bss_start@@Base+0x270>
  40754c:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x4e5c]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  407554:	vmovdqa XMMWORD PTR [rip+0x9e64],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  40755c:	mov    rsi,QWORD PTR [r14]
  40755f:	mov    edi,0xa
  407564:	call   403130 <putc@plt>
  407569:	lea    r15,[rip+0xb2a0]        # 412810 <Unity@@Base>
  407570:	mov    rdi,QWORD PTR [r15+0x28]
  407574:	call   404f50 <UnityPrintNumber@@Base>
  407579:	lea    rdi,[rip+0x5058]        # 40c5d8 <UnityStrResultsTests@@Base>
  407580:	call   4049c0 <UnityPrint@@Base>
  407585:	mov    rdi,QWORD PTR [r15+0x30]
  407589:	call   404f50 <UnityPrintNumber@@Base>
  40758e:	lea    rdi,[rip+0x504b]        # 40c5e0 <UnityStrResultsFailures@@Base>
  407595:	call   4049c0 <UnityPrint@@Base>
  40759a:	mov    rdi,QWORD PTR [r15+0x38]
  40759e:	call   404f50 <UnityPrintNumber@@Base>
  4075a3:	lea    rdi,[rip+0x5041]        # 40c5eb <UnityStrResultsIgnored@@Base>
  4075aa:	call   4049c0 <UnityPrint@@Base>
  4075af:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e09]        # 4113c0 <__bss_start@@Base+0x270>
  4075b7:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x4df1]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4075bf:	vmovdqa XMMWORD PTR [rip+0x9df9],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  4075c7:	mov    rsi,QWORD PTR [r14]
  4075ca:	mov    edi,0xa
  4075cf:	call   403130 <putc@plt>
  4075d4:	cmp    QWORD PTR [r15+0x30],0x0
  4075d9:	je     407600 <UnityEnd@@Base+0x100>
  4075db:	inc    QWORD PTR [rip+0xab5e]        # 412140 <__bss_start@@Base+0xff0>
  4075e2:	lea    rbx,[rip+0xab67]        # 412150 <__bss_start@@Base+0x1000>
  4075e9:	lea    rdi,[rip+0x4e08]        # 40c3f8 <UnityStrFail@@Base>
  4075f0:	lea    rax,[rip+0xa081]        # 411678 <__bss_start@@Base+0x528>
  4075f7:	lea    rcx,[rip+0xa072]        # 411670 <__bss_start@@Base+0x520>
  4075fe:	jmp    407623 <UnityEnd@@Base+0x123>
  407600:	inc    QWORD PTR [rip+0xab31]        # 412138 <__bss_start@@Base+0xfe8>
  407607:	lea    rbx,[rip+0xab3a]        # 412148 <__bss_start@@Base+0xff8>
  40760e:	lea    rdi,[rip+0x4ddb]        # 40c3f0 <UnityStrOk@@Base>
  407615:	lea    rax,[rip+0xa06c]        # 411688 <__bss_start@@Base+0x538>
  40761c:	lea    rcx,[rip+0xa05d]        # 411680 <__bss_start@@Base+0x530>
  407623:	inc    QWORD PTR [rcx]
  407626:	inc    QWORD PTR [rax]
  407629:	call   4049c0 <UnityPrint@@Base>
  40762e:	inc    QWORD PTR [rbx]
  407631:	inc    QWORD PTR [rip+0xab20]        # 412158 <__bss_start@@Base+0x1008>
  407638:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d80]        # 4113c0 <__bss_start@@Base+0x270>
  407640:	vpcmpeqd xmm1,xmm1,xmm1
  407644:	vpsubq xmm0,xmm0,xmm1
  407648:	vmovdqa XMMWORD PTR [rip+0x9d70],xmm0        # 4113c0 <__bss_start@@Base+0x270>
  407650:	mov    rsi,QWORD PTR [r14]
  407653:	mov    edi,0xa
  407658:	call   403130 <putc@plt>
  40765d:	mov    eax,DWORD PTR [r15+0x30]
  407661:	pop    rbx
  407662:	pop    r14
  407664:	pop    r15
  407666:	ret    
  407667:	nop    WORD PTR [rax+rax*1+0x0]
  407670:	push   r15
  407672:	push   r14
  407674:	push   rbx
  407675:	lea    rdi,[rip+0x4fd4]        # 40c650 <UnitySizeMask@@Base+0x40>
  40767c:	lea    rsi,[rip+0x4b22]        # 40c1a5 <_IO_stdin_used@@Base+0x1a5>
  407683:	mov    edx,0x5876e11c
  407688:	call   409240 <next@@Base+0xfe0>
  40768d:	xor    ebx,ebx
  40768f:	lea    r14,[rip+0x8a4a]        # 4100e0 <UnitySizeMask@@Base+0x3ad0>
  407696:	lea    r15,[rip+0x8ea3]        # 410540 <UnitySizeMask@@Base+0x3f30>
  40769d:	nop    DWORD PTR [rax]
  4076a0:	mov    edi,DWORD PTR [r14+rbx*2]
  4076a4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  4076a9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  4076ae:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  4076b3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  4076b8:	call   409690 <next@@Base+0x1430>
  4076bd:	mov    edi,DWORD PTR [rbx+r15*1]
  4076c1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  4076c6:	call   409ab0 <next@@Base+0x1850>
  4076cb:	add    rbx,0x10
  4076cf:	cmp    rbx,0x230
  4076d6:	jne    4076a0 <UnityEnd@@Base+0x1a0>
  4076d8:	call   409ec0 <next@@Base+0x1c60>
  4076dd:	pop    rbx
  4076de:	pop    r14
  4076e0:	pop    r15
  4076e2:	jmp    40a660 <next@@Base+0x2400>
  4076e7:	nop    WORD PTR [rax+rax*1+0x0]
  4076f0:	push   rax
  4076f1:	call   407670 <UnityEnd@@Base+0x170>
  4076f6:	vxorps xmm0,xmm0,xmm0
  4076fa:	vmovups YMMWORD PTR [rip+0x9c96],ymm0        # 411398 <__bss_start@@Base+0x248>
  407702:	vmovups YMMWORD PTR [rip+0x9c76],ymm0        # 411380 <__bss_start@@Base+0x230>
  40770a:	vmovups YMMWORD PTR [rip+0x9c4e],ymm0        # 411360 <__bss_start@@Base+0x210>
  407712:	vmovups YMMWORD PTR [rip+0x9c26],ymm0        # 411340 <__bss_start@@Base+0x1f0>
  40771a:	vmovups YMMWORD PTR [rip+0x9bfe],ymm0        # 411320 <__bss_start@@Base+0x1d0>
  407722:	vxorps xmm1,xmm1,xmm1
  407726:	vmovaps XMMWORD PTR [rip+0x9c92],xmm1        # 4113c0 <__bss_start@@Base+0x270>
  40772e:	vmovups YMMWORD PTR [rip+0x9c9a],ymm0        # 4113d0 <__bss_start@@Base+0x280>
  407736:	vmovups YMMWORD PTR [rip+0x9cb2],ymm0        # 4113f0 <__bss_start@@Base+0x2a0>
  40773e:	vmovups YMMWORD PTR [rip+0x9cba],ymm0        # 411400 <__bss_start@@Base+0x2b0>
  407746:	vmovups YMMWORD PTR [rip+0x9cd2],ymm0        # 411420 <__bss_start@@Base+0x2d0>
  40774e:	vmovups YMMWORD PTR [rip+0x9cea],ymm0        # 411440 <__bss_start@@Base+0x2f0>
  407756:	vmovups YMMWORD PTR [rip+0x9d02],ymm0        # 411460 <__bss_start@@Base+0x310>
  40775e:	vmovups YMMWORD PTR [rip+0x9d1a],ymm0        # 411480 <__bss_start@@Base+0x330>
  407766:	vmovups YMMWORD PTR [rip+0x9d32],ymm0        # 4114a0 <__bss_start@@Base+0x350>
  40776e:	vmovups YMMWORD PTR [rip+0x9d5a],ymm0        # 4114d0 <__bss_start@@Base+0x380>
  407776:	mov    QWORD PTR [rip+0x9d3f],0x0        # 4114c0 <__bss_start@@Base+0x370>
  407781:	vmovups YMMWORD PTR [rip+0x9d67],ymm0        # 4114f0 <__bss_start@@Base+0x3a0>
  407789:	mov    QWORD PTR [rip+0x9d7c],0x0        # 411510 <__bss_start@@Base+0x3c0>
  407794:	vmovups YMMWORD PTR [rip+0x9ddc],ymm0        # 411578 <__bss_start@@Base+0x428>
  40779c:	vmovups YMMWORD PTR [rip+0x9dbc],ymm0        # 411560 <__bss_start@@Base+0x410>
  4077a4:	vmovups YMMWORD PTR [rip+0x9d94],ymm0        # 411540 <__bss_start@@Base+0x3f0>
  4077ac:	vmovups YMMWORD PTR [rip+0x9d6c],ymm0        # 411520 <__bss_start@@Base+0x3d0>
  4077b4:	vmovups YMMWORD PTR [rip+0x9e1c],ymm0        # 4115d8 <__bss_start@@Base+0x488>
  4077bc:	vmovups YMMWORD PTR [rip+0x9dfc],ymm0        # 4115c0 <__bss_start@@Base+0x470>
  4077c4:	vmovups YMMWORD PTR [rip+0x9dd4],ymm0        # 4115a0 <__bss_start@@Base+0x450>
  4077cc:	vmovups YMMWORD PTR [rip+0x9e6c],ymm0        # 411640 <__bss_start@@Base+0x4f0>
  4077d4:	vmovups YMMWORD PTR [rip+0x9e44],ymm0        # 411620 <__bss_start@@Base+0x4d0>
  4077dc:	vmovups YMMWORD PTR [rip+0x9e1c],ymm0        # 411600 <__bss_start@@Base+0x4b0>
  4077e4:	vmovaps XMMWORD PTR [rip+0x9e84],xmm1        # 411670 <__bss_start@@Base+0x520>
  4077ec:	vmovaps XMMWORD PTR [rip+0x9e8c],xmm1        # 411680 <__bss_start@@Base+0x530>
  4077f4:	vmovups YMMWORD PTR [rip+0x9eb4],ymm0        # 4116b0 <__bss_start@@Base+0x560>
  4077fc:	mov    QWORD PTR [rip+0x9e59],0x0        # 411660 <__bss_start@@Base+0x510>
  407807:	vmovups YMMWORD PTR [rip+0x9e81],ymm0        # 411690 <__bss_start@@Base+0x540>
  40780f:	mov    QWORD PTR [rip+0x9eb6],0x0        # 4116d0 <__bss_start@@Base+0x580>
  40781a:	vmovaps XMMWORD PTR [rip+0x9ebe],xmm1        # 4116e0 <__bss_start@@Base+0x590>
  407822:	vmovups YMMWORD PTR [rip+0x9ec6],ymm0        # 4116f0 <__bss_start@@Base+0x5a0>
  40782a:	vmovups YMMWORD PTR [rip+0x9ece],ymm0        # 411700 <__bss_start@@Base+0x5b0>
  407832:	vmovaps XMMWORD PTR [rip+0x9ee6],xmm1        # 411720 <__bss_start@@Base+0x5d0>
  40783a:	vmovups YMMWORD PTR [rip+0x9f26],ymm0        # 411768 <__bss_start@@Base+0x618>
  407842:	vmovups YMMWORD PTR [rip+0x9f06],ymm0        # 411750 <__bss_start@@Base+0x600>
  40784a:	vmovups YMMWORD PTR [rip+0x9ede],ymm0        # 411730 <__bss_start@@Base+0x5e0>
  407852:	vmovups YMMWORD PTR [rip+0x9f46],ymm0        # 4117a0 <__bss_start@@Base+0x650>
  40785a:	vmovups YMMWORD PTR [rip+0x9f2e],ymm0        # 411790 <__bss_start@@Base+0x640>
  407862:	vmovups YMMWORD PTR [rip+0xa096],ymm0        # 411900 <__bss_start@@Base+0x7b0>
  40786a:	vmovups YMMWORD PTR [rip+0xa06e],ymm0        # 4118e0 <__bss_start@@Base+0x790>
  407872:	vmovups YMMWORD PTR [rip+0xa046],ymm0        # 4118c0 <__bss_start@@Base+0x770>
  40787a:	vmovups YMMWORD PTR [rip+0xa01e],ymm0        # 4118a0 <__bss_start@@Base+0x750>
  407882:	vmovups YMMWORD PTR [rip+0x9ff6],ymm0        # 411880 <__bss_start@@Base+0x730>
  40788a:	vmovups YMMWORD PTR [rip+0x9fce],ymm0        # 411860 <__bss_start@@Base+0x710>
  407892:	vmovups YMMWORD PTR [rip+0x9fa6],ymm0        # 411840 <__bss_start@@Base+0x6f0>
  40789a:	vmovups YMMWORD PTR [rip+0x9f7e],ymm0        # 411820 <__bss_start@@Base+0x6d0>
  4078a2:	vmovups YMMWORD PTR [rip+0x9f56],ymm0        # 411800 <__bss_start@@Base+0x6b0>
  4078aa:	vmovups YMMWORD PTR [rip+0x9f2e],ymm0        # 4117e0 <__bss_start@@Base+0x690>
  4078b2:	vmovups YMMWORD PTR [rip+0x9f06],ymm0        # 4117c0 <__bss_start@@Base+0x670>
  4078ba:	vmovups YMMWORD PTR [rip+0xa08e],ymm0        # 411950 <__bss_start@@Base+0x800>
  4078c2:	vmovups YMMWORD PTR [rip+0xa076],ymm0        # 411940 <__bss_start@@Base+0x7f0>
  4078ca:	vmovups YMMWORD PTR [rip+0xa04e],ymm0        # 411920 <__bss_start@@Base+0x7d0>
  4078d2:	vmovups YMMWORD PTR [rip+0xa136],ymm0        # 411a10 <__bss_start@@Base+0x8c0>
  4078da:	vmovups YMMWORD PTR [rip+0xa10e],ymm0        # 4119f0 <__bss_start@@Base+0x8a0>
  4078e2:	vmovups YMMWORD PTR [rip+0xa0e6],ymm0        # 4119d0 <__bss_start@@Base+0x880>
  4078ea:	vmovups YMMWORD PTR [rip+0xa0be],ymm0        # 4119b0 <__bss_start@@Base+0x860>
  4078f2:	vmovups YMMWORD PTR [rip+0xa096],ymm0        # 411990 <__bss_start@@Base+0x840>
  4078fa:	vmovups YMMWORD PTR [rip+0xa06e],ymm0        # 411970 <__bss_start@@Base+0x820>
  407902:	vmovups YMMWORD PTR [rip+0xa186],ymm0        # 411a90 <__bss_start@@Base+0x940>
  40790a:	vmovups YMMWORD PTR [rip+0xa15e],ymm0        # 411a70 <__bss_start@@Base+0x920>
  407912:	vmovups YMMWORD PTR [rip+0xa136],ymm0        # 411a50 <__bss_start@@Base+0x900>
  40791a:	vmovups YMMWORD PTR [rip+0xa10e],ymm0        # 411a30 <__bss_start@@Base+0x8e0>
  407922:	vmovups YMMWORD PTR [rip+0xa25e],ymm0        # 411b88 <__bss_start@@Base+0xa38>
  40792a:	vmovups YMMWORD PTR [rip+0xa23e],ymm0        # 411b70 <__bss_start@@Base+0xa20>
  407932:	vmovups YMMWORD PTR [rip+0xa216],ymm0        # 411b50 <__bss_start@@Base+0xa00>
  40793a:	vmovups YMMWORD PTR [rip+0xa1ee],ymm0        # 411b30 <__bss_start@@Base+0x9e0>
  407942:	vmovups YMMWORD PTR [rip+0xa1c6],ymm0        # 411b10 <__bss_start@@Base+0x9c0>
  40794a:	vmovups YMMWORD PTR [rip+0xa19e],ymm0        # 411af0 <__bss_start@@Base+0x9a0>
  407952:	vmovups YMMWORD PTR [rip+0xa176],ymm0        # 411ad0 <__bss_start@@Base+0x980>
  40795a:	vmovups YMMWORD PTR [rip+0xa14e],ymm0        # 411ab0 <__bss_start@@Base+0x960>
  407962:	vmovups YMMWORD PTR [rip+0xa2a6],ymm0        # 411c10 <__bss_start@@Base+0xac0>
  40796a:	vmovups YMMWORD PTR [rip+0xa27e],ymm0        # 411bf0 <__bss_start@@Base+0xaa0>
  407972:	vmovups YMMWORD PTR [rip+0xa256],ymm0        # 411bd0 <__bss_start@@Base+0xa80>
  40797a:	vmovups YMMWORD PTR [rip+0xa22e],ymm0        # 411bb0 <__bss_start@@Base+0xa60>
  407982:	vmovups YMMWORD PTR [rip+0xa336],ymm0        # 411cc0 <__bss_start@@Base+0xb70>
  40798a:	vmovups YMMWORD PTR [rip+0xa31e],ymm0        # 411cb0 <__bss_start@@Base+0xb60>
  407992:	vmovups YMMWORD PTR [rip+0xa2f6],ymm0        # 411c90 <__bss_start@@Base+0xb40>
  40799a:	vmovups YMMWORD PTR [rip+0xa2ce],ymm0        # 411c70 <__bss_start@@Base+0xb20>
  4079a2:	vmovups YMMWORD PTR [rip+0xa2a6],ymm0        # 411c50 <__bss_start@@Base+0xb00>
  4079aa:	vmovups YMMWORD PTR [rip+0xa27e],ymm0        # 411c30 <__bss_start@@Base+0xae0>
  4079b2:	vmovups YMMWORD PTR [rip+0xa356],ymm0        # 411d10 <__bss_start@@Base+0xbc0>
  4079ba:	vmovups YMMWORD PTR [rip+0xa33e],ymm0        # 411d00 <__bss_start@@Base+0xbb0>
  4079c2:	vmovups YMMWORD PTR [rip+0xa316],ymm0        # 411ce0 <__bss_start@@Base+0xb90>
  4079ca:	vmovups YMMWORD PTR [rip+0xa3fe],ymm0        # 411dd0 <__bss_start@@Base+0xc80>
  4079d2:	vmovups YMMWORD PTR [rip+0xa3d6],ymm0        # 411db0 <__bss_start@@Base+0xc60>
  4079da:	vmovups YMMWORD PTR [rip+0xa3ae],ymm0        # 411d90 <__bss_start@@Base+0xc40>
  4079e2:	vmovups YMMWORD PTR [rip+0xa386],ymm0        # 411d70 <__bss_start@@Base+0xc20>
  4079ea:	vmovups YMMWORD PTR [rip+0xa35e],ymm0        # 411d50 <__bss_start@@Base+0xc00>
  4079f2:	vmovups YMMWORD PTR [rip+0xa336],ymm0        # 411d30 <__bss_start@@Base+0xbe0>
  4079fa:	vmovups YMMWORD PTR [rip+0xa41e],ymm0        # 411e20 <__bss_start@@Base+0xcd0>
  407a02:	vmovups YMMWORD PTR [rip+0xa406],ymm0        # 411e10 <__bss_start@@Base+0xcc0>
  407a0a:	vmovups YMMWORD PTR [rip+0xa3de],ymm0        # 411df0 <__bss_start@@Base+0xca0>
  407a12:	vmovups YMMWORD PTR [rip+0xa516],ymm0        # 411f30 <__bss_start@@Base+0xde0>
  407a1a:	vmovups YMMWORD PTR [rip+0xa4fe],ymm0        # 411f20 <__bss_start@@Base+0xdd0>
  407a22:	vmovups YMMWORD PTR [rip+0xa4d6],ymm0        # 411f00 <__bss_start@@Base+0xdb0>
  407a2a:	vmovups YMMWORD PTR [rip+0xa4ae],ymm0        # 411ee0 <__bss_start@@Base+0xd90>
  407a32:	vmovups YMMWORD PTR [rip+0xa486],ymm0        # 411ec0 <__bss_start@@Base+0xd70>
  407a3a:	vmovups YMMWORD PTR [rip+0xa45e],ymm0        # 411ea0 <__bss_start@@Base+0xd50>
  407a42:	vmovups YMMWORD PTR [rip+0xa436],ymm0        # 411e80 <__bss_start@@Base+0xd30>
  407a4a:	vmovups YMMWORD PTR [rip+0xa40e],ymm0        # 411e60 <__bss_start@@Base+0xd10>
  407a52:	vmovups YMMWORD PTR [rip+0xa3e6],ymm0        # 411e40 <__bss_start@@Base+0xcf0>
  407a5a:	vmovups YMMWORD PTR [rip+0xa57e],ymm0        # 411fe0 <__bss_start@@Base+0xe90>
  407a62:	vmovups YMMWORD PTR [rip+0xa566],ymm0        # 411fd0 <__bss_start@@Base+0xe80>
  407a6a:	vmovups YMMWORD PTR [rip+0xa53e],ymm0        # 411fb0 <__bss_start@@Base+0xe60>
  407a72:	vmovups YMMWORD PTR [rip+0xa516],ymm0        # 411f90 <__bss_start@@Base+0xe40>
  407a7a:	vmovups YMMWORD PTR [rip+0xa4ee],ymm0        # 411f70 <__bss_start@@Base+0xe20>
  407a82:	vmovups YMMWORD PTR [rip+0xa4c6],ymm0        # 411f50 <__bss_start@@Base+0xe00>
  407a8a:	vmovups YMMWORD PTR [rip+0xa5ce],ymm0        # 412060 <__bss_start@@Base+0xf10>
  407a92:	vmovups YMMWORD PTR [rip+0xa5a6],ymm0        # 412040 <__bss_start@@Base+0xef0>
  407a9a:	vmovups YMMWORD PTR [rip+0xa57e],ymm0        # 412020 <__bss_start@@Base+0xed0>
  407aa2:	vmovups YMMWORD PTR [rip+0xa556],ymm0        # 412000 <__bss_start@@Base+0xeb0>
  407aaa:	vmovups YMMWORD PTR [rip+0xa5e6],ymm0        # 412098 <__bss_start@@Base+0xf48>
  407ab2:	vmovups YMMWORD PTR [rip+0xa5c6],ymm0        # 412080 <__bss_start@@Base+0xf30>
  407aba:	vmovaps XMMWORD PTR [rip+0xa5fe],xmm1        # 4120c0 <__bss_start@@Base+0xf70>
  407ac2:	vmovaps XMMWORD PTR [rip+0xa606],xmm1        # 4120d0 <__bss_start@@Base+0xf80>
  407aca:	vmovups YMMWORD PTR [rip+0xa62e],ymm0        # 412100 <__bss_start@@Base+0xfb0>
  407ad2:	vmovups YMMWORD PTR [rip+0xa606],ymm0        # 4120e0 <__bss_start@@Base+0xf90>
  407ada:	vmovaps XMMWORD PTR [rip+0xa63e],xmm1        # 412120 <__bss_start@@Base+0xfd0>
  407ae2:	vmovups YMMWORD PTR [rip+0xa656],ymm0        # 412140 <__bss_start@@Base+0xff0>
  407aea:	vmovups YMMWORD PTR [rip+0xa63e],ymm0        # 412130 <__bss_start@@Base+0xfe0>
  407af2:	pop    rax
  407af3:	vzeroupper 
  407af6:	ret    
  407af7:	nop    WORD PTR [rax+rax*1+0x0]
  407b00:	lea    rdi,[rip+0xfffffffffffffb69]        # 407670 <UnityEnd@@Base+0x170>
  407b07:	lea    rsi,[rip+0xfffffffffffffbe2]        # 4076f0 <UnityEnd@@Base+0x1f0>
  407b0e:	jmp    40aa40 <__gcov_flush@@Base+0xb0>
  407b13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b1d:	nop    DWORD PTR [rax]

0000000000407b20 <init_token_int_type@@Base>:
  407b20:	vmovdqa xmm0,XMMWORD PTR [rip+0xa638]        # 412160 <__bss_start@@Base+0x1010>
  407b28:	vpcmpeqd xmm1,xmm1,xmm1
  407b2c:	vpsubq xmm0,xmm0,xmm1
  407b30:	vmovdqa XMMWORD PTR [rip+0xa628],xmm0        # 412160 <__bss_start@@Base+0x1010>
  407b38:	mov    DWORD PTR [rdi],0x0
  407b3e:	ret    
  407b3f:	nop

0000000000407b40 <init_token_int_value@@Base>:
  407b40:	vmovdqa xmm0,XMMWORD PTR [rip+0xa628]        # 412170 <__bss_start@@Base+0x1020>
  407b48:	vpcmpeqd xmm1,xmm1,xmm1
  407b4c:	vpsubq xmm0,xmm0,xmm1
  407b50:	vmovdqa XMMWORD PTR [rip+0xa618],xmm0        # 412170 <__bss_start@@Base+0x1020>
  407b58:	mov    DWORD PTR [rdi],0x1
  407b5e:	mov    DWORD PTR [rdi+0x4],esi
  407b61:	ret    
  407b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b6c:	nop    DWORD PTR [rax+0x0]

0000000000407b70 <init_token_function@@Base>:
  407b70:	vmovdqa xmm0,XMMWORD PTR [rip+0xa608]        # 412180 <__bss_start@@Base+0x1030>
  407b78:	vpcmpeqd xmm1,xmm1,xmm1
  407b7c:	vpsubq xmm0,xmm0,xmm1
  407b80:	vmovdqa XMMWORD PTR [rip+0xa5f8],xmm0        # 412180 <__bss_start@@Base+0x1030>
  407b88:	mov    DWORD PTR [rdi],0x2
  407b8e:	mov    QWORD PTR [rdi+0x8],rsi
  407b92:	ret    
  407b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b9d:	nop    DWORD PTR [rax]

0000000000407ba0 <init_token_opar@@Base>:
  407ba0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5e8]        # 412190 <__bss_start@@Base+0x1040>
  407ba8:	vpcmpeqd xmm1,xmm1,xmm1
  407bac:	vpsubq xmm0,xmm0,xmm1
  407bb0:	vmovdqa XMMWORD PTR [rip+0xa5d8],xmm0        # 412190 <__bss_start@@Base+0x1040>
  407bb8:	mov    DWORD PTR [rdi],0x3
  407bbe:	ret    
  407bbf:	nop

0000000000407bc0 <init_token_cpar@@Base>:
  407bc0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5d8]        # 4121a0 <__bss_start@@Base+0x1050>
  407bc8:	vpcmpeqd xmm1,xmm1,xmm1
  407bcc:	vpsubq xmm0,xmm0,xmm1
  407bd0:	vmovdqa XMMWORD PTR [rip+0xa5c8],xmm0        # 4121a0 <__bss_start@@Base+0x1050>
  407bd8:	mov    DWORD PTR [rdi],0x4
  407bde:	ret    
  407bdf:	nop

0000000000407be0 <init_token_obra@@Base>:
  407be0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5c8]        # 4121b0 <__bss_start@@Base+0x1060>
  407be8:	vpcmpeqd xmm1,xmm1,xmm1
  407bec:	vpsubq xmm0,xmm0,xmm1
  407bf0:	vmovdqa XMMWORD PTR [rip+0xa5b8],xmm0        # 4121b0 <__bss_start@@Base+0x1060>
  407bf8:	mov    DWORD PTR [rdi],0x5
  407bfe:	ret    
  407bff:	nop

0000000000407c00 <init_token_cbra@@Base>:
  407c00:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5b8]        # 4121c0 <__bss_start@@Base+0x1070>
  407c08:	vpcmpeqd xmm1,xmm1,xmm1
  407c0c:	vpsubq xmm0,xmm0,xmm1
  407c10:	vmovdqa XMMWORD PTR [rip+0xa5a8],xmm0        # 4121c0 <__bss_start@@Base+0x1070>
  407c18:	mov    DWORD PTR [rdi],0x6
  407c1e:	ret    
  407c1f:	nop

0000000000407c20 <init_token_return@@Base>:
  407c20:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5a8]        # 4121d0 <__bss_start@@Base+0x1080>
  407c28:	vpcmpeqd xmm1,xmm1,xmm1
  407c2c:	vpsubq xmm0,xmm0,xmm1
  407c30:	vmovdqa XMMWORD PTR [rip+0xa598],xmm0        # 4121d0 <__bss_start@@Base+0x1080>
  407c38:	mov    DWORD PTR [rdi],0x7
  407c3e:	ret    
  407c3f:	nop

0000000000407c40 <init_token_semicolon@@Base>:
  407c40:	vmovdqa xmm0,XMMWORD PTR [rip+0xa598]        # 4121e0 <__bss_start@@Base+0x1090>
  407c48:	vpcmpeqd xmm1,xmm1,xmm1
  407c4c:	vpsubq xmm0,xmm0,xmm1
  407c50:	vmovdqa XMMWORD PTR [rip+0xa588],xmm0        # 4121e0 <__bss_start@@Base+0x1090>
  407c58:	mov    DWORD PTR [rdi],0x8
  407c5e:	ret    
  407c5f:	nop

0000000000407c60 <init_token_eof@@Base>:
  407c60:	vmovdqa xmm0,XMMWORD PTR [rip+0xa588]        # 4121f0 <__bss_start@@Base+0x10a0>
  407c68:	vpcmpeqd xmm1,xmm1,xmm1
  407c6c:	vpsubq xmm0,xmm0,xmm1
  407c70:	vmovdqa XMMWORD PTR [rip+0xa578],xmm0        # 4121f0 <__bss_start@@Base+0x10a0>
  407c78:	mov    DWORD PTR [rdi],0x9
  407c7e:	ret    
  407c7f:	nop

0000000000407c80 <init_token_if@@Base>:
  407c80:	vmovdqa xmm0,XMMWORD PTR [rip+0xa578]        # 412200 <__bss_start@@Base+0x10b0>
  407c88:	vpcmpeqd xmm1,xmm1,xmm1
  407c8c:	vpsubq xmm0,xmm0,xmm1
  407c90:	vmovdqa XMMWORD PTR [rip+0xa568],xmm0        # 412200 <__bss_start@@Base+0x10b0>
  407c98:	mov    DWORD PTR [rdi],0xa
  407c9e:	ret    
  407c9f:	nop

0000000000407ca0 <init_token_else@@Base>:
  407ca0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa568]        # 412210 <__bss_start@@Base+0x10c0>
  407ca8:	vpcmpeqd xmm1,xmm1,xmm1
  407cac:	vpsubq xmm0,xmm0,xmm1
  407cb0:	vmovdqa XMMWORD PTR [rip+0xa558],xmm0        # 412210 <__bss_start@@Base+0x10c0>
  407cb8:	mov    DWORD PTR [rdi],0xb
  407cbe:	ret    
  407cbf:	nop

0000000000407cc0 <init_token_boolean_op@@Base>:
  407cc0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa558]        # 412220 <__bss_start@@Base+0x10d0>
  407cc8:	vpcmpeqd xmm1,xmm1,xmm1
  407ccc:	vpsubq xmm0,xmm0,xmm1
  407cd0:	vmovdqa XMMWORD PTR [rip+0xa548],xmm0        # 412220 <__bss_start@@Base+0x10d0>
  407cd8:	mov    DWORD PTR [rdi],0xc
  407cde:	mov    QWORD PTR [rdi+0x8],rsi
  407ce2:	ret    
  407ce3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ced:	nop    DWORD PTR [rax]

0000000000407cf0 <free_token_int_type@@Base>:
  407cf0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa538]        # 412230 <__bss_start@@Base+0x10e0>
  407cf8:	vpcmpeqd xmm1,xmm1,xmm1
  407cfc:	vpsubq xmm0,xmm0,xmm1
  407d00:	vmovdqa XMMWORD PTR [rip+0xa528],xmm0        # 412230 <__bss_start@@Base+0x10e0>
  407d08:	jmp    403040 <free@plt>
  407d0d:	nop    DWORD PTR [rax]

0000000000407d10 <free_token_int_value@@Base>:
  407d10:	vmovdqa xmm0,XMMWORD PTR [rip+0xa528]        # 412240 <__bss_start@@Base+0x10f0>
  407d18:	vpcmpeqd xmm1,xmm1,xmm1
  407d1c:	vpsubq xmm0,xmm0,xmm1
  407d20:	vmovdqa XMMWORD PTR [rip+0xa518],xmm0        # 412240 <__bss_start@@Base+0x10f0>
  407d28:	jmp    403040 <free@plt>
  407d2d:	nop    DWORD PTR [rax]

0000000000407d30 <free_token_function@@Base>:
  407d30:	vmovdqa xmm0,XMMWORD PTR [rip+0xa518]        # 412250 <__bss_start@@Base+0x1100>
  407d38:	vpcmpeqd xmm1,xmm1,xmm1
  407d3c:	vpsubq xmm0,xmm0,xmm1
  407d40:	vmovdqa XMMWORD PTR [rip+0xa508],xmm0        # 412250 <__bss_start@@Base+0x1100>
  407d48:	jmp    403040 <free@plt>
  407d4d:	nop    DWORD PTR [rax]

0000000000407d50 <free_token_opar@@Base>:
  407d50:	vmovdqa xmm0,XMMWORD PTR [rip+0xa508]        # 412260 <__bss_start@@Base+0x1110>
  407d58:	vpcmpeqd xmm1,xmm1,xmm1
  407d5c:	vpsubq xmm0,xmm0,xmm1
  407d60:	vmovdqa XMMWORD PTR [rip+0xa4f8],xmm0        # 412260 <__bss_start@@Base+0x1110>
  407d68:	jmp    403040 <free@plt>
  407d6d:	nop    DWORD PTR [rax]

0000000000407d70 <free_token_cpar@@Base>:
  407d70:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4f8]        # 412270 <__bss_start@@Base+0x1120>
  407d78:	vpcmpeqd xmm1,xmm1,xmm1
  407d7c:	vpsubq xmm0,xmm0,xmm1
  407d80:	vmovdqa XMMWORD PTR [rip+0xa4e8],xmm0        # 412270 <__bss_start@@Base+0x1120>
  407d88:	jmp    403040 <free@plt>
  407d8d:	nop    DWORD PTR [rax]

0000000000407d90 <free_token_obra@@Base>:
  407d90:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4e8]        # 412280 <__bss_start@@Base+0x1130>
  407d98:	vpcmpeqd xmm1,xmm1,xmm1
  407d9c:	vpsubq xmm0,xmm0,xmm1
  407da0:	vmovdqa XMMWORD PTR [rip+0xa4d8],xmm0        # 412280 <__bss_start@@Base+0x1130>
  407da8:	jmp    403040 <free@plt>
  407dad:	nop    DWORD PTR [rax]

0000000000407db0 <free_token_cbra@@Base>:
  407db0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4d8]        # 412290 <__bss_start@@Base+0x1140>
  407db8:	vpcmpeqd xmm1,xmm1,xmm1
  407dbc:	vpsubq xmm0,xmm0,xmm1
  407dc0:	vmovdqa XMMWORD PTR [rip+0xa4c8],xmm0        # 412290 <__bss_start@@Base+0x1140>
  407dc8:	jmp    403040 <free@plt>
  407dcd:	nop    DWORD PTR [rax]

0000000000407dd0 <free_token_return@@Base>:
  407dd0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4c8]        # 4122a0 <__bss_start@@Base+0x1150>
  407dd8:	vpcmpeqd xmm1,xmm1,xmm1
  407ddc:	vpsubq xmm0,xmm0,xmm1
  407de0:	vmovdqa XMMWORD PTR [rip+0xa4b8],xmm0        # 4122a0 <__bss_start@@Base+0x1150>
  407de8:	jmp    403040 <free@plt>
  407ded:	nop    DWORD PTR [rax]

0000000000407df0 <free_token_semicolon@@Base>:
  407df0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4b8]        # 4122b0 <__bss_start@@Base+0x1160>
  407df8:	vpcmpeqd xmm1,xmm1,xmm1
  407dfc:	vpsubq xmm0,xmm0,xmm1
  407e00:	vmovdqa XMMWORD PTR [rip+0xa4a8],xmm0        # 4122b0 <__bss_start@@Base+0x1160>
  407e08:	jmp    403040 <free@plt>
  407e0d:	nop    DWORD PTR [rax]

0000000000407e10 <free_token_eof@@Base>:
  407e10:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4a8]        # 4122c0 <__bss_start@@Base+0x1170>
  407e18:	vpcmpeqd xmm1,xmm1,xmm1
  407e1c:	vpsubq xmm0,xmm0,xmm1
  407e20:	vmovdqa XMMWORD PTR [rip+0xa498],xmm0        # 4122c0 <__bss_start@@Base+0x1170>
  407e28:	jmp    403040 <free@plt>
  407e2d:	nop    DWORD PTR [rax]

0000000000407e30 <free_token_if@@Base>:
  407e30:	vmovdqa xmm0,XMMWORD PTR [rip+0xa498]        # 4122d0 <__bss_start@@Base+0x1180>
  407e38:	vpcmpeqd xmm1,xmm1,xmm1
  407e3c:	vpsubq xmm0,xmm0,xmm1
  407e40:	vmovdqa XMMWORD PTR [rip+0xa488],xmm0        # 4122d0 <__bss_start@@Base+0x1180>
  407e48:	jmp    403040 <free@plt>
  407e4d:	nop    DWORD PTR [rax]

0000000000407e50 <free_token_else@@Base>:
  407e50:	vmovdqa xmm0,XMMWORD PTR [rip+0xa488]        # 4122e0 <__bss_start@@Base+0x1190>
  407e58:	vpcmpeqd xmm1,xmm1,xmm1
  407e5c:	vpsubq xmm0,xmm0,xmm1
  407e60:	vmovdqa XMMWORD PTR [rip+0xa478],xmm0        # 4122e0 <__bss_start@@Base+0x1190>
  407e68:	jmp    403040 <free@plt>
  407e6d:	nop    DWORD PTR [rax]

0000000000407e70 <free_token_boolean_op@@Base>:
  407e70:	push   rbx
  407e71:	mov    rbx,rdi
  407e74:	inc    QWORD PTR [rip+0xa475]        # 4122f0 <__bss_start@@Base+0x11a0>
  407e7b:	mov    rdi,QWORD PTR [rdi+0x8]
  407e7f:	test   rdi,rdi
  407e82:	je     407e99 <free_token_boolean_op@@Base+0x29>
  407e84:	inc    QWORD PTR [rip+0xa46d]        # 4122f8 <__bss_start@@Base+0x11a8>
  407e8b:	call   403040 <free@plt>
  407e90:	lea    rax,[rip+0xa471]        # 412308 <__bss_start@@Base+0x11b8>
  407e97:	jmp    407ea0 <free_token_boolean_op@@Base+0x30>
  407e99:	lea    rax,[rip+0xa460]        # 412300 <__bss_start@@Base+0x11b0>
  407ea0:	inc    QWORD PTR [rax]
  407ea3:	inc    QWORD PTR [rip+0xa466]        # 412310 <__bss_start@@Base+0x11c0>
  407eaa:	mov    rdi,rbx
  407ead:	pop    rbx
  407eae:	jmp    403040 <free@plt>
  407eb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ebd:	nop    DWORD PTR [rax]
  407ec0:	push   r15
  407ec2:	push   r14
  407ec4:	push   rbx
  407ec5:	lea    rdi,[rip+0x4aad]        # 40c979 <UnitySizeMask@@Base+0x369>
  407ecc:	lea    rsi,[rip+0x42d2]        # 40c1a5 <_IO_stdin_used@@Base+0x1a5>
  407ed3:	mov    edx,0xb7b65b46
  407ed8:	call   409240 <next@@Base+0xfe0>
  407edd:	xor    ebx,ebx
  407edf:	lea    r14,[rip+0x888a]        # 410770 <UnitySizeMask@@Base+0x4160>
  407ee6:	lea    r15,[rip+0x8bc3]        # 410ab0 <UnitySizeMask@@Base+0x44a0>
  407eed:	nop    DWORD PTR [rax]
  407ef0:	mov    edi,DWORD PTR [r14+rbx*2]
  407ef4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  407ef9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  407efe:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  407f03:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  407f08:	call   409690 <next@@Base+0x1430>
  407f0d:	mov    edi,DWORD PTR [rbx+r15*1]
  407f11:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  407f16:	call   409ab0 <next@@Base+0x1850>
  407f1b:	add    rbx,0x10
  407f1f:	cmp    rbx,0x1a0
  407f26:	jne    407ef0 <free_token_boolean_op@@Base+0x80>
  407f28:	call   409ec0 <next@@Base+0x1c60>
  407f2d:	pop    rbx
  407f2e:	pop    r14
  407f30:	pop    r15
  407f32:	jmp    40a660 <next@@Base+0x2400>
  407f37:	nop    WORD PTR [rax+rax*1+0x0]
  407f40:	push   rax
  407f41:	call   407ec0 <free_token_boolean_op@@Base+0x50>
  407f46:	vxorps xmm0,xmm0,xmm0
  407f4a:	vmovaps XMMWORD PTR [rip+0xa20e],xmm0        # 412160 <__bss_start@@Base+0x1010>
  407f52:	vmovaps XMMWORD PTR [rip+0xa216],xmm0        # 412170 <__bss_start@@Base+0x1020>
  407f5a:	vmovaps XMMWORD PTR [rip+0xa21e],xmm0        # 412180 <__bss_start@@Base+0x1030>
  407f62:	vmovaps XMMWORD PTR [rip+0xa226],xmm0        # 412190 <__bss_start@@Base+0x1040>
  407f6a:	vmovaps XMMWORD PTR [rip+0xa22e],xmm0        # 4121a0 <__bss_start@@Base+0x1050>
  407f72:	vmovaps XMMWORD PTR [rip+0xa236],xmm0        # 4121b0 <__bss_start@@Base+0x1060>
  407f7a:	vmovaps XMMWORD PTR [rip+0xa23e],xmm0        # 4121c0 <__bss_start@@Base+0x1070>
  407f82:	vmovaps XMMWORD PTR [rip+0xa246],xmm0        # 4121d0 <__bss_start@@Base+0x1080>
  407f8a:	vmovaps XMMWORD PTR [rip+0xa24e],xmm0        # 4121e0 <__bss_start@@Base+0x1090>
  407f92:	vmovaps XMMWORD PTR [rip+0xa256],xmm0        # 4121f0 <__bss_start@@Base+0x10a0>
  407f9a:	vmovaps XMMWORD PTR [rip+0xa25e],xmm0        # 412200 <__bss_start@@Base+0x10b0>
  407fa2:	vmovaps XMMWORD PTR [rip+0xa266],xmm0        # 412210 <__bss_start@@Base+0x10c0>
  407faa:	vmovaps XMMWORD PTR [rip+0xa26e],xmm0        # 412220 <__bss_start@@Base+0x10d0>
  407fb2:	vmovaps XMMWORD PTR [rip+0xa276],xmm0        # 412230 <__bss_start@@Base+0x10e0>
  407fba:	vmovaps XMMWORD PTR [rip+0xa27e],xmm0        # 412240 <__bss_start@@Base+0x10f0>
  407fc2:	vmovaps XMMWORD PTR [rip+0xa286],xmm0        # 412250 <__bss_start@@Base+0x1100>
  407fca:	vmovaps XMMWORD PTR [rip+0xa28e],xmm0        # 412260 <__bss_start@@Base+0x1110>
  407fd2:	vmovaps XMMWORD PTR [rip+0xa296],xmm0        # 412270 <__bss_start@@Base+0x1120>
  407fda:	vmovaps XMMWORD PTR [rip+0xa29e],xmm0        # 412280 <__bss_start@@Base+0x1130>
  407fe2:	vmovaps XMMWORD PTR [rip+0xa2a6],xmm0        # 412290 <__bss_start@@Base+0x1140>
  407fea:	vmovaps XMMWORD PTR [rip+0xa2ae],xmm0        # 4122a0 <__bss_start@@Base+0x1150>
  407ff2:	vmovaps XMMWORD PTR [rip+0xa2b6],xmm0        # 4122b0 <__bss_start@@Base+0x1160>
  407ffa:	vmovaps XMMWORD PTR [rip+0xa2be],xmm0        # 4122c0 <__bss_start@@Base+0x1170>
  408002:	vmovaps XMMWORD PTR [rip+0xa2c6],xmm0        # 4122d0 <__bss_start@@Base+0x1180>
  40800a:	vmovaps XMMWORD PTR [rip+0xa2ce],xmm0        # 4122e0 <__bss_start@@Base+0x1190>
  408012:	vxorps xmm0,xmm0,xmm0
  408016:	vmovups YMMWORD PTR [rip+0xa2d2],ymm0        # 4122f0 <__bss_start@@Base+0x11a0>
  40801e:	mov    QWORD PTR [rip+0xa2e7],0x0        # 412310 <__bss_start@@Base+0x11c0>
  408029:	pop    rax
  40802a:	vzeroupper 
  40802d:	ret    
  40802e:	xchg   ax,ax
  408030:	lea    rdi,[rip+0xfffffffffffffe89]        # 407ec0 <free_token_boolean_op@@Base+0x50>
  408037:	lea    rsi,[rip+0xffffffffffffff02]        # 407f40 <free_token_boolean_op@@Base+0xd0>
  40803e:	jmp    40aa40 <__gcov_flush@@Base+0xb0>
  408043:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40804d:	nop    DWORD PTR [rax]

0000000000408050 <init_lexer@@Base>:
  408050:	vmovdqa xmm0,XMMWORD PTR [rip+0xa2c8]        # 412320 <__bss_start@@Base+0x11d0>
  408058:	vpcmpeqd xmm1,xmm1,xmm1
  40805c:	vpsubq xmm0,xmm0,xmm1
  408060:	vmovdqa XMMWORD PTR [rip+0xa2b8],xmm0        # 412320 <__bss_start@@Base+0x11d0>
  408068:	mov    QWORD PTR [rdi],rsi
  40806b:	vpxor  xmm0,xmm0,xmm0
  40806f:	vmovdqu XMMWORD PTR [rdi+0x8],xmm0
  408074:	ret    
  408075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40807f:	nop

0000000000408080 <destroy_lexer@@Base>:
  408080:	push   rax
  408081:	inc    QWORD PTR [rip+0xa2a8]        # 412330 <__bss_start@@Base+0x11e0>
  408088:	mov    rdi,QWORD PTR [rdi+0x8]
  40808c:	test   rdi,rdi
  40808f:	je     4080be <destroy_lexer@@Base+0x3e>
  408091:	inc    QWORD PTR [rip+0xa2a0]        # 412338 <__bss_start@@Base+0x11e8>
  408098:	vmovdqa xmm0,XMMWORD PTR [rip+0xa2c0]        # 412360 <__bss_start@@Base+0x1210>
  4080a0:	vpcmpeqd xmm1,xmm1,xmm1
  4080a4:	vpsubq xmm0,xmm0,xmm1
  4080a8:	vmovdqa XMMWORD PTR [rip+0xa2b0],xmm0        # 412360 <__bss_start@@Base+0x1210>
  4080b0:	call   403040 <free@plt>
  4080b5:	lea    rax,[rip+0xa28c]        # 412348 <__bss_start@@Base+0x11f8>
  4080bc:	jmp    4080c5 <destroy_lexer@@Base+0x45>
  4080be:	lea    rax,[rip+0xa27b]        # 412340 <__bss_start@@Base+0x11f0>
  4080c5:	inc    QWORD PTR [rax]
  4080c8:	inc    QWORD PTR [rip+0xa281]        # 412350 <__bss_start@@Base+0x1200>
  4080cf:	pop    rax
  4080d0:	ret    
  4080d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004080e0 <free_stack_base@@Base>:
  4080e0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa278]        # 412360 <__bss_start@@Base+0x1210>
  4080e8:	vpcmpeqd xmm1,xmm1,xmm1
  4080ec:	vpsubq xmm0,xmm0,xmm1
  4080f0:	vmovdqa XMMWORD PTR [rip+0xa268],xmm0        # 412360 <__bss_start@@Base+0x1210>
  4080f8:	jmp    403040 <free@plt>
  4080fd:	nop    DWORD PTR [rax]

0000000000408100 <push_back@@Base>:
  408100:	push   r14
  408102:	push   rbx
  408103:	push   rax
  408104:	mov    r14,rsi
  408107:	mov    rbx,rdi
  40810a:	vmovdqa xmm0,XMMWORD PTR [rip+0xa25e]        # 412370 <__bss_start@@Base+0x1220>
  408112:	vpcmpeqd xmm1,xmm1,xmm1
  408116:	vpsubq xmm0,xmm0,xmm1
  40811a:	vmovdqa XMMWORD PTR [rip+0xa24e],xmm0        # 412370 <__bss_start@@Base+0x1220>
  408122:	mov    edi,0x10
  408127:	call   4031a0 <malloc@plt>
  40812c:	mov    QWORD PTR [rax+0x8],r14
  408130:	mov    rcx,QWORD PTR [rbx+0x8]
  408134:	mov    QWORD PTR [rax],rcx
  408137:	mov    QWORD PTR [rbx+0x8],rax
  40813b:	add    rsp,0x8
  40813f:	pop    rbx
  408140:	pop    r14
  408142:	ret    
  408143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40814d:	nop    DWORD PTR [rax]

0000000000408150 <get_char@@Base>:
  408150:	vmovdqa xmm0,XMMWORD PTR [rip+0xa228]        # 412380 <__bss_start@@Base+0x1230>
  408158:	vpcmpeqd xmm1,xmm1,xmm1
  40815c:	vpsubq xmm0,xmm0,xmm1
  408160:	vmovdqa XMMWORD PTR [rip+0xa218],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408168:	mov    rax,QWORD PTR [rdi]
  40816b:	mov    rcx,QWORD PTR [rdi+0x10]
  40816f:	lea    rdx,[rcx+0x1]
  408173:	mov    QWORD PTR [rdi+0x10],rdx
  408177:	mov    al,BYTE PTR [rax+rcx*1]
  40817a:	ret    
  40817b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408180 <push_back_chars@@Base>:
  408180:	push   rax
  408181:	inc    QWORD PTR [rip+0xa208]        # 412390 <__bss_start@@Base+0x1240>
  408188:	mov    rax,QWORD PTR [rdi+0x10]
  40818c:	sub    rax,rsi
  40818f:	jb     4081a5 <push_back_chars@@Base+0x25>
  408191:	inc    QWORD PTR [rip+0xa200]        # 412398 <__bss_start@@Base+0x1248>
  408198:	inc    QWORD PTR [rip+0xa209]        # 4123a8 <__bss_start@@Base+0x1258>
  40819f:	mov    QWORD PTR [rdi+0x10],rax
  4081a3:	pop    rax
  4081a4:	ret    
  4081a5:	inc    QWORD PTR [rip+0xa1f4]        # 4123a0 <__bss_start@@Base+0x1250>
  4081ac:	mov    rax,QWORD PTR [rip+0x8e45]        # 410ff8 <stderr@GLIBC_2.2.5>
  4081b3:	mov    rcx,QWORD PTR [rax]
  4081b6:	lea    rdi,[rip+0x4a5b]        # 40cc18 <UnitySizeMask@@Base+0x608>
  4081bd:	mov    esi,0x20
  4081c2:	mov    edx,0x1
  4081c7:	call   403240 <fwrite@plt>
  4081cc:	mov    edi,0x1
  4081d1:	call   403230 <exit@plt>
  4081d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004081e0 <push_back_one_char@@Base>:
  4081e0:	push   rax
  4081e1:	vmovdqa xmm0,XMMWORD PTR [rip+0xa1c7]        # 4123b0 <__bss_start@@Base+0x1260>
  4081e9:	vpcmpeqd xmm1,xmm1,xmm1
  4081ed:	vpsubq xmm0,xmm0,xmm1
  4081f1:	vmovdqa XMMWORD PTR [rip+0xa1b7],xmm0        # 4123b0 <__bss_start@@Base+0x1260>
  4081f9:	inc    QWORD PTR [rip+0xa190]        # 412390 <__bss_start@@Base+0x1240>
  408200:	mov    rax,QWORD PTR [rdi+0x10]
  408204:	test   rax,rax
  408207:	je     408220 <push_back_one_char@@Base+0x40>
  408209:	inc    QWORD PTR [rip+0xa188]        # 412398 <__bss_start@@Base+0x1248>
  408210:	inc    QWORD PTR [rip+0xa191]        # 4123a8 <__bss_start@@Base+0x1258>
  408217:	dec    rax
  40821a:	mov    QWORD PTR [rdi+0x10],rax
  40821e:	pop    rax
  40821f:	ret    
  408220:	inc    QWORD PTR [rip+0xa179]        # 4123a0 <__bss_start@@Base+0x1250>
  408227:	mov    rax,QWORD PTR [rip+0x8dca]        # 410ff8 <stderr@GLIBC_2.2.5>
  40822e:	mov    rcx,QWORD PTR [rax]
  408231:	lea    rdi,[rip+0x49e0]        # 40cc18 <UnitySizeMask@@Base+0x608>
  408238:	mov    esi,0x20
  40823d:	mov    edx,0x1
  408242:	call   403240 <fwrite@plt>
  408247:	mov    edi,0x1
  40824c:	call   403230 <exit@plt>
  408251:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40825b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408260 <next@@Base>:
  408260:	push   rbp
  408261:	push   r15
  408263:	push   r14
  408265:	push   r13
  408267:	push   r12
  408269:	push   rbx
  40826a:	sub    rsp,0x208
  408271:	mov    rbx,rdi
  408274:	inc    QWORD PTR [rip+0xa145]        # 4123c0 <__bss_start@@Base+0x1270>
  40827b:	mov    rdi,QWORD PTR [rdi+0x8]
  40827f:	test   rdi,rdi
  408282:	je     4082c7 <next@@Base+0x67>
  408284:	inc    QWORD PTR [rip+0xa13d]        # 4123c8 <__bss_start@@Base+0x1278>
  40828b:	mov    rax,QWORD PTR [rdi]
  40828e:	mov    QWORD PTR [rbx+0x8],rax
  408292:	mov    r14,QWORD PTR [rdi+0x8]
  408296:	mov    QWORD PTR [rdi+0x8],0x0
  40829e:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0ba]        # 412360 <__bss_start@@Base+0x1210>
  4082a6:	vpcmpeqd xmm1,xmm1,xmm1
  4082aa:	vpsubq xmm0,xmm0,xmm1
  4082ae:	vmovdqa XMMWORD PTR [rip+0xa0aa],xmm0        # 412360 <__bss_start@@Base+0x1210>
  4082b6:	call   403040 <free@plt>
  4082bb:	lea    rax,[rip+0xa116]        # 4123d8 <__bss_start@@Base+0x1288>
  4082c2:	jmp    4085f4 <next@@Base+0x394>
  4082c7:	inc    QWORD PTR [rip+0xa102]        # 4123d0 <__bss_start@@Base+0x1280>
  4082ce:	vmovdqa xmm1,XMMWORD PTR [rip+0xa0aa]        # 412380 <__bss_start@@Base+0x1230>
  4082d6:	vpcmpeqd xmm0,xmm0,xmm0
  4082da:	vpsubq xmm1,xmm1,xmm0
  4082de:	vmovdqa XMMWORD PTR [rip+0xa09a],xmm1        # 412380 <__bss_start@@Base+0x1230>
  4082e6:	mov    rax,QWORD PTR [rbx]
  4082e9:	mov    rcx,QWORD PTR [rbx+0x10]
  4082ed:	lea    rdx,[rcx+0x1]
  4082f1:	mov    QWORD PTR [rbx+0x10],rdx
  4082f5:	mov    cl,BYTE PTR [rax+rcx*1]
  4082f8:	inc    QWORD PTR [rip+0xa0e1]        # 4123e0 <__bss_start@@Base+0x1290>
  4082ff:	test   cl,cl
  408301:	je     4085d1 <next@@Base+0x371>
  408307:	xor    ebp,ebp
  408309:	lea    r12,[rip+0xa0e8]        # 4123f8 <__bss_start@@Base+0x12a8>
  408310:	lea    rsi,[rip+0x48e9]        # 40cc00 <UnitySizeMask@@Base+0x5f0>
  408317:	lea    rdi,[rip+0xa112]        # 412430 <__bss_start@@Base+0x12e0>
  40831e:	lea    r8,[rip+0xa13b]        # 412460 <__bss_start@@Base+0x1310>
  408325:	lea    r9,[rip+0xa114]        # 412440 <__bss_start@@Base+0x12f0>
  40832c:	lea    r10,[rip+0xa11d]        # 412450 <__bss_start@@Base+0x1300>
  408333:	lea    r11,[rip+0xa166]        # 4124a0 <__bss_start@@Base+0x1350>
  40833a:	lea    r14,[rip+0xa1ef]        # 412530 <__bss_start@@Base+0x13e0>
  408341:	lea    r15,[rip+0xa200]        # 412548 <__bss_start@@Base+0x13f8>
  408348:	lea    r13,[rip+0xa229]        # 412578 <__bss_start@@Base+0x1428>
  40834f:	xor    eax,eax
  408351:	jmp    408375 <next@@Base+0x115>
  408353:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40835d:	nop    DWORD PTR [rax]
  408360:	mov    rdx,r12
  408363:	inc    QWORD PTR [rdx]
  408366:	inc    QWORD PTR [rip+0xa42b]        # 412798 <__bss_start@@Base+0x1648>
  40836d:	test   cl,cl
  40836f:	je     4085d1 <next@@Base+0x371>
  408375:	inc    QWORD PTR [rip+0xa06c]        # 4123e8 <__bss_start@@Base+0x1298>
  40837c:	cmp    rbp,0x5
  408380:	ja     408360 <next@@Base+0x100>
  408382:	movsxd rdx,DWORD PTR [rsi+rbp*4]
  408386:	add    rdx,rsi
  408389:	jmp    rdx
  40838b:	inc    QWORD PTR [rip+0xa06e]        # 412400 <__bss_start@@Base+0x12b0>
  408392:	mov    rdx,rdi
  408395:	cmp    cl,0x9
  408398:	je     4083c0 <next@@Base+0x160>
  40839a:	inc    QWORD PTR [rip+0xa097]        # 412438 <__bss_start@@Base+0x12e8>
  4083a1:	mov    rdx,r9
  4083a4:	cmp    cl,0x20
  4083a7:	je     4083c0 <next@@Base+0x160>
  4083a9:	inc    QWORD PTR [rip+0xa098]        # 412448 <__bss_start@@Base+0x12f8>
  4083b0:	mov    rdx,r10
  4083b3:	cmp    cl,0xa
  4083b6:	jne    4083f3 <next@@Base+0x193>
  4083b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4083c0:	inc    QWORD PTR [rdx]
  4083c3:	vmovdqa xmm1,XMMWORD PTR [rip+0x9fb5]        # 412380 <__bss_start@@Base+0x1230>
  4083cb:	vpsubq xmm1,xmm1,xmm0
  4083cf:	vmovdqa XMMWORD PTR [rip+0x9fa9],xmm1        # 412380 <__bss_start@@Base+0x1230>
  4083d7:	mov    rcx,QWORD PTR [rbx+0x10]
  4083db:	lea    rdx,[rcx+0x1]
  4083df:	mov    QWORD PTR [rbx+0x10],rdx
  4083e3:	add    rcx,QWORD PTR [rbx]
  4083e6:	mov    rdx,r8
  4083e9:	xor    ebp,ebp
  4083eb:	movzx  ecx,BYTE PTR [rcx]
  4083ee:	jmp    408363 <next@@Base+0x103>
  4083f3:	inc    QWORD PTR [rip+0xa05e]        # 412458 <__bss_start@@Base+0x1308>
  4083fa:	cmp    cl,0x30
  4083fd:	je     408a6c <next@@Base+0x80c>
  408403:	inc    QWORD PTR [rip+0xa066]        # 412470 <__bss_start@@Base+0x1320>
  40840a:	cmp    cl,0x31
  40840d:	jl     408a96 <next@@Base+0x836>
  408413:	inc    QWORD PTR [rip+0xa066]        # 412480 <__bss_start@@Base+0x1330>
  40841a:	cmp    cl,0x39
  40841d:	jg     40845b <next@@Base+0x1fb>
  40841f:	inc    QWORD PTR [rip+0xa06a]        # 412490 <__bss_start@@Base+0x1340>
  408426:	movsxd rdx,eax
  408429:	inc    eax
  40842b:	mov    BYTE PTR [rsp+rdx*1],cl
  40842e:	vmovdqa xmm1,XMMWORD PTR [rip+0x9f4a]        # 412380 <__bss_start@@Base+0x1230>
  408436:	vpsubq xmm1,xmm1,xmm0
  40843a:	vmovdqa XMMWORD PTR [rip+0x9f3e],xmm1        # 412380 <__bss_start@@Base+0x1230>
  408442:	mov    rcx,QWORD PTR [rbx+0x10]
  408446:	lea    rdx,[rcx+0x1]
  40844a:	mov    QWORD PTR [rbx+0x10],rdx
  40844e:	add    rcx,QWORD PTR [rbx]
  408451:	mov    ebp,0x1
  408456:	mov    rdx,r11
  408459:	jmp    4083eb <next@@Base+0x18b>
  40845b:	inc    QWORD PTR [rip+0xa036]        # 412498 <__bss_start@@Base+0x1348>
  408462:	inc    QWORD PTR [rip+0xa047]        # 4124b0 <__bss_start@@Base+0x1360>
  408469:	inc    QWORD PTR [rip+0xa058]        # 4124c8 <__bss_start@@Base+0x1378>
  408470:	cmp    cl,0x7b
  408473:	je     408b02 <next@@Base+0x8a2>
  408479:	inc    QWORD PTR [rip+0xa060]        # 4124e0 <__bss_start@@Base+0x1390>
  408480:	cmp    cl,0x7d
  408483:	je     408b2a <next@@Base+0x8ca>
  408489:	inc    QWORD PTR [rip+0xa068]        # 4124f8 <__bss_start@@Base+0x13a8>
  408490:	cmp    cl,0x3b
  408493:	je     408b52 <next@@Base+0x8f2>
  408499:	inc    QWORD PTR [rip+0xa070]        # 412510 <__bss_start@@Base+0x13c0>
  4084a0:	cmp    cl,0x65
  4084a3:	jne    4084e5 <next@@Base+0x285>
  4084a5:	inc    QWORD PTR [rip+0xa074]        # 412520 <__bss_start@@Base+0x13d0>
  4084ac:	movsxd rcx,eax
  4084af:	inc    eax
  4084b1:	mov    BYTE PTR [rsp+rcx*1],0x65
  4084b5:	vmovdqa xmm1,XMMWORD PTR [rip+0x9ec3]        # 412380 <__bss_start@@Base+0x1230>
  4084bd:	vpsubq xmm1,xmm1,xmm0
  4084c1:	vmovdqa XMMWORD PTR [rip+0x9eb7],xmm1        # 412380 <__bss_start@@Base+0x1230>
  4084c9:	mov    rcx,QWORD PTR [rbx+0x10]
  4084cd:	lea    rdx,[rcx+0x1]
  4084d1:	mov    QWORD PTR [rbx+0x10],rdx
  4084d5:	add    rcx,QWORD PTR [rbx]
  4084d8:	mov    ebp,0x5
  4084dd:	mov    rdx,r14
  4084e0:	jmp    4083eb <next@@Base+0x18b>
  4084e5:	inc    QWORD PTR [rip+0xa03c]        # 412528 <__bss_start@@Base+0x13d8>
  4084ec:	cmp    cl,0x69
  4084ef:	jne    408531 <next@@Base+0x2d1>
  4084f1:	inc    QWORD PTR [rip+0xa040]        # 412538 <__bss_start@@Base+0x13e8>
  4084f8:	movsxd rcx,eax
  4084fb:	inc    eax
  4084fd:	mov    BYTE PTR [rsp+rcx*1],0x69
  408501:	vmovdqa xmm1,XMMWORD PTR [rip+0x9e77]        # 412380 <__bss_start@@Base+0x1230>
  408509:	vpsubq xmm1,xmm1,xmm0
  40850d:	vmovdqa XMMWORD PTR [rip+0x9e6b],xmm1        # 412380 <__bss_start@@Base+0x1230>
  408515:	mov    rcx,QWORD PTR [rbx+0x10]
  408519:	lea    rdx,[rcx+0x1]
  40851d:	mov    QWORD PTR [rbx+0x10],rdx
  408521:	add    rcx,QWORD PTR [rbx]
  408524:	mov    ebp,0x2
  408529:	mov    rdx,r15
  40852c:	jmp    4083eb <next@@Base+0x18b>
  408531:	inc    QWORD PTR [rip+0xa008]        # 412540 <__bss_start@@Base+0x13f0>
  408538:	cmp    cl,0x6d
  40853b:	jne    408581 <next@@Base+0x321>
  40853d:	inc    QWORD PTR [rip+0xa00c]        # 412550 <__bss_start@@Base+0x1400>
  408544:	movsxd rcx,eax
  408547:	inc    eax
  408549:	mov    BYTE PTR [rsp+rcx*1],0x6d
  40854d:	vmovdqa xmm1,XMMWORD PTR [rip+0x9e2b]        # 412380 <__bss_start@@Base+0x1230>
  408555:	vpsubq xmm1,xmm1,xmm0
  408559:	vmovdqa XMMWORD PTR [rip+0x9e1f],xmm1        # 412380 <__bss_start@@Base+0x1230>
  408561:	mov    rcx,QWORD PTR [rbx+0x10]
  408565:	lea    rdx,[rcx+0x1]
  408569:	mov    QWORD PTR [rbx+0x10],rdx
  40856d:	add    rcx,QWORD PTR [rbx]
  408570:	mov    ebp,0x3
  408575:	lea    rdx,[rip+0x9fe4]        # 412560 <__bss_start@@Base+0x1410>
  40857c:	jmp    4083eb <next@@Base+0x18b>
  408581:	inc    QWORD PTR [rip+0x9fd0]        # 412558 <__bss_start@@Base+0x1408>
  408588:	cmp    cl,0x72
  40858b:	jne    408d60 <next@@Base+0xb00>
  408591:	inc    QWORD PTR [rip+0x9fd0]        # 412568 <__bss_start@@Base+0x1418>
  408598:	movsxd rcx,eax
  40859b:	inc    eax
  40859d:	mov    BYTE PTR [rsp+rcx*1],0x72
  4085a1:	vmovdqa xmm1,XMMWORD PTR [rip+0x9dd7]        # 412380 <__bss_start@@Base+0x1230>
  4085a9:	vpsubq xmm1,xmm1,xmm0
  4085ad:	vmovdqa XMMWORD PTR [rip+0x9dcb],xmm1        # 412380 <__bss_start@@Base+0x1230>
  4085b5:	mov    rcx,QWORD PTR [rbx+0x10]
  4085b9:	lea    rdx,[rcx+0x1]
  4085bd:	mov    QWORD PTR [rbx+0x10],rdx
  4085c1:	add    rcx,QWORD PTR [rbx]
  4085c4:	mov    ebp,0x4
  4085c9:	mov    rdx,r13
  4085cc:	jmp    4083eb <next@@Base+0x18b>
  4085d1:	inc    QWORD PTR [rip+0x9e18]        # 4123f0 <__bss_start@@Base+0x12a0>
  4085d8:	mov    edi,0x4
  4085dd:	call   4031a0 <malloc@plt>
  4085e2:	mov    r14,rax
  4085e5:	mov    rdi,rax
  4085e8:	call   407c60 <init_token_eof@@Base>
  4085ed:	lea    rax,[rip+0xa1ac]        # 4127a0 <__bss_start@@Base+0x1650>
  4085f4:	inc    QWORD PTR [rax]
  4085f7:	inc    QWORD PTR [rip+0xa1aa]        # 4127a8 <__bss_start@@Base+0x1658>
  4085fe:	mov    rax,r14
  408601:	add    rsp,0x208
  408608:	pop    rbx
  408609:	pop    r12
  40860b:	pop    r13
  40860d:	pop    r14
  40860f:	pop    r15
  408611:	pop    rbp
  408612:	ret    
  408613:	inc    QWORD PTR [rip+0x9dee]        # 412408 <__bss_start@@Base+0x12b8>
  40861a:	lea    edx,[rcx-0x30]
  40861d:	cmp    dl,0x9
  408620:	ja     40867d <next@@Base+0x41d>
  408622:	movsxd rdx,eax
  408625:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d53]        # 412380 <__bss_start@@Base+0x1230>
  40862d:	add    rdx,rsp
  408630:	vpcmpeqd xmm1,xmm1,xmm1
  408634:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40863e:	xchg   ax,ax
  408640:	inc    QWORD PTR [rip+0xa031]        # 412678 <__bss_start@@Base+0x1528>
  408647:	vpsubq xmm0,xmm0,xmm1
  40864b:	mov    BYTE PTR [rdx],cl
  40864d:	vmovdqa XMMWORD PTR [rip+0x9d2b],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408655:	mov    rcx,QWORD PTR [rbx]
  408658:	mov    rsi,QWORD PTR [rbx+0x10]
  40865c:	lea    rdi,[rsi+0x1]
  408660:	mov    QWORD PTR [rbx+0x10],rdi
  408664:	movzx  ecx,BYTE PTR [rcx+rsi*1]
  408668:	inc    QWORD PTR [rip+0xa019]        # 412688 <__bss_start@@Base+0x1538>
  40866f:	lea    esi,[rcx-0x30]
  408672:	inc    rdx
  408675:	inc    eax
  408677:	cmp    sil,0xa
  40867b:	jb     408640 <next@@Base+0x3e0>
  40867d:	inc    QWORD PTR [rip+0x9ffc]        # 412680 <__bss_start@@Base+0x1530>
  408684:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d24]        # 4123b0 <__bss_start@@Base+0x1260>
  40868c:	vpcmpeqd xmm1,xmm1,xmm1
  408690:	vpsubq xmm0,xmm0,xmm1
  408694:	vmovdqa XMMWORD PTR [rip+0x9d14],xmm0        # 4123b0 <__bss_start@@Base+0x1260>
  40869c:	inc    QWORD PTR [rip+0x9ced]        # 412390 <__bss_start@@Base+0x1240>
  4086a3:	mov    rcx,QWORD PTR [rbx+0x10]
  4086a7:	test   rcx,rcx
  4086aa:	je     408fa4 <next@@Base+0xd44>
  4086b0:	inc    QWORD PTR [rip+0x9ce1]        # 412398 <__bss_start@@Base+0x1248>
  4086b7:	inc    QWORD PTR [rip+0x9cea]        # 4123a8 <__bss_start@@Base+0x1258>
  4086be:	dec    rcx
  4086c1:	mov    QWORD PTR [rbx+0x10],rcx
  4086c5:	cdqe   
  4086c7:	mov    BYTE PTR [rsp+rax*1],0x0
  4086cb:	mov    edi,0x8
  4086d0:	call   4031a0 <malloc@plt>
  4086d5:	mov    r14,rax
  4086d8:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0d0]        # 4127b0 <__bss_start@@Base+0x1660>
  4086e0:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x3cc8]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  4086e8:	vmovdqa XMMWORD PTR [rip+0xa0c0],xmm0        # 4127b0 <__bss_start@@Base+0x1660>
  4086f0:	mov    rdi,rsp
  4086f3:	xor    esi,esi
  4086f5:	mov    edx,0xa
  4086fa:	call   403160 <strtol@plt>
  4086ff:	mov    rdi,r14
  408702:	mov    esi,eax
  408704:	call   407b40 <init_token_int_value@@Base>
  408709:	lea    rax,[rip+0x9f80]        # 412690 <__bss_start@@Base+0x1540>
  408710:	jmp    4085f4 <next@@Base+0x394>
  408715:	inc    QWORD PTR [rip+0x9cfc]        # 412418 <__bss_start@@Base+0x12c8>
  40871c:	cmp    cl,0x61
  40871f:	jne    408fd5 <next@@Base+0xd75>
  408725:	inc    QWORD PTR [rip+0x9fac]        # 4126d8 <__bss_start@@Base+0x1588>
  40872c:	movsxd rbp,eax
  40872f:	mov    BYTE PTR [rsp+rbp*1],0x61
  408733:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c45]        # 412380 <__bss_start@@Base+0x1230>
  40873b:	vpcmpeqd xmm1,xmm1,xmm1
  40873f:	vpsubq xmm1,xmm0,xmm1
  408743:	vmovdqa XMMWORD PTR [rip+0x9c35],xmm1        # 412380 <__bss_start@@Base+0x1230>
  40874b:	mov    rax,QWORD PTR [rbx]
  40874e:	mov    rcx,QWORD PTR [rbx+0x10]
  408752:	lea    rdx,[rcx+0x1]
  408756:	mov    QWORD PTR [rbx+0x10],rdx
  40875a:	cmp    BYTE PTR [rax+rcx*1],0x69
  40875e:	jne    408fe6 <next@@Base+0xd86>
  408764:	inc    QWORD PTR [rip+0x9f7d]        # 4126e8 <__bss_start@@Base+0x1598>
  40876b:	mov    r14,rsp
  40876e:	mov    BYTE PTR [rbp+r14*1+0x1],0x69
  408774:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4444]        # 40cbc0 <UnitySizeMask@@Base+0x5b0>
  40877c:	vmovdqa XMMWORD PTR [rip+0x9bfc],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408784:	mov    rax,QWORD PTR [rbx]
  408787:	mov    rcx,QWORD PTR [rbx+0x10]
  40878b:	lea    rdx,[rcx+0x1]
  40878f:	mov    QWORD PTR [rbx+0x10],rdx
  408793:	cmp    BYTE PTR [rax+rcx*1],0x6e
  408797:	jne    408ff7 <next@@Base+0xd97>
  40879d:	inc    QWORD PTR [rip+0x9f54]        # 4126f8 <__bss_start@@Base+0x15a8>
  4087a4:	lea    r15,[rbp+0x3]
  4087a8:	mov    WORD PTR [rbp+r14*1+0x2],0x6e
  4087b0:	lea    rdi,[rbp+0x4]
  4087b4:	call   4031a0 <malloc@plt>
  4087b9:	mov    rbx,rax
  4087bc:	mov    rdi,rax
  4087bf:	mov    rsi,r14
  4087c2:	mov    rdx,r15
  4087c5:	call   403060 <strncpy@plt>
  4087ca:	mov    BYTE PTR [rbx+rbp*1+0x3],0x0
  4087cf:	mov    edi,0x10
  4087d4:	call   4031a0 <malloc@plt>
  4087d9:	mov    r14,rax
  4087dc:	mov    rdi,rax
  4087df:	mov    rsi,rbx
  4087e2:	call   407b70 <init_token_function@@Base>
  4087e7:	lea    rax,[rip+0x9f12]        # 412700 <__bss_start@@Base+0x15b0>
  4087ee:	jmp    4085f4 <next@@Base+0x394>
  4087f3:	inc    QWORD PTR [rip+0x9c26]        # 412420 <__bss_start@@Base+0x12d0>
  4087fa:	cmp    cl,0x65
  4087fd:	jne    409008 <next@@Base+0xda8>
  408803:	inc    QWORD PTR [rip+0x9f06]        # 412710 <__bss_start@@Base+0x15c0>
  40880a:	cdqe   
  40880c:	mov    BYTE PTR [rsp+rax*1],0x65
  408810:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b68]        # 412380 <__bss_start@@Base+0x1230>
  408818:	vpcmpeqd xmm1,xmm1,xmm1
  40881c:	vpsubq xmm1,xmm0,xmm1
  408820:	vmovdqa XMMWORD PTR [rip+0x9b58],xmm1        # 412380 <__bss_start@@Base+0x1230>
  408828:	mov    rcx,QWORD PTR [rbx]
  40882b:	mov    rdx,QWORD PTR [rbx+0x10]
  40882f:	lea    rsi,[rdx+0x1]
  408833:	mov    QWORD PTR [rbx+0x10],rsi
  408837:	cmp    BYTE PTR [rcx+rdx*1],0x74
  40883b:	jne    409019 <next@@Base+0xdb9>
  408841:	inc    QWORD PTR [rip+0x9ed8]        # 412720 <__bss_start@@Base+0x15d0>
  408848:	mov    rcx,rsp
  40884b:	mov    BYTE PTR [rax+rcx*1+0x1],0x74
  408850:	vpaddq xmm1,xmm0,XMMWORD PTR [rip+0x4368]        # 40cbc0 <UnitySizeMask@@Base+0x5b0>
  408858:	vmovdqa XMMWORD PTR [rip+0x9b20],xmm1        # 412380 <__bss_start@@Base+0x1230>
  408860:	mov    rdx,QWORD PTR [rbx]
  408863:	mov    rsi,QWORD PTR [rbx+0x10]
  408867:	lea    rdi,[rsi+0x1]
  40886b:	mov    QWORD PTR [rbx+0x10],rdi
  40886f:	cmp    BYTE PTR [rdx+rsi*1],0x75
  408873:	jne    40902a <next@@Base+0xdca>
  408879:	inc    QWORD PTR [rip+0x9eb0]        # 412730 <__bss_start@@Base+0x15e0>
  408880:	mov    BYTE PTR [rax+rcx*1+0x2],0x75
  408885:	vpaddq xmm1,xmm0,XMMWORD PTR [rip+0x4343]        # 40cbd0 <UnitySizeMask@@Base+0x5c0>
  40888d:	vmovdqa XMMWORD PTR [rip+0x9aeb],xmm1        # 412380 <__bss_start@@Base+0x1230>
  408895:	mov    rdx,QWORD PTR [rbx]
  408898:	mov    rsi,QWORD PTR [rbx+0x10]
  40889c:	lea    rdi,[rsi+0x1]
  4088a0:	mov    QWORD PTR [rbx+0x10],rdi
  4088a4:	cmp    BYTE PTR [rdx+rsi*1],0x72
  4088a8:	jne    40903b <next@@Base+0xddb>
  4088ae:	inc    QWORD PTR [rip+0x9e8b]        # 412740 <__bss_start@@Base+0x15f0>
  4088b5:	mov    BYTE PTR [rax+rcx*1+0x3],0x72
  4088ba:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x431e]        # 40cbe0 <UnitySizeMask@@Base+0x5d0>
  4088c2:	vmovdqa XMMWORD PTR [rip+0x9ab6],xmm0        # 412380 <__bss_start@@Base+0x1230>
  4088ca:	mov    rax,QWORD PTR [rbx]
  4088cd:	mov    rcx,QWORD PTR [rbx+0x10]
  4088d1:	lea    rdx,[rcx+0x1]
  4088d5:	mov    QWORD PTR [rbx+0x10],rdx
  4088d9:	cmp    BYTE PTR [rax+rcx*1],0x6e
  4088dd:	jne    40904c <next@@Base+0xdec>
  4088e3:	inc    QWORD PTR [rip+0x9e66]        # 412750 <__bss_start@@Base+0x1600>
  4088ea:	mov    edi,0x4
  4088ef:	call   4031a0 <malloc@plt>
  4088f4:	mov    r14,rax
  4088f7:	mov    rdi,rax
  4088fa:	call   407c20 <init_token_return@@Base>
  4088ff:	lea    rax,[rip+0x9e52]        # 412758 <__bss_start@@Base+0x1608>
  408906:	jmp    4085f4 <next@@Base+0x394>
  40890b:	movsx  edx,cl
  40890e:	inc    QWORD PTR [rip+0x9afb]        # 412410 <__bss_start@@Base+0x12c0>
  408915:	cmp    edx,0x66
  408918:	je     408a3a <next@@Base+0x7da>
  40891e:	cmp    edx,0x6e
  408921:	jne    40905d <next@@Base+0xdfd>
  408927:	inc    QWORD PTR [rip+0x9d72]        # 4126a0 <__bss_start@@Base+0x1550>
  40892e:	cdqe   
  408930:	mov    BYTE PTR [rsp+rax*1],cl
  408933:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a45]        # 412380 <__bss_start@@Base+0x1230>
  40893b:	vpcmpeqd xmm1,xmm1,xmm1
  40893f:	vpsubq xmm0,xmm0,xmm1
  408943:	vmovdqa XMMWORD PTR [rip+0x9a35],xmm0        # 412380 <__bss_start@@Base+0x1230>
  40894b:	mov    rax,QWORD PTR [rbx]
  40894e:	mov    rcx,QWORD PTR [rbx+0x10]
  408952:	lea    rdx,[rcx+0x1]
  408956:	mov    QWORD PTR [rbx+0x10],rdx
  40895a:	cmp    BYTE PTR [rax+rcx*1],0x74
  40895e:	jne    4090a1 <next@@Base+0xe41>
  408964:	inc    QWORD PTR [rip+0x9d4d]        # 4126b8 <__bss_start@@Base+0x1568>
  40896b:	mov    edi,0x4
  408970:	call   4031a0 <malloc@plt>
  408975:	mov    r14,rax
  408978:	mov    rdi,rax
  40897b:	call   407b20 <init_token_int_type@@Base>
  408980:	lea    rax,[rip+0x9d39]        # 4126c0 <__bss_start@@Base+0x1570>
  408987:	jmp    4085f4 <next@@Base+0x394>
  40898c:	inc    QWORD PTR [rip+0x9a95]        # 412428 <__bss_start@@Base+0x12d8>
  408993:	cmp    cl,0x6c
  408996:	jne    40906e <next@@Base+0xe0e>
  40899c:	inc    QWORD PTR [rip+0x9dc5]        # 412768 <__bss_start@@Base+0x1618>
  4089a3:	cdqe   
  4089a5:	mov    BYTE PTR [rsp+rax*1],0x6c
  4089a9:	vmovdqa xmm0,XMMWORD PTR [rip+0x99cf]        # 412380 <__bss_start@@Base+0x1230>
  4089b1:	vpcmpeqd xmm1,xmm1,xmm1
  4089b5:	vpsubq xmm1,xmm0,xmm1
  4089b9:	vmovdqa XMMWORD PTR [rip+0x99bf],xmm1        # 412380 <__bss_start@@Base+0x1230>
  4089c1:	mov    rcx,QWORD PTR [rbx]
  4089c4:	mov    rdx,QWORD PTR [rbx+0x10]
  4089c8:	lea    rsi,[rdx+0x1]
  4089cc:	mov    QWORD PTR [rbx+0x10],rsi
  4089d0:	cmp    BYTE PTR [rcx+rdx*1],0x73
  4089d4:	jne    40907f <next@@Base+0xe1f>
  4089da:	inc    QWORD PTR [rip+0x9d97]        # 412778 <__bss_start@@Base+0x1628>
  4089e1:	mov    rcx,rsp
  4089e4:	mov    BYTE PTR [rax+rcx*1+0x1],0x73
  4089e9:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x41cf]        # 40cbc0 <UnitySizeMask@@Base+0x5b0>
  4089f1:	vmovdqa XMMWORD PTR [rip+0x9987],xmm0        # 412380 <__bss_start@@Base+0x1230>
  4089f9:	mov    rax,QWORD PTR [rbx]
  4089fc:	mov    rcx,QWORD PTR [rbx+0x10]
  408a00:	lea    rdx,[rcx+0x1]
  408a04:	mov    QWORD PTR [rbx+0x10],rdx
  408a08:	cmp    BYTE PTR [rax+rcx*1],0x65
  408a0c:	jne    409090 <next@@Base+0xe30>
  408a12:	inc    QWORD PTR [rip+0x9d6f]        # 412788 <__bss_start@@Base+0x1638>
  408a19:	mov    edi,0x4
  408a1e:	call   4031a0 <malloc@plt>
  408a23:	mov    r14,rax
  408a26:	mov    rdi,rax
  408a29:	call   407ca0 <init_token_else@@Base>
  408a2e:	lea    rax,[rip+0x9d5b]        # 412790 <__bss_start@@Base+0x1640>
  408a35:	jmp    4085f4 <next@@Base+0x394>
  408a3a:	inc    QWORD PTR [rip+0x9c67]        # 4126a8 <__bss_start@@Base+0x1558>
  408a41:	cdqe   
  408a43:	mov    BYTE PTR [rsp+rax*1],cl
  408a46:	mov    BYTE PTR [rsp+rax*1+0x1],0x0
  408a4b:	mov    edi,0x4
  408a50:	call   4031a0 <malloc@plt>
  408a55:	mov    r14,rax
  408a58:	mov    rdi,rax
  408a5b:	call   407c80 <init_token_if@@Base>
  408a60:	lea    rax,[rip+0x9c61]        # 4126c8 <__bss_start@@Base+0x1578>
  408a67:	jmp    4085f4 <next@@Base+0x394>
  408a6c:	inc    QWORD PTR [rip+0x99f5]        # 412468 <__bss_start@@Base+0x1318>
  408a73:	mov    edi,0x8
  408a78:	call   4031a0 <malloc@plt>
  408a7d:	mov    r14,rax
  408a80:	mov    rdi,rax
  408a83:	xor    esi,esi
  408a85:	call   407b40 <init_token_int_value@@Base>
  408a8a:	lea    rax,[rip+0x99e7]        # 412478 <__bss_start@@Base+0x1328>
  408a91:	jmp    4085f4 <next@@Base+0x394>
  408a96:	inc    QWORD PTR [rip+0x99eb]        # 412488 <__bss_start@@Base+0x1338>
  408a9d:	cmp    cl,0x28
  408aa0:	jne    408aca <next@@Base+0x86a>
  408aa2:	inc    QWORD PTR [rip+0x99ff]        # 4124a8 <__bss_start@@Base+0x1358>
  408aa9:	mov    edi,0x4
  408aae:	call   4031a0 <malloc@plt>
  408ab3:	mov    r14,rax
  408ab6:	mov    rdi,rax
  408ab9:	call   407ba0 <init_token_opar@@Base>
  408abe:	lea    rax,[rip+0x99f3]        # 4124b8 <__bss_start@@Base+0x1368>
  408ac5:	jmp    4085f4 <next@@Base+0x394>
  408aca:	inc    QWORD PTR [rip+0x99df]        # 4124b0 <__bss_start@@Base+0x1360>
  408ad1:	cmp    cl,0x29
  408ad4:	jne    408b7a <next@@Base+0x91a>
  408ada:	inc    QWORD PTR [rip+0x99df]        # 4124c0 <__bss_start@@Base+0x1370>
  408ae1:	mov    edi,0x4
  408ae6:	call   4031a0 <malloc@plt>
  408aeb:	mov    r14,rax
  408aee:	mov    rdi,rax
  408af1:	call   407bc0 <init_token_cpar@@Base>
  408af6:	lea    rax,[rip+0x99d3]        # 4124d0 <__bss_start@@Base+0x1380>
  408afd:	jmp    4085f4 <next@@Base+0x394>
  408b02:	inc    QWORD PTR [rip+0x99cf]        # 4124d8 <__bss_start@@Base+0x1388>
  408b09:	mov    edi,0x4
  408b0e:	call   4031a0 <malloc@plt>
  408b13:	mov    r14,rax
  408b16:	mov    rdi,rax
  408b19:	call   407be0 <init_token_obra@@Base>
  408b1e:	lea    rax,[rip+0x99c3]        # 4124e8 <__bss_start@@Base+0x1398>
  408b25:	jmp    4085f4 <next@@Base+0x394>
  408b2a:	inc    QWORD PTR [rip+0x99bf]        # 4124f0 <__bss_start@@Base+0x13a0>
  408b31:	mov    edi,0x4
  408b36:	call   4031a0 <malloc@plt>
  408b3b:	mov    r14,rax
  408b3e:	mov    rdi,rax
  408b41:	call   407c00 <init_token_cbra@@Base>
  408b46:	lea    rax,[rip+0x99b3]        # 412500 <__bss_start@@Base+0x13b0>
  408b4d:	jmp    4085f4 <next@@Base+0x394>
  408b52:	inc    QWORD PTR [rip+0x99af]        # 412508 <__bss_start@@Base+0x13b8>
  408b59:	mov    edi,0x4
  408b5e:	call   4031a0 <malloc@plt>
  408b63:	mov    r14,rax
  408b66:	mov    rdi,rax
  408b69:	call   407c40 <init_token_semicolon@@Base>
  408b6e:	lea    rax,[rip+0x99a3]        # 412518 <__bss_start@@Base+0x13c8>
  408b75:	jmp    4085f4 <next@@Base+0x394>
  408b7a:	inc    QWORD PTR [rip+0x9947]        # 4124c8 <__bss_start@@Base+0x1378>
  408b81:	inc    QWORD PTR [rip+0x9958]        # 4124e0 <__bss_start@@Base+0x1390>
  408b88:	inc    QWORD PTR [rip+0x9969]        # 4124f8 <__bss_start@@Base+0x13a8>
  408b8f:	inc    QWORD PTR [rip+0x997a]        # 412510 <__bss_start@@Base+0x13c0>
  408b96:	inc    QWORD PTR [rip+0x998b]        # 412528 <__bss_start@@Base+0x13d8>
  408b9d:	inc    QWORD PTR [rip+0x999c]        # 412540 <__bss_start@@Base+0x13f0>
  408ba4:	inc    QWORD PTR [rip+0x99ad]        # 412558 <__bss_start@@Base+0x1408>
  408bab:	inc    QWORD PTR [rip+0x99be]        # 412570 <__bss_start@@Base+0x1420>
  408bb2:	cmp    cl,0x21
  408bb5:	jne    408c33 <next@@Base+0x9d3>
  408bb7:	inc    QWORD PTR [rip+0x99c2]        # 412580 <__bss_start@@Base+0x1430>
  408bbe:	cdqe   
  408bc0:	vmovdqa xmm0,XMMWORD PTR [rip+0x97b8]        # 412380 <__bss_start@@Base+0x1230>
  408bc8:	vpcmpeqd xmm1,xmm1,xmm1
  408bcc:	vpsubq xmm0,xmm0,xmm1
  408bd0:	vmovdqa XMMWORD PTR [rip+0x97a8],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408bd8:	mov    BYTE PTR [rsp+rax*1],0x21
  408bdc:	mov    rax,QWORD PTR [rbx]
  408bdf:	mov    rcx,QWORD PTR [rbx+0x10]
  408be3:	lea    rdx,[rcx+0x1]
  408be7:	mov    QWORD PTR [rbx+0x10],rdx
  408beb:	mov    bpl,BYTE PTR [rax+rcx*1]
  408bef:	mov    edi,0x10
  408bf4:	call   4031a0 <malloc@plt>
  408bf9:	mov    r14,rax
  408bfc:	cmp    bpl,0x3d
  408c00:	jne    408cdf <next@@Base+0xa7f>
  408c06:	inc    QWORD PTR [rip+0x998b]        # 412598 <__bss_start@@Base+0x1448>
  408c0d:	mov    edi,0x3
  408c12:	call   4031a0 <malloc@plt>
  408c17:	mov    cl,BYTE PTR [rsp]
  408c1a:	mov    BYTE PTR [rax],cl
  408c1c:	mov    BYTE PTR [rax+0x1],0x3d
  408c20:	mov    rcx,rax
  408c23:	add    rcx,0x2
  408c27:	lea    rdx,[rip+0x997a]        # 4125a8 <__bss_start@@Base+0x1458>
  408c2e:	jmp    408d43 <next@@Base+0xae3>
  408c33:	inc    QWORD PTR [rip+0x994e]        # 412588 <__bss_start@@Base+0x1438>
  408c3a:	inc    QWORD PTR [rip+0x997f]        # 4125c0 <__bss_start@@Base+0x1470>
  408c41:	inc    QWORD PTR [rip+0x9988]        # 4125d0 <__bss_start@@Base+0x1480>
  408c48:	inc    QWORD PTR [rip+0x99b9]        # 412608 <__bss_start@@Base+0x14b8>
  408c4f:	inc    QWORD PTR [rip+0x99da]        # 412630 <__bss_start@@Base+0x14e0>
  408c56:	cmp    cl,0x26
  408c59:	jne    4090db <next@@Base+0xe7b>
  408c5f:	inc    QWORD PTR [rip+0x99ea]        # 412650 <__bss_start@@Base+0x1500>
  408c66:	cdqe   
  408c68:	vmovdqa xmm0,XMMWORD PTR [rip+0x9710]        # 412380 <__bss_start@@Base+0x1230>
  408c70:	vpcmpeqd xmm1,xmm1,xmm1
  408c74:	vpsubq xmm0,xmm0,xmm1
  408c78:	vmovdqa XMMWORD PTR [rip+0x9700],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408c80:	mov    BYTE PTR [rsp+rax*1],0x26
  408c84:	mov    rax,QWORD PTR [rbx]
  408c87:	mov    rcx,QWORD PTR [rbx+0x10]
  408c8b:	lea    rdx,[rcx+0x1]
  408c8f:	mov    QWORD PTR [rbx+0x10],rdx
  408c93:	mov    bl,BYTE PTR [rax+rcx*1]
  408c96:	mov    edi,0x10
  408c9b:	call   4031a0 <malloc@plt>
  408ca0:	cmp    bl,0x26
  408ca3:	jne    4090b2 <next@@Base+0xe52>
  408ca9:	mov    r14,rax
  408cac:	inc    QWORD PTR [rip+0x99b5]        # 412668 <__bss_start@@Base+0x1518>
  408cb3:	mov    edi,0x3
  408cb8:	call   4031a0 <malloc@plt>
  408cbd:	mov    cl,BYTE PTR [rsp]
  408cc0:	mov    BYTE PTR [rax],cl
  408cc2:	mov    WORD PTR [rax+0x1],0x26
  408cc8:	mov    rdi,r14
  408ccb:	mov    rsi,rax
  408cce:	call   407cc0 <init_token_boolean_op@@Base>
  408cd3:	lea    rax,[rip+0x9996]        # 412670 <__bss_start@@Base+0x1520>
  408cda:	jmp    4085f4 <next@@Base+0x394>
  408cdf:	inc    QWORD PTR [rip+0x98aa]        # 412590 <__bss_start@@Base+0x1440>
  408ce6:	vmovdqa xmm0,XMMWORD PTR [rip+0x96c2]        # 4123b0 <__bss_start@@Base+0x1260>
  408cee:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x36ba]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  408cf6:	vmovdqa XMMWORD PTR [rip+0x96b2],xmm0        # 4123b0 <__bss_start@@Base+0x1260>
  408cfe:	inc    QWORD PTR [rip+0x968b]        # 412390 <__bss_start@@Base+0x1240>
  408d05:	mov    rax,QWORD PTR [rbx+0x10]
  408d09:	test   rax,rax
  408d0c:	je     408fa4 <next@@Base+0xd44>
  408d12:	inc    QWORD PTR [rip+0x967f]        # 412398 <__bss_start@@Base+0x1248>
  408d19:	inc    QWORD PTR [rip+0x9688]        # 4123a8 <__bss_start@@Base+0x1258>
  408d20:	dec    rax
  408d23:	mov    QWORD PTR [rbx+0x10],rax
  408d27:	mov    edi,0x2
  408d2c:	call   4031a0 <malloc@plt>
  408d31:	mov    cl,BYTE PTR [rsp]
  408d34:	mov    BYTE PTR [rax],cl
  408d36:	mov    rcx,rax
  408d39:	inc    rcx
  408d3c:	lea    rdx,[rip+0x985d]        # 4125a0 <__bss_start@@Base+0x1450>
  408d43:	mov    BYTE PTR [rcx],0x0
  408d46:	inc    QWORD PTR [rdx]
  408d49:	mov    rdi,r14
  408d4c:	mov    rsi,rax
  408d4f:	call   407cc0 <init_token_boolean_op@@Base>
  408d54:	lea    rax,[rip+0x9855]        # 4125b0 <__bss_start@@Base+0x1460>
  408d5b:	jmp    4085f4 <next@@Base+0x394>
  408d60:	inc    QWORD PTR [rip+0x9809]        # 412570 <__bss_start@@Base+0x1420>
  408d67:	inc    QWORD PTR [rip+0x981a]        # 412588 <__bss_start@@Base+0x1438>
  408d6e:	cmp    cl,0x3c
  408d71:	jne    408d7c <next@@Base+0xb1c>
  408d73:	lea    rdx,[rip+0x983e]        # 4125b8 <__bss_start@@Base+0x1468>
  408d7a:	jmp    408d93 <next@@Base+0xb33>
  408d7c:	inc    QWORD PTR [rip+0x983d]        # 4125c0 <__bss_start@@Base+0x1470>
  408d83:	cmp    cl,0x3e
  408d86:	jne    408e84 <next@@Base+0xc24>
  408d8c:	lea    rdx,[rip+0x9835]        # 4125c8 <__bss_start@@Base+0x1478>
  408d93:	inc    QWORD PTR [rdx]
  408d96:	cdqe   
  408d98:	vmovdqa xmm0,XMMWORD PTR [rip+0x95e0]        # 412380 <__bss_start@@Base+0x1230>
  408da0:	vpcmpeqd xmm1,xmm1,xmm1
  408da4:	vpsubq xmm0,xmm0,xmm1
  408da8:	vmovdqa XMMWORD PTR [rip+0x95d0],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408db0:	mov    BYTE PTR [rsp+rax*1],cl
  408db3:	mov    rax,QWORD PTR [rbx]
  408db6:	mov    rcx,QWORD PTR [rbx+0x10]
  408dba:	lea    rdx,[rcx+0x1]
  408dbe:	mov    QWORD PTR [rbx+0x10],rdx
  408dc2:	mov    bpl,BYTE PTR [rax+rcx*1]
  408dc6:	mov    edi,0x10
  408dcb:	call   4031a0 <malloc@plt>
  408dd0:	mov    r14,rax
  408dd3:	cmp    bpl,0x3d
  408dd7:	jne    408e03 <next@@Base+0xba3>
  408dd9:	inc    QWORD PTR [rip+0x9800]        # 4125e0 <__bss_start@@Base+0x1490>
  408de0:	mov    edi,0x3
  408de5:	call   4031a0 <malloc@plt>
  408dea:	mov    cl,BYTE PTR [rsp]
  408ded:	mov    BYTE PTR [rax],cl
  408def:	mov    BYTE PTR [rax+0x1],0x3d
  408df3:	mov    rcx,rax
  408df6:	add    rcx,0x2
  408dfa:	lea    rdx,[rip+0x97ef]        # 4125f0 <__bss_start@@Base+0x14a0>
  408e01:	jmp    408e67 <next@@Base+0xc07>
  408e03:	inc    QWORD PTR [rip+0x97ce]        # 4125d8 <__bss_start@@Base+0x1488>
  408e0a:	vmovdqa xmm0,XMMWORD PTR [rip+0x959e]        # 4123b0 <__bss_start@@Base+0x1260>
  408e12:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x3596]        # 40c3b0 <_IO_stdin_used@@Base+0x3b0>
  408e1a:	vmovdqa XMMWORD PTR [rip+0x958e],xmm0        # 4123b0 <__bss_start@@Base+0x1260>
  408e22:	inc    QWORD PTR [rip+0x9567]        # 412390 <__bss_start@@Base+0x1240>
  408e29:	mov    rax,QWORD PTR [rbx+0x10]
  408e2d:	test   rax,rax
  408e30:	je     408fa4 <next@@Base+0xd44>
  408e36:	inc    QWORD PTR [rip+0x955b]        # 412398 <__bss_start@@Base+0x1248>
  408e3d:	inc    QWORD PTR [rip+0x9564]        # 4123a8 <__bss_start@@Base+0x1258>
  408e44:	dec    rax
  408e47:	mov    QWORD PTR [rbx+0x10],rax
  408e4b:	mov    edi,0x2
  408e50:	call   4031a0 <malloc@plt>
  408e55:	mov    cl,BYTE PTR [rsp]
  408e58:	mov    BYTE PTR [rax],cl
  408e5a:	mov    rcx,rax
  408e5d:	inc    rcx
  408e60:	lea    rdx,[rip+0x9781]        # 4125e8 <__bss_start@@Base+0x1498>
  408e67:	mov    BYTE PTR [rcx],0x0
  408e6a:	inc    QWORD PTR [rdx]
  408e6d:	mov    rdi,r14
  408e70:	mov    rsi,rax
  408e73:	call   407cc0 <init_token_boolean_op@@Base>
  408e78:	lea    rax,[rip+0x9779]        # 4125f8 <__bss_start@@Base+0x14a8>
  408e7f:	jmp    4085f4 <next@@Base+0x394>
  408e84:	inc    QWORD PTR [rip+0x9745]        # 4125d0 <__bss_start@@Base+0x1480>
  408e8b:	cmp    cl,0x3d
  408e8e:	jne    408f14 <next@@Base+0xcb4>
  408e94:	inc    QWORD PTR [rip+0x9765]        # 412600 <__bss_start@@Base+0x14b0>
  408e9b:	cdqe   
  408e9d:	vmovdqa xmm0,XMMWORD PTR [rip+0x94db]        # 412380 <__bss_start@@Base+0x1230>
  408ea5:	vpcmpeqd xmm1,xmm1,xmm1
  408ea9:	vpsubq xmm0,xmm0,xmm1
  408ead:	vmovdqa XMMWORD PTR [rip+0x94cb],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408eb5:	mov    BYTE PTR [rsp+rax*1],0x3d
  408eb9:	mov    rax,QWORD PTR [rbx]
  408ebc:	mov    rcx,QWORD PTR [rbx+0x10]
  408ec0:	lea    rdx,[rcx+0x1]
  408ec4:	mov    QWORD PTR [rbx+0x10],rdx
  408ec8:	mov    bl,BYTE PTR [rax+rcx*1]
  408ecb:	mov    edi,0x10
  408ed0:	call   4031a0 <malloc@plt>
  408ed5:	cmp    bl,0x3d
  408ed8:	jne    4090c3 <next@@Base+0xe63>
  408ede:	mov    r14,rax
  408ee1:	inc    QWORD PTR [rip+0x9730]        # 412618 <__bss_start@@Base+0x14c8>
  408ee8:	mov    edi,0x3
  408eed:	call   4031a0 <malloc@plt>
  408ef2:	mov    cl,BYTE PTR [rsp]
  408ef5:	mov    BYTE PTR [rax],cl
  408ef7:	mov    WORD PTR [rax+0x1],0x3d
  408efd:	mov    rdi,r14
  408f00:	mov    rsi,rax
  408f03:	call   407cc0 <init_token_boolean_op@@Base>
  408f08:	lea    rax,[rip+0x9711]        # 412620 <__bss_start@@Base+0x14d0>
  408f0f:	jmp    4085f4 <next@@Base+0x394>
  408f14:	inc    QWORD PTR [rip+0x96ed]        # 412608 <__bss_start@@Base+0x14b8>
  408f1b:	cmp    cl,0x7c
  408f1e:	jne    4090d4 <next@@Base+0xe74>
  408f24:	inc    QWORD PTR [rip+0x96fd]        # 412628 <__bss_start@@Base+0x14d8>
  408f2b:	cdqe   
  408f2d:	vmovdqa xmm0,XMMWORD PTR [rip+0x944b]        # 412380 <__bss_start@@Base+0x1230>
  408f35:	vpcmpeqd xmm1,xmm1,xmm1
  408f39:	vpsubq xmm0,xmm0,xmm1
  408f3d:	vmovdqa XMMWORD PTR [rip+0x943b],xmm0        # 412380 <__bss_start@@Base+0x1230>
  408f45:	mov    BYTE PTR [rsp+rax*1],0x7c
  408f49:	mov    rax,QWORD PTR [rbx]
  408f4c:	mov    rcx,QWORD PTR [rbx+0x10]
  408f50:	lea    rdx,[rcx+0x1]
  408f54:	mov    QWORD PTR [rbx+0x10],rdx
  408f58:	mov    bl,BYTE PTR [rax+rcx*1]
  408f5b:	mov    edi,0x10
  408f60:	call   4031a0 <malloc@plt>
  408f65:	cmp    bl,0x7c
  408f68:	jne    409107 <next@@Base+0xea7>
  408f6e:	mov    r14,rax
  408f71:	inc    QWORD PTR [rip+0x96c8]        # 412640 <__bss_start@@Base+0x14f0>
  408f78:	mov    edi,0x3
  408f7d:	call   4031a0 <malloc@plt>
  408f82:	mov    cl,BYTE PTR [rsp]
  408f85:	mov    BYTE PTR [rax],cl
  408f87:	mov    WORD PTR [rax+0x1],0x7c
  408f8d:	mov    rdi,r14
  408f90:	mov    rsi,rax
  408f93:	call   407cc0 <init_token_boolean_op@@Base>
  408f98:	lea    rax,[rip+0x96a9]        # 412648 <__bss_start@@Base+0x14f8>
  408f9f:	jmp    4085f4 <next@@Base+0x394>
  408fa4:	inc    QWORD PTR [rip+0x93f5]        # 4123a0 <__bss_start@@Base+0x1250>
  408fab:	mov    rax,QWORD PTR [rip+0x8046]        # 410ff8 <stderr@GLIBC_2.2.5>
  408fb2:	mov    rcx,QWORD PTR [rax]
  408fb5:	lea    rdi,[rip+0x3c5c]        # 40cc18 <UnitySizeMask@@Base+0x608>
  408fbc:	mov    esi,0x20
  408fc1:	mov    edx,0x1
  408fc6:	call   403240 <fwrite@plt>
  408fcb:	mov    edi,0x1
  408fd0:	call   403230 <exit@plt>
  408fd5:	inc    QWORD PTR [rip+0x96f4]        # 4126d0 <__bss_start@@Base+0x1580>
  408fdc:	mov    edi,0x1
  408fe1:	call   403230 <exit@plt>
  408fe6:	inc    QWORD PTR [rip+0x96f3]        # 4126e0 <__bss_start@@Base+0x1590>
  408fed:	mov    edi,0x1
  408ff2:	call   403230 <exit@plt>
  408ff7:	inc    QWORD PTR [rip+0x96f2]        # 4126f0 <__bss_start@@Base+0x15a0>
  408ffe:	mov    edi,0x1
  409003:	call   403230 <exit@plt>
  409008:	inc    QWORD PTR [rip+0x96f9]        # 412708 <__bss_start@@Base+0x15b8>
  40900f:	mov    edi,0x1
  409014:	call   403230 <exit@plt>
  409019:	inc    QWORD PTR [rip+0x96f8]        # 412718 <__bss_start@@Base+0x15c8>
  409020:	mov    edi,0x1
  409025:	call   403230 <exit@plt>
  40902a:	inc    QWORD PTR [rip+0x96f7]        # 412728 <__bss_start@@Base+0x15d8>
  409031:	mov    edi,0x1
  409036:	call   403230 <exit@plt>
  40903b:	inc    QWORD PTR [rip+0x96f6]        # 412738 <__bss_start@@Base+0x15e8>
  409042:	mov    edi,0x1
  409047:	call   403230 <exit@plt>
  40904c:	inc    QWORD PTR [rip+0x96f5]        # 412748 <__bss_start@@Base+0x15f8>
  409053:	mov    edi,0x1
  409058:	call   403230 <exit@plt>
  40905d:	inc    QWORD PTR [rip+0x9634]        # 412698 <__bss_start@@Base+0x1548>
  409064:	mov    edi,0x1
  409069:	call   403230 <exit@plt>
  40906e:	inc    QWORD PTR [rip+0x96eb]        # 412760 <__bss_start@@Base+0x1610>
  409075:	mov    edi,0x1
  40907a:	call   403230 <exit@plt>
  40907f:	inc    QWORD PTR [rip+0x96ea]        # 412770 <__bss_start@@Base+0x1620>
  409086:	mov    edi,0x1
  40908b:	call   403230 <exit@plt>
  409090:	inc    QWORD PTR [rip+0x96e9]        # 412780 <__bss_start@@Base+0x1630>
  409097:	mov    edi,0x1
  40909c:	call   403230 <exit@plt>
  4090a1:	inc    QWORD PTR [rip+0x9608]        # 4126b0 <__bss_start@@Base+0x1560>
  4090a8:	mov    edi,0x1
  4090ad:	call   403230 <exit@plt>
  4090b2:	inc    QWORD PTR [rip+0x95a7]        # 412660 <__bss_start@@Base+0x1510>
  4090b9:	mov    edi,0x1
  4090be:	call   403230 <exit@plt>
  4090c3:	inc    QWORD PTR [rip+0x9546]        # 412610 <__bss_start@@Base+0x14c0>
  4090ca:	mov    edi,0x1
  4090cf:	call   403230 <exit@plt>
  4090d4:	inc    QWORD PTR [rip+0x9555]        # 412630 <__bss_start@@Base+0x14e0>
  4090db:	movsx  edx,cl
  4090de:	inc    QWORD PTR [rip+0x9573]        # 412658 <__bss_start@@Base+0x1508>
  4090e5:	mov    rax,QWORD PTR [rip+0x7f0c]        # 410ff8 <stderr@GLIBC_2.2.5>
  4090ec:	mov    rdi,QWORD PTR [rax]
  4090ef:	lea    rsi,[rip+0x3b43]        # 40cc39 <UnitySizeMask@@Base+0x629>
  4090f6:	xor    eax,eax
  4090f8:	call   403140 <fprintf@plt>
  4090fd:	mov    edi,0x1
  409102:	call   403230 <exit@plt>
  409107:	inc    QWORD PTR [rip+0x952a]        # 412638 <__bss_start@@Base+0x14e8>
  40910e:	mov    edi,0x1
  409113:	call   403230 <exit@plt>
  409118:	nop    DWORD PTR [rax+rax*1+0x0]
  409120:	push   r15
  409122:	push   r14
  409124:	push   rbx
  409125:	lea    rdi,[rip+0x3b35]        # 40cc61 <UnitySizeMask@@Base+0x651>
  40912c:	lea    rsi,[rip+0x3072]        # 40c1a5 <_IO_stdin_used@@Base+0x1a5>
  409133:	mov    edx,0xbd3d1f9d
  409138:	call   409240 <next@@Base+0xfe0>
  40913d:	xor    ebx,ebx
  40913f:	lea    r14,[rip+0x7b0a]        # 410c50 <UnitySizeMask@@Base+0x4640>
  409146:	lea    r15,[rip+0x7c23]        # 410d70 <UnitySizeMask@@Base+0x4760>
  40914d:	nop    DWORD PTR [rax]
  409150:	mov    edi,DWORD PTR [r14+rbx*2]
  409154:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  409159:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  40915e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  409163:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  409168:	call   409690 <next@@Base+0x1430>
  40916d:	mov    edi,DWORD PTR [rbx+r15*1]
  409171:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  409176:	call   409ab0 <next@@Base+0x1850>
  40917b:	add    rbx,0x10
  40917f:	cmp    rbx,0x90
  409186:	jne    409150 <next@@Base+0xef0>
  409188:	call   409ec0 <next@@Base+0x1c60>
  40918d:	pop    rbx
  40918e:	pop    r14
  409190:	pop    r15
  409192:	jmp    40a660 <next@@Base+0x2400>
  409197:	nop    WORD PTR [rax+rax*1+0x0]
  4091a0:	push   rax
  4091a1:	call   409120 <next@@Base+0xec0>
  4091a6:	vxorps xmm1,xmm1,xmm1
  4091aa:	vmovaps XMMWORD PTR [rip+0x916e],xmm1        # 412320 <__bss_start@@Base+0x11d0>
  4091b2:	vxorps xmm0,xmm0,xmm0
  4091b6:	vmovups YMMWORD PTR [rip+0x9172],ymm0        # 412330 <__bss_start@@Base+0x11e0>
  4091be:	mov    QWORD PTR [rip+0x9187],0x0        # 412350 <__bss_start@@Base+0x1200>
  4091c9:	vmovaps XMMWORD PTR [rip+0x918f],xmm1        # 412360 <__bss_start@@Base+0x1210>
  4091d1:	vmovaps XMMWORD PTR [rip+0x9197],xmm1        # 412370 <__bss_start@@Base+0x1220>
  4091d9:	vmovaps XMMWORD PTR [rip+0x919f],xmm1        # 412380 <__bss_start@@Base+0x1230>
  4091e1:	vmovups YMMWORD PTR [rip+0x91a7],ymm0        # 412390 <__bss_start@@Base+0x1240>
  4091e9:	vmovaps XMMWORD PTR [rip+0x91bf],xmm1        # 4123b0 <__bss_start@@Base+0x1260>
  4091f1:	lea    rdi,[rip+0x91c8]        # 4123c0 <__bss_start@@Base+0x1270>
  4091f8:	mov    edx,0x3f0
  4091fd:	xor    esi,esi
  4091ff:	vzeroupper 
  409202:	call   403110 <memset@plt>
  409207:	vxorps xmm0,xmm0,xmm0
  40920b:	vmovaps XMMWORD PTR [rip+0x959d],xmm0        # 4127b0 <__bss_start@@Base+0x1660>
  409213:	pop    rax
  409214:	ret    
  409215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40921f:	nop
  409220:	lea    rdi,[rip+0xfffffffffffffef9]        # 409120 <next@@Base+0xec0>
  409227:	lea    rsi,[rip+0xffffffffffffff72]        # 4091a0 <next@@Base+0xf40>
  40922e:	jmp    40aa40 <__gcov_flush@@Base+0xb0>
  409233:	nop
  409234:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40923e:	xchg   ax,ax
  409240:	push   rbp
  409241:	push   r15
  409243:	push   r14
  409245:	push   r13
  409247:	push   r12
  409249:	push   rbx
  40924a:	sub    rsp,0x18
  40924e:	mov    r14d,edx
  409251:	mov    r15,rsi
  409254:	mov    r12,rdi
  409257:	lea    rdi,[rsp+0xc]
  40925c:	lea    rsi,[rsp+0x10]
  409261:	call   40ae70 <__gcov_flush@@Base+0x4e0>
  409266:	test   rax,rax
  409269:	je     4092a3 <next@@Base+0x1043>
  40926b:	mov    rbx,rax
  40926e:	mov    r13,QWORD PTR [rsp+0x10]
  409273:	mov    rdi,r12
  409276:	call   4030c0 <strlen@plt>
  40927b:	lea    rdi,[rax+r13*1]
  40927f:	add    rdi,0x2
  409283:	call   4031a0 <malloc@plt>
  409288:	mov    rbp,rax
  40928b:	mov    r8d,DWORD PTR [rsp+0xc]
  409290:	mov    rdi,rax
  409293:	mov    rsi,r12
  409296:	mov    rdx,rbx
  409299:	mov    rcx,r13
  40929c:	call   40af00 <__gcov_flush@@Base+0x570>
  4092a1:	jmp    4092ae <next@@Base+0x104e>
  4092a3:	mov    rdi,r12
  4092a6:	call   403250 <strdup@plt>
  4092ab:	mov    rbp,rax
  4092ae:	mov    QWORD PTR [rip+0x950b],rbp        # 4127c0 <__bss_start@@Base+0x1670>
  4092b5:	mov    BYTE PTR [rip+0x950c],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  4092bc:	mov    rdi,rbp
  4092bf:	mov    esi,0x2
  4092c4:	xor    eax,eax
  4092c6:	call   403210 <open@plt>
  4092cb:	mov    DWORD PTR [rip+0x7e77],eax        # 411148 <__data_start@@Base+0x10>
  4092d1:	cmp    eax,0xffffffff
  4092d4:	je     4092df <next@@Base+0x107f>
  4092d6:	lea    rbx,[rip+0x3a5a]        # 40cd37 <UnitySizeMask@@Base+0x727>
  4092dd:	jmp    409343 <next@@Base+0x10e3>
  4092df:	mov    BYTE PTR [rip+0x94e2],0x1        # 4127c8 <__bss_start@@Base+0x1678>
  4092e6:	mov    rdi,QWORD PTR [rip+0x94d3]        # 4127c0 <__bss_start@@Base+0x1670>
  4092ed:	mov    esi,0x42
  4092f2:	mov    edx,0x1a4
  4092f7:	xor    eax,eax
  4092f9:	call   403210 <open@plt>
  4092fe:	mov    DWORD PTR [rip+0x7e44],eax        # 411148 <__data_start@@Base+0x10>
  409304:	lea    rbx,[rip+0x3a30]        # 40cd3b <UnitySizeMask@@Base+0x72b>
  40930b:	cmp    eax,0xffffffff
  40930e:	jne    409343 <next@@Base+0x10e3>
  409310:	mov    rdi,QWORD PTR [rip+0x94a9]        # 4127c0 <__bss_start@@Base+0x1670>
  409317:	call   40ab30 <__gcov_flush@@Base+0x1a0>
  40931c:	mov    rdi,QWORD PTR [rip+0x949d]        # 4127c0 <__bss_start@@Base+0x1670>
  409323:	mov    esi,0x42
  409328:	mov    edx,0x1a4
  40932d:	xor    eax,eax
  40932f:	call   403210 <open@plt>
  409334:	mov    DWORD PTR [rip+0x7e0e],eax        # 411148 <__data_start@@Base+0x10>
  40933a:	cmp    eax,0xffffffff
  40933d:	je     409628 <next@@Base+0x13c8>
  409343:	mov    edi,eax
  409345:	call   40abe0 <__gcov_flush@@Base+0x250>
  40934a:	mov    edi,DWORD PTR [rip+0x7df8]        # 411148 <__data_start@@Base+0x10>
  409350:	mov    rsi,rbx
  409353:	call   4031e0 <fdopen@plt>
  409358:	mov    QWORD PTR [rip+0x9471],rax        # 4127d0 <__bss_start@@Base+0x1680>
  40935f:	mov    QWORD PTR [rip+0x946e],0x0        # 4127d8 <__bss_start@@Base+0x1688>
  40936a:	mov    QWORD PTR [rip+0x946b],0x0        # 4127e0 <__bss_start@@Base+0x1690>
  409375:	mov    QWORD PTR [rip+0x9468],0x0        # 4127e8 <__bss_start@@Base+0x1698>
  409380:	mov    ebx,0x20000
  409385:	cmp    BYTE PTR [rip+0x943c],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40938c:	je     409429 <next@@Base+0x11c9>
  409392:	mov    rdi,rbx
  409395:	call   4031a0 <malloc@plt>
  40939a:	mov    r12,rax
  40939d:	mov    QWORD PTR [rip+0x9434],rax        # 4127d8 <__bss_start@@Base+0x1688>
  4093a4:	mov    QWORD PTR [rip+0x9435],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  4093ab:	mov    edx,0x20000
  4093b0:	mov    rdi,r12
  4093b3:	xor    esi,esi
  4093b5:	call   403110 <memset@plt>
  4093ba:	mov    rbx,QWORD PTR [rip+0x9427]        # 4127e8 <__bss_start@@Base+0x1698>
  4093c1:	lea    rax,[rbx+0x4]
  4093c5:	cmp    rax,QWORD PTR [rip+0x9414]        # 4127e0 <__bss_start@@Base+0x1690>
  4093cc:	jbe    4094c7 <next@@Base+0x1267>
  4093d2:	add    rbx,0x20003
  4093d9:	and    rbx,0xfffffffffffe0000
  4093e0:	mov    rdi,r12
  4093e3:	mov    rsi,rbx
  4093e6:	call   4031d0 <realloc@plt>
  4093eb:	mov    r12,rax
  4093ee:	mov    QWORD PTR [rip+0x93e3],rax        # 4127d8 <__bss_start@@Base+0x1688>
  4093f5:	mov    QWORD PTR [rip+0x93e4],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  4093fc:	mov    al,BYTE PTR [rip+0x93c6]        # 4127c8 <__bss_start@@Base+0x1678>
  409402:	mov    rbp,QWORD PTR [rip+0x93df]        # 4127e8 <__bss_start@@Base+0x1698>
  409409:	mov    DWORD PTR [r12+rbp*1],0x67636461
  409411:	lea    rbx,[rbp+0x4]
  409415:	mov    QWORD PTR [rip+0x93cc],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40941c:	cmp    al,0x1
  40941e:	jne    4094ad <next@@Base+0x124d>
  409424:	jmp    4094e1 <next@@Base+0x1281>
  409429:	mov    rdi,rax
  40942c:	xor    esi,esi
  40942e:	mov    edx,0x2
  409433:	call   4031c0 <fseek@plt>
  409438:	mov    rdi,QWORD PTR [rip+0x9391]        # 4127d0 <__bss_start@@Base+0x1680>
  40943f:	call   403150 <ftell@plt>
  409444:	mov    QWORD PTR [rip+0x93bd],rax        # 412808 <__bss_start@@Base+0x16b8>
  40944b:	test   rax,rax
  40944e:	je     4095e0 <next@@Base+0x1380>
  409454:	mov    r8d,DWORD PTR [rip+0x7ced]        # 411148 <__data_start@@Base+0x10>
  40945b:	xor    edi,edi
  40945d:	mov    rsi,rax
  409460:	mov    edx,0x3
  409465:	mov    ecx,0x1
  40946a:	xor    r9d,r9d
  40946d:	call   4030d0 <mmap@plt>
  409472:	mov    QWORD PTR [rip+0x935f],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409479:	cmp    rax,0xffffffffffffffff
  40947d:	je     4095ac <next@@Base+0x134c>
  409483:	mov    r12,rax
  409486:	cmp    BYTE PTR [rip+0x933b],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40948d:	jne    4093ba <next@@Base+0x115a>
  409493:	mov    rbx,QWORD PTR [rip+0x934e]        # 4127e8 <__bss_start@@Base+0x1698>
  40949a:	mov    DWORD PTR [r12+rbx*1],0x67636461
  4094a2:	add    rbx,0x4
  4094a6:	mov    QWORD PTR [rip+0x933b],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4094ad:	mov    eax,DWORD PTR [r15]
  4094b0:	mov    DWORD PTR [r12+rbx*1],eax
  4094b4:	add    rbx,0x4
  4094b8:	mov    QWORD PTR [rip+0x9329],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4094bf:	mov    rax,rbx
  4094c2:	jmp    40958e <next@@Base+0x132e>
  4094c7:	mov    rbp,QWORD PTR [rip+0x931a]        # 4127e8 <__bss_start@@Base+0x1698>
  4094ce:	mov    DWORD PTR [r12+rbp*1],0x67636461
  4094d6:	lea    rbx,[rbp+0x4]
  4094da:	mov    QWORD PTR [rip+0x9307],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4094e1:	lea    rax,[rbp+0x8]
  4094e5:	cmp    rax,QWORD PTR [rip+0x92f4]        # 4127e0 <__bss_start@@Base+0x1690>
  4094ec:	jbe    40953e <next@@Base+0x12de>
  4094ee:	add    rbp,0x20007
  4094f5:	and    rbp,0xfffffffffffe0000
  4094fc:	mov    rdi,r12
  4094ff:	mov    rsi,rbp
  409502:	call   4031d0 <realloc@plt>
  409507:	mov    r12,rax
  40950a:	mov    QWORD PTR [rip+0x92c7],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409511:	mov    QWORD PTR [rip+0x92c8],rbp        # 4127e0 <__bss_start@@Base+0x1690>
  409518:	mov    rbx,QWORD PTR [rip+0x92c9]        # 4127e8 <__bss_start@@Base+0x1698>
  40951f:	mov    cl,BYTE PTR [rip+0x92a3]        # 4127c8 <__bss_start@@Base+0x1678>
  409525:	mov    eax,DWORD PTR [r15]
  409528:	mov    DWORD PTR [r12+rbx*1],eax
  40952c:	lea    rax,[rbx+0x4]
  409530:	mov    QWORD PTR [rip+0x92b1],rax        # 4127e8 <__bss_start@@Base+0x1698>
  409537:	cmp    cl,0x1
  40953a:	je     409550 <next@@Base+0x12f0>
  40953c:	jmp    40958e <next@@Base+0x132e>
  40953e:	mov    eax,DWORD PTR [r15]
  409541:	mov    DWORD PTR [r12+rbx*1],eax
  409545:	lea    rax,[rbx+0x4]
  409549:	mov    QWORD PTR [rip+0x9298],rax        # 4127e8 <__bss_start@@Base+0x1698>
  409550:	lea    rcx,[rbx+0x8]
  409554:	cmp    rcx,QWORD PTR [rip+0x9285]        # 4127e0 <__bss_start@@Base+0x1690>
  40955b:	jbe    40958e <next@@Base+0x132e>
  40955d:	add    rbx,0x20007
  409564:	and    rbx,0xfffffffffffe0000
  40956b:	mov    rdi,r12
  40956e:	mov    rsi,rbx
  409571:	call   4031d0 <realloc@plt>
  409576:	mov    r12,rax
  409579:	mov    QWORD PTR [rip+0x9258],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409580:	mov    QWORD PTR [rip+0x9259],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409587:	mov    rax,QWORD PTR [rip+0x925a]        # 4127e8 <__bss_start@@Base+0x1698>
  40958e:	mov    DWORD PTR [r12+rax*1],r14d
  409592:	add    rax,0x4
  409596:	mov    QWORD PTR [rip+0x924b],rax        # 4127e8 <__bss_start@@Base+0x1698>
  40959d:	add    rsp,0x18
  4095a1:	pop    rbx
  4095a2:	pop    r12
  4095a4:	pop    r13
  4095a6:	pop    r14
  4095a8:	pop    r15
  4095aa:	pop    rbp
  4095ab:	ret    
  4095ac:	call   403050 <__errno_location@plt>
  4095b1:	mov    edi,DWORD PTR [rax]
  4095b3:	mov    rax,QWORD PTR [rip+0x7a3e]        # 410ff8 <stderr@GLIBC_2.2.5>
  4095ba:	mov    rbx,QWORD PTR [rax]
  4095bd:	mov    rbp,QWORD PTR [rip+0x91fc]        # 4127c0 <__bss_start@@Base+0x1670>
  4095c4:	call   403260 <strerror@plt>
  4095c9:	lea    rsi,[rip+0x38c9]        # 40ce99 <UnitySizeMask@@Base+0x889>
  4095d0:	mov    rdi,rbx
  4095d3:	mov    rdx,rbp
  4095d6:	mov    rcx,rax
  4095d9:	xor    eax,eax
  4095db:	call   403140 <fprintf@plt>
  4095e0:	mov    BYTE PTR [rip+0x91e1],0x1        # 4127c8 <__bss_start@@Base+0x1678>
  4095e7:	mov    QWORD PTR [rip+0x91e6],0x0        # 4127d8 <__bss_start@@Base+0x1688>
  4095f2:	mov    QWORD PTR [rip+0x91e3],0x0        # 4127e0 <__bss_start@@Base+0x1690>
  4095fd:	mov    rbx,QWORD PTR [rip+0x91e4]        # 4127e8 <__bss_start@@Base+0x1698>
  409604:	cmp    rbx,0xfffffffffffe0000
  40960b:	jne    409615 <next@@Base+0x13b5>
  40960d:	xor    r12d,r12d
  409610:	jmp    4093ab <next@@Base+0x114b>
  409615:	add    rbx,0x3ffff
  40961c:	and    rbx,0xfffffffffffe0000
  409623:	jmp    409392 <next@@Base+0x1132>
  409628:	call   403050 <__errno_location@plt>
  40962d:	mov    edi,DWORD PTR [rax]
  40962f:	mov    rax,QWORD PTR [rip+0x79c2]        # 410ff8 <stderr@GLIBC_2.2.5>
  409636:	mov    rbx,QWORD PTR [rax]
  409639:	mov    rbp,QWORD PTR [rip+0x9180]        # 4127c0 <__bss_start@@Base+0x1670>
  409640:	call   403260 <strerror@plt>
  409645:	lea    rsi,[rip+0x36f3]        # 40cd3f <UnitySizeMask@@Base+0x72f>
  40964c:	mov    rdi,rbx
  40964f:	mov    rdx,rbp
  409652:	mov    rcx,rax
  409655:	xor    eax,eax
  409657:	call   403140 <fprintf@plt>
  40965c:	jmp    40959d <next@@Base+0x133d>
  409661:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40966b:	nop    DWORD PTR [rax+rax*1+0x0]
  409670:	mov    eax,DWORD PTR [rdi]
  409672:	mov    ecx,0xffffffff
  409677:	cmp    rax,rcx
  40967a:	je     409689 <next@@Base+0x1429>
  40967c:	mov    rax,QWORD PTR [rsi+rax*8]
  409680:	test   rax,rax
  409683:	je     409689 <next@@Base+0x1429>
  409685:	add    QWORD PTR [rax],0x1
  409689:	ret    
  40968a:	nop    WORD PTR [rax+rax*1+0x0]
  409690:	push   rbp
  409691:	push   r15
  409693:	push   r14
  409695:	push   r13
  409697:	push   r12
  409699:	push   rbx
  40969a:	sub    rsp,0x18
  40969e:	mov    r15d,ecx
  4096a1:	xor    r14d,r14d
  4096a4:	test   r15b,r15b
  4096a7:	setne  al
  4096aa:	cmp    QWORD PTR [rip+0x911e],0x0        # 4127d0 <__bss_start@@Base+0x1680>
  4096b2:	je     4099d3 <next@@Base+0x1773>
  4096b8:	mov    DWORD PTR [rsp+0x4],edi
  4096bc:	mov    DWORD PTR [rsp+0x14],edx
  4096c0:	mov    DWORD PTR [rsp],r8d
  4096c4:	mov    QWORD PTR [rsp+0x8],rsi
  4096c9:	mov    r14b,al
  4096cc:	cmp    BYTE PTR [rip+0x90f5],0x1        # 4127c8 <__bss_start@@Base+0x1678>
  4096d3:	jne    409714 <next@@Base+0x14b4>
  4096d5:	mov    rbx,QWORD PTR [rip+0x910c]        # 4127e8 <__bss_start@@Base+0x1698>
  4096dc:	lea    rax,[rbx+0x4]
  4096e0:	cmp    rax,QWORD PTR [rip+0x90f9]        # 4127e0 <__bss_start@@Base+0x1690>
  4096e7:	jbe    409714 <next@@Base+0x14b4>
  4096e9:	add    rbx,0x20003
  4096f0:	and    rbx,0xfffffffffffe0000
  4096f7:	mov    rdi,QWORD PTR [rip+0x90da]        # 4127d8 <__bss_start@@Base+0x1688>
  4096fe:	mov    rsi,rbx
  409701:	call   4031d0 <realloc@plt>
  409706:	mov    QWORD PTR [rip+0x90cb],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40970d:	mov    QWORD PTR [rip+0x90cc],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409714:	or     r14d,0x2
  409718:	mov    r12,QWORD PTR [rip+0x90b9]        # 4127d8 <__bss_start@@Base+0x1688>
  40971f:	mov    rbp,QWORD PTR [rip+0x90c2]        # 4127e8 <__bss_start@@Base+0x1698>
  409726:	mov    DWORD PTR [r12+rbp*1],0x1000000
  40972e:	lea    r13,[rbp+0x4]
  409732:	mov    QWORD PTR [rip+0x90af],r13        # 4127e8 <__bss_start@@Base+0x1698>
  409739:	mov    rdi,QWORD PTR [rsp+0x8]
  40973e:	test   rdi,rdi
  409741:	je     409754 <next@@Base+0x14f4>
  409743:	call   4030c0 <strlen@plt>
  409748:	shr    rax,0x2
  40974c:	lea    r14d,[r14+rax*1]
  409750:	add    r14d,0x2
  409754:	cmp    BYTE PTR [rip+0x906d],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40975b:	je     4097bd <next@@Base+0x155d>
  40975d:	lea    rbx,[rbp+0x8]
  409761:	cmp    rbx,QWORD PTR [rip+0x9078]        # 4127e0 <__bss_start@@Base+0x1690>
  409768:	jbe    4099e2 <next@@Base+0x1782>
  40976e:	add    rbp,0x20007
  409775:	and    rbp,0xfffffffffffe0000
  40977c:	mov    rdi,r12
  40977f:	mov    rsi,rbp
  409782:	call   4031d0 <realloc@plt>
  409787:	mov    r12,rax
  40978a:	mov    QWORD PTR [rip+0x9047],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409791:	mov    QWORD PTR [rip+0x9048],rbp        # 4127e0 <__bss_start@@Base+0x1690>
  409798:	mov    r13,QWORD PTR [rip+0x9049]        # 4127e8 <__bss_start@@Base+0x1698>
  40979f:	mov    al,BYTE PTR [rip+0x9023]        # 4127c8 <__bss_start@@Base+0x1678>
  4097a5:	mov    DWORD PTR [r12+r13*1],r14d
  4097a9:	lea    rbx,[r13+0x4]
  4097ad:	mov    QWORD PTR [rip+0x9034],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4097b4:	cmp    al,0x1
  4097b6:	jne    4097d0 <next@@Base+0x1570>
  4097b8:	jmp    4099ee <next@@Base+0x178e>
  4097bd:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  4097c2:	add    rbp,0x8
  4097c6:	mov    QWORD PTR [rip+0x901b],rbp        # 4127e8 <__bss_start@@Base+0x1698>
  4097cd:	mov    rbx,rbp
  4097d0:	mov    eax,DWORD PTR [rsp+0x4]
  4097d4:	mov    DWORD PTR [r12+rbx*1],eax
  4097d8:	add    rbx,0x4
  4097dc:	mov    QWORD PTR [rip+0x9005],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4097e3:	mov    r13,rbx
  4097e6:	lea    rbp,[r13+0x4]
  4097ea:	mov    eax,DWORD PTR [rsp+0x14]
  4097ee:	mov    DWORD PTR [r12+r13*1],eax
  4097f2:	mov    QWORD PTR [rip+0x8fef],rbp        # 4127e8 <__bss_start@@Base+0x1698>
  4097f9:	test   r15b,r15b
  4097fc:	je     409866 <next@@Base+0x1606>
  4097fe:	cmp    BYTE PTR [rip+0x8fc3],0x1        # 4127c8 <__bss_start@@Base+0x1678>
  409805:	jne    409845 <next@@Base+0x15e5>
  409807:	lea    rax,[r13+0x8]
  40980b:	cmp    rax,QWORD PTR [rip+0x8fce]        # 4127e0 <__bss_start@@Base+0x1690>
  409812:	jbe    409845 <next@@Base+0x15e5>
  409814:	add    r13,0x20007
  40981b:	and    r13,0xfffffffffffe0000
  409822:	mov    rdi,r12
  409825:	mov    rsi,r13
  409828:	call   4031d0 <realloc@plt>
  40982d:	mov    r12,rax
  409830:	mov    QWORD PTR [rip+0x8fa1],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409837:	mov    QWORD PTR [rip+0x8fa2],r13        # 4127e0 <__bss_start@@Base+0x1690>
  40983e:	mov    rbp,QWORD PTR [rip+0x8fa3]        # 4127e8 <__bss_start@@Base+0x1698>
  409845:	mov    r13,QWORD PTR [rsp+0x8]
  40984a:	mov    eax,DWORD PTR [rsp]
  40984d:	mov    DWORD PTR [r12+rbp*1],eax
  409851:	add    rbp,0x4
  409855:	mov    QWORD PTR [rip+0x8f8c],rbp        # 4127e8 <__bss_start@@Base+0x1698>
  40985c:	test   r13,r13
  40985f:	jne    409874 <next@@Base+0x1614>
  409861:	jmp    4099d3 <next@@Base+0x1773>
  409866:	mov    r13,QWORD PTR [rsp+0x8]
  40986b:	test   r13,r13
  40986e:	je     4099d3 <next@@Base+0x1773>
  409874:	mov    rdi,r13
  409877:	call   4030c0 <strlen@plt>
  40987c:	mov    rbx,rax
  40987f:	shr    rbx,0x2
  409883:	add    ebx,0x1
  409886:	cmp    BYTE PTR [rip+0x8f3b],0x1        # 4127c8 <__bss_start@@Base+0x1678>
  40988d:	jne    4098d9 <next@@Base+0x1679>
  40988f:	lea    rax,[rbp+0x4]
  409893:	mov    r14b,0x1
  409896:	cmp    rax,QWORD PTR [rip+0x8f43]        # 4127e0 <__bss_start@@Base+0x1690>
  40989d:	jbe    4098dc <next@@Base+0x167c>
  40989f:	add    rbp,0x20003
  4098a6:	and    rbp,0xfffffffffffe0000
  4098ad:	mov    rdi,r12
  4098b0:	mov    rsi,rbp
  4098b3:	call   4031d0 <realloc@plt>
  4098b8:	mov    r12,rax
  4098bb:	mov    QWORD PTR [rip+0x8f16],rax        # 4127d8 <__bss_start@@Base+0x1688>
  4098c2:	mov    QWORD PTR [rip+0x8f17],rbp        # 4127e0 <__bss_start@@Base+0x1690>
  4098c9:	mov    r14b,BYTE PTR [rip+0x8ef8]        # 4127c8 <__bss_start@@Base+0x1678>
  4098d0:	mov    rbp,QWORD PTR [rip+0x8f11]        # 4127e8 <__bss_start@@Base+0x1698>
  4098d7:	jmp    4098dc <next@@Base+0x167c>
  4098d9:	xor    r14d,r14d
  4098dc:	mov    DWORD PTR [r12+rbp*1],ebx
  4098e0:	add    rbp,0x4
  4098e4:	mov    QWORD PTR [rip+0x8efd],rbp        # 4127e8 <__bss_start@@Base+0x1698>
  4098eb:	mov    rdi,r13
  4098ee:	call   4030c0 <strlen@plt>
  4098f3:	mov    rbx,rax
  4098f6:	test   r14b,0x1
  4098fa:	je     409946 <next@@Base+0x16e6>
  4098fc:	lea    r15,[rbx+rbp*1]
  409900:	mov    r14b,0x1
  409903:	cmp    r15,QWORD PTR [rip+0x8ed6]        # 4127e0 <__bss_start@@Base+0x1690>
  40990a:	jbe    409949 <next@@Base+0x16e9>
  40990c:	add    r15,0x1ffff
  409913:	and    r15,0xfffffffffffe0000
  40991a:	mov    rdi,r12
  40991d:	mov    rsi,r15
  409920:	call   4031d0 <realloc@plt>
  409925:	mov    r12,rax
  409928:	mov    QWORD PTR [rip+0x8ea9],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40992f:	mov    QWORD PTR [rip+0x8eaa],r15        # 4127e0 <__bss_start@@Base+0x1690>
  409936:	mov    rbp,QWORD PTR [rip+0x8eab]        # 4127e8 <__bss_start@@Base+0x1698>
  40993d:	mov    r14b,BYTE PTR [rip+0x8e84]        # 4127c8 <__bss_start@@Base+0x1678>
  409944:	jmp    409949 <next@@Base+0x16e9>
  409946:	xor    r14d,r14d
  409949:	lea    rdi,[r12+rbp*1]
  40994d:	mov    rsi,r13
  409950:	mov    rdx,rbx
  409953:	call   403170 <memcpy@plt>
  409958:	add    rbx,rbp
  40995b:	mov    QWORD PTR [rip+0x8e86],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409962:	mov    rdi,r13
  409965:	call   4030c0 <strlen@plt>
  40996a:	and    eax,0x3
  40996d:	mov    ebp,0x4
  409972:	sub    rbp,rax
  409975:	test   r14b,0x1
  409979:	je     4099b9 <next@@Base+0x1759>
  40997b:	lea    r14,[rbx+rbp*1]
  40997f:	cmp    r14,QWORD PTR [rip+0x8e5a]        # 4127e0 <__bss_start@@Base+0x1690>
  409986:	jbe    4099b9 <next@@Base+0x1759>
  409988:	add    r14,0x1ffff
  40998f:	and    r14,0xfffffffffffe0000
  409996:	mov    rdi,r12
  409999:	mov    rsi,r14
  40999c:	call   4031d0 <realloc@plt>
  4099a1:	mov    r12,rax
  4099a4:	mov    QWORD PTR [rip+0x8e2d],rax        # 4127d8 <__bss_start@@Base+0x1688>
  4099ab:	mov    QWORD PTR [rip+0x8e2e],r14        # 4127e0 <__bss_start@@Base+0x1690>
  4099b2:	mov    rbx,QWORD PTR [rip+0x8e2f]        # 4127e8 <__bss_start@@Base+0x1698>
  4099b9:	add    r12,rbx
  4099bc:	mov    rdi,r12
  4099bf:	xor    esi,esi
  4099c1:	mov    rdx,rbp
  4099c4:	call   403110 <memset@plt>
  4099c9:	add    rbx,rbp
  4099cc:	mov    QWORD PTR [rip+0x8e15],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4099d3:	add    rsp,0x18
  4099d7:	pop    rbx
  4099d8:	pop    r12
  4099da:	pop    r13
  4099dc:	pop    r14
  4099de:	pop    r15
  4099e0:	pop    rbp
  4099e1:	ret    
  4099e2:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  4099e7:	mov    QWORD PTR [rip+0x8dfa],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  4099ee:	lea    rax,[r13+0x8]
  4099f2:	cmp    rax,QWORD PTR [rip+0x8de7]        # 4127e0 <__bss_start@@Base+0x1690>
  4099f9:	jbe    409a4f <next@@Base+0x17ef>
  4099fb:	add    r13,0x20007
  409a02:	and    r13,0xfffffffffffe0000
  409a09:	mov    rdi,r12
  409a0c:	mov    rsi,r13
  409a0f:	call   4031d0 <realloc@plt>
  409a14:	mov    r12,rax
  409a17:	mov    QWORD PTR [rip+0x8dba],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409a1e:	mov    QWORD PTR [rip+0x8dbb],r13        # 4127e0 <__bss_start@@Base+0x1690>
  409a25:	mov    rbx,QWORD PTR [rip+0x8dbc]        # 4127e8 <__bss_start@@Base+0x1698>
  409a2c:	mov    al,BYTE PTR [rip+0x8d96]        # 4127c8 <__bss_start@@Base+0x1678>
  409a32:	mov    ecx,DWORD PTR [rsp+0x4]
  409a36:	mov    DWORD PTR [r12+rbx*1],ecx
  409a3a:	lea    r13,[rbx+0x4]
  409a3e:	mov    QWORD PTR [rip+0x8da3],r13        # 4127e8 <__bss_start@@Base+0x1698>
  409a45:	cmp    al,0x1
  409a47:	jne    4097e6 <next@@Base+0x1586>
  409a4d:	jmp    409a62 <next@@Base+0x1802>
  409a4f:	mov    eax,DWORD PTR [rsp+0x4]
  409a53:	mov    DWORD PTR [r12+rbx*1],eax
  409a57:	lea    r13,[rbx+0x4]
  409a5b:	mov    QWORD PTR [rip+0x8d86],r13        # 4127e8 <__bss_start@@Base+0x1698>
  409a62:	lea    rax,[rbx+0x8]
  409a66:	cmp    rax,QWORD PTR [rip+0x8d73]        # 4127e0 <__bss_start@@Base+0x1690>
  409a6d:	jbe    4097e6 <next@@Base+0x1586>
  409a73:	add    rbx,0x20007
  409a7a:	and    rbx,0xfffffffffffe0000
  409a81:	mov    rdi,r12
  409a84:	mov    rsi,rbx
  409a87:	call   4031d0 <realloc@plt>
  409a8c:	mov    r12,rax
  409a8f:	mov    QWORD PTR [rip+0x8d42],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409a96:	mov    QWORD PTR [rip+0x8d43],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409a9d:	mov    r13,QWORD PTR [rip+0x8d44]        # 4127e8 <__bss_start@@Base+0x1698>
  409aa4:	jmp    4097e6 <next@@Base+0x1586>
  409aa9:	nop    DWORD PTR [rax+0x0]
  409ab0:	push   rbp
  409ab1:	push   r15
  409ab3:	push   r14
  409ab5:	push   r13
  409ab7:	push   r12
  409ab9:	push   rbx
  409aba:	sub    rsp,0x18
  409abe:	cmp    QWORD PTR [rip+0x8d0a],0x0        # 4127d0 <__bss_start@@Base+0x1680>
  409ac6:	je     409b6a <next@@Base+0x190a>
  409acc:	mov    r13d,edi
  409acf:	mov    r14,QWORD PTR [rip+0x8d12]        # 4127e8 <__bss_start@@Base+0x1698>
  409ad6:	cmp    BYTE PTR [rip+0x8ceb],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  409add:	mov    QWORD PTR [rsp+0x8],rsi
  409ae2:	je     409b79 <next@@Base+0x1919>
  409ae8:	lea    rbx,[r14+0x4]
  409aec:	cmp    rbx,QWORD PTR [rip+0x8ced]        # 4127e0 <__bss_start@@Base+0x1690>
  409af3:	jbe    409c01 <next@@Base+0x19a1>
  409af9:	add    r14,0x20003
  409b00:	and    r14,0xfffffffffffe0000
  409b07:	mov    rdi,QWORD PTR [rip+0x8cca]        # 4127d8 <__bss_start@@Base+0x1688>
  409b0e:	mov    rsi,r14
  409b11:	call   4031d0 <realloc@plt>
  409b16:	mov    rsi,QWORD PTR [rsp+0x8]
  409b1b:	mov    r15,rax
  409b1e:	mov    QWORD PTR [rip+0x8cb3],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409b25:	mov    QWORD PTR [rip+0x8cb4],r14        # 4127e0 <__bss_start@@Base+0x1690>
  409b2c:	mov    r14,QWORD PTR [rip+0x8cb5]        # 4127e8 <__bss_start@@Base+0x1698>
  409b33:	mov    al,BYTE PTR [rip+0x8c8f]        # 4127c8 <__bss_start@@Base+0x1678>
  409b39:	lea    rbx,[r14+0x4]
  409b3d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  409b45:	mov    QWORD PTR [rip+0x8c9c],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409b4c:	lea    ebp,[r13+r13*1+0x0]
  409b51:	xor    ecx,ecx
  409b53:	mov    QWORD PTR [rsp],rcx
  409b57:	mov    r12d,0x0
  409b5d:	cmp    al,0x1
  409b5f:	je     409c1c <next@@Base+0x19bc>
  409b65:	jmp    409d4f <next@@Base+0x1aef>
  409b6a:	add    rsp,0x18
  409b6e:	pop    rbx
  409b6f:	pop    r12
  409b71:	pop    r13
  409b73:	pop    r14
  409b75:	pop    r15
  409b77:	pop    rbp
  409b78:	ret    
  409b79:	mov    r15,QWORD PTR [rip+0x8c58]        # 4127d8 <__bss_start@@Base+0x1688>
  409b80:	mov    ecx,DWORD PTR [r15+r14*1]
  409b84:	lea    rbx,[r14+0x4]
  409b88:	mov    QWORD PTR [rip+0x8c59],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409b8f:	cmp    ecx,0xffffffff
  409b92:	je     409c75 <next@@Base+0x1a15>
  409b98:	cmp    ecx,0x1a10000
  409b9e:	jne    409c83 <next@@Base+0x1a23>
  409ba4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  409ba9:	lea    rbp,[r14+0x8]
  409bad:	mov    QWORD PTR [rip+0x8c34],rbp        # 4127e8 <__bss_start@@Base+0x1698>
  409bb4:	cmp    ecx,0xffffffff
  409bb7:	je     409c9d <next@@Base+0x1a3d>
  409bbd:	mov    eax,ecx
  409bbf:	shr    eax,1
  409bc1:	cmp    eax,r13d
  409bc4:	jne    409c9d <next@@Base+0x1a3d>
  409bca:	mov    r12d,r13d
  409bcd:	lea    rdi,[r12*8+0x0]
  409bd5:	call   4031a0 <malloc@plt>
  409bda:	test   r13d,r13d
  409bdd:	mov    rcx,rax
  409be0:	mov    QWORD PTR [rsp],rax
  409be4:	je     409cca <next@@Base+0x1a6a>
  409bea:	mov    eax,r12d
  409bed:	and    eax,0x1
  409bf0:	cmp    r13d,0x1
  409bf4:	jne    409cd4 <next@@Base+0x1a74>
  409bfa:	xor    ecx,ecx
  409bfc:	jmp    409d13 <next@@Base+0x1ab3>
  409c01:	mov    r15,QWORD PTR [rip+0x8bd0]        # 4127d8 <__bss_start@@Base+0x1688>
  409c08:	mov    DWORD PTR [r15+r14*1],0x1a10000
  409c10:	mov    QWORD PTR [rip+0x8bd1],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409c17:	lea    ebp,[r13+r13*1+0x0]
  409c1c:	lea    rax,[r14+0x8]
  409c20:	cmp    rax,QWORD PTR [rip+0x8bb9]        # 4127e0 <__bss_start@@Base+0x1690>
  409c27:	jbe    409c67 <next@@Base+0x1a07>
  409c29:	add    r14,0x20007
  409c30:	and    r14,0xfffffffffffe0000
  409c37:	mov    rdi,r15
  409c3a:	mov    rsi,r14
  409c3d:	call   4031d0 <realloc@plt>
  409c42:	mov    rsi,QWORD PTR [rsp+0x8]
  409c47:	mov    r15,rax
  409c4a:	mov    QWORD PTR [rip+0x8b87],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409c51:	mov    QWORD PTR [rip+0x8b88],r14        # 4127e0 <__bss_start@@Base+0x1690>
  409c58:	xor    eax,eax
  409c5a:	mov    QWORD PTR [rsp],rax
  409c5e:	mov    rbx,QWORD PTR [rip+0x8b83]        # 4127e8 <__bss_start@@Base+0x1698>
  409c65:	jmp    409c6d <next@@Base+0x1a0d>
  409c67:	xor    eax,eax
  409c69:	mov    QWORD PTR [rsp],rax
  409c6d:	xor    r12d,r12d
  409c70:	jmp    409d4f <next@@Base+0x1aef>
  409c75:	xor    r12d,r12d
  409c78:	xor    eax,eax
  409c7a:	mov    QWORD PTR [rsp],rax
  409c7e:	jmp    409d34 <next@@Base+0x1ad4>
  409c83:	mov    rax,QWORD PTR [rip+0x736e]        # 410ff8 <stderr@GLIBC_2.2.5>
  409c8a:	mov    rdi,QWORD PTR [rax]
  409c8d:	mov    rdx,QWORD PTR [rip+0x8b2c]        # 4127c0 <__bss_start@@Base+0x1670>
  409c94:	lea    rsi,[rip+0x30c4]        # 40cd5f <UnitySizeMask@@Base+0x74f>
  409c9b:	jmp    409cb5 <next@@Base+0x1a55>
  409c9d:	mov    rax,QWORD PTR [rip+0x7354]        # 410ff8 <stderr@GLIBC_2.2.5>
  409ca4:	mov    rdi,QWORD PTR [rax]
  409ca7:	mov    rdx,QWORD PTR [rip+0x8b12]        # 4127c0 <__bss_start@@Base+0x1670>
  409cae:	lea    rsi,[rip+0x30f4]        # 40cda9 <UnitySizeMask@@Base+0x799>
  409cb5:	xor    eax,eax
  409cb7:	add    rsp,0x18
  409cbb:	pop    rbx
  409cbc:	pop    r12
  409cbe:	pop    r13
  409cc0:	pop    r14
  409cc2:	pop    r15
  409cc4:	pop    rbp
  409cc5:	jmp    403140 <fprintf@plt>
  409cca:	mov    r12,rax
  409ccd:	mov    rsi,QWORD PTR [rsp+0x8]
  409cd2:	jmp    409d34 <next@@Base+0x1ad4>
  409cd4:	mov    rbp,0xfffffffffffffff8
  409cdb:	sub    rbp,r14
  409cde:	lea    rdx,[r14+r15*1]
  409ce2:	add    rdx,0x14
  409ce6:	sub    r12,rax
  409ce9:	xor    ecx,ecx
  409ceb:	mov    rdi,QWORD PTR [rsp]
  409cef:	nop
  409cf0:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  409cf5:	mov    QWORD PTR [rdi+rcx*8],rsi
  409cf9:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  409cfe:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  409d03:	add    rcx,0x2
  409d07:	add    rbp,0xfffffffffffffff0
  409d0b:	cmp    r12,rcx
  409d0e:	jne    409cf0 <next@@Base+0x1a90>
  409d10:	neg    rbp
  409d13:	mov    rsi,QWORD PTR [rsp+0x8]
  409d18:	test   rax,rax
  409d1b:	mov    r12,QWORD PTR [rsp]
  409d1f:	je     409d2d <next@@Base+0x1acd>
  409d21:	mov    rax,QWORD PTR [r15+rbp*1]
  409d25:	mov    QWORD PTR [r12+rcx*8],rax
  409d29:	add    rbp,0x8
  409d2d:	mov    QWORD PTR [rip+0x8ab4],rbp        # 4127e8 <__bss_start@@Base+0x1698>
  409d34:	mov    QWORD PTR [rip+0x8aad],r14        # 4127e8 <__bss_start@@Base+0x1698>
  409d3b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  409d43:	mov    QWORD PTR [rip+0x8a9e],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409d4a:	lea    ebp,[r13+r13*1+0x0]
  409d4f:	mov    DWORD PTR [r15+rbx*1],ebp
  409d53:	add    rbx,0x4
  409d57:	mov    QWORD PTR [rip+0x8a8a],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409d5e:	test   r13d,r13d
  409d61:	je     409ea8 <next@@Base+0x1c48>
  409d67:	mov    edi,r13d
  409d6a:	xor    ebp,ebp
  409d6c:	mov    QWORD PTR [rsp+0x10],rdi
  409d71:	test   r12,r12
  409d74:	jne    409db6 <next@@Base+0x1b56>
  409d76:	jmp    409dc0 <next@@Base+0x1b60>
  409d78:	nop    DWORD PTR [rax+rax*1+0x0]
  409d80:	mov    DWORD PTR [r15+rbx*1],r14d
  409d84:	add    rbx,0x4
  409d88:	mov    QWORD PTR [rip+0x8a59],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  409d8f:	mov    rax,rbx
  409d92:	mov    DWORD PTR [r15+rax*1],r13d
  409d96:	add    rax,0x4
  409d9a:	mov    QWORD PTR [rip+0x8a47],rax        # 4127e8 <__bss_start@@Base+0x1698>
  409da1:	add    rbp,0x1
  409da5:	mov    rbx,rax
  409da8:	cmp    rdi,rbp
  409dab:	je     409ea8 <next@@Base+0x1c48>
  409db1:	test   r12,r12
  409db4:	je     409dc0 <next@@Base+0x1b60>
  409db6:	mov    r14,QWORD PTR [r12+rbp*8]
  409dba:	jmp    409dc3 <next@@Base+0x1b63>
  409dbc:	nop    DWORD PTR [rax+0x0]
  409dc0:	xor    r14d,r14d
  409dc3:	add    r14,QWORD PTR [rsi+rbp*8]
  409dc7:	mov    QWORD PTR [rsi+rbp*8],r14
  409dcb:	mov    r13,r14
  409dce:	shr    r13,0x20
  409dd2:	cmp    BYTE PTR [rip+0x89ef],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  409dd9:	je     409d80 <next@@Base+0x1b20>
  409ddb:	lea    rax,[rbx+0x4]
  409ddf:	mov    rcx,QWORD PTR [rip+0x89fa]        # 4127e0 <__bss_start@@Base+0x1690>
  409de6:	cmp    rax,rcx
  409de9:	jbe    409e50 <next@@Base+0x1bf0>
  409deb:	add    rbx,0x20003
  409df2:	and    rbx,0xfffffffffffe0000
  409df9:	mov    rdi,r15
  409dfc:	mov    rsi,rbx
  409dff:	call   4031d0 <realloc@plt>
  409e04:	mov    rdi,QWORD PTR [rsp+0x10]
  409e09:	mov    rsi,QWORD PTR [rsp+0x8]
  409e0e:	mov    r15,rax
  409e11:	mov    QWORD PTR [rip+0x89c0],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409e18:	mov    QWORD PTR [rip+0x89c1],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409e1f:	mov    dl,BYTE PTR [rip+0x89a3]        # 4127c8 <__bss_start@@Base+0x1678>
  409e25:	mov    rcx,rbx
  409e28:	mov    rbx,QWORD PTR [rip+0x89b9]        # 4127e8 <__bss_start@@Base+0x1698>
  409e2f:	mov    DWORD PTR [rax+rbx*1],r14d
  409e33:	lea    rax,[rbx+0x4]
  409e37:	mov    QWORD PTR [rip+0x89aa],rax        # 4127e8 <__bss_start@@Base+0x1698>
  409e3e:	cmp    dl,0x1
  409e41:	jne    409d92 <next@@Base+0x1b32>
  409e47:	jmp    409e5b <next@@Base+0x1bfb>
  409e49:	nop    DWORD PTR [rax+0x0]
  409e50:	mov    DWORD PTR [r15+rbx*1],r14d
  409e54:	mov    QWORD PTR [rip+0x898d],rax        # 4127e8 <__bss_start@@Base+0x1698>
  409e5b:	lea    rdx,[rbx+0x8]
  409e5f:	cmp    rdx,rcx
  409e62:	jbe    409d92 <next@@Base+0x1b32>
  409e68:	add    rbx,0x20007
  409e6f:	and    rbx,0xfffffffffffe0000
  409e76:	mov    rdi,r15
  409e79:	mov    rsi,rbx
  409e7c:	call   4031d0 <realloc@plt>
  409e81:	mov    rdi,QWORD PTR [rsp+0x10]
  409e86:	mov    rsi,QWORD PTR [rsp+0x8]
  409e8b:	mov    r15,rax
  409e8e:	mov    QWORD PTR [rip+0x8943],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409e95:	mov    QWORD PTR [rip+0x8944],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409e9c:	mov    rax,QWORD PTR [rip+0x8945]        # 4127e8 <__bss_start@@Base+0x1698>
  409ea3:	jmp    409d92 <next@@Base+0x1b32>
  409ea8:	mov    rdi,QWORD PTR [rsp]
  409eac:	add    rsp,0x18
  409eb0:	pop    rbx
  409eb1:	pop    r12
  409eb3:	pop    r13
  409eb5:	pop    r14
  409eb7:	pop    r15
  409eb9:	pop    rbp
  409eba:	jmp    403040 <free@plt>
  409ebf:	nop
  409ec0:	push   rbp
  409ec1:	push   r15
  409ec3:	push   r14
  409ec5:	push   rbx
  409ec6:	push   rax
  409ec7:	cmp    QWORD PTR [rip+0x8901],0x0        # 4127d0 <__bss_start@@Base+0x1680>
  409ecf:	je     40a246 <next@@Base+0x1fe6>
  409ed5:	mov    rbx,QWORD PTR [rip+0x890c]        # 4127e8 <__bss_start@@Base+0x1698>
  409edc:	cmp    BYTE PTR [rip+0x88e5],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  409ee3:	je     409f4f <next@@Base+0x1cef>
  409ee5:	lea    r14,[rbx+0x4]
  409ee9:	cmp    r14,QWORD PTR [rip+0x88f0]        # 4127e0 <__bss_start@@Base+0x1690>
  409ef0:	jbe    409f9b <next@@Base+0x1d3b>
  409ef6:	add    rbx,0x20003
  409efd:	and    rbx,0xfffffffffffe0000
  409f04:	mov    rdi,QWORD PTR [rip+0x88cd]        # 4127d8 <__bss_start@@Base+0x1688>
  409f0b:	mov    rsi,rbx
  409f0e:	call   4031d0 <realloc@plt>
  409f13:	mov    QWORD PTR [rip+0x88be],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409f1a:	mov    QWORD PTR [rip+0x88bf],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409f21:	mov    rbx,QWORD PTR [rip+0x88c0]        # 4127e8 <__bss_start@@Base+0x1698>
  409f28:	mov    cl,BYTE PTR [rip+0x889a]        # 4127c8 <__bss_start@@Base+0x1678>
  409f2e:	lea    r14,[rbx+0x4]
  409f32:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  409f39:	mov    QWORD PTR [rip+0x88a8],r14        # 4127e8 <__bss_start@@Base+0x1698>
  409f40:	mov    ebp,0x1
  409f45:	cmp    cl,0x1
  409f48:	je     409fb0 <next@@Base+0x1d50>
  409f4a:	jmp    40a0cb <next@@Base+0x1e6b>
  409f4f:	mov    rax,QWORD PTR [rip+0x8882]        # 4127d8 <__bss_start@@Base+0x1688>
  409f56:	mov    ecx,DWORD PTR [rax+rbx*1]
  409f59:	lea    r14,[rbx+0x4]
  409f5d:	mov    QWORD PTR [rip+0x8884],r14        # 4127e8 <__bss_start@@Base+0x1698>
  409f64:	cmp    ecx,0xa1000000
  409f6a:	je     40a08c <next@@Base+0x1e2c>
  409f70:	mov    ebp,0x1
  409f75:	cmp    ecx,0xffffffff
  409f78:	je     40a0bd <next@@Base+0x1e5d>
  409f7e:	mov    rax,QWORD PTR [rip+0x7073]        # 410ff8 <stderr@GLIBC_2.2.5>
  409f85:	mov    rdi,QWORD PTR [rax]
  409f88:	mov    rdx,QWORD PTR [rip+0x8831]        # 4127c0 <__bss_start@@Base+0x1670>
  409f8f:	lea    rsi,[rip+0x2e67]        # 40cdfd <UnitySizeMask@@Base+0x7ed>
  409f96:	jmp    40a4a5 <next@@Base+0x2245>
  409f9b:	mov    rax,QWORD PTR [rip+0x8836]        # 4127d8 <__bss_start@@Base+0x1688>
  409fa2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  409fa9:	mov    QWORD PTR [rip+0x8838],r14        # 4127e8 <__bss_start@@Base+0x1698>
  409fb0:	lea    rcx,[rbx+0x8]
  409fb4:	cmp    rcx,QWORD PTR [rip+0x8825]        # 4127e0 <__bss_start@@Base+0x1690>
  409fbb:	jbe    40a013 <next@@Base+0x1db3>
  409fbd:	add    rbx,0x20007
  409fc4:	and    rbx,0xfffffffffffe0000
  409fcb:	mov    rdi,rax
  409fce:	mov    rsi,rbx
  409fd1:	call   4031d0 <realloc@plt>
  409fd6:	mov    QWORD PTR [rip+0x87fb],rax        # 4127d8 <__bss_start@@Base+0x1688>
  409fdd:	mov    QWORD PTR [rip+0x87fc],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  409fe4:	mov    r14,QWORD PTR [rip+0x87fd]        # 4127e8 <__bss_start@@Base+0x1698>
  409feb:	mov    cl,BYTE PTR [rip+0x87d7]        # 4127c8 <__bss_start@@Base+0x1678>
  409ff1:	mov    DWORD PTR [rax+r14*1],0x9
  409ff9:	lea    rbx,[r14+0x4]
  409ffd:	mov    QWORD PTR [rip+0x87e4],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a004:	mov    ebp,0x1
  40a009:	cmp    cl,0x1
  40a00c:	je     40a026 <next@@Base+0x1dc6>
  40a00e:	jmp    40a0e1 <next@@Base+0x1e81>
  40a013:	mov    DWORD PTR [rax+r14*1],0x9
  40a01b:	lea    rbx,[r14+0x4]
  40a01f:	mov    QWORD PTR [rip+0x87c2],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a026:	lea    rcx,[r14+0x8]
  40a02a:	cmp    rcx,QWORD PTR [rip+0x87af]        # 4127e0 <__bss_start@@Base+0x1690>
  40a031:	jbe    40a2cd <next@@Base+0x206d>
  40a037:	add    r14,0x20007
  40a03e:	and    r14,0xfffffffffffe0000
  40a045:	mov    rdi,rax
  40a048:	mov    rsi,r14
  40a04b:	call   4031d0 <realloc@plt>
  40a050:	mov    QWORD PTR [rip+0x8781],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a057:	mov    QWORD PTR [rip+0x8782],r14        # 4127e0 <__bss_start@@Base+0x1690>
  40a05e:	mov    rbx,QWORD PTR [rip+0x8783]        # 4127e8 <__bss_start@@Base+0x1698>
  40a065:	mov    cl,BYTE PTR [rip+0x875d]        # 4127c8 <__bss_start@@Base+0x1678>
  40a06b:	mov    DWORD PTR [rax+rbx*1],0x0
  40a072:	lea    r14,[rbx+0x4]
  40a076:	mov    QWORD PTR [rip+0x876b],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a07d:	mov    ebp,0x1
  40a082:	cmp    cl,0x1
  40a085:	jne    40a0f6 <next@@Base+0x1e96>
  40a087:	jmp    40a2df <next@@Base+0x207f>
  40a08c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  40a090:	lea    rdx,[rbx+0x8]
  40a094:	mov    QWORD PTR [rip+0x874d],rdx        # 4127e8 <__bss_start@@Base+0x1698>
  40a09b:	cmp    ecx,0x9
  40a09e:	jne    40a48d <next@@Base+0x222d>
  40a0a4:	lea    rcx,[rbx+0x14]
  40a0a8:	movzx  ebp,BYTE PTR [rip+0x8741]        # 4127f0 <__bss_start@@Base+0x16a0>
  40a0af:	xor    ebp,0x1
  40a0b2:	add    ebp,DWORD PTR [rbx+rax*1+0x10]
  40a0b6:	mov    QWORD PTR [rip+0x872b],rcx        # 4127e8 <__bss_start@@Base+0x1698>
  40a0bd:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40a0c4:	mov    QWORD PTR [rip+0x871d],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a0cb:	mov    DWORD PTR [rax+r14*1],0x9
  40a0d3:	add    r14,0x4
  40a0d7:	mov    QWORD PTR [rip+0x870a],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a0de:	mov    rbx,r14
  40a0e1:	mov    DWORD PTR [rax+rbx*1],0x0
  40a0e8:	add    rbx,0x4
  40a0ec:	mov    QWORD PTR [rip+0x86f5],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a0f3:	mov    r14,rbx
  40a0f6:	mov    DWORD PTR [rax+r14*1],0x0
  40a0fe:	add    r14,0x4
  40a102:	mov    QWORD PTR [rip+0x86df],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a109:	mov    rbx,r14
  40a10c:	mov    DWORD PTR [rax+rbx*1],ebp
  40a10f:	lea    r14,[rbx+0x4]
  40a113:	mov    QWORD PTR [rip+0x86ce],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a11a:	cmp    BYTE PTR [rip+0x86a7],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40a121:	je     40a187 <next@@Base+0x1f27>
  40a123:	lea    r15,[rbx+0x8]
  40a127:	cmp    r15,QWORD PTR [rip+0x86b2]        # 4127e0 <__bss_start@@Base+0x1690>
  40a12e:	jbe    40a251 <next@@Base+0x1ff1>
  40a134:	add    rbx,0x20007
  40a13b:	and    rbx,0xfffffffffffe0000
  40a142:	mov    rdi,QWORD PTR [rip+0x868f]        # 4127d8 <__bss_start@@Base+0x1688>
  40a149:	mov    rsi,rbx
  40a14c:	call   4031d0 <realloc@plt>
  40a151:	mov    QWORD PTR [rip+0x8680],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a158:	mov    QWORD PTR [rip+0x8681],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  40a15f:	mov    r14,QWORD PTR [rip+0x8682]        # 4127e8 <__bss_start@@Base+0x1698>
  40a166:	lea    r15,[r14+0x4]
  40a16a:	cmp    BYTE PTR [rip+0x8657],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40a171:	mov    DWORD PTR [rax+r14*1],0x0
  40a179:	mov    QWORD PTR [rip+0x8668],r15        # 4127e8 <__bss_start@@Base+0x1698>
  40a180:	je     40a1a4 <next@@Base+0x1f44>
  40a182:	jmp    40a267 <next@@Base+0x2007>
  40a187:	mov    rax,QWORD PTR [rip+0x864a]        # 4127d8 <__bss_start@@Base+0x1688>
  40a18e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40a196:	add    rbx,0x8
  40a19a:	mov    QWORD PTR [rip+0x8647],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a1a1:	mov    r15,rbx
  40a1a4:	mov    DWORD PTR [rax+r15*1],0x0
  40a1ac:	add    r15,0x4
  40a1b0:	mov    QWORD PTR [rip+0x8631],r15        # 4127e8 <__bss_start@@Base+0x1698>
  40a1b7:	mov    r14,r15
  40a1ba:	mov    DWORD PTR [rax+r14*1],0x0
  40a1c2:	add    r14,0x4
  40a1c6:	mov    QWORD PTR [rip+0x861b],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a1cd:	mov    rbx,r14
  40a1d0:	mov    DWORD PTR [rax+rbx*1],0x0
  40a1d7:	add    rbx,0x4
  40a1db:	mov    QWORD PTR [rip+0x8606],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a1e2:	mov    r14,rbx
  40a1e5:	mov    DWORD PTR [rax+r14*1],0x0
  40a1ed:	add    r14,0x4
  40a1f1:	mov    QWORD PTR [rip+0x85f0],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a1f8:	mov    rbx,r14
  40a1fb:	mov    DWORD PTR [rax+rbx*1],0x0
  40a202:	add    rbx,0x4
  40a206:	mov    QWORD PTR [rip+0x85db],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a20d:	mov    r14,rbx
  40a210:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40a218:	add    r14,0x4
  40a21c:	mov    QWORD PTR [rip+0x85c5],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a223:	mov    rcx,r14
  40a226:	mov    rax,QWORD PTR [rip+0x85ab]        # 4127d8 <__bss_start@@Base+0x1688>
  40a22d:	mov    DWORD PTR [rax+rcx*1],0x0
  40a234:	add    rcx,0x4
  40a238:	mov    QWORD PTR [rip+0x85a9],rcx        # 4127e8 <__bss_start@@Base+0x1698>
  40a23f:	mov    BYTE PTR [rip+0x85aa],0x1        # 4127f0 <__bss_start@@Base+0x16a0>
  40a246:	add    rsp,0x8
  40a24a:	pop    rbx
  40a24b:	pop    r14
  40a24d:	pop    r15
  40a24f:	pop    rbp
  40a250:	ret    
  40a251:	mov    rax,QWORD PTR [rip+0x8580]        # 4127d8 <__bss_start@@Base+0x1688>
  40a258:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40a260:	mov    QWORD PTR [rip+0x8581],r15        # 4127e8 <__bss_start@@Base+0x1698>
  40a267:	lea    rcx,[r14+0x8]
  40a26b:	cmp    rcx,QWORD PTR [rip+0x856e]        # 4127e0 <__bss_start@@Base+0x1690>
  40a272:	jbe    40a34a <next@@Base+0x20ea>
  40a278:	add    r14,0x20007
  40a27f:	and    r14,0xfffffffffffe0000
  40a286:	mov    rdi,rax
  40a289:	mov    rsi,r14
  40a28c:	call   4031d0 <realloc@plt>
  40a291:	mov    QWORD PTR [rip+0x8540],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a298:	mov    QWORD PTR [rip+0x8541],r14        # 4127e0 <__bss_start@@Base+0x1690>
  40a29f:	mov    r15,QWORD PTR [rip+0x8542]        # 4127e8 <__bss_start@@Base+0x1698>
  40a2a6:	mov    cl,BYTE PTR [rip+0x851c]        # 4127c8 <__bss_start@@Base+0x1678>
  40a2ac:	mov    DWORD PTR [rax+r15*1],0x0
  40a2b4:	lea    r14,[r15+0x4]
  40a2b8:	mov    QWORD PTR [rip+0x8529],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a2bf:	cmp    cl,0x1
  40a2c2:	jne    40a1ba <next@@Base+0x1f5a>
  40a2c8:	jmp    40a35d <next@@Base+0x20fd>
  40a2cd:	mov    DWORD PTR [rax+rbx*1],0x0
  40a2d4:	lea    r14,[rbx+0x4]
  40a2d8:	mov    QWORD PTR [rip+0x8509],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a2df:	lea    rcx,[rbx+0x8]
  40a2e3:	cmp    rcx,QWORD PTR [rip+0x84f6]        # 4127e0 <__bss_start@@Base+0x1690>
  40a2ea:	jbe    40a3c0 <next@@Base+0x2160>
  40a2f0:	add    rbx,0x20007
  40a2f7:	and    rbx,0xfffffffffffe0000
  40a2fe:	mov    rdi,rax
  40a301:	mov    rsi,rbx
  40a304:	call   4031d0 <realloc@plt>
  40a309:	mov    QWORD PTR [rip+0x84c8],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a310:	mov    QWORD PTR [rip+0x84c9],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  40a317:	mov    r14,QWORD PTR [rip+0x84ca]        # 4127e8 <__bss_start@@Base+0x1698>
  40a31e:	mov    cl,BYTE PTR [rip+0x84a4]        # 4127c8 <__bss_start@@Base+0x1678>
  40a324:	mov    DWORD PTR [rax+r14*1],0x0
  40a32c:	lea    rbx,[r14+0x4]
  40a330:	mov    QWORD PTR [rip+0x84b1],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a337:	mov    ebp,0x1
  40a33c:	cmp    cl,0x1
  40a33f:	jne    40a10c <next@@Base+0x1eac>
  40a345:	jmp    40a3d3 <next@@Base+0x2173>
  40a34a:	mov    DWORD PTR [rax+r15*1],0x0
  40a352:	lea    r14,[r15+0x4]
  40a356:	mov    QWORD PTR [rip+0x848b],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a35d:	lea    rcx,[r15+0x8]
  40a361:	cmp    rcx,QWORD PTR [rip+0x8478]        # 4127e0 <__bss_start@@Base+0x1690>
  40a368:	jbe    40a41c <next@@Base+0x21bc>
  40a36e:	add    r15,0x20007
  40a375:	and    r15,0xfffffffffffe0000
  40a37c:	mov    rdi,rax
  40a37f:	mov    rsi,r15
  40a382:	call   4031d0 <realloc@plt>
  40a387:	mov    QWORD PTR [rip+0x844a],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a38e:	mov    QWORD PTR [rip+0x844b],r15        # 4127e0 <__bss_start@@Base+0x1690>
  40a395:	mov    r14,QWORD PTR [rip+0x844c]        # 4127e8 <__bss_start@@Base+0x1698>
  40a39c:	mov    cl,BYTE PTR [rip+0x8426]        # 4127c8 <__bss_start@@Base+0x1678>
  40a3a2:	mov    DWORD PTR [rax+r14*1],0x0
  40a3aa:	lea    rbx,[r14+0x4]
  40a3ae:	mov    QWORD PTR [rip+0x8433],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a3b5:	cmp    cl,0x1
  40a3b8:	jne    40a1d0 <next@@Base+0x1f70>
  40a3be:	jmp    40a42f <next@@Base+0x21cf>
  40a3c0:	mov    DWORD PTR [rax+r14*1],0x0
  40a3c8:	lea    rbx,[r14+0x4]
  40a3cc:	mov    QWORD PTR [rip+0x8415],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a3d3:	lea    rcx,[r14+0x8]
  40a3d7:	mov    ebp,0x1
  40a3dc:	cmp    rcx,QWORD PTR [rip+0x83fd]        # 4127e0 <__bss_start@@Base+0x1690>
  40a3e3:	jbe    40a10c <next@@Base+0x1eac>
  40a3e9:	add    r14,0x20007
  40a3f0:	and    r14,0xfffffffffffe0000
  40a3f7:	mov    rdi,rax
  40a3fa:	mov    rsi,r14
  40a3fd:	call   4031d0 <realloc@plt>
  40a402:	mov    QWORD PTR [rip+0x83cf],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a409:	mov    QWORD PTR [rip+0x83d0],r14        # 4127e0 <__bss_start@@Base+0x1690>
  40a410:	mov    rbx,QWORD PTR [rip+0x83d1]        # 4127e8 <__bss_start@@Base+0x1698>
  40a417:	jmp    40a10c <next@@Base+0x1eac>
  40a41c:	mov    DWORD PTR [rax+r14*1],0x0
  40a424:	lea    rbx,[r14+0x4]
  40a428:	mov    QWORD PTR [rip+0x83b9],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a42f:	lea    rcx,[r14+0x8]
  40a433:	cmp    rcx,QWORD PTR [rip+0x83a6]        # 4127e0 <__bss_start@@Base+0x1690>
  40a43a:	jbe    40a4b6 <next@@Base+0x2256>
  40a43c:	add    r14,0x20007
  40a443:	and    r14,0xfffffffffffe0000
  40a44a:	mov    rdi,rax
  40a44d:	mov    rsi,r14
  40a450:	call   4031d0 <realloc@plt>
  40a455:	mov    QWORD PTR [rip+0x837c],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a45c:	mov    QWORD PTR [rip+0x837d],r14        # 4127e0 <__bss_start@@Base+0x1690>
  40a463:	mov    rbx,QWORD PTR [rip+0x837e]        # 4127e8 <__bss_start@@Base+0x1698>
  40a46a:	mov    cl,BYTE PTR [rip+0x8358]        # 4127c8 <__bss_start@@Base+0x1678>
  40a470:	mov    DWORD PTR [rax+rbx*1],0x0
  40a477:	lea    r14,[rbx+0x4]
  40a47b:	mov    QWORD PTR [rip+0x8366],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a482:	cmp    cl,0x1
  40a485:	jne    40a1e5 <next@@Base+0x1f85>
  40a48b:	jmp    40a4c8 <next@@Base+0x2268>
  40a48d:	mov    rax,QWORD PTR [rip+0x6b64]        # 410ff8 <stderr@GLIBC_2.2.5>
  40a494:	mov    rdi,QWORD PTR [rax]
  40a497:	mov    rdx,QWORD PTR [rip+0x8322]        # 4127c0 <__bss_start@@Base+0x1670>
  40a49e:	lea    rsi,[rip+0x29a5]        # 40ce4a <UnitySizeMask@@Base+0x83a>
  40a4a5:	xor    eax,eax
  40a4a7:	add    rsp,0x8
  40a4ab:	pop    rbx
  40a4ac:	pop    r14
  40a4ae:	pop    r15
  40a4b0:	pop    rbp
  40a4b1:	jmp    403140 <fprintf@plt>
  40a4b6:	mov    DWORD PTR [rax+rbx*1],0x0
  40a4bd:	lea    r14,[rbx+0x4]
  40a4c1:	mov    QWORD PTR [rip+0x8320],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a4c8:	lea    rcx,[rbx+0x8]
  40a4cc:	cmp    rcx,QWORD PTR [rip+0x830d]        # 4127e0 <__bss_start@@Base+0x1690>
  40a4d3:	jbe    40a527 <next@@Base+0x22c7>
  40a4d5:	add    rbx,0x20007
  40a4dc:	and    rbx,0xfffffffffffe0000
  40a4e3:	mov    rdi,rax
  40a4e6:	mov    rsi,rbx
  40a4e9:	call   4031d0 <realloc@plt>
  40a4ee:	mov    QWORD PTR [rip+0x82e3],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a4f5:	mov    QWORD PTR [rip+0x82e4],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  40a4fc:	mov    r14,QWORD PTR [rip+0x82e5]        # 4127e8 <__bss_start@@Base+0x1698>
  40a503:	mov    cl,BYTE PTR [rip+0x82bf]        # 4127c8 <__bss_start@@Base+0x1678>
  40a509:	mov    DWORD PTR [rax+r14*1],0x0
  40a511:	lea    rbx,[r14+0x4]
  40a515:	mov    QWORD PTR [rip+0x82cc],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a51c:	cmp    cl,0x1
  40a51f:	jne    40a1fb <next@@Base+0x1f9b>
  40a525:	jmp    40a53a <next@@Base+0x22da>
  40a527:	mov    DWORD PTR [rax+r14*1],0x0
  40a52f:	lea    rbx,[r14+0x4]
  40a533:	mov    QWORD PTR [rip+0x82ae],rbx        # 4127e8 <__bss_start@@Base+0x1698>
  40a53a:	lea    rcx,[r14+0x8]
  40a53e:	cmp    rcx,QWORD PTR [rip+0x829b]        # 4127e0 <__bss_start@@Base+0x1690>
  40a545:	jbe    40a596 <next@@Base+0x2336>
  40a547:	add    r14,0x20007
  40a54e:	and    r14,0xfffffffffffe0000
  40a555:	mov    rdi,rax
  40a558:	mov    rsi,r14
  40a55b:	call   4031d0 <realloc@plt>
  40a560:	mov    QWORD PTR [rip+0x8271],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a567:	mov    QWORD PTR [rip+0x8272],r14        # 4127e0 <__bss_start@@Base+0x1690>
  40a56e:	mov    rbx,QWORD PTR [rip+0x8273]        # 4127e8 <__bss_start@@Base+0x1698>
  40a575:	lea    r14,[rbx+0x4]
  40a579:	cmp    BYTE PTR [rip+0x8248],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40a580:	mov    DWORD PTR [rax+rbx*1],0x0
  40a587:	mov    QWORD PTR [rip+0x825a],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a58e:	je     40a210 <next@@Base+0x1fb0>
  40a594:	jmp    40a5a8 <next@@Base+0x2348>
  40a596:	mov    DWORD PTR [rax+rbx*1],0x0
  40a59d:	lea    r14,[rbx+0x4]
  40a5a1:	mov    QWORD PTR [rip+0x8240],r14        # 4127e8 <__bss_start@@Base+0x1698>
  40a5a8:	lea    rcx,[rbx+0x8]
  40a5ac:	cmp    rcx,QWORD PTR [rip+0x822d]        # 4127e0 <__bss_start@@Base+0x1690>
  40a5b3:	jbe    40a607 <next@@Base+0x23a7>
  40a5b5:	add    rbx,0x20007
  40a5bc:	and    rbx,0xfffffffffffe0000
  40a5c3:	mov    rdi,rax
  40a5c6:	mov    rsi,rbx
  40a5c9:	call   4031d0 <realloc@plt>
  40a5ce:	mov    QWORD PTR [rip+0x8203],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a5d5:	mov    QWORD PTR [rip+0x8204],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  40a5dc:	mov    dl,BYTE PTR [rip+0x81e6]        # 4127c8 <__bss_start@@Base+0x1678>
  40a5e2:	mov    r14,QWORD PTR [rip+0x81ff]        # 4127e8 <__bss_start@@Base+0x1698>
  40a5e9:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40a5f1:	lea    rcx,[r14+0x4]
  40a5f5:	mov    QWORD PTR [rip+0x81ec],rcx        # 4127e8 <__bss_start@@Base+0x1698>
  40a5fc:	cmp    dl,0x1
  40a5ff:	jne    40a226 <next@@Base+0x1fc6>
  40a605:	jmp    40a61a <next@@Base+0x23ba>
  40a607:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40a60f:	lea    rcx,[r14+0x4]
  40a613:	mov    QWORD PTR [rip+0x81ce],rcx        # 4127e8 <__bss_start@@Base+0x1698>
  40a61a:	lea    rdx,[r14+0x8]
  40a61e:	cmp    rdx,QWORD PTR [rip+0x81bb]        # 4127e0 <__bss_start@@Base+0x1690>
  40a625:	jbe    40a226 <next@@Base+0x1fc6>
  40a62b:	add    r14,0x20007
  40a632:	and    r14,0xfffffffffffe0000
  40a639:	mov    rdi,rax
  40a63c:	mov    rsi,r14
  40a63f:	call   4031d0 <realloc@plt>
  40a644:	mov    QWORD PTR [rip+0x818d],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a64b:	mov    QWORD PTR [rip+0x818e],r14        # 4127e0 <__bss_start@@Base+0x1690>
  40a652:	mov    rcx,QWORD PTR [rip+0x818f]        # 4127e8 <__bss_start@@Base+0x1698>
  40a659:	jmp    40a226 <next@@Base+0x1fc6>
  40a65e:	xchg   ax,ax
  40a660:	push   r14
  40a662:	push   rbx
  40a663:	push   rax
  40a664:	cmp    QWORD PTR [rip+0x8164],0x0        # 4127d0 <__bss_start@@Base+0x1680>
  40a66c:	je     40a7c7 <next@@Base+0x2567>
  40a672:	cmp    BYTE PTR [rip+0x814f],0x0        # 4127c8 <__bss_start@@Base+0x1678>
  40a679:	je     40a6ea <next@@Base+0x248a>
  40a67b:	mov    rbx,QWORD PTR [rip+0x8166]        # 4127e8 <__bss_start@@Base+0x1698>
  40a682:	lea    rax,[rbx+0x8]
  40a686:	cmp    rax,QWORD PTR [rip+0x8153]        # 4127e0 <__bss_start@@Base+0x1690>
  40a68d:	jbe    40a750 <next@@Base+0x24f0>
  40a693:	add    rbx,0x20007
  40a69a:	and    rbx,0xfffffffffffe0000
  40a6a1:	mov    rdi,QWORD PTR [rip+0x8130]        # 4127d8 <__bss_start@@Base+0x1688>
  40a6a8:	mov    rsi,rbx
  40a6ab:	call   4031d0 <realloc@plt>
  40a6b0:	mov    rdi,rax
  40a6b3:	mov    QWORD PTR [rip+0x811e],rax        # 4127d8 <__bss_start@@Base+0x1688>
  40a6ba:	mov    QWORD PTR [rip+0x811f],rbx        # 4127e0 <__bss_start@@Base+0x1690>
  40a6c1:	mov    al,BYTE PTR [rip+0x8101]        # 4127c8 <__bss_start@@Base+0x1678>
  40a6c7:	mov    rsi,QWORD PTR [rip+0x811a]        # 4127e8 <__bss_start@@Base+0x1698>
  40a6ce:	mov    QWORD PTR [rdi+rsi*1],0x0
  40a6d6:	add    rsi,0x8
  40a6da:	mov    QWORD PTR [rip+0x8107],rsi        # 4127e8 <__bss_start@@Base+0x1698>
  40a6e1:	cmp    al,0x1
  40a6e3:	jne    40a70b <next@@Base+0x24ab>
  40a6e5:	jmp    40a771 <next@@Base+0x2511>
  40a6ea:	mov    rdi,QWORD PTR [rip+0x80e7]        # 4127d8 <__bss_start@@Base+0x1688>
  40a6f1:	mov    rax,QWORD PTR [rip+0x80f0]        # 4127e8 <__bss_start@@Base+0x1698>
  40a6f8:	mov    QWORD PTR [rdi+rax*1],0x0
  40a700:	add    rax,0x8
  40a704:	mov    QWORD PTR [rip+0x80dd],rax        # 4127e8 <__bss_start@@Base+0x1698>
  40a70b:	mov    rsi,QWORD PTR [rip+0x80f6]        # 412808 <__bss_start@@Base+0x16b8>
  40a712:	mov    edx,0x4
  40a717:	call   4030b0 <msync@plt>
  40a71c:	cmp    eax,0xffffffff
  40a71f:	je     40a7da <next@@Base+0x257a>
  40a725:	mov    rdi,QWORD PTR [rip+0x80ac]        # 4127d8 <__bss_start@@Base+0x1688>
  40a72c:	mov    rsi,QWORD PTR [rip+0x80d5]        # 412808 <__bss_start@@Base+0x16b8>
  40a733:	call   4031f0 <munmap@plt>
  40a738:	mov    QWORD PTR [rip+0x8095],0x0        # 4127d8 <__bss_start@@Base+0x1688>
  40a743:	mov    QWORD PTR [rip+0x80ba],0x0        # 412808 <__bss_start@@Base+0x16b8>
  40a74e:	jmp    40a78e <next@@Base+0x252e>
  40a750:	mov    rdi,QWORD PTR [rip+0x8081]        # 4127d8 <__bss_start@@Base+0x1688>
  40a757:	mov    rsi,QWORD PTR [rip+0x808a]        # 4127e8 <__bss_start@@Base+0x1698>
  40a75e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40a766:	add    rsi,0x8
  40a76a:	mov    QWORD PTR [rip+0x8077],rsi        # 4127e8 <__bss_start@@Base+0x1698>
  40a771:	mov    rcx,QWORD PTR [rip+0x8058]        # 4127d0 <__bss_start@@Base+0x1680>
  40a778:	mov    edx,0x1
  40a77d:	call   403240 <fwrite@plt>
  40a782:	mov    rdi,QWORD PTR [rip+0x804f]        # 4127d8 <__bss_start@@Base+0x1688>
  40a789:	call   403040 <free@plt>
  40a78e:	mov    rdi,QWORD PTR [rip+0x803b]        # 4127d0 <__bss_start@@Base+0x1680>
  40a795:	call   4031b0 <fflush@plt>
  40a79a:	mov    edi,DWORD PTR [rip+0x69a8]        # 411148 <__data_start@@Base+0x10>
  40a7a0:	call   40ac50 <__gcov_flush@@Base+0x2c0>
  40a7a5:	mov    rdi,QWORD PTR [rip+0x8024]        # 4127d0 <__bss_start@@Base+0x1680>
  40a7ac:	call   4030a0 <fclose@plt>
  40a7b1:	mov    QWORD PTR [rip+0x8014],0x0        # 4127d0 <__bss_start@@Base+0x1680>
  40a7bc:	mov    QWORD PTR [rip+0x8011],0x0        # 4127d8 <__bss_start@@Base+0x1688>
  40a7c7:	mov    rdi,QWORD PTR [rip+0x7ff2]        # 4127c0 <__bss_start@@Base+0x1670>
  40a7ce:	add    rsp,0x8
  40a7d2:	pop    rbx
  40a7d3:	pop    r14
  40a7d5:	jmp    403040 <free@plt>
  40a7da:	call   403050 <__errno_location@plt>
  40a7df:	mov    edi,DWORD PTR [rax]
  40a7e1:	mov    rax,QWORD PTR [rip+0x6810]        # 410ff8 <stderr@GLIBC_2.2.5>
  40a7e8:	mov    rbx,QWORD PTR [rax]
  40a7eb:	mov    r14,QWORD PTR [rip+0x7fce]        # 4127c0 <__bss_start@@Base+0x1670>
  40a7f2:	call   403260 <strerror@plt>
  40a7f7:	lea    rsi,[rip+0x26ba]        # 40ceb8 <UnitySizeMask@@Base+0x8a8>
  40a7fe:	mov    rdi,rbx
  40a801:	mov    rdx,r14
  40a804:	mov    rcx,rax
  40a807:	xor    eax,eax
  40a809:	call   403140 <fprintf@plt>
  40a80e:	jmp    40a725 <next@@Base+0x24c5>
  40a813:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a81d:	nop    DWORD PTR [rax]
  40a820:	push   rbx
  40a821:	mov    rbx,rdi
  40a824:	mov    edi,0x18
  40a829:	call   4031a0 <malloc@plt>
  40a82e:	mov    QWORD PTR [rax+0x8],rbx
  40a832:	mov    QWORD PTR [rax+0x10],0x0
  40a83a:	lea    rcx,[rip+0x7fb7]        # 4127f8 <__bss_start@@Base+0x16a8>
  40a841:	mov    QWORD PTR [rax],rcx
  40a844:	lea    rcx,[rip+0x80ed]        # 412938 <writeout_fn_list@@Base>
  40a84b:	lea    rdx,[rcx+0x8]
  40a84f:	mov    rsi,QWORD PTR [rcx+0x8]
  40a853:	add    rsi,0x10
  40a857:	xor    edi,edi
  40a859:	cmp    QWORD PTR [rcx],0x0
  40a85d:	setne  dil
  40a861:	cmove  rsi,rdx
  40a865:	mov    QWORD PTR [rsi],rax
  40a868:	mov    QWORD PTR [rcx+rdi*8],rax
  40a86c:	pop    rbx
  40a86d:	ret    
  40a86e:	xchg   ax,ax
  40a870:	push   r14
  40a872:	push   rbx
  40a873:	push   rax
  40a874:	lea    rax,[rip+0x80bd]        # 412938 <writeout_fn_list@@Base>
  40a87b:	mov    rbx,QWORD PTR [rax]
  40a87e:	test   rbx,rbx
  40a881:	je     40a8a5 <next@@Base+0x2645>
  40a883:	lea    r14,[rip+0x7f6e]        # 4127f8 <__bss_start@@Base+0x16a8>
  40a88a:	cmp    QWORD PTR [rbx],r14
  40a88d:	je     40a89e <next@@Base+0x263e>
  40a88f:	nop
  40a890:	mov    rbx,QWORD PTR [rbx+0x10]
  40a894:	test   rbx,rbx
  40a897:	je     40a8a5 <next@@Base+0x2645>
  40a899:	cmp    QWORD PTR [rbx],r14
  40a89c:	jne    40a890 <next@@Base+0x2630>
  40a89e:	xor    eax,eax
  40a8a0:	call   QWORD PTR [rbx+0x8]
  40a8a3:	jmp    40a890 <next@@Base+0x2630>
  40a8a5:	add    rsp,0x8
  40a8a9:	pop    rbx
  40a8aa:	pop    r14
  40a8ac:	ret    
  40a8ad:	nop    DWORD PTR [rax]
  40a8b0:	push   r15
  40a8b2:	push   r14
  40a8b4:	push   r12
  40a8b6:	push   rbx
  40a8b7:	push   rax
  40a8b8:	lea    r14,[rip+0x8079]        # 412938 <writeout_fn_list@@Base>
  40a8bf:	mov    rdi,QWORD PTR [r14]
  40a8c2:	test   rdi,rdi
  40a8c5:	je     40a92b <next@@Base+0x26cb>
  40a8c7:	xor    r12d,r12d
  40a8ca:	lea    r15,[rip+0x7f27]        # 4127f8 <__bss_start@@Base+0x16a8>
  40a8d1:	jmp    40a8ed <next@@Base+0x268d>
  40a8d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8dd:	nop    DWORD PTR [rax]
  40a8e0:	call   403040 <free@plt>
  40a8e5:	mov    rdi,rbx
  40a8e8:	test   rbx,rbx
  40a8eb:	je     40a92b <next@@Base+0x26cb>
  40a8ed:	mov    rbx,QWORD PTR [rdi+0x10]
  40a8f1:	cmp    QWORD PTR [rdi],r15
  40a8f4:	je     40a900 <next@@Base+0x26a0>
  40a8f6:	mov    r12,rdi
  40a8f9:	jmp    40a8e5 <next@@Base+0x2685>
  40a8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a900:	cmp    rdi,QWORD PTR [r14]
  40a903:	je     40a912 <next@@Base+0x26b2>
  40a905:	cmp    rdi,QWORD PTR [r14+0x8]
  40a909:	je     40a91b <next@@Base+0x26bb>
  40a90b:	test   r12,r12
  40a90e:	jne    40a924 <next@@Base+0x26c4>
  40a910:	jmp    40a8e0 <next@@Base+0x2680>
  40a912:	mov    QWORD PTR [r14],rbx
  40a915:	cmp    rdi,QWORD PTR [r14+0x8]
  40a919:	jne    40a90b <next@@Base+0x26ab>
  40a91b:	mov    QWORD PTR [r14+0x8],r12
  40a91f:	test   r12,r12
  40a922:	je     40a8e0 <next@@Base+0x2680>
  40a924:	mov    QWORD PTR [r12+0x10],rbx
  40a929:	jmp    40a8e0 <next@@Base+0x2680>
  40a92b:	add    rsp,0x8
  40a92f:	pop    rbx
  40a930:	pop    r12
  40a932:	pop    r14
  40a934:	pop    r15
  40a936:	ret    
  40a937:	nop    WORD PTR [rax+rax*1+0x0]
  40a940:	push   rbx
  40a941:	mov    rbx,rdi
  40a944:	mov    edi,0x18
  40a949:	call   4031a0 <malloc@plt>
  40a94e:	mov    QWORD PTR [rax+0x8],rbx
  40a952:	mov    QWORD PTR [rax+0x10],0x0
  40a95a:	lea    rcx,[rip+0x7e97]        # 4127f8 <__bss_start@@Base+0x16a8>
  40a961:	mov    QWORD PTR [rax],rcx
  40a964:	lea    rcx,[rip+0x7fbd]        # 412928 <flush_fn_list@@Base>
  40a96b:	lea    rdx,[rcx+0x8]
  40a96f:	mov    rsi,QWORD PTR [rcx+0x8]
  40a973:	add    rsi,0x10
  40a977:	xor    edi,edi
  40a979:	cmp    QWORD PTR [rcx],0x0
  40a97d:	setne  dil
  40a981:	cmove  rsi,rdx
  40a985:	mov    QWORD PTR [rsi],rax
  40a988:	mov    QWORD PTR [rcx+rdi*8],rax
  40a98c:	pop    rbx
  40a98d:	ret    
  40a98e:	xchg   ax,ax

000000000040a990 <__gcov_flush@@Base>:
  40a990:	push   rbx
  40a991:	lea    rax,[rip+0x7f90]        # 412928 <flush_fn_list@@Base>
  40a998:	mov    rbx,QWORD PTR [rax]
  40a99b:	test   rbx,rbx
  40a99e:	je     40a9ae <__gcov_flush@@Base+0x1e>
  40a9a0:	xor    eax,eax
  40a9a2:	call   QWORD PTR [rbx+0x8]
  40a9a5:	mov    rbx,QWORD PTR [rbx+0x10]
  40a9a9:	test   rbx,rbx
  40a9ac:	jne    40a9a0 <__gcov_flush@@Base+0x10>
  40a9ae:	pop    rbx
  40a9af:	ret    
  40a9b0:	push   r15
  40a9b2:	push   r14
  40a9b4:	push   r12
  40a9b6:	push   rbx
  40a9b7:	push   rax
  40a9b8:	lea    r14,[rip+0x7f69]        # 412928 <flush_fn_list@@Base>
  40a9bf:	mov    rdi,QWORD PTR [r14]
  40a9c2:	test   rdi,rdi
  40a9c5:	je     40aa2b <__gcov_flush@@Base+0x9b>
  40a9c7:	xor    r12d,r12d
  40a9ca:	lea    r15,[rip+0x7e27]        # 4127f8 <__bss_start@@Base+0x16a8>
  40a9d1:	jmp    40a9ed <__gcov_flush@@Base+0x5d>
  40a9d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9dd:	nop    DWORD PTR [rax]
  40a9e0:	call   403040 <free@plt>
  40a9e5:	mov    rdi,rbx
  40a9e8:	test   rbx,rbx
  40a9eb:	je     40aa2b <__gcov_flush@@Base+0x9b>
  40a9ed:	mov    rbx,QWORD PTR [rdi+0x10]
  40a9f1:	cmp    QWORD PTR [rdi],r15
  40a9f4:	je     40aa00 <__gcov_flush@@Base+0x70>
  40a9f6:	mov    r12,rdi
  40a9f9:	jmp    40a9e5 <__gcov_flush@@Base+0x55>
  40a9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa00:	cmp    rdi,QWORD PTR [r14]
  40aa03:	je     40aa12 <__gcov_flush@@Base+0x82>
  40aa05:	cmp    rdi,QWORD PTR [r14+0x8]
  40aa09:	je     40aa1b <__gcov_flush@@Base+0x8b>
  40aa0b:	test   r12,r12
  40aa0e:	jne    40aa24 <__gcov_flush@@Base+0x94>
  40aa10:	jmp    40a9e0 <__gcov_flush@@Base+0x50>
  40aa12:	mov    QWORD PTR [r14],rbx
  40aa15:	cmp    rdi,QWORD PTR [r14+0x8]
  40aa19:	jne    40aa0b <__gcov_flush@@Base+0x7b>
  40aa1b:	mov    QWORD PTR [r14+0x8],r12
  40aa1f:	test   r12,r12
  40aa22:	je     40a9e0 <__gcov_flush@@Base+0x50>
  40aa24:	mov    QWORD PTR [r12+0x10],rbx
  40aa29:	jmp    40a9e0 <__gcov_flush@@Base+0x50>
  40aa2b:	add    rsp,0x8
  40aa2f:	pop    rbx
  40aa30:	pop    r12
  40aa32:	pop    r14
  40aa34:	pop    r15
  40aa36:	ret    
  40aa37:	nop    WORD PTR [rax+rax*1+0x0]
  40aa40:	push   r14
  40aa42:	push   rbx
  40aa43:	push   rax
  40aa44:	mov    r14,rsi
  40aa47:	test   rdi,rdi
  40aa4a:	je     40aa97 <__gcov_flush@@Base+0x107>
  40aa4c:	mov    rbx,rdi
  40aa4f:	mov    edi,0x18
  40aa54:	call   4031a0 <malloc@plt>
  40aa59:	mov    QWORD PTR [rax+0x8],rbx
  40aa5d:	mov    QWORD PTR [rax+0x10],0x0
  40aa65:	lea    rcx,[rip+0x7d8c]        # 4127f8 <__bss_start@@Base+0x16a8>
  40aa6c:	mov    QWORD PTR [rax],rcx
  40aa6f:	lea    rcx,[rip+0x7ec2]        # 412938 <writeout_fn_list@@Base>
  40aa76:	lea    rdx,[rcx+0x8]
  40aa7a:	mov    rsi,QWORD PTR [rcx+0x8]
  40aa7e:	add    rsi,0x10
  40aa82:	xor    edi,edi
  40aa84:	cmp    QWORD PTR [rcx],0x0
  40aa88:	setne  dil
  40aa8c:	cmove  rsi,rdx
  40aa90:	mov    QWORD PTR [rsi],rax
  40aa93:	mov    QWORD PTR [rcx+rdi*8],rax
  40aa97:	test   r14,r14
  40aa9a:	je     40aae4 <__gcov_flush@@Base+0x154>
  40aa9c:	mov    edi,0x18
  40aaa1:	call   4031a0 <malloc@plt>
  40aaa6:	mov    QWORD PTR [rax+0x8],r14
  40aaaa:	mov    QWORD PTR [rax+0x10],0x0
  40aab2:	lea    rcx,[rip+0x7d3f]        # 4127f8 <__bss_start@@Base+0x16a8>
  40aab9:	mov    QWORD PTR [rax],rcx
  40aabc:	lea    rcx,[rip+0x7e65]        # 412928 <flush_fn_list@@Base>
  40aac3:	lea    rdx,[rcx+0x8]
  40aac7:	mov    rsi,QWORD PTR [rcx+0x8]
  40aacb:	add    rsi,0x10
  40aacf:	xor    edi,edi
  40aad1:	cmp    QWORD PTR [rcx],0x0
  40aad5:	setne  dil
  40aad9:	cmove  rsi,rdx
  40aadd:	mov    QWORD PTR [rsi],rax
  40aae0:	mov    QWORD PTR [rcx+rdi*8],rax
  40aae4:	cmp    BYTE PTR [rip+0x7d15],0x0        # 412800 <__bss_start@@Base+0x16b0>
  40aaeb:	je     40aaf5 <__gcov_flush@@Base+0x165>
  40aaed:	add    rsp,0x8
  40aaf1:	pop    rbx
  40aaf2:	pop    r14
  40aaf4:	ret    
  40aaf5:	mov    BYTE PTR [rip+0x7d04],0x1        # 412800 <__bss_start@@Base+0x16b0>
  40aafc:	lea    rdi,[rip+0xfffffffffffffead]        # 40a9b0 <__gcov_flush@@Base+0x20>
  40ab03:	call   40b0a0 <__libc_csu_fini@@Base+0x10>
  40ab08:	lea    rdi,[rip+0xfffffffffffffda1]        # 40a8b0 <next@@Base+0x2650>
  40ab0f:	call   40b0a0 <__libc_csu_fini@@Base+0x10>
  40ab14:	lea    rdi,[rip+0xfffffffffffffd55]        # 40a870 <next@@Base+0x2610>
  40ab1b:	add    rsp,0x8
  40ab1f:	pop    rbx
  40ab20:	pop    r14
  40ab22:	jmp    40b0a0 <__libc_csu_fini@@Base+0x10>
  40ab27:	nop
  40ab28:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab30:	push   r15
  40ab32:	push   r14
  40ab34:	push   rbx
  40ab35:	mov    r14,rdi
  40ab38:	lea    rbx,[rdi+0x1]
  40ab3c:	lea    r15,[rip+0x6609]        # 41114c <lprofDirMode@@Base>
  40ab43:	jmp    40ab65 <__gcov_flush@@Base+0x1d5>
  40ab45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab4f:	nop
  40ab50:	mov    BYTE PTR [rbx],0x0
  40ab53:	mov    esi,DWORD PTR [r15]
  40ab56:	mov    rdi,r14
  40ab59:	call   403070 <mkdir@plt>
  40ab5e:	mov    BYTE PTR [rbx],0x2f
  40ab61:	add    rbx,0x1
  40ab65:	movzx  eax,BYTE PTR [rbx]
  40ab68:	cmp    al,0x2f
  40ab6a:	je     40ab50 <__gcov_flush@@Base+0x1c0>
  40ab6c:	test   al,al
  40ab6e:	jne    40ab61 <__gcov_flush@@Base+0x1d1>
  40ab70:	pop    rbx
  40ab71:	pop    r14
  40ab73:	pop    r15
  40ab75:	ret    
  40ab76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab80:	lea    rax,[rip+0x65c5]        # 41114c <lprofDirMode@@Base>
  40ab87:	mov    eax,DWORD PTR [rax]
  40ab89:	ret    
  40ab8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ab90:	lea    rax,[rip+0x65b5]        # 41114c <lprofDirMode@@Base>
  40ab97:	mov    DWORD PTR [rax],edi
  40ab99:	ret    
  40ab9a:	nop    WORD PTR [rax+rax*1+0x0]
  40aba0:	push   rbp
  40aba1:	push   rbx
  40aba2:	sub    rsp,0x188
  40aba9:	mov    ebp,esi
  40abab:	mov    rbx,rdi
  40abae:	mov    rdi,rsp
  40abb1:	call   403100 <uname@plt>
  40abb6:	test   eax,eax
  40abb8:	js     40abcc <__gcov_flush@@Base+0x23c>
  40abba:	lea    rsi,[rsp+0x41]
  40abbf:	movsxd rdx,ebp
  40abc2:	mov    rdi,rbx
  40abc5:	call   403060 <strncpy@plt>
  40abca:	xor    eax,eax
  40abcc:	add    rsp,0x188
  40abd3:	pop    rbx
  40abd4:	pop    rbp
  40abd5:	ret    
  40abd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abe0:	push   rbp
  40abe1:	push   r14
  40abe3:	push   rbx
  40abe4:	sub    rsp,0x20
  40abe8:	mov    ebx,edi
  40abea:	mov    WORD PTR [rsp+0x2],0x0
  40abf1:	xorps  xmm0,xmm0
  40abf4:	movups XMMWORD PTR [rsp+0x8],xmm0
  40abf9:	call   403090 <getpid@plt>
  40abfe:	mov    DWORD PTR [rsp+0x18],eax
  40ac02:	mov    WORD PTR [rsp],0x1
  40ac08:	mov    r14,rsp
  40ac0b:	xor    ebp,ebp
  40ac0d:	nop    DWORD PTR [rax]
  40ac10:	mov    edi,ebx
  40ac12:	mov    esi,0x7
  40ac17:	mov    rdx,r14
  40ac1a:	xor    eax,eax
  40ac1c:	call   403080 <fcntl@plt>
  40ac21:	cmp    eax,0xffffffff
  40ac24:	jne    40ac3c <__gcov_flush@@Base+0x2ac>
  40ac26:	call   403050 <__errno_location@plt>
  40ac2b:	mov    eax,DWORD PTR [rax]
  40ac2d:	cmp    eax,0x4
  40ac30:	je     40ac10 <__gcov_flush@@Base+0x280>
  40ac32:	cmp    eax,0x25
  40ac35:	jne    40ac3c <__gcov_flush@@Base+0x2ac>
  40ac37:	mov    ebp,0xffffffff
  40ac3c:	mov    eax,ebp
  40ac3e:	add    rsp,0x20
  40ac42:	pop    rbx
  40ac43:	pop    r14
  40ac45:	pop    rbp
  40ac46:	ret    
  40ac47:	nop    WORD PTR [rax+rax*1+0x0]
  40ac50:	push   rbp
  40ac51:	push   r14
  40ac53:	push   rbx
  40ac54:	sub    rsp,0x20
  40ac58:	mov    ebx,edi
  40ac5a:	mov    WORD PTR [rsp+0x2],0x0
  40ac61:	xorps  xmm0,xmm0
  40ac64:	movups XMMWORD PTR [rsp+0x8],xmm0
  40ac69:	call   403090 <getpid@plt>
  40ac6e:	mov    DWORD PTR [rsp+0x18],eax
  40ac72:	mov    WORD PTR [rsp],0x2
  40ac78:	mov    r14,rsp
  40ac7b:	xor    ebp,ebp
  40ac7d:	nop    DWORD PTR [rax]
  40ac80:	mov    edi,ebx
  40ac82:	mov    esi,0x7
  40ac87:	mov    rdx,r14
  40ac8a:	xor    eax,eax
  40ac8c:	call   403080 <fcntl@plt>
  40ac91:	cmp    eax,0xffffffff
  40ac94:	jne    40acac <__gcov_flush@@Base+0x31c>
  40ac96:	call   403050 <__errno_location@plt>
  40ac9b:	mov    eax,DWORD PTR [rax]
  40ac9d:	cmp    eax,0x4
  40aca0:	je     40ac80 <__gcov_flush@@Base+0x2f0>
  40aca2:	cmp    eax,0x25
  40aca5:	jne    40acac <__gcov_flush@@Base+0x31c>
  40aca7:	mov    ebp,0xffffffff
  40acac:	mov    eax,ebp
  40acae:	add    rsp,0x20
  40acb2:	pop    rbx
  40acb3:	pop    r14
  40acb5:	pop    rbp
  40acb6:	ret    
  40acb7:	nop    WORD PTR [rax+rax*1+0x0]
  40acc0:	push   rbp
  40acc1:	push   r14
  40acc3:	push   rbx
  40acc4:	sub    rsp,0x20
  40acc8:	call   403190 <fileno@plt>
  40accd:	mov    ebx,eax
  40accf:	mov    WORD PTR [rsp+0x2],0x0
  40acd6:	xorps  xmm0,xmm0
  40acd9:	movups XMMWORD PTR [rsp+0x8],xmm0
  40acde:	call   403090 <getpid@plt>
  40ace3:	mov    DWORD PTR [rsp+0x18],eax
  40ace7:	mov    WORD PTR [rsp],0x1
  40aced:	mov    r14,rsp
  40acf0:	xor    ebp,ebp
  40acf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acfc:	nop    DWORD PTR [rax+0x0]
  40ad00:	mov    edi,ebx
  40ad02:	mov    esi,0x7
  40ad07:	mov    rdx,r14
  40ad0a:	xor    eax,eax
  40ad0c:	call   403080 <fcntl@plt>
  40ad11:	cmp    eax,0xffffffff
  40ad14:	jne    40ad2c <__gcov_flush@@Base+0x39c>
  40ad16:	call   403050 <__errno_location@plt>
  40ad1b:	mov    eax,DWORD PTR [rax]
  40ad1d:	cmp    eax,0x4
  40ad20:	je     40ad00 <__gcov_flush@@Base+0x370>
  40ad22:	cmp    eax,0x25
  40ad25:	jne    40ad2c <__gcov_flush@@Base+0x39c>
  40ad27:	mov    ebp,0xffffffff
  40ad2c:	mov    eax,ebp
  40ad2e:	add    rsp,0x20
  40ad32:	pop    rbx
  40ad33:	pop    r14
  40ad35:	pop    rbp
  40ad36:	ret    
  40ad37:	nop    WORD PTR [rax+rax*1+0x0]
  40ad40:	push   rbp
  40ad41:	push   r14
  40ad43:	push   rbx
  40ad44:	sub    rsp,0x20
  40ad48:	call   403190 <fileno@plt>
  40ad4d:	mov    ebx,eax
  40ad4f:	mov    WORD PTR [rsp+0x2],0x0
  40ad56:	xorps  xmm0,xmm0
  40ad59:	movups XMMWORD PTR [rsp+0x8],xmm0
  40ad5e:	call   403090 <getpid@plt>
  40ad63:	mov    DWORD PTR [rsp+0x18],eax
  40ad67:	mov    WORD PTR [rsp],0x2
  40ad6d:	mov    r14,rsp
  40ad70:	xor    ebp,ebp
  40ad72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad7c:	nop    DWORD PTR [rax+0x0]
  40ad80:	mov    edi,ebx
  40ad82:	mov    esi,0x7
  40ad87:	mov    rdx,r14
  40ad8a:	xor    eax,eax
  40ad8c:	call   403080 <fcntl@plt>
  40ad91:	cmp    eax,0xffffffff
  40ad94:	jne    40adac <__gcov_flush@@Base+0x41c>
  40ad96:	call   403050 <__errno_location@plt>
  40ad9b:	mov    eax,DWORD PTR [rax]
  40ad9d:	cmp    eax,0x4
  40ada0:	je     40ad80 <__gcov_flush@@Base+0x3f0>
  40ada2:	cmp    eax,0x25
  40ada5:	jne    40adac <__gcov_flush@@Base+0x41c>
  40ada7:	mov    ebp,0xffffffff
  40adac:	mov    eax,ebp
  40adae:	add    rsp,0x20
  40adb2:	pop    rbx
  40adb3:	pop    r14
  40adb5:	pop    rbp
  40adb6:	ret    
  40adb7:	nop    WORD PTR [rax+rax*1+0x0]
  40adc0:	push   rbp
  40adc1:	push   r14
  40adc3:	push   rbx
  40adc4:	sub    rsp,0x20
  40adc8:	xor    ebx,ebx
  40adca:	mov    esi,0x42
  40adcf:	mov    edx,0x1b6
  40add4:	xor    eax,eax
  40add6:	call   403210 <open@plt>
  40addb:	test   eax,eax
  40addd:	js     40ae3a <__gcov_flush@@Base+0x4aa>
  40addf:	mov    ebp,eax
  40ade1:	mov    WORD PTR [rsp+0x2],0x0
  40ade8:	xorps  xmm0,xmm0
  40adeb:	movups XMMWORD PTR [rsp+0x8],xmm0
  40adf0:	call   403090 <getpid@plt>
  40adf5:	mov    DWORD PTR [rsp+0x18],eax
  40adf9:	mov    WORD PTR [rsp],0x1
  40adff:	mov    r14,rsp
  40ae02:	mov    edi,ebp
  40ae04:	mov    esi,0x7
  40ae09:	mov    rdx,r14
  40ae0c:	xor    eax,eax
  40ae0e:	call   403080 <fcntl@plt>
  40ae13:	cmp    eax,0xffffffff
  40ae16:	jne    40ae29 <__gcov_flush@@Base+0x499>
  40ae18:	call   403050 <__errno_location@plt>
  40ae1d:	mov    eax,DWORD PTR [rax]
  40ae1f:	cmp    eax,0x4
  40ae22:	je     40ae02 <__gcov_flush@@Base+0x472>
  40ae24:	cmp    eax,0x25
  40ae27:	je     40ae46 <__gcov_flush@@Base+0x4b6>
  40ae29:	lea    rsi,[rip+0x1f07]        # 40cd37 <UnitySizeMask@@Base+0x727>
  40ae30:	mov    edi,ebp
  40ae32:	call   4031e0 <fdopen@plt>
  40ae37:	mov    rbx,rax
  40ae3a:	mov    rax,rbx
  40ae3d:	add    rsp,0x20
  40ae41:	pop    rbx
  40ae42:	pop    r14
  40ae44:	pop    rbp
  40ae45:	ret    
  40ae46:	mov    rax,QWORD PTR [rip+0x61ab]        # 410ff8 <stderr@GLIBC_2.2.5>
  40ae4d:	mov    rdi,QWORD PTR [rax]
  40ae50:	lea    rsi,[rip+0x2082]        # 40ced9 <UnitySizeMask@@Base+0x8c9>
  40ae57:	lea    rdx,[rip+0x20c4]        # 40cf22 <UnitySizeMask@@Base+0x912>
  40ae5e:	xor    eax,eax
  40ae60:	call   403140 <fprintf@plt>
  40ae65:	jmp    40ae29 <__gcov_flush@@Base+0x499>
  40ae67:	nop    WORD PTR [rax+rax*1+0x0]
  40ae70:	push   r15
  40ae72:	push   r14
  40ae74:	push   r12
  40ae76:	push   rbx
  40ae77:	push   rax
  40ae78:	mov    r14,rsi
  40ae7b:	mov    r15,rdi
  40ae7e:	lea    rdi,[rip+0x20cb]        # 40cf50 <UnitySizeMask@@Base+0x940>
  40ae85:	call   403030 <getenv@plt>
  40ae8a:	mov    rbx,rax
  40ae8d:	lea    rdi,[rip+0x20c8]        # 40cf5c <UnitySizeMask@@Base+0x94c>
  40ae94:	call   403030 <getenv@plt>
  40ae99:	mov    QWORD PTR [r14],0x0
  40aea0:	mov    DWORD PTR [r15],0x0
  40aea7:	test   rbx,rbx
  40aeaa:	je     40aee1 <__gcov_flush@@Base+0x551>
  40aeac:	xor    r12d,r12d
  40aeaf:	cmp    BYTE PTR [rbx],0x0
  40aeb2:	je     40aee1 <__gcov_flush@@Base+0x551>
  40aeb4:	test   rax,rax
  40aeb7:	je     40aed1 <__gcov_flush@@Base+0x541>
  40aeb9:	xor    r12d,r12d
  40aebc:	mov    rdi,rax
  40aebf:	xor    esi,esi
  40aec1:	mov    edx,0xa
  40aec6:	call   403160 <strtol@plt>
  40aecb:	test   eax,eax
  40aecd:	cmovns r12d,eax
  40aed1:	mov    DWORD PTR [r15],r12d
  40aed4:	mov    rdi,rbx
  40aed7:	call   4030c0 <strlen@plt>
  40aedc:	mov    QWORD PTR [r14],rax
  40aedf:	jmp    40aee3 <__gcov_flush@@Base+0x553>
  40aee1:	xor    ebx,ebx
  40aee3:	mov    rax,rbx
  40aee6:	add    rsp,0x8
  40aeea:	pop    rbx
  40aeeb:	pop    r12
  40aeed:	pop    r14
  40aeef:	pop    r15
  40aef1:	ret    
  40aef2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aefc:	nop    DWORD PTR [rax+0x0]
  40af00:	push   r15
  40af02:	push   r14
  40af04:	push   r12
  40af06:	push   rbx
  40af07:	push   rax
  40af08:	mov    r15,rcx
  40af0b:	mov    r12,rdx
  40af0e:	mov    rbx,rsi
  40af11:	mov    r14,rdi
  40af14:	test   r8d,r8d
  40af17:	jle    40af4b <__gcov_flush@@Base+0x5bb>
  40af19:	lea    rax,[rbx+0x1]
  40af1d:	xor    ecx,ecx
  40af1f:	jmp    40af3f <__gcov_flush@@Base+0x5af>
  40af21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af30:	add    ecx,0x1
  40af33:	mov    rbx,rax
  40af36:	add    rax,0x1
  40af3a:	cmp    ecx,r8d
  40af3d:	jge    40af4b <__gcov_flush@@Base+0x5bb>
  40af3f:	movzx  edx,BYTE PTR [rax]
  40af42:	cmp    dl,0x2f
  40af45:	je     40af30 <__gcov_flush@@Base+0x5a0>
  40af47:	test   dl,dl
  40af49:	jne    40af36 <__gcov_flush@@Base+0x5a6>
  40af4b:	mov    rdi,r14
  40af4e:	mov    rsi,r12
  40af51:	mov    rdx,r15
  40af54:	call   403170 <memcpy@plt>
  40af59:	cmp    BYTE PTR [r15+r12*1-0x1],0x2f
  40af5f:	je     40af6a <__gcov_flush@@Base+0x5da>
  40af61:	mov    BYTE PTR [r14+r15*1],0x2f
  40af66:	add    r15,0x1
  40af6a:	add    r14,r15
  40af6d:	mov    rdi,rbx
  40af70:	call   4030c0 <strlen@plt>
  40af75:	lea    rdx,[rax+0x1]
  40af79:	mov    rdi,r14
  40af7c:	mov    rsi,rbx
  40af7f:	add    rsp,0x8
  40af83:	pop    rbx
  40af84:	pop    r12
  40af86:	pop    r14
  40af88:	pop    r15
  40af8a:	jmp    403170 <memcpy@plt>
  40af8f:	nop
  40af90:	mov    esi,0x2f
  40af95:	jmp    4030e0 <strchr@plt>
  40af9a:	nop    WORD PTR [rax+rax*1+0x0]
  40afa0:	mov    esi,0x2f
  40afa5:	jmp    4030f0 <strrchr@plt>
  40afaa:	nop    WORD PTR [rax+rax*1+0x0]
  40afb0:	push   rax
  40afb1:	mov    DWORD PTR [rsp+0x4],0x0
  40afb9:	lea    rsi,[rsp+0x4]
  40afbe:	mov    edi,0x2
  40afc3:	xor    eax,eax
  40afc5:	call   403180 <prctl@plt>
  40afca:	mov    ecx,DWORD PTR [rsp+0x4]
  40afce:	test   eax,eax
  40afd0:	jne    40afe9 <__gcov_flush@@Base+0x659>
  40afd2:	cmp    ecx,0x9
  40afd5:	jne    40afe9 <__gcov_flush@@Base+0x659>
  40afd7:	mov    edi,0x1
  40afdc:	xor    esi,esi
  40afde:	xor    eax,eax
  40afe0:	call   403180 <prctl@plt>
  40afe5:	mov    ecx,DWORD PTR [rsp+0x4]
  40afe9:	xor    eax,eax
  40afeb:	cmp    ecx,0x9
  40afee:	sete   al
  40aff1:	pop    rcx
  40aff2:	ret    
  40aff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40affd:	nop    DWORD PTR [rax]
  40b000:	mov    edi,0x1
  40b005:	mov    esi,0x9
  40b00a:	xor    eax,eax
  40b00c:	jmp    403180 <prctl@plt>
  40b011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b01b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b020 <__libc_csu_init@@Base>:
  40b020:	endbr64 
  40b024:	push   r15
  40b026:	lea    r15,[rip+0x4b23]        # 40fb50 <UnitySizeMask@@Base+0x3540>
  40b02d:	push   r14
  40b02f:	mov    r14,rdx
  40b032:	push   r13
  40b034:	mov    r13,rsi
  40b037:	push   r12
  40b039:	mov    r12d,edi
  40b03c:	push   rbp
  40b03d:	lea    rbp,[rip+0x4b34]        # 40fb78 <UnitySizeMask@@Base+0x3568>
  40b044:	push   rbx
  40b045:	sub    rbp,r15
  40b048:	sub    rsp,0x8
  40b04c:	call   403000 <getenv@plt-0x30>
  40b051:	sar    rbp,0x3
  40b055:	je     40b076 <__libc_csu_init@@Base+0x56>
  40b057:	xor    ebx,ebx
  40b059:	nop    DWORD PTR [rax+0x0]
  40b060:	mov    rdx,r14
  40b063:	mov    rsi,r13
  40b066:	mov    edi,r12d
  40b069:	call   QWORD PTR [r15+rbx*8]
  40b06d:	add    rbx,0x1
  40b071:	cmp    rbp,rbx
  40b074:	jne    40b060 <__libc_csu_init@@Base+0x40>
  40b076:	add    rsp,0x8
  40b07a:	pop    rbx
  40b07b:	pop    rbp
  40b07c:	pop    r12
  40b07e:	pop    r13
  40b080:	pop    r14
  40b082:	pop    r15
  40b084:	ret    
  40b085:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040b090 <__libc_csu_fini@@Base>:
  40b090:	endbr64 
  40b094:	ret    
  40b095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b09f:	nop
  40b0a0:	endbr64 
  40b0a4:	mov    rdx,QWORD PTR [rip+0x6095]        # 411140 <__data_start@@Base+0x8>
  40b0ab:	xor    esi,esi
  40b0ad:	jmp    403220 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000040b0b4 <.fini>:
  40b0b4:	endbr64 
  40b0b8:	sub    rsp,0x8
  40b0bc:	add    rsp,0x8
  40b0c0:	ret    
