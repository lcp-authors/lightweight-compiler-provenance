
../repos/eddieantonio-ocreval-3ab279a/ngram/ngram:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fd9]        # 404fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <error@@Base+0x2598>
  401026:	bnd jmp QWORD PTR [rip+0x3fe3]        # 405010 <error@@Base+0x25a0>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.got:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x3dcd]        # 404fc8 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000401200 <__strcat_chk@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x3e0d]        # 405018 <__strcat_chk@GLIBC_2.3.4>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <unlink@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x3e05]        # 405020 <unlink@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_get_property@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x3dfd]        # 405028 <utf8proc_get_property>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <utf8proc_encode_char@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x3df5]        # 405030 <utf8proc_encode_char>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <getpid@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x3ded]        # 405038 <getpid@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <fclose@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x3de5]        # 405040 <fclose@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <strlen@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x3ddd]        # 405048 <strlen@GLIBC_2.2.5>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <__stack_chk_fail@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x3dd5]        # 405050 <__stack_chk_fail@GLIBC_2.4>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <rewind@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x3dcd]        # 405058 <rewind@GLIBC_2.2.5>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <utf8proc_tolower@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x3dc5]        # 405060 <utf8proc_tolower>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fputs@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x3dbd]        # 405068 <fputs@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <fgets@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x3db5]        # 405070 <fgets@GLIBC_2.2.5>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <utf8proc_iterate@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x3dad]        # 405078 <utf8proc_iterate>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <calloc@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x3da5]        # 405080 <calloc@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <strcmp@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x3d9d]        # 405088 <strcmp@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <__sysv_signal@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x3d95]        # 405090 <__sysv_signal@GLIBC_2.2.5>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <utf8proc_category@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x3d8d]        # 405098 <utf8proc_category>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__xstat@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x3d85]        # 4050a0 <__xstat@GLIBC_2.2.5>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__printf_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x3d7d]        # 4050a8 <__printf_chk@GLIBC_2.3.4>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <__fread_chk@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x3d75]        # 4050b0 <__fread_chk@GLIBC_2.7>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <fopen@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x3d6d]        # 4050b8 <fopen@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <exit@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x3d65]        # 4050c0 <exit@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <fwrite@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x3d5d]        # 4050c8 <fwrite@GLIBC_2.2.5>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <__fprintf_chk@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x3d55]        # 4050d0 <__fprintf_chk@GLIBC_2.3.4>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <utf8proc_errmsg@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x3d4d]        # 4050d8 <utf8proc_errmsg>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <strdup@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x3d45]        # 4050e0 <strdup@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <getc@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x3d3d]        # 4050e8 <getc@GLIBC_2.2.5>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013b0 <__sprintf_chk@plt>:
  4013b0:	endbr64 
  4013b4:	bnd jmp QWORD PTR [rip+0x3d35]        # 4050f0 <__sprintf_chk@GLIBC_2.3.4>
  4013bb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013c0 <error@@Base-0x16b0>:
  4013c0:	endbr64 
  4013c4:	push   rbp
  4013c5:	xor    eax,eax
  4013c7:	lea    rdx,[rip+0x1c9a]        # 403068 <error@@Base+0x5f8>
  4013ce:	push   rbx
  4013cf:	mov    rbp,rsi
  4013d2:	sub    rsp,0x18
  4013d6:	mov    rcx,0x405120
  4013dd:	mov    DWORD PTR [rsp+0xc],edi
  4013e1:	lea    rdi,[rsp+0xc]
  4013e6:	call   402bf0 <error@@Base+0x180>
  4013eb:	mov    eax,DWORD PTR [rsp+0xc]
  4013ef:	test   eax,eax
  4013f1:	jne    401401 <__sprintf_chk@plt+0x51>
  4013f3:	lea    rdi,[rip+0x1c53]        # 40304d <error@@Base+0x5dd>
  4013fa:	xor    eax,eax
  4013fc:	call   402a70 <error@@Base>
  401401:	xor    eax,eax
  401403:	call   4015d0 <__sprintf_chk@plt+0x220>
  401408:	mov    rdx,0x4051a0
  40140f:	cmp    DWORD PTR [rsp+0xc],0x0
  401414:	mov    WORD PTR [rdx],ax
  401417:	jle    401435 <__sprintf_chk@plt+0x85>
  401419:	xor    ebx,ebx
  40141b:	nop    DWORD PTR [rax+rax*1+0x0]
  401420:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  401425:	xor    eax,eax
  401427:	inc    rbx
  40142a:	call   4016d0 <__sprintf_chk@plt+0x320>
  40142f:	cmp    DWORD PTR [rsp+0xc],ebx
  401433:	jg     401420 <__sprintf_chk@plt+0x70>
  401435:	xor    eax,eax
  401437:	call   4018c0 <__sprintf_chk@plt+0x510>
  40143c:	xor    eax,eax
  40143e:	call   402a00 <__sprintf_chk@plt+0x1650>
  401443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40144d:	nop    DWORD PTR [rax]
  401450:	endbr64 
  401454:	xor    ebp,ebp
  401456:	mov    r9,rdx
  401459:	pop    rsi
  40145a:	mov    rdx,rsp
  40145d:	and    rsp,0xfffffffffffffff0
  401461:	push   rax
  401462:	push   rsp
  401463:	mov    r8,0x402f30
  40146a:	mov    rcx,0x402ec0
  401471:	mov    rdi,0x4013c0
  401478:	call   QWORD PTR [rip+0x3b62]        # 404fe0 <error@@Base+0x2570>
  40147e:	hlt    
  40147f:	nop
  401480:	endbr64 
  401484:	ret    
  401485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40148f:	nop
  401490:	mov    eax,0x405158
  401495:	cmp    rax,0x405158
  40149b:	je     4014b0 <__sprintf_chk@plt+0x100>
  40149d:	mov    eax,0x0
  4014a2:	test   rax,rax
  4014a5:	je     4014b0 <__sprintf_chk@plt+0x100>
  4014a7:	mov    edi,0x405158
  4014ac:	jmp    rax
  4014ae:	xchg   ax,ax
  4014b0:	ret    
  4014b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014bc:	nop    DWORD PTR [rax+0x0]
  4014c0:	mov    esi,0x405158
  4014c5:	sub    rsi,0x405158
  4014cc:	sar    rsi,0x3
  4014d0:	mov    rax,rsi
  4014d3:	shr    rax,0x3f
  4014d7:	add    rsi,rax
  4014da:	sar    rsi,1
  4014dd:	je     4014f0 <__sprintf_chk@plt+0x140>
  4014df:	mov    eax,0x0
  4014e4:	test   rax,rax
  4014e7:	je     4014f0 <__sprintf_chk@plt+0x140>
  4014e9:	mov    edi,0x405158
  4014ee:	jmp    rax
  4014f0:	ret    
  4014f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014fc:	nop    DWORD PTR [rax+0x0]
  401500:	endbr64 
  401504:	cmp    BYTE PTR [rip+0x3c55],0x0        # 405160 <error@@Base+0x26f0>
  40150b:	jne    401520 <__sprintf_chk@plt+0x170>
  40150d:	push   rbp
  40150e:	mov    rbp,rsp
  401511:	call   401490 <__sprintf_chk@plt+0xe0>
  401516:	mov    BYTE PTR [rip+0x3c43],0x1        # 405160 <error@@Base+0x26f0>
  40151d:	pop    rbp
  40151e:	ret    
  40151f:	nop
  401520:	ret    
  401521:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40152c:	nop    DWORD PTR [rax+0x0]
  401530:	endbr64 
  401534:	jmp    4014c0 <__sprintf_chk@plt+0x110>
  401536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401540:	endbr64 
  401544:	mov    rax,0x4051a0
  40154b:	movzx  r8d,WORD PTR [rax]
  40154f:	test   r8w,r8w
  401553:	jle    401585 <__sprintf_chk@plt+0x1d5>
  401555:	mov    ecx,DWORD PTR [rdi+0x18]
  401558:	mov    edx,DWORD PTR [rsi+0x18]
  40155b:	cmp    edx,ecx
  40155d:	jne    401590 <__sprintf_chk@plt+0x1e0>
  40155f:	mov    eax,0x1
  401564:	jmp    40157f <__sprintf_chk@plt+0x1cf>
  401566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401570:	mov    ecx,DWORD PTR [rdi+rax*4+0x18]
  401574:	inc    rax
  401577:	mov    edx,DWORD PTR [rsi+rax*4+0x14]
  40157b:	cmp    ecx,edx
  40157d:	jne    401590 <__sprintf_chk@plt+0x1e0>
  40157f:	cmp    r8w,ax
  401583:	jg     401570 <__sprintf_chk@plt+0x1c0>
  401585:	xor    eax,eax
  401587:	ret    
  401588:	nop    DWORD PTR [rax+rax*1+0x0]
  401590:	cmp    ecx,edx
  401592:	sbb    eax,eax
  401594:	or     eax,0x1
  401597:	ret    
  401598:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	endbr64 
  4015a4:	mov    rdx,QWORD PTR [rdi+0x28]
  4015a8:	mov    rax,QWORD PTR [rsi+0x28]
  4015ac:	cmp    rdx,rax
  4015af:	jne    4015be <__sprintf_chk@plt+0x20e>
  4015b1:	mov    rdx,QWORD PTR [rdi+0x30]
  4015b5:	mov    rax,QWORD PTR [rsi+0x30]
  4015b9:	cmp    rdx,rax
  4015bc:	je     4015c8 <__sprintf_chk@plt+0x218>
  4015be:	sub    eax,edx
  4015c0:	ret    
  4015c1:	nop    DWORD PTR [rax+0x0]
  4015c8:	xor    eax,eax
  4015ca:	jmp    401540 <__sprintf_chk@plt+0x190>
  4015cf:	nop
  4015d0:	endbr64 
  4015d4:	mov    rax,0x4051a8
  4015db:	mov    rsi,QWORD PTR [rax]
  4015de:	test   rsi,rsi
  4015e1:	je     401600 <__sprintf_chk@plt+0x250>
  4015e3:	movsx  ax,BYTE PTR [rsi]
  4015e7:	lea    edx,[rax-0x31]
  4015ea:	cmp    dl,0x2
  4015ed:	ja     401606 <__sprintf_chk@plt+0x256>
  4015ef:	cmp    BYTE PTR [rsi+0x1],0x0
  4015f3:	jne    401606 <__sprintf_chk@plt+0x256>
  4015f5:	sub    eax,0x30
  4015f8:	ret    
  4015f9:	nop    DWORD PTR [rax+0x0]
  401600:	mov    eax,0x1
  401605:	ret    
  401606:	push   rax
  401607:	lea    rdi,[rip+0x19f6]        # 403004 <error@@Base+0x594>
  40160e:	xor    eax,eax
  401610:	call   402b20 <error@@Base+0xb0>
  401615:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401620:	endbr64 
  401624:	push   r14
  401626:	xor    eax,eax
  401628:	mov    r14d,edx
  40162b:	push   r13
  40162d:	mov    r13,rdi
  401630:	push   r12
  401632:	mov    r12,rsi
  401635:	mov    rsi,rdi
  401638:	push   rbp
  401639:	mov    rbp,0x4051c0
  401640:	push   rbx
  401641:	mov    rdi,rbp
  401644:	call   401da0 <__sprintf_chk@plt+0x9f0>
  401649:	mov    rbx,rax
  40164c:	test   rax,rax
  40164f:	je     401678 <__sprintf_chk@plt+0x2c8>
  401651:	inc    QWORD PTR [rbx+0x28]
  401655:	inc    QWORD PTR [rbp+0x3ef0]
  40165c:	test   r14b,r14b
  40165f:	je     40166c <__sprintf_chk@plt+0x2bc>
  401661:	inc    QWORD PTR [rbx+0x30]
  401665:	inc    QWORD PTR [rbp+0x3ef8]
  40166c:	pop    rbx
  40166d:	pop    rbp
  40166e:	pop    r12
  401670:	pop    r13
  401672:	pop    r14
  401674:	ret    
  401675:	nop    DWORD PTR [rax]
  401678:	mov    esi,0x38
  40167d:	mov    edi,0x1
  401682:	xor    eax,eax
  401684:	call   402ac0 <error@@Base+0x50>
  401689:	mov    rdi,r13
  40168c:	mov    rbx,rax
  40168f:	call   401390 <strdup@plt>
  401694:	mov    QWORD PTR [rbx+0x10],rax
  401698:	mov    rax,0x4051a0
  40169f:	movzx  edx,WORD PTR [rax]
  4016a2:	test   dx,dx
  4016a5:	jle    4016c0 <__sprintf_chk@plt+0x310>
  4016a7:	xor    eax,eax
  4016a9:	nop    DWORD PTR [rax+0x0]
  4016b0:	mov    ecx,DWORD PTR [r12+rax*4]
  4016b4:	mov    DWORD PTR [rbx+rax*4+0x18],ecx
  4016b8:	inc    rax
  4016bb:	cmp    dx,ax
  4016be:	jg     4016b0 <__sprintf_chk@plt+0x300>
  4016c0:	mov    rsi,rbx
  4016c3:	mov    rdi,rbp
  4016c6:	xor    eax,eax
  4016c8:	call   401e30 <__sprintf_chk@plt+0xa80>
  4016cd:	jmp    401651 <__sprintf_chk@plt+0x2a1>
  4016cf:	nop
  4016d0:	endbr64 
  4016d4:	push   r15
  4016d6:	push   r14
  4016d8:	push   r13
  4016da:	push   r12
  4016dc:	push   rbp
  4016dd:	mov    rbp,rdi
  4016e0:	push   rbx
  4016e1:	sub    rsp,0x78
  4016e5:	mov    rax,QWORD PTR fs:0x28
  4016ee:	mov    QWORD PTR [rsp+0x68],rax
  4016f3:	xor    eax,eax
  4016f5:	mov    rbx,0x405180
  4016fc:	mov    rsi,QWORD PTR [rip+0x38c5]        # 404fc8 <error@@Base+0x2558>
  401703:	mov    rdi,rbx
  401706:	call   401b60 <__sprintf_chk@plt+0x7b0>
  40170b:	mov    rdx,0x405110
  401712:	xor    eax,eax
  401714:	mov    rsi,rbp
  401717:	mov    rdi,rbx
  40171a:	call   402050 <__sprintf_chk@plt+0xca0>
  40171f:	mov    rax,QWORD PTR [rbx]
  401722:	mov    QWORD PTR [rsp+0x10],rax
  401727:	test   rax,rax
  40172a:	je     401800 <__sprintf_chk@plt+0x450>
  401730:	lea    rax,[rsp+0x40]
  401735:	mov    QWORD PTR [rsp+0x8],rax
  40173a:	lea    rax,[rsp+0x28]
  40173f:	mov    QWORD PTR [rsp+0x18],rax
  401744:	mov    rbp,0x4051a0
  40174b:	lea    rbx,[rsp+0x37]
  401750:	mov    r13d,0x1
  401756:	xor    r14d,r14d
  401759:	xor    r15d,r15d
  40175c:	xor    edx,edx
  40175e:	cmp    WORD PTR [rbp+0x0],0x0
  401763:	mov    BYTE PTR [rsp+0x40],0x0
  401768:	mov    r12,QWORD PTR [rsp+0x10]
  40176d:	jg     401781 <__sprintf_chk@plt+0x3d1>
  40176f:	jmp    4017d3 <__sprintf_chk@plt+0x423>
  401771:	nop    DWORD PTR [rax+0x0]
  401778:	test   r12,r12
  40177b:	je     401800 <__sprintf_chk@plt+0x450>
  401781:	mov    esi,DWORD PTR [r12+0x14]
  401786:	xor    edi,edi
  401788:	xor    eax,eax
  40178a:	mov    ecx,0x1
  40178f:	mov    rdx,rbx
  401792:	call   4024b0 <__sprintf_chk@plt+0x1100>
  401797:	mov    rdi,QWORD PTR [rsp+0x8]
  40179c:	mov    edx,0x1b
  4017a1:	mov    rsi,rbx
  4017a4:	call   401200 <__strcat_chk@plt>
  4017a9:	cmp    BYTE PTR [r12+0x10],0x0
  4017af:	mov    edx,DWORD PTR [r12+0x14]
  4017b4:	movsx  rax,r14w
  4017b8:	cmovne r15d,r13d
  4017bc:	inc    r14d
  4017bf:	mov    DWORD PTR [rsp+rax*4+0x28],edx
  4017c3:	mov    r12,QWORD PTR [r12+0x8]
  4017c8:	cmp    WORD PTR [rbp+0x0],r14w
  4017cd:	jg     401778 <__sprintf_chk@plt+0x3c8>
  4017cf:	movsx  edx,r15b
  4017d3:	mov    rsi,QWORD PTR [rsp+0x18]
  4017d8:	mov    rdi,QWORD PTR [rsp+0x8]
  4017dd:	xor    eax,eax
  4017df:	call   401620 <__sprintf_chk@plt+0x270>
  4017e4:	mov    rax,QWORD PTR [rsp+0x10]
  4017e9:	mov    rax,QWORD PTR [rax+0x8]
  4017ed:	mov    QWORD PTR [rsp+0x10],rax
  4017f2:	test   rax,rax
  4017f5:	jne    401756 <__sprintf_chk@plt+0x3a6>
  4017fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401800:	mov    rax,QWORD PTR [rsp+0x68]
  401805:	xor    rax,QWORD PTR fs:0x28
  40180e:	jne    40181f <__sprintf_chk@plt+0x46f>
  401810:	add    rsp,0x78
  401814:	pop    rbx
  401815:	pop    rbp
  401816:	pop    r12
  401818:	pop    r13
  40181a:	pop    r14
  40181c:	pop    r15
  40181e:	ret    
  40181f:	call   401270 <__stack_chk_fail@plt>
  401824:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40182f:	nop
  401830:	endbr64 
  401834:	push   r12
  401836:	xor    eax,eax
  401838:	lea    rsi,[rip+0x17d3]        # 403012 <error@@Base+0x5a2>
  40183f:	push   rbp
  401840:	mov    edi,0x1
  401845:	push   rbx
  401846:	call   401320 <__printf_chk@plt>
  40184b:	mov    rbp,0x4051c0
  401852:	cmp    QWORD PTR [rbp+0x3ee8],0x0
  40185a:	jle    40189a <__sprintf_chk@plt+0x4ea>
  40185c:	xor    ebx,ebx
  40185e:	lea    r12,[rip+0x17c0]        # 403025 <error@@Base+0x5b5>
  401865:	nop    DWORD PTR [rax]
  401868:	mov    rax,QWORD PTR [rbp+0x3ee0]
  40186f:	mov    rsi,r12
  401872:	mov    rax,QWORD PTR [rax+rbx*8]
  401876:	mov    edi,0x1
  40187b:	mov    rcx,QWORD PTR [rax+0x30]
  40187f:	mov    rdx,QWORD PTR [rax+0x28]
  401883:	mov    r8,QWORD PTR [rax+0x10]
  401887:	inc    rbx
  40188a:	xor    eax,eax
  40188c:	call   401320 <__printf_chk@plt>
  401891:	cmp    QWORD PTR [rbp+0x3ee8],rbx
  401898:	jg     401868 <__sprintf_chk@plt+0x4b8>
  40189a:	pop    rbx
  40189b:	mov    rcx,QWORD PTR [rbp+0x3ef8]
  4018a2:	mov    rdx,QWORD PTR [rbp+0x3ef0]
  4018a9:	pop    rbp
  4018aa:	lea    rsi,[rip+0x1786]        # 403037 <error@@Base+0x5c7>
  4018b1:	mov    edi,0x1
  4018b6:	xor    eax,eax
  4018b8:	pop    r12
  4018ba:	jmp    401320 <__printf_chk@plt>
  4018bf:	nop
  4018c0:	endbr64 
  4018c4:	push   rbx
  4018c5:	mov    rbx,0x4051c0
  4018cc:	xor    eax,eax
  4018ce:	mov    rdi,rbx
  4018d1:	call   401f30 <__sprintf_chk@plt+0xb80>
  4018d6:	mov    rsi,QWORD PTR [rbx+0x3ee0]
  4018dd:	mov    rdi,QWORD PTR [rbx+0x3ee8]
  4018e4:	mov    rdx,0x401540
  4018eb:	xor    eax,eax
  4018ed:	call   401d20 <__sprintf_chk@plt+0x970>
  4018f2:	xor    eax,eax
  4018f4:	call   401830 <__sprintf_chk@plt+0x480>
  4018f9:	lea    rsi,[rip+0x174a]        # 40304a <error@@Base+0x5da>
  401900:	mov    edi,0x1
  401905:	xor    eax,eax
  401907:	call   401320 <__printf_chk@plt>
  40190c:	mov    rsi,QWORD PTR [rbx+0x3ee0]
  401913:	mov    rdi,QWORD PTR [rbx+0x3ee8]
  40191a:	mov    rdx,0x4015a0
  401921:	xor    eax,eax
  401923:	call   401d20 <__sprintf_chk@plt+0x970>
  401928:	xor    eax,eax
  40192a:	pop    rbx
  40192b:	jmp    401830 <__sprintf_chk@plt+0x480>
  401930:	endbr64 
  401934:	mov    QWORD PTR [rdi+0x8],0x0
  40193c:	mov    QWORD PTR [rdi],0x0
  401943:	mov    QWORD PTR [rdi+0x10],0x0
  40194b:	mov    QWORD PTR [rdi+0x18],0x0
  401953:	ret    
  401954:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40195f:	nop
  401960:	endbr64 
  401964:	push   rbx
  401965:	mov    rbx,rdi
  401968:	mov    rax,QWORD PTR [rdi]
  40196b:	mov    QWORD PTR [rsi],0x0
  401972:	mov    QWORD PTR [rsi+0x8],rax
  401976:	mov    QWORD PTR [rdi],rsi
  401979:	test   rax,rax
  40197c:	je     4019a0 <__sprintf_chk@plt+0x5f0>
  40197e:	mov    QWORD PTR [rax],rsi
  401981:	mov    rdi,QWORD PTR [rbx+0x10]
  401985:	test   rdi,rdi
  401988:	je     401997 <__sprintf_chk@plt+0x5e7>
  40198a:	call   4011f0 <free@plt>
  40198f:	mov    QWORD PTR [rbx+0x10],0x0
  401997:	inc    QWORD PTR [rbx+0x18]
  40199b:	pop    rbx
  40199c:	ret    
  40199d:	nop    DWORD PTR [rax]
  4019a0:	mov    QWORD PTR [rdi+0x8],rsi
  4019a4:	jmp    401981 <__sprintf_chk@plt+0x5d1>
  4019a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019b0:	endbr64 
  4019b4:	push   rbx
  4019b5:	mov    rbx,rdi
  4019b8:	mov    rax,QWORD PTR [rdi+0x8]
  4019bc:	mov    QWORD PTR [rsi+0x8],0x0
  4019c4:	mov    QWORD PTR [rsi],rax
  4019c7:	test   rax,rax
  4019ca:	je     4019f0 <__sprintf_chk@plt+0x640>
  4019cc:	mov    QWORD PTR [rax+0x8],rsi
  4019d0:	mov    rdi,QWORD PTR [rbx+0x10]
  4019d4:	mov    QWORD PTR [rbx+0x8],rsi
  4019d8:	test   rdi,rdi
  4019db:	je     4019ea <__sprintf_chk@plt+0x63a>
  4019dd:	call   4011f0 <free@plt>
  4019e2:	mov    QWORD PTR [rbx+0x10],0x0
  4019ea:	inc    QWORD PTR [rbx+0x18]
  4019ee:	pop    rbx
  4019ef:	ret    
  4019f0:	mov    QWORD PTR [rdi],rsi
  4019f3:	jmp    4019d0 <__sprintf_chk@plt+0x620>
  4019f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a00:	endbr64 
  401a04:	mov    rax,QWORD PTR [rdx]
  401a07:	push   rbx
  401a08:	mov    QWORD PTR [rsi],rax
  401a0b:	mov    rbx,rdi
  401a0e:	mov    QWORD PTR [rsi+0x8],rdx
  401a12:	test   rax,rax
  401a15:	je     401a40 <__sprintf_chk@plt+0x690>
  401a17:	mov    QWORD PTR [rax+0x8],rsi
  401a1b:	mov    rdi,QWORD PTR [rbx+0x10]
  401a1f:	mov    QWORD PTR [rdx],rsi
  401a22:	test   rdi,rdi
  401a25:	je     401a34 <__sprintf_chk@plt+0x684>
  401a27:	call   4011f0 <free@plt>
  401a2c:	mov    QWORD PTR [rbx+0x10],0x0
  401a34:	inc    QWORD PTR [rbx+0x18]
  401a38:	pop    rbx
  401a39:	ret    
  401a3a:	nop    WORD PTR [rax+rax*1+0x0]
  401a40:	mov    QWORD PTR [rdi],rsi
  401a43:	jmp    401a1b <__sprintf_chk@plt+0x66b>
  401a45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a50:	endbr64 
  401a54:	mov    rax,QWORD PTR [rsi+0x8]
  401a58:	push   rbx
  401a59:	mov    QWORD PTR [rdx],rsi
  401a5c:	mov    QWORD PTR [rdx+0x8],rax
  401a60:	mov    rbx,rdi
  401a63:	mov    QWORD PTR [rsi+0x8],rdx
  401a67:	test   rax,rax
  401a6a:	je     401a90 <__sprintf_chk@plt+0x6e0>
  401a6c:	mov    QWORD PTR [rax],rdx
  401a6f:	mov    rdi,QWORD PTR [rbx+0x10]
  401a73:	test   rdi,rdi
  401a76:	je     401a85 <__sprintf_chk@plt+0x6d5>
  401a78:	call   4011f0 <free@plt>
  401a7d:	mov    QWORD PTR [rbx+0x10],0x0
  401a85:	inc    QWORD PTR [rbx+0x18]
  401a89:	pop    rbx
  401a8a:	ret    
  401a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a90:	mov    QWORD PTR [rdi+0x8],rdx
  401a94:	jmp    401a6f <__sprintf_chk@plt+0x6bf>
  401a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401aa0:	endbr64 
  401aa4:	mov    rdx,QWORD PTR [rsi]
  401aa7:	push   rbx
  401aa8:	mov    rax,QWORD PTR [rsi+0x8]
  401aac:	mov    rbx,rdi
  401aaf:	test   rdx,rdx
  401ab2:	je     401af0 <__sprintf_chk@plt+0x740>
  401ab4:	mov    QWORD PTR [rdx+0x8],rax
  401ab8:	mov    rax,QWORD PTR [rsi+0x8]
  401abc:	test   rax,rax
  401abf:	je     401af8 <__sprintf_chk@plt+0x748>
  401ac1:	mov    QWORD PTR [rax],rdx
  401ac4:	mov    rdi,QWORD PTR [rbx+0x10]
  401ac8:	mov    QWORD PTR [rsi+0x8],0x0
  401ad0:	mov    QWORD PTR [rsi],0x0
  401ad7:	test   rdi,rdi
  401ada:	je     401ae9 <__sprintf_chk@plt+0x739>
  401adc:	call   4011f0 <free@plt>
  401ae1:	mov    QWORD PTR [rbx+0x10],0x0
  401ae9:	dec    QWORD PTR [rbx+0x18]
  401aed:	pop    rbx
  401aee:	ret    
  401aef:	nop
  401af0:	mov    QWORD PTR [rdi],rax
  401af3:	test   rax,rax
  401af6:	jne    401ac1 <__sprintf_chk@plt+0x711>
  401af8:	mov    QWORD PTR [rbx+0x8],rdx
  401afc:	jmp    401ac4 <__sprintf_chk@plt+0x714>
  401afe:	xchg   ax,ax
  401b00:	endbr64 
  401b04:	cmp    QWORD PTR [rdi+0x10],0x0
  401b09:	je     401b10 <__sprintf_chk@plt+0x760>
  401b0b:	ret    
  401b0c:	nop    DWORD PTR [rax+0x0]
  401b10:	mov    rax,QWORD PTR [rdi+0x18]
  401b14:	test   rax,rax
  401b17:	je     401b0b <__sprintf_chk@plt+0x75b>
  401b19:	push   rbx
  401b1a:	mov    esi,0x8
  401b1f:	mov    rbx,rdi
  401b22:	mov    rdi,rax
  401b25:	xor    eax,eax
  401b27:	call   402ac0 <error@@Base+0x50>
  401b2c:	mov    rdx,QWORD PTR [rbx]
  401b2f:	mov    QWORD PTR [rbx+0x10],rax
  401b33:	test   rdx,rdx
  401b36:	je     401b50 <__sprintf_chk@plt+0x7a0>
  401b38:	nop    DWORD PTR [rax+rax*1+0x0]
  401b40:	mov    QWORD PTR [rax],rdx
  401b43:	add    rax,0x8
  401b47:	mov    rdx,QWORD PTR [rdx+0x8]
  401b4b:	test   rdx,rdx
  401b4e:	jne    401b40 <__sprintf_chk@plt+0x790>
  401b50:	pop    rbx
  401b51:	ret    
  401b52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b5d:	nop    DWORD PTR [rax]
  401b60:	endbr64 
  401b64:	push   r12
  401b66:	push   rbp
  401b67:	push   rbx
  401b68:	mov    rbx,QWORD PTR [rdi]
  401b6b:	test   rbx,rbx
  401b6e:	je     401b9e <__sprintf_chk@plt+0x7ee>
  401b70:	mov    rbp,rdi
  401b73:	mov    r12,rsi
  401b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b80:	mov    rsi,rbx
  401b83:	mov    rdi,rbp
  401b86:	xor    eax,eax
  401b88:	call   401aa0 <__sprintf_chk@plt+0x6f0>
  401b8d:	mov    rdi,rbx
  401b90:	xor    eax,eax
  401b92:	call   r12
  401b95:	mov    rbx,QWORD PTR [rbp+0x0]
  401b99:	test   rbx,rbx
  401b9c:	jne    401b80 <__sprintf_chk@plt+0x7d0>
  401b9e:	pop    rbx
  401b9f:	pop    rbp
  401ba0:	pop    r12
  401ba2:	ret    
  401ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bad:	nop    DWORD PTR [rax]
  401bb0:	push   r15
  401bb2:	mov    rax,rsi
  401bb5:	shl    rax,0x3
  401bb9:	push   r14
  401bbb:	push   r13
  401bbd:	mov    r13,rdi
  401bc0:	push   r12
  401bc2:	push   rbp
  401bc3:	push   rbx
  401bc4:	sub    rsp,0x18
  401bc8:	mov    QWORD PTR [rsp],rsi
  401bcc:	mov    QWORD PTR [rsp+0x8],rax
  401bd1:	mov    rax,QWORD PTR [rip+0x3598]        # 405170 <error@@Base+0x2700>
  401bd8:	mov    rdx,QWORD PTR [rsp]
  401bdc:	mov    rbx,QWORD PTR [rax+r13*8]
  401be0:	mov    r15,rdx
  401be3:	mov    rbp,r13
  401be6:	cmp    r13,rdx
  401be9:	jge    401d03 <__sprintf_chk@plt+0x953>
  401bef:	nop
  401bf0:	mov    rsi,QWORD PTR [rax+r15*8]
  401bf4:	mov    rdi,rbx
  401bf7:	xor    eax,eax
  401bf9:	lea    r12,[r15*8+0x0]
  401c01:	call   QWORD PTR [rip+0x3561]        # 405168 <error@@Base+0x26f8>
  401c07:	test   eax,eax
  401c09:	jns    401ca8 <__sprintf_chk@plt+0x8f8>
  401c0f:	dec    r15
  401c12:	mov    rax,QWORD PTR [rip+0x3557]        # 405170 <error@@Base+0x2700>
  401c19:	lea    r12,[r15*8+0x0]
  401c21:	cmp    rbp,r15
  401c24:	jl     401bf0 <__sprintf_chk@plt+0x840>
  401c26:	lea    rsi,[rax+r12*1]
  401c2a:	cmp    r15,rbp
  401c2d:	je     401cbf <__sprintf_chk@plt+0x90f>
  401c33:	mov    rsi,QWORD PTR [rsi]
  401c36:	lea    r14,[rbp+0x1]
  401c3a:	lea    rdi,[rbp*8+0x0]
  401c42:	mov    QWORD PTR [rax+rbp*8],rsi
  401c46:	cmp    r15,r14
  401c49:	jg     401c5f <__sprintf_chk@plt+0x8af>
  401c4b:	jmp    401ceb <__sprintf_chk@plt+0x93b>
  401c50:	inc    r14
  401c53:	mov    rax,QWORD PTR [rip+0x3516]        # 405170 <error@@Base+0x2700>
  401c5a:	cmp    r15,r14
  401c5d:	je     401cb8 <__sprintf_chk@plt+0x908>
  401c5f:	mov    rsi,QWORD PTR [rax+r14*8]
  401c63:	mov    rdi,rbx
  401c66:	xor    eax,eax
  401c68:	lea    rbp,[r14*8+0x0]
  401c70:	call   QWORD PTR [rip+0x34f2]        # 405168 <error@@Base+0x26f8>
  401c76:	test   eax,eax
  401c78:	jg     401c50 <__sprintf_chk@plt+0x8a0>
  401c7a:	mov    rax,QWORD PTR [rip+0x34ef]        # 405170 <error@@Base+0x2700>
  401c81:	lea    rsi,[rax+rbp*1]
  401c85:	mov    rbp,r14
  401c88:	mov    rsi,QWORD PTR [rsi]
  401c8b:	dec    r15
  401c8e:	mov    QWORD PTR [rax+r12*1],rsi
  401c92:	cmp    r15,r14
  401c95:	jg     401bf0 <__sprintf_chk@plt+0x840>
  401c9b:	lea    rsi,[rax+r15*8]
  401c9f:	jmp    401cc2 <__sprintf_chk@plt+0x912>
  401ca1:	nop    DWORD PTR [rax+0x0]
  401ca8:	mov    rax,QWORD PTR [rip+0x34c1]        # 405170 <error@@Base+0x2700>
  401caf:	jmp    401c26 <__sprintf_chk@plt+0x876>
  401cb4:	nop    DWORD PTR [rax+0x0]
  401cb8:	lea    rsi,[rax+r15*8]
  401cbc:	mov    rbp,r15
  401cbf:	mov    r15,rbp
  401cc2:	mov    QWORD PTR [rsi],rbx
  401cc5:	lea    rsi,[r15-0x1]
  401cc9:	cmp    r13,rsi
  401ccc:	jl     401cf7 <__sprintf_chk@plt+0x947>
  401cce:	lea    r13,[rbp+0x1]
  401cd2:	cmp    r13,QWORD PTR [rsp]
  401cd6:	jl     401bd1 <__sprintf_chk@plt+0x821>
  401cdc:	add    rsp,0x18
  401ce0:	pop    rbx
  401ce1:	pop    rbp
  401ce2:	pop    r12
  401ce4:	pop    r13
  401ce6:	pop    r14
  401ce8:	pop    r15
  401cea:	ret    
  401ceb:	lea    rsi,[rax+rdi*1+0x8]
  401cf0:	je     401cbc <__sprintf_chk@plt+0x90c>
  401cf2:	mov    rbp,r14
  401cf5:	jmp    401c88 <__sprintf_chk@plt+0x8d8>
  401cf7:	mov    rdi,r13
  401cfa:	xor    eax,eax
  401cfc:	call   401bb0 <__sprintf_chk@plt+0x800>
  401d01:	jmp    401cce <__sprintf_chk@plt+0x91e>
  401d03:	mov    rcx,QWORD PTR [rsp+0x8]
  401d08:	mov    r15,QWORD PTR [rsp]
  401d0c:	lea    rsi,[rax+rcx*1]
  401d10:	jmp    401cc2 <__sprintf_chk@plt+0x912>
  401d12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d1d:	nop    DWORD PTR [rax]
  401d20:	endbr64 
  401d24:	cmp    rdi,0x1
  401d28:	jle    401d48 <__sprintf_chk@plt+0x998>
  401d2a:	mov    QWORD PTR [rip+0x343f],rsi        # 405170 <error@@Base+0x2700>
  401d31:	xor    eax,eax
  401d33:	lea    rsi,[rdi-0x1]
  401d37:	xor    edi,edi
  401d39:	mov    QWORD PTR [rip+0x3428],rdx        # 405168 <error@@Base+0x26f8>
  401d40:	jmp    401bb0 <__sprintf_chk@plt+0x800>
  401d45:	nop    DWORD PTR [rax]
  401d48:	ret    
  401d49:	nop    DWORD PTR [rax+0x0]
  401d50:	endbr64 
  401d54:	push   r12
  401d56:	mov    r12,rdi
  401d59:	push   rbp
  401d5a:	lea    rbp,[rdi+0x3ee0]
  401d61:	push   rbx
  401d62:	mov    rbx,rdi
  401d65:	nop    DWORD PTR [rax]
  401d68:	mov    rdi,rbx
  401d6b:	xor    eax,eax
  401d6d:	add    rbx,0x20
  401d71:	call   401930 <__sprintf_chk@plt+0x580>
  401d76:	cmp    rbx,rbp
  401d79:	jne    401d68 <__sprintf_chk@plt+0x9b8>
  401d7b:	pop    rbx
  401d7c:	pop    rbp
  401d7d:	mov    QWORD PTR [r12+0x3ee0],0x0
  401d89:	mov    QWORD PTR [r12+0x3ee8],0x0
  401d95:	pop    r12
  401d97:	ret    
  401d98:	nop    DWORD PTR [rax+rax*1+0x0]
  401da0:	endbr64 
  401da4:	push   rbp
  401da5:	mov    rbp,rsi
  401da8:	push   rbx
  401da9:	sub    rsp,0x8
  401dad:	movzx  eax,BYTE PTR [rsi]
  401db0:	test   al,al
  401db2:	je     401e28 <__sprintf_chk@plt+0xa78>
  401db4:	lea    rdx,[rsi+0x1]
  401db8:	xor    ecx,ecx
  401dba:	nop    WORD PTR [rax+rax*1+0x0]
  401dc0:	inc    rdx
  401dc3:	add    rcx,rax
  401dc6:	movzx  eax,BYTE PTR [rdx-0x1]
  401dca:	test   al,al
  401dcc:	jne    401dc0 <__sprintf_chk@plt+0xa10>
  401dce:	mov    rax,rcx
  401dd1:	movabs rdx,0x824a4e60b3262bc5
  401ddb:	mul    rdx
  401dde:	shr    rdx,0x8
  401de2:	imul   rdx,rdx,0x1f7
  401de9:	sub    ecx,edx
  401deb:	movsxd rcx,ecx
  401dee:	shl    rcx,0x5
  401df2:	mov    rbx,QWORD PTR [rdi+rcx*1]
  401df6:	test   rbx,rbx
  401df9:	jne    401e09 <__sprintf_chk@plt+0xa59>
  401dfb:	jmp    401e19 <__sprintf_chk@plt+0xa69>
  401dfd:	nop    DWORD PTR [rax]
  401e00:	mov    rbx,QWORD PTR [rbx+0x8]
  401e04:	test   rbx,rbx
  401e07:	je     401e19 <__sprintf_chk@plt+0xa69>
  401e09:	mov    rsi,QWORD PTR [rbx+0x10]
  401e0d:	mov    rdi,rbp
  401e10:	call   4012e0 <strcmp@plt>
  401e15:	test   eax,eax
  401e17:	jne    401e00 <__sprintf_chk@plt+0xa50>
  401e19:	add    rsp,0x8
  401e1d:	mov    rax,rbx
  401e20:	pop    rbx
  401e21:	pop    rbp
  401e22:	ret    
  401e23:	nop    DWORD PTR [rax+rax*1+0x0]
  401e28:	xor    ecx,ecx
  401e2a:	jmp    401deb <__sprintf_chk@plt+0xa3b>
  401e2c:	nop    DWORD PTR [rax+0x0]
  401e30:	endbr64 
  401e34:	push   rbx
  401e35:	mov    rdx,QWORD PTR [rsi+0x10]
  401e39:	mov    rbx,rdi
  401e3c:	movzx  eax,BYTE PTR [rdx]
  401e3f:	test   al,al
  401e41:	je     401e83 <__sprintf_chk@plt+0xad3>
  401e43:	inc    rdx
  401e46:	xor    edi,edi
  401e48:	nop    DWORD PTR [rax+rax*1+0x0]
  401e50:	inc    rdx
  401e53:	add    rdi,rax
  401e56:	movzx  eax,BYTE PTR [rdx-0x1]
  401e5a:	test   al,al
  401e5c:	jne    401e50 <__sprintf_chk@plt+0xaa0>
  401e5e:	mov    rax,rdi
  401e61:	movabs rdx,0x824a4e60b3262bc5
  401e6b:	mul    rdx
  401e6e:	shr    rdx,0x8
  401e72:	imul   rdx,rdx,0x1f7
  401e79:	sub    rdi,rdx
  401e7c:	shl    rdi,0x5
  401e80:	add    rdi,rbx
  401e83:	xor    eax,eax
  401e85:	call   401960 <__sprintf_chk@plt+0x5b0>
  401e8a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  401e91:	test   rdi,rdi
  401e94:	je     401ea6 <__sprintf_chk@plt+0xaf6>
  401e96:	call   4011f0 <free@plt>
  401e9b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  401ea6:	inc    QWORD PTR [rbx+0x3ee8]
  401ead:	pop    rbx
  401eae:	ret    
  401eaf:	nop
  401eb0:	endbr64 
  401eb4:	push   rbx
  401eb5:	mov    rdx,QWORD PTR [rsi+0x10]
  401eb9:	mov    rbx,rdi
  401ebc:	movzx  eax,BYTE PTR [rdx]
  401ebf:	test   al,al
  401ec1:	je     401f03 <__sprintf_chk@plt+0xb53>
  401ec3:	inc    rdx
  401ec6:	xor    edi,edi
  401ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ed0:	inc    rdx
  401ed3:	add    rdi,rax
  401ed6:	movzx  eax,BYTE PTR [rdx-0x1]
  401eda:	test   al,al
  401edc:	jne    401ed0 <__sprintf_chk@plt+0xb20>
  401ede:	mov    rax,rdi
  401ee1:	movabs rdx,0x824a4e60b3262bc5
  401eeb:	mul    rdx
  401eee:	shr    rdx,0x8
  401ef2:	imul   rdx,rdx,0x1f7
  401ef9:	sub    rdi,rdx
  401efc:	shl    rdi,0x5
  401f00:	add    rdi,rbx
  401f03:	xor    eax,eax
  401f05:	call   401aa0 <__sprintf_chk@plt+0x6f0>
  401f0a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  401f11:	test   rdi,rdi
  401f14:	je     401f26 <__sprintf_chk@plt+0xb76>
  401f16:	call   4011f0 <free@plt>
  401f1b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  401f26:	dec    QWORD PTR [rbx+0x3ee8]
  401f2d:	pop    rbx
  401f2e:	ret    
  401f2f:	nop
  401f30:	endbr64 
  401f34:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  401f3c:	je     401f3f <__sprintf_chk@plt+0xb8f>
  401f3e:	ret    
  401f3f:	mov    rax,QWORD PTR [rdi+0x3ee8]
  401f46:	test   rax,rax
  401f49:	je     401f3e <__sprintf_chk@plt+0xb8e>
  401f4b:	push   rbx
  401f4c:	mov    esi,0x8
  401f51:	mov    rbx,rdi
  401f54:	mov    rdi,rax
  401f57:	xor    eax,eax
  401f59:	call   402ac0 <error@@Base+0x50>
  401f5e:	mov    QWORD PTR [rbx+0x3ee0],rax
  401f65:	mov    rsi,rbx
  401f68:	lea    rdi,[rbx+0x3ee0]
  401f6f:	xor    ecx,ecx
  401f71:	nop    DWORD PTR [rax+0x0]
  401f78:	mov    rdx,QWORD PTR [rsi]
  401f7b:	test   rdx,rdx
  401f7e:	je     401f91 <__sprintf_chk@plt+0xbe1>
  401f80:	inc    rcx
  401f83:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  401f88:	mov    rdx,QWORD PTR [rdx+0x8]
  401f8c:	test   rdx,rdx
  401f8f:	jne    401f80 <__sprintf_chk@plt+0xbd0>
  401f91:	add    rsi,0x20
  401f95:	cmp    rsi,rdi
  401f98:	jne    401f78 <__sprintf_chk@plt+0xbc8>
  401f9a:	pop    rbx
  401f9b:	ret    
  401f9c:	nop    DWORD PTR [rax+0x0]
  401fa0:	endbr64 
  401fa4:	push   r13
  401fa6:	mov    r13,rdi
  401fa9:	push   r12
  401fab:	mov    r12,rsi
  401fae:	push   rbp
  401faf:	lea    rbp,[rdi+0x3ee0]
  401fb6:	push   rbx
  401fb7:	mov    rbx,rdi
  401fba:	sub    rsp,0x8
  401fbe:	xchg   ax,ax
  401fc0:	mov    rdi,rbx
  401fc3:	mov    rsi,r12
  401fc6:	xor    eax,eax
  401fc8:	add    rbx,0x20
  401fcc:	call   401b60 <__sprintf_chk@plt+0x7b0>
  401fd1:	cmp    rbx,rbp
  401fd4:	jne    401fc0 <__sprintf_chk@plt+0xc10>
  401fd6:	mov    rdi,QWORD PTR [r13+0x3ee0]
  401fdd:	test   rdi,rdi
  401fe0:	je     401ff2 <__sprintf_chk@plt+0xc42>
  401fe2:	call   4011f0 <free@plt>
  401fe7:	mov    QWORD PTR [r13+0x3ee0],0x0
  401ff2:	mov    QWORD PTR [r13+0x3ee8],0x0
  401ffd:	add    rsp,0x8
  402001:	pop    rbx
  402002:	pop    rbp
  402003:	pop    r12
  402005:	pop    r13
  402007:	ret    
  402008:	nop    DWORD PTR [rax+rax*1+0x0]
  402010:	endbr64 
  402014:	push   r12
  402016:	xor    eax,eax
  402018:	mov    r12d,esi
  40201b:	push   rbp
  40201c:	mov    esi,0x18
  402021:	mov    ebp,edx
  402023:	push   rbx
  402024:	mov    rbx,rdi
  402027:	mov    edi,0x1
  40202c:	call   402ac0 <error@@Base+0x50>
  402031:	mov    BYTE PTR [rax+0x10],r12b
  402035:	mov    DWORD PTR [rax+0x14],ebp
  402038:	mov    rdi,rbx
  40203b:	mov    rsi,rax
  40203e:	pop    rbx
  40203f:	pop    rbp
  402040:	xor    eax,eax
  402042:	pop    r12
  402044:	jmp    4019b0 <__sprintf_chk@plt+0x600>
  402049:	nop    DWORD PTR [rax+0x0]
  402050:	endbr64 
  402054:	push   r15
  402056:	push   r14
  402058:	push   r13
  40205a:	push   r12
  40205c:	push   rbp
  40205d:	push   rbx
  40205e:	sub    rsp,0xb8
  402065:	mov    QWORD PTR [rsp+0x8],rdi
  40206a:	mov    QWORD PTR [rsp+0x20],rdx
  40206f:	mov    rdi,rsi
  402072:	mov    rsi,QWORD PTR fs:0x28
  40207b:	mov    QWORD PTR [rsp+0xa8],rsi
  402083:	xor    esi,esi
  402085:	cmp    BYTE PTR [rdx],0x0
  402088:	je     402093 <__sprintf_chk@plt+0xce3>
  40208a:	test   rdi,rdi
  40208d:	je     402425 <__sprintf_chk@plt+0x1075>
  402093:	mov    rax,QWORD PTR [rsp+0x8]
  402098:	lea    rsi,[rip+0x1028]        # 4030c7 <error@@Base+0x657>
  40209f:	mov    rax,QWORD PTR [rax+0x8]
  4020a3:	mov    QWORD PTR [rsp+0x28],rax
  4020a8:	xor    eax,eax
  4020aa:	call   402b70 <error@@Base+0x100>
  4020af:	mov    r12,rax
  4020b2:	mov    rax,QWORD PTR [rsp+0x20]
  4020b7:	cmp    BYTE PTR [rax],0x0
  4020ba:	jne    402368 <__sprintf_chk@plt+0xfb8>
  4020c0:	mov    rsi,QWORD PTR [rsp+0x20]
  4020c5:	mov    eax,0x5e
  4020ca:	mov    ecx,DWORD PTR [rsi+0x4]
  4020cd:	mov    rdi,r12
  4020d0:	test   ecx,ecx
  4020d2:	cmovne eax,ecx
  4020d5:	movzx  r15d,BYTE PTR [rsi+0x1]
  4020da:	mov    DWORD PTR [rsp+0x14],eax
  4020de:	call   4013a0 <getc@plt>
  4020e3:	cmp    eax,0xffffffff
  4020e6:	je     4021d7 <__sprintf_chk@plt+0xe27>
  4020ec:	mov    rsi,QWORD PTR [rip+0x2efd]        # 404ff0 <error@@Base+0x2580>
  4020f3:	movsxd rdx,eax
  4020f6:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  4020fb:	mov    rbx,rcx
  4020fe:	test   rcx,rcx
  402101:	jle    402452 <__sprintf_chk@plt+0x10a2>
  402107:	lea    rsi,[rsp+0x3c]
  40210c:	xor    ebp,ebp
  40210e:	lea    r13,[rsp+0x40]
  402113:	mov    QWORD PTR [rsp+0x18],rsi
  402118:	jmp    40215e <__sprintf_chk@plt+0xdae>
  40211a:	nop    WORD PTR [rax+rax*1+0x0]
  402120:	mov    rdi,QWORD PTR [rsp+0x8]
  402125:	movsx  esi,bpl
  402129:	xor    eax,eax
  40212b:	call   402010 <__sprintf_chk@plt+0xc60>
  402130:	mov    rdi,r12
  402133:	xor    ebp,ebp
  402135:	call   4013a0 <getc@plt>
  40213a:	cmp    eax,0xffffffff
  40213d:	je     4021d7 <__sprintf_chk@plt+0xe27>
  402143:	mov    rcx,QWORD PTR [rip+0x2ea6]        # 404ff0 <error@@Base+0x2580>
  40214a:	movsxd rdx,eax
  40214d:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  402152:	mov    rbx,rcx
  402155:	test   rcx,rcx
  402158:	jle    402452 <__sprintf_chk@plt+0x10a2>
  40215e:	mov    BYTE PTR [rsp+0x40],al
  402162:	cmp    rcx,0x1
  402166:	je     402190 <__sprintf_chk@plt+0xde0>
  402168:	lea    r14,[rcx-0x1]
  40216c:	lea    rdi,[r13+0x1]
  402170:	mov    r8,r12
  402173:	mov    rcx,r14
  402176:	mov    edx,0x1
  40217b:	mov    esi,0x3
  402180:	call   401330 <__fread_chk@plt>
  402185:	cdqe   
  402187:	cmp    r14,rax
  40218a:	jne    402460 <__sprintf_chk@plt+0x10b0>
  402190:	mov    rdx,QWORD PTR [rsp+0x18]
  402195:	mov    esi,0x4
  40219a:	mov    rdi,r13
  40219d:	call   4012c0 <utf8proc_iterate@plt>
  4021a2:	cmp    eax,ebx
  4021a4:	jne    402440 <__sprintf_chk@plt+0x1090>
  4021aa:	mov    edx,DWORD PTR [rsp+0x3c]
  4021ae:	test   r15b,r15b
  4021b1:	je     402120 <__sprintf_chk@plt+0xd70>
  4021b7:	cmp    DWORD PTR [rsp+0x14],edx
  4021bb:	jne    402120 <__sprintf_chk@plt+0xd70>
  4021c1:	mov    rdi,r12
  4021c4:	mov    ebp,0x1
  4021c9:	call   4013a0 <getc@plt>
  4021ce:	cmp    eax,0xffffffff
  4021d1:	jne    402143 <__sprintf_chk@plt+0xd93>
  4021d7:	xor    eax,eax
  4021d9:	mov    rdi,r12
  4021dc:	call   4028e0 <__sprintf_chk@plt+0x1530>
  4021e1:	mov    rax,QWORD PTR [rsp+0x20]
  4021e6:	cmp    BYTE PTR [rax+0x9],0x0
  4021ea:	je     4022f0 <__sprintf_chk@plt+0xf40>
  4021f0:	mov    rax,QWORD PTR [rsp+0x28]
  4021f5:	test   rax,rax
  4021f8:	je     402418 <__sprintf_chk@plt+0x1068>
  4021fe:	mov    rbp,QWORD PTR [rax+0x8]
  402202:	test   rbp,rbp
  402205:	je     4022f0 <__sprintf_chk@plt+0xf40>
  40220b:	mov    r12,rbp
  40220e:	jmp    40221a <__sprintf_chk@plt+0xe6a>
  402210:	mov    r12,QWORD PTR [r12+0x8]
  402215:	test   r12,r12
  402218:	je     402263 <__sprintf_chk@plt+0xeb3>
  40221a:	mov    ebx,DWORD PTR [r12+0x14]
  40221f:	mov    edi,ebx
  402221:	call   401220 <utf8proc_get_property@plt>
  402226:	cmp    ebx,0xd
  402229:	ja     402350 <__sprintf_chk@plt+0xfa0>
  40222f:	cmp    ebx,0xb
  402232:	jae    402250 <__sprintf_chk@plt+0xea0>
  402234:	cmp    ebx,0x9
  402237:	je     402250 <__sprintf_chk@plt+0xea0>
  402239:	cmp    ebx,0xa
  40223c:	je     402210 <__sprintf_chk@plt+0xe60>
  40223e:	movsx  eax,WORD PTR [rax]
  402241:	sub    eax,0x17
  402244:	cmp    eax,0x2
  402247:	ja     402210 <__sprintf_chk@plt+0xe60>
  402249:	nop    DWORD PTR [rax+0x0]
  402250:	mov    DWORD PTR [r12+0x14],0x20
  402259:	mov    r12,QWORD PTR [r12+0x8]
  40225e:	test   r12,r12
  402261:	jne    40221a <__sprintf_chk@plt+0xe6a>
  402263:	mov    r13,QWORD PTR [rsp+0x8]
  402268:	jmp    402289 <__sprintf_chk@plt+0xed9>
  40226a:	nop    WORD PTR [rax+rax*1+0x0]
  402270:	test   r12b,r12b
  402273:	jne    40227a <__sprintf_chk@plt+0xeca>
  402275:	cmp    eax,0xa
  402278:	je     4022d0 <__sprintf_chk@plt+0xf20>
  40227a:	cmp    eax,0xa
  40227d:	setne  r12b
  402281:	mov    rbp,rbx
  402284:	test   rbx,rbx
  402287:	je     4022f0 <__sprintf_chk@plt+0xf40>
  402289:	mov    eax,DWORD PTR [rbp+0x14]
  40228c:	mov    rbx,QWORD PTR [rbp+0x8]
  402290:	cmp    eax,0x20
  402293:	jne    402270 <__sprintf_chk@plt+0xec0>
  402295:	test   r12b,r12b
  402298:	je     4022b0 <__sprintf_chk@plt+0xf00>
  40229a:	test   rbx,rbx
  40229d:	je     4022b0 <__sprintf_chk@plt+0xf00>
  40229f:	mov    edx,DWORD PTR [rbx+0x14]
  4022a2:	cmp    edx,0x20
  4022a5:	je     4022b0 <__sprintf_chk@plt+0xf00>
  4022a7:	cmp    edx,0xa
  4022aa:	jne    40227a <__sprintf_chk@plt+0xeca>
  4022ac:	nop    DWORD PTR [rax+0x0]
  4022b0:	test   rbx,rbx
  4022b3:	je     4022d0 <__sprintf_chk@plt+0xf20>
  4022b5:	test   r12b,r12b
  4022b8:	je     4022d0 <__sprintf_chk@plt+0xf20>
  4022ba:	cmp    DWORD PTR [rbx+0x14],0x20
  4022be:	jne    4022d0 <__sprintf_chk@plt+0xf20>
  4022c0:	movzx  eax,BYTE PTR [rbp+0x10]
  4022c4:	or     BYTE PTR [rbx+0x10],al
  4022c7:	nop    WORD PTR [rax+rax*1+0x0]
  4022d0:	mov    rsi,rbp
  4022d3:	mov    rdi,r13
  4022d6:	xor    eax,eax
  4022d8:	call   401aa0 <__sprintf_chk@plt+0x6f0>
  4022dd:	mov    rdi,rbp
  4022e0:	call   4011f0 <free@plt>
  4022e5:	mov    rbp,rbx
  4022e8:	test   rbx,rbx
  4022eb:	jne    402289 <__sprintf_chk@plt+0xed9>
  4022ed:	nop    DWORD PTR [rax]
  4022f0:	mov    rax,QWORD PTR [rsp+0x20]
  4022f5:	cmp    BYTE PTR [rax+0xa],0x0
  4022f9:	je     402324 <__sprintf_chk@plt+0xf74>
  4022fb:	mov    rax,QWORD PTR [rsp+0x28]
  402300:	test   rax,rax
  402303:	je     402408 <__sprintf_chk@plt+0x1058>
  402309:	mov    rbx,QWORD PTR [rax+0x8]
  40230d:	jmp    40231f <__sprintf_chk@plt+0xf6f>
  40230f:	nop
  402310:	mov    edi,DWORD PTR [rbx+0x14]
  402313:	call   401290 <utf8proc_tolower@plt>
  402318:	mov    DWORD PTR [rbx+0x14],eax
  40231b:	mov    rbx,QWORD PTR [rbx+0x8]
  40231f:	test   rbx,rbx
  402322:	jne    402310 <__sprintf_chk@plt+0xf60>
  402324:	mov    rax,QWORD PTR [rsp+0xa8]
  40232c:	xor    rax,QWORD PTR fs:0x28
  402335:	jne    40246e <__sprintf_chk@plt+0x10be>
  40233b:	add    rsp,0xb8
  402342:	pop    rbx
  402343:	pop    rbp
  402344:	pop    r12
  402346:	pop    r13
  402348:	pop    r14
  40234a:	pop    r15
  40234c:	ret    
  40234d:	nop    DWORD PTR [rax]
  402350:	cmp    ebx,0xa0
  402356:	jne    40223e <__sprintf_chk@plt+0xe8e>
  40235c:	jmp    402250 <__sprintf_chk@plt+0xea0>
  402361:	nop    DWORD PTR [rax+0x0]
  402368:	lea    r13,[rsp+0x40]
  40236d:	mov    rdx,r12
  402370:	mov    esi,0x63
  402375:	mov    rdi,r13
  402378:	call   4012b0 <fgets@plt>
  40237d:	test   rax,rax
  402380:	je     40239c <__sprintf_chk@plt+0xfec>
  402382:	mov    ecx,0x33
  402387:	lea    rdi,[rip+0xd82]        # 403110 <error@@Base+0x6a0>
  40238e:	mov    rsi,r13
  402391:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402393:	seta   al
  402396:	sbb    al,0x0
  402398:	test   al,al
  40239a:	je     4023b8 <__sprintf_chk@plt+0x1008>
  40239c:	mov    rdi,r12
  40239f:	call   401280 <rewind@plt>
  4023a4:	xor    eax,eax
  4023a6:	mov    rsi,QWORD PTR [rsp+0x20]
  4023ab:	mov    BYTE PTR [rsi+0xb],al
  4023ae:	jmp    4020c0 <__sprintf_chk@plt+0xd10>
  4023b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4023b8:	xor    ebx,ebx
  4023ba:	lea    rbp,[rip+0xd87]        # 403148 <error@@Base+0x6d8>
  4023c1:	nop    DWORD PTR [rax+0x0]
  4023c8:	mov    rdx,r12
  4023cb:	mov    esi,0x63
  4023d0:	mov    rdi,r13
  4023d3:	call   4012b0 <fgets@plt>
  4023d8:	test   rax,rax
  4023db:	je     4023fb <__sprintf_chk@plt+0x104b>
  4023dd:	mov    ecx,0x38
  4023e2:	mov    rsi,r13
  4023e5:	mov    rdi,rbp
  4023e8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4023ea:	seta   al
  4023ed:	sbb    al,0x0
  4023ef:	test   al,al
  4023f1:	jne    4023c8 <__sprintf_chk@plt+0x1018>
  4023f3:	inc    ebx
  4023f5:	cmp    bx,0x2
  4023f9:	jne    4023c8 <__sprintf_chk@plt+0x1018>
  4023fb:	mov    eax,0x1
  402400:	jmp    4023a6 <__sprintf_chk@plt+0xff6>
  402402:	nop    WORD PTR [rax+rax*1+0x0]
  402408:	mov    rax,QWORD PTR [rsp+0x8]
  40240d:	mov    rbx,QWORD PTR [rax]
  402410:	jmp    40231f <__sprintf_chk@plt+0xf6f>
  402415:	nop    DWORD PTR [rax]
  402418:	mov    rax,QWORD PTR [rsp+0x8]
  40241d:	mov    rbp,QWORD PTR [rax]
  402420:	jmp    402202 <__sprintf_chk@plt+0xe52>
  402425:	lea    rsi,[rip+0xc6b]        # 403097 <error@@Base+0x627>
  40242c:	lea    rdi,[rip+0xc6e]        # 4030a1 <error@@Base+0x631>
  402433:	xor    eax,eax
  402435:	call   402b20 <error@@Base+0xb0>
  40243a:	nop    WORD PTR [rax+rax*1+0x0]
  402440:	movsxd rdi,eax
  402443:	call   401380 <utf8proc_errmsg@plt>
  402448:	mov    rdi,rax
  40244b:	xor    eax,eax
  40244d:	call   402a70 <error@@Base>
  402452:	lea    rdi,[rip+0xc58]        # 4030b1 <error@@Base+0x641>
  402459:	xor    eax,eax
  40245b:	call   402a70 <error@@Base>
  402460:	lea    rdi,[rip+0xc62]        # 4030c9 <error@@Base+0x659>
  402467:	xor    eax,eax
  402469:	call   402a70 <error@@Base>
  40246e:	call   401270 <__stack_chk_fail@plt>
  402473:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40247e:	xchg   ax,ax
  402480:	endbr64 
  402484:	sub    rsp,0x8
  402488:	call   401230 <utf8proc_encode_char@plt>
  40248d:	test   rax,rax
  402490:	jle    402497 <__sprintf_chk@plt+0x10e7>
  402492:	add    rsp,0x8
  402496:	ret    
  402497:	lea    rdi,[rip+0xc43]        # 4030e1 <error@@Base+0x671>
  40249e:	xor    eax,eax
  4024a0:	call   402a70 <error@@Base>
  4024a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4024b0:	endbr64 
  4024b4:	push   r13
  4024b6:	xor    r13d,r13d
  4024b9:	push   r12
  4024bb:	mov    r12,rdx
  4024be:	push   rbp
  4024bf:	mov    ebp,esi
  4024c1:	push   rbx
  4024c2:	mov    rbx,rdx
  4024c5:	sub    rsp,0x18
  4024c9:	test   dil,dil
  4024cc:	jne    4025c8 <__sprintf_chk@plt+0x1218>
  4024d2:	cmp    ebp,0xa
  4024d5:	jne    402510 <__sprintf_chk@plt+0x1160>
  4024d7:	test   cl,cl
  4024d9:	lea    rax,[rip+0xb6b]        # 40304b <error@@Base+0x5db>
  4024e0:	lea    rcx,[rip+0xc11]        # 4030f8 <error@@Base+0x688>
  4024e7:	cmove  rcx,rax
  4024eb:	add    rsp,0x18
  4024ef:	mov    rdi,rbx
  4024f2:	pop    rbx
  4024f3:	pop    rbp
  4024f4:	pop    r12
  4024f6:	mov    rdx,0xffffffffffffffff
  4024fd:	mov    esi,0x1
  402502:	xor    eax,eax
  402504:	pop    r13
  402506:	jmp    4013b0 <__sprintf_chk@plt>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]
  402510:	mov    edi,ebp
  402512:	call   401220 <utf8proc_get_property@plt>
  402517:	cmp    ebp,0x20
  40251a:	je     402536 <__sprintf_chk@plt+0x1186>
  40251c:	movzx  eax,WORD PTR [rax]
  40251f:	cmp    ax,0x1d
  402523:	ja     402588 <__sprintf_chk@plt+0x11d8>
  402525:	mov    edx,0x1
  40252a:	shlx   rax,rdx,rax
  40252f:	test   eax,0x207ffffe
  402534:	je     402588 <__sprintf_chk@plt+0x11d8>
  402536:	mov    edi,ebp
  402538:	call   401300 <utf8proc_category@plt>
  40253d:	sub    eax,0x6
  402540:	cmp    eax,0x2
  402543:	ja     402560 <__sprintf_chk@plt+0x11b0>
  402545:	mov    rsi,rbx
  402548:	mov    edi,0x25cc
  40254d:	xor    eax,eax
  40254f:	call   402480 <__sprintf_chk@plt+0x10d0>
  402554:	cbw    
  402556:	add    r13d,eax
  402559:	movsx  rbx,r13w
  40255d:	add    rbx,r12
  402560:	mov    rsi,rbx
  402563:	mov    edi,ebp
  402565:	xor    eax,eax
  402567:	call   402480 <__sprintf_chk@plt+0x10d0>
  40256c:	cbw    
  40256e:	add    r13d,eax
  402571:	movsx  r13,r13w
  402575:	mov    BYTE PTR [r12+r13*1],0x0
  40257a:	add    rsp,0x18
  40257e:	pop    rbx
  40257f:	pop    rbp
  402580:	pop    r12
  402582:	pop    r13
  402584:	ret    
  402585:	nop    DWORD PTR [rax]
  402588:	mov    r8d,ebp
  40258b:	lea    rcx,[rip+0xb6b]        # 4030fd <error@@Base+0x68d>
  402592:	cmp    ebp,0xff
  402598:	jbe    4025a1 <__sprintf_chk@plt+0x11f1>
  40259a:	lea    rcx,[rip+0xb63]        # 403104 <error@@Base+0x694>
  4025a1:	add    rsp,0x18
  4025a5:	mov    rdi,rbx
  4025a8:	pop    rbx
  4025a9:	pop    rbp
  4025aa:	pop    r12
  4025ac:	mov    rdx,0xffffffffffffffff
  4025b3:	mov    esi,0x1
  4025b8:	xor    eax,eax
  4025ba:	pop    r13
  4025bc:	jmp    4013b0 <__sprintf_chk@plt>
  4025c1:	nop    DWORD PTR [rax+0x0]
  4025c8:	mov    rsi,rdx
  4025cb:	mov    edi,0x5e
  4025d0:	xor    eax,eax
  4025d2:	mov    DWORD PTR [rsp+0xc],ecx
  4025d6:	call   402480 <__sprintf_chk@plt+0x10d0>
  4025db:	movsx  r13w,al
  4025e0:	movsx  rax,al
  4025e4:	lea    rbx,[r12+rax*1]
  4025e8:	mov    ecx,DWORD PTR [rsp+0xc]
  4025ec:	jmp    4024d2 <__sprintf_chk@plt+0x1122>
  4025f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025fc:	nop    DWORD PTR [rax+0x0]
  402600:	endbr64 
  402604:	push   r12
  402606:	push   rbp
  402607:	mov    rbp,rdi
  40260a:	mov    rdi,rsi
  40260d:	push   rbx
  40260e:	lea    rsi,[rip+0xaf6]        # 40310b <error@@Base+0x69b>
  402615:	mov    rbx,rdx
  402618:	sub    rsp,0x20
  40261c:	mov    rax,QWORD PTR fs:0x28
  402625:	mov    QWORD PTR [rsp+0x18],rax
  40262a:	xor    eax,eax
  40262c:	call   402b70 <error@@Base+0x100>
  402631:	mov    r12,rax
  402634:	test   rbx,rbx
  402637:	je     40268b <__sprintf_chk@plt+0x12db>
  402639:	mov    rcx,rax
  40263c:	mov    edx,0x37
  402641:	mov    esi,0x1
  402646:	lea    rdi,[rip+0xac3]        # 403110 <error@@Base+0x6a0>
  40264d:	call   401360 <fwrite@plt>
  402652:	mov    rcx,r12
  402655:	mov    edx,0x37
  40265a:	mov    esi,0x1
  40265f:	lea    rdi,[rip+0xae2]        # 403148 <error@@Base+0x6d8>
  402666:	call   401360 <fwrite@plt>
  40266b:	mov    rdi,r12
  40266e:	xor    eax,eax
  402670:	call   rbx
  402672:	mov    rcx,r12
  402675:	mov    edx,0x37
  40267a:	mov    esi,0x1
  40267f:	lea    rdi,[rip+0xac2]        # 403148 <error@@Base+0x6d8>
  402686:	call   401360 <fwrite@plt>
  40268b:	mov    rbx,QWORD PTR [rbp+0x0]
  40268f:	test   rbx,rbx
  402692:	je     4026c7 <__sprintf_chk@plt+0x1317>
  402694:	lea    rbp,[rsp+0xf]
  402699:	nop    DWORD PTR [rax+0x0]
  4026a0:	mov    esi,DWORD PTR [rbx+0x14]
  4026a3:	movsx  edi,BYTE PTR [rbx+0x10]
  4026a7:	xor    ecx,ecx
  4026a9:	mov    rdx,rbp
  4026ac:	xor    eax,eax
  4026ae:	call   4024b0 <__sprintf_chk@plt+0x1100>
  4026b3:	mov    rsi,r12
  4026b6:	mov    rdi,rbp
  4026b9:	call   4012a0 <fputs@plt>
  4026be:	mov    rbx,QWORD PTR [rbx+0x8]
  4026c2:	test   rbx,rbx
  4026c5:	jne    4026a0 <__sprintf_chk@plt+0x12f0>
  4026c7:	xor    eax,eax
  4026c9:	mov    rdi,r12
  4026cc:	call   4028e0 <__sprintf_chk@plt+0x1530>
  4026d1:	mov    rax,QWORD PTR [rsp+0x18]
  4026d6:	xor    rax,QWORD PTR fs:0x28
  4026df:	jne    4026ea <__sprintf_chk@plt+0x133a>
  4026e1:	add    rsp,0x20
  4026e5:	pop    rbx
  4026e6:	pop    rbp
  4026e7:	pop    r12
  4026e9:	ret    
  4026ea:	call   401270 <__stack_chk_fail@plt>
  4026ef:	nop
  4026f0:	endbr64 
  4026f4:	push   r14
  4026f6:	push   r13
  4026f8:	push   r12
  4026fa:	push   rbp
  4026fb:	push   rbx
  4026fc:	sub    rsp,0x10
  402700:	mov    rax,QWORD PTR fs:0x28
  402709:	mov    QWORD PTR [rsp+0x8],rax
  40270e:	xor    eax,eax
  402710:	cmp    BYTE PTR [rsi],0x0
  402713:	mov    DWORD PTR [rsp+0x4],0x0
  40271b:	je     402770 <__sprintf_chk@plt+0x13c0>
  40271d:	mov    r14,rdi
  402720:	mov    rbp,rsi
  402723:	lea    r13,[rsp+0x4]
  402728:	mov    r12,0xffffffffffffffff
  40272f:	jmp    402754 <__sprintf_chk@plt+0x13a4>
  402731:	nop    DWORD PTR [rax+0x0]
  402738:	mov    edx,DWORD PTR [rsp+0x4]
  40273c:	movsxd rbx,ebx
  40273f:	xor    esi,esi
  402741:	xor    eax,eax
  402743:	mov    rdi,r14
  402746:	add    rbp,rbx
  402749:	call   402010 <__sprintf_chk@plt+0xc60>
  40274e:	cmp    BYTE PTR [rbp+0x0],0x0
  402752:	je     402770 <__sprintf_chk@plt+0x13c0>
  402754:	mov    rdx,r13
  402757:	mov    rsi,r12
  40275a:	mov    rdi,rbp
  40275d:	call   4012c0 <utf8proc_iterate@plt>
  402762:	mov    rbx,rax
  402765:	test   eax,eax
  402767:	jg     402738 <__sprintf_chk@plt+0x1388>
  402769:	xor    eax,eax
  40276b:	jmp    402775 <__sprintf_chk@plt+0x13c5>
  40276d:	nop    DWORD PTR [rax]
  402770:	mov    eax,0x1
  402775:	mov    rcx,QWORD PTR [rsp+0x8]
  40277a:	xor    rcx,QWORD PTR fs:0x28
  402783:	jne    402792 <__sprintf_chk@plt+0x13e2>
  402785:	add    rsp,0x10
  402789:	pop    rbx
  40278a:	pop    rbp
  40278b:	pop    r12
  40278d:	pop    r13
  40278f:	pop    r14
  402791:	ret    
  402792:	call   401270 <__stack_chk_fail@plt>
  402797:	nop    WORD PTR [rax+rax*1+0x0]
  4027a0:	push   rbp
  4027a1:	push   rbx
  4027a2:	mov    ebx,edi
  4027a4:	movsx  ebx,bx
  4027a7:	sub    rsp,0x78
  4027ab:	mov    rax,QWORD PTR fs:0x28
  4027b4:	mov    QWORD PTR [rsp+0x68],rax
  4027b9:	xor    eax,eax
  4027bb:	mov    rbp,rsp
  4027be:	call   401240 <getpid@plt>
  4027c3:	mov    r9d,eax
  4027c6:	sub    rsp,0x8
  4027ca:	mov    rax,0x4090c8
  4027d1:	push   rbx
  4027d2:	mov    r8,QWORD PTR [rax]
  4027d5:	lea    rcx,[rip+0x9a4]        # 403180 <error@@Base+0x710>
  4027dc:	mov    edx,0x64
  4027e1:	mov    esi,0x1
  4027e6:	mov    rdi,rbp
  4027e9:	xor    eax,eax
  4027eb:	call   4013b0 <__sprintf_chk@plt>
  4027f0:	mov    rdi,rbp
  4027f3:	call   401390 <strdup@plt>
  4027f8:	pop    rdx
  4027f9:	pop    rcx
  4027fa:	mov    rdx,QWORD PTR [rsp+0x68]
  4027ff:	xor    rdx,QWORD PTR fs:0x28
  402808:	jne    402811 <__sprintf_chk@plt+0x1461>
  40280a:	add    rsp,0x78
  40280e:	pop    rbx
  40280f:	pop    rbp
  402810:	ret    
  402811:	call   401270 <__stack_chk_fail@plt>
  402816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402820:	push   r12
  402822:	mov    rax,0x4090d0
  402829:	mov    r12d,edi
  40282c:	push   rbp
  40282d:	push   rbx
  40282e:	mov    rdx,QWORD PTR [rax]
  402831:	test   rdx,rdx
  402834:	je     40283a <__sprintf_chk@plt+0x148a>
  402836:	xor    eax,eax
  402838:	call   rdx
  40283a:	cmp    WORD PTR [rip+0x2938],0x0        # 40517a <error@@Base+0x270a>
  402842:	jle    40287a <__sprintf_chk@plt+0x14ca>
  402844:	mov    ebx,0x1
  402849:	nop    DWORD PTR [rax+0x0]
  402850:	movsx  edi,bx
  402853:	xor    eax,eax
  402855:	call   4027a0 <__sprintf_chk@plt+0x13f0>
  40285a:	mov    rdi,rax
  40285d:	mov    rbp,rax
  402860:	xor    eax,eax
  402862:	call   401210 <unlink@plt>
  402867:	inc    ebx
  402869:	mov    rdi,rbp
  40286c:	call   4011f0 <free@plt>
  402871:	cmp    bx,WORD PTR [rip+0x2902]        # 40517a <error@@Base+0x270a>
  402878:	jle    402850 <__sprintf_chk@plt+0x14a0>
  40287a:	mov    edi,r12d
  40287d:	call   401350 <exit@plt>
  402882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40288d:	nop    DWORD PTR [rax]
  402890:	endbr64 
  402894:	movzx  edx,BYTE PTR [rdi]
  402897:	movzx  ecx,BYTE PTR [rsi]
  40289a:	test   dl,dl
  40289c:	je     4028c3 <__sprintf_chk@plt+0x1513>
  40289e:	cmp    cl,dl
  4028a0:	jne    4028c9 <__sprintf_chk@plt+0x1519>
  4028a2:	xor    eax,eax
  4028a4:	jmp    4028b4 <__sprintf_chk@plt+0x1504>
  4028a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028b0:	cmp    dl,cl
  4028b2:	jne    4028c9 <__sprintf_chk@plt+0x1519>
  4028b4:	inc    rax
  4028b7:	movzx  edx,BYTE PTR [rdi+rax*1]
  4028bb:	movzx  ecx,BYTE PTR [rsi+rax*1]
  4028bf:	test   dl,dl
  4028c1:	jne    4028b0 <__sprintf_chk@plt+0x1500>
  4028c3:	test   cl,cl
  4028c5:	je     4028d8 <__sprintf_chk@plt+0x1528>
  4028c7:	xor    edx,edx
  4028c9:	cmp    dl,cl
  4028cb:	sbb    eax,eax
  4028cd:	or     eax,0x1
  4028d0:	ret    
  4028d1:	nop    DWORD PTR [rax+0x0]
  4028d8:	xor    eax,eax
  4028da:	ret    
  4028db:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	endbr64 
  4028e4:	mov    rax,QWORD PTR [rip+0x26ed]        # 404fd8 <error@@Base+0x2568>
  4028eb:	cmp    QWORD PTR [rax],rdi
  4028ee:	je     402908 <__sprintf_chk@plt+0x1558>
  4028f0:	mov    rax,QWORD PTR [rip+0x26d9]        # 404fd0 <error@@Base+0x2560>
  4028f7:	cmp    QWORD PTR [rax],rdi
  4028fa:	je     402908 <__sprintf_chk@plt+0x1558>
  4028fc:	jmp    401250 <fclose@plt>
  402901:	nop    DWORD PTR [rax+0x0]
  402908:	ret    
  402909:	nop    DWORD PTR [rax+0x0]
  402910:	endbr64 
  402914:	sub    rsp,0xa8
  40291b:	mov    rsi,rdi
  40291e:	mov    rdx,rsp
  402921:	mov    edi,0x1
  402926:	mov    rax,QWORD PTR fs:0x28
  40292f:	mov    QWORD PTR [rsp+0x98],rax
  402937:	xor    eax,eax
  402939:	call   401310 <__xstat@plt>
  40293e:	test   eax,eax
  402940:	sete   al
  402943:	mov    rcx,QWORD PTR [rsp+0x98]
  40294b:	xor    rcx,QWORD PTR fs:0x28
  402954:	jne    40295e <__sprintf_chk@plt+0x15ae>
  402956:	add    rsp,0xa8
  40295d:	ret    
  40295e:	call   401270 <__stack_chk_fail@plt>
  402963:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40296e:	xchg   ax,ax
  402970:	endbr64 
  402974:	movzx  eax,WORD PTR [rip+0x27ff]        # 40517a <error@@Base+0x270a>
  40297b:	push   rbx
  40297c:	lea    edi,[rax+0x1]
  40297f:	mov    WORD PTR [rip+0x27f4],di        # 40517a <error@@Base+0x270a>
  402986:	xor    eax,eax
  402988:	movsx  edi,di
  40298b:	call   4027a0 <__sprintf_chk@plt+0x13f0>
  402990:	mov    rbx,rax
  402993:	mov    rdi,rax
  402996:	xor    eax,eax
  402998:	call   401210 <unlink@plt>
  40299d:	mov    rax,rbx
  4029a0:	pop    rbx
  4029a1:	ret    
  4029a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029ad:	nop    DWORD PTR [rax]
  4029b0:	endbr64 
  4029b4:	push   rbx
  4029b5:	mov    rbx,rdi
  4029b8:	call   401260 <strlen@plt>
  4029bd:	lea    ecx,[rax-0x1]
  4029c0:	movsx  rdx,cx
  4029c4:	test   cx,cx
  4029c7:	js     4029f3 <__sprintf_chk@plt+0x1643>
  4029c9:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  4029cd:	je     4029f3 <__sprintf_chk@plt+0x1643>
  4029cf:	sub    eax,0x2
  4029d2:	movsx  rdx,ax
  4029d6:	jmp    4029ee <__sprintf_chk@plt+0x163e>
  4029d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	lea    rax,[rdx-0x1]
  4029e4:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  4029e9:	je     4029f3 <__sprintf_chk@plt+0x1643>
  4029eb:	mov    rdx,rax
  4029ee:	test   dx,dx
  4029f1:	jns    4029e0 <__sprintf_chk@plt+0x1630>
  4029f3:	lea    rax,[rbx+rdx*1+0x1]
  4029f8:	pop    rbx
  4029f9:	ret    
  4029fa:	nop    WORD PTR [rax+rax*1+0x0]
  402a00:	endbr64 
  402a04:	push   rax
  402a05:	pop    rax
  402a06:	xor    edi,edi
  402a08:	xor    eax,eax
  402a0a:	sub    rsp,0x8
  402a0e:	call   402820 <__sprintf_chk@plt+0x1470>
  402a13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a1e:	xchg   ax,ax
  402a20:	push   rax
  402a21:	pop    rax
  402a22:	sub    rsp,0x8
  402a26:	mov    rax,0x4090c0
  402a2d:	mov    rdx,QWORD PTR [rax]
  402a30:	test   rdx,rdx
  402a33:	je     402a40 <__sprintf_chk@plt+0x1690>
  402a35:	xor    eax,eax
  402a37:	call   rdx
  402a39:	xor    eax,eax
  402a3b:	call   402a00 <__sprintf_chk@plt+0x1650>
  402a40:	mov    rax,0x4090c8
  402a47:	mov    r8,rdi
  402a4a:	mov    rcx,QWORD PTR [rax]
  402a4d:	mov    rax,QWORD PTR [rip+0x25a4]        # 404ff8 <error@@Base+0x2588>
  402a54:	lea    rdx,[rip+0x733]        # 40318e <error@@Base+0x71e>
  402a5b:	mov    rdi,QWORD PTR [rax]
  402a5e:	mov    esi,0x1
  402a63:	xor    eax,eax
  402a65:	call   401370 <__fprintf_chk@plt>
  402a6a:	jmp    402a39 <__sprintf_chk@plt+0x1689>
  402a6c:	nop    DWORD PTR [rax+0x0]

0000000000402a70 <error@@Base>:
  402a70:	endbr64 
  402a74:	push   rax
  402a75:	pop    rax
  402a76:	lea    rdx,[rip+0x720]        # 40319d <error@@Base+0x72d>
  402a7d:	mov    esi,0x1
  402a82:	sub    rsp,0x8
  402a86:	mov    rax,0x4090c8
  402a8d:	mov    r8,rdi
  402a90:	mov    rcx,QWORD PTR [rax]
  402a93:	mov    rax,QWORD PTR [rip+0x255e]        # 404ff8 <error@@Base+0x2588>
  402a9a:	mov    rdi,QWORD PTR [rax]
  402a9d:	xor    eax,eax
  402a9f:	call   401370 <__fprintf_chk@plt>
  402aa4:	mov    rax,0x405150
  402aab:	mov    edi,DWORD PTR [rax]
  402aad:	xor    eax,eax
  402aaf:	call   402820 <__sprintf_chk@plt+0x1470>
  402ab4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402abf:	nop
  402ac0:	endbr64 
  402ac4:	sub    rsp,0x8
  402ac8:	call   4012d0 <calloc@plt>
  402acd:	test   rax,rax
  402ad0:	je     402ad7 <error@@Base+0x67>
  402ad2:	add    rsp,0x8
  402ad6:	ret    
  402ad7:	lea    rdi,[rip+0x6c7]        # 4031a5 <error@@Base+0x735>
  402ade:	call   402a70 <error@@Base>
  402ae3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402aee:	xchg   ax,ax
  402af0:	endbr64 
  402af4:	cmp    BYTE PTR [rip+0x267d],0x0        # 405178 <error@@Base+0x2708>
  402afb:	je     402afe <error@@Base+0x8e>
  402afd:	ret    
  402afe:	push   rax
  402aff:	lea    rdi,[rip+0x6b9]        # 4031bf <error@@Base+0x74f>
  402b06:	xor    eax,eax
  402b08:	mov    BYTE PTR [rip+0x2669],0x1        # 405178 <error@@Base+0x2708>
  402b0f:	call   402a70 <error@@Base>
  402b14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b1f:	nop
  402b20:	endbr64 
  402b24:	push   rax
  402b25:	pop    rax
  402b26:	lea    rdx,[rip+0x6a1]        # 4031ce <error@@Base+0x75e>
  402b2d:	sub    rsp,0x8
  402b31:	mov    rax,0x4090c8
  402b38:	mov    r8,rdi
  402b3b:	mov    rcx,QWORD PTR [rax]
  402b3e:	mov    rax,QWORD PTR [rip+0x24b3]        # 404ff8 <error@@Base+0x2588>
  402b45:	mov    r9,rsi
  402b48:	mov    rdi,QWORD PTR [rax]
  402b4b:	mov    esi,0x1
  402b50:	xor    eax,eax
  402b52:	call   401370 <__fprintf_chk@plt>
  402b57:	mov    rax,0x405150
  402b5e:	mov    edi,DWORD PTR [rax]
  402b60:	xor    eax,eax
  402b62:	call   402820 <__sprintf_chk@plt+0x1470>
  402b67:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	endbr64 
  402b74:	test   rdi,rdi
  402b77:	je     402bc0 <error@@Base+0x150>
  402b79:	push   rbp
  402b7a:	mov    rbp,rsi
  402b7d:	push   rbx
  402b7e:	mov    rbx,rdi
  402b81:	sub    rsp,0x8
  402b85:	call   401340 <fopen@plt>
  402b8a:	test   rax,rax
  402b8d:	je     402ba0 <error@@Base+0x130>
  402b8f:	add    rsp,0x8
  402b93:	pop    rbx
  402b94:	pop    rbp
  402b95:	ret    
  402b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ba0:	cmp    BYTE PTR [rbp+0x0],0x77
  402ba4:	mov    rsi,rbx
  402ba7:	je     402bd0 <error@@Base+0x160>
  402ba9:	lea    rdi,[rip+0x641]        # 4031f1 <error@@Base+0x781>
  402bb0:	xor    eax,eax
  402bb2:	call   402b20 <error@@Base+0xb0>
  402bb7:	nop    WORD PTR [rax+rax*1+0x0]
  402bc0:	cmp    BYTE PTR [rsi],0x72
  402bc3:	je     402be0 <error@@Base+0x170>
  402bc5:	mov    rax,QWORD PTR [rip+0x2404]        # 404fd0 <error@@Base+0x2560>
  402bcc:	mov    rax,QWORD PTR [rax]
  402bcf:	ret    
  402bd0:	lea    rdi,[rip+0x604]        # 4031db <error@@Base+0x76b>
  402bd7:	call   402b20 <error@@Base+0xb0>
  402bdc:	nop    DWORD PTR [rax+0x0]
  402be0:	mov    rax,QWORD PTR [rip+0x23f1]        # 404fd8 <error@@Base+0x2568>
  402be7:	mov    rax,QWORD PTR [rax]
  402bea:	ret    
  402beb:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	endbr64 
  402bf4:	push   r15
  402bf6:	xor    eax,eax
  402bf8:	push   r14
  402bfa:	mov    r14,rsi
  402bfd:	push   r13
  402bff:	push   r12
  402c01:	push   rbp
  402c02:	push   rbx
  402c03:	sub    rsp,0x38
  402c07:	mov    QWORD PTR [rsp+0x8],rdi
  402c0c:	mov    rdi,QWORD PTR [rsi]
  402c0f:	mov    QWORD PTR [rsp+0x28],rdx
  402c14:	mov    QWORD PTR [rsp+0x10],rcx
  402c19:	call   4029b0 <__sprintf_chk@plt+0x1600>
  402c1e:	mov    rcx,0x4090c8
  402c25:	lea    rsi,[rip+0xfffffffffffffec4]        # 402af0 <error@@Base+0x80>
  402c2c:	mov    edi,0x2
  402c31:	mov    QWORD PTR [rcx],rax
  402c34:	call   4012f0 <__sysv_signal@plt>
  402c39:	lea    rsi,[rip+0xfffffffffffffeb0]        # 402af0 <error@@Base+0x80>
  402c40:	mov    edi,0xf
  402c45:	call   4012f0 <__sysv_signal@plt>
  402c4a:	mov    r9,QWORD PTR [rsp+0x8]
  402c4f:	mov    r15d,DWORD PTR [r9]
  402c52:	cmp    r15d,0x1
  402c56:	je     402e20 <error@@Base+0x3b0>
  402c5c:	mov    rdx,QWORD PTR [rsp+0x10]
  402c61:	jle    402e2c <error@@Base+0x3bc>
  402c67:	mov    r8d,r15d
  402c6a:	xor    r12d,r12d
  402c6d:	mov    r15,rdx
  402c70:	mov    r13d,0x1
  402c76:	mov    ebx,0x1
  402c7b:	mov    rdx,r14
  402c7e:	jmp    402c9a <error@@Base+0x22a>
  402c80:	movsx  rax,r12w
  402c84:	mov    QWORD PTR [rdx+rax*8],rbp
  402c88:	inc    ebx
  402c8a:	inc    r12d
  402c8d:	movsx  r13d,bx
  402c91:	cmp    r13d,r8d
  402c94:	jge    402dc0 <error@@Base+0x350>
  402c9a:	movsx  rax,bx
  402c9e:	mov    rbp,QWORD PTR [rdx+rax*8]
  402ca2:	lea    r10,[rax*8+0x0]
  402caa:	cmp    BYTE PTR [rbp+0x0],0x2d
  402cae:	jne    402c80 <error@@Base+0x210>
  402cb0:	movzx  r14d,BYTE PTR [rbp+0x1]
  402cb5:	mov    QWORD PTR [rsp+0x20],r10
  402cba:	test   r14b,r14b
  402cbd:	je     402c80 <error@@Base+0x210>
  402cbf:	mov    rdi,rbp
  402cc2:	mov    DWORD PTR [rsp+0x1c],r8d
  402cc7:	mov    QWORD PTR [rsp+0x10],rdx
  402ccc:	mov    QWORD PTR [rsp+0x8],r9
  402cd1:	call   401260 <strlen@plt>
  402cd6:	cmp    rax,0x6
  402cda:	mov    ecx,0x6
  402cdf:	cmovle rcx,rax
  402ce3:	lea    rsi,[rip+0x51b]        # 403205 <error@@Base+0x795>
  402cea:	cmp    rcx,rcx
  402ced:	mov    rdi,rbp
  402cf0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402cf2:	seta   al
  402cf5:	sbb    al,0x0
  402cf7:	test   al,al
  402cf9:	je     402e50 <error@@Base+0x3e0>
  402cff:	mov    r8d,DWORD PTR [rsp+0x1c]
  402d04:	inc    r13d
  402d07:	xor    eax,eax
  402d09:	cmp    r13d,r8d
  402d0c:	mov    r9,QWORD PTR [rsp+0x8]
  402d11:	mov    rdx,QWORD PTR [rsp+0x10]
  402d16:	jge    402d22 <error@@Base+0x2b2>
  402d18:	mov    r10,QWORD PTR [rsp+0x20]
  402d1d:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  402d22:	test   r15,r15
  402d25:	je     402d5b <error@@Base+0x2eb>
  402d27:	movzx  ecx,BYTE PTR [r15]
  402d2b:	test   cl,cl
  402d2d:	je     402d5b <error@@Base+0x2eb>
  402d2f:	cmp    r14b,cl
  402d32:	je     402d70 <error@@Base+0x300>
  402d34:	xor    ecx,ecx
  402d36:	jmp    402d45 <error@@Base+0x2d5>
  402d38:	nop    DWORD PTR [rax+rax*1+0x0]
  402d40:	cmp    r14b,dil
  402d43:	je     402d78 <error@@Base+0x308>
  402d45:	inc    ecx
  402d47:	movsx  rsi,cx
  402d4b:	lea    rsi,[rsi+rsi*2]
  402d4f:	lea    rsi,[r15+rsi*8]
  402d53:	movzx  edi,BYTE PTR [rsi]
  402d56:	test   dil,dil
  402d59:	jne    402d40 <error@@Base+0x2d0>
  402d5b:	mov    rsi,rbp
  402d5e:	lea    rdi,[rip+0x4a6]        # 40320b <error@@Base+0x79b>
  402d65:	xor    eax,eax
  402d67:	call   402b20 <error@@Base+0xb0>
  402d6c:	nop    DWORD PTR [rax+0x0]
  402d70:	mov    rsi,r15
  402d73:	nop    DWORD PTR [rax+rax*1+0x0]
  402d78:	mov    rcx,QWORD PTR [rsi+0x8]
  402d7c:	test   rcx,rcx
  402d7f:	je     402df0 <error@@Base+0x380>
  402d81:	cmp    BYTE PTR [rbp+0x2],0x0
  402d85:	jne    402de0 <error@@Base+0x370>
  402d87:	test   rax,rax
  402d8a:	je     402e38 <error@@Base+0x3c8>
  402d90:	cmp    QWORD PTR [rcx],0x0
  402d94:	jne    402e60 <error@@Base+0x3f0>
  402d9a:	mov    QWORD PTR [rcx],rax
  402d9d:	mov    eax,ebx
  402d9f:	inc    ebx
  402da1:	cmp    BYTE PTR [rbp+0x2],0x0
  402da5:	jne    402c8d <error@@Base+0x21d>
  402dab:	lea    ebx,[rax+0x2]
  402dae:	movsx  r13d,bx
  402db2:	cmp    r13d,r8d
  402db5:	jl     402c9a <error@@Base+0x22a>
  402dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc0:	movsx  r12d,r12w
  402dc4:	mov    DWORD PTR [r9],r12d
  402dc7:	add    rsp,0x38
  402dcb:	pop    rbx
  402dcc:	pop    rbp
  402dcd:	pop    r12
  402dcf:	pop    r13
  402dd1:	pop    r14
  402dd3:	pop    r15
  402dd5:	ret    
  402dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402de0:	cmp    QWORD PTR [rcx],0x0
  402de4:	jne    402e60 <error@@Base+0x3f0>
  402de6:	lea    rax,[rbp+0x2]
  402dea:	jmp    402d9a <error@@Base+0x32a>
  402dec:	nop    DWORD PTR [rax+0x0]
  402df0:	mov    rax,QWORD PTR [rsi+0x10]
  402df4:	test   rax,rax
  402df7:	je     402d5b <error@@Base+0x2eb>
  402dfd:	cmp    BYTE PTR [rbp+0x2],0x0
  402e01:	jne    402d5b <error@@Base+0x2eb>
  402e07:	cmp    BYTE PTR [rax],0x0
  402e0a:	jne    402e60 <error@@Base+0x3f0>
  402e0c:	mov    BYTE PTR [rax],0x1
  402e0f:	inc    ebx
  402e11:	mov    r8d,DWORD PTR [r9]
  402e14:	jmp    402c8d <error@@Base+0x21d>
  402e19:	nop    DWORD PTR [rax+0x0]
  402e20:	mov    rax,0x405154
  402e27:	cmp    BYTE PTR [rax],0x0
  402e2a:	jne    402e50 <error@@Base+0x3e0>
  402e2c:	xor    r12d,r12d
  402e2f:	jmp    402dc4 <error@@Base+0x354>
  402e31:	nop    DWORD PTR [rax+0x0]
  402e38:	mov    rax,QWORD PTR [rsi+0x10]
  402e3c:	test   rax,rax
  402e3f:	jne    402e07 <error@@Base+0x397>
  402e41:	jmp    402d5b <error@@Base+0x2eb>
  402e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e50:	mov    rdi,QWORD PTR [rsp+0x28]
  402e55:	xor    eax,eax
  402e57:	call   402a20 <__sprintf_chk@plt+0x1670>
  402e5c:	nop    DWORD PTR [rax+0x0]
  402e60:	mov    rsi,rbp
  402e63:	lea    rdi,[rip+0x3b0]        # 40321a <error@@Base+0x7aa>
  402e6a:	xor    eax,eax
  402e6c:	call   402b20 <error@@Base+0xb0>
  402e71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e7c:	nop    DWORD PTR [rax+0x0]
  402e80:	endbr64 
  402e84:	mov    rax,0x4090c8
  402e8b:	mov    r8,rdi
  402e8e:	mov    rcx,QWORD PTR [rax]
  402e91:	mov    rax,QWORD PTR [rip+0x2160]        # 404ff8 <error@@Base+0x2588>
  402e98:	mov    r9,rsi
  402e9b:	mov    rdi,QWORD PTR [rax]
  402e9e:	lea    rdx,[rip+0x329]        # 4031ce <error@@Base+0x75e>
  402ea5:	mov    esi,0x1
  402eaa:	xor    eax,eax
  402eac:	jmp    401370 <__fprintf_chk@plt>
  402eb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ec0:	endbr64 
  402ec4:	push   r15
  402ec6:	lea    r15,[rip+0x1f0b]        # 404dd8 <error@@Base+0x2368>
  402ecd:	push   r14
  402ecf:	mov    r14,rdx
  402ed2:	push   r13
  402ed4:	mov    r13,rsi
  402ed7:	push   r12
  402ed9:	mov    r12d,edi
  402edc:	push   rbp
  402edd:	lea    rbp,[rip+0x1efc]        # 404de0 <error@@Base+0x2370>
  402ee4:	push   rbx
  402ee5:	sub    rbp,r15
  402ee8:	sub    rsp,0x8
  402eec:	call   401000 <free@plt-0x1f0>
  402ef1:	sar    rbp,0x3
  402ef5:	je     402f16 <error@@Base+0x4a6>
  402ef7:	xor    ebx,ebx
  402ef9:	nop    DWORD PTR [rax+0x0]
  402f00:	mov    rdx,r14
  402f03:	mov    rsi,r13
  402f06:	mov    edi,r12d
  402f09:	call   QWORD PTR [r15+rbx*8]
  402f0d:	add    rbx,0x1
  402f11:	cmp    rbp,rbx
  402f14:	jne    402f00 <error@@Base+0x490>
  402f16:	add    rsp,0x8
  402f1a:	pop    rbx
  402f1b:	pop    rbp
  402f1c:	pop    r12
  402f1e:	pop    r13
  402f20:	pop    r14
  402f22:	pop    r15
  402f24:	ret    
  402f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f30:	endbr64 
  402f34:	ret    

Disassembly of section .fini:

0000000000402f38 <.fini>:
  402f38:	endbr64 
  402f3c:	sub    rsp,0x8
  402f40:	add    rsp,0x8
  402f44:	ret    
