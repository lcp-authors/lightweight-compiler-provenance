
../repos/prog2/2.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x9a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x90>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x90>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x90>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x90>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x90>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x90>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x90>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x90>
  4010af:	nop

Disassembly of section .plt.sec:

00000000004010b0 <free@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404018 <free@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <putchar@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404020 <putchar@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <puts@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404028 <puts@GLIBC_2.2.5>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <__stack_chk_fail@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404030 <__stack_chk_fail@GLIBC_2.4>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <printf@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404038 <printf@GLIBC_2.2.5>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <malloc@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f35]        # 404040 <malloc@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401110 <realloc@plt>:
  401110:	endbr64 
  401114:	bnd jmp QWORD PTR [rip+0x2f2d]        # 404048 <realloc@GLIBC_2.2.5>
  40111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401120 <__isoc99_scanf@plt>:
  401120:	endbr64 
  401124:	bnd jmp QWORD PTR [rip+0x2f25]        # 404050 <__isoc99_scanf@GLIBC_2.7>
  40112b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401130 <_start@@Base>:
  401130:	endbr64 
  401134:	xor    ebp,ebp
  401136:	mov    r9,rdx
  401139:	pop    rsi
  40113a:	mov    rdx,rsp
  40113d:	and    rsp,0xfffffffffffffff0
  401141:	push   rax
  401142:	push   rsp
  401143:	mov    r8,0x401540
  40114a:	mov    rcx,0x4014d0
  401151:	mov    rdi,0x401216
  401158:	call   QWORD PTR [rip+0x2e92]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40115e:	hlt    
  40115f:	nop
  401160:	endbr64 
  401164:	ret    
  401165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40116f:	nop
  401170:	mov    eax,0x404068
  401175:	cmp    rax,0x404068
  40117b:	je     401190 <_start@@Base+0x60>
  40117d:	mov    eax,0x0
  401182:	test   rax,rax
  401185:	je     401190 <_start@@Base+0x60>
  401187:	mov    edi,0x404068
  40118c:	jmp    rax
  40118e:	xchg   ax,ax
  401190:	ret    
  401191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40119c:	nop    DWORD PTR [rax+0x0]
  4011a0:	mov    esi,0x404068
  4011a5:	sub    rsi,0x404068
  4011ac:	sar    rsi,0x3
  4011b0:	mov    rax,rsi
  4011b3:	shr    rax,0x3f
  4011b7:	add    rsi,rax
  4011ba:	sar    rsi,1
  4011bd:	je     4011d0 <_start@@Base+0xa0>
  4011bf:	mov    eax,0x0
  4011c4:	test   rax,rax
  4011c7:	je     4011d0 <_start@@Base+0xa0>
  4011c9:	mov    edi,0x404068
  4011ce:	jmp    rax
  4011d0:	ret    
  4011d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011dc:	nop    DWORD PTR [rax+0x0]
  4011e0:	endbr64 
  4011e4:	cmp    BYTE PTR [rip+0x2e7d],0x0        # 404068 <__bss_start@@Base>
  4011eb:	jne    401200 <_start@@Base+0xd0>
  4011ed:	push   rbp
  4011ee:	mov    rbp,rsp
  4011f1:	call   401170 <_start@@Base+0x40>
  4011f6:	mov    BYTE PTR [rip+0x2e6b],0x1        # 404068 <__bss_start@@Base>
  4011fd:	pop    rbp
  4011fe:	ret    
  4011ff:	nop
  401200:	ret    
  401201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40120c:	nop    DWORD PTR [rax+0x0]
  401210:	endbr64 
  401214:	jmp    4011a0 <_start@@Base+0x70>

0000000000401216 <main@@Base>:
  401216:	endbr64 
  40121a:	push   rbp
  40121b:	mov    rbp,rsp
  40121e:	sub    rsp,0x30
  401222:	mov    rax,QWORD PTR fs:0x28
  40122b:	mov    QWORD PTR [rbp-0x8],rax
  40122f:	xor    eax,eax
  401231:	mov    DWORD PTR [rbp-0x2c],0x0
  401238:	mov    DWORD PTR [rbp-0x28],0x0
  40123f:	lea    rdi,[rip+0xdbe]        # 402004 <_IO_stdin_used@@Base+0x4>
  401246:	mov    eax,0x0
  40124b:	call   4010f0 <printf@plt>
  401250:	lea    rax,[rbp-0x30]
  401254:	mov    rsi,rax
  401257:	lea    rdi,[rip+0xdbc]        # 40201a <_IO_stdin_used@@Base+0x1a>
  40125e:	mov    eax,0x0
  401263:	call   401120 <__isoc99_scanf@plt>
  401268:	mov    eax,DWORD PTR [rbp-0x30]
  40126b:	cdqe   
  40126d:	shl    rax,0x2
  401271:	mov    rdi,rax
  401274:	call   401100 <malloc@plt>
  401279:	mov    QWORD PTR [rbp-0x20],rax
  40127d:	mov    eax,DWORD PTR [rbp-0x30]
  401280:	cdqe   
  401282:	shl    rax,0x2
  401286:	mov    rdi,rax
  401289:	call   401100 <malloc@plt>
  40128e:	mov    QWORD PTR [rbp-0x18],rax
  401292:	mov    eax,DWORD PTR [rbp-0x30]
  401295:	cdqe   
  401297:	shl    rax,0x2
  40129b:	mov    rdi,rax
  40129e:	call   401100 <malloc@plt>
  4012a3:	mov    QWORD PTR [rbp-0x10],rax
  4012a7:	mov    DWORD PTR [rbp-0x24],0x0
  4012ae:	jmp    401375 <main@@Base+0x15f>
  4012b3:	mov    eax,DWORD PTR [rbp-0x24]
  4012b6:	inc    eax
  4012b8:	mov    esi,eax
  4012ba:	lea    rdi,[rip+0xd5c]        # 40201d <_IO_stdin_used@@Base+0x1d>
  4012c1:	mov    eax,0x0
  4012c6:	call   4010f0 <printf@plt>
  4012cb:	mov    eax,DWORD PTR [rbp-0x24]
  4012ce:	cdqe   
  4012d0:	lea    rdx,[rax*4+0x0]
  4012d8:	mov    rax,QWORD PTR [rbp-0x20]
  4012dc:	add    rax,rdx
  4012df:	mov    rsi,rax
  4012e2:	lea    rdi,[rip+0xd31]        # 40201a <_IO_stdin_used@@Base+0x1a>
  4012e9:	mov    eax,0x0
  4012ee:	call   401120 <__isoc99_scanf@plt>
  4012f3:	mov    eax,DWORD PTR [rbp-0x24]
  4012f6:	cdqe   
  4012f8:	lea    rdx,[rax*4+0x0]
  401300:	mov    rax,QWORD PTR [rbp-0x20]
  401304:	add    rax,rdx
  401307:	mov    eax,DWORD PTR [rax]
  401309:	and    eax,0x1
  40130c:	test   eax,eax
  40130e:	je     401342 <main@@Base+0x12c>
  401310:	mov    eax,DWORD PTR [rbp-0x24]
  401313:	cdqe   
  401315:	lea    rdx,[rax*4+0x0]
  40131d:	mov    rax,QWORD PTR [rbp-0x20]
  401321:	add    rax,rdx
  401324:	mov    edx,DWORD PTR [rbp-0x28]
  401327:	movsxd rdx,edx
  40132a:	lea    rcx,[rdx*4+0x0]
  401332:	mov    rdx,QWORD PTR [rbp-0x10]
  401336:	add    rdx,rcx
  401339:	mov    eax,DWORD PTR [rax]
  40133b:	mov    DWORD PTR [rdx],eax
  40133d:	inc    DWORD PTR [rbp-0x28]
  401340:	jmp    401372 <main@@Base+0x15c>
  401342:	mov    eax,DWORD PTR [rbp-0x24]
  401345:	cdqe   
  401347:	lea    rdx,[rax*4+0x0]
  40134f:	mov    rax,QWORD PTR [rbp-0x20]
  401353:	add    rax,rdx
  401356:	mov    edx,DWORD PTR [rbp-0x2c]
  401359:	movsxd rdx,edx
  40135c:	lea    rcx,[rdx*4+0x0]
  401364:	mov    rdx,QWORD PTR [rbp-0x18]
  401368:	add    rdx,rcx
  40136b:	mov    eax,DWORD PTR [rax]
  40136d:	mov    DWORD PTR [rdx],eax
  40136f:	inc    DWORD PTR [rbp-0x2c]
  401372:	inc    DWORD PTR [rbp-0x24]
  401375:	mov    eax,DWORD PTR [rbp-0x30]
  401378:	cmp    DWORD PTR [rbp-0x24],eax
  40137b:	jl     4012b3 <main@@Base+0x9d>
  401381:	mov    eax,DWORD PTR [rbp-0x2c]
  401384:	cdqe   
  401386:	lea    rdx,[rax*4+0x0]
  40138e:	mov    rax,QWORD PTR [rbp-0x18]
  401392:	mov    rsi,rdx
  401395:	mov    rdi,rax
  401398:	call   401110 <realloc@plt>
  40139d:	mov    QWORD PTR [rbp-0x18],rax
  4013a1:	mov    eax,DWORD PTR [rbp-0x28]
  4013a4:	cdqe   
  4013a6:	lea    rdx,[rax*4+0x0]
  4013ae:	mov    rax,QWORD PTR [rbp-0x10]
  4013b2:	mov    rsi,rdx
  4013b5:	mov    rdi,rax
  4013b8:	call   401110 <realloc@plt>
  4013bd:	mov    QWORD PTR [rbp-0x10],rax
  4013c1:	lea    rdi,[rip+0xc71]        # 402039 <_IO_stdin_used@@Base+0x39>
  4013c8:	mov    eax,0x0
  4013cd:	call   4010f0 <printf@plt>
  4013d2:	mov    edx,DWORD PTR [rbp-0x30]
  4013d5:	mov    rax,QWORD PTR [rbp-0x20]
  4013d9:	mov    esi,edx
  4013db:	mov    rdi,rax
  4013de:	call   401466 <PrintArray@@Base>
  4013e3:	lea    rdi,[rip+0xc60]        # 40204a <_IO_stdin_used@@Base+0x4a>
  4013ea:	mov    eax,0x0
  4013ef:	call   4010f0 <printf@plt>
  4013f4:	mov    edx,DWORD PTR [rbp-0x2c]
  4013f7:	mov    rax,QWORD PTR [rbp-0x18]
  4013fb:	mov    esi,edx
  4013fd:	mov    rdi,rax
  401400:	call   401466 <PrintArray@@Base>
  401405:	lea    rdi,[rip+0xc4e]        # 40205a <_IO_stdin_used@@Base+0x5a>
  40140c:	mov    eax,0x0
  401411:	call   4010f0 <printf@plt>
  401416:	mov    edx,DWORD PTR [rbp-0x28]
  401419:	mov    rax,QWORD PTR [rbp-0x10]
  40141d:	mov    esi,edx
  40141f:	mov    rdi,rax
  401422:	call   401466 <PrintArray@@Base>
  401427:	mov    rax,QWORD PTR [rbp-0x20]
  40142b:	mov    rdi,rax
  40142e:	call   4010b0 <free@plt>
  401433:	mov    rax,QWORD PTR [rbp-0x18]
  401437:	mov    rdi,rax
  40143a:	call   4010b0 <free@plt>
  40143f:	mov    rax,QWORD PTR [rbp-0x10]
  401443:	mov    rdi,rax
  401446:	call   4010b0 <free@plt>
  40144b:	mov    eax,0x0
  401450:	mov    rcx,QWORD PTR [rbp-0x8]
  401454:	xor    rcx,QWORD PTR fs:0x28
  40145d:	je     401464 <main@@Base+0x24e>
  40145f:	call   4010e0 <__stack_chk_fail@plt>
  401464:	leave  
  401465:	ret    

0000000000401466 <PrintArray@@Base>:
  401466:	endbr64 
  40146a:	push   rbp
  40146b:	mov    rbp,rsp
  40146e:	sub    rsp,0x20
  401472:	mov    QWORD PTR [rbp-0x18],rdi
  401476:	mov    DWORD PTR [rbp-0x1c],esi
  401479:	mov    edi,0x5b
  40147e:	call   4010c0 <putchar@plt>
  401483:	mov    DWORD PTR [rbp-0x4],0x0
  40148a:	jmp    4014b8 <PrintArray@@Base+0x52>
  40148c:	mov    eax,DWORD PTR [rbp-0x4]
  40148f:	cdqe   
  401491:	lea    rdx,[rax*4+0x0]
  401499:	mov    rax,QWORD PTR [rbp-0x18]
  40149d:	add    rax,rdx
  4014a0:	mov    eax,DWORD PTR [rax]
  4014a2:	mov    esi,eax
  4014a4:	lea    rdi,[rip+0xbc1]        # 40206c <_IO_stdin_used@@Base+0x6c>
  4014ab:	mov    eax,0x0
  4014b0:	call   4010f0 <printf@plt>
  4014b5:	inc    DWORD PTR [rbp-0x4]
  4014b8:	mov    eax,DWORD PTR [rbp-0x4]
  4014bb:	cmp    eax,DWORD PTR [rbp-0x1c]
  4014be:	jl     40148c <PrintArray@@Base+0x26>
  4014c0:	lea    rdi,[rip+0xba9]        # 402070 <_IO_stdin_used@@Base+0x70>
  4014c7:	call   4010d0 <puts@plt>
  4014cc:	nop
  4014cd:	leave  
  4014ce:	ret    
  4014cf:	nop

00000000004014d0 <__libc_csu_init@@Base>:
  4014d0:	endbr64 
  4014d4:	push   r15
  4014d6:	lea    r15,[rip+0x2933]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4014dd:	push   r14
  4014df:	mov    r14,rdx
  4014e2:	push   r13
  4014e4:	mov    r13,rsi
  4014e7:	push   r12
  4014e9:	mov    r12d,edi
  4014ec:	push   rbp
  4014ed:	lea    rbp,[rip+0x2924]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  4014f4:	push   rbx
  4014f5:	sub    rbp,r15
  4014f8:	sub    rsp,0x8
  4014fc:	call   401000 <free@plt-0xb0>
  401501:	sar    rbp,0x3
  401505:	je     401526 <__libc_csu_init@@Base+0x56>
  401507:	xor    ebx,ebx
  401509:	nop    DWORD PTR [rax+0x0]
  401510:	mov    rdx,r14
  401513:	mov    rsi,r13
  401516:	mov    edi,r12d
  401519:	call   QWORD PTR [r15+rbx*8]
  40151d:	add    rbx,0x1
  401521:	cmp    rbp,rbx
  401524:	jne    401510 <__libc_csu_init@@Base+0x40>
  401526:	add    rsp,0x8
  40152a:	pop    rbx
  40152b:	pop    rbp
  40152c:	pop    r12
  40152e:	pop    r13
  401530:	pop    r14
  401532:	pop    r15
  401534:	ret    
  401535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401540 <__libc_csu_fini@@Base>:
  401540:	endbr64 
  401544:	ret    

Disassembly of section .fini:

0000000000401548 <.fini>:
  401548:	endbr64 
  40154c:	sub    rsp,0x8
  401550:	add    rsp,0x8
  401554:	ret    
