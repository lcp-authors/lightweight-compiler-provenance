
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x26fe1]        # 429ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x18a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0x26fe2]        # 42a008 <flatcc_builder_padding_base@@Base+0x7c68>
  403026:	bnd jmp QWORD PTR [rip+0x26fe3]        # 42a010 <flatcc_builder_padding_base@@Base+0x7c70>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0x180>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0x180>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0x180>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0x180>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0x180>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0x180>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0x180>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0x180>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0x180>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0x180>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0x180>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0x180>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0x180>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0x180>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <free@plt-0x180>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <free@plt-0x180>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <free@plt-0x180>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <free@plt-0x180>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <free@plt-0x180>
  40315f:	nop
  403160:	endbr64 
  403164:	push   0x13
  403169:	bnd jmp 403020 <free@plt-0x180>
  40316f:	nop
  403170:	endbr64 
  403174:	push   0x14
  403179:	bnd jmp 403020 <free@plt-0x180>
  40317f:	nop
  403180:	endbr64 
  403184:	push   0x15
  403189:	bnd jmp 403020 <free@plt-0x180>
  40318f:	nop
  403190:	endbr64 
  403194:	push   0x16
  403199:	bnd jmp 403020 <free@plt-0x180>
  40319f:	nop

Disassembly of section .plt.sec:

00000000004031a0 <free@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0x26e6d]        # 42a018 <free@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <strncpy@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0x26e65]        # 42a020 <strncpy@GLIBC_2.2.5>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <fread@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0x26e5d]        # 42a028 <fread@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <strtod@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0x26e55]        # 42a030 <strtod@GLIBC_2.2.5>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <fclose@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0x26e4d]        # 42a038 <fclose@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031f0 <strlen@plt>:
  4031f0:	endbr64 
  4031f4:	bnd jmp QWORD PTR [rip+0x26e45]        # 42a040 <strlen@GLIBC_2.2.5>
  4031fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403200 <__stack_chk_fail@plt>:
  403200:	endbr64 
  403204:	bnd jmp QWORD PTR [rip+0x26e3d]        # 42a048 <__stack_chk_fail@GLIBC_2.4>
  40320b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403210 <rewind@plt>:
  403210:	endbr64 
  403214:	bnd jmp QWORD PTR [rip+0x26e35]        # 42a050 <rewind@GLIBC_2.2.5>
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403220 <__assert_fail@plt>:
  403220:	endbr64 
  403224:	bnd jmp QWORD PTR [rip+0x26e2d]        # 42a058 <__assert_fail@GLIBC_2.2.5>
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403230 <memset@plt>:
  403230:	endbr64 
  403234:	bnd jmp QWORD PTR [rip+0x26e25]        # 42a060 <memset@GLIBC_2.2.5>
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403240 <fputc@plt>:
  403240:	endbr64 
  403244:	bnd jmp QWORD PTR [rip+0x26e1d]        # 42a068 <fputc@GLIBC_2.2.5>
  40324b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403250 <memchr@plt>:
  403250:	endbr64 
  403254:	bnd jmp QWORD PTR [rip+0x26e15]        # 42a070 <memchr@GLIBC_2.2.5>
  40325b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403260 <memcmp@plt>:
  403260:	endbr64 
  403264:	bnd jmp QWORD PTR [rip+0x26e0d]        # 42a078 <memcmp@GLIBC_2.2.5>
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403270 <fprintf@plt>:
  403270:	endbr64 
  403274:	bnd jmp QWORD PTR [rip+0x26e05]        # 42a080 <fprintf@GLIBC_2.2.5>
  40327b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403280 <ftell@plt>:
  403280:	endbr64 
  403284:	bnd jmp QWORD PTR [rip+0x26dfd]        # 42a088 <ftell@GLIBC_2.2.5>
  40328b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403290 <memcpy@plt>:
  403290:	endbr64 
  403294:	bnd jmp QWORD PTR [rip+0x26df5]        # 42a090 <memcpy@GLIBC_2.14>
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032a0 <malloc@plt>:
  4032a0:	endbr64 
  4032a4:	bnd jmp QWORD PTR [rip+0x26ded]        # 42a098 <malloc@GLIBC_2.2.5>
  4032ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032b0 <fseek@plt>:
  4032b0:	endbr64 
  4032b4:	bnd jmp QWORD PTR [rip+0x26de5]        # 42a0a0 <fseek@GLIBC_2.2.5>
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032c0 <realloc@plt>:
  4032c0:	endbr64 
  4032c4:	bnd jmp QWORD PTR [rip+0x26ddd]        # 42a0a8 <realloc@GLIBC_2.2.5>
  4032cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032d0 <fopen@plt>:
  4032d0:	endbr64 
  4032d4:	bnd jmp QWORD PTR [rip+0x26dd5]        # 42a0b0 <fopen@GLIBC_2.2.5>
  4032db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032e0 <exit@plt>:
  4032e0:	endbr64 
  4032e4:	bnd jmp QWORD PTR [rip+0x26dcd]        # 42a0b8 <exit@GLIBC_2.2.5>
  4032eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032f0 <fwrite@plt>:
  4032f0:	endbr64 
  4032f4:	bnd jmp QWORD PTR [rip+0x26dc5]        # 42a0c0 <fwrite@GLIBC_2.2.5>
  4032fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403300 <posix_memalign@plt>:
  403300:	endbr64 
  403304:	bnd jmp QWORD PTR [rip+0x26dbd]        # 42a0c8 <posix_memalign@GLIBC_2.2.5>
  40330b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403310 <_start@@Base>:
  403310:	endbr64 
  403314:	xor    ebp,ebp
  403316:	mov    r9,rdx
  403319:	pop    rsi
  40331a:	mov    rdx,rsp
  40331d:	and    rsp,0xfffffffffffffff0
  403321:	push   rax
  403322:	push   rsp
  403323:	mov    r8,0x421d70
  40332a:	mov    rcx,0x421d00
  403331:	mov    rdi,0x414d6d
  403338:	call   QWORD PTR [rip+0x26caa]        # 429fe8 <__libc_start_main@GLIBC_2.2.5>
  40333e:	hlt    
  40333f:	nop
  403340:	endbr64 
  403344:	ret    
  403345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40334f:	nop
  403350:	mov    eax,0x42aab0
  403355:	cmp    rax,0x42aab0
  40335b:	je     403370 <_start@@Base+0x60>
  40335d:	mov    eax,0x0
  403362:	test   rax,rax
  403365:	je     403370 <_start@@Base+0x60>
  403367:	mov    edi,0x42aab0
  40336c:	jmp    rax
  40336e:	xchg   ax,ax
  403370:	ret    
  403371:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40337c:	nop    DWORD PTR [rax+0x0]
  403380:	mov    esi,0x42aab0
  403385:	sub    rsi,0x42aab0
  40338c:	sar    rsi,0x3
  403390:	mov    rax,rsi
  403393:	shr    rax,0x3f
  403397:	add    rsi,rax
  40339a:	sar    rsi,1
  40339d:	je     4033b0 <_start@@Base+0xa0>
  40339f:	mov    eax,0x0
  4033a4:	test   rax,rax
  4033a7:	je     4033b0 <_start@@Base+0xa0>
  4033a9:	mov    edi,0x42aab0
  4033ae:	jmp    rax
  4033b0:	ret    
  4033b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033bc:	nop    DWORD PTR [rax+0x0]
  4033c0:	endbr64 
  4033c4:	cmp    BYTE PTR [rip+0x276e5],0x0        # 42aab0 <__bss_start@@Base>
  4033cb:	jne    4033e0 <_start@@Base+0xd0>
  4033cd:	push   rbp
  4033ce:	mov    rbp,rsp
  4033d1:	call   403350 <_start@@Base+0x40>
  4033d6:	mov    BYTE PTR [rip+0x276d3],0x1        # 42aab0 <__bss_start@@Base>
  4033dd:	pop    rbp
  4033de:	ret    
  4033df:	nop
  4033e0:	ret    
  4033e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	endbr64 
  4033f4:	jmp    403380 <_start@@Base+0x70>
  4033f6:	push   rbp
  4033f7:	mov    rbp,rsp
  4033fa:	mov    eax,edi
  4033fc:	mov    BYTE PTR [rbp-0x4],al
  4033ff:	movzx  eax,BYTE PTR [rbp-0x4]
  403403:	pop    rbp
  403404:	ret    
  403405:	push   rbp
  403406:	mov    rbp,rsp
  403409:	sub    rsp,0x10
  40340d:	mov    QWORD PTR [rbp-0x8],rdi
  403411:	mov    eax,esi
  403413:	mov    BYTE PTR [rbp-0xc],al
  403416:	movzx  eax,BYTE PTR [rbp-0xc]
  40341a:	mov    edi,eax
  40341c:	call   4033f6 <_start@@Base+0xe6>
  403421:	mov    rdx,QWORD PTR [rbp-0x8]
  403425:	mov    BYTE PTR [rdx],al
  403427:	nop
  403428:	leave  
  403429:	ret    
  40342a:	push   rbp
  40342b:	mov    rbp,rsp
  40342e:	mov    eax,edi
  403430:	mov    WORD PTR [rbp-0x4],ax
  403434:	movzx  eax,WORD PTR [rbp-0x4]
  403438:	pop    rbp
  403439:	ret    
  40343a:	push   rbp
  40343b:	mov    rbp,rsp
  40343e:	sub    rsp,0x10
  403442:	mov    QWORD PTR [rbp-0x8],rdi
  403446:	mov    eax,esi
  403448:	mov    WORD PTR [rbp-0xc],ax
  40344c:	movzx  eax,WORD PTR [rbp-0xc]
  403450:	mov    edi,eax
  403452:	call   40342a <_start@@Base+0x11a>
  403457:	mov    edx,eax
  403459:	mov    rax,QWORD PTR [rbp-0x8]
  40345d:	mov    WORD PTR [rax],dx
  403460:	nop
  403461:	leave  
  403462:	ret    
  403463:	push   rbp
  403464:	mov    rbp,rsp
  403467:	mov    DWORD PTR [rbp-0x4],edi
  40346a:	mov    eax,DWORD PTR [rbp-0x4]
  40346d:	pop    rbp
  40346e:	ret    
  40346f:	push   rbp
  403470:	mov    rbp,rsp
  403473:	sub    rsp,0x10
  403477:	mov    QWORD PTR [rbp-0x8],rdi
  40347b:	mov    DWORD PTR [rbp-0xc],esi
  40347e:	mov    eax,DWORD PTR [rbp-0xc]
  403481:	mov    edi,eax
  403483:	call   403463 <_start@@Base+0x153>
  403488:	mov    edx,eax
  40348a:	mov    rax,QWORD PTR [rbp-0x8]
  40348e:	mov    DWORD PTR [rax],edx
  403490:	nop
  403491:	leave  
  403492:	ret    
  403493:	push   rbp
  403494:	mov    rbp,rsp
  403497:	mov    QWORD PTR [rbp-0x8],rdi
  40349b:	mov    rax,QWORD PTR [rbp-0x8]
  40349f:	pop    rbp
  4034a0:	ret    
  4034a1:	push   rbp
  4034a2:	mov    rbp,rsp
  4034a5:	sub    rsp,0x10
  4034a9:	mov    QWORD PTR [rbp-0x8],rdi
  4034ad:	mov    QWORD PTR [rbp-0x10],rsi
  4034b1:	mov    rax,QWORD PTR [rbp-0x10]
  4034b5:	mov    rdi,rax
  4034b8:	call   403493 <_start@@Base+0x183>
  4034bd:	mov    rdx,rax
  4034c0:	mov    rax,QWORD PTR [rbp-0x8]
  4034c4:	mov    QWORD PTR [rax],rdx
  4034c7:	nop
  4034c8:	leave  
  4034c9:	ret    
  4034ca:	push   rbp
  4034cb:	mov    rbp,rsp
  4034ce:	mov    eax,edi
  4034d0:	mov    BYTE PTR [rbp-0x4],al
  4034d3:	movzx  eax,BYTE PTR [rbp-0x4]
  4034d7:	pop    rbp
  4034d8:	ret    
  4034d9:	push   rbp
  4034da:	mov    rbp,rsp
  4034dd:	mov    eax,edi
  4034df:	mov    BYTE PTR [rbp-0x4],al
  4034e2:	movzx  eax,BYTE PTR [rbp-0x4]
  4034e6:	pop    rbp
  4034e7:	ret    
  4034e8:	push   rbp
  4034e9:	mov    rbp,rsp
  4034ec:	sub    rsp,0x8
  4034f0:	mov    QWORD PTR [rbp-0x8],rdi
  4034f4:	mov    rax,QWORD PTR [rbp-0x8]
  4034f8:	movzx  eax,BYTE PTR [rax]
  4034fb:	movsx  eax,al
  4034fe:	mov    edi,eax
  403500:	call   4034ca <_start@@Base+0x1ba>
  403505:	leave  
  403506:	ret    
  403507:	push   rbp
  403508:	mov    rbp,rsp
  40350b:	sub    rsp,0x10
  40350f:	mov    QWORD PTR [rbp-0x8],rdi
  403513:	mov    eax,esi
  403515:	mov    BYTE PTR [rbp-0xc],al
  403518:	movsx  eax,BYTE PTR [rbp-0xc]
  40351c:	mov    edi,eax
  40351e:	call   4034d9 <_start@@Base+0x1c9>
  403523:	mov    rdx,QWORD PTR [rbp-0x8]
  403527:	mov    BYTE PTR [rdx],al
  403529:	nop
  40352a:	leave  
  40352b:	ret    
  40352c:	push   rbp
  40352d:	mov    rbp,rsp
  403530:	mov    eax,edi
  403532:	mov    WORD PTR [rbp-0x4],ax
  403536:	movzx  eax,WORD PTR [rbp-0x4]
  40353a:	pop    rbp
  40353b:	ret    
  40353c:	push   rbp
  40353d:	mov    rbp,rsp
  403540:	mov    eax,edi
  403542:	mov    WORD PTR [rbp-0x4],ax
  403546:	movzx  eax,WORD PTR [rbp-0x4]
  40354a:	pop    rbp
  40354b:	ret    
  40354c:	push   rbp
  40354d:	mov    rbp,rsp
  403550:	sub    rsp,0x8
  403554:	mov    QWORD PTR [rbp-0x8],rdi
  403558:	mov    rax,QWORD PTR [rbp-0x8]
  40355c:	movzx  eax,WORD PTR [rax]
  40355f:	cwde   
  403560:	mov    edi,eax
  403562:	call   40352c <_start@@Base+0x21c>
  403567:	leave  
  403568:	ret    
  403569:	push   rbp
  40356a:	mov    rbp,rsp
  40356d:	sub    rsp,0x10
  403571:	mov    QWORD PTR [rbp-0x8],rdi
  403575:	mov    eax,esi
  403577:	mov    WORD PTR [rbp-0xc],ax
  40357b:	movsx  eax,WORD PTR [rbp-0xc]
  40357f:	mov    edi,eax
  403581:	call   40353c <_start@@Base+0x22c>
  403586:	mov    edx,eax
  403588:	mov    rax,QWORD PTR [rbp-0x8]
  40358c:	mov    WORD PTR [rax],dx
  40358f:	nop
  403590:	leave  
  403591:	ret    
  403592:	push   rbp
  403593:	mov    rbp,rsp
  403596:	mov    DWORD PTR [rbp-0x4],edi
  403599:	mov    eax,DWORD PTR [rbp-0x4]
  40359c:	pop    rbp
  40359d:	ret    
  40359e:	push   rbp
  40359f:	mov    rbp,rsp
  4035a2:	sub    rsp,0x10
  4035a6:	mov    QWORD PTR [rbp-0x8],rdi
  4035aa:	mov    DWORD PTR [rbp-0xc],esi
  4035ad:	mov    eax,DWORD PTR [rbp-0xc]
  4035b0:	mov    edi,eax
  4035b2:	call   403592 <_start@@Base+0x282>
  4035b7:	mov    edx,eax
  4035b9:	mov    rax,QWORD PTR [rbp-0x8]
  4035bd:	mov    DWORD PTR [rax],edx
  4035bf:	nop
  4035c0:	leave  
  4035c1:	ret    
  4035c2:	push   rbp
  4035c3:	mov    rbp,rsp
  4035c6:	mov    QWORD PTR [rbp-0x8],rdi
  4035ca:	mov    rax,QWORD PTR [rbp-0x8]
  4035ce:	pop    rbp
  4035cf:	ret    
  4035d0:	push   rbp
  4035d1:	mov    rbp,rsp
  4035d4:	sub    rsp,0x10
  4035d8:	mov    QWORD PTR [rbp-0x8],rdi
  4035dc:	mov    QWORD PTR [rbp-0x10],rsi
  4035e0:	mov    rax,QWORD PTR [rbp-0x10]
  4035e4:	mov    rdi,rax
  4035e7:	call   4035c2 <_start@@Base+0x2b2>
  4035ec:	mov    rdx,rax
  4035ef:	mov    rax,QWORD PTR [rbp-0x8]
  4035f3:	mov    QWORD PTR [rax],rdx
  4035f6:	nop
  4035f7:	leave  
  4035f8:	ret    
  4035f9:	push   rbp
  4035fa:	mov    rbp,rsp
  4035fd:	vmovss DWORD PTR [rbp-0x14],xmm0
  403602:	vmovss xmm0,DWORD PTR [rbp-0x14]
  403607:	vmovss DWORD PTR [rbp-0x4],xmm0
  40360c:	mov    eax,DWORD PTR [rbp-0x4]
  40360f:	mov    DWORD PTR [rbp-0x4],eax
  403612:	vmovss xmm0,DWORD PTR [rbp-0x4]
  403617:	pop    rbp
  403618:	ret    
  403619:	push   rbp
  40361a:	mov    rbp,rsp
  40361d:	vmovss DWORD PTR [rbp-0x14],xmm0
  403622:	vmovss xmm0,DWORD PTR [rbp-0x14]
  403627:	vmovss DWORD PTR [rbp-0x4],xmm0
  40362c:	mov    eax,DWORD PTR [rbp-0x4]
  40362f:	mov    DWORD PTR [rbp-0x4],eax
  403632:	vmovss xmm0,DWORD PTR [rbp-0x4]
  403637:	pop    rbp
  403638:	ret    
  403639:	push   rbp
  40363a:	mov    rbp,rsp
  40363d:	sub    rsp,0x8
  403641:	mov    QWORD PTR [rbp-0x8],rdi
  403645:	mov    rax,QWORD PTR [rbp-0x8]
  403649:	mov    eax,DWORD PTR [rax]
  40364b:	vmovd  xmm0,eax
  40364f:	call   4035f9 <_start@@Base+0x2e9>
  403654:	leave  
  403655:	ret    
  403656:	push   rbp
  403657:	mov    rbp,rsp
  40365a:	sub    rsp,0x10
  40365e:	mov    QWORD PTR [rbp-0x8],rdi
  403662:	vmovss DWORD PTR [rbp-0xc],xmm0
  403667:	mov    eax,DWORD PTR [rbp-0xc]
  40366a:	vmovd  xmm0,eax
  40366e:	call   403619 <_start@@Base+0x309>
  403673:	vmovd  eax,xmm0
  403677:	mov    rdx,QWORD PTR [rbp-0x8]
  40367b:	mov    DWORD PTR [rdx],eax
  40367d:	nop
  40367e:	leave  
  40367f:	ret    
  403680:	push   rbp
  403681:	mov    rbp,rsp
  403684:	vmovsd QWORD PTR [rbp-0x18],xmm0
  403689:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40368e:	vmovsd QWORD PTR [rbp-0x8],xmm0
  403693:	mov    rax,QWORD PTR [rbp-0x8]
  403697:	mov    QWORD PTR [rbp-0x8],rax
  40369b:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4036a0:	vmovq  rax,xmm0
  4036a5:	vmovq  xmm0,rax
  4036aa:	pop    rbp
  4036ab:	ret    
  4036ac:	push   rbp
  4036ad:	mov    rbp,rsp
  4036b0:	vmovsd QWORD PTR [rbp-0x18],xmm0
  4036b5:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4036ba:	vmovsd QWORD PTR [rbp-0x8],xmm0
  4036bf:	mov    rax,QWORD PTR [rbp-0x8]
  4036c3:	mov    QWORD PTR [rbp-0x8],rax
  4036c7:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4036cc:	vmovq  rax,xmm0
  4036d1:	vmovq  xmm0,rax
  4036d6:	pop    rbp
  4036d7:	ret    
  4036d8:	push   rbp
  4036d9:	mov    rbp,rsp
  4036dc:	sub    rsp,0x8
  4036e0:	mov    QWORD PTR [rbp-0x8],rdi
  4036e4:	mov    rax,QWORD PTR [rbp-0x8]
  4036e8:	mov    rax,QWORD PTR [rax]
  4036eb:	vmovq  xmm0,rax
  4036f0:	call   403680 <_start@@Base+0x370>
  4036f5:	vmovq  rax,xmm0
  4036fa:	vmovq  xmm0,rax
  4036ff:	leave  
  403700:	ret    
  403701:	push   rbp
  403702:	mov    rbp,rsp
  403705:	sub    rsp,0x10
  403709:	mov    QWORD PTR [rbp-0x8],rdi
  40370d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  403712:	mov    rax,QWORD PTR [rbp-0x10]
  403716:	vmovq  xmm0,rax
  40371b:	call   4036ac <_start@@Base+0x39c>
  403720:	vmovq  rax,xmm0
  403725:	mov    rdx,QWORD PTR [rbp-0x8]
  403729:	mov    QWORD PTR [rdx],rax
  40372c:	nop
  40372d:	leave  
  40372e:	ret    
  40372f:	push   rbp
  403730:	mov    rbp,rsp
  403733:	mov    eax,edi
  403735:	mov    BYTE PTR [rbp-0x4],al
  403738:	movzx  eax,BYTE PTR [rbp-0x4]
  40373c:	pop    rbp
  40373d:	ret    
  40373e:	push   rbp
  40373f:	mov    rbp,rsp
  403742:	sub    rsp,0x10
  403746:	mov    QWORD PTR [rbp-0x8],rdi
  40374a:	mov    eax,esi
  40374c:	mov    BYTE PTR [rbp-0xc],al
  40374f:	movzx  eax,BYTE PTR [rbp-0xc]
  403753:	mov    edi,eax
  403755:	call   40372f <_start@@Base+0x41f>
  40375a:	mov    rdx,QWORD PTR [rbp-0x8]
  40375e:	mov    BYTE PTR [rdx],al
  403760:	nop
  403761:	leave  
  403762:	ret    
  403763:	push   rbp
  403764:	mov    rbp,rsp
  403767:	mov    DWORD PTR [rbp-0x4],edi
  40376a:	mov    eax,DWORD PTR [rbp-0x4]
  40376d:	pop    rbp
  40376e:	ret    
  40376f:	push   rbp
  403770:	mov    rbp,rsp
  403773:	sub    rsp,0x8
  403777:	mov    QWORD PTR [rbp-0x8],rdi
  40377b:	mov    rax,QWORD PTR [rbp-0x8]
  40377f:	mov    eax,DWORD PTR [rax]
  403781:	mov    edi,eax
  403783:	call   403763 <_start@@Base+0x453>
  403788:	leave  
  403789:	ret    
  40378a:	push   rbp
  40378b:	mov    rbp,rsp
  40378e:	mov    DWORD PTR [rbp-0x4],edi
  403791:	mov    eax,DWORD PTR [rbp-0x4]
  403794:	pop    rbp
  403795:	ret    
  403796:	push   rbp
  403797:	mov    rbp,rsp
  40379a:	sub    rsp,0x8
  40379e:	mov    QWORD PTR [rbp-0x8],rdi
  4037a2:	mov    rax,QWORD PTR [rbp-0x8]
  4037a6:	mov    eax,DWORD PTR [rax]
  4037a8:	mov    edi,eax
  4037aa:	call   40378a <_start@@Base+0x47a>
  4037af:	leave  
  4037b0:	ret    
  4037b1:	push   rbp
  4037b2:	mov    rbp,rsp
  4037b5:	mov    eax,edi
  4037b7:	mov    WORD PTR [rbp-0x4],ax
  4037bb:	movzx  eax,WORD PTR [rbp-0x4]
  4037bf:	pop    rbp
  4037c0:	ret    
  4037c1:	push   rbp
  4037c2:	mov    rbp,rsp
  4037c5:	sub    rsp,0x8
  4037c9:	mov    QWORD PTR [rbp-0x8],rdi
  4037cd:	mov    rax,QWORD PTR [rbp-0x8]
  4037d1:	movzx  eax,WORD PTR [rax]
  4037d4:	movzx  eax,ax
  4037d7:	mov    edi,eax
  4037d9:	call   4037b1 <_start@@Base+0x4a1>
  4037de:	leave  
  4037df:	ret    
  4037e0:	push   rbp
  4037e1:	mov    rbp,rsp
  4037e4:	mov    DWORD PTR [rbp-0x4],edi
  4037e7:	mov    eax,DWORD PTR [rbp-0x4]
  4037ea:	pop    rbp
  4037eb:	ret    
  4037ec:	push   rbp
  4037ed:	mov    rbp,rsp
  4037f0:	mov    DWORD PTR [rbp-0x4],edi
  4037f3:	mov    eax,DWORD PTR [rbp-0x4]
  4037f6:	pop    rbp
  4037f7:	ret    
  4037f8:	push   rbp
  4037f9:	mov    rbp,rsp
  4037fc:	sub    rsp,0x8
  403800:	mov    QWORD PTR [rbp-0x8],rdi
  403804:	mov    rax,QWORD PTR [rbp-0x8]
  403808:	mov    eax,DWORD PTR [rax]
  40380a:	mov    edi,eax
  40380c:	call   4037e0 <_start@@Base+0x4d0>
  403811:	leave  
  403812:	ret    
  403813:	push   rbp
  403814:	mov    rbp,rsp
  403817:	sub    rsp,0x20
  40381b:	mov    QWORD PTR [rbp-0x18],rdi
  40381f:	mov    QWORD PTR [rbp-0x20],rsi
  403823:	mov    rax,QWORD PTR fs:0x28
  40382c:	mov    QWORD PTR [rbp-0x8],rax
  403830:	xor    eax,eax
  403832:	mov    DWORD PTR [rbp-0x10],0x0
  403839:	cmp    QWORD PTR [rbp-0x20],0x0
  40383e:	jne    403847 <_start@@Base+0x537>
  403840:	mov    eax,0x1
  403845:	jmp    40389a <_start@@Base+0x58a>
  403847:	mov    rcx,QWORD PTR [rbp-0x20]
  40384b:	lea    rax,[rbp-0x10]
  40384f:	mov    edx,0x4
  403854:	mov    rsi,rcx
  403857:	mov    rdi,rax
  40385a:	call   4031b0 <strncpy@plt>
  40385f:	mov    eax,DWORD PTR [rbp-0x10]
  403862:	mov    edi,eax
  403864:	call   4037ec <_start@@Base+0x4dc>
  403869:	mov    DWORD PTR [rbp-0x10],eax
  40386c:	mov    rax,QWORD PTR [rbp-0x18]
  403870:	add    rax,0x4
  403874:	mov    rdi,rax
  403877:	call   4037f8 <_start@@Base+0x4e8>
  40387c:	mov    DWORD PTR [rbp-0xc],eax
  40387f:	mov    eax,DWORD PTR [rbp-0x10]
  403882:	test   eax,eax
  403884:	je     40388e <_start@@Base+0x57e>
  403886:	mov    eax,DWORD PTR [rbp-0x10]
  403889:	cmp    DWORD PTR [rbp-0xc],eax
  40388c:	jne    403895 <_start@@Base+0x585>
  40388e:	mov    eax,0x1
  403893:	jmp    40389a <_start@@Base+0x58a>
  403895:	mov    eax,0x0
  40389a:	mov    rdx,QWORD PTR [rbp-0x8]
  40389e:	xor    rdx,QWORD PTR fs:0x28
  4038a7:	je     4038ae <_start@@Base+0x59e>
  4038a9:	call   403200 <__stack_chk_fail@plt>
  4038ae:	leave  
  4038af:	ret    
  4038b0:	push   rbp
  4038b1:	mov    rbp,rsp
  4038b4:	mov    eax,edi
  4038b6:	mov    BYTE PTR [rbp-0x4],al
  4038b9:	movzx  eax,BYTE PTR [rbp-0x4]
  4038bd:	pop    rbp
  4038be:	ret    
  4038bf:	push   rbp
  4038c0:	mov    rbp,rsp
  4038c3:	sub    rsp,0x8
  4038c7:	mov    QWORD PTR [rbp-0x8],rdi
  4038cb:	mov    rax,QWORD PTR [rbp-0x8]
  4038cf:	movzx  eax,BYTE PTR [rax]
  4038d2:	movsx  eax,al
  4038d5:	mov    edi,eax
  4038d7:	call   4038b0 <_start@@Base+0x5a0>
  4038dc:	leave  
  4038dd:	ret    
  4038de:	push   rbp
  4038df:	mov    rbp,rsp
  4038e2:	sub    rsp,0x8
  4038e6:	mov    QWORD PTR [rbp-0x8],rdi
  4038ea:	cmp    QWORD PTR [rbp-0x8],0x0
  4038ef:	je     4038ff <_start@@Base+0x5ef>
  4038f1:	mov    rax,QWORD PTR [rbp-0x8]
  4038f5:	mov    rdi,rax
  4038f8:	call   40354c <_start@@Base+0x23c>
  4038fd:	jmp    403904 <_start@@Base+0x5f4>
  4038ff:	mov    eax,0x0
  403904:	leave  
  403905:	ret    
  403906:	push   rbp
  403907:	mov    rbp,rsp
  40390a:	sub    rsp,0x8
  40390e:	mov    QWORD PTR [rbp-0x8],rdi
  403912:	cmp    QWORD PTR [rbp-0x8],0x0
  403917:	je     40392b <_start@@Base+0x61b>
  403919:	mov    rax,QWORD PTR [rbp-0x8]
  40391d:	add    rax,0x2
  403921:	mov    rdi,rax
  403924:	call   4034e8 <_start@@Base+0x1d8>
  403929:	jmp    403930 <_start@@Base+0x620>
  40392b:	mov    eax,0x0
  403930:	leave  
  403931:	ret    
  403932:	push   rbp
  403933:	mov    rbp,rsp
  403936:	sub    rsp,0x8
  40393a:	mov    QWORD PTR [rbp-0x8],rdi
  40393e:	cmp    QWORD PTR [rbp-0x8],0x0
  403943:	je     403957 <_start@@Base+0x647>
  403945:	mov    rax,QWORD PTR [rbp-0x8]
  403949:	mov    rdi,rax
  40394c:	call   403639 <_start@@Base+0x329>
  403951:	vmovd  eax,xmm0
  403955:	jmp    40395d <_start@@Base+0x64d>
  403957:	mov    eax,DWORD PTR [rip+0x1e9cf]        # 42232c <_IO_stdin_used@@Base+0x32c>
  40395d:	vmovd  xmm0,eax
  403961:	leave  
  403962:	ret    
  403963:	push   rbp
  403964:	mov    rbp,rsp
  403967:	sub    rsp,0x8
  40396b:	mov    QWORD PTR [rbp-0x8],rdi
  40396f:	cmp    QWORD PTR [rbp-0x8],0x0
  403974:	je     40398c <_start@@Base+0x67c>
  403976:	mov    rax,QWORD PTR [rbp-0x8]
  40397a:	add    rax,0x4
  40397e:	mov    rdi,rax
  403981:	call   403639 <_start@@Base+0x329>
  403986:	vmovd  eax,xmm0
  40398a:	jmp    403992 <_start@@Base+0x682>
  40398c:	mov    eax,DWORD PTR [rip+0x1e99a]        # 42232c <_IO_stdin_used@@Base+0x32c>
  403992:	vmovd  xmm0,eax
  403996:	leave  
  403997:	ret    
  403998:	push   rbp
  403999:	mov    rbp,rsp
  40399c:	sub    rsp,0x8
  4039a0:	mov    QWORD PTR [rbp-0x8],rdi
  4039a4:	cmp    QWORD PTR [rbp-0x8],0x0
  4039a9:	je     4039c1 <_start@@Base+0x6b1>
  4039ab:	mov    rax,QWORD PTR [rbp-0x8]
  4039af:	add    rax,0x8
  4039b3:	mov    rdi,rax
  4039b6:	call   403639 <_start@@Base+0x329>
  4039bb:	vmovd  eax,xmm0
  4039bf:	jmp    4039c7 <_start@@Base+0x6b7>
  4039c1:	mov    eax,DWORD PTR [rip+0x1e965]        # 42232c <_IO_stdin_used@@Base+0x32c>
  4039c7:	vmovd  xmm0,eax
  4039cb:	leave  
  4039cc:	ret    
  4039cd:	push   rbp
  4039ce:	mov    rbp,rsp
  4039d1:	sub    rsp,0x8
  4039d5:	mov    QWORD PTR [rbp-0x8],rdi
  4039d9:	cmp    QWORD PTR [rbp-0x8],0x0
  4039de:	je     4039f7 <_start@@Base+0x6e7>
  4039e0:	mov    rax,QWORD PTR [rbp-0x8]
  4039e4:	add    rax,0x10
  4039e8:	mov    rdi,rax
  4039eb:	call   4036d8 <_start@@Base+0x3c8>
  4039f0:	vmovq  rax,xmm0
  4039f5:	jmp    4039fe <_start@@Base+0x6ee>
  4039f7:	mov    rax,QWORD PTR [rip+0x1e932]        # 422330 <_IO_stdin_used@@Base+0x330>
  4039fe:	vmovq  xmm0,rax
  403a03:	leave  
  403a04:	ret    
  403a05:	push   rbp
  403a06:	mov    rbp,rsp
  403a09:	sub    rsp,0x8
  403a0d:	mov    QWORD PTR [rbp-0x8],rdi
  403a11:	cmp    QWORD PTR [rbp-0x8],0x0
  403a16:	je     403a2a <_start@@Base+0x71a>
  403a18:	mov    rax,QWORD PTR [rbp-0x8]
  403a1c:	add    rax,0x18
  403a20:	mov    rdi,rax
  403a23:	call   4038bf <_start@@Base+0x5af>
  403a28:	jmp    403a2f <_start@@Base+0x71f>
  403a2a:	mov    eax,0x0
  403a2f:	leave  
  403a30:	ret    
  403a31:	push   rbp
  403a32:	mov    rbp,rsp
  403a35:	mov    QWORD PTR [rbp-0x8],rdi
  403a39:	cmp    QWORD PTR [rbp-0x8],0x0
  403a3e:	je     403a4a <_start@@Base+0x73a>
  403a40:	mov    rax,QWORD PTR [rbp-0x8]
  403a44:	add    rax,0x1a
  403a48:	jmp    403a4f <_start@@Base+0x73f>
  403a4a:	mov    eax,0x0
  403a4f:	pop    rbp
  403a50:	ret    
  403a51:	push   rbp
  403a52:	mov    rbp,rsp
  403a55:	sub    rsp,0x10
  403a59:	mov    QWORD PTR [rbp-0x8],rdi
  403a5d:	mov    QWORD PTR [rbp-0x10],rsi
  403a61:	cmp    QWORD PTR [rbp-0x8],0x0
  403a66:	je     403a96 <_start@@Base+0x786>
  403a68:	mov    rdx,QWORD PTR [rbp-0x10]
  403a6c:	mov    rax,QWORD PTR [rbp-0x8]
  403a70:	mov    rsi,rdx
  403a73:	mov    rdi,rax
  403a76:	call   403813 <_start@@Base+0x503>
  403a7b:	test   eax,eax
  403a7d:	je     403a96 <_start@@Base+0x786>
  403a7f:	mov    rax,QWORD PTR [rbp-0x8]
  403a83:	mov    rdi,rax
  403a86:	call   40376f <_start@@Base+0x45f>
  403a8b:	mov    edx,eax
  403a8d:	mov    rax,QWORD PTR [rbp-0x8]
  403a91:	add    rax,rdx
  403a94:	jmp    403a9b <_start@@Base+0x78b>
  403a96:	mov    eax,0x0
  403a9b:	leave  
  403a9c:	ret    
  403a9d:	push   rbp
  403a9e:	mov    rbp,rsp
  403aa1:	sub    rsp,0x20
  403aa5:	mov    QWORD PTR [rbp-0x18],rdi
  403aa9:	mov    WORD PTR [rbp-0xc],0x0
  403aaf:	cmp    QWORD PTR [rbp-0x18],0x0
  403ab4:	jne    403ad5 <_start@@Base+0x7c5>
  403ab6:	lea    rcx,[rip+0x1e853]        # 422310 <_IO_stdin_used@@Base+0x310>
  403abd:	mov    edx,0x2b8
  403ac2:	lea    rsi,[rip+0x1e54f]        # 422018 <_IO_stdin_used@@Base+0x18>
  403ac9:	lea    rdi,[rip+0x1e5c8]        # 422098 <_IO_stdin_used@@Base+0x98>
  403ad0:	call   403220 <__assert_fail@plt>
  403ad5:	mov    WORD PTR [rbp-0xa],0x0
  403adb:	mov    rax,QWORD PTR [rbp-0x18]
  403adf:	mov    rdi,rax
  403ae2:	call   403796 <_start@@Base+0x486>
  403ae7:	cdqe   
  403ae9:	neg    rax
  403aec:	mov    rdx,rax
  403aef:	mov    rax,QWORD PTR [rbp-0x18]
  403af3:	add    rax,rdx
  403af6:	mov    QWORD PTR [rbp-0x8],rax
  403afa:	mov    rax,QWORD PTR [rbp-0x8]
  403afe:	mov    rdi,rax
  403b01:	call   4037c1 <_start@@Base+0x4b1>
  403b06:	movzx  eax,ax
  403b09:	movzx  edx,WORD PTR [rbp-0xa]
  403b0d:	add    edx,0x3
  403b10:	movsxd rdx,edx
  403b13:	add    rdx,rdx
  403b16:	cmp    rax,rdx
  403b19:	jb     403b3a <_start@@Base+0x82a>
  403b1b:	movzx  eax,WORD PTR [rbp-0xa]
  403b1f:	add    rax,0x2
  403b23:	lea    rdx,[rax+rax*1]
  403b27:	mov    rax,QWORD PTR [rbp-0x8]
  403b2b:	add    rax,rdx
  403b2e:	mov    rdi,rax
  403b31:	call   4037c1 <_start@@Base+0x4b1>
  403b36:	mov    WORD PTR [rbp-0xc],ax
  403b3a:	cmp    WORD PTR [rbp-0xc],0x0
  403b3f:	je     403b4e <_start@@Base+0x83e>
  403b41:	movzx  edx,WORD PTR [rbp-0xc]
  403b45:	mov    rax,QWORD PTR [rbp-0x18]
  403b49:	add    rax,rdx
  403b4c:	jmp    403b53 <_start@@Base+0x843>
  403b4e:	mov    eax,0x0
  403b53:	leave  
  403b54:	ret    
  403b55:	push   rbp
  403b56:	mov    rbp,rsp
  403b59:	sub    rsp,0x30
  403b5d:	mov    QWORD PTR [rbp-0x8],rdi
  403b61:	mov    QWORD PTR [rbp-0x10],rsi
  403b65:	mov    QWORD PTR [rbp-0x18],rdx
  403b69:	mov    QWORD PTR [rbp-0x20],rcx
  403b6d:	mov    DWORD PTR [rbp-0x24],r8d
  403b71:	mov    rax,QWORD PTR [rbp-0x8]
  403b75:	mov    edx,0x48
  403b7a:	mov    esi,0x0
  403b7f:	mov    rdi,rax
  403b82:	call   403230 <memset@plt>
  403b87:	mov    rax,QWORD PTR [rbp-0x8]
  403b8b:	mov    rdx,QWORD PTR [rbp-0x10]
  403b8f:	mov    QWORD PTR [rax],rdx
  403b92:	mov    rax,QWORD PTR [rbp-0x8]
  403b96:	mov    rdx,QWORD PTR [rbp-0x18]
  403b9a:	mov    QWORD PTR [rax+0x8],rdx
  403b9e:	mov    rax,QWORD PTR [rbp-0x8]
  403ba2:	mov    DWORD PTR [rax+0x18],0x1
  403ba9:	mov    rax,QWORD PTR [rbp-0x8]
  403bad:	mov    edx,DWORD PTR [rbp-0x24]
  403bb0:	mov    DWORD PTR [rax+0x10],edx
  403bb3:	mov    rax,QWORD PTR [rbp-0x8]
  403bb7:	mov    rdx,QWORD PTR [rbp-0x18]
  403bbb:	mov    QWORD PTR [rax+0x28],rdx
  403bbf:	mov    rax,QWORD PTR [rbp-0x8]
  403bc3:	mov    rdx,QWORD PTR [rbp-0x20]
  403bc7:	mov    QWORD PTR [rax+0x30],rdx
  403bcb:	mov    rax,QWORD PTR [rbp-0x8]
  403bcf:	mov    rdx,QWORD PTR [rbp-0x18]
  403bd3:	mov    QWORD PTR [rax+0x38],rdx
  403bd7:	nop
  403bd8:	leave  
  403bd9:	ret    
  403bda:	push   rbp
  403bdb:	mov    rbp,rsp
  403bde:	sub    rsp,0x20
  403be2:	mov    QWORD PTR [rbp-0x8],rdi
  403be6:	mov    QWORD PTR [rbp-0x10],rsi
  403bea:	mov    QWORD PTR [rbp-0x18],rdx
  403bee:	mov    rax,QWORD PTR [rbp-0x18]
  403bf2:	sub    rax,QWORD PTR [rbp-0x10]
  403bf6:	cmp    rax,0x1
  403bfa:	jle    403c2f <_start@@Base+0x91f>
  403bfc:	mov    rax,QWORD PTR [rbp-0x10]
  403c00:	movzx  eax,BYTE PTR [rax]
  403c03:	cmp    al,0x20
  403c05:	jle    403c0d <_start@@Base+0x8fd>
  403c07:	mov    rax,QWORD PTR [rbp-0x10]
  403c0b:	jmp    403c46 <_start@@Base+0x936>
  403c0d:	mov    rax,QWORD PTR [rbp-0x10]
  403c11:	movzx  eax,BYTE PTR [rax]
  403c14:	cmp    al,0x20
  403c16:	jne    403c2f <_start@@Base+0x91f>
  403c18:	mov    rax,QWORD PTR [rbp-0x10]
  403c1c:	inc    rax
  403c1f:	movzx  eax,BYTE PTR [rax]
  403c22:	cmp    al,0x20
  403c24:	jle    403c2f <_start@@Base+0x91f>
  403c26:	mov    rax,QWORD PTR [rbp-0x10]
  403c2a:	inc    rax
  403c2d:	jmp    403c46 <_start@@Base+0x936>
  403c2f:	mov    rdx,QWORD PTR [rbp-0x18]
  403c33:	mov    rcx,QWORD PTR [rbp-0x10]
  403c37:	mov    rax,QWORD PTR [rbp-0x8]
  403c3b:	mov    rsi,rcx
  403c3e:	mov    rdi,rax
  403c41:	call   41f1a3 <flatcc_json_parser_space_ext@@Base>
  403c46:	leave  
  403c47:	ret    
  403c48:	push   rbp
  403c49:	mov    rbp,rsp
  403c4c:	sub    rsp,0x20
  403c50:	mov    QWORD PTR [rbp-0x8],rdi
  403c54:	mov    QWORD PTR [rbp-0x10],rsi
  403c58:	mov    QWORD PTR [rbp-0x18],rdx
  403c5c:	mov    rax,QWORD PTR [rbp-0x10]
  403c60:	cmp    rax,QWORD PTR [rbp-0x18]
  403c64:	jne    403c6c <_start@@Base+0x95c>
  403c66:	mov    rax,QWORD PTR [rbp-0x10]
  403c6a:	jmp    403cbd <_start@@Base+0x9ad>
  403c6c:	mov    rax,QWORD PTR [rbp-0x10]
  403c70:	movzx  eax,BYTE PTR [rax]
  403c73:	cmp    al,0x22
  403c75:	jne    403c88 <_start@@Base+0x978>
  403c77:	inc    QWORD PTR [rbp-0x10]
  403c7b:	mov    rax,QWORD PTR [rbp-0x8]
  403c7f:	mov    DWORD PTR [rax+0x14],0x0
  403c86:	jmp    403cb9 <_start@@Base+0x9a9>
  403c88:	mov    rax,QWORD PTR [rbp-0x10]
  403c8c:	movzx  eax,BYTE PTR [rax]
  403c8f:	cmp    al,0x2e
  403c91:	jne    403cae <_start@@Base+0x99e>
  403c93:	mov    rdx,QWORD PTR [rbp-0x18]
  403c97:	mov    rsi,QWORD PTR [rbp-0x10]
  403c9b:	mov    rax,QWORD PTR [rbp-0x8]
  403c9f:	mov    ecx,0x5
  403ca4:	mov    rdi,rax
  403ca7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  403cac:	jmp    403cbd <_start@@Base+0x9ad>
  403cae:	mov    rax,QWORD PTR [rbp-0x8]
  403cb2:	mov    DWORD PTR [rax+0x14],0x1
  403cb9:	mov    rax,QWORD PTR [rbp-0x10]
  403cbd:	leave  
  403cbe:	ret    
  403cbf:	push   rbp
  403cc0:	mov    rbp,rsp
  403cc3:	mov    QWORD PTR [rbp-0x18],rdi
  403cc7:	mov    QWORD PTR [rbp-0x20],rsi
  403ccb:	mov    QWORD PTR [rbp-0x10],0x0
  403cd3:	mov    rax,QWORD PTR [rbp-0x20]
  403cd7:	sub    rax,QWORD PTR [rbp-0x18]
  403cdb:	mov    QWORD PTR [rbp-0x8],rax
  403cdf:	cmp    QWORD PTR [rbp-0x8],0x8
  403ce4:	jbe    403cee <_start@@Base+0x9de>
  403ce6:	mov    QWORD PTR [rbp-0x8],0x8
  403cee:	cmp    QWORD PTR [rbp-0x8],0x8
  403cf3:	ja     403dcf <_start@@Base+0xabf>
  403cf9:	mov    rax,QWORD PTR [rbp-0x8]
  403cfd:	lea    rdx,[rax*4+0x0]
  403d05:	lea    rax,[rip+0x1e3b4]        # 4220c0 <_IO_stdin_used@@Base+0xc0>
  403d0c:	mov    eax,DWORD PTR [rdx+rax*1]
  403d0f:	movsxd rdx,eax
  403d12:	lea    rax,[rip+0x1e3a7]        # 4220c0 <_IO_stdin_used@@Base+0xc0>
  403d19:	add    rax,rdx
  403d1c:	notrack jmp rax
  403d1f:	mov    rax,QWORD PTR [rbp-0x18]
  403d23:	add    rax,0x7
  403d27:	movzx  eax,BYTE PTR [rax]
  403d2a:	movsx  rax,al
  403d2e:	or     QWORD PTR [rbp-0x10],rax
  403d32:	mov    rax,QWORD PTR [rbp-0x18]
  403d36:	add    rax,0x6
  403d3a:	movzx  eax,BYTE PTR [rax]
  403d3d:	movsx  rax,al
  403d41:	shl    rax,0x8
  403d45:	or     QWORD PTR [rbp-0x10],rax
  403d49:	mov    rax,QWORD PTR [rbp-0x18]
  403d4d:	add    rax,0x5
  403d51:	movzx  eax,BYTE PTR [rax]
  403d54:	movsx  rax,al
  403d58:	shl    rax,0x10
  403d5c:	or     QWORD PTR [rbp-0x10],rax
  403d60:	mov    rax,QWORD PTR [rbp-0x18]
  403d64:	add    rax,0x4
  403d68:	movzx  eax,BYTE PTR [rax]
  403d6b:	movsx  rax,al
  403d6f:	shl    rax,0x18
  403d73:	or     QWORD PTR [rbp-0x10],rax
  403d77:	mov    rax,QWORD PTR [rbp-0x18]
  403d7b:	add    rax,0x3
  403d7f:	movzx  eax,BYTE PTR [rax]
  403d82:	movsx  rax,al
  403d86:	shl    rax,0x20
  403d8a:	or     QWORD PTR [rbp-0x10],rax
  403d8e:	mov    rax,QWORD PTR [rbp-0x18]
  403d92:	add    rax,0x2
  403d96:	movzx  eax,BYTE PTR [rax]
  403d99:	movsx  rax,al
  403d9d:	shl    rax,0x28
  403da1:	or     QWORD PTR [rbp-0x10],rax
  403da5:	mov    rax,QWORD PTR [rbp-0x18]
  403da9:	inc    rax
  403dac:	movzx  eax,BYTE PTR [rax]
  403daf:	movsx  rax,al
  403db3:	shl    rax,0x30
  403db7:	or     QWORD PTR [rbp-0x10],rax
  403dbb:	mov    rax,QWORD PTR [rbp-0x18]
  403dbf:	movzx  eax,BYTE PTR [rax]
  403dc2:	movsx  rax,al
  403dc6:	shl    rax,0x38
  403dca:	or     QWORD PTR [rbp-0x10],rax
  403dce:	nop
  403dcf:	mov    rax,QWORD PTR [rbp-0x10]
  403dd3:	pop    rbp
  403dd4:	ret    
  403dd5:	push   rbp
  403dd6:	mov    rbp,rsp
  403dd9:	sub    rsp,0x20
  403ddd:	mov    QWORD PTR [rbp-0x18],rdi
  403de1:	mov    QWORD PTR [rbp-0x20],rsi
  403de5:	mov    rax,QWORD PTR [rbp-0x20]
  403de9:	sub    rax,QWORD PTR [rbp-0x18]
  403ded:	mov    QWORD PTR [rbp-0x8],rax
  403df1:	cmp    QWORD PTR [rbp-0x8],0x7
  403df6:	jbe    403e04 <_start@@Base+0xaf4>
  403df8:	mov    rax,QWORD PTR [rbp-0x18]
  403dfc:	mov    rax,QWORD PTR [rax]
  403dff:	bswap  rax
  403e02:	jmp    403e17 <_start@@Base+0xb07>
  403e04:	mov    rdx,QWORD PTR [rbp-0x20]
  403e08:	mov    rax,QWORD PTR [rbp-0x18]
  403e0c:	mov    rsi,rdx
  403e0f:	mov    rdi,rax
  403e12:	call   403cbf <_start@@Base+0x9af>
  403e17:	leave  
  403e18:	ret    
  403e19:	push   rbp
  403e1a:	mov    rbp,rsp
  403e1d:	mov    QWORD PTR [rbp-0x18],rdi
  403e21:	mov    QWORD PTR [rbp-0x20],rsi
  403e25:	mov    QWORD PTR [rbp-0x28],rdx
  403e29:	mov    DWORD PTR [rbp-0x2c],ecx
  403e2c:	mov    rax,QWORD PTR [rbp-0x20]
  403e30:	mov    QWORD PTR [rbp-0x8],rax
  403e34:	mov    rax,QWORD PTR [rbp-0x28]
  403e38:	sub    rax,QWORD PTR [rbp-0x20]
  403e3c:	mov    rdx,rax
  403e3f:	mov    eax,DWORD PTR [rbp-0x2c]
  403e42:	cdqe   
  403e44:	cmp    rdx,rax
  403e47:	jg     403e4f <_start@@Base+0xb3f>
  403e49:	mov    rax,QWORD PTR [rbp-0x8]
  403e4d:	jmp    403e79 <_start@@Base+0xb69>
  403e4f:	mov    eax,DWORD PTR [rbp-0x2c]
  403e52:	movsxd rdx,eax
  403e55:	mov    rax,QWORD PTR [rbp-0x20]
  403e59:	add    rax,rdx
  403e5c:	movzx  eax,BYTE PTR [rax]
  403e5f:	cmp    al,0x2e
  403e61:	je     403e69 <_start@@Base+0xb59>
  403e63:	mov    rax,QWORD PTR [rbp-0x8]
  403e67:	jmp    403e79 <_start@@Base+0xb69>
  403e69:	mov    eax,DWORD PTR [rbp-0x2c]
  403e6c:	cdqe   
  403e6e:	lea    rdx,[rax+0x1]
  403e72:	mov    rax,QWORD PTR [rbp-0x20]
  403e76:	add    rax,rdx
  403e79:	pop    rbp
  403e7a:	ret    
  403e7b:	push   rbp
  403e7c:	mov    rbp,rsp
  403e7f:	sub    rsp,0x20
  403e83:	mov    QWORD PTR [rbp-0x8],rdi
  403e87:	mov    QWORD PTR [rbp-0x10],rsi
  403e8b:	mov    QWORD PTR [rbp-0x18],rdx
  403e8f:	mov    rdx,QWORD PTR [rbp-0x18]
  403e93:	mov    rcx,QWORD PTR [rbp-0x10]
  403e97:	mov    rax,QWORD PTR [rbp-0x8]
  403e9b:	mov    rsi,rcx
  403e9e:	mov    rdi,rax
  403ea1:	call   403c48 <_start@@Base+0x938>
  403ea6:	mov    QWORD PTR [rbp-0x10],rax
  403eaa:	mov    rax,QWORD PTR [rbp-0x8]
  403eae:	mov    eax,DWORD PTR [rax+0x14]
  403eb1:	test   eax,eax
  403eb3:	jne    403ed0 <_start@@Base+0xbc0>
  403eb5:	mov    rdx,QWORD PTR [rbp-0x18]
  403eb9:	mov    rcx,QWORD PTR [rbp-0x10]
  403ebd:	mov    rax,QWORD PTR [rbp-0x8]
  403ec1:	mov    rsi,rcx
  403ec4:	mov    rdi,rax
  403ec7:	call   403bda <_start@@Base+0x8ca>
  403ecc:	mov    QWORD PTR [rbp-0x10],rax
  403ed0:	mov    rax,QWORD PTR [rbp-0x10]
  403ed4:	leave  
  403ed5:	ret    
  403ed6:	push   rbp
  403ed7:	mov    rbp,rsp
  403eda:	sub    rsp,0x20
  403ede:	mov    QWORD PTR [rbp-0x8],rdi
  403ee2:	mov    QWORD PTR [rbp-0x10],rsi
  403ee6:	mov    QWORD PTR [rbp-0x18],rdx
  403eea:	mov    QWORD PTR [rbp-0x20],rcx
  403eee:	mov    rax,QWORD PTR [rbp-0x10]
  403ef2:	cmp    rax,QWORD PTR [rbp-0x18]
  403ef6:	je     403f03 <_start@@Base+0xbf3>
  403ef8:	mov    rax,QWORD PTR [rbp-0x10]
  403efc:	movzx  eax,BYTE PTR [rax]
  403eff:	cmp    al,0x7b
  403f01:	je     403f28 <_start@@Base+0xc18>
  403f03:	mov    rax,QWORD PTR [rbp-0x20]
  403f07:	mov    DWORD PTR [rax],0x0
  403f0d:	mov    rdx,QWORD PTR [rbp-0x18]
  403f11:	mov    rsi,QWORD PTR [rbp-0x10]
  403f15:	mov    rax,QWORD PTR [rbp-0x8]
  403f19:	mov    ecx,0x15
  403f1e:	mov    rdi,rax
  403f21:	call   41f09d <flatcc_json_parser_set_error@@Base>
  403f26:	jmp    403f91 <_start@@Base+0xc81>
  403f28:	mov    rax,QWORD PTR [rbp-0x10]
  403f2c:	lea    rcx,[rax+0x1]
  403f30:	mov    rdx,QWORD PTR [rbp-0x18]
  403f34:	mov    rax,QWORD PTR [rbp-0x8]
  403f38:	mov    rsi,rcx
  403f3b:	mov    rdi,rax
  403f3e:	call   403bda <_start@@Base+0x8ca>
  403f43:	mov    QWORD PTR [rbp-0x10],rax
  403f47:	mov    rax,QWORD PTR [rbp-0x10]
  403f4b:	cmp    rax,QWORD PTR [rbp-0x18]
  403f4f:	je     403f83 <_start@@Base+0xc73>
  403f51:	mov    rax,QWORD PTR [rbp-0x10]
  403f55:	movzx  eax,BYTE PTR [rax]
  403f58:	cmp    al,0x7d
  403f5a:	jne    403f83 <_start@@Base+0xc73>
  403f5c:	mov    rax,QWORD PTR [rbp-0x20]
  403f60:	mov    DWORD PTR [rax],0x0
  403f66:	mov    rax,QWORD PTR [rbp-0x10]
  403f6a:	lea    rcx,[rax+0x1]
  403f6e:	mov    rdx,QWORD PTR [rbp-0x18]
  403f72:	mov    rax,QWORD PTR [rbp-0x8]
  403f76:	mov    rsi,rcx
  403f79:	mov    rdi,rax
  403f7c:	call   403bda <_start@@Base+0x8ca>
  403f81:	jmp    403f91 <_start@@Base+0xc81>
  403f83:	mov    rax,QWORD PTR [rbp-0x20]
  403f87:	mov    DWORD PTR [rax],0x1
  403f8d:	mov    rax,QWORD PTR [rbp-0x10]
  403f91:	leave  
  403f92:	ret    
  403f93:	push   rbp
  403f94:	mov    rbp,rsp
  403f97:	sub    rsp,0x20
  403f9b:	mov    QWORD PTR [rbp-0x8],rdi
  403f9f:	mov    QWORD PTR [rbp-0x10],rsi
  403fa3:	mov    QWORD PTR [rbp-0x18],rdx
  403fa7:	mov    QWORD PTR [rbp-0x20],rcx
  403fab:	mov    rdx,QWORD PTR [rbp-0x18]
  403faf:	mov    rcx,QWORD PTR [rbp-0x10]
  403fb3:	mov    rax,QWORD PTR [rbp-0x8]
  403fb7:	mov    rsi,rcx
  403fba:	mov    rdi,rax
  403fbd:	call   403bda <_start@@Base+0x8ca>
  403fc2:	mov    QWORD PTR [rbp-0x10],rax
  403fc6:	mov    rax,QWORD PTR [rbp-0x10]
  403fca:	cmp    rax,QWORD PTR [rbp-0x18]
  403fce:	jne    403fe3 <_start@@Base+0xcd3>
  403fd0:	mov    rax,QWORD PTR [rbp-0x20]
  403fd4:	mov    DWORD PTR [rax],0x0
  403fda:	mov    rax,QWORD PTR [rbp-0x10]
  403fde:	jmp    4040cf <_start@@Base+0xdbf>
  403fe3:	mov    rax,QWORD PTR [rbp-0x10]
  403fe7:	movzx  eax,BYTE PTR [rax]
  403fea:	cmp    al,0x2c
  403fec:	je     404041 <_start@@Base+0xd31>
  403fee:	mov    rax,QWORD PTR [rbp-0x20]
  403ff2:	mov    DWORD PTR [rax],0x0
  403ff8:	mov    rax,QWORD PTR [rbp-0x10]
  403ffc:	movzx  eax,BYTE PTR [rax]
  403fff:	cmp    al,0x7d
  404001:	je     404021 <_start@@Base+0xd11>
  404003:	mov    rdx,QWORD PTR [rbp-0x18]
  404007:	mov    rsi,QWORD PTR [rbp-0x10]
  40400b:	mov    rax,QWORD PTR [rbp-0x8]
  40400f:	mov    ecx,0xa
  404014:	mov    rdi,rax
  404017:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40401c:	jmp    4040cf <_start@@Base+0xdbf>
  404021:	mov    rax,QWORD PTR [rbp-0x10]
  404025:	lea    rcx,[rax+0x1]
  404029:	mov    rdx,QWORD PTR [rbp-0x18]
  40402d:	mov    rax,QWORD PTR [rbp-0x8]
  404031:	mov    rsi,rcx
  404034:	mov    rdi,rax
  404037:	call   403bda <_start@@Base+0x8ca>
  40403c:	jmp    4040cf <_start@@Base+0xdbf>
  404041:	mov    rax,QWORD PTR [rbp-0x10]
  404045:	lea    rcx,[rax+0x1]
  404049:	mov    rdx,QWORD PTR [rbp-0x18]
  40404d:	mov    rax,QWORD PTR [rbp-0x8]
  404051:	mov    rsi,rcx
  404054:	mov    rdi,rax
  404057:	call   403bda <_start@@Base+0x8ca>
  40405c:	mov    QWORD PTR [rbp-0x10],rax
  404060:	mov    rax,QWORD PTR [rbp-0x10]
  404064:	cmp    rax,QWORD PTR [rbp-0x18]
  404068:	jne    40408f <_start@@Base+0xd7f>
  40406a:	mov    rax,QWORD PTR [rbp-0x20]
  40406e:	mov    DWORD PTR [rax],0x0
  404074:	mov    rdx,QWORD PTR [rbp-0x18]
  404078:	mov    rsi,QWORD PTR [rbp-0x10]
  40407c:	mov    rax,QWORD PTR [rbp-0x8]
  404080:	mov    ecx,0xa
  404085:	mov    rdi,rax
  404088:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40408d:	jmp    4040cf <_start@@Base+0xdbf>
  40408f:	mov    rax,QWORD PTR [rbp-0x10]
  404093:	movzx  eax,BYTE PTR [rax]
  404096:	cmp    al,0x7d
  404098:	jne    4040c1 <_start@@Base+0xdb1>
  40409a:	mov    rax,QWORD PTR [rbp-0x20]
  40409e:	mov    DWORD PTR [rax],0x0
  4040a4:	mov    rax,QWORD PTR [rbp-0x10]
  4040a8:	lea    rcx,[rax+0x1]
  4040ac:	mov    rdx,QWORD PTR [rbp-0x18]
  4040b0:	mov    rax,QWORD PTR [rbp-0x8]
  4040b4:	mov    rsi,rcx
  4040b7:	mov    rdi,rax
  4040ba:	call   403bda <_start@@Base+0x8ca>
  4040bf:	jmp    4040cf <_start@@Base+0xdbf>
  4040c1:	mov    rax,QWORD PTR [rbp-0x20]
  4040c5:	mov    DWORD PTR [rax],0x1
  4040cb:	mov    rax,QWORD PTR [rbp-0x10]
  4040cf:	leave  
  4040d0:	ret    
  4040d1:	push   rbp
  4040d2:	mov    rbp,rsp
  4040d5:	sub    rsp,0x20
  4040d9:	mov    QWORD PTR [rbp-0x8],rdi
  4040dd:	mov    QWORD PTR [rbp-0x10],rsi
  4040e1:	mov    QWORD PTR [rbp-0x18],rdx
  4040e5:	mov    QWORD PTR [rbp-0x20],rcx
  4040e9:	mov    rax,QWORD PTR [rbp-0x10]
  4040ed:	cmp    rax,QWORD PTR [rbp-0x18]
  4040f1:	je     4040fe <_start@@Base+0xdee>
  4040f3:	mov    rax,QWORD PTR [rbp-0x10]
  4040f7:	movzx  eax,BYTE PTR [rax]
  4040fa:	cmp    al,0x5b
  4040fc:	je     404123 <_start@@Base+0xe13>
  4040fe:	mov    rax,QWORD PTR [rbp-0x20]
  404102:	mov    DWORD PTR [rax],0x0
  404108:	mov    rdx,QWORD PTR [rbp-0x18]
  40410c:	mov    rsi,QWORD PTR [rbp-0x10]
  404110:	mov    rax,QWORD PTR [rbp-0x8]
  404114:	mov    ecx,0x16
  404119:	mov    rdi,rax
  40411c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404121:	jmp    40418c <_start@@Base+0xe7c>
  404123:	mov    rax,QWORD PTR [rbp-0x10]
  404127:	lea    rcx,[rax+0x1]
  40412b:	mov    rdx,QWORD PTR [rbp-0x18]
  40412f:	mov    rax,QWORD PTR [rbp-0x8]
  404133:	mov    rsi,rcx
  404136:	mov    rdi,rax
  404139:	call   403bda <_start@@Base+0x8ca>
  40413e:	mov    QWORD PTR [rbp-0x10],rax
  404142:	mov    rax,QWORD PTR [rbp-0x10]
  404146:	cmp    rax,QWORD PTR [rbp-0x18]
  40414a:	je     40417e <_start@@Base+0xe6e>
  40414c:	mov    rax,QWORD PTR [rbp-0x10]
  404150:	movzx  eax,BYTE PTR [rax]
  404153:	cmp    al,0x5d
  404155:	jne    40417e <_start@@Base+0xe6e>
  404157:	mov    rax,QWORD PTR [rbp-0x20]
  40415b:	mov    DWORD PTR [rax],0x0
  404161:	mov    rax,QWORD PTR [rbp-0x10]
  404165:	lea    rcx,[rax+0x1]
  404169:	mov    rdx,QWORD PTR [rbp-0x18]
  40416d:	mov    rax,QWORD PTR [rbp-0x8]
  404171:	mov    rsi,rcx
  404174:	mov    rdi,rax
  404177:	call   403bda <_start@@Base+0x8ca>
  40417c:	jmp    40418c <_start@@Base+0xe7c>
  40417e:	mov    rax,QWORD PTR [rbp-0x20]
  404182:	mov    DWORD PTR [rax],0x1
  404188:	mov    rax,QWORD PTR [rbp-0x10]
  40418c:	leave  
  40418d:	ret    
  40418e:	push   rbp
  40418f:	mov    rbp,rsp
  404192:	sub    rsp,0x20
  404196:	mov    QWORD PTR [rbp-0x8],rdi
  40419a:	mov    QWORD PTR [rbp-0x10],rsi
  40419e:	mov    QWORD PTR [rbp-0x18],rdx
  4041a2:	mov    QWORD PTR [rbp-0x20],rcx
  4041a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4041aa:	mov    rcx,QWORD PTR [rbp-0x10]
  4041ae:	mov    rax,QWORD PTR [rbp-0x8]
  4041b2:	mov    rsi,rcx
  4041b5:	mov    rdi,rax
  4041b8:	call   403bda <_start@@Base+0x8ca>
  4041bd:	mov    QWORD PTR [rbp-0x10],rax
  4041c1:	mov    rax,QWORD PTR [rbp-0x10]
  4041c5:	cmp    rax,QWORD PTR [rbp-0x18]
  4041c9:	jne    4041de <_start@@Base+0xece>
  4041cb:	mov    rax,QWORD PTR [rbp-0x20]
  4041cf:	mov    DWORD PTR [rax],0x0
  4041d5:	mov    rax,QWORD PTR [rbp-0x10]
  4041d9:	jmp    4042ca <_start@@Base+0xfba>
  4041de:	mov    rax,QWORD PTR [rbp-0x10]
  4041e2:	movzx  eax,BYTE PTR [rax]
  4041e5:	cmp    al,0x2c
  4041e7:	je     40423c <_start@@Base+0xf2c>
  4041e9:	mov    rax,QWORD PTR [rbp-0x20]
  4041ed:	mov    DWORD PTR [rax],0x0
  4041f3:	mov    rax,QWORD PTR [rbp-0x10]
  4041f7:	movzx  eax,BYTE PTR [rax]
  4041fa:	cmp    al,0x5d
  4041fc:	je     40421c <_start@@Base+0xf0c>
  4041fe:	mov    rdx,QWORD PTR [rbp-0x18]
  404202:	mov    rsi,QWORD PTR [rbp-0x10]
  404206:	mov    rax,QWORD PTR [rbp-0x8]
  40420a:	mov    ecx,0x9
  40420f:	mov    rdi,rax
  404212:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404217:	jmp    4042ca <_start@@Base+0xfba>
  40421c:	mov    rax,QWORD PTR [rbp-0x10]
  404220:	lea    rcx,[rax+0x1]
  404224:	mov    rdx,QWORD PTR [rbp-0x18]
  404228:	mov    rax,QWORD PTR [rbp-0x8]
  40422c:	mov    rsi,rcx
  40422f:	mov    rdi,rax
  404232:	call   403bda <_start@@Base+0x8ca>
  404237:	jmp    4042ca <_start@@Base+0xfba>
  40423c:	mov    rax,QWORD PTR [rbp-0x10]
  404240:	lea    rcx,[rax+0x1]
  404244:	mov    rdx,QWORD PTR [rbp-0x18]
  404248:	mov    rax,QWORD PTR [rbp-0x8]
  40424c:	mov    rsi,rcx
  40424f:	mov    rdi,rax
  404252:	call   403bda <_start@@Base+0x8ca>
  404257:	mov    QWORD PTR [rbp-0x10],rax
  40425b:	mov    rax,QWORD PTR [rbp-0x10]
  40425f:	cmp    rax,QWORD PTR [rbp-0x18]
  404263:	jne    40428a <_start@@Base+0xf7a>
  404265:	mov    rax,QWORD PTR [rbp-0x20]
  404269:	mov    DWORD PTR [rax],0x0
  40426f:	mov    rdx,QWORD PTR [rbp-0x18]
  404273:	mov    rsi,QWORD PTR [rbp-0x10]
  404277:	mov    rax,QWORD PTR [rbp-0x8]
  40427b:	mov    ecx,0x9
  404280:	mov    rdi,rax
  404283:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404288:	jmp    4042ca <_start@@Base+0xfba>
  40428a:	mov    rax,QWORD PTR [rbp-0x10]
  40428e:	movzx  eax,BYTE PTR [rax]
  404291:	cmp    al,0x5d
  404293:	jne    4042bc <_start@@Base+0xfac>
  404295:	mov    rax,QWORD PTR [rbp-0x20]
  404299:	mov    DWORD PTR [rax],0x0
  40429f:	mov    rax,QWORD PTR [rbp-0x10]
  4042a3:	lea    rcx,[rax+0x1]
  4042a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4042ab:	mov    rax,QWORD PTR [rbp-0x8]
  4042af:	mov    rsi,rcx
  4042b2:	mov    rdi,rax
  4042b5:	call   403bda <_start@@Base+0x8ca>
  4042ba:	jmp    4042ca <_start@@Base+0xfba>
  4042bc:	mov    rax,QWORD PTR [rbp-0x20]
  4042c0:	mov    DWORD PTR [rax],0x1
  4042c6:	mov    rax,QWORD PTR [rbp-0x10]
  4042ca:	leave  
  4042cb:	ret    
  4042cc:	push   rbp
  4042cd:	mov    rbp,rsp
  4042d0:	sub    rsp,0x30
  4042d4:	mov    QWORD PTR [rbp-0x18],rdi
  4042d8:	mov    QWORD PTR [rbp-0x20],rsi
  4042dc:	mov    QWORD PTR [rbp-0x28],rdx
  4042e0:	mov    DWORD PTR [rbp-0x2c],ecx
  4042e3:	mov    rax,QWORD PTR [rbp-0x20]
  4042e7:	mov    QWORD PTR [rbp-0x8],rax
  4042eb:	mov    rax,QWORD PTR [rbp-0x28]
  4042ef:	sub    rax,QWORD PTR [rbp-0x20]
  4042f3:	mov    rdx,rax
  4042f6:	mov    eax,DWORD PTR [rbp-0x2c]
  4042f9:	cdqe   
  4042fb:	cmp    rdx,rax
  4042fe:	jg     404309 <_start@@Base+0xff9>
  404300:	mov    rax,QWORD PTR [rbp-0x8]
  404304:	jmp    4043e7 <_start@@Base+0x10d7>
  404309:	mov    rax,QWORD PTR [rbp-0x18]
  40430d:	mov    eax,DWORD PTR [rax+0x14]
  404310:	test   eax,eax
  404312:	je     40435b <_start@@Base+0x104b>
  404314:	mov    eax,DWORD PTR [rbp-0x2c]
  404317:	movsxd rdx,eax
  40431a:	mov    rax,QWORD PTR [rbp-0x20]
  40431e:	add    rax,rdx
  404321:	movzx  eax,BYTE PTR [rax]
  404324:	cmp    al,0x20
  404326:	jle    404345 <_start@@Base+0x1035>
  404328:	mov    eax,DWORD PTR [rbp-0x2c]
  40432b:	movsxd rdx,eax
  40432e:	mov    rax,QWORD PTR [rbp-0x20]
  404332:	add    rax,rdx
  404335:	movzx  eax,BYTE PTR [rax]
  404338:	cmp    al,0x3a
  40433a:	je     404345 <_start@@Base+0x1035>
  40433c:	mov    rax,QWORD PTR [rbp-0x8]
  404340:	jmp    4043e7 <_start@@Base+0x10d7>
  404345:	mov    eax,DWORD PTR [rbp-0x2c]
  404348:	cdqe   
  40434a:	add    QWORD PTR [rbp-0x20],rax
  40434e:	mov    rax,QWORD PTR [rbp-0x18]
  404352:	mov    DWORD PTR [rax+0x14],0x0
  404359:	jmp    404381 <_start@@Base+0x1071>
  40435b:	mov    eax,DWORD PTR [rbp-0x2c]
  40435e:	movsxd rdx,eax
  404361:	mov    rax,QWORD PTR [rbp-0x20]
  404365:	add    rax,rdx
  404368:	movzx  eax,BYTE PTR [rax]
  40436b:	cmp    al,0x22
  40436d:	je     404375 <_start@@Base+0x1065>
  40436f:	mov    rax,QWORD PTR [rbp-0x8]
  404373:	jmp    4043e7 <_start@@Base+0x10d7>
  404375:	mov    eax,DWORD PTR [rbp-0x2c]
  404378:	cdqe   
  40437a:	inc    rax
  40437d:	add    QWORD PTR [rbp-0x20],rax
  404381:	mov    rdx,QWORD PTR [rbp-0x28]
  404385:	mov    rcx,QWORD PTR [rbp-0x20]
  404389:	mov    rax,QWORD PTR [rbp-0x18]
  40438d:	mov    rsi,rcx
  404390:	mov    rdi,rax
  404393:	call   403bda <_start@@Base+0x8ca>
  404398:	mov    QWORD PTR [rbp-0x20],rax
  40439c:	mov    rax,QWORD PTR [rbp-0x20]
  4043a0:	cmp    rax,QWORD PTR [rbp-0x28]
  4043a4:	je     4043ce <_start@@Base+0x10be>
  4043a6:	mov    rax,QWORD PTR [rbp-0x20]
  4043aa:	movzx  eax,BYTE PTR [rax]
  4043ad:	cmp    al,0x3a
  4043af:	jne    4043ce <_start@@Base+0x10be>
  4043b1:	inc    QWORD PTR [rbp-0x20]
  4043b5:	mov    rdx,QWORD PTR [rbp-0x28]
  4043b9:	mov    rcx,QWORD PTR [rbp-0x20]
  4043bd:	mov    rax,QWORD PTR [rbp-0x18]
  4043c1:	mov    rsi,rcx
  4043c4:	mov    rdi,rax
  4043c7:	call   403bda <_start@@Base+0x8ca>
  4043cc:	jmp    4043e7 <_start@@Base+0x10d7>
  4043ce:	mov    rdx,QWORD PTR [rbp-0x28]
  4043d2:	mov    rsi,QWORD PTR [rbp-0x20]
  4043d6:	mov    rax,QWORD PTR [rbp-0x18]
  4043da:	mov    ecx,0x4
  4043df:	mov    rdi,rax
  4043e2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4043e7:	leave  
  4043e8:	ret    
  4043e9:	push   rbp
  4043ea:	mov    rbp,rsp
  4043ed:	sub    rsp,0x30
  4043f1:	mov    QWORD PTR [rbp-0x8],rdi
  4043f5:	mov    QWORD PTR [rbp-0x10],rsi
  4043f9:	mov    QWORD PTR [rbp-0x18],rdx
  4043fd:	mov    DWORD PTR [rbp-0x1c],ecx
  404400:	mov    QWORD PTR [rbp-0x28],r8
  404404:	mov    QWORD PTR [rbp-0x30],r9
  404408:	cmp    DWORD PTR [rbp-0x1c],0x0
  40440c:	je     404429 <_start@@Base+0x1119>
  40440e:	mov    rdx,QWORD PTR [rbp-0x18]
  404412:	mov    rsi,QWORD PTR [rbp-0x10]
  404416:	mov    rax,QWORD PTR [rbp-0x8]
  40441a:	mov    ecx,0x8
  40441f:	mov    rdi,rax
  404422:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404427:	jmp    404438 <_start@@Base+0x1128>
  404429:	mov    rax,QWORD PTR [rbp-0x30]
  40442d:	mov    rdx,QWORD PTR [rbp-0x28]
  404431:	mov    QWORD PTR [rax],rdx
  404434:	mov    rax,QWORD PTR [rbp-0x10]
  404438:	leave  
  404439:	ret    
  40443a:	push   rbp
  40443b:	mov    rbp,rsp
  40443e:	sub    rsp,0x30
  404442:	mov    QWORD PTR [rbp-0x8],rdi
  404446:	mov    QWORD PTR [rbp-0x10],rsi
  40444a:	mov    QWORD PTR [rbp-0x18],rdx
  40444e:	mov    DWORD PTR [rbp-0x1c],ecx
  404451:	mov    QWORD PTR [rbp-0x28],r8
  404455:	mov    QWORD PTR [rbp-0x30],r9
  404459:	cmp    DWORD PTR [rbp-0x1c],0x0
  40445d:	je     40447a <_start@@Base+0x116a>
  40445f:	mov    rdx,QWORD PTR [rbp-0x18]
  404463:	mov    rsi,QWORD PTR [rbp-0x10]
  404467:	mov    rax,QWORD PTR [rbp-0x8]
  40446b:	mov    ecx,0x8
  404470:	mov    rdi,rax
  404473:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404478:	jmp    40448e <_start@@Base+0x117e>
  40447a:	cmp    QWORD PTR [rbp-0x28],0x0
  40447f:	setne  al
  404482:	mov    edx,eax
  404484:	mov    rax,QWORD PTR [rbp-0x30]
  404488:	mov    BYTE PTR [rax],dl
  40448a:	mov    rax,QWORD PTR [rbp-0x10]
  40448e:	leave  
  40448f:	ret    
  404490:	push   rbp
  404491:	mov    rbp,rsp
  404494:	sub    rsp,0x30
  404498:	mov    QWORD PTR [rbp-0x8],rdi
  40449c:	mov    QWORD PTR [rbp-0x10],rsi
  4044a0:	mov    QWORD PTR [rbp-0x18],rdx
  4044a4:	mov    DWORD PTR [rbp-0x1c],ecx
  4044a7:	mov    QWORD PTR [rbp-0x28],r8
  4044ab:	mov    QWORD PTR [rbp-0x30],r9
  4044af:	cmp    DWORD PTR [rbp-0x1c],0x0
  4044b3:	je     4044d0 <_start@@Base+0x11c0>
  4044b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4044b9:	mov    rsi,QWORD PTR [rbp-0x10]
  4044bd:	mov    rax,QWORD PTR [rbp-0x8]
  4044c1:	mov    ecx,0x8
  4044c6:	mov    rdi,rax
  4044c9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4044ce:	jmp    404506 <_start@@Base+0x11f6>
  4044d0:	mov    eax,0xffffffff
  4044d5:	cmp    QWORD PTR [rbp-0x28],rax
  4044d9:	jbe    4044f6 <_start@@Base+0x11e6>
  4044db:	mov    rdx,QWORD PTR [rbp-0x18]
  4044df:	mov    rsi,QWORD PTR [rbp-0x10]
  4044e3:	mov    rax,QWORD PTR [rbp-0x8]
  4044e7:	mov    ecx,0x7
  4044ec:	mov    rdi,rax
  4044ef:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4044f4:	jmp    404506 <_start@@Base+0x11f6>
  4044f6:	mov    rax,QWORD PTR [rbp-0x28]
  4044fa:	mov    edx,eax
  4044fc:	mov    rax,QWORD PTR [rbp-0x30]
  404500:	mov    DWORD PTR [rax],edx
  404502:	mov    rax,QWORD PTR [rbp-0x10]
  404506:	leave  
  404507:	ret    
  404508:	push   rbp
  404509:	mov    rbp,rsp
  40450c:	sub    rsp,0x30
  404510:	mov    QWORD PTR [rbp-0x8],rdi
  404514:	mov    QWORD PTR [rbp-0x10],rsi
  404518:	mov    QWORD PTR [rbp-0x18],rdx
  40451c:	mov    DWORD PTR [rbp-0x1c],ecx
  40451f:	mov    QWORD PTR [rbp-0x28],r8
  404523:	mov    QWORD PTR [rbp-0x30],r9
  404527:	cmp    DWORD PTR [rbp-0x1c],0x0
  40452b:	je     404548 <_start@@Base+0x1238>
  40452d:	mov    rdx,QWORD PTR [rbp-0x18]
  404531:	mov    rsi,QWORD PTR [rbp-0x10]
  404535:	mov    rax,QWORD PTR [rbp-0x8]
  404539:	mov    ecx,0x8
  40453e:	mov    rdi,rax
  404541:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404546:	jmp    40457e <_start@@Base+0x126e>
  404548:	cmp    QWORD PTR [rbp-0x28],0xffff
  404550:	jbe    40456d <_start@@Base+0x125d>
  404552:	mov    rdx,QWORD PTR [rbp-0x18]
  404556:	mov    rsi,QWORD PTR [rbp-0x10]
  40455a:	mov    rax,QWORD PTR [rbp-0x8]
  40455e:	mov    ecx,0x7
  404563:	mov    rdi,rax
  404566:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40456b:	jmp    40457e <_start@@Base+0x126e>
  40456d:	mov    rax,QWORD PTR [rbp-0x28]
  404571:	mov    edx,eax
  404573:	mov    rax,QWORD PTR [rbp-0x30]
  404577:	mov    WORD PTR [rax],dx
  40457a:	mov    rax,QWORD PTR [rbp-0x10]
  40457e:	leave  
  40457f:	ret    
  404580:	push   rbp
  404581:	mov    rbp,rsp
  404584:	sub    rsp,0x30
  404588:	mov    QWORD PTR [rbp-0x8],rdi
  40458c:	mov    QWORD PTR [rbp-0x10],rsi
  404590:	mov    QWORD PTR [rbp-0x18],rdx
  404594:	mov    DWORD PTR [rbp-0x1c],ecx
  404597:	mov    QWORD PTR [rbp-0x28],r8
  40459b:	mov    QWORD PTR [rbp-0x30],r9
  40459f:	cmp    DWORD PTR [rbp-0x1c],0x0
  4045a3:	je     4045c0 <_start@@Base+0x12b0>
  4045a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4045a9:	mov    rsi,QWORD PTR [rbp-0x10]
  4045ad:	mov    rax,QWORD PTR [rbp-0x8]
  4045b1:	mov    ecx,0x8
  4045b6:	mov    rdi,rax
  4045b9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4045be:	jmp    4045f5 <_start@@Base+0x12e5>
  4045c0:	cmp    QWORD PTR [rbp-0x28],0xff
  4045c8:	jbe    4045e5 <_start@@Base+0x12d5>
  4045ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4045ce:	mov    rsi,QWORD PTR [rbp-0x10]
  4045d2:	mov    rax,QWORD PTR [rbp-0x8]
  4045d6:	mov    ecx,0x7
  4045db:	mov    rdi,rax
  4045de:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4045e3:	jmp    4045f5 <_start@@Base+0x12e5>
  4045e5:	mov    rax,QWORD PTR [rbp-0x28]
  4045e9:	mov    edx,eax
  4045eb:	mov    rax,QWORD PTR [rbp-0x30]
  4045ef:	mov    BYTE PTR [rax],dl
  4045f1:	mov    rax,QWORD PTR [rbp-0x10]
  4045f5:	leave  
  4045f6:	ret    
  4045f7:	push   rbp
  4045f8:	mov    rbp,rsp
  4045fb:	sub    rsp,0x30
  4045ff:	mov    QWORD PTR [rbp-0x8],rdi
  404603:	mov    QWORD PTR [rbp-0x10],rsi
  404607:	mov    QWORD PTR [rbp-0x18],rdx
  40460b:	mov    DWORD PTR [rbp-0x1c],ecx
  40460e:	mov    QWORD PTR [rbp-0x28],r8
  404612:	mov    QWORD PTR [rbp-0x30],r9
  404616:	cmp    DWORD PTR [rbp-0x1c],0x0
  40461a:	je     40465a <_start@@Base+0x134a>
  40461c:	movabs rax,0x8000000000000000
  404626:	cmp    QWORD PTR [rbp-0x28],rax
  40462a:	jbe    404647 <_start@@Base+0x1337>
  40462c:	mov    rdx,QWORD PTR [rbp-0x18]
  404630:	mov    rsi,QWORD PTR [rbp-0x10]
  404634:	mov    rax,QWORD PTR [rbp-0x8]
  404638:	mov    ecx,0x8
  40463d:	mov    rdi,rax
  404640:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404645:	jmp    40468d <_start@@Base+0x137d>
  404647:	mov    rax,QWORD PTR [rbp-0x28]
  40464b:	neg    rax
  40464e:	mov    rdx,rax
  404651:	mov    rax,QWORD PTR [rbp-0x30]
  404655:	mov    QWORD PTR [rax],rdx
  404658:	jmp    404689 <_start@@Base+0x1379>
  40465a:	mov    rax,QWORD PTR [rbp-0x28]
  40465e:	test   rax,rax
  404661:	jns    40467e <_start@@Base+0x136e>
  404663:	mov    rdx,QWORD PTR [rbp-0x18]
  404667:	mov    rsi,QWORD PTR [rbp-0x10]
  40466b:	mov    rax,QWORD PTR [rbp-0x8]
  40466f:	mov    ecx,0x7
  404674:	mov    rdi,rax
  404677:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40467c:	jmp    40468d <_start@@Base+0x137d>
  40467e:	mov    rdx,QWORD PTR [rbp-0x28]
  404682:	mov    rax,QWORD PTR [rbp-0x30]
  404686:	mov    QWORD PTR [rax],rdx
  404689:	mov    rax,QWORD PTR [rbp-0x10]
  40468d:	leave  
  40468e:	ret    
  40468f:	push   rbp
  404690:	mov    rbp,rsp
  404693:	sub    rsp,0x30
  404697:	mov    QWORD PTR [rbp-0x8],rdi
  40469b:	mov    QWORD PTR [rbp-0x10],rsi
  40469f:	mov    QWORD PTR [rbp-0x18],rdx
  4046a3:	mov    DWORD PTR [rbp-0x1c],ecx
  4046a6:	mov    QWORD PTR [rbp-0x28],r8
  4046aa:	mov    QWORD PTR [rbp-0x30],r9
  4046ae:	cmp    DWORD PTR [rbp-0x1c],0x0
  4046b2:	je     4046ea <_start@@Base+0x13da>
  4046b4:	mov    eax,0x80000000
  4046b9:	cmp    QWORD PTR [rbp-0x28],rax
  4046bd:	jbe    4046da <_start@@Base+0x13ca>
  4046bf:	mov    rdx,QWORD PTR [rbp-0x18]
  4046c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4046c7:	mov    rax,QWORD PTR [rbp-0x8]
  4046cb:	mov    ecx,0x8
  4046d0:	mov    rdi,rax
  4046d3:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4046d8:	jmp    40471f <_start@@Base+0x140f>
  4046da:	mov    rax,QWORD PTR [rbp-0x28]
  4046de:	neg    eax
  4046e0:	mov    edx,eax
  4046e2:	mov    rax,QWORD PTR [rbp-0x30]
  4046e6:	mov    DWORD PTR [rax],edx
  4046e8:	jmp    40471b <_start@@Base+0x140b>
  4046ea:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  4046f2:	jbe    40470f <_start@@Base+0x13ff>
  4046f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4046f8:	mov    rsi,QWORD PTR [rbp-0x10]
  4046fc:	mov    rax,QWORD PTR [rbp-0x8]
  404700:	mov    ecx,0x7
  404705:	mov    rdi,rax
  404708:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40470d:	jmp    40471f <_start@@Base+0x140f>
  40470f:	mov    rax,QWORD PTR [rbp-0x28]
  404713:	mov    edx,eax
  404715:	mov    rax,QWORD PTR [rbp-0x30]
  404719:	mov    DWORD PTR [rax],edx
  40471b:	mov    rax,QWORD PTR [rbp-0x10]
  40471f:	leave  
  404720:	ret    
  404721:	push   rbp
  404722:	mov    rbp,rsp
  404725:	sub    rsp,0x30
  404729:	mov    QWORD PTR [rbp-0x8],rdi
  40472d:	mov    QWORD PTR [rbp-0x10],rsi
  404731:	mov    QWORD PTR [rbp-0x18],rdx
  404735:	mov    DWORD PTR [rbp-0x1c],ecx
  404738:	mov    QWORD PTR [rbp-0x28],r8
  40473c:	mov    QWORD PTR [rbp-0x30],r9
  404740:	cmp    DWORD PTR [rbp-0x1c],0x0
  404744:	je     40477c <_start@@Base+0x146c>
  404746:	cmp    QWORD PTR [rbp-0x28],0x8000
  40474e:	jbe    40476b <_start@@Base+0x145b>
  404750:	mov    rdx,QWORD PTR [rbp-0x18]
  404754:	mov    rsi,QWORD PTR [rbp-0x10]
  404758:	mov    rax,QWORD PTR [rbp-0x8]
  40475c:	mov    ecx,0x8
  404761:	mov    rdi,rax
  404764:	call   41f09d <flatcc_json_parser_set_error@@Base>
  404769:	jmp    4047b2 <_start@@Base+0x14a2>
  40476b:	mov    rax,QWORD PTR [rbp-0x28]
  40476f:	neg    eax
  404771:	mov    edx,eax
  404773:	mov    rax,QWORD PTR [rbp-0x30]
  404777:	mov    WORD PTR [rax],dx
  40477a:	jmp    4047ae <_start@@Base+0x149e>
  40477c:	cmp    QWORD PTR [rbp-0x28],0x7fff
  404784:	jbe    4047a1 <_start@@Base+0x1491>
  404786:	mov    rdx,QWORD PTR [rbp-0x18]
  40478a:	mov    rsi,QWORD PTR [rbp-0x10]
  40478e:	mov    rax,QWORD PTR [rbp-0x8]
  404792:	mov    ecx,0x7
  404797:	mov    rdi,rax
  40479a:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40479f:	jmp    4047b2 <_start@@Base+0x14a2>
  4047a1:	mov    rax,QWORD PTR [rbp-0x28]
  4047a5:	mov    edx,eax
  4047a7:	mov    rax,QWORD PTR [rbp-0x30]
  4047ab:	mov    WORD PTR [rax],dx
  4047ae:	mov    rax,QWORD PTR [rbp-0x10]
  4047b2:	leave  
  4047b3:	ret    
  4047b4:	push   rbp
  4047b5:	mov    rbp,rsp
  4047b8:	sub    rsp,0x30
  4047bc:	mov    QWORD PTR [rbp-0x8],rdi
  4047c0:	mov    QWORD PTR [rbp-0x10],rsi
  4047c4:	mov    QWORD PTR [rbp-0x18],rdx
  4047c8:	mov    DWORD PTR [rbp-0x1c],ecx
  4047cb:	mov    QWORD PTR [rbp-0x28],r8
  4047cf:	mov    QWORD PTR [rbp-0x30],r9
  4047d3:	cmp    DWORD PTR [rbp-0x1c],0x0
  4047d7:	je     40480e <_start@@Base+0x14fe>
  4047d9:	cmp    QWORD PTR [rbp-0x28],0x80
  4047e1:	jbe    4047fe <_start@@Base+0x14ee>
  4047e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4047e7:	mov    rsi,QWORD PTR [rbp-0x10]
  4047eb:	mov    rax,QWORD PTR [rbp-0x8]
  4047ef:	mov    ecx,0x8
  4047f4:	mov    rdi,rax
  4047f7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4047fc:	jmp    404840 <_start@@Base+0x1530>
  4047fe:	mov    rax,QWORD PTR [rbp-0x28]
  404802:	neg    eax
  404804:	mov    edx,eax
  404806:	mov    rax,QWORD PTR [rbp-0x30]
  40480a:	mov    BYTE PTR [rax],dl
  40480c:	jmp    40483c <_start@@Base+0x152c>
  40480e:	cmp    QWORD PTR [rbp-0x28],0x7f
  404813:	jbe    404830 <_start@@Base+0x1520>
  404815:	mov    rdx,QWORD PTR [rbp-0x18]
  404819:	mov    rsi,QWORD PTR [rbp-0x10]
  40481d:	mov    rax,QWORD PTR [rbp-0x8]
  404821:	mov    ecx,0x7
  404826:	mov    rdi,rax
  404829:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40482e:	jmp    404840 <_start@@Base+0x1530>
  404830:	mov    rax,QWORD PTR [rbp-0x28]
  404834:	mov    edx,eax
  404836:	mov    rax,QWORD PTR [rbp-0x30]
  40483a:	mov    BYTE PTR [rax],dl
  40483c:	mov    rax,QWORD PTR [rbp-0x10]
  404840:	leave  
  404841:	ret    
  404842:	push   rbp
  404843:	mov    rbp,rsp
  404846:	mov    QWORD PTR [rbp-0x8],rdi
  40484a:	mov    QWORD PTR [rbp-0x10],rsi
  40484e:	mov    QWORD PTR [rbp-0x18],rdx
  404852:	mov    DWORD PTR [rbp-0x1c],ecx
  404855:	mov    QWORD PTR [rbp-0x28],r8
  404859:	mov    QWORD PTR [rbp-0x30],r9
  40485d:	cmp    DWORD PTR [rbp-0x1c],0x0
  404861:	je     404896 <_start@@Base+0x1586>
  404863:	mov    rax,QWORD PTR [rbp-0x28]
  404867:	test   rax,rax
  40486a:	js     404873 <_start@@Base+0x1563>
  40486c:	vcvtsi2ss xmm0,xmm0,rax
  404871:	jmp    404888 <_start@@Base+0x1578>
  404873:	mov    rdx,rax
  404876:	shr    rdx,1
  404879:	and    eax,0x1
  40487c:	or     rdx,rax
  40487f:	vcvtsi2ss xmm0,xmm0,rdx
  404884:	vaddss xmm0,xmm0,xmm0
  404888:	vmovss xmm1,DWORD PTR [rip+0x1dab0]        # 422340 <_IO_stdin_used@@Base+0x340>
  404890:	vxorps xmm0,xmm0,xmm1
  404894:	jmp    4048bb <_start@@Base+0x15ab>
  404896:	mov    rax,QWORD PTR [rbp-0x28]
  40489a:	test   rax,rax
  40489d:	js     4048a6 <_start@@Base+0x1596>
  40489f:	vcvtsi2ss xmm0,xmm0,rax
  4048a4:	jmp    4048bb <_start@@Base+0x15ab>
  4048a6:	mov    rdx,rax
  4048a9:	shr    rdx,1
  4048ac:	and    eax,0x1
  4048af:	or     rdx,rax
  4048b2:	vcvtsi2ss xmm0,xmm0,rdx
  4048b7:	vaddss xmm0,xmm0,xmm0
  4048bb:	mov    rax,QWORD PTR [rbp-0x30]
  4048bf:	vmovss DWORD PTR [rax],xmm0
  4048c3:	mov    rax,QWORD PTR [rbp-0x10]
  4048c7:	pop    rbp
  4048c8:	ret    
  4048c9:	push   rbp
  4048ca:	mov    rbp,rsp
  4048cd:	mov    QWORD PTR [rbp-0x8],rdi
  4048d1:	mov    QWORD PTR [rbp-0x10],rsi
  4048d5:	mov    QWORD PTR [rbp-0x18],rdx
  4048d9:	mov    DWORD PTR [rbp-0x1c],ecx
  4048dc:	mov    QWORD PTR [rbp-0x28],r8
  4048e0:	mov    QWORD PTR [rbp-0x30],r9
  4048e4:	cmp    DWORD PTR [rbp-0x1c],0x0
  4048e8:	je     40491d <_start@@Base+0x160d>
  4048ea:	mov    rax,QWORD PTR [rbp-0x28]
  4048ee:	test   rax,rax
  4048f1:	js     4048fa <_start@@Base+0x15ea>
  4048f3:	vcvtsi2sd xmm0,xmm0,rax
  4048f8:	jmp    40490f <_start@@Base+0x15ff>
  4048fa:	mov    rdx,rax
  4048fd:	shr    rdx,1
  404900:	and    eax,0x1
  404903:	or     rdx,rax
  404906:	vcvtsi2sd xmm0,xmm0,rdx
  40490b:	vaddsd xmm0,xmm0,xmm0
  40490f:	vmovq  xmm1,QWORD PTR [rip+0x1da39]        # 422350 <_IO_stdin_used@@Base+0x350>
  404917:	vxorpd xmm0,xmm0,xmm1
  40491b:	jmp    404942 <_start@@Base+0x1632>
  40491d:	mov    rax,QWORD PTR [rbp-0x28]
  404921:	test   rax,rax
  404924:	js     40492d <_start@@Base+0x161d>
  404926:	vcvtsi2sd xmm0,xmm0,rax
  40492b:	jmp    404942 <_start@@Base+0x1632>
  40492d:	mov    rdx,rax
  404930:	shr    rdx,1
  404933:	and    eax,0x1
  404936:	or     rdx,rax
  404939:	vcvtsi2sd xmm0,xmm0,rdx
  40493e:	vaddsd xmm0,xmm0,xmm0
  404942:	mov    rax,QWORD PTR [rbp-0x30]
  404946:	vmovsd QWORD PTR [rax],xmm0
  40494a:	mov    rax,QWORD PTR [rbp-0x10]
  40494e:	pop    rbp
  40494f:	ret    
  404950:	push   rbp
  404951:	mov    rbp,rsp
  404954:	sub    rsp,0x20
  404958:	mov    QWORD PTR [rbp-0x8],rdi
  40495c:	mov    QWORD PTR [rbp-0x10],rsi
  404960:	mov    QWORD PTR [rbp-0x18],rdx
  404964:	mov    rax,QWORD PTR [rbp-0x18]
  404968:	sub    rax,QWORD PTR [rbp-0x10]
  40496c:	cmp    rax,0x3
  404970:	jle    404998 <_start@@Base+0x1688>
  404972:	mov    rax,QWORD PTR [rbp-0x10]
  404976:	mov    edx,0x4
  40497b:	lea    rsi,[rip+0x1d762]        # 4220e4 <_IO_stdin_used@@Base+0xe4>
  404982:	mov    rdi,rax
  404985:	call   403260 <memcmp@plt>
  40498a:	test   eax,eax
  40498c:	jne    404998 <_start@@Base+0x1688>
  40498e:	mov    rax,QWORD PTR [rbp-0x10]
  404992:	add    rax,0x4
  404996:	jmp    4049b1 <_start@@Base+0x16a1>
  404998:	mov    rdx,QWORD PTR [rbp-0x18]
  40499c:	mov    rsi,QWORD PTR [rbp-0x10]
  4049a0:	mov    rax,QWORD PTR [rbp-0x8]
  4049a4:	mov    ecx,0x1a
  4049a9:	mov    rdi,rax
  4049ac:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4049b1:	leave  
  4049b2:	ret    
  4049b3:	push   rbp
  4049b4:	mov    rbp,rsp
  4049b7:	sub    rsp,0x40
  4049bb:	mov    QWORD PTR [rbp-0x28],rdi
  4049bf:	mov    QWORD PTR [rbp-0x30],rsi
  4049c3:	mov    QWORD PTR [rbp-0x38],rdx
  4049c7:	mov    QWORD PTR [rbp-0x40],rcx
  4049cb:	mov    rax,QWORD PTR fs:0x28
  4049d4:	mov    QWORD PTR [rbp-0x8],rax
  4049d8:	xor    eax,eax
  4049da:	mov    QWORD PTR [rbp-0x18],0x0
  4049e2:	mov    DWORD PTR [rbp-0x1c],0x0
  4049e9:	mov    rax,QWORD PTR [rbp-0x30]
  4049ed:	mov    QWORD PTR [rbp-0x10],rax
  4049f1:	mov    rax,QWORD PTR [rbp-0x40]
  4049f5:	mov    QWORD PTR [rax],0x0
  4049fc:	mov    rax,QWORD PTR [rbp-0x30]
  404a00:	cmp    rax,QWORD PTR [rbp-0x38]
  404a04:	jne    404a0c <_start@@Base+0x16fc>
  404a06:	mov    rax,QWORD PTR [rbp-0x30]
  404a0a:	jmp    404a64 <_start@@Base+0x1754>
  404a0c:	lea    rdi,[rbp-0x18]
  404a10:	lea    rcx,[rbp-0x1c]
  404a14:	mov    rdx,QWORD PTR [rbp-0x38]
  404a18:	mov    rsi,QWORD PTR [rbp-0x30]
  404a1c:	mov    rax,QWORD PTR [rbp-0x28]
  404a20:	mov    r8,rdi
  404a23:	mov    rdi,rax
  404a26:	call   420765 <flatcc_json_parser_integer@@Base>
  404a2b:	mov    QWORD PTR [rbp-0x30],rax
  404a2f:	mov    rax,QWORD PTR [rbp-0x30]
  404a33:	cmp    rax,QWORD PTR [rbp-0x10]
  404a37:	je     404a60 <_start@@Base+0x1750>
  404a39:	mov    rdi,QWORD PTR [rbp-0x18]
  404a3d:	mov    ecx,DWORD PTR [rbp-0x1c]
  404a40:	mov    r8,QWORD PTR [rbp-0x40]
  404a44:	mov    rdx,QWORD PTR [rbp-0x38]
  404a48:	mov    rsi,QWORD PTR [rbp-0x30]
  404a4c:	mov    rax,QWORD PTR [rbp-0x28]
  404a50:	mov    r9,r8
  404a53:	mov    r8,rdi
  404a56:	mov    rdi,rax
  404a59:	call   4043e9 <_start@@Base+0x10d9>
  404a5e:	jmp    404a64 <_start@@Base+0x1754>
  404a60:	mov    rax,QWORD PTR [rbp-0x30]
  404a64:	mov    rdx,QWORD PTR [rbp-0x8]
  404a68:	xor    rdx,QWORD PTR fs:0x28
  404a71:	je     404a78 <_start@@Base+0x1768>
  404a73:	call   403200 <__stack_chk_fail@plt>
  404a78:	leave  
  404a79:	ret    
  404a7a:	push   rbp
  404a7b:	mov    rbp,rsp
  404a7e:	sub    rsp,0x40
  404a82:	mov    QWORD PTR [rbp-0x28],rdi
  404a86:	mov    QWORD PTR [rbp-0x30],rsi
  404a8a:	mov    QWORD PTR [rbp-0x38],rdx
  404a8e:	mov    QWORD PTR [rbp-0x40],rcx
  404a92:	mov    rax,QWORD PTR fs:0x28
  404a9b:	mov    QWORD PTR [rbp-0x8],rax
  404a9f:	xor    eax,eax
  404aa1:	mov    QWORD PTR [rbp-0x18],0x0
  404aa9:	mov    DWORD PTR [rbp-0x1c],0x0
  404ab0:	mov    rax,QWORD PTR [rbp-0x30]
  404ab4:	mov    QWORD PTR [rbp-0x10],rax
  404ab8:	mov    rax,QWORD PTR [rbp-0x40]
  404abc:	mov    DWORD PTR [rax],0x0
  404ac2:	mov    rax,QWORD PTR [rbp-0x30]
  404ac6:	cmp    rax,QWORD PTR [rbp-0x38]
  404aca:	jne    404ad2 <_start@@Base+0x17c2>
  404acc:	mov    rax,QWORD PTR [rbp-0x30]
  404ad0:	jmp    404b2a <_start@@Base+0x181a>
  404ad2:	lea    rdi,[rbp-0x18]
  404ad6:	lea    rcx,[rbp-0x1c]
  404ada:	mov    rdx,QWORD PTR [rbp-0x38]
  404ade:	mov    rsi,QWORD PTR [rbp-0x30]
  404ae2:	mov    rax,QWORD PTR [rbp-0x28]
  404ae6:	mov    r8,rdi
  404ae9:	mov    rdi,rax
  404aec:	call   420765 <flatcc_json_parser_integer@@Base>
  404af1:	mov    QWORD PTR [rbp-0x30],rax
  404af5:	mov    rax,QWORD PTR [rbp-0x30]
  404af9:	cmp    rax,QWORD PTR [rbp-0x10]
  404afd:	je     404b26 <_start@@Base+0x1816>
  404aff:	mov    rdi,QWORD PTR [rbp-0x18]
  404b03:	mov    ecx,DWORD PTR [rbp-0x1c]
  404b06:	mov    r8,QWORD PTR [rbp-0x40]
  404b0a:	mov    rdx,QWORD PTR [rbp-0x38]
  404b0e:	mov    rsi,QWORD PTR [rbp-0x30]
  404b12:	mov    rax,QWORD PTR [rbp-0x28]
  404b16:	mov    r9,r8
  404b19:	mov    r8,rdi
  404b1c:	mov    rdi,rax
  404b1f:	call   404490 <_start@@Base+0x1180>
  404b24:	jmp    404b2a <_start@@Base+0x181a>
  404b26:	mov    rax,QWORD PTR [rbp-0x30]
  404b2a:	mov    rdx,QWORD PTR [rbp-0x8]
  404b2e:	xor    rdx,QWORD PTR fs:0x28
  404b37:	je     404b3e <_start@@Base+0x182e>
  404b39:	call   403200 <__stack_chk_fail@plt>
  404b3e:	leave  
  404b3f:	ret    
  404b40:	push   rbp
  404b41:	mov    rbp,rsp
  404b44:	sub    rsp,0x40
  404b48:	mov    QWORD PTR [rbp-0x28],rdi
  404b4c:	mov    QWORD PTR [rbp-0x30],rsi
  404b50:	mov    QWORD PTR [rbp-0x38],rdx
  404b54:	mov    QWORD PTR [rbp-0x40],rcx
  404b58:	mov    rax,QWORD PTR fs:0x28
  404b61:	mov    QWORD PTR [rbp-0x8],rax
  404b65:	xor    eax,eax
  404b67:	mov    QWORD PTR [rbp-0x18],0x0
  404b6f:	mov    DWORD PTR [rbp-0x1c],0x0
  404b76:	mov    rax,QWORD PTR [rbp-0x30]
  404b7a:	mov    QWORD PTR [rbp-0x10],rax
  404b7e:	mov    rax,QWORD PTR [rbp-0x40]
  404b82:	mov    WORD PTR [rax],0x0
  404b87:	mov    rax,QWORD PTR [rbp-0x30]
  404b8b:	cmp    rax,QWORD PTR [rbp-0x38]
  404b8f:	jne    404b97 <_start@@Base+0x1887>
  404b91:	mov    rax,QWORD PTR [rbp-0x30]
  404b95:	jmp    404bef <_start@@Base+0x18df>
  404b97:	lea    rdi,[rbp-0x18]
  404b9b:	lea    rcx,[rbp-0x1c]
  404b9f:	mov    rdx,QWORD PTR [rbp-0x38]
  404ba3:	mov    rsi,QWORD PTR [rbp-0x30]
  404ba7:	mov    rax,QWORD PTR [rbp-0x28]
  404bab:	mov    r8,rdi
  404bae:	mov    rdi,rax
  404bb1:	call   420765 <flatcc_json_parser_integer@@Base>
  404bb6:	mov    QWORD PTR [rbp-0x30],rax
  404bba:	mov    rax,QWORD PTR [rbp-0x30]
  404bbe:	cmp    rax,QWORD PTR [rbp-0x10]
  404bc2:	je     404beb <_start@@Base+0x18db>
  404bc4:	mov    rdi,QWORD PTR [rbp-0x18]
  404bc8:	mov    ecx,DWORD PTR [rbp-0x1c]
  404bcb:	mov    r8,QWORD PTR [rbp-0x40]
  404bcf:	mov    rdx,QWORD PTR [rbp-0x38]
  404bd3:	mov    rsi,QWORD PTR [rbp-0x30]
  404bd7:	mov    rax,QWORD PTR [rbp-0x28]
  404bdb:	mov    r9,r8
  404bde:	mov    r8,rdi
  404be1:	mov    rdi,rax
  404be4:	call   404508 <_start@@Base+0x11f8>
  404be9:	jmp    404bef <_start@@Base+0x18df>
  404beb:	mov    rax,QWORD PTR [rbp-0x30]
  404bef:	mov    rdx,QWORD PTR [rbp-0x8]
  404bf3:	xor    rdx,QWORD PTR fs:0x28
  404bfc:	je     404c03 <_start@@Base+0x18f3>
  404bfe:	call   403200 <__stack_chk_fail@plt>
  404c03:	leave  
  404c04:	ret    
  404c05:	push   rbp
  404c06:	mov    rbp,rsp
  404c09:	sub    rsp,0x40
  404c0d:	mov    QWORD PTR [rbp-0x28],rdi
  404c11:	mov    QWORD PTR [rbp-0x30],rsi
  404c15:	mov    QWORD PTR [rbp-0x38],rdx
  404c19:	mov    QWORD PTR [rbp-0x40],rcx
  404c1d:	mov    rax,QWORD PTR fs:0x28
  404c26:	mov    QWORD PTR [rbp-0x8],rax
  404c2a:	xor    eax,eax
  404c2c:	mov    QWORD PTR [rbp-0x18],0x0
  404c34:	mov    DWORD PTR [rbp-0x1c],0x0
  404c3b:	mov    rax,QWORD PTR [rbp-0x30]
  404c3f:	mov    QWORD PTR [rbp-0x10],rax
  404c43:	mov    rax,QWORD PTR [rbp-0x40]
  404c47:	mov    BYTE PTR [rax],0x0
  404c4a:	mov    rax,QWORD PTR [rbp-0x30]
  404c4e:	cmp    rax,QWORD PTR [rbp-0x38]
  404c52:	jne    404c5a <_start@@Base+0x194a>
  404c54:	mov    rax,QWORD PTR [rbp-0x30]
  404c58:	jmp    404cb2 <_start@@Base+0x19a2>
  404c5a:	lea    rdi,[rbp-0x18]
  404c5e:	lea    rcx,[rbp-0x1c]
  404c62:	mov    rdx,QWORD PTR [rbp-0x38]
  404c66:	mov    rsi,QWORD PTR [rbp-0x30]
  404c6a:	mov    rax,QWORD PTR [rbp-0x28]
  404c6e:	mov    r8,rdi
  404c71:	mov    rdi,rax
  404c74:	call   420765 <flatcc_json_parser_integer@@Base>
  404c79:	mov    QWORD PTR [rbp-0x30],rax
  404c7d:	mov    rax,QWORD PTR [rbp-0x30]
  404c81:	cmp    rax,QWORD PTR [rbp-0x10]
  404c85:	je     404cae <_start@@Base+0x199e>
  404c87:	mov    rdi,QWORD PTR [rbp-0x18]
  404c8b:	mov    ecx,DWORD PTR [rbp-0x1c]
  404c8e:	mov    r8,QWORD PTR [rbp-0x40]
  404c92:	mov    rdx,QWORD PTR [rbp-0x38]
  404c96:	mov    rsi,QWORD PTR [rbp-0x30]
  404c9a:	mov    rax,QWORD PTR [rbp-0x28]
  404c9e:	mov    r9,r8
  404ca1:	mov    r8,rdi
  404ca4:	mov    rdi,rax
  404ca7:	call   404580 <_start@@Base+0x1270>
  404cac:	jmp    404cb2 <_start@@Base+0x19a2>
  404cae:	mov    rax,QWORD PTR [rbp-0x30]
  404cb2:	mov    rdx,QWORD PTR [rbp-0x8]
  404cb6:	xor    rdx,QWORD PTR fs:0x28
  404cbf:	je     404cc6 <_start@@Base+0x19b6>
  404cc1:	call   403200 <__stack_chk_fail@plt>
  404cc6:	leave  
  404cc7:	ret    
  404cc8:	push   rbp
  404cc9:	mov    rbp,rsp
  404ccc:	sub    rsp,0x40
  404cd0:	mov    QWORD PTR [rbp-0x28],rdi
  404cd4:	mov    QWORD PTR [rbp-0x30],rsi
  404cd8:	mov    QWORD PTR [rbp-0x38],rdx
  404cdc:	mov    QWORD PTR [rbp-0x40],rcx
  404ce0:	mov    rax,QWORD PTR fs:0x28
  404ce9:	mov    QWORD PTR [rbp-0x8],rax
  404ced:	xor    eax,eax
  404cef:	mov    QWORD PTR [rbp-0x18],0x0
  404cf7:	mov    DWORD PTR [rbp-0x1c],0x0
  404cfe:	mov    rax,QWORD PTR [rbp-0x30]
  404d02:	mov    QWORD PTR [rbp-0x10],rax
  404d06:	mov    rax,QWORD PTR [rbp-0x40]
  404d0a:	mov    QWORD PTR [rax],0x0
  404d11:	mov    rax,QWORD PTR [rbp-0x30]
  404d15:	cmp    rax,QWORD PTR [rbp-0x38]
  404d19:	jne    404d21 <_start@@Base+0x1a11>
  404d1b:	mov    rax,QWORD PTR [rbp-0x30]
  404d1f:	jmp    404d79 <_start@@Base+0x1a69>
  404d21:	lea    rdi,[rbp-0x18]
  404d25:	lea    rcx,[rbp-0x1c]
  404d29:	mov    rdx,QWORD PTR [rbp-0x38]
  404d2d:	mov    rsi,QWORD PTR [rbp-0x30]
  404d31:	mov    rax,QWORD PTR [rbp-0x28]
  404d35:	mov    r8,rdi
  404d38:	mov    rdi,rax
  404d3b:	call   420765 <flatcc_json_parser_integer@@Base>
  404d40:	mov    QWORD PTR [rbp-0x30],rax
  404d44:	mov    rax,QWORD PTR [rbp-0x30]
  404d48:	cmp    rax,QWORD PTR [rbp-0x10]
  404d4c:	je     404d75 <_start@@Base+0x1a65>
  404d4e:	mov    rdi,QWORD PTR [rbp-0x18]
  404d52:	mov    ecx,DWORD PTR [rbp-0x1c]
  404d55:	mov    r8,QWORD PTR [rbp-0x40]
  404d59:	mov    rdx,QWORD PTR [rbp-0x38]
  404d5d:	mov    rsi,QWORD PTR [rbp-0x30]
  404d61:	mov    rax,QWORD PTR [rbp-0x28]
  404d65:	mov    r9,r8
  404d68:	mov    r8,rdi
  404d6b:	mov    rdi,rax
  404d6e:	call   4045f7 <_start@@Base+0x12e7>
  404d73:	jmp    404d79 <_start@@Base+0x1a69>
  404d75:	mov    rax,QWORD PTR [rbp-0x30]
  404d79:	mov    rdx,QWORD PTR [rbp-0x8]
  404d7d:	xor    rdx,QWORD PTR fs:0x28
  404d86:	je     404d8d <_start@@Base+0x1a7d>
  404d88:	call   403200 <__stack_chk_fail@plt>
  404d8d:	leave  
  404d8e:	ret    
  404d8f:	push   rbp
  404d90:	mov    rbp,rsp
  404d93:	sub    rsp,0x40
  404d97:	mov    QWORD PTR [rbp-0x28],rdi
  404d9b:	mov    QWORD PTR [rbp-0x30],rsi
  404d9f:	mov    QWORD PTR [rbp-0x38],rdx
  404da3:	mov    QWORD PTR [rbp-0x40],rcx
  404da7:	mov    rax,QWORD PTR fs:0x28
  404db0:	mov    QWORD PTR [rbp-0x8],rax
  404db4:	xor    eax,eax
  404db6:	mov    QWORD PTR [rbp-0x18],0x0
  404dbe:	mov    DWORD PTR [rbp-0x1c],0x0
  404dc5:	mov    rax,QWORD PTR [rbp-0x30]
  404dc9:	mov    QWORD PTR [rbp-0x10],rax
  404dcd:	mov    rax,QWORD PTR [rbp-0x40]
  404dd1:	mov    DWORD PTR [rax],0x0
  404dd7:	mov    rax,QWORD PTR [rbp-0x30]
  404ddb:	cmp    rax,QWORD PTR [rbp-0x38]
  404ddf:	jne    404de7 <_start@@Base+0x1ad7>
  404de1:	mov    rax,QWORD PTR [rbp-0x30]
  404de5:	jmp    404e3f <_start@@Base+0x1b2f>
  404de7:	lea    rdi,[rbp-0x18]
  404deb:	lea    rcx,[rbp-0x1c]
  404def:	mov    rdx,QWORD PTR [rbp-0x38]
  404df3:	mov    rsi,QWORD PTR [rbp-0x30]
  404df7:	mov    rax,QWORD PTR [rbp-0x28]
  404dfb:	mov    r8,rdi
  404dfe:	mov    rdi,rax
  404e01:	call   420765 <flatcc_json_parser_integer@@Base>
  404e06:	mov    QWORD PTR [rbp-0x30],rax
  404e0a:	mov    rax,QWORD PTR [rbp-0x30]
  404e0e:	cmp    rax,QWORD PTR [rbp-0x10]
  404e12:	je     404e3b <_start@@Base+0x1b2b>
  404e14:	mov    rdi,QWORD PTR [rbp-0x18]
  404e18:	mov    ecx,DWORD PTR [rbp-0x1c]
  404e1b:	mov    r8,QWORD PTR [rbp-0x40]
  404e1f:	mov    rdx,QWORD PTR [rbp-0x38]
  404e23:	mov    rsi,QWORD PTR [rbp-0x30]
  404e27:	mov    rax,QWORD PTR [rbp-0x28]
  404e2b:	mov    r9,r8
  404e2e:	mov    r8,rdi
  404e31:	mov    rdi,rax
  404e34:	call   40468f <_start@@Base+0x137f>
  404e39:	jmp    404e3f <_start@@Base+0x1b2f>
  404e3b:	mov    rax,QWORD PTR [rbp-0x30]
  404e3f:	mov    rdx,QWORD PTR [rbp-0x8]
  404e43:	xor    rdx,QWORD PTR fs:0x28
  404e4c:	je     404e53 <_start@@Base+0x1b43>
  404e4e:	call   403200 <__stack_chk_fail@plt>
  404e53:	leave  
  404e54:	ret    
  404e55:	push   rbp
  404e56:	mov    rbp,rsp
  404e59:	sub    rsp,0x40
  404e5d:	mov    QWORD PTR [rbp-0x28],rdi
  404e61:	mov    QWORD PTR [rbp-0x30],rsi
  404e65:	mov    QWORD PTR [rbp-0x38],rdx
  404e69:	mov    QWORD PTR [rbp-0x40],rcx
  404e6d:	mov    rax,QWORD PTR fs:0x28
  404e76:	mov    QWORD PTR [rbp-0x8],rax
  404e7a:	xor    eax,eax
  404e7c:	mov    QWORD PTR [rbp-0x18],0x0
  404e84:	mov    DWORD PTR [rbp-0x1c],0x0
  404e8b:	mov    rax,QWORD PTR [rbp-0x30]
  404e8f:	mov    QWORD PTR [rbp-0x10],rax
  404e93:	mov    rax,QWORD PTR [rbp-0x40]
  404e97:	mov    WORD PTR [rax],0x0
  404e9c:	mov    rax,QWORD PTR [rbp-0x30]
  404ea0:	cmp    rax,QWORD PTR [rbp-0x38]
  404ea4:	jne    404eac <_start@@Base+0x1b9c>
  404ea6:	mov    rax,QWORD PTR [rbp-0x30]
  404eaa:	jmp    404f04 <_start@@Base+0x1bf4>
  404eac:	lea    rdi,[rbp-0x18]
  404eb0:	lea    rcx,[rbp-0x1c]
  404eb4:	mov    rdx,QWORD PTR [rbp-0x38]
  404eb8:	mov    rsi,QWORD PTR [rbp-0x30]
  404ebc:	mov    rax,QWORD PTR [rbp-0x28]
  404ec0:	mov    r8,rdi
  404ec3:	mov    rdi,rax
  404ec6:	call   420765 <flatcc_json_parser_integer@@Base>
  404ecb:	mov    QWORD PTR [rbp-0x30],rax
  404ecf:	mov    rax,QWORD PTR [rbp-0x30]
  404ed3:	cmp    rax,QWORD PTR [rbp-0x10]
  404ed7:	je     404f00 <_start@@Base+0x1bf0>
  404ed9:	mov    rdi,QWORD PTR [rbp-0x18]
  404edd:	mov    ecx,DWORD PTR [rbp-0x1c]
  404ee0:	mov    r8,QWORD PTR [rbp-0x40]
  404ee4:	mov    rdx,QWORD PTR [rbp-0x38]
  404ee8:	mov    rsi,QWORD PTR [rbp-0x30]
  404eec:	mov    rax,QWORD PTR [rbp-0x28]
  404ef0:	mov    r9,r8
  404ef3:	mov    r8,rdi
  404ef6:	mov    rdi,rax
  404ef9:	call   404721 <_start@@Base+0x1411>
  404efe:	jmp    404f04 <_start@@Base+0x1bf4>
  404f00:	mov    rax,QWORD PTR [rbp-0x30]
  404f04:	mov    rdx,QWORD PTR [rbp-0x8]
  404f08:	xor    rdx,QWORD PTR fs:0x28
  404f11:	je     404f18 <_start@@Base+0x1c08>
  404f13:	call   403200 <__stack_chk_fail@plt>
  404f18:	leave  
  404f19:	ret    
  404f1a:	push   rbp
  404f1b:	mov    rbp,rsp
  404f1e:	sub    rsp,0x40
  404f22:	mov    QWORD PTR [rbp-0x28],rdi
  404f26:	mov    QWORD PTR [rbp-0x30],rsi
  404f2a:	mov    QWORD PTR [rbp-0x38],rdx
  404f2e:	mov    QWORD PTR [rbp-0x40],rcx
  404f32:	mov    rax,QWORD PTR fs:0x28
  404f3b:	mov    QWORD PTR [rbp-0x8],rax
  404f3f:	xor    eax,eax
  404f41:	mov    QWORD PTR [rbp-0x18],0x0
  404f49:	mov    DWORD PTR [rbp-0x1c],0x0
  404f50:	mov    rax,QWORD PTR [rbp-0x30]
  404f54:	mov    QWORD PTR [rbp-0x10],rax
  404f58:	mov    rax,QWORD PTR [rbp-0x40]
  404f5c:	mov    BYTE PTR [rax],0x0
  404f5f:	mov    rax,QWORD PTR [rbp-0x30]
  404f63:	cmp    rax,QWORD PTR [rbp-0x38]
  404f67:	jne    404f6f <_start@@Base+0x1c5f>
  404f69:	mov    rax,QWORD PTR [rbp-0x30]
  404f6d:	jmp    404fc7 <_start@@Base+0x1cb7>
  404f6f:	lea    rdi,[rbp-0x18]
  404f73:	lea    rcx,[rbp-0x1c]
  404f77:	mov    rdx,QWORD PTR [rbp-0x38]
  404f7b:	mov    rsi,QWORD PTR [rbp-0x30]
  404f7f:	mov    rax,QWORD PTR [rbp-0x28]
  404f83:	mov    r8,rdi
  404f86:	mov    rdi,rax
  404f89:	call   420765 <flatcc_json_parser_integer@@Base>
  404f8e:	mov    QWORD PTR [rbp-0x30],rax
  404f92:	mov    rax,QWORD PTR [rbp-0x30]
  404f96:	cmp    rax,QWORD PTR [rbp-0x10]
  404f9a:	je     404fc3 <_start@@Base+0x1cb3>
  404f9c:	mov    rdi,QWORD PTR [rbp-0x18]
  404fa0:	mov    ecx,DWORD PTR [rbp-0x1c]
  404fa3:	mov    r8,QWORD PTR [rbp-0x40]
  404fa7:	mov    rdx,QWORD PTR [rbp-0x38]
  404fab:	mov    rsi,QWORD PTR [rbp-0x30]
  404faf:	mov    rax,QWORD PTR [rbp-0x28]
  404fb3:	mov    r9,r8
  404fb6:	mov    r8,rdi
  404fb9:	mov    rdi,rax
  404fbc:	call   4047b4 <_start@@Base+0x14a4>
  404fc1:	jmp    404fc7 <_start@@Base+0x1cb7>
  404fc3:	mov    rax,QWORD PTR [rbp-0x30]
  404fc7:	mov    rdx,QWORD PTR [rbp-0x8]
  404fcb:	xor    rdx,QWORD PTR fs:0x28
  404fd4:	je     404fdb <_start@@Base+0x1ccb>
  404fd6:	call   403200 <__stack_chk_fail@plt>
  404fdb:	leave  
  404fdc:	ret    
  404fdd:	push   rbp
  404fde:	mov    rbp,rsp
  404fe1:	sub    rsp,0x40
  404fe5:	mov    QWORD PTR [rbp-0x28],rdi
  404fe9:	mov    QWORD PTR [rbp-0x30],rsi
  404fed:	mov    QWORD PTR [rbp-0x38],rdx
  404ff1:	mov    QWORD PTR [rbp-0x40],rcx
  404ff5:	mov    rax,QWORD PTR fs:0x28
  404ffe:	mov    QWORD PTR [rbp-0x8],rax
  405002:	xor    eax,eax
  405004:	mov    rax,QWORD PTR [rbp-0x30]
  405008:	mov    QWORD PTR [rbp-0x10],rax
  40500c:	mov    rax,QWORD PTR [rbp-0x38]
  405010:	sub    rax,QWORD PTR [rbp-0x30]
  405014:	cmp    rax,0x3
  405018:	jle    405047 <_start@@Base+0x1d37>
  40501a:	mov    rax,QWORD PTR [rbp-0x30]
  40501e:	mov    edx,0x4
  405023:	lea    rsi,[rip+0x1d0bf]        # 4220e9 <_IO_stdin_used@@Base+0xe9>
  40502a:	mov    rdi,rax
  40502d:	call   403260 <memcmp@plt>
  405032:	test   eax,eax
  405034:	jne    405047 <_start@@Base+0x1d37>
  405036:	mov    rax,QWORD PTR [rbp-0x40]
  40503a:	mov    BYTE PTR [rax],0x1
  40503d:	mov    rax,QWORD PTR [rbp-0x10]
  405041:	add    rax,0x4
  405045:	jmp    4050b3 <_start@@Base+0x1da3>
  405047:	mov    rax,QWORD PTR [rbp-0x38]
  40504b:	sub    rax,QWORD PTR [rbp-0x30]
  40504f:	cmp    rax,0x4
  405053:	jle    405082 <_start@@Base+0x1d72>
  405055:	mov    rax,QWORD PTR [rbp-0x30]
  405059:	mov    edx,0x5
  40505e:	lea    rsi,[rip+0x1d089]        # 4220ee <_IO_stdin_used@@Base+0xee>
  405065:	mov    rdi,rax
  405068:	call   403260 <memcmp@plt>
  40506d:	test   eax,eax
  40506f:	jne    405082 <_start@@Base+0x1d72>
  405071:	mov    rax,QWORD PTR [rbp-0x40]
  405075:	mov    BYTE PTR [rax],0x0
  405078:	mov    rax,QWORD PTR [rbp-0x10]
  40507c:	add    rax,0x5
  405080:	jmp    4050b3 <_start@@Base+0x1da3>
  405082:	lea    rcx,[rbp-0x11]
  405086:	mov    rdx,QWORD PTR [rbp-0x38]
  40508a:	mov    rsi,QWORD PTR [rbp-0x30]
  40508e:	mov    rax,QWORD PTR [rbp-0x28]
  405092:	mov    rdi,rax
  405095:	call   404c05 <_start@@Base+0x18f5>
  40509a:	mov    QWORD PTR [rbp-0x30],rax
  40509e:	movzx  eax,BYTE PTR [rbp-0x11]
  4050a2:	test   al,al
  4050a4:	setne  al
  4050a7:	mov    edx,eax
  4050a9:	mov    rax,QWORD PTR [rbp-0x40]
  4050ad:	mov    BYTE PTR [rax],dl
  4050af:	mov    rax,QWORD PTR [rbp-0x30]
  4050b3:	mov    rcx,QWORD PTR [rbp-0x8]
  4050b7:	xor    rcx,QWORD PTR fs:0x28
  4050c0:	je     4050c7 <_start@@Base+0x1db7>
  4050c2:	call   403200 <__stack_chk_fail@plt>
  4050c7:	leave  
  4050c8:	ret    
  4050c9:	endbr64 
  4050cd:	push   rbp
  4050ce:	mov    rbp,rsp
  4050d1:	sub    rsp,0x70
  4050d5:	mov    QWORD PTR [rbp-0x48],rdi
  4050d9:	mov    QWORD PTR [rbp-0x50],rsi
  4050dd:	mov    QWORD PTR [rbp-0x58],rdx
  4050e1:	mov    QWORD PTR [rbp-0x60],rcx
  4050e5:	mov    QWORD PTR [rbp-0x68],r8
  4050e9:	mov    rax,QWORD PTR fs:0x28
  4050f2:	mov    QWORD PTR [rbp-0x8],rax
  4050f6:	xor    eax,eax
  4050f8:	mov    QWORD PTR [rbp-0x28],0x0
  405100:	mov    DWORD PTR [rbp-0x2c],0x0
  405107:	mov    rax,QWORD PTR [rbp-0x68]
  40510b:	mov    QWORD PTR [rax],0x0
  405112:	mov    rdx,QWORD PTR [rbp-0x58]
  405116:	mov    rcx,QWORD PTR [rbp-0x50]
  40511a:	mov    rax,QWORD PTR [rbp-0x48]
  40511e:	mov    rsi,rcx
  405121:	mov    rdi,rax
  405124:	call   403e7b <_start@@Base+0xb6b>
  405129:	mov    QWORD PTR [rbp-0x50],rax
  40512d:	mov    rax,QWORD PTR [rbp-0x50]
  405131:	cmp    rax,QWORD PTR [rbp-0x58]
  405135:	jne    405140 <_start@@Base+0x1e30>
  405137:	mov    rax,QWORD PTR [rbp-0x50]
  40513b:	jmp    405253 <_start@@Base+0x1f43>
  405140:	mov    rax,QWORD PTR [rbp-0x60]
  405144:	mov    QWORD PTR [rbp-0x18],rax
  405148:	mov    rax,QWORD PTR [rbp-0x18]
  40514c:	mov    rax,QWORD PTR [rax]
  40514f:	mov    rdx,QWORD PTR [rbp-0x50]
  405153:	mov    QWORD PTR [rbp-0x10],rdx
  405157:	lea    r9,[rbp-0x30]
  40515b:	lea    r8,[rbp-0x20]
  40515f:	lea    rcx,[rbp-0x34]
  405163:	mov    rdx,QWORD PTR [rbp-0x58]
  405167:	mov    rsi,QWORD PTR [rbp-0x10]
  40516b:	mov    rdi,QWORD PTR [rbp-0x48]
  40516f:	call   rax
  405171:	mov    QWORD PTR [rbp-0x50],rax
  405175:	mov    rax,QWORD PTR [rbp-0x50]
  405179:	cmp    rax,QWORD PTR [rbp-0x58]
  40517d:	jne    405188 <_start@@Base+0x1e78>
  40517f:	mov    rax,QWORD PTR [rbp-0x50]
  405183:	jmp    405253 <_start@@Base+0x1f43>
  405188:	mov    rax,QWORD PTR [rbp-0x50]
  40518c:	cmp    rax,QWORD PTR [rbp-0x10]
  405190:	jne    4051a3 <_start@@Base+0x1e93>
  405192:	add    QWORD PTR [rbp-0x18],0x8
  405197:	mov    rax,QWORD PTR [rbp-0x18]
  40519b:	mov    rax,QWORD PTR [rax]
  40519e:	test   rax,rax
  4051a1:	jne    405148 <_start@@Base+0x1e38>
  4051a3:	mov    rax,QWORD PTR [rbp-0x10]
  4051a7:	cmp    rax,QWORD PTR [rbp-0x50]
  4051ab:	jne    4051cb <_start@@Base+0x1ebb>
  4051ad:	mov    rdx,QWORD PTR [rbp-0x58]
  4051b1:	mov    rsi,QWORD PTR [rbp-0x50]
  4051b5:	mov    rax,QWORD PTR [rbp-0x48]
  4051b9:	mov    ecx,0x17
  4051be:	mov    rdi,rax
  4051c1:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4051c6:	jmp    405253 <_start@@Base+0x1f43>
  4051cb:	mov    eax,DWORD PTR [rbp-0x2c]
  4051ce:	lea    edx,[rax+0x1]
  4051d1:	mov    DWORD PTR [rbp-0x2c],edx
  4051d4:	test   eax,eax
  4051d6:	je     4051fe <_start@@Base+0x1eee>
  4051d8:	mov    rax,QWORD PTR [rbp-0x48]
  4051dc:	mov    eax,DWORD PTR [rax+0x14]
  4051df:	test   eax,eax
  4051e1:	je     4051fe <_start@@Base+0x1eee>
  4051e3:	mov    rdx,QWORD PTR [rbp-0x58]
  4051e7:	mov    rsi,QWORD PTR [rbp-0x50]
  4051eb:	mov    rax,QWORD PTR [rbp-0x48]
  4051ef:	mov    ecx,0xe
  4051f4:	mov    rdi,rax
  4051f7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4051fc:	jmp    405253 <_start@@Base+0x1f43>
  4051fe:	mov    rdi,QWORD PTR [rbp-0x20]
  405202:	mov    ecx,DWORD PTR [rbp-0x34]
  405205:	lea    r8,[rbp-0x28]
  405209:	mov    rdx,QWORD PTR [rbp-0x58]
  40520d:	mov    rsi,QWORD PTR [rbp-0x50]
  405211:	mov    rax,QWORD PTR [rbp-0x48]
  405215:	mov    r9,r8
  405218:	mov    r8,rdi
  40521b:	mov    rdi,rax
  40521e:	call   4043e9 <_start@@Base+0x10d9>
  405223:	cmp    QWORD PTR [rbp-0x58],rax
  405227:	jne    40522f <_start@@Base+0x1f1f>
  405229:	mov    rax,QWORD PTR [rbp-0x58]
  40522d:	jmp    405253 <_start@@Base+0x1f43>
  40522f:	mov    rax,QWORD PTR [rbp-0x68]
  405233:	mov    rdx,QWORD PTR [rax]
  405236:	mov    rax,QWORD PTR [rbp-0x28]
  40523a:	add    rdx,rax
  40523d:	mov    rax,QWORD PTR [rbp-0x68]
  405241:	mov    QWORD PTR [rax],rdx
  405244:	mov    eax,DWORD PTR [rbp-0x30]
  405247:	test   eax,eax
  405249:	jne    405140 <_start@@Base+0x1e30>
  40524f:	mov    rax,QWORD PTR [rbp-0x50]
  405253:	mov    rdi,QWORD PTR [rbp-0x8]
  405257:	xor    rdi,QWORD PTR fs:0x28
  405260:	je     405267 <_start@@Base+0x1f57>
  405262:	call   403200 <__stack_chk_fail@plt>
  405267:	leave  
  405268:	ret    
  405269:	endbr64 
  40526d:	push   rbp
  40526e:	mov    rbp,rsp
  405271:	sub    rsp,0x60
  405275:	mov    QWORD PTR [rbp-0x38],rdi
  405279:	mov    QWORD PTR [rbp-0x40],rsi
  40527d:	mov    QWORD PTR [rbp-0x48],rdx
  405281:	mov    QWORD PTR [rbp-0x50],rcx
  405285:	mov    QWORD PTR [rbp-0x58],r8
  405289:	mov    rax,QWORD PTR fs:0x28
  405292:	mov    QWORD PTR [rbp-0x8],rax
  405296:	xor    eax,eax
  405298:	mov    DWORD PTR [rbp-0x30],0x0
  40529f:	mov    DWORD PTR [rbp-0x24],0x0
  4052a6:	mov    rax,QWORD PTR [rbp-0x58]
  4052aa:	mov    DWORD PTR [rax],0x0
  4052b0:	mov    rdx,QWORD PTR [rbp-0x48]
  4052b4:	mov    rcx,QWORD PTR [rbp-0x40]
  4052b8:	mov    rax,QWORD PTR [rbp-0x38]
  4052bc:	mov    rsi,rcx
  4052bf:	mov    rdi,rax
  4052c2:	call   403e7b <_start@@Base+0xb6b>
  4052c7:	mov    QWORD PTR [rbp-0x40],rax
  4052cb:	mov    rax,QWORD PTR [rbp-0x40]
  4052cf:	cmp    rax,QWORD PTR [rbp-0x48]
  4052d3:	jne    4052de <_start@@Base+0x1fce>
  4052d5:	mov    rax,QWORD PTR [rbp-0x40]
  4052d9:	jmp    4053ed <_start@@Base+0x20dd>
  4052de:	mov    rax,QWORD PTR [rbp-0x50]
  4052e2:	mov    QWORD PTR [rbp-0x18],rax
  4052e6:	mov    rax,QWORD PTR [rbp-0x18]
  4052ea:	mov    rax,QWORD PTR [rax]
  4052ed:	mov    rdx,QWORD PTR [rbp-0x40]
  4052f1:	mov    QWORD PTR [rbp-0x10],rdx
  4052f5:	lea    r9,[rbp-0x28]
  4052f9:	lea    r8,[rbp-0x20]
  4052fd:	lea    rcx,[rbp-0x2c]
  405301:	mov    rdx,QWORD PTR [rbp-0x48]
  405305:	mov    rsi,QWORD PTR [rbp-0x10]
  405309:	mov    rdi,QWORD PTR [rbp-0x38]
  40530d:	call   rax
  40530f:	mov    QWORD PTR [rbp-0x40],rax
  405313:	mov    rax,QWORD PTR [rbp-0x40]
  405317:	cmp    rax,QWORD PTR [rbp-0x48]
  40531b:	jne    405326 <_start@@Base+0x2016>
  40531d:	mov    rax,QWORD PTR [rbp-0x40]
  405321:	jmp    4053ed <_start@@Base+0x20dd>
  405326:	mov    rax,QWORD PTR [rbp-0x40]
  40532a:	cmp    rax,QWORD PTR [rbp-0x10]
  40532e:	jne    405341 <_start@@Base+0x2031>
  405330:	add    QWORD PTR [rbp-0x18],0x8
  405335:	mov    rax,QWORD PTR [rbp-0x18]
  405339:	mov    rax,QWORD PTR [rax]
  40533c:	test   rax,rax
  40533f:	jne    4052e6 <_start@@Base+0x1fd6>
  405341:	mov    rax,QWORD PTR [rbp-0x10]
  405345:	cmp    rax,QWORD PTR [rbp-0x40]
  405349:	jne    405369 <_start@@Base+0x2059>
  40534b:	mov    rdx,QWORD PTR [rbp-0x48]
  40534f:	mov    rsi,QWORD PTR [rbp-0x40]
  405353:	mov    rax,QWORD PTR [rbp-0x38]
  405357:	mov    ecx,0x17
  40535c:	mov    rdi,rax
  40535f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405364:	jmp    4053ed <_start@@Base+0x20dd>
  405369:	mov    eax,DWORD PTR [rbp-0x24]
  40536c:	lea    edx,[rax+0x1]
  40536f:	mov    DWORD PTR [rbp-0x24],edx
  405372:	test   eax,eax
  405374:	je     40539c <_start@@Base+0x208c>
  405376:	mov    rax,QWORD PTR [rbp-0x38]
  40537a:	mov    eax,DWORD PTR [rax+0x14]
  40537d:	test   eax,eax
  40537f:	je     40539c <_start@@Base+0x208c>
  405381:	mov    rdx,QWORD PTR [rbp-0x48]
  405385:	mov    rsi,QWORD PTR [rbp-0x40]
  405389:	mov    rax,QWORD PTR [rbp-0x38]
  40538d:	mov    ecx,0xe
  405392:	mov    rdi,rax
  405395:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40539a:	jmp    4053ed <_start@@Base+0x20dd>
  40539c:	mov    rdi,QWORD PTR [rbp-0x20]
  4053a0:	mov    ecx,DWORD PTR [rbp-0x2c]
  4053a3:	lea    r8,[rbp-0x30]
  4053a7:	mov    rdx,QWORD PTR [rbp-0x48]
  4053ab:	mov    rsi,QWORD PTR [rbp-0x40]
  4053af:	mov    rax,QWORD PTR [rbp-0x38]
  4053b3:	mov    r9,r8
  4053b6:	mov    r8,rdi
  4053b9:	mov    rdi,rax
  4053bc:	call   404490 <_start@@Base+0x1180>
  4053c1:	cmp    QWORD PTR [rbp-0x48],rax
  4053c5:	jne    4053cd <_start@@Base+0x20bd>
  4053c7:	mov    rax,QWORD PTR [rbp-0x48]
  4053cb:	jmp    4053ed <_start@@Base+0x20dd>
  4053cd:	mov    rax,QWORD PTR [rbp-0x58]
  4053d1:	mov    edx,DWORD PTR [rax]
  4053d3:	mov    eax,DWORD PTR [rbp-0x30]
  4053d6:	add    edx,eax
  4053d8:	mov    rax,QWORD PTR [rbp-0x58]
  4053dc:	mov    DWORD PTR [rax],edx
  4053de:	mov    eax,DWORD PTR [rbp-0x28]
  4053e1:	test   eax,eax
  4053e3:	jne    4052de <_start@@Base+0x1fce>
  4053e9:	mov    rax,QWORD PTR [rbp-0x40]
  4053ed:	mov    rdi,QWORD PTR [rbp-0x8]
  4053f1:	xor    rdi,QWORD PTR fs:0x28
  4053fa:	je     405401 <_start@@Base+0x20f1>
  4053fc:	call   403200 <__stack_chk_fail@plt>
  405401:	leave  
  405402:	ret    
  405403:	endbr64 
  405407:	push   rbp
  405408:	mov    rbp,rsp
  40540b:	sub    rsp,0x60
  40540f:	mov    QWORD PTR [rbp-0x38],rdi
  405413:	mov    QWORD PTR [rbp-0x40],rsi
  405417:	mov    QWORD PTR [rbp-0x48],rdx
  40541b:	mov    QWORD PTR [rbp-0x50],rcx
  40541f:	mov    QWORD PTR [rbp-0x58],r8
  405423:	mov    rax,QWORD PTR fs:0x28
  40542c:	mov    QWORD PTR [rbp-0x8],rax
  405430:	xor    eax,eax
  405432:	mov    WORD PTR [rbp-0x2e],0x0
  405438:	mov    DWORD PTR [rbp-0x24],0x0
  40543f:	mov    rax,QWORD PTR [rbp-0x58]
  405443:	mov    WORD PTR [rax],0x0
  405448:	mov    rdx,QWORD PTR [rbp-0x48]
  40544c:	mov    rcx,QWORD PTR [rbp-0x40]
  405450:	mov    rax,QWORD PTR [rbp-0x38]
  405454:	mov    rsi,rcx
  405457:	mov    rdi,rax
  40545a:	call   403e7b <_start@@Base+0xb6b>
  40545f:	mov    QWORD PTR [rbp-0x40],rax
  405463:	mov    rax,QWORD PTR [rbp-0x40]
  405467:	cmp    rax,QWORD PTR [rbp-0x48]
  40546b:	jne    405476 <_start@@Base+0x2166>
  40546d:	mov    rax,QWORD PTR [rbp-0x40]
  405471:	jmp    405588 <_start@@Base+0x2278>
  405476:	mov    rax,QWORD PTR [rbp-0x50]
  40547a:	mov    QWORD PTR [rbp-0x18],rax
  40547e:	mov    rax,QWORD PTR [rbp-0x18]
  405482:	mov    rax,QWORD PTR [rax]
  405485:	mov    rdx,QWORD PTR [rbp-0x40]
  405489:	mov    QWORD PTR [rbp-0x10],rdx
  40548d:	lea    r9,[rbp-0x28]
  405491:	lea    r8,[rbp-0x20]
  405495:	lea    rcx,[rbp-0x2c]
  405499:	mov    rdx,QWORD PTR [rbp-0x48]
  40549d:	mov    rsi,QWORD PTR [rbp-0x10]
  4054a1:	mov    rdi,QWORD PTR [rbp-0x38]
  4054a5:	call   rax
  4054a7:	mov    QWORD PTR [rbp-0x40],rax
  4054ab:	mov    rax,QWORD PTR [rbp-0x40]
  4054af:	cmp    rax,QWORD PTR [rbp-0x48]
  4054b3:	jne    4054be <_start@@Base+0x21ae>
  4054b5:	mov    rax,QWORD PTR [rbp-0x40]
  4054b9:	jmp    405588 <_start@@Base+0x2278>
  4054be:	mov    rax,QWORD PTR [rbp-0x40]
  4054c2:	cmp    rax,QWORD PTR [rbp-0x10]
  4054c6:	jne    4054d9 <_start@@Base+0x21c9>
  4054c8:	add    QWORD PTR [rbp-0x18],0x8
  4054cd:	mov    rax,QWORD PTR [rbp-0x18]
  4054d1:	mov    rax,QWORD PTR [rax]
  4054d4:	test   rax,rax
  4054d7:	jne    40547e <_start@@Base+0x216e>
  4054d9:	mov    rax,QWORD PTR [rbp-0x10]
  4054dd:	cmp    rax,QWORD PTR [rbp-0x40]
  4054e1:	jne    405501 <_start@@Base+0x21f1>
  4054e3:	mov    rdx,QWORD PTR [rbp-0x48]
  4054e7:	mov    rsi,QWORD PTR [rbp-0x40]
  4054eb:	mov    rax,QWORD PTR [rbp-0x38]
  4054ef:	mov    ecx,0x17
  4054f4:	mov    rdi,rax
  4054f7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4054fc:	jmp    405588 <_start@@Base+0x2278>
  405501:	mov    eax,DWORD PTR [rbp-0x24]
  405504:	lea    edx,[rax+0x1]
  405507:	mov    DWORD PTR [rbp-0x24],edx
  40550a:	test   eax,eax
  40550c:	je     405534 <_start@@Base+0x2224>
  40550e:	mov    rax,QWORD PTR [rbp-0x38]
  405512:	mov    eax,DWORD PTR [rax+0x14]
  405515:	test   eax,eax
  405517:	je     405534 <_start@@Base+0x2224>
  405519:	mov    rdx,QWORD PTR [rbp-0x48]
  40551d:	mov    rsi,QWORD PTR [rbp-0x40]
  405521:	mov    rax,QWORD PTR [rbp-0x38]
  405525:	mov    ecx,0xe
  40552a:	mov    rdi,rax
  40552d:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405532:	jmp    405588 <_start@@Base+0x2278>
  405534:	mov    rdi,QWORD PTR [rbp-0x20]
  405538:	mov    ecx,DWORD PTR [rbp-0x2c]
  40553b:	lea    r8,[rbp-0x2e]
  40553f:	mov    rdx,QWORD PTR [rbp-0x48]
  405543:	mov    rsi,QWORD PTR [rbp-0x40]
  405547:	mov    rax,QWORD PTR [rbp-0x38]
  40554b:	mov    r9,r8
  40554e:	mov    r8,rdi
  405551:	mov    rdi,rax
  405554:	call   404508 <_start@@Base+0x11f8>
  405559:	cmp    QWORD PTR [rbp-0x48],rax
  40555d:	jne    405565 <_start@@Base+0x2255>
  40555f:	mov    rax,QWORD PTR [rbp-0x48]
  405563:	jmp    405588 <_start@@Base+0x2278>
  405565:	mov    rax,QWORD PTR [rbp-0x58]
  405569:	movzx  edx,WORD PTR [rax]
  40556c:	movzx  eax,WORD PTR [rbp-0x2e]
  405570:	add    eax,edx
  405572:	mov    rdx,QWORD PTR [rbp-0x58]
  405576:	mov    WORD PTR [rdx],ax
  405579:	mov    eax,DWORD PTR [rbp-0x28]
  40557c:	test   eax,eax
  40557e:	jne    405476 <_start@@Base+0x2166>
  405584:	mov    rax,QWORD PTR [rbp-0x40]
  405588:	mov    rdi,QWORD PTR [rbp-0x8]
  40558c:	xor    rdi,QWORD PTR fs:0x28
  405595:	je     40559c <_start@@Base+0x228c>
  405597:	call   403200 <__stack_chk_fail@plt>
  40559c:	leave  
  40559d:	ret    
  40559e:	endbr64 
  4055a2:	push   rbp
  4055a3:	mov    rbp,rsp
  4055a6:	sub    rsp,0x60
  4055aa:	mov    QWORD PTR [rbp-0x38],rdi
  4055ae:	mov    QWORD PTR [rbp-0x40],rsi
  4055b2:	mov    QWORD PTR [rbp-0x48],rdx
  4055b6:	mov    QWORD PTR [rbp-0x50],rcx
  4055ba:	mov    QWORD PTR [rbp-0x58],r8
  4055be:	mov    rax,QWORD PTR fs:0x28
  4055c7:	mov    QWORD PTR [rbp-0x8],rax
  4055cb:	xor    eax,eax
  4055cd:	mov    BYTE PTR [rbp-0x2d],0x0
  4055d1:	mov    DWORD PTR [rbp-0x24],0x0
  4055d8:	mov    rax,QWORD PTR [rbp-0x58]
  4055dc:	mov    BYTE PTR [rax],0x0
  4055df:	mov    rdx,QWORD PTR [rbp-0x48]
  4055e3:	mov    rcx,QWORD PTR [rbp-0x40]
  4055e7:	mov    rax,QWORD PTR [rbp-0x38]
  4055eb:	mov    rsi,rcx
  4055ee:	mov    rdi,rax
  4055f1:	call   403e7b <_start@@Base+0xb6b>
  4055f6:	mov    QWORD PTR [rbp-0x40],rax
  4055fa:	mov    rax,QWORD PTR [rbp-0x40]
  4055fe:	cmp    rax,QWORD PTR [rbp-0x48]
  405602:	jne    40560d <_start@@Base+0x22fd>
  405604:	mov    rax,QWORD PTR [rbp-0x40]
  405608:	jmp    40571e <_start@@Base+0x240e>
  40560d:	mov    rax,QWORD PTR [rbp-0x50]
  405611:	mov    QWORD PTR [rbp-0x18],rax
  405615:	mov    rax,QWORD PTR [rbp-0x18]
  405619:	mov    rax,QWORD PTR [rax]
  40561c:	mov    rdx,QWORD PTR [rbp-0x40]
  405620:	mov    QWORD PTR [rbp-0x10],rdx
  405624:	lea    r9,[rbp-0x28]
  405628:	lea    r8,[rbp-0x20]
  40562c:	lea    rcx,[rbp-0x2c]
  405630:	mov    rdx,QWORD PTR [rbp-0x48]
  405634:	mov    rsi,QWORD PTR [rbp-0x10]
  405638:	mov    rdi,QWORD PTR [rbp-0x38]
  40563c:	call   rax
  40563e:	mov    QWORD PTR [rbp-0x40],rax
  405642:	mov    rax,QWORD PTR [rbp-0x40]
  405646:	cmp    rax,QWORD PTR [rbp-0x48]
  40564a:	jne    405655 <_start@@Base+0x2345>
  40564c:	mov    rax,QWORD PTR [rbp-0x40]
  405650:	jmp    40571e <_start@@Base+0x240e>
  405655:	mov    rax,QWORD PTR [rbp-0x40]
  405659:	cmp    rax,QWORD PTR [rbp-0x10]
  40565d:	jne    405670 <_start@@Base+0x2360>
  40565f:	add    QWORD PTR [rbp-0x18],0x8
  405664:	mov    rax,QWORD PTR [rbp-0x18]
  405668:	mov    rax,QWORD PTR [rax]
  40566b:	test   rax,rax
  40566e:	jne    405615 <_start@@Base+0x2305>
  405670:	mov    rax,QWORD PTR [rbp-0x10]
  405674:	cmp    rax,QWORD PTR [rbp-0x40]
  405678:	jne    405698 <_start@@Base+0x2388>
  40567a:	mov    rdx,QWORD PTR [rbp-0x48]
  40567e:	mov    rsi,QWORD PTR [rbp-0x40]
  405682:	mov    rax,QWORD PTR [rbp-0x38]
  405686:	mov    ecx,0x17
  40568b:	mov    rdi,rax
  40568e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405693:	jmp    40571e <_start@@Base+0x240e>
  405698:	mov    eax,DWORD PTR [rbp-0x24]
  40569b:	lea    edx,[rax+0x1]
  40569e:	mov    DWORD PTR [rbp-0x24],edx
  4056a1:	test   eax,eax
  4056a3:	je     4056cb <_start@@Base+0x23bb>
  4056a5:	mov    rax,QWORD PTR [rbp-0x38]
  4056a9:	mov    eax,DWORD PTR [rax+0x14]
  4056ac:	test   eax,eax
  4056ae:	je     4056cb <_start@@Base+0x23bb>
  4056b0:	mov    rdx,QWORD PTR [rbp-0x48]
  4056b4:	mov    rsi,QWORD PTR [rbp-0x40]
  4056b8:	mov    rax,QWORD PTR [rbp-0x38]
  4056bc:	mov    ecx,0xe
  4056c1:	mov    rdi,rax
  4056c4:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4056c9:	jmp    40571e <_start@@Base+0x240e>
  4056cb:	mov    rdi,QWORD PTR [rbp-0x20]
  4056cf:	mov    ecx,DWORD PTR [rbp-0x2c]
  4056d2:	lea    r8,[rbp-0x2d]
  4056d6:	mov    rdx,QWORD PTR [rbp-0x48]
  4056da:	mov    rsi,QWORD PTR [rbp-0x40]
  4056de:	mov    rax,QWORD PTR [rbp-0x38]
  4056e2:	mov    r9,r8
  4056e5:	mov    r8,rdi
  4056e8:	mov    rdi,rax
  4056eb:	call   404580 <_start@@Base+0x1270>
  4056f0:	cmp    QWORD PTR [rbp-0x48],rax
  4056f4:	jne    4056fc <_start@@Base+0x23ec>
  4056f6:	mov    rax,QWORD PTR [rbp-0x48]
  4056fa:	jmp    40571e <_start@@Base+0x240e>
  4056fc:	mov    rax,QWORD PTR [rbp-0x58]
  405700:	movzx  edx,BYTE PTR [rax]
  405703:	movzx  eax,BYTE PTR [rbp-0x2d]
  405707:	add    eax,edx
  405709:	mov    rdx,QWORD PTR [rbp-0x58]
  40570d:	mov    BYTE PTR [rdx],al
  40570f:	mov    eax,DWORD PTR [rbp-0x28]
  405712:	test   eax,eax
  405714:	jne    40560d <_start@@Base+0x22fd>
  40571a:	mov    rax,QWORD PTR [rbp-0x40]
  40571e:	mov    rdi,QWORD PTR [rbp-0x8]
  405722:	xor    rdi,QWORD PTR fs:0x28
  40572b:	je     405732 <_start@@Base+0x2422>
  40572d:	call   403200 <__stack_chk_fail@plt>
  405732:	leave  
  405733:	ret    
  405734:	endbr64 
  405738:	push   rbp
  405739:	mov    rbp,rsp
  40573c:	sub    rsp,0x70
  405740:	mov    QWORD PTR [rbp-0x48],rdi
  405744:	mov    QWORD PTR [rbp-0x50],rsi
  405748:	mov    QWORD PTR [rbp-0x58],rdx
  40574c:	mov    QWORD PTR [rbp-0x60],rcx
  405750:	mov    QWORD PTR [rbp-0x68],r8
  405754:	mov    rax,QWORD PTR fs:0x28
  40575d:	mov    QWORD PTR [rbp-0x8],rax
  405761:	xor    eax,eax
  405763:	mov    QWORD PTR [rbp-0x28],0x0
  40576b:	mov    DWORD PTR [rbp-0x2c],0x0
  405772:	mov    rax,QWORD PTR [rbp-0x68]
  405776:	mov    QWORD PTR [rax],0x0
  40577d:	mov    rdx,QWORD PTR [rbp-0x58]
  405781:	mov    rcx,QWORD PTR [rbp-0x50]
  405785:	mov    rax,QWORD PTR [rbp-0x48]
  405789:	mov    rsi,rcx
  40578c:	mov    rdi,rax
  40578f:	call   403e7b <_start@@Base+0xb6b>
  405794:	mov    QWORD PTR [rbp-0x50],rax
  405798:	mov    rax,QWORD PTR [rbp-0x50]
  40579c:	cmp    rax,QWORD PTR [rbp-0x58]
  4057a0:	jne    4057ab <_start@@Base+0x249b>
  4057a2:	mov    rax,QWORD PTR [rbp-0x50]
  4057a6:	jmp    4058be <_start@@Base+0x25ae>
  4057ab:	mov    rax,QWORD PTR [rbp-0x60]
  4057af:	mov    QWORD PTR [rbp-0x18],rax
  4057b3:	mov    rax,QWORD PTR [rbp-0x18]
  4057b7:	mov    rax,QWORD PTR [rax]
  4057ba:	mov    rdx,QWORD PTR [rbp-0x50]
  4057be:	mov    QWORD PTR [rbp-0x10],rdx
  4057c2:	lea    r9,[rbp-0x30]
  4057c6:	lea    r8,[rbp-0x20]
  4057ca:	lea    rcx,[rbp-0x34]
  4057ce:	mov    rdx,QWORD PTR [rbp-0x58]
  4057d2:	mov    rsi,QWORD PTR [rbp-0x10]
  4057d6:	mov    rdi,QWORD PTR [rbp-0x48]
  4057da:	call   rax
  4057dc:	mov    QWORD PTR [rbp-0x50],rax
  4057e0:	mov    rax,QWORD PTR [rbp-0x50]
  4057e4:	cmp    rax,QWORD PTR [rbp-0x58]
  4057e8:	jne    4057f3 <_start@@Base+0x24e3>
  4057ea:	mov    rax,QWORD PTR [rbp-0x50]
  4057ee:	jmp    4058be <_start@@Base+0x25ae>
  4057f3:	mov    rax,QWORD PTR [rbp-0x50]
  4057f7:	cmp    rax,QWORD PTR [rbp-0x10]
  4057fb:	jne    40580e <_start@@Base+0x24fe>
  4057fd:	add    QWORD PTR [rbp-0x18],0x8
  405802:	mov    rax,QWORD PTR [rbp-0x18]
  405806:	mov    rax,QWORD PTR [rax]
  405809:	test   rax,rax
  40580c:	jne    4057b3 <_start@@Base+0x24a3>
  40580e:	mov    rax,QWORD PTR [rbp-0x10]
  405812:	cmp    rax,QWORD PTR [rbp-0x50]
  405816:	jne    405836 <_start@@Base+0x2526>
  405818:	mov    rdx,QWORD PTR [rbp-0x58]
  40581c:	mov    rsi,QWORD PTR [rbp-0x50]
  405820:	mov    rax,QWORD PTR [rbp-0x48]
  405824:	mov    ecx,0x17
  405829:	mov    rdi,rax
  40582c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405831:	jmp    4058be <_start@@Base+0x25ae>
  405836:	mov    eax,DWORD PTR [rbp-0x2c]
  405839:	lea    edx,[rax+0x1]
  40583c:	mov    DWORD PTR [rbp-0x2c],edx
  40583f:	test   eax,eax
  405841:	je     405869 <_start@@Base+0x2559>
  405843:	mov    rax,QWORD PTR [rbp-0x48]
  405847:	mov    eax,DWORD PTR [rax+0x14]
  40584a:	test   eax,eax
  40584c:	je     405869 <_start@@Base+0x2559>
  40584e:	mov    rdx,QWORD PTR [rbp-0x58]
  405852:	mov    rsi,QWORD PTR [rbp-0x50]
  405856:	mov    rax,QWORD PTR [rbp-0x48]
  40585a:	mov    ecx,0xe
  40585f:	mov    rdi,rax
  405862:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405867:	jmp    4058be <_start@@Base+0x25ae>
  405869:	mov    rdi,QWORD PTR [rbp-0x20]
  40586d:	mov    ecx,DWORD PTR [rbp-0x34]
  405870:	lea    r8,[rbp-0x28]
  405874:	mov    rdx,QWORD PTR [rbp-0x58]
  405878:	mov    rsi,QWORD PTR [rbp-0x50]
  40587c:	mov    rax,QWORD PTR [rbp-0x48]
  405880:	mov    r9,r8
  405883:	mov    r8,rdi
  405886:	mov    rdi,rax
  405889:	call   4045f7 <_start@@Base+0x12e7>
  40588e:	cmp    QWORD PTR [rbp-0x58],rax
  405892:	jne    40589a <_start@@Base+0x258a>
  405894:	mov    rax,QWORD PTR [rbp-0x58]
  405898:	jmp    4058be <_start@@Base+0x25ae>
  40589a:	mov    rax,QWORD PTR [rbp-0x68]
  40589e:	mov    rdx,QWORD PTR [rax]
  4058a1:	mov    rax,QWORD PTR [rbp-0x28]
  4058a5:	add    rdx,rax
  4058a8:	mov    rax,QWORD PTR [rbp-0x68]
  4058ac:	mov    QWORD PTR [rax],rdx
  4058af:	mov    eax,DWORD PTR [rbp-0x30]
  4058b2:	test   eax,eax
  4058b4:	jne    4057ab <_start@@Base+0x249b>
  4058ba:	mov    rax,QWORD PTR [rbp-0x50]
  4058be:	mov    rdi,QWORD PTR [rbp-0x8]
  4058c2:	xor    rdi,QWORD PTR fs:0x28
  4058cb:	je     4058d2 <_start@@Base+0x25c2>
  4058cd:	call   403200 <__stack_chk_fail@plt>
  4058d2:	leave  
  4058d3:	ret    
  4058d4:	endbr64 
  4058d8:	push   rbp
  4058d9:	mov    rbp,rsp
  4058dc:	sub    rsp,0x60
  4058e0:	mov    QWORD PTR [rbp-0x38],rdi
  4058e4:	mov    QWORD PTR [rbp-0x40],rsi
  4058e8:	mov    QWORD PTR [rbp-0x48],rdx
  4058ec:	mov    QWORD PTR [rbp-0x50],rcx
  4058f0:	mov    QWORD PTR [rbp-0x58],r8
  4058f4:	mov    rax,QWORD PTR fs:0x28
  4058fd:	mov    QWORD PTR [rbp-0x8],rax
  405901:	xor    eax,eax
  405903:	mov    DWORD PTR [rbp-0x30],0x0
  40590a:	mov    DWORD PTR [rbp-0x24],0x0
  405911:	mov    rax,QWORD PTR [rbp-0x58]
  405915:	mov    DWORD PTR [rax],0x0
  40591b:	mov    rdx,QWORD PTR [rbp-0x48]
  40591f:	mov    rcx,QWORD PTR [rbp-0x40]
  405923:	mov    rax,QWORD PTR [rbp-0x38]
  405927:	mov    rsi,rcx
  40592a:	mov    rdi,rax
  40592d:	call   403e7b <_start@@Base+0xb6b>
  405932:	mov    QWORD PTR [rbp-0x40],rax
  405936:	mov    rax,QWORD PTR [rbp-0x40]
  40593a:	cmp    rax,QWORD PTR [rbp-0x48]
  40593e:	jne    405949 <_start@@Base+0x2639>
  405940:	mov    rax,QWORD PTR [rbp-0x40]
  405944:	jmp    405a58 <_start@@Base+0x2748>
  405949:	mov    rax,QWORD PTR [rbp-0x50]
  40594d:	mov    QWORD PTR [rbp-0x18],rax
  405951:	mov    rax,QWORD PTR [rbp-0x18]
  405955:	mov    rax,QWORD PTR [rax]
  405958:	mov    rdx,QWORD PTR [rbp-0x40]
  40595c:	mov    QWORD PTR [rbp-0x10],rdx
  405960:	lea    r9,[rbp-0x28]
  405964:	lea    r8,[rbp-0x20]
  405968:	lea    rcx,[rbp-0x2c]
  40596c:	mov    rdx,QWORD PTR [rbp-0x48]
  405970:	mov    rsi,QWORD PTR [rbp-0x10]
  405974:	mov    rdi,QWORD PTR [rbp-0x38]
  405978:	call   rax
  40597a:	mov    QWORD PTR [rbp-0x40],rax
  40597e:	mov    rax,QWORD PTR [rbp-0x40]
  405982:	cmp    rax,QWORD PTR [rbp-0x48]
  405986:	jne    405991 <_start@@Base+0x2681>
  405988:	mov    rax,QWORD PTR [rbp-0x40]
  40598c:	jmp    405a58 <_start@@Base+0x2748>
  405991:	mov    rax,QWORD PTR [rbp-0x40]
  405995:	cmp    rax,QWORD PTR [rbp-0x10]
  405999:	jne    4059ac <_start@@Base+0x269c>
  40599b:	add    QWORD PTR [rbp-0x18],0x8
  4059a0:	mov    rax,QWORD PTR [rbp-0x18]
  4059a4:	mov    rax,QWORD PTR [rax]
  4059a7:	test   rax,rax
  4059aa:	jne    405951 <_start@@Base+0x2641>
  4059ac:	mov    rax,QWORD PTR [rbp-0x10]
  4059b0:	cmp    rax,QWORD PTR [rbp-0x40]
  4059b4:	jne    4059d4 <_start@@Base+0x26c4>
  4059b6:	mov    rdx,QWORD PTR [rbp-0x48]
  4059ba:	mov    rsi,QWORD PTR [rbp-0x40]
  4059be:	mov    rax,QWORD PTR [rbp-0x38]
  4059c2:	mov    ecx,0x17
  4059c7:	mov    rdi,rax
  4059ca:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4059cf:	jmp    405a58 <_start@@Base+0x2748>
  4059d4:	mov    eax,DWORD PTR [rbp-0x24]
  4059d7:	lea    edx,[rax+0x1]
  4059da:	mov    DWORD PTR [rbp-0x24],edx
  4059dd:	test   eax,eax
  4059df:	je     405a07 <_start@@Base+0x26f7>
  4059e1:	mov    rax,QWORD PTR [rbp-0x38]
  4059e5:	mov    eax,DWORD PTR [rax+0x14]
  4059e8:	test   eax,eax
  4059ea:	je     405a07 <_start@@Base+0x26f7>
  4059ec:	mov    rdx,QWORD PTR [rbp-0x48]
  4059f0:	mov    rsi,QWORD PTR [rbp-0x40]
  4059f4:	mov    rax,QWORD PTR [rbp-0x38]
  4059f8:	mov    ecx,0xe
  4059fd:	mov    rdi,rax
  405a00:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405a05:	jmp    405a58 <_start@@Base+0x2748>
  405a07:	mov    rdi,QWORD PTR [rbp-0x20]
  405a0b:	mov    ecx,DWORD PTR [rbp-0x2c]
  405a0e:	lea    r8,[rbp-0x30]
  405a12:	mov    rdx,QWORD PTR [rbp-0x48]
  405a16:	mov    rsi,QWORD PTR [rbp-0x40]
  405a1a:	mov    rax,QWORD PTR [rbp-0x38]
  405a1e:	mov    r9,r8
  405a21:	mov    r8,rdi
  405a24:	mov    rdi,rax
  405a27:	call   40468f <_start@@Base+0x137f>
  405a2c:	cmp    QWORD PTR [rbp-0x48],rax
  405a30:	jne    405a38 <_start@@Base+0x2728>
  405a32:	mov    rax,QWORD PTR [rbp-0x48]
  405a36:	jmp    405a58 <_start@@Base+0x2748>
  405a38:	mov    rax,QWORD PTR [rbp-0x58]
  405a3c:	mov    edx,DWORD PTR [rax]
  405a3e:	mov    eax,DWORD PTR [rbp-0x30]
  405a41:	add    edx,eax
  405a43:	mov    rax,QWORD PTR [rbp-0x58]
  405a47:	mov    DWORD PTR [rax],edx
  405a49:	mov    eax,DWORD PTR [rbp-0x28]
  405a4c:	test   eax,eax
  405a4e:	jne    405949 <_start@@Base+0x2639>
  405a54:	mov    rax,QWORD PTR [rbp-0x40]
  405a58:	mov    rdi,QWORD PTR [rbp-0x8]
  405a5c:	xor    rdi,QWORD PTR fs:0x28
  405a65:	je     405a6c <_start@@Base+0x275c>
  405a67:	call   403200 <__stack_chk_fail@plt>
  405a6c:	leave  
  405a6d:	ret    
  405a6e:	endbr64 
  405a72:	push   rbp
  405a73:	mov    rbp,rsp
  405a76:	sub    rsp,0x60
  405a7a:	mov    QWORD PTR [rbp-0x38],rdi
  405a7e:	mov    QWORD PTR [rbp-0x40],rsi
  405a82:	mov    QWORD PTR [rbp-0x48],rdx
  405a86:	mov    QWORD PTR [rbp-0x50],rcx
  405a8a:	mov    QWORD PTR [rbp-0x58],r8
  405a8e:	mov    rax,QWORD PTR fs:0x28
  405a97:	mov    QWORD PTR [rbp-0x8],rax
  405a9b:	xor    eax,eax
  405a9d:	mov    WORD PTR [rbp-0x2e],0x0
  405aa3:	mov    DWORD PTR [rbp-0x24],0x0
  405aaa:	mov    rax,QWORD PTR [rbp-0x58]
  405aae:	mov    WORD PTR [rax],0x0
  405ab3:	mov    rdx,QWORD PTR [rbp-0x48]
  405ab7:	mov    rcx,QWORD PTR [rbp-0x40]
  405abb:	mov    rax,QWORD PTR [rbp-0x38]
  405abf:	mov    rsi,rcx
  405ac2:	mov    rdi,rax
  405ac5:	call   403e7b <_start@@Base+0xb6b>
  405aca:	mov    QWORD PTR [rbp-0x40],rax
  405ace:	mov    rax,QWORD PTR [rbp-0x40]
  405ad2:	cmp    rax,QWORD PTR [rbp-0x48]
  405ad6:	jne    405ae1 <_start@@Base+0x27d1>
  405ad8:	mov    rax,QWORD PTR [rbp-0x40]
  405adc:	jmp    405bf7 <_start@@Base+0x28e7>
  405ae1:	mov    rax,QWORD PTR [rbp-0x50]
  405ae5:	mov    QWORD PTR [rbp-0x18],rax
  405ae9:	mov    rax,QWORD PTR [rbp-0x18]
  405aed:	mov    rax,QWORD PTR [rax]
  405af0:	mov    rdx,QWORD PTR [rbp-0x40]
  405af4:	mov    QWORD PTR [rbp-0x10],rdx
  405af8:	lea    r9,[rbp-0x28]
  405afc:	lea    r8,[rbp-0x20]
  405b00:	lea    rcx,[rbp-0x2c]
  405b04:	mov    rdx,QWORD PTR [rbp-0x48]
  405b08:	mov    rsi,QWORD PTR [rbp-0x10]
  405b0c:	mov    rdi,QWORD PTR [rbp-0x38]
  405b10:	call   rax
  405b12:	mov    QWORD PTR [rbp-0x40],rax
  405b16:	mov    rax,QWORD PTR [rbp-0x40]
  405b1a:	cmp    rax,QWORD PTR [rbp-0x48]
  405b1e:	jne    405b29 <_start@@Base+0x2819>
  405b20:	mov    rax,QWORD PTR [rbp-0x40]
  405b24:	jmp    405bf7 <_start@@Base+0x28e7>
  405b29:	mov    rax,QWORD PTR [rbp-0x40]
  405b2d:	cmp    rax,QWORD PTR [rbp-0x10]
  405b31:	jne    405b44 <_start@@Base+0x2834>
  405b33:	add    QWORD PTR [rbp-0x18],0x8
  405b38:	mov    rax,QWORD PTR [rbp-0x18]
  405b3c:	mov    rax,QWORD PTR [rax]
  405b3f:	test   rax,rax
  405b42:	jne    405ae9 <_start@@Base+0x27d9>
  405b44:	mov    rax,QWORD PTR [rbp-0x10]
  405b48:	cmp    rax,QWORD PTR [rbp-0x40]
  405b4c:	jne    405b6c <_start@@Base+0x285c>
  405b4e:	mov    rdx,QWORD PTR [rbp-0x48]
  405b52:	mov    rsi,QWORD PTR [rbp-0x40]
  405b56:	mov    rax,QWORD PTR [rbp-0x38]
  405b5a:	mov    ecx,0x17
  405b5f:	mov    rdi,rax
  405b62:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405b67:	jmp    405bf7 <_start@@Base+0x28e7>
  405b6c:	mov    eax,DWORD PTR [rbp-0x24]
  405b6f:	lea    edx,[rax+0x1]
  405b72:	mov    DWORD PTR [rbp-0x24],edx
  405b75:	test   eax,eax
  405b77:	je     405b9f <_start@@Base+0x288f>
  405b79:	mov    rax,QWORD PTR [rbp-0x38]
  405b7d:	mov    eax,DWORD PTR [rax+0x14]
  405b80:	test   eax,eax
  405b82:	je     405b9f <_start@@Base+0x288f>
  405b84:	mov    rdx,QWORD PTR [rbp-0x48]
  405b88:	mov    rsi,QWORD PTR [rbp-0x40]
  405b8c:	mov    rax,QWORD PTR [rbp-0x38]
  405b90:	mov    ecx,0xe
  405b95:	mov    rdi,rax
  405b98:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405b9d:	jmp    405bf7 <_start@@Base+0x28e7>
  405b9f:	mov    rdi,QWORD PTR [rbp-0x20]
  405ba3:	mov    ecx,DWORD PTR [rbp-0x2c]
  405ba6:	lea    r8,[rbp-0x2e]
  405baa:	mov    rdx,QWORD PTR [rbp-0x48]
  405bae:	mov    rsi,QWORD PTR [rbp-0x40]
  405bb2:	mov    rax,QWORD PTR [rbp-0x38]
  405bb6:	mov    r9,r8
  405bb9:	mov    r8,rdi
  405bbc:	mov    rdi,rax
  405bbf:	call   404721 <_start@@Base+0x1411>
  405bc4:	cmp    QWORD PTR [rbp-0x48],rax
  405bc8:	jne    405bd0 <_start@@Base+0x28c0>
  405bca:	mov    rax,QWORD PTR [rbp-0x48]
  405bce:	jmp    405bf7 <_start@@Base+0x28e7>
  405bd0:	mov    rax,QWORD PTR [rbp-0x58]
  405bd4:	movzx  eax,WORD PTR [rax]
  405bd7:	mov    edx,eax
  405bd9:	movzx  eax,WORD PTR [rbp-0x2e]
  405bdd:	add    eax,edx
  405bdf:	mov    edx,eax
  405be1:	mov    rax,QWORD PTR [rbp-0x58]
  405be5:	mov    WORD PTR [rax],dx
  405be8:	mov    eax,DWORD PTR [rbp-0x28]
  405beb:	test   eax,eax
  405bed:	jne    405ae1 <_start@@Base+0x27d1>
  405bf3:	mov    rax,QWORD PTR [rbp-0x40]
  405bf7:	mov    rdi,QWORD PTR [rbp-0x8]
  405bfb:	xor    rdi,QWORD PTR fs:0x28
  405c04:	je     405c0b <_start@@Base+0x28fb>
  405c06:	call   403200 <__stack_chk_fail@plt>
  405c0b:	leave  
  405c0c:	ret    
  405c0d:	endbr64 
  405c11:	push   rbp
  405c12:	mov    rbp,rsp
  405c15:	sub    rsp,0x60
  405c19:	mov    QWORD PTR [rbp-0x38],rdi
  405c1d:	mov    QWORD PTR [rbp-0x40],rsi
  405c21:	mov    QWORD PTR [rbp-0x48],rdx
  405c25:	mov    QWORD PTR [rbp-0x50],rcx
  405c29:	mov    QWORD PTR [rbp-0x58],r8
  405c2d:	mov    rax,QWORD PTR fs:0x28
  405c36:	mov    QWORD PTR [rbp-0x8],rax
  405c3a:	xor    eax,eax
  405c3c:	mov    BYTE PTR [rbp-0x2d],0x0
  405c40:	mov    DWORD PTR [rbp-0x24],0x0
  405c47:	mov    rax,QWORD PTR [rbp-0x58]
  405c4b:	mov    BYTE PTR [rax],0x0
  405c4e:	mov    rdx,QWORD PTR [rbp-0x48]
  405c52:	mov    rcx,QWORD PTR [rbp-0x40]
  405c56:	mov    rax,QWORD PTR [rbp-0x38]
  405c5a:	mov    rsi,rcx
  405c5d:	mov    rdi,rax
  405c60:	call   403e7b <_start@@Base+0xb6b>
  405c65:	mov    QWORD PTR [rbp-0x40],rax
  405c69:	mov    rax,QWORD PTR [rbp-0x40]
  405c6d:	cmp    rax,QWORD PTR [rbp-0x48]
  405c71:	jne    405c7c <_start@@Base+0x296c>
  405c73:	mov    rax,QWORD PTR [rbp-0x40]
  405c77:	jmp    405d91 <_start@@Base+0x2a81>
  405c7c:	mov    rax,QWORD PTR [rbp-0x50]
  405c80:	mov    QWORD PTR [rbp-0x18],rax
  405c84:	mov    rax,QWORD PTR [rbp-0x18]
  405c88:	mov    rax,QWORD PTR [rax]
  405c8b:	mov    rdx,QWORD PTR [rbp-0x40]
  405c8f:	mov    QWORD PTR [rbp-0x10],rdx
  405c93:	lea    r9,[rbp-0x28]
  405c97:	lea    r8,[rbp-0x20]
  405c9b:	lea    rcx,[rbp-0x2c]
  405c9f:	mov    rdx,QWORD PTR [rbp-0x48]
  405ca3:	mov    rsi,QWORD PTR [rbp-0x10]
  405ca7:	mov    rdi,QWORD PTR [rbp-0x38]
  405cab:	call   rax
  405cad:	mov    QWORD PTR [rbp-0x40],rax
  405cb1:	mov    rax,QWORD PTR [rbp-0x40]
  405cb5:	cmp    rax,QWORD PTR [rbp-0x48]
  405cb9:	jne    405cc4 <_start@@Base+0x29b4>
  405cbb:	mov    rax,QWORD PTR [rbp-0x40]
  405cbf:	jmp    405d91 <_start@@Base+0x2a81>
  405cc4:	mov    rax,QWORD PTR [rbp-0x40]
  405cc8:	cmp    rax,QWORD PTR [rbp-0x10]
  405ccc:	jne    405cdf <_start@@Base+0x29cf>
  405cce:	add    QWORD PTR [rbp-0x18],0x8
  405cd3:	mov    rax,QWORD PTR [rbp-0x18]
  405cd7:	mov    rax,QWORD PTR [rax]
  405cda:	test   rax,rax
  405cdd:	jne    405c84 <_start@@Base+0x2974>
  405cdf:	mov    rax,QWORD PTR [rbp-0x10]
  405ce3:	cmp    rax,QWORD PTR [rbp-0x40]
  405ce7:	jne    405d07 <_start@@Base+0x29f7>
  405ce9:	mov    rdx,QWORD PTR [rbp-0x48]
  405ced:	mov    rsi,QWORD PTR [rbp-0x40]
  405cf1:	mov    rax,QWORD PTR [rbp-0x38]
  405cf5:	mov    ecx,0x17
  405cfa:	mov    rdi,rax
  405cfd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405d02:	jmp    405d91 <_start@@Base+0x2a81>
  405d07:	mov    eax,DWORD PTR [rbp-0x24]
  405d0a:	lea    edx,[rax+0x1]
  405d0d:	mov    DWORD PTR [rbp-0x24],edx
  405d10:	test   eax,eax
  405d12:	je     405d3a <_start@@Base+0x2a2a>
  405d14:	mov    rax,QWORD PTR [rbp-0x38]
  405d18:	mov    eax,DWORD PTR [rax+0x14]
  405d1b:	test   eax,eax
  405d1d:	je     405d3a <_start@@Base+0x2a2a>
  405d1f:	mov    rdx,QWORD PTR [rbp-0x48]
  405d23:	mov    rsi,QWORD PTR [rbp-0x40]
  405d27:	mov    rax,QWORD PTR [rbp-0x38]
  405d2b:	mov    ecx,0xe
  405d30:	mov    rdi,rax
  405d33:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405d38:	jmp    405d91 <_start@@Base+0x2a81>
  405d3a:	mov    rdi,QWORD PTR [rbp-0x20]
  405d3e:	mov    ecx,DWORD PTR [rbp-0x2c]
  405d41:	lea    r8,[rbp-0x2d]
  405d45:	mov    rdx,QWORD PTR [rbp-0x48]
  405d49:	mov    rsi,QWORD PTR [rbp-0x40]
  405d4d:	mov    rax,QWORD PTR [rbp-0x38]
  405d51:	mov    r9,r8
  405d54:	mov    r8,rdi
  405d57:	mov    rdi,rax
  405d5a:	call   4047b4 <_start@@Base+0x14a4>
  405d5f:	cmp    QWORD PTR [rbp-0x48],rax
  405d63:	jne    405d6b <_start@@Base+0x2a5b>
  405d65:	mov    rax,QWORD PTR [rbp-0x48]
  405d69:	jmp    405d91 <_start@@Base+0x2a81>
  405d6b:	mov    rax,QWORD PTR [rbp-0x58]
  405d6f:	movzx  eax,BYTE PTR [rax]
  405d72:	mov    edx,eax
  405d74:	movzx  eax,BYTE PTR [rbp-0x2d]
  405d78:	add    eax,edx
  405d7a:	mov    edx,eax
  405d7c:	mov    rax,QWORD PTR [rbp-0x58]
  405d80:	mov    BYTE PTR [rax],dl
  405d82:	mov    eax,DWORD PTR [rbp-0x28]
  405d85:	test   eax,eax
  405d87:	jne    405c7c <_start@@Base+0x296c>
  405d8d:	mov    rax,QWORD PTR [rbp-0x40]
  405d91:	mov    rdi,QWORD PTR [rbp-0x8]
  405d95:	xor    rdi,QWORD PTR fs:0x28
  405d9e:	je     405da5 <_start@@Base+0x2a95>
  405da0:	call   403200 <__stack_chk_fail@plt>
  405da5:	leave  
  405da6:	ret    
  405da7:	endbr64 
  405dab:	push   rbp
  405dac:	mov    rbp,rsp
  405daf:	sub    rsp,0x60
  405db3:	mov    QWORD PTR [rbp-0x38],rdi
  405db7:	mov    QWORD PTR [rbp-0x40],rsi
  405dbb:	mov    QWORD PTR [rbp-0x48],rdx
  405dbf:	mov    QWORD PTR [rbp-0x50],rcx
  405dc3:	mov    QWORD PTR [rbp-0x58],r8
  405dc7:	mov    rax,QWORD PTR fs:0x28
  405dd0:	mov    QWORD PTR [rbp-0x8],rax
  405dd4:	xor    eax,eax
  405dd6:	mov    BYTE PTR [rbp-0x2d],0x0
  405dda:	mov    DWORD PTR [rbp-0x24],0x0
  405de1:	mov    rax,QWORD PTR [rbp-0x58]
  405de5:	mov    BYTE PTR [rax],0x0
  405de8:	mov    rdx,QWORD PTR [rbp-0x48]
  405dec:	mov    rcx,QWORD PTR [rbp-0x40]
  405df0:	mov    rax,QWORD PTR [rbp-0x38]
  405df4:	mov    rsi,rcx
  405df7:	mov    rdi,rax
  405dfa:	call   403e7b <_start@@Base+0xb6b>
  405dff:	mov    QWORD PTR [rbp-0x40],rax
  405e03:	mov    rax,QWORD PTR [rbp-0x40]
  405e07:	cmp    rax,QWORD PTR [rbp-0x48]
  405e0b:	jne    405e16 <_start@@Base+0x2b06>
  405e0d:	mov    rax,QWORD PTR [rbp-0x40]
  405e11:	jmp    405f27 <_start@@Base+0x2c17>
  405e16:	mov    rax,QWORD PTR [rbp-0x50]
  405e1a:	mov    QWORD PTR [rbp-0x18],rax
  405e1e:	mov    rax,QWORD PTR [rbp-0x18]
  405e22:	mov    rax,QWORD PTR [rax]
  405e25:	mov    rdx,QWORD PTR [rbp-0x40]
  405e29:	mov    QWORD PTR [rbp-0x10],rdx
  405e2d:	lea    r9,[rbp-0x28]
  405e31:	lea    r8,[rbp-0x20]
  405e35:	lea    rcx,[rbp-0x2c]
  405e39:	mov    rdx,QWORD PTR [rbp-0x48]
  405e3d:	mov    rsi,QWORD PTR [rbp-0x10]
  405e41:	mov    rdi,QWORD PTR [rbp-0x38]
  405e45:	call   rax
  405e47:	mov    QWORD PTR [rbp-0x40],rax
  405e4b:	mov    rax,QWORD PTR [rbp-0x40]
  405e4f:	cmp    rax,QWORD PTR [rbp-0x48]
  405e53:	jne    405e5e <_start@@Base+0x2b4e>
  405e55:	mov    rax,QWORD PTR [rbp-0x40]
  405e59:	jmp    405f27 <_start@@Base+0x2c17>
  405e5e:	mov    rax,QWORD PTR [rbp-0x40]
  405e62:	cmp    rax,QWORD PTR [rbp-0x10]
  405e66:	jne    405e79 <_start@@Base+0x2b69>
  405e68:	add    QWORD PTR [rbp-0x18],0x8
  405e6d:	mov    rax,QWORD PTR [rbp-0x18]
  405e71:	mov    rax,QWORD PTR [rax]
  405e74:	test   rax,rax
  405e77:	jne    405e1e <_start@@Base+0x2b0e>
  405e79:	mov    rax,QWORD PTR [rbp-0x10]
  405e7d:	cmp    rax,QWORD PTR [rbp-0x40]
  405e81:	jne    405ea1 <_start@@Base+0x2b91>
  405e83:	mov    rdx,QWORD PTR [rbp-0x48]
  405e87:	mov    rsi,QWORD PTR [rbp-0x40]
  405e8b:	mov    rax,QWORD PTR [rbp-0x38]
  405e8f:	mov    ecx,0x17
  405e94:	mov    rdi,rax
  405e97:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405e9c:	jmp    405f27 <_start@@Base+0x2c17>
  405ea1:	mov    eax,DWORD PTR [rbp-0x24]
  405ea4:	lea    edx,[rax+0x1]
  405ea7:	mov    DWORD PTR [rbp-0x24],edx
  405eaa:	test   eax,eax
  405eac:	je     405ed4 <_start@@Base+0x2bc4>
  405eae:	mov    rax,QWORD PTR [rbp-0x38]
  405eb2:	mov    eax,DWORD PTR [rax+0x14]
  405eb5:	test   eax,eax
  405eb7:	je     405ed4 <_start@@Base+0x2bc4>
  405eb9:	mov    rdx,QWORD PTR [rbp-0x48]
  405ebd:	mov    rsi,QWORD PTR [rbp-0x40]
  405ec1:	mov    rax,QWORD PTR [rbp-0x38]
  405ec5:	mov    ecx,0xe
  405eca:	mov    rdi,rax
  405ecd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  405ed2:	jmp    405f27 <_start@@Base+0x2c17>
  405ed4:	mov    rdi,QWORD PTR [rbp-0x20]
  405ed8:	mov    ecx,DWORD PTR [rbp-0x2c]
  405edb:	lea    r8,[rbp-0x2d]
  405edf:	mov    rdx,QWORD PTR [rbp-0x48]
  405ee3:	mov    rsi,QWORD PTR [rbp-0x40]
  405ee7:	mov    rax,QWORD PTR [rbp-0x38]
  405eeb:	mov    r9,r8
  405eee:	mov    r8,rdi
  405ef1:	mov    rdi,rax
  405ef4:	call   40443a <_start@@Base+0x112a>
  405ef9:	cmp    QWORD PTR [rbp-0x48],rax
  405efd:	jne    405f05 <_start@@Base+0x2bf5>
  405eff:	mov    rax,QWORD PTR [rbp-0x48]
  405f03:	jmp    405f27 <_start@@Base+0x2c17>
  405f05:	mov    rax,QWORD PTR [rbp-0x58]
  405f09:	movzx  edx,BYTE PTR [rax]
  405f0c:	movzx  eax,BYTE PTR [rbp-0x2d]
  405f10:	add    eax,edx
  405f12:	mov    rdx,QWORD PTR [rbp-0x58]
  405f16:	mov    BYTE PTR [rdx],al
  405f18:	mov    eax,DWORD PTR [rbp-0x28]
  405f1b:	test   eax,eax
  405f1d:	jne    405e16 <_start@@Base+0x2b06>
  405f23:	mov    rax,QWORD PTR [rbp-0x40]
  405f27:	mov    rdi,QWORD PTR [rbp-0x8]
  405f2b:	xor    rdi,QWORD PTR fs:0x28
  405f34:	je     405f3b <_start@@Base+0x2c2b>
  405f36:	call   403200 <__stack_chk_fail@plt>
  405f3b:	leave  
  405f3c:	ret    
  405f3d:	endbr64 
  405f41:	push   rbp
  405f42:	mov    rbp,rsp
  405f45:	sub    rsp,0x60
  405f49:	mov    QWORD PTR [rbp-0x38],rdi
  405f4d:	mov    QWORD PTR [rbp-0x40],rsi
  405f51:	mov    QWORD PTR [rbp-0x48],rdx
  405f55:	mov    QWORD PTR [rbp-0x50],rcx
  405f59:	mov    QWORD PTR [rbp-0x58],r8
  405f5d:	mov    rax,QWORD PTR fs:0x28
  405f66:	mov    QWORD PTR [rbp-0x8],rax
  405f6a:	xor    eax,eax
  405f6c:	vxorps xmm0,xmm0,xmm0
  405f70:	vmovss DWORD PTR [rbp-0x30],xmm0
  405f75:	mov    DWORD PTR [rbp-0x24],0x0
  405f7c:	mov    rax,QWORD PTR [rbp-0x58]
  405f80:	vxorps xmm0,xmm0,xmm0
  405f84:	vmovss DWORD PTR [rax],xmm0
  405f88:	mov    rdx,QWORD PTR [rbp-0x48]
  405f8c:	mov    rcx,QWORD PTR [rbp-0x40]
  405f90:	mov    rax,QWORD PTR [rbp-0x38]
  405f94:	mov    rsi,rcx
  405f97:	mov    rdi,rax
  405f9a:	call   403e7b <_start@@Base+0xb6b>
  405f9f:	mov    QWORD PTR [rbp-0x40],rax
  405fa3:	mov    rax,QWORD PTR [rbp-0x40]
  405fa7:	cmp    rax,QWORD PTR [rbp-0x48]
  405fab:	jne    405fb6 <_start@@Base+0x2ca6>
  405fad:	mov    rax,QWORD PTR [rbp-0x40]
  405fb1:	jmp    4060cd <_start@@Base+0x2dbd>
  405fb6:	mov    rax,QWORD PTR [rbp-0x50]
  405fba:	mov    QWORD PTR [rbp-0x18],rax
  405fbe:	mov    rax,QWORD PTR [rbp-0x18]
  405fc2:	mov    rax,QWORD PTR [rax]
  405fc5:	mov    rdx,QWORD PTR [rbp-0x40]
  405fc9:	mov    QWORD PTR [rbp-0x10],rdx
  405fcd:	lea    r9,[rbp-0x28]
  405fd1:	lea    r8,[rbp-0x20]
  405fd5:	lea    rcx,[rbp-0x2c]
  405fd9:	mov    rdx,QWORD PTR [rbp-0x48]
  405fdd:	mov    rsi,QWORD PTR [rbp-0x10]
  405fe1:	mov    rdi,QWORD PTR [rbp-0x38]
  405fe5:	call   rax
  405fe7:	mov    QWORD PTR [rbp-0x40],rax
  405feb:	mov    rax,QWORD PTR [rbp-0x40]
  405fef:	cmp    rax,QWORD PTR [rbp-0x48]
  405ff3:	jne    405ffe <_start@@Base+0x2cee>
  405ff5:	mov    rax,QWORD PTR [rbp-0x40]
  405ff9:	jmp    4060cd <_start@@Base+0x2dbd>
  405ffe:	mov    rax,QWORD PTR [rbp-0x40]
  406002:	cmp    rax,QWORD PTR [rbp-0x10]
  406006:	jne    406019 <_start@@Base+0x2d09>
  406008:	add    QWORD PTR [rbp-0x18],0x8
  40600d:	mov    rax,QWORD PTR [rbp-0x18]
  406011:	mov    rax,QWORD PTR [rax]
  406014:	test   rax,rax
  406017:	jne    405fbe <_start@@Base+0x2cae>
  406019:	mov    rax,QWORD PTR [rbp-0x10]
  40601d:	cmp    rax,QWORD PTR [rbp-0x40]
  406021:	jne    406041 <_start@@Base+0x2d31>
  406023:	mov    rdx,QWORD PTR [rbp-0x48]
  406027:	mov    rsi,QWORD PTR [rbp-0x40]
  40602b:	mov    rax,QWORD PTR [rbp-0x38]
  40602f:	mov    ecx,0x17
  406034:	mov    rdi,rax
  406037:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40603c:	jmp    4060cd <_start@@Base+0x2dbd>
  406041:	mov    eax,DWORD PTR [rbp-0x24]
  406044:	lea    edx,[rax+0x1]
  406047:	mov    DWORD PTR [rbp-0x24],edx
  40604a:	test   eax,eax
  40604c:	je     406074 <_start@@Base+0x2d64>
  40604e:	mov    rax,QWORD PTR [rbp-0x38]
  406052:	mov    eax,DWORD PTR [rax+0x14]
  406055:	test   eax,eax
  406057:	je     406074 <_start@@Base+0x2d64>
  406059:	mov    rdx,QWORD PTR [rbp-0x48]
  40605d:	mov    rsi,QWORD PTR [rbp-0x40]
  406061:	mov    rax,QWORD PTR [rbp-0x38]
  406065:	mov    ecx,0xe
  40606a:	mov    rdi,rax
  40606d:	call   41f09d <flatcc_json_parser_set_error@@Base>
  406072:	jmp    4060cd <_start@@Base+0x2dbd>
  406074:	mov    rdi,QWORD PTR [rbp-0x20]
  406078:	mov    ecx,DWORD PTR [rbp-0x2c]
  40607b:	lea    r8,[rbp-0x30]
  40607f:	mov    rdx,QWORD PTR [rbp-0x48]
  406083:	mov    rsi,QWORD PTR [rbp-0x40]
  406087:	mov    rax,QWORD PTR [rbp-0x38]
  40608b:	mov    r9,r8
  40608e:	mov    r8,rdi
  406091:	mov    rdi,rax
  406094:	call   404842 <_start@@Base+0x1532>
  406099:	cmp    QWORD PTR [rbp-0x48],rax
  40609d:	jne    4060a5 <_start@@Base+0x2d95>
  40609f:	mov    rax,QWORD PTR [rbp-0x48]
  4060a3:	jmp    4060cd <_start@@Base+0x2dbd>
  4060a5:	mov    rax,QWORD PTR [rbp-0x58]
  4060a9:	vmovss xmm1,DWORD PTR [rax]
  4060ad:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4060b2:	vaddss xmm0,xmm1,xmm0
  4060b6:	mov    rax,QWORD PTR [rbp-0x58]
  4060ba:	vmovss DWORD PTR [rax],xmm0
  4060be:	mov    eax,DWORD PTR [rbp-0x28]
  4060c1:	test   eax,eax
  4060c3:	jne    405fb6 <_start@@Base+0x2ca6>
  4060c9:	mov    rax,QWORD PTR [rbp-0x40]
  4060cd:	mov    rdi,QWORD PTR [rbp-0x8]
  4060d1:	xor    rdi,QWORD PTR fs:0x28
  4060da:	je     4060e1 <_start@@Base+0x2dd1>
  4060dc:	call   403200 <__stack_chk_fail@plt>
  4060e1:	leave  
  4060e2:	ret    
  4060e3:	endbr64 
  4060e7:	push   rbp
  4060e8:	mov    rbp,rsp
  4060eb:	sub    rsp,0x70
  4060ef:	mov    QWORD PTR [rbp-0x48],rdi
  4060f3:	mov    QWORD PTR [rbp-0x50],rsi
  4060f7:	mov    QWORD PTR [rbp-0x58],rdx
  4060fb:	mov    QWORD PTR [rbp-0x60],rcx
  4060ff:	mov    QWORD PTR [rbp-0x68],r8
  406103:	mov    rax,QWORD PTR fs:0x28
  40610c:	mov    QWORD PTR [rbp-0x8],rax
  406110:	xor    eax,eax
  406112:	vxorpd xmm0,xmm0,xmm0
  406116:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40611b:	mov    DWORD PTR [rbp-0x2c],0x0
  406122:	mov    rax,QWORD PTR [rbp-0x68]
  406126:	vxorpd xmm0,xmm0,xmm0
  40612a:	vmovsd QWORD PTR [rax],xmm0
  40612e:	mov    rdx,QWORD PTR [rbp-0x58]
  406132:	mov    rcx,QWORD PTR [rbp-0x50]
  406136:	mov    rax,QWORD PTR [rbp-0x48]
  40613a:	mov    rsi,rcx
  40613d:	mov    rdi,rax
  406140:	call   403e7b <_start@@Base+0xb6b>
  406145:	mov    QWORD PTR [rbp-0x50],rax
  406149:	mov    rax,QWORD PTR [rbp-0x50]
  40614d:	cmp    rax,QWORD PTR [rbp-0x58]
  406151:	jne    40615c <_start@@Base+0x2e4c>
  406153:	mov    rax,QWORD PTR [rbp-0x50]
  406157:	jmp    406273 <_start@@Base+0x2f63>
  40615c:	mov    rax,QWORD PTR [rbp-0x60]
  406160:	mov    QWORD PTR [rbp-0x18],rax
  406164:	mov    rax,QWORD PTR [rbp-0x18]
  406168:	mov    rax,QWORD PTR [rax]
  40616b:	mov    rdx,QWORD PTR [rbp-0x50]
  40616f:	mov    QWORD PTR [rbp-0x10],rdx
  406173:	lea    r9,[rbp-0x30]
  406177:	lea    r8,[rbp-0x20]
  40617b:	lea    rcx,[rbp-0x34]
  40617f:	mov    rdx,QWORD PTR [rbp-0x58]
  406183:	mov    rsi,QWORD PTR [rbp-0x10]
  406187:	mov    rdi,QWORD PTR [rbp-0x48]
  40618b:	call   rax
  40618d:	mov    QWORD PTR [rbp-0x50],rax
  406191:	mov    rax,QWORD PTR [rbp-0x50]
  406195:	cmp    rax,QWORD PTR [rbp-0x58]
  406199:	jne    4061a4 <_start@@Base+0x2e94>
  40619b:	mov    rax,QWORD PTR [rbp-0x50]
  40619f:	jmp    406273 <_start@@Base+0x2f63>
  4061a4:	mov    rax,QWORD PTR [rbp-0x50]
  4061a8:	cmp    rax,QWORD PTR [rbp-0x10]
  4061ac:	jne    4061bf <_start@@Base+0x2eaf>
  4061ae:	add    QWORD PTR [rbp-0x18],0x8
  4061b3:	mov    rax,QWORD PTR [rbp-0x18]
  4061b7:	mov    rax,QWORD PTR [rax]
  4061ba:	test   rax,rax
  4061bd:	jne    406164 <_start@@Base+0x2e54>
  4061bf:	mov    rax,QWORD PTR [rbp-0x10]
  4061c3:	cmp    rax,QWORD PTR [rbp-0x50]
  4061c7:	jne    4061e7 <_start@@Base+0x2ed7>
  4061c9:	mov    rdx,QWORD PTR [rbp-0x58]
  4061cd:	mov    rsi,QWORD PTR [rbp-0x50]
  4061d1:	mov    rax,QWORD PTR [rbp-0x48]
  4061d5:	mov    ecx,0x17
  4061da:	mov    rdi,rax
  4061dd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4061e2:	jmp    406273 <_start@@Base+0x2f63>
  4061e7:	mov    eax,DWORD PTR [rbp-0x2c]
  4061ea:	lea    edx,[rax+0x1]
  4061ed:	mov    DWORD PTR [rbp-0x2c],edx
  4061f0:	test   eax,eax
  4061f2:	je     40621a <_start@@Base+0x2f0a>
  4061f4:	mov    rax,QWORD PTR [rbp-0x48]
  4061f8:	mov    eax,DWORD PTR [rax+0x14]
  4061fb:	test   eax,eax
  4061fd:	je     40621a <_start@@Base+0x2f0a>
  4061ff:	mov    rdx,QWORD PTR [rbp-0x58]
  406203:	mov    rsi,QWORD PTR [rbp-0x50]
  406207:	mov    rax,QWORD PTR [rbp-0x48]
  40620b:	mov    ecx,0xe
  406210:	mov    rdi,rax
  406213:	call   41f09d <flatcc_json_parser_set_error@@Base>
  406218:	jmp    406273 <_start@@Base+0x2f63>
  40621a:	mov    rdi,QWORD PTR [rbp-0x20]
  40621e:	mov    ecx,DWORD PTR [rbp-0x34]
  406221:	lea    r8,[rbp-0x28]
  406225:	mov    rdx,QWORD PTR [rbp-0x58]
  406229:	mov    rsi,QWORD PTR [rbp-0x50]
  40622d:	mov    rax,QWORD PTR [rbp-0x48]
  406231:	mov    r9,r8
  406234:	mov    r8,rdi
  406237:	mov    rdi,rax
  40623a:	call   4048c9 <_start@@Base+0x15b9>
  40623f:	cmp    QWORD PTR [rbp-0x58],rax
  406243:	jne    40624b <_start@@Base+0x2f3b>
  406245:	mov    rax,QWORD PTR [rbp-0x58]
  406249:	jmp    406273 <_start@@Base+0x2f63>
  40624b:	mov    rax,QWORD PTR [rbp-0x68]
  40624f:	vmovsd xmm1,QWORD PTR [rax]
  406253:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  406258:	vaddsd xmm0,xmm1,xmm0
  40625c:	mov    rax,QWORD PTR [rbp-0x68]
  406260:	vmovsd QWORD PTR [rax],xmm0
  406264:	mov    eax,DWORD PTR [rbp-0x30]
  406267:	test   eax,eax
  406269:	jne    40615c <_start@@Base+0x2e4c>
  40626f:	mov    rax,QWORD PTR [rbp-0x50]
  406273:	mov    rdi,QWORD PTR [rbp-0x8]
  406277:	xor    rdi,QWORD PTR fs:0x28
  406280:	je     406287 <_start@@Base+0x2f77>
  406282:	call   403200 <__stack_chk_fail@plt>
  406287:	leave  
  406288:	ret    
  406289:	endbr64 
  40628d:	push   rbp
  40628e:	mov    rbp,rsp
  406291:	sub    rsp,0x50
  406295:	mov    QWORD PTR [rbp-0x28],rdi
  406299:	mov    QWORD PTR [rbp-0x30],rsi
  40629d:	mov    QWORD PTR [rbp-0x38],rdx
  4062a1:	mov    QWORD PTR [rbp-0x40],rcx
  4062a5:	mov    QWORD PTR [rbp-0x48],r8
  4062a9:	mov    QWORD PTR [rbp-0x50],r9
  4062ad:	mov    rax,QWORD PTR [rbp-0x30]
  4062b1:	mov    QWORD PTR [rbp-0x18],rax
  4062b5:	mov    rdx,QWORD PTR [rbp-0x38]
  4062b9:	mov    rax,QWORD PTR [rbp-0x30]
  4062bd:	mov    rsi,rdx
  4062c0:	mov    rdi,rax
  4062c3:	call   403dd5 <_start@@Base+0xac5>
  4062c8:	mov    QWORD PTR [rbp-0x10],rax
  4062cc:	movabs rax,0xffffff0000000000
  4062d6:	and    rax,QWORD PTR [rbp-0x10]
  4062da:	mov    rdx,rax
  4062dd:	movabs rax,0x466f6f0000000000
  4062e7:	cmp    rdx,rax
  4062ea:	jne    40633c <_start@@Base+0x302c>
  4062ec:	mov    rax,QWORD PTR [rbp-0x30]
  4062f0:	mov    QWORD PTR [rbp-0x8],rax
  4062f4:	mov    rcx,QWORD PTR [rbp-0x50]
  4062f8:	mov    rdx,QWORD PTR [rbp-0x38]
  4062fc:	mov    rsi,QWORD PTR [rbp-0x8]
  406300:	mov    rax,QWORD PTR [rbp-0x28]
  406304:	mov    r8,rcx
  406307:	mov    ecx,0x3
  40630c:	mov    rdi,rax
  40630f:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  406314:	mov    QWORD PTR [rbp-0x30],rax
  406318:	mov    rax,QWORD PTR [rbp-0x30]
  40631c:	cmp    rax,QWORD PTR [rbp-0x8]
  406320:	je     40633f <_start@@Base+0x302f>
  406322:	mov    rax,QWORD PTR [rbp-0x48]
  406326:	mov    QWORD PTR [rax],0x11
  40632d:	mov    rax,QWORD PTR [rbp-0x40]
  406331:	mov    DWORD PTR [rax],0x0
  406337:	jmp    4063ef <_start@@Base+0x30df>
  40633c:	nop
  40633d:	jmp    406340 <_start@@Base+0x3030>
  40633f:	nop
  406340:	movabs rax,0x496e636c75646556
  40634a:	cmp    QWORD PTR [rbp-0x10],rax
  40634e:	jne    4063e9 <_start@@Base+0x30d9>
  406354:	add    QWORD PTR [rbp-0x30],0x8
  406359:	mov    rdx,QWORD PTR [rbp-0x38]
  40635d:	mov    rax,QWORD PTR [rbp-0x30]
  406361:	mov    rsi,rdx
  406364:	mov    rdi,rax
  406367:	call   403dd5 <_start@@Base+0xac5>
  40636c:	mov    QWORD PTR [rbp-0x10],rax
  406370:	movabs rax,0xffff000000000000
  40637a:	and    rax,QWORD PTR [rbp-0x10]
  40637e:	mov    rdx,rax
  406381:	movabs rax,0x616c000000000000
  40638b:	cmp    rdx,rax
  40638e:	jne    4063e3 <_start@@Base+0x30d3>
  406390:	mov    rax,QWORD PTR [rbp-0x30]
  406394:	mov    QWORD PTR [rbp-0x8],rax
  406398:	mov    rcx,QWORD PTR [rbp-0x50]
  40639c:	mov    rdx,QWORD PTR [rbp-0x38]
  4063a0:	mov    rsi,QWORD PTR [rbp-0x8]
  4063a4:	mov    rax,QWORD PTR [rbp-0x28]
  4063a8:	mov    r8,rcx
  4063ab:	mov    ecx,0x2
  4063b0:	mov    rdi,rax
  4063b3:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  4063b8:	mov    QWORD PTR [rbp-0x30],rax
  4063bc:	mov    rax,QWORD PTR [rbp-0x30]
  4063c0:	cmp    rax,QWORD PTR [rbp-0x8]
  4063c4:	je     4063dd <_start@@Base+0x30cd>
  4063c6:	mov    rax,QWORD PTR [rbp-0x48]
  4063ca:	mov    QWORD PTR [rax],0x0
  4063d1:	mov    rax,QWORD PTR [rbp-0x40]
  4063d5:	mov    DWORD PTR [rax],0x0
  4063db:	jmp    4063ef <_start@@Base+0x30df>
  4063dd:	mov    rax,QWORD PTR [rbp-0x18]
  4063e1:	jmp    4063f3 <_start@@Base+0x30e3>
  4063e3:	mov    rax,QWORD PTR [rbp-0x18]
  4063e7:	jmp    4063f3 <_start@@Base+0x30e3>
  4063e9:	mov    rax,QWORD PTR [rbp-0x18]
  4063ed:	jmp    4063f3 <_start@@Base+0x30e3>
  4063ef:	mov    rax,QWORD PTR [rbp-0x30]
  4063f3:	leave  
  4063f4:	ret    
  4063f5:	endbr64 
  4063f9:	push   rbp
  4063fa:	mov    rbp,rsp
  4063fd:	sub    rsp,0x30
  406401:	mov    QWORD PTR [rbp-0x18],rdi
  406405:	mov    QWORD PTR [rbp-0x20],rsi
  406409:	mov    QWORD PTR [rbp-0x28],rdx
  40640d:	mov    QWORD PTR [rbp-0x30],rcx
  406411:	mov    rax,QWORD PTR fs:0x28
  40641a:	mov    QWORD PTR [rbp-0x8],rax
  40641e:	xor    eax,eax
  406420:	lea    rcx,[rbp-0xc]
  406424:	mov    rdx,QWORD PTR [rbp-0x28]
  406428:	mov    rsi,QWORD PTR [rbp-0x20]
  40642c:	mov    rax,QWORD PTR [rbp-0x18]
  406430:	mov    rdi,rax
  406433:	call   403ed6 <_start@@Base+0xbc6>
  406438:	mov    QWORD PTR [rbp-0x20],rax
  40643c:	jmp    406475 <_start@@Base+0x3165>
  40643e:	mov    rdx,QWORD PTR [rbp-0x28]
  406442:	mov    rcx,QWORD PTR [rbp-0x20]
  406446:	mov    rax,QWORD PTR [rbp-0x18]
  40644a:	mov    rsi,rcx
  40644d:	mov    rdi,rax
  406450:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  406455:	mov    QWORD PTR [rbp-0x20],rax
  406459:	lea    rcx,[rbp-0xc]
  40645d:	mov    rdx,QWORD PTR [rbp-0x28]
  406461:	mov    rsi,QWORD PTR [rbp-0x20]
  406465:	mov    rax,QWORD PTR [rbp-0x18]
  406469:	mov    rdi,rax
  40646c:	call   403f93 <_start@@Base+0xc83>
  406471:	mov    QWORD PTR [rbp-0x20],rax
  406475:	mov    eax,DWORD PTR [rbp-0xc]
  406478:	test   eax,eax
  40647a:	jne    40643e <_start@@Base+0x312e>
  40647c:	mov    rax,QWORD PTR [rbp-0x20]
  406480:	mov    rdi,QWORD PTR [rbp-0x8]
  406484:	xor    rdi,QWORD PTR fs:0x28
  40648d:	je     406494 <_start@@Base+0x3184>
  40648f:	call   403200 <__stack_chk_fail@plt>
  406494:	leave  
  406495:	ret    
  406496:	endbr64 
  40649a:	push   rbp
  40649b:	mov    rbp,rsp
  40649e:	sub    rsp,0x30
  4064a2:	mov    QWORD PTR [rbp-0x18],rdi
  4064a6:	mov    QWORD PTR [rbp-0x20],rsi
  4064aa:	mov    QWORD PTR [rbp-0x28],rdx
  4064ae:	mov    QWORD PTR [rbp-0x30],rcx
  4064b2:	mov    rax,QWORD PTR [rbp-0x30]
  4064b6:	mov    DWORD PTR [rax],0x0
  4064bc:	mov    rax,QWORD PTR [rbp-0x18]
  4064c0:	mov    rax,QWORD PTR [rax]
  4064c3:	mov    edx,0x1
  4064c8:	mov    esi,0x0
  4064cd:	mov    rdi,rax
  4064d0:	call   417048 <flatcc_builder_start_struct@@Base>
  4064d5:	mov    QWORD PTR [rbp-0x8],rax
  4064d9:	cmp    QWORD PTR [rbp-0x8],0x0
  4064de:	je     40652d <_start@@Base+0x321d>
  4064e0:	mov    rcx,QWORD PTR [rbp-0x8]
  4064e4:	mov    rdx,QWORD PTR [rbp-0x28]
  4064e8:	mov    rsi,QWORD PTR [rbp-0x20]
  4064ec:	mov    rax,QWORD PTR [rbp-0x18]
  4064f0:	mov    rdi,rax
  4064f3:	call   4063f5 <_start@@Base+0x30e5>
  4064f8:	mov    QWORD PTR [rbp-0x20],rax
  4064fc:	mov    rax,QWORD PTR [rbp-0x20]
  406500:	cmp    rax,QWORD PTR [rbp-0x28]
  406504:	je     406530 <_start@@Base+0x3220>
  406506:	mov    rax,QWORD PTR [rbp-0x18]
  40650a:	mov    rax,QWORD PTR [rax]
  40650d:	mov    rdi,rax
  406510:	call   4170ca <flatcc_builder_end_struct@@Base>
  406515:	mov    edx,eax
  406517:	mov    rax,QWORD PTR [rbp-0x30]
  40651b:	mov    DWORD PTR [rax],edx
  40651d:	mov    rax,QWORD PTR [rbp-0x30]
  406521:	mov    eax,DWORD PTR [rax]
  406523:	test   eax,eax
  406525:	je     406530 <_start@@Base+0x3220>
  406527:	mov    rax,QWORD PTR [rbp-0x20]
  40652b:	jmp    40654a <_start@@Base+0x323a>
  40652d:	nop
  40652e:	jmp    406531 <_start@@Base+0x3221>
  406530:	nop
  406531:	mov    rdx,QWORD PTR [rbp-0x28]
  406535:	mov    rsi,QWORD PTR [rbp-0x20]
  406539:	mov    rax,QWORD PTR [rbp-0x18]
  40653d:	mov    ecx,0x21
  406542:	mov    rdi,rax
  406545:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40654a:	leave  
  40654b:	ret    
  40654c:	endbr64 
  406550:	push   rbp
  406551:	mov    rbp,rsp
  406554:	mov    QWORD PTR [rbp-0x8],rdi
  406558:	mov    QWORD PTR [rbp-0x10],rsi
  40655c:	mov    QWORD PTR [rbp-0x18],rdx
  406560:	mov    QWORD PTR [rbp-0x20],rcx
  406564:	mov    QWORD PTR [rbp-0x28],r8
  406568:	mov    QWORD PTR [rbp-0x30],r9
  40656c:	mov    rax,QWORD PTR [rbp-0x10]
  406570:	pop    rbp
  406571:	ret    
  406572:	endbr64 
  406576:	push   rbp
  406577:	mov    rbp,rsp
  40657a:	mov    QWORD PTR [rbp-0x8],rdi
  40657e:	mov    QWORD PTR [rbp-0x10],rsi
  406582:	mov    QWORD PTR [rbp-0x18],rdx
  406586:	mov    QWORD PTR [rbp-0x20],rcx
  40658a:	mov    QWORD PTR [rbp-0x28],r8
  40658e:	mov    QWORD PTR [rbp-0x30],r9
  406592:	mov    rax,QWORD PTR [rbp-0x10]
  406596:	pop    rbp
  406597:	ret    
  406598:	endbr64 
  40659c:	push   rbp
  40659d:	mov    rbp,rsp
  4065a0:	mov    QWORD PTR [rbp-0x8],rdi
  4065a4:	mov    QWORD PTR [rbp-0x10],rsi
  4065a8:	mov    QWORD PTR [rbp-0x18],rdx
  4065ac:	mov    QWORD PTR [rbp-0x20],rcx
  4065b0:	mov    QWORD PTR [rbp-0x28],r8
  4065b4:	mov    QWORD PTR [rbp-0x30],r9
  4065b8:	mov    rax,QWORD PTR [rbp-0x10]
  4065bc:	pop    rbp
  4065bd:	ret    
  4065be:	endbr64 
  4065c2:	push   rbp
  4065c3:	mov    rbp,rsp
  4065c6:	mov    QWORD PTR [rbp-0x8],rdi
  4065ca:	mov    QWORD PTR [rbp-0x10],rsi
  4065ce:	mov    QWORD PTR [rbp-0x18],rdx
  4065d2:	mov    QWORD PTR [rbp-0x20],rcx
  4065d6:	mov    QWORD PTR [rbp-0x28],r8
  4065da:	mov    QWORD PTR [rbp-0x30],r9
  4065de:	mov    rax,QWORD PTR [rbp-0x10]
  4065e2:	pop    rbp
  4065e3:	ret    
  4065e4:	endbr64 
  4065e8:	push   rbp
  4065e9:	mov    rbp,rsp
  4065ec:	mov    QWORD PTR [rbp-0x8],rdi
  4065f0:	mov    QWORD PTR [rbp-0x10],rsi
  4065f4:	mov    QWORD PTR [rbp-0x18],rdx
  4065f8:	mov    QWORD PTR [rbp-0x20],rcx
  4065fc:	mov    QWORD PTR [rbp-0x28],r8
  406600:	mov    QWORD PTR [rbp-0x30],r9
  406604:	mov    rax,QWORD PTR [rbp-0x10]
  406608:	pop    rbp
  406609:	ret    
  40660a:	endbr64 
  40660e:	push   rbp
  40660f:	mov    rbp,rsp
  406612:	sub    rsp,0x50
  406616:	mov    QWORD PTR [rbp-0x28],rdi
  40661a:	mov    QWORD PTR [rbp-0x30],rsi
  40661e:	mov    QWORD PTR [rbp-0x38],rdx
  406622:	mov    QWORD PTR [rbp-0x40],rcx
  406626:	mov    QWORD PTR [rbp-0x48],r8
  40662a:	mov    QWORD PTR [rbp-0x50],r9
  40662e:	mov    rax,QWORD PTR [rbp-0x30]
  406632:	mov    QWORD PTR [rbp-0x18],rax
  406636:	mov    rdx,QWORD PTR [rbp-0x38]
  40663a:	mov    rax,QWORD PTR [rbp-0x30]
  40663e:	mov    rsi,rdx
  406641:	mov    rdi,rax
  406644:	call   403dd5 <_start@@Base+0xac5>
  406649:	mov    QWORD PTR [rbp-0x10],rax
  40664d:	movabs rax,0x46726f6d496e636c
  406657:	cmp    QWORD PTR [rbp-0x10],rax
  40665b:	jne    406708 <_start@@Base+0x33f8>
  406661:	add    QWORD PTR [rbp-0x30],0x8
  406666:	mov    rdx,QWORD PTR [rbp-0x38]
  40666a:	mov    rax,QWORD PTR [rbp-0x30]
  40666e:	mov    rsi,rdx
  406671:	mov    rdi,rax
  406674:	call   403dd5 <_start@@Base+0xac5>
  406679:	mov    QWORD PTR [rbp-0x10],rax
  40667d:	movabs rax,0xffffff0000000000
  406687:	and    rax,QWORD PTR [rbp-0x10]
  40668b:	mov    rdx,rax
  40668e:	movabs rax,0x7564650000000000
  406698:	cmp    rdx,rax
  40669b:	jne    406702 <_start@@Base+0x33f2>
  40669d:	mov    rax,QWORD PTR [rbp-0x30]
  4066a1:	mov    QWORD PTR [rbp-0x8],rax
  4066a5:	mov    rdx,QWORD PTR [rbp-0x38]
  4066a9:	mov    rsi,QWORD PTR [rbp-0x8]
  4066ad:	mov    rax,QWORD PTR [rbp-0x28]
  4066b1:	mov    ecx,0x3
  4066b6:	mov    rdi,rax
  4066b9:	call   403e19 <_start@@Base+0xb09>
  4066be:	mov    QWORD PTR [rbp-0x30],rax
  4066c2:	mov    rax,QWORD PTR [rbp-0x30]
  4066c6:	cmp    rax,QWORD PTR [rbp-0x8]
  4066ca:	je     4066fc <_start@@Base+0x33ec>
  4066cc:	mov    r8,QWORD PTR [rbp-0x50]
  4066d0:	mov    rdi,QWORD PTR [rbp-0x48]
  4066d4:	mov    rcx,QWORD PTR [rbp-0x40]
  4066d8:	mov    rdx,QWORD PTR [rbp-0x38]
  4066dc:	mov    rsi,QWORD PTR [rbp-0x30]
  4066e0:	mov    rax,QWORD PTR [rbp-0x28]
  4066e4:	mov    r9,r8
  4066e7:	mov    r8,rdi
  4066ea:	mov    rdi,rax
  4066ed:	call   406289 <_start@@Base+0x2f79>
  4066f2:	mov    QWORD PTR [rbp-0x30],rax
  4066f6:	mov    rax,QWORD PTR [rbp-0x30]
  4066fa:	jmp    40670c <_start@@Base+0x33fc>
  4066fc:	mov    rax,QWORD PTR [rbp-0x18]
  406700:	jmp    40670c <_start@@Base+0x33fc>
  406702:	mov    rax,QWORD PTR [rbp-0x18]
  406706:	jmp    40670c <_start@@Base+0x33fc>
  406708:	mov    rax,QWORD PTR [rbp-0x18]
  40670c:	leave  
  40670d:	ret    
  40670e:	endbr64 
  406712:	push   rbp
  406713:	mov    rbp,rsp
  406716:	sub    rsp,0x50
  40671a:	mov    QWORD PTR [rbp-0x28],rdi
  40671e:	mov    QWORD PTR [rbp-0x30],rsi
  406722:	mov    QWORD PTR [rbp-0x38],rdx
  406726:	mov    QWORD PTR [rbp-0x40],rcx
  40672a:	mov    QWORD PTR [rbp-0x48],r8
  40672e:	mov    QWORD PTR [rbp-0x50],r9
  406732:	mov    rax,QWORD PTR [rbp-0x30]
  406736:	mov    QWORD PTR [rbp-0x18],rax
  40673a:	mov    rdx,QWORD PTR [rbp-0x38]
  40673e:	mov    rax,QWORD PTR [rbp-0x30]
  406742:	mov    rsi,rdx
  406745:	mov    rdi,rax
  406748:	call   403dd5 <_start@@Base+0xac5>
  40674d:	mov    QWORD PTR [rbp-0x10],rax
  406751:	movabs rax,0x4d7947616d652e4f
  40675b:	cmp    QWORD PTR [rbp-0x10],rax
  40675f:	jne    4068ae <_start@@Base+0x359e>
  406765:	add    QWORD PTR [rbp-0x30],0x8
  40676a:	mov    rdx,QWORD PTR [rbp-0x38]
  40676e:	mov    rax,QWORD PTR [rbp-0x30]
  406772:	mov    rsi,rdx
  406775:	mov    rdi,rax
  406778:	call   403dd5 <_start@@Base+0xac5>
  40677d:	mov    QWORD PTR [rbp-0x10],rax
  406781:	movabs rax,0x746865724e616d65
  40678b:	cmp    QWORD PTR [rbp-0x10],rax
  40678f:	jne    4068a8 <_start@@Base+0x3598>
  406795:	add    QWORD PTR [rbp-0x30],0x8
  40679a:	mov    rdx,QWORD PTR [rbp-0x38]
  40679e:	mov    rax,QWORD PTR [rbp-0x30]
  4067a2:	mov    rsi,rdx
  4067a5:	mov    rdi,rax
  4067a8:	call   403dd5 <_start@@Base+0xac5>
  4067ad:	mov    QWORD PTR [rbp-0x10],rax
  4067b1:	movabs rax,0x53706163652e4672
  4067bb:	cmp    QWORD PTR [rbp-0x10],rax
  4067bf:	jne    4068a2 <_start@@Base+0x3592>
  4067c5:	add    QWORD PTR [rbp-0x30],0x8
  4067ca:	mov    rdx,QWORD PTR [rbp-0x38]
  4067ce:	mov    rax,QWORD PTR [rbp-0x30]
  4067d2:	mov    rsi,rdx
  4067d5:	mov    rdi,rax
  4067d8:	call   403dd5 <_start@@Base+0xac5>
  4067dd:	mov    QWORD PTR [rbp-0x10],rax
  4067e1:	movabs rax,0x6f6d496e636c7564
  4067eb:	cmp    QWORD PTR [rbp-0x10],rax
  4067ef:	jne    40689c <_start@@Base+0x358c>
  4067f5:	add    QWORD PTR [rbp-0x30],0x8
  4067fa:	mov    rdx,QWORD PTR [rbp-0x38]
  4067fe:	mov    rax,QWORD PTR [rbp-0x30]
  406802:	mov    rsi,rdx
  406805:	mov    rdi,rax
  406808:	call   403dd5 <_start@@Base+0xac5>
  40680d:	mov    QWORD PTR [rbp-0x10],rax
  406811:	movabs rax,0xff00000000000000
  40681b:	and    rax,QWORD PTR [rbp-0x10]
  40681f:	mov    rdx,rax
  406822:	movabs rax,0x6500000000000000
  40682c:	cmp    rdx,rax
  40682f:	jne    406896 <_start@@Base+0x3586>
  406831:	mov    rax,QWORD PTR [rbp-0x30]
  406835:	mov    QWORD PTR [rbp-0x8],rax
  406839:	mov    rdx,QWORD PTR [rbp-0x38]
  40683d:	mov    rsi,QWORD PTR [rbp-0x8]
  406841:	mov    rax,QWORD PTR [rbp-0x28]
  406845:	mov    ecx,0x1
  40684a:	mov    rdi,rax
  40684d:	call   403e19 <_start@@Base+0xb09>
  406852:	mov    QWORD PTR [rbp-0x30],rax
  406856:	mov    rax,QWORD PTR [rbp-0x30]
  40685a:	cmp    rax,QWORD PTR [rbp-0x8]
  40685e:	je     406890 <_start@@Base+0x3580>
  406860:	mov    r8,QWORD PTR [rbp-0x50]
  406864:	mov    rdi,QWORD PTR [rbp-0x48]
  406868:	mov    rcx,QWORD PTR [rbp-0x40]
  40686c:	mov    rdx,QWORD PTR [rbp-0x38]
  406870:	mov    rsi,QWORD PTR [rbp-0x30]
  406874:	mov    rax,QWORD PTR [rbp-0x28]
  406878:	mov    r9,r8
  40687b:	mov    r8,rdi
  40687e:	mov    rdi,rax
  406881:	call   406289 <_start@@Base+0x2f79>
  406886:	mov    QWORD PTR [rbp-0x30],rax
  40688a:	mov    rax,QWORD PTR [rbp-0x30]
  40688e:	jmp    4068b2 <_start@@Base+0x35a2>
  406890:	mov    rax,QWORD PTR [rbp-0x18]
  406894:	jmp    4068b2 <_start@@Base+0x35a2>
  406896:	mov    rax,QWORD PTR [rbp-0x18]
  40689a:	jmp    4068b2 <_start@@Base+0x35a2>
  40689c:	mov    rax,QWORD PTR [rbp-0x18]
  4068a0:	jmp    4068b2 <_start@@Base+0x35a2>
  4068a2:	mov    rax,QWORD PTR [rbp-0x18]
  4068a6:	jmp    4068b2 <_start@@Base+0x35a2>
  4068a8:	mov    rax,QWORD PTR [rbp-0x18]
  4068ac:	jmp    4068b2 <_start@@Base+0x35a2>
  4068ae:	mov    rax,QWORD PTR [rbp-0x18]
  4068b2:	leave  
  4068b3:	ret    
  4068b4:	endbr64 
  4068b8:	push   rbp
  4068b9:	mov    rbp,rsp
  4068bc:	mov    QWORD PTR [rbp-0x8],rdi
  4068c0:	mov    QWORD PTR [rbp-0x10],rsi
  4068c4:	mov    QWORD PTR [rbp-0x18],rdx
  4068c8:	mov    QWORD PTR [rbp-0x20],rcx
  4068cc:	mov    QWORD PTR [rbp-0x28],r8
  4068d0:	mov    QWORD PTR [rbp-0x30],r9
  4068d4:	mov    rax,QWORD PTR [rbp-0x10]
  4068d8:	pop    rbp
  4068d9:	ret    
  4068da:	endbr64 
  4068de:	push   rbp
  4068df:	mov    rbp,rsp
  4068e2:	mov    QWORD PTR [rbp-0x8],rdi
  4068e6:	mov    QWORD PTR [rbp-0x10],rsi
  4068ea:	mov    QWORD PTR [rbp-0x18],rdx
  4068ee:	mov    QWORD PTR [rbp-0x20],rcx
  4068f2:	mov    QWORD PTR [rbp-0x28],r8
  4068f6:	mov    QWORD PTR [rbp-0x30],r9
  4068fa:	mov    rax,QWORD PTR [rbp-0x10]
  4068fe:	pop    rbp
  4068ff:	ret    
  406900:	endbr64 
  406904:	push   rbp
  406905:	mov    rbp,rsp
  406908:	mov    QWORD PTR [rbp-0x8],rdi
  40690c:	mov    QWORD PTR [rbp-0x10],rsi
  406910:	mov    QWORD PTR [rbp-0x18],rdx
  406914:	mov    QWORD PTR [rbp-0x20],rcx
  406918:	mov    QWORD PTR [rbp-0x28],r8
  40691c:	mov    QWORD PTR [rbp-0x30],r9
  406920:	mov    rax,QWORD PTR [rbp-0x10]
  406924:	pop    rbp
  406925:	ret    
  406926:	endbr64 
  40692a:	push   rbp
  40692b:	mov    rbp,rsp
  40692e:	mov    QWORD PTR [rbp-0x8],rdi
  406932:	mov    QWORD PTR [rbp-0x10],rsi
  406936:	mov    QWORD PTR [rbp-0x18],rdx
  40693a:	mov    QWORD PTR [rbp-0x20],rcx
  40693e:	mov    QWORD PTR [rbp-0x28],r8
  406942:	mov    QWORD PTR [rbp-0x30],r9
  406946:	mov    rax,QWORD PTR [rbp-0x10]
  40694a:	pop    rbp
  40694b:	ret    
  40694c:	endbr64 
  406950:	push   rbp
  406951:	mov    rbp,rsp
  406954:	mov    QWORD PTR [rbp-0x8],rdi
  406958:	mov    QWORD PTR [rbp-0x10],rsi
  40695c:	mov    QWORD PTR [rbp-0x18],rdx
  406960:	mov    QWORD PTR [rbp-0x20],rcx
  406964:	mov    QWORD PTR [rbp-0x28],r8
  406968:	mov    QWORD PTR [rbp-0x30],r9
  40696c:	mov    rax,QWORD PTR [rbp-0x10]
  406970:	pop    rbp
  406971:	ret    
  406972:	endbr64 
  406976:	push   rbp
  406977:	mov    rbp,rsp
  40697a:	sub    rsp,0x50
  40697e:	mov    QWORD PTR [rbp-0x28],rdi
  406982:	mov    QWORD PTR [rbp-0x30],rsi
  406986:	mov    QWORD PTR [rbp-0x38],rdx
  40698a:	mov    QWORD PTR [rbp-0x40],rcx
  40698e:	mov    QWORD PTR [rbp-0x48],r8
  406992:	mov    QWORD PTR [rbp-0x50],r9
  406996:	mov    rax,QWORD PTR [rbp-0x30]
  40699a:	mov    QWORD PTR [rbp-0x18],rax
  40699e:	mov    rdx,QWORD PTR [rbp-0x38]
  4069a2:	mov    rax,QWORD PTR [rbp-0x30]
  4069a6:	mov    rsi,rdx
  4069a9:	mov    rdi,rax
  4069ac:	call   403dd5 <_start@@Base+0xac5>
  4069b1:	mov    QWORD PTR [rbp-0x10],rax
  4069b5:	movabs rax,0x46726f6d496e636c
  4069bf:	cmp    QWORD PTR [rbp-0x10],rax
  4069c3:	jne    406a70 <_start@@Base+0x3760>
  4069c9:	add    QWORD PTR [rbp-0x30],0x8
  4069ce:	mov    rdx,QWORD PTR [rbp-0x38]
  4069d2:	mov    rax,QWORD PTR [rbp-0x30]
  4069d6:	mov    rsi,rdx
  4069d9:	mov    rdi,rax
  4069dc:	call   403dd5 <_start@@Base+0xac5>
  4069e1:	mov    QWORD PTR [rbp-0x10],rax
  4069e5:	movabs rax,0xffffff0000000000
  4069ef:	and    rax,QWORD PTR [rbp-0x10]
  4069f3:	mov    rdx,rax
  4069f6:	movabs rax,0x7564650000000000
  406a00:	cmp    rdx,rax
  406a03:	jne    406a6a <_start@@Base+0x375a>
  406a05:	mov    rax,QWORD PTR [rbp-0x30]
  406a09:	mov    QWORD PTR [rbp-0x8],rax
  406a0d:	mov    rdx,QWORD PTR [rbp-0x38]
  406a11:	mov    rsi,QWORD PTR [rbp-0x8]
  406a15:	mov    rax,QWORD PTR [rbp-0x28]
  406a19:	mov    ecx,0x3
  406a1e:	mov    rdi,rax
  406a21:	call   403e19 <_start@@Base+0xb09>
  406a26:	mov    QWORD PTR [rbp-0x30],rax
  406a2a:	mov    rax,QWORD PTR [rbp-0x30]
  406a2e:	cmp    rax,QWORD PTR [rbp-0x8]
  406a32:	je     406a64 <_start@@Base+0x3754>
  406a34:	mov    r8,QWORD PTR [rbp-0x50]
  406a38:	mov    rdi,QWORD PTR [rbp-0x48]
  406a3c:	mov    rcx,QWORD PTR [rbp-0x40]
  406a40:	mov    rdx,QWORD PTR [rbp-0x38]
  406a44:	mov    rsi,QWORD PTR [rbp-0x30]
  406a48:	mov    rax,QWORD PTR [rbp-0x28]
  406a4c:	mov    r9,r8
  406a4f:	mov    r8,rdi
  406a52:	mov    rdi,rax
  406a55:	call   406289 <_start@@Base+0x2f79>
  406a5a:	mov    QWORD PTR [rbp-0x30],rax
  406a5e:	mov    rax,QWORD PTR [rbp-0x30]
  406a62:	jmp    406a74 <_start@@Base+0x3764>
  406a64:	mov    rax,QWORD PTR [rbp-0x18]
  406a68:	jmp    406a74 <_start@@Base+0x3764>
  406a6a:	mov    rax,QWORD PTR [rbp-0x18]
  406a6e:	jmp    406a74 <_start@@Base+0x3764>
  406a70:	mov    rax,QWORD PTR [rbp-0x18]
  406a74:	leave  
  406a75:	ret    
  406a76:	endbr64 
  406a7a:	push   rbp
  406a7b:	mov    rbp,rsp
  406a7e:	sub    rsp,0x50
  406a82:	mov    QWORD PTR [rbp-0x28],rdi
  406a86:	mov    QWORD PTR [rbp-0x30],rsi
  406a8a:	mov    QWORD PTR [rbp-0x38],rdx
  406a8e:	mov    QWORD PTR [rbp-0x40],rcx
  406a92:	mov    QWORD PTR [rbp-0x48],r8
  406a96:	mov    QWORD PTR [rbp-0x50],r9
  406a9a:	mov    rax,QWORD PTR [rbp-0x30]
  406a9e:	mov    QWORD PTR [rbp-0x18],rax
  406aa2:	mov    rdx,QWORD PTR [rbp-0x38]
  406aa6:	mov    rax,QWORD PTR [rbp-0x30]
  406aaa:	mov    rsi,rdx
  406aad:	mov    rdi,rax
  406ab0:	call   403dd5 <_start@@Base+0xac5>
  406ab5:	mov    QWORD PTR [rbp-0x10],rax
  406ab9:	movabs rax,0x4d7947616d652e4f
  406ac3:	cmp    QWORD PTR [rbp-0x10],rax
  406ac7:	jne    406c16 <_start@@Base+0x3906>
  406acd:	add    QWORD PTR [rbp-0x30],0x8
  406ad2:	mov    rdx,QWORD PTR [rbp-0x38]
  406ad6:	mov    rax,QWORD PTR [rbp-0x30]
  406ada:	mov    rsi,rdx
  406add:	mov    rdi,rax
  406ae0:	call   403dd5 <_start@@Base+0xac5>
  406ae5:	mov    QWORD PTR [rbp-0x10],rax
  406ae9:	movabs rax,0x746865724e616d65
  406af3:	cmp    QWORD PTR [rbp-0x10],rax
  406af7:	jne    406c10 <_start@@Base+0x3900>
  406afd:	add    QWORD PTR [rbp-0x30],0x8
  406b02:	mov    rdx,QWORD PTR [rbp-0x38]
  406b06:	mov    rax,QWORD PTR [rbp-0x30]
  406b0a:	mov    rsi,rdx
  406b0d:	mov    rdi,rax
  406b10:	call   403dd5 <_start@@Base+0xac5>
  406b15:	mov    QWORD PTR [rbp-0x10],rax
  406b19:	movabs rax,0x53706163652e4672
  406b23:	cmp    QWORD PTR [rbp-0x10],rax
  406b27:	jne    406c0a <_start@@Base+0x38fa>
  406b2d:	add    QWORD PTR [rbp-0x30],0x8
  406b32:	mov    rdx,QWORD PTR [rbp-0x38]
  406b36:	mov    rax,QWORD PTR [rbp-0x30]
  406b3a:	mov    rsi,rdx
  406b3d:	mov    rdi,rax
  406b40:	call   403dd5 <_start@@Base+0xac5>
  406b45:	mov    QWORD PTR [rbp-0x10],rax
  406b49:	movabs rax,0x6f6d496e636c7564
  406b53:	cmp    QWORD PTR [rbp-0x10],rax
  406b57:	jne    406c04 <_start@@Base+0x38f4>
  406b5d:	add    QWORD PTR [rbp-0x30],0x8
  406b62:	mov    rdx,QWORD PTR [rbp-0x38]
  406b66:	mov    rax,QWORD PTR [rbp-0x30]
  406b6a:	mov    rsi,rdx
  406b6d:	mov    rdi,rax
  406b70:	call   403dd5 <_start@@Base+0xac5>
  406b75:	mov    QWORD PTR [rbp-0x10],rax
  406b79:	movabs rax,0xff00000000000000
  406b83:	and    rax,QWORD PTR [rbp-0x10]
  406b87:	mov    rdx,rax
  406b8a:	movabs rax,0x6500000000000000
  406b94:	cmp    rdx,rax
  406b97:	jne    406bfe <_start@@Base+0x38ee>
  406b99:	mov    rax,QWORD PTR [rbp-0x30]
  406b9d:	mov    QWORD PTR [rbp-0x8],rax
  406ba1:	mov    rdx,QWORD PTR [rbp-0x38]
  406ba5:	mov    rsi,QWORD PTR [rbp-0x8]
  406ba9:	mov    rax,QWORD PTR [rbp-0x28]
  406bad:	mov    ecx,0x1
  406bb2:	mov    rdi,rax
  406bb5:	call   403e19 <_start@@Base+0xb09>
  406bba:	mov    QWORD PTR [rbp-0x30],rax
  406bbe:	mov    rax,QWORD PTR [rbp-0x30]
  406bc2:	cmp    rax,QWORD PTR [rbp-0x8]
  406bc6:	je     406bf8 <_start@@Base+0x38e8>
  406bc8:	mov    r8,QWORD PTR [rbp-0x50]
  406bcc:	mov    rdi,QWORD PTR [rbp-0x48]
  406bd0:	mov    rcx,QWORD PTR [rbp-0x40]
  406bd4:	mov    rdx,QWORD PTR [rbp-0x38]
  406bd8:	mov    rsi,QWORD PTR [rbp-0x30]
  406bdc:	mov    rax,QWORD PTR [rbp-0x28]
  406be0:	mov    r9,r8
  406be3:	mov    r8,rdi
  406be6:	mov    rdi,rax
  406be9:	call   406289 <_start@@Base+0x2f79>
  406bee:	mov    QWORD PTR [rbp-0x30],rax
  406bf2:	mov    rax,QWORD PTR [rbp-0x30]
  406bf6:	jmp    406c1a <_start@@Base+0x390a>
  406bf8:	mov    rax,QWORD PTR [rbp-0x18]
  406bfc:	jmp    406c1a <_start@@Base+0x390a>
  406bfe:	mov    rax,QWORD PTR [rbp-0x18]
  406c02:	jmp    406c1a <_start@@Base+0x390a>
  406c04:	mov    rax,QWORD PTR [rbp-0x18]
  406c08:	jmp    406c1a <_start@@Base+0x390a>
  406c0a:	mov    rax,QWORD PTR [rbp-0x18]
  406c0e:	jmp    406c1a <_start@@Base+0x390a>
  406c10:	mov    rax,QWORD PTR [rbp-0x18]
  406c14:	jmp    406c1a <_start@@Base+0x390a>
  406c16:	mov    rax,QWORD PTR [rbp-0x18]
  406c1a:	leave  
  406c1b:	ret    
  406c1c:	endbr64 
  406c20:	push   rbp
  406c21:	mov    rbp,rsp
  406c24:	mov    QWORD PTR [rbp-0x8],rdi
  406c28:	mov    QWORD PTR [rbp-0x10],rsi
  406c2c:	mov    QWORD PTR [rbp-0x18],rdx
  406c30:	mov    QWORD PTR [rbp-0x20],rcx
  406c34:	mov    QWORD PTR [rbp-0x28],r8
  406c38:	mov    QWORD PTR [rbp-0x30],r9
  406c3c:	mov    rax,QWORD PTR [rbp-0x10]
  406c40:	pop    rbp
  406c41:	ret    
  406c42:	endbr64 
  406c46:	push   rbp
  406c47:	mov    rbp,rsp
  406c4a:	mov    QWORD PTR [rbp-0x8],rdi
  406c4e:	mov    QWORD PTR [rbp-0x10],rsi
  406c52:	mov    QWORD PTR [rbp-0x18],rdx
  406c56:	mov    QWORD PTR [rbp-0x20],rcx
  406c5a:	mov    QWORD PTR [rbp-0x28],r8
  406c5e:	mov    QWORD PTR [rbp-0x30],r9
  406c62:	mov    rax,QWORD PTR [rbp-0x10]
  406c66:	pop    rbp
  406c67:	ret    
  406c68:	endbr64 
  406c6c:	push   rbp
  406c6d:	mov    rbp,rsp
  406c70:	mov    QWORD PTR [rbp-0x8],rdi
  406c74:	mov    QWORD PTR [rbp-0x10],rsi
  406c78:	mov    QWORD PTR [rbp-0x18],rdx
  406c7c:	mov    QWORD PTR [rbp-0x20],rcx
  406c80:	mov    QWORD PTR [rbp-0x28],r8
  406c84:	mov    QWORD PTR [rbp-0x30],r9
  406c88:	mov    rax,QWORD PTR [rbp-0x10]
  406c8c:	pop    rbp
  406c8d:	ret    
  406c8e:	endbr64 
  406c92:	push   rbp
  406c93:	mov    rbp,rsp
  406c96:	mov    QWORD PTR [rbp-0x8],rdi
  406c9a:	mov    QWORD PTR [rbp-0x10],rsi
  406c9e:	mov    QWORD PTR [rbp-0x18],rdx
  406ca2:	mov    QWORD PTR [rbp-0x20],rcx
  406ca6:	mov    QWORD PTR [rbp-0x28],r8
  406caa:	mov    QWORD PTR [rbp-0x30],r9
  406cae:	mov    rax,QWORD PTR [rbp-0x10]
  406cb2:	pop    rbp
  406cb3:	ret    
  406cb4:	endbr64 
  406cb8:	push   rbp
  406cb9:	mov    rbp,rsp
  406cbc:	mov    QWORD PTR [rbp-0x8],rdi
  406cc0:	mov    QWORD PTR [rbp-0x10],rsi
  406cc4:	mov    QWORD PTR [rbp-0x18],rdx
  406cc8:	mov    QWORD PTR [rbp-0x20],rcx
  406ccc:	mov    QWORD PTR [rbp-0x28],r8
  406cd0:	mov    QWORD PTR [rbp-0x30],r9
  406cd4:	mov    rax,QWORD PTR [rbp-0x10]
  406cd8:	pop    rbp
  406cd9:	ret    
  406cda:	endbr64 
  406cde:	push   rbp
  406cdf:	mov    rbp,rsp
  406ce2:	mov    QWORD PTR [rbp-0x8],rdi
  406ce6:	mov    QWORD PTR [rbp-0x10],rsi
  406cea:	mov    QWORD PTR [rbp-0x18],rdx
  406cee:	mov    QWORD PTR [rbp-0x20],rcx
  406cf2:	mov    QWORD PTR [rbp-0x28],r8
  406cf6:	mov    QWORD PTR [rbp-0x30],r9
  406cfa:	mov    rax,QWORD PTR [rbp-0x10]
  406cfe:	pop    rbp
  406cff:	ret    
  406d00:	endbr64 
  406d04:	push   rbp
  406d05:	mov    rbp,rsp
  406d08:	mov    QWORD PTR [rbp-0x8],rdi
  406d0c:	mov    QWORD PTR [rbp-0x10],rsi
  406d10:	mov    QWORD PTR [rbp-0x18],rdx
  406d14:	mov    QWORD PTR [rbp-0x20],rcx
  406d18:	mov    QWORD PTR [rbp-0x28],r8
  406d1c:	mov    QWORD PTR [rbp-0x30],r9
  406d20:	mov    rax,QWORD PTR [rbp-0x10]
  406d24:	pop    rbp
  406d25:	ret    
  406d26:	endbr64 
  406d2a:	push   rbp
  406d2b:	mov    rbp,rsp
  406d2e:	sub    rsp,0x30
  406d32:	mov    QWORD PTR [rbp-0x18],rdi
  406d36:	mov    QWORD PTR [rbp-0x20],rsi
  406d3a:	mov    QWORD PTR [rbp-0x28],rdx
  406d3e:	mov    QWORD PTR [rbp-0x30],rcx
  406d42:	mov    rax,QWORD PTR fs:0x28
  406d4b:	mov    QWORD PTR [rbp-0x8],rax
  406d4f:	xor    eax,eax
  406d51:	lea    rcx,[rbp-0xc]
  406d55:	mov    rdx,QWORD PTR [rbp-0x28]
  406d59:	mov    rsi,QWORD PTR [rbp-0x20]
  406d5d:	mov    rax,QWORD PTR [rbp-0x18]
  406d61:	mov    rdi,rax
  406d64:	call   403ed6 <_start@@Base+0xbc6>
  406d69:	mov    QWORD PTR [rbp-0x20],rax
  406d6d:	jmp    406da6 <_start@@Base+0x3a96>
  406d6f:	mov    rdx,QWORD PTR [rbp-0x28]
  406d73:	mov    rcx,QWORD PTR [rbp-0x20]
  406d77:	mov    rax,QWORD PTR [rbp-0x18]
  406d7b:	mov    rsi,rcx
  406d7e:	mov    rdi,rax
  406d81:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  406d86:	mov    QWORD PTR [rbp-0x20],rax
  406d8a:	lea    rcx,[rbp-0xc]
  406d8e:	mov    rdx,QWORD PTR [rbp-0x28]
  406d92:	mov    rsi,QWORD PTR [rbp-0x20]
  406d96:	mov    rax,QWORD PTR [rbp-0x18]
  406d9a:	mov    rdi,rax
  406d9d:	call   403f93 <_start@@Base+0xc83>
  406da2:	mov    QWORD PTR [rbp-0x20],rax
  406da6:	mov    eax,DWORD PTR [rbp-0xc]
  406da9:	test   eax,eax
  406dab:	jne    406d6f <_start@@Base+0x3a5f>
  406dad:	mov    rax,QWORD PTR [rbp-0x20]
  406db1:	mov    rdi,QWORD PTR [rbp-0x8]
  406db5:	xor    rdi,QWORD PTR fs:0x28
  406dbe:	je     406dc5 <_start@@Base+0x3ab5>
  406dc0:	call   403200 <__stack_chk_fail@plt>
  406dc5:	leave  
  406dc6:	ret    
  406dc7:	endbr64 
  406dcb:	push   rbp
  406dcc:	mov    rbp,rsp
  406dcf:	sub    rsp,0x30
  406dd3:	mov    QWORD PTR [rbp-0x18],rdi
  406dd7:	mov    QWORD PTR [rbp-0x20],rsi
  406ddb:	mov    QWORD PTR [rbp-0x28],rdx
  406ddf:	mov    QWORD PTR [rbp-0x30],rcx
  406de3:	mov    rax,QWORD PTR [rbp-0x30]
  406de7:	mov    DWORD PTR [rax],0x0
  406ded:	mov    rax,QWORD PTR [rbp-0x18]
  406df1:	mov    rax,QWORD PTR [rax]
  406df4:	mov    edx,0x1
  406df9:	mov    esi,0x0
  406dfe:	mov    rdi,rax
  406e01:	call   417048 <flatcc_builder_start_struct@@Base>
  406e06:	mov    QWORD PTR [rbp-0x8],rax
  406e0a:	cmp    QWORD PTR [rbp-0x8],0x0
  406e0f:	je     406e5e <_start@@Base+0x3b4e>
  406e11:	mov    rcx,QWORD PTR [rbp-0x8]
  406e15:	mov    rdx,QWORD PTR [rbp-0x28]
  406e19:	mov    rsi,QWORD PTR [rbp-0x20]
  406e1d:	mov    rax,QWORD PTR [rbp-0x18]
  406e21:	mov    rdi,rax
  406e24:	call   406d26 <_start@@Base+0x3a16>
  406e29:	mov    QWORD PTR [rbp-0x20],rax
  406e2d:	mov    rax,QWORD PTR [rbp-0x20]
  406e31:	cmp    rax,QWORD PTR [rbp-0x28]
  406e35:	je     406e61 <_start@@Base+0x3b51>
  406e37:	mov    rax,QWORD PTR [rbp-0x18]
  406e3b:	mov    rax,QWORD PTR [rax]
  406e3e:	mov    rdi,rax
  406e41:	call   4170ca <flatcc_builder_end_struct@@Base>
  406e46:	mov    edx,eax
  406e48:	mov    rax,QWORD PTR [rbp-0x30]
  406e4c:	mov    DWORD PTR [rax],edx
  406e4e:	mov    rax,QWORD PTR [rbp-0x30]
  406e52:	mov    eax,DWORD PTR [rax]
  406e54:	test   eax,eax
  406e56:	je     406e61 <_start@@Base+0x3b51>
  406e58:	mov    rax,QWORD PTR [rbp-0x20]
  406e5c:	jmp    406e7b <_start@@Base+0x3b6b>
  406e5e:	nop
  406e5f:	jmp    406e62 <_start@@Base+0x3b52>
  406e61:	nop
  406e62:	mov    rdx,QWORD PTR [rbp-0x28]
  406e66:	mov    rsi,QWORD PTR [rbp-0x20]
  406e6a:	mov    rax,QWORD PTR [rbp-0x18]
  406e6e:	mov    ecx,0x21
  406e73:	mov    rdi,rax
  406e76:	call   41f09d <flatcc_json_parser_set_error@@Base>
  406e7b:	leave  
  406e7c:	ret    
  406e7d:	endbr64 
  406e81:	push   rbp
  406e82:	mov    rbp,rsp
  406e85:	sub    rsp,0x30
  406e89:	mov    QWORD PTR [rbp-0x18],rdi
  406e8d:	mov    QWORD PTR [rbp-0x20],rsi
  406e91:	mov    QWORD PTR [rbp-0x28],rdx
  406e95:	mov    QWORD PTR [rbp-0x30],rcx
  406e99:	mov    rax,QWORD PTR fs:0x28
  406ea2:	mov    QWORD PTR [rbp-0x8],rax
  406ea6:	xor    eax,eax
  406ea8:	mov    rax,QWORD PTR [rbp-0x30]
  406eac:	mov    DWORD PTR [rax],0x0
  406eb2:	mov    rax,QWORD PTR [rbp-0x18]
  406eb6:	mov    rax,QWORD PTR [rax]
  406eb9:	mov    esi,0x0
  406ebe:	mov    rdi,rax
  406ec1:	call   417b80 <flatcc_builder_start_table@@Base>
  406ec6:	test   eax,eax
  406ec8:	jne    406f77 <_start@@Base+0x3c67>
  406ece:	lea    rcx,[rbp-0xc]
  406ed2:	mov    rdx,QWORD PTR [rbp-0x28]
  406ed6:	mov    rsi,QWORD PTR [rbp-0x20]
  406eda:	mov    rax,QWORD PTR [rbp-0x18]
  406ede:	mov    rdi,rax
  406ee1:	call   403ed6 <_start@@Base+0xbc6>
  406ee6:	mov    QWORD PTR [rbp-0x20],rax
  406eea:	jmp    406f3e <_start@@Base+0x3c2e>
  406eec:	mov    rdx,QWORD PTR [rbp-0x28]
  406ef0:	mov    rcx,QWORD PTR [rbp-0x20]
  406ef4:	mov    rax,QWORD PTR [rbp-0x18]
  406ef8:	mov    rsi,rcx
  406efb:	mov    rdi,rax
  406efe:	call   403c48 <_start@@Base+0x938>
  406f03:	mov    QWORD PTR [rbp-0x20],rax
  406f07:	mov    rdx,QWORD PTR [rbp-0x28]
  406f0b:	mov    rcx,QWORD PTR [rbp-0x20]
  406f0f:	mov    rax,QWORD PTR [rbp-0x18]
  406f13:	mov    rsi,rcx
  406f16:	mov    rdi,rax
  406f19:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  406f1e:	mov    QWORD PTR [rbp-0x20],rax
  406f22:	lea    rcx,[rbp-0xc]
  406f26:	mov    rdx,QWORD PTR [rbp-0x28]
  406f2a:	mov    rsi,QWORD PTR [rbp-0x20]
  406f2e:	mov    rax,QWORD PTR [rbp-0x18]
  406f32:	mov    rdi,rax
  406f35:	call   403f93 <_start@@Base+0xc83>
  406f3a:	mov    QWORD PTR [rbp-0x20],rax
  406f3e:	mov    eax,DWORD PTR [rbp-0xc]
  406f41:	test   eax,eax
  406f43:	jne    406eec <_start@@Base+0x3bdc>
  406f45:	mov    rax,QWORD PTR [rbp-0x18]
  406f49:	mov    eax,DWORD PTR [rax+0x20]
  406f4c:	test   eax,eax
  406f4e:	jne    406f7a <_start@@Base+0x3c6a>
  406f50:	mov    rax,QWORD PTR [rbp-0x18]
  406f54:	mov    rax,QWORD PTR [rax]
  406f57:	mov    rdi,rax
  406f5a:	call   41868f <flatcc_builder_end_table@@Base>
  406f5f:	mov    edx,eax
  406f61:	mov    rax,QWORD PTR [rbp-0x30]
  406f65:	mov    DWORD PTR [rax],edx
  406f67:	mov    rax,QWORD PTR [rbp-0x30]
  406f6b:	mov    eax,DWORD PTR [rax]
  406f6d:	test   eax,eax
  406f6f:	je     406f7d <_start@@Base+0x3c6d>
  406f71:	mov    rax,QWORD PTR [rbp-0x20]
  406f75:	jmp    406f97 <_start@@Base+0x3c87>
  406f77:	nop
  406f78:	jmp    406f7e <_start@@Base+0x3c6e>
  406f7a:	nop
  406f7b:	jmp    406f7e <_start@@Base+0x3c6e>
  406f7d:	nop
  406f7e:	mov    rdx,QWORD PTR [rbp-0x28]
  406f82:	mov    rsi,QWORD PTR [rbp-0x20]
  406f86:	mov    rax,QWORD PTR [rbp-0x18]
  406f8a:	mov    ecx,0x21
  406f8f:	mov    rdi,rax
  406f92:	call   41f09d <flatcc_json_parser_set_error@@Base>
  406f97:	mov    rdi,QWORD PTR [rbp-0x8]
  406f9b:	xor    rdi,QWORD PTR fs:0x28
  406fa4:	je     406fab <_start@@Base+0x3c9b>
  406fa6:	call   403200 <__stack_chk_fail@plt>
  406fab:	leave  
  406fac:	ret    
  406fad:	endbr64 
  406fb1:	push   rbp
  406fb2:	mov    rbp,rsp
  406fb5:	sub    rsp,0x30
  406fb9:	mov    QWORD PTR [rbp-0x18],rdi
  406fbd:	mov    QWORD PTR [rbp-0x20],rsi
  406fc1:	mov    QWORD PTR [rbp-0x28],rdx
  406fc5:	mov    QWORD PTR [rbp-0x30],rcx
  406fc9:	mov    rax,QWORD PTR fs:0x28
  406fd2:	mov    QWORD PTR [rbp-0x8],rax
  406fd6:	xor    eax,eax
  406fd8:	mov    rax,QWORD PTR [rbp-0x30]
  406fdc:	mov    DWORD PTR [rax],0x0
  406fe2:	mov    rax,QWORD PTR [rbp-0x18]
  406fe6:	mov    rax,QWORD PTR [rax]
  406fe9:	mov    esi,0x0
  406fee:	mov    rdi,rax
  406ff1:	call   417b80 <flatcc_builder_start_table@@Base>
  406ff6:	test   eax,eax
  406ff8:	jne    4070a7 <_start@@Base+0x3d97>
  406ffe:	lea    rcx,[rbp-0xc]
  407002:	mov    rdx,QWORD PTR [rbp-0x28]
  407006:	mov    rsi,QWORD PTR [rbp-0x20]
  40700a:	mov    rax,QWORD PTR [rbp-0x18]
  40700e:	mov    rdi,rax
  407011:	call   403ed6 <_start@@Base+0xbc6>
  407016:	mov    QWORD PTR [rbp-0x20],rax
  40701a:	jmp    40706e <_start@@Base+0x3d5e>
  40701c:	mov    rdx,QWORD PTR [rbp-0x28]
  407020:	mov    rcx,QWORD PTR [rbp-0x20]
  407024:	mov    rax,QWORD PTR [rbp-0x18]
  407028:	mov    rsi,rcx
  40702b:	mov    rdi,rax
  40702e:	call   403c48 <_start@@Base+0x938>
  407033:	mov    QWORD PTR [rbp-0x20],rax
  407037:	mov    rdx,QWORD PTR [rbp-0x28]
  40703b:	mov    rcx,QWORD PTR [rbp-0x20]
  40703f:	mov    rax,QWORD PTR [rbp-0x18]
  407043:	mov    rsi,rcx
  407046:	mov    rdi,rax
  407049:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40704e:	mov    QWORD PTR [rbp-0x20],rax
  407052:	lea    rcx,[rbp-0xc]
  407056:	mov    rdx,QWORD PTR [rbp-0x28]
  40705a:	mov    rsi,QWORD PTR [rbp-0x20]
  40705e:	mov    rax,QWORD PTR [rbp-0x18]
  407062:	mov    rdi,rax
  407065:	call   403f93 <_start@@Base+0xc83>
  40706a:	mov    QWORD PTR [rbp-0x20],rax
  40706e:	mov    eax,DWORD PTR [rbp-0xc]
  407071:	test   eax,eax
  407073:	jne    40701c <_start@@Base+0x3d0c>
  407075:	mov    rax,QWORD PTR [rbp-0x18]
  407079:	mov    eax,DWORD PTR [rax+0x20]
  40707c:	test   eax,eax
  40707e:	jne    4070aa <_start@@Base+0x3d9a>
  407080:	mov    rax,QWORD PTR [rbp-0x18]
  407084:	mov    rax,QWORD PTR [rax]
  407087:	mov    rdi,rax
  40708a:	call   41868f <flatcc_builder_end_table@@Base>
  40708f:	mov    edx,eax
  407091:	mov    rax,QWORD PTR [rbp-0x30]
  407095:	mov    DWORD PTR [rax],edx
  407097:	mov    rax,QWORD PTR [rbp-0x30]
  40709b:	mov    eax,DWORD PTR [rax]
  40709d:	test   eax,eax
  40709f:	je     4070ad <_start@@Base+0x3d9d>
  4070a1:	mov    rax,QWORD PTR [rbp-0x20]
  4070a5:	jmp    4070c7 <_start@@Base+0x3db7>
  4070a7:	nop
  4070a8:	jmp    4070ae <_start@@Base+0x3d9e>
  4070aa:	nop
  4070ab:	jmp    4070ae <_start@@Base+0x3d9e>
  4070ad:	nop
  4070ae:	mov    rdx,QWORD PTR [rbp-0x28]
  4070b2:	mov    rsi,QWORD PTR [rbp-0x20]
  4070b6:	mov    rax,QWORD PTR [rbp-0x18]
  4070ba:	mov    ecx,0x21
  4070bf:	mov    rdi,rax
  4070c2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4070c7:	mov    rdi,QWORD PTR [rbp-0x8]
  4070cb:	xor    rdi,QWORD PTR fs:0x28
  4070d4:	je     4070db <_start@@Base+0x3dcb>
  4070d6:	call   403200 <__stack_chk_fail@plt>
  4070db:	leave  
  4070dc:	ret    
  4070dd:	endbr64 
  4070e1:	push   rbp
  4070e2:	mov    rbp,rsp
  4070e5:	sub    rsp,0x30
  4070e9:	mov    QWORD PTR [rbp-0x8],rdi
  4070ed:	mov    QWORD PTR [rbp-0x10],rsi
  4070f1:	mov    QWORD PTR [rbp-0x18],rdx
  4070f5:	mov    eax,ecx
  4070f7:	mov    QWORD PTR [rbp-0x28],r8
  4070fb:	mov    BYTE PTR [rbp-0x1c],al
  4070fe:	mov    rax,QWORD PTR [rbp-0x28]
  407102:	mov    DWORD PTR [rax],0x0
  407108:	movzx  eax,BYTE PTR [rbp-0x1c]
  40710c:	test   eax,eax
  40710e:	je     407117 <_start@@Base+0x3e07>
  407110:	cmp    eax,0x1
  407113:	je     407133 <_start@@Base+0x3e23>
  407115:	jmp    40715d <_start@@Base+0x3e4d>
  407117:	mov    rdx,QWORD PTR [rbp-0x18]
  40711b:	mov    rcx,QWORD PTR [rbp-0x10]
  40711f:	mov    rax,QWORD PTR [rbp-0x8]
  407123:	mov    rsi,rcx
  407126:	mov    rdi,rax
  407129:	call   404950 <_start@@Base+0x1640>
  40712e:	jmp    4071ce <_start@@Base+0x3ebe>
  407133:	mov    rcx,QWORD PTR [rbp-0x28]
  407137:	mov    rdx,QWORD PTR [rbp-0x18]
  40713b:	mov    rsi,QWORD PTR [rbp-0x10]
  40713f:	mov    rax,QWORD PTR [rbp-0x8]
  407143:	mov    rdi,rax
  407146:	call   406e7d <_start@@Base+0x3b6d>
  40714b:	mov    QWORD PTR [rbp-0x10],rax
  40714f:	nop
  407150:	mov    rax,QWORD PTR [rbp-0x8]
  407154:	mov    eax,DWORD PTR [rax+0x20]
  407157:	test   eax,eax
  407159:	je     4071a5 <_start@@Base+0x3e95>
  40715b:	jmp    40719f <_start@@Base+0x3e8f>
  40715d:	mov    rax,QWORD PTR [rbp-0x8]
  407161:	mov    eax,DWORD PTR [rax+0x10]
  407164:	and    eax,0x1
  407167:	test   eax,eax
  407169:	jne    407186 <_start@@Base+0x3e76>
  40716b:	mov    rdx,QWORD PTR [rbp-0x18]
  40716f:	mov    rsi,QWORD PTR [rbp-0x10]
  407173:	mov    rax,QWORD PTR [rbp-0x8]
  407177:	mov    ecx,0xf
  40717c:	mov    rdi,rax
  40717f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  407184:	jmp    4071ce <_start@@Base+0x3ebe>
  407186:	mov    rdx,QWORD PTR [rbp-0x18]
  40718a:	mov    rcx,QWORD PTR [rbp-0x10]
  40718e:	mov    rax,QWORD PTR [rbp-0x8]
  407192:	mov    rsi,rcx
  407195:	mov    rdi,rax
  407198:	call   42017c <flatcc_json_parser_generic_json@@Base>
  40719d:	jmp    4071ce <_start@@Base+0x3ebe>
  40719f:	mov    rax,QWORD PTR [rbp-0x10]
  4071a3:	jmp    4071ce <_start@@Base+0x3ebe>
  4071a5:	mov    rax,QWORD PTR [rbp-0x28]
  4071a9:	mov    eax,DWORD PTR [rax]
  4071ab:	test   eax,eax
  4071ad:	jne    4071ca <_start@@Base+0x3eba>
  4071af:	mov    rdx,QWORD PTR [rbp-0x18]
  4071b3:	mov    rsi,QWORD PTR [rbp-0x10]
  4071b7:	mov    rax,QWORD PTR [rbp-0x8]
  4071bb:	mov    ecx,0x21
  4071c0:	mov    rdi,rax
  4071c3:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4071c8:	jmp    4071ce <_start@@Base+0x3ebe>
  4071ca:	mov    rax,QWORD PTR [rbp-0x10]
  4071ce:	leave  
  4071cf:	ret    
  4071d0:	endbr64 
  4071d4:	push   rbp
  4071d5:	mov    rbp,rsp
  4071d8:	mov    eax,edi
  4071da:	mov    BYTE PTR [rbp-0x4],al
  4071dd:	movzx  eax,BYTE PTR [rbp-0x4]
  4071e1:	test   eax,eax
  4071e3:	je     4071ec <_start@@Base+0x3edc>
  4071e5:	cmp    eax,0x1
  4071e8:	je     4071f3 <_start@@Base+0x3ee3>
  4071ea:	jmp    4071fa <_start@@Base+0x3eea>
  4071ec:	mov    eax,0x1
  4071f1:	jmp    4071ff <_start@@Base+0x3eef>
  4071f3:	mov    eax,0x1
  4071f8:	jmp    4071ff <_start@@Base+0x3eef>
  4071fa:	mov    eax,0x0
  4071ff:	pop    rbp
  407200:	ret    
  407201:	endbr64 
  407205:	push   rbp
  407206:	mov    rbp,rsp
  407209:	sub    rsp,0x50
  40720d:	mov    QWORD PTR [rbp-0x28],rdi
  407211:	mov    QWORD PTR [rbp-0x30],rsi
  407215:	mov    QWORD PTR [rbp-0x38],rdx
  407219:	mov    QWORD PTR [rbp-0x40],rcx
  40721d:	mov    QWORD PTR [rbp-0x48],r8
  407221:	mov    QWORD PTR [rbp-0x50],r9
  407225:	mov    rax,QWORD PTR [rbp-0x30]
  407229:	mov    QWORD PTR [rbp-0x18],rax
  40722d:	mov    rdx,QWORD PTR [rbp-0x38]
  407231:	mov    rax,QWORD PTR [rbp-0x30]
  407235:	mov    rsi,rdx
  407238:	mov    rdi,rax
  40723b:	call   403dd5 <_start@@Base+0xac5>
  407240:	mov    QWORD PTR [rbp-0x10],rax
  407244:	movabs rax,0x496e506172656e74
  40724e:	cmp    QWORD PTR [rbp-0x10],rax
  407252:	jne    40732c <_start@@Base+0x401c>
  407258:	add    QWORD PTR [rbp-0x30],0x8
  40725d:	mov    rdx,QWORD PTR [rbp-0x38]
  407261:	mov    rax,QWORD PTR [rbp-0x30]
  407265:	mov    rsi,rdx
  407268:	mov    rdi,rax
  40726b:	call   403dd5 <_start@@Base+0xac5>
  407270:	mov    QWORD PTR [rbp-0x10],rax
  407274:	movabs rax,0x4e616d6573706163
  40727e:	cmp    QWORD PTR [rbp-0x10],rax
  407282:	jne    407326 <_start@@Base+0x4016>
  407288:	add    QWORD PTR [rbp-0x30],0x8
  40728d:	mov    rdx,QWORD PTR [rbp-0x38]
  407291:	mov    rax,QWORD PTR [rbp-0x30]
  407295:	mov    rsi,rdx
  407298:	mov    rdi,rax
  40729b:	call   403dd5 <_start@@Base+0xac5>
  4072a0:	mov    QWORD PTR [rbp-0x10],rax
  4072a4:	movabs rax,0xff00000000000000
  4072ae:	and    rax,QWORD PTR [rbp-0x10]
  4072b2:	mov    rdx,rax
  4072b5:	movabs rax,0x6500000000000000
  4072bf:	cmp    rdx,rax
  4072c2:	jne    40731d <_start@@Base+0x400d>
  4072c4:	mov    rax,QWORD PTR [rbp-0x30]
  4072c8:	mov    QWORD PTR [rbp-0x8],rax
  4072cc:	mov    rcx,QWORD PTR [rbp-0x50]
  4072d0:	mov    rdx,QWORD PTR [rbp-0x38]
  4072d4:	mov    rsi,QWORD PTR [rbp-0x8]
  4072d8:	mov    rax,QWORD PTR [rbp-0x28]
  4072dc:	mov    r8,rcx
  4072df:	mov    ecx,0x1
  4072e4:	mov    rdi,rax
  4072e7:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  4072ec:	mov    QWORD PTR [rbp-0x30],rax
  4072f0:	mov    rax,QWORD PTR [rbp-0x30]
  4072f4:	cmp    rax,QWORD PTR [rbp-0x8]
  4072f8:	je     407314 <_start@@Base+0x4004>
  4072fa:	mov    rax,QWORD PTR [rbp-0x48]
  4072fe:	mov    QWORD PTR [rax],0x1
  407305:	mov    rax,QWORD PTR [rbp-0x40]
  407309:	mov    DWORD PTR [rax],0x0
  40730f:	jmp    4073a5 <_start@@Base+0x4095>
  407314:	mov    rax,QWORD PTR [rbp-0x18]
  407318:	jmp    4073a9 <_start@@Base+0x4099>
  40731d:	mov    rax,QWORD PTR [rbp-0x18]
  407321:	jmp    4073a9 <_start@@Base+0x4099>
  407326:	mov    rax,QWORD PTR [rbp-0x18]
  40732a:	jmp    4073a9 <_start@@Base+0x4099>
  40732c:	movabs rax,0xffffffff00000000
  407336:	and    rax,QWORD PTR [rbp-0x10]
  40733a:	mov    rdx,rax
  40733d:	movabs rax,0x4e4f4e4500000000
  407347:	cmp    rdx,rax
  40734a:	jne    40739f <_start@@Base+0x408f>
  40734c:	mov    rax,QWORD PTR [rbp-0x30]
  407350:	mov    QWORD PTR [rbp-0x8],rax
  407354:	mov    rcx,QWORD PTR [rbp-0x50]
  407358:	mov    rdx,QWORD PTR [rbp-0x38]
  40735c:	mov    rsi,QWORD PTR [rbp-0x8]
  407360:	mov    rax,QWORD PTR [rbp-0x28]
  407364:	mov    r8,rcx
  407367:	mov    ecx,0x4
  40736c:	mov    rdi,rax
  40736f:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407374:	mov    QWORD PTR [rbp-0x30],rax
  407378:	mov    rax,QWORD PTR [rbp-0x30]
  40737c:	cmp    rax,QWORD PTR [rbp-0x8]
  407380:	je     407399 <_start@@Base+0x4089>
  407382:	mov    rax,QWORD PTR [rbp-0x48]
  407386:	mov    QWORD PTR [rax],0x0
  40738d:	mov    rax,QWORD PTR [rbp-0x40]
  407391:	mov    DWORD PTR [rax],0x0
  407397:	jmp    4073a5 <_start@@Base+0x4095>
  407399:	mov    rax,QWORD PTR [rbp-0x18]
  40739d:	jmp    4073a9 <_start@@Base+0x4099>
  40739f:	mov    rax,QWORD PTR [rbp-0x18]
  4073a3:	jmp    4073a9 <_start@@Base+0x4099>
  4073a5:	mov    rax,QWORD PTR [rbp-0x30]
  4073a9:	leave  
  4073aa:	ret    
  4073ab:	endbr64 
  4073af:	push   rbp
  4073b0:	mov    rbp,rsp
  4073b3:	sub    rsp,0x50
  4073b7:	mov    QWORD PTR [rbp-0x28],rdi
  4073bb:	mov    QWORD PTR [rbp-0x30],rsi
  4073bf:	mov    QWORD PTR [rbp-0x38],rdx
  4073c3:	mov    QWORD PTR [rbp-0x40],rcx
  4073c7:	mov    QWORD PTR [rbp-0x48],r8
  4073cb:	mov    QWORD PTR [rbp-0x50],r9
  4073cf:	mov    rax,QWORD PTR [rbp-0x30]
  4073d3:	mov    QWORD PTR [rbp-0x18],rax
  4073d7:	mov    rdx,QWORD PTR [rbp-0x38]
  4073db:	mov    rax,QWORD PTR [rbp-0x30]
  4073df:	mov    rsi,rdx
  4073e2:	mov    rdi,rax
  4073e5:	call   403dd5 <_start@@Base+0xac5>
  4073ea:	mov    QWORD PTR [rbp-0x10],rax
  4073ee:	movabs rax,0x6e656731ffffffff
  4073f8:	cmp    QWORD PTR [rbp-0x10],rax
  4073fc:	ja     407484 <_start@@Base+0x4174>
  407402:	movabs rax,0xffffffff00000000
  40740c:	and    rax,QWORD PTR [rbp-0x10]
  407410:	mov    rdx,rax
  407413:	movabs rax,0x6e65673100000000
  40741d:	cmp    rdx,rax
  407420:	jne    40747b <_start@@Base+0x416b>
  407422:	mov    rax,QWORD PTR [rbp-0x30]
  407426:	mov    QWORD PTR [rbp-0x8],rax
  40742a:	mov    rcx,QWORD PTR [rbp-0x50]
  40742e:	mov    rdx,QWORD PTR [rbp-0x38]
  407432:	mov    rsi,QWORD PTR [rbp-0x8]
  407436:	mov    rax,QWORD PTR [rbp-0x28]
  40743a:	mov    r8,rcx
  40743d:	mov    ecx,0x4
  407442:	mov    rdi,rax
  407445:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  40744a:	mov    QWORD PTR [rbp-0x30],rax
  40744e:	mov    rax,QWORD PTR [rbp-0x30]
  407452:	cmp    rax,QWORD PTR [rbp-0x8]
  407456:	je     407472 <_start@@Base+0x4162>
  407458:	mov    rax,QWORD PTR [rbp-0x48]
  40745c:	mov    QWORD PTR [rax],0xfffffffffffffff4
  407463:	mov    rax,QWORD PTR [rbp-0x40]
  407467:	mov    DWORD PTR [rax],0x1
  40746d:	jmp    407570 <_start@@Base+0x4260>
  407472:	mov    rax,QWORD PTR [rbp-0x18]
  407476:	jmp    407574 <_start@@Base+0x4264>
  40747b:	mov    rax,QWORD PTR [rbp-0x18]
  40747f:	jmp    407574 <_start@@Base+0x4264>
  407484:	movabs rax,0xffffffff00000000
  40748e:	and    rax,QWORD PTR [rbp-0x10]
  407492:	mov    rdx,rax
  407495:	movabs rax,0x6e65673300000000
  40749f:	cmp    rdx,rax
  4074a2:	jne    4074f7 <_start@@Base+0x41e7>
  4074a4:	mov    rax,QWORD PTR [rbp-0x30]
  4074a8:	mov    QWORD PTR [rbp-0x8],rax
  4074ac:	mov    rcx,QWORD PTR [rbp-0x50]
  4074b0:	mov    rdx,QWORD PTR [rbp-0x38]
  4074b4:	mov    rsi,QWORD PTR [rbp-0x8]
  4074b8:	mov    rax,QWORD PTR [rbp-0x28]
  4074bc:	mov    r8,rcx
  4074bf:	mov    ecx,0x4
  4074c4:	mov    rdi,rax
  4074c7:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  4074cc:	mov    QWORD PTR [rbp-0x30],rax
  4074d0:	mov    rax,QWORD PTR [rbp-0x30]
  4074d4:	cmp    rax,QWORD PTR [rbp-0x8]
  4074d8:	je     4074f1 <_start@@Base+0x41e1>
  4074da:	mov    rax,QWORD PTR [rbp-0x48]
  4074de:	mov    QWORD PTR [rax],0xfffffffffffffff6
  4074e5:	mov    rax,QWORD PTR [rbp-0x40]
  4074e9:	mov    DWORD PTR [rax],0x1
  4074ef:	jmp    407570 <_start@@Base+0x4260>
  4074f1:	mov    rax,QWORD PTR [rbp-0x18]
  4074f5:	jmp    407574 <_start@@Base+0x4264>
  4074f7:	movabs rax,0xffffffff00000000
  407501:	and    rax,QWORD PTR [rbp-0x10]
  407505:	mov    rdx,rax
  407508:	movabs rax,0x6e65673200000000
  407512:	cmp    rdx,rax
  407515:	jne    40756a <_start@@Base+0x425a>
  407517:	mov    rax,QWORD PTR [rbp-0x30]
  40751b:	mov    QWORD PTR [rbp-0x8],rax
  40751f:	mov    rcx,QWORD PTR [rbp-0x50]
  407523:	mov    rdx,QWORD PTR [rbp-0x38]
  407527:	mov    rsi,QWORD PTR [rbp-0x8]
  40752b:	mov    rax,QWORD PTR [rbp-0x28]
  40752f:	mov    r8,rcx
  407532:	mov    ecx,0x4
  407537:	mov    rdi,rax
  40753a:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  40753f:	mov    QWORD PTR [rbp-0x30],rax
  407543:	mov    rax,QWORD PTR [rbp-0x30]
  407547:	cmp    rax,QWORD PTR [rbp-0x8]
  40754b:	je     407564 <_start@@Base+0x4254>
  40754d:	mov    rax,QWORD PTR [rbp-0x48]
  407551:	mov    QWORD PTR [rax],0xfffffffffffffff5
  407558:	mov    rax,QWORD PTR [rbp-0x40]
  40755c:	mov    DWORD PTR [rax],0x1
  407562:	jmp    407570 <_start@@Base+0x4260>
  407564:	mov    rax,QWORD PTR [rbp-0x18]
  407568:	jmp    407574 <_start@@Base+0x4264>
  40756a:	mov    rax,QWORD PTR [rbp-0x18]
  40756e:	jmp    407574 <_start@@Base+0x4264>
  407570:	mov    rax,QWORD PTR [rbp-0x30]
  407574:	leave  
  407575:	ret    
  407576:	endbr64 
  40757a:	push   rbp
  40757b:	mov    rbp,rsp
  40757e:	sub    rsp,0x50
  407582:	mov    QWORD PTR [rbp-0x28],rdi
  407586:	mov    QWORD PTR [rbp-0x30],rsi
  40758a:	mov    QWORD PTR [rbp-0x38],rdx
  40758e:	mov    QWORD PTR [rbp-0x40],rcx
  407592:	mov    QWORD PTR [rbp-0x48],r8
  407596:	mov    QWORD PTR [rbp-0x50],r9
  40759a:	mov    rax,QWORD PTR [rbp-0x30]
  40759e:	mov    QWORD PTR [rbp-0x18],rax
  4075a2:	mov    rdx,QWORD PTR [rbp-0x38]
  4075a6:	mov    rax,QWORD PTR [rbp-0x30]
  4075aa:	mov    rsi,rdx
  4075ad:	mov    rdi,rax
  4075b0:	call   403dd5 <_start@@Base+0xac5>
  4075b5:	mov    QWORD PTR [rbp-0x10],rax
  4075b9:	movabs rax,0x696e7431ffffffff
  4075c3:	cmp    QWORD PTR [rbp-0x10],rax
  4075c7:	ja     40764f <_start@@Base+0x433f>
  4075cd:	movabs rax,0xffffffff00000000
  4075d7:	and    rax,QWORD PTR [rbp-0x10]
  4075db:	mov    rdx,rax
  4075de:	movabs rax,0x696e743100000000
  4075e8:	cmp    rdx,rax
  4075eb:	jne    407646 <_start@@Base+0x4336>
  4075ed:	mov    rax,QWORD PTR [rbp-0x30]
  4075f1:	mov    QWORD PTR [rbp-0x8],rax
  4075f5:	mov    rcx,QWORD PTR [rbp-0x50]
  4075f9:	mov    rdx,QWORD PTR [rbp-0x38]
  4075fd:	mov    rsi,QWORD PTR [rbp-0x8]
  407601:	mov    rax,QWORD PTR [rbp-0x28]
  407605:	mov    r8,rcx
  407608:	mov    ecx,0x4
  40760d:	mov    rdi,rax
  407610:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407615:	mov    QWORD PTR [rbp-0x30],rax
  407619:	mov    rax,QWORD PTR [rbp-0x30]
  40761d:	cmp    rax,QWORD PTR [rbp-0x8]
  407621:	je     40763d <_start@@Base+0x432d>
  407623:	mov    rax,QWORD PTR [rbp-0x48]
  407627:	mov    QWORD PTR [rax],0x2
  40762e:	mov    rax,QWORD PTR [rbp-0x40]
  407632:	mov    DWORD PTR [rax],0x0
  407638:	jmp    4077c3 <_start@@Base+0x44b3>
  40763d:	mov    rax,QWORD PTR [rbp-0x18]
  407641:	jmp    4077c7 <_start@@Base+0x44b7>
  407646:	mov    rax,QWORD PTR [rbp-0x18]
  40764a:	jmp    4077c7 <_start@@Base+0x44b7>
  40764f:	movabs rax,0x696e746e6566ffff
  407659:	cmp    QWORD PTR [rbp-0x10],rax
  40765d:	ja     4076e5 <_start@@Base+0x43d5>
  407663:	movabs rax,0xffffffff00000000
  40766d:	and    rax,QWORD PTR [rbp-0x10]
  407671:	mov    rdx,rax
  407674:	movabs rax,0x696e743200000000
  40767e:	cmp    rdx,rax
  407681:	jne    4076dc <_start@@Base+0x43cc>
  407683:	mov    rax,QWORD PTR [rbp-0x30]
  407687:	mov    QWORD PTR [rbp-0x8],rax
  40768b:	mov    rcx,QWORD PTR [rbp-0x50]
  40768f:	mov    rdx,QWORD PTR [rbp-0x38]
  407693:	mov    rsi,QWORD PTR [rbp-0x8]
  407697:	mov    rax,QWORD PTR [rbp-0x28]
  40769b:	mov    r8,rcx
  40769e:	mov    ecx,0x4
  4076a3:	mov    rdi,rax
  4076a6:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  4076ab:	mov    QWORD PTR [rbp-0x30],rax
  4076af:	mov    rax,QWORD PTR [rbp-0x30]
  4076b3:	cmp    rax,QWORD PTR [rbp-0x8]
  4076b7:	je     4076d3 <_start@@Base+0x43c3>
  4076b9:	mov    rax,QWORD PTR [rbp-0x48]
  4076bd:	mov    QWORD PTR [rax],0x2a
  4076c4:	mov    rax,QWORD PTR [rbp-0x40]
  4076c8:	mov    DWORD PTR [rax],0x0
  4076ce:	jmp    4077c3 <_start@@Base+0x44b3>
  4076d3:	mov    rax,QWORD PTR [rbp-0x18]
  4076d7:	jmp    4077c7 <_start@@Base+0x44b7>
  4076dc:	mov    rax,QWORD PTR [rbp-0x18]
  4076e0:	jmp    4077c7 <_start@@Base+0x44b7>
  4076e5:	mov    rax,QWORD PTR [rbp-0x10]
  4076e9:	mov    al,0x0
  4076eb:	mov    rdx,rax
  4076ee:	movabs rax,0x696e746e65673200
  4076f8:	cmp    rdx,rax
  4076fb:	jne    407750 <_start@@Base+0x4440>
  4076fd:	mov    rax,QWORD PTR [rbp-0x30]
  407701:	mov    QWORD PTR [rbp-0x8],rax
  407705:	mov    rcx,QWORD PTR [rbp-0x50]
  407709:	mov    rdx,QWORD PTR [rbp-0x38]
  40770d:	mov    rsi,QWORD PTR [rbp-0x8]
  407711:	mov    rax,QWORD PTR [rbp-0x28]
  407715:	mov    r8,rcx
  407718:	mov    ecx,0x7
  40771d:	mov    rdi,rax
  407720:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407725:	mov    QWORD PTR [rbp-0x30],rax
  407729:	mov    rax,QWORD PTR [rbp-0x30]
  40772d:	cmp    rax,QWORD PTR [rbp-0x8]
  407731:	je     40774a <_start@@Base+0x443a>
  407733:	mov    rax,QWORD PTR [rbp-0x48]
  407737:	mov    QWORD PTR [rax],0xffffffffffffffff
  40773e:	mov    rax,QWORD PTR [rbp-0x40]
  407742:	mov    DWORD PTR [rax],0x1
  407748:	jmp    4077c3 <_start@@Base+0x44b3>
  40774a:	mov    rax,QWORD PTR [rbp-0x18]
  40774e:	jmp    4077c7 <_start@@Base+0x44b7>
  407750:	mov    rax,QWORD PTR [rbp-0x10]
  407754:	mov    ax,0x0
  407758:	mov    rdx,rax
  40775b:	movabs rax,0x696e746e65670000
  407765:	cmp    rdx,rax
  407768:	jne    4077bd <_start@@Base+0x44ad>
  40776a:	mov    rax,QWORD PTR [rbp-0x30]
  40776e:	mov    QWORD PTR [rbp-0x8],rax
  407772:	mov    rcx,QWORD PTR [rbp-0x50]
  407776:	mov    rdx,QWORD PTR [rbp-0x38]
  40777a:	mov    rsi,QWORD PTR [rbp-0x8]
  40777e:	mov    rax,QWORD PTR [rbp-0x28]
  407782:	mov    r8,rcx
  407785:	mov    ecx,0x6
  40778a:	mov    rdi,rax
  40778d:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407792:	mov    QWORD PTR [rbp-0x30],rax
  407796:	mov    rax,QWORD PTR [rbp-0x30]
  40779a:	cmp    rax,QWORD PTR [rbp-0x8]
  40779e:	je     4077b7 <_start@@Base+0x44a7>
  4077a0:	mov    rax,QWORD PTR [rbp-0x48]
  4077a4:	mov    QWORD PTR [rax],0xfffffffffffffffe
  4077ab:	mov    rax,QWORD PTR [rbp-0x40]
  4077af:	mov    DWORD PTR [rax],0x1
  4077b5:	jmp    4077c3 <_start@@Base+0x44b3>
  4077b7:	mov    rax,QWORD PTR [rbp-0x18]
  4077bb:	jmp    4077c7 <_start@@Base+0x44b7>
  4077bd:	mov    rax,QWORD PTR [rbp-0x18]
  4077c1:	jmp    4077c7 <_start@@Base+0x44b7>
  4077c3:	mov    rax,QWORD PTR [rbp-0x30]
  4077c7:	leave  
  4077c8:	ret    
  4077c9:	endbr64 
  4077cd:	push   rbp
  4077ce:	mov    rbp,rsp
  4077d1:	sub    rsp,0x50
  4077d5:	mov    QWORD PTR [rbp-0x28],rdi
  4077d9:	mov    QWORD PTR [rbp-0x30],rsi
  4077dd:	mov    QWORD PTR [rbp-0x38],rdx
  4077e1:	mov    QWORD PTR [rbp-0x40],rcx
  4077e5:	mov    QWORD PTR [rbp-0x48],r8
  4077e9:	mov    QWORD PTR [rbp-0x50],r9
  4077ed:	mov    rax,QWORD PTR [rbp-0x30]
  4077f1:	mov    QWORD PTR [rbp-0x18],rax
  4077f5:	mov    rdx,QWORD PTR [rbp-0x38]
  4077f9:	mov    rax,QWORD PTR [rbp-0x30]
  4077fd:	mov    rsi,rdx
  407800:	mov    rdi,rax
  407803:	call   403dd5 <_start@@Base+0xac5>
  407808:	mov    QWORD PTR [rbp-0x10],rax
  40780c:	movabs rax,0x68657831ffffffff
  407816:	cmp    QWORD PTR [rbp-0x10],rax
  40781a:	ja     4078a2 <_start@@Base+0x4592>
  407820:	movabs rax,0xffffffff00000000
  40782a:	and    rax,QWORD PTR [rbp-0x10]
  40782e:	mov    rdx,rax
  407831:	movabs rax,0x6865783100000000
  40783b:	cmp    rdx,rax
  40783e:	jne    407899 <_start@@Base+0x4589>
  407840:	mov    rax,QWORD PTR [rbp-0x30]
  407844:	mov    QWORD PTR [rbp-0x8],rax
  407848:	mov    rcx,QWORD PTR [rbp-0x50]
  40784c:	mov    rdx,QWORD PTR [rbp-0x38]
  407850:	mov    rsi,QWORD PTR [rbp-0x8]
  407854:	mov    rax,QWORD PTR [rbp-0x28]
  407858:	mov    r8,rcx
  40785b:	mov    ecx,0x4
  407860:	mov    rdi,rax
  407863:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407868:	mov    QWORD PTR [rbp-0x30],rax
  40786c:	mov    rax,QWORD PTR [rbp-0x30]
  407870:	cmp    rax,QWORD PTR [rbp-0x8]
  407874:	je     407890 <_start@@Base+0x4580>
  407876:	mov    rax,QWORD PTR [rbp-0x48]
  40787a:	mov    QWORD PTR [rax],0x3
  407881:	mov    rax,QWORD PTR [rbp-0x40]
  407885:	mov    DWORD PTR [rax],0x0
  40788b:	jmp    407988 <_start@@Base+0x4678>
  407890:	mov    rax,QWORD PTR [rbp-0x18]
  407894:	jmp    40798c <_start@@Base+0x467c>
  407899:	mov    rax,QWORD PTR [rbp-0x18]
  40789d:	jmp    40798c <_start@@Base+0x467c>
  4078a2:	mov    rax,QWORD PTR [rbp-0x10]
  4078a6:	mov    ax,0x0
  4078aa:	mov    rdx,rax
  4078ad:	movabs rax,0x6865786e65670000
  4078b7:	cmp    rdx,rax
  4078ba:	jne    40790f <_start@@Base+0x45ff>
  4078bc:	mov    rax,QWORD PTR [rbp-0x30]
  4078c0:	mov    QWORD PTR [rbp-0x8],rax
  4078c4:	mov    rcx,QWORD PTR [rbp-0x50]
  4078c8:	mov    rdx,QWORD PTR [rbp-0x38]
  4078cc:	mov    rsi,QWORD PTR [rbp-0x8]
  4078d0:	mov    rax,QWORD PTR [rbp-0x28]
  4078d4:	mov    r8,rcx
  4078d7:	mov    ecx,0x6
  4078dc:	mov    rdi,rax
  4078df:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  4078e4:	mov    QWORD PTR [rbp-0x30],rax
  4078e8:	mov    rax,QWORD PTR [rbp-0x30]
  4078ec:	cmp    rax,QWORD PTR [rbp-0x8]
  4078f0:	je     407909 <_start@@Base+0x45f9>
  4078f2:	mov    rax,QWORD PTR [rbp-0x48]
  4078f6:	mov    QWORD PTR [rax],0xfffffffffffffffe
  4078fd:	mov    rax,QWORD PTR [rbp-0x40]
  407901:	mov    DWORD PTR [rax],0x1
  407907:	jmp    407988 <_start@@Base+0x4678>
  407909:	mov    rax,QWORD PTR [rbp-0x18]
  40790d:	jmp    40798c <_start@@Base+0x467c>
  40790f:	movabs rax,0xffffffff00000000
  407919:	and    rax,QWORD PTR [rbp-0x10]
  40791d:	mov    rdx,rax
  407920:	movabs rax,0x6865783200000000
  40792a:	cmp    rdx,rax
  40792d:	jne    407982 <_start@@Base+0x4672>
  40792f:	mov    rax,QWORD PTR [rbp-0x30]
  407933:	mov    QWORD PTR [rbp-0x8],rax
  407937:	mov    rcx,QWORD PTR [rbp-0x50]
  40793b:	mov    rdx,QWORD PTR [rbp-0x38]
  40793f:	mov    rsi,QWORD PTR [rbp-0x8]
  407943:	mov    rax,QWORD PTR [rbp-0x28]
  407947:	mov    r8,rcx
  40794a:	mov    ecx,0x4
  40794f:	mov    rdi,rax
  407952:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407957:	mov    QWORD PTR [rbp-0x30],rax
  40795b:	mov    rax,QWORD PTR [rbp-0x30]
  40795f:	cmp    rax,QWORD PTR [rbp-0x8]
  407963:	je     40797c <_start@@Base+0x466c>
  407965:	mov    rax,QWORD PTR [rbp-0x48]
  407969:	mov    QWORD PTR [rax],0x7eafbeaf
  407970:	mov    rax,QWORD PTR [rbp-0x40]
  407974:	mov    DWORD PTR [rax],0x0
  40797a:	jmp    407988 <_start@@Base+0x4678>
  40797c:	mov    rax,QWORD PTR [rbp-0x18]
  407980:	jmp    40798c <_start@@Base+0x467c>
  407982:	mov    rax,QWORD PTR [rbp-0x18]
  407986:	jmp    40798c <_start@@Base+0x467c>
  407988:	mov    rax,QWORD PTR [rbp-0x30]
  40798c:	leave  
  40798d:	ret    
  40798e:	endbr64 
  407992:	push   rbp
  407993:	mov    rbp,rsp
  407996:	sub    rsp,0x50
  40799a:	mov    QWORD PTR [rbp-0x28],rdi
  40799e:	mov    QWORD PTR [rbp-0x30],rsi
  4079a2:	mov    QWORD PTR [rbp-0x38],rdx
  4079a6:	mov    QWORD PTR [rbp-0x40],rcx
  4079aa:	mov    QWORD PTR [rbp-0x48],r8
  4079ae:	mov    QWORD PTR [rbp-0x50],r9
  4079b2:	mov    rax,QWORD PTR [rbp-0x30]
  4079b6:	mov    QWORD PTR [rbp-0x18],rax
  4079ba:	mov    rdx,QWORD PTR [rbp-0x38]
  4079be:	mov    rax,QWORD PTR [rbp-0x30]
  4079c2:	mov    rsi,rdx
  4079c5:	mov    rdi,rax
  4079c8:	call   403dd5 <_start@@Base+0xac5>
  4079cd:	mov    QWORD PTR [rbp-0x10],rax
  4079d1:	movabs rax,0x477265656dffffff
  4079db:	cmp    QWORD PTR [rbp-0x10],rax
  4079df:	ja     407a67 <_start@@Base+0x4757>
  4079e5:	movabs rax,0xffffffff00000000
  4079ef:	and    rax,QWORD PTR [rbp-0x10]
  4079f3:	mov    rdx,rax
  4079f6:	movabs rax,0x426c756500000000
  407a00:	cmp    rdx,rax
  407a03:	jne    407a5e <_start@@Base+0x474e>
  407a05:	mov    rax,QWORD PTR [rbp-0x30]
  407a09:	mov    QWORD PTR [rbp-0x8],rax
  407a0d:	mov    rcx,QWORD PTR [rbp-0x50]
  407a11:	mov    rdx,QWORD PTR [rbp-0x38]
  407a15:	mov    rsi,QWORD PTR [rbp-0x8]
  407a19:	mov    rax,QWORD PTR [rbp-0x28]
  407a1d:	mov    r8,rcx
  407a20:	mov    ecx,0x4
  407a25:	mov    rdi,rax
  407a28:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407a2d:	mov    QWORD PTR [rbp-0x30],rax
  407a31:	mov    rax,QWORD PTR [rbp-0x30]
  407a35:	cmp    rax,QWORD PTR [rbp-0x8]
  407a39:	je     407a55 <_start@@Base+0x4745>
  407a3b:	mov    rax,QWORD PTR [rbp-0x48]
  407a3f:	mov    QWORD PTR [rax],0x8
  407a46:	mov    rax,QWORD PTR [rbp-0x40]
  407a4a:	mov    DWORD PTR [rax],0x0
  407a50:	jmp    407b4f <_start@@Base+0x483f>
  407a55:	mov    rax,QWORD PTR [rbp-0x18]
  407a59:	jmp    407b53 <_start@@Base+0x4843>
  407a5e:	mov    rax,QWORD PTR [rbp-0x18]
  407a62:	jmp    407b53 <_start@@Base+0x4843>
  407a67:	movabs rax,0xffffff0000000000
  407a71:	and    rax,QWORD PTR [rbp-0x10]
  407a75:	mov    rdx,rax
  407a78:	movabs rax,0x5265640000000000
  407a82:	cmp    rdx,rax
  407a85:	jne    407ada <_start@@Base+0x47ca>
  407a87:	mov    rax,QWORD PTR [rbp-0x30]
  407a8b:	mov    QWORD PTR [rbp-0x8],rax
  407a8f:	mov    rcx,QWORD PTR [rbp-0x50]
  407a93:	mov    rdx,QWORD PTR [rbp-0x38]
  407a97:	mov    rsi,QWORD PTR [rbp-0x8]
  407a9b:	mov    rax,QWORD PTR [rbp-0x28]
  407a9f:	mov    r8,rcx
  407aa2:	mov    ecx,0x3
  407aa7:	mov    rdi,rax
  407aaa:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407aaf:	mov    QWORD PTR [rbp-0x30],rax
  407ab3:	mov    rax,QWORD PTR [rbp-0x30]
  407ab7:	cmp    rax,QWORD PTR [rbp-0x8]
  407abb:	je     407ad4 <_start@@Base+0x47c4>
  407abd:	mov    rax,QWORD PTR [rbp-0x48]
  407ac1:	mov    QWORD PTR [rax],0x1
  407ac8:	mov    rax,QWORD PTR [rbp-0x40]
  407acc:	mov    DWORD PTR [rax],0x0
  407ad2:	jmp    407b4f <_start@@Base+0x483f>
  407ad4:	mov    rax,QWORD PTR [rbp-0x18]
  407ad8:	jmp    407b53 <_start@@Base+0x4843>
  407ada:	mov    rax,QWORD PTR [rbp-0x10]
  407ade:	and    rax,0xffffffffff000000
  407ae4:	mov    rdx,rax
  407ae7:	movabs rax,0x477265656e000000
  407af1:	cmp    rdx,rax
  407af4:	jne    407b49 <_start@@Base+0x4839>
  407af6:	mov    rax,QWORD PTR [rbp-0x30]
  407afa:	mov    QWORD PTR [rbp-0x8],rax
  407afe:	mov    rcx,QWORD PTR [rbp-0x50]
  407b02:	mov    rdx,QWORD PTR [rbp-0x38]
  407b06:	mov    rsi,QWORD PTR [rbp-0x8]
  407b0a:	mov    rax,QWORD PTR [rbp-0x28]
  407b0e:	mov    r8,rcx
  407b11:	mov    ecx,0x5
  407b16:	mov    rdi,rax
  407b19:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407b1e:	mov    QWORD PTR [rbp-0x30],rax
  407b22:	mov    rax,QWORD PTR [rbp-0x30]
  407b26:	cmp    rax,QWORD PTR [rbp-0x8]
  407b2a:	je     407b43 <_start@@Base+0x4833>
  407b2c:	mov    rax,QWORD PTR [rbp-0x48]
  407b30:	mov    QWORD PTR [rax],0x2
  407b37:	mov    rax,QWORD PTR [rbp-0x40]
  407b3b:	mov    DWORD PTR [rax],0x0
  407b41:	jmp    407b4f <_start@@Base+0x483f>
  407b43:	mov    rax,QWORD PTR [rbp-0x18]
  407b47:	jmp    407b53 <_start@@Base+0x4843>
  407b49:	mov    rax,QWORD PTR [rbp-0x18]
  407b4d:	jmp    407b53 <_start@@Base+0x4843>
  407b4f:	mov    rax,QWORD PTR [rbp-0x30]
  407b53:	leave  
  407b54:	ret    
  407b55:	endbr64 
  407b59:	push   rbp
  407b5a:	mov    rbp,rsp
  407b5d:	sub    rsp,0x30
  407b61:	mov    QWORD PTR [rbp-0x8],rdi
  407b65:	mov    QWORD PTR [rbp-0x10],rsi
  407b69:	mov    QWORD PTR [rbp-0x18],rdx
  407b6d:	mov    eax,ecx
  407b6f:	mov    QWORD PTR [rbp-0x28],r8
  407b73:	mov    BYTE PTR [rbp-0x1c],al
  407b76:	mov    rax,QWORD PTR [rbp-0x28]
  407b7a:	mov    DWORD PTR [rax],0x0
  407b80:	movzx  eax,BYTE PTR [rbp-0x1c]
  407b84:	cmp    eax,0x4
  407b87:	ja     407c48 <_start@@Base+0x4938>
  407b8d:	mov    eax,eax
  407b8f:	lea    rdx,[rax*4+0x0]
  407b97:	lea    rax,[rip+0x1a556]        # 4220f4 <_IO_stdin_used@@Base+0xf4>
  407b9e:	mov    eax,DWORD PTR [rdx+rax*1]
  407ba1:	movsxd rdx,eax
  407ba4:	lea    rax,[rip+0x1a549]        # 4220f4 <_IO_stdin_used@@Base+0xf4>
  407bab:	add    rax,rdx
  407bae:	notrack jmp rax
  407bb1:	mov    rdx,QWORD PTR [rbp-0x18]
  407bb5:	mov    rcx,QWORD PTR [rbp-0x10]
  407bb9:	mov    rax,QWORD PTR [rbp-0x8]
  407bbd:	mov    rsi,rcx
  407bc0:	mov    rdi,rax
  407bc3:	call   404950 <_start@@Base+0x1640>
  407bc8:	jmp    407cc4 <_start@@Base+0x49b4>
  407bcd:	mov    rcx,QWORD PTR [rbp-0x28]
  407bd1:	mov    rdx,QWORD PTR [rbp-0x18]
  407bd5:	mov    rsi,QWORD PTR [rbp-0x10]
  407bd9:	mov    rax,QWORD PTR [rbp-0x8]
  407bdd:	mov    rdi,rax
  407be0:	call   40cbc1 <_start@@Base+0x98b1>
  407be5:	mov    QWORD PTR [rbp-0x10],rax
  407be9:	jmp    407c8a <_start@@Base+0x497a>
  407bee:	mov    rcx,QWORD PTR [rbp-0x28]
  407bf2:	mov    rdx,QWORD PTR [rbp-0x18]
  407bf6:	mov    rsi,QWORD PTR [rbp-0x10]
  407bfa:	mov    rax,QWORD PTR [rbp-0x8]
  407bfe:	mov    rdi,rax
  407c01:	call   408951 <_start@@Base+0x5641>
  407c06:	mov    QWORD PTR [rbp-0x10],rax
  407c0a:	jmp    407c8a <_start@@Base+0x497a>
  407c0c:	mov    rcx,QWORD PTR [rbp-0x28]
  407c10:	mov    rdx,QWORD PTR [rbp-0x18]
  407c14:	mov    rsi,QWORD PTR [rbp-0x10]
  407c18:	mov    rax,QWORD PTR [rbp-0x8]
  407c1c:	mov    rdi,rax
  407c1f:	call   406fad <_start@@Base+0x3c9d>
  407c24:	mov    QWORD PTR [rbp-0x10],rax
  407c28:	jmp    407c8a <_start@@Base+0x497a>
  407c2a:	mov    rcx,QWORD PTR [rbp-0x28]
  407c2e:	mov    rdx,QWORD PTR [rbp-0x18]
  407c32:	mov    rsi,QWORD PTR [rbp-0x10]
  407c36:	mov    rax,QWORD PTR [rbp-0x8]
  407c3a:	mov    rdi,rax
  407c3d:	call   40aa27 <_start@@Base+0x7717>
  407c42:	mov    QWORD PTR [rbp-0x10],rax
  407c46:	jmp    407c8a <_start@@Base+0x497a>
  407c48:	mov    rax,QWORD PTR [rbp-0x8]
  407c4c:	mov    eax,DWORD PTR [rax+0x10]
  407c4f:	and    eax,0x1
  407c52:	test   eax,eax
  407c54:	jne    407c71 <_start@@Base+0x4961>
  407c56:	mov    rdx,QWORD PTR [rbp-0x18]
  407c5a:	mov    rsi,QWORD PTR [rbp-0x10]
  407c5e:	mov    rax,QWORD PTR [rbp-0x8]
  407c62:	mov    ecx,0xf
  407c67:	mov    rdi,rax
  407c6a:	call   41f09d <flatcc_json_parser_set_error@@Base>
  407c6f:	jmp    407cc4 <_start@@Base+0x49b4>
  407c71:	mov    rdx,QWORD PTR [rbp-0x18]
  407c75:	mov    rcx,QWORD PTR [rbp-0x10]
  407c79:	mov    rax,QWORD PTR [rbp-0x8]
  407c7d:	mov    rsi,rcx
  407c80:	mov    rdi,rax
  407c83:	call   42017c <flatcc_json_parser_generic_json@@Base>
  407c88:	jmp    407cc4 <_start@@Base+0x49b4>
  407c8a:	mov    rax,QWORD PTR [rbp-0x8]
  407c8e:	mov    eax,DWORD PTR [rax+0x20]
  407c91:	test   eax,eax
  407c93:	je     407c9b <_start@@Base+0x498b>
  407c95:	mov    rax,QWORD PTR [rbp-0x10]
  407c99:	jmp    407cc4 <_start@@Base+0x49b4>
  407c9b:	mov    rax,QWORD PTR [rbp-0x28]
  407c9f:	mov    eax,DWORD PTR [rax]
  407ca1:	test   eax,eax
  407ca3:	jne    407cc0 <_start@@Base+0x49b0>
  407ca5:	mov    rdx,QWORD PTR [rbp-0x18]
  407ca9:	mov    rsi,QWORD PTR [rbp-0x10]
  407cad:	mov    rax,QWORD PTR [rbp-0x8]
  407cb1:	mov    ecx,0x21
  407cb6:	mov    rdi,rax
  407cb9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  407cbe:	jmp    407cc4 <_start@@Base+0x49b4>
  407cc0:	mov    rax,QWORD PTR [rbp-0x10]
  407cc4:	leave  
  407cc5:	ret    
  407cc6:	endbr64 
  407cca:	push   rbp
  407ccb:	mov    rbp,rsp
  407cce:	mov    eax,edi
  407cd0:	mov    BYTE PTR [rbp-0x4],al
  407cd3:	movzx  eax,BYTE PTR [rbp-0x4]
  407cd7:	cmp    eax,0x4
  407cda:	ja     407d23 <_start@@Base+0x4a13>
  407cdc:	mov    eax,eax
  407cde:	lea    rdx,[rax*4+0x0]
  407ce6:	lea    rax,[rip+0x1a41b]        # 422108 <_IO_stdin_used@@Base+0x108>
  407ced:	mov    eax,DWORD PTR [rdx+rax*1]
  407cf0:	movsxd rdx,eax
  407cf3:	lea    rax,[rip+0x1a40e]        # 422108 <_IO_stdin_used@@Base+0x108>
  407cfa:	add    rax,rdx
  407cfd:	notrack jmp rax
  407d00:	mov    eax,0x1
  407d05:	jmp    407d28 <_start@@Base+0x4a18>
  407d07:	mov    eax,0x1
  407d0c:	jmp    407d28 <_start@@Base+0x4a18>
  407d0e:	mov    eax,0x1
  407d13:	jmp    407d28 <_start@@Base+0x4a18>
  407d15:	mov    eax,0x1
  407d1a:	jmp    407d28 <_start@@Base+0x4a18>
  407d1c:	mov    eax,0x1
  407d21:	jmp    407d28 <_start@@Base+0x4a18>
  407d23:	mov    eax,0x0
  407d28:	pop    rbp
  407d29:	ret    
  407d2a:	endbr64 
  407d2e:	push   rbp
  407d2f:	mov    rbp,rsp
  407d32:	sub    rsp,0x50
  407d36:	mov    QWORD PTR [rbp-0x28],rdi
  407d3a:	mov    QWORD PTR [rbp-0x30],rsi
  407d3e:	mov    QWORD PTR [rbp-0x38],rdx
  407d42:	mov    QWORD PTR [rbp-0x40],rcx
  407d46:	mov    QWORD PTR [rbp-0x48],r8
  407d4a:	mov    QWORD PTR [rbp-0x50],r9
  407d4e:	mov    rax,QWORD PTR [rbp-0x30]
  407d52:	mov    QWORD PTR [rbp-0x18],rax
  407d56:	mov    rdx,QWORD PTR [rbp-0x38]
  407d5a:	mov    rax,QWORD PTR [rbp-0x30]
  407d5e:	mov    rsi,rdx
  407d61:	mov    rdi,rax
  407d64:	call   403dd5 <_start@@Base+0xac5>
  407d69:	mov    QWORD PTR [rbp-0x10],rax
  407d6d:	movabs rax,0x4d6f6e73746571ff
  407d77:	cmp    QWORD PTR [rbp-0x10],rax
  407d7b:	ja     407e03 <_start@@Base+0x4af3>
  407d81:	movabs rax,0xffffff0000000000
  407d8b:	and    rax,QWORD PTR [rbp-0x10]
  407d8f:	mov    rdx,rax
  407d92:	movabs rax,0x416c740000000000
  407d9c:	cmp    rdx,rax
  407d9f:	jne    407dfa <_start@@Base+0x4aea>
  407da1:	mov    rax,QWORD PTR [rbp-0x30]
  407da5:	mov    QWORD PTR [rbp-0x8],rax
  407da9:	mov    rcx,QWORD PTR [rbp-0x50]
  407dad:	mov    rdx,QWORD PTR [rbp-0x38]
  407db1:	mov    rsi,QWORD PTR [rbp-0x8]
  407db5:	mov    rax,QWORD PTR [rbp-0x28]
  407db9:	mov    r8,rcx
  407dbc:	mov    ecx,0x3
  407dc1:	mov    rdi,rax
  407dc4:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407dc9:	mov    QWORD PTR [rbp-0x30],rax
  407dcd:	mov    rax,QWORD PTR [rbp-0x30]
  407dd1:	cmp    rax,QWORD PTR [rbp-0x8]
  407dd5:	je     407df1 <_start@@Base+0x4ae1>
  407dd7:	mov    rax,QWORD PTR [rbp-0x48]
  407ddb:	mov    QWORD PTR [rax],0x4
  407de2:	mov    rax,QWORD PTR [rbp-0x40]
  407de6:	mov    DWORD PTR [rax],0x0
  407dec:	jmp    408027 <_start@@Base+0x4d17>
  407df1:	mov    rax,QWORD PTR [rbp-0x18]
  407df5:	jmp    40802b <_start@@Base+0x4d1b>
  407dfa:	mov    rax,QWORD PTR [rbp-0x18]
  407dfe:	jmp    40802b <_start@@Base+0x4d1b>
  407e03:	movabs rax,0x4d6f6e7374657232
  407e0d:	cmp    QWORD PTR [rbp-0x10],rax
  407e11:	jne    407e67 <_start@@Base+0x4b57>
  407e13:	mov    rax,QWORD PTR [rbp-0x30]
  407e17:	mov    QWORD PTR [rbp-0x8],rax
  407e1b:	mov    rcx,QWORD PTR [rbp-0x50]
  407e1f:	mov    rdx,QWORD PTR [rbp-0x38]
  407e23:	mov    rsi,QWORD PTR [rbp-0x8]
  407e27:	mov    rax,QWORD PTR [rbp-0x28]
  407e2b:	mov    r8,rcx
  407e2e:	mov    ecx,0x8
  407e33:	mov    rdi,rax
  407e36:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407e3b:	mov    QWORD PTR [rbp-0x30],rax
  407e3f:	mov    rax,QWORD PTR [rbp-0x30]
  407e43:	cmp    rax,QWORD PTR [rbp-0x8]
  407e47:	je     407ecf <_start@@Base+0x4bbf>
  407e4d:	mov    rax,QWORD PTR [rbp-0x48]
  407e51:	mov    QWORD PTR [rax],0x3
  407e58:	mov    rax,QWORD PTR [rbp-0x40]
  407e5c:	mov    DWORD PTR [rax],0x0
  407e62:	jmp    408027 <_start@@Base+0x4d17>
  407e67:	mov    rax,QWORD PTR [rbp-0x10]
  407e6b:	mov    al,0x0
  407e6d:	mov    rdx,rax
  407e70:	movabs rax,0x4d6f6e7374657200
  407e7a:	cmp    rdx,rax
  407e7d:	jne    407ed2 <_start@@Base+0x4bc2>
  407e7f:	mov    rax,QWORD PTR [rbp-0x30]
  407e83:	mov    QWORD PTR [rbp-0x8],rax
  407e87:	mov    rcx,QWORD PTR [rbp-0x50]
  407e8b:	mov    rdx,QWORD PTR [rbp-0x38]
  407e8f:	mov    rsi,QWORD PTR [rbp-0x8]
  407e93:	mov    rax,QWORD PTR [rbp-0x28]
  407e97:	mov    r8,rcx
  407e9a:	mov    ecx,0x7
  407e9f:	mov    rdi,rax
  407ea2:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407ea7:	mov    QWORD PTR [rbp-0x30],rax
  407eab:	mov    rax,QWORD PTR [rbp-0x30]
  407eaf:	cmp    rax,QWORD PTR [rbp-0x8]
  407eb3:	je     407ed5 <_start@@Base+0x4bc5>
  407eb5:	mov    rax,QWORD PTR [rbp-0x48]
  407eb9:	mov    QWORD PTR [rax],0x1
  407ec0:	mov    rax,QWORD PTR [rbp-0x40]
  407ec4:	mov    DWORD PTR [rax],0x0
  407eca:	jmp    408027 <_start@@Base+0x4d17>
  407ecf:	nop
  407ed0:	jmp    407ed6 <_start@@Base+0x4bc6>
  407ed2:	nop
  407ed3:	jmp    407ed6 <_start@@Base+0x4bc6>
  407ed5:	nop
  407ed6:	movabs rax,0xffffffff00000000
  407ee0:	and    rax,QWORD PTR [rbp-0x10]
  407ee4:	mov    rdx,rax
  407ee7:	movabs rax,0x4e4f4e4500000000
  407ef1:	cmp    rdx,rax
  407ef4:	jne    407f46 <_start@@Base+0x4c36>
  407ef6:	mov    rax,QWORD PTR [rbp-0x30]
  407efa:	mov    QWORD PTR [rbp-0x8],rax
  407efe:	mov    rcx,QWORD PTR [rbp-0x50]
  407f02:	mov    rdx,QWORD PTR [rbp-0x38]
  407f06:	mov    rsi,QWORD PTR [rbp-0x8]
  407f0a:	mov    rax,QWORD PTR [rbp-0x28]
  407f0e:	mov    r8,rcx
  407f11:	mov    ecx,0x4
  407f16:	mov    rdi,rax
  407f19:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407f1e:	mov    QWORD PTR [rbp-0x30],rax
  407f22:	mov    rax,QWORD PTR [rbp-0x30]
  407f26:	cmp    rax,QWORD PTR [rbp-0x8]
  407f2a:	je     407f49 <_start@@Base+0x4c39>
  407f2c:	mov    rax,QWORD PTR [rbp-0x48]
  407f30:	mov    QWORD PTR [rax],0x0
  407f37:	mov    rax,QWORD PTR [rbp-0x40]
  407f3b:	mov    DWORD PTR [rax],0x0
  407f41:	jmp    408027 <_start@@Base+0x4d17>
  407f46:	nop
  407f47:	jmp    407f4a <_start@@Base+0x4c3a>
  407f49:	nop
  407f4a:	movabs rax,0x5465737453696d70
  407f54:	cmp    QWORD PTR [rbp-0x10],rax
  407f58:	jne    408021 <_start@@Base+0x4d11>
  407f5e:	add    QWORD PTR [rbp-0x30],0x8
  407f63:	mov    rdx,QWORD PTR [rbp-0x38]
  407f67:	mov    rax,QWORD PTR [rbp-0x30]
  407f6b:	mov    rsi,rdx
  407f6e:	mov    rdi,rax
  407f71:	call   403dd5 <_start@@Base+0xac5>
  407f76:	mov    QWORD PTR [rbp-0x10],rax
  407f7a:	movabs rax,0x6c655461626c6557
  407f84:	cmp    QWORD PTR [rbp-0x10],rax
  407f88:	jne    40801b <_start@@Base+0x4d0b>
  407f8e:	add    QWORD PTR [rbp-0x30],0x8
  407f93:	mov    rdx,QWORD PTR [rbp-0x38]
  407f97:	mov    rax,QWORD PTR [rbp-0x30]
  407f9b:	mov    rsi,rdx
  407f9e:	mov    rdi,rax
  407fa1:	call   403dd5 <_start@@Base+0xac5>
  407fa6:	mov    QWORD PTR [rbp-0x10],rax
  407faa:	mov    rax,QWORD PTR [rbp-0x10]
  407fae:	mov    al,0x0
  407fb0:	mov    rdx,rax
  407fb3:	movabs rax,0x697468456e756d00
  407fbd:	cmp    rdx,rax
  407fc0:	jne    408015 <_start@@Base+0x4d05>
  407fc2:	mov    rax,QWORD PTR [rbp-0x30]
  407fc6:	mov    QWORD PTR [rbp-0x8],rax
  407fca:	mov    rcx,QWORD PTR [rbp-0x50]
  407fce:	mov    rdx,QWORD PTR [rbp-0x38]
  407fd2:	mov    rsi,QWORD PTR [rbp-0x8]
  407fd6:	mov    rax,QWORD PTR [rbp-0x28]
  407fda:	mov    r8,rcx
  407fdd:	mov    ecx,0x7
  407fe2:	mov    rdi,rax
  407fe5:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  407fea:	mov    QWORD PTR [rbp-0x30],rax
  407fee:	mov    rax,QWORD PTR [rbp-0x30]
  407ff2:	cmp    rax,QWORD PTR [rbp-0x8]
  407ff6:	je     40800f <_start@@Base+0x4cff>
  407ff8:	mov    rax,QWORD PTR [rbp-0x48]
  407ffc:	mov    QWORD PTR [rax],0x2
  408003:	mov    rax,QWORD PTR [rbp-0x40]
  408007:	mov    DWORD PTR [rax],0x0
  40800d:	jmp    408027 <_start@@Base+0x4d17>
  40800f:	mov    rax,QWORD PTR [rbp-0x18]
  408013:	jmp    40802b <_start@@Base+0x4d1b>
  408015:	mov    rax,QWORD PTR [rbp-0x18]
  408019:	jmp    40802b <_start@@Base+0x4d1b>
  40801b:	mov    rax,QWORD PTR [rbp-0x18]
  40801f:	jmp    40802b <_start@@Base+0x4d1b>
  408021:	mov    rax,QWORD PTR [rbp-0x18]
  408025:	jmp    40802b <_start@@Base+0x4d1b>
  408027:	mov    rax,QWORD PTR [rbp-0x30]
  40802b:	leave  
  40802c:	ret    
  40802d:	endbr64 
  408031:	push   rbp
  408032:	mov    rbp,rsp
  408035:	sub    rsp,0x50
  408039:	mov    QWORD PTR [rbp-0x38],rdi
  40803d:	mov    QWORD PTR [rbp-0x40],rsi
  408041:	mov    QWORD PTR [rbp-0x48],rdx
  408045:	mov    QWORD PTR [rbp-0x50],rcx
  408049:	mov    rax,QWORD PTR fs:0x28
  408052:	mov    QWORD PTR [rbp-0x8],rax
  408056:	xor    eax,eax
  408058:	lea    rcx,[rbp-0x24]
  40805c:	mov    rdx,QWORD PTR [rbp-0x48]
  408060:	mov    rsi,QWORD PTR [rbp-0x40]
  408064:	mov    rax,QWORD PTR [rbp-0x38]
  408068:	mov    rdi,rax
  40806b:	call   403ed6 <_start@@Base+0xbc6>
  408070:	mov    QWORD PTR [rbp-0x40],rax
  408074:	jmp    408308 <_start@@Base+0x4ff8>
  408079:	mov    rdx,QWORD PTR [rbp-0x48]
  40807d:	mov    rcx,QWORD PTR [rbp-0x40]
  408081:	mov    rax,QWORD PTR [rbp-0x38]
  408085:	mov    rsi,rcx
  408088:	mov    rdi,rax
  40808b:	call   403c48 <_start@@Base+0x938>
  408090:	mov    QWORD PTR [rbp-0x40],rax
  408094:	mov    rdx,QWORD PTR [rbp-0x48]
  408098:	mov    rax,QWORD PTR [rbp-0x40]
  40809c:	mov    rsi,rdx
  40809f:	mov    rdi,rax
  4080a2:	call   403dd5 <_start@@Base+0xac5>
  4080a7:	mov    QWORD PTR [rbp-0x20],rax
  4080ab:	movabs rax,0xff00000000000000
  4080b5:	and    rax,QWORD PTR [rbp-0x20]
  4080b9:	mov    rdx,rax
  4080bc:	movabs rax,0x6200000000000000
  4080c6:	cmp    rdx,rax
  4080c9:	jne    4081c4 <_start@@Base+0x4eb4>
  4080cf:	mov    rax,QWORD PTR [rbp-0x40]
  4080d3:	mov    QWORD PTR [rbp-0x18],rax
  4080d7:	mov    rdx,QWORD PTR [rbp-0x48]
  4080db:	mov    rsi,QWORD PTR [rbp-0x18]
  4080df:	mov    rax,QWORD PTR [rbp-0x38]
  4080e3:	mov    ecx,0x1
  4080e8:	mov    rdi,rax
  4080eb:	call   4042cc <_start@@Base+0xfbc>
  4080f0:	mov    QWORD PTR [rbp-0x40],rax
  4080f4:	mov    rax,QWORD PTR [rbp-0x18]
  4080f8:	cmp    rax,QWORD PTR [rbp-0x40]
  4080fc:	je     4081a4 <_start@@Base+0x4e94>
  408102:	mov    BYTE PTR [rbp-0x26],0x0
  408106:	mov    rax,QWORD PTR [rbp-0x50]
  40810a:	add    rax,0x2
  40810e:	mov    QWORD PTR [rbp-0x10],rax
  408112:	mov    rax,QWORD PTR [rbp-0x40]
  408116:	mov    QWORD PTR [rbp-0x18],rax
  40811a:	lea    rcx,[rbp-0x26]
  40811e:	mov    rdx,QWORD PTR [rbp-0x48]
  408122:	mov    rsi,QWORD PTR [rbp-0x18]
  408126:	mov    rax,QWORD PTR [rbp-0x38]
  40812a:	mov    rdi,rax
  40812d:	call   404f1a <_start@@Base+0x1c0a>
  408132:	mov    QWORD PTR [rbp-0x40],rax
  408136:	mov    rax,QWORD PTR [rbp-0x18]
  40813a:	cmp    rax,QWORD PTR [rbp-0x40]
  40813e:	jne    40818a <_start@@Base+0x4e7a>
  408140:	mov    rax,QWORD PTR [rbp-0x40]
  408144:	mov    QWORD PTR [rbp-0x18],rax
  408148:	lea    rcx,[rbp-0x26]
  40814c:	mov    rdx,QWORD PTR [rbp-0x48]
  408150:	mov    rsi,QWORD PTR [rbp-0x18]
  408154:	mov    rax,QWORD PTR [rbp-0x38]
  408158:	mov    r8,rcx
  40815b:	lea    rcx,[rip+0x21fae]        # 42a110 <filename@@Base+0x10>
  408162:	mov    rdi,rax
  408165:	call   405c0d <_start@@Base+0x28fd>
  40816a:	mov    QWORD PTR [rbp-0x40],rax
  40816e:	mov    rax,QWORD PTR [rbp-0x40]
  408172:	cmp    rax,QWORD PTR [rbp-0x18]
  408176:	je     408319 <_start@@Base+0x5009>
  40817c:	mov    rax,QWORD PTR [rbp-0x40]
  408180:	cmp    rax,QWORD PTR [rbp-0x48]
  408184:	je     408319 <_start@@Base+0x5009>
  40818a:	movzx  eax,BYTE PTR [rbp-0x26]
  40818e:	movsx  edx,al
  408191:	mov    rax,QWORD PTR [rbp-0x10]
  408195:	mov    esi,edx
  408197:	mov    rdi,rax
  40819a:	call   403507 <_start@@Base+0x1f7>
  40819f:	jmp    4082ec <_start@@Base+0x4fdc>
  4081a4:	mov    rdx,QWORD PTR [rbp-0x48]
  4081a8:	mov    rcx,QWORD PTR [rbp-0x40]
  4081ac:	mov    rax,QWORD PTR [rbp-0x38]
  4081b0:	mov    rsi,rcx
  4081b3:	mov    rdi,rax
  4081b6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4081bb:	mov    QWORD PTR [rbp-0x40],rax
  4081bf:	jmp    4082ec <_start@@Base+0x4fdc>
  4081c4:	movabs rax,0xff00000000000000
  4081ce:	and    rax,QWORD PTR [rbp-0x20]
  4081d2:	mov    rdx,rax
  4081d5:	movabs rax,0x6100000000000000
  4081df:	cmp    rdx,rax
  4081e2:	jne    4082d1 <_start@@Base+0x4fc1>
  4081e8:	mov    rax,QWORD PTR [rbp-0x40]
  4081ec:	mov    QWORD PTR [rbp-0x18],rax
  4081f0:	mov    rdx,QWORD PTR [rbp-0x48]
  4081f4:	mov    rsi,QWORD PTR [rbp-0x18]
  4081f8:	mov    rax,QWORD PTR [rbp-0x38]
  4081fc:	mov    ecx,0x1
  408201:	mov    rdi,rax
  408204:	call   4042cc <_start@@Base+0xfbc>
  408209:	mov    QWORD PTR [rbp-0x40],rax
  40820d:	mov    rax,QWORD PTR [rbp-0x18]
  408211:	cmp    rax,QWORD PTR [rbp-0x40]
  408215:	je     4082b4 <_start@@Base+0x4fa4>
  40821b:	mov    WORD PTR [rbp-0x26],0x0
  408221:	mov    rax,QWORD PTR [rbp-0x50]
  408225:	mov    QWORD PTR [rbp-0x10],rax
  408229:	mov    rax,QWORD PTR [rbp-0x40]
  40822d:	mov    QWORD PTR [rbp-0x18],rax
  408231:	lea    rcx,[rbp-0x26]
  408235:	mov    rdx,QWORD PTR [rbp-0x48]
  408239:	mov    rsi,QWORD PTR [rbp-0x18]
  40823d:	mov    rax,QWORD PTR [rbp-0x38]
  408241:	mov    rdi,rax
  408244:	call   404e55 <_start@@Base+0x1b45>
  408249:	mov    QWORD PTR [rbp-0x40],rax
  40824d:	mov    rax,QWORD PTR [rbp-0x18]
  408251:	cmp    rax,QWORD PTR [rbp-0x40]
  408255:	jne    40829d <_start@@Base+0x4f8d>
  408257:	mov    rax,QWORD PTR [rbp-0x40]
  40825b:	mov    QWORD PTR [rbp-0x18],rax
  40825f:	lea    rcx,[rbp-0x26]
  408263:	mov    rdx,QWORD PTR [rbp-0x48]
  408267:	mov    rsi,QWORD PTR [rbp-0x18]
  40826b:	mov    rax,QWORD PTR [rbp-0x38]
  40826f:	mov    r8,rcx
  408272:	lea    rcx,[rip+0x21eb7]        # 42a130 <filename@@Base+0x30>
  408279:	mov    rdi,rax
  40827c:	call   405a6e <_start@@Base+0x275e>
  408281:	mov    QWORD PTR [rbp-0x40],rax
  408285:	mov    rax,QWORD PTR [rbp-0x40]
  408289:	cmp    rax,QWORD PTR [rbp-0x18]
  40828d:	je     40831c <_start@@Base+0x500c>
  408293:	mov    rax,QWORD PTR [rbp-0x40]
  408297:	cmp    rax,QWORD PTR [rbp-0x48]
  40829b:	je     40831c <_start@@Base+0x500c>
  40829d:	movzx  eax,WORD PTR [rbp-0x26]
  4082a1:	movsx  edx,ax
  4082a4:	mov    rax,QWORD PTR [rbp-0x10]
  4082a8:	mov    esi,edx
  4082aa:	mov    rdi,rax
  4082ad:	call   403569 <_start@@Base+0x259>
  4082b2:	jmp    4082ec <_start@@Base+0x4fdc>
  4082b4:	mov    rdx,QWORD PTR [rbp-0x48]
  4082b8:	mov    rcx,QWORD PTR [rbp-0x40]
  4082bc:	mov    rax,QWORD PTR [rbp-0x38]
  4082c0:	mov    rsi,rcx
  4082c3:	mov    rdi,rax
  4082c6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4082cb:	mov    QWORD PTR [rbp-0x40],rax
  4082cf:	jmp    4082ec <_start@@Base+0x4fdc>
  4082d1:	mov    rdx,QWORD PTR [rbp-0x48]
  4082d5:	mov    rcx,QWORD PTR [rbp-0x40]
  4082d9:	mov    rax,QWORD PTR [rbp-0x38]
  4082dd:	mov    rsi,rcx
  4082e0:	mov    rdi,rax
  4082e3:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4082e8:	mov    QWORD PTR [rbp-0x40],rax
  4082ec:	lea    rcx,[rbp-0x24]
  4082f0:	mov    rdx,QWORD PTR [rbp-0x48]
  4082f4:	mov    rsi,QWORD PTR [rbp-0x40]
  4082f8:	mov    rax,QWORD PTR [rbp-0x38]
  4082fc:	mov    rdi,rax
  4082ff:	call   403f93 <_start@@Base+0xc83>
  408304:	mov    QWORD PTR [rbp-0x40],rax
  408308:	mov    eax,DWORD PTR [rbp-0x24]
  40830b:	test   eax,eax
  40830d:	jne    408079 <_start@@Base+0x4d69>
  408313:	mov    rax,QWORD PTR [rbp-0x40]
  408317:	jmp    408336 <_start@@Base+0x5026>
  408319:	nop
  40831a:	jmp    40831d <_start@@Base+0x500d>
  40831c:	nop
  40831d:	mov    rdx,QWORD PTR [rbp-0x48]
  408321:	mov    rsi,QWORD PTR [rbp-0x40]
  408325:	mov    rax,QWORD PTR [rbp-0x38]
  408329:	mov    ecx,0x21
  40832e:	mov    rdi,rax
  408331:	call   41f09d <flatcc_json_parser_set_error@@Base>
  408336:	mov    rdi,QWORD PTR [rbp-0x8]
  40833a:	xor    rdi,QWORD PTR fs:0x28
  408343:	je     40834a <_start@@Base+0x503a>
  408345:	call   403200 <__stack_chk_fail@plt>
  40834a:	leave  
  40834b:	ret    
  40834c:	endbr64 
  408350:	push   rbp
  408351:	mov    rbp,rsp
  408354:	sub    rsp,0x30
  408358:	mov    QWORD PTR [rbp-0x18],rdi
  40835c:	mov    QWORD PTR [rbp-0x20],rsi
  408360:	mov    QWORD PTR [rbp-0x28],rdx
  408364:	mov    QWORD PTR [rbp-0x30],rcx
  408368:	mov    rax,QWORD PTR [rbp-0x30]
  40836c:	mov    DWORD PTR [rax],0x0
  408372:	mov    rax,QWORD PTR [rbp-0x18]
  408376:	mov    rax,QWORD PTR [rax]
  408379:	mov    edx,0x2
  40837e:	mov    esi,0x4
  408383:	mov    rdi,rax
  408386:	call   417048 <flatcc_builder_start_struct@@Base>
  40838b:	mov    QWORD PTR [rbp-0x8],rax
  40838f:	cmp    QWORD PTR [rbp-0x8],0x0
  408394:	je     4083e3 <_start@@Base+0x50d3>
  408396:	mov    rcx,QWORD PTR [rbp-0x8]
  40839a:	mov    rdx,QWORD PTR [rbp-0x28]
  40839e:	mov    rsi,QWORD PTR [rbp-0x20]
  4083a2:	mov    rax,QWORD PTR [rbp-0x18]
  4083a6:	mov    rdi,rax
  4083a9:	call   40802d <_start@@Base+0x4d1d>
  4083ae:	mov    QWORD PTR [rbp-0x20],rax
  4083b2:	mov    rax,QWORD PTR [rbp-0x20]
  4083b6:	cmp    rax,QWORD PTR [rbp-0x28]
  4083ba:	je     4083e6 <_start@@Base+0x50d6>
  4083bc:	mov    rax,QWORD PTR [rbp-0x18]
  4083c0:	mov    rax,QWORD PTR [rax]
  4083c3:	mov    rdi,rax
  4083c6:	call   4170ca <flatcc_builder_end_struct@@Base>
  4083cb:	mov    edx,eax
  4083cd:	mov    rax,QWORD PTR [rbp-0x30]
  4083d1:	mov    DWORD PTR [rax],edx
  4083d3:	mov    rax,QWORD PTR [rbp-0x30]
  4083d7:	mov    eax,DWORD PTR [rax]
  4083d9:	test   eax,eax
  4083db:	je     4083e6 <_start@@Base+0x50d6>
  4083dd:	mov    rax,QWORD PTR [rbp-0x20]
  4083e1:	jmp    408400 <_start@@Base+0x50f0>
  4083e3:	nop
  4083e4:	jmp    4083e7 <_start@@Base+0x50d7>
  4083e6:	nop
  4083e7:	mov    rdx,QWORD PTR [rbp-0x28]
  4083eb:	mov    rsi,QWORD PTR [rbp-0x20]
  4083ef:	mov    rax,QWORD PTR [rbp-0x18]
  4083f3:	mov    ecx,0x21
  4083f8:	mov    rdi,rax
  4083fb:	call   41f09d <flatcc_json_parser_set_error@@Base>
  408400:	leave  
  408401:	ret    
  408402:	endbr64 
  408406:	push   rbp
  408407:	mov    rbp,rsp
  40840a:	sub    rsp,0x30
  40840e:	mov    QWORD PTR [rbp-0x18],rdi
  408412:	mov    QWORD PTR [rbp-0x20],rsi
  408416:	mov    QWORD PTR [rbp-0x28],rdx
  40841a:	mov    QWORD PTR [rbp-0x30],rcx
  40841e:	mov    rax,QWORD PTR fs:0x28
  408427:	mov    QWORD PTR [rbp-0x8],rax
  40842b:	xor    eax,eax
  40842d:	lea    rcx,[rbp-0xc]
  408431:	mov    rdx,QWORD PTR [rbp-0x28]
  408435:	mov    rsi,QWORD PTR [rbp-0x20]
  408439:	mov    rax,QWORD PTR [rbp-0x18]
  40843d:	mov    rdi,rax
  408440:	call   403ed6 <_start@@Base+0xbc6>
  408445:	mov    QWORD PTR [rbp-0x20],rax
  408449:	jmp    408482 <_start@@Base+0x5172>
  40844b:	mov    rdx,QWORD PTR [rbp-0x28]
  40844f:	mov    rcx,QWORD PTR [rbp-0x20]
  408453:	mov    rax,QWORD PTR [rbp-0x18]
  408457:	mov    rsi,rcx
  40845a:	mov    rdi,rax
  40845d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  408462:	mov    QWORD PTR [rbp-0x20],rax
  408466:	lea    rcx,[rbp-0xc]
  40846a:	mov    rdx,QWORD PTR [rbp-0x28]
  40846e:	mov    rsi,QWORD PTR [rbp-0x20]
  408472:	mov    rax,QWORD PTR [rbp-0x18]
  408476:	mov    rdi,rax
  408479:	call   403f93 <_start@@Base+0xc83>
  40847e:	mov    QWORD PTR [rbp-0x20],rax
  408482:	mov    eax,DWORD PTR [rbp-0xc]
  408485:	test   eax,eax
  408487:	jne    40844b <_start@@Base+0x513b>
  408489:	mov    rax,QWORD PTR [rbp-0x20]
  40848d:	mov    rdi,QWORD PTR [rbp-0x8]
  408491:	xor    rdi,QWORD PTR fs:0x28
  40849a:	je     4084a1 <_start@@Base+0x5191>
  40849c:	call   403200 <__stack_chk_fail@plt>
  4084a1:	leave  
  4084a2:	ret    
  4084a3:	endbr64 
  4084a7:	push   rbp
  4084a8:	mov    rbp,rsp
  4084ab:	sub    rsp,0x30
  4084af:	mov    QWORD PTR [rbp-0x18],rdi
  4084b3:	mov    QWORD PTR [rbp-0x20],rsi
  4084b7:	mov    QWORD PTR [rbp-0x28],rdx
  4084bb:	mov    QWORD PTR [rbp-0x30],rcx
  4084bf:	mov    rax,QWORD PTR [rbp-0x30]
  4084c3:	mov    DWORD PTR [rax],0x0
  4084c9:	mov    rax,QWORD PTR [rbp-0x18]
  4084cd:	mov    rax,QWORD PTR [rax]
  4084d0:	mov    edx,0x1
  4084d5:	mov    esi,0x0
  4084da:	mov    rdi,rax
  4084dd:	call   417048 <flatcc_builder_start_struct@@Base>
  4084e2:	mov    QWORD PTR [rbp-0x8],rax
  4084e6:	cmp    QWORD PTR [rbp-0x8],0x0
  4084eb:	je     40853a <_start@@Base+0x522a>
  4084ed:	mov    rcx,QWORD PTR [rbp-0x8]
  4084f1:	mov    rdx,QWORD PTR [rbp-0x28]
  4084f5:	mov    rsi,QWORD PTR [rbp-0x20]
  4084f9:	mov    rax,QWORD PTR [rbp-0x18]
  4084fd:	mov    rdi,rax
  408500:	call   408402 <_start@@Base+0x50f2>
  408505:	mov    QWORD PTR [rbp-0x20],rax
  408509:	mov    rax,QWORD PTR [rbp-0x20]
  40850d:	cmp    rax,QWORD PTR [rbp-0x28]
  408511:	je     40853d <_start@@Base+0x522d>
  408513:	mov    rax,QWORD PTR [rbp-0x18]
  408517:	mov    rax,QWORD PTR [rax]
  40851a:	mov    rdi,rax
  40851d:	call   4170ca <flatcc_builder_end_struct@@Base>
  408522:	mov    edx,eax
  408524:	mov    rax,QWORD PTR [rbp-0x30]
  408528:	mov    DWORD PTR [rax],edx
  40852a:	mov    rax,QWORD PTR [rbp-0x30]
  40852e:	mov    eax,DWORD PTR [rax]
  408530:	test   eax,eax
  408532:	je     40853d <_start@@Base+0x522d>
  408534:	mov    rax,QWORD PTR [rbp-0x20]
  408538:	jmp    408557 <_start@@Base+0x5247>
  40853a:	nop
  40853b:	jmp    40853e <_start@@Base+0x522e>
  40853d:	nop
  40853e:	mov    rdx,QWORD PTR [rbp-0x28]
  408542:	mov    rsi,QWORD PTR [rbp-0x20]
  408546:	mov    rax,QWORD PTR [rbp-0x18]
  40854a:	mov    ecx,0x21
  40854f:	mov    rdi,rax
  408552:	call   41f09d <flatcc_json_parser_set_error@@Base>
  408557:	leave  
  408558:	ret    
  408559:	endbr64 
  40855d:	push   rbp
  40855e:	mov    rbp,rsp
  408561:	sub    rsp,0x30
  408565:	mov    QWORD PTR [rbp-0x18],rdi
  408569:	mov    QWORD PTR [rbp-0x20],rsi
  40856d:	mov    QWORD PTR [rbp-0x28],rdx
  408571:	mov    QWORD PTR [rbp-0x30],rcx
  408575:	mov    rax,QWORD PTR fs:0x28
  40857e:	mov    QWORD PTR [rbp-0x8],rax
  408582:	xor    eax,eax
  408584:	mov    rax,QWORD PTR [rbp-0x30]
  408588:	mov    DWORD PTR [rax],0x0
  40858e:	mov    rax,QWORD PTR [rbp-0x18]
  408592:	mov    rax,QWORD PTR [rax]
  408595:	mov    esi,0x0
  40859a:	mov    rdi,rax
  40859d:	call   417b80 <flatcc_builder_start_table@@Base>
  4085a2:	test   eax,eax
  4085a4:	jne    408653 <_start@@Base+0x5343>
  4085aa:	lea    rcx,[rbp-0xc]
  4085ae:	mov    rdx,QWORD PTR [rbp-0x28]
  4085b2:	mov    rsi,QWORD PTR [rbp-0x20]
  4085b6:	mov    rax,QWORD PTR [rbp-0x18]
  4085ba:	mov    rdi,rax
  4085bd:	call   403ed6 <_start@@Base+0xbc6>
  4085c2:	mov    QWORD PTR [rbp-0x20],rax
  4085c6:	jmp    40861a <_start@@Base+0x530a>
  4085c8:	mov    rdx,QWORD PTR [rbp-0x28]
  4085cc:	mov    rcx,QWORD PTR [rbp-0x20]
  4085d0:	mov    rax,QWORD PTR [rbp-0x18]
  4085d4:	mov    rsi,rcx
  4085d7:	mov    rdi,rax
  4085da:	call   403c48 <_start@@Base+0x938>
  4085df:	mov    QWORD PTR [rbp-0x20],rax
  4085e3:	mov    rdx,QWORD PTR [rbp-0x28]
  4085e7:	mov    rcx,QWORD PTR [rbp-0x20]
  4085eb:	mov    rax,QWORD PTR [rbp-0x18]
  4085ef:	mov    rsi,rcx
  4085f2:	mov    rdi,rax
  4085f5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4085fa:	mov    QWORD PTR [rbp-0x20],rax
  4085fe:	lea    rcx,[rbp-0xc]
  408602:	mov    rdx,QWORD PTR [rbp-0x28]
  408606:	mov    rsi,QWORD PTR [rbp-0x20]
  40860a:	mov    rax,QWORD PTR [rbp-0x18]
  40860e:	mov    rdi,rax
  408611:	call   403f93 <_start@@Base+0xc83>
  408616:	mov    QWORD PTR [rbp-0x20],rax
  40861a:	mov    eax,DWORD PTR [rbp-0xc]
  40861d:	test   eax,eax
  40861f:	jne    4085c8 <_start@@Base+0x52b8>
  408621:	mov    rax,QWORD PTR [rbp-0x18]
  408625:	mov    eax,DWORD PTR [rax+0x20]
  408628:	test   eax,eax
  40862a:	jne    408656 <_start@@Base+0x5346>
  40862c:	mov    rax,QWORD PTR [rbp-0x18]
  408630:	mov    rax,QWORD PTR [rax]
  408633:	mov    rdi,rax
  408636:	call   41868f <flatcc_builder_end_table@@Base>
  40863b:	mov    edx,eax
  40863d:	mov    rax,QWORD PTR [rbp-0x30]
  408641:	mov    DWORD PTR [rax],edx
  408643:	mov    rax,QWORD PTR [rbp-0x30]
  408647:	mov    eax,DWORD PTR [rax]
  408649:	test   eax,eax
  40864b:	je     408659 <_start@@Base+0x5349>
  40864d:	mov    rax,QWORD PTR [rbp-0x20]
  408651:	jmp    408673 <_start@@Base+0x5363>
  408653:	nop
  408654:	jmp    40865a <_start@@Base+0x534a>
  408656:	nop
  408657:	jmp    40865a <_start@@Base+0x534a>
  408659:	nop
  40865a:	mov    rdx,QWORD PTR [rbp-0x28]
  40865e:	mov    rsi,QWORD PTR [rbp-0x20]
  408662:	mov    rax,QWORD PTR [rbp-0x18]
  408666:	mov    ecx,0x21
  40866b:	mov    rdi,rax
  40866e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  408673:	mov    rdi,QWORD PTR [rbp-0x8]
  408677:	xor    rdi,QWORD PTR fs:0x28
  408680:	je     408687 <_start@@Base+0x5377>
  408682:	call   403200 <__stack_chk_fail@plt>
  408687:	leave  
  408688:	ret    
  408689:	endbr64 
  40868d:	push   rbp
  40868e:	mov    rbp,rsp
  408691:	sub    rsp,0x50
  408695:	mov    QWORD PTR [rbp-0x38],rdi
  408699:	mov    QWORD PTR [rbp-0x40],rsi
  40869d:	mov    QWORD PTR [rbp-0x48],rdx
  4086a1:	mov    QWORD PTR [rbp-0x50],rcx
  4086a5:	mov    rax,QWORD PTR fs:0x28
  4086ae:	mov    QWORD PTR [rbp-0x8],rax
  4086b2:	xor    eax,eax
  4086b4:	mov    rax,QWORD PTR [rbp-0x50]
  4086b8:	mov    DWORD PTR [rax],0x0
  4086be:	mov    rax,QWORD PTR [rbp-0x38]
  4086c2:	mov    rax,QWORD PTR [rax]
  4086c5:	mov    esi,0x1
  4086ca:	mov    rdi,rax
  4086cd:	call   417b80 <flatcc_builder_start_table@@Base>
  4086d2:	test   eax,eax
  4086d4:	jne    408858 <_start@@Base+0x5548>
  4086da:	lea    rcx,[rbp-0x24]
  4086de:	mov    rdx,QWORD PTR [rbp-0x48]
  4086e2:	mov    rsi,QWORD PTR [rbp-0x40]
  4086e6:	mov    rax,QWORD PTR [rbp-0x38]
  4086ea:	mov    rdi,rax
  4086ed:	call   403ed6 <_start@@Base+0xbc6>
  4086f2:	mov    QWORD PTR [rbp-0x40],rax
  4086f6:	jmp    40881b <_start@@Base+0x550b>
  4086fb:	mov    rdx,QWORD PTR [rbp-0x48]
  4086ff:	mov    rcx,QWORD PTR [rbp-0x40]
  408703:	mov    rax,QWORD PTR [rbp-0x38]
  408707:	mov    rsi,rcx
  40870a:	mov    rdi,rax
  40870d:	call   403c48 <_start@@Base+0x938>
  408712:	mov    QWORD PTR [rbp-0x40],rax
  408716:	mov    rdx,QWORD PTR [rbp-0x48]
  40871a:	mov    rax,QWORD PTR [rbp-0x40]
  40871e:	mov    rsi,rdx
  408721:	mov    rdi,rax
  408724:	call   403dd5 <_start@@Base+0xac5>
  408729:	mov    QWORD PTR [rbp-0x20],rax
  40872d:	mov    rax,QWORD PTR [rbp-0x20]
  408731:	and    rax,0xffffffffff000000
  408737:	mov    rdx,rax
  40873a:	movabs rax,0x656d707479000000
  408744:	cmp    rdx,rax
  408747:	jne    4087e4 <_start@@Base+0x54d4>
  40874d:	mov    rax,QWORD PTR [rbp-0x40]
  408751:	mov    QWORD PTR [rbp-0x18],rax
  408755:	mov    rdx,QWORD PTR [rbp-0x48]
  408759:	mov    rsi,QWORD PTR [rbp-0x18]
  40875d:	mov    rax,QWORD PTR [rbp-0x38]
  408761:	mov    ecx,0x5
  408766:	mov    rdi,rax
  408769:	call   4042cc <_start@@Base+0xfbc>
  40876e:	mov    QWORD PTR [rbp-0x40],rax
  408772:	mov    rax,QWORD PTR [rbp-0x18]
  408776:	cmp    rax,QWORD PTR [rbp-0x40]
  40877a:	je     4087c7 <_start@@Base+0x54b7>
  40877c:	mov    rax,QWORD PTR [rbp-0x38]
  408780:	mov    rax,QWORD PTR [rax]
  408783:	mov    ecx,0x1
  408788:	mov    edx,0x0
  40878d:	mov    esi,0x0
  408792:	mov    rdi,rax
  408795:	call   419d30 <flatcc_builder_table_add@@Base>
  40879a:	mov    QWORD PTR [rbp-0x10],rax
  40879e:	cmp    QWORD PTR [rbp-0x10],0x0
  4087a3:	je     40885b <_start@@Base+0x554b>
  4087a9:	mov    rcx,QWORD PTR [rbp-0x10]
  4087ad:	mov    rdx,QWORD PTR [rbp-0x48]
  4087b1:	mov    rsi,QWORD PTR [rbp-0x40]
  4087b5:	mov    rax,QWORD PTR [rbp-0x38]
  4087b9:	mov    rdi,rax
  4087bc:	call   408402 <_start@@Base+0x50f2>
  4087c1:	mov    QWORD PTR [rbp-0x40],rax
  4087c5:	jmp    4087ff <_start@@Base+0x54ef>
  4087c7:	mov    rdx,QWORD PTR [rbp-0x48]
  4087cb:	mov    rcx,QWORD PTR [rbp-0x40]
  4087cf:	mov    rax,QWORD PTR [rbp-0x38]
  4087d3:	mov    rsi,rcx
  4087d6:	mov    rdi,rax
  4087d9:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4087de:	mov    QWORD PTR [rbp-0x40],rax
  4087e2:	jmp    4087ff <_start@@Base+0x54ef>
  4087e4:	mov    rdx,QWORD PTR [rbp-0x48]
  4087e8:	mov    rcx,QWORD PTR [rbp-0x40]
  4087ec:	mov    rax,QWORD PTR [rbp-0x38]
  4087f0:	mov    rsi,rcx
  4087f3:	mov    rdi,rax
  4087f6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4087fb:	mov    QWORD PTR [rbp-0x40],rax
  4087ff:	lea    rcx,[rbp-0x24]
  408803:	mov    rdx,QWORD PTR [rbp-0x48]
  408807:	mov    rsi,QWORD PTR [rbp-0x40]
  40880b:	mov    rax,QWORD PTR [rbp-0x38]
  40880f:	mov    rdi,rax
  408812:	call   403f93 <_start@@Base+0xc83>
  408817:	mov    QWORD PTR [rbp-0x40],rax
  40881b:	mov    eax,DWORD PTR [rbp-0x24]
  40881e:	test   eax,eax
  408820:	jne    4086fb <_start@@Base+0x53eb>
  408826:	mov    rax,QWORD PTR [rbp-0x38]
  40882a:	mov    eax,DWORD PTR [rax+0x20]
  40882d:	test   eax,eax
  40882f:	jne    40885e <_start@@Base+0x554e>
  408831:	mov    rax,QWORD PTR [rbp-0x38]
  408835:	mov    rax,QWORD PTR [rax]
  408838:	mov    rdi,rax
  40883b:	call   41868f <flatcc_builder_end_table@@Base>
  408840:	mov    edx,eax
  408842:	mov    rax,QWORD PTR [rbp-0x50]
  408846:	mov    DWORD PTR [rax],edx
  408848:	mov    rax,QWORD PTR [rbp-0x50]
  40884c:	mov    eax,DWORD PTR [rax]
  40884e:	test   eax,eax
  408850:	je     408861 <_start@@Base+0x5551>
  408852:	mov    rax,QWORD PTR [rbp-0x40]
  408856:	jmp    40887b <_start@@Base+0x556b>
  408858:	nop
  408859:	jmp    408862 <_start@@Base+0x5552>
  40885b:	nop
  40885c:	jmp    408862 <_start@@Base+0x5552>
  40885e:	nop
  40885f:	jmp    408862 <_start@@Base+0x5552>
  408861:	nop
  408862:	mov    rdx,QWORD PTR [rbp-0x48]
  408866:	mov    rsi,QWORD PTR [rbp-0x40]
  40886a:	mov    rax,QWORD PTR [rbp-0x38]
  40886e:	mov    ecx,0x21
  408873:	mov    rdi,rax
  408876:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40887b:	mov    rdi,QWORD PTR [rbp-0x8]
  40887f:	xor    rdi,QWORD PTR fs:0x28
  408888:	je     40888f <_start@@Base+0x557f>
  40888a:	call   403200 <__stack_chk_fail@plt>
  40888f:	leave  
  408890:	ret    
  408891:	endbr64 
  408895:	push   rbp
  408896:	mov    rbp,rsp
  408899:	sub    rsp,0x50
  40889d:	mov    QWORD PTR [rbp-0x28],rdi
  4088a1:	mov    QWORD PTR [rbp-0x30],rsi
  4088a5:	mov    QWORD PTR [rbp-0x38],rdx
  4088a9:	mov    QWORD PTR [rbp-0x40],rcx
  4088ad:	mov    QWORD PTR [rbp-0x48],r8
  4088b1:	mov    QWORD PTR [rbp-0x50],r9
  4088b5:	mov    rax,QWORD PTR [rbp-0x30]
  4088b9:	mov    QWORD PTR [rbp-0x18],rax
  4088bd:	mov    rdx,QWORD PTR [rbp-0x38]
  4088c1:	mov    rax,QWORD PTR [rbp-0x30]
  4088c5:	mov    rsi,rdx
  4088c8:	mov    rdi,rax
  4088cb:	call   403dd5 <_start@@Base+0xac5>
  4088d0:	mov    QWORD PTR [rbp-0x10],rax
  4088d4:	movabs rax,0xff00000000000000
  4088de:	and    rax,QWORD PTR [rbp-0x10]
  4088e2:	mov    rdx,rax
  4088e5:	movabs rax,0x7800000000000000
  4088ef:	cmp    rdx,rax
  4088f2:	jne    40894b <_start@@Base+0x563b>
  4088f4:	mov    rax,QWORD PTR [rbp-0x30]
  4088f8:	mov    QWORD PTR [rbp-0x8],rax
  4088fc:	mov    rcx,QWORD PTR [rbp-0x50]
  408900:	mov    rdx,QWORD PTR [rbp-0x38]
  408904:	mov    rsi,QWORD PTR [rbp-0x8]
  408908:	mov    rax,QWORD PTR [rbp-0x28]
  40890c:	mov    r8,rcx
  40890f:	mov    ecx,0x1
  408914:	mov    rdi,rax
  408917:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  40891c:	mov    QWORD PTR [rbp-0x30],rax
  408920:	mov    rax,QWORD PTR [rbp-0x30]
  408924:	cmp    rax,QWORD PTR [rbp-0x8]
  408928:	je     408945 <_start@@Base+0x5635>
  40892a:	mov    rax,QWORD PTR [rbp-0x48]
  40892e:	mov    QWORD PTR [rax],0x0
  408935:	mov    rax,QWORD PTR [rbp-0x40]
  408939:	mov    DWORD PTR [rax],0x0
  40893f:	mov    rax,QWORD PTR [rbp-0x30]
  408943:	jmp    40894f <_start@@Base+0x563f>
  408945:	mov    rax,QWORD PTR [rbp-0x18]
  408949:	jmp    40894f <_start@@Base+0x563f>
  40894b:	mov    rax,QWORD PTR [rbp-0x18]
  40894f:	leave  
  408950:	ret    
  408951:	endbr64 
  408955:	push   rbp
  408956:	mov    rbp,rsp
  408959:	sub    rsp,0x50
  40895d:	mov    QWORD PTR [rbp-0x38],rdi
  408961:	mov    QWORD PTR [rbp-0x40],rsi
  408965:	mov    QWORD PTR [rbp-0x48],rdx
  408969:	mov    QWORD PTR [rbp-0x50],rcx
  40896d:	mov    rax,QWORD PTR fs:0x28
  408976:	mov    QWORD PTR [rbp-0x8],rax
  40897a:	xor    eax,eax
  40897c:	mov    rax,QWORD PTR [rbp-0x50]
  408980:	mov    DWORD PTR [rax],0x0
  408986:	mov    rax,QWORD PTR [rbp-0x38]
  40898a:	mov    rax,QWORD PTR [rax]
  40898d:	mov    esi,0x4
  408992:	mov    rdi,rax
  408995:	call   417b80 <flatcc_builder_start_table@@Base>
  40899a:	test   eax,eax
  40899c:	jne    408f6f <_start@@Base+0x5c5f>
  4089a2:	lea    rcx,[rbp-0x24]
  4089a6:	mov    rdx,QWORD PTR [rbp-0x48]
  4089aa:	mov    rsi,QWORD PTR [rbp-0x40]
  4089ae:	mov    rax,QWORD PTR [rbp-0x38]
  4089b2:	mov    rdi,rax
  4089b5:	call   403ed6 <_start@@Base+0xbc6>
  4089ba:	mov    QWORD PTR [rbp-0x40],rax
  4089be:	jmp    408f32 <_start@@Base+0x5c22>
  4089c3:	mov    rdx,QWORD PTR [rbp-0x48]
  4089c7:	mov    rcx,QWORD PTR [rbp-0x40]
  4089cb:	mov    rax,QWORD PTR [rbp-0x38]
  4089cf:	mov    rsi,rcx
  4089d2:	mov    rdi,rax
  4089d5:	call   403c48 <_start@@Base+0x938>
  4089da:	mov    QWORD PTR [rbp-0x40],rax
  4089de:	mov    rdx,QWORD PTR [rbp-0x48]
  4089e2:	mov    rax,QWORD PTR [rbp-0x40]
  4089e6:	mov    rsi,rdx
  4089e9:	mov    rdi,rax
  4089ec:	call   403dd5 <_start@@Base+0xac5>
  4089f1:	mov    QWORD PTR [rbp-0x20],rax
  4089f5:	mov    rax,QWORD PTR [rbp-0x20]
  4089f9:	mov    ax,0x0
  4089fd:	mov    rdx,rax
  408a00:	movabs rax,0x636f6c6f72320000
  408a0a:	cmp    rdx,rax
  408a0d:	jne    408b23 <_start@@Base+0x5813>
  408a13:	mov    rax,QWORD PTR [rbp-0x40]
  408a17:	mov    QWORD PTR [rbp-0x18],rax
  408a1b:	mov    rdx,QWORD PTR [rbp-0x48]
  408a1f:	mov    rsi,QWORD PTR [rbp-0x18]
  408a23:	mov    rax,QWORD PTR [rbp-0x38]
  408a27:	mov    ecx,0x6
  408a2c:	mov    rdi,rax
  408a2f:	call   4042cc <_start@@Base+0xfbc>
  408a34:	mov    QWORD PTR [rbp-0x40],rax
  408a38:	mov    rax,QWORD PTR [rbp-0x18]
  408a3c:	cmp    rax,QWORD PTR [rbp-0x40]
  408a40:	je     408c53 <_start@@Base+0x5943>
  408a46:	mov    BYTE PTR [rbp-0x25],0x0
  408a4a:	mov    rax,QWORD PTR [rbp-0x40]
  408a4e:	mov    QWORD PTR [rbp-0x18],rax
  408a52:	lea    rcx,[rbp-0x25]
  408a56:	mov    rdx,QWORD PTR [rbp-0x48]
  408a5a:	mov    rsi,QWORD PTR [rbp-0x18]
  408a5e:	mov    rax,QWORD PTR [rbp-0x38]
  408a62:	mov    rdi,rax
  408a65:	call   404f1a <_start@@Base+0x1c0a>
  408a6a:	mov    QWORD PTR [rbp-0x40],rax
  408a6e:	mov    rax,QWORD PTR [rbp-0x18]
  408a72:	cmp    rax,QWORD PTR [rbp-0x40]
  408a76:	jne    408ac2 <_start@@Base+0x57b2>
  408a78:	mov    rax,QWORD PTR [rbp-0x40]
  408a7c:	mov    QWORD PTR [rbp-0x18],rax
  408a80:	lea    rcx,[rbp-0x25]
  408a84:	mov    rdx,QWORD PTR [rbp-0x48]
  408a88:	mov    rsi,QWORD PTR [rbp-0x18]
  408a8c:	mov    rax,QWORD PTR [rbp-0x38]
  408a90:	mov    r8,rcx
  408a93:	lea    rcx,[rip+0x216c6]        # 42a160 <filename@@Base+0x60>
  408a9a:	mov    rdi,rax
  408a9d:	call   405c0d <_start@@Base+0x28fd>
  408aa2:	mov    QWORD PTR [rbp-0x40],rax
  408aa6:	mov    rax,QWORD PTR [rbp-0x40]
  408aaa:	cmp    rax,QWORD PTR [rbp-0x18]
  408aae:	je     408f72 <_start@@Base+0x5c62>
  408ab4:	mov    rax,QWORD PTR [rbp-0x40]
  408ab8:	cmp    rax,QWORD PTR [rbp-0x48]
  408abc:	je     408f72 <_start@@Base+0x5c62>
  408ac2:	movzx  eax,BYTE PTR [rbp-0x25]
  408ac6:	cmp    al,0x2
  408ac8:	jne    408adc <_start@@Base+0x57cc>
  408aca:	mov    rax,QWORD PTR [rbp-0x38]
  408ace:	mov    eax,DWORD PTR [rax+0x10]
  408ad1:	and    eax,0x2
  408ad4:	test   eax,eax
  408ad6:	je     408f15 <_start@@Base+0x5c05>
  408adc:	mov    rax,QWORD PTR [rbp-0x38]
  408ae0:	mov    rax,QWORD PTR [rax]
  408ae3:	mov    ecx,0x1
  408ae8:	mov    edx,0x1
  408aed:	mov    esi,0x1
  408af2:	mov    rdi,rax
  408af5:	call   419d30 <flatcc_builder_table_add@@Base>
  408afa:	mov    QWORD PTR [rbp-0x10],rax
  408afe:	cmp    QWORD PTR [rbp-0x10],0x0
  408b03:	je     408f75 <_start@@Base+0x5c65>
  408b09:	movzx  eax,BYTE PTR [rbp-0x25]
  408b0d:	movsx  edx,al
  408b10:	mov    rax,QWORD PTR [rbp-0x10]
  408b14:	mov    esi,edx
  408b16:	mov    rdi,rax
  408b19:	call   403507 <_start@@Base+0x1f7>
  408b1e:	jmp    408f15 <_start@@Base+0x5c05>
  408b23:	mov    rax,QWORD PTR [rbp-0x20]
  408b27:	and    rax,0xffffffffff000000
  408b2d:	mov    rdx,rax
  408b30:	movabs rax,0x636f6c6f72000000
  408b3a:	cmp    rdx,rax
  408b3d:	jne    408c56 <_start@@Base+0x5946>
  408b43:	mov    rax,QWORD PTR [rbp-0x40]
  408b47:	mov    QWORD PTR [rbp-0x18],rax
  408b4b:	mov    rdx,QWORD PTR [rbp-0x48]
  408b4f:	mov    rsi,QWORD PTR [rbp-0x18]
  408b53:	mov    rax,QWORD PTR [rbp-0x38]
  408b57:	mov    ecx,0x5
  408b5c:	mov    rdi,rax
  408b5f:	call   4042cc <_start@@Base+0xfbc>
  408b64:	mov    QWORD PTR [rbp-0x40],rax
  408b68:	mov    rax,QWORD PTR [rbp-0x18]
  408b6c:	cmp    rax,QWORD PTR [rbp-0x40]
  408b70:	je     408c59 <_start@@Base+0x5949>
  408b76:	mov    BYTE PTR [rbp-0x25],0x0
  408b7a:	mov    rax,QWORD PTR [rbp-0x40]
  408b7e:	mov    QWORD PTR [rbp-0x18],rax
  408b82:	lea    rcx,[rbp-0x25]
  408b86:	mov    rdx,QWORD PTR [rbp-0x48]
  408b8a:	mov    rsi,QWORD PTR [rbp-0x18]
  408b8e:	mov    rax,QWORD PTR [rbp-0x38]
  408b92:	mov    rdi,rax
  408b95:	call   404f1a <_start@@Base+0x1c0a>
  408b9a:	mov    QWORD PTR [rbp-0x40],rax
  408b9e:	mov    rax,QWORD PTR [rbp-0x18]
  408ba2:	cmp    rax,QWORD PTR [rbp-0x40]
  408ba6:	jne    408bf2 <_start@@Base+0x58e2>
  408ba8:	mov    rax,QWORD PTR [rbp-0x40]
  408bac:	mov    QWORD PTR [rbp-0x18],rax
  408bb0:	lea    rcx,[rbp-0x25]
  408bb4:	mov    rdx,QWORD PTR [rbp-0x48]
  408bb8:	mov    rsi,QWORD PTR [rbp-0x18]
  408bbc:	mov    rax,QWORD PTR [rbp-0x38]
  408bc0:	mov    r8,rcx
  408bc3:	lea    rcx,[rip+0x215b6]        # 42a180 <filename@@Base+0x80>
  408bca:	mov    rdi,rax
  408bcd:	call   405c0d <_start@@Base+0x28fd>
  408bd2:	mov    QWORD PTR [rbp-0x40],rax
  408bd6:	mov    rax,QWORD PTR [rbp-0x40]
  408bda:	cmp    rax,QWORD PTR [rbp-0x18]
  408bde:	je     408f78 <_start@@Base+0x5c68>
  408be4:	mov    rax,QWORD PTR [rbp-0x40]
  408be8:	cmp    rax,QWORD PTR [rbp-0x48]
  408bec:	je     408f78 <_start@@Base+0x5c68>
  408bf2:	movzx  eax,BYTE PTR [rbp-0x25]
  408bf6:	cmp    al,0x2
  408bf8:	jne    408c0c <_start@@Base+0x58fc>
  408bfa:	mov    rax,QWORD PTR [rbp-0x38]
  408bfe:	mov    eax,DWORD PTR [rax+0x10]
  408c01:	and    eax,0x2
  408c04:	test   eax,eax
  408c06:	je     408f15 <_start@@Base+0x5c05>
  408c0c:	mov    rax,QWORD PTR [rbp-0x38]
  408c10:	mov    rax,QWORD PTR [rax]
  408c13:	mov    ecx,0x1
  408c18:	mov    edx,0x1
  408c1d:	mov    esi,0x0
  408c22:	mov    rdi,rax
  408c25:	call   419d30 <flatcc_builder_table_add@@Base>
  408c2a:	mov    QWORD PTR [rbp-0x10],rax
  408c2e:	cmp    QWORD PTR [rbp-0x10],0x0
  408c33:	je     408f7b <_start@@Base+0x5c6b>
  408c39:	movzx  eax,BYTE PTR [rbp-0x25]
  408c3d:	movsx  edx,al
  408c40:	mov    rax,QWORD PTR [rbp-0x10]
  408c44:	mov    esi,edx
  408c46:	mov    rdi,rax
  408c49:	call   403507 <_start@@Base+0x1f7>
  408c4e:	jmp    408f15 <_start@@Base+0x5c05>
  408c53:	nop
  408c54:	jmp    408c5a <_start@@Base+0x594a>
  408c56:	nop
  408c57:	jmp    408c5a <_start@@Base+0x594a>
  408c59:	nop
  408c5a:	movabs rax,0xffffff0000000000
  408c64:	and    rax,QWORD PTR [rbp-0x20]
  408c68:	mov    rdx,rax
  408c6b:	movabs rax,0x7563320000000000
  408c75:	cmp    rdx,rax
  408c78:	jne    408dae <_start@@Base+0x5a9e>
  408c7e:	mov    rax,QWORD PTR [rbp-0x40]
  408c82:	mov    QWORD PTR [rbp-0x18],rax
  408c86:	mov    rdx,QWORD PTR [rbp-0x48]
  408c8a:	mov    rsi,QWORD PTR [rbp-0x18]
  408c8e:	mov    rax,QWORD PTR [rbp-0x38]
  408c92:	mov    ecx,0x3
  408c97:	mov    rdi,rax
  408c9a:	call   4042cc <_start@@Base+0xfbc>
  408c9f:	mov    QWORD PTR [rbp-0x40],rax
  408ca3:	mov    rax,QWORD PTR [rbp-0x18]
  408ca7:	cmp    rax,QWORD PTR [rbp-0x40]
  408cab:	je     408d8e <_start@@Base+0x5a7e>
  408cb1:	mov    BYTE PTR [rbp-0x25],0x0
  408cb5:	mov    rax,QWORD PTR [rbp-0x40]
  408cb9:	mov    QWORD PTR [rbp-0x18],rax
  408cbd:	lea    rcx,[rbp-0x25]
  408cc1:	mov    rdx,QWORD PTR [rbp-0x48]
  408cc5:	mov    rsi,QWORD PTR [rbp-0x18]
  408cc9:	mov    rax,QWORD PTR [rbp-0x38]
  408ccd:	mov    rdi,rax
  408cd0:	call   404c05 <_start@@Base+0x18f5>
  408cd5:	mov    QWORD PTR [rbp-0x40],rax
  408cd9:	mov    rax,QWORD PTR [rbp-0x18]
  408cdd:	cmp    rax,QWORD PTR [rbp-0x40]
  408ce1:	jne    408d2d <_start@@Base+0x5a1d>
  408ce3:	mov    rax,QWORD PTR [rbp-0x40]
  408ce7:	mov    QWORD PTR [rbp-0x18],rax
  408ceb:	lea    rcx,[rbp-0x25]
  408cef:	mov    rdx,QWORD PTR [rbp-0x48]
  408cf3:	mov    rsi,QWORD PTR [rbp-0x18]
  408cf7:	mov    rax,QWORD PTR [rbp-0x38]
  408cfb:	mov    r8,rcx
  408cfe:	lea    rcx,[rip+0x2149b]        # 42a1a0 <filename@@Base+0xa0>
  408d05:	mov    rdi,rax
  408d08:	call   40559e <_start@@Base+0x228e>
  408d0d:	mov    QWORD PTR [rbp-0x40],rax
  408d11:	mov    rax,QWORD PTR [rbp-0x40]
  408d15:	cmp    rax,QWORD PTR [rbp-0x18]
  408d19:	je     408f7e <_start@@Base+0x5c6e>
  408d1f:	mov    rax,QWORD PTR [rbp-0x40]
  408d23:	cmp    rax,QWORD PTR [rbp-0x48]
  408d27:	je     408f7e <_start@@Base+0x5c6e>
  408d2d:	movzx  eax,BYTE PTR [rbp-0x25]
  408d31:	cmp    al,0x2
  408d33:	jne    408d47 <_start@@Base+0x5a37>
  408d35:	mov    rax,QWORD PTR [rbp-0x38]
  408d39:	mov    eax,DWORD PTR [rax+0x10]
  408d3c:	and    eax,0x2
  408d3f:	test   eax,eax
  408d41:	je     408f16 <_start@@Base+0x5c06>
  408d47:	mov    rax,QWORD PTR [rbp-0x38]
  408d4b:	mov    rax,QWORD PTR [rax]
  408d4e:	mov    ecx,0x1
  408d53:	mov    edx,0x1
  408d58:	mov    esi,0x3
  408d5d:	mov    rdi,rax
  408d60:	call   419d30 <flatcc_builder_table_add@@Base>
  408d65:	mov    QWORD PTR [rbp-0x10],rax
  408d69:	cmp    QWORD PTR [rbp-0x10],0x0
  408d6e:	je     408f81 <_start@@Base+0x5c71>
  408d74:	movzx  eax,BYTE PTR [rbp-0x25]
  408d78:	movzx  edx,al
  408d7b:	mov    rax,QWORD PTR [rbp-0x10]
  408d7f:	mov    esi,edx
  408d81:	mov    rdi,rax
  408d84:	call   403405 <_start@@Base+0xf5>
  408d89:	jmp    408f16 <_start@@Base+0x5c06>
  408d8e:	mov    rdx,QWORD PTR [rbp-0x48]
  408d92:	mov    rcx,QWORD PTR [rbp-0x40]
  408d96:	mov    rax,QWORD PTR [rbp-0x38]
  408d9a:	mov    rsi,rcx
  408d9d:	mov    rdi,rax
  408da0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  408da5:	mov    QWORD PTR [rbp-0x40],rax
  408da9:	jmp    408f16 <_start@@Base+0x5c06>
  408dae:	movabs rax,0xffff000000000000
  408db8:	and    rax,QWORD PTR [rbp-0x20]
  408dbc:	mov    rdx,rax
  408dbf:	movabs rax,0x7563000000000000
  408dc9:	cmp    rdx,rax
  408dcc:	jne    408ef8 <_start@@Base+0x5be8>
  408dd2:	mov    rax,QWORD PTR [rbp-0x40]
  408dd6:	mov    QWORD PTR [rbp-0x18],rax
  408dda:	mov    rdx,QWORD PTR [rbp-0x48]
  408dde:	mov    rsi,QWORD PTR [rbp-0x18]
  408de2:	mov    rax,QWORD PTR [rbp-0x38]
  408de6:	mov    ecx,0x2
  408deb:	mov    rdi,rax
  408dee:	call   4042cc <_start@@Base+0xfbc>
  408df3:	mov    QWORD PTR [rbp-0x40],rax
  408df7:	mov    rax,QWORD PTR [rbp-0x18]
  408dfb:	cmp    rax,QWORD PTR [rbp-0x40]
  408dff:	je     408edb <_start@@Base+0x5bcb>
  408e05:	mov    BYTE PTR [rbp-0x25],0x0
  408e09:	mov    rax,QWORD PTR [rbp-0x40]
  408e0d:	mov    QWORD PTR [rbp-0x18],rax
  408e11:	lea    rcx,[rbp-0x25]
  408e15:	mov    rdx,QWORD PTR [rbp-0x48]
  408e19:	mov    rsi,QWORD PTR [rbp-0x18]
  408e1d:	mov    rax,QWORD PTR [rbp-0x38]
  408e21:	mov    rdi,rax
  408e24:	call   404c05 <_start@@Base+0x18f5>
  408e29:	mov    QWORD PTR [rbp-0x40],rax
  408e2d:	mov    rax,QWORD PTR [rbp-0x18]
  408e31:	cmp    rax,QWORD PTR [rbp-0x40]
  408e35:	jne    408e81 <_start@@Base+0x5b71>
  408e37:	mov    rax,QWORD PTR [rbp-0x40]
  408e3b:	mov    QWORD PTR [rbp-0x18],rax
  408e3f:	lea    rcx,[rbp-0x25]
  408e43:	mov    rdx,QWORD PTR [rbp-0x48]
  408e47:	mov    rsi,QWORD PTR [rbp-0x18]
  408e4b:	mov    rax,QWORD PTR [rbp-0x38]
  408e4f:	mov    r8,rcx
  408e52:	lea    rcx,[rip+0x21367]        # 42a1c0 <filename@@Base+0xc0>
  408e59:	mov    rdi,rax
  408e5c:	call   40559e <_start@@Base+0x228e>
  408e61:	mov    QWORD PTR [rbp-0x40],rax
  408e65:	mov    rax,QWORD PTR [rbp-0x40]
  408e69:	cmp    rax,QWORD PTR [rbp-0x18]
  408e6d:	je     408f84 <_start@@Base+0x5c74>
  408e73:	mov    rax,QWORD PTR [rbp-0x40]
  408e77:	cmp    rax,QWORD PTR [rbp-0x48]
  408e7b:	je     408f84 <_start@@Base+0x5c74>
  408e81:	movzx  eax,BYTE PTR [rbp-0x25]
  408e85:	cmp    al,0x2
  408e87:	jne    408e97 <_start@@Base+0x5b87>
  408e89:	mov    rax,QWORD PTR [rbp-0x38]
  408e8d:	mov    eax,DWORD PTR [rax+0x10]
  408e90:	and    eax,0x2
  408e93:	test   eax,eax
  408e95:	je     408f16 <_start@@Base+0x5c06>
  408e97:	mov    rax,QWORD PTR [rbp-0x38]
  408e9b:	mov    rax,QWORD PTR [rax]
  408e9e:	mov    ecx,0x1
  408ea3:	mov    edx,0x1
  408ea8:	mov    esi,0x2
  408ead:	mov    rdi,rax
  408eb0:	call   419d30 <flatcc_builder_table_add@@Base>
  408eb5:	mov    QWORD PTR [rbp-0x10],rax
  408eb9:	cmp    QWORD PTR [rbp-0x10],0x0
  408ebe:	je     408f87 <_start@@Base+0x5c77>
  408ec4:	movzx  eax,BYTE PTR [rbp-0x25]
  408ec8:	movzx  edx,al
  408ecb:	mov    rax,QWORD PTR [rbp-0x10]
  408ecf:	mov    esi,edx
  408ed1:	mov    rdi,rax
  408ed4:	call   403405 <_start@@Base+0xf5>
  408ed9:	jmp    408f16 <_start@@Base+0x5c06>
  408edb:	mov    rdx,QWORD PTR [rbp-0x48]
  408edf:	mov    rcx,QWORD PTR [rbp-0x40]
  408ee3:	mov    rax,QWORD PTR [rbp-0x38]
  408ee7:	mov    rsi,rcx
  408eea:	mov    rdi,rax
  408eed:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  408ef2:	mov    QWORD PTR [rbp-0x40],rax
  408ef6:	jmp    408f16 <_start@@Base+0x5c06>
  408ef8:	mov    rdx,QWORD PTR [rbp-0x48]
  408efc:	mov    rcx,QWORD PTR [rbp-0x40]
  408f00:	mov    rax,QWORD PTR [rbp-0x38]
  408f04:	mov    rsi,rcx
  408f07:	mov    rdi,rax
  408f0a:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  408f0f:	mov    QWORD PTR [rbp-0x40],rax
  408f13:	jmp    408f16 <_start@@Base+0x5c06>
  408f15:	nop
  408f16:	lea    rcx,[rbp-0x24]
  408f1a:	mov    rdx,QWORD PTR [rbp-0x48]
  408f1e:	mov    rsi,QWORD PTR [rbp-0x40]
  408f22:	mov    rax,QWORD PTR [rbp-0x38]
  408f26:	mov    rdi,rax
  408f29:	call   403f93 <_start@@Base+0xc83>
  408f2e:	mov    QWORD PTR [rbp-0x40],rax
  408f32:	mov    eax,DWORD PTR [rbp-0x24]
  408f35:	test   eax,eax
  408f37:	jne    4089c3 <_start@@Base+0x56b3>
  408f3d:	mov    rax,QWORD PTR [rbp-0x38]
  408f41:	mov    eax,DWORD PTR [rax+0x20]
  408f44:	test   eax,eax
  408f46:	jne    408f8a <_start@@Base+0x5c7a>
  408f48:	mov    rax,QWORD PTR [rbp-0x38]
  408f4c:	mov    rax,QWORD PTR [rax]
  408f4f:	mov    rdi,rax
  408f52:	call   41868f <flatcc_builder_end_table@@Base>
  408f57:	mov    edx,eax
  408f59:	mov    rax,QWORD PTR [rbp-0x50]
  408f5d:	mov    DWORD PTR [rax],edx
  408f5f:	mov    rax,QWORD PTR [rbp-0x50]
  408f63:	mov    eax,DWORD PTR [rax]
  408f65:	test   eax,eax
  408f67:	je     408f8d <_start@@Base+0x5c7d>
  408f69:	mov    rax,QWORD PTR [rbp-0x40]
  408f6d:	jmp    408fa7 <_start@@Base+0x5c97>
  408f6f:	nop
  408f70:	jmp    408f8e <_start@@Base+0x5c7e>
  408f72:	nop
  408f73:	jmp    408f8e <_start@@Base+0x5c7e>
  408f75:	nop
  408f76:	jmp    408f8e <_start@@Base+0x5c7e>
  408f78:	nop
  408f79:	jmp    408f8e <_start@@Base+0x5c7e>
  408f7b:	nop
  408f7c:	jmp    408f8e <_start@@Base+0x5c7e>
  408f7e:	nop
  408f7f:	jmp    408f8e <_start@@Base+0x5c7e>
  408f81:	nop
  408f82:	jmp    408f8e <_start@@Base+0x5c7e>
  408f84:	nop
  408f85:	jmp    408f8e <_start@@Base+0x5c7e>
  408f87:	nop
  408f88:	jmp    408f8e <_start@@Base+0x5c7e>
  408f8a:	nop
  408f8b:	jmp    408f8e <_start@@Base+0x5c7e>
  408f8d:	nop
  408f8e:	mov    rdx,QWORD PTR [rbp-0x48]
  408f92:	mov    rsi,QWORD PTR [rbp-0x40]
  408f96:	mov    rax,QWORD PTR [rbp-0x38]
  408f9a:	mov    ecx,0x21
  408f9f:	mov    rdi,rax
  408fa2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  408fa7:	mov    rdi,QWORD PTR [rbp-0x8]
  408fab:	xor    rdi,QWORD PTR fs:0x28
  408fb4:	je     408fbb <_start@@Base+0x5cab>
  408fb6:	call   403200 <__stack_chk_fail@plt>
  408fbb:	leave  
  408fbc:	ret    
  408fbd:	endbr64 
  408fc1:	push   rbp
  408fc2:	mov    rbp,rsp
  408fc5:	sub    rsp,0x50
  408fc9:	mov    QWORD PTR [rbp-0x38],rdi
  408fcd:	mov    QWORD PTR [rbp-0x40],rsi
  408fd1:	mov    QWORD PTR [rbp-0x48],rdx
  408fd5:	mov    QWORD PTR [rbp-0x50],rcx
  408fd9:	mov    rax,QWORD PTR fs:0x28
  408fe2:	mov    QWORD PTR [rbp-0x8],rax
  408fe6:	xor    eax,eax
  408fe8:	mov    rax,QWORD PTR [rbp-0x50]
  408fec:	mov    DWORD PTR [rax],0x0
  408ff2:	mov    rax,QWORD PTR [rbp-0x38]
  408ff6:	mov    rax,QWORD PTR [rax]
  408ff9:	mov    esi,0x6
  408ffe:	mov    rdi,rax
  409001:	call   417b80 <flatcc_builder_start_table@@Base>
  409006:	test   eax,eax
  409008:	jne    4098aa <_start@@Base+0x659a>
  40900e:	lea    rcx,[rbp-0x2c]
  409012:	mov    rdx,QWORD PTR [rbp-0x48]
  409016:	mov    rsi,QWORD PTR [rbp-0x40]
  40901a:	mov    rax,QWORD PTR [rbp-0x38]
  40901e:	mov    rdi,rax
  409021:	call   403ed6 <_start@@Base+0xbc6>
  409026:	mov    QWORD PTR [rbp-0x40],rax
  40902a:	jmp    40986d <_start@@Base+0x655d>
  40902f:	mov    rdx,QWORD PTR [rbp-0x48]
  409033:	mov    rcx,QWORD PTR [rbp-0x40]
  409037:	mov    rax,QWORD PTR [rbp-0x38]
  40903b:	mov    rsi,rcx
  40903e:	mov    rdi,rax
  409041:	call   403c48 <_start@@Base+0x938>
  409046:	mov    QWORD PTR [rbp-0x40],rax
  40904a:	mov    rdx,QWORD PTR [rbp-0x48]
  40904e:	mov    rax,QWORD PTR [rbp-0x40]
  409052:	mov    rsi,rdx
  409055:	mov    rdi,rax
  409058:	call   403dd5 <_start@@Base+0xac5>
  40905d:	mov    QWORD PTR [rbp-0x20],rax
  409061:	movabs rax,0x696e6376616bffff
  40906b:	cmp    QWORD PTR [rbp-0x20],rax
  40906f:	ja     409150 <_start@@Base+0x5e40>
  409075:	mov    rax,QWORD PTR [rbp-0x20]
  409079:	mov    ax,0x0
  40907d:	mov    rdx,rax
  409080:	movabs rax,0x676c6f62616c0000
  40908a:	cmp    rdx,rax
  40908d:	jne    409130 <_start@@Base+0x5e20>
  409093:	mov    rax,QWORD PTR [rbp-0x40]
  409097:	mov    QWORD PTR [rbp-0x18],rax
  40909b:	mov    rdx,QWORD PTR [rbp-0x48]
  40909f:	mov    rsi,QWORD PTR [rbp-0x18]
  4090a3:	mov    rax,QWORD PTR [rbp-0x38]
  4090a7:	mov    ecx,0x6
  4090ac:	mov    rdi,rax
  4090af:	call   4042cc <_start@@Base+0xfbc>
  4090b4:	mov    QWORD PTR [rbp-0x40],rax
  4090b8:	mov    rax,QWORD PTR [rbp-0x18]
  4090bc:	cmp    rax,QWORD PTR [rbp-0x40]
  4090c0:	je     409110 <_start@@Base+0x5e00>
  4090c2:	mov    rax,QWORD PTR [rbp-0x38]
  4090c6:	mov    rax,QWORD PTR [rax]
  4090c9:	mov    ecx,0x1
  4090ce:	mov    edx,0x0
  4090d3:	mov    esi,0x0
  4090d8:	mov    rdi,rax
  4090db:	call   419d30 <flatcc_builder_table_add@@Base>
  4090e0:	mov    QWORD PTR [rbp-0x10],rax
  4090e4:	cmp    QWORD PTR [rbp-0x10],0x0
  4090e9:	je     4098ad <_start@@Base+0x659d>
  4090ef:	mov    rcx,QWORD PTR [rbp-0x10]
  4090f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4090f7:	mov    rsi,QWORD PTR [rbp-0x40]
  4090fb:	mov    rax,QWORD PTR [rbp-0x38]
  4090ff:	mov    rdi,rax
  409102:	call   406d26 <_start@@Base+0x3a16>
  409107:	mov    QWORD PTR [rbp-0x40],rax
  40910b:	jmp    409851 <_start@@Base+0x6541>
  409110:	mov    rdx,QWORD PTR [rbp-0x48]
  409114:	mov    rcx,QWORD PTR [rbp-0x40]
  409118:	mov    rax,QWORD PTR [rbp-0x38]
  40911c:	mov    rsi,rcx
  40911f:	mov    rdi,rax
  409122:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409127:	mov    QWORD PTR [rbp-0x40],rax
  40912b:	jmp    409851 <_start@@Base+0x6541>
  409130:	mov    rdx,QWORD PTR [rbp-0x48]
  409134:	mov    rcx,QWORD PTR [rbp-0x40]
  409138:	mov    rax,QWORD PTR [rbp-0x38]
  40913c:	mov    rsi,rcx
  40913f:	mov    rdi,rax
  409142:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409147:	mov    QWORD PTR [rbp-0x40],rax
  40914b:	jmp    409851 <_start@@Base+0x6541>
  409150:	movabs rax,0x696e6376616c32ff
  40915a:	cmp    QWORD PTR [rbp-0x20],rax
  40915e:	ja     409424 <_start@@Base+0x6114>
  409164:	mov    rax,QWORD PTR [rbp-0x20]
  409168:	mov    al,0x0
  40916a:	mov    rdx,rax
  40916d:	movabs rax,0x696e6376616c3200
  409177:	cmp    rdx,rax
  40917a:	jne    4092b3 <_start@@Base+0x5fa3>
  409180:	mov    rax,QWORD PTR [rbp-0x40]
  409184:	mov    QWORD PTR [rbp-0x18],rax
  409188:	mov    rdx,QWORD PTR [rbp-0x48]
  40918c:	mov    rsi,QWORD PTR [rbp-0x18]
  409190:	mov    rax,QWORD PTR [rbp-0x38]
  409194:	mov    ecx,0x7
  409199:	mov    rdi,rax
  40919c:	call   4042cc <_start@@Base+0xfbc>
  4091a1:	mov    QWORD PTR [rbp-0x40],rax
  4091a5:	mov    rax,QWORD PTR [rbp-0x18]
  4091a9:	cmp    rax,QWORD PTR [rbp-0x40]
  4091ad:	je     409293 <_start@@Base+0x5f83>
  4091b3:	mov    QWORD PTR [rbp-0x28],0x0
  4091bb:	mov    rax,QWORD PTR [rbp-0x40]
  4091bf:	mov    QWORD PTR [rbp-0x18],rax
  4091c3:	lea    rcx,[rbp-0x28]
  4091c7:	mov    rdx,QWORD PTR [rbp-0x48]
  4091cb:	mov    rsi,QWORD PTR [rbp-0x18]
  4091cf:	mov    rax,QWORD PTR [rbp-0x38]
  4091d3:	mov    rdi,rax
  4091d6:	call   404cc8 <_start@@Base+0x19b8>
  4091db:	mov    QWORD PTR [rbp-0x40],rax
  4091df:	mov    rax,QWORD PTR [rbp-0x18]
  4091e3:	cmp    rax,QWORD PTR [rbp-0x40]
  4091e7:	jne    409233 <_start@@Base+0x5f23>
  4091e9:	mov    rax,QWORD PTR [rbp-0x40]
  4091ed:	mov    QWORD PTR [rbp-0x18],rax
  4091f1:	lea    rcx,[rbp-0x28]
  4091f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4091f9:	mov    rsi,QWORD PTR [rbp-0x18]
  4091fd:	mov    rax,QWORD PTR [rbp-0x38]
  409201:	mov    r8,rcx
  409204:	lea    rcx,[rip+0x20fd5]        # 42a1e0 <filename@@Base+0xe0>
  40920b:	mov    rdi,rax
  40920e:	call   405734 <_start@@Base+0x2424>
  409213:	mov    QWORD PTR [rbp-0x40],rax
  409217:	mov    rax,QWORD PTR [rbp-0x40]
  40921b:	cmp    rax,QWORD PTR [rbp-0x18]
  40921f:	je     4098b0 <_start@@Base+0x65a0>
  409225:	mov    rax,QWORD PTR [rbp-0x40]
  409229:	cmp    rax,QWORD PTR [rbp-0x48]
  40922d:	je     4098b0 <_start@@Base+0x65a0>
  409233:	mov    rax,QWORD PTR [rbp-0x28]
  409237:	test   rax,rax
  40923a:	jne    40924e <_start@@Base+0x5f3e>
  40923c:	mov    rax,QWORD PTR [rbp-0x38]
  409240:	mov    eax,DWORD PTR [rax+0x10]
  409243:	and    eax,0x2
  409246:	test   eax,eax
  409248:	je     409851 <_start@@Base+0x6541>
  40924e:	mov    rax,QWORD PTR [rbp-0x38]
  409252:	mov    rax,QWORD PTR [rax]
  409255:	mov    ecx,0x8
  40925a:	mov    edx,0x8
  40925f:	mov    esi,0x2
  409264:	mov    rdi,rax
  409267:	call   419d30 <flatcc_builder_table_add@@Base>
  40926c:	mov    QWORD PTR [rbp-0x10],rax
  409270:	cmp    QWORD PTR [rbp-0x10],0x0
  409275:	je     4098b3 <_start@@Base+0x65a3>
  40927b:	mov    rdx,QWORD PTR [rbp-0x28]
  40927f:	mov    rax,QWORD PTR [rbp-0x10]
  409283:	mov    rsi,rdx
  409286:	mov    rdi,rax
  409289:	call   4035d0 <_start@@Base+0x2c0>
  40928e:	jmp    409851 <_start@@Base+0x6541>
  409293:	mov    rdx,QWORD PTR [rbp-0x48]
  409297:	mov    rcx,QWORD PTR [rbp-0x40]
  40929b:	mov    rax,QWORD PTR [rbp-0x38]
  40929f:	mov    rsi,rcx
  4092a2:	mov    rdi,rax
  4092a5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4092aa:	mov    QWORD PTR [rbp-0x40],rax
  4092ae:	jmp    409851 <_start@@Base+0x6541>
  4092b3:	mov    rax,QWORD PTR [rbp-0x20]
  4092b7:	mov    ax,0x0
  4092bb:	mov    rdx,rax
  4092be:	movabs rax,0x696e6376616c0000
  4092c8:	cmp    rdx,rax
  4092cb:	jne    409404 <_start@@Base+0x60f4>
  4092d1:	mov    rax,QWORD PTR [rbp-0x40]
  4092d5:	mov    QWORD PTR [rbp-0x18],rax
  4092d9:	mov    rdx,QWORD PTR [rbp-0x48]
  4092dd:	mov    rsi,QWORD PTR [rbp-0x18]
  4092e1:	mov    rax,QWORD PTR [rbp-0x38]
  4092e5:	mov    ecx,0x6
  4092ea:	mov    rdi,rax
  4092ed:	call   4042cc <_start@@Base+0xfbc>
  4092f2:	mov    QWORD PTR [rbp-0x40],rax
  4092f6:	mov    rax,QWORD PTR [rbp-0x18]
  4092fa:	cmp    rax,QWORD PTR [rbp-0x40]
  4092fe:	je     4093e4 <_start@@Base+0x60d4>
  409304:	mov    QWORD PTR [rbp-0x28],0x0
  40930c:	mov    rax,QWORD PTR [rbp-0x40]
  409310:	mov    QWORD PTR [rbp-0x18],rax
  409314:	lea    rcx,[rbp-0x28]
  409318:	mov    rdx,QWORD PTR [rbp-0x48]
  40931c:	mov    rsi,QWORD PTR [rbp-0x18]
  409320:	mov    rax,QWORD PTR [rbp-0x38]
  409324:	mov    rdi,rax
  409327:	call   404cc8 <_start@@Base+0x19b8>
  40932c:	mov    QWORD PTR [rbp-0x40],rax
  409330:	mov    rax,QWORD PTR [rbp-0x18]
  409334:	cmp    rax,QWORD PTR [rbp-0x40]
  409338:	jne    409384 <_start@@Base+0x6074>
  40933a:	mov    rax,QWORD PTR [rbp-0x40]
  40933e:	mov    QWORD PTR [rbp-0x18],rax
  409342:	lea    rcx,[rbp-0x28]
  409346:	mov    rdx,QWORD PTR [rbp-0x48]
  40934a:	mov    rsi,QWORD PTR [rbp-0x18]
  40934e:	mov    rax,QWORD PTR [rbp-0x38]
  409352:	mov    r8,rcx
  409355:	lea    rcx,[rip+0x20ea4]        # 42a200 <filename@@Base+0x100>
  40935c:	mov    rdi,rax
  40935f:	call   405734 <_start@@Base+0x2424>
  409364:	mov    QWORD PTR [rbp-0x40],rax
  409368:	mov    rax,QWORD PTR [rbp-0x40]
  40936c:	cmp    rax,QWORD PTR [rbp-0x18]
  409370:	je     4098b6 <_start@@Base+0x65a6>
  409376:	mov    rax,QWORD PTR [rbp-0x40]
  40937a:	cmp    rax,QWORD PTR [rbp-0x48]
  40937e:	je     4098b6 <_start@@Base+0x65a6>
  409384:	mov    rax,QWORD PTR [rbp-0x28]
  409388:	test   rax,rax
  40938b:	jne    40939f <_start@@Base+0x608f>
  40938d:	mov    rax,QWORD PTR [rbp-0x38]
  409391:	mov    eax,DWORD PTR [rax+0x10]
  409394:	and    eax,0x2
  409397:	test   eax,eax
  409399:	je     409851 <_start@@Base+0x6541>
  40939f:	mov    rax,QWORD PTR [rbp-0x38]
  4093a3:	mov    rax,QWORD PTR [rax]
  4093a6:	mov    ecx,0x8
  4093ab:	mov    edx,0x8
  4093b0:	mov    esi,0x1
  4093b5:	mov    rdi,rax
  4093b8:	call   419d30 <flatcc_builder_table_add@@Base>
  4093bd:	mov    QWORD PTR [rbp-0x10],rax
  4093c1:	cmp    QWORD PTR [rbp-0x10],0x0
  4093c6:	je     4098b9 <_start@@Base+0x65a9>
  4093cc:	mov    rdx,QWORD PTR [rbp-0x28]
  4093d0:	mov    rax,QWORD PTR [rbp-0x10]
  4093d4:	mov    rsi,rdx
  4093d7:	mov    rdi,rax
  4093da:	call   4035d0 <_start@@Base+0x2c0>
  4093df:	jmp    409851 <_start@@Base+0x6541>
  4093e4:	mov    rdx,QWORD PTR [rbp-0x48]
  4093e8:	mov    rcx,QWORD PTR [rbp-0x40]
  4093ec:	mov    rax,QWORD PTR [rbp-0x38]
  4093f0:	mov    rsi,rcx
  4093f3:	mov    rdi,rax
  4093f6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4093fb:	mov    QWORD PTR [rbp-0x40],rax
  4093ff:	jmp    409851 <_start@@Base+0x6541>
  409404:	mov    rdx,QWORD PTR [rbp-0x48]
  409408:	mov    rcx,QWORD PTR [rbp-0x40]
  40940c:	mov    rax,QWORD PTR [rbp-0x38]
  409410:	mov    rsi,rcx
  409413:	mov    rdi,rax
  409416:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40941b:	mov    QWORD PTR [rbp-0x40],rax
  40941f:	jmp    409851 <_start@@Base+0x6541>
  409424:	movabs rax,0x696e6376616c33ff
  40942e:	cmp    QWORD PTR [rbp-0x20],rax
  409432:	ja     4095a2 <_start@@Base+0x6292>
  409438:	mov    rax,QWORD PTR [rbp-0x20]
  40943c:	mov    al,0x0
  40943e:	mov    rdx,rax
  409441:	movabs rax,0x696e6376616c3300
  40944b:	cmp    rdx,rax
  40944e:	jne    409582 <_start@@Base+0x6272>
  409454:	mov    rax,QWORD PTR [rbp-0x40]
  409458:	mov    QWORD PTR [rbp-0x18],rax
  40945c:	mov    rdx,QWORD PTR [rbp-0x48]
  409460:	mov    rsi,QWORD PTR [rbp-0x18]
  409464:	mov    rax,QWORD PTR [rbp-0x38]
  409468:	mov    ecx,0x7
  40946d:	mov    rdi,rax
  409470:	call   4042cc <_start@@Base+0xfbc>
  409475:	mov    QWORD PTR [rbp-0x40],rax
  409479:	mov    rax,QWORD PTR [rbp-0x18]
  40947d:	cmp    rax,QWORD PTR [rbp-0x40]
  409481:	je     409562 <_start@@Base+0x6252>
  409487:	mov    DWORD PTR [rbp-0x28],0x0
  40948e:	mov    rax,QWORD PTR [rbp-0x40]
  409492:	mov    QWORD PTR [rbp-0x18],rax
  409496:	lea    rcx,[rbp-0x28]
  40949a:	mov    rdx,QWORD PTR [rbp-0x48]
  40949e:	mov    rsi,QWORD PTR [rbp-0x18]
  4094a2:	mov    rax,QWORD PTR [rbp-0x38]
  4094a6:	mov    rdi,rax
  4094a9:	call   404d8f <_start@@Base+0x1a7f>
  4094ae:	mov    QWORD PTR [rbp-0x40],rax
  4094b2:	mov    rax,QWORD PTR [rbp-0x18]
  4094b6:	cmp    rax,QWORD PTR [rbp-0x40]
  4094ba:	jne    409506 <_start@@Base+0x61f6>
  4094bc:	mov    rax,QWORD PTR [rbp-0x40]
  4094c0:	mov    QWORD PTR [rbp-0x18],rax
  4094c4:	lea    rcx,[rbp-0x28]
  4094c8:	mov    rdx,QWORD PTR [rbp-0x48]
  4094cc:	mov    rsi,QWORD PTR [rbp-0x18]
  4094d0:	mov    rax,QWORD PTR [rbp-0x38]
  4094d4:	mov    r8,rcx
  4094d7:	lea    rcx,[rip+0x20d42]        # 42a220 <filename@@Base+0x120>
  4094de:	mov    rdi,rax
  4094e1:	call   4058d4 <_start@@Base+0x25c4>
  4094e6:	mov    QWORD PTR [rbp-0x40],rax
  4094ea:	mov    rax,QWORD PTR [rbp-0x40]
  4094ee:	cmp    rax,QWORD PTR [rbp-0x18]
  4094f2:	je     4098bc <_start@@Base+0x65ac>
  4094f8:	mov    rax,QWORD PTR [rbp-0x40]
  4094fc:	cmp    rax,QWORD PTR [rbp-0x48]
  409500:	je     4098bc <_start@@Base+0x65ac>
  409506:	mov    eax,DWORD PTR [rbp-0x28]
  409509:	test   eax,eax
  40950b:	jne    40951f <_start@@Base+0x620f>
  40950d:	mov    rax,QWORD PTR [rbp-0x38]
  409511:	mov    eax,DWORD PTR [rax+0x10]
  409514:	and    eax,0x2
  409517:	test   eax,eax
  409519:	je     409851 <_start@@Base+0x6541>
  40951f:	mov    rax,QWORD PTR [rbp-0x38]
  409523:	mov    rax,QWORD PTR [rax]
  409526:	mov    ecx,0x4
  40952b:	mov    edx,0x4
  409530:	mov    esi,0x3
  409535:	mov    rdi,rax
  409538:	call   419d30 <flatcc_builder_table_add@@Base>
  40953d:	mov    QWORD PTR [rbp-0x10],rax
  409541:	cmp    QWORD PTR [rbp-0x10],0x0
  409546:	je     4098bf <_start@@Base+0x65af>
  40954c:	mov    edx,DWORD PTR [rbp-0x28]
  40954f:	mov    rax,QWORD PTR [rbp-0x10]
  409553:	mov    esi,edx
  409555:	mov    rdi,rax
  409558:	call   40359e <_start@@Base+0x28e>
  40955d:	jmp    409851 <_start@@Base+0x6541>
  409562:	mov    rdx,QWORD PTR [rbp-0x48]
  409566:	mov    rcx,QWORD PTR [rbp-0x40]
  40956a:	mov    rax,QWORD PTR [rbp-0x38]
  40956e:	mov    rsi,rcx
  409571:	mov    rdi,rax
  409574:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409579:	mov    QWORD PTR [rbp-0x40],rax
  40957d:	jmp    409851 <_start@@Base+0x6541>
  409582:	mov    rdx,QWORD PTR [rbp-0x48]
  409586:	mov    rcx,QWORD PTR [rbp-0x40]
  40958a:	mov    rax,QWORD PTR [rbp-0x38]
  40958e:	mov    rsi,rcx
  409591:	mov    rdi,rax
  409594:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409599:	mov    QWORD PTR [rbp-0x40],rax
  40959d:	jmp    409851 <_start@@Base+0x6541>
  4095a2:	mov    rax,QWORD PTR [rbp-0x20]
  4095a6:	mov    al,0x0
  4095a8:	mov    rdx,rax
  4095ab:	movabs rax,0x696e6376616c3500
  4095b5:	cmp    rdx,rax
  4095b8:	jne    4096f1 <_start@@Base+0x63e1>
  4095be:	mov    rax,QWORD PTR [rbp-0x40]
  4095c2:	mov    QWORD PTR [rbp-0x18],rax
  4095c6:	mov    rdx,QWORD PTR [rbp-0x48]
  4095ca:	mov    rsi,QWORD PTR [rbp-0x18]
  4095ce:	mov    rax,QWORD PTR [rbp-0x38]
  4095d2:	mov    ecx,0x7
  4095d7:	mov    rdi,rax
  4095da:	call   4042cc <_start@@Base+0xfbc>
  4095df:	mov    QWORD PTR [rbp-0x40],rax
  4095e3:	mov    rax,QWORD PTR [rbp-0x18]
  4095e7:	cmp    rax,QWORD PTR [rbp-0x40]
  4095eb:	je     4096d1 <_start@@Base+0x63c1>
  4095f1:	mov    QWORD PTR [rbp-0x28],0x0
  4095f9:	mov    rax,QWORD PTR [rbp-0x40]
  4095fd:	mov    QWORD PTR [rbp-0x18],rax
  409601:	lea    rcx,[rbp-0x28]
  409605:	mov    rdx,QWORD PTR [rbp-0x48]
  409609:	mov    rsi,QWORD PTR [rbp-0x18]
  40960d:	mov    rax,QWORD PTR [rbp-0x38]
  409611:	mov    rdi,rax
  409614:	call   404cc8 <_start@@Base+0x19b8>
  409619:	mov    QWORD PTR [rbp-0x40],rax
  40961d:	mov    rax,QWORD PTR [rbp-0x18]
  409621:	cmp    rax,QWORD PTR [rbp-0x40]
  409625:	jne    409671 <_start@@Base+0x6361>
  409627:	mov    rax,QWORD PTR [rbp-0x40]
  40962b:	mov    QWORD PTR [rbp-0x18],rax
  40962f:	lea    rcx,[rbp-0x28]
  409633:	mov    rdx,QWORD PTR [rbp-0x48]
  409637:	mov    rsi,QWORD PTR [rbp-0x18]
  40963b:	mov    rax,QWORD PTR [rbp-0x38]
  40963f:	mov    r8,rcx
  409642:	lea    rcx,[rip+0x20bf7]        # 42a240 <filename@@Base+0x140>
  409649:	mov    rdi,rax
  40964c:	call   405734 <_start@@Base+0x2424>
  409651:	mov    QWORD PTR [rbp-0x40],rax
  409655:	mov    rax,QWORD PTR [rbp-0x40]
  409659:	cmp    rax,QWORD PTR [rbp-0x18]
  40965d:	je     4098c2 <_start@@Base+0x65b2>
  409663:	mov    rax,QWORD PTR [rbp-0x40]
  409667:	cmp    rax,QWORD PTR [rbp-0x48]
  40966b:	je     4098c2 <_start@@Base+0x65b2>
  409671:	mov    rax,QWORD PTR [rbp-0x28]
  409675:	test   rax,rax
  409678:	jne    40968c <_start@@Base+0x637c>
  40967a:	mov    rax,QWORD PTR [rbp-0x38]
  40967e:	mov    eax,DWORD PTR [rax+0x10]
  409681:	and    eax,0x2
  409684:	test   eax,eax
  409686:	je     409851 <_start@@Base+0x6541>
  40968c:	mov    rax,QWORD PTR [rbp-0x38]
  409690:	mov    rax,QWORD PTR [rax]
  409693:	mov    ecx,0x8
  409698:	mov    edx,0x8
  40969d:	mov    esi,0x5
  4096a2:	mov    rdi,rax
  4096a5:	call   419d30 <flatcc_builder_table_add@@Base>
  4096aa:	mov    QWORD PTR [rbp-0x10],rax
  4096ae:	cmp    QWORD PTR [rbp-0x10],0x0
  4096b3:	je     4098c5 <_start@@Base+0x65b5>
  4096b9:	mov    rdx,QWORD PTR [rbp-0x28]
  4096bd:	mov    rax,QWORD PTR [rbp-0x10]
  4096c1:	mov    rsi,rdx
  4096c4:	mov    rdi,rax
  4096c7:	call   4035d0 <_start@@Base+0x2c0>
  4096cc:	jmp    409851 <_start@@Base+0x6541>
  4096d1:	mov    rdx,QWORD PTR [rbp-0x48]
  4096d5:	mov    rcx,QWORD PTR [rbp-0x40]
  4096d9:	mov    rax,QWORD PTR [rbp-0x38]
  4096dd:	mov    rsi,rcx
  4096e0:	mov    rdi,rax
  4096e3:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4096e8:	mov    QWORD PTR [rbp-0x40],rax
  4096ec:	jmp    409851 <_start@@Base+0x6541>
  4096f1:	mov    rax,QWORD PTR [rbp-0x20]
  4096f5:	mov    al,0x0
  4096f7:	mov    rdx,rax
  4096fa:	movabs rax,0x696e6376616c3400
  409704:	cmp    rdx,rax
  409707:	jne    409836 <_start@@Base+0x6526>
  40970d:	mov    rax,QWORD PTR [rbp-0x40]
  409711:	mov    QWORD PTR [rbp-0x18],rax
  409715:	mov    rdx,QWORD PTR [rbp-0x48]
  409719:	mov    rsi,QWORD PTR [rbp-0x18]
  40971d:	mov    rax,QWORD PTR [rbp-0x38]
  409721:	mov    ecx,0x7
  409726:	mov    rdi,rax
  409729:	call   4042cc <_start@@Base+0xfbc>
  40972e:	mov    QWORD PTR [rbp-0x40],rax
  409732:	mov    rax,QWORD PTR [rbp-0x18]
  409736:	cmp    rax,QWORD PTR [rbp-0x40]
  40973a:	je     409819 <_start@@Base+0x6509>
  409740:	mov    QWORD PTR [rbp-0x28],0x0
  409748:	mov    rax,QWORD PTR [rbp-0x40]
  40974c:	mov    QWORD PTR [rbp-0x18],rax
  409750:	lea    rcx,[rbp-0x28]
  409754:	mov    rdx,QWORD PTR [rbp-0x48]
  409758:	mov    rsi,QWORD PTR [rbp-0x18]
  40975c:	mov    rax,QWORD PTR [rbp-0x38]
  409760:	mov    rdi,rax
  409763:	call   404cc8 <_start@@Base+0x19b8>
  409768:	mov    QWORD PTR [rbp-0x40],rax
  40976c:	mov    rax,QWORD PTR [rbp-0x18]
  409770:	cmp    rax,QWORD PTR [rbp-0x40]
  409774:	jne    4097c0 <_start@@Base+0x64b0>
  409776:	mov    rax,QWORD PTR [rbp-0x40]
  40977a:	mov    QWORD PTR [rbp-0x18],rax
  40977e:	lea    rcx,[rbp-0x28]
  409782:	mov    rdx,QWORD PTR [rbp-0x48]
  409786:	mov    rsi,QWORD PTR [rbp-0x18]
  40978a:	mov    rax,QWORD PTR [rbp-0x38]
  40978e:	mov    r8,rcx
  409791:	lea    rcx,[rip+0x20ac8]        # 42a260 <filename@@Base+0x160>
  409798:	mov    rdi,rax
  40979b:	call   405734 <_start@@Base+0x2424>
  4097a0:	mov    QWORD PTR [rbp-0x40],rax
  4097a4:	mov    rax,QWORD PTR [rbp-0x40]
  4097a8:	cmp    rax,QWORD PTR [rbp-0x18]
  4097ac:	je     4098c8 <_start@@Base+0x65b8>
  4097b2:	mov    rax,QWORD PTR [rbp-0x40]
  4097b6:	cmp    rax,QWORD PTR [rbp-0x48]
  4097ba:	je     4098c8 <_start@@Base+0x65b8>
  4097c0:	mov    rax,QWORD PTR [rbp-0x28]
  4097c4:	test   rax,rax
  4097c7:	jne    4097d7 <_start@@Base+0x64c7>
  4097c9:	mov    rax,QWORD PTR [rbp-0x38]
  4097cd:	mov    eax,DWORD PTR [rax+0x10]
  4097d0:	and    eax,0x2
  4097d3:	test   eax,eax
  4097d5:	je     409851 <_start@@Base+0x6541>
  4097d7:	mov    rax,QWORD PTR [rbp-0x38]
  4097db:	mov    rax,QWORD PTR [rax]
  4097de:	mov    ecx,0x8
  4097e3:	mov    edx,0x8
  4097e8:	mov    esi,0x4
  4097ed:	mov    rdi,rax
  4097f0:	call   419d30 <flatcc_builder_table_add@@Base>
  4097f5:	mov    QWORD PTR [rbp-0x10],rax
  4097f9:	cmp    QWORD PTR [rbp-0x10],0x0
  4097fe:	je     4098cb <_start@@Base+0x65bb>
  409804:	mov    rdx,QWORD PTR [rbp-0x28]
  409808:	mov    rax,QWORD PTR [rbp-0x10]
  40980c:	mov    rsi,rdx
  40980f:	mov    rdi,rax
  409812:	call   4035d0 <_start@@Base+0x2c0>
  409817:	jmp    409851 <_start@@Base+0x6541>
  409819:	mov    rdx,QWORD PTR [rbp-0x48]
  40981d:	mov    rcx,QWORD PTR [rbp-0x40]
  409821:	mov    rax,QWORD PTR [rbp-0x38]
  409825:	mov    rsi,rcx
  409828:	mov    rdi,rax
  40982b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409830:	mov    QWORD PTR [rbp-0x40],rax
  409834:	jmp    409851 <_start@@Base+0x6541>
  409836:	mov    rdx,QWORD PTR [rbp-0x48]
  40983a:	mov    rcx,QWORD PTR [rbp-0x40]
  40983e:	mov    rax,QWORD PTR [rbp-0x38]
  409842:	mov    rsi,rcx
  409845:	mov    rdi,rax
  409848:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40984d:	mov    QWORD PTR [rbp-0x40],rax
  409851:	lea    rcx,[rbp-0x2c]
  409855:	mov    rdx,QWORD PTR [rbp-0x48]
  409859:	mov    rsi,QWORD PTR [rbp-0x40]
  40985d:	mov    rax,QWORD PTR [rbp-0x38]
  409861:	mov    rdi,rax
  409864:	call   403f93 <_start@@Base+0xc83>
  409869:	mov    QWORD PTR [rbp-0x40],rax
  40986d:	mov    eax,DWORD PTR [rbp-0x2c]
  409870:	test   eax,eax
  409872:	jne    40902f <_start@@Base+0x5d1f>
  409878:	mov    rax,QWORD PTR [rbp-0x38]
  40987c:	mov    eax,DWORD PTR [rax+0x20]
  40987f:	test   eax,eax
  409881:	jne    4098ce <_start@@Base+0x65be>
  409883:	mov    rax,QWORD PTR [rbp-0x38]
  409887:	mov    rax,QWORD PTR [rax]
  40988a:	mov    rdi,rax
  40988d:	call   41868f <flatcc_builder_end_table@@Base>
  409892:	mov    edx,eax
  409894:	mov    rax,QWORD PTR [rbp-0x50]
  409898:	mov    DWORD PTR [rax],edx
  40989a:	mov    rax,QWORD PTR [rbp-0x50]
  40989e:	mov    eax,DWORD PTR [rax]
  4098a0:	test   eax,eax
  4098a2:	je     4098d1 <_start@@Base+0x65c1>
  4098a4:	mov    rax,QWORD PTR [rbp-0x40]
  4098a8:	jmp    4098eb <_start@@Base+0x65db>
  4098aa:	nop
  4098ab:	jmp    4098d2 <_start@@Base+0x65c2>
  4098ad:	nop
  4098ae:	jmp    4098d2 <_start@@Base+0x65c2>
  4098b0:	nop
  4098b1:	jmp    4098d2 <_start@@Base+0x65c2>
  4098b3:	nop
  4098b4:	jmp    4098d2 <_start@@Base+0x65c2>
  4098b6:	nop
  4098b7:	jmp    4098d2 <_start@@Base+0x65c2>
  4098b9:	nop
  4098ba:	jmp    4098d2 <_start@@Base+0x65c2>
  4098bc:	nop
  4098bd:	jmp    4098d2 <_start@@Base+0x65c2>
  4098bf:	nop
  4098c0:	jmp    4098d2 <_start@@Base+0x65c2>
  4098c2:	nop
  4098c3:	jmp    4098d2 <_start@@Base+0x65c2>
  4098c5:	nop
  4098c6:	jmp    4098d2 <_start@@Base+0x65c2>
  4098c8:	nop
  4098c9:	jmp    4098d2 <_start@@Base+0x65c2>
  4098cb:	nop
  4098cc:	jmp    4098d2 <_start@@Base+0x65c2>
  4098ce:	nop
  4098cf:	jmp    4098d2 <_start@@Base+0x65c2>
  4098d1:	nop
  4098d2:	mov    rdx,QWORD PTR [rbp-0x48]
  4098d6:	mov    rsi,QWORD PTR [rbp-0x40]
  4098da:	mov    rax,QWORD PTR [rbp-0x38]
  4098de:	mov    ecx,0x21
  4098e3:	mov    rdi,rax
  4098e6:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4098eb:	mov    rdi,QWORD PTR [rbp-0x8]
  4098ef:	xor    rdi,QWORD PTR fs:0x28
  4098f8:	je     4098ff <_start@@Base+0x65ef>
  4098fa:	call   403200 <__stack_chk_fail@plt>
  4098ff:	leave  
  409900:	ret    
  409901:	endbr64 
  409905:	push   rbp
  409906:	mov    rbp,rsp
  409909:	sub    rsp,0x50
  40990d:	mov    QWORD PTR [rbp-0x38],rdi
  409911:	mov    QWORD PTR [rbp-0x40],rsi
  409915:	mov    QWORD PTR [rbp-0x48],rdx
  409919:	mov    QWORD PTR [rbp-0x50],rcx
  40991d:	mov    rax,QWORD PTR fs:0x28
  409926:	mov    QWORD PTR [rbp-0x8],rax
  40992a:	xor    eax,eax
  40992c:	lea    rcx,[rbp-0x2c]
  409930:	mov    rdx,QWORD PTR [rbp-0x48]
  409934:	mov    rsi,QWORD PTR [rbp-0x40]
  409938:	mov    rax,QWORD PTR [rbp-0x38]
  40993c:	mov    rdi,rax
  40993f:	call   403ed6 <_start@@Base+0xbc6>
  409944:	mov    QWORD PTR [rbp-0x40],rax
  409948:	jmp    40a063 <_start@@Base+0x6d53>
  40994d:	mov    rdx,QWORD PTR [rbp-0x48]
  409951:	mov    rcx,QWORD PTR [rbp-0x40]
  409955:	mov    rax,QWORD PTR [rbp-0x38]
  409959:	mov    rsi,rcx
  40995c:	mov    rdi,rax
  40995f:	call   403c48 <_start@@Base+0x938>
  409964:	mov    QWORD PTR [rbp-0x40],rax
  409968:	mov    rdx,QWORD PTR [rbp-0x48]
  40996c:	mov    rax,QWORD PTR [rbp-0x40]
  409970:	mov    rsi,rdx
  409973:	mov    rdi,rax
  409976:	call   403dd5 <_start@@Base+0xac5>
  40997b:	mov    QWORD PTR [rbp-0x20],rax
  40997f:	movabs rax,0x7465737432ffffff
  409989:	cmp    QWORD PTR [rbp-0x20],rax
  40998d:	ja     409be2 <_start@@Base+0x68d2>
  409993:	mov    rax,QWORD PTR [rbp-0x20]
  409997:	and    rax,0xffffffffff000000
  40999d:	mov    rdx,rax
  4099a0:	movabs rax,0x7465737432000000
  4099aa:	cmp    rdx,rax
  4099ad:	jne    409aa8 <_start@@Base+0x6798>
  4099b3:	mov    rax,QWORD PTR [rbp-0x40]
  4099b7:	mov    QWORD PTR [rbp-0x18],rax
  4099bb:	mov    rdx,QWORD PTR [rbp-0x48]
  4099bf:	mov    rsi,QWORD PTR [rbp-0x18]
  4099c3:	mov    rax,QWORD PTR [rbp-0x38]
  4099c7:	mov    ecx,0x5
  4099cc:	mov    rdi,rax
  4099cf:	call   4042cc <_start@@Base+0xfbc>
  4099d4:	mov    QWORD PTR [rbp-0x40],rax
  4099d8:	mov    rax,QWORD PTR [rbp-0x18]
  4099dc:	cmp    rax,QWORD PTR [rbp-0x40]
  4099e0:	je     409a88 <_start@@Base+0x6778>
  4099e6:	mov    BYTE PTR [rbp-0x28],0x0
  4099ea:	mov    rax,QWORD PTR [rbp-0x50]
  4099ee:	add    rax,0x18
  4099f2:	mov    QWORD PTR [rbp-0x10],rax
  4099f6:	mov    rax,QWORD PTR [rbp-0x40]
  4099fa:	mov    QWORD PTR [rbp-0x18],rax
  4099fe:	lea    rcx,[rbp-0x28]
  409a02:	mov    rdx,QWORD PTR [rbp-0x48]
  409a06:	mov    rsi,QWORD PTR [rbp-0x18]
  409a0a:	mov    rax,QWORD PTR [rbp-0x38]
  409a0e:	mov    rdi,rax
  409a11:	call   404f1a <_start@@Base+0x1c0a>
  409a16:	mov    QWORD PTR [rbp-0x40],rax
  409a1a:	mov    rax,QWORD PTR [rbp-0x18]
  409a1e:	cmp    rax,QWORD PTR [rbp-0x40]
  409a22:	jne    409a6e <_start@@Base+0x675e>
  409a24:	mov    rax,QWORD PTR [rbp-0x40]
  409a28:	mov    QWORD PTR [rbp-0x18],rax
  409a2c:	lea    rcx,[rbp-0x28]
  409a30:	mov    rdx,QWORD PTR [rbp-0x48]
  409a34:	mov    rsi,QWORD PTR [rbp-0x18]
  409a38:	mov    rax,QWORD PTR [rbp-0x38]
  409a3c:	mov    r8,rcx
  409a3f:	lea    rcx,[rip+0x2083a]        # 42a280 <filename@@Base+0x180>
  409a46:	mov    rdi,rax
  409a49:	call   405c0d <_start@@Base+0x28fd>
  409a4e:	mov    QWORD PTR [rbp-0x40],rax
  409a52:	mov    rax,QWORD PTR [rbp-0x40]
  409a56:	cmp    rax,QWORD PTR [rbp-0x18]
  409a5a:	je     40a074 <_start@@Base+0x6d64>
  409a60:	mov    rax,QWORD PTR [rbp-0x40]
  409a64:	cmp    rax,QWORD PTR [rbp-0x48]
  409a68:	je     40a074 <_start@@Base+0x6d64>
  409a6e:	movzx  eax,BYTE PTR [rbp-0x28]
  409a72:	movsx  edx,al
  409a75:	mov    rax,QWORD PTR [rbp-0x10]
  409a79:	mov    esi,edx
  409a7b:	mov    rdi,rax
  409a7e:	call   403507 <_start@@Base+0x1f7>
  409a83:	jmp    40a047 <_start@@Base+0x6d37>
  409a88:	mov    rdx,QWORD PTR [rbp-0x48]
  409a8c:	mov    rcx,QWORD PTR [rbp-0x40]
  409a90:	mov    rax,QWORD PTR [rbp-0x38]
  409a94:	mov    rsi,rcx
  409a97:	mov    rdi,rax
  409a9a:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409a9f:	mov    QWORD PTR [rbp-0x40],rax
  409aa3:	jmp    40a047 <_start@@Base+0x6d37>
  409aa8:	mov    rax,QWORD PTR [rbp-0x20]
  409aac:	and    rax,0xffffffffff000000
  409ab2:	mov    rdx,rax
  409ab5:	movabs rax,0x7465737431000000
  409abf:	cmp    rdx,rax
  409ac2:	jne    409bc2 <_start@@Base+0x68b2>
  409ac8:	mov    rax,QWORD PTR [rbp-0x40]
  409acc:	mov    QWORD PTR [rbp-0x18],rax
  409ad0:	mov    rdx,QWORD PTR [rbp-0x48]
  409ad4:	mov    rsi,QWORD PTR [rbp-0x18]
  409ad8:	mov    rax,QWORD PTR [rbp-0x38]
  409adc:	mov    ecx,0x5
  409ae1:	mov    rdi,rax
  409ae4:	call   4042cc <_start@@Base+0xfbc>
  409ae9:	mov    QWORD PTR [rbp-0x40],rax
  409aed:	mov    rax,QWORD PTR [rbp-0x18]
  409af1:	cmp    rax,QWORD PTR [rbp-0x40]
  409af5:	je     409ba2 <_start@@Base+0x6892>
  409afb:	vxorpd xmm0,xmm0,xmm0
  409aff:	vmovsd QWORD PTR [rbp-0x28],xmm0
  409b04:	mov    rax,QWORD PTR [rbp-0x50]
  409b08:	add    rax,0x10
  409b0c:	mov    QWORD PTR [rbp-0x10],rax
  409b10:	mov    rax,QWORD PTR [rbp-0x40]
  409b14:	mov    QWORD PTR [rbp-0x18],rax
  409b18:	lea    rcx,[rbp-0x28]
  409b1c:	mov    rdx,QWORD PTR [rbp-0x48]
  409b20:	mov    rsi,QWORD PTR [rbp-0x18]
  409b24:	mov    rax,QWORD PTR [rbp-0x38]
  409b28:	mov    rdi,rax
  409b2b:	call   41fef2 <flatcc_json_parser_double@@Base>
  409b30:	mov    QWORD PTR [rbp-0x40],rax
  409b34:	mov    rax,QWORD PTR [rbp-0x18]
  409b38:	cmp    rax,QWORD PTR [rbp-0x40]
  409b3c:	jne    409b88 <_start@@Base+0x6878>
  409b3e:	mov    rax,QWORD PTR [rbp-0x40]
  409b42:	mov    QWORD PTR [rbp-0x18],rax
  409b46:	lea    rcx,[rbp-0x28]
  409b4a:	mov    rdx,QWORD PTR [rbp-0x48]
  409b4e:	mov    rsi,QWORD PTR [rbp-0x18]
  409b52:	mov    rax,QWORD PTR [rbp-0x38]
  409b56:	mov    r8,rcx
  409b59:	lea    rcx,[rip+0x20740]        # 42a2a0 <filename@@Base+0x1a0>
  409b60:	mov    rdi,rax
  409b63:	call   4060e3 <_start@@Base+0x2dd3>
  409b68:	mov    QWORD PTR [rbp-0x40],rax
  409b6c:	mov    rax,QWORD PTR [rbp-0x40]
  409b70:	cmp    rax,QWORD PTR [rbp-0x18]
  409b74:	je     40a077 <_start@@Base+0x6d67>
  409b7a:	mov    rax,QWORD PTR [rbp-0x40]
  409b7e:	cmp    rax,QWORD PTR [rbp-0x48]
  409b82:	je     40a077 <_start@@Base+0x6d67>
  409b88:	mov    rdx,QWORD PTR [rbp-0x28]
  409b8c:	mov    rax,QWORD PTR [rbp-0x10]
  409b90:	vmovq  xmm0,rdx
  409b95:	mov    rdi,rax
  409b98:	call   403701 <_start@@Base+0x3f1>
  409b9d:	jmp    40a047 <_start@@Base+0x6d37>
  409ba2:	mov    rdx,QWORD PTR [rbp-0x48]
  409ba6:	mov    rcx,QWORD PTR [rbp-0x40]
  409baa:	mov    rax,QWORD PTR [rbp-0x38]
  409bae:	mov    rsi,rcx
  409bb1:	mov    rdi,rax
  409bb4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409bb9:	mov    QWORD PTR [rbp-0x40],rax
  409bbd:	jmp    40a047 <_start@@Base+0x6d37>
  409bc2:	mov    rdx,QWORD PTR [rbp-0x48]
  409bc6:	mov    rcx,QWORD PTR [rbp-0x40]
  409bca:	mov    rax,QWORD PTR [rbp-0x38]
  409bce:	mov    rsi,rcx
  409bd1:	mov    rdi,rax
  409bd4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409bd9:	mov    QWORD PTR [rbp-0x40],rax
  409bdd:	jmp    40a047 <_start@@Base+0x6d37>
  409be2:	movabs rax,0x77ffffffffffffff
  409bec:	cmp    QWORD PTR [rbp-0x20],rax
  409bf0:	ja     409cae <_start@@Base+0x699e>
  409bf6:	mov    rax,QWORD PTR [rbp-0x20]
  409bfa:	and    rax,0xffffffffff000000
  409c00:	mov    rdx,rax
  409c03:	movabs rax,0x7465737433000000
  409c0d:	cmp    rdx,rax
  409c10:	jne    409c8e <_start@@Base+0x697e>
  409c12:	mov    rax,QWORD PTR [rbp-0x40]
  409c16:	mov    QWORD PTR [rbp-0x18],rax
  409c1a:	mov    rdx,QWORD PTR [rbp-0x48]
  409c1e:	mov    rsi,QWORD PTR [rbp-0x18]
  409c22:	mov    rax,QWORD PTR [rbp-0x38]
  409c26:	mov    ecx,0x5
  409c2b:	mov    rdi,rax
  409c2e:	call   4042cc <_start@@Base+0xfbc>
  409c33:	mov    QWORD PTR [rbp-0x40],rax
  409c37:	mov    rax,QWORD PTR [rbp-0x18]
  409c3b:	cmp    rax,QWORD PTR [rbp-0x40]
  409c3f:	je     409c6e <_start@@Base+0x695e>
  409c41:	mov    rax,QWORD PTR [rbp-0x50]
  409c45:	add    rax,0x1a
  409c49:	mov    QWORD PTR [rbp-0x10],rax
  409c4d:	mov    rcx,QWORD PTR [rbp-0x10]
  409c51:	mov    rdx,QWORD PTR [rbp-0x48]
  409c55:	mov    rsi,QWORD PTR [rbp-0x40]
  409c59:	mov    rax,QWORD PTR [rbp-0x38]
  409c5d:	mov    rdi,rax
  409c60:	call   40802d <_start@@Base+0x4d1d>
  409c65:	mov    QWORD PTR [rbp-0x40],rax
  409c69:	jmp    40a047 <_start@@Base+0x6d37>
  409c6e:	mov    rdx,QWORD PTR [rbp-0x48]
  409c72:	mov    rcx,QWORD PTR [rbp-0x40]
  409c76:	mov    rax,QWORD PTR [rbp-0x38]
  409c7a:	mov    rsi,rcx
  409c7d:	mov    rdi,rax
  409c80:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409c85:	mov    QWORD PTR [rbp-0x40],rax
  409c89:	jmp    40a047 <_start@@Base+0x6d37>
  409c8e:	mov    rdx,QWORD PTR [rbp-0x48]
  409c92:	mov    rcx,QWORD PTR [rbp-0x40]
  409c96:	mov    rax,QWORD PTR [rbp-0x38]
  409c9a:	mov    rsi,rcx
  409c9d:	mov    rdi,rax
  409ca0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409ca5:	mov    QWORD PTR [rbp-0x40],rax
  409ca9:	jmp    40a047 <_start@@Base+0x6d37>
  409cae:	movabs rax,0x78ffffffffffffff
  409cb8:	cmp    QWORD PTR [rbp-0x20],rax
  409cbc:	ja     409dfa <_start@@Base+0x6aea>
  409cc2:	movabs rax,0xff00000000000000
  409ccc:	and    rax,QWORD PTR [rbp-0x20]
  409cd0:	mov    rdx,rax
  409cd3:	movabs rax,0x7800000000000000
  409cdd:	cmp    rdx,rax
  409ce0:	jne    409dda <_start@@Base+0x6aca>
  409ce6:	mov    rax,QWORD PTR [rbp-0x40]
  409cea:	mov    QWORD PTR [rbp-0x18],rax
  409cee:	mov    rdx,QWORD PTR [rbp-0x48]
  409cf2:	mov    rsi,QWORD PTR [rbp-0x18]
  409cf6:	mov    rax,QWORD PTR [rbp-0x38]
  409cfa:	mov    ecx,0x1
  409cff:	mov    rdi,rax
  409d02:	call   4042cc <_start@@Base+0xfbc>
  409d07:	mov    QWORD PTR [rbp-0x40],rax
  409d0b:	mov    rax,QWORD PTR [rbp-0x18]
  409d0f:	cmp    rax,QWORD PTR [rbp-0x40]
  409d13:	je     409dba <_start@@Base+0x6aaa>
  409d19:	vxorps xmm0,xmm0,xmm0
  409d1d:	vmovss DWORD PTR [rbp-0x28],xmm0
  409d22:	mov    rax,QWORD PTR [rbp-0x50]
  409d26:	mov    QWORD PTR [rbp-0x10],rax
  409d2a:	mov    rax,QWORD PTR [rbp-0x40]
  409d2e:	mov    QWORD PTR [rbp-0x18],rax
  409d32:	lea    rcx,[rbp-0x28]
  409d36:	mov    rdx,QWORD PTR [rbp-0x48]
  409d3a:	mov    rsi,QWORD PTR [rbp-0x18]
  409d3e:	mov    rax,QWORD PTR [rbp-0x38]
  409d42:	mov    rdi,rax
  409d45:	call   420037 <flatcc_json_parser_float@@Base>
  409d4a:	mov    QWORD PTR [rbp-0x40],rax
  409d4e:	mov    rax,QWORD PTR [rbp-0x18]
  409d52:	cmp    rax,QWORD PTR [rbp-0x40]
  409d56:	jne    409da2 <_start@@Base+0x6a92>
  409d58:	mov    rax,QWORD PTR [rbp-0x40]
  409d5c:	mov    QWORD PTR [rbp-0x18],rax
  409d60:	lea    rcx,[rbp-0x28]
  409d64:	mov    rdx,QWORD PTR [rbp-0x48]
  409d68:	mov    rsi,QWORD PTR [rbp-0x18]
  409d6c:	mov    rax,QWORD PTR [rbp-0x38]
  409d70:	mov    r8,rcx
  409d73:	lea    rcx,[rip+0x20546]        # 42a2c0 <filename@@Base+0x1c0>
  409d7a:	mov    rdi,rax
  409d7d:	call   405f3d <_start@@Base+0x2c2d>
  409d82:	mov    QWORD PTR [rbp-0x40],rax
  409d86:	mov    rax,QWORD PTR [rbp-0x40]
  409d8a:	cmp    rax,QWORD PTR [rbp-0x18]
  409d8e:	je     40a07a <_start@@Base+0x6d6a>
  409d94:	mov    rax,QWORD PTR [rbp-0x40]
  409d98:	cmp    rax,QWORD PTR [rbp-0x48]
  409d9c:	je     40a07a <_start@@Base+0x6d6a>
  409da2:	mov    edx,DWORD PTR [rbp-0x28]
  409da5:	mov    rax,QWORD PTR [rbp-0x10]
  409da9:	vmovd  xmm0,edx
  409dad:	mov    rdi,rax
  409db0:	call   403656 <_start@@Base+0x346>
  409db5:	jmp    40a047 <_start@@Base+0x6d37>
  409dba:	mov    rdx,QWORD PTR [rbp-0x48]
  409dbe:	mov    rcx,QWORD PTR [rbp-0x40]
  409dc2:	mov    rax,QWORD PTR [rbp-0x38]
  409dc6:	mov    rsi,rcx
  409dc9:	mov    rdi,rax
  409dcc:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409dd1:	mov    QWORD PTR [rbp-0x40],rax
  409dd5:	jmp    40a047 <_start@@Base+0x6d37>
  409dda:	mov    rdx,QWORD PTR [rbp-0x48]
  409dde:	mov    rcx,QWORD PTR [rbp-0x40]
  409de2:	mov    rax,QWORD PTR [rbp-0x38]
  409de6:	mov    rsi,rcx
  409de9:	mov    rdi,rax
  409dec:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409df1:	mov    QWORD PTR [rbp-0x40],rax
  409df5:	jmp    40a047 <_start@@Base+0x6d37>
  409dfa:	movabs rax,0xff00000000000000
  409e04:	and    rax,QWORD PTR [rbp-0x20]
  409e08:	mov    rdx,rax
  409e0b:	movabs rax,0x7a00000000000000
  409e15:	cmp    rdx,rax
  409e18:	jne    409f16 <_start@@Base+0x6c06>
  409e1e:	mov    rax,QWORD PTR [rbp-0x40]
  409e22:	mov    QWORD PTR [rbp-0x18],rax
  409e26:	mov    rdx,QWORD PTR [rbp-0x48]
  409e2a:	mov    rsi,QWORD PTR [rbp-0x18]
  409e2e:	mov    rax,QWORD PTR [rbp-0x38]
  409e32:	mov    ecx,0x1
  409e37:	mov    rdi,rax
  409e3a:	call   4042cc <_start@@Base+0xfbc>
  409e3f:	mov    QWORD PTR [rbp-0x40],rax
  409e43:	mov    rax,QWORD PTR [rbp-0x18]
  409e47:	cmp    rax,QWORD PTR [rbp-0x40]
  409e4b:	je     409ef6 <_start@@Base+0x6be6>
  409e51:	vxorps xmm0,xmm0,xmm0
  409e55:	vmovss DWORD PTR [rbp-0x28],xmm0
  409e5a:	mov    rax,QWORD PTR [rbp-0x50]
  409e5e:	add    rax,0x8
  409e62:	mov    QWORD PTR [rbp-0x10],rax
  409e66:	mov    rax,QWORD PTR [rbp-0x40]
  409e6a:	mov    QWORD PTR [rbp-0x18],rax
  409e6e:	lea    rcx,[rbp-0x28]
  409e72:	mov    rdx,QWORD PTR [rbp-0x48]
  409e76:	mov    rsi,QWORD PTR [rbp-0x18]
  409e7a:	mov    rax,QWORD PTR [rbp-0x38]
  409e7e:	mov    rdi,rax
  409e81:	call   420037 <flatcc_json_parser_float@@Base>
  409e86:	mov    QWORD PTR [rbp-0x40],rax
  409e8a:	mov    rax,QWORD PTR [rbp-0x18]
  409e8e:	cmp    rax,QWORD PTR [rbp-0x40]
  409e92:	jne    409ede <_start@@Base+0x6bce>
  409e94:	mov    rax,QWORD PTR [rbp-0x40]
  409e98:	mov    QWORD PTR [rbp-0x18],rax
  409e9c:	lea    rcx,[rbp-0x28]
  409ea0:	mov    rdx,QWORD PTR [rbp-0x48]
  409ea4:	mov    rsi,QWORD PTR [rbp-0x18]
  409ea8:	mov    rax,QWORD PTR [rbp-0x38]
  409eac:	mov    r8,rcx
  409eaf:	lea    rcx,[rip+0x2042a]        # 42a2e0 <filename@@Base+0x1e0>
  409eb6:	mov    rdi,rax
  409eb9:	call   405f3d <_start@@Base+0x2c2d>
  409ebe:	mov    QWORD PTR [rbp-0x40],rax
  409ec2:	mov    rax,QWORD PTR [rbp-0x40]
  409ec6:	cmp    rax,QWORD PTR [rbp-0x18]
  409eca:	je     40a07d <_start@@Base+0x6d6d>
  409ed0:	mov    rax,QWORD PTR [rbp-0x40]
  409ed4:	cmp    rax,QWORD PTR [rbp-0x48]
  409ed8:	je     40a07d <_start@@Base+0x6d6d>
  409ede:	mov    edx,DWORD PTR [rbp-0x28]
  409ee1:	mov    rax,QWORD PTR [rbp-0x10]
  409ee5:	vmovd  xmm0,edx
  409ee9:	mov    rdi,rax
  409eec:	call   403656 <_start@@Base+0x346>
  409ef1:	jmp    40a047 <_start@@Base+0x6d37>
  409ef6:	mov    rdx,QWORD PTR [rbp-0x48]
  409efa:	mov    rcx,QWORD PTR [rbp-0x40]
  409efe:	mov    rax,QWORD PTR [rbp-0x38]
  409f02:	mov    rsi,rcx
  409f05:	mov    rdi,rax
  409f08:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  409f0d:	mov    QWORD PTR [rbp-0x40],rax
  409f11:	jmp    40a047 <_start@@Base+0x6d37>
  409f16:	movabs rax,0xff00000000000000
  409f20:	and    rax,QWORD PTR [rbp-0x20]
  409f24:	mov    rdx,rax
  409f27:	movabs rax,0x7900000000000000
  409f31:	cmp    rdx,rax
  409f34:	jne    40a02c <_start@@Base+0x6d1c>
  409f3a:	mov    rax,QWORD PTR [rbp-0x40]
  409f3e:	mov    QWORD PTR [rbp-0x18],rax
  409f42:	mov    rdx,QWORD PTR [rbp-0x48]
  409f46:	mov    rsi,QWORD PTR [rbp-0x18]
  409f4a:	mov    rax,QWORD PTR [rbp-0x38]
  409f4e:	mov    ecx,0x1
  409f53:	mov    rdi,rax
  409f56:	call   4042cc <_start@@Base+0xfbc>
  409f5b:	mov    QWORD PTR [rbp-0x40],rax
  409f5f:	mov    rax,QWORD PTR [rbp-0x18]
  409f63:	cmp    rax,QWORD PTR [rbp-0x40]
  409f67:	je     40a00f <_start@@Base+0x6cff>
  409f6d:	vxorps xmm0,xmm0,xmm0
  409f71:	vmovss DWORD PTR [rbp-0x28],xmm0
  409f76:	mov    rax,QWORD PTR [rbp-0x50]
  409f7a:	add    rax,0x4
  409f7e:	mov    QWORD PTR [rbp-0x10],rax
  409f82:	mov    rax,QWORD PTR [rbp-0x40]
  409f86:	mov    QWORD PTR [rbp-0x18],rax
  409f8a:	lea    rcx,[rbp-0x28]
  409f8e:	mov    rdx,QWORD PTR [rbp-0x48]
  409f92:	mov    rsi,QWORD PTR [rbp-0x18]
  409f96:	mov    rax,QWORD PTR [rbp-0x38]
  409f9a:	mov    rdi,rax
  409f9d:	call   420037 <flatcc_json_parser_float@@Base>
  409fa2:	mov    QWORD PTR [rbp-0x40],rax
  409fa6:	mov    rax,QWORD PTR [rbp-0x18]
  409faa:	cmp    rax,QWORD PTR [rbp-0x40]
  409fae:	jne    409ffa <_start@@Base+0x6cea>
  409fb0:	mov    rax,QWORD PTR [rbp-0x40]
  409fb4:	mov    QWORD PTR [rbp-0x18],rax
  409fb8:	lea    rcx,[rbp-0x28]
  409fbc:	mov    rdx,QWORD PTR [rbp-0x48]
  409fc0:	mov    rsi,QWORD PTR [rbp-0x18]
  409fc4:	mov    rax,QWORD PTR [rbp-0x38]
  409fc8:	mov    r8,rcx
  409fcb:	lea    rcx,[rip+0x2032e]        # 42a300 <filename@@Base+0x200>
  409fd2:	mov    rdi,rax
  409fd5:	call   405f3d <_start@@Base+0x2c2d>
  409fda:	mov    QWORD PTR [rbp-0x40],rax
  409fde:	mov    rax,QWORD PTR [rbp-0x40]
  409fe2:	cmp    rax,QWORD PTR [rbp-0x18]
  409fe6:	je     40a080 <_start@@Base+0x6d70>
  409fec:	mov    rax,QWORD PTR [rbp-0x40]
  409ff0:	cmp    rax,QWORD PTR [rbp-0x48]
  409ff4:	je     40a080 <_start@@Base+0x6d70>
  409ffa:	mov    edx,DWORD PTR [rbp-0x28]
  409ffd:	mov    rax,QWORD PTR [rbp-0x10]
  40a001:	vmovd  xmm0,edx
  40a005:	mov    rdi,rax
  40a008:	call   403656 <_start@@Base+0x346>
  40a00d:	jmp    40a047 <_start@@Base+0x6d37>
  40a00f:	mov    rdx,QWORD PTR [rbp-0x48]
  40a013:	mov    rcx,QWORD PTR [rbp-0x40]
  40a017:	mov    rax,QWORD PTR [rbp-0x38]
  40a01b:	mov    rsi,rcx
  40a01e:	mov    rdi,rax
  40a021:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a026:	mov    QWORD PTR [rbp-0x40],rax
  40a02a:	jmp    40a047 <_start@@Base+0x6d37>
  40a02c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a030:	mov    rcx,QWORD PTR [rbp-0x40]
  40a034:	mov    rax,QWORD PTR [rbp-0x38]
  40a038:	mov    rsi,rcx
  40a03b:	mov    rdi,rax
  40a03e:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a043:	mov    QWORD PTR [rbp-0x40],rax
  40a047:	lea    rcx,[rbp-0x2c]
  40a04b:	mov    rdx,QWORD PTR [rbp-0x48]
  40a04f:	mov    rsi,QWORD PTR [rbp-0x40]
  40a053:	mov    rax,QWORD PTR [rbp-0x38]
  40a057:	mov    rdi,rax
  40a05a:	call   403f93 <_start@@Base+0xc83>
  40a05f:	mov    QWORD PTR [rbp-0x40],rax
  40a063:	mov    eax,DWORD PTR [rbp-0x2c]
  40a066:	test   eax,eax
  40a068:	jne    40994d <_start@@Base+0x663d>
  40a06e:	mov    rax,QWORD PTR [rbp-0x40]
  40a072:	jmp    40a09a <_start@@Base+0x6d8a>
  40a074:	nop
  40a075:	jmp    40a081 <_start@@Base+0x6d71>
  40a077:	nop
  40a078:	jmp    40a081 <_start@@Base+0x6d71>
  40a07a:	nop
  40a07b:	jmp    40a081 <_start@@Base+0x6d71>
  40a07d:	nop
  40a07e:	jmp    40a081 <_start@@Base+0x6d71>
  40a080:	nop
  40a081:	mov    rdx,QWORD PTR [rbp-0x48]
  40a085:	mov    rsi,QWORD PTR [rbp-0x40]
  40a089:	mov    rax,QWORD PTR [rbp-0x38]
  40a08d:	mov    ecx,0x21
  40a092:	mov    rdi,rax
  40a095:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40a09a:	mov    rdi,QWORD PTR [rbp-0x8]
  40a09e:	xor    rdi,QWORD PTR fs:0x28
  40a0a7:	je     40a0ae <_start@@Base+0x6d9e>
  40a0a9:	call   403200 <__stack_chk_fail@plt>
  40a0ae:	leave  
  40a0af:	ret    
  40a0b0:	endbr64 
  40a0b4:	push   rbp
  40a0b5:	mov    rbp,rsp
  40a0b8:	sub    rsp,0x30
  40a0bc:	mov    QWORD PTR [rbp-0x18],rdi
  40a0c0:	mov    QWORD PTR [rbp-0x20],rsi
  40a0c4:	mov    QWORD PTR [rbp-0x28],rdx
  40a0c8:	mov    QWORD PTR [rbp-0x30],rcx
  40a0cc:	mov    rax,QWORD PTR [rbp-0x30]
  40a0d0:	mov    DWORD PTR [rax],0x0
  40a0d6:	mov    rax,QWORD PTR [rbp-0x18]
  40a0da:	mov    rax,QWORD PTR [rax]
  40a0dd:	mov    edx,0x10
  40a0e2:	mov    esi,0x20
  40a0e7:	mov    rdi,rax
  40a0ea:	call   417048 <flatcc_builder_start_struct@@Base>
  40a0ef:	mov    QWORD PTR [rbp-0x8],rax
  40a0f3:	cmp    QWORD PTR [rbp-0x8],0x0
  40a0f8:	je     40a147 <_start@@Base+0x6e37>
  40a0fa:	mov    rcx,QWORD PTR [rbp-0x8]
  40a0fe:	mov    rdx,QWORD PTR [rbp-0x28]
  40a102:	mov    rsi,QWORD PTR [rbp-0x20]
  40a106:	mov    rax,QWORD PTR [rbp-0x18]
  40a10a:	mov    rdi,rax
  40a10d:	call   409901 <_start@@Base+0x65f1>
  40a112:	mov    QWORD PTR [rbp-0x20],rax
  40a116:	mov    rax,QWORD PTR [rbp-0x20]
  40a11a:	cmp    rax,QWORD PTR [rbp-0x28]
  40a11e:	je     40a14a <_start@@Base+0x6e3a>
  40a120:	mov    rax,QWORD PTR [rbp-0x18]
  40a124:	mov    rax,QWORD PTR [rax]
  40a127:	mov    rdi,rax
  40a12a:	call   4170ca <flatcc_builder_end_struct@@Base>
  40a12f:	mov    edx,eax
  40a131:	mov    rax,QWORD PTR [rbp-0x30]
  40a135:	mov    DWORD PTR [rax],edx
  40a137:	mov    rax,QWORD PTR [rbp-0x30]
  40a13b:	mov    eax,DWORD PTR [rax]
  40a13d:	test   eax,eax
  40a13f:	je     40a14a <_start@@Base+0x6e3a>
  40a141:	mov    rax,QWORD PTR [rbp-0x20]
  40a145:	jmp    40a164 <_start@@Base+0x6e54>
  40a147:	nop
  40a148:	jmp    40a14b <_start@@Base+0x6e3b>
  40a14a:	nop
  40a14b:	mov    rdx,QWORD PTR [rbp-0x28]
  40a14f:	mov    rsi,QWORD PTR [rbp-0x20]
  40a153:	mov    rax,QWORD PTR [rbp-0x18]
  40a157:	mov    ecx,0x21
  40a15c:	mov    rdi,rax
  40a15f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40a164:	leave  
  40a165:	ret    
  40a166:	endbr64 
  40a16a:	push   rbp
  40a16b:	mov    rbp,rsp
  40a16e:	sub    rsp,0x50
  40a172:	mov    QWORD PTR [rbp-0x38],rdi
  40a176:	mov    QWORD PTR [rbp-0x40],rsi
  40a17a:	mov    QWORD PTR [rbp-0x48],rdx
  40a17e:	mov    QWORD PTR [rbp-0x50],rcx
  40a182:	mov    rax,QWORD PTR fs:0x28
  40a18b:	mov    QWORD PTR [rbp-0x8],rax
  40a18f:	xor    eax,eax
  40a191:	lea    rcx,[rbp-0x28]
  40a195:	mov    rdx,QWORD PTR [rbp-0x48]
  40a199:	mov    rsi,QWORD PTR [rbp-0x40]
  40a19d:	mov    rax,QWORD PTR [rbp-0x38]
  40a1a1:	mov    rdi,rax
  40a1a4:	call   403ed6 <_start@@Base+0xbc6>
  40a1a9:	mov    QWORD PTR [rbp-0x40],rax
  40a1ad:	jmp    40a42d <_start@@Base+0x711d>
  40a1b2:	mov    rdx,QWORD PTR [rbp-0x48]
  40a1b6:	mov    rcx,QWORD PTR [rbp-0x40]
  40a1ba:	mov    rax,QWORD PTR [rbp-0x38]
  40a1be:	mov    rsi,rcx
  40a1c1:	mov    rdi,rax
  40a1c4:	call   403c48 <_start@@Base+0x938>
  40a1c9:	mov    QWORD PTR [rbp-0x40],rax
  40a1cd:	mov    rdx,QWORD PTR [rbp-0x48]
  40a1d1:	mov    rax,QWORD PTR [rbp-0x40]
  40a1d5:	mov    rsi,rdx
  40a1d8:	mov    rdi,rax
  40a1db:	call   403dd5 <_start@@Base+0xac5>
  40a1e0:	mov    QWORD PTR [rbp-0x20],rax
  40a1e4:	movabs rax,0xffff000000000000
  40a1ee:	and    rax,QWORD PTR [rbp-0x20]
  40a1f2:	mov    rdx,rax
  40a1f5:	movabs rax,0x6964000000000000
  40a1ff:	cmp    rdx,rax
  40a202:	jne    40a2f8 <_start@@Base+0x6fe8>
  40a208:	mov    rax,QWORD PTR [rbp-0x40]
  40a20c:	mov    QWORD PTR [rbp-0x18],rax
  40a210:	mov    rdx,QWORD PTR [rbp-0x48]
  40a214:	mov    rsi,QWORD PTR [rbp-0x18]
  40a218:	mov    rax,QWORD PTR [rbp-0x38]
  40a21c:	mov    ecx,0x2
  40a221:	mov    rdi,rax
  40a224:	call   4042cc <_start@@Base+0xfbc>
  40a229:	mov    QWORD PTR [rbp-0x40],rax
  40a22d:	mov    rax,QWORD PTR [rbp-0x18]
  40a231:	cmp    rax,QWORD PTR [rbp-0x40]
  40a235:	je     40a2d8 <_start@@Base+0x6fc8>
  40a23b:	mov    DWORD PTR [rbp-0x24],0x0
  40a242:	mov    rax,QWORD PTR [rbp-0x50]
  40a246:	mov    QWORD PTR [rbp-0x10],rax
  40a24a:	mov    rax,QWORD PTR [rbp-0x40]
  40a24e:	mov    QWORD PTR [rbp-0x18],rax
  40a252:	lea    rcx,[rbp-0x24]
  40a256:	mov    rdx,QWORD PTR [rbp-0x48]
  40a25a:	mov    rsi,QWORD PTR [rbp-0x18]
  40a25e:	mov    rax,QWORD PTR [rbp-0x38]
  40a262:	mov    rdi,rax
  40a265:	call   404a7a <_start@@Base+0x176a>
  40a26a:	mov    QWORD PTR [rbp-0x40],rax
  40a26e:	mov    rax,QWORD PTR [rbp-0x18]
  40a272:	cmp    rax,QWORD PTR [rbp-0x40]
  40a276:	jne    40a2c2 <_start@@Base+0x6fb2>
  40a278:	mov    rax,QWORD PTR [rbp-0x40]
  40a27c:	mov    QWORD PTR [rbp-0x18],rax
  40a280:	lea    rcx,[rbp-0x24]
  40a284:	mov    rdx,QWORD PTR [rbp-0x48]
  40a288:	mov    rsi,QWORD PTR [rbp-0x18]
  40a28c:	mov    rax,QWORD PTR [rbp-0x38]
  40a290:	mov    r8,rcx
  40a293:	lea    rcx,[rip+0x20086]        # 42a320 <filename@@Base+0x220>
  40a29a:	mov    rdi,rax
  40a29d:	call   405269 <_start@@Base+0x1f59>
  40a2a2:	mov    QWORD PTR [rbp-0x40],rax
  40a2a6:	mov    rax,QWORD PTR [rbp-0x40]
  40a2aa:	cmp    rax,QWORD PTR [rbp-0x18]
  40a2ae:	je     40a43e <_start@@Base+0x712e>
  40a2b4:	mov    rax,QWORD PTR [rbp-0x40]
  40a2b8:	cmp    rax,QWORD PTR [rbp-0x48]
  40a2bc:	je     40a43e <_start@@Base+0x712e>
  40a2c2:	mov    edx,DWORD PTR [rbp-0x24]
  40a2c5:	mov    rax,QWORD PTR [rbp-0x10]
  40a2c9:	mov    esi,edx
  40a2cb:	mov    rdi,rax
  40a2ce:	call   40346f <_start@@Base+0x15f>
  40a2d3:	jmp    40a411 <_start@@Base+0x7101>
  40a2d8:	mov    rdx,QWORD PTR [rbp-0x48]
  40a2dc:	mov    rcx,QWORD PTR [rbp-0x40]
  40a2e0:	mov    rax,QWORD PTR [rbp-0x38]
  40a2e4:	mov    rsi,rcx
  40a2e7:	mov    rdi,rax
  40a2ea:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a2ef:	mov    QWORD PTR [rbp-0x40],rax
  40a2f3:	jmp    40a411 <_start@@Base+0x7101>
  40a2f8:	movabs rax,0x64697374616e6365
  40a302:	cmp    QWORD PTR [rbp-0x20],rax
  40a306:	jne    40a3f6 <_start@@Base+0x70e6>
  40a30c:	mov    rax,QWORD PTR [rbp-0x40]
  40a310:	mov    QWORD PTR [rbp-0x18],rax
  40a314:	mov    rdx,QWORD PTR [rbp-0x48]
  40a318:	mov    rsi,QWORD PTR [rbp-0x18]
  40a31c:	mov    rax,QWORD PTR [rbp-0x38]
  40a320:	mov    ecx,0x8
  40a325:	mov    rdi,rax
  40a328:	call   4042cc <_start@@Base+0xfbc>
  40a32d:	mov    QWORD PTR [rbp-0x40],rax
  40a331:	mov    rax,QWORD PTR [rbp-0x18]
  40a335:	cmp    rax,QWORD PTR [rbp-0x40]
  40a339:	je     40a3d9 <_start@@Base+0x70c9>
  40a33f:	mov    DWORD PTR [rbp-0x24],0x0
  40a346:	mov    rax,QWORD PTR [rbp-0x50]
  40a34a:	add    rax,0x4
  40a34e:	mov    QWORD PTR [rbp-0x10],rax
  40a352:	mov    rax,QWORD PTR [rbp-0x40]
  40a356:	mov    QWORD PTR [rbp-0x18],rax
  40a35a:	lea    rcx,[rbp-0x24]
  40a35e:	mov    rdx,QWORD PTR [rbp-0x48]
  40a362:	mov    rsi,QWORD PTR [rbp-0x18]
  40a366:	mov    rax,QWORD PTR [rbp-0x38]
  40a36a:	mov    rdi,rax
  40a36d:	call   404a7a <_start@@Base+0x176a>
  40a372:	mov    QWORD PTR [rbp-0x40],rax
  40a376:	mov    rax,QWORD PTR [rbp-0x18]
  40a37a:	cmp    rax,QWORD PTR [rbp-0x40]
  40a37e:	jne    40a3c6 <_start@@Base+0x70b6>
  40a380:	mov    rax,QWORD PTR [rbp-0x40]
  40a384:	mov    QWORD PTR [rbp-0x18],rax
  40a388:	lea    rcx,[rbp-0x24]
  40a38c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a390:	mov    rsi,QWORD PTR [rbp-0x18]
  40a394:	mov    rax,QWORD PTR [rbp-0x38]
  40a398:	mov    r8,rcx
  40a39b:	lea    rcx,[rip+0x1ff9e]        # 42a340 <filename@@Base+0x240>
  40a3a2:	mov    rdi,rax
  40a3a5:	call   405269 <_start@@Base+0x1f59>
  40a3aa:	mov    QWORD PTR [rbp-0x40],rax
  40a3ae:	mov    rax,QWORD PTR [rbp-0x40]
  40a3b2:	cmp    rax,QWORD PTR [rbp-0x18]
  40a3b6:	je     40a441 <_start@@Base+0x7131>
  40a3bc:	mov    rax,QWORD PTR [rbp-0x40]
  40a3c0:	cmp    rax,QWORD PTR [rbp-0x48]
  40a3c4:	je     40a441 <_start@@Base+0x7131>
  40a3c6:	mov    edx,DWORD PTR [rbp-0x24]
  40a3c9:	mov    rax,QWORD PTR [rbp-0x10]
  40a3cd:	mov    esi,edx
  40a3cf:	mov    rdi,rax
  40a3d2:	call   40346f <_start@@Base+0x15f>
  40a3d7:	jmp    40a411 <_start@@Base+0x7101>
  40a3d9:	mov    rdx,QWORD PTR [rbp-0x48]
  40a3dd:	mov    rcx,QWORD PTR [rbp-0x40]
  40a3e1:	mov    rax,QWORD PTR [rbp-0x38]
  40a3e5:	mov    rsi,rcx
  40a3e8:	mov    rdi,rax
  40a3eb:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a3f0:	mov    QWORD PTR [rbp-0x40],rax
  40a3f4:	jmp    40a411 <_start@@Base+0x7101>
  40a3f6:	mov    rdx,QWORD PTR [rbp-0x48]
  40a3fa:	mov    rcx,QWORD PTR [rbp-0x40]
  40a3fe:	mov    rax,QWORD PTR [rbp-0x38]
  40a402:	mov    rsi,rcx
  40a405:	mov    rdi,rax
  40a408:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a40d:	mov    QWORD PTR [rbp-0x40],rax
  40a411:	lea    rcx,[rbp-0x28]
  40a415:	mov    rdx,QWORD PTR [rbp-0x48]
  40a419:	mov    rsi,QWORD PTR [rbp-0x40]
  40a41d:	mov    rax,QWORD PTR [rbp-0x38]
  40a421:	mov    rdi,rax
  40a424:	call   403f93 <_start@@Base+0xc83>
  40a429:	mov    QWORD PTR [rbp-0x40],rax
  40a42d:	mov    eax,DWORD PTR [rbp-0x28]
  40a430:	test   eax,eax
  40a432:	jne    40a1b2 <_start@@Base+0x6ea2>
  40a438:	mov    rax,QWORD PTR [rbp-0x40]
  40a43c:	jmp    40a45b <_start@@Base+0x714b>
  40a43e:	nop
  40a43f:	jmp    40a442 <_start@@Base+0x7132>
  40a441:	nop
  40a442:	mov    rdx,QWORD PTR [rbp-0x48]
  40a446:	mov    rsi,QWORD PTR [rbp-0x40]
  40a44a:	mov    rax,QWORD PTR [rbp-0x38]
  40a44e:	mov    ecx,0x21
  40a453:	mov    rdi,rax
  40a456:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40a45b:	mov    rdi,QWORD PTR [rbp-0x8]
  40a45f:	xor    rdi,QWORD PTR fs:0x28
  40a468:	je     40a46f <_start@@Base+0x715f>
  40a46a:	call   403200 <__stack_chk_fail@plt>
  40a46f:	leave  
  40a470:	ret    
  40a471:	endbr64 
  40a475:	push   rbp
  40a476:	mov    rbp,rsp
  40a479:	sub    rsp,0x30
  40a47d:	mov    QWORD PTR [rbp-0x18],rdi
  40a481:	mov    QWORD PTR [rbp-0x20],rsi
  40a485:	mov    QWORD PTR [rbp-0x28],rdx
  40a489:	mov    QWORD PTR [rbp-0x30],rcx
  40a48d:	mov    rax,QWORD PTR [rbp-0x30]
  40a491:	mov    DWORD PTR [rax],0x0
  40a497:	mov    rax,QWORD PTR [rbp-0x18]
  40a49b:	mov    rax,QWORD PTR [rax]
  40a49e:	mov    edx,0x4
  40a4a3:	mov    esi,0x8
  40a4a8:	mov    rdi,rax
  40a4ab:	call   417048 <flatcc_builder_start_struct@@Base>
  40a4b0:	mov    QWORD PTR [rbp-0x8],rax
  40a4b4:	cmp    QWORD PTR [rbp-0x8],0x0
  40a4b9:	je     40a508 <_start@@Base+0x71f8>
  40a4bb:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4bf:	mov    rdx,QWORD PTR [rbp-0x28]
  40a4c3:	mov    rsi,QWORD PTR [rbp-0x20]
  40a4c7:	mov    rax,QWORD PTR [rbp-0x18]
  40a4cb:	mov    rdi,rax
  40a4ce:	call   40a166 <_start@@Base+0x6e56>
  40a4d3:	mov    QWORD PTR [rbp-0x20],rax
  40a4d7:	mov    rax,QWORD PTR [rbp-0x20]
  40a4db:	cmp    rax,QWORD PTR [rbp-0x28]
  40a4df:	je     40a50b <_start@@Base+0x71fb>
  40a4e1:	mov    rax,QWORD PTR [rbp-0x18]
  40a4e5:	mov    rax,QWORD PTR [rax]
  40a4e8:	mov    rdi,rax
  40a4eb:	call   4170ca <flatcc_builder_end_struct@@Base>
  40a4f0:	mov    edx,eax
  40a4f2:	mov    rax,QWORD PTR [rbp-0x30]
  40a4f6:	mov    DWORD PTR [rax],edx
  40a4f8:	mov    rax,QWORD PTR [rbp-0x30]
  40a4fc:	mov    eax,DWORD PTR [rax]
  40a4fe:	test   eax,eax
  40a500:	je     40a50b <_start@@Base+0x71fb>
  40a502:	mov    rax,QWORD PTR [rbp-0x20]
  40a506:	jmp    40a525 <_start@@Base+0x7215>
  40a508:	nop
  40a509:	jmp    40a50c <_start@@Base+0x71fc>
  40a50b:	nop
  40a50c:	mov    rdx,QWORD PTR [rbp-0x28]
  40a510:	mov    rsi,QWORD PTR [rbp-0x20]
  40a514:	mov    rax,QWORD PTR [rbp-0x18]
  40a518:	mov    ecx,0x21
  40a51d:	mov    rdi,rax
  40a520:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40a525:	leave  
  40a526:	ret    
  40a527:	endbr64 
  40a52b:	push   rbp
  40a52c:	mov    rbp,rsp
  40a52f:	sub    rsp,0x60
  40a533:	mov    QWORD PTR [rbp-0x48],rdi
  40a537:	mov    QWORD PTR [rbp-0x50],rsi
  40a53b:	mov    QWORD PTR [rbp-0x58],rdx
  40a53f:	mov    QWORD PTR [rbp-0x60],rcx
  40a543:	mov    rax,QWORD PTR fs:0x28
  40a54c:	mov    QWORD PTR [rbp-0x8],rax
  40a550:	xor    eax,eax
  40a552:	mov    rax,QWORD PTR [rbp-0x60]
  40a556:	mov    DWORD PTR [rax],0x0
  40a55c:	mov    rax,QWORD PTR [rbp-0x48]
  40a560:	mov    rax,QWORD PTR [rax]
  40a563:	mov    esi,0x3
  40a568:	mov    rdi,rax
  40a56b:	call   417b80 <flatcc_builder_start_table@@Base>
  40a570:	test   eax,eax
  40a572:	jne    40a9e2 <_start@@Base+0x76d2>
  40a578:	lea    rcx,[rbp-0x38]
  40a57c:	mov    rdx,QWORD PTR [rbp-0x58]
  40a580:	mov    rsi,QWORD PTR [rbp-0x50]
  40a584:	mov    rax,QWORD PTR [rbp-0x48]
  40a588:	mov    rdi,rax
  40a58b:	call   403ed6 <_start@@Base+0xbc6>
  40a590:	mov    QWORD PTR [rbp-0x50],rax
  40a594:	jmp    40a9a5 <_start@@Base+0x7695>
  40a599:	mov    rdx,QWORD PTR [rbp-0x58]
  40a59d:	mov    rcx,QWORD PTR [rbp-0x50]
  40a5a1:	mov    rax,QWORD PTR [rbp-0x48]
  40a5a5:	mov    rsi,rcx
  40a5a8:	mov    rdi,rax
  40a5ab:	call   403c48 <_start@@Base+0x938>
  40a5b0:	mov    QWORD PTR [rbp-0x50],rax
  40a5b4:	mov    rdx,QWORD PTR [rbp-0x58]
  40a5b8:	mov    rax,QWORD PTR [rbp-0x50]
  40a5bc:	mov    rsi,rdx
  40a5bf:	mov    rdi,rax
  40a5c2:	call   403dd5 <_start@@Base+0xac5>
  40a5c7:	mov    QWORD PTR [rbp-0x28],rax
  40a5cb:	movabs rax,0x6963ffffffffffff
  40a5d5:	cmp    QWORD PTR [rbp-0x28],rax
  40a5d9:	ja     40a752 <_start@@Base+0x7442>
  40a5df:	mov    rax,QWORD PTR [rbp-0x28]
  40a5e3:	and    rax,0xffffffffff000000
  40a5e9:	mov    rdx,rax
  40a5ec:	movabs rax,0x636f756e74000000
  40a5f6:	cmp    rdx,rax
  40a5f9:	jne    40a732 <_start@@Base+0x7422>
  40a5ff:	mov    rax,QWORD PTR [rbp-0x50]
  40a603:	mov    QWORD PTR [rbp-0x20],rax
  40a607:	mov    rdx,QWORD PTR [rbp-0x58]
  40a60b:	mov    rsi,QWORD PTR [rbp-0x20]
  40a60f:	mov    rax,QWORD PTR [rbp-0x48]
  40a613:	mov    ecx,0x5
  40a618:	mov    rdi,rax
  40a61b:	call   4042cc <_start@@Base+0xfbc>
  40a620:	mov    QWORD PTR [rbp-0x50],rax
  40a624:	mov    rax,QWORD PTR [rbp-0x20]
  40a628:	cmp    rax,QWORD PTR [rbp-0x50]
  40a62c:	je     40a712 <_start@@Base+0x7402>
  40a632:	mov    WORD PTR [rbp-0x30],0x0
  40a638:	mov    rax,QWORD PTR [rbp-0x50]
  40a63c:	mov    QWORD PTR [rbp-0x20],rax
  40a640:	lea    rcx,[rbp-0x30]
  40a644:	mov    rdx,QWORD PTR [rbp-0x58]
  40a648:	mov    rsi,QWORD PTR [rbp-0x20]
  40a64c:	mov    rax,QWORD PTR [rbp-0x48]
  40a650:	mov    rdi,rax
  40a653:	call   404b40 <_start@@Base+0x1830>
  40a658:	mov    QWORD PTR [rbp-0x50],rax
  40a65c:	mov    rax,QWORD PTR [rbp-0x20]
  40a660:	cmp    rax,QWORD PTR [rbp-0x50]
  40a664:	jne    40a6b0 <_start@@Base+0x73a0>
  40a666:	mov    rax,QWORD PTR [rbp-0x50]
  40a66a:	mov    QWORD PTR [rbp-0x20],rax
  40a66e:	lea    rcx,[rbp-0x30]
  40a672:	mov    rdx,QWORD PTR [rbp-0x58]
  40a676:	mov    rsi,QWORD PTR [rbp-0x20]
  40a67a:	mov    rax,QWORD PTR [rbp-0x48]
  40a67e:	mov    r8,rcx
  40a681:	lea    rcx,[rip+0x1fcd8]        # 42a360 <filename@@Base+0x260>
  40a688:	mov    rdi,rax
  40a68b:	call   405403 <_start@@Base+0x20f3>
  40a690:	mov    QWORD PTR [rbp-0x50],rax
  40a694:	mov    rax,QWORD PTR [rbp-0x50]
  40a698:	cmp    rax,QWORD PTR [rbp-0x20]
  40a69c:	je     40a9e5 <_start@@Base+0x76d5>
  40a6a2:	mov    rax,QWORD PTR [rbp-0x50]
  40a6a6:	cmp    rax,QWORD PTR [rbp-0x58]
  40a6aa:	je     40a9e5 <_start@@Base+0x76d5>
  40a6b0:	movzx  eax,WORD PTR [rbp-0x30]
  40a6b4:	test   ax,ax
  40a6b7:	jne    40a6cb <_start@@Base+0x73bb>
  40a6b9:	mov    rax,QWORD PTR [rbp-0x48]
  40a6bd:	mov    eax,DWORD PTR [rax+0x10]
  40a6c0:	and    eax,0x2
  40a6c3:	test   eax,eax
  40a6c5:	je     40a989 <_start@@Base+0x7679>
  40a6cb:	mov    rax,QWORD PTR [rbp-0x48]
  40a6cf:	mov    rax,QWORD PTR [rax]
  40a6d2:	mov    ecx,0x2
  40a6d7:	mov    edx,0x2
  40a6dc:	mov    esi,0x2
  40a6e1:	mov    rdi,rax
  40a6e4:	call   419d30 <flatcc_builder_table_add@@Base>
  40a6e9:	mov    QWORD PTR [rbp-0x18],rax
  40a6ed:	cmp    QWORD PTR [rbp-0x18],0x0
  40a6f2:	je     40a9e8 <_start@@Base+0x76d8>
  40a6f8:	movzx  eax,WORD PTR [rbp-0x30]
  40a6fc:	movzx  edx,ax
  40a6ff:	mov    rax,QWORD PTR [rbp-0x18]
  40a703:	mov    esi,edx
  40a705:	mov    rdi,rax
  40a708:	call   40343a <_start@@Base+0x12a>
  40a70d:	jmp    40a989 <_start@@Base+0x7679>
  40a712:	mov    rdx,QWORD PTR [rbp-0x58]
  40a716:	mov    rcx,QWORD PTR [rbp-0x50]
  40a71a:	mov    rax,QWORD PTR [rbp-0x48]
  40a71e:	mov    rsi,rcx
  40a721:	mov    rdi,rax
  40a724:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a729:	mov    QWORD PTR [rbp-0x50],rax
  40a72d:	jmp    40a989 <_start@@Base+0x7679>
  40a732:	mov    rdx,QWORD PTR [rbp-0x58]
  40a736:	mov    rcx,QWORD PTR [rbp-0x50]
  40a73a:	mov    rax,QWORD PTR [rbp-0x48]
  40a73e:	mov    rsi,rcx
  40a741:	mov    rdi,rax
  40a744:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a749:	mov    QWORD PTR [rbp-0x50],rax
  40a74d:	jmp    40a989 <_start@@Base+0x7679>
  40a752:	movabs rax,0xffffff0000000000
  40a75c:	and    rax,QWORD PTR [rbp-0x28]
  40a760:	mov    rdx,rax
  40a763:	movabs rax,0x76616c0000000000
  40a76d:	cmp    rdx,rax
  40a770:	jne    40a8a9 <_start@@Base+0x7599>
  40a776:	mov    rax,QWORD PTR [rbp-0x50]
  40a77a:	mov    QWORD PTR [rbp-0x20],rax
  40a77e:	mov    rdx,QWORD PTR [rbp-0x58]
  40a782:	mov    rsi,QWORD PTR [rbp-0x20]
  40a786:	mov    rax,QWORD PTR [rbp-0x48]
  40a78a:	mov    ecx,0x3
  40a78f:	mov    rdi,rax
  40a792:	call   4042cc <_start@@Base+0xfbc>
  40a797:	mov    QWORD PTR [rbp-0x50],rax
  40a79b:	mov    rax,QWORD PTR [rbp-0x20]
  40a79f:	cmp    rax,QWORD PTR [rbp-0x50]
  40a7a3:	je     40a889 <_start@@Base+0x7579>
  40a7a9:	mov    QWORD PTR [rbp-0x30],0x0
  40a7b1:	mov    rax,QWORD PTR [rbp-0x50]
  40a7b5:	mov    QWORD PTR [rbp-0x20],rax
  40a7b9:	lea    rcx,[rbp-0x30]
  40a7bd:	mov    rdx,QWORD PTR [rbp-0x58]
  40a7c1:	mov    rsi,QWORD PTR [rbp-0x20]
  40a7c5:	mov    rax,QWORD PTR [rbp-0x48]
  40a7c9:	mov    rdi,rax
  40a7cc:	call   404cc8 <_start@@Base+0x19b8>
  40a7d1:	mov    QWORD PTR [rbp-0x50],rax
  40a7d5:	mov    rax,QWORD PTR [rbp-0x20]
  40a7d9:	cmp    rax,QWORD PTR [rbp-0x50]
  40a7dd:	jne    40a829 <_start@@Base+0x7519>
  40a7df:	mov    rax,QWORD PTR [rbp-0x50]
  40a7e3:	mov    QWORD PTR [rbp-0x20],rax
  40a7e7:	lea    rcx,[rbp-0x30]
  40a7eb:	mov    rdx,QWORD PTR [rbp-0x58]
  40a7ef:	mov    rsi,QWORD PTR [rbp-0x20]
  40a7f3:	mov    rax,QWORD PTR [rbp-0x48]
  40a7f7:	mov    r8,rcx
  40a7fa:	lea    rcx,[rip+0x1fb7f]        # 42a380 <filename@@Base+0x280>
  40a801:	mov    rdi,rax
  40a804:	call   405734 <_start@@Base+0x2424>
  40a809:	mov    QWORD PTR [rbp-0x50],rax
  40a80d:	mov    rax,QWORD PTR [rbp-0x50]
  40a811:	cmp    rax,QWORD PTR [rbp-0x20]
  40a815:	je     40a9eb <_start@@Base+0x76db>
  40a81b:	mov    rax,QWORD PTR [rbp-0x50]
  40a81f:	cmp    rax,QWORD PTR [rbp-0x58]
  40a823:	je     40a9eb <_start@@Base+0x76db>
  40a829:	mov    rax,QWORD PTR [rbp-0x30]
  40a82d:	test   rax,rax
  40a830:	jne    40a844 <_start@@Base+0x7534>
  40a832:	mov    rax,QWORD PTR [rbp-0x48]
  40a836:	mov    eax,DWORD PTR [rax+0x10]
  40a839:	and    eax,0x2
  40a83c:	test   eax,eax
  40a83e:	je     40a989 <_start@@Base+0x7679>
  40a844:	mov    rax,QWORD PTR [rbp-0x48]
  40a848:	mov    rax,QWORD PTR [rax]
  40a84b:	mov    ecx,0x8
  40a850:	mov    edx,0x8
  40a855:	mov    esi,0x1
  40a85a:	mov    rdi,rax
  40a85d:	call   419d30 <flatcc_builder_table_add@@Base>
  40a862:	mov    QWORD PTR [rbp-0x18],rax
  40a866:	cmp    QWORD PTR [rbp-0x18],0x0
  40a86b:	je     40a9ee <_start@@Base+0x76de>
  40a871:	mov    rdx,QWORD PTR [rbp-0x30]
  40a875:	mov    rax,QWORD PTR [rbp-0x18]
  40a879:	mov    rsi,rdx
  40a87c:	mov    rdi,rax
  40a87f:	call   4035d0 <_start@@Base+0x2c0>
  40a884:	jmp    40a989 <_start@@Base+0x7679>
  40a889:	mov    rdx,QWORD PTR [rbp-0x58]
  40a88d:	mov    rcx,QWORD PTR [rbp-0x50]
  40a891:	mov    rax,QWORD PTR [rbp-0x48]
  40a895:	mov    rsi,rcx
  40a898:	mov    rdi,rax
  40a89b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a8a0:	mov    QWORD PTR [rbp-0x50],rax
  40a8a4:	jmp    40a989 <_start@@Base+0x7679>
  40a8a9:	movabs rax,0xffff000000000000
  40a8b3:	and    rax,QWORD PTR [rbp-0x28]
  40a8b7:	mov    rdx,rax
  40a8ba:	movabs rax,0x6964000000000000
  40a8c4:	cmp    rdx,rax
  40a8c7:	jne    40a96e <_start@@Base+0x765e>
  40a8cd:	mov    rax,QWORD PTR [rbp-0x50]
  40a8d1:	mov    QWORD PTR [rbp-0x20],rax
  40a8d5:	mov    rdx,QWORD PTR [rbp-0x58]
  40a8d9:	mov    rsi,QWORD PTR [rbp-0x20]
  40a8dd:	mov    rax,QWORD PTR [rbp-0x48]
  40a8e1:	mov    ecx,0x2
  40a8e6:	mov    rdi,rax
  40a8e9:	call   4042cc <_start@@Base+0xfbc>
  40a8ee:	mov    QWORD PTR [rbp-0x50],rax
  40a8f2:	mov    rax,QWORD PTR [rbp-0x20]
  40a8f6:	cmp    rax,QWORD PTR [rbp-0x50]
  40a8fa:	je     40a951 <_start@@Base+0x7641>
  40a8fc:	lea    rcx,[rbp-0x34]
  40a900:	mov    rdx,QWORD PTR [rbp-0x58]
  40a904:	mov    rsi,QWORD PTR [rbp-0x50]
  40a908:	mov    rax,QWORD PTR [rbp-0x48]
  40a90c:	mov    rdi,rax
  40a90f:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40a914:	mov    QWORD PTR [rbp-0x50],rax
  40a918:	mov    eax,DWORD PTR [rbp-0x34]
  40a91b:	test   eax,eax
  40a91d:	je     40a9f1 <_start@@Base+0x76e1>
  40a923:	mov    rax,QWORD PTR [rbp-0x48]
  40a927:	mov    rax,QWORD PTR [rax]
  40a92a:	mov    esi,0x0
  40a92f:	mov    rdi,rax
  40a932:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40a937:	mov    QWORD PTR [rbp-0x10],rax
  40a93b:	cmp    QWORD PTR [rbp-0x10],0x0
  40a940:	je     40a9f1 <_start@@Base+0x76e1>
  40a946:	mov    edx,DWORD PTR [rbp-0x34]
  40a949:	mov    rax,QWORD PTR [rbp-0x10]
  40a94d:	mov    DWORD PTR [rax],edx
  40a94f:	jmp    40a989 <_start@@Base+0x7679>
  40a951:	mov    rdx,QWORD PTR [rbp-0x58]
  40a955:	mov    rcx,QWORD PTR [rbp-0x50]
  40a959:	mov    rax,QWORD PTR [rbp-0x48]
  40a95d:	mov    rsi,rcx
  40a960:	mov    rdi,rax
  40a963:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a968:	mov    QWORD PTR [rbp-0x50],rax
  40a96c:	jmp    40a989 <_start@@Base+0x7679>
  40a96e:	mov    rdx,QWORD PTR [rbp-0x58]
  40a972:	mov    rcx,QWORD PTR [rbp-0x50]
  40a976:	mov    rax,QWORD PTR [rbp-0x48]
  40a97a:	mov    rsi,rcx
  40a97d:	mov    rdi,rax
  40a980:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40a985:	mov    QWORD PTR [rbp-0x50],rax
  40a989:	lea    rcx,[rbp-0x38]
  40a98d:	mov    rdx,QWORD PTR [rbp-0x58]
  40a991:	mov    rsi,QWORD PTR [rbp-0x50]
  40a995:	mov    rax,QWORD PTR [rbp-0x48]
  40a999:	mov    rdi,rax
  40a99c:	call   403f93 <_start@@Base+0xc83>
  40a9a1:	mov    QWORD PTR [rbp-0x50],rax
  40a9a5:	mov    eax,DWORD PTR [rbp-0x38]
  40a9a8:	test   eax,eax
  40a9aa:	jne    40a599 <_start@@Base+0x7289>
  40a9b0:	mov    rax,QWORD PTR [rbp-0x48]
  40a9b4:	mov    eax,DWORD PTR [rax+0x20]
  40a9b7:	test   eax,eax
  40a9b9:	jne    40a9f4 <_start@@Base+0x76e4>
  40a9bb:	mov    rax,QWORD PTR [rbp-0x48]
  40a9bf:	mov    rax,QWORD PTR [rax]
  40a9c2:	mov    rdi,rax
  40a9c5:	call   41868f <flatcc_builder_end_table@@Base>
  40a9ca:	mov    edx,eax
  40a9cc:	mov    rax,QWORD PTR [rbp-0x60]
  40a9d0:	mov    DWORD PTR [rax],edx
  40a9d2:	mov    rax,QWORD PTR [rbp-0x60]
  40a9d6:	mov    eax,DWORD PTR [rax]
  40a9d8:	test   eax,eax
  40a9da:	je     40a9f7 <_start@@Base+0x76e7>
  40a9dc:	mov    rax,QWORD PTR [rbp-0x50]
  40a9e0:	jmp    40aa11 <_start@@Base+0x7701>
  40a9e2:	nop
  40a9e3:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9e5:	nop
  40a9e6:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9e8:	nop
  40a9e9:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9eb:	nop
  40a9ec:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9ee:	nop
  40a9ef:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9f1:	nop
  40a9f2:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9f4:	nop
  40a9f5:	jmp    40a9f8 <_start@@Base+0x76e8>
  40a9f7:	nop
  40a9f8:	mov    rdx,QWORD PTR [rbp-0x58]
  40a9fc:	mov    rsi,QWORD PTR [rbp-0x50]
  40aa00:	mov    rax,QWORD PTR [rbp-0x48]
  40aa04:	mov    ecx,0x21
  40aa09:	mov    rdi,rax
  40aa0c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40aa11:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa15:	xor    rdi,QWORD PTR fs:0x28
  40aa1e:	je     40aa25 <_start@@Base+0x7715>
  40aa20:	call   403200 <__stack_chk_fail@plt>
  40aa25:	leave  
  40aa26:	ret    
  40aa27:	endbr64 
  40aa2b:	push   rbp
  40aa2c:	mov    rbp,rsp
  40aa2f:	sub    rsp,0x50
  40aa33:	mov    QWORD PTR [rbp-0x38],rdi
  40aa37:	mov    QWORD PTR [rbp-0x40],rsi
  40aa3b:	mov    QWORD PTR [rbp-0x48],rdx
  40aa3f:	mov    QWORD PTR [rbp-0x50],rcx
  40aa43:	mov    rax,QWORD PTR fs:0x28
  40aa4c:	mov    QWORD PTR [rbp-0x8],rax
  40aa50:	xor    eax,eax
  40aa52:	mov    rax,QWORD PTR [rbp-0x50]
  40aa56:	mov    DWORD PTR [rax],0x0
  40aa5c:	mov    rax,QWORD PTR [rbp-0x38]
  40aa60:	mov    rax,QWORD PTR [rax]
  40aa63:	mov    esi,0x4
  40aa68:	mov    rdi,rax
  40aa6b:	call   417b80 <flatcc_builder_start_table@@Base>
  40aa70:	test   eax,eax
  40aa72:	jne    40aea7 <_start@@Base+0x7b97>
  40aa78:	lea    rcx,[rbp-0x28]
  40aa7c:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa80:	mov    rsi,QWORD PTR [rbp-0x40]
  40aa84:	mov    rax,QWORD PTR [rbp-0x38]
  40aa88:	mov    r8,rcx
  40aa8b:	mov    ecx,0x1
  40aa90:	mov    rdi,rax
  40aa93:	call   420d06 <flatcc_json_parser_prepare_unions@@Base>
  40aa98:	cmp    QWORD PTR [rbp-0x48],rax
  40aa9c:	je     40aeaa <_start@@Base+0x7b9a>
  40aaa2:	lea    rcx,[rbp-0x30]
  40aaa6:	mov    rdx,QWORD PTR [rbp-0x48]
  40aaaa:	mov    rsi,QWORD PTR [rbp-0x40]
  40aaae:	mov    rax,QWORD PTR [rbp-0x38]
  40aab2:	mov    rdi,rax
  40aab5:	call   403ed6 <_start@@Base+0xbc6>
  40aaba:	mov    QWORD PTR [rbp-0x40],rax
  40aabe:	jmp    40ae4e <_start@@Base+0x7b3e>
  40aac3:	mov    rdx,QWORD PTR [rbp-0x48]
  40aac7:	mov    rcx,QWORD PTR [rbp-0x40]
  40aacb:	mov    rax,QWORD PTR [rbp-0x38]
  40aacf:	mov    rsi,rcx
  40aad2:	mov    rdi,rax
  40aad5:	call   403c48 <_start@@Base+0x938>
  40aada:	mov    QWORD PTR [rbp-0x40],rax
  40aade:	mov    rdx,QWORD PTR [rbp-0x48]
  40aae2:	mov    rax,QWORD PTR [rbp-0x40]
  40aae6:	mov    rsi,rdx
  40aae9:	mov    rdi,rax
  40aaec:	call   403dd5 <_start@@Base+0xac5>
  40aaf1:	mov    QWORD PTR [rbp-0x20],rax
  40aaf5:	movabs rax,0x6d616e79616e795f
  40aaff:	cmp    QWORD PTR [rbp-0x20],rax
  40ab03:	jne    40ac07 <_start@@Base+0x78f7>
  40ab09:	add    QWORD PTR [rbp-0x40],0x8
  40ab0e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab12:	mov    rax,QWORD PTR [rbp-0x40]
  40ab16:	mov    rsi,rdx
  40ab19:	mov    rdi,rax
  40ab1c:	call   403dd5 <_start@@Base+0xac5>
  40ab21:	mov    QWORD PTR [rbp-0x20],rax
  40ab25:	movabs rax,0xffffffff00000000
  40ab2f:	and    rax,QWORD PTR [rbp-0x20]
  40ab33:	mov    rdx,rax
  40ab36:	movabs rax,0x7479706500000000
  40ab40:	cmp    rdx,rax
  40ab43:	jne    40abe7 <_start@@Base+0x78d7>
  40ab49:	mov    rax,QWORD PTR [rbp-0x40]
  40ab4d:	mov    QWORD PTR [rbp-0x18],rax
  40ab51:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab55:	mov    rsi,QWORD PTR [rbp-0x18]
  40ab59:	mov    rax,QWORD PTR [rbp-0x38]
  40ab5d:	mov    ecx,0x4
  40ab62:	mov    rdi,rax
  40ab65:	call   4042cc <_start@@Base+0xfbc>
  40ab6a:	mov    QWORD PTR [rbp-0x40],rax
  40ab6e:	mov    rax,QWORD PTR [rbp-0x18]
  40ab72:	cmp    rax,QWORD PTR [rbp-0x40]
  40ab76:	je     40abc7 <_start@@Base+0x78b7>
  40ab78:	mov    rdi,QWORD PTR [rbp-0x28]
  40ab7c:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab80:	mov    rsi,QWORD PTR [rbp-0x40]
  40ab84:	mov    rax,QWORD PTR [rbp-0x38]
  40ab88:	sub    rsp,0x8
  40ab8c:	lea    rcx,[rip+0xffffffffffffd133]        # 407cc6 <_start@@Base+0x49b6>
  40ab93:	push   rcx
  40ab94:	lea    rcx,[rip+0xffffffffffffcfba]        # 407b55 <_start@@Base+0x4845>
  40ab9b:	push   rcx
  40ab9c:	lea    rcx,[rip+0x1f7fd]        # 42a3a0 <filename@@Base+0x2a0>
  40aba3:	push   rcx
  40aba4:	mov    r9,rdi
  40aba7:	mov    r8d,0x3
  40abad:	mov    ecx,0x0
  40abb2:	mov    rdi,rax
  40abb5:	call   4215d5 <flatcc_json_parser_union_type_vector@@Base>
  40abba:	add    rsp,0x20
  40abbe:	mov    QWORD PTR [rbp-0x40],rax
  40abc2:	jmp    40ae32 <_start@@Base+0x7b22>
  40abc7:	mov    rdx,QWORD PTR [rbp-0x48]
  40abcb:	mov    rcx,QWORD PTR [rbp-0x40]
  40abcf:	mov    rax,QWORD PTR [rbp-0x38]
  40abd3:	mov    rsi,rcx
  40abd6:	mov    rdi,rax
  40abd9:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40abde:	mov    QWORD PTR [rbp-0x40],rax
  40abe2:	jmp    40ae32 <_start@@Base+0x7b22>
  40abe7:	mov    rdx,QWORD PTR [rbp-0x48]
  40abeb:	mov    rcx,QWORD PTR [rbp-0x40]
  40abef:	mov    rax,QWORD PTR [rbp-0x38]
  40abf3:	mov    rsi,rcx
  40abf6:	mov    rdi,rax
  40abf9:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40abfe:	mov    QWORD PTR [rbp-0x40],rax
  40ac02:	jmp    40ae32 <_start@@Base+0x7b22>
  40ac07:	mov    rax,QWORD PTR [rbp-0x20]
  40ac0b:	mov    al,0x0
  40ac0d:	mov    rdx,rax
  40ac10:	movabs rax,0x6d616e79616e7900
  40ac1a:	cmp    rdx,rax
  40ac1d:	jne    40ac8d <_start@@Base+0x797d>
  40ac1f:	mov    rax,QWORD PTR [rbp-0x40]
  40ac23:	mov    QWORD PTR [rbp-0x18],rax
  40ac27:	mov    rdx,QWORD PTR [rbp-0x48]
  40ac2b:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac2f:	mov    rax,QWORD PTR [rbp-0x38]
  40ac33:	mov    ecx,0x7
  40ac38:	mov    rdi,rax
  40ac3b:	call   4042cc <_start@@Base+0xfbc>
  40ac40:	mov    QWORD PTR [rbp-0x40],rax
  40ac44:	mov    rax,QWORD PTR [rbp-0x18]
  40ac48:	cmp    rax,QWORD PTR [rbp-0x40]
  40ac4c:	je     40ac90 <_start@@Base+0x7980>
  40ac4e:	mov    rdi,QWORD PTR [rbp-0x28]
  40ac52:	mov    rdx,QWORD PTR [rbp-0x48]
  40ac56:	mov    rsi,QWORD PTR [rbp-0x40]
  40ac5a:	mov    rax,QWORD PTR [rbp-0x38]
  40ac5e:	sub    rsp,0x8
  40ac62:	lea    rcx,[rip+0xffffffffffffceec]        # 407b55 <_start@@Base+0x4845>
  40ac69:	push   rcx
  40ac6a:	mov    r9,rdi
  40ac6d:	mov    r8d,0x3
  40ac73:	mov    ecx,0x0
  40ac78:	mov    rdi,rax
  40ac7b:	call   421489 <flatcc_json_parser_union_vector@@Base>
  40ac80:	add    rsp,0x10
  40ac84:	mov    QWORD PTR [rbp-0x40],rax
  40ac88:	jmp    40ae32 <_start@@Base+0x7b22>
  40ac8d:	nop
  40ac8e:	jmp    40ac91 <_start@@Base+0x7981>
  40ac90:	nop
  40ac91:	mov    rax,QWORD PTR [rbp-0x20]
  40ac95:	mov    ax,0x0
  40ac99:	mov    rdx,rax
  40ac9c:	movabs rax,0x7072656669780000
  40aca6:	cmp    rdx,rax
  40aca9:	jne    40ad56 <_start@@Base+0x7a46>
  40acaf:	mov    rax,QWORD PTR [rbp-0x40]
  40acb3:	mov    QWORD PTR [rbp-0x18],rax
  40acb7:	mov    rdx,QWORD PTR [rbp-0x48]
  40acbb:	mov    rsi,QWORD PTR [rbp-0x18]
  40acbf:	mov    rax,QWORD PTR [rbp-0x38]
  40acc3:	mov    ecx,0x6
  40acc8:	mov    rdi,rax
  40accb:	call   4042cc <_start@@Base+0xfbc>
  40acd0:	mov    QWORD PTR [rbp-0x40],rax
  40acd4:	mov    rax,QWORD PTR [rbp-0x18]
  40acd8:	cmp    rax,QWORD PTR [rbp-0x40]
  40acdc:	je     40ad36 <_start@@Base+0x7a26>
  40acde:	lea    rcx,[rbp-0x2c]
  40ace2:	mov    rdx,QWORD PTR [rbp-0x48]
  40ace6:	mov    rsi,QWORD PTR [rbp-0x40]
  40acea:	mov    rax,QWORD PTR [rbp-0x38]
  40acee:	mov    rdi,rax
  40acf1:	call   40aee6 <_start@@Base+0x7bd6>
  40acf6:	mov    QWORD PTR [rbp-0x40],rax
  40acfa:	mov    eax,DWORD PTR [rbp-0x2c]
  40acfd:	test   eax,eax
  40acff:	je     40aead <_start@@Base+0x7b9d>
  40ad05:	mov    rax,QWORD PTR [rbp-0x38]
  40ad09:	mov    rax,QWORD PTR [rax]
  40ad0c:	mov    esi,0x0
  40ad11:	mov    rdi,rax
  40ad14:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40ad19:	mov    QWORD PTR [rbp-0x10],rax
  40ad1d:	cmp    QWORD PTR [rbp-0x10],0x0
  40ad22:	je     40aead <_start@@Base+0x7b9d>
  40ad28:	mov    edx,DWORD PTR [rbp-0x2c]
  40ad2b:	mov    rax,QWORD PTR [rbp-0x10]
  40ad2f:	mov    DWORD PTR [rax],edx
  40ad31:	jmp    40ae32 <_start@@Base+0x7b22>
  40ad36:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad3a:	mov    rcx,QWORD PTR [rbp-0x40]
  40ad3e:	mov    rax,QWORD PTR [rbp-0x38]
  40ad42:	mov    rsi,rcx
  40ad45:	mov    rdi,rax
  40ad48:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ad4d:	mov    QWORD PTR [rbp-0x40],rax
  40ad51:	jmp    40ae32 <_start@@Base+0x7b22>
  40ad56:	mov    rax,QWORD PTR [rbp-0x20]
  40ad5a:	and    rax,0xffffffffff000000
  40ad60:	mov    rdx,rax
  40ad63:	movabs rax,0x6d6f766965000000
  40ad6d:	cmp    rdx,rax
  40ad70:	jne    40ae17 <_start@@Base+0x7b07>
  40ad76:	mov    rax,QWORD PTR [rbp-0x40]
  40ad7a:	mov    QWORD PTR [rbp-0x18],rax
  40ad7e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad82:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad86:	mov    rax,QWORD PTR [rbp-0x38]
  40ad8a:	mov    ecx,0x5
  40ad8f:	mov    rdi,rax
  40ad92:	call   4042cc <_start@@Base+0xfbc>
  40ad97:	mov    QWORD PTR [rbp-0x40],rax
  40ad9b:	mov    rax,QWORD PTR [rbp-0x18]
  40ad9f:	cmp    rax,QWORD PTR [rbp-0x40]
  40ada3:	je     40adfa <_start@@Base+0x7aea>
  40ada5:	lea    rcx,[rbp-0x2c]
  40ada9:	mov    rdx,QWORD PTR [rbp-0x48]
  40adad:	mov    rsi,QWORD PTR [rbp-0x40]
  40adb1:	mov    rax,QWORD PTR [rbp-0x38]
  40adb5:	mov    rdi,rax
  40adb8:	call   4128bd <_start@@Base+0xf5ad>
  40adbd:	mov    QWORD PTR [rbp-0x40],rax
  40adc1:	mov    eax,DWORD PTR [rbp-0x2c]
  40adc4:	test   eax,eax
  40adc6:	je     40aeb0 <_start@@Base+0x7ba0>
  40adcc:	mov    rax,QWORD PTR [rbp-0x38]
  40add0:	mov    rax,QWORD PTR [rax]
  40add3:	mov    esi,0x1
  40add8:	mov    rdi,rax
  40addb:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40ade0:	mov    QWORD PTR [rbp-0x10],rax
  40ade4:	cmp    QWORD PTR [rbp-0x10],0x0
  40ade9:	je     40aeb0 <_start@@Base+0x7ba0>
  40adef:	mov    edx,DWORD PTR [rbp-0x2c]
  40adf2:	mov    rax,QWORD PTR [rbp-0x10]
  40adf6:	mov    DWORD PTR [rax],edx
  40adf8:	jmp    40ae32 <_start@@Base+0x7b22>
  40adfa:	mov    rdx,QWORD PTR [rbp-0x48]
  40adfe:	mov    rcx,QWORD PTR [rbp-0x40]
  40ae02:	mov    rax,QWORD PTR [rbp-0x38]
  40ae06:	mov    rsi,rcx
  40ae09:	mov    rdi,rax
  40ae0c:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ae11:	mov    QWORD PTR [rbp-0x40],rax
  40ae15:	jmp    40ae32 <_start@@Base+0x7b22>
  40ae17:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae1b:	mov    rcx,QWORD PTR [rbp-0x40]
  40ae1f:	mov    rax,QWORD PTR [rbp-0x38]
  40ae23:	mov    rsi,rcx
  40ae26:	mov    rdi,rax
  40ae29:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ae2e:	mov    QWORD PTR [rbp-0x40],rax
  40ae32:	lea    rcx,[rbp-0x30]
  40ae36:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae3a:	mov    rsi,QWORD PTR [rbp-0x40]
  40ae3e:	mov    rax,QWORD PTR [rbp-0x38]
  40ae42:	mov    rdi,rax
  40ae45:	call   403f93 <_start@@Base+0xc83>
  40ae4a:	mov    QWORD PTR [rbp-0x40],rax
  40ae4e:	mov    eax,DWORD PTR [rbp-0x30]
  40ae51:	test   eax,eax
  40ae53:	jne    40aac3 <_start@@Base+0x77b3>
  40ae59:	mov    rax,QWORD PTR [rbp-0x38]
  40ae5d:	mov    eax,DWORD PTR [rax+0x20]
  40ae60:	test   eax,eax
  40ae62:	jne    40aeb3 <_start@@Base+0x7ba3>
  40ae64:	mov    rcx,QWORD PTR [rbp-0x28]
  40ae68:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae6c:	mov    rsi,QWORD PTR [rbp-0x40]
  40ae70:	mov    rax,QWORD PTR [rbp-0x38]
  40ae74:	mov    rdi,rax
  40ae77:	call   420dad <flatcc_json_parser_finalize_unions@@Base>
  40ae7c:	mov    QWORD PTR [rbp-0x40],rax
  40ae80:	mov    rax,QWORD PTR [rbp-0x38]
  40ae84:	mov    rax,QWORD PTR [rax]
  40ae87:	mov    rdi,rax
  40ae8a:	call   41868f <flatcc_builder_end_table@@Base>
  40ae8f:	mov    edx,eax
  40ae91:	mov    rax,QWORD PTR [rbp-0x50]
  40ae95:	mov    DWORD PTR [rax],edx
  40ae97:	mov    rax,QWORD PTR [rbp-0x50]
  40ae9b:	mov    eax,DWORD PTR [rax]
  40ae9d:	test   eax,eax
  40ae9f:	je     40aeb6 <_start@@Base+0x7ba6>
  40aea1:	mov    rax,QWORD PTR [rbp-0x40]
  40aea5:	jmp    40aed0 <_start@@Base+0x7bc0>
  40aea7:	nop
  40aea8:	jmp    40aeb7 <_start@@Base+0x7ba7>
  40aeaa:	nop
  40aeab:	jmp    40aeb7 <_start@@Base+0x7ba7>
  40aead:	nop
  40aeae:	jmp    40aeb7 <_start@@Base+0x7ba7>
  40aeb0:	nop
  40aeb1:	jmp    40aeb7 <_start@@Base+0x7ba7>
  40aeb3:	nop
  40aeb4:	jmp    40aeb7 <_start@@Base+0x7ba7>
  40aeb6:	nop
  40aeb7:	mov    rdx,QWORD PTR [rbp-0x48]
  40aebb:	mov    rsi,QWORD PTR [rbp-0x40]
  40aebf:	mov    rax,QWORD PTR [rbp-0x38]
  40aec3:	mov    ecx,0x21
  40aec8:	mov    rdi,rax
  40aecb:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40aed0:	mov    rdi,QWORD PTR [rbp-0x8]
  40aed4:	xor    rdi,QWORD PTR fs:0x28
  40aedd:	je     40aee4 <_start@@Base+0x7bd4>
  40aedf:	call   403200 <__stack_chk_fail@plt>
  40aee4:	leave  
  40aee5:	ret    
  40aee6:	endbr64 
  40aeea:	push   rbp
  40aeeb:	mov    rbp,rsp
  40aeee:	sub    rsp,0x50
  40aef2:	mov    QWORD PTR [rbp-0x38],rdi
  40aef6:	mov    QWORD PTR [rbp-0x40],rsi
  40aefa:	mov    QWORD PTR [rbp-0x48],rdx
  40aefe:	mov    QWORD PTR [rbp-0x50],rcx
  40af02:	mov    rax,QWORD PTR fs:0x28
  40af0b:	mov    QWORD PTR [rbp-0x8],rax
  40af0f:	xor    eax,eax
  40af11:	mov    rax,QWORD PTR [rbp-0x50]
  40af15:	mov    DWORD PTR [rax],0x0
  40af1b:	mov    rax,QWORD PTR [rbp-0x38]
  40af1f:	mov    rax,QWORD PTR [rax]
  40af22:	mov    esi,0x3
  40af27:	mov    rdi,rax
  40af2a:	call   417b80 <flatcc_builder_start_table@@Base>
  40af2f:	test   eax,eax
  40af31:	jne    40b2b2 <_start@@Base+0x7fa2>
  40af37:	lea    rcx,[rbp-0x28]
  40af3b:	mov    rdx,QWORD PTR [rbp-0x48]
  40af3f:	mov    rsi,QWORD PTR [rbp-0x40]
  40af43:	mov    rax,QWORD PTR [rbp-0x38]
  40af47:	mov    rdi,rax
  40af4a:	call   403ed6 <_start@@Base+0xbc6>
  40af4f:	mov    QWORD PTR [rbp-0x40],rax
  40af53:	jmp    40b275 <_start@@Base+0x7f65>
  40af58:	mov    rdx,QWORD PTR [rbp-0x48]
  40af5c:	mov    rcx,QWORD PTR [rbp-0x40]
  40af60:	mov    rax,QWORD PTR [rbp-0x38]
  40af64:	mov    rsi,rcx
  40af67:	mov    rdi,rax
  40af6a:	call   403c48 <_start@@Base+0x938>
  40af6f:	mov    QWORD PTR [rbp-0x40],rax
  40af73:	mov    rdx,QWORD PTR [rbp-0x48]
  40af77:	mov    rax,QWORD PTR [rbp-0x40]
  40af7b:	mov    rsi,rdx
  40af7e:	mov    rdi,rax
  40af81:	call   403dd5 <_start@@Base+0xac5>
  40af86:	mov    QWORD PTR [rbp-0x20],rax
  40af8a:	movabs rax,0x746573746a736f6e
  40af94:	cmp    QWORD PTR [rbp-0x20],rax
  40af98:	jne    40b23e <_start@@Base+0x7f2e>
  40af9e:	add    QWORD PTR [rbp-0x40],0x8
  40afa3:	mov    rdx,QWORD PTR [rbp-0x48]
  40afa7:	mov    rax,QWORD PTR [rbp-0x40]
  40afab:	mov    rsi,rdx
  40afae:	mov    rdi,rax
  40afb1:	call   403dd5 <_start@@Base+0xac5>
  40afb6:	mov    QWORD PTR [rbp-0x20],rax
  40afba:	movabs rax,0x7072656669787061
  40afc4:	cmp    QWORD PTR [rbp-0x20],rax
  40afc8:	jne    40b221 <_start@@Base+0x7f11>
  40afce:	add    QWORD PTR [rbp-0x40],0x8
  40afd3:	mov    rdx,QWORD PTR [rbp-0x48]
  40afd7:	mov    rax,QWORD PTR [rbp-0x40]
  40afdb:	mov    rsi,rdx
  40afde:	mov    rdi,rax
  40afe1:	call   403dd5 <_start@@Base+0xac5>
  40afe6:	mov    QWORD PTR [rbp-0x20],rax
  40afea:	mov    rax,QWORD PTR [rbp-0x20]
  40afee:	mov    ax,0x0
  40aff2:	mov    rdx,rax
  40aff5:	movabs rax,0x7273696e67320000
  40afff:	cmp    rdx,rax
  40b002:	jne    40b093 <_start@@Base+0x7d83>
  40b008:	mov    rax,QWORD PTR [rbp-0x40]
  40b00c:	mov    QWORD PTR [rbp-0x18],rax
  40b010:	mov    rdx,QWORD PTR [rbp-0x48]
  40b014:	mov    rsi,QWORD PTR [rbp-0x18]
  40b018:	mov    rax,QWORD PTR [rbp-0x38]
  40b01c:	mov    ecx,0x6
  40b021:	mov    rdi,rax
  40b024:	call   4042cc <_start@@Base+0xfbc>
  40b029:	mov    QWORD PTR [rbp-0x40],rax
  40b02d:	mov    rax,QWORD PTR [rbp-0x18]
  40b031:	cmp    rax,QWORD PTR [rbp-0x40]
  40b035:	je     40b13a <_start@@Base+0x7e2a>
  40b03b:	lea    rcx,[rbp-0x24]
  40b03f:	mov    rdx,QWORD PTR [rbp-0x48]
  40b043:	mov    rsi,QWORD PTR [rbp-0x40]
  40b047:	mov    rax,QWORD PTR [rbp-0x38]
  40b04b:	mov    rdi,rax
  40b04e:	call   40bf17 <_start@@Base+0x8c07>
  40b053:	mov    QWORD PTR [rbp-0x40],rax
  40b057:	mov    eax,DWORD PTR [rbp-0x24]
  40b05a:	test   eax,eax
  40b05c:	je     40b2b5 <_start@@Base+0x7fa5>
  40b062:	mov    rax,QWORD PTR [rbp-0x38]
  40b066:	mov    rax,QWORD PTR [rax]
  40b069:	mov    esi,0x1
  40b06e:	mov    rdi,rax
  40b071:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40b076:	mov    QWORD PTR [rbp-0x10],rax
  40b07a:	cmp    QWORD PTR [rbp-0x10],0x0
  40b07f:	je     40b2b5 <_start@@Base+0x7fa5>
  40b085:	mov    edx,DWORD PTR [rbp-0x24]
  40b088:	mov    rax,QWORD PTR [rbp-0x10]
  40b08c:	mov    DWORD PTR [rax],edx
  40b08e:	jmp    40b259 <_start@@Base+0x7f49>
  40b093:	mov    rax,QWORD PTR [rbp-0x20]
  40b097:	and    rax,0xffffffffff000000
  40b09d:	mov    rdx,rax
  40b0a0:	movabs rax,0x7273696e67000000
  40b0aa:	cmp    rdx,rax
  40b0ad:	jne    40b13d <_start@@Base+0x7e2d>
  40b0b3:	mov    rax,QWORD PTR [rbp-0x40]
  40b0b7:	mov    QWORD PTR [rbp-0x18],rax
  40b0bb:	mov    rdx,QWORD PTR [rbp-0x48]
  40b0bf:	mov    rsi,QWORD PTR [rbp-0x18]
  40b0c3:	mov    rax,QWORD PTR [rbp-0x38]
  40b0c7:	mov    ecx,0x5
  40b0cc:	mov    rdi,rax
  40b0cf:	call   4042cc <_start@@Base+0xfbc>
  40b0d4:	mov    QWORD PTR [rbp-0x40],rax
  40b0d8:	mov    rax,QWORD PTR [rbp-0x18]
  40b0dc:	cmp    rax,QWORD PTR [rbp-0x40]
  40b0e0:	je     40b140 <_start@@Base+0x7e30>
  40b0e2:	lea    rcx,[rbp-0x24]
  40b0e6:	mov    rdx,QWORD PTR [rbp-0x48]
  40b0ea:	mov    rsi,QWORD PTR [rbp-0x40]
  40b0ee:	mov    rax,QWORD PTR [rbp-0x38]
  40b0f2:	mov    rdi,rax
  40b0f5:	call   40b2f1 <_start@@Base+0x7fe1>
  40b0fa:	mov    QWORD PTR [rbp-0x40],rax
  40b0fe:	mov    eax,DWORD PTR [rbp-0x24]
  40b101:	test   eax,eax
  40b103:	je     40b2b8 <_start@@Base+0x7fa8>
  40b109:	mov    rax,QWORD PTR [rbp-0x38]
  40b10d:	mov    rax,QWORD PTR [rax]
  40b110:	mov    esi,0x0
  40b115:	mov    rdi,rax
  40b118:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40b11d:	mov    QWORD PTR [rbp-0x10],rax
  40b121:	cmp    QWORD PTR [rbp-0x10],0x0
  40b126:	je     40b2b8 <_start@@Base+0x7fa8>
  40b12c:	mov    edx,DWORD PTR [rbp-0x24]
  40b12f:	mov    rax,QWORD PTR [rbp-0x10]
  40b133:	mov    DWORD PTR [rax],edx
  40b135:	jmp    40b259 <_start@@Base+0x7f49>
  40b13a:	nop
  40b13b:	jmp    40b141 <_start@@Base+0x7e31>
  40b13d:	nop
  40b13e:	jmp    40b141 <_start@@Base+0x7e31>
  40b140:	nop
  40b141:	mov    rax,QWORD PTR [rbp-0x20]
  40b145:	mov    ax,0x0
  40b149:	mov    rdx,rax
  40b14c:	movabs rax,0x7273696e67330000
  40b156:	cmp    rdx,rax
  40b159:	jne    40b200 <_start@@Base+0x7ef0>
  40b15f:	mov    rax,QWORD PTR [rbp-0x40]
  40b163:	mov    QWORD PTR [rbp-0x18],rax
  40b167:	mov    rdx,QWORD PTR [rbp-0x48]
  40b16b:	mov    rsi,QWORD PTR [rbp-0x18]
  40b16f:	mov    rax,QWORD PTR [rbp-0x38]
  40b173:	mov    ecx,0x6
  40b178:	mov    rdi,rax
  40b17b:	call   4042cc <_start@@Base+0xfbc>
  40b180:	mov    QWORD PTR [rbp-0x40],rax
  40b184:	mov    rax,QWORD PTR [rbp-0x18]
  40b188:	cmp    rax,QWORD PTR [rbp-0x40]
  40b18c:	je     40b1e3 <_start@@Base+0x7ed3>
  40b18e:	lea    rcx,[rbp-0x24]
  40b192:	mov    rdx,QWORD PTR [rbp-0x48]
  40b196:	mov    rsi,QWORD PTR [rbp-0x40]
  40b19a:	mov    rax,QWORD PTR [rbp-0x38]
  40b19e:	mov    rdi,rax
  40b1a1:	call   40c349 <_start@@Base+0x9039>
  40b1a6:	mov    QWORD PTR [rbp-0x40],rax
  40b1aa:	mov    eax,DWORD PTR [rbp-0x24]
  40b1ad:	test   eax,eax
  40b1af:	je     40b2bb <_start@@Base+0x7fab>
  40b1b5:	mov    rax,QWORD PTR [rbp-0x38]
  40b1b9:	mov    rax,QWORD PTR [rax]
  40b1bc:	mov    esi,0x2
  40b1c1:	mov    rdi,rax
  40b1c4:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40b1c9:	mov    QWORD PTR [rbp-0x10],rax
  40b1cd:	cmp    QWORD PTR [rbp-0x10],0x0
  40b1d2:	je     40b2bb <_start@@Base+0x7fab>
  40b1d8:	mov    edx,DWORD PTR [rbp-0x24]
  40b1db:	mov    rax,QWORD PTR [rbp-0x10]
  40b1df:	mov    DWORD PTR [rax],edx
  40b1e1:	jmp    40b259 <_start@@Base+0x7f49>
  40b1e3:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1e7:	mov    rcx,QWORD PTR [rbp-0x40]
  40b1eb:	mov    rax,QWORD PTR [rbp-0x38]
  40b1ef:	mov    rsi,rcx
  40b1f2:	mov    rdi,rax
  40b1f5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b1fa:	mov    QWORD PTR [rbp-0x40],rax
  40b1fe:	jmp    40b259 <_start@@Base+0x7f49>
  40b200:	mov    rdx,QWORD PTR [rbp-0x48]
  40b204:	mov    rcx,QWORD PTR [rbp-0x40]
  40b208:	mov    rax,QWORD PTR [rbp-0x38]
  40b20c:	mov    rsi,rcx
  40b20f:	mov    rdi,rax
  40b212:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b217:	mov    QWORD PTR [rbp-0x40],rax
  40b21b:	endbr64 
  40b21f:	jmp    40b259 <_start@@Base+0x7f49>
  40b221:	mov    rdx,QWORD PTR [rbp-0x48]
  40b225:	mov    rcx,QWORD PTR [rbp-0x40]
  40b229:	mov    rax,QWORD PTR [rbp-0x38]
  40b22d:	mov    rsi,rcx
  40b230:	mov    rdi,rax
  40b233:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b238:	mov    QWORD PTR [rbp-0x40],rax
  40b23c:	jmp    40b259 <_start@@Base+0x7f49>
  40b23e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b242:	mov    rcx,QWORD PTR [rbp-0x40]
  40b246:	mov    rax,QWORD PTR [rbp-0x38]
  40b24a:	mov    rsi,rcx
  40b24d:	mov    rdi,rax
  40b250:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b255:	mov    QWORD PTR [rbp-0x40],rax
  40b259:	lea    rcx,[rbp-0x28]
  40b25d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b261:	mov    rsi,QWORD PTR [rbp-0x40]
  40b265:	mov    rax,QWORD PTR [rbp-0x38]
  40b269:	mov    rdi,rax
  40b26c:	call   403f93 <_start@@Base+0xc83>
  40b271:	mov    QWORD PTR [rbp-0x40],rax
  40b275:	mov    eax,DWORD PTR [rbp-0x28]
  40b278:	test   eax,eax
  40b27a:	jne    40af58 <_start@@Base+0x7c48>
  40b280:	mov    rax,QWORD PTR [rbp-0x38]
  40b284:	mov    eax,DWORD PTR [rax+0x20]
  40b287:	test   eax,eax
  40b289:	jne    40b2be <_start@@Base+0x7fae>
  40b28b:	mov    rax,QWORD PTR [rbp-0x38]
  40b28f:	mov    rax,QWORD PTR [rax]
  40b292:	mov    rdi,rax
  40b295:	call   41868f <flatcc_builder_end_table@@Base>
  40b29a:	mov    edx,eax
  40b29c:	mov    rax,QWORD PTR [rbp-0x50]
  40b2a0:	mov    DWORD PTR [rax],edx
  40b2a2:	mov    rax,QWORD PTR [rbp-0x50]
  40b2a6:	mov    eax,DWORD PTR [rax]
  40b2a8:	test   eax,eax
  40b2aa:	je     40b2c1 <_start@@Base+0x7fb1>
  40b2ac:	mov    rax,QWORD PTR [rbp-0x40]
  40b2b0:	jmp    40b2db <_start@@Base+0x7fcb>
  40b2b2:	nop
  40b2b3:	jmp    40b2c2 <_start@@Base+0x7fb2>
  40b2b5:	nop
  40b2b6:	jmp    40b2c2 <_start@@Base+0x7fb2>
  40b2b8:	nop
  40b2b9:	jmp    40b2c2 <_start@@Base+0x7fb2>
  40b2bb:	nop
  40b2bc:	jmp    40b2c2 <_start@@Base+0x7fb2>
  40b2be:	nop
  40b2bf:	jmp    40b2c2 <_start@@Base+0x7fb2>
  40b2c1:	nop
  40b2c2:	mov    rdx,QWORD PTR [rbp-0x48]
  40b2c6:	mov    rsi,QWORD PTR [rbp-0x40]
  40b2ca:	mov    rax,QWORD PTR [rbp-0x38]
  40b2ce:	mov    ecx,0x21
  40b2d3:	mov    rdi,rax
  40b2d6:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40b2db:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2df:	xor    rdi,QWORD PTR fs:0x28
  40b2e8:	je     40b2ef <_start@@Base+0x7fdf>
  40b2ea:	call   403200 <__stack_chk_fail@plt>
  40b2ef:	leave  
  40b2f0:	ret    
  40b2f1:	endbr64 
  40b2f5:	push   rbp
  40b2f6:	mov    rbp,rsp
  40b2f9:	sub    rsp,0x60
  40b2fd:	mov    QWORD PTR [rbp-0x48],rdi
  40b301:	mov    QWORD PTR [rbp-0x50],rsi
  40b305:	mov    QWORD PTR [rbp-0x58],rdx
  40b309:	mov    QWORD PTR [rbp-0x60],rcx
  40b30d:	mov    rax,QWORD PTR fs:0x28
  40b316:	mov    QWORD PTR [rbp-0x8],rax
  40b31a:	xor    eax,eax
  40b31c:	mov    rax,QWORD PTR [rbp-0x60]
  40b320:	mov    DWORD PTR [rax],0x0
  40b326:	mov    rax,QWORD PTR [rbp-0x48]
  40b32a:	mov    rax,QWORD PTR [rax]
  40b32d:	mov    esi,0x9
  40b332:	mov    rdi,rax
  40b335:	call   417b80 <flatcc_builder_start_table@@Base>
  40b33a:	test   eax,eax
  40b33c:	jne    40beb4 <_start@@Base+0x8ba4>
  40b342:	lea    rcx,[rbp-0x38]
  40b346:	mov    rdx,QWORD PTR [rbp-0x58]
  40b34a:	mov    rsi,QWORD PTR [rbp-0x50]
  40b34e:	mov    rax,QWORD PTR [rbp-0x48]
  40b352:	mov    rdi,rax
  40b355:	call   403ed6 <_start@@Base+0xbc6>
  40b35a:	mov    QWORD PTR [rbp-0x50],rax
  40b35e:	jmp    40be77 <_start@@Base+0x8b67>
  40b363:	mov    rdx,QWORD PTR [rbp-0x58]
  40b367:	mov    rcx,QWORD PTR [rbp-0x50]
  40b36b:	mov    rax,QWORD PTR [rbp-0x48]
  40b36f:	mov    rsi,rcx
  40b372:	mov    rdi,rax
  40b375:	call   403c48 <_start@@Base+0x938>
  40b37a:	mov    QWORD PTR [rbp-0x50],rax
  40b37e:	mov    rdx,QWORD PTR [rbp-0x58]
  40b382:	mov    rax,QWORD PTR [rbp-0x50]
  40b386:	mov    rsi,rdx
  40b389:	mov    rdi,rax
  40b38c:	call   403dd5 <_start@@Base+0xac5>
  40b391:	mov    QWORD PTR [rbp-0x28],rax
  40b395:	movabs rax,0x63636362ffffffff
  40b39f:	cmp    QWORD PTR [rbp-0x28],rax
  40b3a3:	ja     40b830 <_start@@Base+0x8520>
  40b3a9:	movabs rax,0x6161616131323334
  40b3b3:	cmp    QWORD PTR [rbp-0x28],rax
  40b3b7:	jne    40b54b <_start@@Base+0x823b>
  40b3bd:	add    QWORD PTR [rbp-0x50],0x8
  40b3c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40b3c6:	mov    rax,QWORD PTR [rbp-0x50]
  40b3ca:	mov    rsi,rdx
  40b3cd:	mov    rdi,rax
  40b3d0:	call   403dd5 <_start@@Base+0xac5>
  40b3d5:	mov    QWORD PTR [rbp-0x28],rax
  40b3d9:	movabs rax,0xff00000000000000
  40b3e3:	and    rax,QWORD PTR [rbp-0x28]
  40b3e7:	mov    rdx,rax
  40b3ea:	movabs rax,0x3500000000000000
  40b3f4:	cmp    rdx,rax
  40b3f7:	jne    40b52b <_start@@Base+0x821b>
  40b3fd:	mov    rax,QWORD PTR [rbp-0x50]
  40b401:	mov    QWORD PTR [rbp-0x20],rax
  40b405:	mov    rdx,QWORD PTR [rbp-0x58]
  40b409:	mov    rsi,QWORD PTR [rbp-0x20]
  40b40d:	mov    rax,QWORD PTR [rbp-0x48]
  40b411:	mov    ecx,0x1
  40b416:	mov    rdi,rax
  40b419:	call   4042cc <_start@@Base+0xfbc>
  40b41e:	mov    QWORD PTR [rbp-0x50],rax
  40b422:	mov    rax,QWORD PTR [rbp-0x20]
  40b426:	cmp    rax,QWORD PTR [rbp-0x50]
  40b42a:	je     40b50b <_start@@Base+0x81fb>
  40b430:	mov    DWORD PTR [rbp-0x30],0x0
  40b437:	mov    rax,QWORD PTR [rbp-0x50]
  40b43b:	mov    QWORD PTR [rbp-0x20],rax
  40b43f:	lea    rcx,[rbp-0x30]
  40b443:	mov    rdx,QWORD PTR [rbp-0x58]
  40b447:	mov    rsi,QWORD PTR [rbp-0x20]
  40b44b:	mov    rax,QWORD PTR [rbp-0x48]
  40b44f:	mov    rdi,rax
  40b452:	call   404a7a <_start@@Base+0x176a>
  40b457:	mov    QWORD PTR [rbp-0x50],rax
  40b45b:	mov    rax,QWORD PTR [rbp-0x20]
  40b45f:	cmp    rax,QWORD PTR [rbp-0x50]
  40b463:	jne    40b4af <_start@@Base+0x819f>
  40b465:	mov    rax,QWORD PTR [rbp-0x50]
  40b469:	mov    QWORD PTR [rbp-0x20],rax
  40b46d:	lea    rcx,[rbp-0x30]
  40b471:	mov    rdx,QWORD PTR [rbp-0x58]
  40b475:	mov    rsi,QWORD PTR [rbp-0x20]
  40b479:	mov    rax,QWORD PTR [rbp-0x48]
  40b47d:	mov    r8,rcx
  40b480:	lea    rcx,[rip+0x1ef39]        # 42a3c0 <filename@@Base+0x2c0>
  40b487:	mov    rdi,rax
  40b48a:	call   405269 <_start@@Base+0x1f59>
  40b48f:	mov    QWORD PTR [rbp-0x50],rax
  40b493:	mov    rax,QWORD PTR [rbp-0x50]
  40b497:	cmp    rax,QWORD PTR [rbp-0x20]
  40b49b:	je     40beb7 <_start@@Base+0x8ba7>
  40b4a1:	mov    rax,QWORD PTR [rbp-0x50]
  40b4a5:	cmp    rax,QWORD PTR [rbp-0x58]
  40b4a9:	je     40beb7 <_start@@Base+0x8ba7>
  40b4af:	mov    eax,DWORD PTR [rbp-0x30]
  40b4b2:	test   eax,eax
  40b4b4:	jne    40b4c8 <_start@@Base+0x81b8>
  40b4b6:	mov    rax,QWORD PTR [rbp-0x48]
  40b4ba:	mov    eax,DWORD PTR [rax+0x10]
  40b4bd:	and    eax,0x2
  40b4c0:	test   eax,eax
  40b4c2:	je     40be5b <_start@@Base+0x8b4b>
  40b4c8:	mov    rax,QWORD PTR [rbp-0x48]
  40b4cc:	mov    rax,QWORD PTR [rax]
  40b4cf:	mov    ecx,0x4
  40b4d4:	mov    edx,0x4
  40b4d9:	mov    esi,0x1
  40b4de:	mov    rdi,rax
  40b4e1:	call   419d30 <flatcc_builder_table_add@@Base>
  40b4e6:	mov    QWORD PTR [rbp-0x18],rax
  40b4ea:	cmp    QWORD PTR [rbp-0x18],0x0
  40b4ef:	je     40beba <_start@@Base+0x8baa>
  40b4f5:	mov    edx,DWORD PTR [rbp-0x30]
  40b4f8:	mov    rax,QWORD PTR [rbp-0x18]
  40b4fc:	mov    esi,edx
  40b4fe:	mov    rdi,rax
  40b501:	call   40346f <_start@@Base+0x15f>
  40b506:	jmp    40be5b <_start@@Base+0x8b4b>
  40b50b:	mov    rdx,QWORD PTR [rbp-0x58]
  40b50f:	mov    rcx,QWORD PTR [rbp-0x50]
  40b513:	mov    rax,QWORD PTR [rbp-0x48]
  40b517:	mov    rsi,rcx
  40b51a:	mov    rdi,rax
  40b51d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b522:	mov    QWORD PTR [rbp-0x50],rax
  40b526:	jmp    40be5b <_start@@Base+0x8b4b>
  40b52b:	mov    rdx,QWORD PTR [rbp-0x58]
  40b52f:	mov    rcx,QWORD PTR [rbp-0x50]
  40b533:	mov    rax,QWORD PTR [rbp-0x48]
  40b537:	mov    rsi,rcx
  40b53a:	mov    rdi,rax
  40b53d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b542:	mov    QWORD PTR [rbp-0x50],rax
  40b546:	jmp    40be5b <_start@@Base+0x8b4b>
  40b54b:	movabs rax,0xffffffff00000000
  40b555:	and    rax,QWORD PTR [rbp-0x28]
  40b559:	mov    rdx,rax
  40b55c:	movabs rax,0x6161616100000000
  40b566:	cmp    rdx,rax
  40b569:	jne    40b5f6 <_start@@Base+0x82e6>
  40b56f:	mov    rax,QWORD PTR [rbp-0x50]
  40b573:	mov    QWORD PTR [rbp-0x20],rax
  40b577:	mov    rdx,QWORD PTR [rbp-0x58]
  40b57b:	mov    rsi,QWORD PTR [rbp-0x20]
  40b57f:	mov    rax,QWORD PTR [rbp-0x48]
  40b583:	mov    ecx,0x4
  40b588:	mov    rdi,rax
  40b58b:	call   4042cc <_start@@Base+0xfbc>
  40b590:	mov    QWORD PTR [rbp-0x50],rax
  40b594:	mov    rax,QWORD PTR [rbp-0x20]
  40b598:	cmp    rax,QWORD PTR [rbp-0x50]
  40b59c:	je     40b5f9 <_start@@Base+0x82e9>
  40b59e:	lea    rcx,[rbp-0x34]
  40b5a2:	mov    rdx,QWORD PTR [rbp-0x58]
  40b5a6:	mov    rsi,QWORD PTR [rbp-0x50]
  40b5aa:	mov    rax,QWORD PTR [rbp-0x48]
  40b5ae:	mov    rdi,rax
  40b5b1:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40b5b6:	mov    QWORD PTR [rbp-0x50],rax
  40b5ba:	mov    eax,DWORD PTR [rbp-0x34]
  40b5bd:	test   eax,eax
  40b5bf:	je     40bebd <_start@@Base+0x8bad>
  40b5c5:	mov    rax,QWORD PTR [rbp-0x48]
  40b5c9:	mov    rax,QWORD PTR [rax]
  40b5cc:	mov    esi,0x0
  40b5d1:	mov    rdi,rax
  40b5d4:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40b5d9:	mov    QWORD PTR [rbp-0x10],rax
  40b5dd:	cmp    QWORD PTR [rbp-0x10],0x0
  40b5e2:	je     40bebd <_start@@Base+0x8bad>
  40b5e8:	mov    edx,DWORD PTR [rbp-0x34]
  40b5eb:	mov    rax,QWORD PTR [rbp-0x10]
  40b5ef:	mov    DWORD PTR [rax],edx
  40b5f1:	jmp    40be5b <_start@@Base+0x8b4b>
  40b5f6:	nop
  40b5f7:	jmp    40b5fa <_start@@Base+0x82ea>
  40b5f9:	nop
  40b5fa:	movabs rax,0x6262626231323334
  40b604:	cmp    QWORD PTR [rbp-0x28],rax
  40b608:	jne    40b741 <_start@@Base+0x8431>
  40b60e:	mov    rax,QWORD PTR [rbp-0x50]
  40b612:	mov    QWORD PTR [rbp-0x20],rax
  40b616:	mov    rdx,QWORD PTR [rbp-0x58]
  40b61a:	mov    rsi,QWORD PTR [rbp-0x20]
  40b61e:	mov    rax,QWORD PTR [rbp-0x48]
  40b622:	mov    ecx,0x8
  40b627:	mov    rdi,rax
  40b62a:	call   4042cc <_start@@Base+0xfbc>
  40b62f:	mov    QWORD PTR [rbp-0x50],rax
  40b633:	mov    rax,QWORD PTR [rbp-0x20]
  40b637:	cmp    rax,QWORD PTR [rbp-0x50]
  40b63b:	je     40b721 <_start@@Base+0x8411>
  40b641:	mov    QWORD PTR [rbp-0x30],0x0
  40b649:	mov    rax,QWORD PTR [rbp-0x50]
  40b64d:	mov    QWORD PTR [rbp-0x20],rax
  40b651:	lea    rcx,[rbp-0x30]
  40b655:	mov    rdx,QWORD PTR [rbp-0x58]
  40b659:	mov    rsi,QWORD PTR [rbp-0x20]
  40b65d:	mov    rax,QWORD PTR [rbp-0x48]
  40b661:	mov    rdi,rax
  40b664:	call   404cc8 <_start@@Base+0x19b8>
  40b669:	mov    QWORD PTR [rbp-0x50],rax
  40b66d:	mov    rax,QWORD PTR [rbp-0x20]
  40b671:	cmp    rax,QWORD PTR [rbp-0x50]
  40b675:	jne    40b6c1 <_start@@Base+0x83b1>
  40b677:	mov    rax,QWORD PTR [rbp-0x50]
  40b67b:	mov    QWORD PTR [rbp-0x20],rax
  40b67f:	lea    rcx,[rbp-0x30]
  40b683:	mov    rdx,QWORD PTR [rbp-0x58]
  40b687:	mov    rsi,QWORD PTR [rbp-0x20]
  40b68b:	mov    rax,QWORD PTR [rbp-0x48]
  40b68f:	mov    r8,rcx
  40b692:	lea    rcx,[rip+0x1ed47]        # 42a3e0 <filename@@Base+0x2e0>
  40b699:	mov    rdi,rax
  40b69c:	call   405734 <_start@@Base+0x2424>
  40b6a1:	mov    QWORD PTR [rbp-0x50],rax
  40b6a5:	mov    rax,QWORD PTR [rbp-0x50]
  40b6a9:	cmp    rax,QWORD PTR [rbp-0x20]
  40b6ad:	je     40bec0 <_start@@Base+0x8bb0>
  40b6b3:	mov    rax,QWORD PTR [rbp-0x50]
  40b6b7:	cmp    rax,QWORD PTR [rbp-0x58]
  40b6bb:	je     40bec0 <_start@@Base+0x8bb0>
  40b6c1:	mov    rax,QWORD PTR [rbp-0x30]
  40b6c5:	test   rax,rax
  40b6c8:	jne    40b6dc <_start@@Base+0x83cc>
  40b6ca:	mov    rax,QWORD PTR [rbp-0x48]
  40b6ce:	mov    eax,DWORD PTR [rax+0x10]
  40b6d1:	and    eax,0x2
  40b6d4:	test   eax,eax
  40b6d6:	je     40be5b <_start@@Base+0x8b4b>
  40b6dc:	mov    rax,QWORD PTR [rbp-0x48]
  40b6e0:	mov    rax,QWORD PTR [rax]
  40b6e3:	mov    ecx,0x8
  40b6e8:	mov    edx,0x8
  40b6ed:	mov    esi,0x3
  40b6f2:	mov    rdi,rax
  40b6f5:	call   419d30 <flatcc_builder_table_add@@Base>
  40b6fa:	mov    QWORD PTR [rbp-0x18],rax
  40b6fe:	cmp    QWORD PTR [rbp-0x18],0x0
  40b703:	je     40bec3 <_start@@Base+0x8bb3>
  40b709:	mov    rdx,QWORD PTR [rbp-0x30]
  40b70d:	mov    rax,QWORD PTR [rbp-0x18]
  40b711:	mov    rsi,rdx
  40b714:	mov    rdi,rax
  40b717:	call   4035d0 <_start@@Base+0x2c0>
  40b71c:	jmp    40be5b <_start@@Base+0x8b4b>
  40b721:	mov    rdx,QWORD PTR [rbp-0x58]
  40b725:	mov    rcx,QWORD PTR [rbp-0x50]
  40b729:	mov    rax,QWORD PTR [rbp-0x48]
  40b72d:	mov    rsi,rcx
  40b730:	mov    rdi,rax
  40b733:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b738:	mov    QWORD PTR [rbp-0x50],rax
  40b73c:	jmp    40be5b <_start@@Base+0x8b4b>
  40b741:	movabs rax,0xffffffff00000000
  40b74b:	and    rax,QWORD PTR [rbp-0x28]
  40b74f:	mov    rdx,rax
  40b752:	movabs rax,0x6262626200000000
  40b75c:	cmp    rdx,rax
  40b75f:	jne    40b80c <_start@@Base+0x84fc>
  40b765:	mov    rax,QWORD PTR [rbp-0x50]
  40b769:	mov    QWORD PTR [rbp-0x20],rax
  40b76d:	mov    rdx,QWORD PTR [rbp-0x58]
  40b771:	mov    rsi,QWORD PTR [rbp-0x20]
  40b775:	mov    rax,QWORD PTR [rbp-0x48]
  40b779:	mov    ecx,0x4
  40b77e:	mov    rdi,rax
  40b781:	call   4042cc <_start@@Base+0xfbc>
  40b786:	mov    QWORD PTR [rbp-0x50],rax
  40b78a:	mov    rax,QWORD PTR [rbp-0x20]
  40b78e:	cmp    rax,QWORD PTR [rbp-0x50]
  40b792:	je     40b7ec <_start@@Base+0x84dc>
  40b794:	lea    rcx,[rbp-0x34]
  40b798:	mov    rdx,QWORD PTR [rbp-0x58]
  40b79c:	mov    rsi,QWORD PTR [rbp-0x50]
  40b7a0:	mov    rax,QWORD PTR [rbp-0x48]
  40b7a4:	mov    rdi,rax
  40b7a7:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40b7ac:	mov    QWORD PTR [rbp-0x50],rax
  40b7b0:	mov    eax,DWORD PTR [rbp-0x34]
  40b7b3:	test   eax,eax
  40b7b5:	je     40bec6 <_start@@Base+0x8bb6>
  40b7bb:	mov    rax,QWORD PTR [rbp-0x48]
  40b7bf:	mov    rax,QWORD PTR [rax]
  40b7c2:	mov    esi,0x2
  40b7c7:	mov    rdi,rax
  40b7ca:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40b7cf:	mov    QWORD PTR [rbp-0x10],rax
  40b7d3:	cmp    QWORD PTR [rbp-0x10],0x0
  40b7d8:	je     40bec6 <_start@@Base+0x8bb6>
  40b7de:	mov    edx,DWORD PTR [rbp-0x34]
  40b7e1:	mov    rax,QWORD PTR [rbp-0x10]
  40b7e5:	mov    DWORD PTR [rax],edx
  40b7e7:	jmp    40be5b <_start@@Base+0x8b4b>
  40b7ec:	mov    rdx,QWORD PTR [rbp-0x58]
  40b7f0:	mov    rcx,QWORD PTR [rbp-0x50]
  40b7f4:	mov    rax,QWORD PTR [rbp-0x48]
  40b7f8:	mov    rsi,rcx
  40b7fb:	mov    rdi,rax
  40b7fe:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b803:	mov    QWORD PTR [rbp-0x50],rax
  40b807:	jmp    40be5b <_start@@Base+0x8b4b>
  40b80c:	mov    rdx,QWORD PTR [rbp-0x58]
  40b810:	mov    rcx,QWORD PTR [rbp-0x50]
  40b814:	mov    rax,QWORD PTR [rbp-0x48]
  40b818:	mov    rsi,rcx
  40b81b:	mov    rdi,rax
  40b81e:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40b823:	mov    QWORD PTR [rbp-0x50],rax
  40b827:	endbr64 
  40b82b:	jmp    40be5b <_start@@Base+0x8b4b>
  40b830:	movabs rax,0x6363636331323334
  40b83a:	cmp    QWORD PTR [rbp-0x28],rax
  40b83e:	jne    40bae5 <_start@@Base+0x87d5>
  40b844:	mov    rax,QWORD PTR [rbp-0x50]
  40b848:	mov    QWORD PTR [rbp-0x20],rax
  40b84c:	mov    rdx,QWORD PTR [rbp-0x58]
  40b850:	mov    rsi,QWORD PTR [rbp-0x20]
  40b854:	mov    rax,QWORD PTR [rbp-0x48]
  40b858:	mov    ecx,0x8
  40b85d:	mov    rdi,rax
  40b860:	call   4042cc <_start@@Base+0xfbc>
  40b865:	mov    QWORD PTR [rbp-0x50],rax
  40b869:	mov    rax,QWORD PTR [rbp-0x20]
  40b86d:	cmp    rax,QWORD PTR [rbp-0x50]
  40b871:	je     40b957 <_start@@Base+0x8647>
  40b877:	mov    QWORD PTR [rbp-0x30],0x0
  40b87f:	mov    rax,QWORD PTR [rbp-0x50]
  40b883:	mov    QWORD PTR [rbp-0x20],rax
  40b887:	lea    rcx,[rbp-0x30]
  40b88b:	mov    rdx,QWORD PTR [rbp-0x58]
  40b88f:	mov    rsi,QWORD PTR [rbp-0x20]
  40b893:	mov    rax,QWORD PTR [rbp-0x48]
  40b897:	mov    rdi,rax
  40b89a:	call   404cc8 <_start@@Base+0x19b8>
  40b89f:	mov    QWORD PTR [rbp-0x50],rax
  40b8a3:	mov    rax,QWORD PTR [rbp-0x20]
  40b8a7:	cmp    rax,QWORD PTR [rbp-0x50]
  40b8ab:	jne    40b8f7 <_start@@Base+0x85e7>
  40b8ad:	mov    rax,QWORD PTR [rbp-0x50]
  40b8b1:	mov    QWORD PTR [rbp-0x20],rax
  40b8b5:	lea    rcx,[rbp-0x30]
  40b8b9:	mov    rdx,QWORD PTR [rbp-0x58]
  40b8bd:	mov    rsi,QWORD PTR [rbp-0x20]
  40b8c1:	mov    rax,QWORD PTR [rbp-0x48]
  40b8c5:	mov    r8,rcx
  40b8c8:	lea    rcx,[rip+0x1eb31]        # 42a400 <filename@@Base+0x300>
  40b8cf:	mov    rdi,rax
  40b8d2:	call   405734 <_start@@Base+0x2424>
  40b8d7:	mov    QWORD PTR [rbp-0x50],rax
  40b8db:	mov    rax,QWORD PTR [rbp-0x50]
  40b8df:	cmp    rax,QWORD PTR [rbp-0x20]
  40b8e3:	je     40bec9 <_start@@Base+0x8bb9>
  40b8e9:	mov    rax,QWORD PTR [rbp-0x50]
  40b8ed:	cmp    rax,QWORD PTR [rbp-0x58]
  40b8f1:	je     40bec9 <_start@@Base+0x8bb9>
  40b8f7:	mov    rax,QWORD PTR [rbp-0x30]
  40b8fb:	test   rax,rax
  40b8fe:	jne    40b912 <_start@@Base+0x8602>
  40b900:	mov    rax,QWORD PTR [rbp-0x48]
  40b904:	mov    eax,DWORD PTR [rax+0x10]
  40b907:	and    eax,0x2
  40b90a:	test   eax,eax
  40b90c:	je     40be5b <_start@@Base+0x8b4b>
  40b912:	mov    rax,QWORD PTR [rbp-0x48]
  40b916:	mov    rax,QWORD PTR [rax]
  40b919:	mov    ecx,0x8
  40b91e:	mov    edx,0x8
  40b923:	mov    esi,0x5
  40b928:	mov    rdi,rax
  40b92b:	call   419d30 <flatcc_builder_table_add@@Base>
  40b930:	mov    QWORD PTR [rbp-0x18],rax
  40b934:	cmp    QWORD PTR [rbp-0x18],0x0
  40b939:	je     40becc <_start@@Base+0x8bbc>
  40b93f:	mov    rdx,QWORD PTR [rbp-0x30]
  40b943:	mov    rax,QWORD PTR [rbp-0x18]
  40b947:	mov    rsi,rdx
  40b94a:	mov    rdi,rax
  40b94d:	call   4035d0 <_start@@Base+0x2c0>
  40b952:	jmp    40be5b <_start@@Base+0x8b4b>
  40b957:	add    QWORD PTR [rbp-0x50],0x8
  40b95c:	mov    rdx,QWORD PTR [rbp-0x58]
  40b960:	mov    rax,QWORD PTR [rbp-0x50]
  40b964:	mov    rsi,rdx
  40b967:	mov    rdi,rax
  40b96a:	call   403dd5 <_start@@Base+0xac5>
  40b96f:	mov    QWORD PTR [rbp-0x28],rax
  40b973:	movabs rax,0xff00000000000000
  40b97d:	and    rax,QWORD PTR [rbp-0x28]
  40b981:	mov    rdx,rax
  40b984:	movabs rax,0x3500000000000000
  40b98e:	cmp    rdx,rax
  40b991:	jne    40bac5 <_start@@Base+0x87b5>
  40b997:	mov    rax,QWORD PTR [rbp-0x50]
  40b99b:	mov    QWORD PTR [rbp-0x20],rax
  40b99f:	mov    rdx,QWORD PTR [rbp-0x58]
  40b9a3:	mov    rsi,QWORD PTR [rbp-0x20]
  40b9a7:	mov    rax,QWORD PTR [rbp-0x48]
  40b9ab:	mov    ecx,0x1
  40b9b0:	mov    rdi,rax
  40b9b3:	call   4042cc <_start@@Base+0xfbc>
  40b9b8:	mov    QWORD PTR [rbp-0x50],rax
  40b9bc:	mov    rax,QWORD PTR [rbp-0x20]
  40b9c0:	cmp    rax,QWORD PTR [rbp-0x50]
  40b9c4:	je     40baa5 <_start@@Base+0x8795>
  40b9ca:	mov    DWORD PTR [rbp-0x30],0x0
  40b9d1:	mov    rax,QWORD PTR [rbp-0x50]
  40b9d5:	mov    QWORD PTR [rbp-0x20],rax
  40b9d9:	lea    rcx,[rbp-0x30]
  40b9dd:	mov    rdx,QWORD PTR [rbp-0x58]
  40b9e1:	mov    rsi,QWORD PTR [rbp-0x20]
  40b9e5:	mov    rax,QWORD PTR [rbp-0x48]
  40b9e9:	mov    rdi,rax
  40b9ec:	call   404a7a <_start@@Base+0x176a>
  40b9f1:	mov    QWORD PTR [rbp-0x50],rax
  40b9f5:	mov    rax,QWORD PTR [rbp-0x20]
  40b9f9:	cmp    rax,QWORD PTR [rbp-0x50]
  40b9fd:	jne    40ba49 <_start@@Base+0x8739>
  40b9ff:	mov    rax,QWORD PTR [rbp-0x50]
  40ba03:	mov    QWORD PTR [rbp-0x20],rax
  40ba07:	lea    rcx,[rbp-0x30]
  40ba0b:	mov    rdx,QWORD PTR [rbp-0x58]
  40ba0f:	mov    rsi,QWORD PTR [rbp-0x20]
  40ba13:	mov    rax,QWORD PTR [rbp-0x48]
  40ba17:	mov    r8,rcx
  40ba1a:	lea    rcx,[rip+0x1e9ff]        # 42a420 <filename@@Base+0x320>
  40ba21:	mov    rdi,rax
  40ba24:	call   405269 <_start@@Base+0x1f59>
  40ba29:	mov    QWORD PTR [rbp-0x50],rax
  40ba2d:	mov    rax,QWORD PTR [rbp-0x50]
  40ba31:	cmp    rax,QWORD PTR [rbp-0x20]
  40ba35:	je     40becf <_start@@Base+0x8bbf>
  40ba3b:	mov    rax,QWORD PTR [rbp-0x50]
  40ba3f:	cmp    rax,QWORD PTR [rbp-0x58]
  40ba43:	je     40becf <_start@@Base+0x8bbf>
  40ba49:	mov    eax,DWORD PTR [rbp-0x30]
  40ba4c:	test   eax,eax
  40ba4e:	jne    40ba62 <_start@@Base+0x8752>
  40ba50:	mov    rax,QWORD PTR [rbp-0x48]
  40ba54:	mov    eax,DWORD PTR [rax+0x10]
  40ba57:	and    eax,0x2
  40ba5a:	test   eax,eax
  40ba5c:	je     40be5b <_start@@Base+0x8b4b>
  40ba62:	mov    rax,QWORD PTR [rbp-0x48]
  40ba66:	mov    rax,QWORD PTR [rax]
  40ba69:	mov    ecx,0x4
  40ba6e:	mov    edx,0x4
  40ba73:	mov    esi,0x6
  40ba78:	mov    rdi,rax
  40ba7b:	call   419d30 <flatcc_builder_table_add@@Base>
  40ba80:	mov    QWORD PTR [rbp-0x18],rax
  40ba84:	cmp    QWORD PTR [rbp-0x18],0x0
  40ba89:	je     40bed2 <_start@@Base+0x8bc2>
  40ba8f:	mov    edx,DWORD PTR [rbp-0x30]
  40ba92:	mov    rax,QWORD PTR [rbp-0x18]
  40ba96:	mov    esi,edx
  40ba98:	mov    rdi,rax
  40ba9b:	call   40346f <_start@@Base+0x15f>
  40baa0:	jmp    40be5b <_start@@Base+0x8b4b>
  40baa5:	mov    rdx,QWORD PTR [rbp-0x58]
  40baa9:	mov    rcx,QWORD PTR [rbp-0x50]
  40baad:	mov    rax,QWORD PTR [rbp-0x48]
  40bab1:	mov    rsi,rcx
  40bab4:	mov    rdi,rax
  40bab7:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40babc:	mov    QWORD PTR [rbp-0x50],rax
  40bac0:	jmp    40be5b <_start@@Base+0x8b4b>
  40bac5:	mov    rdx,QWORD PTR [rbp-0x58]
  40bac9:	mov    rcx,QWORD PTR [rbp-0x50]
  40bacd:	mov    rax,QWORD PTR [rbp-0x48]
  40bad1:	mov    rsi,rcx
  40bad4:	mov    rdi,rax
  40bad7:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40badc:	mov    QWORD PTR [rbp-0x50],rax
  40bae0:	jmp    40be5b <_start@@Base+0x8b4b>
  40bae5:	movabs rax,0xffffffff00000000
  40baef:	and    rax,QWORD PTR [rbp-0x28]
  40baf3:	mov    rdx,rax
  40baf6:	movabs rax,0x6363636300000000
  40bb00:	cmp    rdx,rax
  40bb03:	jne    40bb90 <_start@@Base+0x8880>
  40bb09:	mov    rax,QWORD PTR [rbp-0x50]
  40bb0d:	mov    QWORD PTR [rbp-0x20],rax
  40bb11:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb15:	mov    rsi,QWORD PTR [rbp-0x20]
  40bb19:	mov    rax,QWORD PTR [rbp-0x48]
  40bb1d:	mov    ecx,0x4
  40bb22:	mov    rdi,rax
  40bb25:	call   4042cc <_start@@Base+0xfbc>
  40bb2a:	mov    QWORD PTR [rbp-0x50],rax
  40bb2e:	mov    rax,QWORD PTR [rbp-0x20]
  40bb32:	cmp    rax,QWORD PTR [rbp-0x50]
  40bb36:	je     40bb93 <_start@@Base+0x8883>
  40bb38:	lea    rcx,[rbp-0x34]
  40bb3c:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb40:	mov    rsi,QWORD PTR [rbp-0x50]
  40bb44:	mov    rax,QWORD PTR [rbp-0x48]
  40bb48:	mov    rdi,rax
  40bb4b:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40bb50:	mov    QWORD PTR [rbp-0x50],rax
  40bb54:	mov    eax,DWORD PTR [rbp-0x34]
  40bb57:	test   eax,eax
  40bb59:	je     40bed5 <_start@@Base+0x8bc5>
  40bb5f:	mov    rax,QWORD PTR [rbp-0x48]
  40bb63:	mov    rax,QWORD PTR [rax]
  40bb66:	mov    esi,0x4
  40bb6b:	mov    rdi,rax
  40bb6e:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40bb73:	mov    QWORD PTR [rbp-0x10],rax
  40bb77:	cmp    QWORD PTR [rbp-0x10],0x0
  40bb7c:	je     40bed5 <_start@@Base+0x8bc5>
  40bb82:	mov    edx,DWORD PTR [rbp-0x34]
  40bb85:	mov    rax,QWORD PTR [rbp-0x10]
  40bb89:	mov    DWORD PTR [rax],edx
  40bb8b:	jmp    40be5b <_start@@Base+0x8b4b>
  40bb90:	nop
  40bb91:	jmp    40bb94 <_start@@Base+0x8884>
  40bb93:	nop
  40bb94:	movabs rax,0x6464646431323334
  40bb9e:	cmp    QWORD PTR [rbp-0x28],rax
  40bba2:	jne    40be40 <_start@@Base+0x8b30>
  40bba8:	mov    rax,QWORD PTR [rbp-0x50]
  40bbac:	mov    QWORD PTR [rbp-0x20],rax
  40bbb0:	mov    rdx,QWORD PTR [rbp-0x58]
  40bbb4:	mov    rsi,QWORD PTR [rbp-0x20]
  40bbb8:	mov    rax,QWORD PTR [rbp-0x48]
  40bbbc:	mov    ecx,0x8
  40bbc1:	mov    rdi,rax
  40bbc4:	call   4042cc <_start@@Base+0xfbc>
  40bbc9:	mov    QWORD PTR [rbp-0x50],rax
  40bbcd:	mov    rax,QWORD PTR [rbp-0x20]
  40bbd1:	cmp    rax,QWORD PTR [rbp-0x50]
  40bbd5:	je     40bcbb <_start@@Base+0x89ab>
  40bbdb:	mov    QWORD PTR [rbp-0x30],0x0
  40bbe3:	mov    rax,QWORD PTR [rbp-0x50]
  40bbe7:	mov    QWORD PTR [rbp-0x20],rax
  40bbeb:	lea    rcx,[rbp-0x30]
  40bbef:	mov    rdx,QWORD PTR [rbp-0x58]
  40bbf3:	mov    rsi,QWORD PTR [rbp-0x20]
  40bbf7:	mov    rax,QWORD PTR [rbp-0x48]
  40bbfb:	mov    rdi,rax
  40bbfe:	call   404cc8 <_start@@Base+0x19b8>
  40bc03:	mov    QWORD PTR [rbp-0x50],rax
  40bc07:	mov    rax,QWORD PTR [rbp-0x20]
  40bc0b:	cmp    rax,QWORD PTR [rbp-0x50]
  40bc0f:	jne    40bc5b <_start@@Base+0x894b>
  40bc11:	mov    rax,QWORD PTR [rbp-0x50]
  40bc15:	mov    QWORD PTR [rbp-0x20],rax
  40bc19:	lea    rcx,[rbp-0x30]
  40bc1d:	mov    rdx,QWORD PTR [rbp-0x58]
  40bc21:	mov    rsi,QWORD PTR [rbp-0x20]
  40bc25:	mov    rax,QWORD PTR [rbp-0x48]
  40bc29:	mov    r8,rcx
  40bc2c:	lea    rcx,[rip+0x1e80d]        # 42a440 <filename@@Base+0x340>
  40bc33:	mov    rdi,rax
  40bc36:	call   405734 <_start@@Base+0x2424>
  40bc3b:	mov    QWORD PTR [rbp-0x50],rax
  40bc3f:	mov    rax,QWORD PTR [rbp-0x50]
  40bc43:	cmp    rax,QWORD PTR [rbp-0x20]
  40bc47:	je     40bed8 <_start@@Base+0x8bc8>
  40bc4d:	mov    rax,QWORD PTR [rbp-0x50]
  40bc51:	cmp    rax,QWORD PTR [rbp-0x58]
  40bc55:	je     40bed8 <_start@@Base+0x8bc8>
  40bc5b:	mov    rax,QWORD PTR [rbp-0x30]
  40bc5f:	test   rax,rax
  40bc62:	jne    40bc76 <_start@@Base+0x8966>
  40bc64:	mov    rax,QWORD PTR [rbp-0x48]
  40bc68:	mov    eax,DWORD PTR [rax+0x10]
  40bc6b:	and    eax,0x2
  40bc6e:	test   eax,eax
  40bc70:	je     40be5b <_start@@Base+0x8b4b>
  40bc76:	mov    rax,QWORD PTR [rbp-0x48]
  40bc7a:	mov    rax,QWORD PTR [rax]
  40bc7d:	mov    ecx,0x8
  40bc82:	mov    edx,0x8
  40bc87:	mov    esi,0x7
  40bc8c:	mov    rdi,rax
  40bc8f:	call   419d30 <flatcc_builder_table_add@@Base>
  40bc94:	mov    QWORD PTR [rbp-0x18],rax
  40bc98:	cmp    QWORD PTR [rbp-0x18],0x0
  40bc9d:	je     40bedb <_start@@Base+0x8bcb>
  40bca3:	mov    rdx,QWORD PTR [rbp-0x30]
  40bca7:	mov    rax,QWORD PTR [rbp-0x18]
  40bcab:	mov    rsi,rdx
  40bcae:	mov    rdi,rax
  40bcb1:	call   4035d0 <_start@@Base+0x2c0>
  40bcb6:	jmp    40be5b <_start@@Base+0x8b4b>
  40bcbb:	add    QWORD PTR [rbp-0x50],0x8
  40bcc0:	mov    rdx,QWORD PTR [rbp-0x58]
  40bcc4:	mov    rax,QWORD PTR [rbp-0x50]
  40bcc8:	mov    rsi,rdx
  40bccb:	mov    rdi,rax
  40bcce:	call   403dd5 <_start@@Base+0xac5>
  40bcd3:	mov    QWORD PTR [rbp-0x28],rax
  40bcd7:	movabs rax,0xff00000000000000
  40bce1:	and    rax,QWORD PTR [rbp-0x28]
  40bce5:	mov    rdx,rax
  40bce8:	movabs rax,0x3500000000000000
  40bcf2:	cmp    rdx,rax
  40bcf5:	jne    40be23 <_start@@Base+0x8b13>
  40bcfb:	mov    rax,QWORD PTR [rbp-0x50]
  40bcff:	mov    QWORD PTR [rbp-0x20],rax
  40bd03:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd07:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd0b:	mov    rax,QWORD PTR [rbp-0x48]
  40bd0f:	mov    ecx,0x1
  40bd14:	mov    rdi,rax
  40bd17:	call   4042cc <_start@@Base+0xfbc>
  40bd1c:	mov    QWORD PTR [rbp-0x50],rax
  40bd20:	mov    rax,QWORD PTR [rbp-0x20]
  40bd24:	cmp    rax,QWORD PTR [rbp-0x50]
  40bd28:	je     40be06 <_start@@Base+0x8af6>
  40bd2e:	mov    DWORD PTR [rbp-0x30],0x0
  40bd35:	mov    rax,QWORD PTR [rbp-0x50]
  40bd39:	mov    QWORD PTR [rbp-0x20],rax
  40bd3d:	lea    rcx,[rbp-0x30]
  40bd41:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd45:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd49:	mov    rax,QWORD PTR [rbp-0x48]
  40bd4d:	mov    rdi,rax
  40bd50:	call   404a7a <_start@@Base+0x176a>
  40bd55:	mov    QWORD PTR [rbp-0x50],rax
  40bd59:	mov    rax,QWORD PTR [rbp-0x20]
  40bd5d:	cmp    rax,QWORD PTR [rbp-0x50]
  40bd61:	jne    40bdad <_start@@Base+0x8a9d>
  40bd63:	mov    rax,QWORD PTR [rbp-0x50]
  40bd67:	mov    QWORD PTR [rbp-0x20],rax
  40bd6b:	lea    rcx,[rbp-0x30]
  40bd6f:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd73:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd77:	mov    rax,QWORD PTR [rbp-0x48]
  40bd7b:	mov    r8,rcx
  40bd7e:	lea    rcx,[rip+0x1e6db]        # 42a460 <filename@@Base+0x360>
  40bd85:	mov    rdi,rax
  40bd88:	call   405269 <_start@@Base+0x1f59>
  40bd8d:	mov    QWORD PTR [rbp-0x50],rax
  40bd91:	mov    rax,QWORD PTR [rbp-0x50]
  40bd95:	cmp    rax,QWORD PTR [rbp-0x20]
  40bd99:	je     40bede <_start@@Base+0x8bce>
  40bd9f:	mov    rax,QWORD PTR [rbp-0x50]
  40bda3:	cmp    rax,QWORD PTR [rbp-0x58]
  40bda7:	je     40bede <_start@@Base+0x8bce>
  40bdad:	mov    eax,DWORD PTR [rbp-0x30]
  40bdb0:	test   eax,eax
  40bdb2:	jne    40bdc6 <_start@@Base+0x8ab6>
  40bdb4:	mov    rax,QWORD PTR [rbp-0x48]
  40bdb8:	mov    eax,DWORD PTR [rax+0x10]
  40bdbb:	and    eax,0x2
  40bdbe:	test   eax,eax
  40bdc0:	je     40be5b <_start@@Base+0x8b4b>
  40bdc6:	mov    rax,QWORD PTR [rbp-0x48]
  40bdca:	mov    rax,QWORD PTR [rax]
  40bdcd:	mov    ecx,0x4
  40bdd2:	mov    edx,0x4
  40bdd7:	mov    esi,0x8
  40bddc:	mov    rdi,rax
  40bddf:	call   419d30 <flatcc_builder_table_add@@Base>
  40bde4:	mov    QWORD PTR [rbp-0x18],rax
  40bde8:	cmp    QWORD PTR [rbp-0x18],0x0
  40bded:	je     40bee1 <_start@@Base+0x8bd1>
  40bdf3:	mov    edx,DWORD PTR [rbp-0x30]
  40bdf6:	mov    rax,QWORD PTR [rbp-0x18]
  40bdfa:	mov    esi,edx
  40bdfc:	mov    rdi,rax
  40bdff:	call   40346f <_start@@Base+0x15f>
  40be04:	jmp    40be5b <_start@@Base+0x8b4b>
  40be06:	mov    rdx,QWORD PTR [rbp-0x58]
  40be0a:	mov    rcx,QWORD PTR [rbp-0x50]
  40be0e:	mov    rax,QWORD PTR [rbp-0x48]
  40be12:	mov    rsi,rcx
  40be15:	mov    rdi,rax
  40be18:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40be1d:	mov    QWORD PTR [rbp-0x50],rax
  40be21:	jmp    40be5b <_start@@Base+0x8b4b>
  40be23:	mov    rdx,QWORD PTR [rbp-0x58]
  40be27:	mov    rcx,QWORD PTR [rbp-0x50]
  40be2b:	mov    rax,QWORD PTR [rbp-0x48]
  40be2f:	mov    rsi,rcx
  40be32:	mov    rdi,rax
  40be35:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40be3a:	mov    QWORD PTR [rbp-0x50],rax
  40be3e:	jmp    40be5b <_start@@Base+0x8b4b>
  40be40:	mov    rdx,QWORD PTR [rbp-0x58]
  40be44:	mov    rcx,QWORD PTR [rbp-0x50]
  40be48:	mov    rax,QWORD PTR [rbp-0x48]
  40be4c:	mov    rsi,rcx
  40be4f:	mov    rdi,rax
  40be52:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40be57:	mov    QWORD PTR [rbp-0x50],rax
  40be5b:	lea    rcx,[rbp-0x38]
  40be5f:	mov    rdx,QWORD PTR [rbp-0x58]
  40be63:	mov    rsi,QWORD PTR [rbp-0x50]
  40be67:	mov    rax,QWORD PTR [rbp-0x48]
  40be6b:	mov    rdi,rax
  40be6e:	call   403f93 <_start@@Base+0xc83>
  40be73:	mov    QWORD PTR [rbp-0x50],rax
  40be77:	mov    eax,DWORD PTR [rbp-0x38]
  40be7a:	test   eax,eax
  40be7c:	jne    40b363 <_start@@Base+0x8053>
  40be82:	mov    rax,QWORD PTR [rbp-0x48]
  40be86:	mov    eax,DWORD PTR [rax+0x20]
  40be89:	test   eax,eax
  40be8b:	jne    40bee4 <_start@@Base+0x8bd4>
  40be8d:	mov    rax,QWORD PTR [rbp-0x48]
  40be91:	mov    rax,QWORD PTR [rax]
  40be94:	mov    rdi,rax
  40be97:	call   41868f <flatcc_builder_end_table@@Base>
  40be9c:	mov    edx,eax
  40be9e:	mov    rax,QWORD PTR [rbp-0x60]
  40bea2:	mov    DWORD PTR [rax],edx
  40bea4:	mov    rax,QWORD PTR [rbp-0x60]
  40bea8:	mov    eax,DWORD PTR [rax]
  40beaa:	test   eax,eax
  40beac:	je     40bee7 <_start@@Base+0x8bd7>
  40beae:	mov    rax,QWORD PTR [rbp-0x50]
  40beb2:	jmp    40bf01 <_start@@Base+0x8bf1>
  40beb4:	nop
  40beb5:	jmp    40bee8 <_start@@Base+0x8bd8>
  40beb7:	nop
  40beb8:	jmp    40bee8 <_start@@Base+0x8bd8>
  40beba:	nop
  40bebb:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bebd:	nop
  40bebe:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bec0:	nop
  40bec1:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bec3:	nop
  40bec4:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bec6:	nop
  40bec7:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bec9:	nop
  40beca:	jmp    40bee8 <_start@@Base+0x8bd8>
  40becc:	nop
  40becd:	jmp    40bee8 <_start@@Base+0x8bd8>
  40becf:	nop
  40bed0:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bed2:	nop
  40bed3:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bed5:	nop
  40bed6:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bed8:	nop
  40bed9:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bedb:	nop
  40bedc:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bede:	nop
  40bedf:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bee1:	nop
  40bee2:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bee4:	nop
  40bee5:	jmp    40bee8 <_start@@Base+0x8bd8>
  40bee7:	nop
  40bee8:	mov    rdx,QWORD PTR [rbp-0x58]
  40beec:	mov    rsi,QWORD PTR [rbp-0x50]
  40bef0:	mov    rax,QWORD PTR [rbp-0x48]
  40bef4:	mov    ecx,0x21
  40bef9:	mov    rdi,rax
  40befc:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40bf01:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf05:	xor    rdi,QWORD PTR fs:0x28
  40bf0e:	je     40bf15 <_start@@Base+0x8c05>
  40bf10:	call   403200 <__stack_chk_fail@plt>
  40bf15:	leave  
  40bf16:	ret    
  40bf17:	endbr64 
  40bf1b:	push   rbp
  40bf1c:	mov    rbp,rsp
  40bf1f:	sub    rsp,0x50
  40bf23:	mov    QWORD PTR [rbp-0x38],rdi
  40bf27:	mov    QWORD PTR [rbp-0x40],rsi
  40bf2b:	mov    QWORD PTR [rbp-0x48],rdx
  40bf2f:	mov    QWORD PTR [rbp-0x50],rcx
  40bf33:	mov    rax,QWORD PTR fs:0x28
  40bf3c:	mov    QWORD PTR [rbp-0x8],rax
  40bf40:	xor    eax,eax
  40bf42:	mov    rax,QWORD PTR [rbp-0x50]
  40bf46:	mov    DWORD PTR [rax],0x0
  40bf4c:	mov    rax,QWORD PTR [rbp-0x38]
  40bf50:	mov    rax,QWORD PTR [rax]
  40bf53:	mov    esi,0x2
  40bf58:	mov    rdi,rax
  40bf5b:	call   417b80 <flatcc_builder_start_table@@Base>
  40bf60:	test   eax,eax
  40bf62:	jne    40c307 <_start@@Base+0x8ff7>
  40bf68:	lea    rcx,[rbp-0x2c]
  40bf6c:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf70:	mov    rsi,QWORD PTR [rbp-0x40]
  40bf74:	mov    rax,QWORD PTR [rbp-0x38]
  40bf78:	mov    rdi,rax
  40bf7b:	call   403ed6 <_start@@Base+0xbc6>
  40bf80:	mov    QWORD PTR [rbp-0x40],rax
  40bf84:	jmp    40c2ca <_start@@Base+0x8fba>
  40bf89:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf8d:	mov    rcx,QWORD PTR [rbp-0x40]
  40bf91:	mov    rax,QWORD PTR [rbp-0x38]
  40bf95:	mov    rsi,rcx
  40bf98:	mov    rdi,rax
  40bf9b:	call   403c48 <_start@@Base+0x938>
  40bfa0:	mov    QWORD PTR [rbp-0x40],rax
  40bfa4:	mov    rdx,QWORD PTR [rbp-0x48]
  40bfa8:	mov    rax,QWORD PTR [rbp-0x40]
  40bfac:	mov    rsi,rdx
  40bfaf:	mov    rdi,rax
  40bfb2:	call   403dd5 <_start@@Base+0xac5>
  40bfb7:	mov    QWORD PTR [rbp-0x20],rax
  40bfbb:	movabs rax,0x616161615f626262
  40bfc5:	cmp    QWORD PTR [rbp-0x20],rax
  40bfc9:	jne    40c293 <_start@@Base+0x8f83>
  40bfcf:	add    QWORD PTR [rbp-0x40],0x8
  40bfd4:	mov    rdx,QWORD PTR [rbp-0x48]
  40bfd8:	mov    rax,QWORD PTR [rbp-0x40]
  40bfdc:	mov    rsi,rdx
  40bfdf:	mov    rdi,rax
  40bfe2:	call   403dd5 <_start@@Base+0xac5>
  40bfe7:	mov    QWORD PTR [rbp-0x20],rax
  40bfeb:	mov    rax,QWORD PTR [rbp-0x20]
  40bfef:	mov    al,0x0
  40bff1:	mov    rdx,rax
  40bff4:	movabs rax,0x625f737465707300
  40bffe:	cmp    rdx,rax
  40c001:	jne    40c13a <_start@@Base+0x8e2a>
  40c007:	mov    rax,QWORD PTR [rbp-0x40]
  40c00b:	mov    QWORD PTR [rbp-0x18],rax
  40c00f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c013:	mov    rsi,QWORD PTR [rbp-0x18]
  40c017:	mov    rax,QWORD PTR [rbp-0x38]
  40c01b:	mov    ecx,0x7
  40c020:	mov    rdi,rax
  40c023:	call   4042cc <_start@@Base+0xfbc>
  40c028:	mov    QWORD PTR [rbp-0x40],rax
  40c02c:	mov    rax,QWORD PTR [rbp-0x18]
  40c030:	cmp    rax,QWORD PTR [rbp-0x40]
  40c034:	je     40c11a <_start@@Base+0x8e0a>
  40c03a:	mov    QWORD PTR [rbp-0x28],0x0
  40c042:	mov    rax,QWORD PTR [rbp-0x40]
  40c046:	mov    QWORD PTR [rbp-0x18],rax
  40c04a:	lea    rcx,[rbp-0x28]
  40c04e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c052:	mov    rsi,QWORD PTR [rbp-0x18]
  40c056:	mov    rax,QWORD PTR [rbp-0x38]
  40c05a:	mov    rdi,rax
  40c05d:	call   404cc8 <_start@@Base+0x19b8>
  40c062:	mov    QWORD PTR [rbp-0x40],rax
  40c066:	mov    rax,QWORD PTR [rbp-0x18]
  40c06a:	cmp    rax,QWORD PTR [rbp-0x40]
  40c06e:	jne    40c0ba <_start@@Base+0x8daa>
  40c070:	mov    rax,QWORD PTR [rbp-0x40]
  40c074:	mov    QWORD PTR [rbp-0x18],rax
  40c078:	lea    rcx,[rbp-0x28]
  40c07c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c080:	mov    rsi,QWORD PTR [rbp-0x18]
  40c084:	mov    rax,QWORD PTR [rbp-0x38]
  40c088:	mov    r8,rcx
  40c08b:	lea    rcx,[rip+0x1e3ee]        # 42a480 <filename@@Base+0x380>
  40c092:	mov    rdi,rax
  40c095:	call   405734 <_start@@Base+0x2424>
  40c09a:	mov    QWORD PTR [rbp-0x40],rax
  40c09e:	mov    rax,QWORD PTR [rbp-0x40]
  40c0a2:	cmp    rax,QWORD PTR [rbp-0x18]
  40c0a6:	je     40c30a <_start@@Base+0x8ffa>
  40c0ac:	mov    rax,QWORD PTR [rbp-0x40]
  40c0b0:	cmp    rax,QWORD PTR [rbp-0x48]
  40c0b4:	je     40c30a <_start@@Base+0x8ffa>
  40c0ba:	mov    rax,QWORD PTR [rbp-0x28]
  40c0be:	test   rax,rax
  40c0c1:	jne    40c0d5 <_start@@Base+0x8dc5>
  40c0c3:	mov    rax,QWORD PTR [rbp-0x38]
  40c0c7:	mov    eax,DWORD PTR [rax+0x10]
  40c0ca:	and    eax,0x2
  40c0cd:	test   eax,eax
  40c0cf:	je     40c2ae <_start@@Base+0x8f9e>
  40c0d5:	mov    rax,QWORD PTR [rbp-0x38]
  40c0d9:	mov    rax,QWORD PTR [rax]
  40c0dc:	mov    ecx,0x8
  40c0e1:	mov    edx,0x8
  40c0e6:	mov    esi,0x0
  40c0eb:	mov    rdi,rax
  40c0ee:	call   419d30 <flatcc_builder_table_add@@Base>
  40c0f3:	mov    QWORD PTR [rbp-0x10],rax
  40c0f7:	cmp    QWORD PTR [rbp-0x10],0x0
  40c0fc:	je     40c30d <_start@@Base+0x8ffd>
  40c102:	mov    rdx,QWORD PTR [rbp-0x28]
  40c106:	mov    rax,QWORD PTR [rbp-0x10]
  40c10a:	mov    rsi,rdx
  40c10d:	mov    rdi,rax
  40c110:	call   4035d0 <_start@@Base+0x2c0>
  40c115:	jmp    40c2ae <_start@@Base+0x8f9e>
  40c11a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c11e:	mov    rcx,QWORD PTR [rbp-0x40]
  40c122:	mov    rax,QWORD PTR [rbp-0x38]
  40c126:	mov    rsi,rcx
  40c129:	mov    rdi,rax
  40c12c:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c131:	mov    QWORD PTR [rbp-0x40],rax
  40c135:	jmp    40c2ae <_start@@Base+0x8f9e>
  40c13a:	movabs rax,0x625f73746172745f
  40c144:	cmp    QWORD PTR [rbp-0x20],rax
  40c148:	jne    40c276 <_start@@Base+0x8f66>
  40c14e:	mov    rax,QWORD PTR [rbp-0x40]
  40c152:	mov    QWORD PTR [rbp-0x18],rax
  40c156:	mov    rdx,QWORD PTR [rbp-0x48]
  40c15a:	mov    rsi,QWORD PTR [rbp-0x18]
  40c15e:	mov    rax,QWORD PTR [rbp-0x38]
  40c162:	mov    ecx,0x8
  40c167:	mov    rdi,rax
  40c16a:	call   4042cc <_start@@Base+0xfbc>
  40c16f:	mov    QWORD PTR [rbp-0x40],rax
  40c173:	mov    rax,QWORD PTR [rbp-0x18]
  40c177:	cmp    rax,QWORD PTR [rbp-0x40]
  40c17b:	je     40c259 <_start@@Base+0x8f49>
  40c181:	mov    DWORD PTR [rbp-0x28],0x0
  40c188:	mov    rax,QWORD PTR [rbp-0x40]
  40c18c:	mov    QWORD PTR [rbp-0x18],rax
  40c190:	lea    rcx,[rbp-0x28]
  40c194:	mov    rdx,QWORD PTR [rbp-0x48]
  40c198:	mov    rsi,QWORD PTR [rbp-0x18]
  40c19c:	mov    rax,QWORD PTR [rbp-0x38]
  40c1a0:	mov    rdi,rax
  40c1a3:	call   404a7a <_start@@Base+0x176a>
  40c1a8:	mov    QWORD PTR [rbp-0x40],rax
  40c1ac:	mov    rax,QWORD PTR [rbp-0x18]
  40c1b0:	cmp    rax,QWORD PTR [rbp-0x40]
  40c1b4:	jne    40c200 <_start@@Base+0x8ef0>
  40c1b6:	mov    rax,QWORD PTR [rbp-0x40]
  40c1ba:	mov    QWORD PTR [rbp-0x18],rax
  40c1be:	lea    rcx,[rbp-0x28]
  40c1c2:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1c6:	mov    rsi,QWORD PTR [rbp-0x18]
  40c1ca:	mov    rax,QWORD PTR [rbp-0x38]
  40c1ce:	mov    r8,rcx
  40c1d1:	lea    rcx,[rip+0x1e2c8]        # 42a4a0 <filename@@Base+0x3a0>
  40c1d8:	mov    rdi,rax
  40c1db:	call   405269 <_start@@Base+0x1f59>
  40c1e0:	mov    QWORD PTR [rbp-0x40],rax
  40c1e4:	mov    rax,QWORD PTR [rbp-0x40]
  40c1e8:	cmp    rax,QWORD PTR [rbp-0x18]
  40c1ec:	je     40c310 <_start@@Base+0x9000>
  40c1f2:	mov    rax,QWORD PTR [rbp-0x40]
  40c1f6:	cmp    rax,QWORD PTR [rbp-0x48]
  40c1fa:	je     40c310 <_start@@Base+0x9000>
  40c200:	mov    eax,DWORD PTR [rbp-0x28]
  40c203:	test   eax,eax
  40c205:	jne    40c219 <_start@@Base+0x8f09>
  40c207:	mov    rax,QWORD PTR [rbp-0x38]
  40c20b:	mov    eax,DWORD PTR [rax+0x10]
  40c20e:	and    eax,0x2
  40c211:	test   eax,eax
  40c213:	je     40c2ae <_start@@Base+0x8f9e>
  40c219:	mov    rax,QWORD PTR [rbp-0x38]
  40c21d:	mov    rax,QWORD PTR [rax]
  40c220:	mov    ecx,0x4
  40c225:	mov    edx,0x4
  40c22a:	mov    esi,0x1
  40c22f:	mov    rdi,rax
  40c232:	call   419d30 <flatcc_builder_table_add@@Base>
  40c237:	mov    QWORD PTR [rbp-0x10],rax
  40c23b:	cmp    QWORD PTR [rbp-0x10],0x0
  40c240:	je     40c313 <_start@@Base+0x9003>
  40c246:	mov    edx,DWORD PTR [rbp-0x28]
  40c249:	mov    rax,QWORD PTR [rbp-0x10]
  40c24d:	mov    esi,edx
  40c24f:	mov    rdi,rax
  40c252:	call   40346f <_start@@Base+0x15f>
  40c257:	jmp    40c2ae <_start@@Base+0x8f9e>
  40c259:	mov    rdx,QWORD PTR [rbp-0x48]
  40c25d:	mov    rcx,QWORD PTR [rbp-0x40]
  40c261:	mov    rax,QWORD PTR [rbp-0x38]
  40c265:	mov    rsi,rcx
  40c268:	mov    rdi,rax
  40c26b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c270:	mov    QWORD PTR [rbp-0x40],rax
  40c274:	jmp    40c2ae <_start@@Base+0x8f9e>
  40c276:	mov    rdx,QWORD PTR [rbp-0x48]
  40c27a:	mov    rcx,QWORD PTR [rbp-0x40]
  40c27e:	mov    rax,QWORD PTR [rbp-0x38]
  40c282:	mov    rsi,rcx
  40c285:	mov    rdi,rax
  40c288:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c28d:	mov    QWORD PTR [rbp-0x40],rax
  40c291:	jmp    40c2ae <_start@@Base+0x8f9e>
  40c293:	mov    rdx,QWORD PTR [rbp-0x48]
  40c297:	mov    rcx,QWORD PTR [rbp-0x40]
  40c29b:	mov    rax,QWORD PTR [rbp-0x38]
  40c29f:	mov    rsi,rcx
  40c2a2:	mov    rdi,rax
  40c2a5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c2aa:	mov    QWORD PTR [rbp-0x40],rax
  40c2ae:	lea    rcx,[rbp-0x2c]
  40c2b2:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2b6:	mov    rsi,QWORD PTR [rbp-0x40]
  40c2ba:	mov    rax,QWORD PTR [rbp-0x38]
  40c2be:	mov    rdi,rax
  40c2c1:	call   403f93 <_start@@Base+0xc83>
  40c2c6:	mov    QWORD PTR [rbp-0x40],rax
  40c2ca:	mov    eax,DWORD PTR [rbp-0x2c]
  40c2cd:	test   eax,eax
  40c2cf:	jne    40bf89 <_start@@Base+0x8c79>
  40c2d5:	mov    rax,QWORD PTR [rbp-0x38]
  40c2d9:	mov    eax,DWORD PTR [rax+0x20]
  40c2dc:	test   eax,eax
  40c2de:	jne    40c316 <_start@@Base+0x9006>
  40c2e0:	mov    rax,QWORD PTR [rbp-0x38]
  40c2e4:	mov    rax,QWORD PTR [rax]
  40c2e7:	mov    rdi,rax
  40c2ea:	call   41868f <flatcc_builder_end_table@@Base>
  40c2ef:	mov    edx,eax
  40c2f1:	mov    rax,QWORD PTR [rbp-0x50]
  40c2f5:	mov    DWORD PTR [rax],edx
  40c2f7:	mov    rax,QWORD PTR [rbp-0x50]
  40c2fb:	mov    eax,DWORD PTR [rax]
  40c2fd:	test   eax,eax
  40c2ff:	je     40c319 <_start@@Base+0x9009>
  40c301:	mov    rax,QWORD PTR [rbp-0x40]
  40c305:	jmp    40c333 <_start@@Base+0x9023>
  40c307:	nop
  40c308:	jmp    40c31a <_start@@Base+0x900a>
  40c30a:	nop
  40c30b:	jmp    40c31a <_start@@Base+0x900a>
  40c30d:	nop
  40c30e:	jmp    40c31a <_start@@Base+0x900a>
  40c310:	nop
  40c311:	jmp    40c31a <_start@@Base+0x900a>
  40c313:	nop
  40c314:	jmp    40c31a <_start@@Base+0x900a>
  40c316:	nop
  40c317:	jmp    40c31a <_start@@Base+0x900a>
  40c319:	nop
  40c31a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c31e:	mov    rsi,QWORD PTR [rbp-0x40]
  40c322:	mov    rax,QWORD PTR [rbp-0x38]
  40c326:	mov    ecx,0x21
  40c32b:	mov    rdi,rax
  40c32e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40c333:	mov    rdi,QWORD PTR [rbp-0x8]
  40c337:	xor    rdi,QWORD PTR fs:0x28
  40c340:	je     40c347 <_start@@Base+0x9037>
  40c342:	call   403200 <__stack_chk_fail@plt>
  40c347:	leave  
  40c348:	ret    
  40c349:	endbr64 
  40c34d:	push   rbp
  40c34e:	mov    rbp,rsp
  40c351:	sub    rsp,0x50
  40c355:	mov    QWORD PTR [rbp-0x38],rdi
  40c359:	mov    QWORD PTR [rbp-0x40],rsi
  40c35d:	mov    QWORD PTR [rbp-0x48],rdx
  40c361:	mov    QWORD PTR [rbp-0x50],rcx
  40c365:	mov    rax,QWORD PTR fs:0x28
  40c36e:	mov    QWORD PTR [rbp-0x8],rax
  40c372:	xor    eax,eax
  40c374:	mov    rax,QWORD PTR [rbp-0x50]
  40c378:	mov    DWORD PTR [rax],0x0
  40c37e:	mov    rax,QWORD PTR [rbp-0x38]
  40c382:	mov    rax,QWORD PTR [rax]
  40c385:	mov    esi,0x2
  40c38a:	mov    rdi,rax
  40c38d:	call   417b80 <flatcc_builder_start_table@@Base>
  40c392:	test   eax,eax
  40c394:	jne    40c795 <_start@@Base+0x9485>
  40c39a:	lea    rcx,[rbp-0x2c]
  40c39e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3a2:	mov    rsi,QWORD PTR [rbp-0x40]
  40c3a6:	mov    rax,QWORD PTR [rbp-0x38]
  40c3aa:	mov    rdi,rax
  40c3ad:	call   403ed6 <_start@@Base+0xbc6>
  40c3b2:	mov    QWORD PTR [rbp-0x40],rax
  40c3b6:	jmp    40c758 <_start@@Base+0x9448>
  40c3bb:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3bf:	mov    rcx,QWORD PTR [rbp-0x40]
  40c3c3:	mov    rax,QWORD PTR [rbp-0x38]
  40c3c7:	mov    rsi,rcx
  40c3ca:	mov    rdi,rax
  40c3cd:	call   403c48 <_start@@Base+0x938>
  40c3d2:	mov    QWORD PTR [rbp-0x40],rax
  40c3d6:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3da:	mov    rax,QWORD PTR [rbp-0x40]
  40c3de:	mov    rsi,rdx
  40c3e1:	mov    rdi,rax
  40c3e4:	call   403dd5 <_start@@Base+0xac5>
  40c3e9:	mov    QWORD PTR [rbp-0x20],rax
  40c3ed:	movabs rax,0x616161615f626262
  40c3f7:	cmp    QWORD PTR [rbp-0x20],rax
  40c3fb:	jne    40c721 <_start@@Base+0x9411>
  40c401:	add    QWORD PTR [rbp-0x40],0x8
  40c406:	mov    rdx,QWORD PTR [rbp-0x48]
  40c40a:	mov    rax,QWORD PTR [rbp-0x40]
  40c40e:	mov    rsi,rdx
  40c411:	mov    rdi,rax
  40c414:	call   403dd5 <_start@@Base+0xac5>
  40c419:	mov    QWORD PTR [rbp-0x20],rax
  40c41d:	movabs rax,0x625f73746172745f
  40c427:	cmp    QWORD PTR [rbp-0x20],rax
  40c42b:	jne    40c5bb <_start@@Base+0x92ab>
  40c431:	add    QWORD PTR [rbp-0x40],0x8
  40c436:	mov    rdx,QWORD PTR [rbp-0x48]
  40c43a:	mov    rax,QWORD PTR [rbp-0x40]
  40c43e:	mov    rsi,rdx
  40c441:	mov    rdi,rax
  40c444:	call   403dd5 <_start@@Base+0xac5>
  40c449:	mov    QWORD PTR [rbp-0x20],rax
  40c44d:	mov    rax,QWORD PTR [rbp-0x20]
  40c451:	and    rax,0xffffffffff000000
  40c457:	mov    rdx,rax
  40c45a:	movabs rax,0x7374657073000000
  40c464:	cmp    rdx,rax
  40c467:	jne    40c59b <_start@@Base+0x928b>
  40c46d:	mov    rax,QWORD PTR [rbp-0x40]
  40c471:	mov    QWORD PTR [rbp-0x18],rax
  40c475:	mov    rdx,QWORD PTR [rbp-0x48]
  40c479:	mov    rsi,QWORD PTR [rbp-0x18]
  40c47d:	mov    rax,QWORD PTR [rbp-0x38]
  40c481:	mov    ecx,0x5
  40c486:	mov    rdi,rax
  40c489:	call   4042cc <_start@@Base+0xfbc>
  40c48e:	mov    QWORD PTR [rbp-0x40],rax
  40c492:	mov    rax,QWORD PTR [rbp-0x18]
  40c496:	cmp    rax,QWORD PTR [rbp-0x40]
  40c49a:	je     40c57b <_start@@Base+0x926b>
  40c4a0:	mov    DWORD PTR [rbp-0x28],0x0
  40c4a7:	mov    rax,QWORD PTR [rbp-0x40]
  40c4ab:	mov    QWORD PTR [rbp-0x18],rax
  40c4af:	lea    rcx,[rbp-0x28]
  40c4b3:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4b7:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4bb:	mov    rax,QWORD PTR [rbp-0x38]
  40c4bf:	mov    rdi,rax
  40c4c2:	call   404a7a <_start@@Base+0x176a>
  40c4c7:	mov    QWORD PTR [rbp-0x40],rax
  40c4cb:	mov    rax,QWORD PTR [rbp-0x18]
  40c4cf:	cmp    rax,QWORD PTR [rbp-0x40]
  40c4d3:	jne    40c51f <_start@@Base+0x920f>
  40c4d5:	mov    rax,QWORD PTR [rbp-0x40]
  40c4d9:	mov    QWORD PTR [rbp-0x18],rax
  40c4dd:	lea    rcx,[rbp-0x28]
  40c4e1:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4e5:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4e9:	mov    rax,QWORD PTR [rbp-0x38]
  40c4ed:	mov    r8,rcx
  40c4f0:	lea    rcx,[rip+0x1dfc9]        # 42a4c0 <filename@@Base+0x3c0>
  40c4f7:	mov    rdi,rax
  40c4fa:	call   405269 <_start@@Base+0x1f59>
  40c4ff:	mov    QWORD PTR [rbp-0x40],rax
  40c503:	mov    rax,QWORD PTR [rbp-0x40]
  40c507:	cmp    rax,QWORD PTR [rbp-0x18]
  40c50b:	je     40c798 <_start@@Base+0x9488>
  40c511:	mov    rax,QWORD PTR [rbp-0x40]
  40c515:	cmp    rax,QWORD PTR [rbp-0x48]
  40c519:	je     40c798 <_start@@Base+0x9488>
  40c51f:	mov    eax,DWORD PTR [rbp-0x28]
  40c522:	test   eax,eax
  40c524:	jne    40c538 <_start@@Base+0x9228>
  40c526:	mov    rax,QWORD PTR [rbp-0x38]
  40c52a:	mov    eax,DWORD PTR [rax+0x10]
  40c52d:	and    eax,0x2
  40c530:	test   eax,eax
  40c532:	je     40c73c <_start@@Base+0x942c>
  40c538:	mov    rax,QWORD PTR [rbp-0x38]
  40c53c:	mov    rax,QWORD PTR [rax]
  40c53f:	mov    ecx,0x4
  40c544:	mov    edx,0x4
  40c549:	mov    esi,0x1
  40c54e:	mov    rdi,rax
  40c551:	call   419d30 <flatcc_builder_table_add@@Base>
  40c556:	mov    QWORD PTR [rbp-0x10],rax
  40c55a:	cmp    QWORD PTR [rbp-0x10],0x0
  40c55f:	je     40c79b <_start@@Base+0x948b>
  40c565:	mov    edx,DWORD PTR [rbp-0x28]
  40c568:	mov    rax,QWORD PTR [rbp-0x10]
  40c56c:	mov    esi,edx
  40c56e:	mov    rdi,rax
  40c571:	call   40346f <_start@@Base+0x15f>
  40c576:	jmp    40c73c <_start@@Base+0x942c>
  40c57b:	mov    rdx,QWORD PTR [rbp-0x48]
  40c57f:	mov    rcx,QWORD PTR [rbp-0x40]
  40c583:	mov    rax,QWORD PTR [rbp-0x38]
  40c587:	mov    rsi,rcx
  40c58a:	mov    rdi,rax
  40c58d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c592:	mov    QWORD PTR [rbp-0x40],rax
  40c596:	jmp    40c73c <_start@@Base+0x942c>
  40c59b:	mov    rdx,QWORD PTR [rbp-0x48]
  40c59f:	mov    rcx,QWORD PTR [rbp-0x40]
  40c5a3:	mov    rax,QWORD PTR [rbp-0x38]
  40c5a7:	mov    rsi,rcx
  40c5aa:	mov    rdi,rax
  40c5ad:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c5b2:	mov    QWORD PTR [rbp-0x40],rax
  40c5b6:	jmp    40c73c <_start@@Base+0x942c>
  40c5bb:	mov    rax,QWORD PTR [rbp-0x20]
  40c5bf:	mov    al,0x0
  40c5c1:	mov    rdx,rax
  40c5c4:	movabs rax,0x625f737465707300
  40c5ce:	cmp    rdx,rax
  40c5d1:	jne    40c704 <_start@@Base+0x93f4>
  40c5d7:	mov    rax,QWORD PTR [rbp-0x40]
  40c5db:	mov    QWORD PTR [rbp-0x18],rax
  40c5df:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5e3:	mov    rsi,QWORD PTR [rbp-0x18]
  40c5e7:	mov    rax,QWORD PTR [rbp-0x38]
  40c5eb:	mov    ecx,0x7
  40c5f0:	mov    rdi,rax
  40c5f3:	call   4042cc <_start@@Base+0xfbc>
  40c5f8:	mov    QWORD PTR [rbp-0x40],rax
  40c5fc:	mov    rax,QWORD PTR [rbp-0x18]
  40c600:	cmp    rax,QWORD PTR [rbp-0x40]
  40c604:	je     40c6e7 <_start@@Base+0x93d7>
  40c60a:	mov    QWORD PTR [rbp-0x28],0x0
  40c612:	mov    rax,QWORD PTR [rbp-0x40]
  40c616:	mov    QWORD PTR [rbp-0x18],rax
  40c61a:	lea    rcx,[rbp-0x28]
  40c61e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c622:	mov    rsi,QWORD PTR [rbp-0x18]
  40c626:	mov    rax,QWORD PTR [rbp-0x38]
  40c62a:	mov    rdi,rax
  40c62d:	call   404cc8 <_start@@Base+0x19b8>
  40c632:	mov    QWORD PTR [rbp-0x40],rax
  40c636:	mov    rax,QWORD PTR [rbp-0x18]
  40c63a:	cmp    rax,QWORD PTR [rbp-0x40]
  40c63e:	jne    40c68a <_start@@Base+0x937a>
  40c640:	mov    rax,QWORD PTR [rbp-0x40]
  40c644:	mov    QWORD PTR [rbp-0x18],rax
  40c648:	lea    rcx,[rbp-0x28]
  40c64c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c650:	mov    rsi,QWORD PTR [rbp-0x18]
  40c654:	mov    rax,QWORD PTR [rbp-0x38]
  40c658:	mov    r8,rcx
  40c65b:	lea    rcx,[rip+0x1de7e]        # 42a4e0 <filename@@Base+0x3e0>
  40c662:	mov    rdi,rax
  40c665:	call   405734 <_start@@Base+0x2424>
  40c66a:	mov    QWORD PTR [rbp-0x40],rax
  40c66e:	mov    rax,QWORD PTR [rbp-0x40]
  40c672:	cmp    rax,QWORD PTR [rbp-0x18]
  40c676:	je     40c79e <_start@@Base+0x948e>
  40c67c:	mov    rax,QWORD PTR [rbp-0x40]
  40c680:	cmp    rax,QWORD PTR [rbp-0x48]
  40c684:	je     40c79e <_start@@Base+0x948e>
  40c68a:	mov    rax,QWORD PTR [rbp-0x28]
  40c68e:	test   rax,rax
  40c691:	jne    40c6a5 <_start@@Base+0x9395>
  40c693:	mov    rax,QWORD PTR [rbp-0x38]
  40c697:	mov    eax,DWORD PTR [rax+0x10]
  40c69a:	and    eax,0x2
  40c69d:	test   eax,eax
  40c69f:	je     40c73c <_start@@Base+0x942c>
  40c6a5:	mov    rax,QWORD PTR [rbp-0x38]
  40c6a9:	mov    rax,QWORD PTR [rax]
  40c6ac:	mov    ecx,0x8
  40c6b1:	mov    edx,0x8
  40c6b6:	mov    esi,0x0
  40c6bb:	mov    rdi,rax
  40c6be:	call   419d30 <flatcc_builder_table_add@@Base>
  40c6c3:	mov    QWORD PTR [rbp-0x10],rax
  40c6c7:	cmp    QWORD PTR [rbp-0x10],0x0
  40c6cc:	je     40c7a1 <_start@@Base+0x9491>
  40c6d2:	mov    rdx,QWORD PTR [rbp-0x28]
  40c6d6:	mov    rax,QWORD PTR [rbp-0x10]
  40c6da:	mov    rsi,rdx
  40c6dd:	mov    rdi,rax
  40c6e0:	call   4035d0 <_start@@Base+0x2c0>
  40c6e5:	jmp    40c73c <_start@@Base+0x942c>
  40c6e7:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6eb:	mov    rcx,QWORD PTR [rbp-0x40]
  40c6ef:	mov    rax,QWORD PTR [rbp-0x38]
  40c6f3:	mov    rsi,rcx
  40c6f6:	mov    rdi,rax
  40c6f9:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c6fe:	mov    QWORD PTR [rbp-0x40],rax
  40c702:	jmp    40c73c <_start@@Base+0x942c>
  40c704:	mov    rdx,QWORD PTR [rbp-0x48]
  40c708:	mov    rcx,QWORD PTR [rbp-0x40]
  40c70c:	mov    rax,QWORD PTR [rbp-0x38]
  40c710:	mov    rsi,rcx
  40c713:	mov    rdi,rax
  40c716:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c71b:	mov    QWORD PTR [rbp-0x40],rax
  40c71f:	jmp    40c73c <_start@@Base+0x942c>
  40c721:	mov    rdx,QWORD PTR [rbp-0x48]
  40c725:	mov    rcx,QWORD PTR [rbp-0x40]
  40c729:	mov    rax,QWORD PTR [rbp-0x38]
  40c72d:	mov    rsi,rcx
  40c730:	mov    rdi,rax
  40c733:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c738:	mov    QWORD PTR [rbp-0x40],rax
  40c73c:	lea    rcx,[rbp-0x2c]
  40c740:	mov    rdx,QWORD PTR [rbp-0x48]
  40c744:	mov    rsi,QWORD PTR [rbp-0x40]
  40c748:	mov    rax,QWORD PTR [rbp-0x38]
  40c74c:	mov    rdi,rax
  40c74f:	call   403f93 <_start@@Base+0xc83>
  40c754:	mov    QWORD PTR [rbp-0x40],rax
  40c758:	mov    eax,DWORD PTR [rbp-0x2c]
  40c75b:	test   eax,eax
  40c75d:	jne    40c3bb <_start@@Base+0x90ab>
  40c763:	mov    rax,QWORD PTR [rbp-0x38]
  40c767:	mov    eax,DWORD PTR [rax+0x20]
  40c76a:	test   eax,eax
  40c76c:	jne    40c7a4 <_start@@Base+0x9494>
  40c76e:	mov    rax,QWORD PTR [rbp-0x38]
  40c772:	mov    rax,QWORD PTR [rax]
  40c775:	mov    rdi,rax
  40c778:	call   41868f <flatcc_builder_end_table@@Base>
  40c77d:	mov    edx,eax
  40c77f:	mov    rax,QWORD PTR [rbp-0x50]
  40c783:	mov    DWORD PTR [rax],edx
  40c785:	mov    rax,QWORD PTR [rbp-0x50]
  40c789:	mov    eax,DWORD PTR [rax]
  40c78b:	test   eax,eax
  40c78d:	je     40c7a7 <_start@@Base+0x9497>
  40c78f:	mov    rax,QWORD PTR [rbp-0x40]
  40c793:	jmp    40c7c1 <_start@@Base+0x94b1>
  40c795:	nop
  40c796:	jmp    40c7a8 <_start@@Base+0x9498>
  40c798:	nop
  40c799:	jmp    40c7a8 <_start@@Base+0x9498>
  40c79b:	nop
  40c79c:	jmp    40c7a8 <_start@@Base+0x9498>
  40c79e:	nop
  40c79f:	jmp    40c7a8 <_start@@Base+0x9498>
  40c7a1:	nop
  40c7a2:	jmp    40c7a8 <_start@@Base+0x9498>
  40c7a4:	nop
  40c7a5:	jmp    40c7a8 <_start@@Base+0x9498>
  40c7a7:	nop
  40c7a8:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7ac:	mov    rsi,QWORD PTR [rbp-0x40]
  40c7b0:	mov    rax,QWORD PTR [rbp-0x38]
  40c7b4:	mov    ecx,0x21
  40c7b9:	mov    rdi,rax
  40c7bc:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40c7c1:	mov    rdi,QWORD PTR [rbp-0x8]
  40c7c5:	xor    rdi,QWORD PTR fs:0x28
  40c7ce:	je     40c7d5 <_start@@Base+0x94c5>
  40c7d0:	call   403200 <__stack_chk_fail@plt>
  40c7d5:	leave  
  40c7d6:	ret    
  40c7d7:	endbr64 
  40c7db:	push   rbp
  40c7dc:	mov    rbp,rsp
  40c7df:	sub    rsp,0x50
  40c7e3:	mov    QWORD PTR [rbp-0x38],rdi
  40c7e7:	mov    QWORD PTR [rbp-0x40],rsi
  40c7eb:	mov    QWORD PTR [rbp-0x48],rdx
  40c7ef:	mov    QWORD PTR [rbp-0x50],rcx
  40c7f3:	mov    rax,QWORD PTR fs:0x28
  40c7fc:	mov    QWORD PTR [rbp-0x8],rax
  40c800:	xor    eax,eax
  40c802:	mov    rax,QWORD PTR [rbp-0x50]
  40c806:	mov    DWORD PTR [rax],0x0
  40c80c:	mov    rax,QWORD PTR [rbp-0x38]
  40c810:	mov    rax,QWORD PTR [rax]
  40c813:	mov    esi,0x3
  40c818:	mov    rdi,rax
  40c81b:	call   417b80 <flatcc_builder_start_table@@Base>
  40c820:	test   eax,eax
  40c822:	jne    40cb82 <_start@@Base+0x9872>
  40c828:	lea    rcx,[rbp-0x28]
  40c82c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c830:	mov    rsi,QWORD PTR [rbp-0x40]
  40c834:	mov    rax,QWORD PTR [rbp-0x38]
  40c838:	mov    rdi,rax
  40c83b:	call   403ed6 <_start@@Base+0xbc6>
  40c840:	mov    QWORD PTR [rbp-0x40],rax
  40c844:	jmp    40cb45 <_start@@Base+0x9835>
  40c849:	mov    rdx,QWORD PTR [rbp-0x48]
  40c84d:	mov    rcx,QWORD PTR [rbp-0x40]
  40c851:	mov    rax,QWORD PTR [rbp-0x38]
  40c855:	mov    rsi,rcx
  40c858:	mov    rdi,rax
  40c85b:	call   403c48 <_start@@Base+0x938>
  40c860:	mov    QWORD PTR [rbp-0x40],rax
  40c864:	mov    rdx,QWORD PTR [rbp-0x48]
  40c868:	mov    rax,QWORD PTR [rbp-0x40]
  40c86c:	mov    rsi,rdx
  40c86f:	mov    rdi,rax
  40c872:	call   403dd5 <_start@@Base+0xac5>
  40c877:	mov    QWORD PTR [rbp-0x20],rax
  40c87b:	movabs rax,0x6e6573746563ffff
  40c885:	cmp    QWORD PTR [rbp-0x20],rax
  40c889:	ja     40c980 <_start@@Base+0x9670>
  40c88f:	movabs rax,0xffffffff00000000
  40c899:	and    rax,QWORD PTR [rbp-0x20]
  40c89d:	mov    rdx,rax
  40c8a0:	movabs rax,0x6461746100000000
  40c8aa:	cmp    rdx,rax
  40c8ad:	jne    40c960 <_start@@Base+0x9650>
  40c8b3:	mov    rax,QWORD PTR [rbp-0x40]
  40c8b7:	mov    QWORD PTR [rbp-0x18],rax
  40c8bb:	mov    rdx,QWORD PTR [rbp-0x48]
  40c8bf:	mov    rsi,QWORD PTR [rbp-0x18]
  40c8c3:	mov    rax,QWORD PTR [rbp-0x38]
  40c8c7:	mov    ecx,0x4
  40c8cc:	mov    rdi,rax
  40c8cf:	call   4042cc <_start@@Base+0xfbc>
  40c8d4:	mov    QWORD PTR [rbp-0x40],rax
  40c8d8:	mov    rax,QWORD PTR [rbp-0x18]
  40c8dc:	cmp    rax,QWORD PTR [rbp-0x40]
  40c8e0:	je     40c940 <_start@@Base+0x9630>
  40c8e2:	lea    rcx,[rbp-0x24]
  40c8e6:	mov    rdx,QWORD PTR [rbp-0x48]
  40c8ea:	mov    rsi,QWORD PTR [rbp-0x40]
  40c8ee:	mov    rax,QWORD PTR [rbp-0x38]
  40c8f2:	mov    r8d,0x0
  40c8f8:	mov    rdi,rax
  40c8fb:	call   4208c2 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40c900:	mov    QWORD PTR [rbp-0x40],rax
  40c904:	mov    eax,DWORD PTR [rbp-0x24]
  40c907:	test   eax,eax
  40c909:	je     40cb85 <_start@@Base+0x9875>
  40c90f:	mov    rax,QWORD PTR [rbp-0x38]
  40c913:	mov    rax,QWORD PTR [rax]
  40c916:	mov    esi,0x0
  40c91b:	mov    rdi,rax
  40c91e:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40c923:	mov    QWORD PTR [rbp-0x10],rax
  40c927:	cmp    QWORD PTR [rbp-0x10],0x0
  40c92c:	je     40cb85 <_start@@Base+0x9875>
  40c932:	mov    edx,DWORD PTR [rbp-0x24]
  40c935:	mov    rax,QWORD PTR [rbp-0x10]
  40c939:	mov    DWORD PTR [rax],edx
  40c93b:	jmp    40cb29 <_start@@Base+0x9819>
  40c940:	mov    rdx,QWORD PTR [rbp-0x48]
  40c944:	mov    rcx,QWORD PTR [rbp-0x40]
  40c948:	mov    rax,QWORD PTR [rbp-0x38]
  40c94c:	mov    rsi,rcx
  40c94f:	mov    rdi,rax
  40c952:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c957:	mov    QWORD PTR [rbp-0x40],rax
  40c95b:	jmp    40cb29 <_start@@Base+0x9819>
  40c960:	mov    rdx,QWORD PTR [rbp-0x48]
  40c964:	mov    rcx,QWORD PTR [rbp-0x40]
  40c968:	mov    rax,QWORD PTR [rbp-0x38]
  40c96c:	mov    rsi,rcx
  40c96f:	mov    rdi,rax
  40c972:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40c977:	mov    QWORD PTR [rbp-0x40],rax
  40c97b:	jmp    40cb29 <_start@@Base+0x9819>
  40c980:	mov    rax,QWORD PTR [rbp-0x20]
  40c984:	mov    al,0x0
  40c986:	mov    rdx,rax
  40c989:	movabs rax,0x75726c6461746100
  40c993:	cmp    rdx,rax
  40c996:	jne    40ca49 <_start@@Base+0x9739>
  40c99c:	mov    rax,QWORD PTR [rbp-0x40]
  40c9a0:	mov    QWORD PTR [rbp-0x18],rax
  40c9a4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c9a8:	mov    rsi,QWORD PTR [rbp-0x18]
  40c9ac:	mov    rax,QWORD PTR [rbp-0x38]
  40c9b0:	mov    ecx,0x7
  40c9b5:	mov    rdi,rax
  40c9b8:	call   4042cc <_start@@Base+0xfbc>
  40c9bd:	mov    QWORD PTR [rbp-0x40],rax
  40c9c1:	mov    rax,QWORD PTR [rbp-0x18]
  40c9c5:	cmp    rax,QWORD PTR [rbp-0x40]
  40c9c9:	je     40ca29 <_start@@Base+0x9719>
  40c9cb:	lea    rcx,[rbp-0x24]
  40c9cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40c9d3:	mov    rsi,QWORD PTR [rbp-0x40]
  40c9d7:	mov    rax,QWORD PTR [rbp-0x38]
  40c9db:	mov    r8d,0x1
  40c9e1:	mov    rdi,rax
  40c9e4:	call   4208c2 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40c9e9:	mov    QWORD PTR [rbp-0x40],rax
  40c9ed:	mov    eax,DWORD PTR [rbp-0x24]
  40c9f0:	test   eax,eax
  40c9f2:	je     40cb88 <_start@@Base+0x9878>
  40c9f8:	mov    rax,QWORD PTR [rbp-0x38]
  40c9fc:	mov    rax,QWORD PTR [rax]
  40c9ff:	mov    esi,0x1
  40ca04:	mov    rdi,rax
  40ca07:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40ca0c:	mov    QWORD PTR [rbp-0x10],rax
  40ca10:	cmp    QWORD PTR [rbp-0x10],0x0
  40ca15:	je     40cb88 <_start@@Base+0x9878>
  40ca1b:	mov    edx,DWORD PTR [rbp-0x24]
  40ca1e:	mov    rax,QWORD PTR [rbp-0x10]
  40ca22:	mov    DWORD PTR [rax],edx
  40ca24:	jmp    40cb29 <_start@@Base+0x9819>
  40ca29:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca2d:	mov    rcx,QWORD PTR [rbp-0x40]
  40ca31:	mov    rax,QWORD PTR [rbp-0x38]
  40ca35:	mov    rsi,rcx
  40ca38:	mov    rdi,rax
  40ca3b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ca40:	mov    QWORD PTR [rbp-0x40],rax
  40ca44:	jmp    40cb29 <_start@@Base+0x9819>
  40ca49:	mov    rax,QWORD PTR [rbp-0x20]
  40ca4d:	mov    ax,0x0
  40ca51:	mov    rdx,rax
  40ca54:	movabs rax,0x6e65737465640000
  40ca5e:	cmp    rdx,rax
  40ca61:	jne    40cb0e <_start@@Base+0x97fe>
  40ca67:	mov    rax,QWORD PTR [rbp-0x40]
  40ca6b:	mov    QWORD PTR [rbp-0x18],rax
  40ca6f:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca73:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca77:	mov    rax,QWORD PTR [rbp-0x38]
  40ca7b:	mov    ecx,0x6
  40ca80:	mov    rdi,rax
  40ca83:	call   4042cc <_start@@Base+0xfbc>
  40ca88:	mov    QWORD PTR [rbp-0x40],rax
  40ca8c:	mov    rax,QWORD PTR [rbp-0x18]
  40ca90:	cmp    rax,QWORD PTR [rbp-0x40]
  40ca94:	je     40caf1 <_start@@Base+0x97e1>
  40ca96:	lea    rcx,[rbp-0x24]
  40ca9a:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca9e:	mov    rsi,QWORD PTR [rbp-0x40]
  40caa2:	mov    rax,QWORD PTR [rbp-0x38]
  40caa6:	mov    r8d,0x0
  40caac:	mov    rdi,rax
  40caaf:	call   4208c2 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40cab4:	mov    QWORD PTR [rbp-0x40],rax
  40cab8:	mov    eax,DWORD PTR [rbp-0x24]
  40cabb:	test   eax,eax
  40cabd:	je     40cb8b <_start@@Base+0x987b>
  40cac3:	mov    rax,QWORD PTR [rbp-0x38]
  40cac7:	mov    rax,QWORD PTR [rax]
  40caca:	mov    esi,0x2
  40cacf:	mov    rdi,rax
  40cad2:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40cad7:	mov    QWORD PTR [rbp-0x10],rax
  40cadb:	cmp    QWORD PTR [rbp-0x10],0x0
  40cae0:	je     40cb8b <_start@@Base+0x987b>
  40cae6:	mov    edx,DWORD PTR [rbp-0x24]
  40cae9:	mov    rax,QWORD PTR [rbp-0x10]
  40caed:	mov    DWORD PTR [rax],edx
  40caef:	jmp    40cb29 <_start@@Base+0x9819>
  40caf1:	mov    rdx,QWORD PTR [rbp-0x48]
  40caf5:	mov    rcx,QWORD PTR [rbp-0x40]
  40caf9:	mov    rax,QWORD PTR [rbp-0x38]
  40cafd:	mov    rsi,rcx
  40cb00:	mov    rdi,rax
  40cb03:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40cb08:	mov    QWORD PTR [rbp-0x40],rax
  40cb0c:	jmp    40cb29 <_start@@Base+0x9819>
  40cb0e:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb12:	mov    rcx,QWORD PTR [rbp-0x40]
  40cb16:	mov    rax,QWORD PTR [rbp-0x38]
  40cb1a:	mov    rsi,rcx
  40cb1d:	mov    rdi,rax
  40cb20:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40cb25:	mov    QWORD PTR [rbp-0x40],rax
  40cb29:	lea    rcx,[rbp-0x28]
  40cb2d:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb31:	mov    rsi,QWORD PTR [rbp-0x40]
  40cb35:	mov    rax,QWORD PTR [rbp-0x38]
  40cb39:	mov    rdi,rax
  40cb3c:	call   403f93 <_start@@Base+0xc83>
  40cb41:	mov    QWORD PTR [rbp-0x40],rax
  40cb45:	mov    eax,DWORD PTR [rbp-0x28]
  40cb48:	test   eax,eax
  40cb4a:	jne    40c849 <_start@@Base+0x9539>
  40cb50:	mov    rax,QWORD PTR [rbp-0x38]
  40cb54:	mov    eax,DWORD PTR [rax+0x20]
  40cb57:	test   eax,eax
  40cb59:	jne    40cb8e <_start@@Base+0x987e>
  40cb5b:	mov    rax,QWORD PTR [rbp-0x38]
  40cb5f:	mov    rax,QWORD PTR [rax]
  40cb62:	mov    rdi,rax
  40cb65:	call   41868f <flatcc_builder_end_table@@Base>
  40cb6a:	mov    edx,eax
  40cb6c:	mov    rax,QWORD PTR [rbp-0x50]
  40cb70:	mov    DWORD PTR [rax],edx
  40cb72:	mov    rax,QWORD PTR [rbp-0x50]
  40cb76:	mov    eax,DWORD PTR [rax]
  40cb78:	test   eax,eax
  40cb7a:	je     40cb91 <_start@@Base+0x9881>
  40cb7c:	mov    rax,QWORD PTR [rbp-0x40]
  40cb80:	jmp    40cbab <_start@@Base+0x989b>
  40cb82:	nop
  40cb83:	jmp    40cb92 <_start@@Base+0x9882>
  40cb85:	nop
  40cb86:	jmp    40cb92 <_start@@Base+0x9882>
  40cb88:	nop
  40cb89:	jmp    40cb92 <_start@@Base+0x9882>
  40cb8b:	nop
  40cb8c:	jmp    40cb92 <_start@@Base+0x9882>
  40cb8e:	nop
  40cb8f:	jmp    40cb92 <_start@@Base+0x9882>
  40cb91:	nop
  40cb92:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb96:	mov    rsi,QWORD PTR [rbp-0x40]
  40cb9a:	mov    rax,QWORD PTR [rbp-0x38]
  40cb9e:	mov    ecx,0x21
  40cba3:	mov    rdi,rax
  40cba6:	call   41f09d <flatcc_json_parser_set_error@@Base>
  40cbab:	mov    rdi,QWORD PTR [rbp-0x8]
  40cbaf:	xor    rdi,QWORD PTR fs:0x28
  40cbb8:	je     40cbbf <_start@@Base+0x98af>
  40cbba:	call   403200 <__stack_chk_fail@plt>
  40cbbf:	leave  
  40cbc0:	ret    
  40cbc1:	endbr64 
  40cbc5:	push   rbp
  40cbc6:	mov    rbp,rsp
  40cbc9:	sub    rsp,0x60
  40cbcd:	mov    QWORD PTR [rbp-0x48],rdi
  40cbd1:	mov    QWORD PTR [rbp-0x50],rsi
  40cbd5:	mov    QWORD PTR [rbp-0x58],rdx
  40cbd9:	mov    QWORD PTR [rbp-0x60],rcx
  40cbdd:	mov    rax,QWORD PTR fs:0x28
  40cbe6:	mov    QWORD PTR [rbp-0x8],rax
  40cbea:	xor    eax,eax
  40cbec:	mov    rax,QWORD PTR [rbp-0x60]
  40cbf0:	mov    DWORD PTR [rax],0x0
  40cbf6:	mov    rax,QWORD PTR [rbp-0x48]
  40cbfa:	mov    rax,QWORD PTR [rax]
  40cbfd:	mov    esi,0x24
  40cc02:	mov    rdi,rax
  40cc05:	call   417b80 <flatcc_builder_start_table@@Base>
  40cc0a:	test   eax,eax
  40cc0c:	jne    410363 <_start@@Base+0xd053>
  40cc12:	lea    rcx,[rbp-0x38]
  40cc16:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc1a:	mov    rsi,QWORD PTR [rbp-0x50]
  40cc1e:	mov    rax,QWORD PTR [rbp-0x48]
  40cc22:	mov    r8,rcx
  40cc25:	mov    ecx,0x1
  40cc2a:	mov    rdi,rax
  40cc2d:	call   420d06 <flatcc_json_parser_prepare_unions@@Base>
  40cc32:	cmp    QWORD PTR [rbp-0x58],rax
  40cc36:	je     410369 <_start@@Base+0xd059>
  40cc3c:	lea    rcx,[rbp-0x40]
  40cc40:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc44:	mov    rsi,QWORD PTR [rbp-0x50]
  40cc48:	mov    rax,QWORD PTR [rbp-0x48]
  40cc4c:	mov    rdi,rax
  40cc4f:	call   403ed6 <_start@@Base+0xbc6>
  40cc54:	mov    QWORD PTR [rbp-0x50],rax
  40cc58:	jmp    4102c5 <_start@@Base+0xcfb5>
  40cc5d:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc61:	mov    rcx,QWORD PTR [rbp-0x50]
  40cc65:	mov    rax,QWORD PTR [rbp-0x48]
  40cc69:	mov    rsi,rcx
  40cc6c:	mov    rdi,rax
  40cc6f:	call   403c48 <_start@@Base+0x938>
  40cc74:	mov    QWORD PTR [rbp-0x50],rax
  40cc78:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc7c:	mov    rax,QWORD PTR [rbp-0x50]
  40cc80:	mov    rsi,rdx
  40cc83:	mov    rdi,rax
  40cc86:	call   403dd5 <_start@@Base+0xac5>
  40cc8b:	mov    QWORD PTR [rbp-0x28],rax
  40cc8f:	movabs rax,0x7465737461727260
  40cc99:	cmp    QWORD PTR [rbp-0x28],rax
  40cc9d:	ja     40de08 <_start@@Base+0xaaf8>
  40cca3:	movabs rax,0x6e616d64ffffffff
  40ccad:	cmp    QWORD PTR [rbp-0x28],rax
  40ccb1:	ja     40d658 <_start@@Base+0xa348>
  40ccb7:	movabs rax,0x666c6577ffffffff
  40ccc1:	cmp    QWORD PTR [rbp-0x28],rax
  40ccc5:	ja     40cf02 <_start@@Base+0x9bf2>
  40cccb:	mov    rax,QWORD PTR [rbp-0x28]
  40cccf:	and    rax,0xffffffffff000000
  40ccd5:	mov    rdx,rax
  40ccd8:	movabs rax,0x656e656d79000000
  40cce2:	cmp    rdx,rax
  40cce5:	jne    40cd92 <_start@@Base+0x9a82>
  40cceb:	mov    rax,QWORD PTR [rbp-0x50]
  40ccef:	mov    QWORD PTR [rbp-0x20],rax
  40ccf3:	mov    rdx,QWORD PTR [rbp-0x58]
  40ccf7:	mov    rsi,QWORD PTR [rbp-0x20]
  40ccfb:	mov    rax,QWORD PTR [rbp-0x48]
  40ccff:	mov    ecx,0x5
  40cd04:	mov    rdi,rax
  40cd07:	call   4042cc <_start@@Base+0xfbc>
  40cd0c:	mov    QWORD PTR [rbp-0x50],rax
  40cd10:	mov    rax,QWORD PTR [rbp-0x20]
  40cd14:	cmp    rax,QWORD PTR [rbp-0x50]
  40cd18:	je     40cd72 <_start@@Base+0x9a62>
  40cd1a:	lea    rcx,[rbp-0x3c]
  40cd1e:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd22:	mov    rsi,QWORD PTR [rbp-0x50]
  40cd26:	mov    rax,QWORD PTR [rbp-0x48]
  40cd2a:	mov    rdi,rax
  40cd2d:	call   40cbc1 <_start@@Base+0x98b1>
  40cd32:	mov    QWORD PTR [rbp-0x50],rax
  40cd36:	mov    eax,DWORD PTR [rbp-0x3c]
  40cd39:	test   eax,eax
  40cd3b:	je     41036f <_start@@Base+0xd05f>
  40cd41:	mov    rax,QWORD PTR [rbp-0x48]
  40cd45:	mov    rax,QWORD PTR [rax]
  40cd48:	mov    esi,0xc
  40cd4d:	mov    rdi,rax
  40cd50:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40cd55:	mov    QWORD PTR [rbp-0x18],rax
  40cd59:	cmp    QWORD PTR [rbp-0x18],0x0
  40cd5e:	je     41036f <_start@@Base+0xd05f>
  40cd64:	mov    edx,DWORD PTR [rbp-0x3c]
  40cd67:	mov    rax,QWORD PTR [rbp-0x18]
  40cd6b:	mov    DWORD PTR [rax],edx
  40cd6d:	jmp    4102a9 <_start@@Base+0xcf99>
  40cd72:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd76:	mov    rcx,QWORD PTR [rbp-0x50]
  40cd7a:	mov    rax,QWORD PTR [rbp-0x48]
  40cd7e:	mov    rsi,rcx
  40cd81:	mov    rdi,rax
  40cd84:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40cd89:	mov    QWORD PTR [rbp-0x50],rax
  40cd8d:	jmp    4102a9 <_start@@Base+0xcf99>
  40cd92:	mov    rax,QWORD PTR [rbp-0x28]
  40cd96:	and    rax,0xffffffffff000000
  40cd9c:	mov    rdx,rax
  40cd9f:	movabs rax,0x636f6c6f72000000
  40cda9:	cmp    rdx,rax
  40cdac:	jne    40cee2 <_start@@Base+0x9bd2>
  40cdb2:	mov    rax,QWORD PTR [rbp-0x50]
  40cdb6:	mov    QWORD PTR [rbp-0x20],rax
  40cdba:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdbe:	mov    rsi,QWORD PTR [rbp-0x20]
  40cdc2:	mov    rax,QWORD PTR [rbp-0x48]
  40cdc6:	mov    ecx,0x5
  40cdcb:	mov    rdi,rax
  40cdce:	call   4042cc <_start@@Base+0xfbc>
  40cdd3:	mov    QWORD PTR [rbp-0x50],rax
  40cdd7:	mov    rax,QWORD PTR [rbp-0x20]
  40cddb:	cmp    rax,QWORD PTR [rbp-0x50]
  40cddf:	je     40cec2 <_start@@Base+0x9bb2>
  40cde5:	mov    BYTE PTR [rbp-0x30],0x0
  40cde9:	mov    rax,QWORD PTR [rbp-0x50]
  40cded:	mov    QWORD PTR [rbp-0x20],rax
  40cdf1:	lea    rcx,[rbp-0x30]
  40cdf5:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdf9:	mov    rsi,QWORD PTR [rbp-0x20]
  40cdfd:	mov    rax,QWORD PTR [rbp-0x48]
  40ce01:	mov    rdi,rax
  40ce04:	call   404f1a <_start@@Base+0x1c0a>
  40ce09:	mov    QWORD PTR [rbp-0x50],rax
  40ce0d:	mov    rax,QWORD PTR [rbp-0x20]
  40ce11:	cmp    rax,QWORD PTR [rbp-0x50]
  40ce15:	jne    40ce61 <_start@@Base+0x9b51>
  40ce17:	mov    rax,QWORD PTR [rbp-0x50]
  40ce1b:	mov    QWORD PTR [rbp-0x20],rax
  40ce1f:	lea    rcx,[rbp-0x30]
  40ce23:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce27:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce2b:	mov    rax,QWORD PTR [rbp-0x48]
  40ce2f:	mov    r8,rcx
  40ce32:	lea    rcx,[rip+0x1d6c7]        # 42a500 <filename@@Base+0x400>
  40ce39:	mov    rdi,rax
  40ce3c:	call   405c0d <_start@@Base+0x28fd>
  40ce41:	mov    QWORD PTR [rbp-0x50],rax
  40ce45:	mov    rax,QWORD PTR [rbp-0x50]
  40ce49:	cmp    rax,QWORD PTR [rbp-0x20]
  40ce4d:	je     410375 <_start@@Base+0xd065>
  40ce53:	mov    rax,QWORD PTR [rbp-0x50]
  40ce57:	cmp    rax,QWORD PTR [rbp-0x58]
  40ce5b:	je     410375 <_start@@Base+0xd065>
  40ce61:	movzx  eax,BYTE PTR [rbp-0x30]
  40ce65:	cmp    al,0x8
  40ce67:	jne    40ce7b <_start@@Base+0x9b6b>
  40ce69:	mov    rax,QWORD PTR [rbp-0x48]
  40ce6d:	mov    eax,DWORD PTR [rax+0x10]
  40ce70:	and    eax,0x2
  40ce73:	test   eax,eax
  40ce75:	je     4102a9 <_start@@Base+0xcf99>
  40ce7b:	mov    rax,QWORD PTR [rbp-0x48]
  40ce7f:	mov    rax,QWORD PTR [rax]
  40ce82:	mov    ecx,0x1
  40ce87:	mov    edx,0x1
  40ce8c:	mov    esi,0x6
  40ce91:	mov    rdi,rax
  40ce94:	call   419d30 <flatcc_builder_table_add@@Base>
  40ce99:	mov    QWORD PTR [rbp-0x10],rax
  40ce9d:	cmp    QWORD PTR [rbp-0x10],0x0
  40cea2:	je     41037b <_start@@Base+0xd06b>
  40cea8:	movzx  eax,BYTE PTR [rbp-0x30]
  40ceac:	movsx  edx,al
  40ceaf:	mov    rax,QWORD PTR [rbp-0x10]
  40ceb3:	mov    esi,edx
  40ceb5:	mov    rdi,rax
  40ceb8:	call   403507 <_start@@Base+0x1f7>
  40cebd:	jmp    4102a9 <_start@@Base+0xcf99>
  40cec2:	mov    rdx,QWORD PTR [rbp-0x58]
  40cec6:	mov    rcx,QWORD PTR [rbp-0x50]
  40ceca:	mov    rax,QWORD PTR [rbp-0x48]
  40cece:	mov    rsi,rcx
  40ced1:	mov    rdi,rax
  40ced4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ced9:	mov    QWORD PTR [rbp-0x50],rax
  40cedd:	jmp    4102a9 <_start@@Base+0xcf99>
  40cee2:	mov    rdx,QWORD PTR [rbp-0x58]
  40cee6:	mov    rcx,QWORD PTR [rbp-0x50]
  40ceea:	mov    rax,QWORD PTR [rbp-0x48]
  40ceee:	mov    rsi,rcx
  40cef1:	mov    rdi,rax
  40cef4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40cef9:	mov    QWORD PTR [rbp-0x50],rax
  40cefd:	jmp    4102a9 <_start@@Base+0xcf99>
  40cf02:	movabs rax,0x686fffffffffffff
  40cf0c:	cmp    QWORD PTR [rbp-0x28],rax
  40cf10:	ja     40d11d <_start@@Base+0x9e0d>
  40cf16:	movabs rax,0xffffffff00000000
  40cf20:	and    rax,QWORD PTR [rbp-0x28]
  40cf24:	mov    rdx,rax
  40cf27:	movabs rax,0x666c657800000000
  40cf31:	cmp    rdx,rax
  40cf34:	jne    40d0fd <_start@@Base+0x9ded>
  40cf3a:	mov    rax,QWORD PTR [rbp-0x50]
  40cf3e:	mov    QWORD PTR [rbp-0x20],rax
  40cf42:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf46:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf4a:	mov    rax,QWORD PTR [rbp-0x48]
  40cf4e:	mov    ecx,0x4
  40cf53:	mov    rdi,rax
  40cf56:	call   4042cc <_start@@Base+0xfbc>
  40cf5b:	mov    QWORD PTR [rbp-0x50],rax
  40cf5f:	mov    rax,QWORD PTR [rbp-0x20]
  40cf63:	cmp    rax,QWORD PTR [rbp-0x50]
  40cf67:	je     40d0dd <_start@@Base+0x9dcd>
  40cf6d:	mov    rax,QWORD PTR [rbp-0x48]
  40cf71:	mov    rax,QWORD PTR [rax]
  40cf74:	mov    ecx,0xffffffff
  40cf79:	mov    edx,0x1
  40cf7e:	mov    esi,0x1
  40cf83:	mov    rdi,rax
  40cf86:	call   417932 <flatcc_builder_start_vector@@Base>
  40cf8b:	test   eax,eax
  40cf8d:	jne    410381 <_start@@Base+0xd071>
  40cf93:	lea    rcx,[rbp-0x40]
  40cf97:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf9b:	mov    rsi,QWORD PTR [rbp-0x50]
  40cf9f:	mov    rax,QWORD PTR [rbp-0x48]
  40cfa3:	mov    rdi,rax
  40cfa6:	call   4040d1 <_start@@Base+0xdc1>
  40cfab:	mov    QWORD PTR [rbp-0x50],rax
  40cfaf:	jmp    40d084 <_start@@Base+0x9d74>
  40cfb4:	mov    BYTE PTR [rbp-0x30],0x0
  40cfb8:	mov    rax,QWORD PTR [rbp-0x48]
  40cfbc:	mov    rax,QWORD PTR [rax]
  40cfbf:	mov    esi,0x1
  40cfc4:	mov    rdi,rax
  40cfc7:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40cfcc:	mov    QWORD PTR [rbp-0x10],rax
  40cfd0:	cmp    QWORD PTR [rbp-0x10],0x0
  40cfd5:	je     410387 <_start@@Base+0xd077>
  40cfdb:	mov    rax,QWORD PTR [rbp-0x50]
  40cfdf:	mov    QWORD PTR [rbp-0x20],rax
  40cfe3:	lea    rcx,[rbp-0x30]
  40cfe7:	mov    rdx,QWORD PTR [rbp-0x58]
  40cfeb:	mov    rsi,QWORD PTR [rbp-0x20]
  40cfef:	mov    rax,QWORD PTR [rbp-0x48]
  40cff3:	mov    rdi,rax
  40cff6:	call   404c05 <_start@@Base+0x18f5>
  40cffb:	mov    QWORD PTR [rbp-0x50],rax
  40cfff:	mov    rax,QWORD PTR [rbp-0x20]
  40d003:	cmp    rax,QWORD PTR [rbp-0x50]
  40d007:	jne    40d053 <_start@@Base+0x9d43>
  40d009:	mov    rax,QWORD PTR [rbp-0x50]
  40d00d:	mov    QWORD PTR [rbp-0x20],rax
  40d011:	lea    rcx,[rbp-0x30]
  40d015:	mov    rdx,QWORD PTR [rbp-0x58]
  40d019:	mov    rsi,QWORD PTR [rbp-0x20]
  40d01d:	mov    rax,QWORD PTR [rbp-0x48]
  40d021:	mov    r8,rcx
  40d024:	lea    rcx,[rip+0x1d4f5]        # 42a520 <filename@@Base+0x420>
  40d02b:	mov    rdi,rax
  40d02e:	call   40559e <_start@@Base+0x228e>
  40d033:	mov    QWORD PTR [rbp-0x50],rax
  40d037:	mov    rax,QWORD PTR [rbp-0x50]
  40d03b:	cmp    rax,QWORD PTR [rbp-0x20]
  40d03f:	je     41038d <_start@@Base+0xd07d>
  40d045:	mov    rax,QWORD PTR [rbp-0x50]
  40d049:	cmp    rax,QWORD PTR [rbp-0x58]
  40d04d:	je     41038d <_start@@Base+0xd07d>
  40d053:	movzx  eax,BYTE PTR [rbp-0x30]
  40d057:	movzx  edx,al
  40d05a:	mov    rax,QWORD PTR [rbp-0x10]
  40d05e:	mov    esi,edx
  40d060:	mov    rdi,rax
  40d063:	call   403405 <_start@@Base+0xf5>
  40d068:	lea    rcx,[rbp-0x40]
  40d06c:	mov    rdx,QWORD PTR [rbp-0x58]
  40d070:	mov    rsi,QWORD PTR [rbp-0x50]
  40d074:	mov    rax,QWORD PTR [rbp-0x48]
  40d078:	mov    rdi,rax
  40d07b:	call   40418e <_start@@Base+0xe7e>
  40d080:	mov    QWORD PTR [rbp-0x50],rax
  40d084:	mov    eax,DWORD PTR [rbp-0x40]
  40d087:	test   eax,eax
  40d089:	jne    40cfb4 <_start@@Base+0x9ca4>
  40d08f:	mov    rax,QWORD PTR [rbp-0x48]
  40d093:	mov    rax,QWORD PTR [rax]
  40d096:	mov    rdi,rax
  40d099:	call   418b27 <flatcc_builder_end_vector@@Base>
  40d09e:	mov    DWORD PTR [rbp-0x3c],eax
  40d0a1:	mov    eax,DWORD PTR [rbp-0x3c]
  40d0a4:	test   eax,eax
  40d0a6:	je     410393 <_start@@Base+0xd083>
  40d0ac:	mov    rax,QWORD PTR [rbp-0x48]
  40d0b0:	mov    rax,QWORD PTR [rax]
  40d0b3:	mov    esi,0x1e
  40d0b8:	mov    rdi,rax
  40d0bb:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40d0c0:	mov    QWORD PTR [rbp-0x18],rax
  40d0c4:	cmp    QWORD PTR [rbp-0x18],0x0
  40d0c9:	je     410393 <_start@@Base+0xd083>
  40d0cf:	mov    edx,DWORD PTR [rbp-0x3c]
  40d0d2:	mov    rax,QWORD PTR [rbp-0x18]
  40d0d6:	mov    DWORD PTR [rax],edx
  40d0d8:	jmp    4102a9 <_start@@Base+0xcf99>
  40d0dd:	mov    rdx,QWORD PTR [rbp-0x58]
  40d0e1:	mov    rcx,QWORD PTR [rbp-0x50]
  40d0e5:	mov    rax,QWORD PTR [rbp-0x48]
  40d0e9:	mov    rsi,rcx
  40d0ec:	mov    rdi,rax
  40d0ef:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d0f4:	mov    QWORD PTR [rbp-0x50],rax
  40d0f8:	jmp    4102a9 <_start@@Base+0xcf99>
  40d0fd:	mov    rdx,QWORD PTR [rbp-0x58]
  40d101:	mov    rcx,QWORD PTR [rbp-0x50]
  40d105:	mov    rax,QWORD PTR [rbp-0x48]
  40d109:	mov    rsi,rcx
  40d10c:	mov    rdi,rax
  40d10f:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d114:	mov    QWORD PTR [rbp-0x50],rax
  40d118:	jmp    4102a9 <_start@@Base+0xcf99>
  40d11d:	movabs rax,0x696e76656e746f71
  40d127:	cmp    QWORD PTR [rbp-0x28],rax
  40d12b:	ja     40d2a9 <_start@@Base+0x9f99>
  40d131:	movabs rax,0xffff000000000000
  40d13b:	and    rax,QWORD PTR [rbp-0x28]
  40d13f:	mov    rdx,rax
  40d142:	movabs rax,0x6870000000000000
  40d14c:	cmp    rdx,rax
  40d14f:	jne    40d289 <_start@@Base+0x9f79>
  40d155:	mov    rax,QWORD PTR [rbp-0x50]
  40d159:	mov    QWORD PTR [rbp-0x20],rax
  40d15d:	mov    rdx,QWORD PTR [rbp-0x58]
  40d161:	mov    rsi,QWORD PTR [rbp-0x20]
  40d165:	mov    rax,QWORD PTR [rbp-0x48]
  40d169:	mov    ecx,0x2
  40d16e:	mov    rdi,rax
  40d171:	call   4042cc <_start@@Base+0xfbc>
  40d176:	mov    QWORD PTR [rbp-0x50],rax
  40d17a:	mov    rax,QWORD PTR [rbp-0x20]
  40d17e:	cmp    rax,QWORD PTR [rbp-0x50]
  40d182:	je     40d269 <_start@@Base+0x9f59>
  40d188:	mov    WORD PTR [rbp-0x30],0x0
  40d18e:	mov    rax,QWORD PTR [rbp-0x50]
  40d192:	mov    QWORD PTR [rbp-0x20],rax
  40d196:	lea    rcx,[rbp-0x30]
  40d19a:	mov    rdx,QWORD PTR [rbp-0x58]
  40d19e:	mov    rsi,QWORD PTR [rbp-0x20]
  40d1a2:	mov    rax,QWORD PTR [rbp-0x48]
  40d1a6:	mov    rdi,rax
  40d1a9:	call   404e55 <_start@@Base+0x1b45>
  40d1ae:	mov    QWORD PTR [rbp-0x50],rax
  40d1b2:	mov    rax,QWORD PTR [rbp-0x20]
  40d1b6:	cmp    rax,QWORD PTR [rbp-0x50]
  40d1ba:	jne    40d206 <_start@@Base+0x9ef6>
  40d1bc:	mov    rax,QWORD PTR [rbp-0x50]
  40d1c0:	mov    QWORD PTR [rbp-0x20],rax
  40d1c4:	lea    rcx,[rbp-0x30]
  40d1c8:	mov    rdx,QWORD PTR [rbp-0x58]
  40d1cc:	mov    rsi,QWORD PTR [rbp-0x20]
  40d1d0:	mov    rax,QWORD PTR [rbp-0x48]
  40d1d4:	mov    r8,rcx
  40d1d7:	lea    rcx,[rip+0x1d362]        # 42a540 <filename@@Base+0x440>
  40d1de:	mov    rdi,rax
  40d1e1:	call   405a6e <_start@@Base+0x275e>
  40d1e6:	mov    QWORD PTR [rbp-0x50],rax
  40d1ea:	mov    rax,QWORD PTR [rbp-0x50]
  40d1ee:	cmp    rax,QWORD PTR [rbp-0x20]
  40d1f2:	je     410399 <_start@@Base+0xd089>
  40d1f8:	mov    rax,QWORD PTR [rbp-0x50]
  40d1fc:	cmp    rax,QWORD PTR [rbp-0x58]
  40d200:	je     410399 <_start@@Base+0xd089>
  40d206:	movzx  eax,WORD PTR [rbp-0x30]
  40d20a:	cmp    ax,0x64
  40d20e:	jne    40d222 <_start@@Base+0x9f12>
  40d210:	mov    rax,QWORD PTR [rbp-0x48]
  40d214:	mov    eax,DWORD PTR [rax+0x10]
  40d217:	and    eax,0x2
  40d21a:	test   eax,eax
  40d21c:	je     4102a9 <_start@@Base+0xcf99>
  40d222:	mov    rax,QWORD PTR [rbp-0x48]
  40d226:	mov    rax,QWORD PTR [rax]
  40d229:	mov    ecx,0x2
  40d22e:	mov    edx,0x2
  40d233:	mov    esi,0x2
  40d238:	mov    rdi,rax
  40d23b:	call   419d30 <flatcc_builder_table_add@@Base>
  40d240:	mov    QWORD PTR [rbp-0x10],rax
  40d244:	cmp    QWORD PTR [rbp-0x10],0x0
  40d249:	je     41039f <_start@@Base+0xd08f>
  40d24f:	movzx  eax,WORD PTR [rbp-0x30]
  40d253:	movsx  edx,ax
  40d256:	mov    rax,QWORD PTR [rbp-0x10]
  40d25a:	mov    esi,edx
  40d25c:	mov    rdi,rax
  40d25f:	call   403569 <_start@@Base+0x259>
  40d264:	jmp    4102a9 <_start@@Base+0xcf99>
  40d269:	mov    rdx,QWORD PTR [rbp-0x58]
  40d26d:	mov    rcx,QWORD PTR [rbp-0x50]
  40d271:	mov    rax,QWORD PTR [rbp-0x48]
  40d275:	mov    rsi,rcx
  40d278:	mov    rdi,rax
  40d27b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d280:	mov    QWORD PTR [rbp-0x50],rax
  40d284:	jmp    4102a9 <_start@@Base+0xcf99>
  40d289:	mov    rdx,QWORD PTR [rbp-0x58]
  40d28d:	mov    rcx,QWORD PTR [rbp-0x50]
  40d291:	mov    rax,QWORD PTR [rbp-0x48]
  40d295:	mov    rsi,rcx
  40d298:	mov    rdi,rax
  40d29b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d2a0:	mov    QWORD PTR [rbp-0x50],rax
  40d2a4:	jmp    4102a9 <_start@@Base+0xcf99>
  40d2a9:	movabs rax,0x696e76656e746f72
  40d2b3:	cmp    QWORD PTR [rbp-0x28],rax
  40d2b7:	jne    40d4e0 <_start@@Base+0xa1d0>
  40d2bd:	add    QWORD PTR [rbp-0x50],0x8
  40d2c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40d2c6:	mov    rax,QWORD PTR [rbp-0x50]
  40d2ca:	mov    rsi,rdx
  40d2cd:	mov    rdi,rax
  40d2d0:	call   403dd5 <_start@@Base+0xac5>
  40d2d5:	mov    QWORD PTR [rbp-0x28],rax
  40d2d9:	movabs rax,0xff00000000000000
  40d2e3:	and    rax,QWORD PTR [rbp-0x28]
  40d2e7:	mov    rdx,rax
  40d2ea:	movabs rax,0x7900000000000000
  40d2f4:	cmp    rdx,rax
  40d2f7:	jne    40d4c0 <_start@@Base+0xa1b0>
  40d2fd:	mov    rax,QWORD PTR [rbp-0x50]
  40d301:	mov    QWORD PTR [rbp-0x20],rax
  40d305:	mov    rdx,QWORD PTR [rbp-0x58]
  40d309:	mov    rsi,QWORD PTR [rbp-0x20]
  40d30d:	mov    rax,QWORD PTR [rbp-0x48]
  40d311:	mov    ecx,0x1
  40d316:	mov    rdi,rax
  40d319:	call   4042cc <_start@@Base+0xfbc>
  40d31e:	mov    QWORD PTR [rbp-0x50],rax
  40d322:	mov    rax,QWORD PTR [rbp-0x20]
  40d326:	cmp    rax,QWORD PTR [rbp-0x50]
  40d32a:	je     40d4a0 <_start@@Base+0xa190>
  40d330:	mov    rax,QWORD PTR [rbp-0x48]
  40d334:	mov    rax,QWORD PTR [rax]
  40d337:	mov    ecx,0xffffffff
  40d33c:	mov    edx,0x1
  40d341:	mov    esi,0x1
  40d346:	mov    rdi,rax
  40d349:	call   417932 <flatcc_builder_start_vector@@Base>
  40d34e:	test   eax,eax
  40d350:	jne    4103a5 <_start@@Base+0xd095>
  40d356:	lea    rcx,[rbp-0x40]
  40d35a:	mov    rdx,QWORD PTR [rbp-0x58]
  40d35e:	mov    rsi,QWORD PTR [rbp-0x50]
  40d362:	mov    rax,QWORD PTR [rbp-0x48]
  40d366:	mov    rdi,rax
  40d369:	call   4040d1 <_start@@Base+0xdc1>
  40d36e:	mov    QWORD PTR [rbp-0x50],rax
  40d372:	jmp    40d447 <_start@@Base+0xa137>
  40d377:	mov    BYTE PTR [rbp-0x30],0x0
  40d37b:	mov    rax,QWORD PTR [rbp-0x48]
  40d37f:	mov    rax,QWORD PTR [rax]
  40d382:	mov    esi,0x1
  40d387:	mov    rdi,rax
  40d38a:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40d38f:	mov    QWORD PTR [rbp-0x10],rax
  40d393:	cmp    QWORD PTR [rbp-0x10],0x0
  40d398:	je     4103ab <_start@@Base+0xd09b>
  40d39e:	mov    rax,QWORD PTR [rbp-0x50]
  40d3a2:	mov    QWORD PTR [rbp-0x20],rax
  40d3a6:	lea    rcx,[rbp-0x30]
  40d3aa:	mov    rdx,QWORD PTR [rbp-0x58]
  40d3ae:	mov    rsi,QWORD PTR [rbp-0x20]
  40d3b2:	mov    rax,QWORD PTR [rbp-0x48]
  40d3b6:	mov    rdi,rax
  40d3b9:	call   404c05 <_start@@Base+0x18f5>
  40d3be:	mov    QWORD PTR [rbp-0x50],rax
  40d3c2:	mov    rax,QWORD PTR [rbp-0x20]
  40d3c6:	cmp    rax,QWORD PTR [rbp-0x50]
  40d3ca:	jne    40d416 <_start@@Base+0xa106>
  40d3cc:	mov    rax,QWORD PTR [rbp-0x50]
  40d3d0:	mov    QWORD PTR [rbp-0x20],rax
  40d3d4:	lea    rcx,[rbp-0x30]
  40d3d8:	mov    rdx,QWORD PTR [rbp-0x58]
  40d3dc:	mov    rsi,QWORD PTR [rbp-0x20]
  40d3e0:	mov    rax,QWORD PTR [rbp-0x48]
  40d3e4:	mov    r8,rcx
  40d3e7:	lea    rcx,[rip+0x1d172]        # 42a560 <filename@@Base+0x460>
  40d3ee:	mov    rdi,rax
  40d3f1:	call   40559e <_start@@Base+0x228e>
  40d3f6:	mov    QWORD PTR [rbp-0x50],rax
  40d3fa:	mov    rax,QWORD PTR [rbp-0x50]
  40d3fe:	cmp    rax,QWORD PTR [rbp-0x20]
  40d402:	je     4103b1 <_start@@Base+0xd0a1>
  40d408:	mov    rax,QWORD PTR [rbp-0x50]
  40d40c:	cmp    rax,QWORD PTR [rbp-0x58]
  40d410:	je     4103b1 <_start@@Base+0xd0a1>
  40d416:	movzx  eax,BYTE PTR [rbp-0x30]
  40d41a:	movzx  edx,al
  40d41d:	mov    rax,QWORD PTR [rbp-0x10]
  40d421:	mov    esi,edx
  40d423:	mov    rdi,rax
  40d426:	call   403405 <_start@@Base+0xf5>
  40d42b:	lea    rcx,[rbp-0x40]
  40d42f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d433:	mov    rsi,QWORD PTR [rbp-0x50]
  40d437:	mov    rax,QWORD PTR [rbp-0x48]
  40d43b:	mov    rdi,rax
  40d43e:	call   40418e <_start@@Base+0xe7e>
  40d443:	mov    QWORD PTR [rbp-0x50],rax
  40d447:	mov    eax,DWORD PTR [rbp-0x40]
  40d44a:	test   eax,eax
  40d44c:	jne    40d377 <_start@@Base+0xa067>
  40d452:	mov    rax,QWORD PTR [rbp-0x48]
  40d456:	mov    rax,QWORD PTR [rax]
  40d459:	mov    rdi,rax
  40d45c:	call   418b27 <flatcc_builder_end_vector@@Base>
  40d461:	mov    DWORD PTR [rbp-0x3c],eax
  40d464:	mov    eax,DWORD PTR [rbp-0x3c]
  40d467:	test   eax,eax
  40d469:	je     4103b7 <_start@@Base+0xd0a7>
  40d46f:	mov    rax,QWORD PTR [rbp-0x48]
  40d473:	mov    rax,QWORD PTR [rax]
  40d476:	mov    esi,0x5
  40d47b:	mov    rdi,rax
  40d47e:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40d483:	mov    QWORD PTR [rbp-0x18],rax
  40d487:	cmp    QWORD PTR [rbp-0x18],0x0
  40d48c:	je     4103b7 <_start@@Base+0xd0a7>
  40d492:	mov    edx,DWORD PTR [rbp-0x3c]
  40d495:	mov    rax,QWORD PTR [rbp-0x18]
  40d499:	mov    DWORD PTR [rax],edx
  40d49b:	jmp    4102a9 <_start@@Base+0xcf99>
  40d4a0:	mov    rdx,QWORD PTR [rbp-0x58]
  40d4a4:	mov    rcx,QWORD PTR [rbp-0x50]
  40d4a8:	mov    rax,QWORD PTR [rbp-0x48]
  40d4ac:	mov    rsi,rcx
  40d4af:	mov    rdi,rax
  40d4b2:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d4b7:	mov    QWORD PTR [rbp-0x50],rax
  40d4bb:	jmp    4102a9 <_start@@Base+0xcf99>
  40d4c0:	mov    rdx,QWORD PTR [rbp-0x58]
  40d4c4:	mov    rcx,QWORD PTR [rbp-0x50]
  40d4c8:	mov    rax,QWORD PTR [rbp-0x48]
  40d4cc:	mov    rsi,rcx
  40d4cf:	mov    rdi,rax
  40d4d2:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d4d7:	mov    QWORD PTR [rbp-0x50],rax
  40d4db:	jmp    4102a9 <_start@@Base+0xcf99>
  40d4e0:	movabs rax,0xffffffff00000000
  40d4ea:	and    rax,QWORD PTR [rbp-0x28]
  40d4ee:	mov    rdx,rax
  40d4f1:	movabs rax,0x6d616e6100000000
  40d4fb:	cmp    rdx,rax
  40d4fe:	jne    40d638 <_start@@Base+0xa328>
  40d504:	mov    rax,QWORD PTR [rbp-0x50]
  40d508:	mov    QWORD PTR [rbp-0x20],rax
  40d50c:	mov    rdx,QWORD PTR [rbp-0x58]
  40d510:	mov    rsi,QWORD PTR [rbp-0x20]
  40d514:	mov    rax,QWORD PTR [rbp-0x48]
  40d518:	mov    ecx,0x4
  40d51d:	mov    rdi,rax
  40d520:	call   4042cc <_start@@Base+0xfbc>
  40d525:	mov    QWORD PTR [rbp-0x50],rax
  40d529:	mov    rax,QWORD PTR [rbp-0x20]
  40d52d:	cmp    rax,QWORD PTR [rbp-0x50]
  40d531:	je     40d618 <_start@@Base+0xa308>
  40d537:	mov    WORD PTR [rbp-0x30],0x0
  40d53d:	mov    rax,QWORD PTR [rbp-0x50]
  40d541:	mov    QWORD PTR [rbp-0x20],rax
  40d545:	lea    rcx,[rbp-0x30]
  40d549:	mov    rdx,QWORD PTR [rbp-0x58]
  40d54d:	mov    rsi,QWORD PTR [rbp-0x20]
  40d551:	mov    rax,QWORD PTR [rbp-0x48]
  40d555:	mov    rdi,rax
  40d558:	call   404e55 <_start@@Base+0x1b45>
  40d55d:	mov    QWORD PTR [rbp-0x50],rax
  40d561:	mov    rax,QWORD PTR [rbp-0x20]
  40d565:	cmp    rax,QWORD PTR [rbp-0x50]
  40d569:	jne    40d5b5 <_start@@Base+0xa2a5>
  40d56b:	mov    rax,QWORD PTR [rbp-0x50]
  40d56f:	mov    QWORD PTR [rbp-0x20],rax
  40d573:	lea    rcx,[rbp-0x30]
  40d577:	mov    rdx,QWORD PTR [rbp-0x58]
  40d57b:	mov    rsi,QWORD PTR [rbp-0x20]
  40d57f:	mov    rax,QWORD PTR [rbp-0x48]
  40d583:	mov    r8,rcx
  40d586:	lea    rcx,[rip+0x1cff3]        # 42a580 <filename@@Base+0x480>
  40d58d:	mov    rdi,rax
  40d590:	call   405a6e <_start@@Base+0x275e>
  40d595:	mov    QWORD PTR [rbp-0x50],rax
  40d599:	mov    rax,QWORD PTR [rbp-0x50]
  40d59d:	cmp    rax,QWORD PTR [rbp-0x20]
  40d5a1:	je     4103bd <_start@@Base+0xd0ad>
  40d5a7:	mov    rax,QWORD PTR [rbp-0x50]
  40d5ab:	cmp    rax,QWORD PTR [rbp-0x58]
  40d5af:	je     4103bd <_start@@Base+0xd0ad>
  40d5b5:	movzx  eax,WORD PTR [rbp-0x30]
  40d5b9:	cmp    ax,0x96
  40d5bd:	jne    40d5d1 <_start@@Base+0xa2c1>
  40d5bf:	mov    rax,QWORD PTR [rbp-0x48]
  40d5c3:	mov    eax,DWORD PTR [rax+0x10]
  40d5c6:	and    eax,0x2
  40d5c9:	test   eax,eax
  40d5cb:	je     4102a9 <_start@@Base+0xcf99>
  40d5d1:	mov    rax,QWORD PTR [rbp-0x48]
  40d5d5:	mov    rax,QWORD PTR [rax]
  40d5d8:	mov    ecx,0x2
  40d5dd:	mov    edx,0x2
  40d5e2:	mov    esi,0x1
  40d5e7:	mov    rdi,rax
  40d5ea:	call   419d30 <flatcc_builder_table_add@@Base>
  40d5ef:	mov    QWORD PTR [rbp-0x10],rax
  40d5f3:	cmp    QWORD PTR [rbp-0x10],0x0
  40d5f8:	je     4103c3 <_start@@Base+0xd0b3>
  40d5fe:	movzx  eax,WORD PTR [rbp-0x30]
  40d602:	movsx  edx,ax
  40d605:	mov    rax,QWORD PTR [rbp-0x10]
  40d609:	mov    esi,edx
  40d60b:	mov    rdi,rax
  40d60e:	call   403569 <_start@@Base+0x259>
  40d613:	jmp    4102a9 <_start@@Base+0xcf99>
  40d618:	mov    rdx,QWORD PTR [rbp-0x58]
  40d61c:	mov    rcx,QWORD PTR [rbp-0x50]
  40d620:	mov    rax,QWORD PTR [rbp-0x48]
  40d624:	mov    rsi,rcx
  40d627:	mov    rdi,rax
  40d62a:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d62f:	mov    QWORD PTR [rbp-0x50],rax
  40d633:	jmp    4102a9 <_start@@Base+0xcf99>
  40d638:	mov    rdx,QWORD PTR [rbp-0x58]
  40d63c:	mov    rcx,QWORD PTR [rbp-0x50]
  40d640:	mov    rax,QWORD PTR [rbp-0x48]
  40d644:	mov    rsi,rcx
  40d647:	mov    rdi,rax
  40d64a:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d64f:	mov    QWORD PTR [rbp-0x50],rax
  40d653:	jmp    4102a9 <_start@@Base+0xcf99>
  40d658:	movabs rax,0x74657373ffffffff
  40d662:	cmp    QWORD PTR [rbp-0x28],rax
  40d666:	ja     40d9b3 <_start@@Base+0xa6a3>
  40d66c:	movabs rax,0x706172656e745f6d
  40d676:	cmp    QWORD PTR [rbp-0x28],rax
  40d67a:	ja     40d76b <_start@@Base+0xa45b>
  40d680:	movabs rax,0xffffffff00000000
  40d68a:	and    rax,QWORD PTR [rbp-0x28]
  40d68e:	mov    rdx,rax
  40d691:	movabs rax,0x6e616d6500000000
  40d69b:	cmp    rdx,rax
  40d69e:	jne    40d74b <_start@@Base+0xa43b>
  40d6a4:	mov    rax,QWORD PTR [rbp-0x50]
  40d6a8:	mov    QWORD PTR [rbp-0x20],rax
  40d6ac:	mov    rdx,QWORD PTR [rbp-0x58]
  40d6b0:	mov    rsi,QWORD PTR [rbp-0x20]
  40d6b4:	mov    rax,QWORD PTR [rbp-0x48]
  40d6b8:	mov    ecx,0x4
  40d6bd:	mov    rdi,rax
  40d6c0:	call   4042cc <_start@@Base+0xfbc>
  40d6c5:	mov    QWORD PTR [rbp-0x50],rax
  40d6c9:	mov    rax,QWORD PTR [rbp-0x20]
  40d6cd:	cmp    rax,QWORD PTR [rbp-0x50]
  40d6d1:	je     40d72b <_start@@Base+0xa41b>
  40d6d3:	lea    rcx,[rbp-0x3c]
  40d6d7:	mov    rdx,QWORD PTR [rbp-0x58]
  40d6db:	mov    rsi,QWORD PTR [rbp-0x50]
  40d6df:	mov    rax,QWORD PTR [rbp-0x48]
  40d6e3:	mov    rdi,rax
  40d6e6:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40d6eb:	mov    QWORD PTR [rbp-0x50],rax
  40d6ef:	mov    eax,DWORD PTR [rbp-0x3c]
  40d6f2:	test   eax,eax
  40d6f4:	je     4103c9 <_start@@Base+0xd0b9>
  40d6fa:	mov    rax,QWORD PTR [rbp-0x48]
  40d6fe:	mov    rax,QWORD PTR [rax]
  40d701:	mov    esi,0x3
  40d706:	mov    rdi,rax
  40d709:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40d70e:	mov    QWORD PTR [rbp-0x18],rax
  40d712:	cmp    QWORD PTR [rbp-0x18],0x0
  40d717:	je     4103c9 <_start@@Base+0xd0b9>
  40d71d:	mov    edx,DWORD PTR [rbp-0x3c]
  40d720:	mov    rax,QWORD PTR [rbp-0x18]
  40d724:	mov    DWORD PTR [rax],edx
  40d726:	jmp    4102a9 <_start@@Base+0xcf99>
  40d72b:	mov    rdx,QWORD PTR [rbp-0x58]
  40d72f:	mov    rcx,QWORD PTR [rbp-0x50]
  40d733:	mov    rax,QWORD PTR [rbp-0x48]
  40d737:	mov    rsi,rcx
  40d73a:	mov    rdi,rax
  40d73d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d742:	mov    QWORD PTR [rbp-0x50],rax
  40d746:	jmp    4102a9 <_start@@Base+0xcf99>
  40d74b:	mov    rdx,QWORD PTR [rbp-0x58]
  40d74f:	mov    rcx,QWORD PTR [rbp-0x50]
  40d753:	mov    rax,QWORD PTR [rbp-0x48]
  40d757:	mov    rsi,rcx
  40d75a:	mov    rdi,rax
  40d75d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d762:	mov    QWORD PTR [rbp-0x50],rax
  40d766:	jmp    4102a9 <_start@@Base+0xcf99>
  40d76b:	movabs rax,0x706172656e745f6e
  40d775:	cmp    QWORD PTR [rbp-0x28],rax
  40d779:	jne    40d8d2 <_start@@Base+0xa5c2>
  40d77f:	add    QWORD PTR [rbp-0x50],0x8
  40d784:	mov    rdx,QWORD PTR [rbp-0x58]
  40d788:	mov    rax,QWORD PTR [rbp-0x50]
  40d78c:	mov    rsi,rdx
  40d78f:	mov    rdi,rax
  40d792:	call   403dd5 <_start@@Base+0xac5>
  40d797:	mov    QWORD PTR [rbp-0x28],rax
  40d79b:	movabs rax,0x616d657370616365
  40d7a5:	cmp    QWORD PTR [rbp-0x28],rax
  40d7a9:	jne    40d8b2 <_start@@Base+0xa5a2>
  40d7af:	add    QWORD PTR [rbp-0x50],0x8
  40d7b4:	mov    rdx,QWORD PTR [rbp-0x58]
  40d7b8:	mov    rax,QWORD PTR [rbp-0x50]
  40d7bc:	mov    rsi,rdx
  40d7bf:	mov    rdi,rax
  40d7c2:	call   403dd5 <_start@@Base+0xac5>
  40d7c7:	mov    QWORD PTR [rbp-0x28],rax
  40d7cb:	mov    rax,QWORD PTR [rbp-0x28]
  40d7cf:	and    rax,0xffffffffff000000
  40d7d5:	mov    rdx,rax
  40d7d8:	movabs rax,0x5f74657374000000
  40d7e2:	cmp    rdx,rax
  40d7e5:	jne    40d892 <_start@@Base+0xa582>
  40d7eb:	mov    rax,QWORD PTR [rbp-0x50]
  40d7ef:	mov    QWORD PTR [rbp-0x20],rax
  40d7f3:	mov    rdx,QWORD PTR [rbp-0x58]
  40d7f7:	mov    rsi,QWORD PTR [rbp-0x20]
  40d7fb:	mov    rax,QWORD PTR [rbp-0x48]
  40d7ff:	mov    ecx,0x5
  40d804:	mov    rdi,rax
  40d807:	call   4042cc <_start@@Base+0xfbc>
  40d80c:	mov    QWORD PTR [rbp-0x50],rax
  40d810:	mov    rax,QWORD PTR [rbp-0x20]
  40d814:	cmp    rax,QWORD PTR [rbp-0x50]
  40d818:	je     40d872 <_start@@Base+0xa562>
  40d81a:	lea    rcx,[rbp-0x3c]
  40d81e:	mov    rdx,QWORD PTR [rbp-0x58]
  40d822:	mov    rsi,QWORD PTR [rbp-0x50]
  40d826:	mov    rax,QWORD PTR [rbp-0x48]
  40d82a:	mov    rdi,rax
  40d82d:	call   406e7d <_start@@Base+0x3b6d>
  40d832:	mov    QWORD PTR [rbp-0x50],rax
  40d836:	mov    eax,DWORD PTR [rbp-0x3c]
  40d839:	test   eax,eax
  40d83b:	je     4103cf <_start@@Base+0xd0bf>
  40d841:	mov    rax,QWORD PTR [rbp-0x48]
  40d845:	mov    rax,QWORD PTR [rax]
  40d848:	mov    esi,0x22
  40d84d:	mov    rdi,rax
  40d850:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40d855:	mov    QWORD PTR [rbp-0x18],rax
  40d859:	cmp    QWORD PTR [rbp-0x18],0x0
  40d85e:	je     4103cf <_start@@Base+0xd0bf>
  40d864:	mov    edx,DWORD PTR [rbp-0x3c]
  40d867:	mov    rax,QWORD PTR [rbp-0x18]
  40d86b:	mov    DWORD PTR [rax],edx
  40d86d:	jmp    4102a9 <_start@@Base+0xcf99>
  40d872:	mov    rdx,QWORD PTR [rbp-0x58]
  40d876:	mov    rcx,QWORD PTR [rbp-0x50]
  40d87a:	mov    rax,QWORD PTR [rbp-0x48]
  40d87e:	mov    rsi,rcx
  40d881:	mov    rdi,rax
  40d884:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d889:	mov    QWORD PTR [rbp-0x50],rax
  40d88d:	jmp    4102a9 <_start@@Base+0xcf99>
  40d892:	mov    rdx,QWORD PTR [rbp-0x58]
  40d896:	mov    rcx,QWORD PTR [rbp-0x50]
  40d89a:	mov    rax,QWORD PTR [rbp-0x48]
  40d89e:	mov    rsi,rcx
  40d8a1:	mov    rdi,rax
  40d8a4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d8a9:	mov    QWORD PTR [rbp-0x50],rax
  40d8ad:	jmp    4102a9 <_start@@Base+0xcf99>
  40d8b2:	mov    rdx,QWORD PTR [rbp-0x58]
  40d8b6:	mov    rcx,QWORD PTR [rbp-0x50]
  40d8ba:	mov    rax,QWORD PTR [rbp-0x48]
  40d8be:	mov    rsi,rcx
  40d8c1:	mov    rdi,rax
  40d8c4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d8c9:	mov    QWORD PTR [rbp-0x50],rax
  40d8cd:	jmp    4102a9 <_start@@Base+0xcf99>
  40d8d2:	movabs rax,0xffffff0000000000
  40d8dc:	and    rax,QWORD PTR [rbp-0x28]
  40d8e0:	mov    rdx,rax
  40d8e3:	movabs rax,0x706f730000000000
  40d8ed:	cmp    rdx,rax
  40d8f0:	jne    40d993 <_start@@Base+0xa683>
  40d8f6:	mov    rax,QWORD PTR [rbp-0x50]
  40d8fa:	mov    QWORD PTR [rbp-0x20],rax
  40d8fe:	mov    rdx,QWORD PTR [rbp-0x58]
  40d902:	mov    rsi,QWORD PTR [rbp-0x20]
  40d906:	mov    rax,QWORD PTR [rbp-0x48]
  40d90a:	mov    ecx,0x3
  40d90f:	mov    rdi,rax
  40d912:	call   4042cc <_start@@Base+0xfbc>
  40d917:	mov    QWORD PTR [rbp-0x50],rax
  40d91b:	mov    rax,QWORD PTR [rbp-0x20]
  40d91f:	cmp    rax,QWORD PTR [rbp-0x50]
  40d923:	je     40d973 <_start@@Base+0xa663>
  40d925:	mov    rax,QWORD PTR [rbp-0x48]
  40d929:	mov    rax,QWORD PTR [rax]
  40d92c:	mov    ecx,0x10
  40d931:	mov    edx,0x20
  40d936:	mov    esi,0x0
  40d93b:	mov    rdi,rax
  40d93e:	call   419d30 <flatcc_builder_table_add@@Base>
  40d943:	mov    QWORD PTR [rbp-0x10],rax
  40d947:	cmp    QWORD PTR [rbp-0x10],0x0
  40d94c:	je     4103d5 <_start@@Base+0xd0c5>
  40d952:	mov    rcx,QWORD PTR [rbp-0x10]
  40d956:	mov    rdx,QWORD PTR [rbp-0x58]
  40d95a:	mov    rsi,QWORD PTR [rbp-0x50]
  40d95e:	mov    rax,QWORD PTR [rbp-0x48]
  40d962:	mov    rdi,rax
  40d965:	call   409901 <_start@@Base+0x65f1>
  40d96a:	mov    QWORD PTR [rbp-0x50],rax
  40d96e:	jmp    4102a9 <_start@@Base+0xcf99>
  40d973:	mov    rdx,QWORD PTR [rbp-0x58]
  40d977:	mov    rcx,QWORD PTR [rbp-0x50]
  40d97b:	mov    rax,QWORD PTR [rbp-0x48]
  40d97f:	mov    rsi,rcx
  40d982:	mov    rdi,rax
  40d985:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d98a:	mov    QWORD PTR [rbp-0x50],rax
  40d98e:	jmp    4102a9 <_start@@Base+0xcf99>
  40d993:	mov    rdx,QWORD PTR [rbp-0x58]
  40d997:	mov    rcx,QWORD PTR [rbp-0x50]
  40d99b:	mov    rax,QWORD PTR [rbp-0x48]
  40d99f:	mov    rsi,rcx
  40d9a2:	mov    rdi,rax
  40d9a5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40d9aa:	mov    QWORD PTR [rbp-0x50],rax
  40d9ae:	jmp    4102a9 <_start@@Base+0xcf99>
  40d9b3:	mov    rax,QWORD PTR [rbp-0x28]
  40d9b7:	and    rax,0xffffffffff000000
  40d9bd:	mov    rdx,rax
  40d9c0:	movabs rax,0x7465737434000000
  40d9ca:	cmp    rdx,rax
  40d9cd:	jne    40dafa <_start@@Base+0xa7ea>
  40d9d3:	mov    rax,QWORD PTR [rbp-0x50]
  40d9d7:	mov    QWORD PTR [rbp-0x20],rax
  40d9db:	mov    rdx,QWORD PTR [rbp-0x58]
  40d9df:	mov    rsi,QWORD PTR [rbp-0x20]
  40d9e3:	mov    rax,QWORD PTR [rbp-0x48]
  40d9e7:	mov    ecx,0x5
  40d9ec:	mov    rdi,rax
  40d9ef:	call   4042cc <_start@@Base+0xfbc>
  40d9f4:	mov    QWORD PTR [rbp-0x50],rax
  40d9f8:	mov    rax,QWORD PTR [rbp-0x20]
  40d9fc:	cmp    rax,QWORD PTR [rbp-0x50]
  40da00:	je     40db88 <_start@@Base+0xa878>
  40da06:	mov    rax,QWORD PTR [rbp-0x48]
  40da0a:	mov    rax,QWORD PTR [rax]
  40da0d:	mov    ecx,0x3fffffff
  40da12:	mov    edx,0x2
  40da17:	mov    esi,0x4
  40da1c:	mov    rdi,rax
  40da1f:	call   417932 <flatcc_builder_start_vector@@Base>
  40da24:	test   eax,eax
  40da26:	jne    4103db <_start@@Base+0xd0cb>
  40da2c:	lea    rcx,[rbp-0x40]
  40da30:	mov    rdx,QWORD PTR [rbp-0x58]
  40da34:	mov    rsi,QWORD PTR [rbp-0x50]
  40da38:	mov    rax,QWORD PTR [rbp-0x48]
  40da3c:	mov    rdi,rax
  40da3f:	call   4040d1 <_start@@Base+0xdc1>
  40da44:	mov    QWORD PTR [rbp-0x50],rax
  40da48:	jmp    40daa5 <_start@@Base+0xa795>
  40da4a:	mov    rax,QWORD PTR [rbp-0x48]
  40da4e:	mov    rax,QWORD PTR [rax]
  40da51:	mov    esi,0x1
  40da56:	mov    rdi,rax
  40da59:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40da5e:	mov    QWORD PTR [rbp-0x10],rax
  40da62:	cmp    QWORD PTR [rbp-0x10],0x0
  40da67:	je     4103e1 <_start@@Base+0xd0d1>
  40da6d:	mov    rcx,QWORD PTR [rbp-0x10]
  40da71:	mov    rdx,QWORD PTR [rbp-0x58]
  40da75:	mov    rsi,QWORD PTR [rbp-0x50]
  40da79:	mov    rax,QWORD PTR [rbp-0x48]
  40da7d:	mov    rdi,rax
  40da80:	call   40802d <_start@@Base+0x4d1d>
  40da85:	mov    QWORD PTR [rbp-0x50],rax
  40da89:	lea    rcx,[rbp-0x40]
  40da8d:	mov    rdx,QWORD PTR [rbp-0x58]
  40da91:	mov    rsi,QWORD PTR [rbp-0x50]
  40da95:	mov    rax,QWORD PTR [rbp-0x48]
  40da99:	mov    rdi,rax
  40da9c:	call   40418e <_start@@Base+0xe7e>
  40daa1:	mov    QWORD PTR [rbp-0x50],rax
  40daa5:	mov    eax,DWORD PTR [rbp-0x40]
  40daa8:	test   eax,eax
  40daaa:	jne    40da4a <_start@@Base+0xa73a>
  40daac:	mov    rax,QWORD PTR [rbp-0x48]
  40dab0:	mov    rax,QWORD PTR [rax]
  40dab3:	mov    rdi,rax
  40dab6:	call   418b27 <flatcc_builder_end_vector@@Base>
  40dabb:	mov    DWORD PTR [rbp-0x3c],eax
  40dabe:	mov    eax,DWORD PTR [rbp-0x3c]
  40dac1:	test   eax,eax
  40dac3:	je     4103e7 <_start@@Base+0xd0d7>
  40dac9:	mov    rax,QWORD PTR [rbp-0x48]
  40dacd:	mov    rax,QWORD PTR [rax]
  40dad0:	mov    esi,0x9
  40dad5:	mov    rdi,rax
  40dad8:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40dadd:	mov    QWORD PTR [rbp-0x18],rax
  40dae1:	cmp    QWORD PTR [rbp-0x18],0x0
  40dae6:	je     4103e7 <_start@@Base+0xd0d7>
  40daec:	mov    edx,DWORD PTR [rbp-0x3c]
  40daef:	mov    rax,QWORD PTR [rbp-0x18]
  40daf3:	mov    DWORD PTR [rax],edx
  40daf5:	jmp    4102a9 <_start@@Base+0xcf99>
  40dafa:	movabs rax,0xffffffff00000000
  40db04:	and    rax,QWORD PTR [rbp-0x28]
  40db08:	mov    rdx,rax
  40db0b:	movabs rax,0x7465737400000000
  40db15:	cmp    rdx,rax
  40db18:	jne    40db8b <_start@@Base+0xa87b>
  40db1a:	mov    rax,QWORD PTR [rbp-0x50]
  40db1e:	mov    QWORD PTR [rbp-0x20],rax
  40db22:	mov    rdx,QWORD PTR [rbp-0x58]
  40db26:	mov    rsi,QWORD PTR [rbp-0x20]
  40db2a:	mov    rax,QWORD PTR [rbp-0x48]
  40db2e:	mov    ecx,0x4
  40db33:	mov    rdi,rax
  40db36:	call   4042cc <_start@@Base+0xfbc>
  40db3b:	mov    QWORD PTR [rbp-0x50],rax
  40db3f:	mov    rax,QWORD PTR [rbp-0x20]
  40db43:	cmp    rax,QWORD PTR [rbp-0x50]
  40db47:	je     40db8e <_start@@Base+0xa87e>
  40db49:	mov    rdi,QWORD PTR [rbp-0x38]
  40db4d:	mov    rdx,QWORD PTR [rbp-0x58]
  40db51:	mov    rsi,QWORD PTR [rbp-0x50]
  40db55:	mov    rax,QWORD PTR [rbp-0x48]
  40db59:	sub    rsp,0x8
  40db5d:	lea    rcx,[rip+0xffffffffffff9ff1]        # 407b55 <_start@@Base+0x4845>
  40db64:	push   rcx
  40db65:	mov    r9,rdi
  40db68:	mov    r8d,0x8
  40db6e:	mov    ecx,0x0
  40db73:	mov    rdi,rax
  40db76:	call   420e29 <flatcc_json_parser_union@@Base>
  40db7b:	add    rsp,0x10
  40db7f:	mov    QWORD PTR [rbp-0x50],rax
  40db83:	jmp    4102a9 <_start@@Base+0xcf99>
  40db88:	nop
  40db89:	jmp    40db8f <_start@@Base+0xa87f>
  40db8b:	nop
  40db8c:	jmp    40db8f <_start@@Base+0xa87f>
  40db8e:	nop
  40db8f:	mov    rax,QWORD PTR [rbp-0x28]
  40db93:	and    rax,0xffffffffff000000
  40db99:	mov    rdx,rax
  40db9c:	movabs rax,0x7465737435000000
  40dba6:	cmp    rdx,rax
  40dba9:	jne    40dcd6 <_start@@Base+0xa9c6>
  40dbaf:	mov    rax,QWORD PTR [rbp-0x50]
  40dbb3:	mov    QWORD PTR [rbp-0x20],rax
  40dbb7:	mov    rdx,QWORD PTR [rbp-0x58]
  40dbbb:	mov    rsi,QWORD PTR [rbp-0x20]
  40dbbf:	mov    rax,QWORD PTR [rbp-0x48]
  40dbc3:	mov    ecx,0x5
  40dbc8:	mov    rdi,rax
  40dbcb:	call   4042cc <_start@@Base+0xfbc>
  40dbd0:	mov    QWORD PTR [rbp-0x50],rax
  40dbd4:	mov    rax,QWORD PTR [rbp-0x20]
  40dbd8:	cmp    rax,QWORD PTR [rbp-0x50]
  40dbdc:	je     40dcd9 <_start@@Base+0xa9c9>
  40dbe2:	mov    rax,QWORD PTR [rbp-0x48]
  40dbe6:	mov    rax,QWORD PTR [rax]
  40dbe9:	mov    ecx,0x3fffffff
  40dbee:	mov    edx,0x2
  40dbf3:	mov    esi,0x4
  40dbf8:	mov    rdi,rax
  40dbfb:	call   417932 <flatcc_builder_start_vector@@Base>
  40dc00:	test   eax,eax
  40dc02:	jne    4103ed <_start@@Base+0xd0dd>
  40dc08:	lea    rcx,[rbp-0x40]
  40dc0c:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc10:	mov    rsi,QWORD PTR [rbp-0x50]
  40dc14:	mov    rax,QWORD PTR [rbp-0x48]
  40dc18:	mov    rdi,rax
  40dc1b:	call   4040d1 <_start@@Base+0xdc1>
  40dc20:	mov    QWORD PTR [rbp-0x50],rax
  40dc24:	jmp    40dc81 <_start@@Base+0xa971>
  40dc26:	mov    rax,QWORD PTR [rbp-0x48]
  40dc2a:	mov    rax,QWORD PTR [rax]
  40dc2d:	mov    esi,0x1
  40dc32:	mov    rdi,rax
  40dc35:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40dc3a:	mov    QWORD PTR [rbp-0x10],rax
  40dc3e:	cmp    QWORD PTR [rbp-0x10],0x0
  40dc43:	je     4103f3 <_start@@Base+0xd0e3>
  40dc49:	mov    rcx,QWORD PTR [rbp-0x10]
  40dc4d:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc51:	mov    rsi,QWORD PTR [rbp-0x50]
  40dc55:	mov    rax,QWORD PTR [rbp-0x48]
  40dc59:	mov    rdi,rax
  40dc5c:	call   40802d <_start@@Base+0x4d1d>
  40dc61:	mov    QWORD PTR [rbp-0x50],rax
  40dc65:	lea    rcx,[rbp-0x40]
  40dc69:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc6d:	mov    rsi,QWORD PTR [rbp-0x50]
  40dc71:	mov    rax,QWORD PTR [rbp-0x48]
  40dc75:	mov    rdi,rax
  40dc78:	call   40418e <_start@@Base+0xe7e>
  40dc7d:	mov    QWORD PTR [rbp-0x50],rax
  40dc81:	mov    eax,DWORD PTR [rbp-0x40]
  40dc84:	test   eax,eax
  40dc86:	jne    40dc26 <_start@@Base+0xa916>
  40dc88:	mov    rax,QWORD PTR [rbp-0x48]
  40dc8c:	mov    rax,QWORD PTR [rax]
  40dc8f:	mov    rdi,rax
  40dc92:	call   418b27 <flatcc_builder_end_vector@@Base>
  40dc97:	mov    DWORD PTR [rbp-0x3c],eax
  40dc9a:	mov    eax,DWORD PTR [rbp-0x3c]
  40dc9d:	test   eax,eax
  40dc9f:	je     4103f9 <_start@@Base+0xd0e9>
  40dca5:	mov    rax,QWORD PTR [rbp-0x48]
  40dca9:	mov    rax,QWORD PTR [rax]
  40dcac:	mov    esi,0x1f
  40dcb1:	mov    rdi,rax
  40dcb4:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40dcb9:	mov    QWORD PTR [rbp-0x18],rax
  40dcbd:	cmp    QWORD PTR [rbp-0x18],0x0
  40dcc2:	je     4103f9 <_start@@Base+0xd0e9>
  40dcc8:	mov    edx,DWORD PTR [rbp-0x3c]
  40dccb:	mov    rax,QWORD PTR [rbp-0x18]
  40dccf:	mov    DWORD PTR [rax],edx
  40dcd1:	jmp    4102a9 <_start@@Base+0xcf99>
  40dcd6:	nop
  40dcd7:	jmp    40dcda <_start@@Base+0xa9ca>
  40dcd9:	nop
  40dcda:	movabs rax,0x746573745f747970
  40dce4:	cmp    QWORD PTR [rbp-0x28],rax
  40dce8:	jne    40dde0 <_start@@Base+0xaad0>
  40dcee:	add    QWORD PTR [rbp-0x50],0x8
  40dcf3:	mov    rdx,QWORD PTR [rbp-0x58]
  40dcf7:	mov    rax,QWORD PTR [rbp-0x50]
  40dcfb:	mov    rsi,rdx
  40dcfe:	mov    rdi,rax
  40dd01:	call   403dd5 <_start@@Base+0xac5>
  40dd06:	mov    QWORD PTR [rbp-0x28],rax
  40dd0a:	movabs rax,0xff00000000000000
  40dd14:	and    rax,QWORD PTR [rbp-0x28]
  40dd18:	mov    rdx,rax
  40dd1b:	movabs rax,0x6500000000000000
  40dd25:	cmp    rdx,rax
  40dd28:	jne    40ddc0 <_start@@Base+0xaab0>
  40dd2e:	mov    rax,QWORD PTR [rbp-0x50]
  40dd32:	mov    QWORD PTR [rbp-0x20],rax
  40dd36:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd3a:	mov    rsi,QWORD PTR [rbp-0x20]
  40dd3e:	mov    rax,QWORD PTR [rbp-0x48]
  40dd42:	mov    ecx,0x1
  40dd47:	mov    rdi,rax
  40dd4a:	call   4042cc <_start@@Base+0xfbc>
  40dd4f:	mov    QWORD PTR [rbp-0x50],rax
  40dd53:	mov    rax,QWORD PTR [rbp-0x20]
  40dd57:	cmp    rax,QWORD PTR [rbp-0x50]
  40dd5b:	je     40dda0 <_start@@Base+0xaa90>
  40dd5d:	mov    rdi,QWORD PTR [rbp-0x38]
  40dd61:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd65:	mov    rsi,QWORD PTR [rbp-0x50]
  40dd69:	mov    rax,QWORD PTR [rbp-0x48]
  40dd6d:	lea    rcx,[rip+0xffffffffffff9de1]        # 407b55 <_start@@Base+0x4845>
  40dd74:	push   rcx
  40dd75:	lea    rcx,[rip+0x1c824]        # 42a5a0 <filename@@Base+0x4a0>
  40dd7c:	push   rcx
  40dd7d:	mov    r9,rdi
  40dd80:	mov    r8d,0x8
  40dd86:	mov    ecx,0x0
  40dd8b:	mov    rdi,rax
  40dd8e:	call   421006 <flatcc_json_parser_union_type@@Base>
  40dd93:	add    rsp,0x10
  40dd97:	mov    QWORD PTR [rbp-0x50],rax
  40dd9b:	jmp    4102a9 <_start@@Base+0xcf99>
  40dda0:	mov    rdx,QWORD PTR [rbp-0x58]
  40dda4:	mov    rcx,QWORD PTR [rbp-0x50]
  40dda8:	mov    rax,QWORD PTR [rbp-0x48]
  40ddac:	mov    rsi,rcx
  40ddaf:	mov    rdi,rax
  40ddb2:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ddb7:	mov    QWORD PTR [rbp-0x50],rax
  40ddbb:	jmp    4102a9 <_start@@Base+0xcf99>
  40ddc0:	mov    rdx,QWORD PTR [rbp-0x58]
  40ddc4:	mov    rcx,QWORD PTR [rbp-0x50]
  40ddc8:	mov    rax,QWORD PTR [rbp-0x48]
  40ddcc:	mov    rsi,rcx
  40ddcf:	mov    rdi,rax
  40ddd2:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ddd7:	mov    QWORD PTR [rbp-0x50],rax
  40dddb:	jmp    4102a9 <_start@@Base+0xcf99>
  40dde0:	mov    rdx,QWORD PTR [rbp-0x58]
  40dde4:	mov    rcx,QWORD PTR [rbp-0x50]
  40dde8:	mov    rax,QWORD PTR [rbp-0x48]
  40ddec:	mov    rsi,rcx
  40ddef:	mov    rdi,rax
  40ddf2:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ddf7:	mov    QWORD PTR [rbp-0x50],rax
  40ddfb:	endbr64 
  40ddff:	endbr64 
  40de03:	jmp    4102a9 <_start@@Base+0xcf99>
  40de08:	movabs rax,0x746573746632ffff
  40de12:	cmp    QWORD PTR [rbp-0x28],rax
  40de16:	ja     40edca <_start@@Base+0xbaba>
  40de1c:	movabs rax,0x7465737461727261
  40de26:	cmp    QWORD PTR [rbp-0x28],rax
  40de2a:	jne    40e702 <_start@@Base+0xb3f2>
  40de30:	add    QWORD PTR [rbp-0x50],0x8
  40de35:	mov    rdx,QWORD PTR [rbp-0x58]
  40de39:	mov    rax,QWORD PTR [rbp-0x50]
  40de3d:	mov    rsi,rdx
  40de40:	mov    rdi,rax
  40de43:	call   403dd5 <_start@@Base+0xac5>
  40de48:	mov    QWORD PTR [rbp-0x28],rax
  40de4c:	movabs rax,0x796f66737472696d
  40de56:	cmp    QWORD PTR [rbp-0x28],rax
  40de5a:	ja     40e1f2 <_start@@Base+0xaee2>
  40de60:	movabs rax,0x796f66626f6f6c73
  40de6a:	cmp    QWORD PTR [rbp-0x28],rax
  40de6e:	jne    40e017 <_start@@Base+0xad07>
  40de74:	mov    rax,QWORD PTR [rbp-0x50]
  40de78:	mov    QWORD PTR [rbp-0x20],rax
  40de7c:	mov    rdx,QWORD PTR [rbp-0x58]
  40de80:	mov    rsi,QWORD PTR [rbp-0x20]
  40de84:	mov    rax,QWORD PTR [rbp-0x48]
  40de88:	mov    ecx,0x8
  40de8d:	mov    rdi,rax
  40de90:	call   4042cc <_start@@Base+0xfbc>
  40de95:	mov    QWORD PTR [rbp-0x50],rax
  40de99:	mov    rax,QWORD PTR [rbp-0x20]
  40de9d:	cmp    rax,QWORD PTR [rbp-0x50]
  40dea1:	je     40e01a <_start@@Base+0xad0a>
  40dea7:	mov    rax,QWORD PTR [rbp-0x48]
  40deab:	mov    rax,QWORD PTR [rax]
  40deae:	mov    ecx,0xffffffff
  40deb3:	mov    edx,0x1
  40deb8:	mov    esi,0x1
  40debd:	mov    rdi,rax
  40dec0:	call   417932 <flatcc_builder_start_vector@@Base>
  40dec5:	test   eax,eax
  40dec7:	jne    4103ff <_start@@Base+0xd0ef>
  40decd:	lea    rcx,[rbp-0x40]
  40ded1:	mov    rdx,QWORD PTR [rbp-0x58]
  40ded5:	mov    rsi,QWORD PTR [rbp-0x50]
  40ded9:	mov    rax,QWORD PTR [rbp-0x48]
  40dedd:	mov    rdi,rax
  40dee0:	call   4040d1 <_start@@Base+0xdc1>
  40dee5:	mov    QWORD PTR [rbp-0x50],rax
  40dee9:	jmp    40dfbe <_start@@Base+0xacae>
  40deee:	mov    BYTE PTR [rbp-0x30],0x0
  40def2:	mov    rax,QWORD PTR [rbp-0x48]
  40def6:	mov    rax,QWORD PTR [rax]
  40def9:	mov    esi,0x1
  40defe:	mov    rdi,rax
  40df01:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40df06:	mov    QWORD PTR [rbp-0x10],rax
  40df0a:	cmp    QWORD PTR [rbp-0x10],0x0
  40df0f:	je     410405 <_start@@Base+0xd0f5>
  40df15:	mov    rax,QWORD PTR [rbp-0x50]
  40df19:	mov    QWORD PTR [rbp-0x20],rax
  40df1d:	lea    rcx,[rbp-0x30]
  40df21:	mov    rdx,QWORD PTR [rbp-0x58]
  40df25:	mov    rsi,QWORD PTR [rbp-0x20]
  40df29:	mov    rax,QWORD PTR [rbp-0x48]
  40df2d:	mov    rdi,rax
  40df30:	call   404fdd <_start@@Base+0x1ccd>
  40df35:	mov    QWORD PTR [rbp-0x50],rax
  40df39:	mov    rax,QWORD PTR [rbp-0x20]
  40df3d:	cmp    rax,QWORD PTR [rbp-0x50]
  40df41:	jne    40df8d <_start@@Base+0xac7d>
  40df43:	mov    rax,QWORD PTR [rbp-0x50]
  40df47:	mov    QWORD PTR [rbp-0x20],rax
  40df4b:	lea    rcx,[rbp-0x30]
  40df4f:	mov    rdx,QWORD PTR [rbp-0x58]
  40df53:	mov    rsi,QWORD PTR [rbp-0x20]
  40df57:	mov    rax,QWORD PTR [rbp-0x48]
  40df5b:	mov    r8,rcx
  40df5e:	lea    rcx,[rip+0x1c65b]        # 42a5c0 <filename@@Base+0x4c0>
  40df65:	mov    rdi,rax
  40df68:	call   405da7 <_start@@Base+0x2a97>
  40df6d:	mov    QWORD PTR [rbp-0x50],rax
  40df71:	mov    rax,QWORD PTR [rbp-0x50]
  40df75:	cmp    rax,QWORD PTR [rbp-0x20]
  40df79:	je     41040b <_start@@Base+0xd0fb>
  40df7f:	mov    rax,QWORD PTR [rbp-0x50]
  40df83:	cmp    rax,QWORD PTR [rbp-0x58]
  40df87:	je     41040b <_start@@Base+0xd0fb>
  40df8d:	movzx  eax,BYTE PTR [rbp-0x30]
  40df91:	movzx  edx,al
  40df94:	mov    rax,QWORD PTR [rbp-0x10]
  40df98:	mov    esi,edx
  40df9a:	mov    rdi,rax
  40df9d:	call   40373e <_start@@Base+0x42e>
  40dfa2:	lea    rcx,[rbp-0x40]
  40dfa6:	mov    rdx,QWORD PTR [rbp-0x58]
  40dfaa:	mov    rsi,QWORD PTR [rbp-0x50]
  40dfae:	mov    rax,QWORD PTR [rbp-0x48]
  40dfb2:	mov    rdi,rax
  40dfb5:	call   40418e <_start@@Base+0xe7e>
  40dfba:	mov    QWORD PTR [rbp-0x50],rax
  40dfbe:	mov    eax,DWORD PTR [rbp-0x40]
  40dfc1:	test   eax,eax
  40dfc3:	jne    40deee <_start@@Base+0xabde>
  40dfc9:	mov    rax,QWORD PTR [rbp-0x48]
  40dfcd:	mov    rax,QWORD PTR [rax]
  40dfd0:	mov    rdi,rax
  40dfd3:	call   418b27 <flatcc_builder_end_vector@@Base>
  40dfd8:	mov    DWORD PTR [rbp-0x3c],eax
  40dfdb:	mov    eax,DWORD PTR [rbp-0x3c]
  40dfde:	test   eax,eax
  40dfe0:	je     410411 <_start@@Base+0xd101>
  40dfe6:	mov    rax,QWORD PTR [rbp-0x48]
  40dfea:	mov    rax,QWORD PTR [rax]
  40dfed:	mov    esi,0x18
  40dff2:	mov    rdi,rax
  40dff5:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40dffa:	mov    QWORD PTR [rbp-0x18],rax
  40dffe:	cmp    QWORD PTR [rbp-0x18],0x0
  40e003:	je     410411 <_start@@Base+0xd101>
  40e009:	mov    edx,DWORD PTR [rbp-0x3c]
  40e00c:	mov    rax,QWORD PTR [rbp-0x18]
  40e010:	mov    DWORD PTR [rax],edx
  40e012:	jmp    4102a9 <_start@@Base+0xcf99>
  40e017:	nop
  40e018:	jmp    40e01b <_start@@Base+0xad0b>
  40e01a:	nop
  40e01b:	movabs rax,0x796f66736f727465
  40e025:	cmp    QWORD PTR [rbp-0x28],rax
  40e029:	jne    40e1ce <_start@@Base+0xaebe>
  40e02f:	add    QWORD PTR [rbp-0x50],0x8
  40e034:	mov    rdx,QWORD PTR [rbp-0x58]
  40e038:	mov    rax,QWORD PTR [rbp-0x50]
  40e03c:	mov    rsi,rdx
  40e03f:	mov    rdi,rax
  40e042:	call   403dd5 <_start@@Base+0xac5>
  40e047:	mov    QWORD PTR [rbp-0x28],rax
  40e04b:	mov    rax,QWORD PTR [rbp-0x28]
  40e04f:	mov    al,0x0
  40e051:	mov    rdx,rax
  40e054:	movabs rax,0x6473747275637400
  40e05e:	cmp    rdx,rax
  40e061:	jne    40e1ae <_start@@Base+0xae9e>
  40e067:	mov    rax,QWORD PTR [rbp-0x50]
  40e06b:	mov    QWORD PTR [rbp-0x20],rax
  40e06f:	mov    rdx,QWORD PTR [rbp-0x58]
  40e073:	mov    rsi,QWORD PTR [rbp-0x20]
  40e077:	mov    rax,QWORD PTR [rbp-0x48]
  40e07b:	mov    ecx,0x7
  40e080:	mov    rdi,rax
  40e083:	call   4042cc <_start@@Base+0xfbc>
  40e088:	mov    QWORD PTR [rbp-0x50],rax
  40e08c:	mov    rax,QWORD PTR [rbp-0x20]
  40e090:	cmp    rax,QWORD PTR [rbp-0x50]
  40e094:	je     40e18e <_start@@Base+0xae7e>
  40e09a:	mov    rax,QWORD PTR [rbp-0x48]
  40e09e:	mov    rax,QWORD PTR [rax]
  40e0a1:	mov    ecx,0x1fffffff
  40e0a6:	mov    edx,0x4
  40e0ab:	mov    esi,0x8
  40e0b0:	mov    rdi,rax
  40e0b3:	call   417932 <flatcc_builder_start_vector@@Base>
  40e0b8:	test   eax,eax
  40e0ba:	jne    410417 <_start@@Base+0xd107>
  40e0c0:	lea    rcx,[rbp-0x40]
  40e0c4:	mov    rdx,QWORD PTR [rbp-0x58]
  40e0c8:	mov    rsi,QWORD PTR [rbp-0x50]
  40e0cc:	mov    rax,QWORD PTR [rbp-0x48]
  40e0d0:	mov    rdi,rax
  40e0d3:	call   4040d1 <_start@@Base+0xdc1>
  40e0d8:	mov    QWORD PTR [rbp-0x50],rax
  40e0dc:	jmp    40e139 <_start@@Base+0xae29>
  40e0de:	mov    rax,QWORD PTR [rbp-0x48]
  40e0e2:	mov    rax,QWORD PTR [rax]
  40e0e5:	mov    esi,0x1
  40e0ea:	mov    rdi,rax
  40e0ed:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40e0f2:	mov    QWORD PTR [rbp-0x10],rax
  40e0f6:	cmp    QWORD PTR [rbp-0x10],0x0
  40e0fb:	je     41041d <_start@@Base+0xd10d>
  40e101:	mov    rcx,QWORD PTR [rbp-0x10]
  40e105:	mov    rdx,QWORD PTR [rbp-0x58]
  40e109:	mov    rsi,QWORD PTR [rbp-0x50]
  40e10d:	mov    rax,QWORD PTR [rbp-0x48]
  40e111:	mov    rdi,rax
  40e114:	call   40a166 <_start@@Base+0x6e56>
  40e119:	mov    QWORD PTR [rbp-0x50],rax
  40e11d:	lea    rcx,[rbp-0x40]
  40e121:	mov    rdx,QWORD PTR [rbp-0x58]
  40e125:	mov    rsi,QWORD PTR [rbp-0x50]
  40e129:	mov    rax,QWORD PTR [rbp-0x48]
  40e12d:	mov    rdi,rax
  40e130:	call   40418e <_start@@Base+0xe7e>
  40e135:	mov    QWORD PTR [rbp-0x50],rax
  40e139:	mov    eax,DWORD PTR [rbp-0x40]
  40e13c:	test   eax,eax
  40e13e:	jne    40e0de <_start@@Base+0xadce>
  40e140:	mov    rax,QWORD PTR [rbp-0x48]
  40e144:	mov    rax,QWORD PTR [rax]
  40e147:	mov    rdi,rax
  40e14a:	call   418b27 <flatcc_builder_end_vector@@Base>
  40e14f:	mov    DWORD PTR [rbp-0x3c],eax
  40e152:	mov    eax,DWORD PTR [rbp-0x3c]
  40e155:	test   eax,eax
  40e157:	je     410423 <_start@@Base+0xd113>
  40e15d:	mov    rax,QWORD PTR [rbp-0x48]
  40e161:	mov    rax,QWORD PTR [rax]
  40e164:	mov    esi,0x1d
  40e169:	mov    rdi,rax
  40e16c:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40e171:	mov    QWORD PTR [rbp-0x18],rax
  40e175:	cmp    QWORD PTR [rbp-0x18],0x0
  40e17a:	je     410423 <_start@@Base+0xd113>
  40e180:	mov    edx,DWORD PTR [rbp-0x3c]
  40e183:	mov    rax,QWORD PTR [rbp-0x18]
  40e187:	mov    DWORD PTR [rax],edx
  40e189:	jmp    4102a9 <_start@@Base+0xcf99>
  40e18e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e192:	mov    rcx,QWORD PTR [rbp-0x50]
  40e196:	mov    rax,QWORD PTR [rbp-0x48]
  40e19a:	mov    rsi,rcx
  40e19d:	mov    rdi,rax
  40e1a0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e1a5:	mov    QWORD PTR [rbp-0x50],rax
  40e1a9:	jmp    4102a9 <_start@@Base+0xcf99>
  40e1ae:	mov    rdx,QWORD PTR [rbp-0x58]
  40e1b2:	mov    rcx,QWORD PTR [rbp-0x50]
  40e1b6:	mov    rax,QWORD PTR [rbp-0x48]
  40e1ba:	mov    rsi,rcx
  40e1bd:	mov    rdi,rax
  40e1c0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e1c5:	mov    QWORD PTR [rbp-0x50],rax
  40e1c9:	jmp    4102a9 <_start@@Base+0xcf99>
  40e1ce:	mov    rdx,QWORD PTR [rbp-0x58]
  40e1d2:	mov    rcx,QWORD PTR [rbp-0x50]
  40e1d6:	mov    rax,QWORD PTR [rbp-0x48]
  40e1da:	mov    rsi,rcx
  40e1dd:	mov    rdi,rax
  40e1e0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e1e5:	mov    QWORD PTR [rbp-0x50],rax
  40e1e9:	endbr64 
  40e1ed:	jmp    4102a9 <_start@@Base+0xcf99>
  40e1f2:	movabs rax,0x796f66737472696e
  40e1fc:	cmp    QWORD PTR [rbp-0x28],rax
  40e200:	jne    40e522 <_start@@Base+0xb212>
  40e206:	add    QWORD PTR [rbp-0x50],0x8
  40e20b:	mov    rdx,QWORD PTR [rbp-0x58]
  40e20f:	mov    rax,QWORD PTR [rbp-0x50]
  40e213:	mov    rsi,rdx
  40e216:	mov    rdi,rax
  40e219:	call   403dd5 <_start@@Base+0xac5>
  40e21e:	mov    QWORD PTR [rbp-0x28],rax
  40e222:	movabs rax,0xffff000000000000
  40e22c:	and    rax,QWORD PTR [rbp-0x28]
  40e230:	mov    rdx,rax
  40e233:	movabs rax,0x6732000000000000
  40e23d:	cmp    rdx,rax
  40e240:	jne    40e392 <_start@@Base+0xb082>
  40e246:	mov    rax,QWORD PTR [rbp-0x50]
  40e24a:	mov    QWORD PTR [rbp-0x20],rax
  40e24e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e252:	mov    rsi,QWORD PTR [rbp-0x20]
  40e256:	mov    rax,QWORD PTR [rbp-0x48]
  40e25a:	mov    ecx,0x2
  40e25f:	mov    rdi,rax
  40e262:	call   4042cc <_start@@Base+0xfbc>
  40e267:	mov    QWORD PTR [rbp-0x50],rax
  40e26b:	mov    rax,QWORD PTR [rbp-0x20]
  40e26f:	cmp    rax,QWORD PTR [rbp-0x50]
  40e273:	je     40e372 <_start@@Base+0xb062>
  40e279:	mov    rax,QWORD PTR [rbp-0x48]
  40e27d:	mov    rax,QWORD PTR [rax]
  40e280:	mov    rdi,rax
  40e283:	call   4179d4 <flatcc_builder_start_offset_vector@@Base>
  40e288:	test   eax,eax
  40e28a:	jne    410429 <_start@@Base+0xd119>
  40e290:	lea    rcx,[rbp-0x40]
  40e294:	mov    rdx,QWORD PTR [rbp-0x58]
  40e298:	mov    rsi,QWORD PTR [rbp-0x50]
  40e29c:	mov    rax,QWORD PTR [rbp-0x48]
  40e2a0:	mov    rdi,rax
  40e2a3:	call   4040d1 <_start@@Base+0xdc1>
  40e2a8:	mov    QWORD PTR [rbp-0x50],rax
  40e2ac:	jmp    40e31d <_start@@Base+0xb00d>
  40e2ae:	lea    rcx,[rbp-0x3c]
  40e2b2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e2b6:	mov    rsi,QWORD PTR [rbp-0x50]
  40e2ba:	mov    rax,QWORD PTR [rbp-0x48]
  40e2be:	mov    rdi,rax
  40e2c1:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40e2c6:	mov    QWORD PTR [rbp-0x50],rax
  40e2ca:	mov    eax,DWORD PTR [rbp-0x3c]
  40e2cd:	test   eax,eax
  40e2cf:	je     41042f <_start@@Base+0xd11f>
  40e2d5:	mov    rax,QWORD PTR [rbp-0x48]
  40e2d9:	mov    rax,QWORD PTR [rax]
  40e2dc:	mov    esi,0x1
  40e2e1:	mov    rdi,rax
  40e2e4:	call   4173b3 <flatcc_builder_extend_offset_vector@@Base>
  40e2e9:	mov    QWORD PTR [rbp-0x18],rax
  40e2ed:	cmp    QWORD PTR [rbp-0x18],0x0
  40e2f2:	je     41042f <_start@@Base+0xd11f>
  40e2f8:	mov    edx,DWORD PTR [rbp-0x3c]
  40e2fb:	mov    rax,QWORD PTR [rbp-0x18]
  40e2ff:	mov    DWORD PTR [rax],edx
  40e301:	lea    rcx,[rbp-0x40]
  40e305:	mov    rdx,QWORD PTR [rbp-0x58]
  40e309:	mov    rsi,QWORD PTR [rbp-0x50]
  40e30d:	mov    rax,QWORD PTR [rbp-0x48]
  40e311:	mov    rdi,rax
  40e314:	call   40418e <_start@@Base+0xe7e>
  40e319:	mov    QWORD PTR [rbp-0x50],rax
  40e31d:	mov    eax,DWORD PTR [rbp-0x40]
  40e320:	test   eax,eax
  40e322:	jne    40e2ae <_start@@Base+0xaf9e>
  40e324:	mov    rax,QWORD PTR [rbp-0x48]
  40e328:	mov    rax,QWORD PTR [rax]
  40e32b:	mov    rdi,rax
  40e32e:	call   418fd1 <flatcc_builder_end_offset_vector@@Base>
  40e333:	mov    DWORD PTR [rbp-0x3c],eax
  40e336:	mov    eax,DWORD PTR [rbp-0x3c]
  40e339:	test   eax,eax
  40e33b:	je     410435 <_start@@Base+0xd125>
  40e341:	mov    rax,QWORD PTR [rbp-0x48]
  40e345:	mov    rax,QWORD PTR [rax]
  40e348:	mov    esi,0x1c
  40e34d:	mov    rdi,rax
  40e350:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40e355:	mov    QWORD PTR [rbp-0x18],rax
  40e359:	cmp    QWORD PTR [rbp-0x18],0x0
  40e35e:	je     410435 <_start@@Base+0xd125>
  40e364:	mov    edx,DWORD PTR [rbp-0x3c]
  40e367:	mov    rax,QWORD PTR [rbp-0x18]
  40e36b:	mov    DWORD PTR [rax],edx
  40e36d:	jmp    4102a9 <_start@@Base+0xcf99>
  40e372:	mov    rdx,QWORD PTR [rbp-0x58]
  40e376:	mov    rcx,QWORD PTR [rbp-0x50]
  40e37a:	mov    rax,QWORD PTR [rbp-0x48]
  40e37e:	mov    rsi,rcx
  40e381:	mov    rdi,rax
  40e384:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e389:	mov    QWORD PTR [rbp-0x50],rax
  40e38d:	jmp    4102a9 <_start@@Base+0xcf99>
  40e392:	movabs rax,0xff00000000000000
  40e39c:	and    rax,QWORD PTR [rbp-0x28]
  40e3a0:	mov    rdx,rax
  40e3a3:	movabs rax,0x6700000000000000
  40e3ad:	cmp    rdx,rax
  40e3b0:	jne    40e502 <_start@@Base+0xb1f2>
  40e3b6:	mov    rax,QWORD PTR [rbp-0x50]
  40e3ba:	mov    QWORD PTR [rbp-0x20],rax
  40e3be:	mov    rdx,QWORD PTR [rbp-0x58]
  40e3c2:	mov    rsi,QWORD PTR [rbp-0x20]
  40e3c6:	mov    rax,QWORD PTR [rbp-0x48]
  40e3ca:	mov    ecx,0x1
  40e3cf:	mov    rdi,rax
  40e3d2:	call   4042cc <_start@@Base+0xfbc>
  40e3d7:	mov    QWORD PTR [rbp-0x50],rax
  40e3db:	mov    rax,QWORD PTR [rbp-0x20]
  40e3df:	cmp    rax,QWORD PTR [rbp-0x50]
  40e3e3:	je     40e4e2 <_start@@Base+0xb1d2>
  40e3e9:	mov    rax,QWORD PTR [rbp-0x48]
  40e3ed:	mov    rax,QWORD PTR [rax]
  40e3f0:	mov    rdi,rax
  40e3f3:	call   4179d4 <flatcc_builder_start_offset_vector@@Base>
  40e3f8:	test   eax,eax
  40e3fa:	jne    41043b <_start@@Base+0xd12b>
  40e400:	lea    rcx,[rbp-0x40]
  40e404:	mov    rdx,QWORD PTR [rbp-0x58]
  40e408:	mov    rsi,QWORD PTR [rbp-0x50]
  40e40c:	mov    rax,QWORD PTR [rbp-0x48]
  40e410:	mov    rdi,rax
  40e413:	call   4040d1 <_start@@Base+0xdc1>
  40e418:	mov    QWORD PTR [rbp-0x50],rax
  40e41c:	jmp    40e48d <_start@@Base+0xb17d>
  40e41e:	lea    rcx,[rbp-0x3c]
  40e422:	mov    rdx,QWORD PTR [rbp-0x58]
  40e426:	mov    rsi,QWORD PTR [rbp-0x50]
  40e42a:	mov    rax,QWORD PTR [rbp-0x48]
  40e42e:	mov    rdi,rax
  40e431:	call   420b07 <flatcc_json_parser_build_string@@Base>
  40e436:	mov    QWORD PTR [rbp-0x50],rax
  40e43a:	mov    eax,DWORD PTR [rbp-0x3c]
  40e43d:	test   eax,eax
  40e43f:	je     410441 <_start@@Base+0xd131>
  40e445:	mov    rax,QWORD PTR [rbp-0x48]
  40e449:	mov    rax,QWORD PTR [rax]
  40e44c:	mov    esi,0x1
  40e451:	mov    rdi,rax
  40e454:	call   4173b3 <flatcc_builder_extend_offset_vector@@Base>
  40e459:	mov    QWORD PTR [rbp-0x18],rax
  40e45d:	cmp    QWORD PTR [rbp-0x18],0x0
  40e462:	je     410441 <_start@@Base+0xd131>
  40e468:	mov    edx,DWORD PTR [rbp-0x3c]
  40e46b:	mov    rax,QWORD PTR [rbp-0x18]
  40e46f:	mov    DWORD PTR [rax],edx
  40e471:	lea    rcx,[rbp-0x40]
  40e475:	mov    rdx,QWORD PTR [rbp-0x58]
  40e479:	mov    rsi,QWORD PTR [rbp-0x50]
  40e47d:	mov    rax,QWORD PTR [rbp-0x48]
  40e481:	mov    rdi,rax
  40e484:	call   40418e <_start@@Base+0xe7e>
  40e489:	mov    QWORD PTR [rbp-0x50],rax
  40e48d:	mov    eax,DWORD PTR [rbp-0x40]
  40e490:	test   eax,eax
  40e492:	jne    40e41e <_start@@Base+0xb10e>
  40e494:	mov    rax,QWORD PTR [rbp-0x48]
  40e498:	mov    rax,QWORD PTR [rax]
  40e49b:	mov    rdi,rax
  40e49e:	call   418fd1 <flatcc_builder_end_offset_vector@@Base>
  40e4a3:	mov    DWORD PTR [rbp-0x3c],eax
  40e4a6:	mov    eax,DWORD PTR [rbp-0x3c]
  40e4a9:	test   eax,eax
  40e4ab:	je     410447 <_start@@Base+0xd137>
  40e4b1:	mov    rax,QWORD PTR [rbp-0x48]
  40e4b5:	mov    rax,QWORD PTR [rax]
  40e4b8:	mov    esi,0xa
  40e4bd:	mov    rdi,rax
  40e4c0:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40e4c5:	mov    QWORD PTR [rbp-0x18],rax
  40e4c9:	cmp    QWORD PTR [rbp-0x18],0x0
  40e4ce:	je     410447 <_start@@Base+0xd137>
  40e4d4:	mov    edx,DWORD PTR [rbp-0x3c]
  40e4d7:	mov    rax,QWORD PTR [rbp-0x18]
  40e4db:	mov    DWORD PTR [rax],edx
  40e4dd:	jmp    4102a9 <_start@@Base+0xcf99>
  40e4e2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4e6:	mov    rcx,QWORD PTR [rbp-0x50]
  40e4ea:	mov    rax,QWORD PTR [rbp-0x48]
  40e4ee:	mov    rsi,rcx
  40e4f1:	mov    rdi,rax
  40e4f4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e4f9:	mov    QWORD PTR [rbp-0x50],rax
  40e4fd:	jmp    4102a9 <_start@@Base+0xcf99>
  40e502:	mov    rdx,QWORD PTR [rbp-0x58]
  40e506:	mov    rcx,QWORD PTR [rbp-0x50]
  40e50a:	mov    rax,QWORD PTR [rbp-0x48]
  40e50e:	mov    rsi,rcx
  40e511:	mov    rdi,rax
  40e514:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e519:	mov    QWORD PTR [rbp-0x50],rax
  40e51d:	jmp    4102a9 <_start@@Base+0xcf99>
  40e522:	movabs rax,0x796f667461626c65
  40e52c:	cmp    QWORD PTR [rbp-0x28],rax
  40e530:	jne    40e6e2 <_start@@Base+0xb3d2>
  40e536:	add    QWORD PTR [rbp-0x50],0x8
  40e53b:	mov    rdx,QWORD PTR [rbp-0x58]
  40e53f:	mov    rax,QWORD PTR [rbp-0x50]
  40e543:	mov    rsi,rdx
  40e546:	mov    rdi,rax
  40e549:	call   403dd5 <_start@@Base+0xac5>
  40e54e:	mov    QWORD PTR [rbp-0x28],rax
  40e552:	movabs rax,0xff00000000000000
  40e55c:	and    rax,QWORD PTR [rbp-0x28]
  40e560:	mov    rdx,rax
  40e563:	movabs rax,0x7300000000000000
  40e56d:	cmp    rdx,rax
  40e570:	jne    40e6c2 <_start@@Base+0xb3b2>
  40e576:	mov    rax,QWORD PTR [rbp-0x50]
  40e57a:	mov    QWORD PTR [rbp-0x20],rax
  40e57e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e582:	mov    rsi,QWORD PTR [rbp-0x20]
  40e586:	mov    rax,QWORD PTR [rbp-0x48]
  40e58a:	mov    ecx,0x1
  40e58f:	mov    rdi,rax
  40e592:	call   4042cc <_start@@Base+0xfbc>
  40e597:	mov    QWORD PTR [rbp-0x50],rax
  40e59b:	mov    rax,QWORD PTR [rbp-0x20]
  40e59f:	cmp    rax,QWORD PTR [rbp-0x50]
  40e5a3:	je     40e6a2 <_start@@Base+0xb392>
  40e5a9:	mov    rax,QWORD PTR [rbp-0x48]
  40e5ad:	mov    rax,QWORD PTR [rax]
  40e5b0:	mov    rdi,rax
  40e5b3:	call   4179d4 <flatcc_builder_start_offset_vector@@Base>
  40e5b8:	test   eax,eax
  40e5ba:	jne    41044d <_start@@Base+0xd13d>
  40e5c0:	lea    rcx,[rbp-0x40]
  40e5c4:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5c8:	mov    rsi,QWORD PTR [rbp-0x50]
  40e5cc:	mov    rax,QWORD PTR [rbp-0x48]
  40e5d0:	mov    rdi,rax
  40e5d3:	call   4040d1 <_start@@Base+0xdc1>
  40e5d8:	mov    QWORD PTR [rbp-0x50],rax
  40e5dc:	jmp    40e64d <_start@@Base+0xb33d>
  40e5de:	lea    rcx,[rbp-0x3c]
  40e5e2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5e6:	mov    rsi,QWORD PTR [rbp-0x50]
  40e5ea:	mov    rax,QWORD PTR [rbp-0x48]
  40e5ee:	mov    rdi,rax
  40e5f1:	call   40cbc1 <_start@@Base+0x98b1>
  40e5f6:	mov    QWORD PTR [rbp-0x50],rax
  40e5fa:	mov    eax,DWORD PTR [rbp-0x3c]
  40e5fd:	test   eax,eax
  40e5ff:	je     410453 <_start@@Base+0xd143>
  40e605:	mov    rax,QWORD PTR [rbp-0x48]
  40e609:	mov    rax,QWORD PTR [rax]
  40e60c:	mov    esi,0x1
  40e611:	mov    rdi,rax
  40e614:	call   4173b3 <flatcc_builder_extend_offset_vector@@Base>
  40e619:	mov    QWORD PTR [rbp-0x18],rax
  40e61d:	cmp    QWORD PTR [rbp-0x18],0x0
  40e622:	je     410453 <_start@@Base+0xd143>
  40e628:	mov    edx,DWORD PTR [rbp-0x3c]
  40e62b:	mov    rax,QWORD PTR [rbp-0x18]
  40e62f:	mov    DWORD PTR [rax],edx
  40e631:	lea    rcx,[rbp-0x40]
  40e635:	mov    rdx,QWORD PTR [rbp-0x58]
  40e639:	mov    rsi,QWORD PTR [rbp-0x50]
  40e63d:	mov    rax,QWORD PTR [rbp-0x48]
  40e641:	mov    rdi,rax
  40e644:	call   40418e <_start@@Base+0xe7e>
  40e649:	mov    QWORD PTR [rbp-0x50],rax
  40e64d:	mov    eax,DWORD PTR [rbp-0x40]
  40e650:	test   eax,eax
  40e652:	jne    40e5de <_start@@Base+0xb2ce>
  40e654:	mov    rax,QWORD PTR [rbp-0x48]
  40e658:	mov    rax,QWORD PTR [rax]
  40e65b:	mov    rdi,rax
  40e65e:	call   418fd1 <flatcc_builder_end_offset_vector@@Base>
  40e663:	mov    DWORD PTR [rbp-0x3c],eax
  40e666:	mov    eax,DWORD PTR [rbp-0x3c]
  40e669:	test   eax,eax
  40e66b:	je     410456 <_start@@Base+0xd146>
  40e671:	mov    rax,QWORD PTR [rbp-0x48]
  40e675:	mov    rax,QWORD PTR [rax]
  40e678:	mov    esi,0xb
  40e67d:	mov    rdi,rax
  40e680:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40e685:	mov    QWORD PTR [rbp-0x18],rax
  40e689:	cmp    QWORD PTR [rbp-0x18],0x0
  40e68e:	je     410456 <_start@@Base+0xd146>
  40e694:	mov    edx,DWORD PTR [rbp-0x3c]
  40e697:	mov    rax,QWORD PTR [rbp-0x18]
  40e69b:	mov    DWORD PTR [rax],edx
  40e69d:	jmp    4102a9 <_start@@Base+0xcf99>
  40e6a2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6a6:	mov    rcx,QWORD PTR [rbp-0x50]
  40e6aa:	mov    rax,QWORD PTR [rbp-0x48]
  40e6ae:	mov    rsi,rcx
  40e6b1:	mov    rdi,rax
  40e6b4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e6b9:	mov    QWORD PTR [rbp-0x50],rax
  40e6bd:	jmp    4102a9 <_start@@Base+0xcf99>
  40e6c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6c6:	mov    rcx,QWORD PTR [rbp-0x50]
  40e6ca:	mov    rax,QWORD PTR [rbp-0x48]
  40e6ce:	mov    rsi,rcx
  40e6d1:	mov    rdi,rax
  40e6d4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e6d9:	mov    QWORD PTR [rbp-0x50],rax
  40e6dd:	jmp    4102a9 <_start@@Base+0xcf99>
  40e6e2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6e6:	mov    rcx,QWORD PTR [rbp-0x50]
  40e6ea:	mov    rax,QWORD PTR [rbp-0x48]
  40e6ee:	mov    rsi,rcx
  40e6f1:	mov    rdi,rax
  40e6f4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e6f9:	mov    QWORD PTR [rbp-0x50],rax
  40e6fd:	jmp    4102a9 <_start@@Base+0xcf99>
  40e702:	movabs rax,0x74657374656d7073
  40e70c:	cmp    QWORD PTR [rbp-0x28],rax
  40e710:	ja     40e995 <_start@@Base+0xb685>
  40e716:	movabs rax,0x7465737462617365
  40e720:	cmp    QWORD PTR [rbp-0x28],rax
  40e724:	jne    40e831 <_start@@Base+0xb521>
  40e72a:	add    QWORD PTR [rbp-0x50],0x8
  40e72f:	mov    rdx,QWORD PTR [rbp-0x58]
  40e733:	mov    rax,QWORD PTR [rbp-0x50]
  40e737:	mov    rsi,rdx
  40e73a:	mov    rdi,rax
  40e73d:	call   403dd5 <_start@@Base+0xac5>
  40e742:	mov    QWORD PTR [rbp-0x28],rax
  40e746:	movabs rax,0xffff000000000000
  40e750:	and    rax,QWORD PTR [rbp-0x28]
  40e754:	mov    rdx,rax
  40e757:	movabs rax,0x3634000000000000
  40e761:	cmp    rdx,rax
  40e764:	jne    40e811 <_start@@Base+0xb501>
  40e76a:	mov    rax,QWORD PTR [rbp-0x50]
  40e76e:	mov    QWORD PTR [rbp-0x20],rax
  40e772:	mov    rdx,QWORD PTR [rbp-0x58]
  40e776:	mov    rsi,QWORD PTR [rbp-0x20]
  40e77a:	mov    rax,QWORD PTR [rbp-0x48]
  40e77e:	mov    ecx,0x2
  40e783:	mov    rdi,rax
  40e786:	call   4042cc <_start@@Base+0xfbc>
  40e78b:	mov    QWORD PTR [rbp-0x50],rax
  40e78f:	mov    rax,QWORD PTR [rbp-0x20]
  40e793:	cmp    rax,QWORD PTR [rbp-0x50]
  40e797:	je     40e7f1 <_start@@Base+0xb4e1>
  40e799:	lea    rcx,[rbp-0x3c]
  40e79d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e7a1:	mov    rsi,QWORD PTR [rbp-0x50]
  40e7a5:	mov    rax,QWORD PTR [rbp-0x48]
  40e7a9:	mov    rdi,rax
  40e7ac:	call   40c7d7 <_start@@Base+0x94c7>
  40e7b1:	mov    QWORD PTR [rbp-0x50],rax
  40e7b5:	mov    eax,DWORD PTR [rbp-0x3c]
  40e7b8:	test   eax,eax
  40e7ba:	je     410459 <_start@@Base+0xd149>
  40e7c0:	mov    rax,QWORD PTR [rbp-0x48]
  40e7c4:	mov    rax,QWORD PTR [rax]
  40e7c7:	mov    esi,0x23
  40e7cc:	mov    rdi,rax
  40e7cf:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40e7d4:	mov    QWORD PTR [rbp-0x18],rax
  40e7d8:	cmp    QWORD PTR [rbp-0x18],0x0
  40e7dd:	je     410459 <_start@@Base+0xd149>
  40e7e3:	mov    edx,DWORD PTR [rbp-0x3c]
  40e7e6:	mov    rax,QWORD PTR [rbp-0x18]
  40e7ea:	mov    DWORD PTR [rax],edx
  40e7ec:	jmp    4102a9 <_start@@Base+0xcf99>
  40e7f1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e7f5:	mov    rcx,QWORD PTR [rbp-0x50]
  40e7f9:	mov    rax,QWORD PTR [rbp-0x48]
  40e7fd:	mov    rsi,rcx
  40e800:	mov    rdi,rax
  40e803:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e808:	mov    QWORD PTR [rbp-0x50],rax
  40e80c:	jmp    4102a9 <_start@@Base+0xcf99>
  40e811:	mov    rdx,QWORD PTR [rbp-0x58]
  40e815:	mov    rcx,QWORD PTR [rbp-0x50]
  40e819:	mov    rax,QWORD PTR [rbp-0x48]
  40e81d:	mov    rsi,rcx
  40e820:	mov    rdi,rax
  40e823:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e828:	mov    QWORD PTR [rbp-0x50],rax
  40e82c:	jmp    4102a9 <_start@@Base+0xcf99>
  40e831:	movabs rax,0x74657374626f6f6c
  40e83b:	cmp    QWORD PTR [rbp-0x28],rax
  40e83f:	jne    40e975 <_start@@Base+0xb665>
  40e845:	mov    rax,QWORD PTR [rbp-0x50]
  40e849:	mov    QWORD PTR [rbp-0x20],rax
  40e84d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e851:	mov    rsi,QWORD PTR [rbp-0x20]
  40e855:	mov    rax,QWORD PTR [rbp-0x48]
  40e859:	mov    ecx,0x8
  40e85e:	mov    rdi,rax
  40e861:	call   4042cc <_start@@Base+0xfbc>
  40e866:	mov    QWORD PTR [rbp-0x50],rax
  40e86a:	mov    rax,QWORD PTR [rbp-0x20]
  40e86e:	cmp    rax,QWORD PTR [rbp-0x50]
  40e872:	je     40e955 <_start@@Base+0xb645>
  40e878:	mov    BYTE PTR [rbp-0x30],0x0
  40e87c:	mov    rax,QWORD PTR [rbp-0x50]
  40e880:	mov    QWORD PTR [rbp-0x20],rax
  40e884:	lea    rcx,[rbp-0x30]
  40e888:	mov    rdx,QWORD PTR [rbp-0x58]
  40e88c:	mov    rsi,QWORD PTR [rbp-0x20]
  40e890:	mov    rax,QWORD PTR [rbp-0x48]
  40e894:	mov    rdi,rax
  40e897:	call   404fdd <_start@@Base+0x1ccd>
  40e89c:	mov    QWORD PTR [rbp-0x50],rax
  40e8a0:	mov    rax,QWORD PTR [rbp-0x20]
  40e8a4:	cmp    rax,QWORD PTR [rbp-0x50]
  40e8a8:	jne    40e8f4 <_start@@Base+0xb5e4>
  40e8aa:	mov    rax,QWORD PTR [rbp-0x50]
  40e8ae:	mov    QWORD PTR [rbp-0x20],rax
  40e8b2:	lea    rcx,[rbp-0x30]
  40e8b6:	mov    rdx,QWORD PTR [rbp-0x58]
  40e8ba:	mov    rsi,QWORD PTR [rbp-0x20]
  40e8be:	mov    rax,QWORD PTR [rbp-0x48]
  40e8c2:	mov    r8,rcx
  40e8c5:	lea    rcx,[rip+0x1bd14]        # 42a5e0 <filename@@Base+0x4e0>
  40e8cc:	mov    rdi,rax
  40e8cf:	call   405da7 <_start@@Base+0x2a97>
  40e8d4:	mov    QWORD PTR [rbp-0x50],rax
  40e8d8:	mov    rax,QWORD PTR [rbp-0x50]
  40e8dc:	cmp    rax,QWORD PTR [rbp-0x20]
  40e8e0:	je     41045c <_start@@Base+0xd14c>
  40e8e6:	mov    rax,QWORD PTR [rbp-0x50]
  40e8ea:	cmp    rax,QWORD PTR [rbp-0x58]
  40e8ee:	je     41045c <_start@@Base+0xd14c>
  40e8f4:	movzx  eax,BYTE PTR [rbp-0x30]
  40e8f8:	cmp    al,0x1
  40e8fa:	jne    40e90e <_start@@Base+0xb5fe>
  40e8fc:	mov    rax,QWORD PTR [rbp-0x48]
  40e900:	mov    eax,DWORD PTR [rax+0x10]
  40e903:	and    eax,0x2
  40e906:	test   eax,eax
  40e908:	je     4102a9 <_start@@Base+0xcf99>
  40e90e:	mov    rax,QWORD PTR [rbp-0x48]
  40e912:	mov    rax,QWORD PTR [rax]
  40e915:	mov    ecx,0x1
  40e91a:	mov    edx,0x1
  40e91f:	mov    esi,0xf
  40e924:	mov    rdi,rax
  40e927:	call   419d30 <flatcc_builder_table_add@@Base>
  40e92c:	mov    QWORD PTR [rbp-0x10],rax
  40e930:	cmp    QWORD PTR [rbp-0x10],0x0
  40e935:	je     41045f <_start@@Base+0xd14f>
  40e93b:	movzx  eax,BYTE PTR [rbp-0x30]
  40e93f:	movzx  edx,al
  40e942:	mov    rax,QWORD PTR [rbp-0x10]
  40e946:	mov    esi,edx
  40e948:	mov    rdi,rax
  40e94b:	call   40373e <_start@@Base+0x42e>
  40e950:	jmp    4102a9 <_start@@Base+0xcf99>
  40e955:	mov    rdx,QWORD PTR [rbp-0x58]
  40e959:	mov    rcx,QWORD PTR [rbp-0x50]
  40e95d:	mov    rax,QWORD PTR [rbp-0x48]
  40e961:	mov    rsi,rcx
  40e964:	mov    rdi,rax
  40e967:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e96c:	mov    QWORD PTR [rbp-0x50],rax
  40e970:	jmp    4102a9 <_start@@Base+0xcf99>
  40e975:	mov    rdx,QWORD PTR [rbp-0x58]
  40e979:	mov    rcx,QWORD PTR [rbp-0x50]
  40e97d:	mov    rax,QWORD PTR [rbp-0x48]
  40e981:	mov    rsi,rcx
  40e984:	mov    rdi,rax
  40e987:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40e98c:	mov    QWORD PTR [rbp-0x50],rax
  40e990:	jmp    4102a9 <_start@@Base+0xcf99>
  40e995:	movabs rax,0x7465737465ffffff
  40e99f:	cmp    QWORD PTR [rbp-0x28],rax
  40e9a3:	ja     40eae4 <_start@@Base+0xb7d4>
  40e9a9:	movabs rax,0x74657374656d7074
  40e9b3:	cmp    QWORD PTR [rbp-0x28],rax
  40e9b7:	jne    40eac4 <_start@@Base+0xb7b4>
  40e9bd:	add    QWORD PTR [rbp-0x50],0x8
  40e9c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e9c6:	mov    rax,QWORD PTR [rbp-0x50]
  40e9ca:	mov    rsi,rdx
  40e9cd:	mov    rdi,rax
  40e9d0:	call   403dd5 <_start@@Base+0xac5>
  40e9d5:	mov    QWORD PTR [rbp-0x28],rax
  40e9d9:	movabs rax,0xff00000000000000
  40e9e3:	and    rax,QWORD PTR [rbp-0x28]
  40e9e7:	mov    rdx,rax
  40e9ea:	movabs rax,0x7900000000000000
  40e9f4:	cmp    rdx,rax
  40e9f7:	jne    40eaa4 <_start@@Base+0xb794>
  40e9fd:	mov    rax,QWORD PTR [rbp-0x50]
  40ea01:	mov    QWORD PTR [rbp-0x20],rax
  40ea05:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea09:	mov    rsi,QWORD PTR [rbp-0x20]
  40ea0d:	mov    rax,QWORD PTR [rbp-0x48]
  40ea11:	mov    ecx,0x1
  40ea16:	mov    rdi,rax
  40ea19:	call   4042cc <_start@@Base+0xfbc>
  40ea1e:	mov    QWORD PTR [rbp-0x50],rax
  40ea22:	mov    rax,QWORD PTR [rbp-0x20]
  40ea26:	cmp    rax,QWORD PTR [rbp-0x50]
  40ea2a:	je     40ea84 <_start@@Base+0xb774>
  40ea2c:	lea    rcx,[rbp-0x3c]
  40ea30:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea34:	mov    rsi,QWORD PTR [rbp-0x50]
  40ea38:	mov    rax,QWORD PTR [rbp-0x48]
  40ea3c:	mov    rdi,rax
  40ea3f:	call   40a527 <_start@@Base+0x7217>
  40ea44:	mov    QWORD PTR [rbp-0x50],rax
  40ea48:	mov    eax,DWORD PTR [rbp-0x3c]
  40ea4b:	test   eax,eax
  40ea4d:	je     410462 <_start@@Base+0xd152>
  40ea53:	mov    rax,QWORD PTR [rbp-0x48]
  40ea57:	mov    rax,QWORD PTR [rax]
  40ea5a:	mov    esi,0xe
  40ea5f:	mov    rdi,rax
  40ea62:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40ea67:	mov    QWORD PTR [rbp-0x18],rax
  40ea6b:	cmp    QWORD PTR [rbp-0x18],0x0
  40ea70:	je     410462 <_start@@Base+0xd152>
  40ea76:	mov    edx,DWORD PTR [rbp-0x3c]
  40ea79:	mov    rax,QWORD PTR [rbp-0x18]
  40ea7d:	mov    DWORD PTR [rax],edx
  40ea7f:	jmp    4102a9 <_start@@Base+0xcf99>
  40ea84:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea88:	mov    rcx,QWORD PTR [rbp-0x50]
  40ea8c:	mov    rax,QWORD PTR [rbp-0x48]
  40ea90:	mov    rsi,rcx
  40ea93:	mov    rdi,rax
  40ea96:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ea9b:	mov    QWORD PTR [rbp-0x50],rax
  40ea9f:	jmp    4102a9 <_start@@Base+0xcf99>
  40eaa4:	mov    rdx,QWORD PTR [rbp-0x58]
  40eaa8:	mov    rcx,QWORD PTR [rbp-0x50]
  40eaac:	mov    rax,QWORD PTR [rbp-0x48]
  40eab0:	mov    rsi,rcx
  40eab3:	mov    rdi,rax
  40eab6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40eabb:	mov    QWORD PTR [rbp-0x50],rax
  40eabf:	jmp    4102a9 <_start@@Base+0xcf99>
  40eac4:	mov    rdx,QWORD PTR [rbp-0x58]
  40eac8:	mov    rcx,QWORD PTR [rbp-0x50]
  40eacc:	mov    rax,QWORD PTR [rbp-0x48]
  40ead0:	mov    rsi,rcx
  40ead3:	mov    rdi,rax
  40ead6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40eadb:	mov    QWORD PTR [rbp-0x50],rax
  40eadf:	jmp    4102a9 <_start@@Base+0xcf99>
  40eae4:	mov    rax,QWORD PTR [rbp-0x28]
  40eae8:	mov    ax,0x0
  40eaec:	mov    rdx,rax
  40eaef:	movabs rax,0x7465737466320000
  40eaf9:	cmp    rdx,rax
  40eafc:	jne    40ec46 <_start@@Base+0xb936>
  40eb02:	mov    rax,QWORD PTR [rbp-0x50]
  40eb06:	mov    QWORD PTR [rbp-0x20],rax
  40eb0a:	mov    rdx,QWORD PTR [rbp-0x58]
  40eb0e:	mov    rsi,QWORD PTR [rbp-0x20]
  40eb12:	mov    rax,QWORD PTR [rbp-0x48]
  40eb16:	mov    ecx,0x6
  40eb1b:	mov    rdi,rax
  40eb1e:	call   4042cc <_start@@Base+0xfbc>
  40eb23:	mov    QWORD PTR [rbp-0x50],rax
  40eb27:	mov    rax,QWORD PTR [rbp-0x20]
  40eb2b:	cmp    rax,QWORD PTR [rbp-0x50]
  40eb2f:	je     40ec26 <_start@@Base+0xb916>
  40eb35:	vxorps xmm0,xmm0,xmm0
  40eb39:	vmovss DWORD PTR [rbp-0x30],xmm0
  40eb3e:	mov    rax,QWORD PTR [rbp-0x50]
  40eb42:	mov    QWORD PTR [rbp-0x20],rax
  40eb46:	lea    rcx,[rbp-0x30]
  40eb4a:	mov    rdx,QWORD PTR [rbp-0x58]
  40eb4e:	mov    rsi,QWORD PTR [rbp-0x20]
  40eb52:	mov    rax,QWORD PTR [rbp-0x48]
  40eb56:	mov    rdi,rax
  40eb59:	call   420037 <flatcc_json_parser_float@@Base>
  40eb5e:	mov    QWORD PTR [rbp-0x50],rax
  40eb62:	mov    rax,QWORD PTR [rbp-0x20]
  40eb66:	cmp    rax,QWORD PTR [rbp-0x50]
  40eb6a:	jne    40ebb6 <_start@@Base+0xb8a6>
  40eb6c:	mov    rax,QWORD PTR [rbp-0x50]
  40eb70:	mov    QWORD PTR [rbp-0x20],rax
  40eb74:	lea    rcx,[rbp-0x30]
  40eb78:	mov    rdx,QWORD PTR [rbp-0x58]
  40eb7c:	mov    rsi,QWORD PTR [rbp-0x20]
  40eb80:	mov    rax,QWORD PTR [rbp-0x48]
  40eb84:	mov    r8,rcx
  40eb87:	lea    rcx,[rip+0x1ba72]        # 42a600 <filename@@Base+0x500>
  40eb8e:	mov    rdi,rax
  40eb91:	call   405f3d <_start@@Base+0x2c2d>
  40eb96:	mov    QWORD PTR [rbp-0x50],rax
  40eb9a:	mov    rax,QWORD PTR [rbp-0x50]
  40eb9e:	cmp    rax,QWORD PTR [rbp-0x20]
  40eba2:	je     410465 <_start@@Base+0xd155>
  40eba8:	mov    rax,QWORD PTR [rbp-0x50]
  40ebac:	cmp    rax,QWORD PTR [rbp-0x58]
  40ebb0:	je     410465 <_start@@Base+0xd155>
  40ebb6:	vmovss xmm0,DWORD PTR [rbp-0x30]
  40ebbb:	vucomiss xmm0,DWORD PTR [rip+0x1379d]        # 422360 <_IO_stdin_used@@Base+0x360>
  40ebc3:	jp     40ebe1 <_start@@Base+0xb8d1>
  40ebc5:	vucomiss xmm0,DWORD PTR [rip+0x13793]        # 422360 <_IO_stdin_used@@Base+0x360>
  40ebcd:	jne    40ebe1 <_start@@Base+0xb8d1>
  40ebcf:	mov    rax,QWORD PTR [rbp-0x48]
  40ebd3:	mov    eax,DWORD PTR [rax+0x10]
  40ebd6:	and    eax,0x2
  40ebd9:	test   eax,eax
  40ebdb:	je     4102a9 <_start@@Base+0xcf99>
  40ebe1:	mov    rax,QWORD PTR [rbp-0x48]
  40ebe5:	mov    rax,QWORD PTR [rax]
  40ebe8:	mov    ecx,0x4
  40ebed:	mov    edx,0x4
  40ebf2:	mov    esi,0x1a
  40ebf7:	mov    rdi,rax
  40ebfa:	call   419d30 <flatcc_builder_table_add@@Base>
  40ebff:	mov    QWORD PTR [rbp-0x10],rax
  40ec03:	cmp    QWORD PTR [rbp-0x10],0x0
  40ec08:	je     410468 <_start@@Base+0xd158>
  40ec0e:	mov    edx,DWORD PTR [rbp-0x30]
  40ec11:	mov    rax,QWORD PTR [rbp-0x10]
  40ec15:	vmovd  xmm0,edx
  40ec19:	mov    rdi,rax
  40ec1c:	call   403656 <_start@@Base+0x346>
  40ec21:	jmp    4102a9 <_start@@Base+0xcf99>
  40ec26:	mov    rdx,QWORD PTR [rbp-0x58]
  40ec2a:	mov    rcx,QWORD PTR [rbp-0x50]
  40ec2e:	mov    rax,QWORD PTR [rbp-0x48]
  40ec32:	mov    rsi,rcx
  40ec35:	mov    rdi,rax
  40ec38:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ec3d:	mov    QWORD PTR [rbp-0x50],rax
  40ec41:	jmp    4102a9 <_start@@Base+0xcf99>
  40ec46:	mov    rax,QWORD PTR [rbp-0x28]
  40ec4a:	and    rax,0xffffffffff000000
  40ec50:	mov    rdx,rax
  40ec53:	movabs rax,0x7465737466000000
  40ec5d:	cmp    rdx,rax
  40ec60:	jne    40edaa <_start@@Base+0xba9a>
  40ec66:	mov    rax,QWORD PTR [rbp-0x50]
  40ec6a:	mov    QWORD PTR [rbp-0x20],rax
  40ec6e:	mov    rdx,QWORD PTR [rbp-0x58]
  40ec72:	mov    rsi,QWORD PTR [rbp-0x20]
  40ec76:	mov    rax,QWORD PTR [rbp-0x48]
  40ec7a:	mov    ecx,0x5
  40ec7f:	mov    rdi,rax
  40ec82:	call   4042cc <_start@@Base+0xfbc>
  40ec87:	mov    QWORD PTR [rbp-0x50],rax
  40ec8b:	mov    rax,QWORD PTR [rbp-0x20]
  40ec8f:	cmp    rax,QWORD PTR [rbp-0x50]
  40ec93:	je     40ed8a <_start@@Base+0xba7a>
  40ec99:	vxorps xmm0,xmm0,xmm0
  40ec9d:	vmovss DWORD PTR [rbp-0x30],xmm0
  40eca2:	mov    rax,QWORD PTR [rbp-0x50]
  40eca6:	mov    QWORD PTR [rbp-0x20],rax
  40ecaa:	lea    rcx,[rbp-0x30]
  40ecae:	mov    rdx,QWORD PTR [rbp-0x58]
  40ecb2:	mov    rsi,QWORD PTR [rbp-0x20]
  40ecb6:	mov    rax,QWORD PTR [rbp-0x48]
  40ecba:	mov    rdi,rax
  40ecbd:	call   420037 <flatcc_json_parser_float@@Base>
  40ecc2:	mov    QWORD PTR [rbp-0x50],rax
  40ecc6:	mov    rax,QWORD PTR [rbp-0x20]
  40ecca:	cmp    rax,QWORD PTR [rbp-0x50]
  40ecce:	jne    40ed1a <_start@@Base+0xba0a>
  40ecd0:	mov    rax,QWORD PTR [rbp-0x50]
  40ecd4:	mov    QWORD PTR [rbp-0x20],rax
  40ecd8:	lea    rcx,[rbp-0x30]
  40ecdc:	mov    rdx,QWORD PTR [rbp-0x58]
  40ece0:	mov    rsi,QWORD PTR [rbp-0x20]
  40ece4:	mov    rax,QWORD PTR [rbp-0x48]
  40ece8:	mov    r8,rcx
  40eceb:	lea    rcx,[rip+0x1b92e]        # 42a620 <filename@@Base+0x520>
  40ecf2:	mov    rdi,rax
  40ecf5:	call   405f3d <_start@@Base+0x2c2d>
  40ecfa:	mov    QWORD PTR [rbp-0x50],rax
  40ecfe:	mov    rax,QWORD PTR [rbp-0x50]
  40ed02:	cmp    rax,QWORD PTR [rbp-0x20]
  40ed06:	je     41046b <_start@@Base+0xd15b>
  40ed0c:	mov    rax,QWORD PTR [rbp-0x50]
  40ed10:	cmp    rax,QWORD PTR [rbp-0x58]
  40ed14:	je     41046b <_start@@Base+0xd15b>
  40ed1a:	vmovss xmm0,DWORD PTR [rbp-0x30]
  40ed1f:	vucomiss xmm0,DWORD PTR [rip+0x1363d]        # 422364 <_IO_stdin_used@@Base+0x364>
  40ed27:	jp     40ed45 <_start@@Base+0xba35>
  40ed29:	vucomiss xmm0,DWORD PTR [rip+0x13633]        # 422364 <_IO_stdin_used@@Base+0x364>
  40ed31:	jne    40ed45 <_start@@Base+0xba35>
  40ed33:	mov    rax,QWORD PTR [rbp-0x48]
  40ed37:	mov    eax,DWORD PTR [rax+0x10]
  40ed3a:	and    eax,0x2
  40ed3d:	test   eax,eax
  40ed3f:	je     4102a9 <_start@@Base+0xcf99>
  40ed45:	mov    rax,QWORD PTR [rbp-0x48]
  40ed49:	mov    rax,QWORD PTR [rax]
  40ed4c:	mov    ecx,0x4
  40ed51:	mov    edx,0x4
  40ed56:	mov    esi,0x19
  40ed5b:	mov    rdi,rax
  40ed5e:	call   419d30 <flatcc_builder_table_add@@Base>
  40ed63:	mov    QWORD PTR [rbp-0x10],rax
  40ed67:	cmp    QWORD PTR [rbp-0x10],0x0
  40ed6c:	je     41046e <_start@@Base+0xd15e>
  40ed72:	mov    edx,DWORD PTR [rbp-0x30]
  40ed75:	mov    rax,QWORD PTR [rbp-0x10]
  40ed79:	vmovd  xmm0,edx
  40ed7d:	mov    rdi,rax
  40ed80:	call   403656 <_start@@Base+0x346>
  40ed85:	jmp    4102a9 <_start@@Base+0xcf99>
  40ed8a:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed8e:	mov    rcx,QWORD PTR [rbp-0x50]
  40ed92:	mov    rax,QWORD PTR [rbp-0x48]
  40ed96:	mov    rsi,rcx
  40ed99:	mov    rdi,rax
  40ed9c:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40eda1:	mov    QWORD PTR [rbp-0x50],rax
  40eda5:	jmp    4102a9 <_start@@Base+0xcf99>
  40edaa:	mov    rdx,QWORD PTR [rbp-0x58]
  40edae:	mov    rcx,QWORD PTR [rbp-0x50]
  40edb2:	mov    rax,QWORD PTR [rbp-0x48]
  40edb6:	mov    rsi,rcx
  40edb9:	mov    rdi,rax
  40edbc:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40edc1:	mov    QWORD PTR [rbp-0x50],rax
  40edc5:	jmp    4102a9 <_start@@Base+0xcf99>
  40edca:	movabs rax,0x7465737468617367
  40edd4:	cmp    QWORD PTR [rbp-0x28],rax
  40edd8:	ja     40ef60 <_start@@Base+0xbc50>
  40edde:	mov    rax,QWORD PTR [rbp-0x28]
  40ede2:	mov    ax,0x0
  40ede6:	mov    rdx,rax
  40ede9:	movabs rax,0x7465737466330000
  40edf3:	cmp    rdx,rax
  40edf6:	jne    40ef40 <_start@@Base+0xbc30>
  40edfc:	mov    rax,QWORD PTR [rbp-0x50]
  40ee00:	mov    QWORD PTR [rbp-0x20],rax
  40ee04:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee08:	mov    rsi,QWORD PTR [rbp-0x20]
  40ee0c:	mov    rax,QWORD PTR [rbp-0x48]
  40ee10:	mov    ecx,0x6
  40ee15:	mov    rdi,rax
  40ee18:	call   4042cc <_start@@Base+0xfbc>
  40ee1d:	mov    QWORD PTR [rbp-0x50],rax
  40ee21:	mov    rax,QWORD PTR [rbp-0x20]
  40ee25:	cmp    rax,QWORD PTR [rbp-0x50]
  40ee29:	je     40ef20 <_start@@Base+0xbc10>
  40ee2f:	vxorps xmm0,xmm0,xmm0
  40ee33:	vmovss DWORD PTR [rbp-0x30],xmm0
  40ee38:	mov    rax,QWORD PTR [rbp-0x50]
  40ee3c:	mov    QWORD PTR [rbp-0x20],rax
  40ee40:	lea    rcx,[rbp-0x30]
  40ee44:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee48:	mov    rsi,QWORD PTR [rbp-0x20]
  40ee4c:	mov    rax,QWORD PTR [rbp-0x48]
  40ee50:	mov    rdi,rax
  40ee53:	call   420037 <flatcc_json_parser_float@@Base>
  40ee58:	mov    QWORD PTR [rbp-0x50],rax
  40ee5c:	mov    rax,QWORD PTR [rbp-0x20]
  40ee60:	cmp    rax,QWORD PTR [rbp-0x50]
  40ee64:	jne    40eeb0 <_start@@Base+0xbba0>
  40ee66:	mov    rax,QWORD PTR [rbp-0x50]
  40ee6a:	mov    QWORD PTR [rbp-0x20],rax
  40ee6e:	lea    rcx,[rbp-0x30]
  40ee72:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee76:	mov    rsi,QWORD PTR [rbp-0x20]
  40ee7a:	mov    rax,QWORD PTR [rbp-0x48]
  40ee7e:	mov    r8,rcx
  40ee81:	lea    rcx,[rip+0x1b7b8]        # 42a640 <filename@@Base+0x540>
  40ee88:	mov    rdi,rax
  40ee8b:	call   405f3d <_start@@Base+0x2c2d>
  40ee90:	mov    QWORD PTR [rbp-0x50],rax
  40ee94:	mov    rax,QWORD PTR [rbp-0x50]
  40ee98:	cmp    rax,QWORD PTR [rbp-0x20]
  40ee9c:	je     410471 <_start@@Base+0xd161>
  40eea2:	mov    rax,QWORD PTR [rbp-0x50]
  40eea6:	cmp    rax,QWORD PTR [rbp-0x58]
  40eeaa:	je     410471 <_start@@Base+0xd161>
  40eeb0:	vmovss xmm0,DWORD PTR [rbp-0x30]
  40eeb5:	vxorps xmm1,xmm1,xmm1
  40eeb9:	vucomiss xmm0,xmm1
  40eebd:	jp     40eedb <_start@@Base+0xbbcb>
  40eebf:	vxorps xmm1,xmm1,xmm1
  40eec3:	vucomiss xmm0,xmm1
  40eec7:	jne    40eedb <_start@@Base+0xbbcb>
  40eec9:	mov    rax,QWORD PTR [rbp-0x48]
  40eecd:	mov    eax,DWORD PTR [rax+0x10]
  40eed0:	and    eax,0x2
  40eed3:	test   eax,eax
  40eed5:	je     4102a9 <_start@@Base+0xcf99>
  40eedb:	mov    rax,QWORD PTR [rbp-0x48]
  40eedf:	mov    rax,QWORD PTR [rax]
  40eee2:	mov    ecx,0x4
  40eee7:	mov    edx,0x4
  40eeec:	mov    esi,0x1b
  40eef1:	mov    rdi,rax
  40eef4:	call   419d30 <flatcc_builder_table_add@@Base>
  40eef9:	mov    QWORD PTR [rbp-0x10],rax
  40eefd:	cmp    QWORD PTR [rbp-0x10],0x0
  40ef02:	je     410474 <_start@@Base+0xd164>
  40ef08:	mov    edx,DWORD PTR [rbp-0x30]
  40ef0b:	mov    rax,QWORD PTR [rbp-0x10]
  40ef0f:	vmovd  xmm0,edx
  40ef13:	mov    rdi,rax
  40ef16:	call   403656 <_start@@Base+0x346>
  40ef1b:	jmp    4102a9 <_start@@Base+0xcf99>
  40ef20:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef24:	mov    rcx,QWORD PTR [rbp-0x50]
  40ef28:	mov    rax,QWORD PTR [rbp-0x48]
  40ef2c:	mov    rsi,rcx
  40ef2f:	mov    rdi,rax
  40ef32:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ef37:	mov    QWORD PTR [rbp-0x50],rax
  40ef3b:	jmp    4102a9 <_start@@Base+0xcf99>
  40ef40:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef44:	mov    rcx,QWORD PTR [rbp-0x50]
  40ef48:	mov    rax,QWORD PTR [rbp-0x48]
  40ef4c:	mov    rsi,rcx
  40ef4f:	mov    rdi,rax
  40ef52:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40ef57:	mov    QWORD PTR [rbp-0x50],rax
  40ef5b:	jmp    4102a9 <_start@@Base+0xcf99>
  40ef60:	movabs rax,0x7465737468617368
  40ef6a:	cmp    QWORD PTR [rbp-0x28],rax
  40ef6e:	jne    40faec <_start@@Base+0xc7dc>
  40ef74:	add    QWORD PTR [rbp-0x50],0x8
  40ef79:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef7d:	mov    rax,QWORD PTR [rbp-0x50]
  40ef81:	mov    rsi,rdx
  40ef84:	mov    rdi,rax
  40ef87:	call   403dd5 <_start@@Base+0xac5>
  40ef8c:	mov    QWORD PTR [rbp-0x28],rax
  40ef90:	movabs rax,0x7336345f666e7630
  40ef9a:	cmp    QWORD PTR [rbp-0x28],rax
  40ef9e:	ja     40f274 <_start@@Base+0xbf64>
  40efa4:	movabs rax,0x7333325f666e7631
  40efae:	cmp    QWORD PTR [rbp-0x28],rax
  40efb2:	jne    40f254 <_start@@Base+0xbf44>
  40efb8:	mov    rax,QWORD PTR [rbp-0x50]
  40efbc:	mov    QWORD PTR [rbp-0x20],rax
  40efc0:	mov    rdx,QWORD PTR [rbp-0x58]
  40efc4:	mov    rsi,QWORD PTR [rbp-0x20]
  40efc8:	mov    rax,QWORD PTR [rbp-0x48]
  40efcc:	mov    ecx,0x8
  40efd1:	mov    rdi,rax
  40efd4:	call   4042cc <_start@@Base+0xfbc>
  40efd9:	mov    QWORD PTR [rbp-0x50],rax
  40efdd:	mov    rax,QWORD PTR [rbp-0x20]
  40efe1:	cmp    rax,QWORD PTR [rbp-0x50]
  40efe5:	je     40f0c6 <_start@@Base+0xbdb6>
  40efeb:	mov    DWORD PTR [rbp-0x30],0x0
  40eff2:	mov    rax,QWORD PTR [rbp-0x50]
  40eff6:	mov    QWORD PTR [rbp-0x20],rax
  40effa:	lea    rcx,[rbp-0x30]
  40effe:	mov    rdx,QWORD PTR [rbp-0x58]
  40f002:	mov    rsi,QWORD PTR [rbp-0x20]
  40f006:	mov    rax,QWORD PTR [rbp-0x48]
  40f00a:	mov    rdi,rax
  40f00d:	call   404d8f <_start@@Base+0x1a7f>
  40f012:	mov    QWORD PTR [rbp-0x50],rax
  40f016:	mov    rax,QWORD PTR [rbp-0x20]
  40f01a:	cmp    rax,QWORD PTR [rbp-0x50]
  40f01e:	jne    40f06a <_start@@Base+0xbd5a>
  40f020:	mov    rax,QWORD PTR [rbp-0x50]
  40f024:	mov    QWORD PTR [rbp-0x20],rax
  40f028:	lea    rcx,[rbp-0x30]
  40f02c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f030:	mov    rsi,QWORD PTR [rbp-0x20]
  40f034:	mov    rax,QWORD PTR [rbp-0x48]
  40f038:	mov    r8,rcx
  40f03b:	lea    rcx,[rip+0x1b61e]        # 42a660 <filename@@Base+0x560>
  40f042:	mov    rdi,rax
  40f045:	call   4058d4 <_start@@Base+0x25c4>
  40f04a:	mov    QWORD PTR [rbp-0x50],rax
  40f04e:	mov    rax,QWORD PTR [rbp-0x50]
  40f052:	cmp    rax,QWORD PTR [rbp-0x20]
  40f056:	je     410477 <_start@@Base+0xd167>
  40f05c:	mov    rax,QWORD PTR [rbp-0x50]
  40f060:	cmp    rax,QWORD PTR [rbp-0x58]
  40f064:	je     410477 <_start@@Base+0xd167>
  40f06a:	mov    eax,DWORD PTR [rbp-0x30]
  40f06d:	test   eax,eax
  40f06f:	jne    40f083 <_start@@Base+0xbd73>
  40f071:	mov    rax,QWORD PTR [rbp-0x48]
  40f075:	mov    eax,DWORD PTR [rax+0x10]
  40f078:	and    eax,0x2
  40f07b:	test   eax,eax
  40f07d:	je     4102a9 <_start@@Base+0xcf99>
  40f083:	mov    rax,QWORD PTR [rbp-0x48]
  40f087:	mov    rax,QWORD PTR [rax]
  40f08a:	mov    ecx,0x4
  40f08f:	mov    edx,0x4
  40f094:	mov    esi,0x10
  40f099:	mov    rdi,rax
  40f09c:	call   419d30 <flatcc_builder_table_add@@Base>
  40f0a1:	mov    QWORD PTR [rbp-0x10],rax
  40f0a5:	cmp    QWORD PTR [rbp-0x10],0x0
  40f0aa:	je     41047a <_start@@Base+0xd16a>
  40f0b0:	mov    edx,DWORD PTR [rbp-0x30]
  40f0b3:	mov    rax,QWORD PTR [rbp-0x10]
  40f0b7:	mov    esi,edx
  40f0b9:	mov    rdi,rax
  40f0bc:	call   40359e <_start@@Base+0x28e>
  40f0c1:	jmp    4102a9 <_start@@Base+0xcf99>
  40f0c6:	add    QWORD PTR [rbp-0x50],0x8
  40f0cb:	mov    rdx,QWORD PTR [rbp-0x58]
  40f0cf:	mov    rax,QWORD PTR [rbp-0x50]
  40f0d3:	mov    rsi,rdx
  40f0d6:	mov    rdi,rax
  40f0d9:	call   403dd5 <_start@@Base+0xac5>
  40f0de:	mov    QWORD PTR [rbp-0x28],rax
  40f0e2:	movabs rax,0xff00000000000000
  40f0ec:	and    rax,QWORD PTR [rbp-0x28]
  40f0f0:	mov    rdx,rax
  40f0f3:	movabs rax,0x6100000000000000
  40f0fd:	cmp    rdx,rax
  40f100:	jne    40f234 <_start@@Base+0xbf24>
  40f106:	mov    rax,QWORD PTR [rbp-0x50]
  40f10a:	mov    QWORD PTR [rbp-0x20],rax
  40f10e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f112:	mov    rsi,QWORD PTR [rbp-0x20]
  40f116:	mov    rax,QWORD PTR [rbp-0x48]
  40f11a:	mov    ecx,0x1
  40f11f:	mov    rdi,rax
  40f122:	call   4042cc <_start@@Base+0xfbc>
  40f127:	mov    QWORD PTR [rbp-0x50],rax
  40f12b:	mov    rax,QWORD PTR [rbp-0x20]
  40f12f:	cmp    rax,QWORD PTR [rbp-0x50]
  40f133:	je     40f214 <_start@@Base+0xbf04>
  40f139:	mov    DWORD PTR [rbp-0x30],0x0
  40f140:	mov    rax,QWORD PTR [rbp-0x50]
  40f144:	mov    QWORD PTR [rbp-0x20],rax
  40f148:	lea    rcx,[rbp-0x30]
  40f14c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f150:	mov    rsi,QWORD PTR [rbp-0x20]
  40f154:	mov    rax,QWORD PTR [rbp-0x48]
  40f158:	mov    rdi,rax
  40f15b:	call   404d8f <_start@@Base+0x1a7f>
  40f160:	mov    QWORD PTR [rbp-0x50],rax
  40f164:	mov    rax,QWORD PTR [rbp-0x20]
  40f168:	cmp    rax,QWORD PTR [rbp-0x50]
  40f16c:	jne    40f1b8 <_start@@Base+0xbea8>
  40f16e:	mov    rax,QWORD PTR [rbp-0x50]
  40f172:	mov    QWORD PTR [rbp-0x20],rax
  40f176:	lea    rcx,[rbp-0x30]
  40f17a:	mov    rdx,QWORD PTR [rbp-0x58]
  40f17e:	mov    rsi,QWORD PTR [rbp-0x20]
  40f182:	mov    rax,QWORD PTR [rbp-0x48]
  40f186:	mov    r8,rcx
  40f189:	lea    rcx,[rip+0x1b4f0]        # 42a680 <filename@@Base+0x580>
  40f190:	mov    rdi,rax
  40f193:	call   4058d4 <_start@@Base+0x25c4>
  40f198:	mov    QWORD PTR [rbp-0x50],rax
  40f19c:	mov    rax,QWORD PTR [rbp-0x50]
  40f1a0:	cmp    rax,QWORD PTR [rbp-0x20]
  40f1a4:	je     41047d <_start@@Base+0xd16d>
  40f1aa:	mov    rax,QWORD PTR [rbp-0x50]
  40f1ae:	cmp    rax,QWORD PTR [rbp-0x58]
  40f1b2:	je     41047d <_start@@Base+0xd16d>
  40f1b8:	mov    eax,DWORD PTR [rbp-0x30]
  40f1bb:	test   eax,eax
  40f1bd:	jne    40f1d1 <_start@@Base+0xbec1>
  40f1bf:	mov    rax,QWORD PTR [rbp-0x48]
  40f1c3:	mov    eax,DWORD PTR [rax+0x10]
  40f1c6:	and    eax,0x2
  40f1c9:	test   eax,eax
  40f1cb:	je     4102a9 <_start@@Base+0xcf99>
  40f1d1:	mov    rax,QWORD PTR [rbp-0x48]
  40f1d5:	mov    rax,QWORD PTR [rax]
  40f1d8:	mov    ecx,0x4
  40f1dd:	mov    edx,0x4
  40f1e2:	mov    esi,0x14
  40f1e7:	mov    rdi,rax
  40f1ea:	call   419d30 <flatcc_builder_table_add@@Base>
  40f1ef:	mov    QWORD PTR [rbp-0x10],rax
  40f1f3:	cmp    QWORD PTR [rbp-0x10],0x0
  40f1f8:	je     410480 <_start@@Base+0xd170>
  40f1fe:	mov    edx,DWORD PTR [rbp-0x30]
  40f201:	mov    rax,QWORD PTR [rbp-0x10]
  40f205:	mov    esi,edx
  40f207:	mov    rdi,rax
  40f20a:	call   40359e <_start@@Base+0x28e>
  40f20f:	jmp    4102a9 <_start@@Base+0xcf99>
  40f214:	mov    rdx,QWORD PTR [rbp-0x58]
  40f218:	mov    rcx,QWORD PTR [rbp-0x50]
  40f21c:	mov    rax,QWORD PTR [rbp-0x48]
  40f220:	mov    rsi,rcx
  40f223:	mov    rdi,rax
  40f226:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f22b:	mov    QWORD PTR [rbp-0x50],rax
  40f22f:	jmp    4102a9 <_start@@Base+0xcf99>
  40f234:	mov    rdx,QWORD PTR [rbp-0x58]
  40f238:	mov    rcx,QWORD PTR [rbp-0x50]
  40f23c:	mov    rax,QWORD PTR [rbp-0x48]
  40f240:	mov    rsi,rcx
  40f243:	mov    rdi,rax
  40f246:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f24b:	mov    QWORD PTR [rbp-0x50],rax
  40f24f:	jmp    4102a9 <_start@@Base+0xcf99>
  40f254:	mov    rdx,QWORD PTR [rbp-0x58]
  40f258:	mov    rcx,QWORD PTR [rbp-0x50]
  40f25c:	mov    rax,QWORD PTR [rbp-0x48]
  40f260:	mov    rsi,rcx
  40f263:	mov    rdi,rax
  40f266:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f26b:	mov    QWORD PTR [rbp-0x50],rax
  40f26f:	jmp    4102a9 <_start@@Base+0xcf99>
  40f274:	movabs rax,0x7533325f666e7630
  40f27e:	cmp    QWORD PTR [rbp-0x28],rax
  40f282:	ja     40f562 <_start@@Base+0xc252>
  40f288:	movabs rax,0x7336345f666e7631
  40f292:	cmp    QWORD PTR [rbp-0x28],rax
  40f296:	jne    40f542 <_start@@Base+0xc232>
  40f29c:	mov    rax,QWORD PTR [rbp-0x50]
  40f2a0:	mov    QWORD PTR [rbp-0x20],rax
  40f2a4:	mov    rdx,QWORD PTR [rbp-0x58]
  40f2a8:	mov    rsi,QWORD PTR [rbp-0x20]
  40f2ac:	mov    rax,QWORD PTR [rbp-0x48]
  40f2b0:	mov    ecx,0x8
  40f2b5:	mov    rdi,rax
  40f2b8:	call   4042cc <_start@@Base+0xfbc>
  40f2bd:	mov    QWORD PTR [rbp-0x50],rax
  40f2c1:	mov    rax,QWORD PTR [rbp-0x20]
  40f2c5:	cmp    rax,QWORD PTR [rbp-0x50]
  40f2c9:	je     40f3af <_start@@Base+0xc09f>
  40f2cf:	mov    QWORD PTR [rbp-0x30],0x0
  40f2d7:	mov    rax,QWORD PTR [rbp-0x50]
  40f2db:	mov    QWORD PTR [rbp-0x20],rax
  40f2df:	lea    rcx,[rbp-0x30]
  40f2e3:	mov    rdx,QWORD PTR [rbp-0x58]
  40f2e7:	mov    rsi,QWORD PTR [rbp-0x20]
  40f2eb:	mov    rax,QWORD PTR [rbp-0x48]
  40f2ef:	mov    rdi,rax
  40f2f2:	call   404cc8 <_start@@Base+0x19b8>
  40f2f7:	mov    QWORD PTR [rbp-0x50],rax
  40f2fb:	mov    rax,QWORD PTR [rbp-0x20]
  40f2ff:	cmp    rax,QWORD PTR [rbp-0x50]
  40f303:	jne    40f34f <_start@@Base+0xc03f>
  40f305:	mov    rax,QWORD PTR [rbp-0x50]
  40f309:	mov    QWORD PTR [rbp-0x20],rax
  40f30d:	lea    rcx,[rbp-0x30]
  40f311:	mov    rdx,QWORD PTR [rbp-0x58]
  40f315:	mov    rsi,QWORD PTR [rbp-0x20]
  40f319:	mov    rax,QWORD PTR [rbp-0x48]
  40f31d:	mov    r8,rcx
  40f320:	lea    rcx,[rip+0x1b379]        # 42a6a0 <filename@@Base+0x5a0>
  40f327:	mov    rdi,rax
  40f32a:	call   405734 <_start@@Base+0x2424>
  40f32f:	mov    QWORD PTR [rbp-0x50],rax
  40f333:	mov    rax,QWORD PTR [rbp-0x50]
  40f337:	cmp    rax,QWORD PTR [rbp-0x20]
  40f33b:	je     410483 <_start@@Base+0xd173>
  40f341:	mov    rax,QWORD PTR [rbp-0x50]
  40f345:	cmp    rax,QWORD PTR [rbp-0x58]
  40f349:	je     410483 <_start@@Base+0xd173>
  40f34f:	mov    rax,QWORD PTR [rbp-0x30]
  40f353:	test   rax,rax
  40f356:	jne    40f36a <_start@@Base+0xc05a>
  40f358:	mov    rax,QWORD PTR [rbp-0x48]
  40f35c:	mov    eax,DWORD PTR [rax+0x10]
  40f35f:	and    eax,0x2
  40f362:	test   eax,eax
  40f364:	je     4102a9 <_start@@Base+0xcf99>
  40f36a:	mov    rax,QWORD PTR [rbp-0x48]
  40f36e:	mov    rax,QWORD PTR [rax]
  40f371:	mov    ecx,0x8
  40f376:	mov    edx,0x8
  40f37b:	mov    esi,0x12
  40f380:	mov    rdi,rax
  40f383:	call   419d30 <flatcc_builder_table_add@@Base>
  40f388:	mov    QWORD PTR [rbp-0x10],rax
  40f38c:	cmp    QWORD PTR [rbp-0x10],0x0
  40f391:	je     410486 <_start@@Base+0xd176>
  40f397:	mov    rdx,QWORD PTR [rbp-0x30]
  40f39b:	mov    rax,QWORD PTR [rbp-0x10]
  40f39f:	mov    rsi,rdx
  40f3a2:	mov    rdi,rax
  40f3a5:	call   4035d0 <_start@@Base+0x2c0>
  40f3aa:	jmp    4102a9 <_start@@Base+0xcf99>
  40f3af:	add    QWORD PTR [rbp-0x50],0x8
  40f3b4:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3b8:	mov    rax,QWORD PTR [rbp-0x50]
  40f3bc:	mov    rsi,rdx
  40f3bf:	mov    rdi,rax
  40f3c2:	call   403dd5 <_start@@Base+0xac5>
  40f3c7:	mov    QWORD PTR [rbp-0x28],rax
  40f3cb:	movabs rax,0xff00000000000000
  40f3d5:	and    rax,QWORD PTR [rbp-0x28]
  40f3d9:	mov    rdx,rax
  40f3dc:	movabs rax,0x6100000000000000
  40f3e6:	cmp    rdx,rax
  40f3e9:	jne    40f522 <_start@@Base+0xc212>
  40f3ef:	mov    rax,QWORD PTR [rbp-0x50]
  40f3f3:	mov    QWORD PTR [rbp-0x20],rax
  40f3f7:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3fb:	mov    rsi,QWORD PTR [rbp-0x20]
  40f3ff:	mov    rax,QWORD PTR [rbp-0x48]
  40f403:	mov    ecx,0x1
  40f408:	mov    rdi,rax
  40f40b:	call   4042cc <_start@@Base+0xfbc>
  40f410:	mov    QWORD PTR [rbp-0x50],rax
  40f414:	mov    rax,QWORD PTR [rbp-0x20]
  40f418:	cmp    rax,QWORD PTR [rbp-0x50]
  40f41c:	je     40f502 <_start@@Base+0xc1f2>
  40f422:	mov    QWORD PTR [rbp-0x30],0x0
  40f42a:	mov    rax,QWORD PTR [rbp-0x50]
  40f42e:	mov    QWORD PTR [rbp-0x20],rax
  40f432:	lea    rcx,[rbp-0x30]
  40f436:	mov    rdx,QWORD PTR [rbp-0x58]
  40f43a:	mov    rsi,QWORD PTR [rbp-0x20]
  40f43e:	mov    rax,QWORD PTR [rbp-0x48]
  40f442:	mov    rdi,rax
  40f445:	call   404cc8 <_start@@Base+0x19b8>
  40f44a:	mov    QWORD PTR [rbp-0x50],rax
  40f44e:	mov    rax,QWORD PTR [rbp-0x20]
  40f452:	cmp    rax,QWORD PTR [rbp-0x50]
  40f456:	jne    40f4a2 <_start@@Base+0xc192>
  40f458:	mov    rax,QWORD PTR [rbp-0x50]
  40f45c:	mov    QWORD PTR [rbp-0x20],rax
  40f460:	lea    rcx,[rbp-0x30]
  40f464:	mov    rdx,QWORD PTR [rbp-0x58]
  40f468:	mov    rsi,QWORD PTR [rbp-0x20]
  40f46c:	mov    rax,QWORD PTR [rbp-0x48]
  40f470:	mov    r8,rcx
  40f473:	lea    rcx,[rip+0x1b246]        # 42a6c0 <filename@@Base+0x5c0>
  40f47a:	mov    rdi,rax
  40f47d:	call   405734 <_start@@Base+0x2424>
  40f482:	mov    QWORD PTR [rbp-0x50],rax
  40f486:	mov    rax,QWORD PTR [rbp-0x50]
  40f48a:	cmp    rax,QWORD PTR [rbp-0x20]
  40f48e:	je     410489 <_start@@Base+0xd179>
  40f494:	mov    rax,QWORD PTR [rbp-0x50]
  40f498:	cmp    rax,QWORD PTR [rbp-0x58]
  40f49c:	je     410489 <_start@@Base+0xd179>
  40f4a2:	mov    rax,QWORD PTR [rbp-0x30]
  40f4a6:	test   rax,rax
  40f4a9:	jne    40f4bd <_start@@Base+0xc1ad>
  40f4ab:	mov    rax,QWORD PTR [rbp-0x48]
  40f4af:	mov    eax,DWORD PTR [rax+0x10]
  40f4b2:	and    eax,0x2
  40f4b5:	test   eax,eax
  40f4b7:	je     4102a9 <_start@@Base+0xcf99>
  40f4bd:	mov    rax,QWORD PTR [rbp-0x48]
  40f4c1:	mov    rax,QWORD PTR [rax]
  40f4c4:	mov    ecx,0x8
  40f4c9:	mov    edx,0x8
  40f4ce:	mov    esi,0x16
  40f4d3:	mov    rdi,rax
  40f4d6:	call   419d30 <flatcc_builder_table_add@@Base>
  40f4db:	mov    QWORD PTR [rbp-0x10],rax
  40f4df:	cmp    QWORD PTR [rbp-0x10],0x0
  40f4e4:	je     41048c <_start@@Base+0xd17c>
  40f4ea:	mov    rdx,QWORD PTR [rbp-0x30]
  40f4ee:	mov    rax,QWORD PTR [rbp-0x10]
  40f4f2:	mov    rsi,rdx
  40f4f5:	mov    rdi,rax
  40f4f8:	call   4035d0 <_start@@Base+0x2c0>
  40f4fd:	jmp    4102a9 <_start@@Base+0xcf99>
  40f502:	mov    rdx,QWORD PTR [rbp-0x58]
  40f506:	mov    rcx,QWORD PTR [rbp-0x50]
  40f50a:	mov    rax,QWORD PTR [rbp-0x48]
  40f50e:	mov    rsi,rcx
  40f511:	mov    rdi,rax
  40f514:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f519:	mov    QWORD PTR [rbp-0x50],rax
  40f51d:	jmp    4102a9 <_start@@Base+0xcf99>
  40f522:	mov    rdx,QWORD PTR [rbp-0x58]
  40f526:	mov    rcx,QWORD PTR [rbp-0x50]
  40f52a:	mov    rax,QWORD PTR [rbp-0x48]
  40f52e:	mov    rsi,rcx
  40f531:	mov    rdi,rax
  40f534:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f539:	mov    QWORD PTR [rbp-0x50],rax
  40f53d:	jmp    4102a9 <_start@@Base+0xcf99>
  40f542:	mov    rdx,QWORD PTR [rbp-0x58]
  40f546:	mov    rcx,QWORD PTR [rbp-0x50]
  40f54a:	mov    rax,QWORD PTR [rbp-0x48]
  40f54e:	mov    rsi,rcx
  40f551:	mov    rdi,rax
  40f554:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f559:	mov    QWORD PTR [rbp-0x50],rax
  40f55d:	jmp    4102a9 <_start@@Base+0xcf99>
  40f562:	movabs rax,0x7533325f666e7631
  40f56c:	cmp    QWORD PTR [rbp-0x28],rax
  40f570:	jne    40f812 <_start@@Base+0xc502>
  40f576:	mov    rax,QWORD PTR [rbp-0x50]
  40f57a:	mov    QWORD PTR [rbp-0x20],rax
  40f57e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f582:	mov    rsi,QWORD PTR [rbp-0x20]
  40f586:	mov    rax,QWORD PTR [rbp-0x48]
  40f58a:	mov    ecx,0x8
  40f58f:	mov    rdi,rax
  40f592:	call   4042cc <_start@@Base+0xfbc>
  40f597:	mov    QWORD PTR [rbp-0x50],rax
  40f59b:	mov    rax,QWORD PTR [rbp-0x20]
  40f59f:	cmp    rax,QWORD PTR [rbp-0x50]
  40f5a3:	je     40f684 <_start@@Base+0xc374>
  40f5a9:	mov    DWORD PTR [rbp-0x30],0x0
  40f5b0:	mov    rax,QWORD PTR [rbp-0x50]
  40f5b4:	mov    QWORD PTR [rbp-0x20],rax
  40f5b8:	lea    rcx,[rbp-0x30]
  40f5bc:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5c0:	mov    rsi,QWORD PTR [rbp-0x20]
  40f5c4:	mov    rax,QWORD PTR [rbp-0x48]
  40f5c8:	mov    rdi,rax
  40f5cb:	call   404a7a <_start@@Base+0x176a>
  40f5d0:	mov    QWORD PTR [rbp-0x50],rax
  40f5d4:	mov    rax,QWORD PTR [rbp-0x20]
  40f5d8:	cmp    rax,QWORD PTR [rbp-0x50]
  40f5dc:	jne    40f628 <_start@@Base+0xc318>
  40f5de:	mov    rax,QWORD PTR [rbp-0x50]
  40f5e2:	mov    QWORD PTR [rbp-0x20],rax
  40f5e6:	lea    rcx,[rbp-0x30]
  40f5ea:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5ee:	mov    rsi,QWORD PTR [rbp-0x20]
  40f5f2:	mov    rax,QWORD PTR [rbp-0x48]
  40f5f6:	mov    r8,rcx
  40f5f9:	lea    rcx,[rip+0x1b0e0]        # 42a6e0 <filename@@Base+0x5e0>
  40f600:	mov    rdi,rax
  40f603:	call   405269 <_start@@Base+0x1f59>
  40f608:	mov    QWORD PTR [rbp-0x50],rax
  40f60c:	mov    rax,QWORD PTR [rbp-0x50]
  40f610:	cmp    rax,QWORD PTR [rbp-0x20]
  40f614:	je     41048f <_start@@Base+0xd17f>
  40f61a:	mov    rax,QWORD PTR [rbp-0x50]
  40f61e:	cmp    rax,QWORD PTR [rbp-0x58]
  40f622:	je     41048f <_start@@Base+0xd17f>
  40f628:	mov    eax,DWORD PTR [rbp-0x30]
  40f62b:	test   eax,eax
  40f62d:	jne    40f641 <_start@@Base+0xc331>
  40f62f:	mov    rax,QWORD PTR [rbp-0x48]
  40f633:	mov    eax,DWORD PTR [rax+0x10]
  40f636:	and    eax,0x2
  40f639:	test   eax,eax
  40f63b:	je     4102a9 <_start@@Base+0xcf99>
  40f641:	mov    rax,QWORD PTR [rbp-0x48]
  40f645:	mov    rax,QWORD PTR [rax]
  40f648:	mov    ecx,0x4
  40f64d:	mov    edx,0x4
  40f652:	mov    esi,0x11
  40f657:	mov    rdi,rax
  40f65a:	call   419d30 <flatcc_builder_table_add@@Base>
  40f65f:	mov    QWORD PTR [rbp-0x10],rax
  40f663:	cmp    QWORD PTR [rbp-0x10],0x0
  40f668:	je     410492 <_start@@Base+0xd182>
  40f66e:	mov    edx,DWORD PTR [rbp-0x30]
  40f671:	mov    rax,QWORD PTR [rbp-0x10]
  40f675:	mov    esi,edx
  40f677:	mov    rdi,rax
  40f67a:	call   40346f <_start@@Base+0x15f>
  40f67f:	jmp    4102a9 <_start@@Base+0xcf99>
  40f684:	add    QWORD PTR [rbp-0x50],0x8
  40f689:	mov    rdx,QWORD PTR [rbp-0x58]
  40f68d:	mov    rax,QWORD PTR [rbp-0x50]
  40f691:	mov    rsi,rdx
  40f694:	mov    rdi,rax
  40f697:	call   403dd5 <_start@@Base+0xac5>
  40f69c:	mov    QWORD PTR [rbp-0x28],rax
  40f6a0:	movabs rax,0xff00000000000000
  40f6aa:	and    rax,QWORD PTR [rbp-0x28]
  40f6ae:	mov    rdx,rax
  40f6b1:	movabs rax,0x6100000000000000
  40f6bb:	cmp    rdx,rax
  40f6be:	jne    40f7f2 <_start@@Base+0xc4e2>
  40f6c4:	mov    rax,QWORD PTR [rbp-0x50]
  40f6c8:	mov    QWORD PTR [rbp-0x20],rax
  40f6cc:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6d0:	mov    rsi,QWORD PTR [rbp-0x20]
  40f6d4:	mov    rax,QWORD PTR [rbp-0x48]
  40f6d8:	mov    ecx,0x1
  40f6dd:	mov    rdi,rax
  40f6e0:	call   4042cc <_start@@Base+0xfbc>
  40f6e5:	mov    QWORD PTR [rbp-0x50],rax
  40f6e9:	mov    rax,QWORD PTR [rbp-0x20]
  40f6ed:	cmp    rax,QWORD PTR [rbp-0x50]
  40f6f1:	je     40f7d2 <_start@@Base+0xc4c2>
  40f6f7:	mov    DWORD PTR [rbp-0x30],0x0
  40f6fe:	mov    rax,QWORD PTR [rbp-0x50]
  40f702:	mov    QWORD PTR [rbp-0x20],rax
  40f706:	lea    rcx,[rbp-0x30]
  40f70a:	mov    rdx,QWORD PTR [rbp-0x58]
  40f70e:	mov    rsi,QWORD PTR [rbp-0x20]
  40f712:	mov    rax,QWORD PTR [rbp-0x48]
  40f716:	mov    rdi,rax
  40f719:	call   404a7a <_start@@Base+0x176a>
  40f71e:	mov    QWORD PTR [rbp-0x50],rax
  40f722:	mov    rax,QWORD PTR [rbp-0x20]
  40f726:	cmp    rax,QWORD PTR [rbp-0x50]
  40f72a:	jne    40f776 <_start@@Base+0xc466>
  40f72c:	mov    rax,QWORD PTR [rbp-0x50]
  40f730:	mov    QWORD PTR [rbp-0x20],rax
  40f734:	lea    rcx,[rbp-0x30]
  40f738:	mov    rdx,QWORD PTR [rbp-0x58]
  40f73c:	mov    rsi,QWORD PTR [rbp-0x20]
  40f740:	mov    rax,QWORD PTR [rbp-0x48]
  40f744:	mov    r8,rcx
  40f747:	lea    rcx,[rip+0x1afb2]        # 42a700 <filename@@Base+0x600>
  40f74e:	mov    rdi,rax
  40f751:	call   405269 <_start@@Base+0x1f59>
  40f756:	mov    QWORD PTR [rbp-0x50],rax
  40f75a:	mov    rax,QWORD PTR [rbp-0x50]
  40f75e:	cmp    rax,QWORD PTR [rbp-0x20]
  40f762:	je     410495 <_start@@Base+0xd185>
  40f768:	mov    rax,QWORD PTR [rbp-0x50]
  40f76c:	cmp    rax,QWORD PTR [rbp-0x58]
  40f770:	je     410495 <_start@@Base+0xd185>
  40f776:	mov    eax,DWORD PTR [rbp-0x30]
  40f779:	test   eax,eax
  40f77b:	jne    40f78f <_start@@Base+0xc47f>
  40f77d:	mov    rax,QWORD PTR [rbp-0x48]
  40f781:	mov    eax,DWORD PTR [rax+0x10]
  40f784:	and    eax,0x2
  40f787:	test   eax,eax
  40f789:	je     4102a9 <_start@@Base+0xcf99>
  40f78f:	mov    rax,QWORD PTR [rbp-0x48]
  40f793:	mov    rax,QWORD PTR [rax]
  40f796:	mov    ecx,0x4
  40f79b:	mov    edx,0x4
  40f7a0:	mov    esi,0x15
  40f7a5:	mov    rdi,rax
  40f7a8:	call   419d30 <flatcc_builder_table_add@@Base>
  40f7ad:	mov    QWORD PTR [rbp-0x10],rax
  40f7b1:	cmp    QWORD PTR [rbp-0x10],0x0
  40f7b6:	je     410498 <_start@@Base+0xd188>
  40f7bc:	mov    edx,DWORD PTR [rbp-0x30]
  40f7bf:	mov    rax,QWORD PTR [rbp-0x10]
  40f7c3:	mov    esi,edx
  40f7c5:	mov    rdi,rax
  40f7c8:	call   40346f <_start@@Base+0x15f>
  40f7cd:	jmp    4102a9 <_start@@Base+0xcf99>
  40f7d2:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7d6:	mov    rcx,QWORD PTR [rbp-0x50]
  40f7da:	mov    rax,QWORD PTR [rbp-0x48]
  40f7de:	mov    rsi,rcx
  40f7e1:	mov    rdi,rax
  40f7e4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f7e9:	mov    QWORD PTR [rbp-0x50],rax
  40f7ed:	jmp    4102a9 <_start@@Base+0xcf99>
  40f7f2:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7f6:	mov    rcx,QWORD PTR [rbp-0x50]
  40f7fa:	mov    rax,QWORD PTR [rbp-0x48]
  40f7fe:	mov    rsi,rcx
  40f801:	mov    rdi,rax
  40f804:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40f809:	mov    QWORD PTR [rbp-0x50],rax
  40f80d:	jmp    4102a9 <_start@@Base+0xcf99>
  40f812:	movabs rax,0x7536345f666e7631
  40f81c:	cmp    QWORD PTR [rbp-0x28],rax
  40f820:	jne    40facc <_start@@Base+0xc7bc>
  40f826:	mov    rax,QWORD PTR [rbp-0x50]
  40f82a:	mov    QWORD PTR [rbp-0x20],rax
  40f82e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f832:	mov    rsi,QWORD PTR [rbp-0x20]
  40f836:	mov    rax,QWORD PTR [rbp-0x48]
  40f83a:	mov    ecx,0x8
  40f83f:	mov    rdi,rax
  40f842:	call   4042cc <_start@@Base+0xfbc>
  40f847:	mov    QWORD PTR [rbp-0x50],rax
  40f84b:	mov    rax,QWORD PTR [rbp-0x20]
  40f84f:	cmp    rax,QWORD PTR [rbp-0x50]
  40f853:	je     40f939 <_start@@Base+0xc629>
  40f859:	mov    QWORD PTR [rbp-0x30],0x0
  40f861:	mov    rax,QWORD PTR [rbp-0x50]
  40f865:	mov    QWORD PTR [rbp-0x20],rax
  40f869:	lea    rcx,[rbp-0x30]
  40f86d:	mov    rdx,QWORD PTR [rbp-0x58]
  40f871:	mov    rsi,QWORD PTR [rbp-0x20]
  40f875:	mov    rax,QWORD PTR [rbp-0x48]
  40f879:	mov    rdi,rax
  40f87c:	call   4049b3 <_start@@Base+0x16a3>
  40f881:	mov    QWORD PTR [rbp-0x50],rax
  40f885:	mov    rax,QWORD PTR [rbp-0x20]
  40f889:	cmp    rax,QWORD PTR [rbp-0x50]
  40f88d:	jne    40f8d9 <_start@@Base+0xc5c9>
  40f88f:	mov    rax,QWORD PTR [rbp-0x50]
  40f893:	mov    QWORD PTR [rbp-0x20],rax
  40f897:	lea    rcx,[rbp-0x30]
  40f89b:	mov    rdx,QWORD PTR [rbp-0x58]
  40f89f:	mov    rsi,QWORD PTR [rbp-0x20]
  40f8a3:	mov    rax,QWORD PTR [rbp-0x48]
  40f8a7:	mov    r8,rcx
  40f8aa:	lea    rcx,[rip+0x1ae6f]        # 42a720 <filename@@Base+0x620>
  40f8b1:	mov    rdi,rax
  40f8b4:	call   4050c9 <_start@@Base+0x1db9>
  40f8b9:	mov    QWORD PTR [rbp-0x50],rax
  40f8bd:	mov    rax,QWORD PTR [rbp-0x50]
  40f8c1:	cmp    rax,QWORD PTR [rbp-0x20]
  40f8c5:	je     41049b <_start@@Base+0xd18b>
  40f8cb:	mov    rax,QWORD PTR [rbp-0x50]
  40f8cf:	cmp    rax,QWORD PTR [rbp-0x58]
  40f8d3:	je     41049b <_start@@Base+0xd18b>
  40f8d9:	mov    rax,QWORD PTR [rbp-0x30]
  40f8dd:	test   rax,rax
  40f8e0:	jne    40f8f4 <_start@@Base+0xc5e4>
  40f8e2:	mov    rax,QWORD PTR [rbp-0x48]
  40f8e6:	mov    eax,DWORD PTR [rax+0x10]
  40f8e9:	and    eax,0x2
  40f8ec:	test   eax,eax
  40f8ee:	je     4102a9 <_start@@Base+0xcf99>
  40f8f4:	mov    rax,QWORD PTR [rbp-0x48]
  40f8f8:	mov    rax,QWORD PTR [rax]
  40f8fb:	mov    ecx,0x8
  40f900:	mov    edx,0x8
  40f905:	mov    esi,0x13
  40f90a:	mov    rdi,rax
  40f90d:	call   419d30 <flatcc_builder_table_add@@Base>
  40f912:	mov    QWORD PTR [rbp-0x10],rax
  40f916:	cmp    QWORD PTR [rbp-0x10],0x0
  40f91b:	je     41049e <_start@@Base+0xd18e>
  40f921:	mov    rdx,QWORD PTR [rbp-0x30]
  40f925:	mov    rax,QWORD PTR [rbp-0x10]
  40f929:	mov    rsi,rdx
  40f92c:	mov    rdi,rax
  40f92f:	call   4034a1 <_start@@Base+0x191>
  40f934:	jmp    4102a9 <_start@@Base+0xcf99>
  40f939:	add    QWORD PTR [rbp-0x50],0x8
  40f93e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f942:	mov    rax,QWORD PTR [rbp-0x50]
  40f946:	mov    rsi,rdx
  40f949:	mov    rdi,rax
  40f94c:	call   403dd5 <_start@@Base+0xac5>
  40f951:	mov    QWORD PTR [rbp-0x28],rax
  40f955:	movabs rax,0xff00000000000000
  40f95f:	and    rax,QWORD PTR [rbp-0x28]
  40f963:	mov    rdx,rax
  40f966:	movabs rax,0x6100000000000000
  40f970:	cmp    rdx,rax
  40f973:	jne    40faac <_start@@Base+0xc79c>
  40f979:	mov    rax,QWORD PTR [rbp-0x50]
  40f97d:	mov    QWORD PTR [rbp-0x20],rax
  40f981:	mov    rdx,QWORD PTR [rbp-0x58]
  40f985:	mov    rsi,QWORD PTR [rbp-0x20]
  40f989:	mov    rax,QWORD PTR [rbp-0x48]
  40f98d:	mov    ecx,0x1
  40f992:	mov    rdi,rax
  40f995:	call   4042cc <_start@@Base+0xfbc>
  40f99a:	mov    QWORD PTR [rbp-0x50],rax
  40f99e:	mov    rax,QWORD PTR [rbp-0x20]
  40f9a2:	cmp    rax,QWORD PTR [rbp-0x50]
  40f9a6:	je     40fa8c <_start@@Base+0xc77c>
  40f9ac:	mov    QWORD PTR [rbp-0x30],0x0
  40f9b4:	mov    rax,QWORD PTR [rbp-0x50]
  40f9b8:	mov    QWORD PTR [rbp-0x20],rax
  40f9bc:	lea    rcx,[rbp-0x30]
  40f9c0:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9c4:	mov    rsi,QWORD PTR [rbp-0x20]
  40f9c8:	mov    rax,QWORD PTR [rbp-0x48]
  40f9cc:	mov    rdi,rax
  40f9cf:	call   4049b3 <_start@@Base+0x16a3>
  40f9d4:	mov    QWORD PTR [rbp-0x50],rax
  40f9d8:	mov    rax,QWORD PTR [rbp-0x20]
  40f9dc:	cmp    rax,QWORD PTR [rbp-0x50]
  40f9e0:	jne    40fa2c <_start@@Base+0xc71c>
  40f9e2:	mov    rax,QWORD PTR [rbp-0x50]
  40f9e6:	mov    QWORD PTR [rbp-0x20],rax
  40f9ea:	lea    rcx,[rbp-0x30]
  40f9ee:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9f2:	mov    rsi,QWORD PTR [rbp-0x20]
  40f9f6:	mov    rax,QWORD PTR [rbp-0x48]
  40f9fa:	mov    r8,rcx
  40f9fd:	lea    rcx,[rip+0x1ad3c]        # 42a740 <filename@@Base+0x640>
  40fa04:	mov    rdi,rax
  40fa07:	call   4050c9 <_start@@Base+0x1db9>
  40fa0c:	mov    QWORD PTR [rbp-0x50],rax
  40fa10:	mov    rax,QWORD PTR [rbp-0x50]
  40fa14:	cmp    rax,QWORD PTR [rbp-0x20]
  40fa18:	je     4104a1 <_start@@Base+0xd191>
  40fa1e:	mov    rax,QWORD PTR [rbp-0x50]
  40fa22:	cmp    rax,QWORD PTR [rbp-0x58]
  40fa26:	je     4104a1 <_start@@Base+0xd191>
  40fa2c:	mov    rax,QWORD PTR [rbp-0x30]
  40fa30:	test   rax,rax
  40fa33:	jne    40fa47 <_start@@Base+0xc737>
  40fa35:	mov    rax,QWORD PTR [rbp-0x48]
  40fa39:	mov    eax,DWORD PTR [rax+0x10]
  40fa3c:	and    eax,0x2
  40fa3f:	test   eax,eax
  40fa41:	je     4102a9 <_start@@Base+0xcf99>
  40fa47:	mov    rax,QWORD PTR [rbp-0x48]
  40fa4b:	mov    rax,QWORD PTR [rax]
  40fa4e:	mov    ecx,0x8
  40fa53:	mov    edx,0x8
  40fa58:	mov    esi,0x17
  40fa5d:	mov    rdi,rax
  40fa60:	call   419d30 <flatcc_builder_table_add@@Base>
  40fa65:	mov    QWORD PTR [rbp-0x10],rax
  40fa69:	cmp    QWORD PTR [rbp-0x10],0x0
  40fa6e:	je     4104a4 <_start@@Base+0xd194>
  40fa74:	mov    rdx,QWORD PTR [rbp-0x30]
  40fa78:	mov    rax,QWORD PTR [rbp-0x10]
  40fa7c:	mov    rsi,rdx
  40fa7f:	mov    rdi,rax
  40fa82:	call   4034a1 <_start@@Base+0x191>
  40fa87:	jmp    4102a9 <_start@@Base+0xcf99>
  40fa8c:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa90:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa94:	mov    rax,QWORD PTR [rbp-0x48]
  40fa98:	mov    rsi,rcx
  40fa9b:	mov    rdi,rax
  40fa9e:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40faa3:	mov    QWORD PTR [rbp-0x50],rax
  40faa7:	jmp    4102a9 <_start@@Base+0xcf99>
  40faac:	mov    rdx,QWORD PTR [rbp-0x58]
  40fab0:	mov    rcx,QWORD PTR [rbp-0x50]
  40fab4:	mov    rax,QWORD PTR [rbp-0x48]
  40fab8:	mov    rsi,rcx
  40fabb:	mov    rdi,rax
  40fabe:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40fac3:	mov    QWORD PTR [rbp-0x50],rax
  40fac7:	jmp    4102a9 <_start@@Base+0xcf99>
  40facc:	mov    rdx,QWORD PTR [rbp-0x58]
  40fad0:	mov    rcx,QWORD PTR [rbp-0x50]
  40fad4:	mov    rax,QWORD PTR [rbp-0x48]
  40fad8:	mov    rsi,rcx
  40fadb:	mov    rdi,rax
  40fade:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40fae3:	mov    QWORD PTR [rbp-0x50],rax
  40fae7:	jmp    4102a9 <_start@@Base+0xcf99>
  40faec:	movabs rax,0x766563746f725f6e
  40faf6:	cmp    QWORD PTR [rbp-0x28],rax
  40fafa:	ja     40fe2a <_start@@Base+0xcb1a>
  40fb00:	movabs rax,0x746573746e657374
  40fb0a:	cmp    QWORD PTR [rbp-0x28],rax
  40fb0e:	jne    40fe0a <_start@@Base+0xcafa>
  40fb14:	add    QWORD PTR [rbp-0x50],0x8
  40fb19:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb1d:	mov    rax,QWORD PTR [rbp-0x50]
  40fb21:	mov    rsi,rdx
  40fb24:	mov    rdi,rax
  40fb27:	call   403dd5 <_start@@Base+0xac5>
  40fb2c:	mov    QWORD PTR [rbp-0x28],rax
  40fb30:	movabs rax,0x6564666c61746275
  40fb3a:	cmp    QWORD PTR [rbp-0x28],rax
  40fb3e:	jne    40fdea <_start@@Base+0xcada>
  40fb44:	add    QWORD PTR [rbp-0x50],0x8
  40fb49:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb4d:	mov    rax,QWORD PTR [rbp-0x50]
  40fb51:	mov    rsi,rdx
  40fb54:	mov    rdi,rax
  40fb57:	call   403dd5 <_start@@Base+0xac5>
  40fb5c:	mov    QWORD PTR [rbp-0x28],rax
  40fb60:	movabs rax,0xffffffff00000000
  40fb6a:	and    rax,QWORD PTR [rbp-0x28]
  40fb6e:	mov    rdx,rax
  40fb71:	movabs rax,0x6666657200000000
  40fb7b:	cmp    rdx,rax
  40fb7e:	jne    40fdca <_start@@Base+0xcaba>
  40fb84:	mov    rax,QWORD PTR [rbp-0x50]
  40fb88:	mov    QWORD PTR [rbp-0x20],rax
  40fb8c:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb90:	mov    rsi,QWORD PTR [rbp-0x20]
  40fb94:	mov    rax,QWORD PTR [rbp-0x48]
  40fb98:	mov    ecx,0x4
  40fb9d:	mov    rdi,rax
  40fba0:	call   4042cc <_start@@Base+0xfbc>
  40fba5:	mov    QWORD PTR [rbp-0x50],rax
  40fba9:	mov    rax,QWORD PTR [rbp-0x20]
  40fbad:	cmp    rax,QWORD PTR [rbp-0x50]
  40fbb1:	je     40fdaa <_start@@Base+0xca9a>
  40fbb7:	mov    rax,QWORD PTR [rbp-0x50]
  40fbbb:	cmp    rax,QWORD PTR [rbp-0x58]
  40fbbf:	je     40fd0a <_start@@Base+0xc9fa>
  40fbc5:	mov    rax,QWORD PTR [rbp-0x50]
  40fbc9:	movzx  eax,BYTE PTR [rax]
  40fbcc:	cmp    al,0x5b
  40fbce:	jne    40fd0a <_start@@Base+0xc9fa>
  40fbd4:	mov    rax,QWORD PTR [rbp-0x48]
  40fbd8:	mov    rax,QWORD PTR [rax]
  40fbdb:	mov    ecx,0xffffffff
  40fbe0:	mov    edx,0x1
  40fbe5:	mov    esi,0x1
  40fbea:	mov    rdi,rax
  40fbed:	call   417932 <flatcc_builder_start_vector@@Base>
  40fbf2:	test   eax,eax
  40fbf4:	jne    4104a7 <_start@@Base+0xd197>
  40fbfa:	lea    rcx,[rbp-0x40]
  40fbfe:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc02:	mov    rsi,QWORD PTR [rbp-0x50]
  40fc06:	mov    rax,QWORD PTR [rbp-0x48]
  40fc0a:	mov    rdi,rax
  40fc0d:	call   4040d1 <_start@@Base+0xdc1>
  40fc12:	mov    QWORD PTR [rbp-0x50],rax
  40fc16:	jmp    40fceb <_start@@Base+0xc9db>
  40fc1b:	mov    BYTE PTR [rbp-0x30],0x0
  40fc1f:	mov    rax,QWORD PTR [rbp-0x48]
  40fc23:	mov    rax,QWORD PTR [rax]
  40fc26:	mov    esi,0x1
  40fc2b:	mov    rdi,rax
  40fc2e:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40fc33:	mov    QWORD PTR [rbp-0x10],rax
  40fc37:	cmp    QWORD PTR [rbp-0x10],0x0
  40fc3c:	je     4104aa <_start@@Base+0xd19a>
  40fc42:	mov    rax,QWORD PTR [rbp-0x50]
  40fc46:	mov    QWORD PTR [rbp-0x20],rax
  40fc4a:	lea    rcx,[rbp-0x30]
  40fc4e:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc52:	mov    rsi,QWORD PTR [rbp-0x20]
  40fc56:	mov    rax,QWORD PTR [rbp-0x48]
  40fc5a:	mov    rdi,rax
  40fc5d:	call   404c05 <_start@@Base+0x18f5>
  40fc62:	mov    QWORD PTR [rbp-0x50],rax
  40fc66:	mov    rax,QWORD PTR [rbp-0x20]
  40fc6a:	cmp    rax,QWORD PTR [rbp-0x50]
  40fc6e:	jne    40fcba <_start@@Base+0xc9aa>
  40fc70:	mov    rax,QWORD PTR [rbp-0x50]
  40fc74:	mov    QWORD PTR [rbp-0x20],rax
  40fc78:	lea    rcx,[rbp-0x30]
  40fc7c:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc80:	mov    rsi,QWORD PTR [rbp-0x20]
  40fc84:	mov    rax,QWORD PTR [rbp-0x48]
  40fc88:	mov    r8,rcx
  40fc8b:	lea    rcx,[rip+0x1aace]        # 42a760 <filename@@Base+0x660>
  40fc92:	mov    rdi,rax
  40fc95:	call   40559e <_start@@Base+0x228e>
  40fc9a:	mov    QWORD PTR [rbp-0x50],rax
  40fc9e:	mov    rax,QWORD PTR [rbp-0x50]
  40fca2:	cmp    rax,QWORD PTR [rbp-0x20]
  40fca6:	je     4104ad <_start@@Base+0xd19d>
  40fcac:	mov    rax,QWORD PTR [rbp-0x50]
  40fcb0:	cmp    rax,QWORD PTR [rbp-0x58]
  40fcb4:	je     4104ad <_start@@Base+0xd19d>
  40fcba:	movzx  eax,BYTE PTR [rbp-0x30]
  40fcbe:	movzx  edx,al
  40fcc1:	mov    rax,QWORD PTR [rbp-0x10]
  40fcc5:	mov    esi,edx
  40fcc7:	mov    rdi,rax
  40fcca:	call   403405 <_start@@Base+0xf5>
  40fccf:	lea    rcx,[rbp-0x40]
  40fcd3:	mov    rdx,QWORD PTR [rbp-0x58]
  40fcd7:	mov    rsi,QWORD PTR [rbp-0x50]
  40fcdb:	mov    rax,QWORD PTR [rbp-0x48]
  40fcdf:	mov    rdi,rax
  40fce2:	call   40418e <_start@@Base+0xe7e>
  40fce7:	mov    QWORD PTR [rbp-0x50],rax
  40fceb:	mov    eax,DWORD PTR [rbp-0x40]
  40fcee:	test   eax,eax
  40fcf0:	jne    40fc1b <_start@@Base+0xc90b>
  40fcf6:	mov    rax,QWORD PTR [rbp-0x48]
  40fcfa:	mov    rax,QWORD PTR [rax]
  40fcfd:	mov    rdi,rax
  40fd00:	call   418b27 <flatcc_builder_end_vector@@Base>
  40fd05:	mov    DWORD PTR [rbp-0x3c],eax
  40fd08:	jmp    40fd6e <_start@@Base+0xca5e>
  40fd0a:	mov    rax,QWORD PTR [rbp-0x48]
  40fd0e:	mov    rax,QWORD PTR [rax]
  40fd11:	mov    ecx,0x0
  40fd16:	mov    edx,0x0
  40fd1b:	mov    esi,0x0
  40fd20:	mov    rdi,rax
  40fd23:	call   416dbb <flatcc_builder_start_buffer@@Base>
  40fd28:	test   eax,eax
  40fd2a:	jne    4104b0 <_start@@Base+0xd1a0>
  40fd30:	lea    rcx,[rbp-0x3c]
  40fd34:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd38:	mov    rsi,QWORD PTR [rbp-0x50]
  40fd3c:	mov    rax,QWORD PTR [rbp-0x48]
  40fd40:	mov    rdi,rax
  40fd43:	call   40cbc1 <_start@@Base+0x98b1>
  40fd48:	mov    QWORD PTR [rbp-0x50],rax
  40fd4c:	mov    eax,DWORD PTR [rbp-0x3c]
  40fd4f:	test   eax,eax
  40fd51:	je     4104b3 <_start@@Base+0xd1a3>
  40fd57:	mov    edx,DWORD PTR [rbp-0x3c]
  40fd5a:	mov    rax,QWORD PTR [rbp-0x48]
  40fd5e:	mov    rax,QWORD PTR [rax]
  40fd61:	mov    esi,edx
  40fd63:	mov    rdi,rax
  40fd66:	call   416f08 <flatcc_builder_end_buffer@@Base>
  40fd6b:	mov    DWORD PTR [rbp-0x3c],eax
  40fd6e:	mov    eax,DWORD PTR [rbp-0x3c]
  40fd71:	test   eax,eax
  40fd73:	je     4104b6 <_start@@Base+0xd1a6>
  40fd79:	mov    rax,QWORD PTR [rbp-0x48]
  40fd7d:	mov    rax,QWORD PTR [rax]
  40fd80:	mov    esi,0xd
  40fd85:	mov    rdi,rax
  40fd88:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  40fd8d:	mov    QWORD PTR [rbp-0x18],rax
  40fd91:	cmp    QWORD PTR [rbp-0x18],0x0
  40fd96:	je     4104b6 <_start@@Base+0xd1a6>
  40fd9c:	mov    edx,DWORD PTR [rbp-0x3c]
  40fd9f:	mov    rax,QWORD PTR [rbp-0x18]
  40fda3:	mov    DWORD PTR [rax],edx
  40fda5:	jmp    4102a9 <_start@@Base+0xcf99>
  40fdaa:	mov    rdx,QWORD PTR [rbp-0x58]
  40fdae:	mov    rcx,QWORD PTR [rbp-0x50]
  40fdb2:	mov    rax,QWORD PTR [rbp-0x48]
  40fdb6:	mov    rsi,rcx
  40fdb9:	mov    rdi,rax
  40fdbc:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40fdc1:	mov    QWORD PTR [rbp-0x50],rax
  40fdc5:	jmp    4102a9 <_start@@Base+0xcf99>
  40fdca:	mov    rdx,QWORD PTR [rbp-0x58]
  40fdce:	mov    rcx,QWORD PTR [rbp-0x50]
  40fdd2:	mov    rax,QWORD PTR [rbp-0x48]
  40fdd6:	mov    rsi,rcx
  40fdd9:	mov    rdi,rax
  40fddc:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40fde1:	mov    QWORD PTR [rbp-0x50],rax
  40fde5:	jmp    4102a9 <_start@@Base+0xcf99>
  40fdea:	mov    rdx,QWORD PTR [rbp-0x58]
  40fdee:	mov    rcx,QWORD PTR [rbp-0x50]
  40fdf2:	mov    rax,QWORD PTR [rbp-0x48]
  40fdf6:	mov    rsi,rcx
  40fdf9:	mov    rdi,rax
  40fdfc:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40fe01:	mov    QWORD PTR [rbp-0x50],rax
  40fe05:	jmp    4102a9 <_start@@Base+0xcf99>
  40fe0a:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe0e:	mov    rcx,QWORD PTR [rbp-0x50]
  40fe12:	mov    rax,QWORD PTR [rbp-0x48]
  40fe16:	mov    rsi,rcx
  40fe19:	mov    rdi,rax
  40fe1c:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  40fe21:	mov    QWORD PTR [rbp-0x50],rax
  40fe25:	jmp    4102a9 <_start@@Base+0xcf99>
  40fe2a:	movabs rax,0x766563746f725f6f
  40fe34:	cmp    QWORD PTR [rbp-0x28],rax
  40fe38:	jne    41028e <_start@@Base+0xcf7e>
  40fe3e:	add    QWORD PTR [rbp-0x50],0x8
  40fe43:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe47:	mov    rax,QWORD PTR [rbp-0x50]
  40fe4b:	mov    rsi,rdx
  40fe4e:	mov    rdi,rax
  40fe51:	call   403dd5 <_start@@Base+0xac5>
  40fe56:	mov    QWORD PTR [rbp-0x28],rax
  40fe5a:	movabs rax,0x665f646f75626c65
  40fe64:	cmp    QWORD PTR [rbp-0x28],rax
  40fe68:	jne    410096 <_start@@Base+0xcd86>
  40fe6e:	add    QWORD PTR [rbp-0x50],0x8
  40fe73:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe77:	mov    rax,QWORD PTR [rbp-0x50]
  40fe7b:	mov    rsi,rdx
  40fe7e:	mov    rdi,rax
  40fe81:	call   403dd5 <_start@@Base+0xac5>
  40fe86:	mov    QWORD PTR [rbp-0x28],rax
  40fe8a:	movabs rax,0xff00000000000000
  40fe94:	and    rax,QWORD PTR [rbp-0x28]
  40fe98:	mov    rdx,rax
  40fe9b:	movabs rax,0x7300000000000000
  40fea5:	cmp    rdx,rax
  40fea8:	jne    410076 <_start@@Base+0xcd66>
  40feae:	mov    rax,QWORD PTR [rbp-0x50]
  40feb2:	mov    QWORD PTR [rbp-0x20],rax
  40feb6:	mov    rdx,QWORD PTR [rbp-0x58]
  40feba:	mov    rsi,QWORD PTR [rbp-0x20]
  40febe:	mov    rax,QWORD PTR [rbp-0x48]
  40fec2:	mov    ecx,0x1
  40fec7:	mov    rdi,rax
  40feca:	call   4042cc <_start@@Base+0xfbc>
  40fecf:	mov    QWORD PTR [rbp-0x50],rax
  40fed3:	mov    rax,QWORD PTR [rbp-0x20]
  40fed7:	cmp    rax,QWORD PTR [rbp-0x50]
  40fedb:	je     410056 <_start@@Base+0xcd46>
  40fee1:	mov    rax,QWORD PTR [rbp-0x48]
  40fee5:	mov    rax,QWORD PTR [rax]
  40fee8:	mov    ecx,0x1fffffff
  40feed:	mov    edx,0x8
  40fef2:	mov    esi,0x8
  40fef7:	mov    rdi,rax
  40fefa:	call   417932 <flatcc_builder_start_vector@@Base>
  40feff:	test   eax,eax
  40ff01:	jne    4104b9 <_start@@Base+0xd1a9>
  40ff07:	lea    rcx,[rbp-0x40]
  40ff0b:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff0f:	mov    rsi,QWORD PTR [rbp-0x50]
  40ff13:	mov    rax,QWORD PTR [rbp-0x48]
  40ff17:	mov    rdi,rax
  40ff1a:	call   4040d1 <_start@@Base+0xdc1>
  40ff1f:	mov    QWORD PTR [rbp-0x50],rax
  40ff23:	jmp    40fffd <_start@@Base+0xcced>
  40ff28:	vxorpd xmm0,xmm0,xmm0
  40ff2c:	vmovsd QWORD PTR [rbp-0x30],xmm0
  40ff31:	mov    rax,QWORD PTR [rbp-0x48]
  40ff35:	mov    rax,QWORD PTR [rax]
  40ff38:	mov    esi,0x1
  40ff3d:	mov    rdi,rax
  40ff40:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  40ff45:	mov    QWORD PTR [rbp-0x10],rax
  40ff49:	cmp    QWORD PTR [rbp-0x10],0x0
  40ff4e:	je     4104bc <_start@@Base+0xd1ac>
  40ff54:	mov    rax,QWORD PTR [rbp-0x50]
  40ff58:	mov    QWORD PTR [rbp-0x20],rax
  40ff5c:	lea    rcx,[rbp-0x30]
  40ff60:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff64:	mov    rsi,QWORD PTR [rbp-0x20]
  40ff68:	mov    rax,QWORD PTR [rbp-0x48]
  40ff6c:	mov    rdi,rax
  40ff6f:	call   41fef2 <flatcc_json_parser_double@@Base>
  40ff74:	mov    QWORD PTR [rbp-0x50],rax
  40ff78:	mov    rax,QWORD PTR [rbp-0x20]
  40ff7c:	cmp    rax,QWORD PTR [rbp-0x50]
  40ff80:	jne    40ffcc <_start@@Base+0xccbc>
  40ff82:	mov    rax,QWORD PTR [rbp-0x50]
  40ff86:	mov    QWORD PTR [rbp-0x20],rax
  40ff8a:	lea    rcx,[rbp-0x30]
  40ff8e:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff92:	mov    rsi,QWORD PTR [rbp-0x20]
  40ff96:	mov    rax,QWORD PTR [rbp-0x48]
  40ff9a:	mov    r8,rcx
  40ff9d:	lea    rcx,[rip+0x1a7dc]        # 42a780 <filename@@Base+0x680>
  40ffa4:	mov    rdi,rax
  40ffa7:	call   4060e3 <_start@@Base+0x2dd3>
  40ffac:	mov    QWORD PTR [rbp-0x50],rax
  40ffb0:	mov    rax,QWORD PTR [rbp-0x50]
  40ffb4:	cmp    rax,QWORD PTR [rbp-0x20]
  40ffb8:	je     4104bf <_start@@Base+0xd1af>
  40ffbe:	mov    rax,QWORD PTR [rbp-0x50]
  40ffc2:	cmp    rax,QWORD PTR [rbp-0x58]
  40ffc6:	je     4104bf <_start@@Base+0xd1af>
  40ffcc:	mov    rdx,QWORD PTR [rbp-0x30]
  40ffd0:	mov    rax,QWORD PTR [rbp-0x10]
  40ffd4:	vmovq  xmm0,rdx
  40ffd9:	mov    rdi,rax
  40ffdc:	call   403701 <_start@@Base+0x3f1>
  40ffe1:	lea    rcx,[rbp-0x40]
  40ffe5:	mov    rdx,QWORD PTR [rbp-0x58]
  40ffe9:	mov    rsi,QWORD PTR [rbp-0x50]
  40ffed:	mov    rax,QWORD PTR [rbp-0x48]
  40fff1:	mov    rdi,rax
  40fff4:	call   40418e <_start@@Base+0xe7e>
  40fff9:	mov    QWORD PTR [rbp-0x50],rax
  40fffd:	mov    eax,DWORD PTR [rbp-0x40]
  410000:	test   eax,eax
  410002:	jne    40ff28 <_start@@Base+0xcc18>
  410008:	mov    rax,QWORD PTR [rbp-0x48]
  41000c:	mov    rax,QWORD PTR [rax]
  41000f:	mov    rdi,rax
  410012:	call   418b27 <flatcc_builder_end_vector@@Base>
  410017:	mov    DWORD PTR [rbp-0x3c],eax
  41001a:	mov    eax,DWORD PTR [rbp-0x3c]
  41001d:	test   eax,eax
  41001f:	je     4104c2 <_start@@Base+0xd1b2>
  410025:	mov    rax,QWORD PTR [rbp-0x48]
  410029:	mov    rax,QWORD PTR [rax]
  41002c:	mov    esi,0x21
  410031:	mov    rdi,rax
  410034:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  410039:	mov    QWORD PTR [rbp-0x18],rax
  41003d:	cmp    QWORD PTR [rbp-0x18],0x0
  410042:	je     4104c2 <_start@@Base+0xd1b2>
  410048:	mov    edx,DWORD PTR [rbp-0x3c]
  41004b:	mov    rax,QWORD PTR [rbp-0x18]
  41004f:	mov    DWORD PTR [rax],edx
  410051:	jmp    4102a9 <_start@@Base+0xcf99>
  410056:	mov    rdx,QWORD PTR [rbp-0x58]
  41005a:	mov    rcx,QWORD PTR [rbp-0x50]
  41005e:	mov    rax,QWORD PTR [rbp-0x48]
  410062:	mov    rsi,rcx
  410065:	mov    rdi,rax
  410068:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  41006d:	mov    QWORD PTR [rbp-0x50],rax
  410071:	jmp    4102a9 <_start@@Base+0xcf99>
  410076:	mov    rdx,QWORD PTR [rbp-0x58]
  41007a:	mov    rcx,QWORD PTR [rbp-0x50]
  41007e:	mov    rax,QWORD PTR [rbp-0x48]
  410082:	mov    rsi,rcx
  410085:	mov    rdi,rax
  410088:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  41008d:	mov    QWORD PTR [rbp-0x50],rax
  410091:	jmp    4102a9 <_start@@Base+0xcf99>
  410096:	mov    rax,QWORD PTR [rbp-0x28]
  41009a:	mov    al,0x0
  41009c:	mov    rdx,rax
  41009f:	movabs rax,0x665f6c6f6e677300
  4100a9:	cmp    rdx,rax
  4100ac:	jne    410271 <_start@@Base+0xcf61>
  4100b2:	mov    rax,QWORD PTR [rbp-0x50]
  4100b6:	mov    QWORD PTR [rbp-0x20],rax
  4100ba:	mov    rdx,QWORD PTR [rbp-0x58]
  4100be:	mov    rsi,QWORD PTR [rbp-0x20]
  4100c2:	mov    rax,QWORD PTR [rbp-0x48]
  4100c6:	mov    ecx,0x7
  4100cb:	mov    rdi,rax
  4100ce:	call   4042cc <_start@@Base+0xfbc>
  4100d3:	mov    QWORD PTR [rbp-0x50],rax
  4100d7:	mov    rax,QWORD PTR [rbp-0x20]
  4100db:	cmp    rax,QWORD PTR [rbp-0x50]
  4100df:	je     410254 <_start@@Base+0xcf44>
  4100e5:	mov    rax,QWORD PTR [rbp-0x48]
  4100e9:	mov    rax,QWORD PTR [rax]
  4100ec:	mov    ecx,0x1fffffff
  4100f1:	mov    edx,0x8
  4100f6:	mov    esi,0x8
  4100fb:	mov    rdi,rax
  4100fe:	call   417932 <flatcc_builder_start_vector@@Base>
  410103:	test   eax,eax
  410105:	jne    4104c5 <_start@@Base+0xd1b5>
  41010b:	lea    rcx,[rbp-0x40]
  41010f:	mov    rdx,QWORD PTR [rbp-0x58]
  410113:	mov    rsi,QWORD PTR [rbp-0x50]
  410117:	mov    rax,QWORD PTR [rbp-0x48]
  41011b:	mov    rdi,rax
  41011e:	call   4040d1 <_start@@Base+0xdc1>
  410123:	mov    QWORD PTR [rbp-0x50],rax
  410127:	jmp    4101fe <_start@@Base+0xceee>
  41012c:	mov    QWORD PTR [rbp-0x30],0x0
  410134:	mov    rax,QWORD PTR [rbp-0x48]
  410138:	mov    rax,QWORD PTR [rax]
  41013b:	mov    esi,0x1
  410140:	mov    rdi,rax
  410143:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  410148:	mov    QWORD PTR [rbp-0x10],rax
  41014c:	cmp    QWORD PTR [rbp-0x10],0x0
  410151:	je     4104c8 <_start@@Base+0xd1b8>
  410157:	mov    rax,QWORD PTR [rbp-0x50]
  41015b:	mov    QWORD PTR [rbp-0x20],rax
  41015f:	lea    rcx,[rbp-0x30]
  410163:	mov    rdx,QWORD PTR [rbp-0x58]
  410167:	mov    rsi,QWORD PTR [rbp-0x20]
  41016b:	mov    rax,QWORD PTR [rbp-0x48]
  41016f:	mov    rdi,rax
  410172:	call   404cc8 <_start@@Base+0x19b8>
  410177:	mov    QWORD PTR [rbp-0x50],rax
  41017b:	mov    rax,QWORD PTR [rbp-0x20]
  41017f:	cmp    rax,QWORD PTR [rbp-0x50]
  410183:	jne    4101cf <_start@@Base+0xcebf>
  410185:	mov    rax,QWORD PTR [rbp-0x50]
  410189:	mov    QWORD PTR [rbp-0x20],rax
  41018d:	lea    rcx,[rbp-0x30]
  410191:	mov    rdx,QWORD PTR [rbp-0x58]
  410195:	mov    rsi,QWORD PTR [rbp-0x20]
  410199:	mov    rax,QWORD PTR [rbp-0x48]
  41019d:	mov    r8,rcx
  4101a0:	lea    rcx,[rip+0x1a5f9]        # 42a7a0 <filename@@Base+0x6a0>
  4101a7:	mov    rdi,rax
  4101aa:	call   405734 <_start@@Base+0x2424>
  4101af:	mov    QWORD PTR [rbp-0x50],rax
  4101b3:	mov    rax,QWORD PTR [rbp-0x50]
  4101b7:	cmp    rax,QWORD PTR [rbp-0x20]
  4101bb:	je     4104cb <_start@@Base+0xd1bb>
  4101c1:	mov    rax,QWORD PTR [rbp-0x50]
  4101c5:	cmp    rax,QWORD PTR [rbp-0x58]
  4101c9:	je     4104cb <_start@@Base+0xd1bb>
  4101cf:	mov    rdx,QWORD PTR [rbp-0x30]
  4101d3:	mov    rax,QWORD PTR [rbp-0x10]
  4101d7:	mov    rsi,rdx
  4101da:	mov    rdi,rax
  4101dd:	call   4035d0 <_start@@Base+0x2c0>
  4101e2:	lea    rcx,[rbp-0x40]
  4101e6:	mov    rdx,QWORD PTR [rbp-0x58]
  4101ea:	mov    rsi,QWORD PTR [rbp-0x50]
  4101ee:	mov    rax,QWORD PTR [rbp-0x48]
  4101f2:	mov    rdi,rax
  4101f5:	call   40418e <_start@@Base+0xe7e>
  4101fa:	mov    QWORD PTR [rbp-0x50],rax
  4101fe:	mov    eax,DWORD PTR [rbp-0x40]
  410201:	test   eax,eax
  410203:	jne    41012c <_start@@Base+0xce1c>
  410209:	mov    rax,QWORD PTR [rbp-0x48]
  41020d:	mov    rax,QWORD PTR [rax]
  410210:	mov    rdi,rax
  410213:	call   418b27 <flatcc_builder_end_vector@@Base>
  410218:	mov    DWORD PTR [rbp-0x3c],eax
  41021b:	mov    eax,DWORD PTR [rbp-0x3c]
  41021e:	test   eax,eax
  410220:	je     4104ce <_start@@Base+0xd1be>
  410226:	mov    rax,QWORD PTR [rbp-0x48]
  41022a:	mov    rax,QWORD PTR [rax]
  41022d:	mov    esi,0x20
  410232:	mov    rdi,rax
  410235:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  41023a:	mov    QWORD PTR [rbp-0x18],rax
  41023e:	cmp    QWORD PTR [rbp-0x18],0x0
  410243:	je     4104ce <_start@@Base+0xd1be>
  410249:	mov    edx,DWORD PTR [rbp-0x3c]
  41024c:	mov    rax,QWORD PTR [rbp-0x18]
  410250:	mov    DWORD PTR [rax],edx
  410252:	jmp    4102a9 <_start@@Base+0xcf99>
  410254:	mov    rdx,QWORD PTR [rbp-0x58]
  410258:	mov    rcx,QWORD PTR [rbp-0x50]
  41025c:	mov    rax,QWORD PTR [rbp-0x48]
  410260:	mov    rsi,rcx
  410263:	mov    rdi,rax
  410266:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  41026b:	mov    QWORD PTR [rbp-0x50],rax
  41026f:	jmp    4102a9 <_start@@Base+0xcf99>
  410271:	mov    rdx,QWORD PTR [rbp-0x58]
  410275:	mov    rcx,QWORD PTR [rbp-0x50]
  410279:	mov    rax,QWORD PTR [rbp-0x48]
  41027d:	mov    rsi,rcx
  410280:	mov    rdi,rax
  410283:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410288:	mov    QWORD PTR [rbp-0x50],rax
  41028c:	jmp    4102a9 <_start@@Base+0xcf99>
  41028e:	mov    rdx,QWORD PTR [rbp-0x58]
  410292:	mov    rcx,QWORD PTR [rbp-0x50]
  410296:	mov    rax,QWORD PTR [rbp-0x48]
  41029a:	mov    rsi,rcx
  41029d:	mov    rdi,rax
  4102a0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4102a5:	mov    QWORD PTR [rbp-0x50],rax
  4102a9:	lea    rcx,[rbp-0x40]
  4102ad:	mov    rdx,QWORD PTR [rbp-0x58]
  4102b1:	mov    rsi,QWORD PTR [rbp-0x50]
  4102b5:	mov    rax,QWORD PTR [rbp-0x48]
  4102b9:	mov    rdi,rax
  4102bc:	call   403f93 <_start@@Base+0xc83>
  4102c1:	mov    QWORD PTR [rbp-0x50],rax
  4102c5:	mov    eax,DWORD PTR [rbp-0x40]
  4102c8:	test   eax,eax
  4102ca:	jne    40cc5d <_start@@Base+0x994d>
  4102d0:	mov    rax,QWORD PTR [rbp-0x48]
  4102d4:	mov    eax,DWORD PTR [rax+0x20]
  4102d7:	test   eax,eax
  4102d9:	jne    4104d1 <_start@@Base+0xd1c1>
  4102df:	mov    rax,QWORD PTR [rbp-0x48]
  4102e3:	mov    rax,QWORD PTR [rax]
  4102e6:	mov    esi,0x3
  4102eb:	mov    rdi,rax
  4102ee:	call   418453 <flatcc_builder_check_required_field@@Base>
  4102f3:	test   eax,eax
  4102f5:	jne    410319 <_start@@Base+0xd009>
  4102f7:	mov    rdx,QWORD PTR [rbp-0x58]
  4102fb:	mov    rsi,QWORD PTR [rbp-0x50]
  4102ff:	mov    rax,QWORD PTR [rbp-0x48]
  410303:	mov    ecx,0x1d
  410308:	mov    rdi,rax
  41030b:	call   41f09d <flatcc_json_parser_set_error@@Base>
  410310:	mov    QWORD PTR [rbp-0x50],rax
  410314:	jmp    4104d5 <_start@@Base+0xd1c5>
  410319:	mov    rcx,QWORD PTR [rbp-0x38]
  41031d:	mov    rdx,QWORD PTR [rbp-0x58]
  410321:	mov    rsi,QWORD PTR [rbp-0x50]
  410325:	mov    rax,QWORD PTR [rbp-0x48]
  410329:	mov    rdi,rax
  41032c:	call   420dad <flatcc_json_parser_finalize_unions@@Base>
  410331:	mov    QWORD PTR [rbp-0x50],rax
  410335:	mov    rax,QWORD PTR [rbp-0x48]
  410339:	mov    rax,QWORD PTR [rax]
  41033c:	mov    rdi,rax
  41033f:	call   41868f <flatcc_builder_end_table@@Base>
  410344:	mov    edx,eax
  410346:	mov    rax,QWORD PTR [rbp-0x60]
  41034a:	mov    DWORD PTR [rax],edx
  41034c:	mov    rax,QWORD PTR [rbp-0x60]
  410350:	mov    eax,DWORD PTR [rax]
  410352:	test   eax,eax
  410354:	je     4104d4 <_start@@Base+0xd1c4>
  41035a:	mov    rax,QWORD PTR [rbp-0x50]
  41035e:	jmp    4104ee <_start@@Base+0xd1de>
  410363:	nop
  410364:	jmp    4104d5 <_start@@Base+0xd1c5>
  410369:	nop
  41036a:	jmp    4104d5 <_start@@Base+0xd1c5>
  41036f:	nop
  410370:	jmp    4104d5 <_start@@Base+0xd1c5>
  410375:	nop
  410376:	jmp    4104d5 <_start@@Base+0xd1c5>
  41037b:	nop
  41037c:	jmp    4104d5 <_start@@Base+0xd1c5>
  410381:	nop
  410382:	jmp    4104d5 <_start@@Base+0xd1c5>
  410387:	nop
  410388:	jmp    4104d5 <_start@@Base+0xd1c5>
  41038d:	nop
  41038e:	jmp    4104d5 <_start@@Base+0xd1c5>
  410393:	nop
  410394:	jmp    4104d5 <_start@@Base+0xd1c5>
  410399:	nop
  41039a:	jmp    4104d5 <_start@@Base+0xd1c5>
  41039f:	nop
  4103a0:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103a5:	nop
  4103a6:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103ab:	nop
  4103ac:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103b1:	nop
  4103b2:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103b7:	nop
  4103b8:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103bd:	nop
  4103be:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103c3:	nop
  4103c4:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103c9:	nop
  4103ca:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103cf:	nop
  4103d0:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103d5:	nop
  4103d6:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103db:	nop
  4103dc:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103e1:	nop
  4103e2:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103e7:	nop
  4103e8:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103ed:	nop
  4103ee:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103f3:	nop
  4103f4:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103f9:	nop
  4103fa:	jmp    4104d5 <_start@@Base+0xd1c5>
  4103ff:	nop
  410400:	jmp    4104d5 <_start@@Base+0xd1c5>
  410405:	nop
  410406:	jmp    4104d5 <_start@@Base+0xd1c5>
  41040b:	nop
  41040c:	jmp    4104d5 <_start@@Base+0xd1c5>
  410411:	nop
  410412:	jmp    4104d5 <_start@@Base+0xd1c5>
  410417:	nop
  410418:	jmp    4104d5 <_start@@Base+0xd1c5>
  41041d:	nop
  41041e:	jmp    4104d5 <_start@@Base+0xd1c5>
  410423:	nop
  410424:	jmp    4104d5 <_start@@Base+0xd1c5>
  410429:	nop
  41042a:	jmp    4104d5 <_start@@Base+0xd1c5>
  41042f:	nop
  410430:	jmp    4104d5 <_start@@Base+0xd1c5>
  410435:	nop
  410436:	jmp    4104d5 <_start@@Base+0xd1c5>
  41043b:	nop
  41043c:	jmp    4104d5 <_start@@Base+0xd1c5>
  410441:	nop
  410442:	jmp    4104d5 <_start@@Base+0xd1c5>
  410447:	nop
  410448:	jmp    4104d5 <_start@@Base+0xd1c5>
  41044d:	nop
  41044e:	jmp    4104d5 <_start@@Base+0xd1c5>
  410453:	nop
  410454:	jmp    4104d5 <_start@@Base+0xd1c5>
  410456:	nop
  410457:	jmp    4104d5 <_start@@Base+0xd1c5>
  410459:	nop
  41045a:	jmp    4104d5 <_start@@Base+0xd1c5>
  41045c:	nop
  41045d:	jmp    4104d5 <_start@@Base+0xd1c5>
  41045f:	nop
  410460:	jmp    4104d5 <_start@@Base+0xd1c5>
  410462:	nop
  410463:	jmp    4104d5 <_start@@Base+0xd1c5>
  410465:	nop
  410466:	jmp    4104d5 <_start@@Base+0xd1c5>
  410468:	nop
  410469:	jmp    4104d5 <_start@@Base+0xd1c5>
  41046b:	nop
  41046c:	jmp    4104d5 <_start@@Base+0xd1c5>
  41046e:	nop
  41046f:	jmp    4104d5 <_start@@Base+0xd1c5>
  410471:	nop
  410472:	jmp    4104d5 <_start@@Base+0xd1c5>
  410474:	nop
  410475:	jmp    4104d5 <_start@@Base+0xd1c5>
  410477:	nop
  410478:	jmp    4104d5 <_start@@Base+0xd1c5>
  41047a:	nop
  41047b:	jmp    4104d5 <_start@@Base+0xd1c5>
  41047d:	nop
  41047e:	jmp    4104d5 <_start@@Base+0xd1c5>
  410480:	nop
  410481:	jmp    4104d5 <_start@@Base+0xd1c5>
  410483:	nop
  410484:	jmp    4104d5 <_start@@Base+0xd1c5>
  410486:	nop
  410487:	jmp    4104d5 <_start@@Base+0xd1c5>
  410489:	nop
  41048a:	jmp    4104d5 <_start@@Base+0xd1c5>
  41048c:	nop
  41048d:	jmp    4104d5 <_start@@Base+0xd1c5>
  41048f:	nop
  410490:	jmp    4104d5 <_start@@Base+0xd1c5>
  410492:	nop
  410493:	jmp    4104d5 <_start@@Base+0xd1c5>
  410495:	nop
  410496:	jmp    4104d5 <_start@@Base+0xd1c5>
  410498:	nop
  410499:	jmp    4104d5 <_start@@Base+0xd1c5>
  41049b:	nop
  41049c:	jmp    4104d5 <_start@@Base+0xd1c5>
  41049e:	nop
  41049f:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104a1:	nop
  4104a2:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104a4:	nop
  4104a5:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104a7:	nop
  4104a8:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104aa:	nop
  4104ab:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104ad:	nop
  4104ae:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104b0:	nop
  4104b1:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104b3:	nop
  4104b4:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104b6:	nop
  4104b7:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104b9:	nop
  4104ba:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104bc:	nop
  4104bd:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104bf:	nop
  4104c0:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104c2:	nop
  4104c3:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104c5:	nop
  4104c6:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104c8:	nop
  4104c9:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104cb:	nop
  4104cc:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104ce:	nop
  4104cf:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104d1:	nop
  4104d2:	jmp    4104d5 <_start@@Base+0xd1c5>
  4104d4:	nop
  4104d5:	mov    rdx,QWORD PTR [rbp-0x58]
  4104d9:	mov    rsi,QWORD PTR [rbp-0x50]
  4104dd:	mov    rax,QWORD PTR [rbp-0x48]
  4104e1:	mov    ecx,0x21
  4104e6:	mov    rdi,rax
  4104e9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4104ee:	mov    rdi,QWORD PTR [rbp-0x8]
  4104f2:	xor    rdi,QWORD PTR fs:0x28
  4104fb:	je     410502 <_start@@Base+0xd1f2>
  4104fd:	call   403200 <__stack_chk_fail@plt>
  410502:	leave  
  410503:	ret    
  410504:	endbr64 
  410508:	push   rbp
  410509:	mov    rbp,rsp
  41050c:	sub    rsp,0x60
  410510:	mov    QWORD PTR [rbp-0x48],rdi
  410514:	mov    QWORD PTR [rbp-0x50],rsi
  410518:	mov    QWORD PTR [rbp-0x58],rdx
  41051c:	mov    QWORD PTR [rbp-0x60],rcx
  410520:	mov    rax,QWORD PTR fs:0x28
  410529:	mov    QWORD PTR [rbp-0x8],rax
  41052d:	xor    eax,eax
  41052f:	mov    rax,QWORD PTR [rbp-0x60]
  410533:	mov    DWORD PTR [rax],0x0
  410539:	mov    rax,QWORD PTR [rbp-0x48]
  41053d:	mov    rax,QWORD PTR [rax]
  410540:	mov    esi,0xc
  410545:	mov    rdi,rax
  410548:	call   417b80 <flatcc_builder_start_table@@Base>
  41054d:	test   eax,eax
  41054f:	jne    4118cd <_start@@Base+0xe5bd>
  410555:	lea    rcx,[rbp-0x38]
  410559:	mov    rdx,QWORD PTR [rbp-0x58]
  41055d:	mov    rsi,QWORD PTR [rbp-0x50]
  410561:	mov    rax,QWORD PTR [rbp-0x48]
  410565:	mov    rdi,rax
  410568:	call   403ed6 <_start@@Base+0xbc6>
  41056d:	mov    QWORD PTR [rbp-0x50],rax
  410571:	jmp    411890 <_start@@Base+0xe580>
  410576:	mov    rdx,QWORD PTR [rbp-0x58]
  41057a:	mov    rcx,QWORD PTR [rbp-0x50]
  41057e:	mov    rax,QWORD PTR [rbp-0x48]
  410582:	mov    rsi,rcx
  410585:	mov    rdi,rax
  410588:	call   403c48 <_start@@Base+0x938>
  41058d:	mov    QWORD PTR [rbp-0x50],rax
  410591:	mov    rdx,QWORD PTR [rbp-0x58]
  410595:	mov    rax,QWORD PTR [rbp-0x50]
  410599:	mov    rsi,rdx
  41059c:	mov    rdi,rax
  41059f:	call   403dd5 <_start@@Base+0xac5>
  4105a4:	mov    QWORD PTR [rbp-0x28],rax
  4105a8:	movabs rax,0x6937ffffffffffff
  4105b2:	cmp    QWORD PTR [rbp-0x28],rax
  4105b6:	ja     410d16 <_start@@Base+0xda06>
  4105bc:	movabs rax,0x693135ffffffffff
  4105c6:	cmp    QWORD PTR [rbp-0x28],rax
  4105ca:	ja     4108c2 <_start@@Base+0xd5b2>
  4105d0:	movabs rax,0xffffff0000000000
  4105da:	and    rax,QWORD PTR [rbp-0x28]
  4105de:	mov    rdx,rax
  4105e1:	movabs rax,0x6636340000000000
  4105eb:	cmp    rdx,rax
  4105ee:	jne    41073a <_start@@Base+0xd42a>
  4105f4:	mov    rax,QWORD PTR [rbp-0x50]
  4105f8:	mov    QWORD PTR [rbp-0x20],rax
  4105fc:	mov    rdx,QWORD PTR [rbp-0x58]
  410600:	mov    rsi,QWORD PTR [rbp-0x20]
  410604:	mov    rax,QWORD PTR [rbp-0x48]
  410608:	mov    ecx,0x3
  41060d:	mov    rdi,rax
  410610:	call   4042cc <_start@@Base+0xfbc>
  410615:	mov    QWORD PTR [rbp-0x50],rax
  410619:	mov    rax,QWORD PTR [rbp-0x20]
  41061d:	cmp    rax,QWORD PTR [rbp-0x50]
  410621:	je     41071a <_start@@Base+0xd40a>
  410627:	vxorpd xmm0,xmm0,xmm0
  41062b:	vmovsd QWORD PTR [rbp-0x30],xmm0
  410630:	mov    rax,QWORD PTR [rbp-0x50]
  410634:	mov    QWORD PTR [rbp-0x20],rax
  410638:	lea    rcx,[rbp-0x30]
  41063c:	mov    rdx,QWORD PTR [rbp-0x58]
  410640:	mov    rsi,QWORD PTR [rbp-0x20]
  410644:	mov    rax,QWORD PTR [rbp-0x48]
  410648:	mov    rdi,rax
  41064b:	call   41fef2 <flatcc_json_parser_double@@Base>
  410650:	mov    QWORD PTR [rbp-0x50],rax
  410654:	mov    rax,QWORD PTR [rbp-0x20]
  410658:	cmp    rax,QWORD PTR [rbp-0x50]
  41065c:	jne    4106a8 <_start@@Base+0xd398>
  41065e:	mov    rax,QWORD PTR [rbp-0x50]
  410662:	mov    QWORD PTR [rbp-0x20],rax
  410666:	lea    rcx,[rbp-0x30]
  41066a:	mov    rdx,QWORD PTR [rbp-0x58]
  41066e:	mov    rsi,QWORD PTR [rbp-0x20]
  410672:	mov    rax,QWORD PTR [rbp-0x48]
  410676:	mov    r8,rcx
  410679:	lea    rcx,[rip+0x1a140]        # 42a7c0 <filename@@Base+0x6c0>
  410680:	mov    rdi,rax
  410683:	call   4060e3 <_start@@Base+0x2dd3>
  410688:	mov    QWORD PTR [rbp-0x50],rax
  41068c:	mov    rax,QWORD PTR [rbp-0x50]
  410690:	cmp    rax,QWORD PTR [rbp-0x20]
  410694:	je     4118d0 <_start@@Base+0xe5c0>
  41069a:	mov    rax,QWORD PTR [rbp-0x50]
  41069e:	cmp    rax,QWORD PTR [rbp-0x58]
  4106a2:	je     4118d0 <_start@@Base+0xe5c0>
  4106a8:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  4106ad:	vxorpd xmm1,xmm1,xmm1
  4106b1:	vucomisd xmm0,xmm1
  4106b5:	jp     4106d3 <_start@@Base+0xd3c3>
  4106b7:	vxorpd xmm1,xmm1,xmm1
  4106bb:	vucomisd xmm0,xmm1
  4106bf:	jne    4106d3 <_start@@Base+0xd3c3>
  4106c1:	mov    rax,QWORD PTR [rbp-0x48]
  4106c5:	mov    eax,DWORD PTR [rax+0x10]
  4106c8:	and    eax,0x2
  4106cb:	test   eax,eax
  4106cd:	je     411874 <_start@@Base+0xe564>
  4106d3:	mov    rax,QWORD PTR [rbp-0x48]
  4106d7:	mov    rax,QWORD PTR [rax]
  4106da:	mov    ecx,0x8
  4106df:	mov    edx,0x8
  4106e4:	mov    esi,0x9
  4106e9:	mov    rdi,rax
  4106ec:	call   419d30 <flatcc_builder_table_add@@Base>
  4106f1:	mov    QWORD PTR [rbp-0x18],rax
  4106f5:	cmp    QWORD PTR [rbp-0x18],0x0
  4106fa:	je     4118d3 <_start@@Base+0xe5c3>
  410700:	mov    rdx,QWORD PTR [rbp-0x30]
  410704:	mov    rax,QWORD PTR [rbp-0x18]
  410708:	vmovq  xmm0,rdx
  41070d:	mov    rdi,rax
  410710:	call   403701 <_start@@Base+0x3f1>
  410715:	jmp    411874 <_start@@Base+0xe564>
  41071a:	mov    rdx,QWORD PTR [rbp-0x58]
  41071e:	mov    rcx,QWORD PTR [rbp-0x50]
  410722:	mov    rax,QWORD PTR [rbp-0x48]
  410726:	mov    rsi,rcx
  410729:	mov    rdi,rax
  41072c:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410731:	mov    QWORD PTR [rbp-0x50],rax
  410735:	jmp    411874 <_start@@Base+0xe564>
  41073a:	movabs rax,0xffffff0000000000
  410744:	and    rax,QWORD PTR [rbp-0x28]
  410748:	mov    rdx,rax
  41074b:	movabs rax,0x6633320000000000
  410755:	cmp    rdx,rax
  410758:	jne    4108a2 <_start@@Base+0xd592>
  41075e:	mov    rax,QWORD PTR [rbp-0x50]
  410762:	mov    QWORD PTR [rbp-0x20],rax
  410766:	mov    rdx,QWORD PTR [rbp-0x58]
  41076a:	mov    rsi,QWORD PTR [rbp-0x20]
  41076e:	mov    rax,QWORD PTR [rbp-0x48]
  410772:	mov    ecx,0x3
  410777:	mov    rdi,rax
  41077a:	call   4042cc <_start@@Base+0xfbc>
  41077f:	mov    QWORD PTR [rbp-0x50],rax
  410783:	mov    rax,QWORD PTR [rbp-0x20]
  410787:	cmp    rax,QWORD PTR [rbp-0x50]
  41078b:	je     410882 <_start@@Base+0xd572>
  410791:	vxorps xmm0,xmm0,xmm0
  410795:	vmovss DWORD PTR [rbp-0x30],xmm0
  41079a:	mov    rax,QWORD PTR [rbp-0x50]
  41079e:	mov    QWORD PTR [rbp-0x20],rax
  4107a2:	lea    rcx,[rbp-0x30]
  4107a6:	mov    rdx,QWORD PTR [rbp-0x58]
  4107aa:	mov    rsi,QWORD PTR [rbp-0x20]
  4107ae:	mov    rax,QWORD PTR [rbp-0x48]
  4107b2:	mov    rdi,rax
  4107b5:	call   420037 <flatcc_json_parser_float@@Base>
  4107ba:	mov    QWORD PTR [rbp-0x50],rax
  4107be:	mov    rax,QWORD PTR [rbp-0x20]
  4107c2:	cmp    rax,QWORD PTR [rbp-0x50]
  4107c6:	jne    410812 <_start@@Base+0xd502>
  4107c8:	mov    rax,QWORD PTR [rbp-0x50]
  4107cc:	mov    QWORD PTR [rbp-0x20],rax
  4107d0:	lea    rcx,[rbp-0x30]
  4107d4:	mov    rdx,QWORD PTR [rbp-0x58]
  4107d8:	mov    rsi,QWORD PTR [rbp-0x20]
  4107dc:	mov    rax,QWORD PTR [rbp-0x48]
  4107e0:	mov    r8,rcx
  4107e3:	lea    rcx,[rip+0x19ff6]        # 42a7e0 <filename@@Base+0x6e0>
  4107ea:	mov    rdi,rax
  4107ed:	call   405f3d <_start@@Base+0x2c2d>
  4107f2:	mov    QWORD PTR [rbp-0x50],rax
  4107f6:	mov    rax,QWORD PTR [rbp-0x50]
  4107fa:	cmp    rax,QWORD PTR [rbp-0x20]
  4107fe:	je     4118d6 <_start@@Base+0xe5c6>
  410804:	mov    rax,QWORD PTR [rbp-0x50]
  410808:	cmp    rax,QWORD PTR [rbp-0x58]
  41080c:	je     4118d6 <_start@@Base+0xe5c6>
  410812:	vmovss xmm0,DWORD PTR [rbp-0x30]
  410817:	vxorps xmm1,xmm1,xmm1
  41081b:	vucomiss xmm0,xmm1
  41081f:	jp     41083d <_start@@Base+0xd52d>
  410821:	vxorps xmm1,xmm1,xmm1
  410825:	vucomiss xmm0,xmm1
  410829:	jne    41083d <_start@@Base+0xd52d>
  41082b:	mov    rax,QWORD PTR [rbp-0x48]
  41082f:	mov    eax,DWORD PTR [rax+0x10]
  410832:	and    eax,0x2
  410835:	test   eax,eax
  410837:	je     411874 <_start@@Base+0xe564>
  41083d:	mov    rax,QWORD PTR [rbp-0x48]
  410841:	mov    rax,QWORD PTR [rax]
  410844:	mov    ecx,0x4
  410849:	mov    edx,0x4
  41084e:	mov    esi,0x8
  410853:	mov    rdi,rax
  410856:	call   419d30 <flatcc_builder_table_add@@Base>
  41085b:	mov    QWORD PTR [rbp-0x18],rax
  41085f:	cmp    QWORD PTR [rbp-0x18],0x0
  410864:	je     4118d9 <_start@@Base+0xe5c9>
  41086a:	mov    edx,DWORD PTR [rbp-0x30]
  41086d:	mov    rax,QWORD PTR [rbp-0x18]
  410871:	vmovd  xmm0,edx
  410875:	mov    rdi,rax
  410878:	call   403656 <_start@@Base+0x346>
  41087d:	jmp    411874 <_start@@Base+0xe564>
  410882:	mov    rdx,QWORD PTR [rbp-0x58]
  410886:	mov    rcx,QWORD PTR [rbp-0x50]
  41088a:	mov    rax,QWORD PTR [rbp-0x48]
  41088e:	mov    rsi,rcx
  410891:	mov    rdi,rax
  410894:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410899:	mov    QWORD PTR [rbp-0x50],rax
  41089d:	jmp    411874 <_start@@Base+0xe564>
  4108a2:	mov    rdx,QWORD PTR [rbp-0x58]
  4108a6:	mov    rcx,QWORD PTR [rbp-0x50]
  4108aa:	mov    rax,QWORD PTR [rbp-0x48]
  4108ae:	mov    rsi,rcx
  4108b1:	mov    rdi,rax
  4108b4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4108b9:	mov    QWORD PTR [rbp-0x50],rax
  4108bd:	jmp    411874 <_start@@Base+0xe564>
  4108c2:	movabs rax,0x693331ffffffffff
  4108cc:	cmp    QWORD PTR [rbp-0x28],rax
  4108d0:	ja     410a4d <_start@@Base+0xd73d>
  4108d6:	movabs rax,0xffffff0000000000
  4108e0:	and    rax,QWORD PTR [rbp-0x28]
  4108e4:	mov    rdx,rax
  4108e7:	movabs rax,0x6931360000000000
  4108f1:	cmp    rdx,rax
  4108f4:	jne    410a2d <_start@@Base+0xd71d>
  4108fa:	mov    rax,QWORD PTR [rbp-0x50]
  4108fe:	mov    QWORD PTR [rbp-0x20],rax
  410902:	mov    rdx,QWORD PTR [rbp-0x58]
  410906:	mov    rsi,QWORD PTR [rbp-0x20]
  41090a:	mov    rax,QWORD PTR [rbp-0x48]
  41090e:	mov    ecx,0x3
  410913:	mov    rdi,rax
  410916:	call   4042cc <_start@@Base+0xfbc>
  41091b:	mov    QWORD PTR [rbp-0x50],rax
  41091f:	mov    rax,QWORD PTR [rbp-0x20]
  410923:	cmp    rax,QWORD PTR [rbp-0x50]
  410927:	je     410a0d <_start@@Base+0xd6fd>
  41092d:	mov    WORD PTR [rbp-0x30],0x0
  410933:	mov    rax,QWORD PTR [rbp-0x50]
  410937:	mov    QWORD PTR [rbp-0x20],rax
  41093b:	lea    rcx,[rbp-0x30]
  41093f:	mov    rdx,QWORD PTR [rbp-0x58]
  410943:	mov    rsi,QWORD PTR [rbp-0x20]
  410947:	mov    rax,QWORD PTR [rbp-0x48]
  41094b:	mov    rdi,rax
  41094e:	call   404e55 <_start@@Base+0x1b45>
  410953:	mov    QWORD PTR [rbp-0x50],rax
  410957:	mov    rax,QWORD PTR [rbp-0x20]
  41095b:	cmp    rax,QWORD PTR [rbp-0x50]
  41095f:	jne    4109ab <_start@@Base+0xd69b>
  410961:	mov    rax,QWORD PTR [rbp-0x50]
  410965:	mov    QWORD PTR [rbp-0x20],rax
  410969:	lea    rcx,[rbp-0x30]
  41096d:	mov    rdx,QWORD PTR [rbp-0x58]
  410971:	mov    rsi,QWORD PTR [rbp-0x20]
  410975:	mov    rax,QWORD PTR [rbp-0x48]
  410979:	mov    r8,rcx
  41097c:	lea    rcx,[rip+0x19e7d]        # 42a800 <filename@@Base+0x700>
  410983:	mov    rdi,rax
  410986:	call   405a6e <_start@@Base+0x275e>
  41098b:	mov    QWORD PTR [rbp-0x50],rax
  41098f:	mov    rax,QWORD PTR [rbp-0x50]
  410993:	cmp    rax,QWORD PTR [rbp-0x20]
  410997:	je     4118dc <_start@@Base+0xe5cc>
  41099d:	mov    rax,QWORD PTR [rbp-0x50]
  4109a1:	cmp    rax,QWORD PTR [rbp-0x58]
  4109a5:	je     4118dc <_start@@Base+0xe5cc>
  4109ab:	movzx  eax,WORD PTR [rbp-0x30]
  4109af:	test   ax,ax
  4109b2:	jne    4109c6 <_start@@Base+0xd6b6>
  4109b4:	mov    rax,QWORD PTR [rbp-0x48]
  4109b8:	mov    eax,DWORD PTR [rax+0x10]
  4109bb:	and    eax,0x2
  4109be:	test   eax,eax
  4109c0:	je     411874 <_start@@Base+0xe564>
  4109c6:	mov    rax,QWORD PTR [rbp-0x48]
  4109ca:	mov    rax,QWORD PTR [rax]
  4109cd:	mov    ecx,0x2
  4109d2:	mov    edx,0x2
  4109d7:	mov    esi,0x2
  4109dc:	mov    rdi,rax
  4109df:	call   419d30 <flatcc_builder_table_add@@Base>
  4109e4:	mov    QWORD PTR [rbp-0x18],rax
  4109e8:	cmp    QWORD PTR [rbp-0x18],0x0
  4109ed:	je     4118df <_start@@Base+0xe5cf>
  4109f3:	movzx  eax,WORD PTR [rbp-0x30]
  4109f7:	movsx  edx,ax
  4109fa:	mov    rax,QWORD PTR [rbp-0x18]
  4109fe:	mov    esi,edx
  410a00:	mov    rdi,rax
  410a03:	call   403569 <_start@@Base+0x259>
  410a08:	jmp    411874 <_start@@Base+0xe564>
  410a0d:	mov    rdx,QWORD PTR [rbp-0x58]
  410a11:	mov    rcx,QWORD PTR [rbp-0x50]
  410a15:	mov    rax,QWORD PTR [rbp-0x48]
  410a19:	mov    rsi,rcx
  410a1c:	mov    rdi,rax
  410a1f:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410a24:	mov    QWORD PTR [rbp-0x50],rax
  410a28:	jmp    411874 <_start@@Base+0xe564>
  410a2d:	mov    rdx,QWORD PTR [rbp-0x58]
  410a31:	mov    rcx,QWORD PTR [rbp-0x50]
  410a35:	mov    rax,QWORD PTR [rbp-0x48]
  410a39:	mov    rsi,rcx
  410a3c:	mov    rdi,rax
  410a3f:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410a44:	mov    QWORD PTR [rbp-0x50],rax
  410a48:	jmp    411874 <_start@@Base+0xe564>
  410a4d:	movabs rax,0xffffff0000000000
  410a57:	and    rax,QWORD PTR [rbp-0x28]
  410a5b:	mov    rdx,rax
  410a5e:	movabs rax,0x6936340000000000
  410a68:	cmp    rdx,rax
  410a6b:	jne    410ba4 <_start@@Base+0xd894>
  410a71:	mov    rax,QWORD PTR [rbp-0x50]
  410a75:	mov    QWORD PTR [rbp-0x20],rax
  410a79:	mov    rdx,QWORD PTR [rbp-0x58]
  410a7d:	mov    rsi,QWORD PTR [rbp-0x20]
  410a81:	mov    rax,QWORD PTR [rbp-0x48]
  410a85:	mov    ecx,0x3
  410a8a:	mov    rdi,rax
  410a8d:	call   4042cc <_start@@Base+0xfbc>
  410a92:	mov    QWORD PTR [rbp-0x50],rax
  410a96:	mov    rax,QWORD PTR [rbp-0x20]
  410a9a:	cmp    rax,QWORD PTR [rbp-0x50]
  410a9e:	je     410b84 <_start@@Base+0xd874>
  410aa4:	mov    QWORD PTR [rbp-0x30],0x0
  410aac:	mov    rax,QWORD PTR [rbp-0x50]
  410ab0:	mov    QWORD PTR [rbp-0x20],rax
  410ab4:	lea    rcx,[rbp-0x30]
  410ab8:	mov    rdx,QWORD PTR [rbp-0x58]
  410abc:	mov    rsi,QWORD PTR [rbp-0x20]
  410ac0:	mov    rax,QWORD PTR [rbp-0x48]
  410ac4:	mov    rdi,rax
  410ac7:	call   404cc8 <_start@@Base+0x19b8>
  410acc:	mov    QWORD PTR [rbp-0x50],rax
  410ad0:	mov    rax,QWORD PTR [rbp-0x20]
  410ad4:	cmp    rax,QWORD PTR [rbp-0x50]
  410ad8:	jne    410b24 <_start@@Base+0xd814>
  410ada:	mov    rax,QWORD PTR [rbp-0x50]
  410ade:	mov    QWORD PTR [rbp-0x20],rax
  410ae2:	lea    rcx,[rbp-0x30]
  410ae6:	mov    rdx,QWORD PTR [rbp-0x58]
  410aea:	mov    rsi,QWORD PTR [rbp-0x20]
  410aee:	mov    rax,QWORD PTR [rbp-0x48]
  410af2:	mov    r8,rcx
  410af5:	lea    rcx,[rip+0x19d24]        # 42a820 <filename@@Base+0x720>
  410afc:	mov    rdi,rax
  410aff:	call   405734 <_start@@Base+0x2424>
  410b04:	mov    QWORD PTR [rbp-0x50],rax
  410b08:	mov    rax,QWORD PTR [rbp-0x50]
  410b0c:	cmp    rax,QWORD PTR [rbp-0x20]
  410b10:	je     4118e2 <_start@@Base+0xe5d2>
  410b16:	mov    rax,QWORD PTR [rbp-0x50]
  410b1a:	cmp    rax,QWORD PTR [rbp-0x58]
  410b1e:	je     4118e2 <_start@@Base+0xe5d2>
  410b24:	mov    rax,QWORD PTR [rbp-0x30]
  410b28:	test   rax,rax
  410b2b:	jne    410b3f <_start@@Base+0xd82f>
  410b2d:	mov    rax,QWORD PTR [rbp-0x48]
  410b31:	mov    eax,DWORD PTR [rax+0x10]
  410b34:	and    eax,0x2
  410b37:	test   eax,eax
  410b39:	je     411874 <_start@@Base+0xe564>
  410b3f:	mov    rax,QWORD PTR [rbp-0x48]
  410b43:	mov    rax,QWORD PTR [rax]
  410b46:	mov    ecx,0x8
  410b4b:	mov    edx,0x8
  410b50:	mov    esi,0x6
  410b55:	mov    rdi,rax
  410b58:	call   419d30 <flatcc_builder_table_add@@Base>
  410b5d:	mov    QWORD PTR [rbp-0x18],rax
  410b61:	cmp    QWORD PTR [rbp-0x18],0x0
  410b66:	je     4118e5 <_start@@Base+0xe5d5>
  410b6c:	mov    rdx,QWORD PTR [rbp-0x30]
  410b70:	mov    rax,QWORD PTR [rbp-0x18]
  410b74:	mov    rsi,rdx
  410b77:	mov    rdi,rax
  410b7a:	call   4035d0 <_start@@Base+0x2c0>
  410b7f:	jmp    411874 <_start@@Base+0xe564>
  410b84:	mov    rdx,QWORD PTR [rbp-0x58]
  410b88:	mov    rcx,QWORD PTR [rbp-0x50]
  410b8c:	mov    rax,QWORD PTR [rbp-0x48]
  410b90:	mov    rsi,rcx
  410b93:	mov    rdi,rax
  410b96:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410b9b:	mov    QWORD PTR [rbp-0x50],rax
  410b9f:	jmp    411874 <_start@@Base+0xe564>
  410ba4:	movabs rax,0xffffff0000000000
  410bae:	and    rax,QWORD PTR [rbp-0x28]
  410bb2:	mov    rdx,rax
  410bb5:	movabs rax,0x6933320000000000
  410bbf:	cmp    rdx,rax
  410bc2:	jne    410cf6 <_start@@Base+0xd9e6>
  410bc8:	mov    rax,QWORD PTR [rbp-0x50]
  410bcc:	mov    QWORD PTR [rbp-0x20],rax
  410bd0:	mov    rdx,QWORD PTR [rbp-0x58]
  410bd4:	mov    rsi,QWORD PTR [rbp-0x20]
  410bd8:	mov    rax,QWORD PTR [rbp-0x48]
  410bdc:	mov    ecx,0x3
  410be1:	mov    rdi,rax
  410be4:	call   4042cc <_start@@Base+0xfbc>
  410be9:	mov    QWORD PTR [rbp-0x50],rax
  410bed:	mov    rax,QWORD PTR [rbp-0x20]
  410bf1:	cmp    rax,QWORD PTR [rbp-0x50]
  410bf5:	je     410cd6 <_start@@Base+0xd9c6>
  410bfb:	mov    DWORD PTR [rbp-0x30],0x0
  410c02:	mov    rax,QWORD PTR [rbp-0x50]
  410c06:	mov    QWORD PTR [rbp-0x20],rax
  410c0a:	lea    rcx,[rbp-0x30]
  410c0e:	mov    rdx,QWORD PTR [rbp-0x58]
  410c12:	mov    rsi,QWORD PTR [rbp-0x20]
  410c16:	mov    rax,QWORD PTR [rbp-0x48]
  410c1a:	mov    rdi,rax
  410c1d:	call   404d8f <_start@@Base+0x1a7f>
  410c22:	mov    QWORD PTR [rbp-0x50],rax
  410c26:	mov    rax,QWORD PTR [rbp-0x20]
  410c2a:	cmp    rax,QWORD PTR [rbp-0x50]
  410c2e:	jne    410c7a <_start@@Base+0xd96a>
  410c30:	mov    rax,QWORD PTR [rbp-0x50]
  410c34:	mov    QWORD PTR [rbp-0x20],rax
  410c38:	lea    rcx,[rbp-0x30]
  410c3c:	mov    rdx,QWORD PTR [rbp-0x58]
  410c40:	mov    rsi,QWORD PTR [rbp-0x20]
  410c44:	mov    rax,QWORD PTR [rbp-0x48]
  410c48:	mov    r8,rcx
  410c4b:	lea    rcx,[rip+0x19bee]        # 42a840 <filename@@Base+0x740>
  410c52:	mov    rdi,rax
  410c55:	call   4058d4 <_start@@Base+0x25c4>
  410c5a:	mov    QWORD PTR [rbp-0x50],rax
  410c5e:	mov    rax,QWORD PTR [rbp-0x50]
  410c62:	cmp    rax,QWORD PTR [rbp-0x20]
  410c66:	je     4118e8 <_start@@Base+0xe5d8>
  410c6c:	mov    rax,QWORD PTR [rbp-0x50]
  410c70:	cmp    rax,QWORD PTR [rbp-0x58]
  410c74:	je     4118e8 <_start@@Base+0xe5d8>
  410c7a:	mov    eax,DWORD PTR [rbp-0x30]
  410c7d:	test   eax,eax
  410c7f:	jne    410c93 <_start@@Base+0xd983>
  410c81:	mov    rax,QWORD PTR [rbp-0x48]
  410c85:	mov    eax,DWORD PTR [rax+0x10]
  410c88:	and    eax,0x2
  410c8b:	test   eax,eax
  410c8d:	je     411874 <_start@@Base+0xe564>
  410c93:	mov    rax,QWORD PTR [rbp-0x48]
  410c97:	mov    rax,QWORD PTR [rax]
  410c9a:	mov    ecx,0x4
  410c9f:	mov    edx,0x4
  410ca4:	mov    esi,0x4
  410ca9:	mov    rdi,rax
  410cac:	call   419d30 <flatcc_builder_table_add@@Base>
  410cb1:	mov    QWORD PTR [rbp-0x18],rax
  410cb5:	cmp    QWORD PTR [rbp-0x18],0x0
  410cba:	je     4118eb <_start@@Base+0xe5db>
  410cc0:	mov    edx,DWORD PTR [rbp-0x30]
  410cc3:	mov    rax,QWORD PTR [rbp-0x18]
  410cc7:	mov    esi,edx
  410cc9:	mov    rdi,rax
  410ccc:	call   40359e <_start@@Base+0x28e>
  410cd1:	jmp    411874 <_start@@Base+0xe564>
  410cd6:	mov    rdx,QWORD PTR [rbp-0x58]
  410cda:	mov    rcx,QWORD PTR [rbp-0x50]
  410cde:	mov    rax,QWORD PTR [rbp-0x48]
  410ce2:	mov    rsi,rcx
  410ce5:	mov    rdi,rax
  410ce8:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410ced:	mov    QWORD PTR [rbp-0x50],rax
  410cf1:	jmp    411874 <_start@@Base+0xe564>
  410cf6:	mov    rdx,QWORD PTR [rbp-0x58]
  410cfa:	mov    rcx,QWORD PTR [rbp-0x50]
  410cfe:	mov    rax,QWORD PTR [rbp-0x48]
  410d02:	mov    rsi,rcx
  410d05:	mov    rdi,rax
  410d08:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410d0d:	mov    QWORD PTR [rbp-0x50],rax
  410d11:	jmp    411874 <_start@@Base+0xe564>
  410d16:	movabs rax,0x753633ffffffffff
  410d20:	cmp    QWORD PTR [rbp-0x28],rax
  410d24:	ja     41117b <_start@@Base+0xde6b>
  410d2a:	movabs rax,0x753135ffffffffff
  410d34:	cmp    QWORD PTR [rbp-0x28],rax
  410d38:	ja     410eb2 <_start@@Base+0xdba2>
  410d3e:	movabs rax,0xffff000000000000
  410d48:	and    rax,QWORD PTR [rbp-0x28]
  410d4c:	mov    rdx,rax
  410d4f:	movabs rax,0x6938000000000000
  410d59:	cmp    rdx,rax
  410d5c:	jne    410e92 <_start@@Base+0xdb82>
  410d62:	mov    rax,QWORD PTR [rbp-0x50]
  410d66:	mov    QWORD PTR [rbp-0x20],rax
  410d6a:	mov    rdx,QWORD PTR [rbp-0x58]
  410d6e:	mov    rsi,QWORD PTR [rbp-0x20]
  410d72:	mov    rax,QWORD PTR [rbp-0x48]
  410d76:	mov    ecx,0x2
  410d7b:	mov    rdi,rax
  410d7e:	call   4042cc <_start@@Base+0xfbc>
  410d83:	mov    QWORD PTR [rbp-0x50],rax
  410d87:	mov    rax,QWORD PTR [rbp-0x20]
  410d8b:	cmp    rax,QWORD PTR [rbp-0x50]
  410d8f:	je     410e72 <_start@@Base+0xdb62>
  410d95:	mov    BYTE PTR [rbp-0x30],0x0
  410d99:	mov    rax,QWORD PTR [rbp-0x50]
  410d9d:	mov    QWORD PTR [rbp-0x20],rax
  410da1:	lea    rcx,[rbp-0x30]
  410da5:	mov    rdx,QWORD PTR [rbp-0x58]
  410da9:	mov    rsi,QWORD PTR [rbp-0x20]
  410dad:	mov    rax,QWORD PTR [rbp-0x48]
  410db1:	mov    rdi,rax
  410db4:	call   404f1a <_start@@Base+0x1c0a>
  410db9:	mov    QWORD PTR [rbp-0x50],rax
  410dbd:	mov    rax,QWORD PTR [rbp-0x20]
  410dc1:	cmp    rax,QWORD PTR [rbp-0x50]
  410dc5:	jne    410e11 <_start@@Base+0xdb01>
  410dc7:	mov    rax,QWORD PTR [rbp-0x50]
  410dcb:	mov    QWORD PTR [rbp-0x20],rax
  410dcf:	lea    rcx,[rbp-0x30]
  410dd3:	mov    rdx,QWORD PTR [rbp-0x58]
  410dd7:	mov    rsi,QWORD PTR [rbp-0x20]
  410ddb:	mov    rax,QWORD PTR [rbp-0x48]
  410ddf:	mov    r8,rcx
  410de2:	lea    rcx,[rip+0x19a77]        # 42a860 <filename@@Base+0x760>
  410de9:	mov    rdi,rax
  410dec:	call   405c0d <_start@@Base+0x28fd>
  410df1:	mov    QWORD PTR [rbp-0x50],rax
  410df5:	mov    rax,QWORD PTR [rbp-0x50]
  410df9:	cmp    rax,QWORD PTR [rbp-0x20]
  410dfd:	je     4118ee <_start@@Base+0xe5de>
  410e03:	mov    rax,QWORD PTR [rbp-0x50]
  410e07:	cmp    rax,QWORD PTR [rbp-0x58]
  410e0b:	je     4118ee <_start@@Base+0xe5de>
  410e11:	movzx  eax,BYTE PTR [rbp-0x30]
  410e15:	test   al,al
  410e17:	jne    410e2b <_start@@Base+0xdb1b>
  410e19:	mov    rax,QWORD PTR [rbp-0x48]
  410e1d:	mov    eax,DWORD PTR [rax+0x10]
  410e20:	and    eax,0x2
  410e23:	test   eax,eax
  410e25:	je     411874 <_start@@Base+0xe564>
  410e2b:	mov    rax,QWORD PTR [rbp-0x48]
  410e2f:	mov    rax,QWORD PTR [rax]
  410e32:	mov    ecx,0x1
  410e37:	mov    edx,0x1
  410e3c:	mov    esi,0x0
  410e41:	mov    rdi,rax
  410e44:	call   419d30 <flatcc_builder_table_add@@Base>
  410e49:	mov    QWORD PTR [rbp-0x18],rax
  410e4d:	cmp    QWORD PTR [rbp-0x18],0x0
  410e52:	je     4118f1 <_start@@Base+0xe5e1>
  410e58:	movzx  eax,BYTE PTR [rbp-0x30]
  410e5c:	movsx  edx,al
  410e5f:	mov    rax,QWORD PTR [rbp-0x18]
  410e63:	mov    esi,edx
  410e65:	mov    rdi,rax
  410e68:	call   403507 <_start@@Base+0x1f7>
  410e6d:	jmp    411874 <_start@@Base+0xe564>
  410e72:	mov    rdx,QWORD PTR [rbp-0x58]
  410e76:	mov    rcx,QWORD PTR [rbp-0x50]
  410e7a:	mov    rax,QWORD PTR [rbp-0x48]
  410e7e:	mov    rsi,rcx
  410e81:	mov    rdi,rax
  410e84:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410e89:	mov    QWORD PTR [rbp-0x50],rax
  410e8d:	jmp    411874 <_start@@Base+0xe564>
  410e92:	mov    rdx,QWORD PTR [rbp-0x58]
  410e96:	mov    rcx,QWORD PTR [rbp-0x50]
  410e9a:	mov    rax,QWORD PTR [rbp-0x48]
  410e9e:	mov    rsi,rcx
  410ea1:	mov    rdi,rax
  410ea4:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410ea9:	mov    QWORD PTR [rbp-0x50],rax
  410ead:	jmp    411874 <_start@@Base+0xe564>
  410eb2:	movabs rax,0xffffff0000000000
  410ebc:	and    rax,QWORD PTR [rbp-0x28]
  410ec0:	mov    rdx,rax
  410ec3:	movabs rax,0x7533320000000000
  410ecd:	cmp    rdx,rax
  410ed0:	jne    411004 <_start@@Base+0xdcf4>
  410ed6:	mov    rax,QWORD PTR [rbp-0x50]
  410eda:	mov    QWORD PTR [rbp-0x20],rax
  410ede:	mov    rdx,QWORD PTR [rbp-0x58]
  410ee2:	mov    rsi,QWORD PTR [rbp-0x20]
  410ee6:	mov    rax,QWORD PTR [rbp-0x48]
  410eea:	mov    ecx,0x3
  410eef:	mov    rdi,rax
  410ef2:	call   4042cc <_start@@Base+0xfbc>
  410ef7:	mov    QWORD PTR [rbp-0x50],rax
  410efb:	mov    rax,QWORD PTR [rbp-0x20]
  410eff:	cmp    rax,QWORD PTR [rbp-0x50]
  410f03:	je     410fe4 <_start@@Base+0xdcd4>
  410f09:	mov    DWORD PTR [rbp-0x30],0x0
  410f10:	mov    rax,QWORD PTR [rbp-0x50]
  410f14:	mov    QWORD PTR [rbp-0x20],rax
  410f18:	lea    rcx,[rbp-0x30]
  410f1c:	mov    rdx,QWORD PTR [rbp-0x58]
  410f20:	mov    rsi,QWORD PTR [rbp-0x20]
  410f24:	mov    rax,QWORD PTR [rbp-0x48]
  410f28:	mov    rdi,rax
  410f2b:	call   404a7a <_start@@Base+0x176a>
  410f30:	mov    QWORD PTR [rbp-0x50],rax
  410f34:	mov    rax,QWORD PTR [rbp-0x20]
  410f38:	cmp    rax,QWORD PTR [rbp-0x50]
  410f3c:	jne    410f88 <_start@@Base+0xdc78>
  410f3e:	mov    rax,QWORD PTR [rbp-0x50]
  410f42:	mov    QWORD PTR [rbp-0x20],rax
  410f46:	lea    rcx,[rbp-0x30]
  410f4a:	mov    rdx,QWORD PTR [rbp-0x58]
  410f4e:	mov    rsi,QWORD PTR [rbp-0x20]
  410f52:	mov    rax,QWORD PTR [rbp-0x48]
  410f56:	mov    r8,rcx
  410f59:	lea    rcx,[rip+0x19920]        # 42a880 <filename@@Base+0x780>
  410f60:	mov    rdi,rax
  410f63:	call   405269 <_start@@Base+0x1f59>
  410f68:	mov    QWORD PTR [rbp-0x50],rax
  410f6c:	mov    rax,QWORD PTR [rbp-0x50]
  410f70:	cmp    rax,QWORD PTR [rbp-0x20]
  410f74:	je     4118f4 <_start@@Base+0xe5e4>
  410f7a:	mov    rax,QWORD PTR [rbp-0x50]
  410f7e:	cmp    rax,QWORD PTR [rbp-0x58]
  410f82:	je     4118f4 <_start@@Base+0xe5e4>
  410f88:	mov    eax,DWORD PTR [rbp-0x30]
  410f8b:	test   eax,eax
  410f8d:	jne    410fa1 <_start@@Base+0xdc91>
  410f8f:	mov    rax,QWORD PTR [rbp-0x48]
  410f93:	mov    eax,DWORD PTR [rax+0x10]
  410f96:	and    eax,0x2
  410f99:	test   eax,eax
  410f9b:	je     411874 <_start@@Base+0xe564>
  410fa1:	mov    rax,QWORD PTR [rbp-0x48]
  410fa5:	mov    rax,QWORD PTR [rax]
  410fa8:	mov    ecx,0x4
  410fad:	mov    edx,0x4
  410fb2:	mov    esi,0x5
  410fb7:	mov    rdi,rax
  410fba:	call   419d30 <flatcc_builder_table_add@@Base>
  410fbf:	mov    QWORD PTR [rbp-0x18],rax
  410fc3:	cmp    QWORD PTR [rbp-0x18],0x0
  410fc8:	je     4118f7 <_start@@Base+0xe5e7>
  410fce:	mov    edx,DWORD PTR [rbp-0x30]
  410fd1:	mov    rax,QWORD PTR [rbp-0x18]
  410fd5:	mov    esi,edx
  410fd7:	mov    rdi,rax
  410fda:	call   40346f <_start@@Base+0x15f>
  410fdf:	jmp    411874 <_start@@Base+0xe564>
  410fe4:	mov    rdx,QWORD PTR [rbp-0x58]
  410fe8:	mov    rcx,QWORD PTR [rbp-0x50]
  410fec:	mov    rax,QWORD PTR [rbp-0x48]
  410ff0:	mov    rsi,rcx
  410ff3:	mov    rdi,rax
  410ff6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  410ffb:	mov    QWORD PTR [rbp-0x50],rax
  410fff:	jmp    411874 <_start@@Base+0xe564>
  411004:	movabs rax,0xffffff0000000000
  41100e:	and    rax,QWORD PTR [rbp-0x28]
  411012:	mov    rdx,rax
  411015:	movabs rax,0x7531360000000000
  41101f:	cmp    rdx,rax
  411022:	jne    41115b <_start@@Base+0xde4b>
  411028:	mov    rax,QWORD PTR [rbp-0x50]
  41102c:	mov    QWORD PTR [rbp-0x20],rax
  411030:	mov    rdx,QWORD PTR [rbp-0x58]
  411034:	mov    rsi,QWORD PTR [rbp-0x20]
  411038:	mov    rax,QWORD PTR [rbp-0x48]
  41103c:	mov    ecx,0x3
  411041:	mov    rdi,rax
  411044:	call   4042cc <_start@@Base+0xfbc>
  411049:	mov    QWORD PTR [rbp-0x50],rax
  41104d:	mov    rax,QWORD PTR [rbp-0x20]
  411051:	cmp    rax,QWORD PTR [rbp-0x50]
  411055:	je     41113b <_start@@Base+0xde2b>
  41105b:	mov    WORD PTR [rbp-0x30],0x0
  411061:	mov    rax,QWORD PTR [rbp-0x50]
  411065:	mov    QWORD PTR [rbp-0x20],rax
  411069:	lea    rcx,[rbp-0x30]
  41106d:	mov    rdx,QWORD PTR [rbp-0x58]
  411071:	mov    rsi,QWORD PTR [rbp-0x20]
  411075:	mov    rax,QWORD PTR [rbp-0x48]
  411079:	mov    rdi,rax
  41107c:	call   404b40 <_start@@Base+0x1830>
  411081:	mov    QWORD PTR [rbp-0x50],rax
  411085:	mov    rax,QWORD PTR [rbp-0x20]
  411089:	cmp    rax,QWORD PTR [rbp-0x50]
  41108d:	jne    4110d9 <_start@@Base+0xddc9>
  41108f:	mov    rax,QWORD PTR [rbp-0x50]
  411093:	mov    QWORD PTR [rbp-0x20],rax
  411097:	lea    rcx,[rbp-0x30]
  41109b:	mov    rdx,QWORD PTR [rbp-0x58]
  41109f:	mov    rsi,QWORD PTR [rbp-0x20]
  4110a3:	mov    rax,QWORD PTR [rbp-0x48]
  4110a7:	mov    r8,rcx
  4110aa:	lea    rcx,[rip+0x197ef]        # 42a8a0 <filename@@Base+0x7a0>
  4110b1:	mov    rdi,rax
  4110b4:	call   405403 <_start@@Base+0x20f3>
  4110b9:	mov    QWORD PTR [rbp-0x50],rax
  4110bd:	mov    rax,QWORD PTR [rbp-0x50]
  4110c1:	cmp    rax,QWORD PTR [rbp-0x20]
  4110c5:	je     4118fa <_start@@Base+0xe5ea>
  4110cb:	mov    rax,QWORD PTR [rbp-0x50]
  4110cf:	cmp    rax,QWORD PTR [rbp-0x58]
  4110d3:	je     4118fa <_start@@Base+0xe5ea>
  4110d9:	movzx  eax,WORD PTR [rbp-0x30]
  4110dd:	test   ax,ax
  4110e0:	jne    4110f4 <_start@@Base+0xdde4>
  4110e2:	mov    rax,QWORD PTR [rbp-0x48]
  4110e6:	mov    eax,DWORD PTR [rax+0x10]
  4110e9:	and    eax,0x2
  4110ec:	test   eax,eax
  4110ee:	je     411874 <_start@@Base+0xe564>
  4110f4:	mov    rax,QWORD PTR [rbp-0x48]
  4110f8:	mov    rax,QWORD PTR [rax]
  4110fb:	mov    ecx,0x2
  411100:	mov    edx,0x2
  411105:	mov    esi,0x3
  41110a:	mov    rdi,rax
  41110d:	call   419d30 <flatcc_builder_table_add@@Base>
  411112:	mov    QWORD PTR [rbp-0x18],rax
  411116:	cmp    QWORD PTR [rbp-0x18],0x0
  41111b:	je     4118fd <_start@@Base+0xe5ed>
  411121:	movzx  eax,WORD PTR [rbp-0x30]
  411125:	movzx  edx,ax
  411128:	mov    rax,QWORD PTR [rbp-0x18]
  41112c:	mov    esi,edx
  41112e:	mov    rdi,rax
  411131:	call   40343a <_start@@Base+0x12a>
  411136:	jmp    411874 <_start@@Base+0xe564>
  41113b:	mov    rdx,QWORD PTR [rbp-0x58]
  41113f:	mov    rcx,QWORD PTR [rbp-0x50]
  411143:	mov    rax,QWORD PTR [rbp-0x48]
  411147:	mov    rsi,rcx
  41114a:	mov    rdi,rax
  41114d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411152:	mov    QWORD PTR [rbp-0x50],rax
  411156:	jmp    411874 <_start@@Base+0xe564>
  41115b:	mov    rdx,QWORD PTR [rbp-0x58]
  41115f:	mov    rcx,QWORD PTR [rbp-0x50]
  411163:	mov    rax,QWORD PTR [rbp-0x48]
  411167:	mov    rsi,rcx
  41116a:	mov    rdi,rax
  41116d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411172:	mov    QWORD PTR [rbp-0x50],rax
  411176:	jmp    411874 <_start@@Base+0xe564>
  41117b:	movabs rax,0x7537ffffffffffff
  411185:	cmp    QWORD PTR [rbp-0x28],rax
  411189:	ja     411306 <_start@@Base+0xdff6>
  41118f:	movabs rax,0xffffff0000000000
  411199:	and    rax,QWORD PTR [rbp-0x28]
  41119d:	mov    rdx,rax
  4111a0:	movabs rax,0x7536340000000000
  4111aa:	cmp    rdx,rax
  4111ad:	jne    4112e6 <_start@@Base+0xdfd6>
  4111b3:	mov    rax,QWORD PTR [rbp-0x50]
  4111b7:	mov    QWORD PTR [rbp-0x20],rax
  4111bb:	mov    rdx,QWORD PTR [rbp-0x58]
  4111bf:	mov    rsi,QWORD PTR [rbp-0x20]
  4111c3:	mov    rax,QWORD PTR [rbp-0x48]
  4111c7:	mov    ecx,0x3
  4111cc:	mov    rdi,rax
  4111cf:	call   4042cc <_start@@Base+0xfbc>
  4111d4:	mov    QWORD PTR [rbp-0x50],rax
  4111d8:	mov    rax,QWORD PTR [rbp-0x20]
  4111dc:	cmp    rax,QWORD PTR [rbp-0x50]
  4111e0:	je     4112c6 <_start@@Base+0xdfb6>
  4111e6:	mov    QWORD PTR [rbp-0x30],0x0
  4111ee:	mov    rax,QWORD PTR [rbp-0x50]
  4111f2:	mov    QWORD PTR [rbp-0x20],rax
  4111f6:	lea    rcx,[rbp-0x30]
  4111fa:	mov    rdx,QWORD PTR [rbp-0x58]
  4111fe:	mov    rsi,QWORD PTR [rbp-0x20]
  411202:	mov    rax,QWORD PTR [rbp-0x48]
  411206:	mov    rdi,rax
  411209:	call   4049b3 <_start@@Base+0x16a3>
  41120e:	mov    QWORD PTR [rbp-0x50],rax
  411212:	mov    rax,QWORD PTR [rbp-0x20]
  411216:	cmp    rax,QWORD PTR [rbp-0x50]
  41121a:	jne    411266 <_start@@Base+0xdf56>
  41121c:	mov    rax,QWORD PTR [rbp-0x50]
  411220:	mov    QWORD PTR [rbp-0x20],rax
  411224:	lea    rcx,[rbp-0x30]
  411228:	mov    rdx,QWORD PTR [rbp-0x58]
  41122c:	mov    rsi,QWORD PTR [rbp-0x20]
  411230:	mov    rax,QWORD PTR [rbp-0x48]
  411234:	mov    r8,rcx
  411237:	lea    rcx,[rip+0x19682]        # 42a8c0 <filename@@Base+0x7c0>
  41123e:	mov    rdi,rax
  411241:	call   4050c9 <_start@@Base+0x1db9>
  411246:	mov    QWORD PTR [rbp-0x50],rax
  41124a:	mov    rax,QWORD PTR [rbp-0x50]
  41124e:	cmp    rax,QWORD PTR [rbp-0x20]
  411252:	je     411900 <_start@@Base+0xe5f0>
  411258:	mov    rax,QWORD PTR [rbp-0x50]
  41125c:	cmp    rax,QWORD PTR [rbp-0x58]
  411260:	je     411900 <_start@@Base+0xe5f0>
  411266:	mov    rax,QWORD PTR [rbp-0x30]
  41126a:	test   rax,rax
  41126d:	jne    411281 <_start@@Base+0xdf71>
  41126f:	mov    rax,QWORD PTR [rbp-0x48]
  411273:	mov    eax,DWORD PTR [rax+0x10]
  411276:	and    eax,0x2
  411279:	test   eax,eax
  41127b:	je     411874 <_start@@Base+0xe564>
  411281:	mov    rax,QWORD PTR [rbp-0x48]
  411285:	mov    rax,QWORD PTR [rax]
  411288:	mov    ecx,0x8
  41128d:	mov    edx,0x8
  411292:	mov    esi,0x7
  411297:	mov    rdi,rax
  41129a:	call   419d30 <flatcc_builder_table_add@@Base>
  41129f:	mov    QWORD PTR [rbp-0x18],rax
  4112a3:	cmp    QWORD PTR [rbp-0x18],0x0
  4112a8:	je     411903 <_start@@Base+0xe5f3>
  4112ae:	mov    rdx,QWORD PTR [rbp-0x30]
  4112b2:	mov    rax,QWORD PTR [rbp-0x18]
  4112b6:	mov    rsi,rdx
  4112b9:	mov    rdi,rax
  4112bc:	call   4034a1 <_start@@Base+0x191>
  4112c1:	jmp    411874 <_start@@Base+0xe564>
  4112c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4112ca:	mov    rcx,QWORD PTR [rbp-0x50]
  4112ce:	mov    rax,QWORD PTR [rbp-0x48]
  4112d2:	mov    rsi,rcx
  4112d5:	mov    rdi,rax
  4112d8:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4112dd:	mov    QWORD PTR [rbp-0x50],rax
  4112e1:	jmp    411874 <_start@@Base+0xe564>
  4112e6:	mov    rdx,QWORD PTR [rbp-0x58]
  4112ea:	mov    rcx,QWORD PTR [rbp-0x50]
  4112ee:	mov    rax,QWORD PTR [rbp-0x48]
  4112f2:	mov    rsi,rcx
  4112f5:	mov    rdi,rax
  4112f8:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4112fd:	mov    QWORD PTR [rbp-0x50],rax
  411301:	jmp    411874 <_start@@Base+0xe564>
  411306:	movabs rax,0x7637ffffffffffff
  411310:	cmp    QWORD PTR [rbp-0x28],rax
  411314:	ja     41148e <_start@@Base+0xe17e>
  41131a:	movabs rax,0xffff000000000000
  411324:	and    rax,QWORD PTR [rbp-0x28]
  411328:	mov    rdx,rax
  41132b:	movabs rax,0x7538000000000000
  411335:	cmp    rdx,rax
  411338:	jne    41146e <_start@@Base+0xe15e>
  41133e:	mov    rax,QWORD PTR [rbp-0x50]
  411342:	mov    QWORD PTR [rbp-0x20],rax
  411346:	mov    rdx,QWORD PTR [rbp-0x58]
  41134a:	mov    rsi,QWORD PTR [rbp-0x20]
  41134e:	mov    rax,QWORD PTR [rbp-0x48]
  411352:	mov    ecx,0x2
  411357:	mov    rdi,rax
  41135a:	call   4042cc <_start@@Base+0xfbc>
  41135f:	mov    QWORD PTR [rbp-0x50],rax
  411363:	mov    rax,QWORD PTR [rbp-0x20]
  411367:	cmp    rax,QWORD PTR [rbp-0x50]
  41136b:	je     41144e <_start@@Base+0xe13e>
  411371:	mov    BYTE PTR [rbp-0x30],0x0
  411375:	mov    rax,QWORD PTR [rbp-0x50]
  411379:	mov    QWORD PTR [rbp-0x20],rax
  41137d:	lea    rcx,[rbp-0x30]
  411381:	mov    rdx,QWORD PTR [rbp-0x58]
  411385:	mov    rsi,QWORD PTR [rbp-0x20]
  411389:	mov    rax,QWORD PTR [rbp-0x48]
  41138d:	mov    rdi,rax
  411390:	call   404c05 <_start@@Base+0x18f5>
  411395:	mov    QWORD PTR [rbp-0x50],rax
  411399:	mov    rax,QWORD PTR [rbp-0x20]
  41139d:	cmp    rax,QWORD PTR [rbp-0x50]
  4113a1:	jne    4113ed <_start@@Base+0xe0dd>
  4113a3:	mov    rax,QWORD PTR [rbp-0x50]
  4113a7:	mov    QWORD PTR [rbp-0x20],rax
  4113ab:	lea    rcx,[rbp-0x30]
  4113af:	mov    rdx,QWORD PTR [rbp-0x58]
  4113b3:	mov    rsi,QWORD PTR [rbp-0x20]
  4113b7:	mov    rax,QWORD PTR [rbp-0x48]
  4113bb:	mov    r8,rcx
  4113be:	lea    rcx,[rip+0x1951b]        # 42a8e0 <filename@@Base+0x7e0>
  4113c5:	mov    rdi,rax
  4113c8:	call   40559e <_start@@Base+0x228e>
  4113cd:	mov    QWORD PTR [rbp-0x50],rax
  4113d1:	mov    rax,QWORD PTR [rbp-0x50]
  4113d5:	cmp    rax,QWORD PTR [rbp-0x20]
  4113d9:	je     411906 <_start@@Base+0xe5f6>
  4113df:	mov    rax,QWORD PTR [rbp-0x50]
  4113e3:	cmp    rax,QWORD PTR [rbp-0x58]
  4113e7:	je     411906 <_start@@Base+0xe5f6>
  4113ed:	movzx  eax,BYTE PTR [rbp-0x30]
  4113f1:	test   al,al
  4113f3:	jne    411407 <_start@@Base+0xe0f7>
  4113f5:	mov    rax,QWORD PTR [rbp-0x48]
  4113f9:	mov    eax,DWORD PTR [rax+0x10]
  4113fc:	and    eax,0x2
  4113ff:	test   eax,eax
  411401:	je     411874 <_start@@Base+0xe564>
  411407:	mov    rax,QWORD PTR [rbp-0x48]
  41140b:	mov    rax,QWORD PTR [rax]
  41140e:	mov    ecx,0x1
  411413:	mov    edx,0x1
  411418:	mov    esi,0x1
  41141d:	mov    rdi,rax
  411420:	call   419d30 <flatcc_builder_table_add@@Base>
  411425:	mov    QWORD PTR [rbp-0x18],rax
  411429:	cmp    QWORD PTR [rbp-0x18],0x0
  41142e:	je     411909 <_start@@Base+0xe5f9>
  411434:	movzx  eax,BYTE PTR [rbp-0x30]
  411438:	movzx  edx,al
  41143b:	mov    rax,QWORD PTR [rbp-0x18]
  41143f:	mov    esi,edx
  411441:	mov    rdi,rax
  411444:	call   403405 <_start@@Base+0xf5>
  411449:	jmp    411874 <_start@@Base+0xe564>
  41144e:	mov    rdx,QWORD PTR [rbp-0x58]
  411452:	mov    rcx,QWORD PTR [rbp-0x50]
  411456:	mov    rax,QWORD PTR [rbp-0x48]
  41145a:	mov    rsi,rcx
  41145d:	mov    rdi,rax
  411460:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411465:	mov    QWORD PTR [rbp-0x50],rax
  411469:	jmp    411874 <_start@@Base+0xe564>
  41146e:	mov    rdx,QWORD PTR [rbp-0x58]
  411472:	mov    rcx,QWORD PTR [rbp-0x50]
  411476:	mov    rax,QWORD PTR [rbp-0x48]
  41147a:	mov    rsi,rcx
  41147d:	mov    rdi,rax
  411480:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411485:	mov    QWORD PTR [rbp-0x50],rax
  411489:	jmp    411874 <_start@@Base+0xe564>
  41148e:	movabs rax,0xffffffff00000000
  411498:	and    rax,QWORD PTR [rbp-0x28]
  41149c:	mov    rdx,rax
  41149f:	movabs rax,0x7666363400000000
  4114a9:	cmp    rdx,rax
  4114ac:	jne    411679 <_start@@Base+0xe369>
  4114b2:	mov    rax,QWORD PTR [rbp-0x50]
  4114b6:	mov    QWORD PTR [rbp-0x20],rax
  4114ba:	mov    rdx,QWORD PTR [rbp-0x58]
  4114be:	mov    rsi,QWORD PTR [rbp-0x20]
  4114c2:	mov    rax,QWORD PTR [rbp-0x48]
  4114c6:	mov    ecx,0x4
  4114cb:	mov    rdi,rax
  4114ce:	call   4042cc <_start@@Base+0xfbc>
  4114d3:	mov    QWORD PTR [rbp-0x50],rax
  4114d7:	mov    rax,QWORD PTR [rbp-0x20]
  4114db:	cmp    rax,QWORD PTR [rbp-0x50]
  4114df:	je     411659 <_start@@Base+0xe349>
  4114e5:	mov    rax,QWORD PTR [rbp-0x48]
  4114e9:	mov    rax,QWORD PTR [rax]
  4114ec:	mov    ecx,0x1fffffff
  4114f1:	mov    edx,0x8
  4114f6:	mov    esi,0x8
  4114fb:	mov    rdi,rax
  4114fe:	call   417932 <flatcc_builder_start_vector@@Base>
  411503:	test   eax,eax
  411505:	jne    41190c <_start@@Base+0xe5fc>
  41150b:	lea    rcx,[rbp-0x38]
  41150f:	mov    rdx,QWORD PTR [rbp-0x58]
  411513:	mov    rsi,QWORD PTR [rbp-0x50]
  411517:	mov    rax,QWORD PTR [rbp-0x48]
  41151b:	mov    rdi,rax
  41151e:	call   4040d1 <_start@@Base+0xdc1>
  411523:	mov    QWORD PTR [rbp-0x50],rax
  411527:	jmp    411601 <_start@@Base+0xe2f1>
  41152c:	vxorpd xmm0,xmm0,xmm0
  411530:	vmovsd QWORD PTR [rbp-0x30],xmm0
  411535:	mov    rax,QWORD PTR [rbp-0x48]
  411539:	mov    rax,QWORD PTR [rax]
  41153c:	mov    esi,0x1
  411541:	mov    rdi,rax
  411544:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  411549:	mov    QWORD PTR [rbp-0x18],rax
  41154d:	cmp    QWORD PTR [rbp-0x18],0x0
  411552:	je     41190f <_start@@Base+0xe5ff>
  411558:	mov    rax,QWORD PTR [rbp-0x50]
  41155c:	mov    QWORD PTR [rbp-0x20],rax
  411560:	lea    rcx,[rbp-0x30]
  411564:	mov    rdx,QWORD PTR [rbp-0x58]
  411568:	mov    rsi,QWORD PTR [rbp-0x20]
  41156c:	mov    rax,QWORD PTR [rbp-0x48]
  411570:	mov    rdi,rax
  411573:	call   41fef2 <flatcc_json_parser_double@@Base>
  411578:	mov    QWORD PTR [rbp-0x50],rax
  41157c:	mov    rax,QWORD PTR [rbp-0x20]
  411580:	cmp    rax,QWORD PTR [rbp-0x50]
  411584:	jne    4115d0 <_start@@Base+0xe2c0>
  411586:	mov    rax,QWORD PTR [rbp-0x50]
  41158a:	mov    QWORD PTR [rbp-0x20],rax
  41158e:	lea    rcx,[rbp-0x30]
  411592:	mov    rdx,QWORD PTR [rbp-0x58]
  411596:	mov    rsi,QWORD PTR [rbp-0x20]
  41159a:	mov    rax,QWORD PTR [rbp-0x48]
  41159e:	mov    r8,rcx
  4115a1:	lea    rcx,[rip+0x19358]        # 42a900 <filename@@Base+0x800>
  4115a8:	mov    rdi,rax
  4115ab:	call   4060e3 <_start@@Base+0x2dd3>
  4115b0:	mov    QWORD PTR [rbp-0x50],rax
  4115b4:	mov    rax,QWORD PTR [rbp-0x50]
  4115b8:	cmp    rax,QWORD PTR [rbp-0x20]
  4115bc:	je     411912 <_start@@Base+0xe602>
  4115c2:	mov    rax,QWORD PTR [rbp-0x50]
  4115c6:	cmp    rax,QWORD PTR [rbp-0x58]
  4115ca:	je     411912 <_start@@Base+0xe602>
  4115d0:	mov    rdx,QWORD PTR [rbp-0x30]
  4115d4:	mov    rax,QWORD PTR [rbp-0x18]
  4115d8:	vmovq  xmm0,rdx
  4115dd:	mov    rdi,rax
  4115e0:	call   403701 <_start@@Base+0x3f1>
  4115e5:	lea    rcx,[rbp-0x38]
  4115e9:	mov    rdx,QWORD PTR [rbp-0x58]
  4115ed:	mov    rsi,QWORD PTR [rbp-0x50]
  4115f1:	mov    rax,QWORD PTR [rbp-0x48]
  4115f5:	mov    rdi,rax
  4115f8:	call   40418e <_start@@Base+0xe7e>
  4115fd:	mov    QWORD PTR [rbp-0x50],rax
  411601:	mov    eax,DWORD PTR [rbp-0x38]
  411604:	test   eax,eax
  411606:	jne    41152c <_start@@Base+0xe21c>
  41160c:	mov    rax,QWORD PTR [rbp-0x48]
  411610:	mov    rax,QWORD PTR [rax]
  411613:	mov    rdi,rax
  411616:	call   418b27 <flatcc_builder_end_vector@@Base>
  41161b:	mov    DWORD PTR [rbp-0x34],eax
  41161e:	cmp    DWORD PTR [rbp-0x34],0x0
  411622:	je     411915 <_start@@Base+0xe605>
  411628:	mov    rax,QWORD PTR [rbp-0x48]
  41162c:	mov    rax,QWORD PTR [rax]
  41162f:	mov    esi,0xb
  411634:	mov    rdi,rax
  411637:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  41163c:	mov    QWORD PTR [rbp-0x10],rax
  411640:	cmp    QWORD PTR [rbp-0x10],0x0
  411645:	je     411915 <_start@@Base+0xe605>
  41164b:	mov    rax,QWORD PTR [rbp-0x10]
  41164f:	mov    edx,DWORD PTR [rbp-0x34]
  411652:	mov    DWORD PTR [rax],edx
  411654:	jmp    411874 <_start@@Base+0xe564>
  411659:	mov    rdx,QWORD PTR [rbp-0x58]
  41165d:	mov    rcx,QWORD PTR [rbp-0x50]
  411661:	mov    rax,QWORD PTR [rbp-0x48]
  411665:	mov    rsi,rcx
  411668:	mov    rdi,rax
  41166b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411670:	mov    QWORD PTR [rbp-0x50],rax
  411674:	jmp    411874 <_start@@Base+0xe564>
  411679:	movabs rax,0xffff000000000000
  411683:	and    rax,QWORD PTR [rbp-0x28]
  411687:	mov    rdx,rax
  41168a:	movabs rax,0x7638000000000000
  411694:	cmp    rdx,rax
  411697:	jne    411859 <_start@@Base+0xe549>
  41169d:	mov    rax,QWORD PTR [rbp-0x50]
  4116a1:	mov    QWORD PTR [rbp-0x20],rax
  4116a5:	mov    rdx,QWORD PTR [rbp-0x58]
  4116a9:	mov    rsi,QWORD PTR [rbp-0x20]
  4116ad:	mov    rax,QWORD PTR [rbp-0x48]
  4116b1:	mov    ecx,0x2
  4116b6:	mov    rdi,rax
  4116b9:	call   4042cc <_start@@Base+0xfbc>
  4116be:	mov    QWORD PTR [rbp-0x50],rax
  4116c2:	mov    rax,QWORD PTR [rbp-0x20]
  4116c6:	cmp    rax,QWORD PTR [rbp-0x50]
  4116ca:	je     41183c <_start@@Base+0xe52c>
  4116d0:	mov    rax,QWORD PTR [rbp-0x48]
  4116d4:	mov    rax,QWORD PTR [rax]
  4116d7:	mov    ecx,0xffffffff
  4116dc:	mov    edx,0x1
  4116e1:	mov    esi,0x1
  4116e6:	mov    rdi,rax
  4116e9:	call   417932 <flatcc_builder_start_vector@@Base>
  4116ee:	test   eax,eax
  4116f0:	jne    411918 <_start@@Base+0xe608>
  4116f6:	lea    rcx,[rbp-0x38]
  4116fa:	mov    rdx,QWORD PTR [rbp-0x58]
  4116fe:	mov    rsi,QWORD PTR [rbp-0x50]
  411702:	mov    rax,QWORD PTR [rbp-0x48]
  411706:	mov    rdi,rax
  411709:	call   4040d1 <_start@@Base+0xdc1>
  41170e:	mov    QWORD PTR [rbp-0x50],rax
  411712:	jmp    4117e7 <_start@@Base+0xe4d7>
  411717:	mov    BYTE PTR [rbp-0x30],0x0
  41171b:	mov    rax,QWORD PTR [rbp-0x48]
  41171f:	mov    rax,QWORD PTR [rax]
  411722:	mov    esi,0x1
  411727:	mov    rdi,rax
  41172a:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  41172f:	mov    QWORD PTR [rbp-0x18],rax
  411733:	cmp    QWORD PTR [rbp-0x18],0x0
  411738:	je     41191b <_start@@Base+0xe60b>
  41173e:	mov    rax,QWORD PTR [rbp-0x50]
  411742:	mov    QWORD PTR [rbp-0x20],rax
  411746:	lea    rcx,[rbp-0x30]
  41174a:	mov    rdx,QWORD PTR [rbp-0x58]
  41174e:	mov    rsi,QWORD PTR [rbp-0x20]
  411752:	mov    rax,QWORD PTR [rbp-0x48]
  411756:	mov    rdi,rax
  411759:	call   404f1a <_start@@Base+0x1c0a>
  41175e:	mov    QWORD PTR [rbp-0x50],rax
  411762:	mov    rax,QWORD PTR [rbp-0x20]
  411766:	cmp    rax,QWORD PTR [rbp-0x50]
  41176a:	jne    4117b6 <_start@@Base+0xe4a6>
  41176c:	mov    rax,QWORD PTR [rbp-0x50]
  411770:	mov    QWORD PTR [rbp-0x20],rax
  411774:	lea    rcx,[rbp-0x30]
  411778:	mov    rdx,QWORD PTR [rbp-0x58]
  41177c:	mov    rsi,QWORD PTR [rbp-0x20]
  411780:	mov    rax,QWORD PTR [rbp-0x48]
  411784:	mov    r8,rcx
  411787:	lea    rcx,[rip+0x19192]        # 42a920 <filename@@Base+0x820>
  41178e:	mov    rdi,rax
  411791:	call   405c0d <_start@@Base+0x28fd>
  411796:	mov    QWORD PTR [rbp-0x50],rax
  41179a:	mov    rax,QWORD PTR [rbp-0x50]
  41179e:	cmp    rax,QWORD PTR [rbp-0x20]
  4117a2:	je     41191e <_start@@Base+0xe60e>
  4117a8:	mov    rax,QWORD PTR [rbp-0x50]
  4117ac:	cmp    rax,QWORD PTR [rbp-0x58]
  4117b0:	je     41191e <_start@@Base+0xe60e>
  4117b6:	movzx  eax,BYTE PTR [rbp-0x30]
  4117ba:	movsx  edx,al
  4117bd:	mov    rax,QWORD PTR [rbp-0x18]
  4117c1:	mov    esi,edx
  4117c3:	mov    rdi,rax
  4117c6:	call   403507 <_start@@Base+0x1f7>
  4117cb:	lea    rcx,[rbp-0x38]
  4117cf:	mov    rdx,QWORD PTR [rbp-0x58]
  4117d3:	mov    rsi,QWORD PTR [rbp-0x50]
  4117d7:	mov    rax,QWORD PTR [rbp-0x48]
  4117db:	mov    rdi,rax
  4117de:	call   40418e <_start@@Base+0xe7e>
  4117e3:	mov    QWORD PTR [rbp-0x50],rax
  4117e7:	mov    eax,DWORD PTR [rbp-0x38]
  4117ea:	test   eax,eax
  4117ec:	jne    411717 <_start@@Base+0xe407>
  4117f2:	mov    rax,QWORD PTR [rbp-0x48]
  4117f6:	mov    rax,QWORD PTR [rax]
  4117f9:	mov    rdi,rax
  4117fc:	call   418b27 <flatcc_builder_end_vector@@Base>
  411801:	mov    DWORD PTR [rbp-0x34],eax
  411804:	cmp    DWORD PTR [rbp-0x34],0x0
  411808:	je     411921 <_start@@Base+0xe611>
  41180e:	mov    rax,QWORD PTR [rbp-0x48]
  411812:	mov    rax,QWORD PTR [rax]
  411815:	mov    esi,0xa
  41181a:	mov    rdi,rax
  41181d:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  411822:	mov    QWORD PTR [rbp-0x10],rax
  411826:	cmp    QWORD PTR [rbp-0x10],0x0
  41182b:	je     411921 <_start@@Base+0xe611>
  411831:	mov    rax,QWORD PTR [rbp-0x10]
  411835:	mov    edx,DWORD PTR [rbp-0x34]
  411838:	mov    DWORD PTR [rax],edx
  41183a:	jmp    411874 <_start@@Base+0xe564>
  41183c:	mov    rdx,QWORD PTR [rbp-0x58]
  411840:	mov    rcx,QWORD PTR [rbp-0x50]
  411844:	mov    rax,QWORD PTR [rbp-0x48]
  411848:	mov    rsi,rcx
  41184b:	mov    rdi,rax
  41184e:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411853:	mov    QWORD PTR [rbp-0x50],rax
  411857:	jmp    411874 <_start@@Base+0xe564>
  411859:	mov    rdx,QWORD PTR [rbp-0x58]
  41185d:	mov    rcx,QWORD PTR [rbp-0x50]
  411861:	mov    rax,QWORD PTR [rbp-0x48]
  411865:	mov    rsi,rcx
  411868:	mov    rdi,rax
  41186b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411870:	mov    QWORD PTR [rbp-0x50],rax
  411874:	lea    rcx,[rbp-0x38]
  411878:	mov    rdx,QWORD PTR [rbp-0x58]
  41187c:	mov    rsi,QWORD PTR [rbp-0x50]
  411880:	mov    rax,QWORD PTR [rbp-0x48]
  411884:	mov    rdi,rax
  411887:	call   403f93 <_start@@Base+0xc83>
  41188c:	mov    QWORD PTR [rbp-0x50],rax
  411890:	mov    eax,DWORD PTR [rbp-0x38]
  411893:	test   eax,eax
  411895:	jne    410576 <_start@@Base+0xd266>
  41189b:	mov    rax,QWORD PTR [rbp-0x48]
  41189f:	mov    eax,DWORD PTR [rax+0x20]
  4118a2:	test   eax,eax
  4118a4:	jne    411924 <_start@@Base+0xe614>
  4118a6:	mov    rax,QWORD PTR [rbp-0x48]
  4118aa:	mov    rax,QWORD PTR [rax]
  4118ad:	mov    rdi,rax
  4118b0:	call   41868f <flatcc_builder_end_table@@Base>
  4118b5:	mov    edx,eax
  4118b7:	mov    rax,QWORD PTR [rbp-0x60]
  4118bb:	mov    DWORD PTR [rax],edx
  4118bd:	mov    rax,QWORD PTR [rbp-0x60]
  4118c1:	mov    eax,DWORD PTR [rax]
  4118c3:	test   eax,eax
  4118c5:	je     411927 <_start@@Base+0xe617>
  4118c7:	mov    rax,QWORD PTR [rbp-0x50]
  4118cb:	jmp    411941 <_start@@Base+0xe631>
  4118cd:	nop
  4118ce:	jmp    411928 <_start@@Base+0xe618>
  4118d0:	nop
  4118d1:	jmp    411928 <_start@@Base+0xe618>
  4118d3:	nop
  4118d4:	jmp    411928 <_start@@Base+0xe618>
  4118d6:	nop
  4118d7:	jmp    411928 <_start@@Base+0xe618>
  4118d9:	nop
  4118da:	jmp    411928 <_start@@Base+0xe618>
  4118dc:	nop
  4118dd:	jmp    411928 <_start@@Base+0xe618>
  4118df:	nop
  4118e0:	jmp    411928 <_start@@Base+0xe618>
  4118e2:	nop
  4118e3:	jmp    411928 <_start@@Base+0xe618>
  4118e5:	nop
  4118e6:	jmp    411928 <_start@@Base+0xe618>
  4118e8:	nop
  4118e9:	jmp    411928 <_start@@Base+0xe618>
  4118eb:	nop
  4118ec:	jmp    411928 <_start@@Base+0xe618>
  4118ee:	nop
  4118ef:	jmp    411928 <_start@@Base+0xe618>
  4118f1:	nop
  4118f2:	jmp    411928 <_start@@Base+0xe618>
  4118f4:	nop
  4118f5:	jmp    411928 <_start@@Base+0xe618>
  4118f7:	nop
  4118f8:	jmp    411928 <_start@@Base+0xe618>
  4118fa:	nop
  4118fb:	jmp    411928 <_start@@Base+0xe618>
  4118fd:	nop
  4118fe:	jmp    411928 <_start@@Base+0xe618>
  411900:	nop
  411901:	jmp    411928 <_start@@Base+0xe618>
  411903:	nop
  411904:	jmp    411928 <_start@@Base+0xe618>
  411906:	nop
  411907:	jmp    411928 <_start@@Base+0xe618>
  411909:	nop
  41190a:	jmp    411928 <_start@@Base+0xe618>
  41190c:	nop
  41190d:	jmp    411928 <_start@@Base+0xe618>
  41190f:	nop
  411910:	jmp    411928 <_start@@Base+0xe618>
  411912:	nop
  411913:	jmp    411928 <_start@@Base+0xe618>
  411915:	nop
  411916:	jmp    411928 <_start@@Base+0xe618>
  411918:	nop
  411919:	jmp    411928 <_start@@Base+0xe618>
  41191b:	nop
  41191c:	jmp    411928 <_start@@Base+0xe618>
  41191e:	nop
  41191f:	jmp    411928 <_start@@Base+0xe618>
  411921:	nop
  411922:	jmp    411928 <_start@@Base+0xe618>
  411924:	nop
  411925:	jmp    411928 <_start@@Base+0xe618>
  411927:	nop
  411928:	mov    rdx,QWORD PTR [rbp-0x58]
  41192c:	mov    rsi,QWORD PTR [rbp-0x50]
  411930:	mov    rax,QWORD PTR [rbp-0x48]
  411934:	mov    ecx,0x21
  411939:	mov    rdi,rax
  41193c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  411941:	mov    rdi,QWORD PTR [rbp-0x8]
  411945:	xor    rdi,QWORD PTR fs:0x28
  41194e:	je     411955 <_start@@Base+0xe645>
  411950:	call   403200 <__stack_chk_fail@plt>
  411955:	leave  
  411956:	ret    
  411957:	endbr64 
  41195b:	push   rbp
  41195c:	mov    rbp,rsp
  41195f:	sub    rsp,0x50
  411963:	mov    QWORD PTR [rbp-0x38],rdi
  411967:	mov    QWORD PTR [rbp-0x40],rsi
  41196b:	mov    QWORD PTR [rbp-0x48],rdx
  41196f:	mov    QWORD PTR [rbp-0x50],rcx
  411973:	mov    rax,QWORD PTR fs:0x28
  41197c:	mov    QWORD PTR [rbp-0x8],rax
  411980:	xor    eax,eax
  411982:	mov    rax,QWORD PTR [rbp-0x50]
  411986:	mov    DWORD PTR [rax],0x0
  41198c:	mov    rax,QWORD PTR [rbp-0x38]
  411990:	mov    rax,QWORD PTR [rax]
  411993:	mov    esi,0x1
  411998:	mov    rdi,rax
  41199b:	call   417b80 <flatcc_builder_start_table@@Base>
  4119a0:	test   eax,eax
  4119a2:	jne    411c55 <_start@@Base+0xe945>
  4119a8:	lea    rcx,[rbp-0x28]
  4119ac:	mov    rdx,QWORD PTR [rbp-0x48]
  4119b0:	mov    rsi,QWORD PTR [rbp-0x40]
  4119b4:	mov    rax,QWORD PTR [rbp-0x38]
  4119b8:	mov    rdi,rax
  4119bb:	call   403ed6 <_start@@Base+0xbc6>
  4119c0:	mov    QWORD PTR [rbp-0x40],rax
  4119c4:	jmp    411c18 <_start@@Base+0xe908>
  4119c9:	mov    rdx,QWORD PTR [rbp-0x48]
  4119cd:	mov    rcx,QWORD PTR [rbp-0x40]
  4119d1:	mov    rax,QWORD PTR [rbp-0x38]
  4119d5:	mov    rsi,rcx
  4119d8:	mov    rdi,rax
  4119db:	call   403c48 <_start@@Base+0x938>
  4119e0:	mov    QWORD PTR [rbp-0x40],rax
  4119e4:	mov    rdx,QWORD PTR [rbp-0x48]
  4119e8:	mov    rax,QWORD PTR [rbp-0x40]
  4119ec:	mov    rsi,rdx
  4119ef:	mov    rdi,rax
  4119f2:	call   403dd5 <_start@@Base+0xac5>
  4119f7:	mov    QWORD PTR [rbp-0x20],rax
  4119fb:	movabs rax,0x73776f72645f6174
  411a05:	cmp    QWORD PTR [rbp-0x20],rax
  411a09:	jne    411be1 <_start@@Base+0xe8d1>
  411a0f:	add    QWORD PTR [rbp-0x40],0x8
  411a14:	mov    rdx,QWORD PTR [rbp-0x48]
  411a18:	mov    rax,QWORD PTR [rbp-0x40]
  411a1c:	mov    rsi,rdx
  411a1f:	mov    rdi,rax
  411a22:	call   403dd5 <_start@@Base+0xac5>
  411a27:	mov    QWORD PTR [rbp-0x20],rax
  411a2b:	movabs rax,0x7461636b5f64616d
  411a35:	cmp    QWORD PTR [rbp-0x20],rax
  411a39:	jne    411bc4 <_start@@Base+0xe8b4>
  411a3f:	add    QWORD PTR [rbp-0x40],0x8
  411a44:	mov    rdx,QWORD PTR [rbp-0x48]
  411a48:	mov    rax,QWORD PTR [rbp-0x40]
  411a4c:	mov    rsi,rdx
  411a4f:	mov    rdi,rax
  411a52:	call   403dd5 <_start@@Base+0xac5>
  411a57:	mov    QWORD PTR [rbp-0x20],rax
  411a5b:	movabs rax,0xffffff0000000000
  411a65:	and    rax,QWORD PTR [rbp-0x20]
  411a69:	mov    rdx,rax
  411a6c:	movabs rax,0x6167650000000000
  411a76:	cmp    rdx,rax
  411a79:	jne    411ba7 <_start@@Base+0xe897>
  411a7f:	mov    rax,QWORD PTR [rbp-0x40]
  411a83:	mov    QWORD PTR [rbp-0x18],rax
  411a87:	mov    rdx,QWORD PTR [rbp-0x48]
  411a8b:	mov    rsi,QWORD PTR [rbp-0x18]
  411a8f:	mov    rax,QWORD PTR [rbp-0x38]
  411a93:	mov    ecx,0x3
  411a98:	mov    rdi,rax
  411a9b:	call   4042cc <_start@@Base+0xfbc>
  411aa0:	mov    QWORD PTR [rbp-0x40],rax
  411aa4:	mov    rax,QWORD PTR [rbp-0x18]
  411aa8:	cmp    rax,QWORD PTR [rbp-0x40]
  411aac:	je     411b8a <_start@@Base+0xe87a>
  411ab2:	mov    DWORD PTR [rbp-0x24],0x0
  411ab9:	mov    rax,QWORD PTR [rbp-0x40]
  411abd:	mov    QWORD PTR [rbp-0x18],rax
  411ac1:	lea    rcx,[rbp-0x24]
  411ac5:	mov    rdx,QWORD PTR [rbp-0x48]
  411ac9:	mov    rsi,QWORD PTR [rbp-0x18]
  411acd:	mov    rax,QWORD PTR [rbp-0x38]
  411ad1:	mov    rdi,rax
  411ad4:	call   404d8f <_start@@Base+0x1a7f>
  411ad9:	mov    QWORD PTR [rbp-0x40],rax
  411add:	mov    rax,QWORD PTR [rbp-0x18]
  411ae1:	cmp    rax,QWORD PTR [rbp-0x40]
  411ae5:	jne    411b31 <_start@@Base+0xe821>
  411ae7:	mov    rax,QWORD PTR [rbp-0x40]
  411aeb:	mov    QWORD PTR [rbp-0x18],rax
  411aef:	lea    rcx,[rbp-0x24]
  411af3:	mov    rdx,QWORD PTR [rbp-0x48]
  411af7:	mov    rsi,QWORD PTR [rbp-0x18]
  411afb:	mov    rax,QWORD PTR [rbp-0x38]
  411aff:	mov    r8,rcx
  411b02:	lea    rcx,[rip+0x18e37]        # 42a940 <filename@@Base+0x840>
  411b09:	mov    rdi,rax
  411b0c:	call   4058d4 <_start@@Base+0x25c4>
  411b11:	mov    QWORD PTR [rbp-0x40],rax
  411b15:	mov    rax,QWORD PTR [rbp-0x40]
  411b19:	cmp    rax,QWORD PTR [rbp-0x18]
  411b1d:	je     411c58 <_start@@Base+0xe948>
  411b23:	mov    rax,QWORD PTR [rbp-0x40]
  411b27:	cmp    rax,QWORD PTR [rbp-0x48]
  411b2b:	je     411c58 <_start@@Base+0xe948>
  411b31:	mov    eax,DWORD PTR [rbp-0x24]
  411b34:	test   eax,eax
  411b36:	jne    411b4a <_start@@Base+0xe83a>
  411b38:	mov    rax,QWORD PTR [rbp-0x38]
  411b3c:	mov    eax,DWORD PTR [rax+0x10]
  411b3f:	and    eax,0x2
  411b42:	test   eax,eax
  411b44:	je     411bfc <_start@@Base+0xe8ec>
  411b4a:	mov    rax,QWORD PTR [rbp-0x38]
  411b4e:	mov    rax,QWORD PTR [rax]
  411b51:	mov    ecx,0x4
  411b56:	mov    edx,0x4
  411b5b:	mov    esi,0x0
  411b60:	mov    rdi,rax
  411b63:	call   419d30 <flatcc_builder_table_add@@Base>
  411b68:	mov    QWORD PTR [rbp-0x10],rax
  411b6c:	cmp    QWORD PTR [rbp-0x10],0x0
  411b71:	je     411c5b <_start@@Base+0xe94b>
  411b77:	mov    edx,DWORD PTR [rbp-0x24]
  411b7a:	mov    rax,QWORD PTR [rbp-0x10]
  411b7e:	mov    esi,edx
  411b80:	mov    rdi,rax
  411b83:	call   40359e <_start@@Base+0x28e>
  411b88:	jmp    411bfc <_start@@Base+0xe8ec>
  411b8a:	mov    rdx,QWORD PTR [rbp-0x48]
  411b8e:	mov    rcx,QWORD PTR [rbp-0x40]
  411b92:	mov    rax,QWORD PTR [rbp-0x38]
  411b96:	mov    rsi,rcx
  411b99:	mov    rdi,rax
  411b9c:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411ba1:	mov    QWORD PTR [rbp-0x40],rax
  411ba5:	jmp    411bfc <_start@@Base+0xe8ec>
  411ba7:	mov    rdx,QWORD PTR [rbp-0x48]
  411bab:	mov    rcx,QWORD PTR [rbp-0x40]
  411baf:	mov    rax,QWORD PTR [rbp-0x38]
  411bb3:	mov    rsi,rcx
  411bb6:	mov    rdi,rax
  411bb9:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411bbe:	mov    QWORD PTR [rbp-0x40],rax
  411bc2:	jmp    411bfc <_start@@Base+0xe8ec>
  411bc4:	mov    rdx,QWORD PTR [rbp-0x48]
  411bc8:	mov    rcx,QWORD PTR [rbp-0x40]
  411bcc:	mov    rax,QWORD PTR [rbp-0x38]
  411bd0:	mov    rsi,rcx
  411bd3:	mov    rdi,rax
  411bd6:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411bdb:	mov    QWORD PTR [rbp-0x40],rax
  411bdf:	jmp    411bfc <_start@@Base+0xe8ec>
  411be1:	mov    rdx,QWORD PTR [rbp-0x48]
  411be5:	mov    rcx,QWORD PTR [rbp-0x40]
  411be9:	mov    rax,QWORD PTR [rbp-0x38]
  411bed:	mov    rsi,rcx
  411bf0:	mov    rdi,rax
  411bf3:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411bf8:	mov    QWORD PTR [rbp-0x40],rax
  411bfc:	lea    rcx,[rbp-0x28]
  411c00:	mov    rdx,QWORD PTR [rbp-0x48]
  411c04:	mov    rsi,QWORD PTR [rbp-0x40]
  411c08:	mov    rax,QWORD PTR [rbp-0x38]
  411c0c:	mov    rdi,rax
  411c0f:	call   403f93 <_start@@Base+0xc83>
  411c14:	mov    QWORD PTR [rbp-0x40],rax
  411c18:	mov    eax,DWORD PTR [rbp-0x28]
  411c1b:	test   eax,eax
  411c1d:	jne    4119c9 <_start@@Base+0xe6b9>
  411c23:	mov    rax,QWORD PTR [rbp-0x38]
  411c27:	mov    eax,DWORD PTR [rax+0x20]
  411c2a:	test   eax,eax
  411c2c:	jne    411c5e <_start@@Base+0xe94e>
  411c2e:	mov    rax,QWORD PTR [rbp-0x38]
  411c32:	mov    rax,QWORD PTR [rax]
  411c35:	mov    rdi,rax
  411c38:	call   41868f <flatcc_builder_end_table@@Base>
  411c3d:	mov    edx,eax
  411c3f:	mov    rax,QWORD PTR [rbp-0x50]
  411c43:	mov    DWORD PTR [rax],edx
  411c45:	mov    rax,QWORD PTR [rbp-0x50]
  411c49:	mov    eax,DWORD PTR [rax]
  411c4b:	test   eax,eax
  411c4d:	je     411c61 <_start@@Base+0xe951>
  411c4f:	mov    rax,QWORD PTR [rbp-0x40]
  411c53:	jmp    411c7b <_start@@Base+0xe96b>
  411c55:	nop
  411c56:	jmp    411c62 <_start@@Base+0xe952>
  411c58:	nop
  411c59:	jmp    411c62 <_start@@Base+0xe952>
  411c5b:	nop
  411c5c:	jmp    411c62 <_start@@Base+0xe952>
  411c5e:	nop
  411c5f:	jmp    411c62 <_start@@Base+0xe952>
  411c61:	nop
  411c62:	mov    rdx,QWORD PTR [rbp-0x48]
  411c66:	mov    rsi,QWORD PTR [rbp-0x40]
  411c6a:	mov    rax,QWORD PTR [rbp-0x38]
  411c6e:	mov    ecx,0x21
  411c73:	mov    rdi,rax
  411c76:	call   41f09d <flatcc_json_parser_set_error@@Base>
  411c7b:	mov    rdi,QWORD PTR [rbp-0x8]
  411c7f:	xor    rdi,QWORD PTR fs:0x28
  411c88:	je     411c8f <_start@@Base+0xe97f>
  411c8a:	call   403200 <__stack_chk_fail@plt>
  411c8f:	leave  
  411c90:	ret    
  411c91:	endbr64 
  411c95:	push   rbp
  411c96:	mov    rbp,rsp
  411c99:	sub    rsp,0x50
  411c9d:	mov    QWORD PTR [rbp-0x38],rdi
  411ca1:	mov    QWORD PTR [rbp-0x40],rsi
  411ca5:	mov    QWORD PTR [rbp-0x48],rdx
  411ca9:	mov    QWORD PTR [rbp-0x50],rcx
  411cad:	mov    rax,QWORD PTR fs:0x28
  411cb6:	mov    QWORD PTR [rbp-0x8],rax
  411cba:	xor    eax,eax
  411cbc:	lea    rcx,[rbp-0x24]
  411cc0:	mov    rdx,QWORD PTR [rbp-0x48]
  411cc4:	mov    rsi,QWORD PTR [rbp-0x40]
  411cc8:	mov    rax,QWORD PTR [rbp-0x38]
  411ccc:	mov    rdi,rax
  411ccf:	call   403ed6 <_start@@Base+0xbc6>
  411cd4:	mov    QWORD PTR [rbp-0x40],rax
  411cd8:	jmp    411ea4 <_start@@Base+0xeb94>
  411cdd:	mov    rdx,QWORD PTR [rbp-0x48]
  411ce1:	mov    rcx,QWORD PTR [rbp-0x40]
  411ce5:	mov    rax,QWORD PTR [rbp-0x38]
  411ce9:	mov    rsi,rcx
  411cec:	mov    rdi,rax
  411cef:	call   403c48 <_start@@Base+0x938>
  411cf4:	mov    QWORD PTR [rbp-0x40],rax
  411cf8:	mov    rdx,QWORD PTR [rbp-0x48]
  411cfc:	mov    rax,QWORD PTR [rbp-0x40]
  411d00:	mov    rsi,rdx
  411d03:	mov    rdi,rax
  411d06:	call   403dd5 <_start@@Base+0xac5>
  411d0b:	mov    QWORD PTR [rbp-0x20],rax
  411d0f:	movabs rax,0x686169725f6c656e
  411d19:	cmp    QWORD PTR [rbp-0x20],rax
  411d1d:	jne    411e6d <_start@@Base+0xeb5d>
  411d23:	add    QWORD PTR [rbp-0x40],0x8
  411d28:	mov    rdx,QWORD PTR [rbp-0x48]
  411d2c:	mov    rax,QWORD PTR [rbp-0x40]
  411d30:	mov    rsi,rdx
  411d33:	mov    rdi,rax
  411d36:	call   403dd5 <_start@@Base+0xac5>
  411d3b:	mov    QWORD PTR [rbp-0x20],rax
  411d3f:	movabs rax,0xffffff0000000000
  411d49:	and    rax,QWORD PTR [rbp-0x20]
  411d4d:	mov    rdx,rax
  411d50:	movabs rax,0x6774680000000000
  411d5a:	cmp    rdx,rax
  411d5d:	jne    411e50 <_start@@Base+0xeb40>
  411d63:	mov    rax,QWORD PTR [rbp-0x40]
  411d67:	mov    QWORD PTR [rbp-0x18],rax
  411d6b:	mov    rdx,QWORD PTR [rbp-0x48]
  411d6f:	mov    rsi,QWORD PTR [rbp-0x18]
  411d73:	mov    rax,QWORD PTR [rbp-0x38]
  411d77:	mov    ecx,0x3
  411d7c:	mov    rdi,rax
  411d7f:	call   4042cc <_start@@Base+0xfbc>
  411d84:	mov    QWORD PTR [rbp-0x40],rax
  411d88:	mov    rax,QWORD PTR [rbp-0x18]
  411d8c:	cmp    rax,QWORD PTR [rbp-0x40]
  411d90:	je     411e33 <_start@@Base+0xeb23>
  411d96:	mov    WORD PTR [rbp-0x26],0x0
  411d9c:	mov    rax,QWORD PTR [rbp-0x50]
  411da0:	mov    QWORD PTR [rbp-0x10],rax
  411da4:	mov    rax,QWORD PTR [rbp-0x40]
  411da8:	mov    QWORD PTR [rbp-0x18],rax
  411dac:	lea    rcx,[rbp-0x26]
  411db0:	mov    rdx,QWORD PTR [rbp-0x48]
  411db4:	mov    rsi,QWORD PTR [rbp-0x18]
  411db8:	mov    rax,QWORD PTR [rbp-0x38]
  411dbc:	mov    rdi,rax
  411dbf:	call   404b40 <_start@@Base+0x1830>
  411dc4:	mov    QWORD PTR [rbp-0x40],rax
  411dc8:	mov    rax,QWORD PTR [rbp-0x18]
  411dcc:	cmp    rax,QWORD PTR [rbp-0x40]
  411dd0:	jne    411e1c <_start@@Base+0xeb0c>
  411dd2:	mov    rax,QWORD PTR [rbp-0x40]
  411dd6:	mov    QWORD PTR [rbp-0x18],rax
  411dda:	lea    rcx,[rbp-0x26]
  411dde:	mov    rdx,QWORD PTR [rbp-0x48]
  411de2:	mov    rsi,QWORD PTR [rbp-0x18]
  411de6:	mov    rax,QWORD PTR [rbp-0x38]
  411dea:	mov    r8,rcx
  411ded:	lea    rcx,[rip+0x18b6c]        # 42a960 <filename@@Base+0x860>
  411df4:	mov    rdi,rax
  411df7:	call   405403 <_start@@Base+0x20f3>
  411dfc:	mov    QWORD PTR [rbp-0x40],rax
  411e00:	mov    rax,QWORD PTR [rbp-0x40]
  411e04:	cmp    rax,QWORD PTR [rbp-0x18]
  411e08:	je     411eb5 <_start@@Base+0xeba5>
  411e0e:	mov    rax,QWORD PTR [rbp-0x40]
  411e12:	cmp    rax,QWORD PTR [rbp-0x48]
  411e16:	je     411eb5 <_start@@Base+0xeba5>
  411e1c:	movzx  eax,WORD PTR [rbp-0x26]
  411e20:	movzx  edx,ax
  411e23:	mov    rax,QWORD PTR [rbp-0x10]
  411e27:	mov    esi,edx
  411e29:	mov    rdi,rax
  411e2c:	call   40343a <_start@@Base+0x12a>
  411e31:	jmp    411e88 <_start@@Base+0xeb78>
  411e33:	mov    rdx,QWORD PTR [rbp-0x48]
  411e37:	mov    rcx,QWORD PTR [rbp-0x40]
  411e3b:	mov    rax,QWORD PTR [rbp-0x38]
  411e3f:	mov    rsi,rcx
  411e42:	mov    rdi,rax
  411e45:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411e4a:	mov    QWORD PTR [rbp-0x40],rax
  411e4e:	jmp    411e88 <_start@@Base+0xeb78>
  411e50:	mov    rdx,QWORD PTR [rbp-0x48]
  411e54:	mov    rcx,QWORD PTR [rbp-0x40]
  411e58:	mov    rax,QWORD PTR [rbp-0x38]
  411e5c:	mov    rsi,rcx
  411e5f:	mov    rdi,rax
  411e62:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411e67:	mov    QWORD PTR [rbp-0x40],rax
  411e6b:	jmp    411e88 <_start@@Base+0xeb78>
  411e6d:	mov    rdx,QWORD PTR [rbp-0x48]
  411e71:	mov    rcx,QWORD PTR [rbp-0x40]
  411e75:	mov    rax,QWORD PTR [rbp-0x38]
  411e79:	mov    rsi,rcx
  411e7c:	mov    rdi,rax
  411e7f:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  411e84:	mov    QWORD PTR [rbp-0x40],rax
  411e88:	lea    rcx,[rbp-0x24]
  411e8c:	mov    rdx,QWORD PTR [rbp-0x48]
  411e90:	mov    rsi,QWORD PTR [rbp-0x40]
  411e94:	mov    rax,QWORD PTR [rbp-0x38]
  411e98:	mov    rdi,rax
  411e9b:	call   403f93 <_start@@Base+0xc83>
  411ea0:	mov    QWORD PTR [rbp-0x40],rax
  411ea4:	mov    eax,DWORD PTR [rbp-0x24]
  411ea7:	test   eax,eax
  411ea9:	jne    411cdd <_start@@Base+0xe9cd>
  411eaf:	mov    rax,QWORD PTR [rbp-0x40]
  411eb3:	jmp    411ed3 <_start@@Base+0xebc3>
  411eb5:	nop
  411eb6:	endbr64 
  411eba:	mov    rdx,QWORD PTR [rbp-0x48]
  411ebe:	mov    rsi,QWORD PTR [rbp-0x40]
  411ec2:	mov    rax,QWORD PTR [rbp-0x38]
  411ec6:	mov    ecx,0x21
  411ecb:	mov    rdi,rax
  411ece:	call   41f09d <flatcc_json_parser_set_error@@Base>
  411ed3:	mov    rdi,QWORD PTR [rbp-0x8]
  411ed7:	xor    rdi,QWORD PTR fs:0x28
  411ee0:	je     411ee7 <_start@@Base+0xebd7>
  411ee2:	call   403200 <__stack_chk_fail@plt>
  411ee7:	leave  
  411ee8:	ret    
  411ee9:	endbr64 
  411eed:	push   rbp
  411eee:	mov    rbp,rsp
  411ef1:	sub    rsp,0x30
  411ef5:	mov    QWORD PTR [rbp-0x18],rdi
  411ef9:	mov    QWORD PTR [rbp-0x20],rsi
  411efd:	mov    QWORD PTR [rbp-0x28],rdx
  411f01:	mov    QWORD PTR [rbp-0x30],rcx
  411f05:	mov    rax,QWORD PTR [rbp-0x30]
  411f09:	mov    DWORD PTR [rax],0x0
  411f0f:	mov    rax,QWORD PTR [rbp-0x18]
  411f13:	mov    rax,QWORD PTR [rax]
  411f16:	mov    edx,0x2
  411f1b:	mov    esi,0x2
  411f20:	mov    rdi,rax
  411f23:	call   417048 <flatcc_builder_start_struct@@Base>
  411f28:	mov    QWORD PTR [rbp-0x8],rax
  411f2c:	cmp    QWORD PTR [rbp-0x8],0x0
  411f31:	je     411f80 <_start@@Base+0xec70>
  411f33:	mov    rcx,QWORD PTR [rbp-0x8]
  411f37:	mov    rdx,QWORD PTR [rbp-0x28]
  411f3b:	mov    rsi,QWORD PTR [rbp-0x20]
  411f3f:	mov    rax,QWORD PTR [rbp-0x18]
  411f43:	mov    rdi,rax
  411f46:	call   411c91 <_start@@Base+0xe981>
  411f4b:	mov    QWORD PTR [rbp-0x20],rax
  411f4f:	mov    rax,QWORD PTR [rbp-0x20]
  411f53:	cmp    rax,QWORD PTR [rbp-0x28]
  411f57:	je     411f83 <_start@@Base+0xec73>
  411f59:	mov    rax,QWORD PTR [rbp-0x18]
  411f5d:	mov    rax,QWORD PTR [rax]
  411f60:	mov    rdi,rax
  411f63:	call   4170ca <flatcc_builder_end_struct@@Base>
  411f68:	mov    edx,eax
  411f6a:	mov    rax,QWORD PTR [rbp-0x30]
  411f6e:	mov    DWORD PTR [rax],edx
  411f70:	mov    rax,QWORD PTR [rbp-0x30]
  411f74:	mov    eax,DWORD PTR [rax]
  411f76:	test   eax,eax
  411f78:	je     411f83 <_start@@Base+0xec73>
  411f7a:	mov    rax,QWORD PTR [rbp-0x20]
  411f7e:	jmp    411f9d <_start@@Base+0xec8d>
  411f80:	nop
  411f81:	jmp    411f84 <_start@@Base+0xec74>
  411f83:	nop
  411f84:	mov    rdx,QWORD PTR [rbp-0x28]
  411f88:	mov    rsi,QWORD PTR [rbp-0x20]
  411f8c:	mov    rax,QWORD PTR [rbp-0x18]
  411f90:	mov    ecx,0x21
  411f95:	mov    rdi,rax
  411f98:	call   41f09d <flatcc_json_parser_set_error@@Base>
  411f9d:	leave  
  411f9e:	ret    
  411f9f:	endbr64 
  411fa3:	push   rbp
  411fa4:	mov    rbp,rsp
  411fa7:	sub    rsp,0x50
  411fab:	mov    QWORD PTR [rbp-0x38],rdi
  411faf:	mov    QWORD PTR [rbp-0x40],rsi
  411fb3:	mov    QWORD PTR [rbp-0x48],rdx
  411fb7:	mov    QWORD PTR [rbp-0x50],rcx
  411fbb:	mov    rax,QWORD PTR fs:0x28
  411fc4:	mov    QWORD PTR [rbp-0x8],rax
  411fc8:	xor    eax,eax
  411fca:	lea    rcx,[rbp-0x28]
  411fce:	mov    rdx,QWORD PTR [rbp-0x48]
  411fd2:	mov    rsi,QWORD PTR [rbp-0x40]
  411fd6:	mov    rax,QWORD PTR [rbp-0x38]
  411fda:	mov    rdi,rax
  411fdd:	call   403ed6 <_start@@Base+0xbc6>
  411fe2:	mov    QWORD PTR [rbp-0x40],rax
  411fe6:	jmp    4121af <_start@@Base+0xee9f>
  411feb:	mov    rdx,QWORD PTR [rbp-0x48]
  411fef:	mov    rcx,QWORD PTR [rbp-0x40]
  411ff3:	mov    rax,QWORD PTR [rbp-0x38]
  411ff7:	mov    rsi,rcx
  411ffa:	mov    rdi,rax
  411ffd:	call   403c48 <_start@@Base+0x938>
  412002:	mov    QWORD PTR [rbp-0x40],rax
  412006:	mov    rdx,QWORD PTR [rbp-0x48]
  41200a:	mov    rax,QWORD PTR [rbp-0x40]
  41200e:	mov    rsi,rdx
  412011:	mov    rdi,rax
  412014:	call   403dd5 <_start@@Base+0xac5>
  412019:	mov    QWORD PTR [rbp-0x20],rax
  41201d:	movabs rax,0x626f6f6b735f7265
  412027:	cmp    QWORD PTR [rbp-0x20],rax
  41202b:	jne    412178 <_start@@Base+0xee68>
  412031:	add    QWORD PTR [rbp-0x40],0x8
  412036:	mov    rdx,QWORD PTR [rbp-0x48]
  41203a:	mov    rax,QWORD PTR [rbp-0x40]
  41203e:	mov    rsi,rdx
  412041:	mov    rdi,rax
  412044:	call   403dd5 <_start@@Base+0xac5>
  412049:	mov    QWORD PTR [rbp-0x20],rax
  41204d:	movabs rax,0xffff000000000000
  412057:	and    rax,QWORD PTR [rbp-0x20]
  41205b:	mov    rdx,rax
  41205e:	movabs rax,0x6164000000000000
  412068:	cmp    rdx,rax
  41206b:	jne    41215b <_start@@Base+0xee4b>
  412071:	mov    rax,QWORD PTR [rbp-0x40]
  412075:	mov    QWORD PTR [rbp-0x18],rax
  412079:	mov    rdx,QWORD PTR [rbp-0x48]
  41207d:	mov    rsi,QWORD PTR [rbp-0x18]
  412081:	mov    rax,QWORD PTR [rbp-0x38]
  412085:	mov    ecx,0x2
  41208a:	mov    rdi,rax
  41208d:	call   4042cc <_start@@Base+0xfbc>
  412092:	mov    QWORD PTR [rbp-0x40],rax
  412096:	mov    rax,QWORD PTR [rbp-0x18]
  41209a:	cmp    rax,QWORD PTR [rbp-0x40]
  41209e:	je     41213e <_start@@Base+0xee2e>
  4120a4:	mov    DWORD PTR [rbp-0x24],0x0
  4120ab:	mov    rax,QWORD PTR [rbp-0x50]
  4120af:	mov    QWORD PTR [rbp-0x10],rax
  4120b3:	mov    rax,QWORD PTR [rbp-0x40]
  4120b7:	mov    QWORD PTR [rbp-0x18],rax
  4120bb:	lea    rcx,[rbp-0x24]
  4120bf:	mov    rdx,QWORD PTR [rbp-0x48]
  4120c3:	mov    rsi,QWORD PTR [rbp-0x18]
  4120c7:	mov    rax,QWORD PTR [rbp-0x38]
  4120cb:	mov    rdi,rax
  4120ce:	call   404d8f <_start@@Base+0x1a7f>
  4120d3:	mov    QWORD PTR [rbp-0x40],rax
  4120d7:	mov    rax,QWORD PTR [rbp-0x18]
  4120db:	cmp    rax,QWORD PTR [rbp-0x40]
  4120df:	jne    41212b <_start@@Base+0xee1b>
  4120e1:	mov    rax,QWORD PTR [rbp-0x40]
  4120e5:	mov    QWORD PTR [rbp-0x18],rax
  4120e9:	lea    rcx,[rbp-0x24]
  4120ed:	mov    rdx,QWORD PTR [rbp-0x48]
  4120f1:	mov    rsi,QWORD PTR [rbp-0x18]
  4120f5:	mov    rax,QWORD PTR [rbp-0x38]
  4120f9:	mov    r8,rcx
  4120fc:	lea    rcx,[rip+0x1887d]        # 42a980 <filename@@Base+0x880>
  412103:	mov    rdi,rax
  412106:	call   4058d4 <_start@@Base+0x25c4>
  41210b:	mov    QWORD PTR [rbp-0x40],rax
  41210f:	mov    rax,QWORD PTR [rbp-0x40]
  412113:	cmp    rax,QWORD PTR [rbp-0x18]
  412117:	je     4121c0 <_start@@Base+0xeeb0>
  41211d:	mov    rax,QWORD PTR [rbp-0x40]
  412121:	cmp    rax,QWORD PTR [rbp-0x48]
  412125:	je     4121c0 <_start@@Base+0xeeb0>
  41212b:	mov    edx,DWORD PTR [rbp-0x24]
  41212e:	mov    rax,QWORD PTR [rbp-0x10]
  412132:	mov    esi,edx
  412134:	mov    rdi,rax
  412137:	call   40359e <_start@@Base+0x28e>
  41213c:	jmp    412193 <_start@@Base+0xee83>
  41213e:	mov    rdx,QWORD PTR [rbp-0x48]
  412142:	mov    rcx,QWORD PTR [rbp-0x40]
  412146:	mov    rax,QWORD PTR [rbp-0x38]
  41214a:	mov    rsi,rcx
  41214d:	mov    rdi,rax
  412150:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412155:	mov    QWORD PTR [rbp-0x40],rax
  412159:	jmp    412193 <_start@@Base+0xee83>
  41215b:	mov    rdx,QWORD PTR [rbp-0x48]
  41215f:	mov    rcx,QWORD PTR [rbp-0x40]
  412163:	mov    rax,QWORD PTR [rbp-0x38]
  412167:	mov    rsi,rcx
  41216a:	mov    rdi,rax
  41216d:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412172:	mov    QWORD PTR [rbp-0x40],rax
  412176:	jmp    412193 <_start@@Base+0xee83>
  412178:	mov    rdx,QWORD PTR [rbp-0x48]
  41217c:	mov    rcx,QWORD PTR [rbp-0x40]
  412180:	mov    rax,QWORD PTR [rbp-0x38]
  412184:	mov    rsi,rcx
  412187:	mov    rdi,rax
  41218a:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  41218f:	mov    QWORD PTR [rbp-0x40],rax
  412193:	lea    rcx,[rbp-0x28]
  412197:	mov    rdx,QWORD PTR [rbp-0x48]
  41219b:	mov    rsi,QWORD PTR [rbp-0x40]
  41219f:	mov    rax,QWORD PTR [rbp-0x38]
  4121a3:	mov    rdi,rax
  4121a6:	call   403f93 <_start@@Base+0xc83>
  4121ab:	mov    QWORD PTR [rbp-0x40],rax
  4121af:	mov    eax,DWORD PTR [rbp-0x28]
  4121b2:	test   eax,eax
  4121b4:	jne    411feb <_start@@Base+0xecdb>
  4121ba:	mov    rax,QWORD PTR [rbp-0x40]
  4121be:	jmp    4121de <_start@@Base+0xeece>
  4121c0:	nop
  4121c1:	endbr64 
  4121c5:	mov    rdx,QWORD PTR [rbp-0x48]
  4121c9:	mov    rsi,QWORD PTR [rbp-0x40]
  4121cd:	mov    rax,QWORD PTR [rbp-0x38]
  4121d1:	mov    ecx,0x21
  4121d6:	mov    rdi,rax
  4121d9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4121de:	mov    rdi,QWORD PTR [rbp-0x8]
  4121e2:	xor    rdi,QWORD PTR fs:0x28
  4121eb:	je     4121f2 <_start@@Base+0xeee2>
  4121ed:	call   403200 <__stack_chk_fail@plt>
  4121f2:	leave  
  4121f3:	ret    
  4121f4:	endbr64 
  4121f8:	push   rbp
  4121f9:	mov    rbp,rsp
  4121fc:	sub    rsp,0x30
  412200:	mov    QWORD PTR [rbp-0x18],rdi
  412204:	mov    QWORD PTR [rbp-0x20],rsi
  412208:	mov    QWORD PTR [rbp-0x28],rdx
  41220c:	mov    QWORD PTR [rbp-0x30],rcx
  412210:	mov    rax,QWORD PTR [rbp-0x30]
  412214:	mov    DWORD PTR [rax],0x0
  41221a:	mov    rax,QWORD PTR [rbp-0x18]
  41221e:	mov    rax,QWORD PTR [rax]
  412221:	mov    edx,0x4
  412226:	mov    esi,0x4
  41222b:	mov    rdi,rax
  41222e:	call   417048 <flatcc_builder_start_struct@@Base>
  412233:	mov    QWORD PTR [rbp-0x8],rax
  412237:	cmp    QWORD PTR [rbp-0x8],0x0
  41223c:	je     41228b <_start@@Base+0xef7b>
  41223e:	mov    rcx,QWORD PTR [rbp-0x8]
  412242:	mov    rdx,QWORD PTR [rbp-0x28]
  412246:	mov    rsi,QWORD PTR [rbp-0x20]
  41224a:	mov    rax,QWORD PTR [rbp-0x18]
  41224e:	mov    rdi,rax
  412251:	call   411f9f <_start@@Base+0xec8f>
  412256:	mov    QWORD PTR [rbp-0x20],rax
  41225a:	mov    rax,QWORD PTR [rbp-0x20]
  41225e:	cmp    rax,QWORD PTR [rbp-0x28]
  412262:	je     41228e <_start@@Base+0xef7e>
  412264:	mov    rax,QWORD PTR [rbp-0x18]
  412268:	mov    rax,QWORD PTR [rax]
  41226b:	mov    rdi,rax
  41226e:	call   4170ca <flatcc_builder_end_struct@@Base>
  412273:	mov    edx,eax
  412275:	mov    rax,QWORD PTR [rbp-0x30]
  412279:	mov    DWORD PTR [rax],edx
  41227b:	mov    rax,QWORD PTR [rbp-0x30]
  41227f:	mov    eax,DWORD PTR [rax]
  412281:	test   eax,eax
  412283:	je     41228e <_start@@Base+0xef7e>
  412285:	mov    rax,QWORD PTR [rbp-0x20]
  412289:	jmp    4122a8 <_start@@Base+0xef98>
  41228b:	nop
  41228c:	jmp    41228f <_start@@Base+0xef7f>
  41228e:	nop
  41228f:	mov    rdx,QWORD PTR [rbp-0x28]
  412293:	mov    rsi,QWORD PTR [rbp-0x20]
  412297:	mov    rax,QWORD PTR [rbp-0x18]
  41229b:	mov    ecx,0x21
  4122a0:	mov    rdi,rax
  4122a3:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4122a8:	leave  
  4122a9:	ret    
  4122aa:	endbr64 
  4122ae:	push   rbp
  4122af:	mov    rbp,rsp
  4122b2:	sub    rsp,0x30
  4122b6:	mov    QWORD PTR [rbp-0x8],rdi
  4122ba:	mov    QWORD PTR [rbp-0x10],rsi
  4122be:	mov    QWORD PTR [rbp-0x18],rdx
  4122c2:	mov    eax,ecx
  4122c4:	mov    QWORD PTR [rbp-0x28],r8
  4122c8:	mov    BYTE PTR [rbp-0x1c],al
  4122cb:	mov    rax,QWORD PTR [rbp-0x28]
  4122cf:	mov    DWORD PTR [rax],0x0
  4122d5:	movzx  eax,BYTE PTR [rbp-0x1c]
  4122d9:	cmp    eax,0x9
  4122dc:	je     41237a <_start@@Base+0xf06a>
  4122e2:	cmp    eax,0x9
  4122e5:	jg     4122fa <_start@@Base+0xefea>
  4122e7:	cmp    eax,0x2
  4122ea:	je     412338 <_start@@Base+0xf028>
  4122ec:	cmp    eax,0x8
  4122ef:	je     412359 <_start@@Base+0xf049>
  4122f1:	test   eax,eax
  4122f3:	je     41231c <_start@@Base+0xf00c>
  4122f5:	jmp    4123f5 <_start@@Base+0xf0e5>
  4122fa:	cmp    eax,0xb
  4122fd:	je     4123b9 <_start@@Base+0xf0a9>
  412303:	cmp    eax,0xb
  412306:	jl     41239b <_start@@Base+0xf08b>
  41230c:	cmp    eax,0xff
  412311:	je     4123d7 <_start@@Base+0xf0c7>
  412317:	jmp    4123f5 <_start@@Base+0xf0e5>
  41231c:	mov    rdx,QWORD PTR [rbp-0x18]
  412320:	mov    rcx,QWORD PTR [rbp-0x10]
  412324:	mov    rax,QWORD PTR [rbp-0x8]
  412328:	mov    rsi,rcx
  41232b:	mov    rdi,rax
  41232e:	call   404950 <_start@@Base+0x1640>
  412333:	jmp    412471 <_start@@Base+0xf161>
  412338:	mov    rcx,QWORD PTR [rbp-0x28]
  41233c:	mov    rdx,QWORD PTR [rbp-0x18]
  412340:	mov    rsi,QWORD PTR [rbp-0x10]
  412344:	mov    rax,QWORD PTR [rbp-0x8]
  412348:	mov    rdi,rax
  41234b:	call   411957 <_start@@Base+0xe647>
  412350:	mov    QWORD PTR [rbp-0x10],rax
  412354:	jmp    412437 <_start@@Base+0xf127>
  412359:	mov    rcx,QWORD PTR [rbp-0x28]
  41235d:	mov    rdx,QWORD PTR [rbp-0x18]
  412361:	mov    rsi,QWORD PTR [rbp-0x10]
  412365:	mov    rax,QWORD PTR [rbp-0x8]
  412369:	mov    rdi,rax
  41236c:	call   411ee9 <_start@@Base+0xebd9>
  412371:	mov    QWORD PTR [rbp-0x10],rax
  412375:	jmp    412437 <_start@@Base+0xf127>
  41237a:	mov    rcx,QWORD PTR [rbp-0x28]
  41237e:	mov    rdx,QWORD PTR [rbp-0x18]
  412382:	mov    rsi,QWORD PTR [rbp-0x10]
  412386:	mov    rax,QWORD PTR [rbp-0x8]
  41238a:	mov    rdi,rax
  41238d:	call   4121f4 <_start@@Base+0xeee4>
  412392:	mov    QWORD PTR [rbp-0x10],rax
  412396:	jmp    412437 <_start@@Base+0xf127>
  41239b:	mov    rcx,QWORD PTR [rbp-0x28]
  41239f:	mov    rdx,QWORD PTR [rbp-0x18]
  4123a3:	mov    rsi,QWORD PTR [rbp-0x10]
  4123a7:	mov    rax,QWORD PTR [rbp-0x8]
  4123ab:	mov    rdi,rax
  4123ae:	call   4121f4 <_start@@Base+0xeee4>
  4123b3:	mov    QWORD PTR [rbp-0x10],rax
  4123b7:	jmp    412437 <_start@@Base+0xf127>
  4123b9:	mov    rcx,QWORD PTR [rbp-0x28]
  4123bd:	mov    rdx,QWORD PTR [rbp-0x18]
  4123c1:	mov    rsi,QWORD PTR [rbp-0x10]
  4123c5:	mov    rax,QWORD PTR [rbp-0x8]
  4123c9:	mov    rdi,rax
  4123cc:	call   420b07 <flatcc_json_parser_build_string@@Base>
  4123d1:	mov    QWORD PTR [rbp-0x10],rax
  4123d5:	jmp    412437 <_start@@Base+0xf127>
  4123d7:	mov    rcx,QWORD PTR [rbp-0x28]
  4123db:	mov    rdx,QWORD PTR [rbp-0x18]
  4123df:	mov    rsi,QWORD PTR [rbp-0x10]
  4123e3:	mov    rax,QWORD PTR [rbp-0x8]
  4123e7:	mov    rdi,rax
  4123ea:	call   420b07 <flatcc_json_parser_build_string@@Base>
  4123ef:	mov    QWORD PTR [rbp-0x10],rax
  4123f3:	jmp    412437 <_start@@Base+0xf127>
  4123f5:	mov    rax,QWORD PTR [rbp-0x8]
  4123f9:	mov    eax,DWORD PTR [rax+0x10]
  4123fc:	and    eax,0x1
  4123ff:	test   eax,eax
  412401:	jne    41241e <_start@@Base+0xf10e>
  412403:	mov    rdx,QWORD PTR [rbp-0x18]
  412407:	mov    rsi,QWORD PTR [rbp-0x10]
  41240b:	mov    rax,QWORD PTR [rbp-0x8]
  41240f:	mov    ecx,0xf
  412414:	mov    rdi,rax
  412417:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41241c:	jmp    412471 <_start@@Base+0xf161>
  41241e:	mov    rdx,QWORD PTR [rbp-0x18]
  412422:	mov    rcx,QWORD PTR [rbp-0x10]
  412426:	mov    rax,QWORD PTR [rbp-0x8]
  41242a:	mov    rsi,rcx
  41242d:	mov    rdi,rax
  412430:	call   42017c <flatcc_json_parser_generic_json@@Base>
  412435:	jmp    412471 <_start@@Base+0xf161>
  412437:	mov    rax,QWORD PTR [rbp-0x8]
  41243b:	mov    eax,DWORD PTR [rax+0x20]
  41243e:	test   eax,eax
  412440:	je     412448 <_start@@Base+0xf138>
  412442:	mov    rax,QWORD PTR [rbp-0x10]
  412446:	jmp    412471 <_start@@Base+0xf161>
  412448:	mov    rax,QWORD PTR [rbp-0x28]
  41244c:	mov    eax,DWORD PTR [rax]
  41244e:	test   eax,eax
  412450:	jne    41246d <_start@@Base+0xf15d>
  412452:	mov    rdx,QWORD PTR [rbp-0x18]
  412456:	mov    rsi,QWORD PTR [rbp-0x10]
  41245a:	mov    rax,QWORD PTR [rbp-0x8]
  41245e:	mov    ecx,0x21
  412463:	mov    rdi,rax
  412466:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41246b:	jmp    412471 <_start@@Base+0xf161>
  41246d:	mov    rax,QWORD PTR [rbp-0x10]
  412471:	leave  
  412472:	ret    
  412473:	endbr64 
  412477:	push   rbp
  412478:	mov    rbp,rsp
  41247b:	mov    eax,edi
  41247d:	mov    BYTE PTR [rbp-0x4],al
  412480:	movzx  eax,BYTE PTR [rbp-0x4]
  412484:	cmp    eax,0x9
  412487:	je     4124c6 <_start@@Base+0xf1b6>
  412489:	cmp    eax,0x9
  41248c:	jg     41249e <_start@@Base+0xf18e>
  41248e:	cmp    eax,0x2
  412491:	je     4124b8 <_start@@Base+0xf1a8>
  412493:	cmp    eax,0x8
  412496:	je     4124bf <_start@@Base+0xf1af>
  412498:	test   eax,eax
  41249a:	je     4124b1 <_start@@Base+0xf1a1>
  41249c:	jmp    4124e2 <_start@@Base+0xf1d2>
  41249e:	cmp    eax,0xb
  4124a1:	je     4124d4 <_start@@Base+0xf1c4>
  4124a3:	cmp    eax,0xb
  4124a6:	jl     4124cd <_start@@Base+0xf1bd>
  4124a8:	cmp    eax,0xff
  4124ad:	je     4124db <_start@@Base+0xf1cb>
  4124af:	jmp    4124e2 <_start@@Base+0xf1d2>
  4124b1:	mov    eax,0x1
  4124b6:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124b8:	mov    eax,0x1
  4124bd:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124bf:	mov    eax,0x1
  4124c4:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124c6:	mov    eax,0x1
  4124cb:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124cd:	mov    eax,0x1
  4124d2:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124d4:	mov    eax,0x1
  4124d9:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124db:	mov    eax,0x1
  4124e0:	jmp    4124e7 <_start@@Base+0xf1d7>
  4124e2:	mov    eax,0x0
  4124e7:	pop    rbp
  4124e8:	ret    
  4124e9:	endbr64 
  4124ed:	push   rbp
  4124ee:	mov    rbp,rsp
  4124f1:	sub    rsp,0x50
  4124f5:	mov    QWORD PTR [rbp-0x28],rdi
  4124f9:	mov    QWORD PTR [rbp-0x30],rsi
  4124fd:	mov    QWORD PTR [rbp-0x38],rdx
  412501:	mov    QWORD PTR [rbp-0x40],rcx
  412505:	mov    QWORD PTR [rbp-0x48],r8
  412509:	mov    QWORD PTR [rbp-0x50],r9
  41250d:	mov    rax,QWORD PTR [rbp-0x30]
  412511:	mov    QWORD PTR [rbp-0x18],rax
  412515:	mov    rdx,QWORD PTR [rbp-0x38]
  412519:	mov    rax,QWORD PTR [rbp-0x30]
  41251d:	mov    rsi,rdx
  412520:	mov    rdi,rax
  412523:	call   403dd5 <_start@@Base+0xac5>
  412528:	mov    QWORD PTR [rbp-0x10],rax
  41252c:	movabs rax,0x4e4f4e44ffffffff
  412536:	cmp    QWORD PTR [rbp-0x10],rax
  41253a:	ja     4126bd <_start@@Base+0xf3ad>
  412540:	movabs rax,0x426f6f6b46616dff
  41254a:	cmp    QWORD PTR [rbp-0x10],rax
  41254e:	ja     4125ce <_start@@Base+0xf2be>
  412550:	mov    rax,QWORD PTR [rbp-0x10]
  412554:	and    rax,0xffffffffff000000
  41255a:	mov    rdx,rax
  41255d:	movabs rax,0x42656c6c65000000
  412567:	cmp    rdx,rax
  41256a:	jne    4125c5 <_start@@Base+0xf2b5>
  41256c:	mov    rax,QWORD PTR [rbp-0x30]
  412570:	mov    QWORD PTR [rbp-0x8],rax
  412574:	mov    rcx,QWORD PTR [rbp-0x50]
  412578:	mov    rdx,QWORD PTR [rbp-0x38]
  41257c:	mov    rsi,QWORD PTR [rbp-0x8]
  412580:	mov    rax,QWORD PTR [rbp-0x28]
  412584:	mov    r8,rcx
  412587:	mov    ecx,0x5
  41258c:	mov    rdi,rax
  41258f:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  412594:	mov    QWORD PTR [rbp-0x30],rax
  412598:	mov    rax,QWORD PTR [rbp-0x30]
  41259c:	cmp    rax,QWORD PTR [rbp-0x8]
  4125a0:	je     4125bc <_start@@Base+0xf2ac>
  4125a2:	mov    rax,QWORD PTR [rbp-0x48]
  4125a6:	mov    QWORD PTR [rax],0x9
  4125ad:	mov    rax,QWORD PTR [rbp-0x40]
  4125b1:	mov    DWORD PTR [rax],0x0
  4125b7:	jmp    4128b7 <_start@@Base+0xf5a7>
  4125bc:	mov    rax,QWORD PTR [rbp-0x18]
  4125c0:	jmp    4128bb <_start@@Base+0xf5ab>
  4125c5:	mov    rax,QWORD PTR [rbp-0x18]
  4125c9:	jmp    4128bb <_start@@Base+0xf5ab>
  4125ce:	mov    rax,QWORD PTR [rbp-0x10]
  4125d2:	and    rax,0xffffffffff000000
  4125d8:	mov    rdx,rax
  4125db:	movabs rax,0x4d754c616e000000
  4125e5:	cmp    rdx,rax
  4125e8:	jne    412643 <_start@@Base+0xf333>
  4125ea:	mov    rax,QWORD PTR [rbp-0x30]
  4125ee:	mov    QWORD PTR [rbp-0x8],rax
  4125f2:	mov    rcx,QWORD PTR [rbp-0x50]
  4125f6:	mov    rdx,QWORD PTR [rbp-0x38]
  4125fa:	mov    rsi,QWORD PTR [rbp-0x8]
  4125fe:	mov    rax,QWORD PTR [rbp-0x28]
  412602:	mov    r8,rcx
  412605:	mov    ecx,0x5
  41260a:	mov    rdi,rax
  41260d:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  412612:	mov    QWORD PTR [rbp-0x30],rax
  412616:	mov    rax,QWORD PTR [rbp-0x30]
  41261a:	cmp    rax,QWORD PTR [rbp-0x8]
  41261e:	je     41263a <_start@@Base+0xf32a>
  412620:	mov    rax,QWORD PTR [rbp-0x48]
  412624:	mov    QWORD PTR [rax],0x2
  41262b:	mov    rax,QWORD PTR [rbp-0x40]
  41262f:	mov    DWORD PTR [rax],0x0
  412635:	jmp    4128b7 <_start@@Base+0xf5a7>
  41263a:	mov    rax,QWORD PTR [rbp-0x18]
  41263e:	jmp    4128bb <_start@@Base+0xf5ab>
  412643:	mov    rax,QWORD PTR [rbp-0x10]
  412647:	mov    al,0x0
  412649:	mov    rdx,rax
  41264c:	movabs rax,0x426f6f6b46616e00
  412656:	cmp    rdx,rax
  412659:	jne    4126b4 <_start@@Base+0xf3a4>
  41265b:	mov    rax,QWORD PTR [rbp-0x30]
  41265f:	mov    QWORD PTR [rbp-0x8],rax
  412663:	mov    rcx,QWORD PTR [rbp-0x50]
  412667:	mov    rdx,QWORD PTR [rbp-0x38]
  41266b:	mov    rsi,QWORD PTR [rbp-0x8]
  41266f:	mov    rax,QWORD PTR [rbp-0x28]
  412673:	mov    r8,rcx
  412676:	mov    ecx,0x7
  41267b:	mov    rdi,rax
  41267e:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  412683:	mov    QWORD PTR [rbp-0x30],rax
  412687:	mov    rax,QWORD PTR [rbp-0x30]
  41268b:	cmp    rax,QWORD PTR [rbp-0x8]
  41268f:	je     4126ab <_start@@Base+0xf39b>
  412691:	mov    rax,QWORD PTR [rbp-0x48]
  412695:	mov    QWORD PTR [rax],0xa
  41269c:	mov    rax,QWORD PTR [rbp-0x40]
  4126a0:	mov    DWORD PTR [rax],0x0
  4126a6:	jmp    4128b7 <_start@@Base+0xf5a7>
  4126ab:	mov    rax,QWORD PTR [rbp-0x18]
  4126af:	jmp    4128bb <_start@@Base+0xf5ab>
  4126b4:	mov    rax,QWORD PTR [rbp-0x18]
  4126b8:	jmp    4128bb <_start@@Base+0xf5ab>
  4126bd:	movabs rax,0x4f74686571ffffff
  4126c7:	cmp    QWORD PTR [rbp-0x10],rax
  4126cb:	ja     412753 <_start@@Base+0xf443>
  4126d1:	movabs rax,0xffffffff00000000
  4126db:	and    rax,QWORD PTR [rbp-0x10]
  4126df:	mov    rdx,rax
  4126e2:	movabs rax,0x4e4f4e4500000000
  4126ec:	cmp    rdx,rax
  4126ef:	jne    41274a <_start@@Base+0xf43a>
  4126f1:	mov    rax,QWORD PTR [rbp-0x30]
  4126f5:	mov    QWORD PTR [rbp-0x8],rax
  4126f9:	mov    rcx,QWORD PTR [rbp-0x50]
  4126fd:	mov    rdx,QWORD PTR [rbp-0x38]
  412701:	mov    rsi,QWORD PTR [rbp-0x8]
  412705:	mov    rax,QWORD PTR [rbp-0x28]
  412709:	mov    r8,rcx
  41270c:	mov    ecx,0x4
  412711:	mov    rdi,rax
  412714:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  412719:	mov    QWORD PTR [rbp-0x30],rax
  41271d:	mov    rax,QWORD PTR [rbp-0x30]
  412721:	cmp    rax,QWORD PTR [rbp-0x8]
  412725:	je     412741 <_start@@Base+0xf431>
  412727:	mov    rax,QWORD PTR [rbp-0x48]
  41272b:	mov    QWORD PTR [rax],0x0
  412732:	mov    rax,QWORD PTR [rbp-0x40]
  412736:	mov    DWORD PTR [rax],0x0
  41273c:	jmp    4128b7 <_start@@Base+0xf5a7>
  412741:	mov    rax,QWORD PTR [rbp-0x18]
  412745:	jmp    4128bb <_start@@Base+0xf5ab>
  41274a:	mov    rax,QWORD PTR [rbp-0x18]
  41274e:	jmp    4128bb <_start@@Base+0xf5ab>
  412753:	movabs rax,0x526170756e7a656b
  41275d:	cmp    QWORD PTR [rbp-0x10],rax
  412761:	ja     4127e1 <_start@@Base+0xf4d1>
  412763:	mov    rax,QWORD PTR [rbp-0x10]
  412767:	and    rax,0xffffffffff000000
  41276d:	mov    rdx,rax
  412770:	movabs rax,0x4f74686572000000
  41277a:	cmp    rdx,rax
  41277d:	jne    4127d8 <_start@@Base+0xf4c8>
  41277f:	mov    rax,QWORD PTR [rbp-0x30]
  412783:	mov    QWORD PTR [rbp-0x8],rax
  412787:	mov    rcx,QWORD PTR [rbp-0x50]
  41278b:	mov    rdx,QWORD PTR [rbp-0x38]
  41278f:	mov    rsi,QWORD PTR [rbp-0x8]
  412793:	mov    rax,QWORD PTR [rbp-0x28]
  412797:	mov    r8,rcx
  41279a:	mov    ecx,0x5
  41279f:	mov    rdi,rax
  4127a2:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  4127a7:	mov    QWORD PTR [rbp-0x30],rax
  4127ab:	mov    rax,QWORD PTR [rbp-0x30]
  4127af:	cmp    rax,QWORD PTR [rbp-0x8]
  4127b3:	je     4127cf <_start@@Base+0xf4bf>
  4127b5:	mov    rax,QWORD PTR [rbp-0x48]
  4127b9:	mov    QWORD PTR [rax],0xb
  4127c0:	mov    rax,QWORD PTR [rbp-0x40]
  4127c4:	mov    DWORD PTR [rax],0x0
  4127ca:	jmp    4128b7 <_start@@Base+0xf5a7>
  4127cf:	mov    rax,QWORD PTR [rbp-0x18]
  4127d3:	jmp    4128bb <_start@@Base+0xf5ab>
  4127d8:	mov    rax,QWORD PTR [rbp-0x18]
  4127dc:	jmp    4128bb <_start@@Base+0xf5ab>
  4127e1:	mov    rax,QWORD PTR [rbp-0x10]
  4127e5:	mov    ax,0x0
  4127e9:	mov    rdx,rax
  4127ec:	movabs rax,0x556e757365640000
  4127f6:	cmp    rdx,rax
  4127f9:	jne    41284e <_start@@Base+0xf53e>
  4127fb:	mov    rax,QWORD PTR [rbp-0x30]
  4127ff:	mov    QWORD PTR [rbp-0x8],rax
  412803:	mov    rcx,QWORD PTR [rbp-0x50]
  412807:	mov    rdx,QWORD PTR [rbp-0x38]
  41280b:	mov    rsi,QWORD PTR [rbp-0x8]
  41280f:	mov    rax,QWORD PTR [rbp-0x28]
  412813:	mov    r8,rcx
  412816:	mov    ecx,0x6
  41281b:	mov    rdi,rax
  41281e:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  412823:	mov    QWORD PTR [rbp-0x30],rax
  412827:	mov    rax,QWORD PTR [rbp-0x30]
  41282b:	cmp    rax,QWORD PTR [rbp-0x8]
  41282f:	je     412848 <_start@@Base+0xf538>
  412831:	mov    rax,QWORD PTR [rbp-0x48]
  412835:	mov    QWORD PTR [rax],0xff
  41283c:	mov    rax,QWORD PTR [rbp-0x40]
  412840:	mov    DWORD PTR [rax],0x0
  412846:	jmp    4128b7 <_start@@Base+0xf5a7>
  412848:	mov    rax,QWORD PTR [rbp-0x18]
  41284c:	jmp    4128bb <_start@@Base+0xf5ab>
  41284e:	movabs rax,0x526170756e7a656c
  412858:	cmp    QWORD PTR [rbp-0x10],rax
  41285c:	jne    4128b1 <_start@@Base+0xf5a1>
  41285e:	mov    rax,QWORD PTR [rbp-0x30]
  412862:	mov    QWORD PTR [rbp-0x8],rax
  412866:	mov    rcx,QWORD PTR [rbp-0x50]
  41286a:	mov    rdx,QWORD PTR [rbp-0x38]
  41286e:	mov    rsi,QWORD PTR [rbp-0x8]
  412872:	mov    rax,QWORD PTR [rbp-0x28]
  412876:	mov    r8,rcx
  412879:	mov    ecx,0x8
  41287e:	mov    rdi,rax
  412881:	call   41f968 <flatcc_json_parser_match_constant@@Base>
  412886:	mov    QWORD PTR [rbp-0x30],rax
  41288a:	mov    rax,QWORD PTR [rbp-0x30]
  41288e:	cmp    rax,QWORD PTR [rbp-0x8]
  412892:	je     4128ab <_start@@Base+0xf59b>
  412894:	mov    rax,QWORD PTR [rbp-0x48]
  412898:	mov    QWORD PTR [rax],0x8
  41289f:	mov    rax,QWORD PTR [rbp-0x40]
  4128a3:	mov    DWORD PTR [rax],0x0
  4128a9:	jmp    4128b7 <_start@@Base+0xf5a7>
  4128ab:	mov    rax,QWORD PTR [rbp-0x18]
  4128af:	jmp    4128bb <_start@@Base+0xf5ab>
  4128b1:	mov    rax,QWORD PTR [rbp-0x18]
  4128b5:	jmp    4128bb <_start@@Base+0xf5ab>
  4128b7:	mov    rax,QWORD PTR [rbp-0x30]
  4128bb:	leave  
  4128bc:	ret    
  4128bd:	endbr64 
  4128c1:	push   rbp
  4128c2:	mov    rbp,rsp
  4128c5:	sub    rsp,0x50
  4128c9:	mov    QWORD PTR [rbp-0x38],rdi
  4128cd:	mov    QWORD PTR [rbp-0x40],rsi
  4128d1:	mov    QWORD PTR [rbp-0x48],rdx
  4128d5:	mov    QWORD PTR [rbp-0x50],rcx
  4128d9:	mov    rax,QWORD PTR fs:0x28
  4128e2:	mov    QWORD PTR [rbp-0x8],rax
  4128e6:	xor    eax,eax
  4128e8:	mov    rax,QWORD PTR [rbp-0x50]
  4128ec:	mov    DWORD PTR [rax],0x0
  4128f2:	mov    rax,QWORD PTR [rbp-0x38]
  4128f6:	mov    rax,QWORD PTR [rax]
  4128f9:	mov    esi,0xa
  4128fe:	mov    rdi,rax
  412901:	call   417b80 <flatcc_builder_start_table@@Base>
  412906:	test   eax,eax
  412908:	jne    41334e <_start@@Base+0x1003e>
  41290e:	lea    rcx,[rbp-0x20]
  412912:	mov    rdx,QWORD PTR [rbp-0x48]
  412916:	mov    rsi,QWORD PTR [rbp-0x40]
  41291a:	mov    rax,QWORD PTR [rbp-0x38]
  41291e:	mov    r8,rcx
  412921:	mov    ecx,0x5
  412926:	mov    rdi,rax
  412929:	call   420d06 <flatcc_json_parser_prepare_unions@@Base>
  41292e:	cmp    QWORD PTR [rbp-0x48],rax
  412932:	je     413351 <_start@@Base+0x10041>
  412938:	lea    rcx,[rbp-0x24]
  41293c:	mov    rdx,QWORD PTR [rbp-0x48]
  412940:	mov    rsi,QWORD PTR [rbp-0x40]
  412944:	mov    rax,QWORD PTR [rbp-0x38]
  412948:	mov    rdi,rax
  41294b:	call   403ed6 <_start@@Base+0xbc6>
  412950:	mov    QWORD PTR [rbp-0x40],rax
  412954:	jmp    4132f5 <_start@@Base+0xffe5>
  412959:	mov    rdx,QWORD PTR [rbp-0x48]
  41295d:	mov    rcx,QWORD PTR [rbp-0x40]
  412961:	mov    rax,QWORD PTR [rbp-0x38]
  412965:	mov    rsi,rcx
  412968:	mov    rdi,rax
  41296b:	call   403c48 <_start@@Base+0x938>
  412970:	mov    QWORD PTR [rbp-0x40],rax
  412974:	mov    rdx,QWORD PTR [rbp-0x48]
  412978:	mov    rax,QWORD PTR [rbp-0x40]
  41297c:	mov    rsi,rdx
  41297f:	mov    rdi,rax
  412982:	call   403dd5 <_start@@Base+0xac5>
  412987:	mov    QWORD PTR [rbp-0x18],rax
  41298b:	movabs rax,0x6368617261637464
  412995:	cmp    QWORD PTR [rbp-0x18],rax
  412999:	ja     412d23 <_start@@Base+0xfa13>
  41299f:	movabs rax,0x616e7461676f6e69
  4129a9:	cmp    QWORD PTR [rbp-0x18],rax
  4129ad:	jne    412b4f <_start@@Base+0xf83f>
  4129b3:	add    QWORD PTR [rbp-0x40],0x8
  4129b8:	mov    rdx,QWORD PTR [rbp-0x48]
  4129bc:	mov    rax,QWORD PTR [rbp-0x40]
  4129c0:	mov    rsi,rdx
  4129c3:	mov    rdi,rax
  4129c6:	call   403dd5 <_start@@Base+0xac5>
  4129cb:	mov    QWORD PTR [rbp-0x18],rax
  4129cf:	mov    rax,QWORD PTR [rbp-0x18]
  4129d3:	mov    al,0x0
  4129d5:	mov    rdx,rax
  4129d8:	movabs rax,0x73745f7479706500
  4129e2:	cmp    rdx,rax
  4129e5:	jne    412a7d <_start@@Base+0xf76d>
  4129eb:	mov    rax,QWORD PTR [rbp-0x40]
  4129ef:	mov    QWORD PTR [rbp-0x10],rax
  4129f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4129f7:	mov    rsi,QWORD PTR [rbp-0x10]
  4129fb:	mov    rax,QWORD PTR [rbp-0x38]
  4129ff:	mov    ecx,0x7
  412a04:	mov    rdi,rax
  412a07:	call   4042cc <_start@@Base+0xfbc>
  412a0c:	mov    QWORD PTR [rbp-0x40],rax
  412a10:	mov    rax,QWORD PTR [rbp-0x10]
  412a14:	cmp    rax,QWORD PTR [rbp-0x40]
  412a18:	je     412a5d <_start@@Base+0xf74d>
  412a1a:	mov    rdi,QWORD PTR [rbp-0x20]
  412a1e:	mov    rdx,QWORD PTR [rbp-0x48]
  412a22:	mov    rsi,QWORD PTR [rbp-0x40]
  412a26:	mov    rax,QWORD PTR [rbp-0x38]
  412a2a:	lea    rcx,[rip+0xfffffffffffff879]        # 4122aa <_start@@Base+0xef9a>
  412a31:	push   rcx
  412a32:	lea    rcx,[rip+0x17f67]        # 42a9a0 <filename@@Base+0x8a0>
  412a39:	push   rcx
  412a3a:	mov    r9,rdi
  412a3d:	mov    r8d,0x3
  412a43:	mov    ecx,0x1
  412a48:	mov    rdi,rax
  412a4b:	call   421006 <flatcc_json_parser_union_type@@Base>
  412a50:	add    rsp,0x10
  412a54:	mov    QWORD PTR [rbp-0x40],rax
  412a58:	jmp    4132d9 <_start@@Base+0xffc9>
  412a5d:	mov    rdx,QWORD PTR [rbp-0x48]
  412a61:	mov    rcx,QWORD PTR [rbp-0x40]
  412a65:	mov    rax,QWORD PTR [rbp-0x38]
  412a69:	mov    rsi,rcx
  412a6c:	mov    rdi,rax
  412a6f:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412a74:	mov    QWORD PTR [rbp-0x40],rax
  412a78:	jmp    4132d9 <_start@@Base+0xffc9>
  412a7d:	movabs rax,0xffff000000000000
  412a87:	and    rax,QWORD PTR [rbp-0x18]
  412a8b:	mov    rdx,rax
  412a8e:	movabs rax,0x7374000000000000
  412a98:	cmp    rdx,rax
  412a9b:	jne    412b2f <_start@@Base+0xf81f>
  412aa1:	mov    rax,QWORD PTR [rbp-0x40]
  412aa5:	mov    QWORD PTR [rbp-0x10],rax
  412aa9:	mov    rdx,QWORD PTR [rbp-0x48]
  412aad:	mov    rsi,QWORD PTR [rbp-0x10]
  412ab1:	mov    rax,QWORD PTR [rbp-0x38]
  412ab5:	mov    ecx,0x2
  412aba:	mov    rdi,rax
  412abd:	call   4042cc <_start@@Base+0xfbc>
  412ac2:	mov    QWORD PTR [rbp-0x40],rax
  412ac6:	mov    rax,QWORD PTR [rbp-0x10]
  412aca:	cmp    rax,QWORD PTR [rbp-0x40]
  412ace:	je     412b0f <_start@@Base+0xf7ff>
  412ad0:	mov    rdi,QWORD PTR [rbp-0x20]
  412ad4:	mov    rdx,QWORD PTR [rbp-0x48]
  412ad8:	mov    rsi,QWORD PTR [rbp-0x40]
  412adc:	mov    rax,QWORD PTR [rbp-0x38]
  412ae0:	sub    rsp,0x8
  412ae4:	lea    rcx,[rip+0xfffffffffffff7bf]        # 4122aa <_start@@Base+0xef9a>
  412aeb:	push   rcx
  412aec:	mov    r9,rdi
  412aef:	mov    r8d,0x3
  412af5:	mov    ecx,0x1
  412afa:	mov    rdi,rax
  412afd:	call   420e29 <flatcc_json_parser_union@@Base>
  412b02:	add    rsp,0x10
  412b06:	mov    QWORD PTR [rbp-0x40],rax
  412b0a:	jmp    4132d9 <_start@@Base+0xffc9>
  412b0f:	mov    rdx,QWORD PTR [rbp-0x48]
  412b13:	mov    rcx,QWORD PTR [rbp-0x40]
  412b17:	mov    rax,QWORD PTR [rbp-0x38]
  412b1b:	mov    rsi,rcx
  412b1e:	mov    rdi,rax
  412b21:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412b26:	mov    QWORD PTR [rbp-0x40],rax
  412b2a:	jmp    4132d9 <_start@@Base+0xffc9>
  412b2f:	mov    rdx,QWORD PTR [rbp-0x48]
  412b33:	mov    rcx,QWORD PTR [rbp-0x40]
  412b37:	mov    rax,QWORD PTR [rbp-0x38]
  412b3b:	mov    rsi,rcx
  412b3e:	mov    rdi,rax
  412b41:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412b46:	mov    QWORD PTR [rbp-0x40],rax
  412b4a:	jmp    4132d9 <_start@@Base+0xffc9>
  412b4f:	movabs rax,0x63616d656f5f7479
  412b59:	cmp    QWORD PTR [rbp-0x18],rax
  412b5d:	jne    412c55 <_start@@Base+0xf945>
  412b63:	add    QWORD PTR [rbp-0x40],0x8
  412b68:	mov    rdx,QWORD PTR [rbp-0x48]
  412b6c:	mov    rax,QWORD PTR [rbp-0x40]
  412b70:	mov    rsi,rdx
  412b73:	mov    rdi,rax
  412b76:	call   403dd5 <_start@@Base+0xac5>
  412b7b:	mov    QWORD PTR [rbp-0x18],rax
  412b7f:	movabs rax,0xffff000000000000
  412b89:	and    rax,QWORD PTR [rbp-0x18]
  412b8d:	mov    rdx,rax
  412b90:	movabs rax,0x7065000000000000
  412b9a:	cmp    rdx,rax
  412b9d:	jne    412c35 <_start@@Base+0xf925>
  412ba3:	mov    rax,QWORD PTR [rbp-0x40]
  412ba7:	mov    QWORD PTR [rbp-0x10],rax
  412bab:	mov    rdx,QWORD PTR [rbp-0x48]
  412baf:	mov    rsi,QWORD PTR [rbp-0x10]
  412bb3:	mov    rax,QWORD PTR [rbp-0x38]
  412bb7:	mov    ecx,0x2
  412bbc:	mov    rdi,rax
  412bbf:	call   4042cc <_start@@Base+0xfbc>
  412bc4:	mov    QWORD PTR [rbp-0x40],rax
  412bc8:	mov    rax,QWORD PTR [rbp-0x10]
  412bcc:	cmp    rax,QWORD PTR [rbp-0x40]
  412bd0:	je     412c15 <_start@@Base+0xf905>
  412bd2:	mov    rdi,QWORD PTR [rbp-0x20]
  412bd6:	mov    rdx,QWORD PTR [rbp-0x48]
  412bda:	mov    rsi,QWORD PTR [rbp-0x40]
  412bde:	mov    rax,QWORD PTR [rbp-0x38]
  412be2:	lea    rcx,[rip+0xfffffffffffff6c1]        # 4122aa <_start@@Base+0xef9a>
  412be9:	push   rcx
  412bea:	lea    rcx,[rip+0x17dcf]        # 42a9c0 <filename@@Base+0x8c0>
  412bf1:	push   rcx
  412bf2:	mov    r9,rdi
  412bf5:	mov    r8d,0x7
  412bfb:	mov    ecx,0x3
  412c00:	mov    rdi,rax
  412c03:	call   421006 <flatcc_json_parser_union_type@@Base>
  412c08:	add    rsp,0x10
  412c0c:	mov    QWORD PTR [rbp-0x40],rax
  412c10:	jmp    4132d9 <_start@@Base+0xffc9>
  412c15:	mov    rdx,QWORD PTR [rbp-0x48]
  412c19:	mov    rcx,QWORD PTR [rbp-0x40]
  412c1d:	mov    rax,QWORD PTR [rbp-0x38]
  412c21:	mov    rsi,rcx
  412c24:	mov    rdi,rax
  412c27:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412c2c:	mov    QWORD PTR [rbp-0x40],rax
  412c30:	jmp    4132d9 <_start@@Base+0xffc9>
  412c35:	mov    rdx,QWORD PTR [rbp-0x48]
  412c39:	mov    rcx,QWORD PTR [rbp-0x40]
  412c3d:	mov    rax,QWORD PTR [rbp-0x38]
  412c41:	mov    rsi,rcx
  412c44:	mov    rdi,rax
  412c47:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412c4c:	mov    QWORD PTR [rbp-0x40],rax
  412c50:	jmp    4132d9 <_start@@Base+0xffc9>
  412c55:	mov    rax,QWORD PTR [rbp-0x18]
  412c59:	and    rax,0xffffffffff000000
  412c5f:	mov    rdx,rax
  412c62:	movabs rax,0x63616d656f000000
  412c6c:	cmp    rdx,rax
  412c6f:	jne    412d03 <_start@@Base+0xf9f3>
  412c75:	mov    rax,QWORD PTR [rbp-0x40]
  412c79:	mov    QWORD PTR [rbp-0x10],rax
  412c7d:	mov    rdx,QWORD PTR [rbp-0x48]
  412c81:	mov    rsi,QWORD PTR [rbp-0x10]
  412c85:	mov    rax,QWORD PTR [rbp-0x38]
  412c89:	mov    ecx,0x5
  412c8e:	mov    rdi,rax
  412c91:	call   4042cc <_start@@Base+0xfbc>
  412c96:	mov    QWORD PTR [rbp-0x40],rax
  412c9a:	mov    rax,QWORD PTR [rbp-0x10]
  412c9e:	cmp    rax,QWORD PTR [rbp-0x40]
  412ca2:	je     412ce3 <_start@@Base+0xf9d3>
  412ca4:	mov    rdi,QWORD PTR [rbp-0x20]
  412ca8:	mov    rdx,QWORD PTR [rbp-0x48]
  412cac:	mov    rsi,QWORD PTR [rbp-0x40]
  412cb0:	mov    rax,QWORD PTR [rbp-0x38]
  412cb4:	sub    rsp,0x8
  412cb8:	lea    rcx,[rip+0xfffffffffffff5eb]        # 4122aa <_start@@Base+0xef9a>
  412cbf:	push   rcx
  412cc0:	mov    r9,rdi
  412cc3:	mov    r8d,0x7
  412cc9:	mov    ecx,0x3
  412cce:	mov    rdi,rax
  412cd1:	call   420e29 <flatcc_json_parser_union@@Base>
  412cd6:	add    rsp,0x10
  412cda:	mov    QWORD PTR [rbp-0x40],rax
  412cde:	jmp    4132d9 <_start@@Base+0xffc9>
  412ce3:	mov    rdx,QWORD PTR [rbp-0x48]
  412ce7:	mov    rcx,QWORD PTR [rbp-0x40]
  412ceb:	mov    rax,QWORD PTR [rbp-0x38]
  412cef:	mov    rsi,rcx
  412cf2:	mov    rdi,rax
  412cf5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412cfa:	mov    QWORD PTR [rbp-0x40],rax
  412cfe:	jmp    4132d9 <_start@@Base+0xffc9>
  412d03:	mov    rdx,QWORD PTR [rbp-0x48]
  412d07:	mov    rcx,QWORD PTR [rbp-0x40]
  412d0b:	mov    rax,QWORD PTR [rbp-0x38]
  412d0f:	mov    rsi,rcx
  412d12:	mov    rdi,rax
  412d15:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412d1a:	mov    QWORD PTR [rbp-0x40],rax
  412d1e:	jmp    4132d9 <_start@@Base+0xffc9>
  412d23:	movabs rax,0x6d61696e5f636860
  412d2d:	cmp    QWORD PTR [rbp-0x18],rax
  412d31:	ja     412f13 <_start@@Base+0xfc03>
  412d37:	movabs rax,0x6368617261637465
  412d41:	cmp    QWORD PTR [rbp-0x18],rax
  412d45:	jne    412ef3 <_start@@Base+0xfbe3>
  412d4b:	add    QWORD PTR [rbp-0x40],0x8
  412d50:	mov    rdx,QWORD PTR [rbp-0x48]
  412d54:	mov    rax,QWORD PTR [rbp-0x40]
  412d58:	mov    rsi,rdx
  412d5b:	mov    rdi,rax
  412d5e:	call   403dd5 <_start@@Base+0xac5>
  412d63:	mov    QWORD PTR [rbp-0x18],rax
  412d67:	mov    rax,QWORD PTR [rbp-0x18]
  412d6b:	mov    al,0x0
  412d6d:	mov    rdx,rax
  412d70:	movabs rax,0x72735f7479706500
  412d7a:	cmp    rdx,rax
  412d7d:	jne    412e21 <_start@@Base+0xfb11>
  412d83:	mov    rax,QWORD PTR [rbp-0x40]
  412d87:	mov    QWORD PTR [rbp-0x10],rax
  412d8b:	mov    rdx,QWORD PTR [rbp-0x48]
  412d8f:	mov    rsi,QWORD PTR [rbp-0x10]
  412d93:	mov    rax,QWORD PTR [rbp-0x38]
  412d97:	mov    ecx,0x7
  412d9c:	mov    rdi,rax
  412d9f:	call   4042cc <_start@@Base+0xfbc>
  412da4:	mov    QWORD PTR [rbp-0x40],rax
  412da8:	mov    rax,QWORD PTR [rbp-0x10]
  412dac:	cmp    rax,QWORD PTR [rbp-0x40]
  412db0:	je     412e01 <_start@@Base+0xfaf1>
  412db2:	mov    rdi,QWORD PTR [rbp-0x20]
  412db6:	mov    rdx,QWORD PTR [rbp-0x48]
  412dba:	mov    rsi,QWORD PTR [rbp-0x40]
  412dbe:	mov    rax,QWORD PTR [rbp-0x38]
  412dc2:	sub    rsp,0x8
  412dc6:	lea    rcx,[rip+0xfffffffffffff6a6]        # 412473 <_start@@Base+0xf163>
  412dcd:	push   rcx
  412dce:	lea    rcx,[rip+0xfffffffffffff4d5]        # 4122aa <_start@@Base+0xef9a>
  412dd5:	push   rcx
  412dd6:	lea    rcx,[rip+0x17c03]        # 42a9e0 <filename@@Base+0x8e0>
  412ddd:	push   rcx
  412dde:	mov    r9,rdi
  412de1:	mov    r8d,0x9
  412de7:	mov    ecx,0x4
  412dec:	mov    rdi,rax
  412def:	call   4215d5 <flatcc_json_parser_union_type_vector@@Base>
  412df4:	add    rsp,0x20
  412df8:	mov    QWORD PTR [rbp-0x40],rax
  412dfc:	jmp    4132d9 <_start@@Base+0xffc9>
  412e01:	mov    rdx,QWORD PTR [rbp-0x48]
  412e05:	mov    rcx,QWORD PTR [rbp-0x40]
  412e09:	mov    rax,QWORD PTR [rbp-0x38]
  412e0d:	mov    rsi,rcx
  412e10:	mov    rdi,rax
  412e13:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412e18:	mov    QWORD PTR [rbp-0x40],rax
  412e1c:	jmp    4132d9 <_start@@Base+0xffc9>
  412e21:	movabs rax,0xffff000000000000
  412e2b:	and    rax,QWORD PTR [rbp-0x18]
  412e2f:	mov    rdx,rax
  412e32:	movabs rax,0x7273000000000000
  412e3c:	cmp    rdx,rax
  412e3f:	jne    412ed3 <_start@@Base+0xfbc3>
  412e45:	mov    rax,QWORD PTR [rbp-0x40]
  412e49:	mov    QWORD PTR [rbp-0x10],rax
  412e4d:	mov    rdx,QWORD PTR [rbp-0x48]
  412e51:	mov    rsi,QWORD PTR [rbp-0x10]
  412e55:	mov    rax,QWORD PTR [rbp-0x38]
  412e59:	mov    ecx,0x2
  412e5e:	mov    rdi,rax
  412e61:	call   4042cc <_start@@Base+0xfbc>
  412e66:	mov    QWORD PTR [rbp-0x40],rax
  412e6a:	mov    rax,QWORD PTR [rbp-0x10]
  412e6e:	cmp    rax,QWORD PTR [rbp-0x40]
  412e72:	je     412eb3 <_start@@Base+0xfba3>
  412e74:	mov    rdi,QWORD PTR [rbp-0x20]
  412e78:	mov    rdx,QWORD PTR [rbp-0x48]
  412e7c:	mov    rsi,QWORD PTR [rbp-0x40]
  412e80:	mov    rax,QWORD PTR [rbp-0x38]
  412e84:	sub    rsp,0x8
  412e88:	lea    rcx,[rip+0xfffffffffffff41b]        # 4122aa <_start@@Base+0xef9a>
  412e8f:	push   rcx
  412e90:	mov    r9,rdi
  412e93:	mov    r8d,0x9
  412e99:	mov    ecx,0x4
  412e9e:	mov    rdi,rax
  412ea1:	call   421489 <flatcc_json_parser_union_vector@@Base>
  412ea6:	add    rsp,0x10
  412eaa:	mov    QWORD PTR [rbp-0x40],rax
  412eae:	jmp    4132d9 <_start@@Base+0xffc9>
  412eb3:	mov    rdx,QWORD PTR [rbp-0x48]
  412eb7:	mov    rcx,QWORD PTR [rbp-0x40]
  412ebb:	mov    rax,QWORD PTR [rbp-0x38]
  412ebf:	mov    rsi,rcx
  412ec2:	mov    rdi,rax
  412ec5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412eca:	mov    QWORD PTR [rbp-0x40],rax
  412ece:	jmp    4132d9 <_start@@Base+0xffc9>
  412ed3:	mov    rdx,QWORD PTR [rbp-0x48]
  412ed7:	mov    rcx,QWORD PTR [rbp-0x40]
  412edb:	mov    rax,QWORD PTR [rbp-0x38]
  412edf:	mov    rsi,rcx
  412ee2:	mov    rdi,rax
  412ee5:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412eea:	mov    QWORD PTR [rbp-0x40],rax
  412eee:	jmp    4132d9 <_start@@Base+0xffc9>
  412ef3:	mov    rdx,QWORD PTR [rbp-0x48]
  412ef7:	mov    rcx,QWORD PTR [rbp-0x40]
  412efb:	mov    rax,QWORD PTR [rbp-0x38]
  412eff:	mov    rsi,rcx
  412f02:	mov    rdi,rax
  412f05:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  412f0a:	mov    QWORD PTR [rbp-0x40],rax
  412f0e:	jmp    4132d9 <_start@@Base+0xffc9>
  412f13:	movabs rax,0x6d61696e5f636861
  412f1d:	cmp    QWORD PTR [rbp-0x18],rax
  412f21:	jne    413115 <_start@@Base+0xfe05>
  412f27:	add    QWORD PTR [rbp-0x40],0x8
  412f2c:	mov    rdx,QWORD PTR [rbp-0x48]
  412f30:	mov    rax,QWORD PTR [rbp-0x40]
  412f34:	mov    rsi,rdx
  412f37:	mov    rdi,rax
  412f3a:	call   403dd5 <_start@@Base+0xac5>
  412f3f:	mov    QWORD PTR [rbp-0x18],rax
  412f43:	movabs rax,0x7261637465725f74
  412f4d:	cmp    QWORD PTR [rbp-0x18],rax
  412f51:	jne    413049 <_start@@Base+0xfd39>
  412f57:	add    QWORD PTR [rbp-0x40],0x8
  412f5c:	mov    rdx,QWORD PTR [rbp-0x48]
  412f60:	mov    rax,QWORD PTR [rbp-0x40]
  412f64:	mov    rsi,rdx
  412f67:	mov    rdi,rax
  412f6a:	call   403dd5 <_start@@Base+0xac5>
  412f6f:	mov    QWORD PTR [rbp-0x18],rax
  412f73:	movabs rax,0xffffff0000000000
  412f7d:	and    rax,QWORD PTR [rbp-0x18]
  412f81:	mov    rdx,rax
  412f84:	movabs rax,0x7970650000000000
  412f8e:	cmp    rdx,rax
  412f91:	jne    413029 <_start@@Base+0xfd19>
  412f97:	mov    rax,QWORD PTR [rbp-0x40]
  412f9b:	mov    QWORD PTR [rbp-0x10],rax
  412f9f:	mov    rdx,QWORD PTR [rbp-0x48]
  412fa3:	mov    rsi,QWORD PTR [rbp-0x10]
  412fa7:	mov    rax,QWORD PTR [rbp-0x38]
  412fab:	mov    ecx,0x3
  412fb0:	mov    rdi,rax
  412fb3:	call   4042cc <_start@@Base+0xfbc>
  412fb8:	mov    QWORD PTR [rbp-0x40],rax
  412fbc:	mov    rax,QWORD PTR [rbp-0x10]
  412fc0:	cmp    rax,QWORD PTR [rbp-0x40]
  412fc4:	je     413009 <_start@@Base+0xfcf9>
  412fc6:	mov    rdi,QWORD PTR [rbp-0x20]
  412fca:	mov    rdx,QWORD PTR [rbp-0x48]
  412fce:	mov    rsi,QWORD PTR [rbp-0x40]
  412fd2:	mov    rax,QWORD PTR [rbp-0x38]
  412fd6:	lea    rcx,[rip+0xfffffffffffff2cd]        # 4122aa <_start@@Base+0xef9a>
  412fdd:	push   rcx
  412fde:	lea    rcx,[rip+0x17a1b]        # 42aa00 <filename@@Base+0x900>
  412fe5:	push   rcx
  412fe6:	mov    r9,rdi
  412fe9:	mov    r8d,0x1
  412fef:	mov    ecx,0x0
  412ff4:	mov    rdi,rax
  412ff7:	call   421006 <flatcc_json_parser_union_type@@Base>
  412ffc:	add    rsp,0x10
  413000:	mov    QWORD PTR [rbp-0x40],rax
  413004:	jmp    4132d9 <_start@@Base+0xffc9>
  413009:	mov    rdx,QWORD PTR [rbp-0x48]
  41300d:	mov    rcx,QWORD PTR [rbp-0x40]
  413011:	mov    rax,QWORD PTR [rbp-0x38]
  413015:	mov    rsi,rcx
  413018:	mov    rdi,rax
  41301b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  413020:	mov    QWORD PTR [rbp-0x40],rax
  413024:	jmp    4132d9 <_start@@Base+0xffc9>
  413029:	mov    rdx,QWORD PTR [rbp-0x48]
  41302d:	mov    rcx,QWORD PTR [rbp-0x40]
  413031:	mov    rax,QWORD PTR [rbp-0x38]
  413035:	mov    rsi,rcx
  413038:	mov    rdi,rax
  41303b:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  413040:	mov    QWORD PTR [rbp-0x40],rax
  413044:	jmp    4132d9 <_start@@Base+0xffc9>
  413049:	mov    rax,QWORD PTR [rbp-0x18]
  41304d:	mov    ax,0x0
  413051:	mov    rdx,rax
  413054:	movabs rax,0x7261637465720000
  41305e:	cmp    rdx,rax
  413061:	jne    4130f5 <_start@@Base+0xfde5>
  413067:	mov    rax,QWORD PTR [rbp-0x40]
  41306b:	mov    QWORD PTR [rbp-0x10],rax
  41306f:	mov    rdx,QWORD PTR [rbp-0x48]
  413073:	mov    rsi,QWORD PTR [rbp-0x10]
  413077:	mov    rax,QWORD PTR [rbp-0x38]
  41307b:	mov    ecx,0x6
  413080:	mov    rdi,rax
  413083:	call   4042cc <_start@@Base+0xfbc>
  413088:	mov    QWORD PTR [rbp-0x40],rax
  41308c:	mov    rax,QWORD PTR [rbp-0x10]
  413090:	cmp    rax,QWORD PTR [rbp-0x40]
  413094:	je     4130d5 <_start@@Base+0xfdc5>
  413096:	mov    rdi,QWORD PTR [rbp-0x20]
  41309a:	mov    rdx,QWORD PTR [rbp-0x48]
  41309e:	mov    rsi,QWORD PTR [rbp-0x40]
  4130a2:	mov    rax,QWORD PTR [rbp-0x38]
  4130a6:	sub    rsp,0x8
  4130aa:	lea    rcx,[rip+0xfffffffffffff1f9]        # 4122aa <_start@@Base+0xef9a>
  4130b1:	push   rcx
  4130b2:	mov    r9,rdi
  4130b5:	mov    r8d,0x1
  4130bb:	mov    ecx,0x0
  4130c0:	mov    rdi,rax
  4130c3:	call   420e29 <flatcc_json_parser_union@@Base>
  4130c8:	add    rsp,0x10
  4130cc:	mov    QWORD PTR [rbp-0x40],rax
  4130d0:	jmp    4132d9 <_start@@Base+0xffc9>
  4130d5:	mov    rdx,QWORD PTR [rbp-0x48]
  4130d9:	mov    rcx,QWORD PTR [rbp-0x40]
  4130dd:	mov    rax,QWORD PTR [rbp-0x38]
  4130e1:	mov    rsi,rcx
  4130e4:	mov    rdi,rax
  4130e7:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4130ec:	mov    QWORD PTR [rbp-0x40],rax
  4130f0:	jmp    4132d9 <_start@@Base+0xffc9>
  4130f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4130f9:	mov    rcx,QWORD PTR [rbp-0x40]
  4130fd:	mov    rax,QWORD PTR [rbp-0x38]
  413101:	mov    rsi,rcx
  413104:	mov    rdi,rax
  413107:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  41310c:	mov    QWORD PTR [rbp-0x40],rax
  413110:	jmp    4132d9 <_start@@Base+0xffc9>
  413115:	movabs rax,0x736964655f6b6963
  41311f:	cmp    QWORD PTR [rbp-0x18],rax
  413123:	jne    4132be <_start@@Base+0xffae>
  413129:	add    QWORD PTR [rbp-0x40],0x8
  41312e:	mov    rdx,QWORD PTR [rbp-0x48]
  413132:	mov    rax,QWORD PTR [rbp-0x40]
  413136:	mov    rsi,rdx
  413139:	mov    rdi,rax
  41313c:	call   403dd5 <_start@@Base+0xac5>
  413141:	mov    QWORD PTR [rbp-0x18],rax
  413145:	mov    rax,QWORD PTR [rbp-0x18]
  413149:	mov    ax,0x0
  41314d:	mov    rdx,rax
  413150:	movabs rax,0x6b5f747970650000
  41315a:	cmp    rdx,rax
  41315d:	jne    4131f5 <_start@@Base+0xfee5>
  413163:	mov    rax,QWORD PTR [rbp-0x40]
  413167:	mov    QWORD PTR [rbp-0x10],rax
  41316b:	mov    rdx,QWORD PTR [rbp-0x48]
  41316f:	mov    rsi,QWORD PTR [rbp-0x10]
  413173:	mov    rax,QWORD PTR [rbp-0x38]
  413177:	mov    ecx,0x6
  41317c:	mov    rdi,rax
  41317f:	call   4042cc <_start@@Base+0xfbc>
  413184:	mov    QWORD PTR [rbp-0x40],rax
  413188:	mov    rax,QWORD PTR [rbp-0x10]
  41318c:	cmp    rax,QWORD PTR [rbp-0x40]
  413190:	je     4131d5 <_start@@Base+0xfec5>
  413192:	mov    rdi,QWORD PTR [rbp-0x20]
  413196:	mov    rdx,QWORD PTR [rbp-0x48]
  41319a:	mov    rsi,QWORD PTR [rbp-0x40]
  41319e:	mov    rax,QWORD PTR [rbp-0x38]
  4131a2:	lea    rcx,[rip+0xfffffffffffff101]        # 4122aa <_start@@Base+0xef9a>
  4131a9:	push   rcx
  4131aa:	lea    rcx,[rip+0x1786f]        # 42aa20 <filename@@Base+0x920>
  4131b1:	push   rcx
  4131b2:	mov    r9,rdi
  4131b5:	mov    r8d,0x5
  4131bb:	mov    ecx,0x2
  4131c0:	mov    rdi,rax
  4131c3:	call   421006 <flatcc_json_parser_union_type@@Base>
  4131c8:	add    rsp,0x10
  4131cc:	mov    QWORD PTR [rbp-0x40],rax
  4131d0:	jmp    4132d9 <_start@@Base+0xffc9>
  4131d5:	mov    rdx,QWORD PTR [rbp-0x48]
  4131d9:	mov    rcx,QWORD PTR [rbp-0x40]
  4131dd:	mov    rax,QWORD PTR [rbp-0x38]
  4131e1:	mov    rsi,rcx
  4131e4:	mov    rdi,rax
  4131e7:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4131ec:	mov    QWORD PTR [rbp-0x40],rax
  4131f0:	jmp    4132d9 <_start@@Base+0xffc9>
  4131f5:	movabs rax,0xff00000000000000
  4131ff:	and    rax,QWORD PTR [rbp-0x18]
  413203:	mov    rdx,rax
  413206:	movabs rax,0x6b00000000000000
  413210:	cmp    rdx,rax
  413213:	jne    4132a1 <_start@@Base+0xff91>
  413219:	mov    rax,QWORD PTR [rbp-0x40]
  41321d:	mov    QWORD PTR [rbp-0x10],rax
  413221:	mov    rdx,QWORD PTR [rbp-0x48]
  413225:	mov    rsi,QWORD PTR [rbp-0x10]
  413229:	mov    rax,QWORD PTR [rbp-0x38]
  41322d:	mov    ecx,0x1
  413232:	mov    rdi,rax
  413235:	call   4042cc <_start@@Base+0xfbc>
  41323a:	mov    QWORD PTR [rbp-0x40],rax
  41323e:	mov    rax,QWORD PTR [rbp-0x10]
  413242:	cmp    rax,QWORD PTR [rbp-0x40]
  413246:	je     413284 <_start@@Base+0xff74>
  413248:	mov    rdi,QWORD PTR [rbp-0x20]
  41324c:	mov    rdx,QWORD PTR [rbp-0x48]
  413250:	mov    rsi,QWORD PTR [rbp-0x40]
  413254:	mov    rax,QWORD PTR [rbp-0x38]
  413258:	sub    rsp,0x8
  41325c:	lea    rcx,[rip+0xfffffffffffff047]        # 4122aa <_start@@Base+0xef9a>
  413263:	push   rcx
  413264:	mov    r9,rdi
  413267:	mov    r8d,0x5
  41326d:	mov    ecx,0x2
  413272:	mov    rdi,rax
  413275:	call   420e29 <flatcc_json_parser_union@@Base>
  41327a:	add    rsp,0x10
  41327e:	mov    QWORD PTR [rbp-0x40],rax
  413282:	jmp    4132d9 <_start@@Base+0xffc9>
  413284:	mov    rdx,QWORD PTR [rbp-0x48]
  413288:	mov    rcx,QWORD PTR [rbp-0x40]
  41328c:	mov    rax,QWORD PTR [rbp-0x38]
  413290:	mov    rsi,rcx
  413293:	mov    rdi,rax
  413296:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  41329b:	mov    QWORD PTR [rbp-0x40],rax
  41329f:	jmp    4132d9 <_start@@Base+0xffc9>
  4132a1:	mov    rdx,QWORD PTR [rbp-0x48]
  4132a5:	mov    rcx,QWORD PTR [rbp-0x40]
  4132a9:	mov    rax,QWORD PTR [rbp-0x38]
  4132ad:	mov    rsi,rcx
  4132b0:	mov    rdi,rax
  4132b3:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4132b8:	mov    QWORD PTR [rbp-0x40],rax
  4132bc:	jmp    4132d9 <_start@@Base+0xffc9>
  4132be:	mov    rdx,QWORD PTR [rbp-0x48]
  4132c2:	mov    rcx,QWORD PTR [rbp-0x40]
  4132c6:	mov    rax,QWORD PTR [rbp-0x38]
  4132ca:	mov    rsi,rcx
  4132cd:	mov    rdi,rax
  4132d0:	call   41fb85 <flatcc_json_parser_unmatched_symbol@@Base>
  4132d5:	mov    QWORD PTR [rbp-0x40],rax
  4132d9:	lea    rcx,[rbp-0x24]
  4132dd:	mov    rdx,QWORD PTR [rbp-0x48]
  4132e1:	mov    rsi,QWORD PTR [rbp-0x40]
  4132e5:	mov    rax,QWORD PTR [rbp-0x38]
  4132e9:	mov    rdi,rax
  4132ec:	call   403f93 <_start@@Base+0xc83>
  4132f1:	mov    QWORD PTR [rbp-0x40],rax
  4132f5:	mov    eax,DWORD PTR [rbp-0x24]
  4132f8:	test   eax,eax
  4132fa:	jne    412959 <_start@@Base+0xf649>
  413300:	mov    rax,QWORD PTR [rbp-0x38]
  413304:	mov    eax,DWORD PTR [rax+0x20]
  413307:	test   eax,eax
  413309:	jne    413354 <_start@@Base+0x10044>
  41330b:	mov    rcx,QWORD PTR [rbp-0x20]
  41330f:	mov    rdx,QWORD PTR [rbp-0x48]
  413313:	mov    rsi,QWORD PTR [rbp-0x40]
  413317:	mov    rax,QWORD PTR [rbp-0x38]
  41331b:	mov    rdi,rax
  41331e:	call   420dad <flatcc_json_parser_finalize_unions@@Base>
  413323:	mov    QWORD PTR [rbp-0x40],rax
  413327:	mov    rax,QWORD PTR [rbp-0x38]
  41332b:	mov    rax,QWORD PTR [rax]
  41332e:	mov    rdi,rax
  413331:	call   41868f <flatcc_builder_end_table@@Base>
  413336:	mov    edx,eax
  413338:	mov    rax,QWORD PTR [rbp-0x50]
  41333c:	mov    DWORD PTR [rax],edx
  41333e:	mov    rax,QWORD PTR [rbp-0x50]
  413342:	mov    eax,DWORD PTR [rax]
  413344:	test   eax,eax
  413346:	je     413357 <_start@@Base+0x10047>
  413348:	mov    rax,QWORD PTR [rbp-0x40]
  41334c:	jmp    413371 <_start@@Base+0x10061>
  41334e:	nop
  41334f:	jmp    413358 <_start@@Base+0x10048>
  413351:	nop
  413352:	jmp    413358 <_start@@Base+0x10048>
  413354:	nop
  413355:	jmp    413358 <_start@@Base+0x10048>
  413357:	nop
  413358:	mov    rdx,QWORD PTR [rbp-0x48]
  41335c:	mov    rsi,QWORD PTR [rbp-0x40]
  413360:	mov    rax,QWORD PTR [rbp-0x38]
  413364:	mov    ecx,0x21
  413369:	mov    rdi,rax
  41336c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  413371:	mov    rdi,QWORD PTR [rbp-0x8]
  413375:	xor    rdi,QWORD PTR fs:0x28
  41337e:	je     413385 <_start@@Base+0x10075>
  413380:	call   403200 <__stack_chk_fail@plt>
  413385:	leave  
  413386:	ret    
  413387:	endbr64 
  41338b:	push   rbp
  41338c:	mov    rbp,rsp
  41338f:	mov    QWORD PTR [rbp-0x8],rdi
  413393:	mov    QWORD PTR [rbp-0x10],rsi
  413397:	mov    QWORD PTR [rbp-0x18],rdx
  41339b:	mov    QWORD PTR [rbp-0x20],rcx
  41339f:	mov    QWORD PTR [rbp-0x28],r8
  4133a3:	mov    QWORD PTR [rbp-0x30],r9
  4133a7:	mov    rax,QWORD PTR [rbp-0x10]
  4133ab:	pop    rbp
  4133ac:	ret    
  4133ad:	endbr64 
  4133b1:	push   rbp
  4133b2:	mov    rbp,rsp
  4133b5:	sub    rsp,0x50
  4133b9:	mov    QWORD PTR [rbp-0x28],rdi
  4133bd:	mov    QWORD PTR [rbp-0x30],rsi
  4133c1:	mov    QWORD PTR [rbp-0x38],rdx
  4133c5:	mov    QWORD PTR [rbp-0x40],rcx
  4133c9:	mov    QWORD PTR [rbp-0x48],r8
  4133cd:	mov    QWORD PTR [rbp-0x50],r9
  4133d1:	mov    rax,QWORD PTR [rbp-0x30]
  4133d5:	mov    QWORD PTR [rbp-0x18],rax
  4133d9:	mov    rdx,QWORD PTR [rbp-0x38]
  4133dd:	mov    rax,QWORD PTR [rbp-0x30]
  4133e1:	mov    rsi,rdx
  4133e4:	mov    rdi,rax
  4133e7:	call   403dd5 <_start@@Base+0xac5>
  4133ec:	mov    QWORD PTR [rbp-0x10],rax
  4133f0:	movabs rax,0x6865785f656e756c
  4133fa:	cmp    QWORD PTR [rbp-0x10],rax
  4133fe:	ja     4135bb <_start@@Base+0x102ab>
  413404:	movabs rax,0x436f6c6f71ffffff
  41340e:	cmp    QWORD PTR [rbp-0x10],rax
  413412:	ja     4134a8 <_start@@Base+0x10198>
  413418:	movabs rax,0xffffff0000000000
  413422:	and    rax,QWORD PTR [rbp-0x10]
  413426:	mov    rdx,rax
  413429:	movabs rax,0x416e790000000000
  413433:	cmp    rdx,rax
  413436:	jne    41349f <_start@@Base+0x1018f>
  413438:	mov    rax,QWORD PTR [rbp-0x30]
  41343c:	mov    QWORD PTR [rbp-0x8],rax
  413440:	mov    rdx,QWORD PTR [rbp-0x38]
  413444:	mov    rsi,QWORD PTR [rbp-0x8]
  413448:	mov    rax,QWORD PTR [rbp-0x28]
  41344c:	mov    ecx,0x3
  413451:	mov    rdi,rax
  413454:	call   403e19 <_start@@Base+0xb09>
  413459:	mov    QWORD PTR [rbp-0x30],rax
  41345d:	mov    rax,QWORD PTR [rbp-0x30]
  413461:	cmp    rax,QWORD PTR [rbp-0x8]
  413465:	je     413496 <_start@@Base+0x10186>
  413467:	mov    r8,QWORD PTR [rbp-0x50]
  41346b:	mov    rdi,QWORD PTR [rbp-0x48]
  41346f:	mov    rcx,QWORD PTR [rbp-0x40]
  413473:	mov    rdx,QWORD PTR [rbp-0x38]
  413477:	mov    rsi,QWORD PTR [rbp-0x30]
  41347b:	mov    rax,QWORD PTR [rbp-0x28]
  41347f:	mov    r9,r8
  413482:	mov    r8,rdi
  413485:	mov    rdi,rax
  413488:	call   407d2a <_start@@Base+0x4a1a>
  41348d:	mov    QWORD PTR [rbp-0x30],rax
  413491:	jmp    413812 <_start@@Base+0x10502>
  413496:	mov    rax,QWORD PTR [rbp-0x18]
  41349a:	jmp    413816 <_start@@Base+0x10506>
  41349f:	mov    rax,QWORD PTR [rbp-0x18]
  4134a3:	jmp    413816 <_start@@Base+0x10506>
  4134a8:	movabs rax,0xffffff0000000000
  4134b2:	and    rax,QWORD PTR [rbp-0x10]
  4134b6:	mov    rdx,rax
  4134b9:	movabs rax,0x466f6f0000000000
  4134c3:	cmp    rdx,rax
  4134c6:	jne    41352f <_start@@Base+0x1021f>
  4134c8:	mov    rax,QWORD PTR [rbp-0x30]
  4134cc:	mov    QWORD PTR [rbp-0x8],rax
  4134d0:	mov    rdx,QWORD PTR [rbp-0x38]
  4134d4:	mov    rsi,QWORD PTR [rbp-0x8]
  4134d8:	mov    rax,QWORD PTR [rbp-0x28]
  4134dc:	mov    ecx,0x3
  4134e1:	mov    rdi,rax
  4134e4:	call   403e19 <_start@@Base+0xb09>
  4134e9:	mov    QWORD PTR [rbp-0x30],rax
  4134ed:	mov    rax,QWORD PTR [rbp-0x30]
  4134f1:	cmp    rax,QWORD PTR [rbp-0x8]
  4134f5:	je     413526 <_start@@Base+0x10216>
  4134f7:	mov    r8,QWORD PTR [rbp-0x50]
  4134fb:	mov    rdi,QWORD PTR [rbp-0x48]
  4134ff:	mov    rcx,QWORD PTR [rbp-0x40]
  413503:	mov    rdx,QWORD PTR [rbp-0x38]
  413507:	mov    rsi,QWORD PTR [rbp-0x30]
  41350b:	mov    rax,QWORD PTR [rbp-0x28]
  41350f:	mov    r9,r8
  413512:	mov    r8,rdi
  413515:	mov    rdi,rax
  413518:	call   407201 <_start@@Base+0x3ef1>
  41351d:	mov    QWORD PTR [rbp-0x30],rax
  413521:	jmp    413812 <_start@@Base+0x10502>
  413526:	mov    rax,QWORD PTR [rbp-0x18]
  41352a:	jmp    413816 <_start@@Base+0x10506>
  41352f:	mov    rax,QWORD PTR [rbp-0x10]
  413533:	and    rax,0xffffffffff000000
  413539:	mov    rdx,rax
  41353c:	movabs rax,0x436f6c6f72000000
  413546:	cmp    rdx,rax
  413549:	jne    4135b2 <_start@@Base+0x102a2>
  41354b:	mov    rax,QWORD PTR [rbp-0x30]
  41354f:	mov    QWORD PTR [rbp-0x8],rax
  413553:	mov    rdx,QWORD PTR [rbp-0x38]
  413557:	mov    rsi,QWORD PTR [rbp-0x8]
  41355b:	mov    rax,QWORD PTR [rbp-0x28]
  41355f:	mov    ecx,0x5
  413564:	mov    rdi,rax
  413567:	call   403e19 <_start@@Base+0xb09>
  41356c:	mov    QWORD PTR [rbp-0x30],rax
  413570:	mov    rax,QWORD PTR [rbp-0x30]
  413574:	cmp    rax,QWORD PTR [rbp-0x8]
  413578:	je     4135a9 <_start@@Base+0x10299>
  41357a:	mov    r8,QWORD PTR [rbp-0x50]
  41357e:	mov    rdi,QWORD PTR [rbp-0x48]
  413582:	mov    rcx,QWORD PTR [rbp-0x40]
  413586:	mov    rdx,QWORD PTR [rbp-0x38]
  41358a:	mov    rsi,QWORD PTR [rbp-0x30]
  41358e:	mov    rax,QWORD PTR [rbp-0x28]
  413592:	mov    r9,r8
  413595:	mov    r8,rdi
  413598:	mov    rdi,rax
  41359b:	call   40798e <_start@@Base+0x467e>
  4135a0:	mov    QWORD PTR [rbp-0x30],rax
  4135a4:	jmp    413812 <_start@@Base+0x10502>
  4135a9:	mov    rax,QWORD PTR [rbp-0x18]
  4135ad:	jmp    413816 <_start@@Base+0x10506>
  4135b2:	mov    rax,QWORD PTR [rbp-0x18]
  4135b6:	jmp    413816 <_start@@Base+0x10506>
  4135bb:	movabs rax,0x696e745f656e756c
  4135c5:	cmp    QWORD PTR [rbp-0x10],rax
  4135c9:	ja     41364f <_start@@Base+0x1033f>
  4135cf:	movabs rax,0x6865785f656e756d
  4135d9:	cmp    QWORD PTR [rbp-0x10],rax
  4135dd:	jne    413646 <_start@@Base+0x10336>
  4135df:	mov    rax,QWORD PTR [rbp-0x30]
  4135e3:	mov    QWORD PTR [rbp-0x8],rax
  4135e7:	mov    rdx,QWORD PTR [rbp-0x38]
  4135eb:	mov    rsi,QWORD PTR [rbp-0x8]
  4135ef:	mov    rax,QWORD PTR [rbp-0x28]
  4135f3:	mov    ecx,0x8
  4135f8:	mov    rdi,rax
  4135fb:	call   403e19 <_start@@Base+0xb09>
  413600:	mov    QWORD PTR [rbp-0x30],rax
  413604:	mov    rax,QWORD PTR [rbp-0x30]
  413608:	cmp    rax,QWORD PTR [rbp-0x8]
  41360c:	je     41363d <_start@@Base+0x1032d>
  41360e:	mov    r8,QWORD PTR [rbp-0x50]
  413612:	mov    rdi,QWORD PTR [rbp-0x48]
  413616:	mov    rcx,QWORD PTR [rbp-0x40]
  41361a:	mov    rdx,QWORD PTR [rbp-0x38]
  41361e:	mov    rsi,QWORD PTR [rbp-0x30]
  413622:	mov    rax,QWORD PTR [rbp-0x28]
  413626:	mov    r9,r8
  413629:	mov    r8,rdi
  41362c:	mov    rdi,rax
  41362f:	call   4077c9 <_start@@Base+0x44b9>
  413634:	mov    QWORD PTR [rbp-0x30],rax
  413638:	jmp    413812 <_start@@Base+0x10502>
  41363d:	mov    rax,QWORD PTR [rbp-0x18]
  413641:	jmp    413816 <_start@@Base+0x10506>
  413646:	mov    rax,QWORD PTR [rbp-0x18]
  41364a:	jmp    413816 <_start@@Base+0x10506>
  41364f:	movabs rax,0x6e65675f656e756c
  413659:	cmp    QWORD PTR [rbp-0x10],rax
  41365d:	ja     4136e3 <_start@@Base+0x103d3>
  413663:	movabs rax,0x696e745f656e756d
  41366d:	cmp    QWORD PTR [rbp-0x10],rax
  413671:	jne    4136da <_start@@Base+0x103ca>
  413673:	mov    rax,QWORD PTR [rbp-0x30]
  413677:	mov    QWORD PTR [rbp-0x8],rax
  41367b:	mov    rdx,QWORD PTR [rbp-0x38]
  41367f:	mov    rsi,QWORD PTR [rbp-0x8]
  413683:	mov    rax,QWORD PTR [rbp-0x28]
  413687:	mov    ecx,0x8
  41368c:	mov    rdi,rax
  41368f:	call   403e19 <_start@@Base+0xb09>
  413694:	mov    QWORD PTR [rbp-0x30],rax
  413698:	mov    rax,QWORD PTR [rbp-0x30]
  41369c:	cmp    rax,QWORD PTR [rbp-0x8]
  4136a0:	je     4136d1 <_start@@Base+0x103c1>
  4136a2:	mov    r8,QWORD PTR [rbp-0x50]
  4136a6:	mov    rdi,QWORD PTR [rbp-0x48]
  4136aa:	mov    rcx,QWORD PTR [rbp-0x40]
  4136ae:	mov    rdx,QWORD PTR [rbp-0x38]
  4136b2:	mov    rsi,QWORD PTR [rbp-0x30]
  4136b6:	mov    rax,QWORD PTR [rbp-0x28]
  4136ba:	mov    r9,r8
  4136bd:	mov    r8,rdi
  4136c0:	mov    rdi,rax
  4136c3:	call   407576 <_start@@Base+0x4266>
  4136c8:	mov    QWORD PTR [rbp-0x30],rax
  4136cc:	jmp    413812 <_start@@Base+0x10502>
  4136d1:	mov    rax,QWORD PTR [rbp-0x18]
  4136d5:	jmp    413816 <_start@@Base+0x10506>
  4136da:	mov    rax,QWORD PTR [rbp-0x18]
  4136de:	jmp    413816 <_start@@Base+0x10506>
  4136e3:	movabs rax,0x6e65675f656e756d
  4136ed:	cmp    QWORD PTR [rbp-0x10],rax
  4136f1:	jne    413751 <_start@@Base+0x10441>
  4136f3:	mov    rax,QWORD PTR [rbp-0x30]
  4136f7:	mov    QWORD PTR [rbp-0x8],rax
  4136fb:	mov    rdx,QWORD PTR [rbp-0x38]
  4136ff:	mov    rsi,QWORD PTR [rbp-0x8]
  413703:	mov    rax,QWORD PTR [rbp-0x28]
  413707:	mov    ecx,0x8
  41370c:	mov    rdi,rax
  41370f:	call   403e19 <_start@@Base+0xb09>
  413714:	mov    QWORD PTR [rbp-0x30],rax
  413718:	mov    rax,QWORD PTR [rbp-0x30]
  41371c:	cmp    rax,QWORD PTR [rbp-0x8]
  413720:	je     413754 <_start@@Base+0x10444>
  413722:	mov    r8,QWORD PTR [rbp-0x50]
  413726:	mov    rdi,QWORD PTR [rbp-0x48]
  41372a:	mov    rcx,QWORD PTR [rbp-0x40]
  41372e:	mov    rdx,QWORD PTR [rbp-0x38]
  413732:	mov    rsi,QWORD PTR [rbp-0x30]
  413736:	mov    rax,QWORD PTR [rbp-0x28]
  41373a:	mov    r9,r8
  41373d:	mov    r8,rdi
  413740:	mov    rdi,rax
  413743:	call   4073ab <_start@@Base+0x409b>
  413748:	mov    QWORD PTR [rbp-0x30],rax
  41374c:	jmp    413812 <_start@@Base+0x10502>
  413751:	nop
  413752:	jmp    413755 <_start@@Base+0x10445>
  413754:	nop
  413755:	movabs rax,0x6e6f74656d707479
  41375f:	cmp    QWORD PTR [rbp-0x10],rax
  413763:	jne    41380c <_start@@Base+0x104fc>
  413769:	add    QWORD PTR [rbp-0x30],0x8
  41376e:	mov    rdx,QWORD PTR [rbp-0x38]
  413772:	mov    rax,QWORD PTR [rbp-0x30]
  413776:	mov    rsi,rdx
  413779:	mov    rdi,rax
  41377c:	call   403dd5 <_start@@Base+0xac5>
  413781:	mov    QWORD PTR [rbp-0x10],rax
  413785:	movabs rax,0xffffffff00000000
  41378f:	and    rax,QWORD PTR [rbp-0x10]
  413793:	mov    rdx,rax
  413796:	movabs rax,0x656e756d00000000
  4137a0:	cmp    rdx,rax
  4137a3:	jne    413806 <_start@@Base+0x104f6>
  4137a5:	mov    rax,QWORD PTR [rbp-0x30]
  4137a9:	mov    QWORD PTR [rbp-0x8],rax
  4137ad:	mov    rdx,QWORD PTR [rbp-0x38]
  4137b1:	mov    rsi,QWORD PTR [rbp-0x8]
  4137b5:	mov    rax,QWORD PTR [rbp-0x28]
  4137b9:	mov    ecx,0x4
  4137be:	mov    rdi,rax
  4137c1:	call   403e19 <_start@@Base+0xb09>
  4137c6:	mov    QWORD PTR [rbp-0x30],rax
  4137ca:	mov    rax,QWORD PTR [rbp-0x30]
  4137ce:	cmp    rax,QWORD PTR [rbp-0x8]
  4137d2:	je     413800 <_start@@Base+0x104f0>
  4137d4:	mov    r8,QWORD PTR [rbp-0x50]
  4137d8:	mov    rdi,QWORD PTR [rbp-0x48]
  4137dc:	mov    rcx,QWORD PTR [rbp-0x40]
  4137e0:	mov    rdx,QWORD PTR [rbp-0x38]
  4137e4:	mov    rsi,QWORD PTR [rbp-0x30]
  4137e8:	mov    rax,QWORD PTR [rbp-0x28]
  4137ec:	mov    r9,r8
  4137ef:	mov    r8,rdi
  4137f2:	mov    rdi,rax
  4137f5:	call   408891 <_start@@Base+0x5581>
  4137fa:	mov    QWORD PTR [rbp-0x30],rax
  4137fe:	jmp    413812 <_start@@Base+0x10502>
  413800:	mov    rax,QWORD PTR [rbp-0x18]
  413804:	jmp    413816 <_start@@Base+0x10506>
  413806:	mov    rax,QWORD PTR [rbp-0x18]
  41380a:	jmp    413816 <_start@@Base+0x10506>
  41380c:	mov    rax,QWORD PTR [rbp-0x18]
  413810:	jmp    413816 <_start@@Base+0x10506>
  413812:	mov    rax,QWORD PTR [rbp-0x30]
  413816:	leave  
  413817:	ret    
  413818:	endbr64 
  41381c:	push   rbp
  41381d:	mov    rbp,rsp
  413820:	mov    QWORD PTR [rbp-0x8],rdi
  413824:	mov    QWORD PTR [rbp-0x10],rsi
  413828:	mov    QWORD PTR [rbp-0x18],rdx
  41382c:	mov    QWORD PTR [rbp-0x20],rcx
  413830:	mov    QWORD PTR [rbp-0x28],r8
  413834:	mov    QWORD PTR [rbp-0x30],r9
  413838:	mov    rax,QWORD PTR [rbp-0x10]
  41383c:	pop    rbp
  41383d:	ret    
  41383e:	endbr64 
  413842:	push   rbp
  413843:	mov    rbp,rsp
  413846:	mov    QWORD PTR [rbp-0x8],rdi
  41384a:	mov    QWORD PTR [rbp-0x10],rsi
  41384e:	mov    QWORD PTR [rbp-0x18],rdx
  413852:	mov    QWORD PTR [rbp-0x20],rcx
  413856:	mov    QWORD PTR [rbp-0x28],r8
  41385a:	mov    QWORD PTR [rbp-0x30],r9
  41385e:	mov    rax,QWORD PTR [rbp-0x10]
  413862:	pop    rbp
  413863:	ret    
  413864:	endbr64 
  413868:	push   rbp
  413869:	mov    rbp,rsp
  41386c:	sub    rsp,0x50
  413870:	mov    QWORD PTR [rbp-0x28],rdi
  413874:	mov    QWORD PTR [rbp-0x30],rsi
  413878:	mov    QWORD PTR [rbp-0x38],rdx
  41387c:	mov    QWORD PTR [rbp-0x40],rcx
  413880:	mov    QWORD PTR [rbp-0x48],r8
  413884:	mov    QWORD PTR [rbp-0x50],r9
  413888:	mov    rax,QWORD PTR [rbp-0x30]
  41388c:	mov    QWORD PTR [rbp-0x18],rax
  413890:	mov    rdx,QWORD PTR [rbp-0x38]
  413894:	mov    rax,QWORD PTR [rbp-0x30]
  413898:	mov    rsi,rdx
  41389b:	mov    rdi,rax
  41389e:	call   403dd5 <_start@@Base+0xac5>
  4138a3:	mov    QWORD PTR [rbp-0x10],rax
  4138a7:	movabs rax,0x4368617261637465
  4138b1:	cmp    QWORD PTR [rbp-0x10],rax
  4138b5:	jne    413962 <_start@@Base+0x10652>
  4138bb:	add    QWORD PTR [rbp-0x30],0x8
  4138c0:	mov    rdx,QWORD PTR [rbp-0x38]
  4138c4:	mov    rax,QWORD PTR [rbp-0x30]
  4138c8:	mov    rsi,rdx
  4138cb:	mov    rdi,rax
  4138ce:	call   403dd5 <_start@@Base+0xac5>
  4138d3:	mov    QWORD PTR [rbp-0x10],rax
  4138d7:	movabs rax,0xff00000000000000
  4138e1:	and    rax,QWORD PTR [rbp-0x10]
  4138e5:	mov    rdx,rax
  4138e8:	movabs rax,0x7200000000000000
  4138f2:	cmp    rdx,rax
  4138f5:	jne    41395c <_start@@Base+0x1064c>
  4138f7:	mov    rax,QWORD PTR [rbp-0x30]
  4138fb:	mov    QWORD PTR [rbp-0x8],rax
  4138ff:	mov    rdx,QWORD PTR [rbp-0x38]
  413903:	mov    rsi,QWORD PTR [rbp-0x8]
  413907:	mov    rax,QWORD PTR [rbp-0x28]
  41390b:	mov    ecx,0x1
  413910:	mov    rdi,rax
  413913:	call   403e19 <_start@@Base+0xb09>
  413918:	mov    QWORD PTR [rbp-0x30],rax
  41391c:	mov    rax,QWORD PTR [rbp-0x30]
  413920:	cmp    rax,QWORD PTR [rbp-0x8]
  413924:	je     413956 <_start@@Base+0x10646>
  413926:	mov    r8,QWORD PTR [rbp-0x50]
  41392a:	mov    rdi,QWORD PTR [rbp-0x48]
  41392e:	mov    rcx,QWORD PTR [rbp-0x40]
  413932:	mov    rdx,QWORD PTR [rbp-0x38]
  413936:	mov    rsi,QWORD PTR [rbp-0x30]
  41393a:	mov    rax,QWORD PTR [rbp-0x28]
  41393e:	mov    r9,r8
  413941:	mov    r8,rdi
  413944:	mov    rdi,rax
  413947:	call   4124e9 <_start@@Base+0xf1d9>
  41394c:	mov    QWORD PTR [rbp-0x30],rax
  413950:	mov    rax,QWORD PTR [rbp-0x30]
  413954:	jmp    413966 <_start@@Base+0x10656>
  413956:	mov    rax,QWORD PTR [rbp-0x18]
  41395a:	jmp    413966 <_start@@Base+0x10656>
  41395c:	mov    rax,QWORD PTR [rbp-0x18]
  413960:	jmp    413966 <_start@@Base+0x10656>
  413962:	mov    rax,QWORD PTR [rbp-0x18]
  413966:	leave  
  413967:	ret    
  413968:	endbr64 
  41396c:	push   rbp
  41396d:	mov    rbp,rsp
  413970:	sub    rsp,0x50
  413974:	mov    QWORD PTR [rbp-0x28],rdi
  413978:	mov    QWORD PTR [rbp-0x30],rsi
  41397c:	mov    QWORD PTR [rbp-0x38],rdx
  413980:	mov    QWORD PTR [rbp-0x40],rcx
  413984:	mov    QWORD PTR [rbp-0x48],r8
  413988:	mov    QWORD PTR [rbp-0x50],r9
  41398c:	mov    rax,QWORD PTR [rbp-0x30]
  413990:	mov    QWORD PTR [rbp-0x18],rax
  413994:	mov    rdx,QWORD PTR [rbp-0x38]
  413998:	mov    rax,QWORD PTR [rbp-0x30]
  41399c:	mov    rsi,rdx
  41399f:	mov    rdi,rax
  4139a2:	call   403dd5 <_start@@Base+0xac5>
  4139a7:	mov    QWORD PTR [rbp-0x10],rax
  4139ab:	movabs rax,0x46726f6d496e636c
  4139b5:	cmp    QWORD PTR [rbp-0x10],rax
  4139b9:	jne    413a66 <_start@@Base+0x10756>
  4139bf:	add    QWORD PTR [rbp-0x30],0x8
  4139c4:	mov    rdx,QWORD PTR [rbp-0x38]
  4139c8:	mov    rax,QWORD PTR [rbp-0x30]
  4139cc:	mov    rsi,rdx
  4139cf:	mov    rdi,rax
  4139d2:	call   403dd5 <_start@@Base+0xac5>
  4139d7:	mov    QWORD PTR [rbp-0x10],rax
  4139db:	movabs rax,0xffffff0000000000
  4139e5:	and    rax,QWORD PTR [rbp-0x10]
  4139e9:	mov    rdx,rax
  4139ec:	movabs rax,0x7564650000000000
  4139f6:	cmp    rdx,rax
  4139f9:	jne    413a60 <_start@@Base+0x10750>
  4139fb:	mov    rax,QWORD PTR [rbp-0x30]
  4139ff:	mov    QWORD PTR [rbp-0x8],rax
  413a03:	mov    rdx,QWORD PTR [rbp-0x38]
  413a07:	mov    rsi,QWORD PTR [rbp-0x8]
  413a0b:	mov    rax,QWORD PTR [rbp-0x28]
  413a0f:	mov    ecx,0x3
  413a14:	mov    rdi,rax
  413a17:	call   403e19 <_start@@Base+0xb09>
  413a1c:	mov    QWORD PTR [rbp-0x30],rax
  413a20:	mov    rax,QWORD PTR [rbp-0x30]
  413a24:	cmp    rax,QWORD PTR [rbp-0x8]
  413a28:	je     413a5a <_start@@Base+0x1074a>
  413a2a:	mov    r8,QWORD PTR [rbp-0x50]
  413a2e:	mov    rdi,QWORD PTR [rbp-0x48]
  413a32:	mov    rcx,QWORD PTR [rbp-0x40]
  413a36:	mov    rdx,QWORD PTR [rbp-0x38]
  413a3a:	mov    rsi,QWORD PTR [rbp-0x30]
  413a3e:	mov    rax,QWORD PTR [rbp-0x28]
  413a42:	mov    r9,r8
  413a45:	mov    r8,rdi
  413a48:	mov    rdi,rax
  413a4b:	call   406289 <_start@@Base+0x2f79>
  413a50:	mov    QWORD PTR [rbp-0x30],rax
  413a54:	mov    rax,QWORD PTR [rbp-0x30]
  413a58:	jmp    413a6a <_start@@Base+0x1075a>
  413a5a:	mov    rax,QWORD PTR [rbp-0x18]
  413a5e:	jmp    413a6a <_start@@Base+0x1075a>
  413a60:	mov    rax,QWORD PTR [rbp-0x18]
  413a64:	jmp    413a6a <_start@@Base+0x1075a>
  413a66:	mov    rax,QWORD PTR [rbp-0x18]
  413a6a:	leave  
  413a6b:	ret    
  413a6c:	endbr64 
  413a70:	push   rbp
  413a71:	mov    rbp,rsp
  413a74:	sub    rsp,0x50
  413a78:	mov    QWORD PTR [rbp-0x28],rdi
  413a7c:	mov    QWORD PTR [rbp-0x30],rsi
  413a80:	mov    QWORD PTR [rbp-0x38],rdx
  413a84:	mov    QWORD PTR [rbp-0x40],rcx
  413a88:	mov    QWORD PTR [rbp-0x48],r8
  413a8c:	mov    QWORD PTR [rbp-0x50],r9
  413a90:	mov    rax,QWORD PTR [rbp-0x30]
  413a94:	mov    QWORD PTR [rbp-0x18],rax
  413a98:	mov    rdx,QWORD PTR [rbp-0x38]
  413a9c:	mov    rax,QWORD PTR [rbp-0x30]
  413aa0:	mov    rsi,rdx
  413aa3:	mov    rdi,rax
  413aa6:	call   403dd5 <_start@@Base+0xac5>
  413aab:	mov    QWORD PTR [rbp-0x10],rax
  413aaf:	movabs rax,0x4d7947616d652e44
  413ab9:	cmp    QWORD PTR [rbp-0x10],rax
  413abd:	ja     413bc5 <_start@@Base+0x108b5>
  413ac3:	movabs rax,0x46616e746173792e
  413acd:	cmp    QWORD PTR [rbp-0x10],rax
  413ad1:	jne    413bbc <_start@@Base+0x108ac>
  413ad7:	add    QWORD PTR [rbp-0x30],0x8
  413adc:	mov    rdx,QWORD PTR [rbp-0x38]
  413ae0:	mov    rax,QWORD PTR [rbp-0x30]
  413ae4:	mov    rsi,rdx
  413ae7:	mov    rdi,rax
  413aea:	call   403dd5 <_start@@Base+0xac5>
  413aef:	mov    QWORD PTR [rbp-0x10],rax
  413af3:	movabs rax,0x4368617261637465
  413afd:	cmp    QWORD PTR [rbp-0x10],rax
  413b01:	jne    413bb3 <_start@@Base+0x108a3>
  413b07:	add    QWORD PTR [rbp-0x30],0x8
  413b0c:	mov    rdx,QWORD PTR [rbp-0x38]
  413b10:	mov    rax,QWORD PTR [rbp-0x30]
  413b14:	mov    rsi,rdx
  413b17:	mov    rdi,rax
  413b1a:	call   403dd5 <_start@@Base+0xac5>
  413b1f:	mov    QWORD PTR [rbp-0x10],rax
  413b23:	movabs rax,0xff00000000000000
  413b2d:	and    rax,QWORD PTR [rbp-0x10]
  413b31:	mov    rdx,rax
  413b34:	movabs rax,0x7200000000000000
  413b3e:	cmp    rdx,rax
  413b41:	jne    413baa <_start@@Base+0x1089a>
  413b43:	mov    rax,QWORD PTR [rbp-0x30]
  413b47:	mov    QWORD PTR [rbp-0x8],rax
  413b4b:	mov    rdx,QWORD PTR [rbp-0x38]
  413b4f:	mov    rsi,QWORD PTR [rbp-0x8]
  413b53:	mov    rax,QWORD PTR [rbp-0x28]
  413b57:	mov    ecx,0x1
  413b5c:	mov    rdi,rax
  413b5f:	call   403e19 <_start@@Base+0xb09>
  413b64:	mov    QWORD PTR [rbp-0x30],rax
  413b68:	mov    rax,QWORD PTR [rbp-0x30]
  413b6c:	cmp    rax,QWORD PTR [rbp-0x8]
  413b70:	je     413ba1 <_start@@Base+0x10891>
  413b72:	mov    r8,QWORD PTR [rbp-0x50]
  413b76:	mov    rdi,QWORD PTR [rbp-0x48]
  413b7a:	mov    rcx,QWORD PTR [rbp-0x40]
  413b7e:	mov    rdx,QWORD PTR [rbp-0x38]
  413b82:	mov    rsi,QWORD PTR [rbp-0x30]
  413b86:	mov    rax,QWORD PTR [rbp-0x28]
  413b8a:	mov    r9,r8
  413b8d:	mov    r8,rdi
  413b90:	mov    rdi,rax
  413b93:	call   4124e9 <_start@@Base+0xf1d9>
  413b98:	mov    QWORD PTR [rbp-0x30],rax
  413b9c:	jmp    4142f4 <_start@@Base+0x10fe4>
  413ba1:	mov    rax,QWORD PTR [rbp-0x18]
  413ba5:	jmp    4142f8 <_start@@Base+0x10fe8>
  413baa:	mov    rax,QWORD PTR [rbp-0x18]
  413bae:	jmp    4142f8 <_start@@Base+0x10fe8>
  413bb3:	mov    rax,QWORD PTR [rbp-0x18]
  413bb7:	jmp    4142f8 <_start@@Base+0x10fe8>
  413bbc:	mov    rax,QWORD PTR [rbp-0x18]
  413bc0:	jmp    4142f8 <_start@@Base+0x10fe8>
  413bc5:	movabs rax,0x4d7947616d652e45
  413bcf:	cmp    QWORD PTR [rbp-0x10],rax
  413bd3:	jne    414195 <_start@@Base+0x10e85>
  413bd9:	add    QWORD PTR [rbp-0x30],0x8
  413bde:	mov    rdx,QWORD PTR [rbp-0x38]
  413be2:	mov    rax,QWORD PTR [rbp-0x30]
  413be6:	mov    rsi,rdx
  413be9:	mov    rdi,rax
  413bec:	call   403dd5 <_start@@Base+0xac5>
  413bf1:	mov    QWORD PTR [rbp-0x10],rax
  413bf5:	movabs rax,0x78616d706c652e67
  413bff:	cmp    QWORD PTR [rbp-0x10],rax
  413c03:	ja     413e6f <_start@@Base+0x10b5f>
  413c09:	movabs rax,0x78616d706c652e42
  413c13:	cmp    QWORD PTR [rbp-0x10],rax
  413c17:	ja     413ce6 <_start@@Base+0x109d6>
  413c1d:	movabs rax,0x78616d706c652e41
  413c27:	cmp    QWORD PTR [rbp-0x10],rax
  413c2b:	jne    413cdd <_start@@Base+0x109cd>
  413c31:	add    QWORD PTR [rbp-0x30],0x8
  413c36:	mov    rdx,QWORD PTR [rbp-0x38]
  413c3a:	mov    rax,QWORD PTR [rbp-0x30]
  413c3e:	mov    rsi,rdx
  413c41:	mov    rdi,rax
  413c44:	call   403dd5 <_start@@Base+0xac5>
  413c49:	mov    QWORD PTR [rbp-0x10],rax
  413c4d:	movabs rax,0xffff000000000000
  413c57:	and    rax,QWORD PTR [rbp-0x10]
  413c5b:	mov    rdx,rax
  413c5e:	movabs rax,0x6e79000000000000
  413c68:	cmp    rdx,rax
  413c6b:	jne    413cd4 <_start@@Base+0x109c4>
  413c6d:	mov    rax,QWORD PTR [rbp-0x30]
  413c71:	mov    QWORD PTR [rbp-0x8],rax
  413c75:	mov    rdx,QWORD PTR [rbp-0x38]
  413c79:	mov    rsi,QWORD PTR [rbp-0x8]
  413c7d:	mov    rax,QWORD PTR [rbp-0x28]
  413c81:	mov    ecx,0x2
  413c86:	mov    rdi,rax
  413c89:	call   403e19 <_start@@Base+0xb09>
  413c8e:	mov    QWORD PTR [rbp-0x30],rax
  413c92:	mov    rax,QWORD PTR [rbp-0x30]
  413c96:	cmp    rax,QWORD PTR [rbp-0x8]
  413c9a:	je     413ccb <_start@@Base+0x109bb>
  413c9c:	mov    r8,QWORD PTR [rbp-0x50]
  413ca0:	mov    rdi,QWORD PTR [rbp-0x48]
  413ca4:	mov    rcx,QWORD PTR [rbp-0x40]
  413ca8:	mov    rdx,QWORD PTR [rbp-0x38]
  413cac:	mov    rsi,QWORD PTR [rbp-0x30]
  413cb0:	mov    rax,QWORD PTR [rbp-0x28]
  413cb4:	mov    r9,r8
  413cb7:	mov    r8,rdi
  413cba:	mov    rdi,rax
  413cbd:	call   407d2a <_start@@Base+0x4a1a>
  413cc2:	mov    QWORD PTR [rbp-0x30],rax
  413cc6:	jmp    4142f4 <_start@@Base+0x10fe4>
  413ccb:	mov    rax,QWORD PTR [rbp-0x18]
  413ccf:	jmp    4142f8 <_start@@Base+0x10fe8>
  413cd4:	mov    rax,QWORD PTR [rbp-0x18]
  413cd8:	jmp    4142f8 <_start@@Base+0x10fe8>
  413cdd:	mov    rax,QWORD PTR [rbp-0x18]
  413ce1:	jmp    4142f8 <_start@@Base+0x10fe8>
  413ce6:	movabs rax,0x78616d706c652e43
  413cf0:	cmp    QWORD PTR [rbp-0x10],rax
  413cf4:	jne    413da6 <_start@@Base+0x10a96>
  413cfa:	add    QWORD PTR [rbp-0x30],0x8
  413cff:	mov    rdx,QWORD PTR [rbp-0x38]
  413d03:	mov    rax,QWORD PTR [rbp-0x30]
  413d07:	mov    rsi,rdx
  413d0a:	mov    rdi,rax
  413d0d:	call   403dd5 <_start@@Base+0xac5>
  413d12:	mov    QWORD PTR [rbp-0x10],rax
  413d16:	movabs rax,0xffffffff00000000
  413d20:	and    rax,QWORD PTR [rbp-0x10]
  413d24:	mov    rdx,rax
  413d27:	movabs rax,0x6f6c6f7200000000
  413d31:	cmp    rdx,rax
  413d34:	jne    413d9d <_start@@Base+0x10a8d>
  413d36:	mov    rax,QWORD PTR [rbp-0x30]
  413d3a:	mov    QWORD PTR [rbp-0x8],rax
  413d3e:	mov    rdx,QWORD PTR [rbp-0x38]
  413d42:	mov    rsi,QWORD PTR [rbp-0x8]
  413d46:	mov    rax,QWORD PTR [rbp-0x28]
  413d4a:	mov    ecx,0x4
  413d4f:	mov    rdi,rax
  413d52:	call   403e19 <_start@@Base+0xb09>
  413d57:	mov    QWORD PTR [rbp-0x30],rax
  413d5b:	mov    rax,QWORD PTR [rbp-0x30]
  413d5f:	cmp    rax,QWORD PTR [rbp-0x8]
  413d63:	je     413d94 <_start@@Base+0x10a84>
  413d65:	mov    r8,QWORD PTR [rbp-0x50]
  413d69:	mov    rdi,QWORD PTR [rbp-0x48]
  413d6d:	mov    rcx,QWORD PTR [rbp-0x40]
  413d71:	mov    rdx,QWORD PTR [rbp-0x38]
  413d75:	mov    rsi,QWORD PTR [rbp-0x30]
  413d79:	mov    rax,QWORD PTR [rbp-0x28]
  413d7d:	mov    r9,r8
  413d80:	mov    r8,rdi
  413d83:	mov    rdi,rax
  413d86:	call   40798e <_start@@Base+0x467e>
  413d8b:	mov    QWORD PTR [rbp-0x30],rax
  413d8f:	jmp    4142f4 <_start@@Base+0x10fe4>
  413d94:	mov    rax,QWORD PTR [rbp-0x18]
  413d98:	jmp    4142f8 <_start@@Base+0x10fe8>
  413d9d:	mov    rax,QWORD PTR [rbp-0x18]
  413da1:	jmp    4142f8 <_start@@Base+0x10fe8>
  413da6:	movabs rax,0x78616d706c652e46
  413db0:	cmp    QWORD PTR [rbp-0x10],rax
  413db4:	jne    413e66 <_start@@Base+0x10b56>
  413dba:	add    QWORD PTR [rbp-0x30],0x8
  413dbf:	mov    rdx,QWORD PTR [rbp-0x38]
  413dc3:	mov    rax,QWORD PTR [rbp-0x30]
  413dc7:	mov    rsi,rdx
  413dca:	mov    rdi,rax
  413dcd:	call   403dd5 <_start@@Base+0xac5>
  413dd2:	mov    QWORD PTR [rbp-0x10],rax
  413dd6:	movabs rax,0xffff000000000000
  413de0:	and    rax,QWORD PTR [rbp-0x10]
  413de4:	mov    rdx,rax
  413de7:	movabs rax,0x6f6f000000000000
  413df1:	cmp    rdx,rax
  413df4:	jne    413e5d <_start@@Base+0x10b4d>
  413df6:	mov    rax,QWORD PTR [rbp-0x30]
  413dfa:	mov    QWORD PTR [rbp-0x8],rax
  413dfe:	mov    rdx,QWORD PTR [rbp-0x38]
  413e02:	mov    rsi,QWORD PTR [rbp-0x8]
  413e06:	mov    rax,QWORD PTR [rbp-0x28]
  413e0a:	mov    ecx,0x2
  413e0f:	mov    rdi,rax
  413e12:	call   403e19 <_start@@Base+0xb09>
  413e17:	mov    QWORD PTR [rbp-0x30],rax
  413e1b:	mov    rax,QWORD PTR [rbp-0x30]
  413e1f:	cmp    rax,QWORD PTR [rbp-0x8]
  413e23:	je     413e54 <_start@@Base+0x10b44>
  413e25:	mov    r8,QWORD PTR [rbp-0x50]
  413e29:	mov    rdi,QWORD PTR [rbp-0x48]
  413e2d:	mov    rcx,QWORD PTR [rbp-0x40]
  413e31:	mov    rdx,QWORD PTR [rbp-0x38]
  413e35:	mov    rsi,QWORD PTR [rbp-0x30]
  413e39:	mov    rax,QWORD PTR [rbp-0x28]
  413e3d:	mov    r9,r8
  413e40:	mov    r8,rdi
  413e43:	mov    rdi,rax
  413e46:	call   407201 <_start@@Base+0x3ef1>
  413e4b:	mov    QWORD PTR [rbp-0x30],rax
  413e4f:	jmp    4142f4 <_start@@Base+0x10fe4>
  413e54:	mov    rax,QWORD PTR [rbp-0x18]
  413e58:	jmp    4142f8 <_start@@Base+0x10fe8>
  413e5d:	mov    rax,QWORD PTR [rbp-0x18]
  413e61:	jmp    4142f8 <_start@@Base+0x10fe8>
  413e66:	mov    rax,QWORD PTR [rbp-0x18]
  413e6a:	jmp    4142f8 <_start@@Base+0x10fe8>
  413e6f:	movabs rax,0x78616d706c652e68
  413e79:	cmp    QWORD PTR [rbp-0x10],rax
  413e7d:	ja     413f44 <_start@@Base+0x10c34>
  413e83:	movabs rax,0x78616d706c652e68
  413e8d:	cmp    QWORD PTR [rbp-0x10],rax
  413e91:	jne    413f3b <_start@@Base+0x10c2b>
  413e97:	add    QWORD PTR [rbp-0x30],0x8
  413e9c:	mov    rdx,QWORD PTR [rbp-0x38]
  413ea0:	mov    rax,QWORD PTR [rbp-0x30]
  413ea4:	mov    rsi,rdx
  413ea7:	mov    rdi,rax
  413eaa:	call   403dd5 <_start@@Base+0xac5>
  413eaf:	mov    QWORD PTR [rbp-0x10],rax
  413eb3:	mov    rax,QWORD PTR [rbp-0x10]
  413eb7:	mov    al,0x0
  413eb9:	mov    rdx,rax
  413ebc:	movabs rax,0x65785f656e756d00
  413ec6:	cmp    rdx,rax
  413ec9:	jne    413f32 <_start@@Base+0x10c22>
  413ecb:	mov    rax,QWORD PTR [rbp-0x30]
  413ecf:	mov    QWORD PTR [rbp-0x8],rax
  413ed3:	mov    rdx,QWORD PTR [rbp-0x38]
  413ed7:	mov    rsi,QWORD PTR [rbp-0x8]
  413edb:	mov    rax,QWORD PTR [rbp-0x28]
  413edf:	mov    ecx,0x7
  413ee4:	mov    rdi,rax
  413ee7:	call   403e19 <_start@@Base+0xb09>
  413eec:	mov    QWORD PTR [rbp-0x30],rax
  413ef0:	mov    rax,QWORD PTR [rbp-0x30]
  413ef4:	cmp    rax,QWORD PTR [rbp-0x8]
  413ef8:	je     413f29 <_start@@Base+0x10c19>
  413efa:	mov    r8,QWORD PTR [rbp-0x50]
  413efe:	mov    rdi,QWORD PTR [rbp-0x48]
  413f02:	mov    rcx,QWORD PTR [rbp-0x40]
  413f06:	mov    rdx,QWORD PTR [rbp-0x38]
  413f0a:	mov    rsi,QWORD PTR [rbp-0x30]
  413f0e:	mov    rax,QWORD PTR [rbp-0x28]
  413f12:	mov    r9,r8
  413f15:	mov    r8,rdi
  413f18:	mov    rdi,rax
  413f1b:	call   4077c9 <_start@@Base+0x44b9>
  413f20:	mov    QWORD PTR [rbp-0x30],rax
  413f24:	jmp    4142f4 <_start@@Base+0x10fe4>
  413f29:	mov    rax,QWORD PTR [rbp-0x18]
  413f2d:	jmp    4142f8 <_start@@Base+0x10fe8>
  413f32:	mov    rax,QWORD PTR [rbp-0x18]
  413f36:	jmp    4142f8 <_start@@Base+0x10fe8>
  413f3b:	mov    rax,QWORD PTR [rbp-0x18]
  413f3f:	jmp    4142f8 <_start@@Base+0x10fe8>
  413f44:	movabs rax,0x78616d706c652e6d
  413f4e:	cmp    QWORD PTR [rbp-0x10],rax
  413f52:	ja     414019 <_start@@Base+0x10d09>
  413f58:	movabs rax,0x78616d706c652e69
  413f62:	cmp    QWORD PTR [rbp-0x10],rax
  413f66:	jne    414010 <_start@@Base+0x10d00>
  413f6c:	add    QWORD PTR [rbp-0x30],0x8
  413f71:	mov    rdx,QWORD PTR [rbp-0x38]
  413f75:	mov    rax,QWORD PTR [rbp-0x30]
  413f79:	mov    rsi,rdx
  413f7c:	mov    rdi,rax
  413f7f:	call   403dd5 <_start@@Base+0xac5>
  413f84:	mov    QWORD PTR [rbp-0x10],rax
  413f88:	mov    rax,QWORD PTR [rbp-0x10]
  413f8c:	mov    al,0x0
  413f8e:	mov    rdx,rax
  413f91:	movabs rax,0x6e745f656e756d00
  413f9b:	cmp    rdx,rax
  413f9e:	jne    414007 <_start@@Base+0x10cf7>
  413fa0:	mov    rax,QWORD PTR [rbp-0x30]
  413fa4:	mov    QWORD PTR [rbp-0x8],rax
  413fa8:	mov    rdx,QWORD PTR [rbp-0x38]
  413fac:	mov    rsi,QWORD PTR [rbp-0x8]
  413fb0:	mov    rax,QWORD PTR [rbp-0x28]
  413fb4:	mov    ecx,0x7
  413fb9:	mov    rdi,rax
  413fbc:	call   403e19 <_start@@Base+0xb09>
  413fc1:	mov    QWORD PTR [rbp-0x30],rax
  413fc5:	mov    rax,QWORD PTR [rbp-0x30]
  413fc9:	cmp    rax,QWORD PTR [rbp-0x8]
  413fcd:	je     413ffe <_start@@Base+0x10cee>
  413fcf:	mov    r8,QWORD PTR [rbp-0x50]
  413fd3:	mov    rdi,QWORD PTR [rbp-0x48]
  413fd7:	mov    rcx,QWORD PTR [rbp-0x40]
  413fdb:	mov    rdx,QWORD PTR [rbp-0x38]
  413fdf:	mov    rsi,QWORD PTR [rbp-0x30]
  413fe3:	mov    rax,QWORD PTR [rbp-0x28]
  413fe7:	mov    r9,r8
  413fea:	mov    r8,rdi
  413fed:	mov    rdi,rax
  413ff0:	call   407576 <_start@@Base+0x4266>
  413ff5:	mov    QWORD PTR [rbp-0x30],rax
  413ff9:	jmp    4142f4 <_start@@Base+0x10fe4>
  413ffe:	mov    rax,QWORD PTR [rbp-0x18]
  414002:	jmp    4142f8 <_start@@Base+0x10fe8>
  414007:	mov    rax,QWORD PTR [rbp-0x18]
  41400b:	jmp    4142f8 <_start@@Base+0x10fe8>
  414010:	mov    rax,QWORD PTR [rbp-0x18]
  414014:	jmp    4142f8 <_start@@Base+0x10fe8>
  414019:	movabs rax,0x78616d706c652e6e
  414023:	cmp    QWORD PTR [rbp-0x10],rax
  414027:	jne    41418c <_start@@Base+0x10e7c>
  41402d:	add    QWORD PTR [rbp-0x30],0x8
  414032:	mov    rdx,QWORD PTR [rbp-0x38]
  414036:	mov    rax,QWORD PTR [rbp-0x30]
  41403a:	mov    rsi,rdx
  41403d:	mov    rdi,rax
  414040:	call   403dd5 <_start@@Base+0xac5>
  414045:	mov    QWORD PTR [rbp-0x10],rax
  414049:	mov    rax,QWORD PTR [rbp-0x10]
  41404d:	mov    al,0x0
  41404f:	mov    rdx,rax
  414052:	movabs rax,0x65675f656e756d00
  41405c:	cmp    rdx,rax
  41405f:	jne    4140bf <_start@@Base+0x10daf>
  414061:	mov    rax,QWORD PTR [rbp-0x30]
  414065:	mov    QWORD PTR [rbp-0x8],rax
  414069:	mov    rdx,QWORD PTR [rbp-0x38]
  41406d:	mov    rsi,QWORD PTR [rbp-0x8]
  414071:	mov    rax,QWORD PTR [rbp-0x28]
  414075:	mov    ecx,0x7
  41407a:	mov    rdi,rax
  41407d:	call   403e19 <_start@@Base+0xb09>
  414082:	mov    QWORD PTR [rbp-0x30],rax
  414086:	mov    rax,QWORD PTR [rbp-0x30]
  41408a:	cmp    rax,QWORD PTR [rbp-0x8]
  41408e:	je     4140c2 <_start@@Base+0x10db2>
  414090:	mov    r8,QWORD PTR [rbp-0x50]
  414094:	mov    rdi,QWORD PTR [rbp-0x48]
  414098:	mov    rcx,QWORD PTR [rbp-0x40]
  41409c:	mov    rdx,QWORD PTR [rbp-0x38]
  4140a0:	mov    rsi,QWORD PTR [rbp-0x30]
  4140a4:	mov    rax,QWORD PTR [rbp-0x28]
  4140a8:	mov    r9,r8
  4140ab:	mov    r8,rdi
  4140ae:	mov    rdi,rax
  4140b1:	call   4073ab <_start@@Base+0x409b>
  4140b6:	mov    QWORD PTR [rbp-0x30],rax
  4140ba:	jmp    4142f4 <_start@@Base+0x10fe4>
  4140bf:	nop
  4140c0:	jmp    4140c3 <_start@@Base+0x10db3>
  4140c2:	nop
  4140c3:	movabs rax,0x6f74656d70747965
  4140cd:	cmp    QWORD PTR [rbp-0x10],rax
  4140d1:	jne    414183 <_start@@Base+0x10e73>
  4140d7:	add    QWORD PTR [rbp-0x30],0x8
  4140dc:	mov    rdx,QWORD PTR [rbp-0x38]
  4140e0:	mov    rax,QWORD PTR [rbp-0x30]
  4140e4:	mov    rsi,rdx
  4140e7:	mov    rdi,rax
  4140ea:	call   403dd5 <_start@@Base+0xac5>
  4140ef:	mov    QWORD PTR [rbp-0x10],rax
  4140f3:	movabs rax,0xffffff0000000000
  4140fd:	and    rax,QWORD PTR [rbp-0x10]
  414101:	mov    rdx,rax
  414104:	movabs rax,0x6e756d0000000000
  41410e:	cmp    rdx,rax
  414111:	jne    41417a <_start@@Base+0x10e6a>
  414113:	mov    rax,QWORD PTR [rbp-0x30]
  414117:	mov    QWORD PTR [rbp-0x8],rax
  41411b:	mov    rdx,QWORD PTR [rbp-0x38]
  41411f:	mov    rsi,QWORD PTR [rbp-0x8]
  414123:	mov    rax,QWORD PTR [rbp-0x28]
  414127:	mov    ecx,0x3
  41412c:	mov    rdi,rax
  41412f:	call   403e19 <_start@@Base+0xb09>
  414134:	mov    QWORD PTR [rbp-0x30],rax
  414138:	mov    rax,QWORD PTR [rbp-0x30]
  41413c:	cmp    rax,QWORD PTR [rbp-0x8]
  414140:	je     414171 <_start@@Base+0x10e61>
  414142:	mov    r8,QWORD PTR [rbp-0x50]
  414146:	mov    rdi,QWORD PTR [rbp-0x48]
  41414a:	mov    rcx,QWORD PTR [rbp-0x40]
  41414e:	mov    rdx,QWORD PTR [rbp-0x38]
  414152:	mov    rsi,QWORD PTR [rbp-0x30]
  414156:	mov    rax,QWORD PTR [rbp-0x28]
  41415a:	mov    r9,r8
  41415d:	mov    r8,rdi
  414160:	mov    rdi,rax
  414163:	call   408891 <_start@@Base+0x5581>
  414168:	mov    QWORD PTR [rbp-0x30],rax
  41416c:	jmp    4142f4 <_start@@Base+0x10fe4>
  414171:	mov    rax,QWORD PTR [rbp-0x18]
  414175:	jmp    4142f8 <_start@@Base+0x10fe8>
  41417a:	mov    rax,QWORD PTR [rbp-0x18]
  41417e:	jmp    4142f8 <_start@@Base+0x10fe8>
  414183:	mov    rax,QWORD PTR [rbp-0x18]
  414187:	jmp    4142f8 <_start@@Base+0x10fe8>
  41418c:	mov    rax,QWORD PTR [rbp-0x18]
  414190:	jmp    4142f8 <_start@@Base+0x10fe8>
  414195:	movabs rax,0x4d7947616d652e4f
  41419f:	cmp    QWORD PTR [rbp-0x10],rax
  4141a3:	jne    4142ee <_start@@Base+0x10fde>
  4141a9:	add    QWORD PTR [rbp-0x30],0x8
  4141ae:	mov    rdx,QWORD PTR [rbp-0x38]
  4141b2:	mov    rax,QWORD PTR [rbp-0x30]
  4141b6:	mov    rsi,rdx
  4141b9:	mov    rdi,rax
  4141bc:	call   403dd5 <_start@@Base+0xac5>
  4141c1:	mov    QWORD PTR [rbp-0x10],rax
  4141c5:	movabs rax,0x746865724e616d65
  4141cf:	cmp    QWORD PTR [rbp-0x10],rax
  4141d3:	jne    4142e8 <_start@@Base+0x10fd8>
  4141d9:	add    QWORD PTR [rbp-0x30],0x8
  4141de:	mov    rdx,QWORD PTR [rbp-0x38]
  4141e2:	mov    rax,QWORD PTR [rbp-0x30]
  4141e6:	mov    rsi,rdx
  4141e9:	mov    rdi,rax
  4141ec:	call   403dd5 <_start@@Base+0xac5>
  4141f1:	mov    QWORD PTR [rbp-0x10],rax
  4141f5:	movabs rax,0x53706163652e4672
  4141ff:	cmp    QWORD PTR [rbp-0x10],rax
  414203:	jne    4142e2 <_start@@Base+0x10fd2>
  414209:	add    QWORD PTR [rbp-0x30],0x8
  41420e:	mov    rdx,QWORD PTR [rbp-0x38]
  414212:	mov    rax,QWORD PTR [rbp-0x30]
  414216:	mov    rsi,rdx
  414219:	mov    rdi,rax
  41421c:	call   403dd5 <_start@@Base+0xac5>
  414221:	mov    QWORD PTR [rbp-0x10],rax
  414225:	movabs rax,0x6f6d496e636c7564
  41422f:	cmp    QWORD PTR [rbp-0x10],rax
  414233:	jne    4142dc <_start@@Base+0x10fcc>
  414239:	add    QWORD PTR [rbp-0x30],0x8
  41423e:	mov    rdx,QWORD PTR [rbp-0x38]
  414242:	mov    rax,QWORD PTR [rbp-0x30]
  414246:	mov    rsi,rdx
  414249:	mov    rdi,rax
  41424c:	call   403dd5 <_start@@Base+0xac5>
  414251:	mov    QWORD PTR [rbp-0x10],rax
  414255:	movabs rax,0xff00000000000000
  41425f:	and    rax,QWORD PTR [rbp-0x10]
  414263:	mov    rdx,rax
  414266:	movabs rax,0x6500000000000000
  414270:	cmp    rdx,rax
  414273:	jne    4142d6 <_start@@Base+0x10fc6>
  414275:	mov    rax,QWORD PTR [rbp-0x30]
  414279:	mov    QWORD PTR [rbp-0x8],rax
  41427d:	mov    rdx,QWORD PTR [rbp-0x38]
  414281:	mov    rsi,QWORD PTR [rbp-0x8]
  414285:	mov    rax,QWORD PTR [rbp-0x28]
  414289:	mov    ecx,0x1
  41428e:	mov    rdi,rax
  414291:	call   403e19 <_start@@Base+0xb09>
  414296:	mov    QWORD PTR [rbp-0x30],rax
  41429a:	mov    rax,QWORD PTR [rbp-0x30]
  41429e:	cmp    rax,QWORD PTR [rbp-0x8]
  4142a2:	je     4142d0 <_start@@Base+0x10fc0>
  4142a4:	mov    r8,QWORD PTR [rbp-0x50]
  4142a8:	mov    rdi,QWORD PTR [rbp-0x48]
  4142ac:	mov    rcx,QWORD PTR [rbp-0x40]
  4142b0:	mov    rdx,QWORD PTR [rbp-0x38]
  4142b4:	mov    rsi,QWORD PTR [rbp-0x30]
  4142b8:	mov    rax,QWORD PTR [rbp-0x28]
  4142bc:	mov    r9,r8
  4142bf:	mov    r8,rdi
  4142c2:	mov    rdi,rax
  4142c5:	call   406289 <_start@@Base+0x2f79>
  4142ca:	mov    QWORD PTR [rbp-0x30],rax
  4142ce:	jmp    4142f4 <_start@@Base+0x10fe4>
  4142d0:	mov    rax,QWORD PTR [rbp-0x18]
  4142d4:	jmp    4142f8 <_start@@Base+0x10fe8>
  4142d6:	mov    rax,QWORD PTR [rbp-0x18]
  4142da:	jmp    4142f8 <_start@@Base+0x10fe8>
  4142dc:	mov    rax,QWORD PTR [rbp-0x18]
  4142e0:	jmp    4142f8 <_start@@Base+0x10fe8>
  4142e2:	mov    rax,QWORD PTR [rbp-0x18]
  4142e6:	jmp    4142f8 <_start@@Base+0x10fe8>
  4142e8:	mov    rax,QWORD PTR [rbp-0x18]
  4142ec:	jmp    4142f8 <_start@@Base+0x10fe8>
  4142ee:	mov    rax,QWORD PTR [rbp-0x18]
  4142f2:	jmp    4142f8 <_start@@Base+0x10fe8>
  4142f4:	mov    rax,QWORD PTR [rbp-0x30]
  4142f8:	leave  
  4142f9:	ret    
  4142fa:	endbr64 
  4142fe:	push   rbp
  4142ff:	mov    rbp,rsp
  414302:	sub    rsp,0x90
  414309:	mov    QWORD PTR [rbp-0x68],rdi
  41430d:	mov    QWORD PTR [rbp-0x70],rsi
  414311:	mov    QWORD PTR [rbp-0x78],rdx
  414315:	mov    QWORD PTR [rbp-0x80],rcx
  414319:	mov    DWORD PTR [rbp-0x84],r8d
  414320:	mov    rax,QWORD PTR fs:0x28
  414329:	mov    QWORD PTR [rbp-0x8],rax
  41432d:	xor    eax,eax
  41432f:	cmp    QWORD PTR [rbp-0x70],0x0
  414334:	jne    41433c <_start@@Base+0x1102c>
  414336:	lea    rax,[rbp-0x50]
  41433a:	jmp    414340 <_start@@Base+0x11030>
  41433c:	mov    rax,QWORD PTR [rbp-0x70]
  414340:	mov    QWORD PTR [rbp-0x70],rax
  414344:	mov    rdx,QWORD PTR [rbp-0x78]
  414348:	mov    rax,QWORD PTR [rbp-0x80]
  41434c:	lea    rcx,[rdx+rax*1]
  414350:	mov    edi,DWORD PTR [rbp-0x84]
  414356:	mov    rdx,QWORD PTR [rbp-0x78]
  41435a:	mov    rsi,QWORD PTR [rbp-0x68]
  41435e:	mov    rax,QWORD PTR [rbp-0x70]
  414362:	mov    r8d,edi
  414365:	mov    rdi,rax
  414368:	call   403b55 <_start@@Base+0x845>
  41436d:	mov    rax,QWORD PTR [rbp-0x68]
  414371:	mov    ecx,0x0
  414376:	mov    edx,0x0
  41437b:	lea    rsi,[rip+0xdd9a]        # 42211c <_IO_stdin_used@@Base+0x11c>
  414382:	mov    rdi,rax
  414385:	call   416dbb <flatcc_builder_start_buffer@@Base>
  41438a:	test   eax,eax
  41438c:	je     414395 <_start@@Base+0x11085>
  41438e:	mov    eax,0xffffffff
  414393:	jmp    4143fc <_start@@Base+0x110ec>
  414395:	mov    rdx,QWORD PTR [rbp-0x78]
  414399:	mov    rax,QWORD PTR [rbp-0x80]
  41439d:	lea    rdi,[rdx+rax*1]
  4143a1:	lea    rdx,[rbp-0x54]
  4143a5:	mov    rsi,QWORD PTR [rbp-0x78]
  4143a9:	mov    rax,QWORD PTR [rbp-0x70]
  4143ad:	mov    rcx,rdx
  4143b0:	mov    rdx,rdi
  4143b3:	mov    rdi,rax
  4143b6:	call   40cbc1 <_start@@Base+0x98b1>
  4143bb:	mov    rax,QWORD PTR [rbp-0x70]
  4143bf:	mov    eax,DWORD PTR [rax+0x20]
  4143c2:	test   eax,eax
  4143c4:	je     4143cf <_start@@Base+0x110bf>
  4143c6:	mov    rax,QWORD PTR [rbp-0x70]
  4143ca:	mov    eax,DWORD PTR [rax+0x20]
  4143cd:	jmp    4143fc <_start@@Base+0x110ec>
  4143cf:	mov    edx,DWORD PTR [rbp-0x54]
  4143d2:	mov    rax,QWORD PTR [rbp-0x68]
  4143d6:	mov    esi,edx
  4143d8:	mov    rdi,rax
  4143db:	call   416f08 <flatcc_builder_end_buffer@@Base>
  4143e0:	test   eax,eax
  4143e2:	jne    4143eb <_start@@Base+0x110db>
  4143e4:	mov    eax,0xffffffff
  4143e9:	jmp    4143fc <_start@@Base+0x110ec>
  4143eb:	mov    rax,QWORD PTR [rbp-0x70]
  4143ef:	mov    rdx,QWORD PTR [rbp-0x78]
  4143f3:	mov    QWORD PTR [rax+0x40],rdx
  4143f7:	mov    eax,0x0
  4143fc:	mov    rcx,QWORD PTR [rbp-0x8]
  414400:	xor    rcx,QWORD PTR fs:0x28
  414409:	je     414410 <_start@@Base+0x11100>
  41440b:	call   403200 <__stack_chk_fail@plt>
  414410:	leave  
  414411:	ret    
  414412:	endbr64 
  414416:	push   rbp
  414417:	mov    rbp,rsp
  41441a:	sub    rsp,0x50
  41441e:	mov    QWORD PTR [rbp-0x38],rdi
  414422:	mov    QWORD PTR [rbp-0x40],rsi
  414426:	mov    QWORD PTR [rbp-0x48],rdx
  41442a:	mov    QWORD PTR [rbp-0x50],rcx
  41442e:	mov    rax,QWORD PTR fs:0x28
  414437:	mov    QWORD PTR [rbp-0x8],rax
  41443b:	xor    eax,eax
  41443d:	mov    rax,QWORD PTR [rbp-0x40]
  414441:	mov    QWORD PTR [rbp-0x28],rax
  414445:	cmp    QWORD PTR [rbp-0x38],0x0
  41444a:	je     414468 <_start@@Base+0x11158>
  41444c:	mov    rdx,QWORD PTR [rbp-0x38]
  414450:	mov    rax,QWORD PTR [rbp-0x50]
  414454:	lea    rsi,[rip+0xdcc6]        # 422121 <_IO_stdin_used@@Base+0x121>
  41445b:	mov    rdi,rax
  41445e:	mov    eax,0x0
  414463:	call   403270 <fprintf@plt>
  414468:	mov    DWORD PTR [rbp-0x2c],0x0
  41446f:	jmp    41455c <_start@@Base+0x1124c>
  414474:	mov    eax,DWORD PTR [rbp-0x2c]
  414477:	and    eax,0xf
  41447a:	test   eax,eax
  41447c:	jne    4144bd <_start@@Base+0x111ad>
  41447e:	cmp    DWORD PTR [rbp-0x2c],0x0
  414482:	je     4144a0 <_start@@Base+0x11190>
  414484:	lea    rdx,[rbp-0x20]
  414488:	mov    rax,QWORD PTR [rbp-0x50]
  41448c:	lea    rsi,[rip+0xdc93]        # 422126 <_IO_stdin_used@@Base+0x126>
  414493:	mov    rdi,rax
  414496:	mov    eax,0x0
  41449b:	call   403270 <fprintf@plt>
  4144a0:	mov    edx,DWORD PTR [rbp-0x2c]
  4144a3:	mov    rax,QWORD PTR [rbp-0x50]
  4144a7:	lea    rsi,[rip+0xdc7e]        # 42212c <_IO_stdin_used@@Base+0x12c>
  4144ae:	mov    rdi,rax
  4144b1:	mov    eax,0x0
  4144b6:	call   403270 <fprintf@plt>
  4144bb:	jmp    4144d8 <_start@@Base+0x111c8>
  4144bd:	mov    eax,DWORD PTR [rbp-0x2c]
  4144c0:	and    eax,0x7
  4144c3:	test   eax,eax
  4144c5:	jne    4144d8 <_start@@Base+0x111c8>
  4144c7:	mov    rax,QWORD PTR [rbp-0x50]
  4144cb:	mov    rsi,rax
  4144ce:	mov    edi,0x20
  4144d3:	call   403240 <fputc@plt>
  4144d8:	mov    edx,DWORD PTR [rbp-0x2c]
  4144db:	mov    rax,QWORD PTR [rbp-0x28]
  4144df:	add    rax,rdx
  4144e2:	movzx  eax,BYTE PTR [rax]
  4144e5:	movzx  edx,al
  4144e8:	mov    rax,QWORD PTR [rbp-0x50]
  4144ec:	lea    rsi,[rip+0xdc41]        # 422134 <_IO_stdin_used@@Base+0x134>
  4144f3:	mov    rdi,rax
  4144f6:	mov    eax,0x0
  4144fb:	call   403270 <fprintf@plt>
  414500:	mov    edx,DWORD PTR [rbp-0x2c]
  414503:	mov    rax,QWORD PTR [rbp-0x28]
  414507:	add    rax,rdx
  41450a:	movzx  eax,BYTE PTR [rax]
  41450d:	cmp    al,0x1f
  41450f:	jbe    414522 <_start@@Base+0x11212>
  414511:	mov    edx,DWORD PTR [rbp-0x2c]
  414514:	mov    rax,QWORD PTR [rbp-0x28]
  414518:	add    rax,rdx
  41451b:	movzx  eax,BYTE PTR [rax]
  41451e:	cmp    al,0x7e
  414520:	jbe    414531 <_start@@Base+0x11221>
  414522:	mov    eax,DWORD PTR [rbp-0x2c]
  414525:	and    eax,0xf
  414528:	mov    eax,eax
  41452a:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  41452f:	jmp    41454a <_start@@Base+0x1123a>
  414531:	mov    edx,DWORD PTR [rbp-0x2c]
  414534:	mov    rax,QWORD PTR [rbp-0x28]
  414538:	add    rax,rdx
  41453b:	mov    edx,DWORD PTR [rbp-0x2c]
  41453e:	and    edx,0xf
  414541:	movzx  eax,BYTE PTR [rax]
  414544:	mov    edx,edx
  414546:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  41454a:	mov    eax,DWORD PTR [rbp-0x2c]
  41454d:	and    eax,0xf
  414550:	inc    eax
  414552:	mov    eax,eax
  414554:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  414559:	inc    DWORD PTR [rbp-0x2c]
  41455c:	mov    rax,QWORD PTR [rbp-0x48]
  414560:	cmp    DWORD PTR [rbp-0x2c],eax
  414563:	jb     414474 <_start@@Base+0x11164>
  414569:	jmp    41458b <_start@@Base+0x1127b>
  41456b:	mov    rax,QWORD PTR [rbp-0x50]
  41456f:	mov    rcx,rax
  414572:	mov    edx,0x3
  414577:	mov    esi,0x1
  41457c:	lea    rdi,[rip+0xdbb7]        # 42213a <_IO_stdin_used@@Base+0x13a>
  414583:	call   4032f0 <fwrite@plt>
  414588:	inc    DWORD PTR [rbp-0x2c]
  41458b:	mov    eax,DWORD PTR [rbp-0x2c]
  41458e:	and    eax,0xf
  414591:	test   eax,eax
  414593:	jne    41456b <_start@@Base+0x1125b>
  414595:	lea    rdx,[rbp-0x20]
  414599:	mov    rax,QWORD PTR [rbp-0x50]
  41459d:	lea    rsi,[rip+0xdb82]        # 422126 <_IO_stdin_used@@Base+0x126>
  4145a4:	mov    rdi,rax
  4145a7:	mov    eax,0x0
  4145ac:	call   403270 <fprintf@plt>
  4145b1:	nop
  4145b2:	mov    rax,QWORD PTR [rbp-0x8]
  4145b6:	xor    rax,QWORD PTR fs:0x28
  4145bf:	je     4145c6 <_start@@Base+0x112b6>
  4145c1:	call   403200 <__stack_chk_fail@plt>
  4145c6:	leave  
  4145c7:	ret    
  4145c8:	endbr64 
  4145cc:	push   rbp
  4145cd:	mov    rbp,rsp
  4145d0:	sub    rsp,0x50
  4145d4:	mov    QWORD PTR [rbp-0x38],rdi
  4145d8:	mov    QWORD PTR [rbp-0x40],rsi
  4145dc:	mov    QWORD PTR [rbp-0x48],rdx
  4145e0:	mov    QWORD PTR [rbp-0x50],rcx
  4145e4:	mov    rax,QWORD PTR fs:0x28
  4145ed:	mov    QWORD PTR [rbp-0x8],rax
  4145f1:	xor    eax,eax
  4145f3:	mov    rax,QWORD PTR [rbp-0x40]
  4145f7:	mov    QWORD PTR [rbp-0x28],rax
  4145fb:	cmp    QWORD PTR [rbp-0x38],0x0
  414600:	je     414608 <_start@@Base+0x112f8>
  414602:	mov    rax,QWORD PTR [rbp-0x38]
  414606:	jmp    41460f <_start@@Base+0x112ff>
  414608:	lea    rax,[rip+0xdb2f]        # 42213e <_IO_stdin_used@@Base+0x13e>
  41460f:	mov    QWORD PTR [rbp-0x38],rax
  414613:	mov    rdx,QWORD PTR [rbp-0x38]
  414617:	mov    rax,QWORD PTR [rbp-0x50]
  41461b:	lea    rsi,[rip+0xdb21]        # 422143 <_IO_stdin_used@@Base+0x143>
  414622:	mov    rdi,rax
  414625:	mov    eax,0x0
  41462a:	call   403270 <fprintf@plt>
  41462f:	mov    DWORD PTR [rbp-0x2c],0x0
  414636:	jmp    4146b3 <_start@@Base+0x113a3>
  414638:	mov    eax,DWORD PTR [rbp-0x2c]
  41463b:	and    eax,0xf
  41463e:	test   eax,eax
  414640:	jne    414661 <_start@@Base+0x11351>
  414642:	mov    rax,QWORD PTR [rbp-0x50]
  414646:	mov    rcx,rax
  414649:	mov    edx,0x4
  41464e:	mov    esi,0x1
  414653:	lea    rdi,[rip+0xdb06]        # 422160 <_IO_stdin_used@@Base+0x160>
  41465a:	call   4032f0 <fwrite@plt>
  41465f:	jmp    414688 <_start@@Base+0x11378>
  414661:	mov    eax,DWORD PTR [rbp-0x2c]
  414664:	and    eax,0x7
  414667:	test   eax,eax
  414669:	jne    414688 <_start@@Base+0x11378>
  41466b:	mov    rax,QWORD PTR [rbp-0x50]
  41466f:	mov    rcx,rax
  414672:	mov    edx,0x3
  414677:	mov    esi,0x1
  41467c:	lea    rdi,[rip+0xdab7]        # 42213a <_IO_stdin_used@@Base+0x13a>
  414683:	call   4032f0 <fwrite@plt>
  414688:	mov    edx,DWORD PTR [rbp-0x2c]
  41468b:	mov    rax,QWORD PTR [rbp-0x28]
  41468f:	add    rax,rdx
  414692:	movzx  eax,BYTE PTR [rax]
  414695:	movzx  edx,al
  414698:	mov    rax,QWORD PTR [rbp-0x50]
  41469c:	lea    rsi,[rip+0xdac2]        # 422165 <_IO_stdin_used@@Base+0x165>
  4146a3:	mov    rdi,rax
  4146a6:	mov    eax,0x0
  4146ab:	call   403270 <fprintf@plt>
  4146b0:	inc    DWORD PTR [rbp-0x2c]
  4146b3:	mov    rax,QWORD PTR [rbp-0x48]
  4146b7:	cmp    DWORD PTR [rbp-0x2c],eax
  4146ba:	jb     414638 <_start@@Base+0x11328>
  4146c0:	mov    rax,QWORD PTR [rbp-0x50]
  4146c4:	mov    rcx,rax
  4146c7:	mov    edx,0x4
  4146cc:	mov    esi,0x1
  4146d1:	lea    rdi,[rip+0xda96]        # 42216e <_IO_stdin_used@@Base+0x16e>
  4146d8:	call   4032f0 <fwrite@plt>
  4146dd:	nop
  4146de:	mov    rax,QWORD PTR [rbp-0x8]
  4146e2:	xor    rax,QWORD PTR fs:0x28
  4146eb:	je     4146f2 <_start@@Base+0x113e2>
  4146ed:	call   403200 <__stack_chk_fail@plt>
  4146f2:	leave  
  4146f3:	ret    
  4146f4:	endbr64 
  4146f8:	push   rbp
  4146f9:	mov    rbp,rsp
  4146fc:	sub    rsp,0x60
  414700:	mov    QWORD PTR [rbp-0x48],rdi
  414704:	mov    QWORD PTR [rbp-0x50],rsi
  414708:	mov    QWORD PTR [rbp-0x58],rdx
  41470c:	mov    rax,QWORD PTR fs:0x28
  414715:	mov    QWORD PTR [rbp-0x8],rax
  414719:	xor    eax,eax
  41471b:	cmp    QWORD PTR [rbp-0x58],0x0
  414720:	jne    414728 <_start@@Base+0x11418>
  414722:	lea    rax,[rbp-0x38]
  414726:	jmp    41472c <_start@@Base+0x1141c>
  414728:	mov    rax,QWORD PTR [rbp-0x58]
  41472c:	mov    QWORD PTR [rbp-0x58],rax
  414730:	mov    rax,QWORD PTR [rbp-0x48]
  414734:	lea    rsi,[rip+0xda38]        # 422173 <_IO_stdin_used@@Base+0x173>
  41473b:	mov    rdi,rax
  41473e:	call   4032d0 <fopen@plt>
  414743:	mov    QWORD PTR [rbp-0x18],rax
  414747:	mov    QWORD PTR [rbp-0x30],0x0
  41474f:	mov    QWORD PTR [rbp-0x20],0x0
  414757:	cmp    QWORD PTR [rbp-0x18],0x0
  41475c:	je     414845 <_start@@Base+0x11535>
  414762:	mov    rax,QWORD PTR [rbp-0x18]
  414766:	mov    edx,0x2
  41476b:	mov    esi,0x0
  414770:	mov    rdi,rax
  414773:	call   4032b0 <fseek@plt>
  414778:	mov    rax,QWORD PTR [rbp-0x18]
  41477c:	mov    rdi,rax
  41477f:	call   403280 <ftell@plt>
  414784:	mov    QWORD PTR [rbp-0x30],rax
  414788:	mov    rax,QWORD PTR [rbp-0x58]
  41478c:	mov    rdx,QWORD PTR [rbp-0x30]
  414790:	mov    QWORD PTR [rax],rdx
  414793:	cmp    QWORD PTR [rbp-0x50],0x0
  414798:	je     4147a8 <_start@@Base+0x11498>
  41479a:	mov    rax,QWORD PTR [rbp-0x30]
  41479e:	cmp    rax,QWORD PTR [rbp-0x50]
  4147a2:	ja     414848 <_start@@Base+0x11538>
  4147a8:	mov    rax,QWORD PTR [rbp-0x18]
  4147ac:	mov    rdi,rax
  4147af:	call   403210 <rewind@plt>
  4147b4:	cmp    QWORD PTR [rbp-0x30],0x0
  4147b9:	je     4147c1 <_start@@Base+0x114b1>
  4147bb:	mov    rax,QWORD PTR [rbp-0x30]
  4147bf:	jmp    4147c6 <_start@@Base+0x114b6>
  4147c1:	mov    eax,0x1
  4147c6:	mov    rdi,rax
  4147c9:	call   4032a0 <malloc@plt>
  4147ce:	mov    QWORD PTR [rbp-0x20],rax
  4147d2:	cmp    QWORD PTR [rbp-0x20],0x0
  4147d7:	je     41484b <_start@@Base+0x1153b>
  4147d9:	mov    QWORD PTR [rbp-0x28],0x0
  4147e1:	jmp    4147eb <_start@@Base+0x114db>
  4147e3:	mov    rax,QWORD PTR [rbp-0x10]
  4147e7:	add    QWORD PTR [rbp-0x28],rax
  4147eb:	mov    rax,QWORD PTR [rbp-0x30]
  4147ef:	sub    rax,QWORD PTR [rbp-0x28]
  4147f3:	mov    rcx,QWORD PTR [rbp-0x20]
  4147f7:	mov    rdx,QWORD PTR [rbp-0x28]
  4147fb:	lea    rdi,[rcx+rdx*1]
  4147ff:	mov    rdx,QWORD PTR [rbp-0x18]
  414803:	mov    rcx,rdx
  414806:	mov    rdx,rax
  414809:	mov    esi,0x1
  41480e:	call   4031c0 <fread@plt>
  414813:	mov    QWORD PTR [rbp-0x10],rax
  414817:	cmp    QWORD PTR [rbp-0x10],0x0
  41481c:	jne    4147e3 <_start@@Base+0x114d3>
  41481e:	mov    rax,QWORD PTR [rbp-0x28]
  414822:	cmp    rax,QWORD PTR [rbp-0x30]
  414826:	jne    41484e <_start@@Base+0x1153e>
  414828:	mov    rax,QWORD PTR [rbp-0x18]
  41482c:	mov    rdi,rax
  41482f:	call   4031e0 <fclose@plt>
  414834:	mov    rax,QWORD PTR [rbp-0x58]
  414838:	mov    rdx,QWORD PTR [rbp-0x30]
  41483c:	mov    QWORD PTR [rax],rdx
  41483f:	mov    rax,QWORD PTR [rbp-0x20]
  414843:	jmp    414885 <_start@@Base+0x11575>
  414845:	nop
  414846:	jmp    41484f <_start@@Base+0x1153f>
  414848:	nop
  414849:	jmp    41484f <_start@@Base+0x1153f>
  41484b:	nop
  41484c:	jmp    41484f <_start@@Base+0x1153f>
  41484e:	nop
  41484f:	cmp    QWORD PTR [rbp-0x18],0x0
  414854:	je     414862 <_start@@Base+0x11552>
  414856:	mov    rax,QWORD PTR [rbp-0x18]
  41485a:	mov    rdi,rax
  41485d:	call   4031e0 <fclose@plt>
  414862:	cmp    QWORD PTR [rbp-0x20],0x0
  414867:	je     414875 <_start@@Base+0x11565>
  414869:	mov    rax,QWORD PTR [rbp-0x20]
  41486d:	mov    rdi,rax
  414870:	call   4031a0 <free@plt>
  414875:	mov    rax,QWORD PTR [rbp-0x58]
  414879:	mov    rdx,QWORD PTR [rbp-0x30]
  41487d:	mov    QWORD PTR [rax],rdx
  414880:	mov    eax,0x0
  414885:	mov    rcx,QWORD PTR [rbp-0x8]
  414889:	xor    rcx,QWORD PTR fs:0x28
  414892:	je     414899 <_start@@Base+0x11589>
  414894:	call   403200 <__stack_chk_fail@plt>
  414899:	leave  
  41489a:	ret    

000000000041489b <verify_parse@@Base>:
  41489b:	endbr64 
  41489f:	push   rbp
  4148a0:	mov    rbp,rsp
  4148a3:	sub    rsp,0x30
  4148a7:	mov    QWORD PTR [rbp-0x28],rdi
  4148ab:	mov    rax,QWORD PTR [rbp-0x28]
  4148af:	lea    rsi,[rip+0xd866]        # 42211c <_IO_stdin_used@@Base+0x11c>
  4148b6:	mov    rdi,rax
  4148b9:	call   403a51 <_start@@Base+0x741>
  4148be:	mov    QWORD PTR [rbp-0x18],rax
  4148c2:	mov    rax,QWORD PTR [rbp-0x18]
  4148c6:	mov    rdi,rax
  4148c9:	call   403a9d <_start@@Base+0x78d>
  4148ce:	mov    QWORD PTR [rbp-0x10],rax
  4148d2:	cmp    QWORD PTR [rbp-0x10],0x0
  4148d7:	jne    4148f8 <verify_parse@@Base+0x5d>
  4148d9:	lea    rcx,[rip+0xda20]        # 422300 <_IO_stdin_used@@Base+0x300>
  4148e0:	mov    edx,0x2d
  4148e5:	lea    rsi,[rip+0xd8a4]        # 422190 <_IO_stdin_used@@Base+0x190>
  4148ec:	lea    rdi,[rip+0xd909]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  4148f3:	call   403220 <__assert_fail@plt>
  4148f8:	mov    rax,QWORD PTR [rbp-0x10]
  4148fc:	mov    rdi,rax
  4148ff:	call   403932 <_start@@Base+0x622>
  414904:	vmovss xmm1,DWORD PTR [rip+0xda5c]        # 422368 <_IO_stdin_used@@Base+0x368>
  41490c:	vucomiss xmm0,xmm1
  414910:	jp     414920 <verify_parse@@Base+0x85>
  414912:	vmovss xmm1,DWORD PTR [rip+0xda4e]        # 422368 <_IO_stdin_used@@Base+0x368>
  41491a:	vucomiss xmm0,xmm1
  41491e:	je     41493f <verify_parse@@Base+0xa4>
  414920:	lea    rcx,[rip+0xd9d9]        # 422300 <_IO_stdin_used@@Base+0x300>
  414927:	mov    edx,0x2e
  41492c:	lea    rsi,[rip+0xd85d]        # 422190 <_IO_stdin_used@@Base+0x190>
  414933:	lea    rdi,[rip+0xd8c2]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  41493a:	call   403220 <__assert_fail@plt>
  41493f:	mov    rax,QWORD PTR [rbp-0x10]
  414943:	mov    rdi,rax
  414946:	call   403963 <_start@@Base+0x653>
  41494b:	vucomiss xmm0,DWORD PTR [rip+0xda19]        # 42236c <_IO_stdin_used@@Base+0x36c>
  414953:	jp     41495f <verify_parse@@Base+0xc4>
  414955:	vucomiss xmm0,DWORD PTR [rip+0xda0f]        # 42236c <_IO_stdin_used@@Base+0x36c>
  41495d:	je     41497e <verify_parse@@Base+0xe3>
  41495f:	lea    rcx,[rip+0xd99a]        # 422300 <_IO_stdin_used@@Base+0x300>
  414966:	mov    edx,0x2f
  41496b:	lea    rsi,[rip+0xd81e]        # 422190 <_IO_stdin_used@@Base+0x190>
  414972:	lea    rdi,[rip+0xd883]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  414979:	call   403220 <__assert_fail@plt>
  41497e:	mov    rax,QWORD PTR [rbp-0x10]
  414982:	mov    rdi,rax
  414985:	call   403998 <_start@@Base+0x688>
  41498a:	vucomiss xmm0,DWORD PTR [rip+0xd9ce]        # 422360 <_IO_stdin_used@@Base+0x360>
  414992:	jp     41499e <verify_parse@@Base+0x103>
  414994:	vucomiss xmm0,DWORD PTR [rip+0xd9c4]        # 422360 <_IO_stdin_used@@Base+0x360>
  41499c:	je     4149bd <verify_parse@@Base+0x122>
  41499e:	lea    rcx,[rip+0xd95b]        # 422300 <_IO_stdin_used@@Base+0x300>
  4149a5:	mov    edx,0x30
  4149aa:	lea    rsi,[rip+0xd7df]        # 422190 <_IO_stdin_used@@Base+0x190>
  4149b1:	lea    rdi,[rip+0xd844]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  4149b8:	call   403220 <__assert_fail@plt>
  4149bd:	mov    rax,QWORD PTR [rbp-0x10]
  4149c1:	mov    rdi,rax
  4149c4:	call   4039cd <_start@@Base+0x6bd>
  4149c9:	vucomisd xmm0,QWORD PTR [rip+0xd99f]        # 422370 <_IO_stdin_used@@Base+0x370>
  4149d1:	jp     4149dd <verify_parse@@Base+0x142>
  4149d3:	vucomisd xmm0,QWORD PTR [rip+0xd995]        # 422370 <_IO_stdin_used@@Base+0x370>
  4149db:	je     4149fc <verify_parse@@Base+0x161>
  4149dd:	lea    rcx,[rip+0xd91c]        # 422300 <_IO_stdin_used@@Base+0x300>
  4149e4:	mov    edx,0x31
  4149e9:	lea    rsi,[rip+0xd7a0]        # 422190 <_IO_stdin_used@@Base+0x190>
  4149f0:	lea    rdi,[rip+0xd805]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  4149f7:	call   403220 <__assert_fail@plt>
  4149fc:	mov    rax,QWORD PTR [rbp-0x10]
  414a00:	mov    rdi,rax
  414a03:	call   403a05 <_start@@Base+0x6f5>
  414a08:	cmp    al,0x2
  414a0a:	je     414a2b <verify_parse@@Base+0x190>
  414a0c:	lea    rcx,[rip+0xd8ed]        # 422300 <_IO_stdin_used@@Base+0x300>
  414a13:	mov    edx,0x32
  414a18:	lea    rsi,[rip+0xd771]        # 422190 <_IO_stdin_used@@Base+0x190>
  414a1f:	lea    rdi,[rip+0xd7d6]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  414a26:	call   403220 <__assert_fail@plt>
  414a2b:	mov    rax,QWORD PTR [rbp-0x10]
  414a2f:	mov    rdi,rax
  414a32:	call   403a31 <_start@@Base+0x721>
  414a37:	mov    QWORD PTR [rbp-0x8],rax
  414a3b:	cmp    QWORD PTR [rbp-0x8],0x0
  414a40:	jne    414a61 <verify_parse@@Base+0x1c6>
  414a42:	lea    rcx,[rip+0xd8b7]        # 422300 <_IO_stdin_used@@Base+0x300>
  414a49:	mov    edx,0x34
  414a4e:	lea    rsi,[rip+0xd73b]        # 422190 <_IO_stdin_used@@Base+0x190>
  414a55:	lea    rdi,[rip+0xd7a0]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  414a5c:	call   403220 <__assert_fail@plt>
  414a61:	mov    rax,QWORD PTR [rbp-0x8]
  414a65:	mov    rdi,rax
  414a68:	call   4038de <_start@@Base+0x5ce>
  414a6d:	cmp    ax,0x5
  414a71:	je     414a92 <verify_parse@@Base+0x1f7>
  414a73:	lea    rcx,[rip+0xd886]        # 422300 <_IO_stdin_used@@Base+0x300>
  414a7a:	mov    edx,0x35
  414a7f:	lea    rsi,[rip+0xd70a]        # 422190 <_IO_stdin_used@@Base+0x190>
  414a86:	lea    rdi,[rip+0xd76f]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  414a8d:	call   403220 <__assert_fail@plt>
  414a92:	mov    rax,QWORD PTR [rbp-0x8]
  414a96:	mov    rdi,rax
  414a99:	call   403906 <_start@@Base+0x5f6>
  414a9e:	cmp    al,0x6
  414aa0:	je     414ac1 <verify_parse@@Base+0x226>
  414aa2:	lea    rcx,[rip+0xd857]        # 422300 <_IO_stdin_used@@Base+0x300>
  414aa9:	mov    edx,0x36
  414aae:	lea    rsi,[rip+0xd6db]        # 422190 <_IO_stdin_used@@Base+0x190>
  414ab5:	lea    rdi,[rip+0xd740]        # 4221fc <_IO_stdin_used@@Base+0x1fc>
  414abc:	call   403220 <__assert_fail@plt>
  414ac1:	mov    eax,0x0
  414ac6:	leave  
  414ac7:	ret    

0000000000414ac8 <test_parse@@Base>:
  414ac8:	endbr64 
  414acc:	push   rbp
  414acd:	mov    rbp,rsp
  414ad0:	sub    rsp,0x210
  414ad7:	mov    rax,QWORD PTR fs:0x28
  414ae0:	mov    QWORD PTR [rbp-0x8],rax
  414ae4:	xor    eax,eax
  414ae6:	mov    QWORD PTR [rbp-0x1f8],0x0
  414af1:	lea    rax,[rbp-0x190]
  414af8:	mov    QWORD PTR [rbp-0x1f0],rax
  414aff:	mov    DWORD PTR [rbp-0x210],0xffffffff
  414b09:	mov    DWORD PTR [rbp-0x20c],0x0
  414b13:	mov    rax,QWORD PTR [rbp-0x1f0]
  414b1a:	mov    rdi,rax
  414b1d:	call   4158b1 <flatcc_builder_init@@Base>
  414b22:	mov    rax,0x42a100
  414b29:	mov    rax,QWORD PTR [rax]
  414b2c:	lea    rdx,[rbp-0x208]
  414b33:	mov    esi,0x2800
  414b38:	mov    rdi,rax
  414b3b:	call   4146f4 <_start@@Base+0x113e4>
  414b40:	mov    QWORD PTR [rbp-0x1e8],rax
  414b47:	cmp    QWORD PTR [rbp-0x1e8],0x0
  414b4f:	jne    414b83 <test_parse@@Base+0xbb>
  414b51:	mov    rax,0x42a100
  414b58:	mov    rdx,QWORD PTR [rax]
  414b5b:	mov    rax,QWORD PTR [rip+0x15496]        # 429ff8 <stderr@GLIBC_2.2.5>
  414b62:	mov    rax,QWORD PTR [rax]
  414b65:	lea    rsi,[rip+0xd694]        # 422200 <_IO_stdin_used@@Base+0x200>
  414b6c:	mov    rdi,rax
  414b6f:	mov    eax,0x0
  414b74:	call   403270 <fprintf@plt>
  414b79:	mov    eax,0xffffffff
  414b7e:	jmp    414d57 <test_parse@@Base+0x28f>
  414b83:	mov    rcx,QWORD PTR [rbp-0x208]
  414b8a:	mov    edi,DWORD PTR [rbp-0x20c]
  414b90:	mov    rdx,QWORD PTR [rbp-0x1e8]
  414b97:	lea    rsi,[rbp-0x1e0]
  414b9e:	mov    rax,QWORD PTR [rbp-0x1f0]
  414ba5:	mov    r8d,edi
  414ba8:	mov    rdi,rax
  414bab:	call   4142fa <_start@@Base+0x10fea>
  414bb0:	test   eax,eax
  414bb2:	jne    414cf1 <test_parse@@Base+0x229>
  414bb8:	mov    ecx,DWORD PTR [rbp-0x1c8]
  414bbe:	mov    rax,0x42a100
  414bc5:	mov    rdx,QWORD PTR [rax]
  414bc8:	mov    rax,QWORD PTR [rip+0x15429]        # 429ff8 <stderr@GLIBC_2.2.5>
  414bcf:	mov    rax,QWORD PTR [rax]
  414bd2:	lea    rsi,[rip+0xd64f]        # 422228 <_IO_stdin_used@@Base+0x228>
  414bd9:	mov    rdi,rax
  414bdc:	mov    eax,0x0
  414be1:	call   403270 <fprintf@plt>
  414be6:	lea    rdx,[rbp-0x200]
  414bed:	mov    rax,QWORD PTR [rbp-0x1f0]
  414bf4:	mov    rsi,rdx
  414bf7:	mov    rdi,rax
  414bfa:	call   41a3ed <flatcc_builder_finalize_aligned_buffer@@Base>
  414bff:	mov    QWORD PTR [rbp-0x1f8],rax
  414c06:	mov    rax,QWORD PTR [rip+0x153d3]        # 429fe0 <stdout@GLIBC_2.2.5>
  414c0d:	mov    rcx,QWORD PTR [rax]
  414c10:	mov    rdx,QWORD PTR [rbp-0x200]
  414c17:	mov    rax,QWORD PTR [rbp-0x1f8]
  414c1e:	mov    rsi,rax
  414c21:	lea    rdi,[rip+0xd628]        # 422250 <_IO_stdin_used@@Base+0x250>
  414c28:	call   414412 <_start@@Base+0x11102>
  414c2d:	mov    rcx,QWORD PTR [rbp-0x200]
  414c34:	mov    rdx,QWORD PTR [rbp-0x208]
  414c3b:	mov    rax,QWORD PTR [rip+0x153b6]        # 429ff8 <stderr@GLIBC_2.2.5>
  414c42:	mov    rax,QWORD PTR [rax]
  414c45:	lea    rsi,[rip+0xd624]        # 422270 <_IO_stdin_used@@Base+0x270>
  414c4c:	mov    rdi,rax
  414c4f:	mov    eax,0x0
  414c54:	call   403270 <fprintf@plt>
  414c59:	mov    rax,QWORD PTR [rbp-0x1f8]
  414c60:	mov    rdi,rax
  414c63:	call   41489b <verify_parse@@Base>
  414c68:	mov    rax,QWORD PTR [rip+0x15371]        # 429fe0 <stdout@GLIBC_2.2.5>
  414c6f:	mov    rcx,QWORD PTR [rax]
  414c72:	mov    rdx,QWORD PTR [rbp-0x200]
  414c79:	mov    rax,QWORD PTR [rbp-0x1f8]
  414c80:	mov    rsi,rax
  414c83:	lea    rdi,[rip+0xd609]        # 422293 <_IO_stdin_used@@Base+0x293>
  414c8a:	call   4145c8 <_start@@Base+0x112b8>
  414c8f:	mov    rax,QWORD PTR [rbp-0x1f0]
  414c96:	mov    rdi,rax
  414c99:	call   415af8 <flatcc_builder_reset@@Base>
  414c9e:	mov    DWORD PTR [rbp-0x210],0x0
  414ca8:	cmp    QWORD PTR [rbp-0x1f8],0x0
  414cb0:	je     414cc1 <test_parse@@Base+0x1f9>
  414cb2:	mov    rax,QWORD PTR [rbp-0x1f8]
  414cb9:	mov    rdi,rax
  414cbc:	call   41a4ef <flatcc_builder_aligned_free@@Base>
  414cc1:	cmp    QWORD PTR [rbp-0x1e8],0x0
  414cc9:	je     414cda <test_parse@@Base+0x212>
  414ccb:	mov    rax,QWORD PTR [rbp-0x1e8]
  414cd2:	mov    rdi,rax
  414cd5:	call   4031a0 <free@plt>
  414cda:	mov    rax,QWORD PTR [rbp-0x1f0]
  414ce1:	mov    rdi,rax
  414ce4:	call   415b20 <flatcc_builder_clear@@Base>
  414ce9:	mov    eax,DWORD PTR [rbp-0x210]
  414cef:	jmp    414d57 <test_parse@@Base+0x28f>
  414cf1:	nop
  414cf2:	endbr64 
  414cf6:	mov    eax,DWORD PTR [rbp-0x1c0]
  414cfc:	mov    edi,eax
  414cfe:	call   41eee0 <flatcc_json_parser_error_string@@Base>
  414d03:	mov    rsi,rax
  414d06:	mov    rdx,QWORD PTR [rbp-0x1a8]
  414d0d:	mov    rax,QWORD PTR [rbp-0x1d8]
  414d14:	sub    rdx,rax
  414d17:	mov    rax,rdx
  414d1a:	inc    eax
  414d1c:	mov    edi,eax
  414d1e:	mov    ecx,DWORD PTR [rbp-0x1c8]
  414d24:	mov    rax,0x42a100
  414d2b:	mov    rdx,QWORD PTR [rax]
  414d2e:	mov    rax,QWORD PTR [rip+0x152c3]        # 429ff8 <stderr@GLIBC_2.2.5>
  414d35:	mov    rax,QWORD PTR [rax]
  414d38:	mov    r9,rsi
  414d3b:	mov    r8d,edi
  414d3e:	lea    rsi,[rip+0xd555]        # 42229a <_IO_stdin_used@@Base+0x29a>
  414d45:	mov    rdi,rax
  414d48:	mov    eax,0x0
  414d4d:	call   403270 <fprintf@plt>
  414d52:	jmp    414ca8 <test_parse@@Base+0x1e0>
  414d57:	mov    rsi,QWORD PTR [rbp-0x8]
  414d5b:	xor    rsi,QWORD PTR fs:0x28
  414d64:	je     414d6b <test_parse@@Base+0x2a3>
  414d66:	call   403200 <__stack_chk_fail@plt>
  414d6b:	leave  
  414d6c:	ret    

0000000000414d6d <main@@Base>:
  414d6d:	endbr64 
  414d71:	push   rbp
  414d72:	mov    rbp,rsp
  414d75:	sub    rsp,0x10
  414d79:	mov    DWORD PTR [rbp-0x4],edi
  414d7c:	mov    QWORD PTR [rbp-0x10],rsi
  414d80:	mov    rax,QWORD PTR [rip+0x15271]        # 429ff8 <stderr@GLIBC_2.2.5>
  414d87:	mov    rax,QWORD PTR [rax]
  414d8a:	mov    rcx,rax
  414d8d:	mov    edx,0x10
  414d92:	mov    esi,0x1
  414d97:	lea    rdi,[rip+0xd50a]        # 4222a8 <_IO_stdin_used@@Base+0x2a8>
  414d9e:	call   4032f0 <fwrite@plt>
  414da3:	cmp    DWORD PTR [rbp-0x4],0x1
  414da7:	je     414ddc <main@@Base+0x6f>
  414da9:	cmp    DWORD PTR [rbp-0x4],0x2
  414dad:	je     414ddc <main@@Base+0x6f>
  414daf:	mov    rax,QWORD PTR [rip+0x15242]        # 429ff8 <stderr@GLIBC_2.2.5>
  414db6:	mov    rax,QWORD PTR [rax]
  414db9:	mov    rcx,rax
  414dbc:	mov    edx,0x3f
  414dc1:	mov    esi,0x1
  414dc6:	lea    rdi,[rip+0xd4f3]        # 4222c0 <_IO_stdin_used@@Base+0x2c0>
  414dcd:	call   4032f0 <fwrite@plt>
  414dd2:	mov    edi,0x1
  414dd7:	call   4032e0 <exit@plt>
  414ddc:	cmp    DWORD PTR [rbp-0x4],0x2
  414de0:	jne    414df4 <main@@Base+0x87>
  414de2:	mov    rax,QWORD PTR [rbp-0x10]
  414de6:	mov    rdx,QWORD PTR [rax+0x8]
  414dea:	mov    rax,0x42a100
  414df1:	mov    QWORD PTR [rax],rdx
  414df4:	mov    eax,0x0
  414df9:	call   414ac8 <test_parse@@Base>
  414dfe:	leave  
  414dff:	ret    
  414e00:	push   rbp
  414e01:	mov    rbp,rsp
  414e04:	sub    rsp,0x30
  414e08:	mov    QWORD PTR [rbp-0x28],rdi
  414e0c:	mov    QWORD PTR [rbp-0x30],rsi
  414e10:	mov    rax,QWORD PTR fs:0x28
  414e19:	mov    QWORD PTR [rbp-0x8],rax
  414e1d:	xor    eax,eax
  414e1f:	mov    QWORD PTR [rbp-0x10],0x0
  414e27:	cmp    QWORD PTR [rbp-0x28],0x7
  414e2c:	ja     414e36 <main@@Base+0xc9>
  414e2e:	mov    QWORD PTR [rbp-0x28],0x8
  414e36:	mov    rdx,QWORD PTR [rbp-0x30]
  414e3a:	mov    rcx,QWORD PTR [rbp-0x28]
  414e3e:	lea    rax,[rbp-0x10]
  414e42:	mov    rsi,rcx
  414e45:	mov    rdi,rax
  414e48:	call   403300 <posix_memalign@plt>
  414e4d:	mov    DWORD PTR [rbp-0x14],eax
  414e50:	cmp    DWORD PTR [rbp-0x14],0x0
  414e54:	je     414e73 <main@@Base+0x106>
  414e56:	mov    rax,QWORD PTR [rbp-0x10]
  414e5a:	test   rax,rax
  414e5d:	je     414e73 <main@@Base+0x106>
  414e5f:	mov    rax,QWORD PTR [rbp-0x10]
  414e63:	mov    rdi,rax
  414e66:	call   4031a0 <free@plt>
  414e6b:	mov    QWORD PTR [rbp-0x10],0x0
  414e73:	mov    rax,QWORD PTR [rbp-0x10]
  414e77:	mov    rcx,QWORD PTR [rbp-0x8]
  414e7b:	xor    rcx,QWORD PTR fs:0x28
  414e84:	je     414e8b <main@@Base+0x11e>
  414e86:	call   403200 <__stack_chk_fail@plt>
  414e8b:	leave  
  414e8c:	ret    
  414e8d:	push   rbp
  414e8e:	mov    rbp,rsp
  414e91:	mov    DWORD PTR [rbp-0x4],edi
  414e94:	mov    eax,DWORD PTR [rbp-0x4]
  414e97:	pop    rbp
  414e98:	ret    
  414e99:	push   rbp
  414e9a:	mov    rbp,rsp
  414e9d:	mov    eax,edi
  414e9f:	mov    BYTE PTR [rbp-0x4],al
  414ea2:	movzx  eax,BYTE PTR [rbp-0x4]
  414ea6:	pop    rbp
  414ea7:	ret    
  414ea8:	push   rbp
  414ea9:	mov    rbp,rsp
  414eac:	mov    DWORD PTR [rbp-0x4],edi
  414eaf:	mov    eax,DWORD PTR [rbp-0x4]
  414eb2:	pop    rbp
  414eb3:	ret    
  414eb4:	push   rbp
  414eb5:	mov    rbp,rsp
  414eb8:	mov    QWORD PTR [rbp-0x8],rdi
  414ebc:	mov    QWORD PTR [rbp-0x10],rsi
  414ec0:	mov    rax,QWORD PTR [rbp-0x8]
  414ec4:	mov    rdx,QWORD PTR [rax]
  414ec7:	mov    rax,QWORD PTR [rbp-0x8]
  414ecb:	mov    rax,QWORD PTR [rax+0x8]
  414ecf:	cmp    rdx,rax
  414ed2:	jne    414ef4 <main@@Base+0x187>
  414ed4:	cmp    QWORD PTR [rbp-0x10],0x0
  414ed9:	je     414eea <main@@Base+0x17d>
  414edb:	mov    rax,QWORD PTR [rbp-0x8]
  414edf:	mov    rdx,QWORD PTR [rax+0x30]
  414ee3:	mov    rax,QWORD PTR [rbp-0x10]
  414ee7:	mov    QWORD PTR [rax],rdx
  414eea:	mov    rax,QWORD PTR [rbp-0x8]
  414eee:	mov    rax,QWORD PTR [rax+0x10]
  414ef2:	jmp    414f0b <main@@Base+0x19e>
  414ef4:	cmp    QWORD PTR [rbp-0x10],0x0
  414ef9:	je     414f06 <main@@Base+0x199>
  414efb:	mov    rax,QWORD PTR [rbp-0x10]
  414eff:	mov    QWORD PTR [rax],0x0
  414f06:	mov    eax,0x0
  414f0b:	pop    rbp
  414f0c:	ret    
  414f0d:	push   rbp
  414f0e:	mov    rbp,rsp
  414f11:	sub    rsp,0x20
  414f15:	mov    QWORD PTR [rbp-0x18],rdi
  414f19:	mov    QWORD PTR [rbp-0x20],rsi
  414f1d:	mov    rdx,QWORD PTR [rbp-0x20]
  414f21:	mov    rax,QWORD PTR [rbp-0x18]
  414f25:	mov    esi,0x0
  414f2a:	mov    rdi,rax
  414f2d:	call   403250 <memchr@plt>
  414f32:	mov    QWORD PTR [rbp-0x8],rax
  414f36:	cmp    QWORD PTR [rbp-0x8],0x0
  414f3b:	je     414f47 <main@@Base+0x1da>
  414f3d:	mov    rax,QWORD PTR [rbp-0x8]
  414f41:	sub    rax,QWORD PTR [rbp-0x18]
  414f45:	jmp    414f4b <main@@Base+0x1de>
  414f47:	mov    rax,QWORD PTR [rbp-0x20]
  414f4b:	leave  
  414f4c:	ret    

0000000000414f4d <flatcc_builder_default_alloc@@Base>:
  414f4d:	endbr64 
  414f51:	push   rbp
  414f52:	mov    rbp,rsp
  414f55:	sub    rsp,0x30
  414f59:	mov    QWORD PTR [rbp-0x18],rdi
  414f5d:	mov    QWORD PTR [rbp-0x20],rsi
  414f61:	mov    QWORD PTR [rbp-0x28],rdx
  414f65:	mov    DWORD PTR [rbp-0x2c],ecx
  414f68:	mov    DWORD PTR [rbp-0x30],r8d
  414f6c:	cmp    QWORD PTR [rbp-0x28],0x0
  414f71:	jne    414faf <flatcc_builder_default_alloc@@Base+0x62>
  414f73:	mov    rax,QWORD PTR [rbp-0x20]
  414f77:	mov    rax,QWORD PTR [rax]
  414f7a:	test   rax,rax
  414f7d:	je     414fa5 <flatcc_builder_default_alloc@@Base+0x58>
  414f7f:	mov    rax,QWORD PTR [rbp-0x20]
  414f83:	mov    rax,QWORD PTR [rax]
  414f86:	mov    rdi,rax
  414f89:	call   4031a0 <free@plt>
  414f8e:	mov    rax,QWORD PTR [rbp-0x20]
  414f92:	mov    QWORD PTR [rax],0x0
  414f99:	mov    rax,QWORD PTR [rbp-0x20]
  414f9d:	mov    QWORD PTR [rax+0x8],0x0
  414fa5:	mov    eax,0x0
  414faa:	jmp    4150be <flatcc_builder_default_alloc@@Base+0x171>
  414faf:	cmp    DWORD PTR [rbp-0x30],0x4
  414fb3:	je     414fe5 <flatcc_builder_default_alloc@@Base+0x98>
  414fb5:	cmp    DWORD PTR [rbp-0x30],0x4
  414fb9:	jg     414fc3 <flatcc_builder_default_alloc@@Base+0x76>
  414fbb:	cmp    DWORD PTR [rbp-0x30],0x1
  414fbf:	je     414fd1 <flatcc_builder_default_alloc@@Base+0x84>
  414fc1:	jmp    414ff9 <flatcc_builder_default_alloc@@Base+0xac>
  414fc3:	cmp    DWORD PTR [rbp-0x30],0x5
  414fc7:	je     414fdb <flatcc_builder_default_alloc@@Base+0x8e>
  414fc9:	cmp    DWORD PTR [rbp-0x30],0x7
  414fcd:	je     414fef <flatcc_builder_default_alloc@@Base+0xa2>
  414fcf:	jmp    414ff9 <flatcc_builder_default_alloc@@Base+0xac>
  414fd1:	mov    QWORD PTR [rbp-0x10],0x100
  414fd9:	jmp    415002 <flatcc_builder_default_alloc@@Base+0xb5>
  414fdb:	mov    rax,QWORD PTR [rbp-0x28]
  414fdf:	mov    QWORD PTR [rbp-0x10],rax
  414fe3:	jmp    415002 <flatcc_builder_default_alloc@@Base+0xb5>
  414fe5:	mov    QWORD PTR [rbp-0x10],0x120
  414fed:	jmp    415002 <flatcc_builder_default_alloc@@Base+0xb5>
  414fef:	mov    QWORD PTR [rbp-0x10],0x40
  414ff7:	jmp    415002 <flatcc_builder_default_alloc@@Base+0xb5>
  414ff9:	mov    QWORD PTR [rbp-0x10],0x20
  415001:	nop
  415002:	jmp    415008 <flatcc_builder_default_alloc@@Base+0xbb>
  415004:	shl    QWORD PTR [rbp-0x10],1
  415008:	mov    rax,QWORD PTR [rbp-0x10]
  41500c:	cmp    rax,QWORD PTR [rbp-0x28]
  415010:	jb     415004 <flatcc_builder_default_alloc@@Base+0xb7>
  415012:	mov    rax,QWORD PTR [rbp-0x20]
  415016:	mov    rax,QWORD PTR [rax+0x8]
  41501a:	cmp    QWORD PTR [rbp-0x28],rax
  41501e:	ja     41503b <flatcc_builder_default_alloc@@Base+0xee>
  415020:	mov    rax,QWORD PTR [rbp-0x20]
  415024:	mov    rax,QWORD PTR [rax+0x8]
  415028:	shr    rax,1
  41502b:	cmp    QWORD PTR [rbp-0x10],rax
  41502f:	ja     41503b <flatcc_builder_default_alloc@@Base+0xee>
  415031:	mov    eax,0x0
  415036:	jmp    4150be <flatcc_builder_default_alloc@@Base+0x171>
  41503b:	mov    rax,QWORD PTR [rbp-0x20]
  41503f:	mov    rax,QWORD PTR [rax]
  415042:	mov    rdx,QWORD PTR [rbp-0x10]
  415046:	mov    rsi,rdx
  415049:	mov    rdi,rax
  41504c:	call   4032c0 <realloc@plt>
  415051:	mov    QWORD PTR [rbp-0x8],rax
  415055:	cmp    QWORD PTR [rbp-0x8],0x0
  41505a:	jne    415063 <flatcc_builder_default_alloc@@Base+0x116>
  41505c:	mov    eax,0xffffffff
  415061:	jmp    4150be <flatcc_builder_default_alloc@@Base+0x171>
  415063:	cmp    DWORD PTR [rbp-0x2c],0x0
  415067:	je     4150a2 <flatcc_builder_default_alloc@@Base+0x155>
  415069:	mov    rax,QWORD PTR [rbp-0x20]
  41506d:	mov    rax,QWORD PTR [rax+0x8]
  415071:	cmp    QWORD PTR [rbp-0x10],rax
  415075:	jbe    4150a2 <flatcc_builder_default_alloc@@Base+0x155>
  415077:	mov    rax,QWORD PTR [rbp-0x20]
  41507b:	mov    rax,QWORD PTR [rax+0x8]
  41507f:	mov    rdx,QWORD PTR [rbp-0x10]
  415083:	sub    rdx,rax
  415086:	mov    rax,QWORD PTR [rbp-0x20]
  41508a:	mov    rcx,QWORD PTR [rax+0x8]
  41508e:	mov    rax,QWORD PTR [rbp-0x8]
  415092:	add    rax,rcx
  415095:	mov    esi,0x0
  41509a:	mov    rdi,rax
  41509d:	call   403230 <memset@plt>
  4150a2:	mov    rax,QWORD PTR [rbp-0x20]
  4150a6:	mov    rdx,QWORD PTR [rbp-0x8]
  4150aa:	mov    QWORD PTR [rax],rdx
  4150ad:	mov    rax,QWORD PTR [rbp-0x20]
  4150b1:	mov    rdx,QWORD PTR [rbp-0x10]
  4150b5:	mov    QWORD PTR [rax+0x8],rdx
  4150b9:	mov    eax,0x0
  4150be:	leave  
  4150bf:	ret    
  4150c0:	push   rbp
  4150c1:	mov    rbp,rsp
  4150c4:	mov    QWORD PTR [rbp-0x18],rdi
  4150c8:	mov    DWORD PTR [rbp-0x1c],esi
  4150cb:	mov    rax,QWORD PTR [rbp-0x18]
  4150cf:	add    rax,0x58
  4150d3:	add    rax,0x10
  4150d7:	mov    QWORD PTR [rbp-0x8],rax
  4150db:	mov    rax,QWORD PTR [rbp-0x18]
  4150df:	mov    rdx,QWORD PTR [rax+0x68]
  4150e3:	mov    rax,QWORD PTR [rbp-0x18]
  4150e7:	mov    eax,DWORD PTR [rax+0x28]
  4150ea:	mov    eax,eax
  4150ec:	add    rdx,rax
  4150ef:	mov    rax,QWORD PTR [rbp-0x18]
  4150f3:	mov    QWORD PTR [rax+0x18],rdx
  4150f7:	mov    rax,QWORD PTR [rbp-0x8]
  4150fb:	mov    rax,QWORD PTR [rax+0x8]
  4150ff:	mov    edx,eax
  415101:	mov    rax,QWORD PTR [rbp-0x18]
  415105:	mov    eax,DWORD PTR [rax+0x28]
  415108:	sub    edx,eax
  41510a:	mov    rax,QWORD PTR [rbp-0x18]
  41510e:	mov    DWORD PTR [rax+0x24],edx
  415111:	mov    rax,QWORD PTR [rbp-0x18]
  415115:	mov    eax,DWORD PTR [rax+0x24]
  415118:	cmp    DWORD PTR [rbp-0x1c],eax
  41511b:	jae    415127 <flatcc_builder_default_alloc@@Base+0x1da>
  41511d:	mov    rax,QWORD PTR [rbp-0x18]
  415121:	mov    edx,DWORD PTR [rbp-0x1c]
  415124:	mov    DWORD PTR [rax+0x24],edx
  415127:	mov    rax,QWORD PTR [rbp-0x18]
  41512b:	mov    rax,QWORD PTR [rax+0x30]
  41512f:	mov    edx,DWORD PTR [rbp-0x1c]
  415132:	mov    DWORD PTR [rax+0x4],edx
  415135:	nop
  415136:	pop    rbp
  415137:	ret    
  415138:	endbr64 
  41513c:	push   rbp
  41513d:	mov    rbp,rsp
  415140:	sub    rsp,0x30
  415144:	mov    QWORD PTR [rbp-0x18],rdi
  415148:	mov    QWORD PTR [rbp-0x20],rsi
  41514c:	mov    DWORD PTR [rbp-0x24],edx
  41514f:	mov    rax,QWORD PTR [rbp-0x18]
  415153:	add    rax,0x58
  415157:	add    rax,0x10
  41515b:	mov    QWORD PTR [rbp-0x8],rax
  41515f:	mov    rax,QWORD PTR [rbp-0x18]
  415163:	mov    rax,QWORD PTR [rax+0x50]
  415167:	mov    rdx,QWORD PTR [rbp-0x18]
  41516b:	mov    edx,DWORD PTR [rdx+0x28]
  41516e:	mov    ecx,edx
  415170:	mov    rdx,QWORD PTR [rbp-0x20]
  415174:	lea    r9,[rcx+rdx*1]
  415178:	mov    rdx,QWORD PTR [rbp-0x18]
  41517c:	mov    rdi,QWORD PTR [rdx+0x40]
  415180:	mov    rsi,QWORD PTR [rbp-0x8]
  415184:	mov    r8d,0x1
  41518a:	mov    ecx,0x1
  41518f:	mov    rdx,r9
  415192:	call   rax
  415194:	test   eax,eax
  415196:	je     41519f <flatcc_builder_default_alloc@@Base+0x252>
  415198:	mov    eax,0xffffffff
  41519d:	jmp    4151b5 <flatcc_builder_default_alloc@@Base+0x268>
  41519f:	mov    edx,DWORD PTR [rbp-0x24]
  4151a2:	mov    rax,QWORD PTR [rbp-0x18]
  4151a6:	mov    esi,edx
  4151a8:	mov    rdi,rax
  4151ab:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  4151b0:	mov    eax,0x0
  4151b5:	leave  
  4151b6:	ret    
  4151b7:	push   rbp
  4151b8:	mov    rbp,rsp
  4151bb:	sub    rsp,0x20
  4151bf:	mov    QWORD PTR [rbp-0x18],rdi
  4151c3:	mov    DWORD PTR [rbp-0x1c],esi
  4151c6:	mov    rax,QWORD PTR [rbp-0x18]
  4151ca:	mov    eax,DWORD PTR [rax+0x20]
  4151cd:	mov    eax,eax
  4151cf:	mov    QWORD PTR [rbp-0x8],rax
  4151d3:	mov    rax,QWORD PTR [rbp-0x18]
  4151d7:	mov    edx,DWORD PTR [rax+0x20]
  4151da:	mov    eax,DWORD PTR [rbp-0x1c]
  4151dd:	add    edx,eax
  4151df:	mov    rax,QWORD PTR [rbp-0x18]
  4151e3:	mov    DWORD PTR [rax+0x20],edx
  4151e6:	mov    rax,QWORD PTR [rbp-0x18]
  4151ea:	mov    edx,DWORD PTR [rax+0x20]
  4151ed:	mov    rax,QWORD PTR [rbp-0x18]
  4151f1:	mov    eax,DWORD PTR [rax+0x24]
  4151f4:	cmp    edx,eax
  4151f6:	jb     415222 <flatcc_builder_default_alloc@@Base+0x2d5>
  4151f8:	mov    rax,QWORD PTR [rbp-0x18]
  4151fc:	mov    eax,DWORD PTR [rax+0x20]
  4151ff:	inc    eax
  415201:	mov    ecx,eax
  415203:	mov    rax,QWORD PTR [rbp-0x18]
  415207:	mov    edx,0xfffffffc
  41520c:	mov    rsi,rcx
  41520f:	mov    rdi,rax
  415212:	call   415138 <flatcc_builder_default_alloc@@Base+0x1eb>
  415217:	test   eax,eax
  415219:	je     415222 <flatcc_builder_default_alloc@@Base+0x2d5>
  41521b:	mov    eax,0x0
  415220:	jmp    415231 <flatcc_builder_default_alloc@@Base+0x2e4>
  415222:	mov    rax,QWORD PTR [rbp-0x18]
  415226:	mov    rdx,QWORD PTR [rax+0x18]
  41522a:	mov    rax,QWORD PTR [rbp-0x8]
  41522e:	add    rax,rdx
  415231:	leave  
  415232:	ret    
  415233:	push   rbp
  415234:	mov    rbp,rsp
  415237:	sub    rsp,0x10
  41523b:	mov    QWORD PTR [rbp-0x8],rdi
  41523f:	mov    DWORD PTR [rbp-0xc],esi
  415242:	mov    rax,QWORD PTR [rbp-0x8]
  415246:	mov    eax,DWORD PTR [rax+0x20]
  415249:	sub    eax,DWORD PTR [rbp-0xc]
  41524c:	mov    edx,eax
  41524e:	mov    rax,QWORD PTR [rbp-0x8]
  415252:	mov    DWORD PTR [rax+0x20],edx
  415255:	mov    eax,DWORD PTR [rbp-0xc]
  415258:	mov    rdx,QWORD PTR [rbp-0x8]
  41525c:	mov    rcx,QWORD PTR [rdx+0x18]
  415260:	mov    rdx,QWORD PTR [rbp-0x8]
  415264:	mov    edx,DWORD PTR [rdx+0x20]
  415267:	mov    edx,edx
  415269:	add    rcx,rdx
  41526c:	mov    rdx,rax
  41526f:	mov    esi,0x0
  415274:	mov    rdi,rcx
  415277:	call   403230 <memset@plt>
  41527c:	nop
  41527d:	leave  
  41527e:	ret    
  41527f:	push   rbp
  415280:	mov    rbp,rsp
  415283:	sub    rsp,0x30
  415287:	mov    QWORD PTR [rbp-0x18],rdi
  41528b:	mov    QWORD PTR [rbp-0x20],rsi
  41528f:	mov    DWORD PTR [rbp-0x24],edx
  415292:	mov    edx,DWORD PTR [rbp-0x24]
  415295:	mov    rax,QWORD PTR [rbp-0x18]
  415299:	mov    esi,edx
  41529b:	mov    rdi,rax
  41529e:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  4152a3:	mov    QWORD PTR [rbp-0x8],rax
  4152a7:	cmp    QWORD PTR [rbp-0x8],0x0
  4152ac:	jne    4152b5 <flatcc_builder_default_alloc@@Base+0x368>
  4152ae:	mov    eax,0x0
  4152b3:	jmp    4152cf <flatcc_builder_default_alloc@@Base+0x382>
  4152b5:	mov    edx,DWORD PTR [rbp-0x24]
  4152b8:	mov    rcx,QWORD PTR [rbp-0x20]
  4152bc:	mov    rax,QWORD PTR [rbp-0x8]
  4152c0:	mov    rsi,rcx
  4152c3:	mov    rdi,rax
  4152c6:	call   403290 <memcpy@plt>
  4152cb:	mov    rax,QWORD PTR [rbp-0x8]
  4152cf:	leave  
  4152d0:	ret    
  4152d1:	push   rbp
  4152d2:	mov    rbp,rsp
  4152d5:	sub    rsp,0x30
  4152d9:	mov    QWORD PTR [rbp-0x18],rdi
  4152dd:	mov    DWORD PTR [rbp-0x1c],esi
  4152e0:	mov    eax,ecx
  4152e2:	mov    WORD PTR [rbp-0x20],dx
  4152e6:	mov    WORD PTR [rbp-0x24],ax
  4152ea:	mov    rax,QWORD PTR [rbp-0x18]
  4152ee:	mov    edx,DWORD PTR [rax+0x20]
  4152f1:	movzx  eax,WORD PTR [rbp-0x20]
  4152f5:	add    eax,edx
  4152f7:	lea    edx,[rax-0x1]
  4152fa:	movzx  eax,WORD PTR [rbp-0x20]
  4152fe:	neg    eax
  415300:	and    eax,edx
  415302:	mov    DWORD PTR [rbp-0x4],eax
  415305:	mov    edx,DWORD PTR [rbp-0x4]
  415308:	mov    eax,DWORD PTR [rbp-0x1c]
  41530b:	add    edx,eax
  41530d:	mov    rax,QWORD PTR [rbp-0x18]
  415311:	mov    DWORD PTR [rax+0x20],edx
  415314:	mov    rax,QWORD PTR [rbp-0x18]
  415318:	mov    edx,DWORD PTR [rax+0x20]
  41531b:	mov    rax,QWORD PTR [rbp-0x18]
  41531f:	mov    eax,DWORD PTR [rax+0x24]
  415322:	cmp    edx,eax
  415324:	jb     415350 <flatcc_builder_default_alloc@@Base+0x403>
  415326:	mov    rax,QWORD PTR [rbp-0x18]
  41532a:	mov    eax,DWORD PTR [rax+0x20]
  41532d:	inc    eax
  41532f:	mov    ecx,eax
  415331:	mov    rax,QWORD PTR [rbp-0x18]
  415335:	mov    edx,0xfffc
  41533a:	mov    rsi,rcx
  41533d:	mov    rdi,rax
  415340:	call   415138 <flatcc_builder_default_alloc@@Base+0x1eb>
  415345:	test   eax,eax
  415347:	je     415350 <flatcc_builder_default_alloc@@Base+0x403>
  415349:	mov    eax,0x0
  41534e:	jmp    415397 <flatcc_builder_default_alloc@@Base+0x44a>
  415350:	mov    eax,DWORD PTR [rbp-0x4]
  415353:	mov    ecx,eax
  415355:	mov    rax,QWORD PTR [rbp-0x18]
  415359:	mov    rax,QWORD PTR [rax+0x8]
  41535d:	movzx  edx,WORD PTR [rbp-0x24]
  415361:	add    rdx,rdx
  415364:	add    rdx,rax
  415367:	lea    eax,[rcx+0x4]
  41536a:	mov    WORD PTR [rdx],ax
  41536d:	mov    rax,QWORD PTR [rbp-0x18]
  415371:	movzx  eax,WORD PTR [rax+0x10]
  415375:	cmp    WORD PTR [rbp-0x24],ax
  415379:	jb     415389 <flatcc_builder_default_alloc@@Base+0x43c>
  41537b:	movzx  eax,WORD PTR [rbp-0x24]
  41537f:	inc    eax
  415381:	mov    rdx,QWORD PTR [rbp-0x18]
  415385:	mov    WORD PTR [rdx+0x10],ax
  415389:	mov    rax,QWORD PTR [rbp-0x18]
  41538d:	mov    rdx,QWORD PTR [rax+0x18]
  415391:	mov    eax,DWORD PTR [rbp-0x4]
  415394:	add    rax,rdx
  415397:	leave  
  415398:	ret    
  415399:	push   rbp
  41539a:	mov    rbp,rsp
  41539d:	sub    rsp,0x20
  4153a1:	mov    QWORD PTR [rbp-0x18],rdi
  4153a5:	mov    eax,esi
  4153a7:	mov    WORD PTR [rbp-0x1c],ax
  4153ab:	mov    rax,QWORD PTR [rbp-0x18]
  4153af:	mov    eax,DWORD PTR [rax+0x20]
  4153b2:	add    eax,0x3
  4153b5:	and    eax,0xfffffffc
  4153b8:	mov    DWORD PTR [rbp-0x4],eax
  4153bb:	mov    eax,DWORD PTR [rbp-0x4]
  4153be:	lea    edx,[rax+0x4]
  4153c1:	mov    rax,QWORD PTR [rbp-0x18]
  4153c5:	mov    DWORD PTR [rax+0x20],edx
  4153c8:	mov    rax,QWORD PTR [rbp-0x18]
  4153cc:	mov    edx,DWORD PTR [rax+0x20]
  4153cf:	mov    rax,QWORD PTR [rbp-0x18]
  4153d3:	mov    eax,DWORD PTR [rax+0x24]
  4153d6:	cmp    edx,eax
  4153d8:	jbe    415402 <flatcc_builder_default_alloc@@Base+0x4b5>
  4153da:	mov    rax,QWORD PTR [rbp-0x18]
  4153de:	mov    eax,DWORD PTR [rax+0x20]
  4153e1:	mov    ecx,eax
  4153e3:	mov    rax,QWORD PTR [rbp-0x18]
  4153e7:	mov    edx,0xfffc
  4153ec:	mov    rsi,rcx
  4153ef:	mov    rdi,rax
  4153f2:	call   415138 <flatcc_builder_default_alloc@@Base+0x1eb>
  4153f7:	test   eax,eax
  4153f9:	je     415402 <flatcc_builder_default_alloc@@Base+0x4b5>
  4153fb:	mov    eax,0x0
  415400:	jmp    415461 <flatcc_builder_default_alloc@@Base+0x514>
  415402:	mov    eax,DWORD PTR [rbp-0x4]
  415405:	mov    ecx,eax
  415407:	mov    rax,QWORD PTR [rbp-0x18]
  41540b:	mov    rax,QWORD PTR [rax+0x8]
  41540f:	movzx  edx,WORD PTR [rbp-0x1c]
  415413:	add    rdx,rdx
  415416:	add    rdx,rax
  415419:	lea    eax,[rcx+0x4]
  41541c:	mov    WORD PTR [rdx],ax
  41541f:	mov    rax,QWORD PTR [rbp-0x18]
  415423:	movzx  eax,WORD PTR [rax+0x10]
  415427:	cmp    WORD PTR [rbp-0x1c],ax
  41542b:	jb     41543b <flatcc_builder_default_alloc@@Base+0x4ee>
  41542d:	movzx  eax,WORD PTR [rbp-0x1c]
  415431:	inc    eax
  415433:	mov    rdx,QWORD PTR [rbp-0x18]
  415437:	mov    WORD PTR [rdx+0x10],ax
  41543b:	mov    rax,QWORD PTR [rbp-0x18]
  41543f:	mov    rax,QWORD PTR [rax]
  415442:	lea    rcx,[rax+0x2]
  415446:	mov    rdx,QWORD PTR [rbp-0x18]
  41544a:	mov    QWORD PTR [rdx],rcx
  41544d:	mov    edx,DWORD PTR [rbp-0x4]
  415450:	mov    WORD PTR [rax],dx
  415453:	mov    rax,QWORD PTR [rbp-0x18]
  415457:	mov    rdx,QWORD PTR [rax+0x18]
  41545b:	mov    eax,DWORD PTR [rbp-0x4]
  41545e:	add    rax,rdx
  415461:	leave  
  415462:	ret    
  415463:	push   rbp
  415464:	mov    rbp,rsp
  415467:	sub    rsp,0x30
  41546b:	mov    QWORD PTR [rbp-0x18],rdi
  41546f:	mov    DWORD PTR [rbp-0x1c],esi
  415472:	mov    QWORD PTR [rbp-0x28],rdx
  415476:	mov    QWORD PTR [rbp-0x30],rcx
  41547a:	mov    DWORD PTR [rbp-0x20],r8d
  41547e:	mov    rax,QWORD PTR [rbp-0x18]
  415482:	lea    rdx,[rax+0x58]
  415486:	mov    eax,DWORD PTR [rbp-0x1c]
  415489:	cdqe   
  41548b:	shl    rax,0x4
  41548f:	add    rax,rdx
  415492:	mov    QWORD PTR [rbp-0x8],rax
  415496:	mov    rdx,QWORD PTR [rbp-0x28]
  41549a:	mov    rax,QWORD PTR [rbp-0x30]
  41549e:	add    rdx,rax
  4154a1:	mov    rax,QWORD PTR [rbp-0x8]
  4154a5:	mov    rax,QWORD PTR [rax+0x8]
  4154a9:	cmp    rdx,rax
  4154ac:	jbe    415501 <flatcc_builder_default_alloc@@Base+0x5b4>
  4154ae:	mov    rax,QWORD PTR [rbp-0x18]
  4154b2:	mov    rax,QWORD PTR [rax+0x50]
  4154b6:	mov    rcx,QWORD PTR [rbp-0x28]
  4154ba:	mov    rdx,QWORD PTR [rbp-0x30]
  4154be:	lea    r9,[rcx+rdx*1]
  4154c2:	mov    rdx,QWORD PTR [rbp-0x18]
  4154c6:	mov    rdi,QWORD PTR [rdx+0x40]
  4154ca:	mov    ecx,DWORD PTR [rbp-0x1c]
  4154cd:	mov    edx,DWORD PTR [rbp-0x20]
  4154d0:	mov    rsi,QWORD PTR [rbp-0x8]
  4154d4:	mov    r8d,ecx
  4154d7:	mov    ecx,edx
  4154d9:	mov    rdx,r9
  4154dc:	call   rax
  4154de:	test   eax,eax
  4154e0:	je     415501 <flatcc_builder_default_alloc@@Base+0x5b4>
  4154e2:	lea    rcx,[rip+0xd50f]        # 4229f8 <flatcc_builder_padding_base@@Base+0x658>
  4154e9:	mov    edx,0x134
  4154ee:	lea    rsi,[rip+0xd0ab]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4154f5:	lea    rdi,[rip+0xd104]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  4154fc:	call   403220 <__assert_fail@plt>
  415501:	mov    rax,QWORD PTR [rbp-0x8]
  415505:	mov    rax,QWORD PTR [rax]
  415508:	mov    rdx,rax
  41550b:	mov    rax,QWORD PTR [rbp-0x28]
  41550f:	add    rax,rdx
  415512:	leave  
  415513:	ret    
  415514:	push   rbp
  415515:	mov    rbp,rsp
  415518:	sub    rsp,0x20
  41551c:	mov    QWORD PTR [rbp-0x18],rdi
  415520:	mov    DWORD PTR [rbp-0x1c],esi
  415523:	mov    rax,QWORD PTR [rbp-0x18]
  415527:	mov    rax,QWORD PTR [rax+0x30]
  41552b:	mov    edx,DWORD PTR [rax+0x10]
  41552e:	mov    rax,QWORD PTR [rbp-0x18]
  415532:	mov    rax,QWORD PTR [rax+0x30]
  415536:	movzx  eax,WORD PTR [rax+0x1c]
  41553a:	movzx  eax,ax
  41553d:	add    eax,eax
  41553f:	add    eax,edx
  415541:	mov    DWORD PTR [rbp-0x8],eax
  415544:	mov    eax,DWORD PTR [rbp-0x1c]
  415547:	add    eax,0x2
  41554a:	cdqe   
  41554c:	add    eax,eax
  41554e:	mov    DWORD PTR [rbp-0x4],eax
  415551:	mov    ecx,DWORD PTR [rbp-0x4]
  415554:	mov    edx,DWORD PTR [rbp-0x8]
  415557:	mov    rax,QWORD PTR [rbp-0x18]
  41555b:	mov    r8d,0x1
  415561:	mov    esi,0x0
  415566:	mov    rdi,rax
  415569:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  41556e:	mov    rdx,rax
  415571:	mov    rax,QWORD PTR [rbp-0x18]
  415575:	mov    QWORD PTR [rax+0x8],rdx
  415579:	mov    rax,QWORD PTR [rbp-0x18]
  41557d:	mov    rax,QWORD PTR [rax+0x8]
  415581:	test   rax,rax
  415584:	jne    41558d <flatcc_builder_default_alloc@@Base+0x640>
  415586:	mov    eax,0xffffffff
  41558b:	jmp    4155fa <flatcc_builder_default_alloc@@Base+0x6ad>
  41558d:	mov    rax,QWORD PTR [rbp-0x18]
  415591:	mov    rax,QWORD PTR [rax+0x8]
  415595:	lea    rdx,[rax+0x4]
  415599:	mov    rax,QWORD PTR [rbp-0x18]
  41559d:	mov    QWORD PTR [rax+0x8],rdx
  4155a1:	mov    rax,QWORD PTR [rbp-0x18]
  4155a5:	mov    rax,QWORD PTR [rax+0x30]
  4155a9:	mov    eax,DWORD PTR [rax+0x14]
  4155ac:	mov    DWORD PTR [rbp-0x8],eax
  4155af:	mov    eax,DWORD PTR [rbp-0x1c]
  4155b2:	cdqe   
  4155b4:	add    eax,eax
  4155b6:	inc    eax
  4155b8:	mov    DWORD PTR [rbp-0x4],eax
  4155bb:	mov    ecx,DWORD PTR [rbp-0x4]
  4155be:	mov    edx,DWORD PTR [rbp-0x8]
  4155c1:	mov    rax,QWORD PTR [rbp-0x18]
  4155c5:	mov    r8d,0x0
  4155cb:	mov    esi,0x3
  4155d0:	mov    rdi,rax
  4155d3:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  4155d8:	mov    rdx,rax
  4155db:	mov    rax,QWORD PTR [rbp-0x18]
  4155df:	mov    QWORD PTR [rax],rdx
  4155e2:	mov    rax,QWORD PTR [rbp-0x18]
  4155e6:	mov    rax,QWORD PTR [rax]
  4155e9:	test   rax,rax
  4155ec:	jne    4155f5 <flatcc_builder_default_alloc@@Base+0x6a8>
  4155ee:	mov    eax,0xffffffff
  4155f3:	jmp    4155fa <flatcc_builder_default_alloc@@Base+0x6ad>
  4155f5:	mov    eax,0x0
  4155fa:	leave  
  4155fb:	ret    
  4155fc:	endbr64 
  415600:	push   rbp
  415601:	mov    rbp,rsp
  415604:	sub    rsp,0x30
  415608:	mov    QWORD PTR [rbp-0x28],rdi
  41560c:	mov    rax,QWORD PTR [rbp-0x28]
  415610:	add    rax,0x58
  415614:	add    rax,0x50
  415618:	mov    QWORD PTR [rbp-0x8],rax
  41561c:	mov    rax,QWORD PTR [rbp-0x28]
  415620:	mov    eax,DWORD PTR [rax+0xe4]
  415626:	test   eax,eax
  415628:	je     415649 <flatcc_builder_default_alloc@@Base+0x6fc>
  41562a:	lea    rcx,[rip+0xd3b7]        # 4229e8 <flatcc_builder_padding_base@@Base+0x648>
  415631:	mov    edx,0x156
  415636:	lea    rsi,[rip+0xcf63]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41563d:	lea    rdi,[rip+0xcfbe]        # 422602 <flatcc_builder_padding_base@@Base+0x262>
  415644:	call   403220 <__assert_fail@plt>
  415649:	mov    rax,QWORD PTR [rbp-0x28]
  41564d:	mov    eax,DWORD PTR [rax+0xe4]
  415653:	mov    edx,eax
  415655:	mov    rax,QWORD PTR [rbp-0x28]
  415659:	mov    r8d,0x0
  41565f:	mov    ecx,0x10
  415664:	mov    esi,0x6
  415669:	mov    rdi,rax
  41566c:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  415671:	test   rax,rax
  415674:	jne    415680 <flatcc_builder_default_alloc@@Base+0x733>
  415676:	mov    eax,0xffffffff
  41567b:	jmp    415721 <flatcc_builder_default_alloc@@Base+0x7d4>
  415680:	mov    rax,QWORD PTR [rbp-0x28]
  415684:	mov    DWORD PTR [rax+0xe4],0x10
  41568e:	mov    QWORD PTR [rbp-0x18],0x100
  415696:	mov    rax,QWORD PTR [rbp-0x28]
  41569a:	mov    rax,QWORD PTR [rax+0x50]
  41569e:	mov    rdx,QWORD PTR [rbp-0x28]
  4156a2:	mov    rdi,QWORD PTR [rdx+0x40]
  4156a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4156aa:	mov    rsi,QWORD PTR [rbp-0x8]
  4156ae:	mov    r8d,0x5
  4156b4:	mov    ecx,0x1
  4156b9:	call   rax
  4156bb:	test   eax,eax
  4156bd:	je     4156ca <flatcc_builder_default_alloc@@Base+0x77d>
  4156bf:	mov    eax,0xffffffff
  4156c4:	jmp    415721 <flatcc_builder_default_alloc@@Base+0x7d4>
  4156c6:	shl    QWORD PTR [rbp-0x18],1
  4156ca:	mov    rax,QWORD PTR [rbp-0x18]
  4156ce:	lea    rdx,[rax+rax*1]
  4156d2:	mov    rax,QWORD PTR [rbp-0x8]
  4156d6:	mov    rax,QWORD PTR [rax+0x8]
  4156da:	cmp    rdx,rax
  4156dd:	jbe    4156c6 <flatcc_builder_default_alloc@@Base+0x779>
  4156df:	mov    rax,QWORD PTR [rbp-0x18]
  4156e3:	shr    rax,0x2
  4156e7:	mov    QWORD PTR [rbp-0x18],rax
  4156eb:	mov    QWORD PTR [rbp-0x10],0x0
  4156f3:	jmp    4156f9 <flatcc_builder_default_alloc@@Base+0x7ac>
  4156f5:	inc    QWORD PTR [rbp-0x10]
  4156f9:	mov    rax,QWORD PTR [rbp-0x10]
  4156fd:	mov    edx,0x1
  415702:	shlx   rax,rdx,rax
  415707:	cmp    QWORD PTR [rbp-0x18],rax
  41570b:	ja     4156f5 <flatcc_builder_default_alloc@@Base+0x7a8>
  41570d:	mov    rax,QWORD PTR [rbp-0x28]
  415711:	mov    rdx,QWORD PTR [rbp-0x10]
  415715:	mov    QWORD PTR [rax+0xd8],rdx
  41571c:	mov    eax,0x0
  415721:	leave  
  415722:	ret    
  415723:	push   rbp
  415724:	mov    rbp,rsp
  415727:	sub    rsp,0x20
  41572b:	mov    QWORD PTR [rbp-0x18],rdi
  41572f:	mov    DWORD PTR [rbp-0x1c],esi
  415732:	mov    rax,QWORD PTR [rbp-0x18]
  415736:	mov    rax,QWORD PTR [rax+0xd8]
  41573d:	test   rax,rax
  415740:	jne    415759 <flatcc_builder_default_alloc@@Base+0x80c>
  415742:	mov    rax,QWORD PTR [rbp-0x18]
  415746:	mov    rdi,rax
  415749:	call   4155fc <flatcc_builder_default_alloc@@Base+0x6af>
  41574e:	test   eax,eax
  415750:	je     415759 <flatcc_builder_default_alloc@@Base+0x80c>
  415752:	mov    eax,0x0
  415757:	jmp    415795 <flatcc_builder_default_alloc@@Base+0x848>
  415759:	mov    rax,QWORD PTR [rbp-0x18]
  41575d:	mov    rax,QWORD PTR [rax+0xa8]
  415764:	mov    QWORD PTR [rbp-0x8],rax
  415768:	mov    rax,QWORD PTR [rbp-0x18]
  41576c:	mov    rax,QWORD PTR [rax+0xd8]
  415773:	mov    edx,0x20
  415778:	sub    edx,eax
  41577a:	mov    eax,edx
  41577c:	mov    edx,DWORD PTR [rbp-0x1c]
  41577f:	shrx   eax,edx,eax
  415784:	mov    eax,eax
  415786:	lea    rdx,[rax*4+0x0]
  41578e:	mov    rax,QWORD PTR [rbp-0x8]
  415792:	add    rax,rdx
  415795:	leave  
  415796:	ret    

0000000000415797 <flatcc_builder_flush_vtable_cache@@Base>:
  415797:	endbr64 
  41579b:	push   rbp
  41579c:	mov    rbp,rsp
  41579f:	sub    rsp,0x20
  4157a3:	mov    QWORD PTR [rbp-0x18],rdi
  4157a7:	mov    rax,QWORD PTR [rbp-0x18]
  4157ab:	add    rax,0x58
  4157af:	add    rax,0x50
  4157b3:	mov    QWORD PTR [rbp-0x8],rax
  4157b7:	mov    rax,QWORD PTR [rbp-0x18]
  4157bb:	mov    rax,QWORD PTR [rax+0xd8]
  4157c2:	test   rax,rax
  4157c5:	je     415801 <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  4157c7:	mov    rax,QWORD PTR [rbp-0x8]
  4157cb:	mov    rdx,QWORD PTR [rax+0x8]
  4157cf:	mov    rax,QWORD PTR [rbp-0x8]
  4157d3:	mov    rax,QWORD PTR [rax]
  4157d6:	mov    esi,0x0
  4157db:	mov    rdi,rax
  4157de:	call   403230 <memset@plt>
  4157e3:	mov    rax,QWORD PTR [rbp-0x18]
  4157e7:	mov    DWORD PTR [rax+0xe4],0x10
  4157f1:	mov    rax,QWORD PTR [rbp-0x18]
  4157f5:	mov    DWORD PTR [rax+0xe0],0x0
  4157ff:	jmp    415802 <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  415801:	nop
  415802:	leave  
  415803:	ret    

0000000000415804 <flatcc_builder_custom_init@@Base>:
  415804:	endbr64 
  415808:	push   rbp
  415809:	mov    rbp,rsp
  41580c:	sub    rsp,0x30
  415810:	mov    QWORD PTR [rbp-0x8],rdi
  415814:	mov    QWORD PTR [rbp-0x10],rsi
  415818:	mov    QWORD PTR [rbp-0x18],rdx
  41581c:	mov    QWORD PTR [rbp-0x20],rcx
  415820:	mov    QWORD PTR [rbp-0x28],r8
  415824:	mov    rax,QWORD PTR [rbp-0x8]
  415828:	mov    edx,0x188
  41582d:	mov    esi,0x0
  415832:	mov    rdi,rax
  415835:	call   403230 <memset@plt>
  41583a:	cmp    QWORD PTR [rbp-0x10],0x0
  41583f:	jne    415868 <flatcc_builder_custom_init@@Base+0x64>
  415841:	mov    rax,QWORD PTR [rbp-0x8]
  415845:	mov    DWORD PTR [rax+0x128],0x1
  41584f:	mov    rax,0x41ada1
  415856:	mov    QWORD PTR [rbp-0x10],rax
  41585a:	mov    rax,QWORD PTR [rbp-0x8]
  41585e:	add    rax,0x130
  415864:	mov    QWORD PTR [rbp-0x18],rax
  415868:	cmp    QWORD PTR [rbp-0x20],0x0
  41586d:	jne    41587a <flatcc_builder_custom_init@@Base+0x76>
  41586f:	mov    rax,0x414f4d
  415876:	mov    QWORD PTR [rbp-0x20],rax
  41587a:	mov    rax,QWORD PTR [rbp-0x8]
  41587e:	mov    rdx,QWORD PTR [rbp-0x28]
  415882:	mov    QWORD PTR [rax+0x40],rdx
  415886:	mov    rax,QWORD PTR [rbp-0x8]
  41588a:	mov    rdx,QWORD PTR [rbp-0x20]
  41588e:	mov    QWORD PTR [rax+0x50],rdx
  415892:	mov    rax,QWORD PTR [rbp-0x8]
  415896:	mov    rdx,QWORD PTR [rbp-0x18]
  41589a:	mov    QWORD PTR [rax+0x38],rdx
  41589e:	mov    rax,QWORD PTR [rbp-0x8]
  4158a2:	mov    rdx,QWORD PTR [rbp-0x10]
  4158a6:	mov    QWORD PTR [rax+0x48],rdx
  4158aa:	mov    eax,0x0
  4158af:	leave  
  4158b0:	ret    

00000000004158b1 <flatcc_builder_init@@Base>:
  4158b1:	endbr64 
  4158b5:	push   rbp
  4158b6:	mov    rbp,rsp
  4158b9:	sub    rsp,0x10
  4158bd:	mov    QWORD PTR [rbp-0x8],rdi
  4158c1:	mov    rax,QWORD PTR [rbp-0x8]
  4158c5:	mov    r8d,0x0
  4158cb:	mov    ecx,0x0
  4158d0:	mov    edx,0x0
  4158d5:	mov    esi,0x0
  4158da:	mov    rdi,rax
  4158dd:	call   415804 <flatcc_builder_custom_init@@Base>
  4158e2:	leave  
  4158e3:	ret    

00000000004158e4 <flatcc_builder_custom_reset@@Base>:
  4158e4:	endbr64 
  4158e8:	push   rbp
  4158e9:	mov    rbp,rsp
  4158ec:	sub    rsp,0x20
  4158f0:	mov    QWORD PTR [rbp-0x18],rdi
  4158f4:	mov    DWORD PTR [rbp-0x1c],esi
  4158f7:	mov    DWORD PTR [rbp-0x20],edx
  4158fa:	mov    DWORD PTR [rbp-0xc],0x0
  415901:	jmp    4159b7 <flatcc_builder_custom_reset@@Base+0xd3>
  415906:	mov    rax,QWORD PTR [rbp-0x18]
  41590a:	lea    rdx,[rax+0x58]
  41590e:	mov    eax,DWORD PTR [rbp-0xc]
  415911:	cdqe   
  415913:	shl    rax,0x4
  415917:	add    rax,rdx
  41591a:	mov    QWORD PTR [rbp-0x8],rax
  41591e:	mov    rax,QWORD PTR [rbp-0x8]
  415922:	mov    rax,QWORD PTR [rax]
  415925:	test   rax,rax
  415928:	je     415988 <flatcc_builder_custom_reset@@Base+0xa4>
  41592a:	cmp    DWORD PTR [rbp-0xc],0x5
  41592e:	je     41596a <flatcc_builder_custom_reset@@Base+0x86>
  415930:	cmp    DWORD PTR [rbp-0x20],0x0
  415934:	je     41596a <flatcc_builder_custom_reset@@Base+0x86>
  415936:	mov    rax,QWORD PTR [rbp-0x18]
  41593a:	mov    rax,QWORD PTR [rax+0x50]
  41593e:	mov    rdx,QWORD PTR [rbp-0x18]
  415942:	mov    rdi,QWORD PTR [rdx+0x40]
  415946:	mov    edx,DWORD PTR [rbp-0xc]
  415949:	mov    rsi,QWORD PTR [rbp-0x8]
  41594d:	mov    r8d,edx
  415950:	mov    ecx,0x1
  415955:	mov    edx,0x1
  41595a:	call   rax
  41595c:	test   eax,eax
  41595e:	je     41596a <flatcc_builder_custom_reset@@Base+0x86>
  415960:	mov    eax,0xffffffff
  415965:	jmp    415af6 <flatcc_builder_custom_reset@@Base+0x212>
  41596a:	mov    rax,QWORD PTR [rbp-0x8]
  41596e:	mov    rdx,QWORD PTR [rax+0x8]
  415972:	mov    rax,QWORD PTR [rbp-0x8]
  415976:	mov    rax,QWORD PTR [rax]
  415979:	mov    esi,0x0
  41597e:	mov    rdi,rax
  415981:	call   403230 <memset@plt>
  415986:	jmp    4159b4 <flatcc_builder_custom_reset@@Base+0xd0>
  415988:	mov    rax,QWORD PTR [rbp-0x8]
  41598c:	mov    rax,QWORD PTR [rax+0x8]
  415990:	test   rax,rax
  415993:	je     4159b4 <flatcc_builder_custom_reset@@Base+0xd0>
  415995:	lea    rcx,[rip+0xd074]        # 422a10 <flatcc_builder_padding_base@@Base+0x670>
  41599c:	mov    edx,0x1b2
  4159a1:	lea    rsi,[rip+0xcbf8]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4159a8:	lea    rdi,[rip+0xcc62]        # 422611 <flatcc_builder_padding_base@@Base+0x271>
  4159af:	call   403220 <__assert_fail@plt>
  4159b4:	inc    DWORD PTR [rbp-0xc]
  4159b7:	cmp    DWORD PTR [rbp-0xc],0x7
  4159bb:	jle    415906 <flatcc_builder_custom_reset@@Base+0x22>
  4159c1:	mov    rax,QWORD PTR [rbp-0x18]
  4159c5:	mov    DWORD PTR [rax+0xe0],0x0
  4159cf:	mov    rax,QWORD PTR [rbp-0x18]
  4159d3:	mov    eax,DWORD PTR [rax+0xe4]
  4159d9:	test   eax,eax
  4159db:	je     4159eb <flatcc_builder_custom_reset@@Base+0x107>
  4159dd:	mov    rax,QWORD PTR [rbp-0x18]
  4159e1:	mov    DWORD PTR [rax+0xe4],0x10
  4159eb:	mov    rax,QWORD PTR [rbp-0x18]
  4159ef:	mov    WORD PTR [rax+0xe8],0x0
  4159f8:	mov    rax,QWORD PTR [rbp-0x18]
  4159fc:	mov    DWORD PTR [rax+0xf0],0x0
  415a06:	mov    rax,QWORD PTR [rbp-0x18]
  415a0a:	mov    DWORD PTR [rax+0xf4],0x0
  415a14:	mov    rax,QWORD PTR [rbp-0x18]
  415a18:	mov    DWORD PTR [rax+0x104],0x0
  415a22:	mov    rax,QWORD PTR [rbp-0x18]
  415a26:	mov    DWORD PTR [rax+0x108],0x0
  415a30:	mov    rax,QWORD PTR [rbp-0x18]
  415a34:	mov    DWORD PTR [rax+0x20],0x0
  415a3b:	mov    rax,QWORD PTR [rbp-0x18]
  415a3f:	mov    DWORD PTR [rax+0x24],0x0
  415a46:	mov    rax,QWORD PTR [rbp-0x18]
  415a4a:	mov    DWORD PTR [rax+0xfc],0x0
  415a54:	mov    rax,QWORD PTR [rbp-0x18]
  415a58:	mov    DWORD PTR [rax+0x100],0x0
  415a62:	mov    rax,QWORD PTR [rbp-0x18]
  415a66:	mov    rdx,QWORD PTR [rax+0x68]
  415a6a:	mov    rax,QWORD PTR [rbp-0x18]
  415a6e:	mov    QWORD PTR [rax+0x18],rdx
  415a72:	mov    rax,QWORD PTR [rbp-0x18]
  415a76:	mov    rdx,QWORD PTR [rax+0x88]
  415a7d:	mov    rax,QWORD PTR [rbp-0x18]
  415a81:	mov    QWORD PTR [rax],rdx
  415a84:	mov    rax,QWORD PTR [rbp-0x18]
  415a88:	mov    rdx,QWORD PTR [rax+0x58]
  415a8c:	mov    rax,QWORD PTR [rbp-0x18]
  415a90:	mov    QWORD PTR [rax+0x8],rdx
  415a94:	mov    rax,QWORD PTR [rbp-0x18]
  415a98:	mov    QWORD PTR [rax+0x30],0x0
  415aa0:	cmp    DWORD PTR [rbp-0x1c],0x0
  415aa4:	je     415ad1 <flatcc_builder_custom_reset@@Base+0x1ed>
  415aa6:	mov    rax,QWORD PTR [rbp-0x18]
  415aaa:	mov    QWORD PTR [rax+0x118],0x0
  415ab5:	mov    rax,QWORD PTR [rbp-0x18]
  415ab9:	mov    DWORD PTR [rax+0x120],0x0
  415ac3:	mov    rax,QWORD PTR [rbp-0x18]
  415ac7:	mov    DWORD PTR [rax+0x124],0x0
  415ad1:	mov    rax,QWORD PTR [rbp-0x18]
  415ad5:	mov    eax,DWORD PTR [rax+0x128]
  415adb:	test   eax,eax
  415add:	je     415af1 <flatcc_builder_custom_reset@@Base+0x20d>
  415adf:	mov    rax,QWORD PTR [rbp-0x18]
  415ae3:	add    rax,0x130
  415ae9:	mov    rdi,rax
  415aec:	call   41ab7c <flatcc_emitter_reset@@Base>
  415af1:	mov    eax,0x0
  415af6:	leave  
  415af7:	ret    

0000000000415af8 <flatcc_builder_reset@@Base>:
  415af8:	endbr64 
  415afc:	push   rbp
  415afd:	mov    rbp,rsp
  415b00:	sub    rsp,0x10
  415b04:	mov    QWORD PTR [rbp-0x8],rdi
  415b08:	mov    rax,QWORD PTR [rbp-0x8]
  415b0c:	mov    edx,0x0
  415b11:	mov    esi,0x0
  415b16:	mov    rdi,rax
  415b19:	call   4158e4 <flatcc_builder_custom_reset@@Base>
  415b1e:	leave  
  415b1f:	ret    

0000000000415b20 <flatcc_builder_clear@@Base>:
  415b20:	endbr64 
  415b24:	push   rbp
  415b25:	mov    rbp,rsp
  415b28:	sub    rsp,0x20
  415b2c:	mov    QWORD PTR [rbp-0x18],rdi
  415b30:	mov    DWORD PTR [rbp-0xc],0x0
  415b37:	jmp    415b7a <flatcc_builder_clear@@Base+0x5a>
  415b39:	mov    rax,QWORD PTR [rbp-0x18]
  415b3d:	lea    rdx,[rax+0x58]
  415b41:	mov    eax,DWORD PTR [rbp-0xc]
  415b44:	cdqe   
  415b46:	shl    rax,0x4
  415b4a:	add    rax,rdx
  415b4d:	mov    QWORD PTR [rbp-0x8],rax
  415b51:	mov    rax,QWORD PTR [rbp-0x18]
  415b55:	mov    rax,QWORD PTR [rax+0x50]
  415b59:	mov    rdx,QWORD PTR [rbp-0x18]
  415b5d:	mov    rdi,QWORD PTR [rdx+0x40]
  415b61:	mov    edx,DWORD PTR [rbp-0xc]
  415b64:	mov    rsi,QWORD PTR [rbp-0x8]
  415b68:	mov    r8d,edx
  415b6b:	mov    ecx,0x0
  415b70:	mov    edx,0x0
  415b75:	call   rax
  415b77:	inc    DWORD PTR [rbp-0xc]
  415b7a:	cmp    DWORD PTR [rbp-0xc],0x7
  415b7e:	jle    415b39 <flatcc_builder_clear@@Base+0x19>
  415b80:	mov    rax,QWORD PTR [rbp-0x18]
  415b84:	mov    eax,DWORD PTR [rax+0x128]
  415b8a:	test   eax,eax
  415b8c:	je     415ba0 <flatcc_builder_clear@@Base+0x80>
  415b8e:	mov    rax,QWORD PTR [rbp-0x18]
  415b92:	add    rax,0x130
  415b98:	mov    rdi,rax
  415b9b:	call   41ad0e <flatcc_emitter_clear@@Base>
  415ba0:	mov    rax,QWORD PTR [rbp-0x18]
  415ba4:	mov    edx,0x188
  415ba9:	mov    esi,0x0
  415bae:	mov    rdi,rax
  415bb1:	call   403230 <memset@plt>
  415bb6:	nop
  415bb7:	leave  
  415bb8:	ret    
  415bb9:	push   rbp
  415bba:	mov    rbp,rsp
  415bbd:	mov    QWORD PTR [rbp-0x8],rdi
  415bc1:	mov    eax,esi
  415bc3:	mov    WORD PTR [rbp-0xc],ax
  415bc7:	mov    rax,QWORD PTR [rbp-0x8]
  415bcb:	movzx  eax,WORD PTR [rax+0xe8]
  415bd2:	cmp    WORD PTR [rbp-0xc],ax
  415bd6:	jbe    415be7 <flatcc_builder_clear@@Base+0xc7>
  415bd8:	mov    rdx,QWORD PTR [rbp-0x8]
  415bdc:	movzx  eax,WORD PTR [rbp-0xc]
  415be0:	mov    WORD PTR [rdx+0xe8],ax
  415be7:	nop
  415be8:	pop    rbp
  415be9:	ret    
  415bea:	push   rbp
  415beb:	mov    rbp,rsp
  415bee:	mov    QWORD PTR [rbp-0x8],rdi
  415bf2:	mov    eax,esi
  415bf4:	mov    WORD PTR [rbp-0xc],ax
  415bf8:	mov    rax,QWORD PTR [rbp-0x8]
  415bfc:	movzx  eax,WORD PTR [rax]
  415bff:	cmp    WORD PTR [rbp-0xc],ax
  415c03:	jbe    415c10 <flatcc_builder_clear@@Base+0xf0>
  415c05:	mov    rdx,QWORD PTR [rbp-0x8]
  415c09:	movzx  eax,WORD PTR [rbp-0xc]
  415c0d:	mov    WORD PTR [rdx],ax
  415c10:	nop
  415c11:	pop    rbp
  415c12:	ret    

0000000000415c13 <flatcc_builder_enter_user_frame_ptr@@Base>:
  415c13:	endbr64 
  415c17:	push   rbp
  415c18:	mov    rbp,rsp
  415c1b:	sub    rsp,0x20
  415c1f:	mov    QWORD PTR [rbp-0x18],rdi
  415c23:	mov    QWORD PTR [rbp-0x20],rsi
  415c27:	mov    rax,QWORD PTR [rbp-0x20]
  415c2b:	add    rax,0x7
  415c2f:	and    rax,0xfffffffffffffff8
  415c33:	add    rax,0x8
  415c37:	mov    QWORD PTR [rbp-0x20],rax
  415c3b:	mov    rax,QWORD PTR [rbp-0x18]
  415c3f:	mov    rdx,QWORD PTR [rax+0x180]
  415c46:	mov    rcx,QWORD PTR [rbp-0x20]
  415c4a:	mov    rax,QWORD PTR [rbp-0x18]
  415c4e:	mov    r8d,0x0
  415c54:	mov    esi,0x7
  415c59:	mov    rdi,rax
  415c5c:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  415c61:	mov    QWORD PTR [rbp-0x8],rax
  415c65:	cmp    QWORD PTR [rbp-0x8],0x0
  415c6a:	jne    415c73 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  415c6c:	mov    eax,0x0
  415c71:	jmp    415cdd <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  415c73:	mov    rdx,QWORD PTR [rbp-0x20]
  415c77:	mov    rax,QWORD PTR [rbp-0x8]
  415c7b:	mov    esi,0x0
  415c80:	mov    rdi,rax
  415c83:	call   403230 <memset@plt>
  415c88:	mov    rax,QWORD PTR [rbp-0x8]
  415c8c:	lea    rdx,[rax+0x8]
  415c90:	mov    QWORD PTR [rbp-0x8],rdx
  415c94:	mov    rdx,QWORD PTR [rbp-0x18]
  415c98:	mov    rdx,QWORD PTR [rdx+0x178]
  415c9f:	mov    QWORD PTR [rax],rdx
  415ca2:	mov    rax,QWORD PTR [rbp-0x18]
  415ca6:	mov    rax,QWORD PTR [rax+0x180]
  415cad:	lea    rdx,[rax+0x8]
  415cb1:	mov    rax,QWORD PTR [rbp-0x18]
  415cb5:	mov    QWORD PTR [rax+0x178],rdx
  415cbc:	mov    rax,QWORD PTR [rbp-0x18]
  415cc0:	mov    rdx,QWORD PTR [rax+0x180]
  415cc7:	mov    rax,QWORD PTR [rbp-0x20]
  415ccb:	add    rdx,rax
  415cce:	mov    rax,QWORD PTR [rbp-0x18]
  415cd2:	mov    QWORD PTR [rax+0x180],rdx
  415cd9:	mov    rax,QWORD PTR [rbp-0x8]
  415cdd:	leave  
  415cde:	ret    

0000000000415cdf <flatcc_builder_enter_user_frame@@Base>:
  415cdf:	endbr64 
  415ce3:	push   rbp
  415ce4:	mov    rbp,rsp
  415ce7:	sub    rsp,0x20
  415ceb:	mov    QWORD PTR [rbp-0x18],rdi
  415cef:	mov    QWORD PTR [rbp-0x20],rsi
  415cf3:	mov    rax,QWORD PTR [rbp-0x20]
  415cf7:	add    rax,0x7
  415cfb:	and    rax,0xfffffffffffffff8
  415cff:	add    rax,0x8
  415d03:	mov    QWORD PTR [rbp-0x20],rax
  415d07:	mov    rax,QWORD PTR [rbp-0x18]
  415d0b:	mov    rdx,QWORD PTR [rax+0x180]
  415d12:	mov    rcx,QWORD PTR [rbp-0x20]
  415d16:	mov    rax,QWORD PTR [rbp-0x18]
  415d1a:	mov    r8d,0x0
  415d20:	mov    esi,0x7
  415d25:	mov    rdi,rax
  415d28:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  415d2d:	mov    QWORD PTR [rbp-0x8],rax
  415d31:	cmp    QWORD PTR [rbp-0x8],0x0
  415d36:	jne    415d3f <flatcc_builder_enter_user_frame@@Base+0x60>
  415d38:	mov    eax,0x0
  415d3d:	jmp    415db0 <flatcc_builder_enter_user_frame@@Base+0xd1>
  415d3f:	mov    rdx,QWORD PTR [rbp-0x20]
  415d43:	mov    rax,QWORD PTR [rbp-0x8]
  415d47:	mov    esi,0x0
  415d4c:	mov    rdi,rax
  415d4f:	call   403230 <memset@plt>
  415d54:	mov    rax,QWORD PTR [rbp-0x8]
  415d58:	lea    rdx,[rax+0x8]
  415d5c:	mov    QWORD PTR [rbp-0x8],rdx
  415d60:	mov    rdx,QWORD PTR [rbp-0x18]
  415d64:	mov    rdx,QWORD PTR [rdx+0x178]
  415d6b:	mov    QWORD PTR [rax],rdx
  415d6e:	mov    rax,QWORD PTR [rbp-0x18]
  415d72:	mov    rax,QWORD PTR [rax+0x180]
  415d79:	lea    rdx,[rax+0x8]
  415d7d:	mov    rax,QWORD PTR [rbp-0x18]
  415d81:	mov    QWORD PTR [rax+0x178],rdx
  415d88:	mov    rax,QWORD PTR [rbp-0x18]
  415d8c:	mov    rdx,QWORD PTR [rax+0x180]
  415d93:	mov    rax,QWORD PTR [rbp-0x20]
  415d97:	add    rdx,rax
  415d9a:	mov    rax,QWORD PTR [rbp-0x18]
  415d9e:	mov    QWORD PTR [rax+0x180],rdx
  415da5:	mov    rax,QWORD PTR [rbp-0x18]
  415da9:	mov    rax,QWORD PTR [rax+0x178]
  415db0:	leave  
  415db1:	ret    

0000000000415db2 <flatcc_builder_exit_user_frame@@Base>:
  415db2:	endbr64 
  415db6:	push   rbp
  415db7:	mov    rbp,rsp
  415dba:	sub    rsp,0x20
  415dbe:	mov    QWORD PTR [rbp-0x18],rdi
  415dc2:	mov    rax,QWORD PTR [rbp-0x18]
  415dc6:	mov    rax,QWORD PTR [rax+0x178]
  415dcd:	test   rax,rax
  415dd0:	jne    415df1 <flatcc_builder_exit_user_frame@@Base+0x3f>
  415dd2:	lea    rcx,[rip+0xcc57]        # 422a30 <flatcc_builder_padding_base@@Base+0x690>
  415dd9:	mov    edx,0x21e
  415dde:	lea    rsi,[rip+0xc7bb]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  415de5:	lea    rdi,[rip+0xc837]        # 422623 <flatcc_builder_padding_base@@Base+0x283>
  415dec:	call   403220 <__assert_fail@plt>
  415df1:	mov    rax,QWORD PTR [rbp-0x18]
  415df5:	mov    rdx,QWORD PTR [rax+0xc8]
  415dfc:	mov    rax,QWORD PTR [rbp-0x18]
  415e00:	mov    rax,QWORD PTR [rax+0x178]
  415e07:	mov    eax,eax
  415e09:	add    rax,rdx
  415e0c:	mov    QWORD PTR [rbp-0x8],rax
  415e10:	mov    rax,QWORD PTR [rbp-0x18]
  415e14:	mov    rax,QWORD PTR [rax+0x178]
  415e1b:	lea    rdx,[rax-0x8]
  415e1f:	mov    rax,QWORD PTR [rbp-0x18]
  415e23:	mov    QWORD PTR [rax+0x180],rdx
  415e2a:	mov    rax,QWORD PTR [rbp-0x8]
  415e2e:	mov    rdx,QWORD PTR [rax-0x8]
  415e32:	mov    rax,QWORD PTR [rbp-0x18]
  415e36:	mov    QWORD PTR [rax+0x178],rdx
  415e3d:	mov    rax,QWORD PTR [rbp-0x18]
  415e41:	mov    rax,QWORD PTR [rax+0x178]
  415e48:	leave  
  415e49:	ret    

0000000000415e4a <flatcc_builder_exit_user_frame_at@@Base>:
  415e4a:	endbr64 
  415e4e:	push   rbp
  415e4f:	mov    rbp,rsp
  415e52:	sub    rsp,0x10
  415e56:	mov    QWORD PTR [rbp-0x8],rdi
  415e5a:	mov    QWORD PTR [rbp-0x10],rsi
  415e5e:	mov    rax,QWORD PTR [rbp-0x8]
  415e62:	mov    rax,QWORD PTR [rax+0x178]
  415e69:	cmp    QWORD PTR [rbp-0x10],rax
  415e6d:	jbe    415e8e <flatcc_builder_exit_user_frame_at@@Base+0x44>
  415e6f:	lea    rcx,[rip+0xcbea]        # 422a60 <flatcc_builder_padding_base@@Base+0x6c0>
  415e76:	mov    edx,0x227
  415e7b:	lea    rsi,[rip+0xc71e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  415e82:	lea    rdi,[rip+0xc7b7]        # 422640 <flatcc_builder_padding_base@@Base+0x2a0>
  415e89:	call   403220 <__assert_fail@plt>
  415e8e:	mov    rax,QWORD PTR [rbp-0x8]
  415e92:	mov    rdx,QWORD PTR [rbp-0x10]
  415e96:	mov    QWORD PTR [rax+0x178],rdx
  415e9d:	mov    rax,QWORD PTR [rbp-0x8]
  415ea1:	mov    rdi,rax
  415ea4:	call   415db2 <flatcc_builder_exit_user_frame@@Base>
  415ea9:	leave  
  415eaa:	ret    

0000000000415eab <flatcc_builder_get_current_user_frame@@Base>:
  415eab:	endbr64 
  415eaf:	push   rbp
  415eb0:	mov    rbp,rsp
  415eb3:	mov    QWORD PTR [rbp-0x8],rdi
  415eb7:	mov    rax,QWORD PTR [rbp-0x8]
  415ebb:	mov    rax,QWORD PTR [rax+0x178]
  415ec2:	pop    rbp
  415ec3:	ret    

0000000000415ec4 <flatcc_builder_get_user_frame_ptr@@Base>:
  415ec4:	endbr64 
  415ec8:	push   rbp
  415ec9:	mov    rbp,rsp
  415ecc:	mov    QWORD PTR [rbp-0x8],rdi
  415ed0:	mov    QWORD PTR [rbp-0x10],rsi
  415ed4:	mov    rax,QWORD PTR [rbp-0x8]
  415ed8:	mov    rax,QWORD PTR [rax+0xc8]
  415edf:	mov    rdx,QWORD PTR [rbp-0x10]
  415ee3:	mov    edx,edx
  415ee5:	add    rax,rdx
  415ee8:	pop    rbp
  415ee9:	ret    
  415eea:	endbr64 
  415eee:	push   rbp
  415eef:	mov    rbp,rsp
  415ef2:	sub    rsp,0x10
  415ef6:	mov    QWORD PTR [rbp-0x8],rdi
  415efa:	mov    eax,esi
  415efc:	mov    WORD PTR [rbp-0xc],ax
  415f00:	mov    rax,QWORD PTR [rbp-0x8]
  415f04:	mov    eax,DWORD PTR [rax+0x104]
  415f0a:	lea    edx,[rax+0x1]
  415f0d:	mov    rax,QWORD PTR [rbp-0x8]
  415f11:	mov    DWORD PTR [rax+0x104],edx
  415f17:	mov    rax,QWORD PTR [rbp-0x8]
  415f1b:	mov    edx,DWORD PTR [rax+0x104]
  415f21:	mov    rax,QWORD PTR [rbp-0x8]
  415f25:	mov    eax,DWORD PTR [rax+0x108]
  415f2b:	cmp    edx,eax
  415f2d:	jle    416028 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  415f33:	mov    rax,QWORD PTR [rbp-0x8]
  415f37:	mov    eax,DWORD PTR [rax+0x120]
  415f3d:	test   eax,eax
  415f3f:	jle    415f63 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  415f41:	mov    rax,QWORD PTR [rbp-0x8]
  415f45:	mov    edx,DWORD PTR [rax+0x104]
  415f4b:	mov    rax,QWORD PTR [rbp-0x8]
  415f4f:	mov    eax,DWORD PTR [rax+0x120]
  415f55:	cmp    edx,eax
  415f57:	jle    415f63 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  415f59:	mov    eax,0xffffffff
  415f5e:	jmp    4160c3 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  415f63:	mov    rax,QWORD PTR [rbp-0x8]
  415f67:	mov    eax,DWORD PTR [rax+0x104]
  415f6d:	dec    eax
  415f6f:	movsxd rdx,eax
  415f72:	mov    rax,rdx
  415f75:	shl    rax,0x3
  415f79:	add    rax,rdx
  415f7c:	shl    rax,0x2
  415f80:	mov    rdx,rax
  415f83:	mov    rax,QWORD PTR [rbp-0x8]
  415f87:	mov    r8d,0x0
  415f8d:	mov    ecx,0x24
  415f92:	mov    esi,0x4
  415f97:	mov    rdi,rax
  415f9a:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  415f9f:	mov    rdx,rax
  415fa2:	mov    rax,QWORD PTR [rbp-0x8]
  415fa6:	mov    QWORD PTR [rax+0x30],rdx
  415faa:	mov    rax,QWORD PTR [rbp-0x8]
  415fae:	mov    rax,QWORD PTR [rax+0x30]
  415fb2:	test   rax,rax
  415fb5:	jne    415fc1 <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  415fb7:	mov    eax,0xffffffff
  415fbc:	jmp    4160c3 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  415fc1:	mov    rax,QWORD PTR [rbp-0x8]
  415fc5:	mov    rax,QWORD PTR [rax+0xa0]
  415fcc:	movabs rdx,0xe38e38e38e38e38f
  415fd6:	mul    rdx
  415fd9:	mov    rax,rdx
  415fdc:	shr    rax,0x5
  415fe0:	mov    edx,eax
  415fe2:	mov    rax,QWORD PTR [rbp-0x8]
  415fe6:	mov    DWORD PTR [rax+0x108],edx
  415fec:	mov    rax,QWORD PTR [rbp-0x8]
  415ff0:	mov    eax,DWORD PTR [rax+0x120]
  415ff6:	test   eax,eax
  415ff8:	jle    41603c <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  415ffa:	mov    rax,QWORD PTR [rbp-0x8]
  415ffe:	mov    edx,DWORD PTR [rax+0x120]
  416004:	mov    rax,QWORD PTR [rbp-0x8]
  416008:	mov    eax,DWORD PTR [rax+0x108]
  41600e:	cmp    edx,eax
  416010:	jge    41603c <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  416012:	mov    rax,QWORD PTR [rbp-0x8]
  416016:	mov    edx,DWORD PTR [rax+0x120]
  41601c:	mov    rax,QWORD PTR [rbp-0x8]
  416020:	mov    DWORD PTR [rax+0x108],edx
  416026:	jmp    41603c <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  416028:	mov    rax,QWORD PTR [rbp-0x8]
  41602c:	mov    rax,QWORD PTR [rax+0x30]
  416030:	lea    rdx,[rax+0x24]
  416034:	mov    rax,QWORD PTR [rbp-0x8]
  416038:	mov    QWORD PTR [rax+0x30],rdx
  41603c:	mov    rax,QWORD PTR [rbp-0x8]
  416040:	mov    rax,QWORD PTR [rax+0x30]
  416044:	mov    rdx,QWORD PTR [rbp-0x8]
  416048:	mov    edx,DWORD PTR [rdx+0x20]
  41604b:	mov    DWORD PTR [rax+0x8],edx
  41604e:	mov    rax,QWORD PTR [rbp-0x8]
  416052:	mov    rdx,QWORD PTR [rax+0x30]
  416056:	mov    rax,QWORD PTR [rbp-0x8]
  41605a:	movzx  eax,WORD PTR [rax+0xea]
  416061:	mov    WORD PTR [rdx+0xc],ax
  416065:	mov    rdx,QWORD PTR [rbp-0x8]
  416069:	movzx  eax,WORD PTR [rbp-0xc]
  41606d:	mov    WORD PTR [rdx+0xea],ax
  416074:	mov    rax,QWORD PTR [rbp-0x8]
  416078:	mov    rax,QWORD PTR [rax+0x30]
  41607c:	mov    rdx,QWORD PTR [rbp-0x8]
  416080:	mov    edx,DWORD PTR [rdx+0x28]
  416083:	mov    DWORD PTR [rax],edx
  416085:	mov    rax,QWORD PTR [rbp-0x8]
  416089:	mov    rax,QWORD PTR [rax+0x30]
  41608d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  416094:	mov    rax,QWORD PTR [rbp-0x8]
  416098:	mov    edx,DWORD PTR [rax+0x28]
  41609b:	mov    rax,QWORD PTR [rbp-0x8]
  41609f:	mov    eax,DWORD PTR [rax+0x20]
  4160a2:	add    eax,edx
  4160a4:	add    eax,0x7
  4160a7:	and    eax,0xfffffff8
  4160aa:	mov    edx,eax
  4160ac:	mov    rax,QWORD PTR [rbp-0x8]
  4160b0:	mov    DWORD PTR [rax+0x28],edx
  4160b3:	mov    rax,QWORD PTR [rbp-0x8]
  4160b7:	mov    DWORD PTR [rax+0x20],0x0
  4160be:	mov    eax,0x0
  4160c3:	leave  
  4160c4:	ret    
  4160c5:	push   rbp
  4160c6:	mov    rbp,rsp
  4160c9:	sub    rsp,0x10
  4160cd:	mov    QWORD PTR [rbp-0x8],rdi
  4160d1:	mov    rax,QWORD PTR [rbp-0x8]
  4160d5:	mov    eax,DWORD PTR [rax+0x20]
  4160d8:	mov    edx,eax
  4160da:	mov    rax,QWORD PTR [rbp-0x8]
  4160de:	mov    rax,QWORD PTR [rax+0x18]
  4160e2:	mov    esi,0x0
  4160e7:	mov    rdi,rax
  4160ea:	call   403230 <memset@plt>
  4160ef:	mov    rax,QWORD PTR [rbp-0x8]
  4160f3:	mov    rax,QWORD PTR [rax+0x30]
  4160f7:	mov    edx,DWORD PTR [rax+0x8]
  4160fa:	mov    rax,QWORD PTR [rbp-0x8]
  4160fe:	mov    DWORD PTR [rax+0x20],edx
  416101:	mov    rax,QWORD PTR [rbp-0x8]
  416105:	mov    rax,QWORD PTR [rax+0x30]
  416109:	mov    edx,DWORD PTR [rax]
  41610b:	mov    rax,QWORD PTR [rbp-0x8]
  41610f:	mov    DWORD PTR [rax+0x28],edx
  416112:	mov    rax,QWORD PTR [rbp-0x8]
  416116:	mov    rax,QWORD PTR [rax+0x30]
  41611a:	mov    edx,DWORD PTR [rax+0x4]
  41611d:	mov    rax,QWORD PTR [rbp-0x8]
  416121:	mov    esi,edx
  416123:	mov    rdi,rax
  416126:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  41612b:	mov    rax,QWORD PTR [rbp-0x8]
  41612f:	movzx  eax,WORD PTR [rax+0xea]
  416136:	movzx  edx,ax
  416139:	mov    rax,QWORD PTR [rbp-0x8]
  41613d:	mov    esi,edx
  41613f:	mov    rdi,rax
  416142:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  416147:	mov    rax,QWORD PTR [rbp-0x8]
  41614b:	mov    rax,QWORD PTR [rax+0x30]
  41614f:	movzx  eax,WORD PTR [rax+0xc]
  416153:	mov    rdx,QWORD PTR [rbp-0x8]
  416157:	mov    WORD PTR [rdx+0xea],ax
  41615e:	mov    rax,QWORD PTR [rbp-0x8]
  416162:	mov    rax,QWORD PTR [rax+0x30]
  416166:	lea    rdx,[rax-0x24]
  41616a:	mov    rax,QWORD PTR [rbp-0x8]
  41616e:	mov    QWORD PTR [rax+0x30],rdx
  416172:	mov    rax,QWORD PTR [rbp-0x8]
  416176:	mov    eax,DWORD PTR [rax+0x104]
  41617c:	lea    edx,[rax-0x1]
  41617f:	mov    rax,QWORD PTR [rbp-0x8]
  416183:	mov    DWORD PTR [rax+0x104],edx
  416189:	nop
  41618a:	leave  
  41618b:	ret    
  41618c:	push   rbp
  41618d:	mov    rbp,rsp
  416190:	mov    QWORD PTR [rbp-0x8],rdi
  416194:	mov    DWORD PTR [rbp-0xc],esi
  416197:	mov    eax,edx
  416199:	mov    WORD PTR [rbp-0x10],ax
  41619d:	mov    rax,QWORD PTR [rbp-0x8]
  4161a1:	mov    eax,DWORD PTR [rax+0xf0]
  4161a7:	sub    eax,DWORD PTR [rbp-0xc]
  4161aa:	movzx  edx,WORD PTR [rbp-0x10]
  4161ae:	dec    edx
  4161b0:	and    eax,edx
  4161b2:	pop    rbp
  4161b3:	ret    
  4161b4:	push   rbp
  4161b5:	mov    rbp,rsp
  4161b8:	mov    QWORD PTR [rbp-0x8],rdi
  4161bc:	mov    eax,esi
  4161be:	mov    WORD PTR [rbp-0xc],ax
  4161c2:	mov    rax,QWORD PTR [rbp-0x8]
  4161c6:	mov    eax,DWORD PTR [rax+0xf4]
  4161cc:	movzx  edx,WORD PTR [rbp-0xc]
  4161d0:	dec    edx
  4161d2:	and    eax,edx
  4161d4:	pop    rbp
  4161d5:	ret    
  4161d6:	push   rbp
  4161d7:	mov    rbp,rsp
  4161da:	sub    rsp,0x20
  4161de:	mov    QWORD PTR [rbp-0x18],rdi
  4161e2:	mov    QWORD PTR [rbp-0x20],rsi
  4161e6:	mov    rax,QWORD PTR [rbp-0x18]
  4161ea:	mov    edx,DWORD PTR [rax+0xf0]
  4161f0:	mov    rax,QWORD PTR [rbp-0x20]
  4161f4:	mov    rax,QWORD PTR [rax]
  4161f7:	sub    edx,eax
  4161f9:	mov    eax,edx
  4161fb:	mov    DWORD PTR [rbp-0x4],eax
  4161fe:	mov    rax,QWORD PTR [rbp-0x20]
  416202:	mov    rax,QWORD PTR [rax]
  416205:	cmp    rax,0x10
  416209:	jbe    416220 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  41620b:	mov    rax,QWORD PTR [rbp-0x20]
  41620f:	mov    rax,QWORD PTR [rax]
  416212:	lea    rdx,[rax-0x10]
  416216:	mov    eax,0xffffffff
  41621b:	cmp    rdx,rax
  41621e:	ja     41622f <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  416220:	mov    rax,QWORD PTR [rbp-0x18]
  416224:	mov    eax,DWORD PTR [rax+0xf0]
  41622a:	cmp    DWORD PTR [rbp-0x4],eax
  41622d:	jl     41624e <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  41622f:	lea    rcx,[rip+0xc872]        # 422aa8 <flatcc_builder_padding_base@@Base+0x708>
  416236:	mov    edx,0x287
  41623b:	lea    rsi,[rip+0xc35e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  416242:	lea    rdi,[rip+0xc3b7]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  416249:	call   403220 <__assert_fail@plt>
  41624e:	mov    rax,QWORD PTR [rbp-0x18]
  416252:	mov    rax,QWORD PTR [rax+0x48]
  416256:	mov    rdx,QWORD PTR [rbp-0x20]
  41625a:	mov    r8,QWORD PTR [rdx]
  41625d:	mov    rdx,QWORD PTR [rbp-0x20]
  416261:	mov    edx,DWORD PTR [rdx+0x8]
  416264:	mov    rcx,QWORD PTR [rbp-0x20]
  416268:	lea    rsi,[rcx+0x10]
  41626c:	mov    rcx,QWORD PTR [rbp-0x18]
  416270:	mov    rdi,QWORD PTR [rcx+0x38]
  416274:	mov    ecx,DWORD PTR [rbp-0x4]
  416277:	call   rax
  416279:	test   eax,eax
  41627b:	je     41629c <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  41627d:	lea    rcx,[rip+0xc824]        # 422aa8 <flatcc_builder_padding_base@@Base+0x708>
  416284:	mov    edx,0x28b
  416289:	lea    rsi,[rip+0xc310]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  416290:	lea    rdi,[rip+0xc369]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  416297:	call   403220 <__assert_fail@plt>
  41629c:	mov    rax,QWORD PTR [rbp-0x18]
  4162a0:	mov    edx,DWORD PTR [rbp-0x4]
  4162a3:	mov    DWORD PTR [rax+0xf0],edx
  4162a9:	mov    rax,QWORD PTR [rbp-0x18]
  4162ad:	mov    eax,DWORD PTR [rax+0xf0]
  4162b3:	leave  
  4162b4:	ret    
  4162b5:	push   rbp
  4162b6:	mov    rbp,rsp
  4162b9:	sub    rsp,0x20
  4162bd:	mov    QWORD PTR [rbp-0x18],rdi
  4162c1:	mov    QWORD PTR [rbp-0x20],rsi
  4162c5:	mov    rax,QWORD PTR [rbp-0x18]
  4162c9:	mov    eax,DWORD PTR [rax+0xf4]
  4162cf:	mov    DWORD PTR [rbp-0x4],eax
  4162d2:	mov    rax,QWORD PTR [rbp-0x20]
  4162d6:	mov    rax,QWORD PTR [rax]
  4162d9:	mov    edx,eax
  4162db:	mov    eax,DWORD PTR [rbp-0x4]
  4162de:	add    edx,eax
  4162e0:	mov    rax,QWORD PTR [rbp-0x18]
  4162e4:	mov    DWORD PTR [rax+0xf4],edx
  4162ea:	mov    rax,QWORD PTR [rbp-0x18]
  4162ee:	mov    eax,DWORD PTR [rax+0xf4]
  4162f4:	cmp    DWORD PTR [rbp-0x4],eax
  4162f7:	jle    416318 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  4162f9:	lea    rcx,[rip+0xc798]        # 422a98 <flatcc_builder_padding_base@@Base+0x6f8>
  416300:	mov    edx,0x2a1
  416305:	lea    rsi,[rip+0xc294]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41630c:	lea    rdi,[rip+0xc2ed]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  416313:	call   403220 <__assert_fail@plt>
  416318:	mov    rax,QWORD PTR [rbp-0x18]
  41631c:	mov    rax,QWORD PTR [rax+0x48]
  416320:	mov    rdx,QWORD PTR [rbp-0x20]
  416324:	mov    r8,QWORD PTR [rdx]
  416327:	mov    rdx,QWORD PTR [rbp-0x20]
  41632b:	mov    edx,DWORD PTR [rdx+0x8]
  41632e:	mov    rcx,QWORD PTR [rbp-0x20]
  416332:	lea    rsi,[rcx+0x10]
  416336:	mov    rcx,QWORD PTR [rbp-0x18]
  41633a:	mov    rdi,QWORD PTR [rcx+0x38]
  41633e:	mov    ecx,DWORD PTR [rbp-0x4]
  416341:	call   rax
  416343:	test   eax,eax
  416345:	je     416366 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  416347:	lea    rcx,[rip+0xc74a]        # 422a98 <flatcc_builder_padding_base@@Base+0x6f8>
  41634e:	mov    edx,0x2a5
  416353:	lea    rsi,[rip+0xc246]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41635a:	lea    rdi,[rip+0xc29f]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  416361:	call   403220 <__assert_fail@plt>
  416366:	mov    eax,DWORD PTR [rbp-0x4]
  416369:	inc    eax
  41636b:	leave  
  41636c:	ret    
  41636d:	endbr64 
  416371:	push   rbp
  416372:	mov    rbp,rsp
  416375:	sub    rsp,0xd0
  41637c:	mov    QWORD PTR [rbp-0xb8],rdi
  416383:	mov    QWORD PTR [rbp-0xc0],rsi
  41638a:	mov    eax,edx
  41638c:	mov    DWORD PTR [rbp-0xc8],ecx
  416392:	mov    WORD PTR [rbp-0xc4],ax
  416399:	mov    rax,QWORD PTR fs:0x28
  4163a2:	mov    QWORD PTR [rbp-0x8],rax
  4163a6:	xor    eax,eax
  4163a8:	cmp    WORD PTR [rbp-0xc4],0x0
  4163b0:	jne    4163dc <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  4163b2:	mov    rax,QWORD PTR [rbp-0xb8]
  4163b9:	movzx  eax,WORD PTR [rax+0xec]
  4163c0:	test   ax,ax
  4163c3:	je     4163d5 <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  4163c5:	mov    rax,QWORD PTR [rbp-0xb8]
  4163cc:	movzx  eax,WORD PTR [rax+0xec]
  4163d3:	jmp    4163e3 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  4163d5:	mov    eax,0x1
  4163da:	jmp    4163e3 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  4163dc:	movzx  eax,WORD PTR [rbp-0xc4]
  4163e3:	mov    WORD PTR [rbp-0xc4],ax
  4163ea:	mov    rax,QWORD PTR [rbp-0xc0]
  4163f1:	mov    esi,0x4
  4163f6:	mov    rdi,rax
  4163f9:	call   415bea <flatcc_builder_clear@@Base+0xca>
  4163fe:	movzx  edx,WORD PTR [rbp-0xc4]
  416405:	mov    rax,QWORD PTR [rbp-0xc0]
  41640c:	mov    esi,edx
  41640e:	mov    rdi,rax
  416411:	call   415bea <flatcc_builder_clear@@Base+0xca>
  416416:	cmp    DWORD PTR [rbp-0xc8],0x0
  41641d:	jne    416512 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  416423:	movzx  edx,WORD PTR [rbp-0xc4]
  41642a:	mov    rax,QWORD PTR [rbp-0xb8]
  416431:	mov    esi,edx
  416433:	mov    rdi,rax
  416436:	call   4161b4 <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  41643b:	mov    eax,eax
  41643d:	mov    QWORD PTR [rbp-0xa8],rax
  416444:	cmp    QWORD PTR [rbp-0xa8],0x0
  41644c:	je     416512 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  416452:	mov    QWORD PTR [rbp-0xa0],0x0
  41645d:	mov    DWORD PTR [rbp-0x98],0x0
  416467:	cmp    QWORD PTR [rbp-0xa8],0x0
  41646f:	je     4164d6 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  416471:	mov    rdx,QWORD PTR [rbp-0xa0]
  416478:	mov    rax,QWORD PTR [rbp-0xa8]
  41647f:	add    rax,rdx
  416482:	mov    QWORD PTR [rbp-0xa0],rax
  416489:	mov    eax,DWORD PTR [rbp-0x98]
  41648f:	cdqe   
  416491:	shl    rax,0x4
  416495:	add    rax,rbp
  416498:	sub    rax,0x90
  41649e:	mov    rdx,0x4223a0
  4164a5:	mov    QWORD PTR [rax],rdx
  4164a8:	mov    eax,DWORD PTR [rbp-0x98]
  4164ae:	cdqe   
  4164b0:	shl    rax,0x4
  4164b4:	add    rax,rbp
  4164b7:	lea    rdx,[rax-0x88]
  4164be:	mov    rax,QWORD PTR [rbp-0xa8]
  4164c5:	mov    QWORD PTR [rdx],rax
  4164c8:	mov    eax,DWORD PTR [rbp-0x98]
  4164ce:	inc    eax
  4164d0:	mov    DWORD PTR [rbp-0x98],eax
  4164d6:	lea    rdx,[rbp-0xa0]
  4164dd:	mov    rax,QWORD PTR [rbp-0xb8]
  4164e4:	mov    rsi,rdx
  4164e7:	mov    rdi,rax
  4164ea:	call   4162b5 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  4164ef:	test   eax,eax
  4164f1:	jne    416512 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  4164f3:	lea    rcx,[rip+0xc58e]        # 422a88 <flatcc_builder_padding_base@@Base+0x6e8>
  4164fa:	mov    edx,0x2be
  4164ff:	lea    rsi,[rip+0xc09a]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  416506:	lea    rdi,[rip+0xc0f3]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  41650d:	call   403220 <__assert_fail@plt>
  416512:	mov    eax,0x0
  416517:	mov    rcx,QWORD PTR [rbp-0x8]
  41651b:	xor    rcx,QWORD PTR fs:0x28
  416524:	je     41652b <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  416526:	call   403200 <__stack_chk_fail@plt>
  41652b:	leave  
  41652c:	ret    

000000000041652d <flatcc_builder_embed_buffer@@Base>:
  41652d:	endbr64 
  416531:	push   rbp
  416532:	mov    rbp,rsp
  416535:	sub    rsp,0xe0
  41653c:	mov    QWORD PTR [rbp-0xb8],rdi
  416543:	mov    eax,esi
  416545:	mov    QWORD PTR [rbp-0xc8],rdx
  41654c:	mov    QWORD PTR [rbp-0xd0],rcx
  416553:	mov    edx,r8d
  416556:	mov    DWORD PTR [rbp-0xd4],r9d
  41655d:	mov    WORD PTR [rbp-0xbc],ax
  416564:	mov    eax,edx
  416566:	mov    WORD PTR [rbp-0xc0],ax
  41656d:	mov    rax,QWORD PTR fs:0x28
  416576:	mov    QWORD PTR [rbp-0x8],rax
  41657a:	xor    eax,eax
  41657c:	mov    eax,DWORD PTR [rbp-0xd4]
  416582:	and    eax,0x2
  416585:	mov    DWORD PTR [rbp-0xa8],eax
  41658b:	mov    rax,QWORD PTR [rbp-0xb8]
  416592:	mov    eax,DWORD PTR [rax+0x100]
  416598:	test   eax,eax
  41659a:	setne  al
  41659d:	movzx  ecx,al
  4165a0:	movzx  edx,WORD PTR [rbp-0xbc]
  4165a7:	lea    rsi,[rbp-0xc0]
  4165ae:	mov    rax,QWORD PTR [rbp-0xb8]
  4165b5:	mov    rdi,rax
  4165b8:	call   41636d <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  4165bd:	test   eax,eax
  4165bf:	je     4165cb <flatcc_builder_embed_buffer@@Base+0x9e>
  4165c1:	mov    eax,0x0
  4165c6:	jmp    4167a2 <flatcc_builder_embed_buffer@@Base+0x275>
  4165cb:	movzx  eax,WORD PTR [rbp-0xc0]
  4165d2:	movzx  edx,ax
  4165d5:	mov    rax,QWORD PTR [rbp-0xd0]
  4165dc:	mov    ecx,eax
  4165de:	cmp    DWORD PTR [rbp-0xa8],0x0
  4165e5:	je     4165ee <flatcc_builder_embed_buffer@@Base+0xc1>
  4165e7:	mov    eax,0x4
  4165ec:	jmp    4165f3 <flatcc_builder_embed_buffer@@Base+0xc6>
  4165ee:	mov    eax,0x0
  4165f3:	add    ecx,eax
  4165f5:	mov    rax,QWORD PTR [rbp-0xb8]
  4165fc:	mov    esi,ecx
  4165fe:	mov    rdi,rax
  416601:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  416606:	mov    DWORD PTR [rbp-0xa4],eax
  41660c:	mov    rax,QWORD PTR [rbp-0xd0]
  416613:	mov    edx,eax
  416615:	mov    eax,DWORD PTR [rbp-0xa4]
  41661b:	add    eax,edx
  41661d:	mov    edi,eax
  41661f:	call   414e8d <main@@Base+0x120>
  416624:	mov    DWORD PTR [rbp-0xac],eax
  41662a:	mov    QWORD PTR [rbp-0xa0],0x0
  416635:	mov    DWORD PTR [rbp-0x98],0x0
  41663f:	mov    rax,QWORD PTR [rbp-0xb8]
  416646:	mov    eax,DWORD PTR [rax+0x100]
  41664c:	test   eax,eax
  41664e:	je     4166ac <flatcc_builder_embed_buffer@@Base+0x17f>
  416650:	mov    rax,QWORD PTR [rbp-0xa0]
  416657:	add    rax,0x4
  41665b:	mov    QWORD PTR [rbp-0xa0],rax
  416662:	mov    eax,DWORD PTR [rbp-0x98]
  416668:	cdqe   
  41666a:	shl    rax,0x4
  41666e:	add    rax,rbp
  416671:	lea    rdx,[rax-0x90]
  416678:	lea    rax,[rbp-0xac]
  41667f:	mov    QWORD PTR [rdx],rax
  416682:	mov    eax,DWORD PTR [rbp-0x98]
  416688:	cdqe   
  41668a:	shl    rax,0x4
  41668e:	add    rax,rbp
  416691:	sub    rax,0x88
  416697:	mov    QWORD PTR [rax],0x4
  41669e:	mov    eax,DWORD PTR [rbp-0x98]
  4166a4:	inc    eax
  4166a6:	mov    DWORD PTR [rbp-0x98],eax
  4166ac:	cmp    QWORD PTR [rbp-0xd0],0x0
  4166b4:	je     41671c <flatcc_builder_embed_buffer@@Base+0x1ef>
  4166b6:	mov    rdx,QWORD PTR [rbp-0xa0]
  4166bd:	mov    rax,QWORD PTR [rbp-0xd0]
  4166c4:	add    rax,rdx
  4166c7:	mov    QWORD PTR [rbp-0xa0],rax
  4166ce:	mov    eax,DWORD PTR [rbp-0x98]
  4166d4:	cdqe   
  4166d6:	shl    rax,0x4
  4166da:	add    rax,rbp
  4166dd:	lea    rdx,[rax-0x90]
  4166e4:	mov    rax,QWORD PTR [rbp-0xc8]
  4166eb:	mov    QWORD PTR [rdx],rax
  4166ee:	mov    eax,DWORD PTR [rbp-0x98]
  4166f4:	cdqe   
  4166f6:	shl    rax,0x4
  4166fa:	add    rax,rbp
  4166fd:	lea    rdx,[rax-0x88]
  416704:	mov    rax,QWORD PTR [rbp-0xd0]
  41670b:	mov    QWORD PTR [rdx],rax
  41670e:	mov    eax,DWORD PTR [rbp-0x98]
  416714:	inc    eax
  416716:	mov    DWORD PTR [rbp-0x98],eax
  41671c:	cmp    DWORD PTR [rbp-0xa4],0x0
  416723:	je     416789 <flatcc_builder_embed_buffer@@Base+0x25c>
  416725:	mov    rdx,QWORD PTR [rbp-0xa0]
  41672c:	mov    eax,DWORD PTR [rbp-0xa4]
  416732:	add    rax,rdx
  416735:	mov    QWORD PTR [rbp-0xa0],rax
  41673c:	mov    eax,DWORD PTR [rbp-0x98]
  416742:	cdqe   
  416744:	shl    rax,0x4
  416748:	add    rax,rbp
  41674b:	sub    rax,0x90
  416751:	mov    rdx,0x4223a0
  416758:	mov    QWORD PTR [rax],rdx
  41675b:	mov    edx,DWORD PTR [rbp-0x98]
  416761:	mov    eax,DWORD PTR [rbp-0xa4]
  416767:	movsxd rdx,edx
  41676a:	shl    rdx,0x4
  41676e:	add    rdx,rbp
  416771:	sub    rdx,0x88
  416778:	mov    QWORD PTR [rdx],rax
  41677b:	mov    eax,DWORD PTR [rbp-0x98]
  416781:	inc    eax
  416783:	mov    DWORD PTR [rbp-0x98],eax
  416789:	lea    rdx,[rbp-0xa0]
  416790:	mov    rax,QWORD PTR [rbp-0xb8]
  416797:	mov    rsi,rdx
  41679a:	mov    rdi,rax
  41679d:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4167a2:	mov    rdi,QWORD PTR [rbp-0x8]
  4167a6:	xor    rdi,QWORD PTR fs:0x28
  4167af:	je     4167b6 <flatcc_builder_embed_buffer@@Base+0x289>
  4167b1:	call   403200 <__stack_chk_fail@plt>
  4167b6:	leave  
  4167b7:	ret    

00000000004167b8 <flatcc_builder_create_buffer@@Base>:
  4167b8:	endbr64 
  4167bc:	push   rbp
  4167bd:	mov    rbp,rsp
  4167c0:	sub    rsp,0xf0
  4167c7:	mov    QWORD PTR [rbp-0xd8],rdi
  4167ce:	mov    QWORD PTR [rbp-0xe0],rsi
  4167d5:	mov    eax,edx
  4167d7:	mov    DWORD PTR [rbp-0xe8],ecx
  4167dd:	mov    edx,r8d
  4167e0:	mov    DWORD PTR [rbp-0xf0],r9d
  4167e7:	mov    WORD PTR [rbp-0xe4],ax
  4167ee:	mov    eax,edx
  4167f0:	mov    WORD PTR [rbp-0xec],ax
  4167f7:	mov    rax,QWORD PTR fs:0x28
  416800:	mov    QWORD PTR [rbp-0x8],rax
  416804:	xor    eax,eax
  416806:	mov    DWORD PTR [rbp-0xb8],0x0
  416810:	mov    DWORD PTR [rbp-0xbc],0x0
  41681a:	mov    eax,DWORD PTR [rbp-0xf0]
  416820:	and    eax,0x1
  416823:	test   eax,eax
  416825:	setne  al
  416828:	movzx  eax,al
  41682b:	mov    DWORD PTR [rbp-0xb4],eax
  416831:	mov    eax,DWORD PTR [rbp-0xf0]
  416837:	and    eax,0x2
  41683a:	test   eax,eax
  41683c:	setne  al
  41683f:	movzx  eax,al
  416842:	mov    DWORD PTR [rbp-0xb0],eax
  416848:	movzx  edx,WORD PTR [rbp-0xe4]
  41684f:	mov    ecx,DWORD PTR [rbp-0xb4]
  416855:	lea    rsi,[rbp-0xec]
  41685c:	mov    rax,QWORD PTR [rbp-0xd8]
  416863:	mov    rdi,rax
  416866:	call   41636d <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  41686b:	test   eax,eax
  41686d:	je     416879 <flatcc_builder_create_buffer@@Base+0xc1>
  41686f:	mov    eax,0x0
  416874:	jmp    416bdb <flatcc_builder_create_buffer@@Base+0x423>
  416879:	movzx  eax,WORD PTR [rbp-0xec]
  416880:	movzx  edx,ax
  416883:	mov    rax,QWORD PTR [rbp-0xd8]
  41688a:	mov    esi,edx
  41688c:	mov    rdi,rax
  41688f:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  416894:	cmp    QWORD PTR [rbp-0xe0],0x0
  41689c:	je     4168d3 <flatcc_builder_create_buffer@@Base+0x11b>
  41689e:	mov    rax,QWORD PTR [rbp-0xe0]
  4168a5:	mov    eax,DWORD PTR [rax]
  4168a7:	mov    DWORD PTR [rbp-0xbc],eax
  4168ad:	mov    eax,DWORD PTR [rbp-0xbc]
  4168b3:	mov    edi,eax
  4168b5:	call   414ea8 <main@@Base+0x13b>
  4168ba:	mov    DWORD PTR [rbp-0xbc],eax
  4168c0:	mov    eax,DWORD PTR [rbp-0xbc]
  4168c6:	mov    edi,eax
  4168c8:	call   414e8d <main@@Base+0x120>
  4168cd:	mov    DWORD PTR [rbp-0xbc],eax
  4168d3:	mov    eax,DWORD PTR [rbp-0xbc]
  4168d9:	test   eax,eax
  4168db:	je     4168e4 <flatcc_builder_create_buffer@@Base+0x12c>
  4168dd:	mov    eax,0x4
  4168e2:	jmp    4168e9 <flatcc_builder_create_buffer@@Base+0x131>
  4168e4:	mov    eax,0x0
  4168e9:	mov    DWORD PTR [rbp-0xb8],eax
  4168ef:	movzx  eax,WORD PTR [rbp-0xec]
  4168f6:	movzx  edx,ax
  4168f9:	cmp    DWORD PTR [rbp-0xb0],0x0
  416900:	je     416909 <flatcc_builder_create_buffer@@Base+0x151>
  416902:	mov    ecx,0x4
  416907:	jmp    41690e <flatcc_builder_create_buffer@@Base+0x156>
  416909:	mov    ecx,0x0
  41690e:	mov    eax,DWORD PTR [rbp-0xb8]
  416914:	add    eax,ecx
  416916:	lea    ecx,[rax+0x4]
  416919:	mov    rax,QWORD PTR [rbp-0xd8]
  416920:	mov    esi,ecx
  416922:	mov    rdi,rax
  416925:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41692a:	mov    DWORD PTR [rbp-0xac],eax
  416930:	mov    QWORD PTR [rbp-0xa0],0x0
  41693b:	mov    DWORD PTR [rbp-0x98],0x0
  416945:	cmp    DWORD PTR [rbp-0xb4],0x0
  41694c:	jne    416957 <flatcc_builder_create_buffer@@Base+0x19f>
  41694e:	cmp    DWORD PTR [rbp-0xb0],0x0
  416955:	je     4169b3 <flatcc_builder_create_buffer@@Base+0x1fb>
  416957:	mov    rax,QWORD PTR [rbp-0xa0]
  41695e:	add    rax,0x4
  416962:	mov    QWORD PTR [rbp-0xa0],rax
  416969:	mov    eax,DWORD PTR [rbp-0x98]
  41696f:	cdqe   
  416971:	shl    rax,0x4
  416975:	add    rax,rbp
  416978:	lea    rdx,[rax-0x90]
  41697f:	lea    rax,[rbp-0xc0]
  416986:	mov    QWORD PTR [rdx],rax
  416989:	mov    eax,DWORD PTR [rbp-0x98]
  41698f:	cdqe   
  416991:	shl    rax,0x4
  416995:	add    rax,rbp
  416998:	sub    rax,0x88
  41699e:	mov    QWORD PTR [rax],0x4
  4169a5:	mov    eax,DWORD PTR [rbp-0x98]
  4169ab:	inc    eax
  4169ad:	mov    DWORD PTR [rbp-0x98],eax
  4169b3:	mov    rax,QWORD PTR [rbp-0xa0]
  4169ba:	add    rax,0x4
  4169be:	mov    QWORD PTR [rbp-0xa0],rax
  4169c5:	mov    eax,DWORD PTR [rbp-0x98]
  4169cb:	cdqe   
  4169cd:	shl    rax,0x4
  4169d1:	add    rax,rbp
  4169d4:	lea    rdx,[rax-0x90]
  4169db:	lea    rax,[rbp-0xc4]
  4169e2:	mov    QWORD PTR [rdx],rax
  4169e5:	mov    eax,DWORD PTR [rbp-0x98]
  4169eb:	cdqe   
  4169ed:	shl    rax,0x4
  4169f1:	add    rax,rbp
  4169f4:	sub    rax,0x88
  4169fa:	mov    QWORD PTR [rax],0x4
  416a01:	mov    eax,DWORD PTR [rbp-0x98]
  416a07:	inc    eax
  416a09:	mov    DWORD PTR [rbp-0x98],eax
  416a0f:	cmp    DWORD PTR [rbp-0xb8],0x0
  416a16:	je     416a7d <flatcc_builder_create_buffer@@Base+0x2c5>
  416a18:	mov    rdx,QWORD PTR [rbp-0xa0]
  416a1f:	mov    eax,DWORD PTR [rbp-0xb8]
  416a25:	add    rax,rdx
  416a28:	mov    QWORD PTR [rbp-0xa0],rax
  416a2f:	mov    eax,DWORD PTR [rbp-0x98]
  416a35:	cdqe   
  416a37:	shl    rax,0x4
  416a3b:	add    rax,rbp
  416a3e:	lea    rdx,[rax-0x90]
  416a45:	lea    rax,[rbp-0xbc]
  416a4c:	mov    QWORD PTR [rdx],rax
  416a4f:	mov    edx,DWORD PTR [rbp-0x98]
  416a55:	mov    eax,DWORD PTR [rbp-0xb8]
  416a5b:	movsxd rdx,edx
  416a5e:	shl    rdx,0x4
  416a62:	add    rdx,rbp
  416a65:	sub    rdx,0x88
  416a6c:	mov    QWORD PTR [rdx],rax
  416a6f:	mov    eax,DWORD PTR [rbp-0x98]
  416a75:	inc    eax
  416a77:	mov    DWORD PTR [rbp-0x98],eax
  416a7d:	cmp    DWORD PTR [rbp-0xac],0x0
  416a84:	je     416aea <flatcc_builder_create_buffer@@Base+0x332>
  416a86:	mov    rdx,QWORD PTR [rbp-0xa0]
  416a8d:	mov    eax,DWORD PTR [rbp-0xac]
  416a93:	add    rax,rdx
  416a96:	mov    QWORD PTR [rbp-0xa0],rax
  416a9d:	mov    eax,DWORD PTR [rbp-0x98]
  416aa3:	cdqe   
  416aa5:	shl    rax,0x4
  416aa9:	add    rax,rbp
  416aac:	sub    rax,0x90
  416ab2:	mov    rdx,0x4223a0
  416ab9:	mov    QWORD PTR [rax],rdx
  416abc:	mov    edx,DWORD PTR [rbp-0x98]
  416ac2:	mov    eax,DWORD PTR [rbp-0xac]
  416ac8:	movsxd rdx,edx
  416acb:	shl    rdx,0x4
  416acf:	add    rdx,rbp
  416ad2:	sub    rdx,0x88
  416ad9:	mov    QWORD PTR [rdx],rax
  416adc:	mov    eax,DWORD PTR [rbp-0x98]
  416ae2:	inc    eax
  416ae4:	mov    DWORD PTR [rbp-0x98],eax
  416aea:	mov    rax,QWORD PTR [rbp-0xd8]
  416af1:	mov    eax,DWORD PTR [rax+0xf0]
  416af7:	mov    edx,eax
  416af9:	mov    rax,QWORD PTR [rbp-0xa0]
  416b00:	sub    edx,eax
  416b02:	mov    eax,edx
  416b04:	cmp    DWORD PTR [rbp-0xb4],0x0
  416b0b:	jne    416b16 <flatcc_builder_create_buffer@@Base+0x35e>
  416b0d:	cmp    DWORD PTR [rbp-0xb0],0x0
  416b14:	je     416b1d <flatcc_builder_create_buffer@@Base+0x365>
  416b16:	mov    edx,0x4
  416b1b:	jmp    416b22 <flatcc_builder_create_buffer@@Base+0x36a>
  416b1d:	mov    edx,0x0
  416b22:	add    eax,edx
  416b24:	mov    DWORD PTR [rbp-0xa8],eax
  416b2a:	cmp    DWORD PTR [rbp-0xb4],0x0
  416b31:	je     416b55 <flatcc_builder_create_buffer@@Base+0x39d>
  416b33:	mov    rax,QWORD PTR [rbp-0xd8]
  416b3a:	mov    eax,DWORD PTR [rax+0xf8]
  416b40:	sub    eax,DWORD PTR [rbp-0xa8]
  416b46:	mov    edi,eax
  416b48:	call   414e8d <main@@Base+0x120>
  416b4d:	mov    DWORD PTR [rbp-0xc0],eax
  416b53:	jmp    416b75 <flatcc_builder_create_buffer@@Base+0x3bd>
  416b55:	mov    rax,QWORD PTR [rbp-0xd8]
  416b5c:	mov    eax,DWORD PTR [rax+0xf4]
  416b62:	sub    eax,DWORD PTR [rbp-0xa8]
  416b68:	mov    edi,eax
  416b6a:	call   414e8d <main@@Base+0x120>
  416b6f:	mov    DWORD PTR [rbp-0xc0],eax
  416b75:	mov    eax,DWORD PTR [rbp-0xe8]
  416b7b:	sub    eax,DWORD PTR [rbp-0xa8]
  416b81:	mov    edi,eax
  416b83:	call   414e8d <main@@Base+0x120>
  416b88:	mov    DWORD PTR [rbp-0xc4],eax
  416b8e:	lea    rdx,[rbp-0xa0]
  416b95:	mov    rax,QWORD PTR [rbp-0xd8]
  416b9c:	mov    rsi,rdx
  416b9f:	mov    rdi,rax
  416ba2:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  416ba7:	mov    DWORD PTR [rbp-0xa4],eax
  416bad:	cmp    DWORD PTR [rbp-0xa4],0x0
  416bb4:	jne    416bd5 <flatcc_builder_create_buffer@@Base+0x41d>
  416bb6:	lea    rcx,[rip+0xbf03]        # 422ac0 <flatcc_builder_padding_base@@Base+0x720>
  416bbd:	mov    edx,0x304
  416bc2:	lea    rsi,[rip+0xb9d7]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  416bc9:	lea    rdi,[rip+0xba30]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  416bd0:	call   403220 <__assert_fail@plt>
  416bd5:	mov    eax,DWORD PTR [rbp-0xa4]
  416bdb:	mov    rsi,QWORD PTR [rbp-0x8]
  416bdf:	xor    rsi,QWORD PTR fs:0x28
  416be8:	je     416bef <flatcc_builder_create_buffer@@Base+0x437>
  416bea:	call   403200 <__stack_chk_fail@plt>
  416bef:	leave  
  416bf0:	ret    

0000000000416bf1 <flatcc_builder_create_struct@@Base>:
  416bf1:	endbr64 
  416bf5:	push   rbp
  416bf6:	mov    rbp,rsp
  416bf9:	sub    rsp,0xd0
  416c00:	mov    QWORD PTR [rbp-0xb8],rdi
  416c07:	mov    QWORD PTR [rbp-0xc0],rsi
  416c0e:	mov    QWORD PTR [rbp-0xc8],rdx
  416c15:	mov    eax,ecx
  416c17:	mov    WORD PTR [rbp-0xcc],ax
  416c1e:	mov    rax,QWORD PTR fs:0x28
  416c27:	mov    QWORD PTR [rbp-0x8],rax
  416c2b:	xor    eax,eax
  416c2d:	cmp    WORD PTR [rbp-0xcc],0x0
  416c35:	jne    416c56 <flatcc_builder_create_struct@@Base+0x65>
  416c37:	lea    rcx,[rip+0xbea2]        # 422ae0 <flatcc_builder_padding_base@@Base+0x740>
  416c3e:	mov    edx,0x30f
  416c43:	lea    rsi,[rip+0xb956]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  416c4a:	lea    rdi,[rip+0xba0e]        # 42265f <flatcc_builder_padding_base@@Base+0x2bf>
  416c51:	call   403220 <__assert_fail@plt>
  416c56:	movzx  edx,WORD PTR [rbp-0xcc]
  416c5d:	mov    rax,QWORD PTR [rbp-0xb8]
  416c64:	mov    esi,edx
  416c66:	mov    rdi,rax
  416c69:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  416c6e:	movzx  edx,WORD PTR [rbp-0xcc]
  416c75:	mov    rax,QWORD PTR [rbp-0xc8]
  416c7c:	mov    ecx,eax
  416c7e:	mov    rax,QWORD PTR [rbp-0xb8]
  416c85:	mov    esi,ecx
  416c87:	mov    rdi,rax
  416c8a:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  416c8f:	mov    eax,eax
  416c91:	mov    QWORD PTR [rbp-0xa8],rax
  416c98:	mov    QWORD PTR [rbp-0xa0],0x0
  416ca3:	mov    DWORD PTR [rbp-0x98],0x0
  416cad:	cmp    QWORD PTR [rbp-0xc8],0x0
  416cb5:	je     416d1d <flatcc_builder_create_struct@@Base+0x12c>
  416cb7:	mov    rdx,QWORD PTR [rbp-0xa0]
  416cbe:	mov    rax,QWORD PTR [rbp-0xc8]
  416cc5:	add    rax,rdx
  416cc8:	mov    QWORD PTR [rbp-0xa0],rax
  416ccf:	mov    eax,DWORD PTR [rbp-0x98]
  416cd5:	cdqe   
  416cd7:	shl    rax,0x4
  416cdb:	add    rax,rbp
  416cde:	lea    rdx,[rax-0x90]
  416ce5:	mov    rax,QWORD PTR [rbp-0xc0]
  416cec:	mov    QWORD PTR [rdx],rax
  416cef:	mov    eax,DWORD PTR [rbp-0x98]
  416cf5:	cdqe   
  416cf7:	shl    rax,0x4
  416cfb:	add    rax,rbp
  416cfe:	lea    rdx,[rax-0x88]
  416d05:	mov    rax,QWORD PTR [rbp-0xc8]
  416d0c:	mov    QWORD PTR [rdx],rax
  416d0f:	mov    eax,DWORD PTR [rbp-0x98]
  416d15:	inc    eax
  416d17:	mov    DWORD PTR [rbp-0x98],eax
  416d1d:	cmp    QWORD PTR [rbp-0xa8],0x0
  416d25:	je     416d8c <flatcc_builder_create_struct@@Base+0x19b>
  416d27:	mov    rdx,QWORD PTR [rbp-0xa0]
  416d2e:	mov    rax,QWORD PTR [rbp-0xa8]
  416d35:	add    rax,rdx
  416d38:	mov    QWORD PTR [rbp-0xa0],rax
  416d3f:	mov    eax,DWORD PTR [rbp-0x98]
  416d45:	cdqe   
  416d47:	shl    rax,0x4
  416d4b:	add    rax,rbp
  416d4e:	sub    rax,0x90
  416d54:	mov    rdx,0x4223a0
  416d5b:	mov    QWORD PTR [rax],rdx
  416d5e:	mov    eax,DWORD PTR [rbp-0x98]
  416d64:	cdqe   
  416d66:	shl    rax,0x4
  416d6a:	add    rax,rbp
  416d6d:	lea    rdx,[rax-0x88]
  416d74:	mov    rax,QWORD PTR [rbp-0xa8]
  416d7b:	mov    QWORD PTR [rdx],rax
  416d7e:	mov    eax,DWORD PTR [rbp-0x98]
  416d84:	inc    eax
  416d86:	mov    DWORD PTR [rbp-0x98],eax
  416d8c:	lea    rdx,[rbp-0xa0]
  416d93:	mov    rax,QWORD PTR [rbp-0xb8]
  416d9a:	mov    rsi,rdx
  416d9d:	mov    rdi,rax
  416da0:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  416da5:	mov    rcx,QWORD PTR [rbp-0x8]
  416da9:	xor    rcx,QWORD PTR fs:0x28
  416db2:	je     416db9 <flatcc_builder_create_struct@@Base+0x1c8>
  416db4:	call   403200 <__stack_chk_fail@plt>
  416db9:	leave  
  416dba:	ret    

0000000000416dbb <flatcc_builder_start_buffer@@Base>:
  416dbb:	endbr64 
  416dbf:	push   rbp
  416dc0:	mov    rbp,rsp
  416dc3:	sub    rsp,0x20
  416dc7:	mov    QWORD PTR [rbp-0x8],rdi
  416dcb:	mov    QWORD PTR [rbp-0x10],rsi
  416dcf:	mov    eax,edx
  416dd1:	mov    DWORD PTR [rbp-0x18],ecx
  416dd4:	mov    WORD PTR [rbp-0x14],ax
  416dd8:	mov    rax,QWORD PTR [rbp-0x8]
  416ddc:	movzx  eax,WORD PTR [rax+0xe8]
  416de3:	movzx  edx,ax
  416de6:	mov    rax,QWORD PTR [rbp-0x8]
  416dea:	mov    esi,edx
  416dec:	mov    rdi,rax
  416def:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  416df4:	test   eax,eax
  416df6:	je     416e02 <flatcc_builder_start_buffer@@Base+0x47>
  416df8:	mov    eax,0xffffffff
  416dfd:	jmp    416f06 <flatcc_builder_start_buffer@@Base+0x14b>
  416e02:	mov    rax,QWORD PTR [rbp-0x8]
  416e06:	mov    WORD PTR [rax+0xe8],0x1
  416e0f:	mov    rax,QWORD PTR [rbp-0x8]
  416e13:	mov    rdx,QWORD PTR [rax+0x30]
  416e17:	mov    rax,QWORD PTR [rbp-0x8]
  416e1b:	movzx  eax,WORD PTR [rax+0xec]
  416e22:	mov    WORD PTR [rdx+0x22],ax
  416e26:	mov    rdx,QWORD PTR [rbp-0x8]
  416e2a:	movzx  eax,WORD PTR [rbp-0x14]
  416e2e:	mov    WORD PTR [rdx+0xec],ax
  416e35:	mov    rax,QWORD PTR [rbp-0x8]
  416e39:	mov    rdx,QWORD PTR [rax+0x30]
  416e3d:	mov    rax,QWORD PTR [rbp-0x8]
  416e41:	movzx  eax,WORD PTR [rax+0x10c]
  416e48:	mov    WORD PTR [rdx+0x20],ax
  416e4c:	mov    eax,DWORD PTR [rbp-0x18]
  416e4f:	mov    edx,eax
  416e51:	mov    rax,QWORD PTR [rbp-0x8]
  416e55:	mov    WORD PTR [rax+0x10c],dx
  416e5c:	mov    rax,QWORD PTR [rbp-0x8]
  416e60:	mov    rax,QWORD PTR [rax+0x30]
  416e64:	mov    rdx,QWORD PTR [rbp-0x8]
  416e68:	mov    edx,DWORD PTR [rdx+0xf8]
  416e6e:	mov    DWORD PTR [rax+0x14],edx
  416e71:	mov    rax,QWORD PTR [rbp-0x8]
  416e75:	mov    rax,QWORD PTR [rax+0x30]
  416e79:	mov    rdx,QWORD PTR [rbp-0x8]
  416e7d:	mov    edx,DWORD PTR [rdx+0x100]
  416e83:	mov    DWORD PTR [rax+0x1c],edx
  416e86:	mov    rax,QWORD PTR [rbp-0x8]
  416e8a:	mov    edx,DWORD PTR [rax+0xf0]
  416e90:	mov    rax,QWORD PTR [rbp-0x8]
  416e94:	mov    DWORD PTR [rax+0xf8],edx
  416e9a:	mov    rax,QWORD PTR [rbp-0x8]
  416e9e:	mov    eax,DWORD PTR [rax+0xfc]
  416ea4:	lea    ecx,[rax+0x1]
  416ea7:	mov    rdx,QWORD PTR [rbp-0x8]
  416eab:	mov    DWORD PTR [rdx+0xfc],ecx
  416eb1:	mov    rdx,QWORD PTR [rbp-0x8]
  416eb5:	mov    DWORD PTR [rdx+0x100],eax
  416ebb:	mov    rax,QWORD PTR [rbp-0x8]
  416ebf:	mov    rax,QWORD PTR [rax+0x30]
  416ec3:	mov    rdx,QWORD PTR [rbp-0x8]
  416ec7:	mov    edx,DWORD PTR [rdx+0x110]
  416ecd:	mov    DWORD PTR [rax+0x10],edx
  416ed0:	cmp    QWORD PTR [rbp-0x10],0x0
  416ed5:	je     416edd <flatcc_builder_start_buffer@@Base+0x122>
  416ed7:	mov    rax,QWORD PTR [rbp-0x10]
  416edb:	jmp    416ee4 <flatcc_builder_start_buffer@@Base+0x129>
  416edd:	mov    rax,0x4223a0
  416ee4:	mov    rdx,QWORD PTR [rbp-0x8]
  416ee8:	add    rdx,0x110
  416eef:	mov    eax,DWORD PTR [rax]
  416ef1:	mov    DWORD PTR [rdx],eax
  416ef3:	mov    rax,QWORD PTR [rbp-0x8]
  416ef7:	mov    rax,QWORD PTR [rax+0x30]
  416efb:	mov    WORD PTR [rax+0xe],0x1
  416f01:	mov    eax,0x0
  416f06:	leave  
  416f07:	ret    

0000000000416f08 <flatcc_builder_end_buffer@@Base>:
  416f08:	endbr64 
  416f0c:	push   rbp
  416f0d:	mov    rbp,rsp
  416f10:	sub    rsp,0x20
  416f14:	mov    QWORD PTR [rbp-0x18],rdi
  416f18:	mov    DWORD PTR [rbp-0x1c],esi
  416f1b:	mov    rax,QWORD PTR [rbp-0x18]
  416f1f:	movzx  eax,WORD PTR [rax+0x10c]
  416f26:	movzx  eax,ax
  416f29:	and    eax,0x2
  416f2c:	mov    DWORD PTR [rbp-0x8],eax
  416f2f:	mov    rax,QWORD PTR [rbp-0x18]
  416f33:	mov    eax,DWORD PTR [rax+0x100]
  416f39:	test   eax,eax
  416f3b:	setne  al
  416f3e:	movzx  eax,al
  416f41:	or     DWORD PTR [rbp-0x8],eax
  416f44:	mov    rax,QWORD PTR [rbp-0x18]
  416f48:	mov    rax,QWORD PTR [rax+0x30]
  416f4c:	movzx  eax,WORD PTR [rax+0xe]
  416f50:	cmp    ax,0x1
  416f54:	je     416f75 <flatcc_builder_end_buffer@@Base+0x6d>
  416f56:	lea    rcx,[rip+0xbba3]        # 422b00 <flatcc_builder_padding_base@@Base+0x760>
  416f5d:	mov    edx,0x346
  416f62:	lea    rsi,[rip+0xb637]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  416f69:	lea    rdi,[rip+0xb700]        # 422670 <flatcc_builder_padding_base@@Base+0x2d0>
  416f70:	call   403220 <__assert_fail@plt>
  416f75:	mov    rax,QWORD PTR [rbp-0x18]
  416f79:	movzx  eax,WORD PTR [rax+0xec]
  416f80:	movzx  edx,ax
  416f83:	mov    rax,QWORD PTR [rbp-0x18]
  416f87:	mov    esi,edx
  416f89:	mov    rdi,rax
  416f8c:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  416f91:	mov    rax,QWORD PTR [rbp-0x18]
  416f95:	movzx  eax,WORD PTR [rax+0xe8]
  416f9c:	movzx  edi,ax
  416f9f:	mov    rax,QWORD PTR [rbp-0x18]
  416fa3:	movzx  eax,WORD PTR [rax+0xec]
  416faa:	movzx  edx,ax
  416fad:	mov    rax,QWORD PTR [rbp-0x18]
  416fb1:	lea    rsi,[rax+0x110]
  416fb8:	mov    r8d,DWORD PTR [rbp-0x8]
  416fbc:	mov    ecx,DWORD PTR [rbp-0x1c]
  416fbf:	mov    rax,QWORD PTR [rbp-0x18]
  416fc3:	mov    r9d,r8d
  416fc6:	mov    r8d,edi
  416fc9:	mov    rdi,rax
  416fcc:	call   4167b8 <flatcc_builder_create_buffer@@Base>
  416fd1:	mov    DWORD PTR [rbp-0x4],eax
  416fd4:	cmp    DWORD PTR [rbp-0x4],0x0
  416fd8:	jne    416fe1 <flatcc_builder_end_buffer@@Base+0xd9>
  416fda:	mov    eax,0x0
  416fdf:	jmp    417046 <flatcc_builder_end_buffer@@Base+0x13e>
  416fe1:	mov    rax,QWORD PTR [rbp-0x18]
  416fe5:	mov    rax,QWORD PTR [rax+0x30]
  416fe9:	mov    edx,DWORD PTR [rax+0x14]
  416fec:	mov    rax,QWORD PTR [rbp-0x18]
  416ff0:	mov    DWORD PTR [rax+0xf8],edx
  416ff6:	mov    rax,QWORD PTR [rbp-0x18]
  416ffa:	mov    rax,QWORD PTR [rax+0x30]
  416ffe:	mov    edx,DWORD PTR [rax+0x1c]
  417001:	mov    rax,QWORD PTR [rbp-0x18]
  417005:	mov    DWORD PTR [rax+0x100],edx
  41700b:	mov    rax,QWORD PTR [rbp-0x18]
  41700f:	mov    rax,QWORD PTR [rax+0x30]
  417013:	mov    edx,DWORD PTR [rax+0x10]
  417016:	mov    rax,QWORD PTR [rbp-0x18]
  41701a:	mov    DWORD PTR [rax+0x110],edx
  417020:	mov    rax,QWORD PTR [rbp-0x18]
  417024:	mov    rax,QWORD PTR [rax+0x30]
  417028:	movzx  eax,WORD PTR [rax+0x20]
  41702c:	mov    rdx,QWORD PTR [rbp-0x18]
  417030:	mov    WORD PTR [rdx+0x10c],ax
  417037:	mov    rax,QWORD PTR [rbp-0x18]
  41703b:	mov    rdi,rax
  41703e:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  417043:	mov    eax,DWORD PTR [rbp-0x4]
  417046:	leave  
  417047:	ret    

0000000000417048 <flatcc_builder_start_struct@@Base>:
  417048:	endbr64 
  41704c:	push   rbp
  41704d:	mov    rbp,rsp
  417050:	sub    rsp,0x20
  417054:	mov    QWORD PTR [rbp-0x8],rdi
  417058:	mov    QWORD PTR [rbp-0x10],rsi
  41705c:	mov    eax,edx
  41705e:	mov    WORD PTR [rbp-0x14],ax
  417062:	movzx  edx,WORD PTR [rbp-0x14]
  417066:	mov    rax,QWORD PTR [rbp-0x8]
  41706a:	mov    esi,edx
  41706c:	mov    rdi,rax
  41706f:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  417074:	test   eax,eax
  417076:	je     41707f <flatcc_builder_start_struct@@Base+0x37>
  417078:	mov    eax,0x0
  41707d:	jmp    4170b2 <flatcc_builder_start_struct@@Base+0x6a>
  41707f:	mov    rax,QWORD PTR [rbp-0x8]
  417083:	mov    rax,QWORD PTR [rax+0x30]
  417087:	mov    WORD PTR [rax+0xe],0x2
  41708d:	mov    rax,QWORD PTR [rbp-0x8]
  417091:	mov    esi,0xfffffffc
  417096:	mov    rdi,rax
  417099:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  41709e:	mov    rax,QWORD PTR [rbp-0x10]
  4170a2:	mov    edx,eax
  4170a4:	mov    rax,QWORD PTR [rbp-0x8]
  4170a8:	mov    esi,edx
  4170aa:	mov    rdi,rax
  4170ad:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  4170b2:	leave  
  4170b3:	ret    

00000000004170b4 <flatcc_builder_struct_edit@@Base>:
  4170b4:	endbr64 
  4170b8:	push   rbp
  4170b9:	mov    rbp,rsp
  4170bc:	mov    QWORD PTR [rbp-0x8],rdi
  4170c0:	mov    rax,QWORD PTR [rbp-0x8]
  4170c4:	mov    rax,QWORD PTR [rax+0x18]
  4170c8:	pop    rbp
  4170c9:	ret    

00000000004170ca <flatcc_builder_end_struct@@Base>:
  4170ca:	endbr64 
  4170ce:	push   rbp
  4170cf:	mov    rbp,rsp
  4170d2:	sub    rsp,0x20
  4170d6:	mov    QWORD PTR [rbp-0x18],rdi
  4170da:	mov    rax,QWORD PTR [rbp-0x18]
  4170de:	mov    rax,QWORD PTR [rax+0x30]
  4170e2:	movzx  eax,WORD PTR [rax+0xe]
  4170e6:	cmp    ax,0x2
  4170ea:	je     41710b <flatcc_builder_end_struct@@Base+0x41>
  4170ec:	lea    rcx,[rip+0xba2d]        # 422b20 <flatcc_builder_padding_base@@Base+0x780>
  4170f3:	mov    edx,0x368
  4170f8:	lea    rsi,[rip+0xb4a1]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4170ff:	lea    rdi,[rip+0xb59a]        # 4226a0 <flatcc_builder_padding_base@@Base+0x300>
  417106:	call   403220 <__assert_fail@plt>
  41710b:	mov    rax,QWORD PTR [rbp-0x18]
  41710f:	movzx  eax,WORD PTR [rax+0xea]
  417116:	movzx  edx,ax
  417119:	mov    rax,QWORD PTR [rbp-0x18]
  41711d:	mov    eax,DWORD PTR [rax+0x20]
  417120:	mov    edi,eax
  417122:	mov    rax,QWORD PTR [rbp-0x18]
  417126:	mov    rsi,QWORD PTR [rax+0x18]
  41712a:	mov    rax,QWORD PTR [rbp-0x18]
  41712e:	mov    ecx,edx
  417130:	mov    rdx,rdi
  417133:	mov    rdi,rax
  417136:	call   416bf1 <flatcc_builder_create_struct@@Base>
  41713b:	mov    DWORD PTR [rbp-0x4],eax
  41713e:	cmp    DWORD PTR [rbp-0x4],0x0
  417142:	jne    41714b <flatcc_builder_end_struct@@Base+0x81>
  417144:	mov    eax,0x0
  417149:	jmp    41715a <flatcc_builder_end_struct@@Base+0x90>
  41714b:	mov    rax,QWORD PTR [rbp-0x18]
  41714f:	mov    rdi,rax
  417152:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  417157:	mov    eax,DWORD PTR [rbp-0x4]
  41715a:	leave  
  41715b:	ret    
  41715c:	push   rbp
  41715d:	mov    rbp,rsp
  417160:	sub    rsp,0x20
  417164:	mov    QWORD PTR [rbp-0x18],rdi
  417168:	mov    DWORD PTR [rbp-0x1c],esi
  41716b:	mov    DWORD PTR [rbp-0x20],edx
  41716e:	mov    rax,QWORD PTR [rbp-0x18]
  417172:	mov    rax,QWORD PTR [rax+0x30]
  417176:	mov    eax,DWORD PTR [rax+0x14]
  417179:	mov    DWORD PTR [rbp-0x8],eax
  41717c:	mov    edx,DWORD PTR [rbp-0x8]
  41717f:	mov    eax,DWORD PTR [rbp-0x1c]
  417182:	add    eax,edx
  417184:	mov    DWORD PTR [rbp-0x4],eax
  417187:	mov    eax,DWORD PTR [rbp-0x8]
  41718a:	cmp    eax,DWORD PTR [rbp-0x4]
  41718d:	ja     417197 <flatcc_builder_end_struct@@Base+0xcd>
  41718f:	mov    eax,DWORD PTR [rbp-0x4]
  417192:	cmp    eax,DWORD PTR [rbp-0x20]
  417195:	jbe    4171cd <flatcc_builder_end_struct@@Base+0x103>
  417197:	mov    eax,DWORD PTR [rbp-0x8]
  41719a:	cmp    eax,DWORD PTR [rbp-0x4]
  41719d:	ja     4171a7 <flatcc_builder_end_struct@@Base+0xdd>
  41719f:	mov    eax,DWORD PTR [rbp-0x4]
  4171a2:	cmp    eax,DWORD PTR [rbp-0x20]
  4171a5:	jbe    4171c6 <flatcc_builder_end_struct@@Base+0xfc>
  4171a7:	lea    rcx,[rip+0xb992]        # 422b40 <flatcc_builder_padding_base@@Base+0x7a0>
  4171ae:	mov    edx,0x37c
  4171b3:	lea    rsi,[rip+0xb3e6]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4171ba:	lea    rdi,[rip+0xb50b]        # 4226cc <flatcc_builder_padding_base@@Base+0x32c>
  4171c1:	call   403220 <__assert_fail@plt>
  4171c6:	mov    eax,0xffffffff
  4171cb:	jmp    4171e0 <flatcc_builder_end_struct@@Base+0x116>
  4171cd:	mov    rax,QWORD PTR [rbp-0x18]
  4171d1:	mov    rax,QWORD PTR [rax+0x30]
  4171d5:	mov    edx,DWORD PTR [rbp-0x4]
  4171d8:	mov    DWORD PTR [rax+0x14],edx
  4171db:	mov    eax,0x0
  4171e0:	leave  
  4171e1:	ret    

00000000004171e2 <flatcc_builder_extend_vector@@Base>:
  4171e2:	endbr64 
  4171e6:	push   rbp
  4171e7:	mov    rbp,rsp
  4171ea:	sub    rsp,0x10
  4171ee:	mov    QWORD PTR [rbp-0x8],rdi
  4171f2:	mov    QWORD PTR [rbp-0x10],rsi
  4171f6:	mov    rax,QWORD PTR [rbp-0x8]
  4171fa:	mov    rax,QWORD PTR [rax+0x30]
  4171fe:	mov    edx,DWORD PTR [rax+0x18]
  417201:	mov    rax,QWORD PTR [rbp-0x10]
  417205:	mov    ecx,eax
  417207:	mov    rax,QWORD PTR [rbp-0x8]
  41720b:	mov    esi,ecx
  41720d:	mov    rdi,rax
  417210:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  417215:	test   eax,eax
  417217:	je     417220 <flatcc_builder_extend_vector@@Base+0x3e>
  417219:	mov    eax,0x0
  41721e:	jmp    417240 <flatcc_builder_extend_vector@@Base+0x5e>
  417220:	mov    rax,QWORD PTR [rbp-0x8]
  417224:	mov    rax,QWORD PTR [rax+0x30]
  417228:	mov    eax,DWORD PTR [rax+0x10]
  41722b:	mov    rdx,QWORD PTR [rbp-0x10]
  41722f:	imul   edx,eax
  417232:	mov    rax,QWORD PTR [rbp-0x8]
  417236:	mov    esi,edx
  417238:	mov    rdi,rax
  41723b:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  417240:	leave  
  417241:	ret    

0000000000417242 <flatcc_builder_vector_push@@Base>:
  417242:	endbr64 
  417246:	push   rbp
  417247:	mov    rbp,rsp
  41724a:	sub    rsp,0x10
  41724e:	mov    QWORD PTR [rbp-0x8],rdi
  417252:	mov    QWORD PTR [rbp-0x10],rsi
  417256:	mov    rax,QWORD PTR [rbp-0x8]
  41725a:	mov    rax,QWORD PTR [rax+0x30]
  41725e:	movzx  eax,WORD PTR [rax+0xe]
  417262:	cmp    ax,0x4
  417266:	je     417287 <flatcc_builder_vector_push@@Base+0x45>
  417268:	lea    rcx,[rip+0xb8f1]        # 422b60 <flatcc_builder_padding_base@@Base+0x7c0>
  41726f:	mov    edx,0x38b
  417274:	lea    rsi,[rip+0xb325]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41727b:	lea    rdi,[rip+0xb466]        # 4226e8 <flatcc_builder_padding_base@@Base+0x348>
  417282:	call   403220 <__assert_fail@plt>
  417287:	mov    rax,QWORD PTR [rbp-0x8]
  41728b:	mov    rax,QWORD PTR [rax+0x30]
  41728f:	mov    edx,DWORD PTR [rax+0x14]
  417292:	mov    rax,QWORD PTR [rbp-0x8]
  417296:	mov    rax,QWORD PTR [rax+0x30]
  41729a:	mov    eax,DWORD PTR [rax+0x18]
  41729d:	cmp    edx,eax
  41729f:	jbe    4172e1 <flatcc_builder_vector_push@@Base+0x9f>
  4172a1:	mov    rax,QWORD PTR [rbp-0x8]
  4172a5:	mov    rax,QWORD PTR [rax+0x30]
  4172a9:	mov    edx,DWORD PTR [rax+0x14]
  4172ac:	mov    rax,QWORD PTR [rbp-0x8]
  4172b0:	mov    rax,QWORD PTR [rax+0x30]
  4172b4:	mov    eax,DWORD PTR [rax+0x18]
  4172b7:	cmp    edx,eax
  4172b9:	jbe    4172da <flatcc_builder_vector_push@@Base+0x98>
  4172bb:	lea    rcx,[rip+0xb89e]        # 422b60 <flatcc_builder_padding_base@@Base+0x7c0>
  4172c2:	mov    edx,0x38c
  4172c7:	lea    rsi,[rip+0xb2d2]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4172ce:	lea    rdi,[rip+0xb443]        # 422718 <flatcc_builder_padding_base@@Base+0x378>
  4172d5:	call   403220 <__assert_fail@plt>
  4172da:	mov    eax,0x0
  4172df:	jmp    417317 <flatcc_builder_vector_push@@Base+0xd5>
  4172e1:	mov    rax,QWORD PTR [rbp-0x8]
  4172e5:	mov    rax,QWORD PTR [rax+0x30]
  4172e9:	mov    edx,DWORD PTR [rax+0x14]
  4172ec:	mov    rax,QWORD PTR [rbp-0x8]
  4172f0:	mov    rax,QWORD PTR [rax+0x30]
  4172f4:	inc    edx
  4172f6:	mov    DWORD PTR [rax+0x14],edx
  4172f9:	mov    rax,QWORD PTR [rbp-0x8]
  4172fd:	mov    rax,QWORD PTR [rax+0x30]
  417301:	mov    edx,DWORD PTR [rax+0x10]
  417304:	mov    rcx,QWORD PTR [rbp-0x10]
  417308:	mov    rax,QWORD PTR [rbp-0x8]
  41730c:	mov    rsi,rcx
  41730f:	mov    rdi,rax
  417312:	call   41527f <flatcc_builder_default_alloc@@Base+0x332>
  417317:	leave  
  417318:	ret    

0000000000417319 <flatcc_builder_append_vector@@Base>:
  417319:	endbr64 
  41731d:	push   rbp
  41731e:	mov    rbp,rsp
  417321:	sub    rsp,0x20
  417325:	mov    QWORD PTR [rbp-0x8],rdi
  417329:	mov    QWORD PTR [rbp-0x10],rsi
  41732d:	mov    QWORD PTR [rbp-0x18],rdx
  417331:	mov    rax,QWORD PTR [rbp-0x8]
  417335:	mov    rax,QWORD PTR [rax+0x30]
  417339:	movzx  eax,WORD PTR [rax+0xe]
  41733d:	cmp    ax,0x4
  417341:	je     417362 <flatcc_builder_append_vector@@Base+0x49>
  417343:	lea    rcx,[rip+0xb836]        # 422b80 <flatcc_builder_padding_base@@Base+0x7e0>
  41734a:	mov    edx,0x393
  41734f:	lea    rsi,[rip+0xb24a]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  417356:	lea    rdi,[rip+0xb38b]        # 4226e8 <flatcc_builder_padding_base@@Base+0x348>
  41735d:	call   403220 <__assert_fail@plt>
  417362:	mov    rax,QWORD PTR [rbp-0x8]
  417366:	mov    rax,QWORD PTR [rax+0x30]
  41736a:	mov    edx,DWORD PTR [rax+0x18]
  41736d:	mov    rax,QWORD PTR [rbp-0x18]
  417371:	mov    ecx,eax
  417373:	mov    rax,QWORD PTR [rbp-0x8]
  417377:	mov    esi,ecx
  417379:	mov    rdi,rax
  41737c:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  417381:	test   eax,eax
  417383:	je     41738c <flatcc_builder_append_vector@@Base+0x73>
  417385:	mov    eax,0x0
  41738a:	jmp    4173b1 <flatcc_builder_append_vector@@Base+0x98>
  41738c:	mov    rax,QWORD PTR [rbp-0x8]
  417390:	mov    rax,QWORD PTR [rax+0x30]
  417394:	mov    eax,DWORD PTR [rax+0x10]
  417397:	mov    rdx,QWORD PTR [rbp-0x18]
  41739b:	imul   edx,eax
  41739e:	mov    rcx,QWORD PTR [rbp-0x10]
  4173a2:	mov    rax,QWORD PTR [rbp-0x8]
  4173a6:	mov    rsi,rcx
  4173a9:	mov    rdi,rax
  4173ac:	call   41527f <flatcc_builder_default_alloc@@Base+0x332>
  4173b1:	leave  
  4173b2:	ret    

00000000004173b3 <flatcc_builder_extend_offset_vector@@Base>:
  4173b3:	endbr64 
  4173b7:	push   rbp
  4173b8:	mov    rbp,rsp
  4173bb:	sub    rsp,0x10
  4173bf:	mov    QWORD PTR [rbp-0x8],rdi
  4173c3:	mov    QWORD PTR [rbp-0x10],rsi
  4173c7:	mov    rax,QWORD PTR [rbp-0x10]
  4173cb:	mov    ecx,eax
  4173cd:	mov    rax,QWORD PTR [rbp-0x8]
  4173d1:	mov    edx,0x3fffffff
  4173d6:	mov    esi,ecx
  4173d8:	mov    rdi,rax
  4173db:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  4173e0:	test   eax,eax
  4173e2:	je     4173eb <flatcc_builder_extend_offset_vector@@Base+0x38>
  4173e4:	mov    eax,0x0
  4173e9:	jmp    417404 <flatcc_builder_extend_offset_vector@@Base+0x51>
  4173eb:	mov    rax,QWORD PTR [rbp-0x10]
  4173ef:	lea    edx,[rax*4+0x0]
  4173f6:	mov    rax,QWORD PTR [rbp-0x8]
  4173fa:	mov    esi,edx
  4173fc:	mov    rdi,rax
  4173ff:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  417404:	leave  
  417405:	ret    

0000000000417406 <flatcc_builder_offset_vector_push@@Base>:
  417406:	endbr64 
  41740a:	push   rbp
  41740b:	mov    rbp,rsp
  41740e:	sub    rsp,0x20
  417412:	mov    QWORD PTR [rbp-0x18],rdi
  417416:	mov    DWORD PTR [rbp-0x1c],esi
  417419:	mov    rax,QWORD PTR [rbp-0x18]
  41741d:	mov    rax,QWORD PTR [rax+0x30]
  417421:	movzx  eax,WORD PTR [rax+0xe]
  417425:	cmp    ax,0x5
  417429:	je     41744a <flatcc_builder_offset_vector_push@@Base+0x44>
  41742b:	lea    rcx,[rip+0xb76e]        # 422ba0 <flatcc_builder_padding_base@@Base+0x800>
  417432:	mov    edx,0x3a6
  417437:	lea    rsi,[rip+0xb162]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41743e:	lea    rdi,[rip+0xb313]        # 422758 <flatcc_builder_padding_base@@Base+0x3b8>
  417445:	call   403220 <__assert_fail@plt>
  41744a:	mov    rax,QWORD PTR [rbp-0x18]
  41744e:	mov    rax,QWORD PTR [rax+0x30]
  417452:	mov    eax,DWORD PTR [rax+0x14]
  417455:	cmp    eax,0x3fffffff
  41745a:	jne    417463 <flatcc_builder_offset_vector_push@@Base+0x5d>
  41745c:	mov    eax,0x0
  417461:	jmp    4174ab <flatcc_builder_offset_vector_push@@Base+0xa5>
  417463:	mov    rax,QWORD PTR [rbp-0x18]
  417467:	mov    rax,QWORD PTR [rax+0x30]
  41746b:	mov    edx,DWORD PTR [rax+0x14]
  41746e:	mov    rax,QWORD PTR [rbp-0x18]
  417472:	mov    rax,QWORD PTR [rax+0x30]
  417476:	inc    edx
  417478:	mov    DWORD PTR [rax+0x14],edx
  41747b:	mov    rax,QWORD PTR [rbp-0x18]
  41747f:	mov    esi,0x4
  417484:	mov    rdi,rax
  417487:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  41748c:	mov    QWORD PTR [rbp-0x8],rax
  417490:	cmp    QWORD PTR [rbp-0x8],0x0
  417495:	jne    41749e <flatcc_builder_offset_vector_push@@Base+0x98>
  417497:	mov    eax,0x0
  41749c:	jmp    4174ab <flatcc_builder_offset_vector_push@@Base+0xa5>
  41749e:	mov    rax,QWORD PTR [rbp-0x8]
  4174a2:	mov    edx,DWORD PTR [rbp-0x1c]
  4174a5:	mov    DWORD PTR [rax],edx
  4174a7:	mov    rax,QWORD PTR [rbp-0x8]
  4174ab:	leave  
  4174ac:	ret    

00000000004174ad <flatcc_builder_append_offset_vector@@Base>:
  4174ad:	endbr64 
  4174b1:	push   rbp
  4174b2:	mov    rbp,rsp
  4174b5:	sub    rsp,0x20
  4174b9:	mov    QWORD PTR [rbp-0x8],rdi
  4174bd:	mov    QWORD PTR [rbp-0x10],rsi
  4174c1:	mov    QWORD PTR [rbp-0x18],rdx
  4174c5:	mov    rax,QWORD PTR [rbp-0x8]
  4174c9:	mov    rax,QWORD PTR [rax+0x30]
  4174cd:	movzx  eax,WORD PTR [rax+0xe]
  4174d1:	cmp    ax,0x5
  4174d5:	je     4174f6 <flatcc_builder_append_offset_vector@@Base+0x49>
  4174d7:	lea    rcx,[rip+0xb702]        # 422be0 <flatcc_builder_padding_base@@Base+0x840>
  4174de:	mov    edx,0x3b4
  4174e3:	lea    rsi,[rip+0xb0b6]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4174ea:	lea    rdi,[rip+0xb267]        # 422758 <flatcc_builder_padding_base@@Base+0x3b8>
  4174f1:	call   403220 <__assert_fail@plt>
  4174f6:	mov    rax,QWORD PTR [rbp-0x18]
  4174fa:	mov    ecx,eax
  4174fc:	mov    rax,QWORD PTR [rbp-0x8]
  417500:	mov    edx,0x3fffffff
  417505:	mov    esi,ecx
  417507:	mov    rdi,rax
  41750a:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  41750f:	test   eax,eax
  417511:	je     41751a <flatcc_builder_append_offset_vector@@Base+0x6d>
  417513:	mov    eax,0x0
  417518:	jmp    417538 <flatcc_builder_append_offset_vector@@Base+0x8b>
  41751a:	mov    rax,QWORD PTR [rbp-0x18]
  41751e:	lea    edx,[rax*4+0x0]
  417525:	mov    rcx,QWORD PTR [rbp-0x10]
  417529:	mov    rax,QWORD PTR [rbp-0x8]
  41752d:	mov    rsi,rcx
  417530:	mov    rdi,rax
  417533:	call   41527f <flatcc_builder_default_alloc@@Base+0x332>
  417538:	leave  
  417539:	ret    

000000000041753a <flatcc_builder_extend_string@@Base>:
  41753a:	endbr64 
  41753e:	push   rbp
  41753f:	mov    rbp,rsp
  417542:	sub    rsp,0x10
  417546:	mov    QWORD PTR [rbp-0x8],rdi
  41754a:	mov    QWORD PTR [rbp-0x10],rsi
  41754e:	mov    rax,QWORD PTR [rbp-0x8]
  417552:	mov    rax,QWORD PTR [rax+0x30]
  417556:	movzx  eax,WORD PTR [rax+0xe]
  41755a:	cmp    ax,0x6
  41755e:	je     41757f <flatcc_builder_extend_string@@Base+0x45>
  417560:	lea    rcx,[rip+0xb6a9]        # 422c10 <flatcc_builder_padding_base@@Base+0x870>
  417567:	mov    edx,0x3bd
  41756c:	lea    rsi,[rip+0xb02d]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  417573:	lea    rdi,[rip+0xb216]        # 422790 <flatcc_builder_padding_base@@Base+0x3f0>
  41757a:	call   403220 <__assert_fail@plt>
  41757f:	mov    rax,QWORD PTR [rbp-0x10]
  417583:	mov    ecx,eax
  417585:	mov    rax,QWORD PTR [rbp-0x8]
  417589:	mov    edx,0xffffffff
  41758e:	mov    esi,ecx
  417590:	mov    rdi,rax
  417593:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  417598:	test   eax,eax
  41759a:	je     4175a3 <flatcc_builder_extend_string@@Base+0x69>
  41759c:	mov    eax,0x0
  4175a1:	jmp    4175b7 <flatcc_builder_extend_string@@Base+0x7d>
  4175a3:	mov    rax,QWORD PTR [rbp-0x10]
  4175a7:	mov    edx,eax
  4175a9:	mov    rax,QWORD PTR [rbp-0x8]
  4175ad:	mov    esi,edx
  4175af:	mov    rdi,rax
  4175b2:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  4175b7:	leave  
  4175b8:	ret    

00000000004175b9 <flatcc_builder_append_string@@Base>:
  4175b9:	endbr64 
  4175bd:	push   rbp
  4175be:	mov    rbp,rsp
  4175c1:	sub    rsp,0x20
  4175c5:	mov    QWORD PTR [rbp-0x8],rdi
  4175c9:	mov    QWORD PTR [rbp-0x10],rsi
  4175cd:	mov    QWORD PTR [rbp-0x18],rdx
  4175d1:	mov    rax,QWORD PTR [rbp-0x8]
  4175d5:	mov    rax,QWORD PTR [rax+0x30]
  4175d9:	movzx  eax,WORD PTR [rax+0xe]
  4175dd:	cmp    ax,0x6
  4175e1:	je     417602 <flatcc_builder_append_string@@Base+0x49>
  4175e3:	lea    rcx,[rip+0xb646]        # 422c30 <flatcc_builder_padding_base@@Base+0x890>
  4175ea:	mov    edx,0x3c6
  4175ef:	lea    rsi,[rip+0xafaa]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4175f6:	lea    rdi,[rip+0xb193]        # 422790 <flatcc_builder_padding_base@@Base+0x3f0>
  4175fd:	call   403220 <__assert_fail@plt>
  417602:	mov    rax,QWORD PTR [rbp-0x18]
  417606:	mov    ecx,eax
  417608:	mov    rax,QWORD PTR [rbp-0x8]
  41760c:	mov    edx,0xffffffff
  417611:	mov    esi,ecx
  417613:	mov    rdi,rax
  417616:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  41761b:	test   eax,eax
  41761d:	je     417626 <flatcc_builder_append_string@@Base+0x6d>
  41761f:	mov    eax,0x0
  417624:	jmp    41763f <flatcc_builder_append_string@@Base+0x86>
  417626:	mov    rax,QWORD PTR [rbp-0x18]
  41762a:	mov    edx,eax
  41762c:	mov    rcx,QWORD PTR [rbp-0x10]
  417630:	mov    rax,QWORD PTR [rbp-0x8]
  417634:	mov    rsi,rcx
  417637:	mov    rdi,rax
  41763a:	call   41527f <flatcc_builder_default_alloc@@Base+0x332>
  41763f:	leave  
  417640:	ret    

0000000000417641 <flatcc_builder_append_string_str@@Base>:
  417641:	endbr64 
  417645:	push   rbp
  417646:	mov    rbp,rsp
  417649:	sub    rsp,0x10
  41764d:	mov    QWORD PTR [rbp-0x8],rdi
  417651:	mov    QWORD PTR [rbp-0x10],rsi
  417655:	mov    rax,QWORD PTR [rbp-0x10]
  417659:	mov    rdi,rax
  41765c:	call   4031f0 <strlen@plt>
  417661:	mov    rdx,rax
  417664:	mov    rcx,QWORD PTR [rbp-0x10]
  417668:	mov    rax,QWORD PTR [rbp-0x8]
  41766c:	mov    rsi,rcx
  41766f:	mov    rdi,rax
  417672:	call   4175b9 <flatcc_builder_append_string@@Base>
  417677:	leave  
  417678:	ret    

0000000000417679 <flatcc_builder_append_string_strn@@Base>:
  417679:	endbr64 
  41767d:	push   rbp
  41767e:	mov    rbp,rsp
  417681:	sub    rsp,0x20
  417685:	mov    QWORD PTR [rbp-0x8],rdi
  417689:	mov    QWORD PTR [rbp-0x10],rsi
  41768d:	mov    QWORD PTR [rbp-0x18],rdx
  417691:	mov    rdx,QWORD PTR [rbp-0x18]
  417695:	mov    rax,QWORD PTR [rbp-0x10]
  417699:	mov    rsi,rdx
  41769c:	mov    rdi,rax
  41769f:	call   414f0d <main@@Base+0x1a0>
  4176a4:	mov    rdx,rax
  4176a7:	mov    rcx,QWORD PTR [rbp-0x10]
  4176ab:	mov    rax,QWORD PTR [rbp-0x8]
  4176af:	mov    rsi,rcx
  4176b2:	mov    rdi,rax
  4176b5:	call   4175b9 <flatcc_builder_append_string@@Base>
  4176ba:	leave  
  4176bb:	ret    

00000000004176bc <flatcc_builder_truncate_vector@@Base>:
  4176bc:	endbr64 
  4176c0:	push   rbp
  4176c1:	mov    rbp,rsp
  4176c4:	sub    rsp,0x10
  4176c8:	mov    QWORD PTR [rbp-0x8],rdi
  4176cc:	mov    QWORD PTR [rbp-0x10],rsi
  4176d0:	mov    rax,QWORD PTR [rbp-0x8]
  4176d4:	mov    rax,QWORD PTR [rax+0x30]
  4176d8:	movzx  eax,WORD PTR [rax+0xe]
  4176dc:	cmp    ax,0x4
  4176e0:	je     417701 <flatcc_builder_truncate_vector@@Base+0x45>
  4176e2:	lea    rcx,[rip+0xb567]        # 422c50 <flatcc_builder_padding_base@@Base+0x8b0>
  4176e9:	mov    edx,0x3d9
  4176ee:	lea    rsi,[rip+0xaeab]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4176f5:	lea    rdi,[rip+0xafec]        # 4226e8 <flatcc_builder_padding_base@@Base+0x348>
  4176fc:	call   403220 <__assert_fail@plt>
  417701:	mov    rax,QWORD PTR [rbp-0x8]
  417705:	mov    rax,QWORD PTR [rax+0x30]
  417709:	mov    eax,DWORD PTR [rax+0x14]
  41770c:	mov    eax,eax
  41770e:	cmp    QWORD PTR [rbp-0x10],rax
  417712:	jbe    41774d <flatcc_builder_truncate_vector@@Base+0x91>
  417714:	mov    rax,QWORD PTR [rbp-0x8]
  417718:	mov    rax,QWORD PTR [rax+0x30]
  41771c:	mov    eax,DWORD PTR [rax+0x14]
  41771f:	mov    eax,eax
  417721:	cmp    QWORD PTR [rbp-0x10],rax
  417725:	jbe    417746 <flatcc_builder_truncate_vector@@Base+0x8a>
  417727:	lea    rcx,[rip+0xb522]        # 422c50 <flatcc_builder_padding_base@@Base+0x8b0>
  41772e:	mov    edx,0x3da
  417733:	lea    rsi,[rip+0xae66]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41773a:	lea    rdi,[rip+0xb07f]        # 4227c0 <flatcc_builder_padding_base@@Base+0x420>
  417741:	call   403220 <__assert_fail@plt>
  417746:	mov    eax,0xffffffff
  41774b:	jmp    417790 <flatcc_builder_truncate_vector@@Base+0xd4>
  41774d:	mov    rax,QWORD PTR [rbp-0x8]
  417751:	mov    rax,QWORD PTR [rax+0x30]
  417755:	mov    edx,DWORD PTR [rax+0x14]
  417758:	mov    rax,QWORD PTR [rbp-0x10]
  41775c:	mov    ecx,eax
  41775e:	mov    rax,QWORD PTR [rbp-0x8]
  417762:	mov    rax,QWORD PTR [rax+0x30]
  417766:	sub    edx,ecx
  417768:	mov    DWORD PTR [rax+0x14],edx
  41776b:	mov    rax,QWORD PTR [rbp-0x8]
  41776f:	mov    rax,QWORD PTR [rax+0x30]
  417773:	mov    eax,DWORD PTR [rax+0x10]
  417776:	mov    rdx,QWORD PTR [rbp-0x10]
  41777a:	imul   edx,eax
  41777d:	mov    rax,QWORD PTR [rbp-0x8]
  417781:	mov    esi,edx
  417783:	mov    rdi,rax
  417786:	call   415233 <flatcc_builder_default_alloc@@Base+0x2e6>
  41778b:	mov    eax,0x0
  417790:	leave  
  417791:	ret    

0000000000417792 <flatcc_builder_truncate_offset_vector@@Base>:
  417792:	endbr64 
  417796:	push   rbp
  417797:	mov    rbp,rsp
  41779a:	sub    rsp,0x10
  41779e:	mov    QWORD PTR [rbp-0x8],rdi
  4177a2:	mov    QWORD PTR [rbp-0x10],rsi
  4177a6:	mov    rax,QWORD PTR [rbp-0x8]
  4177aa:	mov    rax,QWORD PTR [rax+0x30]
  4177ae:	movzx  eax,WORD PTR [rax+0xe]
  4177b2:	cmp    ax,0x5
  4177b6:	je     4177d7 <flatcc_builder_truncate_offset_vector@@Base+0x45>
  4177b8:	lea    rcx,[rip+0xb4c1]        # 422c80 <flatcc_builder_padding_base@@Base+0x8e0>
  4177bf:	mov    edx,0x3e2
  4177c4:	lea    rsi,[rip+0xadd5]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4177cb:	lea    rdi,[rip+0xaf86]        # 422758 <flatcc_builder_padding_base@@Base+0x3b8>
  4177d2:	call   403220 <__assert_fail@plt>
  4177d7:	mov    rax,QWORD PTR [rbp-0x8]
  4177db:	mov    rax,QWORD PTR [rax+0x30]
  4177df:	mov    eax,DWORD PTR [rax+0x14]
  4177e2:	mov    rdx,QWORD PTR [rbp-0x10]
  4177e6:	cmp    eax,edx
  4177e8:	jae    417823 <flatcc_builder_truncate_offset_vector@@Base+0x91>
  4177ea:	mov    rax,QWORD PTR [rbp-0x8]
  4177ee:	mov    rax,QWORD PTR [rax+0x30]
  4177f2:	mov    eax,DWORD PTR [rax+0x14]
  4177f5:	mov    rdx,QWORD PTR [rbp-0x10]
  4177f9:	cmp    eax,edx
  4177fb:	jae    41781c <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  4177fd:	lea    rcx,[rip+0xb47c]        # 422c80 <flatcc_builder_padding_base@@Base+0x8e0>
  417804:	mov    edx,0x3e3
  417809:	lea    rsi,[rip+0xad90]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  417810:	lea    rdi,[rip+0xafd1]        # 4227e8 <flatcc_builder_padding_base@@Base+0x448>
  417817:	call   403220 <__assert_fail@plt>
  41781c:	mov    eax,0xffffffff
  417821:	jmp    417866 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  417823:	mov    rax,QWORD PTR [rbp-0x8]
  417827:	mov    rax,QWORD PTR [rax+0x30]
  41782b:	mov    edx,DWORD PTR [rax+0x14]
  41782e:	mov    rax,QWORD PTR [rbp-0x10]
  417832:	mov    ecx,eax
  417834:	mov    rax,QWORD PTR [rbp-0x8]
  417838:	mov    rax,QWORD PTR [rax+0x30]
  41783c:	sub    edx,ecx
  41783e:	mov    DWORD PTR [rax+0x14],edx
  417841:	mov    rax,QWORD PTR [rbp-0x8]
  417845:	mov    rax,QWORD PTR [rax+0x30]
  417849:	mov    eax,DWORD PTR [rax+0x10]
  41784c:	mov    rdx,QWORD PTR [rbp-0x10]
  417850:	imul   edx,eax
  417853:	mov    rax,QWORD PTR [rbp-0x8]
  417857:	mov    esi,edx
  417859:	mov    rdi,rax
  41785c:	call   415233 <flatcc_builder_default_alloc@@Base+0x2e6>
  417861:	mov    eax,0x0
  417866:	leave  
  417867:	ret    

0000000000417868 <flatcc_builder_truncate_string@@Base>:
  417868:	endbr64 
  41786c:	push   rbp
  41786d:	mov    rbp,rsp
  417870:	sub    rsp,0x10
  417874:	mov    QWORD PTR [rbp-0x8],rdi
  417878:	mov    QWORD PTR [rbp-0x10],rsi
  41787c:	mov    rax,QWORD PTR [rbp-0x8]
  417880:	mov    rax,QWORD PTR [rax+0x30]
  417884:	movzx  eax,WORD PTR [rax+0xe]
  417888:	cmp    ax,0x6
  41788c:	je     4178ad <flatcc_builder_truncate_string@@Base+0x45>
  41788e:	lea    rcx,[rip+0xb41b]        # 422cb0 <flatcc_builder_padding_base@@Base+0x910>
  417895:	mov    edx,0x3eb
  41789a:	lea    rsi,[rip+0xacff]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4178a1:	lea    rdi,[rip+0xaee8]        # 422790 <flatcc_builder_padding_base@@Base+0x3f0>
  4178a8:	call   403220 <__assert_fail@plt>
  4178ad:	mov    rax,QWORD PTR [rbp-0x8]
  4178b1:	mov    rax,QWORD PTR [rax+0x30]
  4178b5:	mov    eax,DWORD PTR [rax+0x14]
  4178b8:	mov    eax,eax
  4178ba:	cmp    QWORD PTR [rbp-0x10],rax
  4178be:	jbe    4178f9 <flatcc_builder_truncate_string@@Base+0x91>
  4178c0:	mov    rax,QWORD PTR [rbp-0x8]
  4178c4:	mov    rax,QWORD PTR [rax+0x30]
  4178c8:	mov    eax,DWORD PTR [rax+0x14]
  4178cb:	mov    eax,eax
  4178cd:	cmp    QWORD PTR [rbp-0x10],rax
  4178d1:	jbe    4178f2 <flatcc_builder_truncate_string@@Base+0x8a>
  4178d3:	lea    rcx,[rip+0xb3d6]        # 422cb0 <flatcc_builder_padding_base@@Base+0x910>
  4178da:	mov    edx,0x3ec
  4178df:	lea    rsi,[rip+0xacba]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4178e6:	lea    rdi,[rip+0xaf3b]        # 422828 <flatcc_builder_padding_base@@Base+0x488>
  4178ed:	call   403220 <__assert_fail@plt>
  4178f2:	mov    eax,0xffffffff
  4178f7:	jmp    417930 <flatcc_builder_truncate_string@@Base+0xc8>
  4178f9:	mov    rax,QWORD PTR [rbp-0x8]
  4178fd:	mov    rax,QWORD PTR [rax+0x30]
  417901:	mov    edx,DWORD PTR [rax+0x14]
  417904:	mov    rax,QWORD PTR [rbp-0x10]
  417908:	mov    ecx,eax
  41790a:	mov    rax,QWORD PTR [rbp-0x8]
  41790e:	mov    rax,QWORD PTR [rax+0x30]
  417912:	sub    edx,ecx
  417914:	mov    DWORD PTR [rax+0x14],edx
  417917:	mov    rax,QWORD PTR [rbp-0x10]
  41791b:	mov    edx,eax
  41791d:	mov    rax,QWORD PTR [rbp-0x8]
  417921:	mov    esi,edx
  417923:	mov    rdi,rax
  417926:	call   415233 <flatcc_builder_default_alloc@@Base+0x2e6>
  41792b:	mov    eax,0x0
  417930:	leave  
  417931:	ret    

0000000000417932 <flatcc_builder_start_vector@@Base>:
  417932:	endbr64 
  417936:	push   rbp
  417937:	mov    rbp,rsp
  41793a:	sub    rsp,0x20
  41793e:	mov    QWORD PTR [rbp-0x8],rdi
  417942:	mov    QWORD PTR [rbp-0x10],rsi
  417946:	mov    eax,edx
  417948:	mov    QWORD PTR [rbp-0x20],rcx
  41794c:	mov    WORD PTR [rbp-0x14],ax
  417950:	lea    rax,[rbp-0x14]
  417954:	mov    esi,0x4
  417959:	mov    rdi,rax
  41795c:	call   415bea <flatcc_builder_clear@@Base+0xca>
  417961:	movzx  eax,WORD PTR [rbp-0x14]
  417965:	movzx  edx,ax
  417968:	mov    rax,QWORD PTR [rbp-0x8]
  41796c:	mov    esi,edx
  41796e:	mov    rdi,rax
  417971:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  417976:	test   eax,eax
  417978:	je     417981 <flatcc_builder_start_vector@@Base+0x4f>
  41797a:	mov    eax,0xffffffff
  41797f:	jmp    4179d2 <flatcc_builder_start_vector@@Base+0xa0>
  417981:	mov    rax,QWORD PTR [rbp-0x8]
  417985:	mov    rax,QWORD PTR [rax+0x30]
  417989:	mov    rdx,QWORD PTR [rbp-0x10]
  41798d:	mov    DWORD PTR [rax+0x10],edx
  417990:	mov    rax,QWORD PTR [rbp-0x8]
  417994:	mov    rax,QWORD PTR [rax+0x30]
  417998:	mov    DWORD PTR [rax+0x14],0x0
  41799f:	mov    rax,QWORD PTR [rbp-0x8]
  4179a3:	mov    rax,QWORD PTR [rax+0x30]
  4179a7:	mov    rdx,QWORD PTR [rbp-0x20]
  4179ab:	mov    DWORD PTR [rax+0x18],edx
  4179ae:	mov    rax,QWORD PTR [rbp-0x8]
  4179b2:	mov    rax,QWORD PTR [rax+0x30]
  4179b6:	mov    WORD PTR [rax+0xe],0x4
  4179bc:	mov    rax,QWORD PTR [rbp-0x8]
  4179c0:	mov    esi,0xfffffffc
  4179c5:	mov    rdi,rax
  4179c8:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  4179cd:	mov    eax,0x0
  4179d2:	leave  
  4179d3:	ret    

00000000004179d4 <flatcc_builder_start_offset_vector@@Base>:
  4179d4:	endbr64 
  4179d8:	push   rbp
  4179d9:	mov    rbp,rsp
  4179dc:	sub    rsp,0x10
  4179e0:	mov    QWORD PTR [rbp-0x8],rdi
  4179e4:	mov    rax,QWORD PTR [rbp-0x8]
  4179e8:	mov    esi,0x4
  4179ed:	mov    rdi,rax
  4179f0:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4179f5:	test   eax,eax
  4179f7:	je     417a00 <flatcc_builder_start_offset_vector@@Base+0x2c>
  4179f9:	mov    eax,0xffffffff
  4179fe:	jmp    417a42 <flatcc_builder_start_offset_vector@@Base+0x6e>
  417a00:	mov    rax,QWORD PTR [rbp-0x8]
  417a04:	mov    rax,QWORD PTR [rax+0x30]
  417a08:	mov    DWORD PTR [rax+0x10],0x4
  417a0f:	mov    rax,QWORD PTR [rbp-0x8]
  417a13:	mov    rax,QWORD PTR [rax+0x30]
  417a17:	mov    DWORD PTR [rax+0x14],0x0
  417a1e:	mov    rax,QWORD PTR [rbp-0x8]
  417a22:	mov    rax,QWORD PTR [rax+0x30]
  417a26:	mov    WORD PTR [rax+0xe],0x5
  417a2c:	mov    rax,QWORD PTR [rbp-0x8]
  417a30:	mov    esi,0xfffffffc
  417a35:	mov    rdi,rax
  417a38:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  417a3d:	mov    eax,0x0
  417a42:	leave  
  417a43:	ret    

0000000000417a44 <flatcc_builder_create_offset_vector@@Base>:
  417a44:	endbr64 
  417a48:	push   rbp
  417a49:	mov    rbp,rsp
  417a4c:	sub    rsp,0x30
  417a50:	mov    QWORD PTR [rbp-0x18],rdi
  417a54:	mov    QWORD PTR [rbp-0x20],rsi
  417a58:	mov    QWORD PTR [rbp-0x28],rdx
  417a5c:	mov    rax,QWORD PTR [rbp-0x18]
  417a60:	mov    rdi,rax
  417a63:	call   4179d4 <flatcc_builder_start_offset_vector@@Base>
  417a68:	test   eax,eax
  417a6a:	je     417a73 <flatcc_builder_create_offset_vector@@Base+0x2f>
  417a6c:	mov    eax,0x0
  417a71:	jmp    417ac3 <flatcc_builder_create_offset_vector@@Base+0x7f>
  417a73:	mov    rdx,QWORD PTR [rbp-0x28]
  417a77:	mov    rax,QWORD PTR [rbp-0x18]
  417a7b:	mov    rsi,rdx
  417a7e:	mov    rdi,rax
  417a81:	call   4173b3 <flatcc_builder_extend_offset_vector@@Base>
  417a86:	mov    QWORD PTR [rbp-0x8],rax
  417a8a:	cmp    QWORD PTR [rbp-0x8],0x0
  417a8f:	jne    417a98 <flatcc_builder_create_offset_vector@@Base+0x54>
  417a91:	mov    eax,0x0
  417a96:	jmp    417ac3 <flatcc_builder_create_offset_vector@@Base+0x7f>
  417a98:	mov    rax,QWORD PTR [rbp-0x28]
  417a9c:	lea    rdx,[rax*4+0x0]
  417aa4:	mov    rcx,QWORD PTR [rbp-0x20]
  417aa8:	mov    rax,QWORD PTR [rbp-0x8]
  417aac:	mov    rsi,rcx
  417aaf:	mov    rdi,rax
  417ab2:	call   403290 <memcpy@plt>
  417ab7:	mov    rax,QWORD PTR [rbp-0x18]
  417abb:	mov    rdi,rax
  417abe:	call   418fd1 <flatcc_builder_end_offset_vector@@Base>
  417ac3:	leave  
  417ac4:	ret    

0000000000417ac5 <flatcc_builder_start_string@@Base>:
  417ac5:	endbr64 
  417ac9:	push   rbp
  417aca:	mov    rbp,rsp
  417acd:	sub    rsp,0x10
  417ad1:	mov    QWORD PTR [rbp-0x8],rdi
  417ad5:	mov    rax,QWORD PTR [rbp-0x8]
  417ad9:	mov    esi,0x1
  417ade:	mov    rdi,rax
  417ae1:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  417ae6:	test   eax,eax
  417ae8:	je     417af1 <flatcc_builder_start_string@@Base+0x2c>
  417aea:	mov    eax,0xffffffff
  417aef:	jmp    417b33 <flatcc_builder_start_string@@Base+0x6e>
  417af1:	mov    rax,QWORD PTR [rbp-0x8]
  417af5:	mov    rax,QWORD PTR [rax+0x30]
  417af9:	mov    DWORD PTR [rax+0x10],0x1
  417b00:	mov    rax,QWORD PTR [rbp-0x8]
  417b04:	mov    rax,QWORD PTR [rax+0x30]
  417b08:	mov    DWORD PTR [rax+0x14],0x0
  417b0f:	mov    rax,QWORD PTR [rbp-0x8]
  417b13:	mov    rax,QWORD PTR [rax+0x30]
  417b17:	mov    WORD PTR [rax+0xe],0x6
  417b1d:	mov    rax,QWORD PTR [rbp-0x8]
  417b21:	mov    esi,0xfffffffc
  417b26:	mov    rdi,rax
  417b29:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  417b2e:	mov    eax,0x0
  417b33:	leave  
  417b34:	ret    

0000000000417b35 <flatcc_builder_reserve_table@@Base>:
  417b35:	endbr64 
  417b39:	push   rbp
  417b3a:	mov    rbp,rsp
  417b3d:	sub    rsp,0x10
  417b41:	mov    QWORD PTR [rbp-0x8],rdi
  417b45:	mov    DWORD PTR [rbp-0xc],esi
  417b48:	cmp    DWORD PTR [rbp-0xc],0x0
  417b4c:	jns    417b6d <flatcc_builder_reserve_table@@Base+0x38>
  417b4e:	lea    rcx,[rip+0xb17b]        # 422cd0 <flatcc_builder_padding_base@@Base+0x930>
  417b55:	mov    edx,0x429
  417b5a:	lea    rsi,[rip+0xaa3f]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  417b61:	lea    rdi,[rip+0xace2]        # 42284a <flatcc_builder_padding_base@@Base+0x4aa>
  417b68:	call   403220 <__assert_fail@plt>
  417b6d:	mov    edx,DWORD PTR [rbp-0xc]
  417b70:	mov    rax,QWORD PTR [rbp-0x8]
  417b74:	mov    esi,edx
  417b76:	mov    rdi,rax
  417b79:	call   415514 <flatcc_builder_default_alloc@@Base+0x5c7>
  417b7e:	leave  
  417b7f:	ret    

0000000000417b80 <flatcc_builder_start_table@@Base>:
  417b80:	endbr64 
  417b84:	push   rbp
  417b85:	mov    rbp,rsp
  417b88:	sub    rsp,0x10
  417b8c:	mov    QWORD PTR [rbp-0x8],rdi
  417b90:	mov    DWORD PTR [rbp-0xc],esi
  417b93:	mov    rax,QWORD PTR [rbp-0x8]
  417b97:	mov    esi,0x4
  417b9c:	mov    rdi,rax
  417b9f:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  417ba4:	test   eax,eax
  417ba6:	je     417bb2 <flatcc_builder_start_table@@Base+0x32>
  417ba8:	mov    eax,0xffffffff
  417bad:	jmp    417c7c <flatcc_builder_start_table@@Base+0xfc>
  417bb2:	mov    rax,QWORD PTR [rbp-0x8]
  417bb6:	mov    rax,QWORD PTR [rax+0x8]
  417bba:	mov    rdx,rax
  417bbd:	mov    rax,QWORD PTR [rbp-0x8]
  417bc1:	mov    rax,QWORD PTR [rax+0x58]
  417bc5:	sub    rdx,rax
  417bc8:	mov    rax,QWORD PTR [rbp-0x8]
  417bcc:	mov    rax,QWORD PTR [rax+0x30]
  417bd0:	mov    DWORD PTR [rax+0x10],edx
  417bd3:	mov    rax,QWORD PTR [rbp-0x8]
  417bd7:	mov    rax,QWORD PTR [rax]
  417bda:	mov    rdx,rax
  417bdd:	mov    rax,QWORD PTR [rbp-0x8]
  417be1:	mov    rax,QWORD PTR [rax+0x88]
  417be8:	sub    rdx,rax
  417beb:	mov    rax,QWORD PTR [rbp-0x8]
  417bef:	mov    rax,QWORD PTR [rax+0x30]
  417bf3:	mov    DWORD PTR [rax+0x14],edx
  417bf6:	mov    rax,QWORD PTR [rbp-0x8]
  417bfa:	mov    rax,QWORD PTR [rax+0x30]
  417bfe:	mov    rdx,QWORD PTR [rbp-0x8]
  417c02:	mov    edx,DWORD PTR [rdx+0x14]
  417c05:	mov    DWORD PTR [rax+0x18],edx
  417c08:	mov    rax,QWORD PTR [rbp-0x8]
  417c0c:	mov    rdx,QWORD PTR [rax+0x30]
  417c10:	mov    rax,QWORD PTR [rbp-0x8]
  417c14:	movzx  eax,WORD PTR [rax+0x10]
  417c18:	mov    WORD PTR [rdx+0x1c],ax
  417c1c:	mov    rax,QWORD PTR [rbp-0x8]
  417c20:	mov    DWORD PTR [rax+0x14],0x0
  417c27:	mov    rax,QWORD PTR [rbp-0x8]
  417c2b:	mov    DWORD PTR [rax+0x14],0x2f693b52
  417c32:	mov    rax,QWORD PTR [rbp-0x8]
  417c36:	mov    WORD PTR [rax+0x10],0x0
  417c3c:	mov    rax,QWORD PTR [rbp-0x8]
  417c40:	mov    rax,QWORD PTR [rax+0x30]
  417c44:	mov    WORD PTR [rax+0xe],0x3
  417c4a:	mov    edx,DWORD PTR [rbp-0xc]
  417c4d:	mov    rax,QWORD PTR [rbp-0x8]
  417c51:	mov    esi,edx
  417c53:	mov    rdi,rax
  417c56:	call   415514 <flatcc_builder_default_alloc@@Base+0x5c7>
  417c5b:	test   eax,eax
  417c5d:	je     417c66 <flatcc_builder_start_table@@Base+0xe6>
  417c5f:	mov    eax,0xffffffff
  417c64:	jmp    417c7c <flatcc_builder_start_table@@Base+0xfc>
  417c66:	mov    rax,QWORD PTR [rbp-0x8]
  417c6a:	mov    esi,0xfffc
  417c6f:	mov    rdi,rax
  417c72:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  417c77:	mov    eax,0x0
  417c7c:	leave  
  417c7d:	ret    

0000000000417c7e <flatcc_builder_create_vtable@@Base>:
  417c7e:	endbr64 
  417c82:	push   rbp
  417c83:	mov    rbp,rsp
  417c86:	sub    rsp,0xd0
  417c8d:	mov    QWORD PTR [rbp-0xb8],rdi
  417c94:	mov    QWORD PTR [rbp-0xc0],rsi
  417c9b:	mov    eax,edx
  417c9d:	mov    WORD PTR [rbp-0xc4],ax
  417ca4:	mov    rax,QWORD PTR fs:0x28
  417cad:	mov    QWORD PTR [rbp-0x8],rax
  417cb1:	xor    eax,eax
  417cb3:	mov    QWORD PTR [rbp-0xa0],0x0
  417cbe:	mov    DWORD PTR [rbp-0x98],0x0
  417cc8:	cmp    WORD PTR [rbp-0xc4],0x0
  417cd0:	je     417d39 <flatcc_builder_create_vtable@@Base+0xbb>
  417cd2:	mov    rdx,QWORD PTR [rbp-0xa0]
  417cd9:	movzx  eax,WORD PTR [rbp-0xc4]
  417ce0:	add    rax,rdx
  417ce3:	mov    QWORD PTR [rbp-0xa0],rax
  417cea:	mov    eax,DWORD PTR [rbp-0x98]
  417cf0:	cdqe   
  417cf2:	shl    rax,0x4
  417cf6:	add    rax,rbp
  417cf9:	lea    rdx,[rax-0x90]
  417d00:	mov    rax,QWORD PTR [rbp-0xc0]
  417d07:	mov    QWORD PTR [rdx],rax
  417d0a:	mov    edx,DWORD PTR [rbp-0x98]
  417d10:	movzx  eax,WORD PTR [rbp-0xc4]
  417d17:	movsxd rdx,edx
  417d1a:	shl    rdx,0x4
  417d1e:	add    rdx,rbp
  417d21:	sub    rdx,0x88
  417d28:	mov    QWORD PTR [rdx],rax
  417d2b:	mov    eax,DWORD PTR [rbp-0x98]
  417d31:	inc    eax
  417d33:	mov    DWORD PTR [rbp-0x98],eax
  417d39:	mov    rax,QWORD PTR [rbp-0xb8]
  417d40:	mov    eax,DWORD PTR [rax+0x100]
  417d46:	test   eax,eax
  417d48:	jne    417d8a <flatcc_builder_create_vtable@@Base+0x10c>
  417d4a:	mov    rax,QWORD PTR [rbp-0xb8]
  417d51:	mov    eax,DWORD PTR [rax+0x124]
  417d57:	test   eax,eax
  417d59:	jne    417d8a <flatcc_builder_create_vtable@@Base+0x10c>
  417d5b:	lea    rdx,[rbp-0xa0]
  417d62:	mov    rax,QWORD PTR [rbp-0xb8]
  417d69:	mov    rsi,rdx
  417d6c:	mov    rdi,rax
  417d6f:	call   4162b5 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  417d74:	mov    DWORD PTR [rbp-0xa4],eax
  417d7a:	cmp    DWORD PTR [rbp-0xa4],0x0
  417d81:	jne    417dbf <flatcc_builder_create_vtable@@Base+0x141>
  417d83:	mov    eax,0x0
  417d88:	jmp    417dc5 <flatcc_builder_create_vtable@@Base+0x147>
  417d8a:	lea    rdx,[rbp-0xa0]
  417d91:	mov    rax,QWORD PTR [rbp-0xb8]
  417d98:	mov    rsi,rdx
  417d9b:	mov    rdi,rax
  417d9e:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  417da3:	mov    DWORD PTR [rbp-0xa4],eax
  417da9:	cmp    DWORD PTR [rbp-0xa4],0x0
  417db0:	jne    417db9 <flatcc_builder_create_vtable@@Base+0x13b>
  417db2:	mov    eax,0x0
  417db7:	jmp    417dc5 <flatcc_builder_create_vtable@@Base+0x147>
  417db9:	inc    DWORD PTR [rbp-0xa4]
  417dbf:	mov    eax,DWORD PTR [rbp-0xa4]
  417dc5:	mov    rcx,QWORD PTR [rbp-0x8]
  417dc9:	xor    rcx,QWORD PTR fs:0x28
  417dd2:	je     417dd9 <flatcc_builder_create_vtable@@Base+0x15b>
  417dd4:	call   403200 <__stack_chk_fail@plt>
  417dd9:	leave  
  417dda:	ret    

0000000000417ddb <flatcc_builder_create_cached_vtable@@Base>:
  417ddb:	endbr64 
  417ddf:	push   rbp
  417de0:	mov    rbp,rsp
  417de3:	sub    rsp,0x50
  417de7:	mov    QWORD PTR [rbp-0x38],rdi
  417deb:	mov    QWORD PTR [rbp-0x40],rsi
  417def:	mov    eax,edx
  417df1:	mov    DWORD PTR [rbp-0x48],ecx
  417df4:	mov    WORD PTR [rbp-0x44],ax
  417df8:	mov    edx,DWORD PTR [rbp-0x48]
  417dfb:	mov    rax,QWORD PTR [rbp-0x38]
  417dff:	mov    esi,edx
  417e01:	mov    rdi,rax
  417e04:	call   415723 <flatcc_builder_default_alloc@@Base+0x7d6>
  417e09:	mov    QWORD PTR [rbp-0x18],rax
  417e0d:	cmp    QWORD PTR [rbp-0x18],0x0
  417e12:	jne    417e1e <flatcc_builder_create_cached_vtable@@Base+0x43>
  417e14:	mov    eax,0x0
  417e19:	jmp    4180bf <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  417e1e:	mov    rax,QWORD PTR [rbp-0x18]
  417e22:	mov    QWORD PTR [rbp-0x20],rax
  417e26:	mov    rax,QWORD PTR [rbp-0x20]
  417e2a:	mov    eax,DWORD PTR [rax]
  417e2c:	mov    DWORD PTR [rbp-0x2c],eax
  417e2f:	mov    QWORD PTR [rbp-0x28],0x0
  417e37:	jmp    417f16 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  417e3c:	mov    rax,QWORD PTR [rbp-0x38]
  417e40:	mov    rdx,QWORD PTR [rax+0xb8]
  417e47:	mov    eax,DWORD PTR [rbp-0x2c]
  417e4a:	add    rax,rdx
  417e4d:	mov    QWORD PTR [rbp-0x10],rax
  417e51:	mov    rax,QWORD PTR [rbp-0x38]
  417e55:	mov    rdx,QWORD PTR [rax+0x78]
  417e59:	mov    rax,QWORD PTR [rbp-0x10]
  417e5d:	mov    eax,DWORD PTR [rax+0x8]
  417e60:	mov    eax,eax
  417e62:	add    rax,rdx
  417e65:	mov    QWORD PTR [rbp-0x8],rax
  417e69:	mov    rax,QWORD PTR [rbp-0x8]
  417e6d:	movzx  eax,WORD PTR [rax]
  417e70:	cmp    WORD PTR [rbp-0x44],ax
  417e74:	jne    417e91 <flatcc_builder_create_cached_vtable@@Base+0xb6>
  417e76:	movzx  edx,WORD PTR [rbp-0x44]
  417e7a:	mov    rcx,QWORD PTR [rbp-0x8]
  417e7e:	mov    rax,QWORD PTR [rbp-0x40]
  417e82:	mov    rsi,rcx
  417e85:	mov    rdi,rax
  417e88:	call   403260 <memcmp@plt>
  417e8d:	test   eax,eax
  417e8f:	je     417ea9 <flatcc_builder_create_cached_vtable@@Base+0xce>
  417e91:	mov    rax,QWORD PTR [rbp-0x10]
  417e95:	add    rax,0xc
  417e99:	mov    QWORD PTR [rbp-0x20],rax
  417e9d:	mov    rax,QWORD PTR [rbp-0x10]
  417ea1:	mov    eax,DWORD PTR [rax+0xc]
  417ea4:	mov    DWORD PTR [rbp-0x2c],eax
  417ea7:	jmp    417f16 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  417ea9:	mov    rax,QWORD PTR [rbp-0x10]
  417ead:	mov    edx,DWORD PTR [rax+0x4]
  417eb0:	mov    rax,QWORD PTR [rbp-0x38]
  417eb4:	mov    eax,DWORD PTR [rax+0x100]
  417eba:	cmp    edx,eax
  417ebc:	je     417ede <flatcc_builder_create_cached_vtable@@Base+0x103>
  417ebe:	mov    rax,QWORD PTR [rbp-0x10]
  417ec2:	mov    QWORD PTR [rbp-0x28],rax
  417ec6:	mov    rax,QWORD PTR [rbp-0x10]
  417eca:	add    rax,0xc
  417ece:	mov    QWORD PTR [rbp-0x20],rax
  417ed2:	mov    rax,QWORD PTR [rbp-0x10]
  417ed6:	mov    eax,DWORD PTR [rax+0xc]
  417ed9:	mov    DWORD PTR [rbp-0x2c],eax
  417edc:	jmp    417f16 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  417ede:	mov    rax,QWORD PTR [rbp-0x20]
  417ee2:	cmp    rax,QWORD PTR [rbp-0x18]
  417ee6:	je     417f0b <flatcc_builder_create_cached_vtable@@Base+0x130>
  417ee8:	mov    rax,QWORD PTR [rbp-0x10]
  417eec:	mov    edx,DWORD PTR [rax+0xc]
  417eef:	mov    rax,QWORD PTR [rbp-0x20]
  417ef3:	mov    DWORD PTR [rax],edx
  417ef5:	mov    rax,QWORD PTR [rbp-0x18]
  417ef9:	mov    edx,DWORD PTR [rax]
  417efb:	mov    rax,QWORD PTR [rbp-0x10]
  417eff:	mov    DWORD PTR [rax+0xc],edx
  417f02:	mov    rax,QWORD PTR [rbp-0x18]
  417f06:	mov    edx,DWORD PTR [rbp-0x2c]
  417f09:	mov    DWORD PTR [rax],edx
  417f0b:	mov    rax,QWORD PTR [rbp-0x10]
  417f0f:	mov    eax,DWORD PTR [rax]
  417f11:	jmp    4180bf <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  417f16:	cmp    DWORD PTR [rbp-0x2c],0x0
  417f1a:	jne    417e3c <flatcc_builder_create_cached_vtable@@Base+0x61>
  417f20:	mov    rax,QWORD PTR [rbp-0x38]
  417f24:	mov    eax,DWORD PTR [rax+0xe4]
  417f2a:	mov    edx,eax
  417f2c:	mov    rax,QWORD PTR [rbp-0x38]
  417f30:	mov    r8d,0x0
  417f36:	mov    ecx,0x10
  417f3b:	mov    esi,0x6
  417f40:	mov    rdi,rax
  417f43:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  417f48:	mov    QWORD PTR [rbp-0x10],rax
  417f4c:	cmp    QWORD PTR [rbp-0x10],0x0
  417f51:	jne    417f5d <flatcc_builder_create_cached_vtable@@Base+0x182>
  417f53:	mov    eax,0x0
  417f58:	jmp    4180bf <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  417f5d:	mov    rax,QWORD PTR [rbp-0x38]
  417f61:	mov    eax,DWORD PTR [rax+0xe4]
  417f67:	mov    DWORD PTR [rbp-0x2c],eax
  417f6a:	mov    rax,QWORD PTR [rbp-0x38]
  417f6e:	mov    eax,DWORD PTR [rax+0xe4]
  417f74:	lea    edx,[rax+0x10]
  417f77:	mov    rax,QWORD PTR [rbp-0x38]
  417f7b:	mov    DWORD PTR [rax+0xe4],edx
  417f81:	mov    rax,QWORD PTR [rbp-0x38]
  417f85:	mov    edx,DWORD PTR [rax+0x100]
  417f8b:	mov    rax,QWORD PTR [rbp-0x10]
  417f8f:	mov    DWORD PTR [rax+0x4],edx
  417f92:	mov    rax,QWORD PTR [rbp-0x18]
  417f96:	mov    edx,DWORD PTR [rax]
  417f98:	mov    rax,QWORD PTR [rbp-0x10]
  417f9c:	mov    DWORD PTR [rax+0xc],edx
  417f9f:	mov    rax,QWORD PTR [rbp-0x18]
  417fa3:	mov    edx,DWORD PTR [rbp-0x2c]
  417fa6:	mov    DWORD PTR [rax],edx
  417fa8:	movzx  edx,WORD PTR [rbp-0x44]
  417fac:	mov    rcx,QWORD PTR [rbp-0x40]
  417fb0:	mov    rax,QWORD PTR [rbp-0x38]
  417fb4:	mov    rsi,rcx
  417fb7:	mov    rdi,rax
  417fba:	call   417c7e <flatcc_builder_create_vtable@@Base>
  417fbf:	mov    edx,eax
  417fc1:	mov    rax,QWORD PTR [rbp-0x10]
  417fc5:	mov    DWORD PTR [rax],edx
  417fc7:	mov    rax,QWORD PTR [rbp-0x10]
  417fcb:	mov    eax,DWORD PTR [rax]
  417fcd:	test   eax,eax
  417fcf:	jne    417fdb <flatcc_builder_create_cached_vtable@@Base+0x200>
  417fd1:	mov    eax,0x0
  417fd6:	jmp    4180bf <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  417fdb:	cmp    QWORD PTR [rbp-0x28],0x0
  417fe0:	je     417ff5 <flatcc_builder_create_cached_vtable@@Base+0x21a>
  417fe2:	mov    rax,QWORD PTR [rbp-0x28]
  417fe6:	mov    edx,DWORD PTR [rax+0x8]
  417fe9:	mov    rax,QWORD PTR [rbp-0x10]
  417fed:	mov    DWORD PTR [rax+0x8],edx
  417ff0:	jmp    4180b9 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  417ff5:	mov    rax,QWORD PTR [rbp-0x38]
  417ff9:	mov    rax,QWORD PTR [rax+0x118]
  418000:	test   rax,rax
  418003:	je     418038 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  418005:	mov    rax,QWORD PTR [rbp-0x38]
  418009:	mov    rdx,QWORD PTR [rax+0x118]
  418010:	mov    rax,QWORD PTR [rbp-0x38]
  418014:	mov    ecx,DWORD PTR [rax+0xe0]
  41801a:	movzx  eax,WORD PTR [rbp-0x44]
  41801e:	add    eax,ecx
  418020:	mov    eax,eax
  418022:	cmp    rdx,rax
  418025:	jae    418038 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  418027:	mov    rax,QWORD PTR [rbp-0x38]
  41802b:	mov    rdi,rax
  41802e:	call   415797 <flatcc_builder_flush_vtable_cache@@Base>
  418033:	jmp    4180b9 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  418038:	movzx  edx,WORD PTR [rbp-0x44]
  41803c:	mov    rax,QWORD PTR [rbp-0x38]
  418040:	mov    eax,DWORD PTR [rax+0xe0]
  418046:	mov    esi,eax
  418048:	mov    rax,QWORD PTR [rbp-0x38]
  41804c:	mov    r8d,0x0
  418052:	mov    rcx,rdx
  418055:	mov    rdx,rsi
  418058:	mov    esi,0x2
  41805d:	mov    rdi,rax
  418060:	call   415463 <flatcc_builder_default_alloc@@Base+0x516>
  418065:	mov    QWORD PTR [rbp-0x8],rax
  418069:	cmp    QWORD PTR [rbp-0x8],0x0
  41806e:	jne    418077 <flatcc_builder_create_cached_vtable@@Base+0x29c>
  418070:	mov    eax,0xffffffff
  418075:	jmp    4180bf <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  418077:	mov    rax,QWORD PTR [rbp-0x38]
  41807b:	mov    edx,DWORD PTR [rax+0xe0]
  418081:	mov    rax,QWORD PTR [rbp-0x10]
  418085:	mov    DWORD PTR [rax+0x8],edx
  418088:	mov    rax,QWORD PTR [rbp-0x38]
  41808c:	mov    edx,DWORD PTR [rax+0xe0]
  418092:	movzx  eax,WORD PTR [rbp-0x44]
  418096:	add    edx,eax
  418098:	mov    rax,QWORD PTR [rbp-0x38]
  41809c:	mov    DWORD PTR [rax+0xe0],edx
  4180a2:	movzx  edx,WORD PTR [rbp-0x44]
  4180a6:	mov    rcx,QWORD PTR [rbp-0x40]
  4180aa:	mov    rax,QWORD PTR [rbp-0x8]
  4180ae:	mov    rsi,rcx
  4180b1:	mov    rdi,rax
  4180b4:	call   403290 <memcpy@plt>
  4180b9:	mov    rax,QWORD PTR [rbp-0x10]
  4180bd:	mov    eax,DWORD PTR [rax]
  4180bf:	leave  
  4180c0:	ret    

00000000004180c1 <flatcc_builder_create_table@@Base>:
  4180c1:	endbr64 
  4180c5:	push   rbp
  4180c6:	mov    rbp,rsp
  4180c9:	sub    rsp,0x100
  4180d0:	mov    QWORD PTR [rbp-0xd8],rdi
  4180d7:	mov    QWORD PTR [rbp-0xe0],rsi
  4180de:	mov    QWORD PTR [rbp-0xe8],rdx
  4180e5:	mov    eax,ecx
  4180e7:	mov    QWORD PTR [rbp-0xf8],r8
  4180ee:	mov    DWORD PTR [rbp-0xf0],r9d
  4180f5:	mov    WORD PTR [rbp-0xec],ax
  4180fc:	mov    rax,QWORD PTR fs:0x28
  418105:	mov    QWORD PTR [rbp-0x8],rax
  418109:	xor    eax,eax
  41810b:	cmp    DWORD PTR [rbp-0xf0],0x0
  418112:	jns    418133 <flatcc_builder_create_table@@Base+0x72>
  418114:	lea    rcx,[rip+0xabd5]        # 422cf0 <flatcc_builder_padding_base@@Base+0x950>
  41811b:	mov    edx,0x4d5
  418120:	lea    rsi,[rip+0xa479]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418127:	lea    rdi,[rip+0xa727]        # 422855 <flatcc_builder_padding_base@@Base+0x4b5>
  41812e:	call   403220 <__assert_fail@plt>
  418133:	mov    eax,DWORD PTR [rbp+0x10]
  418136:	and    eax,0x1
  418139:	test   eax,eax
  41813b:	jne    41815c <flatcc_builder_create_table@@Base+0x9b>
  41813d:	lea    rcx,[rip+0xabac]        # 422cf0 <flatcc_builder_padding_base@@Base+0x950>
  418144:	mov    edx,0x4db
  418149:	lea    rsi,[rip+0xa450]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418150:	lea    rdi,[rip+0xa710]        # 422867 <flatcc_builder_padding_base@@Base+0x4c7>
  418157:	call   403220 <__assert_fail@plt>
  41815c:	lea    rax,[rbp-0xec]
  418163:	mov    esi,0x4
  418168:	mov    rdi,rax
  41816b:	call   415bea <flatcc_builder_clear@@Base+0xca>
  418170:	movzx  eax,WORD PTR [rbp-0xec]
  418177:	movzx  edx,ax
  41817a:	mov    rax,QWORD PTR [rbp-0xd8]
  418181:	mov    esi,edx
  418183:	mov    rdi,rax
  418186:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  41818b:	movzx  eax,WORD PTR [rbp-0xec]
  418192:	movzx  edx,ax
  418195:	mov    rax,QWORD PTR [rbp-0xe8]
  41819c:	mov    ecx,eax
  41819e:	mov    rax,QWORD PTR [rbp-0xd8]
  4181a5:	mov    esi,ecx
  4181a7:	mov    rdi,rax
  4181aa:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4181af:	mov    DWORD PTR [rbp-0xbc],eax
  4181b5:	mov    rax,QWORD PTR [rbp-0xd8]
  4181bc:	mov    eax,DWORD PTR [rax+0xf0]
  4181c2:	mov    edx,eax
  4181c4:	mov    rax,QWORD PTR [rbp-0xe8]
  4181cb:	mov    ecx,eax
  4181cd:	mov    eax,DWORD PTR [rbp-0xbc]
  4181d3:	add    eax,ecx
  4181d5:	sub    edx,eax
  4181d7:	mov    eax,edx
  4181d9:	sub    eax,0x4
  4181dc:	mov    DWORD PTR [rbp-0xb8],eax
  4181e2:	mov    eax,DWORD PTR [rbp+0x10]
  4181e5:	dec    eax
  4181e7:	mov    DWORD PTR [rbp-0xb4],eax
  4181ed:	mov    eax,DWORD PTR [rbp-0xb8]
  4181f3:	sub    eax,DWORD PTR [rbp-0xb4]
  4181f9:	mov    DWORD PTR [rbp-0xb0],eax
  4181ff:	mov    eax,DWORD PTR [rbp-0xb8]
  418205:	sub    eax,DWORD PTR [rbp-0xb0]
  41820b:	cmp    DWORD PTR [rbp-0xb4],eax
  418211:	je     41821d <flatcc_builder_create_table@@Base+0x15c>
  418213:	mov    eax,0xffffffff
  418218:	jmp    41843d <flatcc_builder_create_table@@Base+0x37c>
  41821d:	mov    eax,DWORD PTR [rbp-0xb0]
  418223:	mov    edi,eax
  418225:	call   414e8d <main@@Base+0x120>
  41822a:	mov    DWORD PTR [rbp-0xc4],eax
  418230:	mov    DWORD PTR [rbp-0xc0],0x0
  41823a:	jmp    4182c4 <flatcc_builder_create_table@@Base+0x203>
  41823f:	mov    eax,DWORD PTR [rbp-0xc0]
  418245:	cdqe   
  418247:	lea    rdx,[rax+rax*1]
  41824b:	mov    rax,QWORD PTR [rbp-0xf8]
  418252:	add    rax,rdx
  418255:	movzx  eax,WORD PTR [rax]
  418258:	movzx  edx,ax
  41825b:	mov    rax,QWORD PTR [rbp-0xe0]
  418262:	add    rax,rdx
  418265:	mov    QWORD PTR [rbp-0xa8],rax
  41826c:	mov    rax,QWORD PTR [rbp-0xa8]
  418273:	mov    eax,DWORD PTR [rax]
  418275:	sub    eax,DWORD PTR [rbp-0xb8]
  41827b:	mov    edx,eax
  41827d:	mov    eax,DWORD PTR [rbp-0xc0]
  418283:	cdqe   
  418285:	lea    rcx,[rax+rax*1]
  418289:	mov    rax,QWORD PTR [rbp-0xf8]
  418290:	add    rax,rcx
  418293:	movzx  eax,WORD PTR [rax]
  418296:	movzx  eax,ax
  418299:	sub    edx,eax
  41829b:	mov    eax,edx
  41829d:	sub    eax,0x4
  4182a0:	mov    DWORD PTR [rbp-0xac],eax
  4182a6:	mov    eax,DWORD PTR [rbp-0xac]
  4182ac:	mov    edi,eax
  4182ae:	call   414e8d <main@@Base+0x120>
  4182b3:	mov    edx,eax
  4182b5:	mov    rax,QWORD PTR [rbp-0xa8]
  4182bc:	mov    DWORD PTR [rax],edx
  4182be:	inc    DWORD PTR [rbp-0xc0]
  4182c4:	mov    eax,DWORD PTR [rbp-0xc0]
  4182ca:	cmp    eax,DWORD PTR [rbp-0xf0]
  4182d0:	jl     41823f <flatcc_builder_create_table@@Base+0x17e>
  4182d6:	mov    QWORD PTR [rbp-0xa0],0x0
  4182e1:	mov    DWORD PTR [rbp-0x98],0x0
  4182eb:	mov    rax,QWORD PTR [rbp-0xa0]
  4182f2:	add    rax,0x4
  4182f6:	mov    QWORD PTR [rbp-0xa0],rax
  4182fd:	mov    eax,DWORD PTR [rbp-0x98]
  418303:	cdqe   
  418305:	shl    rax,0x4
  418309:	add    rax,rbp
  41830c:	lea    rdx,[rax-0x90]
  418313:	lea    rax,[rbp-0xc4]
  41831a:	mov    QWORD PTR [rdx],rax
  41831d:	mov    eax,DWORD PTR [rbp-0x98]
  418323:	cdqe   
  418325:	shl    rax,0x4
  418329:	add    rax,rbp
  41832c:	sub    rax,0x88
  418332:	mov    QWORD PTR [rax],0x4
  418339:	mov    eax,DWORD PTR [rbp-0x98]
  41833f:	inc    eax
  418341:	mov    DWORD PTR [rbp-0x98],eax
  418347:	cmp    QWORD PTR [rbp-0xe8],0x0
  41834f:	je     4183b7 <flatcc_builder_create_table@@Base+0x2f6>
  418351:	mov    rdx,QWORD PTR [rbp-0xa0]
  418358:	mov    rax,QWORD PTR [rbp-0xe8]
  41835f:	add    rax,rdx
  418362:	mov    QWORD PTR [rbp-0xa0],rax
  418369:	mov    eax,DWORD PTR [rbp-0x98]
  41836f:	cdqe   
  418371:	shl    rax,0x4
  418375:	add    rax,rbp
  418378:	lea    rdx,[rax-0x90]
  41837f:	mov    rax,QWORD PTR [rbp-0xe0]
  418386:	mov    QWORD PTR [rdx],rax
  418389:	mov    eax,DWORD PTR [rbp-0x98]
  41838f:	cdqe   
  418391:	shl    rax,0x4
  418395:	add    rax,rbp
  418398:	lea    rdx,[rax-0x88]
  41839f:	mov    rax,QWORD PTR [rbp-0xe8]
  4183a6:	mov    QWORD PTR [rdx],rax
  4183a9:	mov    eax,DWORD PTR [rbp-0x98]
  4183af:	inc    eax
  4183b1:	mov    DWORD PTR [rbp-0x98],eax
  4183b7:	cmp    DWORD PTR [rbp-0xbc],0x0
  4183be:	je     418424 <flatcc_builder_create_table@@Base+0x363>
  4183c0:	mov    rdx,QWORD PTR [rbp-0xa0]
  4183c7:	mov    eax,DWORD PTR [rbp-0xbc]
  4183cd:	add    rax,rdx
  4183d0:	mov    QWORD PTR [rbp-0xa0],rax
  4183d7:	mov    eax,DWORD PTR [rbp-0x98]
  4183dd:	cdqe   
  4183df:	shl    rax,0x4
  4183e3:	add    rax,rbp
  4183e6:	sub    rax,0x90
  4183ec:	mov    rdx,0x4223a0
  4183f3:	mov    QWORD PTR [rax],rdx
  4183f6:	mov    edx,DWORD PTR [rbp-0x98]
  4183fc:	mov    eax,DWORD PTR [rbp-0xbc]
  418402:	movsxd rdx,edx
  418405:	shl    rdx,0x4
  418409:	add    rdx,rbp
  41840c:	sub    rdx,0x88
  418413:	mov    QWORD PTR [rdx],rax
  418416:	mov    eax,DWORD PTR [rbp-0x98]
  41841c:	inc    eax
  41841e:	mov    DWORD PTR [rbp-0x98],eax
  418424:	lea    rdx,[rbp-0xa0]
  41842b:	mov    rax,QWORD PTR [rbp-0xd8]
  418432:	mov    rsi,rdx
  418435:	mov    rdi,rax
  418438:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41843d:	mov    rsi,QWORD PTR [rbp-0x8]
  418441:	xor    rsi,QWORD PTR fs:0x28
  41844a:	je     418451 <flatcc_builder_create_table@@Base+0x390>
  41844c:	call   403200 <__stack_chk_fail@plt>
  418451:	leave  
  418452:	ret    

0000000000418453 <flatcc_builder_check_required_field@@Base>:
  418453:	endbr64 
  418457:	push   rbp
  418458:	mov    rbp,rsp
  41845b:	sub    rsp,0x10
  41845f:	mov    QWORD PTR [rbp-0x8],rdi
  418463:	mov    eax,esi
  418465:	mov    WORD PTR [rbp-0xc],ax
  418469:	mov    rax,QWORD PTR [rbp-0x8]
  41846d:	mov    rax,QWORD PTR [rax+0x30]
  418471:	movzx  eax,WORD PTR [rax+0xe]
  418475:	cmp    ax,0x3
  418479:	je     41849a <flatcc_builder_check_required_field@@Base+0x47>
  41847b:	lea    rcx,[rip+0xa89e]        # 422d20 <flatcc_builder_padding_base@@Base+0x980>
  418482:	mov    edx,0x4f8
  418487:	lea    rsi,[rip+0xa112]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41848e:	lea    rdi,[rip+0xa3e3]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  418495:	call   403220 <__assert_fail@plt>
  41849a:	mov    rax,QWORD PTR [rbp-0x8]
  41849e:	movzx  eax,WORD PTR [rax+0x10]
  4184a2:	cmp    WORD PTR [rbp-0xc],ax
  4184a6:	jae    4184c9 <flatcc_builder_check_required_field@@Base+0x76>
  4184a8:	mov    rax,QWORD PTR [rbp-0x8]
  4184ac:	mov    rax,QWORD PTR [rax+0x8]
  4184b0:	movzx  edx,WORD PTR [rbp-0xc]
  4184b4:	add    rdx,rdx
  4184b7:	add    rax,rdx
  4184ba:	movzx  eax,WORD PTR [rax]
  4184bd:	test   ax,ax
  4184c0:	je     4184c9 <flatcc_builder_check_required_field@@Base+0x76>
  4184c2:	mov    eax,0x1
  4184c7:	jmp    4184ce <flatcc_builder_check_required_field@@Base+0x7b>
  4184c9:	mov    eax,0x0
  4184ce:	leave  
  4184cf:	ret    

00000000004184d0 <flatcc_builder_check_union_field@@Base>:
  4184d0:	endbr64 
  4184d4:	push   rbp
  4184d5:	mov    rbp,rsp
  4184d8:	sub    rsp,0x10
  4184dc:	mov    QWORD PTR [rbp-0x8],rdi
  4184e0:	mov    eax,esi
  4184e2:	mov    WORD PTR [rbp-0xc],ax
  4184e6:	mov    rax,QWORD PTR [rbp-0x8]
  4184ea:	mov    rax,QWORD PTR [rax+0x30]
  4184ee:	movzx  eax,WORD PTR [rax+0xe]
  4184f2:	cmp    ax,0x3
  4184f6:	je     418517 <flatcc_builder_check_union_field@@Base+0x47>
  4184f8:	lea    rcx,[rip+0xa861]        # 422d60 <flatcc_builder_padding_base@@Base+0x9c0>
  4184ff:	mov    edx,0x4ff
  418504:	lea    rsi,[rip+0xa095]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41850b:	lea    rdi,[rip+0xa366]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  418512:	call   403220 <__assert_fail@plt>
  418517:	cmp    WORD PTR [rbp-0xc],0x0
  41851c:	je     41852c <flatcc_builder_check_union_field@@Base+0x5c>
  41851e:	mov    rax,QWORD PTR [rbp-0x8]
  418522:	movzx  eax,WORD PTR [rax+0x10]
  418526:	cmp    WORD PTR [rbp-0xc],ax
  41852a:	jb     418536 <flatcc_builder_check_union_field@@Base+0x66>
  41852c:	mov    eax,0x0
  418531:	jmp    4185e0 <flatcc_builder_check_union_field@@Base+0x110>
  418536:	mov    rax,QWORD PTR [rbp-0x8]
  41853a:	mov    rax,QWORD PTR [rax+0x8]
  41853e:	movzx  edx,WORD PTR [rbp-0xc]
  418542:	add    rdx,rdx
  418545:	sub    rdx,0x2
  418549:	add    rax,rdx
  41854c:	movzx  eax,WORD PTR [rax]
  41854f:	test   ax,ax
  418552:	jne    418574 <flatcc_builder_check_union_field@@Base+0xa4>
  418554:	mov    rax,QWORD PTR [rbp-0x8]
  418558:	mov    rax,QWORD PTR [rax+0x8]
  41855c:	movzx  edx,WORD PTR [rbp-0xc]
  418560:	add    rdx,rdx
  418563:	add    rax,rdx
  418566:	movzx  eax,WORD PTR [rax]
  418569:	test   ax,ax
  41856c:	sete   al
  41856f:	movzx  eax,al
  418572:	jmp    4185e0 <flatcc_builder_check_union_field@@Base+0x110>
  418574:	mov    rax,QWORD PTR [rbp-0x8]
  418578:	mov    rdx,QWORD PTR [rax+0x18]
  41857c:	mov    rax,QWORD PTR [rbp-0x8]
  418580:	mov    rax,QWORD PTR [rax+0x8]
  418584:	movzx  ecx,WORD PTR [rbp-0xc]
  418588:	add    rcx,rcx
  41858b:	sub    rcx,0x2
  41858f:	add    rax,rcx
  418592:	movzx  eax,WORD PTR [rax]
  418595:	movzx  eax,ax
  418598:	add    rax,rdx
  41859b:	movzx  eax,BYTE PTR [rax]
  41859e:	test   al,al
  4185a0:	je     4185c2 <flatcc_builder_check_union_field@@Base+0xf2>
  4185a2:	mov    rax,QWORD PTR [rbp-0x8]
  4185a6:	mov    rax,QWORD PTR [rax+0x8]
  4185aa:	movzx  edx,WORD PTR [rbp-0xc]
  4185ae:	add    rdx,rdx
  4185b1:	add    rax,rdx
  4185b4:	movzx  eax,WORD PTR [rax]
  4185b7:	test   ax,ax
  4185ba:	setne  al
  4185bd:	movzx  eax,al
  4185c0:	jmp    4185e0 <flatcc_builder_check_union_field@@Base+0x110>
  4185c2:	mov    rax,QWORD PTR [rbp-0x8]
  4185c6:	mov    rax,QWORD PTR [rax+0x8]
  4185ca:	movzx  edx,WORD PTR [rbp-0xc]
  4185ce:	add    rdx,rdx
  4185d1:	add    rax,rdx
  4185d4:	movzx  eax,WORD PTR [rax]
  4185d7:	test   ax,ax
  4185da:	sete   al
  4185dd:	movzx  eax,al
  4185e0:	leave  
  4185e1:	ret    

00000000004185e2 <flatcc_builder_check_required@@Base>:
  4185e2:	endbr64 
  4185e6:	push   rbp
  4185e7:	mov    rbp,rsp
  4185ea:	sub    rsp,0x30
  4185ee:	mov    QWORD PTR [rbp-0x18],rdi
  4185f2:	mov    QWORD PTR [rbp-0x20],rsi
  4185f6:	mov    DWORD PTR [rbp-0x24],edx
  4185f9:	mov    rax,QWORD PTR [rbp-0x18]
  4185fd:	mov    rax,QWORD PTR [rax+0x30]
  418601:	movzx  eax,WORD PTR [rax+0xe]
  418605:	cmp    ax,0x3
  418609:	je     41862a <flatcc_builder_check_required@@Base+0x48>
  41860b:	lea    rcx,[rip+0xa77e]        # 422d90 <flatcc_builder_padding_base@@Base+0x9f0>
  418612:	mov    edx,0x511
  418617:	lea    rsi,[rip+0x9f82]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41861e:	lea    rdi,[rip+0xa253]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  418625:	call   403220 <__assert_fail@plt>
  41862a:	mov    rax,QWORD PTR [rbp-0x18]
  41862e:	movzx  eax,WORD PTR [rax+0x10]
  418632:	movzx  eax,ax
  418635:	cmp    DWORD PTR [rbp-0x24],eax
  418638:	jle    418641 <flatcc_builder_check_required@@Base+0x5f>
  41863a:	mov    eax,0x0
  41863f:	jmp    41868d <flatcc_builder_check_required@@Base+0xab>
  418641:	mov    DWORD PTR [rbp-0x4],0x0
  418648:	jmp    418680 <flatcc_builder_check_required@@Base+0x9e>
  41864a:	mov    rax,QWORD PTR [rbp-0x18]
  41864e:	mov    rdx,QWORD PTR [rax+0x8]
  418652:	mov    eax,DWORD PTR [rbp-0x4]
  418655:	cdqe   
  418657:	lea    rcx,[rax+rax*1]
  41865b:	mov    rax,QWORD PTR [rbp-0x20]
  41865f:	add    rax,rcx
  418662:	movzx  eax,WORD PTR [rax]
  418665:	movzx  eax,ax
  418668:	add    rax,rax
  41866b:	add    rax,rdx
  41866e:	movzx  eax,WORD PTR [rax]
  418671:	test   ax,ax
  418674:	jne    41867d <flatcc_builder_check_required@@Base+0x9b>
  418676:	mov    eax,0x0
  41867b:	jmp    41868d <flatcc_builder_check_required@@Base+0xab>
  41867d:	inc    DWORD PTR [rbp-0x4]
  418680:	mov    eax,DWORD PTR [rbp-0x4]
  418683:	cmp    eax,DWORD PTR [rbp-0x24]
  418686:	jl     41864a <flatcc_builder_check_required@@Base+0x68>
  418688:	mov    eax,0x1
  41868d:	leave  
  41868e:	ret    

000000000041868f <flatcc_builder_end_table@@Base>:
  41868f:	endbr64 
  418693:	push   rbp
  418694:	mov    rbp,rsp
  418697:	sub    rsp,0x30
  41869b:	mov    QWORD PTR [rbp-0x28],rdi
  41869f:	mov    rax,QWORD PTR [rbp-0x28]
  4186a3:	mov    rax,QWORD PTR [rax+0x30]
  4186a7:	movzx  eax,WORD PTR [rax+0xe]
  4186ab:	cmp    ax,0x3
  4186af:	je     4186d0 <flatcc_builder_end_table@@Base+0x41>
  4186b1:	lea    rcx,[rip+0xa6f8]        # 422db0 <flatcc_builder_padding_base@@Base+0xa10>
  4186b8:	mov    edx,0x525
  4186bd:	lea    rsi,[rip+0x9edc]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4186c4:	lea    rdi,[rip+0xa1ad]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  4186cb:	call   403220 <__assert_fail@plt>
  4186d0:	mov    rax,QWORD PTR [rbp-0x28]
  4186d4:	mov    rax,QWORD PTR [rax+0x8]
  4186d8:	sub    rax,0x4
  4186dc:	mov    QWORD PTR [rbp-0x10],rax
  4186e0:	mov    rax,QWORD PTR [rbp-0x28]
  4186e4:	movzx  eax,WORD PTR [rax+0x10]
  4186e8:	movzx  eax,ax
  4186eb:	add    eax,0x2
  4186ee:	cdqe   
  4186f0:	add    eax,eax
  4186f2:	mov    WORD PTR [rbp-0x1e],ax
  4186f6:	mov    rdx,QWORD PTR [rbp-0x10]
  4186fa:	movzx  eax,WORD PTR [rbp-0x1e]
  4186fe:	mov    WORD PTR [rdx],ax
  418701:	mov    rax,QWORD PTR [rbp-0x28]
  418705:	mov    eax,DWORD PTR [rax+0x20]
  418708:	mov    ecx,eax
  41870a:	mov    rax,QWORD PTR [rbp-0x10]
  41870e:	lea    rdx,[rax+0x2]
  418712:	lea    eax,[rcx+0x4]
  418715:	mov    WORD PTR [rdx],ax
  418718:	mov    rax,QWORD PTR [rbp-0x10]
  41871c:	movzx  eax,WORD PTR [rax]
  41871f:	movzx  edx,ax
  418722:	mov    rax,QWORD PTR [rbp-0x28]
  418726:	mov    eax,DWORD PTR [rax+0x14]
  418729:	xor    eax,edx
  41872b:	imul   edx,eax,0x9e3779b1
  418731:	mov    rax,QWORD PTR [rbp-0x10]
  418735:	add    rax,0x2
  418739:	movzx  eax,WORD PTR [rax]
  41873c:	movzx  eax,ax
  41873f:	xor    eax,edx
  418741:	imul   edx,eax,0x9e3779b1
  418747:	mov    rax,QWORD PTR [rbp-0x28]
  41874b:	mov    DWORD PTR [rax+0x14],edx
  41874e:	mov    rax,QWORD PTR [rbp-0x28]
  418752:	mov    ecx,DWORD PTR [rax+0x14]
  418755:	movzx  edx,WORD PTR [rbp-0x1e]
  418759:	mov    rsi,QWORD PTR [rbp-0x10]
  41875d:	mov    rax,QWORD PTR [rbp-0x28]
  418761:	mov    rdi,rax
  418764:	call   417ddb <flatcc_builder_create_cached_vtable@@Base>
  418769:	mov    DWORD PTR [rbp-0x1c],eax
  41876c:	cmp    DWORD PTR [rbp-0x1c],0x0
  418770:	jne    41877c <flatcc_builder_end_table@@Base+0xed>
  418772:	mov    eax,0x0
  418777:	jmp    418893 <flatcc_builder_end_table@@Base+0x204>
  41877c:	movzx  edx,WORD PTR [rbp-0x1e]
  418780:	mov    rax,QWORD PTR [rbp-0x10]
  418784:	mov    esi,0x0
  418789:	mov    rdi,rax
  41878c:	call   403230 <memset@plt>
  418791:	mov    rax,QWORD PTR [rbp-0x28]
  418795:	mov    rdx,QWORD PTR [rax+0x88]
  41879c:	mov    rax,QWORD PTR [rbp-0x28]
  4187a0:	mov    rax,QWORD PTR [rax+0x30]
  4187a4:	mov    eax,DWORD PTR [rax+0x14]
  4187a7:	mov    eax,eax
  4187a9:	add    rax,rdx
  4187ac:	mov    QWORD PTR [rbp-0x8],rax
  4187b0:	mov    rax,QWORD PTR [rbp-0x28]
  4187b4:	mov    rax,QWORD PTR [rax]
  4187b7:	sub    rax,QWORD PTR [rbp-0x8]
  4187bb:	sar    rax,1
  4187be:	mov    DWORD PTR [rbp-0x18],eax
  4187c1:	mov    rax,QWORD PTR [rbp-0x28]
  4187c5:	movzx  eax,WORD PTR [rax+0xea]
  4187cc:	movzx  edx,ax
  4187cf:	mov    rax,QWORD PTR [rbp-0x28]
  4187d3:	mov    eax,DWORD PTR [rax+0x20]
  4187d6:	mov    r10d,eax
  4187d9:	mov    rax,QWORD PTR [rbp-0x28]
  4187dd:	mov    rsi,QWORD PTR [rax+0x18]
  4187e1:	mov    r8d,DWORD PTR [rbp-0x18]
  4187e5:	mov    rdi,QWORD PTR [rbp-0x8]
  4187e9:	mov    rax,QWORD PTR [rbp-0x28]
  4187ed:	sub    rsp,0x8
  4187f1:	mov    ecx,DWORD PTR [rbp-0x1c]
  4187f4:	push   rcx
  4187f5:	mov    r9d,r8d
  4187f8:	mov    r8,rdi
  4187fb:	mov    ecx,edx
  4187fd:	mov    rdx,r10
  418800:	mov    rdi,rax
  418803:	call   4180c1 <flatcc_builder_create_table@@Base>
  418808:	add    rsp,0x10
  41880c:	mov    DWORD PTR [rbp-0x14],eax
  41880f:	cmp    DWORD PTR [rbp-0x14],0x0
  418813:	jne    41881c <flatcc_builder_end_table@@Base+0x18d>
  418815:	mov    eax,0x0
  41881a:	jmp    418893 <flatcc_builder_end_table@@Base+0x204>
  41881c:	mov    rax,QWORD PTR [rbp-0x28]
  418820:	mov    rax,QWORD PTR [rax+0x30]
  418824:	mov    edx,DWORD PTR [rax+0x18]
  418827:	mov    rax,QWORD PTR [rbp-0x28]
  41882b:	mov    DWORD PTR [rax+0x14],edx
  41882e:	mov    rax,QWORD PTR [rbp-0x28]
  418832:	mov    rax,QWORD PTR [rax+0x30]
  418836:	movzx  eax,WORD PTR [rax+0x1c]
  41883a:	mov    rdx,QWORD PTR [rbp-0x28]
  41883e:	mov    WORD PTR [rdx+0x10],ax
  418842:	mov    rax,QWORD PTR [rbp-0x28]
  418846:	mov    rdx,QWORD PTR [rax+0x58]
  41884a:	mov    rax,QWORD PTR [rbp-0x28]
  41884e:	mov    rax,QWORD PTR [rax+0x30]
  418852:	mov    eax,DWORD PTR [rax+0x10]
  418855:	mov    eax,eax
  418857:	add    rdx,rax
  41885a:	mov    rax,QWORD PTR [rbp-0x28]
  41885e:	mov    QWORD PTR [rax+0x8],rdx
  418862:	mov    rax,QWORD PTR [rbp-0x28]
  418866:	mov    rdx,QWORD PTR [rax+0x88]
  41886d:	mov    rax,QWORD PTR [rbp-0x28]
  418871:	mov    rax,QWORD PTR [rax+0x30]
  418875:	mov    eax,DWORD PTR [rax+0x14]
  418878:	mov    eax,eax
  41887a:	add    rdx,rax
  41887d:	mov    rax,QWORD PTR [rbp-0x28]
  418881:	mov    QWORD PTR [rax],rdx
  418884:	mov    rax,QWORD PTR [rbp-0x28]
  418888:	mov    rdi,rax
  41888b:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  418890:	mov    eax,DWORD PTR [rbp-0x14]
  418893:	leave  
  418894:	ret    

0000000000418895 <flatcc_builder_create_vector@@Base>:
  418895:	endbr64 
  418899:	push   rbp
  41889a:	mov    rbp,rsp
  41889d:	sub    rsp,0xe0
  4188a4:	mov    QWORD PTR [rbp-0xb8],rdi
  4188ab:	mov    QWORD PTR [rbp-0xc0],rsi
  4188b2:	mov    QWORD PTR [rbp-0xc8],rdx
  4188b9:	mov    QWORD PTR [rbp-0xd0],rcx
  4188c0:	mov    eax,r8d
  4188c3:	mov    QWORD PTR [rbp-0xe0],r9
  4188ca:	mov    WORD PTR [rbp-0xd4],ax
  4188d1:	mov    rax,QWORD PTR fs:0x28
  4188da:	mov    QWORD PTR [rbp-0x8],rax
  4188de:	xor    eax,eax
  4188e0:	mov    rax,QWORD PTR [rbp-0xc8]
  4188e7:	cmp    rax,QWORD PTR [rbp-0xe0]
  4188ee:	jbe    418929 <flatcc_builder_create_vector@@Base+0x94>
  4188f0:	mov    rax,QWORD PTR [rbp-0xc8]
  4188f7:	cmp    rax,QWORD PTR [rbp-0xe0]
  4188fe:	jbe    41891f <flatcc_builder_create_vector@@Base+0x8a>
  418900:	lea    rcx,[rip+0xa4c9]        # 422dd0 <flatcc_builder_padding_base@@Base+0xa30>
  418907:	mov    edx,0x555
  41890c:	lea    rsi,[rip+0x9c8d]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418913:	lea    rdi,[rip+0x9f89]        # 4228a3 <flatcc_builder_padding_base@@Base+0x503>
  41891a:	call   403220 <__assert_fail@plt>
  41891f:	mov    eax,0x0
  418924:	jmp    418b11 <flatcc_builder_create_vector@@Base+0x27c>
  418929:	lea    rax,[rbp-0xd4]
  418930:	mov    esi,0x4
  418935:	mov    rdi,rax
  418938:	call   415bea <flatcc_builder_clear@@Base+0xca>
  41893d:	movzx  eax,WORD PTR [rbp-0xd4]
  418944:	movzx  edx,ax
  418947:	mov    rax,QWORD PTR [rbp-0xb8]
  41894e:	mov    esi,edx
  418950:	mov    rdi,rax
  418953:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  418958:	mov    rax,QWORD PTR [rbp-0xc8]
  41895f:	mov    edx,eax
  418961:	mov    rax,QWORD PTR [rbp-0xd0]
  418968:	imul   eax,edx
  41896b:	mov    DWORD PTR [rbp-0xa8],eax
  418971:	mov    rax,QWORD PTR [rbp-0xc8]
  418978:	mov    edi,eax
  41897a:	call   414e8d <main@@Base+0x120>
  41897f:	mov    DWORD PTR [rbp-0xac],eax
  418985:	movzx  eax,WORD PTR [rbp-0xd4]
  41898c:	movzx  edx,ax
  41898f:	mov    ecx,DWORD PTR [rbp-0xa8]
  418995:	mov    rax,QWORD PTR [rbp-0xb8]
  41899c:	mov    esi,ecx
  41899e:	mov    rdi,rax
  4189a1:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4189a6:	mov    DWORD PTR [rbp-0xa4],eax
  4189ac:	mov    QWORD PTR [rbp-0xa0],0x0
  4189b7:	mov    DWORD PTR [rbp-0x98],0x0
  4189c1:	mov    rax,QWORD PTR [rbp-0xa0]
  4189c8:	add    rax,0x4
  4189cc:	mov    QWORD PTR [rbp-0xa0],rax
  4189d3:	mov    eax,DWORD PTR [rbp-0x98]
  4189d9:	cdqe   
  4189db:	shl    rax,0x4
  4189df:	add    rax,rbp
  4189e2:	lea    rdx,[rax-0x90]
  4189e9:	lea    rax,[rbp-0xac]
  4189f0:	mov    QWORD PTR [rdx],rax
  4189f3:	mov    eax,DWORD PTR [rbp-0x98]
  4189f9:	cdqe   
  4189fb:	shl    rax,0x4
  4189ff:	add    rax,rbp
  418a02:	sub    rax,0x88
  418a08:	mov    QWORD PTR [rax],0x4
  418a0f:	mov    eax,DWORD PTR [rbp-0x98]
  418a15:	inc    eax
  418a17:	mov    DWORD PTR [rbp-0x98],eax
  418a1d:	cmp    DWORD PTR [rbp-0xa8],0x0
  418a24:	je     418a8b <flatcc_builder_create_vector@@Base+0x1f6>
  418a26:	mov    rdx,QWORD PTR [rbp-0xa0]
  418a2d:	mov    eax,DWORD PTR [rbp-0xa8]
  418a33:	add    rax,rdx
  418a36:	mov    QWORD PTR [rbp-0xa0],rax
  418a3d:	mov    eax,DWORD PTR [rbp-0x98]
  418a43:	cdqe   
  418a45:	shl    rax,0x4
  418a49:	add    rax,rbp
  418a4c:	lea    rdx,[rax-0x90]
  418a53:	mov    rax,QWORD PTR [rbp-0xc0]
  418a5a:	mov    QWORD PTR [rdx],rax
  418a5d:	mov    edx,DWORD PTR [rbp-0x98]
  418a63:	mov    eax,DWORD PTR [rbp-0xa8]
  418a69:	movsxd rdx,edx
  418a6c:	shl    rdx,0x4
  418a70:	add    rdx,rbp
  418a73:	sub    rdx,0x88
  418a7a:	mov    QWORD PTR [rdx],rax
  418a7d:	mov    eax,DWORD PTR [rbp-0x98]
  418a83:	inc    eax
  418a85:	mov    DWORD PTR [rbp-0x98],eax
  418a8b:	cmp    DWORD PTR [rbp-0xa4],0x0
  418a92:	je     418af8 <flatcc_builder_create_vector@@Base+0x263>
  418a94:	mov    rdx,QWORD PTR [rbp-0xa0]
  418a9b:	mov    eax,DWORD PTR [rbp-0xa4]
  418aa1:	add    rax,rdx
  418aa4:	mov    QWORD PTR [rbp-0xa0],rax
  418aab:	mov    eax,DWORD PTR [rbp-0x98]
  418ab1:	cdqe   
  418ab3:	shl    rax,0x4
  418ab7:	add    rax,rbp
  418aba:	sub    rax,0x90
  418ac0:	mov    rdx,0x4223a0
  418ac7:	mov    QWORD PTR [rax],rdx
  418aca:	mov    edx,DWORD PTR [rbp-0x98]
  418ad0:	mov    eax,DWORD PTR [rbp-0xa4]
  418ad6:	movsxd rdx,edx
  418ad9:	shl    rdx,0x4
  418add:	add    rdx,rbp
  418ae0:	sub    rdx,0x88
  418ae7:	mov    QWORD PTR [rdx],rax
  418aea:	mov    eax,DWORD PTR [rbp-0x98]
  418af0:	inc    eax
  418af2:	mov    DWORD PTR [rbp-0x98],eax
  418af8:	lea    rdx,[rbp-0xa0]
  418aff:	mov    rax,QWORD PTR [rbp-0xb8]
  418b06:	mov    rsi,rdx
  418b09:	mov    rdi,rax
  418b0c:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  418b11:	mov    rcx,QWORD PTR [rbp-0x8]
  418b15:	xor    rcx,QWORD PTR fs:0x28
  418b1e:	je     418b25 <flatcc_builder_create_vector@@Base+0x290>
  418b20:	call   403200 <__stack_chk_fail@plt>
  418b25:	leave  
  418b26:	ret    

0000000000418b27 <flatcc_builder_end_vector@@Base>:
  418b27:	endbr64 
  418b2b:	push   rbp
  418b2c:	mov    rbp,rsp
  418b2f:	sub    rsp,0x20
  418b33:	mov    QWORD PTR [rbp-0x18],rdi
  418b37:	mov    rax,QWORD PTR [rbp-0x18]
  418b3b:	mov    rax,QWORD PTR [rax+0x30]
  418b3f:	movzx  eax,WORD PTR [rax+0xe]
  418b43:	cmp    ax,0x4
  418b47:	je     418b68 <flatcc_builder_end_vector@@Base+0x41>
  418b49:	lea    rcx,[rip+0xa2a0]        # 422df0 <flatcc_builder_padding_base@@Base+0xa50>
  418b50:	mov    edx,0x578
  418b55:	lea    rsi,[rip+0x9a44]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418b5c:	lea    rdi,[rip+0x9b85]        # 4226e8 <flatcc_builder_padding_base@@Base+0x348>
  418b63:	call   403220 <__assert_fail@plt>
  418b68:	mov    rax,QWORD PTR [rbp-0x18]
  418b6c:	mov    rax,QWORD PTR [rax+0x30]
  418b70:	mov    eax,DWORD PTR [rax+0x18]
  418b73:	mov    r8d,eax
  418b76:	mov    rax,QWORD PTR [rbp-0x18]
  418b7a:	movzx  eax,WORD PTR [rax+0xea]
  418b81:	movzx  edx,ax
  418b84:	mov    rax,QWORD PTR [rbp-0x18]
  418b88:	mov    rax,QWORD PTR [rax+0x30]
  418b8c:	mov    eax,DWORD PTR [rax+0x10]
  418b8f:	mov    ecx,eax
  418b91:	mov    rax,QWORD PTR [rbp-0x18]
  418b95:	mov    rax,QWORD PTR [rax+0x30]
  418b99:	mov    eax,DWORD PTR [rax+0x14]
  418b9c:	mov    edi,eax
  418b9e:	mov    rax,QWORD PTR [rbp-0x18]
  418ba2:	mov    rsi,QWORD PTR [rax+0x18]
  418ba6:	mov    rax,QWORD PTR [rbp-0x18]
  418baa:	mov    r9,r8
  418bad:	mov    r8d,edx
  418bb0:	mov    rdx,rdi
  418bb3:	mov    rdi,rax
  418bb6:	call   418895 <flatcc_builder_create_vector@@Base>
  418bbb:	mov    DWORD PTR [rbp-0x4],eax
  418bbe:	cmp    DWORD PTR [rbp-0x4],0x0
  418bc2:	jne    418bcb <flatcc_builder_end_vector@@Base+0xa4>
  418bc4:	mov    eax,0x0
  418bc9:	jmp    418bda <flatcc_builder_end_vector@@Base+0xb3>
  418bcb:	mov    rax,QWORD PTR [rbp-0x18]
  418bcf:	mov    rdi,rax
  418bd2:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  418bd7:	mov    eax,DWORD PTR [rbp-0x4]
  418bda:	leave  
  418bdb:	ret    

0000000000418bdc <flatcc_builder_vector_count@@Base>:
  418bdc:	endbr64 
  418be0:	push   rbp
  418be1:	mov    rbp,rsp
  418be4:	mov    QWORD PTR [rbp-0x8],rdi
  418be8:	mov    rax,QWORD PTR [rbp-0x8]
  418bec:	mov    rax,QWORD PTR [rax+0x30]
  418bf0:	mov    eax,DWORD PTR [rax+0x14]
  418bf3:	mov    eax,eax
  418bf5:	pop    rbp
  418bf6:	ret    

0000000000418bf7 <flatcc_builder_vector_edit@@Base>:
  418bf7:	endbr64 
  418bfb:	push   rbp
  418bfc:	mov    rbp,rsp
  418bff:	mov    QWORD PTR [rbp-0x8],rdi
  418c03:	mov    rax,QWORD PTR [rbp-0x8]
  418c07:	mov    rax,QWORD PTR [rax+0x18]
  418c0b:	pop    rbp
  418c0c:	ret    
  418c0d:	endbr64 
  418c11:	push   rbp
  418c12:	mov    rbp,rsp
  418c15:	sub    rsp,0xe0
  418c1c:	mov    QWORD PTR [rbp-0xc8],rdi
  418c23:	mov    QWORD PTR [rbp-0xd0],rsi
  418c2a:	mov    QWORD PTR [rbp-0xd8],rdx
  418c31:	mov    QWORD PTR [rbp-0xe0],rcx
  418c38:	mov    rax,QWORD PTR fs:0x28
  418c41:	mov    QWORD PTR [rbp-0x8],rax
  418c45:	xor    eax,eax
  418c47:	mov    rax,QWORD PTR [rbp-0xd8]
  418c4e:	cmp    eax,0x3fffffff
  418c53:	jbe    418c5f <flatcc_builder_vector_edit@@Base+0x68>
  418c55:	mov    eax,0x0
  418c5a:	jmp    418f88 <flatcc_builder_vector_edit@@Base+0x391>
  418c5f:	mov    rax,QWORD PTR [rbp-0xc8]
  418c66:	mov    esi,0x4
  418c6b:	mov    rdi,rax
  418c6e:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  418c73:	mov    rax,QWORD PTR [rbp-0xd8]
  418c7a:	shl    eax,0x2
  418c7d:	mov    DWORD PTR [rbp-0xb0],eax
  418c83:	mov    rax,QWORD PTR [rbp-0xd8]
  418c8a:	mov    edi,eax
  418c8c:	call   414e8d <main@@Base+0x120>
  418c91:	mov    DWORD PTR [rbp-0xb8],eax
  418c97:	mov    ecx,DWORD PTR [rbp-0xb0]
  418c9d:	mov    rax,QWORD PTR [rbp-0xc8]
  418ca4:	mov    edx,0x4
  418ca9:	mov    esi,ecx
  418cab:	mov    rdi,rax
  418cae:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  418cb3:	mov    DWORD PTR [rbp-0xac],eax
  418cb9:	mov    QWORD PTR [rbp-0xa0],0x0
  418cc4:	mov    DWORD PTR [rbp-0x98],0x0
  418cce:	mov    rax,QWORD PTR [rbp-0xa0]
  418cd5:	add    rax,0x4
  418cd9:	mov    QWORD PTR [rbp-0xa0],rax
  418ce0:	mov    eax,DWORD PTR [rbp-0x98]
  418ce6:	cdqe   
  418ce8:	shl    rax,0x4
  418cec:	add    rax,rbp
  418cef:	lea    rdx,[rax-0x90]
  418cf6:	lea    rax,[rbp-0xb8]
  418cfd:	mov    QWORD PTR [rdx],rax
  418d00:	mov    eax,DWORD PTR [rbp-0x98]
  418d06:	cdqe   
  418d08:	shl    rax,0x4
  418d0c:	add    rax,rbp
  418d0f:	sub    rax,0x88
  418d15:	mov    QWORD PTR [rax],0x4
  418d1c:	mov    eax,DWORD PTR [rbp-0x98]
  418d22:	inc    eax
  418d24:	mov    DWORD PTR [rbp-0x98],eax
  418d2a:	cmp    DWORD PTR [rbp-0xb0],0x0
  418d31:	je     418d98 <flatcc_builder_vector_edit@@Base+0x1a1>
  418d33:	mov    rdx,QWORD PTR [rbp-0xa0]
  418d3a:	mov    eax,DWORD PTR [rbp-0xb0]
  418d40:	add    rax,rdx
  418d43:	mov    QWORD PTR [rbp-0xa0],rax
  418d4a:	mov    eax,DWORD PTR [rbp-0x98]
  418d50:	cdqe   
  418d52:	shl    rax,0x4
  418d56:	add    rax,rbp
  418d59:	lea    rdx,[rax-0x90]
  418d60:	mov    rax,QWORD PTR [rbp-0xd0]
  418d67:	mov    QWORD PTR [rdx],rax
  418d6a:	mov    edx,DWORD PTR [rbp-0x98]
  418d70:	mov    eax,DWORD PTR [rbp-0xb0]
  418d76:	movsxd rdx,edx
  418d79:	shl    rdx,0x4
  418d7d:	add    rdx,rbp
  418d80:	sub    rdx,0x88
  418d87:	mov    QWORD PTR [rdx],rax
  418d8a:	mov    eax,DWORD PTR [rbp-0x98]
  418d90:	inc    eax
  418d92:	mov    DWORD PTR [rbp-0x98],eax
  418d98:	cmp    DWORD PTR [rbp-0xac],0x0
  418d9f:	je     418e05 <flatcc_builder_vector_edit@@Base+0x20e>
  418da1:	mov    rdx,QWORD PTR [rbp-0xa0]
  418da8:	mov    eax,DWORD PTR [rbp-0xac]
  418dae:	add    rax,rdx
  418db1:	mov    QWORD PTR [rbp-0xa0],rax
  418db8:	mov    eax,DWORD PTR [rbp-0x98]
  418dbe:	cdqe   
  418dc0:	shl    rax,0x4
  418dc4:	add    rax,rbp
  418dc7:	sub    rax,0x90
  418dcd:	mov    rdx,0x4223a0
  418dd4:	mov    QWORD PTR [rax],rdx
  418dd7:	mov    edx,DWORD PTR [rbp-0x98]
  418ddd:	mov    eax,DWORD PTR [rbp-0xac]
  418de3:	movsxd rdx,edx
  418de6:	shl    rdx,0x4
  418dea:	add    rdx,rbp
  418ded:	sub    rdx,0x88
  418df4:	mov    QWORD PTR [rdx],rax
  418df7:	mov    eax,DWORD PTR [rbp-0x98]
  418dfd:	inc    eax
  418dff:	mov    DWORD PTR [rbp-0x98],eax
  418e05:	mov    rax,QWORD PTR [rbp-0xc8]
  418e0c:	mov    eax,DWORD PTR [rax+0xf0]
  418e12:	mov    edx,eax
  418e14:	mov    rax,QWORD PTR [rbp-0xa0]
  418e1b:	sub    edx,eax
  418e1d:	mov    eax,edx
  418e1f:	mov    DWORD PTR [rbp-0xa8],eax
  418e25:	mov    DWORD PTR [rbp-0xb4],0x0
  418e2f:	jmp    418f5c <flatcc_builder_vector_edit@@Base+0x365>
  418e34:	mov    eax,DWORD PTR [rbp-0xb4]
  418e3a:	lea    rdx,[rax*4+0x0]
  418e42:	mov    rax,QWORD PTR [rbp-0xd0]
  418e49:	add    rax,rdx
  418e4c:	mov    eax,DWORD PTR [rax]
  418e4e:	test   eax,eax
  418e50:	je     418ef7 <flatcc_builder_vector_edit@@Base+0x300>
  418e56:	mov    eax,DWORD PTR [rbp-0xb4]
  418e5c:	lea    rdx,[rax*4+0x0]
  418e64:	mov    rax,QWORD PTR [rbp-0xd0]
  418e6b:	add    rax,rdx
  418e6e:	mov    eax,DWORD PTR [rax]
  418e70:	sub    eax,DWORD PTR [rbp-0xa8]
  418e76:	mov    edx,DWORD PTR [rbp-0xb4]
  418e7c:	shl    edx,0x2
  418e7f:	sub    eax,edx
  418e81:	sub    eax,0x4
  418e84:	mov    DWORD PTR [rbp-0xa4],eax
  418e8a:	mov    eax,DWORD PTR [rbp-0xa4]
  418e90:	mov    edi,eax
  418e92:	call   414e8d <main@@Base+0x120>
  418e97:	mov    edx,eax
  418e99:	mov    eax,DWORD PTR [rbp-0xb4]
  418e9f:	lea    rcx,[rax*4+0x0]
  418ea7:	mov    rax,QWORD PTR [rbp-0xd0]
  418eae:	add    rax,rcx
  418eb1:	mov    DWORD PTR [rax],edx
  418eb3:	cmp    QWORD PTR [rbp-0xe0],0x0
  418ebb:	je     418f56 <flatcc_builder_vector_edit@@Base+0x35f>
  418ec1:	mov    edx,DWORD PTR [rbp-0xb4]
  418ec7:	mov    rax,QWORD PTR [rbp-0xe0]
  418ece:	add    rax,rdx
  418ed1:	movzx  eax,BYTE PTR [rax]
  418ed4:	test   al,al
  418ed6:	jne    418f56 <flatcc_builder_vector_edit@@Base+0x35f>
  418ed8:	lea    rcx,[rip+0x9f31]        # 422e10 <flatcc_builder_padding_base@@Base+0xa70>
  418edf:	mov    edx,0x5b1
  418ee4:	lea    rsi,[rip+0x96b5]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418eeb:	lea    rdi,[rip+0x99c4]        # 4228b6 <flatcc_builder_padding_base@@Base+0x516>
  418ef2:	call   403220 <__assert_fail@plt>
  418ef7:	cmp    QWORD PTR [rbp-0xe0],0x0
  418eff:	je     418f37 <flatcc_builder_vector_edit@@Base+0x340>
  418f01:	mov    edx,DWORD PTR [rbp-0xb4]
  418f07:	mov    rax,QWORD PTR [rbp-0xe0]
  418f0e:	add    rax,rdx
  418f11:	movzx  eax,BYTE PTR [rax]
  418f14:	test   al,al
  418f16:	je     418f56 <flatcc_builder_vector_edit@@Base+0x35f>
  418f18:	lea    rcx,[rip+0x9ef1]        # 422e10 <flatcc_builder_padding_base@@Base+0xa70>
  418f1f:	mov    edx,0x5b5
  418f24:	lea    rsi,[rip+0x9675]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418f2b:	lea    rdi,[rip+0x9992]        # 4228c4 <flatcc_builder_padding_base@@Base+0x524>
  418f32:	call   403220 <__assert_fail@plt>
  418f37:	lea    rcx,[rip+0x9ed2]        # 422e10 <flatcc_builder_padding_base@@Base+0xa70>
  418f3e:	mov    edx,0x5b7
  418f43:	lea    rsi,[rip+0x9656]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  418f4a:	lea    rdi,[rip+0x96af]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  418f51:	call   403220 <__assert_fail@plt>
  418f56:	inc    DWORD PTR [rbp-0xb4]
  418f5c:	mov    rax,QWORD PTR [rbp-0xd8]
  418f63:	cmp    DWORD PTR [rbp-0xb4],eax
  418f69:	jb     418e34 <flatcc_builder_vector_edit@@Base+0x23d>
  418f6f:	lea    rdx,[rbp-0xa0]
  418f76:	mov    rax,QWORD PTR [rbp-0xc8]
  418f7d:	mov    rsi,rdx
  418f80:	mov    rdi,rax
  418f83:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  418f88:	mov    rsi,QWORD PTR [rbp-0x8]
  418f8c:	xor    rsi,QWORD PTR fs:0x28
  418f95:	je     418f9c <flatcc_builder_vector_edit@@Base+0x3a5>
  418f97:	call   403200 <__stack_chk_fail@plt>
  418f9c:	leave  
  418f9d:	ret    

0000000000418f9e <flatcc_builder_create_offset_vector_direct@@Base>:
  418f9e:	endbr64 
  418fa2:	push   rbp
  418fa3:	mov    rbp,rsp
  418fa6:	sub    rsp,0x20
  418faa:	mov    QWORD PTR [rbp-0x8],rdi
  418fae:	mov    QWORD PTR [rbp-0x10],rsi
  418fb2:	mov    QWORD PTR [rbp-0x18],rdx
  418fb6:	mov    rdx,QWORD PTR [rbp-0x18]
  418fba:	mov    rsi,QWORD PTR [rbp-0x10]
  418fbe:	mov    rax,QWORD PTR [rbp-0x8]
  418fc2:	mov    ecx,0x0
  418fc7:	mov    rdi,rax
  418fca:	call   418c0d <flatcc_builder_vector_edit@@Base+0x16>
  418fcf:	leave  
  418fd0:	ret    

0000000000418fd1 <flatcc_builder_end_offset_vector@@Base>:
  418fd1:	endbr64 
  418fd5:	push   rbp
  418fd6:	mov    rbp,rsp
  418fd9:	sub    rsp,0x20
  418fdd:	mov    QWORD PTR [rbp-0x18],rdi
  418fe1:	mov    rax,QWORD PTR [rbp-0x18]
  418fe5:	mov    rax,QWORD PTR [rax+0x30]
  418fe9:	movzx  eax,WORD PTR [rax+0xe]
  418fed:	cmp    ax,0x5
  418ff1:	je     419012 <flatcc_builder_end_offset_vector@@Base+0x41>
  418ff3:	lea    rcx,[rip+0x9e46]        # 422e40 <flatcc_builder_padding_base@@Base+0xaa0>
  418ffa:	mov    edx,0x5c8
  418fff:	lea    rsi,[rip+0x959a]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419006:	lea    rdi,[rip+0x974b]        # 422758 <flatcc_builder_padding_base@@Base+0x3b8>
  41900d:	call   403220 <__assert_fail@plt>
  419012:	mov    rax,QWORD PTR [rbp-0x18]
  419016:	mov    rax,QWORD PTR [rax+0x30]
  41901a:	mov    eax,DWORD PTR [rax+0x14]
  41901d:	mov    edx,eax
  41901f:	mov    rax,QWORD PTR [rbp-0x18]
  419023:	mov    rcx,QWORD PTR [rax+0x18]
  419027:	mov    rax,QWORD PTR [rbp-0x18]
  41902b:	mov    rsi,rcx
  41902e:	mov    rdi,rax
  419031:	call   418f9e <flatcc_builder_create_offset_vector_direct@@Base>
  419036:	mov    DWORD PTR [rbp-0x4],eax
  419039:	cmp    DWORD PTR [rbp-0x4],0x0
  41903d:	jne    419046 <flatcc_builder_end_offset_vector@@Base+0x75>
  41903f:	mov    eax,0x0
  419044:	jmp    419055 <flatcc_builder_end_offset_vector@@Base+0x84>
  419046:	mov    rax,QWORD PTR [rbp-0x18]
  41904a:	mov    rdi,rax
  41904d:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419052:	mov    eax,DWORD PTR [rbp-0x4]
  419055:	leave  
  419056:	ret    

0000000000419057 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  419057:	endbr64 
  41905b:	push   rbp
  41905c:	mov    rbp,rsp
  41905f:	sub    rsp,0x20
  419063:	mov    QWORD PTR [rbp-0x18],rdi
  419067:	mov    QWORD PTR [rbp-0x20],rsi
  41906b:	mov    rax,QWORD PTR [rbp-0x18]
  41906f:	mov    rax,QWORD PTR [rax+0x30]
  419073:	movzx  eax,WORD PTR [rax+0xe]
  419077:	cmp    ax,0x5
  41907b:	je     41909c <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  41907d:	lea    rcx,[rip+0x9dfc]        # 422e80 <flatcc_builder_padding_base@@Base+0xae0>
  419084:	mov    edx,0x5d5
  419089:	lea    rsi,[rip+0x9510]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419090:	lea    rdi,[rip+0x96c1]        # 422758 <flatcc_builder_padding_base@@Base+0x3b8>
  419097:	call   403220 <__assert_fail@plt>
  41909c:	mov    rax,QWORD PTR [rbp-0x18]
  4190a0:	mov    rax,QWORD PTR [rax+0x30]
  4190a4:	mov    eax,DWORD PTR [rax+0x14]
  4190a7:	mov    edi,eax
  4190a9:	mov    rax,QWORD PTR [rbp-0x18]
  4190ad:	mov    rsi,QWORD PTR [rax+0x18]
  4190b1:	mov    rdx,QWORD PTR [rbp-0x20]
  4190b5:	mov    rax,QWORD PTR [rbp-0x18]
  4190b9:	mov    rcx,rdx
  4190bc:	mov    rdx,rdi
  4190bf:	mov    rdi,rax
  4190c2:	call   418c0d <flatcc_builder_vector_edit@@Base+0x16>
  4190c7:	mov    DWORD PTR [rbp-0x4],eax
  4190ca:	cmp    DWORD PTR [rbp-0x4],0x0
  4190ce:	jne    4190d7 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  4190d0:	mov    eax,0x0
  4190d5:	jmp    4190e6 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  4190d7:	mov    rax,QWORD PTR [rbp-0x18]
  4190db:	mov    rdi,rax
  4190de:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4190e3:	mov    eax,DWORD PTR [rbp-0x4]
  4190e6:	leave  
  4190e7:	ret    

00000000004190e8 <flatcc_builder_offset_vector_edit@@Base>:
  4190e8:	endbr64 
  4190ec:	push   rbp
  4190ed:	mov    rbp,rsp
  4190f0:	mov    QWORD PTR [rbp-0x8],rdi
  4190f4:	mov    rax,QWORD PTR [rbp-0x8]
  4190f8:	mov    rax,QWORD PTR [rax+0x18]
  4190fc:	pop    rbp
  4190fd:	ret    

00000000004190fe <flatcc_builder_offset_vector_count@@Base>:
  4190fe:	endbr64 
  419102:	push   rbp
  419103:	mov    rbp,rsp
  419106:	mov    QWORD PTR [rbp-0x8],rdi
  41910a:	mov    rax,QWORD PTR [rbp-0x8]
  41910e:	mov    rax,QWORD PTR [rax+0x30]
  419112:	mov    eax,DWORD PTR [rax+0x14]
  419115:	mov    eax,eax
  419117:	pop    rbp
  419118:	ret    

0000000000419119 <flatcc_builder_table_add_union@@Base>:
  419119:	endbr64 
  41911d:	push   rbp
  41911e:	mov    rbp,rsp
  419121:	sub    rsp,0x30
  419125:	mov    QWORD PTR [rbp-0x18],rdi
  419129:	mov    DWORD PTR [rbp-0x1c],esi
  41912c:	mov    QWORD PTR [rbp-0x24],rdx
  419130:	mov    rax,QWORD PTR [rbp-0x18]
  419134:	mov    rax,QWORD PTR [rax+0x30]
  419138:	movzx  eax,WORD PTR [rax+0xe]
  41913c:	cmp    ax,0x3
  419140:	je     419161 <flatcc_builder_table_add_union@@Base+0x48>
  419142:	lea    rcx,[rip+0x9d67]        # 422eb0 <flatcc_builder_padding_base@@Base+0xb10>
  419149:	mov    edx,0x5ee
  41914e:	lea    rsi,[rip+0x944b]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419155:	lea    rdi,[rip+0x971c]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  41915c:	call   403220 <__assert_fail@plt>
  419161:	movzx  eax,BYTE PTR [rbp-0x24]
  419165:	test   al,al
  419167:	jne    4191a8 <flatcc_builder_table_add_union@@Base+0x8f>
  419169:	mov    eax,DWORD PTR [rbp-0x20]
  41916c:	test   eax,eax
  41916e:	je     4191a8 <flatcc_builder_table_add_union@@Base+0x8f>
  419170:	movzx  eax,BYTE PTR [rbp-0x24]
  419174:	test   al,al
  419176:	jne    41919e <flatcc_builder_table_add_union@@Base+0x85>
  419178:	mov    eax,DWORD PTR [rbp-0x20]
  41917b:	test   eax,eax
  41917d:	je     41919e <flatcc_builder_table_add_union@@Base+0x85>
  41917f:	lea    rcx,[rip+0x9d2a]        # 422eb0 <flatcc_builder_padding_base@@Base+0xb10>
  419186:	mov    edx,0x5ef
  41918b:	lea    rsi,[rip+0x940e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419192:	lea    rdi,[rip+0x973f]        # 4228d8 <flatcc_builder_padding_base@@Base+0x538>
  419199:	call   403220 <__assert_fail@plt>
  41919e:	mov    eax,0xffffffff
  4191a3:	jmp    41926e <flatcc_builder_table_add_union@@Base+0x155>
  4191a8:	mov    eax,DWORD PTR [rbp-0x20]
  4191ab:	test   eax,eax
  4191ad:	je     419201 <flatcc_builder_table_add_union@@Base+0xe8>
  4191af:	mov    edx,DWORD PTR [rbp-0x1c]
  4191b2:	mov    rax,QWORD PTR [rbp-0x18]
  4191b6:	mov    esi,edx
  4191b8:	mov    rdi,rax
  4191bb:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  4191c0:	mov    QWORD PTR [rbp-0x10],rax
  4191c4:	cmp    QWORD PTR [rbp-0x10],0x0
  4191c9:	jne    4191f8 <flatcc_builder_table_add_union@@Base+0xdf>
  4191cb:	cmp    QWORD PTR [rbp-0x10],0x0
  4191d0:	jne    4191f1 <flatcc_builder_table_add_union@@Base+0xd8>
  4191d2:	lea    rcx,[rip+0x9cd7]        # 422eb0 <flatcc_builder_padding_base@@Base+0xb10>
  4191d9:	mov    edx,0x5f2
  4191de:	lea    rsi,[rip+0x93bb]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4191e5:	lea    rdi,[rip+0x970e]        # 4228fa <flatcc_builder_padding_base@@Base+0x55a>
  4191ec:	call   403220 <__assert_fail@plt>
  4191f1:	mov    eax,0xffffffff
  4191f6:	jmp    41926e <flatcc_builder_table_add_union@@Base+0x155>
  4191f8:	mov    edx,DWORD PTR [rbp-0x20]
  4191fb:	mov    rax,QWORD PTR [rbp-0x10]
  4191ff:	mov    DWORD PTR [rax],edx
  419201:	mov    eax,DWORD PTR [rbp-0x1c]
  419204:	lea    esi,[rax-0x1]
  419207:	mov    rax,QWORD PTR [rbp-0x18]
  41920b:	mov    ecx,0x1
  419210:	mov    edx,0x1
  419215:	mov    rdi,rax
  419218:	call   419d30 <flatcc_builder_table_add@@Base>
  41921d:	mov    QWORD PTR [rbp-0x8],rax
  419221:	cmp    QWORD PTR [rbp-0x8],0x0
  419226:	jne    419255 <flatcc_builder_table_add_union@@Base+0x13c>
  419228:	cmp    QWORD PTR [rbp-0x8],0x0
  41922d:	jne    41924e <flatcc_builder_table_add_union@@Base+0x135>
  41922f:	lea    rcx,[rip+0x9c7a]        # 422eb0 <flatcc_builder_padding_base@@Base+0xb10>
  419236:	mov    edx,0x5f6
  41923b:	lea    rsi,[rip+0x935e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419242:	lea    rdi,[rip+0x96bb]        # 422904 <flatcc_builder_padding_base@@Base+0x564>
  419249:	call   403220 <__assert_fail@plt>
  41924e:	mov    eax,0xffffffff
  419253:	jmp    41926e <flatcc_builder_table_add_union@@Base+0x155>
  419255:	movzx  eax,BYTE PTR [rbp-0x24]
  419259:	movzx  eax,al
  41925c:	mov    edi,eax
  41925e:	call   414e99 <main@@Base+0x12c>
  419263:	mov    rdx,QWORD PTR [rbp-0x8]
  419267:	mov    BYTE PTR [rdx],al
  419269:	mov    eax,0x0
  41926e:	leave  
  41926f:	ret    

0000000000419270 <flatcc_builder_table_add_union_vector@@Base>:
  419270:	endbr64 
  419274:	push   rbp
  419275:	mov    rbp,rsp
  419278:	sub    rsp,0x30
  41927c:	mov    QWORD PTR [rbp-0x18],rdi
  419280:	mov    DWORD PTR [rbp-0x1c],esi
  419283:	mov    QWORD PTR [rbp-0x24],rdx
  419287:	mov    rax,QWORD PTR [rbp-0x18]
  41928b:	mov    rax,QWORD PTR [rax+0x30]
  41928f:	movzx  eax,WORD PTR [rax+0xe]
  419293:	cmp    ax,0x3
  419297:	je     4192b8 <flatcc_builder_table_add_union_vector@@Base+0x48>
  419299:	lea    rcx,[rip+0x9c40]        # 422ee0 <flatcc_builder_padding_base@@Base+0xb40>
  4192a0:	mov    edx,0x600
  4192a5:	lea    rsi,[rip+0x92f4]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4192ac:	lea    rdi,[rip+0x95c5]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  4192b3:	call   403220 <__assert_fail@plt>
  4192b8:	mov    eax,DWORD PTR [rbp-0x24]
  4192bb:	test   eax,eax
  4192bd:	sete   dl
  4192c0:	mov    eax,DWORD PTR [rbp-0x20]
  4192c3:	test   eax,eax
  4192c5:	sete   al
  4192c8:	xor    eax,edx
  4192ca:	test   al,al
  4192cc:	je     41930d <flatcc_builder_table_add_union_vector@@Base+0x9d>
  4192ce:	mov    eax,DWORD PTR [rbp-0x24]
  4192d1:	test   eax,eax
  4192d3:	setne  dl
  4192d6:	mov    eax,DWORD PTR [rbp-0x20]
  4192d9:	test   eax,eax
  4192db:	sete   al
  4192de:	xor    eax,edx
  4192e0:	test   al,al
  4192e2:	jne    419303 <flatcc_builder_table_add_union_vector@@Base+0x93>
  4192e4:	lea    rcx,[rip+0x9bf5]        # 422ee0 <flatcc_builder_padding_base@@Base+0xb40>
  4192eb:	mov    edx,0x601
  4192f0:	lea    rsi,[rip+0x92a9]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4192f7:	lea    rdi,[rip+0x9612]        # 422910 <flatcc_builder_padding_base@@Base+0x570>
  4192fe:	call   403220 <__assert_fail@plt>
  419303:	mov    eax,0xffffffff
  419308:	jmp    4193c4 <flatcc_builder_table_add_union_vector@@Base+0x154>
  41930d:	mov    eax,DWORD PTR [rbp-0x24]
  419310:	test   eax,eax
  419312:	je     4193bf <flatcc_builder_table_add_union_vector@@Base+0x14f>
  419318:	mov    eax,DWORD PTR [rbp-0x1c]
  41931b:	lea    edx,[rax-0x1]
  41931e:	mov    rax,QWORD PTR [rbp-0x18]
  419322:	mov    esi,edx
  419324:	mov    rdi,rax
  419327:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  41932c:	mov    QWORD PTR [rbp-0x8],rax
  419330:	cmp    QWORD PTR [rbp-0x8],0x0
  419335:	jne    419364 <flatcc_builder_table_add_union_vector@@Base+0xf4>
  419337:	cmp    QWORD PTR [rbp-0x8],0x0
  41933c:	jne    41935d <flatcc_builder_table_add_union_vector@@Base+0xed>
  41933e:	lea    rcx,[rip+0x9b9b]        # 422ee0 <flatcc_builder_padding_base@@Base+0xb40>
  419345:	mov    edx,0x604
  41934a:	lea    rsi,[rip+0x924f]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419351:	lea    rdi,[rip+0x95a2]        # 4228fa <flatcc_builder_padding_base@@Base+0x55a>
  419358:	call   403220 <__assert_fail@plt>
  41935d:	mov    eax,0xffffffff
  419362:	jmp    4193c4 <flatcc_builder_table_add_union_vector@@Base+0x154>
  419364:	mov    edx,DWORD PTR [rbp-0x24]
  419367:	mov    rax,QWORD PTR [rbp-0x8]
  41936b:	mov    DWORD PTR [rax],edx
  41936d:	mov    edx,DWORD PTR [rbp-0x1c]
  419370:	mov    rax,QWORD PTR [rbp-0x18]
  419374:	mov    esi,edx
  419376:	mov    rdi,rax
  419379:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  41937e:	mov    QWORD PTR [rbp-0x8],rax
  419382:	cmp    QWORD PTR [rbp-0x8],0x0
  419387:	jne    4193b6 <flatcc_builder_table_add_union_vector@@Base+0x146>
  419389:	cmp    QWORD PTR [rbp-0x8],0x0
  41938e:	jne    4193af <flatcc_builder_table_add_union_vector@@Base+0x13f>
  419390:	lea    rcx,[rip+0x9b49]        # 422ee0 <flatcc_builder_padding_base@@Base+0xb40>
  419397:	mov    edx,0x608
  41939c:	lea    rsi,[rip+0x91fd]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4193a3:	lea    rdi,[rip+0x9550]        # 4228fa <flatcc_builder_padding_base@@Base+0x55a>
  4193aa:	call   403220 <__assert_fail@plt>
  4193af:	mov    eax,0xffffffff
  4193b4:	jmp    4193c4 <flatcc_builder_table_add_union_vector@@Base+0x154>
  4193b6:	mov    edx,DWORD PTR [rbp-0x20]
  4193b9:	mov    rax,QWORD PTR [rbp-0x8]
  4193bd:	mov    DWORD PTR [rax],edx
  4193bf:	mov    eax,0x0
  4193c4:	leave  
  4193c5:	ret    

00000000004193c6 <flatcc_builder_create_union_vector@@Base>:
  4193c6:	endbr64 
  4193ca:	push   rbp
  4193cb:	mov    rbp,rsp
  4193ce:	sub    rsp,0x40
  4193d2:	mov    QWORD PTR [rbp-0x28],rdi
  4193d6:	mov    QWORD PTR [rbp-0x30],rsi
  4193da:	mov    QWORD PTR [rbp-0x38],rdx
  4193de:	mov    DWORD PTR [rbp-0x8],0x0
  4193e5:	mov    DWORD PTR [rbp-0x4],0x0
  4193ec:	mov    rax,QWORD PTR [rbp-0x28]
  4193f0:	mov    rdi,rax
  4193f3:	call   4179d4 <flatcc_builder_start_offset_vector@@Base>
  4193f8:	test   eax,eax
  4193fa:	je     419405 <flatcc_builder_create_union_vector@@Base+0x3f>
  4193fc:	mov    rax,QWORD PTR [rbp-0x8]
  419400:	jmp    4194f0 <flatcc_builder_create_union_vector@@Base+0x12a>
  419405:	mov    rdx,QWORD PTR [rbp-0x38]
  419409:	mov    rax,QWORD PTR [rbp-0x28]
  41940d:	mov    rsi,rdx
  419410:	mov    rdi,rax
  419413:	call   4173b3 <flatcc_builder_extend_offset_vector@@Base>
  419418:	test   rax,rax
  41941b:	jne    419426 <flatcc_builder_create_union_vector@@Base+0x60>
  41941d:	mov    rax,QWORD PTR [rbp-0x8]
  419421:	jmp    4194f0 <flatcc_builder_create_union_vector@@Base+0x12a>
  419426:	mov    rax,QWORD PTR [rbp-0x38]
  41942a:	mov    edx,eax
  41942c:	mov    rax,QWORD PTR [rbp-0x28]
  419430:	mov    esi,edx
  419432:	mov    rdi,rax
  419435:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  41943a:	mov    QWORD PTR [rbp-0x18],rax
  41943e:	cmp    QWORD PTR [rbp-0x18],0x0
  419443:	jne    41944e <flatcc_builder_create_union_vector@@Base+0x88>
  419445:	mov    rax,QWORD PTR [rbp-0x8]
  419449:	jmp    4194f0 <flatcc_builder_create_union_vector@@Base+0x12a>
  41944e:	mov    rax,QWORD PTR [rbp-0x28]
  419452:	mov    rdi,rax
  419455:	call   4190e8 <flatcc_builder_offset_vector_edit@@Base>
  41945a:	mov    QWORD PTR [rbp-0x10],rax
  41945e:	mov    QWORD PTR [rbp-0x20],0x0
  419466:	jmp    4194ba <flatcc_builder_create_union_vector@@Base+0xf4>
  419468:	mov    rax,QWORD PTR [rbp-0x20]
  41946c:	lea    rdx,[rax*8+0x0]
  419474:	mov    rax,QWORD PTR [rbp-0x30]
  419478:	add    rax,rdx
  41947b:	mov    rcx,QWORD PTR [rbp-0x18]
  41947f:	mov    rdx,QWORD PTR [rbp-0x20]
  419483:	add    rdx,rcx
  419486:	movzx  eax,BYTE PTR [rax]
  419489:	mov    BYTE PTR [rdx],al
  41948b:	mov    rax,QWORD PTR [rbp-0x20]
  41948f:	lea    rdx,[rax*8+0x0]
  419497:	mov    rax,QWORD PTR [rbp-0x30]
  41949b:	add    rax,rdx
  41949e:	mov    rdx,QWORD PTR [rbp-0x20]
  4194a2:	lea    rcx,[rdx*4+0x0]
  4194aa:	mov    rdx,QWORD PTR [rbp-0x10]
  4194ae:	add    rdx,rcx
  4194b1:	mov    eax,DWORD PTR [rax+0x4]
  4194b4:	mov    DWORD PTR [rdx],eax
  4194b6:	inc    QWORD PTR [rbp-0x20]
  4194ba:	mov    rax,QWORD PTR [rbp-0x20]
  4194be:	cmp    rax,QWORD PTR [rbp-0x38]
  4194c2:	jb     419468 <flatcc_builder_create_union_vector@@Base+0xa2>
  4194c4:	mov    rcx,QWORD PTR [rbp-0x38]
  4194c8:	mov    rdx,QWORD PTR [rbp-0x10]
  4194cc:	mov    rsi,QWORD PTR [rbp-0x18]
  4194d0:	mov    rax,QWORD PTR [rbp-0x28]
  4194d4:	mov    rdi,rax
  4194d7:	call   4194f2 <flatcc_builder_create_union_vector_direct@@Base>
  4194dc:	mov    QWORD PTR [rbp-0x8],rax
  4194e0:	mov    rax,QWORD PTR [rbp-0x28]
  4194e4:	mov    rdi,rax
  4194e7:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4194ec:	mov    rax,QWORD PTR [rbp-0x8]
  4194f0:	leave  
  4194f1:	ret    

00000000004194f2 <flatcc_builder_create_union_vector_direct@@Base>:
  4194f2:	endbr64 
  4194f6:	push   rbp
  4194f7:	mov    rbp,rsp
  4194fa:	sub    rsp,0x30
  4194fe:	mov    QWORD PTR [rbp-0x18],rdi
  419502:	mov    QWORD PTR [rbp-0x20],rsi
  419506:	mov    QWORD PTR [rbp-0x28],rdx
  41950a:	mov    QWORD PTR [rbp-0x30],rcx
  41950e:	mov    DWORD PTR [rbp-0x8],0x0
  419515:	mov    DWORD PTR [rbp-0x4],0x0
  41951c:	mov    rcx,QWORD PTR [rbp-0x20]
  419520:	mov    rdx,QWORD PTR [rbp-0x30]
  419524:	mov    rsi,QWORD PTR [rbp-0x28]
  419528:	mov    rax,QWORD PTR [rbp-0x18]
  41952c:	mov    rdi,rax
  41952f:	call   418c0d <flatcc_builder_vector_edit@@Base+0x16>
  419534:	mov    DWORD PTR [rbp-0x4],eax
  419537:	mov    eax,DWORD PTR [rbp-0x4]
  41953a:	test   eax,eax
  41953c:	jne    419544 <flatcc_builder_create_union_vector_direct@@Base+0x52>
  41953e:	mov    rax,QWORD PTR [rbp-0x8]
  419542:	jmp    41957d <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  419544:	mov    rdx,QWORD PTR [rbp-0x30]
  419548:	mov    rsi,QWORD PTR [rbp-0x20]
  41954c:	mov    rax,QWORD PTR [rbp-0x18]
  419550:	mov    r9d,0xffffffff
  419556:	mov    r8d,0x1
  41955c:	mov    ecx,0x1
  419561:	mov    rdi,rax
  419564:	call   418895 <flatcc_builder_create_vector@@Base>
  419569:	mov    DWORD PTR [rbp-0x8],eax
  41956c:	mov    eax,DWORD PTR [rbp-0x8]
  41956f:	test   eax,eax
  419571:	jne    419579 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  419573:	mov    rax,QWORD PTR [rbp-0x8]
  419577:	jmp    41957d <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  419579:	mov    rax,QWORD PTR [rbp-0x8]
  41957d:	leave  
  41957e:	ret    

000000000041957f <flatcc_builder_start_union_vector@@Base>:
  41957f:	endbr64 
  419583:	push   rbp
  419584:	mov    rbp,rsp
  419587:	sub    rsp,0x10
  41958b:	mov    QWORD PTR [rbp-0x8],rdi
  41958f:	mov    rax,QWORD PTR [rbp-0x8]
  419593:	mov    esi,0x4
  419598:	mov    rdi,rax
  41959b:	call   415eea <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4195a0:	test   eax,eax
  4195a2:	je     4195ab <flatcc_builder_start_union_vector@@Base+0x2c>
  4195a4:	mov    eax,0xffffffff
  4195a9:	jmp    4195ed <flatcc_builder_start_union_vector@@Base+0x6e>
  4195ab:	mov    rax,QWORD PTR [rbp-0x8]
  4195af:	mov    rax,QWORD PTR [rax+0x30]
  4195b3:	mov    DWORD PTR [rax+0x10],0x8
  4195ba:	mov    rax,QWORD PTR [rbp-0x8]
  4195be:	mov    rax,QWORD PTR [rax+0x30]
  4195c2:	mov    DWORD PTR [rax+0x14],0x0
  4195c9:	mov    rax,QWORD PTR [rbp-0x8]
  4195cd:	mov    rax,QWORD PTR [rax+0x30]
  4195d1:	mov    WORD PTR [rax+0xe],0x7
  4195d7:	mov    rax,QWORD PTR [rbp-0x8]
  4195db:	mov    esi,0xfffffffc
  4195e0:	mov    rdi,rax
  4195e3:	call   4150c0 <flatcc_builder_default_alloc@@Base+0x173>
  4195e8:	mov    eax,0x0
  4195ed:	leave  
  4195ee:	ret    

00000000004195ef <flatcc_builder_end_union_vector@@Base>:
  4195ef:	endbr64 
  4195f3:	push   rbp
  4195f4:	mov    rbp,rsp
  4195f7:	sub    rsp,0x40
  4195fb:	mov    QWORD PTR [rbp-0x38],rdi
  4195ff:	mov    DWORD PTR [rbp-0x8],0x0
  419606:	mov    DWORD PTR [rbp-0x4],0x0
  41960d:	mov    rax,QWORD PTR [rbp-0x38]
  419611:	mov    rax,QWORD PTR [rax+0x30]
  419615:	movzx  eax,WORD PTR [rax+0xe]
  419619:	cmp    ax,0x7
  41961d:	je     41963e <flatcc_builder_end_union_vector@@Base+0x4f>
  41961f:	lea    rcx,[rip+0x98fa]        # 422f20 <flatcc_builder_padding_base@@Base+0xb80>
  419626:	mov    edx,0x651
  41962b:	lea    rsi,[rip+0x8f6e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419632:	lea    rdi,[rip+0x92ff]        # 422938 <flatcc_builder_padding_base@@Base+0x598>
  419639:	call   403220 <__assert_fail@plt>
  41963e:	mov    rax,QWORD PTR [rbp-0x38]
  419642:	mov    rdi,rax
  419645:	call   41974e <flatcc_builder_union_vector_count@@Base>
  41964a:	mov    QWORD PTR [rbp-0x28],rax
  41964e:	mov    rax,QWORD PTR [rbp-0x28]
  419652:	mov    edx,eax
  419654:	mov    eax,edx
  419656:	shl    eax,0x2
  419659:	add    edx,eax
  41965b:	mov    rax,QWORD PTR [rbp-0x38]
  41965f:	mov    esi,edx
  419661:	mov    rdi,rax
  419664:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  419669:	mov    QWORD PTR [rbp-0x20],rax
  41966d:	cmp    QWORD PTR [rbp-0x20],0x0
  419672:	jne    41967d <flatcc_builder_end_union_vector@@Base+0x8e>
  419674:	mov    rax,QWORD PTR [rbp-0x8]
  419678:	jmp    419736 <flatcc_builder_end_union_vector@@Base+0x147>
  41967d:	mov    rax,QWORD PTR [rbp-0x28]
  419681:	lea    rdx,[rax*4+0x0]
  419689:	mov    rax,QWORD PTR [rbp-0x20]
  41968d:	add    rax,rdx
  419690:	mov    QWORD PTR [rbp-0x18],rax
  419694:	mov    rax,QWORD PTR [rbp-0x38]
  419698:	mov    rdi,rax
  41969b:	call   419738 <flatcc_builder_union_vector_edit@@Base>
  4196a0:	mov    QWORD PTR [rbp-0x10],rax
  4196a4:	mov    QWORD PTR [rbp-0x30],0x0
  4196ac:	jmp    419700 <flatcc_builder_end_union_vector@@Base+0x111>
  4196ae:	mov    rax,QWORD PTR [rbp-0x30]
  4196b2:	lea    rdx,[rax*8+0x0]
  4196ba:	mov    rax,QWORD PTR [rbp-0x10]
  4196be:	add    rax,rdx
  4196c1:	mov    rcx,QWORD PTR [rbp-0x18]
  4196c5:	mov    rdx,QWORD PTR [rbp-0x30]
  4196c9:	add    rdx,rcx
  4196cc:	movzx  eax,BYTE PTR [rax]
  4196cf:	mov    BYTE PTR [rdx],al
  4196d1:	mov    rax,QWORD PTR [rbp-0x30]
  4196d5:	lea    rdx,[rax*8+0x0]
  4196dd:	mov    rax,QWORD PTR [rbp-0x10]
  4196e1:	add    rax,rdx
  4196e4:	mov    rdx,QWORD PTR [rbp-0x30]
  4196e8:	lea    rcx,[rdx*4+0x0]
  4196f0:	mov    rdx,QWORD PTR [rbp-0x20]
  4196f4:	add    rdx,rcx
  4196f7:	mov    eax,DWORD PTR [rax+0x4]
  4196fa:	mov    DWORD PTR [rdx],eax
  4196fc:	inc    QWORD PTR [rbp-0x30]
  419700:	mov    rax,QWORD PTR [rbp-0x30]
  419704:	cmp    rax,QWORD PTR [rbp-0x28]
  419708:	jb     4196ae <flatcc_builder_end_union_vector@@Base+0xbf>
  41970a:	mov    rcx,QWORD PTR [rbp-0x28]
  41970e:	mov    rdx,QWORD PTR [rbp-0x20]
  419712:	mov    rsi,QWORD PTR [rbp-0x18]
  419716:	mov    rax,QWORD PTR [rbp-0x38]
  41971a:	mov    rdi,rax
  41971d:	call   4194f2 <flatcc_builder_create_union_vector_direct@@Base>
  419722:	mov    QWORD PTR [rbp-0x8],rax
  419726:	mov    rax,QWORD PTR [rbp-0x38]
  41972a:	mov    rdi,rax
  41972d:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419732:	mov    rax,QWORD PTR [rbp-0x8]
  419736:	leave  
  419737:	ret    

0000000000419738 <flatcc_builder_union_vector_edit@@Base>:
  419738:	endbr64 
  41973c:	push   rbp
  41973d:	mov    rbp,rsp
  419740:	mov    QWORD PTR [rbp-0x8],rdi
  419744:	mov    rax,QWORD PTR [rbp-0x8]
  419748:	mov    rax,QWORD PTR [rax+0x18]
  41974c:	pop    rbp
  41974d:	ret    

000000000041974e <flatcc_builder_union_vector_count@@Base>:
  41974e:	endbr64 
  419752:	push   rbp
  419753:	mov    rbp,rsp
  419756:	mov    QWORD PTR [rbp-0x8],rdi
  41975a:	mov    rax,QWORD PTR [rbp-0x8]
  41975e:	mov    rax,QWORD PTR [rax+0x30]
  419762:	mov    eax,DWORD PTR [rax+0x14]
  419765:	mov    eax,eax
  419767:	pop    rbp
  419768:	ret    

0000000000419769 <flatcc_builder_extend_union_vector@@Base>:
  419769:	endbr64 
  41976d:	push   rbp
  41976e:	mov    rbp,rsp
  419771:	sub    rsp,0x10
  419775:	mov    QWORD PTR [rbp-0x8],rdi
  419779:	mov    QWORD PTR [rbp-0x10],rsi
  41977d:	mov    rax,QWORD PTR [rbp-0x10]
  419781:	mov    ecx,eax
  419783:	mov    rax,QWORD PTR [rbp-0x8]
  419787:	mov    edx,0x1fffffff
  41978c:	mov    esi,ecx
  41978e:	mov    rdi,rax
  419791:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  419796:	test   eax,eax
  419798:	je     4197a1 <flatcc_builder_extend_union_vector@@Base+0x38>
  41979a:	mov    eax,0x0
  41979f:	jmp    4197ba <flatcc_builder_extend_union_vector@@Base+0x51>
  4197a1:	mov    rax,QWORD PTR [rbp-0x10]
  4197a5:	lea    edx,[rax*8+0x0]
  4197ac:	mov    rax,QWORD PTR [rbp-0x8]
  4197b0:	mov    esi,edx
  4197b2:	mov    rdi,rax
  4197b5:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  4197ba:	leave  
  4197bb:	ret    

00000000004197bc <flatcc_builder_truncate_union_vector@@Base>:
  4197bc:	endbr64 
  4197c0:	push   rbp
  4197c1:	mov    rbp,rsp
  4197c4:	sub    rsp,0x10
  4197c8:	mov    QWORD PTR [rbp-0x8],rdi
  4197cc:	mov    QWORD PTR [rbp-0x10],rsi
  4197d0:	mov    rax,QWORD PTR [rbp-0x8]
  4197d4:	mov    rax,QWORD PTR [rax+0x30]
  4197d8:	movzx  eax,WORD PTR [rax+0xe]
  4197dc:	cmp    ax,0x7
  4197e0:	je     419801 <flatcc_builder_truncate_union_vector@@Base+0x45>
  4197e2:	lea    rcx,[rip+0x9757]        # 422f40 <flatcc_builder_padding_base@@Base+0xba0>
  4197e9:	mov    edx,0x681
  4197ee:	lea    rsi,[rip+0x8dab]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4197f5:	lea    rdi,[rip+0x913c]        # 422938 <flatcc_builder_padding_base@@Base+0x598>
  4197fc:	call   403220 <__assert_fail@plt>
  419801:	mov    rax,QWORD PTR [rbp-0x8]
  419805:	mov    rax,QWORD PTR [rax+0x30]
  419809:	mov    eax,DWORD PTR [rax+0x14]
  41980c:	mov    rdx,QWORD PTR [rbp-0x10]
  419810:	cmp    eax,edx
  419812:	jae    41984d <flatcc_builder_truncate_union_vector@@Base+0x91>
  419814:	mov    rax,QWORD PTR [rbp-0x8]
  419818:	mov    rax,QWORD PTR [rax+0x30]
  41981c:	mov    eax,DWORD PTR [rax+0x14]
  41981f:	mov    rdx,QWORD PTR [rbp-0x10]
  419823:	cmp    eax,edx
  419825:	jae    419846 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  419827:	lea    rcx,[rip+0x9712]        # 422f40 <flatcc_builder_padding_base@@Base+0xba0>
  41982e:	mov    edx,0x682
  419833:	lea    rsi,[rip+0x8d66]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41983a:	lea    rdi,[rip+0x8fa7]        # 4227e8 <flatcc_builder_padding_base@@Base+0x448>
  419841:	call   403220 <__assert_fail@plt>
  419846:	mov    eax,0xffffffff
  41984b:	jmp    419890 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  41984d:	mov    rax,QWORD PTR [rbp-0x8]
  419851:	mov    rax,QWORD PTR [rax+0x30]
  419855:	mov    edx,DWORD PTR [rax+0x14]
  419858:	mov    rax,QWORD PTR [rbp-0x10]
  41985c:	mov    ecx,eax
  41985e:	mov    rax,QWORD PTR [rbp-0x8]
  419862:	mov    rax,QWORD PTR [rax+0x30]
  419866:	sub    edx,ecx
  419868:	mov    DWORD PTR [rax+0x14],edx
  41986b:	mov    rax,QWORD PTR [rbp-0x8]
  41986f:	mov    rax,QWORD PTR [rax+0x30]
  419873:	mov    eax,DWORD PTR [rax+0x10]
  419876:	mov    rdx,QWORD PTR [rbp-0x10]
  41987a:	imul   edx,eax
  41987d:	mov    rax,QWORD PTR [rbp-0x8]
  419881:	mov    esi,edx
  419883:	mov    rdi,rax
  419886:	call   415233 <flatcc_builder_default_alloc@@Base+0x2e6>
  41988b:	mov    eax,0x0
  419890:	leave  
  419891:	ret    

0000000000419892 <flatcc_builder_union_vector_push@@Base>:
  419892:	endbr64 
  419896:	push   rbp
  419897:	mov    rbp,rsp
  41989a:	sub    rsp,0x20
  41989e:	mov    QWORD PTR [rbp-0x18],rdi
  4198a2:	mov    QWORD PTR [rbp-0x20],rsi
  4198a6:	mov    rax,QWORD PTR [rbp-0x18]
  4198aa:	mov    rax,QWORD PTR [rax+0x30]
  4198ae:	movzx  eax,WORD PTR [rax+0xe]
  4198b2:	cmp    ax,0x7
  4198b6:	je     4198d7 <flatcc_builder_union_vector_push@@Base+0x45>
  4198b8:	lea    rcx,[rip+0x96c1]        # 422f80 <flatcc_builder_padding_base@@Base+0xbe0>
  4198bf:	mov    edx,0x68d
  4198c4:	lea    rsi,[rip+0x8cd5]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  4198cb:	lea    rdi,[rip+0x9066]        # 422938 <flatcc_builder_padding_base@@Base+0x598>
  4198d2:	call   403220 <__assert_fail@plt>
  4198d7:	mov    rax,QWORD PTR [rbp-0x18]
  4198db:	mov    rax,QWORD PTR [rax+0x30]
  4198df:	mov    eax,DWORD PTR [rax+0x14]
  4198e2:	cmp    eax,0x1fffffff
  4198e7:	jne    4198f0 <flatcc_builder_union_vector_push@@Base+0x5e>
  4198e9:	mov    eax,0x0
  4198ee:	jmp    41993a <flatcc_builder_union_vector_push@@Base+0xa8>
  4198f0:	mov    rax,QWORD PTR [rbp-0x18]
  4198f4:	mov    rax,QWORD PTR [rax+0x30]
  4198f8:	mov    edx,DWORD PTR [rax+0x14]
  4198fb:	mov    rax,QWORD PTR [rbp-0x18]
  4198ff:	mov    rax,QWORD PTR [rax+0x30]
  419903:	inc    edx
  419905:	mov    DWORD PTR [rax+0x14],edx
  419908:	mov    rax,QWORD PTR [rbp-0x18]
  41990c:	mov    esi,0x8
  419911:	mov    rdi,rax
  419914:	call   4151b7 <flatcc_builder_default_alloc@@Base+0x26a>
  419919:	mov    QWORD PTR [rbp-0x8],rax
  41991d:	cmp    QWORD PTR [rbp-0x8],0x0
  419922:	jne    41992b <flatcc_builder_union_vector_push@@Base+0x99>
  419924:	mov    eax,0x0
  419929:	jmp    41993a <flatcc_builder_union_vector_push@@Base+0xa8>
  41992b:	mov    rax,QWORD PTR [rbp-0x8]
  41992f:	mov    rdx,QWORD PTR [rbp-0x20]
  419933:	mov    QWORD PTR [rax],rdx
  419936:	mov    rax,QWORD PTR [rbp-0x8]
  41993a:	leave  
  41993b:	ret    

000000000041993c <flatcc_builder_append_union_vector@@Base>:
  41993c:	endbr64 
  419940:	push   rbp
  419941:	mov    rbp,rsp
  419944:	sub    rsp,0x20
  419948:	mov    QWORD PTR [rbp-0x8],rdi
  41994c:	mov    QWORD PTR [rbp-0x10],rsi
  419950:	mov    QWORD PTR [rbp-0x18],rdx
  419954:	mov    rax,QWORD PTR [rbp-0x8]
  419958:	mov    rax,QWORD PTR [rax+0x30]
  41995c:	movzx  eax,WORD PTR [rax+0xe]
  419960:	cmp    ax,0x7
  419964:	je     419985 <flatcc_builder_append_union_vector@@Base+0x49>
  419966:	lea    rcx,[rip+0x9653]        # 422fc0 <flatcc_builder_padding_base@@Base+0xc20>
  41996d:	mov    edx,0x69c
  419972:	lea    rsi,[rip+0x8c27]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419979:	lea    rdi,[rip+0x8fb8]        # 422938 <flatcc_builder_padding_base@@Base+0x598>
  419980:	call   403220 <__assert_fail@plt>
  419985:	mov    rax,QWORD PTR [rbp-0x18]
  419989:	mov    ecx,eax
  41998b:	mov    rax,QWORD PTR [rbp-0x8]
  41998f:	mov    edx,0x1fffffff
  419994:	mov    esi,ecx
  419996:	mov    rdi,rax
  419999:	call   41715c <flatcc_builder_end_struct@@Base+0x92>
  41999e:	test   eax,eax
  4199a0:	je     4199a9 <flatcc_builder_append_union_vector@@Base+0x6d>
  4199a2:	mov    eax,0x0
  4199a7:	jmp    4199c7 <flatcc_builder_append_union_vector@@Base+0x8b>
  4199a9:	mov    rax,QWORD PTR [rbp-0x18]
  4199ad:	lea    edx,[rax*8+0x0]
  4199b4:	mov    rcx,QWORD PTR [rbp-0x10]
  4199b8:	mov    rax,QWORD PTR [rbp-0x8]
  4199bc:	mov    rsi,rcx
  4199bf:	mov    rdi,rax
  4199c2:	call   41527f <flatcc_builder_default_alloc@@Base+0x332>
  4199c7:	leave  
  4199c8:	ret    

00000000004199c9 <flatcc_builder_create_string@@Base>:
  4199c9:	endbr64 
  4199cd:	push   rbp
  4199ce:	mov    rbp,rsp
  4199d1:	sub    rsp,0xd0
  4199d8:	mov    QWORD PTR [rbp-0xb8],rdi
  4199df:	mov    QWORD PTR [rbp-0xc0],rsi
  4199e6:	mov    QWORD PTR [rbp-0xc8],rdx
  4199ed:	mov    rax,QWORD PTR fs:0x28
  4199f6:	mov    QWORD PTR [rbp-0x8],rax
  4199fa:	xor    eax,eax
  4199fc:	mov    eax,0xffffffff
  419a01:	cmp    QWORD PTR [rbp-0xc8],rax
  419a08:	jbe    419a14 <flatcc_builder_create_string@@Base+0x4b>
  419a0a:	mov    eax,0x0
  419a0f:	jmp    419bb7 <flatcc_builder_create_string@@Base+0x1ee>
  419a14:	mov    rax,QWORD PTR [rbp-0xc8]
  419a1b:	mov    edi,eax
  419a1d:	call   414e8d <main@@Base+0x120>
  419a22:	mov    DWORD PTR [rbp-0xa8],eax
  419a28:	mov    rax,QWORD PTR [rbp-0xc8]
  419a2f:	lea    ecx,[rax+0x1]
  419a32:	mov    rax,QWORD PTR [rbp-0xb8]
  419a39:	mov    edx,0x4
  419a3e:	mov    esi,ecx
  419a40:	mov    rdi,rax
  419a43:	call   41618c <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  419a48:	inc    eax
  419a4a:	mov    DWORD PTR [rbp-0xa4],eax
  419a50:	mov    QWORD PTR [rbp-0xa0],0x0
  419a5b:	mov    DWORD PTR [rbp-0x98],0x0
  419a65:	mov    rax,QWORD PTR [rbp-0xa0]
  419a6c:	add    rax,0x4
  419a70:	mov    QWORD PTR [rbp-0xa0],rax
  419a77:	mov    eax,DWORD PTR [rbp-0x98]
  419a7d:	cdqe   
  419a7f:	shl    rax,0x4
  419a83:	add    rax,rbp
  419a86:	lea    rdx,[rax-0x90]
  419a8d:	lea    rax,[rbp-0xa8]
  419a94:	mov    QWORD PTR [rdx],rax
  419a97:	mov    eax,DWORD PTR [rbp-0x98]
  419a9d:	cdqe   
  419a9f:	shl    rax,0x4
  419aa3:	add    rax,rbp
  419aa6:	sub    rax,0x88
  419aac:	mov    QWORD PTR [rax],0x4
  419ab3:	mov    eax,DWORD PTR [rbp-0x98]
  419ab9:	inc    eax
  419abb:	mov    DWORD PTR [rbp-0x98],eax
  419ac1:	cmp    QWORD PTR [rbp-0xc8],0x0
  419ac9:	je     419b31 <flatcc_builder_create_string@@Base+0x168>
  419acb:	mov    rdx,QWORD PTR [rbp-0xa0]
  419ad2:	mov    rax,QWORD PTR [rbp-0xc8]
  419ad9:	add    rax,rdx
  419adc:	mov    QWORD PTR [rbp-0xa0],rax
  419ae3:	mov    eax,DWORD PTR [rbp-0x98]
  419ae9:	cdqe   
  419aeb:	shl    rax,0x4
  419aef:	add    rax,rbp
  419af2:	lea    rdx,[rax-0x90]
  419af9:	mov    rax,QWORD PTR [rbp-0xc0]
  419b00:	mov    QWORD PTR [rdx],rax
  419b03:	mov    eax,DWORD PTR [rbp-0x98]
  419b09:	cdqe   
  419b0b:	shl    rax,0x4
  419b0f:	add    rax,rbp
  419b12:	lea    rdx,[rax-0x88]
  419b19:	mov    rax,QWORD PTR [rbp-0xc8]
  419b20:	mov    QWORD PTR [rdx],rax
  419b23:	mov    eax,DWORD PTR [rbp-0x98]
  419b29:	inc    eax
  419b2b:	mov    DWORD PTR [rbp-0x98],eax
  419b31:	cmp    DWORD PTR [rbp-0xa4],0x0
  419b38:	je     419b9e <flatcc_builder_create_string@@Base+0x1d5>
  419b3a:	mov    rdx,QWORD PTR [rbp-0xa0]
  419b41:	mov    eax,DWORD PTR [rbp-0xa4]
  419b47:	add    rax,rdx
  419b4a:	mov    QWORD PTR [rbp-0xa0],rax
  419b51:	mov    eax,DWORD PTR [rbp-0x98]
  419b57:	cdqe   
  419b59:	shl    rax,0x4
  419b5d:	add    rax,rbp
  419b60:	sub    rax,0x90
  419b66:	mov    rdx,0x4223a0
  419b6d:	mov    QWORD PTR [rax],rdx
  419b70:	mov    edx,DWORD PTR [rbp-0x98]
  419b76:	mov    eax,DWORD PTR [rbp-0xa4]
  419b7c:	movsxd rdx,edx
  419b7f:	shl    rdx,0x4
  419b83:	add    rdx,rbp
  419b86:	sub    rdx,0x88
  419b8d:	mov    QWORD PTR [rdx],rax
  419b90:	mov    eax,DWORD PTR [rbp-0x98]
  419b96:	inc    eax
  419b98:	mov    DWORD PTR [rbp-0x98],eax
  419b9e:	lea    rdx,[rbp-0xa0]
  419ba5:	mov    rax,QWORD PTR [rbp-0xb8]
  419bac:	mov    rsi,rdx
  419baf:	mov    rdi,rax
  419bb2:	call   4161d6 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  419bb7:	mov    rcx,QWORD PTR [rbp-0x8]
  419bbb:	xor    rcx,QWORD PTR fs:0x28
  419bc4:	je     419bcb <flatcc_builder_create_string@@Base+0x202>
  419bc6:	call   403200 <__stack_chk_fail@plt>
  419bcb:	leave  
  419bcc:	ret    

0000000000419bcd <flatcc_builder_create_string_str@@Base>:
  419bcd:	endbr64 
  419bd1:	push   rbp
  419bd2:	mov    rbp,rsp
  419bd5:	sub    rsp,0x10
  419bd9:	mov    QWORD PTR [rbp-0x8],rdi
  419bdd:	mov    QWORD PTR [rbp-0x10],rsi
  419be1:	mov    rax,QWORD PTR [rbp-0x10]
  419be5:	mov    rdi,rax
  419be8:	call   4031f0 <strlen@plt>
  419bed:	mov    rdx,rax
  419bf0:	mov    rcx,QWORD PTR [rbp-0x10]
  419bf4:	mov    rax,QWORD PTR [rbp-0x8]
  419bf8:	mov    rsi,rcx
  419bfb:	mov    rdi,rax
  419bfe:	call   4199c9 <flatcc_builder_create_string@@Base>
  419c03:	leave  
  419c04:	ret    

0000000000419c05 <flatcc_builder_create_string_strn@@Base>:
  419c05:	endbr64 
  419c09:	push   rbp
  419c0a:	mov    rbp,rsp
  419c0d:	sub    rsp,0x20
  419c11:	mov    QWORD PTR [rbp-0x8],rdi
  419c15:	mov    QWORD PTR [rbp-0x10],rsi
  419c19:	mov    QWORD PTR [rbp-0x18],rdx
  419c1d:	mov    rdx,QWORD PTR [rbp-0x18]
  419c21:	mov    rax,QWORD PTR [rbp-0x10]
  419c25:	mov    rsi,rdx
  419c28:	mov    rdi,rax
  419c2b:	call   414f0d <main@@Base+0x1a0>
  419c30:	mov    rdx,rax
  419c33:	mov    rcx,QWORD PTR [rbp-0x10]
  419c37:	mov    rax,QWORD PTR [rbp-0x8]
  419c3b:	mov    rsi,rcx
  419c3e:	mov    rdi,rax
  419c41:	call   4199c9 <flatcc_builder_create_string@@Base>
  419c46:	leave  
  419c47:	ret    

0000000000419c48 <flatcc_builder_end_string@@Base>:
  419c48:	endbr64 
  419c4c:	push   rbp
  419c4d:	mov    rbp,rsp
  419c50:	sub    rsp,0x20
  419c54:	mov    QWORD PTR [rbp-0x18],rdi
  419c58:	mov    rax,QWORD PTR [rbp-0x18]
  419c5c:	mov    rax,QWORD PTR [rax+0x30]
  419c60:	movzx  eax,WORD PTR [rax+0xe]
  419c64:	cmp    ax,0x6
  419c68:	je     419c89 <flatcc_builder_end_string@@Base+0x41>
  419c6a:	lea    rcx,[rip+0x937f]        # 422ff0 <flatcc_builder_padding_base@@Base+0xc50>
  419c71:	mov    edx,0x6c4
  419c76:	lea    rsi,[rip+0x8923]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419c7d:	lea    rdi,[rip+0x8b0c]        # 422790 <flatcc_builder_padding_base@@Base+0x3f0>
  419c84:	call   403220 <__assert_fail@plt>
  419c89:	mov    rax,QWORD PTR [rbp-0x18]
  419c8d:	mov    rax,QWORD PTR [rax+0x30]
  419c91:	mov    edx,DWORD PTR [rax+0x14]
  419c94:	mov    rax,QWORD PTR [rbp-0x18]
  419c98:	mov    eax,DWORD PTR [rax+0x20]
  419c9b:	cmp    edx,eax
  419c9d:	je     419cbe <flatcc_builder_end_string@@Base+0x76>
  419c9f:	lea    rcx,[rip+0x934a]        # 422ff0 <flatcc_builder_padding_base@@Base+0xc50>
  419ca6:	mov    edx,0x6c5
  419cab:	lea    rsi,[rip+0x88ee]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419cb2:	lea    rdi,[rip+0x8cb7]        # 422970 <flatcc_builder_padding_base@@Base+0x5d0>
  419cb9:	call   403220 <__assert_fail@plt>
  419cbe:	mov    rax,QWORD PTR [rbp-0x18]
  419cc2:	mov    eax,DWORD PTR [rax+0x20]
  419cc5:	mov    edx,eax
  419cc7:	mov    rax,QWORD PTR [rbp-0x18]
  419ccb:	mov    rcx,QWORD PTR [rax+0x18]
  419ccf:	mov    rax,QWORD PTR [rbp-0x18]
  419cd3:	mov    rsi,rcx
  419cd6:	mov    rdi,rax
  419cd9:	call   4199c9 <flatcc_builder_create_string@@Base>
  419cde:	mov    DWORD PTR [rbp-0x4],eax
  419ce1:	cmp    DWORD PTR [rbp-0x4],0x0
  419ce5:	jne    419cee <flatcc_builder_end_string@@Base+0xa6>
  419ce7:	mov    eax,0x0
  419cec:	jmp    419cfd <flatcc_builder_end_string@@Base+0xb5>
  419cee:	mov    rax,QWORD PTR [rbp-0x18]
  419cf2:	mov    rdi,rax
  419cf5:	call   4160c5 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  419cfa:	mov    eax,DWORD PTR [rbp-0x4]
  419cfd:	leave  
  419cfe:	ret    

0000000000419cff <flatcc_builder_string_edit@@Base>:
  419cff:	endbr64 
  419d03:	push   rbp
  419d04:	mov    rbp,rsp
  419d07:	mov    QWORD PTR [rbp-0x8],rdi
  419d0b:	mov    rax,QWORD PTR [rbp-0x8]
  419d0f:	mov    rax,QWORD PTR [rax+0x18]
  419d13:	pop    rbp
  419d14:	ret    

0000000000419d15 <flatcc_builder_string_len@@Base>:
  419d15:	endbr64 
  419d19:	push   rbp
  419d1a:	mov    rbp,rsp
  419d1d:	mov    QWORD PTR [rbp-0x8],rdi
  419d21:	mov    rax,QWORD PTR [rbp-0x8]
  419d25:	mov    rax,QWORD PTR [rax+0x30]
  419d29:	mov    eax,DWORD PTR [rax+0x14]
  419d2c:	mov    eax,eax
  419d2e:	pop    rbp
  419d2f:	ret    

0000000000419d30 <flatcc_builder_table_add@@Base>:
  419d30:	endbr64 
  419d34:	push   rbp
  419d35:	mov    rbp,rsp
  419d38:	sub    rsp,0x20
  419d3c:	mov    QWORD PTR [rbp-0x8],rdi
  419d40:	mov    DWORD PTR [rbp-0xc],esi
  419d43:	mov    QWORD PTR [rbp-0x18],rdx
  419d47:	mov    eax,ecx
  419d49:	mov    WORD PTR [rbp-0x10],ax
  419d4d:	mov    rax,QWORD PTR [rbp-0x8]
  419d51:	mov    rax,QWORD PTR [rax+0x30]
  419d55:	movzx  eax,WORD PTR [rax+0xe]
  419d59:	cmp    ax,0x3
  419d5d:	je     419d7e <flatcc_builder_table_add@@Base+0x4e>
  419d5f:	lea    rcx,[rip+0x92aa]        # 423010 <flatcc_builder_padding_base@@Base+0xc70>
  419d66:	mov    edx,0x6ed
  419d6b:	lea    rsi,[rip+0x882e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419d72:	lea    rdi,[rip+0x8aff]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  419d79:	call   403220 <__assert_fail@plt>
  419d7e:	cmp    DWORD PTR [rbp-0xc],0x0
  419d82:	js     419d8d <flatcc_builder_table_add@@Base+0x5d>
  419d84:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  419d8b:	jle    419dac <flatcc_builder_table_add@@Base+0x7c>
  419d8d:	lea    rcx,[rip+0x927c]        # 423010 <flatcc_builder_padding_base@@Base+0xc70>
  419d94:	mov    edx,0x6ee
  419d99:	lea    rsi,[rip+0x8800]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419da0:	lea    rdi,[rip+0x8bf1]        # 422998 <flatcc_builder_padding_base@@Base+0x5f8>
  419da7:	call   403220 <__assert_fail@plt>
  419dac:	mov    rax,QWORD PTR [rbp-0x8]
  419db0:	movzx  eax,WORD PTR [rax+0xea]
  419db7:	cmp    WORD PTR [rbp-0x10],ax
  419dbb:	jbe    419dcc <flatcc_builder_table_add@@Base+0x9c>
  419dbd:	mov    rdx,QWORD PTR [rbp-0x8]
  419dc1:	movzx  eax,WORD PTR [rbp-0x10]
  419dc5:	mov    WORD PTR [rdx+0xea],ax
  419dcc:	mov    rax,QWORD PTR [rbp-0x8]
  419dd0:	mov    rax,QWORD PTR [rax+0x8]
  419dd4:	mov    edx,DWORD PTR [rbp-0xc]
  419dd7:	movsxd rdx,edx
  419dda:	add    rdx,rdx
  419ddd:	add    rax,rdx
  419de0:	movzx  eax,WORD PTR [rax]
  419de3:	test   ax,ax
  419de6:	je     419e07 <flatcc_builder_table_add@@Base+0xd7>
  419de8:	lea    rcx,[rip+0x9221]        # 423010 <flatcc_builder_padding_base@@Base+0xc70>
  419def:	mov    edx,0x6f8
  419df4:	lea    rsi,[rip+0x87a5]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419dfb:	lea    rdi,[rip+0x87fe]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  419e02:	call   403220 <__assert_fail@plt>
  419e07:	mov    rax,QWORD PTR [rbp-0x8]
  419e0b:	mov    edx,DWORD PTR [rax+0x14]
  419e0e:	mov    eax,DWORD PTR [rbp-0xc]
  419e11:	xor    eax,edx
  419e13:	imul   eax,eax,0x9e3779b1
  419e19:	mov    rdx,QWORD PTR [rbp-0x18]
  419e1d:	xor    eax,edx
  419e1f:	imul   edx,eax,0x9e3779b1
  419e25:	mov    rax,QWORD PTR [rbp-0x8]
  419e29:	mov    DWORD PTR [rax+0x14],edx
  419e2c:	mov    eax,DWORD PTR [rbp-0xc]
  419e2f:	movzx  ecx,ax
  419e32:	movzx  edx,WORD PTR [rbp-0x10]
  419e36:	mov    rax,QWORD PTR [rbp-0x18]
  419e3a:	mov    esi,eax
  419e3c:	mov    rax,QWORD PTR [rbp-0x8]
  419e40:	mov    rdi,rax
  419e43:	call   4152d1 <flatcc_builder_default_alloc@@Base+0x384>
  419e48:	leave  
  419e49:	ret    

0000000000419e4a <flatcc_builder_table_edit@@Base>:
  419e4a:	endbr64 
  419e4e:	push   rbp
  419e4f:	mov    rbp,rsp
  419e52:	sub    rsp,0x10
  419e56:	mov    QWORD PTR [rbp-0x8],rdi
  419e5a:	mov    QWORD PTR [rbp-0x10],rsi
  419e5e:	mov    rax,QWORD PTR [rbp-0x8]
  419e62:	mov    rax,QWORD PTR [rax+0x30]
  419e66:	movzx  eax,WORD PTR [rax+0xe]
  419e6a:	cmp    ax,0x3
  419e6e:	je     419e8f <flatcc_builder_table_edit@@Base+0x45>
  419e70:	lea    rcx,[rip+0x91b9]        # 423030 <flatcc_builder_padding_base@@Base+0xc90>
  419e77:	mov    edx,0x702
  419e7c:	lea    rsi,[rip+0x871d]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419e83:	lea    rdi,[rip+0x89ee]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  419e8a:	call   403220 <__assert_fail@plt>
  419e8f:	mov    rax,QWORD PTR [rbp-0x8]
  419e93:	mov    rdx,QWORD PTR [rax+0x18]
  419e97:	mov    rax,QWORD PTR [rbp-0x8]
  419e9b:	mov    eax,DWORD PTR [rax+0x20]
  419e9e:	mov    eax,eax
  419ea0:	sub    rax,QWORD PTR [rbp-0x10]
  419ea4:	add    rax,rdx
  419ea7:	leave  
  419ea8:	ret    

0000000000419ea9 <flatcc_builder_table_add_copy@@Base>:
  419ea9:	endbr64 
  419ead:	push   rbp
  419eae:	mov    rbp,rsp
  419eb1:	sub    rsp,0x30
  419eb5:	mov    QWORD PTR [rbp-0x18],rdi
  419eb9:	mov    DWORD PTR [rbp-0x1c],esi
  419ebc:	mov    QWORD PTR [rbp-0x28],rdx
  419ec0:	mov    QWORD PTR [rbp-0x30],rcx
  419ec4:	mov    eax,r8d
  419ec7:	mov    WORD PTR [rbp-0x20],ax
  419ecb:	movzx  ecx,WORD PTR [rbp-0x20]
  419ecf:	mov    rdx,QWORD PTR [rbp-0x30]
  419ed3:	mov    esi,DWORD PTR [rbp-0x1c]
  419ed6:	mov    rax,QWORD PTR [rbp-0x18]
  419eda:	mov    rdi,rax
  419edd:	call   419d30 <flatcc_builder_table_add@@Base>
  419ee2:	mov    QWORD PTR [rbp-0x8],rax
  419ee6:	cmp    QWORD PTR [rbp-0x8],0x0
  419eeb:	je     419f04 <flatcc_builder_table_add_copy@@Base+0x5b>
  419eed:	mov    rdx,QWORD PTR [rbp-0x30]
  419ef1:	mov    rcx,QWORD PTR [rbp-0x28]
  419ef5:	mov    rax,QWORD PTR [rbp-0x8]
  419ef9:	mov    rsi,rcx
  419efc:	mov    rdi,rax
  419eff:	call   403290 <memcpy@plt>
  419f04:	mov    rax,QWORD PTR [rbp-0x8]
  419f08:	leave  
  419f09:	ret    

0000000000419f0a <flatcc_builder_table_add_offset@@Base>:
  419f0a:	endbr64 
  419f0e:	push   rbp
  419f0f:	mov    rbp,rsp
  419f12:	sub    rsp,0x10
  419f16:	mov    QWORD PTR [rbp-0x8],rdi
  419f1a:	mov    DWORD PTR [rbp-0xc],esi
  419f1d:	mov    rax,QWORD PTR [rbp-0x8]
  419f21:	mov    rax,QWORD PTR [rax+0x30]
  419f25:	movzx  eax,WORD PTR [rax+0xe]
  419f29:	cmp    ax,0x3
  419f2d:	je     419f4e <flatcc_builder_table_add_offset@@Base+0x44>
  419f2f:	lea    rcx,[rip+0x912a]        # 423060 <flatcc_builder_padding_base@@Base+0xcc0>
  419f36:	mov    edx,0x713
  419f3b:	lea    rsi,[rip+0x865e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419f42:	lea    rdi,[rip+0x892f]        # 422878 <flatcc_builder_padding_base@@Base+0x4d8>
  419f49:	call   403220 <__assert_fail@plt>
  419f4e:	cmp    DWORD PTR [rbp-0xc],0x0
  419f52:	js     419f5d <flatcc_builder_table_add_offset@@Base+0x53>
  419f54:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  419f5b:	jle    419f7c <flatcc_builder_table_add_offset@@Base+0x72>
  419f5d:	lea    rcx,[rip+0x90fc]        # 423060 <flatcc_builder_padding_base@@Base+0xcc0>
  419f64:	mov    edx,0x714
  419f69:	lea    rsi,[rip+0x8630]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419f70:	lea    rdi,[rip+0x8a21]        # 422998 <flatcc_builder_padding_base@@Base+0x5f8>
  419f77:	call   403220 <__assert_fail@plt>
  419f7c:	mov    rax,QWORD PTR [rbp-0x8]
  419f80:	mov    rax,QWORD PTR [rax+0x8]
  419f84:	mov    edx,DWORD PTR [rbp-0xc]
  419f87:	movsxd rdx,edx
  419f8a:	add    rdx,rdx
  419f8d:	add    rax,rdx
  419f90:	movzx  eax,WORD PTR [rax]
  419f93:	test   ax,ax
  419f96:	je     419fb7 <flatcc_builder_table_add_offset@@Base+0xad>
  419f98:	lea    rcx,[rip+0x90c1]        # 423060 <flatcc_builder_padding_base@@Base+0xcc0>
  419f9f:	mov    edx,0x71b
  419fa4:	lea    rsi,[rip+0x85f5]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  419fab:	lea    rdi,[rip+0x864e]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  419fb2:	call   403220 <__assert_fail@plt>
  419fb7:	mov    rax,QWORD PTR [rbp-0x8]
  419fbb:	mov    edx,DWORD PTR [rax+0x14]
  419fbe:	mov    eax,DWORD PTR [rbp-0xc]
  419fc1:	xor    eax,edx
  419fc3:	imul   eax,eax,0x9e3779b1
  419fc9:	xor    eax,0x4
  419fcc:	imul   edx,eax,0x9e3779b1
  419fd2:	mov    rax,QWORD PTR [rbp-0x8]
  419fd6:	mov    DWORD PTR [rax+0x14],edx
  419fd9:	mov    eax,DWORD PTR [rbp-0xc]
  419fdc:	movzx  edx,ax
  419fdf:	mov    rax,QWORD PTR [rbp-0x8]
  419fe3:	mov    esi,edx
  419fe5:	mov    rdi,rax
  419fe8:	call   415399 <flatcc_builder_default_alloc@@Base+0x44c>
  419fed:	leave  
  419fee:	ret    

0000000000419fef <flatcc_builder_push_buffer_alignment@@Base>:
  419fef:	endbr64 
  419ff3:	push   rbp
  419ff4:	mov    rbp,rsp
  419ff7:	mov    QWORD PTR [rbp-0x18],rdi
  419ffb:	mov    rax,QWORD PTR [rbp-0x18]
  419fff:	movzx  eax,WORD PTR [rax+0xe8]
  41a006:	mov    WORD PTR [rbp-0x2],ax
  41a00a:	mov    rax,QWORD PTR [rbp-0x18]
  41a00e:	mov    WORD PTR [rax+0xe8],0x4
  41a017:	movzx  eax,WORD PTR [rbp-0x2]
  41a01b:	pop    rbp
  41a01c:	ret    

000000000041a01d <flatcc_builder_pop_buffer_alignment@@Base>:
  41a01d:	endbr64 
  41a021:	push   rbp
  41a022:	mov    rbp,rsp
  41a025:	sub    rsp,0x10
  41a029:	mov    QWORD PTR [rbp-0x8],rdi
  41a02d:	mov    eax,esi
  41a02f:	mov    WORD PTR [rbp-0xc],ax
  41a033:	movzx  edx,WORD PTR [rbp-0xc]
  41a037:	mov    rax,QWORD PTR [rbp-0x8]
  41a03b:	mov    esi,edx
  41a03d:	mov    rdi,rax
  41a040:	call   415bb9 <flatcc_builder_clear@@Base+0x99>
  41a045:	nop
  41a046:	leave  
  41a047:	ret    

000000000041a048 <flatcc_builder_get_buffer_alignment@@Base>:
  41a048:	endbr64 
  41a04c:	push   rbp
  41a04d:	mov    rbp,rsp
  41a050:	mov    QWORD PTR [rbp-0x8],rdi
  41a054:	mov    rax,QWORD PTR [rbp-0x8]
  41a058:	movzx  eax,WORD PTR [rax+0xe8]
  41a05f:	pop    rbp
  41a060:	ret    

000000000041a061 <flatcc_builder_set_vtable_clustering@@Base>:
  41a061:	endbr64 
  41a065:	push   rbp
  41a066:	mov    rbp,rsp
  41a069:	mov    QWORD PTR [rbp-0x8],rdi
  41a06d:	mov    DWORD PTR [rbp-0xc],esi
  41a070:	cmp    DWORD PTR [rbp-0xc],0x0
  41a074:	sete   al
  41a077:	movzx  edx,al
  41a07a:	mov    rax,QWORD PTR [rbp-0x8]
  41a07e:	mov    DWORD PTR [rax+0x124],edx
  41a084:	nop
  41a085:	pop    rbp
  41a086:	ret    

000000000041a087 <flatcc_builder_set_block_align@@Base>:
  41a087:	endbr64 
  41a08b:	push   rbp
  41a08c:	mov    rbp,rsp
  41a08f:	mov    QWORD PTR [rbp-0x8],rdi
  41a093:	mov    eax,esi
  41a095:	mov    WORD PTR [rbp-0xc],ax
  41a099:	mov    rdx,QWORD PTR [rbp-0x8]
  41a09d:	movzx  eax,WORD PTR [rbp-0xc]
  41a0a1:	mov    WORD PTR [rdx+0xec],ax
  41a0a8:	nop
  41a0a9:	pop    rbp
  41a0aa:	ret    

000000000041a0ab <flatcc_builder_get_level@@Base>:
  41a0ab:	endbr64 
  41a0af:	push   rbp
  41a0b0:	mov    rbp,rsp
  41a0b3:	mov    QWORD PTR [rbp-0x8],rdi
  41a0b7:	mov    rax,QWORD PTR [rbp-0x8]
  41a0bb:	mov    eax,DWORD PTR [rax+0x104]
  41a0c1:	pop    rbp
  41a0c2:	ret    

000000000041a0c3 <flatcc_builder_set_max_level@@Base>:
  41a0c3:	endbr64 
  41a0c7:	push   rbp
  41a0c8:	mov    rbp,rsp
  41a0cb:	mov    QWORD PTR [rbp-0x8],rdi
  41a0cf:	mov    DWORD PTR [rbp-0xc],esi
  41a0d2:	mov    rax,QWORD PTR [rbp-0x8]
  41a0d6:	mov    edx,DWORD PTR [rbp-0xc]
  41a0d9:	mov    DWORD PTR [rax+0x120],edx
  41a0df:	mov    rax,QWORD PTR [rbp-0x8]
  41a0e3:	mov    edx,DWORD PTR [rax+0x108]
  41a0e9:	mov    rax,QWORD PTR [rbp-0x8]
  41a0ed:	mov    eax,DWORD PTR [rax+0x120]
  41a0f3:	cmp    edx,eax
  41a0f5:	jge    41a10b <flatcc_builder_set_max_level@@Base+0x48>
  41a0f7:	mov    rax,QWORD PTR [rbp-0x8]
  41a0fb:	mov    edx,DWORD PTR [rax+0x120]
  41a101:	mov    rax,QWORD PTR [rbp-0x8]
  41a105:	mov    DWORD PTR [rax+0x108],edx
  41a10b:	nop
  41a10c:	pop    rbp
  41a10d:	ret    

000000000041a10e <flatcc_builder_get_buffer_size@@Base>:
  41a10e:	endbr64 
  41a112:	push   rbp
  41a113:	mov    rbp,rsp
  41a116:	mov    QWORD PTR [rbp-0x8],rdi
  41a11a:	mov    rax,QWORD PTR [rbp-0x8]
  41a11e:	mov    edx,DWORD PTR [rax+0xf4]
  41a124:	mov    rax,QWORD PTR [rbp-0x8]
  41a128:	mov    eax,DWORD PTR [rax+0xf0]
  41a12e:	sub    edx,eax
  41a130:	mov    eax,edx
  41a132:	cdqe   
  41a134:	pop    rbp
  41a135:	ret    

000000000041a136 <flatcc_builder_get_buffer_start@@Base>:
  41a136:	endbr64 
  41a13a:	push   rbp
  41a13b:	mov    rbp,rsp
  41a13e:	mov    QWORD PTR [rbp-0x8],rdi
  41a142:	mov    rax,QWORD PTR [rbp-0x8]
  41a146:	mov    eax,DWORD PTR [rax+0xf0]
  41a14c:	pop    rbp
  41a14d:	ret    

000000000041a14e <flatcc_builder_get_buffer_end@@Base>:
  41a14e:	endbr64 
  41a152:	push   rbp
  41a153:	mov    rbp,rsp
  41a156:	mov    QWORD PTR [rbp-0x8],rdi
  41a15a:	mov    rax,QWORD PTR [rbp-0x8]
  41a15e:	mov    eax,DWORD PTR [rax+0xf4]
  41a164:	pop    rbp
  41a165:	ret    

000000000041a166 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41a166:	endbr64 
  41a16a:	push   rbp
  41a16b:	mov    rbp,rsp
  41a16e:	mov    QWORD PTR [rbp-0x8],rdi
  41a172:	mov    QWORD PTR [rbp-0x10],rsi
  41a176:	mov    rax,QWORD PTR [rbp-0x8]
  41a17a:	mov    rdx,QWORD PTR [rbp-0x10]
  41a17e:	mov    QWORD PTR [rax+0x118],rdx
  41a185:	nop
  41a186:	pop    rbp
  41a187:	ret    

000000000041a188 <flatcc_builder_set_identifier@@Base>:
  41a188:	endbr64 
  41a18c:	push   rbp
  41a18d:	mov    rbp,rsp
  41a190:	mov    QWORD PTR [rbp-0x8],rdi
  41a194:	mov    QWORD PTR [rbp-0x10],rsi
  41a198:	cmp    QWORD PTR [rbp-0x10],0x0
  41a19d:	je     41a1a5 <flatcc_builder_set_identifier@@Base+0x1d>
  41a19f:	mov    rax,QWORD PTR [rbp-0x10]
  41a1a3:	jmp    41a1ac <flatcc_builder_set_identifier@@Base+0x24>
  41a1a5:	mov    rax,0x4223a0
  41a1ac:	mov    rdx,QWORD PTR [rbp-0x8]
  41a1b0:	add    rdx,0x110
  41a1b7:	mov    eax,DWORD PTR [rax]
  41a1b9:	mov    DWORD PTR [rdx],eax
  41a1bb:	nop
  41a1bc:	pop    rbp
  41a1bd:	ret    

000000000041a1be <flatcc_builder_get_type@@Base>:
  41a1be:	endbr64 
  41a1c2:	push   rbp
  41a1c3:	mov    rbp,rsp
  41a1c6:	mov    QWORD PTR [rbp-0x8],rdi
  41a1ca:	mov    rax,QWORD PTR [rbp-0x8]
  41a1ce:	mov    rax,QWORD PTR [rax+0x30]
  41a1d2:	test   rax,rax
  41a1d5:	je     41a1e8 <flatcc_builder_get_type@@Base+0x2a>
  41a1d7:	mov    rax,QWORD PTR [rbp-0x8]
  41a1db:	mov    rax,QWORD PTR [rax+0x30]
  41a1df:	movzx  eax,WORD PTR [rax+0xe]
  41a1e3:	movzx  eax,ax
  41a1e6:	jmp    41a1ed <flatcc_builder_get_type@@Base+0x2f>
  41a1e8:	mov    eax,0x0
  41a1ed:	pop    rbp
  41a1ee:	ret    

000000000041a1ef <flatcc_builder_get_type_at@@Base>:
  41a1ef:	endbr64 
  41a1f3:	push   rbp
  41a1f4:	mov    rbp,rsp
  41a1f7:	mov    QWORD PTR [rbp-0x8],rdi
  41a1fb:	mov    DWORD PTR [rbp-0xc],esi
  41a1fe:	cmp    DWORD PTR [rbp-0xc],0x0
  41a202:	jle    41a213 <flatcc_builder_get_type_at@@Base+0x24>
  41a204:	mov    rax,QWORD PTR [rbp-0x8]
  41a208:	mov    eax,DWORD PTR [rax+0x104]
  41a20e:	cmp    DWORD PTR [rbp-0xc],eax
  41a211:	jle    41a21a <flatcc_builder_get_type_at@@Base+0x2b>
  41a213:	mov    eax,0x0
  41a218:	jmp    41a24e <flatcc_builder_get_type_at@@Base+0x5f>
  41a21a:	mov    rax,QWORD PTR [rbp-0x8]
  41a21e:	mov    rcx,QWORD PTR [rax+0x30]
  41a222:	mov    rax,QWORD PTR [rbp-0x8]
  41a226:	mov    eax,DWORD PTR [rax+0x104]
  41a22c:	mov    edx,DWORD PTR [rbp-0xc]
  41a22f:	sub    edx,eax
  41a231:	mov    eax,edx
  41a233:	movsxd rdx,eax
  41a236:	mov    rax,rdx
  41a239:	shl    rax,0x3
  41a23d:	add    rax,rdx
  41a240:	shl    rax,0x2
  41a244:	add    rax,rcx
  41a247:	movzx  eax,WORD PTR [rax+0xe]
  41a24b:	movzx  eax,ax
  41a24e:	pop    rbp
  41a24f:	ret    

000000000041a250 <flatcc_builder_get_direct_buffer@@Base>:
  41a250:	endbr64 
  41a254:	push   rbp
  41a255:	mov    rbp,rsp
  41a258:	sub    rsp,0x10
  41a25c:	mov    QWORD PTR [rbp-0x8],rdi
  41a260:	mov    QWORD PTR [rbp-0x10],rsi
  41a264:	mov    rax,QWORD PTR [rbp-0x8]
  41a268:	mov    eax,DWORD PTR [rax+0x128]
  41a26e:	test   eax,eax
  41a270:	je     41a28e <flatcc_builder_get_direct_buffer@@Base+0x3e>
  41a272:	mov    rax,QWORD PTR [rbp-0x8]
  41a276:	lea    rdx,[rax+0x130]
  41a27d:	mov    rax,QWORD PTR [rbp-0x10]
  41a281:	mov    rsi,rax
  41a284:	mov    rdi,rdx
  41a287:	call   414eb4 <main@@Base+0x147>
  41a28c:	jmp    41a2a5 <flatcc_builder_get_direct_buffer@@Base+0x55>
  41a28e:	cmp    QWORD PTR [rbp-0x10],0x0
  41a293:	je     41a2a0 <flatcc_builder_get_direct_buffer@@Base+0x50>
  41a295:	mov    rax,QWORD PTR [rbp-0x10]
  41a299:	mov    QWORD PTR [rax],0x0
  41a2a0:	mov    eax,0x0
  41a2a5:	leave  
  41a2a6:	ret    

000000000041a2a7 <flatcc_builder_copy_buffer@@Base>:
  41a2a7:	endbr64 
  41a2ab:	push   rbp
  41a2ac:	mov    rbp,rsp
  41a2af:	sub    rsp,0x20
  41a2b3:	mov    QWORD PTR [rbp-0x8],rdi
  41a2b7:	mov    QWORD PTR [rbp-0x10],rsi
  41a2bb:	mov    QWORD PTR [rbp-0x18],rdx
  41a2bf:	mov    rax,QWORD PTR [rbp-0x8]
  41a2c3:	mov    eax,DWORD PTR [rax+0x128]
  41a2c9:	test   eax,eax
  41a2cb:	jne    41a2d4 <flatcc_builder_copy_buffer@@Base+0x2d>
  41a2cd:	mov    eax,0x0
  41a2d2:	jmp    41a320 <flatcc_builder_copy_buffer@@Base+0x79>
  41a2d4:	mov    rax,QWORD PTR [rbp-0x8]
  41a2d8:	lea    rcx,[rax+0x130]
  41a2df:	mov    rdx,QWORD PTR [rbp-0x18]
  41a2e3:	mov    rax,QWORD PTR [rbp-0x10]
  41a2e7:	mov    rsi,rax
  41a2ea:	mov    rdi,rcx
  41a2ed:	call   41af5b <flatcc_emitter_copy_buffer@@Base>
  41a2f2:	mov    QWORD PTR [rbp-0x10],rax
  41a2f6:	cmp    QWORD PTR [rbp-0x10],0x0
  41a2fb:	jne    41a31c <flatcc_builder_copy_buffer@@Base+0x75>
  41a2fd:	lea    rcx,[rip+0x8d7c]        # 423080 <flatcc_builder_padding_base@@Base+0xce0>
  41a304:	mov    edx,0x786
  41a309:	lea    rsi,[rip+0x8290]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41a310:	lea    rdi,[rip+0x86c5]        # 4229dc <flatcc_builder_padding_base@@Base+0x63c>
  41a317:	call   403220 <__assert_fail@plt>
  41a31c:	mov    rax,QWORD PTR [rbp-0x10]
  41a320:	leave  
  41a321:	ret    

000000000041a322 <flatcc_builder_finalize_buffer@@Base>:
  41a322:	endbr64 
  41a326:	push   rbp
  41a327:	mov    rbp,rsp
  41a32a:	sub    rsp,0x20
  41a32e:	mov    QWORD PTR [rbp-0x18],rdi
  41a332:	mov    QWORD PTR [rbp-0x20],rsi
  41a336:	mov    rax,QWORD PTR [rbp-0x18]
  41a33a:	mov    rdi,rax
  41a33d:	call   41a10e <flatcc_builder_get_buffer_size@@Base>
  41a342:	mov    QWORD PTR [rbp-0x10],rax
  41a346:	cmp    QWORD PTR [rbp-0x20],0x0
  41a34b:	je     41a358 <flatcc_builder_finalize_buffer@@Base+0x36>
  41a34d:	mov    rax,QWORD PTR [rbp-0x20]
  41a351:	mov    rdx,QWORD PTR [rbp-0x10]
  41a355:	mov    QWORD PTR [rax],rdx
  41a358:	mov    rax,QWORD PTR [rbp-0x10]
  41a35c:	mov    rdi,rax
  41a35f:	call   4032a0 <malloc@plt>
  41a364:	mov    QWORD PTR [rbp-0x8],rax
  41a368:	cmp    QWORD PTR [rbp-0x8],0x0
  41a36d:	jne    41a38e <flatcc_builder_finalize_buffer@@Base+0x6c>
  41a36f:	lea    rcx,[rip+0x8d2a]        # 4230a0 <flatcc_builder_padding_base@@Base+0xd00>
  41a376:	mov    edx,0x798
  41a37b:	lea    rsi,[rip+0x821e]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41a382:	lea    rdi,[rip+0x8277]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  41a389:	call   403220 <__assert_fail@plt>
  41a38e:	mov    rdx,QWORD PTR [rbp-0x10]
  41a392:	mov    rcx,QWORD PTR [rbp-0x8]
  41a396:	mov    rax,QWORD PTR [rbp-0x18]
  41a39a:	mov    rsi,rcx
  41a39d:	mov    rdi,rax
  41a3a0:	call   41a2a7 <flatcc_builder_copy_buffer@@Base>
  41a3a5:	test   rax,rax
  41a3a8:	jne    41a3c9 <flatcc_builder_finalize_buffer@@Base+0xa7>
  41a3aa:	lea    rcx,[rip+0x8cef]        # 4230a0 <flatcc_builder_padding_base@@Base+0xd00>
  41a3b1:	mov    edx,0x79c
  41a3b6:	lea    rsi,[rip+0x81e3]        # 4225a0 <flatcc_builder_padding_base@@Base+0x200>
  41a3bd:	lea    rdi,[rip+0x823c]        # 422600 <flatcc_builder_padding_base@@Base+0x260>
  41a3c4:	call   403220 <__assert_fail@plt>
  41a3c9:	nop
  41a3ca:	endbr64 
  41a3ce:	cmp    QWORD PTR [rbp-0x8],0x0
  41a3d3:	jne    41a3e7 <flatcc_builder_finalize_buffer@@Base+0xc5>
  41a3d5:	cmp    QWORD PTR [rbp-0x20],0x0
  41a3da:	je     41a3e7 <flatcc_builder_finalize_buffer@@Base+0xc5>
  41a3dc:	mov    rax,QWORD PTR [rbp-0x20]
  41a3e0:	mov    QWORD PTR [rax],0x0
  41a3e7:	mov    rax,QWORD PTR [rbp-0x8]
  41a3eb:	leave  
  41a3ec:	ret    

000000000041a3ed <flatcc_builder_finalize_aligned_buffer@@Base>:
  41a3ed:	endbr64 
  41a3f1:	push   rbp
  41a3f2:	mov    rbp,rsp
  41a3f5:	sub    rsp,0x30
  41a3f9:	mov    QWORD PTR [rbp-0x28],rdi
  41a3fd:	mov    QWORD PTR [rbp-0x30],rsi
  41a401:	mov    rax,QWORD PTR [rbp-0x28]
  41a405:	mov    rdi,rax
  41a408:	call   41a10e <flatcc_builder_get_buffer_size@@Base>
  41a40d:	mov    QWORD PTR [rbp-0x10],rax
  41a411:	cmp    QWORD PTR [rbp-0x30],0x0
  41a416:	je     41a423 <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  41a418:	mov    rax,QWORD PTR [rbp-0x30]
  41a41c:	mov    rdx,QWORD PTR [rbp-0x10]
  41a420:	mov    QWORD PTR [rax],rdx
  41a423:	mov    rax,QWORD PTR [rbp-0x28]
  41a427:	mov    rdi,rax
  41a42a:	call   41a048 <flatcc_builder_get_buffer_alignment@@Base>
  41a42f:	movzx  eax,ax
  41a432:	mov    QWORD PTR [rbp-0x8],rax
  41a436:	mov    rdx,QWORD PTR [rbp-0x10]
  41a43a:	mov    rax,QWORD PTR [rbp-0x8]
  41a43e:	add    rax,rdx
  41a441:	lea    rdx,[rax-0x1]
  41a445:	mov    rax,QWORD PTR [rbp-0x8]
  41a449:	neg    rax
  41a44c:	and    rax,rdx
  41a44f:	mov    QWORD PTR [rbp-0x10],rax
  41a453:	mov    rdx,QWORD PTR [rbp-0x10]
  41a457:	mov    rax,QWORD PTR [rbp-0x8]
  41a45b:	mov    rsi,rdx
  41a45e:	mov    rdi,rax
  41a461:	call   414e00 <main@@Base+0x93>
  41a466:	mov    QWORD PTR [rbp-0x18],rax
  41a46a:	cmp    QWORD PTR [rbp-0x18],0x0
  41a46f:	je     41a4a3 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  41a471:	mov    rdx,QWORD PTR [rbp-0x10]
  41a475:	mov    rcx,QWORD PTR [rbp-0x18]
  41a479:	mov    rax,QWORD PTR [rbp-0x28]
  41a47d:	mov    rsi,rcx
  41a480:	mov    rdi,rax
  41a483:	call   41a2a7 <flatcc_builder_copy_buffer@@Base>
  41a488:	test   rax,rax
  41a48b:	jne    41a4a6 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  41a48d:	mov    rax,QWORD PTR [rbp-0x18]
  41a491:	mov    rdi,rax
  41a494:	call   4031a0 <free@plt>
  41a499:	mov    QWORD PTR [rbp-0x18],0x0
  41a4a1:	jmp    41a4a7 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  41a4a3:	nop
  41a4a4:	jmp    41a4a7 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  41a4a6:	nop
  41a4a7:	cmp    QWORD PTR [rbp-0x18],0x0
  41a4ac:	jne    41a4c0 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  41a4ae:	cmp    QWORD PTR [rbp-0x30],0x0
  41a4b3:	je     41a4c0 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  41a4b5:	mov    rax,QWORD PTR [rbp-0x30]
  41a4b9:	mov    QWORD PTR [rax],0x0
  41a4c0:	mov    rax,QWORD PTR [rbp-0x18]
  41a4c4:	leave  
  41a4c5:	ret    

000000000041a4c6 <flatcc_builder_aligned_alloc@@Base>:
  41a4c6:	endbr64 
  41a4ca:	push   rbp
  41a4cb:	mov    rbp,rsp
  41a4ce:	sub    rsp,0x10
  41a4d2:	mov    QWORD PTR [rbp-0x8],rdi
  41a4d6:	mov    QWORD PTR [rbp-0x10],rsi
  41a4da:	mov    rdx,QWORD PTR [rbp-0x10]
  41a4de:	mov    rax,QWORD PTR [rbp-0x8]
  41a4e2:	mov    rsi,rdx
  41a4e5:	mov    rdi,rax
  41a4e8:	call   414e00 <main@@Base+0x93>
  41a4ed:	leave  
  41a4ee:	ret    

000000000041a4ef <flatcc_builder_aligned_free@@Base>:
  41a4ef:	endbr64 
  41a4f3:	push   rbp
  41a4f4:	mov    rbp,rsp
  41a4f7:	sub    rsp,0x10
  41a4fb:	mov    QWORD PTR [rbp-0x8],rdi
  41a4ff:	mov    rax,QWORD PTR [rbp-0x8]
  41a503:	mov    rdi,rax
  41a506:	call   4031a0 <free@plt>
  41a50b:	nop
  41a50c:	leave  
  41a50d:	ret    

000000000041a50e <flatcc_builder_get_emit_context@@Base>:
  41a50e:	endbr64 
  41a512:	push   rbp
  41a513:	mov    rbp,rsp
  41a516:	mov    QWORD PTR [rbp-0x8],rdi
  41a51a:	mov    rax,QWORD PTR [rbp-0x8]
  41a51e:	mov    rax,QWORD PTR [rax+0x38]
  41a522:	pop    rbp
  41a523:	ret    
  41a524:	endbr64 
  41a528:	push   rbp
  41a529:	mov    rbp,rsp
  41a52c:	sub    rsp,0x20
  41a530:	mov    QWORD PTR [rbp-0x18],rdi
  41a534:	mov    QWORD PTR [rbp-0x8],0x0
  41a53c:	mov    rax,QWORD PTR [rbp-0x18]
  41a540:	mov    rax,QWORD PTR [rax]
  41a543:	test   rax,rax
  41a546:	je     41a5a4 <flatcc_builder_get_emit_context@@Base+0x96>
  41a548:	mov    rax,QWORD PTR [rbp-0x18]
  41a54c:	mov    rax,QWORD PTR [rax]
  41a54f:	mov    rdx,QWORD PTR [rax+0xb88]
  41a556:	mov    rax,QWORD PTR [rbp-0x18]
  41a55a:	mov    rax,QWORD PTR [rax+0x8]
  41a55e:	cmp    rdx,rax
  41a561:	je     41a5a4 <flatcc_builder_get_emit_context@@Base+0x96>
  41a563:	mov    rax,QWORD PTR [rbp-0x18]
  41a567:	mov    rax,QWORD PTR [rax]
  41a56a:	mov    edx,DWORD PTR [rax+0xb90]
  41a570:	mov    rax,QWORD PTR [rbp-0x18]
  41a574:	mov    rax,QWORD PTR [rax]
  41a577:	mov    rax,QWORD PTR [rax+0xb88]
  41a57e:	sub    edx,0xb80
  41a584:	mov    DWORD PTR [rax+0xb90],edx
  41a58a:	mov    rax,QWORD PTR [rbp-0x18]
  41a58e:	mov    rax,QWORD PTR [rax]
  41a591:	mov    rdx,QWORD PTR [rax+0xb88]
  41a598:	mov    rax,QWORD PTR [rbp-0x18]
  41a59c:	mov    QWORD PTR [rax],rdx
  41a59f:	jmp    41a6dc <flatcc_builder_get_emit_context@@Base+0x1ce>
  41a5a4:	mov    edi,0xb98
  41a5a9:	call   4032a0 <malloc@plt>
  41a5ae:	mov    QWORD PTR [rbp-0x8],rax
  41a5b2:	cmp    QWORD PTR [rbp-0x8],0x0
  41a5b7:	jne    41a5c3 <flatcc_builder_get_emit_context@@Base+0xb5>
  41a5b9:	mov    eax,0xffffffff
  41a5be:	jmp    41a72a <flatcc_builder_get_emit_context@@Base+0x21c>
  41a5c3:	mov    rax,QWORD PTR [rbp-0x18]
  41a5c7:	mov    rax,QWORD PTR [rax+0x38]
  41a5cb:	lea    rdx,[rax+0xb80]
  41a5d2:	mov    rax,QWORD PTR [rbp-0x18]
  41a5d6:	mov    QWORD PTR [rax+0x38],rdx
  41a5da:	mov    rax,QWORD PTR [rbp-0x18]
  41a5de:	mov    rax,QWORD PTR [rax]
  41a5e1:	test   rax,rax
  41a5e4:	je     41a640 <flatcc_builder_get_emit_context@@Base+0x132>
  41a5e6:	mov    rax,QWORD PTR [rbp-0x18]
  41a5ea:	mov    rdx,QWORD PTR [rax+0x8]
  41a5ee:	mov    rax,QWORD PTR [rbp-0x8]
  41a5f2:	mov    QWORD PTR [rax+0xb88],rdx
  41a5f9:	mov    rax,QWORD PTR [rbp-0x18]
  41a5fd:	mov    rdx,QWORD PTR [rax]
  41a600:	mov    rax,QWORD PTR [rbp-0x8]
  41a604:	mov    QWORD PTR [rax+0xb80],rdx
  41a60b:	mov    rax,QWORD PTR [rbp-0x18]
  41a60f:	mov    rax,QWORD PTR [rax]
  41a612:	mov    rdx,QWORD PTR [rbp-0x8]
  41a616:	mov    QWORD PTR [rax+0xb88],rdx
  41a61d:	mov    rax,QWORD PTR [rbp-0x18]
  41a621:	mov    rax,QWORD PTR [rax+0x8]
  41a625:	mov    rdx,QWORD PTR [rbp-0x8]
  41a629:	mov    QWORD PTR [rax+0xb80],rdx
  41a630:	mov    rax,QWORD PTR [rbp-0x18]
  41a634:	mov    rdx,QWORD PTR [rbp-0x8]
  41a638:	mov    QWORD PTR [rax],rdx
  41a63b:	jmp    41a6dc <flatcc_builder_get_emit_context@@Base+0x1ce>
  41a640:	mov    rax,QWORD PTR [rbp-0x18]
  41a644:	mov    rdx,QWORD PTR [rbp-0x8]
  41a648:	mov    QWORD PTR [rax],rdx
  41a64b:	mov    rax,QWORD PTR [rbp-0x18]
  41a64f:	mov    rdx,QWORD PTR [rbp-0x8]
  41a653:	mov    QWORD PTR [rax+0x8],rdx
  41a657:	mov    rax,QWORD PTR [rbp-0x8]
  41a65b:	mov    rdx,QWORD PTR [rbp-0x8]
  41a65f:	mov    QWORD PTR [rax+0xb80],rdx
  41a666:	mov    rax,QWORD PTR [rbp-0x8]
  41a66a:	mov    rdx,QWORD PTR [rbp-0x8]
  41a66e:	mov    QWORD PTR [rax+0xb88],rdx
  41a675:	mov    rax,QWORD PTR [rbp-0x18]
  41a679:	mov    rax,QWORD PTR [rax]
  41a67c:	lea    rdx,[rax+0x5c0]
  41a683:	mov    rax,QWORD PTR [rbp-0x18]
  41a687:	mov    QWORD PTR [rax+0x10],rdx
  41a68b:	mov    rax,QWORD PTR [rbp-0x18]
  41a68f:	mov    rdx,QWORD PTR [rax+0x10]
  41a693:	mov    rax,QWORD PTR [rbp-0x18]
  41a697:	mov    QWORD PTR [rax+0x20],rdx
  41a69b:	mov    rax,QWORD PTR [rbp-0x18]
  41a69f:	mov    QWORD PTR [rax+0x18],0x5c0
  41a6a7:	mov    rax,QWORD PTR [rbp-0x18]
  41a6ab:	mov    rax,QWORD PTR [rax+0x18]
  41a6af:	mov    edx,0xb80
  41a6b4:	sub    rdx,rax
  41a6b7:	mov    rax,QWORD PTR [rbp-0x18]
  41a6bb:	mov    QWORD PTR [rax+0x28],rdx
  41a6bf:	mov    rax,QWORD PTR [rbp-0x18]
  41a6c3:	mov    rax,QWORD PTR [rax+0x18]
  41a6c7:	neg    eax
  41a6c9:	mov    edx,eax
  41a6cb:	mov    rax,QWORD PTR [rbp-0x8]
  41a6cf:	mov    DWORD PTR [rax+0xb90],edx
  41a6d5:	mov    eax,0x0
  41a6da:	jmp    41a72a <flatcc_builder_get_emit_context@@Base+0x21c>
  41a6dc:	mov    rax,QWORD PTR [rbp-0x18]
  41a6e0:	mov    rax,QWORD PTR [rax]
  41a6e3:	lea    rdx,[rax+0xb80]
  41a6ea:	mov    rax,QWORD PTR [rbp-0x18]
  41a6ee:	mov    QWORD PTR [rax+0x10],rdx
  41a6f2:	mov    rax,QWORD PTR [rbp-0x18]
  41a6f6:	mov    QWORD PTR [rax+0x18],0xb80
  41a6fe:	mov    rax,QWORD PTR [rbp-0x18]
  41a702:	mov    rax,QWORD PTR [rax]
  41a705:	mov    rax,QWORD PTR [rax+0xb80]
  41a70c:	mov    edx,DWORD PTR [rax+0xb90]
  41a712:	mov    rax,QWORD PTR [rbp-0x18]
  41a716:	mov    rax,QWORD PTR [rax]
  41a719:	sub    edx,0xb80
  41a71f:	mov    DWORD PTR [rax+0xb90],edx
  41a725:	mov    eax,0x0
  41a72a:	leave  
  41a72b:	ret    
  41a72c:	endbr64 
  41a730:	push   rbp
  41a731:	mov    rbp,rsp
  41a734:	sub    rsp,0x20
  41a738:	mov    QWORD PTR [rbp-0x18],rdi
  41a73c:	mov    QWORD PTR [rbp-0x8],0x0
  41a744:	mov    rax,QWORD PTR [rbp-0x18]
  41a748:	mov    rax,QWORD PTR [rax+0x8]
  41a74c:	test   rax,rax
  41a74f:	je     41a788 <flatcc_builder_get_emit_context@@Base+0x27a>
  41a751:	mov    rax,QWORD PTR [rbp-0x18]
  41a755:	mov    rax,QWORD PTR [rax+0x8]
  41a759:	mov    rdx,QWORD PTR [rax+0xb80]
  41a760:	mov    rax,QWORD PTR [rbp-0x18]
  41a764:	mov    rax,QWORD PTR [rax]
  41a767:	cmp    rdx,rax
  41a76a:	je     41a788 <flatcc_builder_get_emit_context@@Base+0x27a>
  41a76c:	mov    rax,QWORD PTR [rbp-0x18]
  41a770:	mov    rax,QWORD PTR [rax+0x8]
  41a774:	mov    rdx,QWORD PTR [rax+0xb80]
  41a77b:	mov    rax,QWORD PTR [rbp-0x18]
  41a77f:	mov    QWORD PTR [rax+0x8],rdx
  41a783:	jmp    41a8c2 <flatcc_builder_get_emit_context@@Base+0x3b4>
  41a788:	mov    edi,0xb98
  41a78d:	call   4032a0 <malloc@plt>
  41a792:	mov    QWORD PTR [rbp-0x8],rax
  41a796:	cmp    QWORD PTR [rbp-0x8],0x0
  41a79b:	jne    41a7a7 <flatcc_builder_get_emit_context@@Base+0x299>
  41a79d:	mov    eax,0xffffffff
  41a7a2:	jmp    41a90f <flatcc_builder_get_emit_context@@Base+0x401>
  41a7a7:	mov    rax,QWORD PTR [rbp-0x18]
  41a7ab:	mov    rax,QWORD PTR [rax+0x38]
  41a7af:	lea    rdx,[rax+0xb80]
  41a7b6:	mov    rax,QWORD PTR [rbp-0x18]
  41a7ba:	mov    QWORD PTR [rax+0x38],rdx
  41a7be:	mov    rax,QWORD PTR [rbp-0x18]
  41a7c2:	mov    rax,QWORD PTR [rax+0x8]
  41a7c6:	test   rax,rax
  41a7c9:	je     41a826 <flatcc_builder_get_emit_context@@Base+0x318>
  41a7cb:	mov    rax,QWORD PTR [rbp-0x18]
  41a7cf:	mov    rdx,QWORD PTR [rax+0x8]
  41a7d3:	mov    rax,QWORD PTR [rbp-0x8]
  41a7d7:	mov    QWORD PTR [rax+0xb88],rdx
  41a7de:	mov    rax,QWORD PTR [rbp-0x18]
  41a7e2:	mov    rdx,QWORD PTR [rax]
  41a7e5:	mov    rax,QWORD PTR [rbp-0x8]
  41a7e9:	mov    QWORD PTR [rax+0xb80],rdx
  41a7f0:	mov    rax,QWORD PTR [rbp-0x18]
  41a7f4:	mov    rax,QWORD PTR [rax]
  41a7f7:	mov    rdx,QWORD PTR [rbp-0x8]
  41a7fb:	mov    QWORD PTR [rax+0xb88],rdx
  41a802:	mov    rax,QWORD PTR [rbp-0x18]
  41a806:	mov    rax,QWORD PTR [rax+0x8]
  41a80a:	mov    rdx,QWORD PTR [rbp-0x8]
  41a80e:	mov    QWORD PTR [rax+0xb80],rdx
  41a815:	mov    rax,QWORD PTR [rbp-0x18]
  41a819:	mov    rdx,QWORD PTR [rbp-0x8]
  41a81d:	mov    QWORD PTR [rax+0x8],rdx
  41a821:	jmp    41a8c2 <flatcc_builder_get_emit_context@@Base+0x3b4>
  41a826:	mov    rax,QWORD PTR [rbp-0x18]
  41a82a:	mov    rdx,QWORD PTR [rbp-0x8]
  41a82e:	mov    QWORD PTR [rax],rdx
  41a831:	mov    rax,QWORD PTR [rbp-0x18]
  41a835:	mov    rdx,QWORD PTR [rbp-0x8]
  41a839:	mov    QWORD PTR [rax+0x8],rdx
  41a83d:	mov    rax,QWORD PTR [rbp-0x8]
  41a841:	mov    rdx,QWORD PTR [rbp-0x8]
  41a845:	mov    QWORD PTR [rax+0xb80],rdx
  41a84c:	mov    rax,QWORD PTR [rbp-0x8]
  41a850:	mov    rdx,QWORD PTR [rbp-0x8]
  41a854:	mov    QWORD PTR [rax+0xb88],rdx
  41a85b:	mov    rax,QWORD PTR [rbp-0x18]
  41a85f:	mov    rax,QWORD PTR [rax]
  41a862:	lea    rdx,[rax+0x5c0]
  41a869:	mov    rax,QWORD PTR [rbp-0x18]
  41a86d:	mov    QWORD PTR [rax+0x10],rdx
  41a871:	mov    rax,QWORD PTR [rbp-0x18]
  41a875:	mov    rdx,QWORD PTR [rax+0x10]
  41a879:	mov    rax,QWORD PTR [rbp-0x18]
  41a87d:	mov    QWORD PTR [rax+0x20],rdx
  41a881:	mov    rax,QWORD PTR [rbp-0x18]
  41a885:	mov    QWORD PTR [rax+0x18],0x5c0
  41a88d:	mov    rax,QWORD PTR [rbp-0x18]
  41a891:	mov    rax,QWORD PTR [rax+0x18]
  41a895:	mov    edx,0xb80
  41a89a:	sub    rdx,rax
  41a89d:	mov    rax,QWORD PTR [rbp-0x18]
  41a8a1:	mov    QWORD PTR [rax+0x28],rdx
  41a8a5:	mov    rax,QWORD PTR [rbp-0x18]
  41a8a9:	mov    rax,QWORD PTR [rax+0x18]
  41a8ad:	neg    eax
  41a8af:	mov    edx,eax
  41a8b1:	mov    rax,QWORD PTR [rbp-0x8]
  41a8b5:	mov    DWORD PTR [rax+0xb90],edx
  41a8bb:	mov    eax,0x0
  41a8c0:	jmp    41a90f <flatcc_builder_get_emit_context@@Base+0x401>
  41a8c2:	mov    rax,QWORD PTR [rbp-0x18]
  41a8c6:	mov    rax,QWORD PTR [rax+0x8]
  41a8ca:	mov    rdx,rax
  41a8cd:	mov    rax,QWORD PTR [rbp-0x18]
  41a8d1:	mov    QWORD PTR [rax+0x20],rdx
  41a8d5:	mov    rax,QWORD PTR [rbp-0x18]
  41a8d9:	mov    QWORD PTR [rax+0x28],0xb80
  41a8e1:	mov    rax,QWORD PTR [rbp-0x18]
  41a8e5:	mov    rax,QWORD PTR [rax+0x8]
  41a8e9:	mov    rax,QWORD PTR [rax+0xb88]
  41a8f0:	mov    edx,DWORD PTR [rax+0xb90]
  41a8f6:	mov    rax,QWORD PTR [rbp-0x18]
  41a8fa:	mov    rax,QWORD PTR [rax+0x8]
  41a8fe:	add    edx,0xb80
  41a904:	mov    DWORD PTR [rax+0xb90],edx
  41a90a:	mov    eax,0x0
  41a90f:	leave  
  41a910:	ret    
  41a911:	endbr64 
  41a915:	push   rbp
  41a916:	mov    rbp,rsp
  41a919:	sub    rsp,0x30
  41a91d:	mov    QWORD PTR [rbp-0x18],rdi
  41a921:	mov    QWORD PTR [rbp-0x20],rsi
  41a925:	mov    QWORD PTR [rbp-0x28],rdx
  41a929:	mov    rax,QWORD PTR [rbp-0x28]
  41a92d:	add    QWORD PTR [rbp-0x20],rax
  41a931:	jmp    41a9d5 <flatcc_builder_get_emit_context@@Base+0x4c7>
  41a936:	mov    rax,QWORD PTR [rbp-0x28]
  41a93a:	mov    QWORD PTR [rbp-0x8],rax
  41a93e:	mov    rax,QWORD PTR [rbp-0x18]
  41a942:	mov    rax,QWORD PTR [rax+0x18]
  41a946:	cmp    QWORD PTR [rbp-0x8],rax
  41a94a:	jbe    41a976 <flatcc_builder_get_emit_context@@Base+0x468>
  41a94c:	mov    rax,QWORD PTR [rbp-0x18]
  41a950:	mov    rax,QWORD PTR [rax+0x18]
  41a954:	mov    QWORD PTR [rbp-0x8],rax
  41a958:	cmp    QWORD PTR [rbp-0x8],0x0
  41a95d:	jne    41a976 <flatcc_builder_get_emit_context@@Base+0x468>
  41a95f:	mov    rax,QWORD PTR [rbp-0x18]
  41a963:	mov    rdi,rax
  41a966:	call   41a524 <flatcc_builder_get_emit_context@@Base+0x16>
  41a96b:	test   eax,eax
  41a96d:	je     41a9d5 <flatcc_builder_get_emit_context@@Base+0x4c7>
  41a96f:	mov    eax,0xffffffff
  41a974:	jmp    41a9e5 <flatcc_builder_get_emit_context@@Base+0x4d7>
  41a976:	mov    rax,QWORD PTR [rbp-0x18]
  41a97a:	mov    rax,QWORD PTR [rax+0x10]
  41a97e:	mov    rdx,QWORD PTR [rbp-0x8]
  41a982:	neg    rdx
  41a985:	add    rdx,rax
  41a988:	mov    rax,QWORD PTR [rbp-0x18]
  41a98c:	mov    QWORD PTR [rax+0x10],rdx
  41a990:	mov    rax,QWORD PTR [rbp-0x18]
  41a994:	mov    rax,QWORD PTR [rax+0x18]
  41a998:	sub    rax,QWORD PTR [rbp-0x8]
  41a99c:	mov    rdx,rax
  41a99f:	mov    rax,QWORD PTR [rbp-0x18]
  41a9a3:	mov    QWORD PTR [rax+0x18],rdx
  41a9a7:	mov    rax,QWORD PTR [rbp-0x8]
  41a9ab:	neg    rax
  41a9ae:	add    QWORD PTR [rbp-0x20],rax
  41a9b2:	mov    rax,QWORD PTR [rbp-0x8]
  41a9b6:	sub    QWORD PTR [rbp-0x28],rax
  41a9ba:	mov    rax,QWORD PTR [rbp-0x18]
  41a9be:	mov    rax,QWORD PTR [rax+0x10]
  41a9c2:	mov    rdx,QWORD PTR [rbp-0x8]
  41a9c6:	mov    rcx,QWORD PTR [rbp-0x20]
  41a9ca:	mov    rsi,rcx
  41a9cd:	mov    rdi,rax
  41a9d0:	call   403290 <memcpy@plt>
  41a9d5:	cmp    QWORD PTR [rbp-0x28],0x0
  41a9da:	jne    41a936 <flatcc_builder_get_emit_context@@Base+0x428>
  41a9e0:	mov    eax,0x0
  41a9e5:	leave  
  41a9e6:	ret    
  41a9e7:	endbr64 
  41a9eb:	push   rbp
  41a9ec:	mov    rbp,rsp
  41a9ef:	sub    rsp,0x30
  41a9f3:	mov    QWORD PTR [rbp-0x18],rdi
  41a9f7:	mov    QWORD PTR [rbp-0x20],rsi
  41a9fb:	mov    QWORD PTR [rbp-0x28],rdx
  41a9ff:	jmp    41aa9d <flatcc_builder_get_emit_context@@Base+0x58f>
  41aa04:	mov    rax,QWORD PTR [rbp-0x28]
  41aa08:	mov    QWORD PTR [rbp-0x8],rax
  41aa0c:	mov    rax,QWORD PTR [rbp-0x18]
  41aa10:	mov    rax,QWORD PTR [rax+0x28]
  41aa14:	cmp    QWORD PTR [rbp-0x8],rax
  41aa18:	jbe    41aa44 <flatcc_builder_get_emit_context@@Base+0x536>
  41aa1a:	mov    rax,QWORD PTR [rbp-0x18]
  41aa1e:	mov    rax,QWORD PTR [rax+0x28]
  41aa22:	mov    QWORD PTR [rbp-0x8],rax
  41aa26:	cmp    QWORD PTR [rbp-0x8],0x0
  41aa2b:	jne    41aa44 <flatcc_builder_get_emit_context@@Base+0x536>
  41aa2d:	mov    rax,QWORD PTR [rbp-0x18]
  41aa31:	mov    rdi,rax
  41aa34:	call   41a72c <flatcc_builder_get_emit_context@@Base+0x21e>
  41aa39:	test   eax,eax
  41aa3b:	je     41aa9d <flatcc_builder_get_emit_context@@Base+0x58f>
  41aa3d:	mov    eax,0xffffffff
  41aa42:	jmp    41aaad <flatcc_builder_get_emit_context@@Base+0x59f>
  41aa44:	mov    rax,QWORD PTR [rbp-0x18]
  41aa48:	mov    rax,QWORD PTR [rax+0x20]
  41aa4c:	mov    rdx,QWORD PTR [rbp-0x8]
  41aa50:	mov    rcx,QWORD PTR [rbp-0x20]
  41aa54:	mov    rsi,rcx
  41aa57:	mov    rdi,rax
  41aa5a:	call   403290 <memcpy@plt>
  41aa5f:	mov    rax,QWORD PTR [rbp-0x8]
  41aa63:	sub    QWORD PTR [rbp-0x28],rax
  41aa67:	mov    rax,QWORD PTR [rbp-0x8]
  41aa6b:	add    QWORD PTR [rbp-0x20],rax
  41aa6f:	mov    rax,QWORD PTR [rbp-0x18]
  41aa73:	mov    rdx,QWORD PTR [rax+0x20]
  41aa77:	mov    rax,QWORD PTR [rbp-0x8]
  41aa7b:	add    rdx,rax
  41aa7e:	mov    rax,QWORD PTR [rbp-0x18]
  41aa82:	mov    QWORD PTR [rax+0x20],rdx
  41aa86:	mov    rax,QWORD PTR [rbp-0x18]
  41aa8a:	mov    rax,QWORD PTR [rax+0x28]
  41aa8e:	sub    rax,QWORD PTR [rbp-0x8]
  41aa92:	mov    rdx,rax
  41aa95:	mov    rax,QWORD PTR [rbp-0x18]
  41aa99:	mov    QWORD PTR [rax+0x28],rdx
  41aa9d:	cmp    QWORD PTR [rbp-0x28],0x0
  41aaa2:	jne    41aa04 <flatcc_builder_get_emit_context@@Base+0x4f6>
  41aaa8:	mov    eax,0x0
  41aaad:	leave  
  41aaae:	ret    

000000000041aaaf <flatcc_emitter_recycle_page@@Base>:
  41aaaf:	endbr64 
  41aab3:	push   rbp
  41aab4:	mov    rbp,rsp
  41aab7:	mov    QWORD PTR [rbp-0x8],rdi
  41aabb:	mov    QWORD PTR [rbp-0x10],rsi
  41aabf:	mov    rax,QWORD PTR [rbp-0x8]
  41aac3:	mov    rax,QWORD PTR [rax]
  41aac6:	cmp    QWORD PTR [rbp-0x10],rax
  41aaca:	je     41aada <flatcc_emitter_recycle_page@@Base+0x2b>
  41aacc:	mov    rax,QWORD PTR [rbp-0x8]
  41aad0:	mov    rax,QWORD PTR [rax+0x8]
  41aad4:	cmp    QWORD PTR [rbp-0x10],rax
  41aad8:	jne    41aae4 <flatcc_emitter_recycle_page@@Base+0x35>
  41aada:	mov    eax,0xffffffff
  41aadf:	jmp    41ab7a <flatcc_emitter_recycle_page@@Base+0xcb>
  41aae4:	mov    rax,QWORD PTR [rbp-0x10]
  41aae8:	mov    rax,QWORD PTR [rax+0xb80]
  41aaef:	mov    rdx,QWORD PTR [rbp-0x10]
  41aaf3:	mov    rdx,QWORD PTR [rdx+0xb88]
  41aafa:	mov    QWORD PTR [rax+0xb88],rdx
  41ab01:	mov    rax,QWORD PTR [rbp-0x10]
  41ab05:	mov    rax,QWORD PTR [rax+0xb88]
  41ab0c:	mov    rdx,QWORD PTR [rbp-0x10]
  41ab10:	mov    rdx,QWORD PTR [rdx+0xb80]
  41ab17:	mov    QWORD PTR [rax+0xb80],rdx
  41ab1e:	mov    rax,QWORD PTR [rbp-0x8]
  41ab22:	mov    rax,QWORD PTR [rax]
  41ab25:	mov    rdx,QWORD PTR [rax+0xb88]
  41ab2c:	mov    rax,QWORD PTR [rbp-0x10]
  41ab30:	mov    QWORD PTR [rax+0xb88],rdx
  41ab37:	mov    rax,QWORD PTR [rbp-0x8]
  41ab3b:	mov    rdx,QWORD PTR [rax]
  41ab3e:	mov    rax,QWORD PTR [rbp-0x10]
  41ab42:	mov    QWORD PTR [rax+0xb80],rdx
  41ab49:	mov    rax,QWORD PTR [rbp-0x10]
  41ab4d:	mov    rax,QWORD PTR [rax+0xb88]
  41ab54:	mov    rdx,QWORD PTR [rbp-0x10]
  41ab58:	mov    QWORD PTR [rax+0xb80],rdx
  41ab5f:	mov    rax,QWORD PTR [rbp-0x10]
  41ab63:	mov    rax,QWORD PTR [rax+0xb80]
  41ab6a:	mov    rdx,QWORD PTR [rbp-0x10]
  41ab6e:	mov    QWORD PTR [rax+0xb88],rdx
  41ab75:	mov    eax,0x0
  41ab7a:	pop    rbp
  41ab7b:	ret    

000000000041ab7c <flatcc_emitter_reset@@Base>:
  41ab7c:	endbr64 
  41ab80:	push   rbp
  41ab81:	mov    rbp,rsp
  41ab84:	sub    rsp,0x20
  41ab88:	mov    QWORD PTR [rbp-0x18],rdi
  41ab8c:	mov    rax,QWORD PTR [rbp-0x18]
  41ab90:	mov    rax,QWORD PTR [rax]
  41ab93:	mov    QWORD PTR [rbp-0x8],rax
  41ab97:	mov    rax,QWORD PTR [rbp-0x18]
  41ab9b:	mov    rax,QWORD PTR [rax]
  41ab9e:	test   rax,rax
  41aba1:	je     41ad0b <flatcc_emitter_reset@@Base+0x18f>
  41aba7:	mov    rax,QWORD PTR [rbp-0x18]
  41abab:	mov    rdx,QWORD PTR [rax]
  41abae:	mov    rax,QWORD PTR [rbp-0x18]
  41abb2:	mov    QWORD PTR [rax+0x8],rdx
  41abb6:	mov    rax,QWORD PTR [rbp-0x18]
  41abba:	mov    rax,QWORD PTR [rax]
  41abbd:	lea    rdx,[rax+0x5c0]
  41abc4:	mov    rax,QWORD PTR [rbp-0x18]
  41abc8:	mov    QWORD PTR [rax+0x10],rdx
  41abcc:	mov    rax,QWORD PTR [rbp-0x18]
  41abd0:	mov    rdx,QWORD PTR [rax+0x10]
  41abd4:	mov    rax,QWORD PTR [rbp-0x18]
  41abd8:	mov    QWORD PTR [rax+0x20],rdx
  41abdc:	mov    rax,QWORD PTR [rbp-0x18]
  41abe0:	mov    QWORD PTR [rax+0x18],0x5c0
  41abe8:	mov    rax,QWORD PTR [rbp-0x18]
  41abec:	mov    QWORD PTR [rax+0x28],0x5c0
  41abf4:	mov    rax,QWORD PTR [rbp-0x18]
  41abf8:	mov    rax,QWORD PTR [rax+0x18]
  41abfc:	mov    edx,eax
  41abfe:	mov    rax,QWORD PTR [rbp-0x18]
  41ac02:	mov    rax,QWORD PTR [rax]
  41ac05:	neg    edx
  41ac07:	mov    DWORD PTR [rax+0xb90],edx
  41ac0d:	mov    rax,QWORD PTR [rbp-0x18]
  41ac11:	mov    rax,QWORD PTR [rax+0x40]
  41ac15:	test   rax,rax
  41ac18:	jne    41ac2a <flatcc_emitter_reset@@Base+0xae>
  41ac1a:	mov    rax,QWORD PTR [rbp-0x18]
  41ac1e:	mov    rdx,QWORD PTR [rax+0x30]
  41ac22:	mov    rax,QWORD PTR [rbp-0x18]
  41ac26:	mov    QWORD PTR [rax+0x40],rdx
  41ac2a:	mov    rax,QWORD PTR [rbp-0x18]
  41ac2e:	mov    rdx,QWORD PTR [rax+0x40]
  41ac32:	mov    rax,rdx
  41ac35:	add    rax,rax
  41ac38:	add    rax,rdx
  41ac3b:	shr    rax,0x2
  41ac3f:	mov    rdx,rax
  41ac42:	mov    rax,QWORD PTR [rbp-0x18]
  41ac46:	mov    rax,QWORD PTR [rax+0x30]
  41ac4a:	shr    rax,0x2
  41ac4e:	add    rdx,rax
  41ac51:	mov    rax,QWORD PTR [rbp-0x18]
  41ac55:	mov    QWORD PTR [rax+0x40],rdx
  41ac59:	mov    rax,QWORD PTR [rbp-0x18]
  41ac5d:	mov    QWORD PTR [rax+0x30],0x0
  41ac65:	jmp    41acd1 <flatcc_emitter_reset@@Base+0x155>
  41ac67:	mov    rax,QWORD PTR [rbp-0x18]
  41ac6b:	mov    rax,QWORD PTR [rax+0x8]
  41ac6f:	mov    rax,QWORD PTR [rax+0xb80]
  41ac76:	mov    QWORD PTR [rbp-0x8],rax
  41ac7a:	mov    rax,QWORD PTR [rbp-0x18]
  41ac7e:	mov    rax,QWORD PTR [rax+0x8]
  41ac82:	mov    rdx,QWORD PTR [rbp-0x8]
  41ac86:	mov    rdx,QWORD PTR [rdx+0xb80]
  41ac8d:	mov    QWORD PTR [rax+0xb80],rdx
  41ac94:	mov    rax,QWORD PTR [rbp-0x8]
  41ac98:	mov    rax,QWORD PTR [rax+0xb80]
  41ac9f:	mov    rdx,QWORD PTR [rbp-0x18]
  41aca3:	mov    rdx,QWORD PTR [rdx+0x8]
  41aca7:	mov    QWORD PTR [rax+0xb88],rdx
  41acae:	mov    rax,QWORD PTR [rbp-0x8]
  41acb2:	mov    rdi,rax
  41acb5:	call   4031a0 <free@plt>
  41acba:	mov    rax,QWORD PTR [rbp-0x18]
  41acbe:	mov    rax,QWORD PTR [rax+0x38]
  41acc2:	lea    rdx,[rax-0xb80]
  41acc9:	mov    rax,QWORD PTR [rbp-0x18]
  41accd:	mov    QWORD PTR [rax+0x38],rdx
  41acd1:	mov    rax,QWORD PTR [rbp-0x18]
  41acd5:	mov    rax,QWORD PTR [rax+0x40]
  41acd9:	lea    rdx,[rax+rax*1]
  41acdd:	mov    rax,QWORD PTR [rbp-0x18]
  41ace1:	mov    rax,QWORD PTR [rax+0x38]
  41ace5:	cmp    rdx,rax
  41ace8:	jae    41ad0c <flatcc_emitter_reset@@Base+0x190>
  41acea:	mov    rax,QWORD PTR [rbp-0x18]
  41acee:	mov    rax,QWORD PTR [rax+0x8]
  41acf2:	mov    rdx,QWORD PTR [rax+0xb80]
  41acf9:	mov    rax,QWORD PTR [rbp-0x18]
  41acfd:	mov    rax,QWORD PTR [rax]
  41ad00:	cmp    rdx,rax
  41ad03:	jne    41ac67 <flatcc_emitter_reset@@Base+0xeb>
  41ad09:	jmp    41ad0c <flatcc_emitter_reset@@Base+0x190>
  41ad0b:	nop
  41ad0c:	leave  
  41ad0d:	ret    

000000000041ad0e <flatcc_emitter_clear@@Base>:
  41ad0e:	endbr64 
  41ad12:	push   rbp
  41ad13:	mov    rbp,rsp
  41ad16:	sub    rsp,0x20
  41ad1a:	mov    QWORD PTR [rbp-0x18],rdi
  41ad1e:	mov    rax,QWORD PTR [rbp-0x18]
  41ad22:	mov    rax,QWORD PTR [rax]
  41ad25:	mov    QWORD PTR [rbp-0x8],rax
  41ad29:	cmp    QWORD PTR [rbp-0x8],0x0
  41ad2e:	je     41ad9e <flatcc_emitter_clear@@Base+0x90>
  41ad30:	mov    rax,QWORD PTR [rbp-0x8]
  41ad34:	mov    rax,QWORD PTR [rax+0xb88]
  41ad3b:	mov    QWORD PTR [rax+0xb80],0x0
  41ad46:	jmp    41ad6a <flatcc_emitter_clear@@Base+0x5c>
  41ad48:	mov    rax,QWORD PTR [rbp-0x8]
  41ad4c:	mov    rax,QWORD PTR [rax+0xb80]
  41ad53:	mov    QWORD PTR [rbp-0x8],rax
  41ad57:	mov    rax,QWORD PTR [rbp-0x8]
  41ad5b:	mov    rax,QWORD PTR [rax+0xb88]
  41ad62:	mov    rdi,rax
  41ad65:	call   4031a0 <free@plt>
  41ad6a:	mov    rax,QWORD PTR [rbp-0x8]
  41ad6e:	mov    rax,QWORD PTR [rax+0xb80]
  41ad75:	test   rax,rax
  41ad78:	jne    41ad48 <flatcc_emitter_clear@@Base+0x3a>
  41ad7a:	mov    rax,QWORD PTR [rbp-0x8]
  41ad7e:	mov    rdi,rax
  41ad81:	call   4031a0 <free@plt>
  41ad86:	mov    rax,QWORD PTR [rbp-0x18]
  41ad8a:	mov    edx,0x48
  41ad8f:	mov    esi,0x0
  41ad94:	mov    rdi,rax
  41ad97:	call   403230 <memset@plt>
  41ad9c:	jmp    41ad9f <flatcc_emitter_clear@@Base+0x91>
  41ad9e:	nop
  41ad9f:	leave  
  41ada0:	ret    

000000000041ada1 <flatcc_emitter@@Base>:
  41ada1:	endbr64 
  41ada5:	push   rbp
  41ada6:	mov    rbp,rsp
  41ada9:	sub    rsp,0x30
  41adad:	mov    QWORD PTR [rbp-0x18],rdi
  41adb1:	mov    QWORD PTR [rbp-0x20],rsi
  41adb5:	mov    DWORD PTR [rbp-0x24],edx
  41adb8:	mov    DWORD PTR [rbp-0x28],ecx
  41adbb:	mov    QWORD PTR [rbp-0x30],r8
  41adbf:	mov    rax,QWORD PTR [rbp-0x18]
  41adc3:	mov    QWORD PTR [rbp-0x8],rax
  41adc7:	mov    rax,QWORD PTR [rbp-0x8]
  41adcb:	mov    rdx,QWORD PTR [rax+0x30]
  41adcf:	mov    rax,QWORD PTR [rbp-0x30]
  41add3:	add    rdx,rax
  41add6:	mov    rax,QWORD PTR [rbp-0x8]
  41adda:	mov    QWORD PTR [rax+0x30],rdx
  41adde:	cmp    DWORD PTR [rbp-0x28],0x0
  41ade2:	jns    41ae8a <flatcc_emitter@@Base+0xe9>
  41ade8:	mov    rax,QWORD PTR [rbp-0x8]
  41adec:	mov    rax,QWORD PTR [rax+0x18]
  41adf0:	cmp    QWORD PTR [rbp-0x30],rax
  41adf4:	ja     41ae38 <flatcc_emitter@@Base+0x97>
  41adf6:	mov    rax,QWORD PTR [rbp-0x8]
  41adfa:	mov    rax,QWORD PTR [rax+0x10]
  41adfe:	mov    rdx,QWORD PTR [rbp-0x30]
  41ae02:	neg    rdx
  41ae05:	add    rdx,rax
  41ae08:	mov    rax,QWORD PTR [rbp-0x8]
  41ae0c:	mov    QWORD PTR [rax+0x10],rdx
  41ae10:	mov    rax,QWORD PTR [rbp-0x8]
  41ae14:	mov    rax,QWORD PTR [rax+0x18]
  41ae18:	sub    rax,QWORD PTR [rbp-0x30]
  41ae1c:	mov    rdx,rax
  41ae1f:	mov    rax,QWORD PTR [rbp-0x8]
  41ae23:	mov    QWORD PTR [rax+0x18],rdx
  41ae27:	mov    rax,QWORD PTR [rbp-0x8]
  41ae2b:	mov    rax,QWORD PTR [rax+0x10]
  41ae2f:	mov    QWORD PTR [rbp-0x10],rax
  41ae33:	jmp    41af16 <flatcc_emitter@@Base+0x175>
  41ae38:	mov    eax,DWORD PTR [rbp-0x24]
  41ae3b:	cdqe   
  41ae3d:	shl    rax,0x4
  41ae41:	add    QWORD PTR [rbp-0x20],rax
  41ae45:	jmp    41ae78 <flatcc_emitter@@Base+0xd7>
  41ae47:	sub    QWORD PTR [rbp-0x20],0x10
  41ae4c:	mov    rax,QWORD PTR [rbp-0x20]
  41ae50:	mov    rdx,QWORD PTR [rax+0x8]
  41ae54:	mov    rax,QWORD PTR [rbp-0x20]
  41ae58:	mov    rcx,QWORD PTR [rax]
  41ae5b:	mov    rax,QWORD PTR [rbp-0x8]
  41ae5f:	mov    rsi,rcx
  41ae62:	mov    rdi,rax
  41ae65:	call   41a911 <flatcc_builder_get_emit_context@@Base+0x403>
  41ae6a:	test   eax,eax
  41ae6c:	je     41ae78 <flatcc_emitter@@Base+0xd7>
  41ae6e:	mov    eax,0xffffffff
  41ae73:	jmp    41af59 <flatcc_emitter@@Base+0x1b8>
  41ae78:	mov    eax,DWORD PTR [rbp-0x24]
  41ae7b:	lea    edx,[rax-0x1]
  41ae7e:	mov    DWORD PTR [rbp-0x24],edx
  41ae81:	test   eax,eax
  41ae83:	jne    41ae47 <flatcc_emitter@@Base+0xa6>
  41ae85:	jmp    41af0f <flatcc_emitter@@Base+0x16e>
  41ae8a:	mov    rax,QWORD PTR [rbp-0x8]
  41ae8e:	mov    rax,QWORD PTR [rax+0x28]
  41ae92:	cmp    QWORD PTR [rbp-0x30],rax
  41ae96:	ja     41af02 <flatcc_emitter@@Base+0x161>
  41ae98:	mov    rax,QWORD PTR [rbp-0x8]
  41ae9c:	mov    rax,QWORD PTR [rax+0x20]
  41aea0:	mov    QWORD PTR [rbp-0x10],rax
  41aea4:	mov    rax,QWORD PTR [rbp-0x8]
  41aea8:	mov    rdx,QWORD PTR [rax+0x20]
  41aeac:	mov    rax,QWORD PTR [rbp-0x30]
  41aeb0:	add    rdx,rax
  41aeb3:	mov    rax,QWORD PTR [rbp-0x8]
  41aeb7:	mov    QWORD PTR [rax+0x20],rdx
  41aebb:	mov    rax,QWORD PTR [rbp-0x8]
  41aebf:	mov    rax,QWORD PTR [rax+0x28]
  41aec3:	sub    rax,QWORD PTR [rbp-0x30]
  41aec7:	mov    rdx,rax
  41aeca:	mov    rax,QWORD PTR [rbp-0x8]
  41aece:	mov    QWORD PTR [rax+0x28],rdx
  41aed2:	jmp    41af16 <flatcc_emitter@@Base+0x175>
  41aed4:	mov    rax,QWORD PTR [rbp-0x20]
  41aed8:	mov    rdx,QWORD PTR [rax+0x8]
  41aedc:	mov    rax,QWORD PTR [rbp-0x20]
  41aee0:	mov    rcx,QWORD PTR [rax]
  41aee3:	mov    rax,QWORD PTR [rbp-0x8]
  41aee7:	mov    rsi,rcx
  41aeea:	mov    rdi,rax
  41aeed:	call   41a9e7 <flatcc_builder_get_emit_context@@Base+0x4d9>
  41aef2:	test   eax,eax
  41aef4:	je     41aefd <flatcc_emitter@@Base+0x15c>
  41aef6:	mov    eax,0xffffffff
  41aefb:	jmp    41af59 <flatcc_emitter@@Base+0x1b8>
  41aefd:	add    QWORD PTR [rbp-0x20],0x10
  41af02:	mov    eax,DWORD PTR [rbp-0x24]
  41af05:	lea    edx,[rax-0x1]
  41af08:	mov    DWORD PTR [rbp-0x24],edx
  41af0b:	test   eax,eax
  41af0d:	jne    41aed4 <flatcc_emitter@@Base+0x133>
  41af0f:	mov    eax,0x0
  41af14:	jmp    41af59 <flatcc_emitter@@Base+0x1b8>
  41af16:	jmp    41af47 <flatcc_emitter@@Base+0x1a6>
  41af18:	mov    rax,QWORD PTR [rbp-0x20]
  41af1c:	mov    rdx,QWORD PTR [rax+0x8]
  41af20:	mov    rax,QWORD PTR [rbp-0x20]
  41af24:	mov    rcx,QWORD PTR [rax]
  41af27:	mov    rax,QWORD PTR [rbp-0x10]
  41af2b:	mov    rsi,rcx
  41af2e:	mov    rdi,rax
  41af31:	call   403290 <memcpy@plt>
  41af36:	mov    rax,QWORD PTR [rbp-0x20]
  41af3a:	mov    rax,QWORD PTR [rax+0x8]
  41af3e:	add    QWORD PTR [rbp-0x10],rax
  41af42:	add    QWORD PTR [rbp-0x20],0x10
  41af47:	mov    eax,DWORD PTR [rbp-0x24]
  41af4a:	lea    edx,[rax-0x1]
  41af4d:	mov    DWORD PTR [rbp-0x24],edx
  41af50:	test   eax,eax
  41af52:	jne    41af18 <flatcc_emitter@@Base+0x177>
  41af54:	mov    eax,0x0
  41af59:	leave  
  41af5a:	ret    

000000000041af5b <flatcc_emitter_copy_buffer@@Base>:
  41af5b:	endbr64 
  41af5f:	push   rbp
  41af60:	mov    rbp,rsp
  41af63:	sub    rsp,0x30
  41af67:	mov    QWORD PTR [rbp-0x18],rdi
  41af6b:	mov    QWORD PTR [rbp-0x20],rsi
  41af6f:	mov    QWORD PTR [rbp-0x28],rdx
  41af73:	mov    rax,QWORD PTR [rbp-0x18]
  41af77:	mov    rax,QWORD PTR [rax+0x30]
  41af7b:	cmp    QWORD PTR [rbp-0x28],rax
  41af7f:	jae    41af8b <flatcc_emitter_copy_buffer@@Base+0x30>
  41af81:	mov    eax,0x0
  41af86:	jmp    41b08f <flatcc_emitter_copy_buffer@@Base+0x134>
  41af8b:	mov    rax,QWORD PTR [rbp-0x18]
  41af8f:	mov    rax,QWORD PTR [rax]
  41af92:	test   rax,rax
  41af95:	jne    41afa1 <flatcc_emitter_copy_buffer@@Base+0x46>
  41af97:	mov    eax,0x0
  41af9c:	jmp    41b08f <flatcc_emitter_copy_buffer@@Base+0x134>
  41afa1:	mov    rax,QWORD PTR [rbp-0x18]
  41afa5:	mov    rdx,QWORD PTR [rax]
  41afa8:	mov    rax,QWORD PTR [rbp-0x18]
  41afac:	mov    rax,QWORD PTR [rax+0x8]
  41afb0:	cmp    rdx,rax
  41afb3:	jne    41afdd <flatcc_emitter_copy_buffer@@Base+0x82>
  41afb5:	mov    rax,QWORD PTR [rbp-0x18]
  41afb9:	mov    rdx,QWORD PTR [rax+0x30]
  41afbd:	mov    rax,QWORD PTR [rbp-0x18]
  41afc1:	mov    rcx,QWORD PTR [rax+0x10]
  41afc5:	mov    rax,QWORD PTR [rbp-0x20]
  41afc9:	mov    rsi,rcx
  41afcc:	mov    rdi,rax
  41afcf:	call   403290 <memcpy@plt>
  41afd4:	mov    rax,QWORD PTR [rbp-0x20]
  41afd8:	jmp    41b08f <flatcc_emitter_copy_buffer@@Base+0x134>
  41afdd:	mov    rax,QWORD PTR [rbp-0x18]
  41afe1:	mov    rax,QWORD PTR [rax+0x18]
  41afe5:	mov    edx,0xb80
  41afea:	sub    rdx,rax
  41afed:	mov    rax,rdx
  41aff0:	mov    QWORD PTR [rbp-0x8],rax
  41aff4:	mov    rax,QWORD PTR [rbp-0x18]
  41aff8:	mov    rcx,QWORD PTR [rax+0x10]
  41affc:	mov    rdx,QWORD PTR [rbp-0x8]
  41b000:	mov    rax,QWORD PTR [rbp-0x20]
  41b004:	mov    rsi,rcx
  41b007:	mov    rdi,rax
  41b00a:	call   403290 <memcpy@plt>
  41b00f:	mov    rax,QWORD PTR [rbp-0x8]
  41b013:	add    QWORD PTR [rbp-0x20],rax
  41b017:	mov    rax,QWORD PTR [rbp-0x18]
  41b01b:	mov    rax,QWORD PTR [rax]
  41b01e:	mov    rax,QWORD PTR [rax+0xb80]
  41b025:	mov    QWORD PTR [rbp-0x10],rax
  41b029:	jmp    41b05a <flatcc_emitter_copy_buffer@@Base+0xff>
  41b02b:	mov    rcx,QWORD PTR [rbp-0x10]
  41b02f:	mov    rax,QWORD PTR [rbp-0x20]
  41b033:	mov    edx,0xb80
  41b038:	mov    rsi,rcx
  41b03b:	mov    rdi,rax
  41b03e:	call   403290 <memcpy@plt>
  41b043:	add    QWORD PTR [rbp-0x20],0xb80
  41b04b:	mov    rax,QWORD PTR [rbp-0x10]
  41b04f:	mov    rax,QWORD PTR [rax+0xb80]
  41b056:	mov    QWORD PTR [rbp-0x10],rax
  41b05a:	mov    rax,QWORD PTR [rbp-0x18]
  41b05e:	mov    rax,QWORD PTR [rax+0x8]
  41b062:	cmp    QWORD PTR [rbp-0x10],rax
  41b066:	jne    41b02b <flatcc_emitter_copy_buffer@@Base+0xd0>
  41b068:	mov    rax,QWORD PTR [rbp-0x18]
  41b06c:	mov    rax,QWORD PTR [rax+0x28]
  41b070:	mov    edx,0xb80
  41b075:	sub    rdx,rax
  41b078:	mov    rcx,QWORD PTR [rbp-0x10]
  41b07c:	mov    rax,QWORD PTR [rbp-0x20]
  41b080:	mov    rsi,rcx
  41b083:	mov    rdi,rax
  41b086:	call   403290 <memcpy@plt>
  41b08b:	mov    rax,QWORD PTR [rbp-0x20]
  41b08f:	leave  
  41b090:	ret    
  41b091:	push   rbp
  41b092:	mov    rbp,rsp
  41b095:	mov    eax,edi
  41b097:	mov    BYTE PTR [rbp-0x4],al
  41b09a:	movzx  eax,BYTE PTR [rbp-0x4]
  41b09e:	pop    rbp
  41b09f:	ret    
  41b0a0:	push   rbp
  41b0a1:	mov    rbp,rsp
  41b0a4:	sub    rsp,0x10
  41b0a8:	mov    QWORD PTR [rbp-0x8],rdi
  41b0ac:	mov    eax,esi
  41b0ae:	mov    BYTE PTR [rbp-0xc],al
  41b0b1:	movzx  eax,BYTE PTR [rbp-0xc]
  41b0b5:	mov    edi,eax
  41b0b7:	call   41b091 <flatcc_emitter_copy_buffer@@Base+0x136>
  41b0bc:	mov    rdx,QWORD PTR [rbp-0x8]
  41b0c0:	mov    BYTE PTR [rdx],al
  41b0c2:	nop
  41b0c3:	leave  
  41b0c4:	ret    
  41b0c5:	push   rbp
  41b0c6:	mov    rbp,rsp
  41b0c9:	sub    rsp,0x30
  41b0cd:	mov    QWORD PTR [rbp-0x8],rdi
  41b0d1:	mov    QWORD PTR [rbp-0x10],rsi
  41b0d5:	mov    QWORD PTR [rbp-0x18],rdx
  41b0d9:	mov    QWORD PTR [rbp-0x20],rcx
  41b0dd:	mov    DWORD PTR [rbp-0x24],r8d
  41b0e1:	mov    rax,QWORD PTR [rbp-0x8]
  41b0e5:	mov    edx,0x48
  41b0ea:	mov    esi,0x0
  41b0ef:	mov    rdi,rax
  41b0f2:	call   403230 <memset@plt>
  41b0f7:	mov    rax,QWORD PTR [rbp-0x8]
  41b0fb:	mov    rdx,QWORD PTR [rbp-0x10]
  41b0ff:	mov    QWORD PTR [rax],rdx
  41b102:	mov    rax,QWORD PTR [rbp-0x8]
  41b106:	mov    rdx,QWORD PTR [rbp-0x18]
  41b10a:	mov    QWORD PTR [rax+0x8],rdx
  41b10e:	mov    rax,QWORD PTR [rbp-0x8]
  41b112:	mov    DWORD PTR [rax+0x18],0x1
  41b119:	mov    rax,QWORD PTR [rbp-0x8]
  41b11d:	mov    edx,DWORD PTR [rbp-0x24]
  41b120:	mov    DWORD PTR [rax+0x10],edx
  41b123:	mov    rax,QWORD PTR [rbp-0x8]
  41b127:	mov    rdx,QWORD PTR [rbp-0x18]
  41b12b:	mov    QWORD PTR [rax+0x28],rdx
  41b12f:	mov    rax,QWORD PTR [rbp-0x8]
  41b133:	mov    rdx,QWORD PTR [rbp-0x20]
  41b137:	mov    QWORD PTR [rax+0x30],rdx
  41b13b:	mov    rax,QWORD PTR [rbp-0x8]
  41b13f:	mov    rdx,QWORD PTR [rbp-0x18]
  41b143:	mov    QWORD PTR [rax+0x38],rdx
  41b147:	nop
  41b148:	leave  
  41b149:	ret    
  41b14a:	push   rbp
  41b14b:	mov    rbp,rsp
  41b14e:	sub    rsp,0x20
  41b152:	mov    QWORD PTR [rbp-0x8],rdi
  41b156:	mov    QWORD PTR [rbp-0x10],rsi
  41b15a:	mov    QWORD PTR [rbp-0x18],rdx
  41b15e:	mov    rax,QWORD PTR [rbp-0x18]
  41b162:	sub    rax,QWORD PTR [rbp-0x10]
  41b166:	cmp    rax,0x1
  41b16a:	jle    41b19f <flatcc_emitter_copy_buffer@@Base+0x244>
  41b16c:	mov    rax,QWORD PTR [rbp-0x10]
  41b170:	movzx  eax,BYTE PTR [rax]
  41b173:	cmp    al,0x20
  41b175:	jle    41b17d <flatcc_emitter_copy_buffer@@Base+0x222>
  41b177:	mov    rax,QWORD PTR [rbp-0x10]
  41b17b:	jmp    41b1b6 <flatcc_emitter_copy_buffer@@Base+0x25b>
  41b17d:	mov    rax,QWORD PTR [rbp-0x10]
  41b181:	movzx  eax,BYTE PTR [rax]
  41b184:	cmp    al,0x20
  41b186:	jne    41b19f <flatcc_emitter_copy_buffer@@Base+0x244>
  41b188:	mov    rax,QWORD PTR [rbp-0x10]
  41b18c:	inc    rax
  41b18f:	movzx  eax,BYTE PTR [rax]
  41b192:	cmp    al,0x20
  41b194:	jle    41b19f <flatcc_emitter_copy_buffer@@Base+0x244>
  41b196:	mov    rax,QWORD PTR [rbp-0x10]
  41b19a:	inc    rax
  41b19d:	jmp    41b1b6 <flatcc_emitter_copy_buffer@@Base+0x25b>
  41b19f:	mov    rdx,QWORD PTR [rbp-0x18]
  41b1a3:	mov    rcx,QWORD PTR [rbp-0x10]
  41b1a7:	mov    rax,QWORD PTR [rbp-0x8]
  41b1ab:	mov    rsi,rcx
  41b1ae:	mov    rdi,rax
  41b1b1:	call   41f1a3 <flatcc_json_parser_space_ext@@Base>
  41b1b6:	leave  
  41b1b7:	ret    
  41b1b8:	push   rbp
  41b1b9:	mov    rbp,rsp
  41b1bc:	sub    rsp,0x20
  41b1c0:	mov    QWORD PTR [rbp-0x8],rdi
  41b1c4:	mov    QWORD PTR [rbp-0x10],rsi
  41b1c8:	mov    QWORD PTR [rbp-0x18],rdx
  41b1cc:	mov    rax,QWORD PTR [rbp-0x10]
  41b1d0:	cmp    rax,QWORD PTR [rbp-0x18]
  41b1d4:	je     41b1e1 <flatcc_emitter_copy_buffer@@Base+0x286>
  41b1d6:	mov    rax,QWORD PTR [rbp-0x10]
  41b1da:	movzx  eax,BYTE PTR [rax]
  41b1dd:	cmp    al,0x22
  41b1df:	je     41b1fc <flatcc_emitter_copy_buffer@@Base+0x2a1>
  41b1e1:	mov    rdx,QWORD PTR [rbp-0x18]
  41b1e5:	mov    rsi,QWORD PTR [rbp-0x10]
  41b1e9:	mov    rax,QWORD PTR [rbp-0x8]
  41b1ed:	mov    ecx,0x10
  41b1f2:	mov    rdi,rax
  41b1f5:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b1fa:	jmp    41b204 <flatcc_emitter_copy_buffer@@Base+0x2a9>
  41b1fc:	inc    QWORD PTR [rbp-0x10]
  41b200:	mov    rax,QWORD PTR [rbp-0x10]
  41b204:	leave  
  41b205:	ret    
  41b206:	push   rbp
  41b207:	mov    rbp,rsp
  41b20a:	sub    rsp,0x20
  41b20e:	mov    QWORD PTR [rbp-0x8],rdi
  41b212:	mov    QWORD PTR [rbp-0x10],rsi
  41b216:	mov    QWORD PTR [rbp-0x18],rdx
  41b21a:	mov    rax,QWORD PTR [rbp-0x10]
  41b21e:	cmp    rax,QWORD PTR [rbp-0x18]
  41b222:	je     41b22f <flatcc_emitter_copy_buffer@@Base+0x2d4>
  41b224:	mov    rax,QWORD PTR [rbp-0x10]
  41b228:	movzx  eax,BYTE PTR [rax]
  41b22b:	cmp    al,0x22
  41b22d:	je     41b24a <flatcc_emitter_copy_buffer@@Base+0x2ef>
  41b22f:	mov    rdx,QWORD PTR [rbp-0x18]
  41b233:	mov    rsi,QWORD PTR [rbp-0x10]
  41b237:	mov    rax,QWORD PTR [rbp-0x8]
  41b23b:	mov    ecx,0x14
  41b240:	mov    rdi,rax
  41b243:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b248:	jmp    41b252 <flatcc_emitter_copy_buffer@@Base+0x2f7>
  41b24a:	inc    QWORD PTR [rbp-0x10]
  41b24e:	mov    rax,QWORD PTR [rbp-0x10]
  41b252:	leave  
  41b253:	ret    
  41b254:	push   rbp
  41b255:	mov    rbp,rsp
  41b258:	sub    rsp,0x20
  41b25c:	mov    QWORD PTR [rbp-0x8],rdi
  41b260:	mov    QWORD PTR [rbp-0x10],rsi
  41b264:	mov    QWORD PTR [rbp-0x18],rdx
  41b268:	mov    rax,QWORD PTR [rbp-0x10]
  41b26c:	cmp    rax,QWORD PTR [rbp-0x18]
  41b270:	jne    41b278 <flatcc_emitter_copy_buffer@@Base+0x31d>
  41b272:	mov    rax,QWORD PTR [rbp-0x10]
  41b276:	jmp    41b2c9 <flatcc_emitter_copy_buffer@@Base+0x36e>
  41b278:	mov    rax,QWORD PTR [rbp-0x10]
  41b27c:	movzx  eax,BYTE PTR [rax]
  41b27f:	cmp    al,0x22
  41b281:	jne    41b294 <flatcc_emitter_copy_buffer@@Base+0x339>
  41b283:	inc    QWORD PTR [rbp-0x10]
  41b287:	mov    rax,QWORD PTR [rbp-0x8]
  41b28b:	mov    DWORD PTR [rax+0x14],0x0
  41b292:	jmp    41b2c5 <flatcc_emitter_copy_buffer@@Base+0x36a>
  41b294:	mov    rax,QWORD PTR [rbp-0x10]
  41b298:	movzx  eax,BYTE PTR [rax]
  41b29b:	cmp    al,0x2e
  41b29d:	jne    41b2ba <flatcc_emitter_copy_buffer@@Base+0x35f>
  41b29f:	mov    rdx,QWORD PTR [rbp-0x18]
  41b2a3:	mov    rsi,QWORD PTR [rbp-0x10]
  41b2a7:	mov    rax,QWORD PTR [rbp-0x8]
  41b2ab:	mov    ecx,0x5
  41b2b0:	mov    rdi,rax
  41b2b3:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b2b8:	jmp    41b2c9 <flatcc_emitter_copy_buffer@@Base+0x36e>
  41b2ba:	mov    rax,QWORD PTR [rbp-0x8]
  41b2be:	mov    DWORD PTR [rax+0x14],0x1
  41b2c5:	mov    rax,QWORD PTR [rbp-0x10]
  41b2c9:	leave  
  41b2ca:	ret    
  41b2cb:	push   rbp
  41b2cc:	mov    rbp,rsp
  41b2cf:	sub    rsp,0x30
  41b2d3:	mov    QWORD PTR [rbp-0x18],rdi
  41b2d7:	mov    QWORD PTR [rbp-0x20],rsi
  41b2db:	mov    QWORD PTR [rbp-0x28],rdx
  41b2df:	mov    BYTE PTR [rbp-0x2],0x0
  41b2e3:	mov    rax,QWORD PTR [rbp-0x18]
  41b2e7:	mov    eax,DWORD PTR [rax+0x14]
  41b2ea:	test   eax,eax
  41b2ec:	je     41b39c <flatcc_emitter_copy_buffer@@Base+0x441>
  41b2f2:	jmp    41b33e <flatcc_emitter_copy_buffer@@Base+0x3e3>
  41b2f4:	mov    rax,QWORD PTR [rbp-0x20]
  41b2f8:	movzx  eax,BYTE PTR [rax]
  41b2fb:	mov    BYTE PTR [rbp-0x1],al
  41b2fe:	movzx  eax,BYTE PTR [rbp-0x1]
  41b302:	mov    BYTE PTR [rbp-0x2],al
  41b305:	cmp    BYTE PTR [rbp-0x1],0x5f
  41b309:	je     41b323 <flatcc_emitter_copy_buffer@@Base+0x3c8>
  41b30b:	cmp    BYTE PTR [rbp-0x1],0x2e
  41b30f:	je     41b323 <flatcc_emitter_copy_buffer@@Base+0x3c8>
  41b311:	cmp    BYTE PTR [rbp-0x1],0x0
  41b315:	js     41b323 <flatcc_emitter_copy_buffer@@Base+0x3c8>
  41b317:	cmp    BYTE PTR [rbp-0x1],0x2f
  41b31b:	jle    41b329 <flatcc_emitter_copy_buffer@@Base+0x3ce>
  41b31d:	cmp    BYTE PTR [rbp-0x1],0x39
  41b321:	jg     41b329 <flatcc_emitter_copy_buffer@@Base+0x3ce>
  41b323:	inc    QWORD PTR [rbp-0x20]
  41b327:	jmp    41b33e <flatcc_emitter_copy_buffer@@Base+0x3e3>
  41b329:	or     BYTE PTR [rbp-0x1],0x20
  41b32d:	cmp    BYTE PTR [rbp-0x1],0x60
  41b331:	jle    41b355 <flatcc_emitter_copy_buffer@@Base+0x3fa>
  41b333:	cmp    BYTE PTR [rbp-0x1],0x7a
  41b337:	jg     41b355 <flatcc_emitter_copy_buffer@@Base+0x3fa>
  41b339:	inc    QWORD PTR [rbp-0x20]
  41b33d:	nop
  41b33e:	mov    rax,QWORD PTR [rbp-0x20]
  41b342:	cmp    rax,QWORD PTR [rbp-0x28]
  41b346:	je     41b356 <flatcc_emitter_copy_buffer@@Base+0x3fb>
  41b348:	mov    rax,QWORD PTR [rbp-0x20]
  41b34c:	movzx  eax,BYTE PTR [rax]
  41b34f:	cmp    al,0x20
  41b351:	jg     41b2f4 <flatcc_emitter_copy_buffer@@Base+0x399>
  41b353:	jmp    41b356 <flatcc_emitter_copy_buffer@@Base+0x3fb>
  41b355:	nop
  41b356:	cmp    BYTE PTR [rbp-0x2],0x2e
  41b35a:	jne    41b3e8 <flatcc_emitter_copy_buffer@@Base+0x48d>
  41b360:	mov    rdx,QWORD PTR [rbp-0x28]
  41b364:	mov    rsi,QWORD PTR [rbp-0x20]
  41b368:	mov    rax,QWORD PTR [rbp-0x18]
  41b36c:	mov    ecx,0x5
  41b371:	mov    rdi,rax
  41b374:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b379:	jmp    41b3ec <flatcc_emitter_copy_buffer@@Base+0x491>
  41b37b:	mov    rax,QWORD PTR [rbp-0x20]
  41b37f:	movzx  eax,BYTE PTR [rax]
  41b382:	cmp    al,0x5c
  41b384:	jne    41b398 <flatcc_emitter_copy_buffer@@Base+0x43d>
  41b386:	mov    rax,QWORD PTR [rbp-0x28]
  41b38a:	sub    rax,QWORD PTR [rbp-0x20]
  41b38e:	cmp    rax,0x1
  41b392:	jle    41b3b3 <flatcc_emitter_copy_buffer@@Base+0x458>
  41b394:	inc    QWORD PTR [rbp-0x20]
  41b398:	inc    QWORD PTR [rbp-0x20]
  41b39c:	mov    rax,QWORD PTR [rbp-0x20]
  41b3a0:	cmp    rax,QWORD PTR [rbp-0x28]
  41b3a4:	je     41b3b4 <flatcc_emitter_copy_buffer@@Base+0x459>
  41b3a6:	mov    rax,QWORD PTR [rbp-0x20]
  41b3aa:	movzx  eax,BYTE PTR [rax]
  41b3ad:	cmp    al,0x22
  41b3af:	jne    41b37b <flatcc_emitter_copy_buffer@@Base+0x420>
  41b3b1:	jmp    41b3b4 <flatcc_emitter_copy_buffer@@Base+0x459>
  41b3b3:	nop
  41b3b4:	mov    rax,QWORD PTR [rbp-0x20]
  41b3b8:	cmp    rax,QWORD PTR [rbp-0x28]
  41b3bc:	je     41b3c9 <flatcc_emitter_copy_buffer@@Base+0x46e>
  41b3be:	mov    rax,QWORD PTR [rbp-0x20]
  41b3c2:	movzx  eax,BYTE PTR [rax]
  41b3c5:	cmp    al,0x22
  41b3c7:	je     41b3e4 <flatcc_emitter_copy_buffer@@Base+0x489>
  41b3c9:	mov    rdx,QWORD PTR [rbp-0x28]
  41b3cd:	mov    rsi,QWORD PTR [rbp-0x20]
  41b3d1:	mov    rax,QWORD PTR [rbp-0x18]
  41b3d5:	mov    ecx,0x14
  41b3da:	mov    rdi,rax
  41b3dd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b3e2:	jmp    41b3ec <flatcc_emitter_copy_buffer@@Base+0x491>
  41b3e4:	inc    QWORD PTR [rbp-0x20]
  41b3e8:	mov    rax,QWORD PTR [rbp-0x20]
  41b3ec:	leave  
  41b3ed:	ret    
  41b3ee:	push   rbp
  41b3ef:	mov    rbp,rsp
  41b3f2:	sub    rsp,0x20
  41b3f6:	mov    QWORD PTR [rbp-0x8],rdi
  41b3fa:	mov    QWORD PTR [rbp-0x10],rsi
  41b3fe:	mov    QWORD PTR [rbp-0x18],rdx
  41b402:	mov    rdx,QWORD PTR [rbp-0x18]
  41b406:	mov    rcx,QWORD PTR [rbp-0x10]
  41b40a:	mov    rax,QWORD PTR [rbp-0x8]
  41b40e:	mov    rsi,rcx
  41b411:	mov    rdi,rax
  41b414:	call   41b254 <flatcc_emitter_copy_buffer@@Base+0x2f9>
  41b419:	mov    QWORD PTR [rbp-0x10],rax
  41b41d:	mov    rax,QWORD PTR [rbp-0x8]
  41b421:	mov    eax,DWORD PTR [rax+0x14]
  41b424:	test   eax,eax
  41b426:	jne    41b443 <flatcc_emitter_copy_buffer@@Base+0x4e8>
  41b428:	mov    rdx,QWORD PTR [rbp-0x18]
  41b42c:	mov    rcx,QWORD PTR [rbp-0x10]
  41b430:	mov    rax,QWORD PTR [rbp-0x8]
  41b434:	mov    rsi,rcx
  41b437:	mov    rdi,rax
  41b43a:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b43f:	mov    QWORD PTR [rbp-0x10],rax
  41b443:	mov    rax,QWORD PTR [rbp-0x10]
  41b447:	leave  
  41b448:	ret    
  41b449:	push   rbp
  41b44a:	mov    rbp,rsp
  41b44d:	sub    rsp,0x20
  41b451:	mov    QWORD PTR [rbp-0x8],rdi
  41b455:	mov    QWORD PTR [rbp-0x10],rsi
  41b459:	mov    QWORD PTR [rbp-0x18],rdx
  41b45d:	mov    QWORD PTR [rbp-0x20],rcx
  41b461:	mov    rdx,QWORD PTR [rbp-0x18]
  41b465:	mov    rcx,QWORD PTR [rbp-0x10]
  41b469:	mov    rax,QWORD PTR [rbp-0x8]
  41b46d:	mov    rsi,rcx
  41b470:	mov    rdi,rax
  41b473:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b478:	mov    QWORD PTR [rbp-0x10],rax
  41b47c:	mov    rax,QWORD PTR [rbp-0x10]
  41b480:	cmp    rax,QWORD PTR [rbp-0x18]
  41b484:	jne    41b499 <flatcc_emitter_copy_buffer@@Base+0x53e>
  41b486:	mov    rax,QWORD PTR [rbp-0x20]
  41b48a:	mov    DWORD PTR [rax],0x0
  41b490:	mov    rax,QWORD PTR [rbp-0x10]
  41b494:	jmp    41b585 <flatcc_emitter_copy_buffer@@Base+0x62a>
  41b499:	mov    rax,QWORD PTR [rbp-0x10]
  41b49d:	movzx  eax,BYTE PTR [rax]
  41b4a0:	cmp    al,0x2c
  41b4a2:	je     41b4f7 <flatcc_emitter_copy_buffer@@Base+0x59c>
  41b4a4:	mov    rax,QWORD PTR [rbp-0x20]
  41b4a8:	mov    DWORD PTR [rax],0x0
  41b4ae:	mov    rax,QWORD PTR [rbp-0x10]
  41b4b2:	movzx  eax,BYTE PTR [rax]
  41b4b5:	cmp    al,0x7d
  41b4b7:	je     41b4d7 <flatcc_emitter_copy_buffer@@Base+0x57c>
  41b4b9:	mov    rdx,QWORD PTR [rbp-0x18]
  41b4bd:	mov    rsi,QWORD PTR [rbp-0x10]
  41b4c1:	mov    rax,QWORD PTR [rbp-0x8]
  41b4c5:	mov    ecx,0xa
  41b4ca:	mov    rdi,rax
  41b4cd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b4d2:	jmp    41b585 <flatcc_emitter_copy_buffer@@Base+0x62a>
  41b4d7:	mov    rax,QWORD PTR [rbp-0x10]
  41b4db:	lea    rcx,[rax+0x1]
  41b4df:	mov    rdx,QWORD PTR [rbp-0x18]
  41b4e3:	mov    rax,QWORD PTR [rbp-0x8]
  41b4e7:	mov    rsi,rcx
  41b4ea:	mov    rdi,rax
  41b4ed:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b4f2:	jmp    41b585 <flatcc_emitter_copy_buffer@@Base+0x62a>
  41b4f7:	mov    rax,QWORD PTR [rbp-0x10]
  41b4fb:	lea    rcx,[rax+0x1]
  41b4ff:	mov    rdx,QWORD PTR [rbp-0x18]
  41b503:	mov    rax,QWORD PTR [rbp-0x8]
  41b507:	mov    rsi,rcx
  41b50a:	mov    rdi,rax
  41b50d:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b512:	mov    QWORD PTR [rbp-0x10],rax
  41b516:	mov    rax,QWORD PTR [rbp-0x10]
  41b51a:	cmp    rax,QWORD PTR [rbp-0x18]
  41b51e:	jne    41b545 <flatcc_emitter_copy_buffer@@Base+0x5ea>
  41b520:	mov    rax,QWORD PTR [rbp-0x20]
  41b524:	mov    DWORD PTR [rax],0x0
  41b52a:	mov    rdx,QWORD PTR [rbp-0x18]
  41b52e:	mov    rsi,QWORD PTR [rbp-0x10]
  41b532:	mov    rax,QWORD PTR [rbp-0x8]
  41b536:	mov    ecx,0xa
  41b53b:	mov    rdi,rax
  41b53e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b543:	jmp    41b585 <flatcc_emitter_copy_buffer@@Base+0x62a>
  41b545:	mov    rax,QWORD PTR [rbp-0x10]
  41b549:	movzx  eax,BYTE PTR [rax]
  41b54c:	cmp    al,0x7d
  41b54e:	jne    41b577 <flatcc_emitter_copy_buffer@@Base+0x61c>
  41b550:	mov    rax,QWORD PTR [rbp-0x20]
  41b554:	mov    DWORD PTR [rax],0x0
  41b55a:	mov    rax,QWORD PTR [rbp-0x10]
  41b55e:	lea    rcx,[rax+0x1]
  41b562:	mov    rdx,QWORD PTR [rbp-0x18]
  41b566:	mov    rax,QWORD PTR [rbp-0x8]
  41b56a:	mov    rsi,rcx
  41b56d:	mov    rdi,rax
  41b570:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b575:	jmp    41b585 <flatcc_emitter_copy_buffer@@Base+0x62a>
  41b577:	mov    rax,QWORD PTR [rbp-0x20]
  41b57b:	mov    DWORD PTR [rax],0x1
  41b581:	mov    rax,QWORD PTR [rbp-0x10]
  41b585:	leave  
  41b586:	ret    
  41b587:	push   rbp
  41b588:	mov    rbp,rsp
  41b58b:	sub    rsp,0x20
  41b58f:	mov    QWORD PTR [rbp-0x8],rdi
  41b593:	mov    QWORD PTR [rbp-0x10],rsi
  41b597:	mov    QWORD PTR [rbp-0x18],rdx
  41b59b:	mov    QWORD PTR [rbp-0x20],rcx
  41b59f:	mov    rax,QWORD PTR [rbp-0x10]
  41b5a3:	cmp    rax,QWORD PTR [rbp-0x18]
  41b5a7:	je     41b5b4 <flatcc_emitter_copy_buffer@@Base+0x659>
  41b5a9:	mov    rax,QWORD PTR [rbp-0x10]
  41b5ad:	movzx  eax,BYTE PTR [rax]
  41b5b0:	cmp    al,0x5b
  41b5b2:	je     41b5d9 <flatcc_emitter_copy_buffer@@Base+0x67e>
  41b5b4:	mov    rax,QWORD PTR [rbp-0x20]
  41b5b8:	mov    DWORD PTR [rax],0x0
  41b5be:	mov    rdx,QWORD PTR [rbp-0x18]
  41b5c2:	mov    rsi,QWORD PTR [rbp-0x10]
  41b5c6:	mov    rax,QWORD PTR [rbp-0x8]
  41b5ca:	mov    ecx,0x16
  41b5cf:	mov    rdi,rax
  41b5d2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b5d7:	jmp    41b642 <flatcc_emitter_copy_buffer@@Base+0x6e7>
  41b5d9:	mov    rax,QWORD PTR [rbp-0x10]
  41b5dd:	lea    rcx,[rax+0x1]
  41b5e1:	mov    rdx,QWORD PTR [rbp-0x18]
  41b5e5:	mov    rax,QWORD PTR [rbp-0x8]
  41b5e9:	mov    rsi,rcx
  41b5ec:	mov    rdi,rax
  41b5ef:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b5f4:	mov    QWORD PTR [rbp-0x10],rax
  41b5f8:	mov    rax,QWORD PTR [rbp-0x10]
  41b5fc:	cmp    rax,QWORD PTR [rbp-0x18]
  41b600:	je     41b634 <flatcc_emitter_copy_buffer@@Base+0x6d9>
  41b602:	mov    rax,QWORD PTR [rbp-0x10]
  41b606:	movzx  eax,BYTE PTR [rax]
  41b609:	cmp    al,0x5d
  41b60b:	jne    41b634 <flatcc_emitter_copy_buffer@@Base+0x6d9>
  41b60d:	mov    rax,QWORD PTR [rbp-0x20]
  41b611:	mov    DWORD PTR [rax],0x0
  41b617:	mov    rax,QWORD PTR [rbp-0x10]
  41b61b:	lea    rcx,[rax+0x1]
  41b61f:	mov    rdx,QWORD PTR [rbp-0x18]
  41b623:	mov    rax,QWORD PTR [rbp-0x8]
  41b627:	mov    rsi,rcx
  41b62a:	mov    rdi,rax
  41b62d:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b632:	jmp    41b642 <flatcc_emitter_copy_buffer@@Base+0x6e7>
  41b634:	mov    rax,QWORD PTR [rbp-0x20]
  41b638:	mov    DWORD PTR [rax],0x1
  41b63e:	mov    rax,QWORD PTR [rbp-0x10]
  41b642:	leave  
  41b643:	ret    
  41b644:	push   rbp
  41b645:	mov    rbp,rsp
  41b648:	sub    rsp,0x20
  41b64c:	mov    QWORD PTR [rbp-0x8],rdi
  41b650:	mov    QWORD PTR [rbp-0x10],rsi
  41b654:	mov    QWORD PTR [rbp-0x18],rdx
  41b658:	mov    QWORD PTR [rbp-0x20],rcx
  41b65c:	mov    rdx,QWORD PTR [rbp-0x18]
  41b660:	mov    rcx,QWORD PTR [rbp-0x10]
  41b664:	mov    rax,QWORD PTR [rbp-0x8]
  41b668:	mov    rsi,rcx
  41b66b:	mov    rdi,rax
  41b66e:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b673:	mov    QWORD PTR [rbp-0x10],rax
  41b677:	mov    rax,QWORD PTR [rbp-0x10]
  41b67b:	cmp    rax,QWORD PTR [rbp-0x18]
  41b67f:	jne    41b694 <flatcc_emitter_copy_buffer@@Base+0x739>
  41b681:	mov    rax,QWORD PTR [rbp-0x20]
  41b685:	mov    DWORD PTR [rax],0x0
  41b68b:	mov    rax,QWORD PTR [rbp-0x10]
  41b68f:	jmp    41b780 <flatcc_emitter_copy_buffer@@Base+0x825>
  41b694:	mov    rax,QWORD PTR [rbp-0x10]
  41b698:	movzx  eax,BYTE PTR [rax]
  41b69b:	cmp    al,0x2c
  41b69d:	je     41b6f2 <flatcc_emitter_copy_buffer@@Base+0x797>
  41b69f:	mov    rax,QWORD PTR [rbp-0x20]
  41b6a3:	mov    DWORD PTR [rax],0x0
  41b6a9:	mov    rax,QWORD PTR [rbp-0x10]
  41b6ad:	movzx  eax,BYTE PTR [rax]
  41b6b0:	cmp    al,0x5d
  41b6b2:	je     41b6d2 <flatcc_emitter_copy_buffer@@Base+0x777>
  41b6b4:	mov    rdx,QWORD PTR [rbp-0x18]
  41b6b8:	mov    rsi,QWORD PTR [rbp-0x10]
  41b6bc:	mov    rax,QWORD PTR [rbp-0x8]
  41b6c0:	mov    ecx,0x9
  41b6c5:	mov    rdi,rax
  41b6c8:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b6cd:	jmp    41b780 <flatcc_emitter_copy_buffer@@Base+0x825>
  41b6d2:	mov    rax,QWORD PTR [rbp-0x10]
  41b6d6:	lea    rcx,[rax+0x1]
  41b6da:	mov    rdx,QWORD PTR [rbp-0x18]
  41b6de:	mov    rax,QWORD PTR [rbp-0x8]
  41b6e2:	mov    rsi,rcx
  41b6e5:	mov    rdi,rax
  41b6e8:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b6ed:	jmp    41b780 <flatcc_emitter_copy_buffer@@Base+0x825>
  41b6f2:	mov    rax,QWORD PTR [rbp-0x10]
  41b6f6:	lea    rcx,[rax+0x1]
  41b6fa:	mov    rdx,QWORD PTR [rbp-0x18]
  41b6fe:	mov    rax,QWORD PTR [rbp-0x8]
  41b702:	mov    rsi,rcx
  41b705:	mov    rdi,rax
  41b708:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b70d:	mov    QWORD PTR [rbp-0x10],rax
  41b711:	mov    rax,QWORD PTR [rbp-0x10]
  41b715:	cmp    rax,QWORD PTR [rbp-0x18]
  41b719:	jne    41b740 <flatcc_emitter_copy_buffer@@Base+0x7e5>
  41b71b:	mov    rax,QWORD PTR [rbp-0x20]
  41b71f:	mov    DWORD PTR [rax],0x0
  41b725:	mov    rdx,QWORD PTR [rbp-0x18]
  41b729:	mov    rsi,QWORD PTR [rbp-0x10]
  41b72d:	mov    rax,QWORD PTR [rbp-0x8]
  41b731:	mov    ecx,0x9
  41b736:	mov    rdi,rax
  41b739:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b73e:	jmp    41b780 <flatcc_emitter_copy_buffer@@Base+0x825>
  41b740:	mov    rax,QWORD PTR [rbp-0x10]
  41b744:	movzx  eax,BYTE PTR [rax]
  41b747:	cmp    al,0x5d
  41b749:	jne    41b772 <flatcc_emitter_copy_buffer@@Base+0x817>
  41b74b:	mov    rax,QWORD PTR [rbp-0x20]
  41b74f:	mov    DWORD PTR [rax],0x0
  41b755:	mov    rax,QWORD PTR [rbp-0x10]
  41b759:	lea    rcx,[rax+0x1]
  41b75d:	mov    rdx,QWORD PTR [rbp-0x18]
  41b761:	mov    rax,QWORD PTR [rbp-0x8]
  41b765:	mov    rsi,rcx
  41b768:	mov    rdi,rax
  41b76b:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41b770:	jmp    41b780 <flatcc_emitter_copy_buffer@@Base+0x825>
  41b772:	mov    rax,QWORD PTR [rbp-0x20]
  41b776:	mov    DWORD PTR [rax],0x1
  41b77c:	mov    rax,QWORD PTR [rbp-0x10]
  41b780:	leave  
  41b781:	ret    
  41b782:	push   rbp
  41b783:	mov    rbp,rsp
  41b786:	sub    rsp,0x30
  41b78a:	mov    QWORD PTR [rbp-0x8],rdi
  41b78e:	mov    QWORD PTR [rbp-0x10],rsi
  41b792:	mov    QWORD PTR [rbp-0x18],rdx
  41b796:	mov    DWORD PTR [rbp-0x1c],ecx
  41b799:	mov    QWORD PTR [rbp-0x28],r8
  41b79d:	mov    QWORD PTR [rbp-0x30],r9
  41b7a1:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b7a5:	je     41b7c2 <flatcc_emitter_copy_buffer@@Base+0x867>
  41b7a7:	mov    rdx,QWORD PTR [rbp-0x18]
  41b7ab:	mov    rsi,QWORD PTR [rbp-0x10]
  41b7af:	mov    rax,QWORD PTR [rbp-0x8]
  41b7b3:	mov    ecx,0x8
  41b7b8:	mov    rdi,rax
  41b7bb:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b7c0:	jmp    41b7d1 <flatcc_emitter_copy_buffer@@Base+0x876>
  41b7c2:	mov    rax,QWORD PTR [rbp-0x30]
  41b7c6:	mov    rdx,QWORD PTR [rbp-0x28]
  41b7ca:	mov    QWORD PTR [rax],rdx
  41b7cd:	mov    rax,QWORD PTR [rbp-0x10]
  41b7d1:	leave  
  41b7d2:	ret    
  41b7d3:	push   rbp
  41b7d4:	mov    rbp,rsp
  41b7d7:	sub    rsp,0x30
  41b7db:	mov    QWORD PTR [rbp-0x8],rdi
  41b7df:	mov    QWORD PTR [rbp-0x10],rsi
  41b7e3:	mov    QWORD PTR [rbp-0x18],rdx
  41b7e7:	mov    DWORD PTR [rbp-0x1c],ecx
  41b7ea:	mov    QWORD PTR [rbp-0x28],r8
  41b7ee:	mov    QWORD PTR [rbp-0x30],r9
  41b7f2:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b7f6:	je     41b813 <flatcc_emitter_copy_buffer@@Base+0x8b8>
  41b7f8:	mov    rdx,QWORD PTR [rbp-0x18]
  41b7fc:	mov    rsi,QWORD PTR [rbp-0x10]
  41b800:	mov    rax,QWORD PTR [rbp-0x8]
  41b804:	mov    ecx,0x8
  41b809:	mov    rdi,rax
  41b80c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b811:	jmp    41b827 <flatcc_emitter_copy_buffer@@Base+0x8cc>
  41b813:	cmp    QWORD PTR [rbp-0x28],0x0
  41b818:	setne  al
  41b81b:	mov    edx,eax
  41b81d:	mov    rax,QWORD PTR [rbp-0x30]
  41b821:	mov    BYTE PTR [rax],dl
  41b823:	mov    rax,QWORD PTR [rbp-0x10]
  41b827:	leave  
  41b828:	ret    
  41b829:	push   rbp
  41b82a:	mov    rbp,rsp
  41b82d:	sub    rsp,0x30
  41b831:	mov    QWORD PTR [rbp-0x8],rdi
  41b835:	mov    QWORD PTR [rbp-0x10],rsi
  41b839:	mov    QWORD PTR [rbp-0x18],rdx
  41b83d:	mov    DWORD PTR [rbp-0x1c],ecx
  41b840:	mov    QWORD PTR [rbp-0x28],r8
  41b844:	mov    QWORD PTR [rbp-0x30],r9
  41b848:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b84c:	je     41b869 <flatcc_emitter_copy_buffer@@Base+0x90e>
  41b84e:	mov    rdx,QWORD PTR [rbp-0x18]
  41b852:	mov    rsi,QWORD PTR [rbp-0x10]
  41b856:	mov    rax,QWORD PTR [rbp-0x8]
  41b85a:	mov    ecx,0x8
  41b85f:	mov    rdi,rax
  41b862:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b867:	jmp    41b89f <flatcc_emitter_copy_buffer@@Base+0x944>
  41b869:	mov    eax,0xffffffff
  41b86e:	cmp    QWORD PTR [rbp-0x28],rax
  41b872:	jbe    41b88f <flatcc_emitter_copy_buffer@@Base+0x934>
  41b874:	mov    rdx,QWORD PTR [rbp-0x18]
  41b878:	mov    rsi,QWORD PTR [rbp-0x10]
  41b87c:	mov    rax,QWORD PTR [rbp-0x8]
  41b880:	mov    ecx,0x7
  41b885:	mov    rdi,rax
  41b888:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b88d:	jmp    41b89f <flatcc_emitter_copy_buffer@@Base+0x944>
  41b88f:	mov    rax,QWORD PTR [rbp-0x28]
  41b893:	mov    edx,eax
  41b895:	mov    rax,QWORD PTR [rbp-0x30]
  41b899:	mov    DWORD PTR [rax],edx
  41b89b:	mov    rax,QWORD PTR [rbp-0x10]
  41b89f:	leave  
  41b8a0:	ret    
  41b8a1:	push   rbp
  41b8a2:	mov    rbp,rsp
  41b8a5:	sub    rsp,0x30
  41b8a9:	mov    QWORD PTR [rbp-0x8],rdi
  41b8ad:	mov    QWORD PTR [rbp-0x10],rsi
  41b8b1:	mov    QWORD PTR [rbp-0x18],rdx
  41b8b5:	mov    DWORD PTR [rbp-0x1c],ecx
  41b8b8:	mov    QWORD PTR [rbp-0x28],r8
  41b8bc:	mov    QWORD PTR [rbp-0x30],r9
  41b8c0:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b8c4:	je     41b8e1 <flatcc_emitter_copy_buffer@@Base+0x986>
  41b8c6:	mov    rdx,QWORD PTR [rbp-0x18]
  41b8ca:	mov    rsi,QWORD PTR [rbp-0x10]
  41b8ce:	mov    rax,QWORD PTR [rbp-0x8]
  41b8d2:	mov    ecx,0x8
  41b8d7:	mov    rdi,rax
  41b8da:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b8df:	jmp    41b917 <flatcc_emitter_copy_buffer@@Base+0x9bc>
  41b8e1:	cmp    QWORD PTR [rbp-0x28],0xffff
  41b8e9:	jbe    41b906 <flatcc_emitter_copy_buffer@@Base+0x9ab>
  41b8eb:	mov    rdx,QWORD PTR [rbp-0x18]
  41b8ef:	mov    rsi,QWORD PTR [rbp-0x10]
  41b8f3:	mov    rax,QWORD PTR [rbp-0x8]
  41b8f7:	mov    ecx,0x7
  41b8fc:	mov    rdi,rax
  41b8ff:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b904:	jmp    41b917 <flatcc_emitter_copy_buffer@@Base+0x9bc>
  41b906:	mov    rax,QWORD PTR [rbp-0x28]
  41b90a:	mov    edx,eax
  41b90c:	mov    rax,QWORD PTR [rbp-0x30]
  41b910:	mov    WORD PTR [rax],dx
  41b913:	mov    rax,QWORD PTR [rbp-0x10]
  41b917:	leave  
  41b918:	ret    
  41b919:	push   rbp
  41b91a:	mov    rbp,rsp
  41b91d:	sub    rsp,0x30
  41b921:	mov    QWORD PTR [rbp-0x8],rdi
  41b925:	mov    QWORD PTR [rbp-0x10],rsi
  41b929:	mov    QWORD PTR [rbp-0x18],rdx
  41b92d:	mov    DWORD PTR [rbp-0x1c],ecx
  41b930:	mov    QWORD PTR [rbp-0x28],r8
  41b934:	mov    QWORD PTR [rbp-0x30],r9
  41b938:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b93c:	je     41b959 <flatcc_emitter_copy_buffer@@Base+0x9fe>
  41b93e:	mov    rdx,QWORD PTR [rbp-0x18]
  41b942:	mov    rsi,QWORD PTR [rbp-0x10]
  41b946:	mov    rax,QWORD PTR [rbp-0x8]
  41b94a:	mov    ecx,0x8
  41b94f:	mov    rdi,rax
  41b952:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b957:	jmp    41b98e <flatcc_emitter_copy_buffer@@Base+0xa33>
  41b959:	cmp    QWORD PTR [rbp-0x28],0xff
  41b961:	jbe    41b97e <flatcc_emitter_copy_buffer@@Base+0xa23>
  41b963:	mov    rdx,QWORD PTR [rbp-0x18]
  41b967:	mov    rsi,QWORD PTR [rbp-0x10]
  41b96b:	mov    rax,QWORD PTR [rbp-0x8]
  41b96f:	mov    ecx,0x7
  41b974:	mov    rdi,rax
  41b977:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b97c:	jmp    41b98e <flatcc_emitter_copy_buffer@@Base+0xa33>
  41b97e:	mov    rax,QWORD PTR [rbp-0x28]
  41b982:	mov    edx,eax
  41b984:	mov    rax,QWORD PTR [rbp-0x30]
  41b988:	mov    BYTE PTR [rax],dl
  41b98a:	mov    rax,QWORD PTR [rbp-0x10]
  41b98e:	leave  
  41b98f:	ret    
  41b990:	push   rbp
  41b991:	mov    rbp,rsp
  41b994:	sub    rsp,0x30
  41b998:	mov    QWORD PTR [rbp-0x8],rdi
  41b99c:	mov    QWORD PTR [rbp-0x10],rsi
  41b9a0:	mov    QWORD PTR [rbp-0x18],rdx
  41b9a4:	mov    DWORD PTR [rbp-0x1c],ecx
  41b9a7:	mov    QWORD PTR [rbp-0x28],r8
  41b9ab:	mov    QWORD PTR [rbp-0x30],r9
  41b9af:	cmp    DWORD PTR [rbp-0x1c],0x0
  41b9b3:	je     41b9f3 <flatcc_emitter_copy_buffer@@Base+0xa98>
  41b9b5:	movabs rax,0x8000000000000000
  41b9bf:	cmp    QWORD PTR [rbp-0x28],rax
  41b9c3:	jbe    41b9e0 <flatcc_emitter_copy_buffer@@Base+0xa85>
  41b9c5:	mov    rdx,QWORD PTR [rbp-0x18]
  41b9c9:	mov    rsi,QWORD PTR [rbp-0x10]
  41b9cd:	mov    rax,QWORD PTR [rbp-0x8]
  41b9d1:	mov    ecx,0x8
  41b9d6:	mov    rdi,rax
  41b9d9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41b9de:	jmp    41ba26 <flatcc_emitter_copy_buffer@@Base+0xacb>
  41b9e0:	mov    rax,QWORD PTR [rbp-0x28]
  41b9e4:	neg    rax
  41b9e7:	mov    rdx,rax
  41b9ea:	mov    rax,QWORD PTR [rbp-0x30]
  41b9ee:	mov    QWORD PTR [rax],rdx
  41b9f1:	jmp    41ba22 <flatcc_emitter_copy_buffer@@Base+0xac7>
  41b9f3:	mov    rax,QWORD PTR [rbp-0x28]
  41b9f7:	test   rax,rax
  41b9fa:	jns    41ba17 <flatcc_emitter_copy_buffer@@Base+0xabc>
  41b9fc:	mov    rdx,QWORD PTR [rbp-0x18]
  41ba00:	mov    rsi,QWORD PTR [rbp-0x10]
  41ba04:	mov    rax,QWORD PTR [rbp-0x8]
  41ba08:	mov    ecx,0x7
  41ba0d:	mov    rdi,rax
  41ba10:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41ba15:	jmp    41ba26 <flatcc_emitter_copy_buffer@@Base+0xacb>
  41ba17:	mov    rdx,QWORD PTR [rbp-0x28]
  41ba1b:	mov    rax,QWORD PTR [rbp-0x30]
  41ba1f:	mov    QWORD PTR [rax],rdx
  41ba22:	mov    rax,QWORD PTR [rbp-0x10]
  41ba26:	leave  
  41ba27:	ret    
  41ba28:	push   rbp
  41ba29:	mov    rbp,rsp
  41ba2c:	sub    rsp,0x30
  41ba30:	mov    QWORD PTR [rbp-0x8],rdi
  41ba34:	mov    QWORD PTR [rbp-0x10],rsi
  41ba38:	mov    QWORD PTR [rbp-0x18],rdx
  41ba3c:	mov    DWORD PTR [rbp-0x1c],ecx
  41ba3f:	mov    QWORD PTR [rbp-0x28],r8
  41ba43:	mov    QWORD PTR [rbp-0x30],r9
  41ba47:	cmp    DWORD PTR [rbp-0x1c],0x0
  41ba4b:	je     41ba83 <flatcc_emitter_copy_buffer@@Base+0xb28>
  41ba4d:	mov    eax,0x80000000
  41ba52:	cmp    QWORD PTR [rbp-0x28],rax
  41ba56:	jbe    41ba73 <flatcc_emitter_copy_buffer@@Base+0xb18>
  41ba58:	mov    rdx,QWORD PTR [rbp-0x18]
  41ba5c:	mov    rsi,QWORD PTR [rbp-0x10]
  41ba60:	mov    rax,QWORD PTR [rbp-0x8]
  41ba64:	mov    ecx,0x8
  41ba69:	mov    rdi,rax
  41ba6c:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41ba71:	jmp    41bab8 <flatcc_emitter_copy_buffer@@Base+0xb5d>
  41ba73:	mov    rax,QWORD PTR [rbp-0x28]
  41ba77:	neg    eax
  41ba79:	mov    edx,eax
  41ba7b:	mov    rax,QWORD PTR [rbp-0x30]
  41ba7f:	mov    DWORD PTR [rax],edx
  41ba81:	jmp    41bab4 <flatcc_emitter_copy_buffer@@Base+0xb59>
  41ba83:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  41ba8b:	jbe    41baa8 <flatcc_emitter_copy_buffer@@Base+0xb4d>
  41ba8d:	mov    rdx,QWORD PTR [rbp-0x18]
  41ba91:	mov    rsi,QWORD PTR [rbp-0x10]
  41ba95:	mov    rax,QWORD PTR [rbp-0x8]
  41ba99:	mov    ecx,0x7
  41ba9e:	mov    rdi,rax
  41baa1:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41baa6:	jmp    41bab8 <flatcc_emitter_copy_buffer@@Base+0xb5d>
  41baa8:	mov    rax,QWORD PTR [rbp-0x28]
  41baac:	mov    edx,eax
  41baae:	mov    rax,QWORD PTR [rbp-0x30]
  41bab2:	mov    DWORD PTR [rax],edx
  41bab4:	mov    rax,QWORD PTR [rbp-0x10]
  41bab8:	leave  
  41bab9:	ret    
  41baba:	push   rbp
  41babb:	mov    rbp,rsp
  41babe:	sub    rsp,0x30
  41bac2:	mov    QWORD PTR [rbp-0x8],rdi
  41bac6:	mov    QWORD PTR [rbp-0x10],rsi
  41baca:	mov    QWORD PTR [rbp-0x18],rdx
  41bace:	mov    DWORD PTR [rbp-0x1c],ecx
  41bad1:	mov    QWORD PTR [rbp-0x28],r8
  41bad5:	mov    QWORD PTR [rbp-0x30],r9
  41bad9:	cmp    DWORD PTR [rbp-0x1c],0x0
  41badd:	je     41bb15 <flatcc_emitter_copy_buffer@@Base+0xbba>
  41badf:	cmp    QWORD PTR [rbp-0x28],0x8000
  41bae7:	jbe    41bb04 <flatcc_emitter_copy_buffer@@Base+0xba9>
  41bae9:	mov    rdx,QWORD PTR [rbp-0x18]
  41baed:	mov    rsi,QWORD PTR [rbp-0x10]
  41baf1:	mov    rax,QWORD PTR [rbp-0x8]
  41baf5:	mov    ecx,0x8
  41bafa:	mov    rdi,rax
  41bafd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41bb02:	jmp    41bb4b <flatcc_emitter_copy_buffer@@Base+0xbf0>
  41bb04:	mov    rax,QWORD PTR [rbp-0x28]
  41bb08:	neg    eax
  41bb0a:	mov    edx,eax
  41bb0c:	mov    rax,QWORD PTR [rbp-0x30]
  41bb10:	mov    WORD PTR [rax],dx
  41bb13:	jmp    41bb47 <flatcc_emitter_copy_buffer@@Base+0xbec>
  41bb15:	cmp    QWORD PTR [rbp-0x28],0x7fff
  41bb1d:	jbe    41bb3a <flatcc_emitter_copy_buffer@@Base+0xbdf>
  41bb1f:	mov    rdx,QWORD PTR [rbp-0x18]
  41bb23:	mov    rsi,QWORD PTR [rbp-0x10]
  41bb27:	mov    rax,QWORD PTR [rbp-0x8]
  41bb2b:	mov    ecx,0x7
  41bb30:	mov    rdi,rax
  41bb33:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41bb38:	jmp    41bb4b <flatcc_emitter_copy_buffer@@Base+0xbf0>
  41bb3a:	mov    rax,QWORD PTR [rbp-0x28]
  41bb3e:	mov    edx,eax
  41bb40:	mov    rax,QWORD PTR [rbp-0x30]
  41bb44:	mov    WORD PTR [rax],dx
  41bb47:	mov    rax,QWORD PTR [rbp-0x10]
  41bb4b:	leave  
  41bb4c:	ret    
  41bb4d:	push   rbp
  41bb4e:	mov    rbp,rsp
  41bb51:	sub    rsp,0x30
  41bb55:	mov    QWORD PTR [rbp-0x8],rdi
  41bb59:	mov    QWORD PTR [rbp-0x10],rsi
  41bb5d:	mov    QWORD PTR [rbp-0x18],rdx
  41bb61:	mov    DWORD PTR [rbp-0x1c],ecx
  41bb64:	mov    QWORD PTR [rbp-0x28],r8
  41bb68:	mov    QWORD PTR [rbp-0x30],r9
  41bb6c:	cmp    DWORD PTR [rbp-0x1c],0x0
  41bb70:	je     41bba7 <flatcc_emitter_copy_buffer@@Base+0xc4c>
  41bb72:	cmp    QWORD PTR [rbp-0x28],0x80
  41bb7a:	jbe    41bb97 <flatcc_emitter_copy_buffer@@Base+0xc3c>
  41bb7c:	mov    rdx,QWORD PTR [rbp-0x18]
  41bb80:	mov    rsi,QWORD PTR [rbp-0x10]
  41bb84:	mov    rax,QWORD PTR [rbp-0x8]
  41bb88:	mov    ecx,0x8
  41bb8d:	mov    rdi,rax
  41bb90:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41bb95:	jmp    41bbd9 <flatcc_emitter_copy_buffer@@Base+0xc7e>
  41bb97:	mov    rax,QWORD PTR [rbp-0x28]
  41bb9b:	neg    eax
  41bb9d:	mov    edx,eax
  41bb9f:	mov    rax,QWORD PTR [rbp-0x30]
  41bba3:	mov    BYTE PTR [rax],dl
  41bba5:	jmp    41bbd5 <flatcc_emitter_copy_buffer@@Base+0xc7a>
  41bba7:	cmp    QWORD PTR [rbp-0x28],0x7f
  41bbac:	jbe    41bbc9 <flatcc_emitter_copy_buffer@@Base+0xc6e>
  41bbae:	mov    rdx,QWORD PTR [rbp-0x18]
  41bbb2:	mov    rsi,QWORD PTR [rbp-0x10]
  41bbb6:	mov    rax,QWORD PTR [rbp-0x8]
  41bbba:	mov    ecx,0x7
  41bbbf:	mov    rdi,rax
  41bbc2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41bbc7:	jmp    41bbd9 <flatcc_emitter_copy_buffer@@Base+0xc7e>
  41bbc9:	mov    rax,QWORD PTR [rbp-0x28]
  41bbcd:	mov    edx,eax
  41bbcf:	mov    rax,QWORD PTR [rbp-0x30]
  41bbd3:	mov    BYTE PTR [rax],dl
  41bbd5:	mov    rax,QWORD PTR [rbp-0x10]
  41bbd9:	leave  
  41bbda:	ret    
  41bbdb:	push   rbp
  41bbdc:	mov    rbp,rsp
  41bbdf:	mov    QWORD PTR [rbp-0x8],rdi
  41bbe3:	mov    QWORD PTR [rbp-0x10],rsi
  41bbe7:	mov    QWORD PTR [rbp-0x18],rdx
  41bbeb:	mov    DWORD PTR [rbp-0x1c],ecx
  41bbee:	mov    QWORD PTR [rbp-0x28],r8
  41bbf2:	mov    QWORD PTR [rbp-0x30],r9
  41bbf6:	cmp    DWORD PTR [rbp-0x1c],0x0
  41bbfa:	je     41bc2f <flatcc_emitter_copy_buffer@@Base+0xcd4>
  41bbfc:	mov    rax,QWORD PTR [rbp-0x28]
  41bc00:	test   rax,rax
  41bc03:	js     41bc0c <flatcc_emitter_copy_buffer@@Base+0xcb1>
  41bc05:	vcvtsi2ss xmm0,xmm0,rax
  41bc0a:	jmp    41bc21 <flatcc_emitter_copy_buffer@@Base+0xcc6>
  41bc0c:	mov    rdx,rax
  41bc0f:	shr    rdx,1
  41bc12:	and    eax,0x1
  41bc15:	or     rdx,rax
  41bc18:	vcvtsi2ss xmm0,xmm0,rdx
  41bc1d:	vaddss xmm0,xmm0,xmm0
  41bc21:	vmovss xmm1,DWORD PTR [rip+0x87e7]        # 424410 <flatcc_builder_padding_base@@Base+0x2070>
  41bc29:	vxorps xmm0,xmm0,xmm1
  41bc2d:	jmp    41bc54 <flatcc_emitter_copy_buffer@@Base+0xcf9>
  41bc2f:	mov    rax,QWORD PTR [rbp-0x28]
  41bc33:	test   rax,rax
  41bc36:	js     41bc3f <flatcc_emitter_copy_buffer@@Base+0xce4>
  41bc38:	vcvtsi2ss xmm0,xmm0,rax
  41bc3d:	jmp    41bc54 <flatcc_emitter_copy_buffer@@Base+0xcf9>
  41bc3f:	mov    rdx,rax
  41bc42:	shr    rdx,1
  41bc45:	and    eax,0x1
  41bc48:	or     rdx,rax
  41bc4b:	vcvtsi2ss xmm0,xmm0,rdx
  41bc50:	vaddss xmm0,xmm0,xmm0
  41bc54:	mov    rax,QWORD PTR [rbp-0x30]
  41bc58:	vmovss DWORD PTR [rax],xmm0
  41bc5c:	mov    rax,QWORD PTR [rbp-0x10]
  41bc60:	pop    rbp
  41bc61:	ret    
  41bc62:	push   rbp
  41bc63:	mov    rbp,rsp
  41bc66:	mov    QWORD PTR [rbp-0x8],rdi
  41bc6a:	mov    QWORD PTR [rbp-0x10],rsi
  41bc6e:	mov    QWORD PTR [rbp-0x18],rdx
  41bc72:	mov    DWORD PTR [rbp-0x1c],ecx
  41bc75:	mov    QWORD PTR [rbp-0x28],r8
  41bc79:	mov    QWORD PTR [rbp-0x30],r9
  41bc7d:	cmp    DWORD PTR [rbp-0x1c],0x0
  41bc81:	je     41bcb6 <flatcc_emitter_copy_buffer@@Base+0xd5b>
  41bc83:	mov    rax,QWORD PTR [rbp-0x28]
  41bc87:	test   rax,rax
  41bc8a:	js     41bc93 <flatcc_emitter_copy_buffer@@Base+0xd38>
  41bc8c:	vcvtsi2sd xmm0,xmm0,rax
  41bc91:	jmp    41bca8 <flatcc_emitter_copy_buffer@@Base+0xd4d>
  41bc93:	mov    rdx,rax
  41bc96:	shr    rdx,1
  41bc99:	and    eax,0x1
  41bc9c:	or     rdx,rax
  41bc9f:	vcvtsi2sd xmm0,xmm0,rdx
  41bca4:	vaddsd xmm0,xmm0,xmm0
  41bca8:	vmovq  xmm1,QWORD PTR [rip+0x8770]        # 424420 <flatcc_builder_padding_base@@Base+0x2080>
  41bcb0:	vxorpd xmm0,xmm0,xmm1
  41bcb4:	jmp    41bcdb <flatcc_emitter_copy_buffer@@Base+0xd80>
  41bcb6:	mov    rax,QWORD PTR [rbp-0x28]
  41bcba:	test   rax,rax
  41bcbd:	js     41bcc6 <flatcc_emitter_copy_buffer@@Base+0xd6b>
  41bcbf:	vcvtsi2sd xmm0,xmm0,rax
  41bcc4:	jmp    41bcdb <flatcc_emitter_copy_buffer@@Base+0xd80>
  41bcc6:	mov    rdx,rax
  41bcc9:	shr    rdx,1
  41bccc:	and    eax,0x1
  41bccf:	or     rdx,rax
  41bcd2:	vcvtsi2sd xmm0,xmm0,rdx
  41bcd7:	vaddsd xmm0,xmm0,xmm0
  41bcdb:	mov    rax,QWORD PTR [rbp-0x30]
  41bcdf:	vmovsd QWORD PTR [rax],xmm0
  41bce3:	mov    rax,QWORD PTR [rbp-0x10]
  41bce7:	pop    rbp
  41bce8:	ret    
  41bce9:	push   rbp
  41bcea:	mov    rbp,rsp
  41bced:	sub    rsp,0x40
  41bcf1:	mov    QWORD PTR [rbp-0x28],rdi
  41bcf5:	mov    QWORD PTR [rbp-0x30],rsi
  41bcf9:	mov    QWORD PTR [rbp-0x38],rdx
  41bcfd:	mov    QWORD PTR [rbp-0x40],rcx
  41bd01:	mov    rax,QWORD PTR fs:0x28
  41bd0a:	mov    QWORD PTR [rbp-0x8],rax
  41bd0e:	xor    eax,eax
  41bd10:	mov    QWORD PTR [rbp-0x18],0x0
  41bd18:	mov    DWORD PTR [rbp-0x1c],0x0
  41bd1f:	mov    rax,QWORD PTR [rbp-0x30]
  41bd23:	mov    QWORD PTR [rbp-0x10],rax
  41bd27:	mov    rax,QWORD PTR [rbp-0x40]
  41bd2b:	mov    BYTE PTR [rax],0x0
  41bd2e:	mov    rax,QWORD PTR [rbp-0x30]
  41bd32:	cmp    rax,QWORD PTR [rbp-0x38]
  41bd36:	jne    41bd3e <flatcc_emitter_copy_buffer@@Base+0xde3>
  41bd38:	mov    rax,QWORD PTR [rbp-0x30]
  41bd3c:	jmp    41bd96 <flatcc_emitter_copy_buffer@@Base+0xe3b>
  41bd3e:	lea    rdi,[rbp-0x18]
  41bd42:	lea    rcx,[rbp-0x1c]
  41bd46:	mov    rdx,QWORD PTR [rbp-0x38]
  41bd4a:	mov    rsi,QWORD PTR [rbp-0x30]
  41bd4e:	mov    rax,QWORD PTR [rbp-0x28]
  41bd52:	mov    r8,rdi
  41bd55:	mov    rdi,rax
  41bd58:	call   420765 <flatcc_json_parser_integer@@Base>
  41bd5d:	mov    QWORD PTR [rbp-0x30],rax
  41bd61:	mov    rax,QWORD PTR [rbp-0x30]
  41bd65:	cmp    rax,QWORD PTR [rbp-0x10]
  41bd69:	je     41bd92 <flatcc_emitter_copy_buffer@@Base+0xe37>
  41bd6b:	mov    rdi,QWORD PTR [rbp-0x18]
  41bd6f:	mov    ecx,DWORD PTR [rbp-0x1c]
  41bd72:	mov    r8,QWORD PTR [rbp-0x40]
  41bd76:	mov    rdx,QWORD PTR [rbp-0x38]
  41bd7a:	mov    rsi,QWORD PTR [rbp-0x30]
  41bd7e:	mov    rax,QWORD PTR [rbp-0x28]
  41bd82:	mov    r9,r8
  41bd85:	mov    r8,rdi
  41bd88:	mov    rdi,rax
  41bd8b:	call   41b919 <flatcc_emitter_copy_buffer@@Base+0x9be>
  41bd90:	jmp    41bd96 <flatcc_emitter_copy_buffer@@Base+0xe3b>
  41bd92:	mov    rax,QWORD PTR [rbp-0x30]
  41bd96:	mov    rdx,QWORD PTR [rbp-0x8]
  41bd9a:	xor    rdx,QWORD PTR fs:0x28
  41bda3:	je     41bdaa <flatcc_emitter_copy_buffer@@Base+0xe4f>
  41bda5:	call   403200 <__stack_chk_fail@plt>
  41bdaa:	leave  
  41bdab:	ret    
  41bdac:	endbr64 
  41bdb0:	push   rbp
  41bdb1:	mov    rbp,rsp
  41bdb4:	sub    rsp,0x70
  41bdb8:	mov    QWORD PTR [rbp-0x48],rdi
  41bdbc:	mov    QWORD PTR [rbp-0x50],rsi
  41bdc0:	mov    QWORD PTR [rbp-0x58],rdx
  41bdc4:	mov    QWORD PTR [rbp-0x60],rcx
  41bdc8:	mov    QWORD PTR [rbp-0x68],r8
  41bdcc:	mov    rax,QWORD PTR fs:0x28
  41bdd5:	mov    QWORD PTR [rbp-0x8],rax
  41bdd9:	xor    eax,eax
  41bddb:	mov    QWORD PTR [rbp-0x28],0x0
  41bde3:	mov    DWORD PTR [rbp-0x2c],0x0
  41bdea:	mov    rax,QWORD PTR [rbp-0x68]
  41bdee:	mov    QWORD PTR [rax],0x0
  41bdf5:	mov    rdx,QWORD PTR [rbp-0x58]
  41bdf9:	mov    rcx,QWORD PTR [rbp-0x50]
  41bdfd:	mov    rax,QWORD PTR [rbp-0x48]
  41be01:	mov    rsi,rcx
  41be04:	mov    rdi,rax
  41be07:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41be0c:	mov    QWORD PTR [rbp-0x50],rax
  41be10:	mov    rax,QWORD PTR [rbp-0x50]
  41be14:	cmp    rax,QWORD PTR [rbp-0x58]
  41be18:	jne    41be23 <flatcc_emitter_copy_buffer@@Base+0xec8>
  41be1a:	mov    rax,QWORD PTR [rbp-0x50]
  41be1e:	jmp    41bf36 <flatcc_emitter_copy_buffer@@Base+0xfdb>
  41be23:	mov    rax,QWORD PTR [rbp-0x60]
  41be27:	mov    QWORD PTR [rbp-0x18],rax
  41be2b:	mov    rax,QWORD PTR [rbp-0x18]
  41be2f:	mov    rax,QWORD PTR [rax]
  41be32:	mov    rdx,QWORD PTR [rbp-0x50]
  41be36:	mov    QWORD PTR [rbp-0x10],rdx
  41be3a:	lea    r9,[rbp-0x30]
  41be3e:	lea    r8,[rbp-0x20]
  41be42:	lea    rcx,[rbp-0x34]
  41be46:	mov    rdx,QWORD PTR [rbp-0x58]
  41be4a:	mov    rsi,QWORD PTR [rbp-0x10]
  41be4e:	mov    rdi,QWORD PTR [rbp-0x48]
  41be52:	call   rax
  41be54:	mov    QWORD PTR [rbp-0x50],rax
  41be58:	mov    rax,QWORD PTR [rbp-0x50]
  41be5c:	cmp    rax,QWORD PTR [rbp-0x58]
  41be60:	jne    41be6b <flatcc_emitter_copy_buffer@@Base+0xf10>
  41be62:	mov    rax,QWORD PTR [rbp-0x50]
  41be66:	jmp    41bf36 <flatcc_emitter_copy_buffer@@Base+0xfdb>
  41be6b:	mov    rax,QWORD PTR [rbp-0x50]
  41be6f:	cmp    rax,QWORD PTR [rbp-0x10]
  41be73:	jne    41be86 <flatcc_emitter_copy_buffer@@Base+0xf2b>
  41be75:	add    QWORD PTR [rbp-0x18],0x8
  41be7a:	mov    rax,QWORD PTR [rbp-0x18]
  41be7e:	mov    rax,QWORD PTR [rax]
  41be81:	test   rax,rax
  41be84:	jne    41be2b <flatcc_emitter_copy_buffer@@Base+0xed0>
  41be86:	mov    rax,QWORD PTR [rbp-0x10]
  41be8a:	cmp    rax,QWORD PTR [rbp-0x50]
  41be8e:	jne    41beae <flatcc_emitter_copy_buffer@@Base+0xf53>
  41be90:	mov    rdx,QWORD PTR [rbp-0x58]
  41be94:	mov    rsi,QWORD PTR [rbp-0x50]
  41be98:	mov    rax,QWORD PTR [rbp-0x48]
  41be9c:	mov    ecx,0x17
  41bea1:	mov    rdi,rax
  41bea4:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41bea9:	jmp    41bf36 <flatcc_emitter_copy_buffer@@Base+0xfdb>
  41beae:	mov    eax,DWORD PTR [rbp-0x2c]
  41beb1:	lea    edx,[rax+0x1]
  41beb4:	mov    DWORD PTR [rbp-0x2c],edx
  41beb7:	test   eax,eax
  41beb9:	je     41bee1 <flatcc_emitter_copy_buffer@@Base+0xf86>
  41bebb:	mov    rax,QWORD PTR [rbp-0x48]
  41bebf:	mov    eax,DWORD PTR [rax+0x14]
  41bec2:	test   eax,eax
  41bec4:	je     41bee1 <flatcc_emitter_copy_buffer@@Base+0xf86>
  41bec6:	mov    rdx,QWORD PTR [rbp-0x58]
  41beca:	mov    rsi,QWORD PTR [rbp-0x50]
  41bece:	mov    rax,QWORD PTR [rbp-0x48]
  41bed2:	mov    ecx,0xe
  41bed7:	mov    rdi,rax
  41beda:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41bedf:	jmp    41bf36 <flatcc_emitter_copy_buffer@@Base+0xfdb>
  41bee1:	mov    rdi,QWORD PTR [rbp-0x20]
  41bee5:	mov    ecx,DWORD PTR [rbp-0x34]
  41bee8:	lea    r8,[rbp-0x28]
  41beec:	mov    rdx,QWORD PTR [rbp-0x58]
  41bef0:	mov    rsi,QWORD PTR [rbp-0x50]
  41bef4:	mov    rax,QWORD PTR [rbp-0x48]
  41bef8:	mov    r9,r8
  41befb:	mov    r8,rdi
  41befe:	mov    rdi,rax
  41bf01:	call   41b782 <flatcc_emitter_copy_buffer@@Base+0x827>
  41bf06:	cmp    QWORD PTR [rbp-0x58],rax
  41bf0a:	jne    41bf12 <flatcc_emitter_copy_buffer@@Base+0xfb7>
  41bf0c:	mov    rax,QWORD PTR [rbp-0x58]
  41bf10:	jmp    41bf36 <flatcc_emitter_copy_buffer@@Base+0xfdb>
  41bf12:	mov    rax,QWORD PTR [rbp-0x68]
  41bf16:	mov    rdx,QWORD PTR [rax]
  41bf19:	mov    rax,QWORD PTR [rbp-0x28]
  41bf1d:	add    rdx,rax
  41bf20:	mov    rax,QWORD PTR [rbp-0x68]
  41bf24:	mov    QWORD PTR [rax],rdx
  41bf27:	mov    eax,DWORD PTR [rbp-0x30]
  41bf2a:	test   eax,eax
  41bf2c:	jne    41be23 <flatcc_emitter_copy_buffer@@Base+0xec8>
  41bf32:	mov    rax,QWORD PTR [rbp-0x50]
  41bf36:	mov    rdi,QWORD PTR [rbp-0x8]
  41bf3a:	xor    rdi,QWORD PTR fs:0x28
  41bf43:	je     41bf4a <flatcc_emitter_copy_buffer@@Base+0xfef>
  41bf45:	call   403200 <__stack_chk_fail@plt>
  41bf4a:	leave  
  41bf4b:	ret    
  41bf4c:	endbr64 
  41bf50:	push   rbp
  41bf51:	mov    rbp,rsp
  41bf54:	sub    rsp,0x60
  41bf58:	mov    QWORD PTR [rbp-0x38],rdi
  41bf5c:	mov    QWORD PTR [rbp-0x40],rsi
  41bf60:	mov    QWORD PTR [rbp-0x48],rdx
  41bf64:	mov    QWORD PTR [rbp-0x50],rcx
  41bf68:	mov    QWORD PTR [rbp-0x58],r8
  41bf6c:	mov    rax,QWORD PTR fs:0x28
  41bf75:	mov    QWORD PTR [rbp-0x8],rax
  41bf79:	xor    eax,eax
  41bf7b:	mov    DWORD PTR [rbp-0x30],0x0
  41bf82:	mov    DWORD PTR [rbp-0x24],0x0
  41bf89:	mov    rax,QWORD PTR [rbp-0x58]
  41bf8d:	mov    DWORD PTR [rax],0x0
  41bf93:	mov    rdx,QWORD PTR [rbp-0x48]
  41bf97:	mov    rcx,QWORD PTR [rbp-0x40]
  41bf9b:	mov    rax,QWORD PTR [rbp-0x38]
  41bf9f:	mov    rsi,rcx
  41bfa2:	mov    rdi,rax
  41bfa5:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41bfaa:	mov    QWORD PTR [rbp-0x40],rax
  41bfae:	mov    rax,QWORD PTR [rbp-0x40]
  41bfb2:	cmp    rax,QWORD PTR [rbp-0x48]
  41bfb6:	jne    41bfc1 <flatcc_emitter_copy_buffer@@Base+0x1066>
  41bfb8:	mov    rax,QWORD PTR [rbp-0x40]
  41bfbc:	jmp    41c0d0 <flatcc_emitter_copy_buffer@@Base+0x1175>
  41bfc1:	mov    rax,QWORD PTR [rbp-0x50]
  41bfc5:	mov    QWORD PTR [rbp-0x18],rax
  41bfc9:	mov    rax,QWORD PTR [rbp-0x18]
  41bfcd:	mov    rax,QWORD PTR [rax]
  41bfd0:	mov    rdx,QWORD PTR [rbp-0x40]
  41bfd4:	mov    QWORD PTR [rbp-0x10],rdx
  41bfd8:	lea    r9,[rbp-0x28]
  41bfdc:	lea    r8,[rbp-0x20]
  41bfe0:	lea    rcx,[rbp-0x2c]
  41bfe4:	mov    rdx,QWORD PTR [rbp-0x48]
  41bfe8:	mov    rsi,QWORD PTR [rbp-0x10]
  41bfec:	mov    rdi,QWORD PTR [rbp-0x38]
  41bff0:	call   rax
  41bff2:	mov    QWORD PTR [rbp-0x40],rax
  41bff6:	mov    rax,QWORD PTR [rbp-0x40]
  41bffa:	cmp    rax,QWORD PTR [rbp-0x48]
  41bffe:	jne    41c009 <flatcc_emitter_copy_buffer@@Base+0x10ae>
  41c000:	mov    rax,QWORD PTR [rbp-0x40]
  41c004:	jmp    41c0d0 <flatcc_emitter_copy_buffer@@Base+0x1175>
  41c009:	mov    rax,QWORD PTR [rbp-0x40]
  41c00d:	cmp    rax,QWORD PTR [rbp-0x10]
  41c011:	jne    41c024 <flatcc_emitter_copy_buffer@@Base+0x10c9>
  41c013:	add    QWORD PTR [rbp-0x18],0x8
  41c018:	mov    rax,QWORD PTR [rbp-0x18]
  41c01c:	mov    rax,QWORD PTR [rax]
  41c01f:	test   rax,rax
  41c022:	jne    41bfc9 <flatcc_emitter_copy_buffer@@Base+0x106e>
  41c024:	mov    rax,QWORD PTR [rbp-0x10]
  41c028:	cmp    rax,QWORD PTR [rbp-0x40]
  41c02c:	jne    41c04c <flatcc_emitter_copy_buffer@@Base+0x10f1>
  41c02e:	mov    rdx,QWORD PTR [rbp-0x48]
  41c032:	mov    rsi,QWORD PTR [rbp-0x40]
  41c036:	mov    rax,QWORD PTR [rbp-0x38]
  41c03a:	mov    ecx,0x17
  41c03f:	mov    rdi,rax
  41c042:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c047:	jmp    41c0d0 <flatcc_emitter_copy_buffer@@Base+0x1175>
  41c04c:	mov    eax,DWORD PTR [rbp-0x24]
  41c04f:	lea    edx,[rax+0x1]
  41c052:	mov    DWORD PTR [rbp-0x24],edx
  41c055:	test   eax,eax
  41c057:	je     41c07f <flatcc_emitter_copy_buffer@@Base+0x1124>
  41c059:	mov    rax,QWORD PTR [rbp-0x38]
  41c05d:	mov    eax,DWORD PTR [rax+0x14]
  41c060:	test   eax,eax
  41c062:	je     41c07f <flatcc_emitter_copy_buffer@@Base+0x1124>
  41c064:	mov    rdx,QWORD PTR [rbp-0x48]
  41c068:	mov    rsi,QWORD PTR [rbp-0x40]
  41c06c:	mov    rax,QWORD PTR [rbp-0x38]
  41c070:	mov    ecx,0xe
  41c075:	mov    rdi,rax
  41c078:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c07d:	jmp    41c0d0 <flatcc_emitter_copy_buffer@@Base+0x1175>
  41c07f:	mov    rdi,QWORD PTR [rbp-0x20]
  41c083:	mov    ecx,DWORD PTR [rbp-0x2c]
  41c086:	lea    r8,[rbp-0x30]
  41c08a:	mov    rdx,QWORD PTR [rbp-0x48]
  41c08e:	mov    rsi,QWORD PTR [rbp-0x40]
  41c092:	mov    rax,QWORD PTR [rbp-0x38]
  41c096:	mov    r9,r8
  41c099:	mov    r8,rdi
  41c09c:	mov    rdi,rax
  41c09f:	call   41b829 <flatcc_emitter_copy_buffer@@Base+0x8ce>
  41c0a4:	cmp    QWORD PTR [rbp-0x48],rax
  41c0a8:	jne    41c0b0 <flatcc_emitter_copy_buffer@@Base+0x1155>
  41c0aa:	mov    rax,QWORD PTR [rbp-0x48]
  41c0ae:	jmp    41c0d0 <flatcc_emitter_copy_buffer@@Base+0x1175>
  41c0b0:	mov    rax,QWORD PTR [rbp-0x58]
  41c0b4:	mov    edx,DWORD PTR [rax]
  41c0b6:	mov    eax,DWORD PTR [rbp-0x30]
  41c0b9:	add    edx,eax
  41c0bb:	mov    rax,QWORD PTR [rbp-0x58]
  41c0bf:	mov    DWORD PTR [rax],edx
  41c0c1:	mov    eax,DWORD PTR [rbp-0x28]
  41c0c4:	test   eax,eax
  41c0c6:	jne    41bfc1 <flatcc_emitter_copy_buffer@@Base+0x1066>
  41c0cc:	mov    rax,QWORD PTR [rbp-0x40]
  41c0d0:	mov    rdi,QWORD PTR [rbp-0x8]
  41c0d4:	xor    rdi,QWORD PTR fs:0x28
  41c0dd:	je     41c0e4 <flatcc_emitter_copy_buffer@@Base+0x1189>
  41c0df:	call   403200 <__stack_chk_fail@plt>
  41c0e4:	leave  
  41c0e5:	ret    
  41c0e6:	endbr64 
  41c0ea:	push   rbp
  41c0eb:	mov    rbp,rsp
  41c0ee:	sub    rsp,0x60
  41c0f2:	mov    QWORD PTR [rbp-0x38],rdi
  41c0f6:	mov    QWORD PTR [rbp-0x40],rsi
  41c0fa:	mov    QWORD PTR [rbp-0x48],rdx
  41c0fe:	mov    QWORD PTR [rbp-0x50],rcx
  41c102:	mov    QWORD PTR [rbp-0x58],r8
  41c106:	mov    rax,QWORD PTR fs:0x28
  41c10f:	mov    QWORD PTR [rbp-0x8],rax
  41c113:	xor    eax,eax
  41c115:	mov    WORD PTR [rbp-0x2e],0x0
  41c11b:	mov    DWORD PTR [rbp-0x24],0x0
  41c122:	mov    rax,QWORD PTR [rbp-0x58]
  41c126:	mov    WORD PTR [rax],0x0
  41c12b:	mov    rdx,QWORD PTR [rbp-0x48]
  41c12f:	mov    rcx,QWORD PTR [rbp-0x40]
  41c133:	mov    rax,QWORD PTR [rbp-0x38]
  41c137:	mov    rsi,rcx
  41c13a:	mov    rdi,rax
  41c13d:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41c142:	mov    QWORD PTR [rbp-0x40],rax
  41c146:	mov    rax,QWORD PTR [rbp-0x40]
  41c14a:	cmp    rax,QWORD PTR [rbp-0x48]
  41c14e:	jne    41c159 <flatcc_emitter_copy_buffer@@Base+0x11fe>
  41c150:	mov    rax,QWORD PTR [rbp-0x40]
  41c154:	jmp    41c26b <flatcc_emitter_copy_buffer@@Base+0x1310>
  41c159:	mov    rax,QWORD PTR [rbp-0x50]
  41c15d:	mov    QWORD PTR [rbp-0x18],rax
  41c161:	mov    rax,QWORD PTR [rbp-0x18]
  41c165:	mov    rax,QWORD PTR [rax]
  41c168:	mov    rdx,QWORD PTR [rbp-0x40]
  41c16c:	mov    QWORD PTR [rbp-0x10],rdx
  41c170:	lea    r9,[rbp-0x28]
  41c174:	lea    r8,[rbp-0x20]
  41c178:	lea    rcx,[rbp-0x2c]
  41c17c:	mov    rdx,QWORD PTR [rbp-0x48]
  41c180:	mov    rsi,QWORD PTR [rbp-0x10]
  41c184:	mov    rdi,QWORD PTR [rbp-0x38]
  41c188:	call   rax
  41c18a:	mov    QWORD PTR [rbp-0x40],rax
  41c18e:	mov    rax,QWORD PTR [rbp-0x40]
  41c192:	cmp    rax,QWORD PTR [rbp-0x48]
  41c196:	jne    41c1a1 <flatcc_emitter_copy_buffer@@Base+0x1246>
  41c198:	mov    rax,QWORD PTR [rbp-0x40]
  41c19c:	jmp    41c26b <flatcc_emitter_copy_buffer@@Base+0x1310>
  41c1a1:	mov    rax,QWORD PTR [rbp-0x40]
  41c1a5:	cmp    rax,QWORD PTR [rbp-0x10]
  41c1a9:	jne    41c1bc <flatcc_emitter_copy_buffer@@Base+0x1261>
  41c1ab:	add    QWORD PTR [rbp-0x18],0x8
  41c1b0:	mov    rax,QWORD PTR [rbp-0x18]
  41c1b4:	mov    rax,QWORD PTR [rax]
  41c1b7:	test   rax,rax
  41c1ba:	jne    41c161 <flatcc_emitter_copy_buffer@@Base+0x1206>
  41c1bc:	mov    rax,QWORD PTR [rbp-0x10]
  41c1c0:	cmp    rax,QWORD PTR [rbp-0x40]
  41c1c4:	jne    41c1e4 <flatcc_emitter_copy_buffer@@Base+0x1289>
  41c1c6:	mov    rdx,QWORD PTR [rbp-0x48]
  41c1ca:	mov    rsi,QWORD PTR [rbp-0x40]
  41c1ce:	mov    rax,QWORD PTR [rbp-0x38]
  41c1d2:	mov    ecx,0x17
  41c1d7:	mov    rdi,rax
  41c1da:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c1df:	jmp    41c26b <flatcc_emitter_copy_buffer@@Base+0x1310>
  41c1e4:	mov    eax,DWORD PTR [rbp-0x24]
  41c1e7:	lea    edx,[rax+0x1]
  41c1ea:	mov    DWORD PTR [rbp-0x24],edx
  41c1ed:	test   eax,eax
  41c1ef:	je     41c217 <flatcc_emitter_copy_buffer@@Base+0x12bc>
  41c1f1:	mov    rax,QWORD PTR [rbp-0x38]
  41c1f5:	mov    eax,DWORD PTR [rax+0x14]
  41c1f8:	test   eax,eax
  41c1fa:	je     41c217 <flatcc_emitter_copy_buffer@@Base+0x12bc>
  41c1fc:	mov    rdx,QWORD PTR [rbp-0x48]
  41c200:	mov    rsi,QWORD PTR [rbp-0x40]
  41c204:	mov    rax,QWORD PTR [rbp-0x38]
  41c208:	mov    ecx,0xe
  41c20d:	mov    rdi,rax
  41c210:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c215:	jmp    41c26b <flatcc_emitter_copy_buffer@@Base+0x1310>
  41c217:	mov    rdi,QWORD PTR [rbp-0x20]
  41c21b:	mov    ecx,DWORD PTR [rbp-0x2c]
  41c21e:	lea    r8,[rbp-0x2e]
  41c222:	mov    rdx,QWORD PTR [rbp-0x48]
  41c226:	mov    rsi,QWORD PTR [rbp-0x40]
  41c22a:	mov    rax,QWORD PTR [rbp-0x38]
  41c22e:	mov    r9,r8
  41c231:	mov    r8,rdi
  41c234:	mov    rdi,rax
  41c237:	call   41b8a1 <flatcc_emitter_copy_buffer@@Base+0x946>
  41c23c:	cmp    QWORD PTR [rbp-0x48],rax
  41c240:	jne    41c248 <flatcc_emitter_copy_buffer@@Base+0x12ed>
  41c242:	mov    rax,QWORD PTR [rbp-0x48]
  41c246:	jmp    41c26b <flatcc_emitter_copy_buffer@@Base+0x1310>
  41c248:	mov    rax,QWORD PTR [rbp-0x58]
  41c24c:	movzx  edx,WORD PTR [rax]
  41c24f:	movzx  eax,WORD PTR [rbp-0x2e]
  41c253:	add    eax,edx
  41c255:	mov    rdx,QWORD PTR [rbp-0x58]
  41c259:	mov    WORD PTR [rdx],ax
  41c25c:	mov    eax,DWORD PTR [rbp-0x28]
  41c25f:	test   eax,eax
  41c261:	jne    41c159 <flatcc_emitter_copy_buffer@@Base+0x11fe>
  41c267:	mov    rax,QWORD PTR [rbp-0x40]
  41c26b:	mov    rdi,QWORD PTR [rbp-0x8]
  41c26f:	xor    rdi,QWORD PTR fs:0x28
  41c278:	je     41c27f <flatcc_emitter_copy_buffer@@Base+0x1324>
  41c27a:	call   403200 <__stack_chk_fail@plt>
  41c27f:	leave  
  41c280:	ret    
  41c281:	endbr64 
  41c285:	push   rbp
  41c286:	mov    rbp,rsp
  41c289:	sub    rsp,0x60
  41c28d:	mov    QWORD PTR [rbp-0x38],rdi
  41c291:	mov    QWORD PTR [rbp-0x40],rsi
  41c295:	mov    QWORD PTR [rbp-0x48],rdx
  41c299:	mov    QWORD PTR [rbp-0x50],rcx
  41c29d:	mov    QWORD PTR [rbp-0x58],r8
  41c2a1:	mov    rax,QWORD PTR fs:0x28
  41c2aa:	mov    QWORD PTR [rbp-0x8],rax
  41c2ae:	xor    eax,eax
  41c2b0:	mov    BYTE PTR [rbp-0x2d],0x0
  41c2b4:	mov    DWORD PTR [rbp-0x24],0x0
  41c2bb:	mov    rax,QWORD PTR [rbp-0x58]
  41c2bf:	mov    BYTE PTR [rax],0x0
  41c2c2:	mov    rdx,QWORD PTR [rbp-0x48]
  41c2c6:	mov    rcx,QWORD PTR [rbp-0x40]
  41c2ca:	mov    rax,QWORD PTR [rbp-0x38]
  41c2ce:	mov    rsi,rcx
  41c2d1:	mov    rdi,rax
  41c2d4:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41c2d9:	mov    QWORD PTR [rbp-0x40],rax
  41c2dd:	mov    rax,QWORD PTR [rbp-0x40]
  41c2e1:	cmp    rax,QWORD PTR [rbp-0x48]
  41c2e5:	jne    41c2f0 <flatcc_emitter_copy_buffer@@Base+0x1395>
  41c2e7:	mov    rax,QWORD PTR [rbp-0x40]
  41c2eb:	jmp    41c401 <flatcc_emitter_copy_buffer@@Base+0x14a6>
  41c2f0:	mov    rax,QWORD PTR [rbp-0x50]
  41c2f4:	mov    QWORD PTR [rbp-0x18],rax
  41c2f8:	mov    rax,QWORD PTR [rbp-0x18]
  41c2fc:	mov    rax,QWORD PTR [rax]
  41c2ff:	mov    rdx,QWORD PTR [rbp-0x40]
  41c303:	mov    QWORD PTR [rbp-0x10],rdx
  41c307:	lea    r9,[rbp-0x28]
  41c30b:	lea    r8,[rbp-0x20]
  41c30f:	lea    rcx,[rbp-0x2c]
  41c313:	mov    rdx,QWORD PTR [rbp-0x48]
  41c317:	mov    rsi,QWORD PTR [rbp-0x10]
  41c31b:	mov    rdi,QWORD PTR [rbp-0x38]
  41c31f:	call   rax
  41c321:	mov    QWORD PTR [rbp-0x40],rax
  41c325:	mov    rax,QWORD PTR [rbp-0x40]
  41c329:	cmp    rax,QWORD PTR [rbp-0x48]
  41c32d:	jne    41c338 <flatcc_emitter_copy_buffer@@Base+0x13dd>
  41c32f:	mov    rax,QWORD PTR [rbp-0x40]
  41c333:	jmp    41c401 <flatcc_emitter_copy_buffer@@Base+0x14a6>
  41c338:	mov    rax,QWORD PTR [rbp-0x40]
  41c33c:	cmp    rax,QWORD PTR [rbp-0x10]
  41c340:	jne    41c353 <flatcc_emitter_copy_buffer@@Base+0x13f8>
  41c342:	add    QWORD PTR [rbp-0x18],0x8
  41c347:	mov    rax,QWORD PTR [rbp-0x18]
  41c34b:	mov    rax,QWORD PTR [rax]
  41c34e:	test   rax,rax
  41c351:	jne    41c2f8 <flatcc_emitter_copy_buffer@@Base+0x139d>
  41c353:	mov    rax,QWORD PTR [rbp-0x10]
  41c357:	cmp    rax,QWORD PTR [rbp-0x40]
  41c35b:	jne    41c37b <flatcc_emitter_copy_buffer@@Base+0x1420>
  41c35d:	mov    rdx,QWORD PTR [rbp-0x48]
  41c361:	mov    rsi,QWORD PTR [rbp-0x40]
  41c365:	mov    rax,QWORD PTR [rbp-0x38]
  41c369:	mov    ecx,0x17
  41c36e:	mov    rdi,rax
  41c371:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c376:	jmp    41c401 <flatcc_emitter_copy_buffer@@Base+0x14a6>
  41c37b:	mov    eax,DWORD PTR [rbp-0x24]
  41c37e:	lea    edx,[rax+0x1]
  41c381:	mov    DWORD PTR [rbp-0x24],edx
  41c384:	test   eax,eax
  41c386:	je     41c3ae <flatcc_emitter_copy_buffer@@Base+0x1453>
  41c388:	mov    rax,QWORD PTR [rbp-0x38]
  41c38c:	mov    eax,DWORD PTR [rax+0x14]
  41c38f:	test   eax,eax
  41c391:	je     41c3ae <flatcc_emitter_copy_buffer@@Base+0x1453>
  41c393:	mov    rdx,QWORD PTR [rbp-0x48]
  41c397:	mov    rsi,QWORD PTR [rbp-0x40]
  41c39b:	mov    rax,QWORD PTR [rbp-0x38]
  41c39f:	mov    ecx,0xe
  41c3a4:	mov    rdi,rax
  41c3a7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c3ac:	jmp    41c401 <flatcc_emitter_copy_buffer@@Base+0x14a6>
  41c3ae:	mov    rdi,QWORD PTR [rbp-0x20]
  41c3b2:	mov    ecx,DWORD PTR [rbp-0x2c]
  41c3b5:	lea    r8,[rbp-0x2d]
  41c3b9:	mov    rdx,QWORD PTR [rbp-0x48]
  41c3bd:	mov    rsi,QWORD PTR [rbp-0x40]
  41c3c1:	mov    rax,QWORD PTR [rbp-0x38]
  41c3c5:	mov    r9,r8
  41c3c8:	mov    r8,rdi
  41c3cb:	mov    rdi,rax
  41c3ce:	call   41b919 <flatcc_emitter_copy_buffer@@Base+0x9be>
  41c3d3:	cmp    QWORD PTR [rbp-0x48],rax
  41c3d7:	jne    41c3df <flatcc_emitter_copy_buffer@@Base+0x1484>
  41c3d9:	mov    rax,QWORD PTR [rbp-0x48]
  41c3dd:	jmp    41c401 <flatcc_emitter_copy_buffer@@Base+0x14a6>
  41c3df:	mov    rax,QWORD PTR [rbp-0x58]
  41c3e3:	movzx  edx,BYTE PTR [rax]
  41c3e6:	movzx  eax,BYTE PTR [rbp-0x2d]
  41c3ea:	add    eax,edx
  41c3ec:	mov    rdx,QWORD PTR [rbp-0x58]
  41c3f0:	mov    BYTE PTR [rdx],al
  41c3f2:	mov    eax,DWORD PTR [rbp-0x28]
  41c3f5:	test   eax,eax
  41c3f7:	jne    41c2f0 <flatcc_emitter_copy_buffer@@Base+0x1395>
  41c3fd:	mov    rax,QWORD PTR [rbp-0x40]
  41c401:	mov    rdi,QWORD PTR [rbp-0x8]
  41c405:	xor    rdi,QWORD PTR fs:0x28
  41c40e:	je     41c415 <flatcc_emitter_copy_buffer@@Base+0x14ba>
  41c410:	call   403200 <__stack_chk_fail@plt>
  41c415:	leave  
  41c416:	ret    
  41c417:	endbr64 
  41c41b:	push   rbp
  41c41c:	mov    rbp,rsp
  41c41f:	sub    rsp,0x70
  41c423:	mov    QWORD PTR [rbp-0x48],rdi
  41c427:	mov    QWORD PTR [rbp-0x50],rsi
  41c42b:	mov    QWORD PTR [rbp-0x58],rdx
  41c42f:	mov    QWORD PTR [rbp-0x60],rcx
  41c433:	mov    QWORD PTR [rbp-0x68],r8
  41c437:	mov    rax,QWORD PTR fs:0x28
  41c440:	mov    QWORD PTR [rbp-0x8],rax
  41c444:	xor    eax,eax
  41c446:	mov    QWORD PTR [rbp-0x28],0x0
  41c44e:	mov    DWORD PTR [rbp-0x2c],0x0
  41c455:	mov    rax,QWORD PTR [rbp-0x68]
  41c459:	mov    QWORD PTR [rax],0x0
  41c460:	mov    rdx,QWORD PTR [rbp-0x58]
  41c464:	mov    rcx,QWORD PTR [rbp-0x50]
  41c468:	mov    rax,QWORD PTR [rbp-0x48]
  41c46c:	mov    rsi,rcx
  41c46f:	mov    rdi,rax
  41c472:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41c477:	mov    QWORD PTR [rbp-0x50],rax
  41c47b:	mov    rax,QWORD PTR [rbp-0x50]
  41c47f:	cmp    rax,QWORD PTR [rbp-0x58]
  41c483:	jne    41c48e <flatcc_emitter_copy_buffer@@Base+0x1533>
  41c485:	mov    rax,QWORD PTR [rbp-0x50]
  41c489:	jmp    41c5a1 <flatcc_emitter_copy_buffer@@Base+0x1646>
  41c48e:	mov    rax,QWORD PTR [rbp-0x60]
  41c492:	mov    QWORD PTR [rbp-0x18],rax
  41c496:	mov    rax,QWORD PTR [rbp-0x18]
  41c49a:	mov    rax,QWORD PTR [rax]
  41c49d:	mov    rdx,QWORD PTR [rbp-0x50]
  41c4a1:	mov    QWORD PTR [rbp-0x10],rdx
  41c4a5:	lea    r9,[rbp-0x30]
  41c4a9:	lea    r8,[rbp-0x20]
  41c4ad:	lea    rcx,[rbp-0x34]
  41c4b1:	mov    rdx,QWORD PTR [rbp-0x58]
  41c4b5:	mov    rsi,QWORD PTR [rbp-0x10]
  41c4b9:	mov    rdi,QWORD PTR [rbp-0x48]
  41c4bd:	call   rax
  41c4bf:	mov    QWORD PTR [rbp-0x50],rax
  41c4c3:	mov    rax,QWORD PTR [rbp-0x50]
  41c4c7:	cmp    rax,QWORD PTR [rbp-0x58]
  41c4cb:	jne    41c4d6 <flatcc_emitter_copy_buffer@@Base+0x157b>
  41c4cd:	mov    rax,QWORD PTR [rbp-0x50]
  41c4d1:	jmp    41c5a1 <flatcc_emitter_copy_buffer@@Base+0x1646>
  41c4d6:	mov    rax,QWORD PTR [rbp-0x50]
  41c4da:	cmp    rax,QWORD PTR [rbp-0x10]
  41c4de:	jne    41c4f1 <flatcc_emitter_copy_buffer@@Base+0x1596>
  41c4e0:	add    QWORD PTR [rbp-0x18],0x8
  41c4e5:	mov    rax,QWORD PTR [rbp-0x18]
  41c4e9:	mov    rax,QWORD PTR [rax]
  41c4ec:	test   rax,rax
  41c4ef:	jne    41c496 <flatcc_emitter_copy_buffer@@Base+0x153b>
  41c4f1:	mov    rax,QWORD PTR [rbp-0x10]
  41c4f5:	cmp    rax,QWORD PTR [rbp-0x50]
  41c4f9:	jne    41c519 <flatcc_emitter_copy_buffer@@Base+0x15be>
  41c4fb:	mov    rdx,QWORD PTR [rbp-0x58]
  41c4ff:	mov    rsi,QWORD PTR [rbp-0x50]
  41c503:	mov    rax,QWORD PTR [rbp-0x48]
  41c507:	mov    ecx,0x17
  41c50c:	mov    rdi,rax
  41c50f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c514:	jmp    41c5a1 <flatcc_emitter_copy_buffer@@Base+0x1646>
  41c519:	mov    eax,DWORD PTR [rbp-0x2c]
  41c51c:	lea    edx,[rax+0x1]
  41c51f:	mov    DWORD PTR [rbp-0x2c],edx
  41c522:	test   eax,eax
  41c524:	je     41c54c <flatcc_emitter_copy_buffer@@Base+0x15f1>
  41c526:	mov    rax,QWORD PTR [rbp-0x48]
  41c52a:	mov    eax,DWORD PTR [rax+0x14]
  41c52d:	test   eax,eax
  41c52f:	je     41c54c <flatcc_emitter_copy_buffer@@Base+0x15f1>
  41c531:	mov    rdx,QWORD PTR [rbp-0x58]
  41c535:	mov    rsi,QWORD PTR [rbp-0x50]
  41c539:	mov    rax,QWORD PTR [rbp-0x48]
  41c53d:	mov    ecx,0xe
  41c542:	mov    rdi,rax
  41c545:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c54a:	jmp    41c5a1 <flatcc_emitter_copy_buffer@@Base+0x1646>
  41c54c:	mov    rdi,QWORD PTR [rbp-0x20]
  41c550:	mov    ecx,DWORD PTR [rbp-0x34]
  41c553:	lea    r8,[rbp-0x28]
  41c557:	mov    rdx,QWORD PTR [rbp-0x58]
  41c55b:	mov    rsi,QWORD PTR [rbp-0x50]
  41c55f:	mov    rax,QWORD PTR [rbp-0x48]
  41c563:	mov    r9,r8
  41c566:	mov    r8,rdi
  41c569:	mov    rdi,rax
  41c56c:	call   41b990 <flatcc_emitter_copy_buffer@@Base+0xa35>
  41c571:	cmp    QWORD PTR [rbp-0x58],rax
  41c575:	jne    41c57d <flatcc_emitter_copy_buffer@@Base+0x1622>
  41c577:	mov    rax,QWORD PTR [rbp-0x58]
  41c57b:	jmp    41c5a1 <flatcc_emitter_copy_buffer@@Base+0x1646>
  41c57d:	mov    rax,QWORD PTR [rbp-0x68]
  41c581:	mov    rdx,QWORD PTR [rax]
  41c584:	mov    rax,QWORD PTR [rbp-0x28]
  41c588:	add    rdx,rax
  41c58b:	mov    rax,QWORD PTR [rbp-0x68]
  41c58f:	mov    QWORD PTR [rax],rdx
  41c592:	mov    eax,DWORD PTR [rbp-0x30]
  41c595:	test   eax,eax
  41c597:	jne    41c48e <flatcc_emitter_copy_buffer@@Base+0x1533>
  41c59d:	mov    rax,QWORD PTR [rbp-0x50]
  41c5a1:	mov    rdi,QWORD PTR [rbp-0x8]
  41c5a5:	xor    rdi,QWORD PTR fs:0x28
  41c5ae:	je     41c5b5 <flatcc_emitter_copy_buffer@@Base+0x165a>
  41c5b0:	call   403200 <__stack_chk_fail@plt>
  41c5b5:	leave  
  41c5b6:	ret    
  41c5b7:	endbr64 
  41c5bb:	push   rbp
  41c5bc:	mov    rbp,rsp
  41c5bf:	sub    rsp,0x60
  41c5c3:	mov    QWORD PTR [rbp-0x38],rdi
  41c5c7:	mov    QWORD PTR [rbp-0x40],rsi
  41c5cb:	mov    QWORD PTR [rbp-0x48],rdx
  41c5cf:	mov    QWORD PTR [rbp-0x50],rcx
  41c5d3:	mov    QWORD PTR [rbp-0x58],r8
  41c5d7:	mov    rax,QWORD PTR fs:0x28
  41c5e0:	mov    QWORD PTR [rbp-0x8],rax
  41c5e4:	xor    eax,eax
  41c5e6:	mov    DWORD PTR [rbp-0x30],0x0
  41c5ed:	mov    DWORD PTR [rbp-0x24],0x0
  41c5f4:	mov    rax,QWORD PTR [rbp-0x58]
  41c5f8:	mov    DWORD PTR [rax],0x0
  41c5fe:	mov    rdx,QWORD PTR [rbp-0x48]
  41c602:	mov    rcx,QWORD PTR [rbp-0x40]
  41c606:	mov    rax,QWORD PTR [rbp-0x38]
  41c60a:	mov    rsi,rcx
  41c60d:	mov    rdi,rax
  41c610:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41c615:	mov    QWORD PTR [rbp-0x40],rax
  41c619:	mov    rax,QWORD PTR [rbp-0x40]
  41c61d:	cmp    rax,QWORD PTR [rbp-0x48]
  41c621:	jne    41c62c <flatcc_emitter_copy_buffer@@Base+0x16d1>
  41c623:	mov    rax,QWORD PTR [rbp-0x40]
  41c627:	jmp    41c73b <flatcc_emitter_copy_buffer@@Base+0x17e0>
  41c62c:	mov    rax,QWORD PTR [rbp-0x50]
  41c630:	mov    QWORD PTR [rbp-0x18],rax
  41c634:	mov    rax,QWORD PTR [rbp-0x18]
  41c638:	mov    rax,QWORD PTR [rax]
  41c63b:	mov    rdx,QWORD PTR [rbp-0x40]
  41c63f:	mov    QWORD PTR [rbp-0x10],rdx
  41c643:	lea    r9,[rbp-0x28]
  41c647:	lea    r8,[rbp-0x20]
  41c64b:	lea    rcx,[rbp-0x2c]
  41c64f:	mov    rdx,QWORD PTR [rbp-0x48]
  41c653:	mov    rsi,QWORD PTR [rbp-0x10]
  41c657:	mov    rdi,QWORD PTR [rbp-0x38]
  41c65b:	call   rax
  41c65d:	mov    QWORD PTR [rbp-0x40],rax
  41c661:	mov    rax,QWORD PTR [rbp-0x40]
  41c665:	cmp    rax,QWORD PTR [rbp-0x48]
  41c669:	jne    41c674 <flatcc_emitter_copy_buffer@@Base+0x1719>
  41c66b:	mov    rax,QWORD PTR [rbp-0x40]
  41c66f:	jmp    41c73b <flatcc_emitter_copy_buffer@@Base+0x17e0>
  41c674:	mov    rax,QWORD PTR [rbp-0x40]
  41c678:	cmp    rax,QWORD PTR [rbp-0x10]
  41c67c:	jne    41c68f <flatcc_emitter_copy_buffer@@Base+0x1734>
  41c67e:	add    QWORD PTR [rbp-0x18],0x8
  41c683:	mov    rax,QWORD PTR [rbp-0x18]
  41c687:	mov    rax,QWORD PTR [rax]
  41c68a:	test   rax,rax
  41c68d:	jne    41c634 <flatcc_emitter_copy_buffer@@Base+0x16d9>
  41c68f:	mov    rax,QWORD PTR [rbp-0x10]
  41c693:	cmp    rax,QWORD PTR [rbp-0x40]
  41c697:	jne    41c6b7 <flatcc_emitter_copy_buffer@@Base+0x175c>
  41c699:	mov    rdx,QWORD PTR [rbp-0x48]
  41c69d:	mov    rsi,QWORD PTR [rbp-0x40]
  41c6a1:	mov    rax,QWORD PTR [rbp-0x38]
  41c6a5:	mov    ecx,0x17
  41c6aa:	mov    rdi,rax
  41c6ad:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c6b2:	jmp    41c73b <flatcc_emitter_copy_buffer@@Base+0x17e0>
  41c6b7:	mov    eax,DWORD PTR [rbp-0x24]
  41c6ba:	lea    edx,[rax+0x1]
  41c6bd:	mov    DWORD PTR [rbp-0x24],edx
  41c6c0:	test   eax,eax
  41c6c2:	je     41c6ea <flatcc_emitter_copy_buffer@@Base+0x178f>
  41c6c4:	mov    rax,QWORD PTR [rbp-0x38]
  41c6c8:	mov    eax,DWORD PTR [rax+0x14]
  41c6cb:	test   eax,eax
  41c6cd:	je     41c6ea <flatcc_emitter_copy_buffer@@Base+0x178f>
  41c6cf:	mov    rdx,QWORD PTR [rbp-0x48]
  41c6d3:	mov    rsi,QWORD PTR [rbp-0x40]
  41c6d7:	mov    rax,QWORD PTR [rbp-0x38]
  41c6db:	mov    ecx,0xe
  41c6e0:	mov    rdi,rax
  41c6e3:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c6e8:	jmp    41c73b <flatcc_emitter_copy_buffer@@Base+0x17e0>
  41c6ea:	mov    rdi,QWORD PTR [rbp-0x20]
  41c6ee:	mov    ecx,DWORD PTR [rbp-0x2c]
  41c6f1:	lea    r8,[rbp-0x30]
  41c6f5:	mov    rdx,QWORD PTR [rbp-0x48]
  41c6f9:	mov    rsi,QWORD PTR [rbp-0x40]
  41c6fd:	mov    rax,QWORD PTR [rbp-0x38]
  41c701:	mov    r9,r8
  41c704:	mov    r8,rdi
  41c707:	mov    rdi,rax
  41c70a:	call   41ba28 <flatcc_emitter_copy_buffer@@Base+0xacd>
  41c70f:	cmp    QWORD PTR [rbp-0x48],rax
  41c713:	jne    41c71b <flatcc_emitter_copy_buffer@@Base+0x17c0>
  41c715:	mov    rax,QWORD PTR [rbp-0x48]
  41c719:	jmp    41c73b <flatcc_emitter_copy_buffer@@Base+0x17e0>
  41c71b:	mov    rax,QWORD PTR [rbp-0x58]
  41c71f:	mov    edx,DWORD PTR [rax]
  41c721:	mov    eax,DWORD PTR [rbp-0x30]
  41c724:	add    edx,eax
  41c726:	mov    rax,QWORD PTR [rbp-0x58]
  41c72a:	mov    DWORD PTR [rax],edx
  41c72c:	mov    eax,DWORD PTR [rbp-0x28]
  41c72f:	test   eax,eax
  41c731:	jne    41c62c <flatcc_emitter_copy_buffer@@Base+0x16d1>
  41c737:	mov    rax,QWORD PTR [rbp-0x40]
  41c73b:	mov    rdi,QWORD PTR [rbp-0x8]
  41c73f:	xor    rdi,QWORD PTR fs:0x28
  41c748:	je     41c74f <flatcc_emitter_copy_buffer@@Base+0x17f4>
  41c74a:	call   403200 <__stack_chk_fail@plt>
  41c74f:	leave  
  41c750:	ret    
  41c751:	endbr64 
  41c755:	push   rbp
  41c756:	mov    rbp,rsp
  41c759:	sub    rsp,0x60
  41c75d:	mov    QWORD PTR [rbp-0x38],rdi
  41c761:	mov    QWORD PTR [rbp-0x40],rsi
  41c765:	mov    QWORD PTR [rbp-0x48],rdx
  41c769:	mov    QWORD PTR [rbp-0x50],rcx
  41c76d:	mov    QWORD PTR [rbp-0x58],r8
  41c771:	mov    rax,QWORD PTR fs:0x28
  41c77a:	mov    QWORD PTR [rbp-0x8],rax
  41c77e:	xor    eax,eax
  41c780:	mov    WORD PTR [rbp-0x2e],0x0
  41c786:	mov    DWORD PTR [rbp-0x24],0x0
  41c78d:	mov    rax,QWORD PTR [rbp-0x58]
  41c791:	mov    WORD PTR [rax],0x0
  41c796:	mov    rdx,QWORD PTR [rbp-0x48]
  41c79a:	mov    rcx,QWORD PTR [rbp-0x40]
  41c79e:	mov    rax,QWORD PTR [rbp-0x38]
  41c7a2:	mov    rsi,rcx
  41c7a5:	mov    rdi,rax
  41c7a8:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41c7ad:	mov    QWORD PTR [rbp-0x40],rax
  41c7b1:	mov    rax,QWORD PTR [rbp-0x40]
  41c7b5:	cmp    rax,QWORD PTR [rbp-0x48]
  41c7b9:	jne    41c7c4 <flatcc_emitter_copy_buffer@@Base+0x1869>
  41c7bb:	mov    rax,QWORD PTR [rbp-0x40]
  41c7bf:	jmp    41c8da <flatcc_emitter_copy_buffer@@Base+0x197f>
  41c7c4:	mov    rax,QWORD PTR [rbp-0x50]
  41c7c8:	mov    QWORD PTR [rbp-0x18],rax
  41c7cc:	mov    rax,QWORD PTR [rbp-0x18]
  41c7d0:	mov    rax,QWORD PTR [rax]
  41c7d3:	mov    rdx,QWORD PTR [rbp-0x40]
  41c7d7:	mov    QWORD PTR [rbp-0x10],rdx
  41c7db:	lea    r9,[rbp-0x28]
  41c7df:	lea    r8,[rbp-0x20]
  41c7e3:	lea    rcx,[rbp-0x2c]
  41c7e7:	mov    rdx,QWORD PTR [rbp-0x48]
  41c7eb:	mov    rsi,QWORD PTR [rbp-0x10]
  41c7ef:	mov    rdi,QWORD PTR [rbp-0x38]
  41c7f3:	call   rax
  41c7f5:	mov    QWORD PTR [rbp-0x40],rax
  41c7f9:	mov    rax,QWORD PTR [rbp-0x40]
  41c7fd:	cmp    rax,QWORD PTR [rbp-0x48]
  41c801:	jne    41c80c <flatcc_emitter_copy_buffer@@Base+0x18b1>
  41c803:	mov    rax,QWORD PTR [rbp-0x40]
  41c807:	jmp    41c8da <flatcc_emitter_copy_buffer@@Base+0x197f>
  41c80c:	mov    rax,QWORD PTR [rbp-0x40]
  41c810:	cmp    rax,QWORD PTR [rbp-0x10]
  41c814:	jne    41c827 <flatcc_emitter_copy_buffer@@Base+0x18cc>
  41c816:	add    QWORD PTR [rbp-0x18],0x8
  41c81b:	mov    rax,QWORD PTR [rbp-0x18]
  41c81f:	mov    rax,QWORD PTR [rax]
  41c822:	test   rax,rax
  41c825:	jne    41c7cc <flatcc_emitter_copy_buffer@@Base+0x1871>
  41c827:	mov    rax,QWORD PTR [rbp-0x10]
  41c82b:	cmp    rax,QWORD PTR [rbp-0x40]
  41c82f:	jne    41c84f <flatcc_emitter_copy_buffer@@Base+0x18f4>
  41c831:	mov    rdx,QWORD PTR [rbp-0x48]
  41c835:	mov    rsi,QWORD PTR [rbp-0x40]
  41c839:	mov    rax,QWORD PTR [rbp-0x38]
  41c83d:	mov    ecx,0x17
  41c842:	mov    rdi,rax
  41c845:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c84a:	jmp    41c8da <flatcc_emitter_copy_buffer@@Base+0x197f>
  41c84f:	mov    eax,DWORD PTR [rbp-0x24]
  41c852:	lea    edx,[rax+0x1]
  41c855:	mov    DWORD PTR [rbp-0x24],edx
  41c858:	test   eax,eax
  41c85a:	je     41c882 <flatcc_emitter_copy_buffer@@Base+0x1927>
  41c85c:	mov    rax,QWORD PTR [rbp-0x38]
  41c860:	mov    eax,DWORD PTR [rax+0x14]
  41c863:	test   eax,eax
  41c865:	je     41c882 <flatcc_emitter_copy_buffer@@Base+0x1927>
  41c867:	mov    rdx,QWORD PTR [rbp-0x48]
  41c86b:	mov    rsi,QWORD PTR [rbp-0x40]
  41c86f:	mov    rax,QWORD PTR [rbp-0x38]
  41c873:	mov    ecx,0xe
  41c878:	mov    rdi,rax
  41c87b:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c880:	jmp    41c8da <flatcc_emitter_copy_buffer@@Base+0x197f>
  41c882:	mov    rdi,QWORD PTR [rbp-0x20]
  41c886:	mov    ecx,DWORD PTR [rbp-0x2c]
  41c889:	lea    r8,[rbp-0x2e]
  41c88d:	mov    rdx,QWORD PTR [rbp-0x48]
  41c891:	mov    rsi,QWORD PTR [rbp-0x40]
  41c895:	mov    rax,QWORD PTR [rbp-0x38]
  41c899:	mov    r9,r8
  41c89c:	mov    r8,rdi
  41c89f:	mov    rdi,rax
  41c8a2:	call   41baba <flatcc_emitter_copy_buffer@@Base+0xb5f>
  41c8a7:	cmp    QWORD PTR [rbp-0x48],rax
  41c8ab:	jne    41c8b3 <flatcc_emitter_copy_buffer@@Base+0x1958>
  41c8ad:	mov    rax,QWORD PTR [rbp-0x48]
  41c8b1:	jmp    41c8da <flatcc_emitter_copy_buffer@@Base+0x197f>
  41c8b3:	mov    rax,QWORD PTR [rbp-0x58]
  41c8b7:	movzx  eax,WORD PTR [rax]
  41c8ba:	mov    edx,eax
  41c8bc:	movzx  eax,WORD PTR [rbp-0x2e]
  41c8c0:	add    eax,edx
  41c8c2:	mov    edx,eax
  41c8c4:	mov    rax,QWORD PTR [rbp-0x58]
  41c8c8:	mov    WORD PTR [rax],dx
  41c8cb:	mov    eax,DWORD PTR [rbp-0x28]
  41c8ce:	test   eax,eax
  41c8d0:	jne    41c7c4 <flatcc_emitter_copy_buffer@@Base+0x1869>
  41c8d6:	mov    rax,QWORD PTR [rbp-0x40]
  41c8da:	mov    rdi,QWORD PTR [rbp-0x8]
  41c8de:	xor    rdi,QWORD PTR fs:0x28
  41c8e7:	je     41c8ee <flatcc_emitter_copy_buffer@@Base+0x1993>
  41c8e9:	call   403200 <__stack_chk_fail@plt>
  41c8ee:	leave  
  41c8ef:	ret    
  41c8f0:	endbr64 
  41c8f4:	push   rbp
  41c8f5:	mov    rbp,rsp
  41c8f8:	sub    rsp,0x60
  41c8fc:	mov    QWORD PTR [rbp-0x38],rdi
  41c900:	mov    QWORD PTR [rbp-0x40],rsi
  41c904:	mov    QWORD PTR [rbp-0x48],rdx
  41c908:	mov    QWORD PTR [rbp-0x50],rcx
  41c90c:	mov    QWORD PTR [rbp-0x58],r8
  41c910:	mov    rax,QWORD PTR fs:0x28
  41c919:	mov    QWORD PTR [rbp-0x8],rax
  41c91d:	xor    eax,eax
  41c91f:	mov    BYTE PTR [rbp-0x2d],0x0
  41c923:	mov    DWORD PTR [rbp-0x24],0x0
  41c92a:	mov    rax,QWORD PTR [rbp-0x58]
  41c92e:	mov    BYTE PTR [rax],0x0
  41c931:	mov    rdx,QWORD PTR [rbp-0x48]
  41c935:	mov    rcx,QWORD PTR [rbp-0x40]
  41c939:	mov    rax,QWORD PTR [rbp-0x38]
  41c93d:	mov    rsi,rcx
  41c940:	mov    rdi,rax
  41c943:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41c948:	mov    QWORD PTR [rbp-0x40],rax
  41c94c:	mov    rax,QWORD PTR [rbp-0x40]
  41c950:	cmp    rax,QWORD PTR [rbp-0x48]
  41c954:	jne    41c95f <flatcc_emitter_copy_buffer@@Base+0x1a04>
  41c956:	mov    rax,QWORD PTR [rbp-0x40]
  41c95a:	jmp    41ca74 <flatcc_emitter_copy_buffer@@Base+0x1b19>
  41c95f:	mov    rax,QWORD PTR [rbp-0x50]
  41c963:	mov    QWORD PTR [rbp-0x18],rax
  41c967:	mov    rax,QWORD PTR [rbp-0x18]
  41c96b:	mov    rax,QWORD PTR [rax]
  41c96e:	mov    rdx,QWORD PTR [rbp-0x40]
  41c972:	mov    QWORD PTR [rbp-0x10],rdx
  41c976:	lea    r9,[rbp-0x28]
  41c97a:	lea    r8,[rbp-0x20]
  41c97e:	lea    rcx,[rbp-0x2c]
  41c982:	mov    rdx,QWORD PTR [rbp-0x48]
  41c986:	mov    rsi,QWORD PTR [rbp-0x10]
  41c98a:	mov    rdi,QWORD PTR [rbp-0x38]
  41c98e:	call   rax
  41c990:	mov    QWORD PTR [rbp-0x40],rax
  41c994:	mov    rax,QWORD PTR [rbp-0x40]
  41c998:	cmp    rax,QWORD PTR [rbp-0x48]
  41c99c:	jne    41c9a7 <flatcc_emitter_copy_buffer@@Base+0x1a4c>
  41c99e:	mov    rax,QWORD PTR [rbp-0x40]
  41c9a2:	jmp    41ca74 <flatcc_emitter_copy_buffer@@Base+0x1b19>
  41c9a7:	mov    rax,QWORD PTR [rbp-0x40]
  41c9ab:	cmp    rax,QWORD PTR [rbp-0x10]
  41c9af:	jne    41c9c2 <flatcc_emitter_copy_buffer@@Base+0x1a67>
  41c9b1:	add    QWORD PTR [rbp-0x18],0x8
  41c9b6:	mov    rax,QWORD PTR [rbp-0x18]
  41c9ba:	mov    rax,QWORD PTR [rax]
  41c9bd:	test   rax,rax
  41c9c0:	jne    41c967 <flatcc_emitter_copy_buffer@@Base+0x1a0c>
  41c9c2:	mov    rax,QWORD PTR [rbp-0x10]
  41c9c6:	cmp    rax,QWORD PTR [rbp-0x40]
  41c9ca:	jne    41c9ea <flatcc_emitter_copy_buffer@@Base+0x1a8f>
  41c9cc:	mov    rdx,QWORD PTR [rbp-0x48]
  41c9d0:	mov    rsi,QWORD PTR [rbp-0x40]
  41c9d4:	mov    rax,QWORD PTR [rbp-0x38]
  41c9d8:	mov    ecx,0x17
  41c9dd:	mov    rdi,rax
  41c9e0:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41c9e5:	jmp    41ca74 <flatcc_emitter_copy_buffer@@Base+0x1b19>
  41c9ea:	mov    eax,DWORD PTR [rbp-0x24]
  41c9ed:	lea    edx,[rax+0x1]
  41c9f0:	mov    DWORD PTR [rbp-0x24],edx
  41c9f3:	test   eax,eax
  41c9f5:	je     41ca1d <flatcc_emitter_copy_buffer@@Base+0x1ac2>
  41c9f7:	mov    rax,QWORD PTR [rbp-0x38]
  41c9fb:	mov    eax,DWORD PTR [rax+0x14]
  41c9fe:	test   eax,eax
  41ca00:	je     41ca1d <flatcc_emitter_copy_buffer@@Base+0x1ac2>
  41ca02:	mov    rdx,QWORD PTR [rbp-0x48]
  41ca06:	mov    rsi,QWORD PTR [rbp-0x40]
  41ca0a:	mov    rax,QWORD PTR [rbp-0x38]
  41ca0e:	mov    ecx,0xe
  41ca13:	mov    rdi,rax
  41ca16:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41ca1b:	jmp    41ca74 <flatcc_emitter_copy_buffer@@Base+0x1b19>
  41ca1d:	mov    rdi,QWORD PTR [rbp-0x20]
  41ca21:	mov    ecx,DWORD PTR [rbp-0x2c]
  41ca24:	lea    r8,[rbp-0x2d]
  41ca28:	mov    rdx,QWORD PTR [rbp-0x48]
  41ca2c:	mov    rsi,QWORD PTR [rbp-0x40]
  41ca30:	mov    rax,QWORD PTR [rbp-0x38]
  41ca34:	mov    r9,r8
  41ca37:	mov    r8,rdi
  41ca3a:	mov    rdi,rax
  41ca3d:	call   41bb4d <flatcc_emitter_copy_buffer@@Base+0xbf2>
  41ca42:	cmp    QWORD PTR [rbp-0x48],rax
  41ca46:	jne    41ca4e <flatcc_emitter_copy_buffer@@Base+0x1af3>
  41ca48:	mov    rax,QWORD PTR [rbp-0x48]
  41ca4c:	jmp    41ca74 <flatcc_emitter_copy_buffer@@Base+0x1b19>
  41ca4e:	mov    rax,QWORD PTR [rbp-0x58]
  41ca52:	movzx  eax,BYTE PTR [rax]
  41ca55:	mov    edx,eax
  41ca57:	movzx  eax,BYTE PTR [rbp-0x2d]
  41ca5b:	add    eax,edx
  41ca5d:	mov    edx,eax
  41ca5f:	mov    rax,QWORD PTR [rbp-0x58]
  41ca63:	mov    BYTE PTR [rax],dl
  41ca65:	mov    eax,DWORD PTR [rbp-0x28]
  41ca68:	test   eax,eax
  41ca6a:	jne    41c95f <flatcc_emitter_copy_buffer@@Base+0x1a04>
  41ca70:	mov    rax,QWORD PTR [rbp-0x40]
  41ca74:	mov    rdi,QWORD PTR [rbp-0x8]
  41ca78:	xor    rdi,QWORD PTR fs:0x28
  41ca81:	je     41ca88 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  41ca83:	call   403200 <__stack_chk_fail@plt>
  41ca88:	leave  
  41ca89:	ret    
  41ca8a:	endbr64 
  41ca8e:	push   rbp
  41ca8f:	mov    rbp,rsp
  41ca92:	sub    rsp,0x60
  41ca96:	mov    QWORD PTR [rbp-0x38],rdi
  41ca9a:	mov    QWORD PTR [rbp-0x40],rsi
  41ca9e:	mov    QWORD PTR [rbp-0x48],rdx
  41caa2:	mov    QWORD PTR [rbp-0x50],rcx
  41caa6:	mov    QWORD PTR [rbp-0x58],r8
  41caaa:	mov    rax,QWORD PTR fs:0x28
  41cab3:	mov    QWORD PTR [rbp-0x8],rax
  41cab7:	xor    eax,eax
  41cab9:	mov    BYTE PTR [rbp-0x2d],0x0
  41cabd:	mov    DWORD PTR [rbp-0x24],0x0
  41cac4:	mov    rax,QWORD PTR [rbp-0x58]
  41cac8:	mov    BYTE PTR [rax],0x0
  41cacb:	mov    rdx,QWORD PTR [rbp-0x48]
  41cacf:	mov    rcx,QWORD PTR [rbp-0x40]
  41cad3:	mov    rax,QWORD PTR [rbp-0x38]
  41cad7:	mov    rsi,rcx
  41cada:	mov    rdi,rax
  41cadd:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41cae2:	mov    QWORD PTR [rbp-0x40],rax
  41cae6:	mov    rax,QWORD PTR [rbp-0x40]
  41caea:	cmp    rax,QWORD PTR [rbp-0x48]
  41caee:	jne    41caf9 <flatcc_emitter_copy_buffer@@Base+0x1b9e>
  41caf0:	mov    rax,QWORD PTR [rbp-0x40]
  41caf4:	jmp    41cc0a <flatcc_emitter_copy_buffer@@Base+0x1caf>
  41caf9:	mov    rax,QWORD PTR [rbp-0x50]
  41cafd:	mov    QWORD PTR [rbp-0x18],rax
  41cb01:	mov    rax,QWORD PTR [rbp-0x18]
  41cb05:	mov    rax,QWORD PTR [rax]
  41cb08:	mov    rdx,QWORD PTR [rbp-0x40]
  41cb0c:	mov    QWORD PTR [rbp-0x10],rdx
  41cb10:	lea    r9,[rbp-0x28]
  41cb14:	lea    r8,[rbp-0x20]
  41cb18:	lea    rcx,[rbp-0x2c]
  41cb1c:	mov    rdx,QWORD PTR [rbp-0x48]
  41cb20:	mov    rsi,QWORD PTR [rbp-0x10]
  41cb24:	mov    rdi,QWORD PTR [rbp-0x38]
  41cb28:	call   rax
  41cb2a:	mov    QWORD PTR [rbp-0x40],rax
  41cb2e:	mov    rax,QWORD PTR [rbp-0x40]
  41cb32:	cmp    rax,QWORD PTR [rbp-0x48]
  41cb36:	jne    41cb41 <flatcc_emitter_copy_buffer@@Base+0x1be6>
  41cb38:	mov    rax,QWORD PTR [rbp-0x40]
  41cb3c:	jmp    41cc0a <flatcc_emitter_copy_buffer@@Base+0x1caf>
  41cb41:	mov    rax,QWORD PTR [rbp-0x40]
  41cb45:	cmp    rax,QWORD PTR [rbp-0x10]
  41cb49:	jne    41cb5c <flatcc_emitter_copy_buffer@@Base+0x1c01>
  41cb4b:	add    QWORD PTR [rbp-0x18],0x8
  41cb50:	mov    rax,QWORD PTR [rbp-0x18]
  41cb54:	mov    rax,QWORD PTR [rax]
  41cb57:	test   rax,rax
  41cb5a:	jne    41cb01 <flatcc_emitter_copy_buffer@@Base+0x1ba6>
  41cb5c:	mov    rax,QWORD PTR [rbp-0x10]
  41cb60:	cmp    rax,QWORD PTR [rbp-0x40]
  41cb64:	jne    41cb84 <flatcc_emitter_copy_buffer@@Base+0x1c29>
  41cb66:	mov    rdx,QWORD PTR [rbp-0x48]
  41cb6a:	mov    rsi,QWORD PTR [rbp-0x40]
  41cb6e:	mov    rax,QWORD PTR [rbp-0x38]
  41cb72:	mov    ecx,0x17
  41cb77:	mov    rdi,rax
  41cb7a:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41cb7f:	jmp    41cc0a <flatcc_emitter_copy_buffer@@Base+0x1caf>
  41cb84:	mov    eax,DWORD PTR [rbp-0x24]
  41cb87:	lea    edx,[rax+0x1]
  41cb8a:	mov    DWORD PTR [rbp-0x24],edx
  41cb8d:	test   eax,eax
  41cb8f:	je     41cbb7 <flatcc_emitter_copy_buffer@@Base+0x1c5c>
  41cb91:	mov    rax,QWORD PTR [rbp-0x38]
  41cb95:	mov    eax,DWORD PTR [rax+0x14]
  41cb98:	test   eax,eax
  41cb9a:	je     41cbb7 <flatcc_emitter_copy_buffer@@Base+0x1c5c>
  41cb9c:	mov    rdx,QWORD PTR [rbp-0x48]
  41cba0:	mov    rsi,QWORD PTR [rbp-0x40]
  41cba4:	mov    rax,QWORD PTR [rbp-0x38]
  41cba8:	mov    ecx,0xe
  41cbad:	mov    rdi,rax
  41cbb0:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41cbb5:	jmp    41cc0a <flatcc_emitter_copy_buffer@@Base+0x1caf>
  41cbb7:	mov    rdi,QWORD PTR [rbp-0x20]
  41cbbb:	mov    ecx,DWORD PTR [rbp-0x2c]
  41cbbe:	lea    r8,[rbp-0x2d]
  41cbc2:	mov    rdx,QWORD PTR [rbp-0x48]
  41cbc6:	mov    rsi,QWORD PTR [rbp-0x40]
  41cbca:	mov    rax,QWORD PTR [rbp-0x38]
  41cbce:	mov    r9,r8
  41cbd1:	mov    r8,rdi
  41cbd4:	mov    rdi,rax
  41cbd7:	call   41b7d3 <flatcc_emitter_copy_buffer@@Base+0x878>
  41cbdc:	cmp    QWORD PTR [rbp-0x48],rax
  41cbe0:	jne    41cbe8 <flatcc_emitter_copy_buffer@@Base+0x1c8d>
  41cbe2:	mov    rax,QWORD PTR [rbp-0x48]
  41cbe6:	jmp    41cc0a <flatcc_emitter_copy_buffer@@Base+0x1caf>
  41cbe8:	mov    rax,QWORD PTR [rbp-0x58]
  41cbec:	movzx  edx,BYTE PTR [rax]
  41cbef:	movzx  eax,BYTE PTR [rbp-0x2d]
  41cbf3:	add    eax,edx
  41cbf5:	mov    rdx,QWORD PTR [rbp-0x58]
  41cbf9:	mov    BYTE PTR [rdx],al
  41cbfb:	mov    eax,DWORD PTR [rbp-0x28]
  41cbfe:	test   eax,eax
  41cc00:	jne    41caf9 <flatcc_emitter_copy_buffer@@Base+0x1b9e>
  41cc06:	mov    rax,QWORD PTR [rbp-0x40]
  41cc0a:	mov    rdi,QWORD PTR [rbp-0x8]
  41cc0e:	xor    rdi,QWORD PTR fs:0x28
  41cc17:	je     41cc1e <flatcc_emitter_copy_buffer@@Base+0x1cc3>
  41cc19:	call   403200 <__stack_chk_fail@plt>
  41cc1e:	leave  
  41cc1f:	ret    
  41cc20:	endbr64 
  41cc24:	push   rbp
  41cc25:	mov    rbp,rsp
  41cc28:	sub    rsp,0x60
  41cc2c:	mov    QWORD PTR [rbp-0x38],rdi
  41cc30:	mov    QWORD PTR [rbp-0x40],rsi
  41cc34:	mov    QWORD PTR [rbp-0x48],rdx
  41cc38:	mov    QWORD PTR [rbp-0x50],rcx
  41cc3c:	mov    QWORD PTR [rbp-0x58],r8
  41cc40:	mov    rax,QWORD PTR fs:0x28
  41cc49:	mov    QWORD PTR [rbp-0x8],rax
  41cc4d:	xor    eax,eax
  41cc4f:	vxorps xmm0,xmm0,xmm0
  41cc53:	vmovss DWORD PTR [rbp-0x30],xmm0
  41cc58:	mov    DWORD PTR [rbp-0x24],0x0
  41cc5f:	mov    rax,QWORD PTR [rbp-0x58]
  41cc63:	vxorps xmm0,xmm0,xmm0
  41cc67:	vmovss DWORD PTR [rax],xmm0
  41cc6b:	mov    rdx,QWORD PTR [rbp-0x48]
  41cc6f:	mov    rcx,QWORD PTR [rbp-0x40]
  41cc73:	mov    rax,QWORD PTR [rbp-0x38]
  41cc77:	mov    rsi,rcx
  41cc7a:	mov    rdi,rax
  41cc7d:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41cc82:	mov    QWORD PTR [rbp-0x40],rax
  41cc86:	mov    rax,QWORD PTR [rbp-0x40]
  41cc8a:	cmp    rax,QWORD PTR [rbp-0x48]
  41cc8e:	jne    41cc99 <flatcc_emitter_copy_buffer@@Base+0x1d3e>
  41cc90:	mov    rax,QWORD PTR [rbp-0x40]
  41cc94:	jmp    41cdb0 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  41cc99:	mov    rax,QWORD PTR [rbp-0x50]
  41cc9d:	mov    QWORD PTR [rbp-0x18],rax
  41cca1:	mov    rax,QWORD PTR [rbp-0x18]
  41cca5:	mov    rax,QWORD PTR [rax]
  41cca8:	mov    rdx,QWORD PTR [rbp-0x40]
  41ccac:	mov    QWORD PTR [rbp-0x10],rdx
  41ccb0:	lea    r9,[rbp-0x28]
  41ccb4:	lea    r8,[rbp-0x20]
  41ccb8:	lea    rcx,[rbp-0x2c]
  41ccbc:	mov    rdx,QWORD PTR [rbp-0x48]
  41ccc0:	mov    rsi,QWORD PTR [rbp-0x10]
  41ccc4:	mov    rdi,QWORD PTR [rbp-0x38]
  41ccc8:	call   rax
  41ccca:	mov    QWORD PTR [rbp-0x40],rax
  41ccce:	mov    rax,QWORD PTR [rbp-0x40]
  41ccd2:	cmp    rax,QWORD PTR [rbp-0x48]
  41ccd6:	jne    41cce1 <flatcc_emitter_copy_buffer@@Base+0x1d86>
  41ccd8:	mov    rax,QWORD PTR [rbp-0x40]
  41ccdc:	jmp    41cdb0 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  41cce1:	mov    rax,QWORD PTR [rbp-0x40]
  41cce5:	cmp    rax,QWORD PTR [rbp-0x10]
  41cce9:	jne    41ccfc <flatcc_emitter_copy_buffer@@Base+0x1da1>
  41cceb:	add    QWORD PTR [rbp-0x18],0x8
  41ccf0:	mov    rax,QWORD PTR [rbp-0x18]
  41ccf4:	mov    rax,QWORD PTR [rax]
  41ccf7:	test   rax,rax
  41ccfa:	jne    41cca1 <flatcc_emitter_copy_buffer@@Base+0x1d46>
  41ccfc:	mov    rax,QWORD PTR [rbp-0x10]
  41cd00:	cmp    rax,QWORD PTR [rbp-0x40]
  41cd04:	jne    41cd24 <flatcc_emitter_copy_buffer@@Base+0x1dc9>
  41cd06:	mov    rdx,QWORD PTR [rbp-0x48]
  41cd0a:	mov    rsi,QWORD PTR [rbp-0x40]
  41cd0e:	mov    rax,QWORD PTR [rbp-0x38]
  41cd12:	mov    ecx,0x17
  41cd17:	mov    rdi,rax
  41cd1a:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41cd1f:	jmp    41cdb0 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  41cd24:	mov    eax,DWORD PTR [rbp-0x24]
  41cd27:	lea    edx,[rax+0x1]
  41cd2a:	mov    DWORD PTR [rbp-0x24],edx
  41cd2d:	test   eax,eax
  41cd2f:	je     41cd57 <flatcc_emitter_copy_buffer@@Base+0x1dfc>
  41cd31:	mov    rax,QWORD PTR [rbp-0x38]
  41cd35:	mov    eax,DWORD PTR [rax+0x14]
  41cd38:	test   eax,eax
  41cd3a:	je     41cd57 <flatcc_emitter_copy_buffer@@Base+0x1dfc>
  41cd3c:	mov    rdx,QWORD PTR [rbp-0x48]
  41cd40:	mov    rsi,QWORD PTR [rbp-0x40]
  41cd44:	mov    rax,QWORD PTR [rbp-0x38]
  41cd48:	mov    ecx,0xe
  41cd4d:	mov    rdi,rax
  41cd50:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41cd55:	jmp    41cdb0 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  41cd57:	mov    rdi,QWORD PTR [rbp-0x20]
  41cd5b:	mov    ecx,DWORD PTR [rbp-0x2c]
  41cd5e:	lea    r8,[rbp-0x30]
  41cd62:	mov    rdx,QWORD PTR [rbp-0x48]
  41cd66:	mov    rsi,QWORD PTR [rbp-0x40]
  41cd6a:	mov    rax,QWORD PTR [rbp-0x38]
  41cd6e:	mov    r9,r8
  41cd71:	mov    r8,rdi
  41cd74:	mov    rdi,rax
  41cd77:	call   41bbdb <flatcc_emitter_copy_buffer@@Base+0xc80>
  41cd7c:	cmp    QWORD PTR [rbp-0x48],rax
  41cd80:	jne    41cd88 <flatcc_emitter_copy_buffer@@Base+0x1e2d>
  41cd82:	mov    rax,QWORD PTR [rbp-0x48]
  41cd86:	jmp    41cdb0 <flatcc_emitter_copy_buffer@@Base+0x1e55>
  41cd88:	mov    rax,QWORD PTR [rbp-0x58]
  41cd8c:	vmovss xmm1,DWORD PTR [rax]
  41cd90:	vmovss xmm0,DWORD PTR [rbp-0x30]
  41cd95:	vaddss xmm0,xmm1,xmm0
  41cd99:	mov    rax,QWORD PTR [rbp-0x58]
  41cd9d:	vmovss DWORD PTR [rax],xmm0
  41cda1:	mov    eax,DWORD PTR [rbp-0x28]
  41cda4:	test   eax,eax
  41cda6:	jne    41cc99 <flatcc_emitter_copy_buffer@@Base+0x1d3e>
  41cdac:	mov    rax,QWORD PTR [rbp-0x40]
  41cdb0:	mov    rdi,QWORD PTR [rbp-0x8]
  41cdb4:	xor    rdi,QWORD PTR fs:0x28
  41cdbd:	je     41cdc4 <flatcc_emitter_copy_buffer@@Base+0x1e69>
  41cdbf:	call   403200 <__stack_chk_fail@plt>
  41cdc4:	leave  
  41cdc5:	ret    
  41cdc6:	endbr64 
  41cdca:	push   rbp
  41cdcb:	mov    rbp,rsp
  41cdce:	sub    rsp,0x70
  41cdd2:	mov    QWORD PTR [rbp-0x48],rdi
  41cdd6:	mov    QWORD PTR [rbp-0x50],rsi
  41cdda:	mov    QWORD PTR [rbp-0x58],rdx
  41cdde:	mov    QWORD PTR [rbp-0x60],rcx
  41cde2:	mov    QWORD PTR [rbp-0x68],r8
  41cde6:	mov    rax,QWORD PTR fs:0x28
  41cdef:	mov    QWORD PTR [rbp-0x8],rax
  41cdf3:	xor    eax,eax
  41cdf5:	vxorpd xmm0,xmm0,xmm0
  41cdf9:	vmovsd QWORD PTR [rbp-0x28],xmm0
  41cdfe:	mov    DWORD PTR [rbp-0x2c],0x0
  41ce05:	mov    rax,QWORD PTR [rbp-0x68]
  41ce09:	vxorpd xmm0,xmm0,xmm0
  41ce0d:	vmovsd QWORD PTR [rax],xmm0
  41ce11:	mov    rdx,QWORD PTR [rbp-0x58]
  41ce15:	mov    rcx,QWORD PTR [rbp-0x50]
  41ce19:	mov    rax,QWORD PTR [rbp-0x48]
  41ce1d:	mov    rsi,rcx
  41ce20:	mov    rdi,rax
  41ce23:	call   41b3ee <flatcc_emitter_copy_buffer@@Base+0x493>
  41ce28:	mov    QWORD PTR [rbp-0x50],rax
  41ce2c:	mov    rax,QWORD PTR [rbp-0x50]
  41ce30:	cmp    rax,QWORD PTR [rbp-0x58]
  41ce34:	jne    41ce3f <flatcc_emitter_copy_buffer@@Base+0x1ee4>
  41ce36:	mov    rax,QWORD PTR [rbp-0x50]
  41ce3a:	jmp    41cf56 <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  41ce3f:	mov    rax,QWORD PTR [rbp-0x60]
  41ce43:	mov    QWORD PTR [rbp-0x18],rax
  41ce47:	mov    rax,QWORD PTR [rbp-0x18]
  41ce4b:	mov    rax,QWORD PTR [rax]
  41ce4e:	mov    rdx,QWORD PTR [rbp-0x50]
  41ce52:	mov    QWORD PTR [rbp-0x10],rdx
  41ce56:	lea    r9,[rbp-0x30]
  41ce5a:	lea    r8,[rbp-0x20]
  41ce5e:	lea    rcx,[rbp-0x34]
  41ce62:	mov    rdx,QWORD PTR [rbp-0x58]
  41ce66:	mov    rsi,QWORD PTR [rbp-0x10]
  41ce6a:	mov    rdi,QWORD PTR [rbp-0x48]
  41ce6e:	call   rax
  41ce70:	mov    QWORD PTR [rbp-0x50],rax
  41ce74:	mov    rax,QWORD PTR [rbp-0x50]
  41ce78:	cmp    rax,QWORD PTR [rbp-0x58]
  41ce7c:	jne    41ce87 <flatcc_emitter_copy_buffer@@Base+0x1f2c>
  41ce7e:	mov    rax,QWORD PTR [rbp-0x50]
  41ce82:	jmp    41cf56 <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  41ce87:	mov    rax,QWORD PTR [rbp-0x50]
  41ce8b:	cmp    rax,QWORD PTR [rbp-0x10]
  41ce8f:	jne    41cea2 <flatcc_emitter_copy_buffer@@Base+0x1f47>
  41ce91:	add    QWORD PTR [rbp-0x18],0x8
  41ce96:	mov    rax,QWORD PTR [rbp-0x18]
  41ce9a:	mov    rax,QWORD PTR [rax]
  41ce9d:	test   rax,rax
  41cea0:	jne    41ce47 <flatcc_emitter_copy_buffer@@Base+0x1eec>
  41cea2:	mov    rax,QWORD PTR [rbp-0x10]
  41cea6:	cmp    rax,QWORD PTR [rbp-0x50]
  41ceaa:	jne    41ceca <flatcc_emitter_copy_buffer@@Base+0x1f6f>
  41ceac:	mov    rdx,QWORD PTR [rbp-0x58]
  41ceb0:	mov    rsi,QWORD PTR [rbp-0x50]
  41ceb4:	mov    rax,QWORD PTR [rbp-0x48]
  41ceb8:	mov    ecx,0x17
  41cebd:	mov    rdi,rax
  41cec0:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41cec5:	jmp    41cf56 <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  41ceca:	mov    eax,DWORD PTR [rbp-0x2c]
  41cecd:	lea    edx,[rax+0x1]
  41ced0:	mov    DWORD PTR [rbp-0x2c],edx
  41ced3:	test   eax,eax
  41ced5:	je     41cefd <flatcc_emitter_copy_buffer@@Base+0x1fa2>
  41ced7:	mov    rax,QWORD PTR [rbp-0x48]
  41cedb:	mov    eax,DWORD PTR [rax+0x14]
  41cede:	test   eax,eax
  41cee0:	je     41cefd <flatcc_emitter_copy_buffer@@Base+0x1fa2>
  41cee2:	mov    rdx,QWORD PTR [rbp-0x58]
  41cee6:	mov    rsi,QWORD PTR [rbp-0x50]
  41ceea:	mov    rax,QWORD PTR [rbp-0x48]
  41ceee:	mov    ecx,0xe
  41cef3:	mov    rdi,rax
  41cef6:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41cefb:	jmp    41cf56 <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  41cefd:	mov    rdi,QWORD PTR [rbp-0x20]
  41cf01:	mov    ecx,DWORD PTR [rbp-0x34]
  41cf04:	lea    r8,[rbp-0x28]
  41cf08:	mov    rdx,QWORD PTR [rbp-0x58]
  41cf0c:	mov    rsi,QWORD PTR [rbp-0x50]
  41cf10:	mov    rax,QWORD PTR [rbp-0x48]
  41cf14:	mov    r9,r8
  41cf17:	mov    r8,rdi
  41cf1a:	mov    rdi,rax
  41cf1d:	call   41bc62 <flatcc_emitter_copy_buffer@@Base+0xd07>
  41cf22:	cmp    QWORD PTR [rbp-0x58],rax
  41cf26:	jne    41cf2e <flatcc_emitter_copy_buffer@@Base+0x1fd3>
  41cf28:	mov    rax,QWORD PTR [rbp-0x58]
  41cf2c:	jmp    41cf56 <flatcc_emitter_copy_buffer@@Base+0x1ffb>
  41cf2e:	mov    rax,QWORD PTR [rbp-0x68]
  41cf32:	vmovsd xmm1,QWORD PTR [rax]
  41cf36:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  41cf3b:	vaddsd xmm0,xmm1,xmm0
  41cf3f:	mov    rax,QWORD PTR [rbp-0x68]
  41cf43:	vmovsd QWORD PTR [rax],xmm0
  41cf47:	mov    eax,DWORD PTR [rbp-0x30]
  41cf4a:	test   eax,eax
  41cf4c:	jne    41ce3f <flatcc_emitter_copy_buffer@@Base+0x1ee4>
  41cf52:	mov    rax,QWORD PTR [rbp-0x50]
  41cf56:	mov    rdi,QWORD PTR [rbp-0x8]
  41cf5a:	xor    rdi,QWORD PTR fs:0x28
  41cf63:	je     41cf6a <flatcc_emitter_copy_buffer@@Base+0x200f>
  41cf65:	call   403200 <__stack_chk_fail@plt>
  41cf6a:	leave  
  41cf6b:	ret    
  41cf6c:	endbr64 
  41cf70:	push   rbp
  41cf71:	mov    rbp,rsp
  41cf74:	vmovsd QWORD PTR [rbp-0x18],xmm0
  41cf79:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  41cf7e:	vmovsd QWORD PTR [rbp-0x8],xmm0
  41cf83:	mov    rax,QWORD PTR [rbp-0x8]
  41cf87:	pop    rbp
  41cf88:	ret    
  41cf89:	endbr64 
  41cf8d:	push   rbp
  41cf8e:	mov    rbp,rsp
  41cf91:	mov    QWORD PTR [rbp-0x18],rdi
  41cf95:	mov    rax,QWORD PTR [rbp-0x18]
  41cf99:	mov    QWORD PTR [rbp-0x8],rax
  41cf9d:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  41cfa2:	vmovq  rax,xmm0
  41cfa7:	vmovq  xmm0,rax
  41cfac:	pop    rbp
  41cfad:	ret    
  41cfae:	endbr64 
  41cfb2:	push   rbp
  41cfb3:	mov    rbp,rsp
  41cfb6:	vmovsd QWORD PTR [rbp-0x18],xmm0
  41cfbb:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  41cfc0:	vcvttsd2si eax,xmm0
  41cfc4:	mov    DWORD PTR [rbp-0x4],eax
  41cfc7:	vxorpd xmm0,xmm0,xmm0
  41cfcb:	vcomisd xmm0,QWORD PTR [rbp-0x18]
  41cfd0:	jbe    41cfd7 <flatcc_emitter_copy_buffer@@Base+0x207c>
  41cfd2:	mov    eax,DWORD PTR [rbp-0x4]
  41cfd5:	jmp    41d003 <flatcc_emitter_copy_buffer@@Base+0x20a8>
  41cfd7:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  41cfdc:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  41cfe1:	vsubsd xmm0,xmm1,xmm0
  41cfe5:	vxorpd xmm1,xmm1,xmm1
  41cfe9:	vucomisd xmm0,xmm1
  41cfed:	jp     41cff9 <flatcc_emitter_copy_buffer@@Base+0x209e>
  41cfef:	vxorpd xmm1,xmm1,xmm1
  41cff3:	vucomisd xmm0,xmm1
  41cff7:	je     41d000 <flatcc_emitter_copy_buffer@@Base+0x20a5>
  41cff9:	mov    eax,DWORD PTR [rbp-0x4]
  41cffc:	inc    eax
  41cffe:	jmp    41d003 <flatcc_emitter_copy_buffer@@Base+0x20a8>
  41d000:	mov    eax,DWORD PTR [rbp-0x4]
  41d003:	pop    rbp
  41d004:	ret    
  41d005:	endbr64 
  41d009:	push   rbp
  41d00a:	mov    rbp,rsp
  41d00d:	sub    rsp,0x20
  41d011:	mov    DWORD PTR [rbp-0x14],edi
  41d014:	mov    QWORD PTR [rbp-0x20],rsi
  41d018:	mov    eax,DWORD PTR [rbp-0x14]
  41d01b:	add    eax,0x3f
  41d01e:	vcvtsi2sd xmm0,xmm0,eax
  41d022:	vmovsd xmm1,QWORD PTR [rip+0x740e]        # 424438 <flatcc_builder_padding_base@@Base+0x2098>
  41d02a:	vmulsd xmm2,xmm0,xmm1
  41d02e:	vmovq  rax,xmm2
  41d033:	vmovq  xmm0,rax
  41d038:	call   41cfae <flatcc_emitter_copy_buffer@@Base+0x2053>
  41d03d:	mov    DWORD PTR [rbp-0x8],eax
  41d040:	mov    eax,DWORD PTR [rbp-0x8]
  41d043:	add    eax,0x15b
  41d048:	lea    edx,[rax+0x7]
  41d04b:	test   eax,eax
  41d04d:	cmovs  eax,edx
  41d050:	sar    eax,0x3
  41d053:	inc    eax
  41d055:	mov    DWORD PTR [rbp-0x4],eax
  41d058:	mov    eax,DWORD PTR [rbp-0x4]
  41d05b:	cdqe   
  41d05d:	shl    rax,0x4
  41d061:	mov    rdx,rax
  41d064:	lea    rax,[rip+0x6095]        # 423100 <flatcc_builder_padding_base@@Base+0xd60>
  41d06b:	mov    rdx,QWORD PTR [rdx+rax*1]
  41d06f:	mov    rax,QWORD PTR [rbp-0x20]
  41d073:	mov    QWORD PTR [rax],rdx
  41d076:	mov    eax,DWORD PTR [rbp-0x4]
  41d079:	cdqe   
  41d07b:	shl    rax,0x4
  41d07f:	mov    rdx,rax
  41d082:	lea    rax,[rip+0x607f]        # 423108 <flatcc_builder_padding_base@@Base+0xd68>
  41d089:	movzx  eax,WORD PTR [rdx+rax*1]
  41d08d:	movsx  edx,ax
  41d090:	mov    rax,QWORD PTR [rbp-0x20]
  41d094:	mov    DWORD PTR [rax+0x8],edx
  41d097:	mov    eax,DWORD PTR [rbp-0x4]
  41d09a:	cdqe   
  41d09c:	shl    rax,0x4
  41d0a0:	mov    rdx,rax
  41d0a3:	lea    rax,[rip+0x6060]        # 42310a <flatcc_builder_padding_base@@Base+0xd6a>
  41d0aa:	movzx  eax,WORD PTR [rdx+rax*1]
  41d0ae:	cwde   
  41d0af:	leave  
  41d0b0:	ret    
  41d0b1:	endbr64 
  41d0b5:	push   rbp
  41d0b6:	mov    rbp,rsp
  41d0b9:	sub    rsp,0x30
  41d0bd:	mov    rax,rdi
  41d0c0:	mov    r8,rsi
  41d0c3:	mov    rsi,rax
  41d0c6:	mov    rdi,rdx
  41d0c9:	mov    rdi,r8
  41d0cc:	mov    QWORD PTR [rbp-0x20],rsi
  41d0d0:	mov    QWORD PTR [rbp-0x18],rdi
  41d0d4:	mov    QWORD PTR [rbp-0x30],rdx
  41d0d8:	mov    QWORD PTR [rbp-0x28],rcx
  41d0dc:	mov    rdx,QWORD PTR [rbp-0x20]
  41d0e0:	mov    rax,QWORD PTR [rbp-0x30]
  41d0e4:	sub    rdx,rax
  41d0e7:	mov    rax,rdx
  41d0ea:	mov    QWORD PTR [rbp-0x10],rax
  41d0ee:	mov    eax,DWORD PTR [rbp-0x18]
  41d0f1:	mov    DWORD PTR [rbp-0x8],eax
  41d0f4:	mov    edx,DWORD PTR [rbp-0x18]
  41d0f7:	mov    eax,DWORD PTR [rbp-0x28]
  41d0fa:	cmp    edx,eax
  41d0fc:	jne    41d10b <flatcc_emitter_copy_buffer@@Base+0x21b0>
  41d0fe:	mov    rdx,QWORD PTR [rbp-0x20]
  41d102:	mov    rax,QWORD PTR [rbp-0x30]
  41d106:	cmp    rdx,rax
  41d109:	jae    41d12a <flatcc_emitter_copy_buffer@@Base+0x21cf>
  41d10b:	lea    rcx,[rip+0x6dfe]        # 423f10 <flatcc_builder_padding_base@@Base+0x1b70>
  41d112:	mov    edx,0xef
  41d117:	lea    rsi,[rip+0x6552]        # 423670 <flatcc_builder_padding_base@@Base+0x12d0>
  41d11e:	lea    rdi,[rip+0x65bb]        # 4236e0 <flatcc_builder_padding_base@@Base+0x1340>
  41d125:	call   403220 <__assert_fail@plt>
  41d12a:	mov    rax,QWORD PTR [rbp-0x10]
  41d12e:	mov    rdx,QWORD PTR [rbp-0x8]
  41d132:	leave  
  41d133:	ret    
  41d134:	endbr64 
  41d138:	push   rbp
  41d139:	mov    rbp,rsp
  41d13c:	sub    rsp,0x8
  41d140:	mov    rax,rdi
  41d143:	mov    r8,rsi
  41d146:	mov    rsi,rax
  41d149:	mov    rdi,rdx
  41d14c:	mov    rdi,r8
  41d14f:	mov    QWORD PTR [rbp-0x70],rsi
  41d153:	mov    QWORD PTR [rbp-0x68],rdi
  41d157:	mov    QWORD PTR [rbp-0x80],rdx
  41d15b:	mov    QWORD PTR [rbp-0x78],rcx
  41d15f:	mov    rax,QWORD PTR [rbp-0x70]
  41d163:	shr    rax,0x20
  41d167:	mov    QWORD PTR [rbp-0x58],rax
  41d16b:	mov    rax,QWORD PTR [rbp-0x70]
  41d16f:	and    eax,0xffffffff
  41d172:	mov    QWORD PTR [rbp-0x50],rax
  41d176:	mov    rax,QWORD PTR [rbp-0x80]
  41d17a:	shr    rax,0x20
  41d17e:	mov    QWORD PTR [rbp-0x48],rax
  41d182:	mov    rax,QWORD PTR [rbp-0x80]
  41d186:	and    eax,0xffffffff
  41d189:	mov    QWORD PTR [rbp-0x40],rax
  41d18d:	mov    rax,QWORD PTR [rbp-0x58]
  41d191:	imul   rax,QWORD PTR [rbp-0x48]
  41d196:	mov    QWORD PTR [rbp-0x38],rax
  41d19a:	mov    rax,QWORD PTR [rbp-0x50]
  41d19e:	imul   rax,QWORD PTR [rbp-0x48]
  41d1a3:	mov    QWORD PTR [rbp-0x30],rax
  41d1a7:	mov    rax,QWORD PTR [rbp-0x58]
  41d1ab:	imul   rax,QWORD PTR [rbp-0x40]
  41d1b0:	mov    QWORD PTR [rbp-0x28],rax
  41d1b4:	mov    rax,QWORD PTR [rbp-0x50]
  41d1b8:	imul   rax,QWORD PTR [rbp-0x40]
  41d1bd:	mov    QWORD PTR [rbp-0x20],rax
  41d1c1:	mov    rax,QWORD PTR [rbp-0x20]
  41d1c5:	shr    rax,0x20
  41d1c9:	mov    rdx,QWORD PTR [rbp-0x28]
  41d1cd:	mov    edx,edx
  41d1cf:	add    rax,rdx
  41d1d2:	mov    rdx,QWORD PTR [rbp-0x30]
  41d1d6:	mov    edx,edx
  41d1d8:	add    rax,rdx
  41d1db:	mov    QWORD PTR [rbp-0x18],rax
  41d1df:	mov    eax,0x80000000
  41d1e4:	add    QWORD PTR [rbp-0x18],rax
  41d1e8:	mov    rax,QWORD PTR [rbp-0x28]
  41d1ec:	shr    rax,0x20
  41d1f0:	mov    rdx,rax
  41d1f3:	mov    rax,QWORD PTR [rbp-0x38]
  41d1f7:	add    rdx,rax
  41d1fa:	mov    rax,QWORD PTR [rbp-0x30]
  41d1fe:	shr    rax,0x20
  41d202:	add    rdx,rax
  41d205:	mov    rax,QWORD PTR [rbp-0x18]
  41d209:	shr    rax,0x20
  41d20d:	add    rax,rdx
  41d210:	mov    QWORD PTR [rbp-0x10],rax
  41d214:	mov    edx,DWORD PTR [rbp-0x68]
  41d217:	mov    eax,DWORD PTR [rbp-0x78]
  41d21a:	add    eax,edx
  41d21c:	add    eax,0x40
  41d21f:	mov    DWORD PTR [rbp-0x8],eax
  41d222:	mov    rax,QWORD PTR [rbp-0x10]
  41d226:	mov    rdx,QWORD PTR [rbp-0x8]
  41d22a:	leave  
  41d22b:	ret    
  41d22c:	endbr64 
  41d230:	push   rbp
  41d231:	mov    rbp,rsp
  41d234:	sub    rsp,0x10
  41d238:	mov    rax,rdi
  41d23b:	mov    rcx,rsi
  41d23e:	mov    rdx,rcx
  41d241:	mov    QWORD PTR [rbp-0x10],rax
  41d245:	mov    QWORD PTR [rbp-0x8],rdx
  41d249:	mov    rax,QWORD PTR [rbp-0x10]
  41d24d:	test   rax,rax
  41d250:	jne    41d286 <flatcc_emitter_copy_buffer@@Base+0x232b>
  41d252:	lea    rcx,[rip+0x6cd7]        # 423f30 <flatcc_builder_padding_base@@Base+0x1b90>
  41d259:	mov    edx,0x104
  41d25e:	lea    rsi,[rip+0x640b]        # 423670 <flatcc_builder_padding_base@@Base+0x12d0>
  41d265:	lea    rdi,[rip+0x648d]        # 4236f9 <flatcc_builder_padding_base@@Base+0x1359>
  41d26c:	call   403220 <__assert_fail@plt>
  41d271:	mov    rax,QWORD PTR [rbp-0x10]
  41d275:	shl    rax,0xa
  41d279:	mov    QWORD PTR [rbp-0x10],rax
  41d27d:	mov    eax,DWORD PTR [rbp-0x8]
  41d280:	sub    eax,0xa
  41d283:	mov    DWORD PTR [rbp-0x8],eax
  41d286:	mov    rdx,QWORD PTR [rbp-0x10]
  41d28a:	movabs rax,0xffc0000000000000
  41d294:	and    rax,rdx
  41d297:	test   rax,rax
  41d29a:	je     41d271 <flatcc_emitter_copy_buffer@@Base+0x2316>
  41d29c:	jmp    41d2b1 <flatcc_emitter_copy_buffer@@Base+0x2356>
  41d29e:	mov    rax,QWORD PTR [rbp-0x10]
  41d2a2:	add    rax,rax
  41d2a5:	mov    QWORD PTR [rbp-0x10],rax
  41d2a9:	mov    eax,DWORD PTR [rbp-0x8]
  41d2ac:	dec    eax
  41d2ae:	mov    DWORD PTR [rbp-0x8],eax
  41d2b1:	mov    rax,QWORD PTR [rbp-0x10]
  41d2b5:	test   rax,rax
  41d2b8:	jns    41d29e <flatcc_emitter_copy_buffer@@Base+0x2343>
  41d2ba:	mov    rax,QWORD PTR [rbp-0x10]
  41d2be:	mov    rdx,QWORD PTR [rbp-0x8]
  41d2c2:	leave  
  41d2c3:	ret    
  41d2c4:	endbr64 
  41d2c8:	push   rbp
  41d2c9:	mov    rbp,rsp
  41d2cc:	sub    rsp,0x28
  41d2d0:	vmovsd QWORD PTR [rbp-0x28],xmm0
  41d2d5:	mov    rax,QWORD PTR [rbp-0x28]
  41d2d9:	vmovq  xmm0,rax
  41d2de:	call   41cf6c <flatcc_emitter_copy_buffer@@Base+0x2011>
  41d2e3:	mov    QWORD PTR [rbp-0x18],rax
  41d2e7:	movabs rax,0x7ff0000000000000
  41d2f1:	and    rax,QWORD PTR [rbp-0x18]
  41d2f5:	test   rax,rax
  41d2f8:	jne    41d315 <flatcc_emitter_copy_buffer@@Base+0x23ba>
  41d2fa:	movabs rax,0xfffffffffffff
  41d304:	and    rax,QWORD PTR [rbp-0x18]
  41d308:	mov    QWORD PTR [rbp-0x10],rax
  41d30c:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  41d313:	jmp    41d34c <flatcc_emitter_copy_buffer@@Base+0x23f1>
  41d315:	movabs rax,0xfffffffffffff
  41d31f:	and    rax,QWORD PTR [rbp-0x18]
  41d323:	mov    rdx,rax
  41d326:	movabs rax,0x10000000000000
  41d330:	add    rax,rdx
  41d333:	mov    QWORD PTR [rbp-0x10],rax
  41d337:	mov    rax,QWORD PTR [rbp-0x18]
  41d33b:	shr    rax,0x34
  41d33f:	and    eax,0x7ff
  41d344:	sub    eax,0x433
  41d349:	mov    DWORD PTR [rbp-0x8],eax
  41d34c:	mov    rax,QWORD PTR [rbp-0x10]
  41d350:	mov    rdx,QWORD PTR [rbp-0x8]
  41d354:	leave  
  41d355:	ret    
  41d356:	endbr64 
  41d35a:	push   rbp
  41d35b:	mov    rbp,rsp
  41d35e:	sub    rsp,0x50
  41d362:	mov    rax,rdi
  41d365:	mov    rcx,rsi
  41d368:	mov    rdx,rcx
  41d36b:	mov    QWORD PTR [rbp-0x50],rax
  41d36f:	mov    QWORD PTR [rbp-0x48],rdx
  41d373:	movabs rax,0x10000000000000
  41d37d:	mov    QWORD PTR [rbp-0x20],rax
  41d381:	movabs rax,0xfffffffffffff
  41d38b:	mov    QWORD PTR [rbp-0x18],rax
  41d38f:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  41d396:	mov    DWORD PTR [rbp-0x30],0x433
  41d39d:	mov    DWORD PTR [rbp-0x2c],0x34
  41d3a4:	mov    rax,QWORD PTR [rbp-0x50]
  41d3a8:	mov    rdx,QWORD PTR [rbp-0x48]
  41d3ac:	mov    QWORD PTR [rbp-0x10],rax
  41d3b0:	mov    QWORD PTR [rbp-0x8],rdx
  41d3b4:	jmp    41d3c9 <flatcc_emitter_copy_buffer@@Base+0x246e>
  41d3b6:	mov    rax,QWORD PTR [rbp-0x10]
  41d3ba:	shr    rax,1
  41d3bd:	mov    QWORD PTR [rbp-0x10],rax
  41d3c1:	mov    eax,DWORD PTR [rbp-0x8]
  41d3c4:	inc    eax
  41d3c6:	mov    DWORD PTR [rbp-0x8],eax
  41d3c9:	mov    rax,QWORD PTR [rbp-0x10]
  41d3cd:	mov    rcx,QWORD PTR [rbp-0x20]
  41d3d1:	mov    rdx,QWORD PTR [rbp-0x18]
  41d3d5:	add    rdx,rcx
  41d3d8:	cmp    rax,rdx
  41d3db:	ja     41d3b6 <flatcc_emitter_copy_buffer@@Base+0x245b>
  41d3dd:	mov    eax,DWORD PTR [rbp-0x8]
  41d3e0:	cmp    DWORD PTR [rbp-0x34],eax
  41d3e3:	jle    41d401 <flatcc_emitter_copy_buffer@@Base+0x24a6>
  41d3e5:	mov    rax,QWORD PTR [rip+0x7044]        # 424430 <flatcc_builder_padding_base@@Base+0x2090>
  41d3ec:	jmp    41d46a <flatcc_emitter_copy_buffer@@Base+0x250f>
  41d3ee:	mov    rax,QWORD PTR [rbp-0x10]
  41d3f2:	add    rax,rax
  41d3f5:	mov    QWORD PTR [rbp-0x10],rax
  41d3f9:	mov    eax,DWORD PTR [rbp-0x8]
  41d3fc:	dec    eax
  41d3fe:	mov    DWORD PTR [rbp-0x8],eax
  41d401:	mov    eax,DWORD PTR [rbp-0x8]
  41d404:	cmp    DWORD PTR [rbp-0x34],eax
  41d407:	jge    41d416 <flatcc_emitter_copy_buffer@@Base+0x24bb>
  41d409:	mov    rax,QWORD PTR [rbp-0x10]
  41d40d:	and    rax,QWORD PTR [rbp-0x20]
  41d411:	test   rax,rax
  41d414:	je     41d3ee <flatcc_emitter_copy_buffer@@Base+0x2493>
  41d416:	mov    eax,DWORD PTR [rbp-0x8]
  41d419:	cmp    DWORD PTR [rbp-0x34],eax
  41d41c:	jne    41d435 <flatcc_emitter_copy_buffer@@Base+0x24da>
  41d41e:	mov    rax,QWORD PTR [rbp-0x10]
  41d422:	and    rax,QWORD PTR [rbp-0x20]
  41d426:	test   rax,rax
  41d429:	jne    41d435 <flatcc_emitter_copy_buffer@@Base+0x24da>
  41d42b:	mov    QWORD PTR [rbp-0x28],0x0
  41d433:	jmp    41d443 <flatcc_emitter_copy_buffer@@Base+0x24e8>
  41d435:	mov    edx,DWORD PTR [rbp-0x8]
  41d438:	mov    eax,DWORD PTR [rbp-0x30]
  41d43b:	add    eax,edx
  41d43d:	cdqe   
  41d43f:	mov    QWORD PTR [rbp-0x28],rax
  41d443:	mov    rax,QWORD PTR [rbp-0x10]
  41d447:	and    rax,QWORD PTR [rbp-0x18]
  41d44b:	mov    rdx,rax
  41d44e:	mov    eax,DWORD PTR [rbp-0x2c]
  41d451:	mov    rcx,QWORD PTR [rbp-0x28]
  41d455:	shlx   rax,rcx,rax
  41d45a:	or     rax,rdx
  41d45d:	mov    rdi,rax
  41d460:	call   41cf89 <flatcc_emitter_copy_buffer@@Base+0x202e>
  41d465:	vmovq  rax,xmm0
  41d46a:	vmovq  xmm0,rax
  41d46f:	leave  
  41d470:	ret    
  41d471:	endbr64 
  41d475:	push   rbp
  41d476:	mov    rbp,rsp
  41d479:	mov    DWORD PTR [rbp-0x14],edi
  41d47c:	mov    DWORD PTR [rbp-0x18],esi
  41d47f:	mov    QWORD PTR [rbp-0x20],rdx
  41d483:	mov    eax,DWORD PTR [rbp-0x18]
  41d486:	inc    eax
  41d488:	imul   eax,eax,0x4d1
  41d48e:	sar    eax,0xc
  41d491:	inc    eax
  41d493:	mov    DWORD PTR [rbp-0x4],eax
  41d496:	mov    eax,DWORD PTR [rbp-0x4]
  41d499:	cdqe   
  41d49b:	lea    rdx,[rax*4+0x0]
  41d4a3:	lea    rax,[rip+0x6276]        # 423720 <flatcc_builder_padding_base@@Base+0x1380>
  41d4aa:	mov    eax,DWORD PTR [rdx+rax*1]
  41d4ad:	cmp    DWORD PTR [rbp-0x14],eax
  41d4b0:	jae    41d4b5 <flatcc_emitter_copy_buffer@@Base+0x255a>
  41d4b2:	dec    DWORD PTR [rbp-0x4]
  41d4b5:	mov    eax,DWORD PTR [rbp-0x4]
  41d4b8:	cdqe   
  41d4ba:	lea    rdx,[rax*4+0x0]
  41d4c2:	lea    rax,[rip+0x6257]        # 423720 <flatcc_builder_padding_base@@Base+0x1380>
  41d4c9:	mov    edx,DWORD PTR [rdx+rax*1]
  41d4cc:	mov    rax,QWORD PTR [rbp-0x20]
  41d4d0:	mov    DWORD PTR [rax],edx
  41d4d2:	mov    eax,DWORD PTR [rbp-0x4]
  41d4d5:	pop    rbp
  41d4d6:	ret    
  41d4d7:	endbr64 
  41d4db:	push   rbp
  41d4dc:	mov    rbp,rsp
  41d4df:	sub    rsp,0x20
  41d4e3:	mov    DWORD PTR [rbp-0x14],edi
  41d4e6:	mov    QWORD PTR [rbp-0x20],rsi
  41d4ea:	mov    DWORD PTR [rbp-0x10],0x15c
  41d4f1:	mov    DWORD PTR [rbp-0xc],0x8
  41d4f8:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  41d4ff:	jge    41d520 <flatcc_emitter_copy_buffer@@Base+0x25c5>
  41d501:	lea    rcx,[rip+0x6a48]        # 423f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  41d508:	mov    edx,0x50
  41d50d:	lea    rsi,[rip+0x623c]        # 423750 <flatcc_builder_padding_base@@Base+0x13b0>
  41d514:	lea    rdi,[rip+0x62ad]        # 4237c8 <flatcc_builder_padding_base@@Base+0x1428>
  41d51b:	call   403220 <__assert_fail@plt>
  41d520:	mov    eax,DWORD PTR [rbp-0xc]
  41d523:	add    eax,0x153
  41d528:	cmp    DWORD PTR [rbp-0x14],eax
  41d52b:	jle    41d54c <flatcc_emitter_copy_buffer@@Base+0x25f1>
  41d52d:	lea    rcx,[rip+0x6a1c]        # 423f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  41d534:	mov    edx,0x51
  41d539:	lea    rsi,[rip+0x6210]        # 423750 <flatcc_builder_padding_base@@Base+0x13b0>
  41d540:	lea    rdi,[rip+0x62a1]        # 4237e8 <flatcc_builder_padding_base@@Base+0x1448>
  41d547:	call   403220 <__assert_fail@plt>
  41d54c:	mov    edx,DWORD PTR [rbp-0x14]
  41d54f:	mov    eax,DWORD PTR [rbp-0x10]
  41d552:	add    eax,edx
  41d554:	cdq    
  41d555:	idiv   DWORD PTR [rbp-0xc]
  41d558:	mov    DWORD PTR [rbp-0x8],eax
  41d55b:	mov    eax,DWORD PTR [rbp-0x8]
  41d55e:	cdqe   
  41d560:	shl    rax,0x4
  41d564:	mov    rdx,rax
  41d567:	lea    rax,[rip+0x5b9c]        # 42310a <flatcc_builder_padding_base@@Base+0xd6a>
  41d56e:	movzx  eax,WORD PTR [rdx+rax*1]
  41d572:	cwde   
  41d573:	mov    DWORD PTR [rbp-0x4],eax
  41d576:	mov    eax,DWORD PTR [rbp-0x8]
  41d579:	cdqe   
  41d57b:	shl    rax,0x4
  41d57f:	mov    rdx,rax
  41d582:	lea    rax,[rip+0x5b77]        # 423100 <flatcc_builder_padding_base@@Base+0xd60>
  41d589:	mov    rdx,QWORD PTR [rdx+rax*1]
  41d58d:	mov    rax,QWORD PTR [rbp-0x20]
  41d591:	mov    QWORD PTR [rax],rdx
  41d594:	mov    eax,DWORD PTR [rbp-0x8]
  41d597:	cdqe   
  41d599:	shl    rax,0x4
  41d59d:	mov    rdx,rax
  41d5a0:	lea    rax,[rip+0x5b61]        # 423108 <flatcc_builder_padding_base@@Base+0xd68>
  41d5a7:	movzx  eax,WORD PTR [rdx+rax*1]
  41d5ab:	movsx  edx,ax
  41d5ae:	mov    rax,QWORD PTR [rbp-0x20]
  41d5b2:	mov    DWORD PTR [rax+0x8],edx
  41d5b5:	mov    eax,DWORD PTR [rbp-0x4]
  41d5b8:	cmp    eax,DWORD PTR [rbp-0x14]
  41d5bb:	jle    41d5dc <flatcc_emitter_copy_buffer@@Base+0x2681>
  41d5bd:	lea    rcx,[rip+0x698c]        # 423f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  41d5c4:	mov    edx,0x58
  41d5c9:	lea    rsi,[rip+0x6180]        # 423750 <flatcc_builder_padding_base@@Base+0x13b0>
  41d5d0:	lea    rdi,[rip+0x623c]        # 423813 <flatcc_builder_padding_base@@Base+0x1473>
  41d5d7:	call   403220 <__assert_fail@plt>
  41d5dc:	mov    edx,DWORD PTR [rbp-0x4]
  41d5df:	mov    eax,DWORD PTR [rbp-0xc]
  41d5e2:	add    eax,edx
  41d5e4:	cmp    DWORD PTR [rbp-0x14],eax
  41d5e7:	jl     41d608 <flatcc_emitter_copy_buffer@@Base+0x26ad>
  41d5e9:	lea    rcx,[rip+0x6960]        # 423f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  41d5f0:	mov    edx,0x59
  41d5f5:	lea    rsi,[rip+0x6154]        # 423750 <flatcc_builder_padding_base@@Base+0x13b0>
  41d5fc:	lea    rdi,[rip+0x621f]        # 423822 <flatcc_builder_padding_base@@Base+0x1482>
  41d603:	call   403220 <__assert_fail@plt>
  41d608:	mov    eax,DWORD PTR [rbp-0x4]
  41d60b:	leave  
  41d60c:	ret    

000000000041d60d <grisu3_diy_fp_encode_double@@Base>:
  41d60d:	endbr64 
  41d611:	push   rbp
  41d612:	mov    rbp,rsp
  41d615:	sub    rsp,0xb0
  41d61c:	mov    QWORD PTR [rbp-0x98],rdi
  41d623:	mov    DWORD PTR [rbp-0x9c],esi
  41d629:	mov    DWORD PTR [rbp-0xa0],edx
  41d62f:	mov    DWORD PTR [rbp-0xa4],ecx
  41d635:	mov    QWORD PTR [rbp-0xb0],r8
  41d63c:	mov    rax,QWORD PTR fs:0x28
  41d645:	mov    QWORD PTR [rbp-0x8],rax
  41d649:	xor    eax,eax
  41d64b:	mov    DWORD PTR [rbp-0x7c],0x3
  41d652:	mov    eax,DWORD PTR [rbp-0x7c]
  41d655:	mov    edx,0x1
  41d65a:	shlx   eax,edx,eax
  41d65f:	mov    DWORD PTR [rbp-0x78],eax
  41d662:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  41d669:	movabs rax,0x10000000000000
  41d673:	mov    QWORD PTR [rbp-0x48],rax
  41d677:	mov    DWORD PTR [rbp-0x70],0x40
  41d67e:	mov    DWORD PTR [rbp-0x6c],0x13
  41d685:	cmp    DWORD PTR [rbp-0xa4],0x0
  41d68c:	je     41d69c <grisu3_diy_fp_encode_double@@Base+0x8f>
  41d68e:	mov    eax,DWORD PTR [rbp-0x78]
  41d691:	mov    edx,eax
  41d693:	shr    edx,0x1f
  41d696:	add    eax,edx
  41d698:	sar    eax,1
  41d69a:	jmp    41d6a1 <grisu3_diy_fp_encode_double@@Base+0x94>
  41d69c:	mov    eax,0x0
  41d6a1:	mov    DWORD PTR [rbp-0x84],eax
  41d6a7:	mov    eax,DWORD PTR [rbp-0x9c]
  41d6ad:	sub    eax,DWORD PTR [rbp-0xa0]
  41d6b3:	mov    DWORD PTR [rbp-0x68],eax
  41d6b6:	mov    rax,QWORD PTR [rbp-0x98]
  41d6bd:	mov    QWORD PTR [rbp-0x40],rax
  41d6c1:	mov    DWORD PTR [rbp-0x38],0x0
  41d6c8:	mov    rdx,QWORD PTR [rbp-0x40]
  41d6cc:	mov    rax,QWORD PTR [rbp-0x38]
  41d6d0:	mov    rdi,rdx
  41d6d3:	mov    rsi,rax
  41d6d6:	call   41d22c <flatcc_emitter_copy_buffer@@Base+0x22d1>
  41d6db:	mov    QWORD PTR [rbp-0x40],rax
  41d6df:	mov    QWORD PTR [rbp-0x38],rdx
  41d6e3:	mov    eax,DWORD PTR [rbp-0x38]
  41d6e6:	neg    eax
  41d6e8:	mov    ecx,eax
  41d6ea:	shl    DWORD PTR [rbp-0x84],cl
  41d6f0:	lea    rdx,[rbp-0x30]
  41d6f4:	mov    eax,DWORD PTR [rbp-0x68]
  41d6f7:	mov    rsi,rdx
  41d6fa:	mov    edi,eax
  41d6fc:	call   41d4d7 <flatcc_emitter_copy_buffer@@Base+0x257c>
  41d701:	mov    DWORD PTR [rbp-0x64],eax
  41d704:	mov    eax,DWORD PTR [rbp-0x64]
  41d707:	cmp    eax,DWORD PTR [rbp-0x68]
  41d70a:	je     41d7a4 <grisu3_diy_fp_encode_double@@Base+0x197>
  41d710:	mov    eax,DWORD PTR [rbp-0x68]
  41d713:	sub    eax,DWORD PTR [rbp-0x64]
  41d716:	dec    eax
  41d718:	mov    DWORD PTR [rbp-0x60],eax
  41d71b:	cmp    DWORD PTR [rbp-0x60],0x0
  41d71f:	js     41d727 <grisu3_diy_fp_encode_double@@Base+0x11a>
  41d721:	cmp    DWORD PTR [rbp-0x60],0x6
  41d725:	jle    41d746 <grisu3_diy_fp_encode_double@@Base+0x139>
  41d727:	lea    rcx,[rip+0x6842]        # 423f70 <flatcc_builder_padding_base@@Base+0x1bd0>
  41d72e:	mov    edx,0xb9
  41d733:	lea    rsi,[rip+0x6016]        # 423750 <flatcc_builder_padding_base@@Base+0x13b0>
  41d73a:	lea    rdi,[rip+0x60fc]        # 42383d <flatcc_builder_padding_base@@Base+0x149d>
  41d741:	call   403220 <__assert_fail@plt>
  41d746:	mov    eax,DWORD PTR [rbp-0x60]
  41d749:	cdqe   
  41d74b:	shl    rax,0x4
  41d74f:	mov    rdx,rax
  41d752:	lea    rax,[rip+0xd2e7]        # 42aa40 <filename@@Base+0x940>
  41d759:	lea    rdx,[rdx+rax*1]
  41d75d:	mov    rax,QWORD PTR [rdx]
  41d760:	mov    rdx,QWORD PTR [rdx+0x8]
  41d764:	mov    rdi,QWORD PTR [rbp-0x40]
  41d768:	mov    rsi,QWORD PTR [rbp-0x38]
  41d76c:	mov    rcx,rdx
  41d76f:	mov    rdx,rax
  41d772:	call   41d134 <flatcc_emitter_copy_buffer@@Base+0x21d9>
  41d777:	mov    QWORD PTR [rbp-0x40],rax
  41d77b:	mov    QWORD PTR [rbp-0x38],rdx
  41d77f:	mov    eax,DWORD PTR [rbp-0xa0]
  41d785:	lea    edx,[rax+0x1]
  41d788:	mov    eax,DWORD PTR [rbp-0x60]
  41d78b:	add    eax,edx
  41d78d:	cmp    DWORD PTR [rbp-0x6c],eax
  41d790:	jge    41d7a4 <grisu3_diy_fp_encode_double@@Base+0x197>
  41d792:	mov    eax,DWORD PTR [rbp-0x78]
  41d795:	mov    edx,eax
  41d797:	shr    edx,0x1f
  41d79a:	add    eax,edx
  41d79c:	sar    eax,1
  41d79e:	add    DWORD PTR [rbp-0x84],eax
  41d7a4:	mov    rax,QWORD PTR [rbp-0x30]
  41d7a8:	mov    rdx,QWORD PTR [rbp-0x28]
  41d7ac:	mov    rdi,QWORD PTR [rbp-0x40]
  41d7b0:	mov    rsi,QWORD PTR [rbp-0x38]
  41d7b4:	mov    rcx,rdx
  41d7b7:	mov    rdx,rax
  41d7ba:	call   41d134 <flatcc_emitter_copy_buffer@@Base+0x21d9>
  41d7bf:	mov    QWORD PTR [rbp-0x40],rax
  41d7c3:	mov    QWORD PTR [rbp-0x38],rdx
  41d7c7:	cmp    DWORD PTR [rbp-0x84],0x0
  41d7ce:	setne  al
  41d7d1:	movzx  edx,al
  41d7d4:	mov    eax,DWORD PTR [rbp-0x78]
  41d7d7:	add    eax,edx
  41d7d9:	add    DWORD PTR [rbp-0x84],eax
  41d7df:	mov    eax,DWORD PTR [rbp-0x38]
  41d7e2:	mov    DWORD PTR [rbp-0x5c],eax
  41d7e5:	mov    rdx,QWORD PTR [rbp-0x40]
  41d7e9:	mov    rax,QWORD PTR [rbp-0x38]
  41d7ed:	mov    rdi,rdx
  41d7f0:	mov    rsi,rax
  41d7f3:	call   41d22c <flatcc_emitter_copy_buffer@@Base+0x22d1>
  41d7f8:	mov    QWORD PTR [rbp-0x40],rax
  41d7fc:	mov    QWORD PTR [rbp-0x38],rdx
  41d800:	mov    eax,DWORD PTR [rbp-0x38]
  41d803:	mov    edx,DWORD PTR [rbp-0x5c]
  41d806:	sub    edx,eax
  41d808:	mov    eax,edx
  41d80a:	mov    ecx,eax
  41d80c:	shl    DWORD PTR [rbp-0x84],cl
  41d812:	mov    edx,DWORD PTR [rbp-0x38]
  41d815:	mov    eax,DWORD PTR [rbp-0x70]
  41d818:	add    eax,edx
  41d81a:	mov    DWORD PTR [rbp-0x58],eax
  41d81d:	mov    edx,DWORD PTR [rbp-0x70]
  41d820:	mov    eax,DWORD PTR [rbp-0x74]
  41d823:	add    eax,edx
  41d825:	cmp    DWORD PTR [rbp-0x58],eax
  41d828:	jge    41d841 <grisu3_diy_fp_encode_double@@Base+0x234>
  41d82a:	mov    eax,DWORD PTR [rbp-0x58]
  41d82d:	cmp    eax,DWORD PTR [rbp-0x74]
  41d830:	jle    41d83a <grisu3_diy_fp_encode_double@@Base+0x22d>
  41d832:	mov    eax,DWORD PTR [rbp-0x58]
  41d835:	sub    eax,DWORD PTR [rbp-0x74]
  41d838:	jmp    41d844 <grisu3_diy_fp_encode_double@@Base+0x237>
  41d83a:	mov    eax,0x0
  41d83f:	jmp    41d844 <grisu3_diy_fp_encode_double@@Base+0x237>
  41d841:	mov    eax,DWORD PTR [rbp-0x70]
  41d844:	mov    DWORD PTR [rbp-0x58],eax
  41d847:	mov    eax,DWORD PTR [rbp-0x70]
  41d84a:	sub    eax,DWORD PTR [rbp-0x58]
  41d84d:	mov    DWORD PTR [rbp-0x80],eax
  41d850:	mov    edx,DWORD PTR [rbp-0x80]
  41d853:	mov    eax,DWORD PTR [rbp-0x7c]
  41d856:	add    eax,edx
  41d858:	cmp    DWORD PTR [rbp-0x70],eax
  41d85b:	jg     41d8aa <grisu3_diy_fp_encode_double@@Base+0x29d>
  41d85d:	mov    edx,DWORD PTR [rbp-0x80]
  41d860:	mov    eax,DWORD PTR [rbp-0x7c]
  41d863:	add    eax,edx
  41d865:	sub    eax,DWORD PTR [rbp-0x70]
  41d868:	dec    eax
  41d86a:	mov    DWORD PTR [rbp-0x54],eax
  41d86d:	mov    rdx,QWORD PTR [rbp-0x40]
  41d871:	mov    eax,DWORD PTR [rbp-0x54]
  41d874:	shrx   rax,rdx,rax
  41d879:	mov    QWORD PTR [rbp-0x40],rax
  41d87d:	mov    edx,DWORD PTR [rbp-0x38]
  41d880:	mov    eax,DWORD PTR [rbp-0x54]
  41d883:	add    eax,edx
  41d885:	mov    DWORD PTR [rbp-0x38],eax
  41d888:	mov    eax,DWORD PTR [rbp-0x54]
  41d88b:	mov    edx,DWORD PTR [rbp-0x84]
  41d891:	sarx   eax,edx,eax
  41d896:	lea    edx,[rax+0x1]
  41d899:	mov    eax,DWORD PTR [rbp-0x78]
  41d89c:	add    eax,edx
  41d89e:	mov    DWORD PTR [rbp-0x84],eax
  41d8a4:	mov    eax,DWORD PTR [rbp-0x54]
  41d8a7:	sub    DWORD PTR [rbp-0x80],eax
  41d8aa:	mov    rdx,QWORD PTR [rbp-0x40]
  41d8ae:	mov    eax,DWORD PTR [rbp-0x80]
  41d8b1:	shrx   rax,rdx,rax
  41d8b6:	mov    QWORD PTR [rbp-0x20],rax
  41d8ba:	mov    edx,DWORD PTR [rbp-0x38]
  41d8bd:	mov    eax,DWORD PTR [rbp-0x80]
  41d8c0:	add    eax,edx
  41d8c2:	mov    DWORD PTR [rbp-0x18],eax
  41d8c5:	mov    rdx,QWORD PTR [rbp-0x40]
  41d8c9:	mov    eax,DWORD PTR [rbp-0x80]
  41d8cc:	dec    eax
  41d8ce:	mov    ecx,0x1
  41d8d3:	shlx   rax,rcx,rax
  41d8d8:	and    rax,rdx
  41d8db:	mov    edx,eax
  41d8dd:	mov    eax,DWORD PTR [rbp-0x78]
  41d8e0:	cdqe   
  41d8e2:	imul   eax,edx
  41d8e5:	mov    DWORD PTR [rbp-0x50],eax
  41d8e8:	mov    eax,DWORD PTR [rbp-0x78]
  41d8eb:	movsxd rdx,eax
  41d8ee:	mov    eax,DWORD PTR [rbp-0x80]
  41d8f1:	dec    eax
  41d8f3:	shlx   rax,rdx,rax
  41d8f8:	mov    DWORD PTR [rbp-0x4c],eax
  41d8fb:	mov    edx,DWORD PTR [rbp-0x4c]
  41d8fe:	mov    eax,DWORD PTR [rbp-0x84]
  41d904:	add    eax,edx
  41d906:	cmp    DWORD PTR [rbp-0x80],eax
  41d909:	jl     41d93c <grisu3_diy_fp_encode_double@@Base+0x32f>
  41d90b:	mov    rax,QWORD PTR [rbp-0x20]
  41d90f:	inc    rax
  41d912:	mov    QWORD PTR [rbp-0x20],rax
  41d916:	mov    rax,QWORD PTR [rbp-0x20]
  41d91a:	mov    rdx,QWORD PTR [rbp-0x48]
  41d91e:	add    rdx,rdx
  41d921:	and    rax,rdx
  41d924:	test   rax,rax
  41d927:	je     41d93c <grisu3_diy_fp_encode_double@@Base+0x32f>
  41d929:	mov    rax,QWORD PTR [rbp-0x20]
  41d92d:	shr    rax,1
  41d930:	mov    QWORD PTR [rbp-0x20],rax
  41d934:	mov    eax,DWORD PTR [rbp-0x18]
  41d937:	inc    eax
  41d939:	mov    DWORD PTR [rbp-0x18],eax
  41d93c:	mov    rdx,QWORD PTR [rbp-0x20]
  41d940:	mov    rax,QWORD PTR [rbp-0x18]
  41d944:	mov    rdi,rdx
  41d947:	mov    rsi,rax
  41d94a:	call   41d356 <flatcc_emitter_copy_buffer@@Base+0x23fb>
  41d94f:	vmovq  rax,xmm0
  41d954:	mov    rdx,QWORD PTR [rbp-0xb0]
  41d95b:	mov    QWORD PTR [rdx],rax
  41d95e:	mov    eax,DWORD PTR [rbp-0x4c]
  41d961:	sub    eax,DWORD PTR [rbp-0x84]
  41d967:	cmp    DWORD PTR [rbp-0x50],eax
  41d96a:	jle    41d97c <grisu3_diy_fp_encode_double@@Base+0x36f>
  41d96c:	mov    edx,DWORD PTR [rbp-0x4c]
  41d96f:	mov    eax,DWORD PTR [rbp-0x84]
  41d975:	add    eax,edx
  41d977:	cmp    DWORD PTR [rbp-0x50],eax
  41d97a:	jl     41d983 <grisu3_diy_fp_encode_double@@Base+0x376>
  41d97c:	mov    eax,0x1
  41d981:	jmp    41d988 <grisu3_diy_fp_encode_double@@Base+0x37b>
  41d983:	mov    eax,0x0
  41d988:	mov    rcx,QWORD PTR [rbp-0x8]
  41d98c:	xor    rcx,QWORD PTR fs:0x28
  41d995:	je     41d99c <grisu3_diy_fp_encode_double@@Base+0x38f>
  41d997:	call   403200 <__stack_chk_fail@plt>
  41d99c:	leave  
  41d99d:	ret    
  41d99e:	endbr64 
  41d9a2:	push   rbp
  41d9a3:	mov    rbp,rsp
  41d9a6:	sub    rsp,0x50
  41d9aa:	mov    QWORD PTR [rbp-0x28],rdi
  41d9ae:	mov    QWORD PTR [rbp-0x30],rsi
  41d9b2:	mov    DWORD PTR [rbp-0x34],edx
  41d9b5:	mov    QWORD PTR [rbp-0x40],rcx
  41d9b9:	mov    DWORD PTR [rbp-0x38],r8d
  41d9bd:	mov    DWORD PTR [rbp-0x44],r9d
  41d9c1:	mov    rax,QWORD PTR [rbp+0x18]
  41d9c5:	mov    QWORD PTR [rbp-0x50],rax
  41d9c9:	mov    rax,QWORD PTR fs:0x28
  41d9d2:	mov    QWORD PTR [rbp-0x8],rax
  41d9d6:	xor    eax,eax
  41d9d8:	mov    DWORD PTR [rbp-0x20],0x135
  41d9df:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  41d9e6:	cmp    QWORD PTR [rbp-0x40],0x0
  41d9eb:	je     41d9f5 <grisu3_diy_fp_encode_double@@Base+0x3e8>
  41d9ed:	mov    eax,DWORD PTR [rbp-0x38]
  41d9f0:	cmp    eax,DWORD PTR [rbp-0x1c]
  41d9f3:	jge    41da06 <grisu3_diy_fp_encode_double@@Base+0x3f9>
  41d9f5:	mov    rax,QWORD PTR [rbp-0x50]
  41d9f9:	vxorpd xmm0,xmm0,xmm0
  41d9fd:	vmovsd QWORD PTR [rax],xmm0
  41da01:	jmp    41dfb0 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  41da06:	mov    eax,DWORD PTR [rbp-0x38]
  41da09:	dec    eax
  41da0b:	cmp    DWORD PTR [rbp-0x20],eax
  41da0e:	jge    41da30 <grisu3_diy_fp_encode_double@@Base+0x423>
  41da10:	movabs rdi,0x7ff0000000000000
  41da1a:	call   41cf89 <flatcc_emitter_copy_buffer@@Base+0x202e>
  41da1f:	vmovq  rax,xmm0
  41da24:	mov    rdx,QWORD PTR [rbp-0x50]
  41da28:	mov    QWORD PTR [rdx],rax
  41da2b:	jmp    41dfb0 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  41da30:	movabs rax,0x1fffffffffffff
  41da3a:	cmp    QWORD PTR [rbp-0x40],rax
  41da3e:	ja     41df5a <grisu3_diy_fp_encode_double@@Base+0x94d>
  41da44:	cmp    DWORD PTR [rbp-0x38],0x0
  41da48:	js     41df5a <grisu3_diy_fp_encode_double@@Base+0x94d>
  41da4e:	cmp    DWORD PTR [rbp-0x38],0x16
  41da52:	jg     41df5a <grisu3_diy_fp_encode_double@@Base+0x94d>
  41da58:	mov    rax,QWORD PTR [rbp-0x40]
  41da5c:	test   rax,rax
  41da5f:	js     41da68 <grisu3_diy_fp_encode_double@@Base+0x45b>
  41da61:	vcvtsi2sd xmm0,xmm0,rax
  41da66:	jmp    41da7d <grisu3_diy_fp_encode_double@@Base+0x470>
  41da68:	mov    rdx,rax
  41da6b:	shr    rdx,1
  41da6e:	and    eax,0x1
  41da71:	or     rdx,rax
  41da74:	vcvtsi2sd xmm0,xmm0,rdx
  41da79:	vaddsd xmm0,xmm0,xmm0
  41da7d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41da82:	mov    eax,DWORD PTR [rbp-0x38]
  41da85:	sub    eax,DWORD PTR [rbp-0x44]
  41da88:	add    eax,0x16
  41da8b:	cmp    eax,0x2c
  41da8e:	ja     41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41da94:	mov    eax,eax
  41da96:	lea    rdx,[rax*4+0x0]
  41da9e:	lea    rax,[rip+0x5db7]        # 42385c <flatcc_builder_padding_base@@Base+0x14bc>
  41daa5:	mov    eax,DWORD PTR [rdx+rax*1]
  41daa8:	movsxd rdx,eax
  41daab:	lea    rax,[rip+0x5daa]        # 42385c <flatcc_builder_padding_base@@Base+0x14bc>
  41dab2:	add    rax,rdx
  41dab5:	notrack jmp rax
  41dab8:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dabd:	vmovsd xmm1,QWORD PTR [rip+0x697b]        # 424440 <flatcc_builder_padding_base@@Base+0x20a0>
  41dac5:	vdivsd xmm0,xmm0,xmm1
  41dac9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dace:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dad3:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dad8:	vmovsd xmm1,QWORD PTR [rip+0x6968]        # 424448 <flatcc_builder_padding_base@@Base+0x20a8>
  41dae0:	vdivsd xmm0,xmm0,xmm1
  41dae4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dae9:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41daee:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41daf3:	vmovsd xmm1,QWORD PTR [rip+0x6955]        # 424450 <flatcc_builder_padding_base@@Base+0x20b0>
  41dafb:	vdivsd xmm0,xmm0,xmm1
  41daff:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41db04:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41db09:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41db0e:	vmovsd xmm1,QWORD PTR [rip+0x6942]        # 424458 <flatcc_builder_padding_base@@Base+0x20b8>
  41db16:	vdivsd xmm0,xmm0,xmm1
  41db1a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41db1f:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41db24:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41db29:	vmovsd xmm1,QWORD PTR [rip+0x692f]        # 424460 <flatcc_builder_padding_base@@Base+0x20c0>
  41db31:	vdivsd xmm0,xmm0,xmm1
  41db35:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41db3a:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41db3f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41db44:	vmovsd xmm1,QWORD PTR [rip+0x691c]        # 424468 <flatcc_builder_padding_base@@Base+0x20c8>
  41db4c:	vdivsd xmm0,xmm0,xmm1
  41db50:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41db55:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41db5a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41db5f:	vmovsd xmm1,QWORD PTR [rip+0x6909]        # 424470 <flatcc_builder_padding_base@@Base+0x20d0>
  41db67:	vdivsd xmm0,xmm0,xmm1
  41db6b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41db70:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41db75:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41db7a:	vmovsd xmm1,QWORD PTR [rip+0x68f6]        # 424478 <flatcc_builder_padding_base@@Base+0x20d8>
  41db82:	vdivsd xmm0,xmm0,xmm1
  41db86:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41db8b:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41db90:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41db95:	vmovsd xmm1,QWORD PTR [rip+0x68e3]        # 424480 <flatcc_builder_padding_base@@Base+0x20e0>
  41db9d:	vdivsd xmm0,xmm0,xmm1
  41dba1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dba6:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dbab:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dbb0:	vmovsd xmm1,QWORD PTR [rip+0x68d0]        # 424488 <flatcc_builder_padding_base@@Base+0x20e8>
  41dbb8:	vdivsd xmm0,xmm0,xmm1
  41dbbc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dbc1:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dbc6:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dbcb:	vmovsd xmm1,QWORD PTR [rip+0x68bd]        # 424490 <flatcc_builder_padding_base@@Base+0x20f0>
  41dbd3:	vdivsd xmm0,xmm0,xmm1
  41dbd7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dbdc:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dbe1:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dbe6:	vmovsd xmm1,QWORD PTR [rip+0x68aa]        # 424498 <flatcc_builder_padding_base@@Base+0x20f8>
  41dbee:	vdivsd xmm0,xmm0,xmm1
  41dbf2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dbf7:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dbfc:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dc01:	vmovsd xmm1,QWORD PTR [rip+0x6897]        # 4244a0 <flatcc_builder_padding_base@@Base+0x2100>
  41dc09:	vdivsd xmm0,xmm0,xmm1
  41dc0d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dc12:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dc17:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dc1c:	vmovsd xmm1,QWORD PTR [rip+0x6884]        # 4244a8 <flatcc_builder_padding_base@@Base+0x2108>
  41dc24:	vdivsd xmm0,xmm0,xmm1
  41dc28:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dc2d:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dc32:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dc37:	vmovsd xmm1,QWORD PTR [rip+0x6871]        # 4244b0 <flatcc_builder_padding_base@@Base+0x2110>
  41dc3f:	vdivsd xmm0,xmm0,xmm1
  41dc43:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dc48:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dc4d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dc52:	vmovsd xmm1,QWORD PTR [rip+0x685e]        # 4244b8 <flatcc_builder_padding_base@@Base+0x2118>
  41dc5a:	vdivsd xmm0,xmm0,xmm1
  41dc5e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dc63:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dc68:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dc6d:	vmovsd xmm1,QWORD PTR [rip+0x684b]        # 4244c0 <flatcc_builder_padding_base@@Base+0x2120>
  41dc75:	vdivsd xmm0,xmm0,xmm1
  41dc79:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dc7e:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dc83:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dc88:	vmovsd xmm1,QWORD PTR [rip+0x6838]        # 4244c8 <flatcc_builder_padding_base@@Base+0x2128>
  41dc90:	vdivsd xmm0,xmm0,xmm1
  41dc94:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dc99:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dc9e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dca3:	vmovsd xmm1,QWORD PTR [rip+0x6825]        # 4244d0 <flatcc_builder_padding_base@@Base+0x2130>
  41dcab:	vdivsd xmm0,xmm0,xmm1
  41dcaf:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dcb4:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dcb9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dcbe:	vmovsd xmm1,QWORD PTR [rip+0x6812]        # 4244d8 <flatcc_builder_padding_base@@Base+0x2138>
  41dcc6:	vdivsd xmm0,xmm0,xmm1
  41dcca:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dccf:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dcd4:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dcd9:	vmovsd xmm1,QWORD PTR [rip+0x67ff]        # 4244e0 <flatcc_builder_padding_base@@Base+0x2140>
  41dce1:	vdivsd xmm0,xmm0,xmm1
  41dce5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dcea:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dcef:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41dcf4:	vmovsd xmm1,QWORD PTR [rip+0x67ec]        # 4244e8 <flatcc_builder_padding_base@@Base+0x2148>
  41dcfc:	vdivsd xmm0,xmm0,xmm1
  41dd00:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dd05:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dd0a:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dd0f:	vmovsd xmm0,QWORD PTR [rip+0x67d1]        # 4244e8 <flatcc_builder_padding_base@@Base+0x2148>
  41dd17:	vmulsd xmm0,xmm1,xmm0
  41dd1b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dd20:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dd25:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dd2a:	vmovsd xmm0,QWORD PTR [rip+0x67ae]        # 4244e0 <flatcc_builder_padding_base@@Base+0x2140>
  41dd32:	vmulsd xmm0,xmm1,xmm0
  41dd36:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dd3b:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dd40:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dd45:	vmovsd xmm0,QWORD PTR [rip+0x678b]        # 4244d8 <flatcc_builder_padding_base@@Base+0x2138>
  41dd4d:	vmulsd xmm0,xmm1,xmm0
  41dd51:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dd56:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dd5b:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dd60:	vmovsd xmm0,QWORD PTR [rip+0x6768]        # 4244d0 <flatcc_builder_padding_base@@Base+0x2130>
  41dd68:	vmulsd xmm0,xmm1,xmm0
  41dd6c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dd71:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dd76:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dd7b:	vmovsd xmm0,QWORD PTR [rip+0x6745]        # 4244c8 <flatcc_builder_padding_base@@Base+0x2128>
  41dd83:	vmulsd xmm0,xmm1,xmm0
  41dd87:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dd8c:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dd91:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dd96:	vmovsd xmm0,QWORD PTR [rip+0x6722]        # 4244c0 <flatcc_builder_padding_base@@Base+0x2120>
  41dd9e:	vmulsd xmm0,xmm1,xmm0
  41dda2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dda7:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41ddac:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41ddb1:	vmovsd xmm0,QWORD PTR [rip+0x66ff]        # 4244b8 <flatcc_builder_padding_base@@Base+0x2118>
  41ddb9:	vmulsd xmm0,xmm1,xmm0
  41ddbd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41ddc2:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41ddc7:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41ddcc:	vmovsd xmm0,QWORD PTR [rip+0x66dc]        # 4244b0 <flatcc_builder_padding_base@@Base+0x2110>
  41ddd4:	vmulsd xmm0,xmm1,xmm0
  41ddd8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dddd:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41dde2:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dde7:	vmovsd xmm0,QWORD PTR [rip+0x66b9]        # 4244a8 <flatcc_builder_padding_base@@Base+0x2108>
  41ddef:	vmulsd xmm0,xmm1,xmm0
  41ddf3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41ddf8:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41ddfd:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41de02:	vmovsd xmm0,QWORD PTR [rip+0x6696]        # 4244a0 <flatcc_builder_padding_base@@Base+0x2100>
  41de0a:	vmulsd xmm0,xmm1,xmm0
  41de0e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41de13:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41de18:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41de1d:	vmovsd xmm0,QWORD PTR [rip+0x6673]        # 424498 <flatcc_builder_padding_base@@Base+0x20f8>
  41de25:	vmulsd xmm0,xmm1,xmm0
  41de29:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41de2e:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41de33:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41de38:	vmovsd xmm0,QWORD PTR [rip+0x6650]        # 424490 <flatcc_builder_padding_base@@Base+0x20f0>
  41de40:	vmulsd xmm0,xmm1,xmm0
  41de44:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41de49:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41de4e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41de53:	vmovsd xmm0,QWORD PTR [rip+0x662d]        # 424488 <flatcc_builder_padding_base@@Base+0x20e8>
  41de5b:	vmulsd xmm0,xmm1,xmm0
  41de5f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41de64:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41de69:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41de6e:	vmovsd xmm0,QWORD PTR [rip+0x660a]        # 424480 <flatcc_builder_padding_base@@Base+0x20e0>
  41de76:	vmulsd xmm0,xmm1,xmm0
  41de7a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41de7f:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41de84:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41de89:	vmovsd xmm0,QWORD PTR [rip+0x65e7]        # 424478 <flatcc_builder_padding_base@@Base+0x20d8>
  41de91:	vmulsd xmm0,xmm1,xmm0
  41de95:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41de9a:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41de9f:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41dea4:	vmovsd xmm0,QWORD PTR [rip+0x65c4]        # 424470 <flatcc_builder_padding_base@@Base+0x20d0>
  41deac:	vmulsd xmm0,xmm1,xmm0
  41deb0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41deb5:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41deba:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41debf:	vmovsd xmm0,QWORD PTR [rip+0x65a1]        # 424468 <flatcc_builder_padding_base@@Base+0x20c8>
  41dec7:	vmulsd xmm0,xmm1,xmm0
  41decb:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41ded0:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41ded2:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41ded7:	vmovsd xmm0,QWORD PTR [rip+0x6581]        # 424460 <flatcc_builder_padding_base@@Base+0x20c0>
  41dedf:	vmulsd xmm0,xmm1,xmm0
  41dee3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41dee8:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41deea:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41deef:	vmovsd xmm0,QWORD PTR [rip+0x6561]        # 424458 <flatcc_builder_padding_base@@Base+0x20b8>
  41def7:	vmulsd xmm0,xmm1,xmm0
  41defb:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41df00:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41df02:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41df07:	vmovsd xmm0,QWORD PTR [rip+0x6541]        # 424450 <flatcc_builder_padding_base@@Base+0x20b0>
  41df0f:	vmulsd xmm0,xmm1,xmm0
  41df13:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41df18:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41df1a:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41df1f:	vmovsd xmm0,QWORD PTR [rip+0x6521]        # 424448 <flatcc_builder_padding_base@@Base+0x20a8>
  41df27:	vmulsd xmm0,xmm1,xmm0
  41df2b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41df30:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41df32:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  41df37:	vmovsd xmm0,QWORD PTR [rip+0x6501]        # 424440 <flatcc_builder_padding_base@@Base+0x20a0>
  41df3f:	vmulsd xmm0,xmm1,xmm0
  41df43:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41df48:	jmp    41df4b <grisu3_diy_fp_encode_double@@Base+0x93e>
  41df4a:	nop
  41df4b:	mov    rax,QWORD PTR [rbp-0x50]
  41df4f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41df54:	vmovsd QWORD PTR [rax],xmm0
  41df58:	jmp    41dfb0 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  41df5a:	mov    rcx,QWORD PTR [rbp-0x50]
  41df5e:	mov    edx,DWORD PTR [rbp-0x44]
  41df61:	mov    esi,DWORD PTR [rbp-0x38]
  41df64:	mov    rax,QWORD PTR [rbp-0x40]
  41df68:	mov    r8,rcx
  41df6b:	mov    ecx,DWORD PTR [rbp+0x10]
  41df6e:	mov    rdi,rax
  41df71:	call   41d60d <grisu3_diy_fp_encode_double@@Base>
  41df76:	test   eax,eax
  41df78:	jne    41dfaf <grisu3_diy_fp_encode_double@@Base+0x9a2>
  41df7a:	lea    rdx,[rbp-0x18]
  41df7e:	mov    rax,QWORD PTR [rbp-0x28]
  41df82:	mov    rsi,rdx
  41df85:	mov    rdi,rax
  41df88:	call   4031d0 <strtod@plt>
  41df8d:	vmovq  rax,xmm0
  41df92:	mov    rdx,QWORD PTR [rbp-0x50]
  41df96:	mov    QWORD PTR [rdx],rax
  41df99:	mov    rax,QWORD PTR [rbp-0x18]
  41df9d:	cmp    QWORD PTR [rbp-0x30],rax
  41dfa1:	jbe    41dfa9 <grisu3_diy_fp_encode_double@@Base+0x99c>
  41dfa3:	mov    rax,QWORD PTR [rbp-0x18]
  41dfa7:	jmp    41dfd6 <grisu3_diy_fp_encode_double@@Base+0x9c9>
  41dfa9:	mov    rax,QWORD PTR [rbp-0x30]
  41dfad:	jmp    41dfd6 <grisu3_diy_fp_encode_double@@Base+0x9c9>
  41dfaf:	nop
  41dfb0:	cmp    DWORD PTR [rbp-0x34],0x0
  41dfb4:	je     41dfd2 <grisu3_diy_fp_encode_double@@Base+0x9c5>
  41dfb6:	mov    rax,QWORD PTR [rbp-0x50]
  41dfba:	vmovsd xmm1,QWORD PTR [rax]
  41dfbe:	vmovq  xmm0,QWORD PTR [rip+0x645a]        # 424420 <flatcc_builder_padding_base@@Base+0x2080>
  41dfc6:	vxorpd xmm0,xmm0,xmm1
  41dfca:	mov    rax,QWORD PTR [rbp-0x50]
  41dfce:	vmovsd QWORD PTR [rax],xmm0
  41dfd2:	mov    rax,QWORD PTR [rbp-0x30]
  41dfd6:	mov    rcx,QWORD PTR [rbp-0x8]
  41dfda:	xor    rcx,QWORD PTR fs:0x28
  41dfe3:	je     41dfea <grisu3_diy_fp_encode_double@@Base+0x9dd>
  41dfe5:	call   403200 <__stack_chk_fail@plt>
  41dfea:	leave  
  41dfeb:	ret    
  41dfec:	endbr64 
  41dff0:	push   rbp
  41dff1:	mov    rbp,rsp
  41dff4:	mov    QWORD PTR [rbp-0x8],rdi
  41dff8:	mov    QWORD PTR [rbp-0x10],rsi
  41dffc:	mov    DWORD PTR [rbp-0x14],edx
  41dfff:	mov    QWORD PTR [rbp-0x20],rcx
  41e003:	mov    rax,QWORD PTR [rbp-0x20]
  41e007:	vxorpd xmm0,xmm0,xmm0
  41e00b:	vmovsd QWORD PTR [rax],xmm0
  41e00f:	mov    rax,QWORD PTR [rbp-0x8]
  41e013:	pop    rbp
  41e014:	ret    
  41e015:	endbr64 
  41e019:	push   rbp
  41e01a:	mov    rbp,rsp
  41e01d:	sub    rsp,0x60
  41e021:	mov    QWORD PTR [rbp-0x48],rdi
  41e025:	mov    DWORD PTR [rbp-0x4c],esi
  41e028:	mov    QWORD PTR [rbp-0x58],rdx
  41e02c:	mov    DWORD PTR [rbp-0x38],0x0
  41e033:	mov    DWORD PTR [rbp-0x34],0x0
  41e03a:	mov    QWORD PTR [rbp-0x18],0x0
  41e042:	mov    DWORD PTR [rbp-0x30],0x0
  41e049:	mov    DWORD PTR [rbp-0x2c],0x0
  41e050:	mov    DWORD PTR [rbp-0x28],0x0
  41e057:	mov    DWORD PTR [rbp-0x24],0x0
  41e05e:	mov    rax,QWORD PTR [rbp-0x58]
  41e062:	vxorpd xmm0,xmm0,xmm0
  41e066:	vmovsd QWORD PTR [rax],xmm0
  41e06a:	mov    eax,DWORD PTR [rbp-0x4c]
  41e06d:	cdqe   
  41e06f:	lea    rdx,[rax+0x1]
  41e073:	mov    rax,QWORD PTR [rbp-0x48]
  41e077:	add    rax,rdx
  41e07a:	mov    QWORD PTR [rbp-0x20],rax
  41e07e:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  41e085:	jle    41e095 <grisu3_diy_fp_encode_double@@Base+0xa88>
  41e087:	mov    rax,QWORD PTR [rbp-0x48]
  41e08b:	add    rax,0x3e9
  41e091:	mov    QWORD PTR [rbp-0x20],rax
  41e095:	mov    rax,QWORD PTR [rbp-0x48]
  41e099:	cmp    rax,QWORD PTR [rbp-0x20]
  41e09d:	jne    41e0a8 <grisu3_diy_fp_encode_double@@Base+0xa9b>
  41e09f:	mov    rax,QWORD PTR [rbp-0x48]
  41e0a3:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e0a8:	mov    rax,QWORD PTR [rbp-0x48]
  41e0ac:	mov    QWORD PTR [rbp-0x10],rax
  41e0b0:	mov    rax,QWORD PTR [rbp-0x48]
  41e0b4:	movzx  eax,BYTE PTR [rax]
  41e0b7:	cmp    al,0x2d
  41e0b9:	jne    41e0da <grisu3_diy_fp_encode_double@@Base+0xacd>
  41e0bb:	inc    QWORD PTR [rbp-0x48]
  41e0bf:	mov    DWORD PTR [rbp-0x38],0x1
  41e0c6:	mov    rax,QWORD PTR [rbp-0x48]
  41e0ca:	cmp    rax,QWORD PTR [rbp-0x20]
  41e0ce:	jne    41e0da <grisu3_diy_fp_encode_double@@Base+0xacd>
  41e0d0:	mov    eax,0x0
  41e0d5:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e0da:	mov    rax,QWORD PTR [rbp-0x48]
  41e0de:	movzx  eax,BYTE PTR [rax]
  41e0e1:	cmp    al,0x30
  41e0e3:	jne    41e153 <grisu3_diy_fp_encode_double@@Base+0xb46>
  41e0e5:	inc    QWORD PTR [rbp-0x48]
  41e0e9:	mov    rax,QWORD PTR [rbp-0x48]
  41e0ed:	cmp    rax,QWORD PTR [rbp-0x20]
  41e0f1:	je     41e13c <grisu3_diy_fp_encode_double@@Base+0xb2f>
  41e0f3:	mov    rax,QWORD PTR [rbp-0x48]
  41e0f7:	movzx  eax,BYTE PTR [rax]
  41e0fa:	or     eax,0x20
  41e0fd:	cmp    al,0x78
  41e0ff:	jne    41e13c <grisu3_diy_fp_encode_double@@Base+0xb2f>
  41e101:	mov    rcx,QWORD PTR [rbp-0x58]
  41e105:	mov    edx,DWORD PTR [rbp-0x38]
  41e108:	mov    rsi,QWORD PTR [rbp-0x20]
  41e10c:	mov    rax,QWORD PTR [rbp-0x48]
  41e110:	mov    rdi,rax
  41e113:	call   41dfec <grisu3_diy_fp_encode_double@@Base+0x9df>
  41e118:	mov    QWORD PTR [rbp-0x8],rax
  41e11c:	mov    rax,QWORD PTR [rbp-0x8]
  41e120:	cmp    rax,QWORD PTR [rbp-0x48]
  41e124:	jne    41e12f <grisu3_diy_fp_encode_double@@Base+0xb22>
  41e126:	mov    rax,QWORD PTR [rbp-0x10]
  41e12a:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e12f:	mov    rax,QWORD PTR [rbp-0x8]
  41e133:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e138:	inc    QWORD PTR [rbp-0x48]
  41e13c:	mov    rax,QWORD PTR [rbp-0x48]
  41e140:	cmp    rax,QWORD PTR [rbp-0x20]
  41e144:	je     41e19d <grisu3_diy_fp_encode_double@@Base+0xb90>
  41e146:	mov    rax,QWORD PTR [rbp-0x48]
  41e14a:	movzx  eax,BYTE PTR [rax]
  41e14d:	cmp    al,0x30
  41e14f:	je     41e138 <grisu3_diy_fp_encode_double@@Base+0xb2b>
  41e151:	jmp    41e19d <grisu3_diy_fp_encode_double@@Base+0xb90>
  41e153:	mov    rax,QWORD PTR [rbp-0x48]
  41e157:	movzx  eax,BYTE PTR [rax]
  41e15a:	cmp    al,0x30
  41e15c:	jle    41e169 <grisu3_diy_fp_encode_double@@Base+0xb5c>
  41e15e:	mov    rax,QWORD PTR [rbp-0x48]
  41e162:	movzx  eax,BYTE PTR [rax]
  41e165:	cmp    al,0x39
  41e167:	jle    41e182 <grisu3_diy_fp_encode_double@@Base+0xb75>
  41e169:	cmp    DWORD PTR [rbp-0x38],0x0
  41e16d:	jne    41e178 <grisu3_diy_fp_encode_double@@Base+0xb6b>
  41e16f:	mov    rax,QWORD PTR [rbp-0x10]
  41e173:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e178:	mov    eax,0x0
  41e17d:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e182:	mov    rax,QWORD PTR [rbp-0x48]
  41e186:	lea    rdx,[rax+0x1]
  41e18a:	mov    QWORD PTR [rbp-0x48],rdx
  41e18e:	movzx  eax,BYTE PTR [rax]
  41e191:	movsx  eax,al
  41e194:	sub    eax,0x30
  41e197:	cdqe   
  41e199:	mov    QWORD PTR [rbp-0x18],rax
  41e19d:	mov    rax,QWORD PTR [rbp-0x48]
  41e1a1:	mov    QWORD PTR [rbp-0x8],rax
  41e1a5:	jmp    41e205 <grisu3_diy_fp_encode_double@@Base+0xbf8>
  41e1a7:	movabs rax,0x1999999999999998
  41e1b1:	cmp    QWORD PTR [rbp-0x18],rax
  41e1b5:	jbe    41e1d3 <grisu3_diy_fp_encode_double@@Base+0xbc6>
  41e1b7:	mov    rax,QWORD PTR [rbp-0x48]
  41e1bb:	movzx  eax,BYTE PTR [rax]
  41e1be:	cmp    al,0x34
  41e1c0:	setg   al
  41e1c3:	movzx  eax,al
  41e1c6:	add    QWORD PTR [rbp-0x18],rax
  41e1ca:	mov    DWORD PTR [rbp-0x24],0x1
  41e1d1:	jmp    41e225 <grisu3_diy_fp_encode_double@@Base+0xc18>
  41e1d3:	mov    rdx,QWORD PTR [rbp-0x18]
  41e1d7:	mov    rax,rdx
  41e1da:	shl    rax,0x2
  41e1de:	add    rax,rdx
  41e1e1:	add    rax,rax
  41e1e4:	mov    rcx,rax
  41e1e7:	mov    rax,QWORD PTR [rbp-0x48]
  41e1eb:	lea    rdx,[rax+0x1]
  41e1ef:	mov    QWORD PTR [rbp-0x48],rdx
  41e1f3:	movzx  eax,BYTE PTR [rax]
  41e1f6:	movsx  rax,al
  41e1fa:	add    rax,rcx
  41e1fd:	sub    rax,0x30
  41e201:	mov    QWORD PTR [rbp-0x18],rax
  41e205:	mov    rax,QWORD PTR [rbp-0x48]
  41e209:	cmp    rax,QWORD PTR [rbp-0x20]
  41e20d:	je     41e225 <grisu3_diy_fp_encode_double@@Base+0xc18>
  41e20f:	mov    rax,QWORD PTR [rbp-0x48]
  41e213:	movzx  eax,BYTE PTR [rax]
  41e216:	cmp    al,0x2f
  41e218:	jle    41e225 <grisu3_diy_fp_encode_double@@Base+0xc18>
  41e21a:	mov    rax,QWORD PTR [rbp-0x48]
  41e21e:	movzx  eax,BYTE PTR [rax]
  41e221:	cmp    al,0x39
  41e223:	jle    41e1a7 <grisu3_diy_fp_encode_double@@Base+0xb9a>
  41e225:	mov    rax,QWORD PTR [rbp-0x48]
  41e229:	sub    rax,QWORD PTR [rbp-0x8]
  41e22d:	mov    DWORD PTR [rbp-0x28],eax
  41e230:	jmp    41e239 <grisu3_diy_fp_encode_double@@Base+0xc2c>
  41e232:	inc    DWORD PTR [rbp-0x30]
  41e235:	inc    QWORD PTR [rbp-0x48]
  41e239:	mov    rax,QWORD PTR [rbp-0x48]
  41e23d:	cmp    rax,QWORD PTR [rbp-0x20]
  41e241:	je     41e24e <grisu3_diy_fp_encode_double@@Base+0xc41>
  41e243:	mov    rax,QWORD PTR [rbp-0x48]
  41e247:	movzx  eax,BYTE PTR [rax]
  41e24a:	cmp    al,0x30
  41e24c:	je     41e232 <grisu3_diy_fp_encode_double@@Base+0xc25>
  41e24e:	mov    rax,QWORD PTR [rbp-0x48]
  41e252:	cmp    rax,QWORD PTR [rbp-0x20]
  41e256:	je     41e2a5 <grisu3_diy_fp_encode_double@@Base+0xc98>
  41e258:	mov    rax,QWORD PTR [rbp-0x48]
  41e25c:	movzx  eax,BYTE PTR [rax]
  41e25f:	cmp    al,0x30
  41e261:	jle    41e2a5 <grisu3_diy_fp_encode_double@@Base+0xc98>
  41e263:	mov    rax,QWORD PTR [rbp-0x48]
  41e267:	movzx  eax,BYTE PTR [rax]
  41e26a:	cmp    al,0x39
  41e26c:	jg     41e2a5 <grisu3_diy_fp_encode_double@@Base+0xc98>
  41e26e:	mov    DWORD PTR [rbp-0x24],0x1
  41e275:	inc    DWORD PTR [rbp-0x30]
  41e278:	inc    QWORD PTR [rbp-0x48]
  41e27c:	jmp    41e285 <grisu3_diy_fp_encode_double@@Base+0xc78>
  41e27e:	inc    DWORD PTR [rbp-0x30]
  41e281:	inc    QWORD PTR [rbp-0x48]
  41e285:	mov    rax,QWORD PTR [rbp-0x48]
  41e289:	cmp    rax,QWORD PTR [rbp-0x20]
  41e28d:	je     41e2a5 <grisu3_diy_fp_encode_double@@Base+0xc98>
  41e28f:	mov    rax,QWORD PTR [rbp-0x48]
  41e293:	movzx  eax,BYTE PTR [rax]
  41e296:	cmp    al,0x2f
  41e298:	jle    41e2a5 <grisu3_diy_fp_encode_double@@Base+0xc98>
  41e29a:	mov    rax,QWORD PTR [rbp-0x48]
  41e29e:	movzx  eax,BYTE PTR [rax]
  41e2a1:	cmp    al,0x39
  41e2a3:	jle    41e27e <grisu3_diy_fp_encode_double@@Base+0xc71>
  41e2a5:	mov    rax,QWORD PTR [rbp-0x48]
  41e2a9:	cmp    rax,QWORD PTR [rbp-0x20]
  41e2ad:	je     41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e2b3:	mov    rax,QWORD PTR [rbp-0x48]
  41e2b7:	movzx  eax,BYTE PTR [rax]
  41e2ba:	cmp    al,0x2e
  41e2bc:	jne    41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e2c2:	inc    QWORD PTR [rbp-0x48]
  41e2c6:	mov    rax,QWORD PTR [rbp-0x48]
  41e2ca:	mov    QWORD PTR [rbp-0x8],rax
  41e2ce:	mov    rax,QWORD PTR [rbp-0x48]
  41e2d2:	movzx  eax,BYTE PTR [rax]
  41e2d5:	cmp    al,0x2f
  41e2d7:	jle    41e2e4 <grisu3_diy_fp_encode_double@@Base+0xcd7>
  41e2d9:	mov    rax,QWORD PTR [rbp-0x48]
  41e2dd:	movzx  eax,BYTE PTR [rax]
  41e2e0:	cmp    al,0x39
  41e2e2:	jle    41e355 <grisu3_diy_fp_encode_double@@Base+0xd48>
  41e2e4:	mov    eax,0x0
  41e2e9:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e2ee:	movabs rax,0x1999999999999998
  41e2f8:	cmp    QWORD PTR [rbp-0x18],rax
  41e2fc:	jbe    41e320 <grisu3_diy_fp_encode_double@@Base+0xd13>
  41e2fe:	cmp    DWORD PTR [rbp-0x24],0x0
  41e302:	jne    41e37b <grisu3_diy_fp_encode_double@@Base+0xd6e>
  41e304:	mov    rax,QWORD PTR [rbp-0x48]
  41e308:	movzx  eax,BYTE PTR [rax]
  41e30b:	cmp    al,0x34
  41e30d:	setg   al
  41e310:	movzx  eax,al
  41e313:	add    QWORD PTR [rbp-0x18],rax
  41e317:	mov    DWORD PTR [rbp-0x24],0x1
  41e31e:	jmp    41e37b <grisu3_diy_fp_encode_double@@Base+0xd6e>
  41e320:	mov    rdx,QWORD PTR [rbp-0x18]
  41e324:	mov    rax,rdx
  41e327:	shl    rax,0x2
  41e32b:	add    rax,rdx
  41e32e:	add    rax,rax
  41e331:	mov    rcx,rax
  41e334:	mov    rax,QWORD PTR [rbp-0x48]
  41e338:	lea    rdx,[rax+0x1]
  41e33c:	mov    QWORD PTR [rbp-0x48],rdx
  41e340:	movzx  eax,BYTE PTR [rax]
  41e343:	movsx  rax,al
  41e347:	add    rax,rcx
  41e34a:	sub    rax,0x30
  41e34e:	mov    QWORD PTR [rbp-0x18],rax
  41e352:	dec    DWORD PTR [rbp-0x30]
  41e355:	mov    rax,QWORD PTR [rbp-0x48]
  41e359:	cmp    rax,QWORD PTR [rbp-0x20]
  41e35d:	je     41e37c <grisu3_diy_fp_encode_double@@Base+0xd6f>
  41e35f:	mov    rax,QWORD PTR [rbp-0x48]
  41e363:	movzx  eax,BYTE PTR [rax]
  41e366:	cmp    al,0x2f
  41e368:	jle    41e37c <grisu3_diy_fp_encode_double@@Base+0xd6f>
  41e36a:	mov    rax,QWORD PTR [rbp-0x48]
  41e36e:	movzx  eax,BYTE PTR [rax]
  41e371:	cmp    al,0x39
  41e373:	jle    41e2ee <grisu3_diy_fp_encode_double@@Base+0xce1>
  41e379:	jmp    41e37c <grisu3_diy_fp_encode_double@@Base+0xd6f>
  41e37b:	nop
  41e37c:	mov    rax,QWORD PTR [rbp-0x48]
  41e380:	sub    rax,QWORD PTR [rbp-0x8]
  41e384:	add    DWORD PTR [rbp-0x28],eax
  41e387:	jmp    41e390 <grisu3_diy_fp_encode_double@@Base+0xd83>
  41e389:	inc    DWORD PTR [rbp-0x30]
  41e38c:	inc    QWORD PTR [rbp-0x48]
  41e390:	mov    rax,QWORD PTR [rbp-0x48]
  41e394:	cmp    rax,QWORD PTR [rbp-0x20]
  41e398:	je     41e3a5 <grisu3_diy_fp_encode_double@@Base+0xd98>
  41e39a:	mov    rax,QWORD PTR [rbp-0x48]
  41e39e:	movzx  eax,BYTE PTR [rax]
  41e3a1:	cmp    al,0x30
  41e3a3:	je     41e389 <grisu3_diy_fp_encode_double@@Base+0xd7c>
  41e3a5:	mov    rax,QWORD PTR [rbp-0x48]
  41e3a9:	cmp    rax,QWORD PTR [rbp-0x20]
  41e3ad:	je     41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e3af:	mov    rax,QWORD PTR [rbp-0x48]
  41e3b3:	movzx  eax,BYTE PTR [rax]
  41e3b6:	cmp    al,0x30
  41e3b8:	jle    41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e3ba:	mov    rax,QWORD PTR [rbp-0x48]
  41e3be:	movzx  eax,BYTE PTR [rax]
  41e3c1:	cmp    al,0x39
  41e3c3:	jg     41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e3c5:	mov    DWORD PTR [rbp-0x24],0x1
  41e3cc:	inc    QWORD PTR [rbp-0x48]
  41e3d0:	jmp    41e3d6 <grisu3_diy_fp_encode_double@@Base+0xdc9>
  41e3d2:	inc    QWORD PTR [rbp-0x48]
  41e3d6:	mov    rax,QWORD PTR [rbp-0x48]
  41e3da:	cmp    rax,QWORD PTR [rbp-0x20]
  41e3de:	je     41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e3e0:	mov    rax,QWORD PTR [rbp-0x48]
  41e3e4:	movzx  eax,BYTE PTR [rax]
  41e3e7:	cmp    al,0x2f
  41e3e9:	jle    41e3f6 <grisu3_diy_fp_encode_double@@Base+0xde9>
  41e3eb:	mov    rax,QWORD PTR [rbp-0x48]
  41e3ef:	movzx  eax,BYTE PTR [rax]
  41e3f2:	cmp    al,0x39
  41e3f4:	jle    41e3d2 <grisu3_diy_fp_encode_double@@Base+0xdc5>
  41e3f6:	mov    eax,DWORD PTR [rbp-0x28]
  41e3f9:	add    DWORD PTR [rbp-0x30],eax
  41e3fc:	mov    rax,QWORD PTR [rbp-0x48]
  41e400:	cmp    rax,QWORD PTR [rbp-0x20]
  41e404:	je     41e50c <grisu3_diy_fp_encode_double@@Base+0xeff>
  41e40a:	mov    rax,QWORD PTR [rbp-0x48]
  41e40e:	movzx  eax,BYTE PTR [rax]
  41e411:	or     eax,0x20
  41e414:	cmp    al,0x65
  41e416:	jne    41e50c <grisu3_diy_fp_encode_double@@Base+0xeff>
  41e41c:	mov    rax,QWORD PTR [rbp-0x20]
  41e420:	sub    rax,QWORD PTR [rbp-0x48]
  41e424:	cmp    rax,0x1
  41e428:	jg     41e434 <grisu3_diy_fp_encode_double@@Base+0xe27>
  41e42a:	mov    eax,0x0
  41e42f:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e434:	inc    QWORD PTR [rbp-0x48]
  41e438:	mov    rax,QWORD PTR [rbp-0x48]
  41e43c:	movzx  eax,BYTE PTR [rax]
  41e43f:	cmp    al,0x2b
  41e441:	jne    41e45b <grisu3_diy_fp_encode_double@@Base+0xe4e>
  41e443:	inc    QWORD PTR [rbp-0x48]
  41e447:	mov    rax,QWORD PTR [rbp-0x48]
  41e44b:	cmp    rax,QWORD PTR [rbp-0x20]
  41e44f:	jne    41e485 <grisu3_diy_fp_encode_double@@Base+0xe78>
  41e451:	mov    eax,0x0
  41e456:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e45b:	mov    rax,QWORD PTR [rbp-0x48]
  41e45f:	movzx  eax,BYTE PTR [rax]
  41e462:	cmp    al,0x2d
  41e464:	jne    41e485 <grisu3_diy_fp_encode_double@@Base+0xe78>
  41e466:	mov    DWORD PTR [rbp-0x34],0x1
  41e46d:	inc    QWORD PTR [rbp-0x48]
  41e471:	mov    rax,QWORD PTR [rbp-0x48]
  41e475:	cmp    rax,QWORD PTR [rbp-0x20]
  41e479:	jne    41e485 <grisu3_diy_fp_encode_double@@Base+0xe78>
  41e47b:	mov    eax,0x0
  41e480:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e485:	mov    rax,QWORD PTR [rbp-0x48]
  41e489:	movzx  eax,BYTE PTR [rax]
  41e48c:	cmp    al,0x2f
  41e48e:	jle    41e49b <grisu3_diy_fp_encode_double@@Base+0xe8e>
  41e490:	mov    rax,QWORD PTR [rbp-0x48]
  41e494:	movzx  eax,BYTE PTR [rax]
  41e497:	cmp    al,0x39
  41e499:	jle    41e4a5 <grisu3_diy_fp_encode_double@@Base+0xe98>
  41e49b:	mov    eax,0x0
  41e4a0:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e4a5:	mov    rax,QWORD PTR [rbp-0x48]
  41e4a9:	lea    rdx,[rax+0x1]
  41e4ad:	mov    QWORD PTR [rbp-0x48],rdx
  41e4b1:	movzx  eax,BYTE PTR [rax]
  41e4b4:	movsx  eax,al
  41e4b7:	sub    eax,0x30
  41e4ba:	mov    DWORD PTR [rbp-0x2c],eax
  41e4bd:	jmp    41e4ec <grisu3_diy_fp_encode_double@@Base+0xedf>
  41e4bf:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  41e4c6:	jg     41e4e8 <grisu3_diy_fp_encode_double@@Base+0xedb>
  41e4c8:	mov    edx,DWORD PTR [rbp-0x2c]
  41e4cb:	mov    eax,edx
  41e4cd:	shl    eax,0x2
  41e4d0:	add    eax,edx
  41e4d2:	add    eax,eax
  41e4d4:	mov    edx,eax
  41e4d6:	mov    rax,QWORD PTR [rbp-0x48]
  41e4da:	movzx  eax,BYTE PTR [rax]
  41e4dd:	movsx  eax,al
  41e4e0:	add    eax,edx
  41e4e2:	sub    eax,0x30
  41e4e5:	mov    DWORD PTR [rbp-0x2c],eax
  41e4e8:	inc    QWORD PTR [rbp-0x48]
  41e4ec:	mov    rax,QWORD PTR [rbp-0x48]
  41e4f0:	cmp    rax,QWORD PTR [rbp-0x20]
  41e4f4:	je     41e50c <grisu3_diy_fp_encode_double@@Base+0xeff>
  41e4f6:	mov    rax,QWORD PTR [rbp-0x48]
  41e4fa:	movzx  eax,BYTE PTR [rax]
  41e4fd:	cmp    al,0x2f
  41e4ff:	jle    41e50c <grisu3_diy_fp_encode_double@@Base+0xeff>
  41e501:	mov    rax,QWORD PTR [rbp-0x48]
  41e505:	movzx  eax,BYTE PTR [rax]
  41e508:	cmp    al,0x39
  41e50a:	jle    41e4bf <grisu3_diy_fp_encode_double@@Base+0xeb2>
  41e50c:	cmp    DWORD PTR [rbp-0x34],0x0
  41e510:	je     41e519 <grisu3_diy_fp_encode_double@@Base+0xf0c>
  41e512:	mov    eax,DWORD PTR [rbp-0x2c]
  41e515:	neg    eax
  41e517:	jmp    41e51c <grisu3_diy_fp_encode_double@@Base+0xf0f>
  41e519:	mov    eax,DWORD PTR [rbp-0x2c]
  41e51c:	add    DWORD PTR [rbp-0x30],eax
  41e51f:	mov    rax,QWORD PTR [rbp-0x48]
  41e523:	cmp    rax,QWORD PTR [rbp-0x20]
  41e527:	jne    41e530 <grisu3_diy_fp_encode_double@@Base+0xf23>
  41e529:	mov    eax,0x0
  41e52e:	jmp    41e55a <grisu3_diy_fp_encode_double@@Base+0xf4d>
  41e530:	mov    r9d,DWORD PTR [rbp-0x28]
  41e534:	mov    r8d,DWORD PTR [rbp-0x30]
  41e538:	mov    rcx,QWORD PTR [rbp-0x18]
  41e53c:	mov    edx,DWORD PTR [rbp-0x38]
  41e53f:	mov    rsi,QWORD PTR [rbp-0x48]
  41e543:	mov    rax,QWORD PTR [rbp-0x10]
  41e547:	push   QWORD PTR [rbp-0x58]
  41e54a:	mov    edi,DWORD PTR [rbp-0x24]
  41e54d:	push   rdi
  41e54e:	mov    rdi,rax
  41e551:	call   41d99e <grisu3_diy_fp_encode_double@@Base+0x391>
  41e556:	add    rsp,0x10
  41e55a:	leave  
  41e55b:	ret    
  41e55c:	push   rbp
  41e55d:	mov    rbp,rsp
  41e560:	sub    rsp,0x20
  41e564:	mov    QWORD PTR [rbp-0x8],rdi
  41e568:	mov    DWORD PTR [rbp-0xc],esi
  41e56b:	mov    QWORD PTR [rbp-0x18],rdx
  41e56f:	mov    rdx,QWORD PTR [rbp-0x18]
  41e573:	mov    ecx,DWORD PTR [rbp-0xc]
  41e576:	mov    rax,QWORD PTR [rbp-0x8]
  41e57a:	mov    esi,ecx
  41e57c:	mov    rdi,rax
  41e57f:	call   41e015 <grisu3_diy_fp_encode_double@@Base+0xa08>
  41e584:	leave  
  41e585:	ret    
  41e586:	push   rbp
  41e587:	mov    rbp,rsp
  41e58a:	sub    rsp,0x40
  41e58e:	mov    QWORD PTR [rbp-0x28],rdi
  41e592:	mov    DWORD PTR [rbp-0x2c],esi
  41e595:	mov    QWORD PTR [rbp-0x38],rdx
  41e599:	mov    rax,QWORD PTR fs:0x28
  41e5a2:	mov    QWORD PTR [rbp-0x8],rax
  41e5a6:	xor    eax,eax
  41e5a8:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  41e5af:	lea    rdx,[rbp-0x18]
  41e5b3:	mov    ecx,DWORD PTR [rbp-0x2c]
  41e5b6:	mov    rax,QWORD PTR [rbp-0x28]
  41e5ba:	mov    esi,ecx
  41e5bc:	mov    rdi,rax
  41e5bf:	call   41e55c <grisu3_diy_fp_encode_double@@Base+0xf4f>
  41e5c4:	mov    QWORD PTR [rbp-0x10],rax
  41e5c8:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  41e5cd:	vcvtsd2ss xmm0,xmm0,xmm0
  41e5d1:	mov    rax,QWORD PTR [rbp-0x38]
  41e5d5:	vmovss DWORD PTR [rax],xmm0
  41e5d9:	mov    rax,QWORD PTR [rbp-0x38]
  41e5dd:	vmovss xmm1,DWORD PTR [rax]
  41e5e1:	vmovss xmm0,DWORD PTR [rip+0x5f07]        # 4244f0 <flatcc_builder_padding_base@@Base+0x2150>
  41e5e9:	vandps xmm0,xmm0,xmm1
  41e5ed:	vucomiss xmm0,DWORD PTR [rip+0x5f0b]        # 424500 <flatcc_builder_padding_base@@Base+0x2160>
  41e5f5:	setbe  al
  41e5f8:	xor    eax,0x1
  41e5fb:	test   al,al
  41e5fd:	je     41e606 <grisu3_diy_fp_encode_double@@Base+0xff9>
  41e5ff:	mov    eax,0x1
  41e604:	jmp    41e60b <grisu3_diy_fp_encode_double@@Base+0xffe>
  41e606:	mov    eax,0x0
  41e60b:	test   al,al
  41e60d:	je     41e644 <grisu3_diy_fp_encode_double@@Base+0x1037>
  41e60f:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  41e614:	vxorpd xmm0,xmm0,xmm0
  41e618:	vcomisd xmm0,xmm1
  41e61c:	jbe    41e631 <grisu3_diy_fp_encode_double@@Base+0x1024>
  41e61e:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  41e623:	vmovss xmm0,DWORD PTR [rip+0x5de5]        # 424410 <flatcc_builder_padding_base@@Base+0x2070>
  41e62b:	vxorps xmm0,xmm0,xmm1
  41e62f:	jmp    41e636 <grisu3_diy_fp_encode_double@@Base+0x1029>
  41e631:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  41e636:	mov    rax,QWORD PTR [rbp-0x38]
  41e63a:	vmovss DWORD PTR [rax],xmm0
  41e63e:	mov    rax,QWORD PTR [rbp-0x28]
  41e642:	jmp    41e648 <grisu3_diy_fp_encode_double@@Base+0x103b>
  41e644:	mov    rax,QWORD PTR [rbp-0x10]
  41e648:	mov    rcx,QWORD PTR [rbp-0x8]
  41e64c:	xor    rcx,QWORD PTR fs:0x28
  41e655:	je     41e65c <grisu3_diy_fp_encode_double@@Base+0x104f>
  41e657:	call   403200 <__stack_chk_fail@plt>
  41e65c:	leave  
  41e65d:	ret    
  41e65e:	endbr64 
  41e662:	push   rbp
  41e663:	mov    rbp,rsp
  41e666:	mov    DWORD PTR [rbp-0x4],edi
  41e669:	cmp    DWORD PTR [rbp-0x4],0x5
  41e66d:	ja     41e6ca <grisu3_diy_fp_encode_double@@Base+0x10bd>
  41e66f:	mov    eax,DWORD PTR [rbp-0x4]
  41e672:	lea    rdx,[rax*4+0x0]
  41e67a:	lea    rax,[rip+0x52fb]        # 42397c <flatcc_builder_padding_base@@Base+0x15dc>
  41e681:	mov    eax,DWORD PTR [rdx+rax*1]
  41e684:	movsxd rdx,eax
  41e687:	lea    rax,[rip+0x52ee]        # 42397c <flatcc_builder_padding_base@@Base+0x15dc>
  41e68e:	add    rax,rdx
  41e691:	notrack jmp rax
  41e694:	lea    rax,[rip+0x5275]        # 423910 <flatcc_builder_padding_base@@Base+0x1570>
  41e69b:	jmp    41e6d1 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  41e69d:	lea    rax,[rip+0x526f]        # 423913 <flatcc_builder_padding_base@@Base+0x1573>
  41e6a4:	jmp    41e6d1 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  41e6a6:	lea    rax,[rip+0x5277]        # 423924 <flatcc_builder_padding_base@@Base+0x1584>
  41e6ad:	jmp    41e6d1 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  41e6af:	lea    rax,[rip+0x527b]        # 423931 <flatcc_builder_padding_base@@Base+0x1591>
  41e6b6:	jmp    41e6d1 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  41e6b8:	lea    rax,[rip+0x5283]        # 423942 <flatcc_builder_padding_base@@Base+0x15a2>
  41e6bf:	jmp    41e6d1 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  41e6c1:	lea    rax,[rip+0x528e]        # 423956 <flatcc_builder_padding_base@@Base+0x15b6>
  41e6c8:	jmp    41e6d1 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  41e6ca:	lea    rax,[rip+0x529a]        # 42396b <flatcc_builder_padding_base@@Base+0x15cb>
  41e6d1:	pop    rbp
  41e6d2:	ret    
  41e6d3:	endbr64 
  41e6d7:	push   rbp
  41e6d8:	mov    rbp,rsp
  41e6db:	mov    QWORD PTR [rbp-0x28],rdi
  41e6df:	mov    DWORD PTR [rbp-0x2c],esi
  41e6e2:	mov    rcx,QWORD PTR [rbp-0x28]
  41e6e6:	movabs rdx,0xaaaaaaaaaaaaaaab
  41e6f0:	mov    rax,rcx
  41e6f3:	mul    rdx
  41e6f6:	shr    rdx,1
  41e6f9:	mov    rax,rdx
  41e6fc:	add    rax,rax
  41e6ff:	add    rax,rdx
  41e702:	sub    rcx,rax
  41e705:	mov    rax,rcx
  41e708:	mov    QWORD PTR [rbp-0x8],rax
  41e70c:	mov    rax,QWORD PTR [rbp-0x28]
  41e710:	shl    rax,0x2
  41e714:	movabs rdx,0xaaaaaaaaaaaaaaab
  41e71e:	mul    rdx
  41e721:	mov    rax,rdx
  41e724:	shr    rax,1
  41e727:	add    rax,0x3
  41e72b:	and    rax,0xfffffffffffffffc
  41e72f:	mov    QWORD PTR [rbp-0x10],rax
  41e733:	mov    eax,DWORD PTR [rbp-0x2c]
  41e736:	and    eax,0x80
  41e73b:	mov    DWORD PTR [rbp-0x14],eax
  41e73e:	cmp    DWORD PTR [rbp-0x14],0x0
  41e742:	jne    41e75f <grisu3_diy_fp_encode_double@@Base+0x1152>
  41e744:	cmp    QWORD PTR [rbp-0x8],0x1
  41e749:	je     41e758 <grisu3_diy_fp_encode_double@@Base+0x114b>
  41e74b:	cmp    QWORD PTR [rbp-0x8],0x2
  41e750:	jne    41e762 <grisu3_diy_fp_encode_double@@Base+0x1155>
  41e752:	dec    QWORD PTR [rbp-0x10]
  41e756:	jmp    41e763 <grisu3_diy_fp_encode_double@@Base+0x1156>
  41e758:	sub    QWORD PTR [rbp-0x10],0x2
  41e75d:	jmp    41e763 <grisu3_diy_fp_encode_double@@Base+0x1156>
  41e75f:	nop
  41e760:	jmp    41e763 <grisu3_diy_fp_encode_double@@Base+0x1156>
  41e762:	nop
  41e763:	mov    rax,QWORD PTR [rbp-0x10]
  41e767:	pop    rbp
  41e768:	ret    
  41e769:	endbr64 
  41e76d:	push   rbp
  41e76e:	mov    rbp,rsp
  41e771:	mov    QWORD PTR [rbp-0x18],rdi
  41e775:	mov    rax,QWORD PTR [rbp-0x18]
  41e779:	and    eax,0x3
  41e77c:	mov    QWORD PTR [rbp-0x10],rax
  41e780:	mov    rax,QWORD PTR [rbp-0x18]
  41e784:	shr    rax,0x2
  41e788:	mov    rdx,rax
  41e78b:	mov    rax,rdx
  41e78e:	add    rax,rax
  41e791:	add    rax,rdx
  41e794:	mov    QWORD PTR [rbp-0x8],rax
  41e798:	cmp    QWORD PTR [rbp-0x10],0x2
  41e79d:	je     41e7b0 <grisu3_diy_fp_encode_double@@Base+0x11a3>
  41e79f:	cmp    QWORD PTR [rbp-0x10],0x3
  41e7a4:	jne    41e7b9 <grisu3_diy_fp_encode_double@@Base+0x11ac>
  41e7a6:	mov    rax,QWORD PTR [rbp-0x8]
  41e7aa:	add    rax,0x2
  41e7ae:	jmp    41e7bd <grisu3_diy_fp_encode_double@@Base+0x11b0>
  41e7b0:	mov    rax,QWORD PTR [rbp-0x8]
  41e7b4:	inc    rax
  41e7b7:	jmp    41e7bd <grisu3_diy_fp_encode_double@@Base+0x11b0>
  41e7b9:	mov    rax,QWORD PTR [rbp-0x8]
  41e7bd:	pop    rbp
  41e7be:	ret    
  41e7bf:	endbr64 
  41e7c3:	push   rbp
  41e7c4:	mov    rbp,rsp
  41e7c7:	mov    QWORD PTR [rbp-0x38],rdi
  41e7cb:	mov    QWORD PTR [rbp-0x40],rsi
  41e7cf:	mov    QWORD PTR [rbp-0x48],rdx
  41e7d3:	mov    QWORD PTR [rbp-0x50],rcx
  41e7d7:	mov    DWORD PTR [rbp-0x54],r8d
  41e7db:	lea    rax,[rip+0x51b6]        # 423998 <flatcc_builder_padding_base@@Base+0x15f8>
  41e7e2:	mov    QWORD PTR [rbp-0x18],rax
  41e7e6:	lea    rax,[rip+0x51f3]        # 4239e0 <flatcc_builder_padding_base@@Base+0x1640>
  41e7ed:	mov    QWORD PTR [rbp-0x10],rax
  41e7f1:	mov    rax,QWORD PTR [rbp-0x38]
  41e7f5:	mov    QWORD PTR [rbp-0x8],rax
  41e7f9:	mov    eax,DWORD PTR [rbp-0x54]
  41e7fc:	and    eax,0x80
  41e801:	mov    DWORD PTR [rbp-0x2c],eax
  41e804:	mov    QWORD PTR [rbp-0x20],0x0
  41e80c:	mov    DWORD PTR [rbp-0x30],0x3
  41e813:	cmp    QWORD PTR [rbp-0x50],0x0
  41e818:	jne    41e826 <grisu3_diy_fp_encode_double@@Base+0x1219>
  41e81a:	mov    DWORD PTR [rbp-0x30],0x2
  41e821:	jmp    41ea7e <grisu3_diy_fp_encode_double@@Base+0x1471>
  41e826:	mov    rax,QWORD PTR [rbp-0x50]
  41e82a:	mov    rax,QWORD PTR [rax]
  41e82d:	mov    QWORD PTR [rbp-0x20],rax
  41e831:	and    DWORD PTR [rbp-0x54],0xffffff1f
  41e838:	cmp    DWORD PTR [rbp-0x54],0x0
  41e83c:	je     41e849 <grisu3_diy_fp_encode_double@@Base+0x123c>
  41e83e:	cmp    DWORD PTR [rbp-0x54],0x1
  41e842:	je     41e853 <grisu3_diy_fp_encode_double@@Base+0x1246>
  41e844:	jmp    41ea7e <grisu3_diy_fp_encode_double@@Base+0x1471>
  41e849:	mov    rax,QWORD PTR [rbp-0x18]
  41e84d:	mov    QWORD PTR [rbp-0x28],rax
  41e851:	jmp    41e85c <grisu3_diy_fp_encode_double@@Base+0x124f>
  41e853:	mov    rax,QWORD PTR [rbp-0x10]
  41e857:	mov    QWORD PTR [rbp-0x28],rax
  41e85b:	nop
  41e85c:	mov    DWORD PTR [rbp-0x30],0x0
  41e863:	jmp    41e935 <grisu3_diy_fp_encode_double@@Base+0x1328>
  41e868:	mov    rax,QWORD PTR [rbp-0x40]
  41e86c:	movzx  eax,BYTE PTR [rax]
  41e86f:	shr    al,0x2
  41e872:	movzx  edx,al
  41e875:	mov    rax,QWORD PTR [rbp-0x28]
  41e879:	add    rax,rdx
  41e87c:	movzx  eax,BYTE PTR [rax]
  41e87f:	mov    rdx,QWORD PTR [rbp-0x38]
  41e883:	mov    BYTE PTR [rdx],al
  41e885:	mov    rax,QWORD PTR [rbp-0x40]
  41e889:	movzx  eax,BYTE PTR [rax]
  41e88c:	movzx  eax,al
  41e88f:	shl    eax,0x4
  41e892:	and    eax,0x30
  41e895:	mov    edx,eax
  41e897:	mov    rax,QWORD PTR [rbp-0x40]
  41e89b:	inc    rax
  41e89e:	movzx  eax,BYTE PTR [rax]
  41e8a1:	shr    al,0x4
  41e8a4:	movzx  eax,al
  41e8a7:	or     eax,edx
  41e8a9:	movsxd rdx,eax
  41e8ac:	mov    rax,QWORD PTR [rbp-0x28]
  41e8b0:	add    rax,rdx
  41e8b3:	mov    rdx,QWORD PTR [rbp-0x38]
  41e8b7:	inc    rdx
  41e8ba:	movzx  eax,BYTE PTR [rax]
  41e8bd:	mov    BYTE PTR [rdx],al
  41e8bf:	mov    rax,QWORD PTR [rbp-0x40]
  41e8c3:	inc    rax
  41e8c6:	movzx  eax,BYTE PTR [rax]
  41e8c9:	movzx  eax,al
  41e8cc:	shl    eax,0x2
  41e8cf:	and    eax,0x3c
  41e8d2:	mov    edx,eax
  41e8d4:	mov    rax,QWORD PTR [rbp-0x40]
  41e8d8:	add    rax,0x2
  41e8dc:	movzx  eax,BYTE PTR [rax]
  41e8df:	shr    al,0x6
  41e8e2:	movzx  eax,al
  41e8e5:	or     eax,edx
  41e8e7:	movsxd rdx,eax
  41e8ea:	mov    rax,QWORD PTR [rbp-0x28]
  41e8ee:	add    rax,rdx
  41e8f1:	mov    rdx,QWORD PTR [rbp-0x38]
  41e8f5:	add    rdx,0x2
  41e8f9:	movzx  eax,BYTE PTR [rax]
  41e8fc:	mov    BYTE PTR [rdx],al
  41e8fe:	mov    rax,QWORD PTR [rbp-0x40]
  41e902:	add    rax,0x2
  41e906:	movzx  eax,BYTE PTR [rax]
  41e909:	movzx  eax,al
  41e90c:	and    eax,0x3f
  41e90f:	mov    rdx,rax
  41e912:	mov    rax,QWORD PTR [rbp-0x28]
  41e916:	add    rax,rdx
  41e919:	mov    rdx,QWORD PTR [rbp-0x38]
  41e91d:	add    rdx,0x3
  41e921:	movzx  eax,BYTE PTR [rax]
  41e924:	mov    BYTE PTR [rdx],al
  41e926:	sub    QWORD PTR [rbp-0x20],0x3
  41e92b:	add    QWORD PTR [rbp-0x38],0x4
  41e930:	add    QWORD PTR [rbp-0x40],0x3
  41e935:	cmp    QWORD PTR [rbp-0x20],0x2
  41e93a:	ja     41e868 <grisu3_diy_fp_encode_double@@Base+0x125b>
  41e940:	cmp    QWORD PTR [rbp-0x20],0x1
  41e945:	je     41e9f9 <grisu3_diy_fp_encode_double@@Base+0x13ec>
  41e94b:	cmp    QWORD PTR [rbp-0x20],0x2
  41e950:	jne    41ea69 <grisu3_diy_fp_encode_double@@Base+0x145c>
  41e956:	mov    rax,QWORD PTR [rbp-0x40]
  41e95a:	movzx  eax,BYTE PTR [rax]
  41e95d:	shr    al,0x2
  41e960:	movzx  edx,al
  41e963:	mov    rax,QWORD PTR [rbp-0x28]
  41e967:	add    rax,rdx
  41e96a:	movzx  eax,BYTE PTR [rax]
  41e96d:	mov    rdx,QWORD PTR [rbp-0x38]
  41e971:	mov    BYTE PTR [rdx],al
  41e973:	mov    rax,QWORD PTR [rbp-0x40]
  41e977:	movzx  eax,BYTE PTR [rax]
  41e97a:	movzx  eax,al
  41e97d:	shl    eax,0x4
  41e980:	and    eax,0x30
  41e983:	mov    edx,eax
  41e985:	mov    rax,QWORD PTR [rbp-0x40]
  41e989:	inc    rax
  41e98c:	movzx  eax,BYTE PTR [rax]
  41e98f:	shr    al,0x4
  41e992:	movzx  eax,al
  41e995:	or     eax,edx
  41e997:	movsxd rdx,eax
  41e99a:	mov    rax,QWORD PTR [rbp-0x28]
  41e99e:	add    rax,rdx
  41e9a1:	mov    rdx,QWORD PTR [rbp-0x38]
  41e9a5:	inc    rdx
  41e9a8:	movzx  eax,BYTE PTR [rax]
  41e9ab:	mov    BYTE PTR [rdx],al
  41e9ad:	mov    rax,QWORD PTR [rbp-0x40]
  41e9b1:	inc    rax
  41e9b4:	movzx  eax,BYTE PTR [rax]
  41e9b7:	movzx  eax,al
  41e9ba:	shl    eax,0x2
  41e9bd:	cdqe   
  41e9bf:	and    eax,0x3c
  41e9c2:	mov    rdx,rax
  41e9c5:	mov    rax,QWORD PTR [rbp-0x28]
  41e9c9:	add    rax,rdx
  41e9cc:	mov    rdx,QWORD PTR [rbp-0x38]
  41e9d0:	add    rdx,0x2
  41e9d4:	movzx  eax,BYTE PTR [rax]
  41e9d7:	mov    BYTE PTR [rdx],al
  41e9d9:	add    QWORD PTR [rbp-0x38],0x3
  41e9de:	cmp    DWORD PTR [rbp-0x2c],0x0
  41e9e2:	je     41ea72 <grisu3_diy_fp_encode_double@@Base+0x1465>
  41e9e8:	mov    rax,QWORD PTR [rbp-0x38]
  41e9ec:	lea    rdx,[rax+0x1]
  41e9f0:	mov    QWORD PTR [rbp-0x38],rdx
  41e9f4:	mov    BYTE PTR [rax],0x3d
  41e9f7:	jmp    41ea72 <grisu3_diy_fp_encode_double@@Base+0x1465>
  41e9f9:	mov    rax,QWORD PTR [rbp-0x40]
  41e9fd:	movzx  eax,BYTE PTR [rax]
  41ea00:	shr    al,0x2
  41ea03:	movzx  edx,al
  41ea06:	mov    rax,QWORD PTR [rbp-0x28]
  41ea0a:	add    rax,rdx
  41ea0d:	movzx  eax,BYTE PTR [rax]
  41ea10:	mov    rdx,QWORD PTR [rbp-0x38]
  41ea14:	mov    BYTE PTR [rdx],al
  41ea16:	mov    rax,QWORD PTR [rbp-0x40]
  41ea1a:	movzx  eax,BYTE PTR [rax]
  41ea1d:	movzx  eax,al
  41ea20:	shl    eax,0x4
  41ea23:	cdqe   
  41ea25:	and    eax,0x30
  41ea28:	mov    rdx,rax
  41ea2b:	mov    rax,QWORD PTR [rbp-0x28]
  41ea2f:	add    rax,rdx
  41ea32:	mov    rdx,QWORD PTR [rbp-0x38]
  41ea36:	inc    rdx
  41ea39:	movzx  eax,BYTE PTR [rax]
  41ea3c:	mov    BYTE PTR [rdx],al
  41ea3e:	add    QWORD PTR [rbp-0x38],0x2
  41ea43:	cmp    DWORD PTR [rbp-0x2c],0x0
  41ea47:	je     41ea75 <grisu3_diy_fp_encode_double@@Base+0x1468>
  41ea49:	mov    rax,QWORD PTR [rbp-0x38]
  41ea4d:	lea    rdx,[rax+0x1]
  41ea51:	mov    QWORD PTR [rbp-0x38],rdx
  41ea55:	mov    BYTE PTR [rax],0x3d
  41ea58:	mov    rax,QWORD PTR [rbp-0x38]
  41ea5c:	lea    rdx,[rax+0x1]
  41ea60:	mov    QWORD PTR [rbp-0x38],rdx
  41ea64:	mov    BYTE PTR [rax],0x3d
  41ea67:	jmp    41ea75 <grisu3_diy_fp_encode_double@@Base+0x1468>
  41ea69:	mov    DWORD PTR [rbp-0x2c],0x0
  41ea70:	jmp    41ea76 <grisu3_diy_fp_encode_double@@Base+0x1469>
  41ea72:	nop
  41ea73:	jmp    41ea76 <grisu3_diy_fp_encode_double@@Base+0x1469>
  41ea75:	nop
  41ea76:	mov    QWORD PTR [rbp-0x20],0x0
  41ea7e:	cmp    QWORD PTR [rbp-0x48],0x0
  41ea83:	je     41ea97 <grisu3_diy_fp_encode_double@@Base+0x148a>
  41ea85:	mov    rax,QWORD PTR [rbp-0x38]
  41ea89:	sub    rax,QWORD PTR [rbp-0x8]
  41ea8d:	mov    rdx,rax
  41ea90:	mov    rax,QWORD PTR [rbp-0x48]
  41ea94:	mov    QWORD PTR [rax],rdx
  41ea97:	cmp    QWORD PTR [rbp-0x50],0x0
  41ea9c:	je     41eab3 <grisu3_diy_fp_encode_double@@Base+0x14a6>
  41ea9e:	mov    rax,QWORD PTR [rbp-0x50]
  41eaa2:	mov    rax,QWORD PTR [rax]
  41eaa5:	sub    rax,QWORD PTR [rbp-0x20]
  41eaa9:	mov    rdx,rax
  41eaac:	mov    rax,QWORD PTR [rbp-0x50]
  41eab0:	mov    QWORD PTR [rax],rdx
  41eab3:	mov    eax,DWORD PTR [rbp-0x30]
  41eab6:	pop    rbp
  41eab7:	ret    
  41eab8:	endbr64 
  41eabc:	push   rbp
  41eabd:	mov    rbp,rsp
  41eac0:	add    rsp,0xffffffffffffff80
  41eac4:	mov    QWORD PTR [rbp-0x58],rdi
  41eac8:	mov    QWORD PTR [rbp-0x60],rsi
  41eacc:	mov    QWORD PTR [rbp-0x68],rdx
  41ead0:	mov    QWORD PTR [rbp-0x70],rcx
  41ead4:	mov    DWORD PTR [rbp-0x74],r8d
  41ead8:	mov    rax,QWORD PTR fs:0x28
  41eae1:	mov    QWORD PTR [rbp-0x8],rax
  41eae5:	xor    eax,eax
  41eae7:	mov    DWORD PTR [rbp-0x50],0x0
  41eaee:	mov    rax,QWORD PTR [rbp-0x58]
  41eaf2:	mov    QWORD PTR [rbp-0x18],rax
  41eaf6:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  41eafe:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  41eb06:	lea    rax,[rip+0x5493]        # 423fa0 <flatcc_builder_padding_base@@Base+0x1c00>
  41eb0d:	mov    QWORD PTR [rbp-0x20],rax
  41eb11:	mov    eax,DWORD PTR [rbp-0x74]
  41eb14:	and    eax,0x20
  41eb17:	mov    DWORD PTR [rbp-0x4c],eax
  41eb1a:	cmp    QWORD PTR [rbp-0x70],0x0
  41eb1f:	je     41eb2c <grisu3_diy_fp_encode_double@@Base+0x151f>
  41eb21:	mov    rax,QWORD PTR [rbp-0x70]
  41eb25:	mov    rax,QWORD PTR [rax]
  41eb28:	mov    QWORD PTR [rbp-0x30],rax
  41eb2c:	mov    rax,QWORD PTR [rbp-0x30]
  41eb30:	mov    QWORD PTR [rbp-0x28],rax
  41eb34:	and    DWORD PTR [rbp-0x74],0xffffff1f
  41eb3b:	cmp    DWORD PTR [rbp-0x74],0x0
  41eb3f:	je     41eb49 <grisu3_diy_fp_encode_double@@Base+0x153c>
  41eb41:	cmp    DWORD PTR [rbp-0x74],0x1
  41eb45:	je     41eb65 <grisu3_diy_fp_encode_double@@Base+0x1558>
  41eb47:	jmp    41eb81 <grisu3_diy_fp_encode_double@@Base+0x1574>
  41eb49:	cmp    DWORD PTR [rbp-0x4c],0x0
  41eb4d:	je     41eb58 <grisu3_diy_fp_encode_double@@Base+0x154b>
  41eb4f:	lea    rax,[rip+0x554a]        # 4240a0 <flatcc_builder_padding_base@@Base+0x1d00>
  41eb56:	jmp    41eb5f <grisu3_diy_fp_encode_double@@Base+0x1552>
  41eb58:	lea    rax,[rip+0x5441]        # 423fa0 <flatcc_builder_padding_base@@Base+0x1c00>
  41eb5f:	mov    QWORD PTR [rbp-0x20],rax
  41eb63:	jmp    41eb8d <grisu3_diy_fp_encode_double@@Base+0x1580>
  41eb65:	cmp    DWORD PTR [rbp-0x4c],0x0
  41eb69:	je     41eb74 <grisu3_diy_fp_encode_double@@Base+0x1567>
  41eb6b:	lea    rax,[rip+0x562e]        # 4241a0 <flatcc_builder_padding_base@@Base+0x1e00>
  41eb72:	jmp    41eb7b <grisu3_diy_fp_encode_double@@Base+0x156e>
  41eb74:	lea    rax,[rip+0x5725]        # 4242a0 <flatcc_builder_padding_base@@Base+0x1f00>
  41eb7b:	mov    QWORD PTR [rbp-0x20],rax
  41eb7f:	jmp    41eb8d <grisu3_diy_fp_encode_double@@Base+0x1580>
  41eb81:	mov    DWORD PTR [rbp-0x50],0x3
  41eb88:	jmp    41ed8d <grisu3_diy_fp_encode_double@@Base+0x1780>
  41eb8d:	cmp    QWORD PTR [rbp-0x68],0x0
  41eb92:	je     41ed81 <grisu3_diy_fp_encode_double@@Base+0x1774>
  41eb98:	mov    rax,QWORD PTR [rbp-0x68]
  41eb9c:	mov    rax,QWORD PTR [rax]
  41eb9f:	test   rax,rax
  41eba2:	je     41ed81 <grisu3_diy_fp_encode_double@@Base+0x1774>
  41eba8:	mov    rax,QWORD PTR [rbp-0x68]
  41ebac:	mov    rax,QWORD PTR [rax]
  41ebaf:	mov    QWORD PTR [rbp-0x38],rax
  41ebb3:	jmp    41ed81 <grisu3_diy_fp_encode_double@@Base+0x1774>
  41ebb8:	mov    QWORD PTR [rbp-0x48],0x0
  41ebc0:	jmp    41ecef <grisu3_diy_fp_encode_double@@Base+0x16e2>
  41ebc5:	mov    rax,QWORD PTR [rbp-0x30]
  41ebc9:	cmp    rax,QWORD PTR [rbp-0x48]
  41ebcd:	jne    41ebe4 <grisu3_diy_fp_encode_double@@Base+0x15d7>
  41ebcf:	mov    rax,QWORD PTR [rbp-0x48]
  41ebd3:	mov    QWORD PTR [rbp-0x40],rax
  41ebd7:	mov    rax,QWORD PTR [rbp-0x48]
  41ebdb:	sub    QWORD PTR [rbp-0x30],rax
  41ebdf:	jmp    41eddd <grisu3_diy_fp_encode_double@@Base+0x17d0>
  41ebe4:	mov    rdx,QWORD PTR [rbp-0x60]
  41ebe8:	mov    rax,QWORD PTR [rbp-0x48]
  41ebec:	add    rax,rdx
  41ebef:	movzx  eax,BYTE PTR [rax]
  41ebf2:	movzx  edx,al
  41ebf5:	mov    rax,QWORD PTR [rbp-0x20]
  41ebf9:	add    rax,rdx
  41ebfc:	movzx  eax,BYTE PTR [rax]
  41ebff:	lea    rcx,[rbp-0xc]
  41ec03:	mov    rdx,QWORD PTR [rbp-0x48]
  41ec07:	add    rdx,rcx
  41ec0a:	mov    BYTE PTR [rdx],al
  41ec0c:	lea    rdx,[rbp-0xc]
  41ec10:	mov    rax,QWORD PTR [rbp-0x48]
  41ec14:	add    rax,rdx
  41ec17:	movzx  edx,BYTE PTR [rax]
  41ec1a:	movzx  eax,BYTE PTR [rip+0x577f]        # 4243a0 <flatcc_builder_padding_base@@Base+0x2000>
  41ec21:	cmp    dl,al
  41ec23:	jb     41eceb <grisu3_diy_fp_encode_double@@Base+0x16de>
  41ec29:	lea    rdx,[rbp-0xc]
  41ec2d:	mov    rax,QWORD PTR [rbp-0x48]
  41ec31:	add    rax,rdx
  41ec34:	movzx  edx,BYTE PTR [rax]
  41ec37:	movzx  eax,BYTE PTR [rip+0x5763]        # 4243a1 <flatcc_builder_padding_base@@Base+0x2001>
  41ec3e:	cmp    dl,al
  41ec40:	jne    41ec53 <grisu3_diy_fp_encode_double@@Base+0x1646>
  41ec42:	inc    QWORD PTR [rbp-0x60]
  41ec46:	dec    QWORD PTR [rbp-0x30]
  41ec4a:	dec    QWORD PTR [rbp-0x48]
  41ec4e:	jmp    41eceb <grisu3_diy_fp_encode_double@@Base+0x16de>
  41ec53:	mov    rax,QWORD PTR [rbp-0x48]
  41ec57:	mov    QWORD PTR [rbp-0x40],rax
  41ec5b:	lea    rdx,[rbp-0xc]
  41ec5f:	mov    rax,QWORD PTR [rbp-0x48]
  41ec63:	add    rax,rdx
  41ec66:	movzx  edx,BYTE PTR [rax]
  41ec69:	movzx  eax,BYTE PTR [rip+0x5732]        # 4243a2 <flatcc_builder_padding_base@@Base+0x2002>
  41ec70:	cmp    dl,al
  41ec72:	jne    41ecde <grisu3_diy_fp_encode_double@@Base+0x16d1>
  41ec74:	inc    QWORD PTR [rbp-0x48]
  41ec78:	jmp    41ecca <grisu3_diy_fp_encode_double@@Base+0x16bd>
  41ec7a:	mov    rdx,QWORD PTR [rbp-0x60]
  41ec7e:	mov    rax,QWORD PTR [rbp-0x48]
  41ec82:	add    rax,rdx
  41ec85:	movzx  eax,BYTE PTR [rax]
  41ec88:	movzx  edx,al
  41ec8b:	mov    rax,QWORD PTR [rbp-0x20]
  41ec8f:	add    rax,rdx
  41ec92:	movzx  edx,BYTE PTR [rax]
  41ec95:	movzx  eax,BYTE PTR [rip+0x5706]        # 4243a2 <flatcc_builder_padding_base@@Base+0x2002>
  41ec9c:	cmp    dl,al
  41ec9e:	je     41ecc6 <grisu3_diy_fp_encode_double@@Base+0x16b9>
  41eca0:	mov    rdx,QWORD PTR [rbp-0x60]
  41eca4:	mov    rax,QWORD PTR [rbp-0x48]
  41eca8:	add    rax,rdx
  41ecab:	movzx  eax,BYTE PTR [rax]
  41ecae:	movzx  edx,al
  41ecb1:	mov    rax,QWORD PTR [rbp-0x20]
  41ecb5:	add    rax,rdx
  41ecb8:	movzx  edx,BYTE PTR [rax]
  41ecbb:	movzx  eax,BYTE PTR [rip+0x56df]        # 4243a1 <flatcc_builder_padding_base@@Base+0x2001>
  41ecc2:	cmp    dl,al
  41ecc4:	jne    41ecdd <grisu3_diy_fp_encode_double@@Base+0x16d0>
  41ecc6:	inc    QWORD PTR [rbp-0x48]
  41ecca:	mov    rax,QWORD PTR [rbp-0x48]
  41ecce:	cmp    rax,QWORD PTR [rbp-0x30]
  41ecd2:	jae    41ecde <grisu3_diy_fp_encode_double@@Base+0x16d1>
  41ecd4:	cmp    QWORD PTR [rbp-0x48],0x7
  41ecd9:	jbe    41ec7a <grisu3_diy_fp_encode_double@@Base+0x166d>
  41ecdb:	jmp    41ecde <grisu3_diy_fp_encode_double@@Base+0x16d1>
  41ecdd:	nop
  41ecde:	mov    rax,QWORD PTR [rbp-0x48]
  41ece2:	sub    QWORD PTR [rbp-0x30],rax
  41ece6:	jmp    41eddd <grisu3_diy_fp_encode_double@@Base+0x17d0>
  41eceb:	inc    QWORD PTR [rbp-0x48]
  41ecef:	cmp    QWORD PTR [rbp-0x48],0x3
  41ecf4:	jbe    41ebc5 <grisu3_diy_fp_encode_double@@Base+0x15b8>
  41ecfa:	cmp    QWORD PTR [rbp-0x38],0x2
  41ecff:	jbe    41eec6 <grisu3_diy_fp_encode_double@@Base+0x18b9>
  41ed05:	movzx  eax,BYTE PTR [rbp-0xc]
  41ed09:	movzx  eax,al
  41ed0c:	shl    eax,0x2
  41ed0f:	mov    edx,eax
  41ed11:	movzx  eax,BYTE PTR [rbp-0xb]
  41ed15:	shr    al,0x4
  41ed18:	or     eax,edx
  41ed1a:	mov    edx,eax
  41ed1c:	mov    rax,QWORD PTR [rbp-0x58]
  41ed20:	mov    BYTE PTR [rax],dl
  41ed22:	movzx  eax,BYTE PTR [rbp-0xb]
  41ed26:	movzx  eax,al
  41ed29:	shl    eax,0x4
  41ed2c:	mov    edx,eax
  41ed2e:	movzx  eax,BYTE PTR [rbp-0xa]
  41ed32:	shr    al,0x2
  41ed35:	mov    ecx,edx
  41ed37:	or     ecx,eax
  41ed39:	mov    rax,QWORD PTR [rbp-0x58]
  41ed3d:	lea    rdx,[rax+0x1]
  41ed41:	mov    eax,ecx
  41ed43:	mov    BYTE PTR [rdx],al
  41ed45:	movzx  eax,BYTE PTR [rbp-0xa]
  41ed49:	movzx  eax,al
  41ed4c:	shl    eax,0x6
  41ed4f:	mov    edx,eax
  41ed51:	movzx  eax,BYTE PTR [rbp-0x9]
  41ed55:	mov    ecx,edx
  41ed57:	or     ecx,eax
  41ed59:	mov    rax,QWORD PTR [rbp-0x58]
  41ed5d:	lea    rdx,[rax+0x2]
  41ed61:	mov    eax,ecx
  41ed63:	mov    BYTE PTR [rdx],al
  41ed65:	add    QWORD PTR [rbp-0x58],0x3
  41ed6a:	add    QWORD PTR [rbp-0x60],0x4
  41ed6f:	sub    QWORD PTR [rbp-0x38],0x3
  41ed74:	sub    QWORD PTR [rbp-0x30],0x4
  41ed79:	mov    rax,QWORD PTR [rbp-0x30]
  41ed7d:	mov    QWORD PTR [rbp-0x28],rax
  41ed81:	cmp    QWORD PTR [rbp-0x38],0x0
  41ed86:	jne    41ebb8 <grisu3_diy_fp_encode_double@@Base+0x15ab>
  41ed8c:	nop
  41ed8d:	cmp    QWORD PTR [rbp-0x68],0x0
  41ed92:	je     41eda6 <grisu3_diy_fp_encode_double@@Base+0x1799>
  41ed94:	mov    rax,QWORD PTR [rbp-0x58]
  41ed98:	sub    rax,QWORD PTR [rbp-0x18]
  41ed9c:	mov    rdx,rax
  41ed9f:	mov    rax,QWORD PTR [rbp-0x68]
  41eda3:	mov    QWORD PTR [rax],rdx
  41eda6:	cmp    QWORD PTR [rbp-0x70],0x0
  41edab:	je     41edc2 <grisu3_diy_fp_encode_double@@Base+0x17b5>
  41edad:	mov    rax,QWORD PTR [rbp-0x70]
  41edb1:	mov    rax,QWORD PTR [rax]
  41edb4:	sub    rax,QWORD PTR [rbp-0x28]
  41edb8:	mov    rdx,rax
  41edbb:	mov    rax,QWORD PTR [rbp-0x70]
  41edbf:	mov    QWORD PTR [rax],rdx
  41edc2:	mov    eax,DWORD PTR [rbp-0x50]
  41edc5:	mov    rsi,QWORD PTR [rbp-0x8]
  41edc9:	xor    rsi,QWORD PTR fs:0x28
  41edd2:	je     41eede <grisu3_diy_fp_encode_double@@Base+0x18d1>
  41edd8:	jmp    41eed9 <grisu3_diy_fp_encode_double@@Base+0x18cc>
  41eddd:	cmp    QWORD PTR [rbp-0x40],0x2
  41ede2:	je     41edfb <grisu3_diy_fp_encode_double@@Base+0x17ee>
  41ede4:	cmp    QWORD PTR [rbp-0x40],0x3
  41ede9:	je     41ee3e <grisu3_diy_fp_encode_double@@Base+0x1831>
  41edeb:	cmp    QWORD PTR [rbp-0x40],0x0
  41edf0:	jne    41ee9d <grisu3_diy_fp_encode_double@@Base+0x1890>
  41edf6:	jmp    41eea9 <grisu3_diy_fp_encode_double@@Base+0x189c>
  41edfb:	movzx  eax,BYTE PTR [rbp-0xb]
  41edff:	movzx  eax,al
  41ee02:	shl    eax,0x4
  41ee05:	movzx  eax,al
  41ee08:	test   eax,eax
  41ee0a:	jne    41eeb6 <grisu3_diy_fp_encode_double@@Base+0x18a9>
  41ee10:	cmp    QWORD PTR [rbp-0x38],0x0
  41ee15:	je     41eec9 <grisu3_diy_fp_encode_double@@Base+0x18bc>
  41ee1b:	movzx  eax,BYTE PTR [rbp-0xc]
  41ee1f:	movzx  eax,al
  41ee22:	shl    eax,0x2
  41ee25:	mov    edx,eax
  41ee27:	movzx  eax,BYTE PTR [rbp-0xb]
  41ee2b:	shr    al,0x4
  41ee2e:	or     eax,edx
  41ee30:	mov    edx,eax
  41ee32:	mov    rax,QWORD PTR [rbp-0x58]
  41ee36:	mov    BYTE PTR [rax],dl
  41ee38:	inc    QWORD PTR [rbp-0x58]
  41ee3c:	jmp    41eea9 <grisu3_diy_fp_encode_double@@Base+0x189c>
  41ee3e:	movzx  eax,BYTE PTR [rbp-0xa]
  41ee42:	movzx  eax,al
  41ee45:	shl    eax,0x6
  41ee48:	movzx  eax,al
  41ee4b:	test   eax,eax
  41ee4d:	jne    41eeb9 <grisu3_diy_fp_encode_double@@Base+0x18ac>
  41ee4f:	cmp    QWORD PTR [rbp-0x38],0x1
  41ee54:	jbe    41eecc <grisu3_diy_fp_encode_double@@Base+0x18bf>
  41ee56:	movzx  eax,BYTE PTR [rbp-0xc]
  41ee5a:	movzx  eax,al
  41ee5d:	shl    eax,0x2
  41ee60:	mov    edx,eax
  41ee62:	movzx  eax,BYTE PTR [rbp-0xb]
  41ee66:	shr    al,0x4
  41ee69:	or     eax,edx
  41ee6b:	mov    edx,eax
  41ee6d:	mov    rax,QWORD PTR [rbp-0x58]
  41ee71:	mov    BYTE PTR [rax],dl
  41ee73:	movzx  eax,BYTE PTR [rbp-0xb]
  41ee77:	movzx  eax,al
  41ee7a:	shl    eax,0x4
  41ee7d:	mov    edx,eax
  41ee7f:	movzx  eax,BYTE PTR [rbp-0xa]
  41ee83:	shr    al,0x2
  41ee86:	mov    ecx,edx
  41ee88:	or     ecx,eax
  41ee8a:	mov    rax,QWORD PTR [rbp-0x58]
  41ee8e:	lea    rdx,[rax+0x1]
  41ee92:	mov    eax,ecx
  41ee94:	mov    BYTE PTR [rdx],al
  41ee96:	add    QWORD PTR [rbp-0x58],0x2
  41ee9b:	jmp    41eea9 <grisu3_diy_fp_encode_double@@Base+0x189c>
  41ee9d:	mov    DWORD PTR [rbp-0x50],0x4
  41eea4:	jmp    41ed8d <grisu3_diy_fp_encode_double@@Base+0x1780>
  41eea9:	mov    rax,QWORD PTR [rbp-0x30]
  41eead:	mov    QWORD PTR [rbp-0x28],rax
  41eeb1:	jmp    41ed8d <grisu3_diy_fp_encode_double@@Base+0x1780>
  41eeb6:	nop
  41eeb7:	jmp    41eeba <grisu3_diy_fp_encode_double@@Base+0x18ad>
  41eeb9:	nop
  41eeba:	mov    DWORD PTR [rbp-0x50],0x5
  41eec1:	jmp    41ed8d <grisu3_diy_fp_encode_double@@Base+0x1780>
  41eec6:	nop
  41eec7:	jmp    41eecd <grisu3_diy_fp_encode_double@@Base+0x18c0>
  41eec9:	nop
  41eeca:	jmp    41eecd <grisu3_diy_fp_encode_double@@Base+0x18c0>
  41eecc:	nop
  41eecd:	mov    DWORD PTR [rbp-0x50],0x1
  41eed4:	jmp    41ed8d <grisu3_diy_fp_encode_double@@Base+0x1780>
  41eed9:	call   403200 <__stack_chk_fail@plt>
  41eede:	leave  
  41eedf:	ret    

000000000041eee0 <flatcc_json_parser_error_string@@Base>:
  41eee0:	endbr64 
  41eee4:	push   rbp
  41eee5:	mov    rbp,rsp
  41eee8:	mov    DWORD PTR [rbp-0x4],edi
  41eeeb:	cmp    DWORD PTR [rbp-0x4],0x22
  41eeef:	ja     41f094 <flatcc_json_parser_error_string@@Base+0x1b4>
  41eef5:	mov    eax,DWORD PTR [rbp-0x4]
  41eef8:	lea    rdx,[rax*4+0x0]
  41ef00:	lea    rax,[rip+0x4da9]        # 423cb0 <flatcc_builder_padding_base@@Base+0x1910>
  41ef07:	mov    eax,DWORD PTR [rdx+rax*1]
  41ef0a:	movsxd rdx,eax
  41ef0d:	lea    rax,[rip+0x4d9c]        # 423cb0 <flatcc_builder_padding_base@@Base+0x1910>
  41ef14:	add    rax,rdx
  41ef17:	notrack jmp rax
  41ef1a:	lea    rax,[rip+0x49ef]        # 423910 <flatcc_builder_padding_base@@Base+0x1570>
  41ef21:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef26:	lea    rax,[rip+0x4af4]        # 423a21 <flatcc_builder_padding_base@@Base+0x1681>
  41ef2d:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef32:	lea    rax,[rip+0x4aec]        # 423a25 <flatcc_builder_padding_base@@Base+0x1685>
  41ef39:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef3e:	lea    rax,[rip+0x4aed]        # 423a32 <flatcc_builder_padding_base@@Base+0x1692>
  41ef45:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef4a:	lea    rax,[rip+0x4af0]        # 423a41 <flatcc_builder_padding_base@@Base+0x16a1>
  41ef51:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef56:	lea    rax,[rip+0x4af3]        # 423a50 <flatcc_builder_padding_base@@Base+0x16b0>
  41ef5d:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef62:	lea    rax,[rip+0x4afc]        # 423a65 <flatcc_builder_padding_base@@Base+0x16c5>
  41ef69:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef6e:	lea    rax,[rip+0x4b00]        # 423a75 <flatcc_builder_padding_base@@Base+0x16d5>
  41ef75:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef7a:	lea    rax,[rip+0x4afd]        # 423a7e <flatcc_builder_padding_base@@Base+0x16de>
  41ef81:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef86:	lea    rax,[rip+0x4afb]        # 423a88 <flatcc_builder_padding_base@@Base+0x16e8>
  41ef8d:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef92:	lea    rax,[rip+0x4b00]        # 423a99 <flatcc_builder_padding_base@@Base+0x16f9>
  41ef99:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41ef9e:	lea    rax,[rip+0x4b06]        # 423aab <flatcc_builder_padding_base@@Base+0x170b>
  41efa5:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41efaa:	lea    rax,[rip+0x4b09]        # 423aba <flatcc_builder_padding_base@@Base+0x171a>
  41efb1:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41efb6:	lea    rax,[rip+0x4b0e]        # 423acb <flatcc_builder_padding_base@@Base+0x172b>
  41efbd:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41efc2:	lea    rax,[rip+0x4b11]        # 423ada <flatcc_builder_padding_base@@Base+0x173a>
  41efc9:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41efce:	lea    rax,[rip+0x4b1e]        # 423af3 <flatcc_builder_padding_base@@Base+0x1753>
  41efd5:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41efda:	lea    rax,[rip+0x4b25]        # 423b06 <flatcc_builder_padding_base@@Base+0x1766>
  41efe1:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41efe6:	lea    rax,[rip+0x4b29]        # 423b16 <flatcc_builder_padding_base@@Base+0x1776>
  41efed:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41eff2:	lea    rax,[rip+0x4b2f]        # 423b28 <flatcc_builder_padding_base@@Base+0x1788>
  41eff9:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41effe:	lea    rax,[rip+0x4b32]        # 423b37 <flatcc_builder_padding_base@@Base+0x1797>
  41f005:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f00a:	lea    rax,[rip+0x4b33]        # 423b44 <flatcc_builder_padding_base@@Base+0x17a4>
  41f011:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f016:	lea    rax,[rip+0x4b3b]        # 423b58 <flatcc_builder_padding_base@@Base+0x17b8>
  41f01d:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f01f:	lea    rax,[rip+0x4b42]        # 423b68 <flatcc_builder_padding_base@@Base+0x17c8>
  41f026:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f028:	lea    rax,[rip+0x4b49]        # 423b78 <flatcc_builder_padding_base@@Base+0x17d8>
  41f02f:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f031:	lea    rax,[rip+0x4b64]        # 423b9c <flatcc_builder_padding_base@@Base+0x17fc>
  41f038:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f03a:	lea    rax,[rip+0x4b6f]        # 423bb0 <flatcc_builder_padding_base@@Base+0x1810>
  41f041:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f043:	lea    rax,[rip+0x4b86]        # 423bd0 <flatcc_builder_padding_base@@Base+0x1830>
  41f04a:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f04c:	lea    rax,[rip+0x4b9c]        # 423bef <flatcc_builder_padding_base@@Base+0x184f>
  41f053:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f055:	lea    rax,[rip+0x4bae]        # 423c0a <flatcc_builder_padding_base@@Base+0x186a>
  41f05c:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f05e:	lea    rax,[rip+0x4bbf]        # 423c24 <flatcc_builder_padding_base@@Base+0x1884>
  41f065:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f067:	lea    rax,[rip+0x4bcd]        # 423c3b <flatcc_builder_padding_base@@Base+0x189b>
  41f06e:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f070:	lea    rax,[rip+0x4be1]        # 423c58 <flatcc_builder_padding_base@@Base+0x18b8>
  41f077:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f079:	lea    rax,[rip+0x4bef]        # 423c6f <flatcc_builder_padding_base@@Base+0x18cf>
  41f080:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f082:	lea    rax,[rip+0x4c00]        # 423c89 <flatcc_builder_padding_base@@Base+0x18e9>
  41f089:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f08b:	lea    rax,[rip+0x4c05]        # 423c97 <flatcc_builder_padding_base@@Base+0x18f7>
  41f092:	jmp    41f09b <flatcc_json_parser_error_string@@Base+0x1bb>
  41f094:	lea    rax,[rip+0x4c0a]        # 423ca5 <flatcc_builder_padding_base@@Base+0x1905>
  41f09b:	pop    rbp
  41f09c:	ret    

000000000041f09d <flatcc_json_parser_set_error@@Base>:
  41f09d:	endbr64 
  41f0a1:	push   rbp
  41f0a2:	mov    rbp,rsp
  41f0a5:	mov    QWORD PTR [rbp-0x8],rdi
  41f0a9:	mov    QWORD PTR [rbp-0x10],rsi
  41f0ad:	mov    QWORD PTR [rbp-0x18],rdx
  41f0b1:	mov    DWORD PTR [rbp-0x1c],ecx
  41f0b4:	mov    rax,QWORD PTR [rbp-0x8]
  41f0b8:	mov    eax,DWORD PTR [rax+0x20]
  41f0bb:	test   eax,eax
  41f0bd:	jne    41f0f2 <flatcc_json_parser_set_error@@Base+0x55>
  41f0bf:	mov    rax,QWORD PTR [rbp-0x8]
  41f0c3:	mov    edx,DWORD PTR [rbp-0x1c]
  41f0c6:	mov    DWORD PTR [rax+0x20],edx
  41f0c9:	mov    rax,QWORD PTR [rbp-0x8]
  41f0cd:	mov    rax,QWORD PTR [rax+0x8]
  41f0d1:	mov    rdx,QWORD PTR [rbp-0x10]
  41f0d5:	sub    rdx,rax
  41f0d8:	mov    rax,rdx
  41f0db:	inc    eax
  41f0dd:	mov    edx,eax
  41f0df:	mov    rax,QWORD PTR [rbp-0x8]
  41f0e3:	mov    DWORD PTR [rax+0x1c],edx
  41f0e6:	mov    rax,QWORD PTR [rbp-0x8]
  41f0ea:	mov    rdx,QWORD PTR [rbp-0x10]
  41f0ee:	mov    QWORD PTR [rax+0x38],rdx
  41f0f2:	mov    rax,QWORD PTR [rbp-0x18]
  41f0f6:	pop    rbp
  41f0f7:	ret    

000000000041f0f8 <flatcc_json_parser_string_part@@Base>:
  41f0f8:	endbr64 
  41f0fc:	push   rbp
  41f0fd:	mov    rbp,rsp
  41f100:	sub    rsp,0x20
  41f104:	mov    QWORD PTR [rbp-0x8],rdi
  41f108:	mov    QWORD PTR [rbp-0x10],rsi
  41f10c:	mov    QWORD PTR [rbp-0x18],rdx
  41f110:	jmp    41f116 <flatcc_json_parser_string_part@@Base+0x1e>
  41f112:	inc    QWORD PTR [rbp-0x10]
  41f116:	mov    rax,QWORD PTR [rbp-0x10]
  41f11a:	cmp    rax,QWORD PTR [rbp-0x18]
  41f11e:	je     41f141 <flatcc_json_parser_string_part@@Base+0x49>
  41f120:	mov    rax,QWORD PTR [rbp-0x10]
  41f124:	movzx  eax,BYTE PTR [rax]
  41f127:	cmp    al,0x22
  41f129:	je     41f141 <flatcc_json_parser_string_part@@Base+0x49>
  41f12b:	mov    rax,QWORD PTR [rbp-0x10]
  41f12f:	movzx  eax,BYTE PTR [rax]
  41f132:	cmp    al,0x1f
  41f134:	jbe    41f141 <flatcc_json_parser_string_part@@Base+0x49>
  41f136:	mov    rax,QWORD PTR [rbp-0x10]
  41f13a:	movzx  eax,BYTE PTR [rax]
  41f13d:	cmp    al,0x5c
  41f13f:	jne    41f112 <flatcc_json_parser_string_part@@Base+0x1a>
  41f141:	mov    rax,QWORD PTR [rbp-0x10]
  41f145:	cmp    rax,QWORD PTR [rbp-0x18]
  41f149:	jne    41f166 <flatcc_json_parser_string_part@@Base+0x6e>
  41f14b:	mov    rdx,QWORD PTR [rbp-0x18]
  41f14f:	mov    rsi,QWORD PTR [rbp-0x10]
  41f153:	mov    rax,QWORD PTR [rbp-0x8]
  41f157:	mov    ecx,0x14
  41f15c:	mov    rdi,rax
  41f15f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f164:	jmp    41f1a1 <flatcc_json_parser_string_part@@Base+0xa9>
  41f166:	mov    rax,QWORD PTR [rbp-0x10]
  41f16a:	movzx  eax,BYTE PTR [rax]
  41f16d:	cmp    al,0x22
  41f16f:	jne    41f177 <flatcc_json_parser_string_part@@Base+0x7f>
  41f171:	mov    rax,QWORD PTR [rbp-0x10]
  41f175:	jmp    41f1a1 <flatcc_json_parser_string_part@@Base+0xa9>
  41f177:	mov    rax,QWORD PTR [rbp-0x10]
  41f17b:	movzx  eax,BYTE PTR [rax]
  41f17e:	cmp    al,0x1f
  41f180:	jg     41f19d <flatcc_json_parser_string_part@@Base+0xa5>
  41f182:	mov    rdx,QWORD PTR [rbp-0x18]
  41f186:	mov    rsi,QWORD PTR [rbp-0x10]
  41f18a:	mov    rax,QWORD PTR [rbp-0x8]
  41f18e:	mov    ecx,0x11
  41f193:	mov    rdi,rax
  41f196:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f19b:	jmp    41f1a1 <flatcc_json_parser_string_part@@Base+0xa9>
  41f19d:	mov    rax,QWORD PTR [rbp-0x10]
  41f1a1:	leave  
  41f1a2:	ret    

000000000041f1a3 <flatcc_json_parser_space_ext@@Base>:
  41f1a3:	endbr64 
  41f1a7:	push   rbp
  41f1a8:	mov    rbp,rsp
  41f1ab:	sub    rsp,0x20
  41f1af:	mov    QWORD PTR [rbp-0x8],rdi
  41f1b3:	mov    QWORD PTR [rbp-0x10],rsi
  41f1b7:	mov    QWORD PTR [rbp-0x18],rdx
  41f1bb:	nop
  41f1bc:	mov    rax,QWORD PTR [rbp-0x18]
  41f1c0:	sub    rax,QWORD PTR [rbp-0x10]
  41f1c4:	cmp    rax,0xf
  41f1c8:	jle    41f21a <flatcc_json_parser_space_ext@@Base+0x77>
  41f1ca:	mov    rax,QWORD PTR [rbp-0x10]
  41f1ce:	movzx  eax,BYTE PTR [rax]
  41f1d1:	cmp    al,0x20
  41f1d3:	jle    41f1de <flatcc_json_parser_space_ext@@Base+0x3b>
  41f1d5:	mov    rax,QWORD PTR [rbp-0x10]
  41f1d9:	jmp    41f2f2 <flatcc_json_parser_space_ext@@Base+0x14f>
  41f1de:	mov    rax,QWORD PTR [rbp-0x10]
  41f1e2:	movzx  eax,WORD PTR [rax]
  41f1e5:	cmp    ax,0x2020
  41f1e9:	jne    41f1f0 <flatcc_json_parser_space_ext@@Base+0x4d>
  41f1eb:	add    QWORD PTR [rbp-0x10],0x2
  41f1f0:	mov    rax,QWORD PTR [rbp-0x10]
  41f1f4:	movzx  eax,BYTE PTR [rax]
  41f1f7:	cmp    al,0x20
  41f1f9:	jne    41f1ff <flatcc_json_parser_space_ext@@Base+0x5c>
  41f1fb:	inc    QWORD PTR [rbp-0x10]
  41f1ff:	mov    rax,QWORD PTR [rbp-0x10]
  41f203:	movzx  eax,BYTE PTR [rax]
  41f206:	cmp    al,0x20
  41f208:	jle    41f213 <flatcc_json_parser_space_ext@@Base+0x70>
  41f20a:	mov    rax,QWORD PTR [rbp-0x10]
  41f20e:	jmp    41f2f2 <flatcc_json_parser_space_ext@@Base+0x14f>
  41f213:	nop
  41f214:	jmp    41f21a <flatcc_json_parser_space_ext@@Base+0x77>
  41f216:	inc    QWORD PTR [rbp-0x10]
  41f21a:	mov    rax,QWORD PTR [rbp-0x10]
  41f21e:	cmp    rax,QWORD PTR [rbp-0x18]
  41f222:	je     41f2d5 <flatcc_json_parser_space_ext@@Base+0x132>
  41f228:	mov    rax,QWORD PTR [rbp-0x10]
  41f22c:	movzx  eax,BYTE PTR [rax]
  41f22f:	cmp    al,0x20
  41f231:	je     41f216 <flatcc_json_parser_space_ext@@Base+0x73>
  41f233:	jmp    41f2d5 <flatcc_json_parser_space_ext@@Base+0x132>
  41f238:	mov    rax,QWORD PTR [rbp-0x10]
  41f23c:	movzx  eax,BYTE PTR [rax]
  41f23f:	movsx  eax,al
  41f242:	cmp    eax,0xa
  41f245:	je     41f291 <flatcc_json_parser_space_ext@@Base+0xee>
  41f247:	cmp    eax,0xa
  41f24a:	jg     41f253 <flatcc_json_parser_space_ext@@Base+0xb0>
  41f24c:	cmp    eax,0x9
  41f24f:	je     41f2b4 <flatcc_json_parser_space_ext@@Base+0x111>
  41f251:	jmp    41f2ba <flatcc_json_parser_space_ext@@Base+0x117>
  41f253:	cmp    eax,0xd
  41f256:	je     41f263 <flatcc_json_parser_space_ext@@Base+0xc0>
  41f258:	cmp    eax,0x20
  41f25b:	je     41f1bb <flatcc_json_parser_space_ext@@Base+0x18>
  41f261:	jmp    41f2ba <flatcc_json_parser_space_ext@@Base+0x117>
  41f263:	mov    rax,QWORD PTR [rbp-0x18]
  41f267:	sub    rax,QWORD PTR [rbp-0x10]
  41f26b:	cmp    rax,0x1
  41f26f:	jle    41f286 <flatcc_json_parser_space_ext@@Base+0xe3>
  41f271:	mov    rax,QWORD PTR [rbp-0x10]
  41f275:	inc    rax
  41f278:	movzx  eax,BYTE PTR [rax]
  41f27b:	cmp    al,0xa
  41f27d:	jne    41f286 <flatcc_json_parser_space_ext@@Base+0xe3>
  41f27f:	mov    eax,0x1
  41f284:	jmp    41f28b <flatcc_json_parser_space_ext@@Base+0xe8>
  41f286:	mov    eax,0x0
  41f28b:	cdqe   
  41f28d:	add    QWORD PTR [rbp-0x10],rax
  41f291:	mov    rax,QWORD PTR [rbp-0x8]
  41f295:	mov    eax,DWORD PTR [rax+0x18]
  41f298:	lea    edx,[rax+0x1]
  41f29b:	mov    rax,QWORD PTR [rbp-0x8]
  41f29f:	mov    DWORD PTR [rax+0x18],edx
  41f2a2:	inc    QWORD PTR [rbp-0x10]
  41f2a6:	mov    rax,QWORD PTR [rbp-0x8]
  41f2aa:	mov    rdx,QWORD PTR [rbp-0x10]
  41f2ae:	mov    QWORD PTR [rax+0x8],rdx
  41f2b2:	jmp    41f2d5 <flatcc_json_parser_space_ext@@Base+0x132>
  41f2b4:	inc    QWORD PTR [rbp-0x10]
  41f2b8:	jmp    41f2d5 <flatcc_json_parser_space_ext@@Base+0x132>
  41f2ba:	mov    rdx,QWORD PTR [rbp-0x18]
  41f2be:	mov    rsi,QWORD PTR [rbp-0x10]
  41f2c2:	mov    rax,QWORD PTR [rbp-0x8]
  41f2c6:	mov    ecx,0x5
  41f2cb:	mov    rdi,rax
  41f2ce:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f2d3:	jmp    41f2f2 <flatcc_json_parser_space_ext@@Base+0x14f>
  41f2d5:	mov    rax,QWORD PTR [rbp-0x10]
  41f2d9:	cmp    rax,QWORD PTR [rbp-0x18]
  41f2dd:	je     41f2ee <flatcc_json_parser_space_ext@@Base+0x14b>
  41f2df:	mov    rax,QWORD PTR [rbp-0x10]
  41f2e3:	movzx  eax,BYTE PTR [rax]
  41f2e6:	cmp    al,0x20
  41f2e8:	jle    41f238 <flatcc_json_parser_space_ext@@Base+0x95>
  41f2ee:	mov    rax,QWORD PTR [rbp-0x10]
  41f2f2:	leave  
  41f2f3:	ret    

000000000041f2f4 <flatcc_json_parser_string_escape@@Base>:
  41f2f4:	endbr64 
  41f2f8:	push   rbp
  41f2f9:	mov    rbp,rsp
  41f2fc:	sub    rsp,0x30
  41f300:	mov    QWORD PTR [rbp-0x18],rdi
  41f304:	mov    QWORD PTR [rbp-0x20],rsi
  41f308:	mov    QWORD PTR [rbp-0x28],rdx
  41f30c:	mov    QWORD PTR [rbp-0x30],rcx
  41f310:	mov    rax,QWORD PTR [rbp-0x28]
  41f314:	sub    rax,QWORD PTR [rbp-0x20]
  41f318:	cmp    rax,0x1
  41f31c:	jle    41f329 <flatcc_json_parser_string_escape@@Base+0x35>
  41f31e:	mov    rax,QWORD PTR [rbp-0x20]
  41f322:	movzx  eax,BYTE PTR [rax]
  41f325:	cmp    al,0x5c
  41f327:	je     41f34e <flatcc_json_parser_string_escape@@Base+0x5a>
  41f329:	mov    rax,QWORD PTR [rbp-0x30]
  41f32d:	mov    BYTE PTR [rax],0x0
  41f330:	mov    rdx,QWORD PTR [rbp-0x28]
  41f334:	mov    rsi,QWORD PTR [rbp-0x20]
  41f338:	mov    rax,QWORD PTR [rbp-0x18]
  41f33c:	mov    ecx,0x12
  41f341:	mov    rdi,rax
  41f344:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f349:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f34e:	mov    rax,QWORD PTR [rbp-0x20]
  41f352:	inc    rax
  41f355:	movzx  eax,BYTE PTR [rax]
  41f358:	movsx  eax,al
  41f35b:	sub    eax,0x22
  41f35e:	cmp    eax,0x56
  41f361:	ja     41f8a1 <flatcc_json_parser_string_escape@@Base+0x5ad>
  41f367:	mov    eax,eax
  41f369:	lea    rdx,[rax*4+0x0]
  41f371:	lea    rax,[rip+0x49c4]        # 423d3c <flatcc_builder_padding_base@@Base+0x199c>
  41f378:	mov    eax,DWORD PTR [rdx+rax*1]
  41f37b:	movsxd rdx,eax
  41f37e:	lea    rax,[rip+0x49b7]        # 423d3c <flatcc_builder_padding_base@@Base+0x199c>
  41f385:	add    rax,rdx
  41f388:	notrack jmp rax
  41f38b:	mov    BYTE PTR [rbp-0x6],0x0
  41f38f:	mov    rax,QWORD PTR [rbp-0x30]
  41f393:	mov    BYTE PTR [rax],0x1
  41f396:	mov    rax,QWORD PTR [rbp-0x28]
  41f39a:	sub    rax,QWORD PTR [rbp-0x20]
  41f39e:	cmp    rax,0x3
  41f3a2:	jg     41f3c9 <flatcc_json_parser_string_escape@@Base+0xd5>
  41f3a4:	mov    rax,QWORD PTR [rbp-0x30]
  41f3a8:	mov    BYTE PTR [rax],0x0
  41f3ab:	mov    rdx,QWORD PTR [rbp-0x28]
  41f3af:	mov    rsi,QWORD PTR [rbp-0x20]
  41f3b3:	mov    rax,QWORD PTR [rbp-0x18]
  41f3b7:	mov    ecx,0x12
  41f3bc:	mov    rdi,rax
  41f3bf:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f3c4:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f3c9:	mov    rax,QWORD PTR [rbp-0x20]
  41f3cd:	movzx  eax,BYTE PTR [rax+0x2]
  41f3d1:	mov    BYTE PTR [rbp-0x5],al
  41f3d4:	cmp    BYTE PTR [rbp-0x5],0x2f
  41f3d8:	jle    41f3ef <flatcc_json_parser_string_escape@@Base+0xfb>
  41f3da:	cmp    BYTE PTR [rbp-0x5],0x39
  41f3de:	jg     41f3ef <flatcc_json_parser_string_escape@@Base+0xfb>
  41f3e0:	movsx  eax,BYTE PTR [rbp-0x5]
  41f3e4:	sub    eax,0x30
  41f3e7:	shl    eax,0x4
  41f3ea:	or     BYTE PTR [rbp-0x6],al
  41f3ed:	jmp    41f433 <flatcc_json_parser_string_escape@@Base+0x13f>
  41f3ef:	or     BYTE PTR [rbp-0x5],0x20
  41f3f3:	cmp    BYTE PTR [rbp-0x5],0x60
  41f3f7:	jle    41f40e <flatcc_json_parser_string_escape@@Base+0x11a>
  41f3f9:	cmp    BYTE PTR [rbp-0x5],0x66
  41f3fd:	jg     41f40e <flatcc_json_parser_string_escape@@Base+0x11a>
  41f3ff:	movsx  eax,BYTE PTR [rbp-0x5]
  41f403:	sub    eax,0x57
  41f406:	shl    eax,0x4
  41f409:	or     BYTE PTR [rbp-0x6],al
  41f40c:	jmp    41f433 <flatcc_json_parser_string_escape@@Base+0x13f>
  41f40e:	mov    rax,QWORD PTR [rbp-0x30]
  41f412:	mov    BYTE PTR [rax],0x0
  41f415:	mov    rdx,QWORD PTR [rbp-0x28]
  41f419:	mov    rsi,QWORD PTR [rbp-0x20]
  41f41d:	mov    rax,QWORD PTR [rbp-0x18]
  41f421:	mov    ecx,0x12
  41f426:	mov    rdi,rax
  41f429:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f42e:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f433:	mov    rax,QWORD PTR [rbp-0x20]
  41f437:	movzx  eax,BYTE PTR [rax+0x3]
  41f43b:	mov    BYTE PTR [rbp-0x5],al
  41f43e:	cmp    BYTE PTR [rbp-0x5],0x2f
  41f442:	jle    41f456 <flatcc_json_parser_string_escape@@Base+0x162>
  41f444:	cmp    BYTE PTR [rbp-0x5],0x39
  41f448:	jg     41f456 <flatcc_json_parser_string_escape@@Base+0x162>
  41f44a:	movzx  eax,BYTE PTR [rbp-0x5]
  41f44e:	sub    eax,0x30
  41f451:	or     BYTE PTR [rbp-0x6],al
  41f454:	jmp    41f497 <flatcc_json_parser_string_escape@@Base+0x1a3>
  41f456:	or     BYTE PTR [rbp-0x5],0x20
  41f45a:	cmp    BYTE PTR [rbp-0x5],0x60
  41f45e:	jle    41f472 <flatcc_json_parser_string_escape@@Base+0x17e>
  41f460:	cmp    BYTE PTR [rbp-0x5],0x66
  41f464:	jg     41f472 <flatcc_json_parser_string_escape@@Base+0x17e>
  41f466:	movzx  eax,BYTE PTR [rbp-0x5]
  41f46a:	sub    eax,0x57
  41f46d:	or     BYTE PTR [rbp-0x6],al
  41f470:	jmp    41f497 <flatcc_json_parser_string_escape@@Base+0x1a3>
  41f472:	mov    rax,QWORD PTR [rbp-0x30]
  41f476:	mov    BYTE PTR [rax],0x0
  41f479:	mov    rdx,QWORD PTR [rbp-0x28]
  41f47d:	mov    rsi,QWORD PTR [rbp-0x20]
  41f481:	mov    rax,QWORD PTR [rbp-0x18]
  41f485:	mov    ecx,0x12
  41f48a:	mov    rdi,rax
  41f48d:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f492:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f497:	mov    rax,QWORD PTR [rbp-0x30]
  41f49b:	lea    rdx,[rax+0x1]
  41f49f:	movzx  eax,BYTE PTR [rbp-0x6]
  41f4a3:	mov    BYTE PTR [rdx],al
  41f4a5:	mov    rax,QWORD PTR [rbp-0x20]
  41f4a9:	add    rax,0x4
  41f4ad:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f4b2:	mov    rax,QWORD PTR [rbp-0x28]
  41f4b6:	sub    rax,QWORD PTR [rbp-0x20]
  41f4ba:	cmp    rax,0x5
  41f4be:	jg     41f4e5 <flatcc_json_parser_string_escape@@Base+0x1f1>
  41f4c0:	mov    rax,QWORD PTR [rbp-0x30]
  41f4c4:	mov    BYTE PTR [rax],0x0
  41f4c7:	mov    rdx,QWORD PTR [rbp-0x28]
  41f4cb:	mov    rsi,QWORD PTR [rbp-0x20]
  41f4cf:	mov    rax,QWORD PTR [rbp-0x18]
  41f4d3:	mov    ecx,0x12
  41f4d8:	mov    rdi,rax
  41f4db:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f4e0:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f4e5:	mov    WORD PTR [rbp-0x4],0x0
  41f4eb:	mov    rax,QWORD PTR [rbp-0x20]
  41f4ef:	movzx  eax,BYTE PTR [rax+0x2]
  41f4f3:	mov    BYTE PTR [rbp-0x5],al
  41f4f6:	cmp    BYTE PTR [rbp-0x5],0x2f
  41f4fa:	jle    41f51b <flatcc_json_parser_string_escape@@Base+0x227>
  41f4fc:	cmp    BYTE PTR [rbp-0x5],0x39
  41f500:	jg     41f51b <flatcc_json_parser_string_escape@@Base+0x227>
  41f502:	movsx  ax,BYTE PTR [rbp-0x5]
  41f507:	sub    eax,0x30
  41f50a:	mov    WORD PTR [rbp-0x2],ax
  41f50e:	movzx  eax,WORD PTR [rbp-0x2]
  41f512:	shl    eax,0xc
  41f515:	mov    WORD PTR [rbp-0x4],ax
  41f519:	jmp    41f571 <flatcc_json_parser_string_escape@@Base+0x27d>
  41f51b:	or     BYTE PTR [rbp-0x5],0x20
  41f51f:	cmp    BYTE PTR [rbp-0x5],0x60
  41f523:	jle    41f54c <flatcc_json_parser_string_escape@@Base+0x258>
  41f525:	cmp    BYTE PTR [rbp-0x5],0x66
  41f529:	jg     41f54c <flatcc_json_parser_string_escape@@Base+0x258>
  41f52b:	movsx  ax,BYTE PTR [rbp-0x5]
  41f530:	sub    eax,0x57
  41f533:	mov    WORD PTR [rbp-0x2],ax
  41f537:	movzx  eax,WORD PTR [rbp-0x2]
  41f53b:	shl    eax,0xc
  41f53e:	mov    edx,eax
  41f540:	movzx  eax,WORD PTR [rbp-0x4]
  41f544:	or     eax,edx
  41f546:	mov    WORD PTR [rbp-0x4],ax
  41f54a:	jmp    41f571 <flatcc_json_parser_string_escape@@Base+0x27d>
  41f54c:	mov    rax,QWORD PTR [rbp-0x30]
  41f550:	mov    BYTE PTR [rax],0x0
  41f553:	mov    rdx,QWORD PTR [rbp-0x28]
  41f557:	mov    rsi,QWORD PTR [rbp-0x20]
  41f55b:	mov    rax,QWORD PTR [rbp-0x18]
  41f55f:	mov    ecx,0x12
  41f564:	mov    rdi,rax
  41f567:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f56c:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f571:	mov    rax,QWORD PTR [rbp-0x20]
  41f575:	movzx  eax,BYTE PTR [rax+0x3]
  41f579:	mov    BYTE PTR [rbp-0x5],al
  41f57c:	cmp    BYTE PTR [rbp-0x5],0x2f
  41f580:	jle    41f5a9 <flatcc_json_parser_string_escape@@Base+0x2b5>
  41f582:	cmp    BYTE PTR [rbp-0x5],0x39
  41f586:	jg     41f5a9 <flatcc_json_parser_string_escape@@Base+0x2b5>
  41f588:	movsx  ax,BYTE PTR [rbp-0x5]
  41f58d:	sub    eax,0x30
  41f590:	mov    WORD PTR [rbp-0x2],ax
  41f594:	movzx  eax,WORD PTR [rbp-0x2]
  41f598:	shl    eax,0x8
  41f59b:	mov    edx,eax
  41f59d:	movzx  eax,WORD PTR [rbp-0x4]
  41f5a1:	or     eax,edx
  41f5a3:	mov    WORD PTR [rbp-0x4],ax
  41f5a7:	jmp    41f5ff <flatcc_json_parser_string_escape@@Base+0x30b>
  41f5a9:	or     BYTE PTR [rbp-0x5],0x20
  41f5ad:	cmp    BYTE PTR [rbp-0x5],0x60
  41f5b1:	jle    41f5da <flatcc_json_parser_string_escape@@Base+0x2e6>
  41f5b3:	cmp    BYTE PTR [rbp-0x5],0x66
  41f5b7:	jg     41f5da <flatcc_json_parser_string_escape@@Base+0x2e6>
  41f5b9:	movsx  ax,BYTE PTR [rbp-0x5]
  41f5be:	sub    eax,0x57
  41f5c1:	mov    WORD PTR [rbp-0x2],ax
  41f5c5:	movzx  eax,WORD PTR [rbp-0x2]
  41f5c9:	shl    eax,0x8
  41f5cc:	mov    edx,eax
  41f5ce:	movzx  eax,WORD PTR [rbp-0x4]
  41f5d2:	or     eax,edx
  41f5d4:	mov    WORD PTR [rbp-0x4],ax
  41f5d8:	jmp    41f5ff <flatcc_json_parser_string_escape@@Base+0x30b>
  41f5da:	mov    rax,QWORD PTR [rbp-0x30]
  41f5de:	mov    BYTE PTR [rax],0x0
  41f5e1:	mov    rdx,QWORD PTR [rbp-0x28]
  41f5e5:	mov    rsi,QWORD PTR [rbp-0x20]
  41f5e9:	mov    rax,QWORD PTR [rbp-0x18]
  41f5ed:	mov    ecx,0x12
  41f5f2:	mov    rdi,rax
  41f5f5:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f5fa:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f5ff:	mov    rax,QWORD PTR [rbp-0x20]
  41f603:	movzx  eax,BYTE PTR [rax+0x4]
  41f607:	mov    BYTE PTR [rbp-0x5],al
  41f60a:	cmp    BYTE PTR [rbp-0x5],0x2f
  41f60e:	jle    41f637 <flatcc_json_parser_string_escape@@Base+0x343>
  41f610:	cmp    BYTE PTR [rbp-0x5],0x39
  41f614:	jg     41f637 <flatcc_json_parser_string_escape@@Base+0x343>
  41f616:	movsx  ax,BYTE PTR [rbp-0x5]
  41f61b:	sub    eax,0x30
  41f61e:	mov    WORD PTR [rbp-0x2],ax
  41f622:	movzx  eax,WORD PTR [rbp-0x2]
  41f626:	shl    eax,0x4
  41f629:	mov    edx,eax
  41f62b:	movzx  eax,WORD PTR [rbp-0x4]
  41f62f:	or     eax,edx
  41f631:	mov    WORD PTR [rbp-0x4],ax
  41f635:	jmp    41f68d <flatcc_json_parser_string_escape@@Base+0x399>
  41f637:	or     BYTE PTR [rbp-0x5],0x20
  41f63b:	cmp    BYTE PTR [rbp-0x5],0x60
  41f63f:	jle    41f668 <flatcc_json_parser_string_escape@@Base+0x374>
  41f641:	cmp    BYTE PTR [rbp-0x5],0x66
  41f645:	jg     41f668 <flatcc_json_parser_string_escape@@Base+0x374>
  41f647:	movsx  ax,BYTE PTR [rbp-0x5]
  41f64c:	sub    eax,0x57
  41f64f:	mov    WORD PTR [rbp-0x2],ax
  41f653:	movzx  eax,WORD PTR [rbp-0x2]
  41f657:	shl    eax,0x4
  41f65a:	mov    edx,eax
  41f65c:	movzx  eax,WORD PTR [rbp-0x4]
  41f660:	or     eax,edx
  41f662:	mov    WORD PTR [rbp-0x4],ax
  41f666:	jmp    41f68d <flatcc_json_parser_string_escape@@Base+0x399>
  41f668:	mov    rax,QWORD PTR [rbp-0x30]
  41f66c:	mov    BYTE PTR [rax],0x0
  41f66f:	mov    rdx,QWORD PTR [rbp-0x28]
  41f673:	mov    rsi,QWORD PTR [rbp-0x20]
  41f677:	mov    rax,QWORD PTR [rbp-0x18]
  41f67b:	mov    ecx,0x12
  41f680:	mov    rdi,rax
  41f683:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f688:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f68d:	mov    rax,QWORD PTR [rbp-0x20]
  41f691:	movzx  eax,BYTE PTR [rax+0x5]
  41f695:	mov    BYTE PTR [rbp-0x5],al
  41f698:	cmp    BYTE PTR [rbp-0x5],0x2f
  41f69c:	jle    41f6ba <flatcc_json_parser_string_escape@@Base+0x3c6>
  41f69e:	cmp    BYTE PTR [rbp-0x5],0x39
  41f6a2:	jg     41f6ba <flatcc_json_parser_string_escape@@Base+0x3c6>
  41f6a4:	movsx  ax,BYTE PTR [rbp-0x5]
  41f6a9:	sub    eax,0x30
  41f6ac:	mov    WORD PTR [rbp-0x2],ax
  41f6b0:	movzx  eax,WORD PTR [rbp-0x2]
  41f6b4:	or     WORD PTR [rbp-0x4],ax
  41f6b8:	jmp    41f705 <flatcc_json_parser_string_escape@@Base+0x411>
  41f6ba:	or     BYTE PTR [rbp-0x5],0x20
  41f6be:	cmp    BYTE PTR [rbp-0x5],0x60
  41f6c2:	jle    41f6e0 <flatcc_json_parser_string_escape@@Base+0x3ec>
  41f6c4:	cmp    BYTE PTR [rbp-0x5],0x66
  41f6c8:	jg     41f6e0 <flatcc_json_parser_string_escape@@Base+0x3ec>
  41f6ca:	movsx  ax,BYTE PTR [rbp-0x5]
  41f6cf:	sub    eax,0x57
  41f6d2:	mov    WORD PTR [rbp-0x2],ax
  41f6d6:	movzx  eax,WORD PTR [rbp-0x2]
  41f6da:	or     WORD PTR [rbp-0x4],ax
  41f6de:	jmp    41f705 <flatcc_json_parser_string_escape@@Base+0x411>
  41f6e0:	mov    rax,QWORD PTR [rbp-0x30]
  41f6e4:	mov    BYTE PTR [rax],0x0
  41f6e7:	mov    rdx,QWORD PTR [rbp-0x28]
  41f6eb:	mov    rsi,QWORD PTR [rbp-0x20]
  41f6ef:	mov    rax,QWORD PTR [rbp-0x18]
  41f6f3:	mov    ecx,0x12
  41f6f8:	mov    rdi,rax
  41f6fb:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f700:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f705:	cmp    WORD PTR [rbp-0x4],0x7f
  41f70a:	ja     41f726 <flatcc_json_parser_string_escape@@Base+0x432>
  41f70c:	mov    rax,QWORD PTR [rbp-0x30]
  41f710:	mov    BYTE PTR [rax],0x1
  41f713:	mov    rax,QWORD PTR [rbp-0x30]
  41f717:	lea    rdx,[rax+0x1]
  41f71b:	movzx  eax,WORD PTR [rbp-0x4]
  41f71f:	mov    BYTE PTR [rdx],al
  41f721:	jmp    41f7b0 <flatcc_json_parser_string_escape@@Base+0x4bc>
  41f726:	cmp    WORD PTR [rbp-0x4],0x7ff
  41f72c:	ja     41f764 <flatcc_json_parser_string_escape@@Base+0x470>
  41f72e:	mov    rax,QWORD PTR [rbp-0x30]
  41f732:	mov    BYTE PTR [rax],0x2
  41f735:	movzx  eax,WORD PTR [rbp-0x4]
  41f739:	shr    ax,0x6
  41f73d:	or     eax,0xffffffc0
  41f740:	mov    ecx,eax
  41f742:	mov    rax,QWORD PTR [rbp-0x30]
  41f746:	lea    rdx,[rax+0x1]
  41f74a:	mov    eax,ecx
  41f74c:	mov    BYTE PTR [rdx],al
  41f74e:	movzx  eax,WORD PTR [rbp-0x4]
  41f752:	and    eax,0x3f
  41f755:	mov    rdx,QWORD PTR [rbp-0x30]
  41f759:	add    rdx,0x2
  41f75d:	or     eax,0xffffff80
  41f760:	mov    BYTE PTR [rdx],al
  41f762:	jmp    41f7b0 <flatcc_json_parser_string_escape@@Base+0x4bc>
  41f764:	mov    rax,QWORD PTR [rbp-0x30]
  41f768:	mov    BYTE PTR [rax],0x3
  41f76b:	movzx  eax,WORD PTR [rbp-0x4]
  41f76f:	shr    ax,0xc
  41f773:	or     eax,0xffffffe0
  41f776:	mov    ecx,eax
  41f778:	mov    rax,QWORD PTR [rbp-0x30]
  41f77c:	lea    rdx,[rax+0x1]
  41f780:	mov    eax,ecx
  41f782:	mov    BYTE PTR [rdx],al
  41f784:	movzx  eax,WORD PTR [rbp-0x4]
  41f788:	shr    ax,0x6
  41f78c:	and    eax,0x3f
  41f78f:	mov    rdx,QWORD PTR [rbp-0x30]
  41f793:	add    rdx,0x2
  41f797:	or     eax,0xffffff80
  41f79a:	mov    BYTE PTR [rdx],al
  41f79c:	movzx  eax,WORD PTR [rbp-0x4]
  41f7a0:	and    eax,0x3f
  41f7a3:	mov    rdx,QWORD PTR [rbp-0x30]
  41f7a7:	add    rdx,0x3
  41f7ab:	or     eax,0xffffff80
  41f7ae:	mov    BYTE PTR [rdx],al
  41f7b0:	mov    rax,QWORD PTR [rbp-0x20]
  41f7b4:	add    rax,0x6
  41f7b8:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f7bd:	mov    rax,QWORD PTR [rbp-0x30]
  41f7c1:	mov    BYTE PTR [rax],0x1
  41f7c4:	mov    rax,QWORD PTR [rbp-0x30]
  41f7c8:	inc    rax
  41f7cb:	mov    BYTE PTR [rax],0x9
  41f7ce:	mov    rax,QWORD PTR [rbp-0x20]
  41f7d2:	add    rax,0x2
  41f7d6:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f7db:	mov    rax,QWORD PTR [rbp-0x30]
  41f7df:	mov    BYTE PTR [rax],0x1
  41f7e2:	mov    rax,QWORD PTR [rbp-0x30]
  41f7e6:	inc    rax
  41f7e9:	mov    BYTE PTR [rax],0xa
  41f7ec:	mov    rax,QWORD PTR [rbp-0x20]
  41f7f0:	add    rax,0x2
  41f7f4:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f7f9:	mov    rax,QWORD PTR [rbp-0x30]
  41f7fd:	mov    BYTE PTR [rax],0x1
  41f800:	mov    rax,QWORD PTR [rbp-0x30]
  41f804:	inc    rax
  41f807:	mov    BYTE PTR [rax],0xd
  41f80a:	mov    rax,QWORD PTR [rbp-0x20]
  41f80e:	add    rax,0x2
  41f812:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f817:	mov    rax,QWORD PTR [rbp-0x30]
  41f81b:	mov    BYTE PTR [rax],0x1
  41f81e:	mov    rax,QWORD PTR [rbp-0x30]
  41f822:	inc    rax
  41f825:	mov    BYTE PTR [rax],0x8
  41f828:	mov    rax,QWORD PTR [rbp-0x20]
  41f82c:	add    rax,0x2
  41f830:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f835:	mov    rax,QWORD PTR [rbp-0x30]
  41f839:	mov    BYTE PTR [rax],0x1
  41f83c:	mov    rax,QWORD PTR [rbp-0x30]
  41f840:	inc    rax
  41f843:	mov    BYTE PTR [rax],0xc
  41f846:	mov    rax,QWORD PTR [rbp-0x20]
  41f84a:	add    rax,0x2
  41f84e:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f850:	mov    rax,QWORD PTR [rbp-0x30]
  41f854:	mov    BYTE PTR [rax],0x1
  41f857:	mov    rax,QWORD PTR [rbp-0x30]
  41f85b:	inc    rax
  41f85e:	mov    BYTE PTR [rax],0x22
  41f861:	mov    rax,QWORD PTR [rbp-0x20]
  41f865:	add    rax,0x2
  41f869:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f86b:	mov    rax,QWORD PTR [rbp-0x30]
  41f86f:	mov    BYTE PTR [rax],0x1
  41f872:	mov    rax,QWORD PTR [rbp-0x30]
  41f876:	inc    rax
  41f879:	mov    BYTE PTR [rax],0x5c
  41f87c:	mov    rax,QWORD PTR [rbp-0x20]
  41f880:	add    rax,0x2
  41f884:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f886:	mov    rax,QWORD PTR [rbp-0x30]
  41f88a:	mov    BYTE PTR [rax],0x1
  41f88d:	mov    rax,QWORD PTR [rbp-0x30]
  41f891:	inc    rax
  41f894:	mov    BYTE PTR [rax],0x2f
  41f897:	mov    rax,QWORD PTR [rbp-0x20]
  41f89b:	add    rax,0x2
  41f89f:	jmp    41f8c1 <flatcc_json_parser_string_escape@@Base+0x5cd>
  41f8a1:	mov    rax,QWORD PTR [rbp-0x30]
  41f8a5:	mov    BYTE PTR [rax],0x0
  41f8a8:	mov    rdx,QWORD PTR [rbp-0x28]
  41f8ac:	mov    rsi,QWORD PTR [rbp-0x20]
  41f8b0:	mov    rax,QWORD PTR [rbp-0x18]
  41f8b4:	mov    ecx,0x12
  41f8b9:	mov    rdi,rax
  41f8bc:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41f8c1:	leave  
  41f8c2:	ret    

000000000041f8c3 <flatcc_json_parser_skip_constant@@Base>:
  41f8c3:	endbr64 
  41f8c7:	push   rbp
  41f8c8:	mov    rbp,rsp
  41f8cb:	sub    rsp,0x30
  41f8cf:	mov    QWORD PTR [rbp-0x18],rdi
  41f8d3:	mov    QWORD PTR [rbp-0x20],rsi
  41f8d7:	mov    QWORD PTR [rbp-0x28],rdx
  41f8db:	jmp    41f954 <flatcc_json_parser_skip_constant@@Base+0x91>
  41f8dd:	mov    rax,QWORD PTR [rbp-0x20]
  41f8e1:	movzx  eax,BYTE PTR [rax]
  41f8e4:	mov    BYTE PTR [rbp-0x9],al
  41f8e7:	cmp    BYTE PTR [rbp-0x9],0x0
  41f8eb:	js     41f905 <flatcc_json_parser_skip_constant@@Base+0x42>
  41f8ed:	cmp    BYTE PTR [rbp-0x9],0x5f
  41f8f1:	je     41f905 <flatcc_json_parser_skip_constant@@Base+0x42>
  41f8f3:	cmp    BYTE PTR [rbp-0x9],0x2f
  41f8f7:	jle    41f8ff <flatcc_json_parser_skip_constant@@Base+0x3c>
  41f8f9:	cmp    BYTE PTR [rbp-0x9],0x39
  41f8fd:	jle    41f905 <flatcc_json_parser_skip_constant@@Base+0x42>
  41f8ff:	cmp    BYTE PTR [rbp-0x9],0x2e
  41f903:	jne    41f90b <flatcc_json_parser_skip_constant@@Base+0x48>
  41f905:	inc    QWORD PTR [rbp-0x20]
  41f909:	jmp    41f954 <flatcc_json_parser_skip_constant@@Base+0x91>
  41f90b:	or     BYTE PTR [rbp-0x9],0x20
  41f90f:	cmp    BYTE PTR [rbp-0x9],0x60
  41f913:	jle    41f921 <flatcc_json_parser_skip_constant@@Base+0x5e>
  41f915:	cmp    BYTE PTR [rbp-0x9],0x7a
  41f919:	jg     41f921 <flatcc_json_parser_skip_constant@@Base+0x5e>
  41f91b:	inc    QWORD PTR [rbp-0x20]
  41f91f:	jmp    41f954 <flatcc_json_parser_skip_constant@@Base+0x91>
  41f921:	mov    rax,QWORD PTR [rbp-0x20]
  41f925:	mov    QWORD PTR [rbp-0x8],rax
  41f929:	mov    rdx,QWORD PTR [rbp-0x28]
  41f92d:	mov    rcx,QWORD PTR [rbp-0x8]
  41f931:	mov    rax,QWORD PTR [rbp-0x18]
  41f935:	mov    rsi,rcx
  41f938:	mov    rdi,rax
  41f93b:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41f940:	mov    QWORD PTR [rbp-0x20],rax
  41f944:	mov    rax,QWORD PTR [rbp-0x20]
  41f948:	cmp    rax,QWORD PTR [rbp-0x8]
  41f94c:	jne    41f954 <flatcc_json_parser_skip_constant@@Base+0x91>
  41f94e:	mov    rax,QWORD PTR [rbp-0x20]
  41f952:	jmp    41f966 <flatcc_json_parser_skip_constant@@Base+0xa3>
  41f954:	mov    rax,QWORD PTR [rbp-0x20]
  41f958:	cmp    rax,QWORD PTR [rbp-0x28]
  41f95c:	jne    41f8dd <flatcc_json_parser_skip_constant@@Base+0x1a>
  41f962:	mov    rax,QWORD PTR [rbp-0x20]
  41f966:	leave  
  41f967:	ret    

000000000041f968 <flatcc_json_parser_match_constant@@Base>:
  41f968:	endbr64 
  41f96c:	push   rbp
  41f96d:	mov    rbp,rsp
  41f970:	sub    rsp,0x50
  41f974:	mov    QWORD PTR [rbp-0x28],rdi
  41f978:	mov    QWORD PTR [rbp-0x30],rsi
  41f97c:	mov    QWORD PTR [rbp-0x38],rdx
  41f980:	mov    DWORD PTR [rbp-0x3c],ecx
  41f983:	mov    QWORD PTR [rbp-0x48],r8
  41f987:	mov    rax,QWORD PTR [rbp-0x30]
  41f98b:	mov    QWORD PTR [rbp-0x10],rax
  41f98f:	mov    eax,DWORD PTR [rbp-0x3c]
  41f992:	movsxd rdx,eax
  41f995:	mov    rax,QWORD PTR [rbp-0x30]
  41f999:	add    rax,rdx
  41f99c:	mov    QWORD PTR [rbp-0x8],rax
  41f9a0:	mov    rax,QWORD PTR [rbp-0x38]
  41f9a4:	sub    rax,QWORD PTR [rbp-0x30]
  41f9a8:	mov    rdx,rax
  41f9ab:	mov    eax,DWORD PTR [rbp-0x3c]
  41f9ae:	cdqe   
  41f9b0:	cmp    rdx,rax
  41f9b3:	jg     41f9c8 <flatcc_json_parser_match_constant@@Base+0x60>
  41f9b5:	mov    rax,QWORD PTR [rbp-0x48]
  41f9b9:	mov    DWORD PTR [rax],0x0
  41f9bf:	mov    rax,QWORD PTR [rbp-0x30]
  41f9c3:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41f9c8:	mov    rax,QWORD PTR [rbp-0x28]
  41f9cc:	mov    eax,DWORD PTR [rax+0x14]
  41f9cf:	test   eax,eax
  41f9d1:	je     41faa2 <flatcc_json_parser_match_constant@@Base+0x13a>
  41f9d7:	mov    rdx,QWORD PTR [rbp-0x38]
  41f9db:	mov    rcx,QWORD PTR [rbp-0x8]
  41f9df:	mov    rax,QWORD PTR [rbp-0x28]
  41f9e3:	mov    rsi,rcx
  41f9e6:	mov    rdi,rax
  41f9e9:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41f9ee:	mov    QWORD PTR [rbp-0x30],rax
  41f9f2:	mov    rax,QWORD PTR [rbp-0x30]
  41f9f6:	cmp    rax,QWORD PTR [rbp-0x38]
  41f9fa:	jne    41fa0f <flatcc_json_parser_match_constant@@Base+0xa7>
  41f9fc:	mov    rax,QWORD PTR [rbp-0x48]
  41fa00:	mov    DWORD PTR [rax],0x0
  41fa06:	mov    rax,QWORD PTR [rbp-0x30]
  41fa0a:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fa0f:	mov    rax,QWORD PTR [rbp-0x30]
  41fa13:	cmp    rax,QWORD PTR [rbp-0x8]
  41fa17:	je     41fa65 <flatcc_json_parser_match_constant@@Base+0xfd>
  41fa19:	mov    rax,QWORD PTR [rbp-0x30]
  41fa1d:	movzx  eax,BYTE PTR [rax]
  41fa20:	mov    BYTE PTR [rbp-0x11],al
  41fa23:	cmp    BYTE PTR [rbp-0x11],0x5f
  41fa27:	je     41fa2f <flatcc_json_parser_match_constant@@Base+0xc7>
  41fa29:	cmp    BYTE PTR [rbp-0x11],0x0
  41fa2d:	jns    41fa42 <flatcc_json_parser_match_constant@@Base+0xda>
  41fa2f:	mov    rax,QWORD PTR [rbp-0x48]
  41fa33:	mov    DWORD PTR [rax],0x1
  41fa39:	mov    rax,QWORD PTR [rbp-0x30]
  41fa3d:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fa42:	or     BYTE PTR [rbp-0x11],0x20
  41fa46:	cmp    BYTE PTR [rbp-0x11],0x60
  41fa4a:	jle    41fa65 <flatcc_json_parser_match_constant@@Base+0xfd>
  41fa4c:	cmp    BYTE PTR [rbp-0x11],0x7a
  41fa50:	jg     41fa65 <flatcc_json_parser_match_constant@@Base+0xfd>
  41fa52:	mov    rax,QWORD PTR [rbp-0x48]
  41fa56:	mov    DWORD PTR [rax],0x1
  41fa5c:	mov    rax,QWORD PTR [rbp-0x30]
  41fa60:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fa65:	mov    rax,QWORD PTR [rbp-0x48]
  41fa69:	mov    DWORD PTR [rax],0x0
  41fa6f:	mov    rax,QWORD PTR [rbp-0x30]
  41fa73:	movzx  eax,BYTE PTR [rax]
  41fa76:	cmp    al,0x2c
  41fa78:	je     41fa90 <flatcc_json_parser_match_constant@@Base+0x128>
  41fa7a:	mov    rax,QWORD PTR [rbp-0x30]
  41fa7e:	movzx  eax,BYTE PTR [rax]
  41fa81:	cmp    al,0x7d
  41fa83:	je     41fa90 <flatcc_json_parser_match_constant@@Base+0x128>
  41fa85:	mov    rax,QWORD PTR [rbp-0x30]
  41fa89:	movzx  eax,BYTE PTR [rax]
  41fa8c:	cmp    al,0x5d
  41fa8e:	jne    41fa99 <flatcc_json_parser_match_constant@@Base+0x131>
  41fa90:	mov    rax,QWORD PTR [rbp-0x30]
  41fa94:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fa99:	mov    rax,QWORD PTR [rbp-0x10]
  41fa9d:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41faa2:	mov    rax,QWORD PTR [rbp-0x8]
  41faa6:	mov    QWORD PTR [rbp-0x30],rax
  41faaa:	mov    rax,QWORD PTR [rbp-0x30]
  41faae:	movzx  eax,BYTE PTR [rax]
  41fab1:	cmp    al,0x20
  41fab3:	jne    41fb0c <flatcc_json_parser_match_constant@@Base+0x1a4>
  41fab5:	inc    QWORD PTR [rbp-0x30]
  41fab9:	jmp    41fabf <flatcc_json_parser_match_constant@@Base+0x157>
  41fabb:	inc    QWORD PTR [rbp-0x30]
  41fabf:	mov    rax,QWORD PTR [rbp-0x30]
  41fac3:	cmp    rax,QWORD PTR [rbp-0x38]
  41fac7:	je     41fad4 <flatcc_json_parser_match_constant@@Base+0x16c>
  41fac9:	mov    rax,QWORD PTR [rbp-0x30]
  41facd:	movzx  eax,BYTE PTR [rax]
  41fad0:	cmp    al,0x20
  41fad2:	je     41fabb <flatcc_json_parser_match_constant@@Base+0x153>
  41fad4:	mov    rax,QWORD PTR [rbp-0x30]
  41fad8:	cmp    rax,QWORD PTR [rbp-0x38]
  41fadc:	jne    41faf1 <flatcc_json_parser_match_constant@@Base+0x189>
  41fade:	mov    rax,QWORD PTR [rbp-0x48]
  41fae2:	mov    DWORD PTR [rax],0x0
  41fae8:	mov    rax,QWORD PTR [rbp-0x30]
  41faec:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41faf1:	mov    rax,QWORD PTR [rbp-0x30]
  41faf5:	movzx  eax,BYTE PTR [rax]
  41faf8:	cmp    al,0x22
  41fafa:	je     41fb0c <flatcc_json_parser_match_constant@@Base+0x1a4>
  41fafc:	mov    rax,QWORD PTR [rbp-0x48]
  41fb00:	mov    DWORD PTR [rax],0x1
  41fb06:	mov    rax,QWORD PTR [rbp-0x30]
  41fb0a:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fb0c:	mov    rax,QWORD PTR [rbp-0x30]
  41fb10:	movzx  eax,BYTE PTR [rax]
  41fb13:	movsx  eax,al
  41fb16:	cmp    eax,0x22
  41fb19:	je     41fb45 <flatcc_json_parser_match_constant@@Base+0x1dd>
  41fb1b:	cmp    eax,0x5c
  41fb1e:	jne    41fb75 <flatcc_json_parser_match_constant@@Base+0x20d>
  41fb20:	mov    rax,QWORD PTR [rbp-0x48]
  41fb24:	mov    DWORD PTR [rax],0x0
  41fb2a:	mov    rdx,QWORD PTR [rbp-0x38]
  41fb2e:	mov    rsi,QWORD PTR [rbp-0x30]
  41fb32:	mov    rax,QWORD PTR [rbp-0x28]
  41fb36:	mov    ecx,0x12
  41fb3b:	mov    rdi,rax
  41fb3e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fb43:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fb45:	mov    rax,QWORD PTR [rbp-0x30]
  41fb49:	lea    rcx,[rax+0x1]
  41fb4d:	mov    rax,QWORD PTR [rbp-0x28]
  41fb51:	mov    edx,0x0
  41fb56:	mov    rsi,rcx
  41fb59:	mov    rdi,rax
  41fb5c:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41fb61:	mov    QWORD PTR [rbp-0x30],rax
  41fb65:	mov    rax,QWORD PTR [rbp-0x48]
  41fb69:	mov    DWORD PTR [rax],0x0
  41fb6f:	mov    rax,QWORD PTR [rbp-0x30]
  41fb73:	jmp    41fb83 <flatcc_json_parser_match_constant@@Base+0x21b>
  41fb75:	mov    rax,QWORD PTR [rbp-0x48]
  41fb79:	mov    DWORD PTR [rax],0x0
  41fb7f:	mov    rax,QWORD PTR [rbp-0x10]
  41fb83:	leave  
  41fb84:	ret    

000000000041fb85 <flatcc_json_parser_unmatched_symbol@@Base>:
  41fb85:	endbr64 
  41fb89:	push   rbp
  41fb8a:	mov    rbp,rsp
  41fb8d:	sub    rsp,0x20
  41fb91:	mov    QWORD PTR [rbp-0x8],rdi
  41fb95:	mov    QWORD PTR [rbp-0x10],rsi
  41fb99:	mov    QWORD PTR [rbp-0x18],rdx
  41fb9d:	mov    rax,QWORD PTR [rbp-0x8]
  41fba1:	mov    eax,DWORD PTR [rax+0x10]
  41fba4:	and    eax,0x1
  41fba7:	test   eax,eax
  41fba9:	je     41fc4e <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  41fbaf:	mov    rdx,QWORD PTR [rbp-0x18]
  41fbb3:	mov    rcx,QWORD PTR [rbp-0x10]
  41fbb7:	mov    rax,QWORD PTR [rbp-0x8]
  41fbbb:	mov    rsi,rcx
  41fbbe:	mov    rdi,rax
  41fbc1:	call   41b2cb <flatcc_emitter_copy_buffer@@Base+0x370>
  41fbc6:	mov    QWORD PTR [rbp-0x10],rax
  41fbca:	mov    rdx,QWORD PTR [rbp-0x18]
  41fbce:	mov    rcx,QWORD PTR [rbp-0x10]
  41fbd2:	mov    rax,QWORD PTR [rbp-0x8]
  41fbd6:	mov    rsi,rcx
  41fbd9:	mov    rdi,rax
  41fbdc:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41fbe1:	mov    QWORD PTR [rbp-0x10],rax
  41fbe5:	mov    rax,QWORD PTR [rbp-0x10]
  41fbe9:	cmp    rax,QWORD PTR [rbp-0x18]
  41fbed:	je     41fc33 <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  41fbef:	mov    rax,QWORD PTR [rbp-0x10]
  41fbf3:	movzx  eax,BYTE PTR [rax]
  41fbf6:	cmp    al,0x3a
  41fbf8:	jne    41fc33 <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  41fbfa:	inc    QWORD PTR [rbp-0x10]
  41fbfe:	mov    rdx,QWORD PTR [rbp-0x18]
  41fc02:	mov    rcx,QWORD PTR [rbp-0x10]
  41fc06:	mov    rax,QWORD PTR [rbp-0x8]
  41fc0a:	mov    rsi,rcx
  41fc0d:	mov    rdi,rax
  41fc10:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  41fc15:	mov    QWORD PTR [rbp-0x10],rax
  41fc19:	nop
  41fc1a:	mov    rdx,QWORD PTR [rbp-0x18]
  41fc1e:	mov    rcx,QWORD PTR [rbp-0x10]
  41fc22:	mov    rax,QWORD PTR [rbp-0x8]
  41fc26:	mov    rsi,rcx
  41fc29:	mov    rdi,rax
  41fc2c:	call   42017c <flatcc_json_parser_generic_json@@Base>
  41fc31:	jmp    41fc67 <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  41fc33:	mov    rdx,QWORD PTR [rbp-0x18]
  41fc37:	mov    rsi,QWORD PTR [rbp-0x10]
  41fc3b:	mov    rax,QWORD PTR [rbp-0x8]
  41fc3f:	mov    ecx,0x4
  41fc44:	mov    rdi,rax
  41fc47:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fc4c:	jmp    41fc67 <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  41fc4e:	mov    rdx,QWORD PTR [rbp-0x18]
  41fc52:	mov    rsi,QWORD PTR [rbp-0x10]
  41fc56:	mov    rax,QWORD PTR [rbp-0x8]
  41fc5a:	mov    ecx,0xd
  41fc5f:	mov    rdi,rax
  41fc62:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fc67:	leave  
  41fc68:	ret    
  41fc69:	endbr64 
  41fc6d:	push   rbp
  41fc6e:	mov    rbp,rsp
  41fc71:	sub    rsp,0x20
  41fc75:	mov    QWORD PTR [rbp-0x8],rdi
  41fc79:	mov    QWORD PTR [rbp-0x10],rsi
  41fc7d:	mov    QWORD PTR [rbp-0x18],rdx
  41fc81:	mov    rax,QWORD PTR [rbp-0x10]
  41fc85:	cmp    rax,QWORD PTR [rbp-0x18]
  41fc89:	jne    41fc94 <flatcc_json_parser_unmatched_symbol@@Base+0x10f>
  41fc8b:	mov    rax,QWORD PTR [rbp-0x10]
  41fc8f:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fc94:	mov    rax,QWORD PTR [rbp-0x10]
  41fc98:	movzx  eax,BYTE PTR [rax]
  41fc9b:	cmp    al,0x2d
  41fc9d:	jne    41fccb <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  41fc9f:	inc    QWORD PTR [rbp-0x10]
  41fca3:	mov    rax,QWORD PTR [rbp-0x10]
  41fca7:	cmp    rax,QWORD PTR [rbp-0x18]
  41fcab:	jne    41fccb <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  41fcad:	mov    rdx,QWORD PTR [rbp-0x18]
  41fcb1:	mov    rsi,QWORD PTR [rbp-0x10]
  41fcb5:	mov    rax,QWORD PTR [rbp-0x8]
  41fcb9:	mov    ecx,0x6
  41fcbe:	mov    rdi,rax
  41fcc1:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fcc6:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fccb:	mov    rax,QWORD PTR [rbp-0x10]
  41fccf:	movzx  eax,BYTE PTR [rax]
  41fcd2:	cmp    al,0x30
  41fcd4:	jne    41fcdc <flatcc_json_parser_unmatched_symbol@@Base+0x157>
  41fcd6:	inc    QWORD PTR [rbp-0x10]
  41fcda:	jmp    41fd3a <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  41fcdc:	mov    rax,QWORD PTR [rbp-0x10]
  41fce0:	movzx  eax,BYTE PTR [rax]
  41fce3:	cmp    al,0x30
  41fce5:	jle    41fcf2 <flatcc_json_parser_unmatched_symbol@@Base+0x16d>
  41fce7:	mov    rax,QWORD PTR [rbp-0x10]
  41fceb:	movzx  eax,BYTE PTR [rax]
  41fcee:	cmp    al,0x39
  41fcf0:	jle    41fd10 <flatcc_json_parser_unmatched_symbol@@Base+0x18b>
  41fcf2:	mov    rdx,QWORD PTR [rbp-0x18]
  41fcf6:	mov    rsi,QWORD PTR [rbp-0x10]
  41fcfa:	mov    rax,QWORD PTR [rbp-0x8]
  41fcfe:	mov    ecx,0x6
  41fd03:	mov    rdi,rax
  41fd06:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fd0b:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fd10:	inc    QWORD PTR [rbp-0x10]
  41fd14:	jmp    41fd1a <flatcc_json_parser_unmatched_symbol@@Base+0x195>
  41fd16:	inc    QWORD PTR [rbp-0x10]
  41fd1a:	mov    rax,QWORD PTR [rbp-0x10]
  41fd1e:	cmp    rax,QWORD PTR [rbp-0x18]
  41fd22:	je     41fd3a <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  41fd24:	mov    rax,QWORD PTR [rbp-0x10]
  41fd28:	movzx  eax,BYTE PTR [rax]
  41fd2b:	cmp    al,0x2f
  41fd2d:	jle    41fd3a <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  41fd2f:	mov    rax,QWORD PTR [rbp-0x10]
  41fd33:	movzx  eax,BYTE PTR [rax]
  41fd36:	cmp    al,0x39
  41fd38:	jle    41fd16 <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  41fd3a:	mov    rax,QWORD PTR [rbp-0x10]
  41fd3e:	cmp    rax,QWORD PTR [rbp-0x18]
  41fd42:	je     41fdb1 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  41fd44:	mov    rax,QWORD PTR [rbp-0x10]
  41fd48:	movzx  eax,BYTE PTR [rax]
  41fd4b:	cmp    al,0x2e
  41fd4d:	jne    41fdb1 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  41fd4f:	inc    QWORD PTR [rbp-0x10]
  41fd53:	mov    rax,QWORD PTR [rbp-0x10]
  41fd57:	movzx  eax,BYTE PTR [rax]
  41fd5a:	cmp    al,0x2f
  41fd5c:	jle    41fd69 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
  41fd5e:	mov    rax,QWORD PTR [rbp-0x10]
  41fd62:	movzx  eax,BYTE PTR [rax]
  41fd65:	cmp    al,0x39
  41fd67:	jle    41fd87 <flatcc_json_parser_unmatched_symbol@@Base+0x202>
  41fd69:	mov    rdx,QWORD PTR [rbp-0x18]
  41fd6d:	mov    rsi,QWORD PTR [rbp-0x10]
  41fd71:	mov    rax,QWORD PTR [rbp-0x8]
  41fd75:	mov    ecx,0x6
  41fd7a:	mov    rdi,rax
  41fd7d:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fd82:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fd87:	inc    QWORD PTR [rbp-0x10]
  41fd8b:	jmp    41fd91 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
  41fd8d:	inc    QWORD PTR [rbp-0x10]
  41fd91:	mov    rax,QWORD PTR [rbp-0x10]
  41fd95:	cmp    rax,QWORD PTR [rbp-0x18]
  41fd99:	je     41fdb1 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  41fd9b:	mov    rax,QWORD PTR [rbp-0x10]
  41fd9f:	movzx  eax,BYTE PTR [rax]
  41fda2:	cmp    al,0x2f
  41fda4:	jle    41fdb1 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  41fda6:	mov    rax,QWORD PTR [rbp-0x10]
  41fdaa:	movzx  eax,BYTE PTR [rax]
  41fdad:	cmp    al,0x39
  41fdaf:	jle    41fd8d <flatcc_json_parser_unmatched_symbol@@Base+0x208>
  41fdb1:	mov    rax,QWORD PTR [rbp-0x10]
  41fdb5:	cmp    rax,QWORD PTR [rbp-0x18]
  41fdb9:	je     41fe87 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  41fdbf:	mov    rax,QWORD PTR [rbp-0x10]
  41fdc3:	movzx  eax,BYTE PTR [rax]
  41fdc6:	cmp    al,0x65
  41fdc8:	je     41fdd9 <flatcc_json_parser_unmatched_symbol@@Base+0x254>
  41fdca:	mov    rax,QWORD PTR [rbp-0x10]
  41fdce:	movzx  eax,BYTE PTR [rax]
  41fdd1:	cmp    al,0x45
  41fdd3:	jne    41fe87 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  41fdd9:	inc    QWORD PTR [rbp-0x10]
  41fddd:	mov    rax,QWORD PTR [rbp-0x10]
  41fde1:	cmp    rax,QWORD PTR [rbp-0x18]
  41fde5:	jne    41fe05 <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  41fde7:	mov    rdx,QWORD PTR [rbp-0x18]
  41fdeb:	mov    rsi,QWORD PTR [rbp-0x10]
  41fdef:	mov    rax,QWORD PTR [rbp-0x8]
  41fdf3:	mov    ecx,0x6
  41fdf8:	mov    rdi,rax
  41fdfb:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fe00:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fe05:	mov    rax,QWORD PTR [rbp-0x10]
  41fe09:	movzx  eax,BYTE PTR [rax]
  41fe0c:	cmp    al,0x2b
  41fe0e:	je     41fe1b <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  41fe10:	mov    rax,QWORD PTR [rbp-0x10]
  41fe14:	movzx  eax,BYTE PTR [rax]
  41fe17:	cmp    al,0x2d
  41fe19:	jne    41fe1f <flatcc_json_parser_unmatched_symbol@@Base+0x29a>
  41fe1b:	inc    QWORD PTR [rbp-0x10]
  41fe1f:	mov    rax,QWORD PTR [rbp-0x10]
  41fe23:	cmp    rax,QWORD PTR [rbp-0x18]
  41fe27:	je     41fe3f <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  41fe29:	mov    rax,QWORD PTR [rbp-0x10]
  41fe2d:	movzx  eax,BYTE PTR [rax]
  41fe30:	cmp    al,0x2f
  41fe32:	jle    41fe3f <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  41fe34:	mov    rax,QWORD PTR [rbp-0x10]
  41fe38:	movzx  eax,BYTE PTR [rax]
  41fe3b:	cmp    al,0x39
  41fe3d:	jle    41fe5d <flatcc_json_parser_unmatched_symbol@@Base+0x2d8>
  41fe3f:	mov    rdx,QWORD PTR [rbp-0x18]
  41fe43:	mov    rsi,QWORD PTR [rbp-0x10]
  41fe47:	mov    rax,QWORD PTR [rbp-0x8]
  41fe4b:	mov    ecx,0x6
  41fe50:	mov    rdi,rax
  41fe53:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fe58:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fe5d:	inc    QWORD PTR [rbp-0x10]
  41fe61:	jmp    41fe67 <flatcc_json_parser_unmatched_symbol@@Base+0x2e2>
  41fe63:	inc    QWORD PTR [rbp-0x10]
  41fe67:	mov    rax,QWORD PTR [rbp-0x10]
  41fe6b:	cmp    rax,QWORD PTR [rbp-0x18]
  41fe6f:	je     41fe87 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  41fe71:	mov    rax,QWORD PTR [rbp-0x10]
  41fe75:	movzx  eax,BYTE PTR [rax]
  41fe78:	cmp    al,0x2f
  41fe7a:	jle    41fe87 <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  41fe7c:	mov    rax,QWORD PTR [rbp-0x10]
  41fe80:	movzx  eax,BYTE PTR [rax]
  41fe83:	cmp    al,0x39
  41fe85:	jle    41fe63 <flatcc_json_parser_unmatched_symbol@@Base+0x2de>
  41fe87:	mov    rax,QWORD PTR [rbp-0x10]
  41fe8b:	cmp    rax,QWORD PTR [rbp-0x18]
  41fe8f:	je     41fed7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41fe91:	mov    rax,QWORD PTR [rbp-0x10]
  41fe95:	movzx  eax,BYTE PTR [rax]
  41fe98:	movsx  eax,al
  41fe9b:	cmp    eax,0x20
  41fe9e:	je     41fed1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41fea0:	cmp    eax,0x20
  41fea3:	jg     41feb6 <flatcc_json_parser_unmatched_symbol@@Base+0x331>
  41fea5:	cmp    eax,0x9
  41fea8:	jl     41fed7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41feaa:	cmp    eax,0xb
  41fead:	jle    41fed1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41feaf:	cmp    eax,0xd
  41feb2:	je     41fed1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41feb4:	jmp    41fed7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41feb6:	cmp    eax,0x3a
  41feb9:	je     41fed1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41febb:	cmp    eax,0x3a
  41febe:	jg     41fec7 <flatcc_json_parser_unmatched_symbol@@Base+0x342>
  41fec0:	cmp    eax,0x2c
  41fec3:	je     41fed1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41fec5:	jmp    41fed7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41fec7:	cmp    eax,0x5d
  41feca:	je     41fed1 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  41fecc:	cmp    eax,0x7d
  41fecf:	jne    41fed7 <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  41fed1:	mov    rax,QWORD PTR [rbp-0x10]
  41fed5:	jmp    41fef0 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  41fed7:	mov    rdx,QWORD PTR [rbp-0x18]
  41fedb:	mov    rsi,QWORD PTR [rbp-0x10]
  41fedf:	mov    rax,QWORD PTR [rbp-0x8]
  41fee3:	mov    ecx,0x6
  41fee8:	mov    rdi,rax
  41feeb:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41fef0:	leave  
  41fef1:	ret    

000000000041fef2 <flatcc_json_parser_double@@Base>:
  41fef2:	endbr64 
  41fef6:	push   rbp
  41fef7:	mov    rbp,rsp
  41fefa:	sub    rsp,0x30
  41fefe:	mov    QWORD PTR [rbp-0x18],rdi
  41ff02:	mov    QWORD PTR [rbp-0x20],rsi
  41ff06:	mov    QWORD PTR [rbp-0x28],rdx
  41ff0a:	mov    QWORD PTR [rbp-0x30],rcx
  41ff0e:	mov    rax,QWORD PTR [rbp-0x30]
  41ff12:	vxorpd xmm0,xmm0,xmm0
  41ff16:	vmovsd QWORD PTR [rax],xmm0
  41ff1a:	mov    rax,QWORD PTR [rbp-0x20]
  41ff1e:	cmp    rax,QWORD PTR [rbp-0x28]
  41ff22:	jne    41ff2d <flatcc_json_parser_double@@Base+0x3b>
  41ff24:	mov    rax,QWORD PTR [rbp-0x20]
  41ff28:	jmp    420035 <flatcc_json_parser_double@@Base+0x143>
  41ff2d:	mov    rax,QWORD PTR [rbp-0x20]
  41ff31:	mov    QWORD PTR [rbp-0x10],rax
  41ff35:	mov    rax,QWORD PTR [rbp-0x20]
  41ff39:	movzx  eax,BYTE PTR [rax]
  41ff3c:	cmp    al,0x2d
  41ff3e:	jne    41ff44 <flatcc_json_parser_double@@Base+0x52>
  41ff40:	inc    QWORD PTR [rbp-0x10]
  41ff44:	mov    rax,QWORD PTR [rbp-0x28]
  41ff48:	sub    rax,QWORD PTR [rbp-0x10]
  41ff4c:	cmp    rax,0x1
  41ff50:	jle    41ff94 <flatcc_json_parser_double@@Base+0xa2>
  41ff52:	mov    rax,QWORD PTR [rbp-0x10]
  41ff56:	movzx  eax,BYTE PTR [rax]
  41ff59:	cmp    al,0x2e
  41ff5b:	je     41ff76 <flatcc_json_parser_double@@Base+0x84>
  41ff5d:	mov    rax,QWORD PTR [rbp-0x10]
  41ff61:	movzx  eax,BYTE PTR [rax]
  41ff64:	cmp    al,0x30
  41ff66:	jne    41ff94 <flatcc_json_parser_double@@Base+0xa2>
  41ff68:	mov    rax,QWORD PTR [rbp-0x10]
  41ff6c:	inc    rax
  41ff6f:	movzx  eax,BYTE PTR [rax]
  41ff72:	cmp    al,0x30
  41ff74:	jne    41ff94 <flatcc_json_parser_double@@Base+0xa2>
  41ff76:	mov    rdx,QWORD PTR [rbp-0x28]
  41ff7a:	mov    rsi,QWORD PTR [rbp-0x20]
  41ff7e:	mov    rax,QWORD PTR [rbp-0x18]
  41ff82:	mov    ecx,0x6
  41ff87:	mov    rdi,rax
  41ff8a:	call   41f09d <flatcc_json_parser_set_error@@Base>
  41ff8f:	jmp    420035 <flatcc_json_parser_double@@Base+0x143>
  41ff94:	mov    rax,QWORD PTR [rbp-0x28]
  41ff98:	sub    rax,QWORD PTR [rbp-0x20]
  41ff9c:	mov    ecx,eax
  41ff9e:	mov    rdx,QWORD PTR [rbp-0x30]
  41ffa2:	mov    rax,QWORD PTR [rbp-0x20]
  41ffa6:	mov    esi,ecx
  41ffa8:	mov    rdi,rax
  41ffab:	call   41e55c <grisu3_diy_fp_encode_double@@Base+0xf4f>
  41ffb0:	mov    QWORD PTR [rbp-0x8],rax
  41ffb4:	cmp    QWORD PTR [rbp-0x8],0x0
  41ffb9:	je     41ffc5 <flatcc_json_parser_double@@Base+0xd3>
  41ffbb:	mov    rax,QWORD PTR [rbp-0x8]
  41ffbf:	cmp    rax,QWORD PTR [rbp-0x20]
  41ffc3:	jne    420031 <flatcc_json_parser_double@@Base+0x13f>
  41ffc5:	mov    rax,QWORD PTR [rbp-0x30]
  41ffc9:	vmovsd xmm1,QWORD PTR [rax]
  41ffcd:	vmovq  xmm0,QWORD PTR [rip+0x453b]        # 424510 <flatcc_builder_padding_base@@Base+0x2170>
  41ffd5:	vandpd xmm0,xmm0,xmm1
  41ffd9:	vucomisd xmm0,QWORD PTR [rip+0x453f]        # 424520 <flatcc_builder_padding_base@@Base+0x2180>
  41ffe1:	setbe  al
  41ffe4:	xor    eax,0x1
  41ffe7:	test   al,al
  41ffe9:	je     41fff2 <flatcc_json_parser_double@@Base+0x100>
  41ffeb:	mov    eax,0x1
  41fff0:	jmp    41fff7 <flatcc_json_parser_double@@Base+0x105>
  41fff2:	mov    eax,0x0
  41fff7:	test   al,al
  41fff9:	je     420016 <flatcc_json_parser_double@@Base+0x124>
  41fffb:	mov    rdx,QWORD PTR [rbp-0x28]
  41ffff:	mov    rsi,QWORD PTR [rbp-0x20]
  420003:	mov    rax,QWORD PTR [rbp-0x18]
  420007:	mov    ecx,0x7
  42000c:	mov    rdi,rax
  42000f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420014:	jmp    420035 <flatcc_json_parser_double@@Base+0x143>
  420016:	mov    rdx,QWORD PTR [rbp-0x28]
  42001a:	mov    rsi,QWORD PTR [rbp-0x20]
  42001e:	mov    rax,QWORD PTR [rbp-0x18]
  420022:	mov    ecx,0x6
  420027:	mov    rdi,rax
  42002a:	call   41f09d <flatcc_json_parser_set_error@@Base>
  42002f:	jmp    420035 <flatcc_json_parser_double@@Base+0x143>
  420031:	mov    rax,QWORD PTR [rbp-0x8]
  420035:	leave  
  420036:	ret    

0000000000420037 <flatcc_json_parser_float@@Base>:
  420037:	endbr64 
  42003b:	push   rbp
  42003c:	mov    rbp,rsp
  42003f:	sub    rsp,0x30
  420043:	mov    QWORD PTR [rbp-0x18],rdi
  420047:	mov    QWORD PTR [rbp-0x20],rsi
  42004b:	mov    QWORD PTR [rbp-0x28],rdx
  42004f:	mov    QWORD PTR [rbp-0x30],rcx
  420053:	mov    rax,QWORD PTR [rbp-0x30]
  420057:	vxorps xmm0,xmm0,xmm0
  42005b:	vmovss DWORD PTR [rax],xmm0
  42005f:	mov    rax,QWORD PTR [rbp-0x20]
  420063:	cmp    rax,QWORD PTR [rbp-0x28]
  420067:	jne    420072 <flatcc_json_parser_float@@Base+0x3b>
  420069:	mov    rax,QWORD PTR [rbp-0x20]
  42006d:	jmp    42017a <flatcc_json_parser_float@@Base+0x143>
  420072:	mov    rax,QWORD PTR [rbp-0x20]
  420076:	mov    QWORD PTR [rbp-0x10],rax
  42007a:	mov    rax,QWORD PTR [rbp-0x20]
  42007e:	movzx  eax,BYTE PTR [rax]
  420081:	cmp    al,0x2d
  420083:	jne    420089 <flatcc_json_parser_float@@Base+0x52>
  420085:	inc    QWORD PTR [rbp-0x10]
  420089:	mov    rax,QWORD PTR [rbp-0x28]
  42008d:	sub    rax,QWORD PTR [rbp-0x10]
  420091:	cmp    rax,0x1
  420095:	jle    4200d9 <flatcc_json_parser_float@@Base+0xa2>
  420097:	mov    rax,QWORD PTR [rbp-0x10]
  42009b:	movzx  eax,BYTE PTR [rax]
  42009e:	cmp    al,0x2e
  4200a0:	je     4200bb <flatcc_json_parser_float@@Base+0x84>
  4200a2:	mov    rax,QWORD PTR [rbp-0x10]
  4200a6:	movzx  eax,BYTE PTR [rax]
  4200a9:	cmp    al,0x30
  4200ab:	jne    4200d9 <flatcc_json_parser_float@@Base+0xa2>
  4200ad:	mov    rax,QWORD PTR [rbp-0x10]
  4200b1:	inc    rax
  4200b4:	movzx  eax,BYTE PTR [rax]
  4200b7:	cmp    al,0x30
  4200b9:	jne    4200d9 <flatcc_json_parser_float@@Base+0xa2>
  4200bb:	mov    rdx,QWORD PTR [rbp-0x28]
  4200bf:	mov    rsi,QWORD PTR [rbp-0x20]
  4200c3:	mov    rax,QWORD PTR [rbp-0x18]
  4200c7:	mov    ecx,0x6
  4200cc:	mov    rdi,rax
  4200cf:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4200d4:	jmp    42017a <flatcc_json_parser_float@@Base+0x143>
  4200d9:	mov    rax,QWORD PTR [rbp-0x28]
  4200dd:	sub    rax,QWORD PTR [rbp-0x20]
  4200e1:	mov    ecx,eax
  4200e3:	mov    rdx,QWORD PTR [rbp-0x30]
  4200e7:	mov    rax,QWORD PTR [rbp-0x20]
  4200eb:	mov    esi,ecx
  4200ed:	mov    rdi,rax
  4200f0:	call   41e586 <grisu3_diy_fp_encode_double@@Base+0xf79>
  4200f5:	mov    QWORD PTR [rbp-0x8],rax
  4200f9:	cmp    QWORD PTR [rbp-0x8],0x0
  4200fe:	je     42010a <flatcc_json_parser_float@@Base+0xd3>
  420100:	mov    rax,QWORD PTR [rbp-0x8]
  420104:	cmp    rax,QWORD PTR [rbp-0x20]
  420108:	jne    420176 <flatcc_json_parser_float@@Base+0x13f>
  42010a:	mov    rax,QWORD PTR [rbp-0x30]
  42010e:	vmovss xmm1,DWORD PTR [rax]
  420112:	vmovss xmm0,DWORD PTR [rip+0x43d6]        # 4244f0 <flatcc_builder_padding_base@@Base+0x2150>
  42011a:	vandps xmm0,xmm0,xmm1
  42011e:	vucomiss xmm0,DWORD PTR [rip+0x43da]        # 424500 <flatcc_builder_padding_base@@Base+0x2160>
  420126:	setbe  al
  420129:	xor    eax,0x1
  42012c:	test   al,al
  42012e:	je     420137 <flatcc_json_parser_float@@Base+0x100>
  420130:	mov    eax,0x1
  420135:	jmp    42013c <flatcc_json_parser_float@@Base+0x105>
  420137:	mov    eax,0x0
  42013c:	test   al,al
  42013e:	je     42015b <flatcc_json_parser_float@@Base+0x124>
  420140:	mov    rdx,QWORD PTR [rbp-0x28]
  420144:	mov    rsi,QWORD PTR [rbp-0x20]
  420148:	mov    rax,QWORD PTR [rbp-0x18]
  42014c:	mov    ecx,0x7
  420151:	mov    rdi,rax
  420154:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420159:	jmp    42017a <flatcc_json_parser_float@@Base+0x143>
  42015b:	mov    rdx,QWORD PTR [rbp-0x28]
  42015f:	mov    rsi,QWORD PTR [rbp-0x20]
  420163:	mov    rax,QWORD PTR [rbp-0x18]
  420167:	mov    ecx,0x6
  42016c:	mov    rdi,rax
  42016f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420174:	jmp    42017a <flatcc_json_parser_float@@Base+0x143>
  420176:	mov    rax,QWORD PTR [rbp-0x8]
  42017a:	leave  
  42017b:	ret    

000000000042017c <flatcc_json_parser_generic_json@@Base>:
  42017c:	endbr64 
  420180:	push   rbp
  420181:	mov    rbp,rsp
  420184:	sub    rsp,0x260
  42018b:	mov    QWORD PTR [rbp-0x248],rdi
  420192:	mov    QWORD PTR [rbp-0x250],rsi
  420199:	mov    QWORD PTR [rbp-0x258],rdx
  4201a0:	mov    rax,QWORD PTR fs:0x28
  4201a9:	mov    QWORD PTR [rbp-0x8],rax
  4201ad:	xor    eax,eax
  4201af:	mov    DWORD PTR [rbp-0x234],0x0
  4201b9:	lea    rax,[rbp-0x210]
  4201c0:	mov    QWORD PTR [rbp-0x230],rax
  4201c7:	mov    rax,QWORD PTR [rbp-0x230]
  4201ce:	add    rax,0x200
  4201d4:	mov    QWORD PTR [rbp-0x228],rax
  4201db:	mov    rax,QWORD PTR [rbp-0x250]
  4201e2:	cmp    rax,QWORD PTR [rbp-0x258]
  4201e9:	jne    4201f7 <flatcc_json_parser_generic_json@@Base+0x7b>
  4201eb:	mov    rax,QWORD PTR [rbp-0x250]
  4201f2:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  4201f7:	lea    rax,[rbp-0x210]
  4201fe:	cmp    QWORD PTR [rbp-0x230],rax
  420205:	je     42032c <flatcc_json_parser_generic_json@@Base+0x1b0>
  42020b:	mov    rax,QWORD PTR [rbp-0x230]
  420212:	dec    rax
  420215:	movzx  eax,BYTE PTR [rax]
  420218:	cmp    al,0x7d
  42021a:	jne    42032c <flatcc_json_parser_generic_json@@Base+0x1b0>
  420220:	mov    rdx,QWORD PTR [rbp-0x258]
  420227:	mov    rcx,QWORD PTR [rbp-0x250]
  42022e:	mov    rax,QWORD PTR [rbp-0x248]
  420235:	mov    rsi,rcx
  420238:	mov    rdi,rax
  42023b:	call   41b254 <flatcc_emitter_copy_buffer@@Base+0x2f9>
  420240:	mov    QWORD PTR [rbp-0x250],rax
  420247:	mov    rdx,QWORD PTR [rbp-0x258]
  42024e:	mov    rcx,QWORD PTR [rbp-0x250]
  420255:	mov    rax,QWORD PTR [rbp-0x248]
  42025c:	mov    rsi,rcx
  42025f:	mov    rdi,rax
  420262:	call   41b2cb <flatcc_emitter_copy_buffer@@Base+0x370>
  420267:	mov    QWORD PTR [rbp-0x250],rax
  42026e:	mov    rdx,QWORD PTR [rbp-0x258]
  420275:	mov    rcx,QWORD PTR [rbp-0x250]
  42027c:	mov    rax,QWORD PTR [rbp-0x248]
  420283:	mov    rsi,rcx
  420286:	mov    rdi,rax
  420289:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  42028e:	mov    QWORD PTR [rbp-0x250],rax
  420295:	mov    rax,QWORD PTR [rbp-0x250]
  42029c:	cmp    rax,QWORD PTR [rbp-0x258]
  4202a3:	jne    4202cc <flatcc_json_parser_generic_json@@Base+0x150>
  4202a5:	mov    rdx,QWORD PTR [rbp-0x258]
  4202ac:	mov    rsi,QWORD PTR [rbp-0x250]
  4202b3:	mov    rax,QWORD PTR [rbp-0x248]
  4202ba:	mov    ecx,0xa
  4202bf:	mov    rdi,rax
  4202c2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4202c7:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  4202cc:	mov    rax,QWORD PTR [rbp-0x250]
  4202d3:	movzx  eax,BYTE PTR [rax]
  4202d6:	cmp    al,0x3a
  4202d8:	je     420301 <flatcc_json_parser_generic_json@@Base+0x185>
  4202da:	mov    rdx,QWORD PTR [rbp-0x258]
  4202e1:	mov    rsi,QWORD PTR [rbp-0x250]
  4202e8:	mov    rax,QWORD PTR [rbp-0x248]
  4202ef:	mov    ecx,0x4
  4202f4:	mov    rdi,rax
  4202f7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4202fc:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  420301:	mov    rax,QWORD PTR [rbp-0x250]
  420308:	lea    rcx,[rax+0x1]
  42030c:	mov    rdx,QWORD PTR [rbp-0x258]
  420313:	mov    rax,QWORD PTR [rbp-0x248]
  42031a:	mov    rsi,rcx
  42031d:	mov    rdi,rax
  420320:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  420325:	mov    QWORD PTR [rbp-0x250],rax
  42032c:	mov    rax,QWORD PTR [rbp-0x250]
  420333:	movzx  eax,BYTE PTR [rax]
  420336:	movsx  eax,al
  420339:	cmp    eax,0x39
  42033c:	jg     42035a <flatcc_json_parser_generic_json@@Base+0x1de>
  42033e:	cmp    eax,0x30
  420341:	jge    42045b <flatcc_json_parser_generic_json@@Base+0x2df>
  420347:	cmp    eax,0x22
  42034a:	je     420371 <flatcc_json_parser_generic_json@@Base+0x1f5>
  42034c:	cmp    eax,0x2d
  42034f:	je     42045b <flatcc_json_parser_generic_json@@Base+0x2df>
  420355:	jmp    4205c7 <flatcc_json_parser_generic_json@@Base+0x44b>
  42035a:	cmp    eax,0x5b
  42035d:	je     420487 <flatcc_json_parser_generic_json@@Base+0x30b>
  420363:	cmp    eax,0x7b
  420366:	je     420529 <flatcc_json_parser_generic_json@@Base+0x3ad>
  42036c:	jmp    4205c7 <flatcc_json_parser_generic_json@@Base+0x44b>
  420371:	mov    rdx,QWORD PTR [rbp-0x258]
  420378:	mov    rcx,QWORD PTR [rbp-0x250]
  42037f:	mov    rax,QWORD PTR [rbp-0x248]
  420386:	mov    rsi,rcx
  420389:	mov    rdi,rax
  42038c:	call   41b1b8 <flatcc_emitter_copy_buffer@@Base+0x25d>
  420391:	mov    QWORD PTR [rbp-0x250],rax
  420398:	jmp    42040a <flatcc_json_parser_generic_json@@Base+0x28e>
  42039a:	mov    rdx,QWORD PTR [rbp-0x258]
  4203a1:	mov    rcx,QWORD PTR [rbp-0x250]
  4203a8:	mov    rax,QWORD PTR [rbp-0x248]
  4203af:	mov    rsi,rcx
  4203b2:	mov    rdi,rax
  4203b5:	call   41f0f8 <flatcc_json_parser_string_part@@Base>
  4203ba:	mov    QWORD PTR [rbp-0x250],rax
  4203c1:	mov    rax,QWORD PTR [rbp-0x250]
  4203c8:	cmp    rax,QWORD PTR [rbp-0x258]
  4203cf:	je     4203df <flatcc_json_parser_generic_json@@Base+0x263>
  4203d1:	mov    rax,QWORD PTR [rbp-0x250]
  4203d8:	movzx  eax,BYTE PTR [rax]
  4203db:	cmp    al,0x22
  4203dd:	je     42042e <flatcc_json_parser_generic_json@@Base+0x2b2>
  4203df:	lea    rcx,[rbp-0x214]
  4203e6:	mov    rdx,QWORD PTR [rbp-0x258]
  4203ed:	mov    rsi,QWORD PTR [rbp-0x250]
  4203f4:	mov    rax,QWORD PTR [rbp-0x248]
  4203fb:	mov    rdi,rax
  4203fe:	call   41f2f4 <flatcc_json_parser_string_escape@@Base>
  420403:	mov    QWORD PTR [rbp-0x250],rax
  42040a:	mov    rax,QWORD PTR [rbp-0x250]
  420411:	cmp    rax,QWORD PTR [rbp-0x258]
  420418:	je     42042f <flatcc_json_parser_generic_json@@Base+0x2b3>
  42041a:	mov    rax,QWORD PTR [rbp-0x250]
  420421:	movzx  eax,BYTE PTR [rax]
  420424:	cmp    al,0x22
  420426:	jne    42039a <flatcc_json_parser_generic_json@@Base+0x21e>
  42042c:	jmp    42042f <flatcc_json_parser_generic_json@@Base+0x2b3>
  42042e:	nop
  42042f:	mov    rdx,QWORD PTR [rbp-0x258]
  420436:	mov    rcx,QWORD PTR [rbp-0x250]
  42043d:	mov    rax,QWORD PTR [rbp-0x248]
  420444:	mov    rsi,rcx
  420447:	mov    rdi,rax
  42044a:	call   41b206 <flatcc_emitter_copy_buffer@@Base+0x2ab>
  42044f:	mov    QWORD PTR [rbp-0x250],rax
  420456:	jmp    420640 <flatcc_json_parser_generic_json@@Base+0x4c4>
  42045b:	mov    rdx,QWORD PTR [rbp-0x258]
  420462:	mov    rcx,QWORD PTR [rbp-0x250]
  420469:	mov    rax,QWORD PTR [rbp-0x248]
  420470:	mov    rsi,rcx
  420473:	mov    rdi,rax
  420476:	call   41fc69 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  42047b:	mov    QWORD PTR [rbp-0x250],rax
  420482:	jmp    420640 <flatcc_json_parser_generic_json@@Base+0x4c4>
  420487:	mov    rax,QWORD PTR [rbp-0x230]
  42048e:	cmp    rax,QWORD PTR [rbp-0x228]
  420495:	jne    4204be <flatcc_json_parser_generic_json@@Base+0x342>
  420497:	mov    rdx,QWORD PTR [rbp-0x258]
  42049e:	mov    rsi,QWORD PTR [rbp-0x250]
  4204a5:	mov    rax,QWORD PTR [rbp-0x248]
  4204ac:	mov    ecx,0x2
  4204b1:	mov    rdi,rax
  4204b4:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4204b9:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  4204be:	mov    rax,QWORD PTR [rbp-0x230]
  4204c5:	lea    rdx,[rax+0x1]
  4204c9:	mov    QWORD PTR [rbp-0x230],rdx
  4204d0:	mov    BYTE PTR [rax],0x5d
  4204d3:	mov    rax,QWORD PTR [rbp-0x250]
  4204da:	lea    rcx,[rax+0x1]
  4204de:	mov    rdx,QWORD PTR [rbp-0x258]
  4204e5:	mov    rax,QWORD PTR [rbp-0x248]
  4204ec:	mov    rsi,rcx
  4204ef:	mov    rdi,rax
  4204f2:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  4204f7:	mov    QWORD PTR [rbp-0x250],rax
  4204fe:	mov    rax,QWORD PTR [rbp-0x250]
  420505:	cmp    rax,QWORD PTR [rbp-0x258]
  42050c:	je     4201db <flatcc_json_parser_generic_json@@Base+0x5f>
  420512:	mov    rax,QWORD PTR [rbp-0x250]
  420519:	movzx  eax,BYTE PTR [rax]
  42051c:	cmp    al,0x5d
  42051e:	je     420633 <flatcc_json_parser_generic_json@@Base+0x4b7>
  420524:	jmp    4201db <flatcc_json_parser_generic_json@@Base+0x5f>
  420529:	mov    rax,QWORD PTR [rbp-0x230]
  420530:	cmp    rax,QWORD PTR [rbp-0x228]
  420537:	jne    420560 <flatcc_json_parser_generic_json@@Base+0x3e4>
  420539:	mov    rdx,QWORD PTR [rbp-0x258]
  420540:	mov    rsi,QWORD PTR [rbp-0x250]
  420547:	mov    rax,QWORD PTR [rbp-0x248]
  42054e:	mov    ecx,0x2
  420553:	mov    rdi,rax
  420556:	call   41f09d <flatcc_json_parser_set_error@@Base>
  42055b:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  420560:	mov    rax,QWORD PTR [rbp-0x230]
  420567:	lea    rdx,[rax+0x1]
  42056b:	mov    QWORD PTR [rbp-0x230],rdx
  420572:	mov    BYTE PTR [rax],0x7d
  420575:	mov    rax,QWORD PTR [rbp-0x250]
  42057c:	lea    rcx,[rax+0x1]
  420580:	mov    rdx,QWORD PTR [rbp-0x258]
  420587:	mov    rax,QWORD PTR [rbp-0x248]
  42058e:	mov    rsi,rcx
  420591:	mov    rdi,rax
  420594:	call   41b14a <flatcc_emitter_copy_buffer@@Base+0x1ef>
  420599:	mov    QWORD PTR [rbp-0x250],rax
  4205a0:	mov    rax,QWORD PTR [rbp-0x250]
  4205a7:	cmp    rax,QWORD PTR [rbp-0x258]
  4205ae:	je     4201db <flatcc_json_parser_generic_json@@Base+0x5f>
  4205b4:	mov    rax,QWORD PTR [rbp-0x250]
  4205bb:	movzx  eax,BYTE PTR [rax]
  4205be:	cmp    al,0x7d
  4205c0:	je     420639 <flatcc_json_parser_generic_json@@Base+0x4bd>
  4205c2:	jmp    4201db <flatcc_json_parser_generic_json@@Base+0x5f>
  4205c7:	mov    rax,QWORD PTR [rbp-0x250]
  4205ce:	mov    QWORD PTR [rbp-0x220],rax
  4205d5:	mov    rdx,QWORD PTR [rbp-0x258]
  4205dc:	mov    rcx,QWORD PTR [rbp-0x220]
  4205e3:	mov    rax,QWORD PTR [rbp-0x248]
  4205ea:	mov    rsi,rcx
  4205ed:	mov    rdi,rax
  4205f0:	call   41f8c3 <flatcc_json_parser_skip_constant@@Base>
  4205f5:	mov    QWORD PTR [rbp-0x250],rax
  4205fc:	mov    rax,QWORD PTR [rbp-0x220]
  420603:	cmp    rax,QWORD PTR [rbp-0x250]
  42060a:	jne    42063f <flatcc_json_parser_generic_json@@Base+0x4c3>
  42060c:	mov    rdx,QWORD PTR [rbp-0x258]
  420613:	mov    rsi,QWORD PTR [rbp-0x250]
  42061a:	mov    rax,QWORD PTR [rbp-0x248]
  420621:	mov    ecx,0x5
  420626:	mov    rdi,rax
  420629:	call   41f09d <flatcc_json_parser_set_error@@Base>
  42062e:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  420633:	nop
  420634:	jmp    4206c8 <flatcc_json_parser_generic_json@@Base+0x54c>
  420639:	nop
  42063a:	jmp    4206c8 <flatcc_json_parser_generic_json@@Base+0x54c>
  42063f:	nop
  420640:	jmp    4206c8 <flatcc_json_parser_generic_json@@Base+0x54c>
  420645:	dec    QWORD PTR [rbp-0x230]
  42064c:	mov    rax,QWORD PTR [rbp-0x230]
  420653:	movzx  eax,BYTE PTR [rax]
  420656:	cmp    al,0x5d
  420658:	jne    420687 <flatcc_json_parser_generic_json@@Base+0x50b>
  42065a:	lea    rcx,[rbp-0x234]
  420661:	mov    rdx,QWORD PTR [rbp-0x258]
  420668:	mov    rsi,QWORD PTR [rbp-0x250]
  42066f:	mov    rax,QWORD PTR [rbp-0x248]
  420676:	mov    rdi,rax
  420679:	call   41b644 <flatcc_emitter_copy_buffer@@Base+0x6e9>
  42067e:	mov    QWORD PTR [rbp-0x250],rax
  420685:	jmp    4206b2 <flatcc_json_parser_generic_json@@Base+0x536>
  420687:	lea    rcx,[rbp-0x234]
  42068e:	mov    rdx,QWORD PTR [rbp-0x258]
  420695:	mov    rsi,QWORD PTR [rbp-0x250]
  42069c:	mov    rax,QWORD PTR [rbp-0x248]
  4206a3:	mov    rdi,rax
  4206a6:	call   41b449 <flatcc_emitter_copy_buffer@@Base+0x4ee>
  4206ab:	mov    QWORD PTR [rbp-0x250],rax
  4206b2:	mov    eax,DWORD PTR [rbp-0x234]
  4206b8:	test   eax,eax
  4206ba:	je     4206c8 <flatcc_json_parser_generic_json@@Base+0x54c>
  4206bc:	inc    QWORD PTR [rbp-0x230]
  4206c3:	jmp    4201db <flatcc_json_parser_generic_json@@Base+0x5f>
  4206c8:	mov    rax,QWORD PTR [rbp-0x250]
  4206cf:	cmp    rax,QWORD PTR [rbp-0x258]
  4206d6:	je     4206ec <flatcc_json_parser_generic_json@@Base+0x570>
  4206d8:	lea    rax,[rbp-0x210]
  4206df:	cmp    QWORD PTR [rbp-0x230],rax
  4206e6:	jne    420645 <flatcc_json_parser_generic_json@@Base+0x4c9>
  4206ec:	mov    rax,QWORD PTR [rbp-0x250]
  4206f3:	cmp    rax,QWORD PTR [rbp-0x258]
  4206fa:	jne    420748 <flatcc_json_parser_generic_json@@Base+0x5cc>
  4206fc:	lea    rax,[rbp-0x210]
  420703:	cmp    QWORD PTR [rbp-0x230],rax
  42070a:	je     420748 <flatcc_json_parser_generic_json@@Base+0x5cc>
  42070c:	mov    rax,QWORD PTR [rbp-0x230]
  420713:	dec    rax
  420716:	movzx  eax,BYTE PTR [rax]
  420719:	cmp    al,0x5d
  42071b:	jne    420724 <flatcc_json_parser_generic_json@@Base+0x5a8>
  42071d:	mov    ecx,0x9
  420722:	jmp    420729 <flatcc_json_parser_generic_json@@Base+0x5ad>
  420724:	mov    ecx,0xa
  420729:	mov    rdx,QWORD PTR [rbp-0x258]
  420730:	mov    rsi,QWORD PTR [rbp-0x250]
  420737:	mov    rax,QWORD PTR [rbp-0x248]
  42073e:	mov    rdi,rax
  420741:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420746:	jmp    42074f <flatcc_json_parser_generic_json@@Base+0x5d3>
  420748:	mov    rax,QWORD PTR [rbp-0x250]
  42074f:	mov    rdi,QWORD PTR [rbp-0x8]
  420753:	xor    rdi,QWORD PTR fs:0x28
  42075c:	je     420763 <flatcc_json_parser_generic_json@@Base+0x5e7>
  42075e:	call   403200 <__stack_chk_fail@plt>
  420763:	leave  
  420764:	ret    

0000000000420765 <flatcc_json_parser_integer@@Base>:
  420765:	endbr64 
  420769:	push   rbp
  42076a:	mov    rbp,rsp
  42076d:	sub    rsp,0x50
  420771:	mov    QWORD PTR [rbp-0x28],rdi
  420775:	mov    QWORD PTR [rbp-0x30],rsi
  420779:	mov    QWORD PTR [rbp-0x38],rdx
  42077d:	mov    QWORD PTR [rbp-0x40],rcx
  420781:	mov    QWORD PTR [rbp-0x48],r8
  420785:	mov    QWORD PTR [rbp-0x18],0x0
  42078d:	mov    rax,QWORD PTR [rbp-0x30]
  420791:	cmp    rax,QWORD PTR [rbp-0x38]
  420795:	jne    4207a0 <flatcc_json_parser_integer@@Base+0x3b>
  420797:	mov    rax,QWORD PTR [rbp-0x30]
  42079b:	jmp    4208c0 <flatcc_json_parser_integer@@Base+0x15b>
  4207a0:	mov    rax,QWORD PTR [rbp-0x30]
  4207a4:	mov    QWORD PTR [rbp-0x10],rax
  4207a8:	mov    rax,QWORD PTR [rbp-0x30]
  4207ac:	movzx  eax,BYTE PTR [rax]
  4207af:	cmp    al,0x2d
  4207b1:	sete   al
  4207b4:	movzx  edx,al
  4207b7:	mov    rax,QWORD PTR [rbp-0x40]
  4207bb:	mov    DWORD PTR [rax],edx
  4207bd:	mov    rax,QWORD PTR [rbp-0x40]
  4207c1:	mov    eax,DWORD PTR [rax]
  4207c3:	cdqe   
  4207c5:	add    QWORD PTR [rbp-0x30],rax
  4207c9:	jmp    420837 <flatcc_json_parser_integer@@Base+0xd2>
  4207cb:	mov    rax,QWORD PTR [rbp-0x18]
  4207cf:	mov    QWORD PTR [rbp-0x8],rax
  4207d3:	mov    rdx,QWORD PTR [rbp-0x18]
  4207d7:	mov    rax,rdx
  4207da:	shl    rax,0x2
  4207de:	add    rax,rdx
  4207e1:	add    rax,rax
  4207e4:	mov    rdx,rax
  4207e7:	mov    rax,QWORD PTR [rbp-0x30]
  4207eb:	movzx  eax,BYTE PTR [rax]
  4207ee:	movsx  rax,al
  4207f2:	add    rax,rdx
  4207f5:	sub    rax,0x30
  4207f9:	mov    QWORD PTR [rbp-0x18],rax
  4207fd:	mov    rax,QWORD PTR [rbp-0x8]
  420801:	cmp    rax,QWORD PTR [rbp-0x18]
  420805:	jbe    420833 <flatcc_json_parser_integer@@Base+0xce>
  420807:	cmp    QWORD PTR [rbp-0x40],0x0
  42080c:	je     420815 <flatcc_json_parser_integer@@Base+0xb0>
  42080e:	mov    ecx,0x8
  420813:	jmp    42081a <flatcc_json_parser_integer@@Base+0xb5>
  420815:	mov    ecx,0x7
  42081a:	mov    rdx,QWORD PTR [rbp-0x38]
  42081e:	mov    rsi,QWORD PTR [rbp-0x30]
  420822:	mov    rax,QWORD PTR [rbp-0x28]
  420826:	mov    rdi,rax
  420829:	call   41f09d <flatcc_json_parser_set_error@@Base>
  42082e:	jmp    4208c0 <flatcc_json_parser_integer@@Base+0x15b>
  420833:	inc    QWORD PTR [rbp-0x30]
  420837:	mov    rax,QWORD PTR [rbp-0x30]
  42083b:	cmp    rax,QWORD PTR [rbp-0x38]
  42083f:	je     42085b <flatcc_json_parser_integer@@Base+0xf6>
  420841:	mov    rax,QWORD PTR [rbp-0x30]
  420845:	movzx  eax,BYTE PTR [rax]
  420848:	cmp    al,0x2f
  42084a:	jle    42085b <flatcc_json_parser_integer@@Base+0xf6>
  42084c:	mov    rax,QWORD PTR [rbp-0x30]
  420850:	movzx  eax,BYTE PTR [rax]
  420853:	cmp    al,0x39
  420855:	jle    4207cb <flatcc_json_parser_integer@@Base+0x66>
  42085b:	mov    rax,QWORD PTR [rbp-0x30]
  42085f:	cmp    rax,QWORD PTR [rbp-0x10]
  420863:	jne    42086b <flatcc_json_parser_integer@@Base+0x106>
  420865:	mov    rax,QWORD PTR [rbp-0x30]
  420869:	jmp    4208c0 <flatcc_json_parser_integer@@Base+0x15b>
  42086b:	mov    rax,QWORD PTR [rbp-0x30]
  42086f:	cmp    rax,QWORD PTR [rbp-0x38]
  420873:	je     4208b1 <flatcc_json_parser_integer@@Base+0x14c>
  420875:	mov    rax,QWORD PTR [rbp-0x30]
  420879:	movzx  eax,BYTE PTR [rax]
  42087c:	cmp    al,0x65
  42087e:	je     420896 <flatcc_json_parser_integer@@Base+0x131>
  420880:	mov    rax,QWORD PTR [rbp-0x30]
  420884:	movzx  eax,BYTE PTR [rax]
  420887:	cmp    al,0x45
  420889:	je     420896 <flatcc_json_parser_integer@@Base+0x131>
  42088b:	mov    rax,QWORD PTR [rbp-0x30]
  42088f:	movzx  eax,BYTE PTR [rax]
  420892:	cmp    al,0x2e
  420894:	jne    4208b1 <flatcc_json_parser_integer@@Base+0x14c>
  420896:	mov    rdx,QWORD PTR [rbp-0x38]
  42089a:	mov    rsi,QWORD PTR [rbp-0x30]
  42089e:	mov    rax,QWORD PTR [rbp-0x28]
  4208a2:	mov    ecx,0xc
  4208a7:	mov    rdi,rax
  4208aa:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4208af:	jmp    4208c0 <flatcc_json_parser_integer@@Base+0x15b>
  4208b1:	mov    rax,QWORD PTR [rbp-0x48]
  4208b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4208b9:	mov    QWORD PTR [rax],rdx
  4208bc:	mov    rax,QWORD PTR [rbp-0x30]
  4208c0:	leave  
  4208c1:	ret    

00000000004208c2 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  4208c2:	endbr64 
  4208c6:	push   rbp
  4208c7:	mov    rbp,rsp
  4208ca:	sub    rsp,0x70
  4208ce:	mov    QWORD PTR [rbp-0x48],rdi
  4208d2:	mov    QWORD PTR [rbp-0x50],rsi
  4208d6:	mov    QWORD PTR [rbp-0x58],rdx
  4208da:	mov    QWORD PTR [rbp-0x60],rcx
  4208de:	mov    DWORD PTR [rbp-0x64],r8d
  4208e2:	mov    rax,QWORD PTR fs:0x28
  4208eb:	mov    QWORD PTR [rbp-0x8],rax
  4208ef:	xor    eax,eax
  4208f1:	cmp    DWORD PTR [rbp-0x64],0x0
  4208f5:	setne  al
  4208f8:	movzx  eax,al
  4208fb:	mov    DWORD PTR [rbp-0x38],eax
  4208fe:	mov    rdx,QWORD PTR [rbp-0x58]
  420902:	mov    rcx,QWORD PTR [rbp-0x50]
  420906:	mov    rax,QWORD PTR [rbp-0x48]
  42090a:	mov    rsi,rcx
  42090d:	mov    rdi,rax
  420910:	call   41b1b8 <flatcc_emitter_copy_buffer@@Base+0x25d>
  420915:	mov    QWORD PTR [rbp-0x50],rax
  420919:	mov    rax,QWORD PTR [rbp-0x50]
  42091d:	mov    QWORD PTR [rbp-0x20],rax
  420921:	mov    rdx,QWORD PTR [rbp-0x58]
  420925:	mov    rcx,QWORD PTR [rbp-0x20]
  420929:	mov    rax,QWORD PTR [rbp-0x48]
  42092d:	mov    rsi,rcx
  420930:	mov    rdi,rax
  420933:	call   41f0f8 <flatcc_json_parser_string_part@@Base>
  420938:	mov    QWORD PTR [rbp-0x50],rax
  42093c:	mov    rax,QWORD PTR [rbp-0x50]
  420940:	cmp    rax,QWORD PTR [rbp-0x58]
  420944:	je     420ac0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  42094a:	mov    rax,QWORD PTR [rbp-0x50]
  42094e:	movzx  eax,BYTE PTR [rax]
  420951:	cmp    al,0x22
  420953:	jne    420ac0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  420959:	mov    rax,QWORD PTR [rbp-0x50]
  42095d:	sub    rax,QWORD PTR [rbp-0x20]
  420961:	mov    rdi,rax
  420964:	call   41e769 <grisu3_diy_fp_encode_double@@Base+0x115c>
  420969:	mov    QWORD PTR [rbp-0x18],rax
  42096d:	mov    rax,QWORD PTR [rbp-0x48]
  420971:	mov    rax,QWORD PTR [rax]
  420974:	mov    ecx,0xffffffff
  420979:	mov    edx,0x1
  42097e:	mov    esi,0x1
  420983:	mov    rdi,rax
  420986:	call   417932 <flatcc_builder_start_vector@@Base>
  42098b:	test   eax,eax
  42098d:	jne    420a91 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1cf>
  420993:	mov    rax,QWORD PTR [rbp-0x48]
  420997:	mov    rax,QWORD PTR [rax]
  42099a:	mov    rdx,QWORD PTR [rbp-0x18]
  42099e:	mov    rsi,rdx
  4209a1:	mov    rdi,rax
  4209a4:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  4209a9:	mov    QWORD PTR [rbp-0x10],rax
  4209ad:	cmp    QWORD PTR [rbp-0x10],0x0
  4209b2:	je     420a94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  4209b8:	mov    rax,QWORD PTR [rbp-0x50]
  4209bc:	sub    rax,QWORD PTR [rbp-0x20]
  4209c0:	mov    QWORD PTR [rbp-0x28],rax
  4209c4:	mov    rax,QWORD PTR [rbp-0x18]
  4209c8:	mov    QWORD PTR [rbp-0x30],rax
  4209cc:	mov    edi,DWORD PTR [rbp-0x38]
  4209cf:	lea    rcx,[rbp-0x28]
  4209d3:	lea    rdx,[rbp-0x30]
  4209d7:	mov    rsi,QWORD PTR [rbp-0x20]
  4209db:	mov    rax,QWORD PTR [rbp-0x10]
  4209df:	mov    r8d,edi
  4209e2:	mov    rdi,rax
  4209e5:	call   41eab8 <grisu3_diy_fp_encode_double@@Base+0x14ab>
  4209ea:	mov    DWORD PTR [rbp-0x34],eax
  4209ed:	cmp    DWORD PTR [rbp-0x34],0x0
  4209f1:	je     420a07 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  4209f3:	mov    rdx,QWORD PTR [rbp-0x28]
  4209f7:	mov    rax,QWORD PTR [rbp-0x20]
  4209fb:	add    rax,rdx
  4209fe:	mov    QWORD PTR [rbp-0x50],rax
  420a02:	jmp    420ac1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  420a07:	mov    rax,QWORD PTR [rbp-0x50]
  420a0b:	sub    rax,QWORD PTR [rbp-0x20]
  420a0f:	mov    rdx,QWORD PTR [rbp-0x28]
  420a13:	cmp    rax,rdx
  420a16:	je     420a2c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16a>
  420a18:	mov    rdx,QWORD PTR [rbp-0x28]
  420a1c:	mov    rax,QWORD PTR [rbp-0x20]
  420a20:	add    rax,rdx
  420a23:	mov    QWORD PTR [rbp-0x50],rax
  420a27:	jmp    420ac1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  420a2c:	mov    rax,QWORD PTR [rbp-0x30]
  420a30:	cmp    QWORD PTR [rbp-0x18],rax
  420a34:	jbe    420a57 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x195>
  420a36:	mov    rax,QWORD PTR [rbp-0x30]
  420a3a:	mov    rdx,QWORD PTR [rbp-0x18]
  420a3e:	sub    rdx,rax
  420a41:	mov    rax,QWORD PTR [rbp-0x48]
  420a45:	mov    rax,QWORD PTR [rax]
  420a48:	mov    rsi,rdx
  420a4b:	mov    rdi,rax
  420a4e:	call   4176bc <flatcc_builder_truncate_vector@@Base>
  420a53:	test   eax,eax
  420a55:	jne    420a97 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d5>
  420a57:	mov    rax,QWORD PTR [rbp-0x48]
  420a5b:	mov    rax,QWORD PTR [rax]
  420a5e:	mov    rdi,rax
  420a61:	call   418b27 <flatcc_builder_end_vector@@Base>
  420a66:	mov    edx,eax
  420a68:	mov    rax,QWORD PTR [rbp-0x60]
  420a6c:	mov    DWORD PTR [rax],edx
  420a6e:	mov    rax,QWORD PTR [rbp-0x60]
  420a72:	mov    eax,DWORD PTR [rax]
  420a74:	test   eax,eax
  420a76:	je     420a9a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
  420a78:	mov    rdx,QWORD PTR [rbp-0x58]
  420a7c:	mov    rcx,QWORD PTR [rbp-0x50]
  420a80:	mov    rax,QWORD PTR [rbp-0x48]
  420a84:	mov    rsi,rcx
  420a87:	mov    rdi,rax
  420a8a:	call   41b206 <flatcc_emitter_copy_buffer@@Base+0x2ab>
  420a8f:	jmp    420af1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  420a91:	nop
  420a92:	jmp    420a9b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  420a94:	nop
  420a95:	jmp    420a9b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  420a97:	nop
  420a98:	jmp    420a9b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  420a9a:	nop
  420a9b:	mov    rax,QWORD PTR [rbp-0x60]
  420a9f:	mov    DWORD PTR [rax],0x0
  420aa5:	mov    rdx,QWORD PTR [rbp-0x58]
  420aa9:	mov    rsi,QWORD PTR [rbp-0x50]
  420aad:	mov    rax,QWORD PTR [rbp-0x48]
  420ab1:	mov    ecx,0x21
  420ab6:	mov    rdi,rax
  420ab9:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420abe:	jmp    420af1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  420ac0:	nop
  420ac1:	mov    rax,QWORD PTR [rbp-0x60]
  420ac5:	mov    DWORD PTR [rax],0x0
  420acb:	cmp    DWORD PTR [rbp-0x64],0x0
  420acf:	je     420ad8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x216>
  420ad1:	mov    ecx,0x20
  420ad6:	jmp    420add <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  420ad8:	mov    ecx,0x1f
  420add:	mov    rdx,QWORD PTR [rbp-0x58]
  420ae1:	mov    rsi,QWORD PTR [rbp-0x50]
  420ae5:	mov    rax,QWORD PTR [rbp-0x48]
  420ae9:	mov    rdi,rax
  420aec:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420af1:	mov    rdi,QWORD PTR [rbp-0x8]
  420af5:	xor    rdi,QWORD PTR fs:0x28
  420afe:	je     420b05 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x243>
  420b00:	call   403200 <__stack_chk_fail@plt>
  420b05:	leave  
  420b06:	ret    

0000000000420b07 <flatcc_json_parser_build_string@@Base>:
  420b07:	endbr64 
  420b0b:	push   rbp
  420b0c:	mov    rbp,rsp
  420b0f:	sub    rsp,0x40
  420b13:	mov    QWORD PTR [rbp-0x28],rdi
  420b17:	mov    QWORD PTR [rbp-0x30],rsi
  420b1b:	mov    QWORD PTR [rbp-0x38],rdx
  420b1f:	mov    QWORD PTR [rbp-0x40],rcx
  420b23:	mov    rax,QWORD PTR fs:0x28
  420b2c:	mov    QWORD PTR [rbp-0x8],rax
  420b30:	xor    eax,eax
  420b32:	mov    rdx,QWORD PTR [rbp-0x38]
  420b36:	mov    rcx,QWORD PTR [rbp-0x30]
  420b3a:	mov    rax,QWORD PTR [rbp-0x28]
  420b3e:	mov    rsi,rcx
  420b41:	mov    rdi,rax
  420b44:	call   41b1b8 <flatcc_emitter_copy_buffer@@Base+0x25d>
  420b49:	mov    QWORD PTR [rbp-0x30],rax
  420b4d:	mov    rax,QWORD PTR [rbp-0x30]
  420b51:	mov    QWORD PTR [rbp-0x18],rax
  420b55:	mov    rdx,QWORD PTR [rbp-0x38]
  420b59:	mov    rcx,QWORD PTR [rbp-0x18]
  420b5d:	mov    rax,QWORD PTR [rbp-0x28]
  420b61:	mov    rsi,rcx
  420b64:	mov    rdi,rax
  420b67:	call   41f0f8 <flatcc_json_parser_string_part@@Base>
  420b6c:	mov    QWORD PTR [rbp-0x30],rax
  420b70:	mov    rax,QWORD PTR [rbp-0x30]
  420b74:	cmp    rax,QWORD PTR [rbp-0x38]
  420b78:	je     420bb3 <flatcc_json_parser_build_string@@Base+0xac>
  420b7a:	mov    rax,QWORD PTR [rbp-0x30]
  420b7e:	movzx  eax,BYTE PTR [rax]
  420b81:	cmp    al,0x22
  420b83:	jne    420bb3 <flatcc_json_parser_build_string@@Base+0xac>
  420b85:	mov    rax,QWORD PTR [rbp-0x30]
  420b89:	sub    rax,QWORD PTR [rbp-0x18]
  420b8d:	mov    rdx,rax
  420b90:	mov    rax,QWORD PTR [rbp-0x28]
  420b94:	mov    rax,QWORD PTR [rax]
  420b97:	mov    rcx,QWORD PTR [rbp-0x18]
  420b9b:	mov    rsi,rcx
  420b9e:	mov    rdi,rax
  420ba1:	call   4199c9 <flatcc_builder_create_string@@Base>
  420ba6:	mov    edx,eax
  420ba8:	mov    rax,QWORD PTR [rbp-0x40]
  420bac:	mov    DWORD PTR [rax],edx
  420bae:	jmp    420cc2 <flatcc_json_parser_build_string@@Base+0x1bb>
  420bb3:	mov    rax,QWORD PTR [rbp-0x28]
  420bb7:	mov    rax,QWORD PTR [rax]
  420bba:	mov    rdi,rax
  420bbd:	call   417ac5 <flatcc_builder_start_string@@Base>
  420bc2:	test   eax,eax
  420bc4:	jne    420cdb <flatcc_json_parser_build_string@@Base+0x1d4>
  420bca:	mov    rax,QWORD PTR [rbp-0x30]
  420bce:	sub    rax,QWORD PTR [rbp-0x18]
  420bd2:	mov    rdx,rax
  420bd5:	mov    rax,QWORD PTR [rbp-0x28]
  420bd9:	mov    rax,QWORD PTR [rax]
  420bdc:	mov    rcx,QWORD PTR [rbp-0x18]
  420be0:	mov    rsi,rcx
  420be3:	mov    rdi,rax
  420be6:	call   4175b9 <flatcc_builder_append_string@@Base>
  420beb:	test   rax,rax
  420bee:	je     420cdb <flatcc_json_parser_build_string@@Base+0x1d4>
  420bf4:	jmp    420c92 <flatcc_json_parser_build_string@@Base+0x18b>
  420bf9:	lea    rcx,[rbp-0xc]
  420bfd:	mov    rdx,QWORD PTR [rbp-0x38]
  420c01:	mov    rsi,QWORD PTR [rbp-0x30]
  420c05:	mov    rax,QWORD PTR [rbp-0x28]
  420c09:	mov    rdi,rax
  420c0c:	call   41f2f4 <flatcc_json_parser_string_escape@@Base>
  420c11:	mov    QWORD PTR [rbp-0x30],rax
  420c15:	movzx  eax,BYTE PTR [rbp-0xc]
  420c19:	movsx  rdx,al
  420c1d:	lea    rax,[rbp-0xc]
  420c21:	inc    rax
  420c24:	mov    rcx,QWORD PTR [rbp-0x28]
  420c28:	mov    rcx,QWORD PTR [rcx]
  420c2b:	mov    rsi,rax
  420c2e:	mov    rdi,rcx
  420c31:	call   4175b9 <flatcc_builder_append_string@@Base>
  420c36:	test   rax,rax
  420c39:	je     420cde <flatcc_json_parser_build_string@@Base+0x1d7>
  420c3f:	mov    rax,QWORD PTR [rbp-0x30]
  420c43:	mov    QWORD PTR [rbp-0x18],rax
  420c47:	mov    rdx,QWORD PTR [rbp-0x38]
  420c4b:	mov    rcx,QWORD PTR [rbp-0x18]
  420c4f:	mov    rax,QWORD PTR [rbp-0x28]
  420c53:	mov    rsi,rcx
  420c56:	mov    rdi,rax
  420c59:	call   41f0f8 <flatcc_json_parser_string_part@@Base>
  420c5e:	mov    QWORD PTR [rbp-0x30],rax
  420c62:	mov    rax,QWORD PTR [rbp-0x30]
  420c66:	cmp    rax,QWORD PTR [rbp-0x38]
  420c6a:	je     420c92 <flatcc_json_parser_build_string@@Base+0x18b>
  420c6c:	mov    rax,QWORD PTR [rbp-0x30]
  420c70:	sub    rax,QWORD PTR [rbp-0x18]
  420c74:	mov    rdx,rax
  420c77:	mov    rax,QWORD PTR [rbp-0x28]
  420c7b:	mov    rax,QWORD PTR [rax]
  420c7e:	mov    rcx,QWORD PTR [rbp-0x18]
  420c82:	mov    rsi,rcx
  420c85:	mov    rdi,rax
  420c88:	call   4175b9 <flatcc_builder_append_string@@Base>
  420c8d:	test   rax,rax
  420c90:	je     420ce1 <flatcc_json_parser_build_string@@Base+0x1da>
  420c92:	mov    rax,QWORD PTR [rbp-0x30]
  420c96:	cmp    rax,QWORD PTR [rbp-0x38]
  420c9a:	je     420cab <flatcc_json_parser_build_string@@Base+0x1a4>
  420c9c:	mov    rax,QWORD PTR [rbp-0x30]
  420ca0:	movzx  eax,BYTE PTR [rax]
  420ca3:	cmp    al,0x22
  420ca5:	jne    420bf9 <flatcc_json_parser_build_string@@Base+0xf2>
  420cab:	mov    rax,QWORD PTR [rbp-0x28]
  420caf:	mov    rax,QWORD PTR [rax]
  420cb2:	mov    rdi,rax
  420cb5:	call   419c48 <flatcc_builder_end_string@@Base>
  420cba:	mov    edx,eax
  420cbc:	mov    rax,QWORD PTR [rbp-0x40]
  420cc0:	mov    DWORD PTR [rax],edx
  420cc2:	mov    rdx,QWORD PTR [rbp-0x38]
  420cc6:	mov    rcx,QWORD PTR [rbp-0x30]
  420cca:	mov    rax,QWORD PTR [rbp-0x28]
  420cce:	mov    rsi,rcx
  420cd1:	mov    rdi,rax
  420cd4:	call   41b206 <flatcc_emitter_copy_buffer@@Base+0x2ab>
  420cd9:	jmp    420cf0 <flatcc_json_parser_build_string@@Base+0x1e9>
  420cdb:	nop
  420cdc:	jmp    420ce2 <flatcc_json_parser_build_string@@Base+0x1db>
  420cde:	nop
  420cdf:	jmp    420ce2 <flatcc_json_parser_build_string@@Base+0x1db>
  420ce1:	nop
  420ce2:	mov    rax,QWORD PTR [rbp-0x40]
  420ce6:	mov    DWORD PTR [rax],0x0
  420cec:	mov    rax,QWORD PTR [rbp-0x30]
  420cf0:	mov    rsi,QWORD PTR [rbp-0x8]
  420cf4:	xor    rsi,QWORD PTR fs:0x28
  420cfd:	je     420d04 <flatcc_json_parser_build_string@@Base+0x1fd>
  420cff:	call   403200 <__stack_chk_fail@plt>
  420d04:	leave  
  420d05:	ret    

0000000000420d06 <flatcc_json_parser_prepare_unions@@Base>:
  420d06:	endbr64 
  420d0a:	push   rbp
  420d0b:	mov    rbp,rsp
  420d0e:	sub    rsp,0x40
  420d12:	mov    QWORD PTR [rbp-0x18],rdi
  420d16:	mov    QWORD PTR [rbp-0x20],rsi
  420d1a:	mov    QWORD PTR [rbp-0x28],rdx
  420d1e:	mov    QWORD PTR [rbp-0x30],rcx
  420d22:	mov    QWORD PTR [rbp-0x38],r8
  420d26:	mov    rdx,QWORD PTR [rbp-0x30]
  420d2a:	mov    rax,rdx
  420d2d:	shl    rax,0x2
  420d31:	add    rax,rdx
  420d34:	shl    rax,0x3
  420d38:	lea    rdx,[rax+0x10]
  420d3c:	mov    rax,QWORD PTR [rbp-0x18]
  420d40:	mov    rax,QWORD PTR [rax]
  420d43:	mov    rsi,rdx
  420d46:	mov    rdi,rax
  420d49:	call   415cdf <flatcc_builder_enter_user_frame@@Base>
  420d4e:	mov    rdx,rax
  420d51:	mov    rax,QWORD PTR [rbp-0x38]
  420d55:	mov    QWORD PTR [rax],rdx
  420d58:	mov    rax,QWORD PTR [rbp-0x38]
  420d5c:	mov    rax,QWORD PTR [rax]
  420d5f:	test   rax,rax
  420d62:	jne    420d7f <flatcc_json_parser_prepare_unions@@Base+0x79>
  420d64:	mov    rdx,QWORD PTR [rbp-0x28]
  420d68:	mov    rsi,QWORD PTR [rbp-0x20]
  420d6c:	mov    rax,QWORD PTR [rbp-0x18]
  420d70:	mov    ecx,0x21
  420d75:	mov    rdi,rax
  420d78:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420d7d:	jmp    420dab <flatcc_json_parser_prepare_unions@@Base+0xa5>
  420d7f:	mov    rax,QWORD PTR [rbp-0x38]
  420d83:	mov    rdx,QWORD PTR [rax]
  420d86:	mov    rax,QWORD PTR [rbp-0x18]
  420d8a:	mov    rax,QWORD PTR [rax]
  420d8d:	mov    rsi,rdx
  420d90:	mov    rdi,rax
  420d93:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  420d98:	mov    QWORD PTR [rbp-0x8],rax
  420d9c:	mov    rax,QWORD PTR [rbp-0x8]
  420da0:	mov    rdx,QWORD PTR [rbp-0x30]
  420da4:	mov    QWORD PTR [rax],rdx
  420da7:	mov    rax,QWORD PTR [rbp-0x20]
  420dab:	leave  
  420dac:	ret    

0000000000420dad <flatcc_json_parser_finalize_unions@@Base>:
  420dad:	endbr64 
  420db1:	push   rbp
  420db2:	mov    rbp,rsp
  420db5:	sub    rsp,0x30
  420db9:	mov    QWORD PTR [rbp-0x18],rdi
  420dbd:	mov    QWORD PTR [rbp-0x20],rsi
  420dc1:	mov    QWORD PTR [rbp-0x28],rdx
  420dc5:	mov    QWORD PTR [rbp-0x30],rcx
  420dc9:	mov    rax,QWORD PTR [rbp-0x18]
  420dcd:	mov    rax,QWORD PTR [rax]
  420dd0:	mov    rdx,QWORD PTR [rbp-0x30]
  420dd4:	mov    rsi,rdx
  420dd7:	mov    rdi,rax
  420dda:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  420ddf:	mov    QWORD PTR [rbp-0x8],rax
  420de3:	mov    rax,QWORD PTR [rbp-0x8]
  420de7:	mov    rax,QWORD PTR [rax+0x8]
  420deb:	test   rax,rax
  420dee:	je     420e0d <flatcc_json_parser_finalize_unions@@Base+0x60>
  420df0:	mov    rdx,QWORD PTR [rbp-0x28]
  420df4:	mov    rsi,QWORD PTR [rbp-0x20]
  420df8:	mov    rax,QWORD PTR [rbp-0x18]
  420dfc:	mov    ecx,0x1b
  420e01:	mov    rdi,rax
  420e04:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420e09:	mov    QWORD PTR [rbp-0x20],rax
  420e0d:	mov    rax,QWORD PTR [rbp-0x18]
  420e11:	mov    rax,QWORD PTR [rax]
  420e14:	mov    rdx,QWORD PTR [rbp-0x30]
  420e18:	mov    rsi,rdx
  420e1b:	mov    rdi,rax
  420e1e:	call   415e4a <flatcc_builder_exit_user_frame_at@@Base>
  420e23:	mov    rax,QWORD PTR [rbp-0x20]
  420e27:	leave  
  420e28:	ret    

0000000000420e29 <flatcc_json_parser_union@@Base>:
  420e29:	endbr64 
  420e2d:	push   rbp
  420e2e:	mov    rbp,rsp
  420e31:	sub    rsp,0x60
  420e35:	mov    QWORD PTR [rbp-0x28],rdi
  420e39:	mov    QWORD PTR [rbp-0x30],rsi
  420e3d:	mov    QWORD PTR [rbp-0x38],rdx
  420e41:	mov    QWORD PTR [rbp-0x40],rcx
  420e45:	mov    eax,r8d
  420e48:	mov    QWORD PTR [rbp-0x50],r9
  420e4c:	mov    WORD PTR [rbp-0x44],ax
  420e50:	mov    rax,QWORD PTR [rbp+0x10]
  420e54:	mov    QWORD PTR [rbp-0x58],rax
  420e58:	mov    rax,QWORD PTR fs:0x28
  420e61:	mov    QWORD PTR [rbp-0x8],rax
  420e65:	xor    eax,eax
  420e67:	mov    rax,QWORD PTR [rbp-0x28]
  420e6b:	mov    rax,QWORD PTR [rax]
  420e6e:	mov    rdx,QWORD PTR [rbp-0x50]
  420e72:	mov    rsi,rdx
  420e75:	mov    rdi,rax
  420e78:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  420e7d:	mov    QWORD PTR [rbp-0x20],rax
  420e81:	mov    rdx,QWORD PTR [rbp-0x40]
  420e85:	mov    rax,rdx
  420e88:	shl    rax,0x2
  420e8c:	add    rax,rdx
  420e8f:	shl    rax,0x3
  420e93:	mov    rdx,QWORD PTR [rbp-0x20]
  420e97:	add    rax,rdx
  420e9a:	add    rax,0x10
  420e9e:	mov    QWORD PTR [rbp-0x18],rax
  420ea2:	mov    rax,QWORD PTR [rbp-0x18]
  420ea6:	mov    rax,QWORD PTR [rax]
  420ea9:	test   rax,rax
  420eac:	je     420ecc <flatcc_json_parser_union@@Base+0xa3>
  420eae:	mov    rdx,QWORD PTR [rbp-0x38]
  420eb2:	mov    rsi,QWORD PTR [rbp-0x30]
  420eb6:	mov    rax,QWORD PTR [rbp-0x28]
  420eba:	mov    ecx,0x1c
  420ebf:	mov    rdi,rax
  420ec2:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420ec7:	jmp    420ff0 <flatcc_json_parser_union@@Base+0x1c7>
  420ecc:	mov    rax,QWORD PTR [rbp-0x18]
  420ed0:	movzx  eax,BYTE PTR [rax+0x14]
  420ed4:	test   al,al
  420ed6:	jne    420f38 <flatcc_json_parser_union@@Base+0x10f>
  420ed8:	mov    rax,QWORD PTR [rbp-0x20]
  420edc:	mov    rax,QWORD PTR [rax+0x8]
  420ee0:	lea    rdx,[rax+0x1]
  420ee4:	mov    rax,QWORD PTR [rbp-0x20]
  420ee8:	mov    QWORD PTR [rax+0x8],rdx
  420eec:	mov    rax,QWORD PTR [rbp-0x28]
  420ef0:	mov    edx,DWORD PTR [rax+0x18]
  420ef3:	mov    rax,QWORD PTR [rbp-0x18]
  420ef7:	mov    DWORD PTR [rax+0x10],edx
  420efa:	mov    rax,QWORD PTR [rbp-0x28]
  420efe:	mov    rdx,QWORD PTR [rax+0x8]
  420f02:	mov    rax,QWORD PTR [rbp-0x18]
  420f06:	mov    QWORD PTR [rax+0x8],rdx
  420f0a:	mov    rax,QWORD PTR [rbp-0x18]
  420f0e:	mov    rdx,QWORD PTR [rbp-0x30]
  420f12:	mov    QWORD PTR [rax],rdx
  420f15:	mov    rax,QWORD PTR [rbp-0x18]
  420f19:	mov    rcx,QWORD PTR [rax]
  420f1c:	mov    rdx,QWORD PTR [rbp-0x38]
  420f20:	mov    rax,QWORD PTR [rbp-0x28]
  420f24:	mov    rsi,rcx
  420f27:	mov    rdi,rax
  420f2a:	call   42017c <flatcc_json_parser_generic_json@@Base>
  420f2f:	mov    QWORD PTR [rbp-0x30],rax
  420f33:	jmp    420fec <flatcc_json_parser_union@@Base+0x1c3>
  420f38:	mov    rax,QWORD PTR [rbp-0x18]
  420f3c:	movzx  eax,BYTE PTR [rax+0x15]
  420f40:	mov    BYTE PTR [rbp-0x10],al
  420f43:	mov    rax,QWORD PTR [rbp-0x18]
  420f47:	movzx  eax,BYTE PTR [rax+0x15]
  420f4b:	test   al,al
  420f4d:	jne    420f6d <flatcc_json_parser_union@@Base+0x144>
  420f4f:	mov    rdx,QWORD PTR [rbp-0x38]
  420f53:	mov    rsi,QWORD PTR [rbp-0x30]
  420f57:	mov    rax,QWORD PTR [rbp-0x28]
  420f5b:	mov    ecx,0x19
  420f60:	mov    rdi,rax
  420f63:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420f68:	jmp    420ff0 <flatcc_json_parser_union@@Base+0x1c7>
  420f6d:	mov    rax,QWORD PTR [rbp-0x20]
  420f71:	mov    rax,QWORD PTR [rax+0x8]
  420f75:	lea    rdx,[rax-0x1]
  420f79:	mov    rax,QWORD PTR [rbp-0x20]
  420f7d:	mov    QWORD PTR [rax+0x8],rdx
  420f81:	mov    rax,QWORD PTR [rbp-0x18]
  420f85:	movzx  eax,BYTE PTR [rax+0x15]
  420f89:	movzx  ecx,al
  420f8c:	lea    rax,[rbp-0x10]
  420f90:	lea    r8,[rax+0x4]
  420f94:	mov    rdx,QWORD PTR [rbp-0x38]
  420f98:	mov    rsi,QWORD PTR [rbp-0x30]
  420f9c:	mov    rdi,QWORD PTR [rbp-0x28]
  420fa0:	mov    rax,QWORD PTR [rbp-0x58]
  420fa4:	call   rax
  420fa6:	mov    QWORD PTR [rbp-0x30],rax
  420faa:	mov    rax,QWORD PTR [rbp-0x30]
  420fae:	cmp    rax,QWORD PTR [rbp-0x38]
  420fb2:	je     420fec <flatcc_json_parser_union@@Base+0x1c3>
  420fb4:	movzx  ecx,WORD PTR [rbp-0x44]
  420fb8:	mov    rax,QWORD PTR [rbp-0x28]
  420fbc:	mov    rax,QWORD PTR [rax]
  420fbf:	mov    rdx,QWORD PTR [rbp-0x10]
  420fc3:	mov    esi,ecx
  420fc5:	mov    rdi,rax
  420fc8:	call   419119 <flatcc_builder_table_add_union@@Base>
  420fcd:	test   eax,eax
  420fcf:	je     420fec <flatcc_json_parser_union@@Base+0x1c3>
  420fd1:	mov    rdx,QWORD PTR [rbp-0x38]
  420fd5:	mov    rsi,QWORD PTR [rbp-0x30]
  420fd9:	mov    rax,QWORD PTR [rbp-0x28]
  420fdd:	mov    ecx,0x1c
  420fe2:	mov    rdi,rax
  420fe5:	call   41f09d <flatcc_json_parser_set_error@@Base>
  420fea:	jmp    420ff0 <flatcc_json_parser_union@@Base+0x1c7>
  420fec:	mov    rax,QWORD PTR [rbp-0x30]
  420ff0:	mov    rdi,QWORD PTR [rbp-0x8]
  420ff4:	xor    rdi,QWORD PTR fs:0x28
  420ffd:	je     421004 <flatcc_json_parser_union@@Base+0x1db>
  420fff:	call   403200 <__stack_chk_fail@plt>
  421004:	leave  
  421005:	ret    

0000000000421006 <flatcc_json_parser_union_type@@Base>:
  421006:	endbr64 
  42100a:	push   rbp
  42100b:	mov    rbp,rsp
  42100e:	add    rsp,0xffffffffffffff80
  421012:	mov    QWORD PTR [rbp-0x48],rdi
  421016:	mov    QWORD PTR [rbp-0x50],rsi
  42101a:	mov    QWORD PTR [rbp-0x58],rdx
  42101e:	mov    QWORD PTR [rbp-0x60],rcx
  421022:	mov    eax,r8d
  421025:	mov    QWORD PTR [rbp-0x70],r9
  421029:	mov    WORD PTR [rbp-0x64],ax
  42102d:	mov    rax,QWORD PTR [rbp+0x10]
  421031:	mov    QWORD PTR [rbp-0x78],rax
  421035:	mov    rax,QWORD PTR [rbp+0x18]
  421039:	mov    QWORD PTR [rbp-0x80],rax
  42103d:	mov    rax,QWORD PTR fs:0x28
  421046:	mov    QWORD PTR [rbp-0x8],rax
  42104a:	xor    eax,eax
  42104c:	mov    rax,QWORD PTR [rbp-0x48]
  421050:	mov    rax,QWORD PTR [rax]
  421053:	mov    rdx,QWORD PTR [rbp-0x70]
  421057:	mov    rsi,rdx
  42105a:	mov    rdi,rax
  42105d:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  421062:	mov    QWORD PTR [rbp-0x30],rax
  421066:	mov    rax,QWORD PTR [rbp-0x30]
  42106a:	lea    rcx,[rax+0x10]
  42106e:	mov    rdx,QWORD PTR [rbp-0x60]
  421072:	mov    rax,rdx
  421075:	shl    rax,0x2
  421079:	add    rax,rdx
  42107c:	shl    rax,0x3
  421080:	add    rax,rcx
  421083:	mov    QWORD PTR [rbp-0x28],rax
  421087:	mov    rax,QWORD PTR [rbp-0x28]
  42108b:	movzx  eax,BYTE PTR [rax+0x14]
  42108f:	test   al,al
  421091:	je     4210b1 <flatcc_json_parser_union_type@@Base+0xab>
  421093:	mov    rdx,QWORD PTR [rbp-0x58]
  421097:	mov    rsi,QWORD PTR [rbp-0x50]
  42109b:	mov    rax,QWORD PTR [rbp-0x48]
  42109f:	mov    ecx,0x1c
  4210a4:	mov    rdi,rax
  4210a7:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4210ac:	jmp    42124f <flatcc_json_parser_union_type@@Base+0x249>
  4210b1:	mov    rax,QWORD PTR [rbp-0x28]
  4210b5:	mov    BYTE PTR [rax+0x14],0x1
  4210b9:	mov    rax,QWORD PTR [rbp-0x28]
  4210bd:	lea    rcx,[rax+0x15]
  4210c1:	mov    rax,QWORD PTR [rbp-0x50]
  4210c5:	mov    QWORD PTR [rbp-0x20],rax
  4210c9:	mov    rdx,QWORD PTR [rbp-0x58]
  4210cd:	mov    rsi,QWORD PTR [rbp-0x20]
  4210d1:	mov    rax,QWORD PTR [rbp-0x48]
  4210d5:	mov    rdi,rax
  4210d8:	call   41bce9 <flatcc_emitter_copy_buffer@@Base+0xd8e>
  4210dd:	mov    QWORD PTR [rbp-0x50],rax
  4210e1:	mov    rax,QWORD PTR [rbp-0x20]
  4210e5:	cmp    rax,QWORD PTR [rbp-0x50]
  4210e9:	jne    421112 <flatcc_json_parser_union_type@@Base+0x10c>
  4210eb:	mov    rax,QWORD PTR [rbp-0x28]
  4210ef:	lea    rdi,[rax+0x15]
  4210f3:	mov    rcx,QWORD PTR [rbp-0x78]
  4210f7:	mov    rdx,QWORD PTR [rbp-0x58]
  4210fb:	mov    rsi,QWORD PTR [rbp-0x50]
  4210ff:	mov    rax,QWORD PTR [rbp-0x48]
  421103:	mov    r8,rdi
  421106:	mov    rdi,rax
  421109:	call   41c281 <flatcc_emitter_copy_buffer@@Base+0x1326>
  42110e:	mov    QWORD PTR [rbp-0x50],rax
  421112:	mov    rax,QWORD PTR [rbp-0x28]
  421116:	mov    rax,QWORD PTR [rax]
  421119:	test   rax,rax
  42111c:	jne    42114a <flatcc_json_parser_union_type@@Base+0x144>
  42111e:	mov    rax,QWORD PTR [rbp-0x30]
  421122:	mov    rdx,QWORD PTR [rax+0x8]
  421126:	mov    rax,QWORD PTR [rbp-0x28]
  42112a:	movzx  eax,BYTE PTR [rax+0x15]
  42112e:	test   al,al
  421130:	setne  al
  421133:	movzx  eax,al
  421136:	add    rdx,rax
  421139:	mov    rax,QWORD PTR [rbp-0x30]
  42113d:	mov    QWORD PTR [rax+0x8],rdx
  421141:	mov    rax,QWORD PTR [rbp-0x50]
  421145:	jmp    42124f <flatcc_json_parser_union_type@@Base+0x249>
  42114a:	mov    rax,QWORD PTR [rbp-0x30]
  42114e:	mov    rax,QWORD PTR [rax+0x8]
  421152:	test   rax,rax
  421155:	jne    421176 <flatcc_json_parser_union_type@@Base+0x170>
  421157:	lea    rcx,[rip+0x3252]        # 4243b0 <flatcc_builder_padding_base@@Base+0x2010>
  42115e:	mov    edx,0x3c5
  421163:	lea    rsi,[rip+0x2d2e]        # 423e98 <flatcc_builder_padding_base@@Base+0x1af8>
  42116a:	lea    rdi,[rip+0x2d8b]        # 423efc <flatcc_builder_padding_base@@Base+0x1b5c>
  421171:	call   403220 <__assert_fail@plt>
  421176:	mov    rax,QWORD PTR [rbp-0x30]
  42117a:	mov    rax,QWORD PTR [rax+0x8]
  42117e:	lea    rdx,[rax-0x1]
  421182:	mov    rax,QWORD PTR [rbp-0x30]
  421186:	mov    QWORD PTR [rax+0x8],rdx
  42118a:	mov    rax,QWORD PTR [rbp-0x48]
  42118e:	mov    eax,DWORD PTR [rax+0x18]
  421191:	mov    DWORD PTR [rbp-0x34],eax
  421194:	mov    rax,QWORD PTR [rbp-0x48]
  421198:	mov    rax,QWORD PTR [rax+0x8]
  42119c:	mov    QWORD PTR [rbp-0x18],rax
  4211a0:	mov    rax,QWORD PTR [rbp-0x28]
  4211a4:	mov    edx,DWORD PTR [rax+0x10]
  4211a7:	mov    rax,QWORD PTR [rbp-0x48]
  4211ab:	mov    DWORD PTR [rax+0x18],edx
  4211ae:	mov    rax,QWORD PTR [rbp-0x28]
  4211b2:	mov    rdx,QWORD PTR [rax+0x8]
  4211b6:	mov    rax,QWORD PTR [rbp-0x48]
  4211ba:	mov    QWORD PTR [rax+0x8],rdx
  4211be:	mov    rax,QWORD PTR [rbp-0x28]
  4211c2:	movzx  eax,BYTE PTR [rax+0x15]
  4211c6:	mov    BYTE PTR [rbp-0x10],al
  4211c9:	mov    rax,QWORD PTR [rbp-0x28]
  4211cd:	movzx  eax,BYTE PTR [rax+0x15]
  4211d1:	movzx  ecx,al
  4211d4:	mov    rax,QWORD PTR [rbp-0x28]
  4211d8:	mov    rsi,QWORD PTR [rax]
  4211db:	lea    rax,[rbp-0x10]
  4211df:	lea    r8,[rax+0x4]
  4211e3:	mov    rdx,QWORD PTR [rbp-0x58]
  4211e7:	mov    rdi,QWORD PTR [rbp-0x48]
  4211eb:	mov    rax,QWORD PTR [rbp-0x80]
  4211ef:	call   rax
  4211f1:	cmp    QWORD PTR [rbp-0x58],rax
  4211f5:	jne    4211fd <flatcc_json_parser_union_type@@Base+0x1f7>
  4211f7:	mov    rax,QWORD PTR [rbp-0x58]
  4211fb:	jmp    42124f <flatcc_json_parser_union_type@@Base+0x249>
  4211fd:	movzx  ecx,WORD PTR [rbp-0x64]
  421201:	mov    rax,QWORD PTR [rbp-0x48]
  421205:	mov    rax,QWORD PTR [rax]
  421208:	mov    rdx,QWORD PTR [rbp-0x10]
  42120c:	mov    esi,ecx
  42120e:	mov    rdi,rax
  421211:	call   419119 <flatcc_builder_table_add_union@@Base>
  421216:	test   eax,eax
  421218:	je     421235 <flatcc_json_parser_union_type@@Base+0x22f>
  42121a:	mov    rdx,QWORD PTR [rbp-0x58]
  42121e:	mov    rsi,QWORD PTR [rbp-0x50]
  421222:	mov    rax,QWORD PTR [rbp-0x48]
  421226:	mov    ecx,0x1c
  42122b:	mov    rdi,rax
  42122e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  421233:	jmp    42124f <flatcc_json_parser_union_type@@Base+0x249>
  421235:	mov    rax,QWORD PTR [rbp-0x48]
  421239:	mov    edx,DWORD PTR [rbp-0x34]
  42123c:	mov    DWORD PTR [rax+0x18],edx
  42123f:	mov    rax,QWORD PTR [rbp-0x48]
  421243:	mov    rdx,QWORD PTR [rbp-0x18]
  421247:	mov    QWORD PTR [rax+0x8],rdx
  42124b:	mov    rax,QWORD PTR [rbp-0x50]
  42124f:	mov    rdi,QWORD PTR [rbp-0x8]
  421253:	xor    rdi,QWORD PTR fs:0x28
  42125c:	je     421263 <flatcc_json_parser_union_type@@Base+0x25d>
  42125e:	call   403200 <__stack_chk_fail@plt>
  421263:	leave  
  421264:	ret    
  421265:	endbr64 
  421269:	push   rbp
  42126a:	mov    rbp,rsp
  42126d:	sub    rsp,0x60
  421271:	mov    QWORD PTR [rbp-0x38],rdi
  421275:	mov    QWORD PTR [rbp-0x40],rsi
  421279:	mov    QWORD PTR [rbp-0x48],rdx
  42127d:	mov    QWORD PTR [rbp-0x50],rcx
  421281:	mov    DWORD PTR [rbp-0x54],r8d
  421285:	mov    eax,r9d
  421288:	mov    WORD PTR [rbp-0x58],ax
  42128c:	mov    rax,QWORD PTR [rbp+0x10]
  421290:	mov    QWORD PTR [rbp-0x60],rax
  421294:	mov    rax,QWORD PTR fs:0x28
  42129d:	mov    QWORD PTR [rbp-0x8],rax
  4212a1:	xor    eax,eax
  4212a3:	mov    DWORD PTR [rbp-0x28],0x0
  4212aa:	mov    rax,QWORD PTR [rbp-0x38]
  4212ae:	mov    rax,QWORD PTR [rax]
  4212b1:	mov    rdi,rax
  4212b4:	call   4179d4 <flatcc_builder_start_offset_vector@@Base>
  4212b9:	test   eax,eax
  4212bb:	jne    421450 <flatcc_json_parser_union_type@@Base+0x44a>
  4212c1:	lea    rcx,[rbp-0x24]
  4212c5:	mov    rdx,QWORD PTR [rbp-0x48]
  4212c9:	mov    rsi,QWORD PTR [rbp-0x40]
  4212cd:	mov    rax,QWORD PTR [rbp-0x38]
  4212d1:	mov    rdi,rax
  4212d4:	call   41b587 <flatcc_emitter_copy_buffer@@Base+0x62c>
  4212d9:	mov    QWORD PTR [rbp-0x40],rax
  4212dd:	mov    QWORD PTR [rbp-0x20],0x0
  4212e5:	jmp    4213b5 <flatcc_json_parser_union_type@@Base+0x3af>
  4212ea:	mov    eax,DWORD PTR [rbp-0x54]
  4212ed:	cmp    QWORD PTR [rbp-0x20],rax
  4212f1:	jne    421311 <flatcc_json_parser_union_type@@Base+0x30b>
  4212f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4212f7:	mov    rsi,QWORD PTR [rbp-0x40]
  4212fb:	mov    rax,QWORD PTR [rbp-0x38]
  4212ff:	mov    ecx,0x1e
  421304:	mov    rdi,rax
  421307:	call   41f09d <flatcc_json_parser_set_error@@Base>
  42130c:	jmp    421473 <flatcc_json_parser_union_type@@Base+0x46d>
  421311:	mov    rax,QWORD PTR [rbp-0x38]
  421315:	mov    rax,QWORD PTR [rax]
  421318:	mov    rdx,QWORD PTR [rbp-0x50]
  42131c:	mov    rsi,rdx
  42131f:	mov    rdi,rax
  421322:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  421327:	mov    QWORD PTR [rbp-0x18],rax
  42132b:	mov    rdx,QWORD PTR [rbp-0x18]
  42132f:	mov    rax,QWORD PTR [rbp-0x20]
  421333:	add    rax,rdx
  421336:	movzx  eax,BYTE PTR [rax]
  421339:	movzx  ecx,al
  42133c:	lea    r8,[rbp-0x28]
  421340:	mov    rdx,QWORD PTR [rbp-0x48]
  421344:	mov    rsi,QWORD PTR [rbp-0x40]
  421348:	mov    rdi,QWORD PTR [rbp-0x38]
  42134c:	mov    rax,QWORD PTR [rbp-0x60]
  421350:	call   rax
  421352:	mov    QWORD PTR [rbp-0x40],rax
  421356:	mov    rax,QWORD PTR [rbp-0x40]
  42135a:	cmp    rax,QWORD PTR [rbp-0x48]
  42135e:	jne    421369 <flatcc_json_parser_union_type@@Base+0x363>
  421360:	mov    rax,QWORD PTR [rbp-0x40]
  421364:	jmp    421473 <flatcc_json_parser_union_type@@Base+0x46d>
  421369:	mov    rax,QWORD PTR [rbp-0x38]
  42136d:	mov    rax,QWORD PTR [rax]
  421370:	mov    esi,0x1
  421375:	mov    rdi,rax
  421378:	call   4173b3 <flatcc_builder_extend_offset_vector@@Base>
  42137d:	mov    QWORD PTR [rbp-0x10],rax
  421381:	cmp    QWORD PTR [rbp-0x10],0x0
  421386:	je     421453 <flatcc_json_parser_union_type@@Base+0x44d>
  42138c:	mov    edx,DWORD PTR [rbp-0x28]
  42138f:	mov    rax,QWORD PTR [rbp-0x10]
  421393:	mov    DWORD PTR [rax],edx
  421395:	lea    rcx,[rbp-0x24]
  421399:	mov    rdx,QWORD PTR [rbp-0x48]
  42139d:	mov    rsi,QWORD PTR [rbp-0x40]
  4213a1:	mov    rax,QWORD PTR [rbp-0x38]
  4213a5:	mov    rdi,rax
  4213a8:	call   41b644 <flatcc_emitter_copy_buffer@@Base+0x6e9>
  4213ad:	mov    QWORD PTR [rbp-0x40],rax
  4213b1:	inc    QWORD PTR [rbp-0x20]
  4213b5:	mov    eax,DWORD PTR [rbp-0x24]
  4213b8:	test   eax,eax
  4213ba:	jne    4212ea <flatcc_json_parser_union_type@@Base+0x2e4>
  4213c0:	mov    eax,DWORD PTR [rbp-0x54]
  4213c3:	cmp    QWORD PTR [rbp-0x20],rax
  4213c7:	je     4213e7 <flatcc_json_parser_union_type@@Base+0x3e1>
  4213c9:	mov    rdx,QWORD PTR [rbp-0x48]
  4213cd:	mov    rsi,QWORD PTR [rbp-0x40]
  4213d1:	mov    rax,QWORD PTR [rbp-0x38]
  4213d5:	mov    ecx,0x1e
  4213da:	mov    rdi,rax
  4213dd:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4213e2:	jmp    421473 <flatcc_json_parser_union_type@@Base+0x46d>
  4213e7:	mov    rax,QWORD PTR [rbp-0x38]
  4213eb:	mov    rax,QWORD PTR [rax]
  4213ee:	mov    rdx,QWORD PTR [rbp-0x50]
  4213f2:	mov    rsi,rdx
  4213f5:	mov    rdi,rax
  4213f8:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  4213fd:	mov    QWORD PTR [rbp-0x18],rax
  421401:	mov    rax,QWORD PTR [rbp-0x38]
  421405:	mov    rax,QWORD PTR [rax]
  421408:	mov    rdx,QWORD PTR [rbp-0x18]
  42140c:	mov    rsi,rdx
  42140f:	mov    rdi,rax
  421412:	call   419057 <flatcc_builder_end_offset_vector_for_unions@@Base>
  421417:	mov    DWORD PTR [rbp-0x28],eax
  42141a:	mov    eax,DWORD PTR [rbp-0x28]
  42141d:	test   eax,eax
  42141f:	je     421456 <flatcc_json_parser_union_type@@Base+0x450>
  421421:	movzx  edx,WORD PTR [rbp-0x58]
  421425:	mov    rax,QWORD PTR [rbp-0x38]
  421429:	mov    rax,QWORD PTR [rax]
  42142c:	mov    esi,edx
  42142e:	mov    rdi,rax
  421431:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  421436:	mov    QWORD PTR [rbp-0x10],rax
  42143a:	cmp    QWORD PTR [rbp-0x10],0x0
  42143f:	je     421459 <flatcc_json_parser_union_type@@Base+0x453>
  421441:	mov    edx,DWORD PTR [rbp-0x28]
  421444:	mov    rax,QWORD PTR [rbp-0x10]
  421448:	mov    DWORD PTR [rax],edx
  42144a:	mov    rax,QWORD PTR [rbp-0x40]
  42144e:	jmp    421473 <flatcc_json_parser_union_type@@Base+0x46d>
  421450:	nop
  421451:	jmp    42145a <flatcc_json_parser_union_type@@Base+0x454>
  421453:	nop
  421454:	jmp    42145a <flatcc_json_parser_union_type@@Base+0x454>
  421456:	nop
  421457:	jmp    42145a <flatcc_json_parser_union_type@@Base+0x454>
  421459:	nop
  42145a:	mov    rdx,QWORD PTR [rbp-0x48]
  42145e:	mov    rsi,QWORD PTR [rbp-0x40]
  421462:	mov    rax,QWORD PTR [rbp-0x38]
  421466:	mov    ecx,0x21
  42146b:	mov    rdi,rax
  42146e:	call   41f09d <flatcc_json_parser_set_error@@Base>
  421473:	mov    rcx,QWORD PTR [rbp-0x8]
  421477:	xor    rcx,QWORD PTR fs:0x28
  421480:	je     421487 <flatcc_json_parser_union_type@@Base+0x481>
  421482:	call   403200 <__stack_chk_fail@plt>
  421487:	leave  
  421488:	ret    

0000000000421489 <flatcc_json_parser_union_vector@@Base>:
  421489:	endbr64 
  42148d:	push   rbp
  42148e:	mov    rbp,rsp
  421491:	sub    rsp,0x40
  421495:	mov    QWORD PTR [rbp-0x18],rdi
  421499:	mov    QWORD PTR [rbp-0x20],rsi
  42149d:	mov    QWORD PTR [rbp-0x28],rdx
  4214a1:	mov    QWORD PTR [rbp-0x30],rcx
  4214a5:	mov    eax,r8d
  4214a8:	mov    QWORD PTR [rbp-0x40],r9
  4214ac:	mov    WORD PTR [rbp-0x34],ax
  4214b0:	mov    rax,QWORD PTR [rbp-0x18]
  4214b4:	mov    rax,QWORD PTR [rax]
  4214b7:	mov    rdx,QWORD PTR [rbp-0x40]
  4214bb:	mov    rsi,rdx
  4214be:	mov    rdi,rax
  4214c1:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  4214c6:	mov    QWORD PTR [rbp-0x10],rax
  4214ca:	mov    rax,QWORD PTR [rbp-0x10]
  4214ce:	lea    rcx,[rax+0x10]
  4214d2:	mov    rdx,QWORD PTR [rbp-0x30]
  4214d6:	mov    rax,rdx
  4214d9:	shl    rax,0x2
  4214dd:	add    rax,rdx
  4214e0:	shl    rax,0x3
  4214e4:	add    rax,rcx
  4214e7:	mov    QWORD PTR [rbp-0x8],rax
  4214eb:	mov    rax,QWORD PTR [rbp-0x8]
  4214ef:	mov    rax,QWORD PTR [rax]
  4214f2:	test   rax,rax
  4214f5:	je     421515 <flatcc_json_parser_union_vector@@Base+0x8c>
  4214f7:	mov    rdx,QWORD PTR [rbp-0x28]
  4214fb:	mov    rsi,QWORD PTR [rbp-0x20]
  4214ff:	mov    rax,QWORD PTR [rbp-0x18]
  421503:	mov    ecx,0x1c
  421508:	mov    rdi,rax
  42150b:	call   41f09d <flatcc_json_parser_set_error@@Base>
  421510:	jmp    4215d3 <flatcc_json_parser_union_vector@@Base+0x14a>
  421515:	mov    rax,QWORD PTR [rbp-0x8]
  421519:	movzx  eax,BYTE PTR [rax+0x14]
  42151d:	test   al,al
  42151f:	jne    42157e <flatcc_json_parser_union_vector@@Base+0xf5>
  421521:	mov    rax,QWORD PTR [rbp-0x10]
  421525:	mov    rax,QWORD PTR [rax+0x8]
  421529:	lea    rdx,[rax+0x1]
  42152d:	mov    rax,QWORD PTR [rbp-0x10]
  421531:	mov    QWORD PTR [rax+0x8],rdx
  421535:	mov    rax,QWORD PTR [rbp-0x18]
  421539:	mov    edx,DWORD PTR [rax+0x18]
  42153c:	mov    rax,QWORD PTR [rbp-0x8]
  421540:	mov    DWORD PTR [rax+0x10],edx
  421543:	mov    rax,QWORD PTR [rbp-0x18]
  421547:	mov    rdx,QWORD PTR [rax+0x8]
  42154b:	mov    rax,QWORD PTR [rbp-0x8]
  42154f:	mov    QWORD PTR [rax+0x8],rdx
  421553:	mov    rax,QWORD PTR [rbp-0x8]
  421557:	mov    rdx,QWORD PTR [rbp-0x20]
  42155b:	mov    QWORD PTR [rax],rdx
  42155e:	mov    rax,QWORD PTR [rbp-0x8]
  421562:	mov    rcx,QWORD PTR [rax]
  421565:	mov    rdx,QWORD PTR [rbp-0x28]
  421569:	mov    rax,QWORD PTR [rbp-0x18]
  42156d:	mov    rsi,rcx
  421570:	mov    rdi,rax
  421573:	call   42017c <flatcc_json_parser_generic_json@@Base>
  421578:	mov    QWORD PTR [rbp-0x20],rax
  42157c:	jmp    4215cf <flatcc_json_parser_union_vector@@Base+0x146>
  42157e:	mov    rax,QWORD PTR [rbp-0x10]
  421582:	mov    rax,QWORD PTR [rax+0x8]
  421586:	lea    rdx,[rax-0x1]
  42158a:	mov    rax,QWORD PTR [rbp-0x10]
  42158e:	mov    QWORD PTR [rax+0x8],rdx
  421592:	movzx  r8d,WORD PTR [rbp-0x34]
  421597:	mov    rax,QWORD PTR [rbp-0x8]
  42159b:	mov    edi,DWORD PTR [rax+0x18]
  42159e:	mov    rax,QWORD PTR [rbp-0x8]
  4215a2:	mov    rcx,QWORD PTR [rax+0x20]
  4215a6:	mov    rdx,QWORD PTR [rbp-0x28]
  4215aa:	mov    rsi,QWORD PTR [rbp-0x20]
  4215ae:	mov    rax,QWORD PTR [rbp-0x18]
  4215b2:	sub    rsp,0x8
  4215b6:	push   QWORD PTR [rbp+0x10]
  4215b9:	mov    r9d,r8d
  4215bc:	mov    r8d,edi
  4215bf:	mov    rdi,rax
  4215c2:	call   421265 <flatcc_json_parser_union_type@@Base+0x25f>
  4215c7:	add    rsp,0x10
  4215cb:	mov    QWORD PTR [rbp-0x20],rax
  4215cf:	mov    rax,QWORD PTR [rbp-0x20]
  4215d3:	leave  
  4215d4:	ret    

00000000004215d5 <flatcc_json_parser_union_type_vector@@Base>:
  4215d5:	endbr64 
  4215d9:	push   rbp
  4215da:	mov    rbp,rsp
  4215dd:	sub    rsp,0xc0
  4215e4:	mov    QWORD PTR [rbp-0x78],rdi
  4215e8:	mov    QWORD PTR [rbp-0x80],rsi
  4215ec:	mov    QWORD PTR [rbp-0x88],rdx
  4215f3:	mov    QWORD PTR [rbp-0x90],rcx
  4215fa:	mov    eax,r8d
  4215fd:	mov    QWORD PTR [rbp-0xa0],r9
  421604:	mov    WORD PTR [rbp-0x94],ax
  42160b:	mov    rax,QWORD PTR [rbp+0x10]
  42160f:	mov    QWORD PTR [rbp-0xa8],rax
  421616:	mov    rax,QWORD PTR [rbp+0x18]
  42161a:	mov    QWORD PTR [rbp-0xb0],rax
  421621:	mov    rax,QWORD PTR [rbp+0x20]
  421625:	mov    QWORD PTR [rbp-0xb8],rax
  42162c:	mov    rax,QWORD PTR fs:0x28
  421635:	mov    QWORD PTR [rbp-0x8],rax
  421639:	xor    eax,eax
  42163b:	mov    rax,QWORD PTR [rbp-0x78]
  42163f:	mov    rax,QWORD PTR [rax]
  421642:	mov    rdx,QWORD PTR [rbp-0xa0]
  421649:	mov    rsi,rdx
  42164c:	mov    rdi,rax
  42164f:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  421654:	mov    QWORD PTR [rbp-0x50],rax
  421658:	mov    rax,QWORD PTR [rbp-0x50]
  42165c:	lea    rcx,[rax+0x10]
  421660:	mov    rdx,QWORD PTR [rbp-0x90]
  421667:	mov    rax,rdx
  42166a:	shl    rax,0x2
  42166e:	add    rax,rdx
  421671:	shl    rax,0x3
  421675:	add    rax,rcx
  421678:	mov    QWORD PTR [rbp-0x48],rax
  42167c:	mov    rax,QWORD PTR [rbp-0x48]
  421680:	movzx  eax,BYTE PTR [rax+0x14]
  421684:	test   al,al
  421686:	je     4216a9 <flatcc_json_parser_union_type_vector@@Base+0xd4>
  421688:	mov    rdx,QWORD PTR [rbp-0x88]
  42168f:	mov    rsi,QWORD PTR [rbp-0x80]
  421693:	mov    rax,QWORD PTR [rbp-0x78]
  421697:	mov    ecx,0x1c
  42169c:	mov    rdi,rax
  42169f:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4216a4:	jmp    421a70 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  4216a9:	mov    rax,QWORD PTR [rbp-0x48]
  4216ad:	mov    BYTE PTR [rax+0x14],0x1
  4216b1:	mov    rax,QWORD PTR [rbp-0x78]
  4216b5:	mov    rax,QWORD PTR [rax]
  4216b8:	mov    ecx,0xffffffff
  4216bd:	mov    edx,0x1
  4216c2:	mov    esi,0x1
  4216c7:	mov    rdi,rax
  4216ca:	call   417932 <flatcc_builder_start_vector@@Base>
  4216cf:	test   eax,eax
  4216d1:	jne    421a47 <flatcc_json_parser_union_type_vector@@Base+0x472>
  4216d7:	lea    rcx,[rbp-0x60]
  4216db:	mov    rdx,QWORD PTR [rbp-0x88]
  4216e2:	mov    rsi,QWORD PTR [rbp-0x80]
  4216e6:	mov    rax,QWORD PTR [rbp-0x78]
  4216ea:	mov    rdi,rax
  4216ed:	call   41b587 <flatcc_emitter_copy_buffer@@Base+0x62c>
  4216f2:	mov    QWORD PTR [rbp-0x80],rax
  4216f6:	jmp    42181c <flatcc_json_parser_union_type_vector@@Base+0x247>
  4216fb:	mov    rax,QWORD PTR [rbp-0x78]
  4216ff:	mov    rax,QWORD PTR [rax]
  421702:	mov    esi,0x1
  421707:	mov    rdi,rax
  42170a:	call   4171e2 <flatcc_builder_extend_vector@@Base>
  42170f:	mov    QWORD PTR [rbp-0x40],rax
  421713:	cmp    QWORD PTR [rbp-0x40],0x0
  421718:	je     421a4a <flatcc_json_parser_union_type_vector@@Base+0x475>
  42171e:	mov    rax,QWORD PTR [rbp-0x80]
  421722:	mov    QWORD PTR [rbp-0x38],rax
  421726:	lea    rcx,[rbp-0x61]
  42172a:	mov    rdx,QWORD PTR [rbp-0x88]
  421731:	mov    rsi,QWORD PTR [rbp-0x38]
  421735:	mov    rax,QWORD PTR [rbp-0x78]
  421739:	mov    rdi,rax
  42173c:	call   41bce9 <flatcc_emitter_copy_buffer@@Base+0xd8e>
  421741:	mov    QWORD PTR [rbp-0x80],rax
  421745:	mov    rax,QWORD PTR [rbp-0x38]
  421749:	cmp    rax,QWORD PTR [rbp-0x80]
  42174d:	jne    42179f <flatcc_json_parser_union_type_vector@@Base+0x1ca>
  42174f:	mov    rax,QWORD PTR [rbp-0x80]
  421753:	mov    QWORD PTR [rbp-0x38],rax
  421757:	lea    rdi,[rbp-0x61]
  42175b:	mov    rcx,QWORD PTR [rbp-0xa8]
  421762:	mov    rdx,QWORD PTR [rbp-0x88]
  421769:	mov    rsi,QWORD PTR [rbp-0x38]
  42176d:	mov    rax,QWORD PTR [rbp-0x78]
  421771:	mov    r8,rdi
  421774:	mov    rdi,rax
  421777:	call   41c281 <flatcc_emitter_copy_buffer@@Base+0x1326>
  42177c:	mov    QWORD PTR [rbp-0x80],rax
  421780:	mov    rax,QWORD PTR [rbp-0x80]
  421784:	cmp    rax,QWORD PTR [rbp-0x38]
  421788:	je     421a4d <flatcc_json_parser_union_type_vector@@Base+0x478>
  42178e:	mov    rax,QWORD PTR [rbp-0x80]
  421792:	cmp    rax,QWORD PTR [rbp-0x88]
  421799:	je     421a4d <flatcc_json_parser_union_type_vector@@Base+0x478>
  42179f:	movzx  eax,BYTE PTR [rbp-0x61]
  4217a3:	movzx  edx,al
  4217a6:	mov    rax,QWORD PTR [rbp-0xb8]
  4217ad:	mov    edi,edx
  4217af:	call   rax
  4217b1:	test   eax,eax
  4217b3:	jne    4217e8 <flatcc_json_parser_union_type_vector@@Base+0x213>
  4217b5:	mov    rax,QWORD PTR [rbp-0x78]
  4217b9:	mov    eax,DWORD PTR [rax+0x10]
  4217bc:	and    eax,0x1
  4217bf:	test   eax,eax
  4217c1:	jne    4217e4 <flatcc_json_parser_union_type_vector@@Base+0x20f>
  4217c3:	mov    rdx,QWORD PTR [rbp-0x88]
  4217ca:	mov    rsi,QWORD PTR [rbp-0x80]
  4217ce:	mov    rax,QWORD PTR [rbp-0x78]
  4217d2:	mov    ecx,0xf
  4217d7:	mov    rdi,rax
  4217da:	call   41f09d <flatcc_json_parser_set_error@@Base>
  4217df:	jmp    421a70 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  4217e4:	mov    BYTE PTR [rbp-0x61],0x0
  4217e8:	movzx  eax,BYTE PTR [rbp-0x61]
  4217ec:	movzx  edx,al
  4217ef:	mov    rax,QWORD PTR [rbp-0x40]
  4217f3:	mov    esi,edx
  4217f5:	mov    rdi,rax
  4217f8:	call   41b0a0 <flatcc_emitter_copy_buffer@@Base+0x145>
  4217fd:	lea    rcx,[rbp-0x60]
  421801:	mov    rdx,QWORD PTR [rbp-0x88]
  421808:	mov    rsi,QWORD PTR [rbp-0x80]
  42180c:	mov    rax,QWORD PTR [rbp-0x78]
  421810:	mov    rdi,rax
  421813:	call   41b644 <flatcc_emitter_copy_buffer@@Base+0x6e9>
  421818:	mov    QWORD PTR [rbp-0x80],rax
  42181c:	mov    eax,DWORD PTR [rbp-0x60]
  42181f:	test   eax,eax
  421821:	jne    4216fb <flatcc_json_parser_union_type_vector@@Base+0x126>
  421827:	mov    rax,QWORD PTR [rbp-0x78]
  42182b:	mov    rax,QWORD PTR [rax]
  42182e:	mov    rdi,rax
  421831:	call   418bdc <flatcc_builder_vector_count@@Base>
  421836:	mov    DWORD PTR [rbp-0x5c],eax
  421839:	mov    rax,QWORD PTR [rbp-0x48]
  42183d:	mov    edx,DWORD PTR [rbp-0x5c]
  421840:	mov    DWORD PTR [rax+0x18],edx
  421843:	mov    eax,DWORD PTR [rbp-0x5c]
  421846:	mov    QWORD PTR [rbp-0x30],rax
  42184a:	mov    rax,QWORD PTR [rbp-0x78]
  42184e:	mov    rax,QWORD PTR [rax]
  421851:	mov    rdx,QWORD PTR [rbp-0x30]
  421855:	mov    rsi,rdx
  421858:	mov    rdi,rax
  42185b:	call   415cdf <flatcc_builder_enter_user_frame@@Base>
  421860:	mov    QWORD PTR [rbp-0x28],rax
  421864:	mov    rax,QWORD PTR [rbp-0x78]
  421868:	mov    rax,QWORD PTR [rax]
  42186b:	mov    rdx,QWORD PTR [rbp-0x28]
  42186f:	mov    rsi,rdx
  421872:	mov    rdi,rax
  421875:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  42187a:	mov    QWORD PTR [rbp-0x20],rax
  42187e:	mov    rax,QWORD PTR [rbp-0x78]
  421882:	mov    rax,QWORD PTR [rax]
  421885:	mov    rdi,rax
  421888:	call   418bf7 <flatcc_builder_vector_edit@@Base>
  42188d:	mov    rcx,rax
  421890:	mov    rdx,QWORD PTR [rbp-0x30]
  421894:	mov    rax,QWORD PTR [rbp-0x20]
  421898:	mov    rsi,rcx
  42189b:	mov    rdi,rax
  42189e:	call   403290 <memcpy@plt>
  4218a3:	mov    rax,QWORD PTR [rbp-0x78]
  4218a7:	mov    rax,QWORD PTR [rax]
  4218aa:	mov    rdi,rax
  4218ad:	call   418b27 <flatcc_builder_end_vector@@Base>
  4218b2:	mov    DWORD PTR [rbp-0x58],eax
  4218b5:	cmp    DWORD PTR [rbp-0x58],0x0
  4218b9:	je     421a50 <flatcc_json_parser_union_type_vector@@Base+0x47b>
  4218bf:	movzx  eax,WORD PTR [rbp-0x94]
  4218c6:	lea    edx,[rax-0x1]
  4218c9:	mov    rax,QWORD PTR [rbp-0x78]
  4218cd:	mov    rax,QWORD PTR [rax]
  4218d0:	mov    esi,edx
  4218d2:	mov    rdi,rax
  4218d5:	call   419f0a <flatcc_builder_table_add_offset@@Base>
  4218da:	mov    QWORD PTR [rbp-0x18],rax
  4218de:	cmp    QWORD PTR [rbp-0x18],0x0
  4218e3:	je     421a53 <flatcc_json_parser_union_type_vector@@Base+0x47e>
  4218e9:	mov    rax,QWORD PTR [rbp-0x18]
  4218ed:	mov    edx,DWORD PTR [rbp-0x58]
  4218f0:	mov    DWORD PTR [rax],edx
  4218f2:	mov    rax,QWORD PTR [rbp-0x78]
  4218f6:	mov    rax,QWORD PTR [rax]
  4218f9:	mov    rdx,QWORD PTR [rbp-0xa0]
  421900:	mov    rsi,rdx
  421903:	mov    rdi,rax
  421906:	call   415ec4 <flatcc_builder_get_user_frame_ptr@@Base>
  42190b:	mov    QWORD PTR [rbp-0x50],rax
  42190f:	mov    rax,QWORD PTR [rbp-0x50]
  421913:	lea    rcx,[rax+0x10]
  421917:	mov    rdx,QWORD PTR [rbp-0x90]
  42191e:	mov    rax,rdx
  421921:	shl    rax,0x2
  421925:	add    rax,rdx
  421928:	shl    rax,0x3
  42192c:	add    rax,rcx
  42192f:	mov    QWORD PTR [rbp-0x48],rax
  421933:	mov    rax,QWORD PTR [rbp-0x48]
  421937:	mov    rdx,QWORD PTR [rbp-0x28]
  42193b:	mov    QWORD PTR [rax+0x20],rdx
  42193f:	mov    rax,QWORD PTR [rbp-0x48]
  421943:	mov    rax,QWORD PTR [rax]
  421946:	test   rax,rax
  421949:	jne    421968 <flatcc_json_parser_union_type_vector@@Base+0x393>
  42194b:	mov    rax,QWORD PTR [rbp-0x50]
  42194f:	mov    rax,QWORD PTR [rax+0x8]
  421953:	lea    rdx,[rax+0x1]
  421957:	mov    rax,QWORD PTR [rbp-0x50]
  42195b:	mov    QWORD PTR [rax+0x8],rdx
  42195f:	mov    rax,QWORD PTR [rbp-0x80]
  421963:	jmp    421a70 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  421968:	mov    rax,QWORD PTR [rbp-0x50]
  42196c:	mov    rax,QWORD PTR [rax+0x8]
  421970:	test   rax,rax
  421973:	jne    421994 <flatcc_json_parser_union_type_vector@@Base+0x3bf>
  421975:	lea    rcx,[rip+0x2a64]        # 4243e0 <flatcc_builder_padding_base@@Base+0x2040>
  42197c:	mov    edx,0x462
  421981:	lea    rsi,[rip+0x2510]        # 423e98 <flatcc_builder_padding_base@@Base+0x1af8>
  421988:	lea    rdi,[rip+0x256d]        # 423efc <flatcc_builder_padding_base@@Base+0x1b5c>
  42198f:	call   403220 <__assert_fail@plt>
  421994:	mov    rax,QWORD PTR [rbp-0x50]
  421998:	mov    rax,QWORD PTR [rax+0x8]
  42199c:	lea    rdx,[rax-0x1]
  4219a0:	mov    rax,QWORD PTR [rbp-0x50]
  4219a4:	mov    QWORD PTR [rax+0x8],rdx
  4219a8:	mov    rax,QWORD PTR [rbp-0x78]
  4219ac:	mov    eax,DWORD PTR [rax+0x18]
  4219af:	mov    DWORD PTR [rbp-0x54],eax
  4219b2:	mov    rax,QWORD PTR [rbp-0x78]
  4219b6:	mov    rax,QWORD PTR [rax+0x8]
  4219ba:	mov    QWORD PTR [rbp-0x10],rax
  4219be:	mov    rax,QWORD PTR [rbp-0x48]
  4219c2:	mov    edx,DWORD PTR [rax+0x10]
  4219c5:	mov    rax,QWORD PTR [rbp-0x78]
  4219c9:	mov    DWORD PTR [rax+0x18],edx
  4219cc:	mov    rax,QWORD PTR [rbp-0x48]
  4219d0:	mov    rdx,QWORD PTR [rax+0x8]
  4219d4:	mov    rax,QWORD PTR [rbp-0x78]
  4219d8:	mov    QWORD PTR [rax+0x8],rdx
  4219dc:	movzx  r8d,WORD PTR [rbp-0x94]
  4219e4:	mov    rax,QWORD PTR [rbp-0x48]
  4219e8:	mov    rsi,QWORD PTR [rax]
  4219eb:	mov    edi,DWORD PTR [rbp-0x5c]
  4219ee:	mov    rcx,QWORD PTR [rbp-0x28]
  4219f2:	mov    rdx,QWORD PTR [rbp-0x88]
  4219f9:	mov    rax,QWORD PTR [rbp-0x78]
  4219fd:	sub    rsp,0x8
  421a01:	push   QWORD PTR [rbp-0xb0]
  421a07:	mov    r9d,r8d
  421a0a:	mov    r8d,edi
  421a0d:	mov    rdi,rax
  421a10:	call   421265 <flatcc_json_parser_union_type@@Base+0x25f>
  421a15:	add    rsp,0x10
  421a19:	cmp    QWORD PTR [rbp-0x88],rax
  421a20:	jne    421a2b <flatcc_json_parser_union_type_vector@@Base+0x456>
  421a22:	mov    rax,QWORD PTR [rbp-0x88]
  421a29:	jmp    421a70 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  421a2b:	mov    rax,QWORD PTR [rbp-0x78]
  421a2f:	mov    edx,DWORD PTR [rbp-0x54]
  421a32:	mov    DWORD PTR [rax+0x18],edx
  421a35:	mov    rax,QWORD PTR [rbp-0x78]
  421a39:	mov    rdx,QWORD PTR [rbp-0x10]
  421a3d:	mov    QWORD PTR [rax+0x8],rdx
  421a41:	mov    rax,QWORD PTR [rbp-0x80]
  421a45:	jmp    421a70 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  421a47:	nop
  421a48:	jmp    421a54 <flatcc_json_parser_union_type_vector@@Base+0x47f>
  421a4a:	nop
  421a4b:	jmp    421a54 <flatcc_json_parser_union_type_vector@@Base+0x47f>
  421a4d:	nop
  421a4e:	jmp    421a54 <flatcc_json_parser_union_type_vector@@Base+0x47f>
  421a50:	nop
  421a51:	jmp    421a54 <flatcc_json_parser_union_type_vector@@Base+0x47f>
  421a53:	nop
  421a54:	mov    rdx,QWORD PTR [rbp-0x88]
  421a5b:	mov    rsi,QWORD PTR [rbp-0x80]
  421a5f:	mov    rax,QWORD PTR [rbp-0x78]
  421a63:	mov    ecx,0x21
  421a68:	mov    rdi,rax
  421a6b:	call   41f09d <flatcc_json_parser_set_error@@Base>
  421a70:	mov    rcx,QWORD PTR [rbp-0x8]
  421a74:	xor    rcx,QWORD PTR fs:0x28
  421a7d:	je     421a84 <flatcc_json_parser_union_type_vector@@Base+0x4af>
  421a7f:	call   403200 <__stack_chk_fail@plt>
  421a84:	leave  
  421a85:	ret    

0000000000421a86 <flatcc_json_parser_table_as_root@@Base>:
  421a86:	endbr64 
  421a8a:	push   rbp
  421a8b:	mov    rbp,rsp
  421a8e:	sub    rsp,0xa0
  421a95:	mov    QWORD PTR [rbp-0x68],rdi
  421a99:	mov    QWORD PTR [rbp-0x70],rsi
  421a9d:	mov    QWORD PTR [rbp-0x78],rdx
  421aa1:	mov    QWORD PTR [rbp-0x80],rcx
  421aa5:	mov    DWORD PTR [rbp-0x84],r8d
  421aac:	mov    QWORD PTR [rbp-0x90],r9
  421ab3:	mov    rax,QWORD PTR [rbp+0x10]
  421ab7:	mov    QWORD PTR [rbp-0x98],rax
  421abe:	mov    rax,QWORD PTR fs:0x28
  421ac7:	mov    QWORD PTR [rbp-0x8],rax
  421acb:	xor    eax,eax
  421acd:	mov    eax,DWORD PTR [rbp-0x84]
  421ad3:	sar    eax,1
  421ad5:	and    eax,0x2
  421ad8:	mov    DWORD PTR [rbp-0x54],eax
  421adb:	cmp    QWORD PTR [rbp-0x70],0x0
  421ae0:	jne    421ae8 <flatcc_json_parser_table_as_root@@Base+0x62>
  421ae2:	lea    rax,[rbp-0x50]
  421ae6:	jmp    421aec <flatcc_json_parser_table_as_root@@Base+0x66>
  421ae8:	mov    rax,QWORD PTR [rbp-0x70]
  421aec:	mov    QWORD PTR [rbp-0x70],rax
  421af0:	mov    rdx,QWORD PTR [rbp-0x78]
  421af4:	mov    rax,QWORD PTR [rbp-0x80]
  421af8:	lea    rcx,[rdx+rax*1]
  421afc:	mov    edi,DWORD PTR [rbp-0x84]
  421b02:	mov    rdx,QWORD PTR [rbp-0x78]
  421b06:	mov    rsi,QWORD PTR [rbp-0x68]
  421b0a:	mov    rax,QWORD PTR [rbp-0x70]
  421b0e:	mov    r8d,edi
  421b11:	mov    rdi,rax
  421b14:	call   41b0c5 <flatcc_emitter_copy_buffer@@Base+0x16a>
  421b19:	mov    edx,DWORD PTR [rbp-0x54]
  421b1c:	mov    rsi,QWORD PTR [rbp-0x90]
  421b23:	mov    rax,QWORD PTR [rbp-0x68]
  421b27:	mov    ecx,edx
  421b29:	mov    edx,0x0
  421b2e:	mov    rdi,rax
  421b31:	call   416dbb <flatcc_builder_start_buffer@@Base>
  421b36:	test   eax,eax
  421b38:	je     421b41 <flatcc_json_parser_table_as_root@@Base+0xbb>
  421b3a:	mov    eax,0xffffffff
  421b3f:	jmp    421ba9 <flatcc_json_parser_table_as_root@@Base+0x123>
  421b41:	mov    rdx,QWORD PTR [rbp-0x78]
  421b45:	mov    rax,QWORD PTR [rbp-0x80]
  421b49:	lea    r8,[rdx+rax*1]
  421b4d:	lea    rdx,[rbp-0x58]
  421b51:	mov    rsi,QWORD PTR [rbp-0x78]
  421b55:	mov    rdi,QWORD PTR [rbp-0x70]
  421b59:	mov    rax,QWORD PTR [rbp-0x98]
  421b60:	mov    rcx,rdx
  421b63:	mov    rdx,r8
  421b66:	call   rax
  421b68:	mov    rax,QWORD PTR [rbp-0x70]
  421b6c:	mov    eax,DWORD PTR [rax+0x20]
  421b6f:	test   eax,eax
  421b71:	je     421b7c <flatcc_json_parser_table_as_root@@Base+0xf6>
  421b73:	mov    rax,QWORD PTR [rbp-0x70]
  421b77:	mov    eax,DWORD PTR [rax+0x20]
  421b7a:	jmp    421ba9 <flatcc_json_parser_table_as_root@@Base+0x123>
  421b7c:	mov    edx,DWORD PTR [rbp-0x58]
  421b7f:	mov    rax,QWORD PTR [rbp-0x68]
  421b83:	mov    esi,edx
  421b85:	mov    rdi,rax
  421b88:	call   416f08 <flatcc_builder_end_buffer@@Base>
  421b8d:	test   eax,eax
  421b8f:	jne    421b98 <flatcc_json_parser_table_as_root@@Base+0x112>
  421b91:	mov    eax,0xffffffff
  421b96:	jmp    421ba9 <flatcc_json_parser_table_as_root@@Base+0x123>
  421b98:	mov    rax,QWORD PTR [rbp-0x70]
  421b9c:	mov    rdx,QWORD PTR [rbp-0x78]
  421ba0:	mov    QWORD PTR [rax+0x40],rdx
  421ba4:	mov    eax,0x0
  421ba9:	mov    rcx,QWORD PTR [rbp-0x8]
  421bad:	xor    rcx,QWORD PTR fs:0x28
  421bb6:	je     421bbd <flatcc_json_parser_table_as_root@@Base+0x137>
  421bb8:	call   403200 <__stack_chk_fail@plt>
  421bbd:	leave  
  421bbe:	ret    

0000000000421bbf <flatcc_json_parser_struct_as_root@@Base>:
  421bbf:	endbr64 
  421bc3:	push   rbp
  421bc4:	mov    rbp,rsp
  421bc7:	sub    rsp,0xa0
  421bce:	mov    QWORD PTR [rbp-0x68],rdi
  421bd2:	mov    QWORD PTR [rbp-0x70],rsi
  421bd6:	mov    QWORD PTR [rbp-0x78],rdx
  421bda:	mov    QWORD PTR [rbp-0x80],rcx
  421bde:	mov    DWORD PTR [rbp-0x84],r8d
  421be5:	mov    QWORD PTR [rbp-0x90],r9
  421bec:	mov    rax,QWORD PTR [rbp+0x10]
  421bf0:	mov    QWORD PTR [rbp-0x98],rax
  421bf7:	mov    rax,QWORD PTR fs:0x28
  421c00:	mov    QWORD PTR [rbp-0x8],rax
  421c04:	xor    eax,eax
  421c06:	mov    eax,DWORD PTR [rbp-0x84]
  421c0c:	sar    eax,1
  421c0e:	and    eax,0x2
  421c11:	mov    DWORD PTR [rbp-0x54],eax
  421c14:	cmp    QWORD PTR [rbp-0x70],0x0
  421c19:	jne    421c21 <flatcc_json_parser_struct_as_root@@Base+0x62>
  421c1b:	lea    rax,[rbp-0x50]
  421c1f:	jmp    421c25 <flatcc_json_parser_struct_as_root@@Base+0x66>
  421c21:	mov    rax,QWORD PTR [rbp-0x70]
  421c25:	mov    QWORD PTR [rbp-0x70],rax
  421c29:	mov    rdx,QWORD PTR [rbp-0x78]
  421c2d:	mov    rax,QWORD PTR [rbp-0x80]
  421c31:	lea    rcx,[rdx+rax*1]
  421c35:	mov    edi,DWORD PTR [rbp-0x84]
  421c3b:	mov    rdx,QWORD PTR [rbp-0x78]
  421c3f:	mov    rsi,QWORD PTR [rbp-0x68]
  421c43:	mov    rax,QWORD PTR [rbp-0x70]
  421c47:	mov    r8d,edi
  421c4a:	mov    rdi,rax
  421c4d:	call   41b0c5 <flatcc_emitter_copy_buffer@@Base+0x16a>
  421c52:	mov    edx,DWORD PTR [rbp-0x54]
  421c55:	mov    rsi,QWORD PTR [rbp-0x90]
  421c5c:	mov    rax,QWORD PTR [rbp-0x68]
  421c60:	mov    ecx,edx
  421c62:	mov    edx,0x0
  421c67:	mov    rdi,rax
  421c6a:	call   416dbb <flatcc_builder_start_buffer@@Base>
  421c6f:	test   eax,eax
  421c71:	je     421c7a <flatcc_json_parser_struct_as_root@@Base+0xbb>
  421c73:	mov    eax,0xffffffff
  421c78:	jmp    421ce2 <flatcc_json_parser_struct_as_root@@Base+0x123>
  421c7a:	mov    rdx,QWORD PTR [rbp-0x78]
  421c7e:	mov    rax,QWORD PTR [rbp-0x80]
  421c82:	lea    r8,[rdx+rax*1]
  421c86:	lea    rdx,[rbp-0x58]
  421c8a:	mov    rsi,QWORD PTR [rbp-0x78]
  421c8e:	mov    rdi,QWORD PTR [rbp-0x70]
  421c92:	mov    rax,QWORD PTR [rbp-0x98]
  421c99:	mov    rcx,rdx
  421c9c:	mov    rdx,r8
  421c9f:	call   rax
  421ca1:	mov    rax,QWORD PTR [rbp-0x70]
  421ca5:	mov    eax,DWORD PTR [rax+0x20]
  421ca8:	test   eax,eax
  421caa:	je     421cb5 <flatcc_json_parser_struct_as_root@@Base+0xf6>
  421cac:	mov    rax,QWORD PTR [rbp-0x70]
  421cb0:	mov    eax,DWORD PTR [rax+0x20]
  421cb3:	jmp    421ce2 <flatcc_json_parser_struct_as_root@@Base+0x123>
  421cb5:	mov    edx,DWORD PTR [rbp-0x58]
  421cb8:	mov    rax,QWORD PTR [rbp-0x68]
  421cbc:	mov    esi,edx
  421cbe:	mov    rdi,rax
  421cc1:	call   416f08 <flatcc_builder_end_buffer@@Base>
  421cc6:	test   eax,eax
  421cc8:	jne    421cd1 <flatcc_json_parser_struct_as_root@@Base+0x112>
  421cca:	mov    eax,0xffffffff
  421ccf:	jmp    421ce2 <flatcc_json_parser_struct_as_root@@Base+0x123>
  421cd1:	mov    rax,QWORD PTR [rbp-0x70]
  421cd5:	mov    rdx,QWORD PTR [rbp-0x78]
  421cd9:	mov    QWORD PTR [rax+0x40],rdx
  421cdd:	mov    eax,0x0
  421ce2:	mov    rcx,QWORD PTR [rbp-0x8]
  421ce6:	xor    rcx,QWORD PTR fs:0x28
  421cef:	je     421cf6 <flatcc_json_parser_struct_as_root@@Base+0x137>
  421cf1:	call   403200 <__stack_chk_fail@plt>
  421cf6:	leave  
  421cf7:	ret    
  421cf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421d00 <__libc_csu_init@@Base>:
  421d00:	endbr64 
  421d04:	push   r15
  421d06:	lea    r15,[rip+0x80f3]        # 429e00 <flatcc_builder_padding_base@@Base+0x7a60>
  421d0d:	push   r14
  421d0f:	mov    r14,rdx
  421d12:	push   r13
  421d14:	mov    r13,rsi
  421d17:	push   r12
  421d19:	mov    r12d,edi
  421d1c:	push   rbp
  421d1d:	lea    rbp,[rip+0x80e4]        # 429e08 <flatcc_builder_padding_base@@Base+0x7a68>
  421d24:	push   rbx
  421d25:	sub    rbp,r15
  421d28:	sub    rsp,0x8
  421d2c:	call   403000 <free@plt-0x1a0>
  421d31:	sar    rbp,0x3
  421d35:	je     421d56 <__libc_csu_init@@Base+0x56>
  421d37:	xor    ebx,ebx
  421d39:	nop    DWORD PTR [rax+0x0]
  421d40:	mov    rdx,r14
  421d43:	mov    rsi,r13
  421d46:	mov    edi,r12d
  421d49:	call   QWORD PTR [r15+rbx*8]
  421d4d:	add    rbx,0x1
  421d51:	cmp    rbp,rbx
  421d54:	jne    421d40 <__libc_csu_init@@Base+0x40>
  421d56:	add    rsp,0x8
  421d5a:	pop    rbx
  421d5b:	pop    rbp
  421d5c:	pop    r12
  421d5e:	pop    r13
  421d60:	pop    r14
  421d62:	pop    r15
  421d64:	ret    
  421d65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000421d70 <__libc_csu_fini@@Base>:
  421d70:	endbr64 
  421d74:	ret    

Disassembly of section .fini:

0000000000421d78 <.fini>:
  421d78:	endbr64 
  421d7c:	sub    rsp,0x8
  421d80:	add    rsp,0x8
  421d84:	ret    
