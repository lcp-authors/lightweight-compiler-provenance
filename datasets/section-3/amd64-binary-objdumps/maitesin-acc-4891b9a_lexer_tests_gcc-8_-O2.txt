
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x20a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <UnityStrOk@@Base+0x398c>
  403026:	bnd jmp QWORD PTR [rip+0xcfe3]        # 410010 <UnityStrOk@@Base+0x3994>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <getenv@plt-0x200>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <getenv@plt-0x200>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <getenv@plt-0x200>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <getenv@plt-0x200>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <getenv@plt-0x200>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <getenv@plt-0x200>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <getenv@plt-0x200>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <getenv@plt-0x200>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <getenv@plt-0x200>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <getenv@plt-0x200>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <getenv@plt-0x200>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <getenv@plt-0x200>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <getenv@plt-0x200>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <getenv@plt-0x200>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <getenv@plt-0x200>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <getenv@plt-0x200>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <getenv@plt-0x200>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <getenv@plt-0x200>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <getenv@plt-0x200>
  40315f:	nop
  403160:	endbr64 
  403164:	push   0x13
  403169:	bnd jmp 403020 <getenv@plt-0x200>
  40316f:	nop
  403170:	endbr64 
  403174:	push   0x14
  403179:	bnd jmp 403020 <getenv@plt-0x200>
  40317f:	nop
  403180:	endbr64 
  403184:	push   0x15
  403189:	bnd jmp 403020 <getenv@plt-0x200>
  40318f:	nop
  403190:	endbr64 
  403194:	push   0x16
  403199:	bnd jmp 403020 <getenv@plt-0x200>
  40319f:	nop
  4031a0:	endbr64 
  4031a4:	push   0x17
  4031a9:	bnd jmp 403020 <getenv@plt-0x200>
  4031af:	nop
  4031b0:	endbr64 
  4031b4:	push   0x18
  4031b9:	bnd jmp 403020 <getenv@plt-0x200>
  4031bf:	nop
  4031c0:	endbr64 
  4031c4:	push   0x19
  4031c9:	bnd jmp 403020 <getenv@plt-0x200>
  4031cf:	nop
  4031d0:	endbr64 
  4031d4:	push   0x1a
  4031d9:	bnd jmp 403020 <getenv@plt-0x200>
  4031df:	nop
  4031e0:	endbr64 
  4031e4:	push   0x1b
  4031e9:	bnd jmp 403020 <getenv@plt-0x200>
  4031ef:	nop
  4031f0:	endbr64 
  4031f4:	push   0x1c
  4031f9:	bnd jmp 403020 <getenv@plt-0x200>
  4031ff:	nop
  403200:	endbr64 
  403204:	push   0x1d
  403209:	bnd jmp 403020 <getenv@plt-0x200>
  40320f:	nop
  403210:	endbr64 
  403214:	push   0x1e
  403219:	bnd jmp 403020 <getenv@plt-0x200>
  40321f:	nop

Disassembly of section .plt.sec:

0000000000403220 <getenv@plt>:
  403220:	endbr64 
  403224:	bnd jmp QWORD PTR [rip+0xcded]        # 410018 <getenv@GLIBC_2.2.5>
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403230 <free@plt>:
  403230:	endbr64 
  403234:	bnd jmp QWORD PTR [rip+0xcde5]        # 410020 <free@GLIBC_2.2.5>
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403240 <__vfprintf_chk@plt>:
  403240:	endbr64 
  403244:	bnd jmp QWORD PTR [rip+0xcddd]        # 410028 <__vfprintf_chk@GLIBC_2.3.4>
  40324b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403250 <abort@plt>:
  403250:	endbr64 
  403254:	bnd jmp QWORD PTR [rip+0xcdd5]        # 410030 <abort@GLIBC_2.2.5>
  40325b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403260 <__errno_location@plt>:
  403260:	endbr64 
  403264:	bnd jmp QWORD PTR [rip+0xcdcd]        # 410038 <__errno_location@GLIBC_2.2.5>
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403270 <strncpy@plt>:
  403270:	endbr64 
  403274:	bnd jmp QWORD PTR [rip+0xcdc5]        # 410040 <strncpy@GLIBC_2.2.5>
  40327b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403280 <strcpy@plt>:
  403280:	endbr64 
  403284:	bnd jmp QWORD PTR [rip+0xcdbd]        # 410048 <strcpy@GLIBC_2.2.5>
  40328b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403290 <mkdir@plt>:
  403290:	endbr64 
  403294:	bnd jmp QWORD PTR [rip+0xcdb5]        # 410050 <mkdir@GLIBC_2.2.5>
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032a0 <fread@plt>:
  4032a0:	endbr64 
  4032a4:	bnd jmp QWORD PTR [rip+0xcdad]        # 410058 <fread@GLIBC_2.2.5>
  4032ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032b0 <fcntl@plt>:
  4032b0:	endbr64 
  4032b4:	bnd jmp QWORD PTR [rip+0xcda5]        # 410060 <fcntl@GLIBC_2.2.5>
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032c0 <getpid@plt>:
  4032c0:	endbr64 
  4032c4:	bnd jmp QWORD PTR [rip+0xcd9d]        # 410068 <getpid@GLIBC_2.2.5>
  4032cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032d0 <fclose@plt>:
  4032d0:	endbr64 
  4032d4:	bnd jmp QWORD PTR [rip+0xcd95]        # 410070 <fclose@GLIBC_2.2.5>
  4032db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032e0 <strlen@plt>:
  4032e0:	endbr64 
  4032e4:	bnd jmp QWORD PTR [rip+0xcd8d]        # 410078 <strlen@GLIBC_2.2.5>
  4032eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032f0 <__stack_chk_fail@plt>:
  4032f0:	endbr64 
  4032f4:	bnd jmp QWORD PTR [rip+0xcd85]        # 410080 <__stack_chk_fail@GLIBC_2.4>
  4032fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403300 <setbuf@plt>:
  403300:	endbr64 
  403304:	bnd jmp QWORD PTR [rip+0xcd7d]        # 410088 <setbuf@GLIBC_2.2.5>
  40330b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403310 <close@plt>:
  403310:	endbr64 
  403314:	bnd jmp QWORD PTR [rip+0xcd75]        # 410090 <close@GLIBC_2.2.5>
  40331b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403320 <_setjmp@plt>:
  403320:	endbr64 
  403324:	bnd jmp QWORD PTR [rip+0xcd6d]        # 410098 <_setjmp@GLIBC_2.2.5>
  40332b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403330 <putc@plt>:
  403330:	endbr64 
  403334:	bnd jmp QWORD PTR [rip+0xcd65]        # 4100a0 <putc@GLIBC_2.2.5>
  40333b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403340 <ftell@plt>:
  403340:	endbr64 
  403344:	bnd jmp QWORD PTR [rip+0xcd5d]        # 4100a8 <ftell@GLIBC_2.2.5>
  40334b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403350 <strtol@plt>:
  403350:	endbr64 
  403354:	bnd jmp QWORD PTR [rip+0xcd55]        # 4100b0 <strtol@GLIBC_2.2.5>
  40335b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403360 <memcpy@plt>:
  403360:	endbr64 
  403364:	bnd jmp QWORD PTR [rip+0xcd4d]        # 4100b8 <memcpy@GLIBC_2.14>
  40336b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403370 <malloc@plt>:
  403370:	endbr64 
  403374:	bnd jmp QWORD PTR [rip+0xcd45]        # 4100c0 <malloc@GLIBC_2.2.5>
  40337b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403380 <fseek@plt>:
  403380:	endbr64 
  403384:	bnd jmp QWORD PTR [rip+0xcd3d]        # 4100c8 <fseek@GLIBC_2.2.5>
  40338b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403390 <fdopen@plt>:
  403390:	endbr64 
  403394:	bnd jmp QWORD PTR [rip+0xcd35]        # 4100d0 <fdopen@GLIBC_2.2.5>
  40339b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004033a0 <__longjmp_chk@plt>:
  4033a0:	endbr64 
  4033a4:	bnd jmp QWORD PTR [rip+0xcd2d]        # 4100d8 <__longjmp_chk@GLIBC_2.11>
  4033ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004033b0 <open@plt>:
  4033b0:	endbr64 
  4033b4:	bnd jmp QWORD PTR [rip+0xcd25]        # 4100e0 <open@GLIBC_2.2.5>
  4033bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004033c0 <access@plt>:
  4033c0:	endbr64 
  4033c4:	bnd jmp QWORD PTR [rip+0xcd1d]        # 4100e8 <access@GLIBC_2.2.5>
  4033cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004033d0 <fopen@plt>:
  4033d0:	endbr64 
  4033d4:	bnd jmp QWORD PTR [rip+0xcd15]        # 4100f0 <fopen@GLIBC_2.2.5>
  4033db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004033e0 <exit@plt>:
  4033e0:	endbr64 
  4033e4:	bnd jmp QWORD PTR [rip+0xcd0d]        # 4100f8 <exit@GLIBC_2.2.5>
  4033eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004033f0 <fwrite@plt>:
  4033f0:	endbr64 
  4033f4:	bnd jmp QWORD PTR [rip+0xcd05]        # 410100 <fwrite@GLIBC_2.2.5>
  4033fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403400 <__fprintf_chk@plt>:
  403400:	endbr64 
  403404:	bnd jmp QWORD PTR [rip+0xccfd]        # 410108 <__fprintf_chk@GLIBC_2.3.4>
  40340b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403410 <main@@Base-0x50>:
  403410:	call   403250 <abort@plt>
  403415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40341f:	nop
  403420:	endbr64 
  403424:	jmp    40af40 <__gcov_sort_n_vals@@Base+0x1670>
  403429:	nop    DWORD PTR [rax+0x0]
  403430:	endbr64 
  403434:	jmp    40af40 <__gcov_sort_n_vals@@Base+0x1670>
  403439:	nop    DWORD PTR [rax+0x0]
  403440:	endbr64 
  403444:	jmp    40af40 <__gcov_sort_n_vals@@Base+0x1670>
  403449:	nop    DWORD PTR [rax+0x0]
  403450:	endbr64 
  403454:	jmp    40af40 <__gcov_sort_n_vals@@Base+0x1670>
  403459:	nop    DWORD PTR [rax+0x0]

0000000000403460 <main@@Base>:
  403460:	endbr64 
  403464:	sub    rsp,0x8
  403468:	lea    rdi,[rip+0x8e79]        # 40c2e8 <_IO_stdin_used@@Base+0x2e8>
  40346f:	inc    QWORD PTR [rip+0xf44a]        # 4128c0 <__bss_start@@Base+0xa50>
  403476:	call   407f90 <UnityBegin@@Base>
  40347b:	mov    rdi,0x404fc0
  403482:	mov    edx,0x275
  403487:	lea    rsi,[rip+0x8bb7]        # 40c045 <_IO_stdin_used@@Base+0x45>
  40348e:	inc    QWORD PTR [rip+0xf433]        # 4128c8 <__bss_start@@Base+0xa58>
  403495:	call   407eb0 <UnityDefaultTestRun@@Base>
  40349a:	mov    rdi,0x4053c0
  4034a1:	mov    edx,0x276
  4034a6:	lea    rsi,[rip+0x8bae]        # 40c05b <_IO_stdin_used@@Base+0x5b>
  4034ad:	inc    QWORD PTR [rip+0xf41c]        # 4128d0 <__bss_start@@Base+0xa60>
  4034b4:	call   407eb0 <UnityDefaultTestRun@@Base>
  4034b9:	mov    rdi,0x4052c0
  4034c0:	mov    edx,0x277
  4034c5:	lea    rsi,[rip+0x8ba3]        # 40c06f <_IO_stdin_used@@Base+0x6f>
  4034cc:	inc    QWORD PTR [rip+0xf405]        # 4128d8 <__bss_start@@Base+0xa68>
  4034d3:	call   407eb0 <UnityDefaultTestRun@@Base>
  4034d8:	mov    rdi,0x405200
  4034df:	mov    edx,0x278
  4034e4:	lea    rsi,[rip+0x8b9d]        # 40c088 <_IO_stdin_used@@Base+0x88>
  4034eb:	inc    QWORD PTR [rip+0xf3ee]        # 4128e0 <__bss_start@@Base+0xa70>
  4034f2:	call   407eb0 <UnityDefaultTestRun@@Base>
  4034f7:	mov    rdi,0x404b80
  4034fe:	mov    edx,0x279
  403503:	lea    rsi,[rip+0x8b97]        # 40c0a1 <_IO_stdin_used@@Base+0xa1>
  40350a:	inc    QWORD PTR [rip+0xf3d7]        # 4128e8 <__bss_start@@Base+0xa78>
  403511:	call   407eb0 <UnityDefaultTestRun@@Base>
  403516:	mov    rdi,0x404620
  40351d:	mov    edx,0x27a
  403522:	lea    rsi,[rip+0x8b88]        # 40c0b1 <_IO_stdin_used@@Base+0xb1>
  403529:	inc    QWORD PTR [rip+0xf3c0]        # 4128f0 <__bss_start@@Base+0xa80>
  403530:	call   407eb0 <UnityDefaultTestRun@@Base>
  403535:	mov    rdi,0x404590
  40353c:	mov    edx,0x27b
  403541:	lea    rsi,[rip+0x8b76]        # 40c0be <_IO_stdin_used@@Base+0xbe>
  403548:	inc    QWORD PTR [rip+0xf3a9]        # 4128f8 <__bss_start@@Base+0xa88>
  40354f:	call   407eb0 <UnityDefaultTestRun@@Base>
  403554:	mov    rdi,0x4044f0
  40355b:	mov    edx,0x27c
  403560:	lea    rsi,[rip+0x8b6b]        # 40c0d2 <_IO_stdin_used@@Base+0xd2>
  403567:	inc    QWORD PTR [rip+0xf392]        # 412900 <__bss_start@@Base+0xa90>
  40356e:	call   407eb0 <UnityDefaultTestRun@@Base>
  403573:	mov    rdi,0x404450
  40357a:	mov    edx,0x27d
  40357f:	lea    rsi,[rip+0x8b61]        # 40c0e7 <_IO_stdin_used@@Base+0xe7>
  403586:	inc    QWORD PTR [rip+0xf37b]        # 412908 <__bss_start@@Base+0xa98>
  40358d:	call   407eb0 <UnityDefaultTestRun@@Base>
  403592:	mov    rdi,0x4043b0
  403599:	mov    edx,0x27e
  40359e:	lea    rsi,[rip+0x8b56]        # 40c0fb <_IO_stdin_used@@Base+0xfb>
  4035a5:	inc    QWORD PTR [rip+0xf364]        # 412910 <__bss_start@@Base+0xaa0>
  4035ac:	call   407eb0 <UnityDefaultTestRun@@Base>
  4035b1:	mov    rdi,0x404310
  4035b8:	mov    edx,0x27f
  4035bd:	lea    rsi,[rip+0x8b47]        # 40c10b <_IO_stdin_used@@Base+0x10b>
  4035c4:	inc    QWORD PTR [rip+0xf34d]        # 412918 <__bss_start@@Base+0xaa8>
  4035cb:	call   407eb0 <UnityDefaultTestRun@@Base>
  4035d0:	mov    rdi,0x404270
  4035d7:	mov    edx,0x280
  4035dc:	lea    rsi,[rip+0x8b38]        # 40c11b <_IO_stdin_used@@Base+0x11b>
  4035e3:	inc    QWORD PTR [rip+0xf336]        # 412920 <__bss_start@@Base+0xab0>
  4035ea:	call   407eb0 <UnityDefaultTestRun@@Base>
  4035ef:	mov    rdi,0x4041d0
  4035f6:	mov    edx,0x281
  4035fb:	lea    rsi,[rip+0x8b29]        # 40c12b <_IO_stdin_used@@Base+0x12b>
  403602:	inc    QWORD PTR [rip+0xf31f]        # 412928 <__bss_start@@Base+0xab8>
  403609:	call   407eb0 <UnityDefaultTestRun@@Base>
  40360e:	mov    rdi,0x404130
  403615:	mov    edx,0x282
  40361a:	lea    rsi,[rip+0x8b1a]        # 40c13b <_IO_stdin_used@@Base+0x13b>
  403621:	inc    QWORD PTR [rip+0xf308]        # 412930 <__bss_start@@Base+0xac0>
  403628:	call   407eb0 <UnityDefaultTestRun@@Base>
  40362d:	mov    rdi,0x404090
  403634:	mov    edx,0x283
  403639:	lea    rsi,[rip+0x8b0d]        # 40c14d <_IO_stdin_used@@Base+0x14d>
  403640:	inc    QWORD PTR [rip+0xf2f1]        # 412938 <__bss_start@@Base+0xac8>
  403647:	call   407eb0 <UnityDefaultTestRun@@Base>
  40364c:	mov    rdi,0x403ff0
  403653:	mov    edx,0x284
  403658:	lea    rsi,[rip+0x8b03]        # 40c162 <_IO_stdin_used@@Base+0x162>
  40365f:	inc    QWORD PTR [rip+0xf2da]        # 412940 <__bss_start@@Base+0xad0>
  403666:	call   407eb0 <UnityDefaultTestRun@@Base>
  40366b:	mov    rdi,0x403f50
  403672:	mov    edx,0x285
  403677:	lea    rsi,[rip+0x8af3]        # 40c171 <_IO_stdin_used@@Base+0x171>
  40367e:	inc    QWORD PTR [rip+0xf2c3]        # 412948 <__bss_start@@Base+0xad8>
  403685:	call   407eb0 <UnityDefaultTestRun@@Base>
  40368a:	mov    rdi,0x403eb0
  403691:	mov    edx,0x286
  403696:	lea    rsi,[rip+0x8ae2]        # 40c17f <_IO_stdin_used@@Base+0x17f>
  40369d:	inc    QWORD PTR [rip+0xf2ac]        # 412950 <__bss_start@@Base+0xae0>
  4036a4:	call   407eb0 <UnityDefaultTestRun@@Base>
  4036a9:	mov    rdi,0x403e10
  4036b0:	mov    edx,0x287
  4036b5:	lea    rsi,[rip+0x8ad3]        # 40c18f <_IO_stdin_used@@Base+0x18f>
  4036bc:	inc    QWORD PTR [rip+0xf295]        # 412958 <__bss_start@@Base+0xae8>
  4036c3:	call   407eb0 <UnityDefaultTestRun@@Base>
  4036c8:	mov    rdi,0x403d70
  4036cf:	mov    edx,0x288
  4036d4:	lea    rsi,[rip+0x8aca]        # 40c1a5 <_IO_stdin_used@@Base+0x1a5>
  4036db:	inc    QWORD PTR [rip+0xf27e]        # 412960 <__bss_start@@Base+0xaf0>
  4036e2:	call   407eb0 <UnityDefaultTestRun@@Base>
  4036e7:	mov    rdi,0x403cd0
  4036ee:	mov    edx,0x289
  4036f3:	lea    rsi,[rip+0x8abf]        # 40c1b9 <_IO_stdin_used@@Base+0x1b9>
  4036fa:	inc    QWORD PTR [rip+0xf267]        # 412968 <__bss_start@@Base+0xaf8>
  403701:	call   407eb0 <UnityDefaultTestRun@@Base>
  403706:	mov    rdi,0x403af0
  40370d:	mov    edx,0x28a
  403712:	lea    rsi,[rip+0x8ab9]        # 40c1d2 <_IO_stdin_used@@Base+0x1d2>
  403719:	inc    QWORD PTR [rip+0xf250]        # 412970 <__bss_start@@Base+0xb00>
  403720:	call   407eb0 <UnityDefaultTestRun@@Base>
  403725:	mov    rdi,0x403c30
  40372c:	mov    edx,0x28b
  403731:	lea    rsi,[rip+0x8ab6]        # 40c1ee <_IO_stdin_used@@Base+0x1ee>
  403738:	inc    QWORD PTR [rip+0xf239]        # 412978 <__bss_start@@Base+0xb08>
  40373f:	call   407eb0 <UnityDefaultTestRun@@Base>
  403744:	mov    rdi,0x403b90
  40374b:	mov    edx,0x28c
  403750:	lea    rsi,[rip+0x8aa7]        # 40c1fe <_IO_stdin_used@@Base+0x1fe>
  403757:	inc    QWORD PTR [rip+0xf222]        # 412980 <__bss_start@@Base+0xb10>
  40375e:	call   407eb0 <UnityDefaultTestRun@@Base>
  403763:	mov    rdi,0x403a50
  40376a:	mov    edx,0x28d
  40376f:	lea    rsi,[rip+0x8a9a]        # 40c210 <_IO_stdin_used@@Base+0x210>
  403776:	inc    QWORD PTR [rip+0xf20b]        # 412988 <__bss_start@@Base+0xb18>
  40377d:	call   407eb0 <UnityDefaultTestRun@@Base>
  403782:	mov    rdi,0x4039b0
  403789:	mov    edx,0x28e
  40378e:	lea    rsi,[rip+0x8a8f]        # 40c224 <_IO_stdin_used@@Base+0x224>
  403795:	inc    QWORD PTR [rip+0xf1f4]        # 412990 <__bss_start@@Base+0xb20>
  40379c:	call   407eb0 <UnityDefaultTestRun@@Base>
  4037a1:	mov    rdi,0x403910
  4037a8:	mov    edx,0x28f
  4037ad:	lea    rsi,[rip+0x8a87]        # 40c23b <_IO_stdin_used@@Base+0x23b>
  4037b4:	inc    QWORD PTR [rip+0xf1dd]        # 412998 <__bss_start@@Base+0xb28>
  4037bb:	call   407eb0 <UnityDefaultTestRun@@Base>
  4037c0:	inc    QWORD PTR [rip+0xf1d9]        # 4129a0 <__bss_start@@Base+0xb30>
  4037c7:	call   407ff0 <UnityEnd@@Base>
  4037cc:	inc    QWORD PTR [rip+0xf1d5]        # 4129a8 <__bss_start@@Base+0xb38>
  4037d3:	add    rsp,0x8
  4037d7:	ret    
  4037d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037e0:	endbr64 
  4037e4:	lea    rdi,[rip+0xd135]        # 410920 <__data_start@@Base+0x800>
  4037eb:	jmp    40afd0 <__gcov_sort_n_vals@@Base+0x1700>
  4037f0:	endbr64 
  4037f4:	lea    rdi,[rip+0xdb45]        # 411340 <__data_start@@Base+0x1220>
  4037fb:	jmp    40afd0 <__gcov_sort_n_vals@@Base+0x1700>
  403800:	endbr64 
  403804:	lea    rdi,[rip+0xe315]        # 411b20 <__data_start@@Base+0x1a00>
  40380b:	jmp    40afd0 <__gcov_sort_n_vals@@Base+0x1700>
  403810:	endbr64 
  403814:	lea    rdi,[rip+0xe5c5]        # 411de0 <__data_start@@Base+0x1cc0>
  40381b:	jmp    40afd0 <__gcov_sort_n_vals@@Base+0x1700>

0000000000403820 <_start@@Base>:
  403820:	endbr64 
  403824:	xor    ebp,ebp
  403826:	mov    r9,rdx
  403829:	pop    rsi
  40382a:	mov    rdx,rsp
  40382d:	and    rsp,0xfffffffffffffff0
  403831:	push   rax
  403832:	push   rsp
  403833:	mov    r8,0x40b150
  40383a:	mov    rcx,0x40b0e0
  403841:	mov    rdi,0x403460
  403848:	call   QWORD PTR [rip+0xc79a]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  40384e:	hlt    
  40384f:	nop
  403850:	endbr64 
  403854:	ret    
  403855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40385f:	nop
  403860:	mov    eax,0x411e70
  403865:	cmp    rax,0x411e70
  40386b:	je     403880 <_start@@Base+0x60>
  40386d:	mov    eax,0x0
  403872:	test   rax,rax
  403875:	je     403880 <_start@@Base+0x60>
  403877:	mov    edi,0x411e70
  40387c:	jmp    rax
  40387e:	xchg   ax,ax
  403880:	ret    
  403881:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40388c:	nop    DWORD PTR [rax+0x0]
  403890:	mov    esi,0x411e70
  403895:	sub    rsi,0x411e70
  40389c:	sar    rsi,0x3
  4038a0:	mov    rax,rsi
  4038a3:	shr    rax,0x3f
  4038a7:	add    rsi,rax
  4038aa:	sar    rsi,1
  4038ad:	je     4038c0 <_start@@Base+0xa0>
  4038af:	mov    eax,0x0
  4038b4:	test   rax,rax
  4038b7:	je     4038c0 <_start@@Base+0xa0>
  4038b9:	mov    edi,0x411e70
  4038be:	jmp    rax
  4038c0:	ret    
  4038c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4038cc:	nop    DWORD PTR [rax+0x0]
  4038d0:	endbr64 
  4038d4:	cmp    BYTE PTR [rip+0xe5a5],0x0        # 411e80 <__bss_start@@Base+0x10>
  4038db:	jne    4038f0 <_start@@Base+0xd0>
  4038dd:	push   rbp
  4038de:	mov    rbp,rsp
  4038e1:	call   403860 <_start@@Base+0x40>
  4038e6:	mov    BYTE PTR [rip+0xe593],0x1        # 411e80 <__bss_start@@Base+0x10>
  4038ed:	pop    rbp
  4038ee:	ret    
  4038ef:	nop
  4038f0:	ret    
  4038f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4038fc:	nop    DWORD PTR [rax+0x0]
  403900:	endbr64 
  403904:	jmp    403890 <_start@@Base+0x70>
  403906:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403910 <read_token_not@@Base>:
  403910:	endbr64 
  403914:	push   rbx
  403915:	lea    rsi,[rip+0x86e8]        # 40c004 <_IO_stdin_used@@Base+0x4>
  40391c:	sub    rsp,0x20
  403920:	mov    rbx,rsp
  403923:	mov    rdi,rbx
  403926:	mov    rax,QWORD PTR fs:0x28
  40392f:	mov    QWORD PTR [rsp+0x18],rax
  403934:	xor    eax,eax
  403936:	inc    QWORD PTR [rip+0xef43]        # 412880 <__bss_start@@Base+0xa10>
  40393d:	call   4083c0 <init_lexer@@Base>
  403942:	mov    rdi,rbx
  403945:	inc    QWORD PTR [rip+0xef3c]        # 412888 <__bss_start@@Base+0xa18>
  40394c:	call   408520 <next@@Base>
  403951:	mov    esi,DWORD PTR [rax]
  403953:	xor    edx,edx
  403955:	mov    r8d,0x94
  40395b:	mov    ecx,0x26c
  403960:	mov    edi,0xc
  403965:	inc    QWORD PTR [rip+0xef24]        # 412890 <__bss_start@@Base+0xa20>
  40396c:	call   406120 <UnityAssertEqualNumber@@Base>
  403971:	mov    rdi,rbx
  403974:	inc    QWORD PTR [rip+0xef1d]        # 412898 <__bss_start@@Base+0xa28>
  40397b:	call   4083f0 <destroy_lexer@@Base>
  403980:	inc    QWORD PTR [rip+0xef19]        # 4128a0 <__bss_start@@Base+0xa30>
  403987:	mov    rax,QWORD PTR [rsp+0x18]
  40398c:	xor    rax,QWORD PTR fs:0x28
  403995:	jne    40399d <read_token_not@@Base+0x8d>
  403997:	add    rsp,0x20
  40399b:	pop    rbx
  40399c:	ret    
  40399d:	call   4032f0 <__stack_chk_fail@plt>
  4039a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039ad:	nop    DWORD PTR [rax]

00000000004039b0 <read_token_greaterthan@@Base>:
  4039b0:	endbr64 
  4039b4:	push   rbx
  4039b5:	lea    rsi,[rip+0x8f6b]        # 40c927 <UnityStrOk@@Base+0x2ab>
  4039bc:	sub    rsp,0x20
  4039c0:	mov    rbx,rsp
  4039c3:	mov    rdi,rbx
  4039c6:	mov    rax,QWORD PTR fs:0x28
  4039cf:	mov    QWORD PTR [rsp+0x18],rax
  4039d4:	xor    eax,eax
  4039d6:	inc    QWORD PTR [rip+0xee63]        # 412840 <__bss_start@@Base+0x9d0>
  4039dd:	call   4083c0 <init_lexer@@Base>
  4039e2:	mov    rdi,rbx
  4039e5:	inc    QWORD PTR [rip+0xee5c]        # 412848 <__bss_start@@Base+0x9d8>
  4039ec:	call   408520 <next@@Base>
  4039f1:	mov    esi,DWORD PTR [rax]
  4039f3:	xor    edx,edx
  4039f5:	mov    r8d,0x94
  4039fb:	mov    ecx,0x25b
  403a00:	mov    edi,0xc
  403a05:	inc    QWORD PTR [rip+0xee44]        # 412850 <__bss_start@@Base+0x9e0>
  403a0c:	call   406120 <UnityAssertEqualNumber@@Base>
  403a11:	mov    rdi,rbx
  403a14:	inc    QWORD PTR [rip+0xee3d]        # 412858 <__bss_start@@Base+0x9e8>
  403a1b:	call   4083f0 <destroy_lexer@@Base>
  403a20:	inc    QWORD PTR [rip+0xee39]        # 412860 <__bss_start@@Base+0x9f0>
  403a27:	mov    rax,QWORD PTR [rsp+0x18]
  403a2c:	xor    rax,QWORD PTR fs:0x28
  403a35:	jne    403a3d <read_token_greaterthan@@Base+0x8d>
  403a37:	add    rsp,0x20
  403a3b:	pop    rbx
  403a3c:	ret    
  403a3d:	call   4032f0 <__stack_chk_fail@plt>
  403a42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a4d:	nop    DWORD PTR [rax]

0000000000403a50 <read_token_lessthan@@Base>:
  403a50:	endbr64 
  403a54:	push   rbx
  403a55:	lea    rsi,[rip+0x85aa]        # 40c006 <_IO_stdin_used@@Base+0x6>
  403a5c:	sub    rsp,0x20
  403a60:	mov    rbx,rsp
  403a63:	mov    rdi,rbx
  403a66:	mov    rax,QWORD PTR fs:0x28
  403a6f:	mov    QWORD PTR [rsp+0x18],rax
  403a74:	xor    eax,eax
  403a76:	inc    QWORD PTR [rip+0xed83]        # 412800 <__bss_start@@Base+0x990>
  403a7d:	call   4083c0 <init_lexer@@Base>
  403a82:	mov    rdi,rbx
  403a85:	inc    QWORD PTR [rip+0xed7c]        # 412808 <__bss_start@@Base+0x998>
  403a8c:	call   408520 <next@@Base>
  403a91:	mov    esi,DWORD PTR [rax]
  403a93:	xor    edx,edx
  403a95:	mov    r8d,0x94
  403a9b:	mov    ecx,0x24a
  403aa0:	mov    edi,0xc
  403aa5:	inc    QWORD PTR [rip+0xed64]        # 412810 <__bss_start@@Base+0x9a0>
  403aac:	call   406120 <UnityAssertEqualNumber@@Base>
  403ab1:	mov    rdi,rbx
  403ab4:	inc    QWORD PTR [rip+0xed5d]        # 412818 <__bss_start@@Base+0x9a8>
  403abb:	call   4083f0 <destroy_lexer@@Base>
  403ac0:	inc    QWORD PTR [rip+0xed59]        # 412820 <__bss_start@@Base+0x9b0>
  403ac7:	mov    rax,QWORD PTR [rsp+0x18]
  403acc:	xor    rax,QWORD PTR fs:0x28
  403ad5:	jne    403add <read_token_lessthan@@Base+0x8d>
  403ad7:	add    rsp,0x20
  403adb:	pop    rbx
  403adc:	ret    
  403add:	call   4032f0 <__stack_chk_fail@plt>
  403ae2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403aed:	nop    DWORD PTR [rax]

0000000000403af0 <read_token_greaterequalthan@@Base>:
  403af0:	endbr64 
  403af4:	push   rbx
  403af5:	lea    rsi,[rip+0x850c]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403afc:	sub    rsp,0x20
  403b00:	mov    rbx,rsp
  403b03:	mov    rdi,rbx
  403b06:	mov    rax,QWORD PTR fs:0x28
  403b0f:	mov    QWORD PTR [rsp+0x18],rax
  403b14:	xor    eax,eax
  403b16:	inc    QWORD PTR [rip+0xeca3]        # 4127c0 <__bss_start@@Base+0x950>
  403b1d:	call   4083c0 <init_lexer@@Base>
  403b22:	mov    rdi,rbx
  403b25:	inc    QWORD PTR [rip+0xec9c]        # 4127c8 <__bss_start@@Base+0x958>
  403b2c:	call   408520 <next@@Base>
  403b31:	mov    esi,DWORD PTR [rax]
  403b33:	xor    edx,edx
  403b35:	mov    r8d,0x94
  403b3b:	mov    ecx,0x239
  403b40:	mov    edi,0xc
  403b45:	inc    QWORD PTR [rip+0xec84]        # 4127d0 <__bss_start@@Base+0x960>
  403b4c:	call   406120 <UnityAssertEqualNumber@@Base>
  403b51:	mov    rdi,rbx
  403b54:	inc    QWORD PTR [rip+0xec7d]        # 4127d8 <__bss_start@@Base+0x968>
  403b5b:	call   4083f0 <destroy_lexer@@Base>
  403b60:	inc    QWORD PTR [rip+0xec79]        # 4127e0 <__bss_start@@Base+0x970>
  403b67:	mov    rax,QWORD PTR [rsp+0x18]
  403b6c:	xor    rax,QWORD PTR fs:0x28
  403b75:	jne    403b7d <read_token_greaterequalthan@@Base+0x8d>
  403b77:	add    rsp,0x20
  403b7b:	pop    rbx
  403b7c:	ret    
  403b7d:	call   4032f0 <__stack_chk_fail@plt>
  403b82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b8d:	nop    DWORD PTR [rax]

0000000000403b90 <read_token_andand@@Base>:
  403b90:	endbr64 
  403b94:	push   rbx
  403b95:	lea    rsi,[rip+0x846f]        # 40c00b <_IO_stdin_used@@Base+0xb>
  403b9c:	sub    rsp,0x20
  403ba0:	mov    rbx,rsp
  403ba3:	mov    rdi,rbx
  403ba6:	mov    rax,QWORD PTR fs:0x28
  403baf:	mov    QWORD PTR [rsp+0x18],rax
  403bb4:	xor    eax,eax
  403bb6:	inc    QWORD PTR [rip+0xebc3]        # 412780 <__bss_start@@Base+0x910>
  403bbd:	call   4083c0 <init_lexer@@Base>
  403bc2:	mov    rdi,rbx
  403bc5:	inc    QWORD PTR [rip+0xebbc]        # 412788 <__bss_start@@Base+0x918>
  403bcc:	call   408520 <next@@Base>
  403bd1:	mov    esi,DWORD PTR [rax]
  403bd3:	xor    edx,edx
  403bd5:	mov    r8d,0x94
  403bdb:	mov    ecx,0x228
  403be0:	mov    edi,0xc
  403be5:	inc    QWORD PTR [rip+0xeba4]        # 412790 <__bss_start@@Base+0x920>
  403bec:	call   406120 <UnityAssertEqualNumber@@Base>
  403bf1:	mov    rdi,rbx
  403bf4:	inc    QWORD PTR [rip+0xeb9d]        # 412798 <__bss_start@@Base+0x928>
  403bfb:	call   4083f0 <destroy_lexer@@Base>
  403c00:	inc    QWORD PTR [rip+0xeb99]        # 4127a0 <__bss_start@@Base+0x930>
  403c07:	mov    rax,QWORD PTR [rsp+0x18]
  403c0c:	xor    rax,QWORD PTR fs:0x28
  403c15:	jne    403c1d <read_token_andand@@Base+0x8d>
  403c17:	add    rsp,0x20
  403c1b:	pop    rbx
  403c1c:	ret    
  403c1d:	call   4032f0 <__stack_chk_fail@plt>
  403c22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c2d:	nop    DWORD PTR [rax]

0000000000403c30 <read_token_oror@@Base>:
  403c30:	endbr64 
  403c34:	push   rbx
  403c35:	lea    rsi,[rip+0x83d2]        # 40c00e <_IO_stdin_used@@Base+0xe>
  403c3c:	sub    rsp,0x20
  403c40:	mov    rbx,rsp
  403c43:	mov    rdi,rbx
  403c46:	mov    rax,QWORD PTR fs:0x28
  403c4f:	mov    QWORD PTR [rsp+0x18],rax
  403c54:	xor    eax,eax
  403c56:	inc    QWORD PTR [rip+0xeae3]        # 412740 <__bss_start@@Base+0x8d0>
  403c5d:	call   4083c0 <init_lexer@@Base>
  403c62:	mov    rdi,rbx
  403c65:	inc    QWORD PTR [rip+0xeadc]        # 412748 <__bss_start@@Base+0x8d8>
  403c6c:	call   408520 <next@@Base>
  403c71:	mov    esi,DWORD PTR [rax]
  403c73:	xor    edx,edx
  403c75:	mov    r8d,0x94
  403c7b:	mov    ecx,0x217
  403c80:	mov    edi,0xc
  403c85:	inc    QWORD PTR [rip+0xeac4]        # 412750 <__bss_start@@Base+0x8e0>
  403c8c:	call   406120 <UnityAssertEqualNumber@@Base>
  403c91:	mov    rdi,rbx
  403c94:	inc    QWORD PTR [rip+0xeabd]        # 412758 <__bss_start@@Base+0x8e8>
  403c9b:	call   4083f0 <destroy_lexer@@Base>
  403ca0:	inc    QWORD PTR [rip+0xeab9]        # 412760 <__bss_start@@Base+0x8f0>
  403ca7:	mov    rax,QWORD PTR [rsp+0x18]
  403cac:	xor    rax,QWORD PTR fs:0x28
  403cb5:	jne    403cbd <read_token_oror@@Base+0x8d>
  403cb7:	add    rsp,0x20
  403cbb:	pop    rbx
  403cbc:	ret    
  403cbd:	call   4032f0 <__stack_chk_fail@plt>
  403cc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403ccd:	nop    DWORD PTR [rax]

0000000000403cd0 <read_token_lessequalthan@@Base>:
  403cd0:	endbr64 
  403cd4:	push   rbx
  403cd5:	lea    rsi,[rip+0x8335]        # 40c011 <_IO_stdin_used@@Base+0x11>
  403cdc:	sub    rsp,0x20
  403ce0:	mov    rbx,rsp
  403ce3:	mov    rdi,rbx
  403ce6:	mov    rax,QWORD PTR fs:0x28
  403cef:	mov    QWORD PTR [rsp+0x18],rax
  403cf4:	xor    eax,eax
  403cf6:	inc    QWORD PTR [rip+0xea03]        # 412700 <__bss_start@@Base+0x890>
  403cfd:	call   4083c0 <init_lexer@@Base>
  403d02:	mov    rdi,rbx
  403d05:	inc    QWORD PTR [rip+0xe9fc]        # 412708 <__bss_start@@Base+0x898>
  403d0c:	call   408520 <next@@Base>
  403d11:	mov    esi,DWORD PTR [rax]
  403d13:	xor    edx,edx
  403d15:	mov    r8d,0x94
  403d1b:	mov    ecx,0x206
  403d20:	mov    edi,0xc
  403d25:	inc    QWORD PTR [rip+0xe9e4]        # 412710 <__bss_start@@Base+0x8a0>
  403d2c:	call   406120 <UnityAssertEqualNumber@@Base>
  403d31:	mov    rdi,rbx
  403d34:	inc    QWORD PTR [rip+0xe9dd]        # 412718 <__bss_start@@Base+0x8a8>
  403d3b:	call   4083f0 <destroy_lexer@@Base>
  403d40:	inc    QWORD PTR [rip+0xe9d9]        # 412720 <__bss_start@@Base+0x8b0>
  403d47:	mov    rax,QWORD PTR [rsp+0x18]
  403d4c:	xor    rax,QWORD PTR fs:0x28
  403d55:	jne    403d5d <read_token_lessequalthan@@Base+0x8d>
  403d57:	add    rsp,0x20
  403d5b:	pop    rbx
  403d5c:	ret    
  403d5d:	call   4032f0 <__stack_chk_fail@plt>
  403d62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d6d:	nop    DWORD PTR [rax]

0000000000403d70 <read_token_notequal@@Base>:
  403d70:	endbr64 
  403d74:	push   rbx
  403d75:	lea    rsi,[rip+0x8298]        # 40c014 <_IO_stdin_used@@Base+0x14>
  403d7c:	sub    rsp,0x20
  403d80:	mov    rbx,rsp
  403d83:	mov    rdi,rbx
  403d86:	mov    rax,QWORD PTR fs:0x28
  403d8f:	mov    QWORD PTR [rsp+0x18],rax
  403d94:	xor    eax,eax
  403d96:	inc    QWORD PTR [rip+0xe923]        # 4126c0 <__bss_start@@Base+0x850>
  403d9d:	call   4083c0 <init_lexer@@Base>
  403da2:	mov    rdi,rbx
  403da5:	inc    QWORD PTR [rip+0xe91c]        # 4126c8 <__bss_start@@Base+0x858>
  403dac:	call   408520 <next@@Base>
  403db1:	mov    esi,DWORD PTR [rax]
  403db3:	xor    edx,edx
  403db5:	mov    r8d,0x94
  403dbb:	mov    ecx,0x1f5
  403dc0:	mov    edi,0xc
  403dc5:	inc    QWORD PTR [rip+0xe904]        # 4126d0 <__bss_start@@Base+0x860>
  403dcc:	call   406120 <UnityAssertEqualNumber@@Base>
  403dd1:	mov    rdi,rbx
  403dd4:	inc    QWORD PTR [rip+0xe8fd]        # 4126d8 <__bss_start@@Base+0x868>
  403ddb:	call   4083f0 <destroy_lexer@@Base>
  403de0:	inc    QWORD PTR [rip+0xe8f9]        # 4126e0 <__bss_start@@Base+0x870>
  403de7:	mov    rax,QWORD PTR [rsp+0x18]
  403dec:	xor    rax,QWORD PTR fs:0x28
  403df5:	jne    403dfd <read_token_notequal@@Base+0x8d>
  403df7:	add    rsp,0x20
  403dfb:	pop    rbx
  403dfc:	ret    
  403dfd:	call   4032f0 <__stack_chk_fail@plt>
  403e02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403e0d:	nop    DWORD PTR [rax]

0000000000403e10 <read_token_equalequal@@Base>:
  403e10:	endbr64 
  403e14:	push   rbx
  403e15:	lea    rsi,[rip+0x81fb]        # 40c017 <_IO_stdin_used@@Base+0x17>
  403e1c:	sub    rsp,0x20
  403e20:	mov    rbx,rsp
  403e23:	mov    rdi,rbx
  403e26:	mov    rax,QWORD PTR fs:0x28
  403e2f:	mov    QWORD PTR [rsp+0x18],rax
  403e34:	xor    eax,eax
  403e36:	inc    QWORD PTR [rip+0xe843]        # 412680 <__bss_start@@Base+0x810>
  403e3d:	call   4083c0 <init_lexer@@Base>
  403e42:	mov    rdi,rbx
  403e45:	inc    QWORD PTR [rip+0xe83c]        # 412688 <__bss_start@@Base+0x818>
  403e4c:	call   408520 <next@@Base>
  403e51:	mov    esi,DWORD PTR [rax]
  403e53:	xor    edx,edx
  403e55:	mov    r8d,0x94
  403e5b:	mov    ecx,0x1e4
  403e60:	mov    edi,0xc
  403e65:	inc    QWORD PTR [rip+0xe824]        # 412690 <__bss_start@@Base+0x820>
  403e6c:	call   406120 <UnityAssertEqualNumber@@Base>
  403e71:	mov    rdi,rbx
  403e74:	inc    QWORD PTR [rip+0xe81d]        # 412698 <__bss_start@@Base+0x828>
  403e7b:	call   4083f0 <destroy_lexer@@Base>
  403e80:	inc    QWORD PTR [rip+0xe819]        # 4126a0 <__bss_start@@Base+0x830>
  403e87:	mov    rax,QWORD PTR [rsp+0x18]
  403e8c:	xor    rax,QWORD PTR fs:0x28
  403e95:	jne    403e9d <read_token_equalequal@@Base+0x8d>
  403e97:	add    rsp,0x20
  403e9b:	pop    rbx
  403e9c:	ret    
  403e9d:	call   4032f0 <__stack_chk_fail@plt>
  403ea2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403ead:	nop    DWORD PTR [rax]

0000000000403eb0 <read_token_else@@Base>:
  403eb0:	endbr64 
  403eb4:	push   rbx
  403eb5:	lea    rsi,[rip+0x81fd]        # 40c0b9 <_IO_stdin_used@@Base+0xb9>
  403ebc:	sub    rsp,0x20
  403ec0:	mov    rbx,rsp
  403ec3:	mov    rdi,rbx
  403ec6:	mov    rax,QWORD PTR fs:0x28
  403ecf:	mov    QWORD PTR [rsp+0x18],rax
  403ed4:	xor    eax,eax
  403ed6:	inc    QWORD PTR [rip+0xe763]        # 412640 <__bss_start@@Base+0x7d0>
  403edd:	call   4083c0 <init_lexer@@Base>
  403ee2:	mov    rdi,rbx
  403ee5:	inc    QWORD PTR [rip+0xe75c]        # 412648 <__bss_start@@Base+0x7d8>
  403eec:	call   408520 <next@@Base>
  403ef1:	mov    esi,DWORD PTR [rax]
  403ef3:	xor    edx,edx
  403ef5:	mov    r8d,0x94
  403efb:	mov    ecx,0x1d3
  403f00:	mov    edi,0xb
  403f05:	inc    QWORD PTR [rip+0xe744]        # 412650 <__bss_start@@Base+0x7e0>
  403f0c:	call   406120 <UnityAssertEqualNumber@@Base>
  403f11:	mov    rdi,rbx
  403f14:	inc    QWORD PTR [rip+0xe73d]        # 412658 <__bss_start@@Base+0x7e8>
  403f1b:	call   4083f0 <destroy_lexer@@Base>
  403f20:	inc    QWORD PTR [rip+0xe739]        # 412660 <__bss_start@@Base+0x7f0>
  403f27:	mov    rax,QWORD PTR [rsp+0x18]
  403f2c:	xor    rax,QWORD PTR fs:0x28
  403f35:	jne    403f3d <read_token_else@@Base+0x8d>
  403f37:	add    rsp,0x20
  403f3b:	pop    rbx
  403f3c:	ret    
  403f3d:	call   4032f0 <__stack_chk_fail@plt>
  403f42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403f4d:	nop    DWORD PTR [rax]

0000000000403f50 <read_token_if@@Base>:
  403f50:	endbr64 
  403f54:	push   rbx
  403f55:	lea    rsi,[rip+0x8220]        # 40c17c <_IO_stdin_used@@Base+0x17c>
  403f5c:	sub    rsp,0x20
  403f60:	mov    rbx,rsp
  403f63:	mov    rdi,rbx
  403f66:	mov    rax,QWORD PTR fs:0x28
  403f6f:	mov    QWORD PTR [rsp+0x18],rax
  403f74:	xor    eax,eax
  403f76:	inc    QWORD PTR [rip+0xe683]        # 412600 <__bss_start@@Base+0x790>
  403f7d:	call   4083c0 <init_lexer@@Base>
  403f82:	mov    rdi,rbx
  403f85:	inc    QWORD PTR [rip+0xe67c]        # 412608 <__bss_start@@Base+0x798>
  403f8c:	call   408520 <next@@Base>
  403f91:	mov    esi,DWORD PTR [rax]
  403f93:	xor    edx,edx
  403f95:	mov    r8d,0x94
  403f9b:	mov    ecx,0x1c2
  403fa0:	mov    edi,0xa
  403fa5:	inc    QWORD PTR [rip+0xe664]        # 412610 <__bss_start@@Base+0x7a0>
  403fac:	call   406120 <UnityAssertEqualNumber@@Base>
  403fb1:	mov    rdi,rbx
  403fb4:	inc    QWORD PTR [rip+0xe65d]        # 412618 <__bss_start@@Base+0x7a8>
  403fbb:	call   4083f0 <destroy_lexer@@Base>
  403fc0:	inc    QWORD PTR [rip+0xe659]        # 412620 <__bss_start@@Base+0x7b0>
  403fc7:	mov    rax,QWORD PTR [rsp+0x18]
  403fcc:	xor    rax,QWORD PTR fs:0x28
  403fd5:	jne    403fdd <read_token_if@@Base+0x8d>
  403fd7:	add    rsp,0x20
  403fdb:	pop    rbx
  403fdc:	ret    
  403fdd:	call   4032f0 <__stack_chk_fail@plt>
  403fe2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403fed:	nop    DWORD PTR [rax]

0000000000403ff0 <read_token_eof@@Base>:
  403ff0:	endbr64 
  403ff4:	push   rbx
  403ff5:	lea    rsi,[rip+0x8923]        # 40c91f <UnityStrOk@@Base+0x2a3>
  403ffc:	sub    rsp,0x20
  404000:	mov    rbx,rsp
  404003:	mov    rdi,rbx
  404006:	mov    rax,QWORD PTR fs:0x28
  40400f:	mov    QWORD PTR [rsp+0x18],rax
  404014:	xor    eax,eax
  404016:	inc    QWORD PTR [rip+0xe5a3]        # 4125c0 <__bss_start@@Base+0x750>
  40401d:	call   4083c0 <init_lexer@@Base>
  404022:	mov    rdi,rbx
  404025:	inc    QWORD PTR [rip+0xe59c]        # 4125c8 <__bss_start@@Base+0x758>
  40402c:	call   408520 <next@@Base>
  404031:	mov    esi,DWORD PTR [rax]
  404033:	xor    edx,edx
  404035:	mov    r8d,0x94
  40403b:	mov    ecx,0x1b1
  404040:	mov    edi,0x9
  404045:	inc    QWORD PTR [rip+0xe584]        # 4125d0 <__bss_start@@Base+0x760>
  40404c:	call   406120 <UnityAssertEqualNumber@@Base>
  404051:	mov    rdi,rbx
  404054:	inc    QWORD PTR [rip+0xe57d]        # 4125d8 <__bss_start@@Base+0x768>
  40405b:	call   4083f0 <destroy_lexer@@Base>
  404060:	inc    QWORD PTR [rip+0xe579]        # 4125e0 <__bss_start@@Base+0x770>
  404067:	mov    rax,QWORD PTR [rsp+0x18]
  40406c:	xor    rax,QWORD PTR fs:0x28
  404075:	jne    40407d <read_token_eof@@Base+0x8d>
  404077:	add    rsp,0x20
  40407b:	pop    rbx
  40407c:	ret    
  40407d:	call   4032f0 <__stack_chk_fail@plt>
  404082:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40408d:	nop    DWORD PTR [rax]

0000000000404090 <read_token_semicolon@@Base>:
  404090:	endbr64 
  404094:	push   rbx
  404095:	lea    rsi,[rip+0x7f7e]        # 40c01a <_IO_stdin_used@@Base+0x1a>
  40409c:	sub    rsp,0x20
  4040a0:	mov    rbx,rsp
  4040a3:	mov    rdi,rbx
  4040a6:	mov    rax,QWORD PTR fs:0x28
  4040af:	mov    QWORD PTR [rsp+0x18],rax
  4040b4:	xor    eax,eax
  4040b6:	inc    QWORD PTR [rip+0xe4c3]        # 412580 <__bss_start@@Base+0x710>
  4040bd:	call   4083c0 <init_lexer@@Base>
  4040c2:	mov    rdi,rbx
  4040c5:	inc    QWORD PTR [rip+0xe4bc]        # 412588 <__bss_start@@Base+0x718>
  4040cc:	call   408520 <next@@Base>
  4040d1:	mov    esi,DWORD PTR [rax]
  4040d3:	xor    edx,edx
  4040d5:	mov    r8d,0x94
  4040db:	mov    ecx,0x1a0
  4040e0:	mov    edi,0x8
  4040e5:	inc    QWORD PTR [rip+0xe4a4]        # 412590 <__bss_start@@Base+0x720>
  4040ec:	call   406120 <UnityAssertEqualNumber@@Base>
  4040f1:	mov    rdi,rbx
  4040f4:	inc    QWORD PTR [rip+0xe49d]        # 412598 <__bss_start@@Base+0x728>
  4040fb:	call   4083f0 <destroy_lexer@@Base>
  404100:	inc    QWORD PTR [rip+0xe499]        # 4125a0 <__bss_start@@Base+0x730>
  404107:	mov    rax,QWORD PTR [rsp+0x18]
  40410c:	xor    rax,QWORD PTR fs:0x28
  404115:	jne    40411d <read_token_semicolon@@Base+0x8d>
  404117:	add    rsp,0x20
  40411b:	pop    rbx
  40411c:	ret    
  40411d:	call   4032f0 <__stack_chk_fail@plt>
  404122:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40412d:	nop    DWORD PTR [rax]

0000000000404130 <read_token_return@@Base>:
  404130:	endbr64 
  404134:	push   rbx
  404135:	lea    rsi,[rip+0x800a]        # 40c146 <_IO_stdin_used@@Base+0x146>
  40413c:	sub    rsp,0x20
  404140:	mov    rbx,rsp
  404143:	mov    rdi,rbx
  404146:	mov    rax,QWORD PTR fs:0x28
  40414f:	mov    QWORD PTR [rsp+0x18],rax
  404154:	xor    eax,eax
  404156:	inc    QWORD PTR [rip+0xe3e3]        # 412540 <__bss_start@@Base+0x6d0>
  40415d:	call   4083c0 <init_lexer@@Base>
  404162:	mov    rdi,rbx
  404165:	inc    QWORD PTR [rip+0xe3dc]        # 412548 <__bss_start@@Base+0x6d8>
  40416c:	call   408520 <next@@Base>
  404171:	mov    esi,DWORD PTR [rax]
  404173:	xor    edx,edx
  404175:	mov    r8d,0x94
  40417b:	mov    ecx,0x18f
  404180:	mov    edi,0x7
  404185:	inc    QWORD PTR [rip+0xe3c4]        # 412550 <__bss_start@@Base+0x6e0>
  40418c:	call   406120 <UnityAssertEqualNumber@@Base>
  404191:	mov    rdi,rbx
  404194:	inc    QWORD PTR [rip+0xe3bd]        # 412558 <__bss_start@@Base+0x6e8>
  40419b:	call   4083f0 <destroy_lexer@@Base>
  4041a0:	inc    QWORD PTR [rip+0xe3b9]        # 412560 <__bss_start@@Base+0x6f0>
  4041a7:	mov    rax,QWORD PTR [rsp+0x18]
  4041ac:	xor    rax,QWORD PTR fs:0x28
  4041b5:	jne    4041bd <read_token_return@@Base+0x8d>
  4041b7:	add    rsp,0x20
  4041bb:	pop    rbx
  4041bc:	ret    
  4041bd:	call   4032f0 <__stack_chk_fail@plt>
  4041c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041cd:	nop    DWORD PTR [rax]

00000000004041d0 <read_token_cbra@@Base>:
  4041d0:	endbr64 
  4041d4:	push   rbx
  4041d5:	lea    rsi,[rip+0x7e67]        # 40c043 <_IO_stdin_used@@Base+0x43>
  4041dc:	sub    rsp,0x20
  4041e0:	mov    rbx,rsp
  4041e3:	mov    rdi,rbx
  4041e6:	mov    rax,QWORD PTR fs:0x28
  4041ef:	mov    QWORD PTR [rsp+0x18],rax
  4041f4:	xor    eax,eax
  4041f6:	inc    QWORD PTR [rip+0xe303]        # 412500 <__bss_start@@Base+0x690>
  4041fd:	call   4083c0 <init_lexer@@Base>
  404202:	mov    rdi,rbx
  404205:	inc    QWORD PTR [rip+0xe2fc]        # 412508 <__bss_start@@Base+0x698>
  40420c:	call   408520 <next@@Base>
  404211:	mov    esi,DWORD PTR [rax]
  404213:	xor    edx,edx
  404215:	mov    r8d,0x94
  40421b:	mov    ecx,0x17e
  404220:	mov    edi,0x6
  404225:	inc    QWORD PTR [rip+0xe2e4]        # 412510 <__bss_start@@Base+0x6a0>
  40422c:	call   406120 <UnityAssertEqualNumber@@Base>
  404231:	mov    rdi,rbx
  404234:	inc    QWORD PTR [rip+0xe2dd]        # 412518 <__bss_start@@Base+0x6a8>
  40423b:	call   4083f0 <destroy_lexer@@Base>
  404240:	inc    QWORD PTR [rip+0xe2d9]        # 412520 <__bss_start@@Base+0x6b0>
  404247:	mov    rax,QWORD PTR [rsp+0x18]
  40424c:	xor    rax,QWORD PTR fs:0x28
  404255:	jne    40425d <read_token_cbra@@Base+0x8d>
  404257:	add    rsp,0x20
  40425b:	pop    rbx
  40425c:	ret    
  40425d:	call   4032f0 <__stack_chk_fail@plt>
  404262:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40426d:	nop    DWORD PTR [rax]

0000000000404270 <read_token_obra@@Base>:
  404270:	endbr64 
  404274:	push   rbx
  404275:	lea    rsi,[rip+0x7da0]        # 40c01c <_IO_stdin_used@@Base+0x1c>
  40427c:	sub    rsp,0x20
  404280:	mov    rbx,rsp
  404283:	mov    rdi,rbx
  404286:	mov    rax,QWORD PTR fs:0x28
  40428f:	mov    QWORD PTR [rsp+0x18],rax
  404294:	xor    eax,eax
  404296:	inc    QWORD PTR [rip+0xe223]        # 4124c0 <__bss_start@@Base+0x650>
  40429d:	call   4083c0 <init_lexer@@Base>
  4042a2:	mov    rdi,rbx
  4042a5:	inc    QWORD PTR [rip+0xe21c]        # 4124c8 <__bss_start@@Base+0x658>
  4042ac:	call   408520 <next@@Base>
  4042b1:	mov    esi,DWORD PTR [rax]
  4042b3:	xor    edx,edx
  4042b5:	mov    r8d,0x94
  4042bb:	mov    ecx,0x16c
  4042c0:	mov    edi,0x5
  4042c5:	inc    QWORD PTR [rip+0xe204]        # 4124d0 <__bss_start@@Base+0x660>
  4042cc:	call   406120 <UnityAssertEqualNumber@@Base>
  4042d1:	mov    rdi,rbx
  4042d4:	inc    QWORD PTR [rip+0xe1fd]        # 4124d8 <__bss_start@@Base+0x668>
  4042db:	call   4083f0 <destroy_lexer@@Base>
  4042e0:	inc    QWORD PTR [rip+0xe1f9]        # 4124e0 <__bss_start@@Base+0x670>
  4042e7:	mov    rax,QWORD PTR [rsp+0x18]
  4042ec:	xor    rax,QWORD PTR fs:0x28
  4042f5:	jne    4042fd <read_token_obra@@Base+0x8d>
  4042f7:	add    rsp,0x20
  4042fb:	pop    rbx
  4042fc:	ret    
  4042fd:	call   4032f0 <__stack_chk_fail@plt>
  404302:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40430d:	nop    DWORD PTR [rax]

0000000000404310 <read_token_cpar@@Base>:
  404310:	endbr64 
  404314:	push   rbx
  404315:	lea    rsi,[rip+0x7d02]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  40431c:	sub    rsp,0x20
  404320:	mov    rbx,rsp
  404323:	mov    rdi,rbx
  404326:	mov    rax,QWORD PTR fs:0x28
  40432f:	mov    QWORD PTR [rsp+0x18],rax
  404334:	xor    eax,eax
  404336:	inc    QWORD PTR [rip+0xe143]        # 412480 <__bss_start@@Base+0x610>
  40433d:	call   4083c0 <init_lexer@@Base>
  404342:	mov    rdi,rbx
  404345:	inc    QWORD PTR [rip+0xe13c]        # 412488 <__bss_start@@Base+0x618>
  40434c:	call   408520 <next@@Base>
  404351:	mov    esi,DWORD PTR [rax]
  404353:	xor    edx,edx
  404355:	mov    r8d,0x94
  40435b:	mov    ecx,0x15b
  404360:	mov    edi,0x4
  404365:	inc    QWORD PTR [rip+0xe124]        # 412490 <__bss_start@@Base+0x620>
  40436c:	call   406120 <UnityAssertEqualNumber@@Base>
  404371:	mov    rdi,rbx
  404374:	inc    QWORD PTR [rip+0xe11d]        # 412498 <__bss_start@@Base+0x628>
  40437b:	call   4083f0 <destroy_lexer@@Base>
  404380:	inc    QWORD PTR [rip+0xe119]        # 4124a0 <__bss_start@@Base+0x630>
  404387:	mov    rax,QWORD PTR [rsp+0x18]
  40438c:	xor    rax,QWORD PTR fs:0x28
  404395:	jne    40439d <read_token_cpar@@Base+0x8d>
  404397:	add    rsp,0x20
  40439b:	pop    rbx
  40439c:	ret    
  40439d:	call   4032f0 <__stack_chk_fail@plt>
  4043a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4043ad:	nop    DWORD PTR [rax]

00000000004043b0 <read_token_opar@@Base>:
  4043b0:	endbr64 
  4043b4:	push   rbx
  4043b5:	lea    rsi,[rip+0x7c64]        # 40c020 <_IO_stdin_used@@Base+0x20>
  4043bc:	sub    rsp,0x20
  4043c0:	mov    rbx,rsp
  4043c3:	mov    rdi,rbx
  4043c6:	mov    rax,QWORD PTR fs:0x28
  4043cf:	mov    QWORD PTR [rsp+0x18],rax
  4043d4:	xor    eax,eax
  4043d6:	inc    QWORD PTR [rip+0xe063]        # 412440 <__bss_start@@Base+0x5d0>
  4043dd:	call   4083c0 <init_lexer@@Base>
  4043e2:	mov    rdi,rbx
  4043e5:	inc    QWORD PTR [rip+0xe05c]        # 412448 <__bss_start@@Base+0x5d8>
  4043ec:	call   408520 <next@@Base>
  4043f1:	mov    esi,DWORD PTR [rax]
  4043f3:	xor    edx,edx
  4043f5:	mov    r8d,0x94
  4043fb:	mov    ecx,0x14a
  404400:	mov    edi,0x3
  404405:	inc    QWORD PTR [rip+0xe044]        # 412450 <__bss_start@@Base+0x5e0>
  40440c:	call   406120 <UnityAssertEqualNumber@@Base>
  404411:	mov    rdi,rbx
  404414:	inc    QWORD PTR [rip+0xe03d]        # 412458 <__bss_start@@Base+0x5e8>
  40441b:	call   4083f0 <destroy_lexer@@Base>
  404420:	inc    QWORD PTR [rip+0xe039]        # 412460 <__bss_start@@Base+0x5f0>
  404427:	mov    rax,QWORD PTR [rsp+0x18]
  40442c:	xor    rax,QWORD PTR fs:0x28
  404435:	jne    40443d <read_token_opar@@Base+0x8d>
  404437:	add    rsp,0x20
  40443b:	pop    rbx
  40443c:	ret    
  40443d:	call   4032f0 <__stack_chk_fail@plt>
  404442:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40444d:	nop    DWORD PTR [rax]

0000000000404450 <read_token_function@@Base>:
  404450:	endbr64 
  404454:	push   rbx
  404455:	lea    rsi,[rip+0x7bfa]        # 40c056 <_IO_stdin_used@@Base+0x56>
  40445c:	sub    rsp,0x20
  404460:	mov    rbx,rsp
  404463:	mov    rdi,rbx
  404466:	mov    rax,QWORD PTR fs:0x28
  40446f:	mov    QWORD PTR [rsp+0x18],rax
  404474:	xor    eax,eax
  404476:	inc    QWORD PTR [rip+0xdf83]        # 412400 <__bss_start@@Base+0x590>
  40447d:	call   4083c0 <init_lexer@@Base>
  404482:	mov    rdi,rbx
  404485:	inc    QWORD PTR [rip+0xdf7c]        # 412408 <__bss_start@@Base+0x598>
  40448c:	call   408520 <next@@Base>
  404491:	mov    esi,DWORD PTR [rax]
  404493:	xor    edx,edx
  404495:	mov    r8d,0x94
  40449b:	mov    ecx,0x139
  4044a0:	mov    edi,0x2
  4044a5:	inc    QWORD PTR [rip+0xdf64]        # 412410 <__bss_start@@Base+0x5a0>
  4044ac:	call   406120 <UnityAssertEqualNumber@@Base>
  4044b1:	mov    rdi,rbx
  4044b4:	inc    QWORD PTR [rip+0xdf5d]        # 412418 <__bss_start@@Base+0x5a8>
  4044bb:	call   4083f0 <destroy_lexer@@Base>
  4044c0:	inc    QWORD PTR [rip+0xdf59]        # 412420 <__bss_start@@Base+0x5b0>
  4044c7:	mov    rax,QWORD PTR [rsp+0x18]
  4044cc:	xor    rax,QWORD PTR fs:0x28
  4044d5:	jne    4044dd <read_token_function@@Base+0x8d>
  4044d7:	add    rsp,0x20
  4044db:	pop    rbx
  4044dc:	ret    
  4044dd:	call   4032f0 <__stack_chk_fail@plt>
  4044e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044ed:	nop    DWORD PTR [rax]

00000000004044f0 <read_token_int_value@@Base>:
  4044f0:	endbr64 
  4044f4:	push   rbx
  4044f5:	lea    rsi,[rip+0x7b26]        # 40c022 <_IO_stdin_used@@Base+0x22>
  4044fc:	sub    rsp,0x20
  404500:	mov    rbx,rsp
  404503:	mov    rdi,rbx
  404506:	mov    rax,QWORD PTR fs:0x28
  40450f:	mov    QWORD PTR [rsp+0x18],rax
  404514:	xor    eax,eax
  404516:	inc    QWORD PTR [rip+0xdea3]        # 4123c0 <__bss_start@@Base+0x550>
  40451d:	call   4083c0 <init_lexer@@Base>
  404522:	mov    rdi,rbx
  404525:	inc    QWORD PTR [rip+0xde9c]        # 4123c8 <__bss_start@@Base+0x558>
  40452c:	call   408520 <next@@Base>
  404531:	mov    esi,DWORD PTR [rax]
  404533:	xor    edx,edx
  404535:	mov    r8d,0x94
  40453b:	mov    ecx,0x128
  404540:	mov    edi,0x1
  404545:	inc    QWORD PTR [rip+0xde84]        # 4123d0 <__bss_start@@Base+0x560>
  40454c:	call   406120 <UnityAssertEqualNumber@@Base>
  404551:	mov    rdi,rbx
  404554:	inc    QWORD PTR [rip+0xde7d]        # 4123d8 <__bss_start@@Base+0x568>
  40455b:	call   4083f0 <destroy_lexer@@Base>
  404560:	inc    QWORD PTR [rip+0xde79]        # 4123e0 <__bss_start@@Base+0x570>
  404567:	mov    rax,QWORD PTR [rsp+0x18]
  40456c:	xor    rax,QWORD PTR fs:0x28
  404575:	jne    40457d <read_token_int_value@@Base+0x8d>
  404577:	add    rsp,0x20
  40457b:	pop    rbx
  40457c:	ret    
  40457d:	call   4032f0 <__stack_chk_fail@plt>
  404582:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40458d:	nop    DWORD PTR [rax]

0000000000404590 <read_token_int_type@@Base>:
  404590:	endbr64 
  404594:	push   rbx
  404595:	lea    rsi,[rip+0x7a8b]        # 40c027 <_IO_stdin_used@@Base+0x27>
  40459c:	sub    rsp,0x20
  4045a0:	mov    rbx,rsp
  4045a3:	mov    rdi,rbx
  4045a6:	mov    rax,QWORD PTR fs:0x28
  4045af:	mov    QWORD PTR [rsp+0x18],rax
  4045b4:	xor    eax,eax
  4045b6:	inc    QWORD PTR [rip+0xddc3]        # 412380 <__bss_start@@Base+0x510>
  4045bd:	call   4083c0 <init_lexer@@Base>
  4045c2:	mov    rdi,rbx
  4045c5:	inc    QWORD PTR [rip+0xddbc]        # 412388 <__bss_start@@Base+0x518>
  4045cc:	call   408520 <next@@Base>
  4045d1:	mov    esi,DWORD PTR [rax]
  4045d3:	xor    edx,edx
  4045d5:	xor    edi,edi
  4045d7:	mov    r8d,0x94
  4045dd:	mov    ecx,0x117
  4045e2:	inc    QWORD PTR [rip+0xdda7]        # 412390 <__bss_start@@Base+0x520>
  4045e9:	call   406120 <UnityAssertEqualNumber@@Base>
  4045ee:	mov    rdi,rbx
  4045f1:	inc    QWORD PTR [rip+0xdda0]        # 412398 <__bss_start@@Base+0x528>
  4045f8:	call   4083f0 <destroy_lexer@@Base>
  4045fd:	inc    QWORD PTR [rip+0xdd9c]        # 4123a0 <__bss_start@@Base+0x530>
  404604:	mov    rax,QWORD PTR [rsp+0x18]
  404609:	xor    rax,QWORD PTR fs:0x28
  404612:	jne    40461a <read_token_int_type@@Base+0x8a>
  404614:	add    rsp,0x20
  404618:	pop    rbx
  404619:	ret    
  40461a:	call   4032f0 <__stack_chk_fail@plt>
  40461f:	nop

0000000000404620 <if_with_else@@Base>:
  404620:	endbr64 
  404624:	push   rbx
  404625:	lea    rsi,[rip+0x7c24]        # 40c250 <_IO_stdin_used@@Base+0x250>
  40462c:	sub    rsp,0x20
  404630:	mov    rbx,rsp
  404633:	mov    rdi,rbx
  404636:	mov    rax,QWORD PTR fs:0x28
  40463f:	mov    QWORD PTR [rsp+0x18],rax
  404644:	xor    eax,eax
  404646:	inc    QWORD PTR [rip+0xdb53]        # 4121a0 <__bss_start@@Base+0x330>
  40464d:	call   4083c0 <init_lexer@@Base>
  404652:	mov    rdi,rbx
  404655:	inc    QWORD PTR [rip+0xdb4c]        # 4121a8 <__bss_start@@Base+0x338>
  40465c:	call   408520 <next@@Base>
  404661:	mov    esi,DWORD PTR [rax]
  404663:	xor    edx,edx
  404665:	mov    r8d,0x94
  40466b:	mov    ecx,0xd2
  404670:	xor    edi,edi
  404672:	inc    QWORD PTR [rip+0xdb37]        # 4121b0 <__bss_start@@Base+0x340>
  404679:	call   406120 <UnityAssertEqualNumber@@Base>
  40467e:	mov    rdi,rbx
  404681:	inc    QWORD PTR [rip+0xdb30]        # 4121b8 <__bss_start@@Base+0x348>
  404688:	call   408520 <next@@Base>
  40468d:	mov    esi,DWORD PTR [rax]
  40468f:	xor    edx,edx
  404691:	mov    r8d,0x94
  404697:	mov    ecx,0xd4
  40469c:	mov    edi,0x2
  4046a1:	inc    QWORD PTR [rip+0xdb18]        # 4121c0 <__bss_start@@Base+0x350>
  4046a8:	call   406120 <UnityAssertEqualNumber@@Base>
  4046ad:	mov    rdi,rbx
  4046b0:	inc    QWORD PTR [rip+0xdb11]        # 4121c8 <__bss_start@@Base+0x358>
  4046b7:	call   408520 <next@@Base>
  4046bc:	mov    esi,DWORD PTR [rax]
  4046be:	xor    edx,edx
  4046c0:	mov    r8d,0x94
  4046c6:	mov    ecx,0xd6
  4046cb:	mov    edi,0x3
  4046d0:	inc    QWORD PTR [rip+0xdaf9]        # 4121d0 <__bss_start@@Base+0x360>
  4046d7:	call   406120 <UnityAssertEqualNumber@@Base>
  4046dc:	mov    rdi,rbx
  4046df:	inc    QWORD PTR [rip+0xdaf2]        # 4121d8 <__bss_start@@Base+0x368>
  4046e6:	call   408520 <next@@Base>
  4046eb:	mov    esi,DWORD PTR [rax]
  4046ed:	xor    edx,edx
  4046ef:	mov    r8d,0x94
  4046f5:	mov    ecx,0xd8
  4046fa:	mov    edi,0x4
  4046ff:	inc    QWORD PTR [rip+0xdada]        # 4121e0 <__bss_start@@Base+0x370>
  404706:	call   406120 <UnityAssertEqualNumber@@Base>
  40470b:	mov    rdi,rbx
  40470e:	inc    QWORD PTR [rip+0xdad3]        # 4121e8 <__bss_start@@Base+0x378>
  404715:	call   408520 <next@@Base>
  40471a:	mov    esi,DWORD PTR [rax]
  40471c:	xor    edx,edx
  40471e:	mov    r8d,0x94
  404724:	mov    ecx,0xda
  404729:	mov    edi,0x5
  40472e:	inc    QWORD PTR [rip+0xdabb]        # 4121f0 <__bss_start@@Base+0x380>
  404735:	call   406120 <UnityAssertEqualNumber@@Base>
  40473a:	mov    rdi,rbx
  40473d:	inc    QWORD PTR [rip+0xdab4]        # 4121f8 <__bss_start@@Base+0x388>
  404744:	call   408520 <next@@Base>
  404749:	mov    esi,DWORD PTR [rax]
  40474b:	inc    QWORD PTR [rip+0xdaae]        # 412200 <__bss_start@@Base+0x390>
  404752:	mov    r8d,0x94
  404758:	xor    edx,edx
  40475a:	mov    ecx,0xdc
  40475f:	mov    edi,0xa
  404764:	call   406120 <UnityAssertEqualNumber@@Base>
  404769:	mov    rdi,rbx
  40476c:	inc    QWORD PTR [rip+0xda95]        # 412208 <__bss_start@@Base+0x398>
  404773:	call   408520 <next@@Base>
  404778:	mov    esi,DWORD PTR [rax]
  40477a:	xor    edx,edx
  40477c:	mov    r8d,0x94
  404782:	mov    ecx,0xde
  404787:	mov    edi,0x3
  40478c:	inc    QWORD PTR [rip+0xda7d]        # 412210 <__bss_start@@Base+0x3a0>
  404793:	call   406120 <UnityAssertEqualNumber@@Base>
  404798:	mov    rdi,rbx
  40479b:	inc    QWORD PTR [rip+0xda76]        # 412218 <__bss_start@@Base+0x3a8>
  4047a2:	call   408520 <next@@Base>
  4047a7:	mov    esi,DWORD PTR [rax]
  4047a9:	xor    edx,edx
  4047ab:	mov    r8d,0x94
  4047b1:	mov    ecx,0xe0
  4047b6:	mov    edi,0x1
  4047bb:	inc    QWORD PTR [rip+0xda5e]        # 412220 <__bss_start@@Base+0x3b0>
  4047c2:	call   406120 <UnityAssertEqualNumber@@Base>
  4047c7:	mov    rdi,rbx
  4047ca:	inc    QWORD PTR [rip+0xda57]        # 412228 <__bss_start@@Base+0x3b8>
  4047d1:	call   408520 <next@@Base>
  4047d6:	mov    esi,DWORD PTR [rax]
  4047d8:	xor    edx,edx
  4047da:	mov    r8d,0x94
  4047e0:	mov    ecx,0xe2
  4047e5:	mov    edi,0xc
  4047ea:	inc    QWORD PTR [rip+0xda3f]        # 412230 <__bss_start@@Base+0x3c0>
  4047f1:	call   406120 <UnityAssertEqualNumber@@Base>
  4047f6:	mov    rdi,rbx
  4047f9:	inc    QWORD PTR [rip+0xda38]        # 412238 <__bss_start@@Base+0x3c8>
  404800:	call   408520 <next@@Base>
  404805:	mov    esi,DWORD PTR [rax]
  404807:	xor    edx,edx
  404809:	mov    r8d,0x94
  40480f:	mov    ecx,0xe4
  404814:	mov    edi,0x1
  404819:	inc    QWORD PTR [rip+0xda20]        # 412240 <__bss_start@@Base+0x3d0>
  404820:	call   406120 <UnityAssertEqualNumber@@Base>
  404825:	mov    rdi,rbx
  404828:	inc    QWORD PTR [rip+0xda19]        # 412248 <__bss_start@@Base+0x3d8>
  40482f:	call   408520 <next@@Base>
  404834:	mov    esi,DWORD PTR [rax]
  404836:	xor    edx,edx
  404838:	mov    r8d,0x94
  40483e:	mov    ecx,0xe6
  404843:	mov    edi,0x4
  404848:	inc    QWORD PTR [rip+0xda01]        # 412250 <__bss_start@@Base+0x3e0>
  40484f:	call   406120 <UnityAssertEqualNumber@@Base>
  404854:	mov    rdi,rbx
  404857:	inc    QWORD PTR [rip+0xd9fa]        # 412258 <__bss_start@@Base+0x3e8>
  40485e:	call   408520 <next@@Base>
  404863:	mov    esi,DWORD PTR [rax]
  404865:	mov    r8d,0x94
  40486b:	mov    ecx,0xe8
  404870:	xor    edx,edx
  404872:	mov    edi,0x5
  404877:	inc    QWORD PTR [rip+0xd9e2]        # 412260 <__bss_start@@Base+0x3f0>
  40487e:	call   406120 <UnityAssertEqualNumber@@Base>
  404883:	mov    rdi,rbx
  404886:	inc    QWORD PTR [rip+0xd9db]        # 412268 <__bss_start@@Base+0x3f8>
  40488d:	call   408520 <next@@Base>
  404892:	mov    esi,DWORD PTR [rax]
  404894:	xor    edx,edx
  404896:	mov    r8d,0x94
  40489c:	mov    ecx,0xea
  4048a1:	mov    edi,0x7
  4048a6:	inc    QWORD PTR [rip+0xd9c3]        # 412270 <__bss_start@@Base+0x400>
  4048ad:	call   406120 <UnityAssertEqualNumber@@Base>
  4048b2:	mov    rdi,rbx
  4048b5:	inc    QWORD PTR [rip+0xd9bc]        # 412278 <__bss_start@@Base+0x408>
  4048bc:	call   408520 <next@@Base>
  4048c1:	mov    esi,DWORD PTR [rax]
  4048c3:	xor    edx,edx
  4048c5:	mov    r8d,0x94
  4048cb:	mov    ecx,0xec
  4048d0:	mov    edi,0x1
  4048d5:	inc    QWORD PTR [rip+0xd9a4]        # 412280 <__bss_start@@Base+0x410>
  4048dc:	call   406120 <UnityAssertEqualNumber@@Base>
  4048e1:	mov    rdi,rbx
  4048e4:	inc    QWORD PTR [rip+0xd99d]        # 412288 <__bss_start@@Base+0x418>
  4048eb:	call   408520 <next@@Base>
  4048f0:	mov    esi,DWORD PTR [rax]
  4048f2:	xor    edx,edx
  4048f4:	mov    r8d,0x94
  4048fa:	mov    ecx,0xee
  4048ff:	mov    edi,0x8
  404904:	inc    QWORD PTR [rip+0xd985]        # 412290 <__bss_start@@Base+0x420>
  40490b:	call   406120 <UnityAssertEqualNumber@@Base>
  404910:	mov    rdi,rbx
  404913:	inc    QWORD PTR [rip+0xd97e]        # 412298 <__bss_start@@Base+0x428>
  40491a:	call   408520 <next@@Base>
  40491f:	mov    esi,DWORD PTR [rax]
  404921:	xor    edx,edx
  404923:	mov    r8d,0x94
  404929:	mov    ecx,0xf0
  40492e:	mov    edi,0x6
  404933:	inc    QWORD PTR [rip+0xd966]        # 4122a0 <__bss_start@@Base+0x430>
  40493a:	call   406120 <UnityAssertEqualNumber@@Base>
  40493f:	mov    rdi,rbx
  404942:	inc    QWORD PTR [rip+0xd95f]        # 4122a8 <__bss_start@@Base+0x438>
  404949:	call   408520 <next@@Base>
  40494e:	mov    esi,DWORD PTR [rax]
  404950:	xor    edx,edx
  404952:	mov    r8d,0x94
  404958:	mov    ecx,0xf2
  40495d:	mov    edi,0xb
  404962:	inc    QWORD PTR [rip+0xd947]        # 4122b0 <__bss_start@@Base+0x440>
  404969:	call   406120 <UnityAssertEqualNumber@@Base>
  40496e:	mov    rdi,rbx
  404971:	inc    QWORD PTR [rip+0xd940]        # 4122b8 <__bss_start@@Base+0x448>
  404978:	call   408520 <next@@Base>
  40497d:	mov    esi,DWORD PTR [rax]
  40497f:	mov    r8d,0x94
  404985:	mov    ecx,0xf4
  40498a:	xor    edx,edx
  40498c:	mov    edi,0x5
  404991:	inc    QWORD PTR [rip+0xd928]        # 4122c0 <__bss_start@@Base+0x450>
  404998:	call   406120 <UnityAssertEqualNumber@@Base>
  40499d:	mov    rdi,rbx
  4049a0:	inc    QWORD PTR [rip+0xd921]        # 4122c8 <__bss_start@@Base+0x458>
  4049a7:	call   408520 <next@@Base>
  4049ac:	mov    esi,DWORD PTR [rax]
  4049ae:	xor    edx,edx
  4049b0:	mov    r8d,0x94
  4049b6:	mov    ecx,0xf6
  4049bb:	mov    edi,0x7
  4049c0:	inc    QWORD PTR [rip+0xd909]        # 4122d0 <__bss_start@@Base+0x460>
  4049c7:	call   406120 <UnityAssertEqualNumber@@Base>
  4049cc:	mov    rdi,rbx
  4049cf:	inc    QWORD PTR [rip+0xd902]        # 4122d8 <__bss_start@@Base+0x468>
  4049d6:	call   408520 <next@@Base>
  4049db:	mov    esi,DWORD PTR [rax]
  4049dd:	xor    edx,edx
  4049df:	mov    r8d,0x94
  4049e5:	mov    ecx,0xf8
  4049ea:	mov    edi,0x1
  4049ef:	inc    QWORD PTR [rip+0xd8ea]        # 4122e0 <__bss_start@@Base+0x470>
  4049f6:	call   406120 <UnityAssertEqualNumber@@Base>
  4049fb:	mov    rdi,rbx
  4049fe:	inc    QWORD PTR [rip+0xd8e3]        # 4122e8 <__bss_start@@Base+0x478>
  404a05:	call   408520 <next@@Base>
  404a0a:	mov    esi,DWORD PTR [rax]
  404a0c:	xor    edx,edx
  404a0e:	mov    r8d,0x94
  404a14:	mov    ecx,0xfa
  404a19:	mov    edi,0x8
  404a1e:	inc    QWORD PTR [rip+0xd8cb]        # 4122f0 <__bss_start@@Base+0x480>
  404a25:	call   406120 <UnityAssertEqualNumber@@Base>
  404a2a:	mov    rdi,rbx
  404a2d:	inc    QWORD PTR [rip+0xd8c4]        # 4122f8 <__bss_start@@Base+0x488>
  404a34:	call   408520 <next@@Base>
  404a39:	mov    esi,DWORD PTR [rax]
  404a3b:	xor    edx,edx
  404a3d:	mov    r8d,0x94
  404a43:	mov    ecx,0xfc
  404a48:	mov    edi,0x6
  404a4d:	inc    QWORD PTR [rip+0xd8ac]        # 412300 <__bss_start@@Base+0x490>
  404a54:	call   406120 <UnityAssertEqualNumber@@Base>
  404a59:	mov    rdi,rbx
  404a5c:	inc    QWORD PTR [rip+0xd8a5]        # 412308 <__bss_start@@Base+0x498>
  404a63:	call   408520 <next@@Base>
  404a68:	mov    esi,DWORD PTR [rax]
  404a6a:	xor    edx,edx
  404a6c:	mov    r8d,0x94
  404a72:	mov    ecx,0xfe
  404a77:	mov    edi,0x7
  404a7c:	inc    QWORD PTR [rip+0xd88d]        # 412310 <__bss_start@@Base+0x4a0>
  404a83:	call   406120 <UnityAssertEqualNumber@@Base>
  404a88:	mov    rdi,rbx
  404a8b:	inc    QWORD PTR [rip+0xd886]        # 412318 <__bss_start@@Base+0x4a8>
  404a92:	call   408520 <next@@Base>
  404a97:	mov    esi,DWORD PTR [rax]
  404a99:	mov    r8d,0x94
  404a9f:	mov    ecx,0x100
  404aa4:	xor    edx,edx
  404aa6:	mov    edi,0x1
  404aab:	inc    QWORD PTR [rip+0xd86e]        # 412320 <__bss_start@@Base+0x4b0>
  404ab2:	call   406120 <UnityAssertEqualNumber@@Base>
  404ab7:	mov    rdi,rbx
  404aba:	inc    QWORD PTR [rip+0xd867]        # 412328 <__bss_start@@Base+0x4b8>
  404ac1:	call   408520 <next@@Base>
  404ac6:	mov    esi,DWORD PTR [rax]
  404ac8:	mov    r8d,0x94
  404ace:	mov    ecx,0x102
  404ad3:	inc    QWORD PTR [rip+0xd856]        # 412330 <__bss_start@@Base+0x4c0>
  404ada:	mov    edi,0x8
  404adf:	xor    edx,edx
  404ae1:	call   406120 <UnityAssertEqualNumber@@Base>
  404ae6:	mov    rdi,rbx
  404ae9:	inc    QWORD PTR [rip+0xd848]        # 412338 <__bss_start@@Base+0x4c8>
  404af0:	call   408520 <next@@Base>
  404af5:	mov    esi,DWORD PTR [rax]
  404af7:	xor    edx,edx
  404af9:	mov    r8d,0x94
  404aff:	mov    ecx,0x104
  404b04:	mov    edi,0x6
  404b09:	inc    QWORD PTR [rip+0xd830]        # 412340 <__bss_start@@Base+0x4d0>
  404b10:	call   406120 <UnityAssertEqualNumber@@Base>
  404b15:	mov    rdi,rbx
  404b18:	inc    QWORD PTR [rip+0xd829]        # 412348 <__bss_start@@Base+0x4d8>
  404b1f:	call   408520 <next@@Base>
  404b24:	mov    esi,DWORD PTR [rax]
  404b26:	xor    edx,edx
  404b28:	mov    r8d,0x94
  404b2e:	mov    ecx,0x106
  404b33:	mov    edi,0x9
  404b38:	inc    QWORD PTR [rip+0xd811]        # 412350 <__bss_start@@Base+0x4e0>
  404b3f:	call   406120 <UnityAssertEqualNumber@@Base>
  404b44:	mov    rdi,rbx
  404b47:	inc    QWORD PTR [rip+0xd80a]        # 412358 <__bss_start@@Base+0x4e8>
  404b4e:	call   4083f0 <destroy_lexer@@Base>
  404b53:	inc    QWORD PTR [rip+0xd806]        # 412360 <__bss_start@@Base+0x4f0>
  404b5a:	mov    rax,QWORD PTR [rsp+0x18]
  404b5f:	xor    rax,QWORD PTR fs:0x28
  404b68:	jne    404b70 <if_with_else@@Base+0x550>
  404b6a:	add    rsp,0x20
  404b6e:	pop    rbx
  404b6f:	ret    
  404b70:	call   4032f0 <__stack_chk_fail@plt>
  404b75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404b80 <if_without_else@@Base>:
  404b80:	endbr64 
  404b84:	push   rbx
  404b85:	lea    rsi,[rip+0x771c]        # 40c2a8 <_IO_stdin_used@@Base+0x2a8>
  404b8c:	sub    rsp,0x20
  404b90:	mov    rbx,rsp
  404b93:	mov    rdi,rbx
  404b96:	mov    rax,QWORD PTR fs:0x28
  404b9f:	mov    QWORD PTR [rsp+0x18],rax
  404ba4:	xor    eax,eax
  404ba6:	inc    QWORD PTR [rip+0xd473]        # 412020 <__bss_start@@Base+0x1b0>
  404bad:	call   4083c0 <init_lexer@@Base>
  404bb2:	mov    rdi,rbx
  404bb5:	inc    QWORD PTR [rip+0xd46c]        # 412028 <__bss_start@@Base+0x1b8>
  404bbc:	call   408520 <next@@Base>
  404bc1:	mov    esi,DWORD PTR [rax]
  404bc3:	xor    edx,edx
  404bc5:	mov    r8d,0x94
  404bcb:	mov    ecx,0x8c
  404bd0:	xor    edi,edi
  404bd2:	inc    QWORD PTR [rip+0xd457]        # 412030 <__bss_start@@Base+0x1c0>
  404bd9:	call   406120 <UnityAssertEqualNumber@@Base>
  404bde:	mov    rdi,rbx
  404be1:	inc    QWORD PTR [rip+0xd450]        # 412038 <__bss_start@@Base+0x1c8>
  404be8:	call   408520 <next@@Base>
  404bed:	mov    esi,DWORD PTR [rax]
  404bef:	xor    edx,edx
  404bf1:	mov    r8d,0x94
  404bf7:	mov    ecx,0x8e
  404bfc:	mov    edi,0x2
  404c01:	inc    QWORD PTR [rip+0xd438]        # 412040 <__bss_start@@Base+0x1d0>
  404c08:	call   406120 <UnityAssertEqualNumber@@Base>
  404c0d:	mov    rdi,rbx
  404c10:	inc    QWORD PTR [rip+0xd431]        # 412048 <__bss_start@@Base+0x1d8>
  404c17:	call   408520 <next@@Base>
  404c1c:	mov    esi,DWORD PTR [rax]
  404c1e:	xor    edx,edx
  404c20:	mov    r8d,0x94
  404c26:	mov    ecx,0x90
  404c2b:	mov    edi,0x3
  404c30:	inc    QWORD PTR [rip+0xd419]        # 412050 <__bss_start@@Base+0x1e0>
  404c37:	call   406120 <UnityAssertEqualNumber@@Base>
  404c3c:	mov    rdi,rbx
  404c3f:	inc    QWORD PTR [rip+0xd412]        # 412058 <__bss_start@@Base+0x1e8>
  404c46:	call   408520 <next@@Base>
  404c4b:	mov    esi,DWORD PTR [rax]
  404c4d:	xor    edx,edx
  404c4f:	mov    r8d,0x94
  404c55:	mov    ecx,0x92
  404c5a:	mov    edi,0x4
  404c5f:	inc    QWORD PTR [rip+0xd3fa]        # 412060 <__bss_start@@Base+0x1f0>
  404c66:	call   406120 <UnityAssertEqualNumber@@Base>
  404c6b:	mov    rdi,rbx
  404c6e:	inc    QWORD PTR [rip+0xd3f3]        # 412068 <__bss_start@@Base+0x1f8>
  404c75:	call   408520 <next@@Base>
  404c7a:	mov    esi,DWORD PTR [rax]
  404c7c:	xor    edx,edx
  404c7e:	mov    r8d,0x94
  404c84:	mov    ecx,0x94
  404c89:	mov    edi,0x5
  404c8e:	inc    QWORD PTR [rip+0xd3db]        # 412070 <__bss_start@@Base+0x200>
  404c95:	call   406120 <UnityAssertEqualNumber@@Base>
  404c9a:	mov    rdi,rbx
  404c9d:	inc    QWORD PTR [rip+0xd3d4]        # 412078 <__bss_start@@Base+0x208>
  404ca4:	call   408520 <next@@Base>
  404ca9:	mov    esi,DWORD PTR [rax]
  404cab:	inc    QWORD PTR [rip+0xd3ce]        # 412080 <__bss_start@@Base+0x210>
  404cb2:	mov    r8d,0x94
  404cb8:	xor    edx,edx
  404cba:	mov    ecx,0x96
  404cbf:	mov    edi,0xa
  404cc4:	call   406120 <UnityAssertEqualNumber@@Base>
  404cc9:	mov    rdi,rbx
  404ccc:	inc    QWORD PTR [rip+0xd3b5]        # 412088 <__bss_start@@Base+0x218>
  404cd3:	call   408520 <next@@Base>
  404cd8:	mov    esi,DWORD PTR [rax]
  404cda:	xor    edx,edx
  404cdc:	mov    r8d,0x94
  404ce2:	mov    ecx,0x98
  404ce7:	mov    edi,0x3
  404cec:	inc    QWORD PTR [rip+0xd39d]        # 412090 <__bss_start@@Base+0x220>
  404cf3:	call   406120 <UnityAssertEqualNumber@@Base>
  404cf8:	mov    rdi,rbx
  404cfb:	inc    QWORD PTR [rip+0xd396]        # 412098 <__bss_start@@Base+0x228>
  404d02:	call   408520 <next@@Base>
  404d07:	mov    esi,DWORD PTR [rax]
  404d09:	xor    edx,edx
  404d0b:	mov    r8d,0x94
  404d11:	mov    ecx,0x9a
  404d16:	mov    edi,0x1
  404d1b:	inc    QWORD PTR [rip+0xd37e]        # 4120a0 <__bss_start@@Base+0x230>
  404d22:	call   406120 <UnityAssertEqualNumber@@Base>
  404d27:	mov    rdi,rbx
  404d2a:	inc    QWORD PTR [rip+0xd377]        # 4120a8 <__bss_start@@Base+0x238>
  404d31:	call   408520 <next@@Base>
  404d36:	mov    esi,DWORD PTR [rax]
  404d38:	xor    edx,edx
  404d3a:	mov    r8d,0x94
  404d40:	mov    ecx,0x9c
  404d45:	mov    edi,0xc
  404d4a:	inc    QWORD PTR [rip+0xd35f]        # 4120b0 <__bss_start@@Base+0x240>
  404d51:	call   406120 <UnityAssertEqualNumber@@Base>
  404d56:	mov    rdi,rbx
  404d59:	inc    QWORD PTR [rip+0xd358]        # 4120b8 <__bss_start@@Base+0x248>
  404d60:	call   408520 <next@@Base>
  404d65:	mov    esi,DWORD PTR [rax]
  404d67:	xor    edx,edx
  404d69:	mov    r8d,0x94
  404d6f:	mov    ecx,0x9e
  404d74:	mov    edi,0x1
  404d79:	inc    QWORD PTR [rip+0xd340]        # 4120c0 <__bss_start@@Base+0x250>
  404d80:	call   406120 <UnityAssertEqualNumber@@Base>
  404d85:	mov    rdi,rbx
  404d88:	inc    QWORD PTR [rip+0xd339]        # 4120c8 <__bss_start@@Base+0x258>
  404d8f:	call   408520 <next@@Base>
  404d94:	mov    esi,DWORD PTR [rax]
  404d96:	xor    edx,edx
  404d98:	mov    r8d,0x94
  404d9e:	mov    ecx,0xa0
  404da3:	mov    edi,0x4
  404da8:	inc    QWORD PTR [rip+0xd321]        # 4120d0 <__bss_start@@Base+0x260>
  404daf:	call   406120 <UnityAssertEqualNumber@@Base>
  404db4:	mov    rdi,rbx
  404db7:	inc    QWORD PTR [rip+0xd31a]        # 4120d8 <__bss_start@@Base+0x268>
  404dbe:	call   408520 <next@@Base>
  404dc3:	mov    esi,DWORD PTR [rax]
  404dc5:	mov    r8d,0x94
  404dcb:	mov    ecx,0xa2
  404dd0:	xor    edx,edx
  404dd2:	mov    edi,0x5
  404dd7:	inc    QWORD PTR [rip+0xd302]        # 4120e0 <__bss_start@@Base+0x270>
  404dde:	call   406120 <UnityAssertEqualNumber@@Base>
  404de3:	mov    rdi,rbx
  404de6:	inc    QWORD PTR [rip+0xd2fb]        # 4120e8 <__bss_start@@Base+0x278>
  404ded:	call   408520 <next@@Base>
  404df2:	mov    esi,DWORD PTR [rax]
  404df4:	xor    edx,edx
  404df6:	mov    r8d,0x94
  404dfc:	mov    ecx,0xa4
  404e01:	mov    edi,0x7
  404e06:	inc    QWORD PTR [rip+0xd2e3]        # 4120f0 <__bss_start@@Base+0x280>
  404e0d:	call   406120 <UnityAssertEqualNumber@@Base>
  404e12:	mov    rdi,rbx
  404e15:	inc    QWORD PTR [rip+0xd2dc]        # 4120f8 <__bss_start@@Base+0x288>
  404e1c:	call   408520 <next@@Base>
  404e21:	mov    esi,DWORD PTR [rax]
  404e23:	xor    edx,edx
  404e25:	mov    r8d,0x94
  404e2b:	mov    ecx,0xa6
  404e30:	mov    edi,0x1
  404e35:	inc    QWORD PTR [rip+0xd2c4]        # 412100 <__bss_start@@Base+0x290>
  404e3c:	call   406120 <UnityAssertEqualNumber@@Base>
  404e41:	mov    rdi,rbx
  404e44:	inc    QWORD PTR [rip+0xd2bd]        # 412108 <__bss_start@@Base+0x298>
  404e4b:	call   408520 <next@@Base>
  404e50:	mov    esi,DWORD PTR [rax]
  404e52:	xor    edx,edx
  404e54:	mov    r8d,0x94
  404e5a:	mov    ecx,0xa8
  404e5f:	mov    edi,0x8
  404e64:	inc    QWORD PTR [rip+0xd2a5]        # 412110 <__bss_start@@Base+0x2a0>
  404e6b:	call   406120 <UnityAssertEqualNumber@@Base>
  404e70:	mov    rdi,rbx
  404e73:	inc    QWORD PTR [rip+0xd29e]        # 412118 <__bss_start@@Base+0x2a8>
  404e7a:	call   408520 <next@@Base>
  404e7f:	mov    esi,DWORD PTR [rax]
  404e81:	xor    edx,edx
  404e83:	mov    r8d,0x94
  404e89:	mov    ecx,0xaa
  404e8e:	mov    edi,0x6
  404e93:	inc    QWORD PTR [rip+0xd286]        # 412120 <__bss_start@@Base+0x2b0>
  404e9a:	call   406120 <UnityAssertEqualNumber@@Base>
  404e9f:	mov    rdi,rbx
  404ea2:	inc    QWORD PTR [rip+0xd27f]        # 412128 <__bss_start@@Base+0x2b8>
  404ea9:	call   408520 <next@@Base>
  404eae:	mov    esi,DWORD PTR [rax]
  404eb0:	xor    edx,edx
  404eb2:	mov    r8d,0x94
  404eb8:	mov    ecx,0xac
  404ebd:	mov    edi,0x7
  404ec2:	inc    QWORD PTR [rip+0xd267]        # 412130 <__bss_start@@Base+0x2c0>
  404ec9:	call   406120 <UnityAssertEqualNumber@@Base>
  404ece:	mov    rdi,rbx
  404ed1:	inc    QWORD PTR [rip+0xd260]        # 412138 <__bss_start@@Base+0x2c8>
  404ed8:	call   408520 <next@@Base>
  404edd:	mov    esi,DWORD PTR [rax]
  404edf:	mov    r8d,0x94
  404ee5:	mov    ecx,0xae
  404eea:	xor    edx,edx
  404eec:	mov    edi,0x1
  404ef1:	inc    QWORD PTR [rip+0xd248]        # 412140 <__bss_start@@Base+0x2d0>
  404ef8:	call   406120 <UnityAssertEqualNumber@@Base>
  404efd:	mov    rdi,rbx
  404f00:	inc    QWORD PTR [rip+0xd241]        # 412148 <__bss_start@@Base+0x2d8>
  404f07:	call   408520 <next@@Base>
  404f0c:	mov    esi,DWORD PTR [rax]
  404f0e:	xor    edx,edx
  404f10:	mov    r8d,0x94
  404f16:	mov    ecx,0xb0
  404f1b:	mov    edi,0x8
  404f20:	inc    QWORD PTR [rip+0xd229]        # 412150 <__bss_start@@Base+0x2e0>
  404f27:	call   406120 <UnityAssertEqualNumber@@Base>
  404f2c:	mov    rdi,rbx
  404f2f:	inc    QWORD PTR [rip+0xd222]        # 412158 <__bss_start@@Base+0x2e8>
  404f36:	call   408520 <next@@Base>
  404f3b:	mov    esi,DWORD PTR [rax]
  404f3d:	xor    edx,edx
  404f3f:	mov    r8d,0x94
  404f45:	mov    ecx,0xb2
  404f4a:	mov    edi,0x6
  404f4f:	inc    QWORD PTR [rip+0xd20a]        # 412160 <__bss_start@@Base+0x2f0>
  404f56:	call   406120 <UnityAssertEqualNumber@@Base>
  404f5b:	mov    rdi,rbx
  404f5e:	inc    QWORD PTR [rip+0xd203]        # 412168 <__bss_start@@Base+0x2f8>
  404f65:	call   408520 <next@@Base>
  404f6a:	mov    esi,DWORD PTR [rax]
  404f6c:	xor    edx,edx
  404f6e:	mov    r8d,0x94
  404f74:	mov    ecx,0xb4
  404f79:	mov    edi,0x9
  404f7e:	inc    QWORD PTR [rip+0xd1eb]        # 412170 <__bss_start@@Base+0x300>
  404f85:	call   406120 <UnityAssertEqualNumber@@Base>
  404f8a:	mov    rdi,rbx
  404f8d:	inc    QWORD PTR [rip+0xd1e4]        # 412178 <__bss_start@@Base+0x308>
  404f94:	call   4083f0 <destroy_lexer@@Base>
  404f99:	inc    QWORD PTR [rip+0xd1e0]        # 412180 <__bss_start@@Base+0x310>
  404fa0:	mov    rax,QWORD PTR [rsp+0x18]
  404fa5:	xor    rax,QWORD PTR fs:0x28
  404fae:	jne    404fb6 <if_without_else@@Base+0x436>
  404fb0:	add    rsp,0x20
  404fb4:	pop    rbx
  404fb5:	ret    
  404fb6:	call   4032f0 <__stack_chk_fail@plt>
  404fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404fc0 <simple_file_only_main@@Base>:
  404fc0:	endbr64 
  404fc4:	push   rbx
  404fc5:	lea    rsi,[rip+0x705f]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  404fcc:	sub    rsp,0x20
  404fd0:	mov    rbx,rsp
  404fd3:	mov    rdi,rbx
  404fd6:	mov    rax,QWORD PTR fs:0x28
  404fdf:	mov    QWORD PTR [rsp+0x18],rax
  404fe4:	xor    eax,eax
  404fe6:	inc    QWORD PTR [rip+0xceb3]        # 411ea0 <__bss_start@@Base+0x30>
  404fed:	call   4083c0 <init_lexer@@Base>
  404ff2:	mov    rdi,rbx
  404ff5:	inc    QWORD PTR [rip+0xceac]        # 411ea8 <__bss_start@@Base+0x38>
  404ffc:	call   408520 <next@@Base>
  405001:	mov    esi,DWORD PTR [rax]
  405003:	xor    edx,edx
  405005:	mov    r8d,0x94
  40500b:	mov    ecx,0x17
  405010:	xor    edi,edi
  405012:	inc    QWORD PTR [rip+0xce97]        # 411eb0 <__bss_start@@Base+0x40>
  405019:	call   406120 <UnityAssertEqualNumber@@Base>
  40501e:	mov    rdi,rbx
  405021:	inc    QWORD PTR [rip+0xce90]        # 411eb8 <__bss_start@@Base+0x48>
  405028:	call   408520 <next@@Base>
  40502d:	mov    esi,DWORD PTR [rax]
  40502f:	xor    edx,edx
  405031:	mov    r8d,0x94
  405037:	mov    ecx,0x19
  40503c:	mov    edi,0x2
  405041:	inc    QWORD PTR [rip+0xce78]        # 411ec0 <__bss_start@@Base+0x50>
  405048:	call   406120 <UnityAssertEqualNumber@@Base>
  40504d:	mov    rdi,rbx
  405050:	inc    QWORD PTR [rip+0xce71]        # 411ec8 <__bss_start@@Base+0x58>
  405057:	call   408520 <next@@Base>
  40505c:	mov    esi,DWORD PTR [rax]
  40505e:	xor    edx,edx
  405060:	mov    r8d,0x94
  405066:	mov    ecx,0x1b
  40506b:	mov    edi,0x3
  405070:	inc    QWORD PTR [rip+0xce59]        # 411ed0 <__bss_start@@Base+0x60>
  405077:	call   406120 <UnityAssertEqualNumber@@Base>
  40507c:	mov    rdi,rbx
  40507f:	inc    QWORD PTR [rip+0xce52]        # 411ed8 <__bss_start@@Base+0x68>
  405086:	call   408520 <next@@Base>
  40508b:	mov    esi,DWORD PTR [rax]
  40508d:	xor    edx,edx
  40508f:	mov    r8d,0x94
  405095:	mov    ecx,0x1d
  40509a:	mov    edi,0x4
  40509f:	inc    QWORD PTR [rip+0xce3a]        # 411ee0 <__bss_start@@Base+0x70>
  4050a6:	call   406120 <UnityAssertEqualNumber@@Base>
  4050ab:	mov    rdi,rbx
  4050ae:	inc    QWORD PTR [rip+0xce33]        # 411ee8 <__bss_start@@Base+0x78>
  4050b5:	call   408520 <next@@Base>
  4050ba:	mov    esi,DWORD PTR [rax]
  4050bc:	xor    edx,edx
  4050be:	mov    r8d,0x94
  4050c4:	mov    ecx,0x1f
  4050c9:	mov    edi,0x5
  4050ce:	inc    QWORD PTR [rip+0xce1b]        # 411ef0 <__bss_start@@Base+0x80>
  4050d5:	call   406120 <UnityAssertEqualNumber@@Base>
  4050da:	mov    rdi,rbx
  4050dd:	inc    QWORD PTR [rip+0xce14]        # 411ef8 <__bss_start@@Base+0x88>
  4050e4:	call   408520 <next@@Base>
  4050e9:	mov    esi,DWORD PTR [rax]
  4050eb:	inc    QWORD PTR [rip+0xce0e]        # 411f00 <__bss_start@@Base+0x90>
  4050f2:	mov    r8d,0x94
  4050f8:	xor    edx,edx
  4050fa:	mov    ecx,0x21
  4050ff:	mov    edi,0x7
  405104:	call   406120 <UnityAssertEqualNumber@@Base>
  405109:	mov    rdi,rbx
  40510c:	inc    QWORD PTR [rip+0xcdf5]        # 411f08 <__bss_start@@Base+0x98>
  405113:	call   408520 <next@@Base>
  405118:	mov    esi,DWORD PTR [rax]
  40511a:	xor    edx,edx
  40511c:	mov    r8d,0x94
  405122:	mov    ecx,0x23
  405127:	mov    edi,0x1
  40512c:	inc    QWORD PTR [rip+0xcddd]        # 411f10 <__bss_start@@Base+0xa0>
  405133:	call   406120 <UnityAssertEqualNumber@@Base>
  405138:	mov    rdi,rbx
  40513b:	inc    QWORD PTR [rip+0xcdd6]        # 411f18 <__bss_start@@Base+0xa8>
  405142:	call   408520 <next@@Base>
  405147:	mov    esi,DWORD PTR [rax]
  405149:	xor    edx,edx
  40514b:	mov    r8d,0x94
  405151:	mov    ecx,0x25
  405156:	mov    edi,0x8
  40515b:	inc    QWORD PTR [rip+0xcdbe]        # 411f20 <__bss_start@@Base+0xb0>
  405162:	call   406120 <UnityAssertEqualNumber@@Base>
  405167:	mov    rdi,rbx
  40516a:	inc    QWORD PTR [rip+0xcdb7]        # 411f28 <__bss_start@@Base+0xb8>
  405171:	call   408520 <next@@Base>
  405176:	mov    esi,DWORD PTR [rax]
  405178:	xor    edx,edx
  40517a:	mov    r8d,0x94
  405180:	mov    ecx,0x27
  405185:	mov    edi,0x6
  40518a:	inc    QWORD PTR [rip+0xcd9f]        # 411f30 <__bss_start@@Base+0xc0>
  405191:	call   406120 <UnityAssertEqualNumber@@Base>
  405196:	mov    rdi,rbx
  405199:	inc    QWORD PTR [rip+0xcd98]        # 411f38 <__bss_start@@Base+0xc8>
  4051a0:	call   408520 <next@@Base>
  4051a5:	mov    esi,DWORD PTR [rax]
  4051a7:	xor    edx,edx
  4051a9:	mov    r8d,0x94
  4051af:	mov    ecx,0x29
  4051b4:	mov    edi,0x9
  4051b9:	inc    QWORD PTR [rip+0xcd80]        # 411f40 <__bss_start@@Base+0xd0>
  4051c0:	call   406120 <UnityAssertEqualNumber@@Base>
  4051c5:	mov    rdi,rbx
  4051c8:	inc    QWORD PTR [rip+0xcd79]        # 411f48 <__bss_start@@Base+0xd8>
  4051cf:	call   4083f0 <destroy_lexer@@Base>
  4051d4:	inc    QWORD PTR [rip+0xcd75]        # 411f50 <__bss_start@@Base+0xe0>
  4051db:	mov    rax,QWORD PTR [rsp+0x18]
  4051e0:	xor    rax,QWORD PTR fs:0x28
  4051e9:	jne    4051f1 <simple_file_only_main@@Base+0x231>
  4051eb:	add    rsp,0x20
  4051ef:	pop    rbx
  4051f0:	ret    
  4051f1:	call   4032f0 <__stack_chk_fail@plt>
  4051f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405200 <push_token_and_call_next@@Base>:
  405200:	endbr64 
  405204:	push   rbp
  405205:	lea    rsi,[rip+0x6e1f]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  40520c:	push   rbx
  40520d:	sub    rsp,0x28
  405211:	mov    rbx,rsp
  405214:	mov    rdi,rbx
  405217:	mov    rax,QWORD PTR fs:0x28
  405220:	mov    QWORD PTR [rsp+0x18],rax
  405225:	xor    eax,eax
  405227:	inc    QWORD PTR [rip+0xcdb2]        # 411fe0 <__bss_start@@Base+0x170>
  40522e:	call   4083c0 <init_lexer@@Base>
  405233:	mov    edi,0x8
  405238:	inc    QWORD PTR [rip+0xcda9]        # 411fe8 <__bss_start@@Base+0x178>
  40523f:	call   403370 <malloc@plt>
  405244:	mov    rsi,rax
  405247:	mov    rdi,rbx
  40524a:	mov    rbp,rax
  40524d:	call   408430 <push_back@@Base>
  405252:	mov    rdi,rbx
  405255:	inc    QWORD PTR [rip+0xcd94]        # 411ff0 <__bss_start@@Base+0x180>
  40525c:	call   408520 <next@@Base>
  405261:	mov    rsi,rax
  405264:	xor    edx,edx
  405266:	mov    r8d,0x94
  40526c:	mov    ecx,0x71
  405271:	mov    rdi,rbp
  405274:	inc    QWORD PTR [rip+0xcd7d]        # 411ff8 <__bss_start@@Base+0x188>
  40527b:	call   406120 <UnityAssertEqualNumber@@Base>
  405280:	mov    rdi,rbx
  405283:	inc    QWORD PTR [rip+0xcd76]        # 412000 <__bss_start@@Base+0x190>
  40528a:	call   4083f0 <destroy_lexer@@Base>
  40528f:	inc    QWORD PTR [rip+0xcd72]        # 412008 <__bss_start@@Base+0x198>
  405296:	mov    rax,QWORD PTR [rsp+0x18]
  40529b:	xor    rax,QWORD PTR fs:0x28
  4052a4:	jne    4052b4 <push_token_and_call_next@@Base+0xb4>
  4052a6:	add    rsp,0x28
  4052aa:	pop    rbx
  4052ab:	mov    rdi,rbp
  4052ae:	pop    rbp
  4052af:	jmp    403230 <free@plt>
  4052b4:	call   4032f0 <__stack_chk_fail@plt>
  4052b9:	nop    DWORD PTR [rax+0x0]

00000000004052c0 <push_two_tokens_to_stack@@Base>:
  4052c0:	endbr64 
  4052c4:	push   r12
  4052c6:	lea    rsi,[rip+0x6d5e]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  4052cd:	push   rbp
  4052ce:	push   rbx
  4052cf:	sub    rsp,0x20
  4052d3:	mov    rbx,rsp
  4052d6:	mov    rdi,rbx
  4052d9:	mov    rax,QWORD PTR fs:0x28
  4052e2:	mov    QWORD PTR [rsp+0x18],rax
  4052e7:	xor    eax,eax
  4052e9:	inc    QWORD PTR [rip+0xccb0]        # 411fa0 <__bss_start@@Base+0x130>
  4052f0:	call   4083c0 <init_lexer@@Base>
  4052f5:	mov    edi,0x8
  4052fa:	inc    QWORD PTR [rip+0xcca7]        # 411fa8 <__bss_start@@Base+0x138>
  405301:	call   403370 <malloc@plt>
  405306:	mov    rbp,rax
  405309:	mov    edi,0x8
  40530e:	call   403370 <malloc@plt>
  405313:	mov    rsi,rbp
  405316:	mov    rdi,rbx
  405319:	mov    r12,rax
  40531c:	call   408430 <push_back@@Base>
  405321:	mov    rax,QWORD PTR [rsp+0x8]
  405326:	xor    edx,edx
  405328:	mov    rdi,QWORD PTR [rax+0x8]
  40532c:	mov    r8d,0x94
  405332:	mov    ecx,0x56
  405337:	mov    rsi,rbp
  40533a:	inc    QWORD PTR [rip+0xcc6f]        # 411fb0 <__bss_start@@Base+0x140>
  405341:	call   406120 <UnityAssertEqualNumber@@Base>
  405346:	mov    rsi,r12
  405349:	mov    rdi,rbx
  40534c:	inc    QWORD PTR [rip+0xcc65]        # 411fb8 <__bss_start@@Base+0x148>
  405353:	call   408430 <push_back@@Base>
  405358:	mov    rax,QWORD PTR [rsp+0x8]
  40535d:	xor    edx,edx
  40535f:	mov    rdi,QWORD PTR [rax+0x8]
  405363:	mov    r8d,0x94
  405369:	mov    ecx,0x58
  40536e:	mov    rsi,r12
  405371:	inc    QWORD PTR [rip+0xcc48]        # 411fc0 <__bss_start@@Base+0x150>
  405378:	call   406120 <UnityAssertEqualNumber@@Base>
  40537d:	mov    rdi,rbx
  405380:	inc    QWORD PTR [rip+0xcc41]        # 411fc8 <__bss_start@@Base+0x158>
  405387:	call   4083f0 <destroy_lexer@@Base>
  40538c:	mov    rdi,rbp
  40538f:	inc    QWORD PTR [rip+0xcc3a]        # 411fd0 <__bss_start@@Base+0x160>
  405396:	call   403230 <free@plt>
  40539b:	mov    rax,QWORD PTR [rsp+0x18]
  4053a0:	xor    rax,QWORD PTR fs:0x28
  4053a9:	jne    4053bb <push_two_tokens_to_stack@@Base+0xfb>
  4053ab:	add    rsp,0x20
  4053af:	pop    rbx
  4053b0:	pop    rbp
  4053b1:	mov    rdi,r12
  4053b4:	pop    r12
  4053b6:	jmp    403230 <free@plt>
  4053bb:	call   4032f0 <__stack_chk_fail@plt>

00000000004053c0 <push_token_to_stack@@Base>:
  4053c0:	endbr64 
  4053c4:	push   rbp
  4053c5:	lea    rsi,[rip+0x6c5f]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  4053cc:	push   rbx
  4053cd:	sub    rsp,0x28
  4053d1:	mov    rbx,rsp
  4053d4:	mov    rdi,rbx
  4053d7:	mov    rax,QWORD PTR fs:0x28
  4053e0:	mov    QWORD PTR [rsp+0x18],rax
  4053e5:	xor    eax,eax
  4053e7:	inc    QWORD PTR [rip+0xcb72]        # 411f60 <__bss_start@@Base+0xf0>
  4053ee:	call   4083c0 <init_lexer@@Base>
  4053f3:	mov    edi,0x8
  4053f8:	inc    QWORD PTR [rip+0xcb69]        # 411f68 <__bss_start@@Base+0xf8>
  4053ff:	call   403370 <malloc@plt>
  405404:	mov    rsi,rax
  405407:	mov    rdi,rbx
  40540a:	mov    rbp,rax
  40540d:	call   408430 <push_back@@Base>
  405412:	mov    rax,QWORD PTR [rsp+0x8]
  405417:	xor    edx,edx
  405419:	mov    rdi,QWORD PTR [rax+0x8]
  40541d:	mov    r8d,0x94
  405423:	mov    ecx,0x3e
  405428:	mov    rsi,rbp
  40542b:	inc    QWORD PTR [rip+0xcb3e]        # 411f70 <__bss_start@@Base+0x100>
  405432:	call   406120 <UnityAssertEqualNumber@@Base>
  405437:	mov    rdi,rbx
  40543a:	inc    QWORD PTR [rip+0xcb37]        # 411f78 <__bss_start@@Base+0x108>
  405441:	call   4083f0 <destroy_lexer@@Base>
  405446:	inc    QWORD PTR [rip+0xcb33]        # 411f80 <__bss_start@@Base+0x110>
  40544d:	mov    rax,QWORD PTR [rsp+0x18]
  405452:	xor    rax,QWORD PTR fs:0x28
  40545b:	jne    40546b <push_token_to_stack@@Base+0xab>
  40545d:	add    rsp,0x28
  405461:	pop    rbx
  405462:	mov    rdi,rbp
  405465:	pop    rbp
  405466:	jmp    403230 <free@plt>
  40546b:	call   4032f0 <__stack_chk_fail@plt>

0000000000405470 <UnityPrintNumber@@Base>:
  405470:	endbr64 
  405474:	push   r13
  405476:	push   r12
  405478:	push   rbp
  405479:	mov    rbp,rdi
  40547c:	push   rbx
  40547d:	sub    rsp,0x8
  405481:	mov    r13,QWORD PTR [rip+0xab58]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405488:	mov    rsi,QWORD PTR [r13+0x0]
  40548c:	test   rdi,rdi
  40548f:	js     405578 <UnityPrintNumber@@Base+0x108>
  405495:	inc    QWORD PTR [rip+0xd66c]        # 412b08 <__bss_start@@Base+0xc98>
  40549c:	cmp    rbp,0x9
  4054a0:	jbe    40559c <UnityPrintNumber@@Base+0x12c>
  4054a6:	mov    rdi,QWORD PTR [rip+0xd673]        # 412b20 <__bss_start@@Base+0xcb0>
  4054ad:	mov    ebx,0xa
  4054b2:	lea    rcx,[rdi+0x1]
  4054b6:	add    rdi,0x14
  4054ba:	jmp    4054d6 <UnityPrintNumber@@Base+0x66>
  4054bc:	nop    DWORD PTR [rax+0x0]
  4054c0:	lea    rax,[rbx+rbx*4]
  4054c4:	inc    rcx
  4054c7:	add    rax,rax
  4054ca:	cmp    rdi,rcx
  4054cd:	je     405560 <UnityPrintNumber@@Base+0xf0>
  4054d3:	mov    rbx,rax
  4054d6:	mov    rax,rbp
  4054d9:	xor    edx,edx
  4054db:	div    rbx
  4054de:	mov    r8,rcx
  4054e1:	cmp    rax,0x9
  4054e5:	ja     4054c0 <UnityPrintNumber@@Base+0x50>
  4054e7:	mov    QWORD PTR [rip+0xd632],rcx        # 412b20 <__bss_start@@Base+0xcb0>
  4054ee:	movabs r12,0xcccccccccccccccd
  4054f8:	jmp    40550e <UnityPrintNumber@@Base+0x9e>
  4054fa:	nop    WORD PTR [rax+rax*1+0x0]
  405500:	inc    QWORD PTR [rip+0xd629]        # 412b30 <__bss_start@@Base+0xcc0>
  405507:	mov    rsi,QWORD PTR [r13+0x0]
  40550b:	mov    rbx,rdx
  40550e:	mov    rax,rbp
  405511:	xor    edx,edx
  405513:	div    rbx
  405516:	mov    rdi,rax
  405519:	mul    r12
  40551c:	shr    rdx,0x3
  405520:	lea    rax,[rdx+rdx*4]
  405524:	add    rax,rax
  405527:	sub    rdi,rax
  40552a:	add    edi,0x30
  40552d:	movzx  edi,dil
  405531:	call   403330 <putc@plt>
  405536:	mov    rax,rbx
  405539:	mul    r12
  40553c:	shr    rdx,0x3
  405540:	cmp    rbx,0x9
  405544:	ja     405500 <UnityPrintNumber@@Base+0x90>
  405546:	inc    QWORD PTR [rip+0xd5db]        # 412b28 <__bss_start@@Base+0xcb8>
  40554d:	add    rsp,0x8
  405551:	pop    rbx
  405552:	pop    rbp
  405553:	pop    r12
  405555:	pop    r13
  405557:	ret    
  405558:	nop    DWORD PTR [rax+rax*1+0x0]
  405560:	mov    QWORD PTR [rip+0xd5b9],r8        # 412b20 <__bss_start@@Base+0xcb0>
  405567:	inc    QWORD PTR [rip+0xd5aa]        # 412b18 <__bss_start@@Base+0xca8>
  40556e:	jmp    4054ee <UnityPrintNumber@@Base+0x7e>
  405573:	nop    DWORD PTR [rax+rax*1+0x0]
  405578:	mov    edi,0x2d
  40557d:	inc    QWORD PTR [rip+0xd57c]        # 412b00 <__bss_start@@Base+0xc90>
  405584:	neg    rbp
  405587:	call   403330 <putc@plt>
  40558c:	inc    QWORD PTR [rip+0xd57d]        # 412b10 <__bss_start@@Base+0xca0>
  405593:	mov    rsi,QWORD PTR [r13+0x0]
  405597:	jmp    40549c <UnityPrintNumber@@Base+0x2c>
  40559c:	lea    edi,[rbp+0x30]
  40559f:	movzx  edi,dil
  4055a3:	call   403330 <putc@plt>
  4055a8:	jmp    405546 <UnityPrintNumber@@Base+0xd6>
  4055aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004055b0 <UnityPrintNumberUnsigned@@Base>:
  4055b0:	endbr64 
  4055b4:	push   r13
  4055b6:	push   r12
  4055b8:	push   rbp
  4055b9:	mov    rbp,rdi
  4055bc:	push   rbx
  4055bd:	sub    rsp,0x8
  4055c1:	mov    r13,QWORD PTR [rip+0xaa18]        # 40ffe0 <stdout@GLIBC_2.2.5>
  4055c8:	inc    QWORD PTR [rip+0xd571]        # 412b40 <__bss_start@@Base+0xcd0>
  4055cf:	mov    rsi,QWORD PTR [r13+0x0]
  4055d3:	cmp    rdi,0x9
  4055d7:	jbe    4056a0 <UnityPrintNumberUnsigned@@Base+0xf0>
  4055dd:	mov    rdi,QWORD PTR [rip+0xd56c]        # 412b50 <__bss_start@@Base+0xce0>
  4055e4:	mov    ebx,0xa
  4055e9:	lea    rcx,[rdi+0x1]
  4055ed:	add    rdi,0x14
  4055f1:	jmp    40560e <UnityPrintNumberUnsigned@@Base+0x5e>
  4055f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4055f8:	lea    rax,[rbx+rbx*4]
  4055fc:	inc    rcx
  4055ff:	add    rax,rax
  405602:	cmp    rdi,rcx
  405605:	je     405690 <UnityPrintNumberUnsigned@@Base+0xe0>
  40560b:	mov    rbx,rax
  40560e:	mov    rax,rbp
  405611:	xor    edx,edx
  405613:	div    rbx
  405616:	mov    r8,rcx
  405619:	cmp    rax,0x9
  40561d:	ja     4055f8 <UnityPrintNumberUnsigned@@Base+0x48>
  40561f:	mov    QWORD PTR [rip+0xd52a],rcx        # 412b50 <__bss_start@@Base+0xce0>
  405626:	movabs r12,0xcccccccccccccccd
  405630:	jmp    405646 <UnityPrintNumberUnsigned@@Base+0x96>
  405632:	nop    WORD PTR [rax+rax*1+0x0]
  405638:	inc    QWORD PTR [rip+0xd521]        # 412b60 <__bss_start@@Base+0xcf0>
  40563f:	mov    rsi,QWORD PTR [r13+0x0]
  405643:	mov    rbx,rdx
  405646:	mov    rax,rbp
  405649:	xor    edx,edx
  40564b:	div    rbx
  40564e:	mov    rdi,rax
  405651:	mul    r12
  405654:	shr    rdx,0x3
  405658:	lea    rax,[rdx+rdx*4]
  40565c:	add    rax,rax
  40565f:	sub    rdi,rax
  405662:	add    edi,0x30
  405665:	movzx  edi,dil
  405669:	call   403330 <putc@plt>
  40566e:	mov    rax,rbx
  405671:	mul    r12
  405674:	shr    rdx,0x3
  405678:	cmp    rbx,0x9
  40567c:	ja     405638 <UnityPrintNumberUnsigned@@Base+0x88>
  40567e:	inc    QWORD PTR [rip+0xd4d3]        # 412b58 <__bss_start@@Base+0xce8>
  405685:	add    rsp,0x8
  405689:	pop    rbx
  40568a:	pop    rbp
  40568b:	pop    r12
  40568d:	pop    r13
  40568f:	ret    
  405690:	mov    QWORD PTR [rip+0xd4b9],r8        # 412b50 <__bss_start@@Base+0xce0>
  405697:	inc    QWORD PTR [rip+0xd4aa]        # 412b48 <__bss_start@@Base+0xcd8>
  40569e:	jmp    405626 <UnityPrintNumberUnsigned@@Base+0x76>
  4056a0:	lea    edi,[rdi+0x30]
  4056a3:	movzx  edi,dil
  4056a7:	call   403330 <putc@plt>
  4056ac:	jmp    40567e <UnityPrintNumberUnsigned@@Base+0xce>
  4056ae:	xchg   ax,ax

00000000004056b0 <UnityPrintNumberHex@@Base>:
  4056b0:	endbr64 
  4056b4:	push   r13
  4056b6:	mov    r13d,esi
  4056b9:	push   r12
  4056bb:	lea    r12d,[r13-0x1]
  4056bf:	push   rbp
  4056c0:	mov    rbp,rdi
  4056c3:	mov    edi,0x30
  4056c8:	push   rbx
  4056c9:	sub    rsp,0x8
  4056cd:	mov    rbx,QWORD PTR [rip+0xa90c]        # 40ffe0 <stdout@GLIBC_2.2.5>
  4056d4:	inc    QWORD PTR [rip+0xd4a5]        # 412b80 <__bss_start@@Base+0xd10>
  4056db:	mov    rsi,QWORD PTR [rbx]
  4056de:	call   403330 <putc@plt>
  4056e3:	mov    rsi,QWORD PTR [rbx]
  4056e6:	mov    edi,0x78
  4056eb:	inc    QWORD PTR [rip+0xd496]        # 412b88 <__bss_start@@Base+0xd18>
  4056f2:	call   403330 <putc@plt>
  4056f7:	inc    QWORD PTR [rip+0xd492]        # 412b90 <__bss_start@@Base+0xd20>
  4056fe:	test   r13b,r13b
  405701:	jg     405727 <UnityPrintNumberHex@@Base+0x77>
  405703:	jmp    405757 <UnityPrintNumberHex@@Base+0xa7>
  405705:	nop    DWORD PTR [rax]
  405708:	lea    edi,[rax+0x30]
  40570b:	dec    r12d
  40570e:	inc    QWORD PTR [rip+0xd483]        # 412b98 <__bss_start@@Base+0xd28>
  405715:	call   403330 <putc@plt>
  40571a:	inc    QWORD PTR [rip+0xd487]        # 412ba8 <__bss_start@@Base+0xd38>
  405721:	cmp    r12b,0xff
  405725:	je     405757 <UnityPrintNumberHex@@Base+0xa7>
  405727:	movzx  eax,r12b
  40572b:	shl    eax,0x2
  40572e:	shrx   rax,rbp,rax
  405733:	and    eax,0xf
  405736:	mov    rsi,QWORD PTR [rbx]
  405739:	cmp    rax,0x9
  40573d:	jbe    405708 <UnityPrintNumberHex@@Base+0x58>
  40573f:	lea    edi,[rax+0x37]
  405742:	dec    r12d
  405745:	inc    QWORD PTR [rip+0xd454]        # 412ba0 <__bss_start@@Base+0xd30>
  40574c:	call   403330 <putc@plt>
  405751:	cmp    r12b,0xff
  405755:	jne    405727 <UnityPrintNumberHex@@Base+0x77>
  405757:	inc    QWORD PTR [rip+0xd452]        # 412bb0 <__bss_start@@Base+0xd40>
  40575e:	add    rsp,0x8
  405762:	pop    rbx
  405763:	pop    rbp
  405764:	pop    r12
  405766:	pop    r13
  405768:	ret    
  405769:	nop    DWORD PTR [rax+0x0]

0000000000405770 <UnityPrintNumberByStyle@@Base>:
  405770:	endbr64 
  405774:	sub    rsp,0x8
  405778:	test   sil,0x10
  40577c:	jne    4057d0 <UnityPrintNumberByStyle@@Base+0x60>
  40577e:	test   sil,0x20
  405782:	jne    4057a8 <UnityPrintNumberByStyle@@Base+0x38>
  405784:	add    esi,esi
  405786:	and    esi,0x1e
  405789:	inc    QWORD PTR [rip+0xd348]        # 412ad8 <__bss_start@@Base+0xc68>
  405790:	call   4056b0 <UnityPrintNumberHex@@Base>
  405795:	inc    QWORD PTR [rip+0xd34c]        # 412ae8 <__bss_start@@Base+0xc78>
  40579c:	add    rsp,0x8
  4057a0:	ret    
  4057a1:	nop    DWORD PTR [rax+0x0]
  4057a8:	mov    rax,0x40c400
  4057af:	and    esi,0xf
  4057b2:	and    rdi,QWORD PTR [rax+rsi*8-0x8]
  4057b7:	inc    QWORD PTR [rip+0xd312]        # 412ad0 <__bss_start@@Base+0xc60>
  4057be:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  4057c3:	inc    QWORD PTR [rip+0xd316]        # 412ae0 <__bss_start@@Base+0xc70>
  4057ca:	add    rsp,0x8
  4057ce:	ret    
  4057cf:	nop
  4057d0:	inc    QWORD PTR [rip+0xd2e9]        # 412ac0 <__bss_start@@Base+0xc50>
  4057d7:	call   405470 <UnityPrintNumber@@Base>
  4057dc:	inc    QWORD PTR [rip+0xd2e5]        # 412ac8 <__bss_start@@Base+0xc58>
  4057e3:	add    rsp,0x8
  4057e7:	ret    
  4057e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004057f0 <UnityPrintLen@@Base>:
  4057f0:	endbr64 
  4057f4:	test   rdi,rdi
  4057f7:	je     405950 <UnityPrintLen@@Base+0x160>
  4057fd:	movzx  eax,BYTE PTR [rdi]
  405800:	inc    QWORD PTR [rip+0xd239]        # 412a40 <__bss_start@@Base+0xbd0>
  405807:	test   al,al
  405809:	je     405958 <UnityPrintLen@@Base+0x168>
  40580f:	test   esi,esi
  405811:	je     405960 <UnityPrintLen@@Base+0x170>
  405817:	push   r13
  405819:	push   r12
  40581b:	mov    r12d,esi
  40581e:	push   rbp
  40581f:	mov    rbp,rdi
  405822:	push   rbx
  405823:	mov    rbx,rdi
  405826:	sub    rsp,0x8
  40582a:	mov    r13,QWORD PTR [rip+0xa7af]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405831:	jmp    405887 <UnityPrintLen@@Base+0x97>
  405833:	nop    DWORD PTR [rax+rax*1+0x0]
  405838:	cmp    al,0xd
  40583a:	je     405900 <UnityPrintLen@@Base+0x110>
  405840:	cmp    al,0xa
  405842:	je     4058c8 <UnityPrintLen@@Base+0xd8>
  405848:	mov    edi,0x5c
  40584d:	inc    QWORD PTR [rip+0xd22c]        # 412a80 <__bss_start@@Base+0xc10>
  405854:	call   403330 <putc@plt>
  405859:	movsx  rdi,BYTE PTR [rbx]
  40585d:	mov    esi,0x2
  405862:	inc    QWORD PTR [rip+0xd22f]        # 412a98 <__bss_start@@Base+0xc28>
  405869:	call   4056b0 <UnityPrintNumberHex@@Base>
  40586e:	inc    rbx
  405871:	movzx  eax,BYTE PTR [rbx]
  405874:	test   al,al
  405876:	je     4058b3 <UnityPrintLen@@Base+0xc3>
  405878:	mov    rdx,rbx
  40587b:	sub    rdx,rbp
  40587e:	cmp    r12d,edx
  405881:	jbe    405938 <UnityPrintLen@@Base+0x148>
  405887:	lea    edx,[rax-0x20]
  40588a:	mov    rsi,QWORD PTR [r13+0x0]
  40588e:	cmp    dl,0x5e
  405891:	ja     405838 <UnityPrintLen@@Base+0x48>
  405893:	movsx  edi,al
  405896:	inc    rbx
  405899:	inc    QWORD PTR [rip+0xd1b0]        # 412a50 <__bss_start@@Base+0xbe0>
  4058a0:	call   403330 <putc@plt>
  4058a5:	movzx  eax,BYTE PTR [rbx]
  4058a8:	inc    QWORD PTR [rip+0xd1a9]        # 412a58 <__bss_start@@Base+0xbe8>
  4058af:	test   al,al
  4058b1:	jne    405878 <UnityPrintLen@@Base+0x88>
  4058b3:	inc    QWORD PTR [rip+0xd1e6]        # 412aa0 <__bss_start@@Base+0xc30>
  4058ba:	add    rsp,0x8
  4058be:	pop    rbx
  4058bf:	pop    rbp
  4058c0:	pop    r12
  4058c2:	pop    r13
  4058c4:	ret    
  4058c5:	nop    DWORD PTR [rax]
  4058c8:	mov    edi,0x5c
  4058cd:	inc    QWORD PTR [rip+0xd1a4]        # 412a78 <__bss_start@@Base+0xc08>
  4058d4:	call   403330 <putc@plt>
  4058d9:	mov    rsi,QWORD PTR [r13+0x0]
  4058dd:	mov    edi,0x6e
  4058e2:	inc    QWORD PTR [rip+0xd19f]        # 412a88 <__bss_start@@Base+0xc18>
  4058e9:	call   403330 <putc@plt>
  4058ee:	inc    QWORD PTR [rip+0xd19b]        # 412a90 <__bss_start@@Base+0xc20>
  4058f5:	jmp    40586e <UnityPrintLen@@Base+0x7e>
  4058fa:	nop    WORD PTR [rax+rax*1+0x0]
  405900:	mov    edi,0x5c
  405905:	inc    QWORD PTR [rip+0xd154]        # 412a60 <__bss_start@@Base+0xbf0>
  40590c:	call   403330 <putc@plt>
  405911:	mov    rsi,QWORD PTR [r13+0x0]
  405915:	mov    edi,0x72
  40591a:	inc    QWORD PTR [rip+0xd147]        # 412a68 <__bss_start@@Base+0xbf8>
  405921:	call   403330 <putc@plt>
  405926:	inc    QWORD PTR [rip+0xd143]        # 412a70 <__bss_start@@Base+0xc00>
  40592d:	jmp    40586e <UnityPrintLen@@Base+0x7e>
  405932:	nop    WORD PTR [rax+rax*1+0x0]
  405938:	inc    QWORD PTR [rip+0xd169]        # 412aa8 <__bss_start@@Base+0xc38>
  40593f:	add    rsp,0x8
  405943:	pop    rbx
  405944:	pop    rbp
  405945:	pop    r12
  405947:	pop    r13
  405949:	ret    
  40594a:	nop    WORD PTR [rax+rax*1+0x0]
  405950:	inc    QWORD PTR [rip+0xd0f1]        # 412a48 <__bss_start@@Base+0xbd8>
  405957:	ret    
  405958:	inc    QWORD PTR [rip+0xd141]        # 412aa0 <__bss_start@@Base+0xc30>
  40595f:	ret    
  405960:	inc    QWORD PTR [rip+0xd141]        # 412aa8 <__bss_start@@Base+0xc38>
  405967:	ret    
  405968:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405970 <UnityPrint@@Base>:
  405970:	endbr64 
  405974:	test   rdi,rdi
  405977:	je     405a88 <UnityPrint@@Base+0x118>
  40597d:	push   rbp
  40597e:	push   rbx
  40597f:	mov    rbx,rdi
  405982:	sub    rsp,0x8
  405986:	movsx  edi,BYTE PTR [rdi]
  405989:	inc    QWORD PTR [rip+0xd030]        # 4129c0 <__bss_start@@Base+0xb50>
  405990:	test   dil,dil
  405993:	je     405a0a <UnityPrint@@Base+0x9a>
  405995:	mov    rbp,QWORD PTR [rip+0xa644]        # 40ffe0 <stdout@GLIBC_2.2.5>
  40599c:	jmp    4059e1 <UnityPrint@@Base+0x71>
  40599e:	xchg   ax,ax
  4059a0:	cmp    dil,0xd
  4059a4:	je     405a50 <UnityPrint@@Base+0xe0>
  4059aa:	cmp    dil,0xa
  4059ae:	je     405a20 <UnityPrint@@Base+0xb0>
  4059b0:	mov    edi,0x5c
  4059b5:	inc    QWORD PTR [rip+0xd044]        # 412a00 <__bss_start@@Base+0xb90>
  4059bc:	call   403330 <putc@plt>
  4059c1:	movsx  rdi,BYTE PTR [rbx]
  4059c5:	mov    esi,0x2
  4059ca:	inc    QWORD PTR [rip+0xd047]        # 412a18 <__bss_start@@Base+0xba8>
  4059d1:	call   4056b0 <UnityPrintNumberHex@@Base>
  4059d6:	inc    rbx
  4059d9:	movsx  edi,BYTE PTR [rbx]
  4059dc:	test   dil,dil
  4059df:	je     405a0a <UnityPrint@@Base+0x9a>
  4059e1:	lea    eax,[rdi-0x20]
  4059e4:	mov    rsi,QWORD PTR [rbp+0x0]
  4059e8:	cmp    al,0x5e
  4059ea:	ja     4059a0 <UnityPrint@@Base+0x30>
  4059ec:	inc    rbx
  4059ef:	inc    QWORD PTR [rip+0xcfda]        # 4129d0 <__bss_start@@Base+0xb60>
  4059f6:	call   403330 <putc@plt>
  4059fb:	movsx  edi,BYTE PTR [rbx]
  4059fe:	inc    QWORD PTR [rip+0xcfd3]        # 4129d8 <__bss_start@@Base+0xb68>
  405a05:	test   dil,dil
  405a08:	jne    4059e1 <UnityPrint@@Base+0x71>
  405a0a:	inc    QWORD PTR [rip+0xd00f]        # 412a20 <__bss_start@@Base+0xbb0>
  405a11:	add    rsp,0x8
  405a15:	pop    rbx
  405a16:	pop    rbp
  405a17:	ret    
  405a18:	nop    DWORD PTR [rax+rax*1+0x0]
  405a20:	mov    edi,0x5c
  405a25:	inc    QWORD PTR [rip+0xcfcc]        # 4129f8 <__bss_start@@Base+0xb88>
  405a2c:	call   403330 <putc@plt>
  405a31:	mov    rsi,QWORD PTR [rbp+0x0]
  405a35:	mov    edi,0x6e
  405a3a:	inc    QWORD PTR [rip+0xcfc7]        # 412a08 <__bss_start@@Base+0xb98>
  405a41:	call   403330 <putc@plt>
  405a46:	inc    QWORD PTR [rip+0xcfc3]        # 412a10 <__bss_start@@Base+0xba0>
  405a4d:	jmp    4059d6 <UnityPrint@@Base+0x66>
  405a4f:	nop
  405a50:	mov    edi,0x5c
  405a55:	inc    QWORD PTR [rip+0xcf84]        # 4129e0 <__bss_start@@Base+0xb70>
  405a5c:	call   403330 <putc@plt>
  405a61:	mov    rsi,QWORD PTR [rbp+0x0]
  405a65:	mov    edi,0x72
  405a6a:	inc    QWORD PTR [rip+0xcf77]        # 4129e8 <__bss_start@@Base+0xb78>
  405a71:	call   403330 <putc@plt>
  405a76:	inc    QWORD PTR [rip+0xcf73]        # 4129f0 <__bss_start@@Base+0xb80>
  405a7d:	jmp    4059d6 <UnityPrint@@Base+0x66>
  405a82:	nop    WORD PTR [rax+rax*1+0x0]
  405a88:	inc    QWORD PTR [rip+0xcf39]        # 4129c8 <__bss_start@@Base+0xb58>
  405a8f:	ret    
  405a90:	push   r12
  405a92:	inc    QWORD PTR [rip+0xd287]        # 412d20 <__bss_start@@Base+0xeb0>
  405a99:	push   rbp
  405a9a:	mov    rbp,rdi
  405a9d:	mov    rdi,0x40c658
  405aa4:	push   rbx
  405aa5:	mov    rbx,rsi
  405aa8:	call   405970 <UnityPrint@@Base>
  405aad:	test   rbp,rbp
  405ab0:	je     405b60 <UnityPrint@@Base+0x1f0>
  405ab6:	mov    r12,QWORD PTR [rip+0xa523]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405abd:	mov    edi,0x27
  405ac2:	mov    rsi,QWORD PTR [r12]
  405ac6:	inc    QWORD PTR [rip+0xd25b]        # 412d28 <__bss_start@@Base+0xeb8>
  405acd:	call   403330 <putc@plt>
  405ad2:	mov    rdi,rbp
  405ad5:	inc    QWORD PTR [rip+0xd25c]        # 412d38 <__bss_start@@Base+0xec8>
  405adc:	call   405970 <UnityPrint@@Base>
  405ae1:	mov    rsi,QWORD PTR [r12]
  405ae5:	mov    edi,0x27
  405aea:	inc    QWORD PTR [rip+0xd24f]        # 412d40 <__bss_start@@Base+0xed0>
  405af1:	call   403330 <putc@plt>
  405af6:	inc    QWORD PTR [rip+0xd24b]        # 412d48 <__bss_start@@Base+0xed8>
  405afd:	mov    rdi,0x40c64f
  405b04:	call   405970 <UnityPrint@@Base>
  405b09:	test   rbx,rbx
  405b0c:	je     405b80 <UnityPrint@@Base+0x210>
  405b0e:	mov    rbp,QWORD PTR [rip+0xa4cb]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405b15:	mov    edi,0x27
  405b1a:	mov    rsi,QWORD PTR [rbp+0x0]
  405b1e:	inc    QWORD PTR [rip+0xd233]        # 412d58 <__bss_start@@Base+0xee8>
  405b25:	call   403330 <putc@plt>
  405b2a:	mov    rdi,rbx
  405b2d:	inc    QWORD PTR [rip+0xd234]        # 412d68 <__bss_start@@Base+0xef8>
  405b34:	call   405970 <UnityPrint@@Base>
  405b39:	mov    rsi,QWORD PTR [rbp+0x0]
  405b3d:	mov    edi,0x27
  405b42:	inc    QWORD PTR [rip+0xd227]        # 412d70 <__bss_start@@Base+0xf00>
  405b49:	call   403330 <putc@plt>
  405b4e:	pop    rbx
  405b4f:	pop    rbp
  405b50:	inc    QWORD PTR [rip+0xd221]        # 412d78 <__bss_start@@Base+0xf08>
  405b57:	pop    r12
  405b59:	ret    
  405b5a:	nop    WORD PTR [rax+rax*1+0x0]
  405b60:	mov    rdi,0x40c666
  405b67:	inc    QWORD PTR [rip+0xd1c2]        # 412d30 <__bss_start@@Base+0xec0>
  405b6e:	call   405970 <UnityPrint@@Base>
  405b73:	inc    QWORD PTR [rip+0xd1d6]        # 412d50 <__bss_start@@Base+0xee0>
  405b7a:	jmp    405afd <UnityPrint@@Base+0x18d>
  405b7f:	nop
  405b80:	mov    rdi,0x40c666
  405b87:	inc    QWORD PTR [rip+0xd1d2]        # 412d60 <__bss_start@@Base+0xef0>
  405b8e:	call   405970 <UnityPrint@@Base>
  405b93:	pop    rbx
  405b94:	pop    rbp
  405b95:	inc    QWORD PTR [rip+0xd1e4]        # 412d80 <__bss_start@@Base+0xf10>
  405b9c:	pop    r12
  405b9e:	ret    
  405b9f:	nop
  405ba0:	test   rdi,rdi
  405ba3:	je     405c60 <UnityPrint@@Base+0x2f0>
  405ba9:	push   r12
  405bab:	mov    r12,0x40c663
  405bb2:	inc    QWORD PTR [rip+0xd107]        # 412cc0 <__bss_start@@Base+0xe50>
  405bb9:	push   rbp
  405bba:	push   rbx
  405bbb:	mov    rbx,rdi
  405bbe:	mov    rdi,r12
  405bc1:	call   405970 <UnityPrint@@Base>
  405bc6:	mov    rbp,0x413c00
  405bcd:	cmp    QWORD PTR [rbp+0x10],0x0
  405bd2:	je     405c40 <UnityPrint@@Base+0x2d0>
  405bd4:	mov    rdi,0x40c450
  405bdb:	inc    QWORD PTR [rip+0xd0ee]        # 412cd0 <__bss_start@@Base+0xe60>
  405be2:	call   405970 <UnityPrint@@Base>
  405be7:	mov    rdi,QWORD PTR [rbp+0x10]
  405beb:	inc    QWORD PTR [rip+0xd0ee]        # 412ce0 <__bss_start@@Base+0xe70>
  405bf2:	call   405970 <UnityPrint@@Base>
  405bf7:	cmp    QWORD PTR [rbp+0x18],0x0
  405bfc:	je     405c70 <UnityPrint@@Base+0x300>
  405bfe:	mov    rdi,0x40c440
  405c05:	inc    QWORD PTR [rip+0xd0dc]        # 412ce8 <__bss_start@@Base+0xe78>
  405c0c:	call   405970 <UnityPrint@@Base>
  405c11:	mov    rdi,QWORD PTR [rbp+0x18]
  405c15:	inc    QWORD PTR [rip+0xd0dc]        # 412cf8 <__bss_start@@Base+0xe88>
  405c1c:	call   405970 <UnityPrint@@Base>
  405c21:	inc    QWORD PTR [rip+0xd0d8]        # 412d00 <__bss_start@@Base+0xe90>
  405c28:	mov    rdi,r12
  405c2b:	call   405970 <UnityPrint@@Base>
  405c30:	inc    QWORD PTR [rip+0xd0d1]        # 412d08 <__bss_start@@Base+0xe98>
  405c37:	jmp    405c47 <UnityPrint@@Base+0x2d7>
  405c39:	nop    DWORD PTR [rax+0x0]
  405c40:	inc    QWORD PTR [rip+0xd091]        # 412cd8 <__bss_start@@Base+0xe68>
  405c47:	mov    rdi,rbx
  405c4a:	call   405970 <UnityPrint@@Base>
  405c4f:	pop    rbx
  405c50:	pop    rbp
  405c51:	inc    QWORD PTR [rip+0xd0b8]        # 412d10 <__bss_start@@Base+0xea0>
  405c58:	pop    r12
  405c5a:	ret    
  405c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405c60:	inc    QWORD PTR [rip+0xd061]        # 412cc8 <__bss_start@@Base+0xe58>
  405c67:	ret    
  405c68:	nop    DWORD PTR [rax+rax*1+0x0]
  405c70:	inc    QWORD PTR [rip+0xd079]        # 412cf0 <__bss_start@@Base+0xe80>
  405c77:	jmp    405c28 <UnityPrint@@Base+0x2b8>
  405c79:	nop    DWORD PTR [rax+0x0]
  405c80:	push   rbp
  405c81:	mov    rbp,rsi
  405c84:	push   rbx
  405c85:	sub    rsp,0x8
  405c89:	inc    QWORD PTR [rip+0xcf90]        # 412c20 <__bss_start@@Base+0xdb0>
  405c90:	call   405970 <UnityPrint@@Base>
  405c95:	mov    rbx,QWORD PTR [rip+0xa344]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405c9c:	mov    edi,0x3a
  405ca1:	mov    rsi,QWORD PTR [rbx]
  405ca4:	inc    QWORD PTR [rip+0xcf7d]        # 412c28 <__bss_start@@Base+0xdb8>
  405cab:	call   403330 <putc@plt>
  405cb0:	mov    rdi,rbp
  405cb3:	inc    QWORD PTR [rip+0xcf76]        # 412c30 <__bss_start@@Base+0xdc0>
  405cba:	call   405470 <UnityPrintNumber@@Base>
  405cbf:	mov    rsi,QWORD PTR [rbx]
  405cc2:	mov    edi,0x3a
  405cc7:	inc    QWORD PTR [rip+0xcf6a]        # 412c38 <__bss_start@@Base+0xdc8>
  405cce:	call   403330 <putc@plt>
  405cd3:	mov    rax,0x413c00
  405cda:	inc    QWORD PTR [rip+0xcf5f]        # 412c40 <__bss_start@@Base+0xdd0>
  405ce1:	mov    rdi,QWORD PTR [rax+0x8]
  405ce5:	call   405970 <UnityPrint@@Base>
  405cea:	mov    rsi,QWORD PTR [rbx]
  405ced:	mov    edi,0x3a
  405cf2:	inc    QWORD PTR [rip+0xcf4f]        # 412c48 <__bss_start@@Base+0xdd8>
  405cf9:	call   403330 <putc@plt>
  405cfe:	inc    QWORD PTR [rip+0xcf4b]        # 412c50 <__bss_start@@Base+0xde0>
  405d05:	add    rsp,0x8
  405d09:	pop    rbx
  405d0a:	pop    rbp
  405d0b:	ret    
  405d0c:	nop    DWORD PTR [rax+0x0]
  405d10:	sub    rsp,0x8
  405d14:	mov    rax,0x413c00
  405d1b:	mov    rsi,rdi
  405d1e:	mov    rdi,QWORD PTR [rax]
  405d21:	inc    QWORD PTR [rip+0xcf38]        # 412c60 <__bss_start@@Base+0xdf0>
  405d28:	call   405c80 <UnityPrint@@Base+0x310>
  405d2d:	mov    rdi,0x40c672
  405d34:	inc    QWORD PTR [rip+0xcf2d]        # 412c68 <__bss_start@@Base+0xdf8>
  405d3b:	call   405970 <UnityPrint@@Base>
  405d40:	mov    rax,QWORD PTR [rip+0xa299]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405d47:	mov    edi,0x3a
  405d4c:	mov    rsi,QWORD PTR [rax]
  405d4f:	inc    QWORD PTR [rip+0xcf1a]        # 412c70 <__bss_start@@Base+0xe00>
  405d56:	call   403330 <putc@plt>
  405d5b:	inc    QWORD PTR [rip+0xcf16]        # 412c78 <__bss_start@@Base+0xe08>
  405d62:	add    rsp,0x8
  405d66:	ret    
  405d67:	nop    WORD PTR [rax+rax*1+0x0]
  405d70:	mov    rax,rdi
  405d73:	or     rax,rsi
  405d76:	je     405da0 <UnityPrint@@Base+0x430>
  405d78:	sub    rsp,0x18
  405d7c:	test   rdi,rdi
  405d7f:	je     405e0c <UnityPrint@@Base+0x49c>
  405d85:	inc    QWORD PTR [rip+0xd0a4]        # 412e30 <__bss_start@@Base+0xfc0>
  405d8c:	test   rsi,rsi
  405d8f:	je     405dad <UnityPrint@@Base+0x43d>
  405d91:	xor    eax,eax
  405d93:	add    rsp,0x18
  405d97:	ret    
  405d98:	nop    DWORD PTR [rax+rax*1+0x0]
  405da0:	inc    QWORD PTR [rip+0xd079]        # 412e20 <__bss_start@@Base+0xfb0>
  405da7:	mov    eax,0x1
  405dac:	ret    
  405dad:	mov    rdi,rdx
  405db0:	mov    QWORD PTR [rsp+0x8],rcx
  405db5:	inc    QWORD PTR [rip+0xd094]        # 412e50 <__bss_start@@Base+0xfe0>
  405dbc:	call   405d10 <UnityPrint@@Base+0x3a0>
  405dc1:	mov    rdi,0x40c580
  405dc8:	inc    QWORD PTR [rip+0xd089]        # 412e58 <__bss_start@@Base+0xfe8>
  405dcf:	call   405970 <UnityPrint@@Base>
  405dd4:	mov    rcx,QWORD PTR [rsp+0x8]
  405dd9:	inc    QWORD PTR [rip+0xd080]        # 412e60 <__bss_start@@Base+0xff0>
  405de0:	mov    rdi,rcx
  405de3:	call   405ba0 <UnityPrint@@Base+0x230>
  405de8:	mov    rax,0x413c00
  405def:	mov    esi,0x1
  405df4:	lea    rdi,[rax+0x50]
  405df8:	inc    QWORD PTR [rip+0xd069]        # 412e68 <__bss_start@@Base+0xff8>
  405dff:	mov    QWORD PTR [rax+0x40],0x1
  405e07:	call   4033a0 <__longjmp_chk@plt>
  405e0c:	mov    rdi,rdx
  405e0f:	mov    QWORD PTR [rsp+0x8],rcx
  405e14:	inc    QWORD PTR [rip+0xd00d]        # 412e28 <__bss_start@@Base+0xfb8>
  405e1b:	call   405d10 <UnityPrint@@Base+0x3a0>
  405e20:	mov    rdi,0x40c5a0
  405e27:	inc    QWORD PTR [rip+0xd00a]        # 412e38 <__bss_start@@Base+0xfc8>
  405e2e:	call   405970 <UnityPrint@@Base>
  405e33:	mov    rcx,QWORD PTR [rsp+0x8]
  405e38:	inc    QWORD PTR [rip+0xd001]        # 412e40 <__bss_start@@Base+0xfd0>
  405e3f:	mov    rdi,rcx
  405e42:	call   405ba0 <UnityPrint@@Base+0x230>
  405e47:	mov    rax,0x413c00
  405e4e:	mov    esi,0x1
  405e53:	lea    rdi,[rax+0x50]
  405e57:	inc    QWORD PTR [rip+0xcfea]        # 412e48 <__bss_start@@Base+0xfd8>
  405e5e:	mov    QWORD PTR [rax+0x40],0x1
  405e66:	call   4033a0 <__longjmp_chk@plt>
  405e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e70 <UnityPrintMask@@Base>:
  405e70:	endbr64 
  405e74:	push   r14
  405e76:	inc    QWORD PTR [rip+0xcd43]        # 412bc0 <__bss_start@@Base+0xd50>
  405e7d:	mov    r14,rsi
  405e80:	push   r13
  405e82:	mov    r13,rdi
  405e85:	push   r12
  405e87:	mov    r12,QWORD PTR [rip+0xa152]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405e8e:	push   rbp
  405e8f:	mov    ebp,0x20
  405e94:	push   rbx
  405e95:	mov    ebx,0x80000000
  405e9a:	jmp    405ebf <UnityPrintMask@@Base+0x4f>
  405e9c:	nop    DWORD PTR [rax+0x0]
  405ea0:	mov    edi,0x31
  405ea5:	inc    QWORD PTR [rip+0xcd24]        # 412bd0 <__bss_start@@Base+0xd60>
  405eac:	call   403330 <putc@plt>
  405eb1:	inc    QWORD PTR [rip+0xcd28]        # 412be0 <__bss_start@@Base+0xd70>
  405eb8:	shr    rbx,1
  405ebb:	dec    ebp
  405ebd:	je     405ee5 <UnityPrintMask@@Base+0x75>
  405ebf:	mov    rsi,QWORD PTR [r12]
  405ec3:	test   r13,rbx
  405ec6:	je     405ef8 <UnityPrintMask@@Base+0x88>
  405ec8:	test   r14,rbx
  405ecb:	jne    405ea0 <UnityPrintMask@@Base+0x30>
  405ecd:	mov    edi,0x30
  405ed2:	inc    QWORD PTR [rip+0xccff]        # 412bd8 <__bss_start@@Base+0xd68>
  405ed9:	shr    rbx,1
  405edc:	call   403330 <putc@plt>
  405ee1:	dec    ebp
  405ee3:	jne    405ebf <UnityPrintMask@@Base+0x4f>
  405ee5:	pop    rbx
  405ee6:	pop    rbp
  405ee7:	pop    r12
  405ee9:	pop    r13
  405eeb:	inc    QWORD PTR [rip+0xccfe]        # 412bf0 <__bss_start@@Base+0xd80>
  405ef2:	pop    r14
  405ef4:	ret    
  405ef5:	nop    DWORD PTR [rax]
  405ef8:	mov    edi,0x58
  405efd:	inc    QWORD PTR [rip+0xccc4]        # 412bc8 <__bss_start@@Base+0xd58>
  405f04:	call   403330 <putc@plt>
  405f09:	inc    QWORD PTR [rip+0xccd8]        # 412be8 <__bss_start@@Base+0xd78>
  405f10:	jmp    405eb8 <UnityPrintMask@@Base+0x48>
  405f12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405f1d:	nop    DWORD PTR [rax]

0000000000405f20 <UnityPrintFail@@Base>:
  405f20:	endbr64 
  405f24:	sub    rsp,0x8
  405f28:	mov    rdi,0x40c672
  405f2f:	inc    QWORD PTR [rip+0xccca]        # 412c00 <__bss_start@@Base+0xd90>
  405f36:	call   405970 <UnityPrint@@Base>
  405f3b:	inc    QWORD PTR [rip+0xccc6]        # 412c08 <__bss_start@@Base+0xd98>
  405f42:	add    rsp,0x8
  405f46:	ret    
  405f47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405f50 <UnityPrintOk@@Base>:
  405f50:	endbr64 
  405f54:	sub    rsp,0x8
  405f58:	mov    rdi,0x40c67c
  405f5f:	inc    QWORD PTR [rip+0xccaa]        # 412c10 <__bss_start@@Base+0xda0>
  405f66:	call   405970 <UnityPrint@@Base>
  405f6b:	inc    QWORD PTR [rip+0xcca6]        # 412c18 <__bss_start@@Base+0xda8>
  405f72:	add    rsp,0x8
  405f76:	ret    
  405f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405f80 <UnityConcludeTest@@Base>:
  405f80:	endbr64 
  405f84:	push   rbx
  405f85:	mov    rbx,0x413c00
  405f8c:	cmp    QWORD PTR [rbx+0x48],0x0
  405f91:	je     405fd0 <UnityConcludeTest@@Base+0x50>
  405f93:	inc    QWORD PTR [rip+0xcce6]        # 412c80 <__bss_start@@Base+0xe10>
  405f9a:	inc    QWORD PTR [rbx+0x38]
  405f9e:	mov    rax,QWORD PTR [rip+0xa03b]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405fa5:	mov    edi,0xa
  405faa:	mov    rsi,QWORD PTR [rax]
  405fad:	mov    QWORD PTR [rbx+0x40],0x0
  405fb5:	mov    QWORD PTR [rbx+0x48],0x0
  405fbd:	call   403330 <putc@plt>
  405fc2:	inc    QWORD PTR [rip+0xccdf]        # 412ca8 <__bss_start@@Base+0xe38>
  405fc9:	pop    rbx
  405fca:	ret    
  405fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  405fd0:	cmp    QWORD PTR [rbx+0x40],0x0
  405fd5:	je     405fe8 <UnityConcludeTest@@Base+0x68>
  405fd7:	inc    QWORD PTR [rip+0xccb2]        # 412c90 <__bss_start@@Base+0xe20>
  405fde:	inc    QWORD PTR [rbx+0x30]
  405fe2:	jmp    405f9e <UnityConcludeTest@@Base+0x1e>
  405fe4:	nop    DWORD PTR [rax+0x0]
  405fe8:	mov    rsi,QWORD PTR [rbx+0x20]
  405fec:	mov    rdi,QWORD PTR [rbx]
  405fef:	inc    QWORD PTR [rip+0xcc92]        # 412c88 <__bss_start@@Base+0xe18>
  405ff6:	call   405c80 <UnityPrint@@Base+0x310>
  405ffb:	mov    rdi,0x40c677
  406002:	inc    QWORD PTR [rip+0xcc8f]        # 412c98 <__bss_start@@Base+0xe28>
  406009:	call   405970 <UnityPrint@@Base>
  40600e:	inc    QWORD PTR [rip+0xcc8b]        # 412ca0 <__bss_start@@Base+0xe30>
  406015:	jmp    405f9e <UnityConcludeTest@@Base+0x1e>
  406017:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406020 <UnityAssertBits@@Base>:
  406020:	endbr64 
  406024:	push   r14
  406026:	push   r13
  406028:	push   r12
  40602a:	push   rbp
  40602b:	push   rbx
  40602c:	mov    rbx,0x413c00
  406033:	cmp    QWORD PTR [rbx+0x40],0x0
  406038:	jne    406070 <UnityAssertBits@@Base+0x50>
  40603a:	cmp    QWORD PTR [rbx+0x48],0x0
  40603f:	jne    406060 <UnityAssertBits@@Base+0x40>
  406041:	mov    rax,rsi
  406044:	xor    rax,rdx
  406047:	inc    QWORD PTR [rip+0xce42]        # 412e90 <__bss_start@@Base+0x1020>
  40604e:	test   rax,rdi
  406051:	jne    406080 <UnityAssertBits@@Base+0x60>
  406053:	pop    rbx
  406054:	pop    rbp
  406055:	pop    r12
  406057:	pop    r13
  406059:	pop    r14
  40605b:	ret    
  40605c:	nop    DWORD PTR [rax+0x0]
  406060:	pop    rbx
  406061:	pop    rbp
  406062:	pop    r12
  406064:	pop    r13
  406066:	inc    QWORD PTR [rip+0xce1b]        # 412e88 <__bss_start@@Base+0x1018>
  40606d:	pop    r14
  40606f:	ret    
  406070:	pop    rbx
  406071:	pop    rbp
  406072:	pop    r12
  406074:	pop    r13
  406076:	inc    QWORD PTR [rip+0xce03]        # 412e80 <__bss_start@@Base+0x1010>
  40607d:	pop    r14
  40607f:	ret    
  406080:	mov    rbp,rdi
  406083:	mov    rdi,r8
  406086:	mov    r13,rcx
  406089:	mov    r12,rdx
  40608c:	mov    r14,rsi
  40608f:	inc    QWORD PTR [rip+0xce02]        # 412e98 <__bss_start@@Base+0x1028>
  406096:	call   405d10 <UnityPrint@@Base+0x3a0>
  40609b:	mov    rdi,0x40c658
  4060a2:	inc    QWORD PTR [rip+0xcdf7]        # 412ea0 <__bss_start@@Base+0x1030>
  4060a9:	call   405970 <UnityPrint@@Base>
  4060ae:	mov    rsi,r14
  4060b1:	mov    rdi,rbp
  4060b4:	inc    QWORD PTR [rip+0xcded]        # 412ea8 <__bss_start@@Base+0x1038>
  4060bb:	call   405e70 <UnityPrintMask@@Base>
  4060c0:	mov    rdi,0x40c64f
  4060c7:	inc    QWORD PTR [rip+0xcde2]        # 412eb0 <__bss_start@@Base+0x1040>
  4060ce:	call   405970 <UnityPrint@@Base>
  4060d3:	mov    rsi,r12
  4060d6:	mov    rdi,rbp
  4060d9:	inc    QWORD PTR [rip+0xcdd8]        # 412eb8 <__bss_start@@Base+0x1048>
  4060e0:	call   405e70 <UnityPrintMask@@Base>
  4060e5:	mov    rdi,r13
  4060e8:	inc    QWORD PTR [rip+0xcdd1]        # 412ec0 <__bss_start@@Base+0x1050>
  4060ef:	call   405ba0 <UnityPrint@@Base+0x230>
  4060f4:	mov    esi,0x1
  4060f9:	lea    rdi,[rbx+0x50]
  4060fd:	inc    QWORD PTR [rip+0xcdc4]        # 412ec8 <__bss_start@@Base+0x1058>
  406104:	mov    QWORD PTR [rbx+0x40],0x1
  40610c:	call   4033a0 <__longjmp_chk@plt>
  406111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40611c:	nop    DWORD PTR [rax+0x0]

0000000000406120 <UnityAssertEqualNumber@@Base>:
  406120:	endbr64 
  406124:	push   r14
  406126:	push   r13
  406128:	push   r12
  40612a:	push   rbp
  40612b:	push   rbx
  40612c:	mov    rbx,0x413c00
  406133:	cmp    QWORD PTR [rbx+0x40],0x0
  406138:	jne    406170 <UnityAssertEqualNumber@@Base+0x50>
  40613a:	cmp    QWORD PTR [rbx+0x48],0x0
  40613f:	jne    406160 <UnityAssertEqualNumber@@Base+0x40>
  406141:	inc    QWORD PTR [rip+0xcda8]        # 412ef0 <__bss_start@@Base+0x1080>
  406148:	cmp    rdi,rsi
  40614b:	jne    406180 <UnityAssertEqualNumber@@Base+0x60>
  40614d:	pop    rbx
  40614e:	pop    rbp
  40614f:	pop    r12
  406151:	pop    r13
  406153:	pop    r14
  406155:	ret    
  406156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406160:	pop    rbx
  406161:	pop    rbp
  406162:	pop    r12
  406164:	pop    r13
  406166:	inc    QWORD PTR [rip+0xcd7b]        # 412ee8 <__bss_start@@Base+0x1078>
  40616d:	pop    r14
  40616f:	ret    
  406170:	pop    rbx
  406171:	pop    rbp
  406172:	pop    r12
  406174:	pop    r13
  406176:	inc    QWORD PTR [rip+0xcd63]        # 412ee0 <__bss_start@@Base+0x1070>
  40617d:	pop    r14
  40617f:	ret    
  406180:	mov    rbp,rdi
  406183:	mov    rdi,rcx
  406186:	mov    r12d,r8d
  406189:	mov    r13,rdx
  40618c:	mov    r14,rsi
  40618f:	inc    QWORD PTR [rip+0xcd62]        # 412ef8 <__bss_start@@Base+0x1088>
  406196:	call   405d10 <UnityPrint@@Base+0x3a0>
  40619b:	mov    rdi,0x40c658
  4061a2:	inc    QWORD PTR [rip+0xcd57]        # 412f00 <__bss_start@@Base+0x1090>
  4061a9:	call   405970 <UnityPrint@@Base>
  4061ae:	mov    esi,r12d
  4061b1:	mov    rdi,rbp
  4061b4:	inc    QWORD PTR [rip+0xcd4d]        # 412f08 <__bss_start@@Base+0x1098>
  4061bb:	call   405770 <UnityPrintNumberByStyle@@Base>
  4061c0:	mov    rdi,0x40c64f
  4061c7:	inc    QWORD PTR [rip+0xcd42]        # 412f10 <__bss_start@@Base+0x10a0>
  4061ce:	call   405970 <UnityPrint@@Base>
  4061d3:	mov    esi,r12d
  4061d6:	mov    rdi,r14
  4061d9:	inc    QWORD PTR [rip+0xcd38]        # 412f18 <__bss_start@@Base+0x10a8>
  4061e0:	call   405770 <UnityPrintNumberByStyle@@Base>
  4061e5:	mov    rdi,r13
  4061e8:	inc    QWORD PTR [rip+0xcd31]        # 412f20 <__bss_start@@Base+0x10b0>
  4061ef:	call   405ba0 <UnityPrint@@Base+0x230>
  4061f4:	mov    esi,0x1
  4061f9:	lea    rdi,[rbx+0x50]
  4061fd:	inc    QWORD PTR [rip+0xcd24]        # 412f28 <__bss_start@@Base+0x10b8>
  406204:	mov    QWORD PTR [rbx+0x40],0x1
  40620c:	call   4033a0 <__longjmp_chk@plt>
  406211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40621c:	nop    DWORD PTR [rax+0x0]

0000000000406220 <UnityAssertEqualIntArray@@Base>:
  406220:	endbr64 
  406224:	push   r15
  406226:	push   r14
  406228:	push   r13
  40622a:	push   r12
  40622c:	push   rbp
  40622d:	push   rbx
  40622e:	sub    rsp,0x18
  406232:	mov    r13,0x413c00
  406239:	cmp    QWORD PTR [r13+0x40],0x0
  40623e:	jne    406330 <UnityAssertEqualIntArray@@Base+0x110>
  406244:	cmp    QWORD PTR [r13+0x48],0x0
  406249:	jne    406318 <UnityAssertEqualIntArray@@Base+0xf8>
  40624f:	mov    r12d,edx
  406252:	mov    r14,rcx
  406255:	inc    QWORD PTR [rip+0xccf4]        # 412f50 <__bss_start@@Base+0x10e0>
  40625c:	test   edx,edx
  40625e:	je     4067d7 <UnityAssertEqualIntArray@@Base+0x5b7>
  406264:	mov    rdx,r8
  406267:	mov    DWORD PTR [rsp+0xc],r9d
  40626c:	mov    QWORD PTR [rsp],r8
  406270:	mov    rbx,rdi
  406273:	mov    rbp,rsi
  406276:	call   405d70 <UnityPrint@@Base+0x400>
  40627b:	cmp    eax,0x1
  40627e:	mov    r8,QWORD PTR [rsp]
  406282:	mov    r9d,DWORD PTR [rsp+0xc]
  406287:	je     4063a8 <UnityAssertEqualIntArray@@Base+0x188>
  40628d:	mov    eax,r9d
  406290:	and    al,0x7f
  406292:	sub    eax,0x11
  406295:	lea    edx,[r12-0x1]
  40629a:	cmp    eax,0x37
  40629d:	ja     406350 <UnityAssertEqualIntArray@@Base+0x130>
  4062a3:	mov    ecx,0x1
  4062a8:	shlx   rax,rcx,rax
  4062ad:	movabs rcx,0x80000000800080
  4062b7:	test   rax,rcx
  4062ba:	je     4063b8 <UnityAssertEqualIntArray@@Base+0x198>
  4062c0:	mov    rax,QWORD PTR [rbx]
  4062c3:	cmp    QWORD PTR [rbp+0x0],rax
  4062c7:	jne    4067c7 <UnityAssertEqualIntArray@@Base+0x5a7>
  4062cd:	mov    rax,QWORD PTR [rip+0xcd74]        # 413048 <__bss_start@@Base+0x11d8>
  4062d4:	mov    r12d,edx
  4062d7:	inc    rax
  4062da:	jmp    4062f0 <UnityAssertEqualIntArray@@Base+0xd0>
  4062dc:	nop    DWORD PTR [rax+0x0]
  4062e0:	mov    rdi,QWORD PTR [rbp+0x0]
  4062e4:	inc    rax
  4062e7:	cmp    QWORD PTR [rbx],rdi
  4062ea:	jne    406558 <UnityAssertEqualIntArray@@Base+0x338>
  4062f0:	dec    r12d
  4062f3:	mov    rcx,rax
  4062f6:	add    rbx,0x8
  4062fa:	add    rbp,0x8
  4062fe:	cmp    r12d,0xffffffff
  406302:	jne    4062e0 <UnityAssertEqualIntArray@@Base+0xc0>
  406304:	mov    QWORD PTR [rip+0xcd3d],rax        # 413048 <__bss_start@@Base+0x11d8>
  40630b:	inc    QWORD PTR [rip+0xcd7e]        # 413090 <__bss_start@@Base+0x1220>
  406312:	jmp    40631f <UnityAssertEqualIntArray@@Base+0xff>
  406314:	nop    DWORD PTR [rax+0x0]
  406318:	inc    QWORD PTR [rip+0xcc29]        # 412f48 <__bss_start@@Base+0x10d8>
  40631f:	add    rsp,0x18
  406323:	pop    rbx
  406324:	pop    rbp
  406325:	pop    r12
  406327:	pop    r13
  406329:	pop    r14
  40632b:	pop    r15
  40632d:	ret    
  40632e:	xchg   ax,ax
  406330:	inc    QWORD PTR [rip+0xcc09]        # 412f40 <__bss_start@@Base+0x10d0>
  406337:	add    rsp,0x18
  40633b:	pop    rbx
  40633c:	pop    rbp
  40633d:	pop    r12
  40633f:	pop    r13
  406341:	pop    r14
  406343:	pop    r15
  406345:	ret    
  406346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406350:	mov    eax,DWORD PTR [rbp+0x0]
  406353:	inc    QWORD PTR [rip+0xcc26]        # 412f80 <__bss_start@@Base+0x1110>
  40635a:	cmp    DWORD PTR [rbx],eax
  40635c:	jne    4067cf <UnityAssertEqualIntArray@@Base+0x5af>
  406362:	mov    rax,QWORD PTR [rip+0xcd37]        # 4130a0 <__bss_start@@Base+0x1230>
  406369:	mov    r12d,edx
  40636c:	jmp    40637b <UnityAssertEqualIntArray@@Base+0x15b>
  40636e:	xchg   ax,ax
  406370:	mov    esi,DWORD PTR [rbp+0x0]
  406373:	cmp    DWORD PTR [rbx],esi
  406375:	jne    40648f <UnityAssertEqualIntArray@@Base+0x26f>
  40637b:	dec    r12d
  40637e:	inc    rax
  406381:	add    rbx,0x4
  406385:	add    rbp,0x4
  406389:	cmp    r12d,0xffffffff
  40638d:	jne    406370 <UnityAssertEqualIntArray@@Base+0x150>
  40638f:	mov    QWORD PTR [rip+0xcd0a],rax        # 4130a0 <__bss_start@@Base+0x1230>
  406396:	add    rsp,0x18
  40639a:	pop    rbx
  40639b:	pop    rbp
  40639c:	pop    r12
  40639e:	pop    r13
  4063a0:	pop    r14
  4063a2:	pop    r15
  4063a4:	ret    
  4063a5:	nop    DWORD PTR [rax]
  4063a8:	inc    QWORD PTR [rip+0xcbc9]        # 412f78 <__bss_start@@Base+0x1108>
  4063af:	jmp    40631f <UnityAssertEqualIntArray@@Base+0xff>
  4063b4:	nop    DWORD PTR [rax+0x0]
  4063b8:	movabs rcx,0x2000000020002
  4063c2:	test   rax,rcx
  4063c5:	jne    406438 <UnityAssertEqualIntArray@@Base+0x218>
  4063c7:	movabs rcx,0x1000000010001
  4063d1:	inc    QWORD PTR [rip+0xcbb0]        # 412f88 <__bss_start@@Base+0x1118>
  4063d8:	test   rax,rcx
  4063db:	je     406350 <UnityAssertEqualIntArray@@Base+0x130>
  4063e1:	movzx  eax,BYTE PTR [rbx]
  4063e4:	cmp    BYTE PTR [rbp+0x0],al
  4063e7:	jne    4067bf <UnityAssertEqualIntArray@@Base+0x59f>
  4063ed:	mov    rax,QWORD PTR [rip+0xcba4]        # 412f98 <__bss_start@@Base+0x1128>
  4063f4:	mov    r12d,edx
  4063f7:	inc    rax
  4063fa:	sub    rax,rbx
  4063fd:	jmp    40640d <UnityAssertEqualIntArray@@Base+0x1ed>
  4063ff:	nop
  406400:	movzx  edi,BYTE PTR [rbp+0x0]
  406404:	cmp    BYTE PTR [rbx],dil
  406407:	jne    4066f4 <UnityAssertEqualIntArray@@Base+0x4d4>
  40640d:	dec    r12d
  406410:	lea    rcx,[rax+rbx*1]
  406414:	inc    rbp
  406417:	inc    rbx
  40641a:	cmp    r12d,0xffffffff
  40641e:	jne    406400 <UnityAssertEqualIntArray@@Base+0x1e0>
  406420:	mov    QWORD PTR [rip+0xcb71],rcx        # 412f98 <__bss_start@@Base+0x1128>
  406427:	inc    QWORD PTR [rip+0xcbb2]        # 412fe0 <__bss_start@@Base+0x1170>
  40642e:	jmp    40631f <UnityAssertEqualIntArray@@Base+0xff>
  406433:	nop    DWORD PTR [rax+rax*1+0x0]
  406438:	movzx  eax,WORD PTR [rbp+0x0]
  40643c:	cmp    WORD PTR [rbx],ax
  40643f:	jne    4066ec <UnityAssertEqualIntArray@@Base+0x4cc>
  406445:	mov    rax,QWORD PTR [rip+0xcba4]        # 412ff0 <__bss_start@@Base+0x1180>
  40644c:	mov    r15d,edx
  40644f:	inc    rax
  406452:	jmp    406468 <UnityAssertEqualIntArray@@Base+0x248>
  406454:	nop    DWORD PTR [rax+0x0]
  406458:	movzx  edi,WORD PTR [rbp+0x0]
  40645c:	inc    rax
  40645f:	cmp    WORD PTR [rbx],di
  406462:	jne    406621 <UnityAssertEqualIntArray@@Base+0x401>
  406468:	dec    r15d
  40646b:	mov    rcx,rax
  40646e:	add    rbx,0x2
  406472:	add    rbp,0x2
  406476:	cmp    r15d,0xffffffff
  40647a:	jne    406458 <UnityAssertEqualIntArray@@Base+0x238>
  40647c:	mov    QWORD PTR [rip+0xcb6d],rax        # 412ff0 <__bss_start@@Base+0x1180>
  406483:	inc    QWORD PTR [rip+0xcbae]        # 413038 <__bss_start@@Base+0x11c8>
  40648a:	jmp    40631f <UnityAssertEqualIntArray@@Base+0xff>
  40648f:	mov    QWORD PTR [rip+0xcc0a],rax        # 4130a0 <__bss_start@@Base+0x1230>
  406496:	mov    rdi,r8
  406499:	mov    DWORD PTR [rsp+0xc],r9d
  40649e:	mov    DWORD PTR [rsp],edx
  4064a1:	inc    QWORD PTR [rip+0xcbf0]        # 413098 <__bss_start@@Base+0x1228>
  4064a8:	call   405d10 <UnityPrint@@Base+0x3a0>
  4064ad:	mov    rdi,0x40c640
  4064b4:	inc    QWORD PTR [rip+0xcbed]        # 4130a8 <__bss_start@@Base+0x1238>
  4064bb:	call   405970 <UnityPrint@@Base>
  4064c0:	mov    edx,DWORD PTR [rsp]
  4064c3:	inc    QWORD PTR [rip+0xcbe6]        # 4130b0 <__bss_start@@Base+0x1240>
  4064ca:	mov    edi,edx
  4064cc:	sub    edi,r12d
  4064cf:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  4064d4:	mov    rdi,0x40c658
  4064db:	inc    QWORD PTR [rip+0xcbd6]        # 4130b8 <__bss_start@@Base+0x1248>
  4064e2:	call   405970 <UnityPrint@@Base>
  4064e7:	mov    r9d,DWORD PTR [rsp+0xc]
  4064ec:	movsxd rdi,DWORD PTR [rbx]
  4064ef:	mov    esi,r9d
  4064f2:	mov    DWORD PTR [rsp],r9d
  4064f6:	inc    QWORD PTR [rip+0xcbc3]        # 4130c0 <__bss_start@@Base+0x1250>
  4064fd:	call   405770 <UnityPrintNumberByStyle@@Base>
  406502:	mov    rdi,0x40c64f
  406509:	inc    QWORD PTR [rip+0xcbb8]        # 4130c8 <__bss_start@@Base+0x1258>
  406510:	call   405970 <UnityPrint@@Base>
  406515:	mov    r9d,DWORD PTR [rsp]
  406519:	movsxd rdi,DWORD PTR [rbp+0x0]
  40651d:	mov    esi,r9d
  406520:	inc    QWORD PTR [rip+0xcba9]        # 4130d0 <__bss_start@@Base+0x1260>
  406527:	call   405770 <UnityPrintNumberByStyle@@Base>
  40652c:	mov    rdi,r14
  40652f:	inc    QWORD PTR [rip+0xcba2]        # 4130d8 <__bss_start@@Base+0x1268>
  406536:	call   405ba0 <UnityPrint@@Base+0x230>
  40653b:	mov    esi,0x1
  406540:	lea    rdi,[r13+0x50]
  406544:	inc    QWORD PTR [rip+0xcb95]        # 4130e0 <__bss_start@@Base+0x1270>
  40654b:	mov    QWORD PTR [r13+0x40],0x1
  406553:	call   4033a0 <__longjmp_chk@plt>
  406558:	mov    QWORD PTR [rip+0xcae9],rcx        # 413048 <__bss_start@@Base+0x11d8>
  40655f:	mov    rdi,r8
  406562:	mov    DWORD PTR [rsp+0xc],r9d
  406567:	mov    DWORD PTR [rsp],edx
  40656a:	inc    QWORD PTR [rip+0xcacf]        # 413040 <__bss_start@@Base+0x11d0>
  406571:	call   405d10 <UnityPrint@@Base+0x3a0>
  406576:	mov    rdi,0x40c640
  40657d:	inc    QWORD PTR [rip+0xcacc]        # 413050 <__bss_start@@Base+0x11e0>
  406584:	call   405970 <UnityPrint@@Base>
  406589:	mov    edx,DWORD PTR [rsp]
  40658c:	inc    QWORD PTR [rip+0xcac5]        # 413058 <__bss_start@@Base+0x11e8>
  406593:	mov    edi,edx
  406595:	sub    edi,r12d
  406598:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  40659d:	mov    rdi,0x40c658
  4065a4:	inc    QWORD PTR [rip+0xcab5]        # 413060 <__bss_start@@Base+0x11f0>
  4065ab:	call   405970 <UnityPrint@@Base>
  4065b0:	mov    r9d,DWORD PTR [rsp+0xc]
  4065b5:	mov    rdi,QWORD PTR [rbx]
  4065b8:	mov    esi,r9d
  4065bb:	mov    DWORD PTR [rsp],r9d
  4065bf:	inc    QWORD PTR [rip+0xcaa2]        # 413068 <__bss_start@@Base+0x11f8>
  4065c6:	call   405770 <UnityPrintNumberByStyle@@Base>
  4065cb:	mov    rdi,0x40c64f
  4065d2:	inc    QWORD PTR [rip+0xca97]        # 413070 <__bss_start@@Base+0x1200>
  4065d9:	call   405970 <UnityPrint@@Base>
  4065de:	mov    r9d,DWORD PTR [rsp]
  4065e2:	mov    rdi,QWORD PTR [rbp+0x0]
  4065e6:	mov    esi,r9d
  4065e9:	inc    QWORD PTR [rip+0xca88]        # 413078 <__bss_start@@Base+0x1208>
  4065f0:	call   405770 <UnityPrintNumberByStyle@@Base>
  4065f5:	mov    rdi,r14
  4065f8:	inc    QWORD PTR [rip+0xca81]        # 413080 <__bss_start@@Base+0x1210>
  4065ff:	call   405ba0 <UnityPrint@@Base+0x230>
  406604:	mov    esi,0x1
  406609:	lea    rdi,[r13+0x50]
  40660d:	inc    QWORD PTR [rip+0xca74]        # 413088 <__bss_start@@Base+0x1218>
  406614:	mov    QWORD PTR [r13+0x40],0x1
  40661c:	call   4033a0 <__longjmp_chk@plt>
  406621:	mov    QWORD PTR [rip+0xc9c8],rcx        # 412ff0 <__bss_start@@Base+0x1180>
  406628:	mov    rdi,r8
  40662b:	mov    DWORD PTR [rsp+0xc],r9d
  406630:	mov    DWORD PTR [rsp],edx
  406633:	inc    QWORD PTR [rip+0xc9ae]        # 412fe8 <__bss_start@@Base+0x1178>
  40663a:	call   405d10 <UnityPrint@@Base+0x3a0>
  40663f:	mov    rdi,0x40c640
  406646:	inc    QWORD PTR [rip+0xc9ab]        # 412ff8 <__bss_start@@Base+0x1188>
  40664d:	call   405970 <UnityPrint@@Base>
  406652:	mov    edx,DWORD PTR [rsp]
  406655:	inc    QWORD PTR [rip+0xc9a4]        # 413000 <__bss_start@@Base+0x1190>
  40665c:	mov    edi,edx
  40665e:	sub    edi,r15d
  406661:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  406666:	mov    rdi,0x40c658
  40666d:	inc    QWORD PTR [rip+0xc994]        # 413008 <__bss_start@@Base+0x1198>
  406674:	call   405970 <UnityPrint@@Base>
  406679:	mov    r9d,DWORD PTR [rsp+0xc]
  40667e:	movsx  rdi,WORD PTR [rbx]
  406682:	mov    esi,r9d
  406685:	mov    DWORD PTR [rsp],r9d
  406689:	inc    QWORD PTR [rip+0xc980]        # 413010 <__bss_start@@Base+0x11a0>
  406690:	call   405770 <UnityPrintNumberByStyle@@Base>
  406695:	mov    rdi,0x40c64f
  40669c:	inc    QWORD PTR [rip+0xc975]        # 413018 <__bss_start@@Base+0x11a8>
  4066a3:	call   405970 <UnityPrint@@Base>
  4066a8:	mov    r9d,DWORD PTR [rsp]
  4066ac:	movsx  rdi,WORD PTR [rbp+0x0]
  4066b1:	mov    esi,r9d
  4066b4:	inc    QWORD PTR [rip+0xc965]        # 413020 <__bss_start@@Base+0x11b0>
  4066bb:	call   405770 <UnityPrintNumberByStyle@@Base>
  4066c0:	mov    rdi,r14
  4066c3:	inc    QWORD PTR [rip+0xc95e]        # 413028 <__bss_start@@Base+0x11b8>
  4066ca:	call   405ba0 <UnityPrint@@Base+0x230>
  4066cf:	mov    esi,0x1
  4066d4:	lea    rdi,[r13+0x50]
  4066d8:	inc    QWORD PTR [rip+0xc951]        # 413030 <__bss_start@@Base+0x11c0>
  4066df:	mov    QWORD PTR [r13+0x40],0x1
  4066e7:	call   4033a0 <__longjmp_chk@plt>
  4066ec:	mov    r15d,edx
  4066ef:	jmp    406628 <UnityAssertEqualIntArray@@Base+0x408>
  4066f4:	mov    QWORD PTR [rip+0xc89d],rcx        # 412f98 <__bss_start@@Base+0x1128>
  4066fb:	mov    rdi,r8
  4066fe:	mov    DWORD PTR [rsp+0xc],r9d
  406703:	mov    DWORD PTR [rsp],edx
  406706:	inc    QWORD PTR [rip+0xc883]        # 412f90 <__bss_start@@Base+0x1120>
  40670d:	call   405d10 <UnityPrint@@Base+0x3a0>
  406712:	mov    rdi,0x40c640
  406719:	inc    QWORD PTR [rip+0xc880]        # 412fa0 <__bss_start@@Base+0x1130>
  406720:	call   405970 <UnityPrint@@Base>
  406725:	mov    edx,DWORD PTR [rsp]
  406728:	inc    QWORD PTR [rip+0xc879]        # 412fa8 <__bss_start@@Base+0x1138>
  40672f:	mov    edi,edx
  406731:	sub    edi,r12d
  406734:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  406739:	mov    rdi,0x40c658
  406740:	inc    QWORD PTR [rip+0xc869]        # 412fb0 <__bss_start@@Base+0x1140>
  406747:	call   405970 <UnityPrint@@Base>
  40674c:	mov    r9d,DWORD PTR [rsp+0xc]
  406751:	movsx  rdi,BYTE PTR [rbx]
  406755:	mov    esi,r9d
  406758:	mov    DWORD PTR [rsp],r9d
  40675c:	inc    QWORD PTR [rip+0xc855]        # 412fb8 <__bss_start@@Base+0x1148>
  406763:	call   405770 <UnityPrintNumberByStyle@@Base>
  406768:	mov    rdi,0x40c64f
  40676f:	inc    QWORD PTR [rip+0xc84a]        # 412fc0 <__bss_start@@Base+0x1150>
  406776:	call   405970 <UnityPrint@@Base>
  40677b:	mov    r9d,DWORD PTR [rsp]
  40677f:	movsx  rdi,BYTE PTR [rbp+0x0]
  406784:	mov    esi,r9d
  406787:	inc    QWORD PTR [rip+0xc83a]        # 412fc8 <__bss_start@@Base+0x1158>
  40678e:	call   405770 <UnityPrintNumberByStyle@@Base>
  406793:	mov    rdi,r14
  406796:	inc    QWORD PTR [rip+0xc833]        # 412fd0 <__bss_start@@Base+0x1160>
  40679d:	call   405ba0 <UnityPrint@@Base+0x230>
  4067a2:	mov    esi,0x1
  4067a7:	lea    rdi,[r13+0x50]
  4067ab:	inc    QWORD PTR [rip+0xc826]        # 412fd8 <__bss_start@@Base+0x1168>
  4067b2:	mov    QWORD PTR [r13+0x40],0x1
  4067ba:	call   4033a0 <__longjmp_chk@plt>
  4067bf:	mov    r12d,edx
  4067c2:	jmp    4066fb <UnityAssertEqualIntArray@@Base+0x4db>
  4067c7:	mov    r12d,edx
  4067ca:	jmp    40655f <UnityAssertEqualIntArray@@Base+0x33f>
  4067cf:	mov    r12d,edx
  4067d2:	jmp    406496 <UnityAssertEqualIntArray@@Base+0x276>
  4067d7:	mov    rdi,r8
  4067da:	inc    QWORD PTR [rip+0xc777]        # 412f58 <__bss_start@@Base+0x10e8>
  4067e1:	call   405d10 <UnityPrint@@Base+0x3a0>
  4067e6:	mov    rdi,0x40c5c0
  4067ed:	inc    QWORD PTR [rip+0xc76c]        # 412f60 <__bss_start@@Base+0x10f0>
  4067f4:	call   405970 <UnityPrint@@Base>
  4067f9:	mov    rdi,r14
  4067fc:	inc    QWORD PTR [rip+0xc765]        # 412f68 <__bss_start@@Base+0x10f8>
  406803:	call   405ba0 <UnityPrint@@Base+0x230>
  406808:	mov    esi,0x1
  40680d:	lea    rdi,[r13+0x50]
  406811:	inc    QWORD PTR [rip+0xc758]        # 412f70 <__bss_start@@Base+0x1100>
  406818:	mov    QWORD PTR [r13+0x40],0x1
  406820:	call   4033a0 <__longjmp_chk@plt>
  406825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406830 <UnityAssertEqualFloatArray@@Base>:
  406830:	endbr64 
  406834:	push   r15
  406836:	push   r14
  406838:	push   r13
  40683a:	push   r12
  40683c:	push   rbp
  40683d:	push   rbx
  40683e:	sub    rsp,0x8
  406842:	mov    rbp,0x413c00
  406849:	cmp    QWORD PTR [rbp+0x40],0x0
  40684e:	jne    406980 <UnityAssertEqualFloatArray@@Base+0x150>
  406854:	cmp    QWORD PTR [rbp+0x48],0x0
  406859:	jne    406968 <UnityAssertEqualFloatArray@@Base+0x138>
  40685f:	mov    r13,r8
  406862:	mov    r12,rcx
  406865:	mov    r15d,edx
  406868:	mov    rbx,rsi
  40686b:	mov    r14,rdi
  40686e:	inc    QWORD PTR [rip+0xc89b]        # 413110 <__bss_start@@Base+0x12a0>
  406875:	test   edx,edx
  406877:	je     406a65 <UnityAssertEqualFloatArray@@Base+0x235>
  40687d:	mov    rdx,r8
  406880:	call   405d70 <UnityPrint@@Base+0x400>
  406885:	inc    QWORD PTR [rip+0xc8ac]        # 413138 <__bss_start@@Base+0x12c8>
  40688c:	cmp    eax,0x1
  40688f:	je     406996 <UnityAssertEqualFloatArray@@Base+0x166>
  406895:	mov    rax,QWORD PTR [rip+0xc8cc]        # 413168 <__bss_start@@Base+0x12f8>
  40689c:	dec    r15d
  40689f:	mov    rdx,rax
  4068a2:	neg    rdx
  4068a5:	shl    rdx,0x2
  4068a9:	mov    rdi,QWORD PTR [rip+0xc898]        # 413148 <__bss_start@@Base+0x12d8>
  4068b0:	mov    r8,QWORD PTR [rip+0xc899]        # 413150 <__bss_start@@Base+0x12e0>
  4068b7:	vmovss xmm4,DWORD PTR [rip+0x5e3d]        # 40c6fc <UnityStrOk@@Base+0x80>
  4068bf:	lea    rcx,[r14+rdx*1]
  4068c3:	xor    esi,esi
  4068c5:	add    rdx,rbx
  4068c8:	xor    r10d,r10d
  4068cb:	mov    ebx,r15d
  4068ce:	xor    r9d,r9d
  4068d1:	vxorps xmm1,xmm1,xmm1
  4068d5:	nop    DWORD PTR [rax]
  4068d8:	vmovss xmm0,DWORD PTR [rcx+rax*4]
  4068dd:	vsubss xmm2,xmm0,DWORD PTR [rdx+rax*4]
  4068e2:	vcomiss xmm1,xmm2
  4068e6:	jbe    4068f5 <UnityAssertEqualFloatArray@@Base+0xc5>
  4068e8:	vsubss xmm2,xmm1,xmm2
  4068ec:	inc    rdi
  4068ef:	mov    r9d,0x1
  4068f5:	vmulss xmm0,xmm0,xmm4
  4068f9:	vcomiss xmm1,xmm0
  4068fd:	jbe    40690c <UnityAssertEqualFloatArray@@Base+0xdc>
  4068ff:	vsubss xmm0,xmm1,xmm0
  406903:	inc    r8
  406906:	mov    r10d,0x1
  40690c:	vmulss xmm3,xmm2,xmm1
  406910:	vucomiss xmm3,xmm1
  406914:	jp     406a35 <UnityAssertEqualFloatArray@@Base+0x205>
  40691a:	jne    406a35 <UnityAssertEqualFloatArray@@Base+0x205>
  406920:	vcomiss xmm2,xmm0
  406924:	ja     40699f <UnityAssertEqualFloatArray@@Base+0x16f>
  406926:	dec    ebx
  406928:	inc    rax
  40692b:	mov    esi,0x1
  406930:	cmp    ebx,0xffffffff
  406933:	jne    4068d8 <UnityAssertEqualFloatArray@@Base+0xa8>
  406935:	test   r9b,r9b
  406938:	je     406941 <UnityAssertEqualFloatArray@@Base+0x111>
  40693a:	mov    QWORD PTR [rip+0xc807],rdi        # 413148 <__bss_start@@Base+0x12d8>
  406941:	test   r10b,r10b
  406944:	je     40694d <UnityAssertEqualFloatArray@@Base+0x11d>
  406946:	mov    QWORD PTR [rip+0xc803],r8        # 413150 <__bss_start@@Base+0x12e0>
  40694d:	mov    QWORD PTR [rip+0xc814],rax        # 413168 <__bss_start@@Base+0x12f8>
  406954:	add    rsp,0x8
  406958:	pop    rbx
  406959:	pop    rbp
  40695a:	pop    r12
  40695c:	pop    r13
  40695e:	pop    r14
  406960:	pop    r15
  406962:	ret    
  406963:	nop    DWORD PTR [rax+rax*1+0x0]
  406968:	inc    QWORD PTR [rip+0xc799]        # 413108 <__bss_start@@Base+0x1298>
  40696f:	add    rsp,0x8
  406973:	pop    rbx
  406974:	pop    rbp
  406975:	pop    r12
  406977:	pop    r13
  406979:	pop    r14
  40697b:	pop    r15
  40697d:	ret    
  40697e:	xchg   ax,ax
  406980:	inc    QWORD PTR [rip+0xc779]        # 413100 <__bss_start@@Base+0x1290>
  406987:	add    rsp,0x8
  40698b:	pop    rbx
  40698c:	pop    rbp
  40698d:	pop    r12
  40698f:	pop    r13
  406991:	pop    r14
  406993:	pop    r15
  406995:	ret    
  406996:	inc    QWORD PTR [rip+0xc7a3]        # 413140 <__bss_start@@Base+0x12d0>
  40699d:	jmp    40696f <UnityAssertEqualFloatArray@@Base+0x13f>
  40699f:	test   r9b,r9b
  4069a2:	je     4069ab <UnityAssertEqualFloatArray@@Base+0x17b>
  4069a4:	mov    QWORD PTR [rip+0xc79d],rdi        # 413148 <__bss_start@@Base+0x12d8>
  4069ab:	test   r10b,r10b
  4069ae:	je     4069b7 <UnityAssertEqualFloatArray@@Base+0x187>
  4069b0:	mov    QWORD PTR [rip+0xc799],r8        # 413150 <__bss_start@@Base+0x12e0>
  4069b7:	test   sil,sil
  4069ba:	je     4069c3 <UnityAssertEqualFloatArray@@Base+0x193>
  4069bc:	mov    QWORD PTR [rip+0xc7a5],rax        # 413168 <__bss_start@@Base+0x12f8>
  4069c3:	inc    QWORD PTR [rip+0xc796]        # 413160 <__bss_start@@Base+0x12f0>
  4069ca:	mov    rdi,r13
  4069cd:	call   405d10 <UnityPrint@@Base+0x3a0>
  4069d2:	mov    rdi,0x40c640
  4069d9:	inc    QWORD PTR [rip+0xc790]        # 413170 <__bss_start@@Base+0x1300>
  4069e0:	call   405970 <UnityPrint@@Base>
  4069e5:	mov    edi,r15d
  4069e8:	sub    edi,ebx
  4069ea:	inc    QWORD PTR [rip+0xc787]        # 413178 <__bss_start@@Base+0x1308>
  4069f1:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  4069f6:	mov    rdi,0x40c600
  4069fd:	inc    QWORD PTR [rip+0xc77c]        # 413180 <__bss_start@@Base+0x1310>
  406a04:	call   405970 <UnityPrint@@Base>
  406a09:	mov    rdi,r12
  406a0c:	inc    QWORD PTR [rip+0xc775]        # 413188 <__bss_start@@Base+0x1318>
  406a13:	call   405ba0 <UnityPrint@@Base+0x230>
  406a18:	mov    esi,0x1
  406a1d:	lea    rdi,[rbp+0x50]
  406a21:	inc    QWORD PTR [rip+0xc768]        # 413190 <__bss_start@@Base+0x1320>
  406a28:	mov    QWORD PTR [rbp+0x40],0x1
  406a30:	call   4033a0 <__longjmp_chk@plt>
  406a35:	test   r9b,r9b
  406a38:	je     406a41 <UnityAssertEqualFloatArray@@Base+0x211>
  406a3a:	mov    QWORD PTR [rip+0xc707],rdi        # 413148 <__bss_start@@Base+0x12d8>
  406a41:	test   r10b,r10b
  406a44:	je     406a4d <UnityAssertEqualFloatArray@@Base+0x21d>
  406a46:	mov    QWORD PTR [rip+0xc703],r8        # 413150 <__bss_start@@Base+0x12e0>
  406a4d:	test   sil,sil
  406a50:	je     406a59 <UnityAssertEqualFloatArray@@Base+0x229>
  406a52:	mov    QWORD PTR [rip+0xc70f],rax        # 413168 <__bss_start@@Base+0x12f8>
  406a59:	inc    QWORD PTR [rip+0xc6f8]        # 413158 <__bss_start@@Base+0x12e8>
  406a60:	jmp    4069ca <UnityAssertEqualFloatArray@@Base+0x19a>
  406a65:	mov    rdi,r8
  406a68:	inc    QWORD PTR [rip+0xc6a9]        # 413118 <__bss_start@@Base+0x12a8>
  406a6f:	call   405d10 <UnityPrint@@Base+0x3a0>
  406a74:	mov    rdi,0x40c5c0
  406a7b:	inc    QWORD PTR [rip+0xc69e]        # 413120 <__bss_start@@Base+0x12b0>
  406a82:	call   405970 <UnityPrint@@Base>
  406a87:	mov    rdi,r12
  406a8a:	inc    QWORD PTR [rip+0xc697]        # 413128 <__bss_start@@Base+0x12b8>
  406a91:	call   405ba0 <UnityPrint@@Base+0x230>
  406a96:	mov    esi,0x1
  406a9b:	lea    rdi,[rbp+0x50]
  406a9f:	inc    QWORD PTR [rip+0xc68a]        # 413130 <__bss_start@@Base+0x12c0>
  406aa6:	mov    QWORD PTR [rbp+0x40],0x1
  406aae:	call   4033a0 <__longjmp_chk@plt>
  406ab3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406abe:	xchg   ax,ax

0000000000406ac0 <UnityAssertFloatsWithin@@Base>:
  406ac0:	endbr64 
  406ac4:	push   rbp
  406ac5:	push   rbx
  406ac6:	sub    rsp,0x8
  406aca:	mov    rbx,0x413c00
  406ad1:	cmp    QWORD PTR [rbx+0x40],0x0
  406ad6:	jne    406b90 <UnityAssertFloatsWithin@@Base+0xd0>
  406adc:	cmp    QWORD PTR [rbx+0x48],0x0
  406ae1:	jne    406b80 <UnityAssertFloatsWithin@@Base+0xc0>
  406ae7:	vsubss xmm1,xmm2,xmm1
  406aeb:	vxorps xmm2,xmm2,xmm2
  406aef:	mov    rbp,rdi
  406af2:	vcomiss xmm2,xmm1
  406af6:	jbe    406b03 <UnityAssertFloatsWithin@@Base+0x43>
  406af8:	inc    QWORD PTR [rip+0xc6b1]        # 4131b0 <__bss_start@@Base+0x1340>
  406aff:	vsubss xmm1,xmm2,xmm1
  406b03:	vcomiss xmm2,xmm0
  406b07:	jbe    406b14 <UnityAssertFloatsWithin@@Base+0x54>
  406b09:	inc    QWORD PTR [rip+0xc6a8]        # 4131b8 <__bss_start@@Base+0x1348>
  406b10:	vsubss xmm0,xmm2,xmm0
  406b14:	vmulss xmm3,xmm1,xmm2
  406b18:	vucomiss xmm3,xmm2
  406b1c:	jp     406b9e <UnityAssertFloatsWithin@@Base+0xde>
  406b22:	jne    406b9e <UnityAssertFloatsWithin@@Base+0xde>
  406b24:	inc    QWORD PTR [rip+0xc69d]        # 4131c8 <__bss_start@@Base+0x1358>
  406b2b:	vcomiss xmm1,xmm0
  406b2f:	jbe    406b87 <UnityAssertFloatsWithin@@Base+0xc7>
  406b31:	inc    QWORD PTR [rip+0xc698]        # 4131d0 <__bss_start@@Base+0x1360>
  406b38:	mov    rdi,rsi
  406b3b:	call   405d10 <UnityPrint@@Base+0x3a0>
  406b40:	mov    rdi,0x40c600
  406b47:	inc    QWORD PTR [rip+0xc68a]        # 4131d8 <__bss_start@@Base+0x1368>
  406b4e:	call   405970 <UnityPrint@@Base>
  406b53:	mov    rdi,rbp
  406b56:	inc    QWORD PTR [rip+0xc683]        # 4131e0 <__bss_start@@Base+0x1370>
  406b5d:	call   405ba0 <UnityPrint@@Base+0x230>
  406b62:	mov    esi,0x1
  406b67:	lea    rdi,[rbx+0x50]
  406b6b:	inc    QWORD PTR [rip+0xc676]        # 4131e8 <__bss_start@@Base+0x1378>
  406b72:	mov    QWORD PTR [rbx+0x40],0x1
  406b7a:	call   4033a0 <__longjmp_chk@plt>
  406b7f:	nop
  406b80:	inc    QWORD PTR [rip+0xc621]        # 4131a8 <__bss_start@@Base+0x1338>
  406b87:	add    rsp,0x8
  406b8b:	pop    rbx
  406b8c:	pop    rbp
  406b8d:	ret    
  406b8e:	xchg   ax,ax
  406b90:	inc    QWORD PTR [rip+0xc609]        # 4131a0 <__bss_start@@Base+0x1330>
  406b97:	add    rsp,0x8
  406b9b:	pop    rbx
  406b9c:	pop    rbp
  406b9d:	ret    
  406b9e:	inc    QWORD PTR [rip+0xc61b]        # 4131c0 <__bss_start@@Base+0x1350>
  406ba5:	jmp    406b38 <UnityAssertFloatsWithin@@Base+0x78>
  406ba7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406bb0 <UnityAssertFloatSpecial@@Base>:
  406bb0:	endbr64 
  406bb4:	push   r12
  406bb6:	push   rbp
  406bb7:	push   rbx
  406bb8:	sub    rsp,0x40
  406bbc:	mov    rax,QWORD PTR fs:0x28
  406bc5:	mov    QWORD PTR [rsp+0x38],rax
  406bca:	xor    eax,eax
  406bcc:	mov    rax,0x40c568
  406bd3:	mov    rbx,0x413c00
  406bda:	mov    QWORD PTR [rsp+0x10],rax
  406bdf:	mov    rax,0x40c550
  406be6:	mov    QWORD PTR [rsp+0x18],rax
  406beb:	mov    rax,0x40c544
  406bf2:	mov    QWORD PTR [rsp+0x20],rax
  406bf7:	mov    rax,0x40c538
  406bfe:	mov    QWORD PTR [rsp+0x28],rax
  406c03:	mov    eax,edx
  406c05:	shr    eax,1
  406c07:	cmp    QWORD PTR [rbx+0x40],0x0
  406c0c:	jne    406c3f <UnityAssertFloatSpecial@@Base+0x8f>
  406c0e:	cmp    QWORD PTR [rbx+0x48],0x0
  406c13:	jne    406c38 <UnityAssertFloatSpecial@@Base+0x88>
  406c15:	mov    rbp,rdi
  406c18:	cmp    edx,0x7
  406c1b:	ja     406e30 <UnityAssertFloatSpecial@@Base+0x280>
  406c21:	lea    r8,[rip+0x57b8]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  406c28:	mov    edi,edx
  406c2a:	movsxd rcx,DWORD PTR [r8+rdi*4]
  406c2e:	add    rcx,r8
  406c31:	notrack jmp rcx
  406c34:	nop    DWORD PTR [rax+0x0]
  406c38:	inc    QWORD PTR [rip+0xc5c1]        # 413200 <__bss_start@@Base+0x1390>
  406c3f:	inc    QWORD PTR [rip+0xc5c2]        # 413208 <__bss_start@@Base+0x1398>
  406c46:	mov    rax,QWORD PTR [rsp+0x38]
  406c4b:	xor    rax,QWORD PTR fs:0x28
  406c54:	jne    406e79 <UnityAssertFloatSpecial@@Base+0x2c9>
  406c5a:	add    rsp,0x40
  406c5e:	pop    rbx
  406c5f:	pop    rbp
  406c60:	pop    r12
  406c62:	ret    
  406c63:	nop    DWORD PTR [rax+rax*1+0x0]
  406c68:	xor    edi,edi
  406c6a:	inc    QWORD PTR [rip+0xc5b7]        # 413228 <__bss_start@@Base+0x13b8>
  406c71:	vucomiss xmm0,xmm0
  406c75:	setp   dil
  406c79:	and    edx,0x1
  406c7c:	cmp    rdi,rdx
  406c7f:	je     406c46 <UnityAssertFloatSpecial@@Base+0x96>
  406c81:	mov    rdi,rsi
  406c84:	mov    QWORD PTR [rsp+0x8],rdx
  406c89:	mov    QWORD PTR [rsp],rax
  406c8d:	inc    QWORD PTR [rip+0xc5dc]        # 413270 <__bss_start@@Base+0x1400>
  406c94:	call   405d10 <UnityPrint@@Base+0x3a0>
  406c99:	mov    rdi,0x40c658
  406ca0:	inc    QWORD PTR [rip+0xc5d1]        # 413278 <__bss_start@@Base+0x1408>
  406ca7:	call   405970 <UnityPrint@@Base>
  406cac:	mov    rdx,QWORD PTR [rsp+0x8]
  406cb1:	inc    QWORD PTR [rip+0xc5c8]        # 413280 <__bss_start@@Base+0x1410>
  406cb8:	test   rdx,rdx
  406cbb:	mov    rax,QWORD PTR [rsp]
  406cbf:	je     406e7e <UnityAssertFloatSpecial@@Base+0x2ce>
  406cc5:	mov    r12,QWORD PTR [rsp+rax*8+0x10]
  406cca:	mov    rdi,r12
  406ccd:	call   405970 <UnityPrint@@Base>
  406cd2:	mov    rdi,0x40c64f
  406cd9:	inc    QWORD PTR [rip+0xc5b8]        # 413298 <__bss_start@@Base+0x1428>
  406ce0:	call   405970 <UnityPrint@@Base>
  406ce5:	mov    rdi,0x40c571
  406cec:	inc    QWORD PTR [rip+0xc5ad]        # 4132a0 <__bss_start@@Base+0x1430>
  406cf3:	inc    QWORD PTR [rip+0xc5ae]        # 4132a8 <__bss_start@@Base+0x1438>
  406cfa:	call   405970 <UnityPrint@@Base>
  406cff:	inc    QWORD PTR [rip+0xc5aa]        # 4132b0 <__bss_start@@Base+0x1440>
  406d06:	mov    rdi,r12
  406d09:	call   405970 <UnityPrint@@Base>
  406d0e:	mov    rdi,rbp
  406d11:	inc    QWORD PTR [rip+0xc5a0]        # 4132b8 <__bss_start@@Base+0x1448>
  406d18:	call   405ba0 <UnityPrint@@Base+0x230>
  406d1d:	mov    esi,0x1
  406d22:	lea    rdi,[rbx+0x50]
  406d26:	inc    QWORD PTR [rip+0xc593]        # 4132c0 <__bss_start@@Base+0x1450>
  406d2d:	mov    QWORD PTR [rbx+0x40],0x1
  406d35:	call   4033a0 <__longjmp_chk@plt>
  406d3a:	nop    WORD PTR [rax+rax*1+0x0]
  406d40:	vmovaps xmm1,xmm0
  406d44:	vandps xmm1,xmm1,XMMWORD PTR [rip+0x59c4]        # 40c710 <UnityStrOk@@Base+0x94>
  406d4c:	inc    QWORD PTR [rip+0xc4cd]        # 413220 <__bss_start@@Base+0x13b0>
  406d53:	vucomiss xmm1,DWORD PTR [rip+0x59a5]        # 40c700 <UnityStrOk@@Base+0x84>
  406d5b:	mov    edi,0x0
  406d60:	jbe    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406d66:	vxorps xmm1,xmm1,xmm1
  406d6a:	xor    edi,edi
  406d6c:	inc    QWORD PTR [rip+0xc4d5]        # 413248 <__bss_start@@Base+0x13d8>
  406d73:	vcomiss xmm1,xmm0
  406d77:	vmovd  ecx,xmm0
  406d7b:	seta   dil
  406d7f:	test   ecx,ecx
  406d81:	js     406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406d87:	inc    QWORD PTR [rip+0xc4c2]        # 413250 <__bss_start@@Base+0x13e0>
  406d8e:	jmp    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406d93:	nop    DWORD PTR [rax+rax*1+0x0]
  406d98:	vmovaps xmm1,xmm0
  406d9c:	vandps xmm1,xmm1,XMMWORD PTR [rip+0x596c]        # 40c710 <UnityStrOk@@Base+0x94>
  406da4:	inc    QWORD PTR [rip+0xc46d]        # 413218 <__bss_start@@Base+0x13a8>
  406dab:	vucomiss xmm1,DWORD PTR [rip+0x594d]        # 40c700 <UnityStrOk@@Base+0x84>
  406db3:	mov    edi,0x0
  406db8:	jbe    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406dbe:	xor    edi,edi
  406dc0:	inc    QWORD PTR [rip+0xc471]        # 413238 <__bss_start@@Base+0x13c8>
  406dc7:	vcomiss xmm0,DWORD PTR [rip+0x5929]        # 40c6f8 <UnityStrOk@@Base+0x7c>
  406dcf:	vmovd  ecx,xmm0
  406dd3:	seta   dil
  406dd7:	test   ecx,ecx
  406dd9:	js     406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406ddf:	inc    QWORD PTR [rip+0xc45a]        # 413240 <__bss_start@@Base+0x13d0>
  406de6:	jmp    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406deb:	nop    DWORD PTR [rax+rax*1+0x0]
  406df0:	vmovaps xmm1,xmm0
  406df4:	vandps xmm1,xmm1,XMMWORD PTR [rip+0x5914]        # 40c710 <UnityStrOk@@Base+0x94>
  406dfc:	inc    QWORD PTR [rip+0xc42d]        # 413230 <__bss_start@@Base+0x13c0>
  406e03:	vucomiss xmm1,DWORD PTR [rip+0x58f5]        # 40c700 <UnityStrOk@@Base+0x84>
  406e0b:	ja     406e58 <UnityAssertFloatSpecial@@Base+0x2a8>
  406e0d:	vucomiss xmm0,xmm0
  406e11:	jp     406ec8 <UnityAssertFloatSpecial@@Base+0x318>
  406e17:	inc    QWORD PTR [rip+0xc44a]        # 413268 <__bss_start@@Base+0x13f8>
  406e1e:	mov    edi,0x1
  406e23:	jmp    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406e28:	nop    DWORD PTR [rax+rax*1+0x0]
  406e30:	mov    rax,0x40c520
  406e37:	mov    edi,edx
  406e39:	not    edi
  406e3b:	mov    QWORD PTR [rsp+0x10],rax
  406e40:	and    edi,0x1
  406e43:	inc    QWORD PTR [rip+0xc3c6]        # 413210 <__bss_start@@Base+0x13a0>
  406e4a:	xor    eax,eax
  406e4c:	jmp    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406e51:	nop    DWORD PTR [rax+0x0]
  406e58:	vmovd  ecx,xmm0
  406e5c:	inc    QWORD PTR [rip+0xc3f5]        # 413258 <__bss_start@@Base+0x13e8>
  406e63:	xor    edi,edi
  406e65:	test   ecx,ecx
  406e67:	js     406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406e6d:	inc    QWORD PTR [rip+0xc3ec]        # 413260 <__bss_start@@Base+0x13f0>
  406e74:	jmp    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406e79:	call   4032f0 <__stack_chk_fail@plt>
  406e7e:	mov    rdi,0x40c571
  406e85:	inc    QWORD PTR [rip+0xc3fc]        # 413288 <__bss_start@@Base+0x1418>
  406e8c:	call   405970 <UnityPrint@@Base>
  406e91:	mov    rax,QWORD PTR [rsp]
  406e95:	inc    QWORD PTR [rip+0xc3f4]        # 413290 <__bss_start@@Base+0x1420>
  406e9c:	mov    r12,QWORD PTR [rsp+rax*8+0x10]
  406ea1:	mov    rdi,r12
  406ea4:	call   405970 <UnityPrint@@Base>
  406ea9:	mov    rdi,0x40c64f
  406eb0:	inc    QWORD PTR [rip+0xc3e1]        # 413298 <__bss_start@@Base+0x1428>
  406eb7:	call   405970 <UnityPrint@@Base>
  406ebc:	inc    QWORD PTR [rip+0xc3dd]        # 4132a0 <__bss_start@@Base+0x1430>
  406ec3:	jmp    406d06 <UnityAssertFloatSpecial@@Base+0x156>
  406ec8:	xor    edi,edi
  406eca:	jmp    406c79 <UnityAssertFloatSpecial@@Base+0xc9>
  406ecf:	nop

0000000000406ed0 <UnityAssertNumbersWithin@@Base>:
  406ed0:	endbr64 
  406ed4:	push   r15
  406ed6:	push   r14
  406ed8:	push   r13
  406eda:	push   r12
  406edc:	push   rbp
  406edd:	push   rbx
  406ede:	sub    rsp,0x8
  406ee2:	mov    rbx,0x413c00
  406ee9:	cmp    QWORD PTR [rbx+0x40],0x0
  406eee:	jne    406f30 <UnityAssertNumbersWithin@@Base+0x60>
  406ef0:	cmp    QWORD PTR [rbx+0x48],0x0
  406ef5:	jne    406f18 <UnityAssertNumbersWithin@@Base+0x48>
  406ef7:	test   r9b,0x10
  406efb:	je     406f50 <UnityAssertNumbersWithin@@Base+0x80>
  406efd:	cmp    rdx,rsi
  406f00:	jle    407060 <UnityAssertNumbersWithin@@Base+0x190>
  406f06:	inc    QWORD PTR [rip+0xc3e3]        # 4132f0 <__bss_start@@Base+0x1480>
  406f0d:	jmp    40703f <UnityAssertNumbersWithin@@Base+0x16f>
  406f12:	nop    WORD PTR [rax+rax*1+0x0]
  406f18:	inc    QWORD PTR [rip+0xc3c9]        # 4132e8 <__bss_start@@Base+0x1478>
  406f1f:	add    rsp,0x8
  406f23:	pop    rbx
  406f24:	pop    rbp
  406f25:	pop    r12
  406f27:	pop    r13
  406f29:	pop    r14
  406f2b:	pop    r15
  406f2d:	ret    
  406f2e:	xchg   ax,ax
  406f30:	inc    QWORD PTR [rip+0xc3a9]        # 4132e0 <__bss_start@@Base+0x1470>
  406f37:	add    rsp,0x8
  406f3b:	pop    rbx
  406f3c:	pop    rbp
  406f3d:	pop    r12
  406f3f:	pop    r13
  406f41:	pop    r14
  406f43:	pop    r15
  406f45:	ret    
  406f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f50:	cmp    rdx,rsi
  406f53:	ja     407038 <UnityAssertNumbersWithin@@Base+0x168>
  406f59:	inc    QWORD PTR [rip+0xc3a8]        # 413308 <__bss_start@@Base+0x1498>
  406f60:	mov    rax,rsi
  406f63:	sub    rax,rdx
  406f66:	cmp    rax,rdi
  406f69:	seta   al
  406f6c:	movzx  eax,al
  406f6f:	mov    QWORD PTR [rbx+0x40],rax
  406f73:	test   rax,rax
  406f76:	je     406f1f <UnityAssertNumbersWithin@@Base+0x4f>
  406f78:	mov    r15,rdi
  406f7b:	mov    rdi,r8
  406f7e:	mov    r12d,r9d
  406f81:	mov    r13,rcx
  406f84:	mov    r14,rdx
  406f87:	mov    rbp,rsi
  406f8a:	inc    QWORD PTR [rip+0xc37f]        # 413310 <__bss_start@@Base+0x14a0>
  406f91:	call   405d10 <UnityPrint@@Base+0x3a0>
  406f96:	mov    rdi,0x40c600
  406f9d:	inc    QWORD PTR [rip+0xc374]        # 413318 <__bss_start@@Base+0x14a8>
  406fa4:	call   405970 <UnityPrint@@Base>
  406fa9:	mov    esi,r12d
  406fac:	mov    rdi,r15
  406faf:	inc    QWORD PTR [rip+0xc36a]        # 413320 <__bss_start@@Base+0x14b0>
  406fb6:	call   405770 <UnityPrintNumberByStyle@@Base>
  406fbb:	mov    rdi,0x40c658
  406fc2:	inc    QWORD PTR [rip+0xc35f]        # 413328 <__bss_start@@Base+0x14b8>
  406fc9:	call   405970 <UnityPrint@@Base>
  406fce:	mov    esi,r12d
  406fd1:	mov    rdi,rbp
  406fd4:	inc    QWORD PTR [rip+0xc355]        # 413330 <__bss_start@@Base+0x14c0>
  406fdb:	call   405770 <UnityPrintNumberByStyle@@Base>
  406fe0:	mov    rdi,0x40c64f
  406fe7:	inc    QWORD PTR [rip+0xc34a]        # 413338 <__bss_start@@Base+0x14c8>
  406fee:	call   405970 <UnityPrint@@Base>
  406ff3:	mov    esi,r12d
  406ff6:	mov    rdi,r14
  406ff9:	inc    QWORD PTR [rip+0xc340]        # 413340 <__bss_start@@Base+0x14d0>
  407000:	call   405770 <UnityPrintNumberByStyle@@Base>
  407005:	mov    rdi,r13
  407008:	inc    QWORD PTR [rip+0xc339]        # 413348 <__bss_start@@Base+0x14d8>
  40700f:	call   405ba0 <UnityPrint@@Base+0x230>
  407014:	mov    esi,0x1
  407019:	lea    rdi,[rbx+0x50]
  40701d:	inc    QWORD PTR [rip+0xc32c]        # 413350 <__bss_start@@Base+0x14e0>
  407024:	mov    QWORD PTR [rbx+0x40],0x1
  40702c:	call   4033a0 <__longjmp_chk@plt>
  407031:	nop    DWORD PTR [rax+0x0]
  407038:	inc    QWORD PTR [rip+0xc2c1]        # 413300 <__bss_start@@Base+0x1490>
  40703f:	mov    rax,rdx
  407042:	sub    rax,rsi
  407045:	cmp    rax,rdi
  407048:	seta   al
  40704b:	movzx  eax,al
  40704e:	mov    QWORD PTR [rbx+0x40],rax
  407052:	jmp    406f73 <UnityAssertNumbersWithin@@Base+0xa3>
  407057:	nop    WORD PTR [rax+rax*1+0x0]
  407060:	inc    QWORD PTR [rip+0xc291]        # 4132f8 <__bss_start@@Base+0x1488>
  407067:	jmp    406f60 <UnityAssertNumbersWithin@@Base+0x90>
  40706c:	nop    DWORD PTR [rax+0x0]

0000000000407070 <UnityAssertEqualString@@Base>:
  407070:	endbr64 
  407074:	push   r13
  407076:	push   r12
  407078:	push   rbp
  407079:	push   rbx
  40707a:	sub    rsp,0x8
  40707e:	mov    rbp,0x413c00
  407085:	cmp    QWORD PTR [rbp+0x40],0x0
  40708a:	jne    407138 <UnityAssertEqualString@@Base+0xc8>
  407090:	mov    rax,QWORD PTR [rbp+0x48]
  407094:	test   rax,rax
  407097:	jne    407108 <UnityAssertEqualString@@Base+0x98>
  407099:	test   rdi,rdi
  40709c:	setne  r10b
  4070a0:	test   rsi,rsi
  4070a3:	setne  r8b
  4070a7:	and    r10b,r8b
  4070aa:	je     407150 <UnityAssertEqualString@@Base+0xe0>
  4070b0:	mov    r12,QWORD PTR [rip+0xc2c1]        # 413378 <__bss_start@@Base+0x1508>
  4070b7:	xor    r11d,r11d
  4070ba:	nop    WORD PTR [rax+rax*1+0x0]
  4070c0:	mov    r8d,eax
  4070c3:	movzx  r9d,BYTE PTR [rdi+r8*1]
  4070c8:	lea    rbx,[r12+rax*1]
  4070cc:	movzx  r8d,BYTE PTR [rsi+r8*1]
  4070d1:	test   r9b,r9b
  4070d4:	jne    407120 <UnityAssertEqualString@@Base+0xb0>
  4070d6:	test   r11b,r11b
  4070d9:	je     4070e2 <UnityAssertEqualString@@Base+0x72>
  4070db:	mov    QWORD PTR [rip+0xc296],rbx        # 413378 <__bss_start@@Base+0x1508>
  4070e2:	inc    QWORD PTR [rip+0xc297]        # 413380 <__bss_start@@Base+0x1510>
  4070e9:	test   r8b,r8b
  4070ec:	je     4071d0 <UnityAssertEqualString@@Base+0x160>
  4070f2:	inc    QWORD PTR [rip+0xc277]        # 413370 <__bss_start@@Base+0x1500>
  4070f9:	mov    QWORD PTR [rbp+0x40],0x1
  407101:	jmp    407164 <UnityAssertEqualString@@Base+0xf4>
  407103:	nop    DWORD PTR [rax+rax*1+0x0]
  407108:	inc    QWORD PTR [rip+0xc259]        # 413368 <__bss_start@@Base+0x14f8>
  40710f:	add    rsp,0x8
  407113:	pop    rbx
  407114:	pop    rbp
  407115:	pop    r12
  407117:	pop    r13
  407119:	ret    
  40711a:	nop    WORD PTR [rax+rax*1+0x0]
  407120:	inc    rax
  407123:	cmp    r9b,r8b
  407126:	jne    4071dc <UnityAssertEqualString@@Base+0x16c>
  40712c:	mov    r11d,r10d
  40712f:	jmp    4070c0 <UnityAssertEqualString@@Base+0x50>
  407131:	nop    DWORD PTR [rax+0x0]
  407138:	inc    QWORD PTR [rip+0xc221]        # 413360 <__bss_start@@Base+0x14f0>
  40713f:	add    rsp,0x8
  407143:	pop    rbx
  407144:	pop    rbp
  407145:	pop    r12
  407147:	pop    r13
  407149:	ret    
  40714a:	nop    WORD PTR [rax+rax*1+0x0]
  407150:	cmp    rdi,rsi
  407153:	je     4071c0 <UnityAssertEqualString@@Base+0x150>
  407155:	inc    QWORD PTR [rip+0xc234]        # 413390 <__bss_start@@Base+0x1520>
  40715c:	mov    QWORD PTR [rbp+0x40],0x1
  407164:	mov    r13,rsi
  407167:	mov    rbx,rdi
  40716a:	mov    rdi,rcx
  40716d:	mov    r12,rdx
  407170:	inc    QWORD PTR [rip+0xc229]        # 4133a0 <__bss_start@@Base+0x1530>
  407177:	call   405d10 <UnityPrint@@Base+0x3a0>
  40717c:	mov    rsi,r13
  40717f:	mov    rdi,rbx
  407182:	inc    QWORD PTR [rip+0xc21f]        # 4133a8 <__bss_start@@Base+0x1538>
  407189:	call   405a90 <UnityPrint@@Base+0x120>
  40718e:	mov    rdi,r12
  407191:	inc    QWORD PTR [rip+0xc218]        # 4133b0 <__bss_start@@Base+0x1540>
  407198:	call   405ba0 <UnityPrint@@Base+0x230>
  40719d:	mov    esi,0x1
  4071a2:	lea    rdi,[rbp+0x50]
  4071a6:	inc    QWORD PTR [rip+0xc20b]        # 4133b8 <__bss_start@@Base+0x1548>
  4071ad:	mov    QWORD PTR [rbp+0x40],0x1
  4071b5:	call   4033a0 <__longjmp_chk@plt>
  4071ba:	nop    WORD PTR [rax+rax*1+0x0]
  4071c0:	inc    QWORD PTR [rip+0xc1d1]        # 413398 <__bss_start@@Base+0x1528>
  4071c7:	jmp    40710f <UnityAssertEqualString@@Base+0x9f>
  4071cc:	nop    DWORD PTR [rax+0x0]
  4071d0:	inc    QWORD PTR [rip+0xc1b1]        # 413388 <__bss_start@@Base+0x1518>
  4071d7:	jmp    40710f <UnityAssertEqualString@@Base+0x9f>
  4071dc:	test   r11b,r11b
  4071df:	je     4070f2 <UnityAssertEqualString@@Base+0x82>
  4071e5:	mov    QWORD PTR [rip+0xc18c],rbx        # 413378 <__bss_start@@Base+0x1508>
  4071ec:	jmp    4070f2 <UnityAssertEqualString@@Base+0x82>
  4071f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4071fc:	nop    DWORD PTR [rax+0x0]

0000000000407200 <UnityAssertEqualStringLen@@Base>:
  407200:	endbr64 
  407204:	push   r15
  407206:	push   r14
  407208:	push   r13
  40720a:	push   r12
  40720c:	push   rbp
  40720d:	push   rbx
  40720e:	sub    rsp,0x8
  407212:	mov    r14,0x413c00
  407219:	cmp    QWORD PTR [r14+0x40],0x0
  40721e:	jne    4072e0 <UnityAssertEqualStringLen@@Base+0xe0>
  407224:	mov    rax,QWORD PTR [r14+0x48]
  407228:	test   rax,rax
  40722b:	jne    4072a0 <UnityAssertEqualStringLen@@Base+0xa0>
  40722d:	mov    rbx,rsi
  407230:	test   rdi,rdi
  407233:	setne  sil
  407237:	test   rbx,rbx
  40723a:	mov    r13d,edx
  40723d:	setne  dl
  407240:	mov    r12,rcx
  407243:	mov    rbp,rdi
  407246:	and    sil,dl
  407249:	je     407300 <UnityAssertEqualStringLen@@Base+0x100>
  40724f:	mov    rdx,QWORD PTR [rip+0xc182]        # 4133d8 <__bss_start@@Base+0x1568>
  407256:	mov    edi,r13d
  407259:	xor    ecx,ecx
  40725b:	nop    DWORD PTR [rax+rax*1+0x0]
  407260:	movzx  r9d,BYTE PTR [rbp+rax*1+0x0]
  407266:	lea    r11,[rdx+rax*1]
  40726a:	mov    r10d,eax
  40726d:	test   r9b,r9b
  407270:	jne    4072c0 <UnityAssertEqualStringLen@@Base+0xc0>
  407272:	test   cl,cl
  407274:	je     40727d <UnityAssertEqualStringLen@@Base+0x7d>
  407276:	mov    QWORD PTR [rip+0xc15b],r11        # 4133d8 <__bss_start@@Base+0x1568>
  40727d:	inc    QWORD PTR [rip+0xc15c]        # 4133e0 <__bss_start@@Base+0x1570>
  407284:	cmp    BYTE PTR [rbx+rax*1],0x0
  407288:	je     407498 <UnityAssertEqualStringLen@@Base+0x298>
  40728e:	cmp    r10d,r13d
  407291:	jb     407410 <UnityAssertEqualStringLen@@Base+0x210>
  407297:	inc    QWORD PTR [rip+0xc152]        # 4133f0 <__bss_start@@Base+0x1580>
  40729e:	jmp    4072a7 <UnityAssertEqualStringLen@@Base+0xa7>
  4072a0:	inc    QWORD PTR [rip+0xc121]        # 4133c8 <__bss_start@@Base+0x1558>
  4072a7:	add    rsp,0x8
  4072ab:	pop    rbx
  4072ac:	pop    rbp
  4072ad:	pop    r12
  4072af:	pop    r13
  4072b1:	pop    r14
  4072b3:	pop    r15
  4072b5:	ret    
  4072b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072c0:	cmp    rdi,rax
  4072c3:	je     4074a4 <UnityAssertEqualStringLen@@Base+0x2a4>
  4072c9:	inc    rax
  4072cc:	cmp    BYTE PTR [rbx+rax*1-0x1],r9b
  4072d1:	jne    4073fc <UnityAssertEqualStringLen@@Base+0x1fc>
  4072d7:	mov    ecx,esi
  4072d9:	jmp    407260 <UnityAssertEqualStringLen@@Base+0x60>
  4072db:	nop    DWORD PTR [rax+rax*1+0x0]
  4072e0:	inc    QWORD PTR [rip+0xc0d9]        # 4133c0 <__bss_start@@Base+0x1550>
  4072e7:	add    rsp,0x8
  4072eb:	pop    rbx
  4072ec:	pop    rbp
  4072ed:	pop    r12
  4072ef:	pop    r13
  4072f1:	pop    r14
  4072f3:	pop    r15
  4072f5:	ret    
  4072f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407300:	cmp    rdi,rbx
  407303:	je     4073f0 <UnityAssertEqualStringLen@@Base+0x1f0>
  407309:	mov    rdi,r8
  40730c:	inc    QWORD PTR [rip+0xc0e5]        # 4133f8 <__bss_start@@Base+0x1588>
  407313:	inc    QWORD PTR [rip+0xc0ee]        # 413408 <__bss_start@@Base+0x1598>
  40731a:	mov    QWORD PTR [r14+0x40],0x1
  407322:	call   405d10 <UnityPrint@@Base+0x3a0>
  407327:	mov    rdi,0x40c658
  40732e:	inc    QWORD PTR [rip+0xc0db]        # 413410 <__bss_start@@Base+0x15a0>
  407335:	inc    QWORD PTR [rip+0xba64]        # 412da0 <__bss_start@@Base+0xf30>
  40733c:	call   405970 <UnityPrint@@Base>
  407341:	test   rbp,rbp
  407344:	jne    407448 <UnityAssertEqualStringLen@@Base+0x248>
  40734a:	mov    rdi,0x40c666
  407351:	inc    QWORD PTR [rip+0xba58]        # 412db0 <__bss_start@@Base+0xf40>
  407358:	call   405970 <UnityPrint@@Base>
  40735d:	inc    QWORD PTR [rip+0xba6c]        # 412dd0 <__bss_start@@Base+0xf60>
  407364:	mov    rdi,0x40c64f
  40736b:	call   405970 <UnityPrint@@Base>
  407370:	test   rbx,rbx
  407373:	je     4074b8 <UnityAssertEqualStringLen@@Base+0x2b8>
  407379:	mov    rbp,QWORD PTR [rip+0x8c60]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407380:	mov    edi,0x27
  407385:	mov    rsi,QWORD PTR [rbp+0x0]
  407389:	inc    QWORD PTR [rip+0xba48]        # 412dd8 <__bss_start@@Base+0xf68>
  407390:	call   403330 <putc@plt>
  407395:	mov    esi,r13d
  407398:	mov    rdi,rbx
  40739b:	inc    QWORD PTR [rip+0xba46]        # 412de8 <__bss_start@@Base+0xf78>
  4073a2:	call   4057f0 <UnityPrintLen@@Base>
  4073a7:	mov    rsi,QWORD PTR [rbp+0x0]
  4073ab:	mov    edi,0x27
  4073b0:	inc    QWORD PTR [rip+0xba39]        # 412df0 <__bss_start@@Base+0xf80>
  4073b7:	call   403330 <putc@plt>
  4073bc:	inc    QWORD PTR [rip+0xba35]        # 412df8 <__bss_start@@Base+0xf88>
  4073c3:	mov    rdi,r12
  4073c6:	inc    QWORD PTR [rip+0xc04b]        # 413418 <__bss_start@@Base+0x15a8>
  4073cd:	call   405ba0 <UnityPrint@@Base+0x230>
  4073d2:	mov    esi,0x1
  4073d7:	lea    rdi,[r14+0x50]
  4073db:	inc    QWORD PTR [rip+0xc03e]        # 413420 <__bss_start@@Base+0x15b0>
  4073e2:	mov    QWORD PTR [r14+0x40],0x1
  4073ea:	call   4033a0 <__longjmp_chk@plt>
  4073ef:	nop
  4073f0:	inc    QWORD PTR [rip+0xc009]        # 413400 <__bss_start@@Base+0x1590>
  4073f7:	jmp    4072a7 <UnityAssertEqualStringLen@@Base+0xa7>
  4073fc:	test   cl,cl
  4073fe:	je     407410 <UnityAssertEqualStringLen@@Base+0x210>
  407400:	mov    QWORD PTR [rip+0xbfd1],r11        # 4133d8 <__bss_start@@Base+0x1568>
  407407:	nop    WORD PTR [rax+rax*1+0x0]
  407410:	mov    rdi,r8
  407413:	inc    QWORD PTR [rip+0xbfb6]        # 4133d0 <__bss_start@@Base+0x1560>
  40741a:	mov    QWORD PTR [r14+0x40],0x1
  407422:	inc    QWORD PTR [rip+0xbfdf]        # 413408 <__bss_start@@Base+0x1598>
  407429:	call   405d10 <UnityPrint@@Base+0x3a0>
  40742e:	mov    rdi,0x40c658
  407435:	inc    QWORD PTR [rip+0xbfd4]        # 413410 <__bss_start@@Base+0x15a0>
  40743c:	inc    QWORD PTR [rip+0xb95d]        # 412da0 <__bss_start@@Base+0xf30>
  407443:	call   405970 <UnityPrint@@Base>
  407448:	mov    r15,QWORD PTR [rip+0x8b91]        # 40ffe0 <stdout@GLIBC_2.2.5>
  40744f:	mov    edi,0x27
  407454:	mov    rsi,QWORD PTR [r15]
  407457:	inc    QWORD PTR [rip+0xb94a]        # 412da8 <__bss_start@@Base+0xf38>
  40745e:	call   403330 <putc@plt>
  407463:	mov    esi,r13d
  407466:	mov    rdi,rbp
  407469:	inc    QWORD PTR [rip+0xb948]        # 412db8 <__bss_start@@Base+0xf48>
  407470:	call   4057f0 <UnityPrintLen@@Base>
  407475:	mov    rsi,QWORD PTR [r15]
  407478:	mov    edi,0x27
  40747d:	inc    QWORD PTR [rip+0xb93c]        # 412dc0 <__bss_start@@Base+0xf50>
  407484:	call   403330 <putc@plt>
  407489:	inc    QWORD PTR [rip+0xb938]        # 412dc8 <__bss_start@@Base+0xf58>
  407490:	jmp    407364 <UnityAssertEqualStringLen@@Base+0x164>
  407495:	nop    DWORD PTR [rax]
  407498:	inc    QWORD PTR [rip+0xbf49]        # 4133e8 <__bss_start@@Base+0x1578>
  40749f:	jmp    4072a7 <UnityAssertEqualStringLen@@Base+0xa7>
  4074a4:	test   cl,cl
  4074a6:	je     407297 <UnityAssertEqualStringLen@@Base+0x97>
  4074ac:	mov    QWORD PTR [rip+0xbf25],r11        # 4133d8 <__bss_start@@Base+0x1568>
  4074b3:	jmp    407297 <UnityAssertEqualStringLen@@Base+0x97>
  4074b8:	mov    rdi,0x40c666
  4074bf:	inc    QWORD PTR [rip+0xb91a]        # 412de0 <__bss_start@@Base+0xf70>
  4074c6:	call   405970 <UnityPrint@@Base>
  4074cb:	inc    QWORD PTR [rip+0xb92e]        # 412e00 <__bss_start@@Base+0xf90>
  4074d2:	jmp    4073c3 <UnityAssertEqualStringLen@@Base+0x1c3>
  4074d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004074e0 <UnityAssertEqualStringArray@@Base>:
  4074e0:	endbr64 
  4074e4:	mov    rax,0x413c00
  4074eb:	cmp    QWORD PTR [rax+0x40],0x0
  4074f0:	jne    4077f8 <UnityAssertEqualStringArray@@Base+0x318>
  4074f6:	mov    rax,0x413c00
  4074fd:	cmp    QWORD PTR [rax+0x48],0x0
  407502:	jne    4076a8 <UnityAssertEqualStringArray@@Base+0x1c8>
  407508:	push   r15
  40750a:	push   r14
  40750c:	push   r13
  40750e:	push   r12
  407510:	mov    r12,rsi
  407513:	push   rbp
  407514:	mov    rbp,rdi
  407517:	push   rbx
  407518:	sub    rsp,0x48
  40751c:	mov    QWORD PTR [rsp+0x30],r8
  407521:	mov    QWORD PTR [rsp+0x28],rcx
  407526:	mov    DWORD PTR [rsp+0x3c],edx
  40752a:	inc    QWORD PTR [rip+0xbf1f]        # 413450 <__bss_start@@Base+0x15e0>
  407531:	test   edx,edx
  407533:	je     407903 <UnityAssertEqualStringArray@@Base+0x423>
  407539:	mov    rcx,QWORD PTR [rsp+0x28]
  40753e:	mov    rdx,QWORD PTR [rsp+0x30]
  407543:	call   405d70 <UnityPrint@@Base+0x400>
  407548:	inc    QWORD PTR [rip+0xbf29]        # 413478 <__bss_start@@Base+0x1608>
  40754f:	cmp    eax,0x1
  407552:	je     40785b <UnityAssertEqualStringArray@@Base+0x37b>
  407558:	mov    rax,QWORD PTR [rip+0xbf29]        # 413488 <__bss_start@@Base+0x1618>
  40755f:	mov    BYTE PTR [rsp+0x3b],0x0
  407564:	mov    QWORD PTR [rsp+0x18],rax
  407569:	mov    rax,QWORD PTR [rip+0xbf48]        # 4134b8 <__bss_start@@Base+0x1648>
  407570:	mov    r11,QWORD PTR [rip+0xbf29]        # 4134a0 <__bss_start@@Base+0x1630>
  407577:	mov    QWORD PTR [rsp+0x20],rax
  40757c:	mov    rax,QWORD PTR [rip+0xbf25]        # 4134a8 <__bss_start@@Base+0x1638>
  407583:	mov    rbx,QWORD PTR [rip+0xbf0e]        # 413498 <__bss_start@@Base+0x1628>
  40758a:	mov    QWORD PTR [rsp],rax
  40758e:	mov    rax,0x413c00
  407595:	xor    r13d,r13d
  407598:	mov    rax,QWORD PTR [rax+0x40]
  40759c:	xor    r15d,r15d
  40759f:	mov    QWORD PTR [rsp+0x8],rax
  4075a4:	mov    eax,DWORD PTR [rsp+0x3c]
  4075a8:	xor    r14d,r14d
  4075ab:	dec    eax
  4075ad:	mov    QWORD PTR [rsp+0x10],rax
  4075b2:	xor    edi,edi
  4075b4:	xor    r8d,r8d
  4075b7:	nop    WORD PTR [rax+rax*1+0x0]
  4075c0:	mov    r9,QWORD PTR [rbp+0x0]
  4075c4:	mov    r10,QWORD PTR [r12]
  4075c8:	test   r9,r9
  4075cb:	je     407760 <UnityAssertEqualStringArray@@Base+0x280>
  4075d1:	test   r10,r10
  4075d4:	jne    4076b0 <UnityAssertEqualStringArray@@Base+0x1d0>
  4075da:	test   r8b,r8b
  4075dd:	je     4075e6 <UnityAssertEqualStringArray@@Base+0x106>
  4075df:	mov    QWORD PTR [rip+0xbeb2],rbx        # 413498 <__bss_start@@Base+0x1628>
  4075e6:	cmp    BYTE PTR [rsp+0x3b],0x0
  4075eb:	je     4075f4 <UnityAssertEqualStringArray@@Base+0x114>
  4075ed:	mov    QWORD PTR [rip+0xbeac],r11        # 4134a0 <__bss_start@@Base+0x1630>
  4075f4:	test   dil,dil
  4075f7:	je     407604 <UnityAssertEqualStringArray@@Base+0x124>
  4075f9:	mov    rax,QWORD PTR [rsp]
  4075fd:	mov    QWORD PTR [rip+0xbea4],rax        # 4134a8 <__bss_start@@Base+0x1638>
  407604:	test   r14b,r14b
  407607:	je     407615 <UnityAssertEqualStringArray@@Base+0x135>
  407609:	mov    rax,QWORD PTR [rsp+0x18]
  40760e:	mov    QWORD PTR [rip+0xbe73],rax        # 413488 <__bss_start@@Base+0x1618>
  407615:	test   r15b,r15b
  407618:	je     407626 <UnityAssertEqualStringArray@@Base+0x146>
  40761a:	mov    rax,QWORD PTR [rsp+0x20]
  40761f:	mov    QWORD PTR [rip+0xbe92],rax        # 4134b8 <__bss_start@@Base+0x1648>
  407626:	mov    rax,0x413c00
  40762d:	inc    QWORD PTR [rip+0xbe7c]        # 4134b0 <__bss_start@@Base+0x1640>
  407634:	mov    QWORD PTR [rax+0x40],0x1
  40763c:	mov    rdi,QWORD PTR [rsp+0x30]
  407641:	inc    QWORD PTR [rip+0xbe78]        # 4134c0 <__bss_start@@Base+0x1650>
  407648:	call   405d10 <UnityPrint@@Base+0x3a0>
  40764d:	inc    QWORD PTR [rip+0xbe74]        # 4134c8 <__bss_start@@Base+0x1658>
  407654:	cmp    DWORD PTR [rsp+0x3c],0x1
  407659:	ja     407880 <UnityAssertEqualStringArray@@Base+0x3a0>
  40765f:	mov    rsi,QWORD PTR [r12]
  407663:	mov    rdi,QWORD PTR [rbp+0x0]
  407667:	call   405a90 <UnityPrint@@Base+0x120>
  40766c:	mov    rdi,QWORD PTR [rsp+0x28]
  407671:	inc    QWORD PTR [rip+0xbe70]        # 4134e8 <__bss_start@@Base+0x1678>
  407678:	call   405ba0 <UnityPrint@@Base+0x230>
  40767d:	mov    rax,0x413c00
  407684:	mov    esi,0x1
  407689:	lea    rdi,[rax+0x50]
  40768d:	inc    QWORD PTR [rip+0xbe5c]        # 4134f0 <__bss_start@@Base+0x1680>
  407694:	mov    QWORD PTR [rax+0x40],0x1
  40769c:	call   4033a0 <__longjmp_chk@plt>
  4076a1:	nop    DWORD PTR [rax+0x0]
  4076a8:	inc    QWORD PTR [rip+0xbd99]        # 413448 <__bss_start@@Base+0x15d8>
  4076af:	ret    
  4076b0:	xor    eax,eax
  4076b2:	nop    WORD PTR [rax+rax*1+0x0]
  4076b8:	mov    edx,eax
  4076ba:	movzx  ecx,BYTE PTR [r9+rdx*1]
  4076bf:	lea    rsi,[rbx+rax*1]
  4076c3:	movzx  edx,BYTE PTR [r10+rdx*1]
  4076c8:	test   cl,cl
  4076ca:	jne    407740 <UnityAssertEqualStringArray@@Base+0x260>
  4076cc:	inc    r11
  4076cf:	test   dl,dl
  4076d1:	je     4077a8 <UnityAssertEqualStringArray@@Base+0x2c8>
  4076d7:	test   r8b,r8b
  4076da:	je     4076e3 <UnityAssertEqualStringArray@@Base+0x203>
  4076dc:	mov    QWORD PTR [rip+0xbdb5],rsi        # 413498 <__bss_start@@Base+0x1628>
  4076e3:	mov    QWORD PTR [rip+0xbdb6],r11        # 4134a0 <__bss_start@@Base+0x1630>
  4076ea:	test   dil,dil
  4076ed:	je     4076fa <UnityAssertEqualStringArray@@Base+0x21a>
  4076ef:	mov    rax,QWORD PTR [rsp]
  4076f3:	mov    QWORD PTR [rip+0xbdae],rax        # 4134a8 <__bss_start@@Base+0x1638>
  4076fa:	test   r14b,r14b
  4076fd:	je     40770b <UnityAssertEqualStringArray@@Base+0x22b>
  4076ff:	mov    rax,QWORD PTR [rsp+0x18]
  407704:	mov    QWORD PTR [rip+0xbd7d],rax        # 413488 <__bss_start@@Base+0x1618>
  40770b:	test   r15b,r15b
  40770e:	je     40771c <UnityAssertEqualStringArray@@Base+0x23c>
  407710:	mov    rax,QWORD PTR [rsp+0x20]
  407715:	mov    QWORD PTR [rip+0xbd9c],rax        # 4134b8 <__bss_start@@Base+0x1648>
  40771c:	mov    rax,0x413c00
  407723:	inc    QWORD PTR [rip+0xbd66]        # 413490 <__bss_start@@Base+0x1620>
  40772a:	mov    QWORD PTR [rax+0x40],0x1
  407732:	jmp    40763c <UnityAssertEqualStringArray@@Base+0x15c>
  407737:	nop    WORD PTR [rax+rax*1+0x0]
  407740:	inc    rax
  407743:	cmp    cl,dl
  407745:	jne    407864 <UnityAssertEqualStringArray@@Base+0x384>
  40774b:	mov    r8d,0x1
  407751:	jmp    4076b8 <UnityAssertEqualStringArray@@Base+0x1d8>
  407756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407760:	inc    QWORD PTR [rsp+0x18]
  407765:	test   r10,r10
  407768:	jne    4077c0 <UnityAssertEqualStringArray@@Base+0x2e0>
  40776a:	inc    QWORD PTR [rsp+0x20]
  40776f:	mov    r15d,0x1
  407775:	mov    r14d,0x1
  40777b:	cmp    QWORD PTR [rsp+0x8],0x0
  407781:	jne    4078ae <UnityAssertEqualStringArray@@Base+0x3ce>
  407787:	lea    rax,[r13+0x1]
  40778b:	add    rbp,0x8
  40778f:	add    r12,0x8
  407793:	cmp    r13,QWORD PTR [rsp+0x10]
  407798:	je     407800 <UnityAssertEqualStringArray@@Base+0x320>
  40779a:	mov    r13,rax
  40779d:	jmp    4075c0 <UnityAssertEqualStringArray@@Base+0xe0>
  4077a2:	nop    WORD PTR [rax+rax*1+0x0]
  4077a8:	inc    QWORD PTR [rsp]
  4077ac:	mov    rbx,rsi
  4077af:	mov    edi,0x1
  4077b4:	mov    BYTE PTR [rsp+0x3b],0x1
  4077b9:	jmp    40777b <UnityAssertEqualStringArray@@Base+0x29b>
  4077bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077c0:	test   r8b,r8b
  4077c3:	je     4077cc <UnityAssertEqualStringArray@@Base+0x2ec>
  4077c5:	mov    QWORD PTR [rip+0xbccc],rbx        # 413498 <__bss_start@@Base+0x1628>
  4077cc:	cmp    BYTE PTR [rsp+0x3b],0x0
  4077d1:	je     4077da <UnityAssertEqualStringArray@@Base+0x2fa>
  4077d3:	mov    QWORD PTR [rip+0xbcc6],r11        # 4134a0 <__bss_start@@Base+0x1630>
  4077da:	test   dil,dil
  4077dd:	je     407609 <UnityAssertEqualStringArray@@Base+0x129>
  4077e3:	mov    rax,QWORD PTR [rsp]
  4077e7:	mov    QWORD PTR [rip+0xbcba],rax        # 4134a8 <__bss_start@@Base+0x1638>
  4077ee:	jmp    407609 <UnityAssertEqualStringArray@@Base+0x129>
  4077f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4077f8:	inc    QWORD PTR [rip+0xbc41]        # 413440 <__bss_start@@Base+0x15d0>
  4077ff:	ret    
  407800:	test   r8b,r8b
  407803:	je     40780c <UnityAssertEqualStringArray@@Base+0x32c>
  407805:	mov    QWORD PTR [rip+0xbc8c],rbx        # 413498 <__bss_start@@Base+0x1628>
  40780c:	cmp    BYTE PTR [rsp+0x3b],0x0
  407811:	je     40781a <UnityAssertEqualStringArray@@Base+0x33a>
  407813:	mov    QWORD PTR [rip+0xbc86],r11        # 4134a0 <__bss_start@@Base+0x1630>
  40781a:	test   dil,dil
  40781d:	je     40782a <UnityAssertEqualStringArray@@Base+0x34a>
  40781f:	mov    rax,QWORD PTR [rsp]
  407823:	mov    QWORD PTR [rip+0xbc7e],rax        # 4134a8 <__bss_start@@Base+0x1638>
  40782a:	test   r14b,r14b
  40782d:	je     40783b <UnityAssertEqualStringArray@@Base+0x35b>
  40782f:	mov    rax,QWORD PTR [rsp+0x18]
  407834:	mov    QWORD PTR [rip+0xbc4d],rax        # 413488 <__bss_start@@Base+0x1618>
  40783b:	test   r15b,r15b
  40783e:	je     40784c <UnityAssertEqualStringArray@@Base+0x36c>
  407840:	mov    rax,QWORD PTR [rsp+0x20]
  407845:	mov    QWORD PTR [rip+0xbc6c],rax        # 4134b8 <__bss_start@@Base+0x1648>
  40784c:	add    rsp,0x48
  407850:	pop    rbx
  407851:	pop    rbp
  407852:	pop    r12
  407854:	pop    r13
  407856:	pop    r14
  407858:	pop    r15
  40785a:	ret    
  40785b:	inc    QWORD PTR [rip+0xbc1e]        # 413480 <__bss_start@@Base+0x1610>
  407862:	jmp    40784c <UnityAssertEqualStringArray@@Base+0x36c>
  407864:	test   r8b,r8b
  407867:	je     407870 <UnityAssertEqualStringArray@@Base+0x390>
  407869:	mov    QWORD PTR [rip+0xbc28],rsi        # 413498 <__bss_start@@Base+0x1628>
  407870:	cmp    BYTE PTR [rsp+0x3b],0x0
  407875:	jne    4076e3 <UnityAssertEqualStringArray@@Base+0x203>
  40787b:	jmp    4076ea <UnityAssertEqualStringArray@@Base+0x20a>
  407880:	mov    rdi,0x40c640
  407887:	inc    QWORD PTR [rip+0xbc42]        # 4134d0 <__bss_start@@Base+0x1660>
  40788e:	call   405970 <UnityPrint@@Base>
  407893:	mov    rdi,r13
  407896:	inc    QWORD PTR [rip+0xbc3b]        # 4134d8 <__bss_start@@Base+0x1668>
  40789d:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  4078a2:	inc    QWORD PTR [rip+0xbc37]        # 4134e0 <__bss_start@@Base+0x1670>
  4078a9:	jmp    40765f <UnityAssertEqualStringArray@@Base+0x17f>
  4078ae:	test   r8b,r8b
  4078b1:	je     4078ba <UnityAssertEqualStringArray@@Base+0x3da>
  4078b3:	mov    QWORD PTR [rip+0xbbde],rbx        # 413498 <__bss_start@@Base+0x1628>
  4078ba:	cmp    BYTE PTR [rsp+0x3b],0x0
  4078bf:	je     4078c8 <UnityAssertEqualStringArray@@Base+0x3e8>
  4078c1:	mov    QWORD PTR [rip+0xbbd8],r11        # 4134a0 <__bss_start@@Base+0x1630>
  4078c8:	test   dil,dil
  4078cb:	je     4078d8 <UnityAssertEqualStringArray@@Base+0x3f8>
  4078cd:	mov    rax,QWORD PTR [rsp]
  4078d1:	mov    QWORD PTR [rip+0xbbd0],rax        # 4134a8 <__bss_start@@Base+0x1638>
  4078d8:	test   r14b,r14b
  4078db:	je     4078e9 <UnityAssertEqualStringArray@@Base+0x409>
  4078dd:	mov    rax,QWORD PTR [rsp+0x18]
  4078e2:	mov    QWORD PTR [rip+0xbb9f],rax        # 413488 <__bss_start@@Base+0x1618>
  4078e9:	test   r15b,r15b
  4078ec:	je     40763c <UnityAssertEqualStringArray@@Base+0x15c>
  4078f2:	mov    rax,QWORD PTR [rsp+0x20]
  4078f7:	mov    QWORD PTR [rip+0xbbba],rax        # 4134b8 <__bss_start@@Base+0x1648>
  4078fe:	jmp    40763c <UnityAssertEqualStringArray@@Base+0x15c>
  407903:	mov    rdi,r8
  407906:	inc    QWORD PTR [rip+0xbb4b]        # 413458 <__bss_start@@Base+0x15e8>
  40790d:	call   405d10 <UnityPrint@@Base+0x3a0>
  407912:	mov    rdi,0x40c5c0
  407919:	inc    QWORD PTR [rip+0xbb40]        # 413460 <__bss_start@@Base+0x15f0>
  407920:	call   405970 <UnityPrint@@Base>
  407925:	mov    rdi,QWORD PTR [rsp+0x28]
  40792a:	inc    QWORD PTR [rip+0xbb37]        # 413468 <__bss_start@@Base+0x15f8>
  407931:	call   405ba0 <UnityPrint@@Base+0x230>
  407936:	mov    rax,0x413c00
  40793d:	mov    esi,0x1
  407942:	lea    rdi,[rax+0x50]
  407946:	inc    QWORD PTR [rip+0xbb23]        # 413470 <__bss_start@@Base+0x1600>
  40794d:	mov    QWORD PTR [rax+0x40],0x1
  407955:	call   4033a0 <__longjmp_chk@plt>
  40795a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407960 <UnityAssertEqualMemory@@Base>:
  407960:	endbr64 
  407964:	push   r15
  407966:	push   r14
  407968:	push   r13
  40796a:	push   r12
  40796c:	push   rbp
  40796d:	push   rbx
  40796e:	sub    rsp,0x38
  407972:	mov    rax,0x413c00
  407979:	mov    QWORD PTR [rsp+0x10],r8
  40797e:	cmp    QWORD PTR [rax+0x40],0x0
  407983:	mov    QWORD PTR [rsp+0x18],r9
  407988:	jne    407ab3 <UnityAssertEqualMemory@@Base+0x153>
  40798e:	mov    rax,0x413c00
  407995:	mov    rax,QWORD PTR [rax+0x48]
  407999:	mov    QWORD PTR [rsp+0x20],rax
  40799e:	test   rax,rax
  4079a1:	jne    407a9d <UnityAssertEqualMemory@@Base+0x13d>
  4079a7:	inc    QWORD PTR [rip+0xbb62]        # 413510 <__bss_start@@Base+0x16a0>
  4079ae:	test   ecx,ecx
  4079b0:	sete   r13b
  4079b4:	test   edx,edx
  4079b6:	sete   al
  4079b9:	mov    r14d,edx
  4079bc:	mov    r12d,ecx
  4079bf:	or     r13b,al
  4079c2:	jne    407c18 <UnityAssertEqualMemory@@Base+0x2b8>
  4079c8:	mov    rcx,QWORD PTR [rsp+0x10]
  4079cd:	mov    rdx,QWORD PTR [rsp+0x18]
  4079d2:	mov    rbx,rdi
  4079d5:	mov    rbp,rsi
  4079d8:	call   405d70 <UnityPrint@@Base+0x400>
  4079dd:	inc    QWORD PTR [rip+0xbb54]        # 413538 <__bss_start@@Base+0x16c8>
  4079e4:	cmp    eax,0x1
  4079e7:	je     407ac9 <UnityAssertEqualMemory@@Base+0x169>
  4079ed:	mov    r8,QWORD PTR [rip+0xbbc4]        # 4135b8 <__bss_start@@Base+0x1748>
  4079f4:	lea    edx,[r12-0x1]
  4079f9:	lea    edi,[r12+r8*1-0x1]
  4079fe:	mov    DWORD PTR [rsp+0x2c],edx
  407a02:	mov    DWORD PTR [rsp+0x28],edi
  407a06:	lea    r10d,[r14-0x1]
  407a0a:	mov    rax,QWORD PTR [rip+0xbb3f]        # 413550 <__bss_start@@Base+0x16e0>
  407a11:	mov    r9,r10
  407a14:	lea    r11,[r8+rdx*1+0x1]
  407a19:	inc    r10
  407a1c:	nop    DWORD PTR [rax+0x0]
  407a20:	movzx  edi,BYTE PTR [rbx]
  407a23:	mov    r14d,r8d
  407a26:	cmp    BYTE PTR [rbp+0x0],dil
  407a2a:	jne    407bfc <UnityAssertEqualMemory@@Base+0x29c>
  407a30:	lea    rdx,[rax+0x1]
  407a34:	lea    rsi,[rbx+r10*1]
  407a38:	lea    r15d,[r9+rbx*1]
  407a3c:	sub    rdx,rbx
  407a3f:	mov    BYTE PTR [rsp+0xf],r13b
  407a44:	jmp    407a5a <UnityAssertEqualMemory@@Base+0xfa>
  407a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a50:	movzx  r13d,BYTE PTR [rbp+0x0]
  407a55:	cmp    BYTE PTR [rax],r13b
  407a58:	jne    407ad2 <UnityAssertEqualMemory@@Base+0x172>
  407a5a:	lea    rax,[rbx+0x1]
  407a5e:	lea    rcx,[rdx+rbx*1]
  407a62:	inc    rbp
  407a65:	mov    rbx,rax
  407a68:	mov    edi,eax
  407a6a:	cmp    rax,rsi
  407a6d:	jne    407a50 <UnityAssertEqualMemory@@Base+0xf0>
  407a6f:	inc    r8
  407a72:	mov    rax,rcx
  407a75:	mov    r13d,0x1
  407a7b:	cmp    r11,r8
  407a7e:	jne    407a20 <UnityAssertEqualMemory@@Base+0xc0>
  407a80:	mov    QWORD PTR [rip+0xbac9],rcx        # 413550 <__bss_start@@Base+0x16e0>
  407a87:	mov    QWORD PTR [rip+0xbb2a],r11        # 4135b8 <__bss_start@@Base+0x1748>
  407a8e:	add    rsp,0x38
  407a92:	pop    rbx
  407a93:	pop    rbp
  407a94:	pop    r12
  407a96:	pop    r13
  407a98:	pop    r14
  407a9a:	pop    r15
  407a9c:	ret    
  407a9d:	inc    QWORD PTR [rip+0xba64]        # 413508 <__bss_start@@Base+0x1698>
  407aa4:	add    rsp,0x38
  407aa8:	pop    rbx
  407aa9:	pop    rbp
  407aaa:	pop    r12
  407aac:	pop    r13
  407aae:	pop    r14
  407ab0:	pop    r15
  407ab2:	ret    
  407ab3:	inc    QWORD PTR [rip+0xba46]        # 413500 <__bss_start@@Base+0x1690>
  407aba:	add    rsp,0x38
  407abe:	pop    rbx
  407abf:	pop    rbp
  407ac0:	pop    r12
  407ac2:	pop    r13
  407ac4:	pop    r14
  407ac6:	pop    r15
  407ac8:	ret    
  407ac9:	inc    QWORD PTR [rip+0xba70]        # 413540 <__bss_start@@Base+0x16d0>
  407ad0:	jmp    407a8e <UnityAssertEqualMemory@@Base+0x12e>
  407ad2:	movzx  r13d,BYTE PTR [rsp+0xf]
  407ad8:	mov    QWORD PTR [rip+0xba71],rcx        # 413550 <__bss_start@@Base+0x16e0>
  407adf:	test   r13b,r13b
  407ae2:	je     407aeb <UnityAssertEqualMemory@@Base+0x18b>
  407ae4:	mov    QWORD PTR [rip+0xbacd],r8        # 4135b8 <__bss_start@@Base+0x1748>
  407aeb:	sub    edi,r15d
  407aee:	lea    eax,[rdi+r9*1]
  407af2:	mov    QWORD PTR [rsp+0x20],rax
  407af7:	mov    rdi,QWORD PTR [rsp+0x18]
  407afc:	inc    QWORD PTR [rip+0xba45]        # 413548 <__bss_start@@Base+0x16d8>
  407b03:	call   405d10 <UnityPrint@@Base+0x3a0>
  407b08:	mov    rdi,0x40c620
  407b0f:	inc    QWORD PTR [rip+0xba42]        # 413558 <__bss_start@@Base+0x16e8>
  407b16:	call   405970 <UnityPrint@@Base>
  407b1b:	inc    QWORD PTR [rip+0xba3e]        # 413560 <__bss_start@@Base+0x16f0>
  407b22:	cmp    r12d,0x1
  407b26:	jbe    407b5b <UnityAssertEqualMemory@@Base+0x1fb>
  407b28:	mov    rdi,0x40c640
  407b2f:	inc    QWORD PTR [rip+0xba32]        # 413568 <__bss_start@@Base+0x16f8>
  407b36:	call   405970 <UnityPrint@@Base>
  407b3b:	mov    eax,DWORD PTR [rsp+0x2c]
  407b3f:	sub    r14d,DWORD PTR [rsp+0x28]
  407b44:	lea    edi,[r14+rax*1]
  407b48:	inc    QWORD PTR [rip+0xba21]        # 413570 <__bss_start@@Base+0x1700>
  407b4f:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  407b54:	inc    QWORD PTR [rip+0xba1d]        # 413578 <__bss_start@@Base+0x1708>
  407b5b:	mov    rdi,0x40c632
  407b62:	call   405970 <UnityPrint@@Base>
  407b67:	mov    rdi,QWORD PTR [rsp+0x20]
  407b6c:	inc    QWORD PTR [rip+0xba0d]        # 413580 <__bss_start@@Base+0x1710>
  407b73:	call   4055b0 <UnityPrintNumberUnsigned@@Base>
  407b78:	mov    rdi,0x40c658
  407b7f:	inc    QWORD PTR [rip+0xba02]        # 413588 <__bss_start@@Base+0x1718>
  407b86:	call   405970 <UnityPrint@@Base>
  407b8b:	movzx  edi,BYTE PTR [rbx]
  407b8e:	mov    esi,0x41
  407b93:	inc    QWORD PTR [rip+0xb9f6]        # 413590 <__bss_start@@Base+0x1720>
  407b9a:	call   405770 <UnityPrintNumberByStyle@@Base>
  407b9f:	mov    rdi,0x40c64f
  407ba6:	inc    QWORD PTR [rip+0xb9eb]        # 413598 <__bss_start@@Base+0x1728>
  407bad:	call   405970 <UnityPrint@@Base>
  407bb2:	movzx  edi,BYTE PTR [rbp+0x0]
  407bb6:	mov    esi,0x41
  407bbb:	inc    QWORD PTR [rip+0xb9de]        # 4135a0 <__bss_start@@Base+0x1730>
  407bc2:	call   405770 <UnityPrintNumberByStyle@@Base>
  407bc7:	mov    rdi,QWORD PTR [rsp+0x10]
  407bcc:	inc    QWORD PTR [rip+0xb9d5]        # 4135a8 <__bss_start@@Base+0x1738>
  407bd3:	call   405ba0 <UnityPrint@@Base+0x230>
  407bd8:	inc    QWORD PTR [rip+0xb9d1]        # 4135b0 <__bss_start@@Base+0x1740>
  407bdf:	mov    rax,0x413c00
  407be6:	mov    esi,0x1
  407beb:	lea    rdi,[rax+0x50]
  407bef:	mov    QWORD PTR [rax+0x40],0x1
  407bf7:	call   4033a0 <__longjmp_chk@plt>
  407bfc:	test   r13b,r13b
  407bff:	je     407af7 <UnityAssertEqualMemory@@Base+0x197>
  407c05:	mov    QWORD PTR [rip+0xb944],rax        # 413550 <__bss_start@@Base+0x16e0>
  407c0c:	mov    QWORD PTR [rip+0xb9a5],r8        # 4135b8 <__bss_start@@Base+0x1748>
  407c13:	jmp    407af7 <UnityAssertEqualMemory@@Base+0x197>
  407c18:	mov    rdi,QWORD PTR [rsp+0x18]
  407c1d:	inc    QWORD PTR [rip+0xb8f4]        # 413518 <__bss_start@@Base+0x16a8>
  407c24:	call   405d10 <UnityPrint@@Base+0x3a0>
  407c29:	mov    rdi,0x40c5c0
  407c30:	inc    QWORD PTR [rip+0xb8e9]        # 413520 <__bss_start@@Base+0x16b0>
  407c37:	call   405970 <UnityPrint@@Base>
  407c3c:	mov    rdi,QWORD PTR [rsp+0x10]
  407c41:	inc    QWORD PTR [rip+0xb8e0]        # 413528 <__bss_start@@Base+0x16b8>
  407c48:	call   405ba0 <UnityPrint@@Base+0x230>
  407c4d:	inc    QWORD PTR [rip+0xb8dc]        # 413530 <__bss_start@@Base+0x16c0>
  407c54:	jmp    407bdf <UnityAssertEqualMemory@@Base+0x27f>
  407c56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407c60 <UnityFail@@Base>:
  407c60:	endbr64 
  407c64:	push   r12
  407c66:	push   rbp
  407c67:	push   rbx
  407c68:	mov    rbx,0x413c00
  407c6f:	cmp    QWORD PTR [rbx+0x40],0x0
  407c74:	jne    407c90 <UnityFail@@Base+0x30>
  407c76:	inc    QWORD PTR [rip+0xb94b]        # 4135c8 <__bss_start@@Base+0x1758>
  407c7d:	cmp    QWORD PTR [rbx+0x48],0x0
  407c82:	je     407c9c <UnityFail@@Base+0x3c>
  407c84:	pop    rbx
  407c85:	pop    rbp
  407c86:	pop    r12
  407c88:	ret    
  407c89:	nop    DWORD PTR [rax+0x0]
  407c90:	pop    rbx
  407c91:	pop    rbp
  407c92:	inc    QWORD PTR [rip+0xb927]        # 4135c0 <__bss_start@@Base+0x1750>
  407c99:	pop    r12
  407c9b:	ret    
  407c9c:	mov    rbp,rdi
  407c9f:	mov    rdi,QWORD PTR [rbx]
  407ca2:	inc    QWORD PTR [rip+0xb927]        # 4135d0 <__bss_start@@Base+0x1760>
  407ca9:	call   405c80 <UnityPrint@@Base+0x310>
  407cae:	inc    QWORD PTR [rip+0xb923]        # 4135d8 <__bss_start@@Base+0x1768>
  407cb5:	call   405f20 <UnityPrintFail@@Base>
  407cba:	test   rbp,rbp
  407cbd:	je     407d9f <UnityFail@@Base+0x13f>
  407cc3:	mov    r12,QWORD PTR [rip+0x8316]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407cca:	mov    edi,0x3a
  407ccf:	mov    rsi,QWORD PTR [r12]
  407cd3:	inc    QWORD PTR [rip+0xb906]        # 4135e0 <__bss_start@@Base+0x1770>
  407cda:	call   403330 <putc@plt>
  407cdf:	inc    QWORD PTR [rip+0xb90a]        # 4135f0 <__bss_start@@Base+0x1780>
  407ce6:	cmp    QWORD PTR [rbx+0x10],0x0
  407ceb:	je     407d58 <UnityFail@@Base+0xf8>
  407ced:	mov    rdi,0x40c450
  407cf4:	inc    QWORD PTR [rip+0xb8fd]        # 4135f8 <__bss_start@@Base+0x1788>
  407cfb:	call   405970 <UnityPrint@@Base>
  407d00:	mov    rdi,QWORD PTR [rbx+0x10]
  407d04:	inc    QWORD PTR [rip+0xb8f5]        # 413600 <__bss_start@@Base+0x1790>
  407d0b:	call   405970 <UnityPrint@@Base>
  407d10:	cmp    QWORD PTR [rbx+0x18],0x0
  407d15:	je     407da8 <UnityFail@@Base+0x148>
  407d1b:	mov    rdi,0x40c440
  407d22:	inc    QWORD PTR [rip+0xb8df]        # 413608 <__bss_start@@Base+0x1798>
  407d29:	call   405970 <UnityPrint@@Base>
  407d2e:	mov    rdi,QWORD PTR [rbx+0x18]
  407d32:	inc    QWORD PTR [rip+0xb8df]        # 413618 <__bss_start@@Base+0x17a8>
  407d39:	call   405970 <UnityPrint@@Base>
  407d3e:	inc    QWORD PTR [rip+0xb8db]        # 413620 <__bss_start@@Base+0x17b0>
  407d45:	mov    rdi,0x40c663
  407d4c:	call   405970 <UnityPrint@@Base>
  407d51:	inc    QWORD PTR [rip+0xb8d0]        # 413628 <__bss_start@@Base+0x17b8>
  407d58:	cmp    BYTE PTR [rbp+0x0],0x20
  407d5c:	je     407d7a <UnityFail@@Base+0x11a>
  407d5e:	mov    rsi,QWORD PTR [r12]
  407d62:	mov    edi,0x20
  407d67:	inc    QWORD PTR [rip+0xb8c2]        # 413630 <__bss_start@@Base+0x17c0>
  407d6e:	call   403330 <putc@plt>
  407d73:	inc    QWORD PTR [rip+0xb8be]        # 413638 <__bss_start@@Base+0x17c8>
  407d7a:	mov    rdi,rbp
  407d7d:	call   405970 <UnityPrint@@Base>
  407d82:	inc    QWORD PTR [rip+0xb8b7]        # 413640 <__bss_start@@Base+0x17d0>
  407d89:	mov    esi,0x1
  407d8e:	lea    rdi,[rbx+0x50]
  407d92:	mov    QWORD PTR [rbx+0x40],0x1
  407d9a:	call   4033a0 <__longjmp_chk@plt>
  407d9f:	inc    QWORD PTR [rip+0xb842]        # 4135e8 <__bss_start@@Base+0x1778>
  407da6:	jmp    407d89 <UnityFail@@Base+0x129>
  407da8:	inc    QWORD PTR [rip+0xb861]        # 413610 <__bss_start@@Base+0x17a0>
  407daf:	jmp    407d45 <UnityFail@@Base+0xe5>
  407db1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407dbc:	nop    DWORD PTR [rax+0x0]

0000000000407dc0 <UnityIgnore@@Base>:
  407dc0:	endbr64 
  407dc4:	push   r12
  407dc6:	push   rbp
  407dc7:	push   rbx
  407dc8:	mov    rbx,0x413c00
  407dcf:	cmp    QWORD PTR [rbx+0x40],0x0
  407dd4:	jne    407df0 <UnityIgnore@@Base+0x30>
  407dd6:	inc    QWORD PTR [rip+0xb88b]        # 413668 <__bss_start@@Base+0x17f8>
  407ddd:	cmp    QWORD PTR [rbx+0x48],0x0
  407de2:	je     407dfc <UnityIgnore@@Base+0x3c>
  407de4:	pop    rbx
  407de5:	pop    rbp
  407de6:	pop    r12
  407de8:	ret    
  407de9:	nop    DWORD PTR [rax+0x0]
  407df0:	pop    rbx
  407df1:	pop    rbp
  407df2:	inc    QWORD PTR [rip+0xb867]        # 413660 <__bss_start@@Base+0x17f0>
  407df9:	pop    r12
  407dfb:	ret    
  407dfc:	mov    rbp,rdi
  407dff:	mov    rdi,QWORD PTR [rbx]
  407e02:	inc    QWORD PTR [rip+0xb867]        # 413670 <__bss_start@@Base+0x1800>
  407e09:	call   405c80 <UnityPrint@@Base+0x310>
  407e0e:	mov    rdi,0x40c66b
  407e15:	inc    QWORD PTR [rip+0xb85c]        # 413678 <__bss_start@@Base+0x1808>
  407e1c:	call   405970 <UnityPrint@@Base>
  407e21:	test   rbp,rbp
  407e24:	je     407e83 <UnityIgnore@@Base+0xc3>
  407e26:	mov    r12,QWORD PTR [rip+0x81b3]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407e2d:	mov    edi,0x3a
  407e32:	mov    rsi,QWORD PTR [r12]
  407e36:	inc    QWORD PTR [rip+0xb843]        # 413680 <__bss_start@@Base+0x1810>
  407e3d:	call   403330 <putc@plt>
  407e42:	mov    rsi,QWORD PTR [r12]
  407e46:	mov    edi,0x20
  407e4b:	inc    QWORD PTR [rip+0xb83e]        # 413690 <__bss_start@@Base+0x1820>
  407e52:	call   403330 <putc@plt>
  407e57:	mov    rdi,rbp
  407e5a:	inc    QWORD PTR [rip+0xb837]        # 413698 <__bss_start@@Base+0x1828>
  407e61:	call   405970 <UnityPrint@@Base>
  407e66:	inc    QWORD PTR [rip+0xb833]        # 4136a0 <__bss_start@@Base+0x1830>
  407e6d:	mov    esi,0x1
  407e72:	lea    rdi,[rbx+0x50]
  407e76:	mov    QWORD PTR [rbx+0x48],0x1
  407e7e:	call   4033a0 <__longjmp_chk@plt>
  407e83:	inc    QWORD PTR [rip+0xb7fe]        # 413688 <__bss_start@@Base+0x1818>
  407e8a:	jmp    407e6d <UnityIgnore@@Base+0xad>
  407e8c:	nop    DWORD PTR [rax+0x0]

0000000000407e90 <setUp@@Base>:
  407e90:	endbr64 
  407e94:	inc    QWORD PTR [rip+0xb80d]        # 4136a8 <__bss_start@@Base+0x1838>
  407e9b:	ret    
  407e9c:	nop    DWORD PTR [rax+0x0]

0000000000407ea0 <tearDown@@Base>:
  407ea0:	endbr64 
  407ea4:	inc    QWORD PTR [rip+0xb805]        # 4136b0 <__bss_start@@Base+0x1840>
  407eab:	ret    
  407eac:	nop    DWORD PTR [rax+0x0]

0000000000407eb0 <UnityDefaultTestRun@@Base>:
  407eb0:	endbr64 
  407eb4:	sub    rsp,0x18
  407eb8:	mov    rax,0x413c00
  407ebf:	mov    QWORD PTR [rsp+0x8],rdi
  407ec4:	movsxd rdx,edx
  407ec7:	lea    rdi,[rax+0x50]
  407ecb:	inc    QWORD PTR [rip+0xb7ee]        # 4136c0 <__bss_start@@Base+0x1850>
  407ed2:	mov    QWORD PTR [rax+0x8],rsi
  407ed6:	mov    QWORD PTR [rax+0x20],rdx
  407eda:	inc    QWORD PTR [rax+0x28]
  407ede:	mov    QWORD PTR [rax+0x10],0x0
  407ee6:	mov    QWORD PTR [rax+0x18],0x0
  407eee:	call   403320 <_setjmp@plt>
  407ef3:	endbr64 
  407ef7:	inc    QWORD PTR [rip+0xb7ca]        # 4136c8 <__bss_start@@Base+0x1858>
  407efe:	test   eax,eax
  407f00:	je     407f50 <UnityDefaultTestRun@@Base+0xa0>
  407f02:	mov    rax,0x413c00
  407f09:	lea    rdi,[rax+0x50]
  407f0d:	call   403320 <_setjmp@plt>
  407f12:	endbr64 
  407f16:	inc    QWORD PTR [rip+0xb7cb]        # 4136e8 <__bss_start@@Base+0x1878>
  407f1d:	test   eax,eax
  407f1f:	jne    407f36 <UnityDefaultTestRun@@Base+0x86>
  407f21:	mov    rax,0x413c00
  407f28:	inc    QWORD PTR [rip+0xb7c1]        # 4136f0 <__bss_start@@Base+0x1880>
  407f2f:	cmp    QWORD PTR [rax+0x48],0x0
  407f34:	je     407f78 <UnityDefaultTestRun@@Base+0xc8>
  407f36:	call   405f80 <UnityConcludeTest@@Base>
  407f3b:	inc    QWORD PTR [rip+0xb7c6]        # 413708 <__bss_start@@Base+0x1898>
  407f42:	add    rsp,0x18
  407f46:	ret    
  407f47:	nop    WORD PTR [rax+rax*1+0x0]
  407f50:	inc    QWORD PTR [rip+0xb779]        # 4136d0 <__bss_start@@Base+0x1860>
  407f57:	call   407e90 <setUp@@Base>
  407f5c:	inc    QWORD PTR [rip+0xb775]        # 4136d8 <__bss_start@@Base+0x1868>
  407f63:	mov    rax,QWORD PTR [rsp+0x8]
  407f68:	call   rax
  407f6a:	inc    QWORD PTR [rip+0xb76f]        # 4136e0 <__bss_start@@Base+0x1870>
  407f71:	jmp    407f02 <UnityDefaultTestRun@@Base+0x52>
  407f73:	nop    DWORD PTR [rax+rax*1+0x0]
  407f78:	inc    QWORD PTR [rip+0xb779]        # 4136f8 <__bss_start@@Base+0x1888>
  407f7f:	call   407ea0 <tearDown@@Base>
  407f84:	inc    QWORD PTR [rip+0xb775]        # 413700 <__bss_start@@Base+0x1890>
  407f8b:	jmp    407f36 <UnityDefaultTestRun@@Base+0x86>
  407f8d:	nop    DWORD PTR [rax]

0000000000407f90 <UnityBegin@@Base>:
  407f90:	endbr64 
  407f94:	mov    rax,0x413c00
  407f9b:	inc    QWORD PTR [rip+0xb76e]        # 413710 <__bss_start@@Base+0x18a0>
  407fa2:	mov    QWORD PTR [rax],rdi
  407fa5:	mov    QWORD PTR [rax+0x8],0x0
  407fad:	mov    QWORD PTR [rax+0x20],0x0
  407fb5:	mov    QWORD PTR [rax+0x28],0x0
  407fbd:	mov    QWORD PTR [rax+0x30],0x0
  407fc5:	mov    QWORD PTR [rax+0x38],0x0
  407fcd:	mov    QWORD PTR [rax+0x40],0x0
  407fd5:	mov    QWORD PTR [rax+0x48],0x0
  407fdd:	mov    QWORD PTR [rax+0x10],0x0
  407fe5:	mov    QWORD PTR [rax+0x18],0x0
  407fed:	ret    
  407fee:	xchg   ax,ax

0000000000407ff0 <UnityEnd@@Base>:
  407ff0:	endbr64 
  407ff4:	push   rbp
  407ff5:	mov    edi,0xa
  407ffa:	push   rbx
  407ffb:	sub    rsp,0x8
  407fff:	mov    rbp,QWORD PTR [rip+0x7fda]        # 40ffe0 <stdout@GLIBC_2.2.5>
  408006:	inc    QWORD PTR [rip+0xb713]        # 413720 <__bss_start@@Base+0x18b0>
  40800d:	mov    rsi,QWORD PTR [rbp+0x0]
  408011:	call   403330 <putc@plt>
  408016:	mov    rdi,0x40c490
  40801d:	inc    QWORD PTR [rip+0xb704]        # 413728 <__bss_start@@Base+0x18b8>
  408024:	call   405970 <UnityPrint@@Base>
  408029:	mov    rsi,QWORD PTR [rbp+0x0]
  40802d:	mov    edi,0xa
  408032:	inc    QWORD PTR [rip+0xb6f7]        # 413730 <__bss_start@@Base+0x18c0>
  408039:	call   403330 <putc@plt>
  40803e:	mov    rbx,0x413c00
  408045:	inc    QWORD PTR [rip+0xb6ec]        # 413738 <__bss_start@@Base+0x18c8>
  40804c:	mov    rdi,QWORD PTR [rbx+0x28]
  408050:	call   405470 <UnityPrintNumber@@Base>
  408055:	mov    rdi,0x40c480
  40805c:	inc    QWORD PTR [rip+0xb6dd]        # 413740 <__bss_start@@Base+0x18d0>
  408063:	call   405970 <UnityPrint@@Base>
  408068:	mov    rdi,QWORD PTR [rbx+0x30]
  40806c:	inc    QWORD PTR [rip+0xb6d5]        # 413748 <__bss_start@@Base+0x18d8>
  408073:	call   405470 <UnityPrintNumber@@Base>
  408078:	mov    rdi,0x40c470
  40807f:	inc    QWORD PTR [rip+0xb6ca]        # 413750 <__bss_start@@Base+0x18e0>
  408086:	call   405970 <UnityPrint@@Base>
  40808b:	mov    rdi,QWORD PTR [rbx+0x38]
  40808f:	inc    QWORD PTR [rip+0xb6c2]        # 413758 <__bss_start@@Base+0x18e8>
  408096:	call   405470 <UnityPrintNumber@@Base>
  40809b:	mov    rdi,0x40c460
  4080a2:	inc    QWORD PTR [rip+0xb6b7]        # 413760 <__bss_start@@Base+0x18f0>
  4080a9:	call   405970 <UnityPrint@@Base>
  4080ae:	mov    rsi,QWORD PTR [rbp+0x0]
  4080b2:	mov    edi,0xa
  4080b7:	inc    QWORD PTR [rip+0xb6aa]        # 413768 <__bss_start@@Base+0x18f8>
  4080be:	call   403330 <putc@plt>
  4080c3:	cmp    QWORD PTR [rbx+0x30],0x0
  4080c8:	jne    408100 <UnityEnd@@Base+0x110>
  4080ca:	inc    QWORD PTR [rip+0xb69f]        # 413770 <__bss_start@@Base+0x1900>
  4080d1:	call   405f50 <UnityPrintOk@@Base>
  4080d6:	inc    QWORD PTR [rip+0xb6a3]        # 413780 <__bss_start@@Base+0x1910>
  4080dd:	mov    rsi,QWORD PTR [rbp+0x0]
  4080e1:	mov    edi,0xa
  4080e6:	call   403330 <putc@plt>
  4080eb:	mov    rax,QWORD PTR [rbx+0x30]
  4080ef:	inc    QWORD PTR [rip+0xb69a]        # 413790 <__bss_start@@Base+0x1920>
  4080f6:	add    rsp,0x8
  4080fa:	pop    rbx
  4080fb:	pop    rbp
  4080fc:	ret    
  4080fd:	nop    DWORD PTR [rax]
  408100:	inc    QWORD PTR [rip+0xb671]        # 413778 <__bss_start@@Base+0x1908>
  408107:	call   405f20 <UnityPrintFail@@Base>
  40810c:	inc    QWORD PTR [rip+0xb675]        # 413788 <__bss_start@@Base+0x1918>
  408113:	jmp    4080dd <UnityEnd@@Base+0xed>
  408115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40811f:	nop

0000000000408120 <init_token_int_type@@Base>:
  408120:	endbr64 
  408124:	inc    QWORD PTR [rip+0xb675]        # 4137a0 <__bss_start@@Base+0x1930>
  40812b:	mov    DWORD PTR [rdi],0x0
  408131:	ret    
  408132:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40813d:	nop    DWORD PTR [rax]

0000000000408140 <init_token_int_value@@Base>:
  408140:	endbr64 
  408144:	inc    QWORD PTR [rip+0xb65d]        # 4137a8 <__bss_start@@Base+0x1938>
  40814b:	mov    DWORD PTR [rdi],0x1
  408151:	mov    DWORD PTR [rdi+0x4],esi
  408154:	ret    
  408155:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000408160 <init_token_function@@Base>:
  408160:	endbr64 
  408164:	inc    QWORD PTR [rip+0xb645]        # 4137b0 <__bss_start@@Base+0x1940>
  40816b:	mov    DWORD PTR [rdi],0x2
  408171:	mov    QWORD PTR [rdi+0x8],rsi
  408175:	ret    
  408176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408180 <init_token_opar@@Base>:
  408180:	endbr64 
  408184:	inc    QWORD PTR [rip+0xb62d]        # 4137b8 <__bss_start@@Base+0x1948>
  40818b:	mov    DWORD PTR [rdi],0x3
  408191:	ret    
  408192:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40819d:	nop    DWORD PTR [rax]

00000000004081a0 <init_token_cpar@@Base>:
  4081a0:	endbr64 
  4081a4:	inc    QWORD PTR [rip+0xb615]        # 4137c0 <__bss_start@@Base+0x1950>
  4081ab:	mov    DWORD PTR [rdi],0x4
  4081b1:	ret    
  4081b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4081bd:	nop    DWORD PTR [rax]

00000000004081c0 <init_token_obra@@Base>:
  4081c0:	endbr64 
  4081c4:	inc    QWORD PTR [rip+0xb5fd]        # 4137c8 <__bss_start@@Base+0x1958>
  4081cb:	mov    DWORD PTR [rdi],0x5
  4081d1:	ret    
  4081d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4081dd:	nop    DWORD PTR [rax]

00000000004081e0 <init_token_cbra@@Base>:
  4081e0:	endbr64 
  4081e4:	inc    QWORD PTR [rip+0xb5e5]        # 4137d0 <__bss_start@@Base+0x1960>
  4081eb:	mov    DWORD PTR [rdi],0x6
  4081f1:	ret    
  4081f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4081fd:	nop    DWORD PTR [rax]

0000000000408200 <init_token_return@@Base>:
  408200:	endbr64 
  408204:	inc    QWORD PTR [rip+0xb5cd]        # 4137d8 <__bss_start@@Base+0x1968>
  40820b:	mov    DWORD PTR [rdi],0x7
  408211:	ret    
  408212:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40821d:	nop    DWORD PTR [rax]

0000000000408220 <init_token_semicolon@@Base>:
  408220:	endbr64 
  408224:	inc    QWORD PTR [rip+0xb5b5]        # 4137e0 <__bss_start@@Base+0x1970>
  40822b:	mov    DWORD PTR [rdi],0x8
  408231:	ret    
  408232:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40823d:	nop    DWORD PTR [rax]

0000000000408240 <init_token_eof@@Base>:
  408240:	endbr64 
  408244:	inc    QWORD PTR [rip+0xb59d]        # 4137e8 <__bss_start@@Base+0x1978>
  40824b:	mov    DWORD PTR [rdi],0x9
  408251:	ret    
  408252:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40825d:	nop    DWORD PTR [rax]

0000000000408260 <init_token_if@@Base>:
  408260:	endbr64 
  408264:	inc    QWORD PTR [rip+0xb585]        # 4137f0 <__bss_start@@Base+0x1980>
  40826b:	mov    DWORD PTR [rdi],0xa
  408271:	ret    
  408272:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40827d:	nop    DWORD PTR [rax]

0000000000408280 <init_token_else@@Base>:
  408280:	endbr64 
  408284:	inc    QWORD PTR [rip+0xb56d]        # 4137f8 <__bss_start@@Base+0x1988>
  40828b:	mov    DWORD PTR [rdi],0xb
  408291:	ret    
  408292:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40829d:	nop    DWORD PTR [rax]

00000000004082a0 <init_token_boolean_op@@Base>:
  4082a0:	endbr64 
  4082a4:	inc    QWORD PTR [rip+0xb555]        # 413800 <__bss_start@@Base+0x1990>
  4082ab:	mov    DWORD PTR [rdi],0xc
  4082b1:	mov    QWORD PTR [rdi+0x8],rsi
  4082b5:	ret    
  4082b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004082c0 <free_token_int_type@@Base>:
  4082c0:	endbr64 
  4082c4:	inc    QWORD PTR [rip+0xb53d]        # 413808 <__bss_start@@Base+0x1998>
  4082cb:	jmp    403230 <free@plt>

00000000004082d0 <free_token_int_value@@Base>:
  4082d0:	endbr64 
  4082d4:	inc    QWORD PTR [rip+0xb535]        # 413810 <__bss_start@@Base+0x19a0>
  4082db:	jmp    403230 <free@plt>

00000000004082e0 <free_token_function@@Base>:
  4082e0:	endbr64 
  4082e4:	inc    QWORD PTR [rip+0xb52d]        # 413818 <__bss_start@@Base+0x19a8>
  4082eb:	jmp    403230 <free@plt>

00000000004082f0 <free_token_opar@@Base>:
  4082f0:	endbr64 
  4082f4:	inc    QWORD PTR [rip+0xb525]        # 413820 <__bss_start@@Base+0x19b0>
  4082fb:	jmp    403230 <free@plt>

0000000000408300 <free_token_cpar@@Base>:
  408300:	endbr64 
  408304:	inc    QWORD PTR [rip+0xb51d]        # 413828 <__bss_start@@Base+0x19b8>
  40830b:	jmp    403230 <free@plt>

0000000000408310 <free_token_obra@@Base>:
  408310:	endbr64 
  408314:	inc    QWORD PTR [rip+0xb515]        # 413830 <__bss_start@@Base+0x19c0>
  40831b:	jmp    403230 <free@plt>

0000000000408320 <free_token_cbra@@Base>:
  408320:	endbr64 
  408324:	inc    QWORD PTR [rip+0xb50d]        # 413838 <__bss_start@@Base+0x19c8>
  40832b:	jmp    403230 <free@plt>

0000000000408330 <free_token_return@@Base>:
  408330:	endbr64 
  408334:	inc    QWORD PTR [rip+0xb505]        # 413840 <__bss_start@@Base+0x19d0>
  40833b:	jmp    403230 <free@plt>

0000000000408340 <free_token_semicolon@@Base>:
  408340:	endbr64 
  408344:	inc    QWORD PTR [rip+0xb4fd]        # 413848 <__bss_start@@Base+0x19d8>
  40834b:	jmp    403230 <free@plt>

0000000000408350 <free_token_eof@@Base>:
  408350:	endbr64 
  408354:	inc    QWORD PTR [rip+0xb4f5]        # 413850 <__bss_start@@Base+0x19e0>
  40835b:	jmp    403230 <free@plt>

0000000000408360 <free_token_if@@Base>:
  408360:	endbr64 
  408364:	inc    QWORD PTR [rip+0xb4ed]        # 413858 <__bss_start@@Base+0x19e8>
  40836b:	jmp    403230 <free@plt>

0000000000408370 <free_token_else@@Base>:
  408370:	endbr64 
  408374:	inc    QWORD PTR [rip+0xb4e5]        # 413860 <__bss_start@@Base+0x19f0>
  40837b:	jmp    403230 <free@plt>

0000000000408380 <free_token_boolean_op@@Base>:
  408380:	endbr64 
  408384:	push   rbx
  408385:	mov    rbx,rdi
  408388:	mov    rdi,QWORD PTR [rdi+0x8]
  40838c:	test   rdi,rdi
  40838f:	je     4083b0 <free_token_boolean_op@@Base+0x30>
  408391:	inc    QWORD PTR [rip+0xb4d8]        # 413870 <__bss_start@@Base+0x1a00>
  408398:	call   403230 <free@plt>
  40839d:	mov    rdi,rbx
  4083a0:	pop    rbx
  4083a1:	jmp    403230 <free@plt>
  4083a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083b0:	inc    QWORD PTR [rip+0xb4c1]        # 413878 <__bss_start@@Base+0x1a08>
  4083b7:	mov    rdi,rbx
  4083ba:	pop    rbx
  4083bb:	jmp    403230 <free@plt>

00000000004083c0 <init_lexer@@Base>:
  4083c0:	endbr64 
  4083c4:	inc    QWORD PTR [rip+0xb4b5]        # 413880 <__bss_start@@Base+0x1a10>
  4083cb:	mov    QWORD PTR [rdi],rsi
  4083ce:	mov    QWORD PTR [rdi+0x8],0x0
  4083d6:	mov    QWORD PTR [rdi+0x10],0x0
  4083de:	ret    
  4083df:	nop

00000000004083e0 <free_stack_base@@Base>:
  4083e0:	endbr64 
  4083e4:	inc    QWORD PTR [rip+0xb4bd]        # 4138a8 <__bss_start@@Base+0x1a38>
  4083eb:	jmp    403230 <free@plt>

00000000004083f0 <destroy_lexer@@Base>:
  4083f0:	endbr64 
  4083f4:	mov    rdi,QWORD PTR [rdi+0x8]
  4083f8:	test   rdi,rdi
  4083fb:	je     408420 <destroy_lexer@@Base+0x30>
  4083fd:	sub    rsp,0x8
  408401:	inc    QWORD PTR [rip+0xb488]        # 413890 <__bss_start@@Base+0x1a20>
  408408:	call   4083e0 <free_stack_base@@Base>
  40840d:	inc    QWORD PTR [rip+0xb48c]        # 4138a0 <__bss_start@@Base+0x1a30>
  408414:	add    rsp,0x8
  408418:	ret    
  408419:	nop    DWORD PTR [rax+0x0]
  408420:	inc    QWORD PTR [rip+0xb471]        # 413898 <__bss_start@@Base+0x1a28>
  408427:	ret    
  408428:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408430 <push_back@@Base>:
  408430:	endbr64 
  408434:	push   rbp
  408435:	mov    rbp,rsi
  408438:	push   rbx
  408439:	mov    rbx,rdi
  40843c:	mov    edi,0x10
  408441:	sub    rsp,0x8
  408445:	inc    QWORD PTR [rip+0xb464]        # 4138b0 <__bss_start@@Base+0x1a40>
  40844c:	call   403370 <malloc@plt>
  408451:	mov    rdx,QWORD PTR [rbx+0x8]
  408455:	mov    QWORD PTR [rax+0x8],rbp
  408459:	mov    QWORD PTR [rax],rdx
  40845c:	mov    QWORD PTR [rbx+0x8],rax
  408460:	add    rsp,0x8
  408464:	pop    rbx
  408465:	pop    rbp
  408466:	ret    
  408467:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408470 <get_char@@Base>:
  408470:	endbr64 
  408474:	mov    rax,QWORD PTR [rdi+0x10]
  408478:	mov    rdx,QWORD PTR [rdi]
  40847b:	lea    rcx,[rax+0x1]
  40847f:	mov    QWORD PTR [rdi+0x10],rcx
  408483:	inc    QWORD PTR [rip+0xb42e]        # 4138b8 <__bss_start@@Base+0x1a48>
  40848a:	movzx  eax,BYTE PTR [rdx+rax*1]
  40848e:	ret    
  40848f:	nop

0000000000408490 <push_back_chars@@Base>:
  408490:	endbr64 
  408494:	mov    rax,QWORD PTR [rdi+0x10]
  408498:	cmp    rax,rsi
  40849b:	jb     4084ac <push_back_chars@@Base+0x1c>
  40849d:	sub    rax,rsi
  4084a0:	inc    QWORD PTR [rip+0xb419]        # 4138c0 <__bss_start@@Base+0x1a50>
  4084a7:	mov    QWORD PTR [rdi+0x10],rax
  4084ab:	ret    
  4084ac:	push   rax
  4084ad:	lea    rdi,[rip+0x42e4]        # 40c798 <UnityStrOk@@Base+0x11c>
  4084b4:	mov    edx,0x20
  4084b9:	mov    rax,QWORD PTR [rip+0x7b38]        # 40fff8 <stderr@GLIBC_2.2.5>
  4084c0:	mov    esi,0x1
  4084c5:	mov    rcx,QWORD PTR [rax]
  4084c8:	inc    QWORD PTR [rip+0xb3f9]        # 4138c8 <__bss_start@@Base+0x1a58>
  4084cf:	call   4033f0 <fwrite@plt>
  4084d4:	mov    edi,0x1
  4084d9:	inc    QWORD PTR [rip+0xb3f0]        # 4138d0 <__bss_start@@Base+0x1a60>
  4084e0:	call   4033e0 <exit@plt>
  4084e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004084f0 <push_back_one_char@@Base>:
  4084f0:	endbr64 
  4084f4:	sub    rsp,0x8
  4084f8:	mov    esi,0x1
  4084fd:	inc    QWORD PTR [rip+0xb3dc]        # 4138e0 <__bss_start@@Base+0x1a70>
  408504:	call   408490 <push_back_chars@@Base>
  408509:	inc    QWORD PTR [rip+0xb3d8]        # 4138e8 <__bss_start@@Base+0x1a78>
  408510:	add    rsp,0x8
  408514:	ret    
  408515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000408520 <next@@Base>:
  408520:	endbr64 
  408524:	push   r13
  408526:	push   r12
  408528:	push   rbp
  408529:	push   rbx
  40852a:	mov    rbx,rdi
  40852d:	sub    rsp,0x218
  408534:	mov    rdi,QWORD PTR [rdi+0x8]
  408538:	mov    rax,QWORD PTR fs:0x28
  408541:	mov    QWORD PTR [rsp+0x208],rax
  408549:	xor    eax,eax
  40854b:	test   rdi,rdi
  40854e:	je     4085a0 <next@@Base+0x80>
  408550:	mov    rax,QWORD PTR [rdi]
  408553:	mov    rbp,QWORD PTR [rdi+0x8]
  408557:	mov    QWORD PTR [rbx+0x8],rax
  40855b:	mov    QWORD PTR [rdi+0x8],0x0
  408563:	inc    QWORD PTR [rip+0xb396]        # 413900 <__bss_start@@Base+0x1a90>
  40856a:	call   4083e0 <free_stack_base@@Base>
  40856f:	inc    QWORD PTR [rip+0xb39a]        # 413910 <__bss_start@@Base+0x1aa0>
  408576:	mov    rcx,QWORD PTR [rsp+0x208]
  40857e:	xor    rcx,QWORD PTR fs:0x28
  408587:	mov    rax,rbp
  40858a:	jne    408b0d <next@@Base+0x5ed>
  408590:	add    rsp,0x218
  408597:	pop    rbx
  408598:	pop    rbp
  408599:	pop    r12
  40859b:	pop    r13
  40859d:	ret    
  40859e:	xchg   ax,ax
  4085a0:	mov    rdi,rbx
  4085a3:	inc    QWORD PTR [rip+0xb35e]        # 413908 <__bss_start@@Base+0x1a98>
  4085aa:	call   408470 <get_char@@Base>
  4085af:	test   al,al
  4085b1:	je     408720 <next@@Base+0x200>
  4085b7:	cmp    al,0x9
  4085b9:	je     408750 <next@@Base+0x230>
  4085bf:	cmp    al,0x20
  4085c1:	je     408750 <next@@Base+0x230>
  4085c7:	cmp    al,0xa
  4085c9:	je     4086f8 <next@@Base+0x1d8>
  4085cf:	cmp    al,0x30
  4085d1:	je     408a1b <next@@Base+0x4fb>
  4085d7:	lea    edx,[rax-0x31]
  4085da:	cmp    dl,0x8
  4085dd:	jbe    408760 <next@@Base+0x240>
  4085e3:	cmp    al,0x28
  4085e5:	je     408a95 <next@@Base+0x575>
  4085eb:	cmp    al,0x29
  4085ed:	je     408a6d <next@@Base+0x54d>
  4085f3:	cmp    al,0x7b
  4085f5:	je     408ae5 <next@@Base+0x5c5>
  4085fb:	cmp    al,0x7d
  4085fd:	je     408abd <next@@Base+0x59d>
  408603:	cmp    al,0x3b
  408605:	je     408a45 <next@@Base+0x525>
  40860b:	cmp    al,0x65
  40860d:	je     40881e <next@@Base+0x2fe>
  408613:	cmp    al,0x69
  408615:	je     4088af <next@@Base+0x38f>
  40861b:	cmp    al,0x6d
  40861d:	je     40895c <next@@Base+0x43c>
  408623:	cmp    al,0x72
  408625:	jne    408b12 <next@@Base+0x5f2>
  40862b:	mov    rdi,rbx
  40862e:	inc    QWORD PTR [rip+0xb3bb]        # 4139f0 <__bss_start@@Base+0x1b80>
  408635:	mov    BYTE PTR [rsp],0x72
  408639:	call   408470 <get_char@@Base>
  40863e:	inc    QWORD PTR [rip+0xb3b3]        # 4139f8 <__bss_start@@Base+0x1b88>
  408645:	inc    QWORD PTR [rip+0xb584]        # 413bd0 <__bss_start@@Base+0x1d60>
  40864c:	test   al,al
  40864e:	je     408720 <next@@Base+0x200>
  408654:	inc    QWORD PTR [rip+0xb2d5]        # 413930 <__bss_start@@Base+0x1ac0>
  40865b:	cmp    al,0x65
  40865d:	jne    408b97 <next@@Base+0x677>
  408663:	mov    rdi,rbx
  408666:	mov    BYTE PTR [rsp+0x1],0x65
  40866b:	call   408470 <get_char@@Base>
  408670:	inc    QWORD PTR [rip+0xb4e1]        # 413b58 <__bss_start@@Base+0x1ce8>
  408677:	cmp    al,0x74
  408679:	jne    408e5c <next@@Base+0x93c>
  40867f:	mov    rdi,rbx
  408682:	mov    BYTE PTR [rsp+0x2],0x74
  408687:	call   408470 <get_char@@Base>
  40868c:	inc    QWORD PTR [rip+0xb4d5]        # 413b68 <__bss_start@@Base+0x1cf8>
  408693:	cmp    al,0x75
  408695:	jne    408e4b <next@@Base+0x92b>
  40869b:	mov    rdi,rbx
  40869e:	mov    BYTE PTR [rsp+0x3],0x75
  4086a3:	call   408470 <get_char@@Base>
  4086a8:	cmp    al,0x72
  4086aa:	jne    408e3a <next@@Base+0x91a>
  4086b0:	mov    rdi,rbx
  4086b3:	inc    QWORD PTR [rip+0xb4c6]        # 413b80 <__bss_start@@Base+0x1d10>
  4086ba:	mov    BYTE PTR [rsp+0x4],0x72
  4086bf:	call   408470 <get_char@@Base>
  4086c4:	inc    QWORD PTR [rip+0xb4bd]        # 413b88 <__bss_start@@Base+0x1d18>
  4086cb:	cmp    al,0x6e
  4086cd:	jne    408e29 <next@@Base+0x909>
  4086d3:	mov    edi,0x4
  4086d8:	call   403370 <malloc@plt>
  4086dd:	mov    rdi,rax
  4086e0:	mov    rbp,rax
  4086e3:	call   408200 <init_token_return@@Base>
  4086e8:	inc    QWORD PTR [rip+0xb4a9]        # 413b98 <__bss_start@@Base+0x1d28>
  4086ef:	jmp    408576 <next@@Base+0x56>
  4086f4:	nop    DWORD PTR [rax+0x0]
  4086f8:	inc    QWORD PTR [rip+0xb249]        # 413948 <__bss_start@@Base+0x1ad8>
  4086ff:	mov    rdi,rbx
  408702:	call   408470 <get_char@@Base>
  408707:	inc    QWORD PTR [rip+0xb4c2]        # 413bd0 <__bss_start@@Base+0x1d60>
  40870e:	test   al,al
  408710:	jne    4085b7 <next@@Base+0x97>
  408716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408720:	mov    edi,0x4
  408725:	inc    QWORD PTR [rip+0xb4ac]        # 413bd8 <__bss_start@@Base+0x1d68>
  40872c:	call   403370 <malloc@plt>
  408731:	mov    rdi,rax
  408734:	mov    rbp,rax
  408737:	call   408240 <init_token_eof@@Base>
  40873c:	inc    QWORD PTR [rip+0xb49d]        # 413be0 <__bss_start@@Base+0x1d70>
  408743:	jmp    408576 <next@@Base+0x56>
  408748:	nop    DWORD PTR [rax+rax*1+0x0]
  408750:	inc    QWORD PTR [rip+0xb1e9]        # 413940 <__bss_start@@Base+0x1ad0>
  408757:	jmp    4086ff <next@@Base+0x1df>
  408759:	nop    DWORD PTR [rax+0x0]
  408760:	mov    rdi,rbx
  408763:	inc    QWORD PTR [rip+0xb1f6]        # 413960 <__bss_start@@Base+0x1af0>
  40876a:	mov    BYTE PTR [rsp],al
  40876d:	call   408470 <get_char@@Base>
  408772:	inc    QWORD PTR [rip+0xb1ef]        # 413968 <__bss_start@@Base+0x1af8>
  408779:	inc    QWORD PTR [rip+0xb450]        # 413bd0 <__bss_start@@Base+0x1d60>
  408780:	test   al,al
  408782:	je     408720 <next@@Base+0x200>
  408784:	lea    edx,[rax-0x30]
  408787:	inc    QWORD PTR [rip+0xb192]        # 413920 <__bss_start@@Base+0x1ab0>
  40878e:	mov    ebp,0x2
  408793:	lea    r13,[rsp-0x1]
  408798:	mov    r12d,0x1
  40879e:	cmp    dl,0x9
  4087a1:	ja     4087ca <next@@Base+0x2aa>
  4087a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4087a8:	mov    rdi,rbx
  4087ab:	mov    BYTE PTR [r13+rbp*1+0x0],al
  4087b0:	inc    QWORD PTR [rip+0xb309]        # 413ac0 <__bss_start@@Base+0x1c50>
  4087b7:	call   408470 <get_char@@Base>
  4087bc:	lea    edx,[rax-0x30]
  4087bf:	movsxd r12,ebp
  4087c2:	inc    rbp
  4087c5:	cmp    dl,0x9
  4087c8:	jbe    4087a8 <next@@Base+0x288>
  4087ca:	mov    rdi,rbx
  4087cd:	inc    QWORD PTR [rip+0xb2f4]        # 413ac8 <__bss_start@@Base+0x1c58>
  4087d4:	call   4084f0 <push_back_one_char@@Base>
  4087d9:	mov    edi,0x8
  4087de:	inc    QWORD PTR [rip+0xb2eb]        # 413ad0 <__bss_start@@Base+0x1c60>
  4087e5:	mov    BYTE PTR [rsp+r12*1],0x0
  4087ea:	call   403370 <malloc@plt>
  4087ef:	mov    rdi,rsp
  4087f2:	mov    edx,0xa
  4087f7:	xor    esi,esi
  4087f9:	mov    rbp,rax
  4087fc:	call   403350 <strtol@plt>
  408801:	mov    esi,eax
  408803:	mov    rdi,rbp
  408806:	inc    QWORD PTR [rip+0xb2cb]        # 413ad8 <__bss_start@@Base+0x1c68>
  40880d:	call   408140 <init_token_int_value@@Base>
  408812:	inc    QWORD PTR [rip+0xb2c7]        # 413ae0 <__bss_start@@Base+0x1c70>
  408819:	jmp    408576 <next@@Base+0x56>
  40881e:	mov    rdi,rbx
  408821:	inc    QWORD PTR [rip+0xb198]        # 4139c0 <__bss_start@@Base+0x1b50>
  408828:	mov    BYTE PTR [rsp],0x65
  40882c:	call   408470 <get_char@@Base>
  408831:	inc    QWORD PTR [rip+0xb190]        # 4139c8 <__bss_start@@Base+0x1b58>
  408838:	inc    QWORD PTR [rip+0xb391]        # 413bd0 <__bss_start@@Base+0x1d60>
  40883f:	test   al,al
  408841:	je     408720 <next@@Base+0x200>
  408847:	inc    QWORD PTR [rip+0xb0ea]        # 413938 <__bss_start@@Base+0x1ac8>
  40884e:	cmp    al,0x6c
  408850:	jne    408e7e <next@@Base+0x95e>
  408856:	mov    rdi,rbx
  408859:	mov    BYTE PTR [rsp+0x1],0x6c
  40885e:	call   408470 <get_char@@Base>
  408863:	inc    QWORD PTR [rip+0xb33e]        # 413ba8 <__bss_start@@Base+0x1d38>
  40886a:	cmp    al,0x73
  40886c:	jne    408e6d <next@@Base+0x94d>
  408872:	mov    rdi,rbx
  408875:	mov    BYTE PTR [rsp+0x2],0x73
  40887a:	call   408470 <get_char@@Base>
  40887f:	inc    QWORD PTR [rip+0xb332]        # 413bb8 <__bss_start@@Base+0x1d48>
  408886:	cmp    al,0x65
  408888:	jne    408de5 <next@@Base+0x8c5>
  40888e:	mov    edi,0x4
  408893:	call   403370 <malloc@plt>
  408898:	mov    rdi,rax
  40889b:	mov    rbp,rax
  40889e:	call   408280 <init_token_else@@Base>
  4088a3:	inc    QWORD PTR [rip+0xb31e]        # 413bc8 <__bss_start@@Base+0x1d58>
  4088aa:	jmp    408576 <next@@Base+0x56>
  4088af:	mov    rdi,rbx
  4088b2:	inc    QWORD PTR [rip+0xb117]        # 4139d0 <__bss_start@@Base+0x1b60>
  4088b9:	mov    BYTE PTR [rsp],0x69
  4088bd:	call   408470 <get_char@@Base>
  4088c2:	inc    QWORD PTR [rip+0xb10f]        # 4139d8 <__bss_start@@Base+0x1b68>
  4088c9:	inc    QWORD PTR [rip+0xb300]        # 413bd0 <__bss_start@@Base+0x1d60>
  4088d0:	test   al,al
  4088d2:	je     408720 <next@@Base+0x200>
  4088d8:	cmp    al,0x66
  4088da:	jne    408910 <next@@Base+0x3f0>
  4088dc:	mov    edx,0x66
  4088e1:	mov    edi,0x4
  4088e6:	mov    WORD PTR [rsp+0x1],dx
  4088eb:	inc    QWORD PTR [rip+0xb1fe]        # 413af0 <__bss_start@@Base+0x1c80>
  4088f2:	call   403370 <malloc@plt>
  4088f7:	mov    rdi,rax
  4088fa:	mov    rbp,rax
  4088fd:	call   408260 <init_token_if@@Base>
  408902:	inc    QWORD PTR [rip+0xb20f]        # 413b18 <__bss_start@@Base+0x1ca8>
  408909:	jmp    408576 <next@@Base+0x56>
  40890e:	xchg   ax,ax
  408910:	cmp    al,0x6e
  408912:	jne    408ea0 <next@@Base+0x980>
  408918:	mov    rdi,rbx
  40891b:	inc    QWORD PTR [rip+0xb1d6]        # 413af8 <__bss_start@@Base+0x1c88>
  408922:	mov    BYTE PTR [rsp+0x1],0x6e
  408927:	call   408470 <get_char@@Base>
  40892c:	inc    QWORD PTR [rip+0xb1cd]        # 413b00 <__bss_start@@Base+0x1c90>
  408933:	cmp    al,0x74
  408935:	jne    408e8f <next@@Base+0x96f>
  40893b:	mov    edi,0x4
  408940:	call   403370 <malloc@plt>
  408945:	mov    rdi,rax
  408948:	mov    rbp,rax
  40894b:	call   408120 <init_token_int_type@@Base>
  408950:	inc    QWORD PTR [rip+0xb1b9]        # 413b10 <__bss_start@@Base+0x1ca0>
  408957:	jmp    408576 <next@@Base+0x56>
  40895c:	mov    rdi,rbx
  40895f:	inc    QWORD PTR [rip+0xb07a]        # 4139e0 <__bss_start@@Base+0x1b70>
  408966:	mov    BYTE PTR [rsp],0x6d
  40896a:	call   408470 <get_char@@Base>
  40896f:	inc    QWORD PTR [rip+0xb072]        # 4139e8 <__bss_start@@Base+0x1b78>
  408976:	inc    QWORD PTR [rip+0xb253]        # 413bd0 <__bss_start@@Base+0x1d60>
  40897d:	test   al,al
  40897f:	je     408720 <next@@Base+0x200>
  408985:	inc    QWORD PTR [rip+0xaf9c]        # 413928 <__bss_start@@Base+0x1ab8>
  40898c:	cmp    al,0x61
  40898e:	jne    408e18 <next@@Base+0x8f8>
  408994:	mov    rdi,rbx
  408997:	mov    BYTE PTR [rsp+0x1],0x61
  40899c:	call   408470 <get_char@@Base>
  4089a1:	inc    QWORD PTR [rip+0xb180]        # 413b28 <__bss_start@@Base+0x1cb8>
  4089a8:	cmp    al,0x69
  4089aa:	jne    408e07 <next@@Base+0x8e7>
  4089b0:	mov    rdi,rbx
  4089b3:	mov    BYTE PTR [rsp+0x2],0x69
  4089b8:	call   408470 <get_char@@Base>
  4089bd:	inc    QWORD PTR [rip+0xb174]        # 413b38 <__bss_start@@Base+0x1cc8>
  4089c4:	cmp    al,0x6e
  4089c6:	jne    408df6 <next@@Base+0x8d6>
  4089cc:	mov    eax,0x6e
  4089d1:	mov    edi,0x5
  4089d6:	mov    WORD PTR [rsp+0x3],ax
  4089db:	call   403370 <malloc@plt>
  4089e0:	mov    rbx,rax
  4089e3:	mov    rsi,rsp
  4089e6:	mov    edx,0x4
  4089eb:	mov    rdi,rax
  4089ee:	call   403270 <strncpy@plt>
  4089f3:	mov    BYTE PTR [rbx+0x4],0x0
  4089f7:	mov    edi,0x10
  4089fc:	call   403370 <malloc@plt>
  408a01:	mov    rdi,rax
  408a04:	mov    rsi,rbx
  408a07:	mov    rbp,rax
  408a0a:	call   408160 <init_token_function@@Base>
  408a0f:	inc    QWORD PTR [rip+0xb132]        # 413b48 <__bss_start@@Base+0x1cd8>
  408a16:	jmp    408576 <next@@Base+0x56>
  408a1b:	mov    edi,0x8
  408a20:	inc    QWORD PTR [rip+0xaf29]        # 413950 <__bss_start@@Base+0x1ae0>
  408a27:	call   403370 <malloc@plt>
  408a2c:	mov    rdi,rax
  408a2f:	xor    esi,esi
  408a31:	mov    rbp,rax
  408a34:	call   408140 <init_token_int_value@@Base>
  408a39:	inc    QWORD PTR [rip+0xaf18]        # 413958 <__bss_start@@Base+0x1ae8>
  408a40:	jmp    408576 <next@@Base+0x56>
  408a45:	mov    edi,0x4
  408a4a:	inc    QWORD PTR [rip+0xaf5f]        # 4139b0 <__bss_start@@Base+0x1b40>
  408a51:	call   403370 <malloc@plt>
  408a56:	mov    rdi,rax
  408a59:	mov    rbp,rax
  408a5c:	call   408220 <init_token_semicolon@@Base>
  408a61:	inc    QWORD PTR [rip+0xaf50]        # 4139b8 <__bss_start@@Base+0x1b48>
  408a68:	jmp    408576 <next@@Base+0x56>
  408a6d:	mov    edi,0x4
  408a72:	inc    QWORD PTR [rip+0xaf07]        # 413980 <__bss_start@@Base+0x1b10>
  408a79:	call   403370 <malloc@plt>
  408a7e:	mov    rdi,rax
  408a81:	mov    rbp,rax
  408a84:	call   4081a0 <init_token_cpar@@Base>
  408a89:	inc    QWORD PTR [rip+0xaef8]        # 413988 <__bss_start@@Base+0x1b18>
  408a90:	jmp    408576 <next@@Base+0x56>
  408a95:	mov    edi,0x4
  408a9a:	inc    QWORD PTR [rip+0xaecf]        # 413970 <__bss_start@@Base+0x1b00>
  408aa1:	call   403370 <malloc@plt>
  408aa6:	mov    rdi,rax
  408aa9:	mov    rbp,rax
  408aac:	call   408180 <init_token_opar@@Base>
  408ab1:	inc    QWORD PTR [rip+0xaec0]        # 413978 <__bss_start@@Base+0x1b08>
  408ab8:	jmp    408576 <next@@Base+0x56>
  408abd:	mov    edi,0x4
  408ac2:	inc    QWORD PTR [rip+0xaed7]        # 4139a0 <__bss_start@@Base+0x1b30>
  408ac9:	call   403370 <malloc@plt>
  408ace:	mov    rdi,rax
  408ad1:	mov    rbp,rax
  408ad4:	call   4081e0 <init_token_cbra@@Base>
  408ad9:	inc    QWORD PTR [rip+0xaec8]        # 4139a8 <__bss_start@@Base+0x1b38>
  408ae0:	jmp    408576 <next@@Base+0x56>
  408ae5:	mov    edi,0x4
  408aea:	inc    QWORD PTR [rip+0xae9f]        # 413990 <__bss_start@@Base+0x1b20>
  408af1:	call   403370 <malloc@plt>
  408af6:	mov    rdi,rax
  408af9:	mov    rbp,rax
  408afc:	call   4081c0 <init_token_obra@@Base>
  408b01:	inc    QWORD PTR [rip+0xae90]        # 413998 <__bss_start@@Base+0x1b28>
  408b08:	jmp    408576 <next@@Base+0x56>
  408b0d:	call   4032f0 <__stack_chk_fail@plt>
  408b12:	cmp    al,0x21
  408b14:	je     408d3a <next@@Base+0x81a>
  408b1a:	mov    edx,eax
  408b1c:	and    edx,0xfffffffd
  408b1f:	cmp    dl,0x3c
  408b22:	je     408ccd <next@@Base+0x7ad>
  408b28:	cmp    al,0x3d
  408b2a:	je     408c50 <next@@Base+0x730>
  408b30:	inc    QWORD PTR [rip+0xaf21]        # 413a58 <__bss_start@@Base+0x1be8>
  408b37:	cmp    al,0x7c
  408b39:	je     408bf1 <next@@Base+0x6d1>
  408b3f:	cmp    al,0x26
  408b41:	jne    408bb9 <next@@Base+0x699>
  408b43:	mov    rdi,rbx
  408b46:	mov    BYTE PTR [rsp],0x26
  408b4a:	call   408470 <get_char@@Base>
  408b4f:	mov    edi,0x10
  408b54:	mov    ebx,eax
  408b56:	inc    QWORD PTR [rip+0xaf43]        # 413aa0 <__bss_start@@Base+0x1c30>
  408b5d:	call   403370 <malloc@plt>
  408b62:	mov    rbp,rax
  408b65:	cmp    bl,0x26
  408b68:	jne    408ba8 <next@@Base+0x688>
  408b6a:	mov    edi,0x3
  408b6f:	call   403370 <malloc@plt>
  408b74:	movzx  edx,BYTE PTR [rsp]
  408b78:	mov    WORD PTR [rax+0x1],0x26
  408b7e:	mov    BYTE PTR [rax],dl
  408b80:	mov    rsi,rax
  408b83:	mov    rdi,rbp
  408b86:	call   4082a0 <init_token_boolean_op@@Base>
  408b8b:	inc    QWORD PTR [rip+0xaf1e]        # 413ab0 <__bss_start@@Base+0x1c40>
  408b92:	jmp    408576 <next@@Base+0x56>
  408b97:	mov    edi,0x1
  408b9c:	inc    QWORD PTR [rip+0xafad]        # 413b50 <__bss_start@@Base+0x1ce0>
  408ba3:	call   4033e0 <exit@plt>
  408ba8:	mov    edi,0x1
  408bad:	inc    QWORD PTR [rip+0xaef4]        # 413aa8 <__bss_start@@Base+0x1c38>
  408bb4:	call   4033e0 <exit@plt>
  408bb9:	movsx  ecx,al
  408bbc:	mov    rax,QWORD PTR [rip+0x7435]        # 40fff8 <stderr@GLIBC_2.2.5>
  408bc3:	lea    rdx,[rip+0x3bf6]        # 40c7c0 <UnityStrOk@@Base+0x144>
  408bca:	mov    rdi,QWORD PTR [rax]
  408bcd:	mov    esi,0x1
  408bd2:	xor    eax,eax
  408bd4:	inc    QWORD PTR [rip+0xaebd]        # 413a98 <__bss_start@@Base+0x1c28>
  408bdb:	call   403400 <__fprintf_chk@plt>
  408be0:	mov    edi,0x1
  408be5:	inc    QWORD PTR [rip+0xaecc]        # 413ab8 <__bss_start@@Base+0x1c48>
  408bec:	call   4033e0 <exit@plt>
  408bf1:	mov    rdi,rbx
  408bf4:	inc    QWORD PTR [rip+0xae7d]        # 413a78 <__bss_start@@Base+0x1c08>
  408bfb:	mov    BYTE PTR [rsp],0x7c
  408bff:	call   408470 <get_char@@Base>
  408c04:	mov    edi,0x10
  408c09:	mov    ebx,eax
  408c0b:	inc    QWORD PTR [rip+0xae6e]        # 413a80 <__bss_start@@Base+0x1c10>
  408c12:	call   403370 <malloc@plt>
  408c17:	mov    rbp,rax
  408c1a:	cmp    bl,0x7c
  408c1d:	jne    408cab <next@@Base+0x78b>
  408c23:	mov    edi,0x3
  408c28:	call   403370 <malloc@plt>
  408c2d:	movzx  edx,BYTE PTR [rsp]
  408c31:	mov    WORD PTR [rax+0x1],0x7c
  408c37:	mov    BYTE PTR [rax],dl
  408c39:	mov    rsi,rax
  408c3c:	mov    rdi,rbp
  408c3f:	call   4082a0 <init_token_boolean_op@@Base>
  408c44:	inc    QWORD PTR [rip+0xae45]        # 413a90 <__bss_start@@Base+0x1c20>
  408c4b:	jmp    408576 <next@@Base+0x56>
  408c50:	mov    rdi,rbx
  408c53:	inc    QWORD PTR [rip+0xadf6]        # 413a50 <__bss_start@@Base+0x1be0>
  408c5a:	mov    BYTE PTR [rsp],0x3d
  408c5e:	call   408470 <get_char@@Base>
  408c63:	mov    edi,0x10
  408c68:	mov    ebx,eax
  408c6a:	inc    QWORD PTR [rip+0xadef]        # 413a60 <__bss_start@@Base+0x1bf0>
  408c71:	call   403370 <malloc@plt>
  408c76:	mov    rbp,rax
  408c79:	cmp    bl,0x3d
  408c7c:	jne    408cbc <next@@Base+0x79c>
  408c7e:	mov    edi,0x3
  408c83:	call   403370 <malloc@plt>
  408c88:	movzx  edx,BYTE PTR [rsp]
  408c8c:	mov    WORD PTR [rax+0x1],0x3d
  408c92:	mov    BYTE PTR [rax],dl
  408c94:	mov    rsi,rax
  408c97:	mov    rdi,rbp
  408c9a:	call   4082a0 <init_token_boolean_op@@Base>
  408c9f:	inc    QWORD PTR [rip+0xadca]        # 413a70 <__bss_start@@Base+0x1c00>
  408ca6:	jmp    408576 <next@@Base+0x56>
  408cab:	mov    edi,0x1
  408cb0:	inc    QWORD PTR [rip+0xadd1]        # 413a88 <__bss_start@@Base+0x1c18>
  408cb7:	call   4033e0 <exit@plt>
  408cbc:	mov    edi,0x1
  408cc1:	inc    QWORD PTR [rip+0xada0]        # 413a68 <__bss_start@@Base+0x1bf8>
  408cc8:	call   4033e0 <exit@plt>
  408ccd:	mov    rdi,rbx
  408cd0:	inc    QWORD PTR [rip+0xad51]        # 413a28 <__bss_start@@Base+0x1bb8>
  408cd7:	mov    BYTE PTR [rsp],al
  408cda:	call   408470 <get_char@@Base>
  408cdf:	mov    edi,0x10
  408ce4:	mov    r12d,eax
  408ce7:	inc    QWORD PTR [rip+0xad42]        # 413a30 <__bss_start@@Base+0x1bc0>
  408cee:	call   403370 <malloc@plt>
  408cf3:	mov    rbp,rax
  408cf6:	cmp    r12b,0x3d
  408cfa:	je     408da4 <next@@Base+0x884>
  408d00:	mov    rdi,rbx
  408d03:	call   4084f0 <push_back_one_char@@Base>
  408d08:	mov    edi,0x2
  408d0d:	inc    QWORD PTR [rip+0xad24]        # 413a38 <__bss_start@@Base+0x1bc8>
  408d14:	call   403370 <malloc@plt>
  408d19:	movzx  edx,BYTE PTR [rsp]
  408d1d:	mov    BYTE PTR [rax+0x1],0x0
  408d21:	mov    BYTE PTR [rax],dl
  408d23:	mov    rsi,rax
  408d26:	mov    rdi,rbp
  408d29:	call   4082a0 <init_token_boolean_op@@Base>
  408d2e:	inc    QWORD PTR [rip+0xad13]        # 413a48 <__bss_start@@Base+0x1bd8>
  408d35:	jmp    408576 <next@@Base+0x56>
  408d3a:	mov    rdi,rbx
  408d3d:	inc    QWORD PTR [rip+0xacbc]        # 413a00 <__bss_start@@Base+0x1b90>
  408d44:	mov    BYTE PTR [rsp],0x21
  408d48:	call   408470 <get_char@@Base>
  408d4d:	mov    edi,0x10
  408d52:	mov    r12d,eax
  408d55:	inc    QWORD PTR [rip+0xacac]        # 413a08 <__bss_start@@Base+0x1b98>
  408d5c:	call   403370 <malloc@plt>
  408d61:	mov    rbp,rax
  408d64:	cmp    r12b,0x3d
  408d68:	je     408dc6 <next@@Base+0x8a6>
  408d6a:	mov    rdi,rbx
  408d6d:	call   4084f0 <push_back_one_char@@Base>
  408d72:	mov    edi,0x2
  408d77:	inc    QWORD PTR [rip+0xac92]        # 413a10 <__bss_start@@Base+0x1ba0>
  408d7e:	call   403370 <malloc@plt>
  408d83:	movzx  edx,BYTE PTR [rsp]
  408d87:	mov    BYTE PTR [rax+0x1],0x0
  408d8b:	mov    BYTE PTR [rax],dl
  408d8d:	mov    rsi,rax
  408d90:	mov    rdi,rbp
  408d93:	call   4082a0 <init_token_boolean_op@@Base>
  408d98:	inc    QWORD PTR [rip+0xac81]        # 413a20 <__bss_start@@Base+0x1bb0>
  408d9f:	jmp    408576 <next@@Base+0x56>
  408da4:	mov    edi,0x3
  408da9:	call   403370 <malloc@plt>
  408dae:	movzx  edx,BYTE PTR [rsp]
  408db2:	mov    WORD PTR [rax+0x1],0x3d
  408db8:	mov    BYTE PTR [rax],dl
  408dba:	inc    QWORD PTR [rip+0xac7f]        # 413a40 <__bss_start@@Base+0x1bd0>
  408dc1:	jmp    408d23 <next@@Base+0x803>
  408dc6:	mov    edi,0x3
  408dcb:	call   403370 <malloc@plt>
  408dd0:	movzx  edx,BYTE PTR [rsp]
  408dd4:	mov    WORD PTR [rax+0x1],0x3d
  408dda:	mov    BYTE PTR [rax],dl
  408ddc:	inc    QWORD PTR [rip+0xac35]        # 413a18 <__bss_start@@Base+0x1ba8>
  408de3:	jmp    408d8d <next@@Base+0x86d>
  408de5:	mov    edi,0x1
  408dea:	inc    QWORD PTR [rip+0xadcf]        # 413bc0 <__bss_start@@Base+0x1d50>
  408df1:	call   4033e0 <exit@plt>
  408df6:	mov    edi,0x1
  408dfb:	inc    QWORD PTR [rip+0xad3e]        # 413b40 <__bss_start@@Base+0x1cd0>
  408e02:	call   4033e0 <exit@plt>
  408e07:	mov    edi,0x1
  408e0c:	inc    QWORD PTR [rip+0xad1d]        # 413b30 <__bss_start@@Base+0x1cc0>
  408e13:	call   4033e0 <exit@plt>
  408e18:	mov    edi,0x1
  408e1d:	inc    QWORD PTR [rip+0xacfc]        # 413b20 <__bss_start@@Base+0x1cb0>
  408e24:	call   4033e0 <exit@plt>
  408e29:	mov    edi,0x1
  408e2e:	inc    QWORD PTR [rip+0xad5b]        # 413b90 <__bss_start@@Base+0x1d20>
  408e35:	call   4033e0 <exit@plt>
  408e3a:	mov    edi,0x1
  408e3f:	inc    QWORD PTR [rip+0xad32]        # 413b78 <__bss_start@@Base+0x1d08>
  408e46:	call   4033e0 <exit@plt>
  408e4b:	mov    edi,0x1
  408e50:	inc    QWORD PTR [rip+0xad19]        # 413b70 <__bss_start@@Base+0x1d00>
  408e57:	call   4033e0 <exit@plt>
  408e5c:	mov    edi,0x1
  408e61:	inc    QWORD PTR [rip+0xacf8]        # 413b60 <__bss_start@@Base+0x1cf0>
  408e68:	call   4033e0 <exit@plt>
  408e6d:	mov    edi,0x1
  408e72:	inc    QWORD PTR [rip+0xad37]        # 413bb0 <__bss_start@@Base+0x1d40>
  408e79:	call   4033e0 <exit@plt>
  408e7e:	mov    edi,0x1
  408e83:	inc    QWORD PTR [rip+0xad16]        # 413ba0 <__bss_start@@Base+0x1d30>
  408e8a:	call   4033e0 <exit@plt>
  408e8f:	mov    edi,0x1
  408e94:	inc    QWORD PTR [rip+0xac6d]        # 413b08 <__bss_start@@Base+0x1c98>
  408e9b:	call   4033e0 <exit@plt>
  408ea0:	mov    edi,0x1
  408ea5:	inc    QWORD PTR [rip+0xac3c]        # 413ae8 <__bss_start@@Base+0x1c78>
  408eac:	call   4033e0 <exit@plt>
  408eb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ec0:	endbr64 
  408ec4:	test   esi,esi
  408ec6:	je     408f00 <next@@Base+0x9e0>
  408ec8:	push   rbp
  408ec9:	lea    eax,[rsi-0x1]
  408ecc:	push   rbx
  408ecd:	lea    rbp,[rdi+rax*8+0x8]
  408ed2:	mov    rbx,rdi
  408ed5:	sub    rsp,0x8
  408ed9:	nop    DWORD PTR [rax+0x0]
  408ee0:	call   4095b0 <next@@Base+0x1090>
  408ee5:	add    QWORD PTR [rbx],rax
  408ee8:	add    rbx,0x8
  408eec:	cmp    rbx,rbp
  408eef:	jne    408ee0 <next@@Base+0x9c0>
  408ef1:	add    rsp,0x8
  408ef5:	pop    rbx
  408ef6:	pop    rbp
  408ef7:	ret    
  408ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  408f00:	ret    
  408f01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f10:	push   rbp
  408f11:	lea    esi,[rdi*4+0x0]
  408f18:	mov    ebp,edi
  408f1a:	mov    edx,0x1
  408f1f:	push   rbx
  408f20:	sub    rsp,0x8
  408f24:	mov    rbx,0x413d40
  408f2b:	mov    rcx,QWORD PTR [rbx]
  408f2e:	lea    rdi,[rbx+0x20]
  408f32:	call   4033f0 <fwrite@plt>
  408f37:	cmp    rax,0x1
  408f3b:	je     408f44 <next@@Base+0xa24>
  408f3d:	mov    DWORD PTR [rbx+0x18],0x1
  408f44:	add    DWORD PTR [rbx+0x8],ebp
  408f47:	sub    DWORD PTR [rbx+0xc],ebp
  408f4a:	add    rsp,0x8
  408f4e:	pop    rbx
  408f4f:	pop    rbp
  408f50:	ret    
  408f51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408f5c:	nop    DWORD PTR [rax+0x0]
  408f60:	push   rbp
  408f61:	mov    ebp,edi
  408f63:	push   rbx
  408f64:	sub    rsp,0x8
  408f68:	mov    rbx,0x413d40
  408f6f:	mov    eax,DWORD PTR [rbx+0xc]
  408f72:	cmp    eax,0x3ff
  408f77:	ja     408f90 <next@@Base+0xa70>
  408f79:	add    ebp,eax
  408f7b:	lea    rax,[rbx+rax*4+0x20]
  408f80:	mov    DWORD PTR [rbx+0xc],ebp
  408f83:	add    rsp,0x8
  408f87:	pop    rbx
  408f88:	pop    rbp
  408f89:	ret    
  408f8a:	nop    WORD PTR [rax+rax*1+0x0]
  408f90:	mov    edi,0x400
  408f95:	call   408f10 <next@@Base+0x9f0>
  408f9a:	mov    eax,DWORD PTR [rbx+0xc]
  408f9d:	test   eax,eax
  408f9f:	je     408f79 <next@@Base+0xa59>
  408fa1:	mov    edx,DWORD PTR [rbx+0x1020]
  408fa7:	mov    DWORD PTR [rbx+0x20],edx
  408faa:	jmp    408f79 <next@@Base+0xa59>
  408fac:	nop    DWORD PTR [rax+0x0]
  408fb0:	push   rbp
  408fb1:	push   rbx
  408fb2:	sub    rsp,0x8
  408fb6:	mov    rbx,0x413d40
  408fbd:	mov    edx,DWORD PTR [rbx+0xc]
  408fc0:	mov    eax,DWORD PTR [rbx+0x10]
  408fc3:	mov    ecx,DWORD PTR [rbx+0x1c]
  408fc6:	sub    eax,edx
  408fc8:	test   ecx,ecx
  408fca:	jle    409028 <next@@Base+0xb08>
  408fcc:	mov    ebp,edi
  408fce:	cmp    eax,edi
  408fd0:	jae    409012 <next@@Base+0xaf2>
  408fd2:	add    DWORD PTR [rbx+0x8],edx
  408fd5:	test   eax,eax
  408fd7:	je     408fe0 <next@@Base+0xac0>
  408fd9:	mov    edx,DWORD PTR [rbx+rdx*4+0x20]
  408fdd:	mov    DWORD PTR [rbx+0x20],edx
  408fe0:	mov    rcx,QWORD PTR [rbx]
  408fe3:	lea    rdi,[rbx+rax*4+0x20]
  408fe8:	mov    edx,0x1000
  408fed:	mov    DWORD PTR [rbx+0x10],eax
  408ff0:	mov    esi,0x1
  408ff5:	mov    DWORD PTR [rbx+0xc],0x0
  408ffc:	call   4032a0 <fread@plt>
  409001:	shr    rax,0x2
  409005:	add    eax,DWORD PTR [rbx+0x10]
  409008:	mov    DWORD PTR [rbx+0x10],eax
  40900b:	cmp    eax,ebp
  40900d:	jb     409038 <next@@Base+0xb18>
  40900f:	mov    edx,DWORD PTR [rbx+0xc]
  409012:	add    ebp,edx
  409014:	mov    eax,edx
  409016:	mov    DWORD PTR [rbx+0xc],ebp
  409019:	lea    rax,[rbx+rax*4+0x20]
  40901e:	add    rsp,0x8
  409022:	pop    rbx
  409023:	pop    rbp
  409024:	ret    
  409025:	nop    DWORD PTR [rax]
  409028:	add    rsp,0x8
  40902c:	xor    eax,eax
  40902e:	pop    rbx
  40902f:	pop    rbp
  409030:	ret    
  409031:	nop    DWORD PTR [rax+0x0]
  409038:	sub    ebp,eax
  40903a:	mov    DWORD PTR [rbx+0x10],0x0
  409041:	xor    eax,eax
  409043:	add    DWORD PTR [rbx+0x14],ebp
  409046:	jmp    40901e <next@@Base+0xafe>
  409048:	nop    DWORD PTR [rax+rax*1+0x0]
  409050:	push   rbp
  409051:	mov    rbp,rdi
  409054:	push   rbx
  409055:	sub    rsp,0xd8
  40905c:	mov    QWORD PTR [rsp+0x28],rsi
  409061:	mov    QWORD PTR [rsp+0x30],rdx
  409066:	mov    QWORD PTR [rsp+0x38],rcx
  40906b:	mov    QWORD PTR [rsp+0x40],r8
  409070:	mov    QWORD PTR [rsp+0x48],r9
  409075:	test   al,al
  409077:	je     4090b0 <next@@Base+0xb90>
  409079:	movaps XMMWORD PTR [rsp+0x50],xmm0
  40907e:	movaps XMMWORD PTR [rsp+0x60],xmm1
  409083:	movaps XMMWORD PTR [rsp+0x70],xmm2
  409088:	movaps XMMWORD PTR [rsp+0x80],xmm3
  409090:	movaps XMMWORD PTR [rsp+0x90],xmm4
  409098:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  4090a0:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  4090a8:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  4090b0:	mov    rbx,0x413be8
  4090b7:	lea    rax,[rsp+0xf0]
  4090bf:	mov    DWORD PTR [rsp+0x8],0x8
  4090c7:	mov    QWORD PTR [rsp+0x10],rax
  4090cc:	lea    rax,[rsp+0x20]
  4090d1:	mov    rdi,QWORD PTR [rbx]
  4090d4:	mov    DWORD PTR [rsp+0xc],0x30
  4090dc:	mov    QWORD PTR [rsp+0x18],rax
  4090e1:	test   rdi,rdi
  4090e4:	je     409108 <next@@Base+0xbe8>
  4090e6:	lea    rcx,[rsp+0x8]
  4090eb:	mov    rdx,rbp
  4090ee:	mov    esi,0x1
  4090f3:	call   403240 <__vfprintf_chk@plt>
  4090f8:	add    rsp,0xd8
  4090ff:	pop    rbx
  409100:	pop    rbp
  409101:	ret    
  409102:	nop    WORD PTR [rax+rax*1+0x0]
  409108:	lea    rdi,[rip+0x374b]        # 40c85a <UnityStrOk@@Base+0x1de>
  40910f:	call   403220 <getenv@plt>
  409114:	test   rax,rax
  409117:	je     409148 <next@@Base+0xc28>
  409119:	mov    rdi,rax
  40911c:	lea    rsi,[rip+0x3016]        # 40c139 <_IO_stdin_used@@Base+0x139>
  409123:	call   4033d0 <fopen@plt>
  409128:	mov    QWORD PTR [rbx],rax
  40912b:	mov    rdi,rax
  40912e:	test   rdi,rdi
  409131:	jne    4090e6 <next@@Base+0xbc6>
  409133:	mov    rax,QWORD PTR [rip+0x6ebe]        # 40fff8 <stderr@GLIBC_2.2.5>
  40913a:	mov    rdi,QWORD PTR [rax]
  40913d:	mov    QWORD PTR [rbx],rdi
  409140:	jmp    4090e6 <next@@Base+0xbc6>
  409142:	nop    WORD PTR [rax+rax*1+0x0]
  409148:	mov    rdi,QWORD PTR [rbx]
  40914b:	jmp    40912e <next@@Base+0xc0e>
  40914d:	nop    DWORD PTR [rax]
  409150:	push   r14
  409152:	push   r13
  409154:	push   r12
  409156:	push   rbp
  409157:	push   rbx
  409158:	test   rsi,rsi
  40915b:	je     4091b4 <next@@Base+0xc94>
  40915d:	mov    rbx,rsi
  409160:	mov    r13,QWORD PTR [rsi]
  409163:	test   edx,edx
  409165:	je     4091a0 <next@@Base+0xc80>
  409167:	lea    eax,[rdx-0x1]
  40916a:	lea    r14,[rdi+0x20]
  40916e:	lea    rbp,[rdi+rax*8+0x28]
  409173:	xor    eax,eax
  409175:	nop    DWORD PTR [rax]
  409178:	cmp    QWORD PTR [r14],0x0
  40917c:	je     409197 <next@@Base+0xc77>
  40917e:	lea    r12d,[rax+0x1]
  409182:	add    rax,0x2
  409186:	shl    rax,0x4
  40918a:	mov    rdi,QWORD PTR [rbx+rax*1+0x10]
  40918f:	call   403230 <free@plt>
  409194:	mov    eax,r12d
  409197:	add    r14,0x8
  40919b:	cmp    r14,rbp
  40919e:	jne    409178 <next@@Base+0xc58>
  4091a0:	mov    rdi,rbx
  4091a3:	call   403230 <free@plt>
  4091a8:	pop    rbx
  4091a9:	mov    rax,r13
  4091ac:	pop    rbp
  4091ad:	pop    r12
  4091af:	pop    r13
  4091b1:	pop    r14
  4091b3:	ret    
  4091b4:	xor    r13d,r13d
  4091b7:	jmp    4091a8 <next@@Base+0xc88>
  4091b9:	nop    DWORD PTR [rax+0x0]
  4091c0:	sub    rsp,0x18
  4091c4:	bswap  esi
  4091c6:	mov    rax,rdx
  4091c9:	mov    DWORD PTR [rsp+0x8],esi
  4091cd:	mov    DWORD PTR [rsp+0xc],0x2a343841
  4091d5:	test   rdx,rdx
  4091d8:	je     409200 <next@@Base+0xce0>
  4091da:	lea    rcx,[rsp+0x8]
  4091df:	lea    rdx,[rsp+0xc]
  4091e4:	mov    rsi,rax
  4091e7:	xor    eax,eax
  4091e9:	lea    rdi,[rip+0x3740]        # 40c930 <UnityStrOk@@Base+0x2b4>
  4091f0:	call   409050 <next@@Base+0xb30>
  4091f5:	xor    eax,eax
  4091f7:	add    rsp,0x18
  4091fb:	ret    
  4091fc:	nop    DWORD PTR [rax+0x0]
  409200:	mov    rax,QWORD PTR [rdi]
  409203:	jmp    4091da <next@@Base+0xcba>
  409205:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409210:	endbr64 
  409214:	mov    rax,0x413d40
  40921b:	xor    edx,edx
  40921d:	xor    esi,esi
  40921f:	mov    QWORD PTR [rax+0x8],0x0
  409227:	mov    rdi,QWORD PTR [rax]
  40922a:	mov    DWORD PTR [rax+0x1c],0xffffffff
  409231:	jmp    403380 <fseek@plt>
  409236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409240:	endbr64 
  409244:	push   r12
  409246:	xor    eax,eax
  409248:	push   rbp
  409249:	mov    rbp,rdi
  40924c:	push   rbx
  40924d:	sub    rsp,0x20
  409251:	mov    WORD PTR [rsp+0x2],ax
  409256:	mov    QWORD PTR [rsp+0x8],0x0
  40925f:	mov    QWORD PTR [rsp+0x10],0x0
  409268:	call   4032c0 <getpid@plt>
  40926d:	mov    rbx,0x413d40
  409274:	mov    edx,0x1
  409279:	mov    rdi,rbp
  40927c:	mov    DWORD PTR [rsp+0x18],eax
  409280:	mov    esi,0x42
  409285:	movabs rax,0xffffffff00000000
  40928f:	mov    QWORD PTR [rbx+0x10],rax
  409293:	xor    eax,eax
  409295:	mov    QWORD PTR [rbx+0x8],0x0
  40929d:	mov    WORD PTR [rsp],dx
  4092a1:	mov    edx,0x1b6
  4092a6:	mov    DWORD PTR [rbx+0x18],0x0
  4092ad:	call   4033b0 <open@plt>
  4092b2:	mov    ebp,eax
  4092b4:	xor    eax,eax
  4092b6:	test   ebp,ebp
  4092b8:	js     409308 <next@@Base+0xde8>
  4092ba:	mov    r12,rsp
  4092bd:	xor    eax,eax
  4092bf:	mov    rdx,r12
  4092c2:	mov    esi,0x7
  4092c7:	mov    edi,ebp
  4092c9:	call   4032b0 <fcntl@plt>
  4092ce:	test   eax,eax
  4092d0:	je     4092dc <next@@Base+0xdbc>
  4092d2:	call   403260 <__errno_location@plt>
  4092d7:	cmp    DWORD PTR [rax],0x4
  4092da:	je     4092bd <next@@Base+0xd9d>
  4092dc:	lea    rsi,[rip+0x3587]        # 40c86a <UnityStrOk@@Base+0x1ee>
  4092e3:	mov    edi,ebp
  4092e5:	call   403390 <fdopen@plt>
  4092ea:	mov    QWORD PTR [rbx],rax
  4092ed:	test   rax,rax
  4092f0:	je     409318 <next@@Base+0xdf8>
  4092f2:	mov    rdi,rax
  4092f5:	xor    esi,esi
  4092f7:	mov    DWORD PTR [rbx+0x1c],0x1
  4092fe:	call   403300 <setbuf@plt>
  409303:	mov    eax,0x1
  409308:	add    rsp,0x20
  40930c:	pop    rbx
  40930d:	pop    rbp
  40930e:	pop    r12
  409310:	ret    
  409311:	nop    DWORD PTR [rax+0x0]
  409318:	mov    edi,ebp
  40931a:	call   403310 <close@plt>
  40931f:	add    rsp,0x20
  409323:	xor    eax,eax
  409325:	pop    rbx
  409326:	pop    rbp
  409327:	pop    r12
  409329:	ret    
  40932a:	nop    WORD PTR [rax+rax*1+0x0]
  409330:	endbr64 
  409334:	push   rbx
  409335:	mov    rbx,0x413d40
  40933c:	mov    rdi,QWORD PTR [rbx]
  40933f:	test   rdi,rdi
  409342:	je     40935e <next@@Base+0xe3e>
  409344:	mov    eax,DWORD PTR [rbx+0xc]
  409347:	test   eax,eax
  409349:	jne    409370 <next@@Base+0xe50>
  40934b:	call   4032d0 <fclose@plt>
  409350:	mov    QWORD PTR [rbx],0x0
  409357:	mov    DWORD PTR [rbx+0x10],0x0
  40935e:	mov    eax,DWORD PTR [rbx+0x18]
  409361:	mov    DWORD PTR [rbx+0x1c],0x0
  409368:	pop    rbx
  409369:	ret    
  40936a:	nop    WORD PTR [rax+rax*1+0x0]
  409370:	mov    edx,DWORD PTR [rbx+0x1c]
  409373:	test   edx,edx
  409375:	jns    40934b <next@@Base+0xe2b>
  409377:	mov    edi,eax
  409379:	call   408f10 <next@@Base+0x9f0>
  40937e:	mov    rdi,QWORD PTR [rbx]
  409381:	jmp    40934b <next@@Base+0xe2b>
  409383:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40938e:	xchg   ax,ax
  409390:	endbr64 
  409394:	push   rbx
  409395:	mov    ebx,edi
  409397:	mov    edi,0x1
  40939c:	call   408f60 <next@@Base+0xa40>
  4093a1:	mov    DWORD PTR [rax],ebx
  4093a3:	pop    rbx
  4093a4:	ret    
  4093a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4093b0:	endbr64 
  4093b4:	push   rbx
  4093b5:	mov    rbx,rdi
  4093b8:	mov    edi,0x2
  4093bd:	call   408f60 <next@@Base+0xa40>
  4093c2:	mov    QWORD PTR [rax],rbx
  4093c5:	pop    rbx
  4093c6:	ret    
  4093c7:	nop    WORD PTR [rax+rax*1+0x0]
  4093d0:	endbr64 
  4093d4:	push   rbp
  4093d5:	mov    ebp,edi
  4093d7:	mov    edi,0x2
  4093dc:	push   rbx
  4093dd:	mov    ebx,esi
  4093df:	sub    rsp,0x8
  4093e3:	call   408f60 <next@@Base+0xa40>
  4093e8:	mov    DWORD PTR [rax],ebp
  4093ea:	mov    DWORD PTR [rax+0x4],ebx
  4093ed:	add    rsp,0x8
  4093f1:	pop    rbx
  4093f2:	pop    rbp
  4093f3:	ret    
  4093f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4093ff:	nop
  409400:	endbr64 
  409404:	push   r14
  409406:	xor    ecx,ecx
  409408:	push   r13
  40940a:	mov    r13d,edi
  40940d:	mov    edi,0x1
  409412:	push   r12
  409414:	xor    r12d,r12d
  409417:	push   rbp
  409418:	mov    rbp,rsi
  40941b:	push   rbx
  40941c:	lea    rbx,[rsi+0x28]
  409420:	mov    rax,rbx
  409423:	sub    rsp,0x20
  409427:	mov    QWORD PTR [rsp],0x0
  40942f:	mov    QWORD PTR [rsp+0x8],0x0
  409438:	mov    QWORD PTR [rsp+0x10],0x0
  409441:	mov    QWORD PTR [rsp+0x18],0x0
  40944a:	nop    WORD PTR [rax+rax*1+0x0]
  409450:	mov    edx,DWORD PTR [rax]
  409452:	test   edx,edx
  409454:	je     409466 <next@@Base+0xf46>
  409456:	mov    edx,ecx
  409458:	mov    esi,edi
  40945a:	add    r12d,0x1
  40945e:	shr    edx,0x5
  409461:	shl    esi,cl
  409463:	or     DWORD PTR [rsp+rdx*4],esi
  409466:	add    ecx,0x1
  409469:	add    rax,0x18
  40946d:	cmp    ecx,0xfc
  409473:	jne    409450 <next@@Base+0xf30>
  409475:	mov    edi,0x2
  40947a:	lea    r14,[rsp+0x20]
  40947f:	call   408f60 <next@@Base+0xa40>
  409484:	lea    edx,[r12+r12*4+0x11]
  409489:	mov    edi,0x1
  40948e:	mov    DWORD PTR [rax+0x4],edx
  409491:	mov    DWORD PTR [rax],r13d
  409494:	mov    r12d,DWORD PTR [rbp+0x0]
  409498:	call   408f60 <next@@Base+0xa40>
  40949d:	mov    edi,0x1
  4094a2:	mov    DWORD PTR [rax],r12d
  4094a5:	mov    r12d,DWORD PTR [rbp+0x8]
  4094a9:	call   408f60 <next@@Base+0xa40>
  4094ae:	mov    edi,0x1
  4094b3:	mov    DWORD PTR [rax],r12d
  4094b6:	mov    r12d,DWORD PTR [rbp+0xc]
  4094ba:	call   408f60 <next@@Base+0xa40>
  4094bf:	mov    edi,0x2
  4094c4:	mov    DWORD PTR [rax],r12d
  4094c7:	mov    r12,QWORD PTR [rbp+0x10]
  4094cb:	call   408f60 <next@@Base+0xa40>
  4094d0:	mov    edi,0x2
  4094d5:	mov    QWORD PTR [rax],r12
  4094d8:	mov    r12,QWORD PTR [rbp+0x18]
  4094dc:	call   408f60 <next@@Base+0xa40>
  4094e1:	mov    edi,0x2
  4094e6:	mov    QWORD PTR [rax],r12
  4094e9:	mov    r12,QWORD PTR [rbp+0x20]
  4094ed:	call   408f60 <next@@Base+0xa40>
  4094f2:	mov    QWORD PTR [rax],r12
  4094f5:	mov    r12,rsp
  4094f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409500:	mov    r13d,DWORD PTR [r12]
  409504:	mov    edi,0x1
  409509:	add    r12,0x4
  40950d:	call   408f60 <next@@Base+0xa40>
  409512:	mov    DWORD PTR [rax],r13d
  409515:	cmp    r14,r12
  409518:	jne    409500 <next@@Base+0xfe0>
  40951a:	lea    r12,[rbp+0x17c8]
  409521:	nop    DWORD PTR [rax+0x0]
  409528:	mov    ebp,DWORD PTR [rbx]
  40952a:	test   ebp,ebp
  40952c:	je     40955c <next@@Base+0x103c>
  40952e:	mov    edi,0x1
  409533:	call   408f60 <next@@Base+0xa40>
  409538:	mov    edi,0x2
  40953d:	mov    DWORD PTR [rax],ebp
  40953f:	mov    rbp,QWORD PTR [rbx+0x8]
  409543:	call   408f60 <next@@Base+0xa40>
  409548:	mov    edi,0x2
  40954d:	mov    QWORD PTR [rax],rbp
  409550:	mov    rbp,QWORD PTR [rbx+0x10]
  409554:	call   408f60 <next@@Base+0xa40>
  409559:	mov    QWORD PTR [rax],rbp
  40955c:	add    rbx,0x18
  409560:	cmp    rbx,r12
  409563:	jne    409528 <next@@Base+0x1008>
  409565:	add    rsp,0x20
  409569:	pop    rbx
  40956a:	pop    rbp
  40956b:	pop    r12
  40956d:	pop    r13
  40956f:	pop    r14
  409571:	ret    
  409572:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40957d:	nop    DWORD PTR [rax]
  409580:	endbr64 
  409584:	sub    rsp,0x8
  409588:	mov    edi,0x1
  40958d:	call   408fb0 <next@@Base+0xa90>
  409592:	test   rax,rax
  409595:	je     4095a0 <next@@Base+0x1080>
  409597:	mov    eax,DWORD PTR [rax]
  409599:	add    rsp,0x8
  40959d:	ret    
  40959e:	xchg   ax,ax
  4095a0:	xor    eax,eax
  4095a2:	add    rsp,0x8
  4095a6:	ret    
  4095a7:	nop    WORD PTR [rax+rax*1+0x0]
  4095b0:	endbr64 
  4095b4:	sub    rsp,0x8
  4095b8:	mov    edi,0x2
  4095bd:	call   408fb0 <next@@Base+0xa90>
  4095c2:	test   rax,rax
  4095c5:	je     4095d0 <next@@Base+0x10b0>
  4095c7:	mov    rax,QWORD PTR [rax]
  4095ca:	add    rsp,0x8
  4095ce:	ret    
  4095cf:	nop
  4095d0:	xor    eax,eax
  4095d2:	add    rsp,0x8
  4095d6:	ret    
  4095d7:	nop    WORD PTR [rax+rax*1+0x0]
  4095e0:	endbr64 
  4095e4:	push   r15
  4095e6:	push   r14
  4095e8:	push   r13
  4095ea:	push   r12
  4095ec:	mov    r12,rdi
  4095ef:	mov    edi,0x1
  4095f4:	push   rbp
  4095f5:	push   rbx
  4095f6:	sub    rsp,0x28
  4095fa:	call   408fb0 <next@@Base+0xa90>
  4095ff:	test   rax,rax
  409602:	je     40984f <next@@Base+0x132f>
  409608:	mov    eax,DWORD PTR [rax]
  40960a:	mov    DWORD PTR [r12],eax
  40960e:	mov    edi,0x1
  409613:	call   408fb0 <next@@Base+0xa90>
  409618:	test   rax,rax
  40961b:	je     409856 <next@@Base+0x1336>
  409621:	mov    eax,DWORD PTR [rax]
  409623:	mov    DWORD PTR [r12+0x8],eax
  409628:	mov    edi,0x1
  40962d:	call   408fb0 <next@@Base+0xa90>
  409632:	test   rax,rax
  409635:	je     40985d <next@@Base+0x133d>
  40963b:	mov    eax,DWORD PTR [rax]
  40963d:	mov    DWORD PTR [r12+0xc],eax
  409642:	mov    edi,0x2
  409647:	call   408fb0 <next@@Base+0xa90>
  40964c:	test   rax,rax
  40964f:	je     409864 <next@@Base+0x1344>
  409655:	mov    rax,QWORD PTR [rax]
  409658:	mov    QWORD PTR [r12+0x10],rax
  40965d:	mov    edi,0x2
  409662:	call   408fb0 <next@@Base+0xa90>
  409667:	test   rax,rax
  40966a:	je     40986b <next@@Base+0x134b>
  409670:	mov    rax,QWORD PTR [rax]
  409673:	mov    QWORD PTR [r12+0x18],rax
  409678:	mov    edi,0x2
  40967d:	call   408fb0 <next@@Base+0xa90>
  409682:	test   rax,rax
  409685:	je     409872 <next@@Base+0x1352>
  40968b:	mov    rax,QWORD PTR [rax]
  40968e:	lea    rdi,[r12+0x30]
  409693:	mov    QWORD PTR [r12+0x20],rax
  409698:	mov    eax,r12d
  40969b:	mov    rbx,rsp
  40969e:	and    rdi,0xfffffffffffffff8
  4096a2:	lea    r13,[rsp+0x20]
  4096a7:	xor    r15d,r15d
  4096aa:	mov    QWORD PTR [r12+0x28],0x0
  4096b3:	mov    QWORD PTR [r12+0x17c0],0x0
  4096bf:	sub    eax,edi
  4096c1:	lea    ecx,[rax+0x17c8]
  4096c7:	xor    eax,eax
  4096c9:	shr    ecx,0x3
  4096cc:	rep stos QWORD PTR es:[rdi],rax
  4096cf:	jmp    4096f1 <next@@Base+0x11d1>
  4096d1:	nop    DWORD PTR [rax+0x0]
  4096d8:	mov    edi,DWORD PTR [rax]
  4096da:	add    rbx,0x4
  4096de:	mov    rbp,rdi
  4096e1:	call   40b080 <__gcov_sort_n_vals@@Base+0x17b0>
  4096e6:	mov    DWORD PTR [rbx-0x4],ebp
  4096e9:	add    r15d,eax
  4096ec:	cmp    r13,rbx
  4096ef:	je     409710 <next@@Base+0x11f0>
  4096f1:	mov    edi,0x1
  4096f6:	call   408fb0 <next@@Base+0xa90>
  4096fb:	test   rax,rax
  4096fe:	jne    4096d8 <next@@Base+0x11b8>
  409700:	xor    ebp,ebp
  409702:	add    rbx,0x4
  409706:	mov    DWORD PTR [rbx-0x4],ebp
  409709:	cmp    r13,rbx
  40970c:	jne    4096f1 <next@@Base+0x11d1>
  40970e:	xchg   ax,ax
  409710:	lea    r13d,[r15-0x1]
  409714:	xor    ebx,ebx
  409716:	xor    ebp,ebp
  409718:	xor    r14d,r14d
  40971b:	test   r15d,r15d
  40971e:	je     4097f7 <next@@Base+0x12d7>
  409724:	nop    DWORD PTR [rax+0x0]
  409728:	test   ebx,ebx
  40972a:	je     40973e <next@@Base+0x121e>
  40972c:	jmp    409776 <next@@Base+0x1256>
  40972e:	xchg   ax,ax
  409730:	mov    eax,ebp
  409732:	lea    ecx,[rbp+0x1]
  409735:	mov    ebx,DWORD PTR [rsp+rax*4]
  409738:	test   ebx,ebx
  40973a:	jne    40975d <next@@Base+0x123d>
  40973c:	mov    ebp,ecx
  40973e:	cmp    ebp,0x7
  409741:	jbe    409730 <next@@Base+0x1210>
  409743:	lea    rdi,[rip+0x321e]        # 40c968 <UnityStrOk@@Base+0x2ec>
  40974a:	xor    eax,eax
  40974c:	call   409050 <next@@Base+0xb30>
  409751:	mov    eax,ebp
  409753:	lea    ecx,[rbp+0x1]
  409756:	mov    ebx,DWORD PTR [rsp+rax*4]
  409759:	test   ebx,ebx
  40975b:	je     40973c <next@@Base+0x121c>
  40975d:	mov    r14d,ebp
  409760:	mov    ebp,ecx
  409762:	shl    r14d,0x5
  409766:	test   bl,0x1
  409769:	jne    40977b <next@@Base+0x125b>
  40976b:	nop    DWORD PTR [rax+rax*1+0x0]
  409770:	add    r14d,0x1
  409774:	shr    ebx,1
  409776:	test   bl,0x1
  409779:	je     409770 <next@@Base+0x1250>
  40977b:	cmp    r14d,0xfb
  409782:	ja     409810 <next@@Base+0x12f0>
  409788:	mov    edi,0x1
  40978d:	call   408fb0 <next@@Base+0xa90>
  409792:	test   rax,rax
  409795:	je     409831 <next@@Base+0x1311>
  40979b:	mov    ecx,DWORD PTR [rax]
  40979d:	mov    r15d,r14d
  4097a0:	mov    edi,0x2
  4097a5:	lea    rax,[r15+r15*2]
  4097a9:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  4097ae:	call   408fb0 <next@@Base+0xa90>
  4097b3:	test   rax,rax
  4097b6:	je     409848 <next@@Base+0x1328>
  4097bc:	mov    rcx,QWORD PTR [rax]
  4097bf:	lea    rax,[r15+r15*2]
  4097c3:	mov    edi,0x2
  4097c8:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  4097cd:	call   408fb0 <next@@Base+0xa90>
  4097d2:	test   rax,rax
  4097d5:	je     409840 <next@@Base+0x1320>
  4097d7:	mov    rcx,QWORD PTR [rax]
  4097da:	lea    rax,[r15+r15*2]
  4097de:	sub    r13d,0x1
  4097e2:	shr    ebx,1
  4097e4:	add    r14d,0x1
  4097e8:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  4097ed:	cmp    r13d,0xffffffff
  4097f1:	jne    409728 <next@@Base+0x1208>
  4097f7:	add    rsp,0x28
  4097fb:	pop    rbx
  4097fc:	pop    rbp
  4097fd:	pop    r12
  4097ff:	pop    r13
  409801:	pop    r14
  409803:	pop    r15
  409805:	ret    
  409806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409810:	lea    rdi,[rip+0x3191]        # 40c9a8 <UnityStrOk@@Base+0x32c>
  409817:	xor    eax,eax
  409819:	call   409050 <next@@Base+0xb30>
  40981e:	mov    edi,0x1
  409823:	call   408fb0 <next@@Base+0xa90>
  409828:	test   rax,rax
  40982b:	jne    40979b <next@@Base+0x127b>
  409831:	xor    ecx,ecx
  409833:	jmp    40979d <next@@Base+0x127d>
  409838:	nop    DWORD PTR [rax+rax*1+0x0]
  409840:	xor    ecx,ecx
  409842:	jmp    4097da <next@@Base+0x12ba>
  409844:	nop    DWORD PTR [rax+0x0]
  409848:	xor    ecx,ecx
  40984a:	jmp    4097bf <next@@Base+0x129f>
  40984f:	xor    eax,eax
  409851:	jmp    40960a <next@@Base+0x10ea>
  409856:	xor    eax,eax
  409858:	jmp    409623 <next@@Base+0x1103>
  40985d:	xor    eax,eax
  40985f:	jmp    40963d <next@@Base+0x111d>
  409864:	xor    eax,eax
  409866:	jmp    409658 <next@@Base+0x1138>
  40986b:	xor    eax,eax
  40986d:	jmp    409673 <next@@Base+0x1153>
  409872:	xor    eax,eax
  409874:	jmp    40968e <next@@Base+0x116e>
  409879:	nop    DWORD PTR [rax+0x0]
  409880:	endbr64 
  409884:	push   rbp
  409885:	push   rbx
  409886:	mov    ebx,edi
  409888:	sub    rsp,0x8
  40988c:	mov    rbp,0x413d40
  409893:	mov    edi,DWORD PTR [rbp+0xc]
  409896:	test   edi,edi
  409898:	jne    4098c8 <next@@Base+0x13a8>
  40989a:	mov    rdi,QWORD PTR [rbp+0x0]
  40989e:	lea    esi,[rbx*4+0x0]
  4098a5:	xor    edx,edx
  4098a7:	call   403380 <fseek@plt>
  4098ac:	mov    rdi,QWORD PTR [rbp+0x0]
  4098b0:	call   403340 <ftell@plt>
  4098b5:	sar    rax,0x2
  4098b9:	mov    DWORD PTR [rbp+0x8],eax
  4098bc:	add    rsp,0x8
  4098c0:	pop    rbx
  4098c1:	pop    rbp
  4098c2:	ret    
  4098c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4098c8:	call   408f10 <next@@Base+0x9f0>
  4098cd:	jmp    40989a <next@@Base+0x137a>
  4098cf:	nop

00000000004098d0 <__gcov_sort_n_vals@@Base>:
  4098d0:	endbr64 
  4098d4:	cmp    esi,0x2
  4098d7:	jle    409971 <__gcov_sort_n_vals@@Base+0xa1>
  4098dd:	sub    esi,0x3
  4098e0:	push   rbp
  4098e1:	lea    r9,[rdi+0x8]
  4098e5:	mov    r11,0xfffffffffffffff0
  4098ec:	shr    esi,1
  4098ee:	push   rbx
  4098ef:	xor    r10d,r10d
  4098f2:	mov    eax,esi
  4098f4:	lea    rbp,[rax+rax*1+0x2]
  4098f9:	nop    DWORD PTR [rax+0x0]
  409900:	mov    rbx,QWORD PTR [r9+0x8]
  409904:	mov    rsi,QWORD PTR [r9+0x10]
  409908:	cmp    rsi,QWORD PTR [r9]
  40990b:	jle    40996c <__gcov_sort_n_vals@@Base+0x9c>
  40990d:	mov    eax,r10d
  409910:	lea    rcx,[r10-0x2]
  409914:	lea    r8,[r9+r11*1]
  409918:	shr    eax,1
  40991a:	add    rax,rax
  40991d:	sub    rcx,rax
  409920:	mov    rax,r10
  409923:	jmp    40992f <__gcov_sort_n_vals@@Base+0x5f>
  409925:	nop    DWORD PTR [rax]
  409928:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  40992d:	jle    40994b <__gcov_sort_n_vals@@Base+0x7b>
  40992f:	mov    rdx,QWORD PTR [rdi+rax*8]
  409933:	mov    QWORD PTR [rdi+rax*8+0x10],rdx
  409938:	mov    rdx,QWORD PTR [r8+rax*8+0x10]
  40993d:	mov    QWORD PTR [rdi+rax*8+0x18],rdx
  409942:	sub    rax,0x2
  409946:	cmp    rax,rcx
  409949:	jne    409928 <__gcov_sort_n_vals@@Base+0x58>
  40994b:	add    rax,0x2
  40994f:	add    r10,0x2
  409953:	add    r9,0x10
  409957:	sub    r11,0x10
  40995b:	mov    QWORD PTR [rdi+rax*8],rbx
  40995f:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  409964:	cmp    rbp,r10
  409967:	jne    409900 <__gcov_sort_n_vals@@Base+0x30>
  409969:	pop    rbx
  40996a:	pop    rbp
  40996b:	ret    
  40996c:	mov    rax,r10
  40996f:	jmp    40994b <__gcov_sort_n_vals@@Base+0x7b>
  409971:	ret    
  409972:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40997d:	nop    DWORD PTR [rax]
  409980:	push   r15
  409982:	push   r14
  409984:	push   r13
  409986:	push   r12
  409988:	push   rbp
  409989:	push   rbx
  40998a:	lea    r11,[rsp-0x4000]
  409992:	sub    rsp,0x1000
  409999:	or     QWORD PTR [rsp],0x0
  40999e:	cmp    rsp,r11
  4099a1:	jne    409992 <__gcov_sort_n_vals@@Base+0xc2>
  4099a3:	sub    rsp,0x7e8
  4099aa:	mov    ecx,0x2f9
  4099af:	xor    eax,eax
  4099b1:	mov    r13,rdi
  4099b4:	lea    rdi,[rsp+0x70]
  4099b9:	mov    DWORD PTR [rsp+0x3c],esi
  4099bd:	mov    QWORD PTR [rsp+0x8],rdi
  4099c2:	rep stos QWORD PTR es:[rdi],rax
  4099c5:	test   r13,r13
  4099c8:	je     40add0 <__gcov_sort_n_vals@@Base+0x1500>
  4099ce:	mov    DWORD PTR [rsp+0x10],0x0
  4099d6:	mov    rbx,r13
  4099d9:	xor    ebp,ebp
  4099db:	xor    r12d,r12d
  4099de:	mov    QWORD PTR [rsp+0x18],r13
  4099e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4099e8:	mov    rdi,QWORD PTR [rbx+0x18]
  4099ec:	call   4032e0 <strlen@plt>
  4099f1:	mov    ecx,DWORD PTR [rbx+0x10]
  4099f4:	mov    edx,0x20
  4099f9:	cmp    rbp,rax
  4099fc:	cmovb  rbp,rax
  409a00:	mov    eax,ecx
  409a02:	add    ecx,ecx
  409a04:	xor    eax,r12d
  409a07:	add    r12d,r12d
  409a0a:	sar    eax,0x1f
  409a0d:	and    eax,0x4c11db7
  409a12:	xor    r12d,eax
  409a15:	sub    edx,0x1
  409a18:	jne    409a00 <__gcov_sort_n_vals@@Base+0x130>
  409a1a:	mov    esi,DWORD PTR [rbx+0x68]
  409a1d:	mov    edx,0x20
  409a22:	mov    ecx,esi
  409a24:	nop    DWORD PTR [rax+0x0]
  409a28:	mov    eax,r12d
  409a2b:	add    r12d,r12d
  409a2e:	xor    eax,ecx
  409a30:	add    ecx,ecx
  409a32:	sar    eax,0x1f
  409a35:	and    eax,0x4c11db7
  409a3a:	xor    r12d,eax
  409a3d:	sub    edx,0x1
  409a40:	jne    409a28 <__gcov_sort_n_vals@@Base+0x158>
  409a42:	test   esi,esi
  409a44:	je     409bc7 <__gcov_sort_n_vals@@Base+0x2f7>
  409a4a:	mov    rax,QWORD PTR [rbx+0x70]
  409a4e:	lea    edx,[rsi-0x1]
  409a51:	mov    edi,DWORD PTR [rsp+0x10]
  409a55:	xor    r11d,r11d
  409a58:	mov    r8,QWORD PTR [rsp+0x80]
  409a60:	mov    r9,QWORD PTR [rsp+0x88]
  409a68:	xor    r10d,r10d
  409a6b:	xor    r14d,r14d
  409a6e:	lea    rcx,[rax+0x8]
  409a72:	lea    r13,[rcx+rdx*8]
  409a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a80:	mov    rax,QWORD PTR [rax]
  409a83:	xor    esi,esi
  409a85:	test   rax,rax
  409a88:	je     409a95 <__gcov_sort_n_vals@@Base+0x1c5>
  409a8a:	cmp    QWORD PTR [rax],rbx
  409a8d:	je     409b90 <__gcov_sort_n_vals@@Base+0x2c0>
  409a93:	xor    eax,eax
  409a95:	mov    r15d,0x20
  409a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  409aa0:	mov    edx,r12d
  409aa3:	add    r12d,r12d
  409aa6:	xor    edx,esi
  409aa8:	add    esi,esi
  409aaa:	sar    edx,0x1f
  409aad:	and    edx,0x4c11db7
  409ab3:	xor    r12d,edx
  409ab6:	sub    r15d,0x1
  409aba:	jne    409aa0 <__gcov_sort_n_vals@@Base+0x1d0>
  409abc:	xor    esi,esi
  409abe:	test   rax,rax
  409ac1:	je     409ac6 <__gcov_sort_n_vals@@Base+0x1f6>
  409ac3:	mov    esi,DWORD PTR [rax+0xc]
  409ac6:	mov    r15d,0x20
  409acc:	nop    DWORD PTR [rax+0x0]
  409ad0:	mov    edx,esi
  409ad2:	add    esi,esi
  409ad4:	xor    edx,r12d
  409ad7:	add    r12d,r12d
  409ada:	sar    edx,0x1f
  409add:	and    edx,0x4c11db7
  409ae3:	xor    r12d,edx
  409ae6:	sub    r15d,0x1
  409aea:	jne    409ad0 <__gcov_sort_n_vals@@Base+0x200>
  409aec:	test   rax,rax
  409aef:	je     409b7c <__gcov_sort_n_vals@@Base+0x2ac>
  409af5:	cmp    QWORD PTR [rbx+0x20],0x0
  409afa:	je     409b7c <__gcov_sort_n_vals@@Base+0x2ac>
  409b00:	mov    esi,DWORD PTR [rax+0x18]
  409b03:	mov    r14d,0x20
  409b09:	add    edi,esi
  409b0b:	mov    r15d,esi
  409b0e:	xchg   ax,ax
  409b10:	mov    edx,r15d
  409b13:	add    r15d,r15d
  409b16:	xor    edx,r12d
  409b19:	add    r12d,r12d
  409b1c:	sar    edx,0x1f
  409b1f:	and    edx,0x4c11db7
  409b25:	xor    r12d,edx
  409b28:	sub    r14d,0x1
  409b2c:	jne    409b10 <__gcov_sort_n_vals@@Base+0x240>
  409b2e:	test   esi,esi
  409b30:	je     409f70 <__gcov_sort_n_vals@@Base+0x6a0>
  409b36:	mov    rdx,QWORD PTR [rax+0x20]
  409b3a:	sub    esi,0x1
  409b3d:	lea    rax,[rdx+0x8]
  409b41:	lea    rsi,[rax+rsi*8]
  409b45:	jmp    409b54 <__gcov_sort_n_vals@@Base+0x284>
  409b47:	nop    WORD PTR [rax+rax*1+0x0]
  409b50:	add    rax,0x8
  409b54:	mov    rdx,QWORD PTR [rdx]
  409b57:	add    r8,rdx
  409b5a:	cmp    rdx,r9
  409b5d:	jle    409b68 <__gcov_sort_n_vals@@Base+0x298>
  409b5f:	mov    r9,rdx
  409b62:	mov    r11d,0x1
  409b68:	mov    rdx,rax
  409b6b:	cmp    rax,rsi
  409b6e:	jne    409b50 <__gcov_sort_n_vals@@Base+0x280>
  409b70:	mov    r10d,0x1
  409b76:	mov    r14d,0x1
  409b7c:	mov    rax,rcx
  409b7f:	cmp    rcx,r13
  409b82:	je     409ba0 <__gcov_sort_n_vals@@Base+0x2d0>
  409b84:	add    rcx,0x8
  409b88:	jmp    409a80 <__gcov_sort_n_vals@@Base+0x1b0>
  409b8d:	nop    DWORD PTR [rax]
  409b90:	mov    esi,DWORD PTR [rax+0x10]
  409b93:	jmp    409a95 <__gcov_sort_n_vals@@Base+0x1c5>
  409b98:	nop    DWORD PTR [rax+rax*1+0x0]
  409ba0:	test   r14b,r14b
  409ba3:	je     409bad <__gcov_sort_n_vals@@Base+0x2dd>
  409ba5:	mov    DWORD PTR [rsp+0x78],edi
  409ba9:	mov    DWORD PTR [rsp+0x10],edi
  409bad:	test   r10b,r10b
  409bb0:	je     409bba <__gcov_sort_n_vals@@Base+0x2ea>
  409bb2:	mov    QWORD PTR [rsp+0x80],r8
  409bba:	test   r11b,r11b
  409bbd:	je     409bc7 <__gcov_sort_n_vals@@Base+0x2f7>
  409bbf:	mov    QWORD PTR [rsp+0x88],r9
  409bc7:	mov    rbx,QWORD PTR [rbx+0x8]
  409bcb:	test   rbx,rbx
  409bce:	jne    4099e8 <__gcov_sort_n_vals@@Base+0x118>
  409bd4:	mov    r14d,DWORD PTR [rsp+0x10]
  409bd9:	mov    DWORD PTR [rsp+0x48],r12d
  409bde:	add    rbp,0x2
  409be2:	mov    r13,QWORD PTR [rsp+0x18]
  409be7:	test   r14d,r14d
  409bea:	je     409d2d <__gcov_sort_n_vals@@Base+0x45d>
  409bf0:	mov    rbx,QWORD PTR [rsp+0x8]
  409bf5:	mov    rcx,QWORD PTR [rsp+0x88]
  409bfd:	lea    rax,[rbx+0x28]
  409c01:	lea    rdx,[rbx+0x17c8]
  409c08:	nop    DWORD PTR [rax+rax*1+0x0]
  409c10:	mov    DWORD PTR [rax],0x0
  409c16:	add    rax,0x18
  409c1a:	mov    QWORD PTR [rax-0x10],rcx
  409c1e:	mov    QWORD PTR [rax-0x8],0x0
  409c26:	cmp    rdx,rax
  409c29:	jne    409c10 <__gcov_sort_n_vals@@Base+0x340>
  409c2b:	mov    rax,QWORD PTR [rsp+0x8]
  409c30:	mov    r8,r13
  409c33:	mov    ebx,0x4000003e
  409c38:	mov    r14d,0x3f
  409c3e:	mov    r12d,0x3d
  409c44:	lea    r11,[rax+0x28]
  409c48:	nop    DWORD PTR [rax+rax*1+0x0]
  409c50:	cmp    QWORD PTR [r8+0x20],0x0
  409c55:	je     409d20 <__gcov_sort_n_vals@@Base+0x450>
  409c5b:	mov    edx,DWORD PTR [r8+0x68]
  409c5f:	test   edx,edx
  409c61:	je     409d20 <__gcov_sort_n_vals@@Base+0x450>
  409c67:	mov    rax,QWORD PTR [r8+0x70]
  409c6b:	sub    edx,0x1
  409c6e:	lea    rdi,[rax+0x8]
  409c72:	lea    r10,[rdi+rdx*8]
  409c76:	jmp    409c90 <__gcov_sort_n_vals@@Base+0x3c0>
  409c78:	nop    DWORD PTR [rax+rax*1+0x0]
  409c80:	mov    rax,rdi
  409c83:	cmp    r10,rdi
  409c86:	je     409d20 <__gcov_sort_n_vals@@Base+0x450>
  409c8c:	add    rdi,0x8
  409c90:	mov    rax,QWORD PTR [rax]
  409c93:	test   rax,rax
  409c96:	je     409c80 <__gcov_sort_n_vals@@Base+0x3b0>
  409c98:	cmp    r8,QWORD PTR [rax]
  409c9b:	jne    409c80 <__gcov_sort_n_vals@@Base+0x3b0>
  409c9d:	mov    edx,DWORD PTR [rax+0x18]
  409ca0:	test   edx,edx
  409ca2:	je     409c80 <__gcov_sort_n_vals@@Base+0x3b0>
  409ca4:	mov    rax,QWORD PTR [rax+0x20]
  409ca8:	sub    edx,0x1
  409cab:	lea    rsi,[rax+0x8]
  409caf:	lea    r9,[rsi+rdx*8]
  409cb3:	jmp    409d0e <__gcov_sort_n_vals@@Base+0x43e>
  409cb5:	nop    DWORD PTR [rax]
  409cb8:	bsr    rdx,rax
  409cbc:	mov    ecx,r14d
  409cbf:	xor    rdx,0x3f
  409cc3:	sub    ecx,edx
  409cc5:	cmp    ecx,0x1
  409cc8:	jbe    409d16 <__gcov_sort_n_vals@@Base+0x446>
  409cca:	mov    ecx,r12d
  409ccd:	mov    r15,rax
  409cd0:	sub    ecx,edx
  409cd2:	shr    r15,cl
  409cd5:	mov    rcx,r15
  409cd8:	mov    r15d,ebx
  409cdb:	and    ecx,0x3
  409cde:	sub    r15d,edx
  409ce1:	lea    edx,[rcx+r15*4]
  409ce5:	lea    rdx,[rdx+rdx*2]
  409ce9:	lea    rdx,[r11+rdx*8]
  409ced:	add    DWORD PTR [rdx],0x1
  409cf0:	add    QWORD PTR [rdx+0x10],rax
  409cf4:	cmp    rax,QWORD PTR [rdx+0x8]
  409cf8:	jge    409cfe <__gcov_sort_n_vals@@Base+0x42e>
  409cfa:	mov    QWORD PTR [rdx+0x8],rax
  409cfe:	mov    rax,rsi
  409d01:	cmp    r9,rsi
  409d04:	je     409c80 <__gcov_sort_n_vals@@Base+0x3b0>
  409d0a:	add    rsi,0x8
  409d0e:	mov    rax,QWORD PTR [rax]
  409d11:	test   rax,rax
  409d14:	jne    409cb8 <__gcov_sort_n_vals@@Base+0x3e8>
  409d16:	mov    edx,eax
  409d18:	jmp    409ce5 <__gcov_sort_n_vals@@Base+0x415>
  409d1a:	nop    WORD PTR [rax+rax*1+0x0]
  409d20:	mov    r8,QWORD PTR [r8+0x8]
  409d24:	test   r8,r8
  409d27:	jne    409c50 <__gcov_sort_n_vals@@Base+0x380>
  409d2d:	lea    rdi,[rip+0x2b88]        # 40c8bc <UnityStrOk@@Base+0x240>
  409d34:	call   403220 <getenv@plt>
  409d39:	test   rax,rax
  409d3c:	je     40a8e8 <__gcov_sort_n_vals@@Base+0x1018>
  409d42:	xor    esi,esi
  409d44:	mov    edx,0xa
  409d49:	mov    rdi,rax
  409d4c:	call   403350 <strtol@plt>
  409d51:	mov    edx,0x0
  409d56:	lea    rdi,[rip+0x2b71]        # 40c8ce <UnityStrOk@@Base+0x252>
  409d5d:	test   eax,eax
  409d5f:	cmovns edx,eax
  409d62:	mov    DWORD PTR [rsp+0x38],edx
  409d66:	call   403220 <getenv@plt>
  409d6b:	mov    rbx,rax
  409d6e:	test   rax,rax
  409d71:	je     40a930 <__gcov_sort_n_vals@@Base+0x1060>
  409d77:	mov    rdi,rax
  409d7a:	call   4032e0 <strlen@plt>
  409d7f:	test   rax,rax
  409d82:	je     40a930 <__gcov_sort_n_vals@@Base+0x1060>
  409d88:	lea    rsi,[rax-0x1]
  409d8c:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  409d91:	mov    QWORD PTR [rsp+0x30],rsi
  409d96:	je     40a925 <__gcov_sort_n_vals@@Base+0x1055>
  409d9c:	mov    QWORD PTR [rsp+0x30],rax
  409da1:	mov    r14,QWORD PTR [rsp+0x30]
  409da6:	lea    rdi,[rbp+r14*1+0x0]
  409dab:	call   403370 <malloc@plt>
  409db0:	mov    rdx,r14
  409db3:	mov    rsi,rbx
  409db6:	mov    rdi,rax
  409db9:	mov    QWORD PTR [rsp+0x10],rax
  409dbe:	call   403360 <memcpy@plt>
  409dc3:	test   r13,r13
  409dc6:	je     409f50 <__gcov_sort_n_vals@@Base+0x680>
  409dcc:	nop    DWORD PTR [rax+0x0]
  409dd0:	mov    QWORD PTR [rip+0x9e1d],0x0        # 413bf8 <__gcov_error_file@@Base+0x10>
  409ddb:	cmp    QWORD PTR [r13+0x60],0x0
  409de0:	mov    QWORD PTR [rip+0x9e05],0x0        # 413bf0 <__gcov_error_file@@Base+0x8>
  409deb:	je     409e38 <__gcov_sort_n_vals@@Base+0x568>
  409ded:	mov    r11d,DWORD PTR [r13+0x68]
  409df1:	test   r11d,r11d
  409df4:	je     409e38 <__gcov_sort_n_vals@@Base+0x568>
  409df6:	xor    r15d,r15d
  409df9:	mov    ebx,0x38e38e39
  409dfe:	xchg   ax,ax
  409e00:	mov    rax,QWORD PTR [r13+0x70]
  409e04:	mov    rcx,QWORD PTR [rax+r15*8]
  409e08:	xor    eax,eax
  409e0a:	add    rcx,0x18
  409e0e:	cmp    QWORD PTR [r13+rax*8+0x20],0x0
  409e14:	je     409e24 <__gcov_sort_n_vals@@Base+0x554>
  409e16:	cmp    rax,0x8
  409e1a:	je     409f80 <__gcov_sort_n_vals@@Base+0x6b0>
  409e20:	add    rcx,0x10
  409e24:	add    rax,0x1
  409e28:	cmp    rax,0x9
  409e2c:	jne    409e0e <__gcov_sort_n_vals@@Base+0x53e>
  409e2e:	add    r15,0x1
  409e32:	cmp    DWORD PTR [r13+0x68],r15d
  409e36:	jne    409e00 <__gcov_sort_n_vals@@Base+0x530>
  409e38:	mov    ebx,DWORD PTR [rsp+0x38]
  409e3c:	mov    rdi,QWORD PTR [rsp+0x10]
  409e41:	mov    rsi,QWORD PTR [r13+0x18]
  409e45:	add    rdi,QWORD PTR [rsp+0x30]
  409e4a:	test   ebx,ebx
  409e4c:	je     409e89 <__gcov_sort_n_vals@@Base+0x5b9>
  409e4e:	movzx  eax,BYTE PTR [rsi]
  409e51:	mov    rdx,rsi
  409e54:	cmp    al,0x2f
  409e56:	jne    409e60 <__gcov_sort_n_vals@@Base+0x590>
  409e58:	movzx  eax,BYTE PTR [rsi+0x1]
  409e5c:	lea    rdx,[rsi+0x1]
  409e60:	mov    ecx,DWORD PTR [rsp+0x38]
  409e64:	jmp    409e85 <__gcov_sort_n_vals@@Base+0x5b5>
  409e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e70:	cmp    al,0x2f
  409e72:	jne    409e7a <__gcov_sort_n_vals@@Base+0x5aa>
  409e74:	sub    ecx,0x1
  409e77:	mov    rsi,rdx
  409e7a:	add    rdx,0x1
  409e7e:	movzx  eax,BYTE PTR [rdx]
  409e81:	test   ecx,ecx
  409e83:	je     409e89 <__gcov_sort_n_vals@@Base+0x5b9>
  409e85:	test   al,al
  409e87:	jne    409e70 <__gcov_sort_n_vals@@Base+0x5a0>
  409e89:	cmp    QWORD PTR [rsp+0x30],0x0
  409e8f:	je     409e9d <__gcov_sort_n_vals@@Base+0x5cd>
  409e91:	cmp    BYTE PTR [rsi],0x2f
  409e94:	je     409e9d <__gcov_sort_n_vals@@Base+0x5cd>
  409e96:	mov    BYTE PTR [rdi],0x2f
  409e99:	add    rdi,0x1
  409e9d:	call   403280 <strcpy@plt>
  409ea2:	mov    rdi,QWORD PTR [rsp+0x10]
  409ea7:	call   409240 <next@@Base+0xd20>
  409eac:	test   eax,eax
  409eae:	je     40a600 <__gcov_sort_n_vals@@Base+0xd30>
  409eb4:	mov    edi,0x1
  409eb9:	call   408fb0 <next@@Base+0xa90>
  409ebe:	test   rax,rax
  409ec1:	je     409fe8 <__gcov_sort_n_vals@@Base+0x718>
  409ec7:	mov    eax,DWORD PTR [rax]
  409ec9:	test   eax,eax
  409ecb:	je     409fe8 <__gcov_sort_n_vals@@Base+0x718>
  409ed1:	cmp    eax,0x67636461
  409ed6:	je     40a760 <__gcov_sort_n_vals@@Base+0xe90>
  409edc:	mov    rsi,QWORD PTR [rsp+0x10]
  409ee1:	lea    rdi,[rip+0x2b48]        # 40ca30 <UnityStrOk@@Base+0x3b4>
  409ee8:	xor    eax,eax
  409eea:	call   409050 <next@@Base+0xb30>
  409eef:	mov    rax,QWORD PTR [rip+0x9d02]        # 413bf8 <__gcov_error_file@@Base+0x10>
  409ef6:	test   rax,rax
  409ef9:	je     409f1c <__gcov_sort_n_vals@@Base+0x64c>
  409efb:	nop    DWORD PTR [rax+rax*1+0x0]
  409f00:	mov    edx,0x9
  409f05:	mov    rsi,rax
  409f08:	mov    rdi,r13
  409f0b:	call   409150 <next@@Base+0xc30>
  409f10:	mov    QWORD PTR [rip+0x9ce1],rax        # 413bf8 <__gcov_error_file@@Base+0x10>
  409f17:	test   rax,rax
  409f1a:	jne    409f00 <__gcov_sort_n_vals@@Base+0x630>
  409f1c:	call   409330 <next@@Base+0xe10>
  409f21:	test   eax,eax
  409f23:	je     409f43 <__gcov_sort_n_vals@@Base+0x673>
  409f25:	lea    rax,[rip+0x2abc]        # 40c9e8 <UnityStrOk@@Base+0x36c>
  409f2c:	lea    rdi,[rip+0x296b]        # 40c89e <UnityStrOk@@Base+0x222>
  409f33:	mov    rsi,QWORD PTR [rsp+0x10]
  409f38:	cmovs  rdi,rax
  409f3c:	xor    eax,eax
  409f3e:	call   409050 <next@@Base+0xb30>
  409f43:	mov    r13,QWORD PTR [r13+0x8]
  409f47:	test   r13,r13
  409f4a:	jne    409dd0 <__gcov_sort_n_vals@@Base+0x500>
  409f50:	mov    rdi,QWORD PTR [rsp+0x10]
  409f55:	add    rsp,0x47e8
  409f5c:	pop    rbx
  409f5d:	pop    rbp
  409f5e:	pop    r12
  409f60:	pop    r13
  409f62:	pop    r14
  409f64:	pop    r15
  409f66:	jmp    403230 <free@plt>
  409f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f70:	mov    r14d,0x1
  409f76:	jmp    409b7c <__gcov_sort_n_vals@@Base+0x2ac>
  409f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f80:	mov    r12d,DWORD PTR [rcx]
  409f83:	mov    eax,r12d
  409f86:	mov    ebp,r12d
  409f89:	imul   ebx
  409f8b:	mov    eax,r12d
  409f8e:	sar    eax,0x1f
  409f91:	sar    edx,1
  409f93:	sub    edx,eax
  409f95:	lea    eax,[rdx+rdx*8]
  409f98:	sub    ebp,eax
  409f9a:	jne    403410 <__fprintf_chk@plt+0x10>
  409fa0:	mov    r14,QWORD PTR [rcx+0x8]
  409fa4:	add    r14,0x8
  409fa8:	test   r12d,r12d
  409fab:	jle    409e2e <__gcov_sort_n_vals@@Base+0x55e>
  409fb1:	nop    DWORD PTR [rax+0x0]
  409fb8:	mov    rdi,r14
  409fbb:	mov    esi,0x8
  409fc0:	add    ebp,0x9
  409fc3:	add    r14,0x48
  409fc7:	call   4098d0 <__gcov_sort_n_vals@@Base>
  409fcc:	cmp    r12d,ebp
  409fcf:	jg     409fb8 <__gcov_sort_n_vals@@Base+0x6e8>
  409fd1:	add    r15,0x1
  409fd5:	cmp    DWORD PTR [r13+0x68],r15d
  409fd9:	jne    409e00 <__gcov_sort_n_vals@@Base+0x530>
  409fdf:	jmp    409e38 <__gcov_sort_n_vals@@Base+0x568>
  409fe4:	nop    DWORD PTR [rax+0x0]
  409fe8:	mov    r15,0x413d40
  409fef:	xor    edx,edx
  409ff1:	xor    esi,esi
  409ff3:	mov    QWORD PTR [r15+0x8],0x0
  409ffb:	mov    rdi,QWORD PTR [r15]
  409ffe:	mov    DWORD PTR [r15+0x1c],0xffffffff
  40a006:	lea    r15,[rsp+0x1840]
  40a00e:	call   403380 <fseek@plt>
  40a013:	xor    eax,eax
  40a015:	mov    ecx,0x2f9
  40a01a:	mov    rdi,r15
  40a01d:	rep stos QWORD PTR es:[rdi],rax
  40a020:	cmp    QWORD PTR [r13+0x20],0x0
  40a025:	je     40a8a1 <__gcov_sort_n_vals@@Base+0xfd1>
  40a02b:	mov    DWORD PTR [rsp+0x44],0x0
  40a033:	mov    DWORD PTR [rsp+0x40],0x0
  40a03b:	mov    eax,DWORD PTR [rsp+0x3c]
  40a03f:	xor    esi,esi
  40a041:	test   eax,eax
  40a043:	je     40a2bb <__gcov_sort_n_vals@@Base+0x9eb>
  40a049:	mov    rax,QWORD PTR [rsp+0x88]
  40a051:	mov    rcx,QWORD PTR [rsp+0x1860]
  40a059:	mov    rdi,QWORD PTR [rsp+0x1858]
  40a061:	mov    rdx,QWORD PTR [rsp+0x80]
  40a069:	add    rcx,rax
  40a06c:	add    rdx,QWORD PTR [rsp+0x1850]
  40a074:	nop    DWORD PTR [rax+0x0]
  40a078:	mov    esi,DWORD PTR [rsp+0x78]
  40a07c:	mov    QWORD PTR [rsp+0x1850],rdx
  40a084:	mov    DWORD PTR [rsp+0x1848],esi
  40a08b:	cmp    rax,rdi
  40a08e:	jle    40a098 <__gcov_sort_n_vals@@Base+0x7c8>
  40a090:	mov    QWORD PTR [rsp+0x1858],rax
  40a098:	mov    rbx,QWORD PTR [rsp+0x8]
  40a09d:	lea    rax,[r15+0x28]
  40a0a1:	mov    QWORD PTR [rsp+0x1860],rcx
  40a0a9:	mov    ecx,0x2f4
  40a0ae:	mov    rdi,rax
  40a0b1:	lea    rsi,[rbx+0x28]
  40a0b5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a0b8:	mov    eax,DWORD PTR [rsp+0x48]
  40a0bc:	cmp    DWORD PTR [rsp+0x44],0x0
  40a0c1:	mov    DWORD PTR [rsp+0x1840],eax
  40a0c8:	je     40a8b8 <__gcov_sort_n_vals@@Base+0xfe8>
  40a0ce:	xchg   ax,ax
  40a0d0:	mov    edi,DWORD PTR [rsp+0x40]
  40a0d4:	test   edi,edi
  40a0d6:	jne    40a893 <__gcov_sort_n_vals@@Base+0xfc3>
  40a0dc:	mov    rsi,r15
  40a0df:	mov    edi,0xa3000000
  40a0e4:	mov    ebx,0xa3000000
  40a0e9:	call   409400 <next@@Base+0xee0>
  40a0ee:	mov    rbp,QWORD PTR [rip+0x9afb]        # 413bf0 <__gcov_error_file@@Base+0x8>
  40a0f5:	test   rbp,rbp
  40a0f8:	je     40a126 <__gcov_sort_n_vals@@Base+0x856>
  40a0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40a100:	lea    rsi,[rbp+0x8]
  40a104:	mov    edi,ebx
  40a106:	call   409400 <next@@Base+0xee0>
  40a10b:	mov    rdi,QWORD PTR [rip+0x9ade]        # 413bf0 <__gcov_error_file@@Base+0x8>
  40a112:	mov    rbp,QWORD PTR [rdi]
  40a115:	call   403230 <free@plt>
  40a11a:	mov    QWORD PTR [rip+0x9acf],rbp        # 413bf0 <__gcov_error_file@@Base+0x8>
  40a121:	test   rbp,rbp
  40a124:	jne    40a100 <__gcov_sort_n_vals@@Base+0x830>
  40a126:	mov    esi,DWORD PTR [r13+0x68]
  40a12a:	xor    ebx,ebx
  40a12c:	test   esi,esi
  40a12e:	jne    40a16f <__gcov_sort_n_vals@@Base+0x89f>
  40a130:	jmp    40a720 <__gcov_sort_n_vals@@Base+0xe50>
  40a135:	nop    DWORD PTR [rax]
  40a138:	mov    rdx,QWORD PTR [r13+0x70]
  40a13c:	mov    eax,ebx
  40a13e:	mov    edi,0x2
  40a143:	mov    rbp,QWORD PTR [rdx+rax*8]
  40a147:	test   rbp,rbp
  40a14a:	je     40a156 <__gcov_sort_n_vals@@Base+0x886>
  40a14c:	cmp    QWORD PTR [rbp+0x0],r13
  40a150:	je     40a738 <__gcov_sort_n_vals@@Base+0xe68>
  40a156:	call   408f60 <next@@Base+0xa40>
  40a15b:	mov    QWORD PTR [rax],0x1000000
  40a162:	add    ebx,0x1
  40a165:	cmp    ebx,DWORD PTR [r13+0x68]
  40a169:	je     40a720 <__gcov_sort_n_vals@@Base+0xe50>
  40a16f:	mov    rbp,QWORD PTR [rip+0x9a82]        # 413bf8 <__gcov_error_file@@Base+0x10>
  40a176:	test   rbp,rbp
  40a179:	je     40a138 <__gcov_sort_n_vals@@Base+0x868>
  40a17b:	cmp    DWORD PTR [rbp+0x8],ebx
  40a17e:	jne    40a138 <__gcov_sort_n_vals@@Base+0x868>
  40a180:	mov    edi,0x2
  40a185:	add    rbp,0x10
  40a189:	call   408f60 <next@@Base+0xa40>
  40a18e:	mov    DWORD PTR [rsp+0x18],0x1
  40a196:	movabs rsi,0x301000000
  40a1a0:	mov    QWORD PTR [rax],rsi
  40a1a3:	mov    r12d,DWORD PTR [rbp+0x8]
  40a1a7:	mov    edi,0x1
  40a1ac:	mov    r14d,0x1a10000
  40a1b2:	add    rbp,0x18
  40a1b6:	call   408f60 <next@@Base+0xa40>
  40a1bb:	mov    edi,0x1
  40a1c0:	mov    DWORD PTR [rax],r12d
  40a1c3:	mov    r12d,DWORD PTR [rbp-0xc]
  40a1c7:	call   408f60 <next@@Base+0xa40>
  40a1cc:	mov    edi,0x1
  40a1d1:	mov    DWORD PTR [rax],r12d
  40a1d4:	mov    r12d,DWORD PTR [rbp-0x8]
  40a1d8:	call   408f60 <next@@Base+0xa40>
  40a1dd:	mov    DWORD PTR [rsp+0x20],ebx
  40a1e1:	mov    ebx,r14d
  40a1e4:	mov    DWORD PTR [rax],r12d
  40a1e7:	lea    r12,[r13+0x20]
  40a1eb:	mov    QWORD PTR [rsp+0x28],r13
  40a1f0:	jmp    40a20e <__gcov_sort_n_vals@@Base+0x93e>
  40a1f2:	nop    WORD PTR [rax+rax*1+0x0]
  40a1f8:	add    ebx,0x20000
  40a1fe:	add    r12,0x8
  40a202:	cmp    ebx,0x1b30000
  40a208:	je     40a6e0 <__gcov_sort_n_vals@@Base+0xe10>
  40a20e:	cmp    QWORD PTR [r12],0x0
  40a213:	je     40a1f8 <__gcov_sort_n_vals@@Base+0x928>
  40a215:	mov    r13d,DWORD PTR [rbp+0x0]
  40a219:	mov    edi,0x2
  40a21e:	call   408f60 <next@@Base+0xa40>
  40a223:	mov    r15,QWORD PTR [rbp+0x8]
  40a227:	lea    esi,[r13+r13*1+0x0]
  40a22c:	mov    DWORD PTR [rax],ebx
  40a22e:	mov    DWORD PTR [rax+0x4],esi
  40a231:	lea    eax,[r13-0x1]
  40a235:	lea    r14,[r15+rax*8+0x8]
  40a23a:	test   r13d,r13d
  40a23d:	je     40a25a <__gcov_sort_n_vals@@Base+0x98a>
  40a23f:	nop
  40a240:	add    r15,0x8
  40a244:	mov    r13,QWORD PTR [r15-0x8]
  40a248:	mov    edi,0x2
  40a24d:	call   408f60 <next@@Base+0xa40>
  40a252:	mov    QWORD PTR [rax],r13
  40a255:	cmp    r15,r14
  40a258:	jne    40a240 <__gcov_sort_n_vals@@Base+0x970>
  40a25a:	add    rbp,0x10
  40a25e:	jmp    40a1f8 <__gcov_sort_n_vals@@Base+0x928>
  40a260:	mov    r15,QWORD PTR [rsp+0x68]
  40a265:	test   eax,eax
  40a267:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40a26d:	mov    QWORD PTR [r15+0x8],0x0
  40a275:	mov    rdi,QWORD PTR [r15]
  40a278:	xor    edx,edx
  40a27a:	xor    esi,esi
  40a27c:	mov    DWORD PTR [r15+0x1c],0xffffffff
  40a284:	call   403380 <fseek@plt>
  40a289:	mov    r9d,DWORD PTR [rsp+0x40]
  40a28e:	test   r9d,r9d
  40a291:	je     40aed7 <__gcov_sort_n_vals@@Base+0x1607>
  40a297:	cmp    QWORD PTR [r13+0x20],0x0
  40a29c:	mov    esi,DWORD PTR [rsp+0x184c]
  40a2a3:	je     40a870 <__gcov_sort_n_vals@@Base+0xfa0>
  40a2a9:	mov    r8d,DWORD PTR [rsp+0x3c]
  40a2ae:	lea    r15,[rsp+0x1840]
  40a2b6:	test   r8d,r8d
  40a2b9:	jne    40a2c5 <__gcov_sort_n_vals@@Base+0x9f5>
  40a2bb:	lea    eax,[rsi+0x1]
  40a2be:	mov    DWORD PTR [rsp+0x184c],eax
  40a2c5:	mov    rax,QWORD PTR [rsp+0x88]
  40a2cd:	mov    rcx,QWORD PTR [rsp+0x1860]
  40a2d5:	mov    rdx,QWORD PTR [rsp+0x80]
  40a2dd:	mov    rdi,QWORD PTR [rsp+0x1858]
  40a2e5:	add    rdx,QWORD PTR [rsp+0x1850]
  40a2ed:	add    rcx,rax
  40a2f0:	test   esi,esi
  40a2f2:	je     40a078 <__gcov_sort_n_vals@@Base+0x7a8>
  40a2f8:	mov    QWORD PTR [rsp+0x1850],rdx
  40a300:	cmp    rax,rdi
  40a303:	jle    40a30d <__gcov_sort_n_vals@@Base+0xa3d>
  40a305:	mov    QWORD PTR [rsp+0x1858],rax
  40a30d:	lea    rdi,[rsp+0x3010]
  40a315:	xor    eax,eax
  40a317:	xor    r10d,r10d
  40a31a:	xor    esi,esi
  40a31c:	mov    QWORD PTR [rsp+0x1860],rcx
  40a324:	mov    ecx,0x2f4
  40a329:	lea    rbx,[r15+0x17b0]
  40a330:	xor    edx,edx
  40a332:	mov    QWORD PTR [rsp+0x18],rdi
  40a337:	mov    r8d,0xfb
  40a33d:	rep stos QWORD PTR es:[rdi],rax
  40a340:	mov    rax,QWORD PTR [rsp+0x8]
  40a345:	mov    edi,0xfb
  40a34a:	add    rax,0x28
  40a34e:	mov    QWORD PTR [rsp+0x20],rax
  40a353:	nop    DWORD PTR [rax+rax*1+0x0]
  40a358:	mov    r9d,DWORD PTR [rbx]
  40a35b:	mov    rcx,QWORD PTR [rbx+0x10]
  40a35f:	test   r9d,r9d
  40a362:	je     40a49d <__gcov_sort_n_vals@@Base+0xbcd>
  40a368:	mov    rbp,QWORD PTR [rbx+0x8]
  40a36c:	mov    QWORD PTR [rsp+0x28],rbx
  40a371:	jmp    40a433 <__gcov_sort_n_vals@@Base+0xb63>
  40a376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a380:	jbe    40aecf <__gcov_sort_n_vals@@Base+0x15ff>
  40a386:	mov    eax,r9d
  40a389:	mov    r12d,esi
  40a38c:	imul   rax,r10
  40a390:	cqo    
  40a392:	idiv   r12
  40a395:	mov    r11,rax
  40a398:	sub    esi,r9d
  40a39b:	mov    r14d,r9d
  40a39e:	sub    r10,r11
  40a3a1:	xor    r9d,r9d
  40a3a4:	xor    r12d,r12d
  40a3a7:	lea    rax,[r11+rcx*1]
  40a3ab:	test   rbx,rbx
  40a3ae:	je     40a48d <__gcov_sort_n_vals@@Base+0xbbd>
  40a3b4:	bsr    rdx,rbx
  40a3b8:	mov    ecx,0x3f
  40a3bd:	xor    rdx,0x3f
  40a3c1:	sub    ecx,edx
  40a3c3:	cmp    ecx,0x1
  40a3c6:	jbe    40a48d <__gcov_sort_n_vals@@Base+0xbbd>
  40a3cc:	mov    ecx,0x3d
  40a3d1:	mov    r11,rbx
  40a3d4:	sub    ecx,edx
  40a3d6:	shr    r11,cl
  40a3d9:	mov    rcx,r11
  40a3dc:	mov    r11d,0x4000003e
  40a3e2:	and    ecx,0x3
  40a3e5:	sub    r11d,edx
  40a3e8:	lea    edx,[rcx+r11*4]
  40a3ec:	movsxd rcx,edx
  40a3ef:	lea    r11,[rcx+rcx*2]
  40a3f3:	shl    r11,0x3
  40a3f7:	add    QWORD PTR [rsp+r11*1+0x3020],rax
  40a3ff:	mov    rax,QWORD PTR [rsp+r11*1+0x3018]
  40a407:	add    DWORD PTR [rsp+r11*1+0x3010],r14d
  40a40f:	cmp    rax,rbx
  40a412:	jg     40a419 <__gcov_sort_n_vals@@Base+0xb49>
  40a414:	test   rax,rax
  40a417:	jne    40a425 <__gcov_sort_n_vals@@Base+0xb55>
  40a419:	lea    rax,[rcx+rcx*2]
  40a41d:	mov    QWORD PTR [rsp+rax*8+0x3018],rbx
  40a425:	cmp    esi,0x1
  40a428:	mov    rcx,r12
  40a42b:	sbb    edi,0x0
  40a42e:	test   r9d,r9d
  40a431:	je     40a498 <__gcov_sort_n_vals@@Base+0xbc8>
  40a433:	test   esi,esi
  40a435:	je     40a510 <__gcov_sort_n_vals@@Base+0xc40>
  40a43b:	movsxd rax,edi
  40a43e:	mov    rbx,QWORD PTR [rsp+0x20]
  40a443:	lea    rax,[rax+rax*2]
  40a447:	lea    rax,[rbx+rax*8]
  40a44b:	mov    rbx,QWORD PTR [rax+0x8]
  40a44f:	add    rbx,rbp
  40a452:	cmp    esi,r9d
  40a455:	jae    40a380 <__gcov_sort_n_vals@@Base+0xab0>
  40a45b:	mov    eax,esi
  40a45d:	mov    r11d,r9d
  40a460:	mov    r14d,esi
  40a463:	sub    r9d,esi
  40a466:	imul   rax,rcx
  40a46a:	xor    esi,esi
  40a46c:	cqo    
  40a46e:	idiv   r11
  40a471:	mov    r11,r10
  40a474:	xor    r10d,r10d
  40a477:	sub    rcx,rax
  40a47a:	mov    r12,rcx
  40a47d:	mov    rcx,rax
  40a480:	lea    rax,[r11+rcx*1]
  40a484:	test   rbx,rbx
  40a487:	jne    40a3b4 <__gcov_sort_n_vals@@Base+0xae4>
  40a48d:	mov    edx,ebx
  40a48f:	jmp    40a3ec <__gcov_sort_n_vals@@Base+0xb1c>
  40a494:	nop    DWORD PTR [rax+0x0]
  40a498:	mov    rbx,QWORD PTR [rsp+0x28]
  40a49d:	sub    r8d,0x1
  40a4a1:	sub    rbx,0x18
  40a4a5:	cmp    r8d,0xffffffff
  40a4a9:	jne    40a358 <__gcov_sort_n_vals@@Base+0xa88>
  40a4af:	cmp    esi,0x1
  40a4b2:	adc    edi,0xffffffff
  40a4b5:	test   edi,edi
  40a4b7:	js     40a4dd <__gcov_sort_n_vals@@Base+0xc0d>
  40a4b9:	movsxd rdi,edi
  40a4bc:	mov    rbx,QWORD PTR [rsp+0x8]
  40a4c1:	lea    rcx,[rsp+0x58]
  40a4c6:	lea    rax,[rdi+rdi*2]
  40a4ca:	lea    rax,[rbx+rax*8]
  40a4ce:	xchg   ax,ax
  40a4d0:	add    r10,QWORD PTR [rax+0x38]
  40a4d4:	sub    rax,0x18
  40a4d8:	cmp    rcx,rax
  40a4db:	jne    40a4d0 <__gcov_sort_n_vals@@Base+0xc00>
  40a4dd:	movsxd rdx,edx
  40a4e0:	mov    ecx,0x2f4
  40a4e5:	mov    rsi,QWORD PTR [rsp+0x18]
  40a4ea:	lea    rdi,[rsp+0x1868]
  40a4f2:	lea    rax,[rdx+rdx*2]
  40a4f6:	add    QWORD PTR [rsp+rax*8+0x3020],r10
  40a4fe:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a501:	jmp    40a0b8 <__gcov_sort_n_vals@@Base+0x7e8>
  40a506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a510:	test   edi,edi
  40a512:	js     40a55b <__gcov_sort_n_vals@@Base+0xc8b>
  40a514:	movsxd rax,edi
  40a517:	lea    r11,[rax+rax*2]
  40a51b:	mov    rax,QWORD PTR [rsp+0x20]
  40a520:	shl    r11,0x3
  40a524:	add    rax,r11
  40a527:	mov    esi,DWORD PTR [rax]
  40a529:	test   esi,esi
  40a52b:	jne    40a5f0 <__gcov_sort_n_vals@@Base+0xd20>
  40a531:	mov    rax,QWORD PTR [rsp+0x8]
  40a536:	lea    r11,[rax+r11*1+0x10]
  40a53b:	jmp    40a553 <__gcov_sort_n_vals@@Base+0xc83>
  40a53d:	nop    DWORD PTR [rax]
  40a540:	mov    rax,r11
  40a543:	sub    r11,0x18
  40a547:	mov    esi,DWORD PTR [r11+0x18]
  40a54b:	test   esi,esi
  40a54d:	jne    40a5f0 <__gcov_sort_n_vals@@Base+0xd20>
  40a553:	sub    edi,0x1
  40a556:	cmp    edi,0xffffffff
  40a559:	jne    40a540 <__gcov_sort_n_vals@@Base+0xc70>
  40a55b:	movsxd r8,r8d
  40a55e:	lea    rax,[r8+r8*2]
  40a562:	shl    rax,0x3
  40a566:	add    DWORD PTR [rsp+rax*1+0x3010],r9d
  40a56e:	add    QWORD PTR [rsp+rax*1+0x3020],rcx
  40a576:	mov    rax,QWORD PTR [rsp+rax*1+0x3018]
  40a57e:	test   rax,rax
  40a581:	je     40a588 <__gcov_sort_n_vals@@Base+0xcb8>
  40a583:	cmp    rbp,rax
  40a586:	jge    40a594 <__gcov_sort_n_vals@@Base+0xcc4>
  40a588:	lea    rax,[r8+r8*2]
  40a58c:	mov    QWORD PTR [rsp+rax*8+0x3018],rbp
  40a594:	lea    rax,[r8+r8*2]
  40a598:	mov    rbx,QWORD PTR [rsp+0x18]
  40a59d:	shl    rax,0x3
  40a5a1:	lea    rcx,[rbx+rax*1]
  40a5a5:	lea    rsi,[r15+rax*1]
  40a5a9:	mov    r8,rcx
  40a5ac:	sub    r8,rax
  40a5af:	jmp    40a5e4 <__gcov_sort_n_vals@@Base+0xd14>
  40a5b1:	nop    DWORD PTR [rax+0x0]
  40a5b8:	mov    rdi,QWORD PTR [rcx-0x10]
  40a5bc:	mov    eax,DWORD PTR [rsi+0x10]
  40a5bf:	add    DWORD PTR [rcx-0x18],eax
  40a5c2:	mov    rax,QWORD PTR [rsi+0x20]
  40a5c6:	add    QWORD PTR [rcx-0x8],rax
  40a5ca:	mov    rax,QWORD PTR [rsi+0x18]
  40a5ce:	test   rdi,rdi
  40a5d1:	je     40a5d8 <__gcov_sort_n_vals@@Base+0xd08>
  40a5d3:	cmp    rdi,rax
  40a5d6:	jle    40a5dc <__gcov_sort_n_vals@@Base+0xd0c>
  40a5d8:	mov    QWORD PTR [rcx-0x10],rax
  40a5dc:	sub    rcx,0x18
  40a5e0:	sub    rsi,0x18
  40a5e4:	cmp    r8,rcx
  40a5e7:	jne    40a5b8 <__gcov_sort_n_vals@@Base+0xce8>
  40a5e9:	jmp    40a4dd <__gcov_sort_n_vals@@Base+0xc0d>
  40a5ee:	xchg   ax,ax
  40a5f0:	mov    r10,QWORD PTR [rax+0x10]
  40a5f4:	jmp    40a44b <__gcov_sort_n_vals@@Base+0xb7b>
  40a5f9:	nop    DWORD PTR [rax+0x0]
  40a600:	mov    rbx,QWORD PTR [rsp+0x10]
  40a605:	movzx  eax,BYTE PTR [rbx]
  40a608:	cmp    al,0x2f
  40a60a:	jne    40a617 <__gcov_sort_n_vals@@Base+0xd47>
  40a60c:	mov    rax,rbx
  40a60f:	lea    rbx,[rbx+0x1]
  40a613:	movzx  eax,BYTE PTR [rax+0x1]
  40a617:	mov    rbp,QWORD PTR [rsp+0x10]
  40a61c:	test   al,al
  40a61e:	jne    40a633 <__gcov_sort_n_vals@@Base+0xd63>
  40a620:	jmp    40a660 <__gcov_sort_n_vals@@Base+0xd90>
  40a622:	nop    WORD PTR [rax+rax*1+0x0]
  40a628:	add    rbx,0x1
  40a62c:	movzx  eax,BYTE PTR [rbx]
  40a62f:	test   al,al
  40a631:	je     40a660 <__gcov_sort_n_vals@@Base+0xd90>
  40a633:	cmp    al,0x2f
  40a635:	jne    40a628 <__gcov_sort_n_vals@@Base+0xd58>
  40a637:	mov    BYTE PTR [rbx],0x0
  40a63a:	xor    esi,esi
  40a63c:	mov    rdi,rbp
  40a63f:	call   4033c0 <access@plt>
  40a644:	cmp    eax,0xffffffff
  40a647:	je     40a680 <__gcov_sort_n_vals@@Base+0xdb0>
  40a649:	mov    BYTE PTR [rbx],0x2f
  40a64c:	add    rbx,0x1
  40a650:	movzx  eax,BYTE PTR [rbx]
  40a653:	test   al,al
  40a655:	jne    40a633 <__gcov_sort_n_vals@@Base+0xd63>
  40a657:	nop    WORD PTR [rax+rax*1+0x0]
  40a660:	mov    rdi,QWORD PTR [rsp+0x10]
  40a665:	call   409240 <next@@Base+0xd20>
  40a66a:	test   eax,eax
  40a66c:	jne    409eb4 <__gcov_sort_n_vals@@Base+0x5e4>
  40a672:	mov    rcx,QWORD PTR [rsp+0x10]
  40a677:	lea    rdx,[rip+0x226f]        # 40c8ed <UnityStrOk@@Base+0x271>
  40a67e:	jmp    40a6bf <__gcov_sort_n_vals@@Base+0xdef>
  40a680:	mov    esi,0x1ed
  40a685:	mov    rdi,rbp
  40a688:	call   403290 <mkdir@plt>
  40a68d:	cmp    eax,0xffffffff
  40a690:	jne    40a649 <__gcov_sort_n_vals@@Base+0xd79>
  40a692:	call   403260 <__errno_location@plt>
  40a697:	cmp    DWORD PTR [rax],0x11
  40a69a:	je     40a649 <__gcov_sort_n_vals@@Base+0xd79>
  40a69c:	mov    r14,QWORD PTR [rsp+0x10]
  40a6a1:	lea    rdi,[rip+0x2360]        # 40ca08 <UnityStrOk@@Base+0x38c>
  40a6a8:	xor    eax,eax
  40a6aa:	mov    rsi,r14
  40a6ad:	call   409050 <next@@Base+0xb30>
  40a6b2:	mov    BYTE PTR [rbx],0x2f
  40a6b5:	mov    rcx,r14
  40a6b8:	lea    rdx,[rip+0x221b]        # 40c8da <UnityStrOk@@Base+0x25e>
  40a6bf:	mov    rax,QWORD PTR [rip+0x5932]        # 40fff8 <stderr@GLIBC_2.2.5>
  40a6c6:	mov    esi,0x1
  40a6cb:	mov    rdi,QWORD PTR [rax]
  40a6ce:	xor    eax,eax
  40a6d0:	call   403400 <__fprintf_chk@plt>
  40a6d5:	jmp    409f43 <__gcov_sort_n_vals@@Base+0x673>
  40a6da:	nop    WORD PTR [rax+rax*1+0x0]
  40a6e0:	mov    ecx,DWORD PTR [rsp+0x18]
  40a6e4:	mov    ebx,DWORD PTR [rsp+0x20]
  40a6e8:	mov    r13,QWORD PTR [rsp+0x28]
  40a6ed:	test   ecx,ecx
  40a6ef:	je     40a162 <__gcov_sort_n_vals@@Base+0x892>
  40a6f5:	mov    rsi,QWORD PTR [rip+0x94fc]        # 413bf8 <__gcov_error_file@@Base+0x10>
  40a6fc:	mov    edx,0x9
  40a701:	mov    rdi,r13
  40a704:	add    ebx,0x1
  40a707:	call   409150 <next@@Base+0xc30>
  40a70c:	mov    QWORD PTR [rip+0x94e5],rax        # 413bf8 <__gcov_error_file@@Base+0x10>
  40a713:	cmp    ebx,DWORD PTR [r13+0x68]
  40a717:	jne    40a16f <__gcov_sort_n_vals@@Base+0x89f>
  40a71d:	nop    DWORD PTR [rax]
  40a720:	mov    edi,0x1
  40a725:	call   408f60 <next@@Base+0xa40>
  40a72a:	mov    DWORD PTR [rax],0x0
  40a730:	jmp    409eef <__gcov_sort_n_vals@@Base+0x61f>
  40a735:	nop    DWORD PTR [rax]
  40a738:	call   408f60 <next@@Base+0xa40>
  40a73d:	mov    DWORD PTR [rsp+0x18],0x0
  40a745:	movabs rsi,0x301000000
  40a74f:	mov    QWORD PTR [rax],rsi
  40a752:	jmp    40a1a3 <__gcov_sort_n_vals@@Base+0x8d3>
  40a757:	nop    WORD PTR [rax+rax*1+0x0]
  40a760:	mov    edi,0x1
  40a765:	call   408fb0 <next@@Base+0xa90>
  40a76a:	test   rax,rax
  40a76d:	je     40ad80 <__gcov_sort_n_vals@@Base+0x14b0>
  40a773:	mov    esi,DWORD PTR [rax]
  40a775:	cmp    esi,0x4138342a
  40a77b:	je     40a793 <__gcov_sort_n_vals@@Base+0xec3>
  40a77d:	mov    rdx,QWORD PTR [rsp+0x10]
  40a782:	lea    rdi,[r13+0x18]
  40a786:	call   4091c0 <next@@Base+0xca0>
  40a78b:	test   eax,eax
  40a78d:	je     409eef <__gcov_sort_n_vals@@Base+0x61f>
  40a793:	mov    edi,0x1
  40a798:	call   408fb0 <next@@Base+0xa90>
  40a79d:	test   rax,rax
  40a7a0:	je     40ad90 <__gcov_sort_n_vals@@Base+0x14c0>
  40a7a6:	mov    eax,DWORD PTR [rax]
  40a7a8:	cmp    DWORD PTR [r13+0x10],eax
  40a7ac:	jne    409fe8 <__gcov_sort_n_vals@@Base+0x718>
  40a7b2:	mov    DWORD PTR [rsp+0x40],0x0
  40a7ba:	mov    r15,0x413d40
  40a7c1:	lea    rbp,[rip+0x9428]        # 413bf0 <__gcov_error_file@@Base+0x8>
  40a7c8:	lea    rbx,[rsp+0x3010]
  40a7d0:	lea    r12,[rsp+0x1840]
  40a7d8:	mov    edi,0x1
  40a7dd:	mov    r14d,DWORD PTR [r15+0xc]
  40a7e1:	add    r14d,DWORD PTR [r15+0x8]
  40a7e5:	call   408fb0 <next@@Base+0xa90>
  40a7ea:	test   rax,rax
  40a7ed:	je     40aa10 <__gcov_sort_n_vals@@Base+0x1140>
  40a7f3:	mov    eax,DWORD PTR [rax]
  40a7f5:	cmp    eax,0xa3000000
  40a7fa:	jne    40aeb0 <__gcov_sort_n_vals@@Base+0x15e0>
  40a800:	mov    edi,0x1
  40a805:	call   408fb0 <next@@Base+0xa90>
  40a80a:	mov    rdi,rbx
  40a80d:	call   4095e0 <next@@Base+0x10c0>
  40a812:	cmp    QWORD PTR [r15],0x0
  40a816:	je     40a9f1 <__gcov_sort_n_vals@@Base+0x1121>
  40a81c:	mov    eax,DWORD PTR [r15+0x18]
  40a820:	test   eax,eax
  40a822:	jne    40a9e9 <__gcov_sort_n_vals@@Base+0x1119>
  40a828:	mov    r10d,DWORD PTR [rsp+0x40]
  40a82d:	test   r10d,r10d
  40a830:	jne    40ada0 <__gcov_sort_n_vals@@Base+0x14d0>
  40a836:	mov    eax,DWORD PTR [rsp+0x48]
  40a83a:	cmp    eax,DWORD PTR [rsp+0x3010]
  40a841:	jne    40a7d8 <__gcov_sort_n_vals@@Base+0xf08>
  40a843:	mov    eax,DWORD PTR [rsp+0x3018]
  40a84a:	cmp    DWORD PTR [rsp+0x78],eax
  40a84e:	jne    40a7d8 <__gcov_sort_n_vals@@Base+0xf08>
  40a850:	endbr64 
  40a854:	mov    ecx,0x2f9
  40a859:	mov    rdi,r12
  40a85c:	mov    rsi,rbx
  40a85f:	mov    DWORD PTR [rsp+0x40],r14d
  40a864:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a867:	jmp    40a7d8 <__gcov_sort_n_vals@@Base+0xf08>
  40a86c:	nop    DWORD PTR [rax+0x0]
  40a870:	test   esi,esi
  40a872:	jne    40ae98 <__gcov_sort_n_vals@@Base+0x15c8>
  40a878:	mov    eax,DWORD PTR [rsp+0x48]
  40a87c:	mov    edx,DWORD PTR [rsp+0x44]
  40a880:	lea    r15,[rsp+0x1840]
  40a888:	mov    DWORD PTR [rsp+0x1840],eax
  40a88f:	test   edx,edx
  40a891:	je     40a8b8 <__gcov_sort_n_vals@@Base+0xfe8>
  40a893:	mov    edi,DWORD PTR [rsp+0x40]
  40a897:	call   409880 <next@@Base+0x1360>
  40a89c:	jmp    40a0dc <__gcov_sort_n_vals@@Base+0x80c>
  40a8a1:	mov    eax,DWORD PTR [rsp+0x48]
  40a8a5:	mov    DWORD PTR [rsp+0x40],0x0
  40a8ad:	mov    DWORD PTR [rsp+0x1840],eax
  40a8b4:	nop    DWORD PTR [rax+0x0]
  40a8b8:	movabs rbx,0x4138342a67636461
  40a8c2:	mov    edi,0x2
  40a8c7:	call   408f60 <next@@Base+0xa40>
  40a8cc:	mov    edi,0x1
  40a8d1:	mov    QWORD PTR [rax],rbx
  40a8d4:	mov    ebx,DWORD PTR [r13+0x10]
  40a8d8:	call   408f60 <next@@Base+0xa40>
  40a8dd:	mov    DWORD PTR [rax],ebx
  40a8df:	jmp    40a0d0 <__gcov_sort_n_vals@@Base+0x800>
  40a8e4:	nop    DWORD PTR [rax+0x0]
  40a8e8:	lea    rdi,[rip+0x1fdf]        # 40c8ce <UnityStrOk@@Base+0x252>
  40a8ef:	call   403220 <getenv@plt>
  40a8f4:	mov    rbx,rax
  40a8f7:	test   rax,rax
  40a8fa:	je     40a950 <__gcov_sort_n_vals@@Base+0x1080>
  40a8fc:	mov    rdi,rax
  40a8ff:	call   4032e0 <strlen@plt>
  40a904:	test   rax,rax
  40a907:	je     40a950 <__gcov_sort_n_vals@@Base+0x1080>
  40a909:	lea    rsi,[rax-0x1]
  40a90d:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  40a912:	mov    DWORD PTR [rsp+0x38],0x0
  40a91a:	mov    QWORD PTR [rsp+0x30],rsi
  40a91f:	jne    409d9c <__gcov_sort_n_vals@@Base+0x4cc>
  40a925:	test   rsi,rsi
  40a928:	jne    409da1 <__gcov_sort_n_vals@@Base+0x4d1>
  40a92e:	xchg   ax,ax
  40a930:	mov    r12d,DWORD PTR [rsp+0x38]
  40a935:	lea    rbx,[rip+0x1f7e]        # 40c8ba <UnityStrOk@@Base+0x23e>
  40a93c:	mov    QWORD PTR [rsp+0x30],0x1
  40a945:	test   r12d,r12d
  40a948:	jne    409da1 <__gcov_sort_n_vals@@Base+0x4d1>
  40a94e:	xchg   ax,ax
  40a950:	mov    rdi,rbp
  40a953:	call   403370 <malloc@plt>
  40a958:	mov    DWORD PTR [rsp+0x38],0x0
  40a960:	mov    QWORD PTR [rsp+0x10],rax
  40a965:	mov    QWORD PTR [rsp+0x30],0x0
  40a96e:	jmp    409dc3 <__gcov_sort_n_vals@@Base+0x4f3>
  40a973:	mov    edi,0x1
  40a978:	call   408fb0 <next@@Base+0xa90>
  40a97d:	test   rax,rax
  40a980:	je     40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40a986:	xor    r15d,r15d
  40a989:	nop    DWORD PTR [rax+0x0]
  40a990:	mov    ecx,DWORD PTR [rax]
  40a992:	cmp    ebp,r15d
  40a995:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40a99b:	mov    esi,DWORD PTR [rbx]
  40a99d:	lea    eax,[rsi+rsi*1]
  40a9a0:	cmp    eax,ecx
  40a9a2:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40a9a8:	mov    rdi,QWORD PTR [rbx+0x8]
  40a9ac:	add    rbx,0x10
  40a9b0:	call   r14
  40a9b3:	add    ebp,0x20000
  40a9b9:	add    r12,0x8
  40a9bd:	cmp    ebp,0x1b30000
  40a9c3:	jne    40ae58 <__gcov_sort_n_vals@@Base+0x1588>
  40a9c9:	mov    rax,QWORD PTR [rsp+0x68]
  40a9ce:	mov    r15,QWORD PTR [rsp+0x18]
  40a9d3:	cmp    QWORD PTR [rax],0x0
  40a9d7:	je     40a9f1 <__gcov_sort_n_vals@@Base+0x1121>
  40a9d9:	mov    rax,QWORD PTR [rsp+0x68]
  40a9de:	mov    eax,DWORD PTR [rax+0x18]
  40a9e1:	test   eax,eax
  40a9e3:	je     40ac49 <__gcov_sort_n_vals@@Base+0x1379>
  40a9e9:	test   eax,eax
  40a9eb:	js     40ad70 <__gcov_sort_n_vals@@Base+0x14a0>
  40a9f1:	lea    rdx,[rip+0x1e97]        # 40c88f <UnityStrOk@@Base+0x213>
  40a9f8:	mov    rsi,QWORD PTR [rsp+0x10]
  40a9fd:	lea    rdi,[rip+0x1f03]        # 40c907 <UnityStrOk@@Base+0x28b>
  40aa04:	xor    eax,eax
  40aa06:	call   409050 <next@@Base+0xb30>
  40aa0b:	jmp    409eef <__gcov_sort_n_vals@@Base+0x61f>
  40aa10:	mov    DWORD PTR [rsp+0x44],r14d
  40aa15:	xor    eax,eax
  40aa17:	lea    rbx,[rip+0x91da]        # 413bf8 <__gcov_error_file@@Base+0x10>
  40aa1e:	xor    r14d,r14d
  40aa21:	mov    QWORD PTR [rsp+0x68],r15
  40aa26:	mov    QWORD PTR [rsp+0x58],rbx
  40aa2b:	lea    rbx,[r13+0x18]
  40aa2f:	mov    r15,r14
  40aa32:	mov    QWORD PTR [rsp+0x60],rbx
  40aa37:	nop    WORD PTR [rax+rax*1+0x0]
  40aa40:	mov    DWORD PTR [rsp+0x20],r15d
  40aa45:	mov    DWORD PTR [rsp+0x4c],r15d
  40aa4a:	cmp    DWORD PTR [r13+0x68],r15d
  40aa4e:	je     40a260 <__gcov_sort_n_vals@@Base+0x990>
  40aa54:	mov    rdx,QWORD PTR [r13+0x70]
  40aa58:	mov    rbx,QWORD PTR [rdx+r15*8]
  40aa5c:	cmp    eax,0x1000000
  40aa61:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40aa67:	mov    edi,0x1
  40aa6c:	call   408fb0 <next@@Base+0xa90>
  40aa71:	test   rax,rax
  40aa74:	je     40ac49 <__gcov_sort_n_vals@@Base+0x1379>
  40aa7a:	mov    eax,DWORD PTR [rax]
  40aa7c:	test   eax,eax
  40aa7e:	je     40ac49 <__gcov_sort_n_vals@@Base+0x1379>
  40aa84:	cmp    eax,0x3
  40aa87:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40aa8d:	test   rbx,rbx
  40aa90:	je     40aa9b <__gcov_sort_n_vals@@Base+0x11cb>
  40aa92:	cmp    QWORD PTR [rbx],r13
  40aa95:	je     40ade8 <__gcov_sort_n_vals@@Base+0x1518>
  40aa9b:	mov    rdx,QWORD PTR [rsp+0x60]
  40aaa0:	lea    rax,[r13+0x60]
  40aaa4:	xor    ebp,ebp
  40aaa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aab0:	cmp    QWORD PTR [rax],0x1
  40aab4:	sbb    ebp,0xffffffff
  40aab7:	sub    rax,0x8
  40aabb:	cmp    rdx,rax
  40aabe:	jne    40aab0 <__gcov_sort_n_vals@@Base+0x11e0>
  40aac0:	shl    ebp,0x4
  40aac3:	lea    edi,[rbp+0x38]
  40aac6:	mov    rbp,rdi
  40aac9:	call   403370 <malloc@plt>
  40aace:	mov    r12,rax
  40aad1:	test   rax,rax
  40aad4:	je     40ad20 <__gcov_sort_n_vals@@Base+0x1450>
  40aada:	mov    QWORD PTR [rax],0x0
  40aae1:	mov    eax,DWORD PTR [rsp+0x20]
  40aae5:	mov    edi,0x1
  40aaea:	mov    DWORD PTR [r12+0x8],eax
  40aaef:	call   408fb0 <next@@Base+0xa90>
  40aaf4:	test   rax,rax
  40aaf7:	je     40ad50 <__gcov_sort_n_vals@@Base+0x1480>
  40aafd:	mov    eax,DWORD PTR [rax]
  40aaff:	mov    DWORD PTR [r12+0x18],eax
  40ab04:	mov    edi,0x1
  40ab09:	call   408fb0 <next@@Base+0xa90>
  40ab0e:	test   rax,rax
  40ab11:	je     40ad48 <__gcov_sort_n_vals@@Base+0x1478>
  40ab17:	mov    eax,DWORD PTR [rax]
  40ab19:	mov    DWORD PTR [r12+0x1c],eax
  40ab1e:	mov    edi,0x1
  40ab23:	call   408fb0 <next@@Base+0xa90>
  40ab28:	test   rax,rax
  40ab2b:	je     40ad60 <__gcov_sort_n_vals@@Base+0x1490>
  40ab31:	mov    eax,DWORD PTR [rax]
  40ab33:	mov    DWORD PTR [r12+0x20],eax
  40ab38:	xor    ebx,ebx
  40ab3a:	xor    r14d,r14d
  40ab3d:	mov    QWORD PTR [rsp+0x18],r12
  40ab42:	mov    QWORD PTR [rsp+0x50],r15
  40ab47:	jmp    40ab5e <__gcov_sort_n_vals@@Base+0x128e>
  40ab49:	nop    DWORD PTR [rax+0x0]
  40ab50:	add    rbx,0x1
  40ab54:	cmp    rbx,0x9
  40ab58:	je     40ac32 <__gcov_sort_n_vals@@Base+0x1362>
  40ab5e:	cmp    QWORD PTR [r13+rbx*8+0x20],0x0
  40ab64:	mov    ebp,ebx
  40ab66:	je     40ab50 <__gcov_sort_n_vals@@Base+0x1280>
  40ab68:	mov    edi,0x1
  40ab6d:	call   408fb0 <next@@Base+0xa90>
  40ab72:	test   rax,rax
  40ab75:	je     40ac70 <__gcov_sort_n_vals@@Base+0x13a0>
  40ab7b:	mov    edx,ebx
  40ab7d:	shl    edx,0x11
  40ab80:	add    edx,0x1a10000
  40ab86:	cmp    edx,DWORD PTR [rax]
  40ab88:	jne    40ac70 <__gcov_sort_n_vals@@Base+0x13a0>
  40ab8e:	mov    edi,0x1
  40ab93:	call   408fb0 <next@@Base+0xa90>
  40ab98:	test   rax,rax
  40ab9b:	je     40ace0 <__gcov_sort_n_vals@@Base+0x1410>
  40aba1:	mov    ecx,DWORD PTR [rax]
  40aba3:	shr    ecx,1
  40aba5:	lea    edi,[rcx*8+0x0]
  40abac:	mov    r12d,ecx
  40abaf:	mov    DWORD PTR [rsp+0x28],edi
  40abb3:	call   403370 <malloc@plt>
  40abb8:	mov    r15,rax
  40abbb:	test   rax,rax
  40abbe:	je     40ad00 <__gcov_sort_n_vals@@Base+0x1430>
  40abc4:	mov    eax,r14d
  40abc7:	shl    rax,0x4
  40abcb:	add    rax,QWORD PTR [rsp+0x18]
  40abd0:	mov    DWORD PTR [rax+0x28],r12d
  40abd4:	mov    QWORD PTR [rax+0x30],r15
  40abd8:	lea    eax,[r12-0x1]
  40abdd:	lea    rbp,[r15+rax*8+0x8]
  40abe2:	test   r12d,r12d
  40abe5:	jne    40abfc <__gcov_sort_n_vals@@Base+0x132c>
  40abe7:	jmp    40ac20 <__gcov_sort_n_vals@@Base+0x1350>
  40abe9:	nop    DWORD PTR [rax+0x0]
  40abf0:	mov    rax,QWORD PTR [rax]
  40abf3:	mov    QWORD PTR [r15-0x8],rax
  40abf7:	cmp    rbp,r15
  40abfa:	je     40ac20 <__gcov_sort_n_vals@@Base+0x1350>
  40abfc:	mov    edi,0x2
  40ac01:	add    r15,0x8
  40ac05:	call   408fb0 <next@@Base+0xa90>
  40ac0a:	test   rax,rax
  40ac0d:	jne    40abf0 <__gcov_sort_n_vals@@Base+0x1320>
  40ac0f:	xor    eax,eax
  40ac11:	mov    QWORD PTR [r15-0x8],rax
  40ac15:	cmp    rbp,r15
  40ac18:	jne    40abfc <__gcov_sort_n_vals@@Base+0x132c>
  40ac1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac20:	add    rbx,0x1
  40ac24:	add    r14d,0x1
  40ac28:	cmp    rbx,0x9
  40ac2c:	jne    40ab5e <__gcov_sort_n_vals@@Base+0x128e>
  40ac32:	mov    r12,QWORD PTR [rsp+0x18]
  40ac37:	mov    rax,QWORD PTR [rsp+0x58]
  40ac3c:	mov    r15,QWORD PTR [rsp+0x50]
  40ac41:	mov    QWORD PTR [rax],r12
  40ac44:	mov    QWORD PTR [rsp+0x58],r12
  40ac49:	mov    edi,0x1
  40ac4e:	call   408fb0 <next@@Base+0xa90>
  40ac53:	test   rax,rax
  40ac56:	je     40ad18 <__gcov_sort_n_vals@@Base+0x1448>
  40ac5c:	mov    eax,DWORD PTR [rax]
  40ac5e:	add    r15,0x1
  40ac62:	jmp    40aa40 <__gcov_sort_n_vals@@Base+0x1170>
  40ac67:	nop    WORD PTR [rax+rax*1+0x0]
  40ac70:	mov    r12,QWORD PTR [rsp+0x18]
  40ac75:	mov    r15,QWORD PTR [rsp+0x50]
  40ac7a:	lea    rcx,[rip+0x1bed]        # 40c86e <UnityStrOk@@Base+0x1f2>
  40ac81:	mov    edx,DWORD PTR [rsp+0x20]
  40ac85:	mov    rsi,QWORD PTR [rsp+0x10]
  40ac8a:	mov    r8d,ebp
  40ac8d:	xor    eax,eax
  40ac8f:	lea    rdi,[rip+0x1dea]        # 40ca80 <UnityStrOk@@Base+0x404>
  40ac96:	call   409050 <next@@Base+0xb30>
  40ac9b:	mov    edx,ebx
  40ac9d:	mov    rsi,r12
  40aca0:	mov    rdi,r13
  40aca3:	call   409150 <next@@Base+0xc30>
  40aca8:	mov    QWORD PTR [rsp+0x58],rax
  40acad:	test   rax,rax
  40acb0:	jne    40ac49 <__gcov_sort_n_vals@@Base+0x1379>
  40acb2:	nop    WORD PTR [rax+rax*1+0x0]
  40acb8:	mov    ecx,DWORD PTR [rsp+0x4c]
  40acbc:	mov    rsi,QWORD PTR [rsp+0x10]
  40acc1:	lea    rdx,[rip+0x142a]        # 40c0f2 <_IO_stdin_used@@Base+0xf2>
  40acc8:	xor    eax,eax
  40acca:	lea    rdi,[rip+0x1d87]        # 40ca58 <UnityStrOk@@Base+0x3dc>
  40acd1:	call   409050 <next@@Base+0xb30>
  40acd6:	jmp    409eef <__gcov_sort_n_vals@@Base+0x61f>
  40acdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ace0:	xor    edi,edi
  40ace2:	mov    DWORD PTR [rsp+0x28],0x0
  40acea:	xor    r12d,r12d
  40aced:	call   403370 <malloc@plt>
  40acf2:	mov    r15,rax
  40acf5:	test   rax,rax
  40acf8:	jne    40abc4 <__gcov_sort_n_vals@@Base+0x12f4>
  40acfe:	xchg   ax,ax
  40ad00:	mov    ebx,ebp
  40ad02:	mov    r12,QWORD PTR [rsp+0x18]
  40ad07:	mov    r15,QWORD PTR [rsp+0x50]
  40ad0c:	mov    ebp,DWORD PTR [rsp+0x28]
  40ad10:	jmp    40ad25 <__gcov_sort_n_vals@@Base+0x1455>
  40ad12:	nop    WORD PTR [rax+rax*1+0x0]
  40ad18:	xor    eax,eax
  40ad1a:	jmp    40ac5e <__gcov_sort_n_vals@@Base+0x138e>
  40ad1f:	nop
  40ad20:	mov    ebx,0xffffffff
  40ad25:	lea    rcx,[rip+0x1b53]        # 40c87f <UnityStrOk@@Base+0x203>
  40ad2c:	test   ebp,ebp
  40ad2e:	jne    40ac81 <__gcov_sort_n_vals@@Base+0x13b1>
  40ad34:	mov    ebp,ebx
  40ad36:	lea    rcx,[rip+0x1b31]        # 40c86e <UnityStrOk@@Base+0x1f2>
  40ad3d:	jmp    40ac81 <__gcov_sort_n_vals@@Base+0x13b1>
  40ad42:	nop    WORD PTR [rax+rax*1+0x0]
  40ad48:	xor    eax,eax
  40ad4a:	jmp    40ab19 <__gcov_sort_n_vals@@Base+0x1249>
  40ad4f:	nop
  40ad50:	xor    eax,eax
  40ad52:	jmp    40aaff <__gcov_sort_n_vals@@Base+0x122f>
  40ad57:	nop    WORD PTR [rax+rax*1+0x0]
  40ad60:	xor    eax,eax
  40ad62:	jmp    40ab33 <__gcov_sort_n_vals@@Base+0x1263>
  40ad67:	nop    WORD PTR [rax+rax*1+0x0]
  40ad70:	lea    rdx,[rip+0x1b1e]        # 40c895 <UnityStrOk@@Base+0x219>
  40ad77:	jmp    40a9f8 <__gcov_sort_n_vals@@Base+0x1128>
  40ad7c:	nop    DWORD PTR [rax+0x0]
  40ad80:	xor    esi,esi
  40ad82:	jmp    40a77d <__gcov_sort_n_vals@@Base+0xead>
  40ad87:	nop    WORD PTR [rax+rax*1+0x0]
  40ad90:	xor    eax,eax
  40ad92:	jmp    40a7a8 <__gcov_sort_n_vals@@Base+0xed8>
  40ad97:	nop    WORD PTR [rax+rax*1+0x0]
  40ada0:	mov    edi,0x17d0
  40ada5:	call   403370 <malloc@plt>
  40adaa:	mov    ecx,0x2f9
  40adaf:	mov    rsi,rbx
  40adb2:	mov    QWORD PTR [rbp+0x0],rax
  40adb6:	lea    rdi,[rax+0x8]
  40adba:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40adbd:	mov    QWORD PTR [rax],0x0
  40adc4:	mov    rbp,QWORD PTR [rbp+0x0]
  40adc8:	jmp    40a7d8 <__gcov_sort_n_vals@@Base+0xf08>
  40adcd:	nop    DWORD PTR [rax]
  40add0:	mov    ebp,0x2
  40add5:	mov    DWORD PTR [rsp+0x48],0x0
  40addd:	jmp    409d2d <__gcov_sort_n_vals@@Base+0x45d>
  40ade2:	nop    WORD PTR [rax+rax*1+0x0]
  40ade8:	mov    edi,0x1
  40aded:	call   408fb0 <next@@Base+0xa90>
  40adf2:	test   rax,rax
  40adf5:	je     40aeba <__gcov_sort_n_vals@@Base+0x15ea>
  40adfb:	mov    eax,DWORD PTR [rax]
  40adfd:	cmp    DWORD PTR [rbx+0x8],eax
  40ae00:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40ae06:	mov    edi,0x1
  40ae0b:	call   408fb0 <next@@Base+0xa90>
  40ae10:	test   rax,rax
  40ae13:	je     40aec8 <__gcov_sort_n_vals@@Base+0x15f8>
  40ae19:	mov    eax,DWORD PTR [rax]
  40ae1b:	cmp    DWORD PTR [rbx+0xc],eax
  40ae1e:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40ae24:	mov    edi,0x1
  40ae29:	call   408fb0 <next@@Base+0xa90>
  40ae2e:	test   rax,rax
  40ae31:	je     40aec1 <__gcov_sort_n_vals@@Base+0x15f1>
  40ae37:	mov    eax,DWORD PTR [rax]
  40ae39:	cmp    DWORD PTR [rbx+0x10],eax
  40ae3c:	jne    40acb8 <__gcov_sort_n_vals@@Base+0x13e8>
  40ae42:	mov    QWORD PTR [rsp+0x18],r15
  40ae47:	add    rbx,0x18
  40ae4b:	lea    r12,[r13+0x20]
  40ae4f:	mov    ebp,0x1a10000
  40ae54:	nop    DWORD PTR [rax+0x0]
  40ae58:	mov    r14,QWORD PTR [r12]
  40ae5c:	test   r14,r14
  40ae5f:	je     40a9b3 <__gcov_sort_n_vals@@Base+0x10e3>
  40ae65:	mov    edi,0x1
  40ae6a:	call   408fb0 <next@@Base+0xa90>
  40ae6f:	test   rax,rax
  40ae72:	je     40a973 <__gcov_sort_n_vals@@Base+0x10a3>
  40ae78:	mov    edi,0x1
  40ae7d:	mov    r15d,DWORD PTR [rax]
  40ae80:	call   408fb0 <next@@Base+0xa90>
  40ae85:	test   rax,rax
  40ae88:	jne    40a990 <__gcov_sort_n_vals@@Base+0x10c0>
  40ae8e:	xor    ecx,ecx
  40ae90:	jmp    40a992 <__gcov_sort_n_vals@@Base+0x10c2>
  40ae95:	nop    DWORD PTR [rax]
  40ae98:	mov    rsi,QWORD PTR [rsp+0x10]
  40ae9d:	lea    rdi,[rip+0x1c04]        # 40caa8 <UnityStrOk@@Base+0x42c>
  40aea4:	xor    eax,eax
  40aea6:	call   409050 <next@@Base+0xb30>
  40aeab:	jmp    409eef <__gcov_sort_n_vals@@Base+0x61f>
  40aeb0:	mov    DWORD PTR [rsp+0x44],r14d
  40aeb5:	jmp    40aa17 <__gcov_sort_n_vals@@Base+0x1147>
  40aeba:	xor    eax,eax
  40aebc:	jmp    40adfd <__gcov_sort_n_vals@@Base+0x152d>
  40aec1:	xor    eax,eax
  40aec3:	jmp    40ae39 <__gcov_sort_n_vals@@Base+0x1569>
  40aec8:	xor    eax,eax
  40aeca:	jmp    40ae1b <__gcov_sort_n_vals@@Base+0x154b>
  40aecf:	mov    r11,r10
  40aed2:	jmp    40a398 <__gcov_sort_n_vals@@Base+0xac8>
  40aed7:	lea    r15,[rsp+0x1840]
  40aedf:	xor    eax,eax
  40aee1:	mov    ecx,0x2f9
  40aee6:	mov    rdi,r15
  40aee9:	rep stos QWORD PTR es:[rdi],rax
  40aeec:	mov    eax,DWORD PTR [rsp+0x44]
  40aef0:	cmp    QWORD PTR [r13+0x20],0x0
  40aef5:	mov    DWORD PTR [rsp+0x40],eax
  40aef9:	jne    40a03b <__gcov_sort_n_vals@@Base+0x76b>
  40aeff:	jmp    40a0b8 <__gcov_sort_n_vals@@Base+0x7e8>
  40af04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40af0f:	nop
  40af10:	endbr64 
  40af14:	movzx  esi,BYTE PTR [rdi+0x8]
  40af18:	test   sil,0x1
  40af1c:	je     40af20 <__gcov_sort_n_vals@@Base+0x1650>
  40af1e:	ret    
  40af1f:	nop
  40af20:	push   rbx
  40af21:	shr    sil,1
  40af24:	mov    rbx,rdi
  40af27:	mov    rdi,QWORD PTR [rdi]
  40af2a:	and    esi,0x1
  40af2d:	call   409980 <__gcov_sort_n_vals@@Base+0xb0>
  40af32:	or     BYTE PTR [rbx+0x8],0x3
  40af36:	pop    rbx
  40af37:	ret    
  40af38:	nop    DWORD PTR [rax+rax*1+0x0]
  40af40:	endbr64 
  40af44:	movzx  esi,BYTE PTR [rip+0x8ddd]        # 413d28 <Unity@@Base+0x128>
  40af4b:	push   rbx
  40af4c:	test   sil,0x1
  40af50:	jne    40af6b <__gcov_sort_n_vals@@Base+0x169b>
  40af52:	shr    sil,1
  40af55:	mov    rdi,QWORD PTR [rip+0x8dc4]        # 413d20 <Unity@@Base+0x120>
  40af5c:	and    esi,0x1
  40af5f:	call   409980 <__gcov_sort_n_vals@@Base+0xb0>
  40af64:	or     BYTE PTR [rip+0x8dbd],0x3        # 413d28 <Unity@@Base+0x128>
  40af6b:	mov    rdx,QWORD PTR [rip+0x8dbe]        # 413d30 <Unity@@Base+0x130>
  40af72:	mov    rax,QWORD PTR [rip+0x8dbf]        # 413d38 <Unity@@Base+0x138>
  40af79:	test   rdx,rdx
  40af7c:	je     40af89 <__gcov_sort_n_vals@@Base+0x16b9>
  40af7e:	mov    QWORD PTR [rdx+0x18],rax
  40af82:	mov    rax,QWORD PTR [rip+0x8daf]        # 413d38 <Unity@@Base+0x138>
  40af89:	test   rax,rax
  40af8c:	je     40afc0 <__gcov_sort_n_vals@@Base+0x16f0>
  40af8e:	mov    QWORD PTR [rax+0x10],rdx
  40af92:	mov    rbx,0x413be8
  40af99:	mov    rdi,QWORD PTR [rbx]
  40af9c:	test   rdi,rdi
  40af9f:	je     40afb9 <__gcov_sort_n_vals@@Base+0x16e9>
  40afa1:	mov    rax,QWORD PTR [rip+0x5050]        # 40fff8 <stderr@GLIBC_2.2.5>
  40afa8:	cmp    rdi,QWORD PTR [rax]
  40afab:	je     40afb9 <__gcov_sort_n_vals@@Base+0x16e9>
  40afad:	call   4032d0 <fclose@plt>
  40afb2:	mov    QWORD PTR [rbx],0x0
  40afb9:	pop    rbx
  40afba:	ret    
  40afbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40afc0:	mov    rax,0x411e60
  40afc7:	mov    QWORD PTR [rax+0x8],rdx
  40afcb:	jmp    40af92 <__gcov_sort_n_vals@@Base+0x16c2>
  40afcd:	nop    DWORD PTR [rax]
  40afd0:	endbr64 
  40afd4:	mov    esi,DWORD PTR [rdi]
  40afd6:	test   esi,esi
  40afd8:	je     40b020 <__gcov_sort_n_vals@@Base+0x1750>
  40afda:	mov    eax,DWORD PTR [rdi+0x68]
  40afdd:	test   eax,eax
  40afdf:	je     40b020 <__gcov_sort_n_vals@@Base+0x1750>
  40afe1:	push   rbp
  40afe2:	push   rbx
  40afe3:	mov    rbx,rdi
  40afe6:	sub    rsp,0x8
  40afea:	cmp    esi,0x4138342a
  40aff0:	je     40b001 <__gcov_sort_n_vals@@Base+0x1731>
  40aff2:	xor    edx,edx
  40aff4:	lea    rdi,[rdi+0x18]
  40aff8:	call   4091c0 <next@@Base+0xca0>
  40affd:	test   eax,eax
  40afff:	je     40b018 <__gcov_sort_n_vals@@Base+0x1748>
  40b001:	mov    rax,QWORD PTR [rip+0x8d18]        # 413d20 <Unity@@Base+0x120>
  40b008:	test   rax,rax
  40b00b:	je     40b028 <__gcov_sort_n_vals@@Base+0x1758>
  40b00d:	mov    QWORD PTR [rbx+0x8],rax
  40b011:	mov    QWORD PTR [rip+0x8d08],rbx        # 413d20 <Unity@@Base+0x120>
  40b018:	add    rsp,0x8
  40b01c:	pop    rbx
  40b01d:	pop    rbp
  40b01e:	ret    
  40b01f:	nop
  40b020:	ret    
  40b021:	nop    DWORD PTR [rax+0x0]
  40b028:	mov    rbp,0x411e60
  40b02f:	mov    esi,DWORD PTR [rbp+0x0]
  40b032:	cmp    esi,0x4138342a
  40b038:	jne    40b060 <__gcov_sort_n_vals@@Base+0x1790>
  40b03a:	mov    rdx,QWORD PTR [rbp+0x8]
  40b03e:	lea    rcx,[rip+0x8cdb]        # 413d20 <Unity@@Base+0x120>
  40b045:	mov    QWORD PTR [rip+0x8ce4],rdx        # 413d30 <Unity@@Base+0x130>
  40b04c:	test   rdx,rdx
  40b04f:	je     40b055 <__gcov_sort_n_vals@@Base+0x1785>
  40b051:	mov    QWORD PTR [rdx+0x18],rcx
  40b055:	mov    QWORD PTR [rbp+0x8],rcx
  40b059:	jmp    40b00d <__gcov_sort_n_vals@@Base+0x173d>
  40b05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b060:	lea    rdx,[rip+0x18b9]        # 40c920 <UnityStrOk@@Base+0x2a4>
  40b067:	mov    edi,0x18
  40b06c:	call   4091c0 <next@@Base+0xca0>
  40b071:	test   eax,eax
  40b073:	mov    rax,QWORD PTR [rip+0x8ca6]        # 413d20 <Unity@@Base+0x120>
  40b07a:	jne    40b03a <__gcov_sort_n_vals@@Base+0x176a>
  40b07c:	jmp    40b00d <__gcov_sort_n_vals@@Base+0x173d>
  40b07e:	xchg   ax,ax
  40b080:	endbr64 
  40b084:	movabs rdx,0x5555555555555555
  40b08e:	mov    rax,rdi
  40b091:	shr    rax,1
  40b094:	and    rax,rdx
  40b097:	movabs rdx,0x3333333333333333
  40b0a1:	sub    rdi,rax
  40b0a4:	mov    rax,rdi
  40b0a7:	shr    rdi,0x2
  40b0ab:	and    rax,rdx
  40b0ae:	and    rdi,rdx
  40b0b1:	movabs rdx,0xf0f0f0f0f0f0f0f
  40b0bb:	add    rdi,rax
  40b0be:	mov    rax,rdi
  40b0c1:	shr    rax,0x4
  40b0c5:	add    rax,rdi
  40b0c8:	and    rax,rdx
  40b0cb:	movabs rdx,0x101010101010101
  40b0d5:	imul   rax,rdx
  40b0d9:	shr    rax,0x38
  40b0dd:	ret    
  40b0de:	xchg   ax,ax

000000000040b0e0 <__libc_csu_init@@Base>:
  40b0e0:	endbr64 
  40b0e4:	push   r15
  40b0e6:	lea    r15,[rip+0x4cd3]        # 40fdc0 <UnityStrOk@@Base+0x3744>
  40b0ed:	push   r14
  40b0ef:	mov    r14,rdx
  40b0f2:	push   r13
  40b0f4:	mov    r13,rsi
  40b0f7:	push   r12
  40b0f9:	mov    r12d,edi
  40b0fc:	push   rbp
  40b0fd:	lea    rbp,[rip+0x4ce4]        # 40fde8 <UnityStrOk@@Base+0x376c>
  40b104:	push   rbx
  40b105:	sub    rbp,r15
  40b108:	sub    rsp,0x8
  40b10c:	call   403000 <getenv@plt-0x220>
  40b111:	sar    rbp,0x3
  40b115:	je     40b136 <__libc_csu_init@@Base+0x56>
  40b117:	xor    ebx,ebx
  40b119:	nop    DWORD PTR [rax+0x0]
  40b120:	mov    rdx,r14
  40b123:	mov    rsi,r13
  40b126:	mov    edi,r12d
  40b129:	call   QWORD PTR [r15+rbx*8]
  40b12d:	add    rbx,0x1
  40b131:	cmp    rbp,rbx
  40b134:	jne    40b120 <__libc_csu_init@@Base+0x40>
  40b136:	add    rsp,0x8
  40b13a:	pop    rbx
  40b13b:	pop    rbp
  40b13c:	pop    r12
  40b13e:	pop    r13
  40b140:	pop    r14
  40b142:	pop    r15
  40b144:	ret    
  40b145:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040b150 <__libc_csu_fini@@Base>:
  40b150:	endbr64 
  40b154:	ret    

Disassembly of section .fini:

000000000040b158 <.fini>:
  40b158:	endbr64 
  40b15c:	sub    rsp,0x8
  40b160:	add    rsp,0x8
  40b164:	ret    
