
../repos/prog2/0.11.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <printf@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <printf@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <printf@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <printf@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <printf@plt-0x10>

0000000000401040 <__isoc99_scanf@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__isoc99_scanf@GLIBC_2.7>
  401046:	push   0x1
  40104b:	jmp    401020 <printf@plt-0x10>

Disassembly of section .text:

0000000000401050 <_start@@Base>:
  401050:	endbr64 
  401054:	xor    ebp,ebp
  401056:	mov    r9,rdx
  401059:	pop    rsi
  40105a:	mov    rdx,rsp
  40105d:	and    rsp,0xfffffffffffffff0
  401061:	push   rax
  401062:	push   rsp
  401063:	mov    r8,0x401350
  40106a:	mov    rcx,0x4012e0
  401071:	mov    rdi,0x401180
  401078:	call   QWORD PTR [rip+0x2f72]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40107e:	hlt    
  40107f:	nop
  401080:	endbr64 
  401084:	ret    
  401085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40108f:	nop
  401090:	mov    eax,0x404038
  401095:	cmp    rax,0x404038
  40109b:	je     4010b0 <_start@@Base+0x60>
  40109d:	mov    eax,0x0
  4010a2:	test   rax,rax
  4010a5:	je     4010b0 <_start@@Base+0x60>
  4010a7:	mov    edi,0x404038
  4010ac:	jmp    rax
  4010ae:	xchg   ax,ax
  4010b0:	ret    
  4010b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010bc:	nop    DWORD PTR [rax+0x0]
  4010c0:	mov    esi,0x404038
  4010c5:	sub    rsi,0x404038
  4010cc:	mov    rax,rsi
  4010cf:	shr    rsi,0x3f
  4010d3:	sar    rax,0x3
  4010d7:	add    rsi,rax
  4010da:	sar    rsi,1
  4010dd:	je     4010f0 <_start@@Base+0xa0>
  4010df:	mov    eax,0x0
  4010e4:	test   rax,rax
  4010e7:	je     4010f0 <_start@@Base+0xa0>
  4010e9:	mov    edi,0x404038
  4010ee:	jmp    rax
  4010f0:	ret    
  4010f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010fc:	nop    DWORD PTR [rax+0x0]
  401100:	endbr64 
  401104:	cmp    BYTE PTR [rip+0x2f2d],0x0        # 404038 <__bss_start@@Base>
  40110b:	jne    401120 <_start@@Base+0xd0>
  40110d:	push   rbp
  40110e:	mov    rbp,rsp
  401111:	call   401090 <_start@@Base+0x40>
  401116:	mov    BYTE PTR [rip+0x2f1b],0x1        # 404038 <__bss_start@@Base>
  40111d:	pop    rbp
  40111e:	ret    
  40111f:	nop
  401120:	ret    
  401121:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40112c:	nop    DWORD PTR [rax+0x0]
  401130:	endbr64 
  401134:	jmp    4010c0 <_start@@Base+0x70>
  401136:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401140 <invert@@Base>:
  401140:	xor    eax,eax
  401142:	test   edi,edi
  401144:	je     40117f <invert@@Base+0x3f>
  401146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401150:	lea    eax,[rax+rax*4]
  401153:	movsxd rcx,edi
  401156:	imul   rdi,rcx,0x66666667
  40115d:	mov    rdx,rdi
  401160:	shr    rdx,0x3f
  401164:	sar    rdi,0x22
  401168:	add    edi,edx
  40116a:	lea    edx,[rdi+rdi*1]
  40116d:	lea    edx,[rdx+rdx*4]
  401170:	mov    esi,ecx
  401172:	sub    esi,edx
  401174:	lea    eax,[rsi+rax*2]
  401177:	add    ecx,0x9
  40117a:	cmp    ecx,0x12
  40117d:	ja     401150 <invert@@Base+0x10>
  40117f:	ret    

0000000000401180 <main@@Base>:
  401180:	push   rbp
  401181:	push   r15
  401183:	push   r14
  401185:	push   r13
  401187:	push   r12
  401189:	push   rbx
  40118a:	sub    rsp,0x18
  40118e:	lea    rdi,[rip+0xe72]        # 402007 <_IO_stdin_used@@Base+0x7>
  401195:	lea    rsi,[rsp+0xc]
  40119a:	xor    eax,eax
  40119c:	call   401040 <__isoc99_scanf@plt>
  4011a1:	cmp    DWORD PTR [rsp+0xc],0x0
  4011a6:	jle    4012c4 <main@@Base+0x144>
  4011ac:	lea    r15,[rsp+0x14]
  4011b1:	lea    r12,[rsp+0x10]
  4011b6:	lea    r13,[rip+0xe4d]        # 40200a <_IO_stdin_used@@Base+0xa>
  4011bd:	xor    r14d,r14d
  4011c0:	jmp    4011e8 <main@@Base+0x68>
  4011c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011cc:	nop    DWORD PTR [rax+0x0]
  4011d0:	mov    rdi,r13
  4011d3:	xor    eax,eax
  4011d5:	call   401030 <printf@plt>
  4011da:	inc    r14d
  4011dd:	cmp    r14d,DWORD PTR [rsp+0xc]
  4011e2:	jge    4012c4 <main@@Base+0x144>
  4011e8:	xor    ebx,ebx
  4011ea:	lea    rdi,[rip+0xe13]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011f1:	mov    rsi,r15
  4011f4:	mov    rdx,r12
  4011f7:	xor    eax,eax
  4011f9:	call   401040 <__isoc99_scanf@plt>
  4011fe:	mov    ecx,DWORD PTR [rsp+0x14]
  401202:	mov    eax,0x0
  401207:	test   ecx,ecx
  401209:	je     40123f <main@@Base+0xbf>
  40120b:	xor    eax,eax
  40120d:	nop    DWORD PTR [rax]
  401210:	lea    eax,[rax+rax*4]
  401213:	movsxd rdx,ecx
  401216:	imul   rcx,rdx,0x66666667
  40121d:	mov    rsi,rcx
  401220:	shr    rsi,0x3f
  401224:	sar    rcx,0x22
  401228:	add    ecx,esi
  40122a:	lea    esi,[rcx+rcx*1]
  40122d:	lea    esi,[rsi+rsi*4]
  401230:	mov    edi,edx
  401232:	sub    edi,esi
  401234:	lea    eax,[rdi+rax*2]
  401237:	add    edx,0x9
  40123a:	cmp    edx,0x12
  40123d:	ja     401210 <main@@Base+0x90>
  40123f:	mov    ecx,DWORD PTR [rsp+0x10]
  401243:	test   ecx,ecx
  401245:	je     40127f <main@@Base+0xff>
  401247:	xor    ebx,ebx
  401249:	nop    DWORD PTR [rax+0x0]
  401250:	lea    edx,[rbx+rbx*4]
  401253:	movsxd rbp,ecx
  401256:	imul   rcx,rbp,0x66666667
  40125d:	mov    rdi,rcx
  401260:	shr    rdi,0x3f
  401264:	sar    rcx,0x22
  401268:	add    ecx,edi
  40126a:	lea    edi,[rcx+rcx*1]
  40126d:	lea    edi,[rdi+rdi*4]
  401270:	mov    esi,ebp
  401272:	sub    esi,edi
  401274:	lea    ebx,[rsi+rdx*2]
  401277:	add    ebp,0x9
  40127a:	cmp    ebp,0x12
  40127d:	ja     401250 <main@@Base+0xd0>
  40127f:	xor    esi,esi
  401281:	add    ebx,eax
  401283:	je     4011d0 <main@@Base+0x50>
  401289:	nop    DWORD PTR [rax+0x0]
  401290:	lea    eax,[rsi+rsi*4]
  401293:	movsxd rcx,ebx
  401296:	imul   rbx,rcx,0x66666667
  40129d:	mov    rdx,rbx
  4012a0:	shr    rdx,0x3f
  4012a4:	sar    rbx,0x22
  4012a8:	add    ebx,edx
  4012aa:	lea    edx,[rbx+rbx*1]
  4012ad:	lea    edx,[rdx+rdx*4]
  4012b0:	mov    esi,ecx
  4012b2:	sub    esi,edx
  4012b4:	lea    esi,[rsi+rax*2]
  4012b7:	add    ecx,0x9
  4012ba:	cmp    ecx,0x12
  4012bd:	ja     401290 <main@@Base+0x110>
  4012bf:	jmp    4011d0 <main@@Base+0x50>
  4012c4:	xor    eax,eax
  4012c6:	add    rsp,0x18
  4012ca:	pop    rbx
  4012cb:	pop    r12
  4012cd:	pop    r13
  4012cf:	pop    r14
  4012d1:	pop    r15
  4012d3:	pop    rbp
  4012d4:	ret    
  4012d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012df:	nop

00000000004012e0 <__libc_csu_init@@Base>:
  4012e0:	endbr64 
  4012e4:	push   r15
  4012e6:	lea    r15,[rip+0x2b13]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  4012ed:	push   r14
  4012ef:	mov    r14,rdx
  4012f2:	push   r13
  4012f4:	mov    r13,rsi
  4012f7:	push   r12
  4012f9:	mov    r12d,edi
  4012fc:	push   rbp
  4012fd:	lea    rbp,[rip+0x2b04]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401304:	push   rbx
  401305:	sub    rbp,r15
  401308:	sub    rsp,0x8
  40130c:	call   401000 <printf@plt-0x30>
  401311:	sar    rbp,0x3
  401315:	je     401336 <__libc_csu_init@@Base+0x56>
  401317:	xor    ebx,ebx
  401319:	nop    DWORD PTR [rax+0x0]
  401320:	mov    rdx,r14
  401323:	mov    rsi,r13
  401326:	mov    edi,r12d
  401329:	call   QWORD PTR [r15+rbx*8]
  40132d:	add    rbx,0x1
  401331:	cmp    rbp,rbx
  401334:	jne    401320 <__libc_csu_init@@Base+0x40>
  401336:	add    rsp,0x8
  40133a:	pop    rbx
  40133b:	pop    rbp
  40133c:	pop    r12
  40133e:	pop    r13
  401340:	pop    r14
  401342:	pop    r15
  401344:	ret    
  401345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401350 <__libc_csu_fini@@Base>:
  401350:	endbr64 
  401354:	ret    

Disassembly of section .fini:

0000000000401358 <.fini>:
  401358:	endbr64 
  40135c:	sub    rsp,0x8
  401360:	add    rsp,0x8
  401364:	ret    
