
../repos/maitesin-acc-4891b9a/bin/acc:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xefd9]        # 411fe8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xefe2]        # 412008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xefe4]        # 412010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xefe2]        # 412018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xefda]        # 412020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xefd2]        # 412028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xefca]        # 412030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xefc2]        # 412038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xefba]        # 412040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fread@plt>:
  403090:	jmp    QWORD PTR [rip+0xefb2]        # 412048 <fread@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <fcntl@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xefaa]        # 412050 <fcntl@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <getpid@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xefa2]        # 412058 <getpid@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fclose@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xef9a]        # 412060 <fclose@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <msync@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xef92]        # 412068 <msync@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strlen@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xef8a]        # 412070 <strlen@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <mmap@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xef82]        # 412078 <mmap@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strchr@plt>:
  403100:	jmp    QWORD PTR [rip+0xef7a]        # 412080 <strchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <strrchr@plt>:
  403110:	jmp    QWORD PTR [rip+0xef72]        # 412088 <strrchr@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <uname@plt>:
  403120:	jmp    QWORD PTR [rip+0xef6a]        # 412090 <uname@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <memset@plt>:
  403130:	jmp    QWORD PTR [rip+0xef62]        # 412098 <memset@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <strnlen@plt>:
  403140:	jmp    QWORD PTR [rip+0xef5a]        # 4120a0 <strnlen@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <fprintf@plt>:
  403150:	jmp    QWORD PTR [rip+0xef52]        # 4120a8 <fprintf@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <ftell@plt>:
  403160:	jmp    QWORD PTR [rip+0xef4a]        # 4120b0 <ftell@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <strtol@plt>:
  403170:	jmp    QWORD PTR [rip+0xef42]        # 4120b8 <strtol@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <memcpy@plt>:
  403180:	jmp    QWORD PTR [rip+0xef3a]        # 4120c0 <memcpy@GLIBC_2.14>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <prctl@plt>:
  403190:	jmp    QWORD PTR [rip+0xef32]        # 4120c8 <prctl@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <malloc@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xef2a]        # 4120d0 <malloc@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <fflush@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xef22]        # 4120d8 <fflush@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <fseek@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xef1a]        # 4120e0 <fseek@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <realloc@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xef12]        # 4120e8 <realloc@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fdopen@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xef0a]        # 4120f0 <fdopen@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <munmap@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xef02]        # 4120f8 <munmap@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <open@plt>:
  403200:	jmp    QWORD PTR [rip+0xeefa]        # 412100 <open@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <fopen@plt>:
  403210:	jmp    QWORD PTR [rip+0xeef2]        # 412108 <fopen@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <getopt@plt>:
  403220:	jmp    QWORD PTR [rip+0xeeea]        # 412110 <getopt@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <__cxa_atexit@plt>:
  403230:	jmp    QWORD PTR [rip+0xeee2]        # 412118 <__cxa_atexit@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <atoi@plt>:
  403240:	jmp    QWORD PTR [rip+0xeeda]        # 412120 <atoi@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <exit@plt>:
  403250:	jmp    QWORD PTR [rip+0xeed2]        # 412128 <exit@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <fwrite@plt>:
  403260:	jmp    QWORD PTR [rip+0xeeca]        # 412130 <fwrite@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <strdup@plt>:
  403270:	jmp    QWORD PTR [rip+0xeec2]        # 412138 <strdup@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strerror@plt>:
  403280:	jmp    QWORD PTR [rip+0xeeba]        # 412140 <strerror@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403290 <_start@@Base>:
  403290:	endbr64 
  403294:	xor    ebp,ebp
  403296:	mov    r9,rdx
  403299:	pop    rsi
  40329a:	mov    rdx,rsp
  40329d:	and    rsp,0xfffffffffffffff0
  4032a1:	push   rax
  4032a2:	push   rsp
  4032a3:	mov    r8,0x40cf40
  4032aa:	mov    rcx,0x40ced0
  4032b1:	mov    rdi,0x403700
  4032b8:	call   QWORD PTR [rip+0xed1a]        # 411fd8 <__libc_start_main@GLIBC_2.2.5>
  4032be:	hlt    
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	ret    
  4032c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032cf:	nop
  4032d0:	mov    eax,0x412190
  4032d5:	cmp    rax,0x412190
  4032db:	je     4032f0 <_start@@Base+0x60>
  4032dd:	mov    eax,0x0
  4032e2:	test   rax,rax
  4032e5:	je     4032f0 <_start@@Base+0x60>
  4032e7:	mov    edi,0x412190
  4032ec:	jmp    rax
  4032ee:	xchg   ax,ax
  4032f0:	ret    
  4032f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	mov    esi,0x412190
  403305:	sub    rsi,0x412190
  40330c:	mov    rax,rsi
  40330f:	shr    rsi,0x3f
  403313:	sar    rax,0x3
  403317:	add    rsi,rax
  40331a:	sar    rsi,1
  40331d:	je     403330 <_start@@Base+0xa0>
  40331f:	mov    eax,0x0
  403324:	test   rax,rax
  403327:	je     403330 <_start@@Base+0xa0>
  403329:	mov    edi,0x412190
  40332e:	jmp    rax
  403330:	ret    
  403331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	endbr64 
  403344:	cmp    BYTE PTR [rip+0xee45],0x0        # 412190 <__bss_start@@Base>
  40334b:	jne    403360 <_start@@Base+0xd0>
  40334d:	push   rbp
  40334e:	mov    rbp,rsp
  403351:	call   4032d0 <_start@@Base+0x40>
  403356:	mov    BYTE PTR [rip+0xee33],0x1        # 412190 <__bss_start@@Base>
  40335d:	pop    rbp
  40335e:	ret    
  40335f:	nop
  403360:	ret    
  403361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40336c:	nop    DWORD PTR [rax+0x0]
  403370:	endbr64 
  403374:	jmp    403300 <_start@@Base+0x70>
  403376:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403380 <load_file@@Base>:
  403380:	push   rbp
  403381:	mov    rbp,rsp
  403384:	sub    rsp,0x40
  403388:	mov    rax,QWORD PTR [rip+0xee11]        # 4121a0 <__bss_start@@Base+0x10>
  40338f:	add    rax,0x1
  403393:	mov    QWORD PTR [rip+0xee06],rax        # 4121a0 <__bss_start@@Base+0x10>
  40339a:	mov    QWORD PTR [rbp-0x30],rdi
  40339e:	mov    rax,QWORD PTR [rbp-0x30]
  4033a2:	mov    QWORD PTR [rbp-0x8],rax
  4033a6:	mov    QWORD PTR [rbp-0x10],0x0
  4033ae:	mov    rdi,QWORD PTR [rbp-0x8]
  4033b2:	lea    rsi,[rip+0xa0e2]        # 40d49b <_IO_stdin_used@@Base+0x49b>
  4033b9:	call   403210 <fopen@plt>
  4033be:	mov    ecx,0x2
  4033c3:	mov    esi,ecx
  4033c5:	mov    ecx,0x1
  4033ca:	mov    edi,ecx
  4033cc:	mov    QWORD PTR [rbp-0x18],rax
  4033d0:	mov    rax,QWORD PTR [rbp-0x18]
  4033d4:	cmp    rax,0x0
  4033d8:	setne  dl
  4033db:	cmp    rax,0x0
  4033df:	cmovne rsi,rdi
  4033e3:	lea    rax,[rip+0xedb6]        # 4121a0 <__bss_start@@Base+0x10>
  4033ea:	mov    rdi,QWORD PTR [rax+rsi*8]
  4033ee:	add    rdi,0x1
  4033f2:	mov    QWORD PTR [rax+rsi*8],rdi
  4033f6:	test   dl,0x1
  4033f9:	jne    403404 <load_file@@Base+0x84>
  4033ff:	jmp    40361b <load_file@@Base+0x29b>
  403404:	xor    eax,eax
  403406:	mov    esi,eax
  403408:	mov    rdi,QWORD PTR [rbp-0x18]
  40340c:	mov    edx,0x2
  403411:	call   4031c0 <fseek@plt>
  403416:	mov    edx,0x4
  40341b:	mov    esi,edx
  40341d:	mov    edx,0x3
  403422:	mov    edi,edx
  403424:	cmp    eax,0x0
  403427:	sete   cl
  40342a:	cmp    eax,0x0
  40342d:	cmove  rsi,rdi
  403431:	lea    rdi,[rip+0xed68]        # 4121a0 <__bss_start@@Base+0x10>
  403438:	mov    r8,QWORD PTR [rdi+rsi*8]
  40343c:	add    r8,0x1
  403440:	mov    QWORD PTR [rdi+rsi*8],r8
  403444:	test   cl,0x1
  403447:	jne    403452 <load_file@@Base+0xd2>
  40344d:	jmp    4035fd <load_file@@Base+0x27d>
  403452:	mov    rdi,QWORD PTR [rbp-0x18]
  403456:	call   403160 <ftell@plt>
  40345b:	mov    ecx,0x6
  403460:	mov    edi,ecx
  403462:	mov    ecx,0x5
  403467:	mov    edx,ecx
  403469:	mov    QWORD PTR [rbp-0x20],rax
  40346d:	mov    rax,QWORD PTR [rbp-0x20]
  403471:	cmp    rax,0xffffffffffffffff
  403475:	sete   sil
  403479:	cmp    rax,0xffffffffffffffff
  40347d:	cmove  rdi,rdx
  403481:	lea    rax,[rip+0xed18]        # 4121a0 <__bss_start@@Base+0x10>
  403488:	mov    rdx,QWORD PTR [rax+rdi*8]
  40348c:	add    rdx,0x1
  403490:	mov    QWORD PTR [rax+rdi*8],rdx
  403494:	test   sil,0x1
  403498:	jne    4034a3 <load_file@@Base+0x123>
  40349e:	jmp    4034c8 <load_file@@Base+0x148>
  4034a3:	mov    rax,QWORD PTR [rip+0xeb46]        # 411ff0 <stderr@GLIBC_2.2.5>
  4034aa:	mov    rdi,QWORD PTR [rax]
  4034ad:	lea    rsi,[rip+0x9b50]        # 40d004 <_IO_stdin_used@@Base+0x4>
  4034b4:	mov    al,0x0
  4034b6:	call   403150 <fprintf@plt>
  4034bb:	mov    edi,0x1
  4034c0:	mov    DWORD PTR [rbp-0x34],eax
  4034c3:	call   403250 <exit@plt>
  4034c8:	mov    rax,QWORD PTR [rbp-0x20]
  4034cc:	shl    rax,0x0
  4034d0:	add    rax,0x1
  4034d4:	mov    rdi,rax
  4034d7:	call   4031a0 <malloc@plt>
  4034dc:	xor    ecx,ecx
  4034de:	mov    esi,ecx
  4034e0:	xor    edx,edx
  4034e2:	mov    QWORD PTR [rbp-0x10],rax
  4034e6:	mov    rdi,QWORD PTR [rbp-0x18]
  4034ea:	call   4031c0 <fseek@plt>
  4034ef:	mov    ecx,0x8
  4034f4:	mov    esi,ecx
  4034f6:	mov    ecx,0x7
  4034fb:	mov    edi,ecx
  4034fd:	cmp    eax,0x0
  403500:	setne  r8b
  403504:	cmp    eax,0x0
  403507:	cmovne rsi,rdi
  40350b:	lea    rdi,[rip+0xec8e]        # 4121a0 <__bss_start@@Base+0x10>
  403512:	mov    r9,QWORD PTR [rdi+rsi*8]
  403516:	add    r9,0x1
  40351a:	mov    QWORD PTR [rdi+rsi*8],r9
  40351e:	test   r8b,0x1
  403522:	jne    40352d <load_file@@Base+0x1ad>
  403528:	jmp    403552 <load_file@@Base+0x1d2>
  40352d:	mov    rax,QWORD PTR [rip+0xeabc]        # 411ff0 <stderr@GLIBC_2.2.5>
  403534:	mov    rdi,QWORD PTR [rax]
  403537:	lea    rsi,[rip+0x9afa]        # 40d038 <_IO_stdin_used@@Base+0x38>
  40353e:	mov    al,0x0
  403540:	call   403150 <fprintf@plt>
  403545:	mov    edi,0x1
  40354a:	mov    DWORD PTR [rbp-0x38],eax
  40354d:	call   403250 <exit@plt>
  403552:	mov    eax,0x1
  403557:	mov    esi,eax
  403559:	mov    rdi,QWORD PTR [rbp-0x10]
  40355d:	mov    rdx,QWORD PTR [rbp-0x20]
  403561:	mov    rcx,QWORD PTR [rbp-0x18]
  403565:	call   403090 <fread@plt>
  40356a:	mov    r8d,0xa
  403570:	mov    ecx,r8d
  403573:	mov    r8d,0x9
  403579:	mov    edx,r8d
  40357c:	mov    QWORD PTR [rbp-0x28],rax
  403580:	mov    rax,QWORD PTR [rbp-0x28]
  403584:	cmp    rax,0x0
  403588:	sete   r9b
  40358c:	cmp    rax,0x0
  403590:	cmove  rcx,rdx
  403594:	lea    rax,[rip+0xec05]        # 4121a0 <__bss_start@@Base+0x10>
  40359b:	mov    rdx,QWORD PTR [rax+rcx*8]
  40359f:	add    rdx,0x1
  4035a3:	mov    QWORD PTR [rax+rcx*8],rdx
  4035a7:	test   r9b,0x1
  4035ab:	jne    4035b6 <load_file@@Base+0x236>
  4035b1:	jmp    4035df <load_file@@Base+0x25f>
  4035b6:	mov    rax,QWORD PTR [rip+0xea33]        # 411ff0 <stderr@GLIBC_2.2.5>
  4035bd:	mov    rdi,QWORD PTR [rax]
  4035c0:	mov    rdx,QWORD PTR [rbp-0x8]
  4035c4:	lea    rsi,[rip+0x9a9f]        # 40d06a <_IO_stdin_used@@Base+0x6a>
  4035cb:	mov    al,0x0
  4035cd:	call   403150 <fprintf@plt>
  4035d2:	mov    edi,0x1
  4035d7:	mov    DWORD PTR [rbp-0x3c],eax
  4035da:	call   403250 <exit@plt>
  4035df:	mov    rax,QWORD PTR [rip+0xec12]        # 4121f8 <__bss_start@@Base+0x68>
  4035e6:	add    rax,0x1
  4035ea:	mov    QWORD PTR [rip+0xec07],rax        # 4121f8 <__bss_start@@Base+0x68>
  4035f1:	mov    rax,QWORD PTR [rbp-0x10]
  4035f5:	mov    rcx,QWORD PTR [rbp-0x28]
  4035f9:	mov    BYTE PTR [rax+rcx*1],0x0
  4035fd:	mov    rax,QWORD PTR [rip+0xebfc]        # 412200 <__bss_start@@Base+0x70>
  403604:	add    rax,0x1
  403608:	mov    QWORD PTR [rip+0xebf1],rax        # 412200 <__bss_start@@Base+0x70>
  40360f:	mov    rdi,QWORD PTR [rbp-0x18]
  403613:	call   4030c0 <fclose@plt>
  403618:	mov    DWORD PTR [rbp-0x40],eax
  40361b:	mov    rax,QWORD PTR [rip+0xebe6]        # 412208 <__bss_start@@Base+0x78>
  403622:	add    rax,0x1
  403626:	mov    QWORD PTR [rip+0xebdb],rax        # 412208 <__bss_start@@Base+0x78>
  40362d:	mov    rax,QWORD PTR [rbp-0x10]
  403631:	add    rsp,0x40
  403635:	pop    rbp
  403636:	ret    
  403637:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403640 <my_main@@Base>:
  403640:	push   rbp
  403641:	mov    rbp,rsp
  403644:	sub    rsp,0x60
  403648:	mov    rax,QWORD PTR [rip+0xebc1]        # 412210 <__bss_start@@Base+0x80>
  40364f:	add    rax,0x1
  403653:	mov    QWORD PTR [rip+0xebb6],rax        # 412210 <__bss_start@@Base+0x80>
  40365a:	mov    QWORD PTR [rbp-0x58],rdi
  40365e:	mov    QWORD PTR [rbp-0x60],rsi
  403662:	mov    rax,QWORD PTR [rip+0xebaf]        # 412218 <__bss_start@@Base+0x88>
  403669:	add    rax,0x1
  40366d:	mov    QWORD PTR [rip+0xeba4],rax        # 412218 <__bss_start@@Base+0x88>
  403674:	mov    rax,QWORD PTR [rbp-0x58]
  403678:	mov    QWORD PTR [rbp-0x8],rax
  40367c:	mov    rcx,QWORD PTR [rbp-0x60]
  403680:	mov    QWORD PTR [rbp-0x10],rcx
  403684:	mov    rdi,QWORD PTR [rbp-0x8]
  403688:	call   403380 <load_file@@Base>
  40368d:	mov    QWORD PTR [rbp-0x50],rax
  403691:	mov    rsi,QWORD PTR [rbp-0x50]
  403695:	lea    rdi,[rbp-0x28]
  403699:	call   4047e0 <init_lexer@@Base>
  40369e:	lea    rdi,[rbp-0x30]
  4036a2:	lea    rsi,[rbp-0x28]
  4036a6:	call   408530 <init_grammar@@Base>
  4036ab:	mov    rdx,QWORD PTR [rbp-0x10]
  4036af:	lea    rdi,[rbp-0x48]
  4036b3:	lea    rsi,[rbp-0x30]
  4036b7:	call   409f70 <init_generator@@Base>
  4036bc:	lea    rdi,[rbp-0x48]
  4036c0:	call   40a050 <generate_code@@Base>
  4036c5:	lea    rdi,[rbp-0x48]
  4036c9:	call   40a000 <destroy_generator@@Base>
  4036ce:	lea    rdi,[rbp-0x30]
  4036d2:	call   408580 <destroy_grammar@@Base>
  4036d7:	lea    rdi,[rbp-0x28]
  4036db:	call   404850 <destroy_lexer@@Base>
  4036e0:	mov    rdi,QWORD PTR [rbp-0x50]
  4036e4:	call   403040 <free@plt>
  4036e9:	xor    eax,eax
  4036eb:	add    rsp,0x60
  4036ef:	pop    rbp
  4036f0:	ret    
  4036f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403700 <main@@Base>:
  403700:	push   rbp
  403701:	mov    rbp,rsp
  403704:	sub    rsp,0x50
  403708:	mov    rax,QWORD PTR [rip+0xeb11]        # 412220 <__bss_start@@Base+0x90>
  40370f:	add    rax,0x1
  403713:	mov    QWORD PTR [rip+0xeb06],rax        # 412220 <__bss_start@@Base+0x90>
  40371a:	mov    DWORD PTR [rbp-0x20],edi
  40371d:	mov    QWORD PTR [rbp-0x28],rsi
  403721:	mov    rax,QWORD PTR [rip+0xeb00]        # 412228 <__bss_start@@Base+0x98>
  403728:	add    rax,0x1
  40372c:	mov    QWORD PTR [rip+0xeaf5],rax        # 412228 <__bss_start@@Base+0x98>
  403733:	mov    DWORD PTR [rbp-0x4],0x0
  40373a:	mov    ecx,DWORD PTR [rbp-0x20]
  40373d:	mov    DWORD PTR [rbp-0x8],ecx
  403740:	mov    rax,QWORD PTR [rbp-0x28]
  403744:	mov    QWORD PTR [rbp-0x10],rax
  403748:	mov    QWORD PTR [rbp-0x18],0x0
  403750:	mov    DWORD PTR [rbp-0x1c],0x0
  403757:	mov    edi,DWORD PTR [rbp-0x8]
  40375a:	mov    rsi,QWORD PTR [rbp-0x10]
  40375e:	lea    rdx,[rip+0x991d]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403765:	call   403220 <getopt@plt>
  40376a:	mov    edi,0x3
  40376f:	mov    edx,edi
  403771:	mov    edi,0x2
  403776:	mov    esi,edi
  403778:	mov    DWORD PTR [rbp-0x1c],eax
  40377b:	cmp    eax,0xffffffff
  40377e:	setne  cl
  403781:	cmp    eax,0xffffffff
  403784:	cmovne rdx,rsi
  403788:	lea    rsi,[rip+0xea91]        # 412220 <__bss_start@@Base+0x90>
  40378f:	mov    r8,QWORD PTR [rsi+rdx*8]
  403793:	add    r8,0x1
  403797:	mov    QWORD PTR [rsi+rdx*8],r8
  40379b:	test   cl,0x1
  40379e:	jne    4037a9 <main@@Base+0xa9>
  4037a4:	jmp    40382b <main@@Base+0x12b>
  4037a9:	mov    DWORD PTR [rip+0xe9a5],0x0        # 412158 <__data_start@@Base+0x10>
  4037b3:	mov    eax,DWORD PTR [rbp-0x1c]
  4037b6:	sub    eax,0x6f
  4037b9:	mov    DWORD PTR [rbp-0x2c],eax
  4037bc:	jne    403801 <main@@Base+0x101>
  4037c2:	jmp    4037c7 <main@@Base+0xc7>
  4037c7:	lea    rax,[rip+0xd492]        # 410c60 <_IO_stdin_used@@Base+0x3c60>
  4037ce:	add    rax,0x8
  4037d2:	lea    rdi,[rip+0xe97f]        # 412158 <__data_start@@Base+0x10>
  4037d9:	mov    rsi,rax
  4037dc:	call   403960 <main@@Base+0x260>
  4037e1:	mov    rax,QWORD PTR [rip+0xe7f8]        # 411fe0 <optarg@GLIBC_2.2.5>
  4037e8:	mov    rsi,QWORD PTR [rip+0xea61]        # 412250 <__bss_start@@Base+0xc0>
  4037ef:	add    rsi,0x1
  4037f3:	mov    QWORD PTR [rip+0xea56],rsi        # 412250 <__bss_start@@Base+0xc0>
  4037fa:	mov    rax,QWORD PTR [rax]
  4037fd:	mov    QWORD PTR [rbp-0x18],rax
  403801:	lea    rdi,[rip+0xe950]        # 412158 <__data_start@@Base+0x10>
  403808:	lea    rsi,[rip+0xd451]        # 410c60 <_IO_stdin_used@@Base+0x3c60>
  40380f:	call   403960 <main@@Base+0x260>
  403814:	mov    rsi,QWORD PTR [rip+0xea3d]        # 412258 <__bss_start@@Base+0xc8>
  40381b:	add    rsi,0x1
  40381f:	mov    QWORD PTR [rip+0xea32],rsi        # 412258 <__bss_start@@Base+0xc8>
  403826:	jmp    403757 <main@@Base+0x57>
  40382b:	mov    eax,0x9
  403830:	mov    ecx,eax
  403832:	mov    eax,0x8
  403837:	mov    edx,eax
  403839:	mov    rsi,QWORD PTR [rip+0xe790]        # 411fd0 <optind@GLIBC_2.2.5>
  403840:	mov    eax,DWORD PTR [rsi]
  403842:	mov    edi,DWORD PTR [rbp-0x8]
  403845:	cmp    eax,edi
  403847:	setl   r8b
  40384b:	cmp    eax,edi
  40384d:	cmovl  rcx,rdx
  403851:	lea    rdx,[rip+0xe9c8]        # 412220 <__bss_start@@Base+0x90>
  403858:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40385c:	add    rsi,0x1
  403860:	mov    QWORD PTR [rdx+rcx*8],rsi
  403864:	test   r8b,0x1
  403868:	jne    403873 <main@@Base+0x173>
  40386e:	jmp    403931 <main@@Base+0x231>
  403873:	mov    eax,0xb
  403878:	mov    ecx,eax
  40387a:	mov    eax,0xa
  40387f:	mov    edx,eax
  403881:	mov    rsi,QWORD PTR [rip+0xe748]        # 411fd0 <optind@GLIBC_2.2.5>
  403888:	mov    rdi,QWORD PTR [rbp-0x10]
  40388c:	movsxd rsi,DWORD PTR [rsi]
  40388f:	mov    rdi,QWORD PTR [rdi+rsi*8]
  403893:	mov    rsi,QWORD PTR [rbp-0x18]
  403897:	cmp    rsi,0x0
  40389b:	sete   r8b
  40389f:	cmp    rsi,0x0
  4038a3:	cmove  rcx,rdx
  4038a7:	lea    rdx,[rip+0xe972]        # 412220 <__bss_start@@Base+0x90>
  4038ae:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4038b2:	add    rsi,0x1
  4038b6:	mov    QWORD PTR [rdx+rcx*8],rsi
  4038ba:	test   r8b,0x1
  4038be:	mov    QWORD PTR [rbp-0x38],rdi
  4038c2:	jne    4038cd <main@@Base+0x1cd>
  4038c8:	jmp    4038ef <main@@Base+0x1ef>
  4038cd:	mov    rax,QWORD PTR [rip+0xe9ac]        # 412280 <__bss_start@@Base+0xf0>
  4038d4:	add    rax,0x1
  4038d8:	mov    QWORD PTR [rip+0xe9a1],rax        # 412280 <__bss_start@@Base+0xf0>
  4038df:	lea    rax,[rip+0x979f]        # 40d085 <_IO_stdin_used@@Base+0x85>
  4038e6:	mov    QWORD PTR [rbp-0x40],rax
  4038ea:	jmp    403909 <main@@Base+0x209>
  4038ef:	mov    rax,QWORD PTR [rip+0xe992]        # 412288 <__bss_start@@Base+0xf8>
  4038f6:	add    rax,0x1
  4038fa:	mov    QWORD PTR [rip+0xe987],rax        # 412288 <__bss_start@@Base+0xf8>
  403901:	mov    rax,QWORD PTR [rbp-0x18]
  403905:	mov    QWORD PTR [rbp-0x40],rax
  403909:	mov    rax,QWORD PTR [rbp-0x40]
  40390d:	mov    rcx,QWORD PTR [rip+0xe97c]        # 412290 <__bss_start@@Base+0x100>
  403914:	add    rcx,0x1
  403918:	mov    QWORD PTR [rip+0xe971],rcx        # 412290 <__bss_start@@Base+0x100>
  40391f:	mov    rdi,QWORD PTR [rbp-0x38]
  403923:	mov    rsi,rax
  403926:	call   403640 <my_main@@Base>
  40392b:	add    rsp,0x50
  40392f:	pop    rbp
  403930:	ret    
  403931:	mov    rax,QWORD PTR [rip+0xe6b8]        # 411ff0 <stderr@GLIBC_2.2.5>
  403938:	mov    rdi,QWORD PTR [rax]
  40393b:	lea    rsi,[rip+0x9747]        # 40d089 <_IO_stdin_used@@Base+0x89>
  403942:	mov    al,0x0
  403944:	call   403150 <fprintf@plt>
  403949:	mov    edi,0x1
  40394e:	mov    DWORD PTR [rbp-0x44],eax
  403951:	call   403250 <exit@plt>
  403956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403960:	mov    eax,DWORD PTR [rdi]
  403962:	cmp    eax,0xffffffff
  403965:	mov    QWORD PTR [rsp-0x8],rsi
  40396a:	mov    DWORD PTR [rsp-0xc],eax
  40396e:	je     4039a3 <main@@Base+0x2a3>
  403974:	mov    eax,DWORD PTR [rsp-0xc]
  403978:	mov    ecx,eax
  40397a:	mov    edx,ecx
  40397c:	mov    rsi,QWORD PTR [rsp-0x8]
  403981:	mov    rdx,QWORD PTR [rsi+rdx*8]
  403985:	cmp    rdx,0x0
  403989:	mov    QWORD PTR [rsp-0x18],rdx
  40398e:	je     4039a3 <main@@Base+0x2a3>
  403994:	mov    rax,QWORD PTR [rsp-0x18]
  403999:	mov    rcx,QWORD PTR [rax]
  40399c:	add    rcx,0x1
  4039a0:	mov    QWORD PTR [rax],rcx
  4039a3:	ret    
  4039a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039ae:	xchg   ax,ax
  4039b0:	sub    rsp,0x38
  4039b4:	xor    eax,eax
  4039b6:	mov    DWORD PTR [rsp+0x34],eax
  4039ba:	jmp    4039bf <main@@Base+0x2bf>
  4039bf:	mov    eax,DWORD PTR [rsp+0x34]
  4039c3:	movsxd rcx,eax
  4039c6:	imul   rcx,rcx,0x30
  4039ca:	lea    rdx,[rip+0xd32f]        # 410d00 <_IO_stdin_used@@Base+0x3d00>
  4039d1:	add    rdx,rcx
  4039d4:	mov    rdi,QWORD PTR [rdx]
  4039d7:	mov    rsi,QWORD PTR [rdx+0x8]
  4039db:	mov    r8d,DWORD PTR [rdx+0x10]
  4039df:	mov    QWORD PTR [rsp+0x28],rdx
  4039e4:	mov    edx,r8d
  4039e7:	mov    DWORD PTR [rsp+0x24],eax
  4039eb:	call   40b1e0 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  4039f0:	xor    eax,eax
  4039f2:	mov    rcx,QWORD PTR [rsp+0x28]
  4039f7:	mov    edx,DWORD PTR [rcx+0x18]
  4039fa:	mov    rsi,QWORD PTR [rcx+0x20]
  4039fe:	mov    rdi,QWORD PTR [rcx+0x28]
  403a02:	cmp    eax,edx
  403a04:	mov    QWORD PTR [rsp+0x18],rdi
  403a09:	mov    DWORD PTR [rsp+0x14],edx
  403a0d:	mov    QWORD PTR [rsp+0x8],rsi
  403a12:	mov    DWORD PTR [rsp+0x4],eax
  403a16:	jge    403a87 <main@@Base+0x387>
  403a1c:	mov    eax,DWORD PTR [rsp+0x4]
  403a20:	movsxd rcx,eax
  403a23:	shl    rcx,0x5
  403a27:	mov    rdx,QWORD PTR [rsp+0x8]
  403a2c:	add    rdx,rcx
  403a2f:	mov    edi,DWORD PTR [rdx]
  403a31:	mov    rsi,QWORD PTR [rdx+0x8]
  403a35:	mov    r8d,DWORD PTR [rdx+0x10]
  403a39:	mov    r9b,BYTE PTR [rdx+0x14]
  403a3d:	mov    r10d,DWORD PTR [rdx+0x18]
  403a41:	mov    edx,r8d
  403a44:	movzx  ecx,r9b
  403a48:	mov    r8d,r10d
  403a4b:	mov    DWORD PTR [rsp],eax
  403a4e:	call   40b630 <__generate_code_for_binary_boolean_expression@@Base+0xca0>
  403a53:	mov    eax,DWORD PTR [rsp]
  403a56:	movsxd rsi,eax
  403a59:	shl    rsi,0x4
  403a5d:	mov    r11,QWORD PTR [rsp+0x18]
  403a62:	add    r11,rsi
  403a65:	mov    edi,DWORD PTR [r11]
  403a68:	mov    rsi,QWORD PTR [r11+0x8]
  403a6c:	call   40ba60 <__generate_code_for_binary_boolean_expression@@Base+0x10d0>
  403a71:	mov    eax,DWORD PTR [rsp]
  403a74:	add    eax,0x1
  403a77:	mov    ecx,DWORD PTR [rsp+0x14]
  403a7b:	cmp    eax,ecx
  403a7d:	mov    DWORD PTR [rsp+0x4],eax
  403a81:	jl     403a1c <main@@Base+0x31c>
  403a87:	call   40be80 <__generate_code_for_binary_boolean_expression@@Base+0x14f0>
  403a8c:	call   40c620 <__generate_code_for_binary_boolean_expression@@Base+0x1c90>
  403a91:	mov    eax,DWORD PTR [rsp+0x24]
  403a95:	add    eax,0x1
  403a98:	cmp    eax,0x1
  403a9b:	mov    DWORD PTR [rsp+0x34],eax
  403a9f:	jl     4039bf <main@@Base+0x2bf>
  403aa5:	add    rsp,0x38
  403aa9:	ret    
  403aaa:	nop    WORD PTR [rax+rax*1+0x0]
  403ab0:	push   rax
  403ab1:	call   4039b0 <main@@Base+0x2b0>
  403ab6:	mov    QWORD PTR [rip+0xe747],0x0        # 412208 <__bss_start@@Base+0x78>
  403ac1:	mov    QWORD PTR [rip+0xe734],0x0        # 412200 <__bss_start@@Base+0x70>
  403acc:	mov    QWORD PTR [rip+0xe721],0x0        # 4121f8 <__bss_start@@Base+0x68>
  403ad7:	mov    QWORD PTR [rip+0xe70e],0x0        # 4121f0 <__bss_start@@Base+0x60>
  403ae2:	mov    QWORD PTR [rip+0xe6fb],0x0        # 4121e8 <__bss_start@@Base+0x58>
  403aed:	mov    QWORD PTR [rip+0xe6e8],0x0        # 4121e0 <__bss_start@@Base+0x50>
  403af8:	mov    QWORD PTR [rip+0xe6d5],0x0        # 4121d8 <__bss_start@@Base+0x48>
  403b03:	mov    QWORD PTR [rip+0xe6c2],0x0        # 4121d0 <__bss_start@@Base+0x40>
  403b0e:	mov    QWORD PTR [rip+0xe6af],0x0        # 4121c8 <__bss_start@@Base+0x38>
  403b19:	mov    QWORD PTR [rip+0xe69c],0x0        # 4121c0 <__bss_start@@Base+0x30>
  403b24:	mov    QWORD PTR [rip+0xe689],0x0        # 4121b8 <__bss_start@@Base+0x28>
  403b2f:	mov    QWORD PTR [rip+0xe676],0x0        # 4121b0 <__bss_start@@Base+0x20>
  403b3a:	mov    QWORD PTR [rip+0xe663],0x0        # 4121a8 <__bss_start@@Base+0x18>
  403b45:	mov    QWORD PTR [rip+0xe650],0x0        # 4121a0 <__bss_start@@Base+0x10>
  403b50:	mov    QWORD PTR [rip+0xe6bd],0x0        # 412218 <__bss_start@@Base+0x88>
  403b5b:	mov    QWORD PTR [rip+0xe6aa],0x0        # 412210 <__bss_start@@Base+0x80>
  403b66:	mov    QWORD PTR [rip+0xe71f],0x0        # 412290 <__bss_start@@Base+0x100>
  403b71:	mov    QWORD PTR [rip+0xe70c],0x0        # 412288 <__bss_start@@Base+0xf8>
  403b7c:	mov    QWORD PTR [rip+0xe6f9],0x0        # 412280 <__bss_start@@Base+0xf0>
  403b87:	mov    QWORD PTR [rip+0xe6e6],0x0        # 412278 <__bss_start@@Base+0xe8>
  403b92:	mov    QWORD PTR [rip+0xe6d3],0x0        # 412270 <__bss_start@@Base+0xe0>
  403b9d:	mov    QWORD PTR [rip+0xe6c0],0x0        # 412268 <__bss_start@@Base+0xd8>
  403ba8:	mov    QWORD PTR [rip+0xe6ad],0x0        # 412260 <__bss_start@@Base+0xd0>
  403bb3:	mov    QWORD PTR [rip+0xe69a],0x0        # 412258 <__bss_start@@Base+0xc8>
  403bbe:	mov    QWORD PTR [rip+0xe687],0x0        # 412250 <__bss_start@@Base+0xc0>
  403bc9:	mov    QWORD PTR [rip+0xe674],0x0        # 412248 <__bss_start@@Base+0xb8>
  403bd4:	mov    QWORD PTR [rip+0xe661],0x0        # 412240 <__bss_start@@Base+0xb0>
  403bdf:	mov    QWORD PTR [rip+0xe64e],0x0        # 412238 <__bss_start@@Base+0xa8>
  403bea:	mov    QWORD PTR [rip+0xe63b],0x0        # 412230 <__bss_start@@Base+0xa0>
  403bf5:	mov    QWORD PTR [rip+0xe628],0x0        # 412228 <__bss_start@@Base+0x98>
  403c00:	mov    QWORD PTR [rip+0xe615],0x0        # 412220 <__bss_start@@Base+0x90>
  403c0b:	pop    rax
  403c0c:	ret    
  403c0d:	nop    DWORD PTR [rax]
  403c10:	push   rax
  403c11:	lea    rdi,[rip+0xfffffffffffffd98]        # 4039b0 <main@@Base+0x2b0>
  403c18:	lea    rsi,[rip+0xfffffffffffffe91]        # 403ab0 <main@@Base+0x3b0>
  403c1f:	call   40c9e0 <__gcov_flush@@Base+0xa0>
  403c24:	pop    rax
  403c25:	ret    
  403c26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403c30 <init_token_int_type@@Base>:
  403c30:	push   rbp
  403c31:	mov    rbp,rsp
  403c34:	mov    rax,QWORD PTR [rip+0xe665]        # 4122a0 <__bss_start@@Base+0x110>
  403c3b:	add    rax,0x1
  403c3f:	mov    QWORD PTR [rip+0xe65a],rax        # 4122a0 <__bss_start@@Base+0x110>
  403c46:	mov    QWORD PTR [rbp-0x10],rdi
  403c4a:	mov    rax,QWORD PTR [rip+0xe657]        # 4122a8 <__bss_start@@Base+0x118>
  403c51:	add    rax,0x1
  403c55:	mov    QWORD PTR [rip+0xe64c],rax        # 4122a8 <__bss_start@@Base+0x118>
  403c5c:	mov    rax,QWORD PTR [rbp-0x10]
  403c60:	mov    QWORD PTR [rbp-0x8],rax
  403c64:	mov    rcx,QWORD PTR [rbp-0x8]
  403c68:	mov    DWORD PTR [rcx],0x0
  403c6e:	pop    rbp
  403c6f:	ret    

0000000000403c70 <init_token_int_value@@Base>:
  403c70:	push   rbp
  403c71:	mov    rbp,rsp
  403c74:	mov    rax,QWORD PTR [rip+0xe635]        # 4122b0 <__bss_start@@Base+0x120>
  403c7b:	add    rax,0x1
  403c7f:	mov    QWORD PTR [rip+0xe62a],rax        # 4122b0 <__bss_start@@Base+0x120>
  403c86:	mov    QWORD PTR [rbp-0x18],rdi
  403c8a:	mov    DWORD PTR [rbp-0x1c],esi
  403c8d:	mov    rax,QWORD PTR [rip+0xe624]        # 4122b8 <__bss_start@@Base+0x128>
  403c94:	add    rax,0x1
  403c98:	mov    QWORD PTR [rip+0xe619],rax        # 4122b8 <__bss_start@@Base+0x128>
  403c9f:	mov    rax,QWORD PTR [rbp-0x18]
  403ca3:	mov    QWORD PTR [rbp-0x8],rax
  403ca7:	mov    ecx,DWORD PTR [rbp-0x1c]
  403caa:	mov    DWORD PTR [rbp-0xc],ecx
  403cad:	mov    rdx,QWORD PTR [rbp-0x8]
  403cb1:	mov    DWORD PTR [rdx],0x1
  403cb7:	mov    esi,DWORD PTR [rbp-0xc]
  403cba:	mov    rdx,QWORD PTR [rbp-0x8]
  403cbe:	mov    DWORD PTR [rdx+0x4],esi
  403cc1:	pop    rbp
  403cc2:	ret    
  403cc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ccd:	nop    DWORD PTR [rax]

0000000000403cd0 <init_token_function@@Base>:
  403cd0:	push   rbp
  403cd1:	mov    rbp,rsp
  403cd4:	mov    rax,QWORD PTR [rip+0xe5e5]        # 4122c0 <__bss_start@@Base+0x130>
  403cdb:	add    rax,0x1
  403cdf:	mov    QWORD PTR [rip+0xe5da],rax        # 4122c0 <__bss_start@@Base+0x130>
  403ce6:	mov    QWORD PTR [rbp-0x18],rdi
  403cea:	mov    QWORD PTR [rbp-0x20],rsi
  403cee:	mov    rax,QWORD PTR [rip+0xe5d3]        # 4122c8 <__bss_start@@Base+0x138>
  403cf5:	add    rax,0x1
  403cf9:	mov    QWORD PTR [rip+0xe5c8],rax        # 4122c8 <__bss_start@@Base+0x138>
  403d00:	mov    rax,QWORD PTR [rbp-0x18]
  403d04:	mov    QWORD PTR [rbp-0x8],rax
  403d08:	mov    rcx,QWORD PTR [rbp-0x20]
  403d0c:	mov    QWORD PTR [rbp-0x10],rcx
  403d10:	mov    rdx,QWORD PTR [rbp-0x8]
  403d14:	mov    DWORD PTR [rdx],0x2
  403d1a:	mov    rdx,QWORD PTR [rbp-0x10]
  403d1e:	mov    rsi,QWORD PTR [rbp-0x8]
  403d22:	mov    QWORD PTR [rsi+0x8],rdx
  403d26:	pop    rbp
  403d27:	ret    
  403d28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d30 <init_token_opar@@Base>:
  403d30:	push   rbp
  403d31:	mov    rbp,rsp
  403d34:	mov    rax,QWORD PTR [rip+0xe595]        # 4122d0 <__bss_start@@Base+0x140>
  403d3b:	add    rax,0x1
  403d3f:	mov    QWORD PTR [rip+0xe58a],rax        # 4122d0 <__bss_start@@Base+0x140>
  403d46:	mov    QWORD PTR [rbp-0x10],rdi
  403d4a:	mov    rax,QWORD PTR [rip+0xe587]        # 4122d8 <__bss_start@@Base+0x148>
  403d51:	add    rax,0x1
  403d55:	mov    QWORD PTR [rip+0xe57c],rax        # 4122d8 <__bss_start@@Base+0x148>
  403d5c:	mov    rax,QWORD PTR [rbp-0x10]
  403d60:	mov    QWORD PTR [rbp-0x8],rax
  403d64:	mov    rcx,QWORD PTR [rbp-0x8]
  403d68:	mov    DWORD PTR [rcx],0x3
  403d6e:	pop    rbp
  403d6f:	ret    

0000000000403d70 <init_token_cpar@@Base>:
  403d70:	push   rbp
  403d71:	mov    rbp,rsp
  403d74:	mov    rax,QWORD PTR [rip+0xe565]        # 4122e0 <__bss_start@@Base+0x150>
  403d7b:	add    rax,0x1
  403d7f:	mov    QWORD PTR [rip+0xe55a],rax        # 4122e0 <__bss_start@@Base+0x150>
  403d86:	mov    QWORD PTR [rbp-0x10],rdi
  403d8a:	mov    rax,QWORD PTR [rip+0xe557]        # 4122e8 <__bss_start@@Base+0x158>
  403d91:	add    rax,0x1
  403d95:	mov    QWORD PTR [rip+0xe54c],rax        # 4122e8 <__bss_start@@Base+0x158>
  403d9c:	mov    rax,QWORD PTR [rbp-0x10]
  403da0:	mov    QWORD PTR [rbp-0x8],rax
  403da4:	mov    rcx,QWORD PTR [rbp-0x8]
  403da8:	mov    DWORD PTR [rcx],0x4
  403dae:	pop    rbp
  403daf:	ret    

0000000000403db0 <init_token_obra@@Base>:
  403db0:	push   rbp
  403db1:	mov    rbp,rsp
  403db4:	mov    rax,QWORD PTR [rip+0xe535]        # 4122f0 <__bss_start@@Base+0x160>
  403dbb:	add    rax,0x1
  403dbf:	mov    QWORD PTR [rip+0xe52a],rax        # 4122f0 <__bss_start@@Base+0x160>
  403dc6:	mov    QWORD PTR [rbp-0x10],rdi
  403dca:	mov    rax,QWORD PTR [rip+0xe527]        # 4122f8 <__bss_start@@Base+0x168>
  403dd1:	add    rax,0x1
  403dd5:	mov    QWORD PTR [rip+0xe51c],rax        # 4122f8 <__bss_start@@Base+0x168>
  403ddc:	mov    rax,QWORD PTR [rbp-0x10]
  403de0:	mov    QWORD PTR [rbp-0x8],rax
  403de4:	mov    rcx,QWORD PTR [rbp-0x8]
  403de8:	mov    DWORD PTR [rcx],0x5
  403dee:	pop    rbp
  403def:	ret    

0000000000403df0 <init_token_cbra@@Base>:
  403df0:	push   rbp
  403df1:	mov    rbp,rsp
  403df4:	mov    rax,QWORD PTR [rip+0xe505]        # 412300 <__bss_start@@Base+0x170>
  403dfb:	add    rax,0x1
  403dff:	mov    QWORD PTR [rip+0xe4fa],rax        # 412300 <__bss_start@@Base+0x170>
  403e06:	mov    QWORD PTR [rbp-0x10],rdi
  403e0a:	mov    rax,QWORD PTR [rip+0xe4f7]        # 412308 <__bss_start@@Base+0x178>
  403e11:	add    rax,0x1
  403e15:	mov    QWORD PTR [rip+0xe4ec],rax        # 412308 <__bss_start@@Base+0x178>
  403e1c:	mov    rax,QWORD PTR [rbp-0x10]
  403e20:	mov    QWORD PTR [rbp-0x8],rax
  403e24:	mov    rcx,QWORD PTR [rbp-0x8]
  403e28:	mov    DWORD PTR [rcx],0x6
  403e2e:	pop    rbp
  403e2f:	ret    

0000000000403e30 <init_token_return@@Base>:
  403e30:	push   rbp
  403e31:	mov    rbp,rsp
  403e34:	mov    rax,QWORD PTR [rip+0xe4d5]        # 412310 <__bss_start@@Base+0x180>
  403e3b:	add    rax,0x1
  403e3f:	mov    QWORD PTR [rip+0xe4ca],rax        # 412310 <__bss_start@@Base+0x180>
  403e46:	mov    QWORD PTR [rbp-0x10],rdi
  403e4a:	mov    rax,QWORD PTR [rip+0xe4c7]        # 412318 <__bss_start@@Base+0x188>
  403e51:	add    rax,0x1
  403e55:	mov    QWORD PTR [rip+0xe4bc],rax        # 412318 <__bss_start@@Base+0x188>
  403e5c:	mov    rax,QWORD PTR [rbp-0x10]
  403e60:	mov    QWORD PTR [rbp-0x8],rax
  403e64:	mov    rcx,QWORD PTR [rbp-0x8]
  403e68:	mov    DWORD PTR [rcx],0x7
  403e6e:	pop    rbp
  403e6f:	ret    

0000000000403e70 <init_token_semicolon@@Base>:
  403e70:	push   rbp
  403e71:	mov    rbp,rsp
  403e74:	mov    rax,QWORD PTR [rip+0xe4a5]        # 412320 <__bss_start@@Base+0x190>
  403e7b:	add    rax,0x1
  403e7f:	mov    QWORD PTR [rip+0xe49a],rax        # 412320 <__bss_start@@Base+0x190>
  403e86:	mov    QWORD PTR [rbp-0x10],rdi
  403e8a:	mov    rax,QWORD PTR [rip+0xe497]        # 412328 <__bss_start@@Base+0x198>
  403e91:	add    rax,0x1
  403e95:	mov    QWORD PTR [rip+0xe48c],rax        # 412328 <__bss_start@@Base+0x198>
  403e9c:	mov    rax,QWORD PTR [rbp-0x10]
  403ea0:	mov    QWORD PTR [rbp-0x8],rax
  403ea4:	mov    rcx,QWORD PTR [rbp-0x8]
  403ea8:	mov    DWORD PTR [rcx],0x8
  403eae:	pop    rbp
  403eaf:	ret    

0000000000403eb0 <init_token_eof@@Base>:
  403eb0:	push   rbp
  403eb1:	mov    rbp,rsp
  403eb4:	mov    rax,QWORD PTR [rip+0xe475]        # 412330 <__bss_start@@Base+0x1a0>
  403ebb:	add    rax,0x1
  403ebf:	mov    QWORD PTR [rip+0xe46a],rax        # 412330 <__bss_start@@Base+0x1a0>
  403ec6:	mov    QWORD PTR [rbp-0x10],rdi
  403eca:	mov    rax,QWORD PTR [rip+0xe467]        # 412338 <__bss_start@@Base+0x1a8>
  403ed1:	add    rax,0x1
  403ed5:	mov    QWORD PTR [rip+0xe45c],rax        # 412338 <__bss_start@@Base+0x1a8>
  403edc:	mov    rax,QWORD PTR [rbp-0x10]
  403ee0:	mov    QWORD PTR [rbp-0x8],rax
  403ee4:	mov    rcx,QWORD PTR [rbp-0x8]
  403ee8:	mov    DWORD PTR [rcx],0x9
  403eee:	pop    rbp
  403eef:	ret    

0000000000403ef0 <init_token_if@@Base>:
  403ef0:	push   rbp
  403ef1:	mov    rbp,rsp
  403ef4:	mov    rax,QWORD PTR [rip+0xe445]        # 412340 <__bss_start@@Base+0x1b0>
  403efb:	add    rax,0x1
  403eff:	mov    QWORD PTR [rip+0xe43a],rax        # 412340 <__bss_start@@Base+0x1b0>
  403f06:	mov    QWORD PTR [rbp-0x10],rdi
  403f0a:	mov    rax,QWORD PTR [rip+0xe437]        # 412348 <__bss_start@@Base+0x1b8>
  403f11:	add    rax,0x1
  403f15:	mov    QWORD PTR [rip+0xe42c],rax        # 412348 <__bss_start@@Base+0x1b8>
  403f1c:	mov    rax,QWORD PTR [rbp-0x10]
  403f20:	mov    QWORD PTR [rbp-0x8],rax
  403f24:	mov    rcx,QWORD PTR [rbp-0x8]
  403f28:	mov    DWORD PTR [rcx],0xa
  403f2e:	pop    rbp
  403f2f:	ret    

0000000000403f30 <init_token_else@@Base>:
  403f30:	push   rbp
  403f31:	mov    rbp,rsp
  403f34:	mov    rax,QWORD PTR [rip+0xe415]        # 412350 <__bss_start@@Base+0x1c0>
  403f3b:	add    rax,0x1
  403f3f:	mov    QWORD PTR [rip+0xe40a],rax        # 412350 <__bss_start@@Base+0x1c0>
  403f46:	mov    QWORD PTR [rbp-0x10],rdi
  403f4a:	mov    rax,QWORD PTR [rip+0xe407]        # 412358 <__bss_start@@Base+0x1c8>
  403f51:	add    rax,0x1
  403f55:	mov    QWORD PTR [rip+0xe3fc],rax        # 412358 <__bss_start@@Base+0x1c8>
  403f5c:	mov    rax,QWORD PTR [rbp-0x10]
  403f60:	mov    QWORD PTR [rbp-0x8],rax
  403f64:	mov    rcx,QWORD PTR [rbp-0x8]
  403f68:	mov    DWORD PTR [rcx],0xb
  403f6e:	pop    rbp
  403f6f:	ret    

0000000000403f70 <init_token_boolean_op@@Base>:
  403f70:	push   rbp
  403f71:	mov    rbp,rsp
  403f74:	mov    rax,QWORD PTR [rip+0xe3e5]        # 412360 <__bss_start@@Base+0x1d0>
  403f7b:	add    rax,0x1
  403f7f:	mov    QWORD PTR [rip+0xe3da],rax        # 412360 <__bss_start@@Base+0x1d0>
  403f86:	mov    QWORD PTR [rbp-0x18],rdi
  403f8a:	mov    QWORD PTR [rbp-0x20],rsi
  403f8e:	mov    rax,QWORD PTR [rip+0xe3d3]        # 412368 <__bss_start@@Base+0x1d8>
  403f95:	add    rax,0x1
  403f99:	mov    QWORD PTR [rip+0xe3c8],rax        # 412368 <__bss_start@@Base+0x1d8>
  403fa0:	mov    rax,QWORD PTR [rbp-0x18]
  403fa4:	mov    QWORD PTR [rbp-0x8],rax
  403fa8:	mov    rcx,QWORD PTR [rbp-0x20]
  403fac:	mov    QWORD PTR [rbp-0x10],rcx
  403fb0:	mov    rdx,QWORD PTR [rbp-0x8]
  403fb4:	mov    DWORD PTR [rdx],0xc
  403fba:	mov    rdx,QWORD PTR [rbp-0x10]
  403fbe:	mov    rsi,QWORD PTR [rbp-0x8]
  403fc2:	mov    QWORD PTR [rsi+0x8],rdx
  403fc6:	pop    rbp
  403fc7:	ret    
  403fc8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403fd0 <free_token_int_type@@Base>:
  403fd0:	push   rbp
  403fd1:	mov    rbp,rsp
  403fd4:	sub    rsp,0x10
  403fd8:	mov    rax,QWORD PTR [rip+0xe391]        # 412370 <__bss_start@@Base+0x1e0>
  403fdf:	add    rax,0x1
  403fe3:	mov    QWORD PTR [rip+0xe386],rax        # 412370 <__bss_start@@Base+0x1e0>
  403fea:	mov    QWORD PTR [rbp-0x10],rdi
  403fee:	mov    rax,QWORD PTR [rip+0xe383]        # 412378 <__bss_start@@Base+0x1e8>
  403ff5:	add    rax,0x1
  403ff9:	mov    QWORD PTR [rip+0xe378],rax        # 412378 <__bss_start@@Base+0x1e8>
  404000:	mov    rax,QWORD PTR [rbp-0x10]
  404004:	mov    QWORD PTR [rbp-0x8],rax
  404008:	mov    rcx,QWORD PTR [rbp-0x8]
  40400c:	mov    rdi,rcx
  40400f:	call   403040 <free@plt>
  404014:	add    rsp,0x10
  404018:	pop    rbp
  404019:	ret    
  40401a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404020 <free_token_int_value@@Base>:
  404020:	push   rbp
  404021:	mov    rbp,rsp
  404024:	sub    rsp,0x10
  404028:	mov    rax,QWORD PTR [rip+0xe351]        # 412380 <__bss_start@@Base+0x1f0>
  40402f:	add    rax,0x1
  404033:	mov    QWORD PTR [rip+0xe346],rax        # 412380 <__bss_start@@Base+0x1f0>
  40403a:	mov    QWORD PTR [rbp-0x10],rdi
  40403e:	mov    rax,QWORD PTR [rip+0xe343]        # 412388 <__bss_start@@Base+0x1f8>
  404045:	add    rax,0x1
  404049:	mov    QWORD PTR [rip+0xe338],rax        # 412388 <__bss_start@@Base+0x1f8>
  404050:	mov    rax,QWORD PTR [rbp-0x10]
  404054:	mov    QWORD PTR [rbp-0x8],rax
  404058:	mov    rcx,QWORD PTR [rbp-0x8]
  40405c:	mov    rdi,rcx
  40405f:	call   403040 <free@plt>
  404064:	add    rsp,0x10
  404068:	pop    rbp
  404069:	ret    
  40406a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404070 <free_token_function@@Base>:
  404070:	push   rbp
  404071:	mov    rbp,rsp
  404074:	sub    rsp,0x10
  404078:	mov    rax,QWORD PTR [rip+0xe311]        # 412390 <__bss_start@@Base+0x200>
  40407f:	add    rax,0x1
  404083:	mov    QWORD PTR [rip+0xe306],rax        # 412390 <__bss_start@@Base+0x200>
  40408a:	mov    QWORD PTR [rbp-0x10],rdi
  40408e:	mov    rax,QWORD PTR [rip+0xe303]        # 412398 <__bss_start@@Base+0x208>
  404095:	add    rax,0x1
  404099:	mov    QWORD PTR [rip+0xe2f8],rax        # 412398 <__bss_start@@Base+0x208>
  4040a0:	mov    rax,QWORD PTR [rbp-0x10]
  4040a4:	mov    QWORD PTR [rbp-0x8],rax
  4040a8:	mov    rcx,QWORD PTR [rbp-0x8]
  4040ac:	mov    rdi,rcx
  4040af:	call   403040 <free@plt>
  4040b4:	add    rsp,0x10
  4040b8:	pop    rbp
  4040b9:	ret    
  4040ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004040c0 <free_token_opar@@Base>:
  4040c0:	push   rbp
  4040c1:	mov    rbp,rsp
  4040c4:	sub    rsp,0x10
  4040c8:	mov    rax,QWORD PTR [rip+0xe2d1]        # 4123a0 <__bss_start@@Base+0x210>
  4040cf:	add    rax,0x1
  4040d3:	mov    QWORD PTR [rip+0xe2c6],rax        # 4123a0 <__bss_start@@Base+0x210>
  4040da:	mov    QWORD PTR [rbp-0x10],rdi
  4040de:	mov    rax,QWORD PTR [rip+0xe2c3]        # 4123a8 <__bss_start@@Base+0x218>
  4040e5:	add    rax,0x1
  4040e9:	mov    QWORD PTR [rip+0xe2b8],rax        # 4123a8 <__bss_start@@Base+0x218>
  4040f0:	mov    rax,QWORD PTR [rbp-0x10]
  4040f4:	mov    QWORD PTR [rbp-0x8],rax
  4040f8:	mov    rcx,QWORD PTR [rbp-0x8]
  4040fc:	mov    rdi,rcx
  4040ff:	call   403040 <free@plt>
  404104:	add    rsp,0x10
  404108:	pop    rbp
  404109:	ret    
  40410a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404110 <free_token_cpar@@Base>:
  404110:	push   rbp
  404111:	mov    rbp,rsp
  404114:	sub    rsp,0x10
  404118:	mov    rax,QWORD PTR [rip+0xe291]        # 4123b0 <__bss_start@@Base+0x220>
  40411f:	add    rax,0x1
  404123:	mov    QWORD PTR [rip+0xe286],rax        # 4123b0 <__bss_start@@Base+0x220>
  40412a:	mov    QWORD PTR [rbp-0x10],rdi
  40412e:	mov    rax,QWORD PTR [rip+0xe283]        # 4123b8 <__bss_start@@Base+0x228>
  404135:	add    rax,0x1
  404139:	mov    QWORD PTR [rip+0xe278],rax        # 4123b8 <__bss_start@@Base+0x228>
  404140:	mov    rax,QWORD PTR [rbp-0x10]
  404144:	mov    QWORD PTR [rbp-0x8],rax
  404148:	mov    rcx,QWORD PTR [rbp-0x8]
  40414c:	mov    rdi,rcx
  40414f:	call   403040 <free@plt>
  404154:	add    rsp,0x10
  404158:	pop    rbp
  404159:	ret    
  40415a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404160 <free_token_obra@@Base>:
  404160:	push   rbp
  404161:	mov    rbp,rsp
  404164:	sub    rsp,0x10
  404168:	mov    rax,QWORD PTR [rip+0xe251]        # 4123c0 <__bss_start@@Base+0x230>
  40416f:	add    rax,0x1
  404173:	mov    QWORD PTR [rip+0xe246],rax        # 4123c0 <__bss_start@@Base+0x230>
  40417a:	mov    QWORD PTR [rbp-0x10],rdi
  40417e:	mov    rax,QWORD PTR [rip+0xe243]        # 4123c8 <__bss_start@@Base+0x238>
  404185:	add    rax,0x1
  404189:	mov    QWORD PTR [rip+0xe238],rax        # 4123c8 <__bss_start@@Base+0x238>
  404190:	mov    rax,QWORD PTR [rbp-0x10]
  404194:	mov    QWORD PTR [rbp-0x8],rax
  404198:	mov    rcx,QWORD PTR [rbp-0x8]
  40419c:	mov    rdi,rcx
  40419f:	call   403040 <free@plt>
  4041a4:	add    rsp,0x10
  4041a8:	pop    rbp
  4041a9:	ret    
  4041aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004041b0 <free_token_cbra@@Base>:
  4041b0:	push   rbp
  4041b1:	mov    rbp,rsp
  4041b4:	sub    rsp,0x10
  4041b8:	mov    rax,QWORD PTR [rip+0xe211]        # 4123d0 <__bss_start@@Base+0x240>
  4041bf:	add    rax,0x1
  4041c3:	mov    QWORD PTR [rip+0xe206],rax        # 4123d0 <__bss_start@@Base+0x240>
  4041ca:	mov    QWORD PTR [rbp-0x10],rdi
  4041ce:	mov    rax,QWORD PTR [rip+0xe203]        # 4123d8 <__bss_start@@Base+0x248>
  4041d5:	add    rax,0x1
  4041d9:	mov    QWORD PTR [rip+0xe1f8],rax        # 4123d8 <__bss_start@@Base+0x248>
  4041e0:	mov    rax,QWORD PTR [rbp-0x10]
  4041e4:	mov    QWORD PTR [rbp-0x8],rax
  4041e8:	mov    rcx,QWORD PTR [rbp-0x8]
  4041ec:	mov    rdi,rcx
  4041ef:	call   403040 <free@plt>
  4041f4:	add    rsp,0x10
  4041f8:	pop    rbp
  4041f9:	ret    
  4041fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404200 <free_token_return@@Base>:
  404200:	push   rbp
  404201:	mov    rbp,rsp
  404204:	sub    rsp,0x10
  404208:	mov    rax,QWORD PTR [rip+0xe1d1]        # 4123e0 <__bss_start@@Base+0x250>
  40420f:	add    rax,0x1
  404213:	mov    QWORD PTR [rip+0xe1c6],rax        # 4123e0 <__bss_start@@Base+0x250>
  40421a:	mov    QWORD PTR [rbp-0x10],rdi
  40421e:	mov    rax,QWORD PTR [rip+0xe1c3]        # 4123e8 <__bss_start@@Base+0x258>
  404225:	add    rax,0x1
  404229:	mov    QWORD PTR [rip+0xe1b8],rax        # 4123e8 <__bss_start@@Base+0x258>
  404230:	mov    rax,QWORD PTR [rbp-0x10]
  404234:	mov    QWORD PTR [rbp-0x8],rax
  404238:	mov    rcx,QWORD PTR [rbp-0x8]
  40423c:	mov    rdi,rcx
  40423f:	call   403040 <free@plt>
  404244:	add    rsp,0x10
  404248:	pop    rbp
  404249:	ret    
  40424a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404250 <free_token_semicolon@@Base>:
  404250:	push   rbp
  404251:	mov    rbp,rsp
  404254:	sub    rsp,0x10
  404258:	mov    rax,QWORD PTR [rip+0xe191]        # 4123f0 <__bss_start@@Base+0x260>
  40425f:	add    rax,0x1
  404263:	mov    QWORD PTR [rip+0xe186],rax        # 4123f0 <__bss_start@@Base+0x260>
  40426a:	mov    QWORD PTR [rbp-0x10],rdi
  40426e:	mov    rax,QWORD PTR [rip+0xe183]        # 4123f8 <__bss_start@@Base+0x268>
  404275:	add    rax,0x1
  404279:	mov    QWORD PTR [rip+0xe178],rax        # 4123f8 <__bss_start@@Base+0x268>
  404280:	mov    rax,QWORD PTR [rbp-0x10]
  404284:	mov    QWORD PTR [rbp-0x8],rax
  404288:	mov    rcx,QWORD PTR [rbp-0x8]
  40428c:	mov    rdi,rcx
  40428f:	call   403040 <free@plt>
  404294:	add    rsp,0x10
  404298:	pop    rbp
  404299:	ret    
  40429a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004042a0 <free_token_eof@@Base>:
  4042a0:	push   rbp
  4042a1:	mov    rbp,rsp
  4042a4:	sub    rsp,0x10
  4042a8:	mov    rax,QWORD PTR [rip+0xe151]        # 412400 <__bss_start@@Base+0x270>
  4042af:	add    rax,0x1
  4042b3:	mov    QWORD PTR [rip+0xe146],rax        # 412400 <__bss_start@@Base+0x270>
  4042ba:	mov    QWORD PTR [rbp-0x10],rdi
  4042be:	mov    rax,QWORD PTR [rip+0xe143]        # 412408 <__bss_start@@Base+0x278>
  4042c5:	add    rax,0x1
  4042c9:	mov    QWORD PTR [rip+0xe138],rax        # 412408 <__bss_start@@Base+0x278>
  4042d0:	mov    rax,QWORD PTR [rbp-0x10]
  4042d4:	mov    QWORD PTR [rbp-0x8],rax
  4042d8:	mov    rcx,QWORD PTR [rbp-0x8]
  4042dc:	mov    rdi,rcx
  4042df:	call   403040 <free@plt>
  4042e4:	add    rsp,0x10
  4042e8:	pop    rbp
  4042e9:	ret    
  4042ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000004042f0 <free_token_if@@Base>:
  4042f0:	push   rbp
  4042f1:	mov    rbp,rsp
  4042f4:	sub    rsp,0x10
  4042f8:	mov    rax,QWORD PTR [rip+0xe111]        # 412410 <__bss_start@@Base+0x280>
  4042ff:	add    rax,0x1
  404303:	mov    QWORD PTR [rip+0xe106],rax        # 412410 <__bss_start@@Base+0x280>
  40430a:	mov    QWORD PTR [rbp-0x10],rdi
  40430e:	mov    rax,QWORD PTR [rip+0xe103]        # 412418 <__bss_start@@Base+0x288>
  404315:	add    rax,0x1
  404319:	mov    QWORD PTR [rip+0xe0f8],rax        # 412418 <__bss_start@@Base+0x288>
  404320:	mov    rax,QWORD PTR [rbp-0x10]
  404324:	mov    QWORD PTR [rbp-0x8],rax
  404328:	mov    rcx,QWORD PTR [rbp-0x8]
  40432c:	mov    rdi,rcx
  40432f:	call   403040 <free@plt>
  404334:	add    rsp,0x10
  404338:	pop    rbp
  404339:	ret    
  40433a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404340 <free_token_else@@Base>:
  404340:	push   rbp
  404341:	mov    rbp,rsp
  404344:	sub    rsp,0x10
  404348:	mov    rax,QWORD PTR [rip+0xe0d1]        # 412420 <__bss_start@@Base+0x290>
  40434f:	add    rax,0x1
  404353:	mov    QWORD PTR [rip+0xe0c6],rax        # 412420 <__bss_start@@Base+0x290>
  40435a:	mov    QWORD PTR [rbp-0x10],rdi
  40435e:	mov    rax,QWORD PTR [rip+0xe0c3]        # 412428 <__bss_start@@Base+0x298>
  404365:	add    rax,0x1
  404369:	mov    QWORD PTR [rip+0xe0b8],rax        # 412428 <__bss_start@@Base+0x298>
  404370:	mov    rax,QWORD PTR [rbp-0x10]
  404374:	mov    QWORD PTR [rbp-0x8],rax
  404378:	mov    rcx,QWORD PTR [rbp-0x8]
  40437c:	mov    rdi,rcx
  40437f:	call   403040 <free@plt>
  404384:	add    rsp,0x10
  404388:	pop    rbp
  404389:	ret    
  40438a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404390 <free_token_boolean_op@@Base>:
  404390:	push   rbp
  404391:	mov    rbp,rsp
  404394:	sub    rsp,0x10
  404398:	mov    rax,QWORD PTR [rip+0xe091]        # 412430 <__bss_start@@Base+0x2a0>
  40439f:	add    rax,0x1
  4043a3:	mov    QWORD PTR [rip+0xe086],rax        # 412430 <__bss_start@@Base+0x2a0>
  4043aa:	mov    QWORD PTR [rbp-0x10],rdi
  4043ae:	mov    eax,0x2
  4043b3:	mov    ecx,eax
  4043b5:	mov    eax,0x1
  4043ba:	mov    edx,eax
  4043bc:	mov    rsi,QWORD PTR [rbp-0x10]
  4043c0:	mov    QWORD PTR [rbp-0x8],rsi
  4043c4:	mov    rdi,QWORD PTR [rbp-0x8]
  4043c8:	mov    rdi,QWORD PTR [rdi+0x8]
  4043cc:	cmp    rdi,0x0
  4043d0:	setne  r8b
  4043d4:	cmp    rdi,0x0
  4043d8:	cmovne rcx,rdx
  4043dc:	lea    rdx,[rip+0xe04d]        # 412430 <__bss_start@@Base+0x2a0>
  4043e3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4043e7:	add    rdi,0x1
  4043eb:	mov    QWORD PTR [rdx+rcx*8],rdi
  4043ef:	test   r8b,0x1
  4043f3:	jne    4043fe <free_token_boolean_op@@Base+0x6e>
  4043f9:	jmp    40441d <free_token_boolean_op@@Base+0x8d>
  4043fe:	mov    rax,QWORD PTR [rip+0xe043]        # 412448 <__bss_start@@Base+0x2b8>
  404405:	add    rax,0x1
  404409:	mov    QWORD PTR [rip+0xe038],rax        # 412448 <__bss_start@@Base+0x2b8>
  404410:	mov    rax,QWORD PTR [rbp-0x8]
  404414:	mov    rdi,QWORD PTR [rax+0x8]
  404418:	call   403040 <free@plt>
  40441d:	mov    rax,QWORD PTR [rip+0xe02c]        # 412450 <__bss_start@@Base+0x2c0>
  404424:	add    rax,0x1
  404428:	mov    QWORD PTR [rip+0xe021],rax        # 412450 <__bss_start@@Base+0x2c0>
  40442f:	mov    rax,QWORD PTR [rbp-0x8]
  404433:	mov    rdi,rax
  404436:	call   403040 <free@plt>
  40443b:	add    rsp,0x10
  40443f:	pop    rbp
  404440:	ret    
  404441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40444b:	nop    DWORD PTR [rax+rax*1+0x0]
  404450:	sub    rsp,0x38
  404454:	xor    eax,eax
  404456:	mov    DWORD PTR [rsp+0x34],eax
  40445a:	jmp    40445f <free_token_boolean_op@@Base+0xcf>
  40445f:	mov    eax,DWORD PTR [rsp+0x34]
  404463:	movsxd rcx,eax
  404466:	imul   rcx,rcx,0x30
  40446a:	lea    rdx,[rip+0xcd9f]        # 411210 <_IO_stdin_used@@Base+0x4210>
  404471:	add    rdx,rcx
  404474:	mov    rdi,QWORD PTR [rdx]
  404477:	mov    rsi,QWORD PTR [rdx+0x8]
  40447b:	mov    r8d,DWORD PTR [rdx+0x10]
  40447f:	mov    QWORD PTR [rsp+0x28],rdx
  404484:	mov    edx,r8d
  404487:	mov    DWORD PTR [rsp+0x24],eax
  40448b:	call   40b1e0 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  404490:	xor    eax,eax
  404492:	mov    rcx,QWORD PTR [rsp+0x28]
  404497:	mov    edx,DWORD PTR [rcx+0x18]
  40449a:	mov    rsi,QWORD PTR [rcx+0x20]
  40449e:	mov    rdi,QWORD PTR [rcx+0x28]
  4044a2:	cmp    eax,edx
  4044a4:	mov    QWORD PTR [rsp+0x18],rdi
  4044a9:	mov    DWORD PTR [rsp+0x14],edx
  4044ad:	mov    QWORD PTR [rsp+0x8],rsi
  4044b2:	mov    DWORD PTR [rsp+0x4],eax
  4044b6:	jge    404527 <free_token_boolean_op@@Base+0x197>
  4044bc:	mov    eax,DWORD PTR [rsp+0x4]
  4044c0:	movsxd rcx,eax
  4044c3:	shl    rcx,0x5
  4044c7:	mov    rdx,QWORD PTR [rsp+0x8]
  4044cc:	add    rdx,rcx
  4044cf:	mov    edi,DWORD PTR [rdx]
  4044d1:	mov    rsi,QWORD PTR [rdx+0x8]
  4044d5:	mov    r8d,DWORD PTR [rdx+0x10]
  4044d9:	mov    r9b,BYTE PTR [rdx+0x14]
  4044dd:	mov    r10d,DWORD PTR [rdx+0x18]
  4044e1:	mov    edx,r8d
  4044e4:	movzx  ecx,r9b
  4044e8:	mov    r8d,r10d
  4044eb:	mov    DWORD PTR [rsp],eax
  4044ee:	call   40b630 <__generate_code_for_binary_boolean_expression@@Base+0xca0>
  4044f3:	mov    eax,DWORD PTR [rsp]
  4044f6:	movsxd rsi,eax
  4044f9:	shl    rsi,0x4
  4044fd:	mov    r11,QWORD PTR [rsp+0x18]
  404502:	add    r11,rsi
  404505:	mov    edi,DWORD PTR [r11]
  404508:	mov    rsi,QWORD PTR [r11+0x8]
  40450c:	call   40ba60 <__generate_code_for_binary_boolean_expression@@Base+0x10d0>
  404511:	mov    eax,DWORD PTR [rsp]
  404514:	add    eax,0x1
  404517:	mov    ecx,DWORD PTR [rsp+0x14]
  40451b:	cmp    eax,ecx
  40451d:	mov    DWORD PTR [rsp+0x4],eax
  404521:	jl     4044bc <free_token_boolean_op@@Base+0x12c>
  404527:	call   40be80 <__generate_code_for_binary_boolean_expression@@Base+0x14f0>
  40452c:	call   40c620 <__generate_code_for_binary_boolean_expression@@Base+0x1c90>
  404531:	mov    eax,DWORD PTR [rsp+0x24]
  404535:	add    eax,0x1
  404538:	cmp    eax,0x1
  40453b:	mov    DWORD PTR [rsp+0x34],eax
  40453f:	jl     40445f <free_token_boolean_op@@Base+0xcf>
  404545:	add    rsp,0x38
  404549:	ret    
  40454a:	nop    WORD PTR [rax+rax*1+0x0]
  404550:	push   rax
  404551:	call   404450 <free_token_boolean_op@@Base+0xc0>
  404556:	mov    QWORD PTR [rip+0xdd47],0x0        # 4122a8 <__bss_start@@Base+0x118>
  404561:	mov    QWORD PTR [rip+0xdd34],0x0        # 4122a0 <__bss_start@@Base+0x110>
  40456c:	mov    QWORD PTR [rip+0xdd41],0x0        # 4122b8 <__bss_start@@Base+0x128>
  404577:	mov    QWORD PTR [rip+0xdd2e],0x0        # 4122b0 <__bss_start@@Base+0x120>
  404582:	mov    QWORD PTR [rip+0xdd3b],0x0        # 4122c8 <__bss_start@@Base+0x138>
  40458d:	mov    QWORD PTR [rip+0xdd28],0x0        # 4122c0 <__bss_start@@Base+0x130>
  404598:	mov    QWORD PTR [rip+0xdd35],0x0        # 4122d8 <__bss_start@@Base+0x148>
  4045a3:	mov    QWORD PTR [rip+0xdd22],0x0        # 4122d0 <__bss_start@@Base+0x140>
  4045ae:	mov    QWORD PTR [rip+0xdd2f],0x0        # 4122e8 <__bss_start@@Base+0x158>
  4045b9:	mov    QWORD PTR [rip+0xdd1c],0x0        # 4122e0 <__bss_start@@Base+0x150>
  4045c4:	mov    QWORD PTR [rip+0xdd29],0x0        # 4122f8 <__bss_start@@Base+0x168>
  4045cf:	mov    QWORD PTR [rip+0xdd16],0x0        # 4122f0 <__bss_start@@Base+0x160>
  4045da:	mov    QWORD PTR [rip+0xdd23],0x0        # 412308 <__bss_start@@Base+0x178>
  4045e5:	mov    QWORD PTR [rip+0xdd10],0x0        # 412300 <__bss_start@@Base+0x170>
  4045f0:	mov    QWORD PTR [rip+0xdd1d],0x0        # 412318 <__bss_start@@Base+0x188>
  4045fb:	mov    QWORD PTR [rip+0xdd0a],0x0        # 412310 <__bss_start@@Base+0x180>
  404606:	mov    QWORD PTR [rip+0xdd17],0x0        # 412328 <__bss_start@@Base+0x198>
  404611:	mov    QWORD PTR [rip+0xdd04],0x0        # 412320 <__bss_start@@Base+0x190>
  40461c:	mov    QWORD PTR [rip+0xdd11],0x0        # 412338 <__bss_start@@Base+0x1a8>
  404627:	mov    QWORD PTR [rip+0xdcfe],0x0        # 412330 <__bss_start@@Base+0x1a0>
  404632:	mov    QWORD PTR [rip+0xdd0b],0x0        # 412348 <__bss_start@@Base+0x1b8>
  40463d:	mov    QWORD PTR [rip+0xdcf8],0x0        # 412340 <__bss_start@@Base+0x1b0>
  404648:	mov    QWORD PTR [rip+0xdd05],0x0        # 412358 <__bss_start@@Base+0x1c8>
  404653:	mov    QWORD PTR [rip+0xdcf2],0x0        # 412350 <__bss_start@@Base+0x1c0>
  40465e:	mov    QWORD PTR [rip+0xdcff],0x0        # 412368 <__bss_start@@Base+0x1d8>
  404669:	mov    QWORD PTR [rip+0xdcec],0x0        # 412360 <__bss_start@@Base+0x1d0>
  404674:	mov    QWORD PTR [rip+0xdcf9],0x0        # 412378 <__bss_start@@Base+0x1e8>
  40467f:	mov    QWORD PTR [rip+0xdce6],0x0        # 412370 <__bss_start@@Base+0x1e0>
  40468a:	mov    QWORD PTR [rip+0xdcf3],0x0        # 412388 <__bss_start@@Base+0x1f8>
  404695:	mov    QWORD PTR [rip+0xdce0],0x0        # 412380 <__bss_start@@Base+0x1f0>
  4046a0:	mov    QWORD PTR [rip+0xdced],0x0        # 412398 <__bss_start@@Base+0x208>
  4046ab:	mov    QWORD PTR [rip+0xdcda],0x0        # 412390 <__bss_start@@Base+0x200>
  4046b6:	mov    QWORD PTR [rip+0xdce7],0x0        # 4123a8 <__bss_start@@Base+0x218>
  4046c1:	mov    QWORD PTR [rip+0xdcd4],0x0        # 4123a0 <__bss_start@@Base+0x210>
  4046cc:	mov    QWORD PTR [rip+0xdce1],0x0        # 4123b8 <__bss_start@@Base+0x228>
  4046d7:	mov    QWORD PTR [rip+0xdcce],0x0        # 4123b0 <__bss_start@@Base+0x220>
  4046e2:	mov    QWORD PTR [rip+0xdcdb],0x0        # 4123c8 <__bss_start@@Base+0x238>
  4046ed:	mov    QWORD PTR [rip+0xdcc8],0x0        # 4123c0 <__bss_start@@Base+0x230>
  4046f8:	mov    QWORD PTR [rip+0xdcd5],0x0        # 4123d8 <__bss_start@@Base+0x248>
  404703:	mov    QWORD PTR [rip+0xdcc2],0x0        # 4123d0 <__bss_start@@Base+0x240>
  40470e:	mov    QWORD PTR [rip+0xdccf],0x0        # 4123e8 <__bss_start@@Base+0x258>
  404719:	mov    QWORD PTR [rip+0xdcbc],0x0        # 4123e0 <__bss_start@@Base+0x250>
  404724:	mov    QWORD PTR [rip+0xdcc9],0x0        # 4123f8 <__bss_start@@Base+0x268>
  40472f:	mov    QWORD PTR [rip+0xdcb6],0x0        # 4123f0 <__bss_start@@Base+0x260>
  40473a:	mov    QWORD PTR [rip+0xdcc3],0x0        # 412408 <__bss_start@@Base+0x278>
  404745:	mov    QWORD PTR [rip+0xdcb0],0x0        # 412400 <__bss_start@@Base+0x270>
  404750:	mov    QWORD PTR [rip+0xdcbd],0x0        # 412418 <__bss_start@@Base+0x288>
  40475b:	mov    QWORD PTR [rip+0xdcaa],0x0        # 412410 <__bss_start@@Base+0x280>
  404766:	mov    QWORD PTR [rip+0xdcb7],0x0        # 412428 <__bss_start@@Base+0x298>
  404771:	mov    QWORD PTR [rip+0xdca4],0x0        # 412420 <__bss_start@@Base+0x290>
  40477c:	mov    QWORD PTR [rip+0xdcc9],0x0        # 412450 <__bss_start@@Base+0x2c0>
  404787:	mov    QWORD PTR [rip+0xdcb6],0x0        # 412448 <__bss_start@@Base+0x2b8>
  404792:	mov    QWORD PTR [rip+0xdca3],0x0        # 412440 <__bss_start@@Base+0x2b0>
  40479d:	mov    QWORD PTR [rip+0xdc90],0x0        # 412438 <__bss_start@@Base+0x2a8>
  4047a8:	mov    QWORD PTR [rip+0xdc7d],0x0        # 412430 <__bss_start@@Base+0x2a0>
  4047b3:	pop    rax
  4047b4:	ret    
  4047b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047bf:	nop
  4047c0:	push   rax
  4047c1:	lea    rdi,[rip+0xfffffffffffffc88]        # 404450 <free_token_boolean_op@@Base+0xc0>
  4047c8:	lea    rsi,[rip+0xfffffffffffffd81]        # 404550 <free_token_boolean_op@@Base+0x1c0>
  4047cf:	call   40c9e0 <__gcov_flush@@Base+0xa0>
  4047d4:	pop    rax
  4047d5:	ret    
  4047d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004047e0 <init_lexer@@Base>:
  4047e0:	push   rbp
  4047e1:	mov    rbp,rsp
  4047e4:	mov    rax,QWORD PTR [rip+0xdc75]        # 412460 <__bss_start@@Base+0x2d0>
  4047eb:	add    rax,0x1
  4047ef:	mov    QWORD PTR [rip+0xdc6a],rax        # 412460 <__bss_start@@Base+0x2d0>
  4047f6:	mov    QWORD PTR [rbp-0x18],rdi
  4047fa:	mov    QWORD PTR [rbp-0x20],rsi
  4047fe:	mov    rax,QWORD PTR [rip+0xdc63]        # 412468 <__bss_start@@Base+0x2d8>
  404805:	add    rax,0x1
  404809:	mov    QWORD PTR [rip+0xdc58],rax        # 412468 <__bss_start@@Base+0x2d8>
  404810:	mov    rax,QWORD PTR [rbp-0x18]
  404814:	mov    QWORD PTR [rbp-0x8],rax
  404818:	mov    rcx,QWORD PTR [rbp-0x20]
  40481c:	mov    QWORD PTR [rbp-0x10],rcx
  404820:	mov    rdx,QWORD PTR [rbp-0x10]
  404824:	mov    rsi,QWORD PTR [rbp-0x8]
  404828:	mov    QWORD PTR [rsi],rdx
  40482b:	mov    rdx,QWORD PTR [rbp-0x8]
  40482f:	mov    QWORD PTR [rdx+0x8],0x0
  404837:	mov    rdx,QWORD PTR [rbp-0x8]
  40483b:	mov    QWORD PTR [rdx+0x10],0x0
  404843:	pop    rbp
  404844:	ret    
  404845:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40484f:	nop

0000000000404850 <destroy_lexer@@Base>:
  404850:	push   rbp
  404851:	mov    rbp,rsp
  404854:	sub    rsp,0x20
  404858:	mov    rax,QWORD PTR [rip+0xdc11]        # 412470 <__bss_start@@Base+0x2e0>
  40485f:	add    rax,0x1
  404863:	mov    QWORD PTR [rip+0xdc06],rax        # 412470 <__bss_start@@Base+0x2e0>
  40486a:	mov    QWORD PTR [rbp-0x20],rdi
  40486e:	mov    eax,0x2
  404873:	mov    ecx,eax
  404875:	mov    eax,0x1
  40487a:	mov    edx,eax
  40487c:	mov    rsi,QWORD PTR [rbp-0x20]
  404880:	mov    QWORD PTR [rbp-0x8],rsi
  404884:	mov    QWORD PTR [rbp-0x10],0x0
  40488c:	mov    rdi,QWORD PTR [rbp-0x8]
  404890:	mov    rdi,QWORD PTR [rdi+0x8]
  404894:	mov    QWORD PTR [rbp-0x18],rdi
  404898:	mov    rdi,QWORD PTR [rbp-0x18]
  40489c:	cmp    rdi,0x0
  4048a0:	setne  r8b
  4048a4:	cmp    rdi,0x0
  4048a8:	cmovne rcx,rdx
  4048ac:	lea    rdx,[rip+0xdbbd]        # 412470 <__bss_start@@Base+0x2e0>
  4048b3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4048b7:	add    rdi,0x1
  4048bb:	mov    QWORD PTR [rdx+rcx*8],rdi
  4048bf:	test   r8b,0x1
  4048c3:	jne    4048ce <destroy_lexer@@Base+0x7e>
  4048c9:	jmp    4048fc <destroy_lexer@@Base+0xac>
  4048ce:	mov    rax,QWORD PTR [rip+0xdbb3]        # 412488 <__bss_start@@Base+0x2f8>
  4048d5:	add    rax,0x1
  4048d9:	mov    QWORD PTR [rip+0xdba8],rax        # 412488 <__bss_start@@Base+0x2f8>
  4048e0:	mov    rax,QWORD PTR [rbp-0x18]
  4048e4:	mov    QWORD PTR [rbp-0x10],rax
  4048e8:	mov    rax,QWORD PTR [rbp-0x18]
  4048ec:	mov    rax,QWORD PTR [rax]
  4048ef:	mov    QWORD PTR [rbp-0x18],rax
  4048f3:	mov    rdi,QWORD PTR [rbp-0x10]
  4048f7:	call   404920 <free_stack_base@@Base>
  4048fc:	mov    rax,QWORD PTR [rip+0xdb8d]        # 412490 <__bss_start@@Base+0x300>
  404903:	add    rax,0x1
  404907:	mov    QWORD PTR [rip+0xdb82],rax        # 412490 <__bss_start@@Base+0x300>
  40490e:	add    rsp,0x20
  404912:	pop    rbp
  404913:	ret    
  404914:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40491e:	xchg   ax,ax

0000000000404920 <free_stack_base@@Base>:
  404920:	push   rbp
  404921:	mov    rbp,rsp
  404924:	sub    rsp,0x10
  404928:	mov    rax,QWORD PTR [rip+0xdb69]        # 412498 <__bss_start@@Base+0x308>
  40492f:	add    rax,0x1
  404933:	mov    QWORD PTR [rip+0xdb5e],rax        # 412498 <__bss_start@@Base+0x308>
  40493a:	mov    QWORD PTR [rbp-0x10],rdi
  40493e:	mov    rax,QWORD PTR [rip+0xdb5b]        # 4124a0 <__bss_start@@Base+0x310>
  404945:	add    rax,0x1
  404949:	mov    QWORD PTR [rip+0xdb50],rax        # 4124a0 <__bss_start@@Base+0x310>
  404950:	mov    rax,QWORD PTR [rbp-0x10]
  404954:	mov    QWORD PTR [rbp-0x8],rax
  404958:	mov    rcx,QWORD PTR [rbp-0x8]
  40495c:	mov    rdi,rcx
  40495f:	call   403040 <free@plt>
  404964:	add    rsp,0x10
  404968:	pop    rbp
  404969:	ret    
  40496a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404970 <push_back@@Base>:
  404970:	push   rbp
  404971:	mov    rbp,rsp
  404974:	sub    rsp,0x30
  404978:	mov    rax,QWORD PTR [rip+0xdb29]        # 4124a8 <__bss_start@@Base+0x318>
  40497f:	add    rax,0x1
  404983:	mov    QWORD PTR [rip+0xdb1e],rax        # 4124a8 <__bss_start@@Base+0x318>
  40498a:	mov    QWORD PTR [rbp-0x20],rdi
  40498e:	mov    QWORD PTR [rbp-0x28],rsi
  404992:	mov    eax,0x10
  404997:	mov    edi,eax
  404999:	mov    rcx,QWORD PTR [rip+0xdb10]        # 4124b0 <__bss_start@@Base+0x320>
  4049a0:	add    rcx,0x1
  4049a4:	mov    QWORD PTR [rip+0xdb05],rcx        # 4124b0 <__bss_start@@Base+0x320>
  4049ab:	mov    rcx,QWORD PTR [rbp-0x20]
  4049af:	mov    QWORD PTR [rbp-0x8],rcx
  4049b3:	mov    rdx,QWORD PTR [rbp-0x28]
  4049b7:	mov    QWORD PTR [rbp-0x10],rdx
  4049bb:	call   4031a0 <malloc@plt>
  4049c0:	mov    QWORD PTR [rbp-0x18],rax
  4049c4:	mov    rax,QWORD PTR [rbp-0x10]
  4049c8:	mov    rcx,QWORD PTR [rbp-0x18]
  4049cc:	mov    QWORD PTR [rcx+0x8],rax
  4049d0:	mov    rax,QWORD PTR [rbp-0x8]
  4049d4:	mov    rax,QWORD PTR [rax+0x8]
  4049d8:	mov    rcx,QWORD PTR [rbp-0x18]
  4049dc:	mov    QWORD PTR [rcx],rax
  4049df:	mov    rax,QWORD PTR [rbp-0x18]
  4049e3:	mov    rcx,QWORD PTR [rbp-0x8]
  4049e7:	mov    QWORD PTR [rcx+0x8],rax
  4049eb:	add    rsp,0x30
  4049ef:	pop    rbp
  4049f0:	ret    
  4049f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a00 <get_char@@Base>:
  404a00:	push   rbp
  404a01:	mov    rbp,rsp
  404a04:	mov    rax,QWORD PTR [rip+0xdaad]        # 4124b8 <__bss_start@@Base+0x328>
  404a0b:	add    rax,0x1
  404a0f:	mov    QWORD PTR [rip+0xdaa2],rax        # 4124b8 <__bss_start@@Base+0x328>
  404a16:	mov    QWORD PTR [rbp-0x10],rdi
  404a1a:	mov    rax,QWORD PTR [rip+0xda9f]        # 4124c0 <__bss_start@@Base+0x330>
  404a21:	add    rax,0x1
  404a25:	mov    QWORD PTR [rip+0xda94],rax        # 4124c0 <__bss_start@@Base+0x330>
  404a2c:	mov    rax,QWORD PTR [rbp-0x10]
  404a30:	mov    QWORD PTR [rbp-0x8],rax
  404a34:	mov    rcx,QWORD PTR [rbp-0x8]
  404a38:	mov    rcx,QWORD PTR [rcx]
  404a3b:	mov    rdx,QWORD PTR [rbp-0x8]
  404a3f:	mov    rsi,QWORD PTR [rdx+0x10]
  404a43:	mov    rdi,rsi
  404a46:	add    rdi,0x1
  404a4a:	mov    QWORD PTR [rdx+0x10],rdi
  404a4e:	movsx  eax,BYTE PTR [rcx+rsi*1]
  404a52:	pop    rbp
  404a53:	ret    
  404a54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a5e:	xchg   ax,ax

0000000000404a60 <push_back_chars@@Base>:
  404a60:	push   rbp
  404a61:	mov    rbp,rsp
  404a64:	sub    rsp,0x30
  404a68:	mov    rax,QWORD PTR [rip+0xda61]        # 4124d0 <__bss_start@@Base+0x340>
  404a6f:	add    rax,0x1
  404a73:	mov    QWORD PTR [rip+0xda56],rax        # 4124d0 <__bss_start@@Base+0x340>
  404a7a:	mov    QWORD PTR [rbp-0x18],rdi
  404a7e:	mov    QWORD PTR [rbp-0x20],rsi
  404a82:	mov    eax,0x2
  404a87:	mov    ecx,eax
  404a89:	mov    eax,0x1
  404a8e:	mov    edx,eax
  404a90:	mov    rsi,QWORD PTR [rbp-0x18]
  404a94:	mov    QWORD PTR [rbp-0x8],rsi
  404a98:	mov    rdi,QWORD PTR [rbp-0x20]
  404a9c:	mov    QWORD PTR [rbp-0x10],rdi
  404aa0:	mov    r8,QWORD PTR [rbp-0x8]
  404aa4:	mov    r8,QWORD PTR [r8+0x10]
  404aa8:	mov    r9,QWORD PTR [rbp-0x10]
  404aac:	cmp    r8,r9
  404aaf:	setae  r10b
  404ab3:	cmp    r8,r9
  404ab6:	cmovae rcx,rdx
  404aba:	lea    rdx,[rip+0xda0f]        # 4124d0 <__bss_start@@Base+0x340>
  404ac1:	mov    r8,QWORD PTR [rdx+rcx*8]
  404ac5:	add    r8,0x1
  404ac9:	mov    QWORD PTR [rdx+rcx*8],r8
  404acd:	test   r10b,0x1
  404ad1:	jne    404adc <push_back_chars@@Base+0x7c>
  404ad7:	jmp    404b06 <push_back_chars@@Base+0xa6>
  404adc:	mov    rax,QWORD PTR [rip+0xda05]        # 4124e8 <__bss_start@@Base+0x358>
  404ae3:	add    rax,0x1
  404ae7:	mov    QWORD PTR [rip+0xd9fa],rax        # 4124e8 <__bss_start@@Base+0x358>
  404aee:	mov    rax,QWORD PTR [rbp-0x10]
  404af2:	mov    rcx,QWORD PTR [rbp-0x8]
  404af6:	mov    rdx,QWORD PTR [rcx+0x10]
  404afa:	sub    rdx,rax
  404afd:	mov    QWORD PTR [rcx+0x10],rdx
  404b01:	jmp    404b2b <push_back_chars@@Base+0xcb>
  404b06:	mov    rax,QWORD PTR [rip+0xd4e3]        # 411ff0 <stderr@GLIBC_2.2.5>
  404b0d:	mov    rdi,QWORD PTR [rax]
  404b10:	lea    rsi,[rip+0x8901]        # 40d418 <_IO_stdin_used@@Base+0x418>
  404b17:	mov    al,0x0
  404b19:	call   403150 <fprintf@plt>
  404b1e:	mov    edi,0x1
  404b23:	mov    DWORD PTR [rbp-0x24],eax
  404b26:	call   403250 <exit@plt>
  404b2b:	mov    rax,QWORD PTR [rip+0xd9be]        # 4124f0 <__bss_start@@Base+0x360>
  404b32:	add    rax,0x1
  404b36:	mov    QWORD PTR [rip+0xd9b3],rax        # 4124f0 <__bss_start@@Base+0x360>
  404b3d:	add    rsp,0x30
  404b41:	pop    rbp
  404b42:	ret    
  404b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b4d:	nop    DWORD PTR [rax]

0000000000404b50 <push_back_one_char@@Base>:
  404b50:	push   rbp
  404b51:	mov    rbp,rsp
  404b54:	sub    rsp,0x10
  404b58:	mov    rax,QWORD PTR [rip+0xd999]        # 4124f8 <__bss_start@@Base+0x368>
  404b5f:	add    rax,0x1
  404b63:	mov    QWORD PTR [rip+0xd98e],rax        # 4124f8 <__bss_start@@Base+0x368>
  404b6a:	mov    QWORD PTR [rbp-0x10],rdi
  404b6e:	mov    eax,0x1
  404b73:	mov    esi,eax
  404b75:	mov    rcx,QWORD PTR [rip+0xd984]        # 412500 <__bss_start@@Base+0x370>
  404b7c:	add    rcx,0x1
  404b80:	mov    QWORD PTR [rip+0xd979],rcx        # 412500 <__bss_start@@Base+0x370>
  404b87:	mov    rcx,QWORD PTR [rbp-0x10]
  404b8b:	mov    QWORD PTR [rbp-0x8],rcx
  404b8f:	mov    rdi,QWORD PTR [rbp-0x8]
  404b93:	call   404a60 <push_back_chars@@Base>
  404b98:	add    rsp,0x10
  404b9c:	pop    rbp
  404b9d:	ret    
  404b9e:	xchg   ax,ax

0000000000404ba0 <next@@Base>:
  404ba0:	push   rbp
  404ba1:	mov    rbp,rsp
  404ba4:	sub    rsp,0x290
  404bab:	mov    rax,QWORD PTR [rip+0xd95e]        # 412510 <__bss_start@@Base+0x380>
  404bb2:	add    rax,0x1
  404bb6:	mov    QWORD PTR [rip+0xd953],rax        # 412510 <__bss_start@@Base+0x380>
  404bbd:	mov    QWORD PTR [rbp-0x250],rdi
  404bc4:	mov    eax,0x2
  404bc9:	mov    ecx,eax
  404bcb:	mov    eax,0x1
  404bd0:	mov    edx,eax
  404bd2:	mov    rsi,QWORD PTR [rbp-0x250]
  404bd9:	mov    QWORD PTR [rbp-0x10],rsi
  404bdd:	mov    QWORD PTR [rbp-0x218],0x0
  404be8:	mov    DWORD PTR [rbp-0x21c],0x0
  404bf2:	mov    QWORD PTR [rbp-0x228],0x0
  404bfd:	mov    QWORD PTR [rbp-0x238],0x0
  404c08:	mov    QWORD PTR [rbp-0x240],0x0
  404c13:	mov    rdi,QWORD PTR [rbp-0x10]
  404c17:	mov    rdi,QWORD PTR [rdi+0x8]
  404c1b:	cmp    rdi,0x0
  404c1f:	setne  r8b
  404c23:	cmp    rdi,0x0
  404c27:	cmovne rcx,rdx
  404c2b:	lea    rdx,[rip+0xd8de]        # 412510 <__bss_start@@Base+0x380>
  404c32:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404c36:	add    rdi,0x1
  404c3a:	mov    QWORD PTR [rdx+rcx*8],rdi
  404c3e:	test   r8b,0x1
  404c42:	jne    404c4d <next@@Base+0xad>
  404c48:	jmp    404cbe <next@@Base+0x11e>
  404c4d:	mov    rax,QWORD PTR [rip+0xd8d4]        # 412528 <__bss_start@@Base+0x398>
  404c54:	add    rax,0x1
  404c58:	mov    QWORD PTR [rip+0xd8c9],rax        # 412528 <__bss_start@@Base+0x398>
  404c5f:	mov    rax,QWORD PTR [rbp-0x10]
  404c63:	mov    rax,QWORD PTR [rax+0x8]
  404c67:	mov    QWORD PTR [rbp-0x248],rax
  404c6e:	mov    rax,QWORD PTR [rbp-0x10]
  404c72:	mov    rax,QWORD PTR [rax+0x8]
  404c76:	mov    rax,QWORD PTR [rax]
  404c79:	mov    rcx,QWORD PTR [rbp-0x10]
  404c7d:	mov    QWORD PTR [rcx+0x8],rax
  404c81:	mov    rax,QWORD PTR [rbp-0x248]
  404c88:	mov    rax,QWORD PTR [rax+0x8]
  404c8c:	mov    QWORD PTR [rbp-0x238],rax
  404c93:	mov    rax,QWORD PTR [rbp-0x248]
  404c9a:	mov    QWORD PTR [rax+0x8],0x0
  404ca2:	mov    rdi,QWORD PTR [rbp-0x248]
  404ca9:	call   404920 <free_stack_base@@Base>
  404cae:	mov    rax,QWORD PTR [rbp-0x238]
  404cb5:	mov    QWORD PTR [rbp-0x8],rax
  404cb9:	jmp    4067a6 <next@@Base+0x1c06>
  404cbe:	mov    rax,QWORD PTR [rip+0xd86b]        # 412530 <__bss_start@@Base+0x3a0>
  404cc5:	add    rax,0x1
  404cc9:	mov    QWORD PTR [rip+0xd860],rax        # 412530 <__bss_start@@Base+0x3a0>
  404cd0:	mov    rdi,QWORD PTR [rbp-0x10]
  404cd4:	call   404a00 <get_char@@Base>
  404cd9:	mov    BYTE PTR [rbp-0x229],al
  404cdf:	mov    eax,0x6
  404ce4:	mov    ecx,eax
  404ce6:	mov    eax,0x5
  404ceb:	mov    edx,eax
  404ced:	movsx  eax,BYTE PTR [rbp-0x229]
  404cf4:	cmp    eax,0x0
  404cf7:	setne  sil
  404cfb:	cmp    eax,0x0
  404cfe:	cmovne rcx,rdx
  404d02:	lea    rdx,[rip+0xd807]        # 412510 <__bss_start@@Base+0x380>
  404d09:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404d0d:	add    rdi,0x1
  404d11:	mov    QWORD PTR [rdx+rcx*8],rdi
  404d15:	test   sil,0x1
  404d19:	jne    404d24 <next@@Base+0x184>
  404d1f:	jmp    406767 <next@@Base+0x1bc7>
  404d24:	mov    DWORD PTR [rip+0xd42e],0x0        # 41215c <__data_start@@Base+0x14>
  404d2e:	mov    rax,QWORD PTR [rbp-0x228]
  404d35:	mov    rcx,rax
  404d38:	sub    rcx,0x5
  404d3c:	mov    QWORD PTR [rbp-0x258],rax
  404d43:	mov    QWORD PTR [rbp-0x260],rcx
  404d4a:	ja     40673d <next@@Base+0x1b9d>
  404d50:	lea    rax,[rip+0x86a9]        # 40d400 <_IO_stdin_used@@Base+0x400>
  404d57:	mov    rcx,QWORD PTR [rbp-0x258]
  404d5e:	movsxd rdx,DWORD PTR [rax+rcx*4]
  404d62:	add    rdx,rax
  404d65:	jmp    rdx
  404d67:	lea    rax,[rip+0xc4d2]        # 411240 <_IO_stdin_used@@Base+0x4240>
  404d6e:	add    rax,0x10
  404d72:	lea    rdi,[rip+0xd3e3]        # 41215c <__data_start@@Base+0x14>
  404d79:	mov    rsi,rax
  404d7c:	call   4067d0 <next@@Base+0x1c30>
  404d81:	mov    ecx,0xf
  404d86:	mov    eax,ecx
  404d88:	mov    ecx,0xe
  404d8d:	mov    esi,ecx
  404d8f:	movsx  ecx,BYTE PTR [rbp-0x229]
  404d96:	cmp    ecx,0x9
  404d99:	sete   dl
  404d9c:	cmp    ecx,0x9
  404d9f:	cmove  rax,rsi
  404da3:	lea    rsi,[rip+0xd766]        # 412510 <__bss_start@@Base+0x380>
  404daa:	mov    rdi,QWORD PTR [rsi+rax*8]
  404dae:	add    rdi,0x1
  404db2:	mov    QWORD PTR [rsi+rax*8],rdi
  404db6:	test   dl,0x1
  404db9:	jne    404e44 <next@@Base+0x2a4>
  404dbf:	mov    eax,0x11
  404dc4:	mov    ecx,eax
  404dc6:	mov    eax,0x10
  404dcb:	mov    edx,eax
  404dcd:	movsx  eax,BYTE PTR [rbp-0x229]
  404dd4:	cmp    eax,0x20
  404dd7:	sete   sil
  404ddb:	cmp    eax,0x20
  404dde:	cmove  rcx,rdx
  404de2:	lea    rdx,[rip+0xd727]        # 412510 <__bss_start@@Base+0x380>
  404de9:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404ded:	add    rdi,0x1
  404df1:	mov    QWORD PTR [rdx+rcx*8],rdi
  404df5:	test   sil,0x1
  404df9:	jne    404e44 <next@@Base+0x2a4>
  404dff:	mov    eax,0x13
  404e04:	mov    ecx,eax
  404e06:	mov    eax,0x12
  404e0b:	mov    edx,eax
  404e0d:	movsx  eax,BYTE PTR [rbp-0x229]
  404e14:	cmp    eax,0xa
  404e17:	sete   sil
  404e1b:	cmp    eax,0xa
  404e1e:	cmove  rcx,rdx
  404e22:	lea    rdx,[rip+0xd6e7]        # 412510 <__bss_start@@Base+0x380>
  404e29:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404e2d:	add    rdi,0x1
  404e31:	mov    QWORD PTR [rdx+rcx*8],rdi
  404e35:	test   sil,0x1
  404e39:	jne    404e44 <next@@Base+0x2a4>
  404e3f:	jmp    404e6a <next@@Base+0x2ca>
  404e44:	mov    rax,QWORD PTR [rip+0xd765]        # 4125b0 <__bss_start@@Base+0x420>
  404e4b:	add    rax,0x1
  404e4f:	mov    QWORD PTR [rip+0xd75a],rax        # 4125b0 <__bss_start@@Base+0x420>
  404e56:	mov    rdi,QWORD PTR [rbp-0x10]
  404e5a:	call   404a00 <get_char@@Base>
  404e5f:	mov    BYTE PTR [rbp-0x229],al
  404e65:	jmp    405d35 <next@@Base+0x1195>
  404e6a:	mov    eax,0x16
  404e6f:	mov    ecx,eax
  404e71:	mov    eax,0x15
  404e76:	mov    edx,eax
  404e78:	movsx  eax,BYTE PTR [rbp-0x229]
  404e7f:	cmp    eax,0x30
  404e82:	sete   sil
  404e86:	cmp    eax,0x30
  404e89:	cmove  rcx,rdx
  404e8d:	lea    rdx,[rip+0xd67c]        # 412510 <__bss_start@@Base+0x380>
  404e94:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404e98:	add    rdi,0x1
  404e9c:	mov    QWORD PTR [rdx+rcx*8],rdi
  404ea0:	test   sil,0x1
  404ea4:	jne    404eaf <next@@Base+0x30f>
  404eaa:	jmp    404ef5 <next@@Base+0x355>
  404eaf:	mov    eax,0x8
  404eb4:	mov    edi,eax
  404eb6:	mov    rcx,QWORD PTR [rip+0xd70b]        # 4125c8 <__bss_start@@Base+0x438>
  404ebd:	add    rcx,0x1
  404ec1:	mov    QWORD PTR [rip+0xd700],rcx        # 4125c8 <__bss_start@@Base+0x438>
  404ec8:	call   4031a0 <malloc@plt>
  404ecd:	xor    esi,esi
  404ecf:	mov    QWORD PTR [rbp-0x238],rax
  404ed6:	mov    rax,QWORD PTR [rbp-0x238]
  404edd:	mov    rdi,rax
  404ee0:	call   403c70 <init_token_int_value@@Base>
  404ee5:	mov    rax,QWORD PTR [rbp-0x238]
  404eec:	mov    QWORD PTR [rbp-0x8],rax
  404ef0:	jmp    4067a6 <next@@Base+0x1c06>
  404ef5:	mov    eax,0x19
  404efa:	mov    ecx,eax
  404efc:	mov    eax,0x18
  404f01:	mov    edx,eax
  404f03:	movsx  eax,BYTE PTR [rbp-0x229]
  404f0a:	cmp    eax,0x31
  404f0d:	setge  sil
  404f11:	cmp    eax,0x31
  404f14:	cmovge rcx,rdx
  404f18:	lea    rdx,[rip+0xd5f1]        # 412510 <__bss_start@@Base+0x380>
  404f1f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404f23:	add    rdi,0x1
  404f27:	mov    QWORD PTR [rdx+rcx*8],rdi
  404f2b:	test   sil,0x1
  404f2f:	jne    404f3a <next@@Base+0x39a>
  404f35:	jmp    404fd1 <next@@Base+0x431>
  404f3a:	mov    eax,0x1b
  404f3f:	mov    ecx,eax
  404f41:	mov    eax,0x1a
  404f46:	mov    edx,eax
  404f48:	movsx  eax,BYTE PTR [rbp-0x229]
  404f4f:	cmp    eax,0x39
  404f52:	setle  sil
  404f56:	cmp    eax,0x39
  404f59:	cmovle rcx,rdx
  404f5d:	lea    rdx,[rip+0xd5ac]        # 412510 <__bss_start@@Base+0x380>
  404f64:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404f68:	add    rdi,0x1
  404f6c:	mov    QWORD PTR [rdx+rcx*8],rdi
  404f70:	test   sil,0x1
  404f74:	jne    404f7f <next@@Base+0x3df>
  404f7a:	jmp    404fd1 <next@@Base+0x431>
  404f7f:	mov    rax,QWORD PTR [rip+0xd66a]        # 4125f0 <__bss_start@@Base+0x460>
  404f86:	add    rax,0x1
  404f8a:	mov    QWORD PTR [rip+0xd65f],rax        # 4125f0 <__bss_start@@Base+0x460>
  404f91:	mov    cl,BYTE PTR [rbp-0x229]
  404f97:	mov    edx,DWORD PTR [rbp-0x21c]
  404f9d:	mov    esi,edx
  404f9f:	add    esi,0x1
  404fa2:	mov    DWORD PTR [rbp-0x21c],esi
  404fa8:	movsxd rax,edx
  404fab:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  404fb2:	mov    rdi,QWORD PTR [rbp-0x10]
  404fb6:	call   404a00 <get_char@@Base>
  404fbb:	mov    BYTE PTR [rbp-0x229],al
  404fc1:	mov    QWORD PTR [rbp-0x228],0x1
  404fcc:	jmp    405d11 <next@@Base+0x1171>
  404fd1:	mov    eax,0x1e
  404fd6:	mov    ecx,eax
  404fd8:	mov    eax,0x1d
  404fdd:	mov    edx,eax
  404fdf:	movsx  eax,BYTE PTR [rbp-0x229]
  404fe6:	cmp    eax,0x28
  404fe9:	sete   sil
  404fed:	cmp    eax,0x28
  404ff0:	cmove  rcx,rdx
  404ff4:	lea    rdx,[rip+0xd515]        # 412510 <__bss_start@@Base+0x380>
  404ffb:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404fff:	add    rdi,0x1
  405003:	mov    QWORD PTR [rdx+rcx*8],rdi
  405007:	test   sil,0x1
  40500b:	jne    405016 <next@@Base+0x476>
  405011:	jmp    40505a <next@@Base+0x4ba>
  405016:	mov    eax,0x4
  40501b:	mov    edi,eax
  40501d:	mov    rcx,QWORD PTR [rip+0xd5e4]        # 412608 <__bss_start@@Base+0x478>
  405024:	add    rcx,0x1
  405028:	mov    QWORD PTR [rip+0xd5d9],rcx        # 412608 <__bss_start@@Base+0x478>
  40502f:	call   4031a0 <malloc@plt>
  405034:	mov    QWORD PTR [rbp-0x238],rax
  40503b:	mov    rax,QWORD PTR [rbp-0x238]
  405042:	mov    rdi,rax
  405045:	call   403d30 <init_token_opar@@Base>
  40504a:	mov    rax,QWORD PTR [rbp-0x238]
  405051:	mov    QWORD PTR [rbp-0x8],rax
  405055:	jmp    4067a6 <next@@Base+0x1c06>
  40505a:	mov    eax,0x21
  40505f:	mov    ecx,eax
  405061:	mov    eax,0x20
  405066:	mov    edx,eax
  405068:	movsx  eax,BYTE PTR [rbp-0x229]
  40506f:	cmp    eax,0x29
  405072:	sete   sil
  405076:	cmp    eax,0x29
  405079:	cmove  rcx,rdx
  40507d:	lea    rdx,[rip+0xd48c]        # 412510 <__bss_start@@Base+0x380>
  405084:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405088:	add    rdi,0x1
  40508c:	mov    QWORD PTR [rdx+rcx*8],rdi
  405090:	test   sil,0x1
  405094:	jne    40509f <next@@Base+0x4ff>
  40509a:	jmp    4050e3 <next@@Base+0x543>
  40509f:	mov    eax,0x4
  4050a4:	mov    edi,eax
  4050a6:	mov    rcx,QWORD PTR [rip+0xd573]        # 412620 <__bss_start@@Base+0x490>
  4050ad:	add    rcx,0x1
  4050b1:	mov    QWORD PTR [rip+0xd568],rcx        # 412620 <__bss_start@@Base+0x490>
  4050b8:	call   4031a0 <malloc@plt>
  4050bd:	mov    QWORD PTR [rbp-0x238],rax
  4050c4:	mov    rax,QWORD PTR [rbp-0x238]
  4050cb:	mov    rdi,rax
  4050ce:	call   403d70 <init_token_cpar@@Base>
  4050d3:	mov    rax,QWORD PTR [rbp-0x238]
  4050da:	mov    QWORD PTR [rbp-0x8],rax
  4050de:	jmp    4067a6 <next@@Base+0x1c06>
  4050e3:	mov    eax,0x24
  4050e8:	mov    ecx,eax
  4050ea:	mov    eax,0x23
  4050ef:	mov    edx,eax
  4050f1:	movsx  eax,BYTE PTR [rbp-0x229]
  4050f8:	cmp    eax,0x7b
  4050fb:	sete   sil
  4050ff:	cmp    eax,0x7b
  405102:	cmove  rcx,rdx
  405106:	lea    rdx,[rip+0xd403]        # 412510 <__bss_start@@Base+0x380>
  40510d:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405111:	add    rdi,0x1
  405115:	mov    QWORD PTR [rdx+rcx*8],rdi
  405119:	test   sil,0x1
  40511d:	jne    405128 <next@@Base+0x588>
  405123:	jmp    40516c <next@@Base+0x5cc>
  405128:	mov    eax,0x4
  40512d:	mov    edi,eax
  40512f:	mov    rcx,QWORD PTR [rip+0xd502]        # 412638 <__bss_start@@Base+0x4a8>
  405136:	add    rcx,0x1
  40513a:	mov    QWORD PTR [rip+0xd4f7],rcx        # 412638 <__bss_start@@Base+0x4a8>
  405141:	call   4031a0 <malloc@plt>
  405146:	mov    QWORD PTR [rbp-0x238],rax
  40514d:	mov    rax,QWORD PTR [rbp-0x238]
  405154:	mov    rdi,rax
  405157:	call   403db0 <init_token_obra@@Base>
  40515c:	mov    rax,QWORD PTR [rbp-0x238]
  405163:	mov    QWORD PTR [rbp-0x8],rax
  405167:	jmp    4067a6 <next@@Base+0x1c06>
  40516c:	mov    eax,0x27
  405171:	mov    ecx,eax
  405173:	mov    eax,0x26
  405178:	mov    edx,eax
  40517a:	movsx  eax,BYTE PTR [rbp-0x229]
  405181:	cmp    eax,0x7d
  405184:	sete   sil
  405188:	cmp    eax,0x7d
  40518b:	cmove  rcx,rdx
  40518f:	lea    rdx,[rip+0xd37a]        # 412510 <__bss_start@@Base+0x380>
  405196:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40519a:	add    rdi,0x1
  40519e:	mov    QWORD PTR [rdx+rcx*8],rdi
  4051a2:	test   sil,0x1
  4051a6:	jne    4051b1 <next@@Base+0x611>
  4051ac:	jmp    4051f5 <next@@Base+0x655>
  4051b1:	mov    eax,0x4
  4051b6:	mov    edi,eax
  4051b8:	mov    rcx,QWORD PTR [rip+0xd491]        # 412650 <__bss_start@@Base+0x4c0>
  4051bf:	add    rcx,0x1
  4051c3:	mov    QWORD PTR [rip+0xd486],rcx        # 412650 <__bss_start@@Base+0x4c0>
  4051ca:	call   4031a0 <malloc@plt>
  4051cf:	mov    QWORD PTR [rbp-0x238],rax
  4051d6:	mov    rax,QWORD PTR [rbp-0x238]
  4051dd:	mov    rdi,rax
  4051e0:	call   403df0 <init_token_cbra@@Base>
  4051e5:	mov    rax,QWORD PTR [rbp-0x238]
  4051ec:	mov    QWORD PTR [rbp-0x8],rax
  4051f0:	jmp    4067a6 <next@@Base+0x1c06>
  4051f5:	mov    eax,0x2a
  4051fa:	mov    ecx,eax
  4051fc:	mov    eax,0x29
  405201:	mov    edx,eax
  405203:	movsx  eax,BYTE PTR [rbp-0x229]
  40520a:	cmp    eax,0x3b
  40520d:	sete   sil
  405211:	cmp    eax,0x3b
  405214:	cmove  rcx,rdx
  405218:	lea    rdx,[rip+0xd2f1]        # 412510 <__bss_start@@Base+0x380>
  40521f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405223:	add    rdi,0x1
  405227:	mov    QWORD PTR [rdx+rcx*8],rdi
  40522b:	test   sil,0x1
  40522f:	jne    40523a <next@@Base+0x69a>
  405235:	jmp    40527e <next@@Base+0x6de>
  40523a:	mov    eax,0x4
  40523f:	mov    edi,eax
  405241:	mov    rcx,QWORD PTR [rip+0xd420]        # 412668 <__bss_start@@Base+0x4d8>
  405248:	add    rcx,0x1
  40524c:	mov    QWORD PTR [rip+0xd415],rcx        # 412668 <__bss_start@@Base+0x4d8>
  405253:	call   4031a0 <malloc@plt>
  405258:	mov    QWORD PTR [rbp-0x238],rax
  40525f:	mov    rax,QWORD PTR [rbp-0x238]
  405266:	mov    rdi,rax
  405269:	call   403e70 <init_token_semicolon@@Base>
  40526e:	mov    rax,QWORD PTR [rbp-0x238]
  405275:	mov    QWORD PTR [rbp-0x8],rax
  405279:	jmp    4067a6 <next@@Base+0x1c06>
  40527e:	mov    eax,0x2d
  405283:	mov    ecx,eax
  405285:	mov    eax,0x2c
  40528a:	mov    edx,eax
  40528c:	movsx  eax,BYTE PTR [rbp-0x229]
  405293:	cmp    eax,0x65
  405296:	sete   sil
  40529a:	cmp    eax,0x65
  40529d:	cmove  rcx,rdx
  4052a1:	lea    rdx,[rip+0xd268]        # 412510 <__bss_start@@Base+0x380>
  4052a8:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4052ac:	add    rdi,0x1
  4052b0:	mov    QWORD PTR [rdx+rcx*8],rdi
  4052b4:	test   sil,0x1
  4052b8:	jne    4052c3 <next@@Base+0x723>
  4052be:	jmp    405315 <next@@Base+0x775>
  4052c3:	mov    rax,QWORD PTR [rip+0xd3b6]        # 412680 <__bss_start@@Base+0x4f0>
  4052ca:	add    rax,0x1
  4052ce:	mov    QWORD PTR [rip+0xd3ab],rax        # 412680 <__bss_start@@Base+0x4f0>
  4052d5:	mov    cl,BYTE PTR [rbp-0x229]
  4052db:	mov    edx,DWORD PTR [rbp-0x21c]
  4052e1:	mov    esi,edx
  4052e3:	add    esi,0x1
  4052e6:	mov    DWORD PTR [rbp-0x21c],esi
  4052ec:	movsxd rax,edx
  4052ef:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  4052f6:	mov    rdi,QWORD PTR [rbp-0x10]
  4052fa:	call   404a00 <get_char@@Base>
  4052ff:	mov    BYTE PTR [rbp-0x229],al
  405305:	mov    QWORD PTR [rbp-0x228],0x5
  405310:	jmp    405ca5 <next@@Base+0x1105>
  405315:	mov    eax,0x30
  40531a:	mov    ecx,eax
  40531c:	mov    eax,0x2f
  405321:	mov    edx,eax
  405323:	movsx  eax,BYTE PTR [rbp-0x229]
  40532a:	cmp    eax,0x69
  40532d:	sete   sil
  405331:	cmp    eax,0x69
  405334:	cmove  rcx,rdx
  405338:	lea    rdx,[rip+0xd1d1]        # 412510 <__bss_start@@Base+0x380>
  40533f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405343:	add    rdi,0x1
  405347:	mov    QWORD PTR [rdx+rcx*8],rdi
  40534b:	test   sil,0x1
  40534f:	jne    40535a <next@@Base+0x7ba>
  405355:	jmp    4053ac <next@@Base+0x80c>
  40535a:	mov    rax,QWORD PTR [rip+0xd337]        # 412698 <__bss_start@@Base+0x508>
  405361:	add    rax,0x1
  405365:	mov    QWORD PTR [rip+0xd32c],rax        # 412698 <__bss_start@@Base+0x508>
  40536c:	mov    cl,BYTE PTR [rbp-0x229]
  405372:	mov    edx,DWORD PTR [rbp-0x21c]
  405378:	mov    esi,edx
  40537a:	add    esi,0x1
  40537d:	mov    DWORD PTR [rbp-0x21c],esi
  405383:	movsxd rax,edx
  405386:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40538d:	mov    rdi,QWORD PTR [rbp-0x10]
  405391:	call   404a00 <get_char@@Base>
  405396:	mov    BYTE PTR [rbp-0x229],al
  40539c:	mov    QWORD PTR [rbp-0x228],0x2
  4053a7:	jmp    405c93 <next@@Base+0x10f3>
  4053ac:	mov    eax,0x33
  4053b1:	mov    ecx,eax
  4053b3:	mov    eax,0x32
  4053b8:	mov    edx,eax
  4053ba:	movsx  eax,BYTE PTR [rbp-0x229]
  4053c1:	cmp    eax,0x6d
  4053c4:	sete   sil
  4053c8:	cmp    eax,0x6d
  4053cb:	cmove  rcx,rdx
  4053cf:	lea    rdx,[rip+0xd13a]        # 412510 <__bss_start@@Base+0x380>
  4053d6:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4053da:	add    rdi,0x1
  4053de:	mov    QWORD PTR [rdx+rcx*8],rdi
  4053e2:	test   sil,0x1
  4053e6:	jne    4053f1 <next@@Base+0x851>
  4053ec:	jmp    405443 <next@@Base+0x8a3>
  4053f1:	mov    rax,QWORD PTR [rip+0xd2b8]        # 4126b0 <__bss_start@@Base+0x520>
  4053f8:	add    rax,0x1
  4053fc:	mov    QWORD PTR [rip+0xd2ad],rax        # 4126b0 <__bss_start@@Base+0x520>
  405403:	mov    cl,BYTE PTR [rbp-0x229]
  405409:	mov    edx,DWORD PTR [rbp-0x21c]
  40540f:	mov    esi,edx
  405411:	add    esi,0x1
  405414:	mov    DWORD PTR [rbp-0x21c],esi
  40541a:	movsxd rax,edx
  40541d:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  405424:	mov    rdi,QWORD PTR [rbp-0x10]
  405428:	call   404a00 <get_char@@Base>
  40542d:	mov    BYTE PTR [rbp-0x229],al
  405433:	mov    QWORD PTR [rbp-0x228],0x3
  40543e:	jmp    405c81 <next@@Base+0x10e1>
  405443:	mov    eax,0x36
  405448:	mov    ecx,eax
  40544a:	mov    eax,0x35
  40544f:	mov    edx,eax
  405451:	movsx  eax,BYTE PTR [rbp-0x229]
  405458:	cmp    eax,0x72
  40545b:	sete   sil
  40545f:	cmp    eax,0x72
  405462:	cmove  rcx,rdx
  405466:	lea    rdx,[rip+0xd0a3]        # 412510 <__bss_start@@Base+0x380>
  40546d:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405471:	add    rdi,0x1
  405475:	mov    QWORD PTR [rdx+rcx*8],rdi
  405479:	test   sil,0x1
  40547d:	jne    405488 <next@@Base+0x8e8>
  405483:	jmp    4054da <next@@Base+0x93a>
  405488:	mov    rax,QWORD PTR [rip+0xd239]        # 4126c8 <__bss_start@@Base+0x538>
  40548f:	add    rax,0x1
  405493:	mov    QWORD PTR [rip+0xd22e],rax        # 4126c8 <__bss_start@@Base+0x538>
  40549a:	mov    cl,BYTE PTR [rbp-0x229]
  4054a0:	mov    edx,DWORD PTR [rbp-0x21c]
  4054a6:	mov    esi,edx
  4054a8:	add    esi,0x1
  4054ab:	mov    DWORD PTR [rbp-0x21c],esi
  4054b1:	movsxd rax,edx
  4054b4:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  4054bb:	mov    rdi,QWORD PTR [rbp-0x10]
  4054bf:	call   404a00 <get_char@@Base>
  4054c4:	mov    BYTE PTR [rbp-0x229],al
  4054ca:	mov    QWORD PTR [rbp-0x228],0x4
  4054d5:	jmp    405c6f <next@@Base+0x10cf>
  4054da:	mov    eax,0x39
  4054df:	mov    ecx,eax
  4054e1:	mov    eax,0x38
  4054e6:	mov    edx,eax
  4054e8:	movsx  eax,BYTE PTR [rbp-0x229]
  4054ef:	cmp    eax,0x21
  4054f2:	sete   sil
  4054f6:	cmp    eax,0x21
  4054f9:	cmove  rcx,rdx
  4054fd:	lea    rdx,[rip+0xd00c]        # 412510 <__bss_start@@Base+0x380>
  405504:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405508:	add    rdi,0x1
  40550c:	mov    QWORD PTR [rdx+rcx*8],rdi
  405510:	test   sil,0x1
  405514:	jne    40551f <next@@Base+0x97f>
  40551a:	jmp    40567b <next@@Base+0xadb>
  40551f:	mov    al,BYTE PTR [rbp-0x229]
  405525:	mov    ecx,DWORD PTR [rbp-0x21c]
  40552b:	mov    edx,ecx
  40552d:	add    edx,0x1
  405530:	mov    DWORD PTR [rbp-0x21c],edx
  405536:	movsxd rsi,ecx
  405539:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  405540:	mov    rdi,QWORD PTR [rbp-0x10]
  405544:	call   404a00 <get_char@@Base>
  405549:	mov    ecx,0x10
  40554e:	mov    edi,ecx
  405550:	mov    BYTE PTR [rbp-0x229],al
  405556:	call   4031a0 <malloc@plt>
  40555b:	mov    ecx,0x3b
  405560:	mov    esi,ecx
  405562:	mov    ecx,0x3a
  405567:	mov    edi,ecx
  405569:	mov    QWORD PTR [rbp-0x238],rax
  405570:	movsx  ecx,BYTE PTR [rbp-0x229]
  405577:	cmp    ecx,0x3d
  40557a:	setne  r8b
  40557e:	cmp    ecx,0x3d
  405581:	cmovne rsi,rdi
  405585:	lea    rax,[rip+0xcf84]        # 412510 <__bss_start@@Base+0x380>
  40558c:	mov    rdi,QWORD PTR [rax+rsi*8]
  405590:	add    rdi,0x1
  405594:	mov    QWORD PTR [rax+rsi*8],rdi
  405598:	test   r8b,0x1
  40559c:	jne    4055a7 <next@@Base+0xa07>
  4055a2:	jmp    4055f4 <next@@Base+0xa54>
  4055a7:	mov    rax,QWORD PTR [rip+0xd142]        # 4126f0 <__bss_start@@Base+0x560>
  4055ae:	add    rax,0x1
  4055b2:	mov    QWORD PTR [rip+0xd137],rax        # 4126f0 <__bss_start@@Base+0x560>
  4055b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4055bd:	call   404b50 <push_back_one_char@@Base>
  4055c2:	mov    ecx,0x2
  4055c7:	mov    edi,ecx
  4055c9:	call   4031a0 <malloc@plt>
  4055ce:	mov    QWORD PTR [rbp-0x218],rax
  4055d5:	mov    dl,BYTE PTR [rbp-0x210]
  4055db:	mov    rax,QWORD PTR [rbp-0x218]
  4055e2:	mov    BYTE PTR [rax],dl
  4055e4:	mov    rax,QWORD PTR [rbp-0x218]
  4055eb:	mov    BYTE PTR [rax+0x1],0x0
  4055ef:	jmp    405643 <next@@Base+0xaa3>
  4055f4:	mov    eax,0x3
  4055f9:	mov    edi,eax
  4055fb:	mov    rcx,QWORD PTR [rip+0xd0f6]        # 4126f8 <__bss_start@@Base+0x568>
  405602:	add    rcx,0x1
  405606:	mov    QWORD PTR [rip+0xd0eb],rcx        # 4126f8 <__bss_start@@Base+0x568>
  40560d:	call   4031a0 <malloc@plt>
  405612:	mov    QWORD PTR [rbp-0x218],rax
  405619:	mov    dl,BYTE PTR [rbp-0x210]
  40561f:	mov    rax,QWORD PTR [rbp-0x218]
  405626:	mov    BYTE PTR [rax],dl
  405628:	mov    dl,BYTE PTR [rbp-0x229]
  40562e:	mov    rax,QWORD PTR [rbp-0x218]
  405635:	mov    BYTE PTR [rax+0x1],dl
  405638:	mov    rax,QWORD PTR [rbp-0x218]
  40563f:	mov    BYTE PTR [rax+0x2],0x0
  405643:	mov    rax,QWORD PTR [rip+0xd0b6]        # 412700 <__bss_start@@Base+0x570>
  40564a:	add    rax,0x1
  40564e:	mov    QWORD PTR [rip+0xd0ab],rax        # 412700 <__bss_start@@Base+0x570>
  405655:	mov    rax,QWORD PTR [rbp-0x238]
  40565c:	mov    rsi,QWORD PTR [rbp-0x218]
  405663:	mov    rdi,rax
  405666:	call   403f70 <init_token_boolean_op@@Base>
  40566b:	mov    rax,QWORD PTR [rbp-0x238]
  405672:	mov    QWORD PTR [rbp-0x8],rax
  405676:	jmp    4067a6 <next@@Base+0x1c06>
  40567b:	mov    eax,0x40
  405680:	mov    ecx,eax
  405682:	mov    eax,0x3f
  405687:	mov    edx,eax
  405689:	movsx  eax,BYTE PTR [rbp-0x229]
  405690:	cmp    eax,0x3c
  405693:	sete   sil
  405697:	cmp    eax,0x3c
  40569a:	cmove  rcx,rdx
  40569e:	lea    rdx,[rip+0xce6b]        # 412510 <__bss_start@@Base+0x380>
  4056a5:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4056a9:	add    rdi,0x1
  4056ad:	mov    QWORD PTR [rdx+rcx*8],rdi
  4056b1:	test   sil,0x1
  4056b5:	jne    405700 <next@@Base+0xb60>
  4056bb:	mov    eax,0x42
  4056c0:	mov    ecx,eax
  4056c2:	mov    eax,0x41
  4056c7:	mov    edx,eax
  4056c9:	movsx  eax,BYTE PTR [rbp-0x229]
  4056d0:	cmp    eax,0x3e
  4056d3:	sete   sil
  4056d7:	cmp    eax,0x3e
  4056da:	cmove  rcx,rdx
  4056de:	lea    rdx,[rip+0xce2b]        # 412510 <__bss_start@@Base+0x380>
  4056e5:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4056e9:	add    rdi,0x1
  4056ed:	mov    QWORD PTR [rdx+rcx*8],rdi
  4056f1:	test   sil,0x1
  4056f5:	jne    405700 <next@@Base+0xb60>
  4056fb:	jmp    40585c <next@@Base+0xcbc>
  405700:	mov    al,BYTE PTR [rbp-0x229]
  405706:	mov    ecx,DWORD PTR [rbp-0x21c]
  40570c:	mov    edx,ecx
  40570e:	add    edx,0x1
  405711:	mov    DWORD PTR [rbp-0x21c],edx
  405717:	movsxd rsi,ecx
  40571a:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  405721:	mov    rdi,QWORD PTR [rbp-0x10]
  405725:	call   404a00 <get_char@@Base>
  40572a:	mov    ecx,0x10
  40572f:	mov    edi,ecx
  405731:	mov    BYTE PTR [rbp-0x229],al
  405737:	call   4031a0 <malloc@plt>
  40573c:	mov    ecx,0x44
  405741:	mov    esi,ecx
  405743:	mov    ecx,0x43
  405748:	mov    edi,ecx
  40574a:	mov    QWORD PTR [rbp-0x238],rax
  405751:	movsx  ecx,BYTE PTR [rbp-0x229]
  405758:	cmp    ecx,0x3d
  40575b:	setne  r8b
  40575f:	cmp    ecx,0x3d
  405762:	cmovne rsi,rdi
  405766:	lea    rax,[rip+0xcda3]        # 412510 <__bss_start@@Base+0x380>
  40576d:	mov    rdi,QWORD PTR [rax+rsi*8]
  405771:	add    rdi,0x1
  405775:	mov    QWORD PTR [rax+rsi*8],rdi
  405779:	test   r8b,0x1
  40577d:	jne    405788 <next@@Base+0xbe8>
  405783:	jmp    4057d5 <next@@Base+0xc35>
  405788:	mov    rax,QWORD PTR [rip+0xcfa9]        # 412738 <__bss_start@@Base+0x5a8>
  40578f:	add    rax,0x1
  405793:	mov    QWORD PTR [rip+0xcf9e],rax        # 412738 <__bss_start@@Base+0x5a8>
  40579a:	mov    rdi,QWORD PTR [rbp-0x10]
  40579e:	call   404b50 <push_back_one_char@@Base>
  4057a3:	mov    ecx,0x2
  4057a8:	mov    edi,ecx
  4057aa:	call   4031a0 <malloc@plt>
  4057af:	mov    QWORD PTR [rbp-0x218],rax
  4057b6:	mov    dl,BYTE PTR [rbp-0x210]
  4057bc:	mov    rax,QWORD PTR [rbp-0x218]
  4057c3:	mov    BYTE PTR [rax],dl
  4057c5:	mov    rax,QWORD PTR [rbp-0x218]
  4057cc:	mov    BYTE PTR [rax+0x1],0x0
  4057d0:	jmp    405824 <next@@Base+0xc84>
  4057d5:	mov    eax,0x3
  4057da:	mov    edi,eax
  4057dc:	mov    rcx,QWORD PTR [rip+0xcf5d]        # 412740 <__bss_start@@Base+0x5b0>
  4057e3:	add    rcx,0x1
  4057e7:	mov    QWORD PTR [rip+0xcf52],rcx        # 412740 <__bss_start@@Base+0x5b0>
  4057ee:	call   4031a0 <malloc@plt>
  4057f3:	mov    QWORD PTR [rbp-0x218],rax
  4057fa:	mov    dl,BYTE PTR [rbp-0x210]
  405800:	mov    rax,QWORD PTR [rbp-0x218]
  405807:	mov    BYTE PTR [rax],dl
  405809:	mov    dl,BYTE PTR [rbp-0x229]
  40580f:	mov    rax,QWORD PTR [rbp-0x218]
  405816:	mov    BYTE PTR [rax+0x1],dl
  405819:	mov    rax,QWORD PTR [rbp-0x218]
  405820:	mov    BYTE PTR [rax+0x2],0x0
  405824:	mov    rax,QWORD PTR [rip+0xcf1d]        # 412748 <__bss_start@@Base+0x5b8>
  40582b:	add    rax,0x1
  40582f:	mov    QWORD PTR [rip+0xcf12],rax        # 412748 <__bss_start@@Base+0x5b8>
  405836:	mov    rax,QWORD PTR [rbp-0x238]
  40583d:	mov    rsi,QWORD PTR [rbp-0x218]
  405844:	mov    rdi,rax
  405847:	call   403f70 <init_token_boolean_op@@Base>
  40584c:	mov    rax,QWORD PTR [rbp-0x238]
  405853:	mov    QWORD PTR [rbp-0x8],rax
  405857:	jmp    4067a6 <next@@Base+0x1c06>
  40585c:	mov    eax,0x49
  405861:	mov    ecx,eax
  405863:	mov    eax,0x48
  405868:	mov    edx,eax
  40586a:	movsx  eax,BYTE PTR [rbp-0x229]
  405871:	cmp    eax,0x3d
  405874:	sete   sil
  405878:	cmp    eax,0x3d
  40587b:	cmove  rcx,rdx
  40587f:	lea    rdx,[rip+0xcc8a]        # 412510 <__bss_start@@Base+0x380>
  405886:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40588a:	add    rdi,0x1
  40588e:	mov    QWORD PTR [rdx+rcx*8],rdi
  405892:	test   sil,0x1
  405896:	jne    4058a1 <next@@Base+0xd01>
  40589c:	jmp    4059a8 <next@@Base+0xe08>
  4058a1:	mov    al,BYTE PTR [rbp-0x229]
  4058a7:	mov    ecx,DWORD PTR [rbp-0x21c]
  4058ad:	mov    edx,ecx
  4058af:	add    edx,0x1
  4058b2:	mov    DWORD PTR [rbp-0x21c],edx
  4058b8:	movsxd rsi,ecx
  4058bb:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  4058c2:	mov    rdi,QWORD PTR [rbp-0x10]
  4058c6:	call   404a00 <get_char@@Base>
  4058cb:	mov    ecx,0x10
  4058d0:	mov    edi,ecx
  4058d2:	mov    BYTE PTR [rbp-0x229],al
  4058d8:	call   4031a0 <malloc@plt>
  4058dd:	mov    ecx,0x4b
  4058e2:	mov    esi,ecx
  4058e4:	mov    ecx,0x4a
  4058e9:	mov    edi,ecx
  4058eb:	mov    QWORD PTR [rbp-0x238],rax
  4058f2:	movsx  ecx,BYTE PTR [rbp-0x229]
  4058f9:	cmp    ecx,0x3d
  4058fc:	setne  r8b
  405900:	cmp    ecx,0x3d
  405903:	cmovne rsi,rdi
  405907:	lea    rax,[rip+0xcc02]        # 412510 <__bss_start@@Base+0x380>
  40590e:	mov    rdi,QWORD PTR [rax+rsi*8]
  405912:	add    rdi,0x1
  405916:	mov    QWORD PTR [rax+rsi*8],rdi
  40591a:	test   r8b,0x1
  40591e:	jne    405929 <next@@Base+0xd89>
  405924:	jmp    405933 <next@@Base+0xd93>
  405929:	mov    edi,0x1
  40592e:	call   403250 <exit@plt>
  405933:	mov    eax,0x3
  405938:	mov    edi,eax
  40593a:	mov    rcx,QWORD PTR [rip+0xce2f]        # 412770 <__bss_start@@Base+0x5e0>
  405941:	add    rcx,0x1
  405945:	mov    QWORD PTR [rip+0xce24],rcx        # 412770 <__bss_start@@Base+0x5e0>
  40594c:	call   4031a0 <malloc@plt>
  405951:	mov    QWORD PTR [rbp-0x218],rax
  405958:	mov    dl,BYTE PTR [rbp-0x210]
  40595e:	mov    rax,QWORD PTR [rbp-0x218]
  405965:	mov    BYTE PTR [rax],dl
  405967:	mov    dl,BYTE PTR [rbp-0x229]
  40596d:	mov    rax,QWORD PTR [rbp-0x218]
  405974:	mov    BYTE PTR [rax+0x1],dl
  405977:	mov    rax,QWORD PTR [rbp-0x218]
  40597e:	mov    BYTE PTR [rax+0x2],0x0
  405982:	mov    rax,QWORD PTR [rbp-0x238]
  405989:	mov    rsi,QWORD PTR [rbp-0x218]
  405990:	mov    rdi,rax
  405993:	call   403f70 <init_token_boolean_op@@Base>
  405998:	mov    rax,QWORD PTR [rbp-0x238]
  40599f:	mov    QWORD PTR [rbp-0x8],rax
  4059a3:	jmp    4067a6 <next@@Base+0x1c06>
  4059a8:	mov    eax,0x4e
  4059ad:	mov    ecx,eax
  4059af:	mov    eax,0x4d
  4059b4:	mov    edx,eax
  4059b6:	movsx  eax,BYTE PTR [rbp-0x229]
  4059bd:	cmp    eax,0x7c
  4059c0:	sete   sil
  4059c4:	cmp    eax,0x7c
  4059c7:	cmove  rcx,rdx
  4059cb:	lea    rdx,[rip+0xcb3e]        # 412510 <__bss_start@@Base+0x380>
  4059d2:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4059d6:	add    rdi,0x1
  4059da:	mov    QWORD PTR [rdx+rcx*8],rdi
  4059de:	test   sil,0x1
  4059e2:	jne    4059ed <next@@Base+0xe4d>
  4059e8:	jmp    405af4 <next@@Base+0xf54>
  4059ed:	mov    al,BYTE PTR [rbp-0x229]
  4059f3:	mov    ecx,DWORD PTR [rbp-0x21c]
  4059f9:	mov    edx,ecx
  4059fb:	add    edx,0x1
  4059fe:	mov    DWORD PTR [rbp-0x21c],edx
  405a04:	movsxd rsi,ecx
  405a07:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  405a0e:	mov    rdi,QWORD PTR [rbp-0x10]
  405a12:	call   404a00 <get_char@@Base>
  405a17:	mov    ecx,0x10
  405a1c:	mov    edi,ecx
  405a1e:	mov    BYTE PTR [rbp-0x229],al
  405a24:	call   4031a0 <malloc@plt>
  405a29:	mov    ecx,0x50
  405a2e:	mov    esi,ecx
  405a30:	mov    ecx,0x4f
  405a35:	mov    edi,ecx
  405a37:	mov    QWORD PTR [rbp-0x238],rax
  405a3e:	movsx  ecx,BYTE PTR [rbp-0x229]
  405a45:	cmp    ecx,0x7c
  405a48:	setne  r8b
  405a4c:	cmp    ecx,0x7c
  405a4f:	cmovne rsi,rdi
  405a53:	lea    rax,[rip+0xcab6]        # 412510 <__bss_start@@Base+0x380>
  405a5a:	mov    rdi,QWORD PTR [rax+rsi*8]
  405a5e:	add    rdi,0x1
  405a62:	mov    QWORD PTR [rax+rsi*8],rdi
  405a66:	test   r8b,0x1
  405a6a:	jne    405a75 <next@@Base+0xed5>
  405a70:	jmp    405a7f <next@@Base+0xedf>
  405a75:	mov    edi,0x1
  405a7a:	call   403250 <exit@plt>
  405a7f:	mov    eax,0x3
  405a84:	mov    edi,eax
  405a86:	mov    rcx,QWORD PTR [rip+0xcd0b]        # 412798 <__bss_start@@Base+0x608>
  405a8d:	add    rcx,0x1
  405a91:	mov    QWORD PTR [rip+0xcd00],rcx        # 412798 <__bss_start@@Base+0x608>
  405a98:	call   4031a0 <malloc@plt>
  405a9d:	mov    QWORD PTR [rbp-0x218],rax
  405aa4:	mov    dl,BYTE PTR [rbp-0x210]
  405aaa:	mov    rax,QWORD PTR [rbp-0x218]
  405ab1:	mov    BYTE PTR [rax],dl
  405ab3:	mov    dl,BYTE PTR [rbp-0x229]
  405ab9:	mov    rax,QWORD PTR [rbp-0x218]
  405ac0:	mov    BYTE PTR [rax+0x1],dl
  405ac3:	mov    rax,QWORD PTR [rbp-0x218]
  405aca:	mov    BYTE PTR [rax+0x2],0x0
  405ace:	mov    rax,QWORD PTR [rbp-0x238]
  405ad5:	mov    rsi,QWORD PTR [rbp-0x218]
  405adc:	mov    rdi,rax
  405adf:	call   403f70 <init_token_boolean_op@@Base>
  405ae4:	mov    rax,QWORD PTR [rbp-0x238]
  405aeb:	mov    QWORD PTR [rbp-0x8],rax
  405aef:	jmp    4067a6 <next@@Base+0x1c06>
  405af4:	mov    eax,0x53
  405af9:	mov    ecx,eax
  405afb:	mov    eax,0x52
  405b00:	mov    edx,eax
  405b02:	movsx  eax,BYTE PTR [rbp-0x229]
  405b09:	cmp    eax,0x26
  405b0c:	sete   sil
  405b10:	cmp    eax,0x26
  405b13:	cmove  rcx,rdx
  405b17:	lea    rdx,[rip+0xc9f2]        # 412510 <__bss_start@@Base+0x380>
  405b1e:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405b22:	add    rdi,0x1
  405b26:	mov    QWORD PTR [rdx+rcx*8],rdi
  405b2a:	test   sil,0x1
  405b2e:	jne    405b39 <next@@Base+0xf99>
  405b34:	jmp    405c40 <next@@Base+0x10a0>
  405b39:	mov    al,BYTE PTR [rbp-0x229]
  405b3f:	mov    ecx,DWORD PTR [rbp-0x21c]
  405b45:	mov    edx,ecx
  405b47:	add    edx,0x1
  405b4a:	mov    DWORD PTR [rbp-0x21c],edx
  405b50:	movsxd rsi,ecx
  405b53:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  405b5a:	mov    rdi,QWORD PTR [rbp-0x10]
  405b5e:	call   404a00 <get_char@@Base>
  405b63:	mov    ecx,0x10
  405b68:	mov    edi,ecx
  405b6a:	mov    BYTE PTR [rbp-0x229],al
  405b70:	call   4031a0 <malloc@plt>
  405b75:	mov    ecx,0x55
  405b7a:	mov    esi,ecx
  405b7c:	mov    ecx,0x54
  405b81:	mov    edi,ecx
  405b83:	mov    QWORD PTR [rbp-0x238],rax
  405b8a:	movsx  ecx,BYTE PTR [rbp-0x229]
  405b91:	cmp    ecx,0x26
  405b94:	setne  r8b
  405b98:	cmp    ecx,0x26
  405b9b:	cmovne rsi,rdi
  405b9f:	lea    rax,[rip+0xc96a]        # 412510 <__bss_start@@Base+0x380>
  405ba6:	mov    rdi,QWORD PTR [rax+rsi*8]
  405baa:	add    rdi,0x1
  405bae:	mov    QWORD PTR [rax+rsi*8],rdi
  405bb2:	test   r8b,0x1
  405bb6:	jne    405bc1 <next@@Base+0x1021>
  405bbc:	jmp    405bcb <next@@Base+0x102b>
  405bc1:	mov    edi,0x1
  405bc6:	call   403250 <exit@plt>
  405bcb:	mov    eax,0x3
  405bd0:	mov    edi,eax
  405bd2:	mov    rcx,QWORD PTR [rip+0xcbe7]        # 4127c0 <__bss_start@@Base+0x630>
  405bd9:	add    rcx,0x1
  405bdd:	mov    QWORD PTR [rip+0xcbdc],rcx        # 4127c0 <__bss_start@@Base+0x630>
  405be4:	call   4031a0 <malloc@plt>
  405be9:	mov    QWORD PTR [rbp-0x218],rax
  405bf0:	mov    dl,BYTE PTR [rbp-0x210]
  405bf6:	mov    rax,QWORD PTR [rbp-0x218]
  405bfd:	mov    BYTE PTR [rax],dl
  405bff:	mov    dl,BYTE PTR [rbp-0x229]
  405c05:	mov    rax,QWORD PTR [rbp-0x218]
  405c0c:	mov    BYTE PTR [rax+0x1],dl
  405c0f:	mov    rax,QWORD PTR [rbp-0x218]
  405c16:	mov    BYTE PTR [rax+0x2],0x0
  405c1a:	mov    rax,QWORD PTR [rbp-0x238]
  405c21:	mov    rsi,QWORD PTR [rbp-0x218]
  405c28:	mov    rdi,rax
  405c2b:	call   403f70 <init_token_boolean_op@@Base>
  405c30:	mov    rax,QWORD PTR [rbp-0x238]
  405c37:	mov    QWORD PTR [rbp-0x8],rax
  405c3b:	jmp    4067a6 <next@@Base+0x1c06>
  405c40:	mov    rax,QWORD PTR [rip+0xc3a9]        # 411ff0 <stderr@GLIBC_2.2.5>
  405c47:	mov    rdi,QWORD PTR [rax]
  405c4a:	movsx  edx,BYTE PTR [rbp-0x229]
  405c51:	lea    rsi,[rip+0x77e1]        # 40d439 <_IO_stdin_used@@Base+0x439>
  405c58:	mov    al,0x0
  405c5a:	call   403150 <fprintf@plt>
  405c5f:	mov    edi,0x1
  405c64:	mov    DWORD PTR [rbp-0x264],eax
  405c6a:	call   403250 <exit@plt>
  405c6f:	mov    rax,QWORD PTR [rip+0xcb52]        # 4127c8 <__bss_start@@Base+0x638>
  405c76:	add    rax,0x1
  405c7a:	mov    QWORD PTR [rip+0xcb47],rax        # 4127c8 <__bss_start@@Base+0x638>
  405c81:	mov    rax,QWORD PTR [rip+0xcb48]        # 4127d0 <__bss_start@@Base+0x640>
  405c88:	add    rax,0x1
  405c8c:	mov    QWORD PTR [rip+0xcb3d],rax        # 4127d0 <__bss_start@@Base+0x640>
  405c93:	mov    rax,QWORD PTR [rip+0xcb3e]        # 4127d8 <__bss_start@@Base+0x648>
  405c9a:	add    rax,0x1
  405c9e:	mov    QWORD PTR [rip+0xcb33],rax        # 4127d8 <__bss_start@@Base+0x648>
  405ca5:	mov    rax,QWORD PTR [rip+0xcb34]        # 4127e0 <__bss_start@@Base+0x650>
  405cac:	add    rax,0x1
  405cb0:	mov    QWORD PTR [rip+0xcb29],rax        # 4127e0 <__bss_start@@Base+0x650>
  405cb7:	mov    rax,QWORD PTR [rip+0xcb2a]        # 4127e8 <__bss_start@@Base+0x658>
  405cbe:	add    rax,0x1
  405cc2:	mov    QWORD PTR [rip+0xcb1f],rax        # 4127e8 <__bss_start@@Base+0x658>
  405cc9:	mov    rax,QWORD PTR [rip+0xcb20]        # 4127f0 <__bss_start@@Base+0x660>
  405cd0:	add    rax,0x1
  405cd4:	mov    QWORD PTR [rip+0xcb15],rax        # 4127f0 <__bss_start@@Base+0x660>
  405cdb:	mov    rax,QWORD PTR [rip+0xcb16]        # 4127f8 <__bss_start@@Base+0x668>
  405ce2:	add    rax,0x1
  405ce6:	mov    QWORD PTR [rip+0xcb0b],rax        # 4127f8 <__bss_start@@Base+0x668>
  405ced:	mov    rax,QWORD PTR [rip+0xcb0c]        # 412800 <__bss_start@@Base+0x670>
  405cf4:	add    rax,0x1
  405cf8:	mov    QWORD PTR [rip+0xcb01],rax        # 412800 <__bss_start@@Base+0x670>
  405cff:	mov    rax,QWORD PTR [rip+0xcb02]        # 412808 <__bss_start@@Base+0x678>
  405d06:	add    rax,0x1
  405d0a:	mov    QWORD PTR [rip+0xcaf7],rax        # 412808 <__bss_start@@Base+0x678>
  405d11:	mov    rax,QWORD PTR [rip+0xcaf8]        # 412810 <__bss_start@@Base+0x680>
  405d18:	add    rax,0x1
  405d1c:	mov    QWORD PTR [rip+0xcaed],rax        # 412810 <__bss_start@@Base+0x680>
  405d23:	mov    rax,QWORD PTR [rip+0xcaee]        # 412818 <__bss_start@@Base+0x688>
  405d2a:	add    rax,0x1
  405d2e:	mov    QWORD PTR [rip+0xcae3],rax        # 412818 <__bss_start@@Base+0x688>
  405d35:	mov    rax,QWORD PTR [rip+0xcae4]        # 412820 <__bss_start@@Base+0x690>
  405d3c:	add    rax,0x1
  405d40:	mov    QWORD PTR [rip+0xcad9],rax        # 412820 <__bss_start@@Base+0x690>
  405d47:	jmp    40673d <next@@Base+0x1b9d>
  405d4c:	lea    rax,[rip+0xb4ed]        # 411240 <_IO_stdin_used@@Base+0x4240>
  405d53:	add    rax,0x20
  405d57:	lea    rdi,[rip+0xc3fe]        # 41215c <__data_start@@Base+0x14>
  405d5e:	mov    rsi,rax
  405d61:	call   4067d0 <next@@Base+0x1c30>
  405d66:	mov    rax,QWORD PTR [rip+0xcabb]        # 412828 <__bss_start@@Base+0x698>
  405d6d:	add    rax,0x1
  405d71:	mov    QWORD PTR [rip+0xcab0],rax        # 412828 <__bss_start@@Base+0x698>
  405d78:	xor    eax,eax
  405d7a:	mov    cl,al
  405d7c:	mov    eax,0x65
  405d81:	mov    edx,eax
  405d83:	mov    eax,0x64
  405d88:	mov    esi,eax
  405d8a:	movsx  eax,BYTE PTR [rbp-0x229]
  405d91:	cmp    eax,0x30
  405d94:	setge  dil
  405d98:	cmp    eax,0x30
  405d9b:	cmovge rdx,rsi
  405d9f:	lea    rsi,[rip+0xc76a]        # 412510 <__bss_start@@Base+0x380>
  405da6:	mov    r8,QWORD PTR [rsi+rdx*8]
  405daa:	add    r8,0x1
  405dae:	mov    QWORD PTR [rsi+rdx*8],r8
  405db2:	test   dil,0x1
  405db6:	mov    BYTE PTR [rbp-0x265],cl
  405dbc:	jne    405dc7 <next@@Base+0x1227>
  405dc2:	jmp    405dec <next@@Base+0x124c>
  405dc7:	mov    rax,QWORD PTR [rip+0xca72]        # 412840 <__bss_start@@Base+0x6b0>
  405dce:	add    rax,0x1
  405dd2:	mov    QWORD PTR [rip+0xca67],rax        # 412840 <__bss_start@@Base+0x6b0>
  405dd9:	movsx  ecx,BYTE PTR [rbp-0x229]
  405de0:	cmp    ecx,0x39
  405de3:	setle  dl
  405de6:	mov    BYTE PTR [rbp-0x265],dl
  405dec:	mov    al,BYTE PTR [rbp-0x265]
  405df2:	mov    ecx,0x68
  405df7:	mov    edx,ecx
  405df9:	mov    ecx,0x67
  405dfe:	mov    esi,ecx
  405e00:	test   al,0x1
  405e02:	cmovne rdx,rsi
  405e06:	lea    rsi,[rip+0xc703]        # 412510 <__bss_start@@Base+0x380>
  405e0d:	mov    rdi,QWORD PTR [rsi+rdx*8]
  405e11:	add    rdi,0x1
  405e15:	mov    QWORD PTR [rsi+rdx*8],rdi
  405e19:	test   al,0x1
  405e1b:	jne    405e26 <next@@Base+0x1286>
  405e21:	jmp    405e6d <next@@Base+0x12cd>
  405e26:	mov    rax,QWORD PTR [rip+0xca2b]        # 412858 <__bss_start@@Base+0x6c8>
  405e2d:	add    rax,0x1
  405e31:	mov    QWORD PTR [rip+0xca20],rax        # 412858 <__bss_start@@Base+0x6c8>
  405e38:	mov    cl,BYTE PTR [rbp-0x229]
  405e3e:	mov    edx,DWORD PTR [rbp-0x21c]
  405e44:	mov    esi,edx
  405e46:	add    esi,0x1
  405e49:	mov    DWORD PTR [rbp-0x21c],esi
  405e4f:	movsxd rax,edx
  405e52:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  405e59:	mov    rdi,QWORD PTR [rbp-0x10]
  405e5d:	call   404a00 <get_char@@Base>
  405e62:	mov    BYTE PTR [rbp-0x229],al
  405e68:	jmp    405d78 <next@@Base+0x11d8>
  405e6d:	mov    rax,QWORD PTR [rip+0xc9ec]        # 412860 <__bss_start@@Base+0x6d0>
  405e74:	add    rax,0x1
  405e78:	mov    QWORD PTR [rip+0xc9e1],rax        # 412860 <__bss_start@@Base+0x6d0>
  405e7f:	mov    rdi,QWORD PTR [rbp-0x10]
  405e83:	call   404b50 <push_back_one_char@@Base>
  405e88:	mov    ecx,0x8
  405e8d:	mov    edi,ecx
  405e8f:	movsxd rax,DWORD PTR [rbp-0x21c]
  405e96:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  405e9e:	call   4031a0 <malloc@plt>
  405ea3:	lea    rdi,[rbp-0x210]
  405eaa:	mov    QWORD PTR [rbp-0x238],rax
  405eb1:	mov    rax,QWORD PTR [rbp-0x238]
  405eb8:	mov    QWORD PTR [rbp-0x270],rax
  405ebf:	call   403240 <atoi@plt>
  405ec4:	mov    rdi,QWORD PTR [rbp-0x270]
  405ecb:	mov    esi,eax
  405ecd:	call   403c70 <init_token_int_value@@Base>
  405ed2:	mov    rdi,QWORD PTR [rbp-0x238]
  405ed9:	mov    QWORD PTR [rbp-0x8],rdi
  405edd:	jmp    4067a6 <next@@Base+0x1c06>
  405ee2:	lea    rdi,[rip+0xc273]        # 41215c <__data_start@@Base+0x14>
  405ee9:	lea    rsi,[rip+0xb380]        # 411270 <_IO_stdin_used@@Base+0x4270>
  405ef0:	call   4067d0 <next@@Base+0x1c30>
  405ef5:	mov    DWORD PTR [rip+0xc25d],0x1        # 41215c <__data_start@@Base+0x14>
  405eff:	movsx  eax,BYTE PTR [rbp-0x229]
  405f06:	mov    ecx,eax
  405f08:	sub    ecx,0x66
  405f0b:	mov    DWORD PTR [rbp-0x274],eax
  405f11:	mov    DWORD PTR [rbp-0x278],ecx
  405f17:	je     40601b <next@@Base+0x147b>
  405f1d:	jmp    405f22 <next@@Base+0x1382>
  405f22:	mov    eax,DWORD PTR [rbp-0x274]
  405f28:	sub    eax,0x6e
  405f2b:	mov    DWORD PTR [rbp-0x27c],eax
  405f31:	jne    4060ae <next@@Base+0x150e>
  405f37:	jmp    405f3c <next@@Base+0x139c>
  405f3c:	lea    rax,[rip+0xb2fd]        # 411240 <_IO_stdin_used@@Base+0x4240>
  405f43:	add    rax,0x80
  405f49:	lea    rdi,[rip+0xc20c]        # 41215c <__data_start@@Base+0x14>
  405f50:	mov    rsi,rax
  405f53:	call   4067d0 <next@@Base+0x1c30>
  405f58:	mov    cl,BYTE PTR [rbp-0x229]
  405f5e:	mov    edx,DWORD PTR [rbp-0x21c]
  405f64:	mov    r8d,edx
  405f67:	add    r8d,0x1
  405f6b:	mov    DWORD PTR [rbp-0x21c],r8d
  405f72:	movsxd rax,edx
  405f75:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  405f7c:	mov    rdi,QWORD PTR [rbp-0x10]
  405f80:	call   404a00 <get_char@@Base>
  405f85:	mov    edx,0x6f
  405f8a:	mov    esi,edx
  405f8c:	mov    edx,0x6e
  405f91:	mov    edi,edx
  405f93:	mov    BYTE PTR [rbp-0x229],al
  405f99:	movsx  edx,BYTE PTR [rbp-0x229]
  405fa0:	cmp    edx,0x74
  405fa3:	setne  al
  405fa6:	cmp    edx,0x74
  405fa9:	cmovne rsi,rdi
  405fad:	lea    rdi,[rip+0xc55c]        # 412510 <__bss_start@@Base+0x380>
  405fb4:	mov    r9,QWORD PTR [rdi+rsi*8]
  405fb8:	add    r9,0x1
  405fbc:	mov    QWORD PTR [rdi+rsi*8],r9
  405fc0:	test   al,0x1
  405fc2:	jne    405fcd <next@@Base+0x142d>
  405fc8:	jmp    405fd7 <next@@Base+0x1437>
  405fcd:	mov    edi,0x1
  405fd2:	call   403250 <exit@plt>
  405fd7:	mov    eax,0x4
  405fdc:	mov    edi,eax
  405fde:	mov    rcx,QWORD PTR [rip+0xc8ab]        # 412890 <__bss_start@@Base+0x700>
  405fe5:	add    rcx,0x1
  405fe9:	mov    QWORD PTR [rip+0xc8a0],rcx        # 412890 <__bss_start@@Base+0x700>
  405ff0:	call   4031a0 <malloc@plt>
  405ff5:	mov    QWORD PTR [rbp-0x238],rax
  405ffc:	mov    rax,QWORD PTR [rbp-0x238]
  406003:	mov    rdi,rax
  406006:	call   403c30 <init_token_int_type@@Base>
  40600b:	mov    rax,QWORD PTR [rbp-0x238]
  406012:	mov    QWORD PTR [rbp-0x8],rax
  406016:	jmp    4067a6 <next@@Base+0x1c06>
  40601b:	lea    rax,[rip+0xb21e]        # 411240 <_IO_stdin_used@@Base+0x4240>
  406022:	add    rax,0x90
  406028:	lea    rdi,[rip+0xc12d]        # 41215c <__data_start@@Base+0x14>
  40602f:	mov    rsi,rax
  406032:	call   4067d0 <next@@Base+0x1c30>
  406037:	mov    ecx,0x4
  40603c:	mov    edi,ecx
  40603e:	mov    rax,QWORD PTR [rip+0xc853]        # 412898 <__bss_start@@Base+0x708>
  406045:	add    rax,0x1
  406049:	mov    QWORD PTR [rip+0xc848],rax        # 412898 <__bss_start@@Base+0x708>
  406050:	mov    dl,BYTE PTR [rbp-0x229]
  406056:	mov    ecx,DWORD PTR [rbp-0x21c]
  40605c:	mov    r8d,ecx
  40605f:	add    r8d,0x1
  406063:	mov    DWORD PTR [rbp-0x21c],r8d
  40606a:	movsxd rax,ecx
  40606d:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406074:	movsxd rax,DWORD PTR [rbp-0x21c]
  40607b:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  406083:	call   4031a0 <malloc@plt>
  406088:	mov    QWORD PTR [rbp-0x238],rax
  40608f:	mov    rax,QWORD PTR [rbp-0x238]
  406096:	mov    rdi,rax
  406099:	call   403ef0 <init_token_if@@Base>
  40609e:	mov    rax,QWORD PTR [rbp-0x238]
  4060a5:	mov    QWORD PTR [rbp-0x8],rax
  4060a9:	jmp    4067a6 <next@@Base+0x1c06>
  4060ae:	lea    rax,[rip+0xb18b]        # 411240 <_IO_stdin_used@@Base+0x4240>
  4060b5:	add    rax,0x70
  4060b9:	lea    rdi,[rip+0xc09c]        # 41215c <__data_start@@Base+0x14>
  4060c0:	mov    rsi,rax
  4060c3:	call   4067d0 <next@@Base+0x1c30>
  4060c8:	mov    edi,0x1
  4060cd:	call   403250 <exit@plt>
  4060d2:	lea    rax,[rip+0xb167]        # 411240 <_IO_stdin_used@@Base+0x4240>
  4060d9:	add    rax,0x40
  4060dd:	lea    rdi,[rip+0xc078]        # 41215c <__data_start@@Base+0x14>
  4060e4:	mov    rsi,rax
  4060e7:	call   4067d0 <next@@Base+0x1c30>
  4060ec:	mov    ecx,0x73
  4060f1:	mov    eax,ecx
  4060f3:	mov    ecx,0x72
  4060f8:	mov    esi,ecx
  4060fa:	movsx  ecx,BYTE PTR [rbp-0x229]
  406101:	cmp    ecx,0x61
  406104:	setne  dl
  406107:	cmp    ecx,0x61
  40610a:	cmovne rax,rsi
  40610e:	lea    rsi,[rip+0xc3fb]        # 412510 <__bss_start@@Base+0x380>
  406115:	mov    rdi,QWORD PTR [rsi+rax*8]
  406119:	add    rdi,0x1
  40611d:	mov    QWORD PTR [rsi+rax*8],rdi
  406121:	test   dl,0x1
  406124:	jne    40612f <next@@Base+0x158f>
  40612a:	jmp    406139 <next@@Base+0x1599>
  40612f:	mov    edi,0x1
  406134:	call   403250 <exit@plt>
  406139:	mov    al,BYTE PTR [rbp-0x229]
  40613f:	mov    ecx,DWORD PTR [rbp-0x21c]
  406145:	mov    edx,ecx
  406147:	add    edx,0x1
  40614a:	mov    DWORD PTR [rbp-0x21c],edx
  406150:	movsxd rsi,ecx
  406153:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40615a:	mov    rdi,QWORD PTR [rbp-0x10]
  40615e:	call   404a00 <get_char@@Base>
  406163:	mov    ecx,0x75
  406168:	mov    esi,ecx
  40616a:	mov    ecx,0x74
  40616f:	mov    edi,ecx
  406171:	mov    BYTE PTR [rbp-0x229],al
  406177:	movsx  ecx,BYTE PTR [rbp-0x229]
  40617e:	cmp    ecx,0x69
  406181:	setne  al
  406184:	cmp    ecx,0x69
  406187:	cmovne rsi,rdi
  40618b:	lea    rdi,[rip+0xc37e]        # 412510 <__bss_start@@Base+0x380>
  406192:	mov    r8,QWORD PTR [rdi+rsi*8]
  406196:	add    r8,0x1
  40619a:	mov    QWORD PTR [rdi+rsi*8],r8
  40619e:	test   al,0x1
  4061a0:	jne    4061ab <next@@Base+0x160b>
  4061a6:	jmp    4061b5 <next@@Base+0x1615>
  4061ab:	mov    edi,0x1
  4061b0:	call   403250 <exit@plt>
  4061b5:	mov    al,BYTE PTR [rbp-0x229]
  4061bb:	mov    ecx,DWORD PTR [rbp-0x21c]
  4061c1:	mov    edx,ecx
  4061c3:	add    edx,0x1
  4061c6:	mov    DWORD PTR [rbp-0x21c],edx
  4061cc:	movsxd rsi,ecx
  4061cf:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  4061d6:	mov    rdi,QWORD PTR [rbp-0x10]
  4061da:	call   404a00 <get_char@@Base>
  4061df:	mov    ecx,0x77
  4061e4:	mov    esi,ecx
  4061e6:	mov    ecx,0x76
  4061eb:	mov    edi,ecx
  4061ed:	mov    BYTE PTR [rbp-0x229],al
  4061f3:	movsx  ecx,BYTE PTR [rbp-0x229]
  4061fa:	cmp    ecx,0x6e
  4061fd:	setne  al
  406200:	cmp    ecx,0x6e
  406203:	cmovne rsi,rdi
  406207:	lea    rdi,[rip+0xc302]        # 412510 <__bss_start@@Base+0x380>
  40620e:	mov    r8,QWORD PTR [rdi+rsi*8]
  406212:	add    r8,0x1
  406216:	mov    QWORD PTR [rdi+rsi*8],r8
  40621a:	test   al,0x1
  40621c:	jne    406227 <next@@Base+0x1687>
  406222:	jmp    406231 <next@@Base+0x1691>
  406227:	mov    edi,0x1
  40622c:	call   403250 <exit@plt>
  406231:	mov    rax,QWORD PTR [rip+0xc698]        # 4128d0 <__bss_start@@Base+0x740>
  406238:	add    rax,0x1
  40623c:	mov    QWORD PTR [rip+0xc68d],rax        # 4128d0 <__bss_start@@Base+0x740>
  406243:	mov    cl,BYTE PTR [rbp-0x229]
  406249:	mov    edx,DWORD PTR [rbp-0x21c]
  40624f:	mov    esi,edx
  406251:	add    esi,0x1
  406254:	mov    DWORD PTR [rbp-0x21c],esi
  40625a:	movsxd rax,edx
  40625d:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  406264:	movsxd rax,DWORD PTR [rbp-0x21c]
  40626b:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  406273:	movsxd rax,DWORD PTR [rbp-0x21c]
  40627a:	shl    rax,0x0
  40627e:	add    rax,0x1
  406282:	mov    rdi,rax
  406285:	call   4031a0 <malloc@plt>
  40628a:	lea    rsi,[rbp-0x210]
  406291:	mov    QWORD PTR [rbp-0x218],rax
  406298:	mov    rdi,QWORD PTR [rbp-0x218]
  40629f:	movsxd rdx,DWORD PTR [rbp-0x21c]
  4062a6:	call   403060 <strncpy@plt>
  4062ab:	mov    r8d,0x10
  4062b1:	mov    edi,r8d
  4062b4:	mov    rdx,QWORD PTR [rbp-0x218]
  4062bb:	movsxd rsi,DWORD PTR [rbp-0x21c]
  4062c2:	mov    BYTE PTR [rdx+rsi*1],0x0
  4062c6:	mov    QWORD PTR [rbp-0x288],rax
  4062cd:	call   4031a0 <malloc@plt>
  4062d2:	mov    QWORD PTR [rbp-0x238],rax
  4062d9:	mov    rax,QWORD PTR [rbp-0x238]
  4062e0:	mov    rsi,QWORD PTR [rbp-0x218]
  4062e7:	mov    rdi,rax
  4062ea:	call   403cd0 <init_token_function@@Base>
  4062ef:	mov    rax,QWORD PTR [rbp-0x238]
  4062f6:	mov    QWORD PTR [rbp-0x8],rax
  4062fa:	jmp    4067a6 <next@@Base+0x1c06>
  4062ff:	lea    rax,[rip+0xaf3a]        # 411240 <_IO_stdin_used@@Base+0x4240>
  406306:	add    rax,0x50
  40630a:	lea    rdi,[rip+0xbe4b]        # 41215c <__data_start@@Base+0x14>
  406311:	mov    rsi,rax
  406314:	call   4067d0 <next@@Base+0x1c30>
  406319:	mov    ecx,0x7a
  40631e:	mov    eax,ecx
  406320:	mov    ecx,0x79
  406325:	mov    esi,ecx
  406327:	movsx  ecx,BYTE PTR [rbp-0x229]
  40632e:	cmp    ecx,0x65
  406331:	setne  dl
  406334:	cmp    ecx,0x65
  406337:	cmovne rax,rsi
  40633b:	lea    rsi,[rip+0xc1ce]        # 412510 <__bss_start@@Base+0x380>
  406342:	mov    rdi,QWORD PTR [rsi+rax*8]
  406346:	add    rdi,0x1
  40634a:	mov    QWORD PTR [rsi+rax*8],rdi
  40634e:	test   dl,0x1
  406351:	jne    40635c <next@@Base+0x17bc>
  406357:	jmp    406366 <next@@Base+0x17c6>
  40635c:	mov    edi,0x1
  406361:	call   403250 <exit@plt>
  406366:	mov    al,BYTE PTR [rbp-0x229]
  40636c:	mov    ecx,DWORD PTR [rbp-0x21c]
  406372:	mov    edx,ecx
  406374:	add    edx,0x1
  406377:	mov    DWORD PTR [rbp-0x21c],edx
  40637d:	movsxd rsi,ecx
  406380:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  406387:	mov    rdi,QWORD PTR [rbp-0x10]
  40638b:	call   404a00 <get_char@@Base>
  406390:	mov    ecx,0x7c
  406395:	mov    esi,ecx
  406397:	mov    ecx,0x7b
  40639c:	mov    edi,ecx
  40639e:	mov    BYTE PTR [rbp-0x229],al
  4063a4:	movsx  ecx,BYTE PTR [rbp-0x229]
  4063ab:	cmp    ecx,0x74
  4063ae:	setne  al
  4063b1:	cmp    ecx,0x74
  4063b4:	cmovne rsi,rdi
  4063b8:	lea    rdi,[rip+0xc151]        # 412510 <__bss_start@@Base+0x380>
  4063bf:	mov    r8,QWORD PTR [rdi+rsi*8]
  4063c3:	add    r8,0x1
  4063c7:	mov    QWORD PTR [rdi+rsi*8],r8
  4063cb:	test   al,0x1
  4063cd:	jne    4063d8 <next@@Base+0x1838>
  4063d3:	jmp    4063e2 <next@@Base+0x1842>
  4063d8:	mov    edi,0x1
  4063dd:	call   403250 <exit@plt>
  4063e2:	mov    al,BYTE PTR [rbp-0x229]
  4063e8:	mov    ecx,DWORD PTR [rbp-0x21c]
  4063ee:	mov    edx,ecx
  4063f0:	add    edx,0x1
  4063f3:	mov    DWORD PTR [rbp-0x21c],edx
  4063f9:	movsxd rsi,ecx
  4063fc:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  406403:	mov    rdi,QWORD PTR [rbp-0x10]
  406407:	call   404a00 <get_char@@Base>
  40640c:	mov    ecx,0x7e
  406411:	mov    esi,ecx
  406413:	mov    ecx,0x7d
  406418:	mov    edi,ecx
  40641a:	mov    BYTE PTR [rbp-0x229],al
  406420:	movsx  ecx,BYTE PTR [rbp-0x229]
  406427:	cmp    ecx,0x75
  40642a:	setne  al
  40642d:	cmp    ecx,0x75
  406430:	cmovne rsi,rdi
  406434:	lea    rdi,[rip+0xc0d5]        # 412510 <__bss_start@@Base+0x380>
  40643b:	mov    r8,QWORD PTR [rdi+rsi*8]
  40643f:	add    r8,0x1
  406443:	mov    QWORD PTR [rdi+rsi*8],r8
  406447:	test   al,0x1
  406449:	jne    406454 <next@@Base+0x18b4>
  40644f:	jmp    40645e <next@@Base+0x18be>
  406454:	mov    edi,0x1
  406459:	call   403250 <exit@plt>
  40645e:	mov    al,BYTE PTR [rbp-0x229]
  406464:	mov    ecx,DWORD PTR [rbp-0x21c]
  40646a:	mov    edx,ecx
  40646c:	add    edx,0x1
  40646f:	mov    DWORD PTR [rbp-0x21c],edx
  406475:	movsxd rsi,ecx
  406478:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40647f:	mov    rdi,QWORD PTR [rbp-0x10]
  406483:	call   404a00 <get_char@@Base>
  406488:	mov    ecx,0x80
  40648d:	mov    esi,ecx
  40648f:	mov    ecx,0x7f
  406494:	mov    edi,ecx
  406496:	mov    BYTE PTR [rbp-0x229],al
  40649c:	movsx  ecx,BYTE PTR [rbp-0x229]
  4064a3:	cmp    ecx,0x72
  4064a6:	setne  al
  4064a9:	cmp    ecx,0x72
  4064ac:	cmovne rsi,rdi
  4064b0:	lea    rdi,[rip+0xc059]        # 412510 <__bss_start@@Base+0x380>
  4064b7:	mov    r8,QWORD PTR [rdi+rsi*8]
  4064bb:	add    r8,0x1
  4064bf:	mov    QWORD PTR [rdi+rsi*8],r8
  4064c3:	test   al,0x1
  4064c5:	jne    4064d0 <next@@Base+0x1930>
  4064cb:	jmp    4064da <next@@Base+0x193a>
  4064d0:	mov    edi,0x1
  4064d5:	call   403250 <exit@plt>
  4064da:	mov    al,BYTE PTR [rbp-0x229]
  4064e0:	mov    ecx,DWORD PTR [rbp-0x21c]
  4064e6:	mov    edx,ecx
  4064e8:	add    edx,0x1
  4064eb:	mov    DWORD PTR [rbp-0x21c],edx
  4064f1:	movsxd rsi,ecx
  4064f4:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  4064fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4064ff:	call   404a00 <get_char@@Base>
  406504:	mov    ecx,0x82
  406509:	mov    esi,ecx
  40650b:	mov    ecx,0x81
  406510:	mov    edi,ecx
  406512:	mov    BYTE PTR [rbp-0x229],al
  406518:	movsx  ecx,BYTE PTR [rbp-0x229]
  40651f:	cmp    ecx,0x6e
  406522:	setne  al
  406525:	cmp    ecx,0x6e
  406528:	cmovne rsi,rdi
  40652c:	lea    rdi,[rip+0xbfdd]        # 412510 <__bss_start@@Base+0x380>
  406533:	mov    r8,QWORD PTR [rdi+rsi*8]
  406537:	add    r8,0x1
  40653b:	mov    QWORD PTR [rdi+rsi*8],r8
  40653f:	test   al,0x1
  406541:	jne    40654c <next@@Base+0x19ac>
  406547:	jmp    406556 <next@@Base+0x19b6>
  40654c:	mov    edi,0x1
  406551:	call   403250 <exit@plt>
  406556:	mov    eax,0x4
  40655b:	mov    edi,eax
  40655d:	mov    rcx,QWORD PTR [rip+0xc3c4]        # 412928 <__bss_start@@Base+0x798>
  406564:	add    rcx,0x1
  406568:	mov    QWORD PTR [rip+0xc3b9],rcx        # 412928 <__bss_start@@Base+0x798>
  40656f:	call   4031a0 <malloc@plt>
  406574:	mov    QWORD PTR [rbp-0x238],rax
  40657b:	mov    rax,QWORD PTR [rbp-0x238]
  406582:	mov    rdi,rax
  406585:	call   403e30 <init_token_return@@Base>
  40658a:	mov    rax,QWORD PTR [rbp-0x238]
  406591:	mov    QWORD PTR [rbp-0x8],rax
  406595:	jmp    4067a6 <next@@Base+0x1c06>
  40659a:	lea    rax,[rip+0xac9f]        # 411240 <_IO_stdin_used@@Base+0x4240>
  4065a1:	add    rax,0x60
  4065a5:	lea    rdi,[rip+0xbbb0]        # 41215c <__data_start@@Base+0x14>
  4065ac:	mov    rsi,rax
  4065af:	call   4067d0 <next@@Base+0x1c30>
  4065b4:	mov    ecx,0x85
  4065b9:	mov    eax,ecx
  4065bb:	mov    ecx,0x84
  4065c0:	mov    esi,ecx
  4065c2:	movsx  ecx,BYTE PTR [rbp-0x229]
  4065c9:	cmp    ecx,0x6c
  4065cc:	setne  dl
  4065cf:	cmp    ecx,0x6c
  4065d2:	cmovne rax,rsi
  4065d6:	lea    rsi,[rip+0xbf33]        # 412510 <__bss_start@@Base+0x380>
  4065dd:	mov    rdi,QWORD PTR [rsi+rax*8]
  4065e1:	add    rdi,0x1
  4065e5:	mov    QWORD PTR [rsi+rax*8],rdi
  4065e9:	test   dl,0x1
  4065ec:	jne    4065f7 <next@@Base+0x1a57>
  4065f2:	jmp    406601 <next@@Base+0x1a61>
  4065f7:	mov    edi,0x1
  4065fc:	call   403250 <exit@plt>
  406601:	mov    al,BYTE PTR [rbp-0x229]
  406607:	mov    ecx,DWORD PTR [rbp-0x21c]
  40660d:	mov    edx,ecx
  40660f:	add    edx,0x1
  406612:	mov    DWORD PTR [rbp-0x21c],edx
  406618:	movsxd rsi,ecx
  40661b:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  406622:	mov    rdi,QWORD PTR [rbp-0x10]
  406626:	call   404a00 <get_char@@Base>
  40662b:	mov    ecx,0x87
  406630:	mov    esi,ecx
  406632:	mov    ecx,0x86
  406637:	mov    edi,ecx
  406639:	mov    BYTE PTR [rbp-0x229],al
  40663f:	movsx  ecx,BYTE PTR [rbp-0x229]
  406646:	cmp    ecx,0x73
  406649:	setne  al
  40664c:	cmp    ecx,0x73
  40664f:	cmovne rsi,rdi
  406653:	lea    rdi,[rip+0xbeb6]        # 412510 <__bss_start@@Base+0x380>
  40665a:	mov    r8,QWORD PTR [rdi+rsi*8]
  40665e:	add    r8,0x1
  406662:	mov    QWORD PTR [rdi+rsi*8],r8
  406666:	test   al,0x1
  406668:	jne    406673 <next@@Base+0x1ad3>
  40666e:	jmp    40667d <next@@Base+0x1add>
  406673:	mov    edi,0x1
  406678:	call   403250 <exit@plt>
  40667d:	mov    al,BYTE PTR [rbp-0x229]
  406683:	mov    ecx,DWORD PTR [rbp-0x21c]
  406689:	mov    edx,ecx
  40668b:	add    edx,0x1
  40668e:	mov    DWORD PTR [rbp-0x21c],edx
  406694:	movsxd rsi,ecx
  406697:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40669e:	mov    rdi,QWORD PTR [rbp-0x10]
  4066a2:	call   404a00 <get_char@@Base>
  4066a7:	mov    ecx,0x89
  4066ac:	mov    esi,ecx
  4066ae:	mov    ecx,0x88
  4066b3:	mov    edi,ecx
  4066b5:	mov    BYTE PTR [rbp-0x229],al
  4066bb:	movsx  ecx,BYTE PTR [rbp-0x229]
  4066c2:	cmp    ecx,0x65
  4066c5:	setne  al
  4066c8:	cmp    ecx,0x65
  4066cb:	cmovne rsi,rdi
  4066cf:	lea    rdi,[rip+0xbe3a]        # 412510 <__bss_start@@Base+0x380>
  4066d6:	mov    r8,QWORD PTR [rdi+rsi*8]
  4066da:	add    r8,0x1
  4066de:	mov    QWORD PTR [rdi+rsi*8],r8
  4066e2:	test   al,0x1
  4066e4:	jne    4066ef <next@@Base+0x1b4f>
  4066ea:	jmp    4066f9 <next@@Base+0x1b59>
  4066ef:	mov    edi,0x1
  4066f4:	call   403250 <exit@plt>
  4066f9:	mov    eax,0x4
  4066fe:	mov    edi,eax
  406700:	mov    rcx,QWORD PTR [rip+0xc259]        # 412960 <__bss_start@@Base+0x7d0>
  406707:	add    rcx,0x1
  40670b:	mov    QWORD PTR [rip+0xc24e],rcx        # 412960 <__bss_start@@Base+0x7d0>
  406712:	call   4031a0 <malloc@plt>
  406717:	mov    QWORD PTR [rbp-0x238],rax
  40671e:	mov    rax,QWORD PTR [rbp-0x238]
  406725:	mov    rdi,rax
  406728:	call   403f30 <init_token_else@@Base>
  40672d:	mov    rax,QWORD PTR [rbp-0x238]
  406734:	mov    QWORD PTR [rbp-0x8],rax
  406738:	jmp    4067a6 <next@@Base+0x1c06>
  40673d:	lea    rdi,[rip+0xba18]        # 41215c <__data_start@@Base+0x14>
  406744:	lea    rsi,[rip+0xaaf5]        # 411240 <_IO_stdin_used@@Base+0x4240>
  40674b:	call   4067d0 <next@@Base+0x1c30>
  406750:	mov    rsi,QWORD PTR [rip+0xc211]        # 412968 <__bss_start@@Base+0x7d8>
  406757:	add    rsi,0x1
  40675b:	mov    QWORD PTR [rip+0xc206],rsi        # 412968 <__bss_start@@Base+0x7d8>
  406762:	jmp    404cdf <next@@Base+0x13f>
  406767:	mov    eax,0x4
  40676c:	mov    edi,eax
  40676e:	mov    rcx,QWORD PTR [rip+0xc1fb]        # 412970 <__bss_start@@Base+0x7e0>
  406775:	add    rcx,0x1
  406779:	mov    QWORD PTR [rip+0xc1f0],rcx        # 412970 <__bss_start@@Base+0x7e0>
  406780:	call   4031a0 <malloc@plt>
  406785:	mov    QWORD PTR [rbp-0x238],rax
  40678c:	mov    rax,QWORD PTR [rbp-0x238]
  406793:	mov    rdi,rax
  406796:	call   403eb0 <init_token_eof@@Base>
  40679b:	mov    rax,QWORD PTR [rbp-0x238]
  4067a2:	mov    QWORD PTR [rbp-0x8],rax
  4067a6:	mov    rax,QWORD PTR [rip+0xc1cb]        # 412978 <__bss_start@@Base+0x7e8>
  4067ad:	add    rax,0x1
  4067b1:	mov    QWORD PTR [rip+0xc1c0],rax        # 412978 <__bss_start@@Base+0x7e8>
  4067b8:	mov    rax,QWORD PTR [rbp-0x8]
  4067bc:	add    rsp,0x290
  4067c3:	pop    rbp
  4067c4:	ret    
  4067c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067cf:	nop
  4067d0:	mov    eax,DWORD PTR [rdi]
  4067d2:	cmp    eax,0xffffffff
  4067d5:	mov    QWORD PTR [rsp-0x8],rsi
  4067da:	mov    DWORD PTR [rsp-0xc],eax
  4067de:	je     406813 <next@@Base+0x1c73>
  4067e4:	mov    eax,DWORD PTR [rsp-0xc]
  4067e8:	mov    ecx,eax
  4067ea:	mov    edx,ecx
  4067ec:	mov    rsi,QWORD PTR [rsp-0x8]
  4067f1:	mov    rdx,QWORD PTR [rsi+rdx*8]
  4067f5:	cmp    rdx,0x0
  4067f9:	mov    QWORD PTR [rsp-0x18],rdx
  4067fe:	je     406813 <next@@Base+0x1c73>
  406804:	mov    rax,QWORD PTR [rsp-0x18]
  406809:	mov    rcx,QWORD PTR [rax]
  40680c:	add    rcx,0x1
  406810:	mov    QWORD PTR [rax],rcx
  406813:	ret    
  406814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40681e:	xchg   ax,ax
  406820:	sub    rsp,0x38
  406824:	xor    eax,eax
  406826:	mov    DWORD PTR [rsp+0x34],eax
  40682a:	jmp    40682f <next@@Base+0x1c8f>
  40682f:	mov    eax,DWORD PTR [rsp+0x34]
  406833:	movsxd rcx,eax
  406836:	imul   rcx,rcx,0x30
  40683a:	lea    rdx,[rip+0xac1f]        # 411460 <_IO_stdin_used@@Base+0x4460>
  406841:	add    rdx,rcx
  406844:	mov    rdi,QWORD PTR [rdx]
  406847:	mov    rsi,QWORD PTR [rdx+0x8]
  40684b:	mov    r8d,DWORD PTR [rdx+0x10]
  40684f:	mov    QWORD PTR [rsp+0x28],rdx
  406854:	mov    edx,r8d
  406857:	mov    DWORD PTR [rsp+0x24],eax
  40685b:	call   40b1e0 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  406860:	xor    eax,eax
  406862:	mov    rcx,QWORD PTR [rsp+0x28]
  406867:	mov    edx,DWORD PTR [rcx+0x18]
  40686a:	mov    rsi,QWORD PTR [rcx+0x20]
  40686e:	mov    rdi,QWORD PTR [rcx+0x28]
  406872:	cmp    eax,edx
  406874:	mov    QWORD PTR [rsp+0x18],rdi
  406879:	mov    DWORD PTR [rsp+0x14],edx
  40687d:	mov    QWORD PTR [rsp+0x8],rsi
  406882:	mov    DWORD PTR [rsp+0x4],eax
  406886:	jge    4068f7 <next@@Base+0x1d57>
  40688c:	mov    eax,DWORD PTR [rsp+0x4]
  406890:	movsxd rcx,eax
  406893:	shl    rcx,0x5
  406897:	mov    rdx,QWORD PTR [rsp+0x8]
  40689c:	add    rdx,rcx
  40689f:	mov    edi,DWORD PTR [rdx]
  4068a1:	mov    rsi,QWORD PTR [rdx+0x8]
  4068a5:	mov    r8d,DWORD PTR [rdx+0x10]
  4068a9:	mov    r9b,BYTE PTR [rdx+0x14]
  4068ad:	mov    r10d,DWORD PTR [rdx+0x18]
  4068b1:	mov    edx,r8d
  4068b4:	movzx  ecx,r9b
  4068b8:	mov    r8d,r10d
  4068bb:	mov    DWORD PTR [rsp],eax
  4068be:	call   40b630 <__generate_code_for_binary_boolean_expression@@Base+0xca0>
  4068c3:	mov    eax,DWORD PTR [rsp]
  4068c6:	movsxd rsi,eax
  4068c9:	shl    rsi,0x4
  4068cd:	mov    r11,QWORD PTR [rsp+0x18]
  4068d2:	add    r11,rsi
  4068d5:	mov    edi,DWORD PTR [r11]
  4068d8:	mov    rsi,QWORD PTR [r11+0x8]
  4068dc:	call   40ba60 <__generate_code_for_binary_boolean_expression@@Base+0x10d0>
  4068e1:	mov    eax,DWORD PTR [rsp]
  4068e4:	add    eax,0x1
  4068e7:	mov    ecx,DWORD PTR [rsp+0x14]
  4068eb:	cmp    eax,ecx
  4068ed:	mov    DWORD PTR [rsp+0x4],eax
  4068f1:	jl     40688c <next@@Base+0x1cec>
  4068f7:	call   40be80 <__generate_code_for_binary_boolean_expression@@Base+0x14f0>
  4068fc:	call   40c620 <__generate_code_for_binary_boolean_expression@@Base+0x1c90>
  406901:	mov    eax,DWORD PTR [rsp+0x24]
  406905:	add    eax,0x1
  406908:	cmp    eax,0x1
  40690b:	mov    DWORD PTR [rsp+0x34],eax
  40690f:	jl     40682f <next@@Base+0x1c8f>
  406915:	add    rsp,0x38
  406919:	ret    
  40691a:	nop    WORD PTR [rax+rax*1+0x0]
  406920:	push   rax
  406921:	call   406820 <next@@Base+0x1c80>
  406926:	mov    QWORD PTR [rip+0xbb37],0x0        # 412468 <__bss_start@@Base+0x2d8>
  406931:	mov    QWORD PTR [rip+0xbb24],0x0        # 412460 <__bss_start@@Base+0x2d0>
  40693c:	mov    QWORD PTR [rip+0xbb49],0x0        # 412490 <__bss_start@@Base+0x300>
  406947:	mov    QWORD PTR [rip+0xbb36],0x0        # 412488 <__bss_start@@Base+0x2f8>
  406952:	mov    QWORD PTR [rip+0xbb23],0x0        # 412480 <__bss_start@@Base+0x2f0>
  40695d:	mov    QWORD PTR [rip+0xbb10],0x0        # 412478 <__bss_start@@Base+0x2e8>
  406968:	mov    QWORD PTR [rip+0xbafd],0x0        # 412470 <__bss_start@@Base+0x2e0>
  406973:	mov    QWORD PTR [rip+0xbb22],0x0        # 4124a0 <__bss_start@@Base+0x310>
  40697e:	mov    QWORD PTR [rip+0xbb0f],0x0        # 412498 <__bss_start@@Base+0x308>
  406989:	mov    QWORD PTR [rip+0xbb1c],0x0        # 4124b0 <__bss_start@@Base+0x320>
  406994:	mov    QWORD PTR [rip+0xbb09],0x0        # 4124a8 <__bss_start@@Base+0x318>
  40699f:	mov    QWORD PTR [rip+0xbb16],0x0        # 4124c0 <__bss_start@@Base+0x330>
  4069aa:	mov    QWORD PTR [rip+0xbb03],0x0        # 4124b8 <__bss_start@@Base+0x328>
  4069b5:	mov    QWORD PTR [rip+0xbb30],0x0        # 4124f0 <__bss_start@@Base+0x360>
  4069c0:	mov    QWORD PTR [rip+0xbb1d],0x0        # 4124e8 <__bss_start@@Base+0x358>
  4069cb:	mov    QWORD PTR [rip+0xbb0a],0x0        # 4124e0 <__bss_start@@Base+0x350>
  4069d6:	mov    QWORD PTR [rip+0xbaf7],0x0        # 4124d8 <__bss_start@@Base+0x348>
  4069e1:	mov    QWORD PTR [rip+0xbae4],0x0        # 4124d0 <__bss_start@@Base+0x340>
  4069ec:	mov    QWORD PTR [rip+0xbb09],0x0        # 412500 <__bss_start@@Base+0x370>
  4069f7:	mov    QWORD PTR [rip+0xbaf6],0x0        # 4124f8 <__bss_start@@Base+0x368>
  406a02:	mov    QWORD PTR [rip+0xbcfb],0x0        # 412708 <__bss_start@@Base+0x578>
  406a0d:	mov    QWORD PTR [rip+0xbce8],0x0        # 412700 <__bss_start@@Base+0x570>
  406a18:	mov    QWORD PTR [rip+0xbcd5],0x0        # 4126f8 <__bss_start@@Base+0x568>
  406a23:	mov    QWORD PTR [rip+0xbcc2],0x0        # 4126f0 <__bss_start@@Base+0x560>
  406a2e:	mov    QWORD PTR [rip+0xbcaf],0x0        # 4126e8 <__bss_start@@Base+0x558>
  406a39:	mov    QWORD PTR [rip+0xbc9c],0x0        # 4126e0 <__bss_start@@Base+0x550>
  406a44:	mov    QWORD PTR [rip+0xbc89],0x0        # 4126d8 <__bss_start@@Base+0x548>
  406a4f:	mov    QWORD PTR [rip+0xbc76],0x0        # 4126d0 <__bss_start@@Base+0x540>
  406a5a:	mov    QWORD PTR [rip+0xbc63],0x0        # 4126c8 <__bss_start@@Base+0x538>
  406a65:	mov    QWORD PTR [rip+0xbc50],0x0        # 4126c0 <__bss_start@@Base+0x530>
  406a70:	mov    QWORD PTR [rip+0xbc3d],0x0        # 4126b8 <__bss_start@@Base+0x528>
  406a7b:	mov    QWORD PTR [rip+0xbc2a],0x0        # 4126b0 <__bss_start@@Base+0x520>
  406a86:	mov    QWORD PTR [rip+0xbc17],0x0        # 4126a8 <__bss_start@@Base+0x518>
  406a91:	mov    QWORD PTR [rip+0xbc04],0x0        # 4126a0 <__bss_start@@Base+0x510>
  406a9c:	mov    QWORD PTR [rip+0xbbf1],0x0        # 412698 <__bss_start@@Base+0x508>
  406aa7:	mov    QWORD PTR [rip+0xbbde],0x0        # 412690 <__bss_start@@Base+0x500>
  406ab2:	mov    QWORD PTR [rip+0xbbcb],0x0        # 412688 <__bss_start@@Base+0x4f8>
  406abd:	mov    QWORD PTR [rip+0xbbb8],0x0        # 412680 <__bss_start@@Base+0x4f0>
  406ac8:	mov    QWORD PTR [rip+0xbba5],0x0        # 412678 <__bss_start@@Base+0x4e8>
  406ad3:	mov    QWORD PTR [rip+0xbb92],0x0        # 412670 <__bss_start@@Base+0x4e0>
  406ade:	mov    QWORD PTR [rip+0xbb7f],0x0        # 412668 <__bss_start@@Base+0x4d8>
  406ae9:	mov    QWORD PTR [rip+0xbb6c],0x0        # 412660 <__bss_start@@Base+0x4d0>
  406af4:	mov    QWORD PTR [rip+0xbb59],0x0        # 412658 <__bss_start@@Base+0x4c8>
  406aff:	mov    QWORD PTR [rip+0xbb46],0x0        # 412650 <__bss_start@@Base+0x4c0>
  406b0a:	mov    QWORD PTR [rip+0xbb33],0x0        # 412648 <__bss_start@@Base+0x4b8>
  406b15:	mov    QWORD PTR [rip+0xbb20],0x0        # 412640 <__bss_start@@Base+0x4b0>
  406b20:	mov    QWORD PTR [rip+0xbb0d],0x0        # 412638 <__bss_start@@Base+0x4a8>
  406b2b:	mov    QWORD PTR [rip+0xbafa],0x0        # 412630 <__bss_start@@Base+0x4a0>
  406b36:	mov    QWORD PTR [rip+0xbae7],0x0        # 412628 <__bss_start@@Base+0x498>
  406b41:	mov    QWORD PTR [rip+0xbad4],0x0        # 412620 <__bss_start@@Base+0x490>
  406b4c:	mov    QWORD PTR [rip+0xbac1],0x0        # 412618 <__bss_start@@Base+0x488>
  406b57:	mov    QWORD PTR [rip+0xbaae],0x0        # 412610 <__bss_start@@Base+0x480>
  406b62:	mov    QWORD PTR [rip+0xba9b],0x0        # 412608 <__bss_start@@Base+0x478>
  406b6d:	mov    QWORD PTR [rip+0xba88],0x0        # 412600 <__bss_start@@Base+0x470>
  406b78:	mov    QWORD PTR [rip+0xba75],0x0        # 4125f8 <__bss_start@@Base+0x468>
  406b83:	mov    QWORD PTR [rip+0xba62],0x0        # 4125f0 <__bss_start@@Base+0x460>
  406b8e:	mov    QWORD PTR [rip+0xba4f],0x0        # 4125e8 <__bss_start@@Base+0x458>
  406b99:	mov    QWORD PTR [rip+0xba3c],0x0        # 4125e0 <__bss_start@@Base+0x450>
  406ba4:	mov    QWORD PTR [rip+0xba29],0x0        # 4125d8 <__bss_start@@Base+0x448>
  406baf:	mov    QWORD PTR [rip+0xba16],0x0        # 4125d0 <__bss_start@@Base+0x440>
  406bba:	mov    QWORD PTR [rip+0xba03],0x0        # 4125c8 <__bss_start@@Base+0x438>
  406bc5:	mov    QWORD PTR [rip+0xb9f0],0x0        # 4125c0 <__bss_start@@Base+0x430>
  406bd0:	mov    QWORD PTR [rip+0xb9dd],0x0        # 4125b8 <__bss_start@@Base+0x428>
  406bdb:	mov    QWORD PTR [rip+0xb9ca],0x0        # 4125b0 <__bss_start@@Base+0x420>
  406be6:	mov    QWORD PTR [rip+0xb9b7],0x0        # 4125a8 <__bss_start@@Base+0x418>
  406bf1:	mov    QWORD PTR [rip+0xb9a4],0x0        # 4125a0 <__bss_start@@Base+0x410>
  406bfc:	mov    QWORD PTR [rip+0xb991],0x0        # 412598 <__bss_start@@Base+0x408>
  406c07:	mov    QWORD PTR [rip+0xb97e],0x0        # 412590 <__bss_start@@Base+0x400>
  406c12:	mov    QWORD PTR [rip+0xb96b],0x0        # 412588 <__bss_start@@Base+0x3f8>
  406c1d:	mov    QWORD PTR [rip+0xb958],0x0        # 412580 <__bss_start@@Base+0x3f0>
  406c28:	mov    QWORD PTR [rip+0xb945],0x0        # 412578 <__bss_start@@Base+0x3e8>
  406c33:	mov    QWORD PTR [rip+0xb932],0x0        # 412570 <__bss_start@@Base+0x3e0>
  406c3e:	mov    QWORD PTR [rip+0xb91f],0x0        # 412568 <__bss_start@@Base+0x3d8>
  406c49:	mov    QWORD PTR [rip+0xb90c],0x0        # 412560 <__bss_start@@Base+0x3d0>
  406c54:	mov    QWORD PTR [rip+0xb8f9],0x0        # 412558 <__bss_start@@Base+0x3c8>
  406c5f:	mov    QWORD PTR [rip+0xb8e6],0x0        # 412550 <__bss_start@@Base+0x3c0>
  406c6a:	mov    QWORD PTR [rip+0xb8d3],0x0        # 412548 <__bss_start@@Base+0x3b8>
  406c75:	mov    QWORD PTR [rip+0xb8c0],0x0        # 412540 <__bss_start@@Base+0x3b0>
  406c80:	mov    QWORD PTR [rip+0xb8ad],0x0        # 412538 <__bss_start@@Base+0x3a8>
  406c8b:	mov    QWORD PTR [rip+0xb89a],0x0        # 412530 <__bss_start@@Base+0x3a0>
  406c96:	mov    QWORD PTR [rip+0xb887],0x0        # 412528 <__bss_start@@Base+0x398>
  406ca1:	mov    QWORD PTR [rip+0xb874],0x0        # 412520 <__bss_start@@Base+0x390>
  406cac:	mov    QWORD PTR [rip+0xb861],0x0        # 412518 <__bss_start@@Base+0x388>
  406cb7:	mov    QWORD PTR [rip+0xb84e],0x0        # 412510 <__bss_start@@Base+0x380>
  406cc2:	mov    QWORD PTR [rip+0xbc3b],0x0        # 412908 <__bss_start@@Base+0x778>
  406ccd:	mov    QWORD PTR [rip+0xbc28],0x0        # 412900 <__bss_start@@Base+0x770>
  406cd8:	mov    QWORD PTR [rip+0xbc15],0x0        # 4128f8 <__bss_start@@Base+0x768>
  406ce3:	mov    QWORD PTR [rip+0xbc02],0x0        # 4128f0 <__bss_start@@Base+0x760>
  406cee:	mov    QWORD PTR [rip+0xbbef],0x0        # 4128e8 <__bss_start@@Base+0x758>
  406cf9:	mov    QWORD PTR [rip+0xbbdc],0x0        # 4128e0 <__bss_start@@Base+0x750>
  406d04:	mov    QWORD PTR [rip+0xbbc9],0x0        # 4128d8 <__bss_start@@Base+0x748>
  406d0f:	mov    QWORD PTR [rip+0xbbb6],0x0        # 4128d0 <__bss_start@@Base+0x740>
  406d1a:	mov    QWORD PTR [rip+0xbba3],0x0        # 4128c8 <__bss_start@@Base+0x738>
  406d25:	mov    QWORD PTR [rip+0xbb90],0x0        # 4128c0 <__bss_start@@Base+0x730>
  406d30:	mov    QWORD PTR [rip+0xbb7d],0x0        # 4128b8 <__bss_start@@Base+0x728>
  406d3b:	mov    QWORD PTR [rip+0xbb6a],0x0        # 4128b0 <__bss_start@@Base+0x720>
  406d46:	mov    QWORD PTR [rip+0xbb57],0x0        # 4128a8 <__bss_start@@Base+0x718>
  406d51:	mov    QWORD PTR [rip+0xbb44],0x0        # 4128a0 <__bss_start@@Base+0x710>
  406d5c:	mov    QWORD PTR [rip+0xbb31],0x0        # 412898 <__bss_start@@Base+0x708>
  406d67:	mov    QWORD PTR [rip+0xbb1e],0x0        # 412890 <__bss_start@@Base+0x700>
  406d72:	mov    QWORD PTR [rip+0xbb0b],0x0        # 412888 <__bss_start@@Base+0x6f8>
  406d7d:	mov    QWORD PTR [rip+0xbaf8],0x0        # 412880 <__bss_start@@Base+0x6f0>
  406d88:	mov    QWORD PTR [rip+0xbae5],0x0        # 412878 <__bss_start@@Base+0x6e8>
  406d93:	mov    QWORD PTR [rip+0xbad2],0x0        # 412870 <__bss_start@@Base+0x6e0>
  406d9e:	mov    QWORD PTR [rip+0xbabf],0x0        # 412868 <__bss_start@@Base+0x6d8>
  406da9:	mov    QWORD PTR [rip+0xbaac],0x0        # 412860 <__bss_start@@Base+0x6d0>
  406db4:	mov    QWORD PTR [rip+0xba99],0x0        # 412858 <__bss_start@@Base+0x6c8>
  406dbf:	mov    QWORD PTR [rip+0xba86],0x0        # 412850 <__bss_start@@Base+0x6c0>
  406dca:	mov    QWORD PTR [rip+0xba73],0x0        # 412848 <__bss_start@@Base+0x6b8>
  406dd5:	mov    QWORD PTR [rip+0xba60],0x0        # 412840 <__bss_start@@Base+0x6b0>
  406de0:	mov    QWORD PTR [rip+0xba4d],0x0        # 412838 <__bss_start@@Base+0x6a8>
  406deb:	mov    QWORD PTR [rip+0xba3a],0x0        # 412830 <__bss_start@@Base+0x6a0>
  406df6:	mov    QWORD PTR [rip+0xba27],0x0        # 412828 <__bss_start@@Base+0x698>
  406e01:	mov    QWORD PTR [rip+0xba14],0x0        # 412820 <__bss_start@@Base+0x690>
  406e0c:	mov    QWORD PTR [rip+0xba01],0x0        # 412818 <__bss_start@@Base+0x688>
  406e17:	mov    QWORD PTR [rip+0xb9ee],0x0        # 412810 <__bss_start@@Base+0x680>
  406e22:	mov    QWORD PTR [rip+0xb9db],0x0        # 412808 <__bss_start@@Base+0x678>
  406e2d:	mov    QWORD PTR [rip+0xb9c8],0x0        # 412800 <__bss_start@@Base+0x670>
  406e38:	mov    QWORD PTR [rip+0xb9b5],0x0        # 4127f8 <__bss_start@@Base+0x668>
  406e43:	mov    QWORD PTR [rip+0xb9a2],0x0        # 4127f0 <__bss_start@@Base+0x660>
  406e4e:	mov    QWORD PTR [rip+0xb98f],0x0        # 4127e8 <__bss_start@@Base+0x658>
  406e59:	mov    QWORD PTR [rip+0xb97c],0x0        # 4127e0 <__bss_start@@Base+0x650>
  406e64:	mov    QWORD PTR [rip+0xb969],0x0        # 4127d8 <__bss_start@@Base+0x648>
  406e6f:	mov    QWORD PTR [rip+0xb956],0x0        # 4127d0 <__bss_start@@Base+0x640>
  406e7a:	mov    QWORD PTR [rip+0xb943],0x0        # 4127c8 <__bss_start@@Base+0x638>
  406e85:	mov    QWORD PTR [rip+0xb930],0x0        # 4127c0 <__bss_start@@Base+0x630>
  406e90:	mov    QWORD PTR [rip+0xb91d],0x0        # 4127b8 <__bss_start@@Base+0x628>
  406e9b:	mov    QWORD PTR [rip+0xb90a],0x0        # 4127b0 <__bss_start@@Base+0x620>
  406ea6:	mov    QWORD PTR [rip+0xb8f7],0x0        # 4127a8 <__bss_start@@Base+0x618>
  406eb1:	mov    QWORD PTR [rip+0xb8e4],0x0        # 4127a0 <__bss_start@@Base+0x610>
  406ebc:	mov    QWORD PTR [rip+0xb8d1],0x0        # 412798 <__bss_start@@Base+0x608>
  406ec7:	mov    QWORD PTR [rip+0xb8be],0x0        # 412790 <__bss_start@@Base+0x600>
  406ed2:	mov    QWORD PTR [rip+0xb8ab],0x0        # 412788 <__bss_start@@Base+0x5f8>
  406edd:	mov    QWORD PTR [rip+0xb898],0x0        # 412780 <__bss_start@@Base+0x5f0>
  406ee8:	mov    QWORD PTR [rip+0xb885],0x0        # 412778 <__bss_start@@Base+0x5e8>
  406ef3:	mov    QWORD PTR [rip+0xb872],0x0        # 412770 <__bss_start@@Base+0x5e0>
  406efe:	mov    QWORD PTR [rip+0xb85f],0x0        # 412768 <__bss_start@@Base+0x5d8>
  406f09:	mov    QWORD PTR [rip+0xb84c],0x0        # 412760 <__bss_start@@Base+0x5d0>
  406f14:	mov    QWORD PTR [rip+0xb839],0x0        # 412758 <__bss_start@@Base+0x5c8>
  406f1f:	mov    QWORD PTR [rip+0xb826],0x0        # 412750 <__bss_start@@Base+0x5c0>
  406f2a:	mov    QWORD PTR [rip+0xb813],0x0        # 412748 <__bss_start@@Base+0x5b8>
  406f35:	mov    QWORD PTR [rip+0xb800],0x0        # 412740 <__bss_start@@Base+0x5b0>
  406f40:	mov    QWORD PTR [rip+0xb7ed],0x0        # 412738 <__bss_start@@Base+0x5a8>
  406f4b:	mov    QWORD PTR [rip+0xb7da],0x0        # 412730 <__bss_start@@Base+0x5a0>
  406f56:	mov    QWORD PTR [rip+0xb7c7],0x0        # 412728 <__bss_start@@Base+0x598>
  406f61:	mov    QWORD PTR [rip+0xb7b4],0x0        # 412720 <__bss_start@@Base+0x590>
  406f6c:	mov    QWORD PTR [rip+0xb7a1],0x0        # 412718 <__bss_start@@Base+0x588>
  406f77:	mov    QWORD PTR [rip+0xb78e],0x0        # 412710 <__bss_start@@Base+0x580>
  406f82:	mov    QWORD PTR [rip+0xb9eb],0x0        # 412978 <__bss_start@@Base+0x7e8>
  406f8d:	mov    QWORD PTR [rip+0xb9d8],0x0        # 412970 <__bss_start@@Base+0x7e0>
  406f98:	mov    QWORD PTR [rip+0xb9c5],0x0        # 412968 <__bss_start@@Base+0x7d8>
  406fa3:	mov    QWORD PTR [rip+0xb9b2],0x0        # 412960 <__bss_start@@Base+0x7d0>
  406fae:	mov    QWORD PTR [rip+0xb99f],0x0        # 412958 <__bss_start@@Base+0x7c8>
  406fb9:	mov    QWORD PTR [rip+0xb98c],0x0        # 412950 <__bss_start@@Base+0x7c0>
  406fc4:	mov    QWORD PTR [rip+0xb979],0x0        # 412948 <__bss_start@@Base+0x7b8>
  406fcf:	mov    QWORD PTR [rip+0xb966],0x0        # 412940 <__bss_start@@Base+0x7b0>
  406fda:	mov    QWORD PTR [rip+0xb953],0x0        # 412938 <__bss_start@@Base+0x7a8>
  406fe5:	mov    QWORD PTR [rip+0xb940],0x0        # 412930 <__bss_start@@Base+0x7a0>
  406ff0:	mov    QWORD PTR [rip+0xb92d],0x0        # 412928 <__bss_start@@Base+0x798>
  406ffb:	mov    QWORD PTR [rip+0xb91a],0x0        # 412920 <__bss_start@@Base+0x790>
  407006:	mov    QWORD PTR [rip+0xb907],0x0        # 412918 <__bss_start@@Base+0x788>
  407011:	mov    QWORD PTR [rip+0xb8f4],0x0        # 412910 <__bss_start@@Base+0x780>
  40701c:	pop    rax
  40701d:	ret    
  40701e:	xchg   ax,ax
  407020:	push   rax
  407021:	lea    rdi,[rip+0xfffffffffffff7f8]        # 406820 <next@@Base+0x1c80>
  407028:	lea    rsi,[rip+0xfffffffffffff8f1]        # 406920 <next@@Base+0x1d80>
  40702f:	call   40c9e0 <__gcov_flush@@Base+0xa0>
  407034:	pop    rax
  407035:	ret    
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407040 <init_ast_base@@Base>:
  407040:	push   rbp
  407041:	mov    rbp,rsp
  407044:	mov    rax,QWORD PTR [rip+0xb935]        # 412980 <__bss_start@@Base+0x7f0>
  40704b:	add    rax,0x1
  40704f:	mov    QWORD PTR [rip+0xb92a],rax        # 412980 <__bss_start@@Base+0x7f0>
  407056:	mov    DWORD PTR [rbp-0x1c],esi
  407059:	mov    QWORD PTR [rbp-0x28],rdi
  40705d:	mov    QWORD PTR [rbp-0x30],rdx
  407061:	mov    rax,QWORD PTR [rip+0xb920]        # 412988 <__bss_start@@Base+0x7f8>
  407068:	add    rax,0x1
  40706c:	mov    QWORD PTR [rip+0xb915],rax        # 412988 <__bss_start@@Base+0x7f8>
  407073:	mov    rax,QWORD PTR [rbp-0x28]
  407077:	mov    QWORD PTR [rbp-0x8],rax
  40707b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40707e:	mov    DWORD PTR [rbp-0xc],ecx
  407081:	mov    rdx,QWORD PTR [rbp-0x30]
  407085:	mov    QWORD PTR [rbp-0x18],rdx
  407089:	mov    esi,DWORD PTR [rbp-0xc]
  40708c:	mov    rdi,QWORD PTR [rbp-0x8]
  407090:	mov    DWORD PTR [rdi],esi
  407092:	mov    rdi,QWORD PTR [rbp-0x18]
  407096:	mov    r8,QWORD PTR [rbp-0x8]
  40709a:	mov    QWORD PTR [r8+0x8],rdi
  40709e:	pop    rbp
  40709f:	ret    

00000000004070a0 <init_ast_base_single@@Base>:
  4070a0:	push   rbp
  4070a1:	mov    rbp,rsp
  4070a4:	sub    rsp,0x20
  4070a8:	mov    rax,QWORD PTR [rip+0xb8e1]        # 412990 <__bss_start@@Base+0x800>
  4070af:	add    rax,0x1
  4070b3:	mov    QWORD PTR [rip+0xb8d6],rax        # 412990 <__bss_start@@Base+0x800>
  4070ba:	mov    QWORD PTR [rbp-0x18],rdi
  4070be:	mov    DWORD PTR [rbp-0x1c],esi
  4070c1:	xor    eax,eax
  4070c3:	mov    edx,eax
  4070c5:	mov    rcx,QWORD PTR [rip+0xb8cc]        # 412998 <__bss_start@@Base+0x808>
  4070cc:	add    rcx,0x1
  4070d0:	mov    QWORD PTR [rip+0xb8c1],rcx        # 412998 <__bss_start@@Base+0x808>
  4070d7:	mov    rcx,QWORD PTR [rbp-0x18]
  4070db:	mov    QWORD PTR [rbp-0x8],rcx
  4070df:	mov    eax,DWORD PTR [rbp-0x1c]
  4070e2:	mov    DWORD PTR [rbp-0xc],eax
  4070e5:	mov    rdi,QWORD PTR [rbp-0x8]
  4070e9:	mov    esi,DWORD PTR [rbp-0xc]
  4070ec:	call   407040 <init_ast_base@@Base>
  4070f1:	add    rsp,0x20
  4070f5:	pop    rbp
  4070f6:	ret    
  4070f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407100 <init_node_id@@Base>:
  407100:	push   rbp
  407101:	mov    rbp,rsp
  407104:	sub    rsp,0x20
  407108:	mov    rax,QWORD PTR [rip+0xb891]        # 4129a0 <__bss_start@@Base+0x810>
  40710f:	add    rax,0x1
  407113:	mov    QWORD PTR [rip+0xb886],rax        # 4129a0 <__bss_start@@Base+0x810>
  40711a:	mov    QWORD PTR [rbp-0x18],rdi
  40711e:	mov    QWORD PTR [rbp-0x20],rsi
  407122:	xor    esi,esi
  407124:	mov    rax,QWORD PTR [rip+0xb87d]        # 4129a8 <__bss_start@@Base+0x818>
  40712b:	add    rax,0x1
  40712f:	mov    QWORD PTR [rip+0xb872],rax        # 4129a8 <__bss_start@@Base+0x818>
  407136:	mov    rax,QWORD PTR [rbp-0x18]
  40713a:	mov    QWORD PTR [rbp-0x8],rax
  40713e:	mov    rcx,QWORD PTR [rbp-0x20]
  407142:	mov    QWORD PTR [rbp-0x10],rcx
  407146:	mov    rdi,QWORD PTR [rbp-0x8]
  40714a:	call   4070a0 <init_ast_base_single@@Base>
  40714f:	mov    rax,QWORD PTR [rbp-0x10]
  407153:	mov    rcx,QWORD PTR [rbp-0x8]
  407157:	mov    QWORD PTR [rcx+0x10],rax
  40715b:	add    rsp,0x20
  40715f:	pop    rbp
  407160:	ret    
  407161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40716b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407170 <init_node_int@@Base>:
  407170:	push   rbp
  407171:	mov    rbp,rsp
  407174:	sub    rsp,0x20
  407178:	mov    rax,QWORD PTR [rip+0xb831]        # 4129b0 <__bss_start@@Base+0x820>
  40717f:	add    rax,0x1
  407183:	mov    QWORD PTR [rip+0xb826],rax        # 4129b0 <__bss_start@@Base+0x820>
  40718a:	mov    QWORD PTR [rbp-0x18],rdi
  40718e:	mov    DWORD PTR [rbp-0x1c],esi
  407191:	mov    rax,QWORD PTR [rip+0xb820]        # 4129b8 <__bss_start@@Base+0x828>
  407198:	add    rax,0x1
  40719c:	mov    QWORD PTR [rip+0xb815],rax        # 4129b8 <__bss_start@@Base+0x828>
  4071a3:	mov    rax,QWORD PTR [rbp-0x18]
  4071a7:	mov    QWORD PTR [rbp-0x8],rax
  4071ab:	mov    ecx,DWORD PTR [rbp-0x1c]
  4071ae:	mov    DWORD PTR [rbp-0xc],ecx
  4071b1:	mov    rdi,QWORD PTR [rbp-0x8]
  4071b5:	mov    esi,0x1
  4071ba:	call   4070a0 <init_ast_base_single@@Base>
  4071bf:	mov    ecx,DWORD PTR [rbp-0xc]
  4071c2:	mov    rax,QWORD PTR [rbp-0x8]
  4071c6:	mov    DWORD PTR [rax+0x10],ecx
  4071c9:	add    rsp,0x20
  4071cd:	pop    rbp
  4071ce:	ret    
  4071cf:	nop

00000000004071d0 <init_node_function@@Base>:
  4071d0:	push   rbp
  4071d1:	mov    rbp,rsp
  4071d4:	sub    rsp,0x30
  4071d8:	mov    rax,QWORD PTR [rip+0xb7e1]        # 4129c0 <__bss_start@@Base+0x830>
  4071df:	add    rax,0x1
  4071e3:	mov    QWORD PTR [rip+0xb7d6],rax        # 4129c0 <__bss_start@@Base+0x830>
  4071ea:	mov    QWORD PTR [rbp-0x20],rsi
  4071ee:	mov    QWORD PTR [rbp-0x28],rdi
  4071f2:	mov    QWORD PTR [rbp-0x30],rdx
  4071f6:	mov    rax,QWORD PTR [rip+0xb7cb]        # 4129c8 <__bss_start@@Base+0x838>
  4071fd:	add    rax,0x1
  407201:	mov    QWORD PTR [rip+0xb7c0],rax        # 4129c8 <__bss_start@@Base+0x838>
  407208:	mov    rax,QWORD PTR [rbp-0x28]
  40720c:	mov    QWORD PTR [rbp-0x8],rax
  407210:	mov    rcx,QWORD PTR [rbp-0x20]
  407214:	mov    QWORD PTR [rbp-0x10],rcx
  407218:	mov    rdx,QWORD PTR [rbp-0x30]
  40721c:	mov    QWORD PTR [rbp-0x18],rdx
  407220:	mov    rdi,QWORD PTR [rbp-0x8]
  407224:	mov    esi,0x2
  407229:	call   4070a0 <init_ast_base_single@@Base>
  40722e:	mov    rax,QWORD PTR [rbp-0x10]
  407232:	mov    rcx,QWORD PTR [rbp-0x8]
  407236:	mov    QWORD PTR [rcx+0x10],rax
  40723a:	mov    rax,QWORD PTR [rbp-0x18]
  40723e:	mov    rcx,QWORD PTR [rbp-0x8]
  407242:	mov    QWORD PTR [rcx+0x18],rax
  407246:	add    rsp,0x30
  40724a:	pop    rbp
  40724b:	ret    
  40724c:	nop    DWORD PTR [rax+0x0]

0000000000407250 <init_node_return@@Base>:
  407250:	push   rbp
  407251:	mov    rbp,rsp
  407254:	sub    rsp,0x20
  407258:	mov    rax,QWORD PTR [rip+0xb771]        # 4129d0 <__bss_start@@Base+0x840>
  40725f:	add    rax,0x1
  407263:	mov    QWORD PTR [rip+0xb766],rax        # 4129d0 <__bss_start@@Base+0x840>
  40726a:	mov    QWORD PTR [rbp-0x18],rdi
  40726e:	mov    QWORD PTR [rbp-0x20],rsi
  407272:	mov    rax,QWORD PTR [rip+0xb75f]        # 4129d8 <__bss_start@@Base+0x848>
  407279:	add    rax,0x1
  40727d:	mov    QWORD PTR [rip+0xb754],rax        # 4129d8 <__bss_start@@Base+0x848>
  407284:	mov    rax,QWORD PTR [rbp-0x18]
  407288:	mov    QWORD PTR [rbp-0x8],rax
  40728c:	mov    rcx,QWORD PTR [rbp-0x20]
  407290:	mov    QWORD PTR [rbp-0x10],rcx
  407294:	mov    rdi,QWORD PTR [rbp-0x8]
  407298:	mov    esi,0x3
  40729d:	call   4070a0 <init_ast_base_single@@Base>
  4072a2:	mov    rax,QWORD PTR [rbp-0x10]
  4072a6:	mov    rcx,QWORD PTR [rbp-0x8]
  4072aa:	mov    QWORD PTR [rcx+0x10],rax
  4072ae:	add    rsp,0x20
  4072b2:	pop    rbp
  4072b3:	ret    
  4072b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072be:	xchg   ax,ax

00000000004072c0 <init_node_if@@Base>:
  4072c0:	push   rbp
  4072c1:	mov    rbp,rsp
  4072c4:	sub    rsp,0x40
  4072c8:	mov    rax,QWORD PTR [rip+0xb711]        # 4129e0 <__bss_start@@Base+0x850>
  4072cf:	add    rax,0x1
  4072d3:	mov    QWORD PTR [rip+0xb706],rax        # 4129e0 <__bss_start@@Base+0x850>
  4072da:	mov    QWORD PTR [rbp-0x28],rdx
  4072de:	mov    QWORD PTR [rbp-0x30],rsi
  4072e2:	mov    QWORD PTR [rbp-0x38],rdi
  4072e6:	mov    QWORD PTR [rbp-0x40],rcx
  4072ea:	mov    rax,QWORD PTR [rip+0xb6f7]        # 4129e8 <__bss_start@@Base+0x858>
  4072f1:	add    rax,0x1
  4072f5:	mov    QWORD PTR [rip+0xb6ec],rax        # 4129e8 <__bss_start@@Base+0x858>
  4072fc:	mov    rax,QWORD PTR [rbp-0x38]
  407300:	mov    QWORD PTR [rbp-0x8],rax
  407304:	mov    rcx,QWORD PTR [rbp-0x30]
  407308:	mov    QWORD PTR [rbp-0x10],rcx
  40730c:	mov    rdx,QWORD PTR [rbp-0x28]
  407310:	mov    QWORD PTR [rbp-0x18],rdx
  407314:	mov    rsi,QWORD PTR [rbp-0x40]
  407318:	mov    QWORD PTR [rbp-0x20],rsi
  40731c:	mov    rdi,QWORD PTR [rbp-0x8]
  407320:	mov    esi,0x4
  407325:	call   4070a0 <init_ast_base_single@@Base>
  40732a:	mov    rax,QWORD PTR [rbp-0x10]
  40732e:	mov    rcx,QWORD PTR [rbp-0x8]
  407332:	mov    QWORD PTR [rcx+0x10],rax
  407336:	mov    rax,QWORD PTR [rbp-0x18]
  40733a:	mov    rcx,QWORD PTR [rbp-0x8]
  40733e:	mov    QWORD PTR [rcx+0x18],rax
  407342:	mov    rax,QWORD PTR [rbp-0x20]
  407346:	mov    rcx,QWORD PTR [rbp-0x8]
  40734a:	mov    QWORD PTR [rcx+0x20],rax
  40734e:	add    rsp,0x40
  407352:	pop    rbp
  407353:	ret    
  407354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40735e:	xchg   ax,ax

0000000000407360 <init_node_boolean_operator@@Base>:
  407360:	push   rbp
  407361:	mov    rbp,rsp
  407364:	sub    rsp,0x40
  407368:	mov    rax,QWORD PTR [rip+0xb681]        # 4129f0 <__bss_start@@Base+0x860>
  40736f:	add    rax,0x1
  407373:	mov    QWORD PTR [rip+0xb676],rax        # 4129f0 <__bss_start@@Base+0x860>
  40737a:	mov    QWORD PTR [rbp-0x28],rdx
  40737e:	mov    DWORD PTR [rbp-0x2c],esi
  407381:	mov    QWORD PTR [rbp-0x38],rdi
  407385:	mov    QWORD PTR [rbp-0x40],rcx
  407389:	xor    esi,esi
  40738b:	mov    rax,QWORD PTR [rip+0xb666]        # 4129f8 <__bss_start@@Base+0x868>
  407392:	add    rax,0x1
  407396:	mov    QWORD PTR [rip+0xb65b],rax        # 4129f8 <__bss_start@@Base+0x868>
  40739d:	mov    rax,QWORD PTR [rbp-0x38]
  4073a1:	mov    QWORD PTR [rbp-0x8],rax
  4073a5:	mov    ecx,DWORD PTR [rbp-0x2c]
  4073a8:	mov    DWORD PTR [rbp-0xc],ecx
  4073ab:	mov    rdx,QWORD PTR [rbp-0x28]
  4073af:	mov    QWORD PTR [rbp-0x18],rdx
  4073b3:	mov    rdi,QWORD PTR [rbp-0x40]
  4073b7:	mov    QWORD PTR [rbp-0x20],rdi
  4073bb:	mov    rdi,QWORD PTR [rbp-0x8]
  4073bf:	call   4070a0 <init_ast_base_single@@Base>
  4073c4:	mov    rax,QWORD PTR [rbp-0x8]
  4073c8:	mov    DWORD PTR [rax],0x5
  4073ce:	mov    ecx,DWORD PTR [rbp-0xc]
  4073d1:	mov    rax,QWORD PTR [rbp-0x8]
  4073d5:	mov    DWORD PTR [rax+0x20],ecx
  4073d8:	mov    rax,QWORD PTR [rbp-0x18]
  4073dc:	mov    rdx,QWORD PTR [rbp-0x8]
  4073e0:	mov    QWORD PTR [rdx+0x10],rax
  4073e4:	mov    rax,QWORD PTR [rbp-0x20]
  4073e8:	mov    rdx,QWORD PTR [rbp-0x8]
  4073ec:	mov    QWORD PTR [rdx+0x18],rax
  4073f0:	add    rsp,0x40
  4073f4:	pop    rbp
  4073f5:	ret    
  4073f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407400 <free_node@@Base>:
  407400:	push   rbp
  407401:	mov    rbp,rsp
  407404:	sub    rsp,0x30
  407408:	mov    rax,QWORD PTR [rip+0xb5f1]        # 412a00 <__bss_start@@Base+0x870>
  40740f:	add    rax,0x1
  407413:	mov    QWORD PTR [rip+0xb5e6],rax        # 412a00 <__bss_start@@Base+0x870>
  40741a:	mov    QWORD PTR [rbp-0x10],rdi
  40741e:	mov    DWORD PTR [rip+0xad38],0x0        # 412160 <__data_start@@Base+0x18>
  407428:	mov    rax,QWORD PTR [rbp-0x10]
  40742c:	mov    QWORD PTR [rbp-0x8],rax
  407430:	mov    rcx,QWORD PTR [rbp-0x8]
  407434:	mov    edx,DWORD PTR [rcx]
  407436:	mov    ecx,edx
  407438:	mov    rsi,rcx
  40743b:	sub    rsi,0x5
  40743f:	mov    QWORD PTR [rbp-0x18],rcx
  407443:	mov    QWORD PTR [rbp-0x20],rsi
  407447:	ja     4075cf <free_node@@Base+0x1cf>
  40744d:	lea    rax,[rip+0x60f0]        # 40d544 <_IO_stdin_used@@Base+0x544>
  407454:	mov    rcx,QWORD PTR [rbp-0x18]
  407458:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40745c:	add    rdx,rax
  40745f:	jmp    rdx
  407461:	lea    rax,[rip+0xa028]        # 411490 <_IO_stdin_used@@Base+0x4490>
  407468:	add    rax,0x8
  40746c:	lea    rdi,[rip+0xaced]        # 412160 <__data_start@@Base+0x18>
  407473:	mov    rsi,rax
  407476:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  40747b:	mov    rax,QWORD PTR [rip+0xb5be]        # 412a40 <__bss_start@@Base+0x8b0>
  407482:	add    rax,0x1
  407486:	mov    QWORD PTR [rip+0xb5b3],rax        # 412a40 <__bss_start@@Base+0x8b0>
  40748d:	mov    rax,QWORD PTR [rbp-0x8]
  407491:	mov    rdi,rax
  407494:	call   407620 <free_node_id@@Base>
  407499:	jmp    407607 <free_node@@Base+0x207>
  40749e:	lea    rax,[rip+0x9feb]        # 411490 <_IO_stdin_used@@Base+0x4490>
  4074a5:	add    rax,0x10
  4074a9:	lea    rdi,[rip+0xacb0]        # 412160 <__data_start@@Base+0x18>
  4074b0:	mov    rsi,rax
  4074b3:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  4074b8:	mov    rax,QWORD PTR [rip+0xb589]        # 412a48 <__bss_start@@Base+0x8b8>
  4074bf:	add    rax,0x1
  4074c3:	mov    QWORD PTR [rip+0xb57e],rax        # 412a48 <__bss_start@@Base+0x8b8>
  4074ca:	mov    rax,QWORD PTR [rbp-0x8]
  4074ce:	mov    rdi,rax
  4074d1:	call   4076e0 <free_node_int@@Base>
  4074d6:	jmp    407607 <free_node@@Base+0x207>
  4074db:	lea    rax,[rip+0x9fae]        # 411490 <_IO_stdin_used@@Base+0x4490>
  4074e2:	add    rax,0x18
  4074e6:	lea    rdi,[rip+0xac73]        # 412160 <__data_start@@Base+0x18>
  4074ed:	mov    rsi,rax
  4074f0:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  4074f5:	mov    rax,QWORD PTR [rip+0xb554]        # 412a50 <__bss_start@@Base+0x8c0>
  4074fc:	add    rax,0x1
  407500:	mov    QWORD PTR [rip+0xb549],rax        # 412a50 <__bss_start@@Base+0x8c0>
  407507:	mov    rax,QWORD PTR [rbp-0x8]
  40750b:	mov    rdi,rax
  40750e:	call   4077a0 <free_node_function@@Base>
  407513:	jmp    407607 <free_node@@Base+0x207>
  407518:	lea    rax,[rip+0x9f71]        # 411490 <_IO_stdin_used@@Base+0x4490>
  40751f:	add    rax,0x20
  407523:	lea    rdi,[rip+0xac36]        # 412160 <__data_start@@Base+0x18>
  40752a:	mov    rsi,rax
  40752d:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  407532:	mov    rax,QWORD PTR [rip+0xb51f]        # 412a58 <__bss_start@@Base+0x8c8>
  407539:	add    rax,0x1
  40753d:	mov    QWORD PTR [rip+0xb514],rax        # 412a58 <__bss_start@@Base+0x8c8>
  407544:	mov    rax,QWORD PTR [rbp-0x8]
  407548:	mov    rdi,rax
  40754b:	call   407860 <free_node_return@@Base>
  407550:	jmp    407607 <free_node@@Base+0x207>
  407555:	lea    rax,[rip+0x9f34]        # 411490 <_IO_stdin_used@@Base+0x4490>
  40755c:	add    rax,0x28
  407560:	lea    rdi,[rip+0xabf9]        # 412160 <__data_start@@Base+0x18>
  407567:	mov    rsi,rax
  40756a:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  40756f:	mov    rax,QWORD PTR [rip+0xb4ea]        # 412a60 <__bss_start@@Base+0x8d0>
  407576:	add    rax,0x1
  40757a:	mov    QWORD PTR [rip+0xb4df],rax        # 412a60 <__bss_start@@Base+0x8d0>
  407581:	mov    rax,QWORD PTR [rbp-0x8]
  407585:	mov    rdi,rax
  407588:	call   407920 <free_node_if@@Base>
  40758d:	jmp    407607 <free_node@@Base+0x207>
  407592:	lea    rax,[rip+0x9ef7]        # 411490 <_IO_stdin_used@@Base+0x4490>
  407599:	add    rax,0x30
  40759d:	lea    rdi,[rip+0xabbc]        # 412160 <__data_start@@Base+0x18>
  4075a4:	mov    rsi,rax
  4075a7:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  4075ac:	mov    rax,QWORD PTR [rip+0xb4b5]        # 412a68 <__bss_start@@Base+0x8d8>
  4075b3:	add    rax,0x1
  4075b7:	mov    QWORD PTR [rip+0xb4aa],rax        # 412a68 <__bss_start@@Base+0x8d8>
  4075be:	mov    rax,QWORD PTR [rbp-0x8]
  4075c2:	mov    rdi,rax
  4075c5:	call   407a00 <free_node_boolean_operator@@Base>
  4075ca:	jmp    407607 <free_node@@Base+0x207>
  4075cf:	lea    rdi,[rip+0xab8a]        # 412160 <__data_start@@Base+0x18>
  4075d6:	lea    rsi,[rip+0x9eb3]        # 411490 <_IO_stdin_used@@Base+0x4490>
  4075dd:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  4075e2:	mov    rsi,QWORD PTR [rip+0xaa07]        # 411ff0 <stderr@GLIBC_2.2.5>
  4075e9:	mov    rdi,QWORD PTR [rsi]
  4075ec:	lea    rsi,[rip+0x5f69]        # 40d55c <_IO_stdin_used@@Base+0x55c>
  4075f3:	mov    al,0x0
  4075f5:	call   403150 <fprintf@plt>
  4075fa:	mov    edi,0x1
  4075ff:	mov    DWORD PTR [rbp-0x24],eax
  407602:	call   403250 <exit@plt>
  407607:	mov    rax,QWORD PTR [rip+0xb462]        # 412a70 <__bss_start@@Base+0x8e0>
  40760e:	add    rax,0x1
  407612:	mov    QWORD PTR [rip+0xb457],rax        # 412a70 <__bss_start@@Base+0x8e0>
  407619:	add    rsp,0x30
  40761d:	pop    rbp
  40761e:	ret    
  40761f:	nop

0000000000407620 <free_node_id@@Base>:
  407620:	push   rbp
  407621:	mov    rbp,rsp
  407624:	sub    rsp,0x10
  407628:	mov    rax,QWORD PTR [rip+0xb451]        # 412a80 <__bss_start@@Base+0x8f0>
  40762f:	add    rax,0x1
  407633:	mov    QWORD PTR [rip+0xb446],rax        # 412a80 <__bss_start@@Base+0x8f0>
  40763a:	mov    QWORD PTR [rbp-0x10],rdi
  40763e:	mov    eax,0x2
  407643:	mov    ecx,eax
  407645:	mov    eax,0x1
  40764a:	mov    edx,eax
  40764c:	mov    rsi,QWORD PTR [rbp-0x10]
  407650:	mov    QWORD PTR [rbp-0x8],rsi
  407654:	mov    rdi,QWORD PTR [rbp-0x8]
  407658:	mov    rdi,QWORD PTR [rdi+0x8]
  40765c:	cmp    rdi,0x0
  407660:	setne  r8b
  407664:	cmp    rdi,0x0
  407668:	cmovne rcx,rdx
  40766c:	lea    rdx,[rip+0xb40d]        # 412a80 <__bss_start@@Base+0x8f0>
  407673:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407677:	add    rdi,0x1
  40767b:	mov    QWORD PTR [rdx+rcx*8],rdi
  40767f:	test   r8b,0x1
  407683:	jne    40768e <free_node_id@@Base+0x6e>
  407689:	jmp    4076ad <free_node_id@@Base+0x8d>
  40768e:	mov    rax,QWORD PTR [rip+0xb403]        # 412a98 <__bss_start@@Base+0x908>
  407695:	add    rax,0x1
  407699:	mov    QWORD PTR [rip+0xb3f8],rax        # 412a98 <__bss_start@@Base+0x908>
  4076a0:	mov    rax,QWORD PTR [rbp-0x8]
  4076a4:	mov    rdi,QWORD PTR [rax+0x8]
  4076a8:	call   407400 <free_node@@Base>
  4076ad:	mov    rax,QWORD PTR [rip+0xb3ec]        # 412aa0 <__bss_start@@Base+0x910>
  4076b4:	add    rax,0x1
  4076b8:	mov    QWORD PTR [rip+0xb3e1],rax        # 412aa0 <__bss_start@@Base+0x910>
  4076bf:	mov    rax,QWORD PTR [rbp-0x8]
  4076c3:	mov    rdi,rax
  4076c6:	call   403040 <free@plt>
  4076cb:	add    rsp,0x10
  4076cf:	pop    rbp
  4076d0:	ret    
  4076d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004076e0 <free_node_int@@Base>:
  4076e0:	push   rbp
  4076e1:	mov    rbp,rsp
  4076e4:	sub    rsp,0x10
  4076e8:	mov    rax,QWORD PTR [rip+0xb3c1]        # 412ab0 <__bss_start@@Base+0x920>
  4076ef:	add    rax,0x1
  4076f3:	mov    QWORD PTR [rip+0xb3b6],rax        # 412ab0 <__bss_start@@Base+0x920>
  4076fa:	mov    QWORD PTR [rbp-0x10],rdi
  4076fe:	mov    eax,0x2
  407703:	mov    ecx,eax
  407705:	mov    eax,0x1
  40770a:	mov    edx,eax
  40770c:	mov    rsi,QWORD PTR [rbp-0x10]
  407710:	mov    QWORD PTR [rbp-0x8],rsi
  407714:	mov    rdi,QWORD PTR [rbp-0x8]
  407718:	mov    rdi,QWORD PTR [rdi+0x8]
  40771c:	cmp    rdi,0x0
  407720:	setne  r8b
  407724:	cmp    rdi,0x0
  407728:	cmovne rcx,rdx
  40772c:	lea    rdx,[rip+0xb37d]        # 412ab0 <__bss_start@@Base+0x920>
  407733:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407737:	add    rdi,0x1
  40773b:	mov    QWORD PTR [rdx+rcx*8],rdi
  40773f:	test   r8b,0x1
  407743:	jne    40774e <free_node_int@@Base+0x6e>
  407749:	jmp    40776d <free_node_int@@Base+0x8d>
  40774e:	mov    rax,QWORD PTR [rip+0xb373]        # 412ac8 <__bss_start@@Base+0x938>
  407755:	add    rax,0x1
  407759:	mov    QWORD PTR [rip+0xb368],rax        # 412ac8 <__bss_start@@Base+0x938>
  407760:	mov    rax,QWORD PTR [rbp-0x8]
  407764:	mov    rdi,QWORD PTR [rax+0x8]
  407768:	call   407400 <free_node@@Base>
  40776d:	mov    rax,QWORD PTR [rip+0xb35c]        # 412ad0 <__bss_start@@Base+0x940>
  407774:	add    rax,0x1
  407778:	mov    QWORD PTR [rip+0xb351],rax        # 412ad0 <__bss_start@@Base+0x940>
  40777f:	mov    rax,QWORD PTR [rbp-0x8]
  407783:	mov    rdi,rax
  407786:	call   403040 <free@plt>
  40778b:	add    rsp,0x10
  40778f:	pop    rbp
  407790:	ret    
  407791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40779b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004077a0 <free_node_function@@Base>:
  4077a0:	push   rbp
  4077a1:	mov    rbp,rsp
  4077a4:	sub    rsp,0x10
  4077a8:	mov    rax,QWORD PTR [rip+0xb331]        # 412ae0 <__bss_start@@Base+0x950>
  4077af:	add    rax,0x1
  4077b3:	mov    QWORD PTR [rip+0xb326],rax        # 412ae0 <__bss_start@@Base+0x950>
  4077ba:	mov    QWORD PTR [rbp-0x10],rdi
  4077be:	mov    eax,0x2
  4077c3:	mov    ecx,eax
  4077c5:	mov    eax,0x1
  4077ca:	mov    edx,eax
  4077cc:	mov    rsi,QWORD PTR [rbp-0x10]
  4077d0:	mov    QWORD PTR [rbp-0x8],rsi
  4077d4:	mov    rdi,QWORD PTR [rbp-0x8]
  4077d8:	mov    rdi,QWORD PTR [rdi+0x8]
  4077dc:	cmp    rdi,0x0
  4077e0:	setne  r8b
  4077e4:	cmp    rdi,0x0
  4077e8:	cmovne rcx,rdx
  4077ec:	lea    rdx,[rip+0xb2ed]        # 412ae0 <__bss_start@@Base+0x950>
  4077f3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4077f7:	add    rdi,0x1
  4077fb:	mov    QWORD PTR [rdx+rcx*8],rdi
  4077ff:	test   r8b,0x1
  407803:	jne    40780e <free_node_function@@Base+0x6e>
  407809:	jmp    40782d <free_node_function@@Base+0x8d>
  40780e:	mov    rax,QWORD PTR [rip+0xb2e3]        # 412af8 <__bss_start@@Base+0x968>
  407815:	add    rax,0x1
  407819:	mov    QWORD PTR [rip+0xb2d8],rax        # 412af8 <__bss_start@@Base+0x968>
  407820:	mov    rax,QWORD PTR [rbp-0x8]
  407824:	mov    rdi,QWORD PTR [rax+0x8]
  407828:	call   407400 <free_node@@Base>
  40782d:	mov    rax,QWORD PTR [rip+0xb2cc]        # 412b00 <__bss_start@@Base+0x970>
  407834:	add    rax,0x1
  407838:	mov    QWORD PTR [rip+0xb2c1],rax        # 412b00 <__bss_start@@Base+0x970>
  40783f:	mov    rax,QWORD PTR [rbp-0x8]
  407843:	mov    rdi,QWORD PTR [rax+0x10]
  407847:	call   403040 <free@plt>
  40784c:	mov    rax,QWORD PTR [rbp-0x8]
  407850:	mov    rdi,rax
  407853:	call   403040 <free@plt>
  407858:	add    rsp,0x10
  40785c:	pop    rbp
  40785d:	ret    
  40785e:	xchg   ax,ax

0000000000407860 <free_node_return@@Base>:
  407860:	push   rbp
  407861:	mov    rbp,rsp
  407864:	sub    rsp,0x10
  407868:	mov    rax,QWORD PTR [rip+0xb2a1]        # 412b10 <__bss_start@@Base+0x980>
  40786f:	add    rax,0x1
  407873:	mov    QWORD PTR [rip+0xb296],rax        # 412b10 <__bss_start@@Base+0x980>
  40787a:	mov    QWORD PTR [rbp-0x10],rdi
  40787e:	mov    eax,0x2
  407883:	mov    ecx,eax
  407885:	mov    eax,0x1
  40788a:	mov    edx,eax
  40788c:	mov    rsi,QWORD PTR [rbp-0x10]
  407890:	mov    QWORD PTR [rbp-0x8],rsi
  407894:	mov    rdi,QWORD PTR [rbp-0x8]
  407898:	mov    rdi,QWORD PTR [rdi+0x8]
  40789c:	cmp    rdi,0x0
  4078a0:	setne  r8b
  4078a4:	cmp    rdi,0x0
  4078a8:	cmovne rcx,rdx
  4078ac:	lea    rdx,[rip+0xb25d]        # 412b10 <__bss_start@@Base+0x980>
  4078b3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4078b7:	add    rdi,0x1
  4078bb:	mov    QWORD PTR [rdx+rcx*8],rdi
  4078bf:	test   r8b,0x1
  4078c3:	jne    4078ce <free_node_return@@Base+0x6e>
  4078c9:	jmp    4078ed <free_node_return@@Base+0x8d>
  4078ce:	mov    rax,QWORD PTR [rip+0xb253]        # 412b28 <__bss_start@@Base+0x998>
  4078d5:	add    rax,0x1
  4078d9:	mov    QWORD PTR [rip+0xb248],rax        # 412b28 <__bss_start@@Base+0x998>
  4078e0:	mov    rax,QWORD PTR [rbp-0x8]
  4078e4:	mov    rdi,QWORD PTR [rax+0x8]
  4078e8:	call   407400 <free_node@@Base>
  4078ed:	mov    rax,QWORD PTR [rip+0xb23c]        # 412b30 <__bss_start@@Base+0x9a0>
  4078f4:	add    rax,0x1
  4078f8:	mov    QWORD PTR [rip+0xb231],rax        # 412b30 <__bss_start@@Base+0x9a0>
  4078ff:	mov    rax,QWORD PTR [rbp-0x8]
  407903:	mov    rdi,rax
  407906:	call   403040 <free@plt>
  40790b:	add    rsp,0x10
  40790f:	pop    rbp
  407910:	ret    
  407911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40791b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407920 <free_node_if@@Base>:
  407920:	push   rbp
  407921:	mov    rbp,rsp
  407924:	sub    rsp,0x10
  407928:	mov    rax,QWORD PTR [rip+0xb211]        # 412b40 <__bss_start@@Base+0x9b0>
  40792f:	add    rax,0x1
  407933:	mov    QWORD PTR [rip+0xb206],rax        # 412b40 <__bss_start@@Base+0x9b0>
  40793a:	mov    QWORD PTR [rbp-0x10],rdi
  40793e:	mov    eax,0x2
  407943:	mov    ecx,eax
  407945:	mov    eax,0x1
  40794a:	mov    edx,eax
  40794c:	mov    rsi,QWORD PTR [rbp-0x10]
  407950:	mov    QWORD PTR [rbp-0x8],rsi
  407954:	mov    rdi,QWORD PTR [rbp-0x8]
  407958:	mov    rdi,QWORD PTR [rdi+0x8]
  40795c:	cmp    rdi,0x0
  407960:	setne  r8b
  407964:	cmp    rdi,0x0
  407968:	cmovne rcx,rdx
  40796c:	lea    rdx,[rip+0xb1cd]        # 412b40 <__bss_start@@Base+0x9b0>
  407973:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407977:	add    rdi,0x1
  40797b:	mov    QWORD PTR [rdx+rcx*8],rdi
  40797f:	test   r8b,0x1
  407983:	jne    40798e <free_node_if@@Base+0x6e>
  407989:	jmp    4079ad <free_node_if@@Base+0x8d>
  40798e:	mov    rax,QWORD PTR [rip+0xb1c3]        # 412b58 <__bss_start@@Base+0x9c8>
  407995:	add    rax,0x1
  407999:	mov    QWORD PTR [rip+0xb1b8],rax        # 412b58 <__bss_start@@Base+0x9c8>
  4079a0:	mov    rax,QWORD PTR [rbp-0x8]
  4079a4:	mov    rdi,QWORD PTR [rax+0x8]
  4079a8:	call   407400 <free_node@@Base>
  4079ad:	mov    rax,QWORD PTR [rip+0xb1ac]        # 412b60 <__bss_start@@Base+0x9d0>
  4079b4:	add    rax,0x1
  4079b8:	mov    QWORD PTR [rip+0xb1a1],rax        # 412b60 <__bss_start@@Base+0x9d0>
  4079bf:	mov    rax,QWORD PTR [rbp-0x8]
  4079c3:	mov    rdi,QWORD PTR [rax+0x10]
  4079c7:	call   407400 <free_node@@Base>
  4079cc:	mov    rax,QWORD PTR [rbp-0x8]
  4079d0:	mov    rdi,QWORD PTR [rax+0x18]
  4079d4:	call   407400 <free_node@@Base>
  4079d9:	mov    rax,QWORD PTR [rbp-0x8]
  4079dd:	mov    rdi,QWORD PTR [rax+0x20]
  4079e1:	call   407400 <free_node@@Base>
  4079e6:	mov    rax,QWORD PTR [rbp-0x8]
  4079ea:	mov    rdi,rax
  4079ed:	call   403040 <free@plt>
  4079f2:	add    rsp,0x10
  4079f6:	pop    rbp
  4079f7:	ret    
  4079f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407a00 <free_node_boolean_operator@@Base>:
  407a00:	push   rbp
  407a01:	mov    rbp,rsp
  407a04:	sub    rsp,0x10
  407a08:	mov    rax,QWORD PTR [rip+0xb161]        # 412b70 <__bss_start@@Base+0x9e0>
  407a0f:	add    rax,0x1
  407a13:	mov    QWORD PTR [rip+0xb156],rax        # 412b70 <__bss_start@@Base+0x9e0>
  407a1a:	mov    QWORD PTR [rbp-0x10],rdi
  407a1e:	mov    eax,0x2
  407a23:	mov    ecx,eax
  407a25:	mov    eax,0x1
  407a2a:	mov    edx,eax
  407a2c:	mov    rsi,QWORD PTR [rbp-0x10]
  407a30:	mov    QWORD PTR [rbp-0x8],rsi
  407a34:	mov    rdi,QWORD PTR [rbp-0x8]
  407a38:	mov    rdi,QWORD PTR [rdi+0x8]
  407a3c:	cmp    rdi,0x0
  407a40:	setne  r8b
  407a44:	cmp    rdi,0x0
  407a48:	cmovne rcx,rdx
  407a4c:	lea    rdx,[rip+0xb11d]        # 412b70 <__bss_start@@Base+0x9e0>
  407a53:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407a57:	add    rdi,0x1
  407a5b:	mov    QWORD PTR [rdx+rcx*8],rdi
  407a5f:	test   r8b,0x1
  407a63:	jne    407a6e <free_node_boolean_operator@@Base+0x6e>
  407a69:	jmp    407a8d <free_node_boolean_operator@@Base+0x8d>
  407a6e:	mov    rax,QWORD PTR [rip+0xb113]        # 412b88 <__bss_start@@Base+0x9f8>
  407a75:	add    rax,0x1
  407a79:	mov    QWORD PTR [rip+0xb108],rax        # 412b88 <__bss_start@@Base+0x9f8>
  407a80:	mov    rax,QWORD PTR [rbp-0x8]
  407a84:	mov    rdi,QWORD PTR [rax+0x8]
  407a88:	call   407400 <free_node@@Base>
  407a8d:	mov    rax,QWORD PTR [rip+0xb0fc]        # 412b90 <__bss_start@@Base+0xa00>
  407a94:	add    rax,0x1
  407a98:	mov    QWORD PTR [rip+0xb0f1],rax        # 412b90 <__bss_start@@Base+0xa00>
  407a9f:	mov    rax,QWORD PTR [rbp-0x8]
  407aa3:	mov    rdi,QWORD PTR [rax+0x10]
  407aa7:	call   407400 <free_node@@Base>
  407aac:	mov    rax,QWORD PTR [rbp-0x8]
  407ab0:	mov    rdi,QWORD PTR [rax+0x18]
  407ab4:	call   407400 <free_node@@Base>
  407ab9:	mov    rax,QWORD PTR [rbp-0x8]
  407abd:	mov    rdi,rax
  407ac0:	call   403040 <free@plt>
  407ac5:	add    rsp,0x10
  407ac9:	pop    rbp
  407aca:	ret    
  407acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407ad0 <get_boolean_op_value@@Base>:
  407ad0:	push   rbp
  407ad1:	mov    rbp,rsp
  407ad4:	sub    rsp,0x50
  407ad8:	mov    rax,QWORD PTR [rip+0xb0c1]        # 412ba0 <__bss_start@@Base+0xa10>
  407adf:	add    rax,0x1
  407ae3:	mov    QWORD PTR [rip+0xb0b6],rax        # 412ba0 <__bss_start@@Base+0xa10>
  407aea:	mov    QWORD PTR [rbp-0x20],rdi
  407aee:	mov    eax,0x2
  407af3:	mov    ecx,eax
  407af5:	mov    eax,0x1
  407afa:	mov    edx,eax
  407afc:	mov    rsi,QWORD PTR [rbp-0x20]
  407b00:	mov    QWORD PTR [rbp-0x10],rsi
  407b04:	mov    rdi,QWORD PTR [rbp-0x10]
  407b08:	mov    rdi,QWORD PTR [rdi+0x8]
  407b0c:	mov    eax,0x2
  407b11:	mov    esi,eax
  407b13:	mov    QWORD PTR [rbp-0x28],rcx
  407b17:	mov    QWORD PTR [rbp-0x30],rdx
  407b1b:	call   403140 <strnlen@plt>
  407b20:	mov    QWORD PTR [rbp-0x18],rax
  407b24:	mov    rax,QWORD PTR [rbp-0x18]
  407b28:	cmp    rax,0x2
  407b2c:	sete   r8b
  407b30:	cmp    rax,0x2
  407b34:	mov    rax,QWORD PTR [rbp-0x28]
  407b38:	mov    rcx,QWORD PTR [rbp-0x30]
  407b3c:	cmove  rax,rcx
  407b40:	lea    rdx,[rip+0xb059]        # 412ba0 <__bss_start@@Base+0xa10>
  407b47:	mov    rsi,QWORD PTR [rdx+rax*8]
  407b4b:	add    rsi,0x1
  407b4f:	mov    QWORD PTR [rdx+rax*8],rsi
  407b53:	test   r8b,0x1
  407b57:	jne    407b62 <get_boolean_op_value@@Base+0x92>
  407b5d:	jmp    407e71 <get_boolean_op_value@@Base+0x3a1>
  407b62:	mov    eax,0x2
  407b67:	mov    edx,eax
  407b69:	mov    rcx,QWORD PTR [rbp-0x10]
  407b6d:	mov    rdi,QWORD PTR [rcx+0x8]
  407b71:	lea    rsi,[rip+0x5a04]        # 40d57c <_IO_stdin_used@@Base+0x57c>
  407b78:	call   403070 <strncmp@plt>
  407b7d:	mov    r8d,0x4
  407b83:	mov    ecx,r8d
  407b86:	mov    r8d,0x3
  407b8c:	mov    edx,r8d
  407b8f:	cmp    eax,0x0
  407b92:	sete   r9b
  407b96:	cmp    eax,0x0
  407b99:	cmove  rcx,rdx
  407b9d:	lea    rdx,[rip+0xaffc]        # 412ba0 <__bss_start@@Base+0xa10>
  407ba4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407ba8:	add    rsi,0x1
  407bac:	mov    QWORD PTR [rdx+rcx*8],rsi
  407bb0:	test   r9b,0x1
  407bb4:	jne    407bbf <get_boolean_op_value@@Base+0xef>
  407bba:	jmp    407bdd <get_boolean_op_value@@Base+0x10d>
  407bbf:	mov    rax,QWORD PTR [rip+0xb002]        # 412bc8 <__bss_start@@Base+0xa38>
  407bc6:	add    rax,0x1
  407bca:	mov    QWORD PTR [rip+0xaff7],rax        # 412bc8 <__bss_start@@Base+0xa38>
  407bd1:	mov    DWORD PTR [rbp-0x4],0x0
  407bd8:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407bdd:	mov    eax,0x2
  407be2:	mov    edx,eax
  407be4:	mov    rcx,QWORD PTR [rbp-0x10]
  407be8:	mov    rdi,QWORD PTR [rcx+0x8]
  407bec:	lea    rsi,[rip+0x598c]        # 40d57f <_IO_stdin_used@@Base+0x57f>
  407bf3:	call   403070 <strncmp@plt>
  407bf8:	mov    r8d,0x7
  407bfe:	mov    ecx,r8d
  407c01:	mov    r8d,0x6
  407c07:	mov    edx,r8d
  407c0a:	cmp    eax,0x0
  407c0d:	sete   r9b
  407c11:	cmp    eax,0x0
  407c14:	cmove  rcx,rdx
  407c18:	lea    rdx,[rip+0xaf81]        # 412ba0 <__bss_start@@Base+0xa10>
  407c1f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407c23:	add    rsi,0x1
  407c27:	mov    QWORD PTR [rdx+rcx*8],rsi
  407c2b:	test   r9b,0x1
  407c2f:	jne    407c3a <get_boolean_op_value@@Base+0x16a>
  407c35:	jmp    407c58 <get_boolean_op_value@@Base+0x188>
  407c3a:	mov    rax,QWORD PTR [rip+0xaf9f]        # 412be0 <__bss_start@@Base+0xa50>
  407c41:	add    rax,0x1
  407c45:	mov    QWORD PTR [rip+0xaf94],rax        # 412be0 <__bss_start@@Base+0xa50>
  407c4c:	mov    DWORD PTR [rbp-0x4],0x1
  407c53:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407c58:	mov    eax,0x2
  407c5d:	mov    edx,eax
  407c5f:	mov    rcx,QWORD PTR [rbp-0x10]
  407c63:	mov    rdi,QWORD PTR [rcx+0x8]
  407c67:	lea    rsi,[rip+0x5914]        # 40d582 <_IO_stdin_used@@Base+0x582>
  407c6e:	call   403070 <strncmp@plt>
  407c73:	mov    r8d,0xa
  407c79:	mov    ecx,r8d
  407c7c:	mov    r8d,0x9
  407c82:	mov    edx,r8d
  407c85:	cmp    eax,0x0
  407c88:	sete   r9b
  407c8c:	cmp    eax,0x0
  407c8f:	cmove  rcx,rdx
  407c93:	lea    rdx,[rip+0xaf06]        # 412ba0 <__bss_start@@Base+0xa10>
  407c9a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407c9e:	add    rsi,0x1
  407ca2:	mov    QWORD PTR [rdx+rcx*8],rsi
  407ca6:	test   r9b,0x1
  407caa:	jne    407cb5 <get_boolean_op_value@@Base+0x1e5>
  407cb0:	jmp    407cd3 <get_boolean_op_value@@Base+0x203>
  407cb5:	mov    rax,QWORD PTR [rip+0xaf3c]        # 412bf8 <__bss_start@@Base+0xa68>
  407cbc:	add    rax,0x1
  407cc0:	mov    QWORD PTR [rip+0xaf31],rax        # 412bf8 <__bss_start@@Base+0xa68>
  407cc7:	mov    DWORD PTR [rbp-0x4],0x2
  407cce:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407cd3:	mov    eax,0x2
  407cd8:	mov    edx,eax
  407cda:	mov    rcx,QWORD PTR [rbp-0x10]
  407cde:	mov    rdi,QWORD PTR [rcx+0x8]
  407ce2:	lea    rsi,[rip+0x589c]        # 40d585 <_IO_stdin_used@@Base+0x585>
  407ce9:	call   403070 <strncmp@plt>
  407cee:	mov    r8d,0xd
  407cf4:	mov    ecx,r8d
  407cf7:	mov    r8d,0xc
  407cfd:	mov    edx,r8d
  407d00:	cmp    eax,0x0
  407d03:	sete   r9b
  407d07:	cmp    eax,0x0
  407d0a:	cmove  rcx,rdx
  407d0e:	lea    rdx,[rip+0xae8b]        # 412ba0 <__bss_start@@Base+0xa10>
  407d15:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407d19:	add    rsi,0x1
  407d1d:	mov    QWORD PTR [rdx+rcx*8],rsi
  407d21:	test   r9b,0x1
  407d25:	jne    407d30 <get_boolean_op_value@@Base+0x260>
  407d2b:	jmp    407d4e <get_boolean_op_value@@Base+0x27e>
  407d30:	mov    rax,QWORD PTR [rip+0xaed9]        # 412c10 <__bss_start@@Base+0xa80>
  407d37:	add    rax,0x1
  407d3b:	mov    QWORD PTR [rip+0xaece],rax        # 412c10 <__bss_start@@Base+0xa80>
  407d42:	mov    DWORD PTR [rbp-0x4],0x3
  407d49:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407d4e:	mov    eax,0x2
  407d53:	mov    edx,eax
  407d55:	mov    rcx,QWORD PTR [rbp-0x10]
  407d59:	mov    rdi,QWORD PTR [rcx+0x8]
  407d5d:	lea    rsi,[rip+0x5824]        # 40d588 <_IO_stdin_used@@Base+0x588>
  407d64:	call   403070 <strncmp@plt>
  407d69:	mov    r8d,0x10
  407d6f:	mov    ecx,r8d
  407d72:	mov    r8d,0xf
  407d78:	mov    edx,r8d
  407d7b:	cmp    eax,0x0
  407d7e:	sete   r9b
  407d82:	cmp    eax,0x0
  407d85:	cmove  rcx,rdx
  407d89:	lea    rdx,[rip+0xae10]        # 412ba0 <__bss_start@@Base+0xa10>
  407d90:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407d94:	add    rsi,0x1
  407d98:	mov    QWORD PTR [rdx+rcx*8],rsi
  407d9c:	test   r9b,0x1
  407da0:	jne    407dab <get_boolean_op_value@@Base+0x2db>
  407da6:	jmp    407dc9 <get_boolean_op_value@@Base+0x2f9>
  407dab:	mov    rax,QWORD PTR [rip+0xae76]        # 412c28 <__bss_start@@Base+0xa98>
  407db2:	add    rax,0x1
  407db6:	mov    QWORD PTR [rip+0xae6b],rax        # 412c28 <__bss_start@@Base+0xa98>
  407dbd:	mov    DWORD PTR [rbp-0x4],0x4
  407dc4:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407dc9:	mov    eax,0x2
  407dce:	mov    edx,eax
  407dd0:	mov    rcx,QWORD PTR [rbp-0x10]
  407dd4:	mov    rdi,QWORD PTR [rcx+0x8]
  407dd8:	lea    rsi,[rip+0x57ac]        # 40d58b <_IO_stdin_used@@Base+0x58b>
  407ddf:	call   403070 <strncmp@plt>
  407de4:	mov    r8d,0x13
  407dea:	mov    ecx,r8d
  407ded:	mov    r8d,0x12
  407df3:	mov    edx,r8d
  407df6:	cmp    eax,0x0
  407df9:	sete   r9b
  407dfd:	cmp    eax,0x0
  407e00:	cmove  rcx,rdx
  407e04:	lea    rdx,[rip+0xad95]        # 412ba0 <__bss_start@@Base+0xa10>
  407e0b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407e0f:	add    rsi,0x1
  407e13:	mov    QWORD PTR [rdx+rcx*8],rsi
  407e17:	test   r9b,0x1
  407e1b:	jne    407e26 <get_boolean_op_value@@Base+0x356>
  407e21:	jmp    407e44 <get_boolean_op_value@@Base+0x374>
  407e26:	mov    rax,QWORD PTR [rip+0xae13]        # 412c40 <__bss_start@@Base+0xab0>
  407e2d:	add    rax,0x1
  407e31:	mov    QWORD PTR [rip+0xae08],rax        # 412c40 <__bss_start@@Base+0xab0>
  407e38:	mov    DWORD PTR [rbp-0x4],0x5
  407e3f:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407e44:	mov    rax,QWORD PTR [rip+0xa1a5]        # 411ff0 <stderr@GLIBC_2.2.5>
  407e4b:	mov    rdi,QWORD PTR [rax]
  407e4e:	mov    rax,QWORD PTR [rbp-0x10]
  407e52:	mov    rdx,QWORD PTR [rax+0x8]
  407e56:	lea    rsi,[rip+0x5731]        # 40d58e <_IO_stdin_used@@Base+0x58e>
  407e5d:	mov    al,0x0
  407e5f:	call   403150 <fprintf@plt>
  407e64:	mov    edi,0x1
  407e69:	mov    DWORD PTR [rbp-0x34],eax
  407e6c:	call   403250 <exit@plt>
  407e71:	mov    DWORD PTR [rip+0xa2e9],0x0        # 412164 <__data_start@@Base+0x1c>
  407e7b:	mov    rax,QWORD PTR [rbp-0x10]
  407e7f:	mov    rax,QWORD PTR [rax+0x8]
  407e83:	movsx  ecx,BYTE PTR [rax]
  407e86:	mov    edx,ecx
  407e88:	sub    edx,0x21
  407e8b:	mov    DWORD PTR [rbp-0x38],ecx
  407e8e:	mov    DWORD PTR [rbp-0x3c],edx
  407e91:	je     407ec4 <get_boolean_op_value@@Base+0x3f4>
  407e97:	jmp    407e9c <get_boolean_op_value@@Base+0x3cc>
  407e9c:	mov    eax,DWORD PTR [rbp-0x38]
  407e9f:	sub    eax,0x3c
  407ea2:	mov    DWORD PTR [rbp-0x40],eax
  407ea5:	je     407efc <get_boolean_op_value@@Base+0x42c>
  407eab:	jmp    407eb0 <get_boolean_op_value@@Base+0x3e0>
  407eb0:	mov    eax,DWORD PTR [rbp-0x38]
  407eb3:	sub    eax,0x3e
  407eb6:	mov    DWORD PTR [rbp-0x44],eax
  407eb9:	je     407f34 <get_boolean_op_value@@Base+0x464>
  407ebf:	jmp    407f6c <get_boolean_op_value@@Base+0x49c>
  407ec4:	lea    rax,[rip+0x9605]        # 4114d0 <_IO_stdin_used@@Base+0x44d0>
  407ecb:	add    rax,0x8
  407ecf:	lea    rdi,[rip+0xa28e]        # 412164 <__data_start@@Base+0x1c>
  407ed6:	mov    rsi,rax
  407ed9:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  407ede:	mov    rax,QWORD PTR [rip+0xad83]        # 412c68 <__bss_start@@Base+0xad8>
  407ee5:	add    rax,0x1
  407ee9:	mov    QWORD PTR [rip+0xad78],rax        # 412c68 <__bss_start@@Base+0xad8>
  407ef0:	mov    DWORD PTR [rbp-0x4],0x8
  407ef7:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407efc:	lea    rax,[rip+0x95cd]        # 4114d0 <_IO_stdin_used@@Base+0x44d0>
  407f03:	add    rax,0x10
  407f07:	lea    rdi,[rip+0xa256]        # 412164 <__data_start@@Base+0x1c>
  407f0e:	mov    rsi,rax
  407f11:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  407f16:	mov    rax,QWORD PTR [rip+0xad53]        # 412c70 <__bss_start@@Base+0xae0>
  407f1d:	add    rax,0x1
  407f21:	mov    QWORD PTR [rip+0xad48],rax        # 412c70 <__bss_start@@Base+0xae0>
  407f28:	mov    DWORD PTR [rbp-0x4],0x6
  407f2f:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407f34:	lea    rax,[rip+0x9595]        # 4114d0 <_IO_stdin_used@@Base+0x44d0>
  407f3b:	add    rax,0x18
  407f3f:	lea    rdi,[rip+0xa21e]        # 412164 <__data_start@@Base+0x1c>
  407f46:	mov    rsi,rax
  407f49:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  407f4e:	mov    rax,QWORD PTR [rip+0xad23]        # 412c78 <__bss_start@@Base+0xae8>
  407f55:	add    rax,0x1
  407f59:	mov    QWORD PTR [rip+0xad18],rax        # 412c78 <__bss_start@@Base+0xae8>
  407f60:	mov    DWORD PTR [rbp-0x4],0x7
  407f67:	jmp    407fac <get_boolean_op_value@@Base+0x4dc>
  407f6c:	lea    rdi,[rip+0xa1f1]        # 412164 <__data_start@@Base+0x1c>
  407f73:	lea    rsi,[rip+0x9556]        # 4114d0 <_IO_stdin_used@@Base+0x44d0>
  407f7a:	call   407fd0 <get_boolean_op_value@@Base+0x500>
  407f7f:	mov    rsi,QWORD PTR [rip+0xa06a]        # 411ff0 <stderr@GLIBC_2.2.5>
  407f86:	mov    rdi,QWORD PTR [rsi]
  407f89:	mov    rsi,QWORD PTR [rbp-0x10]
  407f8d:	mov    rdx,QWORD PTR [rsi+0x8]
  407f91:	lea    rsi,[rip+0x55f6]        # 40d58e <_IO_stdin_used@@Base+0x58e>
  407f98:	mov    al,0x0
  407f9a:	call   403150 <fprintf@plt>
  407f9f:	mov    edi,0x1
  407fa4:	mov    DWORD PTR [rbp-0x48],eax
  407fa7:	call   403250 <exit@plt>
  407fac:	mov    rax,QWORD PTR [rip+0xaccd]        # 412c80 <__bss_start@@Base+0xaf0>
  407fb3:	add    rax,0x1
  407fb7:	mov    QWORD PTR [rip+0xacc2],rax        # 412c80 <__bss_start@@Base+0xaf0>
  407fbe:	mov    eax,DWORD PTR [rbp-0x4]
  407fc1:	add    rsp,0x50
  407fc5:	pop    rbp
  407fc6:	ret    
  407fc7:	nop    WORD PTR [rax+rax*1+0x0]
  407fd0:	mov    eax,DWORD PTR [rdi]
  407fd2:	cmp    eax,0xffffffff
  407fd5:	mov    QWORD PTR [rsp-0x8],rsi
  407fda:	mov    DWORD PTR [rsp-0xc],eax
  407fde:	je     408013 <get_boolean_op_value@@Base+0x543>
  407fe4:	mov    eax,DWORD PTR [rsp-0xc]
  407fe8:	mov    ecx,eax
  407fea:	mov    edx,ecx
  407fec:	mov    rsi,QWORD PTR [rsp-0x8]
  407ff1:	mov    rdx,QWORD PTR [rsi+rdx*8]
  407ff5:	cmp    rdx,0x0
  407ff9:	mov    QWORD PTR [rsp-0x18],rdx
  407ffe:	je     408013 <get_boolean_op_value@@Base+0x543>
  408004:	mov    rax,QWORD PTR [rsp-0x18]
  408009:	mov    rcx,QWORD PTR [rax]
  40800c:	add    rcx,0x1
  408010:	mov    QWORD PTR [rax],rcx
  408013:	ret    
  408014:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40801e:	xchg   ax,ax
  408020:	sub    rsp,0x38
  408024:	xor    eax,eax
  408026:	mov    DWORD PTR [rsp+0x34],eax
  40802a:	jmp    40802f <get_boolean_op_value@@Base+0x55f>
  40802f:	mov    eax,DWORD PTR [rsp+0x34]
  408033:	movsxd rcx,eax
  408036:	imul   rcx,rcx,0x30
  40803a:	lea    rdx,[rip+0x97af]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  408041:	add    rdx,rcx
  408044:	mov    rdi,QWORD PTR [rdx]
  408047:	mov    rsi,QWORD PTR [rdx+0x8]
  40804b:	mov    r8d,DWORD PTR [rdx+0x10]
  40804f:	mov    QWORD PTR [rsp+0x28],rdx
  408054:	mov    edx,r8d
  408057:	mov    DWORD PTR [rsp+0x24],eax
  40805b:	call   40b1e0 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  408060:	xor    eax,eax
  408062:	mov    rcx,QWORD PTR [rsp+0x28]
  408067:	mov    edx,DWORD PTR [rcx+0x18]
  40806a:	mov    rsi,QWORD PTR [rcx+0x20]
  40806e:	mov    rdi,QWORD PTR [rcx+0x28]
  408072:	cmp    eax,edx
  408074:	mov    QWORD PTR [rsp+0x18],rdi
  408079:	mov    DWORD PTR [rsp+0x14],edx
  40807d:	mov    QWORD PTR [rsp+0x8],rsi
  408082:	mov    DWORD PTR [rsp+0x4],eax
  408086:	jge    4080f7 <get_boolean_op_value@@Base+0x627>
  40808c:	mov    eax,DWORD PTR [rsp+0x4]
  408090:	movsxd rcx,eax
  408093:	shl    rcx,0x5
  408097:	mov    rdx,QWORD PTR [rsp+0x8]
  40809c:	add    rdx,rcx
  40809f:	mov    edi,DWORD PTR [rdx]
  4080a1:	mov    rsi,QWORD PTR [rdx+0x8]
  4080a5:	mov    r8d,DWORD PTR [rdx+0x10]
  4080a9:	mov    r9b,BYTE PTR [rdx+0x14]
  4080ad:	mov    r10d,DWORD PTR [rdx+0x18]
  4080b1:	mov    edx,r8d
  4080b4:	movzx  ecx,r9b
  4080b8:	mov    r8d,r10d
  4080bb:	mov    DWORD PTR [rsp],eax
  4080be:	call   40b630 <__generate_code_for_binary_boolean_expression@@Base+0xca0>
  4080c3:	mov    eax,DWORD PTR [rsp]
  4080c6:	movsxd rsi,eax
  4080c9:	shl    rsi,0x4
  4080cd:	mov    r11,QWORD PTR [rsp+0x18]
  4080d2:	add    r11,rsi
  4080d5:	mov    edi,DWORD PTR [r11]
  4080d8:	mov    rsi,QWORD PTR [r11+0x8]
  4080dc:	call   40ba60 <__generate_code_for_binary_boolean_expression@@Base+0x10d0>
  4080e1:	mov    eax,DWORD PTR [rsp]
  4080e4:	add    eax,0x1
  4080e7:	mov    ecx,DWORD PTR [rsp+0x14]
  4080eb:	cmp    eax,ecx
  4080ed:	mov    DWORD PTR [rsp+0x4],eax
  4080f1:	jl     40808c <get_boolean_op_value@@Base+0x5bc>
  4080f7:	call   40be80 <__generate_code_for_binary_boolean_expression@@Base+0x14f0>
  4080fc:	call   40c620 <__generate_code_for_binary_boolean_expression@@Base+0x1c90>
  408101:	mov    eax,DWORD PTR [rsp+0x24]
  408105:	add    eax,0x1
  408108:	cmp    eax,0x1
  40810b:	mov    DWORD PTR [rsp+0x34],eax
  40810f:	jl     40802f <get_boolean_op_value@@Base+0x55f>
  408115:	add    rsp,0x38
  408119:	ret    
  40811a:	nop    WORD PTR [rax+rax*1+0x0]
  408120:	push   rax
  408121:	call   408020 <get_boolean_op_value@@Base+0x550>
  408126:	mov    QWORD PTR [rip+0xa857],0x0        # 412988 <__bss_start@@Base+0x7f8>
  408131:	mov    QWORD PTR [rip+0xa844],0x0        # 412980 <__bss_start@@Base+0x7f0>
  40813c:	mov    QWORD PTR [rip+0xa851],0x0        # 412998 <__bss_start@@Base+0x808>
  408147:	mov    QWORD PTR [rip+0xa83e],0x0        # 412990 <__bss_start@@Base+0x800>
  408152:	mov    QWORD PTR [rip+0xa84b],0x0        # 4129a8 <__bss_start@@Base+0x818>
  40815d:	mov    QWORD PTR [rip+0xa838],0x0        # 4129a0 <__bss_start@@Base+0x810>
  408168:	mov    QWORD PTR [rip+0xa845],0x0        # 4129b8 <__bss_start@@Base+0x828>
  408173:	mov    QWORD PTR [rip+0xa832],0x0        # 4129b0 <__bss_start@@Base+0x820>
  40817e:	mov    QWORD PTR [rip+0xa83f],0x0        # 4129c8 <__bss_start@@Base+0x838>
  408189:	mov    QWORD PTR [rip+0xa82c],0x0        # 4129c0 <__bss_start@@Base+0x830>
  408194:	mov    QWORD PTR [rip+0xa839],0x0        # 4129d8 <__bss_start@@Base+0x848>
  40819f:	mov    QWORD PTR [rip+0xa826],0x0        # 4129d0 <__bss_start@@Base+0x840>
  4081aa:	mov    QWORD PTR [rip+0xa833],0x0        # 4129e8 <__bss_start@@Base+0x858>
  4081b5:	mov    QWORD PTR [rip+0xa820],0x0        # 4129e0 <__bss_start@@Base+0x850>
  4081c0:	mov    QWORD PTR [rip+0xa82d],0x0        # 4129f8 <__bss_start@@Base+0x868>
  4081cb:	mov    QWORD PTR [rip+0xa81a],0x0        # 4129f0 <__bss_start@@Base+0x860>
  4081d6:	mov    QWORD PTR [rip+0xa88f],0x0        # 412a70 <__bss_start@@Base+0x8e0>
  4081e1:	mov    QWORD PTR [rip+0xa87c],0x0        # 412a68 <__bss_start@@Base+0x8d8>
  4081ec:	mov    QWORD PTR [rip+0xa869],0x0        # 412a60 <__bss_start@@Base+0x8d0>
  4081f7:	mov    QWORD PTR [rip+0xa856],0x0        # 412a58 <__bss_start@@Base+0x8c8>
  408202:	mov    QWORD PTR [rip+0xa843],0x0        # 412a50 <__bss_start@@Base+0x8c0>
  40820d:	mov    QWORD PTR [rip+0xa830],0x0        # 412a48 <__bss_start@@Base+0x8b8>
  408218:	mov    QWORD PTR [rip+0xa81d],0x0        # 412a40 <__bss_start@@Base+0x8b0>
  408223:	mov    QWORD PTR [rip+0xa80a],0x0        # 412a38 <__bss_start@@Base+0x8a8>
  40822e:	mov    QWORD PTR [rip+0xa7f7],0x0        # 412a30 <__bss_start@@Base+0x8a0>
  408239:	mov    QWORD PTR [rip+0xa7e4],0x0        # 412a28 <__bss_start@@Base+0x898>
  408244:	mov    QWORD PTR [rip+0xa7d1],0x0        # 412a20 <__bss_start@@Base+0x890>
  40824f:	mov    QWORD PTR [rip+0xa7be],0x0        # 412a18 <__bss_start@@Base+0x888>
  40825a:	mov    QWORD PTR [rip+0xa7ab],0x0        # 412a10 <__bss_start@@Base+0x880>
  408265:	mov    QWORD PTR [rip+0xa798],0x0        # 412a08 <__bss_start@@Base+0x878>
  408270:	mov    QWORD PTR [rip+0xa785],0x0        # 412a00 <__bss_start@@Base+0x870>
  40827b:	mov    QWORD PTR [rip+0xa81a],0x0        # 412aa0 <__bss_start@@Base+0x910>
  408286:	mov    QWORD PTR [rip+0xa807],0x0        # 412a98 <__bss_start@@Base+0x908>
  408291:	mov    QWORD PTR [rip+0xa7f4],0x0        # 412a90 <__bss_start@@Base+0x900>
  40829c:	mov    QWORD PTR [rip+0xa7e1],0x0        # 412a88 <__bss_start@@Base+0x8f8>
  4082a7:	mov    QWORD PTR [rip+0xa7ce],0x0        # 412a80 <__bss_start@@Base+0x8f0>
  4082b2:	mov    QWORD PTR [rip+0xa813],0x0        # 412ad0 <__bss_start@@Base+0x940>
  4082bd:	mov    QWORD PTR [rip+0xa800],0x0        # 412ac8 <__bss_start@@Base+0x938>
  4082c8:	mov    QWORD PTR [rip+0xa7ed],0x0        # 412ac0 <__bss_start@@Base+0x930>
  4082d3:	mov    QWORD PTR [rip+0xa7da],0x0        # 412ab8 <__bss_start@@Base+0x928>
  4082de:	mov    QWORD PTR [rip+0xa7c7],0x0        # 412ab0 <__bss_start@@Base+0x920>
  4082e9:	mov    QWORD PTR [rip+0xa80c],0x0        # 412b00 <__bss_start@@Base+0x970>
  4082f4:	mov    QWORD PTR [rip+0xa7f9],0x0        # 412af8 <__bss_start@@Base+0x968>
  4082ff:	mov    QWORD PTR [rip+0xa7e6],0x0        # 412af0 <__bss_start@@Base+0x960>
  40830a:	mov    QWORD PTR [rip+0xa7d3],0x0        # 412ae8 <__bss_start@@Base+0x958>
  408315:	mov    QWORD PTR [rip+0xa7c0],0x0        # 412ae0 <__bss_start@@Base+0x950>
  408320:	mov    QWORD PTR [rip+0xa805],0x0        # 412b30 <__bss_start@@Base+0x9a0>
  40832b:	mov    QWORD PTR [rip+0xa7f2],0x0        # 412b28 <__bss_start@@Base+0x998>
  408336:	mov    QWORD PTR [rip+0xa7df],0x0        # 412b20 <__bss_start@@Base+0x990>
  408341:	mov    QWORD PTR [rip+0xa7cc],0x0        # 412b18 <__bss_start@@Base+0x988>
  40834c:	mov    QWORD PTR [rip+0xa7b9],0x0        # 412b10 <__bss_start@@Base+0x980>
  408357:	mov    QWORD PTR [rip+0xa7fe],0x0        # 412b60 <__bss_start@@Base+0x9d0>
  408362:	mov    QWORD PTR [rip+0xa7eb],0x0        # 412b58 <__bss_start@@Base+0x9c8>
  40836d:	mov    QWORD PTR [rip+0xa7d8],0x0        # 412b50 <__bss_start@@Base+0x9c0>
  408378:	mov    QWORD PTR [rip+0xa7c5],0x0        # 412b48 <__bss_start@@Base+0x9b8>
  408383:	mov    QWORD PTR [rip+0xa7b2],0x0        # 412b40 <__bss_start@@Base+0x9b0>
  40838e:	mov    QWORD PTR [rip+0xa7f7],0x0        # 412b90 <__bss_start@@Base+0xa00>
  408399:	mov    QWORD PTR [rip+0xa7e4],0x0        # 412b88 <__bss_start@@Base+0x9f8>
  4083a4:	mov    QWORD PTR [rip+0xa7d1],0x0        # 412b80 <__bss_start@@Base+0x9f0>
  4083af:	mov    QWORD PTR [rip+0xa7be],0x0        # 412b78 <__bss_start@@Base+0x9e8>
  4083ba:	mov    QWORD PTR [rip+0xa7ab],0x0        # 412b70 <__bss_start@@Base+0x9e0>
  4083c5:	mov    QWORD PTR [rip+0xa8b0],0x0        # 412c80 <__bss_start@@Base+0xaf0>
  4083d0:	mov    QWORD PTR [rip+0xa89d],0x0        # 412c78 <__bss_start@@Base+0xae8>
  4083db:	mov    QWORD PTR [rip+0xa88a],0x0        # 412c70 <__bss_start@@Base+0xae0>
  4083e6:	mov    QWORD PTR [rip+0xa877],0x0        # 412c68 <__bss_start@@Base+0xad8>
  4083f1:	mov    QWORD PTR [rip+0xa864],0x0        # 412c60 <__bss_start@@Base+0xad0>
  4083fc:	mov    QWORD PTR [rip+0xa851],0x0        # 412c58 <__bss_start@@Base+0xac8>
  408407:	mov    QWORD PTR [rip+0xa83e],0x0        # 412c50 <__bss_start@@Base+0xac0>
  408412:	mov    QWORD PTR [rip+0xa82b],0x0        # 412c48 <__bss_start@@Base+0xab8>
  40841d:	mov    QWORD PTR [rip+0xa818],0x0        # 412c40 <__bss_start@@Base+0xab0>
  408428:	mov    QWORD PTR [rip+0xa805],0x0        # 412c38 <__bss_start@@Base+0xaa8>
  408433:	mov    QWORD PTR [rip+0xa7f2],0x0        # 412c30 <__bss_start@@Base+0xaa0>
  40843e:	mov    QWORD PTR [rip+0xa7df],0x0        # 412c28 <__bss_start@@Base+0xa98>
  408449:	mov    QWORD PTR [rip+0xa7cc],0x0        # 412c20 <__bss_start@@Base+0xa90>
  408454:	mov    QWORD PTR [rip+0xa7b9],0x0        # 412c18 <__bss_start@@Base+0xa88>
  40845f:	mov    QWORD PTR [rip+0xa7a6],0x0        # 412c10 <__bss_start@@Base+0xa80>
  40846a:	mov    QWORD PTR [rip+0xa793],0x0        # 412c08 <__bss_start@@Base+0xa78>
  408475:	mov    QWORD PTR [rip+0xa780],0x0        # 412c00 <__bss_start@@Base+0xa70>
  408480:	mov    QWORD PTR [rip+0xa76d],0x0        # 412bf8 <__bss_start@@Base+0xa68>
  40848b:	mov    QWORD PTR [rip+0xa75a],0x0        # 412bf0 <__bss_start@@Base+0xa60>
  408496:	mov    QWORD PTR [rip+0xa747],0x0        # 412be8 <__bss_start@@Base+0xa58>
  4084a1:	mov    QWORD PTR [rip+0xa734],0x0        # 412be0 <__bss_start@@Base+0xa50>
  4084ac:	mov    QWORD PTR [rip+0xa721],0x0        # 412bd8 <__bss_start@@Base+0xa48>
  4084b7:	mov    QWORD PTR [rip+0xa70e],0x0        # 412bd0 <__bss_start@@Base+0xa40>
  4084c2:	mov    QWORD PTR [rip+0xa6fb],0x0        # 412bc8 <__bss_start@@Base+0xa38>
  4084cd:	mov    QWORD PTR [rip+0xa6e8],0x0        # 412bc0 <__bss_start@@Base+0xa30>
  4084d8:	mov    QWORD PTR [rip+0xa6d5],0x0        # 412bb8 <__bss_start@@Base+0xa28>
  4084e3:	mov    QWORD PTR [rip+0xa6c2],0x0        # 412bb0 <__bss_start@@Base+0xa20>
  4084ee:	mov    QWORD PTR [rip+0xa6af],0x0        # 412ba8 <__bss_start@@Base+0xa18>
  4084f9:	mov    QWORD PTR [rip+0xa69c],0x0        # 412ba0 <__bss_start@@Base+0xa10>
  408504:	pop    rax
  408505:	ret    
  408506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408510:	push   rax
  408511:	lea    rdi,[rip+0xfffffffffffffb08]        # 408020 <get_boolean_op_value@@Base+0x550>
  408518:	lea    rsi,[rip+0xfffffffffffffc01]        # 408120 <get_boolean_op_value@@Base+0x650>
  40851f:	call   40c9e0 <__gcov_flush@@Base+0xa0>
  408524:	pop    rax
  408525:	ret    
  408526:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408530 <init_grammar@@Base>:
  408530:	push   rbp
  408531:	mov    rbp,rsp
  408534:	mov    rax,QWORD PTR [rip+0xa755]        # 412c90 <__bss_start@@Base+0xb00>
  40853b:	add    rax,0x1
  40853f:	mov    QWORD PTR [rip+0xa74a],rax        # 412c90 <__bss_start@@Base+0xb00>
  408546:	mov    QWORD PTR [rbp-0x18],rdi
  40854a:	mov    QWORD PTR [rbp-0x20],rsi
  40854e:	mov    rax,QWORD PTR [rip+0xa743]        # 412c98 <__bss_start@@Base+0xb08>
  408555:	add    rax,0x1
  408559:	mov    QWORD PTR [rip+0xa738],rax        # 412c98 <__bss_start@@Base+0xb08>
  408560:	mov    rax,QWORD PTR [rbp-0x18]
  408564:	mov    QWORD PTR [rbp-0x8],rax
  408568:	mov    rcx,QWORD PTR [rbp-0x20]
  40856c:	mov    QWORD PTR [rbp-0x10],rcx
  408570:	mov    rdx,QWORD PTR [rbp-0x10]
  408574:	mov    rsi,QWORD PTR [rbp-0x8]
  408578:	mov    QWORD PTR [rsi],rdx
  40857b:	pop    rbp
  40857c:	ret    
  40857d:	nop    DWORD PTR [rax]

0000000000408580 <destroy_grammar@@Base>:
  408580:	push   rbp
  408581:	mov    rbp,rsp
  408584:	mov    rax,QWORD PTR [rip+0xa715]        # 412ca0 <__bss_start@@Base+0xb10>
  40858b:	add    rax,0x1
  40858f:	mov    QWORD PTR [rip+0xa70a],rax        # 412ca0 <__bss_start@@Base+0xb10>
  408596:	mov    QWORD PTR [rbp-0x10],rdi
  40859a:	mov    rax,QWORD PTR [rip+0xa707]        # 412ca8 <__bss_start@@Base+0xb18>
  4085a1:	add    rax,0x1
  4085a5:	mov    QWORD PTR [rip+0xa6fc],rax        # 412ca8 <__bss_start@@Base+0xb18>
  4085ac:	mov    rax,QWORD PTR [rbp-0x10]
  4085b0:	mov    QWORD PTR [rbp-0x8],rax
  4085b4:	pop    rbp
  4085b5:	ret    
  4085b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004085c0 <build_ast@@Base>:
  4085c0:	push   rbp
  4085c1:	mov    rbp,rsp
  4085c4:	sub    rsp,0x10
  4085c8:	mov    rax,QWORD PTR [rip+0xa6e1]        # 412cb0 <__bss_start@@Base+0xb20>
  4085cf:	add    rax,0x1
  4085d3:	mov    QWORD PTR [rip+0xa6d6],rax        # 412cb0 <__bss_start@@Base+0xb20>
  4085da:	mov    QWORD PTR [rbp-0x10],rdi
  4085de:	mov    rax,QWORD PTR [rip+0xa6d3]        # 412cb8 <__bss_start@@Base+0xb28>
  4085e5:	add    rax,0x1
  4085e9:	mov    QWORD PTR [rip+0xa6c8],rax        # 412cb8 <__bss_start@@Base+0xb28>
  4085f0:	mov    rax,QWORD PTR [rbp-0x10]
  4085f4:	mov    QWORD PTR [rbp-0x8],rax
  4085f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4085fc:	call   408610 <read_function_ast_node@@Base>
  408601:	add    rsp,0x10
  408605:	pop    rbp
  408606:	ret    
  408607:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408610 <read_function_ast_node@@Base>:
  408610:	push   rbp
  408611:	mov    rbp,rsp
  408614:	sub    rsp,0x40
  408618:	mov    rax,QWORD PTR [rip+0xa6a1]        # 412cc0 <__bss_start@@Base+0xb30>
  40861f:	add    rax,0x1
  408623:	mov    QWORD PTR [rip+0xa696],rax        # 412cc0 <__bss_start@@Base+0xb30>
  40862a:	mov    QWORD PTR [rbp-0x38],rdi
  40862e:	mov    rax,QWORD PTR [rbp-0x38]
  408632:	mov    QWORD PTR [rbp-0x10],rax
  408636:	mov    QWORD PTR [rbp-0x18],0x0
  40863e:	mov    QWORD PTR [rbp-0x20],0x0
  408646:	mov    QWORD PTR [rbp-0x28],0x0
  40864e:	mov    QWORD PTR [rbp-0x30],0x0
  408656:	mov    rcx,QWORD PTR [rbp-0x10]
  40865a:	mov    rdi,QWORD PTR [rcx]
  40865d:	call   404ba0 <next@@Base>
  408662:	mov    edx,0x2
  408667:	mov    ecx,edx
  408669:	mov    edx,0x1
  40866e:	mov    edi,edx
  408670:	mov    QWORD PTR [rbp-0x28],rax
  408674:	mov    rax,QWORD PTR [rbp-0x28]
  408678:	mov    edx,DWORD PTR [rax]
  40867a:	cmp    edx,0x0
  40867d:	setne  sil
  408681:	cmp    edx,0x0
  408684:	cmovne rcx,rdi
  408688:	lea    rax,[rip+0xa631]        # 412cc0 <__bss_start@@Base+0xb30>
  40868f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408693:	add    rdi,0x1
  408697:	mov    QWORD PTR [rax+rcx*8],rdi
  40869b:	test   sil,0x1
  40869f:	jne    4086aa <read_function_ast_node@@Base+0x9a>
  4086a5:	jmp    4086c9 <read_function_ast_node@@Base+0xb9>
  4086aa:	mov    rax,QWORD PTR [rip+0xa627]        # 412cd8 <__bss_start@@Base+0xb48>
  4086b1:	add    rax,0x1
  4086b5:	mov    QWORD PTR [rip+0xa61c],rax        # 412cd8 <__bss_start@@Base+0xb48>
  4086bc:	mov    QWORD PTR [rbp-0x8],0x0
  4086c4:	jmp    4088a6 <read_function_ast_node@@Base+0x296>
  4086c9:	mov    rax,QWORD PTR [rbp-0x28]
  4086cd:	mov    rdi,rax
  4086d0:	call   403fd0 <free_token_int_type@@Base>
  4086d5:	mov    rax,QWORD PTR [rbp-0x10]
  4086d9:	mov    rdi,QWORD PTR [rax]
  4086dc:	call   404ba0 <next@@Base>
  4086e1:	mov    ecx,0x5
  4086e6:	mov    edi,ecx
  4086e8:	mov    ecx,0x4
  4086ed:	mov    edx,ecx
  4086ef:	mov    QWORD PTR [rbp-0x28],rax
  4086f3:	mov    rax,QWORD PTR [rbp-0x28]
  4086f7:	mov    ecx,DWORD PTR [rax]
  4086f9:	cmp    ecx,0x2
  4086fc:	setne  sil
  408700:	cmp    ecx,0x2
  408703:	cmovne rdi,rdx
  408707:	lea    rax,[rip+0xa5b2]        # 412cc0 <__bss_start@@Base+0xb30>
  40870e:	mov    rdx,QWORD PTR [rax+rdi*8]
  408712:	add    rdx,0x1
  408716:	mov    QWORD PTR [rax+rdi*8],rdx
  40871a:	test   sil,0x1
  40871e:	jne    408729 <read_function_ast_node@@Base+0x119>
  408724:	jmp    408748 <read_function_ast_node@@Base+0x138>
  408729:	mov    rax,QWORD PTR [rip+0xa5c0]        # 412cf0 <__bss_start@@Base+0xb60>
  408730:	add    rax,0x1
  408734:	mov    QWORD PTR [rip+0xa5b5],rax        # 412cf0 <__bss_start@@Base+0xb60>
  40873b:	mov    QWORD PTR [rbp-0x8],0x0
  408743:	jmp    4088a6 <read_function_ast_node@@Base+0x296>
  408748:	mov    rax,QWORD PTR [rbp-0x28]
  40874c:	mov    QWORD PTR [rbp-0x30],rax
  408750:	mov    rax,QWORD PTR [rbp-0x10]
  408754:	mov    rdi,QWORD PTR [rax]
  408757:	call   404ba0 <next@@Base>
  40875c:	mov    ecx,0x8
  408761:	mov    edi,ecx
  408763:	mov    ecx,0x7
  408768:	mov    edx,ecx
  40876a:	mov    QWORD PTR [rbp-0x28],rax
  40876e:	mov    rax,QWORD PTR [rbp-0x28]
  408772:	mov    ecx,DWORD PTR [rax]
  408774:	cmp    ecx,0x3
  408777:	setne  sil
  40877b:	cmp    ecx,0x3
  40877e:	cmovne rdi,rdx
  408782:	lea    rax,[rip+0xa537]        # 412cc0 <__bss_start@@Base+0xb30>
  408789:	mov    rdx,QWORD PTR [rax+rdi*8]
  40878d:	add    rdx,0x1
  408791:	mov    QWORD PTR [rax+rdi*8],rdx
  408795:	test   sil,0x1
  408799:	jne    4087a4 <read_function_ast_node@@Base+0x194>
  40879f:	jmp    4087c3 <read_function_ast_node@@Base+0x1b3>
  4087a4:	mov    rax,QWORD PTR [rip+0xa55d]        # 412d08 <__bss_start@@Base+0xb78>
  4087ab:	add    rax,0x1
  4087af:	mov    QWORD PTR [rip+0xa552],rax        # 412d08 <__bss_start@@Base+0xb78>
  4087b6:	mov    QWORD PTR [rbp-0x8],0x0
  4087be:	jmp    4088a6 <read_function_ast_node@@Base+0x296>
  4087c3:	mov    rax,QWORD PTR [rbp-0x28]
  4087c7:	mov    rdi,rax
  4087ca:	call   4040c0 <free_token_opar@@Base>
  4087cf:	mov    rax,QWORD PTR [rbp-0x10]
  4087d3:	mov    rdi,QWORD PTR [rax]
  4087d6:	call   404ba0 <next@@Base>
  4087db:	mov    ecx,0xb
  4087e0:	mov    edi,ecx
  4087e2:	mov    ecx,0xa
  4087e7:	mov    edx,ecx
  4087e9:	mov    QWORD PTR [rbp-0x28],rax
  4087ed:	mov    rax,QWORD PTR [rbp-0x28]
  4087f1:	mov    ecx,DWORD PTR [rax]
  4087f3:	cmp    ecx,0x4
  4087f6:	setne  sil
  4087fa:	cmp    ecx,0x4
  4087fd:	cmovne rdi,rdx
  408801:	lea    rax,[rip+0xa4b8]        # 412cc0 <__bss_start@@Base+0xb30>
  408808:	mov    rdx,QWORD PTR [rax+rdi*8]
  40880c:	add    rdx,0x1
  408810:	mov    QWORD PTR [rax+rdi*8],rdx
  408814:	test   sil,0x1
  408818:	jne    408823 <read_function_ast_node@@Base+0x213>
  40881e:	jmp    408842 <read_function_ast_node@@Base+0x232>
  408823:	mov    rax,QWORD PTR [rip+0xa4f6]        # 412d20 <__bss_start@@Base+0xb90>
  40882a:	add    rax,0x1
  40882e:	mov    QWORD PTR [rip+0xa4eb],rax        # 412d20 <__bss_start@@Base+0xb90>
  408835:	mov    QWORD PTR [rbp-0x8],0x0
  40883d:	jmp    4088a6 <read_function_ast_node@@Base+0x296>
  408842:	mov    rax,QWORD PTR [rip+0xa4df]        # 412d28 <__bss_start@@Base+0xb98>
  408849:	add    rax,0x1
  40884d:	mov    QWORD PTR [rip+0xa4d4],rax        # 412d28 <__bss_start@@Base+0xb98>
  408854:	mov    rax,QWORD PTR [rbp-0x28]
  408858:	mov    rdi,rax
  40885b:	call   404110 <free_token_cpar@@Base>
  408860:	mov    rdi,QWORD PTR [rbp-0x10]
  408864:	call   4088d0 <read_body@@Base>
  408869:	mov    ecx,0x20
  40886e:	mov    edi,ecx
  408870:	mov    QWORD PTR [rbp-0x20],rax
  408874:	call   4031a0 <malloc@plt>
  408879:	mov    QWORD PTR [rbp-0x18],rax
  40887d:	mov    rax,QWORD PTR [rbp-0x18]
  408881:	mov    rdi,QWORD PTR [rbp-0x30]
  408885:	mov    rsi,QWORD PTR [rdi+0x8]
  408889:	mov    rdx,QWORD PTR [rbp-0x20]
  40888d:	mov    rdi,rax
  408890:	call   4071d0 <init_node_function@@Base>
  408895:	mov    rdi,QWORD PTR [rbp-0x30]
  408899:	call   404070 <free_token_function@@Base>
  40889e:	mov    rax,QWORD PTR [rbp-0x18]
  4088a2:	mov    QWORD PTR [rbp-0x8],rax
  4088a6:	mov    rax,QWORD PTR [rip+0xa483]        # 412d30 <__bss_start@@Base+0xba0>
  4088ad:	add    rax,0x1
  4088b1:	mov    QWORD PTR [rip+0xa478],rax        # 412d30 <__bss_start@@Base+0xba0>
  4088b8:	mov    rax,QWORD PTR [rbp-0x8]
  4088bc:	add    rsp,0x40
  4088c0:	pop    rbp
  4088c1:	ret    
  4088c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088cc:	nop    DWORD PTR [rax+0x0]

00000000004088d0 <read_body@@Base>:
  4088d0:	push   rbp
  4088d1:	mov    rbp,rsp
  4088d4:	sub    rsp,0x50
  4088d8:	mov    rax,QWORD PTR [rip+0xa461]        # 412d40 <__bss_start@@Base+0xbb0>
  4088df:	add    rax,0x1
  4088e3:	mov    QWORD PTR [rip+0xa456],rax        # 412d40 <__bss_start@@Base+0xbb0>
  4088ea:	mov    QWORD PTR [rbp-0x38],rdi
  4088ee:	mov    rax,QWORD PTR [rbp-0x38]
  4088f2:	mov    QWORD PTR [rbp-0x10],rax
  4088f6:	mov    QWORD PTR [rbp-0x18],0x0
  4088fe:	mov    QWORD PTR [rbp-0x20],0x0
  408906:	mov    QWORD PTR [rbp-0x28],0x0
  40890e:	mov    QWORD PTR [rbp-0x30],0x0
  408916:	mov    rcx,QWORD PTR [rbp-0x10]
  40891a:	mov    rdi,QWORD PTR [rcx]
  40891d:	call   404ba0 <next@@Base>
  408922:	mov    edx,0x2
  408927:	mov    ecx,edx
  408929:	mov    edx,0x1
  40892e:	mov    edi,edx
  408930:	mov    QWORD PTR [rbp-0x30],rax
  408934:	mov    rax,QWORD PTR [rbp-0x30]
  408938:	mov    edx,DWORD PTR [rax]
  40893a:	cmp    edx,0x5
  40893d:	setne  sil
  408941:	cmp    edx,0x5
  408944:	cmovne rcx,rdi
  408948:	lea    rax,[rip+0xa3f1]        # 412d40 <__bss_start@@Base+0xbb0>
  40894f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408953:	add    rdi,0x1
  408957:	mov    QWORD PTR [rax+rcx*8],rdi
  40895b:	test   sil,0x1
  40895f:	jne    40896a <read_body@@Base+0x9a>
  408965:	jmp    408989 <read_body@@Base+0xb9>
  40896a:	mov    rax,QWORD PTR [rip+0xa3e7]        # 412d58 <__bss_start@@Base+0xbc8>
  408971:	add    rax,0x1
  408975:	mov    QWORD PTR [rip+0xa3dc],rax        # 412d58 <__bss_start@@Base+0xbc8>
  40897c:	mov    QWORD PTR [rbp-0x8],0x0
  408984:	jmp    408be9 <read_body@@Base+0x319>
  408989:	mov    rax,QWORD PTR [rip+0xa3d0]        # 412d60 <__bss_start@@Base+0xbd0>
  408990:	add    rax,0x1
  408994:	mov    QWORD PTR [rip+0xa3c5],rax        # 412d60 <__bss_start@@Base+0xbd0>
  40899b:	mov    rax,QWORD PTR [rbp-0x30]
  40899f:	mov    rdi,rax
  4089a2:	call   404160 <free_token_obra@@Base>
  4089a7:	mov    rax,QWORD PTR [rbp-0x10]
  4089ab:	mov    rdi,QWORD PTR [rax]
  4089ae:	call   404ba0 <next@@Base>
  4089b3:	mov    QWORD PTR [rbp-0x30],rax
  4089b7:	mov    eax,0x6
  4089bc:	mov    ecx,eax
  4089be:	mov    eax,0x5
  4089c3:	mov    edx,eax
  4089c5:	mov    rsi,QWORD PTR [rbp-0x30]
  4089c9:	mov    eax,DWORD PTR [rsi]
  4089cb:	cmp    eax,0x6
  4089ce:	setne  dil
  4089d2:	cmp    eax,0x6
  4089d5:	cmovne rcx,rdx
  4089d9:	lea    rdx,[rip+0xa360]        # 412d40 <__bss_start@@Base+0xbb0>
  4089e0:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4089e4:	add    rsi,0x1
  4089e8:	mov    QWORD PTR [rdx+rcx*8],rsi
  4089ec:	test   dil,0x1
  4089f0:	jne    4089fb <read_body@@Base+0x12b>
  4089f6:	jmp    408bc3 <read_body@@Base+0x2f3>
  4089fb:	mov    DWORD PTR [rip+0x9763],0x0        # 412168 <__data_start@@Base+0x20>
  408a05:	mov    rax,QWORD PTR [rbp-0x30]
  408a09:	mov    ecx,DWORD PTR [rax]
  408a0b:	mov    edx,ecx
  408a0d:	sub    edx,0x7
  408a10:	mov    DWORD PTR [rbp-0x3c],ecx
  408a13:	mov    DWORD PTR [rbp-0x40],edx
  408a16:	je     408a35 <read_body@@Base+0x165>
  408a1c:	jmp    408a21 <read_body@@Base+0x151>
  408a21:	mov    eax,DWORD PTR [rbp-0x3c]
  408a24:	sub    eax,0xa
  408a27:	mov    DWORD PTR [rbp-0x44],eax
  408a2a:	je     408a7f <read_body@@Base+0x1af>
  408a30:	jmp    408ac9 <read_body@@Base+0x1f9>
  408a35:	lea    rax,[rip+0x8de4]        # 411820 <_IO_stdin_used@@Base+0x4820>
  408a3c:	add    rax,0x8
  408a40:	lea    rdi,[rip+0x9721]        # 412168 <__data_start@@Base+0x20>
  408a47:	mov    rsi,rax
  408a4a:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  408a4f:	mov    rax,QWORD PTR [rip+0xa33a]        # 412d90 <__bss_start@@Base+0xc00>
  408a56:	add    rax,0x1
  408a5a:	mov    QWORD PTR [rip+0xa32f],rax        # 412d90 <__bss_start@@Base+0xc00>
  408a61:	mov    rax,QWORD PTR [rbp-0x30]
  408a65:	mov    rdi,rax
  408a68:	call   404200 <free_token_return@@Base>
  408a6d:	mov    rdi,QWORD PTR [rbp-0x10]
  408a71:	call   408c10 <read_return_expression@@Base>
  408a76:	mov    QWORD PTR [rbp-0x20],rax
  408a7a:	jmp    408b0b <read_body@@Base+0x23b>
  408a7f:	lea    rax,[rip+0x8d9a]        # 411820 <_IO_stdin_used@@Base+0x4820>
  408a86:	add    rax,0x10
  408a8a:	lea    rdi,[rip+0x96d7]        # 412168 <__data_start@@Base+0x20>
  408a91:	mov    rsi,rax
  408a94:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  408a99:	mov    rax,QWORD PTR [rip+0xa2f8]        # 412d98 <__bss_start@@Base+0xc08>
  408aa0:	add    rax,0x1
  408aa4:	mov    QWORD PTR [rip+0xa2ed],rax        # 412d98 <__bss_start@@Base+0xc08>
  408aab:	mov    rax,QWORD PTR [rbp-0x30]
  408aaf:	mov    rdi,rax
  408ab2:	call   4042f0 <free_token_if@@Base>
  408ab7:	mov    rdi,QWORD PTR [rbp-0x10]
  408abb:	call   408de0 <read_if_statement@@Base>
  408ac0:	mov    QWORD PTR [rbp-0x20],rax
  408ac4:	jmp    408b0b <read_body@@Base+0x23b>
  408ac9:	lea    rdi,[rip+0x9698]        # 412168 <__data_start@@Base+0x20>
  408ad0:	lea    rsi,[rip+0x8d49]        # 411820 <_IO_stdin_used@@Base+0x4820>
  408ad7:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  408adc:	mov    rsi,QWORD PTR [rip+0xa2bd]        # 412da0 <__bss_start@@Base+0xc10>
  408ae3:	add    rsi,0x1
  408ae7:	mov    QWORD PTR [rip+0xa2b2],rsi        # 412da0 <__bss_start@@Base+0xc10>
  408aee:	mov    rsi,QWORD PTR [rbp-0x10]
  408af2:	mov    rdi,QWORD PTR [rsi]
  408af5:	mov    rsi,QWORD PTR [rbp-0x30]
  408af9:	call   404970 <push_back@@Base>
  408afe:	mov    rsi,QWORD PTR [rbp-0x18]
  408b02:	mov    QWORD PTR [rbp-0x8],rsi
  408b06:	jmp    408be9 <read_body@@Base+0x319>
  408b0b:	mov    eax,0xe
  408b10:	mov    ecx,eax
  408b12:	mov    eax,0xd
  408b17:	mov    edx,eax
  408b19:	mov    rsi,QWORD PTR [rbp-0x18]
  408b1d:	cmp    rsi,0x0
  408b21:	setne  dil
  408b25:	cmp    rsi,0x0
  408b29:	cmovne rcx,rdx
  408b2d:	lea    rdx,[rip+0xa20c]        # 412d40 <__bss_start@@Base+0xbb0>
  408b34:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408b38:	add    rsi,0x1
  408b3c:	mov    QWORD PTR [rdx+rcx*8],rsi
  408b40:	test   dil,0x1
  408b44:	jne    408b4f <read_body@@Base+0x27f>
  408b4a:	jmp    408b7a <read_body@@Base+0x2aa>
  408b4f:	mov    rax,QWORD PTR [rip+0xa262]        # 412db8 <__bss_start@@Base+0xc28>
  408b56:	add    rax,0x1
  408b5a:	mov    QWORD PTR [rip+0xa257],rax        # 412db8 <__bss_start@@Base+0xc28>
  408b61:	mov    rax,QWORD PTR [rbp-0x20]
  408b65:	mov    rcx,QWORD PTR [rbp-0x28]
  408b69:	mov    QWORD PTR [rcx+0x8],rax
  408b6d:	mov    rax,QWORD PTR [rbp-0x20]
  408b71:	mov    QWORD PTR [rbp-0x28],rax
  408b75:	jmp    408b9c <read_body@@Base+0x2cc>
  408b7a:	mov    rax,QWORD PTR [rip+0xa23f]        # 412dc0 <__bss_start@@Base+0xc30>
  408b81:	add    rax,0x1
  408b85:	mov    QWORD PTR [rip+0xa234],rax        # 412dc0 <__bss_start@@Base+0xc30>
  408b8c:	mov    rax,QWORD PTR [rbp-0x20]
  408b90:	mov    QWORD PTR [rbp-0x18],rax
  408b94:	mov    rax,QWORD PTR [rbp-0x20]
  408b98:	mov    QWORD PTR [rbp-0x28],rax
  408b9c:	mov    rax,QWORD PTR [rip+0xa225]        # 412dc8 <__bss_start@@Base+0xc38>
  408ba3:	add    rax,0x1
  408ba7:	mov    QWORD PTR [rip+0xa21a],rax        # 412dc8 <__bss_start@@Base+0xc38>
  408bae:	mov    rax,QWORD PTR [rbp-0x10]
  408bb2:	mov    rdi,QWORD PTR [rax]
  408bb5:	call   404ba0 <next@@Base>
  408bba:	mov    QWORD PTR [rbp-0x30],rax
  408bbe:	jmp    4089b7 <read_body@@Base+0xe7>
  408bc3:	mov    rax,QWORD PTR [rip+0xa206]        # 412dd0 <__bss_start@@Base+0xc40>
  408bca:	add    rax,0x1
  408bce:	mov    QWORD PTR [rip+0xa1fb],rax        # 412dd0 <__bss_start@@Base+0xc40>
  408bd5:	mov    rax,QWORD PTR [rbp-0x30]
  408bd9:	mov    rdi,rax
  408bdc:	call   4041b0 <free_token_cbra@@Base>
  408be1:	mov    rax,QWORD PTR [rbp-0x18]
  408be5:	mov    QWORD PTR [rbp-0x8],rax
  408be9:	mov    rax,QWORD PTR [rip+0xa1e8]        # 412dd8 <__bss_start@@Base+0xc48>
  408bf0:	add    rax,0x1
  408bf4:	mov    QWORD PTR [rip+0xa1dd],rax        # 412dd8 <__bss_start@@Base+0xc48>
  408bfb:	mov    rax,QWORD PTR [rbp-0x8]
  408bff:	add    rsp,0x50
  408c03:	pop    rbp
  408c04:	ret    
  408c05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c0f:	nop

0000000000408c10 <read_return_expression@@Base>:
  408c10:	push   rbp
  408c11:	mov    rbp,rsp
  408c14:	sub    rsp,0x40
  408c18:	mov    rax,QWORD PTR [rip+0xa1c1]        # 412de0 <__bss_start@@Base+0xc50>
  408c1f:	add    rax,0x1
  408c23:	mov    QWORD PTR [rip+0xa1b6],rax        # 412de0 <__bss_start@@Base+0xc50>
  408c2a:	mov    QWORD PTR [rbp-0x38],rdi
  408c2e:	mov    rax,QWORD PTR [rbp-0x38]
  408c32:	mov    QWORD PTR [rbp-0x10],rax
  408c36:	mov    QWORD PTR [rbp-0x18],0x0
  408c3e:	mov    QWORD PTR [rbp-0x20],0x0
  408c46:	mov    QWORD PTR [rbp-0x28],0x0
  408c4e:	mov    QWORD PTR [rbp-0x30],0x0
  408c56:	mov    rcx,QWORD PTR [rbp-0x10]
  408c5a:	mov    rdi,QWORD PTR [rcx]
  408c5d:	call   404ba0 <next@@Base>
  408c62:	mov    edx,0x2
  408c67:	mov    ecx,edx
  408c69:	mov    edx,0x1
  408c6e:	mov    edi,edx
  408c70:	mov    QWORD PTR [rbp-0x28],rax
  408c74:	mov    rax,QWORD PTR [rbp-0x28]
  408c78:	mov    edx,DWORD PTR [rax]
  408c7a:	cmp    edx,0x1
  408c7d:	setne  sil
  408c81:	cmp    edx,0x1
  408c84:	cmovne rcx,rdi
  408c88:	lea    rax,[rip+0xa151]        # 412de0 <__bss_start@@Base+0xc50>
  408c8f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408c93:	add    rdi,0x1
  408c97:	mov    QWORD PTR [rax+rcx*8],rdi
  408c9b:	test   sil,0x1
  408c9f:	jne    408caa <read_return_expression@@Base+0x9a>
  408ca5:	jmp    408cc9 <read_return_expression@@Base+0xb9>
  408caa:	mov    rax,QWORD PTR [rip+0xa147]        # 412df8 <__bss_start@@Base+0xc68>
  408cb1:	add    rax,0x1
  408cb5:	mov    QWORD PTR [rip+0xa13c],rax        # 412df8 <__bss_start@@Base+0xc68>
  408cbc:	mov    QWORD PTR [rbp-0x8],0x0
  408cc4:	jmp    408db6 <read_return_expression@@Base+0x1a6>
  408cc9:	mov    eax,0x18
  408cce:	mov    edi,eax
  408cd0:	mov    rcx,QWORD PTR [rbp-0x28]
  408cd4:	mov    QWORD PTR [rbp-0x30],rcx
  408cd8:	call   4031a0 <malloc@plt>
  408cdd:	mov    QWORD PTR [rbp-0x20],rax
  408ce1:	mov    rax,QWORD PTR [rbp-0x20]
  408ce5:	mov    rcx,QWORD PTR [rbp-0x30]
  408ce9:	mov    esi,DWORD PTR [rcx+0x4]
  408cec:	mov    rdi,rax
  408cef:	call   407170 <init_node_int@@Base>
  408cf4:	mov    rdi,QWORD PTR [rbp-0x30]
  408cf8:	call   404020 <free_token_int_value@@Base>
  408cfd:	mov    esi,0x18
  408d02:	mov    edi,esi
  408d04:	call   4031a0 <malloc@plt>
  408d09:	mov    QWORD PTR [rbp-0x18],rax
  408d0d:	mov    rax,QWORD PTR [rbp-0x18]
  408d11:	mov    rsi,QWORD PTR [rbp-0x20]
  408d15:	mov    rdi,rax
  408d18:	call   407250 <init_node_return@@Base>
  408d1d:	mov    rax,QWORD PTR [rbp-0x10]
  408d21:	mov    rdi,QWORD PTR [rax]
  408d24:	call   404ba0 <next@@Base>
  408d29:	mov    edx,0x5
  408d2e:	mov    ecx,edx
  408d30:	mov    edx,0x4
  408d35:	mov    esi,edx
  408d37:	mov    QWORD PTR [rbp-0x28],rax
  408d3b:	mov    rax,QWORD PTR [rbp-0x28]
  408d3f:	mov    edx,DWORD PTR [rax]
  408d41:	cmp    edx,0x8
  408d44:	setne  r8b
  408d48:	cmp    edx,0x8
  408d4b:	cmovne rcx,rsi
  408d4f:	lea    rax,[rip+0xa08a]        # 412de0 <__bss_start@@Base+0xc50>
  408d56:	mov    rsi,QWORD PTR [rax+rcx*8]
  408d5a:	add    rsi,0x1
  408d5e:	mov    QWORD PTR [rax+rcx*8],rsi
  408d62:	test   r8b,0x1
  408d66:	jne    408d71 <read_return_expression@@Base+0x161>
  408d6c:	jmp    408d90 <read_return_expression@@Base+0x180>
  408d71:	mov    rax,QWORD PTR [rip+0xa098]        # 412e10 <__bss_start@@Base+0xc80>
  408d78:	add    rax,0x1
  408d7c:	mov    QWORD PTR [rip+0xa08d],rax        # 412e10 <__bss_start@@Base+0xc80>
  408d83:	mov    QWORD PTR [rbp-0x8],0x0
  408d8b:	jmp    408db6 <read_return_expression@@Base+0x1a6>
  408d90:	mov    rax,QWORD PTR [rip+0xa081]        # 412e18 <__bss_start@@Base+0xc88>
  408d97:	add    rax,0x1
  408d9b:	mov    QWORD PTR [rip+0xa076],rax        # 412e18 <__bss_start@@Base+0xc88>
  408da2:	mov    rax,QWORD PTR [rbp-0x28]
  408da6:	mov    rdi,rax
  408da9:	call   404250 <free_token_semicolon@@Base>
  408dae:	mov    rax,QWORD PTR [rbp-0x18]
  408db2:	mov    QWORD PTR [rbp-0x8],rax
  408db6:	mov    rax,QWORD PTR [rip+0xa063]        # 412e20 <__bss_start@@Base+0xc90>
  408dbd:	add    rax,0x1
  408dc1:	mov    QWORD PTR [rip+0xa058],rax        # 412e20 <__bss_start@@Base+0xc90>
  408dc8:	mov    rax,QWORD PTR [rbp-0x8]
  408dcc:	add    rsp,0x40
  408dd0:	pop    rbp
  408dd1:	ret    
  408dd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ddc:	nop    DWORD PTR [rax+0x0]

0000000000408de0 <read_if_statement@@Base>:
  408de0:	push   rbp
  408de1:	mov    rbp,rsp
  408de4:	sub    rsp,0x40
  408de8:	mov    rax,QWORD PTR [rip+0xa041]        # 412e30 <__bss_start@@Base+0xca0>
  408def:	add    rax,0x1
  408df3:	mov    QWORD PTR [rip+0xa036],rax        # 412e30 <__bss_start@@Base+0xca0>
  408dfa:	mov    QWORD PTR [rbp-0x40],rdi
  408dfe:	mov    rax,QWORD PTR [rbp-0x40]
  408e02:	mov    QWORD PTR [rbp-0x10],rax
  408e06:	mov    QWORD PTR [rbp-0x18],0x0
  408e0e:	mov    QWORD PTR [rbp-0x20],0x0
  408e16:	mov    QWORD PTR [rbp-0x28],0x0
  408e1e:	mov    QWORD PTR [rbp-0x30],0x0
  408e26:	mov    QWORD PTR [rbp-0x38],0x0
  408e2e:	mov    rcx,QWORD PTR [rbp-0x10]
  408e32:	mov    rdi,QWORD PTR [rcx]
  408e35:	call   404ba0 <next@@Base>
  408e3a:	mov    edx,0x2
  408e3f:	mov    ecx,edx
  408e41:	mov    edx,0x1
  408e46:	mov    edi,edx
  408e48:	mov    QWORD PTR [rbp-0x38],rax
  408e4c:	mov    rax,QWORD PTR [rbp-0x38]
  408e50:	mov    edx,DWORD PTR [rax]
  408e52:	cmp    edx,0x3
  408e55:	setne  sil
  408e59:	cmp    edx,0x3
  408e5c:	cmovne rcx,rdi
  408e60:	lea    rax,[rip+0x9fc9]        # 412e30 <__bss_start@@Base+0xca0>
  408e67:	mov    rdi,QWORD PTR [rax+rcx*8]
  408e6b:	add    rdi,0x1
  408e6f:	mov    QWORD PTR [rax+rcx*8],rdi
  408e73:	test   sil,0x1
  408e77:	jne    408e82 <read_if_statement@@Base+0xa2>
  408e7d:	jmp    408ea1 <read_if_statement@@Base+0xc1>
  408e82:	mov    rax,QWORD PTR [rip+0x9fbf]        # 412e48 <__bss_start@@Base+0xcb8>
  408e89:	add    rax,0x1
  408e8d:	mov    QWORD PTR [rip+0x9fb4],rax        # 412e48 <__bss_start@@Base+0xcb8>
  408e94:	mov    QWORD PTR [rbp-0x8],0x0
  408e9c:	jmp    408faf <read_if_statement@@Base+0x1cf>
  408ea1:	mov    rax,QWORD PTR [rbp-0x38]
  408ea5:	mov    rdi,rax
  408ea8:	call   4040c0 <free_token_opar@@Base>
  408ead:	mov    rdi,QWORD PTR [rbp-0x10]
  408eb1:	call   408fd0 <read_boolean_expression@@Base>
  408eb6:	mov    QWORD PTR [rbp-0x20],rax
  408eba:	mov    rdi,QWORD PTR [rbp-0x10]
  408ebe:	call   4088d0 <read_body@@Base>
  408ec3:	mov    QWORD PTR [rbp-0x28],rax
  408ec7:	mov    rax,QWORD PTR [rbp-0x10]
  408ecb:	mov    rdi,QWORD PTR [rax]
  408ece:	call   404ba0 <next@@Base>
  408ed3:	mov    ecx,0x5
  408ed8:	mov    edi,ecx
  408eda:	mov    ecx,0x4
  408edf:	mov    edx,ecx
  408ee1:	mov    QWORD PTR [rbp-0x38],rax
  408ee5:	mov    rax,QWORD PTR [rbp-0x38]
  408ee9:	mov    ecx,DWORD PTR [rax]
  408eeb:	cmp    ecx,0xb
  408eee:	sete   sil
  408ef2:	cmp    ecx,0xb
  408ef5:	cmove  rdi,rdx
  408ef9:	lea    rax,[rip+0x9f30]        # 412e30 <__bss_start@@Base+0xca0>
  408f00:	mov    rdx,QWORD PTR [rax+rdi*8]
  408f04:	add    rdx,0x1
  408f08:	mov    QWORD PTR [rax+rdi*8],rdx
  408f0c:	test   sil,0x1
  408f10:	jne    408f1b <read_if_statement@@Base+0x13b>
  408f16:	jmp    408f4b <read_if_statement@@Base+0x16b>
  408f1b:	mov    rax,QWORD PTR [rip+0x9f3e]        # 412e60 <__bss_start@@Base+0xcd0>
  408f22:	add    rax,0x1
  408f26:	mov    QWORD PTR [rip+0x9f33],rax        # 412e60 <__bss_start@@Base+0xcd0>
  408f2d:	mov    rax,QWORD PTR [rbp-0x38]
  408f31:	mov    rdi,rax
  408f34:	call   404340 <free_token_else@@Base>
  408f39:	mov    rdi,QWORD PTR [rbp-0x10]
  408f3d:	call   4088d0 <read_body@@Base>
  408f42:	mov    QWORD PTR [rbp-0x30],rax
  408f46:	jmp    408f6d <read_if_statement@@Base+0x18d>
  408f4b:	mov    rax,QWORD PTR [rip+0x9f16]        # 412e68 <__bss_start@@Base+0xcd8>
  408f52:	add    rax,0x1
  408f56:	mov    QWORD PTR [rip+0x9f0b],rax        # 412e68 <__bss_start@@Base+0xcd8>
  408f5d:	mov    rax,QWORD PTR [rbp-0x10]
  408f61:	mov    rdi,QWORD PTR [rax]
  408f64:	mov    rsi,QWORD PTR [rbp-0x38]
  408f68:	call   404970 <push_back@@Base>
  408f6d:	mov    eax,0x28
  408f72:	mov    edi,eax
  408f74:	mov    rcx,QWORD PTR [rip+0x9ef5]        # 412e70 <__bss_start@@Base+0xce0>
  408f7b:	add    rcx,0x1
  408f7f:	mov    QWORD PTR [rip+0x9eea],rcx        # 412e70 <__bss_start@@Base+0xce0>
  408f86:	call   4031a0 <malloc@plt>
  408f8b:	mov    QWORD PTR [rbp-0x18],rax
  408f8f:	mov    rax,QWORD PTR [rbp-0x18]
  408f93:	mov    rsi,QWORD PTR [rbp-0x20]
  408f97:	mov    rdx,QWORD PTR [rbp-0x28]
  408f9b:	mov    rcx,QWORD PTR [rbp-0x30]
  408f9f:	mov    rdi,rax
  408fa2:	call   4072c0 <init_node_if@@Base>
  408fa7:	mov    rax,QWORD PTR [rbp-0x18]
  408fab:	mov    QWORD PTR [rbp-0x8],rax
  408faf:	mov    rax,QWORD PTR [rip+0x9ec2]        # 412e78 <__bss_start@@Base+0xce8>
  408fb6:	add    rax,0x1
  408fba:	mov    QWORD PTR [rip+0x9eb7],rax        # 412e78 <__bss_start@@Base+0xce8>
  408fc1:	mov    rax,QWORD PTR [rbp-0x8]
  408fc5:	add    rsp,0x40
  408fc9:	pop    rbp
  408fca:	ret    
  408fcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408fd0 <read_boolean_expression@@Base>:
  408fd0:	push   rbp
  408fd1:	mov    rbp,rsp
  408fd4:	sub    rsp,0x40
  408fd8:	mov    rax,QWORD PTR [rip+0x9ea1]        # 412e80 <__bss_start@@Base+0xcf0>
  408fdf:	add    rax,0x1
  408fe3:	mov    QWORD PTR [rip+0x9e96],rax        # 412e80 <__bss_start@@Base+0xcf0>
  408fea:	mov    QWORD PTR [rbp-0x28],rdi
  408fee:	mov    rax,QWORD PTR [rip+0x9e93]        # 412e88 <__bss_start@@Base+0xcf8>
  408ff5:	add    rax,0x1
  408ff9:	mov    QWORD PTR [rip+0x9e88],rax        # 412e88 <__bss_start@@Base+0xcf8>
  409000:	mov    rax,QWORD PTR [rbp-0x28]
  409004:	mov    QWORD PTR [rbp-0x8],rax
  409008:	mov    QWORD PTR [rbp-0x10],0x0
  409010:	mov    QWORD PTR [rbp-0x18],0x0
  409018:	mov    DWORD PTR [rbp-0x20],0x0
  40901f:	mov    rcx,QWORD PTR [rbp-0x8]
  409023:	mov    rdi,QWORD PTR [rcx]
  409026:	call   404ba0 <next@@Base>
  40902b:	mov    QWORD PTR [rbp-0x18],rax
  40902f:	mov    eax,0x3
  409034:	mov    ecx,eax
  409036:	mov    eax,0x2
  40903b:	mov    edx,eax
  40903d:	mov    rsi,QWORD PTR [rbp-0x18]
  409041:	mov    eax,DWORD PTR [rsi]
  409043:	cmp    eax,0x4
  409046:	setne  dil
  40904a:	cmp    eax,0x4
  40904d:	cmovne rcx,rdx
  409051:	lea    rdx,[rip+0x9e28]        # 412e80 <__bss_start@@Base+0xcf0>
  409058:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40905c:	add    rsi,0x1
  409060:	mov    QWORD PTR [rdx+rcx*8],rsi
  409064:	test   dil,0x1
  409068:	jne    409073 <read_boolean_expression@@Base+0xa3>
  40906e:	jmp    409209 <read_boolean_expression@@Base+0x239>
  409073:	mov    DWORD PTR [rip+0x90ef],0x0        # 41216c <__data_start@@Base+0x24>
  40907d:	mov    rax,QWORD PTR [rbp-0x18]
  409081:	mov    ecx,DWORD PTR [rax]
  409083:	mov    edx,ecx
  409085:	sub    edx,0x1
  409088:	mov    DWORD PTR [rbp-0x2c],ecx
  40908b:	mov    DWORD PTR [rbp-0x30],edx
  40908e:	je     4090c1 <read_boolean_expression@@Base+0xf1>
  409094:	jmp    409099 <read_boolean_expression@@Base+0xc9>
  409099:	mov    eax,DWORD PTR [rbp-0x2c]
  40909c:	sub    eax,0x3
  40909f:	mov    DWORD PTR [rbp-0x34],eax
  4090a2:	je     409161 <read_boolean_expression@@Base+0x191>
  4090a8:	jmp    4090ad <read_boolean_expression@@Base+0xdd>
  4090ad:	mov    eax,DWORD PTR [rbp-0x2c]
  4090b0:	sub    eax,0xc
  4090b3:	mov    DWORD PTR [rbp-0x38],eax
  4090b6:	je     40911a <read_boolean_expression@@Base+0x14a>
  4090bc:	jmp    4091aa <read_boolean_expression@@Base+0x1da>
  4090c1:	lea    rax,[rip+0x8778]        # 411840 <_IO_stdin_used@@Base+0x4840>
  4090c8:	add    rax,0x8
  4090cc:	lea    rdi,[rip+0x9099]        # 41216c <__data_start@@Base+0x24>
  4090d3:	mov    rsi,rax
  4090d6:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  4090db:	mov    rax,QWORD PTR [rip+0x9dde]        # 412ec0 <__bss_start@@Base+0xd30>
  4090e2:	add    rax,0x1
  4090e6:	mov    QWORD PTR [rip+0x9dd3],rax        # 412ec0 <__bss_start@@Base+0xd30>
  4090ed:	mov    rax,QWORD PTR [rbp-0x8]
  4090f1:	mov    rdi,QWORD PTR [rax]
  4090f4:	mov    rsi,QWORD PTR [rbp-0x18]
  4090f8:	call   404970 <push_back@@Base>
  4090fd:	mov    rdi,QWORD PTR [rbp-0x8]
  409101:	mov    rsi,QWORD PTR [rbp-0x10]
  409105:	mov    ecx,DWORD PTR [rbp-0x1c]
  409108:	lea    rdx,[rbp-0x20]
  40910c:	call   409240 <read_single_boolean_expression@@Base>
  409111:	mov    QWORD PTR [rbp-0x10],rax
  409115:	jmp    4091e2 <read_boolean_expression@@Base+0x212>
  40911a:	lea    rax,[rip+0x871f]        # 411840 <_IO_stdin_used@@Base+0x4840>
  409121:	add    rax,0x10
  409125:	lea    rdi,[rip+0x9040]        # 41216c <__data_start@@Base+0x24>
  40912c:	mov    rsi,rax
  40912f:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  409134:	mov    rax,QWORD PTR [rip+0x9d8d]        # 412ec8 <__bss_start@@Base+0xd38>
  40913b:	add    rax,0x1
  40913f:	mov    QWORD PTR [rip+0x9d82],rax        # 412ec8 <__bss_start@@Base+0xd38>
  409146:	mov    rax,QWORD PTR [rbp-0x18]
  40914a:	mov    rdi,rax
  40914d:	call   407ad0 <get_boolean_op_value@@Base>
  409152:	mov    DWORD PTR [rbp-0x1c],eax
  409155:	mov    DWORD PTR [rbp-0x20],0x1
  40915c:	jmp    4091e2 <read_boolean_expression@@Base+0x212>
  409161:	lea    rax,[rip+0x86d8]        # 411840 <_IO_stdin_used@@Base+0x4840>
  409168:	add    rax,0x18
  40916c:	lea    rdi,[rip+0x8ff9]        # 41216c <__data_start@@Base+0x24>
  409173:	mov    rsi,rax
  409176:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  40917b:	mov    rax,QWORD PTR [rip+0x9d4e]        # 412ed0 <__bss_start@@Base+0xd40>
  409182:	add    rax,0x1
  409186:	mov    QWORD PTR [rip+0x9d43],rax        # 412ed0 <__bss_start@@Base+0xd40>
  40918d:	mov    rdi,QWORD PTR [rbp-0x8]
  409191:	mov    rsi,QWORD PTR [rbp-0x10]
  409195:	mov    ecx,DWORD PTR [rbp-0x1c]
  409198:	lea    rdx,[rbp-0x20]
  40919c:	call   409240 <read_single_boolean_expression@@Base>
  4091a1:	mov    QWORD PTR [rbp-0x10],rax
  4091a5:	jmp    4091e2 <read_boolean_expression@@Base+0x212>
  4091aa:	lea    rdi,[rip+0x8fbb]        # 41216c <__data_start@@Base+0x24>
  4091b1:	lea    rsi,[rip+0x8688]        # 411840 <_IO_stdin_used@@Base+0x4840>
  4091b8:	call   409960 <read_boolean_unary_expression@@Base+0x200>
  4091bd:	mov    rsi,QWORD PTR [rip+0x8e2c]        # 411ff0 <stderr@GLIBC_2.2.5>
  4091c4:	mov    rdi,QWORD PTR [rsi]
  4091c7:	lea    rsi,[rip+0x45c7]        # 40d795 <_IO_stdin_used@@Base+0x795>
  4091ce:	mov    al,0x0
  4091d0:	call   403150 <fprintf@plt>
  4091d5:	mov    edi,0x1
  4091da:	mov    DWORD PTR [rbp-0x3c],eax
  4091dd:	call   403250 <exit@plt>
  4091e2:	mov    rax,QWORD PTR [rip+0x9cef]        # 412ed8 <__bss_start@@Base+0xd48>
  4091e9:	add    rax,0x1
  4091ed:	mov    QWORD PTR [rip+0x9ce4],rax        # 412ed8 <__bss_start@@Base+0xd48>
  4091f4:	mov    rax,QWORD PTR [rbp-0x8]
  4091f8:	mov    rdi,QWORD PTR [rax]
  4091fb:	call   404ba0 <next@@Base>
  409200:	mov    QWORD PTR [rbp-0x18],rax
  409204:	jmp    40902f <read_boolean_expression@@Base+0x5f>
  409209:	mov    rax,QWORD PTR [rip+0x9cd0]        # 412ee0 <__bss_start@@Base+0xd50>
  409210:	add    rax,0x1
  409214:	mov    QWORD PTR [rip+0x9cc5],rax        # 412ee0 <__bss_start@@Base+0xd50>
  40921b:	mov    rax,QWORD PTR [rbp-0x18]
  40921f:	mov    rdi,rax
  409222:	call   404110 <free_token_cpar@@Base>
  409227:	mov    rax,QWORD PTR [rbp-0x10]
  40922b:	add    rsp,0x40
  40922f:	pop    rbp
  409230:	ret    
  409231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40923b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409240 <read_single_boolean_expression@@Base>:
  409240:	push   rbp
  409241:	mov    rbp,rsp
  409244:	sub    rsp,0x70
  409248:	mov    rax,QWORD PTR [rip+0x9ca1]        # 412ef0 <__bss_start@@Base+0xd60>
  40924f:	add    rax,0x1
  409253:	mov    QWORD PTR [rip+0x9c96],rax        # 412ef0 <__bss_start@@Base+0xd60>
  40925a:	mov    QWORD PTR [rbp-0x50],rdx
  40925e:	mov    QWORD PTR [rbp-0x58],rsi
  409262:	mov    QWORD PTR [rbp-0x60],rdi
  409266:	mov    DWORD PTR [rbp-0x64],ecx
  409269:	mov    eax,0x2
  40926e:	mov    ecx,eax
  409270:	mov    eax,0x1
  409275:	mov    edx,eax
  409277:	mov    rsi,QWORD PTR [rbp-0x60]
  40927b:	mov    QWORD PTR [rbp-0x8],rsi
  40927f:	mov    rdi,QWORD PTR [rbp-0x58]
  409283:	mov    QWORD PTR [rbp-0x10],rdi
  409287:	mov    r8,QWORD PTR [rbp-0x50]
  40928b:	mov    QWORD PTR [rbp-0x18],r8
  40928f:	mov    eax,DWORD PTR [rbp-0x64]
  409292:	mov    DWORD PTR [rbp-0x1c],eax
  409295:	mov    QWORD PTR [rbp-0x28],0x0
  40929d:	mov    QWORD PTR [rbp-0x30],0x0
  4092a5:	mov    QWORD PTR [rbp-0x38],0x0
  4092ad:	mov    QWORD PTR [rbp-0x40],0x0
  4092b5:	mov    QWORD PTR [rbp-0x48],0x0
  4092bd:	mov    r9,QWORD PTR [rbp-0x10]
  4092c1:	cmp    r9,0x0
  4092c5:	sete   r10b
  4092c9:	cmp    r9,0x0
  4092cd:	cmove  rcx,rdx
  4092d1:	lea    rdx,[rip+0x9c18]        # 412ef0 <__bss_start@@Base+0xd60>
  4092d8:	mov    r9,QWORD PTR [rdx+rcx*8]
  4092dc:	add    r9,0x1
  4092e0:	mov    QWORD PTR [rdx+rcx*8],r9
  4092e4:	test   r10b,0x1
  4092e8:	jne    4092f3 <read_single_boolean_expression@@Base+0xb3>
  4092ee:	jmp    409317 <read_single_boolean_expression@@Base+0xd7>
  4092f3:	mov    rax,QWORD PTR [rip+0x9c0e]        # 412f08 <__bss_start@@Base+0xd78>
  4092fa:	add    rax,0x1
  4092fe:	mov    QWORD PTR [rip+0x9c03],rax        # 412f08 <__bss_start@@Base+0xd78>
  409305:	mov    rdi,QWORD PTR [rbp-0x8]
  409309:	call   409420 <read_boolean_binary_expression@@Base>
  40930e:	mov    QWORD PTR [rbp-0x30],rax
  409312:	jmp    4093fe <read_single_boolean_expression@@Base+0x1be>
  409317:	mov    eax,0x5
  40931c:	mov    ecx,eax
  40931e:	mov    eax,0x4
  409323:	mov    edx,eax
  409325:	mov    rsi,QWORD PTR [rbp-0x18]
  409329:	mov    eax,DWORD PTR [rsi]
  40932b:	cmp    eax,0x0
  40932e:	setne  dil
  409332:	cmp    eax,0x0
  409335:	cmovne rcx,rdx
  409339:	lea    rdx,[rip+0x9bb0]        # 412ef0 <__bss_start@@Base+0xd60>
  409340:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409344:	add    rsi,0x1
  409348:	mov    QWORD PTR [rdx+rcx*8],rsi
  40934c:	test   dil,0x1
  409350:	jne    40935b <read_single_boolean_expression@@Base+0x11b>
  409356:	jmp    4093c0 <read_single_boolean_expression@@Base+0x180>
  40935b:	mov    rax,QWORD PTR [rip+0x9bbe]        # 412f20 <__bss_start@@Base+0xd90>
  409362:	add    rax,0x1
  409366:	mov    QWORD PTR [rip+0x9bb3],rax        # 412f20 <__bss_start@@Base+0xd90>
  40936d:	mov    rdi,QWORD PTR [rbp-0x8]
  409371:	call   409420 <read_boolean_binary_expression@@Base>
  409376:	mov    ecx,0x28
  40937b:	mov    edi,ecx
  40937d:	mov    QWORD PTR [rbp-0x38],rax
  409381:	mov    rax,QWORD PTR [rbp-0x30]
  409385:	mov    QWORD PTR [rbp-0x40],rax
  409389:	mov    rax,QWORD PTR [rbp-0x38]
  40938d:	mov    QWORD PTR [rbp-0x48],rax
  409391:	call   4031a0 <malloc@plt>
  409396:	mov    QWORD PTR [rbp-0x30],rax
  40939a:	mov    rax,QWORD PTR [rbp-0x30]
  40939e:	mov    esi,DWORD PTR [rbp-0x1c]
  4093a1:	mov    rdx,QWORD PTR [rbp-0x40]
  4093a5:	mov    rcx,QWORD PTR [rbp-0x48]
  4093a9:	mov    rdi,rax
  4093ac:	call   407360 <init_node_boolean_operator@@Base>
  4093b1:	mov    rax,QWORD PTR [rbp-0x18]
  4093b5:	mov    DWORD PTR [rax],0x0
  4093bb:	jmp    4093ec <read_single_boolean_expression@@Base+0x1ac>
  4093c0:	mov    rax,QWORD PTR [rip+0x8c29]        # 411ff0 <stderr@GLIBC_2.2.5>
  4093c7:	mov    rdi,QWORD PTR [rax]
  4093ca:	mov    rax,QWORD PTR [rbp-0x28]
  4093ce:	mov    edx,DWORD PTR [rax+0x4]
  4093d1:	lea    rsi,[rip+0x43df]        # 40d7b7 <_IO_stdin_used@@Base+0x7b7>
  4093d8:	mov    al,0x0
  4093da:	call   403150 <fprintf@plt>
  4093df:	mov    edi,0x1
  4093e4:	mov    DWORD PTR [rbp-0x68],eax
  4093e7:	call   403250 <exit@plt>
  4093ec:	mov    rax,QWORD PTR [rip+0x9b35]        # 412f28 <__bss_start@@Base+0xd98>
  4093f3:	add    rax,0x1
  4093f7:	mov    QWORD PTR [rip+0x9b2a],rax        # 412f28 <__bss_start@@Base+0xd98>
  4093fe:	mov    rax,QWORD PTR [rip+0x9b2b]        # 412f30 <__bss_start@@Base+0xda0>
  409405:	add    rax,0x1
  409409:	mov    QWORD PTR [rip+0x9b20],rax        # 412f30 <__bss_start@@Base+0xda0>
  409410:	mov    rax,QWORD PTR [rbp-0x30]
  409414:	add    rsp,0x70
  409418:	pop    rbp
  409419:	ret    
  40941a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409420 <read_boolean_binary_expression@@Base>:
  409420:	push   rbp
  409421:	mov    rbp,rsp
  409424:	sub    rsp,0x60
  409428:	mov    rax,QWORD PTR [rip+0x9b11]        # 412f40 <__bss_start@@Base+0xdb0>
  40942f:	add    rax,0x1
  409433:	mov    QWORD PTR [rip+0x9b06],rax        # 412f40 <__bss_start@@Base+0xdb0>
  40943a:	mov    QWORD PTR [rbp-0x58],rdi
  40943e:	mov    rax,QWORD PTR [rbp-0x58]
  409442:	mov    QWORD PTR [rbp-0x10],rax
  409446:	mov    QWORD PTR [rbp-0x18],0x0
  40944e:	mov    QWORD PTR [rbp-0x20],0x0
  409456:	mov    QWORD PTR [rbp-0x28],0x0
  40945e:	mov    QWORD PTR [rbp-0x30],0x0
  409466:	mov    QWORD PTR [rbp-0x38],0x0
  40946e:	mov    QWORD PTR [rbp-0x40],0x0
  409476:	mov    QWORD PTR [rbp-0x48],0x0
  40947e:	mov    rcx,QWORD PTR [rbp-0x10]
  409482:	mov    rdi,QWORD PTR [rcx]
  409485:	call   404ba0 <next@@Base>
  40948a:	mov    edx,0x2
  40948f:	mov    ecx,edx
  409491:	mov    edx,0x1
  409496:	mov    edi,edx
  409498:	mov    QWORD PTR [rbp-0x38],rax
  40949c:	mov    rax,QWORD PTR [rbp-0x38]
  4094a0:	mov    edx,DWORD PTR [rax]
  4094a2:	cmp    edx,0x1
  4094a5:	setne  sil
  4094a9:	cmp    edx,0x1
  4094ac:	cmovne rcx,rdi
  4094b0:	lea    rax,[rip+0x9a89]        # 412f40 <__bss_start@@Base+0xdb0>
  4094b7:	mov    rdi,QWORD PTR [rax+rcx*8]
  4094bb:	add    rdi,0x1
  4094bf:	mov    QWORD PTR [rax+rcx*8],rdi
  4094c3:	test   sil,0x1
  4094c7:	jne    4094d2 <read_boolean_binary_expression@@Base+0xb2>
  4094cd:	jmp    409569 <read_boolean_binary_expression@@Base+0x149>
  4094d2:	mov    eax,0x4
  4094d7:	mov    ecx,eax
  4094d9:	mov    eax,0x3
  4094de:	mov    edx,eax
  4094e0:	mov    rsi,QWORD PTR [rbp-0x38]
  4094e4:	mov    eax,DWORD PTR [rsi]
  4094e6:	cmp    eax,0xc
  4094e9:	sete   dil
  4094ed:	cmp    eax,0xc
  4094f0:	cmove  rcx,rdx
  4094f4:	lea    rdx,[rip+0x9a45]        # 412f40 <__bss_start@@Base+0xdb0>
  4094fb:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4094ff:	add    rsi,0x1
  409503:	mov    QWORD PTR [rdx+rcx*8],rsi
  409507:	test   dil,0x1
  40950b:	jne    409516 <read_boolean_binary_expression@@Base+0xf6>
  409511:	jmp    40954a <read_boolean_binary_expression@@Base+0x12a>
  409516:	mov    rax,QWORD PTR [rip+0x9a4b]        # 412f68 <__bss_start@@Base+0xdd8>
  40951d:	add    rax,0x1
  409521:	mov    QWORD PTR [rip+0x9a40],rax        # 412f68 <__bss_start@@Base+0xdd8>
  409528:	mov    rax,QWORD PTR [rbp-0x10]
  40952c:	mov    rdi,QWORD PTR [rax]
  40952f:	mov    rsi,QWORD PTR [rbp-0x38]
  409533:	call   404970 <push_back@@Base>
  409538:	mov    rdi,QWORD PTR [rbp-0x10]
  40953c:	call   409760 <read_boolean_unary_expression@@Base>
  409541:	mov    QWORD PTR [rbp-0x8],rax
  409545:	jmp    409735 <read_boolean_binary_expression@@Base+0x315>
  40954a:	mov    rax,QWORD PTR [rip+0x9a1f]        # 412f70 <__bss_start@@Base+0xde0>
  409551:	add    rax,0x1
  409555:	mov    QWORD PTR [rip+0x9a14],rax        # 412f70 <__bss_start@@Base+0xde0>
  40955c:	mov    QWORD PTR [rbp-0x8],0x0
  409564:	jmp    409735 <read_boolean_binary_expression@@Base+0x315>
  409569:	mov    eax,0x18
  40956e:	mov    edi,eax
  409570:	mov    rcx,QWORD PTR [rbp-0x38]
  409574:	mov    QWORD PTR [rbp-0x40],rcx
  409578:	call   4031a0 <malloc@plt>
  40957d:	mov    QWORD PTR [rbp-0x20],rax
  409581:	mov    rax,QWORD PTR [rbp-0x20]
  409585:	mov    rcx,QWORD PTR [rbp-0x40]
  409589:	mov    esi,DWORD PTR [rcx+0x4]
  40958c:	mov    rdi,rax
  40958f:	call   407170 <init_node_int@@Base>
  409594:	mov    rdi,QWORD PTR [rbp-0x40]
  409598:	call   404020 <free_token_int_value@@Base>
  40959d:	mov    rax,QWORD PTR [rbp-0x20]
  4095a1:	mov    QWORD PTR [rbp-0x28],rax
  4095a5:	mov    rax,QWORD PTR [rbp-0x10]
  4095a9:	mov    rdi,QWORD PTR [rax]
  4095ac:	call   404ba0 <next@@Base>
  4095b1:	mov    esi,0x8
  4095b6:	mov    ecx,esi
  4095b8:	mov    esi,0x7
  4095bd:	mov    edi,esi
  4095bf:	mov    QWORD PTR [rbp-0x38],rax
  4095c3:	mov    rax,QWORD PTR [rbp-0x38]
  4095c7:	mov    esi,DWORD PTR [rax]
  4095c9:	cmp    esi,0xc
  4095cc:	setne  dl
  4095cf:	cmp    esi,0xc
  4095d2:	cmovne rcx,rdi
  4095d6:	lea    rax,[rip+0x9963]        # 412f40 <__bss_start@@Base+0xdb0>
  4095dd:	mov    rdi,QWORD PTR [rax+rcx*8]
  4095e1:	add    rdi,0x1
  4095e5:	mov    QWORD PTR [rax+rcx*8],rdi
  4095e9:	test   dl,0x1
  4095ec:	jne    4095f7 <read_boolean_binary_expression@@Base+0x1d7>
  4095f2:	jmp    40961f <read_boolean_binary_expression@@Base+0x1ff>
  4095f7:	mov    rax,QWORD PTR [rip+0x998a]        # 412f88 <__bss_start@@Base+0xdf8>
  4095fe:	add    rax,0x1
  409602:	mov    QWORD PTR [rip+0x997f],rax        # 412f88 <__bss_start@@Base+0xdf8>
  409609:	mov    rdi,QWORD PTR [rbp-0x28]
  40960d:	call   407400 <free_node@@Base>
  409612:	mov    QWORD PTR [rbp-0x8],0x0
  40961a:	jmp    409735 <read_boolean_binary_expression@@Base+0x315>
  40961f:	mov    rax,QWORD PTR [rbp-0x38]
  409623:	mov    QWORD PTR [rbp-0x48],rax
  409627:	mov    rdi,QWORD PTR [rbp-0x48]
  40962b:	call   407ad0 <get_boolean_op_value@@Base>
  409630:	mov    DWORD PTR [rbp-0x4c],eax
  409633:	mov    rdi,QWORD PTR [rbp-0x48]
  409637:	call   404390 <free_token_boolean_op@@Base>
  40963c:	mov    rdi,QWORD PTR [rbp-0x10]
  409640:	mov    rdi,QWORD PTR [rdi]
  409643:	call   404ba0 <next@@Base>
  409648:	mov    ecx,0xb
  40964d:	mov    edi,ecx
  40964f:	mov    ecx,0xa
  409654:	mov    edx,ecx
  409656:	mov    QWORD PTR [rbp-0x38],rax
  40965a:	mov    rax,QWORD PTR [rbp-0x38]
  40965e:	mov    ecx,DWORD PTR [rax]
  409660:	cmp    ecx,0x1
  409663:	setne  sil
  409667:	cmp    ecx,0x1
  40966a:	cmovne rdi,rdx
  40966e:	lea    rax,[rip+0x98cb]        # 412f40 <__bss_start@@Base+0xdb0>
  409675:	mov    rdx,QWORD PTR [rax+rdi*8]
  409679:	add    rdx,0x1
  40967d:	mov    QWORD PTR [rax+rdi*8],rdx
  409681:	test   sil,0x1
  409685:	jne    409690 <read_boolean_binary_expression@@Base+0x270>
  40968b:	jmp    4096b8 <read_boolean_binary_expression@@Base+0x298>
  409690:	mov    rax,QWORD PTR [rip+0x9909]        # 412fa0 <__bss_start@@Base+0xe10>
  409697:	add    rax,0x1
  40969b:	mov    QWORD PTR [rip+0x98fe],rax        # 412fa0 <__bss_start@@Base+0xe10>
  4096a2:	mov    rdi,QWORD PTR [rbp-0x28]
  4096a6:	call   407400 <free_node@@Base>
  4096ab:	mov    QWORD PTR [rbp-0x8],0x0
  4096b3:	jmp    409735 <read_boolean_binary_expression@@Base+0x315>
  4096b8:	mov    eax,0x18
  4096bd:	mov    edi,eax
  4096bf:	mov    rcx,QWORD PTR [rip+0x98e2]        # 412fa8 <__bss_start@@Base+0xe18>
  4096c6:	add    rcx,0x1
  4096ca:	mov    QWORD PTR [rip+0x98d7],rcx        # 412fa8 <__bss_start@@Base+0xe18>
  4096d1:	mov    rcx,QWORD PTR [rbp-0x38]
  4096d5:	mov    QWORD PTR [rbp-0x40],rcx
  4096d9:	call   4031a0 <malloc@plt>
  4096de:	mov    QWORD PTR [rbp-0x20],rax
  4096e2:	mov    rax,QWORD PTR [rbp-0x20]
  4096e6:	mov    rcx,QWORD PTR [rbp-0x40]
  4096ea:	mov    esi,DWORD PTR [rcx+0x4]
  4096ed:	mov    rdi,rax
  4096f0:	call   407170 <init_node_int@@Base>
  4096f5:	mov    rdi,QWORD PTR [rbp-0x40]
  4096f9:	call   404020 <free_token_int_value@@Base>
  4096fe:	mov    esi,0x28
  409703:	mov    edi,esi
  409705:	mov    rax,QWORD PTR [rbp-0x20]
  409709:	mov    QWORD PTR [rbp-0x30],rax
  40970d:	call   4031a0 <malloc@plt>
  409712:	mov    QWORD PTR [rbp-0x18],rax
  409716:	mov    rax,QWORD PTR [rbp-0x18]
  40971a:	mov    esi,DWORD PTR [rbp-0x4c]
  40971d:	mov    rdx,QWORD PTR [rbp-0x28]
  409721:	mov    rcx,QWORD PTR [rbp-0x30]
  409725:	mov    rdi,rax
  409728:	call   407360 <init_node_boolean_operator@@Base>
  40972d:	mov    rax,QWORD PTR [rbp-0x18]
  409731:	mov    QWORD PTR [rbp-0x8],rax
  409735:	mov    rax,QWORD PTR [rip+0x9874]        # 412fb0 <__bss_start@@Base+0xe20>
  40973c:	add    rax,0x1
  409740:	mov    QWORD PTR [rip+0x9869],rax        # 412fb0 <__bss_start@@Base+0xe20>
  409747:	mov    rax,QWORD PTR [rbp-0x8]
  40974b:	add    rsp,0x60
  40974f:	pop    rbp
  409750:	ret    
  409751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40975b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409760 <read_boolean_unary_expression@@Base>:
  409760:	push   rbp
  409761:	mov    rbp,rsp
  409764:	sub    rsp,0x50
  409768:	mov    rax,QWORD PTR [rip+0x9851]        # 412fc0 <__bss_start@@Base+0xe30>
  40976f:	add    rax,0x1
  409773:	mov    QWORD PTR [rip+0x9846],rax        # 412fc0 <__bss_start@@Base+0xe30>
  40977a:	mov    QWORD PTR [rbp-0x48],rdi
  40977e:	mov    eax,0x28
  409783:	mov    edi,eax
  409785:	mov    rcx,QWORD PTR [rbp-0x48]
  409789:	mov    QWORD PTR [rbp-0x10],rcx
  40978d:	mov    QWORD PTR [rbp-0x18],0x0
  409795:	mov    QWORD PTR [rbp-0x20],0x0
  40979d:	mov    QWORD PTR [rbp-0x28],0x0
  4097a5:	mov    QWORD PTR [rbp-0x30],0x0
  4097ad:	mov    QWORD PTR [rbp-0x38],0x0
  4097b5:	call   4031a0 <malloc@plt>
  4097ba:	mov    QWORD PTR [rbp-0x18],rax
  4097be:	mov    rax,QWORD PTR [rbp-0x10]
  4097c2:	mov    rdi,QWORD PTR [rax]
  4097c5:	call   404ba0 <next@@Base>
  4097ca:	mov    edx,0x2
  4097cf:	mov    ecx,edx
  4097d1:	mov    edx,0x1
  4097d6:	mov    edi,edx
  4097d8:	mov    QWORD PTR [rbp-0x30],rax
  4097dc:	mov    rax,QWORD PTR [rbp-0x30]
  4097e0:	mov    edx,DWORD PTR [rax]
  4097e2:	cmp    edx,0xc
  4097e5:	setne  sil
  4097e9:	cmp    edx,0xc
  4097ec:	cmovne rcx,rdi
  4097f0:	lea    rax,[rip+0x97c9]        # 412fc0 <__bss_start@@Base+0xe30>
  4097f7:	mov    rdi,QWORD PTR [rax+rcx*8]
  4097fb:	add    rdi,0x1
  4097ff:	mov    QWORD PTR [rax+rcx*8],rdi
  409803:	test   sil,0x1
  409807:	jne    409812 <read_boolean_unary_expression@@Base+0xb2>
  40980d:	jmp    40983d <read_boolean_unary_expression@@Base+0xdd>
  409812:	mov    rax,QWORD PTR [rip+0x97bf]        # 412fd8 <__bss_start@@Base+0xe48>
  409819:	add    rax,0x1
  40981d:	mov    QWORD PTR [rip+0x97b4],rax        # 412fd8 <__bss_start@@Base+0xe48>
  409824:	mov    rax,QWORD PTR [rbp-0x18]
  409828:	mov    rdi,rax
  40982b:	call   407a00 <free_node_boolean_operator@@Base>
  409830:	mov    QWORD PTR [rbp-0x8],0x0
  409838:	jmp    409941 <read_boolean_unary_expression@@Base+0x1e1>
  40983d:	mov    rax,QWORD PTR [rbp-0x30]
  409841:	mov    rdi,rax
  409844:	call   407ad0 <get_boolean_op_value@@Base>
  409849:	mov    DWORD PTR [rbp-0x3c],eax
  40984c:	mov    rdi,QWORD PTR [rbp-0x30]
  409850:	call   404390 <free_token_boolean_op@@Base>
  409855:	mov    rdi,QWORD PTR [rbp-0x10]
  409859:	mov    rdi,QWORD PTR [rdi]
  40985c:	call   404ba0 <next@@Base>
  409861:	mov    ecx,0x5
  409866:	mov    edi,ecx
  409868:	mov    ecx,0x4
  40986d:	mov    edx,ecx
  40986f:	mov    QWORD PTR [rbp-0x30],rax
  409873:	mov    rax,QWORD PTR [rbp-0x30]
  409877:	mov    ecx,DWORD PTR [rax]
  409879:	cmp    ecx,0x1
  40987c:	setne  sil
  409880:	cmp    ecx,0x1
  409883:	cmovne rdi,rdx
  409887:	lea    rax,[rip+0x9732]        # 412fc0 <__bss_start@@Base+0xe30>
  40988e:	mov    rdx,QWORD PTR [rax+rdi*8]
  409892:	add    rdx,0x1
  409896:	mov    QWORD PTR [rax+rdi*8],rdx
  40989a:	test   sil,0x1
  40989e:	jne    4098a9 <read_boolean_unary_expression@@Base+0x149>
  4098a4:	jmp    4098d4 <read_boolean_unary_expression@@Base+0x174>
  4098a9:	mov    rax,QWORD PTR [rip+0x9740]        # 412ff0 <__bss_start@@Base+0xe60>
  4098b0:	add    rax,0x1
  4098b4:	mov    QWORD PTR [rip+0x9735],rax        # 412ff0 <__bss_start@@Base+0xe60>
  4098bb:	mov    rax,QWORD PTR [rbp-0x18]
  4098bf:	mov    rdi,rax
  4098c2:	call   407a00 <free_node_boolean_operator@@Base>
  4098c7:	mov    QWORD PTR [rbp-0x8],0x0
  4098cf:	jmp    409941 <read_boolean_unary_expression@@Base+0x1e1>
  4098d4:	mov    eax,0x18
  4098d9:	mov    edi,eax
  4098db:	mov    rcx,QWORD PTR [rip+0x9716]        # 412ff8 <__bss_start@@Base+0xe68>
  4098e2:	add    rcx,0x1
  4098e6:	mov    QWORD PTR [rip+0x970b],rcx        # 412ff8 <__bss_start@@Base+0xe68>
  4098ed:	mov    rcx,QWORD PTR [rbp-0x30]
  4098f1:	mov    QWORD PTR [rbp-0x38],rcx
  4098f5:	call   4031a0 <malloc@plt>
  4098fa:	mov    QWORD PTR [rbp-0x20],rax
  4098fe:	mov    rax,QWORD PTR [rbp-0x20]
  409902:	mov    rcx,QWORD PTR [rbp-0x38]
  409906:	mov    esi,DWORD PTR [rcx+0x4]
  409909:	mov    rdi,rax
  40990c:	call   407170 <init_node_int@@Base>
  409911:	mov    rdi,QWORD PTR [rbp-0x38]
  409915:	call   404020 <free_token_int_value@@Base>
  40991a:	xor    esi,esi
  40991c:	mov    ecx,esi
  40991e:	mov    rax,QWORD PTR [rbp-0x20]
  409922:	mov    QWORD PTR [rbp-0x28],rax
  409926:	mov    rax,QWORD PTR [rbp-0x18]
  40992a:	mov    esi,DWORD PTR [rbp-0x3c]
  40992d:	mov    rdx,QWORD PTR [rbp-0x28]
  409931:	mov    rdi,rax
  409934:	call   407360 <init_node_boolean_operator@@Base>
  409939:	mov    rax,QWORD PTR [rbp-0x18]
  40993d:	mov    QWORD PTR [rbp-0x8],rax
  409941:	mov    rax,QWORD PTR [rip+0x96b8]        # 413000 <__bss_start@@Base+0xe70>
  409948:	add    rax,0x1
  40994c:	mov    QWORD PTR [rip+0x96ad],rax        # 413000 <__bss_start@@Base+0xe70>
  409953:	mov    rax,QWORD PTR [rbp-0x8]
  409957:	add    rsp,0x50
  40995b:	pop    rbp
  40995c:	ret    
  40995d:	nop    DWORD PTR [rax]
  409960:	mov    eax,DWORD PTR [rdi]
  409962:	cmp    eax,0xffffffff
  409965:	mov    QWORD PTR [rsp-0x8],rsi
  40996a:	mov    DWORD PTR [rsp-0xc],eax
  40996e:	je     4099a3 <read_boolean_unary_expression@@Base+0x243>
  409974:	mov    eax,DWORD PTR [rsp-0xc]
  409978:	mov    ecx,eax
  40997a:	mov    edx,ecx
  40997c:	mov    rsi,QWORD PTR [rsp-0x8]
  409981:	mov    rdx,QWORD PTR [rsi+rdx*8]
  409985:	cmp    rdx,0x0
  409989:	mov    QWORD PTR [rsp-0x18],rdx
  40998e:	je     4099a3 <read_boolean_unary_expression@@Base+0x243>
  409994:	mov    rax,QWORD PTR [rsp-0x18]
  409999:	mov    rcx,QWORD PTR [rax]
  40999c:	add    rcx,0x1
  4099a0:	mov    QWORD PTR [rax],rcx
  4099a3:	ret    
  4099a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4099ae:	xchg   ax,ax
  4099b0:	sub    rsp,0x38
  4099b4:	xor    eax,eax
  4099b6:	mov    DWORD PTR [rsp+0x34],eax
  4099ba:	jmp    4099bf <read_boolean_unary_expression@@Base+0x25f>
  4099bf:	mov    eax,DWORD PTR [rsp+0x34]
  4099c3:	movsxd rcx,eax
  4099c6:	imul   rcx,rcx,0x30
  4099ca:	lea    rdx,[rip+0x809f]        # 411a70 <_IO_stdin_used@@Base+0x4a70>
  4099d1:	add    rdx,rcx
  4099d4:	mov    rdi,QWORD PTR [rdx]
  4099d7:	mov    rsi,QWORD PTR [rdx+0x8]
  4099db:	mov    r8d,DWORD PTR [rdx+0x10]
  4099df:	mov    QWORD PTR [rsp+0x28],rdx
  4099e4:	mov    edx,r8d
  4099e7:	mov    DWORD PTR [rsp+0x24],eax
  4099eb:	call   40b1e0 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  4099f0:	xor    eax,eax
  4099f2:	mov    rcx,QWORD PTR [rsp+0x28]
  4099f7:	mov    edx,DWORD PTR [rcx+0x18]
  4099fa:	mov    rsi,QWORD PTR [rcx+0x20]
  4099fe:	mov    rdi,QWORD PTR [rcx+0x28]
  409a02:	cmp    eax,edx
  409a04:	mov    QWORD PTR [rsp+0x18],rdi
  409a09:	mov    DWORD PTR [rsp+0x14],edx
  409a0d:	mov    QWORD PTR [rsp+0x8],rsi
  409a12:	mov    DWORD PTR [rsp+0x4],eax
  409a16:	jge    409a87 <read_boolean_unary_expression@@Base+0x327>
  409a1c:	mov    eax,DWORD PTR [rsp+0x4]
  409a20:	movsxd rcx,eax
  409a23:	shl    rcx,0x5
  409a27:	mov    rdx,QWORD PTR [rsp+0x8]
  409a2c:	add    rdx,rcx
  409a2f:	mov    edi,DWORD PTR [rdx]
  409a31:	mov    rsi,QWORD PTR [rdx+0x8]
  409a35:	mov    r8d,DWORD PTR [rdx+0x10]
  409a39:	mov    r9b,BYTE PTR [rdx+0x14]
  409a3d:	mov    r10d,DWORD PTR [rdx+0x18]
  409a41:	mov    edx,r8d
  409a44:	movzx  ecx,r9b
  409a48:	mov    r8d,r10d
  409a4b:	mov    DWORD PTR [rsp],eax
  409a4e:	call   40b630 <__generate_code_for_binary_boolean_expression@@Base+0xca0>
  409a53:	mov    eax,DWORD PTR [rsp]
  409a56:	movsxd rsi,eax
  409a59:	shl    rsi,0x4
  409a5d:	mov    r11,QWORD PTR [rsp+0x18]
  409a62:	add    r11,rsi
  409a65:	mov    edi,DWORD PTR [r11]
  409a68:	mov    rsi,QWORD PTR [r11+0x8]
  409a6c:	call   40ba60 <__generate_code_for_binary_boolean_expression@@Base+0x10d0>
  409a71:	mov    eax,DWORD PTR [rsp]
  409a74:	add    eax,0x1
  409a77:	mov    ecx,DWORD PTR [rsp+0x14]
  409a7b:	cmp    eax,ecx
  409a7d:	mov    DWORD PTR [rsp+0x4],eax
  409a81:	jl     409a1c <read_boolean_unary_expression@@Base+0x2bc>
  409a87:	call   40be80 <__generate_code_for_binary_boolean_expression@@Base+0x14f0>
  409a8c:	call   40c620 <__generate_code_for_binary_boolean_expression@@Base+0x1c90>
  409a91:	mov    eax,DWORD PTR [rsp+0x24]
  409a95:	add    eax,0x1
  409a98:	cmp    eax,0x1
  409a9b:	mov    DWORD PTR [rsp+0x34],eax
  409a9f:	jl     4099bf <read_boolean_unary_expression@@Base+0x25f>
  409aa5:	add    rsp,0x38
  409aa9:	ret    
  409aaa:	nop    WORD PTR [rax+rax*1+0x0]
  409ab0:	push   rax
  409ab1:	call   4099b0 <read_boolean_unary_expression@@Base+0x250>
  409ab6:	mov    QWORD PTR [rip+0x91d7],0x0        # 412c98 <__bss_start@@Base+0xb08>
  409ac1:	mov    QWORD PTR [rip+0x91c4],0x0        # 412c90 <__bss_start@@Base+0xb00>
  409acc:	mov    QWORD PTR [rip+0x91d1],0x0        # 412ca8 <__bss_start@@Base+0xb18>
  409ad7:	mov    QWORD PTR [rip+0x91be],0x0        # 412ca0 <__bss_start@@Base+0xb10>
  409ae2:	mov    QWORD PTR [rip+0x91cb],0x0        # 412cb8 <__bss_start@@Base+0xb28>
  409aed:	mov    QWORD PTR [rip+0x91b8],0x0        # 412cb0 <__bss_start@@Base+0xb20>
  409af8:	mov    QWORD PTR [rip+0x922d],0x0        # 412d30 <__bss_start@@Base+0xba0>
  409b03:	mov    QWORD PTR [rip+0x921a],0x0        # 412d28 <__bss_start@@Base+0xb98>
  409b0e:	mov    QWORD PTR [rip+0x9207],0x0        # 412d20 <__bss_start@@Base+0xb90>
  409b19:	mov    QWORD PTR [rip+0x91f4],0x0        # 412d18 <__bss_start@@Base+0xb88>
  409b24:	mov    QWORD PTR [rip+0x91e1],0x0        # 412d10 <__bss_start@@Base+0xb80>
  409b2f:	mov    QWORD PTR [rip+0x91ce],0x0        # 412d08 <__bss_start@@Base+0xb78>
  409b3a:	mov    QWORD PTR [rip+0x91bb],0x0        # 412d00 <__bss_start@@Base+0xb70>
  409b45:	mov    QWORD PTR [rip+0x91a8],0x0        # 412cf8 <__bss_start@@Base+0xb68>
  409b50:	mov    QWORD PTR [rip+0x9195],0x0        # 412cf0 <__bss_start@@Base+0xb60>
  409b5b:	mov    QWORD PTR [rip+0x9182],0x0        # 412ce8 <__bss_start@@Base+0xb58>
  409b66:	mov    QWORD PTR [rip+0x916f],0x0        # 412ce0 <__bss_start@@Base+0xb50>
  409b71:	mov    QWORD PTR [rip+0x915c],0x0        # 412cd8 <__bss_start@@Base+0xb48>
  409b7c:	mov    QWORD PTR [rip+0x9149],0x0        # 412cd0 <__bss_start@@Base+0xb40>
  409b87:	mov    QWORD PTR [rip+0x9136],0x0        # 412cc8 <__bss_start@@Base+0xb38>
  409b92:	mov    QWORD PTR [rip+0x9123],0x0        # 412cc0 <__bss_start@@Base+0xb30>
  409b9d:	mov    QWORD PTR [rip+0x9230],0x0        # 412dd8 <__bss_start@@Base+0xc48>
  409ba8:	mov    QWORD PTR [rip+0x921d],0x0        # 412dd0 <__bss_start@@Base+0xc40>
  409bb3:	mov    QWORD PTR [rip+0x920a],0x0        # 412dc8 <__bss_start@@Base+0xc38>
  409bbe:	mov    QWORD PTR [rip+0x91f7],0x0        # 412dc0 <__bss_start@@Base+0xc30>
  409bc9:	mov    QWORD PTR [rip+0x91e4],0x0        # 412db8 <__bss_start@@Base+0xc28>
  409bd4:	mov    QWORD PTR [rip+0x91d1],0x0        # 412db0 <__bss_start@@Base+0xc20>
  409bdf:	mov    QWORD PTR [rip+0x91be],0x0        # 412da8 <__bss_start@@Base+0xc18>
  409bea:	mov    QWORD PTR [rip+0x91ab],0x0        # 412da0 <__bss_start@@Base+0xc10>
  409bf5:	mov    QWORD PTR [rip+0x9198],0x0        # 412d98 <__bss_start@@Base+0xc08>
  409c00:	mov    QWORD PTR [rip+0x9185],0x0        # 412d90 <__bss_start@@Base+0xc00>
  409c0b:	mov    QWORD PTR [rip+0x9172],0x0        # 412d88 <__bss_start@@Base+0xbf8>
  409c16:	mov    QWORD PTR [rip+0x915f],0x0        # 412d80 <__bss_start@@Base+0xbf0>
  409c21:	mov    QWORD PTR [rip+0x914c],0x0        # 412d78 <__bss_start@@Base+0xbe8>
  409c2c:	mov    QWORD PTR [rip+0x9139],0x0        # 412d70 <__bss_start@@Base+0xbe0>
  409c37:	mov    QWORD PTR [rip+0x9126],0x0        # 412d68 <__bss_start@@Base+0xbd8>
  409c42:	mov    QWORD PTR [rip+0x9113],0x0        # 412d60 <__bss_start@@Base+0xbd0>
  409c4d:	mov    QWORD PTR [rip+0x9100],0x0        # 412d58 <__bss_start@@Base+0xbc8>
  409c58:	mov    QWORD PTR [rip+0x90ed],0x0        # 412d50 <__bss_start@@Base+0xbc0>
  409c63:	mov    QWORD PTR [rip+0x90da],0x0        # 412d48 <__bss_start@@Base+0xbb8>
  409c6e:	mov    QWORD PTR [rip+0x90c7],0x0        # 412d40 <__bss_start@@Base+0xbb0>
  409c79:	mov    QWORD PTR [rip+0x919c],0x0        # 412e20 <__bss_start@@Base+0xc90>
  409c84:	mov    QWORD PTR [rip+0x9189],0x0        # 412e18 <__bss_start@@Base+0xc88>
  409c8f:	mov    QWORD PTR [rip+0x9176],0x0        # 412e10 <__bss_start@@Base+0xc80>
  409c9a:	mov    QWORD PTR [rip+0x9163],0x0        # 412e08 <__bss_start@@Base+0xc78>
  409ca5:	mov    QWORD PTR [rip+0x9150],0x0        # 412e00 <__bss_start@@Base+0xc70>
  409cb0:	mov    QWORD PTR [rip+0x913d],0x0        # 412df8 <__bss_start@@Base+0xc68>
  409cbb:	mov    QWORD PTR [rip+0x912a],0x0        # 412df0 <__bss_start@@Base+0xc60>
  409cc6:	mov    QWORD PTR [rip+0x9117],0x0        # 412de8 <__bss_start@@Base+0xc58>
  409cd1:	mov    QWORD PTR [rip+0x9104],0x0        # 412de0 <__bss_start@@Base+0xc50>
  409cdc:	mov    QWORD PTR [rip+0x9191],0x0        # 412e78 <__bss_start@@Base+0xce8>
  409ce7:	mov    QWORD PTR [rip+0x917e],0x0        # 412e70 <__bss_start@@Base+0xce0>
  409cf2:	mov    QWORD PTR [rip+0x916b],0x0        # 412e68 <__bss_start@@Base+0xcd8>
  409cfd:	mov    QWORD PTR [rip+0x9158],0x0        # 412e60 <__bss_start@@Base+0xcd0>
  409d08:	mov    QWORD PTR [rip+0x9145],0x0        # 412e58 <__bss_start@@Base+0xcc8>
  409d13:	mov    QWORD PTR [rip+0x9132],0x0        # 412e50 <__bss_start@@Base+0xcc0>
  409d1e:	mov    QWORD PTR [rip+0x911f],0x0        # 412e48 <__bss_start@@Base+0xcb8>
  409d29:	mov    QWORD PTR [rip+0x910c],0x0        # 412e40 <__bss_start@@Base+0xcb0>
  409d34:	mov    QWORD PTR [rip+0x90f9],0x0        # 412e38 <__bss_start@@Base+0xca8>
  409d3f:	mov    QWORD PTR [rip+0x90e6],0x0        # 412e30 <__bss_start@@Base+0xca0>
  409d4a:	mov    QWORD PTR [rip+0x918b],0x0        # 412ee0 <__bss_start@@Base+0xd50>
  409d55:	mov    QWORD PTR [rip+0x9178],0x0        # 412ed8 <__bss_start@@Base+0xd48>
  409d60:	mov    QWORD PTR [rip+0x9165],0x0        # 412ed0 <__bss_start@@Base+0xd40>
  409d6b:	mov    QWORD PTR [rip+0x9152],0x0        # 412ec8 <__bss_start@@Base+0xd38>
  409d76:	mov    QWORD PTR [rip+0x913f],0x0        # 412ec0 <__bss_start@@Base+0xd30>
  409d81:	mov    QWORD PTR [rip+0x912c],0x0        # 412eb8 <__bss_start@@Base+0xd28>
  409d8c:	mov    QWORD PTR [rip+0x9119],0x0        # 412eb0 <__bss_start@@Base+0xd20>
  409d97:	mov    QWORD PTR [rip+0x9106],0x0        # 412ea8 <__bss_start@@Base+0xd18>
  409da2:	mov    QWORD PTR [rip+0x90f3],0x0        # 412ea0 <__bss_start@@Base+0xd10>
  409dad:	mov    QWORD PTR [rip+0x90e0],0x0        # 412e98 <__bss_start@@Base+0xd08>
  409db8:	mov    QWORD PTR [rip+0x90cd],0x0        # 412e90 <__bss_start@@Base+0xd00>
  409dc3:	mov    QWORD PTR [rip+0x90ba],0x0        # 412e88 <__bss_start@@Base+0xcf8>
  409dce:	mov    QWORD PTR [rip+0x90a7],0x0        # 412e80 <__bss_start@@Base+0xcf0>
  409dd9:	mov    QWORD PTR [rip+0x914c],0x0        # 412f30 <__bss_start@@Base+0xda0>
  409de4:	mov    QWORD PTR [rip+0x9139],0x0        # 412f28 <__bss_start@@Base+0xd98>
  409def:	mov    QWORD PTR [rip+0x9126],0x0        # 412f20 <__bss_start@@Base+0xd90>
  409dfa:	mov    QWORD PTR [rip+0x9113],0x0        # 412f18 <__bss_start@@Base+0xd88>
  409e05:	mov    QWORD PTR [rip+0x9100],0x0        # 412f10 <__bss_start@@Base+0xd80>
  409e10:	mov    QWORD PTR [rip+0x90ed],0x0        # 412f08 <__bss_start@@Base+0xd78>
  409e1b:	mov    QWORD PTR [rip+0x90da],0x0        # 412f00 <__bss_start@@Base+0xd70>
  409e26:	mov    QWORD PTR [rip+0x90c7],0x0        # 412ef8 <__bss_start@@Base+0xd68>
  409e31:	mov    QWORD PTR [rip+0x90b4],0x0        # 412ef0 <__bss_start@@Base+0xd60>
  409e3c:	mov    QWORD PTR [rip+0x9169],0x0        # 412fb0 <__bss_start@@Base+0xe20>
  409e47:	mov    QWORD PTR [rip+0x9156],0x0        # 412fa8 <__bss_start@@Base+0xe18>
  409e52:	mov    QWORD PTR [rip+0x9143],0x0        # 412fa0 <__bss_start@@Base+0xe10>
  409e5d:	mov    QWORD PTR [rip+0x9130],0x0        # 412f98 <__bss_start@@Base+0xe08>
  409e68:	mov    QWORD PTR [rip+0x911d],0x0        # 412f90 <__bss_start@@Base+0xe00>
  409e73:	mov    QWORD PTR [rip+0x910a],0x0        # 412f88 <__bss_start@@Base+0xdf8>
  409e7e:	mov    QWORD PTR [rip+0x90f7],0x0        # 412f80 <__bss_start@@Base+0xdf0>
  409e89:	mov    QWORD PTR [rip+0x90e4],0x0        # 412f78 <__bss_start@@Base+0xde8>
  409e94:	mov    QWORD PTR [rip+0x90d1],0x0        # 412f70 <__bss_start@@Base+0xde0>
  409e9f:	mov    QWORD PTR [rip+0x90be],0x0        # 412f68 <__bss_start@@Base+0xdd8>
  409eaa:	mov    QWORD PTR [rip+0x90ab],0x0        # 412f60 <__bss_start@@Base+0xdd0>
  409eb5:	mov    QWORD PTR [rip+0x9098],0x0        # 412f58 <__bss_start@@Base+0xdc8>
  409ec0:	mov    QWORD PTR [rip+0x9085],0x0        # 412f50 <__bss_start@@Base+0xdc0>
  409ecb:	mov    QWORD PTR [rip+0x9072],0x0        # 412f48 <__bss_start@@Base+0xdb8>
  409ed6:	mov    QWORD PTR [rip+0x905f],0x0        # 412f40 <__bss_start@@Base+0xdb0>
  409ee1:	mov    QWORD PTR [rip+0x9114],0x0        # 413000 <__bss_start@@Base+0xe70>
  409eec:	mov    QWORD PTR [rip+0x9101],0x0        # 412ff8 <__bss_start@@Base+0xe68>
  409ef7:	mov    QWORD PTR [rip+0x90ee],0x0        # 412ff0 <__bss_start@@Base+0xe60>
  409f02:	mov    QWORD PTR [rip+0x90db],0x0        # 412fe8 <__bss_start@@Base+0xe58>
  409f0d:	mov    QWORD PTR [rip+0x90c8],0x0        # 412fe0 <__bss_start@@Base+0xe50>
  409f18:	mov    QWORD PTR [rip+0x90b5],0x0        # 412fd8 <__bss_start@@Base+0xe48>
  409f23:	mov    QWORD PTR [rip+0x90a2],0x0        # 412fd0 <__bss_start@@Base+0xe40>
  409f2e:	mov    QWORD PTR [rip+0x908f],0x0        # 412fc8 <__bss_start@@Base+0xe38>
  409f39:	mov    QWORD PTR [rip+0x907c],0x0        # 412fc0 <__bss_start@@Base+0xe30>
  409f44:	pop    rax
  409f45:	ret    
  409f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f50:	push   rax
  409f51:	lea    rdi,[rip+0xfffffffffffffa58]        # 4099b0 <read_boolean_unary_expression@@Base+0x250>
  409f58:	lea    rsi,[rip+0xfffffffffffffb51]        # 409ab0 <read_boolean_unary_expression@@Base+0x350>
  409f5f:	call   40c9e0 <__gcov_flush@@Base+0xa0>
  409f64:	pop    rax
  409f65:	ret    
  409f66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409f70 <init_generator@@Base>:
  409f70:	push   rbp
  409f71:	mov    rbp,rsp
  409f74:	sub    rsp,0x30
  409f78:	mov    rax,QWORD PTR [rip+0x9091]        # 413010 <__bss_start@@Base+0xe80>
  409f7f:	add    rax,0x1
  409f83:	mov    QWORD PTR [rip+0x9086],rax        # 413010 <__bss_start@@Base+0xe80>
  409f8a:	mov    QWORD PTR [rbp-0x20],rsi
  409f8e:	mov    QWORD PTR [rbp-0x28],rdi
  409f92:	mov    QWORD PTR [rbp-0x30],rdx
  409f96:	mov    rax,QWORD PTR [rip+0x907b]        # 413018 <__bss_start@@Base+0xe88>
  409f9d:	add    rax,0x1
  409fa1:	mov    QWORD PTR [rip+0x9070],rax        # 413018 <__bss_start@@Base+0xe88>
  409fa8:	mov    rax,QWORD PTR [rbp-0x28]
  409fac:	mov    QWORD PTR [rbp-0x8],rax
  409fb0:	mov    rcx,QWORD PTR [rbp-0x20]
  409fb4:	mov    QWORD PTR [rbp-0x10],rcx
  409fb8:	mov    rdx,QWORD PTR [rbp-0x30]
  409fbc:	mov    QWORD PTR [rbp-0x18],rdx
  409fc0:	mov    rsi,QWORD PTR [rbp-0x10]
  409fc4:	mov    rdi,QWORD PTR [rbp-0x8]
  409fc8:	mov    QWORD PTR [rdi],rsi
  409fcb:	mov    rdi,QWORD PTR [rbp-0x18]
  409fcf:	lea    rsi,[rip+0x39ba]        # 40d990 <_IO_stdin_used@@Base+0x990>
  409fd6:	call   403210 <fopen@plt>
  409fdb:	mov    rcx,QWORD PTR [rbp-0x8]
  409fdf:	mov    QWORD PTR [rcx+0x8],rax
  409fe3:	mov    rax,QWORD PTR [rbp-0x8]
  409fe7:	mov    QWORD PTR [rax+0x10],0x0
  409fef:	add    rsp,0x30
  409ff3:	pop    rbp
  409ff4:	ret    
  409ff5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fff:	nop

000000000040a000 <destroy_generator@@Base>:
  40a000:	push   rbp
  40a001:	mov    rbp,rsp
  40a004:	sub    rsp,0x20
  40a008:	mov    rax,QWORD PTR [rip+0x9011]        # 413020 <__bss_start@@Base+0xe90>
  40a00f:	add    rax,0x1
  40a013:	mov    QWORD PTR [rip+0x9006],rax        # 413020 <__bss_start@@Base+0xe90>
  40a01a:	mov    QWORD PTR [rbp-0x10],rdi
  40a01e:	mov    rax,QWORD PTR [rip+0x9003]        # 413028 <__bss_start@@Base+0xe98>
  40a025:	add    rax,0x1
  40a029:	mov    QWORD PTR [rip+0x8ff8],rax        # 413028 <__bss_start@@Base+0xe98>
  40a030:	mov    rax,QWORD PTR [rbp-0x10]
  40a034:	mov    QWORD PTR [rbp-0x8],rax
  40a038:	mov    rcx,QWORD PTR [rbp-0x8]
  40a03c:	mov    rdi,QWORD PTR [rcx+0x8]
  40a040:	call   4030c0 <fclose@plt>
  40a045:	mov    DWORD PTR [rbp-0x14],eax
  40a048:	add    rsp,0x20
  40a04c:	pop    rbp
  40a04d:	ret    
  40a04e:	xchg   ax,ax

000000000040a050 <generate_code@@Base>:
  40a050:	push   rbp
  40a051:	mov    rbp,rsp
  40a054:	sub    rsp,0x20
  40a058:	mov    rax,QWORD PTR [rip+0x8fd1]        # 413030 <__bss_start@@Base+0xea0>
  40a05f:	add    rax,0x1
  40a063:	mov    QWORD PTR [rip+0x8fc6],rax        # 413030 <__bss_start@@Base+0xea0>
  40a06a:	mov    QWORD PTR [rbp-0x18],rdi
  40a06e:	mov    rax,QWORD PTR [rip+0x8fc3]        # 413038 <__bss_start@@Base+0xea8>
  40a075:	add    rax,0x1
  40a079:	mov    QWORD PTR [rip+0x8fb8],rax        # 413038 <__bss_start@@Base+0xea8>
  40a080:	mov    rax,QWORD PTR [rbp-0x18]
  40a084:	mov    QWORD PTR [rbp-0x8],rax
  40a088:	mov    QWORD PTR [rbp-0x10],0x0
  40a090:	mov    rcx,QWORD PTR [rbp-0x8]
  40a094:	mov    rdi,QWORD PTR [rcx]
  40a097:	call   4085c0 <build_ast@@Base>
  40a09c:	mov    QWORD PTR [rbp-0x10],rax
  40a0a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0a4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a0a8:	call   40a0c0 <__generate_code@@Base>
  40a0ad:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0b1:	call   407400 <free_node@@Base>
  40a0b6:	add    rsp,0x20
  40a0ba:	pop    rbp
  40a0bb:	ret    
  40a0bc:	nop    DWORD PTR [rax+0x0]

000000000040a0c0 <__generate_code@@Base>:
  40a0c0:	push   rbp
  40a0c1:	mov    rbp,rsp
  40a0c4:	sub    rsp,0x30
  40a0c8:	mov    rax,QWORD PTR [rip+0x8f71]        # 413040 <__bss_start@@Base+0xeb0>
  40a0cf:	add    rax,0x1
  40a0d3:	mov    QWORD PTR [rip+0x8f66],rax        # 413040 <__bss_start@@Base+0xeb0>
  40a0da:	mov    QWORD PTR [rbp-0x18],rdi
  40a0de:	mov    QWORD PTR [rbp-0x20],rsi
  40a0e2:	mov    rax,QWORD PTR [rip+0x8f5f]        # 413048 <__bss_start@@Base+0xeb8>
  40a0e9:	add    rax,0x1
  40a0ed:	mov    QWORD PTR [rip+0x8f54],rax        # 413048 <__bss_start@@Base+0xeb8>
  40a0f4:	mov    rax,QWORD PTR [rbp-0x18]
  40a0f8:	mov    QWORD PTR [rbp-0x8],rax
  40a0fc:	mov    rcx,QWORD PTR [rbp-0x20]
  40a100:	mov    QWORD PTR [rbp-0x10],rcx
  40a104:	mov    rdx,QWORD PTR [rbp-0x8]
  40a108:	mov    rdi,QWORD PTR [rdx+0x8]
  40a10c:	lea    rsi,[rip+0x387f]        # 40d992 <_IO_stdin_used@@Base+0x992>
  40a113:	mov    al,0x0
  40a115:	call   403150 <fprintf@plt>
  40a11a:	mov    rdi,QWORD PTR [rbp-0x8]
  40a11e:	mov    rsi,QWORD PTR [rbp-0x10]
  40a122:	mov    DWORD PTR [rbp-0x24],eax
  40a125:	call   40a130 <__generate_code_for_main@@Base>
  40a12a:	add    rsp,0x30
  40a12e:	pop    rbp
  40a12f:	ret    

000000000040a130 <__generate_code_for_main@@Base>:
  40a130:	push   rbp
  40a131:	mov    rbp,rsp
  40a134:	sub    rsp,0x30
  40a138:	mov    rax,QWORD PTR [rip+0x8f11]        # 413050 <__bss_start@@Base+0xec0>
  40a13f:	add    rax,0x1
  40a143:	mov    QWORD PTR [rip+0x8f06],rax        # 413050 <__bss_start@@Base+0xec0>
  40a14a:	mov    QWORD PTR [rbp-0x18],rdi
  40a14e:	mov    QWORD PTR [rbp-0x20],rsi
  40a152:	mov    DWORD PTR [rip+0x8014],0x0        # 412170 <__data_start@@Base+0x28>
  40a15c:	mov    rax,QWORD PTR [rbp-0x18]
  40a160:	mov    QWORD PTR [rbp-0x8],rax
  40a164:	mov    rcx,QWORD PTR [rbp-0x20]
  40a168:	mov    QWORD PTR [rbp-0x10],rcx
  40a16c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a170:	mov    esi,DWORD PTR [rdx]
  40a172:	sub    esi,0x2
  40a175:	mov    DWORD PTR [rbp-0x24],esi
  40a178:	jne    40a1c4 <__generate_code_for_main@@Base+0x94>
  40a17e:	jmp    40a183 <__generate_code_for_main@@Base+0x53>
  40a183:	lea    rax,[rip+0x7916]        # 411aa0 <_IO_stdin_used@@Base+0x4aa0>
  40a18a:	add    rax,0x8
  40a18e:	lea    rdi,[rip+0x7fdb]        # 412170 <__data_start@@Base+0x28>
  40a195:	mov    rsi,rax
  40a198:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a19d:	mov    rax,QWORD PTR [rip+0x8ec4]        # 413068 <__bss_start@@Base+0xed8>
  40a1a4:	add    rax,0x1
  40a1a8:	mov    QWORD PTR [rip+0x8eb9],rax        # 413068 <__bss_start@@Base+0xed8>
  40a1af:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1b3:	mov    rax,QWORD PTR [rbp-0x10]
  40a1b7:	mov    rsi,rax
  40a1ba:	call   40a220 <__generate_code_for_function@@Base>
  40a1bf:	jmp    40a1fc <__generate_code_for_main@@Base+0xcc>
  40a1c4:	lea    rdi,[rip+0x7fa5]        # 412170 <__data_start@@Base+0x28>
  40a1cb:	lea    rsi,[rip+0x78ce]        # 411aa0 <_IO_stdin_used@@Base+0x4aa0>
  40a1d2:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a1d7:	mov    rsi,QWORD PTR [rip+0x7e12]        # 411ff0 <stderr@GLIBC_2.2.5>
  40a1de:	mov    rdi,QWORD PTR [rsi]
  40a1e1:	lea    rsi,[rip+0x37c0]        # 40d9a8 <_IO_stdin_used@@Base+0x9a8>
  40a1e8:	mov    al,0x0
  40a1ea:	call   403150 <fprintf@plt>
  40a1ef:	mov    edi,0x1
  40a1f4:	mov    DWORD PTR [rbp-0x28],eax
  40a1f7:	call   403250 <exit@plt>
  40a1fc:	mov    rax,QWORD PTR [rip+0x8e6d]        # 413070 <__bss_start@@Base+0xee0>
  40a203:	add    rax,0x1
  40a207:	mov    QWORD PTR [rip+0x8e62],rax        # 413070 <__bss_start@@Base+0xee0>
  40a20e:	add    rsp,0x30
  40a212:	pop    rbp
  40a213:	ret    
  40a214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a21e:	xchg   ax,ax

000000000040a220 <__generate_code_for_function@@Base>:
  40a220:	push   rbp
  40a221:	mov    rbp,rsp
  40a224:	sub    rsp,0x30
  40a228:	mov    rax,QWORD PTR [rip+0x8e49]        # 413078 <__bss_start@@Base+0xee8>
  40a22f:	add    rax,0x1
  40a233:	mov    QWORD PTR [rip+0x8e3e],rax        # 413078 <__bss_start@@Base+0xee8>
  40a23a:	mov    QWORD PTR [rbp-0x18],rdi
  40a23e:	mov    QWORD PTR [rbp-0x20],rsi
  40a242:	mov    rax,QWORD PTR [rip+0x8e37]        # 413080 <__bss_start@@Base+0xef0>
  40a249:	add    rax,0x1
  40a24d:	mov    QWORD PTR [rip+0x8e2c],rax        # 413080 <__bss_start@@Base+0xef0>
  40a254:	mov    rax,QWORD PTR [rbp-0x18]
  40a258:	mov    QWORD PTR [rbp-0x8],rax
  40a25c:	mov    rcx,QWORD PTR [rbp-0x20]
  40a260:	mov    QWORD PTR [rbp-0x10],rcx
  40a264:	mov    rdx,QWORD PTR [rbp-0x8]
  40a268:	mov    rdi,QWORD PTR [rdx+0x8]
  40a26c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a270:	mov    rdx,QWORD PTR [rdx+0x10]
  40a274:	lea    rsi,[rip+0x375c]        # 40d9d7 <_IO_stdin_used@@Base+0x9d7>
  40a27b:	mov    al,0x0
  40a27d:	call   403150 <fprintf@plt>
  40a282:	mov    rdi,QWORD PTR [rbp-0x8]
  40a286:	mov    rcx,QWORD PTR [rbp-0x10]
  40a28a:	mov    rsi,QWORD PTR [rcx+0x18]
  40a28e:	mov    DWORD PTR [rbp-0x24],eax
  40a291:	call   40a2a0 <__generate_code_for_body@@Base>
  40a296:	add    rsp,0x30
  40a29a:	pop    rbp
  40a29b:	ret    
  40a29c:	nop    DWORD PTR [rax+0x0]

000000000040a2a0 <__generate_code_for_body@@Base>:
  40a2a0:	push   rbp
  40a2a1:	mov    rbp,rsp
  40a2a4:	sub    rsp,0x40
  40a2a8:	mov    rax,QWORD PTR [rip+0x8de1]        # 413090 <__bss_start@@Base+0xf00>
  40a2af:	add    rax,0x1
  40a2b3:	mov    QWORD PTR [rip+0x8dd6],rax        # 413090 <__bss_start@@Base+0xf00>
  40a2ba:	mov    QWORD PTR [rbp-0x20],rdi
  40a2be:	mov    QWORD PTR [rbp-0x28],rsi
  40a2c2:	mov    rax,QWORD PTR [rip+0x8dcf]        # 413098 <__bss_start@@Base+0xf08>
  40a2c9:	add    rax,0x1
  40a2cd:	mov    QWORD PTR [rip+0x8dc4],rax        # 413098 <__bss_start@@Base+0xf08>
  40a2d4:	mov    rax,QWORD PTR [rbp-0x20]
  40a2d8:	mov    QWORD PTR [rbp-0x8],rax
  40a2dc:	mov    rcx,QWORD PTR [rbp-0x28]
  40a2e0:	mov    QWORD PTR [rbp-0x10],rcx
  40a2e4:	mov    QWORD PTR [rbp-0x18],0x0
  40a2ec:	mov    eax,0x3
  40a2f1:	mov    ecx,eax
  40a2f3:	mov    eax,0x2
  40a2f8:	mov    edx,eax
  40a2fa:	mov    rsi,QWORD PTR [rbp-0x10]
  40a2fe:	cmp    rsi,0x0
  40a302:	setne  dil
  40a306:	cmp    rsi,0x0
  40a30a:	cmovne rcx,rdx
  40a30e:	lea    rdx,[rip+0x8d7b]        # 413090 <__bss_start@@Base+0xf00>
  40a315:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a319:	add    rsi,0x1
  40a31d:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a321:	test   dil,0x1
  40a325:	jne    40a330 <__generate_code_for_body@@Base+0x90>
  40a32b:	jmp    40a44f <__generate_code_for_body@@Base+0x1af>
  40a330:	mov    DWORD PTR [rip+0x7e3a],0x0        # 412174 <__data_start@@Base+0x2c>
  40a33a:	mov    rax,QWORD PTR [rbp-0x10]
  40a33e:	mov    QWORD PTR [rbp-0x18],rax
  40a342:	mov    rax,QWORD PTR [rbp-0x10]
  40a346:	mov    rax,QWORD PTR [rax+0x8]
  40a34a:	mov    QWORD PTR [rbp-0x10],rax
  40a34e:	mov    rax,QWORD PTR [rbp-0x18]
  40a352:	mov    ecx,DWORD PTR [rax]
  40a354:	mov    edx,ecx
  40a356:	sub    edx,0x3
  40a359:	mov    DWORD PTR [rbp-0x2c],ecx
  40a35c:	mov    DWORD PTR [rbp-0x30],edx
  40a35f:	je     40a37e <__generate_code_for_body@@Base+0xde>
  40a365:	jmp    40a36a <__generate_code_for_body@@Base+0xca>
  40a36a:	mov    eax,DWORD PTR [rbp-0x2c]
  40a36d:	sub    eax,0x4
  40a370:	mov    DWORD PTR [rbp-0x34],eax
  40a373:	je     40a3bf <__generate_code_for_body@@Base+0x11f>
  40a379:	jmp    40a400 <__generate_code_for_body@@Base+0x160>
  40a37e:	lea    rax,[rip+0x772b]        # 411ab0 <_IO_stdin_used@@Base+0x4ab0>
  40a385:	add    rax,0x8
  40a389:	lea    rdi,[rip+0x7de4]        # 412174 <__data_start@@Base+0x2c>
  40a390:	mov    rsi,rax
  40a393:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a398:	mov    rax,QWORD PTR [rip+0x8d29]        # 4130c8 <__bss_start@@Base+0xf38>
  40a39f:	add    rax,0x1
  40a3a3:	mov    QWORD PTR [rip+0x8d1e],rax        # 4130c8 <__bss_start@@Base+0xf38>
  40a3aa:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3ae:	mov    rax,QWORD PTR [rbp-0x18]
  40a3b2:	mov    rsi,rax
  40a3b5:	call   40a690 <__generate_code_for_return@@Base>
  40a3ba:	jmp    40a438 <__generate_code_for_body@@Base+0x198>
  40a3bf:	lea    rax,[rip+0x76ea]        # 411ab0 <_IO_stdin_used@@Base+0x4ab0>
  40a3c6:	add    rax,0x10
  40a3ca:	lea    rdi,[rip+0x7da3]        # 412174 <__data_start@@Base+0x2c>
  40a3d1:	mov    rsi,rax
  40a3d4:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a3d9:	mov    rax,QWORD PTR [rip+0x8cf0]        # 4130d0 <__bss_start@@Base+0xf40>
  40a3e0:	add    rax,0x1
  40a3e4:	mov    QWORD PTR [rip+0x8ce5],rax        # 4130d0 <__bss_start@@Base+0xf40>
  40a3eb:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3ef:	mov    rax,QWORD PTR [rbp-0x18]
  40a3f3:	mov    rsi,rax
  40a3f6:	call   40a470 <__generate_code_for_if@@Base>
  40a3fb:	jmp    40a438 <__generate_code_for_body@@Base+0x198>
  40a400:	lea    rdi,[rip+0x7d6d]        # 412174 <__data_start@@Base+0x2c>
  40a407:	lea    rsi,[rip+0x76a2]        # 411ab0 <_IO_stdin_used@@Base+0x4ab0>
  40a40e:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a413:	mov    rsi,QWORD PTR [rip+0x7bd6]        # 411ff0 <stderr@GLIBC_2.2.5>
  40a41a:	mov    rdi,QWORD PTR [rsi]
  40a41d:	lea    rsi,[rip+0x36b9]        # 40dadd <_IO_stdin_used@@Base+0xadd>
  40a424:	mov    al,0x0
  40a426:	call   403150 <fprintf@plt>
  40a42b:	mov    edi,0x1
  40a430:	mov    DWORD PTR [rbp-0x38],eax
  40a433:	call   403250 <exit@plt>
  40a438:	mov    rax,QWORD PTR [rip+0x8c99]        # 4130d8 <__bss_start@@Base+0xf48>
  40a43f:	add    rax,0x1
  40a443:	mov    QWORD PTR [rip+0x8c8e],rax        # 4130d8 <__bss_start@@Base+0xf48>
  40a44a:	jmp    40a2ec <__generate_code_for_body@@Base+0x4c>
  40a44f:	mov    rax,QWORD PTR [rip+0x8c8a]        # 4130e0 <__bss_start@@Base+0xf50>
  40a456:	add    rax,0x1
  40a45a:	mov    QWORD PTR [rip+0x8c7f],rax        # 4130e0 <__bss_start@@Base+0xf50>
  40a461:	add    rsp,0x40
  40a465:	pop    rbp
  40a466:	ret    
  40a467:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a470 <__generate_code_for_if@@Base>:
  40a470:	push   rbp
  40a471:	mov    rbp,rsp
  40a474:	sub    rsp,0x30
  40a478:	mov    rax,QWORD PTR [rip+0x8c71]        # 4130f0 <__bss_start@@Base+0xf60>
  40a47f:	add    rax,0x1
  40a483:	mov    QWORD PTR [rip+0x8c66],rax        # 4130f0 <__bss_start@@Base+0xf60>
  40a48a:	mov    QWORD PTR [rbp-0x20],rdi
  40a48e:	mov    QWORD PTR [rbp-0x28],rsi
  40a492:	mov    rax,QWORD PTR [rbp-0x20]
  40a496:	mov    QWORD PTR [rbp-0x8],rax
  40a49a:	mov    rcx,QWORD PTR [rbp-0x28]
  40a49e:	mov    QWORD PTR [rbp-0x10],rcx
  40a4a2:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4a6:	mov    rdx,QWORD PTR [rdx+0x10]
  40a4aa:	mov    QWORD PTR [rbp-0x18],rdx
  40a4ae:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4b2:	mov    rsi,QWORD PTR [rdx+0x10]
  40a4b6:	add    rsi,0x1
  40a4ba:	mov    QWORD PTR [rdx+0x10],rsi
  40a4be:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4c2:	mov    rdx,QWORD PTR [rbp-0x10]
  40a4c6:	mov    rsi,QWORD PTR [rdx+0x10]
  40a4ca:	mov    rdx,QWORD PTR [rbp-0x18]
  40a4ce:	call   40a590 <__generate_code_for_if_expression@@Base>
  40a4d3:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4d7:	mov    rax,QWORD PTR [rbp-0x10]
  40a4db:	mov    rsi,QWORD PTR [rax+0x18]
  40a4df:	call   40a2a0 <__generate_code_for_body@@Base>
  40a4e4:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e8:	mov    rdi,QWORD PTR [rax+0x8]
  40a4ec:	mov    rdx,QWORD PTR [rbp-0x18]
  40a4f0:	lea    rsi,[rip+0x34e5]        # 40d9dc <_IO_stdin_used@@Base+0x9dc>
  40a4f7:	mov    al,0x0
  40a4f9:	call   403150 <fprintf@plt>
  40a4fe:	mov    r8d,0x2
  40a504:	mov    ecx,r8d
  40a507:	mov    r8d,0x1
  40a50d:	mov    edx,r8d
  40a510:	mov    rsi,QWORD PTR [rbp-0x10]
  40a514:	mov    rsi,QWORD PTR [rsi+0x20]
  40a518:	cmp    rsi,0x0
  40a51c:	setne  r9b
  40a520:	cmp    rsi,0x0
  40a524:	cmovne rcx,rdx
  40a528:	lea    rdx,[rip+0x8bc1]        # 4130f0 <__bss_start@@Base+0xf60>
  40a52f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a533:	add    rsi,0x1
  40a537:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a53b:	test   r9b,0x1
  40a53f:	mov    DWORD PTR [rbp-0x2c],eax
  40a542:	jne    40a54d <__generate_code_for_if@@Base+0xdd>
  40a548:	jmp    40a570 <__generate_code_for_if@@Base+0x100>
  40a54d:	mov    rax,QWORD PTR [rip+0x8bb4]        # 413108 <__bss_start@@Base+0xf78>
  40a554:	add    rax,0x1
  40a558:	mov    QWORD PTR [rip+0x8ba9],rax        # 413108 <__bss_start@@Base+0xf78>
  40a55f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a563:	mov    rax,QWORD PTR [rbp-0x10]
  40a567:	mov    rsi,QWORD PTR [rax+0x20]
  40a56b:	call   40a2a0 <__generate_code_for_body@@Base>
  40a570:	mov    rax,QWORD PTR [rip+0x8b99]        # 413110 <__bss_start@@Base+0xf80>
  40a577:	add    rax,0x1
  40a57b:	mov    QWORD PTR [rip+0x8b8e],rax        # 413110 <__bss_start@@Base+0xf80>
  40a582:	add    rsp,0x30
  40a586:	pop    rbp
  40a587:	ret    
  40a588:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a590 <__generate_code_for_if_expression@@Base>:
  40a590:	push   rbp
  40a591:	mov    rbp,rsp
  40a594:	sub    rsp,0x40
  40a598:	mov    rax,QWORD PTR [rip+0x8b81]        # 413120 <__bss_start@@Base+0xf90>
  40a59f:	add    rax,0x1
  40a5a3:	mov    QWORD PTR [rip+0x8b76],rax        # 413120 <__bss_start@@Base+0xf90>
  40a5aa:	mov    QWORD PTR [rbp-0x28],rsi
  40a5ae:	mov    QWORD PTR [rbp-0x30],rdi
  40a5b2:	mov    QWORD PTR [rbp-0x38],rdx
  40a5b6:	mov    DWORD PTR [rip+0x7bb8],0x0        # 412178 <__data_start@@Base+0x30>
  40a5c0:	mov    rax,QWORD PTR [rbp-0x30]
  40a5c4:	mov    QWORD PTR [rbp-0x8],rax
  40a5c8:	mov    rcx,QWORD PTR [rbp-0x28]
  40a5cc:	mov    QWORD PTR [rbp-0x10],rcx
  40a5d0:	mov    rdx,QWORD PTR [rbp-0x38]
  40a5d4:	mov    QWORD PTR [rbp-0x18],rdx
  40a5d8:	mov    rsi,QWORD PTR [rbp-0x10]
  40a5dc:	mov    QWORD PTR [rbp-0x20],rsi
  40a5e0:	mov    rsi,QWORD PTR [rbp-0x20]
  40a5e4:	mov    edi,DWORD PTR [rsi+0x20]
  40a5e7:	sub    edi,0x8
  40a5ea:	mov    DWORD PTR [rbp-0x3c],edi
  40a5ed:	jne    40a63a <__generate_code_for_if_expression@@Base+0xaa>
  40a5f3:	jmp    40a5f8 <__generate_code_for_if_expression@@Base+0x68>
  40a5f8:	lea    rax,[rip+0x74c9]        # 411ac8 <_IO_stdin_used@@Base+0x4ac8>
  40a5ff:	add    rax,0x8
  40a603:	lea    rdi,[rip+0x7b6e]        # 412178 <__data_start@@Base+0x30>
  40a60a:	mov    rsi,rax
  40a60d:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a612:	mov    rax,QWORD PTR [rip+0x8b1f]        # 413138 <__bss_start@@Base+0xfa8>
  40a619:	add    rax,0x1
  40a61d:	mov    QWORD PTR [rip+0x8b14],rax        # 413138 <__bss_start@@Base+0xfa8>
  40a624:	mov    rdi,QWORD PTR [rbp-0x8]
  40a628:	mov    rsi,QWORD PTR [rbp-0x20]
  40a62c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a630:	call   40a830 <__generate_code_for_unary_boolean_expression@@Base>
  40a635:	jmp    40a670 <__generate_code_for_if_expression@@Base+0xe0>
  40a63a:	lea    rdi,[rip+0x7b37]        # 412178 <__data_start@@Base+0x30>
  40a641:	lea    rsi,[rip+0x7480]        # 411ac8 <_IO_stdin_used@@Base+0x4ac8>
  40a648:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a64d:	mov    rsi,QWORD PTR [rip+0x8aec]        # 413140 <__bss_start@@Base+0xfb0>
  40a654:	add    rsi,0x1
  40a658:	mov    QWORD PTR [rip+0x8ae1],rsi        # 413140 <__bss_start@@Base+0xfb0>
  40a65f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a663:	mov    rsi,QWORD PTR [rbp-0x20]
  40a667:	mov    rdx,QWORD PTR [rbp-0x18]
  40a66b:	call   40a990 <__generate_code_for_binary_boolean_expression@@Base>
  40a670:	mov    rax,QWORD PTR [rip+0x8ad1]        # 413148 <__bss_start@@Base+0xfb8>
  40a677:	add    rax,0x1
  40a67b:	mov    QWORD PTR [rip+0x8ac6],rax        # 413148 <__bss_start@@Base+0xfb8>
  40a682:	add    rsp,0x40
  40a686:	pop    rbp
  40a687:	ret    
  40a688:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a690 <__generate_code_for_return@@Base>:
  40a690:	push   rbp
  40a691:	mov    rbp,rsp
  40a694:	sub    rsp,0x40
  40a698:	mov    rax,QWORD PTR [rip+0x8ab1]        # 413150 <__bss_start@@Base+0xfc0>
  40a69f:	add    rax,0x1
  40a6a3:	mov    QWORD PTR [rip+0x8aa6],rax        # 413150 <__bss_start@@Base+0xfc0>
  40a6aa:	mov    QWORD PTR [rbp-0x20],rdi
  40a6ae:	mov    QWORD PTR [rbp-0x28],rsi
  40a6b2:	mov    DWORD PTR [rip+0x7ac0],0x0        # 41217c <__data_start@@Base+0x34>
  40a6bc:	mov    rax,QWORD PTR [rbp-0x20]
  40a6c0:	mov    QWORD PTR [rbp-0x8],rax
  40a6c4:	mov    rcx,QWORD PTR [rbp-0x28]
  40a6c8:	mov    QWORD PTR [rbp-0x10],rcx
  40a6cc:	mov    rdx,QWORD PTR [rbp-0x10]
  40a6d0:	mov    rdx,QWORD PTR [rdx+0x10]
  40a6d4:	mov    QWORD PTR [rbp-0x18],rdx
  40a6d8:	mov    rdx,QWORD PTR [rbp-0x8]
  40a6dc:	mov    rdi,QWORD PTR [rdx+0x8]
  40a6e0:	lea    rsi,[rip+0x3304]        # 40d9eb <_IO_stdin_used@@Base+0x9eb>
  40a6e7:	xor    r8d,r8d
  40a6ea:	mov    r9b,r8b
  40a6ed:	mov    al,r9b
  40a6f0:	call   403150 <fprintf@plt>
  40a6f5:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6f9:	mov    r8d,DWORD PTR [rcx]
  40a6fc:	sub    r8d,0x1
  40a700:	mov    DWORD PTR [rbp-0x2c],eax
  40a703:	mov    DWORD PTR [rbp-0x30],r8d
  40a707:	jne    40a753 <__generate_code_for_return@@Base+0xc3>
  40a70d:	jmp    40a712 <__generate_code_for_return@@Base+0x82>
  40a712:	lea    rax,[rip+0x73bf]        # 411ad8 <_IO_stdin_used@@Base+0x4ad8>
  40a719:	add    rax,0x8
  40a71d:	lea    rdi,[rip+0x7a58]        # 41217c <__data_start@@Base+0x34>
  40a724:	mov    rsi,rax
  40a727:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a72c:	mov    rax,QWORD PTR [rip+0x8a35]        # 413168 <__bss_start@@Base+0xfd8>
  40a733:	add    rax,0x1
  40a737:	mov    QWORD PTR [rip+0x8a2a],rax        # 413168 <__bss_start@@Base+0xfd8>
  40a73e:	mov    rdi,QWORD PTR [rbp-0x8]
  40a742:	mov    rax,QWORD PTR [rbp-0x18]
  40a746:	mov    rsi,rax
  40a749:	call   40a7c0 <__generate_code_for_int@@Base>
  40a74e:	jmp    40a78b <__generate_code_for_return@@Base+0xfb>
  40a753:	lea    rdi,[rip+0x7a22]        # 41217c <__data_start@@Base+0x34>
  40a75a:	lea    rsi,[rip+0x7377]        # 411ad8 <_IO_stdin_used@@Base+0x4ad8>
  40a761:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a766:	mov    rsi,QWORD PTR [rip+0x7883]        # 411ff0 <stderr@GLIBC_2.2.5>
  40a76d:	mov    rdi,QWORD PTR [rsi]
  40a770:	lea    rsi,[rip+0x327e]        # 40d9f5 <_IO_stdin_used@@Base+0x9f5>
  40a777:	mov    al,0x0
  40a779:	call   403150 <fprintf@plt>
  40a77e:	mov    edi,0x1
  40a783:	mov    DWORD PTR [rbp-0x34],eax
  40a786:	call   403250 <exit@plt>
  40a78b:	mov    rax,QWORD PTR [rip+0x89de]        # 413170 <__bss_start@@Base+0xfe0>
  40a792:	add    rax,0x1
  40a796:	mov    QWORD PTR [rip+0x89d3],rax        # 413170 <__bss_start@@Base+0xfe0>
  40a79d:	mov    rax,QWORD PTR [rbp-0x8]
  40a7a1:	mov    rdi,QWORD PTR [rax+0x8]
  40a7a5:	lea    rsi,[rip+0x326f]        # 40da1b <_IO_stdin_used@@Base+0xa1b>
  40a7ac:	mov    al,0x0
  40a7ae:	call   403150 <fprintf@plt>
  40a7b3:	mov    DWORD PTR [rbp-0x38],eax
  40a7b6:	add    rsp,0x40
  40a7ba:	pop    rbp
  40a7bb:	ret    
  40a7bc:	nop    DWORD PTR [rax+0x0]

000000000040a7c0 <__generate_code_for_int@@Base>:
  40a7c0:	push   rbp
  40a7c1:	mov    rbp,rsp
  40a7c4:	sub    rsp,0x30
  40a7c8:	mov    rax,QWORD PTR [rip+0x89a9]        # 413178 <__bss_start@@Base+0xfe8>
  40a7cf:	add    rax,0x1
  40a7d3:	mov    QWORD PTR [rip+0x899e],rax        # 413178 <__bss_start@@Base+0xfe8>
  40a7da:	mov    QWORD PTR [rbp-0x18],rdi
  40a7de:	mov    QWORD PTR [rbp-0x20],rsi
  40a7e2:	mov    rax,QWORD PTR [rip+0x8997]        # 413180 <__bss_start@@Base+0xff0>
  40a7e9:	add    rax,0x1
  40a7ed:	mov    QWORD PTR [rip+0x898c],rax        # 413180 <__bss_start@@Base+0xff0>
  40a7f4:	mov    rax,QWORD PTR [rbp-0x18]
  40a7f8:	mov    QWORD PTR [rbp-0x8],rax
  40a7fc:	mov    rcx,QWORD PTR [rbp-0x20]
  40a800:	mov    QWORD PTR [rbp-0x10],rcx
  40a804:	mov    rdx,QWORD PTR [rbp-0x8]
  40a808:	mov    rdi,QWORD PTR [rdx+0x8]
  40a80c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a810:	mov    edx,DWORD PTR [rdx+0x10]
  40a813:	lea    rsi,[rip+0x320a]        # 40da24 <_IO_stdin_used@@Base+0xa24>
  40a81a:	mov    al,0x0
  40a81c:	call   403150 <fprintf@plt>
  40a821:	mov    DWORD PTR [rbp-0x24],eax
  40a824:	add    rsp,0x30
  40a828:	pop    rbp
  40a829:	ret    
  40a82a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a830 <__generate_code_for_unary_boolean_expression@@Base>:
  40a830:	push   rbp
  40a831:	mov    rbp,rsp
  40a834:	sub    rsp,0x50
  40a838:	mov    rax,QWORD PTR [rip+0x8951]        # 413190 <__bss_start@@Base+0x1000>
  40a83f:	add    rax,0x1
  40a843:	mov    QWORD PTR [rip+0x8946],rax        # 413190 <__bss_start@@Base+0x1000>
  40a84a:	mov    QWORD PTR [rbp-0x28],rsi
  40a84e:	mov    QWORD PTR [rbp-0x30],rdi
  40a852:	mov    QWORD PTR [rbp-0x38],rdx
  40a856:	mov    DWORD PTR [rip+0x7920],0x0        # 412180 <__data_start@@Base+0x38>
  40a860:	mov    rax,QWORD PTR [rbp-0x30]
  40a864:	mov    QWORD PTR [rbp-0x8],rax
  40a868:	mov    rcx,QWORD PTR [rbp-0x28]
  40a86c:	mov    QWORD PTR [rbp-0x10],rcx
  40a870:	mov    rdx,QWORD PTR [rbp-0x38]
  40a874:	mov    QWORD PTR [rbp-0x18],rdx
  40a878:	mov    rsi,QWORD PTR [rbp-0x10]
  40a87c:	mov    rsi,QWORD PTR [rsi+0x10]
  40a880:	mov    QWORD PTR [rbp-0x20],rsi
  40a884:	mov    rsi,QWORD PTR [rbp-0x8]
  40a888:	mov    rdi,QWORD PTR [rsi+0x8]
  40a88c:	lea    rsi,[rip+0x323e]        # 40dad1 <_IO_stdin_used@@Base+0xad1>
  40a893:	xor    r8d,r8d
  40a896:	mov    r9b,r8b
  40a899:	mov    al,r9b
  40a89c:	mov    BYTE PTR [rbp-0x39],r9b
  40a8a0:	call   403150 <fprintf@plt>
  40a8a5:	mov    rcx,QWORD PTR [rbp-0x8]
  40a8a9:	mov    rdi,QWORD PTR [rcx+0x8]
  40a8ad:	lea    rsi,[rip+0x3174]        # 40da28 <_IO_stdin_used@@Base+0xa28>
  40a8b4:	mov    r9b,BYTE PTR [rbp-0x39]
  40a8b8:	mov    DWORD PTR [rbp-0x40],eax
  40a8bb:	mov    al,r9b
  40a8be:	call   403150 <fprintf@plt>
  40a8c3:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8c7:	mov    rsi,QWORD PTR [rbp-0x20]
  40a8cb:	mov    DWORD PTR [rbp-0x44],eax
  40a8ce:	call   40a7c0 <__generate_code_for_int@@Base>
  40a8d3:	mov    rcx,QWORD PTR [rbp-0x10]
  40a8d7:	mov    eax,DWORD PTR [rcx+0x20]
  40a8da:	sub    eax,0x8
  40a8dd:	mov    DWORD PTR [rbp-0x48],eax
  40a8e0:	jne    40a939 <__generate_code_for_unary_boolean_expression@@Base+0x109>
  40a8e6:	jmp    40a8eb <__generate_code_for_unary_boolean_expression@@Base+0xbb>
  40a8eb:	lea    rax,[rip+0x71f6]        # 411ae8 <_IO_stdin_used@@Base+0x4ae8>
  40a8f2:	add    rax,0x8
  40a8f6:	lea    rdi,[rip+0x7883]        # 412180 <__data_start@@Base+0x38>
  40a8fd:	mov    rsi,rax
  40a900:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a905:	mov    rax,QWORD PTR [rip+0x889c]        # 4131a8 <__bss_start@@Base+0x1018>
  40a90c:	add    rax,0x1
  40a910:	mov    QWORD PTR [rip+0x8891],rax        # 4131a8 <__bss_start@@Base+0x1018>
  40a917:	mov    rax,QWORD PTR [rbp-0x8]
  40a91b:	mov    rdi,QWORD PTR [rax+0x8]
  40a91f:	mov    rdx,QWORD PTR [rbp-0x18]
  40a923:	lea    rsi,[rip+0x3128]        # 40da52 <_IO_stdin_used@@Base+0xa52>
  40a92a:	mov    al,0x0
  40a92c:	call   403150 <fprintf@plt>
  40a931:	mov    DWORD PTR [rbp-0x4c],eax
  40a934:	jmp    40a971 <__generate_code_for_unary_boolean_expression@@Base+0x141>
  40a939:	lea    rdi,[rip+0x7840]        # 412180 <__data_start@@Base+0x38>
  40a940:	lea    rsi,[rip+0x71a1]        # 411ae8 <_IO_stdin_used@@Base+0x4ae8>
  40a947:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40a94c:	mov    rsi,QWORD PTR [rip+0x769d]        # 411ff0 <stderr@GLIBC_2.2.5>
  40a953:	mov    rdi,QWORD PTR [rsi]
  40a956:	lea    rsi,[rip+0x3154]        # 40dab1 <_IO_stdin_used@@Base+0xab1>
  40a95d:	mov    al,0x0
  40a95f:	call   403150 <fprintf@plt>
  40a964:	mov    edi,0x1
  40a969:	mov    DWORD PTR [rbp-0x50],eax
  40a96c:	call   403250 <exit@plt>
  40a971:	mov    rax,QWORD PTR [rip+0x8838]        # 4131b0 <__bss_start@@Base+0x1020>
  40a978:	add    rax,0x1
  40a97c:	mov    QWORD PTR [rip+0x882d],rax        # 4131b0 <__bss_start@@Base+0x1020>
  40a983:	add    rsp,0x50
  40a987:	pop    rbp
  40a988:	ret    
  40a989:	nop    DWORD PTR [rax+0x0]

000000000040a990 <__generate_code_for_binary_boolean_expression@@Base>:
  40a990:	push   rbp
  40a991:	mov    rbp,rsp
  40a994:	sub    rsp,0x90
  40a99b:	mov    rax,QWORD PTR [rip+0x881e]        # 4131c0 <__bss_start@@Base+0x1030>
  40a9a2:	add    rax,0x1
  40a9a6:	mov    QWORD PTR [rip+0x8813],rax        # 4131c0 <__bss_start@@Base+0x1030>
  40a9ad:	mov    QWORD PTR [rbp-0x30],rsi
  40a9b1:	mov    QWORD PTR [rbp-0x38],rdi
  40a9b5:	mov    QWORD PTR [rbp-0x40],rdx
  40a9b9:	mov    DWORD PTR [rip+0x77c1],0x0        # 412184 <__data_start@@Base+0x3c>
  40a9c3:	mov    rax,QWORD PTR [rbp-0x38]
  40a9c7:	mov    QWORD PTR [rbp-0x8],rax
  40a9cb:	mov    rcx,QWORD PTR [rbp-0x30]
  40a9cf:	mov    QWORD PTR [rbp-0x10],rcx
  40a9d3:	mov    rdx,QWORD PTR [rbp-0x40]
  40a9d7:	mov    QWORD PTR [rbp-0x18],rdx
  40a9db:	mov    rsi,QWORD PTR [rbp-0x10]
  40a9df:	mov    rsi,QWORD PTR [rsi+0x10]
  40a9e3:	mov    QWORD PTR [rbp-0x20],rsi
  40a9e7:	mov    rsi,QWORD PTR [rbp-0x10]
  40a9eb:	mov    rsi,QWORD PTR [rsi+0x18]
  40a9ef:	mov    QWORD PTR [rbp-0x28],rsi
  40a9f3:	mov    rsi,QWORD PTR [rbp-0x8]
  40a9f7:	mov    rdi,QWORD PTR [rsi+0x8]
  40a9fb:	lea    rsi,[rip+0x2fe9]        # 40d9eb <_IO_stdin_used@@Base+0x9eb>
  40aa02:	xor    r8d,r8d
  40aa05:	mov    r9b,r8b
  40aa08:	mov    al,r9b
  40aa0b:	mov    BYTE PTR [rbp-0x41],r9b
  40aa0f:	call   403150 <fprintf@plt>
  40aa14:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa18:	mov    rsi,QWORD PTR [rbp-0x20]
  40aa1c:	mov    DWORD PTR [rbp-0x48],eax
  40aa1f:	call   40a7c0 <__generate_code_for_int@@Base>
  40aa24:	mov    rcx,QWORD PTR [rbp-0x8]
  40aa28:	mov    rdi,QWORD PTR [rcx+0x8]
  40aa2c:	lea    rcx,[rip+0x2603]        # 40d036 <_IO_stdin_used@@Base+0x36>
  40aa33:	mov    rsi,rcx
  40aa36:	mov    al,BYTE PTR [rbp-0x41]
  40aa39:	mov    QWORD PTR [rbp-0x50],rcx
  40aa3d:	call   403150 <fprintf@plt>
  40aa42:	mov    rcx,QWORD PTR [rbp-0x8]
  40aa46:	mov    rdi,QWORD PTR [rcx+0x8]
  40aa4a:	lea    rsi,[rip+0x2fd7]        # 40da28 <_IO_stdin_used@@Base+0xa28>
  40aa51:	mov    r9b,BYTE PTR [rbp-0x41]
  40aa55:	mov    DWORD PTR [rbp-0x54],eax
  40aa58:	mov    al,r9b
  40aa5b:	call   403150 <fprintf@plt>
  40aa60:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa64:	mov    rsi,QWORD PTR [rbp-0x28]
  40aa68:	mov    DWORD PTR [rbp-0x58],eax
  40aa6b:	call   40a7c0 <__generate_code_for_int@@Base>
  40aa70:	mov    rcx,QWORD PTR [rbp-0x8]
  40aa74:	mov    rdi,QWORD PTR [rcx+0x8]
  40aa78:	mov    rsi,QWORD PTR [rbp-0x50]
  40aa7c:	mov    al,BYTE PTR [rbp-0x41]
  40aa7f:	call   403150 <fprintf@plt>
  40aa84:	mov    rcx,QWORD PTR [rbp-0x8]
  40aa88:	mov    rdi,QWORD PTR [rcx+0x8]
  40aa8c:	lea    rsi,[rip+0x2f9f]        # 40da32 <_IO_stdin_used@@Base+0xa32>
  40aa93:	mov    r9b,BYTE PTR [rbp-0x41]
  40aa97:	mov    DWORD PTR [rbp-0x5c],eax
  40aa9a:	mov    al,r9b
  40aa9d:	call   403150 <fprintf@plt>
  40aaa2:	mov    rcx,QWORD PTR [rbp-0x10]
  40aaa6:	mov    r8d,DWORD PTR [rcx+0x20]
  40aaaa:	mov    ecx,r8d
  40aaad:	mov    rdx,rcx
  40aab0:	sub    rdx,0x7
  40aab4:	mov    DWORD PTR [rbp-0x60],eax
  40aab7:	mov    QWORD PTR [rbp-0x68],rcx
  40aabb:	mov    QWORD PTR [rbp-0x70],rdx
  40aabf:	ja     40ad15 <__generate_code_for_binary_boolean_expression@@Base+0x385>
  40aac5:	lea    rax,[rip+0x2ea4]        # 40d970 <_IO_stdin_used@@Base+0x970>
  40aacc:	mov    rcx,QWORD PTR [rbp-0x68]
  40aad0:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40aad4:	add    rdx,rax
  40aad7:	jmp    rdx
  40aad9:	lea    rax,[rip+0x7020]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40aae0:	add    rax,0x8
  40aae4:	lea    rdi,[rip+0x7699]        # 412184 <__data_start@@Base+0x3c>
  40aaeb:	mov    rsi,rax
  40aaee:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40aaf3:	mov    rax,QWORD PTR [rip+0x8716]        # 413210 <__bss_start@@Base+0x1080>
  40aafa:	add    rax,0x1
  40aafe:	mov    QWORD PTR [rip+0x870b],rax        # 413210 <__bss_start@@Base+0x1080>
  40ab05:	mov    rax,QWORD PTR [rbp-0x8]
  40ab09:	mov    rdi,QWORD PTR [rax+0x8]
  40ab0d:	mov    rdx,QWORD PTR [rbp-0x18]
  40ab11:	lea    rsi,[rip+0x2f27]        # 40da3f <_IO_stdin_used@@Base+0xa3f>
  40ab18:	mov    al,0x0
  40ab1a:	call   403150 <fprintf@plt>
  40ab1f:	mov    DWORD PTR [rbp-0x74],eax
  40ab22:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40ab27:	lea    rax,[rip+0x6fd2]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40ab2e:	add    rax,0x10
  40ab32:	lea    rdi,[rip+0x764b]        # 412184 <__data_start@@Base+0x3c>
  40ab39:	mov    rsi,rax
  40ab3c:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40ab41:	mov    rax,QWORD PTR [rip+0x86d0]        # 413218 <__bss_start@@Base+0x1088>
  40ab48:	add    rax,0x1
  40ab4c:	mov    QWORD PTR [rip+0x86c5],rax        # 413218 <__bss_start@@Base+0x1088>
  40ab53:	mov    rax,QWORD PTR [rbp-0x8]
  40ab57:	mov    rdi,QWORD PTR [rax+0x8]
  40ab5b:	mov    rdx,QWORD PTR [rbp-0x18]
  40ab5f:	lea    rsi,[rip+0x2eec]        # 40da52 <_IO_stdin_used@@Base+0xa52>
  40ab66:	mov    al,0x0
  40ab68:	call   403150 <fprintf@plt>
  40ab6d:	mov    DWORD PTR [rbp-0x78],eax
  40ab70:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40ab75:	lea    rax,[rip+0x6f84]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40ab7c:	add    rax,0x18
  40ab80:	lea    rdi,[rip+0x75fd]        # 412184 <__data_start@@Base+0x3c>
  40ab87:	mov    rsi,rax
  40ab8a:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40ab8f:	mov    rax,QWORD PTR [rip+0x868a]        # 413220 <__bss_start@@Base+0x1090>
  40ab96:	add    rax,0x1
  40ab9a:	mov    QWORD PTR [rip+0x867f],rax        # 413220 <__bss_start@@Base+0x1090>
  40aba1:	mov    rax,QWORD PTR [rbp-0x8]
  40aba5:	mov    rdi,QWORD PTR [rax+0x8]
  40aba9:	mov    rdx,QWORD PTR [rbp-0x18]
  40abad:	lea    rsi,[rip+0x2eb1]        # 40da65 <_IO_stdin_used@@Base+0xa65>
  40abb4:	mov    al,0x0
  40abb6:	call   403150 <fprintf@plt>
  40abbb:	mov    DWORD PTR [rbp-0x7c],eax
  40abbe:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40abc3:	lea    rax,[rip+0x6f36]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40abca:	add    rax,0x20
  40abce:	lea    rdi,[rip+0x75af]        # 412184 <__data_start@@Base+0x3c>
  40abd5:	mov    rsi,rax
  40abd8:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40abdd:	mov    rax,QWORD PTR [rip+0x8644]        # 413228 <__bss_start@@Base+0x1098>
  40abe4:	add    rax,0x1
  40abe8:	mov    QWORD PTR [rip+0x8639],rax        # 413228 <__bss_start@@Base+0x1098>
  40abef:	mov    rax,QWORD PTR [rbp-0x8]
  40abf3:	mov    rdi,QWORD PTR [rax+0x8]
  40abf7:	mov    rdx,QWORD PTR [rbp-0x18]
  40abfb:	lea    rsi,[rip+0x2e76]        # 40da78 <_IO_stdin_used@@Base+0xa78>
  40ac02:	mov    al,0x0
  40ac04:	call   403150 <fprintf@plt>
  40ac09:	mov    DWORD PTR [rbp-0x80],eax
  40ac0c:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40ac11:	lea    rax,[rip+0x6ee8]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40ac18:	add    rax,0x28
  40ac1c:	lea    rdi,[rip+0x7561]        # 412184 <__data_start@@Base+0x3c>
  40ac23:	mov    rsi,rax
  40ac26:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40ac2b:	mov    rax,QWORD PTR [rip+0x85fe]        # 413230 <__bss_start@@Base+0x10a0>
  40ac32:	add    rax,0x1
  40ac36:	mov    QWORD PTR [rip+0x85f3],rax        # 413230 <__bss_start@@Base+0x10a0>
  40ac3d:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40ac42:	lea    rax,[rip+0x6eb7]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40ac49:	add    rax,0x30
  40ac4d:	lea    rdi,[rip+0x7530]        # 412184 <__data_start@@Base+0x3c>
  40ac54:	mov    rsi,rax
  40ac57:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40ac5c:	mov    rax,QWORD PTR [rip+0x85d5]        # 413238 <__bss_start@@Base+0x10a8>
  40ac63:	add    rax,0x1
  40ac67:	mov    QWORD PTR [rip+0x85ca],rax        # 413238 <__bss_start@@Base+0x10a8>
  40ac6e:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40ac73:	lea    rax,[rip+0x6e86]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40ac7a:	add    rax,0x38
  40ac7e:	lea    rdi,[rip+0x74ff]        # 412184 <__data_start@@Base+0x3c>
  40ac85:	mov    rsi,rax
  40ac88:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40ac8d:	mov    rax,QWORD PTR [rip+0x85ac]        # 413240 <__bss_start@@Base+0x10b0>
  40ac94:	add    rax,0x1
  40ac98:	mov    QWORD PTR [rip+0x85a1],rax        # 413240 <__bss_start@@Base+0x10b0>
  40ac9f:	mov    rax,QWORD PTR [rbp-0x8]
  40aca3:	mov    rdi,QWORD PTR [rax+0x8]
  40aca7:	mov    rdx,QWORD PTR [rbp-0x18]
  40acab:	lea    rsi,[rip+0x2dd9]        # 40da8b <_IO_stdin_used@@Base+0xa8b>
  40acb2:	mov    al,0x0
  40acb4:	call   403150 <fprintf@plt>
  40acb9:	mov    DWORD PTR [rbp-0x84],eax
  40acbf:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40acc4:	lea    rax,[rip+0x6e35]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40accb:	add    rax,0x40
  40accf:	lea    rdi,[rip+0x74ae]        # 412184 <__data_start@@Base+0x3c>
  40acd6:	mov    rsi,rax
  40acd9:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40acde:	mov    rax,QWORD PTR [rip+0x8563]        # 413248 <__bss_start@@Base+0x10b8>
  40ace5:	add    rax,0x1
  40ace9:	mov    QWORD PTR [rip+0x8558],rax        # 413248 <__bss_start@@Base+0x10b8>
  40acf0:	mov    rax,QWORD PTR [rbp-0x8]
  40acf4:	mov    rdi,QWORD PTR [rax+0x8]
  40acf8:	mov    rdx,QWORD PTR [rbp-0x18]
  40acfc:	lea    rsi,[rip+0x2d9b]        # 40da9e <_IO_stdin_used@@Base+0xa9e>
  40ad03:	mov    al,0x0
  40ad05:	call   403150 <fprintf@plt>
  40ad0a:	mov    DWORD PTR [rbp-0x88],eax
  40ad10:	jmp    40ad50 <__generate_code_for_binary_boolean_expression@@Base+0x3c0>
  40ad15:	lea    rdi,[rip+0x7468]        # 412184 <__data_start@@Base+0x3c>
  40ad1c:	lea    rsi,[rip+0x6ddd]        # 411b00 <_IO_stdin_used@@Base+0x4b00>
  40ad23:	call   40ad70 <__generate_code_for_binary_boolean_expression@@Base+0x3e0>
  40ad28:	mov    rsi,QWORD PTR [rip+0x72c1]        # 411ff0 <stderr@GLIBC_2.2.5>
  40ad2f:	mov    rdi,QWORD PTR [rsi]
  40ad32:	lea    rsi,[rip+0x2d78]        # 40dab1 <_IO_stdin_used@@Base+0xab1>
  40ad39:	mov    al,0x0
  40ad3b:	call   403150 <fprintf@plt>
  40ad40:	mov    edi,0x1
  40ad45:	mov    DWORD PTR [rbp-0x8c],eax
  40ad4b:	call   403250 <exit@plt>
  40ad50:	mov    rax,QWORD PTR [rip+0x84f9]        # 413250 <__bss_start@@Base+0x10c0>
  40ad57:	add    rax,0x1
  40ad5b:	mov    QWORD PTR [rip+0x84ee],rax        # 413250 <__bss_start@@Base+0x10c0>
  40ad62:	add    rsp,0x90
  40ad69:	pop    rbp
  40ad6a:	ret    
  40ad6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad70:	mov    eax,DWORD PTR [rdi]
  40ad72:	cmp    eax,0xffffffff
  40ad75:	mov    QWORD PTR [rsp-0x8],rsi
  40ad7a:	mov    DWORD PTR [rsp-0xc],eax
  40ad7e:	je     40adb3 <__generate_code_for_binary_boolean_expression@@Base+0x423>
  40ad84:	mov    eax,DWORD PTR [rsp-0xc]
  40ad88:	mov    ecx,eax
  40ad8a:	mov    edx,ecx
  40ad8c:	mov    rsi,QWORD PTR [rsp-0x8]
  40ad91:	mov    rdx,QWORD PTR [rsi+rdx*8]
  40ad95:	cmp    rdx,0x0
  40ad99:	mov    QWORD PTR [rsp-0x18],rdx
  40ad9e:	je     40adb3 <__generate_code_for_binary_boolean_expression@@Base+0x423>
  40ada4:	mov    rax,QWORD PTR [rsp-0x18]
  40ada9:	mov    rcx,QWORD PTR [rax]
  40adac:	add    rcx,0x1
  40adb0:	mov    QWORD PTR [rax],rcx
  40adb3:	ret    
  40adb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adbe:	xchg   ax,ax
  40adc0:	sub    rsp,0x38
  40adc4:	xor    eax,eax
  40adc6:	mov    DWORD PTR [rsp+0x34],eax
  40adca:	jmp    40adcf <__generate_code_for_binary_boolean_expression@@Base+0x43f>
  40adcf:	mov    eax,DWORD PTR [rsp+0x34]
  40add3:	movsxd rcx,eax
  40add6:	imul   rcx,rcx,0x30
  40adda:	lea    rdx,[rip+0x6fdf]        # 411dc0 <_IO_stdin_used@@Base+0x4dc0>
  40ade1:	add    rdx,rcx
  40ade4:	mov    rdi,QWORD PTR [rdx]
  40ade7:	mov    rsi,QWORD PTR [rdx+0x8]
  40adeb:	mov    r8d,DWORD PTR [rdx+0x10]
  40adef:	mov    QWORD PTR [rsp+0x28],rdx
  40adf4:	mov    edx,r8d
  40adf7:	mov    DWORD PTR [rsp+0x24],eax
  40adfb:	call   40b1e0 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  40ae00:	xor    eax,eax
  40ae02:	mov    rcx,QWORD PTR [rsp+0x28]
  40ae07:	mov    edx,DWORD PTR [rcx+0x18]
  40ae0a:	mov    rsi,QWORD PTR [rcx+0x20]
  40ae0e:	mov    rdi,QWORD PTR [rcx+0x28]
  40ae12:	cmp    eax,edx
  40ae14:	mov    QWORD PTR [rsp+0x18],rdi
  40ae19:	mov    DWORD PTR [rsp+0x14],edx
  40ae1d:	mov    QWORD PTR [rsp+0x8],rsi
  40ae22:	mov    DWORD PTR [rsp+0x4],eax
  40ae26:	jge    40ae97 <__generate_code_for_binary_boolean_expression@@Base+0x507>
  40ae2c:	mov    eax,DWORD PTR [rsp+0x4]
  40ae30:	movsxd rcx,eax
  40ae33:	shl    rcx,0x5
  40ae37:	mov    rdx,QWORD PTR [rsp+0x8]
  40ae3c:	add    rdx,rcx
  40ae3f:	mov    edi,DWORD PTR [rdx]
  40ae41:	mov    rsi,QWORD PTR [rdx+0x8]
  40ae45:	mov    r8d,DWORD PTR [rdx+0x10]
  40ae49:	mov    r9b,BYTE PTR [rdx+0x14]
  40ae4d:	mov    r10d,DWORD PTR [rdx+0x18]
  40ae51:	mov    edx,r8d
  40ae54:	movzx  ecx,r9b
  40ae58:	mov    r8d,r10d
  40ae5b:	mov    DWORD PTR [rsp],eax
  40ae5e:	call   40b630 <__generate_code_for_binary_boolean_expression@@Base+0xca0>
  40ae63:	mov    eax,DWORD PTR [rsp]
  40ae66:	movsxd rsi,eax
  40ae69:	shl    rsi,0x4
  40ae6d:	mov    r11,QWORD PTR [rsp+0x18]
  40ae72:	add    r11,rsi
  40ae75:	mov    edi,DWORD PTR [r11]
  40ae78:	mov    rsi,QWORD PTR [r11+0x8]
  40ae7c:	call   40ba60 <__generate_code_for_binary_boolean_expression@@Base+0x10d0>
  40ae81:	mov    eax,DWORD PTR [rsp]
  40ae84:	add    eax,0x1
  40ae87:	mov    ecx,DWORD PTR [rsp+0x14]
  40ae8b:	cmp    eax,ecx
  40ae8d:	mov    DWORD PTR [rsp+0x4],eax
  40ae91:	jl     40ae2c <__generate_code_for_binary_boolean_expression@@Base+0x49c>
  40ae97:	call   40be80 <__generate_code_for_binary_boolean_expression@@Base+0x14f0>
  40ae9c:	call   40c620 <__generate_code_for_binary_boolean_expression@@Base+0x1c90>
  40aea1:	mov    eax,DWORD PTR [rsp+0x24]
  40aea5:	add    eax,0x1
  40aea8:	cmp    eax,0x1
  40aeab:	mov    DWORD PTR [rsp+0x34],eax
  40aeaf:	jl     40adcf <__generate_code_for_binary_boolean_expression@@Base+0x43f>
  40aeb5:	add    rsp,0x38
  40aeb9:	ret    
  40aeba:	nop    WORD PTR [rax+rax*1+0x0]
  40aec0:	push   rax
  40aec1:	call   40adc0 <__generate_code_for_binary_boolean_expression@@Base+0x430>
  40aec6:	mov    QWORD PTR [rip+0x8147],0x0        # 413018 <__bss_start@@Base+0xe88>
  40aed1:	mov    QWORD PTR [rip+0x8134],0x0        # 413010 <__bss_start@@Base+0xe80>
  40aedc:	mov    QWORD PTR [rip+0x8141],0x0        # 413028 <__bss_start@@Base+0xe98>
  40aee7:	mov    QWORD PTR [rip+0x812e],0x0        # 413020 <__bss_start@@Base+0xe90>
  40aef2:	mov    QWORD PTR [rip+0x813b],0x0        # 413038 <__bss_start@@Base+0xea8>
  40aefd:	mov    QWORD PTR [rip+0x8128],0x0        # 413030 <__bss_start@@Base+0xea0>
  40af08:	mov    QWORD PTR [rip+0x8135],0x0        # 413048 <__bss_start@@Base+0xeb8>
  40af13:	mov    QWORD PTR [rip+0x8122],0x0        # 413040 <__bss_start@@Base+0xeb0>
  40af1e:	mov    QWORD PTR [rip+0x8147],0x0        # 413070 <__bss_start@@Base+0xee0>
  40af29:	mov    QWORD PTR [rip+0x8134],0x0        # 413068 <__bss_start@@Base+0xed8>
  40af34:	mov    QWORD PTR [rip+0x8121],0x0        # 413060 <__bss_start@@Base+0xed0>
  40af3f:	mov    QWORD PTR [rip+0x810e],0x0        # 413058 <__bss_start@@Base+0xec8>
  40af4a:	mov    QWORD PTR [rip+0x80fb],0x0        # 413050 <__bss_start@@Base+0xec0>
  40af55:	mov    QWORD PTR [rip+0x8120],0x0        # 413080 <__bss_start@@Base+0xef0>
  40af60:	mov    QWORD PTR [rip+0x810d],0x0        # 413078 <__bss_start@@Base+0xee8>
  40af6b:	mov    QWORD PTR [rip+0x816a],0x0        # 4130e0 <__bss_start@@Base+0xf50>
  40af76:	mov    QWORD PTR [rip+0x8157],0x0        # 4130d8 <__bss_start@@Base+0xf48>
  40af81:	mov    QWORD PTR [rip+0x8144],0x0        # 4130d0 <__bss_start@@Base+0xf40>
  40af8c:	mov    QWORD PTR [rip+0x8131],0x0        # 4130c8 <__bss_start@@Base+0xf38>
  40af97:	mov    QWORD PTR [rip+0x811e],0x0        # 4130c0 <__bss_start@@Base+0xf30>
  40afa2:	mov    QWORD PTR [rip+0x810b],0x0        # 4130b8 <__bss_start@@Base+0xf28>
  40afad:	mov    QWORD PTR [rip+0x80f8],0x0        # 4130b0 <__bss_start@@Base+0xf20>
  40afb8:	mov    QWORD PTR [rip+0x80e5],0x0        # 4130a8 <__bss_start@@Base+0xf18>
  40afc3:	mov    QWORD PTR [rip+0x80d2],0x0        # 4130a0 <__bss_start@@Base+0xf10>
  40afce:	mov    QWORD PTR [rip+0x80bf],0x0        # 413098 <__bss_start@@Base+0xf08>
  40afd9:	mov    QWORD PTR [rip+0x80ac],0x0        # 413090 <__bss_start@@Base+0xf00>
  40afe4:	mov    QWORD PTR [rip+0x8121],0x0        # 413110 <__bss_start@@Base+0xf80>
  40afef:	mov    QWORD PTR [rip+0x810e],0x0        # 413108 <__bss_start@@Base+0xf78>
  40affa:	mov    QWORD PTR [rip+0x80fb],0x0        # 413100 <__bss_start@@Base+0xf70>
  40b005:	mov    QWORD PTR [rip+0x80e8],0x0        # 4130f8 <__bss_start@@Base+0xf68>
  40b010:	mov    QWORD PTR [rip+0x80d5],0x0        # 4130f0 <__bss_start@@Base+0xf60>
  40b01b:	mov    QWORD PTR [rip+0x8122],0x0        # 413148 <__bss_start@@Base+0xfb8>
  40b026:	mov    QWORD PTR [rip+0x810f],0x0        # 413140 <__bss_start@@Base+0xfb0>
  40b031:	mov    QWORD PTR [rip+0x80fc],0x0        # 413138 <__bss_start@@Base+0xfa8>
  40b03c:	mov    QWORD PTR [rip+0x80e9],0x0        # 413130 <__bss_start@@Base+0xfa0>
  40b047:	mov    QWORD PTR [rip+0x80d6],0x0        # 413128 <__bss_start@@Base+0xf98>
  40b052:	mov    QWORD PTR [rip+0x80c3],0x0        # 413120 <__bss_start@@Base+0xf90>
  40b05d:	mov    QWORD PTR [rip+0x8108],0x0        # 413170 <__bss_start@@Base+0xfe0>
  40b068:	mov    QWORD PTR [rip+0x80f5],0x0        # 413168 <__bss_start@@Base+0xfd8>
  40b073:	mov    QWORD PTR [rip+0x80e2],0x0        # 413160 <__bss_start@@Base+0xfd0>
  40b07e:	mov    QWORD PTR [rip+0x80cf],0x0        # 413158 <__bss_start@@Base+0xfc8>
  40b089:	mov    QWORD PTR [rip+0x80bc],0x0        # 413150 <__bss_start@@Base+0xfc0>
  40b094:	mov    QWORD PTR [rip+0x80e1],0x0        # 413180 <__bss_start@@Base+0xff0>
  40b09f:	mov    QWORD PTR [rip+0x80ce],0x0        # 413178 <__bss_start@@Base+0xfe8>
  40b0aa:	mov    QWORD PTR [rip+0x80fb],0x0        # 4131b0 <__bss_start@@Base+0x1020>
  40b0b5:	mov    QWORD PTR [rip+0x80e8],0x0        # 4131a8 <__bss_start@@Base+0x1018>
  40b0c0:	mov    QWORD PTR [rip+0x80d5],0x0        # 4131a0 <__bss_start@@Base+0x1010>
  40b0cb:	mov    QWORD PTR [rip+0x80c2],0x0        # 413198 <__bss_start@@Base+0x1008>
  40b0d6:	mov    QWORD PTR [rip+0x80af],0x0        # 413190 <__bss_start@@Base+0x1000>
  40b0e1:	mov    QWORD PTR [rip+0x8164],0x0        # 413250 <__bss_start@@Base+0x10c0>
  40b0ec:	mov    QWORD PTR [rip+0x8151],0x0        # 413248 <__bss_start@@Base+0x10b8>
  40b0f7:	mov    QWORD PTR [rip+0x813e],0x0        # 413240 <__bss_start@@Base+0x10b0>
  40b102:	mov    QWORD PTR [rip+0x812b],0x0        # 413238 <__bss_start@@Base+0x10a8>
  40b10d:	mov    QWORD PTR [rip+0x8118],0x0        # 413230 <__bss_start@@Base+0x10a0>
  40b118:	mov    QWORD PTR [rip+0x8105],0x0        # 413228 <__bss_start@@Base+0x1098>
  40b123:	mov    QWORD PTR [rip+0x80f2],0x0        # 413220 <__bss_start@@Base+0x1090>
  40b12e:	mov    QWORD PTR [rip+0x80df],0x0        # 413218 <__bss_start@@Base+0x1088>
  40b139:	mov    QWORD PTR [rip+0x80cc],0x0        # 413210 <__bss_start@@Base+0x1080>
  40b144:	mov    QWORD PTR [rip+0x80b9],0x0        # 413208 <__bss_start@@Base+0x1078>
  40b14f:	mov    QWORD PTR [rip+0x80a6],0x0        # 413200 <__bss_start@@Base+0x1070>
  40b15a:	mov    QWORD PTR [rip+0x8093],0x0        # 4131f8 <__bss_start@@Base+0x1068>
  40b165:	mov    QWORD PTR [rip+0x8080],0x0        # 4131f0 <__bss_start@@Base+0x1060>
  40b170:	mov    QWORD PTR [rip+0x806d],0x0        # 4131e8 <__bss_start@@Base+0x1058>
  40b17b:	mov    QWORD PTR [rip+0x805a],0x0        # 4131e0 <__bss_start@@Base+0x1050>
  40b186:	mov    QWORD PTR [rip+0x8047],0x0        # 4131d8 <__bss_start@@Base+0x1048>
  40b191:	mov    QWORD PTR [rip+0x8034],0x0        # 4131d0 <__bss_start@@Base+0x1040>
  40b19c:	mov    QWORD PTR [rip+0x8021],0x0        # 4131c8 <__bss_start@@Base+0x1038>
  40b1a7:	mov    QWORD PTR [rip+0x800e],0x0        # 4131c0 <__bss_start@@Base+0x1030>
  40b1b2:	pop    rax
  40b1b3:	ret    
  40b1b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1be:	xchg   ax,ax
  40b1c0:	push   rax
  40b1c1:	lea    rdi,[rip+0xfffffffffffffbf8]        # 40adc0 <__generate_code_for_binary_boolean_expression@@Base+0x430>
  40b1c8:	lea    rsi,[rip+0xfffffffffffffcf1]        # 40aec0 <__generate_code_for_binary_boolean_expression@@Base+0x530>
  40b1cf:	call   40c9e0 <__gcov_flush@@Base+0xa0>
  40b1d4:	pop    rax
  40b1d5:	ret    
  40b1d6:	xchg   ax,ax
  40b1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1e0:	push   rbp
  40b1e1:	push   r15
  40b1e3:	push   r14
  40b1e5:	push   r13
  40b1e7:	push   r12
  40b1e9:	push   rbx
  40b1ea:	sub    rsp,0x18
  40b1ee:	mov    r14d,edx
  40b1f1:	mov    r15,rsi
  40b1f4:	mov    r12,rdi
  40b1f7:	lea    rdi,[rsp+0xc]
  40b1fc:	lea    rsi,[rsp+0x10]
  40b201:	call   40cd20 <__gcov_flush@@Base+0x3e0>
  40b206:	test   rax,rax
  40b209:	je     40b243 <__generate_code_for_binary_boolean_expression@@Base+0x8b3>
  40b20b:	mov    rbx,rax
  40b20e:	mov    r13,QWORD PTR [rsp+0x10]
  40b213:	mov    rdi,r12
  40b216:	call   4030e0 <strlen@plt>
  40b21b:	lea    rdi,[rax+r13*1]
  40b21f:	add    rdi,0x2
  40b223:	call   4031a0 <malloc@plt>
  40b228:	mov    rbp,rax
  40b22b:	mov    r8d,DWORD PTR [rsp+0xc]
  40b230:	mov    rdi,rax
  40b233:	mov    rsi,r12
  40b236:	mov    rdx,rbx
  40b239:	mov    rcx,r13
  40b23c:	call   40cdb0 <__gcov_flush@@Base+0x470>
  40b241:	jmp    40b24e <__generate_code_for_binary_boolean_expression@@Base+0x8be>
  40b243:	mov    rdi,r12
  40b246:	call   403270 <strdup@plt>
  40b24b:	mov    rbp,rax
  40b24e:	mov    QWORD PTR [rip+0x8003],rbp        # 413258 <__bss_start@@Base+0x10c8>
  40b255:	mov    BYTE PTR [rip+0x8004],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40b25c:	mov    esi,0x2
  40b261:	xor    eax,eax
  40b263:	mov    rdi,rbp
  40b266:	call   403200 <open@plt>
  40b26b:	mov    DWORD PTR [rip+0x6f17],eax        # 412188 <__data_start@@Base+0x40>
  40b271:	cmp    eax,0xffffffff
  40b274:	je     40b27f <__generate_code_for_binary_boolean_expression@@Base+0x8ef>
  40b276:	lea    rbx,[rip+0x2aa1]        # 40dd1e <_IO_stdin_used@@Base+0xd1e>
  40b27d:	jmp    40b2e3 <__generate_code_for_binary_boolean_expression@@Base+0x953>
  40b27f:	mov    BYTE PTR [rip+0x7fda],0x1        # 413260 <__bss_start@@Base+0x10d0>
  40b286:	mov    rdi,QWORD PTR [rip+0x7fcb]        # 413258 <__bss_start@@Base+0x10c8>
  40b28d:	mov    esi,0x42
  40b292:	mov    edx,0x1a4
  40b297:	xor    eax,eax
  40b299:	call   403200 <open@plt>
  40b29e:	mov    DWORD PTR [rip+0x6ee4],eax        # 412188 <__data_start@@Base+0x40>
  40b2a4:	lea    rbx,[rip+0x2a77]        # 40dd22 <_IO_stdin_used@@Base+0xd22>
  40b2ab:	cmp    eax,0xffffffff
  40b2ae:	jne    40b2e3 <__generate_code_for_binary_boolean_expression@@Base+0x953>
  40b2b0:	mov    rdi,QWORD PTR [rip+0x7fa1]        # 413258 <__bss_start@@Base+0x10c8>
  40b2b7:	call   40cad0 <__gcov_flush@@Base+0x190>
  40b2bc:	mov    rdi,QWORD PTR [rip+0x7f95]        # 413258 <__bss_start@@Base+0x10c8>
  40b2c3:	mov    esi,0x42
  40b2c8:	mov    edx,0x1a4
  40b2cd:	xor    eax,eax
  40b2cf:	call   403200 <open@plt>
  40b2d4:	mov    DWORD PTR [rip+0x6eae],eax        # 412188 <__data_start@@Base+0x40>
  40b2da:	cmp    eax,0xffffffff
  40b2dd:	je     40b5d9 <__generate_code_for_binary_boolean_expression@@Base+0xc49>
  40b2e3:	mov    edi,eax
  40b2e5:	call   40cb90 <__gcov_flush@@Base+0x250>
  40b2ea:	mov    edi,DWORD PTR [rip+0x6e98]        # 412188 <__data_start@@Base+0x40>
  40b2f0:	mov    rsi,rbx
  40b2f3:	call   4031e0 <fdopen@plt>
  40b2f8:	mov    QWORD PTR [rip+0x7f69],rax        # 413268 <__bss_start@@Base+0x10d8>
  40b2ff:	mov    QWORD PTR [rip+0x7f66],0x0        # 413270 <__bss_start@@Base+0x10e0>
  40b30a:	mov    QWORD PTR [rip+0x7f63],0x0        # 413278 <__bss_start@@Base+0x10e8>
  40b315:	mov    QWORD PTR [rip+0x7f60],0x0        # 413280 <__bss_start@@Base+0x10f0>
  40b320:	cmp    BYTE PTR [rip+0x7f39],0x1        # 413260 <__bss_start@@Base+0x10d0>
  40b327:	jne    40b357 <__generate_code_for_binary_boolean_expression@@Base+0x9c7>
  40b329:	mov    edi,0x20000
  40b32e:	call   4031a0 <malloc@plt>
  40b333:	mov    r12,rax
  40b336:	mov    QWORD PTR [rip+0x7f33],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b33d:	mov    QWORD PTR [rip+0x7f30],0x20000        # 413278 <__bss_start@@Base+0x10e8>
  40b348:	xor    esi,esi
  40b34a:	mov    edx,0x20000
  40b34f:	mov    rdi,rax
  40b352:	jmp    40b473 <__generate_code_for_binary_boolean_expression@@Base+0xae3>
  40b357:	xor    esi,esi
  40b359:	mov    edx,0x2
  40b35e:	mov    rdi,rax
  40b361:	call   4031c0 <fseek@plt>
  40b366:	mov    rdi,QWORD PTR [rip+0x7efb]        # 413268 <__bss_start@@Base+0x10d8>
  40b36d:	call   403160 <ftell@plt>
  40b372:	mov    QWORD PTR [rip+0x7f27],rax        # 4132a0 <__bss_start@@Base+0x1110>
  40b379:	test   rax,rax
  40b37c:	je     40b410 <__generate_code_for_binary_boolean_expression@@Base+0xa80>
  40b382:	mov    r8d,DWORD PTR [rip+0x6dff]        # 412188 <__data_start@@Base+0x40>
  40b389:	xor    edi,edi
  40b38b:	mov    edx,0x3
  40b390:	mov    ecx,0x1
  40b395:	xor    r9d,r9d
  40b398:	mov    rsi,rax
  40b39b:	call   4030f0 <mmap@plt>
  40b3a0:	mov    QWORD PTR [rip+0x7ec9],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b3a7:	cmp    rax,0xffffffffffffffff
  40b3ab:	je     40b3dc <__generate_code_for_binary_boolean_expression@@Base+0xa4c>
  40b3ad:	mov    r12,rax
  40b3b0:	cmp    BYTE PTR [rip+0x7ea9],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40b3b7:	jne    40b478 <__generate_code_for_binary_boolean_expression@@Base+0xae8>
  40b3bd:	mov    rbx,QWORD PTR [rip+0x7ebc]        # 413280 <__bss_start@@Base+0x10f0>
  40b3c4:	mov    DWORD PTR [r12+rbx*1],0x67636461
  40b3cc:	add    rbx,0x4
  40b3d0:	mov    QWORD PTR [rip+0x7ea9],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b3d7:	jmp    40b4da <__generate_code_for_binary_boolean_expression@@Base+0xb4a>
  40b3dc:	call   403050 <__errno_location@plt>
  40b3e1:	mov    edi,DWORD PTR [rax]
  40b3e3:	mov    rax,QWORD PTR [rip+0x6c06]        # 411ff0 <stderr@GLIBC_2.2.5>
  40b3ea:	mov    rbx,QWORD PTR [rax]
  40b3ed:	mov    rbp,QWORD PTR [rip+0x7e64]        # 413258 <__bss_start@@Base+0x10c8>
  40b3f4:	call   403280 <strerror@plt>
  40b3f9:	mov    rcx,rax
  40b3fc:	lea    rsi,[rip+0x2a7d]        # 40de80 <_IO_stdin_used@@Base+0xe80>
  40b403:	xor    eax,eax
  40b405:	mov    rdi,rbx
  40b408:	mov    rdx,rbp
  40b40b:	call   403150 <fprintf@plt>
  40b410:	mov    BYTE PTR [rip+0x7e49],0x1        # 413260 <__bss_start@@Base+0x10d0>
  40b417:	mov    QWORD PTR [rip+0x7e4e],0x0        # 413270 <__bss_start@@Base+0x10e0>
  40b422:	mov    QWORD PTR [rip+0x7e4b],0x0        # 413278 <__bss_start@@Base+0x10e8>
  40b42d:	mov    rbx,QWORD PTR [rip+0x7e4c]        # 413280 <__bss_start@@Base+0x10f0>
  40b434:	cmp    rbx,0xfffffffffffe0000
  40b43b:	jne    40b442 <__generate_code_for_binary_boolean_expression@@Base+0xab2>
  40b43d:	xor    r12d,r12d
  40b440:	jmp    40b469 <__generate_code_for_binary_boolean_expression@@Base+0xad9>
  40b442:	add    rbx,0x3ffff
  40b449:	and    rbx,0xfffffffffffe0000
  40b450:	mov    rdi,rbx
  40b453:	call   4031a0 <malloc@plt>
  40b458:	mov    r12,rax
  40b45b:	mov    QWORD PTR [rip+0x7e0e],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b462:	mov    QWORD PTR [rip+0x7e0f],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40b469:	xor    esi,esi
  40b46b:	mov    edx,0x20000
  40b470:	mov    rdi,r12
  40b473:	call   403130 <memset@plt>
  40b478:	mov    rbx,QWORD PTR [rip+0x7e01]        # 413280 <__bss_start@@Base+0x10f0>
  40b47f:	lea    rax,[rbx+0x4]
  40b483:	cmp    rax,QWORD PTR [rip+0x7dee]        # 413278 <__bss_start@@Base+0x10e8>
  40b48a:	jbe    40b4f4 <__generate_code_for_binary_boolean_expression@@Base+0xb64>
  40b48c:	add    rbx,0x20003
  40b493:	and    rbx,0xfffffffffffe0000
  40b49a:	mov    rdi,r12
  40b49d:	mov    rsi,rbx
  40b4a0:	call   4031d0 <realloc@plt>
  40b4a5:	mov    r12,rax
  40b4a8:	mov    QWORD PTR [rip+0x7dc1],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b4af:	mov    QWORD PTR [rip+0x7dc2],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40b4b6:	mov    al,BYTE PTR [rip+0x7da4]        # 413260 <__bss_start@@Base+0x10d0>
  40b4bc:	mov    rbp,QWORD PTR [rip+0x7dbd]        # 413280 <__bss_start@@Base+0x10f0>
  40b4c3:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40b4cb:	lea    rbx,[rbp+0x4]
  40b4cf:	mov    QWORD PTR [rip+0x7daa],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b4d6:	cmp    al,0x1
  40b4d8:	je     40b50e <__generate_code_for_binary_boolean_expression@@Base+0xb7e>
  40b4da:	mov    eax,DWORD PTR [r15]
  40b4dd:	mov    DWORD PTR [r12+rbx*1],eax
  40b4e1:	add    rbx,0x4
  40b4e5:	mov    QWORD PTR [rip+0x7d94],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b4ec:	mov    rax,rbx
  40b4ef:	jmp    40b5bb <__generate_code_for_binary_boolean_expression@@Base+0xc2b>
  40b4f4:	mov    rbp,QWORD PTR [rip+0x7d85]        # 413280 <__bss_start@@Base+0x10f0>
  40b4fb:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40b503:	lea    rbx,[rbp+0x4]
  40b507:	mov    QWORD PTR [rip+0x7d72],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b50e:	lea    rax,[rbp+0x8]
  40b512:	cmp    rax,QWORD PTR [rip+0x7d5f]        # 413278 <__bss_start@@Base+0x10e8>
  40b519:	jbe    40b56b <__generate_code_for_binary_boolean_expression@@Base+0xbdb>
  40b51b:	add    rbp,0x20007
  40b522:	and    rbp,0xfffffffffffe0000
  40b529:	mov    rdi,r12
  40b52c:	mov    rsi,rbp
  40b52f:	call   4031d0 <realloc@plt>
  40b534:	mov    r12,rax
  40b537:	mov    QWORD PTR [rip+0x7d32],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b53e:	mov    QWORD PTR [rip+0x7d33],rbp        # 413278 <__bss_start@@Base+0x10e8>
  40b545:	mov    rbx,QWORD PTR [rip+0x7d34]        # 413280 <__bss_start@@Base+0x10f0>
  40b54c:	mov    cl,BYTE PTR [rip+0x7d0e]        # 413260 <__bss_start@@Base+0x10d0>
  40b552:	mov    eax,DWORD PTR [r15]
  40b555:	mov    DWORD PTR [r12+rbx*1],eax
  40b559:	lea    rax,[rbx+0x4]
  40b55d:	mov    QWORD PTR [rip+0x7d1c],rax        # 413280 <__bss_start@@Base+0x10f0>
  40b564:	cmp    cl,0x1
  40b567:	je     40b57d <__generate_code_for_binary_boolean_expression@@Base+0xbed>
  40b569:	jmp    40b5bb <__generate_code_for_binary_boolean_expression@@Base+0xc2b>
  40b56b:	mov    eax,DWORD PTR [r15]
  40b56e:	mov    DWORD PTR [r12+rbx*1],eax
  40b572:	lea    rax,[rbx+0x4]
  40b576:	mov    QWORD PTR [rip+0x7d03],rax        # 413280 <__bss_start@@Base+0x10f0>
  40b57d:	lea    rcx,[rbx+0x8]
  40b581:	cmp    rcx,QWORD PTR [rip+0x7cf0]        # 413278 <__bss_start@@Base+0x10e8>
  40b588:	jbe    40b5bb <__generate_code_for_binary_boolean_expression@@Base+0xc2b>
  40b58a:	add    rbx,0x20007
  40b591:	and    rbx,0xfffffffffffe0000
  40b598:	mov    rdi,r12
  40b59b:	mov    rsi,rbx
  40b59e:	call   4031d0 <realloc@plt>
  40b5a3:	mov    r12,rax
  40b5a6:	mov    QWORD PTR [rip+0x7cc3],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b5ad:	mov    QWORD PTR [rip+0x7cc4],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40b5b4:	mov    rax,QWORD PTR [rip+0x7cc5]        # 413280 <__bss_start@@Base+0x10f0>
  40b5bb:	mov    DWORD PTR [r12+rax*1],r14d
  40b5bf:	add    rax,0x4
  40b5c3:	mov    QWORD PTR [rip+0x7cb6],rax        # 413280 <__bss_start@@Base+0x10f0>
  40b5ca:	add    rsp,0x18
  40b5ce:	pop    rbx
  40b5cf:	pop    r12
  40b5d1:	pop    r13
  40b5d3:	pop    r14
  40b5d5:	pop    r15
  40b5d7:	pop    rbp
  40b5d8:	ret    
  40b5d9:	call   403050 <__errno_location@plt>
  40b5de:	mov    edi,DWORD PTR [rax]
  40b5e0:	mov    rax,QWORD PTR [rip+0x6a09]        # 411ff0 <stderr@GLIBC_2.2.5>
  40b5e7:	mov    rbx,QWORD PTR [rax]
  40b5ea:	mov    rbp,QWORD PTR [rip+0x7c67]        # 413258 <__bss_start@@Base+0x10c8>
  40b5f1:	call   403280 <strerror@plt>
  40b5f6:	mov    rcx,rax
  40b5f9:	lea    rsi,[rip+0x2726]        # 40dd26 <_IO_stdin_used@@Base+0xd26>
  40b600:	xor    eax,eax
  40b602:	mov    rdi,rbx
  40b605:	mov    rdx,rbp
  40b608:	call   403150 <fprintf@plt>
  40b60d:	jmp    40b5ca <__generate_code_for_binary_boolean_expression@@Base+0xc3a>
  40b60f:	nop
  40b610:	mov    eax,DWORD PTR [rdi]
  40b612:	mov    ecx,0xffffffff
  40b617:	cmp    rax,rcx
  40b61a:	je     40b629 <__generate_code_for_binary_boolean_expression@@Base+0xc99>
  40b61c:	mov    rax,QWORD PTR [rsi+rax*8]
  40b620:	test   rax,rax
  40b623:	je     40b629 <__generate_code_for_binary_boolean_expression@@Base+0xc99>
  40b625:	add    QWORD PTR [rax],0x1
  40b629:	ret    
  40b62a:	nop    WORD PTR [rax+rax*1+0x0]
  40b630:	push   rbp
  40b631:	push   r15
  40b633:	push   r14
  40b635:	push   r13
  40b637:	push   r12
  40b639:	push   rbx
  40b63a:	sub    rsp,0x18
  40b63e:	xor    r14d,r14d
  40b641:	test   cl,cl
  40b643:	setne  al
  40b646:	cmp    QWORD PTR [rip+0x7c1a],0x0        # 413268 <__bss_start@@Base+0x10d8>
  40b64e:	je     40b966 <__generate_code_for_binary_boolean_expression@@Base+0xfd6>
  40b654:	mov    DWORD PTR [rsp+0xc],edi
  40b658:	mov    DWORD PTR [rsp+0x10],edx
  40b65c:	mov    DWORD PTR [rsp+0x14],ecx
  40b660:	mov    DWORD PTR [rsp+0x8],r8d
  40b665:	mov    r15,rsi
  40b668:	mov    r14b,al
  40b66b:	cmp    BYTE PTR [rip+0x7bee],0x1        # 413260 <__bss_start@@Base+0x10d0>
  40b672:	jne    40b6b3 <__generate_code_for_binary_boolean_expression@@Base+0xd23>
  40b674:	mov    rbx,QWORD PTR [rip+0x7c05]        # 413280 <__bss_start@@Base+0x10f0>
  40b67b:	lea    rax,[rbx+0x4]
  40b67f:	cmp    rax,QWORD PTR [rip+0x7bf2]        # 413278 <__bss_start@@Base+0x10e8>
  40b686:	jbe    40b6b3 <__generate_code_for_binary_boolean_expression@@Base+0xd23>
  40b688:	add    rbx,0x20003
  40b68f:	and    rbx,0xfffffffffffe0000
  40b696:	mov    rdi,QWORD PTR [rip+0x7bd3]        # 413270 <__bss_start@@Base+0x10e0>
  40b69d:	mov    rsi,rbx
  40b6a0:	call   4031d0 <realloc@plt>
  40b6a5:	mov    QWORD PTR [rip+0x7bc4],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b6ac:	mov    QWORD PTR [rip+0x7bc5],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40b6b3:	or     r14d,0x2
  40b6b7:	mov    r12,QWORD PTR [rip+0x7bb2]        # 413270 <__bss_start@@Base+0x10e0>
  40b6be:	mov    r13,QWORD PTR [rip+0x7bbb]        # 413280 <__bss_start@@Base+0x10f0>
  40b6c5:	mov    DWORD PTR [r12+r13*1],0x1000000
  40b6cd:	lea    rbx,[r13+0x4]
  40b6d1:	mov    QWORD PTR [rip+0x7ba8],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b6d8:	test   r15,r15
  40b6db:	je     40b6f1 <__generate_code_for_binary_boolean_expression@@Base+0xd61>
  40b6dd:	mov    rdi,r15
  40b6e0:	call   4030e0 <strlen@plt>
  40b6e5:	shr    rax,0x2
  40b6e9:	lea    r14d,[r14+rax*1]
  40b6ed:	add    r14d,0x2
  40b6f1:	cmp    BYTE PTR [rip+0x7b68],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40b6f8:	je     40b75a <__generate_code_for_binary_boolean_expression@@Base+0xdca>
  40b6fa:	lea    rbp,[r13+0x8]
  40b6fe:	cmp    rbp,QWORD PTR [rip+0x7b73]        # 413278 <__bss_start@@Base+0x10e8>
  40b705:	jbe    40b975 <__generate_code_for_binary_boolean_expression@@Base+0xfe5>
  40b70b:	add    r13,0x20007
  40b712:	and    r13,0xfffffffffffe0000
  40b719:	mov    rdi,r12
  40b71c:	mov    rsi,r13
  40b71f:	call   4031d0 <realloc@plt>
  40b724:	mov    r12,rax
  40b727:	mov    QWORD PTR [rip+0x7b42],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b72e:	mov    QWORD PTR [rip+0x7b43],r13        # 413278 <__bss_start@@Base+0x10e8>
  40b735:	mov    rbx,QWORD PTR [rip+0x7b44]        # 413280 <__bss_start@@Base+0x10f0>
  40b73c:	mov    al,BYTE PTR [rip+0x7b1e]        # 413260 <__bss_start@@Base+0x10d0>
  40b742:	mov    DWORD PTR [r12+rbx*1],r14d
  40b746:	lea    rbp,[rbx+0x4]
  40b74a:	mov    QWORD PTR [rip+0x7b2f],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40b751:	cmp    al,0x1
  40b753:	jne    40b76d <__generate_code_for_binary_boolean_expression@@Base+0xddd>
  40b755:	jmp    40b981 <__generate_code_for_binary_boolean_expression@@Base+0xff1>
  40b75a:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40b75f:	add    r13,0x8
  40b763:	mov    QWORD PTR [rip+0x7b16],r13        # 413280 <__bss_start@@Base+0x10f0>
  40b76a:	mov    rbp,r13
  40b76d:	mov    eax,DWORD PTR [rsp+0xc]
  40b771:	mov    DWORD PTR [r12+rbp*1],eax
  40b775:	add    rbp,0x4
  40b779:	mov    QWORD PTR [rip+0x7b00],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40b780:	mov    rbx,rbp
  40b783:	mov    r13,r15
  40b786:	mov    r14d,DWORD PTR [rsp+0x14]
  40b78b:	mov    r15d,DWORD PTR [rsp+0x10]
  40b790:	lea    rbp,[rbx+0x4]
  40b794:	mov    DWORD PTR [r12+rbx*1],r15d
  40b798:	mov    QWORD PTR [rip+0x7ae1],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40b79f:	test   r14b,r14b
  40b7a2:	je     40b7fe <__generate_code_for_binary_boolean_expression@@Base+0xe6e>
  40b7a4:	cmp    BYTE PTR [rip+0x7ab5],0x1        # 413260 <__bss_start@@Base+0x10d0>
  40b7ab:	jne    40b7eb <__generate_code_for_binary_boolean_expression@@Base+0xe5b>
  40b7ad:	lea    rax,[rbx+0x8]
  40b7b1:	cmp    rax,QWORD PTR [rip+0x7ac0]        # 413278 <__bss_start@@Base+0x10e8>
  40b7b8:	jbe    40b7eb <__generate_code_for_binary_boolean_expression@@Base+0xe5b>
  40b7ba:	add    rbx,0x20007
  40b7c1:	and    rbx,0xfffffffffffe0000
  40b7c8:	mov    rdi,r12
  40b7cb:	mov    rsi,rbx
  40b7ce:	call   4031d0 <realloc@plt>
  40b7d3:	mov    r12,rax
  40b7d6:	mov    QWORD PTR [rip+0x7a93],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b7dd:	mov    QWORD PTR [rip+0x7a94],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40b7e4:	mov    rbp,QWORD PTR [rip+0x7a95]        # 413280 <__bss_start@@Base+0x10f0>
  40b7eb:	mov    eax,DWORD PTR [rsp+0x8]
  40b7ef:	mov    DWORD PTR [r12+rbp*1],eax
  40b7f3:	add    rbp,0x4
  40b7f7:	mov    QWORD PTR [rip+0x7a82],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40b7fe:	test   r13,r13
  40b801:	je     40b966 <__generate_code_for_binary_boolean_expression@@Base+0xfd6>
  40b807:	mov    rdi,r13
  40b80a:	call   4030e0 <strlen@plt>
  40b80f:	mov    rbx,rax
  40b812:	shr    rbx,0x2
  40b816:	add    ebx,0x1
  40b819:	cmp    BYTE PTR [rip+0x7a40],0x1        # 413260 <__bss_start@@Base+0x10d0>
  40b820:	jne    40b86c <__generate_code_for_binary_boolean_expression@@Base+0xedc>
  40b822:	lea    rax,[rbp+0x4]
  40b826:	mov    r14b,0x1
  40b829:	cmp    rax,QWORD PTR [rip+0x7a48]        # 413278 <__bss_start@@Base+0x10e8>
  40b830:	jbe    40b86f <__generate_code_for_binary_boolean_expression@@Base+0xedf>
  40b832:	add    rbp,0x20003
  40b839:	and    rbp,0xfffffffffffe0000
  40b840:	mov    rdi,r12
  40b843:	mov    rsi,rbp
  40b846:	call   4031d0 <realloc@plt>
  40b84b:	mov    r12,rax
  40b84e:	mov    QWORD PTR [rip+0x7a1b],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b855:	mov    QWORD PTR [rip+0x7a1c],rbp        # 413278 <__bss_start@@Base+0x10e8>
  40b85c:	mov    r14b,BYTE PTR [rip+0x79fd]        # 413260 <__bss_start@@Base+0x10d0>
  40b863:	mov    rbp,QWORD PTR [rip+0x7a16]        # 413280 <__bss_start@@Base+0x10f0>
  40b86a:	jmp    40b86f <__generate_code_for_binary_boolean_expression@@Base+0xedf>
  40b86c:	xor    r14d,r14d
  40b86f:	mov    DWORD PTR [r12+rbp*1],ebx
  40b873:	add    rbp,0x4
  40b877:	mov    QWORD PTR [rip+0x7a02],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40b87e:	mov    rdi,r13
  40b881:	call   4030e0 <strlen@plt>
  40b886:	mov    rbx,rax
  40b889:	test   r14b,0x1
  40b88d:	je     40b8d9 <__generate_code_for_binary_boolean_expression@@Base+0xf49>
  40b88f:	lea    r15,[rbx+rbp*1]
  40b893:	mov    r14b,0x1
  40b896:	cmp    r15,QWORD PTR [rip+0x79db]        # 413278 <__bss_start@@Base+0x10e8>
  40b89d:	jbe    40b8dc <__generate_code_for_binary_boolean_expression@@Base+0xf4c>
  40b89f:	add    r15,0x1ffff
  40b8a6:	and    r15,0xfffffffffffe0000
  40b8ad:	mov    rdi,r12
  40b8b0:	mov    rsi,r15
  40b8b3:	call   4031d0 <realloc@plt>
  40b8b8:	mov    r12,rax
  40b8bb:	mov    QWORD PTR [rip+0x79ae],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b8c2:	mov    QWORD PTR [rip+0x79af],r15        # 413278 <__bss_start@@Base+0x10e8>
  40b8c9:	mov    rbp,QWORD PTR [rip+0x79b0]        # 413280 <__bss_start@@Base+0x10f0>
  40b8d0:	mov    r14b,BYTE PTR [rip+0x7989]        # 413260 <__bss_start@@Base+0x10d0>
  40b8d7:	jmp    40b8dc <__generate_code_for_binary_boolean_expression@@Base+0xf4c>
  40b8d9:	xor    r14d,r14d
  40b8dc:	lea    rdi,[r12+rbp*1]
  40b8e0:	mov    rsi,r13
  40b8e3:	mov    rdx,rbx
  40b8e6:	call   403180 <memcpy@plt>
  40b8eb:	add    rbx,rbp
  40b8ee:	mov    QWORD PTR [rip+0x798b],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b8f5:	mov    rdi,r13
  40b8f8:	call   4030e0 <strlen@plt>
  40b8fd:	and    eax,0x3
  40b900:	mov    ebp,0x4
  40b905:	sub    rbp,rax
  40b908:	test   r14b,0x1
  40b90c:	je     40b94c <__generate_code_for_binary_boolean_expression@@Base+0xfbc>
  40b90e:	lea    r14,[rbx+rbp*1]
  40b912:	cmp    r14,QWORD PTR [rip+0x795f]        # 413278 <__bss_start@@Base+0x10e8>
  40b919:	jbe    40b94c <__generate_code_for_binary_boolean_expression@@Base+0xfbc>
  40b91b:	add    r14,0x1ffff
  40b922:	and    r14,0xfffffffffffe0000
  40b929:	mov    rdi,r12
  40b92c:	mov    rsi,r14
  40b92f:	call   4031d0 <realloc@plt>
  40b934:	mov    r12,rax
  40b937:	mov    QWORD PTR [rip+0x7932],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b93e:	mov    QWORD PTR [rip+0x7933],r14        # 413278 <__bss_start@@Base+0x10e8>
  40b945:	mov    rbx,QWORD PTR [rip+0x7934]        # 413280 <__bss_start@@Base+0x10f0>
  40b94c:	add    r12,rbx
  40b94f:	xor    esi,esi
  40b951:	mov    rdi,r12
  40b954:	mov    rdx,rbp
  40b957:	call   403130 <memset@plt>
  40b95c:	add    rbx,rbp
  40b95f:	mov    QWORD PTR [rip+0x791a],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b966:	add    rsp,0x18
  40b96a:	pop    rbx
  40b96b:	pop    r12
  40b96d:	pop    r13
  40b96f:	pop    r14
  40b971:	pop    r15
  40b973:	pop    rbp
  40b974:	ret    
  40b975:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40b97a:	mov    QWORD PTR [rip+0x78ff],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40b981:	lea    rax,[rbx+0x8]
  40b985:	cmp    rax,QWORD PTR [rip+0x78ec]        # 413278 <__bss_start@@Base+0x10e8>
  40b98c:	mov    r13,r15
  40b98f:	jbe    40b9ef <__generate_code_for_binary_boolean_expression@@Base+0x105f>
  40b991:	add    rbx,0x20007
  40b998:	and    rbx,0xfffffffffffe0000
  40b99f:	mov    rdi,r12
  40b9a2:	mov    rsi,rbx
  40b9a5:	call   4031d0 <realloc@plt>
  40b9aa:	mov    r12,rax
  40b9ad:	mov    QWORD PTR [rip+0x78bc],rax        # 413270 <__bss_start@@Base+0x10e0>
  40b9b4:	mov    QWORD PTR [rip+0x78bd],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40b9bb:	mov    rbp,QWORD PTR [rip+0x78be]        # 413280 <__bss_start@@Base+0x10f0>
  40b9c2:	mov    al,BYTE PTR [rip+0x7898]        # 413260 <__bss_start@@Base+0x10d0>
  40b9c8:	mov    ecx,DWORD PTR [rsp+0xc]
  40b9cc:	mov    DWORD PTR [r12+rbp*1],ecx
  40b9d0:	lea    rbx,[rbp+0x4]
  40b9d4:	mov    QWORD PTR [rip+0x78a5],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40b9db:	cmp    al,0x1
  40b9dd:	mov    r14d,DWORD PTR [rsp+0x14]
  40b9e2:	mov    r15d,DWORD PTR [rsp+0x10]
  40b9e7:	jne    40b790 <__generate_code_for_binary_boolean_expression@@Base+0xe00>
  40b9ed:	jmp    40ba0c <__generate_code_for_binary_boolean_expression@@Base+0x107c>
  40b9ef:	mov    eax,DWORD PTR [rsp+0xc]
  40b9f3:	mov    DWORD PTR [r12+rbp*1],eax
  40b9f7:	lea    rbx,[rbp+0x4]
  40b9fb:	mov    QWORD PTR [rip+0x787e],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40ba02:	mov    r14d,DWORD PTR [rsp+0x14]
  40ba07:	mov    r15d,DWORD PTR [rsp+0x10]
  40ba0c:	lea    rax,[rbp+0x8]
  40ba10:	cmp    rax,QWORD PTR [rip+0x7861]        # 413278 <__bss_start@@Base+0x10e8>
  40ba17:	jbe    40b790 <__generate_code_for_binary_boolean_expression@@Base+0xe00>
  40ba1d:	add    rbp,0x20007
  40ba24:	and    rbp,0xfffffffffffe0000
  40ba2b:	mov    rdi,r12
  40ba2e:	mov    rsi,rbp
  40ba31:	call   4031d0 <realloc@plt>
  40ba36:	mov    r12,rax
  40ba39:	mov    QWORD PTR [rip+0x7830],rax        # 413270 <__bss_start@@Base+0x10e0>
  40ba40:	mov    QWORD PTR [rip+0x7831],rbp        # 413278 <__bss_start@@Base+0x10e8>
  40ba47:	mov    rbx,QWORD PTR [rip+0x7832]        # 413280 <__bss_start@@Base+0x10f0>
  40ba4e:	jmp    40b790 <__generate_code_for_binary_boolean_expression@@Base+0xe00>
  40ba53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba5d:	nop    DWORD PTR [rax]
  40ba60:	push   rbp
  40ba61:	push   r15
  40ba63:	push   r14
  40ba65:	push   r13
  40ba67:	push   r12
  40ba69:	push   rbx
  40ba6a:	sub    rsp,0x18
  40ba6e:	cmp    QWORD PTR [rip+0x77f2],0x0        # 413268 <__bss_start@@Base+0x10d8>
  40ba76:	je     40bb1a <__generate_code_for_binary_boolean_expression@@Base+0x118a>
  40ba7c:	mov    r13d,edi
  40ba7f:	mov    r14,QWORD PTR [rip+0x77fa]        # 413280 <__bss_start@@Base+0x10f0>
  40ba86:	cmp    BYTE PTR [rip+0x77d3],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40ba8d:	mov    QWORD PTR [rsp+0x8],rsi
  40ba92:	je     40bb29 <__generate_code_for_binary_boolean_expression@@Base+0x1199>
  40ba98:	lea    rbx,[r14+0x4]
  40ba9c:	cmp    rbx,QWORD PTR [rip+0x77d5]        # 413278 <__bss_start@@Base+0x10e8>
  40baa3:	jbe    40bbb1 <__generate_code_for_binary_boolean_expression@@Base+0x1221>
  40baa9:	add    r14,0x20003
  40bab0:	and    r14,0xfffffffffffe0000
  40bab7:	mov    rdi,QWORD PTR [rip+0x77b2]        # 413270 <__bss_start@@Base+0x10e0>
  40babe:	mov    rsi,r14
  40bac1:	call   4031d0 <realloc@plt>
  40bac6:	mov    rsi,QWORD PTR [rsp+0x8]
  40bacb:	mov    r15,rax
  40bace:	mov    QWORD PTR [rip+0x779b],rax        # 413270 <__bss_start@@Base+0x10e0>
  40bad5:	mov    QWORD PTR [rip+0x779c],r14        # 413278 <__bss_start@@Base+0x10e8>
  40badc:	mov    r14,QWORD PTR [rip+0x779d]        # 413280 <__bss_start@@Base+0x10f0>
  40bae3:	mov    al,BYTE PTR [rip+0x7777]        # 413260 <__bss_start@@Base+0x10d0>
  40bae9:	lea    rbx,[r14+0x4]
  40baed:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40baf5:	mov    QWORD PTR [rip+0x7784],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bafc:	lea    ebp,[r13+r13*1+0x0]
  40bb01:	xor    ecx,ecx
  40bb03:	mov    QWORD PTR [rsp],rcx
  40bb07:	mov    r12d,0x0
  40bb0d:	cmp    al,0x1
  40bb0f:	je     40bbcc <__generate_code_for_binary_boolean_expression@@Base+0x123c>
  40bb15:	jmp    40bcff <__generate_code_for_binary_boolean_expression@@Base+0x136f>
  40bb1a:	add    rsp,0x18
  40bb1e:	pop    rbx
  40bb1f:	pop    r12
  40bb21:	pop    r13
  40bb23:	pop    r14
  40bb25:	pop    r15
  40bb27:	pop    rbp
  40bb28:	ret    
  40bb29:	mov    r15,QWORD PTR [rip+0x7740]        # 413270 <__bss_start@@Base+0x10e0>
  40bb30:	mov    ecx,DWORD PTR [r15+r14*1]
  40bb34:	lea    rbx,[r14+0x4]
  40bb38:	mov    QWORD PTR [rip+0x7741],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bb3f:	cmp    ecx,0xffffffff
  40bb42:	je     40bc25 <__generate_code_for_binary_boolean_expression@@Base+0x1295>
  40bb48:	cmp    ecx,0x1a10000
  40bb4e:	jne    40bc33 <__generate_code_for_binary_boolean_expression@@Base+0x12a3>
  40bb54:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  40bb59:	lea    rbp,[r14+0x8]
  40bb5d:	mov    QWORD PTR [rip+0x771c],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40bb64:	cmp    ecx,0xffffffff
  40bb67:	je     40bc4d <__generate_code_for_binary_boolean_expression@@Base+0x12bd>
  40bb6d:	mov    eax,ecx
  40bb6f:	shr    eax,1
  40bb71:	cmp    eax,r13d
  40bb74:	jne    40bc4d <__generate_code_for_binary_boolean_expression@@Base+0x12bd>
  40bb7a:	mov    r12d,r13d
  40bb7d:	lea    rdi,[r12*8+0x0]
  40bb85:	call   4031a0 <malloc@plt>
  40bb8a:	test   r13d,r13d
  40bb8d:	mov    rcx,rax
  40bb90:	mov    QWORD PTR [rsp],rax
  40bb94:	je     40bc7a <__generate_code_for_binary_boolean_expression@@Base+0x12ea>
  40bb9a:	mov    eax,r12d
  40bb9d:	and    eax,0x1
  40bba0:	cmp    r13d,0x1
  40bba4:	jne    40bc84 <__generate_code_for_binary_boolean_expression@@Base+0x12f4>
  40bbaa:	xor    ecx,ecx
  40bbac:	jmp    40bcc3 <__generate_code_for_binary_boolean_expression@@Base+0x1333>
  40bbb1:	mov    r15,QWORD PTR [rip+0x76b8]        # 413270 <__bss_start@@Base+0x10e0>
  40bbb8:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40bbc0:	mov    QWORD PTR [rip+0x76b9],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bbc7:	lea    ebp,[r13+r13*1+0x0]
  40bbcc:	lea    rax,[r14+0x8]
  40bbd0:	cmp    rax,QWORD PTR [rip+0x76a1]        # 413278 <__bss_start@@Base+0x10e8>
  40bbd7:	jbe    40bc17 <__generate_code_for_binary_boolean_expression@@Base+0x1287>
  40bbd9:	add    r14,0x20007
  40bbe0:	and    r14,0xfffffffffffe0000
  40bbe7:	mov    rdi,r15
  40bbea:	mov    rsi,r14
  40bbed:	call   4031d0 <realloc@plt>
  40bbf2:	mov    rsi,QWORD PTR [rsp+0x8]
  40bbf7:	mov    r15,rax
  40bbfa:	mov    QWORD PTR [rip+0x766f],rax        # 413270 <__bss_start@@Base+0x10e0>
  40bc01:	mov    QWORD PTR [rip+0x7670],r14        # 413278 <__bss_start@@Base+0x10e8>
  40bc08:	xor    eax,eax
  40bc0a:	mov    QWORD PTR [rsp],rax
  40bc0e:	mov    rbx,QWORD PTR [rip+0x766b]        # 413280 <__bss_start@@Base+0x10f0>
  40bc15:	jmp    40bc1d <__generate_code_for_binary_boolean_expression@@Base+0x128d>
  40bc17:	xor    eax,eax
  40bc19:	mov    QWORD PTR [rsp],rax
  40bc1d:	xor    r12d,r12d
  40bc20:	jmp    40bcff <__generate_code_for_binary_boolean_expression@@Base+0x136f>
  40bc25:	xor    r12d,r12d
  40bc28:	xor    eax,eax
  40bc2a:	mov    QWORD PTR [rsp],rax
  40bc2e:	jmp    40bce4 <__generate_code_for_binary_boolean_expression@@Base+0x1354>
  40bc33:	mov    rax,QWORD PTR [rip+0x63b6]        # 411ff0 <stderr@GLIBC_2.2.5>
  40bc3a:	mov    rdi,QWORD PTR [rax]
  40bc3d:	mov    rdx,QWORD PTR [rip+0x7614]        # 413258 <__bss_start@@Base+0x10c8>
  40bc44:	lea    rsi,[rip+0x20fb]        # 40dd46 <_IO_stdin_used@@Base+0xd46>
  40bc4b:	jmp    40bc65 <__generate_code_for_binary_boolean_expression@@Base+0x12d5>
  40bc4d:	mov    rax,QWORD PTR [rip+0x639c]        # 411ff0 <stderr@GLIBC_2.2.5>
  40bc54:	mov    rdi,QWORD PTR [rax]
  40bc57:	mov    rdx,QWORD PTR [rip+0x75fa]        # 413258 <__bss_start@@Base+0x10c8>
  40bc5e:	lea    rsi,[rip+0x212b]        # 40dd90 <_IO_stdin_used@@Base+0xd90>
  40bc65:	xor    eax,eax
  40bc67:	add    rsp,0x18
  40bc6b:	pop    rbx
  40bc6c:	pop    r12
  40bc6e:	pop    r13
  40bc70:	pop    r14
  40bc72:	pop    r15
  40bc74:	pop    rbp
  40bc75:	jmp    403150 <fprintf@plt>
  40bc7a:	mov    r12,rax
  40bc7d:	mov    rsi,QWORD PTR [rsp+0x8]
  40bc82:	jmp    40bce4 <__generate_code_for_binary_boolean_expression@@Base+0x1354>
  40bc84:	mov    rbp,0xfffffffffffffff8
  40bc8b:	sub    rbp,r14
  40bc8e:	lea    rdx,[r15+r14*1]
  40bc92:	add    rdx,0x14
  40bc96:	sub    r12,rax
  40bc99:	xor    ecx,ecx
  40bc9b:	mov    rdi,QWORD PTR [rsp]
  40bc9f:	nop
  40bca0:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  40bca5:	mov    QWORD PTR [rdi+rcx*8],rsi
  40bca9:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40bcae:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  40bcb3:	add    rcx,0x2
  40bcb7:	add    rbp,0xfffffffffffffff0
  40bcbb:	cmp    r12,rcx
  40bcbe:	jne    40bca0 <__generate_code_for_binary_boolean_expression@@Base+0x1310>
  40bcc0:	neg    rbp
  40bcc3:	mov    rsi,QWORD PTR [rsp+0x8]
  40bcc8:	test   rax,rax
  40bccb:	mov    r12,QWORD PTR [rsp]
  40bccf:	je     40bcdd <__generate_code_for_binary_boolean_expression@@Base+0x134d>
  40bcd1:	mov    rax,QWORD PTR [r15+rbp*1]
  40bcd5:	mov    QWORD PTR [r12+rcx*8],rax
  40bcd9:	add    rbp,0x8
  40bcdd:	mov    QWORD PTR [rip+0x759c],rbp        # 413280 <__bss_start@@Base+0x10f0>
  40bce4:	mov    QWORD PTR [rip+0x7595],r14        # 413280 <__bss_start@@Base+0x10f0>
  40bceb:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40bcf3:	mov    QWORD PTR [rip+0x7586],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bcfa:	lea    ebp,[r13+r13*1+0x0]
  40bcff:	mov    DWORD PTR [r15+rbx*1],ebp
  40bd03:	add    rbx,0x4
  40bd07:	mov    QWORD PTR [rip+0x7572],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bd0e:	test   r13d,r13d
  40bd11:	je     40be5f <__generate_code_for_binary_boolean_expression@@Base+0x14cf>
  40bd17:	mov    edi,r13d
  40bd1a:	shl    rdi,0x3
  40bd1e:	xor    ebp,ebp
  40bd20:	mov    QWORD PTR [rsp+0x10],rdi
  40bd25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd2f:	nop
  40bd30:	test   r12,r12
  40bd33:	je     40bd40 <__generate_code_for_binary_boolean_expression@@Base+0x13b0>
  40bd35:	mov    r14,QWORD PTR [r12+rbp*1]
  40bd39:	jmp    40bd43 <__generate_code_for_binary_boolean_expression@@Base+0x13b3>
  40bd3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd40:	xor    r14d,r14d
  40bd43:	add    r14,QWORD PTR [rsi+rbp*1]
  40bd47:	mov    QWORD PTR [rsi+rbp*1],r14
  40bd4b:	mov    r13,r14
  40bd4e:	shr    r13,0x20
  40bd52:	cmp    BYTE PTR [rip+0x7507],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40bd59:	je     40bdd0 <__generate_code_for_binary_boolean_expression@@Base+0x1440>
  40bd5b:	lea    rax,[rbx+0x4]
  40bd5f:	mov    rcx,QWORD PTR [rip+0x7512]        # 413278 <__bss_start@@Base+0x10e8>
  40bd66:	cmp    rax,rcx
  40bd69:	jbe    40bdf0 <__generate_code_for_binary_boolean_expression@@Base+0x1460>
  40bd6f:	add    rbx,0x20003
  40bd76:	and    rbx,0xfffffffffffe0000
  40bd7d:	mov    rdi,r15
  40bd80:	mov    rsi,rbx
  40bd83:	call   4031d0 <realloc@plt>
  40bd88:	mov    rdi,QWORD PTR [rsp+0x10]
  40bd8d:	mov    rsi,QWORD PTR [rsp+0x8]
  40bd92:	mov    r15,rax
  40bd95:	mov    QWORD PTR [rip+0x74d4],rax        # 413270 <__bss_start@@Base+0x10e0>
  40bd9c:	mov    QWORD PTR [rip+0x74d5],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40bda3:	movzx  edx,BYTE PTR [rip+0x74b6]        # 413260 <__bss_start@@Base+0x10d0>
  40bdaa:	mov    rcx,rbx
  40bdad:	mov    rbx,QWORD PTR [rip+0x74cc]        # 413280 <__bss_start@@Base+0x10f0>
  40bdb4:	mov    DWORD PTR [rax+rbx*1],r14d
  40bdb8:	lea    rax,[rbx+0x4]
  40bdbc:	mov    QWORD PTR [rip+0x74bd],rax        # 413280 <__bss_start@@Base+0x10f0>
  40bdc3:	cmp    dl,0x1
  40bdc6:	je     40bdfb <__generate_code_for_binary_boolean_expression@@Base+0x146b>
  40bdc8:	jmp    40be40 <__generate_code_for_binary_boolean_expression@@Base+0x14b0>
  40bdca:	nop    WORD PTR [rax+rax*1+0x0]
  40bdd0:	mov    DWORD PTR [r15+rbx*1],r14d
  40bdd4:	add    rbx,0x4
  40bdd8:	mov    QWORD PTR [rip+0x74a1],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bddf:	mov    rax,rbx
  40bde2:	jmp    40be40 <__generate_code_for_binary_boolean_expression@@Base+0x14b0>
  40bde4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bdee:	xchg   ax,ax
  40bdf0:	mov    DWORD PTR [r15+rbx*1],r14d
  40bdf4:	mov    QWORD PTR [rip+0x7485],rax        # 413280 <__bss_start@@Base+0x10f0>
  40bdfb:	lea    rdx,[rbx+0x8]
  40bdff:	cmp    rdx,rcx
  40be02:	jbe    40be40 <__generate_code_for_binary_boolean_expression@@Base+0x14b0>
  40be04:	add    rbx,0x20007
  40be0b:	and    rbx,0xfffffffffffe0000
  40be12:	mov    rdi,r15
  40be15:	mov    rsi,rbx
  40be18:	call   4031d0 <realloc@plt>
  40be1d:	mov    rdi,QWORD PTR [rsp+0x10]
  40be22:	mov    rsi,QWORD PTR [rsp+0x8]
  40be27:	mov    r15,rax
  40be2a:	mov    QWORD PTR [rip+0x743f],rax        # 413270 <__bss_start@@Base+0x10e0>
  40be31:	mov    QWORD PTR [rip+0x7440],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40be38:	mov    rax,QWORD PTR [rip+0x7441]        # 413280 <__bss_start@@Base+0x10f0>
  40be3f:	nop
  40be40:	mov    DWORD PTR [r15+rax*1],r13d
  40be44:	add    rax,0x4
  40be48:	mov    QWORD PTR [rip+0x7431],rax        # 413280 <__bss_start@@Base+0x10f0>
  40be4f:	add    rbp,0x8
  40be53:	mov    rbx,rax
  40be56:	cmp    rdi,rbp
  40be59:	jne    40bd30 <__generate_code_for_binary_boolean_expression@@Base+0x13a0>
  40be5f:	mov    rdi,QWORD PTR [rsp]
  40be63:	add    rsp,0x18
  40be67:	pop    rbx
  40be68:	pop    r12
  40be6a:	pop    r13
  40be6c:	pop    r14
  40be6e:	pop    r15
  40be70:	pop    rbp
  40be71:	jmp    403040 <free@plt>
  40be76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be80:	push   rbp
  40be81:	push   r15
  40be83:	push   r14
  40be85:	push   rbx
  40be86:	push   rax
  40be87:	cmp    QWORD PTR [rip+0x73d9],0x0        # 413268 <__bss_start@@Base+0x10d8>
  40be8f:	je     40c206 <__generate_code_for_binary_boolean_expression@@Base+0x1876>
  40be95:	mov    rbx,QWORD PTR [rip+0x73e4]        # 413280 <__bss_start@@Base+0x10f0>
  40be9c:	cmp    BYTE PTR [rip+0x73bd],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40bea3:	je     40bf0f <__generate_code_for_binary_boolean_expression@@Base+0x157f>
  40bea5:	lea    r14,[rbx+0x4]
  40bea9:	cmp    r14,QWORD PTR [rip+0x73c8]        # 413278 <__bss_start@@Base+0x10e8>
  40beb0:	jbe    40bf5b <__generate_code_for_binary_boolean_expression@@Base+0x15cb>
  40beb6:	add    rbx,0x20003
  40bebd:	and    rbx,0xfffffffffffe0000
  40bec4:	mov    rdi,QWORD PTR [rip+0x73a5]        # 413270 <__bss_start@@Base+0x10e0>
  40becb:	mov    rsi,rbx
  40bece:	call   4031d0 <realloc@plt>
  40bed3:	mov    QWORD PTR [rip+0x7396],rax        # 413270 <__bss_start@@Base+0x10e0>
  40beda:	mov    QWORD PTR [rip+0x7397],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40bee1:	mov    rbx,QWORD PTR [rip+0x7398]        # 413280 <__bss_start@@Base+0x10f0>
  40bee8:	mov    cl,BYTE PTR [rip+0x7372]        # 413260 <__bss_start@@Base+0x10d0>
  40beee:	lea    r14,[rbx+0x4]
  40bef2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40bef9:	mov    QWORD PTR [rip+0x7380],r14        # 413280 <__bss_start@@Base+0x10f0>
  40bf00:	mov    ebp,0x1
  40bf05:	cmp    cl,0x1
  40bf08:	je     40bf70 <__generate_code_for_binary_boolean_expression@@Base+0x15e0>
  40bf0a:	jmp    40c08b <__generate_code_for_binary_boolean_expression@@Base+0x16fb>
  40bf0f:	mov    rax,QWORD PTR [rip+0x735a]        # 413270 <__bss_start@@Base+0x10e0>
  40bf16:	mov    ecx,DWORD PTR [rax+rbx*1]
  40bf19:	lea    r14,[rbx+0x4]
  40bf1d:	mov    QWORD PTR [rip+0x735c],r14        # 413280 <__bss_start@@Base+0x10f0>
  40bf24:	cmp    ecx,0xa1000000
  40bf2a:	je     40c04c <__generate_code_for_binary_boolean_expression@@Base+0x16bc>
  40bf30:	mov    ebp,0x1
  40bf35:	cmp    ecx,0xffffffff
  40bf38:	je     40c07d <__generate_code_for_binary_boolean_expression@@Base+0x16ed>
  40bf3e:	mov    rax,QWORD PTR [rip+0x60ab]        # 411ff0 <stderr@GLIBC_2.2.5>
  40bf45:	mov    rdi,QWORD PTR [rax]
  40bf48:	mov    rdx,QWORD PTR [rip+0x7309]        # 413258 <__bss_start@@Base+0x10c8>
  40bf4f:	lea    rsi,[rip+0x1e8e]        # 40dde4 <_IO_stdin_used@@Base+0xde4>
  40bf56:	jmp    40c465 <__generate_code_for_binary_boolean_expression@@Base+0x1ad5>
  40bf5b:	mov    rax,QWORD PTR [rip+0x730e]        # 413270 <__bss_start@@Base+0x10e0>
  40bf62:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40bf69:	mov    QWORD PTR [rip+0x7310],r14        # 413280 <__bss_start@@Base+0x10f0>
  40bf70:	lea    rcx,[rbx+0x8]
  40bf74:	cmp    rcx,QWORD PTR [rip+0x72fd]        # 413278 <__bss_start@@Base+0x10e8>
  40bf7b:	jbe    40bfd3 <__generate_code_for_binary_boolean_expression@@Base+0x1643>
  40bf7d:	add    rbx,0x20007
  40bf84:	and    rbx,0xfffffffffffe0000
  40bf8b:	mov    rdi,rax
  40bf8e:	mov    rsi,rbx
  40bf91:	call   4031d0 <realloc@plt>
  40bf96:	mov    QWORD PTR [rip+0x72d3],rax        # 413270 <__bss_start@@Base+0x10e0>
  40bf9d:	mov    QWORD PTR [rip+0x72d4],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40bfa4:	mov    r14,QWORD PTR [rip+0x72d5]        # 413280 <__bss_start@@Base+0x10f0>
  40bfab:	mov    cl,BYTE PTR [rip+0x72af]        # 413260 <__bss_start@@Base+0x10d0>
  40bfb1:	mov    DWORD PTR [rax+r14*1],0x9
  40bfb9:	lea    rbx,[r14+0x4]
  40bfbd:	mov    QWORD PTR [rip+0x72bc],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bfc4:	mov    ebp,0x1
  40bfc9:	cmp    cl,0x1
  40bfcc:	je     40bfe6 <__generate_code_for_binary_boolean_expression@@Base+0x1656>
  40bfce:	jmp    40c0a1 <__generate_code_for_binary_boolean_expression@@Base+0x1711>
  40bfd3:	mov    DWORD PTR [rax+r14*1],0x9
  40bfdb:	lea    rbx,[r14+0x4]
  40bfdf:	mov    QWORD PTR [rip+0x729a],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40bfe6:	lea    rcx,[r14+0x8]
  40bfea:	cmp    rcx,QWORD PTR [rip+0x7287]        # 413278 <__bss_start@@Base+0x10e8>
  40bff1:	jbe    40c28d <__generate_code_for_binary_boolean_expression@@Base+0x18fd>
  40bff7:	add    r14,0x20007
  40bffe:	and    r14,0xfffffffffffe0000
  40c005:	mov    rdi,rax
  40c008:	mov    rsi,r14
  40c00b:	call   4031d0 <realloc@plt>
  40c010:	mov    QWORD PTR [rip+0x7259],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c017:	mov    QWORD PTR [rip+0x725a],r14        # 413278 <__bss_start@@Base+0x10e8>
  40c01e:	mov    rbx,QWORD PTR [rip+0x725b]        # 413280 <__bss_start@@Base+0x10f0>
  40c025:	mov    cl,BYTE PTR [rip+0x7235]        # 413260 <__bss_start@@Base+0x10d0>
  40c02b:	mov    DWORD PTR [rax+rbx*1],0x0
  40c032:	lea    r14,[rbx+0x4]
  40c036:	mov    QWORD PTR [rip+0x7243],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c03d:	mov    ebp,0x1
  40c042:	cmp    cl,0x1
  40c045:	jne    40c0b6 <__generate_code_for_binary_boolean_expression@@Base+0x1726>
  40c047:	jmp    40c29f <__generate_code_for_binary_boolean_expression@@Base+0x190f>
  40c04c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  40c050:	lea    rdx,[rbx+0x8]
  40c054:	mov    QWORD PTR [rip+0x7225],rdx        # 413280 <__bss_start@@Base+0x10f0>
  40c05b:	cmp    ecx,0x9
  40c05e:	jne    40c44d <__generate_code_for_binary_boolean_expression@@Base+0x1abd>
  40c064:	lea    rcx,[rbx+0x14]
  40c068:	movzx  ebp,BYTE PTR [rip+0x7219]        # 413288 <__bss_start@@Base+0x10f8>
  40c06f:	xor    ebp,0x1
  40c072:	add    ebp,DWORD PTR [rax+rbx*1+0x10]
  40c076:	mov    QWORD PTR [rip+0x7203],rcx        # 413280 <__bss_start@@Base+0x10f0>
  40c07d:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40c084:	mov    QWORD PTR [rip+0x71f5],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c08b:	mov    DWORD PTR [rax+r14*1],0x9
  40c093:	add    r14,0x4
  40c097:	mov    QWORD PTR [rip+0x71e2],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c09e:	mov    rbx,r14
  40c0a1:	mov    DWORD PTR [rax+rbx*1],0x0
  40c0a8:	add    rbx,0x4
  40c0ac:	mov    QWORD PTR [rip+0x71cd],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c0b3:	mov    r14,rbx
  40c0b6:	mov    DWORD PTR [rax+r14*1],0x0
  40c0be:	add    r14,0x4
  40c0c2:	mov    QWORD PTR [rip+0x71b7],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c0c9:	mov    rbx,r14
  40c0cc:	mov    DWORD PTR [rax+rbx*1],ebp
  40c0cf:	lea    r14,[rbx+0x4]
  40c0d3:	mov    QWORD PTR [rip+0x71a6],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c0da:	cmp    BYTE PTR [rip+0x717f],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40c0e1:	je     40c147 <__generate_code_for_binary_boolean_expression@@Base+0x17b7>
  40c0e3:	lea    r15,[rbx+0x8]
  40c0e7:	cmp    r15,QWORD PTR [rip+0x718a]        # 413278 <__bss_start@@Base+0x10e8>
  40c0ee:	jbe    40c211 <__generate_code_for_binary_boolean_expression@@Base+0x1881>
  40c0f4:	add    rbx,0x20007
  40c0fb:	and    rbx,0xfffffffffffe0000
  40c102:	mov    rdi,QWORD PTR [rip+0x7167]        # 413270 <__bss_start@@Base+0x10e0>
  40c109:	mov    rsi,rbx
  40c10c:	call   4031d0 <realloc@plt>
  40c111:	mov    QWORD PTR [rip+0x7158],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c118:	mov    QWORD PTR [rip+0x7159],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40c11f:	mov    r14,QWORD PTR [rip+0x715a]        # 413280 <__bss_start@@Base+0x10f0>
  40c126:	lea    r15,[r14+0x4]
  40c12a:	cmp    BYTE PTR [rip+0x712f],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40c131:	mov    DWORD PTR [rax+r14*1],0x0
  40c139:	mov    QWORD PTR [rip+0x7140],r15        # 413280 <__bss_start@@Base+0x10f0>
  40c140:	je     40c164 <__generate_code_for_binary_boolean_expression@@Base+0x17d4>
  40c142:	jmp    40c227 <__generate_code_for_binary_boolean_expression@@Base+0x1897>
  40c147:	mov    rax,QWORD PTR [rip+0x7122]        # 413270 <__bss_start@@Base+0x10e0>
  40c14e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40c156:	add    rbx,0x8
  40c15a:	mov    QWORD PTR [rip+0x711f],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c161:	mov    r15,rbx
  40c164:	mov    DWORD PTR [rax+r15*1],0x0
  40c16c:	add    r15,0x4
  40c170:	mov    QWORD PTR [rip+0x7109],r15        # 413280 <__bss_start@@Base+0x10f0>
  40c177:	mov    r14,r15
  40c17a:	mov    DWORD PTR [rax+r14*1],0x0
  40c182:	add    r14,0x4
  40c186:	mov    QWORD PTR [rip+0x70f3],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c18d:	mov    rbx,r14
  40c190:	mov    DWORD PTR [rax+rbx*1],0x0
  40c197:	add    rbx,0x4
  40c19b:	mov    QWORD PTR [rip+0x70de],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c1a2:	mov    r14,rbx
  40c1a5:	mov    DWORD PTR [rax+r14*1],0x0
  40c1ad:	add    r14,0x4
  40c1b1:	mov    QWORD PTR [rip+0x70c8],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c1b8:	mov    rbx,r14
  40c1bb:	mov    DWORD PTR [rax+rbx*1],0x0
  40c1c2:	add    rbx,0x4
  40c1c6:	mov    QWORD PTR [rip+0x70b3],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c1cd:	mov    r14,rbx
  40c1d0:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40c1d8:	add    r14,0x4
  40c1dc:	mov    QWORD PTR [rip+0x709d],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c1e3:	mov    rcx,r14
  40c1e6:	mov    rax,QWORD PTR [rip+0x7083]        # 413270 <__bss_start@@Base+0x10e0>
  40c1ed:	mov    DWORD PTR [rax+rcx*1],0x0
  40c1f4:	add    rcx,0x4
  40c1f8:	mov    QWORD PTR [rip+0x7081],rcx        # 413280 <__bss_start@@Base+0x10f0>
  40c1ff:	mov    BYTE PTR [rip+0x7082],0x1        # 413288 <__bss_start@@Base+0x10f8>
  40c206:	add    rsp,0x8
  40c20a:	pop    rbx
  40c20b:	pop    r14
  40c20d:	pop    r15
  40c20f:	pop    rbp
  40c210:	ret    
  40c211:	mov    rax,QWORD PTR [rip+0x7058]        # 413270 <__bss_start@@Base+0x10e0>
  40c218:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40c220:	mov    QWORD PTR [rip+0x7059],r15        # 413280 <__bss_start@@Base+0x10f0>
  40c227:	lea    rcx,[r14+0x8]
  40c22b:	cmp    rcx,QWORD PTR [rip+0x7046]        # 413278 <__bss_start@@Base+0x10e8>
  40c232:	jbe    40c30a <__generate_code_for_binary_boolean_expression@@Base+0x197a>
  40c238:	add    r14,0x20007
  40c23f:	and    r14,0xfffffffffffe0000
  40c246:	mov    rdi,rax
  40c249:	mov    rsi,r14
  40c24c:	call   4031d0 <realloc@plt>
  40c251:	mov    QWORD PTR [rip+0x7018],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c258:	mov    QWORD PTR [rip+0x7019],r14        # 413278 <__bss_start@@Base+0x10e8>
  40c25f:	mov    r15,QWORD PTR [rip+0x701a]        # 413280 <__bss_start@@Base+0x10f0>
  40c266:	mov    cl,BYTE PTR [rip+0x6ff4]        # 413260 <__bss_start@@Base+0x10d0>
  40c26c:	mov    DWORD PTR [rax+r15*1],0x0
  40c274:	lea    r14,[r15+0x4]
  40c278:	mov    QWORD PTR [rip+0x7001],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c27f:	cmp    cl,0x1
  40c282:	jne    40c17a <__generate_code_for_binary_boolean_expression@@Base+0x17ea>
  40c288:	jmp    40c31d <__generate_code_for_binary_boolean_expression@@Base+0x198d>
  40c28d:	mov    DWORD PTR [rax+rbx*1],0x0
  40c294:	lea    r14,[rbx+0x4]
  40c298:	mov    QWORD PTR [rip+0x6fe1],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c29f:	lea    rcx,[rbx+0x8]
  40c2a3:	cmp    rcx,QWORD PTR [rip+0x6fce]        # 413278 <__bss_start@@Base+0x10e8>
  40c2aa:	jbe    40c380 <__generate_code_for_binary_boolean_expression@@Base+0x19f0>
  40c2b0:	add    rbx,0x20007
  40c2b7:	and    rbx,0xfffffffffffe0000
  40c2be:	mov    rdi,rax
  40c2c1:	mov    rsi,rbx
  40c2c4:	call   4031d0 <realloc@plt>
  40c2c9:	mov    QWORD PTR [rip+0x6fa0],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c2d0:	mov    QWORD PTR [rip+0x6fa1],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40c2d7:	mov    r14,QWORD PTR [rip+0x6fa2]        # 413280 <__bss_start@@Base+0x10f0>
  40c2de:	mov    cl,BYTE PTR [rip+0x6f7c]        # 413260 <__bss_start@@Base+0x10d0>
  40c2e4:	mov    DWORD PTR [rax+r14*1],0x0
  40c2ec:	lea    rbx,[r14+0x4]
  40c2f0:	mov    QWORD PTR [rip+0x6f89],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c2f7:	mov    ebp,0x1
  40c2fc:	cmp    cl,0x1
  40c2ff:	jne    40c0cc <__generate_code_for_binary_boolean_expression@@Base+0x173c>
  40c305:	jmp    40c393 <__generate_code_for_binary_boolean_expression@@Base+0x1a03>
  40c30a:	mov    DWORD PTR [rax+r15*1],0x0
  40c312:	lea    r14,[r15+0x4]
  40c316:	mov    QWORD PTR [rip+0x6f63],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c31d:	lea    rcx,[r15+0x8]
  40c321:	cmp    rcx,QWORD PTR [rip+0x6f50]        # 413278 <__bss_start@@Base+0x10e8>
  40c328:	jbe    40c3dc <__generate_code_for_binary_boolean_expression@@Base+0x1a4c>
  40c32e:	add    r15,0x20007
  40c335:	and    r15,0xfffffffffffe0000
  40c33c:	mov    rdi,rax
  40c33f:	mov    rsi,r15
  40c342:	call   4031d0 <realloc@plt>
  40c347:	mov    QWORD PTR [rip+0x6f22],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c34e:	mov    QWORD PTR [rip+0x6f23],r15        # 413278 <__bss_start@@Base+0x10e8>
  40c355:	mov    r14,QWORD PTR [rip+0x6f24]        # 413280 <__bss_start@@Base+0x10f0>
  40c35c:	mov    cl,BYTE PTR [rip+0x6efe]        # 413260 <__bss_start@@Base+0x10d0>
  40c362:	mov    DWORD PTR [rax+r14*1],0x0
  40c36a:	lea    rbx,[r14+0x4]
  40c36e:	mov    QWORD PTR [rip+0x6f0b],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c375:	cmp    cl,0x1
  40c378:	jne    40c190 <__generate_code_for_binary_boolean_expression@@Base+0x1800>
  40c37e:	jmp    40c3ef <__generate_code_for_binary_boolean_expression@@Base+0x1a5f>
  40c380:	mov    DWORD PTR [rax+r14*1],0x0
  40c388:	lea    rbx,[r14+0x4]
  40c38c:	mov    QWORD PTR [rip+0x6eed],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c393:	lea    rcx,[r14+0x8]
  40c397:	mov    ebp,0x1
  40c39c:	cmp    rcx,QWORD PTR [rip+0x6ed5]        # 413278 <__bss_start@@Base+0x10e8>
  40c3a3:	jbe    40c0cc <__generate_code_for_binary_boolean_expression@@Base+0x173c>
  40c3a9:	add    r14,0x20007
  40c3b0:	and    r14,0xfffffffffffe0000
  40c3b7:	mov    rdi,rax
  40c3ba:	mov    rsi,r14
  40c3bd:	call   4031d0 <realloc@plt>
  40c3c2:	mov    QWORD PTR [rip+0x6ea7],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c3c9:	mov    QWORD PTR [rip+0x6ea8],r14        # 413278 <__bss_start@@Base+0x10e8>
  40c3d0:	mov    rbx,QWORD PTR [rip+0x6ea9]        # 413280 <__bss_start@@Base+0x10f0>
  40c3d7:	jmp    40c0cc <__generate_code_for_binary_boolean_expression@@Base+0x173c>
  40c3dc:	mov    DWORD PTR [rax+r14*1],0x0
  40c3e4:	lea    rbx,[r14+0x4]
  40c3e8:	mov    QWORD PTR [rip+0x6e91],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c3ef:	lea    rcx,[r14+0x8]
  40c3f3:	cmp    rcx,QWORD PTR [rip+0x6e7e]        # 413278 <__bss_start@@Base+0x10e8>
  40c3fa:	jbe    40c476 <__generate_code_for_binary_boolean_expression@@Base+0x1ae6>
  40c3fc:	add    r14,0x20007
  40c403:	and    r14,0xfffffffffffe0000
  40c40a:	mov    rdi,rax
  40c40d:	mov    rsi,r14
  40c410:	call   4031d0 <realloc@plt>
  40c415:	mov    QWORD PTR [rip+0x6e54],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c41c:	mov    QWORD PTR [rip+0x6e55],r14        # 413278 <__bss_start@@Base+0x10e8>
  40c423:	mov    rbx,QWORD PTR [rip+0x6e56]        # 413280 <__bss_start@@Base+0x10f0>
  40c42a:	mov    cl,BYTE PTR [rip+0x6e30]        # 413260 <__bss_start@@Base+0x10d0>
  40c430:	mov    DWORD PTR [rax+rbx*1],0x0
  40c437:	lea    r14,[rbx+0x4]
  40c43b:	mov    QWORD PTR [rip+0x6e3e],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c442:	cmp    cl,0x1
  40c445:	jne    40c1a5 <__generate_code_for_binary_boolean_expression@@Base+0x1815>
  40c44b:	jmp    40c488 <__generate_code_for_binary_boolean_expression@@Base+0x1af8>
  40c44d:	mov    rax,QWORD PTR [rip+0x5b9c]        # 411ff0 <stderr@GLIBC_2.2.5>
  40c454:	mov    rdi,QWORD PTR [rax]
  40c457:	mov    rdx,QWORD PTR [rip+0x6dfa]        # 413258 <__bss_start@@Base+0x10c8>
  40c45e:	lea    rsi,[rip+0x19cc]        # 40de31 <_IO_stdin_used@@Base+0xe31>
  40c465:	xor    eax,eax
  40c467:	add    rsp,0x8
  40c46b:	pop    rbx
  40c46c:	pop    r14
  40c46e:	pop    r15
  40c470:	pop    rbp
  40c471:	jmp    403150 <fprintf@plt>
  40c476:	mov    DWORD PTR [rax+rbx*1],0x0
  40c47d:	lea    r14,[rbx+0x4]
  40c481:	mov    QWORD PTR [rip+0x6df8],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c488:	lea    rcx,[rbx+0x8]
  40c48c:	cmp    rcx,QWORD PTR [rip+0x6de5]        # 413278 <__bss_start@@Base+0x10e8>
  40c493:	jbe    40c4e7 <__generate_code_for_binary_boolean_expression@@Base+0x1b57>
  40c495:	add    rbx,0x20007
  40c49c:	and    rbx,0xfffffffffffe0000
  40c4a3:	mov    rdi,rax
  40c4a6:	mov    rsi,rbx
  40c4a9:	call   4031d0 <realloc@plt>
  40c4ae:	mov    QWORD PTR [rip+0x6dbb],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c4b5:	mov    QWORD PTR [rip+0x6dbc],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40c4bc:	mov    r14,QWORD PTR [rip+0x6dbd]        # 413280 <__bss_start@@Base+0x10f0>
  40c4c3:	mov    cl,BYTE PTR [rip+0x6d97]        # 413260 <__bss_start@@Base+0x10d0>
  40c4c9:	mov    DWORD PTR [rax+r14*1],0x0
  40c4d1:	lea    rbx,[r14+0x4]
  40c4d5:	mov    QWORD PTR [rip+0x6da4],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c4dc:	cmp    cl,0x1
  40c4df:	jne    40c1bb <__generate_code_for_binary_boolean_expression@@Base+0x182b>
  40c4e5:	jmp    40c4fa <__generate_code_for_binary_boolean_expression@@Base+0x1b6a>
  40c4e7:	mov    DWORD PTR [rax+r14*1],0x0
  40c4ef:	lea    rbx,[r14+0x4]
  40c4f3:	mov    QWORD PTR [rip+0x6d86],rbx        # 413280 <__bss_start@@Base+0x10f0>
  40c4fa:	lea    rcx,[r14+0x8]
  40c4fe:	cmp    rcx,QWORD PTR [rip+0x6d73]        # 413278 <__bss_start@@Base+0x10e8>
  40c505:	jbe    40c556 <__generate_code_for_binary_boolean_expression@@Base+0x1bc6>
  40c507:	add    r14,0x20007
  40c50e:	and    r14,0xfffffffffffe0000
  40c515:	mov    rdi,rax
  40c518:	mov    rsi,r14
  40c51b:	call   4031d0 <realloc@plt>
  40c520:	mov    QWORD PTR [rip+0x6d49],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c527:	mov    QWORD PTR [rip+0x6d4a],r14        # 413278 <__bss_start@@Base+0x10e8>
  40c52e:	mov    rbx,QWORD PTR [rip+0x6d4b]        # 413280 <__bss_start@@Base+0x10f0>
  40c535:	lea    r14,[rbx+0x4]
  40c539:	cmp    BYTE PTR [rip+0x6d20],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40c540:	mov    DWORD PTR [rax+rbx*1],0x0
  40c547:	mov    QWORD PTR [rip+0x6d32],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c54e:	je     40c1d0 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  40c554:	jmp    40c568 <__generate_code_for_binary_boolean_expression@@Base+0x1bd8>
  40c556:	mov    DWORD PTR [rax+rbx*1],0x0
  40c55d:	lea    r14,[rbx+0x4]
  40c561:	mov    QWORD PTR [rip+0x6d18],r14        # 413280 <__bss_start@@Base+0x10f0>
  40c568:	lea    rcx,[rbx+0x8]
  40c56c:	cmp    rcx,QWORD PTR [rip+0x6d05]        # 413278 <__bss_start@@Base+0x10e8>
  40c573:	jbe    40c5c7 <__generate_code_for_binary_boolean_expression@@Base+0x1c37>
  40c575:	add    rbx,0x20007
  40c57c:	and    rbx,0xfffffffffffe0000
  40c583:	mov    rdi,rax
  40c586:	mov    rsi,rbx
  40c589:	call   4031d0 <realloc@plt>
  40c58e:	mov    QWORD PTR [rip+0x6cdb],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c595:	mov    QWORD PTR [rip+0x6cdc],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40c59c:	mov    dl,BYTE PTR [rip+0x6cbe]        # 413260 <__bss_start@@Base+0x10d0>
  40c5a2:	mov    r14,QWORD PTR [rip+0x6cd7]        # 413280 <__bss_start@@Base+0x10f0>
  40c5a9:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40c5b1:	lea    rcx,[r14+0x4]
  40c5b5:	mov    QWORD PTR [rip+0x6cc4],rcx        # 413280 <__bss_start@@Base+0x10f0>
  40c5bc:	cmp    dl,0x1
  40c5bf:	jne    40c1e6 <__generate_code_for_binary_boolean_expression@@Base+0x1856>
  40c5c5:	jmp    40c5da <__generate_code_for_binary_boolean_expression@@Base+0x1c4a>
  40c5c7:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40c5cf:	lea    rcx,[r14+0x4]
  40c5d3:	mov    QWORD PTR [rip+0x6ca6],rcx        # 413280 <__bss_start@@Base+0x10f0>
  40c5da:	lea    rdx,[r14+0x8]
  40c5de:	cmp    rdx,QWORD PTR [rip+0x6c93]        # 413278 <__bss_start@@Base+0x10e8>
  40c5e5:	jbe    40c1e6 <__generate_code_for_binary_boolean_expression@@Base+0x1856>
  40c5eb:	add    r14,0x20007
  40c5f2:	and    r14,0xfffffffffffe0000
  40c5f9:	mov    rdi,rax
  40c5fc:	mov    rsi,r14
  40c5ff:	call   4031d0 <realloc@plt>
  40c604:	mov    QWORD PTR [rip+0x6c65],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c60b:	mov    QWORD PTR [rip+0x6c66],r14        # 413278 <__bss_start@@Base+0x10e8>
  40c612:	mov    rcx,QWORD PTR [rip+0x6c67]        # 413280 <__bss_start@@Base+0x10f0>
  40c619:	jmp    40c1e6 <__generate_code_for_binary_boolean_expression@@Base+0x1856>
  40c61e:	xchg   ax,ax
  40c620:	cmp    QWORD PTR [rip+0x6c40],0x0        # 413268 <__bss_start@@Base+0x10d8>
  40c628:	je     40c78e <__generate_code_for_binary_boolean_expression@@Base+0x1dfe>
  40c62e:	push   r14
  40c630:	push   rbx
  40c631:	push   rax
  40c632:	cmp    BYTE PTR [rip+0x6c27],0x0        # 413260 <__bss_start@@Base+0x10d0>
  40c639:	je     40c6aa <__generate_code_for_binary_boolean_expression@@Base+0x1d1a>
  40c63b:	mov    rbx,QWORD PTR [rip+0x6c3e]        # 413280 <__bss_start@@Base+0x10f0>
  40c642:	lea    rax,[rbx+0x8]
  40c646:	cmp    rax,QWORD PTR [rip+0x6c2b]        # 413278 <__bss_start@@Base+0x10e8>
  40c64d:	jbe    40c710 <__generate_code_for_binary_boolean_expression@@Base+0x1d80>
  40c653:	add    rbx,0x20007
  40c65a:	and    rbx,0xfffffffffffe0000
  40c661:	mov    rdi,QWORD PTR [rip+0x6c08]        # 413270 <__bss_start@@Base+0x10e0>
  40c668:	mov    rsi,rbx
  40c66b:	call   4031d0 <realloc@plt>
  40c670:	mov    rdi,rax
  40c673:	mov    QWORD PTR [rip+0x6bf6],rax        # 413270 <__bss_start@@Base+0x10e0>
  40c67a:	mov    QWORD PTR [rip+0x6bf7],rbx        # 413278 <__bss_start@@Base+0x10e8>
  40c681:	mov    al,BYTE PTR [rip+0x6bd9]        # 413260 <__bss_start@@Base+0x10d0>
  40c687:	mov    rsi,QWORD PTR [rip+0x6bf2]        # 413280 <__bss_start@@Base+0x10f0>
  40c68e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40c696:	add    rsi,0x8
  40c69a:	mov    QWORD PTR [rip+0x6bdf],rsi        # 413280 <__bss_start@@Base+0x10f0>
  40c6a1:	cmp    al,0x1
  40c6a3:	jne    40c6cb <__generate_code_for_binary_boolean_expression@@Base+0x1d3b>
  40c6a5:	jmp    40c731 <__generate_code_for_binary_boolean_expression@@Base+0x1da1>
  40c6aa:	mov    rdi,QWORD PTR [rip+0x6bbf]        # 413270 <__bss_start@@Base+0x10e0>
  40c6b1:	mov    rax,QWORD PTR [rip+0x6bc8]        # 413280 <__bss_start@@Base+0x10f0>
  40c6b8:	mov    QWORD PTR [rdi+rax*1],0x0
  40c6c0:	add    rax,0x8
  40c6c4:	mov    QWORD PTR [rip+0x6bb5],rax        # 413280 <__bss_start@@Base+0x10f0>
  40c6cb:	mov    rsi,QWORD PTR [rip+0x6bce]        # 4132a0 <__bss_start@@Base+0x1110>
  40c6d2:	mov    edx,0x4
  40c6d7:	call   4030d0 <msync@plt>
  40c6dc:	cmp    eax,0xffffffff
  40c6df:	je     40c79a <__generate_code_for_binary_boolean_expression@@Base+0x1e0a>
  40c6e5:	mov    rdi,QWORD PTR [rip+0x6b84]        # 413270 <__bss_start@@Base+0x10e0>
  40c6ec:	mov    rsi,QWORD PTR [rip+0x6bad]        # 4132a0 <__bss_start@@Base+0x1110>
  40c6f3:	call   4031f0 <munmap@plt>
  40c6f8:	mov    QWORD PTR [rip+0x6b6d],0x0        # 413270 <__bss_start@@Base+0x10e0>
  40c703:	mov    QWORD PTR [rip+0x6b92],0x0        # 4132a0 <__bss_start@@Base+0x1110>
  40c70e:	jmp    40c74e <__generate_code_for_binary_boolean_expression@@Base+0x1dbe>
  40c710:	mov    rdi,QWORD PTR [rip+0x6b59]        # 413270 <__bss_start@@Base+0x10e0>
  40c717:	mov    rsi,QWORD PTR [rip+0x6b62]        # 413280 <__bss_start@@Base+0x10f0>
  40c71e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40c726:	add    rsi,0x8
  40c72a:	mov    QWORD PTR [rip+0x6b4f],rsi        # 413280 <__bss_start@@Base+0x10f0>
  40c731:	mov    rcx,QWORD PTR [rip+0x6b30]        # 413268 <__bss_start@@Base+0x10d8>
  40c738:	mov    edx,0x1
  40c73d:	call   403260 <fwrite@plt>
  40c742:	mov    rdi,QWORD PTR [rip+0x6b27]        # 413270 <__bss_start@@Base+0x10e0>
  40c749:	call   403040 <free@plt>
  40c74e:	mov    rdi,QWORD PTR [rip+0x6b13]        # 413268 <__bss_start@@Base+0x10d8>
  40c755:	call   4031b0 <fflush@plt>
  40c75a:	mov    edi,DWORD PTR [rip+0x5a28]        # 412188 <__data_start@@Base+0x40>
  40c760:	call   40cc00 <__gcov_flush@@Base+0x2c0>
  40c765:	mov    rdi,QWORD PTR [rip+0x6afc]        # 413268 <__bss_start@@Base+0x10d8>
  40c76c:	call   4030c0 <fclose@plt>
  40c771:	mov    QWORD PTR [rip+0x6aec],0x0        # 413268 <__bss_start@@Base+0x10d8>
  40c77c:	mov    QWORD PTR [rip+0x6ae9],0x0        # 413270 <__bss_start@@Base+0x10e0>
  40c787:	add    rsp,0x8
  40c78b:	pop    rbx
  40c78c:	pop    r14
  40c78e:	mov    rdi,QWORD PTR [rip+0x6ac3]        # 413258 <__bss_start@@Base+0x10c8>
  40c795:	jmp    403040 <free@plt>
  40c79a:	call   403050 <__errno_location@plt>
  40c79f:	mov    edi,DWORD PTR [rax]
  40c7a1:	mov    rax,QWORD PTR [rip+0x5848]        # 411ff0 <stderr@GLIBC_2.2.5>
  40c7a8:	mov    r14,QWORD PTR [rax]
  40c7ab:	mov    rbx,QWORD PTR [rip+0x6aa6]        # 413258 <__bss_start@@Base+0x10c8>
  40c7b2:	call   403280 <strerror@plt>
  40c7b7:	mov    rcx,rax
  40c7ba:	lea    rsi,[rip+0x16de]        # 40de9f <_IO_stdin_used@@Base+0xe9f>
  40c7c1:	xor    eax,eax
  40c7c3:	mov    rdi,r14
  40c7c6:	mov    rdx,rbx
  40c7c9:	call   403150 <fprintf@plt>
  40c7ce:	jmp    40c6e5 <__generate_code_for_binary_boolean_expression@@Base+0x1d55>
  40c7d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7dd:	nop    DWORD PTR [rax]
  40c7e0:	push   rbx
  40c7e1:	mov    rbx,rdi
  40c7e4:	mov    edi,0x18
  40c7e9:	call   4031a0 <malloc@plt>
  40c7ee:	mov    QWORD PTR [rax+0x8],rbx
  40c7f2:	mov    QWORD PTR [rax+0x10],0x0
  40c7fa:	lea    rcx,[rip+0x6a8f]        # 413290 <__bss_start@@Base+0x1100>
  40c801:	mov    QWORD PTR [rax],rcx
  40c804:	lea    rcx,[rip+0x6aad]        # 4132b8 <writeout_fn_list@@Base>
  40c80b:	lea    rdx,[rcx+0x8]
  40c80f:	mov    rsi,QWORD PTR [rcx+0x8]
  40c813:	add    rsi,0x10
  40c817:	xor    edi,edi
  40c819:	cmp    QWORD PTR [rcx],0x0
  40c81d:	setne  dil
  40c821:	cmove  rsi,rdx
  40c825:	mov    QWORD PTR [rsi],rax
  40c828:	mov    QWORD PTR [rcx+rdi*8],rax
  40c82c:	pop    rbx
  40c82d:	ret    
  40c82e:	xchg   ax,ax
  40c830:	push   r14
  40c832:	push   rbx
  40c833:	push   rax
  40c834:	lea    rax,[rip+0x6a7d]        # 4132b8 <writeout_fn_list@@Base>
  40c83b:	mov    rbx,QWORD PTR [rax]
  40c83e:	test   rbx,rbx
  40c841:	je     40c863 <__generate_code_for_binary_boolean_expression@@Base+0x1ed3>
  40c843:	lea    r14,[rip+0x6a46]        # 413290 <__bss_start@@Base+0x1100>
  40c84a:	nop    WORD PTR [rax+rax*1+0x0]
  40c850:	cmp    QWORD PTR [rbx],r14
  40c853:	jne    40c85a <__generate_code_for_binary_boolean_expression@@Base+0x1eca>
  40c855:	xor    eax,eax
  40c857:	call   QWORD PTR [rbx+0x8]
  40c85a:	mov    rbx,QWORD PTR [rbx+0x10]
  40c85e:	test   rbx,rbx
  40c861:	jne    40c850 <__generate_code_for_binary_boolean_expression@@Base+0x1ec0>
  40c863:	add    rsp,0x8
  40c867:	pop    rbx
  40c868:	pop    r14
  40c86a:	ret    
  40c86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	push   r15
  40c872:	push   r14
  40c874:	push   r12
  40c876:	push   rbx
  40c877:	push   rax
  40c878:	lea    r14,[rip+0x6a39]        # 4132b8 <writeout_fn_list@@Base>
  40c87f:	mov    rdi,QWORD PTR [r14]
  40c882:	test   rdi,rdi
  40c885:	je     40c8e2 <__generate_code_for_binary_boolean_expression@@Base+0x1f52>
  40c887:	xor    r12d,r12d
  40c88a:	lea    r15,[rip+0x69ff]        # 413290 <__bss_start@@Base+0x1100>
  40c891:	jmp    40c8b0 <__generate_code_for_binary_boolean_expression@@Base+0x1f20>
  40c893:	mov    QWORD PTR [r14],rbx
  40c896:	cmp    rdi,QWORD PTR [r14+0x8]
  40c89a:	jne    40c8cb <__generate_code_for_binary_boolean_expression@@Base+0x1f3b>
  40c89c:	mov    QWORD PTR [r14+0x8],r12
  40c8a0:	test   r12,r12
  40c8a3:	jne    40c8d0 <__generate_code_for_binary_boolean_expression@@Base+0x1f40>
  40c8a5:	jmp    40c8d5 <__generate_code_for_binary_boolean_expression@@Base+0x1f45>
  40c8a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8b0:	mov    rbx,QWORD PTR [rdi+0x10]
  40c8b4:	cmp    QWORD PTR [rdi],r15
  40c8b7:	je     40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1f30>
  40c8b9:	mov    r12,rdi
  40c8bc:	jmp    40c8da <__generate_code_for_binary_boolean_expression@@Base+0x1f4a>
  40c8be:	xchg   ax,ax
  40c8c0:	cmp    rdi,QWORD PTR [r14]
  40c8c3:	je     40c893 <__generate_code_for_binary_boolean_expression@@Base+0x1f03>
  40c8c5:	cmp    rdi,QWORD PTR [r14+0x8]
  40c8c9:	je     40c89c <__generate_code_for_binary_boolean_expression@@Base+0x1f0c>
  40c8cb:	test   r12,r12
  40c8ce:	je     40c8d5 <__generate_code_for_binary_boolean_expression@@Base+0x1f45>
  40c8d0:	mov    QWORD PTR [r12+0x10],rbx
  40c8d5:	call   403040 <free@plt>
  40c8da:	mov    rdi,rbx
  40c8dd:	test   rbx,rbx
  40c8e0:	jne    40c8b0 <__generate_code_for_binary_boolean_expression@@Base+0x1f20>
  40c8e2:	add    rsp,0x8
  40c8e6:	pop    rbx
  40c8e7:	pop    r12
  40c8e9:	pop    r14
  40c8eb:	pop    r15
  40c8ed:	ret    
  40c8ee:	xchg   ax,ax
  40c8f0:	push   rbx
  40c8f1:	mov    rbx,rdi
  40c8f4:	mov    edi,0x18
  40c8f9:	call   4031a0 <malloc@plt>
  40c8fe:	mov    QWORD PTR [rax+0x8],rbx
  40c902:	mov    QWORD PTR [rax+0x10],0x0
  40c90a:	lea    rcx,[rip+0x697f]        # 413290 <__bss_start@@Base+0x1100>
  40c911:	mov    QWORD PTR [rax],rcx
  40c914:	lea    rcx,[rip+0x698d]        # 4132a8 <flush_fn_list@@Base>
  40c91b:	lea    rdx,[rcx+0x8]
  40c91f:	mov    rsi,QWORD PTR [rcx+0x8]
  40c923:	add    rsi,0x10
  40c927:	xor    edi,edi
  40c929:	cmp    QWORD PTR [rcx],0x0
  40c92d:	setne  dil
  40c931:	cmove  rsi,rdx
  40c935:	mov    QWORD PTR [rsi],rax
  40c938:	mov    QWORD PTR [rcx+rdi*8],rax
  40c93c:	pop    rbx
  40c93d:	ret    
  40c93e:	xchg   ax,ax

000000000040c940 <__gcov_flush@@Base>:
  40c940:	push   rbx
  40c941:	lea    rax,[rip+0x6960]        # 4132a8 <flush_fn_list@@Base>
  40c948:	mov    rbx,QWORD PTR [rax]
  40c94b:	test   rbx,rbx
  40c94e:	je     40c95e <__gcov_flush@@Base+0x1e>
  40c950:	xor    eax,eax
  40c952:	call   QWORD PTR [rbx+0x8]
  40c955:	mov    rbx,QWORD PTR [rbx+0x10]
  40c959:	test   rbx,rbx
  40c95c:	jne    40c950 <__gcov_flush@@Base+0x10>
  40c95e:	pop    rbx
  40c95f:	ret    
  40c960:	push   r15
  40c962:	push   r14
  40c964:	push   r12
  40c966:	push   rbx
  40c967:	push   rax
  40c968:	lea    r14,[rip+0x6939]        # 4132a8 <flush_fn_list@@Base>
  40c96f:	mov    rdi,QWORD PTR [r14]
  40c972:	test   rdi,rdi
  40c975:	je     40c9d2 <__gcov_flush@@Base+0x92>
  40c977:	xor    r12d,r12d
  40c97a:	lea    r15,[rip+0x690f]        # 413290 <__bss_start@@Base+0x1100>
  40c981:	jmp    40c9a0 <__gcov_flush@@Base+0x60>
  40c983:	mov    QWORD PTR [r14],rbx
  40c986:	cmp    rdi,QWORD PTR [r14+0x8]
  40c98a:	jne    40c9bb <__gcov_flush@@Base+0x7b>
  40c98c:	mov    QWORD PTR [r14+0x8],r12
  40c990:	test   r12,r12
  40c993:	jne    40c9c0 <__gcov_flush@@Base+0x80>
  40c995:	jmp    40c9c5 <__gcov_flush@@Base+0x85>
  40c997:	nop    WORD PTR [rax+rax*1+0x0]
  40c9a0:	mov    rbx,QWORD PTR [rdi+0x10]
  40c9a4:	cmp    QWORD PTR [rdi],r15
  40c9a7:	je     40c9b0 <__gcov_flush@@Base+0x70>
  40c9a9:	mov    r12,rdi
  40c9ac:	jmp    40c9ca <__gcov_flush@@Base+0x8a>
  40c9ae:	xchg   ax,ax
  40c9b0:	cmp    rdi,QWORD PTR [r14]
  40c9b3:	je     40c983 <__gcov_flush@@Base+0x43>
  40c9b5:	cmp    rdi,QWORD PTR [r14+0x8]
  40c9b9:	je     40c98c <__gcov_flush@@Base+0x4c>
  40c9bb:	test   r12,r12
  40c9be:	je     40c9c5 <__gcov_flush@@Base+0x85>
  40c9c0:	mov    QWORD PTR [r12+0x10],rbx
  40c9c5:	call   403040 <free@plt>
  40c9ca:	mov    rdi,rbx
  40c9cd:	test   rbx,rbx
  40c9d0:	jne    40c9a0 <__gcov_flush@@Base+0x60>
  40c9d2:	add    rsp,0x8
  40c9d6:	pop    rbx
  40c9d7:	pop    r12
  40c9d9:	pop    r14
  40c9db:	pop    r15
  40c9dd:	ret    
  40c9de:	xchg   ax,ax
  40c9e0:	push   r14
  40c9e2:	push   rbx
  40c9e3:	push   rax
  40c9e4:	mov    r14,rsi
  40c9e7:	test   rdi,rdi
  40c9ea:	je     40ca37 <__gcov_flush@@Base+0xf7>
  40c9ec:	mov    rbx,rdi
  40c9ef:	mov    edi,0x18
  40c9f4:	call   4031a0 <malloc@plt>
  40c9f9:	mov    QWORD PTR [rax+0x8],rbx
  40c9fd:	mov    QWORD PTR [rax+0x10],0x0
  40ca05:	lea    rcx,[rip+0x6884]        # 413290 <__bss_start@@Base+0x1100>
  40ca0c:	mov    QWORD PTR [rax],rcx
  40ca0f:	lea    rcx,[rip+0x68a2]        # 4132b8 <writeout_fn_list@@Base>
  40ca16:	lea    rdx,[rcx+0x8]
  40ca1a:	mov    rsi,QWORD PTR [rcx+0x8]
  40ca1e:	add    rsi,0x10
  40ca22:	xor    edi,edi
  40ca24:	cmp    QWORD PTR [rcx],0x0
  40ca28:	setne  dil
  40ca2c:	cmove  rsi,rdx
  40ca30:	mov    QWORD PTR [rsi],rax
  40ca33:	mov    QWORD PTR [rcx+rdi*8],rax
  40ca37:	test   r14,r14
  40ca3a:	je     40ca84 <__gcov_flush@@Base+0x144>
  40ca3c:	mov    edi,0x18
  40ca41:	call   4031a0 <malloc@plt>
  40ca46:	mov    QWORD PTR [rax+0x8],r14
  40ca4a:	mov    QWORD PTR [rax+0x10],0x0
  40ca52:	lea    rcx,[rip+0x6837]        # 413290 <__bss_start@@Base+0x1100>
  40ca59:	mov    QWORD PTR [rax],rcx
  40ca5c:	lea    rcx,[rip+0x6845]        # 4132a8 <flush_fn_list@@Base>
  40ca63:	lea    rdx,[rcx+0x8]
  40ca67:	mov    rsi,QWORD PTR [rcx+0x8]
  40ca6b:	add    rsi,0x10
  40ca6f:	xor    edi,edi
  40ca71:	cmp    QWORD PTR [rcx],0x0
  40ca75:	setne  dil
  40ca79:	cmove  rsi,rdx
  40ca7d:	mov    QWORD PTR [rsi],rax
  40ca80:	mov    QWORD PTR [rcx+rdi*8],rax
  40ca84:	cmp    BYTE PTR [rip+0x680d],0x0        # 413298 <__bss_start@@Base+0x1108>
  40ca8b:	je     40ca95 <__gcov_flush@@Base+0x155>
  40ca8d:	add    rsp,0x8
  40ca91:	pop    rbx
  40ca92:	pop    r14
  40ca94:	ret    
  40ca95:	mov    BYTE PTR [rip+0x67fc],0x1        # 413298 <__bss_start@@Base+0x1108>
  40ca9c:	lea    rdi,[rip+0xfffffffffffffebd]        # 40c960 <__gcov_flush@@Base+0x20>
  40caa3:	call   40cf50 <__libc_csu_fini@@Base+0x10>
  40caa8:	lea    rdi,[rip+0xfffffffffffffdc1]        # 40c870 <__generate_code_for_binary_boolean_expression@@Base+0x1ee0>
  40caaf:	call   40cf50 <__libc_csu_fini@@Base+0x10>
  40cab4:	lea    rdi,[rip+0xfffffffffffffd75]        # 40c830 <__generate_code_for_binary_boolean_expression@@Base+0x1ea0>
  40cabb:	add    rsp,0x8
  40cabf:	pop    rbx
  40cac0:	pop    r14
  40cac2:	jmp    40cf50 <__libc_csu_fini@@Base+0x10>
  40cac7:	nop
  40cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	push   r15
  40cad2:	push   r14
  40cad4:	push   rbx
  40cad5:	mov    r14,rdi
  40cad8:	lea    rbx,[rdi+0x1]
  40cadc:	lea    r15,[rip+0x56a9]        # 41218c <lprofDirMode@@Base>
  40cae3:	jmp    40caf4 <__gcov_flush@@Base+0x1b4>
  40cae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40caef:	nop
  40caf0:	add    rbx,0x1
  40caf4:	movzx  eax,BYTE PTR [rbx]
  40caf7:	cmp    al,0x2f
  40caf9:	je     40cb10 <__gcov_flush@@Base+0x1d0>
  40cafb:	test   al,al
  40cafd:	jne    40caf0 <__gcov_flush@@Base+0x1b0>
  40caff:	jmp    40cb23 <__gcov_flush@@Base+0x1e3>
  40cb01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb10:	mov    BYTE PTR [rbx],0x0
  40cb13:	mov    esi,DWORD PTR [r15]
  40cb16:	mov    rdi,r14
  40cb19:	call   403080 <mkdir@plt>
  40cb1e:	mov    BYTE PTR [rbx],0x2f
  40cb21:	jmp    40caf0 <__gcov_flush@@Base+0x1b0>
  40cb23:	pop    rbx
  40cb24:	pop    r14
  40cb26:	pop    r15
  40cb28:	ret    
  40cb29:	nop    DWORD PTR [rax+0x0]
  40cb30:	lea    rax,[rip+0x5655]        # 41218c <lprofDirMode@@Base>
  40cb37:	mov    eax,DWORD PTR [rax]
  40cb39:	ret    
  40cb3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb40:	lea    rax,[rip+0x5645]        # 41218c <lprofDirMode@@Base>
  40cb47:	mov    DWORD PTR [rax],edi
  40cb49:	ret    
  40cb4a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb50:	push   rbp
  40cb51:	push   rbx
  40cb52:	sub    rsp,0x188
  40cb59:	mov    ebp,esi
  40cb5b:	mov    rbx,rdi
  40cb5e:	mov    rdi,rsp
  40cb61:	call   403120 <uname@plt>
  40cb66:	test   eax,eax
  40cb68:	js     40cb7c <__gcov_flush@@Base+0x23c>
  40cb6a:	lea    rsi,[rsp+0x41]
  40cb6f:	movsxd rdx,ebp
  40cb72:	mov    rdi,rbx
  40cb75:	call   403060 <strncpy@plt>
  40cb7a:	xor    eax,eax
  40cb7c:	add    rsp,0x188
  40cb83:	pop    rbx
  40cb84:	pop    rbp
  40cb85:	ret    
  40cb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb90:	push   rbp
  40cb91:	push   r14
  40cb93:	push   rbx
  40cb94:	sub    rsp,0x20
  40cb98:	mov    ebx,edi
  40cb9a:	mov    WORD PTR [rsp+0x2],0x0
  40cba1:	xorps  xmm0,xmm0
  40cba4:	movups XMMWORD PTR [rsp+0x8],xmm0
  40cba9:	call   4030b0 <getpid@plt>
  40cbae:	mov    DWORD PTR [rsp+0x18],eax
  40cbb2:	mov    WORD PTR [rsp],0x1
  40cbb8:	mov    r14,rsp
  40cbbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbc0:	xor    ebp,ebp
  40cbc2:	mov    esi,0x7
  40cbc7:	xor    eax,eax
  40cbc9:	mov    edi,ebx
  40cbcb:	mov    rdx,r14
  40cbce:	call   4030a0 <fcntl@plt>
  40cbd3:	cmp    eax,0xffffffff
  40cbd6:	jne    40cbee <__gcov_flush@@Base+0x2ae>
  40cbd8:	call   403050 <__errno_location@plt>
  40cbdd:	mov    eax,DWORD PTR [rax]
  40cbdf:	cmp    eax,0x4
  40cbe2:	je     40cbc0 <__gcov_flush@@Base+0x280>
  40cbe4:	cmp    eax,0x25
  40cbe7:	jne    40cbee <__gcov_flush@@Base+0x2ae>
  40cbe9:	mov    ebp,0xffffffff
  40cbee:	mov    eax,ebp
  40cbf0:	add    rsp,0x20
  40cbf4:	pop    rbx
  40cbf5:	pop    r14
  40cbf7:	pop    rbp
  40cbf8:	ret    
  40cbf9:	nop    DWORD PTR [rax+0x0]
  40cc00:	push   rbp
  40cc01:	push   r14
  40cc03:	push   rbx
  40cc04:	sub    rsp,0x20
  40cc08:	mov    ebx,edi
  40cc0a:	mov    WORD PTR [rsp+0x2],0x0
  40cc11:	xorps  xmm0,xmm0
  40cc14:	movups XMMWORD PTR [rsp+0x8],xmm0
  40cc19:	call   4030b0 <getpid@plt>
  40cc1e:	mov    DWORD PTR [rsp+0x18],eax
  40cc22:	mov    WORD PTR [rsp],0x2
  40cc28:	mov    r14,rsp
  40cc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc30:	xor    ebp,ebp
  40cc32:	mov    esi,0x7
  40cc37:	xor    eax,eax
  40cc39:	mov    edi,ebx
  40cc3b:	mov    rdx,r14
  40cc3e:	call   4030a0 <fcntl@plt>
  40cc43:	cmp    eax,0xffffffff
  40cc46:	jne    40cc5e <__gcov_flush@@Base+0x31e>
  40cc48:	call   403050 <__errno_location@plt>
  40cc4d:	mov    eax,DWORD PTR [rax]
  40cc4f:	cmp    eax,0x4
  40cc52:	je     40cc30 <__gcov_flush@@Base+0x2f0>
  40cc54:	cmp    eax,0x25
  40cc57:	jne    40cc5e <__gcov_flush@@Base+0x31e>
  40cc59:	mov    ebp,0xffffffff
  40cc5e:	mov    eax,ebp
  40cc60:	add    rsp,0x20
  40cc64:	pop    rbx
  40cc65:	pop    r14
  40cc67:	pop    rbp
  40cc68:	ret    
  40cc69:	nop    DWORD PTR [rax+0x0]
  40cc70:	push   rbp
  40cc71:	push   r14
  40cc73:	push   rbx
  40cc74:	sub    rsp,0x20
  40cc78:	xor    ebx,ebx
  40cc7a:	mov    esi,0x42
  40cc7f:	mov    edx,0x1b6
  40cc84:	xor    eax,eax
  40cc86:	call   403200 <open@plt>
  40cc8b:	test   eax,eax
  40cc8d:	js     40ccea <__gcov_flush@@Base+0x3aa>
  40cc8f:	mov    ebp,eax
  40cc91:	mov    WORD PTR [rsp+0x2],0x0
  40cc98:	xorps  xmm0,xmm0
  40cc9b:	movups XMMWORD PTR [rsp+0x8],xmm0
  40cca0:	call   4030b0 <getpid@plt>
  40cca5:	mov    DWORD PTR [rsp+0x18],eax
  40cca9:	mov    WORD PTR [rsp],0x1
  40ccaf:	mov    r14,rsp
  40ccb2:	mov    esi,0x7
  40ccb7:	xor    eax,eax
  40ccb9:	mov    edi,ebp
  40ccbb:	mov    rdx,r14
  40ccbe:	call   4030a0 <fcntl@plt>
  40ccc3:	cmp    eax,0xffffffff
  40ccc6:	jne    40ccd9 <__gcov_flush@@Base+0x399>
  40ccc8:	call   403050 <__errno_location@plt>
  40cccd:	mov    eax,DWORD PTR [rax]
  40cccf:	cmp    eax,0x4
  40ccd2:	je     40ccb2 <__gcov_flush@@Base+0x372>
  40ccd4:	cmp    eax,0x25
  40ccd7:	je     40ccf6 <__gcov_flush@@Base+0x3b6>
  40ccd9:	lea    rsi,[rip+0x103e]        # 40dd1e <_IO_stdin_used@@Base+0xd1e>
  40cce0:	mov    edi,ebp
  40cce2:	call   4031e0 <fdopen@plt>
  40cce7:	mov    rbx,rax
  40ccea:	mov    rax,rbx
  40cced:	add    rsp,0x20
  40ccf1:	pop    rbx
  40ccf2:	pop    r14
  40ccf4:	pop    rbp
  40ccf5:	ret    
  40ccf6:	mov    rax,QWORD PTR [rip+0x52f3]        # 411ff0 <stderr@GLIBC_2.2.5>
  40ccfd:	mov    rdi,QWORD PTR [rax]
  40cd00:	lea    rsi,[rip+0x11b9]        # 40dec0 <_IO_stdin_used@@Base+0xec0>
  40cd07:	lea    rdx,[rip+0x11fb]        # 40df09 <_IO_stdin_used@@Base+0xf09>
  40cd0e:	xor    eax,eax
  40cd10:	call   403150 <fprintf@plt>
  40cd15:	jmp    40ccd9 <__gcov_flush@@Base+0x399>
  40cd17:	nop    WORD PTR [rax+rax*1+0x0]
  40cd20:	push   r15
  40cd22:	push   r14
  40cd24:	push   r12
  40cd26:	push   rbx
  40cd27:	push   rax
  40cd28:	mov    r14,rsi
  40cd2b:	mov    r15,rdi
  40cd2e:	lea    rdi,[rip+0x1202]        # 40df37 <_IO_stdin_used@@Base+0xf37>
  40cd35:	call   403030 <getenv@plt>
  40cd3a:	mov    rbx,rax
  40cd3d:	lea    rdi,[rip+0x11ff]        # 40df43 <_IO_stdin_used@@Base+0xf43>
  40cd44:	call   403030 <getenv@plt>
  40cd49:	mov    QWORD PTR [r14],0x0
  40cd50:	mov    DWORD PTR [r15],0x0
  40cd57:	test   rbx,rbx
  40cd5a:	je     40cd91 <__gcov_flush@@Base+0x451>
  40cd5c:	xor    r12d,r12d
  40cd5f:	cmp    BYTE PTR [rbx],0x0
  40cd62:	je     40cd91 <__gcov_flush@@Base+0x451>
  40cd64:	test   rax,rax
  40cd67:	je     40cd81 <__gcov_flush@@Base+0x441>
  40cd69:	xor    r12d,r12d
  40cd6c:	xor    esi,esi
  40cd6e:	mov    edx,0xa
  40cd73:	mov    rdi,rax
  40cd76:	call   403170 <strtol@plt>
  40cd7b:	test   eax,eax
  40cd7d:	cmovns r12d,eax
  40cd81:	mov    DWORD PTR [r15],r12d
  40cd84:	mov    rdi,rbx
  40cd87:	call   4030e0 <strlen@plt>
  40cd8c:	mov    QWORD PTR [r14],rax
  40cd8f:	jmp    40cd93 <__gcov_flush@@Base+0x453>
  40cd91:	xor    ebx,ebx
  40cd93:	mov    rax,rbx
  40cd96:	add    rsp,0x8
  40cd9a:	pop    rbx
  40cd9b:	pop    r12
  40cd9d:	pop    r14
  40cd9f:	pop    r15
  40cda1:	ret    
  40cda2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cdac:	nop    DWORD PTR [rax+0x0]
  40cdb0:	push   r15
  40cdb2:	push   r14
  40cdb4:	push   r12
  40cdb6:	push   rbx
  40cdb7:	push   rax
  40cdb8:	mov    r15,rcx
  40cdbb:	mov    r12,rdx
  40cdbe:	mov    rbx,rsi
  40cdc1:	mov    r14,rdi
  40cdc4:	test   r8d,r8d
  40cdc7:	jle    40cdef <__gcov_flush@@Base+0x4af>
  40cdc9:	lea    rax,[rbx+0x1]
  40cdcd:	xor    ecx,ecx
  40cdcf:	nop
  40cdd0:	movzx  edx,BYTE PTR [rax]
  40cdd3:	cmp    dl,0x2f
  40cdd6:	je     40cde0 <__gcov_flush@@Base+0x4a0>
  40cdd8:	test   dl,dl
  40cdda:	jne    40cde6 <__gcov_flush@@Base+0x4a6>
  40cddc:	jmp    40cdef <__gcov_flush@@Base+0x4af>
  40cdde:	xchg   ax,ax
  40cde0:	add    ecx,0x1
  40cde3:	mov    rbx,rax
  40cde6:	add    rax,0x1
  40cdea:	cmp    ecx,r8d
  40cded:	jl     40cdd0 <__gcov_flush@@Base+0x490>
  40cdef:	mov    rdi,r14
  40cdf2:	mov    rsi,r12
  40cdf5:	mov    rdx,r15
  40cdf8:	call   403180 <memcpy@plt>
  40cdfd:	cmp    BYTE PTR [r12+r15*1-0x1],0x2f
  40ce03:	je     40ce0e <__gcov_flush@@Base+0x4ce>
  40ce05:	mov    BYTE PTR [r14+r15*1],0x2f
  40ce0a:	add    r15,0x1
  40ce0e:	add    r14,r15
  40ce11:	mov    rdi,rbx
  40ce14:	call   4030e0 <strlen@plt>
  40ce19:	lea    rdx,[rax+0x1]
  40ce1d:	mov    rdi,r14
  40ce20:	mov    rsi,rbx
  40ce23:	add    rsp,0x8
  40ce27:	pop    rbx
  40ce28:	pop    r12
  40ce2a:	pop    r14
  40ce2c:	pop    r15
  40ce2e:	jmp    403180 <memcpy@plt>
  40ce33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce3d:	nop    DWORD PTR [rax]
  40ce40:	mov    esi,0x2f
  40ce45:	jmp    403100 <strchr@plt>
  40ce4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce50:	mov    esi,0x2f
  40ce55:	jmp    403110 <strrchr@plt>
  40ce5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce60:	push   rax
  40ce61:	mov    DWORD PTR [rsp+0x4],0x0
  40ce69:	lea    rsi,[rsp+0x4]
  40ce6e:	mov    edi,0x2
  40ce73:	xor    eax,eax
  40ce75:	call   403190 <prctl@plt>
  40ce7a:	mov    ecx,DWORD PTR [rsp+0x4]
  40ce7e:	test   eax,eax
  40ce80:	jne    40ce99 <__gcov_flush@@Base+0x559>
  40ce82:	cmp    ecx,0x9
  40ce85:	jne    40ce99 <__gcov_flush@@Base+0x559>
  40ce87:	mov    edi,0x1
  40ce8c:	xor    esi,esi
  40ce8e:	xor    eax,eax
  40ce90:	call   403190 <prctl@plt>
  40ce95:	mov    ecx,DWORD PTR [rsp+0x4]
  40ce99:	xor    eax,eax
  40ce9b:	cmp    ecx,0x9
  40ce9e:	sete   al
  40cea1:	pop    rcx
  40cea2:	ret    
  40cea3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cead:	nop    DWORD PTR [rax]
  40ceb0:	mov    edi,0x1
  40ceb5:	mov    esi,0x9
  40ceba:	xor    eax,eax
  40cebc:	jmp    403190 <prctl@plt>
  40cec1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cecb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ced0 <__libc_csu_init@@Base>:
  40ced0:	endbr64 
  40ced4:	push   r15
  40ced6:	lea    r15,[rip+0x3d43]        # 410c20 <_IO_stdin_used@@Base+0x3c20>
  40cedd:	push   r14
  40cedf:	mov    r14,rdx
  40cee2:	push   r13
  40cee4:	mov    r13,rsi
  40cee7:	push   r12
  40cee9:	mov    r12d,edi
  40ceec:	push   rbp
  40ceed:	lea    rbp,[rip+0x3d64]        # 410c58 <_IO_stdin_used@@Base+0x3c58>
  40cef4:	push   rbx
  40cef5:	sub    rbp,r15
  40cef8:	sub    rsp,0x8
  40cefc:	call   403000 <getenv@plt-0x30>
  40cf01:	sar    rbp,0x3
  40cf05:	je     40cf26 <__libc_csu_init@@Base+0x56>
  40cf07:	xor    ebx,ebx
  40cf09:	nop    DWORD PTR [rax+0x0]
  40cf10:	mov    rdx,r14
  40cf13:	mov    rsi,r13
  40cf16:	mov    edi,r12d
  40cf19:	call   QWORD PTR [r15+rbx*8]
  40cf1d:	add    rbx,0x1
  40cf21:	cmp    rbp,rbx
  40cf24:	jne    40cf10 <__libc_csu_init@@Base+0x40>
  40cf26:	add    rsp,0x8
  40cf2a:	pop    rbx
  40cf2b:	pop    rbp
  40cf2c:	pop    r12
  40cf2e:	pop    r13
  40cf30:	pop    r14
  40cf32:	pop    r15
  40cf34:	ret    
  40cf35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040cf40 <__libc_csu_fini@@Base>:
  40cf40:	endbr64 
  40cf44:	ret    
  40cf45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf4f:	nop
  40cf50:	endbr64 
  40cf54:	mov    rdx,QWORD PTR [rip+0x51f5]        # 412150 <__data_start@@Base+0x8>
  40cf5b:	xor    esi,esi
  40cf5d:	jmp    403230 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000040cf64 <.fini>:
  40cf64:	endbr64 
  40cf68:	sub    rsp,0x8
  40cf6c:	add    rsp,0x8
  40cf70:	ret    
