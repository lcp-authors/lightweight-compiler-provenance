
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_prefix/monster_test_prefix:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xefe9]        # 411ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xefe2]        # 412008 <flatcc_builder_padding_base@@Base+0x4e48>
  403026:	jmp    QWORD PTR [rip+0xefe4]        # 412010 <flatcc_builder_padding_base@@Base+0x4e50>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xefe2]        # 412018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xefda]        # 412020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xefd2]        # 412028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__stack_chk_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0xefca]        # 412030 <__stack_chk_fail@GLIBC_2.4>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__assert_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xefc2]        # 412038 <__assert_fail@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memset@plt>:
  403080:	jmp    QWORD PTR [rip+0xefba]        # 412040 <memset@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memchr@plt>:
  403090:	jmp    QWORD PTR [rip+0xefb2]        # 412048 <memchr@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xefaa]        # 412050 <memcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memcpy@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xefa2]        # 412058 <memcpy@GLIBC_2.14>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <malloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xef9a]        # 412060 <malloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <realloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xef92]        # 412068 <realloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <posix_memalign@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xef8a]        # 412070 <posix_memalign@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030f0 <_start@@Base>:
  4030f0:	endbr64 
  4030f4:	xor    ebp,ebp
  4030f6:	mov    r9,rdx
  4030f9:	pop    rsi
  4030fa:	mov    rdx,rsp
  4030fd:	and    rsp,0xfffffffffffffff0
  403101:	push   rax
  403102:	push   rsp
  403103:	mov    r8,0x40c540
  40310a:	mov    rcx,0x40c4d0
  403111:	mov    rdi,0x4045e6
  403118:	call   QWORD PTR [rip+0xeed2]        # 411ff0 <__libc_start_main@GLIBC_2.2.5>
  40311e:	hlt    
  40311f:	nop
  403120:	endbr64 
  403124:	ret    
  403125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40312f:	nop
  403130:	mov    eax,0x41209f
  403135:	push   rbp
  403136:	sub    rax,0x412098
  40313c:	cmp    rax,0xe
  403140:	mov    rbp,rsp
  403143:	jbe    403160 <_start@@Base+0x70>
  403145:	mov    eax,0x0
  40314a:	test   rax,rax
  40314d:	je     403160 <_start@@Base+0x70>
  40314f:	pop    rbp
  403150:	mov    edi,0x412098
  403155:	jmp    rax
  403157:	nop    WORD PTR [rax+rax*1+0x0]
  403160:	pop    rbp
  403161:	ret    
  403162:	nop    DWORD PTR [rax+0x0]
  403166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403170:	mov    esi,0x412098
  403175:	push   rbp
  403176:	sub    rsi,0x412098
  40317d:	sar    rsi,0x3
  403181:	mov    rbp,rsp
  403184:	mov    rax,rsi
  403187:	shr    rax,0x3f
  40318b:	add    rsi,rax
  40318e:	sar    rsi,1
  403191:	je     4031a8 <_start@@Base+0xb8>
  403193:	mov    eax,0x0
  403198:	test   rax,rax
  40319b:	je     4031a8 <_start@@Base+0xb8>
  40319d:	pop    rbp
  40319e:	mov    edi,0x412098
  4031a3:	jmp    rax
  4031a5:	nop    DWORD PTR [rax]
  4031a8:	pop    rbp
  4031a9:	ret    
  4031aa:	nop    WORD PTR [rax+rax*1+0x0]
  4031b0:	cmp    BYTE PTR [rip+0xeee1],0x0        # 412098 <__bss_start@@Base>
  4031b7:	jne    4031ca <_start@@Base+0xda>
  4031b9:	push   rbp
  4031ba:	mov    rbp,rsp
  4031bd:	call   403130 <_start@@Base+0x40>
  4031c2:	pop    rbp
  4031c3:	mov    BYTE PTR [rip+0xeece],0x1        # 412098 <__bss_start@@Base>
  4031ca:	repz ret 
  4031cc:	nop    DWORD PTR [rax+0x0]
  4031d0:	mov    edi,0x411e18
  4031d5:	cmp    QWORD PTR [rdi],0x0
  4031d9:	jne    4031e0 <_start@@Base+0xf0>
  4031db:	jmp    403170 <_start@@Base+0x80>
  4031dd:	nop    DWORD PTR [rax]
  4031e0:	mov    eax,0x0
  4031e5:	test   rax,rax
  4031e8:	je     4031db <_start@@Base+0xeb>
  4031ea:	push   rbp
  4031eb:	mov    rbp,rsp
  4031ee:	call   rax
  4031f0:	pop    rbp
  4031f1:	jmp    403170 <_start@@Base+0x80>
  4031f6:	push   rbp
  4031f7:	mov    rbp,rsp
  4031fa:	sub    rsp,0x10
  4031fe:	mov    QWORD PTR [rbp-0x8],rdi
  403202:	mov    QWORD PTR [rbp-0x10],rsi
  403206:	mov    rsi,QWORD PTR [rbp-0x10]
  40320a:	mov    rax,QWORD PTR [rbp-0x8]
  40320e:	mov    ecx,0x0
  403213:	mov    edx,0x0
  403218:	mov    rdi,rax
  40321b:	call   40664c <flatcc_builder_start_buffer@@Base>
  403220:	leave  
  403221:	ret    
  403222:	push   rbp
  403223:	mov    rbp,rsp
  403226:	sub    rsp,0x10
  40322a:	mov    QWORD PTR [rbp-0x8],rdi
  40322e:	mov    DWORD PTR [rbp-0xc],esi
  403231:	mov    edx,DWORD PTR [rbp-0xc]
  403234:	mov    rax,QWORD PTR [rbp-0x8]
  403238:	mov    esi,edx
  40323a:	mov    rdi,rax
  40323d:	call   406795 <flatcc_builder_end_buffer@@Base>
  403242:	leave  
  403243:	ret    
  403244:	push   rbp
  403245:	mov    rbp,rsp
  403248:	sub    rsp,0x10
  40324c:	mov    QWORD PTR [rbp-0x8],rdi
  403250:	mov    rax,QWORD PTR [rbp-0x8]
  403254:	mov    esi,0x24
  403259:	mov    rdi,rax
  40325c:	call   4073b1 <flatcc_builder_start_table@@Base>
  403261:	leave  
  403262:	ret    
  403263:	push   rbp
  403264:	mov    rbp,rsp
  403267:	sub    rsp,0x10
  40326b:	mov    QWORD PTR [rbp-0x8],rdi
  40326f:	mov    rax,QWORD PTR [rbp-0x8]
  403273:	mov    edx,0x1
  403278:	lea    rsi,[rip+0x9dad]        # 40d02c <_IO_stdin_used@@Base+0x2c>
  40327f:	mov    rdi,rax
  403282:	call   407e08 <flatcc_builder_check_required@@Base>
  403287:	test   eax,eax
  403289:	jne    4032aa <_start@@Base+0x1ba>
  40328b:	lea    rcx,[rip+0x9eee]        # 40d180 <_IO_stdin_used@@Base+0x180>
  403292:	mov    edx,0x95e
  403297:	lea    rsi,[rip+0x9d92]        # 40d030 <_IO_stdin_used@@Base+0x30>
  40329e:	lea    rdi,[rip+0x9e0b]        # 40d0b0 <_IO_stdin_used@@Base+0xb0>
  4032a5:	call   403070 <__assert_fail@plt>
  4032aa:	mov    rax,QWORD PTR [rbp-0x8]
  4032ae:	mov    rdi,rax
  4032b1:	call   407eb3 <flatcc_builder_end_table@@Base>
  4032b6:	leave  
  4032b7:	ret    
  4032b8:	push   rbp
  4032b9:	mov    rbp,rsp
  4032bc:	sub    rsp,0x20
  4032c0:	mov    QWORD PTR [rbp-0x18],rdi
  4032c4:	mov    DWORD PTR [rbp-0x1c],esi
  4032c7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4032cb:	je     4032f9 <_start@@Base+0x209>
  4032cd:	mov    rax,QWORD PTR [rbp-0x18]
  4032d1:	mov    esi,0x3
  4032d6:	mov    rdi,rax
  4032d9:	call   4096e3 <flatcc_builder_table_add_offset@@Base>
  4032de:	mov    QWORD PTR [rbp-0x8],rax
  4032e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4032e7:	je     4032f9 <_start@@Base+0x209>
  4032e9:	mov    rax,QWORD PTR [rbp-0x8]
  4032ed:	mov    edx,DWORD PTR [rbp-0x1c]
  4032f0:	mov    DWORD PTR [rax],edx
  4032f2:	mov    eax,0x0
  4032f7:	jmp    4032fe <_start@@Base+0x20e>
  4032f9:	mov    eax,0xffffffff
  4032fe:	leave  
  4032ff:	ret    
  403300:	push   rbp
  403301:	mov    rbp,rsp
  403304:	sub    rsp,0x10
  403308:	mov    QWORD PTR [rbp-0x8],rdi
  40330c:	mov    QWORD PTR [rbp-0x10],rsi
  403310:	mov    rdx,QWORD PTR [rbp-0x10]
  403314:	mov    rax,QWORD PTR [rbp-0x8]
  403318:	mov    rsi,rdx
  40331b:	mov    rdi,rax
  40331e:	call   4093c6 <flatcc_builder_create_string_str@@Base>
  403323:	mov    edx,eax
  403325:	mov    rax,QWORD PTR [rbp-0x8]
  403329:	mov    esi,edx
  40332b:	mov    rdi,rax
  40332e:	call   4032b8 <_start@@Base+0x1c8>
  403333:	leave  
  403334:	ret    
  403335:	push   rbp
  403336:	mov    rbp,rsp
  403339:	sub    rsp,0x10
  40333d:	mov    QWORD PTR [rbp-0x8],rdi
  403341:	mov    rax,QWORD PTR [rbp-0x8]
  403345:	lea    rsi,[rip+0x9e18]        # 40d164 <_IO_stdin_used@@Base+0x164>
  40334c:	mov    rdi,rax
  40334f:	call   4031f6 <_start@@Base+0x106>
  403354:	test   eax,eax
  403356:	jne    403366 <_start@@Base+0x276>
  403358:	mov    rax,QWORD PTR [rbp-0x8]
  40335c:	mov    rdi,rax
  40335f:	call   403244 <_start@@Base+0x154>
  403364:	jmp    40336b <_start@@Base+0x27b>
  403366:	mov    eax,0xffffffff
  40336b:	leave  
  40336c:	ret    
  40336d:	push   rbp
  40336e:	mov    rbp,rsp
  403371:	sub    rsp,0x10
  403375:	mov    QWORD PTR [rbp-0x8],rdi
  403379:	mov    rax,QWORD PTR [rbp-0x8]
  40337d:	mov    rdi,rax
  403380:	call   403263 <_start@@Base+0x173>
  403385:	mov    edx,eax
  403387:	mov    rax,QWORD PTR [rbp-0x8]
  40338b:	mov    esi,edx
  40338d:	mov    rdi,rax
  403390:	call   403222 <_start@@Base+0x132>
  403395:	leave  
  403396:	ret    
  403397:	push   rbp
  403398:	mov    rbp,rsp
  40339b:	sub    rsp,0x10
  40339f:	mov    QWORD PTR [rbp-0x8],rdi
  4033a3:	mov    rax,QWORD PTR [rbp-0x8]
  4033a7:	movzx  eax,BYTE PTR [rax+0x10]
  4033ab:	movzx  eax,al
  4033ae:	cmp    eax,0x1
  4033b1:	jne    4033c8 <_start@@Base+0x2d8>
  4033b3:	mov    rax,QWORD PTR [rbp-0x8]
  4033b7:	lea    rsi,[rip+0x163]        # 403521 <_start@@Base+0x431>
  4033be:	mov    rdi,rax
  4033c1:	call   40ba33 <flatcc_verify_union_table@@Base>
  4033c6:	jmp    4033cd <_start@@Base+0x2dd>
  4033c8:	mov    eax,0x0
  4033cd:	leave  
  4033ce:	ret    
  4033cf:	push   rbp
  4033d0:	mov    rbp,rsp
  4033d3:	sub    rsp,0x10
  4033d7:	mov    QWORD PTR [rbp-0x8],rdi
  4033db:	mov    rax,QWORD PTR [rbp-0x8]
  4033df:	movzx  eax,BYTE PTR [rax+0x10]
  4033e3:	movzx  eax,al
  4033e6:	cmp    eax,0x2
  4033e9:	je     403418 <_start@@Base+0x328>
  4033eb:	cmp    eax,0x2
  4033ee:	jg     4033f7 <_start@@Base+0x307>
  4033f0:	cmp    eax,0x1
  4033f3:	je     403403 <_start@@Base+0x313>
  4033f5:	jmp    403457 <_start@@Base+0x367>
  4033f7:	cmp    eax,0x3
  4033fa:	je     40342d <_start@@Base+0x33d>
  4033fc:	cmp    eax,0x4
  4033ff:	je     403442 <_start@@Base+0x352>
  403401:	jmp    403457 <_start@@Base+0x367>
  403403:	mov    rax,QWORD PTR [rbp-0x8]
  403407:	lea    rsi,[rip+0x7fd]        # 403c0b <_start@@Base+0xb1b>
  40340e:	mov    rdi,rax
  403411:	call   40ba33 <flatcc_verify_union_table@@Base>
  403416:	jmp    40345c <_start@@Base+0x36c>
  403418:	mov    rax,QWORD PTR [rbp-0x8]
  40341c:	lea    rsi,[rip+0x167]        # 40358a <_start@@Base+0x49a>
  403423:	mov    rdi,rax
  403426:	call   40ba33 <flatcc_verify_union_table@@Base>
  40342b:	jmp    40345c <_start@@Base+0x36c>
  40342d:	mov    rax,QWORD PTR [rbp-0x8]
  403431:	lea    rsi,[rip+0xf8]        # 403530 <_start@@Base+0x440>
  403438:	mov    rdi,rax
  40343b:	call   40ba33 <flatcc_verify_union_table@@Base>
  403440:	jmp    40345c <_start@@Base+0x36c>
  403442:	mov    rax,QWORD PTR [rbp-0x8]
  403446:	lea    rsi,[rip+0x392]        # 4037df <_start@@Base+0x6ef>
  40344d:	mov    rdi,rax
  403450:	call   40ba33 <flatcc_verify_union_table@@Base>
  403455:	jmp    40345c <_start@@Base+0x36c>
  403457:	mov    eax,0x0
  40345c:	leave  
  40345d:	ret    
  40345e:	push   rbp
  40345f:	mov    rbp,rsp
  403462:	sub    rsp,0x10
  403466:	mov    QWORD PTR [rbp-0x8],rdi
  40346a:	mov    rax,QWORD PTR [rbp-0x8]
  40346e:	movzx  eax,BYTE PTR [rax+0x10]
  403472:	movzx  eax,al
  403475:	cmp    eax,0x9
  403478:	je     4034ce <_start@@Base+0x3de>
  40347a:	cmp    eax,0x9
  40347d:	jg     40348e <_start@@Base+0x39e>
  40347f:	cmp    eax,0x2
  403482:	je     4034a1 <_start@@Base+0x3b1>
  403484:	cmp    eax,0x8
  403487:	je     4034b6 <_start@@Base+0x3c6>
  403489:	jmp    40351a <_start@@Base+0x42a>
  40348e:	cmp    eax,0xb
  403491:	je     4034fe <_start@@Base+0x40e>
  403493:	cmp    eax,0xb
  403496:	jl     4034e6 <_start@@Base+0x3f6>
  403498:	cmp    eax,0xff
  40349d:	je     40350c <_start@@Base+0x41c>
  40349f:	jmp    40351a <_start@@Base+0x42a>
  4034a1:	mov    rax,QWORD PTR [rbp-0x8]
  4034a5:	lea    rsi,[rip+0x100e]        # 4044ba <_start@@Base+0x13ca>
  4034ac:	mov    rdi,rax
  4034af:	call   40ba33 <flatcc_verify_union_table@@Base>
  4034b4:	jmp    40351f <_start@@Base+0x42f>
  4034b6:	mov    rax,QWORD PTR [rbp-0x8]
  4034ba:	mov    edx,0x2
  4034bf:	mov    esi,0x2
  4034c4:	mov    rdi,rax
  4034c7:	call   40ba7a <flatcc_verify_union_struct@@Base>
  4034cc:	jmp    40351f <_start@@Base+0x42f>
  4034ce:	mov    rax,QWORD PTR [rbp-0x8]
  4034d2:	mov    edx,0x4
  4034d7:	mov    esi,0x4
  4034dc:	mov    rdi,rax
  4034df:	call   40ba7a <flatcc_verify_union_struct@@Base>
  4034e4:	jmp    40351f <_start@@Base+0x42f>
  4034e6:	mov    rax,QWORD PTR [rbp-0x8]
  4034ea:	mov    edx,0x4
  4034ef:	mov    esi,0x4
  4034f4:	mov    rdi,rax
  4034f7:	call   40ba7a <flatcc_verify_union_struct@@Base>
  4034fc:	jmp    40351f <_start@@Base+0x42f>
  4034fe:	mov    rax,QWORD PTR [rbp-0x8]
  403502:	mov    rdi,rax
  403505:	call   40babd <flatcc_verify_union_string@@Base>
  40350a:	jmp    40351f <_start@@Base+0x42f>
  40350c:	mov    rax,QWORD PTR [rbp-0x8]
  403510:	mov    rdi,rax
  403513:	call   40babd <flatcc_verify_union_string@@Base>
  403518:	jmp    40351f <_start@@Base+0x42f>
  40351a:	mov    eax,0x0
  40351f:	leave  
  403520:	ret    
  403521:	push   rbp
  403522:	mov    rbp,rsp
  403525:	mov    QWORD PTR [rbp-0x8],rdi
  403529:	mov    eax,0x0
  40352e:	pop    rbp
  40352f:	ret    
  403530:	push   rbp
  403531:	mov    rbp,rsp
  403534:	mov    QWORD PTR [rbp-0x8],rdi
  403538:	mov    eax,0x0
  40353d:	pop    rbp
  40353e:	ret    
  40353f:	push   rbp
  403540:	mov    rbp,rsp
  403543:	mov    QWORD PTR [rbp-0x8],rdi
  403547:	mov    eax,0x0
  40354c:	pop    rbp
  40354d:	ret    
  40354e:	push   rbp
  40354f:	mov    rbp,rsp
  403552:	sub    rsp,0x20
  403556:	mov    QWORD PTR [rbp-0x18],rdi
  40355a:	mov    rax,QWORD PTR [rbp-0x18]
  40355e:	mov    ecx,0x1
  403563:	mov    edx,0x0
  403568:	mov    esi,0x0
  40356d:	mov    rdi,rax
  403570:	call   40b66a <flatcc_verify_field@@Base>
  403575:	mov    DWORD PTR [rbp-0x4],eax
  403578:	cmp    DWORD PTR [rbp-0x4],0x0
  40357c:	je     403583 <_start@@Base+0x493>
  40357e:	mov    eax,DWORD PTR [rbp-0x4]
  403581:	jmp    403588 <_start@@Base+0x498>
  403583:	mov    eax,0x0
  403588:	leave  
  403589:	ret    
  40358a:	push   rbp
  40358b:	mov    rbp,rsp
  40358e:	sub    rsp,0x20
  403592:	mov    QWORD PTR [rbp-0x18],rdi
  403596:	mov    rax,QWORD PTR [rbp-0x18]
  40359a:	mov    ecx,0x1
  40359f:	mov    edx,0x1
  4035a4:	mov    esi,0x0
  4035a9:	mov    rdi,rax
  4035ac:	call   40b66a <flatcc_verify_field@@Base>
  4035b1:	mov    DWORD PTR [rbp-0x4],eax
  4035b4:	cmp    DWORD PTR [rbp-0x4],0x0
  4035b8:	je     4035c2 <_start@@Base+0x4d2>
  4035ba:	mov    eax,DWORD PTR [rbp-0x4]
  4035bd:	jmp    403642 <_start@@Base+0x552>
  4035c2:	mov    rax,QWORD PTR [rbp-0x18]
  4035c6:	mov    ecx,0x1
  4035cb:	mov    edx,0x1
  4035d0:	mov    esi,0x1
  4035d5:	mov    rdi,rax
  4035d8:	call   40b66a <flatcc_verify_field@@Base>
  4035dd:	mov    DWORD PTR [rbp-0x4],eax
  4035e0:	cmp    DWORD PTR [rbp-0x4],0x0
  4035e4:	je     4035eb <_start@@Base+0x4fb>
  4035e6:	mov    eax,DWORD PTR [rbp-0x4]
  4035e9:	jmp    403642 <_start@@Base+0x552>
  4035eb:	mov    rax,QWORD PTR [rbp-0x18]
  4035ef:	mov    ecx,0x1
  4035f4:	mov    edx,0x1
  4035f9:	mov    esi,0x2
  4035fe:	mov    rdi,rax
  403601:	call   40b66a <flatcc_verify_field@@Base>
  403606:	mov    DWORD PTR [rbp-0x4],eax
  403609:	cmp    DWORD PTR [rbp-0x4],0x0
  40360d:	je     403614 <_start@@Base+0x524>
  40360f:	mov    eax,DWORD PTR [rbp-0x4]
  403612:	jmp    403642 <_start@@Base+0x552>
  403614:	mov    rax,QWORD PTR [rbp-0x18]
  403618:	mov    ecx,0x1
  40361d:	mov    edx,0x1
  403622:	mov    esi,0x3
  403627:	mov    rdi,rax
  40362a:	call   40b66a <flatcc_verify_field@@Base>
  40362f:	mov    DWORD PTR [rbp-0x4],eax
  403632:	cmp    DWORD PTR [rbp-0x4],0x0
  403636:	je     40363d <_start@@Base+0x54d>
  403638:	mov    eax,DWORD PTR [rbp-0x4]
  40363b:	jmp    403642 <_start@@Base+0x552>
  40363d:	mov    eax,0x0
  403642:	leave  
  403643:	ret    
  403644:	push   rbp
  403645:	mov    rbp,rsp
  403648:	sub    rsp,0x20
  40364c:	mov    QWORD PTR [rbp-0x18],rdi
  403650:	mov    rax,QWORD PTR [rbp-0x18]
  403654:	mov    ecx,0x1
  403659:	mov    edx,0x0
  40365e:	mov    esi,0x0
  403663:	mov    rdi,rax
  403666:	call   40b66a <flatcc_verify_field@@Base>
  40366b:	mov    DWORD PTR [rbp-0x4],eax
  40366e:	cmp    DWORD PTR [rbp-0x4],0x0
  403672:	je     40367c <_start@@Base+0x58c>
  403674:	mov    eax,DWORD PTR [rbp-0x4]
  403677:	jmp    403754 <_start@@Base+0x664>
  40367c:	mov    rax,QWORD PTR [rbp-0x18]
  403680:	mov    ecx,0x8
  403685:	mov    edx,0x8
  40368a:	mov    esi,0x1
  40368f:	mov    rdi,rax
  403692:	call   40b66a <flatcc_verify_field@@Base>
  403697:	mov    DWORD PTR [rbp-0x4],eax
  40369a:	cmp    DWORD PTR [rbp-0x4],0x0
  40369e:	je     4036a8 <_start@@Base+0x5b8>
  4036a0:	mov    eax,DWORD PTR [rbp-0x4]
  4036a3:	jmp    403754 <_start@@Base+0x664>
  4036a8:	mov    rax,QWORD PTR [rbp-0x18]
  4036ac:	mov    ecx,0x8
  4036b1:	mov    edx,0x8
  4036b6:	mov    esi,0x2
  4036bb:	mov    rdi,rax
  4036be:	call   40b66a <flatcc_verify_field@@Base>
  4036c3:	mov    DWORD PTR [rbp-0x4],eax
  4036c6:	cmp    DWORD PTR [rbp-0x4],0x0
  4036ca:	je     4036d4 <_start@@Base+0x5e4>
  4036cc:	mov    eax,DWORD PTR [rbp-0x4]
  4036cf:	jmp    403754 <_start@@Base+0x664>
  4036d4:	mov    rax,QWORD PTR [rbp-0x18]
  4036d8:	mov    ecx,0x4
  4036dd:	mov    edx,0x4
  4036e2:	mov    esi,0x3
  4036e7:	mov    rdi,rax
  4036ea:	call   40b66a <flatcc_verify_field@@Base>
  4036ef:	mov    DWORD PTR [rbp-0x4],eax
  4036f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4036f6:	je     4036fd <_start@@Base+0x60d>
  4036f8:	mov    eax,DWORD PTR [rbp-0x4]
  4036fb:	jmp    403754 <_start@@Base+0x664>
  4036fd:	mov    rax,QWORD PTR [rbp-0x18]
  403701:	mov    ecx,0x8
  403706:	mov    edx,0x8
  40370b:	mov    esi,0x4
  403710:	mov    rdi,rax
  403713:	call   40b66a <flatcc_verify_field@@Base>
  403718:	mov    DWORD PTR [rbp-0x4],eax
  40371b:	cmp    DWORD PTR [rbp-0x4],0x0
  40371f:	je     403726 <_start@@Base+0x636>
  403721:	mov    eax,DWORD PTR [rbp-0x4]
  403724:	jmp    403754 <_start@@Base+0x664>
  403726:	mov    rax,QWORD PTR [rbp-0x18]
  40372a:	mov    ecx,0x8
  40372f:	mov    edx,0x8
  403734:	mov    esi,0x5
  403739:	mov    rdi,rax
  40373c:	call   40b66a <flatcc_verify_field@@Base>
  403741:	mov    DWORD PTR [rbp-0x4],eax
  403744:	cmp    DWORD PTR [rbp-0x4],0x0
  403748:	je     40374f <_start@@Base+0x65f>
  40374a:	mov    eax,DWORD PTR [rbp-0x4]
  40374d:	jmp    403754 <_start@@Base+0x664>
  40374f:	mov    eax,0x0
  403754:	leave  
  403755:	ret    
  403756:	push   rbp
  403757:	mov    rbp,rsp
  40375a:	sub    rsp,0x20
  40375e:	mov    QWORD PTR [rbp-0x18],rdi
  403762:	mov    rax,QWORD PTR [rbp-0x18]
  403766:	mov    edx,0x0
  40376b:	mov    esi,0x0
  403770:	mov    rdi,rax
  403773:	call   40b6d5 <flatcc_verify_string_field@@Base>
  403778:	mov    DWORD PTR [rbp-0x4],eax
  40377b:	cmp    DWORD PTR [rbp-0x4],0x0
  40377f:	je     403786 <_start@@Base+0x696>
  403781:	mov    eax,DWORD PTR [rbp-0x4]
  403784:	jmp    4037dd <_start@@Base+0x6ed>
  403786:	mov    rax,QWORD PTR [rbp-0x18]
  40378a:	mov    ecx,0x8
  40378f:	mov    edx,0x8
  403794:	mov    esi,0x1
  403799:	mov    rdi,rax
  40379c:	call   40b66a <flatcc_verify_field@@Base>
  4037a1:	mov    DWORD PTR [rbp-0x4],eax
  4037a4:	cmp    DWORD PTR [rbp-0x4],0x0
  4037a8:	je     4037af <_start@@Base+0x6bf>
  4037aa:	mov    eax,DWORD PTR [rbp-0x4]
  4037ad:	jmp    4037dd <_start@@Base+0x6ed>
  4037af:	mov    rax,QWORD PTR [rbp-0x18]
  4037b3:	mov    ecx,0x2
  4037b8:	mov    edx,0x2
  4037bd:	mov    esi,0x2
  4037c2:	mov    rdi,rax
  4037c5:	call   40b66a <flatcc_verify_field@@Base>
  4037ca:	mov    DWORD PTR [rbp-0x4],eax
  4037cd:	cmp    DWORD PTR [rbp-0x4],0x0
  4037d1:	je     4037d8 <_start@@Base+0x6e8>
  4037d3:	mov    eax,DWORD PTR [rbp-0x4]
  4037d6:	jmp    4037dd <_start@@Base+0x6ed>
  4037d8:	mov    eax,0x0
  4037dd:	leave  
  4037de:	ret    
  4037df:	push   rbp
  4037e0:	mov    rbp,rsp
  4037e3:	sub    rsp,0x20
  4037e7:	mov    QWORD PTR [rbp-0x18],rdi
  4037eb:	mov    rax,QWORD PTR [rbp-0x18]
  4037ef:	lea    rcx,[rip+0x7d]        # 403873 <_start@@Base+0x783>
  4037f6:	mov    edx,0x0
  4037fb:	mov    esi,0x0
  403800:	mov    rdi,rax
  403803:	call   40b8cf <flatcc_verify_table_field@@Base>
  403808:	mov    DWORD PTR [rbp-0x4],eax
  40380b:	cmp    DWORD PTR [rbp-0x4],0x0
  40380f:	je     403816 <_start@@Base+0x726>
  403811:	mov    eax,DWORD PTR [rbp-0x4]
  403814:	jmp    403871 <_start@@Base+0x781>
  403816:	mov    rax,QWORD PTR [rbp-0x18]
  40381a:	lea    rcx,[rip+0xcd5]        # 4044f6 <_start@@Base+0x1406>
  403821:	mov    edx,0x0
  403826:	mov    esi,0x1
  40382b:	mov    rdi,rax
  40382e:	call   40b8cf <flatcc_verify_table_field@@Base>
  403833:	mov    DWORD PTR [rbp-0x4],eax
  403836:	cmp    DWORD PTR [rbp-0x4],0x0
  40383a:	je     403841 <_start@@Base+0x751>
  40383c:	mov    eax,DWORD PTR [rbp-0x4]
  40383f:	jmp    403871 <_start@@Base+0x781>
  403841:	mov    rax,QWORD PTR [rbp-0x18]
  403845:	lea    rcx,[rip+0xfffffffffffffb83]        # 4033cf <_start@@Base+0x2df>
  40384c:	mov    edx,0x0
  403851:	mov    esi,0x3
  403856:	mov    rdi,rax
  403859:	call   40c2e3 <flatcc_verify_union_vector_field@@Base>
  40385e:	mov    DWORD PTR [rbp-0x4],eax
  403861:	cmp    DWORD PTR [rbp-0x4],0x0
  403865:	je     40386c <_start@@Base+0x77c>
  403867:	mov    eax,DWORD PTR [rbp-0x4]
  40386a:	jmp    403871 <_start@@Base+0x781>
  40386c:	mov    eax,0x0
  403871:	leave  
  403872:	ret    
  403873:	push   rbp
  403874:	mov    rbp,rsp
  403877:	sub    rsp,0x20
  40387b:	mov    QWORD PTR [rbp-0x18],rdi
  40387f:	mov    rax,QWORD PTR [rbp-0x18]
  403883:	lea    rcx,[rip+0x7d]        # 403907 <_start@@Base+0x817>
  40388a:	mov    edx,0x0
  40388f:	mov    esi,0x0
  403894:	mov    rdi,rax
  403897:	call   40b8cf <flatcc_verify_table_field@@Base>
  40389c:	mov    DWORD PTR [rbp-0x4],eax
  40389f:	cmp    DWORD PTR [rbp-0x4],0x0
  4038a3:	je     4038aa <_start@@Base+0x7ba>
  4038a5:	mov    eax,DWORD PTR [rbp-0x4]
  4038a8:	jmp    403905 <_start@@Base+0x815>
  4038aa:	mov    rax,QWORD PTR [rbp-0x18]
  4038ae:	lea    rcx,[rip+0x1d9]        # 403a8e <_start@@Base+0x99e>
  4038b5:	mov    edx,0x0
  4038ba:	mov    esi,0x1
  4038bf:	mov    rdi,rax
  4038c2:	call   40b8cf <flatcc_verify_table_field@@Base>
  4038c7:	mov    DWORD PTR [rbp-0x4],eax
  4038ca:	cmp    DWORD PTR [rbp-0x4],0x0
  4038ce:	je     4038d5 <_start@@Base+0x7e5>
  4038d0:	mov    eax,DWORD PTR [rbp-0x4]
  4038d3:	jmp    403905 <_start@@Base+0x815>
  4038d5:	mov    rax,QWORD PTR [rbp-0x18]
  4038d9:	lea    rcx,[rip+0x213]        # 403af3 <_start@@Base+0xa03>
  4038e0:	mov    edx,0x0
  4038e5:	mov    esi,0x2
  4038ea:	mov    rdi,rax
  4038ed:	call   40b8cf <flatcc_verify_table_field@@Base>
  4038f2:	mov    DWORD PTR [rbp-0x4],eax
  4038f5:	cmp    DWORD PTR [rbp-0x4],0x0
  4038f9:	je     403900 <_start@@Base+0x810>
  4038fb:	mov    eax,DWORD PTR [rbp-0x4]
  4038fe:	jmp    403905 <_start@@Base+0x815>
  403900:	mov    eax,0x0
  403905:	leave  
  403906:	ret    
  403907:	push   rbp
  403908:	mov    rbp,rsp
  40390b:	sub    rsp,0x20
  40390f:	mov    QWORD PTR [rbp-0x18],rdi
  403913:	mov    rax,QWORD PTR [rbp-0x18]
  403917:	mov    edx,0x0
  40391c:	mov    esi,0x0
  403921:	mov    rdi,rax
  403924:	call   40b6d5 <flatcc_verify_string_field@@Base>
  403929:	mov    DWORD PTR [rbp-0x4],eax
  40392c:	cmp    DWORD PTR [rbp-0x4],0x0
  403930:	je     40393a <_start@@Base+0x84a>
  403932:	mov    eax,DWORD PTR [rbp-0x4]
  403935:	jmp    403a8c <_start@@Base+0x99c>
  40393a:	mov    rax,QWORD PTR [rbp-0x18]
  40393e:	mov    ecx,0x4
  403943:	mov    edx,0x4
  403948:	mov    esi,0x1
  40394d:	mov    rdi,rax
  403950:	call   40b66a <flatcc_verify_field@@Base>
  403955:	mov    DWORD PTR [rbp-0x4],eax
  403958:	cmp    DWORD PTR [rbp-0x4],0x0
  40395c:	je     403966 <_start@@Base+0x876>
  40395e:	mov    eax,DWORD PTR [rbp-0x4]
  403961:	jmp    403a8c <_start@@Base+0x99c>
  403966:	mov    rax,QWORD PTR [rbp-0x18]
  40396a:	mov    edx,0x0
  40396f:	mov    esi,0x2
  403974:	mov    rdi,rax
  403977:	call   40b6d5 <flatcc_verify_string_field@@Base>
  40397c:	mov    DWORD PTR [rbp-0x4],eax
  40397f:	cmp    DWORD PTR [rbp-0x4],0x0
  403983:	je     40398d <_start@@Base+0x89d>
  403985:	mov    eax,DWORD PTR [rbp-0x4]
  403988:	jmp    403a8c <_start@@Base+0x99c>
  40398d:	mov    rax,QWORD PTR [rbp-0x18]
  403991:	mov    ecx,0x8
  403996:	mov    edx,0x8
  40399b:	mov    esi,0x3
  4039a0:	mov    rdi,rax
  4039a3:	call   40b66a <flatcc_verify_field@@Base>
  4039a8:	mov    DWORD PTR [rbp-0x4],eax
  4039ab:	cmp    DWORD PTR [rbp-0x4],0x0
  4039af:	je     4039b9 <_start@@Base+0x8c9>
  4039b1:	mov    eax,DWORD PTR [rbp-0x4]
  4039b4:	jmp    403a8c <_start@@Base+0x99c>
  4039b9:	mov    rax,QWORD PTR [rbp-0x18]
  4039bd:	mov    edx,0x0
  4039c2:	mov    esi,0x4
  4039c7:	mov    rdi,rax
  4039ca:	call   40b6d5 <flatcc_verify_string_field@@Base>
  4039cf:	mov    DWORD PTR [rbp-0x4],eax
  4039d2:	cmp    DWORD PTR [rbp-0x4],0x0
  4039d6:	je     4039e0 <_start@@Base+0x8f0>
  4039d8:	mov    eax,DWORD PTR [rbp-0x4]
  4039db:	jmp    403a8c <_start@@Base+0x99c>
  4039e0:	mov    rax,QWORD PTR [rbp-0x18]
  4039e4:	mov    ecx,0x8
  4039e9:	mov    edx,0x8
  4039ee:	mov    esi,0x5
  4039f3:	mov    rdi,rax
  4039f6:	call   40b66a <flatcc_verify_field@@Base>
  4039fb:	mov    DWORD PTR [rbp-0x4],eax
  4039fe:	cmp    DWORD PTR [rbp-0x4],0x0
  403a02:	je     403a0c <_start@@Base+0x91c>
  403a04:	mov    eax,DWORD PTR [rbp-0x4]
  403a07:	jmp    403a8c <_start@@Base+0x99c>
  403a0c:	mov    rax,QWORD PTR [rbp-0x18]
  403a10:	mov    ecx,0x4
  403a15:	mov    edx,0x4
  403a1a:	mov    esi,0x6
  403a1f:	mov    rdi,rax
  403a22:	call   40b66a <flatcc_verify_field@@Base>
  403a27:	mov    DWORD PTR [rbp-0x4],eax
  403a2a:	cmp    DWORD PTR [rbp-0x4],0x0
  403a2e:	je     403a35 <_start@@Base+0x945>
  403a30:	mov    eax,DWORD PTR [rbp-0x4]
  403a33:	jmp    403a8c <_start@@Base+0x99c>
  403a35:	mov    rax,QWORD PTR [rbp-0x18]
  403a39:	mov    ecx,0x8
  403a3e:	mov    edx,0x8
  403a43:	mov    esi,0x7
  403a48:	mov    rdi,rax
  403a4b:	call   40b66a <flatcc_verify_field@@Base>
  403a50:	mov    DWORD PTR [rbp-0x4],eax
  403a53:	cmp    DWORD PTR [rbp-0x4],0x0
  403a57:	je     403a5e <_start@@Base+0x96e>
  403a59:	mov    eax,DWORD PTR [rbp-0x4]
  403a5c:	jmp    403a8c <_start@@Base+0x99c>
  403a5e:	mov    rax,QWORD PTR [rbp-0x18]
  403a62:	mov    ecx,0x4
  403a67:	mov    edx,0x4
  403a6c:	mov    esi,0x8
  403a71:	mov    rdi,rax
  403a74:	call   40b66a <flatcc_verify_field@@Base>
  403a79:	mov    DWORD PTR [rbp-0x4],eax
  403a7c:	cmp    DWORD PTR [rbp-0x4],0x0
  403a80:	je     403a87 <_start@@Base+0x997>
  403a82:	mov    eax,DWORD PTR [rbp-0x4]
  403a85:	jmp    403a8c <_start@@Base+0x99c>
  403a87:	mov    eax,0x0
  403a8c:	leave  
  403a8d:	ret    
  403a8e:	push   rbp
  403a8f:	mov    rbp,rsp
  403a92:	sub    rsp,0x20
  403a96:	mov    QWORD PTR [rbp-0x18],rdi
  403a9a:	mov    rax,QWORD PTR [rbp-0x18]
  403a9e:	mov    ecx,0x8
  403aa3:	mov    edx,0x8
  403aa8:	mov    esi,0x0
  403aad:	mov    rdi,rax
  403ab0:	call   40b66a <flatcc_verify_field@@Base>
  403ab5:	mov    DWORD PTR [rbp-0x4],eax
  403ab8:	cmp    DWORD PTR [rbp-0x4],0x0
  403abc:	je     403ac3 <_start@@Base+0x9d3>
  403abe:	mov    eax,DWORD PTR [rbp-0x4]
  403ac1:	jmp    403af1 <_start@@Base+0xa01>
  403ac3:	mov    rax,QWORD PTR [rbp-0x18]
  403ac7:	mov    ecx,0x4
  403acc:	mov    edx,0x4
  403ad1:	mov    esi,0x1
  403ad6:	mov    rdi,rax
  403ad9:	call   40b66a <flatcc_verify_field@@Base>
  403ade:	mov    DWORD PTR [rbp-0x4],eax
  403ae1:	cmp    DWORD PTR [rbp-0x4],0x0
  403ae5:	je     403aec <_start@@Base+0x9fc>
  403ae7:	mov    eax,DWORD PTR [rbp-0x4]
  403aea:	jmp    403af1 <_start@@Base+0xa01>
  403aec:	mov    eax,0x0
  403af1:	leave  
  403af2:	ret    
  403af3:	push   rbp
  403af4:	mov    rbp,rsp
  403af7:	sub    rsp,0x20
  403afb:	mov    QWORD PTR [rbp-0x18],rdi
  403aff:	mov    rax,QWORD PTR [rbp-0x18]
  403b03:	mov    ecx,0x8
  403b08:	mov    edx,0x8
  403b0d:	mov    esi,0x0
  403b12:	mov    rdi,rax
  403b15:	call   40b66a <flatcc_verify_field@@Base>
  403b1a:	mov    DWORD PTR [rbp-0x4],eax
  403b1d:	cmp    DWORD PTR [rbp-0x4],0x0
  403b21:	je     403b28 <_start@@Base+0xa38>
  403b23:	mov    eax,DWORD PTR [rbp-0x4]
  403b26:	jmp    403b56 <_start@@Base+0xa66>
  403b28:	mov    rax,QWORD PTR [rbp-0x18]
  403b2c:	mov    ecx,0x4
  403b31:	mov    edx,0x4
  403b36:	mov    esi,0x1
  403b3b:	mov    rdi,rax
  403b3e:	call   40b66a <flatcc_verify_field@@Base>
  403b43:	mov    DWORD PTR [rbp-0x4],eax
  403b46:	cmp    DWORD PTR [rbp-0x4],0x0
  403b4a:	je     403b51 <_start@@Base+0xa61>
  403b4c:	mov    eax,DWORD PTR [rbp-0x4]
  403b4f:	jmp    403b56 <_start@@Base+0xa66>
  403b51:	mov    eax,0x0
  403b56:	leave  
  403b57:	ret    
  403b58:	push   rbp
  403b59:	mov    rbp,rsp
  403b5c:	sub    rsp,0x20
  403b60:	mov    QWORD PTR [rbp-0x18],rdi
  403b64:	mov    rax,QWORD PTR [rbp-0x18]
  403b68:	mov    r9d,0xffffffff
  403b6e:	mov    r8d,0x1
  403b74:	mov    ecx,0x1
  403b79:	mov    edx,0x0
  403b7e:	mov    esi,0x0
  403b83:	mov    rdi,rax
  403b86:	call   40b76a <flatcc_verify_vector_field@@Base>
  403b8b:	mov    DWORD PTR [rbp-0x4],eax
  403b8e:	cmp    DWORD PTR [rbp-0x4],0x0
  403b92:	je     403b99 <_start@@Base+0xaa9>
  403b94:	mov    eax,DWORD PTR [rbp-0x4]
  403b97:	jmp    403c09 <_start@@Base+0xb19>
  403b99:	mov    rax,QWORD PTR [rbp-0x18]
  403b9d:	mov    r9d,0xffffffff
  403ba3:	mov    r8d,0x1
  403ba9:	mov    ecx,0x1
  403bae:	mov    edx,0x0
  403bb3:	mov    esi,0x1
  403bb8:	mov    rdi,rax
  403bbb:	call   40b76a <flatcc_verify_vector_field@@Base>
  403bc0:	mov    DWORD PTR [rbp-0x4],eax
  403bc3:	cmp    DWORD PTR [rbp-0x4],0x0
  403bc7:	je     403bce <_start@@Base+0xade>
  403bc9:	mov    eax,DWORD PTR [rbp-0x4]
  403bcc:	jmp    403c09 <_start@@Base+0xb19>
  403bce:	mov    rax,QWORD PTR [rbp-0x18]
  403bd2:	lea    r9,[rip+0x32]        # 403c0b <_start@@Base+0xb1b>
  403bd9:	mov    r8d,0x1
  403bdf:	mov    ecx,0x0
  403be4:	mov    edx,0x0
  403be9:	mov    esi,0x2
  403bee:	mov    rdi,rax
  403bf1:	call   40bf99 <flatcc_verify_table_as_nested_root@@Base>
  403bf6:	mov    DWORD PTR [rbp-0x4],eax
  403bf9:	cmp    DWORD PTR [rbp-0x4],0x0
  403bfd:	je     403c04 <_start@@Base+0xb14>
  403bff:	mov    eax,DWORD PTR [rbp-0x4]
  403c02:	jmp    403c09 <_start@@Base+0xb19>
  403c04:	mov    eax,0x0
  403c09:	leave  
  403c0a:	ret    
  403c0b:	push   rbp
  403c0c:	mov    rbp,rsp
  403c0f:	sub    rsp,0x20
  403c13:	mov    QWORD PTR [rbp-0x18],rdi
  403c17:	mov    rax,QWORD PTR [rbp-0x18]
  403c1b:	mov    ecx,0x10
  403c20:	mov    edx,0x20
  403c25:	mov    esi,0x0
  403c2a:	mov    rdi,rax
  403c2d:	call   40b66a <flatcc_verify_field@@Base>
  403c32:	mov    DWORD PTR [rbp-0x4],eax
  403c35:	cmp    DWORD PTR [rbp-0x4],0x0
  403c39:	je     403c43 <_start@@Base+0xb53>
  403c3b:	mov    eax,DWORD PTR [rbp-0x4]
  403c3e:	jmp    404255 <_start@@Base+0x1165>
  403c43:	mov    rax,QWORD PTR [rbp-0x18]
  403c47:	mov    ecx,0x2
  403c4c:	mov    edx,0x2
  403c51:	mov    esi,0x2
  403c56:	mov    rdi,rax
  403c59:	call   40b66a <flatcc_verify_field@@Base>
  403c5e:	mov    DWORD PTR [rbp-0x4],eax
  403c61:	cmp    DWORD PTR [rbp-0x4],0x0
  403c65:	je     403c6f <_start@@Base+0xb7f>
  403c67:	mov    eax,DWORD PTR [rbp-0x4]
  403c6a:	jmp    404255 <_start@@Base+0x1165>
  403c6f:	mov    rax,QWORD PTR [rbp-0x18]
  403c73:	mov    ecx,0x2
  403c78:	mov    edx,0x2
  403c7d:	mov    esi,0x1
  403c82:	mov    rdi,rax
  403c85:	call   40b66a <flatcc_verify_field@@Base>
  403c8a:	mov    DWORD PTR [rbp-0x4],eax
  403c8d:	cmp    DWORD PTR [rbp-0x4],0x0
  403c91:	je     403c9b <_start@@Base+0xbab>
  403c93:	mov    eax,DWORD PTR [rbp-0x4]
  403c96:	jmp    404255 <_start@@Base+0x1165>
  403c9b:	mov    rax,QWORD PTR [rbp-0x18]
  403c9f:	mov    edx,0x1
  403ca4:	mov    esi,0x3
  403ca9:	mov    rdi,rax
  403cac:	call   40b6d5 <flatcc_verify_string_field@@Base>
  403cb1:	mov    DWORD PTR [rbp-0x4],eax
  403cb4:	cmp    DWORD PTR [rbp-0x4],0x0
  403cb8:	je     403cc2 <_start@@Base+0xbd2>
  403cba:	mov    eax,DWORD PTR [rbp-0x4]
  403cbd:	jmp    404255 <_start@@Base+0x1165>
  403cc2:	mov    rax,QWORD PTR [rbp-0x18]
  403cc6:	mov    ecx,0x1
  403ccb:	mov    edx,0x1
  403cd0:	mov    esi,0x6
  403cd5:	mov    rdi,rax
  403cd8:	call   40b66a <flatcc_verify_field@@Base>
  403cdd:	mov    DWORD PTR [rbp-0x4],eax
  403ce0:	cmp    DWORD PTR [rbp-0x4],0x0
  403ce4:	je     403cee <_start@@Base+0xbfe>
  403ce6:	mov    eax,DWORD PTR [rbp-0x4]
  403ce9:	jmp    404255 <_start@@Base+0x1165>
  403cee:	mov    rax,QWORD PTR [rbp-0x18]
  403cf2:	mov    r9d,0xffffffff
  403cf8:	mov    r8d,0x1
  403cfe:	mov    ecx,0x1
  403d03:	mov    edx,0x0
  403d08:	mov    esi,0x5
  403d0d:	mov    rdi,rax
  403d10:	call   40b76a <flatcc_verify_vector_field@@Base>
  403d15:	mov    DWORD PTR [rbp-0x4],eax
  403d18:	cmp    DWORD PTR [rbp-0x4],0x0
  403d1c:	je     403d26 <_start@@Base+0xc36>
  403d1e:	mov    eax,DWORD PTR [rbp-0x4]
  403d21:	jmp    404255 <_start@@Base+0x1165>
  403d26:	mov    rax,QWORD PTR [rbp-0x18]
  403d2a:	lea    rcx,[rip+0xfffffffffffffeda]        # 403c0b <_start@@Base+0xb1b>
  403d31:	mov    edx,0x0
  403d36:	mov    esi,0xb
  403d3b:	mov    rdi,rax
  403d3e:	call   40b981 <flatcc_verify_table_vector_field@@Base>
  403d43:	mov    DWORD PTR [rbp-0x4],eax
  403d46:	cmp    DWORD PTR [rbp-0x4],0x0
  403d4a:	je     403d54 <_start@@Base+0xc64>
  403d4c:	mov    eax,DWORD PTR [rbp-0x4]
  403d4f:	jmp    404255 <_start@@Base+0x1165>
  403d54:	mov    rax,QWORD PTR [rbp-0x18]
  403d58:	mov    edx,0x0
  403d5d:	mov    esi,0xa
  403d62:	mov    rdi,rax
  403d65:	call   40b83a <flatcc_verify_string_vector_field@@Base>
  403d6a:	mov    DWORD PTR [rbp-0x4],eax
  403d6d:	cmp    DWORD PTR [rbp-0x4],0x0
  403d71:	je     403d7b <_start@@Base+0xc8b>
  403d73:	mov    eax,DWORD PTR [rbp-0x4]
  403d76:	jmp    404255 <_start@@Base+0x1165>
  403d7b:	mov    rax,QWORD PTR [rbp-0x18]
  403d7f:	mov    edx,0x0
  403d84:	mov    esi,0x1c
  403d89:	mov    rdi,rax
  403d8c:	call   40b83a <flatcc_verify_string_vector_field@@Base>
  403d91:	mov    DWORD PTR [rbp-0x4],eax
  403d94:	cmp    DWORD PTR [rbp-0x4],0x0
  403d98:	je     403da2 <_start@@Base+0xcb2>
  403d9a:	mov    eax,DWORD PTR [rbp-0x4]
  403d9d:	jmp    404255 <_start@@Base+0x1165>
  403da2:	mov    rax,QWORD PTR [rbp-0x18]
  403da6:	mov    r9d,0xffffffff
  403dac:	mov    r8d,0x1
  403db2:	mov    ecx,0x1
  403db7:	mov    edx,0x0
  403dbc:	mov    esi,0x18
  403dc1:	mov    rdi,rax
  403dc4:	call   40b76a <flatcc_verify_vector_field@@Base>
  403dc9:	mov    DWORD PTR [rbp-0x4],eax
  403dcc:	cmp    DWORD PTR [rbp-0x4],0x0
  403dd0:	je     403dda <_start@@Base+0xcea>
  403dd2:	mov    eax,DWORD PTR [rbp-0x4]
  403dd5:	jmp    404255 <_start@@Base+0x1165>
  403dda:	mov    rax,QWORD PTR [rbp-0x18]
  403dde:	mov    r9d,0x1fffffff
  403de4:	mov    r8d,0x4
  403dea:	mov    ecx,0x8
  403def:	mov    edx,0x0
  403df4:	mov    esi,0x1d
  403df9:	mov    rdi,rax
  403dfc:	call   40b76a <flatcc_verify_vector_field@@Base>
  403e01:	mov    DWORD PTR [rbp-0x4],eax
  403e04:	cmp    DWORD PTR [rbp-0x4],0x0
  403e08:	je     403e12 <_start@@Base+0xd22>
  403e0a:	mov    eax,DWORD PTR [rbp-0x4]
  403e0d:	jmp    404255 <_start@@Base+0x1165>
  403e12:	mov    rax,QWORD PTR [rbp-0x18]
  403e16:	lea    rcx,[rip+0xfffffffffffffdee]        # 403c0b <_start@@Base+0xb1b>
  403e1d:	mov    edx,0x0
  403e22:	mov    esi,0xc
  403e27:	mov    rdi,rax
  403e2a:	call   40b8cf <flatcc_verify_table_field@@Base>
  403e2f:	mov    DWORD PTR [rbp-0x4],eax
  403e32:	cmp    DWORD PTR [rbp-0x4],0x0
  403e36:	je     403e40 <_start@@Base+0xd50>
  403e38:	mov    eax,DWORD PTR [rbp-0x4]
  403e3b:	jmp    404255 <_start@@Base+0x1165>
  403e40:	mov    rax,QWORD PTR [rbp-0x18]
  403e44:	lea    rcx,[rip+0xfffffffffffff584]        # 4033cf <_start@@Base+0x2df>
  403e4b:	mov    edx,0x0
  403e50:	mov    esi,0x8
  403e55:	mov    rdi,rax
  403e58:	call   40c0dc <flatcc_verify_union_field@@Base>
  403e5d:	mov    DWORD PTR [rbp-0x4],eax
  403e60:	cmp    DWORD PTR [rbp-0x4],0x0
  403e64:	je     403e6e <_start@@Base+0xd7e>
  403e66:	mov    eax,DWORD PTR [rbp-0x4]
  403e69:	jmp    404255 <_start@@Base+0x1165>
  403e6e:	mov    rax,QWORD PTR [rbp-0x18]
  403e72:	mov    r9d,0x3fffffff
  403e78:	mov    r8d,0x2
  403e7e:	mov    ecx,0x4
  403e83:	mov    edx,0x0
  403e88:	mov    esi,0x9
  403e8d:	mov    rdi,rax
  403e90:	call   40b76a <flatcc_verify_vector_field@@Base>
  403e95:	mov    DWORD PTR [rbp-0x4],eax
  403e98:	cmp    DWORD PTR [rbp-0x4],0x0
  403e9c:	je     403ea6 <_start@@Base+0xdb6>
  403e9e:	mov    eax,DWORD PTR [rbp-0x4]
  403ea1:	jmp    404255 <_start@@Base+0x1165>
  403ea6:	mov    rax,QWORD PTR [rbp-0x18]
  403eaa:	mov    r9d,0x3fffffff
  403eb0:	mov    r8d,0x2
  403eb6:	mov    ecx,0x4
  403ebb:	mov    edx,0x0
  403ec0:	mov    esi,0x1f
  403ec5:	mov    rdi,rax
  403ec8:	call   40b76a <flatcc_verify_vector_field@@Base>
  403ecd:	mov    DWORD PTR [rbp-0x4],eax
  403ed0:	cmp    DWORD PTR [rbp-0x4],0x0
  403ed4:	je     403ede <_start@@Base+0xdee>
  403ed6:	mov    eax,DWORD PTR [rbp-0x4]
  403ed9:	jmp    404255 <_start@@Base+0x1165>
  403ede:	mov    rax,QWORD PTR [rbp-0x18]
  403ee2:	lea    r9,[rip+0xfffffffffffffd22]        # 403c0b <_start@@Base+0xb1b>
  403ee9:	mov    r8d,0x1
  403eef:	mov    ecx,0x0
  403ef4:	mov    edx,0x0
  403ef9:	mov    esi,0xd
  403efe:	mov    rdi,rax
  403f01:	call   40bf99 <flatcc_verify_table_as_nested_root@@Base>
  403f06:	mov    DWORD PTR [rbp-0x4],eax
  403f09:	cmp    DWORD PTR [rbp-0x4],0x0
  403f0d:	je     403f17 <_start@@Base+0xe27>
  403f0f:	mov    eax,DWORD PTR [rbp-0x4]
  403f12:	jmp    404255 <_start@@Base+0x1165>
  403f17:	mov    rax,QWORD PTR [rbp-0x18]
  403f1b:	lea    rcx,[rip+0xfffffffffffff834]        # 403756 <_start@@Base+0x666>
  403f22:	mov    edx,0x0
  403f27:	mov    esi,0xe
  403f2c:	mov    rdi,rax
  403f2f:	call   40b8cf <flatcc_verify_table_field@@Base>
  403f34:	mov    DWORD PTR [rbp-0x4],eax
  403f37:	cmp    DWORD PTR [rbp-0x4],0x0
  403f3b:	je     403f45 <_start@@Base+0xe55>
  403f3d:	mov    eax,DWORD PTR [rbp-0x4]
  403f40:	jmp    404255 <_start@@Base+0x1165>
  403f45:	mov    rax,QWORD PTR [rbp-0x18]
  403f49:	mov    ecx,0x1
  403f4e:	mov    edx,0x1
  403f53:	mov    esi,0xf
  403f58:	mov    rdi,rax
  403f5b:	call   40b66a <flatcc_verify_field@@Base>
  403f60:	mov    DWORD PTR [rbp-0x4],eax
  403f63:	cmp    DWORD PTR [rbp-0x4],0x0
  403f67:	je     403f71 <_start@@Base+0xe81>
  403f69:	mov    eax,DWORD PTR [rbp-0x4]
  403f6c:	jmp    404255 <_start@@Base+0x1165>
  403f71:	mov    rax,QWORD PTR [rbp-0x18]
  403f75:	mov    ecx,0x4
  403f7a:	mov    edx,0x4
  403f7f:	mov    esi,0x10
  403f84:	mov    rdi,rax
  403f87:	call   40b66a <flatcc_verify_field@@Base>
  403f8c:	mov    DWORD PTR [rbp-0x4],eax
  403f8f:	cmp    DWORD PTR [rbp-0x4],0x0
  403f93:	je     403f9d <_start@@Base+0xead>
  403f95:	mov    eax,DWORD PTR [rbp-0x4]
  403f98:	jmp    404255 <_start@@Base+0x1165>
  403f9d:	mov    rax,QWORD PTR [rbp-0x18]
  403fa1:	mov    ecx,0x4
  403fa6:	mov    edx,0x4
  403fab:	mov    esi,0x11
  403fb0:	mov    rdi,rax
  403fb3:	call   40b66a <flatcc_verify_field@@Base>
  403fb8:	mov    DWORD PTR [rbp-0x4],eax
  403fbb:	cmp    DWORD PTR [rbp-0x4],0x0
  403fbf:	je     403fc9 <_start@@Base+0xed9>
  403fc1:	mov    eax,DWORD PTR [rbp-0x4]
  403fc4:	jmp    404255 <_start@@Base+0x1165>
  403fc9:	mov    rax,QWORD PTR [rbp-0x18]
  403fcd:	mov    ecx,0x8
  403fd2:	mov    edx,0x8
  403fd7:	mov    esi,0x12
  403fdc:	mov    rdi,rax
  403fdf:	call   40b66a <flatcc_verify_field@@Base>
  403fe4:	mov    DWORD PTR [rbp-0x4],eax
  403fe7:	cmp    DWORD PTR [rbp-0x4],0x0
  403feb:	je     403ff5 <_start@@Base+0xf05>
  403fed:	mov    eax,DWORD PTR [rbp-0x4]
  403ff0:	jmp    404255 <_start@@Base+0x1165>
  403ff5:	mov    rax,QWORD PTR [rbp-0x18]
  403ff9:	mov    ecx,0x8
  403ffe:	mov    edx,0x8
  404003:	mov    esi,0x13
  404008:	mov    rdi,rax
  40400b:	call   40b66a <flatcc_verify_field@@Base>
  404010:	mov    DWORD PTR [rbp-0x4],eax
  404013:	cmp    DWORD PTR [rbp-0x4],0x0
  404017:	je     404021 <_start@@Base+0xf31>
  404019:	mov    eax,DWORD PTR [rbp-0x4]
  40401c:	jmp    404255 <_start@@Base+0x1165>
  404021:	mov    rax,QWORD PTR [rbp-0x18]
  404025:	mov    ecx,0x4
  40402a:	mov    edx,0x4
  40402f:	mov    esi,0x14
  404034:	mov    rdi,rax
  404037:	call   40b66a <flatcc_verify_field@@Base>
  40403c:	mov    DWORD PTR [rbp-0x4],eax
  40403f:	cmp    DWORD PTR [rbp-0x4],0x0
  404043:	je     40404d <_start@@Base+0xf5d>
  404045:	mov    eax,DWORD PTR [rbp-0x4]
  404048:	jmp    404255 <_start@@Base+0x1165>
  40404d:	mov    rax,QWORD PTR [rbp-0x18]
  404051:	mov    ecx,0x4
  404056:	mov    edx,0x4
  40405b:	mov    esi,0x15
  404060:	mov    rdi,rax
  404063:	call   40b66a <flatcc_verify_field@@Base>
  404068:	mov    DWORD PTR [rbp-0x4],eax
  40406b:	cmp    DWORD PTR [rbp-0x4],0x0
  40406f:	je     404079 <_start@@Base+0xf89>
  404071:	mov    eax,DWORD PTR [rbp-0x4]
  404074:	jmp    404255 <_start@@Base+0x1165>
  404079:	mov    rax,QWORD PTR [rbp-0x18]
  40407d:	mov    ecx,0x8
  404082:	mov    edx,0x8
  404087:	mov    esi,0x16
  40408c:	mov    rdi,rax
  40408f:	call   40b66a <flatcc_verify_field@@Base>
  404094:	mov    DWORD PTR [rbp-0x4],eax
  404097:	cmp    DWORD PTR [rbp-0x4],0x0
  40409b:	je     4040a5 <_start@@Base+0xfb5>
  40409d:	mov    eax,DWORD PTR [rbp-0x4]
  4040a0:	jmp    404255 <_start@@Base+0x1165>
  4040a5:	mov    rax,QWORD PTR [rbp-0x18]
  4040a9:	mov    ecx,0x8
  4040ae:	mov    edx,0x8
  4040b3:	mov    esi,0x17
  4040b8:	mov    rdi,rax
  4040bb:	call   40b66a <flatcc_verify_field@@Base>
  4040c0:	mov    DWORD PTR [rbp-0x4],eax
  4040c3:	cmp    DWORD PTR [rbp-0x4],0x0
  4040c7:	je     4040d1 <_start@@Base+0xfe1>
  4040c9:	mov    eax,DWORD PTR [rbp-0x4]
  4040cc:	jmp    404255 <_start@@Base+0x1165>
  4040d1:	mov    rax,QWORD PTR [rbp-0x18]
  4040d5:	mov    ecx,0x4
  4040da:	mov    edx,0x4
  4040df:	mov    esi,0x19
  4040e4:	mov    rdi,rax
  4040e7:	call   40b66a <flatcc_verify_field@@Base>
  4040ec:	mov    DWORD PTR [rbp-0x4],eax
  4040ef:	cmp    DWORD PTR [rbp-0x4],0x0
  4040f3:	je     4040fd <_start@@Base+0x100d>
  4040f5:	mov    eax,DWORD PTR [rbp-0x4]
  4040f8:	jmp    404255 <_start@@Base+0x1165>
  4040fd:	mov    rax,QWORD PTR [rbp-0x18]
  404101:	mov    ecx,0x4
  404106:	mov    edx,0x4
  40410b:	mov    esi,0x1a
  404110:	mov    rdi,rax
  404113:	call   40b66a <flatcc_verify_field@@Base>
  404118:	mov    DWORD PTR [rbp-0x4],eax
  40411b:	cmp    DWORD PTR [rbp-0x4],0x0
  40411f:	je     404129 <_start@@Base+0x1039>
  404121:	mov    eax,DWORD PTR [rbp-0x4]
  404124:	jmp    404255 <_start@@Base+0x1165>
  404129:	mov    rax,QWORD PTR [rbp-0x18]
  40412d:	mov    ecx,0x4
  404132:	mov    edx,0x4
  404137:	mov    esi,0x1b
  40413c:	mov    rdi,rax
  40413f:	call   40b66a <flatcc_verify_field@@Base>
  404144:	mov    DWORD PTR [rbp-0x4],eax
  404147:	cmp    DWORD PTR [rbp-0x4],0x0
  40414b:	je     404155 <_start@@Base+0x1065>
  40414d:	mov    eax,DWORD PTR [rbp-0x4]
  404150:	jmp    404255 <_start@@Base+0x1165>
  404155:	mov    rax,QWORD PTR [rbp-0x18]
  404159:	mov    r9d,0xffffffff
  40415f:	mov    r8d,0x1
  404165:	mov    ecx,0x1
  40416a:	mov    edx,0x0
  40416f:	mov    esi,0x1e
  404174:	mov    rdi,rax
  404177:	call   40b76a <flatcc_verify_vector_field@@Base>
  40417c:	mov    DWORD PTR [rbp-0x4],eax
  40417f:	cmp    DWORD PTR [rbp-0x4],0x0
  404183:	je     40418d <_start@@Base+0x109d>
  404185:	mov    eax,DWORD PTR [rbp-0x4]
  404188:	jmp    404255 <_start@@Base+0x1165>
  40418d:	mov    rax,QWORD PTR [rbp-0x18]
  404191:	mov    r9d,0x1fffffff
  404197:	mov    r8d,0x8
  40419d:	mov    ecx,0x8
  4041a2:	mov    edx,0x0
  4041a7:	mov    esi,0x20
  4041ac:	mov    rdi,rax
  4041af:	call   40b76a <flatcc_verify_vector_field@@Base>
  4041b4:	mov    DWORD PTR [rbp-0x4],eax
  4041b7:	cmp    DWORD PTR [rbp-0x4],0x0
  4041bb:	je     4041c5 <_start@@Base+0x10d5>
  4041bd:	mov    eax,DWORD PTR [rbp-0x4]
  4041c0:	jmp    404255 <_start@@Base+0x1165>
  4041c5:	mov    rax,QWORD PTR [rbp-0x18]
  4041c9:	mov    r9d,0x1fffffff
  4041cf:	mov    r8d,0x8
  4041d5:	mov    ecx,0x8
  4041da:	mov    edx,0x0
  4041df:	mov    esi,0x21
  4041e4:	mov    rdi,rax
  4041e7:	call   40b76a <flatcc_verify_vector_field@@Base>
  4041ec:	mov    DWORD PTR [rbp-0x4],eax
  4041ef:	cmp    DWORD PTR [rbp-0x4],0x0
  4041f3:	je     4041fa <_start@@Base+0x110a>
  4041f5:	mov    eax,DWORD PTR [rbp-0x4]
  4041f8:	jmp    404255 <_start@@Base+0x1165>
  4041fa:	mov    rax,QWORD PTR [rbp-0x18]
  4041fe:	lea    rcx,[rip+0xfffffffffffff31c]        # 403521 <_start@@Base+0x431>
  404205:	mov    edx,0x0
  40420a:	mov    esi,0x22
  40420f:	mov    rdi,rax
  404212:	call   40b8cf <flatcc_verify_table_field@@Base>
  404217:	mov    DWORD PTR [rbp-0x4],eax
  40421a:	cmp    DWORD PTR [rbp-0x4],0x0
  40421e:	je     404225 <_start@@Base+0x1135>
  404220:	mov    eax,DWORD PTR [rbp-0x4]
  404223:	jmp    404255 <_start@@Base+0x1165>
  404225:	mov    rax,QWORD PTR [rbp-0x18]
  404229:	lea    rcx,[rip+0xfffffffffffff928]        # 403b58 <_start@@Base+0xa68>
  404230:	mov    edx,0x0
  404235:	mov    esi,0x23
  40423a:	mov    rdi,rax
  40423d:	call   40b8cf <flatcc_verify_table_field@@Base>
  404242:	mov    DWORD PTR [rbp-0x4],eax
  404245:	cmp    DWORD PTR [rbp-0x4],0x0
  404249:	je     404250 <_start@@Base+0x1160>
  40424b:	mov    eax,DWORD PTR [rbp-0x4]
  40424e:	jmp    404255 <_start@@Base+0x1165>
  404250:	mov    eax,0x0
  404255:	leave  
  404256:	ret    
  404257:	push   rbp
  404258:	mov    rbp,rsp
  40425b:	sub    rsp,0x20
  40425f:	mov    QWORD PTR [rbp-0x8],rdi
  404263:	mov    QWORD PTR [rbp-0x10],rsi
  404267:	mov    QWORD PTR [rbp-0x18],rdx
  40426b:	mov    rdx,QWORD PTR [rbp-0x18]
  40426f:	mov    rsi,QWORD PTR [rbp-0x10]
  404273:	mov    rax,QWORD PTR [rbp-0x8]
  404277:	lea    rcx,[rip+0xfffffffffffff98d]        # 403c0b <_start@@Base+0xb1b>
  40427e:	mov    rdi,rax
  404281:	call   40bd9f <flatcc_verify_table_as_root@@Base>
  404286:	leave  
  404287:	ret    
  404288:	push   rbp
  404289:	mov    rbp,rsp
  40428c:	sub    rsp,0x20
  404290:	mov    QWORD PTR [rbp-0x18],rdi
  404294:	mov    rax,QWORD PTR [rbp-0x18]
  404298:	mov    ecx,0x1
  40429d:	mov    edx,0x1
  4042a2:	mov    esi,0x0
  4042a7:	mov    rdi,rax
  4042aa:	call   40b66a <flatcc_verify_field@@Base>
  4042af:	mov    DWORD PTR [rbp-0x4],eax
  4042b2:	cmp    DWORD PTR [rbp-0x4],0x0
  4042b6:	je     4042c0 <_start@@Base+0x11d0>
  4042b8:	mov    eax,DWORD PTR [rbp-0x4]
  4042bb:	jmp    4044b8 <_start@@Base+0x13c8>
  4042c0:	mov    rax,QWORD PTR [rbp-0x18]
  4042c4:	mov    ecx,0x1
  4042c9:	mov    edx,0x1
  4042ce:	mov    esi,0x1
  4042d3:	mov    rdi,rax
  4042d6:	call   40b66a <flatcc_verify_field@@Base>
  4042db:	mov    DWORD PTR [rbp-0x4],eax
  4042de:	cmp    DWORD PTR [rbp-0x4],0x0
  4042e2:	je     4042ec <_start@@Base+0x11fc>
  4042e4:	mov    eax,DWORD PTR [rbp-0x4]
  4042e7:	jmp    4044b8 <_start@@Base+0x13c8>
  4042ec:	mov    rax,QWORD PTR [rbp-0x18]
  4042f0:	mov    ecx,0x2
  4042f5:	mov    edx,0x2
  4042fa:	mov    esi,0x2
  4042ff:	mov    rdi,rax
  404302:	call   40b66a <flatcc_verify_field@@Base>
  404307:	mov    DWORD PTR [rbp-0x4],eax
  40430a:	cmp    DWORD PTR [rbp-0x4],0x0
  40430e:	je     404318 <_start@@Base+0x1228>
  404310:	mov    eax,DWORD PTR [rbp-0x4]
  404313:	jmp    4044b8 <_start@@Base+0x13c8>
  404318:	mov    rax,QWORD PTR [rbp-0x18]
  40431c:	mov    ecx,0x2
  404321:	mov    edx,0x2
  404326:	mov    esi,0x3
  40432b:	mov    rdi,rax
  40432e:	call   40b66a <flatcc_verify_field@@Base>
  404333:	mov    DWORD PTR [rbp-0x4],eax
  404336:	cmp    DWORD PTR [rbp-0x4],0x0
  40433a:	je     404344 <_start@@Base+0x1254>
  40433c:	mov    eax,DWORD PTR [rbp-0x4]
  40433f:	jmp    4044b8 <_start@@Base+0x13c8>
  404344:	mov    rax,QWORD PTR [rbp-0x18]
  404348:	mov    ecx,0x4
  40434d:	mov    edx,0x4
  404352:	mov    esi,0x4
  404357:	mov    rdi,rax
  40435a:	call   40b66a <flatcc_verify_field@@Base>
  40435f:	mov    DWORD PTR [rbp-0x4],eax
  404362:	cmp    DWORD PTR [rbp-0x4],0x0
  404366:	je     404370 <_start@@Base+0x1280>
  404368:	mov    eax,DWORD PTR [rbp-0x4]
  40436b:	jmp    4044b8 <_start@@Base+0x13c8>
  404370:	mov    rax,QWORD PTR [rbp-0x18]
  404374:	mov    ecx,0x4
  404379:	mov    edx,0x4
  40437e:	mov    esi,0x5
  404383:	mov    rdi,rax
  404386:	call   40b66a <flatcc_verify_field@@Base>
  40438b:	mov    DWORD PTR [rbp-0x4],eax
  40438e:	cmp    DWORD PTR [rbp-0x4],0x0
  404392:	je     40439c <_start@@Base+0x12ac>
  404394:	mov    eax,DWORD PTR [rbp-0x4]
  404397:	jmp    4044b8 <_start@@Base+0x13c8>
  40439c:	mov    rax,QWORD PTR [rbp-0x18]
  4043a0:	mov    ecx,0x8
  4043a5:	mov    edx,0x8
  4043aa:	mov    esi,0x6
  4043af:	mov    rdi,rax
  4043b2:	call   40b66a <flatcc_verify_field@@Base>
  4043b7:	mov    DWORD PTR [rbp-0x4],eax
  4043ba:	cmp    DWORD PTR [rbp-0x4],0x0
  4043be:	je     4043c8 <_start@@Base+0x12d8>
  4043c0:	mov    eax,DWORD PTR [rbp-0x4]
  4043c3:	jmp    4044b8 <_start@@Base+0x13c8>
  4043c8:	mov    rax,QWORD PTR [rbp-0x18]
  4043cc:	mov    ecx,0x8
  4043d1:	mov    edx,0x8
  4043d6:	mov    esi,0x7
  4043db:	mov    rdi,rax
  4043de:	call   40b66a <flatcc_verify_field@@Base>
  4043e3:	mov    DWORD PTR [rbp-0x4],eax
  4043e6:	cmp    DWORD PTR [rbp-0x4],0x0
  4043ea:	je     4043f4 <_start@@Base+0x1304>
  4043ec:	mov    eax,DWORD PTR [rbp-0x4]
  4043ef:	jmp    4044b8 <_start@@Base+0x13c8>
  4043f4:	mov    rax,QWORD PTR [rbp-0x18]
  4043f8:	mov    ecx,0x4
  4043fd:	mov    edx,0x4
  404402:	mov    esi,0x8
  404407:	mov    rdi,rax
  40440a:	call   40b66a <flatcc_verify_field@@Base>
  40440f:	mov    DWORD PTR [rbp-0x4],eax
  404412:	cmp    DWORD PTR [rbp-0x4],0x0
  404416:	je     404420 <_start@@Base+0x1330>
  404418:	mov    eax,DWORD PTR [rbp-0x4]
  40441b:	jmp    4044b8 <_start@@Base+0x13c8>
  404420:	mov    rax,QWORD PTR [rbp-0x18]
  404424:	mov    ecx,0x8
  404429:	mov    edx,0x8
  40442e:	mov    esi,0x9
  404433:	mov    rdi,rax
  404436:	call   40b66a <flatcc_verify_field@@Base>
  40443b:	mov    DWORD PTR [rbp-0x4],eax
  40443e:	cmp    DWORD PTR [rbp-0x4],0x0
  404442:	je     404449 <_start@@Base+0x1359>
  404444:	mov    eax,DWORD PTR [rbp-0x4]
  404447:	jmp    4044b8 <_start@@Base+0x13c8>
  404449:	mov    rax,QWORD PTR [rbp-0x18]
  40444d:	mov    r9d,0xffffffff
  404453:	mov    r8d,0x1
  404459:	mov    ecx,0x1
  40445e:	mov    edx,0x0
  404463:	mov    esi,0xa
  404468:	mov    rdi,rax
  40446b:	call   40b76a <flatcc_verify_vector_field@@Base>
  404470:	mov    DWORD PTR [rbp-0x4],eax
  404473:	cmp    DWORD PTR [rbp-0x4],0x0
  404477:	je     40447e <_start@@Base+0x138e>
  404479:	mov    eax,DWORD PTR [rbp-0x4]
  40447c:	jmp    4044b8 <_start@@Base+0x13c8>
  40447e:	mov    rax,QWORD PTR [rbp-0x18]
  404482:	mov    r9d,0x1fffffff
  404488:	mov    r8d,0x8
  40448e:	mov    ecx,0x8
  404493:	mov    edx,0x0
  404498:	mov    esi,0xb
  40449d:	mov    rdi,rax
  4044a0:	call   40b76a <flatcc_verify_vector_field@@Base>
  4044a5:	mov    DWORD PTR [rbp-0x4],eax
  4044a8:	cmp    DWORD PTR [rbp-0x4],0x0
  4044ac:	je     4044b3 <_start@@Base+0x13c3>
  4044ae:	mov    eax,DWORD PTR [rbp-0x4]
  4044b1:	jmp    4044b8 <_start@@Base+0x13c8>
  4044b3:	mov    eax,0x0
  4044b8:	leave  
  4044b9:	ret    
  4044ba:	push   rbp
  4044bb:	mov    rbp,rsp
  4044be:	sub    rsp,0x20
  4044c2:	mov    QWORD PTR [rbp-0x18],rdi
  4044c6:	mov    rax,QWORD PTR [rbp-0x18]
  4044ca:	mov    ecx,0x4
  4044cf:	mov    edx,0x4
  4044d4:	mov    esi,0x0
  4044d9:	mov    rdi,rax
  4044dc:	call   40b66a <flatcc_verify_field@@Base>
  4044e1:	mov    DWORD PTR [rbp-0x4],eax
  4044e4:	cmp    DWORD PTR [rbp-0x4],0x0
  4044e8:	je     4044ef <_start@@Base+0x13ff>
  4044ea:	mov    eax,DWORD PTR [rbp-0x4]
  4044ed:	jmp    4044f4 <_start@@Base+0x1404>
  4044ef:	mov    eax,0x0
  4044f4:	leave  
  4044f5:	ret    
  4044f6:	push   rbp
  4044f7:	mov    rbp,rsp
  4044fa:	sub    rsp,0x20
  4044fe:	mov    QWORD PTR [rbp-0x18],rdi
  404502:	mov    rax,QWORD PTR [rbp-0x18]
  404506:	lea    rcx,[rip+0xffffffffffffef51]        # 40345e <_start@@Base+0x36e>
  40450d:	mov    edx,0x0
  404512:	mov    esi,0x1
  404517:	mov    rdi,rax
  40451a:	call   40c0dc <flatcc_verify_union_field@@Base>
  40451f:	mov    DWORD PTR [rbp-0x4],eax
  404522:	cmp    DWORD PTR [rbp-0x4],0x0
  404526:	je     404530 <_start@@Base+0x1440>
  404528:	mov    eax,DWORD PTR [rbp-0x4]
  40452b:	jmp    4045e4 <_start@@Base+0x14f4>
  404530:	mov    rax,QWORD PTR [rbp-0x18]
  404534:	lea    rcx,[rip+0xffffffffffffef23]        # 40345e <_start@@Base+0x36e>
  40453b:	mov    edx,0x0
  404540:	mov    esi,0x3
  404545:	mov    rdi,rax
  404548:	call   40c0dc <flatcc_verify_union_field@@Base>
  40454d:	mov    DWORD PTR [rbp-0x4],eax
  404550:	cmp    DWORD PTR [rbp-0x4],0x0
  404554:	je     40455e <_start@@Base+0x146e>
  404556:	mov    eax,DWORD PTR [rbp-0x4]
  404559:	jmp    4045e4 <_start@@Base+0x14f4>
  40455e:	mov    rax,QWORD PTR [rbp-0x18]
  404562:	lea    rcx,[rip+0xffffffffffffeef5]        # 40345e <_start@@Base+0x36e>
  404569:	mov    edx,0x0
  40456e:	mov    esi,0x5
  404573:	mov    rdi,rax
  404576:	call   40c0dc <flatcc_verify_union_field@@Base>
  40457b:	mov    DWORD PTR [rbp-0x4],eax
  40457e:	cmp    DWORD PTR [rbp-0x4],0x0
  404582:	je     404589 <_start@@Base+0x1499>
  404584:	mov    eax,DWORD PTR [rbp-0x4]
  404587:	jmp    4045e4 <_start@@Base+0x14f4>
  404589:	mov    rax,QWORD PTR [rbp-0x18]
  40458d:	lea    rcx,[rip+0xffffffffffffeeca]        # 40345e <_start@@Base+0x36e>
  404594:	mov    edx,0x0
  404599:	mov    esi,0x7
  40459e:	mov    rdi,rax
  4045a1:	call   40c0dc <flatcc_verify_union_field@@Base>
  4045a6:	mov    DWORD PTR [rbp-0x4],eax
  4045a9:	cmp    DWORD PTR [rbp-0x4],0x0
  4045ad:	je     4045b4 <_start@@Base+0x14c4>
  4045af:	mov    eax,DWORD PTR [rbp-0x4]
  4045b2:	jmp    4045e4 <_start@@Base+0x14f4>
  4045b4:	mov    rax,QWORD PTR [rbp-0x18]
  4045b8:	lea    rcx,[rip+0xffffffffffffee9f]        # 40345e <_start@@Base+0x36e>
  4045bf:	mov    edx,0x0
  4045c4:	mov    esi,0x9
  4045c9:	mov    rdi,rax
  4045cc:	call   40c2e3 <flatcc_verify_union_vector_field@@Base>
  4045d1:	mov    DWORD PTR [rbp-0x4],eax
  4045d4:	cmp    DWORD PTR [rbp-0x4],0x0
  4045d8:	je     4045df <_start@@Base+0x14ef>
  4045da:	mov    eax,DWORD PTR [rbp-0x4]
  4045dd:	jmp    4045e4 <_start@@Base+0x14f4>
  4045df:	mov    eax,0x0
  4045e4:	leave  
  4045e5:	ret    

00000000004045e6 <main@@Base>:
  4045e6:	push   rbp
  4045e7:	mov    rbp,rsp
  4045ea:	sub    rsp,0x1c0
  4045f1:	mov    DWORD PTR [rbp-0x1b4],edi
  4045f7:	mov    QWORD PTR [rbp-0x1c0],rsi
  4045fe:	mov    rax,QWORD PTR fs:0x28
  404607:	mov    QWORD PTR [rbp-0x8],rax
  40460b:	xor    eax,eax
  40460d:	lea    rax,[rbp-0x190]
  404614:	mov    QWORD PTR [rbp-0x1a0],rax
  40461b:	mov    rax,QWORD PTR [rbp-0x1a0]
  404622:	mov    rdi,rax
  404625:	call   405172 <flatcc_builder_init@@Base>
  40462a:	mov    rax,QWORD PTR [rbp-0x1a0]
  404631:	mov    rdi,rax
  404634:	call   403335 <_start@@Base+0x245>
  404639:	mov    rax,QWORD PTR [rbp-0x1a0]
  404640:	lea    rsi,[rip+0x8b22]        # 40d169 <_IO_stdin_used@@Base+0x169>
  404647:	mov    rdi,rax
  40464a:	call   403300 <_start@@Base+0x210>
  40464f:	mov    rax,QWORD PTR [rbp-0x1a0]
  404656:	mov    rdi,rax
  404659:	call   40336d <_start@@Base+0x27d>
  40465e:	lea    rdx,[rbp-0x1a8]
  404665:	mov    rax,QWORD PTR [rbp-0x1a0]
  40466c:	mov    rsi,rdx
  40466f:	mov    rdi,rax
  404672:	call   4099ed <flatcc_builder_get_direct_buffer@@Base>
  404677:	mov    QWORD PTR [rbp-0x198],rax
  40467e:	mov    rcx,QWORD PTR [rbp-0x1a8]
  404685:	mov    rax,QWORD PTR [rbp-0x198]
  40468c:	lea    rdx,[rip+0x8ad1]        # 40d164 <_IO_stdin_used@@Base+0x164>
  404693:	mov    rsi,rcx
  404696:	mov    rdi,rax
  404699:	call   404257 <_start@@Base+0x1167>
  40469e:	mov    DWORD PTR [rbp-0x1ac],eax
  4046a4:	mov    rax,QWORD PTR [rbp-0x1a0]
  4046ab:	mov    rdi,rax
  4046ae:	call   4053d6 <flatcc_builder_clear@@Base>
  4046b3:	mov    eax,DWORD PTR [rbp-0x1ac]
  4046b9:	mov    rcx,QWORD PTR [rbp-0x8]
  4046bd:	xor    rcx,QWORD PTR fs:0x28
  4046c6:	je     4046cd <main@@Base+0xe7>
  4046c8:	call   403060 <__stack_chk_fail@plt>
  4046cd:	leave  
  4046ce:	ret    
  4046cf:	push   rbp
  4046d0:	mov    rbp,rsp
  4046d3:	sub    rsp,0x30
  4046d7:	mov    QWORD PTR [rbp-0x28],rdi
  4046db:	mov    QWORD PTR [rbp-0x30],rsi
  4046df:	mov    rax,QWORD PTR fs:0x28
  4046e8:	mov    QWORD PTR [rbp-0x8],rax
  4046ec:	xor    eax,eax
  4046ee:	mov    QWORD PTR [rbp-0x10],0x0
  4046f6:	cmp    QWORD PTR [rbp-0x28],0x7
  4046fb:	ja     404705 <main@@Base+0x11f>
  4046fd:	mov    QWORD PTR [rbp-0x28],0x8
  404705:	mov    rdx,QWORD PTR [rbp-0x30]
  404709:	mov    rcx,QWORD PTR [rbp-0x28]
  40470d:	lea    rax,[rbp-0x10]
  404711:	mov    rsi,rcx
  404714:	mov    rdi,rax
  404717:	call   4030e0 <posix_memalign@plt>
  40471c:	mov    DWORD PTR [rbp-0x14],eax
  40471f:	cmp    DWORD PTR [rbp-0x14],0x0
  404723:	je     404742 <main@@Base+0x15c>
  404725:	mov    rax,QWORD PTR [rbp-0x10]
  404729:	test   rax,rax
  40472c:	je     404742 <main@@Base+0x15c>
  40472e:	mov    rax,QWORD PTR [rbp-0x10]
  404732:	mov    rdi,rax
  404735:	call   403030 <free@plt>
  40473a:	mov    QWORD PTR [rbp-0x10],0x0
  404742:	mov    rax,QWORD PTR [rbp-0x10]
  404746:	mov    rcx,QWORD PTR [rbp-0x8]
  40474a:	xor    rcx,QWORD PTR fs:0x28
  404753:	je     40475a <main@@Base+0x174>
  404755:	call   403060 <__stack_chk_fail@plt>
  40475a:	leave  
  40475b:	ret    
  40475c:	push   rbp
  40475d:	mov    rbp,rsp
  404760:	mov    DWORD PTR [rbp-0x4],edi
  404763:	mov    eax,DWORD PTR [rbp-0x4]
  404766:	pop    rbp
  404767:	ret    
  404768:	push   rbp
  404769:	mov    rbp,rsp
  40476c:	mov    eax,edi
  40476e:	mov    BYTE PTR [rbp-0x4],al
  404771:	movzx  eax,BYTE PTR [rbp-0x4]
  404775:	pop    rbp
  404776:	ret    
  404777:	push   rbp
  404778:	mov    rbp,rsp
  40477b:	mov    DWORD PTR [rbp-0x4],edi
  40477e:	mov    eax,DWORD PTR [rbp-0x4]
  404781:	pop    rbp
  404782:	ret    
  404783:	push   rbp
  404784:	mov    rbp,rsp
  404787:	mov    QWORD PTR [rbp-0x8],rdi
  40478b:	mov    QWORD PTR [rbp-0x10],rsi
  40478f:	mov    rax,QWORD PTR [rbp-0x8]
  404793:	mov    rdx,QWORD PTR [rax]
  404796:	mov    rax,QWORD PTR [rbp-0x8]
  40479a:	mov    rax,QWORD PTR [rax+0x8]
  40479e:	cmp    rdx,rax
  4047a1:	jne    4047c3 <main@@Base+0x1dd>
  4047a3:	cmp    QWORD PTR [rbp-0x10],0x0
  4047a8:	je     4047b9 <main@@Base+0x1d3>
  4047aa:	mov    rax,QWORD PTR [rbp-0x8]
  4047ae:	mov    rdx,QWORD PTR [rax+0x30]
  4047b2:	mov    rax,QWORD PTR [rbp-0x10]
  4047b6:	mov    QWORD PTR [rax],rdx
  4047b9:	mov    rax,QWORD PTR [rbp-0x8]
  4047bd:	mov    rax,QWORD PTR [rax+0x10]
  4047c1:	jmp    4047da <main@@Base+0x1f4>
  4047c3:	cmp    QWORD PTR [rbp-0x10],0x0
  4047c8:	je     4047d5 <main@@Base+0x1ef>
  4047ca:	mov    rax,QWORD PTR [rbp-0x10]
  4047ce:	mov    QWORD PTR [rax],0x0
  4047d5:	mov    eax,0x0
  4047da:	pop    rbp
  4047db:	ret    
  4047dc:	push   rbp
  4047dd:	mov    rbp,rsp
  4047e0:	sub    rsp,0x20
  4047e4:	mov    QWORD PTR [rbp-0x18],rdi
  4047e8:	mov    QWORD PTR [rbp-0x20],rsi
  4047ec:	mov    rdx,QWORD PTR [rbp-0x20]
  4047f0:	mov    rax,QWORD PTR [rbp-0x18]
  4047f4:	mov    esi,0x0
  4047f9:	mov    rdi,rax
  4047fc:	call   403090 <memchr@plt>
  404801:	mov    QWORD PTR [rbp-0x8],rax
  404805:	cmp    QWORD PTR [rbp-0x8],0x0
  40480a:	je     40481c <main@@Base+0x236>
  40480c:	mov    rdx,QWORD PTR [rbp-0x8]
  404810:	mov    rax,QWORD PTR [rbp-0x18]
  404814:	sub    rdx,rax
  404817:	mov    rax,rdx
  40481a:	jmp    404820 <main@@Base+0x23a>
  40481c:	mov    rax,QWORD PTR [rbp-0x20]
  404820:	leave  
  404821:	ret    

0000000000404822 <flatcc_builder_default_alloc@@Base>:
  404822:	push   rbp
  404823:	mov    rbp,rsp
  404826:	sub    rsp,0x30
  40482a:	mov    QWORD PTR [rbp-0x18],rdi
  40482e:	mov    QWORD PTR [rbp-0x20],rsi
  404832:	mov    QWORD PTR [rbp-0x28],rdx
  404836:	mov    DWORD PTR [rbp-0x2c],ecx
  404839:	mov    DWORD PTR [rbp-0x30],r8d
  40483d:	cmp    QWORD PTR [rbp-0x28],0x0
  404842:	jne    404880 <flatcc_builder_default_alloc@@Base+0x5e>
  404844:	mov    rax,QWORD PTR [rbp-0x20]
  404848:	mov    rax,QWORD PTR [rax]
  40484b:	test   rax,rax
  40484e:	je     404876 <flatcc_builder_default_alloc@@Base+0x54>
  404850:	mov    rax,QWORD PTR [rbp-0x20]
  404854:	mov    rax,QWORD PTR [rax]
  404857:	mov    rdi,rax
  40485a:	call   403030 <free@plt>
  40485f:	mov    rax,QWORD PTR [rbp-0x20]
  404863:	mov    QWORD PTR [rax],0x0
  40486a:	mov    rax,QWORD PTR [rbp-0x20]
  40486e:	mov    QWORD PTR [rax+0x8],0x0
  404876:	mov    eax,0x0
  40487b:	jmp    40498d <flatcc_builder_default_alloc@@Base+0x16b>
  404880:	mov    eax,DWORD PTR [rbp-0x30]
  404883:	cmp    eax,0x4
  404886:	je     4048b4 <flatcc_builder_default_alloc@@Base+0x92>
  404888:	cmp    eax,0x4
  40488b:	jg     404894 <flatcc_builder_default_alloc@@Base+0x72>
  40488d:	cmp    eax,0x1
  404890:	je     4048a0 <flatcc_builder_default_alloc@@Base+0x7e>
  404892:	jmp    4048c8 <flatcc_builder_default_alloc@@Base+0xa6>
  404894:	cmp    eax,0x5
  404897:	je     4048aa <flatcc_builder_default_alloc@@Base+0x88>
  404899:	cmp    eax,0x7
  40489c:	je     4048be <flatcc_builder_default_alloc@@Base+0x9c>
  40489e:	jmp    4048c8 <flatcc_builder_default_alloc@@Base+0xa6>
  4048a0:	mov    QWORD PTR [rbp-0x10],0x100
  4048a8:	jmp    4048d1 <flatcc_builder_default_alloc@@Base+0xaf>
  4048aa:	mov    rax,QWORD PTR [rbp-0x28]
  4048ae:	mov    QWORD PTR [rbp-0x10],rax
  4048b2:	jmp    4048d1 <flatcc_builder_default_alloc@@Base+0xaf>
  4048b4:	mov    QWORD PTR [rbp-0x10],0x120
  4048bc:	jmp    4048d1 <flatcc_builder_default_alloc@@Base+0xaf>
  4048be:	mov    QWORD PTR [rbp-0x10],0x40
  4048c6:	jmp    4048d1 <flatcc_builder_default_alloc@@Base+0xaf>
  4048c8:	mov    QWORD PTR [rbp-0x10],0x20
  4048d0:	nop
  4048d1:	jmp    4048d7 <flatcc_builder_default_alloc@@Base+0xb5>
  4048d3:	shl    QWORD PTR [rbp-0x10],1
  4048d7:	mov    rax,QWORD PTR [rbp-0x10]
  4048db:	cmp    rax,QWORD PTR [rbp-0x28]
  4048df:	jb     4048d3 <flatcc_builder_default_alloc@@Base+0xb1>
  4048e1:	mov    rax,QWORD PTR [rbp-0x20]
  4048e5:	mov    rax,QWORD PTR [rax+0x8]
  4048e9:	cmp    rax,QWORD PTR [rbp-0x28]
  4048ed:	jb     40490a <flatcc_builder_default_alloc@@Base+0xe8>
  4048ef:	mov    rax,QWORD PTR [rbp-0x20]
  4048f3:	mov    rax,QWORD PTR [rax+0x8]
  4048f7:	shr    rax,1
  4048fa:	cmp    rax,QWORD PTR [rbp-0x10]
  4048fe:	jb     40490a <flatcc_builder_default_alloc@@Base+0xe8>
  404900:	mov    eax,0x0
  404905:	jmp    40498d <flatcc_builder_default_alloc@@Base+0x16b>
  40490a:	mov    rax,QWORD PTR [rbp-0x20]
  40490e:	mov    rax,QWORD PTR [rax]
  404911:	mov    rdx,QWORD PTR [rbp-0x10]
  404915:	mov    rsi,rdx
  404918:	mov    rdi,rax
  40491b:	call   4030d0 <realloc@plt>
  404920:	mov    QWORD PTR [rbp-0x8],rax
  404924:	cmp    QWORD PTR [rbp-0x8],0x0
  404929:	jne    404932 <flatcc_builder_default_alloc@@Base+0x110>
  40492b:	mov    eax,0xffffffff
  404930:	jmp    40498d <flatcc_builder_default_alloc@@Base+0x16b>
  404932:	cmp    DWORD PTR [rbp-0x2c],0x0
  404936:	je     404971 <flatcc_builder_default_alloc@@Base+0x14f>
  404938:	mov    rax,QWORD PTR [rbp-0x20]
  40493c:	mov    rax,QWORD PTR [rax+0x8]
  404940:	cmp    rax,QWORD PTR [rbp-0x10]
  404944:	jae    404971 <flatcc_builder_default_alloc@@Base+0x14f>
  404946:	mov    rax,QWORD PTR [rbp-0x20]
  40494a:	mov    rax,QWORD PTR [rax+0x8]
  40494e:	mov    rdx,QWORD PTR [rbp-0x10]
  404952:	sub    rdx,rax
  404955:	mov    rax,QWORD PTR [rbp-0x20]
  404959:	mov    rcx,QWORD PTR [rax+0x8]
  40495d:	mov    rax,QWORD PTR [rbp-0x8]
  404961:	add    rax,rcx
  404964:	mov    esi,0x0
  404969:	mov    rdi,rax
  40496c:	call   403080 <memset@plt>
  404971:	mov    rax,QWORD PTR [rbp-0x20]
  404975:	mov    rdx,QWORD PTR [rbp-0x8]
  404979:	mov    QWORD PTR [rax],rdx
  40497c:	mov    rax,QWORD PTR [rbp-0x20]
  404980:	mov    rdx,QWORD PTR [rbp-0x10]
  404984:	mov    QWORD PTR [rax+0x8],rdx
  404988:	mov    eax,0x0
  40498d:	leave  
  40498e:	ret    
  40498f:	push   rbp
  404990:	mov    rbp,rsp
  404993:	mov    QWORD PTR [rbp-0x18],rdi
  404997:	mov    DWORD PTR [rbp-0x1c],esi
  40499a:	mov    rax,QWORD PTR [rbp-0x18]
  40499e:	add    rax,0x58
  4049a2:	add    rax,0x10
  4049a6:	mov    QWORD PTR [rbp-0x8],rax
  4049aa:	mov    rax,QWORD PTR [rbp-0x18]
  4049ae:	mov    rdx,QWORD PTR [rax+0x68]
  4049b2:	mov    rax,QWORD PTR [rbp-0x18]
  4049b6:	mov    eax,DWORD PTR [rax+0x28]
  4049b9:	mov    eax,eax
  4049bb:	add    rdx,rax
  4049be:	mov    rax,QWORD PTR [rbp-0x18]
  4049c2:	mov    QWORD PTR [rax+0x18],rdx
  4049c6:	mov    rax,QWORD PTR [rbp-0x8]
  4049ca:	mov    rax,QWORD PTR [rax+0x8]
  4049ce:	mov    edx,eax
  4049d0:	mov    rax,QWORD PTR [rbp-0x18]
  4049d4:	mov    eax,DWORD PTR [rax+0x28]
  4049d7:	sub    edx,eax
  4049d9:	mov    rax,QWORD PTR [rbp-0x18]
  4049dd:	mov    DWORD PTR [rax+0x24],edx
  4049e0:	mov    rax,QWORD PTR [rbp-0x18]
  4049e4:	mov    eax,DWORD PTR [rax+0x24]
  4049e7:	cmp    eax,DWORD PTR [rbp-0x1c]
  4049ea:	jbe    4049f6 <flatcc_builder_default_alloc@@Base+0x1d4>
  4049ec:	mov    rax,QWORD PTR [rbp-0x18]
  4049f0:	mov    edx,DWORD PTR [rbp-0x1c]
  4049f3:	mov    DWORD PTR [rax+0x24],edx
  4049f6:	mov    rax,QWORD PTR [rbp-0x18]
  4049fa:	mov    rax,QWORD PTR [rax+0x30]
  4049fe:	mov    edx,DWORD PTR [rbp-0x1c]
  404a01:	mov    DWORD PTR [rax+0x4],edx
  404a04:	nop
  404a05:	pop    rbp
  404a06:	ret    
  404a07:	push   rbp
  404a08:	mov    rbp,rsp
  404a0b:	sub    rsp,0x30
  404a0f:	mov    QWORD PTR [rbp-0x18],rdi
  404a13:	mov    QWORD PTR [rbp-0x20],rsi
  404a17:	mov    DWORD PTR [rbp-0x24],edx
  404a1a:	mov    rax,QWORD PTR [rbp-0x18]
  404a1e:	add    rax,0x58
  404a22:	add    rax,0x10
  404a26:	mov    QWORD PTR [rbp-0x8],rax
  404a2a:	mov    rax,QWORD PTR [rbp-0x18]
  404a2e:	mov    rax,QWORD PTR [rax+0x50]
  404a32:	mov    rdx,QWORD PTR [rbp-0x18]
  404a36:	mov    edx,DWORD PTR [rdx+0x28]
  404a39:	mov    ecx,edx
  404a3b:	mov    rdx,QWORD PTR [rbp-0x20]
  404a3f:	lea    r9,[rcx+rdx*1]
  404a43:	mov    rdx,QWORD PTR [rbp-0x18]
  404a47:	mov    rdi,QWORD PTR [rdx+0x40]
  404a4b:	mov    rsi,QWORD PTR [rbp-0x8]
  404a4f:	mov    r8d,0x1
  404a55:	mov    ecx,0x1
  404a5a:	mov    rdx,r9
  404a5d:	call   rax
  404a5f:	test   eax,eax
  404a61:	je     404a6a <flatcc_builder_default_alloc@@Base+0x248>
  404a63:	mov    eax,0xffffffff
  404a68:	jmp    404a80 <flatcc_builder_default_alloc@@Base+0x25e>
  404a6a:	mov    edx,DWORD PTR [rbp-0x24]
  404a6d:	mov    rax,QWORD PTR [rbp-0x18]
  404a71:	mov    esi,edx
  404a73:	mov    rdi,rax
  404a76:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  404a7b:	mov    eax,0x0
  404a80:	leave  
  404a81:	ret    
  404a82:	push   rbp
  404a83:	mov    rbp,rsp
  404a86:	sub    rsp,0x20
  404a8a:	mov    QWORD PTR [rbp-0x18],rdi
  404a8e:	mov    DWORD PTR [rbp-0x1c],esi
  404a91:	mov    rax,QWORD PTR [rbp-0x18]
  404a95:	mov    eax,DWORD PTR [rax+0x20]
  404a98:	mov    eax,eax
  404a9a:	mov    QWORD PTR [rbp-0x8],rax
  404a9e:	mov    rax,QWORD PTR [rbp-0x18]
  404aa2:	mov    edx,DWORD PTR [rax+0x20]
  404aa5:	mov    eax,DWORD PTR [rbp-0x1c]
  404aa8:	add    edx,eax
  404aaa:	mov    rax,QWORD PTR [rbp-0x18]
  404aae:	mov    DWORD PTR [rax+0x20],edx
  404ab1:	mov    rax,QWORD PTR [rbp-0x18]
  404ab5:	mov    edx,DWORD PTR [rax+0x20]
  404ab8:	mov    rax,QWORD PTR [rbp-0x18]
  404abc:	mov    eax,DWORD PTR [rax+0x24]
  404abf:	cmp    edx,eax
  404ac1:	jb     404aee <flatcc_builder_default_alloc@@Base+0x2cc>
  404ac3:	mov    rax,QWORD PTR [rbp-0x18]
  404ac7:	mov    eax,DWORD PTR [rax+0x20]
  404aca:	add    eax,0x1
  404acd:	mov    ecx,eax
  404acf:	mov    rax,QWORD PTR [rbp-0x18]
  404ad3:	mov    edx,0xfffffffc
  404ad8:	mov    rsi,rcx
  404adb:	mov    rdi,rax
  404ade:	call   404a07 <flatcc_builder_default_alloc@@Base+0x1e5>
  404ae3:	test   eax,eax
  404ae5:	je     404aee <flatcc_builder_default_alloc@@Base+0x2cc>
  404ae7:	mov    eax,0x0
  404aec:	jmp    404afd <flatcc_builder_default_alloc@@Base+0x2db>
  404aee:	mov    rax,QWORD PTR [rbp-0x18]
  404af2:	mov    rdx,QWORD PTR [rax+0x18]
  404af6:	mov    rax,QWORD PTR [rbp-0x8]
  404afa:	add    rax,rdx
  404afd:	leave  
  404afe:	ret    
  404aff:	push   rbp
  404b00:	mov    rbp,rsp
  404b03:	sub    rsp,0x10
  404b07:	mov    QWORD PTR [rbp-0x8],rdi
  404b0b:	mov    DWORD PTR [rbp-0xc],esi
  404b0e:	mov    rax,QWORD PTR [rbp-0x8]
  404b12:	mov    eax,DWORD PTR [rax+0x20]
  404b15:	sub    eax,DWORD PTR [rbp-0xc]
  404b18:	mov    edx,eax
  404b1a:	mov    rax,QWORD PTR [rbp-0x8]
  404b1e:	mov    DWORD PTR [rax+0x20],edx
  404b21:	mov    eax,DWORD PTR [rbp-0xc]
  404b24:	mov    rdx,QWORD PTR [rbp-0x8]
  404b28:	mov    rcx,QWORD PTR [rdx+0x18]
  404b2c:	mov    rdx,QWORD PTR [rbp-0x8]
  404b30:	mov    edx,DWORD PTR [rdx+0x20]
  404b33:	mov    edx,edx
  404b35:	add    rcx,rdx
  404b38:	mov    rdx,rax
  404b3b:	mov    esi,0x0
  404b40:	mov    rdi,rcx
  404b43:	call   403080 <memset@plt>
  404b48:	nop
  404b49:	leave  
  404b4a:	ret    
  404b4b:	push   rbp
  404b4c:	mov    rbp,rsp
  404b4f:	sub    rsp,0x30
  404b53:	mov    QWORD PTR [rbp-0x18],rdi
  404b57:	mov    QWORD PTR [rbp-0x20],rsi
  404b5b:	mov    DWORD PTR [rbp-0x24],edx
  404b5e:	mov    edx,DWORD PTR [rbp-0x24]
  404b61:	mov    rax,QWORD PTR [rbp-0x18]
  404b65:	mov    esi,edx
  404b67:	mov    rdi,rax
  404b6a:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  404b6f:	mov    QWORD PTR [rbp-0x8],rax
  404b73:	cmp    QWORD PTR [rbp-0x8],0x0
  404b78:	jne    404b81 <flatcc_builder_default_alloc@@Base+0x35f>
  404b7a:	mov    eax,0x0
  404b7f:	jmp    404b9b <flatcc_builder_default_alloc@@Base+0x379>
  404b81:	mov    edx,DWORD PTR [rbp-0x24]
  404b84:	mov    rcx,QWORD PTR [rbp-0x20]
  404b88:	mov    rax,QWORD PTR [rbp-0x8]
  404b8c:	mov    rsi,rcx
  404b8f:	mov    rdi,rax
  404b92:	call   4030b0 <memcpy@plt>
  404b97:	mov    rax,QWORD PTR [rbp-0x8]
  404b9b:	leave  
  404b9c:	ret    
  404b9d:	push   rbp
  404b9e:	mov    rbp,rsp
  404ba1:	sub    rsp,0x30
  404ba5:	mov    QWORD PTR [rbp-0x18],rdi
  404ba9:	mov    DWORD PTR [rbp-0x1c],esi
  404bac:	mov    eax,ecx
  404bae:	mov    WORD PTR [rbp-0x20],dx
  404bb2:	mov    WORD PTR [rbp-0x24],ax
  404bb6:	mov    rax,QWORD PTR [rbp-0x18]
  404bba:	mov    edx,DWORD PTR [rax+0x20]
  404bbd:	movzx  eax,WORD PTR [rbp-0x20]
  404bc1:	add    eax,edx
  404bc3:	lea    edx,[rax-0x1]
  404bc6:	movzx  eax,WORD PTR [rbp-0x20]
  404bca:	neg    eax
  404bcc:	and    eax,edx
  404bce:	mov    DWORD PTR [rbp-0x4],eax
  404bd1:	mov    edx,DWORD PTR [rbp-0x4]
  404bd4:	mov    eax,DWORD PTR [rbp-0x1c]
  404bd7:	add    edx,eax
  404bd9:	mov    rax,QWORD PTR [rbp-0x18]
  404bdd:	mov    DWORD PTR [rax+0x20],edx
  404be0:	mov    rax,QWORD PTR [rbp-0x18]
  404be4:	mov    edx,DWORD PTR [rax+0x20]
  404be7:	mov    rax,QWORD PTR [rbp-0x18]
  404beb:	mov    eax,DWORD PTR [rax+0x24]
  404bee:	cmp    edx,eax
  404bf0:	jb     404c1d <flatcc_builder_default_alloc@@Base+0x3fb>
  404bf2:	mov    rax,QWORD PTR [rbp-0x18]
  404bf6:	mov    eax,DWORD PTR [rax+0x20]
  404bf9:	add    eax,0x1
  404bfc:	mov    ecx,eax
  404bfe:	mov    rax,QWORD PTR [rbp-0x18]
  404c02:	mov    edx,0xfffc
  404c07:	mov    rsi,rcx
  404c0a:	mov    rdi,rax
  404c0d:	call   404a07 <flatcc_builder_default_alloc@@Base+0x1e5>
  404c12:	test   eax,eax
  404c14:	je     404c1d <flatcc_builder_default_alloc@@Base+0x3fb>
  404c16:	mov    eax,0x0
  404c1b:	jmp    404c63 <flatcc_builder_default_alloc@@Base+0x441>
  404c1d:	mov    rax,QWORD PTR [rbp-0x18]
  404c21:	mov    rax,QWORD PTR [rax+0x8]
  404c25:	movzx  edx,WORD PTR [rbp-0x24]
  404c29:	add    rdx,rdx
  404c2c:	add    rax,rdx
  404c2f:	mov    edx,DWORD PTR [rbp-0x4]
  404c32:	add    edx,0x4
  404c35:	mov    WORD PTR [rax],dx
  404c38:	mov    rax,QWORD PTR [rbp-0x18]
  404c3c:	movzx  eax,WORD PTR [rax+0x10]
  404c40:	cmp    ax,WORD PTR [rbp-0x24]
  404c44:	ja     404c55 <flatcc_builder_default_alloc@@Base+0x433>
  404c46:	movzx  eax,WORD PTR [rbp-0x24]
  404c4a:	lea    edx,[rax+0x1]
  404c4d:	mov    rax,QWORD PTR [rbp-0x18]
  404c51:	mov    WORD PTR [rax+0x10],dx
  404c55:	mov    rax,QWORD PTR [rbp-0x18]
  404c59:	mov    rdx,QWORD PTR [rax+0x18]
  404c5d:	mov    eax,DWORD PTR [rbp-0x4]
  404c60:	add    rax,rdx
  404c63:	leave  
  404c64:	ret    
  404c65:	push   rbp
  404c66:	mov    rbp,rsp
  404c69:	sub    rsp,0x20
  404c6d:	mov    QWORD PTR [rbp-0x18],rdi
  404c71:	mov    eax,esi
  404c73:	mov    WORD PTR [rbp-0x1c],ax
  404c77:	mov    rax,QWORD PTR [rbp-0x18]
  404c7b:	mov    eax,DWORD PTR [rax+0x20]
  404c7e:	add    eax,0x3
  404c81:	and    eax,0xfffffffc
  404c84:	mov    DWORD PTR [rbp-0x4],eax
  404c87:	mov    eax,DWORD PTR [rbp-0x4]
  404c8a:	lea    edx,[rax+0x4]
  404c8d:	mov    rax,QWORD PTR [rbp-0x18]
  404c91:	mov    DWORD PTR [rax+0x20],edx
  404c94:	mov    rax,QWORD PTR [rbp-0x18]
  404c98:	mov    edx,DWORD PTR [rax+0x20]
  404c9b:	mov    rax,QWORD PTR [rbp-0x18]
  404c9f:	mov    eax,DWORD PTR [rax+0x24]
  404ca2:	cmp    edx,eax
  404ca4:	jbe    404cce <flatcc_builder_default_alloc@@Base+0x4ac>
  404ca6:	mov    rax,QWORD PTR [rbp-0x18]
  404caa:	mov    eax,DWORD PTR [rax+0x20]
  404cad:	mov    ecx,eax
  404caf:	mov    rax,QWORD PTR [rbp-0x18]
  404cb3:	mov    edx,0xfffc
  404cb8:	mov    rsi,rcx
  404cbb:	mov    rdi,rax
  404cbe:	call   404a07 <flatcc_builder_default_alloc@@Base+0x1e5>
  404cc3:	test   eax,eax
  404cc5:	je     404cce <flatcc_builder_default_alloc@@Base+0x4ac>
  404cc7:	mov    eax,0x0
  404ccc:	jmp    404d2c <flatcc_builder_default_alloc@@Base+0x50a>
  404cce:	mov    rax,QWORD PTR [rbp-0x18]
  404cd2:	mov    rax,QWORD PTR [rax+0x8]
  404cd6:	movzx  edx,WORD PTR [rbp-0x1c]
  404cda:	add    rdx,rdx
  404cdd:	add    rax,rdx
  404ce0:	mov    edx,DWORD PTR [rbp-0x4]
  404ce3:	add    edx,0x4
  404ce6:	mov    WORD PTR [rax],dx
  404ce9:	mov    rax,QWORD PTR [rbp-0x18]
  404ced:	movzx  eax,WORD PTR [rax+0x10]
  404cf1:	cmp    ax,WORD PTR [rbp-0x1c]
  404cf5:	ja     404d06 <flatcc_builder_default_alloc@@Base+0x4e4>
  404cf7:	movzx  eax,WORD PTR [rbp-0x1c]
  404cfb:	lea    edx,[rax+0x1]
  404cfe:	mov    rax,QWORD PTR [rbp-0x18]
  404d02:	mov    WORD PTR [rax+0x10],dx
  404d06:	mov    rax,QWORD PTR [rbp-0x18]
  404d0a:	mov    rax,QWORD PTR [rax]
  404d0d:	lea    rcx,[rax+0x2]
  404d11:	mov    rdx,QWORD PTR [rbp-0x18]
  404d15:	mov    QWORD PTR [rdx],rcx
  404d18:	mov    edx,DWORD PTR [rbp-0x4]
  404d1b:	mov    WORD PTR [rax],dx
  404d1e:	mov    rax,QWORD PTR [rbp-0x18]
  404d22:	mov    rdx,QWORD PTR [rax+0x18]
  404d26:	mov    eax,DWORD PTR [rbp-0x4]
  404d29:	add    rax,rdx
  404d2c:	leave  
  404d2d:	ret    
  404d2e:	push   rbp
  404d2f:	mov    rbp,rsp
  404d32:	sub    rsp,0x30
  404d36:	mov    QWORD PTR [rbp-0x18],rdi
  404d3a:	mov    DWORD PTR [rbp-0x1c],esi
  404d3d:	mov    QWORD PTR [rbp-0x28],rdx
  404d41:	mov    QWORD PTR [rbp-0x30],rcx
  404d45:	mov    DWORD PTR [rbp-0x20],r8d
  404d49:	mov    rax,QWORD PTR [rbp-0x18]
  404d4d:	lea    rdx,[rax+0x58]
  404d51:	mov    eax,DWORD PTR [rbp-0x1c]
  404d54:	cdqe   
  404d56:	shl    rax,0x4
  404d5a:	add    rax,rdx
  404d5d:	mov    QWORD PTR [rbp-0x8],rax
  404d61:	mov    rdx,QWORD PTR [rbp-0x28]
  404d65:	mov    rax,QWORD PTR [rbp-0x30]
  404d69:	add    rdx,rax
  404d6c:	mov    rax,QWORD PTR [rbp-0x8]
  404d70:	mov    rax,QWORD PTR [rax+0x8]
  404d74:	cmp    rdx,rax
  404d77:	jbe    404dcc <flatcc_builder_default_alloc@@Base+0x5aa>
  404d79:	mov    rax,QWORD PTR [rbp-0x18]
  404d7d:	mov    rax,QWORD PTR [rax+0x50]
  404d81:	mov    rcx,QWORD PTR [rbp-0x28]
  404d85:	mov    rdx,QWORD PTR [rbp-0x30]
  404d89:	lea    r9,[rcx+rdx*1]
  404d8d:	mov    rdx,QWORD PTR [rbp-0x18]
  404d91:	mov    rdi,QWORD PTR [rdx+0x40]
  404d95:	mov    ecx,DWORD PTR [rbp-0x1c]
  404d98:	mov    edx,DWORD PTR [rbp-0x20]
  404d9b:	mov    rsi,QWORD PTR [rbp-0x8]
  404d9f:	mov    r8d,ecx
  404da2:	mov    ecx,edx
  404da4:	mov    rdx,r9
  404da7:	call   rax
  404da9:	test   eax,eax
  404dab:	je     404dcc <flatcc_builder_default_alloc@@Base+0x5aa>
  404dad:	lea    rcx,[rip+0x8a64]        # 40d818 <flatcc_builder_padding_base@@Base+0x658>
  404db4:	mov    edx,0x134
  404db9:	lea    rsi,[rip+0x8600]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404dc0:	lea    rdi,[rip+0x8659]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  404dc7:	call   403070 <__assert_fail@plt>
  404dcc:	mov    rax,QWORD PTR [rbp-0x8]
  404dd0:	mov    rax,QWORD PTR [rax]
  404dd3:	mov    rdx,rax
  404dd6:	mov    rax,QWORD PTR [rbp-0x28]
  404dda:	add    rax,rdx
  404ddd:	leave  
  404dde:	ret    
  404ddf:	push   rbp
  404de0:	mov    rbp,rsp
  404de3:	sub    rsp,0x20
  404de7:	mov    QWORD PTR [rbp-0x18],rdi
  404deb:	mov    DWORD PTR [rbp-0x1c],esi
  404dee:	mov    rax,QWORD PTR [rbp-0x18]
  404df2:	mov    rax,QWORD PTR [rax+0x30]
  404df6:	mov    edx,DWORD PTR [rax+0x10]
  404df9:	mov    rax,QWORD PTR [rbp-0x18]
  404dfd:	mov    rax,QWORD PTR [rax+0x30]
  404e01:	movzx  eax,WORD PTR [rax+0x1c]
  404e05:	movzx  eax,ax
  404e08:	add    eax,eax
  404e0a:	add    eax,edx
  404e0c:	mov    DWORD PTR [rbp-0x8],eax
  404e0f:	mov    eax,DWORD PTR [rbp-0x1c]
  404e12:	add    eax,0x2
  404e15:	cdqe   
  404e17:	add    eax,eax
  404e19:	mov    DWORD PTR [rbp-0x4],eax
  404e1c:	mov    ecx,DWORD PTR [rbp-0x4]
  404e1f:	mov    edx,DWORD PTR [rbp-0x8]
  404e22:	mov    rax,QWORD PTR [rbp-0x18]
  404e26:	mov    r8d,0x1
  404e2c:	mov    esi,0x0
  404e31:	mov    rdi,rax
  404e34:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  404e39:	mov    rdx,rax
  404e3c:	mov    rax,QWORD PTR [rbp-0x18]
  404e40:	mov    QWORD PTR [rax+0x8],rdx
  404e44:	mov    rax,QWORD PTR [rbp-0x18]
  404e48:	mov    rax,QWORD PTR [rax+0x8]
  404e4c:	test   rax,rax
  404e4f:	jne    404e58 <flatcc_builder_default_alloc@@Base+0x636>
  404e51:	mov    eax,0xffffffff
  404e56:	jmp    404ec6 <flatcc_builder_default_alloc@@Base+0x6a4>
  404e58:	mov    rax,QWORD PTR [rbp-0x18]
  404e5c:	mov    rax,QWORD PTR [rax+0x8]
  404e60:	lea    rdx,[rax+0x4]
  404e64:	mov    rax,QWORD PTR [rbp-0x18]
  404e68:	mov    QWORD PTR [rax+0x8],rdx
  404e6c:	mov    rax,QWORD PTR [rbp-0x18]
  404e70:	mov    rax,QWORD PTR [rax+0x30]
  404e74:	mov    eax,DWORD PTR [rax+0x14]
  404e77:	mov    DWORD PTR [rbp-0x8],eax
  404e7a:	mov    eax,DWORD PTR [rbp-0x1c]
  404e7d:	cdqe   
  404e7f:	add    eax,eax
  404e81:	add    eax,0x1
  404e84:	mov    DWORD PTR [rbp-0x4],eax
  404e87:	mov    ecx,DWORD PTR [rbp-0x4]
  404e8a:	mov    edx,DWORD PTR [rbp-0x8]
  404e8d:	mov    rax,QWORD PTR [rbp-0x18]
  404e91:	mov    r8d,0x0
  404e97:	mov    esi,0x3
  404e9c:	mov    rdi,rax
  404e9f:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  404ea4:	mov    rdx,rax
  404ea7:	mov    rax,QWORD PTR [rbp-0x18]
  404eab:	mov    QWORD PTR [rax],rdx
  404eae:	mov    rax,QWORD PTR [rbp-0x18]
  404eb2:	mov    rax,QWORD PTR [rax]
  404eb5:	test   rax,rax
  404eb8:	jne    404ec1 <flatcc_builder_default_alloc@@Base+0x69f>
  404eba:	mov    eax,0xffffffff
  404ebf:	jmp    404ec6 <flatcc_builder_default_alloc@@Base+0x6a4>
  404ec1:	mov    eax,0x0
  404ec6:	leave  
  404ec7:	ret    
  404ec8:	push   rbp
  404ec9:	mov    rbp,rsp
  404ecc:	sub    rsp,0x30
  404ed0:	mov    QWORD PTR [rbp-0x28],rdi
  404ed4:	mov    rax,QWORD PTR [rbp-0x28]
  404ed8:	add    rax,0x58
  404edc:	add    rax,0x50
  404ee0:	mov    QWORD PTR [rbp-0x8],rax
  404ee4:	mov    rax,QWORD PTR [rbp-0x28]
  404ee8:	mov    eax,DWORD PTR [rax+0xe4]
  404eee:	test   eax,eax
  404ef0:	je     404f11 <flatcc_builder_default_alloc@@Base+0x6ef>
  404ef2:	lea    rcx,[rip+0x890f]        # 40d808 <flatcc_builder_padding_base@@Base+0x648>
  404ef9:	mov    edx,0x156
  404efe:	lea    rsi,[rip+0x84bb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404f05:	lea    rdi,[rip+0x8516]        # 40d422 <flatcc_builder_padding_base@@Base+0x262>
  404f0c:	call   403070 <__assert_fail@plt>
  404f11:	mov    rax,QWORD PTR [rbp-0x28]
  404f15:	mov    eax,DWORD PTR [rax+0xe4]
  404f1b:	mov    edx,eax
  404f1d:	mov    rax,QWORD PTR [rbp-0x28]
  404f21:	mov    r8d,0x0
  404f27:	mov    ecx,0x10
  404f2c:	mov    esi,0x6
  404f31:	mov    rdi,rax
  404f34:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  404f39:	test   rax,rax
  404f3c:	jne    404f48 <flatcc_builder_default_alloc@@Base+0x726>
  404f3e:	mov    eax,0xffffffff
  404f43:	jmp    404fea <flatcc_builder_default_alloc@@Base+0x7c8>
  404f48:	mov    rax,QWORD PTR [rbp-0x28]
  404f4c:	mov    DWORD PTR [rax+0xe4],0x10
  404f56:	mov    QWORD PTR [rbp-0x18],0x100
  404f5e:	mov    rax,QWORD PTR [rbp-0x28]
  404f62:	mov    rax,QWORD PTR [rax+0x50]
  404f66:	mov    rdx,QWORD PTR [rbp-0x28]
  404f6a:	mov    rdi,QWORD PTR [rdx+0x40]
  404f6e:	mov    rdx,QWORD PTR [rbp-0x18]
  404f72:	mov    rsi,QWORD PTR [rbp-0x8]
  404f76:	mov    r8d,0x5
  404f7c:	mov    ecx,0x1
  404f81:	call   rax
  404f83:	test   eax,eax
  404f85:	je     404f92 <flatcc_builder_default_alloc@@Base+0x770>
  404f87:	mov    eax,0xffffffff
  404f8c:	jmp    404fea <flatcc_builder_default_alloc@@Base+0x7c8>
  404f8e:	shl    QWORD PTR [rbp-0x18],1
  404f92:	mov    rax,QWORD PTR [rbp-0x18]
  404f96:	lea    rdx,[rax+rax*1]
  404f9a:	mov    rax,QWORD PTR [rbp-0x8]
  404f9e:	mov    rax,QWORD PTR [rax+0x8]
  404fa2:	cmp    rdx,rax
  404fa5:	jbe    404f8e <flatcc_builder_default_alloc@@Base+0x76c>
  404fa7:	mov    rax,QWORD PTR [rbp-0x18]
  404fab:	shr    rax,0x2
  404faf:	mov    QWORD PTR [rbp-0x18],rax
  404fb3:	mov    QWORD PTR [rbp-0x10],0x0
  404fbb:	jmp    404fc2 <flatcc_builder_default_alloc@@Base+0x7a0>
  404fbd:	add    QWORD PTR [rbp-0x10],0x1
  404fc2:	mov    rax,QWORD PTR [rbp-0x10]
  404fc6:	mov    edx,0x1
  404fcb:	shlx   rax,rdx,rax
  404fd0:	cmp    rax,QWORD PTR [rbp-0x18]
  404fd4:	jb     404fbd <flatcc_builder_default_alloc@@Base+0x79b>
  404fd6:	mov    rax,QWORD PTR [rbp-0x28]
  404fda:	mov    rdx,QWORD PTR [rbp-0x10]
  404fde:	mov    QWORD PTR [rax+0xd8],rdx
  404fe5:	mov    eax,0x0
  404fea:	leave  
  404feb:	ret    
  404fec:	push   rbp
  404fed:	mov    rbp,rsp
  404ff0:	sub    rsp,0x20
  404ff4:	mov    QWORD PTR [rbp-0x18],rdi
  404ff8:	mov    DWORD PTR [rbp-0x1c],esi
  404ffb:	mov    rax,QWORD PTR [rbp-0x18]
  404fff:	mov    rax,QWORD PTR [rax+0xd8]
  405006:	test   rax,rax
  405009:	jne    405022 <flatcc_builder_default_alloc@@Base+0x800>
  40500b:	mov    rax,QWORD PTR [rbp-0x18]
  40500f:	mov    rdi,rax
  405012:	call   404ec8 <flatcc_builder_default_alloc@@Base+0x6a6>
  405017:	test   eax,eax
  405019:	je     405022 <flatcc_builder_default_alloc@@Base+0x800>
  40501b:	mov    eax,0x0
  405020:	jmp    40505e <flatcc_builder_default_alloc@@Base+0x83c>
  405022:	mov    rax,QWORD PTR [rbp-0x18]
  405026:	mov    rax,QWORD PTR [rax+0xa8]
  40502d:	mov    QWORD PTR [rbp-0x8],rax
  405031:	mov    rax,QWORD PTR [rbp-0x18]
  405035:	mov    rax,QWORD PTR [rax+0xd8]
  40503c:	mov    edx,0x20
  405041:	sub    edx,eax
  405043:	mov    eax,edx
  405045:	mov    edx,DWORD PTR [rbp-0x1c]
  405048:	shrx   eax,edx,eax
  40504d:	mov    eax,eax
  40504f:	lea    rdx,[rax*4+0x0]
  405057:	mov    rax,QWORD PTR [rbp-0x8]
  40505b:	add    rax,rdx
  40505e:	leave  
  40505f:	ret    

0000000000405060 <flatcc_builder_flush_vtable_cache@@Base>:
  405060:	push   rbp
  405061:	mov    rbp,rsp
  405064:	sub    rsp,0x20
  405068:	mov    QWORD PTR [rbp-0x18],rdi
  40506c:	mov    rax,QWORD PTR [rbp-0x18]
  405070:	add    rax,0x58
  405074:	add    rax,0x50
  405078:	mov    QWORD PTR [rbp-0x8],rax
  40507c:	mov    rax,QWORD PTR [rbp-0x18]
  405080:	mov    rax,QWORD PTR [rax+0xd8]
  405087:	test   rax,rax
  40508a:	je     4050c6 <flatcc_builder_flush_vtable_cache@@Base+0x66>
  40508c:	mov    rax,QWORD PTR [rbp-0x8]
  405090:	mov    rdx,QWORD PTR [rax+0x8]
  405094:	mov    rax,QWORD PTR [rbp-0x8]
  405098:	mov    rax,QWORD PTR [rax]
  40509b:	mov    esi,0x0
  4050a0:	mov    rdi,rax
  4050a3:	call   403080 <memset@plt>
  4050a8:	mov    rax,QWORD PTR [rbp-0x18]
  4050ac:	mov    DWORD PTR [rax+0xe4],0x10
  4050b6:	mov    rax,QWORD PTR [rbp-0x18]
  4050ba:	mov    DWORD PTR [rax+0xe0],0x0
  4050c4:	jmp    4050c7 <flatcc_builder_flush_vtable_cache@@Base+0x67>
  4050c6:	nop
  4050c7:	leave  
  4050c8:	ret    

00000000004050c9 <flatcc_builder_custom_init@@Base>:
  4050c9:	push   rbp
  4050ca:	mov    rbp,rsp
  4050cd:	sub    rsp,0x30
  4050d1:	mov    QWORD PTR [rbp-0x8],rdi
  4050d5:	mov    QWORD PTR [rbp-0x10],rsi
  4050d9:	mov    QWORD PTR [rbp-0x18],rdx
  4050dd:	mov    QWORD PTR [rbp-0x20],rcx
  4050e1:	mov    QWORD PTR [rbp-0x28],r8
  4050e5:	mov    rax,QWORD PTR [rbp-0x8]
  4050e9:	mov    edx,0x188
  4050ee:	mov    esi,0x0
  4050f3:	mov    rdi,rax
  4050f6:	call   403080 <memset@plt>
  4050fb:	cmp    QWORD PTR [rbp-0x10],0x0
  405100:	jne    405129 <flatcc_builder_custom_init@@Base+0x60>
  405102:	mov    rax,QWORD PTR [rbp-0x8]
  405106:	mov    DWORD PTR [rax+0x128],0x1
  405110:	mov    rax,0x40a4fc
  405117:	mov    QWORD PTR [rbp-0x10],rax
  40511b:	mov    rax,QWORD PTR [rbp-0x8]
  40511f:	add    rax,0x130
  405125:	mov    QWORD PTR [rbp-0x18],rax
  405129:	cmp    QWORD PTR [rbp-0x20],0x0
  40512e:	jne    40513b <flatcc_builder_custom_init@@Base+0x72>
  405130:	mov    rax,0x404822
  405137:	mov    QWORD PTR [rbp-0x20],rax
  40513b:	mov    rax,QWORD PTR [rbp-0x8]
  40513f:	mov    rdx,QWORD PTR [rbp-0x28]
  405143:	mov    QWORD PTR [rax+0x40],rdx
  405147:	mov    rax,QWORD PTR [rbp-0x8]
  40514b:	mov    rdx,QWORD PTR [rbp-0x20]
  40514f:	mov    QWORD PTR [rax+0x50],rdx
  405153:	mov    rax,QWORD PTR [rbp-0x8]
  405157:	mov    rdx,QWORD PTR [rbp-0x18]
  40515b:	mov    QWORD PTR [rax+0x38],rdx
  40515f:	mov    rax,QWORD PTR [rbp-0x8]
  405163:	mov    rdx,QWORD PTR [rbp-0x10]
  405167:	mov    QWORD PTR [rax+0x48],rdx
  40516b:	mov    eax,0x0
  405170:	leave  
  405171:	ret    

0000000000405172 <flatcc_builder_init@@Base>:
  405172:	push   rbp
  405173:	mov    rbp,rsp
  405176:	sub    rsp,0x10
  40517a:	mov    QWORD PTR [rbp-0x8],rdi
  40517e:	mov    rax,QWORD PTR [rbp-0x8]
  405182:	mov    r8d,0x0
  405188:	mov    ecx,0x0
  40518d:	mov    edx,0x0
  405192:	mov    esi,0x0
  405197:	mov    rdi,rax
  40519a:	call   4050c9 <flatcc_builder_custom_init@@Base>
  40519f:	leave  
  4051a0:	ret    

00000000004051a1 <flatcc_builder_custom_reset@@Base>:
  4051a1:	push   rbp
  4051a2:	mov    rbp,rsp
  4051a5:	sub    rsp,0x20
  4051a9:	mov    QWORD PTR [rbp-0x18],rdi
  4051ad:	mov    DWORD PTR [rbp-0x1c],esi
  4051b0:	mov    DWORD PTR [rbp-0x20],edx
  4051b3:	mov    DWORD PTR [rbp-0xc],0x0
  4051ba:	jmp    405271 <flatcc_builder_custom_reset@@Base+0xd0>
  4051bf:	mov    rax,QWORD PTR [rbp-0x18]
  4051c3:	lea    rdx,[rax+0x58]
  4051c7:	mov    eax,DWORD PTR [rbp-0xc]
  4051ca:	cdqe   
  4051cc:	shl    rax,0x4
  4051d0:	add    rax,rdx
  4051d3:	mov    QWORD PTR [rbp-0x8],rax
  4051d7:	mov    rax,QWORD PTR [rbp-0x8]
  4051db:	mov    rax,QWORD PTR [rax]
  4051de:	test   rax,rax
  4051e1:	je     405241 <flatcc_builder_custom_reset@@Base+0xa0>
  4051e3:	cmp    DWORD PTR [rbp-0xc],0x5
  4051e7:	je     405223 <flatcc_builder_custom_reset@@Base+0x82>
  4051e9:	cmp    DWORD PTR [rbp-0x20],0x0
  4051ed:	je     405223 <flatcc_builder_custom_reset@@Base+0x82>
  4051ef:	mov    rax,QWORD PTR [rbp-0x18]
  4051f3:	mov    rax,QWORD PTR [rax+0x50]
  4051f7:	mov    rdx,QWORD PTR [rbp-0x18]
  4051fb:	mov    rdi,QWORD PTR [rdx+0x40]
  4051ff:	mov    edx,DWORD PTR [rbp-0xc]
  405202:	mov    rsi,QWORD PTR [rbp-0x8]
  405206:	mov    r8d,edx
  405209:	mov    ecx,0x1
  40520e:	mov    edx,0x1
  405213:	call   rax
  405215:	test   eax,eax
  405217:	je     405223 <flatcc_builder_custom_reset@@Base+0x82>
  405219:	mov    eax,0xffffffff
  40521e:	jmp    4053b0 <flatcc_builder_custom_reset@@Base+0x20f>
  405223:	mov    rax,QWORD PTR [rbp-0x8]
  405227:	mov    rdx,QWORD PTR [rax+0x8]
  40522b:	mov    rax,QWORD PTR [rbp-0x8]
  40522f:	mov    rax,QWORD PTR [rax]
  405232:	mov    esi,0x0
  405237:	mov    rdi,rax
  40523a:	call   403080 <memset@plt>
  40523f:	jmp    40526d <flatcc_builder_custom_reset@@Base+0xcc>
  405241:	mov    rax,QWORD PTR [rbp-0x8]
  405245:	mov    rax,QWORD PTR [rax+0x8]
  405249:	test   rax,rax
  40524c:	je     40526d <flatcc_builder_custom_reset@@Base+0xcc>
  40524e:	lea    rcx,[rip+0x85db]        # 40d830 <flatcc_builder_padding_base@@Base+0x670>
  405255:	mov    edx,0x1b2
  40525a:	lea    rsi,[rip+0x815f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405261:	lea    rdi,[rip+0x81c9]        # 40d431 <flatcc_builder_padding_base@@Base+0x271>
  405268:	call   403070 <__assert_fail@plt>
  40526d:	add    DWORD PTR [rbp-0xc],0x1
  405271:	cmp    DWORD PTR [rbp-0xc],0x7
  405275:	jle    4051bf <flatcc_builder_custom_reset@@Base+0x1e>
  40527b:	mov    rax,QWORD PTR [rbp-0x18]
  40527f:	mov    DWORD PTR [rax+0xe0],0x0
  405289:	mov    rax,QWORD PTR [rbp-0x18]
  40528d:	mov    eax,DWORD PTR [rax+0xe4]
  405293:	test   eax,eax
  405295:	je     4052a5 <flatcc_builder_custom_reset@@Base+0x104>
  405297:	mov    rax,QWORD PTR [rbp-0x18]
  40529b:	mov    DWORD PTR [rax+0xe4],0x10
  4052a5:	mov    rax,QWORD PTR [rbp-0x18]
  4052a9:	mov    WORD PTR [rax+0xe8],0x0
  4052b2:	mov    rax,QWORD PTR [rbp-0x18]
  4052b6:	mov    DWORD PTR [rax+0xf0],0x0
  4052c0:	mov    rax,QWORD PTR [rbp-0x18]
  4052c4:	mov    DWORD PTR [rax+0xf4],0x0
  4052ce:	mov    rax,QWORD PTR [rbp-0x18]
  4052d2:	mov    DWORD PTR [rax+0x104],0x0
  4052dc:	mov    rax,QWORD PTR [rbp-0x18]
  4052e0:	mov    DWORD PTR [rax+0x108],0x0
  4052ea:	mov    rax,QWORD PTR [rbp-0x18]
  4052ee:	mov    DWORD PTR [rax+0x20],0x0
  4052f5:	mov    rax,QWORD PTR [rbp-0x18]
  4052f9:	mov    DWORD PTR [rax+0x24],0x0
  405300:	mov    rax,QWORD PTR [rbp-0x18]
  405304:	mov    DWORD PTR [rax+0xfc],0x0
  40530e:	mov    rax,QWORD PTR [rbp-0x18]
  405312:	mov    DWORD PTR [rax+0x100],0x0
  40531c:	mov    rax,QWORD PTR [rbp-0x18]
  405320:	mov    rdx,QWORD PTR [rax+0x68]
  405324:	mov    rax,QWORD PTR [rbp-0x18]
  405328:	mov    QWORD PTR [rax+0x18],rdx
  40532c:	mov    rax,QWORD PTR [rbp-0x18]
  405330:	mov    rdx,QWORD PTR [rax+0x88]
  405337:	mov    rax,QWORD PTR [rbp-0x18]
  40533b:	mov    QWORD PTR [rax],rdx
  40533e:	mov    rax,QWORD PTR [rbp-0x18]
  405342:	mov    rdx,QWORD PTR [rax+0x58]
  405346:	mov    rax,QWORD PTR [rbp-0x18]
  40534a:	mov    QWORD PTR [rax+0x8],rdx
  40534e:	mov    rax,QWORD PTR [rbp-0x18]
  405352:	mov    QWORD PTR [rax+0x30],0x0
  40535a:	cmp    DWORD PTR [rbp-0x1c],0x0
  40535e:	je     40538b <flatcc_builder_custom_reset@@Base+0x1ea>
  405360:	mov    rax,QWORD PTR [rbp-0x18]
  405364:	mov    QWORD PTR [rax+0x118],0x0
  40536f:	mov    rax,QWORD PTR [rbp-0x18]
  405373:	mov    DWORD PTR [rax+0x120],0x0
  40537d:	mov    rax,QWORD PTR [rbp-0x18]
  405381:	mov    DWORD PTR [rax+0x124],0x0
  40538b:	mov    rax,QWORD PTR [rbp-0x18]
  40538f:	mov    eax,DWORD PTR [rax+0x128]
  405395:	test   eax,eax
  405397:	je     4053ab <flatcc_builder_custom_reset@@Base+0x20a>
  405399:	mov    rax,QWORD PTR [rbp-0x18]
  40539d:	add    rax,0x130
  4053a3:	mov    rdi,rax
  4053a6:	call   40a2e1 <flatcc_emitter_reset@@Base>
  4053ab:	mov    eax,0x0
  4053b0:	leave  
  4053b1:	ret    

00000000004053b2 <flatcc_builder_reset@@Base>:
  4053b2:	push   rbp
  4053b3:	mov    rbp,rsp
  4053b6:	sub    rsp,0x10
  4053ba:	mov    QWORD PTR [rbp-0x8],rdi
  4053be:	mov    rax,QWORD PTR [rbp-0x8]
  4053c2:	mov    edx,0x0
  4053c7:	mov    esi,0x0
  4053cc:	mov    rdi,rax
  4053cf:	call   4051a1 <flatcc_builder_custom_reset@@Base>
  4053d4:	leave  
  4053d5:	ret    

00000000004053d6 <flatcc_builder_clear@@Base>:
  4053d6:	push   rbp
  4053d7:	mov    rbp,rsp
  4053da:	sub    rsp,0x20
  4053de:	mov    QWORD PTR [rbp-0x18],rdi
  4053e2:	mov    DWORD PTR [rbp-0xc],0x0
  4053e9:	jmp    40542d <flatcc_builder_clear@@Base+0x57>
  4053eb:	mov    rax,QWORD PTR [rbp-0x18]
  4053ef:	lea    rdx,[rax+0x58]
  4053f3:	mov    eax,DWORD PTR [rbp-0xc]
  4053f6:	cdqe   
  4053f8:	shl    rax,0x4
  4053fc:	add    rax,rdx
  4053ff:	mov    QWORD PTR [rbp-0x8],rax
  405403:	mov    rax,QWORD PTR [rbp-0x18]
  405407:	mov    rax,QWORD PTR [rax+0x50]
  40540b:	mov    rdx,QWORD PTR [rbp-0x18]
  40540f:	mov    rdi,QWORD PTR [rdx+0x40]
  405413:	mov    edx,DWORD PTR [rbp-0xc]
  405416:	mov    rsi,QWORD PTR [rbp-0x8]
  40541a:	mov    r8d,edx
  40541d:	mov    ecx,0x0
  405422:	mov    edx,0x0
  405427:	call   rax
  405429:	add    DWORD PTR [rbp-0xc],0x1
  40542d:	cmp    DWORD PTR [rbp-0xc],0x7
  405431:	jle    4053eb <flatcc_builder_clear@@Base+0x15>
  405433:	mov    rax,QWORD PTR [rbp-0x18]
  405437:	mov    eax,DWORD PTR [rax+0x128]
  40543d:	test   eax,eax
  40543f:	je     405453 <flatcc_builder_clear@@Base+0x7d>
  405441:	mov    rax,QWORD PTR [rbp-0x18]
  405445:	add    rax,0x130
  40544b:	mov    rdi,rax
  40544e:	call   40a46d <flatcc_emitter_clear@@Base>
  405453:	mov    rax,QWORD PTR [rbp-0x18]
  405457:	mov    edx,0x188
  40545c:	mov    esi,0x0
  405461:	mov    rdi,rax
  405464:	call   403080 <memset@plt>
  405469:	nop
  40546a:	leave  
  40546b:	ret    
  40546c:	push   rbp
  40546d:	mov    rbp,rsp
  405470:	mov    QWORD PTR [rbp-0x8],rdi
  405474:	mov    eax,esi
  405476:	mov    WORD PTR [rbp-0xc],ax
  40547a:	mov    rax,QWORD PTR [rbp-0x8]
  40547e:	movzx  eax,WORD PTR [rax+0xe8]
  405485:	cmp    ax,WORD PTR [rbp-0xc]
  405489:	jae    40549a <flatcc_builder_clear@@Base+0xc4>
  40548b:	mov    rax,QWORD PTR [rbp-0x8]
  40548f:	movzx  edx,WORD PTR [rbp-0xc]
  405493:	mov    WORD PTR [rax+0xe8],dx
  40549a:	nop
  40549b:	pop    rbp
  40549c:	ret    
  40549d:	push   rbp
  40549e:	mov    rbp,rsp
  4054a1:	mov    QWORD PTR [rbp-0x8],rdi
  4054a5:	mov    eax,esi
  4054a7:	mov    WORD PTR [rbp-0xc],ax
  4054ab:	mov    rax,QWORD PTR [rbp-0x8]
  4054af:	movzx  eax,WORD PTR [rax]
  4054b2:	cmp    ax,WORD PTR [rbp-0xc]
  4054b6:	jae    4054c3 <flatcc_builder_clear@@Base+0xed>
  4054b8:	mov    rax,QWORD PTR [rbp-0x8]
  4054bc:	movzx  edx,WORD PTR [rbp-0xc]
  4054c0:	mov    WORD PTR [rax],dx
  4054c3:	nop
  4054c4:	pop    rbp
  4054c5:	ret    

00000000004054c6 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4054c6:	push   rbp
  4054c7:	mov    rbp,rsp
  4054ca:	sub    rsp,0x20
  4054ce:	mov    QWORD PTR [rbp-0x18],rdi
  4054d2:	mov    QWORD PTR [rbp-0x20],rsi
  4054d6:	mov    rax,QWORD PTR [rbp-0x20]
  4054da:	add    rax,0x7
  4054de:	and    rax,0xfffffffffffffff8
  4054e2:	add    rax,0x8
  4054e6:	mov    QWORD PTR [rbp-0x20],rax
  4054ea:	mov    rax,QWORD PTR [rbp-0x18]
  4054ee:	mov    rdx,QWORD PTR [rax+0x180]
  4054f5:	mov    rcx,QWORD PTR [rbp-0x20]
  4054f9:	mov    rax,QWORD PTR [rbp-0x18]
  4054fd:	mov    r8d,0x0
  405503:	mov    esi,0x7
  405508:	mov    rdi,rax
  40550b:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  405510:	mov    QWORD PTR [rbp-0x8],rax
  405514:	cmp    QWORD PTR [rbp-0x8],0x0
  405519:	jne    405522 <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  40551b:	mov    eax,0x0
  405520:	jmp    40558c <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  405522:	mov    rdx,QWORD PTR [rbp-0x20]
  405526:	mov    rax,QWORD PTR [rbp-0x8]
  40552a:	mov    esi,0x0
  40552f:	mov    rdi,rax
  405532:	call   403080 <memset@plt>
  405537:	mov    rax,QWORD PTR [rbp-0x8]
  40553b:	lea    rdx,[rax+0x8]
  40553f:	mov    QWORD PTR [rbp-0x8],rdx
  405543:	mov    rdx,QWORD PTR [rbp-0x18]
  405547:	mov    rdx,QWORD PTR [rdx+0x178]
  40554e:	mov    QWORD PTR [rax],rdx
  405551:	mov    rax,QWORD PTR [rbp-0x18]
  405555:	mov    rax,QWORD PTR [rax+0x180]
  40555c:	lea    rdx,[rax+0x8]
  405560:	mov    rax,QWORD PTR [rbp-0x18]
  405564:	mov    QWORD PTR [rax+0x178],rdx
  40556b:	mov    rax,QWORD PTR [rbp-0x18]
  40556f:	mov    rdx,QWORD PTR [rax+0x180]
  405576:	mov    rax,QWORD PTR [rbp-0x20]
  40557a:	add    rdx,rax
  40557d:	mov    rax,QWORD PTR [rbp-0x18]
  405581:	mov    QWORD PTR [rax+0x180],rdx
  405588:	mov    rax,QWORD PTR [rbp-0x8]
  40558c:	leave  
  40558d:	ret    

000000000040558e <flatcc_builder_enter_user_frame@@Base>:
  40558e:	push   rbp
  40558f:	mov    rbp,rsp
  405592:	sub    rsp,0x20
  405596:	mov    QWORD PTR [rbp-0x18],rdi
  40559a:	mov    QWORD PTR [rbp-0x20],rsi
  40559e:	mov    rax,QWORD PTR [rbp-0x20]
  4055a2:	add    rax,0x7
  4055a6:	and    rax,0xfffffffffffffff8
  4055aa:	add    rax,0x8
  4055ae:	mov    QWORD PTR [rbp-0x20],rax
  4055b2:	mov    rax,QWORD PTR [rbp-0x18]
  4055b6:	mov    rdx,QWORD PTR [rax+0x180]
  4055bd:	mov    rcx,QWORD PTR [rbp-0x20]
  4055c1:	mov    rax,QWORD PTR [rbp-0x18]
  4055c5:	mov    r8d,0x0
  4055cb:	mov    esi,0x7
  4055d0:	mov    rdi,rax
  4055d3:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  4055d8:	mov    QWORD PTR [rbp-0x8],rax
  4055dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4055e1:	jne    4055ea <flatcc_builder_enter_user_frame@@Base+0x5c>
  4055e3:	mov    eax,0x0
  4055e8:	jmp    40565b <flatcc_builder_enter_user_frame@@Base+0xcd>
  4055ea:	mov    rdx,QWORD PTR [rbp-0x20]
  4055ee:	mov    rax,QWORD PTR [rbp-0x8]
  4055f2:	mov    esi,0x0
  4055f7:	mov    rdi,rax
  4055fa:	call   403080 <memset@plt>
  4055ff:	mov    rax,QWORD PTR [rbp-0x8]
  405603:	lea    rdx,[rax+0x8]
  405607:	mov    QWORD PTR [rbp-0x8],rdx
  40560b:	mov    rdx,QWORD PTR [rbp-0x18]
  40560f:	mov    rdx,QWORD PTR [rdx+0x178]
  405616:	mov    QWORD PTR [rax],rdx
  405619:	mov    rax,QWORD PTR [rbp-0x18]
  40561d:	mov    rax,QWORD PTR [rax+0x180]
  405624:	lea    rdx,[rax+0x8]
  405628:	mov    rax,QWORD PTR [rbp-0x18]
  40562c:	mov    QWORD PTR [rax+0x178],rdx
  405633:	mov    rax,QWORD PTR [rbp-0x18]
  405637:	mov    rdx,QWORD PTR [rax+0x180]
  40563e:	mov    rax,QWORD PTR [rbp-0x20]
  405642:	add    rdx,rax
  405645:	mov    rax,QWORD PTR [rbp-0x18]
  405649:	mov    QWORD PTR [rax+0x180],rdx
  405650:	mov    rax,QWORD PTR [rbp-0x18]
  405654:	mov    rax,QWORD PTR [rax+0x178]
  40565b:	leave  
  40565c:	ret    

000000000040565d <flatcc_builder_exit_user_frame@@Base>:
  40565d:	push   rbp
  40565e:	mov    rbp,rsp
  405661:	sub    rsp,0x20
  405665:	mov    QWORD PTR [rbp-0x18],rdi
  405669:	mov    rax,QWORD PTR [rbp-0x18]
  40566d:	mov    rax,QWORD PTR [rax+0x178]
  405674:	test   rax,rax
  405677:	jne    405698 <flatcc_builder_exit_user_frame@@Base+0x3b>
  405679:	lea    rcx,[rip+0x81d0]        # 40d850 <flatcc_builder_padding_base@@Base+0x690>
  405680:	mov    edx,0x21e
  405685:	lea    rsi,[rip+0x7d34]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40568c:	lea    rdi,[rip+0x7db0]        # 40d443 <flatcc_builder_padding_base@@Base+0x283>
  405693:	call   403070 <__assert_fail@plt>
  405698:	mov    rax,QWORD PTR [rbp-0x18]
  40569c:	mov    rdx,QWORD PTR [rax+0xc8]
  4056a3:	mov    rax,QWORD PTR [rbp-0x18]
  4056a7:	mov    rax,QWORD PTR [rax+0x178]
  4056ae:	mov    eax,eax
  4056b0:	add    rax,rdx
  4056b3:	mov    QWORD PTR [rbp-0x8],rax
  4056b7:	mov    rax,QWORD PTR [rbp-0x18]
  4056bb:	mov    rax,QWORD PTR [rax+0x178]
  4056c2:	lea    rdx,[rax-0x8]
  4056c6:	mov    rax,QWORD PTR [rbp-0x18]
  4056ca:	mov    QWORD PTR [rax+0x180],rdx
  4056d1:	mov    rax,QWORD PTR [rbp-0x8]
  4056d5:	mov    rdx,QWORD PTR [rax-0x8]
  4056d9:	mov    rax,QWORD PTR [rbp-0x18]
  4056dd:	mov    QWORD PTR [rax+0x178],rdx
  4056e4:	mov    rax,QWORD PTR [rbp-0x18]
  4056e8:	mov    rax,QWORD PTR [rax+0x178]
  4056ef:	leave  
  4056f0:	ret    

00000000004056f1 <flatcc_builder_exit_user_frame_at@@Base>:
  4056f1:	push   rbp
  4056f2:	mov    rbp,rsp
  4056f5:	sub    rsp,0x10
  4056f9:	mov    QWORD PTR [rbp-0x8],rdi
  4056fd:	mov    QWORD PTR [rbp-0x10],rsi
  405701:	mov    rax,QWORD PTR [rbp-0x8]
  405705:	mov    rax,QWORD PTR [rax+0x178]
  40570c:	cmp    rax,QWORD PTR [rbp-0x10]
  405710:	jae    405731 <flatcc_builder_exit_user_frame_at@@Base+0x40>
  405712:	lea    rcx,[rip+0x8167]        # 40d880 <flatcc_builder_padding_base@@Base+0x6c0>
  405719:	mov    edx,0x227
  40571e:	lea    rsi,[rip+0x7c9b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405725:	lea    rdi,[rip+0x7d34]        # 40d460 <flatcc_builder_padding_base@@Base+0x2a0>
  40572c:	call   403070 <__assert_fail@plt>
  405731:	mov    rax,QWORD PTR [rbp-0x8]
  405735:	mov    rdx,QWORD PTR [rbp-0x10]
  405739:	mov    QWORD PTR [rax+0x178],rdx
  405740:	mov    rax,QWORD PTR [rbp-0x8]
  405744:	mov    rdi,rax
  405747:	call   40565d <flatcc_builder_exit_user_frame@@Base>
  40574c:	leave  
  40574d:	ret    

000000000040574e <flatcc_builder_get_current_user_frame@@Base>:
  40574e:	push   rbp
  40574f:	mov    rbp,rsp
  405752:	mov    QWORD PTR [rbp-0x8],rdi
  405756:	mov    rax,QWORD PTR [rbp-0x8]
  40575a:	mov    rax,QWORD PTR [rax+0x178]
  405761:	pop    rbp
  405762:	ret    

0000000000405763 <flatcc_builder_get_user_frame_ptr@@Base>:
  405763:	push   rbp
  405764:	mov    rbp,rsp
  405767:	mov    QWORD PTR [rbp-0x8],rdi
  40576b:	mov    QWORD PTR [rbp-0x10],rsi
  40576f:	mov    rax,QWORD PTR [rbp-0x8]
  405773:	mov    rax,QWORD PTR [rax+0xc8]
  40577a:	mov    rdx,QWORD PTR [rbp-0x10]
  40577e:	mov    edx,edx
  405780:	add    rax,rdx
  405783:	pop    rbp
  405784:	ret    
  405785:	push   rbp
  405786:	mov    rbp,rsp
  405789:	sub    rsp,0x10
  40578d:	mov    QWORD PTR [rbp-0x8],rdi
  405791:	mov    eax,esi
  405793:	mov    WORD PTR [rbp-0xc],ax
  405797:	mov    rax,QWORD PTR [rbp-0x8]
  40579b:	mov    eax,DWORD PTR [rax+0x104]
  4057a1:	lea    edx,[rax+0x1]
  4057a4:	mov    rax,QWORD PTR [rbp-0x8]
  4057a8:	mov    DWORD PTR [rax+0x104],edx
  4057ae:	mov    rax,QWORD PTR [rbp-0x8]
  4057b2:	mov    edx,DWORD PTR [rax+0x104]
  4057b8:	mov    rax,QWORD PTR [rbp-0x8]
  4057bc:	mov    eax,DWORD PTR [rax+0x108]
  4057c2:	cmp    edx,eax
  4057c4:	jle    4058c0 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  4057ca:	mov    rax,QWORD PTR [rbp-0x8]
  4057ce:	mov    eax,DWORD PTR [rax+0x120]
  4057d4:	test   eax,eax
  4057d6:	jle    4057fa <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  4057d8:	mov    rax,QWORD PTR [rbp-0x8]
  4057dc:	mov    edx,DWORD PTR [rax+0x104]
  4057e2:	mov    rax,QWORD PTR [rbp-0x8]
  4057e6:	mov    eax,DWORD PTR [rax+0x120]
  4057ec:	cmp    edx,eax
  4057ee:	jle    4057fa <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  4057f0:	mov    eax,0xffffffff
  4057f5:	jmp    40595b <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  4057fa:	mov    rax,QWORD PTR [rbp-0x8]
  4057fe:	mov    eax,DWORD PTR [rax+0x104]
  405804:	sub    eax,0x1
  405807:	movsxd rdx,eax
  40580a:	mov    rax,rdx
  40580d:	shl    rax,0x3
  405811:	add    rax,rdx
  405814:	shl    rax,0x2
  405818:	mov    rdx,rax
  40581b:	mov    rax,QWORD PTR [rbp-0x8]
  40581f:	mov    r8d,0x0
  405825:	mov    ecx,0x24
  40582a:	mov    esi,0x4
  40582f:	mov    rdi,rax
  405832:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  405837:	mov    rdx,rax
  40583a:	mov    rax,QWORD PTR [rbp-0x8]
  40583e:	mov    QWORD PTR [rax+0x30],rdx
  405842:	mov    rax,QWORD PTR [rbp-0x8]
  405846:	mov    rax,QWORD PTR [rax+0x30]
  40584a:	test   rax,rax
  40584d:	jne    405859 <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  40584f:	mov    eax,0xffffffff
  405854:	jmp    40595b <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  405859:	mov    rax,QWORD PTR [rbp-0x8]
  40585d:	mov    rax,QWORD PTR [rax+0xa0]
  405864:	movabs rdx,0xe38e38e38e38e38f
  40586e:	mul    rdx
  405871:	mov    rax,rdx
  405874:	shr    rax,0x5
  405878:	mov    edx,eax
  40587a:	mov    rax,QWORD PTR [rbp-0x8]
  40587e:	mov    DWORD PTR [rax+0x108],edx
  405884:	mov    rax,QWORD PTR [rbp-0x8]
  405888:	mov    eax,DWORD PTR [rax+0x120]
  40588e:	test   eax,eax
  405890:	jle    4058d4 <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  405892:	mov    rax,QWORD PTR [rbp-0x8]
  405896:	mov    edx,DWORD PTR [rax+0x120]
  40589c:	mov    rax,QWORD PTR [rbp-0x8]
  4058a0:	mov    eax,DWORD PTR [rax+0x108]
  4058a6:	cmp    edx,eax
  4058a8:	jge    4058d4 <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  4058aa:	mov    rax,QWORD PTR [rbp-0x8]
  4058ae:	mov    edx,DWORD PTR [rax+0x120]
  4058b4:	mov    rax,QWORD PTR [rbp-0x8]
  4058b8:	mov    DWORD PTR [rax+0x108],edx
  4058be:	jmp    4058d4 <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  4058c0:	mov    rax,QWORD PTR [rbp-0x8]
  4058c4:	mov    rax,QWORD PTR [rax+0x30]
  4058c8:	lea    rdx,[rax+0x24]
  4058cc:	mov    rax,QWORD PTR [rbp-0x8]
  4058d0:	mov    QWORD PTR [rax+0x30],rdx
  4058d4:	mov    rax,QWORD PTR [rbp-0x8]
  4058d8:	mov    rax,QWORD PTR [rax+0x30]
  4058dc:	mov    rdx,QWORD PTR [rbp-0x8]
  4058e0:	mov    edx,DWORD PTR [rdx+0x20]
  4058e3:	mov    DWORD PTR [rax+0x8],edx
  4058e6:	mov    rax,QWORD PTR [rbp-0x8]
  4058ea:	mov    rax,QWORD PTR [rax+0x30]
  4058ee:	mov    rdx,QWORD PTR [rbp-0x8]
  4058f2:	movzx  edx,WORD PTR [rdx+0xea]
  4058f9:	mov    WORD PTR [rax+0xc],dx
  4058fd:	mov    rax,QWORD PTR [rbp-0x8]
  405901:	movzx  edx,WORD PTR [rbp-0xc]
  405905:	mov    WORD PTR [rax+0xea],dx
  40590c:	mov    rax,QWORD PTR [rbp-0x8]
  405910:	mov    rax,QWORD PTR [rax+0x30]
  405914:	mov    rdx,QWORD PTR [rbp-0x8]
  405918:	mov    edx,DWORD PTR [rdx+0x28]
  40591b:	mov    DWORD PTR [rax],edx
  40591d:	mov    rax,QWORD PTR [rbp-0x8]
  405921:	mov    rax,QWORD PTR [rax+0x30]
  405925:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40592c:	mov    rax,QWORD PTR [rbp-0x8]
  405930:	mov    edx,DWORD PTR [rax+0x28]
  405933:	mov    rax,QWORD PTR [rbp-0x8]
  405937:	mov    eax,DWORD PTR [rax+0x20]
  40593a:	add    eax,edx
  40593c:	add    eax,0x7
  40593f:	and    eax,0xfffffff8
  405942:	mov    edx,eax
  405944:	mov    rax,QWORD PTR [rbp-0x8]
  405948:	mov    DWORD PTR [rax+0x28],edx
  40594b:	mov    rax,QWORD PTR [rbp-0x8]
  40594f:	mov    DWORD PTR [rax+0x20],0x0
  405956:	mov    eax,0x0
  40595b:	leave  
  40595c:	ret    
  40595d:	push   rbp
  40595e:	mov    rbp,rsp
  405961:	sub    rsp,0x10
  405965:	mov    QWORD PTR [rbp-0x8],rdi
  405969:	mov    rax,QWORD PTR [rbp-0x8]
  40596d:	mov    eax,DWORD PTR [rax+0x20]
  405970:	mov    edx,eax
  405972:	mov    rax,QWORD PTR [rbp-0x8]
  405976:	mov    rax,QWORD PTR [rax+0x18]
  40597a:	mov    esi,0x0
  40597f:	mov    rdi,rax
  405982:	call   403080 <memset@plt>
  405987:	mov    rax,QWORD PTR [rbp-0x8]
  40598b:	mov    rax,QWORD PTR [rax+0x30]
  40598f:	mov    edx,DWORD PTR [rax+0x8]
  405992:	mov    rax,QWORD PTR [rbp-0x8]
  405996:	mov    DWORD PTR [rax+0x20],edx
  405999:	mov    rax,QWORD PTR [rbp-0x8]
  40599d:	mov    rax,QWORD PTR [rax+0x30]
  4059a1:	mov    edx,DWORD PTR [rax]
  4059a3:	mov    rax,QWORD PTR [rbp-0x8]
  4059a7:	mov    DWORD PTR [rax+0x28],edx
  4059aa:	mov    rax,QWORD PTR [rbp-0x8]
  4059ae:	mov    rax,QWORD PTR [rax+0x30]
  4059b2:	mov    edx,DWORD PTR [rax+0x4]
  4059b5:	mov    rax,QWORD PTR [rbp-0x8]
  4059b9:	mov    esi,edx
  4059bb:	mov    rdi,rax
  4059be:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  4059c3:	mov    rax,QWORD PTR [rbp-0x8]
  4059c7:	movzx  eax,WORD PTR [rax+0xea]
  4059ce:	movzx  edx,ax
  4059d1:	mov    rax,QWORD PTR [rbp-0x8]
  4059d5:	mov    esi,edx
  4059d7:	mov    rdi,rax
  4059da:	call   40546c <flatcc_builder_clear@@Base+0x96>
  4059df:	mov    rax,QWORD PTR [rbp-0x8]
  4059e3:	mov    rax,QWORD PTR [rax+0x30]
  4059e7:	movzx  edx,WORD PTR [rax+0xc]
  4059eb:	mov    rax,QWORD PTR [rbp-0x8]
  4059ef:	mov    WORD PTR [rax+0xea],dx
  4059f6:	mov    rax,QWORD PTR [rbp-0x8]
  4059fa:	mov    rax,QWORD PTR [rax+0x30]
  4059fe:	lea    rdx,[rax-0x24]
  405a02:	mov    rax,QWORD PTR [rbp-0x8]
  405a06:	mov    QWORD PTR [rax+0x30],rdx
  405a0a:	mov    rax,QWORD PTR [rbp-0x8]
  405a0e:	mov    eax,DWORD PTR [rax+0x104]
  405a14:	lea    edx,[rax-0x1]
  405a17:	mov    rax,QWORD PTR [rbp-0x8]
  405a1b:	mov    DWORD PTR [rax+0x104],edx
  405a21:	nop
  405a22:	leave  
  405a23:	ret    
  405a24:	push   rbp
  405a25:	mov    rbp,rsp
  405a28:	mov    QWORD PTR [rbp-0x8],rdi
  405a2c:	mov    DWORD PTR [rbp-0xc],esi
  405a2f:	mov    eax,edx
  405a31:	mov    WORD PTR [rbp-0x10],ax
  405a35:	mov    rax,QWORD PTR [rbp-0x8]
  405a39:	mov    eax,DWORD PTR [rax+0xf0]
  405a3f:	sub    eax,DWORD PTR [rbp-0xc]
  405a42:	movzx  edx,WORD PTR [rbp-0x10]
  405a46:	sub    edx,0x1
  405a49:	and    eax,edx
  405a4b:	pop    rbp
  405a4c:	ret    
  405a4d:	push   rbp
  405a4e:	mov    rbp,rsp
  405a51:	mov    QWORD PTR [rbp-0x8],rdi
  405a55:	mov    eax,esi
  405a57:	mov    WORD PTR [rbp-0xc],ax
  405a5b:	mov    rax,QWORD PTR [rbp-0x8]
  405a5f:	mov    eax,DWORD PTR [rax+0xf4]
  405a65:	movzx  edx,WORD PTR [rbp-0xc]
  405a69:	sub    edx,0x1
  405a6c:	and    eax,edx
  405a6e:	pop    rbp
  405a6f:	ret    
  405a70:	push   rbp
  405a71:	mov    rbp,rsp
  405a74:	sub    rsp,0x20
  405a78:	mov    QWORD PTR [rbp-0x18],rdi
  405a7c:	mov    QWORD PTR [rbp-0x20],rsi
  405a80:	mov    rax,QWORD PTR [rbp-0x18]
  405a84:	mov    edx,DWORD PTR [rax+0xf0]
  405a8a:	mov    rax,QWORD PTR [rbp-0x20]
  405a8e:	mov    rax,QWORD PTR [rax]
  405a91:	sub    edx,eax
  405a93:	mov    eax,edx
  405a95:	mov    DWORD PTR [rbp-0x4],eax
  405a98:	mov    rax,QWORD PTR [rbp-0x20]
  405a9c:	mov    rax,QWORD PTR [rax]
  405a9f:	cmp    rax,0x10
  405aa3:	jbe    405aba <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  405aa5:	mov    rax,QWORD PTR [rbp-0x20]
  405aa9:	mov    rax,QWORD PTR [rax]
  405aac:	lea    rdx,[rax-0x10]
  405ab0:	mov    eax,0xffffffff
  405ab5:	cmp    rdx,rax
  405ab8:	ja     405ac9 <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  405aba:	mov    rax,QWORD PTR [rbp-0x18]
  405abe:	mov    eax,DWORD PTR [rax+0xf0]
  405ac4:	cmp    eax,DWORD PTR [rbp-0x4]
  405ac7:	jg     405ae8 <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  405ac9:	lea    rcx,[rip+0x7df8]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405ad0:	mov    edx,0x287
  405ad5:	lea    rsi,[rip+0x78e4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405adc:	lea    rdi,[rip+0x793d]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405ae3:	call   403070 <__assert_fail@plt>
  405ae8:	mov    rax,QWORD PTR [rbp-0x18]
  405aec:	mov    rax,QWORD PTR [rax+0x48]
  405af0:	mov    rdx,QWORD PTR [rbp-0x20]
  405af4:	mov    r8,QWORD PTR [rdx]
  405af7:	mov    rdx,QWORD PTR [rbp-0x20]
  405afb:	mov    edx,DWORD PTR [rdx+0x8]
  405afe:	mov    rcx,QWORD PTR [rbp-0x20]
  405b02:	lea    rsi,[rcx+0x10]
  405b06:	mov    rcx,QWORD PTR [rbp-0x18]
  405b0a:	mov    rdi,QWORD PTR [rcx+0x38]
  405b0e:	mov    ecx,DWORD PTR [rbp-0x4]
  405b11:	call   rax
  405b13:	test   eax,eax
  405b15:	je     405b36 <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  405b17:	lea    rcx,[rip+0x7daa]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405b1e:	mov    edx,0x28b
  405b23:	lea    rsi,[rip+0x7896]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405b2a:	lea    rdi,[rip+0x78ef]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405b31:	call   403070 <__assert_fail@plt>
  405b36:	mov    rax,QWORD PTR [rbp-0x18]
  405b3a:	mov    edx,DWORD PTR [rbp-0x4]
  405b3d:	mov    DWORD PTR [rax+0xf0],edx
  405b43:	mov    rax,QWORD PTR [rbp-0x18]
  405b47:	mov    eax,DWORD PTR [rax+0xf0]
  405b4d:	leave  
  405b4e:	ret    
  405b4f:	push   rbp
  405b50:	mov    rbp,rsp
  405b53:	sub    rsp,0x20
  405b57:	mov    QWORD PTR [rbp-0x18],rdi
  405b5b:	mov    QWORD PTR [rbp-0x20],rsi
  405b5f:	mov    rax,QWORD PTR [rbp-0x18]
  405b63:	mov    eax,DWORD PTR [rax+0xf4]
  405b69:	mov    DWORD PTR [rbp-0x4],eax
  405b6c:	mov    rax,QWORD PTR [rbp-0x20]
  405b70:	mov    rax,QWORD PTR [rax]
  405b73:	mov    edx,eax
  405b75:	mov    eax,DWORD PTR [rbp-0x4]
  405b78:	add    edx,eax
  405b7a:	mov    rax,QWORD PTR [rbp-0x18]
  405b7e:	mov    DWORD PTR [rax+0xf4],edx
  405b84:	mov    rax,QWORD PTR [rbp-0x18]
  405b88:	mov    eax,DWORD PTR [rax+0xf4]
  405b8e:	cmp    eax,DWORD PTR [rbp-0x4]
  405b91:	jge    405bb2 <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  405b93:	lea    rcx,[rip+0x7d1e]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405b9a:	mov    edx,0x2a1
  405b9f:	lea    rsi,[rip+0x781a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405ba6:	lea    rdi,[rip+0x7873]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405bad:	call   403070 <__assert_fail@plt>
  405bb2:	mov    rax,QWORD PTR [rbp-0x18]
  405bb6:	mov    rax,QWORD PTR [rax+0x48]
  405bba:	mov    rdx,QWORD PTR [rbp-0x20]
  405bbe:	mov    r8,QWORD PTR [rdx]
  405bc1:	mov    rdx,QWORD PTR [rbp-0x20]
  405bc5:	mov    edx,DWORD PTR [rdx+0x8]
  405bc8:	mov    rcx,QWORD PTR [rbp-0x20]
  405bcc:	lea    rsi,[rcx+0x10]
  405bd0:	mov    rcx,QWORD PTR [rbp-0x18]
  405bd4:	mov    rdi,QWORD PTR [rcx+0x38]
  405bd8:	mov    ecx,DWORD PTR [rbp-0x4]
  405bdb:	call   rax
  405bdd:	test   eax,eax
  405bdf:	je     405c00 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  405be1:	lea    rcx,[rip+0x7cd0]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405be8:	mov    edx,0x2a5
  405bed:	lea    rsi,[rip+0x77cc]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405bf4:	lea    rdi,[rip+0x7825]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405bfb:	call   403070 <__assert_fail@plt>
  405c00:	mov    eax,DWORD PTR [rbp-0x4]
  405c03:	add    eax,0x1
  405c06:	leave  
  405c07:	ret    
  405c08:	push   rbp
  405c09:	mov    rbp,rsp
  405c0c:	sub    rsp,0xd0
  405c13:	mov    QWORD PTR [rbp-0xb8],rdi
  405c1a:	mov    QWORD PTR [rbp-0xc0],rsi
  405c21:	mov    eax,edx
  405c23:	mov    DWORD PTR [rbp-0xc8],ecx
  405c29:	mov    WORD PTR [rbp-0xc4],ax
  405c30:	mov    rax,QWORD PTR fs:0x28
  405c39:	mov    QWORD PTR [rbp-0x8],rax
  405c3d:	xor    eax,eax
  405c3f:	cmp    WORD PTR [rbp-0xc4],0x0
  405c47:	jne    405c73 <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  405c49:	mov    rax,QWORD PTR [rbp-0xb8]
  405c50:	movzx  eax,WORD PTR [rax+0xec]
  405c57:	test   ax,ax
  405c5a:	je     405c6c <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  405c5c:	mov    rax,QWORD PTR [rbp-0xb8]
  405c63:	movzx  eax,WORD PTR [rax+0xec]
  405c6a:	jmp    405c7a <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  405c6c:	mov    eax,0x1
  405c71:	jmp    405c7a <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  405c73:	movzx  eax,WORD PTR [rbp-0xc4]
  405c7a:	mov    WORD PTR [rbp-0xc4],ax
  405c81:	mov    rax,QWORD PTR [rbp-0xc0]
  405c88:	mov    esi,0x4
  405c8d:	mov    rdi,rax
  405c90:	call   40549d <flatcc_builder_clear@@Base+0xc7>
  405c95:	movzx  edx,WORD PTR [rbp-0xc4]
  405c9c:	mov    rax,QWORD PTR [rbp-0xc0]
  405ca3:	mov    esi,edx
  405ca5:	mov    rdi,rax
  405ca8:	call   40549d <flatcc_builder_clear@@Base+0xc7>
  405cad:	cmp    DWORD PTR [rbp-0xc8],0x0
  405cb4:	jne    405daa <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405cba:	movzx  edx,WORD PTR [rbp-0xc4]
  405cc1:	mov    rax,QWORD PTR [rbp-0xb8]
  405cc8:	mov    esi,edx
  405cca:	mov    rdi,rax
  405ccd:	call   405a4d <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  405cd2:	mov    eax,eax
  405cd4:	mov    QWORD PTR [rbp-0xa8],rax
  405cdb:	cmp    QWORD PTR [rbp-0xa8],0x0
  405ce3:	je     405daa <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405ce9:	mov    QWORD PTR [rbp-0xa0],0x0
  405cf4:	mov    DWORD PTR [rbp-0x98],0x0
  405cfe:	cmp    QWORD PTR [rbp-0xa8],0x0
  405d06:	je     405d6e <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  405d08:	mov    rdx,QWORD PTR [rbp-0xa0]
  405d0f:	mov    rax,QWORD PTR [rbp-0xa8]
  405d16:	add    rax,rdx
  405d19:	mov    QWORD PTR [rbp-0xa0],rax
  405d20:	mov    eax,DWORD PTR [rbp-0x98]
  405d26:	cdqe   
  405d28:	shl    rax,0x4
  405d2c:	add    rax,rbp
  405d2f:	sub    rax,0x90
  405d35:	mov    rdx,0x40d1c0
  405d3c:	mov    QWORD PTR [rax],rdx
  405d3f:	mov    eax,DWORD PTR [rbp-0x98]
  405d45:	cdqe   
  405d47:	shl    rax,0x4
  405d4b:	add    rax,rbp
  405d4e:	lea    rdx,[rax-0x88]
  405d55:	mov    rax,QWORD PTR [rbp-0xa8]
  405d5c:	mov    QWORD PTR [rdx],rax
  405d5f:	mov    eax,DWORD PTR [rbp-0x98]
  405d65:	add    eax,0x1
  405d68:	mov    DWORD PTR [rbp-0x98],eax
  405d6e:	lea    rdx,[rbp-0xa0]
  405d75:	mov    rax,QWORD PTR [rbp-0xb8]
  405d7c:	mov    rsi,rdx
  405d7f:	mov    rdi,rax
  405d82:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  405d87:	test   eax,eax
  405d89:	jne    405daa <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405d8b:	lea    rcx,[rip+0x7b16]        # 40d8a8 <flatcc_builder_padding_base@@Base+0x6e8>
  405d92:	mov    edx,0x2be
  405d97:	lea    rsi,[rip+0x7622]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405d9e:	lea    rdi,[rip+0x767b]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405da5:	call   403070 <__assert_fail@plt>
  405daa:	mov    eax,0x0
  405daf:	mov    rcx,QWORD PTR [rbp-0x8]
  405db3:	xor    rcx,QWORD PTR fs:0x28
  405dbc:	je     405dc3 <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  405dbe:	call   403060 <__stack_chk_fail@plt>
  405dc3:	leave  
  405dc4:	ret    

0000000000405dc5 <flatcc_builder_embed_buffer@@Base>:
  405dc5:	push   rbp
  405dc6:	mov    rbp,rsp
  405dc9:	sub    rsp,0xe0
  405dd0:	mov    QWORD PTR [rbp-0xb8],rdi
  405dd7:	mov    eax,esi
  405dd9:	mov    QWORD PTR [rbp-0xc8],rdx
  405de0:	mov    QWORD PTR [rbp-0xd0],rcx
  405de7:	mov    edx,r8d
  405dea:	mov    DWORD PTR [rbp-0xd4],r9d
  405df1:	mov    WORD PTR [rbp-0xbc],ax
  405df8:	mov    WORD PTR [rbp-0xc0],dx
  405dff:	mov    rax,QWORD PTR fs:0x28
  405e08:	mov    QWORD PTR [rbp-0x8],rax
  405e0c:	xor    eax,eax
  405e0e:	mov    eax,DWORD PTR [rbp-0xd4]
  405e14:	and    eax,0x2
  405e17:	mov    DWORD PTR [rbp-0xa8],eax
  405e1d:	mov    rax,QWORD PTR [rbp-0xb8]
  405e24:	mov    eax,DWORD PTR [rax+0x100]
  405e2a:	test   eax,eax
  405e2c:	setne  al
  405e2f:	movzx  ecx,al
  405e32:	movzx  edx,WORD PTR [rbp-0xbc]
  405e39:	lea    rsi,[rbp-0xc0]
  405e40:	mov    rax,QWORD PTR [rbp-0xb8]
  405e47:	mov    rdi,rax
  405e4a:	call   405c08 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  405e4f:	test   eax,eax
  405e51:	je     405e5d <flatcc_builder_embed_buffer@@Base+0x98>
  405e53:	mov    eax,0x0
  405e58:	jmp    406037 <flatcc_builder_embed_buffer@@Base+0x272>
  405e5d:	movzx  eax,WORD PTR [rbp-0xc0]
  405e64:	movzx  edx,ax
  405e67:	mov    rax,QWORD PTR [rbp-0xd0]
  405e6e:	mov    ecx,eax
  405e70:	cmp    DWORD PTR [rbp-0xa8],0x0
  405e77:	je     405e80 <flatcc_builder_embed_buffer@@Base+0xbb>
  405e79:	mov    eax,0x4
  405e7e:	jmp    405e85 <flatcc_builder_embed_buffer@@Base+0xc0>
  405e80:	mov    eax,0x0
  405e85:	add    ecx,eax
  405e87:	mov    rax,QWORD PTR [rbp-0xb8]
  405e8e:	mov    esi,ecx
  405e90:	mov    rdi,rax
  405e93:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  405e98:	mov    DWORD PTR [rbp-0xa4],eax
  405e9e:	mov    rax,QWORD PTR [rbp-0xd0]
  405ea5:	mov    edx,eax
  405ea7:	mov    eax,DWORD PTR [rbp-0xa4]
  405ead:	add    eax,edx
  405eaf:	mov    edi,eax
  405eb1:	call   40475c <main@@Base+0x176>
  405eb6:	mov    DWORD PTR [rbp-0xac],eax
  405ebc:	mov    QWORD PTR [rbp-0xa0],0x0
  405ec7:	mov    DWORD PTR [rbp-0x98],0x0
  405ed1:	mov    rax,QWORD PTR [rbp-0xb8]
  405ed8:	mov    eax,DWORD PTR [rax+0x100]
  405ede:	test   eax,eax
  405ee0:	je     405f3f <flatcc_builder_embed_buffer@@Base+0x17a>
  405ee2:	mov    rax,QWORD PTR [rbp-0xa0]
  405ee9:	add    rax,0x4
  405eed:	mov    QWORD PTR [rbp-0xa0],rax
  405ef4:	mov    eax,DWORD PTR [rbp-0x98]
  405efa:	cdqe   
  405efc:	shl    rax,0x4
  405f00:	add    rax,rbp
  405f03:	lea    rdx,[rax-0x90]
  405f0a:	lea    rax,[rbp-0xac]
  405f11:	mov    QWORD PTR [rdx],rax
  405f14:	mov    eax,DWORD PTR [rbp-0x98]
  405f1a:	cdqe   
  405f1c:	shl    rax,0x4
  405f20:	add    rax,rbp
  405f23:	sub    rax,0x88
  405f29:	mov    QWORD PTR [rax],0x4
  405f30:	mov    eax,DWORD PTR [rbp-0x98]
  405f36:	add    eax,0x1
  405f39:	mov    DWORD PTR [rbp-0x98],eax
  405f3f:	cmp    QWORD PTR [rbp-0xd0],0x0
  405f47:	je     405fb0 <flatcc_builder_embed_buffer@@Base+0x1eb>
  405f49:	mov    rdx,QWORD PTR [rbp-0xa0]
  405f50:	mov    rax,QWORD PTR [rbp-0xd0]
  405f57:	add    rax,rdx
  405f5a:	mov    QWORD PTR [rbp-0xa0],rax
  405f61:	mov    eax,DWORD PTR [rbp-0x98]
  405f67:	cdqe   
  405f69:	shl    rax,0x4
  405f6d:	add    rax,rbp
  405f70:	lea    rdx,[rax-0x90]
  405f77:	mov    rax,QWORD PTR [rbp-0xc8]
  405f7e:	mov    QWORD PTR [rdx],rax
  405f81:	mov    eax,DWORD PTR [rbp-0x98]
  405f87:	cdqe   
  405f89:	shl    rax,0x4
  405f8d:	add    rax,rbp
  405f90:	lea    rdx,[rax-0x88]
  405f97:	mov    rax,QWORD PTR [rbp-0xd0]
  405f9e:	mov    QWORD PTR [rdx],rax
  405fa1:	mov    eax,DWORD PTR [rbp-0x98]
  405fa7:	add    eax,0x1
  405faa:	mov    DWORD PTR [rbp-0x98],eax
  405fb0:	cmp    DWORD PTR [rbp-0xa4],0x0
  405fb7:	je     40601e <flatcc_builder_embed_buffer@@Base+0x259>
  405fb9:	mov    rdx,QWORD PTR [rbp-0xa0]
  405fc0:	mov    eax,DWORD PTR [rbp-0xa4]
  405fc6:	add    rax,rdx
  405fc9:	mov    QWORD PTR [rbp-0xa0],rax
  405fd0:	mov    eax,DWORD PTR [rbp-0x98]
  405fd6:	cdqe   
  405fd8:	shl    rax,0x4
  405fdc:	add    rax,rbp
  405fdf:	sub    rax,0x90
  405fe5:	mov    rdx,0x40d1c0
  405fec:	mov    QWORD PTR [rax],rdx
  405fef:	mov    edx,DWORD PTR [rbp-0x98]
  405ff5:	mov    eax,DWORD PTR [rbp-0xa4]
  405ffb:	movsxd rdx,edx
  405ffe:	shl    rdx,0x4
  406002:	add    rdx,rbp
  406005:	sub    rdx,0x88
  40600c:	mov    QWORD PTR [rdx],rax
  40600f:	mov    eax,DWORD PTR [rbp-0x98]
  406015:	add    eax,0x1
  406018:	mov    DWORD PTR [rbp-0x98],eax
  40601e:	lea    rdx,[rbp-0xa0]
  406025:	mov    rax,QWORD PTR [rbp-0xb8]
  40602c:	mov    rsi,rdx
  40602f:	mov    rdi,rax
  406032:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  406037:	mov    rdi,QWORD PTR [rbp-0x8]
  40603b:	xor    rdi,QWORD PTR fs:0x28
  406044:	je     40604b <flatcc_builder_embed_buffer@@Base+0x286>
  406046:	call   403060 <__stack_chk_fail@plt>
  40604b:	leave  
  40604c:	ret    

000000000040604d <flatcc_builder_create_buffer@@Base>:
  40604d:	push   rbp
  40604e:	mov    rbp,rsp
  406051:	sub    rsp,0xf0
  406058:	mov    QWORD PTR [rbp-0xd8],rdi
  40605f:	mov    QWORD PTR [rbp-0xe0],rsi
  406066:	mov    eax,edx
  406068:	mov    DWORD PTR [rbp-0xe8],ecx
  40606e:	mov    edx,r8d
  406071:	mov    DWORD PTR [rbp-0xf0],r9d
  406078:	mov    WORD PTR [rbp-0xe4],ax
  40607f:	mov    WORD PTR [rbp-0xec],dx
  406086:	mov    rax,QWORD PTR fs:0x28
  40608f:	mov    QWORD PTR [rbp-0x8],rax
  406093:	xor    eax,eax
  406095:	mov    DWORD PTR [rbp-0xb8],0x0
  40609f:	mov    DWORD PTR [rbp-0xbc],0x0
  4060a9:	mov    eax,DWORD PTR [rbp-0xf0]
  4060af:	and    eax,0x1
  4060b2:	test   eax,eax
  4060b4:	setne  al
  4060b7:	movzx  eax,al
  4060ba:	mov    DWORD PTR [rbp-0xb4],eax
  4060c0:	mov    eax,DWORD PTR [rbp-0xf0]
  4060c6:	and    eax,0x2
  4060c9:	test   eax,eax
  4060cb:	setne  al
  4060ce:	movzx  eax,al
  4060d1:	mov    DWORD PTR [rbp-0xb0],eax
  4060d7:	movzx  edx,WORD PTR [rbp-0xe4]
  4060de:	mov    ecx,DWORD PTR [rbp-0xb4]
  4060e4:	lea    rsi,[rbp-0xec]
  4060eb:	mov    rax,QWORD PTR [rbp-0xd8]
  4060f2:	mov    rdi,rax
  4060f5:	call   405c08 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  4060fa:	test   eax,eax
  4060fc:	je     406108 <flatcc_builder_create_buffer@@Base+0xbb>
  4060fe:	mov    eax,0x0
  406103:	jmp    40646e <flatcc_builder_create_buffer@@Base+0x421>
  406108:	movzx  eax,WORD PTR [rbp-0xec]
  40610f:	movzx  edx,ax
  406112:	mov    rax,QWORD PTR [rbp-0xd8]
  406119:	mov    esi,edx
  40611b:	mov    rdi,rax
  40611e:	call   40546c <flatcc_builder_clear@@Base+0x96>
  406123:	cmp    QWORD PTR [rbp-0xe0],0x0
  40612b:	je     406162 <flatcc_builder_create_buffer@@Base+0x115>
  40612d:	mov    rax,QWORD PTR [rbp-0xe0]
  406134:	mov    eax,DWORD PTR [rax]
  406136:	mov    DWORD PTR [rbp-0xbc],eax
  40613c:	mov    eax,DWORD PTR [rbp-0xbc]
  406142:	mov    edi,eax
  406144:	call   404777 <main@@Base+0x191>
  406149:	mov    DWORD PTR [rbp-0xbc],eax
  40614f:	mov    eax,DWORD PTR [rbp-0xbc]
  406155:	mov    edi,eax
  406157:	call   40475c <main@@Base+0x176>
  40615c:	mov    DWORD PTR [rbp-0xbc],eax
  406162:	mov    eax,DWORD PTR [rbp-0xbc]
  406168:	test   eax,eax
  40616a:	je     406173 <flatcc_builder_create_buffer@@Base+0x126>
  40616c:	mov    eax,0x4
  406171:	jmp    406178 <flatcc_builder_create_buffer@@Base+0x12b>
  406173:	mov    eax,0x0
  406178:	mov    DWORD PTR [rbp-0xb8],eax
  40617e:	movzx  eax,WORD PTR [rbp-0xec]
  406185:	movzx  edx,ax
  406188:	cmp    DWORD PTR [rbp-0xb0],0x0
  40618f:	je     406198 <flatcc_builder_create_buffer@@Base+0x14b>
  406191:	mov    ecx,0x4
  406196:	jmp    40619d <flatcc_builder_create_buffer@@Base+0x150>
  406198:	mov    ecx,0x0
  40619d:	mov    eax,DWORD PTR [rbp-0xb8]
  4061a3:	add    eax,ecx
  4061a5:	lea    ecx,[rax+0x4]
  4061a8:	mov    rax,QWORD PTR [rbp-0xd8]
  4061af:	mov    esi,ecx
  4061b1:	mov    rdi,rax
  4061b4:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4061b9:	mov    DWORD PTR [rbp-0xac],eax
  4061bf:	mov    QWORD PTR [rbp-0xa0],0x0
  4061ca:	mov    DWORD PTR [rbp-0x98],0x0
  4061d4:	cmp    DWORD PTR [rbp-0xb4],0x0
  4061db:	jne    4061e6 <flatcc_builder_create_buffer@@Base+0x199>
  4061dd:	cmp    DWORD PTR [rbp-0xb0],0x0
  4061e4:	je     406243 <flatcc_builder_create_buffer@@Base+0x1f6>
  4061e6:	mov    rax,QWORD PTR [rbp-0xa0]
  4061ed:	add    rax,0x4
  4061f1:	mov    QWORD PTR [rbp-0xa0],rax
  4061f8:	mov    eax,DWORD PTR [rbp-0x98]
  4061fe:	cdqe   
  406200:	shl    rax,0x4
  406204:	add    rax,rbp
  406207:	lea    rdx,[rax-0x90]
  40620e:	lea    rax,[rbp-0xc0]
  406215:	mov    QWORD PTR [rdx],rax
  406218:	mov    eax,DWORD PTR [rbp-0x98]
  40621e:	cdqe   
  406220:	shl    rax,0x4
  406224:	add    rax,rbp
  406227:	sub    rax,0x88
  40622d:	mov    QWORD PTR [rax],0x4
  406234:	mov    eax,DWORD PTR [rbp-0x98]
  40623a:	add    eax,0x1
  40623d:	mov    DWORD PTR [rbp-0x98],eax
  406243:	mov    rax,QWORD PTR [rbp-0xa0]
  40624a:	add    rax,0x4
  40624e:	mov    QWORD PTR [rbp-0xa0],rax
  406255:	mov    eax,DWORD PTR [rbp-0x98]
  40625b:	cdqe   
  40625d:	shl    rax,0x4
  406261:	add    rax,rbp
  406264:	lea    rdx,[rax-0x90]
  40626b:	lea    rax,[rbp-0xc4]
  406272:	mov    QWORD PTR [rdx],rax
  406275:	mov    eax,DWORD PTR [rbp-0x98]
  40627b:	cdqe   
  40627d:	shl    rax,0x4
  406281:	add    rax,rbp
  406284:	sub    rax,0x88
  40628a:	mov    QWORD PTR [rax],0x4
  406291:	mov    eax,DWORD PTR [rbp-0x98]
  406297:	add    eax,0x1
  40629a:	mov    DWORD PTR [rbp-0x98],eax
  4062a0:	cmp    DWORD PTR [rbp-0xb8],0x0
  4062a7:	je     40630f <flatcc_builder_create_buffer@@Base+0x2c2>
  4062a9:	mov    rdx,QWORD PTR [rbp-0xa0]
  4062b0:	mov    eax,DWORD PTR [rbp-0xb8]
  4062b6:	add    rax,rdx
  4062b9:	mov    QWORD PTR [rbp-0xa0],rax
  4062c0:	mov    eax,DWORD PTR [rbp-0x98]
  4062c6:	cdqe   
  4062c8:	shl    rax,0x4
  4062cc:	add    rax,rbp
  4062cf:	lea    rdx,[rax-0x90]
  4062d6:	lea    rax,[rbp-0xbc]
  4062dd:	mov    QWORD PTR [rdx],rax
  4062e0:	mov    edx,DWORD PTR [rbp-0x98]
  4062e6:	mov    eax,DWORD PTR [rbp-0xb8]
  4062ec:	movsxd rdx,edx
  4062ef:	shl    rdx,0x4
  4062f3:	add    rdx,rbp
  4062f6:	sub    rdx,0x88
  4062fd:	mov    QWORD PTR [rdx],rax
  406300:	mov    eax,DWORD PTR [rbp-0x98]
  406306:	add    eax,0x1
  406309:	mov    DWORD PTR [rbp-0x98],eax
  40630f:	cmp    DWORD PTR [rbp-0xac],0x0
  406316:	je     40637d <flatcc_builder_create_buffer@@Base+0x330>
  406318:	mov    rdx,QWORD PTR [rbp-0xa0]
  40631f:	mov    eax,DWORD PTR [rbp-0xac]
  406325:	add    rax,rdx
  406328:	mov    QWORD PTR [rbp-0xa0],rax
  40632f:	mov    eax,DWORD PTR [rbp-0x98]
  406335:	cdqe   
  406337:	shl    rax,0x4
  40633b:	add    rax,rbp
  40633e:	sub    rax,0x90
  406344:	mov    rdx,0x40d1c0
  40634b:	mov    QWORD PTR [rax],rdx
  40634e:	mov    edx,DWORD PTR [rbp-0x98]
  406354:	mov    eax,DWORD PTR [rbp-0xac]
  40635a:	movsxd rdx,edx
  40635d:	shl    rdx,0x4
  406361:	add    rdx,rbp
  406364:	sub    rdx,0x88
  40636b:	mov    QWORD PTR [rdx],rax
  40636e:	mov    eax,DWORD PTR [rbp-0x98]
  406374:	add    eax,0x1
  406377:	mov    DWORD PTR [rbp-0x98],eax
  40637d:	mov    rax,QWORD PTR [rbp-0xd8]
  406384:	mov    eax,DWORD PTR [rax+0xf0]
  40638a:	mov    edx,eax
  40638c:	mov    rax,QWORD PTR [rbp-0xa0]
  406393:	sub    edx,eax
  406395:	mov    eax,edx
  406397:	cmp    DWORD PTR [rbp-0xb4],0x0
  40639e:	jne    4063a9 <flatcc_builder_create_buffer@@Base+0x35c>
  4063a0:	cmp    DWORD PTR [rbp-0xb0],0x0
  4063a7:	je     4063b0 <flatcc_builder_create_buffer@@Base+0x363>
  4063a9:	mov    edx,0x4
  4063ae:	jmp    4063b5 <flatcc_builder_create_buffer@@Base+0x368>
  4063b0:	mov    edx,0x0
  4063b5:	add    eax,edx
  4063b7:	mov    DWORD PTR [rbp-0xa8],eax
  4063bd:	cmp    DWORD PTR [rbp-0xb4],0x0
  4063c4:	je     4063e8 <flatcc_builder_create_buffer@@Base+0x39b>
  4063c6:	mov    rax,QWORD PTR [rbp-0xd8]
  4063cd:	mov    eax,DWORD PTR [rax+0xf8]
  4063d3:	sub    eax,DWORD PTR [rbp-0xa8]
  4063d9:	mov    edi,eax
  4063db:	call   40475c <main@@Base+0x176>
  4063e0:	mov    DWORD PTR [rbp-0xc0],eax
  4063e6:	jmp    406408 <flatcc_builder_create_buffer@@Base+0x3bb>
  4063e8:	mov    rax,QWORD PTR [rbp-0xd8]
  4063ef:	mov    eax,DWORD PTR [rax+0xf4]
  4063f5:	sub    eax,DWORD PTR [rbp-0xa8]
  4063fb:	mov    edi,eax
  4063fd:	call   40475c <main@@Base+0x176>
  406402:	mov    DWORD PTR [rbp-0xc0],eax
  406408:	mov    eax,DWORD PTR [rbp-0xe8]
  40640e:	sub    eax,DWORD PTR [rbp-0xa8]
  406414:	mov    edi,eax
  406416:	call   40475c <main@@Base+0x176>
  40641b:	mov    DWORD PTR [rbp-0xc4],eax
  406421:	lea    rdx,[rbp-0xa0]
  406428:	mov    rax,QWORD PTR [rbp-0xd8]
  40642f:	mov    rsi,rdx
  406432:	mov    rdi,rax
  406435:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40643a:	mov    DWORD PTR [rbp-0xa4],eax
  406440:	cmp    DWORD PTR [rbp-0xa4],0x0
  406447:	jne    406468 <flatcc_builder_create_buffer@@Base+0x41b>
  406449:	lea    rcx,[rip+0x7490]        # 40d8e0 <flatcc_builder_padding_base@@Base+0x720>
  406450:	mov    edx,0x304
  406455:	lea    rsi,[rip+0x6f64]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40645c:	lea    rdi,[rip+0x6fbd]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  406463:	call   403070 <__assert_fail@plt>
  406468:	mov    eax,DWORD PTR [rbp-0xa4]
  40646e:	mov    rsi,QWORD PTR [rbp-0x8]
  406472:	xor    rsi,QWORD PTR fs:0x28
  40647b:	je     406482 <flatcc_builder_create_buffer@@Base+0x435>
  40647d:	call   403060 <__stack_chk_fail@plt>
  406482:	leave  
  406483:	ret    

0000000000406484 <flatcc_builder_create_struct@@Base>:
  406484:	push   rbp
  406485:	mov    rbp,rsp
  406488:	sub    rsp,0xd0
  40648f:	mov    QWORD PTR [rbp-0xb8],rdi
  406496:	mov    QWORD PTR [rbp-0xc0],rsi
  40649d:	mov    QWORD PTR [rbp-0xc8],rdx
  4064a4:	mov    eax,ecx
  4064a6:	mov    WORD PTR [rbp-0xcc],ax
  4064ad:	mov    rax,QWORD PTR fs:0x28
  4064b6:	mov    QWORD PTR [rbp-0x8],rax
  4064ba:	xor    eax,eax
  4064bc:	cmp    WORD PTR [rbp-0xcc],0x0
  4064c4:	jne    4064e5 <flatcc_builder_create_struct@@Base+0x61>
  4064c6:	lea    rcx,[rip+0x7433]        # 40d900 <flatcc_builder_padding_base@@Base+0x740>
  4064cd:	mov    edx,0x30f
  4064d2:	lea    rsi,[rip+0x6ee7]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4064d9:	lea    rdi,[rip+0x6f9f]        # 40d47f <flatcc_builder_padding_base@@Base+0x2bf>
  4064e0:	call   403070 <__assert_fail@plt>
  4064e5:	movzx  edx,WORD PTR [rbp-0xcc]
  4064ec:	mov    rax,QWORD PTR [rbp-0xb8]
  4064f3:	mov    esi,edx
  4064f5:	mov    rdi,rax
  4064f8:	call   40546c <flatcc_builder_clear@@Base+0x96>
  4064fd:	movzx  edx,WORD PTR [rbp-0xcc]
  406504:	mov    rax,QWORD PTR [rbp-0xc8]
  40650b:	mov    ecx,eax
  40650d:	mov    rax,QWORD PTR [rbp-0xb8]
  406514:	mov    esi,ecx
  406516:	mov    rdi,rax
  406519:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40651e:	mov    eax,eax
  406520:	mov    QWORD PTR [rbp-0xa8],rax
  406527:	mov    QWORD PTR [rbp-0xa0],0x0
  406532:	mov    DWORD PTR [rbp-0x98],0x0
  40653c:	cmp    QWORD PTR [rbp-0xc8],0x0
  406544:	je     4065ad <flatcc_builder_create_struct@@Base+0x129>
  406546:	mov    rdx,QWORD PTR [rbp-0xa0]
  40654d:	mov    rax,QWORD PTR [rbp-0xc8]
  406554:	add    rax,rdx
  406557:	mov    QWORD PTR [rbp-0xa0],rax
  40655e:	mov    eax,DWORD PTR [rbp-0x98]
  406564:	cdqe   
  406566:	shl    rax,0x4
  40656a:	add    rax,rbp
  40656d:	lea    rdx,[rax-0x90]
  406574:	mov    rax,QWORD PTR [rbp-0xc0]
  40657b:	mov    QWORD PTR [rdx],rax
  40657e:	mov    eax,DWORD PTR [rbp-0x98]
  406584:	cdqe   
  406586:	shl    rax,0x4
  40658a:	add    rax,rbp
  40658d:	lea    rdx,[rax-0x88]
  406594:	mov    rax,QWORD PTR [rbp-0xc8]
  40659b:	mov    QWORD PTR [rdx],rax
  40659e:	mov    eax,DWORD PTR [rbp-0x98]
  4065a4:	add    eax,0x1
  4065a7:	mov    DWORD PTR [rbp-0x98],eax
  4065ad:	cmp    QWORD PTR [rbp-0xa8],0x0
  4065b5:	je     40661d <flatcc_builder_create_struct@@Base+0x199>
  4065b7:	mov    rdx,QWORD PTR [rbp-0xa0]
  4065be:	mov    rax,QWORD PTR [rbp-0xa8]
  4065c5:	add    rax,rdx
  4065c8:	mov    QWORD PTR [rbp-0xa0],rax
  4065cf:	mov    eax,DWORD PTR [rbp-0x98]
  4065d5:	cdqe   
  4065d7:	shl    rax,0x4
  4065db:	add    rax,rbp
  4065de:	sub    rax,0x90
  4065e4:	mov    rdx,0x40d1c0
  4065eb:	mov    QWORD PTR [rax],rdx
  4065ee:	mov    eax,DWORD PTR [rbp-0x98]
  4065f4:	cdqe   
  4065f6:	shl    rax,0x4
  4065fa:	add    rax,rbp
  4065fd:	lea    rdx,[rax-0x88]
  406604:	mov    rax,QWORD PTR [rbp-0xa8]
  40660b:	mov    QWORD PTR [rdx],rax
  40660e:	mov    eax,DWORD PTR [rbp-0x98]
  406614:	add    eax,0x1
  406617:	mov    DWORD PTR [rbp-0x98],eax
  40661d:	lea    rdx,[rbp-0xa0]
  406624:	mov    rax,QWORD PTR [rbp-0xb8]
  40662b:	mov    rsi,rdx
  40662e:	mov    rdi,rax
  406631:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  406636:	mov    rcx,QWORD PTR [rbp-0x8]
  40663a:	xor    rcx,QWORD PTR fs:0x28
  406643:	je     40664a <flatcc_builder_create_struct@@Base+0x1c6>
  406645:	call   403060 <__stack_chk_fail@plt>
  40664a:	leave  
  40664b:	ret    

000000000040664c <flatcc_builder_start_buffer@@Base>:
  40664c:	push   rbp
  40664d:	mov    rbp,rsp
  406650:	sub    rsp,0x20
  406654:	mov    QWORD PTR [rbp-0x8],rdi
  406658:	mov    QWORD PTR [rbp-0x10],rsi
  40665c:	mov    eax,edx
  40665e:	mov    DWORD PTR [rbp-0x18],ecx
  406661:	mov    WORD PTR [rbp-0x14],ax
  406665:	mov    rax,QWORD PTR [rbp-0x8]
  406669:	movzx  eax,WORD PTR [rax+0xe8]
  406670:	movzx  edx,ax
  406673:	mov    rax,QWORD PTR [rbp-0x8]
  406677:	mov    esi,edx
  406679:	mov    rdi,rax
  40667c:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  406681:	test   eax,eax
  406683:	je     40668f <flatcc_builder_start_buffer@@Base+0x43>
  406685:	mov    eax,0xffffffff
  40668a:	jmp    406793 <flatcc_builder_start_buffer@@Base+0x147>
  40668f:	mov    rax,QWORD PTR [rbp-0x8]
  406693:	mov    WORD PTR [rax+0xe8],0x1
  40669c:	mov    rax,QWORD PTR [rbp-0x8]
  4066a0:	mov    rax,QWORD PTR [rax+0x30]
  4066a4:	mov    rdx,QWORD PTR [rbp-0x8]
  4066a8:	movzx  edx,WORD PTR [rdx+0xec]
  4066af:	mov    WORD PTR [rax+0x22],dx
  4066b3:	mov    rax,QWORD PTR [rbp-0x8]
  4066b7:	movzx  edx,WORD PTR [rbp-0x14]
  4066bb:	mov    WORD PTR [rax+0xec],dx
  4066c2:	mov    rax,QWORD PTR [rbp-0x8]
  4066c6:	mov    rax,QWORD PTR [rax+0x30]
  4066ca:	mov    rdx,QWORD PTR [rbp-0x8]
  4066ce:	movzx  edx,WORD PTR [rdx+0x10c]
  4066d5:	mov    WORD PTR [rax+0x20],dx
  4066d9:	mov    eax,DWORD PTR [rbp-0x18]
  4066dc:	mov    edx,eax
  4066de:	mov    rax,QWORD PTR [rbp-0x8]
  4066e2:	mov    WORD PTR [rax+0x10c],dx
  4066e9:	mov    rax,QWORD PTR [rbp-0x8]
  4066ed:	mov    rax,QWORD PTR [rax+0x30]
  4066f1:	mov    rdx,QWORD PTR [rbp-0x8]
  4066f5:	mov    edx,DWORD PTR [rdx+0xf8]
  4066fb:	mov    DWORD PTR [rax+0x14],edx
  4066fe:	mov    rax,QWORD PTR [rbp-0x8]
  406702:	mov    rax,QWORD PTR [rax+0x30]
  406706:	mov    rdx,QWORD PTR [rbp-0x8]
  40670a:	mov    edx,DWORD PTR [rdx+0x100]
  406710:	mov    DWORD PTR [rax+0x1c],edx
  406713:	mov    rax,QWORD PTR [rbp-0x8]
  406717:	mov    edx,DWORD PTR [rax+0xf0]
  40671d:	mov    rax,QWORD PTR [rbp-0x8]
  406721:	mov    DWORD PTR [rax+0xf8],edx
  406727:	mov    rax,QWORD PTR [rbp-0x8]
  40672b:	mov    eax,DWORD PTR [rax+0xfc]
  406731:	lea    ecx,[rax+0x1]
  406734:	mov    rdx,QWORD PTR [rbp-0x8]
  406738:	mov    DWORD PTR [rdx+0xfc],ecx
  40673e:	mov    rdx,QWORD PTR [rbp-0x8]
  406742:	mov    DWORD PTR [rdx+0x100],eax
  406748:	mov    rax,QWORD PTR [rbp-0x8]
  40674c:	mov    rax,QWORD PTR [rax+0x30]
  406750:	mov    rdx,QWORD PTR [rbp-0x8]
  406754:	mov    edx,DWORD PTR [rdx+0x110]
  40675a:	mov    DWORD PTR [rax+0x10],edx
  40675d:	cmp    QWORD PTR [rbp-0x10],0x0
  406762:	je     40676a <flatcc_builder_start_buffer@@Base+0x11e>
  406764:	mov    rax,QWORD PTR [rbp-0x10]
  406768:	jmp    406771 <flatcc_builder_start_buffer@@Base+0x125>
  40676a:	mov    rax,0x40d1c0
  406771:	mov    rdx,QWORD PTR [rbp-0x8]
  406775:	add    rdx,0x110
  40677c:	mov    eax,DWORD PTR [rax]
  40677e:	mov    DWORD PTR [rdx],eax
  406780:	mov    rax,QWORD PTR [rbp-0x8]
  406784:	mov    rax,QWORD PTR [rax+0x30]
  406788:	mov    WORD PTR [rax+0xe],0x1
  40678e:	mov    eax,0x0
  406793:	leave  
  406794:	ret    

0000000000406795 <flatcc_builder_end_buffer@@Base>:
  406795:	push   rbp
  406796:	mov    rbp,rsp
  406799:	sub    rsp,0x20
  40679d:	mov    QWORD PTR [rbp-0x18],rdi
  4067a1:	mov    DWORD PTR [rbp-0x1c],esi
  4067a4:	mov    rax,QWORD PTR [rbp-0x18]
  4067a8:	movzx  eax,WORD PTR [rax+0x10c]
  4067af:	movzx  eax,ax
  4067b2:	and    eax,0x2
  4067b5:	mov    DWORD PTR [rbp-0x8],eax
  4067b8:	mov    rax,QWORD PTR [rbp-0x18]
  4067bc:	mov    eax,DWORD PTR [rax+0x100]
  4067c2:	test   eax,eax
  4067c4:	setne  al
  4067c7:	movzx  eax,al
  4067ca:	or     DWORD PTR [rbp-0x8],eax
  4067cd:	mov    rax,QWORD PTR [rbp-0x18]
  4067d1:	mov    rax,QWORD PTR [rax+0x30]
  4067d5:	movzx  eax,WORD PTR [rax+0xe]
  4067d9:	cmp    ax,0x1
  4067dd:	je     4067fe <flatcc_builder_end_buffer@@Base+0x69>
  4067df:	lea    rcx,[rip+0x713a]        # 40d920 <flatcc_builder_padding_base@@Base+0x760>
  4067e6:	mov    edx,0x346
  4067eb:	lea    rsi,[rip+0x6bce]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4067f2:	lea    rdi,[rip+0x6c97]        # 40d490 <flatcc_builder_padding_base@@Base+0x2d0>
  4067f9:	call   403070 <__assert_fail@plt>
  4067fe:	mov    rax,QWORD PTR [rbp-0x18]
  406802:	movzx  eax,WORD PTR [rax+0xec]
  406809:	movzx  edx,ax
  40680c:	mov    rax,QWORD PTR [rbp-0x18]
  406810:	mov    esi,edx
  406812:	mov    rdi,rax
  406815:	call   40546c <flatcc_builder_clear@@Base+0x96>
  40681a:	mov    rax,QWORD PTR [rbp-0x18]
  40681e:	movzx  eax,WORD PTR [rax+0xe8]
  406825:	movzx  edi,ax
  406828:	mov    rax,QWORD PTR [rbp-0x18]
  40682c:	movzx  eax,WORD PTR [rax+0xec]
  406833:	movzx  edx,ax
  406836:	mov    rax,QWORD PTR [rbp-0x18]
  40683a:	lea    rsi,[rax+0x110]
  406841:	mov    r8d,DWORD PTR [rbp-0x8]
  406845:	mov    ecx,DWORD PTR [rbp-0x1c]
  406848:	mov    rax,QWORD PTR [rbp-0x18]
  40684c:	mov    r9d,r8d
  40684f:	mov    r8d,edi
  406852:	mov    rdi,rax
  406855:	call   40604d <flatcc_builder_create_buffer@@Base>
  40685a:	mov    DWORD PTR [rbp-0x4],eax
  40685d:	cmp    DWORD PTR [rbp-0x4],0x0
  406861:	jne    40686a <flatcc_builder_end_buffer@@Base+0xd5>
  406863:	mov    eax,0x0
  406868:	jmp    4068cf <flatcc_builder_end_buffer@@Base+0x13a>
  40686a:	mov    rax,QWORD PTR [rbp-0x18]
  40686e:	mov    rax,QWORD PTR [rax+0x30]
  406872:	mov    edx,DWORD PTR [rax+0x14]
  406875:	mov    rax,QWORD PTR [rbp-0x18]
  406879:	mov    DWORD PTR [rax+0xf8],edx
  40687f:	mov    rax,QWORD PTR [rbp-0x18]
  406883:	mov    rax,QWORD PTR [rax+0x30]
  406887:	mov    edx,DWORD PTR [rax+0x1c]
  40688a:	mov    rax,QWORD PTR [rbp-0x18]
  40688e:	mov    DWORD PTR [rax+0x100],edx
  406894:	mov    rax,QWORD PTR [rbp-0x18]
  406898:	mov    rax,QWORD PTR [rax+0x30]
  40689c:	mov    edx,DWORD PTR [rax+0x10]
  40689f:	mov    rax,QWORD PTR [rbp-0x18]
  4068a3:	mov    DWORD PTR [rax+0x110],edx
  4068a9:	mov    rax,QWORD PTR [rbp-0x18]
  4068ad:	mov    rax,QWORD PTR [rax+0x30]
  4068b1:	movzx  edx,WORD PTR [rax+0x20]
  4068b5:	mov    rax,QWORD PTR [rbp-0x18]
  4068b9:	mov    WORD PTR [rax+0x10c],dx
  4068c0:	mov    rax,QWORD PTR [rbp-0x18]
  4068c4:	mov    rdi,rax
  4068c7:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4068cc:	mov    eax,DWORD PTR [rbp-0x4]
  4068cf:	leave  
  4068d0:	ret    

00000000004068d1 <flatcc_builder_start_struct@@Base>:
  4068d1:	push   rbp
  4068d2:	mov    rbp,rsp
  4068d5:	sub    rsp,0x20
  4068d9:	mov    QWORD PTR [rbp-0x8],rdi
  4068dd:	mov    QWORD PTR [rbp-0x10],rsi
  4068e1:	mov    eax,edx
  4068e3:	mov    WORD PTR [rbp-0x14],ax
  4068e7:	movzx  edx,WORD PTR [rbp-0x14]
  4068eb:	mov    rax,QWORD PTR [rbp-0x8]
  4068ef:	mov    esi,edx
  4068f1:	mov    rdi,rax
  4068f4:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4068f9:	test   eax,eax
  4068fb:	je     406904 <flatcc_builder_start_struct@@Base+0x33>
  4068fd:	mov    eax,0x0
  406902:	jmp    406937 <flatcc_builder_start_struct@@Base+0x66>
  406904:	mov    rax,QWORD PTR [rbp-0x8]
  406908:	mov    rax,QWORD PTR [rax+0x30]
  40690c:	mov    WORD PTR [rax+0xe],0x2
  406912:	mov    rax,QWORD PTR [rbp-0x8]
  406916:	mov    esi,0xfffffffc
  40691b:	mov    rdi,rax
  40691e:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  406923:	mov    rax,QWORD PTR [rbp-0x10]
  406927:	mov    edx,eax
  406929:	mov    rax,QWORD PTR [rbp-0x8]
  40692d:	mov    esi,edx
  40692f:	mov    rdi,rax
  406932:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  406937:	leave  
  406938:	ret    

0000000000406939 <flatcc_builder_struct_edit@@Base>:
  406939:	push   rbp
  40693a:	mov    rbp,rsp
  40693d:	mov    QWORD PTR [rbp-0x8],rdi
  406941:	mov    rax,QWORD PTR [rbp-0x8]
  406945:	mov    rax,QWORD PTR [rax+0x18]
  406949:	pop    rbp
  40694a:	ret    

000000000040694b <flatcc_builder_end_struct@@Base>:
  40694b:	push   rbp
  40694c:	mov    rbp,rsp
  40694f:	sub    rsp,0x20
  406953:	mov    QWORD PTR [rbp-0x18],rdi
  406957:	mov    rax,QWORD PTR [rbp-0x18]
  40695b:	mov    rax,QWORD PTR [rax+0x30]
  40695f:	movzx  eax,WORD PTR [rax+0xe]
  406963:	cmp    ax,0x2
  406967:	je     406988 <flatcc_builder_end_struct@@Base+0x3d>
  406969:	lea    rcx,[rip+0x6fd0]        # 40d940 <flatcc_builder_padding_base@@Base+0x780>
  406970:	mov    edx,0x368
  406975:	lea    rsi,[rip+0x6a44]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40697c:	lea    rdi,[rip+0x6b3d]        # 40d4c0 <flatcc_builder_padding_base@@Base+0x300>
  406983:	call   403070 <__assert_fail@plt>
  406988:	mov    rax,QWORD PTR [rbp-0x18]
  40698c:	movzx  eax,WORD PTR [rax+0xea]
  406993:	movzx  edx,ax
  406996:	mov    rax,QWORD PTR [rbp-0x18]
  40699a:	mov    eax,DWORD PTR [rax+0x20]
  40699d:	mov    edi,eax
  40699f:	mov    rax,QWORD PTR [rbp-0x18]
  4069a3:	mov    rsi,QWORD PTR [rax+0x18]
  4069a7:	mov    rax,QWORD PTR [rbp-0x18]
  4069ab:	mov    ecx,edx
  4069ad:	mov    rdx,rdi
  4069b0:	mov    rdi,rax
  4069b3:	call   406484 <flatcc_builder_create_struct@@Base>
  4069b8:	mov    DWORD PTR [rbp-0x4],eax
  4069bb:	cmp    DWORD PTR [rbp-0x4],0x0
  4069bf:	jne    4069c8 <flatcc_builder_end_struct@@Base+0x7d>
  4069c1:	mov    eax,0x0
  4069c6:	jmp    4069d7 <flatcc_builder_end_struct@@Base+0x8c>
  4069c8:	mov    rax,QWORD PTR [rbp-0x18]
  4069cc:	mov    rdi,rax
  4069cf:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4069d4:	mov    eax,DWORD PTR [rbp-0x4]
  4069d7:	leave  
  4069d8:	ret    
  4069d9:	push   rbp
  4069da:	mov    rbp,rsp
  4069dd:	sub    rsp,0x20
  4069e1:	mov    QWORD PTR [rbp-0x18],rdi
  4069e5:	mov    DWORD PTR [rbp-0x1c],esi
  4069e8:	mov    DWORD PTR [rbp-0x20],edx
  4069eb:	mov    rax,QWORD PTR [rbp-0x18]
  4069ef:	mov    rax,QWORD PTR [rax+0x30]
  4069f3:	mov    eax,DWORD PTR [rax+0x14]
  4069f6:	mov    DWORD PTR [rbp-0x8],eax
  4069f9:	mov    edx,DWORD PTR [rbp-0x8]
  4069fc:	mov    eax,DWORD PTR [rbp-0x1c]
  4069ff:	add    eax,edx
  406a01:	mov    DWORD PTR [rbp-0x4],eax
  406a04:	mov    eax,DWORD PTR [rbp-0x8]
  406a07:	cmp    eax,DWORD PTR [rbp-0x4]
  406a0a:	ja     406a14 <flatcc_builder_end_struct@@Base+0xc9>
  406a0c:	mov    eax,DWORD PTR [rbp-0x4]
  406a0f:	cmp    eax,DWORD PTR [rbp-0x20]
  406a12:	jbe    406a4a <flatcc_builder_end_struct@@Base+0xff>
  406a14:	mov    eax,DWORD PTR [rbp-0x8]
  406a17:	cmp    eax,DWORD PTR [rbp-0x4]
  406a1a:	ja     406a24 <flatcc_builder_end_struct@@Base+0xd9>
  406a1c:	mov    eax,DWORD PTR [rbp-0x4]
  406a1f:	cmp    eax,DWORD PTR [rbp-0x20]
  406a22:	jbe    406a43 <flatcc_builder_end_struct@@Base+0xf8>
  406a24:	lea    rcx,[rip+0x6f35]        # 40d960 <flatcc_builder_padding_base@@Base+0x7a0>
  406a2b:	mov    edx,0x37c
  406a30:	lea    rsi,[rip+0x6989]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406a37:	lea    rdi,[rip+0x6aae]        # 40d4ec <flatcc_builder_padding_base@@Base+0x32c>
  406a3e:	call   403070 <__assert_fail@plt>
  406a43:	mov    eax,0xffffffff
  406a48:	jmp    406a5d <flatcc_builder_end_struct@@Base+0x112>
  406a4a:	mov    rax,QWORD PTR [rbp-0x18]
  406a4e:	mov    rax,QWORD PTR [rax+0x30]
  406a52:	mov    edx,DWORD PTR [rbp-0x4]
  406a55:	mov    DWORD PTR [rax+0x14],edx
  406a58:	mov    eax,0x0
  406a5d:	leave  
  406a5e:	ret    

0000000000406a5f <flatcc_builder_extend_vector@@Base>:
  406a5f:	push   rbp
  406a60:	mov    rbp,rsp
  406a63:	sub    rsp,0x10
  406a67:	mov    QWORD PTR [rbp-0x8],rdi
  406a6b:	mov    QWORD PTR [rbp-0x10],rsi
  406a6f:	mov    rax,QWORD PTR [rbp-0x8]
  406a73:	mov    rax,QWORD PTR [rax+0x30]
  406a77:	mov    edx,DWORD PTR [rax+0x18]
  406a7a:	mov    rax,QWORD PTR [rbp-0x10]
  406a7e:	mov    ecx,eax
  406a80:	mov    rax,QWORD PTR [rbp-0x8]
  406a84:	mov    esi,ecx
  406a86:	mov    rdi,rax
  406a89:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  406a8e:	test   eax,eax
  406a90:	je     406a99 <flatcc_builder_extend_vector@@Base+0x3a>
  406a92:	mov    eax,0x0
  406a97:	jmp    406ab9 <flatcc_builder_extend_vector@@Base+0x5a>
  406a99:	mov    rax,QWORD PTR [rbp-0x8]
  406a9d:	mov    rax,QWORD PTR [rax+0x30]
  406aa1:	mov    eax,DWORD PTR [rax+0x10]
  406aa4:	mov    rdx,QWORD PTR [rbp-0x10]
  406aa8:	imul   edx,eax
  406aab:	mov    rax,QWORD PTR [rbp-0x8]
  406aaf:	mov    esi,edx
  406ab1:	mov    rdi,rax
  406ab4:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  406ab9:	leave  
  406aba:	ret    

0000000000406abb <flatcc_builder_vector_push@@Base>:
  406abb:	push   rbp
  406abc:	mov    rbp,rsp
  406abf:	sub    rsp,0x10
  406ac3:	mov    QWORD PTR [rbp-0x8],rdi
  406ac7:	mov    QWORD PTR [rbp-0x10],rsi
  406acb:	mov    rax,QWORD PTR [rbp-0x8]
  406acf:	mov    rax,QWORD PTR [rax+0x30]
  406ad3:	movzx  eax,WORD PTR [rax+0xe]
  406ad7:	cmp    ax,0x4
  406adb:	je     406afc <flatcc_builder_vector_push@@Base+0x41>
  406add:	lea    rcx,[rip+0x6e9c]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406ae4:	mov    edx,0x38b
  406ae9:	lea    rsi,[rip+0x68d0]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406af0:	lea    rdi,[rip+0x6a11]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406af7:	call   403070 <__assert_fail@plt>
  406afc:	mov    rax,QWORD PTR [rbp-0x8]
  406b00:	mov    rax,QWORD PTR [rax+0x30]
  406b04:	mov    edx,DWORD PTR [rax+0x14]
  406b07:	mov    rax,QWORD PTR [rbp-0x8]
  406b0b:	mov    rax,QWORD PTR [rax+0x30]
  406b0f:	mov    eax,DWORD PTR [rax+0x18]
  406b12:	cmp    edx,eax
  406b14:	jbe    406b56 <flatcc_builder_vector_push@@Base+0x9b>
  406b16:	mov    rax,QWORD PTR [rbp-0x8]
  406b1a:	mov    rax,QWORD PTR [rax+0x30]
  406b1e:	mov    edx,DWORD PTR [rax+0x14]
  406b21:	mov    rax,QWORD PTR [rbp-0x8]
  406b25:	mov    rax,QWORD PTR [rax+0x30]
  406b29:	mov    eax,DWORD PTR [rax+0x18]
  406b2c:	cmp    edx,eax
  406b2e:	jbe    406b4f <flatcc_builder_vector_push@@Base+0x94>
  406b30:	lea    rcx,[rip+0x6e49]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406b37:	mov    edx,0x38c
  406b3c:	lea    rsi,[rip+0x687d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406b43:	lea    rdi,[rip+0x69ee]        # 40d538 <flatcc_builder_padding_base@@Base+0x378>
  406b4a:	call   403070 <__assert_fail@plt>
  406b4f:	mov    eax,0x0
  406b54:	jmp    406b8d <flatcc_builder_vector_push@@Base+0xd2>
  406b56:	mov    rax,QWORD PTR [rbp-0x8]
  406b5a:	mov    rax,QWORD PTR [rax+0x30]
  406b5e:	mov    rdx,QWORD PTR [rbp-0x8]
  406b62:	mov    rdx,QWORD PTR [rdx+0x30]
  406b66:	mov    edx,DWORD PTR [rdx+0x14]
  406b69:	add    edx,0x1
  406b6c:	mov    DWORD PTR [rax+0x14],edx
  406b6f:	mov    rax,QWORD PTR [rbp-0x8]
  406b73:	mov    rax,QWORD PTR [rax+0x30]
  406b77:	mov    edx,DWORD PTR [rax+0x10]
  406b7a:	mov    rcx,QWORD PTR [rbp-0x10]
  406b7e:	mov    rax,QWORD PTR [rbp-0x8]
  406b82:	mov    rsi,rcx
  406b85:	mov    rdi,rax
  406b88:	call   404b4b <flatcc_builder_default_alloc@@Base+0x329>
  406b8d:	leave  
  406b8e:	ret    

0000000000406b8f <flatcc_builder_append_vector@@Base>:
  406b8f:	push   rbp
  406b90:	mov    rbp,rsp
  406b93:	sub    rsp,0x20
  406b97:	mov    QWORD PTR [rbp-0x8],rdi
  406b9b:	mov    QWORD PTR [rbp-0x10],rsi
  406b9f:	mov    QWORD PTR [rbp-0x18],rdx
  406ba3:	mov    rax,QWORD PTR [rbp-0x8]
  406ba7:	mov    rax,QWORD PTR [rax+0x30]
  406bab:	movzx  eax,WORD PTR [rax+0xe]
  406baf:	cmp    ax,0x4
  406bb3:	je     406bd4 <flatcc_builder_append_vector@@Base+0x45>
  406bb5:	lea    rcx,[rip+0x6de4]        # 40d9a0 <flatcc_builder_padding_base@@Base+0x7e0>
  406bbc:	mov    edx,0x393
  406bc1:	lea    rsi,[rip+0x67f8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406bc8:	lea    rdi,[rip+0x6939]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406bcf:	call   403070 <__assert_fail@plt>
  406bd4:	mov    rax,QWORD PTR [rbp-0x8]
  406bd8:	mov    rax,QWORD PTR [rax+0x30]
  406bdc:	mov    edx,DWORD PTR [rax+0x18]
  406bdf:	mov    rax,QWORD PTR [rbp-0x18]
  406be3:	mov    ecx,eax
  406be5:	mov    rax,QWORD PTR [rbp-0x8]
  406be9:	mov    esi,ecx
  406beb:	mov    rdi,rax
  406bee:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  406bf3:	test   eax,eax
  406bf5:	je     406bfe <flatcc_builder_append_vector@@Base+0x6f>
  406bf7:	mov    eax,0x0
  406bfc:	jmp    406c23 <flatcc_builder_append_vector@@Base+0x94>
  406bfe:	mov    rax,QWORD PTR [rbp-0x8]
  406c02:	mov    rax,QWORD PTR [rax+0x30]
  406c06:	mov    eax,DWORD PTR [rax+0x10]
  406c09:	mov    rdx,QWORD PTR [rbp-0x18]
  406c0d:	imul   edx,eax
  406c10:	mov    rcx,QWORD PTR [rbp-0x10]
  406c14:	mov    rax,QWORD PTR [rbp-0x8]
  406c18:	mov    rsi,rcx
  406c1b:	mov    rdi,rax
  406c1e:	call   404b4b <flatcc_builder_default_alloc@@Base+0x329>
  406c23:	leave  
  406c24:	ret    

0000000000406c25 <flatcc_builder_extend_offset_vector@@Base>:
  406c25:	push   rbp
  406c26:	mov    rbp,rsp
  406c29:	sub    rsp,0x10
  406c2d:	mov    QWORD PTR [rbp-0x8],rdi
  406c31:	mov    QWORD PTR [rbp-0x10],rsi
  406c35:	mov    rax,QWORD PTR [rbp-0x10]
  406c39:	mov    ecx,eax
  406c3b:	mov    rax,QWORD PTR [rbp-0x8]
  406c3f:	mov    edx,0x3fffffff
  406c44:	mov    esi,ecx
  406c46:	mov    rdi,rax
  406c49:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  406c4e:	test   eax,eax
  406c50:	je     406c59 <flatcc_builder_extend_offset_vector@@Base+0x34>
  406c52:	mov    eax,0x0
  406c57:	jmp    406c72 <flatcc_builder_extend_offset_vector@@Base+0x4d>
  406c59:	mov    rax,QWORD PTR [rbp-0x10]
  406c5d:	lea    edx,[rax*4+0x0]
  406c64:	mov    rax,QWORD PTR [rbp-0x8]
  406c68:	mov    esi,edx
  406c6a:	mov    rdi,rax
  406c6d:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  406c72:	leave  
  406c73:	ret    

0000000000406c74 <flatcc_builder_offset_vector_push@@Base>:
  406c74:	push   rbp
  406c75:	mov    rbp,rsp
  406c78:	sub    rsp,0x20
  406c7c:	mov    QWORD PTR [rbp-0x18],rdi
  406c80:	mov    DWORD PTR [rbp-0x1c],esi
  406c83:	mov    rax,QWORD PTR [rbp-0x18]
  406c87:	mov    rax,QWORD PTR [rax+0x30]
  406c8b:	movzx  eax,WORD PTR [rax+0xe]
  406c8f:	cmp    ax,0x5
  406c93:	je     406cb4 <flatcc_builder_offset_vector_push@@Base+0x40>
  406c95:	lea    rcx,[rip+0x6d24]        # 40d9c0 <flatcc_builder_padding_base@@Base+0x800>
  406c9c:	mov    edx,0x3a6
  406ca1:	lea    rsi,[rip+0x6718]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406ca8:	lea    rdi,[rip+0x68c9]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406caf:	call   403070 <__assert_fail@plt>
  406cb4:	mov    rax,QWORD PTR [rbp-0x18]
  406cb8:	mov    rax,QWORD PTR [rax+0x30]
  406cbc:	mov    eax,DWORD PTR [rax+0x14]
  406cbf:	cmp    eax,0x3fffffff
  406cc4:	jne    406ccd <flatcc_builder_offset_vector_push@@Base+0x59>
  406cc6:	mov    eax,0x0
  406ccb:	jmp    406d16 <flatcc_builder_offset_vector_push@@Base+0xa2>
  406ccd:	mov    rax,QWORD PTR [rbp-0x18]
  406cd1:	mov    rax,QWORD PTR [rax+0x30]
  406cd5:	mov    rdx,QWORD PTR [rbp-0x18]
  406cd9:	mov    rdx,QWORD PTR [rdx+0x30]
  406cdd:	mov    edx,DWORD PTR [rdx+0x14]
  406ce0:	add    edx,0x1
  406ce3:	mov    DWORD PTR [rax+0x14],edx
  406ce6:	mov    rax,QWORD PTR [rbp-0x18]
  406cea:	mov    esi,0x4
  406cef:	mov    rdi,rax
  406cf2:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  406cf7:	mov    QWORD PTR [rbp-0x8],rax
  406cfb:	cmp    QWORD PTR [rbp-0x8],0x0
  406d00:	jne    406d09 <flatcc_builder_offset_vector_push@@Base+0x95>
  406d02:	mov    eax,0x0
  406d07:	jmp    406d16 <flatcc_builder_offset_vector_push@@Base+0xa2>
  406d09:	mov    rax,QWORD PTR [rbp-0x8]
  406d0d:	mov    edx,DWORD PTR [rbp-0x1c]
  406d10:	mov    DWORD PTR [rax],edx
  406d12:	mov    rax,QWORD PTR [rbp-0x8]
  406d16:	leave  
  406d17:	ret    

0000000000406d18 <flatcc_builder_append_offset_vector@@Base>:
  406d18:	push   rbp
  406d19:	mov    rbp,rsp
  406d1c:	sub    rsp,0x20
  406d20:	mov    QWORD PTR [rbp-0x8],rdi
  406d24:	mov    QWORD PTR [rbp-0x10],rsi
  406d28:	mov    QWORD PTR [rbp-0x18],rdx
  406d2c:	mov    rax,QWORD PTR [rbp-0x8]
  406d30:	mov    rax,QWORD PTR [rax+0x30]
  406d34:	movzx  eax,WORD PTR [rax+0xe]
  406d38:	cmp    ax,0x5
  406d3c:	je     406d5d <flatcc_builder_append_offset_vector@@Base+0x45>
  406d3e:	lea    rcx,[rip+0x6cbb]        # 40da00 <flatcc_builder_padding_base@@Base+0x840>
  406d45:	mov    edx,0x3b4
  406d4a:	lea    rsi,[rip+0x666f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406d51:	lea    rdi,[rip+0x6820]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406d58:	call   403070 <__assert_fail@plt>
  406d5d:	mov    rax,QWORD PTR [rbp-0x18]
  406d61:	mov    ecx,eax
  406d63:	mov    rax,QWORD PTR [rbp-0x8]
  406d67:	mov    edx,0x3fffffff
  406d6c:	mov    esi,ecx
  406d6e:	mov    rdi,rax
  406d71:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  406d76:	test   eax,eax
  406d78:	je     406d81 <flatcc_builder_append_offset_vector@@Base+0x69>
  406d7a:	mov    eax,0x0
  406d7f:	jmp    406d9f <flatcc_builder_append_offset_vector@@Base+0x87>
  406d81:	mov    rax,QWORD PTR [rbp-0x18]
  406d85:	lea    edx,[rax*4+0x0]
  406d8c:	mov    rcx,QWORD PTR [rbp-0x10]
  406d90:	mov    rax,QWORD PTR [rbp-0x8]
  406d94:	mov    rsi,rcx
  406d97:	mov    rdi,rax
  406d9a:	call   404b4b <flatcc_builder_default_alloc@@Base+0x329>
  406d9f:	leave  
  406da0:	ret    

0000000000406da1 <flatcc_builder_extend_string@@Base>:
  406da1:	push   rbp
  406da2:	mov    rbp,rsp
  406da5:	sub    rsp,0x10
  406da9:	mov    QWORD PTR [rbp-0x8],rdi
  406dad:	mov    QWORD PTR [rbp-0x10],rsi
  406db1:	mov    rax,QWORD PTR [rbp-0x8]
  406db5:	mov    rax,QWORD PTR [rax+0x30]
  406db9:	movzx  eax,WORD PTR [rax+0xe]
  406dbd:	cmp    ax,0x6
  406dc1:	je     406de2 <flatcc_builder_extend_string@@Base+0x41>
  406dc3:	lea    rcx,[rip+0x6c66]        # 40da30 <flatcc_builder_padding_base@@Base+0x870>
  406dca:	mov    edx,0x3bd
  406dcf:	lea    rsi,[rip+0x65ea]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406dd6:	lea    rdi,[rip+0x67d3]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406ddd:	call   403070 <__assert_fail@plt>
  406de2:	mov    rax,QWORD PTR [rbp-0x10]
  406de6:	mov    ecx,eax
  406de8:	mov    rax,QWORD PTR [rbp-0x8]
  406dec:	mov    edx,0xffffffff
  406df1:	mov    esi,ecx
  406df3:	mov    rdi,rax
  406df6:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  406dfb:	test   eax,eax
  406dfd:	je     406e06 <flatcc_builder_extend_string@@Base+0x65>
  406dff:	mov    eax,0x0
  406e04:	jmp    406e1a <flatcc_builder_extend_string@@Base+0x79>
  406e06:	mov    rax,QWORD PTR [rbp-0x10]
  406e0a:	mov    edx,eax
  406e0c:	mov    rax,QWORD PTR [rbp-0x8]
  406e10:	mov    esi,edx
  406e12:	mov    rdi,rax
  406e15:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  406e1a:	leave  
  406e1b:	ret    

0000000000406e1c <flatcc_builder_append_string@@Base>:
  406e1c:	push   rbp
  406e1d:	mov    rbp,rsp
  406e20:	sub    rsp,0x20
  406e24:	mov    QWORD PTR [rbp-0x8],rdi
  406e28:	mov    QWORD PTR [rbp-0x10],rsi
  406e2c:	mov    QWORD PTR [rbp-0x18],rdx
  406e30:	mov    rax,QWORD PTR [rbp-0x8]
  406e34:	mov    rax,QWORD PTR [rax+0x30]
  406e38:	movzx  eax,WORD PTR [rax+0xe]
  406e3c:	cmp    ax,0x6
  406e40:	je     406e61 <flatcc_builder_append_string@@Base+0x45>
  406e42:	lea    rcx,[rip+0x6c07]        # 40da50 <flatcc_builder_padding_base@@Base+0x890>
  406e49:	mov    edx,0x3c6
  406e4e:	lea    rsi,[rip+0x656b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406e55:	lea    rdi,[rip+0x6754]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406e5c:	call   403070 <__assert_fail@plt>
  406e61:	mov    rax,QWORD PTR [rbp-0x18]
  406e65:	mov    ecx,eax
  406e67:	mov    rax,QWORD PTR [rbp-0x8]
  406e6b:	mov    edx,0xffffffff
  406e70:	mov    esi,ecx
  406e72:	mov    rdi,rax
  406e75:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  406e7a:	test   eax,eax
  406e7c:	je     406e85 <flatcc_builder_append_string@@Base+0x69>
  406e7e:	mov    eax,0x0
  406e83:	jmp    406e9e <flatcc_builder_append_string@@Base+0x82>
  406e85:	mov    rax,QWORD PTR [rbp-0x18]
  406e89:	mov    edx,eax
  406e8b:	mov    rcx,QWORD PTR [rbp-0x10]
  406e8f:	mov    rax,QWORD PTR [rbp-0x8]
  406e93:	mov    rsi,rcx
  406e96:	mov    rdi,rax
  406e99:	call   404b4b <flatcc_builder_default_alloc@@Base+0x329>
  406e9e:	leave  
  406e9f:	ret    

0000000000406ea0 <flatcc_builder_append_string_str@@Base>:
  406ea0:	push   rbp
  406ea1:	mov    rbp,rsp
  406ea4:	sub    rsp,0x10
  406ea8:	mov    QWORD PTR [rbp-0x8],rdi
  406eac:	mov    QWORD PTR [rbp-0x10],rsi
  406eb0:	mov    rax,QWORD PTR [rbp-0x10]
  406eb4:	mov    rdi,rax
  406eb7:	call   403050 <strlen@plt>
  406ebc:	mov    rdx,rax
  406ebf:	mov    rcx,QWORD PTR [rbp-0x10]
  406ec3:	mov    rax,QWORD PTR [rbp-0x8]
  406ec7:	mov    rsi,rcx
  406eca:	mov    rdi,rax
  406ecd:	call   406e1c <flatcc_builder_append_string@@Base>
  406ed2:	leave  
  406ed3:	ret    

0000000000406ed4 <flatcc_builder_append_string_strn@@Base>:
  406ed4:	push   rbp
  406ed5:	mov    rbp,rsp
  406ed8:	sub    rsp,0x20
  406edc:	mov    QWORD PTR [rbp-0x8],rdi
  406ee0:	mov    QWORD PTR [rbp-0x10],rsi
  406ee4:	mov    QWORD PTR [rbp-0x18],rdx
  406ee8:	mov    rdx,QWORD PTR [rbp-0x18]
  406eec:	mov    rax,QWORD PTR [rbp-0x10]
  406ef0:	mov    rsi,rdx
  406ef3:	mov    rdi,rax
  406ef6:	call   4047dc <main@@Base+0x1f6>
  406efb:	mov    rdx,rax
  406efe:	mov    rcx,QWORD PTR [rbp-0x10]
  406f02:	mov    rax,QWORD PTR [rbp-0x8]
  406f06:	mov    rsi,rcx
  406f09:	mov    rdi,rax
  406f0c:	call   406e1c <flatcc_builder_append_string@@Base>
  406f11:	leave  
  406f12:	ret    

0000000000406f13 <flatcc_builder_truncate_vector@@Base>:
  406f13:	push   rbp
  406f14:	mov    rbp,rsp
  406f17:	sub    rsp,0x10
  406f1b:	mov    QWORD PTR [rbp-0x8],rdi
  406f1f:	mov    QWORD PTR [rbp-0x10],rsi
  406f23:	mov    rax,QWORD PTR [rbp-0x8]
  406f27:	mov    rax,QWORD PTR [rax+0x30]
  406f2b:	movzx  eax,WORD PTR [rax+0xe]
  406f2f:	cmp    ax,0x4
  406f33:	je     406f54 <flatcc_builder_truncate_vector@@Base+0x41>
  406f35:	lea    rcx,[rip+0x6b34]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  406f3c:	mov    edx,0x3d9
  406f41:	lea    rsi,[rip+0x6478]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406f48:	lea    rdi,[rip+0x65b9]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406f4f:	call   403070 <__assert_fail@plt>
  406f54:	mov    rax,QWORD PTR [rbp-0x8]
  406f58:	mov    rax,QWORD PTR [rax+0x30]
  406f5c:	mov    eax,DWORD PTR [rax+0x14]
  406f5f:	mov    eax,eax
  406f61:	cmp    rax,QWORD PTR [rbp-0x10]
  406f65:	jae    406fa0 <flatcc_builder_truncate_vector@@Base+0x8d>
  406f67:	mov    rax,QWORD PTR [rbp-0x8]
  406f6b:	mov    rax,QWORD PTR [rax+0x30]
  406f6f:	mov    eax,DWORD PTR [rax+0x14]
  406f72:	mov    eax,eax
  406f74:	cmp    rax,QWORD PTR [rbp-0x10]
  406f78:	jae    406f99 <flatcc_builder_truncate_vector@@Base+0x86>
  406f7a:	lea    rcx,[rip+0x6aef]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  406f81:	mov    edx,0x3da
  406f86:	lea    rsi,[rip+0x6433]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406f8d:	lea    rdi,[rip+0x664c]        # 40d5e0 <flatcc_builder_padding_base@@Base+0x420>
  406f94:	call   403070 <__assert_fail@plt>
  406f99:	mov    eax,0xffffffff
  406f9e:	jmp    406fe1 <flatcc_builder_truncate_vector@@Base+0xce>
  406fa0:	mov    rax,QWORD PTR [rbp-0x8]
  406fa4:	mov    rax,QWORD PTR [rax+0x30]
  406fa8:	mov    rdx,QWORD PTR [rbp-0x8]
  406fac:	mov    rdx,QWORD PTR [rdx+0x30]
  406fb0:	mov    edx,DWORD PTR [rdx+0x14]
  406fb3:	mov    rcx,QWORD PTR [rbp-0x10]
  406fb7:	sub    edx,ecx
  406fb9:	mov    DWORD PTR [rax+0x14],edx
  406fbc:	mov    rax,QWORD PTR [rbp-0x8]
  406fc0:	mov    rax,QWORD PTR [rax+0x30]
  406fc4:	mov    eax,DWORD PTR [rax+0x10]
  406fc7:	mov    rdx,QWORD PTR [rbp-0x10]
  406fcb:	imul   edx,eax
  406fce:	mov    rax,QWORD PTR [rbp-0x8]
  406fd2:	mov    esi,edx
  406fd4:	mov    rdi,rax
  406fd7:	call   404aff <flatcc_builder_default_alloc@@Base+0x2dd>
  406fdc:	mov    eax,0x0
  406fe1:	leave  
  406fe2:	ret    

0000000000406fe3 <flatcc_builder_truncate_offset_vector@@Base>:
  406fe3:	push   rbp
  406fe4:	mov    rbp,rsp
  406fe7:	sub    rsp,0x10
  406feb:	mov    QWORD PTR [rbp-0x8],rdi
  406fef:	mov    QWORD PTR [rbp-0x10],rsi
  406ff3:	mov    rax,QWORD PTR [rbp-0x8]
  406ff7:	mov    rax,QWORD PTR [rax+0x30]
  406ffb:	movzx  eax,WORD PTR [rax+0xe]
  406fff:	cmp    ax,0x5
  407003:	je     407024 <flatcc_builder_truncate_offset_vector@@Base+0x41>
  407005:	lea    rcx,[rip+0x6a94]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  40700c:	mov    edx,0x3e2
  407011:	lea    rsi,[rip+0x63a8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407018:	lea    rdi,[rip+0x6559]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  40701f:	call   403070 <__assert_fail@plt>
  407024:	mov    rax,QWORD PTR [rbp-0x8]
  407028:	mov    rax,QWORD PTR [rax+0x30]
  40702c:	mov    eax,DWORD PTR [rax+0x14]
  40702f:	mov    rdx,QWORD PTR [rbp-0x10]
  407033:	cmp    eax,edx
  407035:	jae    407070 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  407037:	mov    rax,QWORD PTR [rbp-0x8]
  40703b:	mov    rax,QWORD PTR [rax+0x30]
  40703f:	mov    eax,DWORD PTR [rax+0x14]
  407042:	mov    rdx,QWORD PTR [rbp-0x10]
  407046:	cmp    eax,edx
  407048:	jae    407069 <flatcc_builder_truncate_offset_vector@@Base+0x86>
  40704a:	lea    rcx,[rip+0x6a4f]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  407051:	mov    edx,0x3e3
  407056:	lea    rsi,[rip+0x6363]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40705d:	lea    rdi,[rip+0x65a4]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  407064:	call   403070 <__assert_fail@plt>
  407069:	mov    eax,0xffffffff
  40706e:	jmp    4070b1 <flatcc_builder_truncate_offset_vector@@Base+0xce>
  407070:	mov    rax,QWORD PTR [rbp-0x8]
  407074:	mov    rax,QWORD PTR [rax+0x30]
  407078:	mov    rdx,QWORD PTR [rbp-0x8]
  40707c:	mov    rdx,QWORD PTR [rdx+0x30]
  407080:	mov    edx,DWORD PTR [rdx+0x14]
  407083:	mov    rcx,QWORD PTR [rbp-0x10]
  407087:	sub    edx,ecx
  407089:	mov    DWORD PTR [rax+0x14],edx
  40708c:	mov    rax,QWORD PTR [rbp-0x8]
  407090:	mov    rax,QWORD PTR [rax+0x30]
  407094:	mov    eax,DWORD PTR [rax+0x10]
  407097:	mov    rdx,QWORD PTR [rbp-0x10]
  40709b:	imul   edx,eax
  40709e:	mov    rax,QWORD PTR [rbp-0x8]
  4070a2:	mov    esi,edx
  4070a4:	mov    rdi,rax
  4070a7:	call   404aff <flatcc_builder_default_alloc@@Base+0x2dd>
  4070ac:	mov    eax,0x0
  4070b1:	leave  
  4070b2:	ret    

00000000004070b3 <flatcc_builder_truncate_string@@Base>:
  4070b3:	push   rbp
  4070b4:	mov    rbp,rsp
  4070b7:	sub    rsp,0x10
  4070bb:	mov    QWORD PTR [rbp-0x8],rdi
  4070bf:	mov    QWORD PTR [rbp-0x10],rsi
  4070c3:	mov    rax,QWORD PTR [rbp-0x8]
  4070c7:	mov    rax,QWORD PTR [rax+0x30]
  4070cb:	movzx  eax,WORD PTR [rax+0xe]
  4070cf:	cmp    ax,0x6
  4070d3:	je     4070f4 <flatcc_builder_truncate_string@@Base+0x41>
  4070d5:	lea    rcx,[rip+0x69f4]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  4070dc:	mov    edx,0x3eb
  4070e1:	lea    rsi,[rip+0x62d8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4070e8:	lea    rdi,[rip+0x64c1]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  4070ef:	call   403070 <__assert_fail@plt>
  4070f4:	mov    rax,QWORD PTR [rbp-0x8]
  4070f8:	mov    rax,QWORD PTR [rax+0x30]
  4070fc:	mov    eax,DWORD PTR [rax+0x14]
  4070ff:	mov    eax,eax
  407101:	cmp    rax,QWORD PTR [rbp-0x10]
  407105:	jae    407140 <flatcc_builder_truncate_string@@Base+0x8d>
  407107:	mov    rax,QWORD PTR [rbp-0x8]
  40710b:	mov    rax,QWORD PTR [rax+0x30]
  40710f:	mov    eax,DWORD PTR [rax+0x14]
  407112:	mov    eax,eax
  407114:	cmp    rax,QWORD PTR [rbp-0x10]
  407118:	jae    407139 <flatcc_builder_truncate_string@@Base+0x86>
  40711a:	lea    rcx,[rip+0x69af]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  407121:	mov    edx,0x3ec
  407126:	lea    rsi,[rip+0x6293]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40712d:	lea    rdi,[rip+0x6514]        # 40d648 <flatcc_builder_padding_base@@Base+0x488>
  407134:	call   403070 <__assert_fail@plt>
  407139:	mov    eax,0xffffffff
  40713e:	jmp    407175 <flatcc_builder_truncate_string@@Base+0xc2>
  407140:	mov    rax,QWORD PTR [rbp-0x8]
  407144:	mov    rax,QWORD PTR [rax+0x30]
  407148:	mov    rdx,QWORD PTR [rbp-0x8]
  40714c:	mov    rdx,QWORD PTR [rdx+0x30]
  407150:	mov    edx,DWORD PTR [rdx+0x14]
  407153:	mov    rcx,QWORD PTR [rbp-0x10]
  407157:	sub    edx,ecx
  407159:	mov    DWORD PTR [rax+0x14],edx
  40715c:	mov    rax,QWORD PTR [rbp-0x10]
  407160:	mov    edx,eax
  407162:	mov    rax,QWORD PTR [rbp-0x8]
  407166:	mov    esi,edx
  407168:	mov    rdi,rax
  40716b:	call   404aff <flatcc_builder_default_alloc@@Base+0x2dd>
  407170:	mov    eax,0x0
  407175:	leave  
  407176:	ret    

0000000000407177 <flatcc_builder_start_vector@@Base>:
  407177:	push   rbp
  407178:	mov    rbp,rsp
  40717b:	sub    rsp,0x20
  40717f:	mov    QWORD PTR [rbp-0x8],rdi
  407183:	mov    QWORD PTR [rbp-0x10],rsi
  407187:	mov    eax,edx
  407189:	mov    QWORD PTR [rbp-0x20],rcx
  40718d:	mov    WORD PTR [rbp-0x14],ax
  407191:	lea    rax,[rbp-0x14]
  407195:	mov    esi,0x4
  40719a:	mov    rdi,rax
  40719d:	call   40549d <flatcc_builder_clear@@Base+0xc7>
  4071a2:	movzx  eax,WORD PTR [rbp-0x14]
  4071a6:	movzx  edx,ax
  4071a9:	mov    rax,QWORD PTR [rbp-0x8]
  4071ad:	mov    esi,edx
  4071af:	mov    rdi,rax
  4071b2:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4071b7:	test   eax,eax
  4071b9:	je     4071c2 <flatcc_builder_start_vector@@Base+0x4b>
  4071bb:	mov    eax,0xffffffff
  4071c0:	jmp    407213 <flatcc_builder_start_vector@@Base+0x9c>
  4071c2:	mov    rax,QWORD PTR [rbp-0x8]
  4071c6:	mov    rax,QWORD PTR [rax+0x30]
  4071ca:	mov    rdx,QWORD PTR [rbp-0x10]
  4071ce:	mov    DWORD PTR [rax+0x10],edx
  4071d1:	mov    rax,QWORD PTR [rbp-0x8]
  4071d5:	mov    rax,QWORD PTR [rax+0x30]
  4071d9:	mov    DWORD PTR [rax+0x14],0x0
  4071e0:	mov    rax,QWORD PTR [rbp-0x8]
  4071e4:	mov    rax,QWORD PTR [rax+0x30]
  4071e8:	mov    rdx,QWORD PTR [rbp-0x20]
  4071ec:	mov    DWORD PTR [rax+0x18],edx
  4071ef:	mov    rax,QWORD PTR [rbp-0x8]
  4071f3:	mov    rax,QWORD PTR [rax+0x30]
  4071f7:	mov    WORD PTR [rax+0xe],0x4
  4071fd:	mov    rax,QWORD PTR [rbp-0x8]
  407201:	mov    esi,0xfffffffc
  407206:	mov    rdi,rax
  407209:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  40720e:	mov    eax,0x0
  407213:	leave  
  407214:	ret    

0000000000407215 <flatcc_builder_start_offset_vector@@Base>:
  407215:	push   rbp
  407216:	mov    rbp,rsp
  407219:	sub    rsp,0x10
  40721d:	mov    QWORD PTR [rbp-0x8],rdi
  407221:	mov    rax,QWORD PTR [rbp-0x8]
  407225:	mov    esi,0x4
  40722a:	mov    rdi,rax
  40722d:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  407232:	test   eax,eax
  407234:	je     40723d <flatcc_builder_start_offset_vector@@Base+0x28>
  407236:	mov    eax,0xffffffff
  40723b:	jmp    40727f <flatcc_builder_start_offset_vector@@Base+0x6a>
  40723d:	mov    rax,QWORD PTR [rbp-0x8]
  407241:	mov    rax,QWORD PTR [rax+0x30]
  407245:	mov    DWORD PTR [rax+0x10],0x4
  40724c:	mov    rax,QWORD PTR [rbp-0x8]
  407250:	mov    rax,QWORD PTR [rax+0x30]
  407254:	mov    DWORD PTR [rax+0x14],0x0
  40725b:	mov    rax,QWORD PTR [rbp-0x8]
  40725f:	mov    rax,QWORD PTR [rax+0x30]
  407263:	mov    WORD PTR [rax+0xe],0x5
  407269:	mov    rax,QWORD PTR [rbp-0x8]
  40726d:	mov    esi,0xfffffffc
  407272:	mov    rdi,rax
  407275:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  40727a:	mov    eax,0x0
  40727f:	leave  
  407280:	ret    

0000000000407281 <flatcc_builder_create_offset_vector@@Base>:
  407281:	push   rbp
  407282:	mov    rbp,rsp
  407285:	sub    rsp,0x30
  407289:	mov    QWORD PTR [rbp-0x18],rdi
  40728d:	mov    QWORD PTR [rbp-0x20],rsi
  407291:	mov    QWORD PTR [rbp-0x28],rdx
  407295:	mov    rax,QWORD PTR [rbp-0x18]
  407299:	mov    rdi,rax
  40729c:	call   407215 <flatcc_builder_start_offset_vector@@Base>
  4072a1:	test   eax,eax
  4072a3:	je     4072ac <flatcc_builder_create_offset_vector@@Base+0x2b>
  4072a5:	mov    eax,0x0
  4072aa:	jmp    4072fc <flatcc_builder_create_offset_vector@@Base+0x7b>
  4072ac:	mov    rdx,QWORD PTR [rbp-0x28]
  4072b0:	mov    rax,QWORD PTR [rbp-0x18]
  4072b4:	mov    rsi,rdx
  4072b7:	mov    rdi,rax
  4072ba:	call   406c25 <flatcc_builder_extend_offset_vector@@Base>
  4072bf:	mov    QWORD PTR [rbp-0x8],rax
  4072c3:	cmp    QWORD PTR [rbp-0x8],0x0
  4072c8:	jne    4072d1 <flatcc_builder_create_offset_vector@@Base+0x50>
  4072ca:	mov    eax,0x0
  4072cf:	jmp    4072fc <flatcc_builder_create_offset_vector@@Base+0x7b>
  4072d1:	mov    rax,QWORD PTR [rbp-0x28]
  4072d5:	lea    rdx,[rax*4+0x0]
  4072dd:	mov    rcx,QWORD PTR [rbp-0x20]
  4072e1:	mov    rax,QWORD PTR [rbp-0x8]
  4072e5:	mov    rsi,rcx
  4072e8:	mov    rdi,rax
  4072eb:	call   4030b0 <memcpy@plt>
  4072f0:	mov    rax,QWORD PTR [rbp-0x18]
  4072f4:	mov    rdi,rax
  4072f7:	call   408807 <flatcc_builder_end_offset_vector@@Base>
  4072fc:	leave  
  4072fd:	ret    

00000000004072fe <flatcc_builder_start_string@@Base>:
  4072fe:	push   rbp
  4072ff:	mov    rbp,rsp
  407302:	sub    rsp,0x10
  407306:	mov    QWORD PTR [rbp-0x8],rdi
  40730a:	mov    rax,QWORD PTR [rbp-0x8]
  40730e:	mov    esi,0x1
  407313:	mov    rdi,rax
  407316:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40731b:	test   eax,eax
  40731d:	je     407326 <flatcc_builder_start_string@@Base+0x28>
  40731f:	mov    eax,0xffffffff
  407324:	jmp    407368 <flatcc_builder_start_string@@Base+0x6a>
  407326:	mov    rax,QWORD PTR [rbp-0x8]
  40732a:	mov    rax,QWORD PTR [rax+0x30]
  40732e:	mov    DWORD PTR [rax+0x10],0x1
  407335:	mov    rax,QWORD PTR [rbp-0x8]
  407339:	mov    rax,QWORD PTR [rax+0x30]
  40733d:	mov    DWORD PTR [rax+0x14],0x0
  407344:	mov    rax,QWORD PTR [rbp-0x8]
  407348:	mov    rax,QWORD PTR [rax+0x30]
  40734c:	mov    WORD PTR [rax+0xe],0x6
  407352:	mov    rax,QWORD PTR [rbp-0x8]
  407356:	mov    esi,0xfffffffc
  40735b:	mov    rdi,rax
  40735e:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  407363:	mov    eax,0x0
  407368:	leave  
  407369:	ret    

000000000040736a <flatcc_builder_reserve_table@@Base>:
  40736a:	push   rbp
  40736b:	mov    rbp,rsp
  40736e:	sub    rsp,0x10
  407372:	mov    QWORD PTR [rbp-0x8],rdi
  407376:	mov    DWORD PTR [rbp-0xc],esi
  407379:	cmp    DWORD PTR [rbp-0xc],0x0
  40737d:	jns    40739e <flatcc_builder_reserve_table@@Base+0x34>
  40737f:	lea    rcx,[rip+0x676a]        # 40daf0 <flatcc_builder_padding_base@@Base+0x930>
  407386:	mov    edx,0x429
  40738b:	lea    rsi,[rip+0x602e]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407392:	lea    rdi,[rip+0x62d1]        # 40d66a <flatcc_builder_padding_base@@Base+0x4aa>
  407399:	call   403070 <__assert_fail@plt>
  40739e:	mov    edx,DWORD PTR [rbp-0xc]
  4073a1:	mov    rax,QWORD PTR [rbp-0x8]
  4073a5:	mov    esi,edx
  4073a7:	mov    rdi,rax
  4073aa:	call   404ddf <flatcc_builder_default_alloc@@Base+0x5bd>
  4073af:	leave  
  4073b0:	ret    

00000000004073b1 <flatcc_builder_start_table@@Base>:
  4073b1:	push   rbp
  4073b2:	mov    rbp,rsp
  4073b5:	sub    rsp,0x10
  4073b9:	mov    QWORD PTR [rbp-0x8],rdi
  4073bd:	mov    DWORD PTR [rbp-0xc],esi
  4073c0:	mov    rax,QWORD PTR [rbp-0x8]
  4073c4:	mov    esi,0x4
  4073c9:	mov    rdi,rax
  4073cc:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4073d1:	test   eax,eax
  4073d3:	je     4073df <flatcc_builder_start_table@@Base+0x2e>
  4073d5:	mov    eax,0xffffffff
  4073da:	jmp    4074af <flatcc_builder_start_table@@Base+0xfe>
  4073df:	mov    rax,QWORD PTR [rbp-0x8]
  4073e3:	mov    rax,QWORD PTR [rax+0x30]
  4073e7:	mov    rdx,QWORD PTR [rbp-0x8]
  4073eb:	mov    rdx,QWORD PTR [rdx+0x8]
  4073ef:	mov    rcx,rdx
  4073f2:	mov    rdx,QWORD PTR [rbp-0x8]
  4073f6:	mov    rdx,QWORD PTR [rdx+0x58]
  4073fa:	sub    rcx,rdx
  4073fd:	mov    rdx,rcx
  407400:	mov    DWORD PTR [rax+0x10],edx
  407403:	mov    rax,QWORD PTR [rbp-0x8]
  407407:	mov    rax,QWORD PTR [rax+0x30]
  40740b:	mov    rdx,QWORD PTR [rbp-0x8]
  40740f:	mov    rdx,QWORD PTR [rdx]
  407412:	mov    rcx,rdx
  407415:	mov    rdx,QWORD PTR [rbp-0x8]
  407419:	mov    rdx,QWORD PTR [rdx+0x88]
  407420:	sub    rcx,rdx
  407423:	mov    rdx,rcx
  407426:	mov    DWORD PTR [rax+0x14],edx
  407429:	mov    rax,QWORD PTR [rbp-0x8]
  40742d:	mov    rax,QWORD PTR [rax+0x30]
  407431:	mov    rdx,QWORD PTR [rbp-0x8]
  407435:	mov    edx,DWORD PTR [rdx+0x14]
  407438:	mov    DWORD PTR [rax+0x18],edx
  40743b:	mov    rax,QWORD PTR [rbp-0x8]
  40743f:	mov    rax,QWORD PTR [rax+0x30]
  407443:	mov    rdx,QWORD PTR [rbp-0x8]
  407447:	movzx  edx,WORD PTR [rdx+0x10]
  40744b:	mov    WORD PTR [rax+0x1c],dx
  40744f:	mov    rax,QWORD PTR [rbp-0x8]
  407453:	mov    DWORD PTR [rax+0x14],0x0
  40745a:	mov    rax,QWORD PTR [rbp-0x8]
  40745e:	mov    DWORD PTR [rax+0x14],0x2f693b52
  407465:	mov    rax,QWORD PTR [rbp-0x8]
  407469:	mov    WORD PTR [rax+0x10],0x0
  40746f:	mov    rax,QWORD PTR [rbp-0x8]
  407473:	mov    rax,QWORD PTR [rax+0x30]
  407477:	mov    WORD PTR [rax+0xe],0x3
  40747d:	mov    edx,DWORD PTR [rbp-0xc]
  407480:	mov    rax,QWORD PTR [rbp-0x8]
  407484:	mov    esi,edx
  407486:	mov    rdi,rax
  407489:	call   404ddf <flatcc_builder_default_alloc@@Base+0x5bd>
  40748e:	test   eax,eax
  407490:	je     407499 <flatcc_builder_start_table@@Base+0xe8>
  407492:	mov    eax,0xffffffff
  407497:	jmp    4074af <flatcc_builder_start_table@@Base+0xfe>
  407499:	mov    rax,QWORD PTR [rbp-0x8]
  40749d:	mov    esi,0xfffc
  4074a2:	mov    rdi,rax
  4074a5:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  4074aa:	mov    eax,0x0
  4074af:	leave  
  4074b0:	ret    

00000000004074b1 <flatcc_builder_create_vtable@@Base>:
  4074b1:	push   rbp
  4074b2:	mov    rbp,rsp
  4074b5:	sub    rsp,0xd0
  4074bc:	mov    QWORD PTR [rbp-0xb8],rdi
  4074c3:	mov    QWORD PTR [rbp-0xc0],rsi
  4074ca:	mov    eax,edx
  4074cc:	mov    WORD PTR [rbp-0xc4],ax
  4074d3:	mov    rax,QWORD PTR fs:0x28
  4074dc:	mov    QWORD PTR [rbp-0x8],rax
  4074e0:	xor    eax,eax
  4074e2:	mov    QWORD PTR [rbp-0xa0],0x0
  4074ed:	mov    DWORD PTR [rbp-0x98],0x0
  4074f7:	cmp    WORD PTR [rbp-0xc4],0x0
  4074ff:	je     407569 <flatcc_builder_create_vtable@@Base+0xb8>
  407501:	mov    rdx,QWORD PTR [rbp-0xa0]
  407508:	movzx  eax,WORD PTR [rbp-0xc4]
  40750f:	add    rax,rdx
  407512:	mov    QWORD PTR [rbp-0xa0],rax
  407519:	mov    eax,DWORD PTR [rbp-0x98]
  40751f:	cdqe   
  407521:	shl    rax,0x4
  407525:	add    rax,rbp
  407528:	lea    rdx,[rax-0x90]
  40752f:	mov    rax,QWORD PTR [rbp-0xc0]
  407536:	mov    QWORD PTR [rdx],rax
  407539:	mov    edx,DWORD PTR [rbp-0x98]
  40753f:	movzx  eax,WORD PTR [rbp-0xc4]
  407546:	movsxd rdx,edx
  407549:	shl    rdx,0x4
  40754d:	add    rdx,rbp
  407550:	sub    rdx,0x88
  407557:	mov    QWORD PTR [rdx],rax
  40755a:	mov    eax,DWORD PTR [rbp-0x98]
  407560:	add    eax,0x1
  407563:	mov    DWORD PTR [rbp-0x98],eax
  407569:	mov    rax,QWORD PTR [rbp-0xb8]
  407570:	mov    eax,DWORD PTR [rax+0x100]
  407576:	test   eax,eax
  407578:	jne    4075ba <flatcc_builder_create_vtable@@Base+0x109>
  40757a:	mov    rax,QWORD PTR [rbp-0xb8]
  407581:	mov    eax,DWORD PTR [rax+0x124]
  407587:	test   eax,eax
  407589:	jne    4075ba <flatcc_builder_create_vtable@@Base+0x109>
  40758b:	lea    rdx,[rbp-0xa0]
  407592:	mov    rax,QWORD PTR [rbp-0xb8]
  407599:	mov    rsi,rdx
  40759c:	mov    rdi,rax
  40759f:	call   405b4f <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  4075a4:	mov    DWORD PTR [rbp-0xa4],eax
  4075aa:	cmp    DWORD PTR [rbp-0xa4],0x0
  4075b1:	jne    4075f0 <flatcc_builder_create_vtable@@Base+0x13f>
  4075b3:	mov    eax,0x0
  4075b8:	jmp    4075f6 <flatcc_builder_create_vtable@@Base+0x145>
  4075ba:	lea    rdx,[rbp-0xa0]
  4075c1:	mov    rax,QWORD PTR [rbp-0xb8]
  4075c8:	mov    rsi,rdx
  4075cb:	mov    rdi,rax
  4075ce:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4075d3:	mov    DWORD PTR [rbp-0xa4],eax
  4075d9:	cmp    DWORD PTR [rbp-0xa4],0x0
  4075e0:	jne    4075e9 <flatcc_builder_create_vtable@@Base+0x138>
  4075e2:	mov    eax,0x0
  4075e7:	jmp    4075f6 <flatcc_builder_create_vtable@@Base+0x145>
  4075e9:	add    DWORD PTR [rbp-0xa4],0x1
  4075f0:	mov    eax,DWORD PTR [rbp-0xa4]
  4075f6:	mov    rcx,QWORD PTR [rbp-0x8]
  4075fa:	xor    rcx,QWORD PTR fs:0x28
  407603:	je     40760a <flatcc_builder_create_vtable@@Base+0x159>
  407605:	call   403060 <__stack_chk_fail@plt>
  40760a:	leave  
  40760b:	ret    

000000000040760c <flatcc_builder_create_cached_vtable@@Base>:
  40760c:	push   rbp
  40760d:	mov    rbp,rsp
  407610:	sub    rsp,0x50
  407614:	mov    QWORD PTR [rbp-0x38],rdi
  407618:	mov    QWORD PTR [rbp-0x40],rsi
  40761c:	mov    eax,edx
  40761e:	mov    DWORD PTR [rbp-0x48],ecx
  407621:	mov    WORD PTR [rbp-0x44],ax
  407625:	mov    edx,DWORD PTR [rbp-0x48]
  407628:	mov    rax,QWORD PTR [rbp-0x38]
  40762c:	mov    esi,edx
  40762e:	mov    rdi,rax
  407631:	call   404fec <flatcc_builder_default_alloc@@Base+0x7ca>
  407636:	mov    QWORD PTR [rbp-0x18],rax
  40763a:	cmp    QWORD PTR [rbp-0x18],0x0
  40763f:	jne    40764b <flatcc_builder_create_cached_vtable@@Base+0x3f>
  407641:	mov    eax,0x0
  407646:	jmp    4078ec <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40764b:	mov    rax,QWORD PTR [rbp-0x18]
  40764f:	mov    QWORD PTR [rbp-0x20],rax
  407653:	mov    rax,QWORD PTR [rbp-0x20]
  407657:	mov    eax,DWORD PTR [rax]
  407659:	mov    DWORD PTR [rbp-0x2c],eax
  40765c:	mov    QWORD PTR [rbp-0x28],0x0
  407664:	jmp    407743 <flatcc_builder_create_cached_vtable@@Base+0x137>
  407669:	mov    rax,QWORD PTR [rbp-0x38]
  40766d:	mov    rdx,QWORD PTR [rax+0xb8]
  407674:	mov    eax,DWORD PTR [rbp-0x2c]
  407677:	add    rax,rdx
  40767a:	mov    QWORD PTR [rbp-0x10],rax
  40767e:	mov    rax,QWORD PTR [rbp-0x38]
  407682:	mov    rdx,QWORD PTR [rax+0x78]
  407686:	mov    rax,QWORD PTR [rbp-0x10]
  40768a:	mov    eax,DWORD PTR [rax+0x8]
  40768d:	mov    eax,eax
  40768f:	add    rax,rdx
  407692:	mov    QWORD PTR [rbp-0x8],rax
  407696:	mov    rax,QWORD PTR [rbp-0x8]
  40769a:	movzx  eax,WORD PTR [rax]
  40769d:	cmp    ax,WORD PTR [rbp-0x44]
  4076a1:	jne    4076be <flatcc_builder_create_cached_vtable@@Base+0xb2>
  4076a3:	movzx  edx,WORD PTR [rbp-0x44]
  4076a7:	mov    rcx,QWORD PTR [rbp-0x8]
  4076ab:	mov    rax,QWORD PTR [rbp-0x40]
  4076af:	mov    rsi,rcx
  4076b2:	mov    rdi,rax
  4076b5:	call   4030a0 <memcmp@plt>
  4076ba:	test   eax,eax
  4076bc:	je     4076d6 <flatcc_builder_create_cached_vtable@@Base+0xca>
  4076be:	mov    rax,QWORD PTR [rbp-0x10]
  4076c2:	add    rax,0xc
  4076c6:	mov    QWORD PTR [rbp-0x20],rax
  4076ca:	mov    rax,QWORD PTR [rbp-0x10]
  4076ce:	mov    eax,DWORD PTR [rax+0xc]
  4076d1:	mov    DWORD PTR [rbp-0x2c],eax
  4076d4:	jmp    407743 <flatcc_builder_create_cached_vtable@@Base+0x137>
  4076d6:	mov    rax,QWORD PTR [rbp-0x10]
  4076da:	mov    edx,DWORD PTR [rax+0x4]
  4076dd:	mov    rax,QWORD PTR [rbp-0x38]
  4076e1:	mov    eax,DWORD PTR [rax+0x100]
  4076e7:	cmp    edx,eax
  4076e9:	je     40770b <flatcc_builder_create_cached_vtable@@Base+0xff>
  4076eb:	mov    rax,QWORD PTR [rbp-0x10]
  4076ef:	mov    QWORD PTR [rbp-0x28],rax
  4076f3:	mov    rax,QWORD PTR [rbp-0x10]
  4076f7:	add    rax,0xc
  4076fb:	mov    QWORD PTR [rbp-0x20],rax
  4076ff:	mov    rax,QWORD PTR [rbp-0x10]
  407703:	mov    eax,DWORD PTR [rax+0xc]
  407706:	mov    DWORD PTR [rbp-0x2c],eax
  407709:	jmp    407743 <flatcc_builder_create_cached_vtable@@Base+0x137>
  40770b:	mov    rax,QWORD PTR [rbp-0x20]
  40770f:	cmp    rax,QWORD PTR [rbp-0x18]
  407713:	je     407738 <flatcc_builder_create_cached_vtable@@Base+0x12c>
  407715:	mov    rax,QWORD PTR [rbp-0x10]
  407719:	mov    edx,DWORD PTR [rax+0xc]
  40771c:	mov    rax,QWORD PTR [rbp-0x20]
  407720:	mov    DWORD PTR [rax],edx
  407722:	mov    rax,QWORD PTR [rbp-0x18]
  407726:	mov    edx,DWORD PTR [rax]
  407728:	mov    rax,QWORD PTR [rbp-0x10]
  40772c:	mov    DWORD PTR [rax+0xc],edx
  40772f:	mov    rax,QWORD PTR [rbp-0x18]
  407733:	mov    edx,DWORD PTR [rbp-0x2c]
  407736:	mov    DWORD PTR [rax],edx
  407738:	mov    rax,QWORD PTR [rbp-0x10]
  40773c:	mov    eax,DWORD PTR [rax]
  40773e:	jmp    4078ec <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407743:	cmp    DWORD PTR [rbp-0x2c],0x0
  407747:	jne    407669 <flatcc_builder_create_cached_vtable@@Base+0x5d>
  40774d:	mov    rax,QWORD PTR [rbp-0x38]
  407751:	mov    eax,DWORD PTR [rax+0xe4]
  407757:	mov    edx,eax
  407759:	mov    rax,QWORD PTR [rbp-0x38]
  40775d:	mov    r8d,0x0
  407763:	mov    ecx,0x10
  407768:	mov    esi,0x6
  40776d:	mov    rdi,rax
  407770:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  407775:	mov    QWORD PTR [rbp-0x10],rax
  407779:	cmp    QWORD PTR [rbp-0x10],0x0
  40777e:	jne    40778a <flatcc_builder_create_cached_vtable@@Base+0x17e>
  407780:	mov    eax,0x0
  407785:	jmp    4078ec <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40778a:	mov    rax,QWORD PTR [rbp-0x38]
  40778e:	mov    eax,DWORD PTR [rax+0xe4]
  407794:	mov    DWORD PTR [rbp-0x2c],eax
  407797:	mov    rax,QWORD PTR [rbp-0x38]
  40779b:	mov    eax,DWORD PTR [rax+0xe4]
  4077a1:	lea    edx,[rax+0x10]
  4077a4:	mov    rax,QWORD PTR [rbp-0x38]
  4077a8:	mov    DWORD PTR [rax+0xe4],edx
  4077ae:	mov    rax,QWORD PTR [rbp-0x38]
  4077b2:	mov    edx,DWORD PTR [rax+0x100]
  4077b8:	mov    rax,QWORD PTR [rbp-0x10]
  4077bc:	mov    DWORD PTR [rax+0x4],edx
  4077bf:	mov    rax,QWORD PTR [rbp-0x18]
  4077c3:	mov    edx,DWORD PTR [rax]
  4077c5:	mov    rax,QWORD PTR [rbp-0x10]
  4077c9:	mov    DWORD PTR [rax+0xc],edx
  4077cc:	mov    rax,QWORD PTR [rbp-0x18]
  4077d0:	mov    edx,DWORD PTR [rbp-0x2c]
  4077d3:	mov    DWORD PTR [rax],edx
  4077d5:	movzx  edx,WORD PTR [rbp-0x44]
  4077d9:	mov    rcx,QWORD PTR [rbp-0x40]
  4077dd:	mov    rax,QWORD PTR [rbp-0x38]
  4077e1:	mov    rsi,rcx
  4077e4:	mov    rdi,rax
  4077e7:	call   4074b1 <flatcc_builder_create_vtable@@Base>
  4077ec:	mov    edx,eax
  4077ee:	mov    rax,QWORD PTR [rbp-0x10]
  4077f2:	mov    DWORD PTR [rax],edx
  4077f4:	mov    rax,QWORD PTR [rbp-0x10]
  4077f8:	mov    eax,DWORD PTR [rax]
  4077fa:	test   eax,eax
  4077fc:	jne    407808 <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  4077fe:	mov    eax,0x0
  407803:	jmp    4078ec <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407808:	cmp    QWORD PTR [rbp-0x28],0x0
  40780d:	je     407822 <flatcc_builder_create_cached_vtable@@Base+0x216>
  40780f:	mov    rax,QWORD PTR [rbp-0x28]
  407813:	mov    edx,DWORD PTR [rax+0x8]
  407816:	mov    rax,QWORD PTR [rbp-0x10]
  40781a:	mov    DWORD PTR [rax+0x8],edx
  40781d:	jmp    4078e6 <flatcc_builder_create_cached_vtable@@Base+0x2da>
  407822:	mov    rax,QWORD PTR [rbp-0x38]
  407826:	mov    rax,QWORD PTR [rax+0x118]
  40782d:	test   rax,rax
  407830:	je     407865 <flatcc_builder_create_cached_vtable@@Base+0x259>
  407832:	mov    rax,QWORD PTR [rbp-0x38]
  407836:	mov    rdx,QWORD PTR [rax+0x118]
  40783d:	mov    rax,QWORD PTR [rbp-0x38]
  407841:	mov    ecx,DWORD PTR [rax+0xe0]
  407847:	movzx  eax,WORD PTR [rbp-0x44]
  40784b:	add    eax,ecx
  40784d:	mov    eax,eax
  40784f:	cmp    rdx,rax
  407852:	jae    407865 <flatcc_builder_create_cached_vtable@@Base+0x259>
  407854:	mov    rax,QWORD PTR [rbp-0x38]
  407858:	mov    rdi,rax
  40785b:	call   405060 <flatcc_builder_flush_vtable_cache@@Base>
  407860:	jmp    4078e6 <flatcc_builder_create_cached_vtable@@Base+0x2da>
  407865:	movzx  edx,WORD PTR [rbp-0x44]
  407869:	mov    rax,QWORD PTR [rbp-0x38]
  40786d:	mov    eax,DWORD PTR [rax+0xe0]
  407873:	mov    esi,eax
  407875:	mov    rax,QWORD PTR [rbp-0x38]
  407879:	mov    r8d,0x0
  40787f:	mov    rcx,rdx
  407882:	mov    rdx,rsi
  407885:	mov    esi,0x2
  40788a:	mov    rdi,rax
  40788d:	call   404d2e <flatcc_builder_default_alloc@@Base+0x50c>
  407892:	mov    QWORD PTR [rbp-0x8],rax
  407896:	cmp    QWORD PTR [rbp-0x8],0x0
  40789b:	jne    4078a4 <flatcc_builder_create_cached_vtable@@Base+0x298>
  40789d:	mov    eax,0xffffffff
  4078a2:	jmp    4078ec <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4078a4:	mov    rax,QWORD PTR [rbp-0x38]
  4078a8:	mov    edx,DWORD PTR [rax+0xe0]
  4078ae:	mov    rax,QWORD PTR [rbp-0x10]
  4078b2:	mov    DWORD PTR [rax+0x8],edx
  4078b5:	mov    rax,QWORD PTR [rbp-0x38]
  4078b9:	mov    edx,DWORD PTR [rax+0xe0]
  4078bf:	movzx  eax,WORD PTR [rbp-0x44]
  4078c3:	add    edx,eax
  4078c5:	mov    rax,QWORD PTR [rbp-0x38]
  4078c9:	mov    DWORD PTR [rax+0xe0],edx
  4078cf:	movzx  edx,WORD PTR [rbp-0x44]
  4078d3:	mov    rcx,QWORD PTR [rbp-0x40]
  4078d7:	mov    rax,QWORD PTR [rbp-0x8]
  4078db:	mov    rsi,rcx
  4078de:	mov    rdi,rax
  4078e1:	call   4030b0 <memcpy@plt>
  4078e6:	mov    rax,QWORD PTR [rbp-0x10]
  4078ea:	mov    eax,DWORD PTR [rax]
  4078ec:	leave  
  4078ed:	ret    

00000000004078ee <flatcc_builder_create_table@@Base>:
  4078ee:	push   rbp
  4078ef:	mov    rbp,rsp
  4078f2:	sub    rsp,0x100
  4078f9:	mov    QWORD PTR [rbp-0xd8],rdi
  407900:	mov    QWORD PTR [rbp-0xe0],rsi
  407907:	mov    QWORD PTR [rbp-0xe8],rdx
  40790e:	mov    eax,ecx
  407910:	mov    QWORD PTR [rbp-0xf8],r8
  407917:	mov    DWORD PTR [rbp-0xf0],r9d
  40791e:	mov    WORD PTR [rbp-0xec],ax
  407925:	mov    rax,QWORD PTR fs:0x28
  40792e:	mov    QWORD PTR [rbp-0x8],rax
  407932:	xor    eax,eax
  407934:	cmp    DWORD PTR [rbp-0xf0],0x0
  40793b:	jns    40795c <flatcc_builder_create_table@@Base+0x6e>
  40793d:	lea    rcx,[rip+0x61cc]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  407944:	mov    edx,0x4d5
  407949:	lea    rsi,[rip+0x5a70]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407950:	lea    rdi,[rip+0x5d1e]        # 40d675 <flatcc_builder_padding_base@@Base+0x4b5>
  407957:	call   403070 <__assert_fail@plt>
  40795c:	mov    eax,DWORD PTR [rbp+0x10]
  40795f:	and    eax,0x1
  407962:	test   eax,eax
  407964:	jne    407985 <flatcc_builder_create_table@@Base+0x97>
  407966:	lea    rcx,[rip+0x61a3]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  40796d:	mov    edx,0x4db
  407972:	lea    rsi,[rip+0x5a47]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407979:	lea    rdi,[rip+0x5d07]        # 40d687 <flatcc_builder_padding_base@@Base+0x4c7>
  407980:	call   403070 <__assert_fail@plt>
  407985:	lea    rax,[rbp-0xec]
  40798c:	mov    esi,0x4
  407991:	mov    rdi,rax
  407994:	call   40549d <flatcc_builder_clear@@Base+0xc7>
  407999:	movzx  eax,WORD PTR [rbp-0xec]
  4079a0:	movzx  edx,ax
  4079a3:	mov    rax,QWORD PTR [rbp-0xd8]
  4079aa:	mov    esi,edx
  4079ac:	mov    rdi,rax
  4079af:	call   40546c <flatcc_builder_clear@@Base+0x96>
  4079b4:	movzx  eax,WORD PTR [rbp-0xec]
  4079bb:	movzx  edx,ax
  4079be:	mov    rax,QWORD PTR [rbp-0xe8]
  4079c5:	mov    ecx,eax
  4079c7:	mov    rax,QWORD PTR [rbp-0xd8]
  4079ce:	mov    esi,ecx
  4079d0:	mov    rdi,rax
  4079d3:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4079d8:	mov    DWORD PTR [rbp-0xbc],eax
  4079de:	mov    rax,QWORD PTR [rbp-0xd8]
  4079e5:	mov    eax,DWORD PTR [rax+0xf0]
  4079eb:	mov    edx,eax
  4079ed:	mov    rax,QWORD PTR [rbp-0xe8]
  4079f4:	mov    ecx,eax
  4079f6:	mov    eax,DWORD PTR [rbp-0xbc]
  4079fc:	add    eax,ecx
  4079fe:	sub    edx,eax
  407a00:	mov    eax,edx
  407a02:	sub    eax,0x4
  407a05:	mov    DWORD PTR [rbp-0xb8],eax
  407a0b:	mov    eax,DWORD PTR [rbp+0x10]
  407a0e:	sub    eax,0x1
  407a11:	mov    DWORD PTR [rbp-0xb4],eax
  407a17:	mov    eax,DWORD PTR [rbp-0xb8]
  407a1d:	sub    eax,DWORD PTR [rbp-0xb4]
  407a23:	mov    DWORD PTR [rbp-0xb0],eax
  407a29:	mov    eax,DWORD PTR [rbp-0xb8]
  407a2f:	sub    eax,DWORD PTR [rbp-0xb0]
  407a35:	cmp    eax,DWORD PTR [rbp-0xb4]
  407a3b:	je     407a47 <flatcc_builder_create_table@@Base+0x159>
  407a3d:	mov    eax,0xffffffff
  407a42:	jmp    407c6b <flatcc_builder_create_table@@Base+0x37d>
  407a47:	mov    eax,DWORD PTR [rbp-0xb0]
  407a4d:	mov    edi,eax
  407a4f:	call   40475c <main@@Base+0x176>
  407a54:	mov    DWORD PTR [rbp-0xc4],eax
  407a5a:	mov    DWORD PTR [rbp-0xc0],0x0
  407a64:	jmp    407aef <flatcc_builder_create_table@@Base+0x201>
  407a69:	mov    eax,DWORD PTR [rbp-0xc0]
  407a6f:	cdqe   
  407a71:	lea    rdx,[rax+rax*1]
  407a75:	mov    rax,QWORD PTR [rbp-0xf8]
  407a7c:	add    rax,rdx
  407a7f:	movzx  eax,WORD PTR [rax]
  407a82:	movzx  edx,ax
  407a85:	mov    rax,QWORD PTR [rbp-0xe0]
  407a8c:	add    rax,rdx
  407a8f:	mov    QWORD PTR [rbp-0xa8],rax
  407a96:	mov    rax,QWORD PTR [rbp-0xa8]
  407a9d:	mov    eax,DWORD PTR [rax]
  407a9f:	sub    eax,DWORD PTR [rbp-0xb8]
  407aa5:	mov    edx,eax
  407aa7:	mov    eax,DWORD PTR [rbp-0xc0]
  407aad:	cdqe   
  407aaf:	lea    rcx,[rax+rax*1]
  407ab3:	mov    rax,QWORD PTR [rbp-0xf8]
  407aba:	add    rax,rcx
  407abd:	movzx  eax,WORD PTR [rax]
  407ac0:	movzx  eax,ax
  407ac3:	sub    edx,eax
  407ac5:	mov    eax,edx
  407ac7:	sub    eax,0x4
  407aca:	mov    DWORD PTR [rbp-0xac],eax
  407ad0:	mov    eax,DWORD PTR [rbp-0xac]
  407ad6:	mov    edi,eax
  407ad8:	call   40475c <main@@Base+0x176>
  407add:	mov    edx,eax
  407adf:	mov    rax,QWORD PTR [rbp-0xa8]
  407ae6:	mov    DWORD PTR [rax],edx
  407ae8:	add    DWORD PTR [rbp-0xc0],0x1
  407aef:	mov    eax,DWORD PTR [rbp-0xc0]
  407af5:	cmp    eax,DWORD PTR [rbp-0xf0]
  407afb:	jl     407a69 <flatcc_builder_create_table@@Base+0x17b>
  407b01:	mov    QWORD PTR [rbp-0xa0],0x0
  407b0c:	mov    DWORD PTR [rbp-0x98],0x0
  407b16:	mov    rax,QWORD PTR [rbp-0xa0]
  407b1d:	add    rax,0x4
  407b21:	mov    QWORD PTR [rbp-0xa0],rax
  407b28:	mov    eax,DWORD PTR [rbp-0x98]
  407b2e:	cdqe   
  407b30:	shl    rax,0x4
  407b34:	add    rax,rbp
  407b37:	lea    rdx,[rax-0x90]
  407b3e:	lea    rax,[rbp-0xc4]
  407b45:	mov    QWORD PTR [rdx],rax
  407b48:	mov    eax,DWORD PTR [rbp-0x98]
  407b4e:	cdqe   
  407b50:	shl    rax,0x4
  407b54:	add    rax,rbp
  407b57:	sub    rax,0x88
  407b5d:	mov    QWORD PTR [rax],0x4
  407b64:	mov    eax,DWORD PTR [rbp-0x98]
  407b6a:	add    eax,0x1
  407b6d:	mov    DWORD PTR [rbp-0x98],eax
  407b73:	cmp    QWORD PTR [rbp-0xe8],0x0
  407b7b:	je     407be4 <flatcc_builder_create_table@@Base+0x2f6>
  407b7d:	mov    rdx,QWORD PTR [rbp-0xa0]
  407b84:	mov    rax,QWORD PTR [rbp-0xe8]
  407b8b:	add    rax,rdx
  407b8e:	mov    QWORD PTR [rbp-0xa0],rax
  407b95:	mov    eax,DWORD PTR [rbp-0x98]
  407b9b:	cdqe   
  407b9d:	shl    rax,0x4
  407ba1:	add    rax,rbp
  407ba4:	lea    rdx,[rax-0x90]
  407bab:	mov    rax,QWORD PTR [rbp-0xe0]
  407bb2:	mov    QWORD PTR [rdx],rax
  407bb5:	mov    eax,DWORD PTR [rbp-0x98]
  407bbb:	cdqe   
  407bbd:	shl    rax,0x4
  407bc1:	add    rax,rbp
  407bc4:	lea    rdx,[rax-0x88]
  407bcb:	mov    rax,QWORD PTR [rbp-0xe8]
  407bd2:	mov    QWORD PTR [rdx],rax
  407bd5:	mov    eax,DWORD PTR [rbp-0x98]
  407bdb:	add    eax,0x1
  407bde:	mov    DWORD PTR [rbp-0x98],eax
  407be4:	cmp    DWORD PTR [rbp-0xbc],0x0
  407beb:	je     407c52 <flatcc_builder_create_table@@Base+0x364>
  407bed:	mov    rdx,QWORD PTR [rbp-0xa0]
  407bf4:	mov    eax,DWORD PTR [rbp-0xbc]
  407bfa:	add    rax,rdx
  407bfd:	mov    QWORD PTR [rbp-0xa0],rax
  407c04:	mov    eax,DWORD PTR [rbp-0x98]
  407c0a:	cdqe   
  407c0c:	shl    rax,0x4
  407c10:	add    rax,rbp
  407c13:	sub    rax,0x90
  407c19:	mov    rdx,0x40d1c0
  407c20:	mov    QWORD PTR [rax],rdx
  407c23:	mov    edx,DWORD PTR [rbp-0x98]
  407c29:	mov    eax,DWORD PTR [rbp-0xbc]
  407c2f:	movsxd rdx,edx
  407c32:	shl    rdx,0x4
  407c36:	add    rdx,rbp
  407c39:	sub    rdx,0x88
  407c40:	mov    QWORD PTR [rdx],rax
  407c43:	mov    eax,DWORD PTR [rbp-0x98]
  407c49:	add    eax,0x1
  407c4c:	mov    DWORD PTR [rbp-0x98],eax
  407c52:	lea    rdx,[rbp-0xa0]
  407c59:	mov    rax,QWORD PTR [rbp-0xd8]
  407c60:	mov    rsi,rdx
  407c63:	mov    rdi,rax
  407c66:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  407c6b:	mov    rsi,QWORD PTR [rbp-0x8]
  407c6f:	xor    rsi,QWORD PTR fs:0x28
  407c78:	je     407c7f <flatcc_builder_create_table@@Base+0x391>
  407c7a:	call   403060 <__stack_chk_fail@plt>
  407c7f:	leave  
  407c80:	ret    

0000000000407c81 <flatcc_builder_check_required_field@@Base>:
  407c81:	push   rbp
  407c82:	mov    rbp,rsp
  407c85:	sub    rsp,0x10
  407c89:	mov    QWORD PTR [rbp-0x8],rdi
  407c8d:	mov    eax,esi
  407c8f:	mov    WORD PTR [rbp-0xc],ax
  407c93:	mov    rax,QWORD PTR [rbp-0x8]
  407c97:	mov    rax,QWORD PTR [rax+0x30]
  407c9b:	movzx  eax,WORD PTR [rax+0xe]
  407c9f:	cmp    ax,0x3
  407ca3:	je     407cc4 <flatcc_builder_check_required_field@@Base+0x43>
  407ca5:	lea    rcx,[rip+0x5e94]        # 40db40 <flatcc_builder_padding_base@@Base+0x980>
  407cac:	mov    edx,0x4f8
  407cb1:	lea    rsi,[rip+0x5708]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407cb8:	lea    rdi,[rip+0x59d9]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407cbf:	call   403070 <__assert_fail@plt>
  407cc4:	mov    rax,QWORD PTR [rbp-0x8]
  407cc8:	movzx  eax,WORD PTR [rax+0x10]
  407ccc:	cmp    ax,WORD PTR [rbp-0xc]
  407cd0:	jbe    407cf3 <flatcc_builder_check_required_field@@Base+0x72>
  407cd2:	mov    rax,QWORD PTR [rbp-0x8]
  407cd6:	mov    rax,QWORD PTR [rax+0x8]
  407cda:	movzx  edx,WORD PTR [rbp-0xc]
  407cde:	add    rdx,rdx
  407ce1:	add    rax,rdx
  407ce4:	movzx  eax,WORD PTR [rax]
  407ce7:	test   ax,ax
  407cea:	je     407cf3 <flatcc_builder_check_required_field@@Base+0x72>
  407cec:	mov    eax,0x1
  407cf1:	jmp    407cf8 <flatcc_builder_check_required_field@@Base+0x77>
  407cf3:	mov    eax,0x0
  407cf8:	leave  
  407cf9:	ret    

0000000000407cfa <flatcc_builder_check_union_field@@Base>:
  407cfa:	push   rbp
  407cfb:	mov    rbp,rsp
  407cfe:	sub    rsp,0x10
  407d02:	mov    QWORD PTR [rbp-0x8],rdi
  407d06:	mov    eax,esi
  407d08:	mov    WORD PTR [rbp-0xc],ax
  407d0c:	mov    rax,QWORD PTR [rbp-0x8]
  407d10:	mov    rax,QWORD PTR [rax+0x30]
  407d14:	movzx  eax,WORD PTR [rax+0xe]
  407d18:	cmp    ax,0x3
  407d1c:	je     407d3d <flatcc_builder_check_union_field@@Base+0x43>
  407d1e:	lea    rcx,[rip+0x5e5b]        # 40db80 <flatcc_builder_padding_base@@Base+0x9c0>
  407d25:	mov    edx,0x4ff
  407d2a:	lea    rsi,[rip+0x568f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407d31:	lea    rdi,[rip+0x5960]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407d38:	call   403070 <__assert_fail@plt>
  407d3d:	cmp    WORD PTR [rbp-0xc],0x0
  407d42:	je     407d52 <flatcc_builder_check_union_field@@Base+0x58>
  407d44:	mov    rax,QWORD PTR [rbp-0x8]
  407d48:	movzx  eax,WORD PTR [rax+0x10]
  407d4c:	cmp    ax,WORD PTR [rbp-0xc]
  407d50:	ja     407d5c <flatcc_builder_check_union_field@@Base+0x62>
  407d52:	mov    eax,0x0
  407d57:	jmp    407e06 <flatcc_builder_check_union_field@@Base+0x10c>
  407d5c:	mov    rax,QWORD PTR [rbp-0x8]
  407d60:	mov    rax,QWORD PTR [rax+0x8]
  407d64:	movzx  edx,WORD PTR [rbp-0xc]
  407d68:	add    rdx,rdx
  407d6b:	sub    rdx,0x2
  407d6f:	add    rax,rdx
  407d72:	movzx  eax,WORD PTR [rax]
  407d75:	test   ax,ax
  407d78:	jne    407d9a <flatcc_builder_check_union_field@@Base+0xa0>
  407d7a:	mov    rax,QWORD PTR [rbp-0x8]
  407d7e:	mov    rax,QWORD PTR [rax+0x8]
  407d82:	movzx  edx,WORD PTR [rbp-0xc]
  407d86:	add    rdx,rdx
  407d89:	add    rax,rdx
  407d8c:	movzx  eax,WORD PTR [rax]
  407d8f:	test   ax,ax
  407d92:	sete   al
  407d95:	movzx  eax,al
  407d98:	jmp    407e06 <flatcc_builder_check_union_field@@Base+0x10c>
  407d9a:	mov    rax,QWORD PTR [rbp-0x8]
  407d9e:	mov    rdx,QWORD PTR [rax+0x18]
  407da2:	mov    rax,QWORD PTR [rbp-0x8]
  407da6:	mov    rax,QWORD PTR [rax+0x8]
  407daa:	movzx  ecx,WORD PTR [rbp-0xc]
  407dae:	add    rcx,rcx
  407db1:	sub    rcx,0x2
  407db5:	add    rax,rcx
  407db8:	movzx  eax,WORD PTR [rax]
  407dbb:	movzx  eax,ax
  407dbe:	add    rax,rdx
  407dc1:	movzx  eax,BYTE PTR [rax]
  407dc4:	test   al,al
  407dc6:	je     407de8 <flatcc_builder_check_union_field@@Base+0xee>
  407dc8:	mov    rax,QWORD PTR [rbp-0x8]
  407dcc:	mov    rax,QWORD PTR [rax+0x8]
  407dd0:	movzx  edx,WORD PTR [rbp-0xc]
  407dd4:	add    rdx,rdx
  407dd7:	add    rax,rdx
  407dda:	movzx  eax,WORD PTR [rax]
  407ddd:	test   ax,ax
  407de0:	setne  al
  407de3:	movzx  eax,al
  407de6:	jmp    407e06 <flatcc_builder_check_union_field@@Base+0x10c>
  407de8:	mov    rax,QWORD PTR [rbp-0x8]
  407dec:	mov    rax,QWORD PTR [rax+0x8]
  407df0:	movzx  edx,WORD PTR [rbp-0xc]
  407df4:	add    rdx,rdx
  407df7:	add    rax,rdx
  407dfa:	movzx  eax,WORD PTR [rax]
  407dfd:	test   ax,ax
  407e00:	sete   al
  407e03:	movzx  eax,al
  407e06:	leave  
  407e07:	ret    

0000000000407e08 <flatcc_builder_check_required@@Base>:
  407e08:	push   rbp
  407e09:	mov    rbp,rsp
  407e0c:	sub    rsp,0x30
  407e10:	mov    QWORD PTR [rbp-0x18],rdi
  407e14:	mov    QWORD PTR [rbp-0x20],rsi
  407e18:	mov    DWORD PTR [rbp-0x24],edx
  407e1b:	mov    rax,QWORD PTR [rbp-0x18]
  407e1f:	mov    rax,QWORD PTR [rax+0x30]
  407e23:	movzx  eax,WORD PTR [rax+0xe]
  407e27:	cmp    ax,0x3
  407e2b:	je     407e4c <flatcc_builder_check_required@@Base+0x44>
  407e2d:	lea    rcx,[rip+0x5d7c]        # 40dbb0 <flatcc_builder_padding_base@@Base+0x9f0>
  407e34:	mov    edx,0x511
  407e39:	lea    rsi,[rip+0x5580]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407e40:	lea    rdi,[rip+0x5851]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407e47:	call   403070 <__assert_fail@plt>
  407e4c:	mov    rax,QWORD PTR [rbp-0x18]
  407e50:	movzx  eax,WORD PTR [rax+0x10]
  407e54:	movzx  eax,ax
  407e57:	cmp    eax,DWORD PTR [rbp-0x24]
  407e5a:	jge    407e63 <flatcc_builder_check_required@@Base+0x5b>
  407e5c:	mov    eax,0x0
  407e61:	jmp    407eb1 <flatcc_builder_check_required@@Base+0xa9>
  407e63:	mov    DWORD PTR [rbp-0x4],0x0
  407e6a:	jmp    407ea4 <flatcc_builder_check_required@@Base+0x9c>
  407e6c:	mov    rax,QWORD PTR [rbp-0x18]
  407e70:	mov    rax,QWORD PTR [rax+0x8]
  407e74:	mov    edx,DWORD PTR [rbp-0x4]
  407e77:	movsxd rdx,edx
  407e7a:	lea    rcx,[rdx+rdx*1]
  407e7e:	mov    rdx,QWORD PTR [rbp-0x20]
  407e82:	add    rdx,rcx
  407e85:	movzx  edx,WORD PTR [rdx]
  407e88:	movzx  edx,dx
  407e8b:	add    rdx,rdx
  407e8e:	add    rax,rdx
  407e91:	movzx  eax,WORD PTR [rax]
  407e94:	test   ax,ax
  407e97:	jne    407ea0 <flatcc_builder_check_required@@Base+0x98>
  407e99:	mov    eax,0x0
  407e9e:	jmp    407eb1 <flatcc_builder_check_required@@Base+0xa9>
  407ea0:	add    DWORD PTR [rbp-0x4],0x1
  407ea4:	mov    eax,DWORD PTR [rbp-0x4]
  407ea7:	cmp    eax,DWORD PTR [rbp-0x24]
  407eaa:	jl     407e6c <flatcc_builder_check_required@@Base+0x64>
  407eac:	mov    eax,0x1
  407eb1:	leave  
  407eb2:	ret    

0000000000407eb3 <flatcc_builder_end_table@@Base>:
  407eb3:	push   rbp
  407eb4:	mov    rbp,rsp
  407eb7:	sub    rsp,0x30
  407ebb:	mov    QWORD PTR [rbp-0x28],rdi
  407ebf:	mov    rax,QWORD PTR [rbp-0x28]
  407ec3:	mov    rax,QWORD PTR [rax+0x30]
  407ec7:	movzx  eax,WORD PTR [rax+0xe]
  407ecb:	cmp    ax,0x3
  407ecf:	je     407ef0 <flatcc_builder_end_table@@Base+0x3d>
  407ed1:	lea    rcx,[rip+0x5cf8]        # 40dbd0 <flatcc_builder_padding_base@@Base+0xa10>
  407ed8:	mov    edx,0x525
  407edd:	lea    rsi,[rip+0x54dc]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407ee4:	lea    rdi,[rip+0x57ad]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407eeb:	call   403070 <__assert_fail@plt>
  407ef0:	mov    rax,QWORD PTR [rbp-0x28]
  407ef4:	mov    rax,QWORD PTR [rax+0x8]
  407ef8:	sub    rax,0x4
  407efc:	mov    QWORD PTR [rbp-0x10],rax
  407f00:	mov    rax,QWORD PTR [rbp-0x28]
  407f04:	movzx  eax,WORD PTR [rax+0x10]
  407f08:	movzx  eax,ax
  407f0b:	add    eax,0x2
  407f0e:	cdqe   
  407f10:	add    eax,eax
  407f12:	mov    WORD PTR [rbp-0x1e],ax
  407f16:	mov    rax,QWORD PTR [rbp-0x10]
  407f1a:	movzx  edx,WORD PTR [rbp-0x1e]
  407f1e:	mov    WORD PTR [rax],dx
  407f21:	mov    rax,QWORD PTR [rbp-0x10]
  407f25:	lea    rdx,[rax+0x2]
  407f29:	mov    rax,QWORD PTR [rbp-0x28]
  407f2d:	mov    eax,DWORD PTR [rax+0x20]
  407f30:	add    eax,0x4
  407f33:	mov    WORD PTR [rdx],ax
  407f36:	mov    rax,QWORD PTR [rbp-0x10]
  407f3a:	movzx  eax,WORD PTR [rax]
  407f3d:	movzx  edx,ax
  407f40:	mov    rax,QWORD PTR [rbp-0x28]
  407f44:	mov    eax,DWORD PTR [rax+0x14]
  407f47:	xor    eax,edx
  407f49:	imul   edx,eax,0x9e3779b1
  407f4f:	mov    rax,QWORD PTR [rbp-0x10]
  407f53:	add    rax,0x2
  407f57:	movzx  eax,WORD PTR [rax]
  407f5a:	movzx  eax,ax
  407f5d:	xor    eax,edx
  407f5f:	imul   edx,eax,0x9e3779b1
  407f65:	mov    rax,QWORD PTR [rbp-0x28]
  407f69:	mov    DWORD PTR [rax+0x14],edx
  407f6c:	mov    rax,QWORD PTR [rbp-0x28]
  407f70:	mov    ecx,DWORD PTR [rax+0x14]
  407f73:	movzx  edx,WORD PTR [rbp-0x1e]
  407f77:	mov    rsi,QWORD PTR [rbp-0x10]
  407f7b:	mov    rax,QWORD PTR [rbp-0x28]
  407f7f:	mov    rdi,rax
  407f82:	call   40760c <flatcc_builder_create_cached_vtable@@Base>
  407f87:	mov    DWORD PTR [rbp-0x1c],eax
  407f8a:	cmp    DWORD PTR [rbp-0x1c],0x0
  407f8e:	jne    407f9a <flatcc_builder_end_table@@Base+0xe7>
  407f90:	mov    eax,0x0
  407f95:	jmp    4080ba <flatcc_builder_end_table@@Base+0x207>
  407f9a:	movzx  edx,WORD PTR [rbp-0x1e]
  407f9e:	mov    rax,QWORD PTR [rbp-0x10]
  407fa2:	mov    esi,0x0
  407fa7:	mov    rdi,rax
  407faa:	call   403080 <memset@plt>
  407faf:	mov    rax,QWORD PTR [rbp-0x28]
  407fb3:	mov    rdx,QWORD PTR [rax+0x88]
  407fba:	mov    rax,QWORD PTR [rbp-0x28]
  407fbe:	mov    rax,QWORD PTR [rax+0x30]
  407fc2:	mov    eax,DWORD PTR [rax+0x14]
  407fc5:	mov    eax,eax
  407fc7:	add    rax,rdx
  407fca:	mov    QWORD PTR [rbp-0x8],rax
  407fce:	mov    rax,QWORD PTR [rbp-0x28]
  407fd2:	mov    rax,QWORD PTR [rax]
  407fd5:	mov    rdx,rax
  407fd8:	mov    rax,QWORD PTR [rbp-0x8]
  407fdc:	sub    rdx,rax
  407fdf:	mov    rax,rdx
  407fe2:	sar    rax,1
  407fe5:	mov    DWORD PTR [rbp-0x18],eax
  407fe8:	mov    rax,QWORD PTR [rbp-0x28]
  407fec:	movzx  eax,WORD PTR [rax+0xea]
  407ff3:	movzx  edx,ax
  407ff6:	mov    rax,QWORD PTR [rbp-0x28]
  407ffa:	mov    eax,DWORD PTR [rax+0x20]
  407ffd:	mov    r10d,eax
  408000:	mov    rax,QWORD PTR [rbp-0x28]
  408004:	mov    rsi,QWORD PTR [rax+0x18]
  408008:	mov    r8d,DWORD PTR [rbp-0x18]
  40800c:	mov    rdi,QWORD PTR [rbp-0x8]
  408010:	mov    rax,QWORD PTR [rbp-0x28]
  408014:	sub    rsp,0x8
  408018:	mov    ecx,DWORD PTR [rbp-0x1c]
  40801b:	push   rcx
  40801c:	mov    r9d,r8d
  40801f:	mov    r8,rdi
  408022:	mov    ecx,edx
  408024:	mov    rdx,r10
  408027:	mov    rdi,rax
  40802a:	call   4078ee <flatcc_builder_create_table@@Base>
  40802f:	add    rsp,0x10
  408033:	mov    DWORD PTR [rbp-0x14],eax
  408036:	cmp    DWORD PTR [rbp-0x14],0x0
  40803a:	jne    408043 <flatcc_builder_end_table@@Base+0x190>
  40803c:	mov    eax,0x0
  408041:	jmp    4080ba <flatcc_builder_end_table@@Base+0x207>
  408043:	mov    rax,QWORD PTR [rbp-0x28]
  408047:	mov    rax,QWORD PTR [rax+0x30]
  40804b:	mov    edx,DWORD PTR [rax+0x18]
  40804e:	mov    rax,QWORD PTR [rbp-0x28]
  408052:	mov    DWORD PTR [rax+0x14],edx
  408055:	mov    rax,QWORD PTR [rbp-0x28]
  408059:	mov    rax,QWORD PTR [rax+0x30]
  40805d:	movzx  edx,WORD PTR [rax+0x1c]
  408061:	mov    rax,QWORD PTR [rbp-0x28]
  408065:	mov    WORD PTR [rax+0x10],dx
  408069:	mov    rax,QWORD PTR [rbp-0x28]
  40806d:	mov    rdx,QWORD PTR [rax+0x58]
  408071:	mov    rax,QWORD PTR [rbp-0x28]
  408075:	mov    rax,QWORD PTR [rax+0x30]
  408079:	mov    eax,DWORD PTR [rax+0x10]
  40807c:	mov    eax,eax
  40807e:	add    rdx,rax
  408081:	mov    rax,QWORD PTR [rbp-0x28]
  408085:	mov    QWORD PTR [rax+0x8],rdx
  408089:	mov    rax,QWORD PTR [rbp-0x28]
  40808d:	mov    rdx,QWORD PTR [rax+0x88]
  408094:	mov    rax,QWORD PTR [rbp-0x28]
  408098:	mov    rax,QWORD PTR [rax+0x30]
  40809c:	mov    eax,DWORD PTR [rax+0x14]
  40809f:	mov    eax,eax
  4080a1:	add    rdx,rax
  4080a4:	mov    rax,QWORD PTR [rbp-0x28]
  4080a8:	mov    QWORD PTR [rax],rdx
  4080ab:	mov    rax,QWORD PTR [rbp-0x28]
  4080af:	mov    rdi,rax
  4080b2:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4080b7:	mov    eax,DWORD PTR [rbp-0x14]
  4080ba:	leave  
  4080bb:	ret    

00000000004080bc <flatcc_builder_create_vector@@Base>:
  4080bc:	push   rbp
  4080bd:	mov    rbp,rsp
  4080c0:	sub    rsp,0xe0
  4080c7:	mov    QWORD PTR [rbp-0xb8],rdi
  4080ce:	mov    QWORD PTR [rbp-0xc0],rsi
  4080d5:	mov    QWORD PTR [rbp-0xc8],rdx
  4080dc:	mov    QWORD PTR [rbp-0xd0],rcx
  4080e3:	mov    eax,r8d
  4080e6:	mov    QWORD PTR [rbp-0xe0],r9
  4080ed:	mov    WORD PTR [rbp-0xd4],ax
  4080f4:	mov    rax,QWORD PTR fs:0x28
  4080fd:	mov    QWORD PTR [rbp-0x8],rax
  408101:	xor    eax,eax
  408103:	mov    rax,QWORD PTR [rbp-0xc8]
  40810a:	cmp    rax,QWORD PTR [rbp-0xe0]
  408111:	jbe    40814c <flatcc_builder_create_vector@@Base+0x90>
  408113:	mov    rax,QWORD PTR [rbp-0xc8]
  40811a:	cmp    rax,QWORD PTR [rbp-0xe0]
  408121:	jbe    408142 <flatcc_builder_create_vector@@Base+0x86>
  408123:	lea    rcx,[rip+0x5ac6]        # 40dbf0 <flatcc_builder_padding_base@@Base+0xa30>
  40812a:	mov    edx,0x555
  40812f:	lea    rsi,[rip+0x528a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408136:	lea    rdi,[rip+0x5586]        # 40d6c3 <flatcc_builder_padding_base@@Base+0x503>
  40813d:	call   403070 <__assert_fail@plt>
  408142:	mov    eax,0x0
  408147:	jmp    408337 <flatcc_builder_create_vector@@Base+0x27b>
  40814c:	lea    rax,[rbp-0xd4]
  408153:	mov    esi,0x4
  408158:	mov    rdi,rax
  40815b:	call   40549d <flatcc_builder_clear@@Base+0xc7>
  408160:	movzx  eax,WORD PTR [rbp-0xd4]
  408167:	movzx  edx,ax
  40816a:	mov    rax,QWORD PTR [rbp-0xb8]
  408171:	mov    esi,edx
  408173:	mov    rdi,rax
  408176:	call   40546c <flatcc_builder_clear@@Base+0x96>
  40817b:	mov    rax,QWORD PTR [rbp-0xc8]
  408182:	mov    edx,eax
  408184:	mov    rax,QWORD PTR [rbp-0xd0]
  40818b:	imul   eax,edx
  40818e:	mov    DWORD PTR [rbp-0xa8],eax
  408194:	mov    rax,QWORD PTR [rbp-0xc8]
  40819b:	mov    edi,eax
  40819d:	call   40475c <main@@Base+0x176>
  4081a2:	mov    DWORD PTR [rbp-0xac],eax
  4081a8:	movzx  eax,WORD PTR [rbp-0xd4]
  4081af:	movzx  edx,ax
  4081b2:	mov    ecx,DWORD PTR [rbp-0xa8]
  4081b8:	mov    rax,QWORD PTR [rbp-0xb8]
  4081bf:	mov    esi,ecx
  4081c1:	mov    rdi,rax
  4081c4:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4081c9:	mov    DWORD PTR [rbp-0xa4],eax
  4081cf:	mov    QWORD PTR [rbp-0xa0],0x0
  4081da:	mov    DWORD PTR [rbp-0x98],0x0
  4081e4:	mov    rax,QWORD PTR [rbp-0xa0]
  4081eb:	add    rax,0x4
  4081ef:	mov    QWORD PTR [rbp-0xa0],rax
  4081f6:	mov    eax,DWORD PTR [rbp-0x98]
  4081fc:	cdqe   
  4081fe:	shl    rax,0x4
  408202:	add    rax,rbp
  408205:	lea    rdx,[rax-0x90]
  40820c:	lea    rax,[rbp-0xac]
  408213:	mov    QWORD PTR [rdx],rax
  408216:	mov    eax,DWORD PTR [rbp-0x98]
  40821c:	cdqe   
  40821e:	shl    rax,0x4
  408222:	add    rax,rbp
  408225:	sub    rax,0x88
  40822b:	mov    QWORD PTR [rax],0x4
  408232:	mov    eax,DWORD PTR [rbp-0x98]
  408238:	add    eax,0x1
  40823b:	mov    DWORD PTR [rbp-0x98],eax
  408241:	cmp    DWORD PTR [rbp-0xa8],0x0
  408248:	je     4082b0 <flatcc_builder_create_vector@@Base+0x1f4>
  40824a:	mov    rdx,QWORD PTR [rbp-0xa0]
  408251:	mov    eax,DWORD PTR [rbp-0xa8]
  408257:	add    rax,rdx
  40825a:	mov    QWORD PTR [rbp-0xa0],rax
  408261:	mov    eax,DWORD PTR [rbp-0x98]
  408267:	cdqe   
  408269:	shl    rax,0x4
  40826d:	add    rax,rbp
  408270:	lea    rdx,[rax-0x90]
  408277:	mov    rax,QWORD PTR [rbp-0xc0]
  40827e:	mov    QWORD PTR [rdx],rax
  408281:	mov    edx,DWORD PTR [rbp-0x98]
  408287:	mov    eax,DWORD PTR [rbp-0xa8]
  40828d:	movsxd rdx,edx
  408290:	shl    rdx,0x4
  408294:	add    rdx,rbp
  408297:	sub    rdx,0x88
  40829e:	mov    QWORD PTR [rdx],rax
  4082a1:	mov    eax,DWORD PTR [rbp-0x98]
  4082a7:	add    eax,0x1
  4082aa:	mov    DWORD PTR [rbp-0x98],eax
  4082b0:	cmp    DWORD PTR [rbp-0xa4],0x0
  4082b7:	je     40831e <flatcc_builder_create_vector@@Base+0x262>
  4082b9:	mov    rdx,QWORD PTR [rbp-0xa0]
  4082c0:	mov    eax,DWORD PTR [rbp-0xa4]
  4082c6:	add    rax,rdx
  4082c9:	mov    QWORD PTR [rbp-0xa0],rax
  4082d0:	mov    eax,DWORD PTR [rbp-0x98]
  4082d6:	cdqe   
  4082d8:	shl    rax,0x4
  4082dc:	add    rax,rbp
  4082df:	sub    rax,0x90
  4082e5:	mov    rdx,0x40d1c0
  4082ec:	mov    QWORD PTR [rax],rdx
  4082ef:	mov    edx,DWORD PTR [rbp-0x98]
  4082f5:	mov    eax,DWORD PTR [rbp-0xa4]
  4082fb:	movsxd rdx,edx
  4082fe:	shl    rdx,0x4
  408302:	add    rdx,rbp
  408305:	sub    rdx,0x88
  40830c:	mov    QWORD PTR [rdx],rax
  40830f:	mov    eax,DWORD PTR [rbp-0x98]
  408315:	add    eax,0x1
  408318:	mov    DWORD PTR [rbp-0x98],eax
  40831e:	lea    rdx,[rbp-0xa0]
  408325:	mov    rax,QWORD PTR [rbp-0xb8]
  40832c:	mov    rsi,rdx
  40832f:	mov    rdi,rax
  408332:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  408337:	mov    rcx,QWORD PTR [rbp-0x8]
  40833b:	xor    rcx,QWORD PTR fs:0x28
  408344:	je     40834b <flatcc_builder_create_vector@@Base+0x28f>
  408346:	call   403060 <__stack_chk_fail@plt>
  40834b:	leave  
  40834c:	ret    

000000000040834d <flatcc_builder_end_vector@@Base>:
  40834d:	push   rbp
  40834e:	mov    rbp,rsp
  408351:	sub    rsp,0x20
  408355:	mov    QWORD PTR [rbp-0x18],rdi
  408359:	mov    rax,QWORD PTR [rbp-0x18]
  40835d:	mov    rax,QWORD PTR [rax+0x30]
  408361:	movzx  eax,WORD PTR [rax+0xe]
  408365:	cmp    ax,0x4
  408369:	je     40838a <flatcc_builder_end_vector@@Base+0x3d>
  40836b:	lea    rcx,[rip+0x589e]        # 40dc10 <flatcc_builder_padding_base@@Base+0xa50>
  408372:	mov    edx,0x578
  408377:	lea    rsi,[rip+0x5042]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40837e:	lea    rdi,[rip+0x5183]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  408385:	call   403070 <__assert_fail@plt>
  40838a:	mov    rax,QWORD PTR [rbp-0x18]
  40838e:	mov    rax,QWORD PTR [rax+0x30]
  408392:	mov    eax,DWORD PTR [rax+0x18]
  408395:	mov    r8d,eax
  408398:	mov    rax,QWORD PTR [rbp-0x18]
  40839c:	movzx  eax,WORD PTR [rax+0xea]
  4083a3:	movzx  edx,ax
  4083a6:	mov    rax,QWORD PTR [rbp-0x18]
  4083aa:	mov    rax,QWORD PTR [rax+0x30]
  4083ae:	mov    eax,DWORD PTR [rax+0x10]
  4083b1:	mov    ecx,eax
  4083b3:	mov    rax,QWORD PTR [rbp-0x18]
  4083b7:	mov    rax,QWORD PTR [rax+0x30]
  4083bb:	mov    eax,DWORD PTR [rax+0x14]
  4083be:	mov    edi,eax
  4083c0:	mov    rax,QWORD PTR [rbp-0x18]
  4083c4:	mov    rsi,QWORD PTR [rax+0x18]
  4083c8:	mov    rax,QWORD PTR [rbp-0x18]
  4083cc:	mov    r9,r8
  4083cf:	mov    r8d,edx
  4083d2:	mov    rdx,rdi
  4083d5:	mov    rdi,rax
  4083d8:	call   4080bc <flatcc_builder_create_vector@@Base>
  4083dd:	mov    DWORD PTR [rbp-0x4],eax
  4083e0:	cmp    DWORD PTR [rbp-0x4],0x0
  4083e4:	jne    4083ed <flatcc_builder_end_vector@@Base+0xa0>
  4083e6:	mov    eax,0x0
  4083eb:	jmp    4083fc <flatcc_builder_end_vector@@Base+0xaf>
  4083ed:	mov    rax,QWORD PTR [rbp-0x18]
  4083f1:	mov    rdi,rax
  4083f4:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4083f9:	mov    eax,DWORD PTR [rbp-0x4]
  4083fc:	leave  
  4083fd:	ret    

00000000004083fe <flatcc_builder_vector_count@@Base>:
  4083fe:	push   rbp
  4083ff:	mov    rbp,rsp
  408402:	mov    QWORD PTR [rbp-0x8],rdi
  408406:	mov    rax,QWORD PTR [rbp-0x8]
  40840a:	mov    rax,QWORD PTR [rax+0x30]
  40840e:	mov    eax,DWORD PTR [rax+0x14]
  408411:	mov    eax,eax
  408413:	pop    rbp
  408414:	ret    

0000000000408415 <flatcc_builder_vector_edit@@Base>:
  408415:	push   rbp
  408416:	mov    rbp,rsp
  408419:	mov    QWORD PTR [rbp-0x8],rdi
  40841d:	mov    rax,QWORD PTR [rbp-0x8]
  408421:	mov    rax,QWORD PTR [rax+0x18]
  408425:	pop    rbp
  408426:	ret    
  408427:	push   rbp
  408428:	mov    rbp,rsp
  40842b:	push   rbx
  40842c:	sub    rsp,0xe8
  408433:	mov    QWORD PTR [rbp-0xd8],rdi
  40843a:	mov    QWORD PTR [rbp-0xe0],rsi
  408441:	mov    QWORD PTR [rbp-0xe8],rdx
  408448:	mov    QWORD PTR [rbp-0xf0],rcx
  40844f:	mov    rax,QWORD PTR fs:0x28
  408458:	mov    QWORD PTR [rbp-0x18],rax
  40845c:	xor    eax,eax
  40845e:	mov    rax,QWORD PTR [rbp-0xe8]
  408465:	cmp    eax,0x3fffffff
  40846a:	jbe    408476 <flatcc_builder_vector_edit@@Base+0x61>
  40846c:	mov    eax,0x0
  408471:	jmp    4087ba <flatcc_builder_vector_edit@@Base+0x3a5>
  408476:	mov    rax,QWORD PTR [rbp-0xd8]
  40847d:	mov    esi,0x4
  408482:	mov    rdi,rax
  408485:	call   40546c <flatcc_builder_clear@@Base+0x96>
  40848a:	mov    rax,QWORD PTR [rbp-0xe8]
  408491:	shl    eax,0x2
  408494:	mov    DWORD PTR [rbp-0xc0],eax
  40849a:	mov    rax,QWORD PTR [rbp-0xe8]
  4084a1:	mov    edi,eax
  4084a3:	call   40475c <main@@Base+0x176>
  4084a8:	mov    DWORD PTR [rbp-0xc8],eax
  4084ae:	mov    ecx,DWORD PTR [rbp-0xc0]
  4084b4:	mov    rax,QWORD PTR [rbp-0xd8]
  4084bb:	mov    edx,0x4
  4084c0:	mov    esi,ecx
  4084c2:	mov    rdi,rax
  4084c5:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4084ca:	mov    DWORD PTR [rbp-0xbc],eax
  4084d0:	mov    QWORD PTR [rbp-0xb0],0x0
  4084db:	mov    DWORD PTR [rbp-0xa8],0x0
  4084e5:	mov    rax,QWORD PTR [rbp-0xb0]
  4084ec:	add    rax,0x4
  4084f0:	mov    QWORD PTR [rbp-0xb0],rax
  4084f7:	mov    eax,DWORD PTR [rbp-0xa8]
  4084fd:	cdqe   
  4084ff:	shl    rax,0x4
  408503:	lea    rbx,[rbp-0x10]
  408507:	add    rax,rbx
  40850a:	lea    rdx,[rax-0x90]
  408511:	lea    rax,[rbp-0xc8]
  408518:	mov    QWORD PTR [rdx],rax
  40851b:	mov    eax,DWORD PTR [rbp-0xa8]
  408521:	cdqe   
  408523:	shl    rax,0x4
  408527:	lea    rbx,[rbp-0x10]
  40852b:	add    rax,rbx
  40852e:	sub    rax,0x88
  408534:	mov    QWORD PTR [rax],0x4
  40853b:	mov    eax,DWORD PTR [rbp-0xa8]
  408541:	add    eax,0x1
  408544:	mov    DWORD PTR [rbp-0xa8],eax
  40854a:	cmp    DWORD PTR [rbp-0xc0],0x0
  408551:	je     4085c1 <flatcc_builder_vector_edit@@Base+0x1ac>
  408553:	mov    rdx,QWORD PTR [rbp-0xb0]
  40855a:	mov    eax,DWORD PTR [rbp-0xc0]
  408560:	add    rax,rdx
  408563:	mov    QWORD PTR [rbp-0xb0],rax
  40856a:	mov    eax,DWORD PTR [rbp-0xa8]
  408570:	cdqe   
  408572:	shl    rax,0x4
  408576:	lea    rcx,[rbp-0x10]
  40857a:	add    rax,rcx
  40857d:	lea    rdx,[rax-0x90]
  408584:	mov    rax,QWORD PTR [rbp-0xe0]
  40858b:	mov    QWORD PTR [rdx],rax
  40858e:	mov    edx,DWORD PTR [rbp-0xa8]
  408594:	mov    eax,DWORD PTR [rbp-0xc0]
  40859a:	movsxd rdx,edx
  40859d:	shl    rdx,0x4
  4085a1:	lea    rbx,[rbp-0x10]
  4085a5:	add    rdx,rbx
  4085a8:	sub    rdx,0x88
  4085af:	mov    QWORD PTR [rdx],rax
  4085b2:	mov    eax,DWORD PTR [rbp-0xa8]
  4085b8:	add    eax,0x1
  4085bb:	mov    DWORD PTR [rbp-0xa8],eax
  4085c1:	cmp    DWORD PTR [rbp-0xbc],0x0
  4085c8:	je     408637 <flatcc_builder_vector_edit@@Base+0x222>
  4085ca:	mov    rdx,QWORD PTR [rbp-0xb0]
  4085d1:	mov    eax,DWORD PTR [rbp-0xbc]
  4085d7:	add    rax,rdx
  4085da:	mov    QWORD PTR [rbp-0xb0],rax
  4085e1:	mov    eax,DWORD PTR [rbp-0xa8]
  4085e7:	cdqe   
  4085e9:	shl    rax,0x4
  4085ed:	lea    rsi,[rbp-0x10]
  4085f1:	add    rax,rsi
  4085f4:	sub    rax,0x90
  4085fa:	mov    rdx,0x40d1c0
  408601:	mov    QWORD PTR [rax],rdx
  408604:	mov    edx,DWORD PTR [rbp-0xa8]
  40860a:	mov    eax,DWORD PTR [rbp-0xbc]
  408610:	movsxd rdx,edx
  408613:	shl    rdx,0x4
  408617:	lea    rcx,[rbp-0x10]
  40861b:	add    rdx,rcx
  40861e:	sub    rdx,0x88
  408625:	mov    QWORD PTR [rdx],rax
  408628:	mov    eax,DWORD PTR [rbp-0xa8]
  40862e:	add    eax,0x1
  408631:	mov    DWORD PTR [rbp-0xa8],eax
  408637:	mov    rax,QWORD PTR [rbp-0xd8]
  40863e:	mov    eax,DWORD PTR [rax+0xf0]
  408644:	mov    edx,eax
  408646:	mov    rax,QWORD PTR [rbp-0xb0]
  40864d:	sub    edx,eax
  40864f:	mov    eax,edx
  408651:	mov    DWORD PTR [rbp-0xb8],eax
  408657:	mov    DWORD PTR [rbp-0xc4],0x0
  408661:	jmp    40878e <flatcc_builder_vector_edit@@Base+0x379>
  408666:	mov    eax,DWORD PTR [rbp-0xc4]
  40866c:	lea    rdx,[rax*4+0x0]
  408674:	mov    rax,QWORD PTR [rbp-0xe0]
  40867b:	add    rax,rdx
  40867e:	mov    eax,DWORD PTR [rax]
  408680:	test   eax,eax
  408682:	je     408728 <flatcc_builder_vector_edit@@Base+0x313>
  408688:	mov    eax,DWORD PTR [rbp-0xc4]
  40868e:	lea    rdx,[rax*4+0x0]
  408696:	mov    rax,QWORD PTR [rbp-0xe0]
  40869d:	add    rax,rdx
  4086a0:	mov    eax,DWORD PTR [rax]
  4086a2:	sub    eax,DWORD PTR [rbp-0xb8]
  4086a8:	mov    edx,DWORD PTR [rbp-0xc4]
  4086ae:	shl    edx,0x2
  4086b1:	sub    eax,edx
  4086b3:	sub    eax,0x4
  4086b6:	mov    DWORD PTR [rbp-0xb4],eax
  4086bc:	mov    eax,DWORD PTR [rbp-0xc4]
  4086c2:	lea    rdx,[rax*4+0x0]
  4086ca:	mov    rax,QWORD PTR [rbp-0xe0]
  4086d1:	lea    rbx,[rdx+rax*1]
  4086d5:	mov    eax,DWORD PTR [rbp-0xb4]
  4086db:	mov    edi,eax
  4086dd:	call   40475c <main@@Base+0x176>
  4086e2:	mov    DWORD PTR [rbx],eax
  4086e4:	cmp    QWORD PTR [rbp-0xf0],0x0
  4086ec:	je     408787 <flatcc_builder_vector_edit@@Base+0x372>
  4086f2:	mov    edx,DWORD PTR [rbp-0xc4]
  4086f8:	mov    rax,QWORD PTR [rbp-0xf0]
  4086ff:	add    rax,rdx
  408702:	movzx  eax,BYTE PTR [rax]
  408705:	test   al,al
  408707:	jne    408787 <flatcc_builder_vector_edit@@Base+0x372>
  408709:	lea    rcx,[rip+0x5520]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  408710:	mov    edx,0x5b1
  408715:	lea    rsi,[rip+0x4ca4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40871c:	lea    rdi,[rip+0x4fb3]        # 40d6d6 <flatcc_builder_padding_base@@Base+0x516>
  408723:	call   403070 <__assert_fail@plt>
  408728:	cmp    QWORD PTR [rbp-0xf0],0x0
  408730:	je     408768 <flatcc_builder_vector_edit@@Base+0x353>
  408732:	mov    edx,DWORD PTR [rbp-0xc4]
  408738:	mov    rax,QWORD PTR [rbp-0xf0]
  40873f:	add    rax,rdx
  408742:	movzx  eax,BYTE PTR [rax]
  408745:	test   al,al
  408747:	je     408787 <flatcc_builder_vector_edit@@Base+0x372>
  408749:	lea    rcx,[rip+0x54e0]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  408750:	mov    edx,0x5b5
  408755:	lea    rsi,[rip+0x4c64]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40875c:	lea    rdi,[rip+0x4f81]        # 40d6e4 <flatcc_builder_padding_base@@Base+0x524>
  408763:	call   403070 <__assert_fail@plt>
  408768:	lea    rcx,[rip+0x54c1]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  40876f:	mov    edx,0x5b7
  408774:	lea    rsi,[rip+0x4c45]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40877b:	lea    rdi,[rip+0x4c9e]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  408782:	call   403070 <__assert_fail@plt>
  408787:	add    DWORD PTR [rbp-0xc4],0x1
  40878e:	mov    rax,QWORD PTR [rbp-0xe8]
  408795:	cmp    eax,DWORD PTR [rbp-0xc4]
  40879b:	ja     408666 <flatcc_builder_vector_edit@@Base+0x251>
  4087a1:	lea    rdx,[rbp-0xb0]
  4087a8:	mov    rax,QWORD PTR [rbp-0xd8]
  4087af:	mov    rsi,rdx
  4087b2:	mov    rdi,rax
  4087b5:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4087ba:	mov    rbx,QWORD PTR [rbp-0x18]
  4087be:	xor    rbx,QWORD PTR fs:0x28
  4087c7:	je     4087ce <flatcc_builder_vector_edit@@Base+0x3b9>
  4087c9:	call   403060 <__stack_chk_fail@plt>
  4087ce:	add    rsp,0xe8
  4087d5:	pop    rbx
  4087d6:	pop    rbp
  4087d7:	ret    

00000000004087d8 <flatcc_builder_create_offset_vector_direct@@Base>:
  4087d8:	push   rbp
  4087d9:	mov    rbp,rsp
  4087dc:	sub    rsp,0x20
  4087e0:	mov    QWORD PTR [rbp-0x8],rdi
  4087e4:	mov    QWORD PTR [rbp-0x10],rsi
  4087e8:	mov    QWORD PTR [rbp-0x18],rdx
  4087ec:	mov    rdx,QWORD PTR [rbp-0x18]
  4087f0:	mov    rsi,QWORD PTR [rbp-0x10]
  4087f4:	mov    rax,QWORD PTR [rbp-0x8]
  4087f8:	mov    ecx,0x0
  4087fd:	mov    rdi,rax
  408800:	call   408427 <flatcc_builder_vector_edit@@Base+0x12>
  408805:	leave  
  408806:	ret    

0000000000408807 <flatcc_builder_end_offset_vector@@Base>:
  408807:	push   rbp
  408808:	mov    rbp,rsp
  40880b:	sub    rsp,0x20
  40880f:	mov    QWORD PTR [rbp-0x18],rdi
  408813:	mov    rax,QWORD PTR [rbp-0x18]
  408817:	mov    rax,QWORD PTR [rax+0x30]
  40881b:	movzx  eax,WORD PTR [rax+0xe]
  40881f:	cmp    ax,0x5
  408823:	je     408844 <flatcc_builder_end_offset_vector@@Base+0x3d>
  408825:	lea    rcx,[rip+0x5434]        # 40dc60 <flatcc_builder_padding_base@@Base+0xaa0>
  40882c:	mov    edx,0x5c8
  408831:	lea    rsi,[rip+0x4b88]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408838:	lea    rdi,[rip+0x4d39]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  40883f:	call   403070 <__assert_fail@plt>
  408844:	mov    rax,QWORD PTR [rbp-0x18]
  408848:	mov    rax,QWORD PTR [rax+0x30]
  40884c:	mov    eax,DWORD PTR [rax+0x14]
  40884f:	mov    edx,eax
  408851:	mov    rax,QWORD PTR [rbp-0x18]
  408855:	mov    rcx,QWORD PTR [rax+0x18]
  408859:	mov    rax,QWORD PTR [rbp-0x18]
  40885d:	mov    rsi,rcx
  408860:	mov    rdi,rax
  408863:	call   4087d8 <flatcc_builder_create_offset_vector_direct@@Base>
  408868:	mov    DWORD PTR [rbp-0x4],eax
  40886b:	cmp    DWORD PTR [rbp-0x4],0x0
  40886f:	jne    408878 <flatcc_builder_end_offset_vector@@Base+0x71>
  408871:	mov    eax,0x0
  408876:	jmp    408887 <flatcc_builder_end_offset_vector@@Base+0x80>
  408878:	mov    rax,QWORD PTR [rbp-0x18]
  40887c:	mov    rdi,rax
  40887f:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408884:	mov    eax,DWORD PTR [rbp-0x4]
  408887:	leave  
  408888:	ret    

0000000000408889 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408889:	push   rbp
  40888a:	mov    rbp,rsp
  40888d:	sub    rsp,0x20
  408891:	mov    QWORD PTR [rbp-0x18],rdi
  408895:	mov    QWORD PTR [rbp-0x20],rsi
  408899:	mov    rax,QWORD PTR [rbp-0x18]
  40889d:	mov    rax,QWORD PTR [rax+0x30]
  4088a1:	movzx  eax,WORD PTR [rax+0xe]
  4088a5:	cmp    ax,0x5
  4088a9:	je     4088ca <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  4088ab:	lea    rcx,[rip+0x53ee]        # 40dca0 <flatcc_builder_padding_base@@Base+0xae0>
  4088b2:	mov    edx,0x5d5
  4088b7:	lea    rsi,[rip+0x4b02]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4088be:	lea    rdi,[rip+0x4cb3]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  4088c5:	call   403070 <__assert_fail@plt>
  4088ca:	mov    rax,QWORD PTR [rbp-0x18]
  4088ce:	mov    rax,QWORD PTR [rax+0x30]
  4088d2:	mov    eax,DWORD PTR [rax+0x14]
  4088d5:	mov    edi,eax
  4088d7:	mov    rax,QWORD PTR [rbp-0x18]
  4088db:	mov    rsi,QWORD PTR [rax+0x18]
  4088df:	mov    rdx,QWORD PTR [rbp-0x20]
  4088e3:	mov    rax,QWORD PTR [rbp-0x18]
  4088e7:	mov    rcx,rdx
  4088ea:	mov    rdx,rdi
  4088ed:	mov    rdi,rax
  4088f0:	call   408427 <flatcc_builder_vector_edit@@Base+0x12>
  4088f5:	mov    DWORD PTR [rbp-0x4],eax
  4088f8:	cmp    DWORD PTR [rbp-0x4],0x0
  4088fc:	jne    408905 <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  4088fe:	mov    eax,0x0
  408903:	jmp    408914 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  408905:	mov    rax,QWORD PTR [rbp-0x18]
  408909:	mov    rdi,rax
  40890c:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408911:	mov    eax,DWORD PTR [rbp-0x4]
  408914:	leave  
  408915:	ret    

0000000000408916 <flatcc_builder_offset_vector_edit@@Base>:
  408916:	push   rbp
  408917:	mov    rbp,rsp
  40891a:	mov    QWORD PTR [rbp-0x8],rdi
  40891e:	mov    rax,QWORD PTR [rbp-0x8]
  408922:	mov    rax,QWORD PTR [rax+0x18]
  408926:	pop    rbp
  408927:	ret    

0000000000408928 <flatcc_builder_offset_vector_count@@Base>:
  408928:	push   rbp
  408929:	mov    rbp,rsp
  40892c:	mov    QWORD PTR [rbp-0x8],rdi
  408930:	mov    rax,QWORD PTR [rbp-0x8]
  408934:	mov    rax,QWORD PTR [rax+0x30]
  408938:	mov    eax,DWORD PTR [rax+0x14]
  40893b:	mov    eax,eax
  40893d:	pop    rbp
  40893e:	ret    

000000000040893f <flatcc_builder_table_add_union@@Base>:
  40893f:	push   rbp
  408940:	mov    rbp,rsp
  408943:	sub    rsp,0x30
  408947:	mov    QWORD PTR [rbp-0x18],rdi
  40894b:	mov    DWORD PTR [rbp-0x1c],esi
  40894e:	mov    QWORD PTR [rbp-0x24],rdx
  408952:	mov    rax,QWORD PTR [rbp-0x18]
  408956:	mov    rax,QWORD PTR [rax+0x30]
  40895a:	movzx  eax,WORD PTR [rax+0xe]
  40895e:	cmp    ax,0x3
  408962:	je     408983 <flatcc_builder_table_add_union@@Base+0x44>
  408964:	lea    rcx,[rip+0x5365]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  40896b:	mov    edx,0x5ee
  408970:	lea    rsi,[rip+0x4a49]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408977:	lea    rdi,[rip+0x4d1a]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40897e:	call   403070 <__assert_fail@plt>
  408983:	movzx  eax,BYTE PTR [rbp-0x24]
  408987:	test   al,al
  408989:	jne    4089ca <flatcc_builder_table_add_union@@Base+0x8b>
  40898b:	mov    eax,DWORD PTR [rbp-0x20]
  40898e:	test   eax,eax
  408990:	je     4089ca <flatcc_builder_table_add_union@@Base+0x8b>
  408992:	movzx  eax,BYTE PTR [rbp-0x24]
  408996:	test   al,al
  408998:	jne    4089c0 <flatcc_builder_table_add_union@@Base+0x81>
  40899a:	mov    eax,DWORD PTR [rbp-0x20]
  40899d:	test   eax,eax
  40899f:	je     4089c0 <flatcc_builder_table_add_union@@Base+0x81>
  4089a1:	lea    rcx,[rip+0x5328]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  4089a8:	mov    edx,0x5ef
  4089ad:	lea    rsi,[rip+0x4a0c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4089b4:	lea    rdi,[rip+0x4d3d]        # 40d6f8 <flatcc_builder_padding_base@@Base+0x538>
  4089bb:	call   403070 <__assert_fail@plt>
  4089c0:	mov    eax,0xffffffff
  4089c5:	jmp    408a92 <flatcc_builder_table_add_union@@Base+0x153>
  4089ca:	mov    eax,DWORD PTR [rbp-0x20]
  4089cd:	test   eax,eax
  4089cf:	je     408a23 <flatcc_builder_table_add_union@@Base+0xe4>
  4089d1:	mov    edx,DWORD PTR [rbp-0x1c]
  4089d4:	mov    rax,QWORD PTR [rbp-0x18]
  4089d8:	mov    esi,edx
  4089da:	mov    rdi,rax
  4089dd:	call   4096e3 <flatcc_builder_table_add_offset@@Base>
  4089e2:	mov    QWORD PTR [rbp-0x10],rax
  4089e6:	cmp    QWORD PTR [rbp-0x10],0x0
  4089eb:	jne    408a1a <flatcc_builder_table_add_union@@Base+0xdb>
  4089ed:	cmp    QWORD PTR [rbp-0x10],0x0
  4089f2:	jne    408a13 <flatcc_builder_table_add_union@@Base+0xd4>
  4089f4:	lea    rcx,[rip+0x52d5]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  4089fb:	mov    edx,0x5f2
  408a00:	lea    rsi,[rip+0x49b9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408a07:	lea    rdi,[rip+0x4d0c]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408a0e:	call   403070 <__assert_fail@plt>
  408a13:	mov    eax,0xffffffff
  408a18:	jmp    408a92 <flatcc_builder_table_add_union@@Base+0x153>
  408a1a:	mov    edx,DWORD PTR [rbp-0x20]
  408a1d:	mov    rax,QWORD PTR [rbp-0x10]
  408a21:	mov    DWORD PTR [rax],edx
  408a23:	mov    eax,DWORD PTR [rbp-0x1c]
  408a26:	lea    esi,[rax-0x1]
  408a29:	mov    rax,QWORD PTR [rbp-0x18]
  408a2d:	mov    ecx,0x1
  408a32:	mov    edx,0x1
  408a37:	mov    rdi,rax
  408a3a:	call   409515 <flatcc_builder_table_add@@Base>
  408a3f:	mov    QWORD PTR [rbp-0x8],rax
  408a43:	cmp    QWORD PTR [rbp-0x8],0x0
  408a48:	jne    408a77 <flatcc_builder_table_add_union@@Base+0x138>
  408a4a:	cmp    QWORD PTR [rbp-0x8],0x0
  408a4f:	jne    408a70 <flatcc_builder_table_add_union@@Base+0x131>
  408a51:	lea    rcx,[rip+0x5278]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408a58:	mov    edx,0x5f6
  408a5d:	lea    rsi,[rip+0x495c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408a64:	lea    rdi,[rip+0x4cb9]        # 40d724 <flatcc_builder_padding_base@@Base+0x564>
  408a6b:	call   403070 <__assert_fail@plt>
  408a70:	mov    eax,0xffffffff
  408a75:	jmp    408a92 <flatcc_builder_table_add_union@@Base+0x153>
  408a77:	movzx  eax,BYTE PTR [rbp-0x24]
  408a7b:	movzx  eax,al
  408a7e:	mov    edi,eax
  408a80:	call   404768 <main@@Base+0x182>
  408a85:	mov    edx,eax
  408a87:	mov    rax,QWORD PTR [rbp-0x8]
  408a8b:	mov    BYTE PTR [rax],dl
  408a8d:	mov    eax,0x0
  408a92:	leave  
  408a93:	ret    

0000000000408a94 <flatcc_builder_table_add_union_vector@@Base>:
  408a94:	push   rbp
  408a95:	mov    rbp,rsp
  408a98:	sub    rsp,0x30
  408a9c:	mov    QWORD PTR [rbp-0x18],rdi
  408aa0:	mov    DWORD PTR [rbp-0x1c],esi
  408aa3:	mov    QWORD PTR [rbp-0x24],rdx
  408aa7:	mov    rax,QWORD PTR [rbp-0x18]
  408aab:	mov    rax,QWORD PTR [rax+0x30]
  408aaf:	movzx  eax,WORD PTR [rax+0xe]
  408ab3:	cmp    ax,0x3
  408ab7:	je     408ad8 <flatcc_builder_table_add_union_vector@@Base+0x44>
  408ab9:	lea    rcx,[rip+0x5240]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408ac0:	mov    edx,0x600
  408ac5:	lea    rsi,[rip+0x48f4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408acc:	lea    rdi,[rip+0x4bc5]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408ad3:	call   403070 <__assert_fail@plt>
  408ad8:	mov    eax,DWORD PTR [rbp-0x24]
  408adb:	test   eax,eax
  408add:	sete   dl
  408ae0:	mov    eax,DWORD PTR [rbp-0x20]
  408ae3:	test   eax,eax
  408ae5:	sete   al
  408ae8:	xor    eax,edx
  408aea:	test   al,al
  408aec:	je     408b2d <flatcc_builder_table_add_union_vector@@Base+0x99>
  408aee:	mov    eax,DWORD PTR [rbp-0x24]
  408af1:	test   eax,eax
  408af3:	setne  dl
  408af6:	mov    eax,DWORD PTR [rbp-0x20]
  408af9:	test   eax,eax
  408afb:	sete   al
  408afe:	xor    eax,edx
  408b00:	test   al,al
  408b02:	jne    408b23 <flatcc_builder_table_add_union_vector@@Base+0x8f>
  408b04:	lea    rcx,[rip+0x51f5]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408b0b:	mov    edx,0x601
  408b10:	lea    rsi,[rip+0x48a9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b17:	lea    rdi,[rip+0x4c12]        # 40d730 <flatcc_builder_padding_base@@Base+0x570>
  408b1e:	call   403070 <__assert_fail@plt>
  408b23:	mov    eax,0xffffffff
  408b28:	jmp    408be4 <flatcc_builder_table_add_union_vector@@Base+0x150>
  408b2d:	mov    eax,DWORD PTR [rbp-0x24]
  408b30:	test   eax,eax
  408b32:	je     408bdf <flatcc_builder_table_add_union_vector@@Base+0x14b>
  408b38:	mov    eax,DWORD PTR [rbp-0x1c]
  408b3b:	lea    edx,[rax-0x1]
  408b3e:	mov    rax,QWORD PTR [rbp-0x18]
  408b42:	mov    esi,edx
  408b44:	mov    rdi,rax
  408b47:	call   4096e3 <flatcc_builder_table_add_offset@@Base>
  408b4c:	mov    QWORD PTR [rbp-0x8],rax
  408b50:	cmp    QWORD PTR [rbp-0x8],0x0
  408b55:	jne    408b84 <flatcc_builder_table_add_union_vector@@Base+0xf0>
  408b57:	cmp    QWORD PTR [rbp-0x8],0x0
  408b5c:	jne    408b7d <flatcc_builder_table_add_union_vector@@Base+0xe9>
  408b5e:	lea    rcx,[rip+0x519b]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408b65:	mov    edx,0x604
  408b6a:	lea    rsi,[rip+0x484f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b71:	lea    rdi,[rip+0x4ba2]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408b78:	call   403070 <__assert_fail@plt>
  408b7d:	mov    eax,0xffffffff
  408b82:	jmp    408be4 <flatcc_builder_table_add_union_vector@@Base+0x150>
  408b84:	mov    edx,DWORD PTR [rbp-0x24]
  408b87:	mov    rax,QWORD PTR [rbp-0x8]
  408b8b:	mov    DWORD PTR [rax],edx
  408b8d:	mov    edx,DWORD PTR [rbp-0x1c]
  408b90:	mov    rax,QWORD PTR [rbp-0x18]
  408b94:	mov    esi,edx
  408b96:	mov    rdi,rax
  408b99:	call   4096e3 <flatcc_builder_table_add_offset@@Base>
  408b9e:	mov    QWORD PTR [rbp-0x8],rax
  408ba2:	cmp    QWORD PTR [rbp-0x8],0x0
  408ba7:	jne    408bd6 <flatcc_builder_table_add_union_vector@@Base+0x142>
  408ba9:	cmp    QWORD PTR [rbp-0x8],0x0
  408bae:	jne    408bcf <flatcc_builder_table_add_union_vector@@Base+0x13b>
  408bb0:	lea    rcx,[rip+0x5149]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408bb7:	mov    edx,0x608
  408bbc:	lea    rsi,[rip+0x47fd]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408bc3:	lea    rdi,[rip+0x4b50]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408bca:	call   403070 <__assert_fail@plt>
  408bcf:	mov    eax,0xffffffff
  408bd4:	jmp    408be4 <flatcc_builder_table_add_union_vector@@Base+0x150>
  408bd6:	mov    edx,DWORD PTR [rbp-0x20]
  408bd9:	mov    rax,QWORD PTR [rbp-0x8]
  408bdd:	mov    DWORD PTR [rax],edx
  408bdf:	mov    eax,0x0
  408be4:	leave  
  408be5:	ret    

0000000000408be6 <flatcc_builder_create_union_vector@@Base>:
  408be6:	push   rbp
  408be7:	mov    rbp,rsp
  408bea:	sub    rsp,0x40
  408bee:	mov    QWORD PTR [rbp-0x28],rdi
  408bf2:	mov    QWORD PTR [rbp-0x30],rsi
  408bf6:	mov    QWORD PTR [rbp-0x38],rdx
  408bfa:	mov    DWORD PTR [rbp-0x8],0x0
  408c01:	mov    DWORD PTR [rbp-0x4],0x0
  408c08:	mov    rax,QWORD PTR [rbp-0x28]
  408c0c:	mov    rdi,rax
  408c0f:	call   407215 <flatcc_builder_start_offset_vector@@Base>
  408c14:	test   eax,eax
  408c16:	je     408c21 <flatcc_builder_create_union_vector@@Base+0x3b>
  408c18:	mov    rax,QWORD PTR [rbp-0x8]
  408c1c:	jmp    408d0d <flatcc_builder_create_union_vector@@Base+0x127>
  408c21:	mov    rdx,QWORD PTR [rbp-0x38]
  408c25:	mov    rax,QWORD PTR [rbp-0x28]
  408c29:	mov    rsi,rdx
  408c2c:	mov    rdi,rax
  408c2f:	call   406c25 <flatcc_builder_extend_offset_vector@@Base>
  408c34:	test   rax,rax
  408c37:	jne    408c42 <flatcc_builder_create_union_vector@@Base+0x5c>
  408c39:	mov    rax,QWORD PTR [rbp-0x8]
  408c3d:	jmp    408d0d <flatcc_builder_create_union_vector@@Base+0x127>
  408c42:	mov    rax,QWORD PTR [rbp-0x38]
  408c46:	mov    edx,eax
  408c48:	mov    rax,QWORD PTR [rbp-0x28]
  408c4c:	mov    esi,edx
  408c4e:	mov    rdi,rax
  408c51:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  408c56:	mov    QWORD PTR [rbp-0x18],rax
  408c5a:	cmp    QWORD PTR [rbp-0x18],0x0
  408c5f:	jne    408c6a <flatcc_builder_create_union_vector@@Base+0x84>
  408c61:	mov    rax,QWORD PTR [rbp-0x8]
  408c65:	jmp    408d0d <flatcc_builder_create_union_vector@@Base+0x127>
  408c6a:	mov    rax,QWORD PTR [rbp-0x28]
  408c6e:	mov    rdi,rax
  408c71:	call   408916 <flatcc_builder_offset_vector_edit@@Base>
  408c76:	mov    QWORD PTR [rbp-0x10],rax
  408c7a:	mov    QWORD PTR [rbp-0x20],0x0
  408c82:	jmp    408cd7 <flatcc_builder_create_union_vector@@Base+0xf1>
  408c84:	mov    rdx,QWORD PTR [rbp-0x18]
  408c88:	mov    rax,QWORD PTR [rbp-0x20]
  408c8c:	add    rdx,rax
  408c8f:	mov    rax,QWORD PTR [rbp-0x20]
  408c93:	lea    rcx,[rax*8+0x0]
  408c9b:	mov    rax,QWORD PTR [rbp-0x30]
  408c9f:	add    rax,rcx
  408ca2:	movzx  eax,BYTE PTR [rax]
  408ca5:	mov    BYTE PTR [rdx],al
  408ca7:	mov    rax,QWORD PTR [rbp-0x20]
  408cab:	lea    rdx,[rax*4+0x0]
  408cb3:	mov    rax,QWORD PTR [rbp-0x10]
  408cb7:	add    rdx,rax
  408cba:	mov    rax,QWORD PTR [rbp-0x20]
  408cbe:	lea    rcx,[rax*8+0x0]
  408cc6:	mov    rax,QWORD PTR [rbp-0x30]
  408cca:	add    rax,rcx
  408ccd:	mov    eax,DWORD PTR [rax+0x4]
  408cd0:	mov    DWORD PTR [rdx],eax
  408cd2:	add    QWORD PTR [rbp-0x20],0x1
  408cd7:	mov    rax,QWORD PTR [rbp-0x20]
  408cdb:	cmp    rax,QWORD PTR [rbp-0x38]
  408cdf:	jb     408c84 <flatcc_builder_create_union_vector@@Base+0x9e>
  408ce1:	mov    rcx,QWORD PTR [rbp-0x38]
  408ce5:	mov    rdx,QWORD PTR [rbp-0x10]
  408ce9:	mov    rsi,QWORD PTR [rbp-0x18]
  408ced:	mov    rax,QWORD PTR [rbp-0x28]
  408cf1:	mov    rdi,rax
  408cf4:	call   408d0f <flatcc_builder_create_union_vector_direct@@Base>
  408cf9:	mov    QWORD PTR [rbp-0x8],rax
  408cfd:	mov    rax,QWORD PTR [rbp-0x28]
  408d01:	mov    rdi,rax
  408d04:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408d09:	mov    rax,QWORD PTR [rbp-0x8]
  408d0d:	leave  
  408d0e:	ret    

0000000000408d0f <flatcc_builder_create_union_vector_direct@@Base>:
  408d0f:	push   rbp
  408d10:	mov    rbp,rsp
  408d13:	sub    rsp,0x30
  408d17:	mov    QWORD PTR [rbp-0x18],rdi
  408d1b:	mov    QWORD PTR [rbp-0x20],rsi
  408d1f:	mov    QWORD PTR [rbp-0x28],rdx
  408d23:	mov    QWORD PTR [rbp-0x30],rcx
  408d27:	mov    DWORD PTR [rbp-0x8],0x0
  408d2e:	mov    DWORD PTR [rbp-0x4],0x0
  408d35:	mov    rcx,QWORD PTR [rbp-0x20]
  408d39:	mov    rdx,QWORD PTR [rbp-0x30]
  408d3d:	mov    rsi,QWORD PTR [rbp-0x28]
  408d41:	mov    rax,QWORD PTR [rbp-0x18]
  408d45:	mov    rdi,rax
  408d48:	call   408427 <flatcc_builder_vector_edit@@Base+0x12>
  408d4d:	mov    DWORD PTR [rbp-0x4],eax
  408d50:	mov    eax,DWORD PTR [rbp-0x4]
  408d53:	test   eax,eax
  408d55:	jne    408d5d <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  408d57:	mov    rax,QWORD PTR [rbp-0x8]
  408d5b:	jmp    408d96 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408d5d:	mov    rdx,QWORD PTR [rbp-0x30]
  408d61:	mov    rsi,QWORD PTR [rbp-0x20]
  408d65:	mov    rax,QWORD PTR [rbp-0x18]
  408d69:	mov    r9d,0xffffffff
  408d6f:	mov    r8d,0x1
  408d75:	mov    ecx,0x1
  408d7a:	mov    rdi,rax
  408d7d:	call   4080bc <flatcc_builder_create_vector@@Base>
  408d82:	mov    DWORD PTR [rbp-0x8],eax
  408d85:	mov    eax,DWORD PTR [rbp-0x8]
  408d88:	test   eax,eax
  408d8a:	jne    408d92 <flatcc_builder_create_union_vector_direct@@Base+0x83>
  408d8c:	mov    rax,QWORD PTR [rbp-0x8]
  408d90:	jmp    408d96 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408d92:	mov    rax,QWORD PTR [rbp-0x8]
  408d96:	leave  
  408d97:	ret    

0000000000408d98 <flatcc_builder_start_union_vector@@Base>:
  408d98:	push   rbp
  408d99:	mov    rbp,rsp
  408d9c:	sub    rsp,0x10
  408da0:	mov    QWORD PTR [rbp-0x8],rdi
  408da4:	mov    rax,QWORD PTR [rbp-0x8]
  408da8:	mov    esi,0x4
  408dad:	mov    rdi,rax
  408db0:	call   405785 <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  408db5:	test   eax,eax
  408db7:	je     408dc0 <flatcc_builder_start_union_vector@@Base+0x28>
  408db9:	mov    eax,0xffffffff
  408dbe:	jmp    408e02 <flatcc_builder_start_union_vector@@Base+0x6a>
  408dc0:	mov    rax,QWORD PTR [rbp-0x8]
  408dc4:	mov    rax,QWORD PTR [rax+0x30]
  408dc8:	mov    DWORD PTR [rax+0x10],0x8
  408dcf:	mov    rax,QWORD PTR [rbp-0x8]
  408dd3:	mov    rax,QWORD PTR [rax+0x30]
  408dd7:	mov    DWORD PTR [rax+0x14],0x0
  408dde:	mov    rax,QWORD PTR [rbp-0x8]
  408de2:	mov    rax,QWORD PTR [rax+0x30]
  408de6:	mov    WORD PTR [rax+0xe],0x7
  408dec:	mov    rax,QWORD PTR [rbp-0x8]
  408df0:	mov    esi,0xfffffffc
  408df5:	mov    rdi,rax
  408df8:	call   40498f <flatcc_builder_default_alloc@@Base+0x16d>
  408dfd:	mov    eax,0x0
  408e02:	leave  
  408e03:	ret    

0000000000408e04 <flatcc_builder_end_union_vector@@Base>:
  408e04:	push   rbp
  408e05:	mov    rbp,rsp
  408e08:	sub    rsp,0x40
  408e0c:	mov    QWORD PTR [rbp-0x38],rdi
  408e10:	mov    DWORD PTR [rbp-0x8],0x0
  408e17:	mov    DWORD PTR [rbp-0x4],0x0
  408e1e:	mov    rax,QWORD PTR [rbp-0x38]
  408e22:	mov    rax,QWORD PTR [rax+0x30]
  408e26:	movzx  eax,WORD PTR [rax+0xe]
  408e2a:	cmp    ax,0x7
  408e2e:	je     408e4f <flatcc_builder_end_union_vector@@Base+0x4b>
  408e30:	lea    rcx,[rip+0x4f09]        # 40dd40 <flatcc_builder_padding_base@@Base+0xb80>
  408e37:	mov    edx,0x651
  408e3c:	lea    rsi,[rip+0x457d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408e43:	lea    rdi,[rip+0x490e]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  408e4a:	call   403070 <__assert_fail@plt>
  408e4f:	mov    rax,QWORD PTR [rbp-0x38]
  408e53:	mov    rdi,rax
  408e56:	call   408f5c <flatcc_builder_union_vector_count@@Base>
  408e5b:	mov    QWORD PTR [rbp-0x28],rax
  408e5f:	mov    rax,QWORD PTR [rbp-0x28]
  408e63:	mov    edx,eax
  408e65:	mov    eax,edx
  408e67:	shl    eax,0x2
  408e6a:	add    edx,eax
  408e6c:	mov    rax,QWORD PTR [rbp-0x38]
  408e70:	mov    esi,edx
  408e72:	mov    rdi,rax
  408e75:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  408e7a:	mov    QWORD PTR [rbp-0x20],rax
  408e7e:	cmp    QWORD PTR [rbp-0x20],0x0
  408e83:	jne    408e8e <flatcc_builder_end_union_vector@@Base+0x8a>
  408e85:	mov    rax,QWORD PTR [rbp-0x8]
  408e89:	jmp    408f48 <flatcc_builder_end_union_vector@@Base+0x144>
  408e8e:	mov    rax,QWORD PTR [rbp-0x28]
  408e92:	lea    rdx,[rax*4+0x0]
  408e9a:	mov    rax,QWORD PTR [rbp-0x20]
  408e9e:	add    rax,rdx
  408ea1:	mov    QWORD PTR [rbp-0x18],rax
  408ea5:	mov    rax,QWORD PTR [rbp-0x38]
  408ea9:	mov    rdi,rax
  408eac:	call   408f4a <flatcc_builder_union_vector_edit@@Base>
  408eb1:	mov    QWORD PTR [rbp-0x10],rax
  408eb5:	mov    QWORD PTR [rbp-0x30],0x0
  408ebd:	jmp    408f12 <flatcc_builder_end_union_vector@@Base+0x10e>
  408ebf:	mov    rdx,QWORD PTR [rbp-0x18]
  408ec3:	mov    rax,QWORD PTR [rbp-0x30]
  408ec7:	add    rdx,rax
  408eca:	mov    rax,QWORD PTR [rbp-0x30]
  408ece:	lea    rcx,[rax*8+0x0]
  408ed6:	mov    rax,QWORD PTR [rbp-0x10]
  408eda:	add    rax,rcx
  408edd:	movzx  eax,BYTE PTR [rax]
  408ee0:	mov    BYTE PTR [rdx],al
  408ee2:	mov    rax,QWORD PTR [rbp-0x30]
  408ee6:	lea    rdx,[rax*4+0x0]
  408eee:	mov    rax,QWORD PTR [rbp-0x20]
  408ef2:	add    rdx,rax
  408ef5:	mov    rax,QWORD PTR [rbp-0x30]
  408ef9:	lea    rcx,[rax*8+0x0]
  408f01:	mov    rax,QWORD PTR [rbp-0x10]
  408f05:	add    rax,rcx
  408f08:	mov    eax,DWORD PTR [rax+0x4]
  408f0b:	mov    DWORD PTR [rdx],eax
  408f0d:	add    QWORD PTR [rbp-0x30],0x1
  408f12:	mov    rax,QWORD PTR [rbp-0x30]
  408f16:	cmp    rax,QWORD PTR [rbp-0x28]
  408f1a:	jb     408ebf <flatcc_builder_end_union_vector@@Base+0xbb>
  408f1c:	mov    rcx,QWORD PTR [rbp-0x28]
  408f20:	mov    rdx,QWORD PTR [rbp-0x20]
  408f24:	mov    rsi,QWORD PTR [rbp-0x18]
  408f28:	mov    rax,QWORD PTR [rbp-0x38]
  408f2c:	mov    rdi,rax
  408f2f:	call   408d0f <flatcc_builder_create_union_vector_direct@@Base>
  408f34:	mov    QWORD PTR [rbp-0x8],rax
  408f38:	mov    rax,QWORD PTR [rbp-0x38]
  408f3c:	mov    rdi,rax
  408f3f:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408f44:	mov    rax,QWORD PTR [rbp-0x8]
  408f48:	leave  
  408f49:	ret    

0000000000408f4a <flatcc_builder_union_vector_edit@@Base>:
  408f4a:	push   rbp
  408f4b:	mov    rbp,rsp
  408f4e:	mov    QWORD PTR [rbp-0x8],rdi
  408f52:	mov    rax,QWORD PTR [rbp-0x8]
  408f56:	mov    rax,QWORD PTR [rax+0x18]
  408f5a:	pop    rbp
  408f5b:	ret    

0000000000408f5c <flatcc_builder_union_vector_count@@Base>:
  408f5c:	push   rbp
  408f5d:	mov    rbp,rsp
  408f60:	mov    QWORD PTR [rbp-0x8],rdi
  408f64:	mov    rax,QWORD PTR [rbp-0x8]
  408f68:	mov    rax,QWORD PTR [rax+0x30]
  408f6c:	mov    eax,DWORD PTR [rax+0x14]
  408f6f:	mov    eax,eax
  408f71:	pop    rbp
  408f72:	ret    

0000000000408f73 <flatcc_builder_extend_union_vector@@Base>:
  408f73:	push   rbp
  408f74:	mov    rbp,rsp
  408f77:	sub    rsp,0x10
  408f7b:	mov    QWORD PTR [rbp-0x8],rdi
  408f7f:	mov    QWORD PTR [rbp-0x10],rsi
  408f83:	mov    rax,QWORD PTR [rbp-0x10]
  408f87:	mov    ecx,eax
  408f89:	mov    rax,QWORD PTR [rbp-0x8]
  408f8d:	mov    edx,0x1fffffff
  408f92:	mov    esi,ecx
  408f94:	mov    rdi,rax
  408f97:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  408f9c:	test   eax,eax
  408f9e:	je     408fa7 <flatcc_builder_extend_union_vector@@Base+0x34>
  408fa0:	mov    eax,0x0
  408fa5:	jmp    408fc0 <flatcc_builder_extend_union_vector@@Base+0x4d>
  408fa7:	mov    rax,QWORD PTR [rbp-0x10]
  408fab:	lea    edx,[rax*8+0x0]
  408fb2:	mov    rax,QWORD PTR [rbp-0x8]
  408fb6:	mov    esi,edx
  408fb8:	mov    rdi,rax
  408fbb:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  408fc0:	leave  
  408fc1:	ret    

0000000000408fc2 <flatcc_builder_truncate_union_vector@@Base>:
  408fc2:	push   rbp
  408fc3:	mov    rbp,rsp
  408fc6:	sub    rsp,0x10
  408fca:	mov    QWORD PTR [rbp-0x8],rdi
  408fce:	mov    QWORD PTR [rbp-0x10],rsi
  408fd2:	mov    rax,QWORD PTR [rbp-0x8]
  408fd6:	mov    rax,QWORD PTR [rax+0x30]
  408fda:	movzx  eax,WORD PTR [rax+0xe]
  408fde:	cmp    ax,0x7
  408fe2:	je     409003 <flatcc_builder_truncate_union_vector@@Base+0x41>
  408fe4:	lea    rcx,[rip+0x4d75]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  408feb:	mov    edx,0x681
  408ff0:	lea    rsi,[rip+0x43c9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408ff7:	lea    rdi,[rip+0x475a]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  408ffe:	call   403070 <__assert_fail@plt>
  409003:	mov    rax,QWORD PTR [rbp-0x8]
  409007:	mov    rax,QWORD PTR [rax+0x30]
  40900b:	mov    eax,DWORD PTR [rax+0x14]
  40900e:	mov    rdx,QWORD PTR [rbp-0x10]
  409012:	cmp    eax,edx
  409014:	jae    40904f <flatcc_builder_truncate_union_vector@@Base+0x8d>
  409016:	mov    rax,QWORD PTR [rbp-0x8]
  40901a:	mov    rax,QWORD PTR [rax+0x30]
  40901e:	mov    eax,DWORD PTR [rax+0x14]
  409021:	mov    rdx,QWORD PTR [rbp-0x10]
  409025:	cmp    eax,edx
  409027:	jae    409048 <flatcc_builder_truncate_union_vector@@Base+0x86>
  409029:	lea    rcx,[rip+0x4d30]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  409030:	mov    edx,0x682
  409035:	lea    rsi,[rip+0x4384]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40903c:	lea    rdi,[rip+0x45c5]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  409043:	call   403070 <__assert_fail@plt>
  409048:	mov    eax,0xffffffff
  40904d:	jmp    409090 <flatcc_builder_truncate_union_vector@@Base+0xce>
  40904f:	mov    rax,QWORD PTR [rbp-0x8]
  409053:	mov    rax,QWORD PTR [rax+0x30]
  409057:	mov    rdx,QWORD PTR [rbp-0x8]
  40905b:	mov    rdx,QWORD PTR [rdx+0x30]
  40905f:	mov    edx,DWORD PTR [rdx+0x14]
  409062:	mov    rcx,QWORD PTR [rbp-0x10]
  409066:	sub    edx,ecx
  409068:	mov    DWORD PTR [rax+0x14],edx
  40906b:	mov    rax,QWORD PTR [rbp-0x8]
  40906f:	mov    rax,QWORD PTR [rax+0x30]
  409073:	mov    eax,DWORD PTR [rax+0x10]
  409076:	mov    rdx,QWORD PTR [rbp-0x10]
  40907a:	imul   edx,eax
  40907d:	mov    rax,QWORD PTR [rbp-0x8]
  409081:	mov    esi,edx
  409083:	mov    rdi,rax
  409086:	call   404aff <flatcc_builder_default_alloc@@Base+0x2dd>
  40908b:	mov    eax,0x0
  409090:	leave  
  409091:	ret    

0000000000409092 <flatcc_builder_union_vector_push@@Base>:
  409092:	push   rbp
  409093:	mov    rbp,rsp
  409096:	sub    rsp,0x20
  40909a:	mov    QWORD PTR [rbp-0x18],rdi
  40909e:	mov    QWORD PTR [rbp-0x20],rsi
  4090a2:	mov    rax,QWORD PTR [rbp-0x18]
  4090a6:	mov    rax,QWORD PTR [rax+0x30]
  4090aa:	movzx  eax,WORD PTR [rax+0xe]
  4090ae:	cmp    ax,0x7
  4090b2:	je     4090d3 <flatcc_builder_union_vector_push@@Base+0x41>
  4090b4:	lea    rcx,[rip+0x4ce5]        # 40dda0 <flatcc_builder_padding_base@@Base+0xbe0>
  4090bb:	mov    edx,0x68d
  4090c0:	lea    rsi,[rip+0x42f9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4090c7:	lea    rdi,[rip+0x468a]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  4090ce:	call   403070 <__assert_fail@plt>
  4090d3:	mov    rax,QWORD PTR [rbp-0x18]
  4090d7:	mov    rax,QWORD PTR [rax+0x30]
  4090db:	mov    eax,DWORD PTR [rax+0x14]
  4090de:	cmp    eax,0x1fffffff
  4090e3:	jne    4090ec <flatcc_builder_union_vector_push@@Base+0x5a>
  4090e5:	mov    eax,0x0
  4090ea:	jmp    409137 <flatcc_builder_union_vector_push@@Base+0xa5>
  4090ec:	mov    rax,QWORD PTR [rbp-0x18]
  4090f0:	mov    rax,QWORD PTR [rax+0x30]
  4090f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4090f8:	mov    rdx,QWORD PTR [rdx+0x30]
  4090fc:	mov    edx,DWORD PTR [rdx+0x14]
  4090ff:	add    edx,0x1
  409102:	mov    DWORD PTR [rax+0x14],edx
  409105:	mov    rax,QWORD PTR [rbp-0x18]
  409109:	mov    esi,0x8
  40910e:	mov    rdi,rax
  409111:	call   404a82 <flatcc_builder_default_alloc@@Base+0x260>
  409116:	mov    QWORD PTR [rbp-0x8],rax
  40911a:	cmp    QWORD PTR [rbp-0x8],0x0
  40911f:	jne    409128 <flatcc_builder_union_vector_push@@Base+0x96>
  409121:	mov    eax,0x0
  409126:	jmp    409137 <flatcc_builder_union_vector_push@@Base+0xa5>
  409128:	mov    rax,QWORD PTR [rbp-0x8]
  40912c:	mov    rdx,QWORD PTR [rbp-0x20]
  409130:	mov    QWORD PTR [rax],rdx
  409133:	mov    rax,QWORD PTR [rbp-0x8]
  409137:	leave  
  409138:	ret    

0000000000409139 <flatcc_builder_append_union_vector@@Base>:
  409139:	push   rbp
  40913a:	mov    rbp,rsp
  40913d:	sub    rsp,0x20
  409141:	mov    QWORD PTR [rbp-0x8],rdi
  409145:	mov    QWORD PTR [rbp-0x10],rsi
  409149:	mov    QWORD PTR [rbp-0x18],rdx
  40914d:	mov    rax,QWORD PTR [rbp-0x8]
  409151:	mov    rax,QWORD PTR [rax+0x30]
  409155:	movzx  eax,WORD PTR [rax+0xe]
  409159:	cmp    ax,0x7
  40915d:	je     40917e <flatcc_builder_append_union_vector@@Base+0x45>
  40915f:	lea    rcx,[rip+0x4c7a]        # 40dde0 <flatcc_builder_padding_base@@Base+0xc20>
  409166:	mov    edx,0x69c
  40916b:	lea    rsi,[rip+0x424e]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409172:	lea    rdi,[rip+0x45df]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  409179:	call   403070 <__assert_fail@plt>
  40917e:	mov    rax,QWORD PTR [rbp-0x18]
  409182:	mov    ecx,eax
  409184:	mov    rax,QWORD PTR [rbp-0x8]
  409188:	mov    edx,0x1fffffff
  40918d:	mov    esi,ecx
  40918f:	mov    rdi,rax
  409192:	call   4069d9 <flatcc_builder_end_struct@@Base+0x8e>
  409197:	test   eax,eax
  409199:	je     4091a2 <flatcc_builder_append_union_vector@@Base+0x69>
  40919b:	mov    eax,0x0
  4091a0:	jmp    4091c0 <flatcc_builder_append_union_vector@@Base+0x87>
  4091a2:	mov    rax,QWORD PTR [rbp-0x18]
  4091a6:	lea    edx,[rax*8+0x0]
  4091ad:	mov    rcx,QWORD PTR [rbp-0x10]
  4091b1:	mov    rax,QWORD PTR [rbp-0x8]
  4091b5:	mov    rsi,rcx
  4091b8:	mov    rdi,rax
  4091bb:	call   404b4b <flatcc_builder_default_alloc@@Base+0x329>
  4091c0:	leave  
  4091c1:	ret    

00000000004091c2 <flatcc_builder_create_string@@Base>:
  4091c2:	push   rbp
  4091c3:	mov    rbp,rsp
  4091c6:	sub    rsp,0xd0
  4091cd:	mov    QWORD PTR [rbp-0xb8],rdi
  4091d4:	mov    QWORD PTR [rbp-0xc0],rsi
  4091db:	mov    QWORD PTR [rbp-0xc8],rdx
  4091e2:	mov    rax,QWORD PTR fs:0x28
  4091eb:	mov    QWORD PTR [rbp-0x8],rax
  4091ef:	xor    eax,eax
  4091f1:	mov    eax,0xffffffff
  4091f6:	cmp    QWORD PTR [rbp-0xc8],rax
  4091fd:	jbe    409209 <flatcc_builder_create_string@@Base+0x47>
  4091ff:	mov    eax,0x0
  409204:	jmp    4093b0 <flatcc_builder_create_string@@Base+0x1ee>
  409209:	mov    rax,QWORD PTR [rbp-0xc8]
  409210:	mov    edi,eax
  409212:	call   40475c <main@@Base+0x176>
  409217:	mov    DWORD PTR [rbp-0xa8],eax
  40921d:	mov    rax,QWORD PTR [rbp-0xc8]
  409224:	lea    ecx,[rax+0x1]
  409227:	mov    rax,QWORD PTR [rbp-0xb8]
  40922e:	mov    edx,0x4
  409233:	mov    esi,ecx
  409235:	mov    rdi,rax
  409238:	call   405a24 <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40923d:	add    eax,0x1
  409240:	mov    DWORD PTR [rbp-0xa4],eax
  409246:	mov    QWORD PTR [rbp-0xa0],0x0
  409251:	mov    DWORD PTR [rbp-0x98],0x0
  40925b:	mov    rax,QWORD PTR [rbp-0xa0]
  409262:	add    rax,0x4
  409266:	mov    QWORD PTR [rbp-0xa0],rax
  40926d:	mov    eax,DWORD PTR [rbp-0x98]
  409273:	cdqe   
  409275:	shl    rax,0x4
  409279:	add    rax,rbp
  40927c:	lea    rdx,[rax-0x90]
  409283:	lea    rax,[rbp-0xa8]
  40928a:	mov    QWORD PTR [rdx],rax
  40928d:	mov    eax,DWORD PTR [rbp-0x98]
  409293:	cdqe   
  409295:	shl    rax,0x4
  409299:	add    rax,rbp
  40929c:	sub    rax,0x88
  4092a2:	mov    QWORD PTR [rax],0x4
  4092a9:	mov    eax,DWORD PTR [rbp-0x98]
  4092af:	add    eax,0x1
  4092b2:	mov    DWORD PTR [rbp-0x98],eax
  4092b8:	cmp    QWORD PTR [rbp-0xc8],0x0
  4092c0:	je     409329 <flatcc_builder_create_string@@Base+0x167>
  4092c2:	mov    rdx,QWORD PTR [rbp-0xa0]
  4092c9:	mov    rax,QWORD PTR [rbp-0xc8]
  4092d0:	add    rax,rdx
  4092d3:	mov    QWORD PTR [rbp-0xa0],rax
  4092da:	mov    eax,DWORD PTR [rbp-0x98]
  4092e0:	cdqe   
  4092e2:	shl    rax,0x4
  4092e6:	add    rax,rbp
  4092e9:	lea    rdx,[rax-0x90]
  4092f0:	mov    rax,QWORD PTR [rbp-0xc0]
  4092f7:	mov    QWORD PTR [rdx],rax
  4092fa:	mov    eax,DWORD PTR [rbp-0x98]
  409300:	cdqe   
  409302:	shl    rax,0x4
  409306:	add    rax,rbp
  409309:	lea    rdx,[rax-0x88]
  409310:	mov    rax,QWORD PTR [rbp-0xc8]
  409317:	mov    QWORD PTR [rdx],rax
  40931a:	mov    eax,DWORD PTR [rbp-0x98]
  409320:	add    eax,0x1
  409323:	mov    DWORD PTR [rbp-0x98],eax
  409329:	cmp    DWORD PTR [rbp-0xa4],0x0
  409330:	je     409397 <flatcc_builder_create_string@@Base+0x1d5>
  409332:	mov    rdx,QWORD PTR [rbp-0xa0]
  409339:	mov    eax,DWORD PTR [rbp-0xa4]
  40933f:	add    rax,rdx
  409342:	mov    QWORD PTR [rbp-0xa0],rax
  409349:	mov    eax,DWORD PTR [rbp-0x98]
  40934f:	cdqe   
  409351:	shl    rax,0x4
  409355:	add    rax,rbp
  409358:	sub    rax,0x90
  40935e:	mov    rdx,0x40d1c0
  409365:	mov    QWORD PTR [rax],rdx
  409368:	mov    edx,DWORD PTR [rbp-0x98]
  40936e:	mov    eax,DWORD PTR [rbp-0xa4]
  409374:	movsxd rdx,edx
  409377:	shl    rdx,0x4
  40937b:	add    rdx,rbp
  40937e:	sub    rdx,0x88
  409385:	mov    QWORD PTR [rdx],rax
  409388:	mov    eax,DWORD PTR [rbp-0x98]
  40938e:	add    eax,0x1
  409391:	mov    DWORD PTR [rbp-0x98],eax
  409397:	lea    rdx,[rbp-0xa0]
  40939e:	mov    rax,QWORD PTR [rbp-0xb8]
  4093a5:	mov    rsi,rdx
  4093a8:	mov    rdi,rax
  4093ab:	call   405a70 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4093b0:	mov    rcx,QWORD PTR [rbp-0x8]
  4093b4:	xor    rcx,QWORD PTR fs:0x28
  4093bd:	je     4093c4 <flatcc_builder_create_string@@Base+0x202>
  4093bf:	call   403060 <__stack_chk_fail@plt>
  4093c4:	leave  
  4093c5:	ret    

00000000004093c6 <flatcc_builder_create_string_str@@Base>:
  4093c6:	push   rbp
  4093c7:	mov    rbp,rsp
  4093ca:	sub    rsp,0x10
  4093ce:	mov    QWORD PTR [rbp-0x8],rdi
  4093d2:	mov    QWORD PTR [rbp-0x10],rsi
  4093d6:	mov    rax,QWORD PTR [rbp-0x10]
  4093da:	mov    rdi,rax
  4093dd:	call   403050 <strlen@plt>
  4093e2:	mov    rdx,rax
  4093e5:	mov    rcx,QWORD PTR [rbp-0x10]
  4093e9:	mov    rax,QWORD PTR [rbp-0x8]
  4093ed:	mov    rsi,rcx
  4093f0:	mov    rdi,rax
  4093f3:	call   4091c2 <flatcc_builder_create_string@@Base>
  4093f8:	leave  
  4093f9:	ret    

00000000004093fa <flatcc_builder_create_string_strn@@Base>:
  4093fa:	push   rbp
  4093fb:	mov    rbp,rsp
  4093fe:	sub    rsp,0x20
  409402:	mov    QWORD PTR [rbp-0x8],rdi
  409406:	mov    QWORD PTR [rbp-0x10],rsi
  40940a:	mov    QWORD PTR [rbp-0x18],rdx
  40940e:	mov    rdx,QWORD PTR [rbp-0x18]
  409412:	mov    rax,QWORD PTR [rbp-0x10]
  409416:	mov    rsi,rdx
  409419:	mov    rdi,rax
  40941c:	call   4047dc <main@@Base+0x1f6>
  409421:	mov    rdx,rax
  409424:	mov    rcx,QWORD PTR [rbp-0x10]
  409428:	mov    rax,QWORD PTR [rbp-0x8]
  40942c:	mov    rsi,rcx
  40942f:	mov    rdi,rax
  409432:	call   4091c2 <flatcc_builder_create_string@@Base>
  409437:	leave  
  409438:	ret    

0000000000409439 <flatcc_builder_end_string@@Base>:
  409439:	push   rbp
  40943a:	mov    rbp,rsp
  40943d:	sub    rsp,0x20
  409441:	mov    QWORD PTR [rbp-0x18],rdi
  409445:	mov    rax,QWORD PTR [rbp-0x18]
  409449:	mov    rax,QWORD PTR [rax+0x30]
  40944d:	movzx  eax,WORD PTR [rax+0xe]
  409451:	cmp    ax,0x6
  409455:	je     409476 <flatcc_builder_end_string@@Base+0x3d>
  409457:	lea    rcx,[rip+0x49b2]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  40945e:	mov    edx,0x6c4
  409463:	lea    rsi,[rip+0x3f56]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40946a:	lea    rdi,[rip+0x413f]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  409471:	call   403070 <__assert_fail@plt>
  409476:	mov    rax,QWORD PTR [rbp-0x18]
  40947a:	mov    rax,QWORD PTR [rax+0x30]
  40947e:	mov    edx,DWORD PTR [rax+0x14]
  409481:	mov    rax,QWORD PTR [rbp-0x18]
  409485:	mov    eax,DWORD PTR [rax+0x20]
  409488:	cmp    edx,eax
  40948a:	je     4094ab <flatcc_builder_end_string@@Base+0x72>
  40948c:	lea    rcx,[rip+0x497d]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  409493:	mov    edx,0x6c5
  409498:	lea    rsi,[rip+0x3f21]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40949f:	lea    rdi,[rip+0x42ea]        # 40d790 <flatcc_builder_padding_base@@Base+0x5d0>
  4094a6:	call   403070 <__assert_fail@plt>
  4094ab:	mov    rax,QWORD PTR [rbp-0x18]
  4094af:	mov    eax,DWORD PTR [rax+0x20]
  4094b2:	mov    edx,eax
  4094b4:	mov    rax,QWORD PTR [rbp-0x18]
  4094b8:	mov    rcx,QWORD PTR [rax+0x18]
  4094bc:	mov    rax,QWORD PTR [rbp-0x18]
  4094c0:	mov    rsi,rcx
  4094c3:	mov    rdi,rax
  4094c6:	call   4091c2 <flatcc_builder_create_string@@Base>
  4094cb:	mov    DWORD PTR [rbp-0x4],eax
  4094ce:	cmp    DWORD PTR [rbp-0x4],0x0
  4094d2:	jne    4094db <flatcc_builder_end_string@@Base+0xa2>
  4094d4:	mov    eax,0x0
  4094d9:	jmp    4094ea <flatcc_builder_end_string@@Base+0xb1>
  4094db:	mov    rax,QWORD PTR [rbp-0x18]
  4094df:	mov    rdi,rax
  4094e2:	call   40595d <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4094e7:	mov    eax,DWORD PTR [rbp-0x4]
  4094ea:	leave  
  4094eb:	ret    

00000000004094ec <flatcc_builder_string_edit@@Base>:
  4094ec:	push   rbp
  4094ed:	mov    rbp,rsp
  4094f0:	mov    QWORD PTR [rbp-0x8],rdi
  4094f4:	mov    rax,QWORD PTR [rbp-0x8]
  4094f8:	mov    rax,QWORD PTR [rax+0x18]
  4094fc:	pop    rbp
  4094fd:	ret    

00000000004094fe <flatcc_builder_string_len@@Base>:
  4094fe:	push   rbp
  4094ff:	mov    rbp,rsp
  409502:	mov    QWORD PTR [rbp-0x8],rdi
  409506:	mov    rax,QWORD PTR [rbp-0x8]
  40950a:	mov    rax,QWORD PTR [rax+0x30]
  40950e:	mov    eax,DWORD PTR [rax+0x14]
  409511:	mov    eax,eax
  409513:	pop    rbp
  409514:	ret    

0000000000409515 <flatcc_builder_table_add@@Base>:
  409515:	push   rbp
  409516:	mov    rbp,rsp
  409519:	sub    rsp,0x20
  40951d:	mov    QWORD PTR [rbp-0x8],rdi
  409521:	mov    DWORD PTR [rbp-0xc],esi
  409524:	mov    QWORD PTR [rbp-0x18],rdx
  409528:	mov    eax,ecx
  40952a:	mov    WORD PTR [rbp-0x10],ax
  40952e:	mov    rax,QWORD PTR [rbp-0x8]
  409532:	mov    rax,QWORD PTR [rax+0x30]
  409536:	movzx  eax,WORD PTR [rax+0xe]
  40953a:	cmp    ax,0x3
  40953e:	je     40955f <flatcc_builder_table_add@@Base+0x4a>
  409540:	lea    rcx,[rip+0x48e9]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  409547:	mov    edx,0x6ed
  40954c:	lea    rsi,[rip+0x3e6d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409553:	lea    rdi,[rip+0x413e]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40955a:	call   403070 <__assert_fail@plt>
  40955f:	cmp    DWORD PTR [rbp-0xc],0x0
  409563:	js     40956e <flatcc_builder_table_add@@Base+0x59>
  409565:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40956c:	jle    40958d <flatcc_builder_table_add@@Base+0x78>
  40956e:	lea    rcx,[rip+0x48bb]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  409575:	mov    edx,0x6ee
  40957a:	lea    rsi,[rip+0x3e3f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409581:	lea    rdi,[rip+0x4230]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  409588:	call   403070 <__assert_fail@plt>
  40958d:	mov    rax,QWORD PTR [rbp-0x8]
  409591:	movzx  eax,WORD PTR [rax+0xea]
  409598:	cmp    ax,WORD PTR [rbp-0x10]
  40959c:	jae    4095ad <flatcc_builder_table_add@@Base+0x98>
  40959e:	mov    rax,QWORD PTR [rbp-0x8]
  4095a2:	movzx  edx,WORD PTR [rbp-0x10]
  4095a6:	mov    WORD PTR [rax+0xea],dx
  4095ad:	mov    rax,QWORD PTR [rbp-0x8]
  4095b1:	mov    rax,QWORD PTR [rax+0x8]
  4095b5:	mov    edx,DWORD PTR [rbp-0xc]
  4095b8:	movsxd rdx,edx
  4095bb:	add    rdx,rdx
  4095be:	add    rax,rdx
  4095c1:	movzx  eax,WORD PTR [rax]
  4095c4:	test   ax,ax
  4095c7:	je     4095e8 <flatcc_builder_table_add@@Base+0xd3>
  4095c9:	lea    rcx,[rip+0x4860]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  4095d0:	mov    edx,0x6f8
  4095d5:	lea    rsi,[rip+0x3de4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4095dc:	lea    rdi,[rip+0x3e3d]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  4095e3:	call   403070 <__assert_fail@plt>
  4095e8:	mov    rax,QWORD PTR [rbp-0x8]
  4095ec:	mov    edx,DWORD PTR [rax+0x14]
  4095ef:	mov    eax,DWORD PTR [rbp-0xc]
  4095f2:	xor    eax,edx
  4095f4:	imul   eax,eax,0x9e3779b1
  4095fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4095fe:	xor    eax,edx
  409600:	imul   edx,eax,0x9e3779b1
  409606:	mov    rax,QWORD PTR [rbp-0x8]
  40960a:	mov    DWORD PTR [rax+0x14],edx
  40960d:	mov    eax,DWORD PTR [rbp-0xc]
  409610:	movzx  ecx,ax
  409613:	movzx  edx,WORD PTR [rbp-0x10]
  409617:	mov    rax,QWORD PTR [rbp-0x18]
  40961b:	mov    esi,eax
  40961d:	mov    rax,QWORD PTR [rbp-0x8]
  409621:	mov    rdi,rax
  409624:	call   404b9d <flatcc_builder_default_alloc@@Base+0x37b>
  409629:	leave  
  40962a:	ret    

000000000040962b <flatcc_builder_table_edit@@Base>:
  40962b:	push   rbp
  40962c:	mov    rbp,rsp
  40962f:	sub    rsp,0x10
  409633:	mov    QWORD PTR [rbp-0x8],rdi
  409637:	mov    QWORD PTR [rbp-0x10],rsi
  40963b:	mov    rax,QWORD PTR [rbp-0x8]
  40963f:	mov    rax,QWORD PTR [rax+0x30]
  409643:	movzx  eax,WORD PTR [rax+0xe]
  409647:	cmp    ax,0x3
  40964b:	je     40966c <flatcc_builder_table_edit@@Base+0x41>
  40964d:	lea    rcx,[rip+0x47fc]        # 40de50 <flatcc_builder_padding_base@@Base+0xc90>
  409654:	mov    edx,0x702
  409659:	lea    rsi,[rip+0x3d60]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409660:	lea    rdi,[rip+0x4031]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  409667:	call   403070 <__assert_fail@plt>
  40966c:	mov    rax,QWORD PTR [rbp-0x8]
  409670:	mov    rdx,QWORD PTR [rax+0x18]
  409674:	mov    rax,QWORD PTR [rbp-0x8]
  409678:	mov    eax,DWORD PTR [rax+0x20]
  40967b:	mov    eax,eax
  40967d:	sub    rax,QWORD PTR [rbp-0x10]
  409681:	add    rax,rdx
  409684:	leave  
  409685:	ret    

0000000000409686 <flatcc_builder_table_add_copy@@Base>:
  409686:	push   rbp
  409687:	mov    rbp,rsp
  40968a:	sub    rsp,0x30
  40968e:	mov    QWORD PTR [rbp-0x18],rdi
  409692:	mov    DWORD PTR [rbp-0x1c],esi
  409695:	mov    QWORD PTR [rbp-0x28],rdx
  409699:	mov    QWORD PTR [rbp-0x30],rcx
  40969d:	mov    eax,r8d
  4096a0:	mov    WORD PTR [rbp-0x20],ax
  4096a4:	movzx  ecx,WORD PTR [rbp-0x20]
  4096a8:	mov    rdx,QWORD PTR [rbp-0x30]
  4096ac:	mov    esi,DWORD PTR [rbp-0x1c]
  4096af:	mov    rax,QWORD PTR [rbp-0x18]
  4096b3:	mov    rdi,rax
  4096b6:	call   409515 <flatcc_builder_table_add@@Base>
  4096bb:	mov    QWORD PTR [rbp-0x8],rax
  4096bf:	cmp    QWORD PTR [rbp-0x8],0x0
  4096c4:	je     4096dd <flatcc_builder_table_add_copy@@Base+0x57>
  4096c6:	mov    rdx,QWORD PTR [rbp-0x30]
  4096ca:	mov    rcx,QWORD PTR [rbp-0x28]
  4096ce:	mov    rax,QWORD PTR [rbp-0x8]
  4096d2:	mov    rsi,rcx
  4096d5:	mov    rdi,rax
  4096d8:	call   4030b0 <memcpy@plt>
  4096dd:	mov    rax,QWORD PTR [rbp-0x8]
  4096e1:	leave  
  4096e2:	ret    

00000000004096e3 <flatcc_builder_table_add_offset@@Base>:
  4096e3:	push   rbp
  4096e4:	mov    rbp,rsp
  4096e7:	sub    rsp,0x10
  4096eb:	mov    QWORD PTR [rbp-0x8],rdi
  4096ef:	mov    DWORD PTR [rbp-0xc],esi
  4096f2:	mov    rax,QWORD PTR [rbp-0x8]
  4096f6:	mov    rax,QWORD PTR [rax+0x30]
  4096fa:	movzx  eax,WORD PTR [rax+0xe]
  4096fe:	cmp    ax,0x3
  409702:	je     409723 <flatcc_builder_table_add_offset@@Base+0x40>
  409704:	lea    rcx,[rip+0x4775]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  40970b:	mov    edx,0x713
  409710:	lea    rsi,[rip+0x3ca9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409717:	lea    rdi,[rip+0x3f7a]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40971e:	call   403070 <__assert_fail@plt>
  409723:	cmp    DWORD PTR [rbp-0xc],0x0
  409727:	js     409732 <flatcc_builder_table_add_offset@@Base+0x4f>
  409729:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409730:	jle    409751 <flatcc_builder_table_add_offset@@Base+0x6e>
  409732:	lea    rcx,[rip+0x4747]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  409739:	mov    edx,0x714
  40973e:	lea    rsi,[rip+0x3c7b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409745:	lea    rdi,[rip+0x406c]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  40974c:	call   403070 <__assert_fail@plt>
  409751:	mov    rax,QWORD PTR [rbp-0x8]
  409755:	mov    rax,QWORD PTR [rax+0x8]
  409759:	mov    edx,DWORD PTR [rbp-0xc]
  40975c:	movsxd rdx,edx
  40975f:	add    rdx,rdx
  409762:	add    rax,rdx
  409765:	movzx  eax,WORD PTR [rax]
  409768:	test   ax,ax
  40976b:	je     40978c <flatcc_builder_table_add_offset@@Base+0xa9>
  40976d:	lea    rcx,[rip+0x470c]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  409774:	mov    edx,0x71b
  409779:	lea    rsi,[rip+0x3c40]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409780:	lea    rdi,[rip+0x3c99]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409787:	call   403070 <__assert_fail@plt>
  40978c:	mov    rax,QWORD PTR [rbp-0x8]
  409790:	mov    edx,DWORD PTR [rax+0x14]
  409793:	mov    eax,DWORD PTR [rbp-0xc]
  409796:	xor    eax,edx
  409798:	imul   eax,eax,0x9e3779b1
  40979e:	xor    eax,0x4
  4097a1:	imul   edx,eax,0x9e3779b1
  4097a7:	mov    rax,QWORD PTR [rbp-0x8]
  4097ab:	mov    DWORD PTR [rax+0x14],edx
  4097ae:	mov    eax,DWORD PTR [rbp-0xc]
  4097b1:	movzx  edx,ax
  4097b4:	mov    rax,QWORD PTR [rbp-0x8]
  4097b8:	mov    esi,edx
  4097ba:	mov    rdi,rax
  4097bd:	call   404c65 <flatcc_builder_default_alloc@@Base+0x443>
  4097c2:	leave  
  4097c3:	ret    

00000000004097c4 <flatcc_builder_push_buffer_alignment@@Base>:
  4097c4:	push   rbp
  4097c5:	mov    rbp,rsp
  4097c8:	mov    QWORD PTR [rbp-0x18],rdi
  4097cc:	mov    rax,QWORD PTR [rbp-0x18]
  4097d0:	movzx  eax,WORD PTR [rax+0xe8]
  4097d7:	mov    WORD PTR [rbp-0x2],ax
  4097db:	mov    rax,QWORD PTR [rbp-0x18]
  4097df:	mov    WORD PTR [rax+0xe8],0x4
  4097e8:	movzx  eax,WORD PTR [rbp-0x2]
  4097ec:	pop    rbp
  4097ed:	ret    

00000000004097ee <flatcc_builder_pop_buffer_alignment@@Base>:
  4097ee:	push   rbp
  4097ef:	mov    rbp,rsp
  4097f2:	sub    rsp,0x10
  4097f6:	mov    QWORD PTR [rbp-0x8],rdi
  4097fa:	mov    eax,esi
  4097fc:	mov    WORD PTR [rbp-0xc],ax
  409800:	movzx  edx,WORD PTR [rbp-0xc]
  409804:	mov    rax,QWORD PTR [rbp-0x8]
  409808:	mov    esi,edx
  40980a:	mov    rdi,rax
  40980d:	call   40546c <flatcc_builder_clear@@Base+0x96>
  409812:	nop
  409813:	leave  
  409814:	ret    

0000000000409815 <flatcc_builder_get_buffer_alignment@@Base>:
  409815:	push   rbp
  409816:	mov    rbp,rsp
  409819:	mov    QWORD PTR [rbp-0x8],rdi
  40981d:	mov    rax,QWORD PTR [rbp-0x8]
  409821:	movzx  eax,WORD PTR [rax+0xe8]
  409828:	pop    rbp
  409829:	ret    

000000000040982a <flatcc_builder_set_vtable_clustering@@Base>:
  40982a:	push   rbp
  40982b:	mov    rbp,rsp
  40982e:	mov    QWORD PTR [rbp-0x8],rdi
  409832:	mov    DWORD PTR [rbp-0xc],esi
  409835:	cmp    DWORD PTR [rbp-0xc],0x0
  409839:	sete   al
  40983c:	movzx  edx,al
  40983f:	mov    rax,QWORD PTR [rbp-0x8]
  409843:	mov    DWORD PTR [rax+0x124],edx
  409849:	nop
  40984a:	pop    rbp
  40984b:	ret    

000000000040984c <flatcc_builder_set_block_align@@Base>:
  40984c:	push   rbp
  40984d:	mov    rbp,rsp
  409850:	mov    QWORD PTR [rbp-0x8],rdi
  409854:	mov    eax,esi
  409856:	mov    WORD PTR [rbp-0xc],ax
  40985a:	mov    rax,QWORD PTR [rbp-0x8]
  40985e:	movzx  edx,WORD PTR [rbp-0xc]
  409862:	mov    WORD PTR [rax+0xec],dx
  409869:	nop
  40986a:	pop    rbp
  40986b:	ret    

000000000040986c <flatcc_builder_get_level@@Base>:
  40986c:	push   rbp
  40986d:	mov    rbp,rsp
  409870:	mov    QWORD PTR [rbp-0x8],rdi
  409874:	mov    rax,QWORD PTR [rbp-0x8]
  409878:	mov    eax,DWORD PTR [rax+0x104]
  40987e:	pop    rbp
  40987f:	ret    

0000000000409880 <flatcc_builder_set_max_level@@Base>:
  409880:	push   rbp
  409881:	mov    rbp,rsp
  409884:	mov    QWORD PTR [rbp-0x8],rdi
  409888:	mov    DWORD PTR [rbp-0xc],esi
  40988b:	mov    rax,QWORD PTR [rbp-0x8]
  40988f:	mov    edx,DWORD PTR [rbp-0xc]
  409892:	mov    DWORD PTR [rax+0x120],edx
  409898:	mov    rax,QWORD PTR [rbp-0x8]
  40989c:	mov    edx,DWORD PTR [rax+0x108]
  4098a2:	mov    rax,QWORD PTR [rbp-0x8]
  4098a6:	mov    eax,DWORD PTR [rax+0x120]
  4098ac:	cmp    edx,eax
  4098ae:	jge    4098c4 <flatcc_builder_set_max_level@@Base+0x44>
  4098b0:	mov    rax,QWORD PTR [rbp-0x8]
  4098b4:	mov    edx,DWORD PTR [rax+0x120]
  4098ba:	mov    rax,QWORD PTR [rbp-0x8]
  4098be:	mov    DWORD PTR [rax+0x108],edx
  4098c4:	nop
  4098c5:	pop    rbp
  4098c6:	ret    

00000000004098c7 <flatcc_builder_get_buffer_size@@Base>:
  4098c7:	push   rbp
  4098c8:	mov    rbp,rsp
  4098cb:	mov    QWORD PTR [rbp-0x8],rdi
  4098cf:	mov    rax,QWORD PTR [rbp-0x8]
  4098d3:	mov    edx,DWORD PTR [rax+0xf4]
  4098d9:	mov    rax,QWORD PTR [rbp-0x8]
  4098dd:	mov    eax,DWORD PTR [rax+0xf0]
  4098e3:	sub    edx,eax
  4098e5:	mov    eax,edx
  4098e7:	cdqe   
  4098e9:	pop    rbp
  4098ea:	ret    

00000000004098eb <flatcc_builder_get_buffer_start@@Base>:
  4098eb:	push   rbp
  4098ec:	mov    rbp,rsp
  4098ef:	mov    QWORD PTR [rbp-0x8],rdi
  4098f3:	mov    rax,QWORD PTR [rbp-0x8]
  4098f7:	mov    eax,DWORD PTR [rax+0xf0]
  4098fd:	pop    rbp
  4098fe:	ret    

00000000004098ff <flatcc_builder_get_buffer_end@@Base>:
  4098ff:	push   rbp
  409900:	mov    rbp,rsp
  409903:	mov    QWORD PTR [rbp-0x8],rdi
  409907:	mov    rax,QWORD PTR [rbp-0x8]
  40990b:	mov    eax,DWORD PTR [rax+0xf4]
  409911:	pop    rbp
  409912:	ret    

0000000000409913 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409913:	push   rbp
  409914:	mov    rbp,rsp
  409917:	mov    QWORD PTR [rbp-0x8],rdi
  40991b:	mov    QWORD PTR [rbp-0x10],rsi
  40991f:	mov    rax,QWORD PTR [rbp-0x8]
  409923:	mov    rdx,QWORD PTR [rbp-0x10]
  409927:	mov    QWORD PTR [rax+0x118],rdx
  40992e:	nop
  40992f:	pop    rbp
  409930:	ret    

0000000000409931 <flatcc_builder_set_identifier@@Base>:
  409931:	push   rbp
  409932:	mov    rbp,rsp
  409935:	mov    QWORD PTR [rbp-0x8],rdi
  409939:	mov    QWORD PTR [rbp-0x10],rsi
  40993d:	cmp    QWORD PTR [rbp-0x10],0x0
  409942:	je     40994a <flatcc_builder_set_identifier@@Base+0x19>
  409944:	mov    rax,QWORD PTR [rbp-0x10]
  409948:	jmp    409951 <flatcc_builder_set_identifier@@Base+0x20>
  40994a:	mov    rax,0x40d1c0
  409951:	mov    rdx,QWORD PTR [rbp-0x8]
  409955:	add    rdx,0x110
  40995c:	mov    eax,DWORD PTR [rax]
  40995e:	mov    DWORD PTR [rdx],eax
  409960:	nop
  409961:	pop    rbp
  409962:	ret    

0000000000409963 <flatcc_builder_get_type@@Base>:
  409963:	push   rbp
  409964:	mov    rbp,rsp
  409967:	mov    QWORD PTR [rbp-0x8],rdi
  40996b:	mov    rax,QWORD PTR [rbp-0x8]
  40996f:	mov    rax,QWORD PTR [rax+0x30]
  409973:	test   rax,rax
  409976:	je     409989 <flatcc_builder_get_type@@Base+0x26>
  409978:	mov    rax,QWORD PTR [rbp-0x8]
  40997c:	mov    rax,QWORD PTR [rax+0x30]
  409980:	movzx  eax,WORD PTR [rax+0xe]
  409984:	movzx  eax,ax
  409987:	jmp    40998e <flatcc_builder_get_type@@Base+0x2b>
  409989:	mov    eax,0x0
  40998e:	pop    rbp
  40998f:	ret    

0000000000409990 <flatcc_builder_get_type_at@@Base>:
  409990:	push   rbp
  409991:	mov    rbp,rsp
  409994:	mov    QWORD PTR [rbp-0x8],rdi
  409998:	mov    DWORD PTR [rbp-0xc],esi
  40999b:	cmp    DWORD PTR [rbp-0xc],0x0
  40999f:	jle    4099b0 <flatcc_builder_get_type_at@@Base+0x20>
  4099a1:	mov    rax,QWORD PTR [rbp-0x8]
  4099a5:	mov    eax,DWORD PTR [rax+0x104]
  4099ab:	cmp    eax,DWORD PTR [rbp-0xc]
  4099ae:	jge    4099b7 <flatcc_builder_get_type_at@@Base+0x27>
  4099b0:	mov    eax,0x0
  4099b5:	jmp    4099eb <flatcc_builder_get_type_at@@Base+0x5b>
  4099b7:	mov    rax,QWORD PTR [rbp-0x8]
  4099bb:	mov    rcx,QWORD PTR [rax+0x30]
  4099bf:	mov    rax,QWORD PTR [rbp-0x8]
  4099c3:	mov    eax,DWORD PTR [rax+0x104]
  4099c9:	mov    edx,DWORD PTR [rbp-0xc]
  4099cc:	sub    edx,eax
  4099ce:	mov    eax,edx
  4099d0:	movsxd rdx,eax
  4099d3:	mov    rax,rdx
  4099d6:	shl    rax,0x3
  4099da:	add    rax,rdx
  4099dd:	shl    rax,0x2
  4099e1:	add    rax,rcx
  4099e4:	movzx  eax,WORD PTR [rax+0xe]
  4099e8:	movzx  eax,ax
  4099eb:	pop    rbp
  4099ec:	ret    

00000000004099ed <flatcc_builder_get_direct_buffer@@Base>:
  4099ed:	push   rbp
  4099ee:	mov    rbp,rsp
  4099f1:	sub    rsp,0x10
  4099f5:	mov    QWORD PTR [rbp-0x8],rdi
  4099f9:	mov    QWORD PTR [rbp-0x10],rsi
  4099fd:	mov    rax,QWORD PTR [rbp-0x8]
  409a01:	mov    eax,DWORD PTR [rax+0x128]
  409a07:	test   eax,eax
  409a09:	je     409a27 <flatcc_builder_get_direct_buffer@@Base+0x3a>
  409a0b:	mov    rax,QWORD PTR [rbp-0x8]
  409a0f:	lea    rdx,[rax+0x130]
  409a16:	mov    rax,QWORD PTR [rbp-0x10]
  409a1a:	mov    rsi,rax
  409a1d:	mov    rdi,rdx
  409a20:	call   404783 <main@@Base+0x19d>
  409a25:	jmp    409a3e <flatcc_builder_get_direct_buffer@@Base+0x51>
  409a27:	cmp    QWORD PTR [rbp-0x10],0x0
  409a2c:	je     409a39 <flatcc_builder_get_direct_buffer@@Base+0x4c>
  409a2e:	mov    rax,QWORD PTR [rbp-0x10]
  409a32:	mov    QWORD PTR [rax],0x0
  409a39:	mov    eax,0x0
  409a3e:	leave  
  409a3f:	ret    

0000000000409a40 <flatcc_builder_copy_buffer@@Base>:
  409a40:	push   rbp
  409a41:	mov    rbp,rsp
  409a44:	sub    rsp,0x20
  409a48:	mov    QWORD PTR [rbp-0x8],rdi
  409a4c:	mov    QWORD PTR [rbp-0x10],rsi
  409a50:	mov    QWORD PTR [rbp-0x18],rdx
  409a54:	mov    rax,QWORD PTR [rbp-0x8]
  409a58:	mov    eax,DWORD PTR [rax+0x128]
  409a5e:	test   eax,eax
  409a60:	jne    409a69 <flatcc_builder_copy_buffer@@Base+0x29>
  409a62:	mov    eax,0x0
  409a67:	jmp    409ab5 <flatcc_builder_copy_buffer@@Base+0x75>
  409a69:	mov    rax,QWORD PTR [rbp-0x8]
  409a6d:	lea    rcx,[rax+0x130]
  409a74:	mov    rdx,QWORD PTR [rbp-0x18]
  409a78:	mov    rax,QWORD PTR [rbp-0x10]
  409a7c:	mov    rsi,rax
  409a7f:	mov    rdi,rcx
  409a82:	call   40a6b2 <flatcc_emitter_copy_buffer@@Base>
  409a87:	mov    QWORD PTR [rbp-0x10],rax
  409a8b:	cmp    QWORD PTR [rbp-0x10],0x0
  409a90:	jne    409ab1 <flatcc_builder_copy_buffer@@Base+0x71>
  409a92:	lea    rcx,[rip+0x4407]        # 40dea0 <flatcc_builder_padding_base@@Base+0xce0>
  409a99:	mov    edx,0x786
  409a9e:	lea    rsi,[rip+0x391b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409aa5:	lea    rdi,[rip+0x3d50]        # 40d7fc <flatcc_builder_padding_base@@Base+0x63c>
  409aac:	call   403070 <__assert_fail@plt>
  409ab1:	mov    rax,QWORD PTR [rbp-0x10]
  409ab5:	leave  
  409ab6:	ret    

0000000000409ab7 <flatcc_builder_finalize_buffer@@Base>:
  409ab7:	push   rbp
  409ab8:	mov    rbp,rsp
  409abb:	sub    rsp,0x20
  409abf:	mov    QWORD PTR [rbp-0x18],rdi
  409ac3:	mov    QWORD PTR [rbp-0x20],rsi
  409ac7:	mov    rax,QWORD PTR [rbp-0x18]
  409acb:	mov    rdi,rax
  409ace:	call   4098c7 <flatcc_builder_get_buffer_size@@Base>
  409ad3:	mov    QWORD PTR [rbp-0x10],rax
  409ad7:	cmp    QWORD PTR [rbp-0x20],0x0
  409adc:	je     409ae9 <flatcc_builder_finalize_buffer@@Base+0x32>
  409ade:	mov    rax,QWORD PTR [rbp-0x20]
  409ae2:	mov    rdx,QWORD PTR [rbp-0x10]
  409ae6:	mov    QWORD PTR [rax],rdx
  409ae9:	mov    rax,QWORD PTR [rbp-0x10]
  409aed:	mov    rdi,rax
  409af0:	call   4030c0 <malloc@plt>
  409af5:	mov    QWORD PTR [rbp-0x8],rax
  409af9:	cmp    QWORD PTR [rbp-0x8],0x0
  409afe:	jne    409b1f <flatcc_builder_finalize_buffer@@Base+0x68>
  409b00:	lea    rcx,[rip+0x43b9]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409b07:	mov    edx,0x798
  409b0c:	lea    rsi,[rip+0x38ad]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409b13:	lea    rdi,[rip+0x3906]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409b1a:	call   403070 <__assert_fail@plt>
  409b1f:	mov    rdx,QWORD PTR [rbp-0x10]
  409b23:	mov    rcx,QWORD PTR [rbp-0x8]
  409b27:	mov    rax,QWORD PTR [rbp-0x18]
  409b2b:	mov    rsi,rcx
  409b2e:	mov    rdi,rax
  409b31:	call   409a40 <flatcc_builder_copy_buffer@@Base>
  409b36:	test   rax,rax
  409b39:	jne    409b5a <flatcc_builder_finalize_buffer@@Base+0xa3>
  409b3b:	lea    rcx,[rip+0x437e]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409b42:	mov    edx,0x79c
  409b47:	lea    rsi,[rip+0x3872]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409b4e:	lea    rdi,[rip+0x38cb]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409b55:	call   403070 <__assert_fail@plt>
  409b5a:	cmp    QWORD PTR [rbp-0x8],0x0
  409b5f:	jne    409b73 <flatcc_builder_finalize_buffer@@Base+0xbc>
  409b61:	cmp    QWORD PTR [rbp-0x20],0x0
  409b66:	je     409b73 <flatcc_builder_finalize_buffer@@Base+0xbc>
  409b68:	mov    rax,QWORD PTR [rbp-0x20]
  409b6c:	mov    QWORD PTR [rax],0x0
  409b73:	mov    rax,QWORD PTR [rbp-0x8]
  409b77:	leave  
  409b78:	ret    

0000000000409b79 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409b79:	push   rbp
  409b7a:	mov    rbp,rsp
  409b7d:	sub    rsp,0x30
  409b81:	mov    QWORD PTR [rbp-0x28],rdi
  409b85:	mov    QWORD PTR [rbp-0x30],rsi
  409b89:	mov    rax,QWORD PTR [rbp-0x28]
  409b8d:	mov    rdi,rax
  409b90:	call   4098c7 <flatcc_builder_get_buffer_size@@Base>
  409b95:	mov    QWORD PTR [rbp-0x10],rax
  409b99:	cmp    QWORD PTR [rbp-0x30],0x0
  409b9e:	je     409bab <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  409ba0:	mov    rax,QWORD PTR [rbp-0x30]
  409ba4:	mov    rdx,QWORD PTR [rbp-0x10]
  409ba8:	mov    QWORD PTR [rax],rdx
  409bab:	mov    rax,QWORD PTR [rbp-0x28]
  409baf:	mov    rdi,rax
  409bb2:	call   409815 <flatcc_builder_get_buffer_alignment@@Base>
  409bb7:	movzx  eax,ax
  409bba:	mov    QWORD PTR [rbp-0x8],rax
  409bbe:	mov    rdx,QWORD PTR [rbp-0x10]
  409bc2:	mov    rax,QWORD PTR [rbp-0x8]
  409bc6:	add    rax,rdx
  409bc9:	lea    rdx,[rax-0x1]
  409bcd:	mov    rax,QWORD PTR [rbp-0x8]
  409bd1:	neg    rax
  409bd4:	and    rax,rdx
  409bd7:	mov    QWORD PTR [rbp-0x10],rax
  409bdb:	mov    rdx,QWORD PTR [rbp-0x10]
  409bdf:	mov    rax,QWORD PTR [rbp-0x8]
  409be3:	mov    rsi,rdx
  409be6:	mov    rdi,rax
  409be9:	call   4046cf <main@@Base+0xe9>
  409bee:	mov    QWORD PTR [rbp-0x18],rax
  409bf2:	cmp    QWORD PTR [rbp-0x18],0x0
  409bf7:	je     409c2b <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  409bf9:	mov    rdx,QWORD PTR [rbp-0x10]
  409bfd:	mov    rcx,QWORD PTR [rbp-0x18]
  409c01:	mov    rax,QWORD PTR [rbp-0x28]
  409c05:	mov    rsi,rcx
  409c08:	mov    rdi,rax
  409c0b:	call   409a40 <flatcc_builder_copy_buffer@@Base>
  409c10:	test   rax,rax
  409c13:	jne    409c2c <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409c15:	mov    rax,QWORD PTR [rbp-0x18]
  409c19:	mov    rdi,rax
  409c1c:	call   403030 <free@plt>
  409c21:	mov    QWORD PTR [rbp-0x18],0x0
  409c29:	jmp    409c2c <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409c2b:	nop
  409c2c:	cmp    QWORD PTR [rbp-0x18],0x0
  409c31:	jne    409c45 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  409c33:	cmp    QWORD PTR [rbp-0x30],0x0
  409c38:	je     409c45 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  409c3a:	mov    rax,QWORD PTR [rbp-0x30]
  409c3e:	mov    QWORD PTR [rax],0x0
  409c45:	mov    rax,QWORD PTR [rbp-0x18]
  409c49:	leave  
  409c4a:	ret    

0000000000409c4b <flatcc_builder_aligned_alloc@@Base>:
  409c4b:	push   rbp
  409c4c:	mov    rbp,rsp
  409c4f:	sub    rsp,0x10
  409c53:	mov    QWORD PTR [rbp-0x8],rdi
  409c57:	mov    QWORD PTR [rbp-0x10],rsi
  409c5b:	mov    rdx,QWORD PTR [rbp-0x10]
  409c5f:	mov    rax,QWORD PTR [rbp-0x8]
  409c63:	mov    rsi,rdx
  409c66:	mov    rdi,rax
  409c69:	call   4046cf <main@@Base+0xe9>
  409c6e:	leave  
  409c6f:	ret    

0000000000409c70 <flatcc_builder_aligned_free@@Base>:
  409c70:	push   rbp
  409c71:	mov    rbp,rsp
  409c74:	sub    rsp,0x10
  409c78:	mov    QWORD PTR [rbp-0x8],rdi
  409c7c:	mov    rax,QWORD PTR [rbp-0x8]
  409c80:	mov    rdi,rax
  409c83:	call   403030 <free@plt>
  409c88:	nop
  409c89:	leave  
  409c8a:	ret    

0000000000409c8b <flatcc_builder_get_emit_context@@Base>:
  409c8b:	push   rbp
  409c8c:	mov    rbp,rsp
  409c8f:	mov    QWORD PTR [rbp-0x8],rdi
  409c93:	mov    rax,QWORD PTR [rbp-0x8]
  409c97:	mov    rax,QWORD PTR [rax+0x38]
  409c9b:	pop    rbp
  409c9c:	ret    
  409c9d:	push   rbp
  409c9e:	mov    rbp,rsp
  409ca1:	sub    rsp,0x20
  409ca5:	mov    QWORD PTR [rbp-0x18],rdi
  409ca9:	mov    QWORD PTR [rbp-0x8],0x0
  409cb1:	mov    rax,QWORD PTR [rbp-0x18]
  409cb5:	mov    rax,QWORD PTR [rax]
  409cb8:	test   rax,rax
  409cbb:	je     409d19 <flatcc_builder_get_emit_context@@Base+0x8e>
  409cbd:	mov    rax,QWORD PTR [rbp-0x18]
  409cc1:	mov    rax,QWORD PTR [rax]
  409cc4:	mov    rdx,QWORD PTR [rax+0xb88]
  409ccb:	mov    rax,QWORD PTR [rbp-0x18]
  409ccf:	mov    rax,QWORD PTR [rax+0x8]
  409cd3:	cmp    rdx,rax
  409cd6:	je     409d19 <flatcc_builder_get_emit_context@@Base+0x8e>
  409cd8:	mov    rax,QWORD PTR [rbp-0x18]
  409cdc:	mov    rax,QWORD PTR [rax]
  409cdf:	mov    rax,QWORD PTR [rax+0xb88]
  409ce6:	mov    rdx,QWORD PTR [rbp-0x18]
  409cea:	mov    rdx,QWORD PTR [rdx]
  409ced:	mov    edx,DWORD PTR [rdx+0xb90]
  409cf3:	sub    edx,0xb80
  409cf9:	mov    DWORD PTR [rax+0xb90],edx
  409cff:	mov    rax,QWORD PTR [rbp-0x18]
  409d03:	mov    rax,QWORD PTR [rax]
  409d06:	mov    rdx,QWORD PTR [rax+0xb88]
  409d0d:	mov    rax,QWORD PTR [rbp-0x18]
  409d11:	mov    QWORD PTR [rax],rdx
  409d14:	jmp    409e51 <flatcc_builder_get_emit_context@@Base+0x1c6>
  409d19:	mov    edi,0xb98
  409d1e:	call   4030c0 <malloc@plt>
  409d23:	mov    QWORD PTR [rbp-0x8],rax
  409d27:	cmp    QWORD PTR [rbp-0x8],0x0
  409d2c:	jne    409d38 <flatcc_builder_get_emit_context@@Base+0xad>
  409d2e:	mov    eax,0xffffffff
  409d33:	jmp    409e9f <flatcc_builder_get_emit_context@@Base+0x214>
  409d38:	mov    rax,QWORD PTR [rbp-0x18]
  409d3c:	mov    rax,QWORD PTR [rax+0x38]
  409d40:	lea    rdx,[rax+0xb80]
  409d47:	mov    rax,QWORD PTR [rbp-0x18]
  409d4b:	mov    QWORD PTR [rax+0x38],rdx
  409d4f:	mov    rax,QWORD PTR [rbp-0x18]
  409d53:	mov    rax,QWORD PTR [rax]
  409d56:	test   rax,rax
  409d59:	je     409db5 <flatcc_builder_get_emit_context@@Base+0x12a>
  409d5b:	mov    rax,QWORD PTR [rbp-0x18]
  409d5f:	mov    rdx,QWORD PTR [rax+0x8]
  409d63:	mov    rax,QWORD PTR [rbp-0x8]
  409d67:	mov    QWORD PTR [rax+0xb88],rdx
  409d6e:	mov    rax,QWORD PTR [rbp-0x18]
  409d72:	mov    rdx,QWORD PTR [rax]
  409d75:	mov    rax,QWORD PTR [rbp-0x8]
  409d79:	mov    QWORD PTR [rax+0xb80],rdx
  409d80:	mov    rax,QWORD PTR [rbp-0x18]
  409d84:	mov    rax,QWORD PTR [rax]
  409d87:	mov    rdx,QWORD PTR [rbp-0x8]
  409d8b:	mov    QWORD PTR [rax+0xb88],rdx
  409d92:	mov    rax,QWORD PTR [rbp-0x18]
  409d96:	mov    rax,QWORD PTR [rax+0x8]
  409d9a:	mov    rdx,QWORD PTR [rbp-0x8]
  409d9e:	mov    QWORD PTR [rax+0xb80],rdx
  409da5:	mov    rax,QWORD PTR [rbp-0x18]
  409da9:	mov    rdx,QWORD PTR [rbp-0x8]
  409dad:	mov    QWORD PTR [rax],rdx
  409db0:	jmp    409e51 <flatcc_builder_get_emit_context@@Base+0x1c6>
  409db5:	mov    rax,QWORD PTR [rbp-0x18]
  409db9:	mov    rdx,QWORD PTR [rbp-0x8]
  409dbd:	mov    QWORD PTR [rax],rdx
  409dc0:	mov    rax,QWORD PTR [rbp-0x18]
  409dc4:	mov    rdx,QWORD PTR [rbp-0x8]
  409dc8:	mov    QWORD PTR [rax+0x8],rdx
  409dcc:	mov    rax,QWORD PTR [rbp-0x8]
  409dd0:	mov    rdx,QWORD PTR [rbp-0x8]
  409dd4:	mov    QWORD PTR [rax+0xb80],rdx
  409ddb:	mov    rax,QWORD PTR [rbp-0x8]
  409ddf:	mov    rdx,QWORD PTR [rbp-0x8]
  409de3:	mov    QWORD PTR [rax+0xb88],rdx
  409dea:	mov    rax,QWORD PTR [rbp-0x18]
  409dee:	mov    rax,QWORD PTR [rax]
  409df1:	lea    rdx,[rax+0x5c0]
  409df8:	mov    rax,QWORD PTR [rbp-0x18]
  409dfc:	mov    QWORD PTR [rax+0x10],rdx
  409e00:	mov    rax,QWORD PTR [rbp-0x18]
  409e04:	mov    rdx,QWORD PTR [rax+0x10]
  409e08:	mov    rax,QWORD PTR [rbp-0x18]
  409e0c:	mov    QWORD PTR [rax+0x20],rdx
  409e10:	mov    rax,QWORD PTR [rbp-0x18]
  409e14:	mov    QWORD PTR [rax+0x18],0x5c0
  409e1c:	mov    rax,QWORD PTR [rbp-0x18]
  409e20:	mov    rax,QWORD PTR [rax+0x18]
  409e24:	mov    edx,0xb80
  409e29:	sub    rdx,rax
  409e2c:	mov    rax,QWORD PTR [rbp-0x18]
  409e30:	mov    QWORD PTR [rax+0x28],rdx
  409e34:	mov    rax,QWORD PTR [rbp-0x18]
  409e38:	mov    rax,QWORD PTR [rax+0x18]
  409e3c:	neg    eax
  409e3e:	mov    edx,eax
  409e40:	mov    rax,QWORD PTR [rbp-0x8]
  409e44:	mov    DWORD PTR [rax+0xb90],edx
  409e4a:	mov    eax,0x0
  409e4f:	jmp    409e9f <flatcc_builder_get_emit_context@@Base+0x214>
  409e51:	mov    rax,QWORD PTR [rbp-0x18]
  409e55:	mov    rax,QWORD PTR [rax]
  409e58:	lea    rdx,[rax+0xb80]
  409e5f:	mov    rax,QWORD PTR [rbp-0x18]
  409e63:	mov    QWORD PTR [rax+0x10],rdx
  409e67:	mov    rax,QWORD PTR [rbp-0x18]
  409e6b:	mov    QWORD PTR [rax+0x18],0xb80
  409e73:	mov    rax,QWORD PTR [rbp-0x18]
  409e77:	mov    rax,QWORD PTR [rax]
  409e7a:	mov    rdx,QWORD PTR [rbp-0x18]
  409e7e:	mov    rdx,QWORD PTR [rdx]
  409e81:	mov    rdx,QWORD PTR [rdx+0xb80]
  409e88:	mov    edx,DWORD PTR [rdx+0xb90]
  409e8e:	sub    edx,0xb80
  409e94:	mov    DWORD PTR [rax+0xb90],edx
  409e9a:	mov    eax,0x0
  409e9f:	leave  
  409ea0:	ret    
  409ea1:	push   rbp
  409ea2:	mov    rbp,rsp
  409ea5:	sub    rsp,0x20
  409ea9:	mov    QWORD PTR [rbp-0x18],rdi
  409ead:	mov    QWORD PTR [rbp-0x8],0x0
  409eb5:	mov    rax,QWORD PTR [rbp-0x18]
  409eb9:	mov    rax,QWORD PTR [rax+0x8]
  409ebd:	test   rax,rax
  409ec0:	je     409ef9 <flatcc_builder_get_emit_context@@Base+0x26e>
  409ec2:	mov    rax,QWORD PTR [rbp-0x18]
  409ec6:	mov    rax,QWORD PTR [rax+0x8]
  409eca:	mov    rdx,QWORD PTR [rax+0xb80]
  409ed1:	mov    rax,QWORD PTR [rbp-0x18]
  409ed5:	mov    rax,QWORD PTR [rax]
  409ed8:	cmp    rdx,rax
  409edb:	je     409ef9 <flatcc_builder_get_emit_context@@Base+0x26e>
  409edd:	mov    rax,QWORD PTR [rbp-0x18]
  409ee1:	mov    rax,QWORD PTR [rax+0x8]
  409ee5:	mov    rdx,QWORD PTR [rax+0xb80]
  409eec:	mov    rax,QWORD PTR [rbp-0x18]
  409ef0:	mov    QWORD PTR [rax+0x8],rdx
  409ef4:	jmp    40a033 <flatcc_builder_get_emit_context@@Base+0x3a8>
  409ef9:	mov    edi,0xb98
  409efe:	call   4030c0 <malloc@plt>
  409f03:	mov    QWORD PTR [rbp-0x8],rax
  409f07:	cmp    QWORD PTR [rbp-0x8],0x0
  409f0c:	jne    409f18 <flatcc_builder_get_emit_context@@Base+0x28d>
  409f0e:	mov    eax,0xffffffff
  409f13:	jmp    40a080 <flatcc_builder_get_emit_context@@Base+0x3f5>
  409f18:	mov    rax,QWORD PTR [rbp-0x18]
  409f1c:	mov    rax,QWORD PTR [rax+0x38]
  409f20:	lea    rdx,[rax+0xb80]
  409f27:	mov    rax,QWORD PTR [rbp-0x18]
  409f2b:	mov    QWORD PTR [rax+0x38],rdx
  409f2f:	mov    rax,QWORD PTR [rbp-0x18]
  409f33:	mov    rax,QWORD PTR [rax+0x8]
  409f37:	test   rax,rax
  409f3a:	je     409f97 <flatcc_builder_get_emit_context@@Base+0x30c>
  409f3c:	mov    rax,QWORD PTR [rbp-0x18]
  409f40:	mov    rdx,QWORD PTR [rax+0x8]
  409f44:	mov    rax,QWORD PTR [rbp-0x8]
  409f48:	mov    QWORD PTR [rax+0xb88],rdx
  409f4f:	mov    rax,QWORD PTR [rbp-0x18]
  409f53:	mov    rdx,QWORD PTR [rax]
  409f56:	mov    rax,QWORD PTR [rbp-0x8]
  409f5a:	mov    QWORD PTR [rax+0xb80],rdx
  409f61:	mov    rax,QWORD PTR [rbp-0x18]
  409f65:	mov    rax,QWORD PTR [rax]
  409f68:	mov    rdx,QWORD PTR [rbp-0x8]
  409f6c:	mov    QWORD PTR [rax+0xb88],rdx
  409f73:	mov    rax,QWORD PTR [rbp-0x18]
  409f77:	mov    rax,QWORD PTR [rax+0x8]
  409f7b:	mov    rdx,QWORD PTR [rbp-0x8]
  409f7f:	mov    QWORD PTR [rax+0xb80],rdx
  409f86:	mov    rax,QWORD PTR [rbp-0x18]
  409f8a:	mov    rdx,QWORD PTR [rbp-0x8]
  409f8e:	mov    QWORD PTR [rax+0x8],rdx
  409f92:	jmp    40a033 <flatcc_builder_get_emit_context@@Base+0x3a8>
  409f97:	mov    rax,QWORD PTR [rbp-0x18]
  409f9b:	mov    rdx,QWORD PTR [rbp-0x8]
  409f9f:	mov    QWORD PTR [rax],rdx
  409fa2:	mov    rax,QWORD PTR [rbp-0x18]
  409fa6:	mov    rdx,QWORD PTR [rbp-0x8]
  409faa:	mov    QWORD PTR [rax+0x8],rdx
  409fae:	mov    rax,QWORD PTR [rbp-0x8]
  409fb2:	mov    rdx,QWORD PTR [rbp-0x8]
  409fb6:	mov    QWORD PTR [rax+0xb80],rdx
  409fbd:	mov    rax,QWORD PTR [rbp-0x8]
  409fc1:	mov    rdx,QWORD PTR [rbp-0x8]
  409fc5:	mov    QWORD PTR [rax+0xb88],rdx
  409fcc:	mov    rax,QWORD PTR [rbp-0x18]
  409fd0:	mov    rax,QWORD PTR [rax]
  409fd3:	lea    rdx,[rax+0x5c0]
  409fda:	mov    rax,QWORD PTR [rbp-0x18]
  409fde:	mov    QWORD PTR [rax+0x10],rdx
  409fe2:	mov    rax,QWORD PTR [rbp-0x18]
  409fe6:	mov    rdx,QWORD PTR [rax+0x10]
  409fea:	mov    rax,QWORD PTR [rbp-0x18]
  409fee:	mov    QWORD PTR [rax+0x20],rdx
  409ff2:	mov    rax,QWORD PTR [rbp-0x18]
  409ff6:	mov    QWORD PTR [rax+0x18],0x5c0
  409ffe:	mov    rax,QWORD PTR [rbp-0x18]
  40a002:	mov    rax,QWORD PTR [rax+0x18]
  40a006:	mov    edx,0xb80
  40a00b:	sub    rdx,rax
  40a00e:	mov    rax,QWORD PTR [rbp-0x18]
  40a012:	mov    QWORD PTR [rax+0x28],rdx
  40a016:	mov    rax,QWORD PTR [rbp-0x18]
  40a01a:	mov    rax,QWORD PTR [rax+0x18]
  40a01e:	neg    eax
  40a020:	mov    edx,eax
  40a022:	mov    rax,QWORD PTR [rbp-0x8]
  40a026:	mov    DWORD PTR [rax+0xb90],edx
  40a02c:	mov    eax,0x0
  40a031:	jmp    40a080 <flatcc_builder_get_emit_context@@Base+0x3f5>
  40a033:	mov    rax,QWORD PTR [rbp-0x18]
  40a037:	mov    rax,QWORD PTR [rax+0x8]
  40a03b:	mov    rdx,rax
  40a03e:	mov    rax,QWORD PTR [rbp-0x18]
  40a042:	mov    QWORD PTR [rax+0x20],rdx
  40a046:	mov    rax,QWORD PTR [rbp-0x18]
  40a04a:	mov    QWORD PTR [rax+0x28],0xb80
  40a052:	mov    rax,QWORD PTR [rbp-0x18]
  40a056:	mov    rax,QWORD PTR [rax+0x8]
  40a05a:	mov    rdx,QWORD PTR [rbp-0x18]
  40a05e:	mov    rdx,QWORD PTR [rdx+0x8]
  40a062:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a069:	mov    edx,DWORD PTR [rdx+0xb90]
  40a06f:	add    edx,0xb80
  40a075:	mov    DWORD PTR [rax+0xb90],edx
  40a07b:	mov    eax,0x0
  40a080:	leave  
  40a081:	ret    
  40a082:	push   rbp
  40a083:	mov    rbp,rsp
  40a086:	sub    rsp,0x30
  40a08a:	mov    QWORD PTR [rbp-0x18],rdi
  40a08e:	mov    QWORD PTR [rbp-0x20],rsi
  40a092:	mov    QWORD PTR [rbp-0x28],rdx
  40a096:	mov    rax,QWORD PTR [rbp-0x28]
  40a09a:	add    QWORD PTR [rbp-0x20],rax
  40a09e:	jmp    40a142 <flatcc_builder_get_emit_context@@Base+0x4b7>
  40a0a3:	mov    rax,QWORD PTR [rbp-0x28]
  40a0a7:	mov    QWORD PTR [rbp-0x8],rax
  40a0ab:	mov    rax,QWORD PTR [rbp-0x18]
  40a0af:	mov    rax,QWORD PTR [rax+0x18]
  40a0b3:	cmp    rax,QWORD PTR [rbp-0x8]
  40a0b7:	jae    40a0e3 <flatcc_builder_get_emit_context@@Base+0x458>
  40a0b9:	mov    rax,QWORD PTR [rbp-0x18]
  40a0bd:	mov    rax,QWORD PTR [rax+0x18]
  40a0c1:	mov    QWORD PTR [rbp-0x8],rax
  40a0c5:	cmp    QWORD PTR [rbp-0x8],0x0
  40a0ca:	jne    40a0e3 <flatcc_builder_get_emit_context@@Base+0x458>
  40a0cc:	mov    rax,QWORD PTR [rbp-0x18]
  40a0d0:	mov    rdi,rax
  40a0d3:	call   409c9d <flatcc_builder_get_emit_context@@Base+0x12>
  40a0d8:	test   eax,eax
  40a0da:	je     40a142 <flatcc_builder_get_emit_context@@Base+0x4b7>
  40a0dc:	mov    eax,0xffffffff
  40a0e1:	jmp    40a152 <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a0e3:	mov    rax,QWORD PTR [rbp-0x18]
  40a0e7:	mov    rax,QWORD PTR [rax+0x10]
  40a0eb:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0ef:	neg    rdx
  40a0f2:	add    rdx,rax
  40a0f5:	mov    rax,QWORD PTR [rbp-0x18]
  40a0f9:	mov    QWORD PTR [rax+0x10],rdx
  40a0fd:	mov    rax,QWORD PTR [rbp-0x18]
  40a101:	mov    rax,QWORD PTR [rax+0x18]
  40a105:	sub    rax,QWORD PTR [rbp-0x8]
  40a109:	mov    rdx,rax
  40a10c:	mov    rax,QWORD PTR [rbp-0x18]
  40a110:	mov    QWORD PTR [rax+0x18],rdx
  40a114:	mov    rax,QWORD PTR [rbp-0x8]
  40a118:	neg    rax
  40a11b:	add    QWORD PTR [rbp-0x20],rax
  40a11f:	mov    rax,QWORD PTR [rbp-0x8]
  40a123:	sub    QWORD PTR [rbp-0x28],rax
  40a127:	mov    rax,QWORD PTR [rbp-0x18]
  40a12b:	mov    rax,QWORD PTR [rax+0x10]
  40a12f:	mov    rdx,QWORD PTR [rbp-0x8]
  40a133:	mov    rcx,QWORD PTR [rbp-0x20]
  40a137:	mov    rsi,rcx
  40a13a:	mov    rdi,rax
  40a13d:	call   4030b0 <memcpy@plt>
  40a142:	cmp    QWORD PTR [rbp-0x28],0x0
  40a147:	jne    40a0a3 <flatcc_builder_get_emit_context@@Base+0x418>
  40a14d:	mov    eax,0x0
  40a152:	leave  
  40a153:	ret    
  40a154:	push   rbp
  40a155:	mov    rbp,rsp
  40a158:	sub    rsp,0x30
  40a15c:	mov    QWORD PTR [rbp-0x18],rdi
  40a160:	mov    QWORD PTR [rbp-0x20],rsi
  40a164:	mov    QWORD PTR [rbp-0x28],rdx
  40a168:	jmp    40a206 <flatcc_builder_get_emit_context@@Base+0x57b>
  40a16d:	mov    rax,QWORD PTR [rbp-0x28]
  40a171:	mov    QWORD PTR [rbp-0x8],rax
  40a175:	mov    rax,QWORD PTR [rbp-0x18]
  40a179:	mov    rax,QWORD PTR [rax+0x28]
  40a17d:	cmp    rax,QWORD PTR [rbp-0x8]
  40a181:	jae    40a1ad <flatcc_builder_get_emit_context@@Base+0x522>
  40a183:	mov    rax,QWORD PTR [rbp-0x18]
  40a187:	mov    rax,QWORD PTR [rax+0x28]
  40a18b:	mov    QWORD PTR [rbp-0x8],rax
  40a18f:	cmp    QWORD PTR [rbp-0x8],0x0
  40a194:	jne    40a1ad <flatcc_builder_get_emit_context@@Base+0x522>
  40a196:	mov    rax,QWORD PTR [rbp-0x18]
  40a19a:	mov    rdi,rax
  40a19d:	call   409ea1 <flatcc_builder_get_emit_context@@Base+0x216>
  40a1a2:	test   eax,eax
  40a1a4:	je     40a206 <flatcc_builder_get_emit_context@@Base+0x57b>
  40a1a6:	mov    eax,0xffffffff
  40a1ab:	jmp    40a216 <flatcc_builder_get_emit_context@@Base+0x58b>
  40a1ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a1b1:	mov    rax,QWORD PTR [rax+0x20]
  40a1b5:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1b9:	mov    rcx,QWORD PTR [rbp-0x20]
  40a1bd:	mov    rsi,rcx
  40a1c0:	mov    rdi,rax
  40a1c3:	call   4030b0 <memcpy@plt>
  40a1c8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1cc:	sub    QWORD PTR [rbp-0x28],rax
  40a1d0:	mov    rax,QWORD PTR [rbp-0x8]
  40a1d4:	add    QWORD PTR [rbp-0x20],rax
  40a1d8:	mov    rax,QWORD PTR [rbp-0x18]
  40a1dc:	mov    rdx,QWORD PTR [rax+0x20]
  40a1e0:	mov    rax,QWORD PTR [rbp-0x8]
  40a1e4:	add    rdx,rax
  40a1e7:	mov    rax,QWORD PTR [rbp-0x18]
  40a1eb:	mov    QWORD PTR [rax+0x20],rdx
  40a1ef:	mov    rax,QWORD PTR [rbp-0x18]
  40a1f3:	mov    rax,QWORD PTR [rax+0x28]
  40a1f7:	sub    rax,QWORD PTR [rbp-0x8]
  40a1fb:	mov    rdx,rax
  40a1fe:	mov    rax,QWORD PTR [rbp-0x18]
  40a202:	mov    QWORD PTR [rax+0x28],rdx
  40a206:	cmp    QWORD PTR [rbp-0x28],0x0
  40a20b:	jne    40a16d <flatcc_builder_get_emit_context@@Base+0x4e2>
  40a211:	mov    eax,0x0
  40a216:	leave  
  40a217:	ret    

000000000040a218 <flatcc_emitter_recycle_page@@Base>:
  40a218:	push   rbp
  40a219:	mov    rbp,rsp
  40a21c:	mov    QWORD PTR [rbp-0x8],rdi
  40a220:	mov    QWORD PTR [rbp-0x10],rsi
  40a224:	mov    rax,QWORD PTR [rbp-0x8]
  40a228:	mov    rax,QWORD PTR [rax]
  40a22b:	cmp    rax,QWORD PTR [rbp-0x10]
  40a22f:	je     40a23f <flatcc_emitter_recycle_page@@Base+0x27>
  40a231:	mov    rax,QWORD PTR [rbp-0x8]
  40a235:	mov    rax,QWORD PTR [rax+0x8]
  40a239:	cmp    rax,QWORD PTR [rbp-0x10]
  40a23d:	jne    40a249 <flatcc_emitter_recycle_page@@Base+0x31>
  40a23f:	mov    eax,0xffffffff
  40a244:	jmp    40a2df <flatcc_emitter_recycle_page@@Base+0xc7>
  40a249:	mov    rax,QWORD PTR [rbp-0x10]
  40a24d:	mov    rax,QWORD PTR [rax+0xb80]
  40a254:	mov    rdx,QWORD PTR [rbp-0x10]
  40a258:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a25f:	mov    QWORD PTR [rax+0xb88],rdx
  40a266:	mov    rax,QWORD PTR [rbp-0x10]
  40a26a:	mov    rax,QWORD PTR [rax+0xb88]
  40a271:	mov    rdx,QWORD PTR [rbp-0x10]
  40a275:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a27c:	mov    QWORD PTR [rax+0xb80],rdx
  40a283:	mov    rax,QWORD PTR [rbp-0x8]
  40a287:	mov    rax,QWORD PTR [rax]
  40a28a:	mov    rdx,QWORD PTR [rax+0xb88]
  40a291:	mov    rax,QWORD PTR [rbp-0x10]
  40a295:	mov    QWORD PTR [rax+0xb88],rdx
  40a29c:	mov    rax,QWORD PTR [rbp-0x8]
  40a2a0:	mov    rdx,QWORD PTR [rax]
  40a2a3:	mov    rax,QWORD PTR [rbp-0x10]
  40a2a7:	mov    QWORD PTR [rax+0xb80],rdx
  40a2ae:	mov    rax,QWORD PTR [rbp-0x10]
  40a2b2:	mov    rax,QWORD PTR [rax+0xb88]
  40a2b9:	mov    rdx,QWORD PTR [rbp-0x10]
  40a2bd:	mov    QWORD PTR [rax+0xb80],rdx
  40a2c4:	mov    rax,QWORD PTR [rbp-0x10]
  40a2c8:	mov    rax,QWORD PTR [rax+0xb80]
  40a2cf:	mov    rdx,QWORD PTR [rbp-0x10]
  40a2d3:	mov    QWORD PTR [rax+0xb88],rdx
  40a2da:	mov    eax,0x0
  40a2df:	pop    rbp
  40a2e0:	ret    

000000000040a2e1 <flatcc_emitter_reset@@Base>:
  40a2e1:	push   rbp
  40a2e2:	mov    rbp,rsp
  40a2e5:	sub    rsp,0x20
  40a2e9:	mov    QWORD PTR [rbp-0x18],rdi
  40a2ed:	mov    rax,QWORD PTR [rbp-0x18]
  40a2f1:	mov    rax,QWORD PTR [rax]
  40a2f4:	mov    QWORD PTR [rbp-0x8],rax
  40a2f8:	mov    rax,QWORD PTR [rbp-0x18]
  40a2fc:	mov    rax,QWORD PTR [rax]
  40a2ff:	test   rax,rax
  40a302:	je     40a46a <flatcc_emitter_reset@@Base+0x189>
  40a308:	mov    rax,QWORD PTR [rbp-0x18]
  40a30c:	mov    rdx,QWORD PTR [rax]
  40a30f:	mov    rax,QWORD PTR [rbp-0x18]
  40a313:	mov    QWORD PTR [rax+0x8],rdx
  40a317:	mov    rax,QWORD PTR [rbp-0x18]
  40a31b:	mov    rax,QWORD PTR [rax]
  40a31e:	lea    rdx,[rax+0x5c0]
  40a325:	mov    rax,QWORD PTR [rbp-0x18]
  40a329:	mov    QWORD PTR [rax+0x10],rdx
  40a32d:	mov    rax,QWORD PTR [rbp-0x18]
  40a331:	mov    rdx,QWORD PTR [rax+0x10]
  40a335:	mov    rax,QWORD PTR [rbp-0x18]
  40a339:	mov    QWORD PTR [rax+0x20],rdx
  40a33d:	mov    rax,QWORD PTR [rbp-0x18]
  40a341:	mov    QWORD PTR [rax+0x18],0x5c0
  40a349:	mov    rax,QWORD PTR [rbp-0x18]
  40a34d:	mov    QWORD PTR [rax+0x28],0x5c0
  40a355:	mov    rax,QWORD PTR [rbp-0x18]
  40a359:	mov    rax,QWORD PTR [rax]
  40a35c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a360:	mov    rdx,QWORD PTR [rdx+0x18]
  40a364:	neg    edx
  40a366:	mov    DWORD PTR [rax+0xb90],edx
  40a36c:	mov    rax,QWORD PTR [rbp-0x18]
  40a370:	mov    rax,QWORD PTR [rax+0x40]
  40a374:	test   rax,rax
  40a377:	jne    40a389 <flatcc_emitter_reset@@Base+0xa8>
  40a379:	mov    rax,QWORD PTR [rbp-0x18]
  40a37d:	mov    rdx,QWORD PTR [rax+0x30]
  40a381:	mov    rax,QWORD PTR [rbp-0x18]
  40a385:	mov    QWORD PTR [rax+0x40],rdx
  40a389:	mov    rax,QWORD PTR [rbp-0x18]
  40a38d:	mov    rdx,QWORD PTR [rax+0x40]
  40a391:	mov    rax,rdx
  40a394:	add    rax,rax
  40a397:	add    rax,rdx
  40a39a:	shr    rax,0x2
  40a39e:	mov    rdx,rax
  40a3a1:	mov    rax,QWORD PTR [rbp-0x18]
  40a3a5:	mov    rax,QWORD PTR [rax+0x30]
  40a3a9:	shr    rax,0x2
  40a3ad:	add    rdx,rax
  40a3b0:	mov    rax,QWORD PTR [rbp-0x18]
  40a3b4:	mov    QWORD PTR [rax+0x40],rdx
  40a3b8:	mov    rax,QWORD PTR [rbp-0x18]
  40a3bc:	mov    QWORD PTR [rax+0x30],0x0
  40a3c4:	jmp    40a430 <flatcc_emitter_reset@@Base+0x14f>
  40a3c6:	mov    rax,QWORD PTR [rbp-0x18]
  40a3ca:	mov    rax,QWORD PTR [rax+0x8]
  40a3ce:	mov    rax,QWORD PTR [rax+0xb80]
  40a3d5:	mov    QWORD PTR [rbp-0x8],rax
  40a3d9:	mov    rax,QWORD PTR [rbp-0x18]
  40a3dd:	mov    rax,QWORD PTR [rax+0x8]
  40a3e1:	mov    rdx,QWORD PTR [rbp-0x8]
  40a3e5:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a3ec:	mov    QWORD PTR [rax+0xb80],rdx
  40a3f3:	mov    rax,QWORD PTR [rbp-0x8]
  40a3f7:	mov    rax,QWORD PTR [rax+0xb80]
  40a3fe:	mov    rdx,QWORD PTR [rbp-0x18]
  40a402:	mov    rdx,QWORD PTR [rdx+0x8]
  40a406:	mov    QWORD PTR [rax+0xb88],rdx
  40a40d:	mov    rax,QWORD PTR [rbp-0x8]
  40a411:	mov    rdi,rax
  40a414:	call   403030 <free@plt>
  40a419:	mov    rax,QWORD PTR [rbp-0x18]
  40a41d:	mov    rax,QWORD PTR [rax+0x38]
  40a421:	lea    rdx,[rax-0xb80]
  40a428:	mov    rax,QWORD PTR [rbp-0x18]
  40a42c:	mov    QWORD PTR [rax+0x38],rdx
  40a430:	mov    rax,QWORD PTR [rbp-0x18]
  40a434:	mov    rax,QWORD PTR [rax+0x40]
  40a438:	lea    rdx,[rax+rax*1]
  40a43c:	mov    rax,QWORD PTR [rbp-0x18]
  40a440:	mov    rax,QWORD PTR [rax+0x38]
  40a444:	cmp    rdx,rax
  40a447:	jae    40a46b <flatcc_emitter_reset@@Base+0x18a>
  40a449:	mov    rax,QWORD PTR [rbp-0x18]
  40a44d:	mov    rax,QWORD PTR [rax+0x8]
  40a451:	mov    rdx,QWORD PTR [rax+0xb80]
  40a458:	mov    rax,QWORD PTR [rbp-0x18]
  40a45c:	mov    rax,QWORD PTR [rax]
  40a45f:	cmp    rdx,rax
  40a462:	jne    40a3c6 <flatcc_emitter_reset@@Base+0xe5>
  40a468:	jmp    40a46b <flatcc_emitter_reset@@Base+0x18a>
  40a46a:	nop
  40a46b:	leave  
  40a46c:	ret    

000000000040a46d <flatcc_emitter_clear@@Base>:
  40a46d:	push   rbp
  40a46e:	mov    rbp,rsp
  40a471:	sub    rsp,0x20
  40a475:	mov    QWORD PTR [rbp-0x18],rdi
  40a479:	mov    rax,QWORD PTR [rbp-0x18]
  40a47d:	mov    rax,QWORD PTR [rax]
  40a480:	mov    QWORD PTR [rbp-0x8],rax
  40a484:	cmp    QWORD PTR [rbp-0x8],0x0
  40a489:	je     40a4f9 <flatcc_emitter_clear@@Base+0x8c>
  40a48b:	mov    rax,QWORD PTR [rbp-0x8]
  40a48f:	mov    rax,QWORD PTR [rax+0xb88]
  40a496:	mov    QWORD PTR [rax+0xb80],0x0
  40a4a1:	jmp    40a4c5 <flatcc_emitter_clear@@Base+0x58>
  40a4a3:	mov    rax,QWORD PTR [rbp-0x8]
  40a4a7:	mov    rax,QWORD PTR [rax+0xb80]
  40a4ae:	mov    QWORD PTR [rbp-0x8],rax
  40a4b2:	mov    rax,QWORD PTR [rbp-0x8]
  40a4b6:	mov    rax,QWORD PTR [rax+0xb88]
  40a4bd:	mov    rdi,rax
  40a4c0:	call   403030 <free@plt>
  40a4c5:	mov    rax,QWORD PTR [rbp-0x8]
  40a4c9:	mov    rax,QWORD PTR [rax+0xb80]
  40a4d0:	test   rax,rax
  40a4d3:	jne    40a4a3 <flatcc_emitter_clear@@Base+0x36>
  40a4d5:	mov    rax,QWORD PTR [rbp-0x8]
  40a4d9:	mov    rdi,rax
  40a4dc:	call   403030 <free@plt>
  40a4e1:	mov    rax,QWORD PTR [rbp-0x18]
  40a4e5:	mov    edx,0x48
  40a4ea:	mov    esi,0x0
  40a4ef:	mov    rdi,rax
  40a4f2:	call   403080 <memset@plt>
  40a4f7:	jmp    40a4fa <flatcc_emitter_clear@@Base+0x8d>
  40a4f9:	nop
  40a4fa:	leave  
  40a4fb:	ret    

000000000040a4fc <flatcc_emitter@@Base>:
  40a4fc:	push   rbp
  40a4fd:	mov    rbp,rsp
  40a500:	sub    rsp,0x30
  40a504:	mov    QWORD PTR [rbp-0x18],rdi
  40a508:	mov    QWORD PTR [rbp-0x20],rsi
  40a50c:	mov    DWORD PTR [rbp-0x24],edx
  40a50f:	mov    DWORD PTR [rbp-0x28],ecx
  40a512:	mov    QWORD PTR [rbp-0x30],r8
  40a516:	mov    rax,QWORD PTR [rbp-0x18]
  40a51a:	mov    QWORD PTR [rbp-0x8],rax
  40a51e:	mov    rax,QWORD PTR [rbp-0x8]
  40a522:	mov    rdx,QWORD PTR [rax+0x30]
  40a526:	mov    rax,QWORD PTR [rbp-0x30]
  40a52a:	add    rdx,rax
  40a52d:	mov    rax,QWORD PTR [rbp-0x8]
  40a531:	mov    QWORD PTR [rax+0x30],rdx
  40a535:	cmp    DWORD PTR [rbp-0x28],0x0
  40a539:	jns    40a5e1 <flatcc_emitter@@Base+0xe5>
  40a53f:	mov    rax,QWORD PTR [rbp-0x8]
  40a543:	mov    rax,QWORD PTR [rax+0x18]
  40a547:	cmp    rax,QWORD PTR [rbp-0x30]
  40a54b:	jb     40a58f <flatcc_emitter@@Base+0x93>
  40a54d:	mov    rax,QWORD PTR [rbp-0x8]
  40a551:	mov    rax,QWORD PTR [rax+0x10]
  40a555:	mov    rdx,QWORD PTR [rbp-0x30]
  40a559:	neg    rdx
  40a55c:	add    rdx,rax
  40a55f:	mov    rax,QWORD PTR [rbp-0x8]
  40a563:	mov    QWORD PTR [rax+0x10],rdx
  40a567:	mov    rax,QWORD PTR [rbp-0x8]
  40a56b:	mov    rax,QWORD PTR [rax+0x18]
  40a56f:	sub    rax,QWORD PTR [rbp-0x30]
  40a573:	mov    rdx,rax
  40a576:	mov    rax,QWORD PTR [rbp-0x8]
  40a57a:	mov    QWORD PTR [rax+0x18],rdx
  40a57e:	mov    rax,QWORD PTR [rbp-0x8]
  40a582:	mov    rax,QWORD PTR [rax+0x10]
  40a586:	mov    QWORD PTR [rbp-0x10],rax
  40a58a:	jmp    40a66d <flatcc_emitter@@Base+0x171>
  40a58f:	mov    eax,DWORD PTR [rbp-0x24]
  40a592:	cdqe   
  40a594:	shl    rax,0x4
  40a598:	add    QWORD PTR [rbp-0x20],rax
  40a59c:	jmp    40a5cf <flatcc_emitter@@Base+0xd3>
  40a59e:	sub    QWORD PTR [rbp-0x20],0x10
  40a5a3:	mov    rax,QWORD PTR [rbp-0x20]
  40a5a7:	mov    rdx,QWORD PTR [rax+0x8]
  40a5ab:	mov    rax,QWORD PTR [rbp-0x20]
  40a5af:	mov    rcx,QWORD PTR [rax]
  40a5b2:	mov    rax,QWORD PTR [rbp-0x8]
  40a5b6:	mov    rsi,rcx
  40a5b9:	mov    rdi,rax
  40a5bc:	call   40a082 <flatcc_builder_get_emit_context@@Base+0x3f7>
  40a5c1:	test   eax,eax
  40a5c3:	je     40a5cf <flatcc_emitter@@Base+0xd3>
  40a5c5:	mov    eax,0xffffffff
  40a5ca:	jmp    40a6b0 <flatcc_emitter@@Base+0x1b4>
  40a5cf:	mov    eax,DWORD PTR [rbp-0x24]
  40a5d2:	lea    edx,[rax-0x1]
  40a5d5:	mov    DWORD PTR [rbp-0x24],edx
  40a5d8:	test   eax,eax
  40a5da:	jne    40a59e <flatcc_emitter@@Base+0xa2>
  40a5dc:	jmp    40a666 <flatcc_emitter@@Base+0x16a>
  40a5e1:	mov    rax,QWORD PTR [rbp-0x8]
  40a5e5:	mov    rax,QWORD PTR [rax+0x28]
  40a5e9:	cmp    rax,QWORD PTR [rbp-0x30]
  40a5ed:	jb     40a659 <flatcc_emitter@@Base+0x15d>
  40a5ef:	mov    rax,QWORD PTR [rbp-0x8]
  40a5f3:	mov    rax,QWORD PTR [rax+0x20]
  40a5f7:	mov    QWORD PTR [rbp-0x10],rax
  40a5fb:	mov    rax,QWORD PTR [rbp-0x8]
  40a5ff:	mov    rdx,QWORD PTR [rax+0x20]
  40a603:	mov    rax,QWORD PTR [rbp-0x30]
  40a607:	add    rdx,rax
  40a60a:	mov    rax,QWORD PTR [rbp-0x8]
  40a60e:	mov    QWORD PTR [rax+0x20],rdx
  40a612:	mov    rax,QWORD PTR [rbp-0x8]
  40a616:	mov    rax,QWORD PTR [rax+0x28]
  40a61a:	sub    rax,QWORD PTR [rbp-0x30]
  40a61e:	mov    rdx,rax
  40a621:	mov    rax,QWORD PTR [rbp-0x8]
  40a625:	mov    QWORD PTR [rax+0x28],rdx
  40a629:	jmp    40a66d <flatcc_emitter@@Base+0x171>
  40a62b:	mov    rax,QWORD PTR [rbp-0x20]
  40a62f:	mov    rdx,QWORD PTR [rax+0x8]
  40a633:	mov    rax,QWORD PTR [rbp-0x20]
  40a637:	mov    rcx,QWORD PTR [rax]
  40a63a:	mov    rax,QWORD PTR [rbp-0x8]
  40a63e:	mov    rsi,rcx
  40a641:	mov    rdi,rax
  40a644:	call   40a154 <flatcc_builder_get_emit_context@@Base+0x4c9>
  40a649:	test   eax,eax
  40a64b:	je     40a654 <flatcc_emitter@@Base+0x158>
  40a64d:	mov    eax,0xffffffff
  40a652:	jmp    40a6b0 <flatcc_emitter@@Base+0x1b4>
  40a654:	add    QWORD PTR [rbp-0x20],0x10
  40a659:	mov    eax,DWORD PTR [rbp-0x24]
  40a65c:	lea    edx,[rax-0x1]
  40a65f:	mov    DWORD PTR [rbp-0x24],edx
  40a662:	test   eax,eax
  40a664:	jne    40a62b <flatcc_emitter@@Base+0x12f>
  40a666:	mov    eax,0x0
  40a66b:	jmp    40a6b0 <flatcc_emitter@@Base+0x1b4>
  40a66d:	jmp    40a69e <flatcc_emitter@@Base+0x1a2>
  40a66f:	mov    rax,QWORD PTR [rbp-0x20]
  40a673:	mov    rdx,QWORD PTR [rax+0x8]
  40a677:	mov    rax,QWORD PTR [rbp-0x20]
  40a67b:	mov    rcx,QWORD PTR [rax]
  40a67e:	mov    rax,QWORD PTR [rbp-0x10]
  40a682:	mov    rsi,rcx
  40a685:	mov    rdi,rax
  40a688:	call   4030b0 <memcpy@plt>
  40a68d:	mov    rax,QWORD PTR [rbp-0x20]
  40a691:	mov    rax,QWORD PTR [rax+0x8]
  40a695:	add    QWORD PTR [rbp-0x10],rax
  40a699:	add    QWORD PTR [rbp-0x20],0x10
  40a69e:	mov    eax,DWORD PTR [rbp-0x24]
  40a6a1:	lea    edx,[rax-0x1]
  40a6a4:	mov    DWORD PTR [rbp-0x24],edx
  40a6a7:	test   eax,eax
  40a6a9:	jne    40a66f <flatcc_emitter@@Base+0x173>
  40a6ab:	mov    eax,0x0
  40a6b0:	leave  
  40a6b1:	ret    

000000000040a6b2 <flatcc_emitter_copy_buffer@@Base>:
  40a6b2:	push   rbp
  40a6b3:	mov    rbp,rsp
  40a6b6:	sub    rsp,0x30
  40a6ba:	mov    QWORD PTR [rbp-0x18],rdi
  40a6be:	mov    QWORD PTR [rbp-0x20],rsi
  40a6c2:	mov    QWORD PTR [rbp-0x28],rdx
  40a6c6:	mov    rax,QWORD PTR [rbp-0x18]
  40a6ca:	mov    rax,QWORD PTR [rax+0x30]
  40a6ce:	cmp    rax,QWORD PTR [rbp-0x28]
  40a6d2:	jbe    40a6de <flatcc_emitter_copy_buffer@@Base+0x2c>
  40a6d4:	mov    eax,0x0
  40a6d9:	jmp    40a7e2 <flatcc_emitter_copy_buffer@@Base+0x130>
  40a6de:	mov    rax,QWORD PTR [rbp-0x18]
  40a6e2:	mov    rax,QWORD PTR [rax]
  40a6e5:	test   rax,rax
  40a6e8:	jne    40a6f4 <flatcc_emitter_copy_buffer@@Base+0x42>
  40a6ea:	mov    eax,0x0
  40a6ef:	jmp    40a7e2 <flatcc_emitter_copy_buffer@@Base+0x130>
  40a6f4:	mov    rax,QWORD PTR [rbp-0x18]
  40a6f8:	mov    rdx,QWORD PTR [rax]
  40a6fb:	mov    rax,QWORD PTR [rbp-0x18]
  40a6ff:	mov    rax,QWORD PTR [rax+0x8]
  40a703:	cmp    rdx,rax
  40a706:	jne    40a730 <flatcc_emitter_copy_buffer@@Base+0x7e>
  40a708:	mov    rax,QWORD PTR [rbp-0x18]
  40a70c:	mov    rdx,QWORD PTR [rax+0x30]
  40a710:	mov    rax,QWORD PTR [rbp-0x18]
  40a714:	mov    rcx,QWORD PTR [rax+0x10]
  40a718:	mov    rax,QWORD PTR [rbp-0x20]
  40a71c:	mov    rsi,rcx
  40a71f:	mov    rdi,rax
  40a722:	call   4030b0 <memcpy@plt>
  40a727:	mov    rax,QWORD PTR [rbp-0x20]
  40a72b:	jmp    40a7e2 <flatcc_emitter_copy_buffer@@Base+0x130>
  40a730:	mov    rax,QWORD PTR [rbp-0x18]
  40a734:	mov    rax,QWORD PTR [rax+0x18]
  40a738:	mov    edx,0xb80
  40a73d:	sub    rdx,rax
  40a740:	mov    rax,rdx
  40a743:	mov    QWORD PTR [rbp-0x8],rax
  40a747:	mov    rax,QWORD PTR [rbp-0x18]
  40a74b:	mov    rcx,QWORD PTR [rax+0x10]
  40a74f:	mov    rdx,QWORD PTR [rbp-0x8]
  40a753:	mov    rax,QWORD PTR [rbp-0x20]
  40a757:	mov    rsi,rcx
  40a75a:	mov    rdi,rax
  40a75d:	call   4030b0 <memcpy@plt>
  40a762:	mov    rax,QWORD PTR [rbp-0x8]
  40a766:	add    QWORD PTR [rbp-0x20],rax
  40a76a:	mov    rax,QWORD PTR [rbp-0x18]
  40a76e:	mov    rax,QWORD PTR [rax]
  40a771:	mov    rax,QWORD PTR [rax+0xb80]
  40a778:	mov    QWORD PTR [rbp-0x10],rax
  40a77c:	jmp    40a7ad <flatcc_emitter_copy_buffer@@Base+0xfb>
  40a77e:	mov    rcx,QWORD PTR [rbp-0x10]
  40a782:	mov    rax,QWORD PTR [rbp-0x20]
  40a786:	mov    edx,0xb80
  40a78b:	mov    rsi,rcx
  40a78e:	mov    rdi,rax
  40a791:	call   4030b0 <memcpy@plt>
  40a796:	add    QWORD PTR [rbp-0x20],0xb80
  40a79e:	mov    rax,QWORD PTR [rbp-0x10]
  40a7a2:	mov    rax,QWORD PTR [rax+0xb80]
  40a7a9:	mov    QWORD PTR [rbp-0x10],rax
  40a7ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a7b1:	mov    rax,QWORD PTR [rax+0x8]
  40a7b5:	cmp    rax,QWORD PTR [rbp-0x10]
  40a7b9:	jne    40a77e <flatcc_emitter_copy_buffer@@Base+0xcc>
  40a7bb:	mov    rax,QWORD PTR [rbp-0x18]
  40a7bf:	mov    rax,QWORD PTR [rax+0x28]
  40a7c3:	mov    edx,0xb80
  40a7c8:	sub    rdx,rax
  40a7cb:	mov    rcx,QWORD PTR [rbp-0x10]
  40a7cf:	mov    rax,QWORD PTR [rbp-0x20]
  40a7d3:	mov    rsi,rcx
  40a7d6:	mov    rdi,rax
  40a7d9:	call   4030b0 <memcpy@plt>
  40a7de:	mov    rax,QWORD PTR [rbp-0x20]
  40a7e2:	leave  
  40a7e3:	ret    
  40a7e4:	push   rbp
  40a7e5:	mov    rbp,rsp
  40a7e8:	mov    DWORD PTR [rbp-0x4],edi
  40a7eb:	mov    eax,DWORD PTR [rbp-0x4]
  40a7ee:	pop    rbp
  40a7ef:	ret    
  40a7f0:	push   rbp
  40a7f1:	mov    rbp,rsp
  40a7f4:	sub    rsp,0x8
  40a7f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7fc:	mov    rax,QWORD PTR [rbp-0x8]
  40a800:	mov    eax,DWORD PTR [rax]
  40a802:	mov    edi,eax
  40a804:	call   40a7e4 <flatcc_emitter_copy_buffer@@Base+0x132>
  40a809:	leave  
  40a80a:	ret    
  40a80b:	push   rbp
  40a80c:	mov    rbp,rsp
  40a80f:	mov    eax,edi
  40a811:	mov    WORD PTR [rbp-0x4],ax
  40a815:	movzx  eax,WORD PTR [rbp-0x4]
  40a819:	pop    rbp
  40a81a:	ret    
  40a81b:	push   rbp
  40a81c:	mov    rbp,rsp
  40a81f:	sub    rsp,0x8
  40a823:	mov    QWORD PTR [rbp-0x8],rdi
  40a827:	mov    rax,QWORD PTR [rbp-0x8]
  40a82b:	movzx  eax,WORD PTR [rax]
  40a82e:	movzx  eax,ax
  40a831:	mov    edi,eax
  40a833:	call   40a80b <flatcc_emitter_copy_buffer@@Base+0x159>
  40a838:	leave  
  40a839:	ret    
  40a83a:	push   rbp
  40a83b:	mov    rbp,rsp
  40a83e:	mov    DWORD PTR [rbp-0x4],edi
  40a841:	mov    eax,DWORD PTR [rbp-0x4]
  40a844:	pop    rbp
  40a845:	ret    
  40a846:	push   rbp
  40a847:	mov    rbp,rsp
  40a84a:	mov    DWORD PTR [rbp-0x4],edi
  40a84d:	mov    eax,DWORD PTR [rbp-0x4]
  40a850:	pop    rbp
  40a851:	ret    
  40a852:	push   rbp
  40a853:	mov    rbp,rsp
  40a856:	sub    rsp,0x8
  40a85a:	mov    QWORD PTR [rbp-0x8],rdi
  40a85e:	mov    rax,QWORD PTR [rbp-0x8]
  40a862:	mov    eax,DWORD PTR [rax]
  40a864:	mov    edi,eax
  40a866:	call   40a83a <flatcc_emitter_copy_buffer@@Base+0x188>
  40a86b:	leave  
  40a86c:	ret    

000000000040a86d <flatcc_verify_error_string@@Base>:
  40a86d:	push   rbp
  40a86e:	mov    rbp,rsp
  40a871:	mov    DWORD PTR [rbp-0x4],edi
  40a874:	cmp    DWORD PTR [rbp-0x4],0x24
  40a878:	ja     40aa34 <flatcc_verify_error_string@@Base+0x1c7>
  40a87e:	mov    eax,DWORD PTR [rbp-0x4]
  40a881:	lea    rdx,[rax*4+0x0]
  40a889:	lea    rax,[rip+0x3b00]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40a890:	mov    eax,DWORD PTR [rdx+rax*1]
  40a893:	movsxd rdx,eax
  40a896:	lea    rax,[rip+0x3af3]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40a89d:	add    rax,rdx
  40a8a0:	jmp    rax
  40a8a2:	lea    rax,[rip+0x3641]        # 40deea <flatcc_builder_padding_base@@Base+0xd2a>
  40a8a9:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8ae:	lea    rax,[rip+0x3638]        # 40deed <flatcc_builder_padding_base@@Base+0xd2d>
  40a8b5:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8ba:	lea    rax,[rip+0x3644]        # 40df05 <flatcc_builder_padding_base@@Base+0xd45>
  40a8c1:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8c6:	lea    rax,[rip+0x364c]        # 40df19 <flatcc_builder_padding_base@@Base+0xd59>
  40a8cd:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8d2:	lea    rax,[rip+0x365a]        # 40df33 <flatcc_builder_padding_base@@Base+0xd73>
  40a8d9:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8de:	lea    rax,[rip+0x366b]        # 40df50 <flatcc_builder_padding_base@@Base+0xd90>
  40a8e5:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8ea:	lea    rax,[rip+0x3687]        # 40df78 <flatcc_builder_padding_base@@Base+0xdb8>
  40a8f1:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a8f6:	lea    rax,[rip+0x369a]        # 40df97 <flatcc_builder_padding_base@@Base+0xdd7>
  40a8fd:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a902:	lea    rax,[rip+0x36a9]        # 40dfb2 <flatcc_builder_padding_base@@Base+0xdf2>
  40a909:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a90e:	lea    rax,[rip+0x36b1]        # 40dfc6 <flatcc_builder_padding_base@@Base+0xe06>
  40a915:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a91a:	lea    rax,[rip+0x36b9]        # 40dfda <flatcc_builder_padding_base@@Base+0xe1a>
  40a921:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a926:	lea    rax,[rip+0x36c2]        # 40dfef <flatcc_builder_padding_base@@Base+0xe2f>
  40a92d:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a932:	lea    rax,[rip+0x36c7]        # 40e000 <flatcc_builder_padding_base@@Base+0xe40>
  40a939:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a93e:	lea    rax,[rip+0x36d3]        # 40e018 <flatcc_builder_padding_base@@Base+0xe58>
  40a945:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a94a:	lea    rax,[rip+0x36e0]        # 40e031 <flatcc_builder_padding_base@@Base+0xe71>
  40a951:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a956:	lea    rax,[rip+0x36f3]        # 40e050 <flatcc_builder_padding_base@@Base+0xe90>
  40a95d:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a962:	lea    rax,[rip+0x370f]        # 40e078 <flatcc_builder_padding_base@@Base+0xeb8>
  40a969:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a96e:	lea    rax,[rip+0x372b]        # 40e0a0 <flatcc_builder_padding_base@@Base+0xee0>
  40a975:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a97a:	lea    rax,[rip+0x3747]        # 40e0c8 <flatcc_builder_padding_base@@Base+0xf08>
  40a981:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a986:	lea    rax,[rip+0x3753]        # 40e0e0 <flatcc_builder_padding_base@@Base+0xf20>
  40a98d:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a992:	lea    rax,[rip+0x376e]        # 40e107 <flatcc_builder_padding_base@@Base+0xf47>
  40a999:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a99e:	lea    rax,[rip+0x377b]        # 40e120 <flatcc_builder_padding_base@@Base+0xf60>
  40a9a5:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9aa:	lea    rax,[rip+0x379f]        # 40e150 <flatcc_builder_padding_base@@Base+0xf90>
  40a9b1:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9b6:	lea    rax,[rip+0x37cb]        # 40e188 <flatcc_builder_padding_base@@Base+0xfc8>
  40a9bd:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9bf:	lea    rax,[rip+0x37f2]        # 40e1b8 <flatcc_builder_padding_base@@Base+0xff8>
  40a9c6:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9c8:	lea    rax,[rip+0x3819]        # 40e1e8 <flatcc_builder_padding_base@@Base+0x1028>
  40a9cf:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9d1:	lea    rax,[rip+0x383f]        # 40e217 <flatcc_builder_padding_base@@Base+0x1057>
  40a9d8:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9da:	lea    rax,[rip+0x384a]        # 40e22b <flatcc_builder_padding_base@@Base+0x106b>
  40a9e1:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9e3:	lea    rax,[rip+0x385c]        # 40e246 <flatcc_builder_padding_base@@Base+0x1086>
  40a9ea:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9ec:	lea    rax,[rip+0x386d]        # 40e260 <flatcc_builder_padding_base@@Base+0x10a0>
  40a9f3:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9f5:	lea    rax,[rip+0x388c]        # 40e288 <flatcc_builder_padding_base@@Base+0x10c8>
  40a9fc:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40a9fe:	lea    rax,[rip+0x38a9]        # 40e2ae <flatcc_builder_padding_base@@Base+0x10ee>
  40aa05:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40aa07:	lea    rax,[rip+0x38ba]        # 40e2c8 <flatcc_builder_padding_base@@Base+0x1108>
  40aa0e:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40aa10:	lea    rax,[rip+0x38d9]        # 40e2f0 <flatcc_builder_padding_base@@Base+0x1130>
  40aa17:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40aa19:	lea    rax,[rip+0x38f8]        # 40e318 <flatcc_builder_padding_base@@Base+0x1158>
  40aa20:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40aa22:	lea    rax,[rip+0x3927]        # 40e350 <flatcc_builder_padding_base@@Base+0x1190>
  40aa29:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40aa2b:	lea    rax,[rip+0x3946]        # 40e378 <flatcc_builder_padding_base@@Base+0x11b8>
  40aa32:	jmp    40aa3b <flatcc_verify_error_string@@Base+0x1ce>
  40aa34:	lea    rax,[rip+0x394b]        # 40e386 <flatcc_builder_padding_base@@Base+0x11c6>
  40aa3b:	pop    rbp
  40aa3c:	ret    
  40aa3d:	push   rbp
  40aa3e:	mov    rbp,rsp
  40aa41:	sub    rsp,0x10
  40aa45:	mov    QWORD PTR [rbp-0x8],rdi
  40aa49:	mov    DWORD PTR [rbp-0xc],esi
  40aa4c:	mov    edx,DWORD PTR [rbp-0xc]
  40aa4f:	mov    rax,QWORD PTR [rbp-0x8]
  40aa53:	add    rax,rdx
  40aa56:	mov    rdi,rax
  40aa59:	call   40a7f0 <flatcc_emitter_copy_buffer@@Base+0x13e>
  40aa5e:	leave  
  40aa5f:	ret    
  40aa60:	push   rbp
  40aa61:	mov    rbp,rsp
  40aa64:	sub    rsp,0x20
  40aa68:	mov    QWORD PTR [rbp-0x18],rdi
  40aa6c:	mov    rax,QWORD PTR fs:0x28
  40aa75:	mov    QWORD PTR [rbp-0x8],rax
  40aa79:	xor    eax,eax
  40aa7b:	mov    DWORD PTR [rbp-0xc],0x0
  40aa82:	mov    rcx,QWORD PTR [rbp-0x18]
  40aa86:	lea    rax,[rbp-0xc]
  40aa8a:	mov    edx,0x4
  40aa8f:	mov    rsi,rcx
  40aa92:	mov    rdi,rax
  40aa95:	call   403040 <strncpy@plt>
  40aa9a:	mov    eax,DWORD PTR [rbp-0xc]
  40aa9d:	mov    edi,eax
  40aa9f:	call   40a846 <flatcc_emitter_copy_buffer@@Base+0x194>
  40aaa4:	mov    rdx,QWORD PTR [rbp-0x8]
  40aaa8:	xor    rdx,QWORD PTR fs:0x28
  40aab1:	je     40aab8 <flatcc_verify_error_string@@Base+0x24b>
  40aab3:	call   403060 <__stack_chk_fail@plt>
  40aab8:	leave  
  40aab9:	ret    
  40aaba:	push   rbp
  40aabb:	mov    rbp,rsp
  40aabe:	sub    rsp,0x10
  40aac2:	mov    QWORD PTR [rbp-0x8],rdi
  40aac6:	mov    DWORD PTR [rbp-0xc],esi
  40aac9:	mov    edx,DWORD PTR [rbp-0xc]
  40aacc:	mov    rax,QWORD PTR [rbp-0x8]
  40aad0:	add    rax,rdx
  40aad3:	mov    rdi,rax
  40aad6:	call   40a852 <flatcc_emitter_copy_buffer@@Base+0x1a0>
  40aadb:	leave  
  40aadc:	ret    
  40aadd:	push   rbp
  40aade:	mov    rbp,rsp
  40aae1:	sub    rsp,0x10
  40aae5:	mov    QWORD PTR [rbp-0x8],rdi
  40aae9:	mov    DWORD PTR [rbp-0xc],esi
  40aaec:	mov    edx,DWORD PTR [rbp-0xc]
  40aaef:	mov    rax,QWORD PTR [rbp-0x8]
  40aaf3:	add    rax,rdx
  40aaf6:	mov    rdi,rax
  40aaf9:	call   40a81b <flatcc_emitter_copy_buffer@@Base+0x169>
  40aafe:	leave  
  40aaff:	ret    
  40ab00:	push   rbp
  40ab01:	mov    rbp,rsp
  40ab04:	mov    DWORD PTR [rbp-0x14],edi
  40ab07:	mov    DWORD PTR [rbp-0x18],esi
  40ab0a:	mov    DWORD PTR [rbp-0x1c],edx
  40ab0d:	mov    edx,DWORD PTR [rbp-0x18]
  40ab10:	mov    eax,DWORD PTR [rbp-0x1c]
  40ab13:	add    eax,edx
  40ab15:	mov    DWORD PTR [rbp-0x4],eax
  40ab18:	mov    eax,DWORD PTR [rbp-0x4]
  40ab1b:	cmp    eax,DWORD PTR [rbp-0x18]
  40ab1e:	jbe    40ab41 <flatcc_verify_error_string@@Base+0x2d4>
  40ab20:	mov    eax,DWORD PTR [rbp-0x4]
  40ab23:	lea    rdx,[rax+0x4]
  40ab27:	mov    eax,DWORD PTR [rbp-0x14]
  40ab2a:	cmp    rdx,rax
  40ab2d:	ja     40ab41 <flatcc_verify_error_string@@Base+0x2d4>
  40ab2f:	mov    eax,DWORD PTR [rbp-0x4]
  40ab32:	and    eax,0x3
  40ab35:	test   rax,rax
  40ab38:	jne    40ab41 <flatcc_verify_error_string@@Base+0x2d4>
  40ab3a:	mov    eax,0x1
  40ab3f:	jmp    40ab46 <flatcc_verify_error_string@@Base+0x2d9>
  40ab41:	mov    eax,0x0
  40ab46:	pop    rbp
  40ab47:	ret    
  40ab48:	push   rbp
  40ab49:	mov    rbp,rsp
  40ab4c:	mov    DWORD PTR [rbp-0x14],edi
  40ab4f:	mov    DWORD PTR [rbp-0x18],esi
  40ab52:	mov    DWORD PTR [rbp-0x1c],edx
  40ab55:	mov    eax,ecx
  40ab57:	mov    WORD PTR [rbp-0x20],ax
  40ab5b:	mov    edx,DWORD PTR [rbp-0x18]
  40ab5e:	mov    eax,DWORD PTR [rbp-0x1c]
  40ab61:	add    eax,edx
  40ab63:	mov    DWORD PTR [rbp-0x4],eax
  40ab66:	mov    eax,0x4
  40ab6b:	cmp    WORD PTR [rbp-0x20],0x4
  40ab70:	cmovae ax,WORD PTR [rbp-0x20]
  40ab75:	mov    WORD PTR [rbp-0x20],ax
  40ab79:	mov    eax,DWORD PTR [rbp-0x4]
  40ab7c:	cmp    eax,DWORD PTR [rbp-0x18]
  40ab7f:	jbe    40abb2 <flatcc_verify_error_string@@Base+0x345>
  40ab81:	mov    eax,DWORD PTR [rbp-0x4]
  40ab84:	lea    rdx,[rax+0x4]
  40ab88:	mov    eax,DWORD PTR [rbp-0x14]
  40ab8b:	cmp    rdx,rax
  40ab8e:	ja     40abb2 <flatcc_verify_error_string@@Base+0x345>
  40ab90:	mov    eax,DWORD PTR [rbp-0x4]
  40ab93:	lea    rdx,[rax+0x4]
  40ab97:	movzx  eax,WORD PTR [rbp-0x20]
  40ab9b:	sub    eax,0x1
  40ab9e:	or     eax,0x3
  40aba1:	cdqe   
  40aba3:	and    rax,rdx
  40aba6:	test   rax,rax
  40aba9:	jne    40abb2 <flatcc_verify_error_string@@Base+0x345>
  40abab:	mov    eax,0x1
  40abb0:	jmp    40abb7 <flatcc_verify_error_string@@Base+0x34a>
  40abb2:	mov    eax,0x0
  40abb7:	pop    rbp
  40abb8:	ret    
  40abb9:	push   rbp
  40abba:	mov    rbp,rsp
  40abbd:	mov    DWORD PTR [rbp-0x14],edi
  40abc0:	mov    DWORD PTR [rbp-0x18],esi
  40abc3:	mov    DWORD PTR [rbp-0x1c],edx
  40abc6:	mov    DWORD PTR [rbp-0x20],ecx
  40abc9:	mov    eax,r8d
  40abcc:	mov    WORD PTR [rbp-0x24],ax
  40abd0:	cmp    DWORD PTR [rbp-0x1c],0x0
  40abd4:	je     40abe3 <flatcc_verify_error_string@@Base+0x376>
  40abd6:	mov    edx,DWORD PTR [rbp-0x18]
  40abd9:	mov    eax,DWORD PTR [rbp-0x1c]
  40abdc:	add    eax,edx
  40abde:	cmp    eax,DWORD PTR [rbp-0x14]
  40abe1:	jbe    40abea <flatcc_verify_error_string@@Base+0x37d>
  40abe3:	mov    eax,0x12
  40abe8:	jmp    40ac59 <flatcc_verify_error_string@@Base+0x3ec>
  40abea:	mov    eax,DWORD PTR [rbp-0x1c]
  40abed:	add    DWORD PTR [rbp-0x18],eax
  40abf0:	mov    edx,DWORD PTR [rbp-0x18]
  40abf3:	mov    eax,DWORD PTR [rbp-0x20]
  40abf6:	add    eax,edx
  40abf8:	cmp    eax,DWORD PTR [rbp-0x18]
  40abfb:	setae  al
  40abfe:	movzx  eax,al
  40ac01:	mov    DWORD PTR [rbp-0xc],eax
  40ac04:	cmp    DWORD PTR [rbp-0xc],0x0
  40ac08:	jne    40ac11 <flatcc_verify_error_string@@Base+0x3a4>
  40ac0a:	mov    eax,0xa
  40ac0f:	jmp    40ac59 <flatcc_verify_error_string@@Base+0x3ec>
  40ac11:	mov    edx,DWORD PTR [rbp-0x18]
  40ac14:	mov    eax,DWORD PTR [rbp-0x20]
  40ac17:	add    eax,edx
  40ac19:	cmp    eax,DWORD PTR [rbp-0x14]
  40ac1c:	setbe  al
  40ac1f:	movzx  eax,al
  40ac22:	mov    DWORD PTR [rbp-0x8],eax
  40ac25:	cmp    DWORD PTR [rbp-0x8],0x0
  40ac29:	jne    40ac32 <flatcc_verify_error_string@@Base+0x3c5>
  40ac2b:	mov    eax,0x9
  40ac30:	jmp    40ac59 <flatcc_verify_error_string@@Base+0x3ec>
  40ac32:	movzx  eax,WORD PTR [rbp-0x24]
  40ac36:	sub    eax,0x1
  40ac39:	and    eax,DWORD PTR [rbp-0x18]
  40ac3c:	test   eax,eax
  40ac3e:	sete   al
  40ac41:	movzx  eax,al
  40ac44:	mov    DWORD PTR [rbp-0x4],eax
  40ac47:	cmp    DWORD PTR [rbp-0x4],0x0
  40ac4b:	jne    40ac54 <flatcc_verify_error_string@@Base+0x3e7>
  40ac4d:	mov    eax,0xb
  40ac52:	jmp    40ac59 <flatcc_verify_error_string@@Base+0x3ec>
  40ac54:	mov    eax,0x0
  40ac59:	pop    rbp
  40ac5a:	ret    
  40ac5b:	push   rbp
  40ac5c:	mov    rbp,rsp
  40ac5f:	sub    rsp,0x20
  40ac63:	mov    QWORD PTR [rbp-0x18],rdi
  40ac67:	mov    eax,esi
  40ac69:	mov    WORD PTR [rbp-0x1c],ax
  40ac6d:	movzx  eax,WORD PTR [rbp-0x1c]
  40ac71:	add    eax,0x2
  40ac74:	cdqe   
  40ac76:	add    eax,eax
  40ac78:	mov    WORD PTR [rbp-0x2],ax
  40ac7c:	mov    rax,QWORD PTR [rbp-0x18]
  40ac80:	movzx  eax,WORD PTR [rax+0x1e]
  40ac84:	cmp    ax,WORD PTR [rbp-0x2]
  40ac88:	ja     40ac91 <flatcc_verify_error_string@@Base+0x424>
  40ac8a:	mov    eax,0x0
  40ac8f:	jmp    40acaa <flatcc_verify_error_string@@Base+0x43d>
  40ac91:	movzx  edx,WORD PTR [rbp-0x2]
  40ac95:	mov    rax,QWORD PTR [rbp-0x18]
  40ac99:	mov    rax,QWORD PTR [rax+0x10]
  40ac9d:	mov    esi,edx
  40ac9f:	mov    rdi,rax
  40aca2:	call   40aadd <flatcc_verify_error_string@@Base+0x270>
  40aca7:	movzx  eax,ax
  40acaa:	leave  
  40acab:	ret    
  40acac:	push   rbp
  40acad:	mov    rbp,rsp
  40acb0:	sub    rsp,0x20
  40acb4:	mov    QWORD PTR [rbp-0x18],rdi
  40acb8:	mov    eax,esi
  40acba:	mov    WORD PTR [rbp-0x1c],ax
  40acbe:	movzx  edx,WORD PTR [rbp-0x1c]
  40acc2:	mov    rax,QWORD PTR [rbp-0x18]
  40acc6:	mov    esi,edx
  40acc8:	mov    rdi,rax
  40accb:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40acd0:	mov    WORD PTR [rbp-0x2],ax
  40acd4:	cmp    WORD PTR [rbp-0x2],0x0
  40acd9:	je     40acf7 <flatcc_verify_error_string@@Base+0x48a>
  40acdb:	mov    rax,QWORD PTR [rbp-0x18]
  40acdf:	mov    rdx,QWORD PTR [rax]
  40ace2:	mov    rax,QWORD PTR [rbp-0x18]
  40ace6:	mov    eax,DWORD PTR [rax+0x18]
  40ace9:	mov    ecx,eax
  40aceb:	movzx  eax,WORD PTR [rbp-0x2]
  40acef:	add    rax,rcx
  40acf2:	add    rax,rdx
  40acf5:	jmp    40acfc <flatcc_verify_error_string@@Base+0x48f>
  40acf7:	mov    eax,0x0
  40acfc:	leave  
  40acfd:	ret    
  40acfe:	push   rbp
  40acff:	mov    rbp,rsp
  40ad02:	sub    rsp,0x38
  40ad06:	mov    QWORD PTR [rbp-0x28],rdi
  40ad0a:	mov    eax,esi
  40ad0c:	mov    DWORD PTR [rbp-0x30],edx
  40ad0f:	mov    DWORD PTR [rbp-0x34],ecx
  40ad12:	mov    edx,r8d
  40ad15:	mov    WORD PTR [rbp-0x2c],ax
  40ad19:	mov    WORD PTR [rbp-0x38],dx
  40ad1d:	mov    rax,QWORD PTR [rbp-0x28]
  40ad21:	mov    rax,QWORD PTR [rax]
  40ad24:	mov    DWORD PTR [rbp-0x1c],eax
  40ad27:	movzx  edx,WORD PTR [rbp-0x2c]
  40ad2b:	mov    rax,QWORD PTR [rbp-0x28]
  40ad2f:	mov    esi,edx
  40ad31:	mov    rdi,rax
  40ad34:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40ad39:	mov    WORD PTR [rbp-0x1e],ax
  40ad3d:	cmp    WORD PTR [rbp-0x1e],0x0
  40ad42:	jne    40ad6b <flatcc_verify_error_string@@Base+0x4fe>
  40ad44:	cmp    DWORD PTR [rbp-0x30],0x0
  40ad48:	sete   al
  40ad4b:	movzx  eax,al
  40ad4e:	mov    DWORD PTR [rbp-0x18],eax
  40ad51:	cmp    DWORD PTR [rbp-0x18],0x0
  40ad55:	jne    40ad61 <flatcc_verify_error_string@@Base+0x4f4>
  40ad57:	mov    eax,0x4
  40ad5c:	jmp    40adeb <flatcc_verify_error_string@@Base+0x57e>
  40ad61:	mov    eax,0x0
  40ad66:	jmp    40adeb <flatcc_verify_error_string@@Base+0x57e>
  40ad6b:	movzx  eax,WORD PTR [rbp-0x1e]
  40ad6f:	mov    DWORD PTR [rbp-0x14],eax
  40ad72:	mov    edx,DWORD PTR [rbp-0x14]
  40ad75:	mov    eax,DWORD PTR [rbp-0x34]
  40ad78:	add    eax,edx
  40ad7a:	mov    DWORD PTR [rbp-0x10],eax
  40ad7d:	mov    rax,QWORD PTR [rbp-0x28]
  40ad81:	movzx  eax,WORD PTR [rax+0x1c]
  40ad85:	movzx  eax,ax
  40ad88:	cmp    eax,DWORD PTR [rbp-0x10]
  40ad8b:	setae  al
  40ad8e:	movzx  eax,al
  40ad91:	mov    DWORD PTR [rbp-0xc],eax
  40ad94:	cmp    DWORD PTR [rbp-0xc],0x0
  40ad98:	jne    40ada1 <flatcc_verify_error_string@@Base+0x534>
  40ad9a:	mov    eax,0xd
  40ad9f:	jmp    40adeb <flatcc_verify_error_string@@Base+0x57e>
  40ada1:	mov    DWORD PTR [rbp-0x8],0x1
  40ada8:	cmp    DWORD PTR [rbp-0x8],0x0
  40adac:	jne    40adb5 <flatcc_verify_error_string@@Base+0x548>
  40adae:	mov    eax,0xe
  40adb3:	jmp    40adeb <flatcc_verify_error_string@@Base+0x57e>
  40adb5:	mov    rax,QWORD PTR [rbp-0x28]
  40adb9:	mov    edx,DWORD PTR [rax+0x18]
  40adbc:	mov    eax,DWORD PTR [rbp-0x1c]
  40adbf:	add    eax,edx
  40adc1:	add    DWORD PTR [rbp-0x14],eax
  40adc4:	movzx  eax,WORD PTR [rbp-0x38]
  40adc8:	sub    eax,0x1
  40adcb:	and    eax,DWORD PTR [rbp-0x14]
  40adce:	test   eax,eax
  40add0:	sete   al
  40add3:	movzx  eax,al
  40add6:	mov    DWORD PTR [rbp-0x4],eax
  40add9:	cmp    DWORD PTR [rbp-0x4],0x0
  40addd:	jne    40ade6 <flatcc_verify_error_string@@Base+0x579>
  40addf:	mov    eax,0xc
  40ade4:	jmp    40adeb <flatcc_verify_error_string@@Base+0x57e>
  40ade6:	mov    eax,0x0
  40adeb:	leave  
  40adec:	ret    
  40aded:	push   rbp
  40adee:	mov    rbp,rsp
  40adf1:	sub    rsp,0x38
  40adf5:	mov    QWORD PTR [rbp-0x28],rdi
  40adf9:	mov    eax,esi
  40adfb:	mov    DWORD PTR [rbp-0x30],edx
  40adfe:	mov    QWORD PTR [rbp-0x38],rcx
  40ae02:	mov    WORD PTR [rbp-0x2c],ax
  40ae06:	movzx  edx,WORD PTR [rbp-0x2c]
  40ae0a:	mov    rax,QWORD PTR [rbp-0x28]
  40ae0e:	mov    esi,edx
  40ae10:	mov    rdi,rax
  40ae13:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40ae18:	mov    WORD PTR [rbp-0x16],ax
  40ae1c:	cmp    WORD PTR [rbp-0x16],0x0
  40ae21:	jne    40ae44 <flatcc_verify_error_string@@Base+0x5d7>
  40ae23:	mov    rax,QWORD PTR [rbp-0x38]
  40ae27:	mov    DWORD PTR [rax],0x0
  40ae2d:	cmp    DWORD PTR [rbp-0x30],0x0
  40ae31:	je     40ae3d <flatcc_verify_error_string@@Base+0x5d0>
  40ae33:	mov    eax,0x4
  40ae38:	jmp    40aec3 <flatcc_verify_error_string@@Base+0x656>
  40ae3d:	mov    eax,0x0
  40ae42:	jmp    40aec3 <flatcc_verify_error_string@@Base+0x656>
  40ae44:	movzx  eax,WORD PTR [rbp-0x16]
  40ae48:	mov    DWORD PTR [rbp-0x14],eax
  40ae4b:	mov    eax,DWORD PTR [rbp-0x14]
  40ae4e:	add    eax,0x4
  40ae51:	mov    DWORD PTR [rbp-0x10],eax
  40ae54:	mov    rax,QWORD PTR [rbp-0x28]
  40ae58:	movzx  eax,WORD PTR [rax+0x1c]
  40ae5c:	movzx  eax,ax
  40ae5f:	cmp    eax,DWORD PTR [rbp-0x10]
  40ae62:	setae  al
  40ae65:	movzx  eax,al
  40ae68:	mov    DWORD PTR [rbp-0xc],eax
  40ae6b:	cmp    DWORD PTR [rbp-0xc],0x0
  40ae6f:	jne    40ae78 <flatcc_verify_error_string@@Base+0x60b>
  40ae71:	mov    eax,0xd
  40ae76:	jmp    40aec3 <flatcc_verify_error_string@@Base+0x656>
  40ae78:	mov    DWORD PTR [rbp-0x8],0x1
  40ae7f:	cmp    DWORD PTR [rbp-0x8],0x0
  40ae83:	jne    40ae8c <flatcc_verify_error_string@@Base+0x61f>
  40ae85:	mov    eax,0xe
  40ae8a:	jmp    40aec3 <flatcc_verify_error_string@@Base+0x656>
  40ae8c:	mov    rax,QWORD PTR [rbp-0x28]
  40ae90:	mov    eax,DWORD PTR [rax+0x18]
  40ae93:	add    DWORD PTR [rbp-0x14],eax
  40ae96:	mov    eax,DWORD PTR [rbp-0x14]
  40ae99:	and    eax,0x3
  40ae9c:	test   rax,rax
  40ae9f:	sete   al
  40aea2:	movzx  eax,al
  40aea5:	mov    DWORD PTR [rbp-0x4],eax
  40aea8:	cmp    DWORD PTR [rbp-0x4],0x0
  40aeac:	jne    40aeb5 <flatcc_verify_error_string@@Base+0x648>
  40aeae:	mov    eax,0xc
  40aeb3:	jmp    40aec3 <flatcc_verify_error_string@@Base+0x656>
  40aeb5:	mov    rax,QWORD PTR [rbp-0x38]
  40aeb9:	mov    edx,DWORD PTR [rbp-0x14]
  40aebc:	mov    DWORD PTR [rax],edx
  40aebe:	mov    eax,0x0
  40aec3:	leave  
  40aec4:	ret    
  40aec5:	push   rbp
  40aec6:	mov    rbp,rsp
  40aec9:	sub    rsp,0x28
  40aecd:	mov    QWORD PTR [rbp-0x18],rdi
  40aed1:	mov    DWORD PTR [rbp-0x1c],esi
  40aed4:	mov    DWORD PTR [rbp-0x20],edx
  40aed7:	mov    DWORD PTR [rbp-0x24],ecx
  40aeda:	mov    edx,DWORD PTR [rbp-0x24]
  40aedd:	mov    ecx,DWORD PTR [rbp-0x20]
  40aee0:	mov    eax,DWORD PTR [rbp-0x1c]
  40aee3:	mov    esi,ecx
  40aee5:	mov    edi,eax
  40aee7:	call   40ab00 <flatcc_verify_error_string@@Base+0x293>
  40aeec:	mov    DWORD PTR [rbp-0x10],eax
  40aeef:	cmp    DWORD PTR [rbp-0x10],0x0
  40aef3:	jne    40aefc <flatcc_verify_error_string@@Base+0x68f>
  40aef5:	mov    eax,0x11
  40aefa:	jmp    40af6e <flatcc_verify_error_string@@Base+0x701>
  40aefc:	mov    eax,DWORD PTR [rbp-0x24]
  40aeff:	add    DWORD PTR [rbp-0x20],eax
  40af02:	mov    edx,DWORD PTR [rbp-0x20]
  40af05:	mov    rax,QWORD PTR [rbp-0x18]
  40af09:	mov    esi,edx
  40af0b:	mov    rdi,rax
  40af0e:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40af13:	mov    DWORD PTR [rbp-0xc],eax
  40af16:	add    DWORD PTR [rbp-0x20],0x4
  40af1a:	mov    eax,DWORD PTR [rbp-0x1c]
  40af1d:	sub    eax,DWORD PTR [rbp-0x20]
  40af20:	mov    edx,DWORD PTR [rbp-0xc]
  40af23:	add    edx,0x1
  40af26:	cmp    eax,edx
  40af28:	setae  al
  40af2b:	movzx  eax,al
  40af2e:	mov    DWORD PTR [rbp-0x8],eax
  40af31:	cmp    DWORD PTR [rbp-0x8],0x0
  40af35:	jne    40af3e <flatcc_verify_error_string@@Base+0x6d1>
  40af37:	mov    eax,0x8
  40af3c:	jmp    40af6e <flatcc_verify_error_string@@Base+0x701>
  40af3e:	mov    edx,DWORD PTR [rbp-0x20]
  40af41:	mov    eax,DWORD PTR [rbp-0xc]
  40af44:	add    rdx,rax
  40af47:	mov    rax,QWORD PTR [rbp-0x18]
  40af4b:	add    rax,rdx
  40af4e:	movzx  eax,BYTE PTR [rax]
  40af51:	test   al,al
  40af53:	sete   al
  40af56:	movzx  eax,al
  40af59:	mov    DWORD PTR [rbp-0x4],eax
  40af5c:	cmp    DWORD PTR [rbp-0x4],0x0
  40af60:	jne    40af69 <flatcc_verify_error_string@@Base+0x6fc>
  40af62:	mov    eax,0x7
  40af67:	jmp    40af6e <flatcc_verify_error_string@@Base+0x701>
  40af69:	mov    eax,0x0
  40af6e:	leave  
  40af6f:	ret    
  40af70:	push   rbp
  40af71:	mov    rbp,rsp
  40af74:	sub    rsp,0x30
  40af78:	mov    QWORD PTR [rbp-0x18],rdi
  40af7c:	mov    DWORD PTR [rbp-0x1c],esi
  40af7f:	mov    DWORD PTR [rbp-0x20],edx
  40af82:	mov    DWORD PTR [rbp-0x24],ecx
  40af85:	mov    DWORD PTR [rbp-0x28],r8d
  40af89:	mov    eax,r9d
  40af8c:	mov    WORD PTR [rbp-0x2c],ax
  40af90:	movzx  ecx,WORD PTR [rbp-0x2c]
  40af94:	mov    edx,DWORD PTR [rbp-0x24]
  40af97:	mov    esi,DWORD PTR [rbp-0x20]
  40af9a:	mov    eax,DWORD PTR [rbp-0x1c]
  40af9d:	mov    edi,eax
  40af9f:	call   40ab48 <flatcc_verify_error_string@@Base+0x2db>
  40afa4:	mov    DWORD PTR [rbp-0x10],eax
  40afa7:	cmp    DWORD PTR [rbp-0x10],0x0
  40afab:	jne    40afb4 <flatcc_verify_error_string@@Base+0x747>
  40afad:	mov    eax,0x10
  40afb2:	jmp    40b01a <flatcc_verify_error_string@@Base+0x7ad>
  40afb4:	mov    eax,DWORD PTR [rbp-0x24]
  40afb7:	add    DWORD PTR [rbp-0x20],eax
  40afba:	mov    edx,DWORD PTR [rbp-0x20]
  40afbd:	mov    rax,QWORD PTR [rbp-0x18]
  40afc1:	mov    esi,edx
  40afc3:	mov    rdi,rax
  40afc6:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40afcb:	mov    DWORD PTR [rbp-0xc],eax
  40afce:	add    DWORD PTR [rbp-0x20],0x4
  40afd2:	mov    eax,DWORD PTR [rbp-0xc]
  40afd5:	cmp    eax,DWORD PTR [rbp+0x10]
  40afd8:	setbe  al
  40afdb:	movzx  eax,al
  40afde:	mov    DWORD PTR [rbp-0x8],eax
  40afe1:	cmp    DWORD PTR [rbp-0x8],0x0
  40afe5:	jne    40afee <flatcc_verify_error_string@@Base+0x781>
  40afe7:	mov    eax,0x19
  40afec:	jmp    40b01a <flatcc_verify_error_string@@Base+0x7ad>
  40afee:	mov    eax,DWORD PTR [rbp-0x1c]
  40aff1:	sub    eax,DWORD PTR [rbp-0x20]
  40aff4:	mov    edx,eax
  40aff6:	mov    eax,DWORD PTR [rbp-0xc]
  40aff9:	imul   eax,DWORD PTR [rbp-0x28]
  40affd:	cmp    edx,eax
  40afff:	setae  al
  40b002:	movzx  eax,al
  40b005:	mov    DWORD PTR [rbp-0x4],eax
  40b008:	cmp    DWORD PTR [rbp-0x4],0x0
  40b00c:	jne    40b015 <flatcc_verify_error_string@@Base+0x7a8>
  40b00e:	mov    eax,0x1a
  40b013:	jmp    40b01a <flatcc_verify_error_string@@Base+0x7ad>
  40b015:	mov    eax,0x0
  40b01a:	leave  
  40b01b:	ret    
  40b01c:	push   rbp
  40b01d:	mov    rbp,rsp
  40b020:	sub    rsp,0x28
  40b024:	mov    QWORD PTR [rbp-0x18],rdi
  40b028:	mov    DWORD PTR [rbp-0x1c],esi
  40b02b:	mov    DWORD PTR [rbp-0x20],edx
  40b02e:	mov    DWORD PTR [rbp-0x24],ecx
  40b031:	mov    ecx,DWORD PTR [rbp-0x24]
  40b034:	mov    edx,DWORD PTR [rbp-0x20]
  40b037:	mov    esi,DWORD PTR [rbp-0x1c]
  40b03a:	mov    rax,QWORD PTR [rbp-0x18]
  40b03e:	push   0x3fffffff
  40b043:	mov    r9d,0x4
  40b049:	mov    r8d,0x4
  40b04f:	mov    rdi,rax
  40b052:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b057:	add    rsp,0x8
  40b05b:	test   eax,eax
  40b05d:	je     40b08e <flatcc_verify_error_string@@Base+0x821>
  40b05f:	mov    ecx,DWORD PTR [rbp-0x24]
  40b062:	mov    edx,DWORD PTR [rbp-0x20]
  40b065:	mov    esi,DWORD PTR [rbp-0x1c]
  40b068:	mov    rax,QWORD PTR [rbp-0x18]
  40b06c:	push   0x3fffffff
  40b071:	mov    r9d,0x4
  40b077:	mov    r8d,0x4
  40b07d:	mov    rdi,rax
  40b080:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b085:	add    rsp,0x8
  40b089:	jmp    40b11a <flatcc_verify_error_string@@Base+0x8ad>
  40b08e:	mov    eax,DWORD PTR [rbp-0x24]
  40b091:	add    DWORD PTR [rbp-0x20],eax
  40b094:	mov    edx,DWORD PTR [rbp-0x20]
  40b097:	mov    rax,QWORD PTR [rbp-0x18]
  40b09b:	mov    esi,edx
  40b09d:	mov    rdi,rax
  40b0a0:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b0a5:	mov    DWORD PTR [rbp-0x4],eax
  40b0a8:	add    DWORD PTR [rbp-0x20],0x4
  40b0ac:	mov    DWORD PTR [rbp-0x8],0x0
  40b0b3:	jmp    40b10d <flatcc_verify_error_string@@Base+0x8a0>
  40b0b5:	mov    edx,DWORD PTR [rbp-0x20]
  40b0b8:	mov    rax,QWORD PTR [rbp-0x18]
  40b0bc:	mov    esi,edx
  40b0be:	mov    rdi,rax
  40b0c1:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b0c6:	mov    ecx,eax
  40b0c8:	mov    edx,DWORD PTR [rbp-0x20]
  40b0cb:	mov    esi,DWORD PTR [rbp-0x1c]
  40b0ce:	mov    rax,QWORD PTR [rbp-0x18]
  40b0d2:	mov    rdi,rax
  40b0d5:	call   40aec5 <flatcc_verify_error_string@@Base+0x658>
  40b0da:	test   eax,eax
  40b0dc:	je     40b105 <flatcc_verify_error_string@@Base+0x898>
  40b0de:	mov    edx,DWORD PTR [rbp-0x20]
  40b0e1:	mov    rax,QWORD PTR [rbp-0x18]
  40b0e5:	mov    esi,edx
  40b0e7:	mov    rdi,rax
  40b0ea:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b0ef:	mov    ecx,eax
  40b0f1:	mov    edx,DWORD PTR [rbp-0x20]
  40b0f4:	mov    esi,DWORD PTR [rbp-0x1c]
  40b0f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b0fb:	mov    rdi,rax
  40b0fe:	call   40aec5 <flatcc_verify_error_string@@Base+0x658>
  40b103:	jmp    40b11a <flatcc_verify_error_string@@Base+0x8ad>
  40b105:	add    DWORD PTR [rbp-0x8],0x1
  40b109:	add    DWORD PTR [rbp-0x20],0x4
  40b10d:	mov    eax,DWORD PTR [rbp-0x8]
  40b110:	cmp    eax,DWORD PTR [rbp-0x4]
  40b113:	jb     40b0b5 <flatcc_verify_error_string@@Base+0x848>
  40b115:	mov    eax,0x0
  40b11a:	leave  
  40b11b:	ret    
  40b11c:	push   rbp
  40b11d:	mov    rbp,rsp
  40b120:	push   rbx
  40b121:	sub    rsp,0x88
  40b128:	mov    QWORD PTR [rbp-0x78],rdi
  40b12c:	mov    DWORD PTR [rbp-0x7c],esi
  40b12f:	mov    DWORD PTR [rbp-0x80],edx
  40b132:	mov    DWORD PTR [rbp-0x84],ecx
  40b138:	mov    DWORD PTR [rbp-0x88],r8d
  40b13f:	mov    QWORD PTR [rbp-0x90],r9
  40b146:	mov    rax,QWORD PTR fs:0x28
  40b14f:	mov    QWORD PTR [rbp-0x18],rax
  40b153:	xor    eax,eax
  40b155:	mov    eax,DWORD PTR [rbp-0x88]
  40b15b:	sub    eax,0x1
  40b15e:	mov    DWORD PTR [rbp-0x34],eax
  40b161:	mov    eax,DWORD PTR [rbp-0x34]
  40b164:	mov    DWORD PTR [rbp-0x68],eax
  40b167:	cmp    DWORD PTR [rbp-0x68],0x0
  40b16b:	jne    40b177 <flatcc_verify_error_string@@Base+0x90a>
  40b16d:	mov    eax,0x3
  40b172:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b177:	mov    edx,DWORD PTR [rbp-0x84]
  40b17d:	mov    ecx,DWORD PTR [rbp-0x80]
  40b180:	mov    eax,DWORD PTR [rbp-0x7c]
  40b183:	mov    esi,ecx
  40b185:	mov    edi,eax
  40b187:	call   40ab00 <flatcc_verify_error_string@@Base+0x293>
  40b18c:	mov    DWORD PTR [rbp-0x64],eax
  40b18f:	cmp    DWORD PTR [rbp-0x64],0x0
  40b193:	jne    40b19f <flatcc_verify_error_string@@Base+0x932>
  40b195:	mov    eax,0xf
  40b19a:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b19f:	mov    edx,DWORD PTR [rbp-0x80]
  40b1a2:	mov    eax,DWORD PTR [rbp-0x84]
  40b1a8:	add    eax,edx
  40b1aa:	mov    DWORD PTR [rbp-0x28],eax
  40b1ad:	mov    ebx,DWORD PTR [rbp-0x28]
  40b1b0:	mov    edx,DWORD PTR [rbp-0x28]
  40b1b3:	mov    rax,QWORD PTR [rbp-0x78]
  40b1b7:	mov    esi,edx
  40b1b9:	mov    rdi,rax
  40b1bc:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b1c1:	sub    ebx,eax
  40b1c3:	mov    eax,ebx
  40b1c5:	mov    DWORD PTR [rbp-0x60],eax
  40b1c8:	mov    eax,DWORD PTR [rbp-0x60]
  40b1cb:	test   eax,eax
  40b1cd:	js     40b1e1 <flatcc_verify_error_string@@Base+0x974>
  40b1cf:	mov    eax,DWORD PTR [rbp-0x60]
  40b1d2:	and    eax,0x1
  40b1d5:	test   rax,rax
  40b1d8:	jne    40b1e1 <flatcc_verify_error_string@@Base+0x974>
  40b1da:	mov    eax,0x1
  40b1df:	jmp    40b1e6 <flatcc_verify_error_string@@Base+0x979>
  40b1e1:	mov    eax,0x0
  40b1e6:	mov    DWORD PTR [rbp-0x5c],eax
  40b1e9:	cmp    DWORD PTR [rbp-0x5c],0x0
  40b1ed:	jne    40b1f9 <flatcc_verify_error_string@@Base+0x98c>
  40b1ef:	mov    eax,0x1d
  40b1f4:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b1f9:	mov    eax,DWORD PTR [rbp-0x60]
  40b1fc:	lea    rdx,[rax+0x2]
  40b200:	mov    eax,DWORD PTR [rbp-0x7c]
  40b203:	cmp    rdx,rax
  40b206:	setbe  al
  40b209:	movzx  eax,al
  40b20c:	mov    DWORD PTR [rbp-0x58],eax
  40b20f:	cmp    DWORD PTR [rbp-0x58],0x0
  40b213:	jne    40b21f <flatcc_verify_error_string@@Base+0x9b2>
  40b215:	mov    eax,0x1b
  40b21a:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b21f:	mov    edx,DWORD PTR [rbp-0x60]
  40b222:	mov    rax,QWORD PTR [rbp-0x78]
  40b226:	mov    esi,edx
  40b228:	mov    rdi,rax
  40b22b:	call   40aadd <flatcc_verify_error_string@@Base+0x270>
  40b230:	mov    WORD PTR [rbp-0x22],ax
  40b234:	movzx  eax,WORD PTR [rbp-0x22]
  40b238:	movzx  edx,ax
  40b23b:	mov    eax,DWORD PTR [rbp-0x60]
  40b23e:	add    eax,edx
  40b240:	mov    DWORD PTR [rbp-0x54],eax
  40b243:	mov    eax,DWORD PTR [rbp-0x54]
  40b246:	cmp    eax,DWORD PTR [rbp-0x7c]
  40b249:	ja     40b261 <flatcc_verify_error_string@@Base+0x9f4>
  40b24b:	movzx  eax,WORD PTR [rbp-0x22]
  40b24f:	movzx  eax,ax
  40b252:	and    eax,0x1
  40b255:	test   rax,rax
  40b258:	jne    40b261 <flatcc_verify_error_string@@Base+0x9f4>
  40b25a:	mov    eax,0x1
  40b25f:	jmp    40b266 <flatcc_verify_error_string@@Base+0x9f9>
  40b261:	mov    eax,0x0
  40b266:	mov    DWORD PTR [rbp-0x50],eax
  40b269:	cmp    DWORD PTR [rbp-0x50],0x0
  40b26d:	jne    40b279 <flatcc_verify_error_string@@Base+0xa0c>
  40b26f:	mov    eax,0x1e
  40b274:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b279:	mov    DWORD PTR [rbp-0x4c],0x1
  40b280:	cmp    DWORD PTR [rbp-0x4c],0x0
  40b284:	jne    40b290 <flatcc_verify_error_string@@Base+0xa23>
  40b286:	mov    eax,0x1f
  40b28b:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b290:	movzx  eax,WORD PTR [rbp-0x22]
  40b294:	cmp    ax,0x3
  40b298:	seta   al
  40b29b:	movzx  eax,al
  40b29e:	mov    DWORD PTR [rbp-0x48],eax
  40b2a1:	cmp    DWORD PTR [rbp-0x48],0x0
  40b2a5:	jne    40b2ae <flatcc_verify_error_string@@Base+0xa41>
  40b2a7:	mov    eax,0x1c
  40b2ac:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b2ae:	mov    eax,DWORD PTR [rbp-0x60]
  40b2b1:	lea    edx,[rax+0x2]
  40b2b4:	mov    rax,QWORD PTR [rbp-0x78]
  40b2b8:	mov    esi,edx
  40b2ba:	mov    rdi,rax
  40b2bd:	call   40aadd <flatcc_verify_error_string@@Base+0x270>
  40b2c2:	mov    WORD PTR [rbp-0x24],ax
  40b2c6:	mov    eax,DWORD PTR [rbp-0x28]
  40b2c9:	mov    edx,DWORD PTR [rbp-0x7c]
  40b2cc:	sub    edx,eax
  40b2ce:	movzx  eax,WORD PTR [rbp-0x24]
  40b2d2:	movzx  eax,ax
  40b2d5:	cmp    edx,eax
  40b2d7:	setae  al
  40b2da:	movzx  eax,al
  40b2dd:	mov    DWORD PTR [rbp-0x44],eax
  40b2e0:	cmp    DWORD PTR [rbp-0x44],0x0
  40b2e4:	jne    40b2ed <flatcc_verify_error_string@@Base+0xa80>
  40b2e6:	mov    eax,0x14
  40b2eb:	jmp    40b319 <flatcc_verify_error_string@@Base+0xaac>
  40b2ed:	mov    edx,DWORD PTR [rbp-0x60]
  40b2f0:	mov    rax,QWORD PTR [rbp-0x78]
  40b2f4:	add    rax,rdx
  40b2f7:	mov    QWORD PTR [rbp-0x30],rax
  40b2fb:	mov    rax,QWORD PTR [rbp-0x78]
  40b2ff:	mov    QWORD PTR [rbp-0x40],rax
  40b303:	mov    eax,DWORD PTR [rbp-0x7c]
  40b306:	mov    DWORD PTR [rbp-0x38],eax
  40b309:	lea    rdx,[rbp-0x40]
  40b30d:	mov    rax,QWORD PTR [rbp-0x90]
  40b314:	mov    rdi,rdx
  40b317:	call   rax
  40b319:	mov    rcx,QWORD PTR [rbp-0x18]
  40b31d:	xor    rcx,QWORD PTR fs:0x28
  40b326:	je     40b32d <flatcc_verify_error_string@@Base+0xac0>
  40b328:	call   403060 <__stack_chk_fail@plt>
  40b32d:	add    rsp,0x88
  40b334:	pop    rbx
  40b335:	pop    rbp
  40b336:	ret    
  40b337:	push   rbp
  40b338:	mov    rbp,rsp
  40b33b:	sub    rsp,0x30
  40b33f:	mov    QWORD PTR [rbp-0x18],rdi
  40b343:	mov    DWORD PTR [rbp-0x1c],esi
  40b346:	mov    DWORD PTR [rbp-0x20],edx
  40b349:	mov    DWORD PTR [rbp-0x24],ecx
  40b34c:	mov    DWORD PTR [rbp-0x28],r8d
  40b350:	mov    QWORD PTR [rbp-0x30],r9
  40b354:	mov    eax,DWORD PTR [rbp-0x28]
  40b357:	lea    edx,[rax-0x1]
  40b35a:	mov    DWORD PTR [rbp-0x28],edx
  40b35d:	test   eax,eax
  40b35f:	setg   al
  40b362:	movzx  eax,al
  40b365:	mov    DWORD PTR [rbp-0x8],eax
  40b368:	cmp    DWORD PTR [rbp-0x8],0x0
  40b36c:	jne    40b378 <flatcc_verify_error_string@@Base+0xb0b>
  40b36e:	mov    eax,0x3
  40b373:	jmp    40b487 <flatcc_verify_error_string@@Base+0xc1a>
  40b378:	mov    ecx,DWORD PTR [rbp-0x24]
  40b37b:	mov    edx,DWORD PTR [rbp-0x20]
  40b37e:	mov    esi,DWORD PTR [rbp-0x1c]
  40b381:	mov    rax,QWORD PTR [rbp-0x18]
  40b385:	push   0x3fffffff
  40b38a:	mov    r9d,0x4
  40b390:	mov    r8d,0x4
  40b396:	mov    rdi,rax
  40b399:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b39e:	add    rsp,0x8
  40b3a2:	test   eax,eax
  40b3a4:	je     40b3d5 <flatcc_verify_error_string@@Base+0xb68>
  40b3a6:	mov    ecx,DWORD PTR [rbp-0x24]
  40b3a9:	mov    edx,DWORD PTR [rbp-0x20]
  40b3ac:	mov    esi,DWORD PTR [rbp-0x1c]
  40b3af:	mov    rax,QWORD PTR [rbp-0x18]
  40b3b3:	push   0x3fffffff
  40b3b8:	mov    r9d,0x4
  40b3be:	mov    r8d,0x4
  40b3c4:	mov    rdi,rax
  40b3c7:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b3cc:	add    rsp,0x8
  40b3d0:	jmp    40b487 <flatcc_verify_error_string@@Base+0xc1a>
  40b3d5:	mov    eax,DWORD PTR [rbp-0x24]
  40b3d8:	add    DWORD PTR [rbp-0x20],eax
  40b3db:	mov    edx,DWORD PTR [rbp-0x20]
  40b3de:	mov    rax,QWORD PTR [rbp-0x18]
  40b3e2:	mov    esi,edx
  40b3e4:	mov    rdi,rax
  40b3e7:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b3ec:	mov    DWORD PTR [rbp-0x4],eax
  40b3ef:	add    DWORD PTR [rbp-0x20],0x4
  40b3f3:	mov    DWORD PTR [rbp-0xc],0x0
  40b3fa:	jmp    40b476 <flatcc_verify_error_string@@Base+0xc09>
  40b3fc:	mov    edx,DWORD PTR [rbp-0x20]
  40b3ff:	mov    rax,QWORD PTR [rbp-0x18]
  40b403:	mov    esi,edx
  40b405:	mov    rdi,rax
  40b408:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b40d:	mov    r10d,eax
  40b410:	mov    rdi,QWORD PTR [rbp-0x30]
  40b414:	mov    ecx,DWORD PTR [rbp-0x28]
  40b417:	mov    edx,DWORD PTR [rbp-0x20]
  40b41a:	mov    esi,DWORD PTR [rbp-0x1c]
  40b41d:	mov    rax,QWORD PTR [rbp-0x18]
  40b421:	mov    r9,rdi
  40b424:	mov    r8d,ecx
  40b427:	mov    ecx,r10d
  40b42a:	mov    rdi,rax
  40b42d:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40b432:	test   eax,eax
  40b434:	je     40b46e <flatcc_verify_error_string@@Base+0xc01>
  40b436:	mov    edx,DWORD PTR [rbp-0x20]
  40b439:	mov    rax,QWORD PTR [rbp-0x18]
  40b43d:	mov    esi,edx
  40b43f:	mov    rdi,rax
  40b442:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b447:	mov    r10d,eax
  40b44a:	mov    rdi,QWORD PTR [rbp-0x30]
  40b44e:	mov    ecx,DWORD PTR [rbp-0x28]
  40b451:	mov    edx,DWORD PTR [rbp-0x20]
  40b454:	mov    esi,DWORD PTR [rbp-0x1c]
  40b457:	mov    rax,QWORD PTR [rbp-0x18]
  40b45b:	mov    r9,rdi
  40b45e:	mov    r8d,ecx
  40b461:	mov    ecx,r10d
  40b464:	mov    rdi,rax
  40b467:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40b46c:	jmp    40b487 <flatcc_verify_error_string@@Base+0xc1a>
  40b46e:	add    DWORD PTR [rbp-0xc],0x1
  40b472:	add    DWORD PTR [rbp-0x20],0x4
  40b476:	mov    eax,DWORD PTR [rbp-0xc]
  40b479:	cmp    eax,DWORD PTR [rbp-0x4]
  40b47c:	jb     40b3fc <flatcc_verify_error_string@@Base+0xb8f>
  40b482:	mov    eax,0x0
  40b487:	leave  
  40b488:	ret    
  40b489:	push   rbp
  40b48a:	mov    rbp,rsp
  40b48d:	add    rsp,0xffffffffffffff80
  40b491:	mov    QWORD PTR [rbp-0x58],rdi
  40b495:	mov    DWORD PTR [rbp-0x5c],esi
  40b498:	mov    DWORD PTR [rbp-0x60],edx
  40b49b:	mov    DWORD PTR [rbp-0x64],ecx
  40b49e:	mov    DWORD PTR [rbp-0x68],r8d
  40b4a2:	mov    QWORD PTR [rbp-0x70],r9
  40b4a6:	mov    rax,QWORD PTR [rbp+0x18]
  40b4aa:	mov    QWORD PTR [rbp-0x78],rax
  40b4ae:	mov    rax,QWORD PTR fs:0x28
  40b4b7:	mov    QWORD PTR [rbp-0x8],rax
  40b4bb:	xor    eax,eax
  40b4bd:	mov    eax,DWORD PTR [rbp+0x10]
  40b4c0:	lea    edx,[rax-0x1]
  40b4c3:	mov    DWORD PTR [rbp+0x10],edx
  40b4c6:	test   eax,eax
  40b4c8:	setg   al
  40b4cb:	movzx  eax,al
  40b4ce:	mov    DWORD PTR [rbp-0x48],eax
  40b4d1:	cmp    DWORD PTR [rbp-0x48],0x0
  40b4d5:	jne    40b4e1 <flatcc_verify_error_string@@Base+0xc74>
  40b4d7:	mov    eax,0x3
  40b4dc:	jmp    40b654 <flatcc_verify_error_string@@Base+0xde7>
  40b4e1:	mov    ecx,DWORD PTR [rbp-0x64]
  40b4e4:	mov    edx,DWORD PTR [rbp-0x60]
  40b4e7:	mov    esi,DWORD PTR [rbp-0x5c]
  40b4ea:	mov    rax,QWORD PTR [rbp-0x58]
  40b4ee:	push   0x3fffffff
  40b4f3:	mov    r9d,0x4
  40b4f9:	mov    r8d,0x4
  40b4ff:	mov    rdi,rax
  40b502:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b507:	add    rsp,0x8
  40b50b:	test   eax,eax
  40b50d:	je     40b53e <flatcc_verify_error_string@@Base+0xcd1>
  40b50f:	mov    ecx,DWORD PTR [rbp-0x64]
  40b512:	mov    edx,DWORD PTR [rbp-0x60]
  40b515:	mov    esi,DWORD PTR [rbp-0x5c]
  40b518:	mov    rax,QWORD PTR [rbp-0x58]
  40b51c:	push   0x3fffffff
  40b521:	mov    r9d,0x4
  40b527:	mov    r8d,0x4
  40b52d:	mov    rdi,rax
  40b530:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b535:	add    rsp,0x8
  40b539:	jmp    40b654 <flatcc_verify_error_string@@Base+0xde7>
  40b53e:	mov    eax,DWORD PTR [rbp-0x64]
  40b541:	add    DWORD PTR [rbp-0x60],eax
  40b544:	mov    edx,DWORD PTR [rbp-0x60]
  40b547:	mov    rax,QWORD PTR [rbp-0x58]
  40b54b:	mov    esi,edx
  40b54d:	mov    rdi,rax
  40b550:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b555:	mov    DWORD PTR [rbp-0x44],eax
  40b558:	mov    eax,DWORD PTR [rbp-0x44]
  40b55b:	cmp    eax,DWORD PTR [rbp-0x68]
  40b55e:	sete   al
  40b561:	movzx  eax,al
  40b564:	mov    DWORD PTR [rbp-0x40],eax
  40b567:	cmp    DWORD PTR [rbp-0x40],0x0
  40b56b:	jne    40b577 <flatcc_verify_error_string@@Base+0xd0a>
  40b56d:	mov    eax,0x22
  40b572:	jmp    40b654 <flatcc_verify_error_string@@Base+0xde7>
  40b577:	add    DWORD PTR [rbp-0x60],0x4
  40b57b:	mov    rax,QWORD PTR [rbp-0x58]
  40b57f:	mov    QWORD PTR [rbp-0x30],rax
  40b583:	mov    eax,DWORD PTR [rbp-0x5c]
  40b586:	mov    DWORD PTR [rbp-0x28],eax
  40b589:	mov    eax,DWORD PTR [rbp+0x10]
  40b58c:	mov    DWORD PTR [rbp-0x24],eax
  40b58f:	mov    DWORD PTR [rbp-0x4c],0x0
  40b596:	jmp    40b643 <flatcc_verify_error_string@@Base+0xdd6>
  40b59b:	mov    edx,DWORD PTR [rbp-0x60]
  40b59e:	mov    rax,QWORD PTR [rbp-0x58]
  40b5a2:	mov    esi,edx
  40b5a4:	mov    rdi,rax
  40b5a7:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b5ac:	mov    DWORD PTR [rbp-0x3c],eax
  40b5af:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b5b3:	jne    40b5da <flatcc_verify_error_string@@Base+0xd6d>
  40b5b5:	mov    edx,DWORD PTR [rbp-0x4c]
  40b5b8:	mov    rax,QWORD PTR [rbp-0x70]
  40b5bc:	add    rax,rdx
  40b5bf:	movzx  eax,BYTE PTR [rax]
  40b5c2:	test   al,al
  40b5c4:	sete   al
  40b5c7:	movzx  eax,al
  40b5ca:	mov    DWORD PTR [rbp-0x34],eax
  40b5cd:	cmp    DWORD PTR [rbp-0x34],0x0
  40b5d1:	jne    40b63b <flatcc_verify_error_string@@Base+0xdce>
  40b5d3:	mov    eax,0x20
  40b5d8:	jmp    40b654 <flatcc_verify_error_string@@Base+0xde7>
  40b5da:	mov    edx,DWORD PTR [rbp-0x4c]
  40b5dd:	mov    rax,QWORD PTR [rbp-0x70]
  40b5e1:	add    rax,rdx
  40b5e4:	movzx  eax,BYTE PTR [rax]
  40b5e7:	test   al,al
  40b5e9:	setne  al
  40b5ec:	movzx  eax,al
  40b5ef:	mov    DWORD PTR [rbp-0x38],eax
  40b5f2:	cmp    DWORD PTR [rbp-0x38],0x0
  40b5f6:	jne    40b5ff <flatcc_verify_error_string@@Base+0xd92>
  40b5f8:	mov    eax,0x21
  40b5fd:	jmp    40b654 <flatcc_verify_error_string@@Base+0xde7>
  40b5ff:	mov    edx,DWORD PTR [rbp-0x4c]
  40b602:	mov    rax,QWORD PTR [rbp-0x70]
  40b606:	add    rax,rdx
  40b609:	movzx  eax,BYTE PTR [rax]
  40b60c:	mov    BYTE PTR [rbp-0x20],al
  40b60f:	mov    eax,DWORD PTR [rbp-0x60]
  40b612:	mov    DWORD PTR [rbp-0x1c],eax
  40b615:	mov    eax,DWORD PTR [rbp-0x3c]
  40b618:	mov    DWORD PTR [rbp-0x18],eax
  40b61b:	lea    rdx,[rbp-0x30]
  40b61f:	mov    rax,QWORD PTR [rbp-0x78]
  40b623:	mov    rdi,rdx
  40b626:	call   rax
  40b628:	test   eax,eax
  40b62a:	je     40b63b <flatcc_verify_error_string@@Base+0xdce>
  40b62c:	lea    rdx,[rbp-0x30]
  40b630:	mov    rax,QWORD PTR [rbp-0x78]
  40b634:	mov    rdi,rdx
  40b637:	call   rax
  40b639:	jmp    40b654 <flatcc_verify_error_string@@Base+0xde7>
  40b63b:	add    DWORD PTR [rbp-0x4c],0x1
  40b63f:	add    DWORD PTR [rbp-0x60],0x4
  40b643:	mov    eax,DWORD PTR [rbp-0x4c]
  40b646:	cmp    eax,DWORD PTR [rbp-0x44]
  40b649:	jb     40b59b <flatcc_verify_error_string@@Base+0xd2e>
  40b64f:	mov    eax,0x0
  40b654:	mov    rcx,QWORD PTR [rbp-0x8]
  40b658:	xor    rcx,QWORD PTR fs:0x28
  40b661:	je     40b668 <flatcc_verify_error_string@@Base+0xdfb>
  40b663:	call   403060 <__stack_chk_fail@plt>
  40b668:	leave  
  40b669:	ret    

000000000040b66a <flatcc_verify_field@@Base>:
  40b66a:	push   rbp
  40b66b:	mov    rbp,rsp
  40b66e:	sub    rsp,0x18
  40b672:	mov    QWORD PTR [rbp-0x8],rdi
  40b676:	mov    QWORD PTR [rbp-0x18],rdx
  40b67a:	mov    eax,ecx
  40b67c:	mov    WORD PTR [rbp-0xc],si
  40b680:	mov    WORD PTR [rbp-0x10],ax
  40b684:	movzx  edx,WORD PTR [rbp-0x10]
  40b688:	mov    rax,QWORD PTR [rbp-0x18]
  40b68c:	mov    ecx,eax
  40b68e:	movzx  esi,WORD PTR [rbp-0xc]
  40b692:	mov    rax,QWORD PTR [rbp-0x8]
  40b696:	mov    r8d,edx
  40b699:	mov    edx,0x0
  40b69e:	mov    rdi,rax
  40b6a1:	call   40acfe <flatcc_verify_error_string@@Base+0x491>
  40b6a6:	test   eax,eax
  40b6a8:	je     40b6ce <flatcc_verify_field@@Base+0x64>
  40b6aa:	movzx  edx,WORD PTR [rbp-0x10]
  40b6ae:	mov    rax,QWORD PTR [rbp-0x18]
  40b6b2:	mov    ecx,eax
  40b6b4:	movzx  esi,WORD PTR [rbp-0xc]
  40b6b8:	mov    rax,QWORD PTR [rbp-0x8]
  40b6bc:	mov    r8d,edx
  40b6bf:	mov    edx,0x0
  40b6c4:	mov    rdi,rax
  40b6c7:	call   40acfe <flatcc_verify_error_string@@Base+0x491>
  40b6cc:	jmp    40b6d3 <flatcc_verify_field@@Base+0x69>
  40b6ce:	mov    eax,0x0
  40b6d3:	leave  
  40b6d4:	ret    

000000000040b6d5 <flatcc_verify_string_field@@Base>:
  40b6d5:	push   rbp
  40b6d6:	mov    rbp,rsp
  40b6d9:	sub    rsp,0x20
  40b6dd:	mov    QWORD PTR [rbp-0x18],rdi
  40b6e1:	mov    eax,esi
  40b6e3:	mov    DWORD PTR [rbp-0x20],edx
  40b6e6:	mov    WORD PTR [rbp-0x1c],ax
  40b6ea:	mov    rax,QWORD PTR fs:0x28
  40b6f3:	mov    QWORD PTR [rbp-0x8],rax
  40b6f7:	xor    eax,eax
  40b6f9:	movzx  esi,WORD PTR [rbp-0x1c]
  40b6fd:	lea    rcx,[rbp-0x10]
  40b701:	mov    edx,DWORD PTR [rbp-0x20]
  40b704:	mov    rax,QWORD PTR [rbp-0x18]
  40b708:	mov    rdi,rax
  40b70b:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40b710:	mov    DWORD PTR [rbp-0xc],eax
  40b713:	cmp    DWORD PTR [rbp-0xc],0x0
  40b717:	jne    40b720 <flatcc_verify_string_field@@Base+0x4b>
  40b719:	mov    eax,DWORD PTR [rbp-0x10]
  40b71c:	test   eax,eax
  40b71e:	jne    40b725 <flatcc_verify_string_field@@Base+0x50>
  40b720:	mov    eax,DWORD PTR [rbp-0xc]
  40b723:	jmp    40b754 <flatcc_verify_string_field@@Base+0x7f>
  40b725:	mov    edx,DWORD PTR [rbp-0x10]
  40b728:	mov    rax,QWORD PTR [rbp-0x18]
  40b72c:	mov    rax,QWORD PTR [rax]
  40b72f:	mov    esi,edx
  40b731:	mov    rdi,rax
  40b734:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b739:	mov    ecx,eax
  40b73b:	mov    edx,DWORD PTR [rbp-0x10]
  40b73e:	mov    rax,QWORD PTR [rbp-0x18]
  40b742:	mov    esi,DWORD PTR [rax+0x8]
  40b745:	mov    rax,QWORD PTR [rbp-0x18]
  40b749:	mov    rax,QWORD PTR [rax]
  40b74c:	mov    rdi,rax
  40b74f:	call   40aec5 <flatcc_verify_error_string@@Base+0x658>
  40b754:	mov    rdi,QWORD PTR [rbp-0x8]
  40b758:	xor    rdi,QWORD PTR fs:0x28
  40b761:	je     40b768 <flatcc_verify_string_field@@Base+0x93>
  40b763:	call   403060 <__stack_chk_fail@plt>
  40b768:	leave  
  40b769:	ret    

000000000040b76a <flatcc_verify_vector_field@@Base>:
  40b76a:	push   rbp
  40b76b:	mov    rbp,rsp
  40b76e:	push   r13
  40b770:	push   r12
  40b772:	push   rbx
  40b773:	sub    rsp,0x48
  40b777:	mov    QWORD PTR [rbp-0x38],rdi
  40b77b:	mov    eax,esi
  40b77d:	mov    DWORD PTR [rbp-0x40],edx
  40b780:	mov    QWORD PTR [rbp-0x48],rcx
  40b784:	mov    edx,r8d
  40b787:	mov    QWORD PTR [rbp-0x58],r9
  40b78b:	mov    WORD PTR [rbp-0x3c],ax
  40b78f:	mov    WORD PTR [rbp-0x4c],dx
  40b793:	mov    rax,QWORD PTR fs:0x28
  40b79c:	mov    QWORD PTR [rbp-0x28],rax
  40b7a0:	xor    eax,eax
  40b7a2:	movzx  esi,WORD PTR [rbp-0x3c]
  40b7a6:	lea    rcx,[rbp-0x30]
  40b7aa:	mov    edx,DWORD PTR [rbp-0x40]
  40b7ad:	mov    rax,QWORD PTR [rbp-0x38]
  40b7b1:	mov    rdi,rax
  40b7b4:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40b7b9:	mov    DWORD PTR [rbp-0x2c],eax
  40b7bc:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b7c0:	jne    40b7c9 <flatcc_verify_vector_field@@Base+0x5f>
  40b7c2:	mov    eax,DWORD PTR [rbp-0x30]
  40b7c5:	test   eax,eax
  40b7c7:	jne    40b7ce <flatcc_verify_vector_field@@Base+0x64>
  40b7c9:	mov    eax,DWORD PTR [rbp-0x2c]
  40b7cc:	jmp    40b81b <flatcc_verify_vector_field@@Base+0xb1>
  40b7ce:	mov    rax,QWORD PTR [rbp-0x58]
  40b7d2:	mov    r12d,eax
  40b7d5:	movzx  ebx,WORD PTR [rbp-0x4c]
  40b7d9:	mov    rax,QWORD PTR [rbp-0x48]
  40b7dd:	mov    r13d,eax
  40b7e0:	mov    edx,DWORD PTR [rbp-0x30]
  40b7e3:	mov    rax,QWORD PTR [rbp-0x38]
  40b7e7:	mov    rax,QWORD PTR [rax]
  40b7ea:	mov    esi,edx
  40b7ec:	mov    rdi,rax
  40b7ef:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b7f4:	mov    ecx,eax
  40b7f6:	mov    edx,DWORD PTR [rbp-0x30]
  40b7f9:	mov    rax,QWORD PTR [rbp-0x38]
  40b7fd:	mov    esi,DWORD PTR [rax+0x8]
  40b800:	mov    rax,QWORD PTR [rbp-0x38]
  40b804:	mov    rax,QWORD PTR [rax]
  40b807:	push   r12
  40b809:	mov    r9d,ebx
  40b80c:	mov    r8d,r13d
  40b80f:	mov    rdi,rax
  40b812:	call   40af70 <flatcc_verify_error_string@@Base+0x703>
  40b817:	add    rsp,0x8
  40b81b:	mov    rbx,QWORD PTR [rbp-0x28]
  40b81f:	xor    rbx,QWORD PTR fs:0x28
  40b828:	je     40b82f <flatcc_verify_vector_field@@Base+0xc5>
  40b82a:	call   403060 <__stack_chk_fail@plt>
  40b82f:	lea    rsp,[rbp-0x18]
  40b833:	pop    rbx
  40b834:	pop    r12
  40b836:	pop    r13
  40b838:	pop    rbp
  40b839:	ret    

000000000040b83a <flatcc_verify_string_vector_field@@Base>:
  40b83a:	push   rbp
  40b83b:	mov    rbp,rsp
  40b83e:	sub    rsp,0x20
  40b842:	mov    QWORD PTR [rbp-0x18],rdi
  40b846:	mov    eax,esi
  40b848:	mov    DWORD PTR [rbp-0x20],edx
  40b84b:	mov    WORD PTR [rbp-0x1c],ax
  40b84f:	mov    rax,QWORD PTR fs:0x28
  40b858:	mov    QWORD PTR [rbp-0x8],rax
  40b85c:	xor    eax,eax
  40b85e:	movzx  esi,WORD PTR [rbp-0x1c]
  40b862:	lea    rcx,[rbp-0x10]
  40b866:	mov    edx,DWORD PTR [rbp-0x20]
  40b869:	mov    rax,QWORD PTR [rbp-0x18]
  40b86d:	mov    rdi,rax
  40b870:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40b875:	mov    DWORD PTR [rbp-0xc],eax
  40b878:	cmp    DWORD PTR [rbp-0xc],0x0
  40b87c:	jne    40b885 <flatcc_verify_string_vector_field@@Base+0x4b>
  40b87e:	mov    eax,DWORD PTR [rbp-0x10]
  40b881:	test   eax,eax
  40b883:	jne    40b88a <flatcc_verify_string_vector_field@@Base+0x50>
  40b885:	mov    eax,DWORD PTR [rbp-0xc]
  40b888:	jmp    40b8b9 <flatcc_verify_string_vector_field@@Base+0x7f>
  40b88a:	mov    edx,DWORD PTR [rbp-0x10]
  40b88d:	mov    rax,QWORD PTR [rbp-0x18]
  40b891:	mov    rax,QWORD PTR [rax]
  40b894:	mov    esi,edx
  40b896:	mov    rdi,rax
  40b899:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b89e:	mov    ecx,eax
  40b8a0:	mov    edx,DWORD PTR [rbp-0x10]
  40b8a3:	mov    rax,QWORD PTR [rbp-0x18]
  40b8a7:	mov    esi,DWORD PTR [rax+0x8]
  40b8aa:	mov    rax,QWORD PTR [rbp-0x18]
  40b8ae:	mov    rax,QWORD PTR [rax]
  40b8b1:	mov    rdi,rax
  40b8b4:	call   40b01c <flatcc_verify_error_string@@Base+0x7af>
  40b8b9:	mov    rdi,QWORD PTR [rbp-0x8]
  40b8bd:	xor    rdi,QWORD PTR fs:0x28
  40b8c6:	je     40b8cd <flatcc_verify_string_vector_field@@Base+0x93>
  40b8c8:	call   403060 <__stack_chk_fail@plt>
  40b8cd:	leave  
  40b8ce:	ret    

000000000040b8cf <flatcc_verify_table_field@@Base>:
  40b8cf:	push   rbp
  40b8d0:	mov    rbp,rsp
  40b8d3:	push   rbx
  40b8d4:	sub    rsp,0x38
  40b8d8:	mov    QWORD PTR [rbp-0x28],rdi
  40b8dc:	mov    eax,esi
  40b8de:	mov    DWORD PTR [rbp-0x30],edx
  40b8e1:	mov    QWORD PTR [rbp-0x38],rcx
  40b8e5:	mov    WORD PTR [rbp-0x2c],ax
  40b8e9:	mov    rax,QWORD PTR fs:0x28
  40b8f2:	mov    QWORD PTR [rbp-0x18],rax
  40b8f6:	xor    eax,eax
  40b8f8:	movzx  esi,WORD PTR [rbp-0x2c]
  40b8fc:	lea    rcx,[rbp-0x20]
  40b900:	mov    edx,DWORD PTR [rbp-0x30]
  40b903:	mov    rax,QWORD PTR [rbp-0x28]
  40b907:	mov    rdi,rax
  40b90a:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40b90f:	mov    DWORD PTR [rbp-0x1c],eax
  40b912:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b916:	jne    40b91f <flatcc_verify_table_field@@Base+0x50>
  40b918:	mov    eax,DWORD PTR [rbp-0x20]
  40b91b:	test   eax,eax
  40b91d:	jne    40b924 <flatcc_verify_table_field@@Base+0x55>
  40b91f:	mov    eax,DWORD PTR [rbp-0x1c]
  40b922:	jmp    40b966 <flatcc_verify_table_field@@Base+0x97>
  40b924:	mov    rax,QWORD PTR [rbp-0x28]
  40b928:	mov    ebx,DWORD PTR [rax+0xc]
  40b92b:	mov    edx,DWORD PTR [rbp-0x20]
  40b92e:	mov    rax,QWORD PTR [rbp-0x28]
  40b932:	mov    rax,QWORD PTR [rax]
  40b935:	mov    esi,edx
  40b937:	mov    rdi,rax
  40b93a:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b93f:	mov    edi,eax
  40b941:	mov    edx,DWORD PTR [rbp-0x20]
  40b944:	mov    rax,QWORD PTR [rbp-0x28]
  40b948:	mov    esi,DWORD PTR [rax+0x8]
  40b94b:	mov    rax,QWORD PTR [rbp-0x28]
  40b94f:	mov    rax,QWORD PTR [rax]
  40b952:	mov    rcx,QWORD PTR [rbp-0x38]
  40b956:	mov    r9,rcx
  40b959:	mov    r8d,ebx
  40b95c:	mov    ecx,edi
  40b95e:	mov    rdi,rax
  40b961:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40b966:	mov    rbx,QWORD PTR [rbp-0x18]
  40b96a:	xor    rbx,QWORD PTR fs:0x28
  40b973:	je     40b97a <flatcc_verify_table_field@@Base+0xab>
  40b975:	call   403060 <__stack_chk_fail@plt>
  40b97a:	add    rsp,0x38
  40b97e:	pop    rbx
  40b97f:	pop    rbp
  40b980:	ret    

000000000040b981 <flatcc_verify_table_vector_field@@Base>:
  40b981:	push   rbp
  40b982:	mov    rbp,rsp
  40b985:	push   rbx
  40b986:	sub    rsp,0x38
  40b98a:	mov    QWORD PTR [rbp-0x28],rdi
  40b98e:	mov    eax,esi
  40b990:	mov    DWORD PTR [rbp-0x30],edx
  40b993:	mov    QWORD PTR [rbp-0x38],rcx
  40b997:	mov    WORD PTR [rbp-0x2c],ax
  40b99b:	mov    rax,QWORD PTR fs:0x28
  40b9a4:	mov    QWORD PTR [rbp-0x18],rax
  40b9a8:	xor    eax,eax
  40b9aa:	movzx  esi,WORD PTR [rbp-0x2c]
  40b9ae:	lea    rcx,[rbp-0x20]
  40b9b2:	mov    edx,DWORD PTR [rbp-0x30]
  40b9b5:	mov    rax,QWORD PTR [rbp-0x28]
  40b9b9:	mov    rdi,rax
  40b9bc:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40b9c1:	mov    DWORD PTR [rbp-0x1c],eax
  40b9c4:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b9c8:	jne    40b9d1 <flatcc_verify_table_vector_field@@Base+0x50>
  40b9ca:	mov    eax,DWORD PTR [rbp-0x20]
  40b9cd:	test   eax,eax
  40b9cf:	jne    40b9d6 <flatcc_verify_table_vector_field@@Base+0x55>
  40b9d1:	mov    eax,DWORD PTR [rbp-0x1c]
  40b9d4:	jmp    40ba18 <flatcc_verify_table_vector_field@@Base+0x97>
  40b9d6:	mov    rax,QWORD PTR [rbp-0x28]
  40b9da:	mov    ebx,DWORD PTR [rax+0xc]
  40b9dd:	mov    edx,DWORD PTR [rbp-0x20]
  40b9e0:	mov    rax,QWORD PTR [rbp-0x28]
  40b9e4:	mov    rax,QWORD PTR [rax]
  40b9e7:	mov    esi,edx
  40b9e9:	mov    rdi,rax
  40b9ec:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40b9f1:	mov    edi,eax
  40b9f3:	mov    edx,DWORD PTR [rbp-0x20]
  40b9f6:	mov    rax,QWORD PTR [rbp-0x28]
  40b9fa:	mov    esi,DWORD PTR [rax+0x8]
  40b9fd:	mov    rax,QWORD PTR [rbp-0x28]
  40ba01:	mov    rax,QWORD PTR [rax]
  40ba04:	mov    rcx,QWORD PTR [rbp-0x38]
  40ba08:	mov    r9,rcx
  40ba0b:	mov    r8d,ebx
  40ba0e:	mov    ecx,edi
  40ba10:	mov    rdi,rax
  40ba13:	call   40b337 <flatcc_verify_error_string@@Base+0xaca>
  40ba18:	mov    rbx,QWORD PTR [rbp-0x18]
  40ba1c:	xor    rbx,QWORD PTR fs:0x28
  40ba25:	je     40ba2c <flatcc_verify_table_vector_field@@Base+0xab>
  40ba27:	call   403060 <__stack_chk_fail@plt>
  40ba2c:	add    rsp,0x38
  40ba30:	pop    rbx
  40ba31:	pop    rbp
  40ba32:	ret    

000000000040ba33 <flatcc_verify_union_table@@Base>:
  40ba33:	push   rbp
  40ba34:	mov    rbp,rsp
  40ba37:	sub    rsp,0x10
  40ba3b:	mov    QWORD PTR [rbp-0x8],rdi
  40ba3f:	mov    QWORD PTR [rbp-0x10],rsi
  40ba43:	mov    rax,QWORD PTR [rbp-0x8]
  40ba47:	mov    edi,DWORD PTR [rax+0xc]
  40ba4a:	mov    rax,QWORD PTR [rbp-0x8]
  40ba4e:	mov    ecx,DWORD PTR [rax+0x18]
  40ba51:	mov    rax,QWORD PTR [rbp-0x8]
  40ba55:	mov    edx,DWORD PTR [rax+0x14]
  40ba58:	mov    rax,QWORD PTR [rbp-0x8]
  40ba5c:	mov    esi,DWORD PTR [rax+0x8]
  40ba5f:	mov    rax,QWORD PTR [rbp-0x8]
  40ba63:	mov    rax,QWORD PTR [rax]
  40ba66:	mov    r8,QWORD PTR [rbp-0x10]
  40ba6a:	mov    r9,r8
  40ba6d:	mov    r8d,edi
  40ba70:	mov    rdi,rax
  40ba73:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40ba78:	leave  
  40ba79:	ret    

000000000040ba7a <flatcc_verify_union_struct@@Base>:
  40ba7a:	push   rbp
  40ba7b:	mov    rbp,rsp
  40ba7e:	sub    rsp,0x18
  40ba82:	mov    QWORD PTR [rbp-0x8],rdi
  40ba86:	mov    QWORD PTR [rbp-0x10],rsi
  40ba8a:	mov    eax,edx
  40ba8c:	mov    WORD PTR [rbp-0x14],ax
  40ba90:	movzx  ecx,WORD PTR [rbp-0x14]
  40ba94:	mov    rax,QWORD PTR [rbp-0x10]
  40ba98:	mov    edi,eax
  40ba9a:	mov    rax,QWORD PTR [rbp-0x8]
  40ba9e:	mov    edx,DWORD PTR [rax+0x18]
  40baa1:	mov    rax,QWORD PTR [rbp-0x8]
  40baa5:	mov    esi,DWORD PTR [rax+0x14]
  40baa8:	mov    rax,QWORD PTR [rbp-0x8]
  40baac:	mov    eax,DWORD PTR [rax+0x8]
  40baaf:	mov    r8d,ecx
  40bab2:	mov    ecx,edi
  40bab4:	mov    edi,eax
  40bab6:	call   40abb9 <flatcc_verify_error_string@@Base+0x34c>
  40babb:	leave  
  40babc:	ret    

000000000040babd <flatcc_verify_union_string@@Base>:
  40babd:	push   rbp
  40babe:	mov    rbp,rsp
  40bac1:	sub    rsp,0x8
  40bac5:	mov    QWORD PTR [rbp-0x8],rdi
  40bac9:	mov    rax,QWORD PTR [rbp-0x8]
  40bacd:	mov    ecx,DWORD PTR [rax+0x18]
  40bad0:	mov    rax,QWORD PTR [rbp-0x8]
  40bad4:	mov    edx,DWORD PTR [rax+0x14]
  40bad7:	mov    rax,QWORD PTR [rbp-0x8]
  40badb:	mov    esi,DWORD PTR [rax+0x8]
  40bade:	mov    rax,QWORD PTR [rbp-0x8]
  40bae2:	mov    rax,QWORD PTR [rax]
  40bae5:	mov    rdi,rax
  40bae8:	call   40aec5 <flatcc_verify_error_string@@Base+0x658>
  40baed:	leave  
  40baee:	ret    

000000000040baef <flatcc_verify_buffer_header@@Base>:
  40baef:	push   rbp
  40baf0:	mov    rbp,rsp
  40baf3:	sub    rsp,0x40
  40baf7:	mov    QWORD PTR [rbp-0x28],rdi
  40bafb:	mov    QWORD PTR [rbp-0x30],rsi
  40baff:	mov    QWORD PTR [rbp-0x38],rdx
  40bb03:	mov    rax,QWORD PTR [rbp-0x28]
  40bb07:	and    eax,0x3
  40bb0a:	test   rax,rax
  40bb0d:	sete   al
  40bb10:	movzx  eax,al
  40bb13:	mov    DWORD PTR [rbp-0x18],eax
  40bb16:	cmp    DWORD PTR [rbp-0x18],0x0
  40bb1a:	jne    40bb26 <flatcc_verify_buffer_header@@Base+0x37>
  40bb1c:	mov    eax,0x5
  40bb21:	jmp    40bbb9 <flatcc_verify_buffer_header@@Base+0xca>
  40bb26:	mov    eax,0xfffffff7
  40bb2b:	cmp    QWORD PTR [rbp-0x30],rax
  40bb2f:	setbe  al
  40bb32:	movzx  eax,al
  40bb35:	mov    DWORD PTR [rbp-0x14],eax
  40bb38:	cmp    DWORD PTR [rbp-0x14],0x0
  40bb3c:	jne    40bb45 <flatcc_verify_buffer_header@@Base+0x56>
  40bb3e:	mov    eax,0x6
  40bb43:	jmp    40bbb9 <flatcc_verify_buffer_header@@Base+0xca>
  40bb45:	cmp    QWORD PTR [rbp-0x30],0x7
  40bb4a:	seta   al
  40bb4d:	movzx  eax,al
  40bb50:	mov    DWORD PTR [rbp-0x10],eax
  40bb53:	cmp    DWORD PTR [rbp-0x10],0x0
  40bb57:	jne    40bb60 <flatcc_verify_buffer_header@@Base+0x71>
  40bb59:	mov    eax,0x1
  40bb5e:	jmp    40bbb9 <flatcc_verify_buffer_header@@Base+0xca>
  40bb60:	cmp    QWORD PTR [rbp-0x38],0x0
  40bb65:	je     40bbb4 <flatcc_verify_buffer_header@@Base+0xc5>
  40bb67:	mov    rax,QWORD PTR [rbp-0x38]
  40bb6b:	mov    rdi,rax
  40bb6e:	call   40aa60 <flatcc_verify_error_string@@Base+0x1f3>
  40bb73:	mov    DWORD PTR [rbp-0xc],eax
  40bb76:	mov    rax,QWORD PTR [rbp-0x28]
  40bb7a:	mov    esi,0x4
  40bb7f:	mov    rdi,rax
  40bb82:	call   40aaba <flatcc_verify_error_string@@Base+0x24d>
  40bb87:	mov    DWORD PTR [rbp-0x8],eax
  40bb8a:	cmp    DWORD PTR [rbp-0xc],0x0
  40bb8e:	je     40bb98 <flatcc_verify_buffer_header@@Base+0xa9>
  40bb90:	mov    eax,DWORD PTR [rbp-0x8]
  40bb93:	cmp    eax,DWORD PTR [rbp-0xc]
  40bb96:	jne    40bb9f <flatcc_verify_buffer_header@@Base+0xb0>
  40bb98:	mov    eax,0x1
  40bb9d:	jmp    40bba4 <flatcc_verify_buffer_header@@Base+0xb5>
  40bb9f:	mov    eax,0x0
  40bba4:	mov    DWORD PTR [rbp-0x4],eax
  40bba7:	cmp    DWORD PTR [rbp-0x4],0x0
  40bbab:	jne    40bbb4 <flatcc_verify_buffer_header@@Base+0xc5>
  40bbad:	mov    eax,0x2
  40bbb2:	jmp    40bbb9 <flatcc_verify_buffer_header@@Base+0xca>
  40bbb4:	mov    eax,0x0
  40bbb9:	leave  
  40bbba:	ret    

000000000040bbbb <flatcc_verify_typed_buffer_header@@Base>:
  40bbbb:	push   rbp
  40bbbc:	mov    rbp,rsp
  40bbbf:	sub    rsp,0x38
  40bbc3:	mov    QWORD PTR [rbp-0x28],rdi
  40bbc7:	mov    QWORD PTR [rbp-0x30],rsi
  40bbcb:	mov    DWORD PTR [rbp-0x34],edx
  40bbce:	mov    rax,QWORD PTR [rbp-0x28]
  40bbd2:	and    eax,0x3
  40bbd5:	test   rax,rax
  40bbd8:	sete   al
  40bbdb:	movzx  eax,al
  40bbde:	mov    DWORD PTR [rbp-0x18],eax
  40bbe1:	cmp    DWORD PTR [rbp-0x18],0x0
  40bbe5:	jne    40bbf1 <flatcc_verify_typed_buffer_header@@Base+0x36>
  40bbe7:	mov    eax,0x5
  40bbec:	jmp    40bc7a <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bbf1:	mov    eax,0xfffffff7
  40bbf6:	cmp    QWORD PTR [rbp-0x30],rax
  40bbfa:	setbe  al
  40bbfd:	movzx  eax,al
  40bc00:	mov    DWORD PTR [rbp-0x14],eax
  40bc03:	cmp    DWORD PTR [rbp-0x14],0x0
  40bc07:	jne    40bc10 <flatcc_verify_typed_buffer_header@@Base+0x55>
  40bc09:	mov    eax,0x6
  40bc0e:	jmp    40bc7a <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bc10:	cmp    QWORD PTR [rbp-0x30],0x7
  40bc15:	seta   al
  40bc18:	movzx  eax,al
  40bc1b:	mov    DWORD PTR [rbp-0x10],eax
  40bc1e:	cmp    DWORD PTR [rbp-0x10],0x0
  40bc22:	jne    40bc2b <flatcc_verify_typed_buffer_header@@Base+0x70>
  40bc24:	mov    eax,0x1
  40bc29:	jmp    40bc7a <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bc2b:	cmp    DWORD PTR [rbp-0x34],0x0
  40bc2f:	je     40bc75 <flatcc_verify_typed_buffer_header@@Base+0xba>
  40bc31:	mov    eax,DWORD PTR [rbp-0x34]
  40bc34:	mov    DWORD PTR [rbp-0xc],eax
  40bc37:	mov    rax,QWORD PTR [rbp-0x28]
  40bc3b:	mov    esi,0x4
  40bc40:	mov    rdi,rax
  40bc43:	call   40aaba <flatcc_verify_error_string@@Base+0x24d>
  40bc48:	mov    DWORD PTR [rbp-0x8],eax
  40bc4b:	cmp    DWORD PTR [rbp-0xc],0x0
  40bc4f:	je     40bc59 <flatcc_verify_typed_buffer_header@@Base+0x9e>
  40bc51:	mov    eax,DWORD PTR [rbp-0x8]
  40bc54:	cmp    eax,DWORD PTR [rbp-0xc]
  40bc57:	jne    40bc60 <flatcc_verify_typed_buffer_header@@Base+0xa5>
  40bc59:	mov    eax,0x1
  40bc5e:	jmp    40bc65 <flatcc_verify_typed_buffer_header@@Base+0xaa>
  40bc60:	mov    eax,0x0
  40bc65:	mov    DWORD PTR [rbp-0x4],eax
  40bc68:	cmp    DWORD PTR [rbp-0x4],0x0
  40bc6c:	jne    40bc75 <flatcc_verify_typed_buffer_header@@Base+0xba>
  40bc6e:	mov    eax,0x2
  40bc73:	jmp    40bc7a <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bc75:	mov    eax,0x0
  40bc7a:	leave  
  40bc7b:	ret    

000000000040bc7c <flatcc_verify_struct_as_root@@Base>:
  40bc7c:	push   rbp
  40bc7d:	mov    rbp,rsp
  40bc80:	push   r12
  40bc82:	push   rbx
  40bc83:	sub    rsp,0x30
  40bc87:	mov    QWORD PTR [rbp-0x18],rdi
  40bc8b:	mov    QWORD PTR [rbp-0x20],rsi
  40bc8f:	mov    QWORD PTR [rbp-0x28],rdx
  40bc93:	mov    QWORD PTR [rbp-0x30],rcx
  40bc97:	mov    eax,r8d
  40bc9a:	mov    WORD PTR [rbp-0x34],ax
  40bc9e:	mov    rdx,QWORD PTR [rbp-0x28]
  40bca2:	mov    rcx,QWORD PTR [rbp-0x20]
  40bca6:	mov    rax,QWORD PTR [rbp-0x18]
  40bcaa:	mov    rsi,rcx
  40bcad:	mov    rdi,rax
  40bcb0:	call   40baef <flatcc_verify_buffer_header@@Base>
  40bcb5:	test   eax,eax
  40bcb7:	je     40bcd2 <flatcc_verify_struct_as_root@@Base+0x56>
  40bcb9:	mov    rdx,QWORD PTR [rbp-0x28]
  40bcbd:	mov    rcx,QWORD PTR [rbp-0x20]
  40bcc1:	mov    rax,QWORD PTR [rbp-0x18]
  40bcc5:	mov    rsi,rcx
  40bcc8:	mov    rdi,rax
  40bccb:	call   40baef <flatcc_verify_buffer_header@@Base>
  40bcd0:	jmp    40bd06 <flatcc_verify_struct_as_root@@Base+0x8a>
  40bcd2:	movzx  ebx,WORD PTR [rbp-0x34]
  40bcd6:	mov    rax,QWORD PTR [rbp-0x30]
  40bcda:	mov    r12d,eax
  40bcdd:	mov    rax,QWORD PTR [rbp-0x18]
  40bce1:	mov    esi,0x0
  40bce6:	mov    rdi,rax
  40bce9:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40bcee:	mov    edx,eax
  40bcf0:	mov    rax,QWORD PTR [rbp-0x20]
  40bcf4:	mov    r8d,ebx
  40bcf7:	mov    ecx,r12d
  40bcfa:	mov    esi,0x0
  40bcff:	mov    edi,eax
  40bd01:	call   40abb9 <flatcc_verify_error_string@@Base+0x34c>
  40bd06:	add    rsp,0x30
  40bd0a:	pop    rbx
  40bd0b:	pop    r12
  40bd0d:	pop    rbp
  40bd0e:	ret    

000000000040bd0f <flatcc_verify_struct_as_typed_root@@Base>:
  40bd0f:	push   rbp
  40bd10:	mov    rbp,rsp
  40bd13:	push   r12
  40bd15:	push   rbx
  40bd16:	sub    rsp,0x20
  40bd1a:	mov    QWORD PTR [rbp-0x18],rdi
  40bd1e:	mov    QWORD PTR [rbp-0x20],rsi
  40bd22:	mov    DWORD PTR [rbp-0x24],edx
  40bd25:	mov    QWORD PTR [rbp-0x30],rcx
  40bd29:	mov    eax,r8d
  40bd2c:	mov    WORD PTR [rbp-0x28],ax
  40bd30:	mov    edx,DWORD PTR [rbp-0x24]
  40bd33:	mov    rcx,QWORD PTR [rbp-0x20]
  40bd37:	mov    rax,QWORD PTR [rbp-0x18]
  40bd3b:	mov    rsi,rcx
  40bd3e:	mov    rdi,rax
  40bd41:	call   40bbbb <flatcc_verify_typed_buffer_header@@Base>
  40bd46:	test   eax,eax
  40bd48:	je     40bd62 <flatcc_verify_struct_as_typed_root@@Base+0x53>
  40bd4a:	mov    edx,DWORD PTR [rbp-0x24]
  40bd4d:	mov    rcx,QWORD PTR [rbp-0x20]
  40bd51:	mov    rax,QWORD PTR [rbp-0x18]
  40bd55:	mov    rsi,rcx
  40bd58:	mov    rdi,rax
  40bd5b:	call   40bbbb <flatcc_verify_typed_buffer_header@@Base>
  40bd60:	jmp    40bd96 <flatcc_verify_struct_as_typed_root@@Base+0x87>
  40bd62:	movzx  ebx,WORD PTR [rbp-0x28]
  40bd66:	mov    rax,QWORD PTR [rbp-0x30]
  40bd6a:	mov    r12d,eax
  40bd6d:	mov    rax,QWORD PTR [rbp-0x18]
  40bd71:	mov    esi,0x0
  40bd76:	mov    rdi,rax
  40bd79:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40bd7e:	mov    edx,eax
  40bd80:	mov    rax,QWORD PTR [rbp-0x20]
  40bd84:	mov    r8d,ebx
  40bd87:	mov    ecx,r12d
  40bd8a:	mov    esi,0x0
  40bd8f:	mov    edi,eax
  40bd91:	call   40abb9 <flatcc_verify_error_string@@Base+0x34c>
  40bd96:	add    rsp,0x20
  40bd9a:	pop    rbx
  40bd9b:	pop    r12
  40bd9d:	pop    rbp
  40bd9e:	ret    

000000000040bd9f <flatcc_verify_table_as_root@@Base>:
  40bd9f:	push   rbp
  40bda0:	mov    rbp,rsp
  40bda3:	sub    rsp,0x20
  40bda7:	mov    QWORD PTR [rbp-0x8],rdi
  40bdab:	mov    QWORD PTR [rbp-0x10],rsi
  40bdaf:	mov    QWORD PTR [rbp-0x18],rdx
  40bdb3:	mov    QWORD PTR [rbp-0x20],rcx
  40bdb7:	mov    rax,QWORD PTR [rbp-0x10]
  40bdbb:	mov    ecx,eax
  40bdbd:	mov    rdx,QWORD PTR [rbp-0x18]
  40bdc1:	mov    rax,QWORD PTR [rbp-0x8]
  40bdc5:	mov    rsi,rcx
  40bdc8:	mov    rdi,rax
  40bdcb:	call   40baef <flatcc_verify_buffer_header@@Base>
  40bdd0:	test   eax,eax
  40bdd2:	je     40bdef <flatcc_verify_table_as_root@@Base+0x50>
  40bdd4:	mov    rax,QWORD PTR [rbp-0x10]
  40bdd8:	mov    ecx,eax
  40bdda:	mov    rdx,QWORD PTR [rbp-0x18]
  40bdde:	mov    rax,QWORD PTR [rbp-0x8]
  40bde2:	mov    rsi,rcx
  40bde5:	mov    rdi,rax
  40bde8:	call   40baef <flatcc_verify_buffer_header@@Base>
  40bded:	jmp    40be26 <flatcc_verify_table_as_root@@Base+0x87>
  40bdef:	mov    rax,QWORD PTR [rbp-0x8]
  40bdf3:	mov    esi,0x0
  40bdf8:	mov    rdi,rax
  40bdfb:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40be00:	mov    ecx,eax
  40be02:	mov    rax,QWORD PTR [rbp-0x10]
  40be06:	mov    esi,eax
  40be08:	mov    rdx,QWORD PTR [rbp-0x20]
  40be0c:	mov    rax,QWORD PTR [rbp-0x8]
  40be10:	mov    r9,rdx
  40be13:	mov    r8d,0x64
  40be19:	mov    edx,0x0
  40be1e:	mov    rdi,rax
  40be21:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40be26:	leave  
  40be27:	ret    

000000000040be28 <flatcc_verify_table_as_typed_root@@Base>:
  40be28:	push   rbp
  40be29:	mov    rbp,rsp
  40be2c:	sub    rsp,0x20
  40be30:	mov    QWORD PTR [rbp-0x8],rdi
  40be34:	mov    QWORD PTR [rbp-0x10],rsi
  40be38:	mov    DWORD PTR [rbp-0x14],edx
  40be3b:	mov    QWORD PTR [rbp-0x20],rcx
  40be3f:	mov    rax,QWORD PTR [rbp-0x10]
  40be43:	mov    ecx,eax
  40be45:	mov    edx,DWORD PTR [rbp-0x14]
  40be48:	mov    rax,QWORD PTR [rbp-0x8]
  40be4c:	mov    rsi,rcx
  40be4f:	mov    rdi,rax
  40be52:	call   40bbbb <flatcc_verify_typed_buffer_header@@Base>
  40be57:	test   eax,eax
  40be59:	je     40be75 <flatcc_verify_table_as_typed_root@@Base+0x4d>
  40be5b:	mov    rax,QWORD PTR [rbp-0x10]
  40be5f:	mov    ecx,eax
  40be61:	mov    edx,DWORD PTR [rbp-0x14]
  40be64:	mov    rax,QWORD PTR [rbp-0x8]
  40be68:	mov    rsi,rcx
  40be6b:	mov    rdi,rax
  40be6e:	call   40bbbb <flatcc_verify_typed_buffer_header@@Base>
  40be73:	jmp    40beac <flatcc_verify_table_as_typed_root@@Base+0x84>
  40be75:	mov    rax,QWORD PTR [rbp-0x8]
  40be79:	mov    esi,0x0
  40be7e:	mov    rdi,rax
  40be81:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40be86:	mov    ecx,eax
  40be88:	mov    rax,QWORD PTR [rbp-0x10]
  40be8c:	mov    esi,eax
  40be8e:	mov    rdx,QWORD PTR [rbp-0x20]
  40be92:	mov    rax,QWORD PTR [rbp-0x8]
  40be96:	mov    r9,rdx
  40be99:	mov    r8d,0x64
  40be9f:	mov    edx,0x0
  40bea4:	mov    rdi,rax
  40bea7:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40beac:	leave  
  40bead:	ret    

000000000040beae <flatcc_verify_struct_as_nested_root@@Base>:
  40beae:	push   rbp
  40beaf:	mov    rbp,rsp
  40beb2:	sub    rsp,0x40
  40beb6:	mov    QWORD PTR [rbp-0x18],rdi
  40beba:	mov    eax,esi
  40bebc:	mov    DWORD PTR [rbp-0x20],edx
  40bebf:	mov    QWORD PTR [rbp-0x28],rcx
  40bec3:	mov    QWORD PTR [rbp-0x30],r8
  40bec7:	mov    edx,r9d
  40beca:	mov    WORD PTR [rbp-0x1c],ax
  40bece:	mov    WORD PTR [rbp-0x34],dx
  40bed2:	movzx  ecx,WORD PTR [rbp-0x34]
  40bed6:	movzx  esi,WORD PTR [rbp-0x1c]
  40beda:	mov    edx,DWORD PTR [rbp-0x20]
  40bedd:	mov    rax,QWORD PTR [rbp-0x18]
  40bee1:	mov    r9d,0xffffffff
  40bee7:	mov    r8d,0x1
  40beed:	mov    rdi,rax
  40bef0:	call   40b76a <flatcc_verify_vector_field@@Base>
  40bef5:	test   eax,eax
  40bef7:	je     40bf1e <flatcc_verify_struct_as_nested_root@@Base+0x70>
  40bef9:	movzx  ecx,WORD PTR [rbp-0x34]
  40befd:	movzx  esi,WORD PTR [rbp-0x1c]
  40bf01:	mov    edx,DWORD PTR [rbp-0x20]
  40bf04:	mov    rax,QWORD PTR [rbp-0x18]
  40bf08:	mov    r9d,0xffffffff
  40bf0e:	mov    r8d,0x1
  40bf14:	mov    rdi,rax
  40bf17:	call   40b76a <flatcc_verify_vector_field@@Base>
  40bf1c:	jmp    40bf97 <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  40bf1e:	movzx  edx,WORD PTR [rbp-0x1c]
  40bf22:	mov    rax,QWORD PTR [rbp-0x18]
  40bf26:	mov    esi,edx
  40bf28:	mov    rdi,rax
  40bf2b:	call   40acac <flatcc_verify_error_string@@Base+0x43f>
  40bf30:	mov    QWORD PTR [rbp-0x8],rax
  40bf34:	cmp    QWORD PTR [rbp-0x8],0x0
  40bf39:	jne    40bf42 <flatcc_verify_struct_as_nested_root@@Base+0x94>
  40bf3b:	mov    eax,0x0
  40bf40:	jmp    40bf97 <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  40bf42:	mov    rax,QWORD PTR [rbp-0x8]
  40bf46:	mov    esi,0x0
  40bf4b:	mov    rdi,rax
  40bf4e:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40bf53:	mov    edx,eax
  40bf55:	mov    rax,QWORD PTR [rbp-0x8]
  40bf59:	add    rax,rdx
  40bf5c:	mov    QWORD PTR [rbp-0x8],rax
  40bf60:	mov    rax,QWORD PTR [rbp-0x8]
  40bf64:	mov    esi,0x0
  40bf69:	mov    rdi,rax
  40bf6c:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40bf71:	mov    DWORD PTR [rbp-0xc],eax
  40bf74:	add    QWORD PTR [rbp-0x8],0x4
  40bf79:	movzx  edi,WORD PTR [rbp-0x34]
  40bf7d:	mov    esi,DWORD PTR [rbp-0xc]
  40bf80:	mov    rcx,QWORD PTR [rbp-0x30]
  40bf84:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf88:	mov    rax,QWORD PTR [rbp-0x8]
  40bf8c:	mov    r8d,edi
  40bf8f:	mov    rdi,rax
  40bf92:	call   40bc7c <flatcc_verify_struct_as_root@@Base>
  40bf97:	leave  
  40bf98:	ret    

000000000040bf99 <flatcc_verify_table_as_nested_root@@Base>:
  40bf99:	push   rbp
  40bf9a:	mov    rbp,rsp
  40bf9d:	push   rbx
  40bf9e:	sub    rsp,0x48
  40bfa2:	mov    QWORD PTR [rbp-0x28],rdi
  40bfa6:	mov    eax,esi
  40bfa8:	mov    DWORD PTR [rbp-0x30],edx
  40bfab:	mov    QWORD PTR [rbp-0x38],rcx
  40bfaf:	mov    edx,r8d
  40bfb2:	mov    QWORD PTR [rbp-0x48],r9
  40bfb6:	mov    WORD PTR [rbp-0x2c],ax
  40bfba:	mov    WORD PTR [rbp-0x3c],dx
  40bfbe:	movzx  ecx,WORD PTR [rbp-0x3c]
  40bfc2:	movzx  esi,WORD PTR [rbp-0x2c]
  40bfc6:	mov    edx,DWORD PTR [rbp-0x30]
  40bfc9:	mov    rax,QWORD PTR [rbp-0x28]
  40bfcd:	mov    r9d,0xffffffff
  40bfd3:	mov    r8d,0x1
  40bfd9:	mov    rdi,rax
  40bfdc:	call   40b76a <flatcc_verify_vector_field@@Base>
  40bfe1:	test   eax,eax
  40bfe3:	je     40c00d <flatcc_verify_table_as_nested_root@@Base+0x74>
  40bfe5:	movzx  ecx,WORD PTR [rbp-0x3c]
  40bfe9:	movzx  esi,WORD PTR [rbp-0x2c]
  40bfed:	mov    edx,DWORD PTR [rbp-0x30]
  40bff0:	mov    rax,QWORD PTR [rbp-0x28]
  40bff4:	mov    r9d,0xffffffff
  40bffa:	mov    r8d,0x1
  40c000:	mov    rdi,rax
  40c003:	call   40b76a <flatcc_verify_vector_field@@Base>
  40c008:	jmp    40c0d5 <flatcc_verify_table_as_nested_root@@Base+0x13c>
  40c00d:	movzx  edx,WORD PTR [rbp-0x2c]
  40c011:	mov    rax,QWORD PTR [rbp-0x28]
  40c015:	mov    esi,edx
  40c017:	mov    rdi,rax
  40c01a:	call   40acac <flatcc_verify_error_string@@Base+0x43f>
  40c01f:	mov    QWORD PTR [rbp-0x18],rax
  40c023:	cmp    QWORD PTR [rbp-0x18],0x0
  40c028:	jne    40c034 <flatcc_verify_table_as_nested_root@@Base+0x9b>
  40c02a:	mov    eax,0x0
  40c02f:	jmp    40c0d5 <flatcc_verify_table_as_nested_root@@Base+0x13c>
  40c034:	mov    rax,QWORD PTR [rbp-0x18]
  40c038:	mov    esi,0x0
  40c03d:	mov    rdi,rax
  40c040:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c045:	mov    edx,eax
  40c047:	mov    rax,QWORD PTR [rbp-0x18]
  40c04b:	add    rax,rdx
  40c04e:	mov    QWORD PTR [rbp-0x18],rax
  40c052:	mov    rax,QWORD PTR [rbp-0x18]
  40c056:	mov    esi,0x0
  40c05b:	mov    rdi,rax
  40c05e:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c063:	mov    DWORD PTR [rbp-0x1c],eax
  40c066:	add    QWORD PTR [rbp-0x18],0x4
  40c06b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c06e:	mov    rdx,QWORD PTR [rbp-0x38]
  40c072:	mov    rax,QWORD PTR [rbp-0x18]
  40c076:	mov    rsi,rcx
  40c079:	mov    rdi,rax
  40c07c:	call   40baef <flatcc_verify_buffer_header@@Base>
  40c081:	test   eax,eax
  40c083:	je     40c09d <flatcc_verify_table_as_nested_root@@Base+0x104>
  40c085:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c088:	mov    rdx,QWORD PTR [rbp-0x38]
  40c08c:	mov    rax,QWORD PTR [rbp-0x18]
  40c090:	mov    rsi,rcx
  40c093:	mov    rdi,rax
  40c096:	call   40baef <flatcc_verify_buffer_header@@Base>
  40c09b:	jmp    40c0d5 <flatcc_verify_table_as_nested_root@@Base+0x13c>
  40c09d:	mov    rax,QWORD PTR [rbp-0x28]
  40c0a1:	mov    ebx,DWORD PTR [rax+0xc]
  40c0a4:	mov    rax,QWORD PTR [rbp-0x18]
  40c0a8:	mov    esi,0x0
  40c0ad:	mov    rdi,rax
  40c0b0:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c0b5:	mov    ecx,eax
  40c0b7:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0bb:	mov    esi,DWORD PTR [rbp-0x1c]
  40c0be:	mov    rax,QWORD PTR [rbp-0x18]
  40c0c2:	mov    r9,rdx
  40c0c5:	mov    r8d,ebx
  40c0c8:	mov    edx,0x0
  40c0cd:	mov    rdi,rax
  40c0d0:	call   40b11c <flatcc_verify_error_string@@Base+0x8af>
  40c0d5:	add    rsp,0x48
  40c0d9:	pop    rbx
  40c0da:	pop    rbp
  40c0db:	ret    

000000000040c0dc <flatcc_verify_union_field@@Base>:
  40c0dc:	push   rbp
  40c0dd:	mov    rbp,rsp
  40c0e0:	sub    rsp,0x70
  40c0e4:	mov    QWORD PTR [rbp-0x58],rdi
  40c0e8:	mov    eax,esi
  40c0ea:	mov    DWORD PTR [rbp-0x60],edx
  40c0ed:	mov    QWORD PTR [rbp-0x68],rcx
  40c0f1:	mov    WORD PTR [rbp-0x5c],ax
  40c0f5:	mov    rax,QWORD PTR fs:0x28
  40c0fe:	mov    QWORD PTR [rbp-0x8],rax
  40c102:	xor    eax,eax
  40c104:	movzx  eax,WORD PTR [rbp-0x5c]
  40c108:	sub    eax,0x1
  40c10b:	movzx  edx,ax
  40c10e:	mov    rax,QWORD PTR [rbp-0x58]
  40c112:	mov    esi,edx
  40c114:	mov    rdi,rax
  40c117:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40c11c:	mov    WORD PTR [rbp-0x50],ax
  40c120:	cmp    WORD PTR [rbp-0x50],0x0
  40c125:	jne    40c182 <flatcc_verify_union_field@@Base+0xa6>
  40c127:	movzx  edx,WORD PTR [rbp-0x5c]
  40c12b:	mov    rax,QWORD PTR [rbp-0x58]
  40c12f:	mov    esi,edx
  40c131:	mov    rdi,rax
  40c134:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40c139:	mov    WORD PTR [rbp-0x4e],ax
  40c13d:	cmp    WORD PTR [rbp-0x4e],0x0
  40c142:	sete   al
  40c145:	movzx  eax,al
  40c148:	mov    DWORD PTR [rbp-0x48],eax
  40c14b:	cmp    DWORD PTR [rbp-0x48],0x0
  40c14f:	jne    40c15b <flatcc_verify_union_field@@Base+0x7f>
  40c151:	mov    eax,0x17
  40c156:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c15b:	cmp    DWORD PTR [rbp-0x60],0x0
  40c15f:	sete   al
  40c162:	movzx  eax,al
  40c165:	mov    DWORD PTR [rbp-0x44],eax
  40c168:	cmp    DWORD PTR [rbp-0x44],0x0
  40c16c:	jne    40c178 <flatcc_verify_union_field@@Base+0x9c>
  40c16e:	mov    eax,0x15
  40c173:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c178:	mov    eax,0x0
  40c17d:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c182:	movzx  eax,WORD PTR [rbp-0x5c]
  40c186:	sub    eax,0x1
  40c189:	movzx  esi,ax
  40c18c:	mov    rax,QWORD PTR [rbp-0x58]
  40c190:	mov    r8d,0x1
  40c196:	mov    ecx,0x1
  40c19b:	mov    edx,0x0
  40c1a0:	mov    rdi,rax
  40c1a3:	call   40acfe <flatcc_verify_error_string@@Base+0x491>
  40c1a8:	test   eax,eax
  40c1aa:	je     40c1d7 <flatcc_verify_union_field@@Base+0xfb>
  40c1ac:	movzx  eax,WORD PTR [rbp-0x5c]
  40c1b0:	sub    eax,0x1
  40c1b3:	movzx  esi,ax
  40c1b6:	mov    rax,QWORD PTR [rbp-0x58]
  40c1ba:	mov    r8d,0x1
  40c1c0:	mov    ecx,0x1
  40c1c5:	mov    edx,0x0
  40c1ca:	mov    rdi,rax
  40c1cd:	call   40acfe <flatcc_verify_error_string@@Base+0x491>
  40c1d2:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c1d7:	movzx  edx,WORD PTR [rbp-0x5c]
  40c1db:	mov    rax,QWORD PTR [rbp-0x58]
  40c1df:	mov    esi,edx
  40c1e1:	mov    rdi,rax
  40c1e4:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40c1e9:	mov    WORD PTR [rbp-0x4e],ax
  40c1ed:	mov    rax,QWORD PTR [rbp-0x58]
  40c1f1:	mov    rdx,QWORD PTR [rax]
  40c1f4:	mov    rax,QWORD PTR [rbp-0x58]
  40c1f8:	mov    eax,DWORD PTR [rax+0x18]
  40c1fb:	mov    ecx,eax
  40c1fd:	movzx  eax,WORD PTR [rbp-0x50]
  40c201:	add    rax,rcx
  40c204:	add    rax,rdx
  40c207:	mov    QWORD PTR [rbp-0x38],rax
  40c20b:	mov    rax,QWORD PTR [rbp-0x38]
  40c20f:	movzx  eax,BYTE PTR [rax]
  40c212:	test   al,al
  40c214:	jne    40c21d <flatcc_verify_union_field@@Base+0x141>
  40c216:	cmp    WORD PTR [rbp-0x4e],0x0
  40c21b:	jne    40c224 <flatcc_verify_union_field@@Base+0x148>
  40c21d:	mov    eax,0x1
  40c222:	jmp    40c229 <flatcc_verify_union_field@@Base+0x14d>
  40c224:	mov    eax,0x0
  40c229:	mov    DWORD PTR [rbp-0x40],eax
  40c22c:	cmp    DWORD PTR [rbp-0x40],0x0
  40c230:	jne    40c23c <flatcc_verify_union_field@@Base+0x160>
  40c232:	mov    eax,0x18
  40c237:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c23c:	mov    rax,QWORD PTR [rbp-0x38]
  40c240:	movzx  eax,BYTE PTR [rax]
  40c243:	test   al,al
  40c245:	jne    40c24e <flatcc_verify_union_field@@Base+0x172>
  40c247:	mov    eax,0x0
  40c24c:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c24e:	movzx  esi,WORD PTR [rbp-0x5c]
  40c252:	lea    rcx,[rbp-0x4c]
  40c256:	mov    edx,DWORD PTR [rbp-0x60]
  40c259:	mov    rax,QWORD PTR [rbp-0x58]
  40c25d:	mov    rdi,rax
  40c260:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40c265:	mov    DWORD PTR [rbp-0x3c],eax
  40c268:	cmp    DWORD PTR [rbp-0x3c],0x0
  40c26c:	jne    40c275 <flatcc_verify_union_field@@Base+0x199>
  40c26e:	mov    eax,DWORD PTR [rbp-0x4c]
  40c271:	test   eax,eax
  40c273:	jne    40c27a <flatcc_verify_union_field@@Base+0x19e>
  40c275:	mov    eax,DWORD PTR [rbp-0x3c]
  40c278:	jmp    40c2cd <flatcc_verify_union_field@@Base+0x1f1>
  40c27a:	mov    rax,QWORD PTR [rbp-0x58]
  40c27e:	mov    rax,QWORD PTR [rax]
  40c281:	mov    QWORD PTR [rbp-0x30],rax
  40c285:	mov    rax,QWORD PTR [rbp-0x58]
  40c289:	mov    eax,DWORD PTR [rax+0x8]
  40c28c:	mov    DWORD PTR [rbp-0x28],eax
  40c28f:	mov    rax,QWORD PTR [rbp-0x58]
  40c293:	mov    eax,DWORD PTR [rax+0xc]
  40c296:	mov    DWORD PTR [rbp-0x24],eax
  40c299:	mov    eax,DWORD PTR [rbp-0x4c]
  40c29c:	mov    DWORD PTR [rbp-0x1c],eax
  40c29f:	mov    edx,DWORD PTR [rbp-0x4c]
  40c2a2:	mov    rax,QWORD PTR [rbp-0x58]
  40c2a6:	mov    rax,QWORD PTR [rax]
  40c2a9:	mov    esi,edx
  40c2ab:	mov    rdi,rax
  40c2ae:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c2b3:	mov    DWORD PTR [rbp-0x18],eax
  40c2b6:	mov    rax,QWORD PTR [rbp-0x38]
  40c2ba:	movzx  eax,BYTE PTR [rax]
  40c2bd:	mov    BYTE PTR [rbp-0x20],al
  40c2c0:	lea    rdx,[rbp-0x30]
  40c2c4:	mov    rax,QWORD PTR [rbp-0x68]
  40c2c8:	mov    rdi,rdx
  40c2cb:	call   rax
  40c2cd:	mov    rcx,QWORD PTR [rbp-0x8]
  40c2d1:	xor    rcx,QWORD PTR fs:0x28
  40c2da:	je     40c2e1 <flatcc_verify_union_field@@Base+0x205>
  40c2dc:	call   403060 <__stack_chk_fail@plt>
  40c2e1:	leave  
  40c2e2:	ret    

000000000040c2e3 <flatcc_verify_union_vector_field@@Base>:
  40c2e3:	push   rbp
  40c2e4:	mov    rbp,rsp
  40c2e7:	push   rbx
  40c2e8:	sub    rsp,0x58
  40c2ec:	mov    QWORD PTR [rbp-0x48],rdi
  40c2f0:	mov    eax,esi
  40c2f2:	mov    DWORD PTR [rbp-0x50],edx
  40c2f5:	mov    QWORD PTR [rbp-0x58],rcx
  40c2f9:	mov    WORD PTR [rbp-0x4c],ax
  40c2fd:	mov    rax,QWORD PTR fs:0x28
  40c306:	mov    QWORD PTR [rbp-0x18],rax
  40c30a:	xor    eax,eax
  40c30c:	movzx  eax,WORD PTR [rbp-0x4c]
  40c310:	sub    eax,0x1
  40c313:	movzx  edx,ax
  40c316:	mov    rax,QWORD PTR [rbp-0x48]
  40c31a:	mov    esi,edx
  40c31c:	mov    rdi,rax
  40c31f:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40c324:	mov    WORD PTR [rbp-0x3c],ax
  40c328:	cmp    WORD PTR [rbp-0x3c],0x0
  40c32d:	jne    40c369 <flatcc_verify_union_vector_field@@Base+0x86>
  40c32f:	movzx  edx,WORD PTR [rbp-0x4c]
  40c333:	mov    rax,QWORD PTR [rbp-0x48]
  40c337:	mov    esi,edx
  40c339:	mov    rdi,rax
  40c33c:	call   40ac5b <flatcc_verify_error_string@@Base+0x3ee>
  40c341:	mov    WORD PTR [rbp-0x3a],ax
  40c345:	cmp    WORD PTR [rbp-0x3a],0x0
  40c34a:	jne    40c369 <flatcc_verify_union_vector_field@@Base+0x86>
  40c34c:	cmp    DWORD PTR [rbp-0x50],0x0
  40c350:	sete   al
  40c353:	movzx  eax,al
  40c356:	mov    DWORD PTR [rbp-0x34],eax
  40c359:	cmp    DWORD PTR [rbp-0x34],0x0
  40c35d:	jne    40c369 <flatcc_verify_union_vector_field@@Base+0x86>
  40c35f:	mov    eax,0x16
  40c364:	jmp    40c4ad <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c369:	movzx  eax,WORD PTR [rbp-0x4c]
  40c36d:	sub    eax,0x1
  40c370:	movzx  esi,ax
  40c373:	mov    edx,DWORD PTR [rbp-0x50]
  40c376:	mov    rax,QWORD PTR [rbp-0x48]
  40c37a:	mov    r9d,0xffffffff
  40c380:	mov    r8d,0x1
  40c386:	mov    ecx,0x1
  40c38b:	mov    rdi,rax
  40c38e:	call   40b76a <flatcc_verify_vector_field@@Base>
  40c393:	test   eax,eax
  40c395:	je     40c3c6 <flatcc_verify_union_vector_field@@Base+0xe3>
  40c397:	movzx  eax,WORD PTR [rbp-0x4c]
  40c39b:	sub    eax,0x1
  40c39e:	movzx  esi,ax
  40c3a1:	mov    edx,DWORD PTR [rbp-0x50]
  40c3a4:	mov    rax,QWORD PTR [rbp-0x48]
  40c3a8:	mov    r9d,0xffffffff
  40c3ae:	mov    r8d,0x1
  40c3b4:	mov    ecx,0x1
  40c3b9:	mov    rdi,rax
  40c3bc:	call   40b76a <flatcc_verify_vector_field@@Base>
  40c3c1:	jmp    40c4ad <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c3c6:	movzx  eax,WORD PTR [rbp-0x4c]
  40c3ca:	sub    eax,0x1
  40c3cd:	movzx  edx,ax
  40c3d0:	mov    rax,QWORD PTR [rbp-0x48]
  40c3d4:	mov    esi,edx
  40c3d6:	mov    rdi,rax
  40c3d9:	call   40acac <flatcc_verify_error_string@@Base+0x43f>
  40c3de:	mov    QWORD PTR [rbp-0x28],rax
  40c3e2:	cmp    QWORD PTR [rbp-0x28],0x0
  40c3e7:	jne    40c3f3 <flatcc_verify_union_vector_field@@Base+0x110>
  40c3e9:	mov    eax,0x0
  40c3ee:	jmp    40c4ad <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c3f3:	mov    rax,QWORD PTR [rbp-0x28]
  40c3f7:	mov    esi,0x0
  40c3fc:	mov    rdi,rax
  40c3ff:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c404:	mov    edx,eax
  40c406:	mov    rax,QWORD PTR [rbp-0x28]
  40c40a:	add    rax,rdx
  40c40d:	mov    QWORD PTR [rbp-0x28],rax
  40c411:	mov    rax,QWORD PTR [rbp-0x28]
  40c415:	mov    esi,0x0
  40c41a:	mov    rdi,rax
  40c41d:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c422:	mov    DWORD PTR [rbp-0x30],eax
  40c425:	add    QWORD PTR [rbp-0x28],0x4
  40c42a:	mov    rax,QWORD PTR [rbp-0x28]
  40c42e:	mov    QWORD PTR [rbp-0x20],rax
  40c432:	movzx  esi,WORD PTR [rbp-0x4c]
  40c436:	lea    rcx,[rbp-0x38]
  40c43a:	mov    edx,DWORD PTR [rbp-0x50]
  40c43d:	mov    rax,QWORD PTR [rbp-0x48]
  40c441:	mov    rdi,rax
  40c444:	call   40aded <flatcc_verify_error_string@@Base+0x580>
  40c449:	mov    DWORD PTR [rbp-0x2c],eax
  40c44c:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c450:	jne    40c459 <flatcc_verify_union_vector_field@@Base+0x176>
  40c452:	mov    eax,DWORD PTR [rbp-0x38]
  40c455:	test   eax,eax
  40c457:	jne    40c45e <flatcc_verify_union_vector_field@@Base+0x17b>
  40c459:	mov    eax,DWORD PTR [rbp-0x2c]
  40c45c:	jmp    40c4ad <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c45e:	mov    rax,QWORD PTR [rbp-0x48]
  40c462:	mov    ebx,DWORD PTR [rax+0xc]
  40c465:	mov    edx,DWORD PTR [rbp-0x38]
  40c468:	mov    rax,QWORD PTR [rbp-0x48]
  40c46c:	mov    rax,QWORD PTR [rax]
  40c46f:	mov    esi,edx
  40c471:	mov    rdi,rax
  40c474:	call   40aa3d <flatcc_verify_error_string@@Base+0x1d0>
  40c479:	mov    r10d,eax
  40c47c:	mov    edx,DWORD PTR [rbp-0x38]
  40c47f:	mov    rax,QWORD PTR [rbp-0x48]
  40c483:	mov    esi,DWORD PTR [rax+0x8]
  40c486:	mov    rax,QWORD PTR [rbp-0x48]
  40c48a:	mov    rax,QWORD PTR [rax]
  40c48d:	mov    rdi,QWORD PTR [rbp-0x20]
  40c491:	mov    ecx,DWORD PTR [rbp-0x30]
  40c494:	push   QWORD PTR [rbp-0x58]
  40c497:	push   rbx
  40c498:	mov    r9,rdi
  40c49b:	mov    r8d,ecx
  40c49e:	mov    ecx,r10d
  40c4a1:	mov    rdi,rax
  40c4a4:	call   40b489 <flatcc_verify_error_string@@Base+0xc1c>
  40c4a9:	add    rsp,0x10
  40c4ad:	mov    rbx,QWORD PTR [rbp-0x18]
  40c4b1:	xor    rbx,QWORD PTR fs:0x28
  40c4ba:	je     40c4c1 <flatcc_verify_union_vector_field@@Base+0x1de>
  40c4bc:	call   403060 <__stack_chk_fail@plt>
  40c4c1:	mov    rbx,QWORD PTR [rbp-0x8]
  40c4c5:	leave  
  40c4c6:	ret    
  40c4c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c4d0 <__libc_csu_init@@Base>:
  40c4d0:	endbr64 
  40c4d4:	push   r15
  40c4d6:	lea    r15,[rip+0x592b]        # 411e08 <flatcc_builder_padding_base@@Base+0x4c48>
  40c4dd:	push   r14
  40c4df:	mov    r14,rdx
  40c4e2:	push   r13
  40c4e4:	mov    r13,rsi
  40c4e7:	push   r12
  40c4e9:	mov    r12d,edi
  40c4ec:	push   rbp
  40c4ed:	lea    rbp,[rip+0x591c]        # 411e10 <flatcc_builder_padding_base@@Base+0x4c50>
  40c4f4:	push   rbx
  40c4f5:	sub    rbp,r15
  40c4f8:	sub    rsp,0x8
  40c4fc:	call   403000 <free@plt-0x30>
  40c501:	sar    rbp,0x3
  40c505:	je     40c526 <__libc_csu_init@@Base+0x56>
  40c507:	xor    ebx,ebx
  40c509:	nop    DWORD PTR [rax+0x0]
  40c510:	mov    rdx,r14
  40c513:	mov    rsi,r13
  40c516:	mov    edi,r12d
  40c519:	call   QWORD PTR [r15+rbx*8]
  40c51d:	add    rbx,0x1
  40c521:	cmp    rbp,rbx
  40c524:	jne    40c510 <__libc_csu_init@@Base+0x40>
  40c526:	add    rsp,0x8
  40c52a:	pop    rbx
  40c52b:	pop    rbp
  40c52c:	pop    r12
  40c52e:	pop    r13
  40c530:	pop    r14
  40c532:	pop    r15
  40c534:	ret    
  40c535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040c540 <__libc_csu_fini@@Base>:
  40c540:	endbr64 
  40c544:	ret    

Disassembly of section .fini:

000000000040c548 <.fini>:
  40c548:	endbr64 
  40c54c:	sub    rsp,0x8
  40c550:	add    rsp,0x8
  40c554:	ret    
