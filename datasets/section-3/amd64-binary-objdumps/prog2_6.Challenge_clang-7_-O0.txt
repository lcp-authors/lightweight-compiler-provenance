
../repos/prog2/6.Challenge:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <printf@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <printf@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <printf@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <printf@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <printf@plt-0x10>

0000000000401040 <malloc@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <malloc@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <printf@plt-0x10>

0000000000401050 <__isoc99_scanf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  401056:	push   0x2
  40105b:	jmp    401020 <printf@plt-0x10>

0000000000401060 <exit@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <exit@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <printf@plt-0x10>

Disassembly of section .text:

0000000000401070 <_start@@Base>:
  401070:	endbr64 
  401074:	xor    ebp,ebp
  401076:	mov    r9,rdx
  401079:	pop    rsi
  40107a:	mov    rdx,rsp
  40107d:	and    rsp,0xfffffffffffffff0
  401081:	push   rax
  401082:	push   rsp
  401083:	mov    r8,0x401340
  40108a:	mov    rcx,0x4012d0
  401091:	mov    rdi,0x401160
  401098:	call   QWORD PTR [rip+0x2f52]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40109e:	hlt    
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	ret    
  4010a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010af:	nop
  4010b0:	mov    eax,0x404048
  4010b5:	cmp    rax,0x404048
  4010bb:	je     4010d0 <_start@@Base+0x60>
  4010bd:	mov    eax,0x0
  4010c2:	test   rax,rax
  4010c5:	je     4010d0 <_start@@Base+0x60>
  4010c7:	mov    edi,0x404048
  4010cc:	jmp    rax
  4010ce:	xchg   ax,ax
  4010d0:	ret    
  4010d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010dc:	nop    DWORD PTR [rax+0x0]
  4010e0:	mov    esi,0x404048
  4010e5:	sub    rsi,0x404048
  4010ec:	mov    rax,rsi
  4010ef:	shr    rsi,0x3f
  4010f3:	sar    rax,0x3
  4010f7:	add    rsi,rax
  4010fa:	sar    rsi,1
  4010fd:	je     401110 <_start@@Base+0xa0>
  4010ff:	mov    eax,0x0
  401104:	test   rax,rax
  401107:	je     401110 <_start@@Base+0xa0>
  401109:	mov    edi,0x404048
  40110e:	jmp    rax
  401110:	ret    
  401111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40111c:	nop    DWORD PTR [rax+0x0]
  401120:	endbr64 
  401124:	cmp    BYTE PTR [rip+0x2f1d],0x0        # 404048 <__bss_start@@Base>
  40112b:	jne    401140 <_start@@Base+0xd0>
  40112d:	push   rbp
  40112e:	mov    rbp,rsp
  401131:	call   4010b0 <_start@@Base+0x40>
  401136:	mov    BYTE PTR [rip+0x2f0b],0x1        # 404048 <__bss_start@@Base>
  40113d:	pop    rbp
  40113e:	ret    
  40113f:	nop
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	jmp    4010e0 <_start@@Base+0x70>
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401160 <main@@Base>:
  401160:	push   rbp
  401161:	mov    rbp,rsp
  401164:	sub    rsp,0x40
  401168:	mov    DWORD PTR [rbp-0x4],0x0
  40116f:	lea    rdi,[rip+0xe8e]        # 402004 <_IO_stdin_used@@Base+0x4>
  401176:	lea    rsi,[rbp-0x8]
  40117a:	mov    al,0x0
  40117c:	call   401050 <__isoc99_scanf@plt>
  401181:	cmp    DWORD PTR [rbp-0x8],0x0
  401185:	mov    DWORD PTR [rbp-0x28],eax
  401188:	jne    401195 <main@@Base+0x35>
  40118e:	xor    edi,edi
  401190:	call   401060 <exit@plt>
  401195:	mov    eax,DWORD PTR [rbp-0x8]
  401198:	shl    eax,0x1
  40119b:	movsxd rcx,eax
  40119e:	shl    rcx,0x2
  4011a2:	mov    rdi,rcx
  4011a5:	call   401040 <malloc@plt>
  4011aa:	mov    QWORD PTR [rbp-0x20],rax
  4011ae:	mov    DWORD PTR [rbp-0x10],0x0
  4011b5:	mov    edx,DWORD PTR [rbp-0x8]
  4011b8:	sub    edx,0x1
  4011bb:	mov    DWORD PTR [rbp-0x14],edx
  4011be:	mov    DWORD PTR [rbp-0xc],0x0
  4011c5:	mov    eax,DWORD PTR [rbp-0xc]
  4011c8:	cmp    eax,DWORD PTR [rbp-0x8]
  4011cb:	jge    4011f0 <main@@Base+0x90>
  4011d1:	mov    eax,DWORD PTR [rbp-0xc]
  4011d4:	add    eax,0x1
  4011d7:	mov    rcx,QWORD PTR [rbp-0x20]
  4011db:	movsxd rdx,DWORD PTR [rbp-0xc]
  4011df:	mov    DWORD PTR [rcx+rdx*4],eax
  4011e2:	mov    eax,DWORD PTR [rbp-0xc]
  4011e5:	add    eax,0x1
  4011e8:	mov    DWORD PTR [rbp-0xc],eax
  4011eb:	jmp    4011c5 <main@@Base+0x65>
  4011f0:	mov    eax,DWORD PTR [rbp-0x8]
  4011f3:	mov    DWORD PTR [rbp-0x24],eax
  4011f6:	lea    rdi,[rip+0xe0a]        # 402007 <_IO_stdin_used@@Base+0x7>
  4011fd:	mov    al,0x0
  4011ff:	call   401030 <printf@plt>
  401204:	mov    DWORD PTR [rbp-0x2c],eax
  401207:	cmp    DWORD PTR [rbp-0x24],0x2
  40120b:	jle    40126c <main@@Base+0x10c>
  401211:	mov    rax,QWORD PTR [rbp-0x20]
  401215:	movsxd rcx,DWORD PTR [rbp-0x10]
  401219:	mov    esi,DWORD PTR [rax+rcx*4]
  40121c:	lea    rdi,[rip+0xdf6]        # 402019 <_IO_stdin_used@@Base+0x19>
  401223:	mov    al,0x0
  401225:	call   401030 <printf@plt>
  40122a:	mov    esi,DWORD PTR [rbp-0x10]
  40122d:	add    esi,0x1
  401230:	mov    DWORD PTR [rbp-0x10],esi
  401233:	mov    esi,DWORD PTR [rbp-0x14]
  401236:	add    esi,0x1
  401239:	mov    DWORD PTR [rbp-0x14],esi
  40123c:	mov    rcx,QWORD PTR [rbp-0x20]
  401240:	movsxd rdi,DWORD PTR [rbp-0x10]
  401244:	mov    esi,DWORD PTR [rcx+rdi*4]
  401247:	mov    rcx,QWORD PTR [rbp-0x20]
  40124b:	movsxd rdi,DWORD PTR [rbp-0x14]
  40124f:	mov    DWORD PTR [rcx+rdi*4],esi
  401252:	mov    esi,DWORD PTR [rbp-0x10]
  401255:	add    esi,0x1
  401258:	mov    DWORD PTR [rbp-0x10],esi
  40125b:	mov    esi,DWORD PTR [rbp-0x24]
  40125e:	add    esi,0xffffffff
  401261:	mov    DWORD PTR [rbp-0x24],esi
  401264:	mov    DWORD PTR [rbp-0x30],eax
  401267:	jmp    401207 <main@@Base+0xa7>
  40126c:	mov    rax,QWORD PTR [rbp-0x20]
  401270:	mov    ecx,DWORD PTR [rbp-0x10]
  401273:	mov    edx,ecx
  401275:	add    edx,0x1
  401278:	mov    DWORD PTR [rbp-0x10],edx
  40127b:	movsxd rsi,ecx
  40127e:	mov    esi,DWORD PTR [rax+rsi*4]
  401281:	lea    rdi,[rip+0xd7c]        # 402004 <_IO_stdin_used@@Base+0x4>
  401288:	mov    al,0x0
  40128a:	call   401030 <printf@plt>
  40128f:	lea    rdi,[rip+0xd88]        # 40201e <_IO_stdin_used@@Base+0x1e>
  401296:	mov    DWORD PTR [rbp-0x34],eax
  401299:	mov    al,0x0
  40129b:	call   401030 <printf@plt>
  4012a0:	mov    rdi,QWORD PTR [rbp-0x20]
  4012a4:	movsxd r8,DWORD PTR [rbp-0x10]
  4012a8:	mov    esi,DWORD PTR [rdi+r8*4]
  4012ac:	lea    rdi,[rip+0xd7d]        # 402030 <_IO_stdin_used@@Base+0x30>
  4012b3:	mov    DWORD PTR [rbp-0x38],eax
  4012b6:	mov    al,0x0
  4012b8:	call   401030 <printf@plt>
  4012bd:	mov    DWORD PTR [rbp-0x3c],eax
  4012c0:	jmp    40116f <main@@Base+0xf>
  4012c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012cf:	nop

00000000004012d0 <__libc_csu_init@@Base>:
  4012d0:	endbr64 
  4012d4:	push   r15
  4012d6:	lea    r15,[rip+0x2b23]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  4012dd:	push   r14
  4012df:	mov    r14,rdx
  4012e2:	push   r13
  4012e4:	mov    r13,rsi
  4012e7:	push   r12
  4012e9:	mov    r12d,edi
  4012ec:	push   rbp
  4012ed:	lea    rbp,[rip+0x2b14]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  4012f4:	push   rbx
  4012f5:	sub    rbp,r15
  4012f8:	sub    rsp,0x8
  4012fc:	call   401000 <printf@plt-0x30>
  401301:	sar    rbp,0x3
  401305:	je     401326 <__libc_csu_init@@Base+0x56>
  401307:	xor    ebx,ebx
  401309:	nop    DWORD PTR [rax+0x0]
  401310:	mov    rdx,r14
  401313:	mov    rsi,r13
  401316:	mov    edi,r12d
  401319:	call   QWORD PTR [r15+rbx*8]
  40131d:	add    rbx,0x1
  401321:	cmp    rbp,rbx
  401324:	jne    401310 <__libc_csu_init@@Base+0x40>
  401326:	add    rsp,0x8
  40132a:	pop    rbx
  40132b:	pop    rbp
  40132c:	pop    r12
  40132e:	pop    r13
  401330:	pop    r14
  401332:	pop    r15
  401334:	ret    
  401335:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401340 <__libc_csu_fini@@Base>:
  401340:	endbr64 
  401344:	ret    

Disassembly of section .fini:

0000000000401348 <.fini>:
  401348:	endbr64 
  40134c:	sub    rsp,0x8
  401350:	add    rsp,0x8
  401354:	ret    
