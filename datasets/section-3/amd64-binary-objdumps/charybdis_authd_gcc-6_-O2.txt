
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0xcfc9]        # 40efd8 <rb_strcasecmp@plt+0xcac8>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_helper_loop@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <rb_helper_loop@plt-0x10>:
  402020:	push   QWORD PTR [rip+0xcfe2]        # 40f008 <rb_strcasecmp@plt+0xcaf8>
  402026:	jmp    QWORD PTR [rip+0xcfe4]        # 40f010 <rb_strcasecmp@plt+0xcb00>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <rb_helper_loop@plt>:
  402030:	jmp    QWORD PTR [rip+0xcfe2]        # 40f018 <rb_strcasecmp@plt+0xcb08>
  402036:	push   0x0
  40203b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402040 <rb_event_addish@plt>:
  402040:	jmp    QWORD PTR [rip+0xcfda]        # 40f020 <rb_strcasecmp@plt+0xcb10>
  402046:	push   0x1
  40204b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402050 <rb_ignore_errno@plt>:
  402050:	jmp    QWORD PTR [rip+0xcfd2]        # 40f028 <rb_strcasecmp@plt+0xcb18>
  402056:	push   0x2
  40205b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402060 <rb_connect_tcp_ssl@plt>:
  402060:	jmp    QWORD PTR [rip+0xcfca]        # 40f030 <rb_strcasecmp@plt+0xcb20>
  402066:	push   0x3
  40206b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402070 <rb_connect_tcp@plt>:
  402070:	jmp    QWORD PTR [rip+0xcfc2]        # 40f038 <rb_strcasecmp@plt+0xcb28>
  402076:	push   0x4
  40207b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402080 <rb_event_delete@plt>:
  402080:	jmp    QWORD PTR [rip+0xcfba]        # 40f040 <rb_strcasecmp@plt+0xcb30>
  402086:	push   0x5
  40208b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402090 <rb_setselect@plt>:
  402090:	jmp    QWORD PTR [rip+0xcfb2]        # 40f048 <rb_strcasecmp@plt+0xcb38>
  402096:	push   0x6
  40209b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020a0 <rb_get_fd@plt>:
  4020a0:	jmp    QWORD PTR [rip+0xcfaa]        # 40f050 <rb_strcasecmp@plt+0xcb40>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020b0 <exit@plt>:
  4020b0:	jmp    QWORD PTR [rip+0xcfa2]        # 40f058 <rb_strcasecmp@plt+0xcb48>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020c0 <__assert_fail@plt>:
  4020c0:	jmp    QWORD PTR [rip+0xcf9a]        # 40f060 <rb_strcasecmp@plt+0xcb50>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020d0 <getaddrinfo@plt>:
  4020d0:	jmp    QWORD PTR [rip+0xcf92]        # 40f068 <rb_strcasecmp@plt+0xcb58>
  4020d6:	push   0xa
  4020db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020e0 <rb_socket@plt>:
  4020e0:	jmp    QWORD PTR [rip+0xcf8a]        # 40f070 <rb_strcasecmp@plt+0xcb60>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020f0 <strcasecmp@plt>:
  4020f0:	jmp    QWORD PTR [rip+0xcf82]        # 40f078 <rb_strcasecmp@plt+0xcb68>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402100 <rb_strtok_r@plt>:
  402100:	jmp    QWORD PTR [rip+0xcf7a]        # 40f080 <rb_strcasecmp@plt+0xcb70>
  402106:	push   0xd
  40210b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402110 <rb_dictionary_foreach_cur@plt>:
  402110:	jmp    QWORD PTR [rip+0xcf72]        # 40f088 <rb_strcasecmp@plt+0xcb78>
  402116:	push   0xe
  40211b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402120 <strpbrk@plt>:
  402120:	jmp    QWORD PTR [rip+0xcf6a]        # 40f090 <rb_strcasecmp@plt+0xcb80>
  402126:	push   0xf
  40212b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402130 <rb_helper_child@plt>:
  402130:	jmp    QWORD PTR [rip+0xcf62]        # 40f098 <rb_strcasecmp@plt+0xcb88>
  402136:	push   0x10
  40213b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402140 <strncmp@plt>:
  402140:	jmp    QWORD PTR [rip+0xcf5a]        # 40f0a0 <rb_strcasecmp@plt+0xcb90>
  402146:	push   0x11
  40214b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0xcf52]        # 40f0a8 <rb_strcasecmp@plt+0xcb98>
  402156:	push   0x12
  40215b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402160 <fopen@plt>:
  402160:	jmp    QWORD PTR [rip+0xcf4a]        # 40f0b0 <rb_strcasecmp@plt+0xcba0>
  402166:	push   0x13
  40216b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402170 <rb_write@plt>:
  402170:	jmp    QWORD PTR [rip+0xcf42]        # 40f0b8 <rb_strcasecmp@plt+0xcba8>
  402176:	push   0x14
  40217b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402180 <setsockopt@plt>:
  402180:	jmp    QWORD PTR [rip+0xcf3a]        # 40f0c0 <rb_strcasecmp@plt+0xcbb0>
  402186:	push   0x15
  40218b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402190 <fgets@plt>:
  402190:	jmp    QWORD PTR [rip+0xcf32]        # 40f0c8 <rb_strcasecmp@plt+0xcbb8>
  402196:	push   0x16
  40219b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021a0 <__vsnprintf_chk@plt>:
  4021a0:	jmp    QWORD PTR [rip+0xcf2a]        # 40f0d0 <rb_strcasecmp@plt+0xcbc0>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021b0 <rb_strlcpy@plt>:
  4021b0:	jmp    QWORD PTR [rip+0xcf22]        # 40f0d8 <rb_strcasecmp@plt+0xcbc8>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021c0 <rb_dictionary_foreach_next@plt>:
  4021c0:	jmp    QWORD PTR [rip+0xcf1a]        # 40f0e0 <rb_strcasecmp@plt+0xcbd0>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021d0 <freeaddrinfo@plt>:
  4021d0:	jmp    QWORD PTR [rip+0xcf12]        # 40f0e8 <rb_strcasecmp@plt+0xcbd8>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021e0 <free@plt>:
  4021e0:	jmp    QWORD PTR [rip+0xcf0a]        # 40f0f0 <rb_strcasecmp@plt+0xcbe0>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021f0 <strlen@plt>:
  4021f0:	jmp    QWORD PTR [rip+0xcf02]        # 40f0f8 <rb_strcasecmp@plt+0xcbe8>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402200 <rb_string_to_array@plt>:
  402200:	jmp    QWORD PTR [rip+0xcefa]        # 40f100 <rb_strcasecmp@plt+0xcbf0>
  402206:	push   0x1d
  40220b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402210 <rb_read@plt>:
  402210:	jmp    QWORD PTR [rip+0xcef2]        # 40f108 <rb_strcasecmp@plt+0xcbf8>
  402216:	push   0x1e
  40221b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402220 <__ctype_b_loc@plt>:
  402220:	jmp    QWORD PTR [rip+0xceea]        # 40f110 <rb_strcasecmp@plt+0xcc00>
  402226:	push   0x1f
  40222b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402230 <rb_dictionary_foreach_start@plt>:
  402230:	jmp    QWORD PTR [rip+0xcee2]        # 40f118 <rb_strcasecmp@plt+0xcc08>
  402236:	push   0x20
  40223b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402240 <rb_inet_pton_sock@plt>:
  402240:	jmp    QWORD PTR [rip+0xceda]        # 40f120 <rb_strcasecmp@plt+0xcc10>
  402246:	push   0x21
  40224b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402250 <strrchr@plt>:
  402250:	jmp    QWORD PTR [rip+0xced2]        # 40f128 <rb_strcasecmp@plt+0xcc18>
  402256:	push   0x22
  40225b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402260 <rb_current_time@plt>:
  402260:	jmp    QWORD PTR [rip+0xceca]        # 40f130 <rb_strcasecmp@plt+0xcc20>
  402266:	push   0x23
  40226b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402270 <rb_dictionary_delete@plt>:
  402270:	jmp    QWORD PTR [rip+0xcec2]        # 40f138 <rb_strcasecmp@plt+0xcc28>
  402276:	push   0x24
  40227b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402280 <strerror@plt>:
  402280:	jmp    QWORD PTR [rip+0xceba]        # 40f140 <rb_strcasecmp@plt+0xcc30>
  402286:	push   0x25
  40228b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402290 <strstr@plt>:
  402290:	jmp    QWORD PTR [rip+0xceb2]        # 40f148 <rb_strcasecmp@plt+0xcc38>
  402296:	push   0x26
  40229b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022a0 <rb_free_rb_dlink_node@plt>:
  4022a0:	jmp    QWORD PTR [rip+0xceaa]        # 40f150 <rb_strcasecmp@plt+0xcc40>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022b0 <sigaction@plt>:
  4022b0:	jmp    QWORD PTR [rip+0xcea2]        # 40f158 <rb_strcasecmp@plt+0xcc48>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022c0 <rb_close@plt>:
  4022c0:	jmp    QWORD PTR [rip+0xce9a]        # 40f160 <rb_strcasecmp@plt+0xcc50>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022d0 <strtol@plt>:
  4022d0:	jmp    QWORD PTR [rip+0xce92]        # 40f168 <rb_strcasecmp@plt+0xcc58>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022e0 <getsockname@plt>:
  4022e0:	jmp    QWORD PTR [rip+0xce8a]        # 40f170 <rb_strcasecmp@plt+0xcc60>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022f0 <rb_dictionary_destroy@plt>:
  4022f0:	jmp    QWORD PTR [rip+0xce82]        # 40f178 <rb_strcasecmp@plt+0xcc68>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402300 <strchr@plt>:
  402300:	jmp    QWORD PTR [rip+0xce7a]        # 40f180 <rb_strcasecmp@plt+0xcc70>
  402306:	push   0x2d
  40230b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402310 <rb_init_prng@plt>:
  402310:	jmp    QWORD PTR [rip+0xce72]        # 40f188 <rb_strcasecmp@plt+0xcc78>
  402316:	push   0x2e
  40231b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402320 <rb_dictionary_retrieve@plt>:
  402320:	jmp    QWORD PTR [rip+0xce6a]        # 40f190 <rb_strcasecmp@plt+0xcc80>
  402326:	push   0x2f
  40232b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402330 <rb_outofmemory@plt>:
  402330:	jmp    QWORD PTR [rip+0xce62]        # 40f198 <rb_strcasecmp@plt+0xcc88>
  402336:	push   0x30
  40233b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402340 <__errno_location@plt>:
  402340:	jmp    QWORD PTR [rip+0xce5a]        # 40f1a0 <rb_strcasecmp@plt+0xcc90>
  402346:	push   0x31
  40234b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402350 <rb_dictionary_add@plt>:
  402350:	jmp    QWORD PTR [rip+0xce52]        # 40f1a8 <rb_strcasecmp@plt+0xcc98>
  402356:	push   0x32
  40235b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402360 <rb_set_time@plt>:
  402360:	jmp    QWORD PTR [rip+0xce4a]        # 40f1b0 <rb_strcasecmp@plt+0xcca0>
  402366:	push   0x33
  40236b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402370 <sigaddset@plt>:
  402370:	jmp    QWORD PTR [rip+0xce42]        # 40f1b8 <rb_strcasecmp@plt+0xcca8>
  402376:	push   0x34
  40237b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402380 <__stack_chk_fail@plt>:
  402380:	jmp    QWORD PTR [rip+0xce3a]        # 40f1c0 <rb_strcasecmp@plt+0xccb0>
  402386:	push   0x35
  40238b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402390 <rb_helper_read@plt>:
  402390:	jmp    QWORD PTR [rip+0xce32]        # 40f1c8 <rb_strcasecmp@plt+0xccb8>
  402396:	push   0x36
  40239b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023a0 <strcmp@plt>:
  4023a0:	jmp    QWORD PTR [rip+0xce2a]        # 40f1d0 <rb_strcasecmp@plt+0xccc0>
  4023a6:	push   0x37
  4023ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023b0 <rb_inet_ntop_sock@plt>:
  4023b0:	jmp    QWORD PTR [rip+0xce22]        # 40f1d8 <rb_strcasecmp@plt+0xccc8>
  4023b6:	push   0x38
  4023bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023c0 <rb_dictionary_find@plt>:
  4023c0:	jmp    QWORD PTR [rip+0xce1a]        # 40f1e0 <rb_strcasecmp@plt+0xccd0>
  4023c6:	push   0x39
  4023cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023d0 <rb_dictionary_create@plt>:
  4023d0:	jmp    QWORD PTR [rip+0xce12]        # 40f1e8 <rb_strcasecmp@plt+0xccd8>
  4023d6:	push   0x3a
  4023db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023e0 <rb_accept_tcp@plt>:
  4023e0:	jmp    QWORD PTR [rip+0xce0a]        # 40f1f0 <rb_strcasecmp@plt+0xcce0>
  4023e6:	push   0x3b
  4023eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023f0 <memcmp@plt>:
  4023f0:	jmp    QWORD PTR [rip+0xce02]        # 40f1f8 <rb_strcasecmp@plt+0xcce8>
  4023f6:	push   0x3c
  4023fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402400 <calloc@plt>:
  402400:	jmp    QWORD PTR [rip+0xcdfa]        # 40f200 <rb_strcasecmp@plt+0xccf0>
  402406:	push   0x3d
  40240b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402410 <rb_helper_write@plt>:
  402410:	jmp    QWORD PTR [rip+0xcdf2]        # 40f208 <rb_strcasecmp@plt+0xccf8>
  402416:	push   0x3e
  40241b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402420 <fclose@plt>:
  402420:	jmp    QWORD PTR [rip+0xcdea]        # 40f210 <rb_strcasecmp@plt+0xcd00>
  402426:	push   0x3f
  40242b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402430 <recvfrom@plt>:
  402430:	jmp    QWORD PTR [rip+0xcde2]        # 40f218 <rb_strcasecmp@plt+0xcd08>
  402436:	push   0x40
  40243b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402440 <rb_event_add@plt>:
  402440:	jmp    QWORD PTR [rip+0xcdda]        # 40f220 <rb_strcasecmp@plt+0xcd10>
  402446:	push   0x41
  40244b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402450 <strtoull@plt>:
  402450:	jmp    QWORD PTR [rip+0xcdd2]        # 40f228 <rb_strcasecmp@plt+0xcd18>
  402456:	push   0x42
  40245b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402460 <rb_get_random@plt>:
  402460:	jmp    QWORD PTR [rip+0xcdca]        # 40f230 <rb_strcasecmp@plt+0xcd20>
  402466:	push   0x43
  40246b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402470 <__sprintf_chk@plt>:
  402470:	jmp    QWORD PTR [rip+0xcdc2]        # 40f238 <rb_strcasecmp@plt+0xcd28>
  402476:	push   0x44
  40247b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402480 <__snprintf_chk@plt>:
  402480:	jmp    QWORD PTR [rip+0xcdba]        # 40f240 <rb_strcasecmp@plt+0xcd30>
  402486:	push   0x45
  40248b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402490 <rb_make_rb_dlink_node@plt>:
  402490:	jmp    QWORD PTR [rip+0xcdb2]        # 40f248 <rb_strcasecmp@plt+0xcd38>
  402496:	push   0x46
  40249b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024a0 <sigemptyset@plt>:
  4024a0:	jmp    QWORD PTR [rip+0xcdaa]        # 40f250 <rb_strcasecmp@plt+0xcd40>
  4024a6:	push   0x47
  4024ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024b0 <sendto@plt>:
  4024b0:	jmp    QWORD PTR [rip+0xcda2]        # 40f258 <rb_strcasecmp@plt+0xcd48>
  4024b6:	push   0x48
  4024bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024c0 <bind@plt>:
  4024c0:	jmp    QWORD PTR [rip+0xcd9a]        # 40f260 <rb_strcasecmp@plt+0xcd50>
  4024c6:	push   0x49
  4024cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024d0 <fwrite@plt>:
  4024d0:	jmp    QWORD PTR [rip+0xcd92]        # 40f268 <rb_strcasecmp@plt+0xcd58>
  4024d6:	push   0x4a
  4024db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024e0 <rb_listen@plt>:
  4024e0:	jmp    QWORD PTR [rip+0xcd8a]        # 40f270 <rb_strcasecmp@plt+0xcd60>
  4024e6:	push   0x4b
  4024eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024f0 <__memmove_chk@plt>:
  4024f0:	jmp    QWORD PTR [rip+0xcd82]        # 40f278 <rb_strcasecmp@plt+0xcd68>
  4024f6:	push   0x4c
  4024fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402500 <memcpy@plt>:
  402500:	jmp    QWORD PTR [rip+0xcd7a]        # 40f280 <rb_strcasecmp@plt+0xcd70>
  402506:	push   0x4d
  40250b:	jmp    402020 <rb_helper_loop@plt-0x10>

Disassembly of section .plt.got:

0000000000402510 <rb_strcasecmp@plt>:
  402510:	jmp    QWORD PTR [rip+0xcad2]        # 40efe8 <rb_strcasecmp@plt+0xcad8>
  402516:	xchg   ax,ax

Disassembly of section .text:

0000000000402520 <.text>:
  402520:	lea    rcx,[rip+0x95b9]        # 40bae0 <rb_strcasecmp@plt+0x95d0>
  402527:	lea    rsi,[rip+0x901a]        # 40b548 <rb_strcasecmp@plt+0x9038>
  40252e:	lea    rdi,[rip+0x94ff]        # 40ba34 <rb_strcasecmp@plt+0x9524>
  402535:	sub    rsp,0x8
  402539:	mov    edx,0x91
  40253e:	call   4020c0 <__assert_fail@plt>
  402543:	lea    rcx,[rip+0x9586]        # 40bad0 <rb_strcasecmp@plt+0x95c0>
  40254a:	lea    rsi,[rip+0x8ff7]        # 40b548 <rb_strcasecmp@plt+0x9038>
  402551:	lea    rdi,[rip+0x94dc]        # 40ba34 <rb_strcasecmp@plt+0x9524>
  402558:	sub    rsp,0x8
  40255c:	mov    edx,0xec
  402561:	call   4020c0 <__assert_fail@plt>
  402566:	lea    rcx,[rip+0x9583]        # 40baf0 <rb_strcasecmp@plt+0x95e0>
  40256d:	lea    rsi,[rip+0x8fd4]        # 40b548 <rb_strcasecmp@plt+0x9038>
  402574:	lea    rdi,[rip+0x8fe9]        # 40b564 <rb_strcasecmp@plt+0x9054>
  40257b:	sub    rsp,0x8
  40257f:	mov    edx,0x120
  402584:	call   4020c0 <__assert_fail@plt>
  402589:	lea    rcx,[rip+0x9b48]        # 40c0d8 <rb_strcasecmp@plt+0x9bc8>
  402590:	lea    rsi,[rip+0x8fb1]        # 40b548 <rb_strcasecmp@plt+0x9038>
  402597:	lea    rdi,[rip+0x9496]        # 40ba34 <rb_strcasecmp@plt+0x9524>
  40259e:	sub    rsp,0x8
  4025a2:	mov    edx,0xec
  4025a7:	call   4020c0 <__assert_fail@plt>
  4025ac:	nop    DWORD PTR [rax+0x0]
  4025b0:	push   rbx
  4025b1:	call   402810 <rb_strcasecmp@plt+0x300>
  4025b6:	push   0x100
  4025bb:	lea    rsi,[rip+0x1ce]        # 402790 <rb_strcasecmp@plt+0x280>
  4025c2:	push   0x100
  4025c7:	lea    rdi,[rip+0x1d2]        # 4027a0 <rb_strcasecmp@plt+0x290>
  4025ce:	xor    ecx,ecx
  4025d0:	xor    edx,edx
  4025d2:	xor    r8d,r8d
  4025d5:	mov    r9d,0x100
  4025db:	call   402130 <rb_helper_child@plt>
  4025e0:	mov    rbx,0x410ee0
  4025e7:	test   rax,rax
  4025ea:	mov    QWORD PTR [rbx],rax
  4025ed:	pop    rdx
  4025ee:	pop    rcx
  4025ef:	je     402638 <rb_strcasecmp@plt+0x128>
  4025f1:	call   402360 <rb_set_time@plt>
  4025f6:	call   402810 <rb_strcasecmp@plt+0x300>
  4025fb:	mov    rsi,QWORD PTR [rip+0xc9e6]        # 40efe8 <rb_strcasecmp@plt+0xcad8>
  402602:	lea    rdi,[rip+0x8b86]        # 40b18f <rb_strcasecmp@plt+0x8c7f>
  402609:	call   4023d0 <rb_dictionary_create@plt>
  40260e:	mov    rdx,0x4151e8
  402615:	mov    QWORD PTR [rdx],rax
  402618:	call   404850 <rb_strcasecmp@plt+0x2340>
  40261d:	call   403800 <rb_strcasecmp@plt+0x12f0>
  402622:	mov    esi,0x1
  402627:	xor    edi,edi
  402629:	call   402310 <rb_init_prng@plt>
  40262e:	mov    rdi,QWORD PTR [rbx]
  402631:	xor    esi,esi
  402633:	call   402030 <rb_helper_loop@plt>
  402638:	mov    rax,QWORD PTR [rip+0xc9b9]        # 40eff8 <rb_strcasecmp@plt+0xcae8>
  40263f:	lea    rdi,[rip+0x8b1a]        # 40b160 <rb_strcasecmp@plt+0x8c50>
  402646:	mov    edx,0x2e
  40264b:	mov    esi,0x1
  402650:	mov    rcx,QWORD PTR [rax]
  402653:	call   4024d0 <fwrite@plt>
  402658:	mov    edi,0x1
  40265d:	call   4020b0 <exit@plt>
  402662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40266c:	nop    DWORD PTR [rax+0x0]
  402670:	endbr64 
  402674:	xor    ebp,ebp
  402676:	mov    r9,rdx
  402679:	pop    rsi
  40267a:	mov    rdx,rsp
  40267d:	and    rsp,0xfffffffffffffff0
  402681:	push   rax
  402682:	push   rsp
  402683:	mov    r8,0x40a4a0
  40268a:	mov    rcx,0x40a430
  402691:	mov    rdi,0x4025b0
  402698:	call   QWORD PTR [rip+0xc942]        # 40efe0 <rb_strcasecmp@plt+0xcad0>
  40269e:	hlt    
  40269f:	nop
  4026a0:	endbr64 
  4026a4:	ret    
  4026a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026af:	nop
  4026b0:	mov    eax,0x410ec7
  4026b5:	push   rbp
  4026b6:	sub    rax,0x410ec0
  4026bc:	cmp    rax,0xe
  4026c0:	mov    rbp,rsp
  4026c3:	jbe    4026e0 <rb_strcasecmp@plt+0x1d0>
  4026c5:	mov    eax,0x0
  4026ca:	test   rax,rax
  4026cd:	je     4026e0 <rb_strcasecmp@plt+0x1d0>
  4026cf:	pop    rbp
  4026d0:	mov    edi,0x410ec0
  4026d5:	jmp    rax
  4026d7:	nop    WORD PTR [rax+rax*1+0x0]
  4026e0:	pop    rbp
  4026e1:	ret    
  4026e2:	nop    DWORD PTR [rax+0x0]
  4026e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026f0:	mov    esi,0x410ec0
  4026f5:	push   rbp
  4026f6:	sub    rsi,0x410ec0
  4026fd:	sar    rsi,0x3
  402701:	mov    rbp,rsp
  402704:	mov    rax,rsi
  402707:	shr    rax,0x3f
  40270b:	add    rsi,rax
  40270e:	sar    rsi,1
  402711:	je     402728 <rb_strcasecmp@plt+0x218>
  402713:	mov    eax,0x0
  402718:	test   rax,rax
  40271b:	je     402728 <rb_strcasecmp@plt+0x218>
  40271d:	pop    rbp
  40271e:	mov    edi,0x410ec0
  402723:	jmp    rax
  402725:	nop    DWORD PTR [rax]
  402728:	pop    rbp
  402729:	ret    
  40272a:	nop    WORD PTR [rax+rax*1+0x0]
  402730:	cmp    BYTE PTR [rip+0xe789],0x0        # 410ec0 <rb_strcasecmp@plt+0xe9b0>
  402737:	jne    40274a <rb_strcasecmp@plt+0x23a>
  402739:	push   rbp
  40273a:	mov    rbp,rsp
  40273d:	call   4026b0 <rb_strcasecmp@plt+0x1a0>
  402742:	pop    rbp
  402743:	mov    BYTE PTR [rip+0xe776],0x1        # 410ec0 <rb_strcasecmp@plt+0xe9b0>
  40274a:	repz ret 
  40274c:	nop    DWORD PTR [rax+0x0]
  402750:	mov    edi,0x40ed98
  402755:	cmp    QWORD PTR [rdi],0x0
  402759:	jne    402760 <rb_strcasecmp@plt+0x250>
  40275b:	jmp    4026f0 <rb_strcasecmp@plt+0x1e0>
  40275d:	nop    DWORD PTR [rax]
  402760:	mov    eax,0x0
  402765:	test   rax,rax
  402768:	je     40275b <rb_strcasecmp@plt+0x24b>
  40276a:	push   rbp
  40276b:	mov    rbp,rsp
  40276e:	call   rax
  402770:	pop    rbp
  402771:	jmp    4026f0 <rb_strcasecmp@plt+0x1e0>
  402776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402780:	repz ret 
  402782:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40278d:	nop    DWORD PTR [rax]
  402790:	sub    rsp,0x8
  402794:	mov    edi,0x1
  402799:	call   4020b0 <exit@plt>
  40279e:	xchg   ax,ax
  4027a0:	push   rbp
  4027a1:	push   rbx
  4027a2:	lea    rbx,[rip+0xe7b7]        # 410f60 <rb_strcasecmp@plt+0xea50>
  4027a9:	mov    rbp,rdi
  4027ac:	sub    rsp,0x8
  4027b0:	mov    edx,0x4000
  4027b5:	mov    rsi,rbx
  4027b8:	mov    rdi,rbp
  4027bb:	call   402390 <rb_helper_read@plt>
  4027c0:	test   eax,eax
  4027c2:	jle    402808 <rb_strcasecmp@plt+0x2f8>
  4027c4:	lea    rsi,[rip+0xe735]        # 410f00 <rb_strcasecmp@plt+0xe9f0>
  4027cb:	mov    edx,0xa
  4027d0:	mov    rdi,rbx
  4027d3:	call   402200 <rb_string_to_array@plt>
  4027d8:	test   eax,eax
  4027da:	jle    4027b0 <rb_strcasecmp@plt+0x2a0>
  4027dc:	mov    rdx,QWORD PTR [rip+0xe71d]        # 410f00 <rb_strcasecmp@plt+0xe9f0>
  4027e3:	movzx  ecx,BYTE PTR [rdx]
  4027e6:	mov    rdx,0x4102c0
  4027ed:	mov    rdx,QWORD PTR [rdx+rcx*8]
  4027f1:	test   rdx,rdx
  4027f4:	je     4027b0 <rb_strcasecmp@plt+0x2a0>
  4027f6:	lea    rsi,[rip+0xe703]        # 410f00 <rb_strcasecmp@plt+0xe9f0>
  4027fd:	mov    edi,eax
  4027ff:	call   rdx
  402801:	jmp    4027b0 <rb_strcasecmp@plt+0x2a0>
  402803:	nop    DWORD PTR [rax+rax*1+0x0]
  402808:	add    rsp,0x8
  40280c:	pop    rbx
  40280d:	pop    rbp
  40280e:	ret    
  40280f:	nop
  402810:	push   rbp
  402811:	push   rbx
  402812:	sub    rsp,0xa8
  402819:	lea    rbp,[rsp+0x8]
  40281e:	mov    DWORD PTR [rsp+0x88],0x0
  402829:	mov    QWORD PTR [rsp],0x1
  402831:	mov    rax,QWORD PTR fs:0x28
  40283a:	mov    QWORD PTR [rsp+0x98],rax
  402842:	xor    eax,eax
  402844:	mov    rdi,rbp
  402847:	call   4024a0 <sigemptyset@plt>
  40284c:	mov    esi,0xd
  402851:	mov    rdi,rbp
  402854:	call   402370 <sigaddset@plt>
  402859:	mov    esi,0xe
  40285e:	mov    rdi,rbp
  402861:	call   402370 <sigaddset@plt>
  402866:	mov    esi,0x5
  40286b:	mov    rdi,rbp
  40286e:	call   402370 <sigaddset@plt>
  402873:	mov    esi,0x1c
  402878:	mov    rdi,rbp
  40287b:	call   402370 <sigaddset@plt>
  402880:	xor    edx,edx
  402882:	mov    rsi,rsp
  402885:	mov    edi,0x1c
  40288a:	call   4022b0 <sigaction@plt>
  40288f:	xor    edx,edx
  402891:	mov    rsi,rsp
  402894:	mov    edi,0xd
  402899:	call   4022b0 <sigaction@plt>
  40289e:	xor    edx,edx
  4028a0:	mov    rsi,rsp
  4028a3:	mov    edi,0x5
  4028a8:	call   4022b0 <sigaction@plt>
  4028ad:	lea    rax,[rip+0xfffffffffffffecc]        # 402780 <rb_strcasecmp@plt+0x270>
  4028b4:	xor    edx,edx
  4028b6:	mov    rsi,rsp
  4028b9:	mov    edi,0xe
  4028be:	mov    QWORD PTR [rsp],rax
  4028c2:	call   4022b0 <sigaction@plt>
  4028c7:	mov    rax,QWORD PTR [rsp+0x98]
  4028cf:	xor    rax,QWORD PTR fs:0x28
  4028d8:	jne    4028e4 <rb_strcasecmp@plt+0x3d4>
  4028da:	add    rsp,0xa8
  4028e1:	pop    rbx
  4028e2:	pop    rbp
  4028e3:	ret    
  4028e4:	call   402380 <__stack_chk_fail@plt>
  4028e9:	nop    DWORD PTR [rax+0x0]
  4028f0:	cmp    edi,0x2
  4028f3:	jg     402930 <rb_strcasecmp@plt+0x420>
  4028f5:	push   rbp
  4028f6:	push   rbx
  4028f7:	sub    rsp,0x8
  4028fb:	mov    rbx,0x40f2c0
  402902:	lea    rbp,[rbx+0x800]
  402909:	nop    DWORD PTR [rax+0x0]
  402910:	mov    rax,QWORD PTR [rbx]
  402913:	test   rax,rax
  402916:	je     40291c <rb_strcasecmp@plt+0x40c>
  402918:	xor    edi,edi
  40291a:	call   rax
  40291c:	add    rbx,0x8
  402920:	cmp    rbx,rbp
  402923:	jne    402910 <rb_strcasecmp@plt+0x400>
  402925:	add    rsp,0x8
  402929:	pop    rbx
  40292a:	pop    rbp
  40292b:	repz ret 
  40292d:	nop    DWORD PTR [rax]
  402930:	mov    rax,QWORD PTR [rsi+0x8]
  402934:	mov    rdx,0x40f2c0
  40293b:	movzx  ecx,BYTE PTR [rax]
  40293e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  402942:	test   rdx,rdx
  402945:	je     40292b <rb_strcasecmp@plt+0x41b>
  402947:	movsx  edi,cl
  40294a:	jmp    rdx
  40294c:	nop    DWORD PTR [rax+0x0]
  402950:	cmp    edi,0x2
  402953:	jle    402998 <rb_strcasecmp@plt+0x488>
  402955:	push   rbx
  402956:	mov    rdi,QWORD PTR [rsi+0x8]
  40295a:	mov    edx,0x10
  40295f:	mov    rbx,rsi
  402962:	xor    esi,esi
  402964:	call   402450 <strtoull@plt>
  402969:	mov    edx,0xffffffff
  40296e:	cmp    rax,rdx
  402971:	ja     4029b0 <rb_strcasecmp@plt+0x4a0>
  402973:	mov    rdx,QWORD PTR [rbx+0x10]
  402977:	movzx  ecx,BYTE PTR [rdx]
  40297a:	mov    rdx,0x40fac0
  402981:	mov    rdx,QWORD PTR [rdx+rcx*8]
  402985:	test   rdx,rdx
  402988:	je     4029d0 <rb_strcasecmp@plt+0x4c0>
  40298a:	pop    rbx
  40298b:	movsx  esi,cl
  40298e:	mov    edi,eax
  402990:	jmp    rdx
  402992:	nop    WORD PTR [rax+rax*1+0x0]
  402998:	lea    rsi,[rip+0x8669]        # 40b008 <rb_strcasecmp@plt+0x8af8>
  40299f:	mov    edx,edi
  4029a1:	xor    eax,eax
  4029a3:	mov    edi,0x43
  4029a8:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  4029ad:	nop    DWORD PTR [rax]
  4029b0:	mov    rdx,QWORD PTR [rbx+0x8]
  4029b4:	lea    rsi,[rip+0x869d]        # 40b058 <rb_strcasecmp@plt+0x8b48>
  4029bb:	mov    edi,0x43
  4029c0:	pop    rbx
  4029c1:	xor    eax,eax
  4029c3:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  4029c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	pop    rbx
  4029d1:	ret    
  4029d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029dd:	nop    DWORD PTR [rax]
  4029e0:	cmp    edi,0x1
  4029e3:	jle    402a50 <rb_strcasecmp@plt+0x540>
  4029e5:	push   rbp
  4029e6:	push   rbx
  4029e7:	mov    rbp,rsi
  4029ea:	mov    ebx,edi
  4029ec:	sub    rsp,0x8
  4029f0:	mov    rax,0x4151e8
  4029f7:	mov    rsi,QWORD PTR [rsi+0x8]
  4029fb:	mov    rdi,QWORD PTR [rax]
  4029fe:	call   402320 <rb_dictionary_retrieve@plt>
  402a03:	test   rax,rax
  402a06:	je     402a68 <rb_strcasecmp@plt+0x558>
  402a08:	mov    edx,DWORD PTR [rax+0x8]
  402a0b:	lea    ecx,[rbx-0x1]
  402a0e:	cmp    ecx,edx
  402a10:	jle    402a30 <rb_strcasecmp@plt+0x520>
  402a12:	mov    rdi,QWORD PTR [rbp+0x8]
  402a16:	mov    rax,QWORD PTR [rax+0x10]
  402a1a:	add    rsp,0x8
  402a1e:	lea    rdx,[rbp+0x10]
  402a22:	lea    esi,[rbx-0x2]
  402a25:	pop    rbx
  402a26:	pop    rbp
  402a27:	jmp    rax
  402a29:	nop    DWORD PTR [rax+0x0]
  402a30:	add    rsp,0x8
  402a34:	mov    ecx,ebx
  402a36:	lea    rsi,[rip+0x86d3]        # 40b110 <rb_strcasecmp@plt+0x8c00>
  402a3d:	pop    rbx
  402a3e:	pop    rbp
  402a3f:	mov    edi,0x43
  402a44:	xor    eax,eax
  402a46:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  402a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a50:	lea    rsi,[rip+0x8639]        # 40b090 <rb_strcasecmp@plt+0x8b80>
  402a57:	mov    edx,edi
  402a59:	xor    eax,eax
  402a5b:	mov    edi,0x43
  402a60:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  402a65:	nop    DWORD PTR [rax]
  402a68:	mov    rdx,QWORD PTR [rbp+0x8]
  402a6c:	add    rsp,0x8
  402a70:	lea    rsi,[rip+0x8669]        # 40b0e0 <rb_strcasecmp@plt+0x8bd0>
  402a77:	pop    rbx
  402a78:	pop    rbp
  402a79:	mov    edi,0x43
  402a7e:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  402a83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a8d:	nop    DWORD PTR [rax]
  402a90:	push   rbp
  402a91:	push   rbx
  402a92:	mov    rbx,rdi
  402a95:	mov    ecx,0x5
  402a9a:	sub    rsp,0x48
  402a9e:	mov    rax,QWORD PTR fs:0x28
  402aa7:	mov    QWORD PTR [rsp+0x38],rax
  402aac:	xor    eax,eax
  402aae:	lea    rdi,[rsp+0x8]
  402ab3:	test   rbx,rbx
  402ab6:	mov    QWORD PTR [rsp],0x2a
  402abe:	rep stos QWORD PTR es:[rdi],rax
  402ac1:	mov    DWORD PTR [rdi],0x0
  402ac7:	mov    BYTE PTR [rdi+0x4],0x0
  402acb:	je     402beb <rb_strcasecmp@plt+0x6db>
  402ad1:	test   rsi,rsi
  402ad4:	je     402aee <rb_strcasecmp@plt+0x5de>
  402ad6:	mov    edx,DWORD PTR [rbx+0x10]
  402ad9:	cmp    edx,0x34
  402adc:	je     402b58 <rb_strcasecmp@plt+0x648>
  402ade:	cmp    edx,0x36
  402ae1:	jne    402b38 <rb_strcasecmp@plt+0x628>
  402ae3:	cmp    WORD PTR [rsi+0x8],0xa
  402ae8:	je     402b78 <rb_strcasecmp@plt+0x668>
  402aee:	mov    rax,QWORD PTR [rbx+0xa0]
  402af5:	test   rax,rax
  402af8:	je     402b13 <rb_strcasecmp@plt+0x603>
  402afa:	xor    esi,esi
  402afc:	cmp    BYTE PTR [rsp],0x2a
  402b00:	mov    rcx,QWORD PTR [rbx+0xa8]
  402b07:	mov    edx,DWORD PTR [rbx+0x10]
  402b0a:	mov    rdi,rsp
  402b0d:	setne  sil
  402b11:	call   rax
  402b13:	mov    rax,QWORD PTR [rsp+0x38]
  402b18:	xor    rax,QWORD PTR fs:0x28
  402b21:	jne    402c06 <rb_strcasecmp@plt+0x6f6>
  402b27:	add    rsp,0x48
  402b2b:	mov    rdi,rbx
  402b2e:	pop    rbx
  402b2f:	pop    rbp
  402b30:	jmp    4021e0 <free@plt>
  402b35:	nop    DWORD PTR [rax]
  402b38:	lea    rsi,[rip+0x8699]        # 40b1d8 <rb_strcasecmp@plt+0x8cc8>
  402b3f:	mov    edi,0x43
  402b44:	xor    eax,eax
  402b46:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  402b4b:	mov    edi,0x2
  402b50:	call   4020b0 <exit@plt>
  402b55:	nop    DWORD PTR [rax]
  402b58:	cmp    WORD PTR [rsi+0x8],0x2
  402b5d:	jne    402aee <rb_strcasecmp@plt+0x5de>
  402b5f:	lea    rdi,[rsi+0x8]
  402b63:	mov    edx,0x35
  402b68:	mov    rsi,rsp
  402b6b:	call   4023b0 <rb_inet_ntop_sock@plt>
  402b70:	jmp    402aee <rb_strcasecmp@plt+0x5de>
  402b75:	nop    DWORD PTR [rax]
  402b78:	lea    rdi,[rsi+0x8]
  402b7c:	mov    edx,0x35
  402b81:	mov    rsi,rsp
  402b84:	mov    rbp,rsp
  402b87:	call   4023b0 <rb_inet_ntop_sock@plt>
  402b8c:	cmp    BYTE PTR [rsp],0x3a
  402b90:	jne    402aee <rb_strcasecmp@plt+0x5de>
  402b96:	mov    rdx,rsp
  402b99:	mov    ecx,DWORD PTR [rdx]
  402b9b:	add    rdx,0x4
  402b9f:	lea    eax,[rcx-0x1010101]
  402ba5:	andn   eax,ecx,eax
  402baa:	and    eax,0x80808080
  402baf:	je     402b99 <rb_strcasecmp@plt+0x689>
  402bb1:	mov    ecx,eax
  402bb3:	lea    rdi,[rbp+0x1]
  402bb7:	mov    rsi,rbp
  402bba:	shr    ecx,0x10
  402bbd:	test   eax,0x8080
  402bc2:	cmove  eax,ecx
  402bc5:	lea    rcx,[rdx+0x2]
  402bc9:	cmove  rdx,rcx
  402bcd:	mov    ecx,eax
  402bcf:	add    cl,al
  402bd1:	mov    ecx,0x34
  402bd6:	sbb    rdx,0x3
  402bda:	sub    rdx,rbp
  402bdd:	call   4024f0 <__memmove_chk@plt>
  402be2:	mov    BYTE PTR [rsp],0x30
  402be6:	jmp    402aee <rb_strcasecmp@plt+0x5de>
  402beb:	lea    rsi,[rip+0x85b6]        # 40b1a8 <rb_strcasecmp@plt+0x8c98>
  402bf2:	mov    edi,0x43
  402bf7:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  402bfc:	mov    edi,0x2
  402c01:	call   4020b0 <exit@plt>
  402c06:	call   402380 <__stack_chk_fail@plt>
  402c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c10:	push   rbp
  402c11:	push   rbx
  402c12:	sub    rsp,0x8
  402c16:	test   rdi,rdi
  402c19:	je     402c96 <rb_strcasecmp@plt+0x786>
  402c1b:	test   rsi,rsi
  402c1e:	mov    rbx,rdi
  402c21:	mov    rbp,rsi
  402c24:	je     402c4d <rb_strcasecmp@plt+0x73d>
  402c26:	mov    edx,DWORD PTR [rdi+0x10]
  402c29:	cmp    edx,0x52
  402c2c:	je     402c80 <rb_strcasecmp@plt+0x770>
  402c2e:	cmp    edx,0x53
  402c31:	jne    402cb3 <rb_strcasecmp@plt+0x7a3>
  402c37:	lea    rsi,[rsi+0x10]
  402c3b:	lea    rdi,[rdi+0x20]
  402c3f:	mov    edx,0x10
  402c44:	call   4023f0 <memcmp@plt>
  402c49:	test   eax,eax
  402c4b:	je     402c90 <rb_strcasecmp@plt+0x780>
  402c4d:	xor    edi,edi
  402c4f:	mov    rax,QWORD PTR [rbx+0xa0]
  402c56:	test   rax,rax
  402c59:	je     402c70 <rb_strcasecmp@plt+0x760>
  402c5b:	xor    esi,esi
  402c5d:	test   rdi,rdi
  402c60:	mov    rcx,QWORD PTR [rbx+0xa8]
  402c67:	mov    edx,DWORD PTR [rbx+0x10]
  402c6a:	setne  sil
  402c6e:	call   rax
  402c70:	add    rsp,0x8
  402c74:	mov    rdi,rbx
  402c77:	pop    rbx
  402c78:	pop    rbp
  402c79:	jmp    4021e0 <free@plt>
  402c7e:	xchg   ax,ax
  402c80:	xor    edi,edi
  402c82:	mov    eax,DWORD PTR [rsi+0xc]
  402c85:	cmp    DWORD PTR [rbx+0x1c],eax
  402c88:	jne    402c4f <rb_strcasecmp@plt+0x73f>
  402c8a:	nop    WORD PTR [rax+rax*1+0x0]
  402c90:	mov    rdi,QWORD PTR [rbp+0x0]
  402c94:	jmp    402c4f <rb_strcasecmp@plt+0x73f>
  402c96:	lea    rsi,[rip+0x8573]        # 40b210 <rb_strcasecmp@plt+0x8d00>
  402c9d:	mov    edi,0x43
  402ca2:	xor    eax,eax
  402ca4:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  402ca9:	mov    edi,0x2
  402cae:	call   4020b0 <exit@plt>
  402cb3:	lea    rsi,[rip+0x858e]        # 40b248 <rb_strcasecmp@plt+0x8d38>
  402cba:	mov    edi,0x43
  402cbf:	xor    eax,eax
  402cc1:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  402cc6:	mov    edi,0x2
  402ccb:	call   4020b0 <exit@plt>
  402cd0:	test   rcx,rcx
  402cd3:	push   rbx
  402cd4:	je     402d3e <rb_strcasecmp@plt+0x82e>
  402cd6:	test   edx,edx
  402cd8:	je     402d3e <rb_strcasecmp@plt+0x82e>
  402cda:	test   rdi,rdi
  402cdd:	mov    rbx,rcx
  402ce0:	je     402d18 <rb_strcasecmp@plt+0x808>
  402ce2:	cmp    sil,0x1
  402ce6:	jne    402d18 <rb_strcasecmp@plt+0x808>
  402ce8:	mov    rax,0x410ee0
  402cef:	mov    r8,rdi
  402cf2:	lea    rsi,[rip+0x85fc]        # 40b2f5 <rb_strcasecmp@plt+0x8de5>
  402cf9:	mov    ecx,edx
  402cfb:	mov    rdx,rbx
  402cfe:	mov    rdi,QWORD PTR [rax]
  402d01:	xor    eax,eax
  402d03:	call   402410 <rb_helper_write@plt>
  402d08:	mov    rdi,rbx
  402d0b:	pop    rbx
  402d0c:	jmp    4021e0 <free@plt>
  402d11:	nop    DWORD PTR [rax+0x0]
  402d18:	mov    rax,0x410ee0
  402d1f:	lea    rsi,[rip+0x85c3]        # 40b2e9 <rb_strcasecmp@plt+0x8dd9>
  402d26:	mov    ecx,edx
  402d28:	mov    rdx,rbx
  402d2b:	mov    rdi,QWORD PTR [rax]
  402d2e:	xor    eax,eax
  402d30:	call   402410 <rb_helper_write@plt>
  402d35:	mov    rdi,rbx
  402d38:	pop    rbx
  402d39:	jmp    4021e0 <free@plt>
  402d3e:	lea    rsi,[rip+0x8543]        # 40b288 <rb_strcasecmp@plt+0x8d78>
  402d45:	mov    edi,0x43
  402d4a:	xor    eax,eax
  402d4c:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  402d51:	mov    edi,0x2
  402d56:	call   4020b0 <exit@plt>
  402d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	push   r13
  402d62:	push   r12
  402d64:	mov    r13,rdx
  402d67:	push   rbp
  402d68:	push   rbx
  402d69:	mov    rbp,rdi
  402d6c:	mov    ebx,esi
  402d6e:	mov    edi,0x1
  402d73:	mov    esi,0xb0
  402d78:	sub    rsp,0x18
  402d7c:	mov    r12,rcx
  402d7f:	call   402400 <calloc@plt>
  402d84:	test   rax,rax
  402d87:	je     402e20 <rb_strcasecmp@plt+0x910>
  402d8d:	cmp    ebx,0x2
  402d90:	je     402db0 <rb_strcasecmp@plt+0x8a0>
  402d92:	cmp    ebx,0xa
  402d95:	je     402e10 <rb_strcasecmp@plt+0x900>
  402d97:	mov    rdi,rax
  402d9a:	call   4021e0 <free@plt>
  402d9f:	add    rsp,0x18
  402da3:	xor    eax,eax
  402da5:	pop    rbx
  402da6:	pop    rbp
  402da7:	pop    r12
  402da9:	pop    r13
  402dab:	ret    
  402dac:	nop    DWORD PTR [rax+0x0]
  402db0:	mov    DWORD PTR [rax+0x10],0x34
  402db7:	mov    edx,0x1
  402dbc:	mov    rsi,0x414f60
  402dc3:	mov    QWORD PTR [rax+0xa0],r13
  402dca:	mov    QWORD PTR [rax+0xa8],r12
  402dd1:	mov    QWORD PTR [rax],rax
  402dd4:	mov    QWORD PTR [rsp+0x8],rax
  402dd9:	mov    rcx,QWORD PTR [rsi]
  402ddc:	lea    rdi,[rcx+0x1]
  402de0:	mov    QWORD PTR [rax+0x98],rcx
  402de7:	lea    rcx,[rip+0xfffffffffffffca2]        # 402a90 <rb_strcasecmp@plt+0x580>
  402dee:	mov    QWORD PTR [rsi],rdi
  402df1:	mov    QWORD PTR [rax+0x8],rcx
  402df5:	mov    rsi,rax
  402df8:	mov    rdi,rbp
  402dfb:	call   404890 <rb_strcasecmp@plt+0x2380>
  402e00:	mov    rax,QWORD PTR [rsp+0x8]
  402e05:	add    rsp,0x18
  402e09:	pop    rbx
  402e0a:	pop    rbp
  402e0b:	pop    r12
  402e0d:	pop    r13
  402e0f:	ret    
  402e10:	mov    DWORD PTR [rax+0x10],0x36
  402e17:	mov    edx,0x1c
  402e1c:	jmp    402dbc <rb_strcasecmp@plt+0x8ac>
  402e1e:	xchg   ax,ax
  402e20:	call   402330 <rb_outofmemory@plt>
  402e25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e30:	push   r14
  402e32:	push   r13
  402e34:	mov    r14,rsi
  402e37:	push   r12
  402e39:	push   rbp
  402e3a:	mov    r12,rdi
  402e3d:	push   rbx
  402e3e:	mov    esi,0xb0
  402e43:	mov    edi,0x1
  402e48:	mov    r13,rdx
  402e4b:	call   402400 <calloc@plt>
  402e50:	test   rax,rax
  402e53:	je     402f00 <rb_strcasecmp@plt+0x9f0>
  402e59:	lea    rbp,[rax+0x18]
  402e5d:	mov    rdi,r12
  402e60:	mov    rbx,rax
  402e63:	mov    rsi,rbp
  402e66:	call   402240 <rb_inet_pton_sock@plt>
  402e6b:	test   eax,eax
  402e6d:	jne    402e88 <rb_strcasecmp@plt+0x978>
  402e6f:	mov    rdi,rbx
  402e72:	call   4021e0 <free@plt>
  402e77:	pop    rbx
  402e78:	xor    eax,eax
  402e7a:	pop    rbp
  402e7b:	pop    r12
  402e7d:	pop    r13
  402e7f:	pop    r14
  402e81:	ret    
  402e82:	nop    WORD PTR [rax+rax*1+0x0]
  402e88:	movzx  eax,WORD PTR [rbx+0x18]
  402e8c:	cmp    eax,0x2
  402e8f:	je     402ef0 <rb_strcasecmp@plt+0x9e0>
  402e91:	cmp    eax,0xa
  402e94:	jne    402e6f <rb_strcasecmp@plt+0x95f>
  402e96:	mov    DWORD PTR [rbx+0x10],0x53
  402e9d:	mov    rdx,0x414f60
  402ea4:	mov    QWORD PTR [rbx+0xa0],r14
  402eab:	mov    rsi,rbx
  402eae:	mov    QWORD PTR [rbx+0xa8],r13
  402eb5:	mov    QWORD PTR [rbx],rbx
  402eb8:	mov    rdi,rbp
  402ebb:	mov    rax,QWORD PTR [rdx]
  402ebe:	lea    rcx,[rax+0x1]
  402ec2:	mov    QWORD PTR [rbx+0x98],rax
  402ec9:	lea    rax,[rip+0xfffffffffffffd40]        # 402c10 <rb_strcasecmp@plt+0x700>
  402ed0:	mov    QWORD PTR [rbx+0x8],rax
  402ed4:	mov    QWORD PTR [rdx],rcx
  402ed7:	call   405490 <rb_strcasecmp@plt+0x2f80>
  402edc:	mov    rax,rbx
  402edf:	pop    rbx
  402ee0:	pop    rbp
  402ee1:	pop    r12
  402ee3:	pop    r13
  402ee5:	pop    r14
  402ee7:	ret    
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	mov    DWORD PTR [rbx+0x10],0x52
  402ef7:	jmp    402e9d <rb_strcasecmp@plt+0x98d>
  402ef9:	nop    DWORD PTR [rax+0x0]
  402f00:	call   402330 <rb_outofmemory@plt>
  402f05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f10:	mov    QWORD PTR [rdi+0xa8],0x0
  402f1b:	mov    QWORD PTR [rdi+0xa0],0x0
  402f26:	ret    
  402f27:	nop    WORD PTR [rax+rax*1+0x0]
  402f30:	push   r12
  402f32:	push   rbp
  402f33:	mov    rbp,rsi
  402f36:	push   rbx
  402f37:	mov    r12,QWORD PTR [rsi+0x8]
  402f3b:	mov    rdi,r12
  402f3e:	call   4021f0 <strlen@plt>
  402f43:	lea    rbx,[rax+0x1]
  402f47:	mov    rdi,rbx
  402f4a:	call   402150 <malloc@plt>
  402f4f:	test   rax,rax
  402f52:	je     403000 <rb_strcasecmp@plt+0xaf0>
  402f58:	mov    rdx,rbx
  402f5b:	mov    rdi,rax
  402f5e:	mov    rsi,r12
  402f61:	call   402500 <memcpy@plt>
  402f66:	mov    rcx,rax
  402f69:	mov    rax,QWORD PTR [rbp+0x10]
  402f6d:	mov    rdi,QWORD PTR [rbp+0x18]
  402f71:	movzx  ebx,BYTE PTR [rax]
  402f74:	cmp    bl,0x36
  402f77:	je     402ff0 <rb_strcasecmp@plt+0xae0>
  402f79:	jg     402fa0 <rb_strcasecmp@plt+0xa90>
  402f7b:	cmp    bl,0x34
  402f7e:	mov    esi,0x2
  402f83:	jne    402fd0 <rb_strcasecmp@plt+0xac0>
  402f85:	lea    rdx,[rip+0xfffffffffffffd44]        # 402cd0 <rb_strcasecmp@plt+0x7c0>
  402f8c:	call   402d60 <rb_strcasecmp@plt+0x850>
  402f91:	test   rax,rax
  402f94:	je     402fbb <rb_strcasecmp@plt+0xaab>
  402f96:	pop    rbx
  402f97:	pop    rbp
  402f98:	pop    r12
  402f9a:	ret    
  402f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	lea    eax,[rbx-0x52]
  402fa3:	cmp    al,0x1
  402fa5:	ja     402fd0 <rb_strcasecmp@plt+0xac0>
  402fa7:	lea    rsi,[rip+0xfffffffffffffd22]        # 402cd0 <rb_strcasecmp@plt+0x7c0>
  402fae:	mov    rdx,rcx
  402fb1:	call   402e30 <rb_strcasecmp@plt+0x920>
  402fb6:	test   rax,rax
  402fb9:	jne    402f96 <rb_strcasecmp@plt+0xa86>
  402fbb:	movsx  edx,bl
  402fbe:	xor    ecx,ecx
  402fc0:	xor    esi,esi
  402fc2:	pop    rbx
  402fc3:	pop    rbp
  402fc4:	pop    r12
  402fc6:	xor    edi,edi
  402fc8:	jmp    402cd0 <rb_strcasecmp@plt+0x7c0>
  402fcd:	nop    DWORD PTR [rax]
  402fd0:	lea    rsi,[rip+0x82e1]        # 40b2b8 <rb_strcasecmp@plt+0x8da8>
  402fd7:	mov    edi,0x43
  402fdc:	movsx  edx,bl
  402fdf:	xor    eax,eax
  402fe1:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  402fe6:	mov    edi,0x2
  402feb:	call   4020b0 <exit@plt>
  402ff0:	mov    esi,0xa
  402ff5:	jmp    402f85 <rb_strcasecmp@plt+0xa75>
  402ff7:	nop    WORD PTR [rax+rax*1+0x0]
  403000:	call   402330 <rb_outofmemory@plt>
  403005:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403010:	push   r15
  403012:	push   r14
  403014:	push   r13
  403016:	push   r12
  403018:	push   rbp
  403019:	push   rbx
  40301a:	sub    rsp,0x288
  403021:	mov    rax,QWORD PTR fs:0x28
  40302a:	mov    QWORD PTR [rsp+0x278],rax
  403032:	xor    eax,eax
  403034:	mov    rax,0x415010
  40303b:	mov    DWORD PTR [rsp+0x8],edi
  40303f:	mov    DWORD PTR [rsp+0xc],esi
  403043:	cmp    DWORD PTR [rax],0x0
  403046:	je     403199 <rb_strcasecmp@plt+0xc89>
  40304c:	lea    r15,[rsp+0x50]
  403051:	jle    403126 <rb_strcasecmp@plt+0xc16>
  403057:	lea    rax,[rsp+0x50]
  40305c:	mov    r12,0x415340
  403063:	lea    rbx,[rsp+0x10]
  403068:	xor    r13d,r13d
  40306b:	xor    ebp,ebp
  40306d:	mov    QWORD PTR [rsp],rax
  403071:	nop    DWORD PTR [rax+0x0]
  403078:	mov    edx,0x35
  40307d:	mov    rsi,rbx
  403080:	mov    rdi,r12
  403083:	call   4023b0 <rb_inet_ntop_sock@plt>
  403088:	cmp    BYTE PTR [rsp+0x10],0x0
  40308d:	je     403165 <rb_strcasecmp@plt+0xc55>
  403093:	mov    r15,rbx
  403096:	mov    edx,DWORD PTR [r15]
  403099:	add    r15,0x4
  40309d:	lea    eax,[rdx-0x1010101]
  4030a3:	andn   eax,edx,eax
  4030a8:	and    eax,0x80808080
  4030ad:	je     403096 <rb_strcasecmp@plt+0xb86>
  4030af:	mov    edx,eax
  4030b1:	mov    r14,QWORD PTR [rsp]
  4030b5:	mov    esi,0x21c
  4030ba:	shr    edx,0x10
  4030bd:	test   eax,0x8080
  4030c2:	lea    r8,[rip+0x8284]        # 40b34d <rb_strcasecmp@plt+0x8e3d>
  4030c9:	cmove  eax,edx
  4030cc:	lea    rdx,[r15+0x2]
  4030d0:	mov    r9,rbx
  4030d3:	mov    ecx,eax
  4030d5:	lea    rdi,[r14+rbp*1]
  4030d9:	cmove  r15,rdx
  4030dd:	add    cl,al
  4030df:	mov    edx,0x1
  4030e4:	sbb    r15,0x3
  4030e8:	mov    rcx,0xffffffffffffffff
  4030ef:	sub    rsi,rbp
  4030f2:	xor    eax,eax
  4030f4:	sub    r15,rbx
  4030f7:	add    r13d,0x1
  4030fb:	call   402480 <__snprintf_chk@plt>
  403100:	mov    rax,0x415010
  403107:	sub    r12,0xffffffffffffff80
  40310b:	lea    rbp,[r15+rbp*1+0x1]
  403110:	cmp    DWORD PTR [rax],r13d
  403113:	jg     403078 <rb_strcasecmp@plt+0xb68>
  403119:	test   rbp,rbp
  40311c:	mov    r15,r14
  40311f:	je     403126 <rb_strcasecmp@plt+0xc16>
  403121:	mov    BYTE PTR [rsp+rbp*1+0x4f],0x0
  403126:	movsx  esi,BYTE PTR [rsp+0xc]
  40312b:	mov    edi,DWORD PTR [rsp+0x8]
  40312f:	lea    rdx,[rip+0x8ba4]        # 40bcda <rb_strcasecmp@plt+0x97ca>
  403136:	xor    eax,eax
  403138:	mov    rcx,r15
  40313b:	call   403410 <rb_strcasecmp@plt+0xf00>
  403140:	mov    rax,QWORD PTR [rsp+0x278]
  403148:	xor    rax,QWORD PTR fs:0x28
  403151:	jne    4031ba <rb_strcasecmp@plt+0xcaa>
  403153:	add    rsp,0x288
  40315a:	pop    rbx
  40315b:	pop    rbp
  40315c:	pop    r12
  40315e:	pop    r13
  403160:	pop    r14
  403162:	pop    r15
  403164:	ret    
  403165:	lea    rsi,[rip+0x81ba]        # 40b326 <rb_strcasecmp@plt+0x8e16>
  40316c:	mov    edi,0x43
  403171:	xor    eax,eax
  403173:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  403178:	movsx  esi,BYTE PTR [rsp+0xc]
  40317d:	lea    rdx,[rip+0x81b7]        # 40b33b <rb_strcasecmp@plt+0x8e2b>
  403184:	mov    edi,DWORD PTR [rsp+0x8]
  403188:	xor    eax,eax
  40318a:	call   403530 <rb_strcasecmp@plt+0x1020>
  40318f:	mov    edi,0x2
  403194:	call   4020b0 <exit@plt>
  403199:	lea    rsi,[rip+0x8162]        # 40b302 <rb_strcasecmp@plt+0x8df2>
  4031a0:	mov    edi,0x43
  4031a5:	xor    eax,eax
  4031a7:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  4031ac:	movsx  esi,BYTE PTR [rsp+0xc]
  4031b1:	lea    rdx,[rip+0x8160]        # 40b318 <rb_strcasecmp@plt+0x8e08>
  4031b8:	jmp    403184 <rb_strcasecmp@plt+0xc74>
  4031ba:	call   402380 <__stack_chk_fail@plt>
  4031bf:	nop
  4031c0:	jmp    404860 <rb_strcasecmp@plt+0x2350>
  4031c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031cf:	nop
  4031d0:	push   rbp
  4031d1:	push   rbx
  4031d2:	mov    ebp,edi
  4031d4:	sub    rsp,0x2e8
  4031db:	test   al,al
  4031dd:	mov    QWORD PTR [rsp+0x240],rdx
  4031e5:	mov    QWORD PTR [rsp+0x248],rcx
  4031ed:	mov    QWORD PTR [rsp+0x250],r8
  4031f5:	mov    QWORD PTR [rsp+0x258],r9
  4031fd:	je     403247 <rb_strcasecmp@plt+0xd37>
  4031ff:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  403208:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  403211:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  40321a:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403223:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  40322c:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403235:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  40323e:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  403247:	mov    rax,QWORD PTR fs:0x28
  403250:	mov    QWORD PTR [rsp+0x228],rax
  403258:	xor    eax,eax
  40325a:	lea    rax,[rsp+0x300]
  403262:	lea    rbx,[rsp+0x20]
  403267:	lea    r9,[rsp+0x8]
  40326c:	mov    r8,rsi
  40326f:	mov    ecx,0x200
  403274:	mov    edx,0x1
  403279:	mov    QWORD PTR [rsp+0x10],rax
  40327e:	lea    rax,[rsp+0x230]
  403286:	mov    esi,0x200
  40328b:	mov    rdi,rbx
  40328e:	mov    DWORD PTR [rsp+0x8],0x10
  403296:	mov    DWORD PTR [rsp+0xc],0x30
  40329e:	mov    QWORD PTR [rsp+0x18],rax
  4032a3:	call   4021a0 <__vsnprintf_chk@plt>
  4032a8:	mov    rax,0x410ee0
  4032af:	lea    rsi,[rip+0x809b]        # 40b351 <rb_strcasecmp@plt+0x8e41>
  4032b6:	mov    rcx,rbx
  4032b9:	mov    edx,ebp
  4032bb:	mov    rdi,QWORD PTR [rax]
  4032be:	xor    eax,eax
  4032c0:	call   402410 <rb_helper_write@plt>
  4032c5:	mov    rax,QWORD PTR [rsp+0x228]
  4032cd:	xor    rax,QWORD PTR fs:0x28
  4032d6:	jne    4032e2 <rb_strcasecmp@plt+0xdd2>
  4032d8:	add    rsp,0x2e8
  4032df:	pop    rbx
  4032e0:	pop    rbp
  4032e1:	ret    
  4032e2:	call   402380 <__stack_chk_fail@plt>
  4032e7:	nop    WORD PTR [rax+rax*1+0x0]
  4032f0:	push   rbp
  4032f1:	push   rbx
  4032f2:	mov    ebp,edi
  4032f4:	sub    rsp,0x2e8
  4032fb:	test   al,al
  4032fd:	mov    QWORD PTR [rsp+0x240],rdx
  403305:	mov    QWORD PTR [rsp+0x248],rcx
  40330d:	mov    QWORD PTR [rsp+0x250],r8
  403315:	mov    QWORD PTR [rsp+0x258],r9
  40331d:	je     403367 <rb_strcasecmp@plt+0xe57>
  40331f:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  403328:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  403331:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  40333a:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403343:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  40334c:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403355:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  40335e:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  403367:	mov    rax,QWORD PTR fs:0x28
  403370:	mov    QWORD PTR [rsp+0x228],rax
  403378:	xor    eax,eax
  40337a:	lea    rax,[rsp+0x300]
  403382:	lea    rbx,[rsp+0x20]
  403387:	lea    r9,[rsp+0x8]
  40338c:	mov    r8,rsi
  40338f:	mov    ecx,0x200
  403394:	mov    edx,0x1
  403399:	mov    QWORD PTR [rsp+0x10],rax
  40339e:	lea    rax,[rsp+0x230]
  4033a6:	mov    esi,0x200
  4033ab:	mov    rdi,rbx
  4033ae:	mov    DWORD PTR [rsp+0x8],0x10
  4033b6:	mov    DWORD PTR [rsp+0xc],0x30
  4033be:	mov    QWORD PTR [rsp+0x18],rax
  4033c3:	call   4021a0 <__vsnprintf_chk@plt>
  4033c8:	mov    rax,0x410ee0
  4033cf:	lea    rsi,[rip+0x7f84]        # 40b35a <rb_strcasecmp@plt+0x8e4a>
  4033d6:	mov    rcx,rbx
  4033d9:	mov    edx,ebp
  4033db:	mov    rdi,QWORD PTR [rax]
  4033de:	xor    eax,eax
  4033e0:	call   402410 <rb_helper_write@plt>
  4033e5:	mov    rax,QWORD PTR [rsp+0x228]
  4033ed:	xor    rax,QWORD PTR fs:0x28
  4033f6:	jne    403402 <rb_strcasecmp@plt+0xef2>
  4033f8:	add    rsp,0x2e8
  4033ff:	pop    rbx
  403400:	pop    rbp
  403401:	ret    
  403402:	call   402380 <__stack_chk_fail@plt>
  403407:	nop    WORD PTR [rax+rax*1+0x0]
  403410:	push   r12
  403412:	push   rbp
  403413:	mov    r12d,edi
  403416:	push   rbx
  403417:	mov    ebx,esi
  403419:	sub    rsp,0x2e0
  403420:	test   al,al
  403422:	mov    QWORD PTR [rsp+0x248],rcx
  40342a:	mov    QWORD PTR [rsp+0x250],r8
  403432:	mov    QWORD PTR [rsp+0x258],r9
  40343a:	je     403484 <rb_strcasecmp@plt+0xf74>
  40343c:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  403445:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  40344e:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  403457:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403460:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  403469:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403472:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  40347b:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  403484:	mov    rax,QWORD PTR fs:0x28
  40348d:	mov    QWORD PTR [rsp+0x228],rax
  403495:	xor    eax,eax
  403497:	lea    rax,[rsp+0x300]
  40349f:	lea    rbp,[rsp+0x20]
  4034a4:	lea    r9,[rsp+0x8]
  4034a9:	mov    r8,rdx
  4034ac:	mov    ecx,0x200
  4034b1:	mov    edx,0x1
  4034b6:	mov    QWORD PTR [rsp+0x10],rax
  4034bb:	lea    rax,[rsp+0x230]
  4034c3:	mov    esi,0x200
  4034c8:	mov    rdi,rbp
  4034cb:	mov    DWORD PTR [rsp+0x8],0x18
  4034d3:	mov    DWORD PTR [rsp+0xc],0x30
  4034db:	mov    QWORD PTR [rsp+0x18],rax
  4034e0:	call   4021a0 <__vsnprintf_chk@plt>
  4034e5:	mov    rax,0x410ee0
  4034ec:	lea    rsi,[rip+0x7e70]        # 40b363 <rb_strcasecmp@plt+0x8e53>
  4034f3:	movsx  ecx,bl
  4034f6:	mov    r8,rbp
  4034f9:	mov    edx,r12d
  4034fc:	mov    rdi,QWORD PTR [rax]
  4034ff:	xor    eax,eax
  403501:	call   402410 <rb_helper_write@plt>
  403506:	mov    rax,QWORD PTR [rsp+0x228]
  40350e:	xor    rax,QWORD PTR fs:0x28
  403517:	jne    403525 <rb_strcasecmp@plt+0x1015>
  403519:	add    rsp,0x2e0
  403520:	pop    rbx
  403521:	pop    rbp
  403522:	pop    r12
  403524:	ret    
  403525:	call   402380 <__stack_chk_fail@plt>
  40352a:	nop    WORD PTR [rax+rax*1+0x0]
  403530:	push   r12
  403532:	push   rbp
  403533:	mov    r12d,edi
  403536:	push   rbx
  403537:	mov    ebx,esi
  403539:	sub    rsp,0x2e0
  403540:	test   al,al
  403542:	mov    QWORD PTR [rsp+0x248],rcx
  40354a:	mov    QWORD PTR [rsp+0x250],r8
  403552:	mov    QWORD PTR [rsp+0x258],r9
  40355a:	je     4035a4 <rb_strcasecmp@plt+0x1094>
  40355c:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  403565:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  40356e:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  403577:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403580:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  403589:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403592:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  40359b:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  4035a4:	mov    rax,QWORD PTR fs:0x28
  4035ad:	mov    QWORD PTR [rsp+0x228],rax
  4035b5:	xor    eax,eax
  4035b7:	lea    rax,[rsp+0x300]
  4035bf:	lea    rbp,[rsp+0x20]
  4035c4:	lea    r9,[rsp+0x8]
  4035c9:	mov    r8,rdx
  4035cc:	mov    ecx,0x200
  4035d1:	mov    edx,0x1
  4035d6:	mov    QWORD PTR [rsp+0x10],rax
  4035db:	lea    rax,[rsp+0x230]
  4035e3:	mov    esi,0x200
  4035e8:	mov    rdi,rbp
  4035eb:	mov    DWORD PTR [rsp+0x8],0x18
  4035f3:	mov    DWORD PTR [rsp+0xc],0x30
  4035fb:	mov    QWORD PTR [rsp+0x18],rax
  403600:	call   4021a0 <__vsnprintf_chk@plt>
  403605:	mov    rax,0x410ee0
  40360c:	lea    rsi,[rip+0x7d5b]        # 40b36e <rb_strcasecmp@plt+0x8e5e>
  403613:	movsx  ecx,bl
  403616:	mov    r8,rbp
  403619:	mov    edx,r12d
  40361c:	mov    rdi,QWORD PTR [rax]
  40361f:	xor    eax,eax
  403621:	call   402410 <rb_helper_write@plt>
  403626:	mov    rax,QWORD PTR [rsp+0x228]
  40362e:	xor    rax,QWORD PTR fs:0x28
  403637:	jne    403645 <rb_strcasecmp@plt+0x1135>
  403639:	add    rsp,0x2e0
  403640:	pop    rbx
  403641:	pop    rbp
  403642:	pop    r12
  403644:	ret    
  403645:	call   402380 <__stack_chk_fail@plt>
  40364a:	nop    WORD PTR [rax+rax*1+0x0]
  403650:	mov    rax,0x410ee0
  403657:	mov    edx,edi
  403659:	movsx  ecx,sil
  40365d:	lea    rsi,[rip+0x7d15]        # 40b379 <rb_strcasecmp@plt+0x8e69>
  403664:	mov    rdi,QWORD PTR [rax]
  403667:	xor    eax,eax
  403669:	jmp    402410 <rb_helper_write@plt>
  40366e:	xchg   ax,ax
  403670:	mov    eax,esi
  403672:	sub    eax,edi
  403674:	ret    
  403675:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403680:	mov    rax,QWORD PTR [rip+0x11909]        # 414f90 <rb_strcasecmp@plt+0x12a80>
  403687:	push   r12
  403689:	push   rbp
  40368a:	mov    rbp,rdi
  40368d:	push   rbx
  40368e:	test   rax,rax
  403691:	jne    403758 <rb_strcasecmp@plt+0x1248>
  403697:	mov    eax,DWORD PTR [rip+0x118db]        # 414f78 <rb_strcasecmp@plt+0x12a68>
  40369d:	cmp    eax,0x20
  4036a0:	je     4037c8 <rb_strcasecmp@plt+0x12b8>
  4036a6:	cmp    eax,0xffffffff
  4036a9:	je     4037c8 <rb_strcasecmp@plt+0x12b8>
  4036af:	lea    edx,[rax+0x1]
  4036b2:	mov    DWORD PTR [rdi+0x18],eax
  4036b5:	mov    DWORD PTR [rip+0x118bd],edx        # 414f78 <rb_strcasecmp@plt+0x12a68>
  4036bb:	mov    rbx,QWORD PTR [rbp+0x70]
  4036bf:	test   rbx,rbx
  4036c2:	je     4036f0 <rb_strcasecmp@plt+0x11e0>
  4036c4:	mov    rsi,QWORD PTR [rbx]
  4036c7:	test   rsi,rsi
  4036ca:	je     4036f0 <rb_strcasecmp@plt+0x11e0>
  4036cc:	mov    r12,0x4151e8
  4036d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4036d8:	mov    rdi,QWORD PTR [r12]
  4036dc:	mov    rdx,rbx
  4036df:	add    rbx,0x18
  4036e3:	call   402350 <rb_dictionary_add@plt>
  4036e8:	mov    rsi,QWORD PTR [rbx]
  4036eb:	test   rsi,rsi
  4036ee:	jne    4036d8 <rb_strcasecmp@plt+0x11c8>
  4036f0:	movzx  eax,BYTE PTR [rbp+0x60]
  4036f4:	test   al,al
  4036f6:	jne    403740 <rb_strcasecmp@plt+0x1230>
  4036f8:	mov    rax,QWORD PTR [rbp+0x30]
  4036fc:	test   rax,rax
  4036ff:	je     403703 <rb_strcasecmp@plt+0x11f3>
  403701:	call   rax
  403703:	mov    rax,0x415200
  40370a:	mov    QWORD PTR [rbp+0x0],rbp
  40370e:	mov    QWORD PTR [rbp+0x8],0x0
  403716:	mov    rdx,QWORD PTR [rax]
  403719:	test   rdx,rdx
  40371c:	mov    QWORD PTR [rbp+0x10],rdx
  403720:	je     4037b0 <rb_strcasecmp@plt+0x12a0>
  403726:	mov    QWORD PTR [rdx+0x8],rbp
  40372a:	add    QWORD PTR [rax+0x10],0x1
  40372f:	mov    QWORD PTR [rax],rbp
  403732:	pop    rbx
  403733:	pop    rbp
  403734:	pop    r12
  403736:	ret    
  403737:	nop    WORD PTR [rax+rax*1+0x0]
  403740:	mov    rcx,QWORD PTR [rbp+0x68]
  403744:	mov    rdx,0x40fac0
  40374b:	mov    QWORD PTR [rdx+rax*8],rcx
  40374f:	jmp    4036f8 <rb_strcasecmp@plt+0x11e8>
  403751:	nop    DWORD PTR [rax+0x0]
  403758:	mov    rdx,QWORD PTR [rip+0x11821]        # 414f80 <rb_strcasecmp@plt+0x12a70>
  40375f:	mov    rcx,QWORD PTR [rdx]
  403762:	mov    DWORD PTR [rdi+0x18],ecx
  403765:	mov    rdi,QWORD PTR [rdx+0x10]
  403769:	mov    rcx,QWORD PTR [rdx+0x8]
  40376d:	test   rdi,rdi
  403770:	je     4037e8 <rb_strcasecmp@plt+0x12d8>
  403772:	mov    QWORD PTR [rdi+0x8],rcx
  403776:	mov    rcx,QWORD PTR [rdx+0x8]
  40377a:	test   rcx,rcx
  40377d:	je     4037df <rb_strcasecmp@plt+0x12cf>
  40377f:	mov    QWORD PTR [rcx+0x10],rdi
  403783:	mov    rdi,rdx
  403786:	mov    QWORD PTR [rdx+0x8],0x0
  40378e:	mov    QWORD PTR [rdx+0x10],0x0
  403796:	sub    rax,0x1
  40379a:	mov    QWORD PTR [rip+0x117ef],rax        # 414f90 <rb_strcasecmp@plt+0x12a80>
  4037a1:	call   4022a0 <rb_free_rb_dlink_node@plt>
  4037a6:	jmp    4036bb <rb_strcasecmp@plt+0x11ab>
  4037ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4037b0:	cmp    QWORD PTR [rax+0x8],0x0
  4037b5:	jne    40372a <rb_strcasecmp@plt+0x121a>
  4037bb:	mov    QWORD PTR [rax+0x8],rbp
  4037bf:	jmp    40372a <rb_strcasecmp@plt+0x121a>
  4037c4:	nop    DWORD PTR [rax+0x0]
  4037c8:	pop    rbx
  4037c9:	pop    rbp
  4037ca:	pop    r12
  4037cc:	lea    rsi,[rip+0x7bb5]        # 40b388 <rb_strcasecmp@plt+0x8e78>
  4037d3:	mov    edi,0x57
  4037d8:	xor    eax,eax
  4037da:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  4037df:	mov    QWORD PTR [rip+0x1179a],rdi        # 414f80 <rb_strcasecmp@plt+0x12a70>
  4037e6:	jmp    403786 <rb_strcasecmp@plt+0x1276>
  4037e8:	mov    QWORD PTR [rip+0x11799],rcx        # 414f88 <rb_strcasecmp@plt+0x12a78>
  4037ef:	jmp    40377a <rb_strcasecmp@plt+0x126a>
  4037f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4037fc:	nop    DWORD PTR [rax+0x0]
  403800:	lea    rsi,[rip+0xfffffffffffffe69]        # 403670 <rb_strcasecmp@plt+0x1160>
  403807:	lea    rdi,[rip+0x7d0e]        # 40b51c <rb_strcasecmp@plt+0x900c>
  40380e:	sub    rsp,0x8
  403812:	call   4023d0 <rb_dictionary_create@plt>
  403817:	mov    rdx,0x4151f0
  40381e:	lea    rsi,[rip+0x1eb]        # 403a10 <rb_strcasecmp@plt+0x1500>
  403825:	lea    rdi,[rip+0x7d05]        # 40b531 <rb_strcasecmp@plt+0x9021>
  40382c:	mov    ecx,0x1
  403831:	mov    QWORD PTR [rdx],rax
  403834:	xor    edx,edx
  403836:	call   402040 <rb_event_addish@plt>
  40383b:	mov    rdi,0x410ae0
  403842:	mov    QWORD PTR [rip+0x11727],rax        # 414f70 <rb_strcasecmp@plt+0x12a60>
  403849:	call   403680 <rb_strcasecmp@plt+0x1170>
  40384e:	mov    rdi,0x410d80
  403855:	call   403680 <rb_strcasecmp@plt+0x1170>
  40385a:	mov    rdi,0x410cc0
  403861:	call   403680 <rb_strcasecmp@plt+0x1170>
  403866:	mov    rdi,0x410be0
  40386d:	add    rsp,0x8
  403871:	jmp    403680 <rb_strcasecmp@plt+0x1170>
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	push   r12
  403882:	push   rbp
  403883:	mov    rbp,rdi
  403886:	push   rbx
  403887:	mov    rbx,QWORD PTR [rdi+0x70]
  40388b:	test   rbx,rbx
  40388e:	je     4038b5 <rb_strcasecmp@plt+0x13a5>
  403890:	mov    rsi,QWORD PTR [rbx]
  403893:	test   rsi,rsi
  403896:	je     4038b5 <rb_strcasecmp@plt+0x13a5>
  403898:	mov    r12,0x4151e8
  40389f:	nop
  4038a0:	mov    rdi,QWORD PTR [r12]
  4038a4:	add    rbx,0x18
  4038a8:	call   402270 <rb_dictionary_delete@plt>
  4038ad:	mov    rsi,QWORD PTR [rbx]
  4038b0:	test   rsi,rsi
  4038b3:	jne    4038a0 <rb_strcasecmp@plt+0x1390>
  4038b5:	movzx  eax,BYTE PTR [rbp+0x60]
  4038b9:	test   al,al
  4038bb:	je     4038cc <rb_strcasecmp@plt+0x13bc>
  4038bd:	mov    rdx,0x40fac0
  4038c4:	mov    QWORD PTR [rdx+rax*8],0x0
  4038cc:	mov    rax,QWORD PTR [rbp+0x38]
  4038d0:	test   rax,rax
  4038d3:	je     4038d7 <rb_strcasecmp@plt+0x13c7>
  4038d5:	call   rax
  4038d7:	mov    rax,QWORD PTR [rbp+0x10]
  4038db:	test   rax,rax
  4038de:	je     403980 <rb_strcasecmp@plt+0x1470>
  4038e4:	mov    rdx,QWORD PTR [rbp+0x8]
  4038e8:	mov    QWORD PTR [rax+0x8],rdx
  4038ec:	mov    rdx,0x415200
  4038f3:	mov    rcx,QWORD PTR [rbp+0x8]
  4038f7:	test   rcx,rcx
  4038fa:	je     403960 <rb_strcasecmp@plt+0x1450>
  4038fc:	mov    QWORD PTR [rcx+0x10],rax
  403900:	mov    QWORD PTR [rbp+0x8],0x0
  403908:	mov    QWORD PTR [rbp+0x10],0x0
  403910:	sub    QWORD PTR [rdx+0x10],0x1
  403915:	call   402490 <rb_make_rb_dlink_node@plt>
  40391a:	mov    edx,DWORD PTR [rbp+0x18]
  40391d:	test   rdx,rdx
  403920:	je     4039b3 <rb_strcasecmp@plt+0x14a3>
  403926:	test   rax,rax
  403929:	je     403994 <rb_strcasecmp@plt+0x1484>
  40392b:	mov    QWORD PTR [rax],rdx
  40392e:	mov    rdx,QWORD PTR [rip+0x1164b]        # 414f80 <rb_strcasecmp@plt+0x12a70>
  403935:	mov    QWORD PTR [rax+0x8],0x0
  40393d:	test   rdx,rdx
  403940:	mov    QWORD PTR [rax+0x10],rdx
  403944:	je     403968 <rb_strcasecmp@plt+0x1458>
  403946:	mov    QWORD PTR [rdx+0x8],rax
  40394a:	pop    rbx
  40394b:	mov    QWORD PTR [rip+0x1162e],rax        # 414f80 <rb_strcasecmp@plt+0x12a70>
  403952:	add    QWORD PTR [rip+0x11636],0x1        # 414f90 <rb_strcasecmp@plt+0x12a80>
  40395a:	pop    rbp
  40395b:	pop    r12
  40395d:	ret    
  40395e:	xchg   ax,ax
  403960:	mov    QWORD PTR [rdx],rax
  403963:	jmp    403900 <rb_strcasecmp@plt+0x13f0>
  403965:	nop    DWORD PTR [rax]
  403968:	cmp    QWORD PTR [rip+0x11618],0x0        # 414f88 <rb_strcasecmp@plt+0x12a78>
  403970:	jne    40394a <rb_strcasecmp@plt+0x143a>
  403972:	mov    QWORD PTR [rip+0x1160f],rax        # 414f88 <rb_strcasecmp@plt+0x12a78>
  403979:	jmp    40394a <rb_strcasecmp@plt+0x143a>
  40397b:	nop    DWORD PTR [rax+rax*1+0x0]
  403980:	mov    rcx,QWORD PTR [rbp+0x8]
  403984:	mov    rdx,0x415200
  40398b:	mov    QWORD PTR [rdx+0x8],rcx
  40398f:	jmp    4038f7 <rb_strcasecmp@plt+0x13e7>
  403994:	lea    rcx,[rip+0x7c0d]        # 40b5a8 <rb_strcasecmp@plt+0x9098>
  40399b:	lea    rsi,[rip+0x7ba6]        # 40b548 <rb_strcasecmp@plt+0x9038>
  4039a2:	lea    rdi,[rip+0x7bc8]        # 40b571 <rb_strcasecmp@plt+0x9061>
  4039a9:	mov    edx,0x90
  4039ae:	call   4020c0 <__assert_fail@plt>
  4039b3:	lea    rcx,[rip+0x7bee]        # 40b5a8 <rb_strcasecmp@plt+0x9098>
  4039ba:	lea    rsi,[rip+0x7b87]        # 40b548 <rb_strcasecmp@plt+0x9038>
  4039c1:	lea    rdi,[rip+0x7b9c]        # 40b564 <rb_strcasecmp@plt+0x9054>
  4039c8:	mov    edx,0x8f
  4039cd:	call   4020c0 <__assert_fail@plt>
  4039d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039dd:	nop    DWORD PTR [rax]
  4039e0:	mov    rax,0x4151f0
  4039e7:	push   rbx
  4039e8:	mov    rbx,rdi
  4039eb:	mov    esi,DWORD PTR [rdi]
  4039ed:	mov    rdi,QWORD PTR [rax]
  4039f0:	call   402270 <rb_dictionary_delete@plt>
  4039f5:	mov    rdi,QWORD PTR [rbx+0x1d0]
  4039fc:	test   rdi,rdi
  4039ff:	je     403a06 <rb_strcasecmp@plt+0x14f6>
  403a01:	call   4021e0 <free@plt>
  403a06:	mov    rdi,rbx
  403a09:	pop    rbx
  403a0a:	jmp    4021e0 <free@plt>
  403a0f:	nop
  403a10:	push   r14
  403a12:	push   r13
  403a14:	push   r12
  403a16:	push   rbp
  403a17:	push   rbx
  403a18:	sub    rsp,0x20
  403a1c:	mov    rax,QWORD PTR fs:0x28
  403a25:	mov    QWORD PTR [rsp+0x18],rax
  403a2a:	xor    eax,eax
  403a2c:	call   402260 <rb_current_time@plt>
  403a31:	mov    rbx,0x4151f0
  403a38:	mov    rsi,rsp
  403a3b:	mov    r12,rax
  403a3e:	mov    rbp,rsp
  403a41:	mov    rdi,QWORD PTR [rbx]
  403a44:	call   402230 <rb_dictionary_foreach_start@plt>
  403a49:	nop    DWORD PTR [rax+0x0]
  403a50:	mov    rdi,QWORD PTR [rbx]
  403a53:	mov    rsi,rbp
  403a56:	call   402110 <rb_dictionary_foreach_cur@plt>
  403a5b:	test   rax,rax
  403a5e:	mov    r14,rax
  403a61:	je     403b12 <rb_strcasecmp@plt+0x1602>
  403a67:	mov    rdx,0x415200
  403a6e:	mov    eax,DWORD PTR [r14+0x1cc]
  403a75:	mov    r13,QWORD PTR [rdx]
  403a78:	add    eax,0x1
  403a7b:	mov    DWORD PTR [r14+0x1cc],eax
  403a82:	test   r13,r13
  403a85:	jne    403a99 <rb_strcasecmp@plt+0x1589>
  403a87:	jmp    403ae7 <rb_strcasecmp@plt+0x15d7>
  403a89:	nop    DWORD PTR [rax+0x0]
  403a90:	mov    r13,QWORD PTR [r13+0x10]
  403a94:	test   r13,r13
  403a97:	je     403ae0 <rb_strcasecmp@plt+0x15d0>
  403a99:	mov    rcx,QWORD PTR [r13+0x0]
  403a9d:	mov    edx,DWORD PTR [rcx+0x18]
  403aa0:	shl    rdx,0x5
  403aa4:	add    rdx,QWORD PTR [r14+0x1d0]
  403aab:	cmp    DWORD PTR [rdx+0x18],0x1
  403aaf:	jne    403a90 <rb_strcasecmp@plt+0x1580>
  403ab1:	mov    rcx,QWORD PTR [rcx+0x50]
  403ab5:	test   rcx,rcx
  403ab8:	je     403a90 <rb_strcasecmp@plt+0x1580>
  403aba:	mov    rax,QWORD PTR [rdx+0x8]
  403abe:	test   rax,rax
  403ac1:	jle    403a90 <rb_strcasecmp@plt+0x1580>
  403ac3:	cmp    r12,rax
  403ac6:	jle    403a90 <rb_strcasecmp@plt+0x1580>
  403ac8:	mov    rdi,r14
  403acb:	call   rcx
  403acd:	mov    r13,QWORD PTR [r13+0x10]
  403ad1:	test   r13,r13
  403ad4:	jne    403a99 <rb_strcasecmp@plt+0x1589>
  403ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ae0:	mov    eax,DWORD PTR [r14+0x1cc]
  403ae7:	sub    eax,0x1
  403aea:	test   eax,eax
  403aec:	mov    DWORD PTR [r14+0x1cc],eax
  403af3:	je     403b08 <rb_strcasecmp@plt+0x15f8>
  403af5:	mov    rdi,QWORD PTR [rbx]
  403af8:	mov    rsi,rbp
  403afb:	call   4021c0 <rb_dictionary_foreach_next@plt>
  403b00:	jmp    403a50 <rb_strcasecmp@plt+0x1540>
  403b05:	nop    DWORD PTR [rax]
  403b08:	mov    rdi,r14
  403b0b:	call   4039e0 <rb_strcasecmp@plt+0x14d0>
  403b10:	jmp    403af5 <rb_strcasecmp@plt+0x15e5>
  403b12:	mov    rax,QWORD PTR [rsp+0x18]
  403b17:	xor    rax,QWORD PTR fs:0x28
  403b20:	jne    403b2f <rb_strcasecmp@plt+0x161f>
  403b22:	add    rsp,0x20
  403b26:	pop    rbx
  403b27:	pop    rbp
  403b28:	pop    r12
  403b2a:	pop    r13
  403b2c:	pop    r14
  403b2e:	ret    
  403b2f:	call   402380 <__stack_chk_fail@plt>
  403b34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b3f:	nop
  403b40:	cmp    BYTE PTR [rdi+0x1c4],0x0
  403b47:	jne    403bb6 <rb_strcasecmp@plt+0x16a6>
  403b49:	mov    eax,DWORD PTR [rdi+0x1c8]
  403b4f:	mov    BYTE PTR [rdi+0x1c4],0x1
  403b56:	test   eax,eax
  403b58:	je     403bb6 <rb_strcasecmp@plt+0x16a6>
  403b5a:	push   rbp
  403b5b:	push   rbx
  403b5c:	mov    rbp,rdi
  403b5f:	sub    rsp,0x8
  403b63:	mov    rax,0x415200
  403b6a:	mov    rbx,QWORD PTR [rax]
  403b6d:	test   rbx,rbx
  403b70:	jne    403b81 <rb_strcasecmp@plt+0x1671>
  403b72:	jmp    403bb0 <rb_strcasecmp@plt+0x16a0>
  403b74:	nop    DWORD PTR [rax+0x0]
  403b78:	mov    rbx,QWORD PTR [rbx+0x10]
  403b7c:	test   rbx,rbx
  403b7f:	je     403bb0 <rb_strcasecmp@plt+0x16a0>
  403b81:	mov    rax,QWORD PTR [rbx]
  403b84:	mov    rdx,QWORD PTR [rax+0x48]
  403b88:	test   rdx,rdx
  403b8b:	je     403b78 <rb_strcasecmp@plt+0x1668>
  403b8d:	mov    eax,DWORD PTR [rax+0x18]
  403b90:	shl    rax,0x5
  403b94:	add    rax,QWORD PTR [rbp+0x1d0]
  403b9b:	cmp    DWORD PTR [rax+0x18],0x1
  403b9f:	jne    403b78 <rb_strcasecmp@plt+0x1668>
  403ba1:	mov    rdi,rbp
  403ba4:	call   rdx
  403ba6:	mov    rbx,QWORD PTR [rbx+0x10]
  403baa:	test   rbx,rbx
  403bad:	jne    403b81 <rb_strcasecmp@plt+0x1671>
  403baf:	nop
  403bb0:	add    rsp,0x8
  403bb4:	pop    rbx
  403bb5:	pop    rbp
  403bb6:	repz ret 
  403bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403bc0:	push   r13
  403bc2:	push   r12
  403bc4:	mov    r12,rdx
  403bc7:	push   rbp
  403bc8:	push   rbx
  403bc9:	mov    ebp,esi
  403bcb:	mov    rbx,rdi
  403bce:	sub    rsp,0x2e8
  403bd5:	test   al,al
  403bd7:	mov    QWORD PTR [rsp+0x250],r8
  403bdf:	mov    QWORD PTR [rsp+0x258],r9
  403be7:	je     403c31 <rb_strcasecmp@plt+0x1721>
  403be9:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  403bf2:	vmovaps XMMWORD PTR [rsp+0x270],xmm1
  403bfb:	vmovaps XMMWORD PTR [rsp+0x280],xmm2
  403c04:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  403c0d:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm4
  403c16:	vmovaps XMMWORD PTR [rsp+0x2b0],xmm5
  403c1f:	vmovaps XMMWORD PTR [rsp+0x2c0],xmm6
  403c28:	vmovaps XMMWORD PTR [rsp+0x2d0],xmm7
  403c31:	mov    rax,QWORD PTR fs:0x28
  403c3a:	mov    QWORD PTR [rsp+0x228],rax
  403c42:	xor    eax,eax
  403c44:	lea    rax,[rsp+0x310]
  403c4c:	lea    r13,[rsp+0x20]
  403c51:	lea    r9,[rsp+0x8]
  403c56:	mov    r8,rcx
  403c59:	mov    edx,0x1
  403c5e:	mov    ecx,0x200
  403c63:	mov    QWORD PTR [rsp+0x10],rax
  403c68:	lea    rax,[rsp+0x230]
  403c70:	mov    esi,0x200
  403c75:	mov    rdi,r13
  403c78:	mov    DWORD PTR [rsp+0x8],0x20
  403c80:	mov    DWORD PTR [rsp+0xc],0x30
  403c88:	mov    QWORD PTR [rsp+0x18],rax
  403c8d:	call   4021a0 <__vsnprintf_chk@plt>
  403c92:	lea    rax,[rip+0x765a]        # 40b2f3 <rb_strcasecmp@plt+0x8de3>
  403c99:	test   r12,r12
  403c9c:	lea    r9,[rbx+0x178]
  403ca3:	lea    r8,[rbx+0x1b8]
  403caa:	cmove  r12,rax
  403cae:	cmp    ebp,0xffffffff
  403cb1:	je     403d28 <rb_strcasecmp@plt+0x1818>
  403cb3:	mov    rax,QWORD PTR [rbx+0x1d0]
  403cba:	shl    rbp,0x5
  403cbe:	mov    edx,DWORD PTR [rbx]
  403cc0:	lea    rsi,[rip+0x78b4]        # 40b57b <rb_strcasecmp@plt+0x906b>
  403cc7:	mov    rax,QWORD PTR [rax+rbp*1]
  403ccb:	movsx  ecx,BYTE PTR [rax+0x28]
  403ccf:	mov    rax,0x410ee0
  403cd6:	push   r13
  403cd8:	push   r12
  403cda:	mov    rdi,QWORD PTR [rax]
  403cdd:	xor    eax,eax
  403cdf:	call   402410 <rb_helper_write@plt>
  403ce4:	mov    rax,QWORD PTR [rbx+0x1d0]
  403ceb:	mov    DWORD PTR [rax+rbp*1+0x18],0x2
  403cf3:	sub    DWORD PTR [rbx+0x1c8],0x1
  403cfa:	pop    rcx
  403cfb:	pop    rsi
  403cfc:	mov    rdi,rbx
  403cff:	call   403b40 <rb_strcasecmp@plt+0x1630>
  403d04:	mov    rax,QWORD PTR [rsp+0x228]
  403d0c:	xor    rax,QWORD PTR fs:0x28
  403d15:	jne    403d4f <rb_strcasecmp@plt+0x183f>
  403d17:	add    rsp,0x2e8
  403d1e:	pop    rbx
  403d1f:	pop    rbp
  403d20:	pop    r12
  403d22:	pop    r13
  403d24:	ret    
  403d25:	nop    DWORD PTR [rax]
  403d28:	mov    rax,0x410ee0
  403d2f:	mov    edx,DWORD PTR [rbx]
  403d31:	lea    rsi,[rip+0x7843]        # 40b57b <rb_strcasecmp@plt+0x906b>
  403d38:	push   r13
  403d3a:	push   r12
  403d3c:	mov    ecx,0x2a
  403d41:	mov    rdi,QWORD PTR [rax]
  403d44:	xor    eax,eax
  403d46:	call   402410 <rb_helper_write@plt>
  403d4b:	pop    rax
  403d4c:	pop    rdx
  403d4d:	jmp    403cfc <rb_strcasecmp@plt+0x17ec>
  403d4f:	call   402380 <__stack_chk_fail@plt>
  403d54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d5f:	nop
  403d60:	push   r13
  403d62:	push   r12
  403d64:	lea    r13,[rip+0x764d]        # 40b3b8 <rb_strcasecmp@plt+0x8ea8>
  403d6b:	push   rbp
  403d6c:	push   rbx
  403d6d:	sub    rsp,0x28
  403d71:	mov    r12,0x4151f0
  403d78:	mov    rsi,rsp
  403d7b:	mov    rbp,rsp
  403d7e:	mov    rax,QWORD PTR fs:0x28
  403d87:	mov    QWORD PTR [rsp+0x18],rax
  403d8c:	xor    eax,eax
  403d8e:	mov    rdi,QWORD PTR [r12]
  403d92:	call   402230 <rb_dictionary_foreach_start@plt>
  403d97:	jmp    403dac <rb_strcasecmp@plt+0x189c>
  403d99:	nop    DWORD PTR [rax+0x0]
  403da0:	mov    rdi,QWORD PTR [r12]
  403da4:	mov    rsi,rbp
  403da7:	call   4021c0 <rb_dictionary_foreach_next@plt>
  403dac:	mov    rdi,QWORD PTR [r12]
  403db0:	mov    rsi,rbp
  403db3:	call   402110 <rb_dictionary_foreach_cur@plt>
  403db8:	test   rax,rax
  403dbb:	mov    rbx,rax
  403dbe:	je     403df8 <rb_strcasecmp@plt+0x18e8>
  403dc0:	add    DWORD PTR [rbx+0x1cc],0x1
  403dc7:	lea    rdx,[rip+0x77c2]        # 40b590 <rb_strcasecmp@plt+0x9080>
  403dce:	xor    eax,eax
  403dd0:	mov    rcx,r13
  403dd3:	mov    esi,0xffffffff
  403dd8:	mov    rdi,rbx
  403ddb:	call   403bc0 <rb_strcasecmp@plt+0x16b0>
  403de0:	sub    DWORD PTR [rbx+0x1cc],0x1
  403de7:	jne    403da0 <rb_strcasecmp@plt+0x1890>
  403de9:	mov    rdi,rbx
  403dec:	call   4039e0 <rb_strcasecmp@plt+0x14d0>
  403df1:	jmp    403da0 <rb_strcasecmp@plt+0x1890>
  403df3:	nop    DWORD PTR [rax+rax*1+0x0]
  403df8:	mov    r13,0x415200
  403dff:	mov    rbx,QWORD PTR [r13+0x0]
  403e03:	test   rbx,rbx
  403e06:	je     403e68 <rb_strcasecmp@plt+0x1958>
  403e08:	mov    rbp,QWORD PTR [rbx+0x10]
  403e0c:	jmp    403e35 <rb_strcasecmp@plt+0x1925>
  403e0e:	xchg   ax,ax
  403e10:	mov    QWORD PTR [rdx+0x10],rax
  403e14:	mov    QWORD PTR [rbx+0x8],0x0
  403e1c:	mov    QWORD PTR [rbx+0x10],0x0
  403e24:	sub    QWORD PTR [r13+0x10],0x1
  403e29:	test   rbp,rbp
  403e2c:	je     403e68 <rb_strcasecmp@plt+0x1958>
  403e2e:	mov    rbx,rbp
  403e31:	mov    rbp,QWORD PTR [rbp+0x10]
  403e35:	mov    rax,QWORD PTR [rbx]
  403e38:	mov    rax,QWORD PTR [rax+0x38]
  403e3c:	test   rax,rax
  403e3f:	je     403e43 <rb_strcasecmp@plt+0x1933>
  403e41:	call   rax
  403e43:	mov    rax,QWORD PTR [rbx+0x10]
  403e47:	mov    rdx,QWORD PTR [rbx+0x8]
  403e4b:	test   rax,rax
  403e4e:	je     403ea0 <rb_strcasecmp@plt+0x1990>
  403e50:	mov    QWORD PTR [rax+0x8],rdx
  403e54:	mov    rdx,QWORD PTR [rbx+0x8]
  403e58:	test   rdx,rdx
  403e5b:	jne    403e10 <rb_strcasecmp@plt+0x1900>
  403e5d:	mov    QWORD PTR [r13+0x0],rax
  403e61:	jmp    403e14 <rb_strcasecmp@plt+0x1904>
  403e63:	nop    DWORD PTR [rax+rax*1+0x0]
  403e68:	mov    rdi,QWORD PTR [r12]
  403e6c:	xor    edx,edx
  403e6e:	xor    esi,esi
  403e70:	call   4022f0 <rb_dictionary_destroy@plt>
  403e75:	mov    rdi,QWORD PTR [rip+0x110f4]        # 414f70 <rb_strcasecmp@plt+0x12a60>
  403e7c:	call   402080 <rb_event_delete@plt>
  403e81:	mov    rax,QWORD PTR [rsp+0x18]
  403e86:	xor    rax,QWORD PTR fs:0x28
  403e8f:	jne    403ea6 <rb_strcasecmp@plt+0x1996>
  403e91:	add    rsp,0x28
  403e95:	pop    rbx
  403e96:	pop    rbp
  403e97:	pop    r12
  403e99:	pop    r13
  403e9b:	ret    
  403e9c:	nop    DWORD PTR [rax+0x0]
  403ea0:	mov    QWORD PTR [r13+0x8],rdx
  403ea4:	jmp    403e58 <rb_strcasecmp@plt+0x1948>
  403ea6:	call   402380 <__stack_chk_fail@plt>
  403eab:	nop    DWORD PTR [rax+rax*1+0x0]
  403eb0:	mov    rax,0x410ee0
  403eb7:	push   rbx
  403eb8:	lea    rcx,[rdi+0x1b8]
  403ebf:	mov    rbx,rdi
  403ec2:	lea    r8,[rdi+0x178]
  403ec9:	mov    edx,DWORD PTR [rdi]
  403ecb:	lea    rsi,[rip+0x76c6]        # 40b598 <rb_strcasecmp@plt+0x9088>
  403ed2:	mov    rdi,QWORD PTR [rax]
  403ed5:	xor    eax,eax
  403ed7:	call   402410 <rb_helper_write@plt>
  403edc:	mov    rdi,rbx
  403edf:	pop    rbx
  403ee0:	jmp    403b40 <rb_strcasecmp@plt+0x1630>
  403ee5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403ef0:	mov    eax,esi
  403ef2:	shl    rax,0x5
  403ef6:	add    rax,QWORD PTR [rdi+0x1d0]
  403efd:	mov    DWORD PTR [rax+0x18],0x2
  403f04:	sub    DWORD PTR [rdi+0x1c8],0x1
  403f0b:	jne    403f16 <rb_strcasecmp@plt+0x1a06>
  403f0d:	cmp    BYTE PTR [rdi+0x1c3],0x0
  403f14:	je     403f70 <rb_strcasecmp@plt+0x1a60>
  403f16:	mov    rax,0x415200
  403f1d:	push   r12
  403f1f:	mov    r12,rdi
  403f22:	push   rbp
  403f23:	push   rbx
  403f24:	mov    ebp,esi
  403f26:	mov    rbx,QWORD PTR [rax]
  403f29:	test   rbx,rbx
  403f2c:	jne    403f39 <rb_strcasecmp@plt+0x1a29>
  403f2e:	jmp    403f6a <rb_strcasecmp@plt+0x1a5a>
  403f30:	mov    rbx,QWORD PTR [rbx+0x10]
  403f34:	test   rbx,rbx
  403f37:	je     403f6a <rb_strcasecmp@plt+0x1a5a>
  403f39:	mov    rax,QWORD PTR [rbx]
  403f3c:	mov    rdx,QWORD PTR [rax+0x58]
  403f40:	test   rdx,rdx
  403f43:	je     403f30 <rb_strcasecmp@plt+0x1a20>
  403f45:	mov    eax,DWORD PTR [rax+0x18]
  403f48:	shl    rax,0x5
  403f4c:	add    rax,QWORD PTR [r12+0x1d0]
  403f54:	cmp    DWORD PTR [rax+0x18],0x1
  403f58:	jne    403f30 <rb_strcasecmp@plt+0x1a20>
  403f5a:	mov    esi,ebp
  403f5c:	mov    rdi,r12
  403f5f:	call   rdx
  403f61:	mov    rbx,QWORD PTR [rbx+0x10]
  403f65:	test   rbx,rbx
  403f68:	jne    403f39 <rb_strcasecmp@plt+0x1a29>
  403f6a:	pop    rbx
  403f6b:	pop    rbp
  403f6c:	pop    r12
  403f6e:	ret    
  403f6f:	nop
  403f70:	jmp    403eb0 <rb_strcasecmp@plt+0x19a0>
  403f75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403f80:	push   r15
  403f82:	push   r14
  403f84:	push   r13
  403f86:	push   r12
  403f88:	push   rbp
  403f89:	push   rbx
  403f8a:	sub    rsp,0x18
  403f8e:	cmp    edi,0x5
  403f91:	jle    4041f5 <rb_strcasecmp@plt+0x1ce5>
  403f97:	cmp    edi,0x6
  403f9a:	lea    rbp,[rip+0x7646]        # 40b5e7 <rb_strcasecmp@plt+0x90d7>
  403fa1:	je     403fa7 <rb_strcasecmp@plt+0x1a97>
  403fa3:	mov    rbp,QWORD PTR [rsi+0x30]
  403fa7:	mov    rbx,QWORD PTR [rsi+0x8]
  403fab:	mov    rax,QWORD PTR [rsi+0x28]
  403faf:	mov    edx,0x10
  403fb4:	mov    r12,QWORD PTR [rsi+0x20]
  403fb8:	mov    r15,QWORD PTR [rsi+0x18]
  403fbc:	mov    r13,QWORD PTR [rsi+0x10]
  403fc0:	xor    esi,esi
  403fc2:	mov    rdi,rbx
  403fc5:	mov    QWORD PTR [rsp],rax
  403fc9:	call   402450 <strtoull@plt>
  403fce:	lea    rcx,[rax-0x1]
  403fd2:	mov    rdx,rax
  403fd5:	mov    eax,0xfffffffe
  403fda:	cmp    rcx,rax
  403fdd:	jbe    403ff0 <rb_strcasecmp@plt+0x1ae0>
  403fdf:	add    rsp,0x18
  403fe3:	pop    rbx
  403fe4:	pop    rbp
  403fe5:	pop    r12
  403fe7:	pop    r13
  403fe9:	pop    r14
  403feb:	pop    r15
  403fed:	ret    
  403fee:	xchg   ax,ax
  403ff0:	mov    esi,0x1d8
  403ff5:	mov    edi,0x1
  403ffa:	mov    QWORD PTR [rsp+0x8],rdx
  403fff:	call   402400 <calloc@plt>
  404004:	test   rax,rax
  404007:	mov    r14,rax
  40400a:	mov    rdx,QWORD PTR [rsp+0x8]
  40400f:	je     4041f0 <rb_strcasecmp@plt+0x1ce0>
  404015:	add    DWORD PTR [rax+0x1cc],0x1
  40401c:	mov    DWORD PTR [rax],edx
  40401e:	mov    rsi,rdx
  404021:	mov    rax,0x4151f0
  404028:	mov    rdi,QWORD PTR [rax]
  40402b:	call   4023c0 <rb_dictionary_find@plt>
  404030:	test   rax,rax
  404033:	jne    404214 <rb_strcasecmp@plt+0x1d04>
  404039:	mov    rax,0x4151f0
  404040:	mov    esi,DWORD PTR [r14]
  404043:	mov    rdx,r14
  404046:	mov    rdi,QWORD PTR [rax]
  404049:	call   402350 <rb_dictionary_add@plt>
  40404e:	xor    esi,esi
  404050:	mov    edx,0x10
  404055:	mov    rdi,rbp
  404058:	call   402450 <strtoull@plt>
  40405d:	lea    rdi,[r14+0x8]
  404061:	mov    edx,0x36
  404066:	mov    rsi,r13
  404069:	mov    DWORD PTR [r14+0x4],eax
  40406d:	call   4021b0 <rb_strlcpy@plt>
  404072:	mov    edx,0xa
  404077:	xor    esi,esi
  404079:	mov    rdi,r15
  40407c:	call   4022d0 <strtol@plt>
  404081:	lea    rsi,[r14+0x40]
  404085:	mov    rdi,r13
  404088:	mov    WORD PTR [r14+0x3e],ax
  40408d:	call   402240 <rb_inet_pton_sock@plt>
  404092:	movzx  eax,WORD PTR [r14+0x3e]
  404097:	lea    rdi,[r14+0xc0]
  40409e:	mov    edx,0x36
  4040a3:	mov    rsi,r12
  4040a6:	rol    ax,0x8
  4040aa:	mov    WORD PTR [r14+0x42],ax
  4040af:	call   4021b0 <rb_strlcpy@plt>
  4040b4:	mov    rdi,QWORD PTR [rsp]
  4040b8:	mov    edx,0xa
  4040bd:	xor    esi,esi
  4040bf:	call   4022d0 <strtol@plt>
  4040c4:	lea    rsi,[r14+0xf8]
  4040cb:	mov    rdi,r12
  4040ce:	mov    WORD PTR [r14+0xf6],ax
  4040d6:	call   402240 <rb_inet_pton_sock@plt>
  4040db:	movzx  eax,WORD PTR [r14+0xf6]
  4040e3:	lea    rdi,[r14+0x178]
  4040ea:	lea    rsi,[rip+0x7202]        # 40b2f3 <rb_strcasecmp@plt+0x8de3>
  4040f1:	mov    edx,0x40
  4040f6:	rol    ax,0x8
  4040fa:	mov    WORD PTR [r14+0xfa],ax
  404102:	call   4021b0 <rb_strlcpy@plt>
  404107:	lea    rdi,[r14+0x1b8]
  40410e:	lea    rsi,[rip+0x71de]        # 40b2f3 <rb_strcasecmp@plt+0x8de3>
  404115:	mov    edx,0xb
  40411a:	call   4021b0 <rb_strlcpy@plt>
  40411f:	mov    esi,DWORD PTR [rip+0x10e53]        # 414f78 <rb_strcasecmp@plt+0x12a68>
  404125:	mov    edi,0x1
  40412a:	shl    rsi,0x5
  40412e:	call   402400 <calloc@plt>
  404133:	test   rax,rax
  404136:	je     4041f0 <rb_strcasecmp@plt+0x1ce0>
  40413c:	mov    rdx,0x415200
  404143:	mov    QWORD PTR [r14+0x1d0],rax
  40414a:	mov    BYTE PTR [r14+0x1c3],0x1
  404152:	mov    rbx,QWORD PTR [rdx]
  404155:	test   rbx,rbx
  404158:	jne    40417a <rb_strcasecmp@plt+0x1c6a>
  40415a:	jmp    4041d0 <rb_strcasecmp@plt+0x1cc0>
  40415c:	nop    DWORD PTR [rax+0x0]
  404160:	cmp    BYTE PTR [r14+0x1c4],0x0
  404168:	jne    4041d0 <rb_strcasecmp@plt+0x1cc0>
  40416a:	mov    rbx,QWORD PTR [rbx+0x10]
  40416e:	test   rbx,rbx
  404171:	je     4041d0 <rb_strcasecmp@plt+0x1cc0>
  404173:	mov    rax,QWORD PTR [r14+0x1d0]
  40417a:	mov    rdx,QWORD PTR [rbx]
  40417d:	mov    rdi,r14
  404180:	mov    esi,DWORD PTR [rdx+0x18]
  404183:	shl    rsi,0x5
  404187:	add    rax,rsi
  40418a:	mov    QWORD PTR [rax],rdx
  40418d:	add    DWORD PTR [r14+0x1c8],0x1
  404195:	mov    DWORD PTR [rax+0x18],0x1
  40419c:	call   QWORD PTR [rdx+0x40]
  40419f:	test   al,al
  4041a1:	jne    404160 <rb_strcasecmp@plt+0x1c50>
  4041a3:	sub    DWORD PTR [r14+0x1cc],0x1
  4041ab:	jne    403fdf <rb_strcasecmp@plt+0x1acf>
  4041b1:	add    rsp,0x18
  4041b5:	mov    rdi,r14
  4041b8:	pop    rbx
  4041b9:	pop    rbp
  4041ba:	pop    r12
  4041bc:	pop    r13
  4041be:	pop    r14
  4041c0:	pop    r15
  4041c2:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  4041c7:	nop    WORD PTR [rax+rax*1+0x0]
  4041d0:	mov    eax,DWORD PTR [r14+0x1c8]
  4041d7:	mov    BYTE PTR [r14+0x1c3],0x0
  4041df:	test   eax,eax
  4041e1:	jne    4041a3 <rb_strcasecmp@plt+0x1c93>
  4041e3:	mov    rdi,r14
  4041e6:	call   403eb0 <rb_strcasecmp@plt+0x19a0>
  4041eb:	jmp    4041a3 <rb_strcasecmp@plt+0x1c93>
  4041ed:	nop    DWORD PTR [rax]
  4041f0:	call   402330 <rb_outofmemory@plt>
  4041f5:	lea    rsi,[rip+0x7204]        # 40b400 <rb_strcasecmp@plt+0x8ef0>
  4041fc:	mov    edx,edi
  4041fe:	xor    eax,eax
  404200:	mov    edi,0x43
  404205:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40420a:	mov    edi,0x3
  40420f:	call   4020b0 <exit@plt>
  404214:	lea    rsi,[rip+0x7235]        # 40b450 <rb_strcasecmp@plt+0x8f40>
  40421b:	mov    edi,0x43
  404220:	mov    rdx,rbx
  404223:	xor    eax,eax
  404225:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40422a:	mov    edi,0x3
  40422f:	call   4020b0 <exit@plt>
  404234:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40423f:	nop
  404240:	cmp    edi,0x1
  404243:	push   rbx
  404244:	jle    4042ca <rb_strcasecmp@plt+0x1dba>
  40424a:	mov    rdi,QWORD PTR [rsi+0x8]
  40424e:	mov    edx,0x10
  404253:	mov    rbx,rsi
  404256:	xor    esi,esi
  404258:	call   402450 <strtoull@plt>
  40425d:	lea    rcx,[rax-0x1]
  404261:	mov    edx,0xfffffffe
  404266:	cmp    rcx,rdx
  404269:	ja     4042a9 <rb_strcasecmp@plt+0x1d99>
  40426b:	mov    rsi,rax
  40426e:	mov    rax,0x4151f0
  404275:	mov    rdi,QWORD PTR [rax]
  404278:	call   402320 <rb_dictionary_retrieve@plt>
  40427d:	test   rax,rax
  404280:	mov    rbx,rax
  404283:	je     40429d <rb_strcasecmp@plt+0x1d8d>
  404285:	add    DWORD PTR [rax+0x1cc],0x1
  40428c:	mov    rdi,rax
  40428f:	call   403b40 <rb_strcasecmp@plt+0x1630>
  404294:	sub    DWORD PTR [rbx+0x1cc],0x1
  40429b:	je     4042a0 <rb_strcasecmp@plt+0x1d90>
  40429d:	pop    rbx
  40429e:	ret    
  40429f:	nop
  4042a0:	mov    rdi,rbx
  4042a3:	pop    rbx
  4042a4:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  4042a9:	mov    rdx,QWORD PTR [rbx+0x8]
  4042ad:	lea    rsi,[rip+0x7224]        # 40b4d8 <rb_strcasecmp@plt+0x8fc8>
  4042b4:	mov    edi,0x43
  4042b9:	xor    eax,eax
  4042bb:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  4042c0:	mov    edi,0x3
  4042c5:	call   4020b0 <exit@plt>
  4042ca:	lea    rsi,[rip+0x71b7]        # 40b488 <rb_strcasecmp@plt+0x8f78>
  4042d1:	mov    edx,edi
  4042d3:	xor    eax,eax
  4042d5:	mov    edi,0x43
  4042da:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  4042df:	mov    edi,0x3
  4042e4:	call   4020b0 <exit@plt>
  4042e9:	nop    DWORD PTR [rax+0x0]
  4042f0:	sub    rsp,0x8
  4042f4:	call   4055c0 <rb_strcasecmp@plt+0x30b0>
  4042f9:	mov    rax,0x415010
  404300:	mov    edx,DWORD PTR [rax]
  404302:	test   edx,edx
  404304:	jle    404327 <rb_strcasecmp@plt+0x1e17>
  404306:	lea    rax,[rip+0x10cb3]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  40430d:	sub    edx,0x1
  404310:	lea    rdx,[rax+rdx*4+0x4]
  404315:	nop    DWORD PTR [rax]
  404318:	mov    DWORD PTR [rax],0x0
  40431e:	add    rax,0x4
  404322:	cmp    rax,rdx
  404325:	jne    404318 <rb_strcasecmp@plt+0x1e08>
  404327:	cmp    QWORD PTR [rip+0x10cd9],0x0        # 415008 <rb_strcasecmp@plt+0x12af8>
  40432f:	je     404340 <rb_strcasecmp@plt+0x1e30>
  404331:	add    rsp,0x8
  404335:	ret    
  404336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404340:	mov    rax,0x415340
  404347:	lea    rcx,[rip+0x7266]        # 40b5b4 <rb_strcasecmp@plt+0x90a4>
  40434e:	xor    edx,edx
  404350:	mov    esi,0x2
  404355:	movzx  edi,WORD PTR [rax]
  404358:	call   4020e0 <rb_socket@plt>
  40435d:	test   rax,rax
  404360:	mov    QWORD PTR [rip+0x10ca1],rax        # 415008 <rb_strcasecmp@plt+0x12af8>
  404367:	je     404331 <rb_strcasecmp@plt+0x1e21>
  404369:	lea    rdx,[rip+0x10f0]        # 405460 <rb_strcasecmp@plt+0x2f50>
  404370:	mov    rdi,rax
  404373:	xor    ecx,ecx
  404375:	mov    esi,0x1
  40437a:	call   402090 <rb_setselect@plt>
  40437f:	lea    rsi,[rip+0xa2a]        # 404db0 <rb_strcasecmp@plt+0x28a0>
  404386:	lea    rdi,[rip+0x723b]        # 40b5c8 <rb_strcasecmp@plt+0x90b8>
  40438d:	mov    ecx,0x1
  404392:	xor    edx,edx
  404394:	call   402440 <rb_event_add@plt>
  404399:	mov    QWORD PTR [rip+0x10c08],rax        # 414fa8 <rb_strcasecmp@plt+0x12a98>
  4043a0:	jmp    404331 <rb_strcasecmp@plt+0x1e21>
  4043a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4043ad:	nop    DWORD PTR [rax]
  4043b0:	push   r15
  4043b2:	push   r14
  4043b4:	mov    ecx,0x80
  4043b9:	push   r13
  4043bb:	push   r12
  4043bd:	mov    r8d,0x400
  4043c3:	push   rbp
  4043c4:	push   rbx
  4043c5:	mov    rbx,rdi
  4043c8:	mov    esi,0x1
  4043cd:	sub    rsp,0x438
  4043d4:	movsx  edx,BYTE PTR [rbx+0x28]
  4043d8:	lea    r10,[rsp+0x20]
  4043dd:	mov    QWORD PTR [rsp+0x10],rdi
  4043e2:	mov    rax,QWORD PTR fs:0x28
  4043eb:	mov    QWORD PTR [rsp+0x428],rax
  4043f3:	xor    eax,eax
  4043f5:	mov    rdi,r10
  4043f8:	mov    QWORD PTR [rsp+0x8],r10
  4043fd:	rep stos QWORD PTR es:[rdi],rax
  404400:	lea    rdi,[rbx+0x29]
  404404:	mov    rcx,r10
  404407:	call   405e30 <rb_strcasecmp@plt+0x3920>
  40440c:	test   eax,eax
  40440e:	mov    edi,eax
  404410:	mov    DWORD PTR [rsp+0x1c],eax
  404414:	jle    4045a4 <rb_strcasecmp@plt+0x2094>
  40441a:	mov    rbp,0x415010
  404421:	movzx  esi,BYTE PTR [rbx+0x12a]
  404428:	mov    eax,DWORD PTR [rbx+0x18]
  40442b:	add    DWORD PTR [rip+0x10b6e],0x1        # 414fa0 <rb_strcasecmp@plt+0x12a90>
  404432:	mov    edx,DWORD PTR [rbp+0x0]
  404435:	mov    WORD PTR [rsp+0x20],ax
  40443a:	mov    rax,rbx
  40443d:	lea    ebx,[rsi+0x1]
  404440:	mov    BYTE PTR [rsp+0x18],sil
  404445:	test   edx,edx
  404447:	mov    BYTE PTR [rax+0x12a],bl
  40444d:	jle    4045a4 <rb_strcasecmp@plt+0x2094>
  404453:	movsx  ebx,bl
  404456:	lea    r12,[rip+0x10b63]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  40445d:	xor    r13d,r13d
  404460:	sub    ebx,0x1
  404463:	movsxd r14,edi
  404466:	mov    esi,edx
  404468:	nop    DWORD PTR [rax+rax*1+0x0]
  404470:	lea    eax,[r13+rbx*1+0x0]
  404475:	cdq    
  404476:	idiv   esi
  404478:	movsxd r8,edx
  40447b:	mov    ecx,DWORD PTR [r12+r8*4]
  40447f:	mov    r15,r8
  404482:	test   ecx,ecx
  404484:	je     4044aa <rb_strcasecmp@plt+0x1f9a>
  404486:	sub    ecx,0x1
  404489:	mov    eax,DWORD PTR [rip+0x10b11]        # 414fa0 <rb_strcasecmp@plt+0x12a90>
  40448f:	mov    esi,0xf3
  404494:	cmp    ecx,0x3
  404497:	ja     4044a3 <rb_strcasecmp@plt+0x1f93>
  404499:	lea    rdi,[rip+0x71e0]        # 40b680 <rb_strcasecmp@plt+0x9170>
  4044a0:	mov    esi,DWORD PTR [rdi+rcx*4]
  4044a3:	cdq    
  4044a4:	idiv   esi
  4044a6:	test   edx,edx
  4044a8:	jne    404501 <rb_strcasecmp@plt+0x1ff1>
  4044aa:	shl    r8,0x7
  4044ae:	add    r8,0x415340
  4044b5:	mov    rdi,QWORD PTR [rip+0x10b4c]        # 415008 <rb_strcasecmp@plt+0x12af8>
  4044bc:	mov    eax,0x1c
  4044c1:	mov    r9d,0x10
  4044c7:	cmp    WORD PTR [r8],0x2
  4044cc:	mov    QWORD PTR [rsp],r8
  4044d0:	cmovne r9d,eax
  4044d4:	mov    DWORD PTR [rsp+0x18],r9d
  4044d9:	call   4020a0 <rb_get_fd@plt>
  4044de:	mov    r9d,DWORD PTR [rsp+0x18]
  4044e3:	mov    r8,QWORD PTR [rsp]
  4044e7:	xor    ecx,ecx
  4044e9:	mov    rsi,QWORD PTR [rsp+0x8]
  4044ee:	mov    rdx,r14
  4044f1:	mov    edi,eax
  4044f3:	call   4024b0 <sendto@plt>
  4044f8:	cmp    rax,r14
  4044fb:	je     4045d3 <rb_strcasecmp@plt+0x20c3>
  404501:	mov    esi,DWORD PTR [rbp+0x0]
  404504:	add    r13d,0x1
  404508:	cmp    esi,r13d
  40450b:	jg     404470 <rb_strcasecmp@plt+0x1f60>
  404511:	test   esi,esi
  404513:	jle    4045a4 <rb_strcasecmp@plt+0x2094>
  404519:	movsxd rax,DWORD PTR [rsp+0x1c]
  40451e:	xor    r14d,r14d
  404521:	mov    edi,esi
  404523:	mov    r15d,ebx
  404526:	mov    r13,rax
  404529:	nop    DWORD PTR [rax+0x0]
  404530:	lea    eax,[r14+r15*1]
  404534:	cdq    
  404535:	idiv   edi
  404537:	movsxd r8,edx
  40453a:	mov    eax,DWORD PTR [r12+r8*4]
  40453e:	mov    rbx,r8
  404541:	test   eax,eax
  404543:	je     404598 <rb_strcasecmp@plt+0x2088>
  404545:	shl    r8,0x7
  404549:	add    r8,0x415340
  404550:	mov    rdi,QWORD PTR [rip+0x10ab1]        # 415008 <rb_strcasecmp@plt+0x12af8>
  404557:	mov    eax,0x1c
  40455c:	mov    r9d,0x10
  404562:	cmp    WORD PTR [r8],0x2
  404567:	mov    QWORD PTR [rsp],r8
  40456b:	cmovne r9d,eax
  40456f:	mov    DWORD PTR [rsp+0x18],r9d
  404574:	call   4020a0 <rb_get_fd@plt>
  404579:	mov    r9d,DWORD PTR [rsp+0x18]
  40457e:	mov    r8,QWORD PTR [rsp]
  404582:	xor    ecx,ecx
  404584:	mov    rsi,QWORD PTR [rsp+0x8]
  404589:	mov    rdx,r13
  40458c:	mov    edi,eax
  40458e:	call   4024b0 <sendto@plt>
  404593:	cmp    rax,r13
  404596:	je     4045d0 <rb_strcasecmp@plt+0x20c0>
  404598:	mov    edi,DWORD PTR [rbp+0x0]
  40459b:	add    r14d,0x1
  40459f:	cmp    edi,r14d
  4045a2:	jg     404530 <rb_strcasecmp@plt+0x2020>
  4045a4:	mov    rax,QWORD PTR [rsp+0x428]
  4045ac:	xor    rax,QWORD PTR fs:0x28
  4045b5:	jne    4045e7 <rb_strcasecmp@plt+0x20d7>
  4045b7:	add    rsp,0x438
  4045be:	pop    rbx
  4045bf:	pop    rbp
  4045c0:	pop    r12
  4045c2:	pop    r13
  4045c4:	pop    r14
  4045c6:	pop    r15
  4045c8:	ret    
  4045c9:	nop    DWORD PTR [rax+0x0]
  4045d0:	mov    r15d,ebx
  4045d3:	cmp    r15d,0xffffffff
  4045d7:	je     4045a4 <rb_strcasecmp@plt+0x2094>
  4045d9:	mov    rax,QWORD PTR [rsp+0x10]
  4045de:	mov    DWORD PTR [rax+0x140],r15d
  4045e5:	jmp    4045a4 <rb_strcasecmp@plt+0x2094>
  4045e7:	call   402380 <__stack_chk_fail@plt>
  4045ec:	nop    DWORD PTR [rax+0x0]
  4045f0:	test   rdi,rdi
  4045f3:	push   rbx
  4045f4:	je     404669 <rb_strcasecmp@plt+0x2159>
  4045f6:	mov    rax,QWORD PTR [rdi+0x10]
  4045fa:	mov    rbx,rdi
  4045fd:	mov    rdx,QWORD PTR [rdi+0x8]
  404601:	test   rax,rax
  404604:	je     404660 <rb_strcasecmp@plt+0x2150>
  404606:	mov    QWORD PTR [rax+0x8],rdx
  40460a:	mov    rdx,QWORD PTR [rdi+0x8]
  40460e:	test   rdx,rdx
  404611:	je     404650 <rb_strcasecmp@plt+0x2140>
  404613:	mov    QWORD PTR [rdx+0x10],rax
  404617:	mov    rdi,QWORD PTR [rbx+0x1c8]
  40461e:	mov    QWORD PTR [rbx+0x8],0x0
  404626:	mov    QWORD PTR [rbx+0x10],0x0
  40462e:	sub    QWORD PTR [rip+0x109ca],0x1        # 415000 <rb_strcasecmp@plt+0x12af0>
  404636:	test   rdi,rdi
  404639:	je     404640 <rb_strcasecmp@plt+0x2130>
  40463b:	call   4021e0 <free@plt>
  404640:	mov    rdi,rbx
  404643:	pop    rbx
  404644:	jmp    4021e0 <free@plt>
  404649:	nop    DWORD PTR [rax+0x0]
  404650:	mov    QWORD PTR [rip+0x10999],rax        # 414ff0 <rb_strcasecmp@plt+0x12ae0>
  404657:	jmp    404617 <rb_strcasecmp@plt+0x2107>
  404659:	nop    DWORD PTR [rax+0x0]
  404660:	mov    QWORD PTR [rip+0x10991],rdx        # 414ff8 <rb_strcasecmp@plt+0x12ae8>
  404667:	jmp    40460e <rb_strcasecmp@plt+0x20fe>
  404669:	lea    rcx,[rip+0x7038]        # 40b6a8 <rb_strcasecmp@plt+0x9198>
  404670:	lea    rsi,[rip+0x6ed1]        # 40b548 <rb_strcasecmp@plt+0x9038>
  404677:	lea    rdi,[rip+0x6ef3]        # 40b571 <rb_strcasecmp@plt+0x9061>
  40467e:	mov    edx,0xeb
  404683:	call   4020c0 <__assert_fail@plt>
  404688:	nop    DWORD PTR [rax+rax*1+0x0]
  404690:	push   r12
  404692:	push   rbp
  404693:	mov    esi,0x1d8
  404698:	push   rbx
  404699:	mov    rbx,rdi
  40469c:	mov    edi,0x1
  4046a1:	sub    rsp,0x10
  4046a5:	mov    rax,QWORD PTR fs:0x28
  4046ae:	mov    QWORD PTR [rsp+0x8],rax
  4046b3:	xor    eax,eax
  4046b5:	call   402400 <calloc@plt>
  4046ba:	test   rax,rax
  4046bd:	je     4047b5 <rb_strcasecmp@plt+0x22a5>
  4046c3:	mov    r12,rax
  4046c6:	lea    rbp,[rsp+0x6]
  4046cb:	call   402260 <rb_current_time@plt>
  4046d0:	mov    QWORD PTR [r12+0x1d0],rbx
  4046d8:	lea    rbx,[rip+0x10911]        # 414ff0 <rb_strcasecmp@plt+0x12ae0>
  4046df:	mov    QWORD PTR [r12+0x130],rax
  4046e7:	mov    BYTE PTR [r12+0x129],0x3
  4046f0:	mov    QWORD PTR [r12+0x138],0x4
  4046fc:	nop    DWORD PTR [rax+0x0]
  404700:	mov    esi,0x2
  404705:	mov    rdi,rbp
  404708:	call   402460 <rb_get_random@plt>
  40470d:	mov    rsi,QWORD PTR [rbx]
  404710:	movzx  ecx,WORD PTR [rsp+0x6]
  404715:	test   rsi,rsi
  404718:	je     404787 <rb_strcasecmp@plt+0x2277>
  40471a:	mov    rax,QWORD PTR [rsi]
  40471d:	cmp    DWORD PTR [rax+0x18],ecx
  404720:	je     404700 <rb_strcasecmp@plt+0x21f0>
  404722:	mov    rax,rsi
  404725:	jmp    404738 <rb_strcasecmp@plt+0x2228>
  404727:	nop    WORD PTR [rax+rax*1+0x0]
  404730:	mov    rdx,QWORD PTR [rax]
  404733:	cmp    ecx,DWORD PTR [rdx+0x18]
  404736:	je     404700 <rb_strcasecmp@plt+0x21f0>
  404738:	mov    rax,QWORD PTR [rax+0x10]
  40473c:	test   rax,rax
  40473f:	jne    404730 <rb_strcasecmp@plt+0x2220>
  404741:	mov    DWORD PTR [r12+0x18],ecx
  404746:	mov    QWORD PTR [r12],r12
  40474a:	mov    QWORD PTR [r12+0x8],0x0
  404753:	mov    QWORD PTR [r12+0x10],rsi
  404758:	mov    QWORD PTR [rsi+0x8],r12
  40475c:	add    QWORD PTR [rip+0x1089c],0x1        # 415000 <rb_strcasecmp@plt+0x12af0>
  404764:	mov    QWORD PTR [rip+0x10885],r12        # 414ff0 <rb_strcasecmp@plt+0x12ae0>
  40476b:	mov    rax,r12
  40476e:	mov    rdi,QWORD PTR [rsp+0x8]
  404773:	xor    rdi,QWORD PTR fs:0x28
  40477c:	jne    4047ba <rb_strcasecmp@plt+0x22aa>
  40477e:	add    rsp,0x10
  404782:	pop    rbx
  404783:	pop    rbp
  404784:	pop    r12
  404786:	ret    
  404787:	cmp    QWORD PTR [rip+0x10869],0x0        # 414ff8 <rb_strcasecmp@plt+0x12ae8>
  40478f:	mov    DWORD PTR [r12+0x18],ecx
  404794:	mov    QWORD PTR [r12],r12
  404798:	mov    QWORD PTR [r12+0x8],0x0
  4047a1:	mov    QWORD PTR [r12+0x10],0x0
  4047aa:	jne    40475c <rb_strcasecmp@plt+0x224c>
  4047ac:	mov    QWORD PTR [rip+0x10845],r12        # 414ff8 <rb_strcasecmp@plt+0x12ae8>
  4047b3:	jmp    40475c <rb_strcasecmp@plt+0x224c>
  4047b5:	call   402330 <rb_outofmemory@plt>
  4047ba:	call   402380 <__stack_chk_fail@plt>
  4047bf:	nop
  4047c0:	push   r13
  4047c2:	push   r12
  4047c4:	mov    r12d,ecx
  4047c7:	push   rbp
  4047c8:	push   rbx
  4047c9:	mov    rbp,rsi
  4047cc:	mov    rbx,rdx
  4047cf:	sub    rsp,0x8
  4047d3:	test   rdx,rdx
  4047d6:	je     404800 <rb_strcasecmp@plt+0x22f0>
  4047d8:	lea    rdi,[rbx+0x29]
  4047dc:	mov    rsi,rbp
  4047df:	mov    edx,0x100
  4047e4:	call   4021b0 <rb_strlcpy@plt>
  4047e9:	mov    BYTE PTR [rbx+0x28],r12b
  4047ed:	add    rsp,0x8
  4047f1:	mov    rdi,rbx
  4047f4:	pop    rbx
  4047f5:	pop    rbp
  4047f6:	pop    r12
  4047f8:	pop    r13
  4047fa:	jmp    4043b0 <rb_strcasecmp@plt+0x1ea0>
  4047ff:	nop
  404800:	call   404690 <rb_strcasecmp@plt+0x2180>
  404805:	mov    rdi,rbp
  404808:	mov    rbx,rax
  40480b:	call   4021f0 <strlen@plt>
  404810:	lea    r13,[rax+0x1]
  404814:	mov    rdi,r13
  404817:	call   402150 <malloc@plt>
  40481c:	test   rax,rax
  40481f:	je     404840 <rb_strcasecmp@plt+0x2330>
  404821:	mov    rdx,r13
  404824:	mov    rsi,rbp
  404827:	mov    rdi,rax
  40482a:	call   402500 <memcpy@plt>
  40482f:	mov    QWORD PTR [rbx+0x1c8],rax
  404836:	jmp    4047d8 <rb_strcasecmp@plt+0x22c8>
  404838:	nop    DWORD PTR [rax+rax*1+0x0]
  404840:	call   402330 <rb_outofmemory@plt>
  404845:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404850:	jmp    4042f0 <rb_strcasecmp@plt+0x1de0>
  404855:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404860:	sub    rsp,0x8
  404864:	mov    rdi,QWORD PTR [rip+0x1079d]        # 415008 <rb_strcasecmp@plt+0x12af8>
  40486b:	call   4022c0 <rb_close@plt>
  404870:	mov    rdi,QWORD PTR [rip+0x10731]        # 414fa8 <rb_strcasecmp@plt+0x12a98>
  404877:	mov    QWORD PTR [rip+0x10786],0x0        # 415008 <rb_strcasecmp@plt+0x12af8>
  404882:	call   402080 <rb_event_delete@plt>
  404887:	add    rsp,0x8
  40488b:	jmp    4042f0 <rb_strcasecmp@plt+0x1de0>
  404890:	push   r14
  404892:	push   r13
  404894:	push   r12
  404896:	push   rbp
  404897:	push   rbx
  404898:	sub    rsp,0x110
  40489f:	mov    rax,QWORD PTR fs:0x28
  4048a8:	mov    QWORD PTR [rsp+0x108],rax
  4048b0:	xor    eax,eax
  4048b2:	test   rdi,rdi
  4048b5:	je     4049a4 <rb_strcasecmp@plt+0x2494>
  4048bb:	mov    rbp,rsi
  4048be:	mov    r12d,edx
  4048c1:	mov    rsi,rdi
  4048c4:	mov    edx,0x100
  4048c9:	mov    rdi,rsp
  4048cc:	mov    rbx,rsp
  4048cf:	call   4021b0 <rb_strlcpy@plt>
  4048d4:	mov    esi,0x2e
  4048d9:	mov    rdi,rsp
  4048dc:	call   402300 <strchr@plt>
  4048e1:	test   rax,rax
  4048e4:	je     404920 <rb_strcasecmp@plt+0x2410>
  4048e6:	xor    edx,edx
  4048e8:	mov    ecx,r12d
  4048eb:	mov    rsi,rbx
  4048ee:	mov    rdi,rbp
  4048f1:	call   4047c0 <rb_strcasecmp@plt+0x22b0>
  4048f6:	mov    rax,QWORD PTR [rsp+0x108]
  4048fe:	xor    rax,QWORD PTR fs:0x28
  404907:	jne    40499f <rb_strcasecmp@plt+0x248f>
  40490d:	add    rsp,0x110
  404914:	pop    rbx
  404915:	pop    rbp
  404916:	pop    r12
  404918:	pop    r13
  40491a:	pop    r14
  40491c:	ret    
  40491d:	nop    DWORD PTR [rax]
  404920:	mov    r14,0x415240
  404927:	cmp    BYTE PTR [r14],0x0
  40492b:	je     4048e6 <rb_strcasecmp@plt+0x23d6>
  40492d:	mov    r13,rsp
  404930:	mov    edx,DWORD PTR [r13+0x0]
  404934:	add    r13,0x4
  404938:	lea    eax,[rdx-0x1010101]
  40493e:	andn   eax,edx,eax
  404943:	and    eax,0x80808080
  404948:	je     404930 <rb_strcasecmp@plt+0x2420>
  40494a:	mov    edx,eax
  40494c:	mov    rdi,r14
  40494f:	shr    edx,0x10
  404952:	test   eax,0x8080
  404957:	cmove  eax,edx
  40495a:	lea    rdx,[r13+0x2]
  40495e:	mov    ecx,eax
  404960:	cmove  r13,rdx
  404964:	add    cl,al
  404966:	sbb    r13,0x3
  40496a:	sub    r13,rbx
  40496d:	call   4021f0 <strlen@plt>
  404972:	lea    rdx,[r13+rax*1+0x2]
  404977:	cmp    rdx,0xfe
  40497e:	ja     4048e6 <rb_strcasecmp@plt+0x23d6>
  404984:	lea    rdi,[rbx+r13*1+0x1]
  404989:	lea    rdx,[rax+0x1]
  40498d:	mov    rsi,r14
  404990:	mov    BYTE PTR [rsp+r13*1],0x2e
  404995:	call   402500 <memcpy@plt>
  40499a:	jmp    4048e6 <rb_strcasecmp@plt+0x23d6>
  40499f:	call   402380 <__stack_chk_fail@plt>
  4049a4:	lea    rcx,[rip+0x6ce5]        # 40b690 <rb_strcasecmp@plt+0x9180>
  4049ab:	lea    rsi,[rip+0x6c27]        # 40b5d9 <rb_strcasecmp@plt+0x90c9>
  4049b2:	lea    rdi,[rip+0x6c26]        # 40b5df <rb_strcasecmp@plt+0x90cf>
  4049b9:	mov    edx,0x19c
  4049be:	call   4020c0 <__assert_fail@plt>
  4049c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4049ce:	xchg   ax,ax
  4049d0:	push   r15
  4049d2:	push   r14
  4049d4:	push   r13
  4049d6:	push   r12
  4049d8:	push   rbp
  4049d9:	push   rbx
  4049da:	sub    rsp,0x18
  4049de:	movzx  eax,WORD PTR [rdx]
  4049e1:	cmp    ax,0x2
  4049e5:	je     404bb0 <rb_strcasecmp@plt+0x26a0>
  4049eb:	cmp    ax,0xa
  4049ef:	je     404a00 <rb_strcasecmp@plt+0x24f0>
  4049f1:	add    rsp,0x18
  4049f5:	pop    rbx
  4049f6:	pop    rbp
  4049f7:	pop    r12
  4049f9:	pop    r13
  4049fb:	pop    r14
  4049fd:	pop    r15
  4049ff:	ret    
  404a00:	lea    rax,[rip+0x6bef]        # 40b5f6 <rb_strcasecmp@plt+0x90e6>
  404a07:	test   rcx,rcx
  404a0a:	movzx  r9d,BYTE PTR [rdx+0x8]
  404a0f:	movzx  r10d,BYTE PTR [rdx+0x11]
  404a14:	movzx  r8d,BYTE PTR [rdx+0x12]
  404a19:	cmove  rcx,rax
  404a1d:	movzx  eax,BYTE PTR [rdx+0x10]
  404a21:	movzx  r15d,BYTE PTR [rdx+0x9]
  404a26:	movzx  r14d,BYTE PTR [rdx+0xa]
  404a2b:	movzx  r13d,BYTE PTR [rdx+0xb]
  404a30:	movzx  r12d,BYTE PTR [rdx+0xc]
  404a35:	movzx  ebp,BYTE PTR [rdx+0xd]
  404a39:	mov    BYTE PTR [rsp+0xd],r10b
  404a3e:	mov    BYTE PTR [rsp+0xe],r8b
  404a43:	mov    BYTE PTR [rsp+0xc],al
  404a47:	movzx  eax,BYTE PTR [rdx+0x13]
  404a4b:	movzx  ebx,BYTE PTR [rdx+0xe]
  404a4f:	movzx  r11d,BYTE PTR [rdx+0xf]
  404a54:	movzx  r10d,BYTE PTR [rdx+0x14]
  404a59:	movzx  r8d,BYTE PTR [rdx+0x15]
  404a5e:	mov    BYTE PTR [rsp+0xf],al
  404a62:	movzx  eax,BYTE PTR [rdx+0x16]
  404a66:	movzx  edx,BYTE PTR [rdx+0x17]
  404a6a:	push   rcx
  404a6b:	mov    ecx,r9d
  404a6e:	shr    cl,0x4
  404a71:	and    r9d,0xf
  404a75:	movzx  ecx,cl
  404a78:	push   rcx
  404a79:	mov    ecx,r15d
  404a7c:	push   r9
  404a7e:	shr    cl,0x4
  404a81:	and    r15d,0xf
  404a85:	mov    r9d,edx
  404a88:	movzx  ecx,cl
  404a8b:	and    r9d,0xf
  404a8f:	push   rcx
  404a90:	mov    ecx,r14d
  404a93:	push   r15
  404a95:	shr    cl,0x4
  404a98:	and    r14d,0xf
  404a9c:	movzx  ecx,cl
  404a9f:	push   rcx
  404aa0:	mov    ecx,r13d
  404aa3:	push   r14
  404aa5:	shr    cl,0x4
  404aa8:	and    r13d,0xf
  404aac:	movzx  ecx,cl
  404aaf:	push   rcx
  404ab0:	mov    ecx,r12d
  404ab3:	push   r13
  404ab5:	shr    cl,0x4
  404ab8:	and    r12d,0xf
  404abc:	movzx  ecx,cl
  404abf:	push   rcx
  404ac0:	mov    ecx,ebp
  404ac2:	push   r12
  404ac4:	shr    cl,0x4
  404ac7:	and    ebp,0xf
  404aca:	movzx  ecx,cl
  404acd:	push   rcx
  404ace:	mov    ecx,ebx
  404ad0:	push   rbp
  404ad1:	shr    cl,0x4
  404ad4:	and    ebx,0xf
  404ad7:	movzx  ecx,cl
  404ada:	push   rcx
  404adb:	mov    ecx,r11d
  404ade:	and    r11d,0xf
  404ae2:	shr    cl,0x4
  404ae5:	push   rbx
  404ae6:	movzx  ecx,cl
  404ae9:	push   rcx
  404aea:	push   r11
  404aec:	movzx  ebx,BYTE PTR [rsp+0x94]
  404af4:	mov    ecx,ebx
  404af6:	shr    cl,0x4
  404af9:	movzx  ecx,cl
  404afc:	push   rcx
  404afd:	mov    ecx,ebx
  404aff:	and    ecx,0xf
  404b02:	push   rcx
  404b03:	movzx  ebx,BYTE PTR [rsp+0xa5]
  404b0b:	mov    ecx,ebx
  404b0d:	shr    cl,0x4
  404b10:	movzx  ecx,cl
  404b13:	push   rcx
  404b14:	mov    ecx,ebx
  404b16:	and    ecx,0xf
  404b19:	push   rcx
  404b1a:	movzx  ebx,BYTE PTR [rsp+0xb6]
  404b22:	mov    ecx,ebx
  404b24:	shr    cl,0x4
  404b27:	movzx  ecx,cl
  404b2a:	push   rcx
  404b2b:	mov    ecx,ebx
  404b2d:	and    ecx,0xf
  404b30:	push   rcx
  404b31:	movzx  ebx,BYTE PTR [rsp+0xc7]
  404b39:	mov    ecx,ebx
  404b3b:	shr    cl,0x4
  404b3e:	movzx  ecx,cl
  404b41:	push   rcx
  404b42:	mov    ecx,ebx
  404b44:	and    ecx,0xf
  404b47:	push   rcx
  404b48:	mov    ecx,r10d
  404b4b:	and    r10d,0xf
  404b4f:	shr    cl,0x4
  404b52:	movzx  ecx,cl
  404b55:	push   rcx
  404b56:	mov    ecx,r8d
  404b59:	push   r10
  404b5b:	shr    cl,0x4
  404b5e:	and    r8d,0xf
  404b62:	movzx  ecx,cl
  404b65:	push   rcx
  404b66:	mov    ecx,eax
  404b68:	and    eax,0xf
  404b6b:	shr    cl,0x4
  404b6e:	push   r8
  404b70:	lea    r8,[rip+0x6a99]        # 40b610 <rb_strcasecmp@plt+0x9100>
  404b77:	movzx  ecx,cl
  404b7a:	push   rcx
  404b7b:	push   rax
  404b7c:	mov    eax,edx
  404b7e:	shr    al,0x4
  404b81:	mov    rcx,0xffffffffffffffff
  404b88:	mov    edx,0x1
  404b8d:	movzx  eax,al
  404b90:	push   rax
  404b91:	xor    eax,eax
  404b93:	call   402480 <__snprintf_chk@plt>
  404b98:	add    rsp,0x100
  404b9f:	add    rsp,0x18
  404ba3:	pop    rbx
  404ba4:	pop    rbp
  404ba5:	pop    r12
  404ba7:	pop    r13
  404ba9:	pop    r14
  404bab:	pop    r15
  404bad:	ret    
  404bae:	xchg   ax,ax
  404bb0:	lea    rax,[rip+0x6a32]        # 40b5e9 <rb_strcasecmp@plt+0x90d9>
  404bb7:	test   rcx,rcx
  404bba:	lea    r8,[rip+0x6a3e]        # 40b5ff <rb_strcasecmp@plt+0x90ef>
  404bc1:	cmove  rcx,rax
  404bc5:	push   rcx
  404bc6:	movzx  eax,BYTE PTR [rdx+0x4]
  404bca:	mov    rcx,0xffffffffffffffff
  404bd1:	push   rax
  404bd2:	movzx  eax,BYTE PTR [rdx+0x5]
  404bd6:	push   rax
  404bd7:	movzx  eax,BYTE PTR [rdx+0x6]
  404bdb:	push   rax
  404bdc:	movzx  r9d,BYTE PTR [rdx+0x7]
  404be1:	xor    eax,eax
  404be3:	mov    edx,0x1
  404be8:	call   402480 <__snprintf_chk@plt>
  404bed:	add    rsp,0x20
  404bf1:	add    rsp,0x18
  404bf5:	pop    rbx
  404bf6:	pop    rbp
  404bf7:	pop    r12
  404bf9:	pop    r13
  404bfb:	pop    r14
  404bfd:	pop    r15
  404bff:	ret    
  404c00:	push   rbp
  404c01:	push   rbx
  404c02:	mov    rbp,rsi
  404c05:	mov    rbx,rdx
  404c08:	sub    rsp,0x8
  404c0c:	test   rdx,rdx
  404c0f:	je     404c40 <rb_strcasecmp@plt+0x2730>
  404c11:	lea    rdi,[rbx+0x29]
  404c15:	mov    rdx,rbp
  404c18:	xor    ecx,ecx
  404c1a:	mov    esi,0x100
  404c1f:	call   4049d0 <rb_strcasecmp@plt+0x24c0>
  404c24:	mov    BYTE PTR [rbx+0x28],0xc
  404c28:	add    rsp,0x8
  404c2c:	mov    rdi,rbx
  404c2f:	pop    rbx
  404c30:	pop    rbp
  404c31:	jmp    4043b0 <rb_strcasecmp@plt+0x1ea0>
  404c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c40:	call   404690 <rb_strcasecmp@plt+0x2180>
  404c45:	mov    rdx,QWORD PTR [rbp+0x0]
  404c49:	mov    esi,0x100
  404c4e:	mov    edi,0x1
  404c53:	mov    rbx,rax
  404c56:	mov    QWORD PTR [rax+0x148],rdx
  404c5d:	mov    rdx,QWORD PTR [rbp+0x8]
  404c61:	mov    QWORD PTR [rax+0x150],rdx
  404c68:	mov    rdx,QWORD PTR [rbp+0x10]
  404c6c:	mov    QWORD PTR [rax+0x158],rdx
  404c73:	mov    rdx,QWORD PTR [rbp+0x18]
  404c77:	mov    QWORD PTR [rax+0x160],rdx
  404c7e:	mov    rdx,QWORD PTR [rbp+0x20]
  404c82:	mov    QWORD PTR [rax+0x168],rdx
  404c89:	mov    rdx,QWORD PTR [rbp+0x28]
  404c8d:	mov    QWORD PTR [rax+0x170],rdx
  404c94:	mov    rdx,QWORD PTR [rbp+0x30]
  404c98:	mov    QWORD PTR [rax+0x178],rdx
  404c9f:	mov    rdx,QWORD PTR [rbp+0x38]
  404ca3:	mov    QWORD PTR [rax+0x180],rdx
  404caa:	mov    rdx,QWORD PTR [rbp+0x40]
  404cae:	mov    QWORD PTR [rax+0x188],rdx
  404cb5:	mov    rdx,QWORD PTR [rbp+0x48]
  404cb9:	mov    QWORD PTR [rax+0x190],rdx
  404cc0:	mov    rdx,QWORD PTR [rbp+0x50]
  404cc4:	mov    QWORD PTR [rax+0x198],rdx
  404ccb:	mov    rdx,QWORD PTR [rbp+0x58]
  404ccf:	mov    QWORD PTR [rax+0x1a0],rdx
  404cd6:	mov    rdx,QWORD PTR [rbp+0x60]
  404cda:	mov    QWORD PTR [rax+0x1a8],rdx
  404ce1:	mov    rdx,QWORD PTR [rbp+0x68]
  404ce5:	mov    QWORD PTR [rax+0x1b0],rdx
  404cec:	mov    rdx,QWORD PTR [rbp+0x70]
  404cf0:	mov    QWORD PTR [rax+0x1b8],rdx
  404cf7:	mov    rdx,QWORD PTR [rbp+0x78]
  404cfb:	mov    QWORD PTR [rax+0x1c0],rdx
  404d02:	call   402400 <calloc@plt>
  404d07:	test   rax,rax
  404d0a:	je     404d20 <rb_strcasecmp@plt+0x2810>
  404d0c:	mov    QWORD PTR [rbx+0x1c8],rax
  404d13:	jmp    404c11 <rb_strcasecmp@plt+0x2701>
  404d18:	nop    DWORD PTR [rax+rax*1+0x0]
  404d20:	call   402330 <rb_outofmemory@plt>
  404d25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d30:	movzx  eax,BYTE PTR [rdi+0x129]
  404d37:	sub    eax,0x1
  404d3a:	test   al,al
  404d3c:	mov    BYTE PTR [rdi+0x129],al
  404d42:	jle    404d90 <rb_strcasecmp@plt+0x2880>
  404d44:	movsx  ecx,BYTE PTR [rdi+0x28]
  404d48:	cmp    cl,0xc
  404d4b:	je     404d78 <rb_strcasecmp@plt+0x2868>
  404d4d:	cmp    cl,0x1c
  404d50:	je     404d60 <rb_strcasecmp@plt+0x2850>
  404d52:	cmp    cl,0x1
  404d55:	je     404d60 <rb_strcasecmp@plt+0x2850>
  404d57:	repz ret 
  404d59:	nop    DWORD PTR [rax+0x0]
  404d60:	mov    rsi,QWORD PTR [rdi+0x1c8]
  404d67:	mov    rdx,rdi
  404d6a:	xor    edi,edi
  404d6c:	jmp    4047c0 <rb_strcasecmp@plt+0x22b0>
  404d71:	nop    DWORD PTR [rax+0x0]
  404d78:	lea    rsi,[rdi+0x148]
  404d7f:	mov    rdx,rdi
  404d82:	xor    edi,edi
  404d84:	jmp    404c00 <rb_strcasecmp@plt+0x26f0>
  404d89:	nop    DWORD PTR [rax+0x0]
  404d90:	push   rbx
  404d91:	mov    rax,QWORD PTR [rdi+0x1d0]
  404d98:	mov    rbx,rdi
  404d9b:	xor    esi,esi
  404d9d:	mov    rdi,QWORD PTR [rax]
  404da0:	call   QWORD PTR [rax+0x8]
  404da3:	mov    rdi,rbx
  404da6:	pop    rbx
  404da7:	jmp    4045f0 <rb_strcasecmp@plt+0x20e0>
  404dac:	nop    DWORD PTR [rax+0x0]
  404db0:	push   r12
  404db2:	push   rbp
  404db3:	push   rbx
  404db4:	call   402260 <rb_current_time@plt>
  404db9:	mov    rdx,QWORD PTR [rip+0x10230]        # 414ff0 <rb_strcasecmp@plt+0x12ae0>
  404dc0:	test   rdx,rdx
  404dc3:	je     404e24 <rb_strcasecmp@plt+0x2914>
  404dc5:	mov    rbp,rax
  404dc8:	mov    rbx,QWORD PTR [rdx+0x10]
  404dcc:	lea    r12,[rip+0x101ed]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  404dd3:	jmp    404de4 <rb_strcasecmp@plt+0x28d4>
  404dd5:	nop    DWORD PTR [rax]
  404dd8:	test   rbx,rbx
  404ddb:	je     404e24 <rb_strcasecmp@plt+0x2914>
  404ddd:	mov    rdx,rbx
  404de0:	mov    rbx,QWORD PTR [rbx+0x10]
  404de4:	mov    rdi,QWORD PTR [rdx]
  404de7:	mov    rdx,QWORD PTR [rdi+0x138]
  404dee:	mov    rcx,rdx
  404df1:	add    rcx,QWORD PTR [rdi+0x130]
  404df8:	cmp    rbp,rcx
  404dfb:	jl     404dd8 <rb_strcasecmp@plt+0x28c8>
  404dfd:	movsxd rax,DWORD PTR [rdi+0x140]
  404e04:	add    rdx,rdx
  404e07:	mov    QWORD PTR [rdi+0x130],rbp
  404e0e:	mov    QWORD PTR [rdi+0x138],rdx
  404e15:	add    DWORD PTR [r12+rax*4],0x1
  404e1a:	call   404d30 <rb_strcasecmp@plt+0x2820>
  404e1f:	test   rbx,rbx
  404e22:	jne    404ddd <rb_strcasecmp@plt+0x28cd>
  404e24:	pop    rbx
  404e25:	pop    rbp
  404e26:	pop    r12
  404e28:	ret    
  404e29:	nop    DWORD PTR [rax+0x0]
  404e30:	push   r15
  404e32:	push   r14
  404e34:	push   r13
  404e36:	push   r12
  404e38:	push   rbp
  404e39:	push   rbx
  404e3a:	sub    rsp,0x648
  404e41:	lea    r12,[rsp+0x30]
  404e46:	mov    DWORD PTR [rsp+0x2c],0x80
  404e4e:	mov    rax,QWORD PTR fs:0x28
  404e57:	mov    QWORD PTR [rsp+0x638],rax
  404e5f:	xor    eax,eax
  404e61:	call   4020a0 <rb_get_fd@plt>
  404e66:	lea    rsi,[rsp+0x220]
  404e6e:	lea    r9,[rsp+0x2c]
  404e73:	xor    ecx,ecx
  404e75:	mov    r8,r12
  404e78:	mov    edx,0x40c
  404e7d:	mov    edi,eax
  404e7f:	mov    QWORD PTR [rsp+0x8],rsi
  404e84:	call   402430 <recvfrom@plt>
  404e89:	mov    r14,rax
  404e8c:	add    eax,0x1
  404e8f:	cmp    eax,0x1
  404e92:	jbe    40515a <rb_strcasecmp@plt+0x2c4a>
  404e98:	cmp    r14d,0xc
  404e9c:	jle    405000 <rb_strcasecmp@plt+0x2af0>
  404ea2:	movzx  r13d,WORD PTR [rsp+0x224]
  404eab:	rol    WORD PTR [rsp+0x226],0x8
  404eb4:	rol    WORD PTR [rsp+0x228],0x8
  404ebd:	movzx  edx,WORD PTR [rsp+0x220]
  404ec5:	rol    WORD PTR [rsp+0x22a],0x8
  404ece:	mov    eax,r13d
  404ed1:	rol    ax,0x8
  404ed5:	mov    WORD PTR [rsp+0x1a],ax
  404eda:	mov    WORD PTR [rsp+0x224],ax
  404ee2:	mov    rax,QWORD PTR [rip+0x10107]        # 414ff0 <rb_strcasecmp@plt+0x12ae0>
  404ee9:	test   rax,rax
  404eec:	jne    404f05 <rb_strcasecmp@plt+0x29f5>
  404eee:	jmp    405000 <rb_strcasecmp@plt+0x2af0>
  404ef3:	nop    DWORD PTR [rax+rax*1+0x0]
  404ef8:	mov    rax,QWORD PTR [rax+0x10]
  404efc:	test   rax,rax
  404eff:	je     405000 <rb_strcasecmp@plt+0x2af0>
  404f05:	mov    r15,QWORD PTR [rax]
  404f08:	cmp    edx,DWORD PTR [r15+0x18]
  404f0c:	jne    404ef8 <rb_strcasecmp@plt+0x29e8>
  404f0e:	mov    rax,0x415010
  404f15:	mov    eax,DWORD PTR [rax]
  404f17:	test   eax,eax
  404f19:	jle    405088 <rb_strcasecmp@plt+0x2b78>
  404f1f:	mov    rdx,0x415340
  404f26:	mov    edi,DWORD PTR [rsp+0x34]
  404f2a:	sub    eax,0x1
  404f2d:	shl    rax,0x7
  404f31:	movzx  ecx,WORD PTR [rsp+0x30]
  404f36:	movzx  r13d,WORD PTR [rsp+0x32]
  404f3c:	add    r12,0x8
  404f40:	mov    DWORD PTR [rsp+0x1c],edi
  404f44:	lea    rbx,[rdx+0x8]
  404f48:	lea    rbp,[rdx+rax*1+0x88]
  404f50:	jmp    404f75 <rb_strcasecmp@plt+0x2a65>
  404f52:	nop    WORD PTR [rax+rax*1+0x0]
  404f58:	cmp    ax,0xa
  404f5c:	jne    404f68 <rb_strcasecmp@plt+0x2a58>
  404f5e:	cmp    cx,0xa
  404f62:	je     405030 <rb_strcasecmp@plt+0x2b20>
  404f68:	sub    rbx,0xffffffffffffff80
  404f6c:	cmp    rbp,rbx
  404f6f:	je     405088 <rb_strcasecmp@plt+0x2b78>
  404f75:	movzx  eax,WORD PTR [rbx-0x8]
  404f79:	cmp    ax,0x2
  404f7d:	jne    404f58 <rb_strcasecmp@plt+0x2a48>
  404f7f:	cmp    cx,0x2
  404f83:	jne    404f68 <rb_strcasecmp@plt+0x2a58>
  404f85:	cmp    r13w,WORD PTR [rbx-0x6]
  404f8a:	jne    404f68 <rb_strcasecmp@plt+0x2a58>
  404f8c:	mov    eax,DWORD PTR [rbx-0x4]
  404f8f:	test   eax,eax
  404f91:	je     404f99 <rb_strcasecmp@plt+0x2a89>
  404f93:	cmp    eax,DWORD PTR [rsp+0x1c]
  404f97:	jne    404f68 <rb_strcasecmp@plt+0x2a58>
  404f99:	mov    ebp,0x1
  404f9e:	jmp    40508a <rb_strcasecmp@plt+0x2b7a>
  404fa3:	movzx  eax,WORD PTR [rsp+0x226]
  404fab:	test   ax,ax
  404fae:	je     405139 <rb_strcasecmp@plt+0x2c29>
  404fb4:	cmp    WORD PTR [rsp+0x224],0x0
  404fbd:	jne    404fde <rb_strcasecmp@plt+0x2ace>
  404fbf:	jmp    405169 <rb_strcasecmp@plt+0x2c59>
  404fc4:	nop    DWORD PTR [rax+0x0]
  404fc8:	sub    WORD PTR [rsp+0x224],0x1
  404fd1:	cdqe   
  404fd3:	lea    r13,[r13+rax*1+0x4]
  404fd8:	je     405161 <rb_strcasecmp@plt+0x2c51>
  404fde:	mov    rsi,rbx
  404fe1:	mov    rdi,r13
  404fe4:	call   405d40 <rb_strcasecmp@plt+0x3830>
  404fe9:	test   eax,eax
  404feb:	jns    404fc8 <rb_strcasecmp@plt+0x2ab8>
  404fed:	lea    rax,[rip+0xffcc]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  404ff4:	mov    rdi,r15
  404ff7:	add    DWORD PTR [rax+rbp*4],0x1
  404ffb:	call   404d30 <rb_strcasecmp@plt+0x2820>
  405000:	mov    eax,0x1
  405005:	mov    rsi,QWORD PTR [rsp+0x638]
  40500d:	xor    rsi,QWORD PTR fs:0x28
  405016:	jne    405453 <rb_strcasecmp@plt+0x2f43>
  40501c:	add    rsp,0x648
  405023:	pop    rbx
  405024:	pop    rbp
  405025:	pop    r12
  405027:	pop    r13
  405029:	pop    r14
  40502b:	pop    r15
  40502d:	ret    
  40502e:	xchg   ax,ax
  405030:	cmp    WORD PTR [rbx-0x6],r13w
  405035:	jne    404f68 <rb_strcasecmp@plt+0x2a58>
  40503b:	mov    edx,0x10
  405040:	mov    rsi,r12
  405043:	mov    rdi,rbx
  405046:	mov    DWORD PTR [rsp+0x10],ecx
  40504a:	call   4023f0 <memcmp@plt>
  40504f:	test   eax,eax
  405051:	je     404f99 <rb_strcasecmp@plt+0x2a89>
  405057:	mov    rsi,QWORD PTR [rip+0x9f92]        # 40eff0 <rb_strcasecmp@plt+0xcae0>
  40505e:	mov    edx,0x10
  405063:	mov    rdi,rbx
  405066:	call   4023f0 <memcmp@plt>
  40506b:	test   eax,eax
  40506d:	mov    ecx,DWORD PTR [rsp+0x10]
  405071:	je     404f99 <rb_strcasecmp@plt+0x2a89>
  405077:	sub    rbx,0xffffffffffffff80
  40507b:	cmp    rbp,rbx
  40507e:	jne    404f75 <rb_strcasecmp@plt+0x2a65>
  405084:	nop    DWORD PTR [rax+0x0]
  405088:	xor    ebp,ebp
  40508a:	cmp    DWORD PTR [r15+0x140],ebp
  405091:	je     4050a1 <rb_strcasecmp@plt+0x2b91>
  405093:	lea    rax,[rip+0xff26]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  40509a:	movsxd rdx,ebp
  40509d:	add    DWORD PTR [rax+rdx*4],0x3
  4050a1:	cmp    WORD PTR [rsp+0x1a],0x1
  4050a7:	jne    405000 <rb_strcasecmp@plt+0x2af0>
  4050ad:	mov    rax,QWORD PTR [rsp+0x8]
  4050b2:	movsxd r10,r14d
  4050b5:	lea    r12,[rsp+0xb0]
  4050bd:	mov    r8d,0x100
  4050c3:	mov    rcx,r12
  4050c6:	lea    rbx,[rax+r10*1]
  4050ca:	lea    r13,[rax+0xc]
  4050ce:	mov    rdi,rax
  4050d1:	mov    rdx,r13
  4050d4:	mov    rsi,rbx
  4050d7:	call   405770 <rb_strcasecmp@plt+0x3260>
  4050dc:	test   eax,eax
  4050de:	jle    405000 <rb_strcasecmp@plt+0x2af0>
  4050e4:	lea    rsi,[r15+0x29]
  4050e8:	mov    rdi,r12
  4050eb:	call   402510 <rb_strcasecmp@plt>
  4050f0:	test   eax,eax
  4050f2:	jne    405000 <rb_strcasecmp@plt+0x2af0>
  4050f8:	movzx  eax,BYTE PTR [rsp+0x223]
  405100:	and    eax,0xf
  405103:	je     404fa3 <rb_strcasecmp@plt+0x2a93>
  405109:	lea    edx,[rax-0x4]
  40510c:	cmp    dl,0x1
  40510f:	jbe    404fed <rb_strcasecmp@plt+0x2add>
  405115:	cmp    al,0x2
  405117:	je     404fed <rb_strcasecmp@plt+0x2add>
  40511d:	cmp    al,0x3
  40511f:	jne    405139 <rb_strcasecmp@plt+0x2c29>
  405121:	lea    rcx,[rip+0xfe98]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  405128:	mov    edx,DWORD PTR [rcx+rbp*4]
  40512b:	lea    eax,[rdx+0x3]
  40512e:	test   edx,edx
  405130:	cmovns eax,edx
  405133:	sar    eax,0x2
  405136:	mov    DWORD PTR [rcx+rbp*4],eax
  405139:	mov    rax,QWORD PTR [r15+0x1d0]
  405140:	xor    esi,esi
  405142:	mov    rdi,QWORD PTR [rax]
  405145:	call   QWORD PTR [rax+0x8]
  405148:	mov    rdi,r15
  40514b:	call   4045f0 <rb_strcasecmp@plt+0x20e0>
  405150:	mov    eax,0x1
  405155:	jmp    405005 <rb_strcasecmp@plt+0x2af5>
  40515a:	xor    eax,eax
  40515c:	jmp    405005 <rb_strcasecmp@plt+0x2af5>
  405161:	movzx  eax,WORD PTR [rsp+0x226]
  405169:	test   ax,ax
  40516c:	je     405227 <rb_strcasecmp@plt+0x2d17>
  405172:	cmp    rbx,r13
  405175:	jbe    405227 <rb_strcasecmp@plt+0x2d17>
  40517b:	mov    rdi,QWORD PTR [rsp+0x8]
  405180:	sub    eax,0x1
  405183:	mov    r8d,0x163
  405189:	mov    rcx,r12
  40518c:	mov    rdx,r13
  40518f:	mov    rsi,rbx
  405192:	mov    WORD PTR [rsp+0x226],ax
  40519a:	call   405770 <rb_strcasecmp@plt+0x3260>
  40519f:	test   eax,eax
  4051a1:	jle    404fed <rb_strcasecmp@plt+0x2add>
  4051a7:	cdqe   
  4051a9:	mov    BYTE PTR [rsp+0x1af],0x0
  4051b1:	add    r13,rax
  4051b4:	lea    rdx,[r13+0xa]
  4051b8:	cmp    rbx,rdx
  4051bb:	jbe    405227 <rb_strcasecmp@plt+0x2d17>
  4051bd:	mov    rdi,r13
  4051c0:	mov    QWORD PTR [rsp+0x10],rdx
  4051c5:	call   405de0 <rb_strcasecmp@plt+0x38d0>
  4051ca:	lea    rdi,[r13+0x2]
  4051ce:	mov    r14d,eax
  4051d1:	call   405de0 <rb_strcasecmp@plt+0x38d0>
  4051d6:	lea    rdi,[r13+0x4]
  4051da:	call   405df0 <rb_strcasecmp@plt+0x38e0>
  4051df:	lea    rdi,[r13+0x8]
  4051e3:	mov    QWORD PTR [r15+0x20],rax
  4051e7:	call   405de0 <rb_strcasecmp@plt+0x38d0>
  4051ec:	cmp    r14d,0xc
  4051f0:	mov    rdx,QWORD PTR [rsp+0x10]
  4051f5:	je     4053c0 <rb_strcasecmp@plt+0x2eb0>
  4051fb:	cmp    r14d,0x1c
  4051ff:	je     40537e <rb_strcasecmp@plt+0x2e6e>
  405205:	cmp    r14d,0x1
  405209:	je     405238 <rb_strcasecmp@plt+0x2d28>
  40520b:	cdqe   
  40520d:	lea    r13,[rdx+rax*1]
  405211:	movzx  eax,WORD PTR [rsp+0x226]
  405219:	cmp    rbx,r13
  40521c:	jbe    405227 <rb_strcasecmp@plt+0x2d17>
  40521e:	test   ax,ax
  405221:	jne    40517b <rb_strcasecmp@plt+0x2c6b>
  405227:	movzx  eax,BYTE PTR [r15+0x28]
  40522c:	jmp    405402 <rb_strcasecmp@plt+0x2ef2>
  405231:	nop    DWORD PTR [rax+0x0]
  405238:	cmp    BYTE PTR [r15+0x28],0x1
  40523d:	jne    404fed <rb_strcasecmp@plt+0x2add>
  405243:	cmp    eax,0x4
  405246:	jne    404fed <rb_strcasecmp@plt+0x2add>
  40524c:	mov    edx,0x2
  405251:	mov    WORD PTR [r15+0x148],dx
  405259:	mov    eax,DWORD PTR [r13+0xa]
  40525d:	mov    DWORD PTR [r15+0x14c],eax
  405264:	mov    esi,0x88
  405269:	mov    edi,0x1
  40526e:	call   402400 <calloc@plt>
  405273:	test   rax,rax
  405276:	mov    rbx,rax
  405279:	je     40543d <rb_strcasecmp@plt+0x2f2d>
  40527f:	mov    rax,QWORD PTR [r15+0x1c8]
  405286:	mov    rsi,rbx
  405289:	mov    QWORD PTR [rbx],rax
  40528c:	mov    rax,QWORD PTR [r15+0x148]
  405293:	mov    QWORD PTR [rbx+0x8],rax
  405297:	mov    rax,QWORD PTR [r15+0x150]
  40529e:	mov    QWORD PTR [rbx+0x10],rax
  4052a2:	mov    rax,QWORD PTR [r15+0x158]
  4052a9:	mov    QWORD PTR [rbx+0x18],rax
  4052ad:	mov    rax,QWORD PTR [r15+0x160]
  4052b4:	mov    QWORD PTR [rbx+0x20],rax
  4052b8:	mov    rax,QWORD PTR [r15+0x168]
  4052bf:	mov    QWORD PTR [rbx+0x28],rax
  4052c3:	mov    rax,QWORD PTR [r15+0x170]
  4052ca:	mov    QWORD PTR [rbx+0x30],rax
  4052ce:	mov    rax,QWORD PTR [r15+0x178]
  4052d5:	mov    QWORD PTR [rbx+0x38],rax
  4052d9:	mov    rax,QWORD PTR [r15+0x180]
  4052e0:	mov    QWORD PTR [rbx+0x40],rax
  4052e4:	mov    rax,QWORD PTR [r15+0x188]
  4052eb:	mov    QWORD PTR [rbx+0x48],rax
  4052ef:	mov    rax,QWORD PTR [r15+0x190]
  4052f6:	mov    QWORD PTR [rbx+0x50],rax
  4052fa:	mov    rax,QWORD PTR [r15+0x198]
  405301:	mov    QWORD PTR [rbx+0x58],rax
  405305:	mov    rax,QWORD PTR [r15+0x1a0]
  40530c:	mov    QWORD PTR [rbx+0x60],rax
  405310:	mov    rax,QWORD PTR [r15+0x1a8]
  405317:	mov    QWORD PTR [rbx+0x68],rax
  40531b:	mov    rax,QWORD PTR [r15+0x1b0]
  405322:	mov    QWORD PTR [rbx+0x70],rax
  405326:	mov    rax,QWORD PTR [r15+0x1b8]
  40532d:	mov    QWORD PTR [rbx+0x78],rax
  405331:	mov    rax,QWORD PTR [r15+0x1c0]
  405338:	mov    QWORD PTR [rbx+0x80],rax
  40533f:	mov    rax,QWORD PTR [r15+0x1d0]
  405346:	mov    rdi,QWORD PTR [rax]
  405349:	call   QWORD PTR [rax+0x8]
  40534c:	mov    rdi,rbx
  40534f:	call   4021e0 <free@plt>
  405354:	mov    rdi,r15
  405357:	call   4045f0 <rb_strcasecmp@plt+0x20e0>
  40535c:	lea    rcx,[rip+0xfc5d]        # 414fc0 <rb_strcasecmp@plt+0x12ab0>
  405363:	mov    edx,DWORD PTR [rcx+rbp*4]
  405366:	lea    eax,[rdx+0x3]
  405369:	test   edx,edx
  40536b:	cmovns eax,edx
  40536e:	sar    eax,0x2
  405371:	mov    DWORD PTR [rcx+rbp*4],eax
  405374:	mov    eax,0x1
  405379:	jmp    405005 <rb_strcasecmp@plt+0x2af5>
  40537e:	cmp    BYTE PTR [r15+0x28],0x1c
  405383:	jne    404fed <rb_strcasecmp@plt+0x2add>
  405389:	cmp    eax,0x10
  40538c:	jne    404fed <rb_strcasecmp@plt+0x2add>
  405392:	mov    eax,0xa
  405397:	mov    WORD PTR [r15+0x148],ax
  40539f:	mov    rax,QWORD PTR [r13+0xa]
  4053a3:	mov    rdx,QWORD PTR [r13+0x12]
  4053a7:	mov    QWORD PTR [r15+0x150],rax
  4053ae:	mov    QWORD PTR [r15+0x158],rdx
  4053b5:	jmp    405264 <rb_strcasecmp@plt+0x2d54>
  4053ba:	nop    WORD PTR [rax+rax*1+0x0]
  4053c0:	cmp    BYTE PTR [r15+0x28],0xc
  4053c5:	jne    404fed <rb_strcasecmp@plt+0x2add>
  4053cb:	mov    rdi,QWORD PTR [rsp+0x8]
  4053d0:	mov    r8d,0x163
  4053d6:	mov    rcx,r12
  4053d9:	mov    rsi,rbx
  4053dc:	call   405770 <rb_strcasecmp@plt+0x3260>
  4053e1:	test   eax,eax
  4053e3:	jle    404fed <rb_strcasecmp@plt+0x2add>
  4053e9:	mov    rdi,QWORD PTR [r15+0x1c8]
  4053f0:	mov    edx,0x100
  4053f5:	mov    rsi,r12
  4053f8:	call   4021b0 <rb_strlcpy@plt>
  4053fd:	movzx  eax,BYTE PTR [r15+0x28]
  405402:	cmp    al,0xc
  405404:	jne    405264 <rb_strcasecmp@plt+0x2d54>
  40540a:	mov    rsi,QWORD PTR [r15+0x1c8]
  405411:	test   rsi,rsi
  405414:	je     404fed <rb_strcasecmp@plt+0x2add>
  40541a:	cmp    WORD PTR [r15+0x148],0xa
  405423:	mov    rdi,QWORD PTR [r15+0x1d0]
  40542a:	je     405442 <rb_strcasecmp@plt+0x2f32>
  40542c:	mov    ecx,0x1
  405431:	xor    edx,edx
  405433:	call   4047c0 <rb_strcasecmp@plt+0x22b0>
  405438:	jmp    405354 <rb_strcasecmp@plt+0x2e44>
  40543d:	call   402330 <rb_outofmemory@plt>
  405442:	mov    ecx,0x1c
  405447:	xor    edx,edx
  405449:	call   4047c0 <rb_strcasecmp@plt+0x22b0>
  40544e:	jmp    405354 <rb_strcasecmp@plt+0x2e44>
  405453:	call   402380 <__stack_chk_fail@plt>
  405458:	nop    DWORD PTR [rax+rax*1+0x0]
  405460:	push   rbx
  405461:	mov    rbx,rdi
  405464:	nop    DWORD PTR [rax+0x0]
  405468:	mov    rdi,rbx
  40546b:	call   404e30 <rb_strcasecmp@plt+0x2920>
  405470:	test   eax,eax
  405472:	jne    405468 <rb_strcasecmp@plt+0x2f58>
  405474:	mov    rdi,rbx
  405477:	lea    rdx,[rip+0xffffffffffffffe2]        # 405460 <rb_strcasecmp@plt+0x2f50>
  40547e:	xor    ecx,ecx
  405480:	pop    rbx
  405481:	mov    esi,0x1
  405486:	jmp    402090 <rb_setselect@plt>
  40548b:	nop    DWORD PTR [rax+rax*1+0x0]
  405490:	mov    rax,rdi
  405493:	xor    edx,edx
  405495:	mov    rdi,rsi
  405498:	mov    rsi,rax
  40549b:	jmp    404c00 <rb_strcasecmp@plt+0x26f0>
  4054a0:	movzx  edx,BYTE PTR [rdi]
  4054a3:	mov    eax,edx
  4054a5:	and    eax,0xffffffc0
  4054a8:	cmp    al,0xc0
  4054aa:	je     4054e0 <rb_strcasecmp@plt+0x2fd0>
  4054ac:	cmp    al,0x40
  4054ae:	je     4054b8 <rb_strcasecmp@plt+0x2fa8>
  4054b0:	movzx  eax,dl
  4054b3:	ret    
  4054b4:	nop    DWORD PTR [rax+0x0]
  4054b8:	cmp    dl,0x41
  4054bb:	mov    eax,0xffffffff
  4054c0:	jne    4054e5 <rb_strcasecmp@plt+0x2fd5>
  4054c2:	movzx  edx,BYTE PTR [rdi+0x1]
  4054c6:	lea    eax,[rdx+0x7]
  4054c9:	sar    eax,0x3
  4054cc:	add    eax,0x1
  4054cf:	test   edx,edx
  4054d1:	mov    edx,0x21
  4054d6:	cmove  eax,edx
  4054d9:	ret    
  4054da:	nop    WORD PTR [rax+rax*1+0x0]
  4054e0:	mov    eax,0xffffffff
  4054e5:	repz ret 
  4054e7:	nop    WORD PTR [rax+rax*1+0x0]
  4054f0:	push   r12
  4054f2:	push   rbp
  4054f3:	push   rbx
  4054f4:	sub    rsp,0x50
  4054f8:	mov    rbx,0x415010
  4054ff:	mov    rax,QWORD PTR fs:0x28
  405508:	mov    QWORD PTR [rsp+0x48],rax
  40550d:	xor    eax,eax
  40550f:	cmp    DWORD PTR [rbx],0x9
  405512:	jle    405538 <rb_strcasecmp@plt+0x3028>
  405514:	mov    rax,QWORD PTR [rsp+0x48]
  405519:	xor    rax,QWORD PTR fs:0x28
  405522:	jne    4055ae <rb_strcasecmp@plt+0x309e>
  405528:	add    rsp,0x50
  40552c:	pop    rbx
  40552d:	pop    rbp
  40552e:	pop    r12
  405530:	ret    
  405531:	nop    DWORD PTR [rax+0x0]
  405538:	lea    rdx,[rsp+0x10]
  40553d:	mov    r8,rdi
  405540:	mov    ecx,0x6
  405545:	lea    rsi,[rip+0x616b]        # 40b6b7 <rb_strcasecmp@plt+0x91a7>
  40554c:	mov    rdi,rdx
  40554f:	rep stos QWORD PTR es:[rdi],rax
  405552:	lea    rcx,[rsp+0x8]
  405557:	mov    rdi,r8
  40555a:	mov    DWORD PTR [rsp+0x18],0x2
  405562:	mov    DWORD PTR [rsp+0x10],0x5
  40556a:	call   4020d0 <getaddrinfo@plt>
  40556f:	test   eax,eax
  405571:	jne    405514 <rb_strcasecmp@plt+0x3004>
  405573:	mov    rbp,QWORD PTR [rsp+0x8]
  405578:	test   rbp,rbp
  40557b:	je     405514 <rb_strcasecmp@plt+0x3004>
  40557d:	movsxd rdi,DWORD PTR [rbx]
  405580:	mov    edx,DWORD PTR [rbp+0x10]
  405583:	mov    rsi,QWORD PTR [rbp+0x18]
  405587:	mov    r12,rdi
  40558a:	shl    rdi,0x7
  40558e:	add    rdi,0x415340
  405595:	add    r12d,0x1
  405599:	call   402500 <memcpy@plt>
  40559e:	mov    rdi,rbp
  4055a1:	mov    DWORD PTR [rbx],r12d
  4055a4:	call   4021d0 <freeaddrinfo@plt>
  4055a9:	jmp    405514 <rb_strcasecmp@plt+0x3004>
  4055ae:	call   402380 <__stack_chk_fail@plt>
  4055b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4055be:	xchg   ax,ax
  4055c0:	push   r15
  4055c2:	push   r14
  4055c4:	lea    rsi,[rip+0x6aab]        # 40c076 <rb_strcasecmp@plt+0x9b66>
  4055cb:	push   r13
  4055cd:	push   r12
  4055cf:	lea    rdi,[rip+0x60e8]        # 40b6be <rb_strcasecmp@plt+0x91ae>
  4055d6:	push   rbp
  4055d7:	push   rbx
  4055d8:	sub    rsp,0x98
  4055df:	mov    r14,0x415010
  4055e6:	mov    rax,QWORD PTR fs:0x28
  4055ef:	mov    QWORD PTR [rsp+0x88],rax
  4055f7:	xor    eax,eax
  4055f9:	mov    DWORD PTR [r14],0x0
  405600:	call   402160 <fopen@plt>
  405605:	test   rax,rax
  405608:	je     40570a <rb_strcasecmp@plt+0x31fa>
  40560e:	mov    r12,rax
  405611:	mov    rbp,rsp
  405614:	movabs r13,0x800000800000001
  40561e:	xchg   ax,ax
  405620:	mov    rdx,r12
  405623:	mov    esi,0x80
  405628:	mov    rdi,rbp
  40562b:	call   402190 <fgets@plt>
  405630:	test   rax,rax
  405633:	je     405702 <rb_strcasecmp@plt+0x31f2>
  405639:	lea    rsi,[rip+0x69ae]        # 40bfee <rb_strcasecmp@plt+0x9ade>
  405640:	mov    rdi,rbp
  405643:	call   402120 <strpbrk@plt>
  405648:	test   rax,rax
  40564b:	je     405650 <rb_strcasecmp@plt+0x3140>
  40564d:	mov    BYTE PTR [rax],0x0
  405650:	call   402220 <__ctype_b_loc@plt>
  405655:	mov    rbx,rbp
  405658:	mov    rcx,QWORD PTR [rax]
  40565b:	jmp    405664 <rb_strcasecmp@plt+0x3154>
  40565d:	nop    DWORD PTR [rax]
  405660:	add    rbx,0x1
  405664:	movsx  rdx,BYTE PTR [rbx]
  405668:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  40566d:	jne    405660 <rb_strcasecmp@plt+0x3150>
  40566f:	cmp    dl,0x3b
  405672:	ja     40567a <rb_strcasecmp@plt+0x316a>
  405674:	bt     r13,rdx
  405678:	jb     405620 <rb_strcasecmp@plt+0x3110>
  40567a:	mov    rax,rbx
  40567d:	jmp    405688 <rb_strcasecmp@plt+0x3178>
  40567f:	nop
  405680:	test   dil,dil
  405683:	mov    rax,rsi
  405686:	je     405620 <rb_strcasecmp@plt+0x3110>
  405688:	movsx  rdi,BYTE PTR [rax+0x1]
  40568d:	lea    rsi,[rax+0x1]
  405691:	test   BYTE PTR [rcx+rdi*2+0x1],0x20
  405696:	je     405680 <rb_strcasecmp@plt+0x3170>
  405698:	test   dil,dil
  40569b:	je     405620 <rb_strcasecmp@plt+0x3110>
  40569d:	lea    r15,[rax+0x2]
  4056a1:	movsx  rax,BYTE PTR [rsi+0x1]
  4056a6:	mov    BYTE PTR [rsi],0x0
  4056a9:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  4056ae:	je     4056bf <rb_strcasecmp@plt+0x31af>
  4056b0:	add    r15,0x1
  4056b4:	movsx  rax,BYTE PTR [r15]
  4056b8:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  4056bd:	jne    4056b0 <rb_strcasecmp@plt+0x31a0>
  4056bf:	lea    rsi,[rip+0x6009]        # 40b6cf <rb_strcasecmp@plt+0x91bf>
  4056c6:	mov    rdi,r15
  4056c9:	call   402120 <strpbrk@plt>
  4056ce:	test   rax,rax
  4056d1:	je     4056d6 <rb_strcasecmp@plt+0x31c6>
  4056d3:	mov    BYTE PTR [rax],0x0
  4056d6:	lea    rsi,[rip+0x5fda]        # 40b6b7 <rb_strcasecmp@plt+0x91a7>
  4056dd:	mov    rdi,rbx
  4056e0:	call   402510 <rb_strcasecmp@plt>
  4056e5:	test   eax,eax
  4056e7:	jne    405744 <rb_strcasecmp@plt+0x3234>
  4056e9:	mov    rdi,0x415240
  4056f0:	mov    edx,0x100
  4056f5:	mov    rsi,r15
  4056f8:	call   4021b0 <rb_strlcpy@plt>
  4056fd:	jmp    405620 <rb_strcasecmp@plt+0x3110>
  405702:	mov    rdi,r12
  405705:	call   402420 <fclose@plt>
  40570a:	mov    eax,DWORD PTR [r14]
  40570d:	test   eax,eax
  40570f:	jne    40571d <rb_strcasecmp@plt+0x320d>
  405711:	lea    rdi,[rip+0x5fc5]        # 40b6dd <rb_strcasecmp@plt+0x91cd>
  405718:	call   4054f0 <rb_strcasecmp@plt+0x2fe0>
  40571d:	xor    eax,eax
  40571f:	mov    rsi,QWORD PTR [rsp+0x88]
  405727:	xor    rsi,QWORD PTR fs:0x28
  405730:	jne    405768 <rb_strcasecmp@plt+0x3258>
  405732:	add    rsp,0x98
  405739:	pop    rbx
  40573a:	pop    rbp
  40573b:	pop    r12
  40573d:	pop    r13
  40573f:	pop    r14
  405741:	pop    r15
  405743:	ret    
  405744:	lea    rsi,[rip+0x5f87]        # 40b6d2 <rb_strcasecmp@plt+0x91c2>
  40574b:	mov    rdi,rbx
  40574e:	call   402510 <rb_strcasecmp@plt>
  405753:	test   eax,eax
  405755:	jne    405620 <rb_strcasecmp@plt+0x3110>
  40575b:	mov    rdi,r15
  40575e:	call   4054f0 <rb_strcasecmp@plt+0x2fe0>
  405763:	jmp    405620 <rb_strcasecmp@plt+0x3110>
  405768:	call   402380 <__stack_chk_fail@plt>
  40576d:	nop    DWORD PTR [rax]
  405770:	push   r15
  405772:	push   r14
  405774:	push   r13
  405776:	push   r12
  405778:	push   rbp
  405779:	push   rbx
  40577a:	sub    rsp,0x148
  405781:	mov    rax,QWORD PTR fs:0x28
  40578a:	mov    QWORD PTR [rsp+0x138],rax
  405792:	xor    eax,eax
  405794:	movsxd rax,r8d
  405797:	cmp    rdi,rdx
  40579a:	mov    QWORD PTR [rsp],rcx
  40579e:	mov    QWORD PTR [rsp+0x10],rax
  4057a3:	ja     40580c <rb_strcasecmp@plt+0x32fc>
  4057a5:	cmp    rsi,rdx
  4057a8:	mov    r13,rsi
  4057ab:	mov    r15,rdx
  4057ae:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  4057b0:	lea    rbp,[rsp+0x30]
  4057b5:	mov    r12,rdi
  4057b8:	mov    rbx,rdx
  4057bb:	xor    r14d,r14d
  4057be:	mov    DWORD PTR [rsp+0xc],0xffffffff
  4057c6:	lea    rax,[rbp+0xff]
  4057cd:	mov    r10,rbp
  4057d0:	mov    QWORD PTR [rsp+0x18],rax
  4057d5:	mov    rax,rsi
  4057d8:	sub    rax,rdi
  4057db:	mov    QWORD PTR [rsp+0x20],rax
  4057e0:	movzx  eax,BYTE PTR [rbx]
  4057e3:	lea    rsi,[rbx+0x1]
  4057e7:	test   eax,eax
  4057e9:	mov    ecx,eax
  4057eb:	je     4058fa <rb_strcasecmp@plt+0x33ea>
  4057f1:	mov    edx,ecx
  4057f3:	and    edx,0xffffffc0
  4057f6:	cmp    dl,0x40
  4057f9:	je     4058a0 <rb_strcasecmp@plt+0x3390>
  4057ff:	cmp    dl,0xc0
  405802:	je     405850 <rb_strcasecmp@plt+0x3340>
  405804:	test   dl,dl
  405806:	je     4058a0 <rb_strcasecmp@plt+0x3390>
  40580c:	call   402340 <__errno_location@plt>
  405811:	mov    DWORD PTR [rax],0x5a
  405817:	mov    DWORD PTR [rsp+0xc],0xffffffff
  40581f:	mov    rdi,QWORD PTR [rsp+0x138]
  405827:	xor    rdi,QWORD PTR fs:0x28
  405830:	mov    eax,DWORD PTR [rsp+0xc]
  405834:	jne    405d2d <rb_strcasecmp@plt+0x381d>
  40583a:	add    rsp,0x148
  405841:	pop    rbx
  405842:	pop    rbp
  405843:	pop    r12
  405845:	pop    r13
  405847:	pop    r14
  405849:	pop    r15
  40584b:	ret    
  40584c:	nop    DWORD PTR [rax+0x0]
  405850:	cmp    r13,rsi
  405853:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405855:	mov    edi,DWORD PTR [rsp+0xc]
  405859:	sub    rsi,r15
  40585c:	add    esi,0x1
  40585f:	test   edi,edi
  405861:	cmovns esi,edi
  405864:	shl    eax,0x8
  405867:	mov    edi,eax
  405869:	movzx  eax,BYTE PTR [rbx+0x1]
  40586d:	mov    DWORD PTR [rsp+0xc],esi
  405871:	and    edi,0x3f00
  405877:	or     edi,eax
  405879:	movsxd rdi,edi
  40587c:	add    rdi,r12
  40587f:	mov    rbx,rdi
  405882:	jb     40580c <rb_strcasecmp@plt+0x32fc>
  405884:	cmp    r13,rdi
  405887:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405889:	add    r14d,0x2
  40588d:	movsxd rax,r14d
  405890:	cmp    rax,QWORD PTR [rsp+0x20]
  405895:	jl     4057e0 <rb_strcasecmp@plt+0x32d0>
  40589b:	jmp    40580c <rb_strcasecmp@plt+0x32fc>
  4058a0:	mov    rdi,rbx
  4058a3:	call   4054a0 <rb_strcasecmp@plt+0x2f90>
  4058a8:	test   eax,eax
  4058aa:	js     40580c <rb_strcasecmp@plt+0x32fc>
  4058b0:	movsxd r8,eax
  4058b3:	lea    rdx,[r10+r8*1+0x1]
  4058b8:	cmp    QWORD PTR [rsp+0x18],rdx
  4058bd:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  4058c3:	lea    rbx,[rsi+r8*1]
  4058c7:	cmp    r13,rbx
  4058ca:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  4058d0:	lea    r9,[r10+0x1]
  4058d4:	mov    BYTE PTR [r10],cl
  4058d7:	mov    rdx,r8
  4058da:	mov    QWORD PTR [rsp+0x28],r8
  4058df:	lea    r14d,[rax+r14*1+0x1]
  4058e4:	mov    rdi,r9
  4058e7:	call   402500 <memcpy@plt>
  4058ec:	mov    r8,QWORD PTR [rsp+0x28]
  4058f1:	lea    r10,[rax+r8*1]
  4058f5:	jmp    4057e0 <rb_strcasecmp@plt+0x32d0>
  4058fa:	mov    r11d,DWORD PTR [rsp+0xc]
  4058ff:	mov    BYTE PTR [r10],0x0
  405903:	test   r11d,r11d
  405906:	js     405caf <rb_strcasecmp@plt+0x379f>
  40590c:	mov    r12,QWORD PTR [rsp+0x10]
  405911:	mov    rax,QWORD PTR [rsp]
  405915:	lea    r15,[rip+0x5de4]        # 40b700 <rb_strcasecmp@plt+0x91f0>
  40591c:	mov    rcx,rbp
  40591f:	movabs r13,0x4000000420010c5
  405929:	add    r12,rax
  40592c:	movsx  esi,BYTE PTR [rcx]
  40592f:	test   esi,esi
  405931:	je     405cc8 <rb_strcasecmp@plt+0x37b8>
  405937:	mov    r8d,esi
  40593a:	and    r8d,0xc0
  405941:	cmp    r8d,0xc0
  405948:	je     40580c <rb_strcasecmp@plt+0x32fc>
  40594e:	cmp    QWORD PTR [rsp],rax
  405952:	je     405c18 <rb_strcasecmp@plt+0x3708>
  405958:	cmp    r12,rax
  40595b:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405961:	lea    rbx,[rax+0x1]
  405965:	mov    BYTE PTR [rax],0x2e
  405968:	mov    rdi,rcx
  40596b:	call   4054a0 <rb_strcasecmp@plt+0x2f90>
  405970:	test   eax,eax
  405972:	js     40580c <rb_strcasecmp@plt+0x32fc>
  405978:	movsxd rdx,eax
  40597b:	add    rdx,rbx
  40597e:	cmp    r12,rdx
  405981:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405987:	cmp    r8d,0x40
  40598b:	je     405ad0 <rb_strcasecmp@plt+0x35c0>
  405991:	test   eax,eax
  405993:	lea    rbp,[rcx+0x1]
  405997:	je     405aa8 <rb_strcasecmp@plt+0x3598>
  40599d:	sub    eax,0x1
  4059a0:	mov    r8d,0x64
  4059a6:	mov    edi,0x1
  4059ab:	lea    rsi,[rcx+rax*1+0x2]
  4059b0:	jmp    4059e2 <rb_strcasecmp@plt+0x34d2>
  4059b2:	nop    WORD PTR [rax+rax*1+0x0]
  4059b8:	shlx   rcx,rdi,rcx
  4059bd:	test   rcx,r13
  4059c0:	je     4059f4 <rb_strcasecmp@plt+0x34e4>
  4059c2:	lea    rax,[rbx+0x1]
  4059c6:	cmp    r12,rax
  4059c9:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  4059cf:	mov    BYTE PTR [rbx],0x5c
  4059d2:	mov    BYTE PTR [rbx+0x1],dl
  4059d5:	add    rbx,0x2
  4059d9:	cmp    rbp,rsi
  4059dc:	je     405aa8 <rb_strcasecmp@plt+0x3598>
  4059e2:	add    rbp,0x1
  4059e6:	movzx  eax,BYTE PTR [rbp-0x1]
  4059ea:	lea    ecx,[rax-0x22]
  4059ed:	mov    edx,eax
  4059ef:	cmp    ecx,0x3a
  4059f2:	jbe    4059b8 <rb_strcasecmp@plt+0x34a8>
  4059f4:	sub    eax,0x21
  4059f7:	cmp    eax,0x5d
  4059fa:	jbe    405ab8 <rb_strcasecmp@plt+0x35a8>
  405a00:	lea    rax,[rbx+0x3]
  405a04:	cmp    r12,rax
  405a07:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405a0d:	movzx  eax,dl
  405a10:	mov    r11d,edx
  405a13:	mov    BYTE PTR [rbx],0x5c
  405a16:	lea    ecx,[rax*4+0x0]
  405a1d:	mov    r9d,eax
  405a20:	add    rbx,0x4
  405a24:	add    ecx,eax
  405a26:	lea    ecx,[r9+rcx*8]
  405a2a:	mov    eax,ecx
  405a2c:	shr    ax,0x8
  405a30:	shr    al,0x4
  405a33:	mov    r9,rax
  405a36:	and    r9d,0x7
  405a3a:	imul   eax,r8d
  405a3e:	movzx  r9d,BYTE PTR [r15+r9*1]
  405a43:	sub    r11d,eax
  405a46:	mov    BYTE PTR [rbx-0x3],r9b
  405a4a:	movzx  r9d,r11b
  405a4e:	lea    eax,[r9*4+0x0]
  405a56:	mov    r10d,r9d
  405a59:	add    eax,r9d
  405a5c:	lea    eax,[r10+rax*8]
  405a60:	lea    r9d,[rax*4+0x0]
  405a68:	add    eax,r9d
  405a6b:	shr    ax,0xb
  405a6f:	and    eax,0x1f
  405a72:	movzx  eax,BYTE PTR [r15+rax*1]
  405a77:	mov    BYTE PTR [rbx-0x2],al
  405a7a:	lea    eax,[rcx*4+0x0]
  405a81:	add    ecx,eax
  405a83:	shr    cx,0xb
  405a87:	lea    eax,[rcx*4+0x0]
  405a8e:	add    ecx,eax
  405a90:	add    ecx,ecx
  405a92:	sub    edx,ecx
  405a94:	movzx  edx,dl
  405a97:	movzx  eax,BYTE PTR [r15+rdx*1]
  405a9c:	mov    BYTE PTR [rbx-0x1],al
  405a9f:	cmp    rbp,rsi
  405aa2:	jne    4059e2 <rb_strcasecmp@plt+0x34d2>
  405aa8:	mov    rcx,rbp
  405aab:	mov    rax,rbx
  405aae:	jmp    40592c <rb_strcasecmp@plt+0x341c>
  405ab3:	nop    DWORD PTR [rax+rax*1+0x0]
  405ab8:	cmp    r12,rbx
  405abb:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405ac1:	mov    BYTE PTR [rbx],dl
  405ac3:	add    rbx,0x1
  405ac7:	jmp    4059d9 <rb_strcasecmp@plt+0x34c9>
  405acc:	nop    DWORD PTR [rax+0x0]
  405ad0:	cmp    esi,0x41
  405ad3:	jne    405d06 <rb_strcasecmp@plt+0x37f6>
  405ad9:	movzx  eax,BYTE PTR [rcx+0x1]
  405add:	test   eax,eax
  405adf:	mov    DWORD PTR [rsp+0x10],eax
  405ae3:	jne    405c21 <rb_strcasecmp@plt+0x3711>
  405ae9:	lea    rax,[rbx+0x49]
  405aed:	cmp    r12,rax
  405af0:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405af6:	lea    rbp,[rcx+0x2]
  405afa:	lea    r10,[rbx+0x3]
  405afe:	mov    DWORD PTR [rbx],0x785b5c
  405b04:	mov    DWORD PTR [rsp+0x10],0x100
  405b0c:	mov    r14d,DWORD PTR [rsp+0x10]
  405b11:	mov    QWORD PTR [rsp+0x18],rbx
  405b16:	mov    ebx,r14d
  405b19:	mov    r14,r10
  405b1c:	nop    DWORD PTR [rax+0x0]
  405b20:	movzx  r8d,BYTE PTR [rbp+0x0]
  405b25:	lea    rcx,[rip+0x5bbb]        # 40b6e7 <rb_strcasecmp@plt+0x91d7>
  405b2c:	mov    rdi,r14
  405b2f:	xor    eax,eax
  405b31:	mov    rdx,0xffffffffffffffff
  405b38:	mov    esi,0x1
  405b3d:	sub    ebx,0x8
  405b40:	add    rbp,0x1
  405b44:	call   402470 <__sprintf_chk@plt>
  405b49:	cdqe   
  405b4b:	add    r14,rax
  405b4e:	cmp    ebx,0x7
  405b51:	jg     405b20 <rb_strcasecmp@plt+0x3610>
  405b53:	mov    r10,r14
  405b56:	mov    r14d,ebx
  405b59:	mov    rbx,QWORD PTR [rsp+0x18]
  405b5e:	cmp    r14d,0x4
  405b62:	jg     405c7e <rb_strcasecmp@plt+0x376e>
  405b68:	test   r14d,r14d
  405b6b:	je     405bc7 <rb_strcasecmp@plt+0x36b7>
  405b6d:	lea    rax,[rbp+0x1]
  405b71:	mov    edx,0x4
  405b76:	mov    r8d,0xf
  405b7c:	sub    edx,r14d
  405b7f:	lea    rcx,[rip+0x5b66]        # 40b6ec <rb_strcasecmp@plt+0x91dc>
  405b86:	mov    QWORD PTR [rsp+0x18],rax
  405b8b:	movzx  eax,BYTE PTR [rbp+0x0]
  405b8f:	shlx   r8d,r8d,edx
  405b94:	shr    al,0x4
  405b97:	movzx  eax,al
  405b9a:	and    r8d,eax
  405b9d:	mov    rdi,r10
  405ba0:	mov    rdx,0xffffffffffffffff
  405ba7:	mov    esi,0x1
  405bac:	xor    eax,eax
  405bae:	mov    QWORD PTR [rsp+0x20],r10
  405bb3:	call   402470 <__sprintf_chk@plt>
  405bb8:	mov    r10,QWORD PTR [rsp+0x20]
  405bbd:	mov    rbp,QWORD PTR [rsp+0x18]
  405bc2:	cdqe   
  405bc4:	add    r10,rax
  405bc7:	mov    r8d,DWORD PTR [rsp+0x10]
  405bcc:	lea    rcx,[rip+0x5b1d]        # 40b6f0 <rb_strcasecmp@plt+0x91e0>
  405bd3:	mov    rdi,r10
  405bd6:	xor    eax,eax
  405bd8:	mov    rdx,0xffffffffffffffff
  405bdf:	mov    esi,0x1
  405be4:	mov    QWORD PTR [rsp+0x10],r10
  405be9:	call   402470 <__sprintf_chk@plt>
  405bee:	mov    r10,QWORD PTR [rsp+0x10]
  405bf3:	cdqe   
  405bf5:	add    r10,rax
  405bf8:	sub    r10,rbx
  405bfb:	test   r10d,r10d
  405bfe:	js     40580c <rb_strcasecmp@plt+0x32fc>
  405c04:	movsxd r10,r10d
  405c07:	mov    rcx,rbp
  405c0a:	add    rbx,r10
  405c0d:	mov    rax,rbx
  405c10:	jmp    40592c <rb_strcasecmp@plt+0x341c>
  405c15:	nop    DWORD PTR [rax]
  405c18:	mov    rbx,QWORD PTR [rsp]
  405c1c:	jmp    405968 <rb_strcasecmp@plt+0x3458>
  405c21:	mov    edi,DWORD PTR [rsp+0x10]
  405c25:	mov    edx,0x9
  405c2a:	mov    eax,edi
  405c2c:	add    eax,0x3
  405c2f:	sar    eax,0x2
  405c32:	cmp    edi,0x63
  405c35:	jg     405c42 <rb_strcasecmp@plt+0x3732>
  405c37:	xor    edx,edx
  405c39:	cmp    edi,0x9
  405c3c:	setg   dl
  405c3f:	add    edx,0x7
  405c42:	add    eax,edx
  405c44:	add    rax,rbx
  405c47:	cmp    r12,rax
  405c4a:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405c50:	cmp    DWORD PTR [rsp+0x10],0x7
  405c55:	lea    rbp,[rcx+0x2]
  405c59:	mov    DWORD PTR [rbx],0x785b5c
  405c5f:	lea    r10,[rbx+0x3]
  405c63:	jg     405b0c <rb_strcasecmp@plt+0x35fc>
  405c69:	mov    eax,DWORD PTR [rsp+0x10]
  405c6d:	cmp    eax,0x4
  405c70:	mov    r14d,eax
  405c73:	jle    405b6d <rb_strcasecmp@plt+0x365d>
  405c79:	mov    r14d,DWORD PTR [rsp+0x10]
  405c7e:	lea    rax,[rbp+0x1]
  405c82:	movsx  r8d,BYTE PTR [rbp+0x0]
  405c87:	lea    rcx,[rip+0x5a59]        # 40b6e7 <rb_strcasecmp@plt+0x91d7>
  405c8e:	mov    QWORD PTR [rsp+0x18],rax
  405c93:	mov    eax,0x8
  405c98:	sub    eax,r14d
  405c9b:	mov    edx,eax
  405c9d:	mov    eax,0xff
  405ca2:	shlx   eax,eax,edx
  405ca7:	and    r8d,eax
  405caa:	jmp    405b9d <rb_strcasecmp@plt+0x368d>
  405caf:	sub    rsi,r15
  405cb2:	cmp    esi,0xffffffff
  405cb5:	mov    DWORD PTR [rsp+0xc],esi
  405cb9:	jne    40590c <rb_strcasecmp@plt+0x33fc>
  405cbf:	jmp    405817 <rb_strcasecmp@plt+0x3307>
  405cc4:	nop    DWORD PTR [rax+0x0]
  405cc8:	cmp    QWORD PTR [rsp],rax
  405ccc:	je     405d16 <rb_strcasecmp@plt+0x3806>
  405cce:	cmp    r12,rax
  405cd1:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405cd7:	mov    rdi,QWORD PTR [rsp]
  405cdb:	mov    BYTE PTR [rax],0x0
  405cde:	add    eax,0x2
  405ce1:	cmp    eax,edi
  405ce3:	je     405817 <rb_strcasecmp@plt+0x3307>
  405ce9:	mov    eax,DWORD PTR [rsp+0xc]
  405ced:	test   eax,eax
  405cef:	jle    40581f <rb_strcasecmp@plt+0x330f>
  405cf5:	cmp    BYTE PTR [rdi],0x2e
  405cf8:	jne    40581f <rb_strcasecmp@plt+0x330f>
  405cfe:	mov    BYTE PTR [rdi],0x0
  405d01:	jmp    40581f <rb_strcasecmp@plt+0x330f>
  405d06:	call   402340 <__errno_location@plt>
  405d0b:	mov    DWORD PTR [rax],0x16
  405d11:	jmp    405817 <rb_strcasecmp@plt+0x3307>
  405d16:	cmp    r12,QWORD PTR [rsp]
  405d1a:	jbe    40580c <rb_strcasecmp@plt+0x32fc>
  405d20:	mov    rax,QWORD PTR [rsp]
  405d24:	mov    BYTE PTR [rax],0x2e
  405d27:	add    rax,0x1
  405d2b:	jmp    405cce <rb_strcasecmp@plt+0x37be>
  405d2d:	call   402380 <__stack_chk_fail@plt>
  405d32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405d3d:	nop    DWORD PTR [rax]
  405d40:	sub    rsp,0x8
  405d44:	cmp    rsi,rdi
  405d47:	mov    rcx,rdi
  405d4a:	jbe    405dd0 <rb_strcasecmp@plt+0x38c0>
  405d50:	movzx  eax,BYTE PTR [rdi]
  405d53:	lea    r8,[rdi+0x1]
  405d57:	test   al,al
  405d59:	je     405d8c <rb_strcasecmp@plt+0x387c>
  405d5b:	mov    edx,eax
  405d5d:	and    edx,0xffffffc0
  405d60:	cmp    dl,0x40
  405d63:	je     405da0 <rb_strcasecmp@plt+0x3890>
  405d65:	cmp    dl,0xc0
  405d68:	je     405d88 <rb_strcasecmp@plt+0x3878>
  405d6a:	test   dl,dl
  405d6c:	je     405dc8 <rb_strcasecmp@plt+0x38b8>
  405d6e:	call   402340 <__errno_location@plt>
  405d73:	mov    DWORD PTR [rax],0x5a
  405d79:	mov    eax,0xffffffff
  405d7e:	add    rsp,0x8
  405d82:	ret    
  405d83:	nop    DWORD PTR [rax+rax*1+0x0]
  405d88:	lea    r8,[rdi+0x2]
  405d8c:	mov    eax,r8d
  405d8f:	sub    eax,ecx
  405d91:	cmp    rsi,r8
  405d94:	jb     405d6e <rb_strcasecmp@plt+0x385e>
  405d96:	add    rsp,0x8
  405d9a:	ret    
  405d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  405da0:	call   4054a0 <rb_strcasecmp@plt+0x2f90>
  405da5:	test   eax,eax
  405da7:	js     405d6e <rb_strcasecmp@plt+0x385e>
  405da9:	movsxd rdi,eax
  405dac:	add    rdi,r8
  405daf:	cmp    rsi,rdi
  405db2:	jbe    405dd5 <rb_strcasecmp@plt+0x38c5>
  405db4:	movzx  eax,BYTE PTR [rdi]
  405db7:	lea    r8,[rdi+0x1]
  405dbb:	test   al,al
  405dbd:	jne    405d5b <rb_strcasecmp@plt+0x384b>
  405dbf:	jmp    405d8c <rb_strcasecmp@plt+0x387c>
  405dc1:	nop    DWORD PTR [rax+0x0]
  405dc8:	movzx  edi,al
  405dcb:	add    rdi,r8
  405dce:	jmp    405daf <rb_strcasecmp@plt+0x389f>
  405dd0:	mov    r8,rdi
  405dd3:	jmp    405d8c <rb_strcasecmp@plt+0x387c>
  405dd5:	mov    r8,rdi
  405dd8:	jmp    405d8c <rb_strcasecmp@plt+0x387c>
  405dda:	nop    WORD PTR [rax+rax*1+0x0]
  405de0:	movzx  eax,WORD PTR [rdi]
  405de3:	rol    ax,0x8
  405de7:	movzx  eax,ax
  405dea:	ret    
  405deb:	nop    DWORD PTR [rax+rax*1+0x0]
  405df0:	movbe  eax,DWORD PTR [rdi]
  405df4:	mov    eax,eax
  405df6:	ret    
  405df7:	nop    WORD PTR [rax+rax*1+0x0]
  405e00:	mov    eax,edi
  405e02:	mov    BYTE PTR [rsi+0x1],dil
  405e06:	shr    ax,0x8
  405e0a:	mov    BYTE PTR [rsi],al
  405e0c:	ret    
  405e0d:	nop    DWORD PTR [rax]
  405e10:	mov    eax,edi
  405e12:	mov    BYTE PTR [rsi+0x3],dil
  405e16:	shr    eax,0x18
  405e19:	mov    BYTE PTR [rsi],al
  405e1b:	mov    eax,edi
  405e1d:	shr    eax,0x10
  405e20:	mov    BYTE PTR [rsi+0x1],al
  405e23:	mov    eax,edi
  405e25:	shr    eax,0x8
  405e28:	mov    BYTE PTR [rsi+0x2],al
  405e2b:	ret    
  405e2c:	nop    DWORD PTR [rax+0x0]
  405e30:	push   r15
  405e32:	push   r14
  405e34:	push   r13
  405e36:	push   r12
  405e38:	push   rbp
  405e39:	push   rbx
  405e3a:	sub    rsp,0x218
  405e41:	mov    rax,QWORD PTR fs:0x28
  405e4a:	mov    QWORD PTR [rsp+0x208],rax
  405e52:	xor    eax,eax
  405e54:	test   rcx,rcx
  405e57:	mov    DWORD PTR [rsp+0xc],esi
  405e5b:	mov    DWORD PTR [rsp+0x38],edx
  405e5f:	je     405fcb <rb_strcasecmp@plt+0x3abb>
  405e65:	cmp    r8d,0xb
  405e69:	jle    405fcb <rb_strcasecmp@plt+0x3abb>
  405e6f:	sub    r8d,0x10
  405e73:	mov    QWORD PTR [rcx],0x0
  405e7a:	mov    r12,rcx
  405e7d:	mov    DWORD PTR [rcx+0x8],0x0
  405e84:	mov    BYTE PTR [rcx+0x2],0x1
  405e88:	mov    BYTE PTR [rcx+0x3],0x0
  405e8c:	mov    QWORD PTR [rsp+0x60],rcx
  405e91:	mov    QWORD PTR [rsp+0x68],0x0
  405e9a:	mov    DWORD PTR [rsp+0x8],r8d
  405e9f:	js     405fcb <rb_strcasecmp@plt+0x3abb>
  405ea5:	movsx  r13d,BYTE PTR [rdi]
  405ea9:	lea    rbx,[rsp+0x100]
  405eb1:	mov    r15,rdi
  405eb4:	lea    rbp,[rdi+0x1]
  405eb8:	lea    rax,[rbx+0x1]
  405ebc:	test   r13d,r13d
  405ebf:	mov    QWORD PTR [rsp+0x50],rax
  405ec4:	je     4066cd <rb_strcasecmp@plt+0x41bd>
  405eca:	lea    rax,[rsp+0x58]
  405ecf:	mov    QWORD PTR [rsp],rbx
  405ed3:	mov    r14d,r13d
  405ed6:	mov    QWORD PTR [rsp+0x10],rax
  405edb:	mov    QWORD PTR [rsp+0x18],rax
  405ee0:	jmp    405f27 <rb_strcasecmp@plt+0x3a17>
  405ee2:	nop    WORD PTR [rax+rax*1+0x0]
  405ee8:	cmp    r14d,0x2e
  405eec:	je     406050 <rb_strcasecmp@plt+0x3b40>
  405ef2:	mov    r15,rbp
  405ef5:	mov    rax,QWORD PTR [rsp+0x50]
  405efa:	lea    rdx,[rbx+0xff]
  405f01:	cmp    rax,rdx
  405f04:	jae    405fc0 <rb_strcasecmp@plt+0x3ab0>
  405f0a:	lea    rdx,[rax+0x1]
  405f0e:	lea    rbp,[r15+0x1]
  405f12:	mov    QWORD PTR [rsp+0x50],rdx
  405f17:	mov    BYTE PTR [rax],r14b
  405f1a:	movsx  r14d,BYTE PTR [r15]
  405f1e:	test   r14d,r14d
  405f21:	je     4060e0 <rb_strcasecmp@plt+0x3bd0>
  405f27:	cmp    r14d,0x5c
  405f2b:	jne    405ee8 <rb_strcasecmp@plt+0x39d8>
  405f2d:	movsx  r14d,BYTE PTR [rbp+0x0]
  405f32:	lea    r15,[rbp+0x1]
  405f36:	test   r14d,r14d
  405f39:	je     4060e0 <rb_strcasecmp@plt+0x3bd0>
  405f3f:	cmp    r14d,0x5b
  405f43:	je     406000 <rb_strcasecmp@plt+0x3af0>
  405f49:	lea    rdi,[rip+0x57b0]        # 40b700 <rb_strcasecmp@plt+0x91f0>
  405f50:	mov    esi,r14d
  405f53:	call   402300 <strchr@plt>
  405f58:	test   rax,rax
  405f5b:	je     405ef5 <rb_strcasecmp@plt+0x39e5>
  405f5d:	movsx  esi,BYTE PTR [rbp+0x1]
  405f61:	lea    r14,[rip+0x5798]        # 40b700 <rb_strcasecmp@plt+0x91f0>
  405f68:	sub    rax,r14
  405f6b:	imul   r13d,eax,0x64
  405f6f:	test   esi,esi
  405f71:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  405f73:	mov    rdi,r14
  405f76:	call   402300 <strchr@plt>
  405f7b:	test   rax,rax
  405f7e:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  405f80:	movsx  esi,BYTE PTR [rbp+0x2]
  405f84:	sub    rax,r14
  405f87:	lea    r15,[rbp+0x3]
  405f8b:	lea    eax,[rax+rax*4]
  405f8e:	lea    r13d,[r13+rax*2+0x0]
  405f93:	test   esi,esi
  405f95:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  405f97:	mov    rdi,r14
  405f9a:	call   402300 <strchr@plt>
  405f9f:	test   rax,rax
  405fa2:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  405fa4:	sub    rax,r14
  405fa7:	lea    r14d,[r13+rax*1+0x0]
  405fac:	cmp    r14d,0xff
  405fb3:	jle    405ef5 <rb_strcasecmp@plt+0x39e5>
  405fb9:	nop    DWORD PTR [rax+0x0]
  405fc0:	call   402340 <__errno_location@plt>
  405fc5:	mov    DWORD PTR [rax],0x5a
  405fcb:	mov    eax,0xffffffff
  405fd0:	mov    rbx,QWORD PTR [rsp+0x208]
  405fd8:	xor    rbx,QWORD PTR fs:0x28
  405fe1:	jne    40672f <rb_strcasecmp@plt+0x421f>
  405fe7:	add    rsp,0x218
  405fee:	pop    rbx
  405fef:	pop    rbp
  405ff0:	pop    r12
  405ff2:	pop    r13
  405ff4:	pop    r14
  405ff6:	pop    r15
  405ff8:	ret    
  405ff9:	nop    DWORD PTR [rax+0x0]
  406000:	mov    esi,0x5d
  406005:	mov    rdi,r15
  406008:	call   402300 <strchr@plt>
  40600d:	test   rax,rax
  406010:	je     4060c8 <rb_strcasecmp@plt+0x3bb8>
  406016:	lea    r13,[rax+0x2]
  40601a:	mov    QWORD PTR [rsp+0x58],0x0
  406023:	mov    rax,r13
  406026:	sub    rax,r15
  406029:	cmp    rax,0x1
  40602d:	jle    406039 <rb_strcasecmp@plt+0x3b29>
  40602f:	cmp    BYTE PTR [rbp+0x1],0x78
  406033:	je     406460 <rb_strcasecmp@plt+0x3f50>
  406039:	mov    ebx,0x16
  40603e:	call   402340 <__errno_location@plt>
  406043:	mov    DWORD PTR [rax],ebx
  406045:	jmp    405fcb <rb_strcasecmp@plt+0x3abb>
  406047:	nop    WORD PTR [rax+rax*1+0x0]
  406050:	mov    eax,DWORD PTR [rsp]
  406053:	not    eax
  406055:	add    eax,DWORD PTR [rsp+0x50]
  406059:	test   al,0xc0
  40605b:	jne    405fc0 <rb_strcasecmp@plt+0x3ab0>
  406061:	lea    rsi,[rbx+0xff]
  406068:	cmp    QWORD PTR [rsp],rsi
  40606c:	jae    405fc0 <rb_strcasecmp@plt+0x3ab0>
  406072:	mov    rdi,QWORD PTR [rsp]
  406076:	mov    BYTE PTR [rdi],al
  406078:	movzx  edx,BYTE PTR [r15+0x1]
  40607d:	test   dl,dl
  40607f:	je     406662 <rb_strcasecmp@plt+0x4152>
  406085:	test   eax,eax
  406087:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  40608d:	cmp    dl,0x2e
  406090:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  406096:	movsx  r14d,BYTE PTR [rbp+0x0]
  40609b:	mov    rax,QWORD PTR [rsp+0x50]
  4060a0:	lea    rdx,[rbp+0x1]
  4060a4:	mov    QWORD PTR [rsp],rax
  4060a8:	add    rax,0x1
  4060ac:	test   r14d,r14d
  4060af:	mov    QWORD PTR [rsp+0x50],rax
  4060b4:	je     4060e5 <rb_strcasecmp@plt+0x3bd5>
  4060b6:	mov    r15,rbp
  4060b9:	mov    rbp,rdx
  4060bc:	jmp    405f27 <rb_strcasecmp@plt+0x3a17>
  4060c1:	nop    DWORD PTR [rax+0x0]
  4060c8:	call   402340 <__errno_location@plt>
  4060cd:	mov    DWORD PTR [rax],0x16
  4060d3:	jmp    405fcb <rb_strcasecmp@plt+0x3abb>
  4060d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4060e0:	mov    rax,QWORD PTR [rsp+0x50]
  4060e5:	sub    rax,QWORD PTR [rsp]
  4060e9:	sub    eax,0x1
  4060ec:	test   al,0xc0
  4060ee:	jne    405fc0 <rb_strcasecmp@plt+0x3ab0>
  4060f4:	lea    rdx,[rbx+0xff]
  4060fb:	cmp    QWORD PTR [rsp],rdx
  4060ff:	jae    405fc0 <rb_strcasecmp@plt+0x3ab0>
  406105:	mov    rdi,QWORD PTR [rsp]
  406109:	test   eax,eax
  40610b:	mov    BYTE PTR [rdi],al
  40610d:	je     406129 <rb_strcasecmp@plt+0x3c19>
  40610f:	mov    rax,QWORD PTR [rsp+0x50]
  406114:	cmp    rax,rdx
  406117:	jae    405fc0 <rb_strcasecmp@plt+0x3ab0>
  40611d:	lea    rdx,[rax+0x1]
  406121:	mov    QWORD PTR [rsp+0x50],rdx
  406126:	mov    BYTE PTR [rax],0x0
  406129:	mov    rax,QWORD PTR [rsp+0x50]
  40612e:	sub    rax,rbx
  406131:	cmp    rax,0xff
  406137:	jg     405fc0 <rb_strcasecmp@plt+0x3ab0>
  40613d:	mov    rax,QWORD PTR [rsp+0x60]
  406142:	test   rax,rax
  406145:	mov    QWORD PTR [rsp],rax
  406149:	je     406450 <rb_strcasecmp@plt+0x3f40>
  40614f:	cmp    QWORD PTR [rsp+0x68],0x0
  406155:	lea    rbp,[rsp+0x68]
  40615a:	je     40616b <rb_strcasecmp@plt+0x3c5b>
  40615c:	nop    DWORD PTR [rax+0x0]
  406160:	add    rbp,0x8
  406164:	cmp    QWORD PTR [rbp+0x0],0x0
  406169:	jne    406160 <rb_strcasecmp@plt+0x3c50>
  40616b:	xor    esi,esi
  40616d:	mov    rcx,rbx
  406170:	jmp    4061a4 <rb_strcasecmp@plt+0x3c94>
  406172:	nop    WORD PTR [rax+rax*1+0x0]
  406178:	mov    rdi,rcx
  40617b:	call   4054a0 <rb_strcasecmp@plt+0x2f90>
  406180:	test   eax,eax
  406182:	js     4060c8 <rb_strcasecmp@plt+0x3bb8>
  406188:	lea    esi,[rax+rsi*1+0x1]
  40618c:	cmp    esi,0xff
  406192:	jg     405fc0 <rb_strcasecmp@plt+0x3ab0>
  406198:	cdqe   
  40619a:	test   r8b,r8b
  40619d:	lea    rcx,[rcx+rax*1+0x1]
  4061a2:	je     4061c0 <rb_strcasecmp@plt+0x3cb0>
  4061a4:	movzx  r8d,BYTE PTR [rcx]
  4061a8:	mov    eax,r8d
  4061ab:	and    eax,0xffffffc0
  4061ae:	cmp    al,0xc0
  4061b0:	jne    406178 <rb_strcasecmp@plt+0x3c68>
  4061b2:	jmp    405fc0 <rb_strcasecmp@plt+0x3ab0>
  4061b7:	nop    WORD PTR [rax+rax*1+0x0]
  4061c0:	movsxd r8,DWORD PTR [rsp+0x8]
  4061c5:	lea    rax,[r12+0xc]
  4061ca:	lea    rdi,[rsp+0x68]
  4061cf:	mov    QWORD PTR [rsp+0x20],rbp
  4061d4:	mov    QWORD PTR [rsp+0x18],rbp
  4061d9:	mov    QWORD PTR [rsp+0x10],rax
  4061de:	mov    r13,rax
  4061e1:	mov    DWORD PTR [rsp+0x3c],0x1
  4061e9:	mov    QWORD PTR [rsp+0x28],rdi
  4061ee:	mov    QWORD PTR [rsp+0x40],r12
  4061f3:	add    r8,rax
  4061f6:	cmp    QWORD PTR [rsp],0x0
  4061fb:	lea    rax,[rsp+0xf8]
  406203:	mov    QWORD PTR [rsp+0x48],r8
  406208:	mov    rbp,r8
  40620b:	mov    QWORD PTR [rsp+0x30],rax
  406210:	setne  BYTE PTR [rsp+0x8]
  406215:	jmp    40626f <rb_strcasecmp@plt+0x3d5f>
  406217:	nop    WORD PTR [rax+rax*1+0x0]
  406220:	and    r12d,0xffffffc0
  406224:	cmp    r12b,0xc0
  406228:	je     405fc0 <rb_strcasecmp@plt+0x3ab0>
  40622e:	mov    rdi,rbx
  406231:	call   4054a0 <rb_strcasecmp@plt+0x2f90>
  406236:	movsxd r12,eax
  406239:	mov    r14,r12
  40623c:	add    r12,0x1
  406240:	lea    r15,[r13+r12*1+0x0]
  406245:	cmp    rbp,r15
  406248:	jbe    405fc0 <rb_strcasecmp@plt+0x3ab0>
  40624e:	lea    edx,[r14+0x1]
  406252:	mov    rsi,rbx
  406255:	mov    rdi,r13
  406258:	add    rbx,r12
  40625b:	mov    r13,r15
  40625e:	movsxd rdx,edx
  406261:	call   402500 <memcpy@plt>
  406266:	test   r14d,r14d
  406269:	je     4065b5 <rb_strcasecmp@plt+0x40a5>
  40626f:	movzx  r12d,BYTE PTR [rbx]
  406273:	test   r12b,r12b
  406276:	je     406220 <rb_strcasecmp@plt+0x3d10>
  406278:	cmp    BYTE PTR [rsp+0x8],0x0
  40627d:	je     406220 <rb_strcasecmp@plt+0x3d10>
  40627f:	mov    rax,QWORD PTR [rsp+0x28]
  406284:	cmp    QWORD PTR [rsp+0x18],rax
  406289:	jbe    406309 <rb_strcasecmp@plt+0x3df9>
  40628b:	mov    r11,rax
  40628e:	mov    r9,QWORD PTR [r11]
  406291:	movzx  r8d,BYTE PTR [r9]
  406295:	test   r8b,r8b
  406298:	je     4062fe <rb_strcasecmp@plt+0x3dee>
  40629a:	test   r8b,0xc0
  40629e:	jne    4062fe <rb_strcasecmp@plt+0x3dee>
  4062a0:	mov    r10,r9
  4062a3:	sub    r10,QWORD PTR [rsp]
  4062a7:	cmp    r10,0x3fff
  4062ae:	jg     4062fe <rb_strcasecmp@plt+0x3dee>
  4062b0:	mov    eax,r8d
  4062b3:	mov    rcx,r9
  4062b6:	mov    r14,rbx
  4062b9:	movzx  edx,al
  4062bc:	test   edx,edx
  4062be:	je     4062f0 <rb_strcasecmp@plt+0x3de0>
  4062c0:	and    eax,0xc0
  4062c5:	je     406388 <rb_strcasecmp@plt+0x3e78>
  4062cb:	cmp    al,0xc0
  4062cd:	jne    406320 <rb_strcasecmp@plt+0x3e10>
  4062cf:	movzx  ecx,BYTE PTR [rcx+0x1]
  4062d3:	shl    edx,0x8
  4062d6:	and    edx,0x3f00
  4062dc:	or     ecx,edx
  4062de:	add    rcx,QWORD PTR [rsp]
  4062e2:	movzx  eax,BYTE PTR [rcx]
  4062e5:	movzx  edx,al
  4062e8:	test   edx,edx
  4062ea:	jne    4062c0 <rb_strcasecmp@plt+0x3db0>
  4062ec:	nop    DWORD PTR [rax+0x0]
  4062f0:	lea    r9,[r9+r8*1+0x1]
  4062f5:	movzx  r8d,BYTE PTR [r9]
  4062f9:	test   r8b,r8b
  4062fc:	jne    40629a <rb_strcasecmp@plt+0x3d8a>
  4062fe:	add    r11,0x8
  406302:	cmp    QWORD PTR [rsp+0x18],r11
  406307:	ja     40628e <rb_strcasecmp@plt+0x3d7e>
  406309:	call   402340 <__errno_location@plt>
  40630e:	mov    DWORD PTR [rax],0x2
  406314:	jmp    40632b <rb_strcasecmp@plt+0x3e1b>
  406316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406320:	call   402340 <__errno_location@plt>
  406325:	mov    DWORD PTR [rax],0x5a
  40632b:	mov    rdi,QWORD PTR [rsp+0x20]
  406330:	mov    rcx,QWORD PTR [rsp+0x30]
  406335:	cmp    rdi,rcx
  406338:	jae    406220 <rb_strcasecmp@plt+0x3d10>
  40633e:	mov    rax,r13
  406341:	sub    rax,QWORD PTR [rsp]
  406345:	cmp    rax,0x3fff
  40634b:	jg     406220 <rb_strcasecmp@plt+0x3d10>
  406351:	mov    ecx,DWORD PTR [rsp+0x3c]
  406355:	test   ecx,ecx
  406357:	je     406220 <rb_strcasecmp@plt+0x3d10>
  40635d:	mov    rax,rdi
  406360:	mov    QWORD PTR [rdi],r13
  406363:	mov    QWORD PTR [rdi+0x8],0x0
  40636b:	add    rax,0x8
  40636f:	mov    DWORD PTR [rsp+0x3c],0x0
  406377:	mov    QWORD PTR [rsp+0x20],rax
  40637c:	jmp    406220 <rb_strcasecmp@plt+0x3d10>
  406381:	nop    DWORD PTR [rax+0x0]
  406388:	mov    rdi,rcx
  40638b:	call   4054a0 <rb_strcasecmp@plt+0x2f90>
  406390:	movzx  edx,BYTE PTR [r14]
  406394:	lea    rsi,[r14+0x1]
  406398:	cmp    eax,edx
  40639a:	jne    4062f0 <rb_strcasecmp@plt+0x3de0>
  4063a0:	add    rcx,0x1
  4063a4:	test   eax,eax
  4063a6:	je     4063f0 <rb_strcasecmp@plt+0x3ee0>
  4063a8:	sub    eax,0x1
  4063ab:	lea    r15,[r14+rax*1+0x2]
  4063b0:	jmp    4063bd <rb_strcasecmp@plt+0x3ead>
  4063b2:	nop    WORD PTR [rax+rax*1+0x0]
  4063b8:	cmp    rsi,r15
  4063bb:	je     4063f0 <rb_strcasecmp@plt+0x3ee0>
  4063bd:	add    rsi,0x1
  4063c1:	movzx  eax,BYTE PTR [rsi-0x1]
  4063c5:	lea    edi,[rax-0x41]
  4063c8:	lea    edx,[rax+0x20]
  4063cb:	cmp    edi,0x19
  4063ce:	cmovbe eax,edx
  4063d1:	add    rcx,0x1
  4063d5:	movzx  edx,BYTE PTR [rcx-0x1]
  4063d9:	lea    r14d,[rdx-0x41]
  4063dd:	lea    edi,[rdx+0x20]
  4063e0:	cmp    r14d,0x19
  4063e4:	cmovbe edx,edi
  4063e7:	cmp    edx,eax
  4063e9:	je     4063b8 <rb_strcasecmp@plt+0x3ea8>
  4063eb:	jmp    4062f0 <rb_strcasecmp@plt+0x3de0>
  4063f0:	cmp    BYTE PTR [rsi],0x0
  4063f3:	jne    406440 <rb_strcasecmp@plt+0x3f30>
  4063f5:	cmp    BYTE PTR [rcx],0x0
  4063f8:	jne    4062f0 <rb_strcasecmp@plt+0x3de0>
  4063fe:	test   r10d,r10d
  406401:	mov    eax,r10d
  406404:	js     40632b <rb_strcasecmp@plt+0x3e1b>
  40640a:	lea    rdx,[r13+0x1]
  40640e:	cmp    QWORD PTR [rsp+0x48],rdx
  406413:	mov    r12,QWORD PTR [rsp+0x40]
  406418:	jbe    405fc0 <rb_strcasecmp@plt+0x3ab0>
  40641e:	sar    eax,0x8
  406421:	mov    BYTE PTR [r13+0x1],r10b
  406425:	or     eax,0xffffffc0
  406428:	mov    BYTE PTR [r13+0x0],al
  40642c:	lea    rax,[r13+0x2]
  406430:	sub    eax,DWORD PTR [rsp+0x10]
  406434:	jmp    4065c1 <rb_strcasecmp@plt+0x40b1>
  406439:	nop    DWORD PTR [rax+0x0]
  406440:	mov    r14,rsi
  406443:	jmp    4062e2 <rb_strcasecmp@plt+0x3dd2>
  406448:	nop    DWORD PTR [rax+rax*1+0x0]
  406450:	xor    ebp,ebp
  406452:	jmp    40616b <rb_strcasecmp@plt+0x3c5b>
  406457:	nop    WORD PTR [rax+rax*1+0x0]
  406460:	call   402220 <__ctype_b_loc@plt>
  406465:	movzx  ecx,BYTE PTR [rbp+0x2]
  406469:	mov    rdx,QWORD PTR [rax]
  40646c:	test   BYTE PTR [rdx+rcx*2+0x1],0x10
  406471:	mov    rax,rcx
  406474:	je     406039 <rb_strcasecmp@plt+0x3b29>
  40647a:	mov    rdi,QWORD PTR [rsp+0x10]
  40647f:	lea    rsi,[rbx+0xff]
  406486:	lea    r14,[rbp+0x2]
  40648a:	cmp    rsi,rdi
  40648d:	jbe    40670d <rb_strcasecmp@plt+0x41fd>
  406493:	cmp    r13,r14
  406496:	jbe    40670d <rb_strcasecmp@plt+0x41fd>
  40649c:	lea    r9,[rip+0x527d]        # 40b720 <rb_strcasecmp@plt+0x9210>
  4064a3:	mov    r11,rdi
  4064a6:	xor    r15d,r15d
  4064a9:	xor    ebp,ebp
  4064ab:	xor    r8d,r8d
  4064ae:	xor    edi,edi
  4064b0:	xor    ecx,ecx
  4064b2:	cmp    al,0x2f
  4064b4:	je     406642 <rb_strcasecmp@plt+0x4132>
  4064ba:	cmp    al,0x5d
  4064bc:	jne    406606 <rb_strcasecmp@plt+0x40f6>
  4064c2:	test   ecx,ecx
  4064c4:	je     406502 <rb_strcasecmp@plt+0x3ff2>
  4064c6:	test   rdi,rdi
  4064c9:	mov    QWORD PTR [rsp+0x28],r11
  4064ce:	mov    DWORD PTR [rsp+0x20],r8d
  4064d3:	je     406039 <rb_strcasecmp@plt+0x3b29>
  4064d9:	mov    rsi,QWORD PTR [rsp+0x18]
  4064de:	mov    edx,0xa
  4064e3:	call   4022d0 <strtol@plt>
  4064e8:	mov    rdx,QWORD PTR [rsp+0x58]
  4064ed:	mov    r8d,DWORD PTR [rsp+0x20]
  4064f2:	mov    r11,QWORD PTR [rsp+0x28]
  4064f7:	cmp    BYTE PTR [rdx],0x5d
  4064fa:	jne    406039 <rb_strcasecmp@plt+0x3b29>
  406500:	mov    ecx,eax
  406502:	test   r8d,r8d
  406505:	je     406514 <rb_strcasecmp@plt+0x4004>
  406507:	mov    eax,ebp
  406509:	add    r11,0x1
  40650d:	shl    eax,0x4
  406510:	mov    BYTE PTR [r11-0x1],al
  406514:	add    r14,0x1
  406518:	cmp    r13,r14
  40651b:	jbe    4066da <rb_strcasecmp@plt+0x41ca>
  406521:	lea    rax,[rbx+0xff]
  406528:	cmp    r11,rax
  40652b:	jae    4066da <rb_strcasecmp@plt+0x41ca>
  406531:	test   ecx,ecx
  406533:	jle    406705 <rb_strcasecmp@plt+0x41f5>
  406539:	lea    eax,[rcx+0x3]
  40653c:	and    eax,0xfffffffc
  40653f:	cmp    eax,r15d
  406542:	jne    406039 <rb_strcasecmp@plt+0x3b29>
  406548:	mov    eax,ecx
  40654a:	sub    eax,r15d
  40654d:	add    eax,0x8
  406550:	shlx   ebp,ebp,eax
  406555:	test   bpl,bpl
  406558:	jne    406039 <rb_strcasecmp@plt+0x3b29>
  40655e:	xor    edx,edx
  406560:	cmp    ecx,0x100
  406566:	je     40656a <rb_strcasecmp@plt+0x405a>
  406568:	mov    edx,ecx
  40656a:	mov    rax,QWORD PTR [rsp]
  40656e:	lea    r15,[r14+0x1]
  406572:	mov    BYTE PTR [rax],0x41
  406575:	mov    rax,QWORD PTR [rsp+0x50]
  40657a:	mov    BYTE PTR [rax],dl
  40657c:	movsx  edx,BYTE PTR [r14]
  406580:	lea    rax,[r11+0x1]
  406584:	mov    QWORD PTR [rsp+0x50],rax
  406589:	test   edx,edx
  40658b:	je     406649 <rb_strcasecmp@plt+0x4139>
  406591:	cmp    edx,0x2e
  406594:	jne    4060c8 <rb_strcasecmp@plt+0x3bb8>
  40659a:	lea    rbp,[r14+0x2]
  40659e:	movsx  r14d,BYTE PTR [r14+0x1]
  4065a3:	mov    QWORD PTR [rsp],r11
  4065a7:	test   r14d,r14d
  4065aa:	jne    405f27 <rb_strcasecmp@plt+0x3a17>
  4065b0:	jmp    4060e5 <rb_strcasecmp@plt+0x3bd5>
  4065b5:	mov    eax,r15d
  4065b8:	sub    eax,DWORD PTR [rsp+0x10]
  4065bc:	mov    r12,QWORD PTR [rsp+0x40]
  4065c1:	test   eax,eax
  4065c3:	js     405fcb <rb_strcasecmp@plt+0x3abb>
  4065c9:	cdqe   
  4065cb:	add    rax,QWORD PTR [rsp+0x10]
  4065d0:	mov    ebx,DWORD PTR [rsp+0x38]
  4065d4:	mov    edx,ebx
  4065d6:	mov    BYTE PTR [rax+0x1],bl
  4065d9:	mov    ebx,DWORD PTR [rsp+0xc]
  4065dd:	shr    dx,0x8
  4065e1:	mov    BYTE PTR [rax],dl
  4065e3:	add    rax,0x4
  4065e7:	mov    edx,ebx
  4065e9:	mov    BYTE PTR [rax-0x1],bl
  4065ec:	shr    dx,0x8
  4065f0:	mov    BYTE PTR [rax-0x2],dl
  4065f3:	mov    edx,0x100
  4065f8:	sub    eax,r12d
  4065fb:	mov    WORD PTR [r12+0x4],dx
  406601:	jmp    405fd0 <rb_strcasecmp@plt+0x3ac0>
  406606:	test   ecx,ecx
  406608:	movzx  r10d,al
  40660c:	je     406680 <rb_strcasecmp@plt+0x4170>
  40660e:	test   BYTE PTR [rdx+r10*2+0x1],0x8
  406614:	je     406039 <rb_strcasecmp@plt+0x3b29>
  40661a:	test   rdi,rdi
  40661d:	je     4066e4 <rb_strcasecmp@plt+0x41d4>
  406623:	add    r14,0x1
  406627:	cmp    r13,r14
  40662a:	jbe    4066f4 <rb_strcasecmp@plt+0x41e4>
  406630:	cmp    r11,rsi
  406633:	jae    4066f4 <rb_strcasecmp@plt+0x41e4>
  406639:	movzx  eax,BYTE PTR [r14]
  40663d:	jmp    4064b2 <rb_strcasecmp@plt+0x3fa2>
  406642:	mov    ecx,0x1
  406647:	jmp    406623 <rb_strcasecmp@plt+0x4113>
  406649:	lea    rax,[rbx+0xff]
  406650:	cmp    r11,rax
  406653:	jae    405fc0 <rb_strcasecmp@plt+0x3ab0>
  406659:	mov    BYTE PTR [r11],0x0
  40665d:	jmp    406129 <rb_strcasecmp@plt+0x3c19>
  406662:	test   eax,eax
  406664:	je     406129 <rb_strcasecmp@plt+0x3c19>
  40666a:	mov    rax,QWORD PTR [rsp+0x50]
  40666f:	cmp    rax,rsi
  406672:	jb     40611d <rb_strcasecmp@plt+0x3c0d>
  406678:	jmp    405fc0 <rb_strcasecmp@plt+0x3ab0>
  40667d:	nop    DWORD PTR [rax]
  406680:	test   BYTE PTR [rdx+r10*2+0x1],0x10
  406686:	je     406039 <rb_strcasecmp@plt+0x3b29>
  40668c:	movsx  rax,al
  406690:	mov    r10d,ebp
  406693:	add    r15d,0x4
  406697:	movsx  ebp,BYTE PTR [r9+rax*1]
  40669c:	shl    r10d,0x4
  4066a0:	add    r8d,0x4
  4066a4:	add    ebp,r10d
  4066a7:	cmp    r15d,0x100
  4066ae:	jg     406039 <rb_strcasecmp@plt+0x3b29>
  4066b4:	cmp    r8d,0x8
  4066b8:	jne    406623 <rb_strcasecmp@plt+0x4113>
  4066be:	mov    BYTE PTR [r11],bpl
  4066c1:	xor    r8d,r8d
  4066c4:	add    r11,0x1
  4066c8:	jmp    406623 <rb_strcasecmp@plt+0x4113>
  4066cd:	mov    BYTE PTR [rsp+0x100],0x0
  4066d5:	jmp    406129 <rb_strcasecmp@plt+0x3c19>
  4066da:	mov    ebx,0x5a
  4066df:	jmp    40603e <rb_strcasecmp@plt+0x3b2e>
  4066e4:	cmp    al,0x30
  4066e6:	je     406039 <rb_strcasecmp@plt+0x3b29>
  4066ec:	mov    rdi,r14
  4066ef:	jmp    406623 <rb_strcasecmp@plt+0x4113>
  4066f4:	cmp    r13,r14
  4066f7:	jbe    4066da <rb_strcasecmp@plt+0x41ca>
  4066f9:	lea    rax,[rbx+0xff]
  406700:	cmp    r11,rax
  406703:	jae    4066da <rb_strcasecmp@plt+0x41ca>
  406705:	mov    ecx,r15d
  406708:	jmp    40655e <rb_strcasecmp@plt+0x404e>
  40670d:	mov    rcx,QWORD PTR [rsp+0x10]
  406712:	lea    rax,[rbx+0xff]
  406719:	cmp    rax,rcx
  40671c:	jbe    4066da <rb_strcasecmp@plt+0x41ca>
  40671e:	cmp    r13,r14
  406721:	jbe    4066da <rb_strcasecmp@plt+0x41ca>
  406723:	mov    r11,rcx
  406726:	xor    ecx,ecx
  406728:	mov    edx,ecx
  40672a:	jmp    40656a <rb_strcasecmp@plt+0x405a>
  40672f:	call   402380 <__stack_chk_fail@plt>
  406734:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40673e:	xchg   ax,ax
  406740:	mov    rax,rdx
  406743:	sub    rsp,0x8
  406747:	xor    esi,esi
  406749:	mov    rdi,QWORD PTR [rax]
  40674c:	mov    edx,0xa
  406751:	call   4022d0 <strtol@plt>
  406756:	test   eax,eax
  406758:	js     406765 <rb_strcasecmp@plt+0x4255>
  40675a:	mov    DWORD PTR [rip+0xa360],eax        # 410ac0 <rb_strcasecmp@plt+0xe5b0>
  406760:	add    rsp,0x8
  406764:	ret    
  406765:	lea    rsi,[rip+0x50b4]        # 40b820 <rb_strcasecmp@plt+0x9310>
  40676c:	mov    edx,eax
  40676e:	mov    edi,0x43
  406773:	xor    eax,eax
  406775:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40677a:	mov    edi,0x3
  40677f:	call   4020b0 <exit@plt>
  406784:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40678f:	nop
  406790:	push   r12
  406792:	push   rbp
  406793:	push   rbx
  406794:	mov    rbx,QWORD PTR [rip+0xe885]        # 415020 <rb_strcasecmp@plt+0x12b10>
  40679b:	test   rbx,rbx
  40679e:	je     4067d0 <rb_strcasecmp@plt+0x42c0>
  4067a0:	mov    r12,rdi
  4067a3:	jmp    4067b1 <rb_strcasecmp@plt+0x42a1>
  4067a5:	nop    DWORD PTR [rax]
  4067a8:	mov    rbx,QWORD PTR [rbx+0x10]
  4067ac:	test   rbx,rbx
  4067af:	je     4067d0 <rb_strcasecmp@plt+0x42c0>
  4067b1:	mov    rbp,QWORD PTR [rbx]
  4067b4:	mov    rsi,r12
  4067b7:	mov    rdi,rbp
  4067ba:	call   4020f0 <strcasecmp@plt>
  4067bf:	test   eax,eax
  4067c1:	jne    4067a8 <rb_strcasecmp@plt+0x4298>
  4067c3:	mov    rax,rbp
  4067c6:	pop    rbx
  4067c7:	pop    rbp
  4067c8:	pop    r12
  4067ca:	ret    
  4067cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4067d0:	xor    ebp,ebp
  4067d2:	mov    rax,rbp
  4067d5:	pop    rbx
  4067d6:	pop    rbp
  4067d7:	pop    r12
  4067d9:	ret    
  4067da:	nop    WORD PTR [rax+rax*1+0x0]
  4067e0:	push   rbx
  4067e1:	sub    rsp,0x10
  4067e5:	mov    rbx,QWORD PTR [rdx]
  4067e8:	mov    rdi,rbx
  4067eb:	call   406790 <rb_strcasecmp@plt+0x4280>
  4067f0:	test   rax,rax
  4067f3:	je     406880 <rb_strcasecmp@plt+0x4370>
  4067f9:	mov    edx,DWORD PTR [rax+0x324]
  4067ff:	test   edx,edx
  406801:	jle    406810 <rb_strcasecmp@plt+0x4300>
  406803:	mov    BYTE PTR [rax+0x320],0x1
  40680a:	add    rsp,0x10
  40680e:	pop    rbx
  40680f:	ret    
  406810:	mov    rdi,QWORD PTR [rip+0xe809]        # 415020 <rb_strcasecmp@plt+0x12b10>
  406817:	test   rdi,rdi
  40681a:	jne    406829 <rb_strcasecmp@plt+0x4319>
  40681c:	jmp    406873 <rb_strcasecmp@plt+0x4363>
  40681e:	xchg   ax,ax
  406820:	mov    rdi,QWORD PTR [rdi+0x10]
  406824:	test   rdi,rdi
  406827:	je     406873 <rb_strcasecmp@plt+0x4363>
  406829:	cmp    rax,QWORD PTR [rdi]
  40682c:	jne    406820 <rb_strcasecmp@plt+0x4310>
  40682e:	mov    rdx,QWORD PTR [rdi+0x10]
  406832:	mov    rcx,QWORD PTR [rdi+0x8]
  406836:	test   rdx,rdx
  406839:	je     4068b0 <rb_strcasecmp@plt+0x43a0>
  40683b:	mov    QWORD PTR [rdx+0x8],rcx
  40683f:	mov    rcx,QWORD PTR [rdi+0x8]
  406843:	test   rcx,rcx
  406846:	je     4068a0 <rb_strcasecmp@plt+0x4390>
  406848:	mov    QWORD PTR [rcx+0x10],rdx
  40684c:	mov    QWORD PTR [rdi+0x8],0x0
  406854:	mov    QWORD PTR [rdi+0x10],0x0
  40685c:	mov    QWORD PTR [rsp+0x8],rax
  406861:	sub    QWORD PTR [rip+0xe7c7],0x1        # 415030 <rb_strcasecmp@plt+0x12b20>
  406869:	call   4022a0 <rb_free_rb_dlink_node@plt>
  40686e:	mov    rax,QWORD PTR [rsp+0x8]
  406873:	add    rsp,0x10
  406877:	mov    rdi,rax
  40687a:	pop    rbx
  40687b:	jmp    4021e0 <free@plt>
  406880:	add    rsp,0x10
  406884:	mov    rdx,rbx
  406887:	lea    rsi,[rip+0x4fba]        # 40b848 <rb_strcasecmp@plt+0x9338>
  40688e:	pop    rbx
  40688f:	mov    edi,0x57
  406894:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  406899:	nop    DWORD PTR [rax+0x0]
  4068a0:	mov    QWORD PTR [rip+0xe779],rdx        # 415020 <rb_strcasecmp@plt+0x12b10>
  4068a7:	jmp    40684c <rb_strcasecmp@plt+0x433c>
  4068a9:	nop    DWORD PTR [rax+0x0]
  4068b0:	mov    QWORD PTR [rip+0xe771],rcx        # 415028 <rb_strcasecmp@plt+0x12b18>
  4068b7:	jmp    406843 <rb_strcasecmp@plt+0x4333>
  4068b9:	nop    DWORD PTR [rax+0x0]
  4068c0:	mov    rax,QWORD PTR [rip+0xe759]        # 415020 <rb_strcasecmp@plt+0x12b10>
  4068c7:	test   rax,rax
  4068ca:	je     406906 <rb_strcasecmp@plt+0x43f6>
  4068cc:	push   rbp
  4068cd:	push   rbx
  4068ce:	sub    rsp,0x8
  4068d2:	mov    rbx,QWORD PTR [rax+0x10]
  4068d6:	jmp    4068e7 <rb_strcasecmp@plt+0x43d7>
  4068d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	mov    rax,rbx
  4068e3:	mov    rbx,QWORD PTR [rbx+0x10]
  4068e7:	mov    rbp,QWORD PTR [rax]
  4068ea:	mov    eax,DWORD PTR [rbp+0x324]
  4068f0:	test   eax,eax
  4068f2:	jle    406910 <rb_strcasecmp@plt+0x4400>
  4068f4:	mov    BYTE PTR [rbp+0x320],0x1
  4068fb:	test   rbx,rbx
  4068fe:	jne    4068e0 <rb_strcasecmp@plt+0x43d0>
  406900:	add    rsp,0x8
  406904:	pop    rbx
  406905:	pop    rbp
  406906:	repz ret 
  406908:	nop    DWORD PTR [rax+rax*1+0x0]
  406910:	mov    rdi,QWORD PTR [rip+0xe709]        # 415020 <rb_strcasecmp@plt+0x12b10>
  406917:	test   rdi,rdi
  40691a:	jne    406929 <rb_strcasecmp@plt+0x4419>
  40691c:	jmp    406969 <rb_strcasecmp@plt+0x4459>
  40691e:	xchg   ax,ax
  406920:	mov    rdi,QWORD PTR [rdi+0x10]
  406924:	test   rdi,rdi
  406927:	je     406969 <rb_strcasecmp@plt+0x4459>
  406929:	cmp    rbp,QWORD PTR [rdi]
  40692c:	jne    406920 <rb_strcasecmp@plt+0x4410>
  40692e:	mov    rax,QWORD PTR [rdi+0x10]
  406932:	mov    rdx,QWORD PTR [rdi+0x8]
  406936:	test   rax,rax
  406939:	je     406978 <rb_strcasecmp@plt+0x4468>
  40693b:	mov    QWORD PTR [rax+0x8],rdx
  40693f:	mov    rdx,QWORD PTR [rdi+0x8]
  406943:	test   rdx,rdx
  406946:	je     406988 <rb_strcasecmp@plt+0x4478>
  406948:	mov    QWORD PTR [rdx+0x10],rax
  40694c:	mov    QWORD PTR [rdi+0x8],0x0
  406954:	mov    QWORD PTR [rdi+0x10],0x0
  40695c:	sub    QWORD PTR [rip+0xe6cc],0x1        # 415030 <rb_strcasecmp@plt+0x12b20>
  406964:	call   4022a0 <rb_free_rb_dlink_node@plt>
  406969:	mov    rdi,rbp
  40696c:	call   4021e0 <free@plt>
  406971:	jmp    4068fb <rb_strcasecmp@plt+0x43eb>
  406973:	nop    DWORD PTR [rax+rax*1+0x0]
  406978:	test   rdx,rdx
  40697b:	mov    QWORD PTR [rip+0xe6a6],rdx        # 415028 <rb_strcasecmp@plt+0x12b18>
  406982:	jne    406948 <rb_strcasecmp@plt+0x4438>
  406984:	nop    DWORD PTR [rax+0x0]
  406988:	mov    QWORD PTR [rip+0xe691],rax        # 415020 <rb_strcasecmp@plt+0x12b10>
  40698f:	jmp    40694c <rb_strcasecmp@plt+0x443c>
  406991:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40699c:	nop    DWORD PTR [rax+0x0]
  4069a0:	jmp    4068c0 <rb_strcasecmp@plt+0x43b0>
  4069a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4069b0:	push   r12
  4069b2:	push   rbp
  4069b3:	mov    rbp,rdi
  4069b6:	push   rbx
  4069b7:	mov    rdi,QWORD PTR [rdi+0x308]
  4069be:	test   rdi,rdi
  4069c1:	je     406a10 <rb_strcasecmp@plt+0x4500>
  4069c3:	mov    rbx,QWORD PTR [rdi+0x10]
  4069c7:	mov    r12,rbx
  4069ca:	jmp    4069f0 <rb_strcasecmp@plt+0x44e0>
  4069cc:	nop    DWORD PTR [rax+0x0]
  4069d0:	mov    QWORD PTR [rax+0x10],rbx
  4069d4:	sub    QWORD PTR [rbp+0x318],0x1
  4069dc:	call   4021e0 <free@plt>
  4069e1:	test   rbx,rbx
  4069e4:	je     406a10 <rb_strcasecmp@plt+0x4500>
  4069e6:	mov    rbx,QWORD PTR [rbx+0x10]
  4069ea:	mov    rdi,r12
  4069ed:	mov    r12,rbx
  4069f0:	test   rbx,rbx
  4069f3:	mov    rax,QWORD PTR [rdi+0x8]
  4069f7:	je     406a78 <rb_strcasecmp@plt+0x4568>
  4069f9:	mov    QWORD PTR [rbx+0x8],rax
  4069fd:	mov    rax,QWORD PTR [rdi+0x8]
  406a01:	test   rax,rax
  406a04:	jne    4069d0 <rb_strcasecmp@plt+0x44c0>
  406a06:	mov    QWORD PTR [rbp+0x308],rbx
  406a0d:	jmp    4069d4 <rb_strcasecmp@plt+0x44c4>
  406a0f:	nop
  406a10:	mov    rdi,QWORD PTR [rip+0xe609]        # 415020 <rb_strcasecmp@plt+0x12b10>
  406a17:	test   rdi,rdi
  406a1a:	jne    406a29 <rb_strcasecmp@plt+0x4519>
  406a1c:	jmp    406a69 <rb_strcasecmp@plt+0x4559>
  406a1e:	xchg   ax,ax
  406a20:	mov    rdi,QWORD PTR [rdi+0x10]
  406a24:	test   rdi,rdi
  406a27:	je     406a69 <rb_strcasecmp@plt+0x4559>
  406a29:	cmp    rbp,QWORD PTR [rdi]
  406a2c:	jne    406a20 <rb_strcasecmp@plt+0x4510>
  406a2e:	mov    rax,QWORD PTR [rdi+0x10]
  406a32:	mov    rdx,QWORD PTR [rdi+0x8]
  406a36:	test   rax,rax
  406a39:	je     406a88 <rb_strcasecmp@plt+0x4578>
  406a3b:	mov    QWORD PTR [rax+0x8],rdx
  406a3f:	mov    rdx,QWORD PTR [rdi+0x8]
  406a43:	test   rdx,rdx
  406a46:	je     406a98 <rb_strcasecmp@plt+0x4588>
  406a48:	mov    QWORD PTR [rdx+0x10],rax
  406a4c:	mov    QWORD PTR [rdi+0x8],0x0
  406a54:	mov    QWORD PTR [rdi+0x10],0x0
  406a5c:	sub    QWORD PTR [rip+0xe5cc],0x1        # 415030 <rb_strcasecmp@plt+0x12b20>
  406a64:	call   4022a0 <rb_free_rb_dlink_node@plt>
  406a69:	pop    rbx
  406a6a:	mov    rdi,rbp
  406a6d:	pop    rbp
  406a6e:	pop    r12
  406a70:	jmp    4021e0 <free@plt>
  406a75:	nop    DWORD PTR [rax]
  406a78:	mov    QWORD PTR [rbp+0x310],rax
  406a7f:	jmp    406a01 <rb_strcasecmp@plt+0x44f1>
  406a81:	nop    DWORD PTR [rax+0x0]
  406a88:	test   rdx,rdx
  406a8b:	mov    QWORD PTR [rip+0xe596],rdx        # 415028 <rb_strcasecmp@plt+0x12b18>
  406a92:	jne    406a48 <rb_strcasecmp@plt+0x4538>
  406a94:	nop    DWORD PTR [rax+0x0]
  406a98:	mov    QWORD PTR [rip+0xe581],rax        # 415020 <rb_strcasecmp@plt+0x12b10>
  406a9f:	jmp    406a4c <rb_strcasecmp@plt+0x453c>
  406aa1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406aac:	nop    DWORD PTR [rax+0x0]
  406ab0:	push   r15
  406ab2:	push   r14
  406ab4:	push   r13
  406ab6:	push   r12
  406ab8:	push   rbp
  406ab9:	push   rbx
  406aba:	sub    rsp,0x18
  406abe:	mov    rax,0x410ae0
  406ac5:	mov    rbp,QWORD PTR [rcx+0x8]
  406ac9:	mov    r15,QWORD PTR [rcx]
  406acc:	mov    eax,DWORD PTR [rax+0x18]
  406acf:	mov    DWORD PTR [rsp+0x4],eax
  406ad3:	shl    rax,0x5
  406ad7:	add    rax,QWORD PTR [rbp+0x1d0]
  406ade:	mov    rbx,QWORD PTR [rax+0x10]
  406ae2:	test   rbx,rbx
  406ae5:	je     406b61 <rb_strcasecmp@plt+0x4651>
  406ae7:	test   rdi,rdi
  406aea:	mov    r13,rcx
  406aed:	mov    r12,rdi
  406af0:	je     406af7 <rb_strcasecmp@plt+0x45e7>
  406af2:	test   sil,sil
  406af5:	jne    406b70 <rb_strcasecmp@plt+0x4660>
  406af7:	mov    eax,DWORD PTR [r15+0x324]
  406afe:	sub    eax,0x1
  406b01:	cmp    BYTE PTR [r15+0x320],0x0
  406b09:	mov    DWORD PTR [r15+0x324],eax
  406b10:	je     406b1a <rb_strcasecmp@plt+0x460a>
  406b12:	test   eax,eax
  406b14:	jle    406cd0 <rb_strcasecmp@plt+0x47c0>
  406b1a:	mov    rdi,QWORD PTR [r13+0x10]
  406b1e:	call   402f10 <rb_strcasecmp@plt+0xa00>
  406b23:	mov    rax,QWORD PTR [r13+0x28]
  406b27:	mov    rdx,QWORD PTR [r13+0x20]
  406b2b:	test   rax,rax
  406b2e:	je     406cf0 <rb_strcasecmp@plt+0x47e0>
  406b34:	mov    QWORD PTR [rax+0x8],rdx
  406b38:	mov    rdx,QWORD PTR [r13+0x20]
  406b3c:	test   rdx,rdx
  406b3f:	je     406ce0 <rb_strcasecmp@plt+0x47d0>
  406b45:	mov    QWORD PTR [rdx+0x10],rax
  406b49:	sub    QWORD PTR [rbx+0x18],0x1
  406b4e:	mov    rdi,r13
  406b51:	call   4021e0 <free@plt>
  406b56:	cmp    QWORD PTR [rbx+0x18],0x0
  406b5b:	je     406c00 <rb_strcasecmp@plt+0x46f0>
  406b61:	add    rsp,0x18
  406b65:	pop    rbx
  406b66:	pop    rbp
  406b67:	pop    r12
  406b69:	pop    r13
  406b6b:	pop    r14
  406b6d:	pop    r15
  406b6f:	ret    
  406b70:	cmp    QWORD PTR [r15+0x318],0x0
  406b78:	je     406c78 <rb_strcasecmp@plt+0x4768>
  406b7e:	mov    esi,0x2e
  406b83:	call   402250 <strrchr@plt>
  406b88:	test   rax,rax
  406b8b:	je     406d00 <rb_strcasecmp@plt+0x47f0>
  406b91:	cmp    BYTE PTR [rax+0x1],0x0
  406b95:	je     406d00 <rb_strcasecmp@plt+0x47f0>
  406b9b:	mov    r14,QWORD PTR [r15+0x308]
  406ba2:	test   r14,r14
  406ba5:	je     406af7 <rb_strcasecmp@plt+0x45e7>
  406bab:	add    rax,0x1
  406baf:	mov    QWORD PTR [rsp+0x8],rax
  406bb4:	jmp    406bec <rb_strcasecmp@plt+0x46dc>
  406bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bc0:	cmp    ecx,0x2
  406bc3:	jne    406e07 <rb_strcasecmp@plt+0x48f7>
  406bc9:	mov    rdi,QWORD PTR [rsp+0x8]
  406bce:	add    rsi,0x4
  406bd2:	call   4023a0 <strcmp@plt>
  406bd7:	test   eax,eax
  406bd9:	je     406c78 <rb_strcasecmp@plt+0x4768>
  406bdf:	mov    r14,QWORD PTR [r14+0x10]
  406be3:	test   r14,r14
  406be6:	je     406af7 <rb_strcasecmp@plt+0x45e7>
  406bec:	mov    rsi,QWORD PTR [r14]
  406bef:	mov    ecx,DWORD PTR [rsi]
  406bf1:	cmp    ecx,0x1
  406bf4:	jne    406bc0 <rb_strcasecmp@plt+0x46b0>
  406bf6:	mov    rdi,r12
  406bf9:	jmp    406bce <rb_strcasecmp@plt+0x46be>
  406bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  406c00:	mov    edi,DWORD PTR [rbp+0x0]
  406c03:	lea    rsi,[rip+0x4cde]        # 40b8e8 <rb_strcasecmp@plt+0x93d8>
  406c0a:	xor    eax,eax
  406c0c:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  406c11:	mov    rdi,rbx
  406c14:	call   4021e0 <free@plt>
  406c19:	mov    rax,0x410ae0
  406c20:	mov    rdx,QWORD PTR [rbp+0x1d0]
  406c27:	mov    rdi,rbp
  406c2a:	mov    eax,DWORD PTR [rax+0x18]
  406c2d:	mov    rsi,rax
  406c30:	shl    rax,0x5
  406c34:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  406c3d:	mov    rdx,QWORD PTR [rbp+0x1d0]
  406c44:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  406c4d:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  406c52:	sub    DWORD PTR [rbp+0x1cc],0x1
  406c59:	jne    406b61 <rb_strcasecmp@plt+0x4651>
  406c5f:	add    rsp,0x18
  406c63:	mov    rdi,rbp
  406c66:	pop    rbx
  406c67:	pop    rbp
  406c68:	pop    r12
  406c6a:	pop    r13
  406c6c:	pop    r14
  406c6e:	pop    r15
  406c70:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  406c75:	nop    DWORD PTR [rax]
  406c78:	add    DWORD PTR [r15+0x328],0x1
  406c80:	mov    esi,DWORD PTR [rsp+0x4]
  406c84:	lea    rcx,[r15+0x100]
  406c8b:	xor    eax,eax
  406c8d:	mov    rdx,r15
  406c90:	mov    rdi,rbp
  406c93:	call   403bc0 <rb_strcasecmp@plt+0x16b0>
  406c98:	mov    rax,0x410ae0
  406c9f:	mov    eax,DWORD PTR [rax+0x18]
  406ca2:	shl    rax,0x5
  406ca6:	add    rax,QWORD PTR [rbp+0x1d0]
  406cad:	mov    r12,QWORD PTR [rax+0x10]
  406cb1:	test   r12,r12
  406cb4:	je     406b61 <rb_strcasecmp@plt+0x4651>
  406cba:	cmp    QWORD PTR [r12+0x18],0x0
  406cc0:	jne    406d50 <rb_strcasecmp@plt+0x4840>
  406cc6:	mov    rdi,r12
  406cc9:	jmp    406c14 <rb_strcasecmp@plt+0x4704>
  406cce:	xchg   ax,ax
  406cd0:	mov    rdi,r15
  406cd3:	call   4069b0 <rb_strcasecmp@plt+0x44a0>
  406cd8:	jmp    406b1a <rb_strcasecmp@plt+0x460a>
  406cdd:	nop    DWORD PTR [rax]
  406ce0:	mov    QWORD PTR [rbx+0x8],rax
  406ce4:	jmp    406b49 <rb_strcasecmp@plt+0x4639>
  406ce9:	nop    DWORD PTR [rax+0x0]
  406cf0:	mov    QWORD PTR [rbx+0x10],rdx
  406cf4:	jmp    406b3c <rb_strcasecmp@plt+0x462c>
  406cf9:	nop    DWORD PTR [rax+0x0]
  406d00:	mov    rax,QWORD PTR [r15+0x330]
  406d07:	lea    r14,[rax+0xe10]
  406d0e:	call   402260 <rb_current_time@plt>
  406d13:	cmp    r14,rax
  406d16:	jge    406af7 <rb_strcasecmp@plt+0x45e7>
  406d1c:	lea    rsi,[rip+0x4b85]        # 40b8a8 <rb_strcasecmp@plt+0x9398>
  406d23:	mov    rcx,r12
  406d26:	mov    rdx,r15
  406d29:	mov    edi,0x57
  406d2e:	xor    eax,eax
  406d30:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  406d35:	call   402260 <rb_current_time@plt>
  406d3a:	mov    QWORD PTR [r15+0x330],rax
  406d41:	jmp    406af7 <rb_strcasecmp@plt+0x45e7>
  406d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d50:	mov    edi,DWORD PTR [rbp+0x0]
  406d53:	lea    rsi,[rip+0x4ce7]        # 40ba41 <rb_strcasecmp@plt+0x9531>
  406d5a:	xor    eax,eax
  406d5c:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  406d61:	mov    rax,QWORD PTR [r12+0x8]
  406d66:	test   rax,rax
  406d69:	je     406cc6 <rb_strcasecmp@plt+0x47b6>
  406d6f:	mov    r14,QWORD PTR [rax+0x10]
  406d73:	jmp    406d9a <rb_strcasecmp@plt+0x488a>
  406d75:	nop    DWORD PTR [rax]
  406d78:	mov    QWORD PTR [rdx+0x10],rax
  406d7c:	sub    QWORD PTR [r12+0x18],0x1
  406d82:	mov    rdi,rbx
  406d85:	call   4021e0 <free@plt>
  406d8a:	test   r14,r14
  406d8d:	je     406cc6 <rb_strcasecmp@plt+0x47b6>
  406d93:	mov    rax,r14
  406d96:	mov    r14,QWORD PTR [r14+0x10]
  406d9a:	mov    rbx,QWORD PTR [rax]
  406d9d:	mov    rdi,QWORD PTR [rbx+0x10]
  406da1:	call   402f10 <rb_strcasecmp@plt+0xa00>
  406da6:	mov    rdi,QWORD PTR [rbx]
  406da9:	mov    eax,DWORD PTR [rdi+0x324]
  406daf:	sub    eax,0x1
  406db2:	test   eax,eax
  406db4:	mov    DWORD PTR [rdi+0x324],eax
  406dba:	jg     406dc5 <rb_strcasecmp@plt+0x48b5>
  406dbc:	cmp    BYTE PTR [rdi+0x320],0x0
  406dc3:	jne    406e00 <rb_strcasecmp@plt+0x48f0>
  406dc5:	mov    rax,QWORD PTR [rbx+0x28]
  406dc9:	mov    rdx,QWORD PTR [rbx+0x20]
  406dcd:	test   rax,rax
  406dd0:	je     406df0 <rb_strcasecmp@plt+0x48e0>
  406dd2:	mov    QWORD PTR [rax+0x8],rdx
  406dd6:	mov    rdx,QWORD PTR [rbx+0x20]
  406dda:	test   rdx,rdx
  406ddd:	jne    406d78 <rb_strcasecmp@plt+0x4868>
  406ddf:	mov    QWORD PTR [r12+0x8],rax
  406de4:	jmp    406d7c <rb_strcasecmp@plt+0x486c>
  406de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406df0:	mov    QWORD PTR [r12+0x10],rdx
  406df5:	jmp    406dda <rb_strcasecmp@plt+0x48ca>
  406df7:	nop    WORD PTR [rax+rax*1+0x0]
  406e00:	call   4069b0 <rb_strcasecmp@plt+0x44a0>
  406e05:	jmp    406dc5 <rb_strcasecmp@plt+0x48b5>
  406e07:	lea    rsi,[rip+0x4a6a]        # 40b878 <rb_strcasecmp@plt+0x9368>
  406e0e:	mov    edi,0x43
  406e13:	mov    rdx,r15
  406e16:	xor    eax,eax
  406e18:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  406e1d:	mov    edi,0x3
  406e22:	call   4020b0 <exit@plt>
  406e27:	nop    WORD PTR [rax+rax*1+0x0]
  406e30:	push   r15
  406e32:	push   r14
  406e34:	push   r13
  406e36:	push   r12
  406e38:	push   rbp
  406e39:	push   rbx
  406e3a:	sub    rsp,0x48
  406e3e:	mov    rbp,QWORD PTR [rdx+0x10]
  406e42:	mov    rcx,QWORD PTR fs:0x28
  406e4b:	mov    QWORD PTR [rsp+0x38],rcx
  406e50:	xor    ecx,ecx
  406e52:	mov    QWORD PTR [rsp+0x28],rdx
  406e57:	mov    rdi,rbp
  406e5a:	call   4021f0 <strlen@plt>
  406e5f:	lea    rbx,[rax+0x1]
  406e63:	mov    rdi,rbx
  406e66:	call   402150 <malloc@plt>
  406e6b:	test   rax,rax
  406e6e:	mov    QWORD PTR [rsp+0x18],rax
  406e73:	je     4070f1 <rb_strcasecmp@plt+0x4be1>
  406e79:	mov    rdx,rbx
  406e7c:	mov    rbx,QWORD PTR [rsp+0x18]
  406e81:	mov    rsi,rbp
  406e84:	mov    rdi,rbx
  406e87:	call   402500 <memcpy@plt>
  406e8c:	cmp    BYTE PTR [rbx],0x2a
  406e8f:	je     406fd6 <rb_strcasecmp@plt+0x4ac6>
  406e95:	mov    rdi,QWORD PTR [rsp+0x18]
  406e9a:	lea    rdx,[rsp+0x30]
  406e9f:	lea    rsi,[rip+0x4bb5]        # 40ba5b <rb_strcasecmp@plt+0x954b>
  406ea6:	mov    QWORD PTR [rsp+0x10],rdx
  406eab:	call   402100 <rb_strtok_r@plt>
  406eb0:	test   rax,rax
  406eb3:	mov    r13,rax
  406eb6:	je     406fd6 <rb_strcasecmp@plt+0x4ac6>
  406ebc:	mov    QWORD PTR [rsp+0x8],0x0
  406ec5:	mov    QWORD PTR [rsp+0x20],0x0
  406ece:	mov    QWORD PTR [rsp],0x0
  406ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ee0:	mov    esi,0x58
  406ee5:	mov    edi,0x1
  406eea:	call   402400 <calloc@plt>
  406eef:	test   rax,rax
  406ef2:	mov    r12,rax
  406ef5:	je     4070f1 <rb_strcasecmp@plt+0x4be1>
  406efb:	movzx  r15d,BYTE PTR [r13+0x0]
  406f00:	test   r15b,r15b
  406f03:	je     407113 <rb_strcasecmp@plt+0x4c03>
  406f09:	mov    r14,r13
  406f0c:	mov    ebp,0x2
  406f11:	xor    ebx,ebx
  406f13:	jmp    406f3c <rb_strcasecmp@plt+0x4a2c>
  406f15:	nop    DWORD PTR [rax]
  406f18:	call   402220 <__ctype_b_loc@plt>
  406f1d:	mov    rdi,QWORD PTR [rax]
  406f20:	movsx  rsi,r15b
  406f24:	test   BYTE PTR [rdi+rsi*2+0x1],0x8
  406f29:	je     40711d <rb_strcasecmp@plt+0x4c0d>
  406f2f:	add    r14,0x1
  406f33:	movzx  r15d,BYTE PTR [r14]
  406f37:	test   r15b,r15b
  406f3a:	je     406f60 <rb_strcasecmp@plt+0x4a50>
  406f3c:	cmp    r15b,0x2e
  406f40:	jne    406f18 <rb_strcasecmp@plt+0x4a08>
  406f42:	add    ebx,0x1
  406f45:	cmp    ebx,0x3
  406f48:	jg     4071ba <rb_strcasecmp@plt+0x4caa>
  406f4e:	add    r14,0x1
  406f52:	movzx  r15d,BYTE PTR [r14]
  406f56:	mov    ebp,0x1
  406f5b:	test   r15b,r15b
  406f5e:	jne    406f3c <rb_strcasecmp@plt+0x4a2c>
  406f60:	sub    ebx,0x1
  406f63:	cmp    ebx,0x1
  406f66:	jbe    4071cb <rb_strcasecmp@plt+0x4cbb>
  406f6c:	lea    rdi,[r12+0x4]
  406f71:	mov    DWORD PTR [r12],ebp
  406f75:	mov    edx,0x35
  406f7a:	mov    rsi,r13
  406f7d:	lea    rbx,[r12+0x40]
  406f82:	call   4021b0 <rb_strlcpy@plt>
  406f87:	mov    rax,QWORD PTR [rsp]
  406f8b:	mov    QWORD PTR [r12+0x40],r12
  406f90:	mov    QWORD PTR [r12+0x48],0x0
  406f99:	test   rax,rax
  406f9c:	mov    QWORD PTR [r12+0x50],rax
  406fa1:	je     4070db <rb_strcasecmp@plt+0x4bcb>
  406fa7:	mov    QWORD PTR [rax+0x8],rbx
  406fab:	mov    rdx,QWORD PTR [rsp+0x10]
  406fb0:	lea    rsi,[rip+0x4aa4]        # 40ba5b <rb_strcasecmp@plt+0x954b>
  406fb7:	xor    edi,edi
  406fb9:	add    QWORD PTR [rsp+0x8],0x1
  406fbf:	call   402100 <rb_strtok_r@plt>
  406fc4:	test   rax,rax
  406fc7:	mov    r13,rax
  406fca:	mov    QWORD PTR [rsp],rbx
  406fce:	jne    406ee0 <rb_strcasecmp@plt+0x49d0>
  406fd4:	jmp    406fea <rb_strcasecmp@plt+0x4ada>
  406fd6:	mov    QWORD PTR [rsp+0x8],0x0
  406fdf:	mov    QWORD PTR [rsp+0x20],0x0
  406fe8:	xor    ebx,ebx
  406fea:	mov    rdi,QWORD PTR [rsp+0x18]
  406fef:	call   4021e0 <free@plt>
  406ff4:	mov    r14,QWORD PTR [rsp+0x28]
  406ff9:	mov    edx,0xa
  406ffe:	xor    esi,esi
  407000:	mov    rdi,QWORD PTR [r14+0x8]
  407004:	call   4022d0 <strtol@plt>
  407009:	mov    r12,QWORD PTR [r14+0x18]
  40700d:	mov    r14,QWORD PTR [r14]
  407010:	mov    ebp,eax
  407012:	and    ebp,0x3
  407015:	test   r14,r14
  407018:	sete   dl
  40701b:	test   r12,r12
  40701e:	sete   al
  407021:	or     dl,al
  407023:	jne    4070f6 <rb_strcasecmp@plt+0x4be6>
  407029:	test   bpl,bpl
  40702c:	je     4070f6 <rb_strcasecmp@plt+0x4be6>
  407032:	mov    rdi,r14
  407035:	call   406790 <rb_strcasecmp@plt+0x4280>
  40703a:	test   rax,rax
  40703d:	mov    r13,rax
  407040:	je     407162 <rb_strcasecmp@plt+0x4c52>
  407046:	mov    BYTE PTR [rax+0x320],0x0
  40704d:	mov    edx,0x100
  407052:	mov    rsi,r14
  407055:	mov    rdi,r13
  407058:	call   4021b0 <rb_strlcpy@plt>
  40705d:	lea    rdi,[r13+0x100]
  407064:	mov    edx,0x200
  407069:	mov    rsi,r12
  40706c:	call   4021b0 <rb_strlcpy@plt>
  407071:	test   rbx,rbx
  407074:	mov    BYTE PTR [r13+0x300],bpl
  40707b:	je     4070ad <rb_strcasecmp@plt+0x4b9d>
  40707d:	mov    rax,QWORD PTR [r13+0x308]
  407084:	test   rax,rax
  407087:	je     40713e <rb_strcasecmp@plt+0x4c2e>
  40708d:	mov    rcx,QWORD PTR [rsp+0x20]
  407092:	mov    QWORD PTR [rcx+0x10],rax
  407096:	mov    QWORD PTR [rax+0x8],rcx
  40709a:	mov    rax,QWORD PTR [rsp+0x8]
  40709f:	add    QWORD PTR [r13+0x318],rax
  4070a6:	mov    QWORD PTR [r13+0x308],rbx
  4070ad:	mov    rax,QWORD PTR [rsp+0x38]
  4070b2:	xor    rax,QWORD PTR fs:0x28
  4070bb:	mov    QWORD PTR [r13+0x330],0x0
  4070c6:	jne    4071c6 <rb_strcasecmp@plt+0x4cb6>
  4070cc:	add    rsp,0x48
  4070d0:	pop    rbx
  4070d1:	pop    rbp
  4070d2:	pop    r12
  4070d4:	pop    r13
  4070d6:	pop    r14
  4070d8:	pop    r15
  4070da:	ret    
  4070db:	mov    rax,QWORD PTR [rsp+0x20]
  4070e0:	test   rax,rax
  4070e3:	cmove  rax,rbx
  4070e7:	mov    QWORD PTR [rsp+0x20],rax
  4070ec:	jmp    406fab <rb_strcasecmp@plt+0x4a9b>
  4070f1:	call   402330 <rb_outofmemory@plt>
  4070f6:	lea    rsi,[rip+0x48e3]        # 40b9e0 <rb_strcasecmp@plt+0x94d0>
  4070fd:	mov    edi,0x43
  407102:	xor    eax,eax
  407104:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  407109:	mov    edi,0x3
  40710e:	call   4020b0 <exit@plt>
  407113:	mov    ebp,0x2
  407118:	jmp    406f6c <rb_strcasecmp@plt+0x4a5c>
  40711d:	lea    rsi,[rip+0x482c]        # 40b950 <rb_strcasecmp@plt+0x9440>
  407124:	mov    edi,0x43
  407129:	movsx  edx,r15b
  40712d:	xor    eax,eax
  40712f:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  407134:	mov    edi,0x3
  407139:	call   4020b0 <exit@plt>
  40713e:	mov    rax,QWORD PTR [rsp+0x20]
  407143:	mov    QWORD PTR [r13+0x308],rbx
  40714a:	mov    QWORD PTR [r13+0x310],rax
  407151:	mov    rax,QWORD PTR [rsp+0x8]
  407156:	mov    QWORD PTR [r13+0x318],rax
  40715d:	jmp    4070ad <rb_strcasecmp@plt+0x4b9d>
  407162:	mov    esi,0x338
  407167:	mov    edi,0x1
  40716c:	call   402400 <calloc@plt>
  407171:	test   rax,rax
  407174:	mov    r13,rax
  407177:	je     4070f1 <rb_strcasecmp@plt+0x4be1>
  40717d:	call   402490 <rb_make_rb_dlink_node@plt>
  407182:	test   rax,rax
  407185:	je     4071ea <rb_strcasecmp@plt+0x4cda>
  407187:	mov    rdx,QWORD PTR [rip+0xde92]        # 415020 <rb_strcasecmp@plt+0x12b10>
  40718e:	mov    QWORD PTR [rax],r13
  407191:	mov    QWORD PTR [rax+0x8],0x0
  407199:	test   rdx,rdx
  40719c:	mov    QWORD PTR [rax+0x10],rdx
  4071a0:	je     4071d7 <rb_strcasecmp@plt+0x4cc7>
  4071a2:	mov    QWORD PTR [rdx+0x8],rax
  4071a6:	mov    QWORD PTR [rip+0xde73],rax        # 415020 <rb_strcasecmp@plt+0x12b10>
  4071ad:	add    QWORD PTR [rip+0xde7b],0x1        # 415030 <rb_strcasecmp@plt+0x12b20>
  4071b5:	jmp    40704d <rb_strcasecmp@plt+0x4b3d>
  4071ba:	lea    rsi,[rip+0x474f]        # 40b910 <rb_strcasecmp@plt+0x9400>
  4071c1:	jmp    4070fd <rb_strcasecmp@plt+0x4bed>
  4071c6:	call   402380 <__stack_chk_fail@plt>
  4071cb:	lea    rsi,[rip+0x47ce]        # 40b9a0 <rb_strcasecmp@plt+0x9490>
  4071d2:	jmp    4070fd <rb_strcasecmp@plt+0x4bed>
  4071d7:	cmp    QWORD PTR [rip+0xde49],0x0        # 415028 <rb_strcasecmp@plt+0x12b18>
  4071df:	jne    4071a6 <rb_strcasecmp@plt+0x4c96>
  4071e1:	mov    QWORD PTR [rip+0xde40],rax        # 415028 <rb_strcasecmp@plt+0x12b18>
  4071e8:	jmp    4071a6 <rb_strcasecmp@plt+0x4c96>
  4071ea:	lea    rcx,[rip+0x48ef]        # 40bae0 <rb_strcasecmp@plt+0x95d0>
  4071f1:	lea    rsi,[rip+0x4350]        # 40b548 <rb_strcasecmp@plt+0x9038>
  4071f8:	lea    rdi,[rip+0x4372]        # 40b571 <rb_strcasecmp@plt+0x9061>
  4071ff:	mov    edx,0x90
  407204:	call   4020c0 <__assert_fail@plt>
  407209:	nop    DWORD PTR [rax+0x0]
  407210:	push   r15
  407212:	push   r14
  407214:	push   r13
  407216:	push   r12
  407218:	push   rbp
  407219:	push   rbx
  40721a:	sub    rsp,0x28
  40721e:	mov    r14,0x4151f0
  407225:	mov    rsi,rsp
  407228:	mov    r15,rsp
  40722b:	mov    rax,QWORD PTR fs:0x28
  407234:	mov    QWORD PTR [rsp+0x18],rax
  407239:	xor    eax,eax
  40723b:	mov    rdi,QWORD PTR [r14]
  40723e:	call   402230 <rb_dictionary_foreach_start@plt>
  407243:	jmp    4072a9 <rb_strcasecmp@plt+0x4d99>
  407245:	nop    DWORD PTR [rax]
  407248:	mov    rdi,rbx
  40724b:	call   4021e0 <free@plt>
  407250:	mov    rax,0x410ae0
  407257:	mov    rdx,QWORD PTR [r12+0x1d0]
  40725f:	mov    rdi,r12
  407262:	mov    eax,DWORD PTR [rax+0x18]
  407265:	mov    rsi,rax
  407268:	shl    rax,0x5
  40726c:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407275:	mov    rdx,QWORD PTR [r12+0x1d0]
  40727d:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407286:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  40728b:	sub    DWORD PTR [r12+0x1cc],0x1
  407294:	jne    40729e <rb_strcasecmp@plt+0x4d8e>
  407296:	mov    rdi,r12
  407299:	call   4039e0 <rb_strcasecmp@plt+0x14d0>
  40729e:	mov    rdi,QWORD PTR [r14]
  4072a1:	mov    rsi,r15
  4072a4:	call   4021c0 <rb_dictionary_foreach_next@plt>
  4072a9:	mov    rdi,QWORD PTR [r14]
  4072ac:	mov    rsi,r15
  4072af:	call   402110 <rb_dictionary_foreach_cur@plt>
  4072b4:	test   rax,rax
  4072b7:	mov    r12,rax
  4072ba:	je     4073a0 <rb_strcasecmp@plt+0x4e90>
  4072c0:	mov    rax,0x410ae0
  4072c7:	mov    eax,DWORD PTR [rax+0x18]
  4072ca:	shl    rax,0x5
  4072ce:	add    rax,QWORD PTR [r12+0x1d0]
  4072d6:	mov    rbx,QWORD PTR [rax+0x10]
  4072da:	test   rbx,rbx
  4072dd:	je     40729e <rb_strcasecmp@plt+0x4d8e>
  4072df:	cmp    QWORD PTR [rbx+0x18],0x0
  4072e4:	je     407248 <rb_strcasecmp@plt+0x4d38>
  4072ea:	mov    edi,DWORD PTR [r12]
  4072ee:	lea    rsi,[rip+0x474c]        # 40ba41 <rb_strcasecmp@plt+0x9531>
  4072f5:	xor    eax,eax
  4072f7:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  4072fc:	mov    rax,QWORD PTR [rbx+0x8]
  407300:	test   rax,rax
  407303:	je     407248 <rb_strcasecmp@plt+0x4d38>
  407309:	mov    rbp,QWORD PTR [rax+0x10]
  40730d:	jmp    407331 <rb_strcasecmp@plt+0x4e21>
  40730f:	nop
  407310:	mov    QWORD PTR [rcx+0x10],rdx
  407314:	sub    QWORD PTR [rbx+0x18],0x1
  407319:	mov    rdi,r13
  40731c:	call   4021e0 <free@plt>
  407321:	test   rbp,rbp
  407324:	je     407248 <rb_strcasecmp@plt+0x4d38>
  40732a:	mov    rax,rbp
  40732d:	mov    rbp,QWORD PTR [rbp+0x10]
  407331:	mov    r13,QWORD PTR [rax]
  407334:	mov    rdi,QWORD PTR [r13+0x10]
  407338:	call   402f10 <rb_strcasecmp@plt+0xa00>
  40733d:	mov    rdi,QWORD PTR [r13+0x0]
  407341:	mov    eax,DWORD PTR [rdi+0x324]
  407347:	cmp    BYTE PTR [rdi+0x320],0x0
  40734e:	lea    edx,[rax-0x1]
  407351:	mov    DWORD PTR [rdi+0x324],edx
  407357:	je     40735d <rb_strcasecmp@plt+0x4e4d>
  407359:	test   edx,edx
  40735b:	jle    407390 <rb_strcasecmp@plt+0x4e80>
  40735d:	mov    rdx,QWORD PTR [r13+0x28]
  407361:	mov    rcx,QWORD PTR [r13+0x20]
  407365:	test   rdx,rdx
  407368:	je     407380 <rb_strcasecmp@plt+0x4e70>
  40736a:	mov    QWORD PTR [rdx+0x8],rcx
  40736e:	mov    rcx,QWORD PTR [r13+0x20]
  407372:	test   rcx,rcx
  407375:	jne    407310 <rb_strcasecmp@plt+0x4e00>
  407377:	mov    QWORD PTR [rbx+0x8],rdx
  40737b:	jmp    407314 <rb_strcasecmp@plt+0x4e04>
  40737d:	nop    DWORD PTR [rax]
  407380:	mov    QWORD PTR [rbx+0x10],rcx
  407384:	jmp    407372 <rb_strcasecmp@plt+0x4e62>
  407386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407390:	call   4069b0 <rb_strcasecmp@plt+0x44a0>
  407395:	jmp    40735d <rb_strcasecmp@plt+0x4e4d>
  407397:	nop    WORD PTR [rax+rax*1+0x0]
  4073a0:	call   4068c0 <rb_strcasecmp@plt+0x43b0>
  4073a5:	mov    rax,QWORD PTR [rsp+0x18]
  4073aa:	xor    rax,QWORD PTR fs:0x28
  4073b3:	jne    4073c4 <rb_strcasecmp@plt+0x4eb4>
  4073b5:	add    rsp,0x28
  4073b9:	pop    rbx
  4073ba:	pop    rbp
  4073bb:	pop    r12
  4073bd:	pop    r13
  4073bf:	pop    r14
  4073c1:	pop    r15
  4073c3:	ret    
  4073c4:	call   402380 <__stack_chk_fail@plt>
  4073c9:	nop    DWORD PTR [rax+0x0]
  4073d0:	push   r14
  4073d2:	mov    r14,0x410ae0
  4073d9:	push   r13
  4073db:	push   r12
  4073dd:	push   rbp
  4073de:	push   rbx
  4073df:	mov    eax,DWORD PTR [r14+0x18]
  4073e3:	shl    rax,0x5
  4073e7:	add    rax,QWORD PTR [rdi+0x1d0]
  4073ee:	mov    rbp,QWORD PTR [rax+0x10]
  4073f2:	test   rbp,rbp
  4073f5:	je     407449 <rb_strcasecmp@plt+0x4f39>
  4073f7:	cmp    QWORD PTR [rbp+0x18],0x0
  4073fc:	mov    r12,rdi
  4073ff:	jne    407470 <rb_strcasecmp@plt+0x4f60>
  407401:	mov    rdi,rbp
  407404:	call   4021e0 <free@plt>
  407409:	mov    eax,DWORD PTR [r14+0x18]
  40740d:	mov    rdx,QWORD PTR [r12+0x1d0]
  407415:	mov    rdi,r12
  407418:	mov    rsi,rax
  40741b:	shl    rax,0x5
  40741f:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407428:	mov    rdx,QWORD PTR [r12+0x1d0]
  407430:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407439:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  40743e:	sub    DWORD PTR [r12+0x1cc],0x1
  407447:	je     407458 <rb_strcasecmp@plt+0x4f48>
  407449:	pop    rbx
  40744a:	pop    rbp
  40744b:	pop    r12
  40744d:	pop    r13
  40744f:	pop    r14
  407451:	ret    
  407452:	nop    WORD PTR [rax+rax*1+0x0]
  407458:	pop    rbx
  407459:	mov    rdi,r12
  40745c:	pop    rbp
  40745d:	pop    r12
  40745f:	pop    r13
  407461:	pop    r14
  407463:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  407468:	nop    DWORD PTR [rax+rax*1+0x0]
  407470:	mov    edi,DWORD PTR [rdi]
  407472:	lea    rsi,[rip+0x45e4]        # 40ba5d <rb_strcasecmp@plt+0x954d>
  407479:	xor    eax,eax
  40747b:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  407480:	mov    rax,QWORD PTR [rbp+0x8]
  407484:	test   rax,rax
  407487:	je     407401 <rb_strcasecmp@plt+0x4ef1>
  40748d:	mov    r13,QWORD PTR [rax+0x10]
  407491:	jmp    4074b9 <rb_strcasecmp@plt+0x4fa9>
  407493:	nop    DWORD PTR [rax+rax*1+0x0]
  407498:	mov    QWORD PTR [rdx+0x10],rax
  40749c:	sub    QWORD PTR [rbp+0x18],0x1
  4074a1:	mov    rdi,rbx
  4074a4:	call   4021e0 <free@plt>
  4074a9:	test   r13,r13
  4074ac:	je     407401 <rb_strcasecmp@plt+0x4ef1>
  4074b2:	mov    rax,r13
  4074b5:	mov    r13,QWORD PTR [r13+0x10]
  4074b9:	mov    rbx,QWORD PTR [rax]
  4074bc:	mov    rdi,QWORD PTR [rbx+0x10]
  4074c0:	call   402f10 <rb_strcasecmp@plt+0xa00>
  4074c5:	mov    rdi,QWORD PTR [rbx]
  4074c8:	mov    eax,DWORD PTR [rdi+0x324]
  4074ce:	sub    eax,0x1
  4074d1:	cmp    BYTE PTR [rdi+0x320],0x0
  4074d8:	mov    DWORD PTR [rdi+0x324],eax
  4074de:	je     4074e4 <rb_strcasecmp@plt+0x4fd4>
  4074e0:	test   eax,eax
  4074e2:	jle    407510 <rb_strcasecmp@plt+0x5000>
  4074e4:	mov    rax,QWORD PTR [rbx+0x28]
  4074e8:	mov    rdx,QWORD PTR [rbx+0x20]
  4074ec:	test   rax,rax
  4074ef:	je     407508 <rb_strcasecmp@plt+0x4ff8>
  4074f1:	mov    QWORD PTR [rax+0x8],rdx
  4074f5:	mov    rdx,QWORD PTR [rbx+0x20]
  4074f9:	test   rdx,rdx
  4074fc:	jne    407498 <rb_strcasecmp@plt+0x4f88>
  4074fe:	mov    QWORD PTR [rbp+0x8],rax
  407502:	jmp    40749c <rb_strcasecmp@plt+0x4f8c>
  407504:	nop    DWORD PTR [rax+0x0]
  407508:	mov    QWORD PTR [rbp+0x10],rdx
  40750c:	jmp    4074f9 <rb_strcasecmp@plt+0x4fe9>
  40750e:	xchg   ax,ax
  407510:	call   4069b0 <rb_strcasecmp@plt+0x44a0>
  407515:	jmp    4074e4 <rb_strcasecmp@plt+0x4fd4>
  407517:	nop    WORD PTR [rax+rax*1+0x0]
  407520:	push   r14
  407522:	mov    r14,0x410ae0
  407529:	push   r13
  40752b:	push   r12
  40752d:	push   rbp
  40752e:	push   rbx
  40752f:	mov    eax,DWORD PTR [r14+0x18]
  407533:	shl    rax,0x5
  407537:	add    rax,QWORD PTR [rdi+0x1d0]
  40753e:	mov    rbp,QWORD PTR [rax+0x10]
  407542:	test   rbp,rbp
  407545:	je     407599 <rb_strcasecmp@plt+0x5089>
  407547:	cmp    QWORD PTR [rbp+0x18],0x0
  40754c:	mov    r12,rdi
  40754f:	jne    4075c0 <rb_strcasecmp@plt+0x50b0>
  407551:	mov    rdi,rbp
  407554:	call   4021e0 <free@plt>
  407559:	mov    eax,DWORD PTR [r14+0x18]
  40755d:	mov    rdx,QWORD PTR [r12+0x1d0]
  407565:	mov    rdi,r12
  407568:	mov    rsi,rax
  40756b:	shl    rax,0x5
  40756f:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407578:	mov    rdx,QWORD PTR [r12+0x1d0]
  407580:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407589:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  40758e:	sub    DWORD PTR [r12+0x1cc],0x1
  407597:	je     4075a8 <rb_strcasecmp@plt+0x5098>
  407599:	pop    rbx
  40759a:	pop    rbp
  40759b:	pop    r12
  40759d:	pop    r13
  40759f:	pop    r14
  4075a1:	ret    
  4075a2:	nop    WORD PTR [rax+rax*1+0x0]
  4075a8:	pop    rbx
  4075a9:	mov    rdi,r12
  4075ac:	pop    rbp
  4075ad:	pop    r12
  4075af:	pop    r13
  4075b1:	pop    r14
  4075b3:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  4075b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075c0:	mov    edi,DWORD PTR [rdi]
  4075c2:	lea    rsi,[rip+0x4478]        # 40ba41 <rb_strcasecmp@plt+0x9531>
  4075c9:	xor    eax,eax
  4075cb:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  4075d0:	mov    rax,QWORD PTR [rbp+0x8]
  4075d4:	test   rax,rax
  4075d7:	je     407551 <rb_strcasecmp@plt+0x5041>
  4075dd:	mov    r13,QWORD PTR [rax+0x10]
  4075e1:	jmp    407609 <rb_strcasecmp@plt+0x50f9>
  4075e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4075e8:	mov    QWORD PTR [rdx+0x10],rax
  4075ec:	sub    QWORD PTR [rbp+0x18],0x1
  4075f1:	mov    rdi,rbx
  4075f4:	call   4021e0 <free@plt>
  4075f9:	test   r13,r13
  4075fc:	je     407551 <rb_strcasecmp@plt+0x5041>
  407602:	mov    rax,r13
  407605:	mov    r13,QWORD PTR [r13+0x10]
  407609:	mov    rbx,QWORD PTR [rax]
  40760c:	mov    rdi,QWORD PTR [rbx+0x10]
  407610:	call   402f10 <rb_strcasecmp@plt+0xa00>
  407615:	mov    rdi,QWORD PTR [rbx]
  407618:	mov    eax,DWORD PTR [rdi+0x324]
  40761e:	sub    eax,0x1
  407621:	cmp    BYTE PTR [rdi+0x320],0x0
  407628:	mov    DWORD PTR [rdi+0x324],eax
  40762e:	je     407634 <rb_strcasecmp@plt+0x5124>
  407630:	test   eax,eax
  407632:	jle    407660 <rb_strcasecmp@plt+0x5150>
  407634:	mov    rax,QWORD PTR [rbx+0x28]
  407638:	mov    rdx,QWORD PTR [rbx+0x20]
  40763c:	test   rax,rax
  40763f:	je     407658 <rb_strcasecmp@plt+0x5148>
  407641:	mov    QWORD PTR [rax+0x8],rdx
  407645:	mov    rdx,QWORD PTR [rbx+0x20]
  407649:	test   rdx,rdx
  40764c:	jne    4075e8 <rb_strcasecmp@plt+0x50d8>
  40764e:	mov    QWORD PTR [rbp+0x8],rax
  407652:	jmp    4075ec <rb_strcasecmp@plt+0x50dc>
  407654:	nop    DWORD PTR [rax+0x0]
  407658:	mov    QWORD PTR [rbp+0x10],rdx
  40765c:	jmp    407649 <rb_strcasecmp@plt+0x5139>
  40765e:	xchg   ax,ax
  407660:	call   4069b0 <rb_strcasecmp@plt+0x44a0>
  407665:	jmp    407634 <rb_strcasecmp@plt+0x5124>
  407667:	nop    WORD PTR [rax+rax*1+0x0]
  407670:	push   r15
  407672:	push   r14
  407674:	mov    r15,rdi
  407677:	push   r13
  407679:	push   r12
  40767b:	push   rbp
  40767c:	push   rbx
  40767d:	sub    rsp,0x138
  407684:	mov    rax,QWORD PTR fs:0x28
  40768d:	mov    QWORD PTR [rsp+0x128],rax
  407695:	xor    eax,eax
  407697:	mov    rax,0x410ae0
  40769e:	mov    eax,DWORD PTR [rax+0x18]
  4076a1:	shl    rax,0x5
  4076a5:	add    rax,QWORD PTR [rdi+0x1d0]
  4076ac:	mov    rbp,QWORD PTR [rax+0x10]
  4076b0:	movzx  eax,WORD PTR [rdi+0xf8]
  4076b7:	cmp    ax,0x2
  4076bb:	je     407760 <rb_strcasecmp@plt+0x5250>
  4076c1:	cmp    ax,0xa
  4076c5:	mov    r13d,0x2
  4076cb:	je     407766 <rb_strcasecmp@plt+0x5256>
  4076d1:	test   rbp,rbp
  4076d4:	je     407730 <rb_strcasecmp@plt+0x5220>
  4076d6:	cmp    QWORD PTR [rbp+0x18],0x0
  4076db:	jne    407930 <rb_strcasecmp@plt+0x5420>
  4076e1:	mov    rdi,rbp
  4076e4:	call   4021e0 <free@plt>
  4076e9:	mov    rax,0x410ae0
  4076f0:	mov    rdx,QWORD PTR [r15+0x1d0]
  4076f7:	mov    rdi,r15
  4076fa:	mov    eax,DWORD PTR [rax+0x18]
  4076fd:	mov    rsi,rax
  407700:	shl    rax,0x5
  407704:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  40770d:	mov    rdx,QWORD PTR [r15+0x1d0]
  407714:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  40771d:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  407722:	sub    DWORD PTR [r15+0x1cc],0x1
  40772a:	je     407900 <rb_strcasecmp@plt+0x53f0>
  407730:	mov    rax,QWORD PTR [rsp+0x128]
  407738:	xor    rax,QWORD PTR fs:0x28
  407741:	jne    407a25 <rb_strcasecmp@plt+0x5515>
  407747:	add    rsp,0x138
  40774e:	pop    rbx
  40774f:	pop    rbp
  407750:	pop    r12
  407752:	pop    r13
  407754:	pop    r14
  407756:	pop    r15
  407758:	ret    
  407759:	nop    DWORD PTR [rax+0x0]
  407760:	mov    r13d,0x1
  407766:	mov    edi,DWORD PTR [r15]
  407769:	lea    rsi,[rip+0x42a0]        # 40ba10 <rb_strcasecmp@plt+0x9500>
  407770:	xor    eax,eax
  407772:	mov    BYTE PTR [rbp+0x0],0x1
  407776:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  40777b:	mov    rbx,QWORD PTR [rip+0xd89e]        # 415020 <rb_strcasecmp@plt+0x12b10>
  407782:	test   rbx,rbx
  407785:	je     4078d0 <rb_strcasecmp@plt+0x53c0>
  40778b:	lea    rax,[r15+0xf8]
  407792:	mov    QWORD PTR [rsp+0x18],rax
  407797:	lea    rax,[rsp+0x20]
  40779c:	mov    QWORD PTR [rsp+0x10],rax
  4077a1:	jmp    4077b5 <rb_strcasecmp@plt+0x52a5>
  4077a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4077a8:	mov    rbx,QWORD PTR [rbx+0x10]
  4077ac:	test   rbx,rbx
  4077af:	je     4078d0 <rb_strcasecmp@plt+0x53c0>
  4077b5:	mov    r14,QWORD PTR [rbx]
  4077b8:	cmp    BYTE PTR [r14+0x320],0x0
  4077c0:	jne    4077a8 <rb_strcasecmp@plt+0x5298>
  4077c2:	movzx  edx,BYTE PTR [r14+0x300]
  4077ca:	test   r13d,edx
  4077cd:	je     4077a8 <rb_strcasecmp@plt+0x5298>
  4077cf:	mov    esi,0x30
  4077d4:	mov    edi,0x1
  4077d9:	mov    BYTE PTR [rsp+0x8],dl
  4077dd:	call   402400 <calloc@plt>
  4077e2:	test   rax,rax
  4077e5:	mov    r12,rax
  4077e8:	movzx  edx,BYTE PTR [rsp+0x8]
  4077ed:	je     407a20 <rb_strcasecmp@plt+0x5510>
  4077f3:	mov    rax,0x410ae0
  4077fa:	mov    eax,DWORD PTR [rax+0x18]
  4077fd:	shl    rax,0x5
  407801:	add    rax,QWORD PTR [r15+0x1d0]
  407808:	mov    r11,QWORD PTR [rax+0x10]
  40780c:	movzx  eax,WORD PTR [r15+0xf8]
  407814:	mov    QWORD PTR [r12],r14
  407818:	mov    QWORD PTR [r12+0x8],r15
  40781d:	cmp    eax,0x2
  407820:	je     407910 <rb_strcasecmp@plt+0x5400>
  407826:	cmp    eax,0xa
  407829:	jne    407834 <rb_strcasecmp@plt+0x5324>
  40782b:	and    edx,0x2
  40782e:	je     407919 <rb_strcasecmp@plt+0x5409>
  407834:	mov    rdx,QWORD PTR [rsp+0x18]
  407839:	mov    rdi,QWORD PTR [rsp+0x10]
  40783e:	mov    rcx,r14
  407841:	mov    esi,0x100
  407846:	mov    QWORD PTR [rsp+0x8],r11
  40784b:	call   4049d0 <rb_strcasecmp@plt+0x24c0>
  407850:	mov    rdi,QWORD PTR [rsp+0x10]
  407855:	lea    rdx,[rip+0xfffffffffffff254]        # 406ab0 <rb_strcasecmp@plt+0x45a0>
  40785c:	mov    rcx,r12
  40785f:	mov    esi,0x2
  407864:	call   402d60 <rb_strcasecmp@plt+0x850>
  407869:	mov    r11,QWORD PTR [rsp+0x8]
  40786e:	mov    QWORD PTR [r12+0x10],rax
  407873:	lea    rdx,[r12+0x18]
  407878:	lea    rax,[r11+0x8]
  40787c:	test   rax,rax
  40787f:	je     407a2a <rb_strcasecmp@plt+0x551a>
  407885:	mov    rax,QWORD PTR [r11+0x8]
  407889:	mov    QWORD PTR [r12+0x18],r12
  40788e:	mov    QWORD PTR [r12+0x20],0x0
  407897:	test   rax,rax
  40789a:	mov    QWORD PTR [r12+0x28],rax
  40789f:	je     407a00 <rb_strcasecmp@plt+0x54f0>
  4078a5:	mov    QWORD PTR [rax+0x8],rdx
  4078a9:	mov    rbx,QWORD PTR [rbx+0x10]
  4078ad:	add    QWORD PTR [r11+0x18],0x1
  4078b2:	mov    QWORD PTR [r11+0x8],rdx
  4078b6:	add    DWORD PTR [r14+0x324],0x1
  4078be:	test   rbx,rbx
  4078c1:	jne    4077b5 <rb_strcasecmp@plt+0x52a5>
  4078c7:	nop    WORD PTR [rax+rax*1+0x0]
  4078d0:	cmp    QWORD PTR [rbp+0x18],0x0
  4078d5:	jne    4079c8 <rb_strcasecmp@plt+0x54b8>
  4078db:	mov    rax,0x410ae0
  4078e2:	mov    eax,DWORD PTR [rax+0x18]
  4078e5:	shl    rax,0x5
  4078e9:	add    rax,QWORD PTR [r15+0x1d0]
  4078f0:	mov    rbp,QWORD PTR [rax+0x10]
  4078f4:	jmp    4076d1 <rb_strcasecmp@plt+0x51c1>
  4078f9:	nop    DWORD PTR [rax+0x0]
  407900:	mov    rdi,r15
  407903:	call   4039e0 <rb_strcasecmp@plt+0x14d0>
  407908:	jmp    407730 <rb_strcasecmp@plt+0x5220>
  40790d:	nop    DWORD PTR [rax]
  407910:	and    edx,0x1
  407913:	jne    407834 <rb_strcasecmp@plt+0x5324>
  407919:	mov    rdi,r12
  40791c:	call   4021e0 <free@plt>
  407921:	jmp    4077a8 <rb_strcasecmp@plt+0x5298>
  407926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407930:	mov    edi,DWORD PTR [r15]
  407933:	lea    rsi,[rip+0x413f]        # 40ba79 <rb_strcasecmp@plt+0x9569>
  40793a:	xor    eax,eax
  40793c:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  407941:	mov    rax,QWORD PTR [rbp+0x8]
  407945:	test   rax,rax
  407948:	je     4076e1 <rb_strcasecmp@plt+0x51d1>
  40794e:	mov    r13,QWORD PTR [rax+0x10]
  407952:	jmp    407979 <rb_strcasecmp@plt+0x5469>
  407954:	nop    DWORD PTR [rax+0x0]
  407958:	mov    QWORD PTR [rdx+0x10],rax
  40795c:	sub    QWORD PTR [rbp+0x18],0x1
  407961:	mov    rdi,rbx
  407964:	call   4021e0 <free@plt>
  407969:	test   r13,r13
  40796c:	je     4076e1 <rb_strcasecmp@plt+0x51d1>
  407972:	mov    rax,r13
  407975:	mov    r13,QWORD PTR [r13+0x10]
  407979:	mov    rbx,QWORD PTR [rax]
  40797c:	mov    rdi,QWORD PTR [rbx+0x10]
  407980:	call   402f10 <rb_strcasecmp@plt+0xa00>
  407985:	mov    rdi,QWORD PTR [rbx]
  407988:	mov    eax,DWORD PTR [rdi+0x324]
  40798e:	sub    eax,0x1
  407991:	cmp    BYTE PTR [rdi+0x320],0x0
  407998:	mov    DWORD PTR [rdi+0x324],eax
  40799e:	je     4079a4 <rb_strcasecmp@plt+0x5494>
  4079a0:	test   eax,eax
  4079a2:	jle    407a18 <rb_strcasecmp@plt+0x5508>
  4079a4:	mov    rax,QWORD PTR [rbx+0x28]
  4079a8:	mov    rdx,QWORD PTR [rbx+0x20]
  4079ac:	test   rax,rax
  4079af:	je     4079f8 <rb_strcasecmp@plt+0x54e8>
  4079b1:	mov    QWORD PTR [rax+0x8],rdx
  4079b5:	mov    rdx,QWORD PTR [rbx+0x20]
  4079b9:	test   rdx,rdx
  4079bc:	jne    407958 <rb_strcasecmp@plt+0x5448>
  4079be:	mov    QWORD PTR [rbp+0x8],rax
  4079c2:	jmp    40795c <rb_strcasecmp@plt+0x544c>
  4079c4:	nop    DWORD PTR [rax+0x0]
  4079c8:	mov    rax,0x410ae0
  4079cf:	movsxd rbp,DWORD PTR [rip+0x90ea]        # 410ac0 <rb_strcasecmp@plt+0xe5b0>
  4079d6:	mov    ebx,DWORD PTR [rax+0x18]
  4079d9:	shl    rbx,0x5
  4079dd:	add    rbx,QWORD PTR [r15+0x1d0]
  4079e4:	call   402260 <rb_current_time@plt>
  4079e9:	add    rbp,rax
  4079ec:	mov    QWORD PTR [rbx+0x8],rbp
  4079f0:	jmp    407730 <rb_strcasecmp@plt+0x5220>
  4079f5:	nop    DWORD PTR [rax]
  4079f8:	mov    QWORD PTR [rbp+0x10],rdx
  4079fc:	jmp    4079b9 <rb_strcasecmp@plt+0x54a9>
  4079fe:	xchg   ax,ax
  407a00:	cmp    QWORD PTR [r11+0x10],0x0
  407a05:	jne    4078a9 <rb_strcasecmp@plt+0x5399>
  407a0b:	mov    QWORD PTR [r11+0x10],rdx
  407a0f:	jmp    4078a9 <rb_strcasecmp@plt+0x5399>
  407a14:	nop    DWORD PTR [rax+0x0]
  407a18:	call   4069b0 <rb_strcasecmp@plt+0x44a0>
  407a1d:	jmp    4079a4 <rb_strcasecmp@plt+0x5494>
  407a1f:	nop
  407a20:	call   402330 <rb_outofmemory@plt>
  407a25:	call   402380 <__stack_chk_fail@plt>
  407a2a:	call   402520 <rb_strcasecmp@plt+0x10>
  407a2f:	nop
  407a30:	push   r15
  407a32:	push   r14
  407a34:	push   r13
  407a36:	push   r12
  407a38:	push   rbp
  407a39:	push   rbx
  407a3a:	sub    rsp,0x8
  407a3e:	mov    rax,0x410ae0
  407a45:	mov    r15,QWORD PTR [rdi+0x1d0]
  407a4c:	mov    eax,DWORD PTR [rax+0x18]
  407a4f:	shl    rax,0x5
  407a53:	mov    rax,QWORD PTR [r15+rax*1+0x10]
  407a58:	test   rax,rax
  407a5b:	je     407a62 <rb_strcasecmp@plt+0x5552>
  407a5d:	cmp    BYTE PTR [rax],0x0
  407a60:	je     407a78 <rb_strcasecmp@plt+0x5568>
  407a62:	add    rsp,0x8
  407a66:	pop    rbx
  407a67:	pop    rbp
  407a68:	pop    r12
  407a6a:	pop    r13
  407a6c:	pop    r14
  407a6e:	pop    r15
  407a70:	ret    
  407a71:	nop    DWORD PTR [rax+0x0]
  407a78:	mov    rax,0x415200
  407a7f:	mov    r14,rdi
  407a82:	mov    r12,QWORD PTR [rax]
  407a85:	test   r12,r12
  407a88:	je     407b09 <rb_strcasecmp@plt+0x55f9>
  407a8a:	mov    rbx,r12
  407a8d:	lea    r13,[rip+0x4000]        # 40ba94 <rb_strcasecmp@plt+0x9584>
  407a94:	jmp    407aa9 <rb_strcasecmp@plt+0x5599>
  407a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407aa0:	mov    rbx,QWORD PTR [rbx+0x10]
  407aa4:	test   rbx,rbx
  407aa7:	je     407acb <rb_strcasecmp@plt+0x55bb>
  407aa9:	mov    rbp,QWORD PTR [rbx]
  407aac:	mov    rsi,r13
  407aaf:	mov    rdi,QWORD PTR [rbp+0x20]
  407ab3:	call   4020f0 <strcasecmp@plt>
  407ab8:	test   eax,eax
  407aba:	jne    407aa0 <rb_strcasecmp@plt+0x5590>
  407abc:	mov    eax,DWORD PTR [rbp+0x18]
  407abf:	shl    rax,0x5
  407ac3:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  407ac9:	jne    407a62 <rb_strcasecmp@plt+0x5552>
  407acb:	lea    rbp,[rip+0x3fc7]        # 40ba99 <rb_strcasecmp@plt+0x9589>
  407ad2:	jmp    407ae2 <rb_strcasecmp@plt+0x55d2>
  407ad4:	nop    DWORD PTR [rax+0x0]
  407ad8:	mov    r12,QWORD PTR [r12+0x10]
  407add:	test   r12,r12
  407ae0:	je     407b09 <rb_strcasecmp@plt+0x55f9>
  407ae2:	mov    rbx,QWORD PTR [r12]
  407ae6:	mov    rsi,rbp
  407ae9:	mov    rdi,QWORD PTR [rbx+0x20]
  407aed:	call   4020f0 <strcasecmp@plt>
  407af2:	test   eax,eax
  407af4:	jne    407ad8 <rb_strcasecmp@plt+0x55c8>
  407af6:	mov    eax,DWORD PTR [rbx+0x18]
  407af9:	shl    rax,0x5
  407afd:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  407b03:	jne    407a62 <rb_strcasecmp@plt+0x5552>
  407b09:	add    rsp,0x8
  407b0d:	mov    rdi,r14
  407b10:	pop    rbx
  407b11:	pop    rbp
  407b12:	pop    r12
  407b14:	pop    r13
  407b16:	pop    r14
  407b18:	pop    r15
  407b1a:	jmp    407670 <rb_strcasecmp@plt+0x5160>
  407b1f:	nop
  407b20:	cmp    QWORD PTR [rip+0xd508],0x0        # 415030 <rb_strcasecmp@plt+0x12b20>
  407b28:	push   r14
  407b2a:	mov    r14,rdi
  407b2d:	push   r13
  407b2f:	push   r12
  407b31:	push   rbp
  407b32:	push   rbx
  407b33:	je     407bd0 <rb_strcasecmp@plt+0x56c0>
  407b39:	add    DWORD PTR [rdi+0x1cc],0x1
  407b40:	mov    esi,0x20
  407b45:	mov    edi,0x1
  407b4a:	call   402400 <calloc@plt>
  407b4f:	test   rax,rax
  407b52:	je     407c40 <rb_strcasecmp@plt+0x5730>
  407b58:	mov    rdx,0x410ae0
  407b5f:	mov    edx,DWORD PTR [rdx+0x18]
  407b62:	shl    rdx,0x5
  407b66:	add    rdx,QWORD PTR [r14+0x1d0]
  407b6d:	mov    QWORD PTR [rdx+0x10],rax
  407b71:	mov    rax,0x415200
  407b78:	mov    r12,QWORD PTR [rax]
  407b7b:	test   r12,r12
  407b7e:	je     407c32 <rb_strcasecmp@plt+0x5722>
  407b84:	mov    rbx,r12
  407b87:	lea    r13,[rip+0x3f06]        # 40ba94 <rb_strcasecmp@plt+0x9584>
  407b8e:	jmp    407b99 <rb_strcasecmp@plt+0x5689>
  407b90:	mov    rbx,QWORD PTR [rbx+0x10]
  407b94:	test   rbx,rbx
  407b97:	je     407bf0 <rb_strcasecmp@plt+0x56e0>
  407b99:	mov    rbp,QWORD PTR [rbx]
  407b9c:	mov    rsi,r13
  407b9f:	mov    rdi,QWORD PTR [rbp+0x20]
  407ba3:	call   4020f0 <strcasecmp@plt>
  407ba8:	test   eax,eax
  407baa:	jne    407b90 <rb_strcasecmp@plt+0x5680>
  407bac:	mov    eax,DWORD PTR [rbp+0x18]
  407baf:	shl    rax,0x5
  407bb3:	add    rax,QWORD PTR [r14+0x1d0]
  407bba:	cmp    DWORD PTR [rax+0x18],0x2
  407bbe:	je     407bf0 <rb_strcasecmp@plt+0x56e0>
  407bc0:	pop    rbx
  407bc1:	mov    eax,0x1
  407bc6:	pop    rbp
  407bc7:	pop    r12
  407bc9:	pop    r13
  407bcb:	pop    r14
  407bcd:	ret    
  407bce:	xchg   ax,ax
  407bd0:	mov    rax,0x410ae0
  407bd7:	mov    esi,DWORD PTR [rax+0x18]
  407bda:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  407bdf:	pop    rbx
  407be0:	mov    eax,0x1
  407be5:	pop    rbp
  407be6:	pop    r12
  407be8:	pop    r13
  407bea:	pop    r14
  407bec:	ret    
  407bed:	nop    DWORD PTR [rax]
  407bf0:	lea    rbp,[rip+0x3ea2]        # 40ba99 <rb_strcasecmp@plt+0x9589>
  407bf7:	jmp    407c0a <rb_strcasecmp@plt+0x56fa>
  407bf9:	nop    DWORD PTR [rax+0x0]
  407c00:	mov    r12,QWORD PTR [r12+0x10]
  407c05:	test   r12,r12
  407c08:	je     407c32 <rb_strcasecmp@plt+0x5722>
  407c0a:	mov    rbx,QWORD PTR [r12]
  407c0e:	mov    rsi,rbp
  407c11:	mov    rdi,QWORD PTR [rbx+0x20]
  407c15:	call   4020f0 <strcasecmp@plt>
  407c1a:	test   eax,eax
  407c1c:	jne    407c00 <rb_strcasecmp@plt+0x56f0>
  407c1e:	mov    eax,DWORD PTR [rbx+0x18]
  407c21:	shl    rax,0x5
  407c25:	add    rax,QWORD PTR [r14+0x1d0]
  407c2c:	cmp    DWORD PTR [rax+0x18],0x2
  407c30:	jne    407bc0 <rb_strcasecmp@plt+0x56b0>
  407c32:	mov    rdi,r14
  407c35:	call   407670 <rb_strcasecmp@plt+0x5160>
  407c3a:	jmp    407bc0 <rb_strcasecmp@plt+0x56b0>
  407c3f:	nop
  407c40:	call   402330 <rb_outofmemory@plt>
  407c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c4f:	nop
  407c50:	mov    rax,QWORD PTR [rdx]
  407c53:	cmp    BYTE PTR [rax],0x31
  407c56:	sete   BYTE PTR [rip+0x8f7b]        # 410bd8 <rb_strcasecmp@plt+0xe6c8>
  407c5d:	ret    
  407c5e:	xchg   ax,ax
  407c60:	mov    rax,rdx
  407c63:	sub    rsp,0x8
  407c67:	xor    esi,esi
  407c69:	mov    rdi,QWORD PTR [rax]
  407c6c:	mov    edx,0xa
  407c71:	call   4022d0 <strtol@plt>
  407c76:	test   eax,eax
  407c78:	js     407c85 <rb_strcasecmp@plt+0x5775>
  407c7a:	mov    DWORD PTR [rip+0x8f5c],eax        # 410bdc <rb_strcasecmp@plt+0xe6cc>
  407c80:	add    rsp,0x8
  407c84:	ret    
  407c85:	lea    rsi,[rip+0x3e7c]        # 40bb08 <rb_strcasecmp@plt+0x95f8>
  407c8c:	mov    edx,eax
  407c8e:	mov    edi,0x43
  407c93:	xor    eax,eax
  407c95:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  407c9a:	mov    edi,0x3
  407c9f:	call   4020b0 <exit@plt>
  407ca4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407caf:	nop
  407cb0:	push   r13
  407cb2:	push   r12
  407cb4:	mov    r12d,esi
  407cb7:	push   rbp
  407cb8:	push   rbx
  407cb9:	lea    rsi,[rip+0x3633]        # 40b2f3 <rb_strcasecmp@plt+0x8de3>
  407cc0:	mov    rbx,rdi
  407cc3:	mov    edx,0xb
  407cc8:	add    rdi,0x1b8
  407ccf:	sub    rsp,0x8
  407cd3:	mov    rbp,0x410be0
  407cda:	mov    eax,DWORD PTR [rbp+0x18]
  407cdd:	shl    rax,0x5
  407ce1:	add    rax,QWORD PTR [rdi+0x18]
  407ce5:	mov    r13,QWORD PTR [rax+0x10]
  407ce9:	call   4021b0 <rb_strlcpy@plt>
  407cee:	mov    rdi,QWORD PTR [r13+0x0]
  407cf2:	test   rdi,rdi
  407cf5:	je     407cfc <rb_strcasecmp@plt+0x57ec>
  407cf7:	call   4022c0 <rb_close@plt>
  407cfc:	mov    rdi,r13
  407cff:	call   4021e0 <free@plt>
  407d04:	mov    eax,DWORD PTR [rbp+0x18]
  407d07:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407d0e:	mov    edi,DWORD PTR [rbx]
  407d10:	shl    rax,0x5
  407d14:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407d1d:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407d24:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407d2d:	lea    rax,[rip+0x706c]        # 40eda0 <rb_strcasecmp@plt+0xc890>
  407d34:	mov    rsi,QWORD PTR [rax+r12*8]
  407d38:	xor    eax,eax
  407d3a:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  407d3f:	mov    esi,DWORD PTR [rbp+0x18]
  407d42:	mov    rdi,rbx
  407d45:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  407d4a:	sub    DWORD PTR [rbx+0x1cc],0x1
  407d51:	je     407d60 <rb_strcasecmp@plt+0x5850>
  407d53:	add    rsp,0x8
  407d57:	pop    rbx
  407d58:	pop    rbp
  407d59:	pop    r12
  407d5b:	pop    r13
  407d5d:	ret    
  407d5e:	xchg   ax,ax
  407d60:	add    rsp,0x8
  407d64:	mov    rdi,rbx
  407d67:	pop    rbx
  407d68:	pop    rbp
  407d69:	pop    r12
  407d6b:	pop    r13
  407d6d:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  407d72:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407d7d:	nop    DWORD PTR [rax]
  407d80:	mov    rax,0x410be0
  407d87:	mov    eax,DWORD PTR [rax+0x18]
  407d8a:	shl    rax,0x5
  407d8e:	add    rax,QWORD PTR [rdi+0x1d0]
  407d95:	cmp    QWORD PTR [rax+0x10],0x0
  407d9a:	je     407db0 <rb_strcasecmp@plt+0x58a0>
  407d9c:	mov    esi,0x2
  407da1:	jmp    407cb0 <rb_strcasecmp@plt+0x57a0>
  407da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407db0:	repz ret 
  407db2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407dbd:	nop    DWORD PTR [rax]
  407dc0:	push   r14
  407dc2:	push   r13
  407dc4:	mov    ecx,0x10
  407dc9:	push   r12
  407dcb:	push   rbp
  407dcc:	mov    r12,rdi
  407dcf:	push   rbx
  407dd0:	mov    edx,0x80
  407dd5:	mov    rbx,rsi
  407dd8:	sub    rsp,0x90
  407ddf:	mov    rax,QWORD PTR fs:0x28
  407de8:	mov    QWORD PTR [rsp+0x88],rax
  407df0:	xor    eax,eax
  407df2:	mov    rdi,rsp
  407df5:	mov    rsi,rsp
  407df8:	rep stos QWORD PTR es:[rdi],rax
  407dfb:	mov    BYTE PTR [rdi],0x0
  407dfe:	mov    rdi,r12
  407e01:	call   402210 <rb_read@plt>
  407e06:	test   rax,rax
  407e09:	js     408000 <rb_strcasecmp@plt+0x5af0>
  407e0f:	je     408010 <rb_strcasecmp@plt+0x5b00>
  407e15:	mov    esi,0x3a
  407e1a:	mov    rdi,rsp
  407e1d:	call   402300 <strchr@plt>
  407e22:	test   rax,rax
  407e25:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407e2b:	lea    r13,[rax+0x1]
  407e2f:	mov    BYTE PTR [rax],0x0
  407e32:	mov    esi,0x3a
  407e37:	mov    rdi,r13
  407e3a:	call   402300 <strchr@plt>
  407e3f:	test   rax,rax
  407e42:	mov    r14,rax
  407e45:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407e4b:	mov    BYTE PTR [rax],0x0
  407e4e:	mov    esi,0x2c
  407e53:	mov    rdi,rsp
  407e56:	call   402300 <strchr@plt>
  407e5b:	test   rax,rax
  407e5e:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407e64:	xor    esi,esi
  407e66:	mov    BYTE PTR [rax],0x0
  407e69:	mov    edx,0xa
  407e6e:	mov    rdi,rsp
  407e71:	lea    r12,[rax+0x1]
  407e75:	call   4022d0 <strtol@plt>
  407e7a:	test   eax,eax
  407e7c:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407e82:	xor    esi,esi
  407e84:	mov    edx,0xa
  407e89:	mov    rdi,r12
  407e8c:	call   4022d0 <strtol@plt>
  407e91:	test   eax,eax
  407e93:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407e99:	lea    rsi,[rip+0x3d11]        # 40bbb1 <rb_strcasecmp@plt+0x96a1>
  407ea0:	mov    rdi,r13
  407ea3:	call   402290 <strstr@plt>
  407ea8:	test   rax,rax
  407eab:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407eb1:	lea    rdi,[r14+0x1]
  407eb5:	mov    esi,0x3a
  407eba:	call   402300 <strchr@plt>
  407ebf:	test   rax,rax
  407ec2:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407ec8:	mov    rdx,rax
  407ecb:	mov    BYTE PTR [rax],0x0
  407ece:	add    rdx,0x1
  407ed2:	je     408020 <rb_strcasecmp@plt+0x5b10>
  407ed8:	movzx  eax,BYTE PTR [rax+0x1]
  407edc:	lea    rdi,[rbx+0x1b8]
  407ee3:	mov    ecx,eax
  407ee5:	and    ecx,0xffffffdf
  407ee8:	cmp    cl,0x5e
  407eeb:	jne    407f01 <rb_strcasecmp@plt+0x59f1>
  407eed:	nop    DWORD PTR [rax]
  407ef0:	add    rdx,0x1
  407ef4:	movzx  eax,BYTE PTR [rdx]
  407ef7:	mov    ecx,eax
  407ef9:	and    ecx,0xffffffdf
  407efc:	cmp    cl,0x5e
  407eff:	je     407ef0 <rb_strcasecmp@plt+0x59e0>
  407f01:	test   al,0xbf
  407f03:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f05:	cmp    al,0xa
  407f07:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f09:	cmp    al,0xd
  407f0b:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f0d:	mov    esi,0xa
  407f12:	movabs r8,0x800000004000001
  407f1c:	jmp    407f40 <rb_strcasecmp@plt+0x5a30>
  407f1e:	xchg   ax,ax
  407f20:	mov    BYTE PTR [rdi],al
  407f22:	sub    esi,0x1
  407f25:	add    rdi,0x1
  407f29:	add    rdx,0x1
  407f2d:	movzx  eax,BYTE PTR [rdx]
  407f30:	test   al,0xbf
  407f32:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f34:	test   esi,esi
  407f36:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f38:	cmp    al,0xd
  407f3a:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f3c:	cmp    al,0xa
  407f3e:	je     407f50 <rb_strcasecmp@plt+0x5a40>
  407f40:	lea    ecx,[rax-0x20]
  407f43:	cmp    cl,0x3b
  407f46:	ja     407f20 <rb_strcasecmp@plt+0x5a10>
  407f48:	bt     r8,rcx
  407f4c:	jae    407f20 <rb_strcasecmp@plt+0x5a10>
  407f4e:	jmp    407f29 <rb_strcasecmp@plt+0x5a19>
  407f50:	mov    rbp,0x410be0
  407f57:	mov    BYTE PTR [rdi],0x0
  407f5a:	mov    eax,DWORD PTR [rbp+0x18]
  407f5d:	shl    rax,0x5
  407f61:	add    rax,QWORD PTR [rbx+0x1d0]
  407f68:	mov    r12,QWORD PTR [rax+0x10]
  407f6c:	mov    rdi,QWORD PTR [r12]
  407f70:	test   rdi,rdi
  407f73:	je     407f7a <rb_strcasecmp@plt+0x5a6a>
  407f75:	call   4022c0 <rb_close@plt>
  407f7a:	mov    rdi,r12
  407f7d:	call   4021e0 <free@plt>
  407f82:	mov    eax,DWORD PTR [rbp+0x18]
  407f85:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407f8c:	lea    rsi,[rip+0x3c25]        # 40bbb8 <rb_strcasecmp@plt+0x96a8>
  407f93:	mov    edi,DWORD PTR [rbx]
  407f95:	shl    rax,0x5
  407f99:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  407fa2:	mov    rdx,QWORD PTR [rbx+0x1d0]
  407fa9:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  407fb2:	xor    eax,eax
  407fb4:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  407fb9:	mov    esi,DWORD PTR [rbp+0x18]
  407fbc:	mov    rdi,rbx
  407fbf:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  407fc4:	sub    DWORD PTR [rbx+0x1cc],0x1
  407fcb:	jne    407fd5 <rb_strcasecmp@plt+0x5ac5>
  407fcd:	mov    rdi,rbx
  407fd0:	call   4039e0 <rb_strcasecmp@plt+0x14d0>
  407fd5:	mov    rax,QWORD PTR [rsp+0x88]
  407fdd:	xor    rax,QWORD PTR fs:0x28
  407fe6:	jne    408040 <rb_strcasecmp@plt+0x5b30>
  407fe8:	add    rsp,0x90
  407fef:	pop    rbx
  407ff0:	pop    rbp
  407ff1:	pop    r12
  407ff3:	pop    r13
  407ff5:	pop    r14
  407ff7:	ret    
  407ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  408000:	call   402340 <__errno_location@plt>
  408005:	mov    edi,DWORD PTR [rax]
  408007:	call   402050 <rb_ignore_errno@plt>
  40800c:	test   eax,eax
  40800e:	jne    408027 <rb_strcasecmp@plt+0x5b17>
  408010:	mov    esi,0x2
  408015:	mov    rdi,rbx
  408018:	call   407cb0 <rb_strcasecmp@plt+0x57a0>
  40801d:	jmp    407fd5 <rb_strcasecmp@plt+0x5ac5>
  40801f:	nop
  408020:	mov    esi,0x3
  408025:	jmp    408015 <rb_strcasecmp@plt+0x5b05>
  408027:	lea    rdx,[rip+0xfffffffffffffd92]        # 407dc0 <rb_strcasecmp@plt+0x58b0>
  40802e:	mov    rcx,rbx
  408031:	mov    esi,0x1
  408036:	mov    rdi,r12
  408039:	call   402090 <rb_setselect@plt>
  40803e:	jmp    407fd5 <rb_strcasecmp@plt+0x5ac5>
  408040:	call   402380 <__stack_chk_fail@plt>
  408045:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408050:	push   rbp
  408051:	mov    rbp,rsp
  408054:	push   r14
  408056:	push   r13
  408058:	push   r12
  40805a:	push   rbx
  40805b:	mov    r14,rdx
  40805e:	sub    rsp,0x30
  408062:	mov    rax,QWORD PTR fs:0x28
  40806b:	mov    QWORD PTR [rbp-0x28],rax
  40806f:	xor    eax,eax
  408071:	test   esi,esi
  408073:	jne    40811b <rb_strcasecmp@plt+0x5c0b>
  408079:	mov    rax,0x410be0
  408080:	movzx  r9d,WORD PTR [rdx+0xf6]
  408088:	lea    r12,[rbp-0x50]
  40808c:	sub    rsp,0x8
  408090:	lea    r8,[rip+0x3b38]        # 40bbcf <rb_strcasecmp@plt+0x96bf>
  408097:	mov    ecx,0x20
  40809c:	mov    esi,0x20
  4080a1:	mov    rdi,r12
  4080a4:	mov    rbx,r12
  4080a7:	mov    eax,DWORD PTR [rax+0x18]
  4080aa:	shl    rax,0x5
  4080ae:	add    rax,QWORD PTR [rdx+0x1d0]
  4080b5:	mov    r13,QWORD PTR [rax+0x10]
  4080b9:	movzx  eax,WORD PTR [rdx+0x3e]
  4080bd:	mov    edx,0x1
  4080c2:	push   rax
  4080c3:	xor    eax,eax
  4080c5:	call   402480 <__snprintf_chk@plt>
  4080ca:	mov    edx,DWORD PTR [rbx]
  4080cc:	add    rbx,0x4
  4080d0:	lea    eax,[rdx-0x1010101]
  4080d6:	andn   eax,edx,eax
  4080db:	and    eax,0x80808080
  4080e0:	je     4080ca <rb_strcasecmp@plt+0x5bba>
  4080e2:	mov    edx,eax
  4080e4:	mov    rsi,r12
  4080e7:	shr    edx,0x10
  4080ea:	test   eax,0x8080
  4080ef:	cmove  eax,edx
  4080f2:	lea    rdx,[rbx+0x2]
  4080f6:	mov    edi,eax
  4080f8:	cmove  rbx,rdx
  4080fc:	add    dil,al
  4080ff:	mov    rdi,QWORD PTR [r13+0x0]
  408103:	sbb    rbx,0x3
  408107:	sub    rbx,r12
  40810a:	mov    edx,ebx
  40810c:	movsxd rbx,ebx
  40810f:	call   402170 <rb_write@plt>
  408114:	cmp    rax,rbx
  408117:	pop    rdx
  408118:	pop    rcx
  408119:	je     408148 <rb_strcasecmp@plt+0x5c38>
  40811b:	mov    esi,0x2
  408120:	mov    rdi,r14
  408123:	call   407cb0 <rb_strcasecmp@plt+0x57a0>
  408128:	mov    rax,QWORD PTR [rbp-0x28]
  40812c:	xor    rax,QWORD PTR fs:0x28
  408135:	jne    408156 <rb_strcasecmp@plt+0x5c46>
  408137:	lea    rsp,[rbp-0x20]
  40813b:	pop    rbx
  40813c:	pop    r12
  40813e:	pop    r13
  408140:	pop    r14
  408142:	pop    rbp
  408143:	ret    
  408144:	nop    DWORD PTR [rax+0x0]
  408148:	mov    rdi,QWORD PTR [r13+0x0]
  40814c:	mov    rsi,r14
  40814f:	call   407dc0 <rb_strcasecmp@plt+0x58b0>
  408154:	jmp    408128 <rb_strcasecmp@plt+0x5c18>
  408156:	call   402380 <__stack_chk_fail@plt>
  40815b:	nop    DWORD PTR [rax+rax*1+0x0]
  408160:	push   r14
  408162:	push   r13
  408164:	mov    esi,0x8
  408169:	push   r12
  40816b:	push   rbp
  40816c:	push   rbx
  40816d:	mov    rbx,rdi
  408170:	mov    edi,0x1
  408175:	sub    rsp,0x110
  40817c:	mov    rax,QWORD PTR fs:0x28
  408185:	mov    QWORD PTR [rsp+0x108],rax
  40818d:	xor    eax,eax
  40818f:	call   402400 <calloc@plt>
  408194:	test   rax,rax
  408197:	je     408450 <rb_strcasecmp@plt+0x5f40>
  40819d:	cmp    BYTE PTR [rip+0x8a34],0x0        # 410bd8 <rb_strcasecmp@plt+0xe6c8>
  4081a4:	mov    rbp,rax
  4081a7:	jne    408200 <rb_strcasecmp@plt+0x5cf0>
  4081a9:	mov    rdi,rax
  4081ac:	call   4021e0 <free@plt>
  4081b1:	mov    edi,DWORD PTR [rbx]
  4081b3:	lea    rsi,[rip+0x3976]        # 40bb30 <rb_strcasecmp@plt+0x9620>
  4081ba:	xor    eax,eax
  4081bc:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  4081c1:	mov    rax,0x410be0
  4081c8:	mov    rdi,rbx
  4081cb:	mov    esi,DWORD PTR [rax+0x18]
  4081ce:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  4081d3:	mov    rdx,QWORD PTR [rsp+0x108]
  4081db:	xor    rdx,QWORD PTR fs:0x28
  4081e4:	mov    eax,0x1
  4081e9:	jne    40848c <rb_strcasecmp@plt+0x5f7c>
  4081ef:	add    rsp,0x110
  4081f6:	pop    rbx
  4081f7:	pop    rbp
  4081f8:	pop    r12
  4081fa:	pop    r13
  4081fc:	pop    r14
  4081fe:	ret    
  4081ff:	nop
  408200:	add    DWORD PTR [rbx+0x1cc],0x1
  408207:	mov    edi,DWORD PTR [rbx]
  408209:	lea    rsi,[rip+0x39c9]        # 40bbd9 <rb_strcasecmp@plt+0x96c9>
  408210:	xor    eax,eax
  408212:	movzx  r13d,WORD PTR [rbx+0xf8]
  40821a:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  40821f:	mov    rax,0x410be0
  408226:	mov    rdx,QWORD PTR [rbx+0x1d0]
  40822d:	movsxd r14,DWORD PTR [rip+0x89a8]        # 410bdc <rb_strcasecmp@plt+0xe6cc>
  408234:	mov    eax,DWORD PTR [rax+0x18]
  408237:	shl    rax,0x5
  40823b:	mov    QWORD PTR [rdx+rax*1+0x10],rbp
  408240:	add    rax,QWORD PTR [rbx+0x1d0]
  408247:	mov    r12,rax
  40824a:	call   402260 <rb_current_time@plt>
  40824f:	mov    edx,DWORD PTR [rbx+0x4]
  408252:	add    r14,rax
  408255:	lea    rcx,[rip+0x383d]        # 40ba99 <rb_strcasecmp@plt+0x9589>
  40825c:	mov    QWORD PTR [r12+0x8],r14
  408261:	movzx  edi,r13w
  408265:	mov    esi,0x1
  40826a:	call   4020e0 <rb_socket@plt>
  40826f:	test   rax,rax
  408272:	mov    QWORD PTR [rbp+0x0],rax
  408276:	je     408458 <rb_strcasecmp@plt+0x5f48>
  40827c:	mov    rcx,QWORD PTR [rbx+0x48]
  408280:	mov    rdx,QWORD PTR [rbx+0x40]
  408284:	lea    rsi,[rsp+0x80]
  40828c:	mov    r8,rbx
  40828f:	mov    rdi,rax
  408292:	mov    QWORD PTR [rsp+0x8],rcx
  408297:	mov    rcx,QWORD PTR [rbx+0x50]
  40829b:	mov    QWORD PTR [rsp],rdx
  40829f:	xor    edx,edx
  4082a1:	mov    QWORD PTR [rsp+0x10],rcx
  4082a6:	mov    rcx,QWORD PTR [rbx+0x58]
  4082aa:	mov    QWORD PTR [rsp+0x18],rcx
  4082af:	mov    rcx,QWORD PTR [rbx+0x60]
  4082b3:	mov    QWORD PTR [rsp+0x20],rcx
  4082b8:	mov    rcx,QWORD PTR [rbx+0x68]
  4082bc:	mov    QWORD PTR [rsp+0x28],rcx
  4082c1:	mov    rcx,QWORD PTR [rbx+0x70]
  4082c5:	mov    QWORD PTR [rsp+0x30],rcx
  4082ca:	mov    rcx,QWORD PTR [rbx+0x78]
  4082ce:	mov    QWORD PTR [rsp+0x38],rcx
  4082d3:	mov    rcx,QWORD PTR [rbx+0x80]
  4082da:	mov    QWORD PTR [rsp+0x40],rcx
  4082df:	mov    rcx,QWORD PTR [rbx+0x88]
  4082e6:	mov    QWORD PTR [rsp+0x48],rcx
  4082eb:	mov    rcx,QWORD PTR [rbx+0x90]
  4082f2:	mov    QWORD PTR [rsp+0x50],rcx
  4082f7:	mov    rcx,QWORD PTR [rbx+0x98]
  4082fe:	mov    QWORD PTR [rsp+0x58],rcx
  408303:	mov    rcx,QWORD PTR [rbx+0xa0]
  40830a:	mov    QWORD PTR [rsp+0x60],rcx
  40830f:	mov    rcx,QWORD PTR [rbx+0xa8]
  408316:	mov    QWORD PTR [rsp+0x68],rcx
  40831b:	mov    rcx,QWORD PTR [rbx+0xb0]
  408322:	mov    QWORD PTR [rsp+0x70],rcx
  408327:	mov    rcx,QWORD PTR [rbx+0xb8]
  40832e:	mov    QWORD PTR [rsp+0x78],rcx
  408333:	mov    rcx,QWORD PTR [rbx+0xf8]
  40833a:	mov    QWORD PTR [rsp+0x80],rcx
  408342:	mov    rcx,QWORD PTR [rbx+0x100]
  408349:	mov    QWORD PTR [rsp+0x88],rcx
  408351:	mov    rcx,QWORD PTR [rbx+0x108]
  408358:	mov    QWORD PTR [rsp+0x90],rcx
  408360:	mov    rcx,QWORD PTR [rbx+0x110]
  408367:	mov    QWORD PTR [rsp+0x98],rcx
  40836f:	mov    rcx,QWORD PTR [rbx+0x118]
  408376:	mov    QWORD PTR [rsp+0xa0],rcx
  40837e:	mov    rcx,QWORD PTR [rbx+0x120]
  408385:	mov    QWORD PTR [rsp+0xa8],rcx
  40838d:	mov    rcx,QWORD PTR [rbx+0x128]
  408394:	mov    QWORD PTR [rsp+0xb0],rcx
  40839c:	mov    rcx,QWORD PTR [rbx+0x130]
  4083a3:	mov    QWORD PTR [rsp+0xb8],rcx
  4083ab:	mov    rcx,QWORD PTR [rbx+0x138]
  4083b2:	mov    QWORD PTR [rsp+0xc0],rcx
  4083ba:	mov    rcx,QWORD PTR [rbx+0x140]
  4083c1:	mov    QWORD PTR [rsp+0xc8],rcx
  4083c9:	mov    rcx,QWORD PTR [rbx+0x148]
  4083d0:	mov    QWORD PTR [rsp+0xd0],rcx
  4083d8:	mov    rcx,QWORD PTR [rbx+0x150]
  4083df:	mov    QWORD PTR [rsp+0xd8],rcx
  4083e7:	mov    rcx,QWORD PTR [rbx+0x158]
  4083ee:	mov    QWORD PTR [rsp+0xe0],rcx
  4083f6:	mov    rcx,QWORD PTR [rbx+0x160]
  4083fd:	mov    QWORD PTR [rsp+0xe8],rcx
  408405:	mov    rcx,QWORD PTR [rbx+0x168]
  40840c:	mov    QWORD PTR [rsp+0xf0],rcx
  408414:	mov    rcx,QWORD PTR [rbx+0x170]
  40841b:	mov    QWORD PTR [rsp+0xf8],rcx
  408423:	mov    WORD PTR [rsp+0x2],dx
  408428:	mov    ecx,0x7100
  40842d:	mov    r9d,DWORD PTR [rip+0x87a8]        # 410bdc <rb_strcasecmp@plt+0xe6cc>
  408434:	mov    WORD PTR [rsp+0x82],cx
  40843c:	lea    rcx,[rip+0xfffffffffffffc0d]        # 408050 <rb_strcasecmp@plt+0x5b40>
  408443:	mov    rdx,rsp
  408446:	call   402070 <rb_connect_tcp@plt>
  40844b:	jmp    4081d3 <rb_strcasecmp@plt+0x5cc3>
  408450:	call   402330 <rb_outofmemory@plt>
  408455:	nop    DWORD PTR [rax]
  408458:	call   402340 <__errno_location@plt>
  40845d:	mov    edi,DWORD PTR [rax]
  40845f:	call   402280 <strerror@plt>
  408464:	lea    rsi,[rip+0x36ed]        # 40bb58 <rb_strcasecmp@plt+0x9648>
  40846b:	mov    rdx,rax
  40846e:	mov    edi,0x44
  408473:	xor    eax,eax
  408475:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40847a:	mov    esi,0x2
  40847f:	mov    rdi,rbx
  408482:	call   407cb0 <rb_strcasecmp@plt+0x57a0>
  408487:	jmp    4081d3 <rb_strcasecmp@plt+0x5cc3>
  40848c:	call   402380 <__stack_chk_fail@plt>
  408491:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40849c:	nop    DWORD PTR [rax+0x0]
  4084a0:	push   rbp
  4084a1:	push   rbx
  4084a2:	sub    rsp,0x28
  4084a6:	mov    rbx,0x4151f0
  4084ad:	mov    rsi,rsp
  4084b0:	mov    rbp,rsp
  4084b3:	mov    rax,QWORD PTR fs:0x28
  4084bc:	mov    QWORD PTR [rsp+0x18],rax
  4084c1:	xor    eax,eax
  4084c3:	mov    rdi,QWORD PTR [rbx]
  4084c6:	call   402230 <rb_dictionary_foreach_start@plt>
  4084cb:	jmp    408504 <rb_strcasecmp@plt+0x5ff4>
  4084cd:	nop    DWORD PTR [rax]
  4084d0:	mov    rdx,0x410be0
  4084d7:	mov    edx,DWORD PTR [rdx+0x18]
  4084da:	shl    rdx,0x5
  4084de:	add    rdx,QWORD PTR [rax+0x1d0]
  4084e5:	cmp    QWORD PTR [rdx+0x10],0x0
  4084ea:	je     4084f9 <rb_strcasecmp@plt+0x5fe9>
  4084ec:	mov    esi,0x2
  4084f1:	mov    rdi,rax
  4084f4:	call   407cb0 <rb_strcasecmp@plt+0x57a0>
  4084f9:	mov    rdi,QWORD PTR [rbx]
  4084fc:	mov    rsi,rbp
  4084ff:	call   4021c0 <rb_dictionary_foreach_next@plt>
  408504:	mov    rdi,QWORD PTR [rbx]
  408507:	mov    rsi,rbp
  40850a:	call   402110 <rb_dictionary_foreach_cur@plt>
  40850f:	test   rax,rax
  408512:	jne    4084d0 <rb_strcasecmp@plt+0x5fc0>
  408514:	mov    rax,QWORD PTR [rsp+0x18]
  408519:	xor    rax,QWORD PTR fs:0x28
  408522:	jne    40852b <rb_strcasecmp@plt+0x601b>
  408524:	add    rsp,0x28
  408528:	pop    rbx
  408529:	pop    rbp
  40852a:	ret    
  40852b:	call   402380 <__stack_chk_fail@plt>
  408530:	mov    rax,rdx
  408533:	sub    rsp,0x8
  408537:	xor    esi,esi
  408539:	mov    rdi,QWORD PTR [rax]
  40853c:	mov    edx,0xa
  408541:	call   4022d0 <strtol@plt>
  408546:	test   eax,eax
  408548:	js     408555 <rb_strcasecmp@plt+0x6045>
  40854a:	mov    DWORD PTR [rip+0x8758],eax        # 410ca8 <rb_strcasecmp@plt+0xe798>
  408550:	add    rsp,0x8
  408554:	ret    
  408555:	lea    rsi,[rip+0x36c4]        # 40bc20 <rb_strcasecmp@plt+0x9710>
  40855c:	mov    edx,eax
  40855e:	mov    edi,0x43
  408563:	xor    eax,eax
  408565:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40856a:	mov    edi,0x3
  40856f:	call   4020b0 <exit@plt>
  408574:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40857f:	nop
  408580:	push   r13
  408582:	push   r12
  408584:	mov    edx,0x40
  408589:	push   rbp
  40858a:	push   rbx
  40858b:	mov    ebp,esi
  40858d:	lea    rsi,[rip+0x2d5f]        # 40b2f3 <rb_strcasecmp@plt+0x8de3>
  408594:	mov    rbx,rdi
  408597:	add    rdi,0x178
  40859e:	sub    rsp,0x8
  4085a2:	mov    r12,0x410cc0
  4085a9:	mov    eax,DWORD PTR [r12+0x18]
  4085ae:	shl    rax,0x5
  4085b2:	add    rax,QWORD PTR [rdi+0x58]
  4085b6:	mov    r13,QWORD PTR [rax+0x10]
  4085ba:	call   4021b0 <rb_strlcpy@plt>
  4085bf:	lea    rax,[rip+0x680a]        # 40edd0 <rb_strcasecmp@plt+0xc8c0>
  4085c6:	mov    edi,DWORD PTR [rbx]
  4085c8:	mov    rsi,QWORD PTR [rax+rbp*8]
  4085cc:	xor    eax,eax
  4085ce:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  4085d3:	mov    rdi,QWORD PTR [r13+0x0]
  4085d7:	call   402f10 <rb_strcasecmp@plt+0xa00>
  4085dc:	mov    rdi,r13
  4085df:	call   4021e0 <free@plt>
  4085e4:	mov    eax,DWORD PTR [r12+0x18]
  4085e9:	mov    rdx,QWORD PTR [rbx+0x1d0]
  4085f0:	mov    rdi,rbx
  4085f3:	mov    rsi,rax
  4085f6:	shl    rax,0x5
  4085fa:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408603:	mov    rdx,QWORD PTR [rbx+0x1d0]
  40860a:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408613:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  408618:	sub    DWORD PTR [rbx+0x1cc],0x1
  40861f:	je     408630 <rb_strcasecmp@plt+0x6120>
  408621:	add    rsp,0x8
  408625:	pop    rbx
  408626:	pop    rbp
  408627:	pop    r12
  408629:	pop    r13
  40862b:	ret    
  40862c:	nop    DWORD PTR [rax+0x0]
  408630:	add    rsp,0x8
  408634:	mov    rdi,rbx
  408637:	pop    rbx
  408638:	pop    rbp
  408639:	pop    r12
  40863b:	pop    r13
  40863d:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  408642:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40864d:	nop    DWORD PTR [rax]
  408650:	mov    rax,0x410cc0
  408657:	mov    eax,DWORD PTR [rax+0x18]
  40865a:	shl    rax,0x5
  40865e:	add    rax,QWORD PTR [rdi+0x1d0]
  408665:	cmp    QWORD PTR [rax+0x10],0x0
  40866a:	je     408680 <rb_strcasecmp@plt+0x6170>
  40866c:	mov    esi,0x1
  408671:	jmp    408580 <rb_strcasecmp@plt+0x6070>
  408676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408680:	repz ret 
  408682:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40868d:	nop    DWORD PTR [rax]
  408690:	push   r13
  408692:	push   r12
  408694:	mov    esi,0x8
  408699:	push   rbp
  40869a:	push   rbx
  40869b:	mov    rbx,rdi
  40869e:	mov    edi,0x1
  4086a3:	sub    rsp,0x8
  4086a7:	call   402400 <calloc@plt>
  4086ac:	test   rax,rax
  4086af:	je     408730 <rb_strcasecmp@plt+0x6220>
  4086b1:	mov    r12,rax
  4086b4:	mov    rax,0x410cc0
  4086bb:	mov    rdx,QWORD PTR [rbx+0x1d0]
  4086c2:	add    DWORD PTR [rbx+0x1cc],0x1
  4086c9:	movsxd r13,DWORD PTR [rip+0x85d8]        # 410ca8 <rb_strcasecmp@plt+0xe798>
  4086d0:	mov    eax,DWORD PTR [rax+0x18]
  4086d3:	shl    rax,0x5
  4086d7:	mov    QWORD PTR [rdx+rax*1+0x10],r12
  4086dc:	add    rax,QWORD PTR [rbx+0x1d0]
  4086e3:	mov    rbp,rax
  4086e6:	call   402260 <rb_current_time@plt>
  4086eb:	lea    rdi,[rbx+0xc0]
  4086f2:	add    r13,rax
  4086f5:	lea    rsi,[rip+0xd4]        # 4087d0 <rb_strcasecmp@plt+0x62c0>
  4086fc:	mov    QWORD PTR [rbp+0x8],r13
  408700:	mov    rdx,rbx
  408703:	call   402e30 <rb_strcasecmp@plt+0x920>
  408708:	mov    edi,DWORD PTR [rbx]
  40870a:	lea    rsi,[rip+0x3537]        # 40bc48 <rb_strcasecmp@plt+0x9738>
  408711:	mov    QWORD PTR [r12],rax
  408715:	xor    eax,eax
  408717:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  40871c:	add    rsp,0x8
  408720:	mov    eax,0x1
  408725:	pop    rbx
  408726:	pop    rbp
  408727:	pop    r12
  408729:	pop    r13
  40872b:	ret    
  40872c:	nop    DWORD PTR [rax+0x0]
  408730:	call   402330 <rb_outofmemory@plt>
  408735:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408740:	push   rbp
  408741:	push   rbx
  408742:	sub    rsp,0x28
  408746:	mov    rbx,0x4151f0
  40874d:	mov    rsi,rsp
  408750:	mov    rbp,rsp
  408753:	mov    rax,QWORD PTR fs:0x28
  40875c:	mov    QWORD PTR [rsp+0x18],rax
  408761:	xor    eax,eax
  408763:	mov    rdi,QWORD PTR [rbx]
  408766:	call   402230 <rb_dictionary_foreach_start@plt>
  40876b:	jmp    4087a4 <rb_strcasecmp@plt+0x6294>
  40876d:	nop    DWORD PTR [rax]
  408770:	mov    rdx,0x410cc0
  408777:	mov    edx,DWORD PTR [rdx+0x18]
  40877a:	shl    rdx,0x5
  40877e:	add    rdx,QWORD PTR [rax+0x1d0]
  408785:	cmp    QWORD PTR [rdx+0x10],0x0
  40878a:	je     408799 <rb_strcasecmp@plt+0x6289>
  40878c:	mov    esi,0x1
  408791:	mov    rdi,rax
  408794:	call   408580 <rb_strcasecmp@plt+0x6070>
  408799:	mov    rdi,QWORD PTR [rbx]
  40879c:	mov    rsi,rbp
  40879f:	call   4021c0 <rb_dictionary_foreach_next@plt>
  4087a4:	mov    rdi,QWORD PTR [rbx]
  4087a7:	mov    rsi,rbp
  4087aa:	call   402110 <rb_dictionary_foreach_cur@plt>
  4087af:	test   rax,rax
  4087b2:	jne    408770 <rb_strcasecmp@plt+0x6260>
  4087b4:	mov    rax,QWORD PTR [rsp+0x18]
  4087b9:	xor    rax,QWORD PTR fs:0x28
  4087c2:	jne    4087cb <rb_strcasecmp@plt+0x62bb>
  4087c4:	add    rsp,0x28
  4087c8:	pop    rbx
  4087c9:	pop    rbp
  4087ca:	ret    
  4087cb:	call   402380 <__stack_chk_fail@plt>
  4087d0:	test   rdi,rdi
  4087d3:	je     4088c0 <rb_strcasecmp@plt+0x63b0>
  4087d9:	cmp    sil,0x1
  4087dd:	jne    4088c0 <rb_strcasecmp@plt+0x63b0>
  4087e3:	push   r13
  4087e5:	push   r12
  4087e7:	push   rbp
  4087e8:	push   rbx
  4087e9:	mov    rbp,rdi
  4087ec:	mov    rbx,rcx
  4087ef:	sub    rsp,0x8
  4087f3:	call   4021f0 <strlen@plt>
  4087f8:	cmp    rax,0x3f
  4087fc:	ja     4088a0 <rb_strcasecmp@plt+0x6390>
  408802:	lea    r13,[rbx+0x178]
  408809:	mov    rsi,rbp
  40880c:	mov    edx,0x40
  408811:	mov    rdi,r13
  408814:	call   4021b0 <rb_strlcpy@plt>
  408819:	mov    rbp,0x410cc0
  408820:	mov    edi,DWORD PTR [rbx]
  408822:	lea    rsi,[rip+0x3498]        # 40bcc1 <rb_strcasecmp@plt+0x97b1>
  408829:	mov    rdx,r13
  40882c:	mov    eax,DWORD PTR [rbp+0x18]
  40882f:	shl    rax,0x5
  408833:	add    rax,QWORD PTR [rbx+0x1d0]
  40883a:	mov    r12,QWORD PTR [rax+0x10]
  40883e:	xor    eax,eax
  408840:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  408845:	mov    rdi,QWORD PTR [r12]
  408849:	call   402f10 <rb_strcasecmp@plt+0xa00>
  40884e:	mov    rdi,r12
  408851:	call   4021e0 <free@plt>
  408856:	mov    eax,DWORD PTR [rbp+0x18]
  408859:	mov    rdx,QWORD PTR [rbx+0x1d0]
  408860:	mov    rdi,rbx
  408863:	mov    rsi,rax
  408866:	shl    rax,0x5
  40886a:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408873:	mov    rdx,QWORD PTR [rbx+0x1d0]
  40887a:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408883:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  408888:	sub    DWORD PTR [rbx+0x1cc],0x1
  40888f:	je     4088d0 <rb_strcasecmp@plt+0x63c0>
  408891:	add    rsp,0x8
  408895:	pop    rbx
  408896:	pop    rbp
  408897:	pop    r12
  408899:	pop    r13
  40889b:	ret    
  40889c:	nop    DWORD PTR [rax+0x0]
  4088a0:	add    rsp,0x8
  4088a4:	mov    rdi,rbx
  4088a7:	mov    esi,0x2
  4088ac:	pop    rbx
  4088ad:	pop    rbp
  4088ae:	pop    r12
  4088b0:	pop    r13
  4088b2:	jmp    408580 <rb_strcasecmp@plt+0x6070>
  4088b7:	nop    WORD PTR [rax+rax*1+0x0]
  4088c0:	mov    esi,0x1
  4088c5:	mov    rdi,rcx
  4088c8:	jmp    408580 <rb_strcasecmp@plt+0x6070>
  4088cd:	nop    DWORD PTR [rax]
  4088d0:	add    rsp,0x8
  4088d4:	mov    rdi,rbx
  4088d7:	pop    rbx
  4088d8:	pop    rbp
  4088d9:	pop    r12
  4088db:	pop    r13
  4088dd:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  4088e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088ec:	nop    DWORD PTR [rax+0x0]
  4088f0:	push   r14
  4088f2:	push   r13
  4088f4:	mov    r13,0x410d80
  4088fb:	push   r12
  4088fd:	push   rbp
  4088fe:	push   rbx
  4088ff:	mov    eax,DWORD PTR [r13+0x18]
  408903:	shl    rax,0x5
  408907:	add    rax,QWORD PTR [rdi+0x1d0]
  40890e:	mov    r14,QWORD PTR [rax+0x10]
  408912:	test   r14,r14
  408915:	je     4089a8 <rb_strcasecmp@plt+0x6498>
  40891b:	mov    r12,rdi
  40891e:	mov    edi,DWORD PTR [rdi]
  408920:	lea    rsi,[rip+0x33c9]        # 40bcf0 <rb_strcasecmp@plt+0x97e0>
  408927:	xor    eax,eax
  408929:	call   4031d0 <rb_strcasecmp@plt+0xcc0>
  40892e:	mov    rax,QWORD PTR [r14]
  408931:	test   rax,rax
  408934:	je     408960 <rb_strcasecmp@plt+0x6450>
  408936:	mov    rbx,QWORD PTR [rax+0x10]
  40893a:	jmp    408947 <rb_strcasecmp@plt+0x6437>
  40893c:	nop    DWORD PTR [rax+0x0]
  408940:	mov    rax,rbx
  408943:	mov    rbx,QWORD PTR [rbx+0x10]
  408947:	mov    rbp,QWORD PTR [rax]
  40894a:	mov    rdi,QWORD PTR [rbp+0x8]
  40894e:	call   4022c0 <rb_close@plt>
  408953:	mov    rdi,rbp
  408956:	call   4021e0 <free@plt>
  40895b:	test   rbx,rbx
  40895e:	jne    408940 <rb_strcasecmp@plt+0x6430>
  408960:	mov    rdi,r14
  408963:	call   4021e0 <free@plt>
  408968:	mov    eax,DWORD PTR [r13+0x18]
  40896c:	mov    rdx,QWORD PTR [r12+0x1d0]
  408974:	mov    rdi,r12
  408977:	mov    rsi,rax
  40897a:	shl    rax,0x5
  40897e:	mov    QWORD PTR [rdx+rax*1+0x10],0x0
  408987:	mov    rdx,QWORD PTR [r12+0x1d0]
  40898f:	mov    QWORD PTR [rdx+rax*1+0x8],0x0
  408998:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  40899d:	sub    DWORD PTR [r12+0x1cc],0x1
  4089a6:	je     4089b8 <rb_strcasecmp@plt+0x64a8>
  4089a8:	pop    rbx
  4089a9:	pop    rbp
  4089aa:	pop    r12
  4089ac:	pop    r13
  4089ae:	pop    r14
  4089b0:	ret    
  4089b1:	nop    DWORD PTR [rax+0x0]
  4089b8:	pop    rbx
  4089b9:	mov    rdi,r12
  4089bc:	pop    rbp
  4089bd:	pop    r12
  4089bf:	pop    r13
  4089c1:	pop    r14
  4089c3:	jmp    4039e0 <rb_strcasecmp@plt+0x14d0>
  4089c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4089d0:	push   rbp
  4089d1:	push   rbx
  4089d2:	sub    rsp,0x28
  4089d6:	mov    rbx,0x4151f0
  4089dd:	mov    rsi,rsp
  4089e0:	mov    rbp,rsp
  4089e3:	mov    rax,QWORD PTR fs:0x28
  4089ec:	mov    QWORD PTR [rsp+0x18],rax
  4089f1:	xor    eax,eax
  4089f3:	mov    rdi,QWORD PTR [rbx]
  4089f6:	call   402230 <rb_dictionary_foreach_start@plt>
  4089fb:	jmp    408a13 <rb_strcasecmp@plt+0x6503>
  4089fd:	nop    DWORD PTR [rax]
  408a00:	mov    rdi,rax
  408a03:	call   4088f0 <rb_strcasecmp@plt+0x63e0>
  408a08:	mov    rdi,QWORD PTR [rbx]
  408a0b:	mov    rsi,rbp
  408a0e:	call   4021c0 <rb_dictionary_foreach_next@plt>
  408a13:	mov    rdi,QWORD PTR [rbx]
  408a16:	mov    rsi,rbp
  408a19:	call   402110 <rb_dictionary_foreach_cur@plt>
  408a1e:	test   rax,rax
  408a21:	jne    408a00 <rb_strcasecmp@plt+0x64f0>
  408a23:	mov    rax,QWORD PTR [rsp+0x18]
  408a28:	xor    rax,QWORD PTR fs:0x28
  408a31:	jne    408a3a <rb_strcasecmp@plt+0x652a>
  408a33:	add    rsp,0x28
  408a37:	pop    rbx
  408a38:	pop    rbp
  408a39:	ret    
  408a3a:	call   402380 <__stack_chk_fail@plt>
  408a3f:	nop
  408a40:	mov    rax,rdx
  408a43:	sub    rsp,0x8
  408a47:	xor    esi,esi
  408a49:	mov    rdi,QWORD PTR [rax]
  408a4c:	mov    edx,0xa
  408a51:	call   4022d0 <strtol@plt>
  408a56:	test   eax,eax
  408a58:	js     408a68 <rb_strcasecmp@plt+0x6558>
  408a5a:	mov    DWORD PTR [rip+0x8310],eax        # 410d70 <rb_strcasecmp@plt+0xe860>
  408a60:	add    rsp,0x8
  408a64:	ret    
  408a65:	nop    DWORD PTR [rax]
  408a68:	lea    rsi,[rip+0x32a1]        # 40bd10 <rb_strcasecmp@plt+0x9800>
  408a6f:	mov    edx,eax
  408a71:	mov    edi,0x43
  408a76:	xor    eax,eax
  408a78:	add    rsp,0x8
  408a7c:	jmp    4032f0 <rb_strcasecmp@plt+0xde0>
  408a81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408a8c:	nop    DWORD PTR [rax+0x0]
  408a90:	push   r12
  408a92:	push   rbp
  408a93:	mov    r12,rdi
  408a96:	push   rbx
  408a97:	sub    rsp,0xb0
  408a9e:	mov    rax,QWORD PTR fs:0x28
  408aa7:	mov    QWORD PTR [rsp+0xa8],rax
  408aaf:	xor    eax,eax
  408ab1:	test   esi,esi
  408ab3:	mov    DWORD PTR [rsp+0xc],0x80
  408abb:	jne    408b90 <rb_strcasecmp@plt+0x6680>
  408ac1:	test   r8,r8
  408ac4:	je     408b90 <rb_strcasecmp@plt+0x6680>
  408aca:	call   4020a0 <rb_get_fd@plt>
  408acf:	lea    rdx,[rsp+0xc]
  408ad4:	lea    rsi,[rsp+0x20]
  408ad9:	mov    edi,eax
  408adb:	call   4022e0 <getsockname@plt>
  408ae0:	test   eax,eax
  408ae2:	jne    408b90 <rb_strcasecmp@plt+0x6680>
  408ae8:	mov    rbx,0x4151f0
  408aef:	lea    rbp,[rsp+0x10]
  408af4:	mov    rsi,rbp
  408af7:	mov    rdi,QWORD PTR [rbx]
  408afa:	call   402230 <rb_dictionary_foreach_start@plt>
  408aff:	jmp    408b13 <rb_strcasecmp@plt+0x6603>
  408b01:	nop    DWORD PTR [rax+0x0]
  408b08:	mov    rdi,QWORD PTR [rbx]
  408b0b:	mov    rsi,rbp
  408b0e:	call   4021c0 <rb_dictionary_foreach_next@plt>
  408b13:	mov    rdi,QWORD PTR [rbx]
  408b16:	mov    rsi,rbp
  408b19:	call   402110 <rb_dictionary_foreach_cur@plt>
  408b1e:	test   rax,rax
  408b21:	je     408b90 <rb_strcasecmp@plt+0x6680>
  408b23:	movzx  edx,WORD PTR [rax+0xf8]
  408b2a:	cmp    dx,WORD PTR [rsp+0x20]
  408b2f:	jne    408b08 <rb_strcasecmp@plt+0x65f8>
  408b31:	cmp    dx,0x2
  408b35:	je     408be0 <rb_strcasecmp@plt+0x66d0>
  408b3b:	cmp    dx,0xa
  408b3f:	jne    408bc0 <rb_strcasecmp@plt+0x66b0>
  408b41:	mov    ecx,DWORD PTR [rax+0x100]
  408b47:	cmp    DWORD PTR [rsp+0x28],ecx
  408b4b:	jne    408b08 <rb_strcasecmp@plt+0x65f8>
  408b4d:	mov    ecx,DWORD PTR [rax+0x104]
  408b53:	cmp    DWORD PTR [rsp+0x2c],ecx
  408b57:	jne    408b08 <rb_strcasecmp@plt+0x65f8>
  408b59:	mov    ecx,DWORD PTR [rax+0x108]
  408b5f:	cmp    DWORD PTR [rsp+0x30],ecx
  408b63:	jne    408b08 <rb_strcasecmp@plt+0x65f8>
  408b65:	mov    ecx,DWORD PTR [rax+0x10c]
  408b6b:	cmp    DWORD PTR [rsp+0x34],ecx
  408b6f:	jne    408b08 <rb_strcasecmp@plt+0x65f8>
  408b71:	lea    rdx,[rip+0x88]        # 408c00 <rb_strcasecmp@plt+0x66f0>
  408b78:	mov    rcx,rax
  408b7b:	mov    esi,0x1
  408b80:	mov    rdi,r12
  408b83:	call   402090 <rb_setselect@plt>
  408b88:	jmp    408b98 <rb_strcasecmp@plt+0x6688>
  408b8a:	nop    WORD PTR [rax+rax*1+0x0]
  408b90:	mov    rdi,r12
  408b93:	call   4022c0 <rb_close@plt>
  408b98:	mov    rax,QWORD PTR [rsp+0xa8]
  408ba0:	xor    rax,QWORD PTR fs:0x28
  408ba9:	jne    408bf5 <rb_strcasecmp@plt+0x66e5>
  408bab:	add    rsp,0xb0
  408bb2:	pop    rbx
  408bb3:	pop    rbp
  408bb4:	pop    r12
  408bb6:	ret    
  408bb7:	nop    WORD PTR [rax+rax*1+0x0]
  408bc0:	lea    rsi,[rip+0x3171]        # 40bd38 <rb_strcasecmp@plt+0x9828>
  408bc7:	mov    edi,0x43
  408bcc:	xor    eax,eax
  408bce:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  408bd3:	mov    edi,0x3
  408bd8:	call   4020b0 <exit@plt>
  408bdd:	nop    DWORD PTR [rax]
  408be0:	mov    ecx,DWORD PTR [rax+0xfc]
  408be6:	cmp    DWORD PTR [rsp+0x24],ecx
  408bea:	jne    408b08 <rb_strcasecmp@plt+0x65f8>
  408bf0:	jmp    408b71 <rb_strcasecmp@plt+0x6661>
  408bf5:	call   402380 <__stack_chk_fail@plt>
  408bfa:	nop    WORD PTR [rax+rax*1+0x0]
  408c00:	push   r15
  408c02:	push   r14
  408c04:	mov    edx,0x80
  408c09:	push   r13
  408c0b:	push   r12
  408c0d:	mov    r13,rsi
  408c10:	push   rbp
  408c11:	push   rbx
  408c12:	mov    r12,rdi
  408c15:	sub    rsp,0x98
  408c1c:	mov    rax,QWORD PTR fs:0x28
  408c25:	mov    QWORD PTR [rsp+0x88],rax
  408c2d:	xor    eax,eax
  408c2f:	mov    rax,0x410d80
  408c36:	mov    eax,DWORD PTR [rax+0x18]
  408c39:	shl    rax,0x5
  408c3d:	add    rax,QWORD PTR [rsi+0x1d0]
  408c44:	mov    rsi,rsp
  408c47:	mov    r15,QWORD PTR [rax+0x10]
  408c4b:	call   402210 <rb_read@plt>
  408c50:	test   rax,rax
  408c53:	js     408d20 <rb_strcasecmp@plt+0x6810>
  408c59:	je     408cee <rb_strcasecmp@plt+0x67de>
  408c5f:	mov    rbx,QWORD PTR [rip+0xc56a]        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  408c66:	mov    rbp,rsp
  408c69:	test   rbx,rbx
  408c6c:	jne    408c79 <rb_strcasecmp@plt+0x6769>
  408c6e:	jmp    408cee <rb_strcasecmp@plt+0x67de>
  408c70:	mov    rbx,QWORD PTR [rbx+0x10]
  408c74:	test   rbx,rbx
  408c77:	je     408cee <rb_strcasecmp@plt+0x67de>
  408c79:	mov    r14,QWORD PTR [rbx]
  408c7c:	mov    rdi,r14
  408c7f:	call   4021f0 <strlen@plt>
  408c84:	mov    rsi,rbp
  408c87:	mov    rdx,rax
  408c8a:	mov    rdi,r14
  408c8d:	call   402140 <strncmp@plt>
  408c92:	test   eax,eax
  408c94:	jne    408c70 <rb_strcasecmp@plt+0x6760>
  408c96:	mov    rax,QWORD PTR [r15]
  408c99:	test   rax,rax
  408c9c:	je     408cc8 <rb_strcasecmp@plt+0x67b8>
  408c9e:	mov    rbx,QWORD PTR [rax+0x10]
  408ca2:	jmp    408caf <rb_strcasecmp@plt+0x679f>
  408ca4:	nop    DWORD PTR [rax+0x0]
  408ca8:	mov    rax,rbx
  408cab:	mov    rbx,QWORD PTR [rbx+0x10]
  408caf:	mov    r14,QWORD PTR [rax]
  408cb2:	mov    rdi,QWORD PTR [r14+0x8]
  408cb6:	call   4022c0 <rb_close@plt>
  408cbb:	mov    rdi,r14
  408cbe:	call   4021e0 <free@plt>
  408cc3:	test   rbx,rbx
  408cc6:	jne    408ca8 <rb_strcasecmp@plt+0x6798>
  408cc8:	mov    rdi,r15
  408ccb:	call   4021e0 <free@plt>
  408cd0:	mov    rax,0x410d80
  408cd7:	lea    rcx,[rip+0x32b1]        # 40bf8f <rb_strcasecmp@plt+0x9a7f>
  408cde:	mov    rdx,rbp
  408ce1:	mov    rdi,r13
  408ce4:	mov    esi,DWORD PTR [rax+0x18]
  408ce7:	xor    eax,eax
  408ce9:	call   403bc0 <rb_strcasecmp@plt+0x16b0>
  408cee:	mov    rdi,r12
  408cf1:	call   4022c0 <rb_close@plt>
  408cf6:	mov    rax,QWORD PTR [rsp+0x88]
  408cfe:	xor    rax,QWORD PTR fs:0x28
  408d07:	jne    408d49 <rb_strcasecmp@plt+0x6839>
  408d09:	add    rsp,0x98
  408d10:	pop    rbx
  408d11:	pop    rbp
  408d12:	pop    r12
  408d14:	pop    r13
  408d16:	pop    r14
  408d18:	pop    r15
  408d1a:	ret    
  408d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d20:	call   402340 <__errno_location@plt>
  408d25:	mov    edi,DWORD PTR [rax]
  408d27:	call   402050 <rb_ignore_errno@plt>
  408d2c:	test   eax,eax
  408d2e:	je     408cee <rb_strcasecmp@plt+0x67de>
  408d30:	lea    rdx,[rip+0xfffffffffffffec9]        # 408c00 <rb_strcasecmp@plt+0x66f0>
  408d37:	mov    rcx,r13
  408d3a:	mov    esi,0x1
  408d3f:	mov    rdi,r12
  408d42:	call   402090 <rb_setselect@plt>
  408d47:	jmp    408cf6 <rb_strcasecmp@plt+0x67e6>
  408d49:	call   402380 <__stack_chk_fail@plt>
  408d4e:	xchg   ax,ax
  408d50:	push   r15
  408d52:	push   r14
  408d54:	mov    r14,rdi
  408d57:	push   r13
  408d59:	push   r12
  408d5b:	mov    r13d,esi
  408d5e:	push   rbp
  408d5f:	push   rbx
  408d60:	sub    rsp,0xb8
  408d67:	lea    rbp,[rsp+0x20]
  408d6c:	mov    DWORD PTR [rsp+0xc],0x1
  408d74:	mov    rax,QWORD PTR fs:0x28
  408d7d:	mov    QWORD PTR [rsp+0xa8],rax
  408d85:	xor    eax,eax
  408d87:	mov    rsi,rbp
  408d8a:	call   402240 <rb_inet_pton_sock@plt>
  408d8f:	test   eax,eax
  408d91:	je     409121 <rb_strcasecmp@plt+0x6c11>
  408d97:	movzx  edi,WORD PTR [rsp+0x20]
  408d9c:	mov    eax,r13d
  408d9f:	rol    ax,0x8
  408da3:	mov    WORD PTR [rsp+0x22],ax
  408da8:	cmp    di,0x2
  408dac:	je     409088 <rb_strcasecmp@plt+0x6b78>
  408db2:	cmp    di,0xa
  408db6:	je     408fe0 <rb_strcasecmp@plt+0x6ad0>
  408dbc:	mov    ecx,DWORD PTR [rip+0xc2ba]        # 41507c <rb_strcasecmp@plt+0x12b6c>
  408dc2:	cmp    DWORD PTR [rsp+0x24],ecx
  408dc6:	je     409098 <rb_strcasecmp@plt+0x6b88>
  408dcc:	lea    rbx,[rip+0xc26d]        # 415040 <rb_strcasecmp@plt+0x12b30>
  408dd3:	lea    rcx,[rip+0x31c9]        # 40bfa3 <rb_strcasecmp@plt+0x9a93>
  408dda:	xor    edx,edx
  408ddc:	mov    esi,0x1
  408de1:	call   4020e0 <rb_socket@plt>
  408de6:	test   rax,rax
  408de9:	mov    r12,rax
  408dec:	je     4090d8 <rb_strcasecmp@plt+0x6bc8>
  408df2:	mov    rdi,rax
  408df5:	call   4020a0 <rb_get_fd@plt>
  408dfa:	lea    rcx,[rsp+0xc]
  408dff:	mov    r8d,0x4
  408e05:	mov    edx,0x2
  408e0a:	mov    esi,0x1
  408e0f:	mov    edi,eax
  408e11:	call   402180 <setsockopt@plt>
  408e16:	test   eax,eax
  408e18:	jne    409104 <rb_strcasecmp@plt+0x6bf4>
  408e1e:	cmp    WORD PTR [rsp+0x20],0x2
  408e24:	mov    edx,0x10
  408e29:	mov    r15d,0x1c
  408e2f:	mov    rdi,r12
  408e32:	cmove  r15d,edx
  408e36:	call   4020a0 <rb_get_fd@plt>
  408e3b:	mov    edx,r15d
  408e3e:	mov    rsi,rbp
  408e41:	mov    edi,eax
  408e43:	call   4024c0 <bind@plt>
  408e48:	test   eax,eax
  408e4a:	jne    409050 <rb_strcasecmp@plt+0x6b40>
  408e50:	xor    edx,edx
  408e52:	mov    esi,0x1000
  408e57:	mov    rdi,r12
  408e5a:	call   4024e0 <rb_listen@plt>
  408e5f:	test   eax,eax
  408e61:	jne    4090c0 <rb_strcasecmp@plt+0x6bb0>
  408e67:	mov    rdi,QWORD PTR [rbx+0xb8]
  408e6e:	test   rdi,rdi
  408e71:	je     408e78 <rb_strcasecmp@plt+0x6968>
  408e73:	call   4022c0 <rb_close@plt>
  408e78:	mov    rbp,0x4151f0
  408e7f:	mov    QWORD PTR [rbx+0xb8],r12
  408e86:	lea    r12,[rsp+0x10]
  408e8b:	mov    rsi,r12
  408e8e:	mov    rdi,QWORD PTR [rbp+0x0]
  408e92:	call   402230 <rb_dictionary_foreach_start@plt>
  408e97:	jmp    408eb4 <rb_strcasecmp@plt+0x69a4>
  408e99:	nop    DWORD PTR [rax+0x0]
  408ea0:	mov    rdi,rax
  408ea3:	call   4088f0 <rb_strcasecmp@plt+0x63e0>
  408ea8:	mov    rdi,QWORD PTR [rbp+0x0]
  408eac:	mov    rsi,r12
  408eaf:	call   4021c0 <rb_dictionary_foreach_next@plt>
  408eb4:	mov    rdi,QWORD PTR [rbp+0x0]
  408eb8:	mov    rsi,r12
  408ebb:	call   402110 <rb_dictionary_foreach_cur@plt>
  408ec0:	test   rax,rax
  408ec3:	jne    408ea0 <rb_strcasecmp@plt+0x6990>
  408ec5:	mov    edx,0x35
  408eca:	mov    rsi,r14
  408ecd:	mov    rdi,rbx
  408ed0:	call   4021b0 <rb_strlcpy@plt>
  408ed5:	mov    rax,QWORD PTR [rsp+0x20]
  408eda:	mov    WORD PTR [rbx+0x36],r13w
  408edf:	lea    rdx,[rip+0xfffffffffffffbaa]        # 408a90 <rb_strcasecmp@plt+0x6580>
  408ee6:	mov    rcx,rbx
  408ee9:	xor    esi,esi
  408eeb:	mov    QWORD PTR [rbx+0x38],rax
  408eef:	mov    rax,QWORD PTR [rsp+0x28]
  408ef4:	mov    QWORD PTR [rbx+0x40],rax
  408ef8:	mov    rax,QWORD PTR [rsp+0x30]
  408efd:	mov    QWORD PTR [rbx+0x48],rax
  408f01:	mov    rax,QWORD PTR [rsp+0x38]
  408f06:	mov    QWORD PTR [rbx+0x50],rax
  408f0a:	mov    rax,QWORD PTR [rsp+0x40]
  408f0f:	mov    QWORD PTR [rbx+0x58],rax
  408f13:	mov    rax,QWORD PTR [rsp+0x48]
  408f18:	mov    QWORD PTR [rbx+0x60],rax
  408f1c:	mov    rax,QWORD PTR [rsp+0x50]
  408f21:	mov    QWORD PTR [rbx+0x68],rax
  408f25:	mov    rax,QWORD PTR [rsp+0x58]
  408f2a:	mov    QWORD PTR [rbx+0x70],rax
  408f2e:	mov    rax,QWORD PTR [rsp+0x60]
  408f33:	mov    QWORD PTR [rbx+0x78],rax
  408f37:	mov    rax,QWORD PTR [rsp+0x68]
  408f3c:	mov    QWORD PTR [rbx+0x80],rax
  408f43:	mov    rax,QWORD PTR [rsp+0x70]
  408f48:	mov    QWORD PTR [rbx+0x88],rax
  408f4f:	mov    rax,QWORD PTR [rsp+0x78]
  408f54:	mov    QWORD PTR [rbx+0x90],rax
  408f5b:	mov    rax,QWORD PTR [rsp+0x80]
  408f63:	mov    QWORD PTR [rbx+0x98],rax
  408f6a:	mov    rax,QWORD PTR [rsp+0x88]
  408f72:	mov    QWORD PTR [rbx+0xa0],rax
  408f79:	mov    rax,QWORD PTR [rsp+0x90]
  408f81:	mov    QWORD PTR [rbx+0xa8],rax
  408f88:	mov    rax,QWORD PTR [rsp+0x98]
  408f90:	mov    QWORD PTR [rbx+0xb0],rax
  408f97:	mov    rdi,QWORD PTR [rbx+0xb8]
  408f9e:	mov    BYTE PTR [rip+0xc21b],0x1        # 4151c0 <rb_strcasecmp@plt+0x12cb0>
  408fa5:	call   4023e0 <rb_accept_tcp@plt>
  408faa:	mov    eax,0x1
  408faf:	mov    rcx,QWORD PTR [rsp+0xa8]
  408fb7:	xor    rcx,QWORD PTR fs:0x28
  408fc0:	jne    40911c <rb_strcasecmp@plt+0x6c0c>
  408fc6:	add    rsp,0xb8
  408fcd:	pop    rbx
  408fce:	pop    rbp
  408fcf:	pop    r12
  408fd1:	pop    r13
  408fd3:	pop    r14
  408fd5:	pop    r15
  408fd7:	ret    
  408fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  408fe0:	mov    ecx,DWORD PTR [rip+0xc15a]        # 415140 <rb_strcasecmp@plt+0x12c30>
  408fe6:	cmp    DWORD PTR [rsp+0x28],ecx
  408fea:	lea    rbx,[rip+0xc10f]        # 415100 <rb_strcasecmp@plt+0x12bf0>
  408ff1:	jne    408dd3 <rb_strcasecmp@plt+0x68c3>
  408ff7:	mov    edx,DWORD PTR [rip+0xc147]        # 415144 <rb_strcasecmp@plt+0x12c34>
  408ffd:	cmp    DWORD PTR [rsp+0x2c],edx
  409001:	jne    408dd3 <rb_strcasecmp@plt+0x68c3>
  409007:	mov    edx,DWORD PTR [rip+0xc13b]        # 415148 <rb_strcasecmp@plt+0x12c38>
  40900d:	cmp    DWORD PTR [rsp+0x30],edx
  409011:	jne    408dd3 <rb_strcasecmp@plt+0x68c3>
  409017:	mov    ecx,DWORD PTR [rip+0xc12f]        # 41514c <rb_strcasecmp@plt+0x12c3c>
  40901d:	cmp    DWORD PTR [rsp+0x34],ecx
  409021:	jne    408dd3 <rb_strcasecmp@plt+0x68c3>
  409027:	cmp    WORD PTR [rip+0xc10c],ax        # 41513a <rb_strcasecmp@plt+0x12c2a>
  40902e:	jne    408dd3 <rb_strcasecmp@plt+0x68c3>
  409034:	cmp    QWORD PTR [rip+0xc17c],0x0        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  40903c:	je     408dd3 <rb_strcasecmp@plt+0x68c3>
  409042:	xor    eax,eax
  409044:	jmp    408faf <rb_strcasecmp@plt+0x6a9f>
  409049:	nop    DWORD PTR [rax+0x0]
  409050:	call   402340 <__errno_location@plt>
  409055:	mov    edi,DWORD PTR [rax]
  409057:	call   402280 <strerror@plt>
  40905c:	lea    rsi,[rip+0x2d4d]        # 40bdb0 <rb_strcasecmp@plt+0x98a0>
  409063:	mov    rdx,rax
  409066:	xor    eax,eax
  409068:	mov    edi,0x57
  40906d:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  409072:	mov    rdi,r12
  409075:	call   4022c0 <rb_close@plt>
  40907a:	xor    eax,eax
  40907c:	jmp    408faf <rb_strcasecmp@plt+0x6a9f>
  409081:	nop    DWORD PTR [rax+0x0]
  409088:	mov    ecx,DWORD PTR [rsp+0x24]
  40908c:	cmp    DWORD PTR [rip+0xbfea],ecx        # 41507c <rb_strcasecmp@plt+0x12b6c>
  409092:	jne    408dcc <rb_strcasecmp@plt+0x68bc>
  409098:	movzx  edx,WORD PTR [rip+0xbfdb]        # 41507a <rb_strcasecmp@plt+0x12b6a>
  40909f:	movzx  eax,ax
  4090a2:	cmp    eax,edx
  4090a4:	jne    408dcc <rb_strcasecmp@plt+0x68bc>
  4090aa:	cmp    QWORD PTR [rip+0xc046],0x0        # 4150f8 <rb_strcasecmp@plt+0x12be8>
  4090b2:	je     408dcc <rb_strcasecmp@plt+0x68bc>
  4090b8:	xor    eax,eax
  4090ba:	jmp    408faf <rb_strcasecmp@plt+0x6a9f>
  4090bf:	nop
  4090c0:	call   402340 <__errno_location@plt>
  4090c5:	mov    edi,DWORD PTR [rax]
  4090c7:	call   402280 <strerror@plt>
  4090cc:	lea    rsi,[rip+0x2cfd]        # 40bdd0 <rb_strcasecmp@plt+0x98c0>
  4090d3:	mov    rdx,rax
  4090d6:	jmp    409066 <rb_strcasecmp@plt+0x6b56>
  4090d8:	call   402340 <__errno_location@plt>
  4090dd:	mov    edi,DWORD PTR [rax]
  4090df:	call   402280 <strerror@plt>
  4090e4:	lea    rsi,[rip+0x2ecc]        # 40bfb7 <rb_strcasecmp@plt+0x9aa7>
  4090eb:	mov    rdx,rax
  4090ee:	mov    edi,0x43
  4090f3:	xor    eax,eax
  4090f5:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  4090fa:	mov    edi,0x3
  4090ff:	call   4020b0 <exit@plt>
  409104:	call   402340 <__errno_location@plt>
  409109:	mov    edi,DWORD PTR [rax]
  40910b:	call   402280 <strerror@plt>
  409110:	lea    rsi,[rip+0x2c71]        # 40bd88 <rb_strcasecmp@plt+0x9878>
  409117:	mov    rdx,rax
  40911a:	jmp    4090ee <rb_strcasecmp@plt+0x6bde>
  40911c:	call   402380 <__stack_chk_fail@plt>
  409121:	lea    rsi,[rip+0x2c40]        # 40bd68 <rb_strcasecmp@plt+0x9858>
  409128:	mov    edi,0x43
  40912d:	movzx  ecx,r13w
  409131:	mov    rdx,r14
  409134:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  409139:	mov    edi,0x3
  40913e:	call   4020b0 <exit@plt>
  409143:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40914e:	xchg   ax,ax
  409150:	push   r12
  409152:	push   rbp
  409153:	push   rbx
  409154:	sub    rsp,0x20
  409158:	mov    rax,QWORD PTR fs:0x28
  409161:	mov    QWORD PTR [rsp+0x18],rax
  409166:	xor    eax,eax
  409168:	mov    rax,QWORD PTR [rdx]
  40916b:	movzx  eax,BYTE PTR [rax]
  40916e:	cmp    al,0x31
  409170:	sete   r12b
  409174:	je     409220 <rb_strcasecmp@plt+0x6d10>
  40917a:	mov    rdi,QWORD PTR [rip+0xbf77]        # 4150f8 <rb_strcasecmp@plt+0x12be8>
  409181:	test   rdi,rdi
  409184:	je     409270 <rb_strcasecmp@plt+0x6d60>
  40918a:	call   4022c0 <rb_close@plt>
  40918f:	mov    rdi,QWORD PTR [rip+0xc022]        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  409196:	test   rdi,rdi
  409199:	je     4091a0 <rb_strcasecmp@plt+0x6c90>
  40919b:	call   4022c0 <rb_close@plt>
  4091a0:	mov    rbx,0x4151f0
  4091a7:	mov    rsi,rsp
  4091aa:	mov    rbp,rsp
  4091ad:	mov    QWORD PTR [rip+0xc000],0x0        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  4091b8:	mov    QWORD PTR [rip+0xbf35],0x0        # 4150f8 <rb_strcasecmp@plt+0x12be8>
  4091c3:	mov    rdi,QWORD PTR [rbx]
  4091c6:	call   402230 <rb_dictionary_foreach_start@plt>
  4091cb:	jmp    4091e3 <rb_strcasecmp@plt+0x6cd3>
  4091cd:	nop    DWORD PTR [rax]
  4091d0:	mov    rdi,rax
  4091d3:	call   4088f0 <rb_strcasecmp@plt+0x63e0>
  4091d8:	mov    rdi,QWORD PTR [rbx]
  4091db:	mov    rsi,rbp
  4091de:	call   4021c0 <rb_dictionary_foreach_next@plt>
  4091e3:	mov    rdi,QWORD PTR [rbx]
  4091e6:	mov    rsi,rbp
  4091e9:	call   402110 <rb_dictionary_foreach_cur@plt>
  4091ee:	test   rax,rax
  4091f1:	jne    4091d0 <rb_strcasecmp@plt+0x6cc0>
  4091f3:	mov    rax,QWORD PTR [rsp+0x18]
  4091f8:	xor    rax,QWORD PTR fs:0x28
  409201:	mov    BYTE PTR [rip+0xbfb8],r12b        # 4151c0 <rb_strcasecmp@plt+0x12cb0>
  409208:	jne    409296 <rb_strcasecmp@plt+0x6d86>
  40920e:	add    rsp,0x20
  409212:	pop    rbx
  409213:	pop    rbp
  409214:	pop    r12
  409216:	ret    
  409217:	nop    WORD PTR [rax+rax*1+0x0]
  409220:	cmp    BYTE PTR [rip+0xbe19],0x0        # 415040 <rb_strcasecmp@plt+0x12b30>
  409227:	je     40923f <rb_strcasecmp@plt+0x6d2f>
  409229:	movzx  eax,WORD PTR [rip+0xbe46]        # 415076 <rb_strcasecmp@plt+0x12b66>
  409230:	test   ax,ax
  409233:	je     40923f <rb_strcasecmp@plt+0x6d2f>
  409235:	cmp    QWORD PTR [rip+0xbebb],0x0        # 4150f8 <rb_strcasecmp@plt+0x12be8>
  40923d:	je     409285 <rb_strcasecmp@plt+0x6d75>
  40923f:	cmp    BYTE PTR [rip+0xbeba],0x0        # 415100 <rb_strcasecmp@plt+0x12bf0>
  409246:	je     4091f3 <rb_strcasecmp@plt+0x6ce3>
  409248:	movzx  eax,WORD PTR [rip+0xbee7]        # 415136 <rb_strcasecmp@plt+0x12c26>
  40924f:	test   ax,ax
  409252:	je     4091f3 <rb_strcasecmp@plt+0x6ce3>
  409254:	cmp    QWORD PTR [rip+0xbf5c],0x0        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  40925c:	jne    4091f3 <rb_strcasecmp@plt+0x6ce3>
  40925e:	lea    rdi,[rip+0xbe9b]        # 415100 <rb_strcasecmp@plt+0x12bf0>
  409265:	movzx  esi,ax
  409268:	call   408d50 <rb_strcasecmp@plt+0x6840>
  40926d:	jmp    4091f3 <rb_strcasecmp@plt+0x6ce3>
  40926f:	nop
  409270:	mov    rdi,QWORD PTR [rip+0xbf41]        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  409277:	test   rdi,rdi
  40927a:	jne    40919b <rb_strcasecmp@plt+0x6c8b>
  409280:	jmp    4091f3 <rb_strcasecmp@plt+0x6ce3>
  409285:	lea    rdi,[rip+0xbdb4]        # 415040 <rb_strcasecmp@plt+0x12b30>
  40928c:	movzx  esi,ax
  40928f:	call   408d50 <rb_strcasecmp@plt+0x6840>
  409294:	jmp    40923f <rb_strcasecmp@plt+0x6d2f>
  409296:	call   402380 <__stack_chk_fail@plt>
  40929b:	nop    DWORD PTR [rax+rax*1+0x0]
  4092a0:	sub    rsp,0x8
  4092a4:	mov    rdi,QWORD PTR [rip+0xbe4d]        # 4150f8 <rb_strcasecmp@plt+0x12be8>
  4092ab:	test   rdi,rdi
  4092ae:	je     4092b5 <rb_strcasecmp@plt+0x6da5>
  4092b0:	call   4022c0 <rb_close@plt>
  4092b5:	mov    rdi,QWORD PTR [rip+0xbefc]        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  4092bc:	test   rdi,rdi
  4092bf:	je     4092c6 <rb_strcasecmp@plt+0x6db6>
  4092c1:	call   4022c0 <rb_close@plt>
  4092c6:	lea    rdx,[rip+0xbd73]        # 415040 <rb_strcasecmp@plt+0x12b30>
  4092cd:	mov    ecx,0x30
  4092d2:	xor    eax,eax
  4092d4:	mov    rdi,rdx
  4092d7:	rep stos QWORD PTR es:[rdi],rax
  4092da:	add    rsp,0x8
  4092de:	ret    
  4092df:	nop
  4092e0:	push   rbp
  4092e1:	lea    r8,[rip+0x2ced]        # 40bfd5 <rb_strcasecmp@plt+0x9ac5>
  4092e8:	mov    edx,0x1
  4092ed:	mov    ecx,0x80
  4092f2:	mov    esi,0x80
  4092f7:	mov    rbp,rsp
  4092fa:	push   r14
  4092fc:	push   rbx
  4092fd:	mov    rbx,rdi
  409300:	sub    rsp,0x98
  409307:	mov    r9,QWORD PTR [rdi+0x18]
  40930b:	mov    rax,QWORD PTR fs:0x28
  409314:	mov    QWORD PTR [rbp-0x18],rax
  409318:	xor    eax,eax
  40931a:	lea    rax,[rbp-0xa0]
  409321:	mov    r14,rax
  409324:	movzx  eax,WORD PTR [r9+0x36]
  409329:	mov    rdi,r14
  40932c:	push   rax
  40932d:	xor    eax,eax
  40932f:	call   402480 <__snprintf_chk@plt>
  409334:	mov    rdx,r14
  409337:	mov    ecx,DWORD PTR [rdx]
  409339:	add    rdx,0x4
  40933d:	lea    eax,[rcx-0x1010101]
  409343:	andn   eax,ecx,eax
  409348:	and    eax,0x80808080
  40934d:	je     409337 <rb_strcasecmp@plt+0x6e27>
  40934f:	mov    ecx,eax
  409351:	mov    rdi,QWORD PTR [rbx+0x8]
  409355:	shr    ecx,0x10
  409358:	test   eax,0x8080
  40935d:	cmove  eax,ecx
  409360:	lea    rcx,[rdx+0x2]
  409364:	mov    esi,eax
  409366:	cmove  rdx,rcx
  40936a:	add    sil,al
  40936d:	mov    rsi,r14
  409370:	sbb    rdx,0x3
  409374:	sub    rdx,r14
  409377:	call   402170 <rb_write@plt>
  40937c:	test   rax,rax
  40937f:	pop    rdx
  409380:	pop    rcx
  409381:	jle    4093bb <rb_strcasecmp@plt+0x6eab>
  409383:	mov    rax,QWORD PTR [rbx+0x10]
  409387:	mov    rdi,rax
  40938a:	mov    r14,rax
  40938d:	call   4021f0 <strlen@plt>
  409392:	mov    rdi,QWORD PTR [rbx+0x8]
  409396:	lea    edx,[rax+0x1]
  409399:	mov    rsi,r14
  40939c:	call   402170 <rb_write@plt>
  4093a1:	test   rax,rax
  4093a4:	jle    4093bb <rb_strcasecmp@plt+0x6eab>
  4093a6:	mov    rdi,QWORD PTR [rbx+0x8]
  4093aa:	lea    rsi,[rip+0x2c3d]        # 40bfee <rb_strcasecmp@plt+0x9ade>
  4093b1:	mov    edx,0x2
  4093b6:	call   402170 <rb_write@plt>
  4093bb:	mov    rax,QWORD PTR [rbp-0x18]
  4093bf:	xor    rax,QWORD PTR fs:0x28
  4093c8:	jne    4093d3 <rb_strcasecmp@plt+0x6ec3>
  4093ca:	lea    rsp,[rbp-0x10]
  4093ce:	pop    rbx
  4093cf:	pop    r14
  4093d1:	pop    rbp
  4093d2:	ret    
  4093d3:	call   402380 <__stack_chk_fail@plt>
  4093d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093e0:	push   rbp
  4093e1:	push   rbx
  4093e2:	mov    rbx,rdi
  4093e5:	sub    rsp,0x38
  4093e9:	mov    edx,DWORD PTR [rip+0x2cd1]        # 40c0c0 <rb_strcasecmp@plt+0x9bb0>
  4093ef:	mov    rax,QWORD PTR fs:0x28
  4093f8:	mov    QWORD PTR [rsp+0x28],rax
  4093fd:	xor    eax,eax
  4093ff:	mov    rax,QWORD PTR [rdi]
  409402:	mov    rsi,rsp
  409405:	mov    DWORD PTR [rsp],edx
  409408:	movzx  edx,WORD PTR [rip+0x2cb5]        # 40c0c4 <rb_strcasecmp@plt+0x9bb4>
  40940f:	movzx  eax,WORD PTR [rax+0xf8]
  409416:	mov    WORD PTR [rsp+0x4],dx
  40941b:	cmp    ax,0x2
  40941f:	je     4094a0 <rb_strcasecmp@plt+0x6f90>
  409421:	cmp    ax,0xa
  409425:	jne    40947f <rb_strcasecmp@plt+0x6f6f>
  409427:	mov    rax,QWORD PTR [rdi+0x18]
  40942b:	mov    BYTE PTR [rsp+0x6],0x4
  409430:	mov    r9,QWORD PTR [rax+0x40]
  409434:	mov    r10,QWORD PTR [rax+0x48]
  409438:	movzx  eax,WORD PTR [rax+0x3a]
  40943c:	mov    QWORD PTR [rsp+0x7],r9
  409441:	mov    QWORD PTR [rsp+0xf],r10
  409446:	mov    WORD PTR [rsp+0x17],ax
  40944b:	lea    rax,[rsp+0x19]
  409450:	mov    rdi,QWORD PTR [rbx+0x8]
  409454:	mov    rdx,rsi
  409457:	sub    rdx,rax
  40945a:	call   402170 <rb_write@plt>
  40945f:	test   rax,rax
  409462:	jle    40947f <rb_strcasecmp@plt+0x6f6f>
  409464:	mov    rbp,QWORD PTR [rbx+0x10]
  409468:	mov    rdi,rbp
  40946b:	call   4021f0 <strlen@plt>
  409470:	mov    rdi,QWORD PTR [rbx+0x8]
  409474:	lea    edx,[rax+0x1]
  409477:	mov    rsi,rbp
  40947a:	call   402170 <rb_write@plt>
  40947f:	mov    rax,QWORD PTR [rsp+0x28]
  409484:	xor    rax,QWORD PTR fs:0x28
  40948d:	jne    4094c0 <rb_strcasecmp@plt+0x6fb0>
  40948f:	add    rsp,0x38
  409493:	pop    rbx
  409494:	pop    rbp
  409495:	ret    
  409496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094a0:	mov    rax,QWORD PTR [rdi+0x18]
  4094a4:	mov    BYTE PTR [rsp+0x6],0x1
  4094a9:	mov    edx,DWORD PTR [rax+0x3c]
  4094ac:	movzx  eax,WORD PTR [rax+0x3a]
  4094b0:	mov    DWORD PTR [rsp+0x7],edx
  4094b4:	mov    WORD PTR [rsp+0xb],ax
  4094b9:	lea    rax,[rsp+0xd]
  4094be:	jmp    409450 <rb_strcasecmp@plt+0x6f40>
  4094c0:	call   402380 <__stack_chk_fail@plt>
  4094c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4094d0:	push   rbp
  4094d1:	push   rbx
  4094d2:	mov    rbx,rdi
  4094d5:	sub    rsp,0x28
  4094d9:	mov    rax,QWORD PTR fs:0x28
  4094e2:	mov    QWORD PTR [rsp+0x18],rax
  4094e7:	xor    eax,eax
  4094e9:	mov    eax,0x104
  4094ee:	lea    rsi,[rsp+0xf]
  4094f3:	mov    BYTE PTR [rsp+0x17],0x0
  4094f8:	mov    WORD PTR [rsp+0xf],ax
  4094fd:	mov    rax,QWORD PTR [rdi+0x18]
  409501:	mov    rdi,QWORD PTR [rdi+0x8]
  409505:	movzx  edx,WORD PTR [rax+0x3a]
  409509:	mov    eax,DWORD PTR [rax+0x3c]
  40950c:	mov    DWORD PTR [rsp+0x13],eax
  409510:	mov    WORD PTR [rsp+0x11],dx
  409515:	mov    edx,0x9
  40951a:	call   402170 <rb_write@plt>
  40951f:	test   rax,rax
  409522:	js     40953f <rb_strcasecmp@plt+0x702f>
  409524:	mov    rbp,QWORD PTR [rbx+0x10]
  409528:	mov    rdi,rbp
  40952b:	call   4021f0 <strlen@plt>
  409530:	mov    rdi,QWORD PTR [rbx+0x8]
  409534:	lea    edx,[rax+0x1]
  409537:	mov    rsi,rbp
  40953a:	call   402170 <rb_write@plt>
  40953f:	mov    rax,QWORD PTR [rsp+0x18]
  409544:	xor    rax,QWORD PTR fs:0x28
  40954d:	jne    409556 <rb_strcasecmp@plt+0x7046>
  40954f:	add    rsp,0x28
  409553:	pop    rbx
  409554:	pop    rbp
  409555:	ret    
  409556:	call   402380 <__stack_chk_fail@plt>
  40955b:	nop    DWORD PTR [rax+rax*1+0x0]
  409560:	push   rbp
  409561:	push   rbx
  409562:	xor    esi,esi
  409564:	mov    rbx,rdx
  409567:	sub    rsp,0x8
  40956b:	mov    rdi,QWORD PTR [rdx+0x8]
  40956f:	mov    rbp,QWORD PTR [rdx]
  409572:	mov    edx,0xa
  409577:	call   4022d0 <strtol@plt>
  40957c:	lea    edx,[rax-0x1]
  40957f:	cmp    edx,0xfffe
  409585:	ja     409598 <rb_strcasecmp@plt+0x7088>
  409587:	add    rsp,0x8
  40958b:	mov    rdi,rbp
  40958e:	movzx  esi,ax
  409591:	pop    rbx
  409592:	pop    rbp
  409593:	jmp    408d50 <rb_strcasecmp@plt+0x6840>
  409598:	mov    rcx,QWORD PTR [rbx+0x8]
  40959c:	mov    rdx,QWORD PTR [rbx]
  40959f:	lea    rsi,[rip+0x2852]        # 40bdf8 <rb_strcasecmp@plt+0x98e8>
  4095a6:	mov    edi,0x43
  4095ab:	xor    eax,eax
  4095ad:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  4095b2:	mov    edi,0x3
  4095b7:	call   4020b0 <exit@plt>
  4095bc:	nop    DWORD PTR [rax+0x0]
  4095c0:	push   rbp
  4095c1:	push   rbx
  4095c2:	sub    rsp,0x28
  4095c6:	mov    rbx,QWORD PTR [rip+0xbc03]        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  4095cd:	mov    rax,QWORD PTR fs:0x28
  4095d6:	mov    QWORD PTR [rsp+0x18],rax
  4095db:	xor    eax,eax
  4095dd:	test   rbx,rbx
  4095e0:	je     409650 <rb_strcasecmp@plt+0x7140>
  4095e2:	mov    rbp,QWORD PTR [rbx+0x10]
  4095e6:	jmp    409618 <rb_strcasecmp@plt+0x7108>
  4095e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4095f0:	mov    QWORD PTR [rdx+0x10],rax
  4095f4:	mov    QWORD PTR [rbx+0x8],0x0
  4095fc:	mov    QWORD PTR [rbx+0x10],0x0
  409604:	sub    QWORD PTR [rip+0xbbd4],0x1        # 4151e0 <rb_strcasecmp@plt+0x12cd0>
  40960c:	test   rbp,rbp
  40960f:	je     409650 <rb_strcasecmp@plt+0x7140>
  409611:	mov    rbx,rbp
  409614:	mov    rbp,QWORD PTR [rbp+0x10]
  409618:	mov    rdi,QWORD PTR [rbx]
  40961b:	test   rdi,rdi
  40961e:	je     409625 <rb_strcasecmp@plt+0x7115>
  409620:	call   4021e0 <free@plt>
  409625:	mov    rax,QWORD PTR [rbx+0x10]
  409629:	mov    rdx,QWORD PTR [rbx+0x8]
  40962d:	test   rax,rax
  409630:	je     4096b8 <rb_strcasecmp@plt+0x71a8>
  409636:	mov    QWORD PTR [rax+0x8],rdx
  40963a:	mov    rdx,QWORD PTR [rbx+0x8]
  40963e:	test   rdx,rdx
  409641:	jne    4095f0 <rb_strcasecmp@plt+0x70e0>
  409643:	mov    QWORD PTR [rip+0xbb86],rax        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  40964a:	jmp    4095f4 <rb_strcasecmp@plt+0x70e4>
  40964c:	nop    DWORD PTR [rax+0x0]
  409650:	mov    rbx,0x4151f0
  409657:	mov    rsi,rsp
  40965a:	mov    rbp,rsp
  40965d:	mov    rdi,QWORD PTR [rbx]
  409660:	call   402230 <rb_dictionary_foreach_start@plt>
  409665:	jmp    409683 <rb_strcasecmp@plt+0x7173>
  409667:	nop    WORD PTR [rax+rax*1+0x0]
  409670:	mov    rdi,rax
  409673:	call   4088f0 <rb_strcasecmp@plt+0x63e0>
  409678:	mov    rdi,QWORD PTR [rbx]
  40967b:	mov    rsi,rbp
  40967e:	call   4021c0 <rb_dictionary_foreach_next@plt>
  409683:	mov    rdi,QWORD PTR [rbx]
  409686:	mov    rsi,rbp
  409689:	call   402110 <rb_dictionary_foreach_cur@plt>
  40968e:	test   rax,rax
  409691:	jne    409670 <rb_strcasecmp@plt+0x7160>
  409693:	mov    rax,QWORD PTR [rsp+0x18]
  409698:	xor    rax,QWORD PTR fs:0x28
  4096a1:	mov    BYTE PTR [rip+0xbb18],0x0        # 4151c0 <rb_strcasecmp@plt+0x12cb0>
  4096a8:	jne    4096c4 <rb_strcasecmp@plt+0x71b4>
  4096aa:	add    rsp,0x28
  4096ae:	pop    rbx
  4096af:	pop    rbp
  4096b0:	ret    
  4096b1:	nop    DWORD PTR [rax+0x0]
  4096b8:	mov    QWORD PTR [rip+0xbb19],rdx        # 4151d8 <rb_strcasecmp@plt+0x12cc8>
  4096bf:	jmp    40963e <rb_strcasecmp@plt+0x712e>
  4096c4:	call   402380 <__stack_chk_fail@plt>
  4096c9:	nop    DWORD PTR [rax+0x0]
  4096d0:	push   r13
  4096d2:	push   r12
  4096d4:	xor    esi,esi
  4096d6:	push   rbp
  4096d7:	push   rbx
  4096d8:	mov    rbp,rdx
  4096db:	sub    rsp,0x8
  4096df:	mov    rdi,QWORD PTR [rdx+0x8]
  4096e3:	mov    edx,0xa
  4096e8:	call   4022d0 <strtol@plt>
  4096ed:	mov    esi,0x38
  4096f2:	mov    edi,0x1
  4096f7:	mov    r12,rax
  4096fa:	call   402400 <calloc@plt>
  4096ff:	test   rax,rax
  409702:	je     4098c2 <rb_strcasecmp@plt+0x73b2>
  409708:	mov    rbx,rax
  40970b:	lea    eax,[r12-0x1]
  409710:	cmp    eax,0xfffe
  409715:	ja     409976 <rb_strcasecmp@plt+0x7466>
  40971b:	mov    r13,QWORD PTR [rbp+0x0]
  40971f:	lea    rsi,[rip+0x28cb]        # 40bff1 <rb_strcasecmp@plt+0x9ae1>
  409726:	mov    WORD PTR [rbx+0x14],r12w
  40972b:	mov    rdi,r13
  40972e:	call   4020f0 <strcasecmp@plt>
  409733:	test   eax,eax
  409735:	je     409828 <rb_strcasecmp@plt+0x7318>
  40973b:	lea    rsi,[rip+0x28b6]        # 40bff8 <rb_strcasecmp@plt+0x9ae8>
  409742:	mov    rdi,r13
  409745:	call   4020f0 <strcasecmp@plt>
  40974a:	test   eax,eax
  40974c:	jne    409870 <rb_strcasecmp@plt+0x7360>
  409752:	lea    r8,[rip+0x28bf]        # 40c018 <rb_strcasecmp@plt+0x9b08>
  409759:	mov    DWORD PTR [rbx+0x10],0x2
  409760:	movzx  r9d,r12w
  409764:	mov    ecx,0x10
  409769:	mov    edx,0x1
  40976e:	mov    esi,0x10
  409773:	mov    rdi,rbx
  409776:	xor    eax,eax
  409778:	call   402480 <__snprintf_chk@plt>
  40977d:	lea    rax,[rip+0xfffffffffffffc5c]        # 4093e0 <rb_strcasecmp@plt+0x6ed0>
  409784:	mov    BYTE PTR [rbx+0x16],0x0
  409788:	mov    QWORD PTR [rbx+0x18],rax
  40978c:	movzx  ecx,WORD PTR [rbx+0x14]
  409790:	mov    r8,QWORD PTR [rip+0xba39]        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  409797:	mov    esi,DWORD PTR [rbx+0x10]
  40979a:	test   r8,r8
  40979d:	mov    edi,ecx
  40979f:	je     409944 <rb_strcasecmp@plt+0x7434>
  4097a5:	mov    rax,r8
  4097a8:	jmp    4097b9 <rb_strcasecmp@plt+0x72a9>
  4097aa:	nop    WORD PTR [rax+rax*1+0x0]
  4097b0:	mov    rax,QWORD PTR [rax+0x10]
  4097b4:	test   rax,rax
  4097b7:	je     4097f0 <rb_strcasecmp@plt+0x72e0>
  4097b9:	mov    rdx,QWORD PTR [rax]
  4097bc:	cmp    esi,DWORD PTR [rdx+0x10]
  4097bf:	jne    4097b0 <rb_strcasecmp@plt+0x72a0>
  4097c1:	cmp    di,WORD PTR [rdx+0x14]
  4097c5:	jne    4097b0 <rb_strcasecmp@plt+0x72a0>
  4097c7:	mov    rdx,QWORD PTR [rbp+0x0]
  4097cb:	lea    rsi,[rip+0x269e]        # 40be70 <rb_strcasecmp@plt+0x9960>
  4097d2:	mov    edi,0x43
  4097d7:	xor    eax,eax
  4097d9:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  4097de:	add    rsp,0x8
  4097e2:	mov    rdi,rbx
  4097e5:	pop    rbx
  4097e6:	pop    rbp
  4097e7:	pop    r12
  4097e9:	pop    r13
  4097eb:	jmp    4021e0 <free@plt>
  4097f0:	lea    rax,[rbx+0x20]
  4097f4:	mov    QWORD PTR [rbx+0x20],rbx
  4097f8:	mov    QWORD PTR [rbx+0x28],0x0
  409800:	mov    QWORD PTR [rbx+0x30],r8
  409804:	mov    QWORD PTR [r8+0x8],rax
  409808:	mov    QWORD PTR [rip+0xb9c1],rax        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  40980f:	add    QWORD PTR [rip+0xb9c9],0x1        # 4151e0 <rb_strcasecmp@plt+0x12cd0>
  409817:	add    rsp,0x8
  40981b:	pop    rbx
  40981c:	pop    rbp
  40981d:	pop    r12
  40981f:	pop    r13
  409821:	ret    
  409822:	nop    WORD PTR [rax+rax*1+0x0]
  409828:	lea    r8,[rip+0x2815]        # 40c044 <rb_strcasecmp@plt+0x9b34>
  40982f:	mov    DWORD PTR [rbx+0x10],0x1
  409836:	movzx  r9d,r12w
  40983a:	mov    ecx,0x10
  40983f:	mov    edx,0x1
  409844:	mov    esi,0x10
  409849:	mov    rdi,rbx
  40984c:	xor    eax,eax
  40984e:	call   402480 <__snprintf_chk@plt>
  409853:	lea    rax,[rip+0xfffffffffffffc76]        # 4094d0 <rb_strcasecmp@plt+0x6fc0>
  40985a:	mov    BYTE PTR [rbx+0x16],0x0
  40985e:	mov    QWORD PTR [rbx+0x18],rax
  409862:	jmp    40978c <rb_strcasecmp@plt+0x727c>
  409867:	nop    WORD PTR [rax+rax*1+0x0]
  409870:	lea    rsi,[rip+0x2788]        # 40bfff <rb_strcasecmp@plt+0x9aef>
  409877:	mov    rdi,r13
  40987a:	call   4020f0 <strcasecmp@plt>
  40987f:	test   eax,eax
  409881:	jne    4098c7 <rb_strcasecmp@plt+0x73b7>
  409883:	lea    r8,[rip+0x2799]        # 40c023 <rb_strcasecmp@plt+0x9b13>
  40988a:	mov    DWORD PTR [rbx+0x10],0x3
  409891:	movzx  r9d,r12w
  409895:	mov    ecx,0x10
  40989a:	mov    edx,0x1
  40989f:	mov    esi,0x10
  4098a4:	mov    rdi,rbx
  4098a7:	xor    eax,eax
  4098a9:	call   402480 <__snprintf_chk@plt>
  4098ae:	lea    rax,[rip+0xfffffffffffffa2b]        # 4092e0 <rb_strcasecmp@plt+0x6dd0>
  4098b5:	mov    BYTE PTR [rbx+0x16],0x0
  4098b9:	mov    QWORD PTR [rbx+0x18],rax
  4098bd:	jmp    40978c <rb_strcasecmp@plt+0x727c>
  4098c2:	call   402330 <rb_outofmemory@plt>
  4098c7:	lea    rsi,[rip+0x273d]        # 40c00b <rb_strcasecmp@plt+0x9afb>
  4098ce:	mov    rdi,r13
  4098d1:	call   4020f0 <strcasecmp@plt>
  4098d6:	test   eax,eax
  4098d8:	jne    409919 <rb_strcasecmp@plt+0x7409>
  4098da:	lea    r8,[rip+0x2752]        # 40c033 <rb_strcasecmp@plt+0x9b23>
  4098e1:	mov    DWORD PTR [rbx+0x10],0x4
  4098e8:	movzx  r9d,r12w
  4098ec:	mov    ecx,0x10
  4098f1:	mov    edx,0x1
  4098f6:	mov    esi,0x10
  4098fb:	mov    rdi,rbx
  4098fe:	xor    eax,eax
  409900:	call   402480 <__snprintf_chk@plt>
  409905:	lea    rax,[rip+0xfffffffffffff9d4]        # 4092e0 <rb_strcasecmp@plt+0x6dd0>
  40990c:	mov    BYTE PTR [rbx+0x16],0x1
  409910:	mov    QWORD PTR [rbx+0x18],rax
  409914:	jmp    40978c <rb_strcasecmp@plt+0x727c>
  409919:	lea    rsi,[rip+0x2520]        # 40be40 <rb_strcasecmp@plt+0x9930>
  409920:	mov    edi,0x43
  409925:	mov    DWORD PTR [rbx+0x10],0x0
  40992c:	movzx  ecx,r12w
  409930:	mov    rdx,r13
  409933:	xor    eax,eax
  409935:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40993a:	mov    edi,0x3
  40993f:	call   4020b0 <exit@plt>
  409944:	cmp    QWORD PTR [rip+0xb88c],0x0        # 4151d8 <rb_strcasecmp@plt+0x12cc8>
  40994c:	lea    rax,[rbx+0x20]
  409950:	mov    QWORD PTR [rbx+0x20],rbx
  409954:	mov    QWORD PTR [rbx+0x28],0x0
  40995c:	mov    QWORD PTR [rbx+0x30],0x0
  409964:	jne    409808 <rb_strcasecmp@plt+0x72f8>
  40996a:	mov    QWORD PTR [rip+0xb867],rax        # 4151d8 <rb_strcasecmp@plt+0x12cc8>
  409971:	jmp    409808 <rb_strcasecmp@plt+0x72f8>
  409976:	mov    rcx,QWORD PTR [rbp+0x8]
  40997a:	mov    rdx,QWORD PTR [rbp+0x0]
  40997e:	lea    rsi,[rip+0x2493]        # 40be18 <rb_strcasecmp@plt+0x9908>
  409985:	mov    edi,0x43
  40998a:	xor    eax,eax
  40998c:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  409991:	mov    edi,0x3
  409996:	call   4020b0 <exit@plt>
  40999b:	nop    DWORD PTR [rax+rax*1+0x0]
  4099a0:	push   r13
  4099a2:	push   r12
  4099a4:	mov    r12,rsi
  4099a7:	push   rbp
  4099a8:	push   rbx
  4099a9:	mov    esi,0x38
  4099ae:	mov    rbx,rdi
  4099b1:	sub    rsp,0x128
  4099b8:	mov    rax,QWORD PTR fs:0x28
  4099c1:	mov    QWORD PTR [rsp+0x118],rax
  4099c9:	xor    eax,eax
  4099cb:	mov    rax,0x410d80
  4099d2:	mov    eax,DWORD PTR [rax+0x18]
  4099d5:	shl    rax,0x5
  4099d9:	add    rax,QWORD PTR [rdi+0x1d0]
  4099e0:	mov    edi,0x1
  4099e5:	mov    r13,QWORD PTR [rax+0x10]
  4099e9:	call   402400 <calloc@plt>
  4099ee:	test   rax,rax
  4099f1:	je     409d50 <rb_strcasecmp@plt+0x7840>
  4099f7:	movzx  edi,WORD PTR [rbx+0xf8]
  4099fe:	mov    rbp,rax
  409a01:	mov    DWORD PTR [rsp+0xc],0x1
  409a09:	lea    rax,[rip+0xb630]        # 415040 <rb_strcasecmp@plt+0x12b30>
  409a10:	cmp    di,0xa
  409a14:	je     409d10 <rb_strcasecmp@plt+0x7800>
  409a1a:	cmp    QWORD PTR [rax+0xb8],0x0
  409a22:	je     409ce5 <rb_strcasecmp@plt+0x77d5>
  409a28:	mov    rdx,QWORD PTR [rbx+0xf8]
  409a2f:	mov    rcx,r12
  409a32:	mov    esi,0x1
  409a37:	mov    QWORD PTR [rsp+0x10],rdx
  409a3c:	mov    rdx,QWORD PTR [rbx+0x100]
  409a43:	mov    QWORD PTR [rsp+0x18],rdx
  409a48:	mov    rdx,QWORD PTR [rbx+0x108]
  409a4f:	mov    QWORD PTR [rsp+0x20],rdx
  409a54:	mov    rdx,QWORD PTR [rbx+0x110]
  409a5b:	mov    QWORD PTR [rsp+0x28],rdx
  409a60:	mov    rdx,QWORD PTR [rbx+0x118]
  409a67:	mov    QWORD PTR [rsp+0x30],rdx
  409a6c:	mov    rdx,QWORD PTR [rbx+0x120]
  409a73:	mov    QWORD PTR [rsp+0x38],rdx
  409a78:	mov    rdx,QWORD PTR [rbx+0x128]
  409a7f:	mov    QWORD PTR [rsp+0x40],rdx
  409a84:	mov    rdx,QWORD PTR [rbx+0x130]
  409a8b:	mov    QWORD PTR [rsp+0x48],rdx
  409a90:	mov    rdx,QWORD PTR [rbx+0x138]
  409a97:	mov    QWORD PTR [rsp+0x50],rdx
  409a9c:	mov    rdx,QWORD PTR [rbx+0x140]
  409aa3:	mov    QWORD PTR [rsp+0x58],rdx
  409aa8:	mov    rdx,QWORD PTR [rbx+0x148]
  409aaf:	mov    QWORD PTR [rsp+0x60],rdx
  409ab4:	mov    rdx,QWORD PTR [rbx+0x150]
  409abb:	mov    QWORD PTR [rsp+0x68],rdx
  409ac0:	mov    rdx,QWORD PTR [rbx+0x158]
  409ac7:	mov    QWORD PTR [rsp+0x70],rdx
  409acc:	mov    rdx,QWORD PTR [rbx+0x160]
  409ad3:	mov    QWORD PTR [rsp+0x78],rdx
  409ad8:	mov    rdx,QWORD PTR [rbx+0x168]
  409adf:	mov    QWORD PTR [rsp+0x80],rdx
  409ae7:	mov    rdx,QWORD PTR [rbx+0x170]
  409aee:	mov    QWORD PTR [rsp+0x88],rdx
  409af6:	mov    rdx,QWORD PTR [rax+0x38]
  409afa:	mov    QWORD PTR [rsp+0x90],rdx
  409b02:	mov    rdx,QWORD PTR [rax+0x40]
  409b06:	mov    QWORD PTR [rsp+0x98],rdx
  409b0e:	mov    rdx,QWORD PTR [rax+0x48]
  409b12:	mov    QWORD PTR [rsp+0xa0],rdx
  409b1a:	mov    rdx,QWORD PTR [rax+0x50]
  409b1e:	mov    QWORD PTR [rsp+0xa8],rdx
  409b26:	mov    rdx,QWORD PTR [rax+0x58]
  409b2a:	mov    QWORD PTR [rsp+0xb0],rdx
  409b32:	mov    rdx,QWORD PTR [rax+0x60]
  409b36:	mov    QWORD PTR [rsp+0xb8],rdx
  409b3e:	mov    rdx,QWORD PTR [rax+0x68]
  409b42:	mov    QWORD PTR [rsp+0xc0],rdx
  409b4a:	mov    rdx,QWORD PTR [rax+0x70]
  409b4e:	mov    QWORD PTR [rsp+0xc8],rdx
  409b56:	mov    rdx,QWORD PTR [rax+0x78]
  409b5a:	mov    QWORD PTR [rsp+0xd0],rdx
  409b62:	mov    rdx,QWORD PTR [rax+0x80]
  409b69:	mov    QWORD PTR [rsp+0xd8],rdx
  409b71:	mov    rdx,QWORD PTR [rax+0x88]
  409b78:	mov    QWORD PTR [rsp+0xe0],rdx
  409b80:	mov    rdx,QWORD PTR [rax+0x90]
  409b87:	mov    QWORD PTR [rsp+0xe8],rdx
  409b8f:	mov    rdx,QWORD PTR [rax+0x98]
  409b96:	mov    QWORD PTR [rsp+0xf0],rdx
  409b9e:	mov    rdx,QWORD PTR [rax+0xa0]
  409ba5:	mov    QWORD PTR [rsp+0xf8],rdx
  409bad:	mov    rdx,QWORD PTR [rax+0xa8]
  409bb4:	mov    QWORD PTR [rsp+0x100],rdx
  409bbc:	mov    rdx,QWORD PTR [rax+0xb0]
  409bc3:	mov    QWORD PTR [rsp+0x108],rdx
  409bcb:	mov    QWORD PTR [rbp+0x0],rbx
  409bcf:	xor    edx,edx
  409bd1:	mov    QWORD PTR [rbp+0x10],r12
  409bd5:	mov    QWORD PTR [rbp+0x18],rax
  409bd9:	call   4020e0 <rb_socket@plt>
  409bde:	test   rax,rax
  409be1:	mov    QWORD PTR [rbp+0x8],rax
  409be5:	je     409cc0 <rb_strcasecmp@plt+0x77b0>
  409beb:	mov    rdi,rax
  409bee:	call   4020a0 <rb_get_fd@plt>
  409bf3:	lea    rcx,[rsp+0xc]
  409bf8:	mov    edx,0x1
  409bfd:	mov    r8d,0x4
  409c03:	mov    esi,0x6
  409c08:	mov    edi,eax
  409c0a:	call   402180 <setsockopt@plt>
  409c0f:	xor    eax,eax
  409c11:	lea    rdx,[rbp+0x20]
  409c15:	mov    WORD PTR [rsp+0x92],ax
  409c1d:	movzx  eax,WORD PTR [r12+0x14]
  409c23:	rol    ax,0x8
  409c27:	test   r13,r13
  409c2a:	mov    WORD PTR [rsp+0x12],ax
  409c2f:	je     409d5a <rb_strcasecmp@plt+0x784a>
  409c35:	mov    rax,QWORD PTR [r13+0x0]
  409c39:	mov    QWORD PTR [rbp+0x20],rbp
  409c3d:	mov    QWORD PTR [rbp+0x28],0x0
  409c45:	test   rax,rax
  409c48:	mov    QWORD PTR [rbp+0x30],rax
  409c4c:	je     409d38 <rb_strcasecmp@plt+0x7828>
  409c52:	mov    QWORD PTR [rax+0x8],rdx
  409c56:	add    QWORD PTR [r13+0x10],0x1
  409c5b:	cmp    BYTE PTR [r12+0x16],0x0
  409c61:	lea    rsi,[rsp+0x10]
  409c66:	mov    QWORD PTR [r13+0x0],rdx
  409c6a:	mov    rdi,QWORD PTR [rbp+0x8]
  409c6e:	lea    rdx,[rsp+0x90]
  409c76:	mov    r9d,DWORD PTR [rip+0x70f3]        # 410d70 <rb_strcasecmp@plt+0xe860>
  409c7d:	mov    r8,rbp
  409c80:	lea    rcx,[rip+0x6c9]        # 40a350 <rb_strcasecmp@plt+0x7e40>
  409c87:	jne    409d28 <rb_strcasecmp@plt+0x7818>
  409c8d:	call   402070 <rb_connect_tcp@plt>
  409c92:	mov    rax,QWORD PTR [rsp+0x118]
  409c9a:	xor    rax,QWORD PTR fs:0x28
  409ca3:	jne    409d55 <rb_strcasecmp@plt+0x7845>
  409ca9:	add    rsp,0x128
  409cb0:	pop    rbx
  409cb1:	pop    rbp
  409cb2:	pop    r12
  409cb4:	pop    r13
  409cb6:	ret    
  409cb7:	nop    WORD PTR [rax+rax*1+0x0]
  409cc0:	call   402340 <__errno_location@plt>
  409cc5:	mov    edi,DWORD PTR [rax]
  409cc7:	call   402280 <strerror@plt>
  409ccc:	lea    rsi,[rip+0x21cd]        # 40bea0 <rb_strcasecmp@plt+0x9990>
  409cd3:	mov    rcx,rax
  409cd6:	mov    rdx,r12
  409cd9:	mov    edi,0x57
  409cde:	xor    eax,eax
  409ce0:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  409ce5:	mov    rax,QWORD PTR [rsp+0x118]
  409ced:	xor    rax,QWORD PTR fs:0x28
  409cf6:	jne    409d55 <rb_strcasecmp@plt+0x7845>
  409cf8:	add    rsp,0x128
  409cff:	mov    rdi,rbp
  409d02:	pop    rbx
  409d03:	pop    rbp
  409d04:	pop    r12
  409d06:	pop    r13
  409d08:	jmp    4021e0 <free@plt>
  409d0d:	nop    DWORD PTR [rax]
  409d10:	cmp    DWORD PTR [r12+0x10],0x1
  409d16:	lea    rax,[rip+0xb3e3]        # 415100 <rb_strcasecmp@plt+0x12bf0>
  409d1d:	jne    409a1a <rb_strcasecmp@plt+0x750a>
  409d23:	jmp    409ce5 <rb_strcasecmp@plt+0x77d5>
  409d25:	nop    DWORD PTR [rax]
  409d28:	call   402060 <rb_connect_tcp_ssl@plt>
  409d2d:	jmp    409c92 <rb_strcasecmp@plt+0x7782>
  409d32:	nop    WORD PTR [rax+rax*1+0x0]
  409d38:	cmp    QWORD PTR [r13+0x8],0x0
  409d3d:	jne    409c56 <rb_strcasecmp@plt+0x7746>
  409d43:	mov    QWORD PTR [r13+0x8],rdx
  409d47:	jmp    409c56 <rb_strcasecmp@plt+0x7746>
  409d4c:	nop    DWORD PTR [rax+0x0]
  409d50:	call   402330 <rb_outofmemory@plt>
  409d55:	call   402380 <__stack_chk_fail@plt>
  409d5a:	lea    rcx,[rip+0x2367]        # 40c0c8 <rb_strcasecmp@plt+0x9bb8>
  409d61:	lea    rsi,[rip+0x17e0]        # 40b548 <rb_strcasecmp@plt+0x9038>
  409d68:	lea    rdi,[rip+0x1cc5]        # 40ba34 <rb_strcasecmp@plt+0x9524>
  409d6f:	mov    edx,0x91
  409d74:	call   4020c0 <__assert_fail@plt>
  409d79:	nop    DWORD PTR [rax+0x0]
  409d80:	push   r13
  409d82:	push   r12
  409d84:	mov    r13,rdi
  409d87:	push   rbp
  409d88:	push   rbx
  409d89:	lea    r12,[rip+0x1d09]        # 40ba99 <rb_strcasecmp@plt+0x9589>
  409d90:	sub    rsp,0x8
  409d94:	mov    rax,0x415200
  409d9b:	mov    rbx,QWORD PTR [rax]
  409d9e:	test   rbx,rbx
  409da1:	jne    409db1 <rb_strcasecmp@plt+0x78a1>
  409da3:	jmp    409de8 <rb_strcasecmp@plt+0x78d8>
  409da5:	nop    DWORD PTR [rax]
  409da8:	mov    rbx,QWORD PTR [rbx+0x10]
  409dac:	test   rbx,rbx
  409daf:	je     409de8 <rb_strcasecmp@plt+0x78d8>
  409db1:	mov    rbp,QWORD PTR [rbx]
  409db4:	mov    rsi,r12
  409db7:	mov    rdi,QWORD PTR [rbp+0x20]
  409dbb:	call   4020f0 <strcasecmp@plt>
  409dc0:	test   eax,eax
  409dc2:	jne    409da8 <rb_strcasecmp@plt+0x7898>
  409dc4:	mov    edx,DWORD PTR [rbp+0x18]
  409dc7:	mov    rax,QWORD PTR [r13+0x1d0]
  409dce:	shl    rdx,0x5
  409dd2:	cmp    DWORD PTR [rax+rdx*1+0x18],0x2
  409dd7:	je     409def <rb_strcasecmp@plt+0x78df>
  409dd9:	add    rsp,0x8
  409ddd:	pop    rbx
  409dde:	pop    rbp
  409ddf:	pop    r12
  409de1:	pop    r13
  409de3:	ret    
  409de4:	nop    DWORD PTR [rax+0x0]
  409de8:	mov    rax,QWORD PTR [r13+0x1d0]
  409def:	mov    rdx,0x410d80
  409df6:	movsxd rbp,DWORD PTR [rip+0x6f73]        # 410d70 <rb_strcasecmp@plt+0xe860>
  409dfd:	mov    ebx,DWORD PTR [rdx+0x18]
  409e00:	shl    rbx,0x5
  409e04:	add    rbx,rax
  409e07:	mov    r12,QWORD PTR [rbx+0x10]
  409e0b:	call   402260 <rb_current_time@plt>
  409e10:	add    rbp,rax
  409e13:	mov    QWORD PTR [rbx+0x8],rbp
  409e17:	mov    rbx,QWORD PTR [rip+0xb3b2]        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  409e1e:	mov    BYTE PTR [r12+0x18],0x1
  409e24:	test   rbx,rbx
  409e27:	je     409e44 <rb_strcasecmp@plt+0x7934>
  409e29:	nop    DWORD PTR [rax+0x0]
  409e30:	mov    rsi,QWORD PTR [rbx]
  409e33:	mov    rdi,r13
  409e36:	call   4099a0 <rb_strcasecmp@plt+0x7490>
  409e3b:	mov    rbx,QWORD PTR [rbx+0x10]
  409e3f:	test   rbx,rbx
  409e42:	jne    409e30 <rb_strcasecmp@plt+0x7920>
  409e44:	mov    edi,DWORD PTR [r13+0x0]
  409e48:	add    rsp,0x8
  409e4c:	lea    rsi,[rip+0x207d]        # 40bed0 <rb_strcasecmp@plt+0x99c0>
  409e53:	pop    rbx
  409e54:	pop    rbp
  409e55:	pop    r12
  409e57:	pop    r13
  409e59:	xor    eax,eax
  409e5b:	jmp    4031d0 <rb_strcasecmp@plt+0xcc0>
  409e60:	mov    rax,0x410d80
  409e67:	push   r14
  409e69:	push   r13
  409e6b:	push   r12
  409e6d:	push   rbp
  409e6e:	push   rbx
  409e6f:	mov    eax,DWORD PTR [rax+0x18]
  409e72:	mov    r13,QWORD PTR [rdi+0x1d0]
  409e79:	shl    rax,0x5
  409e7d:	mov    rax,QWORD PTR [r13+rax*1+0x10]
  409e82:	test   rax,rax
  409e85:	je     409e8d <rb_strcasecmp@plt+0x797d>
  409e87:	cmp    BYTE PTR [rax+0x18],0x0
  409e8b:	je     409ea0 <rb_strcasecmp@plt+0x7990>
  409e8d:	pop    rbx
  409e8e:	pop    rbp
  409e8f:	pop    r12
  409e91:	pop    r13
  409e93:	pop    r14
  409e95:	ret    
  409e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ea0:	mov    rax,0x415200
  409ea7:	mov    r14,rdi
  409eaa:	mov    rbx,QWORD PTR [rax]
  409ead:	test   rbx,rbx
  409eb0:	je     409eeb <rb_strcasecmp@plt+0x79db>
  409eb2:	lea    r12,[rip+0x1bdb]        # 40ba94 <rb_strcasecmp@plt+0x9584>
  409eb9:	jmp    409ec9 <rb_strcasecmp@plt+0x79b9>
  409ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  409ec0:	mov    rbx,QWORD PTR [rbx+0x10]
  409ec4:	test   rbx,rbx
  409ec7:	je     409eeb <rb_strcasecmp@plt+0x79db>
  409ec9:	mov    rbp,QWORD PTR [rbx]
  409ecc:	mov    rsi,r12
  409ecf:	mov    rdi,QWORD PTR [rbp+0x20]
  409ed3:	call   4020f0 <strcasecmp@plt>
  409ed8:	test   eax,eax
  409eda:	jne    409ec0 <rb_strcasecmp@plt+0x79b0>
  409edc:	mov    eax,DWORD PTR [rbp+0x18]
  409edf:	shl    rax,0x5
  409ee3:	cmp    DWORD PTR [r13+rax*1+0x18],0x2
  409ee9:	jne    409e8d <rb_strcasecmp@plt+0x797d>
  409eeb:	pop    rbx
  409eec:	mov    rdi,r14
  409eef:	pop    rbp
  409ef0:	pop    r12
  409ef2:	pop    r13
  409ef4:	pop    r14
  409ef6:	jmp    409d80 <rb_strcasecmp@plt+0x7870>
  409efb:	nop    DWORD PTR [rax+rax*1+0x0]
  409f00:	push   r13
  409f02:	push   r12
  409f04:	mov    r13,rdi
  409f07:	push   rbp
  409f08:	push   rbx
  409f09:	sub    rsp,0x8
  409f0d:	cmp    BYTE PTR [rip+0xb2ac],0x0        # 4151c0 <rb_strcasecmp@plt+0x12cb0>
  409f14:	je     409f20 <rb_strcasecmp@plt+0x7a10>
  409f16:	cmp    QWORD PTR [rip+0xb2c2],0x0        # 4151e0 <rb_strcasecmp@plt+0x12cd0>
  409f1e:	jne    409f48 <rb_strcasecmp@plt+0x7a38>
  409f20:	mov    rax,0x410d80
  409f27:	mov    rdi,r13
  409f2a:	mov    esi,DWORD PTR [rax+0x18]
  409f2d:	call   403ef0 <rb_strcasecmp@plt+0x19e0>
  409f32:	add    rsp,0x8
  409f36:	mov    eax,0x1
  409f3b:	pop    rbx
  409f3c:	pop    rbp
  409f3d:	pop    r12
  409f3f:	pop    r13
  409f41:	ret    
  409f42:	nop    WORD PTR [rax+rax*1+0x0]
  409f48:	add    DWORD PTR [rdi+0x1cc],0x1
  409f4f:	mov    esi,0x20
  409f54:	mov    edi,0x1
  409f59:	call   402400 <calloc@plt>
  409f5e:	test   rax,rax
  409f61:	je     409ff0 <rb_strcasecmp@plt+0x7ae0>
  409f67:	mov    rdx,0x410d80
  409f6e:	mov    edx,DWORD PTR [rdx+0x18]
  409f71:	shl    rdx,0x5
  409f75:	add    rdx,QWORD PTR [r13+0x1d0]
  409f7c:	mov    QWORD PTR [rdx+0x10],rax
  409f80:	mov    rax,0x415200
  409f87:	mov    rbx,QWORD PTR [rax]
  409f8a:	test   rbx,rbx
  409f8d:	je     409fd4 <rb_strcasecmp@plt+0x7ac4>
  409f8f:	lea    r12,[rip+0x1afe]        # 40ba94 <rb_strcasecmp@plt+0x9584>
  409f96:	jmp    409fa9 <rb_strcasecmp@plt+0x7a99>
  409f98:	nop    DWORD PTR [rax+rax*1+0x0]
  409fa0:	mov    rbx,QWORD PTR [rbx+0x10]
  409fa4:	test   rbx,rbx
  409fa7:	je     409fd4 <rb_strcasecmp@plt+0x7ac4>
  409fa9:	mov    rbp,QWORD PTR [rbx]
  409fac:	mov    rsi,r12
  409faf:	mov    rdi,QWORD PTR [rbp+0x20]
  409fb3:	call   4020f0 <strcasecmp@plt>
  409fb8:	test   eax,eax
  409fba:	jne    409fa0 <rb_strcasecmp@plt+0x7a90>
  409fbc:	mov    eax,DWORD PTR [rbp+0x18]
  409fbf:	shl    rax,0x5
  409fc3:	add    rax,QWORD PTR [r13+0x1d0]
  409fca:	cmp    DWORD PTR [rax+0x18],0x2
  409fce:	jne    409f32 <rb_strcasecmp@plt+0x7a22>
  409fd4:	mov    rdi,r13
  409fd7:	call   409d80 <rb_strcasecmp@plt+0x7870>
  409fdc:	add    rsp,0x8
  409fe0:	mov    eax,0x1
  409fe5:	pop    rbx
  409fe6:	pop    rbp
  409fe7:	pop    r12
  409fe9:	pop    r13
  409feb:	ret    
  409fec:	nop    DWORD PTR [rax+0x0]
  409ff0:	call   402330 <rb_outofmemory@plt>
  409ff5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a000:	push   r15
  40a002:	push   r14
  40a004:	lea    rsi,[rip+0x1fe6]        # 40bff1 <rb_strcasecmp@plt+0x9ae1>
  40a00b:	push   r13
  40a00d:	push   r12
  40a00f:	mov    r12,rdx
  40a012:	push   rbp
  40a013:	push   rbx
  40a014:	sub    rsp,0x28
  40a018:	mov    rbx,QWORD PTR [rdx]
  40a01b:	mov    rax,QWORD PTR fs:0x28
  40a024:	mov    QWORD PTR [rsp+0x18],rax
  40a029:	xor    eax,eax
  40a02b:	mov    rdi,rbx
  40a02e:	call   4020f0 <strcasecmp@plt>
  40a033:	test   eax,eax
  40a035:	je     40a310 <rb_strcasecmp@plt+0x7e00>
  40a03b:	lea    rsi,[rip+0x1fb6]        # 40bff8 <rb_strcasecmp@plt+0x9ae8>
  40a042:	mov    rdi,rbx
  40a045:	mov    ebp,0x2
  40a04a:	call   4020f0 <strcasecmp@plt>
  40a04f:	test   eax,eax
  40a051:	jne    40a294 <rb_strcasecmp@plt+0x7d84>
  40a057:	mov    rdi,QWORD PTR [r12+0x8]
  40a05c:	mov    edx,0xa
  40a061:	xor    esi,esi
  40a063:	call   4022d0 <strtol@plt>
  40a068:	lea    edx,[rax-0x1]
  40a06b:	cmp    edx,0xfffe
  40a071:	ja     40a2e8 <rb_strcasecmp@plt+0x7dd8>
  40a077:	mov    rdx,QWORD PTR [rip+0xb152]        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  40a07e:	mov    esi,eax
  40a080:	test   rdx,rdx
  40a083:	jne    40a09d <rb_strcasecmp@plt+0x7b8d>
  40a085:	jmp    40a268 <rb_strcasecmp@plt+0x7d58>
  40a08a:	nop    WORD PTR [rax+rax*1+0x0]
  40a090:	mov    rdx,QWORD PTR [rdx+0x10]
  40a094:	test   rdx,rdx
  40a097:	je     40a268 <rb_strcasecmp@plt+0x7d58>
  40a09d:	mov    rbx,QWORD PTR [rdx]
  40a0a0:	cmp    DWORD PTR [rbx+0x10],ebp
  40a0a3:	jne    40a090 <rb_strcasecmp@plt+0x7b80>
  40a0a5:	cmp    si,WORD PTR [rbx+0x14]
  40a0a9:	jne    40a090 <rb_strcasecmp@plt+0x7b80>
  40a0ab:	mov    rbp,0x4151f0
  40a0b2:	mov    rsi,rsp
  40a0b5:	mov    r12,rsp
  40a0b8:	movabs r13,0xffffffffffff
  40a0c2:	mov    rdi,QWORD PTR [rbp+0x0]
  40a0c6:	call   402230 <rb_dictionary_foreach_start@plt>
  40a0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0d0:	mov    rdi,QWORD PTR [rbp+0x0]
  40a0d4:	mov    rsi,r12
  40a0d7:	call   402110 <rb_dictionary_foreach_cur@plt>
  40a0dc:	test   rax,rax
  40a0df:	mov    r14,rax
  40a0e2:	je     40a1f0 <rb_strcasecmp@plt+0x7ce0>
  40a0e8:	mov    rax,0x410d80
  40a0ef:	mov    eax,DWORD PTR [rax+0x18]
  40a0f2:	shl    rax,0x5
  40a0f6:	add    rax,QWORD PTR [r14+0x1d0]
  40a0fd:	mov    r15,QWORD PTR [rax+0x10]
  40a101:	test   r15,r15
  40a104:	je     40a16c <rb_strcasecmp@plt+0x7c5c>
  40a106:	mov    eax,DWORD PTR [r14+0x1cc]
  40a10d:	mov    rdx,QWORD PTR [r15]
  40a110:	lea    r8d,[rax+0x1]
  40a114:	test   rdx,rdx
  40a117:	mov    DWORD PTR [r14+0x1cc],r8d
  40a11e:	je     40a15c <rb_strcasecmp@plt+0x7c4c>
  40a120:	mov    rdi,QWORD PTR [rdx]
  40a123:	mov    rsi,r13
  40a126:	mov    rcx,r13
  40a129:	and    rsi,QWORD PTR [rbx+0x10]
  40a12d:	mov    rax,QWORD PTR [rdi+0x10]
  40a131:	and    rcx,QWORD PTR [rax+0x10]
  40a135:	cmp    rsi,rcx
  40a138:	jne    40a153 <rb_strcasecmp@plt+0x7c43>
  40a13a:	jmp    40a180 <rb_strcasecmp@plt+0x7c70>
  40a13c:	nop    DWORD PTR [rax+0x0]
  40a140:	mov    rdi,QWORD PTR [rdx]
  40a143:	mov    rax,r13
  40a146:	mov    rcx,QWORD PTR [rdi+0x10]
  40a14a:	and    rax,QWORD PTR [rcx+0x10]
  40a14e:	cmp    rax,rsi
  40a151:	je     40a180 <rb_strcasecmp@plt+0x7c70>
  40a153:	mov    rdx,QWORD PTR [rdx+0x10]
  40a157:	test   rdx,rdx
  40a15a:	jne    40a140 <rb_strcasecmp@plt+0x7c30>
  40a15c:	sub    r8d,0x1
  40a160:	test   r8d,r8d
  40a163:	mov    DWORD PTR [r14+0x1cc],r8d
  40a16a:	je     40a1ce <rb_strcasecmp@plt+0x7cbe>
  40a16c:	mov    rdi,QWORD PTR [rbp+0x0]
  40a170:	mov    rsi,r12
  40a173:	call   4021c0 <rb_dictionary_foreach_next@plt>
  40a178:	jmp    40a0d0 <rb_strcasecmp@plt+0x7bc0>
  40a17d:	nop    DWORD PTR [rax]
  40a180:	mov    rax,QWORD PTR [rdi+0x30]
  40a184:	mov    rdx,QWORD PTR [rdi+0x28]
  40a188:	test   rax,rax
  40a18b:	je     40a28b <rb_strcasecmp@plt+0x7d7b>
  40a191:	mov    QWORD PTR [rax+0x8],rdx
  40a195:	mov    rdx,QWORD PTR [rdi+0x28]
  40a199:	test   rdx,rdx
  40a19c:	je     40a260 <rb_strcasecmp@plt+0x7d50>
  40a1a2:	mov    QWORD PTR [rdx+0x10],rax
  40a1a6:	sub    QWORD PTR [r15+0x10],0x1
  40a1ab:	call   4021e0 <free@plt>
  40a1b0:	cmp    QWORD PTR [r15+0x10],0x0
  40a1b5:	je     40a1e0 <rb_strcasecmp@plt+0x7cd0>
  40a1b7:	mov    r8d,DWORD PTR [r14+0x1cc]
  40a1be:	sub    r8d,0x1
  40a1c2:	test   r8d,r8d
  40a1c5:	mov    DWORD PTR [r14+0x1cc],r8d
  40a1cc:	jne    40a16c <rb_strcasecmp@plt+0x7c5c>
  40a1ce:	mov    rdi,r14
  40a1d1:	call   4039e0 <rb_strcasecmp@plt+0x14d0>
  40a1d6:	jmp    40a16c <rb_strcasecmp@plt+0x7c5c>
  40a1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1e0:	mov    rdi,r14
  40a1e3:	call   4088f0 <rb_strcasecmp@plt+0x63e0>
  40a1e8:	jmp    40a1b7 <rb_strcasecmp@plt+0x7ca7>
  40a1ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a1f0:	mov    rax,QWORD PTR [rbx+0x30]
  40a1f4:	mov    rdx,QWORD PTR [rbx+0x28]
  40a1f8:	test   rax,rax
  40a1fb:	je     40a326 <rb_strcasecmp@plt+0x7e16>
  40a201:	mov    QWORD PTR [rax+0x8],rdx
  40a205:	mov    rdx,QWORD PTR [rbx+0x28]
  40a209:	test   rdx,rdx
  40a20c:	je     40a31a <rb_strcasecmp@plt+0x7e0a>
  40a212:	mov    QWORD PTR [rdx+0x10],rax
  40a216:	mov    rdi,rbx
  40a219:	sub    QWORD PTR [rip+0xafbf],0x1        # 4151e0 <rb_strcasecmp@plt+0x12cd0>
  40a221:	call   4021e0 <free@plt>
  40a226:	cmp    QWORD PTR [rip+0xafb2],0x0        # 4151e0 <rb_strcasecmp@plt+0x12cd0>
  40a22e:	jne    40a237 <rb_strcasecmp@plt+0x7d27>
  40a230:	mov    BYTE PTR [rip+0xaf89],0x0        # 4151c0 <rb_strcasecmp@plt+0x12cb0>
  40a237:	mov    rax,QWORD PTR [rsp+0x18]
  40a23c:	xor    rax,QWORD PTR fs:0x28
  40a245:	jne    40a332 <rb_strcasecmp@plt+0x7e22>
  40a24b:	add    rsp,0x28
  40a24f:	pop    rbx
  40a250:	pop    rbp
  40a251:	pop    r12
  40a253:	pop    r13
  40a255:	pop    r14
  40a257:	pop    r15
  40a259:	ret    
  40a25a:	nop    WORD PTR [rax+rax*1+0x0]
  40a260:	mov    QWORD PTR [r15],rax
  40a263:	jmp    40a1a6 <rb_strcasecmp@plt+0x7c96>
  40a268:	mov    rdx,QWORD PTR [r12]
  40a26c:	lea    rsi,[rip+0x1ced]        # 40bf60 <rb_strcasecmp@plt+0x9a50>
  40a273:	mov    ecx,eax
  40a275:	mov    edi,0x43
  40a27a:	xor    eax,eax
  40a27c:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40a281:	mov    edi,0x3
  40a286:	call   4020b0 <exit@plt>
  40a28b:	mov    QWORD PTR [r15+0x8],rdx
  40a28f:	jmp    40a199 <rb_strcasecmp@plt+0x7c89>
  40a294:	lea    rsi,[rip+0x1d64]        # 40bfff <rb_strcasecmp@plt+0x9aef>
  40a29b:	mov    rdi,rbx
  40a29e:	mov    ebp,0x3
  40a2a3:	call   4020f0 <strcasecmp@plt>
  40a2a8:	test   eax,eax
  40a2aa:	je     40a057 <rb_strcasecmp@plt+0x7b47>
  40a2b0:	lea    rsi,[rip+0x1d54]        # 40c00b <rb_strcasecmp@plt+0x9afb>
  40a2b7:	mov    rdi,rbx
  40a2ba:	mov    ebp,0x4
  40a2bf:	call   4020f0 <strcasecmp@plt>
  40a2c4:	test   eax,eax
  40a2c6:	je     40a057 <rb_strcasecmp@plt+0x7b47>
  40a2cc:	mov    rdi,QWORD PTR [r12+0x8]
  40a2d1:	mov    edx,0xa
  40a2d6:	xor    esi,esi
  40a2d8:	call   4022d0 <strtol@plt>
  40a2dd:	lea    edx,[rax-0x1]
  40a2e0:	cmp    edx,0xfffe
  40a2e6:	jbe    40a337 <rb_strcasecmp@plt+0x7e27>
  40a2e8:	mov    rcx,QWORD PTR [r12+0x8]
  40a2ed:	mov    rdx,QWORD PTR [r12]
  40a2f1:	lea    rsi,[rip+0x1c00]        # 40bef8 <rb_strcasecmp@plt+0x99e8>
  40a2f8:	mov    edi,0x43
  40a2fd:	xor    eax,eax
  40a2ff:	call   4032f0 <rb_strcasecmp@plt+0xde0>
  40a304:	mov    edi,0x3
  40a309:	call   4020b0 <exit@plt>
  40a30e:	xchg   ax,ax
  40a310:	mov    ebp,0x1
  40a315:	jmp    40a057 <rb_strcasecmp@plt+0x7b47>
  40a31a:	mov    QWORD PTR [rip+0xaeaf],rax        # 4151d0 <rb_strcasecmp@plt+0x12cc0>
  40a321:	jmp    40a216 <rb_strcasecmp@plt+0x7d06>
  40a326:	mov    QWORD PTR [rip+0xaeab],rdx        # 4151d8 <rb_strcasecmp@plt+0x12cc8>
  40a32d:	jmp    40a209 <rb_strcasecmp@plt+0x7cf9>
  40a332:	call   402380 <__stack_chk_fail@plt>
  40a337:	mov    ecx,eax
  40a339:	mov    rdx,QWORD PTR [r12]
  40a33d:	lea    rsi,[rip+0x1be4]        # 40bf28 <rb_strcasecmp@plt+0x9a18>
  40a344:	jmp    40a275 <rb_strcasecmp@plt+0x7d65>
  40a349:	nop    DWORD PTR [rax+0x0]
  40a350:	push   rbp
  40a351:	push   rbx
  40a352:	mov    rbx,rdx
  40a355:	sub    rsp,0x8
  40a359:	mov    rax,0x410d80
  40a360:	mov    rdx,QWORD PTR [rdx]
  40a363:	mov    eax,DWORD PTR [rax+0x18]
  40a366:	shl    rax,0x5
  40a36a:	add    rax,QWORD PTR [rdx+0x1d0]
  40a371:	test   esi,esi
  40a373:	mov    rbp,QWORD PTR [rax+0x10]
  40a377:	jne    40a382 <rb_strcasecmp@plt+0x7e72>
  40a379:	cmp    BYTE PTR [rip+0xae40],0x0        # 4151c0 <rb_strcasecmp@plt+0x12cb0>
  40a380:	jne    40a3c8 <rb_strcasecmp@plt+0x7eb8>
  40a382:	mov    rdi,QWORD PTR [rbx+0x8]
  40a386:	call   4022c0 <rb_close@plt>
  40a38b:	test   rbp,rbp
  40a38e:	je     40a429 <rb_strcasecmp@plt+0x7f19>
  40a394:	mov    rax,QWORD PTR [rbx+0x30]
  40a398:	mov    rdx,QWORD PTR [rbx+0x28]
  40a39c:	test   rax,rax
  40a39f:	je     40a420 <rb_strcasecmp@plt+0x7f10>
  40a3a1:	mov    QWORD PTR [rax+0x8],rdx
  40a3a5:	mov    rdx,QWORD PTR [rbx+0x28]
  40a3a9:	test   rdx,rdx
  40a3ac:	je     40a3f8 <rb_strcasecmp@plt+0x7ee8>
  40a3ae:	mov    QWORD PTR [rdx+0x10],rax
  40a3b2:	sub    QWORD PTR [rbp+0x10],0x1
  40a3b7:	add    rsp,0x8
  40a3bb:	mov    rdi,rbx
  40a3be:	pop    rbx
  40a3bf:	pop    rbp
  40a3c0:	jmp    4021e0 <free@plt>
  40a3c5:	nop    DWORD PTR [rax]
  40a3c8:	movzx  eax,WORD PTR [rdx+0xf8]
  40a3cf:	mov    rcx,QWORD PTR [rbx+0x10]
  40a3d3:	cmp    ax,0x2
  40a3d7:	je     40a400 <rb_strcasecmp@plt+0x7ef0>
  40a3d9:	cmp    ax,0xa
  40a3dd:	jne    40a382 <rb_strcasecmp@plt+0x7e72>
  40a3df:	cmp    BYTE PTR [rcx+0x17],0x0
  40a3e3:	je     40a382 <rb_strcasecmp@plt+0x7e72>
  40a3e5:	cmp    QWORD PTR [rip+0xadcb],0x0        # 4151b8 <rb_strcasecmp@plt+0x12ca8>
  40a3ed:	jne    40a40e <rb_strcasecmp@plt+0x7efe>
  40a3ef:	jmp    40a382 <rb_strcasecmp@plt+0x7e72>
  40a3f1:	nop    DWORD PTR [rax+0x0]
  40a3f8:	mov    QWORD PTR [rbp+0x0],rax
  40a3fc:	jmp    40a3b2 <rb_strcasecmp@plt+0x7ea2>
  40a3fe:	xchg   ax,ax
  40a400:	cmp    QWORD PTR [rip+0xacf0],0x0        # 4150f8 <rb_strcasecmp@plt+0x12be8>
  40a408:	je     40a382 <rb_strcasecmp@plt+0x7e72>
  40a40e:	mov    rdi,rbx
  40a411:	call   QWORD PTR [rcx+0x18]
  40a414:	jmp    40a382 <rb_strcasecmp@plt+0x7e72>
  40a419:	nop    DWORD PTR [rax+0x0]
  40a420:	mov    QWORD PTR [rbp+0x8],rdx
  40a424:	jmp    40a3a9 <rb_strcasecmp@plt+0x7e99>
  40a429:	call   402589 <rb_strcasecmp@plt+0x79>
  40a42e:	xchg   ax,ax
  40a430:	endbr64 
  40a434:	push   r15
  40a436:	lea    r15,[rip+0x494b]        # 40ed88 <rb_strcasecmp@plt+0xc878>
  40a43d:	push   r14
  40a43f:	mov    r14,rdx
  40a442:	push   r13
  40a444:	mov    r13,rsi
  40a447:	push   r12
  40a449:	mov    r12d,edi
  40a44c:	push   rbp
  40a44d:	lea    rbp,[rip+0x493c]        # 40ed90 <rb_strcasecmp@plt+0xc880>
  40a454:	push   rbx
  40a455:	sub    rbp,r15
  40a458:	sub    rsp,0x8
  40a45c:	call   402000 <rb_helper_loop@plt-0x30>
  40a461:	sar    rbp,0x3
  40a465:	je     40a486 <rb_strcasecmp@plt+0x7f76>
  40a467:	xor    ebx,ebx
  40a469:	nop    DWORD PTR [rax+0x0]
  40a470:	mov    rdx,r14
  40a473:	mov    rsi,r13
  40a476:	mov    edi,r12d
  40a479:	call   QWORD PTR [r15+rbx*8]
  40a47d:	add    rbx,0x1
  40a481:	cmp    rbp,rbx
  40a484:	jne    40a470 <rb_strcasecmp@plt+0x7f60>
  40a486:	add    rsp,0x8
  40a48a:	pop    rbx
  40a48b:	pop    rbp
  40a48c:	pop    r12
  40a48e:	pop    r13
  40a490:	pop    r14
  40a492:	pop    r15
  40a494:	ret    
  40a495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a4a0:	endbr64 
  40a4a4:	ret    

Disassembly of section .fini:

000000000040a4a8 <.fini>:
  40a4a8:	endbr64 
  40a4ac:	sub    rsp,0x8
  40a4b0:	add    rsp,0x8
  40a4b4:	ret    
