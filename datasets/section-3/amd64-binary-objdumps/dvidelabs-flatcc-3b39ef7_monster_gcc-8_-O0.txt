
../repos/dvidelabs-flatcc-3b39ef7/samples/monster/monster:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xdfe9]        # 410ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0xfa>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xdfe2]        # 411008 <flatcc_builder_padding_base@@Base+0x4948>
  403026:	bnd jmp QWORD PTR [rip+0xdfe3]        # 411010 <flatcc_builder_padding_base@@Base+0x4950>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0xf0>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0xf0>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0xf0>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0xf0>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0xf0>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0xf0>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0xf0>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0xf0>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0xf0>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0xf0>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0xf0>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0xf0>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0xf0>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0xf0>
  40310f:	nop

Disassembly of section .plt.sec:

0000000000403110 <free@plt>:
  403110:	endbr64 
  403114:	bnd jmp QWORD PTR [rip+0xdefd]        # 411018 <free@GLIBC_2.2.5>
  40311b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403120 <strncpy@plt>:
  403120:	endbr64 
  403124:	bnd jmp QWORD PTR [rip+0xdef5]        # 411020 <strncpy@GLIBC_2.2.5>
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403130 <puts@plt>:
  403130:	endbr64 
  403134:	bnd jmp QWORD PTR [rip+0xdeed]        # 411028 <puts@GLIBC_2.2.5>
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403140 <strlen@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0xdee5]        # 411030 <strlen@GLIBC_2.2.5>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <__stack_chk_fail@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0xdedd]        # 411038 <__stack_chk_fail@GLIBC_2.4>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <__assert_fail@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0xded5]        # 411040 <__assert_fail@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <memset@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0xdecd]        # 411048 <memset@GLIBC_2.2.5>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <memchr@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0xdec5]        # 411050 <memchr@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <memcmp@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0xdebd]        # 411058 <memcmp@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <strcmp@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0xdeb5]        # 411060 <strcmp@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <memcpy@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0xdead]        # 411068 <memcpy@GLIBC_2.14>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <malloc@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0xdea5]        # 411070 <malloc@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <realloc@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0xde9d]        # 411078 <realloc@GLIBC_2.2.5>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <posix_memalign@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0xde95]        # 411080 <posix_memalign@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004031f0 <_start@@Base>:
  4031f0:	endbr64 
  4031f4:	xor    ebp,ebp
  4031f6:	mov    r9,rdx
  4031f9:	pop    rsi
  4031fa:	mov    rdx,rsp
  4031fd:	and    rsp,0xfffffffffffffff0
  403201:	push   rax
  403202:	push   rsp
  403203:	mov    r8,0x40bc10
  40320a:	mov    rcx,0x40bba0
  403211:	mov    rdi,0x40572e
  403218:	call   QWORD PTR [rip+0xddd2]        # 410ff0 <__libc_start_main@GLIBC_2.2.5>
  40321e:	hlt    
  40321f:	nop
  403220:	endbr64 
  403224:	ret    
  403225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40322f:	nop
  403230:	mov    eax,0x4110a8
  403235:	cmp    rax,0x4110a8
  40323b:	je     403250 <_start@@Base+0x60>
  40323d:	mov    eax,0x0
  403242:	test   rax,rax
  403245:	je     403250 <_start@@Base+0x60>
  403247:	mov    edi,0x4110a8
  40324c:	jmp    rax
  40324e:	xchg   ax,ax
  403250:	ret    
  403251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	mov    esi,0x4110a8
  403265:	sub    rsi,0x4110a8
  40326c:	sar    rsi,0x3
  403270:	mov    rax,rsi
  403273:	shr    rax,0x3f
  403277:	add    rsi,rax
  40327a:	sar    rsi,1
  40327d:	je     403290 <_start@@Base+0xa0>
  40327f:	mov    eax,0x0
  403284:	test   rax,rax
  403287:	je     403290 <_start@@Base+0xa0>
  403289:	mov    edi,0x4110a8
  40328e:	jmp    rax
  403290:	ret    
  403291:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40329c:	nop    DWORD PTR [rax+0x0]
  4032a0:	endbr64 
  4032a4:	cmp    BYTE PTR [rip+0xddfd],0x0        # 4110a8 <__bss_start@@Base>
  4032ab:	jne    4032c0 <_start@@Base+0xd0>
  4032ad:	push   rbp
  4032ae:	mov    rbp,rsp
  4032b1:	call   403230 <_start@@Base+0x40>
  4032b6:	mov    BYTE PTR [rip+0xddeb],0x1        # 4110a8 <__bss_start@@Base>
  4032bd:	pop    rbp
  4032be:	ret    
  4032bf:	nop
  4032c0:	ret    
  4032c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032cc:	nop    DWORD PTR [rax+0x0]
  4032d0:	endbr64 
  4032d4:	jmp    403260 <_start@@Base+0x70>
  4032d6:	push   rbp
  4032d7:	mov    rbp,rsp
  4032da:	mov    eax,edi
  4032dc:	mov    BYTE PTR [rbp-0x4],al
  4032df:	movzx  eax,BYTE PTR [rbp-0x4]
  4032e3:	pop    rbp
  4032e4:	ret    
  4032e5:	push   rbp
  4032e6:	mov    rbp,rsp
  4032e9:	sub    rsp,0x8
  4032ed:	mov    QWORD PTR [rbp-0x8],rdi
  4032f1:	mov    rax,QWORD PTR [rbp-0x8]
  4032f5:	movzx  eax,BYTE PTR [rax]
  4032f8:	movzx  eax,al
  4032fb:	mov    edi,eax
  4032fd:	call   4032d6 <_start@@Base+0xe6>
  403302:	leave  
  403303:	ret    
  403304:	push   rbp
  403305:	mov    rbp,rsp
  403308:	mov    eax,edi
  40330a:	mov    WORD PTR [rbp-0x4],ax
  40330e:	movzx  eax,WORD PTR [rbp-0x4]
  403312:	pop    rbp
  403313:	ret    
  403314:	push   rbp
  403315:	mov    rbp,rsp
  403318:	mov    eax,edi
  40331a:	mov    WORD PTR [rbp-0x4],ax
  40331e:	movzx  eax,WORD PTR [rbp-0x4]
  403322:	pop    rbp
  403323:	ret    
  403324:	push   rbp
  403325:	mov    rbp,rsp
  403328:	sub    rsp,0x8
  40332c:	mov    QWORD PTR [rbp-0x8],rdi
  403330:	mov    rax,QWORD PTR [rbp-0x8]
  403334:	movzx  eax,WORD PTR [rax]
  403337:	cwde   
  403338:	mov    edi,eax
  40333a:	call   403304 <_start@@Base+0x114>
  40333f:	leave  
  403340:	ret    
  403341:	push   rbp
  403342:	mov    rbp,rsp
  403345:	vmovss DWORD PTR [rbp-0x14],xmm0
  40334a:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40334f:	vmovss DWORD PTR [rbp-0x4],xmm0
  403354:	mov    eax,DWORD PTR [rbp-0x4]
  403357:	mov    DWORD PTR [rbp-0x4],eax
  40335a:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40335f:	pop    rbp
  403360:	ret    
  403361:	push   rbp
  403362:	mov    rbp,rsp
  403365:	vmovss DWORD PTR [rbp-0x14],xmm0
  40336a:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40336f:	vmovss DWORD PTR [rbp-0x4],xmm0
  403374:	mov    eax,DWORD PTR [rbp-0x4]
  403377:	mov    DWORD PTR [rbp-0x4],eax
  40337a:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40337f:	pop    rbp
  403380:	ret    
  403381:	push   rbp
  403382:	mov    rbp,rsp
  403385:	sub    rsp,0x8
  403389:	mov    QWORD PTR [rbp-0x8],rdi
  40338d:	mov    rax,QWORD PTR [rbp-0x8]
  403391:	mov    eax,DWORD PTR [rax]
  403393:	vmovd  xmm0,eax
  403397:	call   403341 <_start@@Base+0x151>
  40339c:	leave  
  40339d:	ret    
  40339e:	push   rbp
  40339f:	mov    rbp,rsp
  4033a2:	mov    DWORD PTR [rbp-0x4],edi
  4033a5:	mov    eax,DWORD PTR [rbp-0x4]
  4033a8:	pop    rbp
  4033a9:	ret    
  4033aa:	push   rbp
  4033ab:	mov    rbp,rsp
  4033ae:	sub    rsp,0x8
  4033b2:	mov    QWORD PTR [rbp-0x8],rdi
  4033b6:	mov    rax,QWORD PTR [rbp-0x8]
  4033ba:	mov    eax,DWORD PTR [rax]
  4033bc:	mov    edi,eax
  4033be:	call   40339e <_start@@Base+0x1ae>
  4033c3:	leave  
  4033c4:	ret    
  4033c5:	push   rbp
  4033c6:	mov    rbp,rsp
  4033c9:	mov    DWORD PTR [rbp-0x4],edi
  4033cc:	mov    eax,DWORD PTR [rbp-0x4]
  4033cf:	pop    rbp
  4033d0:	ret    
  4033d1:	push   rbp
  4033d2:	mov    rbp,rsp
  4033d5:	sub    rsp,0x8
  4033d9:	mov    QWORD PTR [rbp-0x8],rdi
  4033dd:	mov    rax,QWORD PTR [rbp-0x8]
  4033e1:	mov    eax,DWORD PTR [rax]
  4033e3:	mov    edi,eax
  4033e5:	call   4033c5 <_start@@Base+0x1d5>
  4033ea:	leave  
  4033eb:	ret    
  4033ec:	push   rbp
  4033ed:	mov    rbp,rsp
  4033f0:	mov    eax,edi
  4033f2:	mov    WORD PTR [rbp-0x4],ax
  4033f6:	movzx  eax,WORD PTR [rbp-0x4]
  4033fa:	pop    rbp
  4033fb:	ret    
  4033fc:	push   rbp
  4033fd:	mov    rbp,rsp
  403400:	sub    rsp,0x8
  403404:	mov    QWORD PTR [rbp-0x8],rdi
  403408:	mov    rax,QWORD PTR [rbp-0x8]
  40340c:	movzx  eax,WORD PTR [rax]
  40340f:	movzx  eax,ax
  403412:	mov    edi,eax
  403414:	call   4033ec <_start@@Base+0x1fc>
  403419:	leave  
  40341a:	ret    
  40341b:	push   rbp
  40341c:	mov    rbp,rsp
  40341f:	mov    eax,edi
  403421:	mov    BYTE PTR [rbp-0x4],al
  403424:	movzx  eax,BYTE PTR [rbp-0x4]
  403428:	pop    rbp
  403429:	ret    
  40342a:	push   rbp
  40342b:	mov    rbp,rsp
  40342e:	sub    rsp,0x8
  403432:	mov    QWORD PTR [rbp-0x8],rdi
  403436:	mov    rax,QWORD PTR [rbp-0x8]
  40343a:	movzx  eax,BYTE PTR [rax]
  40343d:	movzx  eax,al
  403440:	mov    edi,eax
  403442:	call   40341b <_start@@Base+0x22b>
  403447:	leave  
  403448:	ret    
  403449:	push   rbp
  40344a:	mov    rbp,rsp
  40344d:	mov    DWORD PTR [rbp-0x4],edi
  403450:	mov    eax,DWORD PTR [rbp-0x4]
  403453:	pop    rbp
  403454:	ret    
  403455:	push   rbp
  403456:	mov    rbp,rsp
  403459:	mov    DWORD PTR [rbp-0x4],edi
  40345c:	mov    eax,DWORD PTR [rbp-0x4]
  40345f:	pop    rbp
  403460:	ret    
  403461:	push   rbp
  403462:	mov    rbp,rsp
  403465:	sub    rsp,0x8
  403469:	mov    QWORD PTR [rbp-0x8],rdi
  40346d:	mov    rax,QWORD PTR [rbp-0x8]
  403471:	mov    eax,DWORD PTR [rax]
  403473:	mov    edi,eax
  403475:	call   403449 <_start@@Base+0x259>
  40347a:	leave  
  40347b:	ret    
  40347c:	push   rbp
  40347d:	mov    rbp,rsp
  403480:	sub    rsp,0x8
  403484:	mov    QWORD PTR [rbp-0x8],rdi
  403488:	cmp    QWORD PTR [rbp-0x8],0x0
  40348d:	je     4034a3 <_start@@Base+0x2b3>
  40348f:	mov    rax,QWORD PTR [rbp-0x8]
  403493:	sub    rax,0x4
  403497:	mov    rdi,rax
  40349a:	call   4033aa <_start@@Base+0x1ba>
  40349f:	mov    eax,eax
  4034a1:	jmp    4034a8 <_start@@Base+0x2b8>
  4034a3:	mov    eax,0x0
  4034a8:	leave  
  4034a9:	ret    
  4034aa:	push   rbp
  4034ab:	mov    rbp,rsp
  4034ae:	sub    rsp,0x8
  4034b2:	mov    QWORD PTR [rbp-0x8],rdi
  4034b6:	cmp    QWORD PTR [rbp-0x8],0x0
  4034bb:	je     4034d1 <_start@@Base+0x2e1>
  4034bd:	mov    rax,QWORD PTR [rbp-0x8]
  4034c1:	sub    rax,0x4
  4034c5:	mov    rdi,rax
  4034c8:	call   4033aa <_start@@Base+0x1ba>
  4034cd:	mov    eax,eax
  4034cf:	jmp    4034d6 <_start@@Base+0x2e6>
  4034d1:	mov    eax,0x0
  4034d6:	leave  
  4034d7:	ret    
  4034d8:	push   rbp
  4034d9:	mov    rbp,rsp
  4034dc:	sub    rsp,0x8
  4034e0:	mov    QWORD PTR [rbp-0x8],rdi
  4034e4:	mov    rax,QWORD PTR [rbp-0x8]
  4034e8:	mov    rdi,rax
  4034eb:	call   40347c <_start@@Base+0x28c>
  4034f0:	leave  
  4034f1:	ret    
  4034f2:	push   rbp
  4034f3:	mov    rbp,rsp
  4034f6:	sub    rsp,0x10
  4034fa:	mov    QWORD PTR [rbp-0x8],rdi
  4034fe:	mov    QWORD PTR [rbp-0x10],rsi
  403502:	mov    rax,QWORD PTR [rbp-0x8]
  403506:	mov    rdi,rax
  403509:	call   40347c <_start@@Base+0x28c>
  40350e:	cmp    QWORD PTR [rbp-0x10],rax
  403512:	jb     403533 <_start@@Base+0x343>
  403514:	lea    rcx,[rip+0x9065]        # 40c580 <_IO_stdin_used@@Base+0x580>
  40351b:	mov    edx,0x18b
  403520:	lea    rsi,[rip+0x8b01]        # 40c028 <_IO_stdin_used@@Base+0x28>
  403527:	lea    rdi,[rip+0x8b7a]        # 40c0a8 <_IO_stdin_used@@Base+0xa8>
  40352e:	call   403160 <__assert_fail@plt>
  403533:	mov    rdx,QWORD PTR [rbp-0x8]
  403537:	mov    rax,QWORD PTR [rbp-0x10]
  40353b:	add    rax,rdx
  40353e:	mov    rdi,rax
  403541:	call   4032e5 <_start@@Base+0xf5>
  403546:	leave  
  403547:	ret    
  403548:	push   rbp
  403549:	mov    rbp,rsp
  40354c:	sub    rsp,0x20
  403550:	mov    QWORD PTR [rbp-0x18],rdi
  403554:	mov    QWORD PTR [rbp-0x20],rsi
  403558:	mov    rax,QWORD PTR fs:0x28
  403561:	mov    QWORD PTR [rbp-0x8],rax
  403565:	xor    eax,eax
  403567:	mov    DWORD PTR [rbp-0x10],0x0
  40356e:	cmp    QWORD PTR [rbp-0x20],0x0
  403573:	jne    40357c <_start@@Base+0x38c>
  403575:	mov    eax,0x1
  40357a:	jmp    4035cf <_start@@Base+0x3df>
  40357c:	mov    rcx,QWORD PTR [rbp-0x20]
  403580:	lea    rax,[rbp-0x10]
  403584:	mov    edx,0x4
  403589:	mov    rsi,rcx
  40358c:	mov    rdi,rax
  40358f:	call   403120 <strncpy@plt>
  403594:	mov    eax,DWORD PTR [rbp-0x10]
  403597:	mov    edi,eax
  403599:	call   403455 <_start@@Base+0x265>
  40359e:	mov    DWORD PTR [rbp-0x10],eax
  4035a1:	mov    rax,QWORD PTR [rbp-0x18]
  4035a5:	add    rax,0x4
  4035a9:	mov    rdi,rax
  4035ac:	call   403461 <_start@@Base+0x271>
  4035b1:	mov    DWORD PTR [rbp-0xc],eax
  4035b4:	mov    eax,DWORD PTR [rbp-0x10]
  4035b7:	test   eax,eax
  4035b9:	je     4035c3 <_start@@Base+0x3d3>
  4035bb:	mov    eax,DWORD PTR [rbp-0x10]
  4035be:	cmp    DWORD PTR [rbp-0xc],eax
  4035c1:	jne    4035ca <_start@@Base+0x3da>
  4035c3:	mov    eax,0x1
  4035c8:	jmp    4035cf <_start@@Base+0x3df>
  4035ca:	mov    eax,0x0
  4035cf:	mov    rdx,QWORD PTR [rbp-0x8]
  4035d3:	xor    rdx,QWORD PTR fs:0x28
  4035dc:	je     4035e3 <_start@@Base+0x3f3>
  4035de:	call   403150 <__stack_chk_fail@plt>
  4035e3:	leave  
  4035e4:	ret    
  4035e5:	push   rbp
  4035e6:	mov    rbp,rsp
  4035e9:	mov    eax,edi
  4035eb:	mov    BYTE PTR [rbp-0x4],al
  4035ee:	movzx  eax,BYTE PTR [rbp-0x4]
  4035f2:	pop    rbp
  4035f3:	ret    
  4035f4:	push   rbp
  4035f5:	mov    rbp,rsp
  4035f8:	sub    rsp,0x8
  4035fc:	mov    QWORD PTR [rbp-0x8],rdi
  403600:	cmp    QWORD PTR [rbp-0x8],0x0
  403605:	je     403619 <_start@@Base+0x429>
  403607:	mov    rax,QWORD PTR [rbp-0x8]
  40360b:	mov    rdi,rax
  40360e:	call   403381 <_start@@Base+0x191>
  403613:	vmovd  eax,xmm0
  403617:	jmp    40361f <_start@@Base+0x42f>
  403619:	mov    eax,DWORD PTR [rip+0x9055]        # 40c674 <_IO_stdin_used@@Base+0x674>
  40361f:	vmovd  xmm0,eax
  403623:	leave  
  403624:	ret    
  403625:	push   rbp
  403626:	mov    rbp,rsp
  403629:	sub    rsp,0x8
  40362d:	mov    QWORD PTR [rbp-0x8],rdi
  403631:	cmp    QWORD PTR [rbp-0x8],0x0
  403636:	je     40364e <_start@@Base+0x45e>
  403638:	mov    rax,QWORD PTR [rbp-0x8]
  40363c:	add    rax,0x4
  403640:	mov    rdi,rax
  403643:	call   403381 <_start@@Base+0x191>
  403648:	vmovd  eax,xmm0
  40364c:	jmp    403654 <_start@@Base+0x464>
  40364e:	mov    eax,DWORD PTR [rip+0x9020]        # 40c674 <_IO_stdin_used@@Base+0x674>
  403654:	vmovd  xmm0,eax
  403658:	leave  
  403659:	ret    
  40365a:	push   rbp
  40365b:	mov    rbp,rsp
  40365e:	sub    rsp,0x8
  403662:	mov    QWORD PTR [rbp-0x8],rdi
  403666:	cmp    QWORD PTR [rbp-0x8],0x0
  40366b:	je     403683 <_start@@Base+0x493>
  40366d:	mov    rax,QWORD PTR [rbp-0x8]
  403671:	add    rax,0x8
  403675:	mov    rdi,rax
  403678:	call   403381 <_start@@Base+0x191>
  40367d:	vmovd  eax,xmm0
  403681:	jmp    403689 <_start@@Base+0x499>
  403683:	mov    eax,DWORD PTR [rip+0x8feb]        # 40c674 <_IO_stdin_used@@Base+0x674>
  403689:	vmovd  xmm0,eax
  40368d:	leave  
  40368e:	ret    
  40368f:	push   rbp
  403690:	mov    rbp,rsp
  403693:	sub    rsp,0x20
  403697:	mov    QWORD PTR [rbp-0x18],rdi
  40369b:	mov    QWORD PTR [rbp-0x8],0x0
  4036a3:	cmp    QWORD PTR [rbp-0x18],0x0
  4036a8:	je     4036d8 <_start@@Base+0x4e8>
  4036aa:	mov    rdx,QWORD PTR [rbp-0x8]
  4036ae:	mov    rax,QWORD PTR [rbp-0x18]
  4036b2:	mov    rsi,rdx
  4036b5:	mov    rdi,rax
  4036b8:	call   403548 <_start@@Base+0x358>
  4036bd:	test   eax,eax
  4036bf:	je     4036d8 <_start@@Base+0x4e8>
  4036c1:	mov    rax,QWORD PTR [rbp-0x18]
  4036c5:	mov    rdi,rax
  4036c8:	call   4033aa <_start@@Base+0x1ba>
  4036cd:	mov    edx,eax
  4036cf:	mov    rax,QWORD PTR [rbp-0x18]
  4036d3:	add    rax,rdx
  4036d6:	jmp    4036dd <_start@@Base+0x4ed>
  4036d8:	mov    eax,0x0
  4036dd:	leave  
  4036de:	ret    
  4036df:	push   rbp
  4036e0:	mov    rbp,rsp
  4036e3:	sub    rsp,0x20
  4036e7:	mov    QWORD PTR [rbp-0x18],rdi
  4036eb:	mov    WORD PTR [rbp-0xc],0x0
  4036f1:	cmp    QWORD PTR [rbp-0x18],0x0
  4036f6:	jne    403717 <_start@@Base+0x527>
  4036f8:	lea    rcx,[rip+0x8e31]        # 40c530 <_IO_stdin_used@@Base+0x530>
  4036ff:	mov    edx,0x81
  403704:	lea    rsi,[rip+0x89d5]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  40370b:	lea    rdi,[rip+0x8a46]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403712:	call   403160 <__assert_fail@plt>
  403717:	mov    WORD PTR [rbp-0xa],0x0
  40371d:	mov    rax,QWORD PTR [rbp-0x18]
  403721:	mov    rdi,rax
  403724:	call   4033d1 <_start@@Base+0x1e1>
  403729:	cdqe   
  40372b:	neg    rax
  40372e:	mov    rdx,rax
  403731:	mov    rax,QWORD PTR [rbp-0x18]
  403735:	add    rax,rdx
  403738:	mov    QWORD PTR [rbp-0x8],rax
  40373c:	mov    rax,QWORD PTR [rbp-0x8]
  403740:	mov    rdi,rax
  403743:	call   4033fc <_start@@Base+0x20c>
  403748:	movzx  eax,ax
  40374b:	movzx  edx,WORD PTR [rbp-0xa]
  40374f:	add    edx,0x3
  403752:	movsxd rdx,edx
  403755:	add    rdx,rdx
  403758:	cmp    rax,rdx
  40375b:	jb     40377c <_start@@Base+0x58c>
  40375d:	movzx  eax,WORD PTR [rbp-0xa]
  403761:	add    rax,0x2
  403765:	lea    rdx,[rax+rax*1]
  403769:	mov    rax,QWORD PTR [rbp-0x8]
  40376d:	add    rax,rdx
  403770:	mov    rdi,rax
  403773:	call   4033fc <_start@@Base+0x20c>
  403778:	mov    WORD PTR [rbp-0xc],ax
  40377c:	cmp    WORD PTR [rbp-0xc],0x0
  403781:	je     403790 <_start@@Base+0x5a0>
  403783:	movzx  edx,WORD PTR [rbp-0xc]
  403787:	mov    rax,QWORD PTR [rbp-0x18]
  40378b:	add    rax,rdx
  40378e:	jmp    403795 <_start@@Base+0x5a5>
  403790:	mov    eax,0x0
  403795:	leave  
  403796:	ret    
  403797:	push   rbp
  403798:	mov    rbp,rsp
  40379b:	sub    rsp,0x20
  40379f:	mov    QWORD PTR [rbp-0x18],rdi
  4037a3:	mov    WORD PTR [rbp-0xc],0x0
  4037a9:	cmp    QWORD PTR [rbp-0x18],0x0
  4037ae:	jne    4037cf <_start@@Base+0x5df>
  4037b0:	lea    rcx,[rip+0x8cb9]        # 40c470 <_IO_stdin_used@@Base+0x470>
  4037b7:	mov    edx,0x82
  4037bc:	lea    rsi,[rip+0x891d]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  4037c3:	lea    rdi,[rip+0x898e]        # 40c158 <_IO_stdin_used@@Base+0x158>
  4037ca:	call   403160 <__assert_fail@plt>
  4037cf:	mov    WORD PTR [rbp-0xa],0x1
  4037d5:	mov    rax,QWORD PTR [rbp-0x18]
  4037d9:	mov    rdi,rax
  4037dc:	call   4033d1 <_start@@Base+0x1e1>
  4037e1:	cdqe   
  4037e3:	neg    rax
  4037e6:	mov    rdx,rax
  4037e9:	mov    rax,QWORD PTR [rbp-0x18]
  4037ed:	add    rax,rdx
  4037f0:	mov    QWORD PTR [rbp-0x8],rax
  4037f4:	mov    rax,QWORD PTR [rbp-0x8]
  4037f8:	mov    rdi,rax
  4037fb:	call   4033fc <_start@@Base+0x20c>
  403800:	movzx  eax,ax
  403803:	movzx  edx,WORD PTR [rbp-0xa]
  403807:	add    edx,0x3
  40380a:	movsxd rdx,edx
  40380d:	add    rdx,rdx
  403810:	cmp    rax,rdx
  403813:	jb     403834 <_start@@Base+0x644>
  403815:	movzx  eax,WORD PTR [rbp-0xa]
  403819:	add    rax,0x2
  40381d:	lea    rdx,[rax+rax*1]
  403821:	mov    rax,QWORD PTR [rbp-0x8]
  403825:	add    rax,rdx
  403828:	mov    rdi,rax
  40382b:	call   4033fc <_start@@Base+0x20c>
  403830:	mov    WORD PTR [rbp-0xc],ax
  403834:	cmp    WORD PTR [rbp-0xc],0x0
  403839:	je     403850 <_start@@Base+0x660>
  40383b:	movzx  edx,WORD PTR [rbp-0xc]
  40383f:	mov    rax,QWORD PTR [rbp-0x18]
  403843:	add    rax,rdx
  403846:	mov    rdi,rax
  403849:	call   403324 <_start@@Base+0x134>
  40384e:	jmp    403855 <_start@@Base+0x665>
  403850:	mov    eax,0x96
  403855:	leave  
  403856:	ret    
  403857:	push   rbp
  403858:	mov    rbp,rsp
  40385b:	sub    rsp,0x20
  40385f:	mov    QWORD PTR [rbp-0x18],rdi
  403863:	mov    WORD PTR [rbp-0xc],0x0
  403869:	cmp    QWORD PTR [rbp-0x18],0x0
  40386e:	jne    40388f <_start@@Base+0x69f>
  403870:	lea    rcx,[rip+0x8c89]        # 40c500 <_IO_stdin_used@@Base+0x500>
  403877:	mov    edx,0x82
  40387c:	lea    rsi,[rip+0x885d]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403883:	lea    rdi,[rip+0x88ce]        # 40c158 <_IO_stdin_used@@Base+0x158>
  40388a:	call   403160 <__assert_fail@plt>
  40388f:	mov    WORD PTR [rbp-0xa],0x1
  403895:	mov    rax,QWORD PTR [rbp-0x18]
  403899:	mov    rdi,rax
  40389c:	call   4033d1 <_start@@Base+0x1e1>
  4038a1:	cdqe   
  4038a3:	neg    rax
  4038a6:	mov    rdx,rax
  4038a9:	mov    rax,QWORD PTR [rbp-0x18]
  4038ad:	add    rax,rdx
  4038b0:	mov    QWORD PTR [rbp-0x8],rax
  4038b4:	mov    rax,QWORD PTR [rbp-0x8]
  4038b8:	mov    rdi,rax
  4038bb:	call   4033fc <_start@@Base+0x20c>
  4038c0:	movzx  eax,ax
  4038c3:	movzx  edx,WORD PTR [rbp-0xa]
  4038c7:	add    edx,0x3
  4038ca:	movsxd rdx,edx
  4038cd:	add    rdx,rdx
  4038d0:	cmp    rax,rdx
  4038d3:	jb     4038f4 <_start@@Base+0x704>
  4038d5:	movzx  eax,WORD PTR [rbp-0xa]
  4038d9:	add    rax,0x2
  4038dd:	lea    rdx,[rax+rax*1]
  4038e1:	mov    rax,QWORD PTR [rbp-0x8]
  4038e5:	add    rax,rdx
  4038e8:	mov    rdi,rax
  4038eb:	call   4033fc <_start@@Base+0x20c>
  4038f0:	mov    WORD PTR [rbp-0xc],ax
  4038f4:	cmp    WORD PTR [rbp-0xc],0x0
  4038f9:	setne  al
  4038fc:	movzx  eax,al
  4038ff:	leave  
  403900:	ret    
  403901:	push   rbp
  403902:	mov    rbp,rsp
  403905:	sub    rsp,0x20
  403909:	mov    QWORD PTR [rbp-0x18],rdi
  40390d:	mov    WORD PTR [rbp-0xc],0x0
  403913:	cmp    QWORD PTR [rbp-0x18],0x0
  403918:	jne    403939 <_start@@Base+0x749>
  40391a:	lea    rcx,[rip+0x8b2f]        # 40c450 <_IO_stdin_used@@Base+0x450>
  403921:	mov    edx,0x83
  403926:	lea    rsi,[rip+0x87b3]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  40392d:	lea    rdi,[rip+0x8824]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403934:	call   403160 <__assert_fail@plt>
  403939:	mov    WORD PTR [rbp-0xa],0x2
  40393f:	mov    rax,QWORD PTR [rbp-0x18]
  403943:	mov    rdi,rax
  403946:	call   4033d1 <_start@@Base+0x1e1>
  40394b:	cdqe   
  40394d:	neg    rax
  403950:	mov    rdx,rax
  403953:	mov    rax,QWORD PTR [rbp-0x18]
  403957:	add    rax,rdx
  40395a:	mov    QWORD PTR [rbp-0x8],rax
  40395e:	mov    rax,QWORD PTR [rbp-0x8]
  403962:	mov    rdi,rax
  403965:	call   4033fc <_start@@Base+0x20c>
  40396a:	movzx  eax,ax
  40396d:	movzx  edx,WORD PTR [rbp-0xa]
  403971:	add    edx,0x3
  403974:	movsxd rdx,edx
  403977:	add    rdx,rdx
  40397a:	cmp    rax,rdx
  40397d:	jb     40399e <_start@@Base+0x7ae>
  40397f:	movzx  eax,WORD PTR [rbp-0xa]
  403983:	add    rax,0x2
  403987:	lea    rdx,[rax+rax*1]
  40398b:	mov    rax,QWORD PTR [rbp-0x8]
  40398f:	add    rax,rdx
  403992:	mov    rdi,rax
  403995:	call   4033fc <_start@@Base+0x20c>
  40399a:	mov    WORD PTR [rbp-0xc],ax
  40399e:	cmp    WORD PTR [rbp-0xc],0x0
  4039a3:	je     4039ba <_start@@Base+0x7ca>
  4039a5:	movzx  edx,WORD PTR [rbp-0xc]
  4039a9:	mov    rax,QWORD PTR [rbp-0x18]
  4039ad:	add    rax,rdx
  4039b0:	mov    rdi,rax
  4039b3:	call   403324 <_start@@Base+0x134>
  4039b8:	jmp    4039bf <_start@@Base+0x7cf>
  4039ba:	mov    eax,0x64
  4039bf:	leave  
  4039c0:	ret    
  4039c1:	push   rbp
  4039c2:	mov    rbp,rsp
  4039c5:	sub    rsp,0x20
  4039c9:	mov    QWORD PTR [rbp-0x18],rdi
  4039cd:	mov    WORD PTR [rbp-0xc],0x0
  4039d3:	cmp    QWORD PTR [rbp-0x18],0x0
  4039d8:	jne    4039f9 <_start@@Base+0x809>
  4039da:	lea    rcx,[rip+0x8adf]        # 40c4c0 <_IO_stdin_used@@Base+0x4c0>
  4039e1:	mov    edx,0x83
  4039e6:	lea    rsi,[rip+0x86f3]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  4039ed:	lea    rdi,[rip+0x8764]        # 40c158 <_IO_stdin_used@@Base+0x158>
  4039f4:	call   403160 <__assert_fail@plt>
  4039f9:	mov    WORD PTR [rbp-0xa],0x2
  4039ff:	mov    rax,QWORD PTR [rbp-0x18]
  403a03:	mov    rdi,rax
  403a06:	call   4033d1 <_start@@Base+0x1e1>
  403a0b:	cdqe   
  403a0d:	neg    rax
  403a10:	mov    rdx,rax
  403a13:	mov    rax,QWORD PTR [rbp-0x18]
  403a17:	add    rax,rdx
  403a1a:	mov    QWORD PTR [rbp-0x8],rax
  403a1e:	mov    rax,QWORD PTR [rbp-0x8]
  403a22:	mov    rdi,rax
  403a25:	call   4033fc <_start@@Base+0x20c>
  403a2a:	movzx  eax,ax
  403a2d:	movzx  edx,WORD PTR [rbp-0xa]
  403a31:	add    edx,0x3
  403a34:	movsxd rdx,edx
  403a37:	add    rdx,rdx
  403a3a:	cmp    rax,rdx
  403a3d:	jb     403a5e <_start@@Base+0x86e>
  403a3f:	movzx  eax,WORD PTR [rbp-0xa]
  403a43:	add    rax,0x2
  403a47:	lea    rdx,[rax+rax*1]
  403a4b:	mov    rax,QWORD PTR [rbp-0x8]
  403a4f:	add    rax,rdx
  403a52:	mov    rdi,rax
  403a55:	call   4033fc <_start@@Base+0x20c>
  403a5a:	mov    WORD PTR [rbp-0xc],ax
  403a5e:	cmp    WORD PTR [rbp-0xc],0x0
  403a63:	setne  al
  403a66:	movzx  eax,al
  403a69:	leave  
  403a6a:	ret    
  403a6b:	push   rbp
  403a6c:	mov    rbp,rsp
  403a6f:	sub    rsp,0x30
  403a73:	mov    QWORD PTR [rbp-0x28],rdi
  403a77:	mov    WORD PTR [rbp-0x14],0x0
  403a7d:	cmp    QWORD PTR [rbp-0x28],0x0
  403a82:	jne    403aa3 <_start@@Base+0x8b3>
  403a84:	lea    rcx,[rip+0x8a05]        # 40c490 <_IO_stdin_used@@Base+0x490>
  403a8b:	mov    edx,0x84
  403a90:	lea    rsi,[rip+0x8649]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403a97:	lea    rdi,[rip+0x86ba]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403a9e:	call   403160 <__assert_fail@plt>
  403aa3:	mov    WORD PTR [rbp-0x12],0x3
  403aa9:	mov    rax,QWORD PTR [rbp-0x28]
  403aad:	mov    rdi,rax
  403ab0:	call   4033d1 <_start@@Base+0x1e1>
  403ab5:	cdqe   
  403ab7:	neg    rax
  403aba:	mov    rdx,rax
  403abd:	mov    rax,QWORD PTR [rbp-0x28]
  403ac1:	add    rax,rdx
  403ac4:	mov    QWORD PTR [rbp-0x10],rax
  403ac8:	mov    rax,QWORD PTR [rbp-0x10]
  403acc:	mov    rdi,rax
  403acf:	call   4033fc <_start@@Base+0x20c>
  403ad4:	movzx  eax,ax
  403ad7:	movzx  edx,WORD PTR [rbp-0x12]
  403adb:	add    edx,0x3
  403ade:	movsxd rdx,edx
  403ae1:	add    rdx,rdx
  403ae4:	cmp    rax,rdx
  403ae7:	jb     403b08 <_start@@Base+0x918>
  403ae9:	movzx  eax,WORD PTR [rbp-0x12]
  403aed:	add    rax,0x2
  403af1:	lea    rdx,[rax+rax*1]
  403af5:	mov    rax,QWORD PTR [rbp-0x10]
  403af9:	add    rax,rdx
  403afc:	mov    rdi,rax
  403aff:	call   4033fc <_start@@Base+0x20c>
  403b04:	mov    WORD PTR [rbp-0x14],ax
  403b08:	cmp    WORD PTR [rbp-0x14],0x0
  403b0d:	je     403b39 <_start@@Base+0x949>
  403b0f:	movzx  edx,WORD PTR [rbp-0x14]
  403b13:	mov    rax,QWORD PTR [rbp-0x28]
  403b17:	add    rax,rdx
  403b1a:	mov    QWORD PTR [rbp-0x8],rax
  403b1e:	mov    rax,QWORD PTR [rbp-0x8]
  403b22:	mov    rdi,rax
  403b25:	call   4033aa <_start@@Base+0x1ba>
  403b2a:	mov    eax,eax
  403b2c:	lea    rdx,[rax+0x4]
  403b30:	mov    rax,QWORD PTR [rbp-0x8]
  403b34:	add    rax,rdx
  403b37:	jmp    403b3e <_start@@Base+0x94e>
  403b39:	mov    eax,0x0
  403b3e:	leave  
  403b3f:	ret    
  403b40:	push   rbp
  403b41:	mov    rbp,rsp
  403b44:	sub    rsp,0x30
  403b48:	mov    QWORD PTR [rbp-0x28],rdi
  403b4c:	mov    WORD PTR [rbp-0x14],0x0
  403b52:	cmp    QWORD PTR [rbp-0x28],0x0
  403b57:	jne    403b78 <_start@@Base+0x988>
  403b59:	lea    rcx,[rip+0x8a00]        # 40c560 <_IO_stdin_used@@Base+0x560>
  403b60:	mov    edx,0x87
  403b65:	lea    rsi,[rip+0x8574]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403b6c:	lea    rdi,[rip+0x85e5]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403b73:	call   403160 <__assert_fail@plt>
  403b78:	mov    WORD PTR [rbp-0x12],0x5
  403b7e:	mov    rax,QWORD PTR [rbp-0x28]
  403b82:	mov    rdi,rax
  403b85:	call   4033d1 <_start@@Base+0x1e1>
  403b8a:	cdqe   
  403b8c:	neg    rax
  403b8f:	mov    rdx,rax
  403b92:	mov    rax,QWORD PTR [rbp-0x28]
  403b96:	add    rax,rdx
  403b99:	mov    QWORD PTR [rbp-0x10],rax
  403b9d:	mov    rax,QWORD PTR [rbp-0x10]
  403ba1:	mov    rdi,rax
  403ba4:	call   4033fc <_start@@Base+0x20c>
  403ba9:	movzx  eax,ax
  403bac:	movzx  edx,WORD PTR [rbp-0x12]
  403bb0:	add    edx,0x3
  403bb3:	movsxd rdx,edx
  403bb6:	add    rdx,rdx
  403bb9:	cmp    rax,rdx
  403bbc:	jb     403bdd <_start@@Base+0x9ed>
  403bbe:	movzx  eax,WORD PTR [rbp-0x12]
  403bc2:	add    rax,0x2
  403bc6:	lea    rdx,[rax+rax*1]
  403bca:	mov    rax,QWORD PTR [rbp-0x10]
  403bce:	add    rax,rdx
  403bd1:	mov    rdi,rax
  403bd4:	call   4033fc <_start@@Base+0x20c>
  403bd9:	mov    WORD PTR [rbp-0x14],ax
  403bdd:	cmp    WORD PTR [rbp-0x14],0x0
  403be2:	je     403c0e <_start@@Base+0xa1e>
  403be4:	movzx  edx,WORD PTR [rbp-0x14]
  403be8:	mov    rax,QWORD PTR [rbp-0x28]
  403bec:	add    rax,rdx
  403bef:	mov    QWORD PTR [rbp-0x8],rax
  403bf3:	mov    rax,QWORD PTR [rbp-0x8]
  403bf7:	mov    rdi,rax
  403bfa:	call   4033aa <_start@@Base+0x1ba>
  403bff:	mov    eax,eax
  403c01:	lea    rdx,[rax+0x4]
  403c05:	mov    rax,QWORD PTR [rbp-0x8]
  403c09:	add    rax,rdx
  403c0c:	jmp    403c13 <_start@@Base+0xa23>
  403c0e:	mov    eax,0x0
  403c13:	leave  
  403c14:	ret    
  403c15:	push   rbp
  403c16:	mov    rbp,rsp
  403c19:	sub    rsp,0x30
  403c1d:	mov    QWORD PTR [rbp-0x28],rdi
  403c21:	mov    WORD PTR [rbp-0x14],0x0
  403c27:	cmp    QWORD PTR [rbp-0x28],0x0
  403c2c:	jne    403c4d <_start@@Base+0xa5d>
  403c2e:	lea    rcx,[rip+0x896b]        # 40c5a0 <_IO_stdin_used@@Base+0x5a0>
  403c35:	mov    edx,0x89
  403c3a:	lea    rsi,[rip+0x849f]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403c41:	lea    rdi,[rip+0x8510]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403c48:	call   403160 <__assert_fail@plt>
  403c4d:	mov    WORD PTR [rbp-0x12],0x7
  403c53:	mov    rax,QWORD PTR [rbp-0x28]
  403c57:	mov    rdi,rax
  403c5a:	call   4033d1 <_start@@Base+0x1e1>
  403c5f:	cdqe   
  403c61:	neg    rax
  403c64:	mov    rdx,rax
  403c67:	mov    rax,QWORD PTR [rbp-0x28]
  403c6b:	add    rax,rdx
  403c6e:	mov    QWORD PTR [rbp-0x10],rax
  403c72:	mov    rax,QWORD PTR [rbp-0x10]
  403c76:	mov    rdi,rax
  403c79:	call   4033fc <_start@@Base+0x20c>
  403c7e:	movzx  eax,ax
  403c81:	movzx  edx,WORD PTR [rbp-0x12]
  403c85:	add    edx,0x3
  403c88:	movsxd rdx,edx
  403c8b:	add    rdx,rdx
  403c8e:	cmp    rax,rdx
  403c91:	jb     403cb2 <_start@@Base+0xac2>
  403c93:	movzx  eax,WORD PTR [rbp-0x12]
  403c97:	add    rax,0x2
  403c9b:	lea    rdx,[rax+rax*1]
  403c9f:	mov    rax,QWORD PTR [rbp-0x10]
  403ca3:	add    rax,rdx
  403ca6:	mov    rdi,rax
  403ca9:	call   4033fc <_start@@Base+0x20c>
  403cae:	mov    WORD PTR [rbp-0x14],ax
  403cb2:	cmp    WORD PTR [rbp-0x14],0x0
  403cb7:	je     403ce3 <_start@@Base+0xaf3>
  403cb9:	movzx  edx,WORD PTR [rbp-0x14]
  403cbd:	mov    rax,QWORD PTR [rbp-0x28]
  403cc1:	add    rax,rdx
  403cc4:	mov    QWORD PTR [rbp-0x8],rax
  403cc8:	mov    rax,QWORD PTR [rbp-0x8]
  403ccc:	mov    rdi,rax
  403ccf:	call   4033aa <_start@@Base+0x1ba>
  403cd4:	mov    eax,eax
  403cd6:	lea    rdx,[rax+0x4]
  403cda:	mov    rax,QWORD PTR [rbp-0x8]
  403cde:	add    rax,rdx
  403ce1:	jmp    403ce8 <_start@@Base+0xaf8>
  403ce3:	mov    eax,0x0
  403ce8:	leave  
  403ce9:	ret    
  403cea:	push   rbp
  403ceb:	mov    rbp,rsp
  403cee:	sub    rsp,0x20
  403cf2:	mov    QWORD PTR [rbp-0x18],rdi
  403cf6:	mov    WORD PTR [rbp-0xc],0x0
  403cfc:	cmp    QWORD PTR [rbp-0x18],0x0
  403d01:	jne    403d22 <_start@@Base+0xb32>
  403d03:	lea    rcx,[rip+0x88d6]        # 40c5e0 <_IO_stdin_used@@Base+0x5e0>
  403d0a:	mov    edx,0x8a
  403d0f:	lea    rsi,[rip+0x83ca]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403d16:	lea    rdi,[rip+0x843b]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403d1d:	call   403160 <__assert_fail@plt>
  403d22:	mov    WORD PTR [rbp-0xa],0x8
  403d28:	mov    rax,QWORD PTR [rbp-0x18]
  403d2c:	mov    rdi,rax
  403d2f:	call   4033d1 <_start@@Base+0x1e1>
  403d34:	cdqe   
  403d36:	neg    rax
  403d39:	mov    rdx,rax
  403d3c:	mov    rax,QWORD PTR [rbp-0x18]
  403d40:	add    rax,rdx
  403d43:	mov    QWORD PTR [rbp-0x8],rax
  403d47:	mov    rax,QWORD PTR [rbp-0x8]
  403d4b:	mov    rdi,rax
  403d4e:	call   4033fc <_start@@Base+0x20c>
  403d53:	movzx  eax,ax
  403d56:	movzx  edx,WORD PTR [rbp-0xa]
  403d5a:	add    edx,0x3
  403d5d:	movsxd rdx,edx
  403d60:	add    rdx,rdx
  403d63:	cmp    rax,rdx
  403d66:	jb     403d87 <_start@@Base+0xb97>
  403d68:	movzx  eax,WORD PTR [rbp-0xa]
  403d6c:	add    rax,0x2
  403d70:	lea    rdx,[rax+rax*1]
  403d74:	mov    rax,QWORD PTR [rbp-0x8]
  403d78:	add    rax,rdx
  403d7b:	mov    rdi,rax
  403d7e:	call   4033fc <_start@@Base+0x20c>
  403d83:	mov    WORD PTR [rbp-0xc],ax
  403d87:	cmp    WORD PTR [rbp-0xc],0x0
  403d8c:	je     403da3 <_start@@Base+0xbb3>
  403d8e:	movzx  edx,WORD PTR [rbp-0xc]
  403d92:	mov    rax,QWORD PTR [rbp-0x18]
  403d96:	add    rax,rdx
  403d99:	mov    rdi,rax
  403d9c:	call   40342a <_start@@Base+0x23a>
  403da1:	jmp    403da8 <_start@@Base+0xbb8>
  403da3:	mov    eax,0x0
  403da8:	leave  
  403da9:	ret    
  403daa:	push   rbp
  403dab:	mov    rbp,rsp
  403dae:	sub    rsp,0x30
  403db2:	mov    QWORD PTR [rbp-0x28],rdi
  403db6:	mov    WORD PTR [rbp-0x14],0x0
  403dbc:	cmp    QWORD PTR [rbp-0x28],0x0
  403dc1:	jne    403de2 <_start@@Base+0xbf2>
  403dc3:	lea    rcx,[rip+0x8846]        # 40c610 <_IO_stdin_used@@Base+0x610>
  403dca:	mov    edx,0x8a
  403dcf:	lea    rsi,[rip+0x830a]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403dd6:	lea    rdi,[rip+0x837b]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403ddd:	call   403160 <__assert_fail@plt>
  403de2:	mov    WORD PTR [rbp-0x12],0x9
  403de8:	mov    rax,QWORD PTR [rbp-0x28]
  403dec:	mov    rdi,rax
  403def:	call   4033d1 <_start@@Base+0x1e1>
  403df4:	cdqe   
  403df6:	neg    rax
  403df9:	mov    rdx,rax
  403dfc:	mov    rax,QWORD PTR [rbp-0x28]
  403e00:	add    rax,rdx
  403e03:	mov    QWORD PTR [rbp-0x10],rax
  403e07:	mov    rax,QWORD PTR [rbp-0x10]
  403e0b:	mov    rdi,rax
  403e0e:	call   4033fc <_start@@Base+0x20c>
  403e13:	movzx  eax,ax
  403e16:	movzx  edx,WORD PTR [rbp-0x12]
  403e1a:	add    edx,0x3
  403e1d:	movsxd rdx,edx
  403e20:	add    rdx,rdx
  403e23:	cmp    rax,rdx
  403e26:	jb     403e47 <_start@@Base+0xc57>
  403e28:	movzx  eax,WORD PTR [rbp-0x12]
  403e2c:	add    rax,0x2
  403e30:	lea    rdx,[rax+rax*1]
  403e34:	mov    rax,QWORD PTR [rbp-0x10]
  403e38:	add    rax,rdx
  403e3b:	mov    rdi,rax
  403e3e:	call   4033fc <_start@@Base+0x20c>
  403e43:	mov    WORD PTR [rbp-0x14],ax
  403e47:	cmp    WORD PTR [rbp-0x14],0x0
  403e4c:	je     403e74 <_start@@Base+0xc84>
  403e4e:	movzx  edx,WORD PTR [rbp-0x14]
  403e52:	mov    rax,QWORD PTR [rbp-0x28]
  403e56:	add    rax,rdx
  403e59:	mov    QWORD PTR [rbp-0x8],rax
  403e5d:	mov    rax,QWORD PTR [rbp-0x8]
  403e61:	mov    rdi,rax
  403e64:	call   4033aa <_start@@Base+0x1ba>
  403e69:	mov    edx,eax
  403e6b:	mov    rax,QWORD PTR [rbp-0x8]
  403e6f:	add    rax,rdx
  403e72:	jmp    403e79 <_start@@Base+0xc89>
  403e74:	mov    eax,0x0
  403e79:	leave  
  403e7a:	ret    
  403e7b:	push   rbp
  403e7c:	mov    rbp,rsp
  403e7f:	sub    rsp,0x8
  403e83:	mov    QWORD PTR [rbp-0x8],rdi
  403e87:	cmp    QWORD PTR [rbp-0x8],0x0
  403e8c:	je     403ea2 <_start@@Base+0xcb2>
  403e8e:	mov    rax,QWORD PTR [rbp-0x8]
  403e92:	sub    rax,0x4
  403e96:	mov    rdi,rax
  403e99:	call   4033aa <_start@@Base+0x1ba>
  403e9e:	mov    eax,eax
  403ea0:	jmp    403ea7 <_start@@Base+0xcb7>
  403ea2:	mov    eax,0x0
  403ea7:	leave  
  403ea8:	ret    
  403ea9:	push   rbp
  403eaa:	mov    rbp,rsp
  403ead:	sub    rsp,0x20
  403eb1:	mov    QWORD PTR [rbp-0x18],rdi
  403eb5:	mov    QWORD PTR [rbp-0x20],rsi
  403eb9:	mov    rax,QWORD PTR [rbp-0x20]
  403ebd:	lea    rdx,[rax*4+0x0]
  403ec5:	mov    rax,QWORD PTR [rbp-0x18]
  403ec9:	add    rax,rdx
  403ecc:	mov    QWORD PTR [rbp-0x8],rax
  403ed0:	mov    rax,QWORD PTR [rbp-0x18]
  403ed4:	mov    rdi,rax
  403ed7:	call   40347c <_start@@Base+0x28c>
  403edc:	cmp    QWORD PTR [rbp-0x20],rax
  403ee0:	jb     403f01 <_start@@Base+0xd11>
  403ee2:	lea    rcx,[rip+0x86d7]        # 40c5c0 <_IO_stdin_used@@Base+0x5c0>
  403ee9:	mov    edx,0x91
  403eee:	lea    rsi,[rip+0x81eb]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403ef5:	lea    rdi,[rip+0x81ac]        # 40c0a8 <_IO_stdin_used@@Base+0xa8>
  403efc:	call   403160 <__assert_fail@plt>
  403f01:	mov    rax,QWORD PTR [rbp-0x8]
  403f05:	mov    rdi,rax
  403f08:	call   4033aa <_start@@Base+0x1ba>
  403f0d:	mov    edx,eax
  403f0f:	mov    rax,QWORD PTR [rbp-0x8]
  403f13:	add    rax,rdx
  403f16:	leave  
  403f17:	ret    
  403f18:	push   rbp
  403f19:	mov    rbp,rsp
  403f1c:	sub    rsp,0x30
  403f20:	mov    QWORD PTR [rbp-0x28],rdi
  403f24:	mov    WORD PTR [rbp-0x14],0x0
  403f2a:	cmp    QWORD PTR [rbp-0x28],0x0
  403f2f:	jne    403f50 <_start@@Base+0xd60>
  403f31:	lea    rcx,[rip+0x86f8]        # 40c630 <_IO_stdin_used@@Base+0x630>
  403f38:	mov    edx,0x94
  403f3d:	lea    rsi,[rip+0x819c]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403f44:	lea    rdi,[rip+0x820d]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403f4b:	call   403160 <__assert_fail@plt>
  403f50:	mov    WORD PTR [rbp-0x12],0x0
  403f56:	mov    rax,QWORD PTR [rbp-0x28]
  403f5a:	mov    rdi,rax
  403f5d:	call   4033d1 <_start@@Base+0x1e1>
  403f62:	cdqe   
  403f64:	neg    rax
  403f67:	mov    rdx,rax
  403f6a:	mov    rax,QWORD PTR [rbp-0x28]
  403f6e:	add    rax,rdx
  403f71:	mov    QWORD PTR [rbp-0x10],rax
  403f75:	mov    rax,QWORD PTR [rbp-0x10]
  403f79:	mov    rdi,rax
  403f7c:	call   4033fc <_start@@Base+0x20c>
  403f81:	movzx  eax,ax
  403f84:	movzx  edx,WORD PTR [rbp-0x12]
  403f88:	add    edx,0x3
  403f8b:	movsxd rdx,edx
  403f8e:	add    rdx,rdx
  403f91:	cmp    rax,rdx
  403f94:	jb     403fb5 <_start@@Base+0xdc5>
  403f96:	movzx  eax,WORD PTR [rbp-0x12]
  403f9a:	add    rax,0x2
  403f9e:	lea    rdx,[rax+rax*1]
  403fa2:	mov    rax,QWORD PTR [rbp-0x10]
  403fa6:	add    rax,rdx
  403fa9:	mov    rdi,rax
  403fac:	call   4033fc <_start@@Base+0x20c>
  403fb1:	mov    WORD PTR [rbp-0x14],ax
  403fb5:	cmp    WORD PTR [rbp-0x14],0x0
  403fba:	je     403fe6 <_start@@Base+0xdf6>
  403fbc:	movzx  edx,WORD PTR [rbp-0x14]
  403fc0:	mov    rax,QWORD PTR [rbp-0x28]
  403fc4:	add    rax,rdx
  403fc7:	mov    QWORD PTR [rbp-0x8],rax
  403fcb:	mov    rax,QWORD PTR [rbp-0x8]
  403fcf:	mov    rdi,rax
  403fd2:	call   4033aa <_start@@Base+0x1ba>
  403fd7:	mov    eax,eax
  403fd9:	lea    rdx,[rax+0x4]
  403fdd:	mov    rax,QWORD PTR [rbp-0x8]
  403fe1:	add    rax,rdx
  403fe4:	jmp    403feb <_start@@Base+0xdfb>
  403fe6:	mov    eax,0x0
  403feb:	leave  
  403fec:	ret    
  403fed:	push   rbp
  403fee:	mov    rbp,rsp
  403ff1:	sub    rsp,0x20
  403ff5:	mov    QWORD PTR [rbp-0x18],rdi
  403ff9:	mov    WORD PTR [rbp-0xc],0x0
  403fff:	cmp    QWORD PTR [rbp-0x18],0x0
  404004:	jne    404025 <_start@@Base+0xe35>
  404006:	lea    rcx,[rip+0x8643]        # 40c650 <_IO_stdin_used@@Base+0x650>
  40400d:	mov    edx,0x95
  404012:	lea    rsi,[rip+0x80c7]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  404019:	lea    rdi,[rip+0x8138]        # 40c158 <_IO_stdin_used@@Base+0x158>
  404020:	call   403160 <__assert_fail@plt>
  404025:	mov    WORD PTR [rbp-0xa],0x1
  40402b:	mov    rax,QWORD PTR [rbp-0x18]
  40402f:	mov    rdi,rax
  404032:	call   4033d1 <_start@@Base+0x1e1>
  404037:	cdqe   
  404039:	neg    rax
  40403c:	mov    rdx,rax
  40403f:	mov    rax,QWORD PTR [rbp-0x18]
  404043:	add    rax,rdx
  404046:	mov    QWORD PTR [rbp-0x8],rax
  40404a:	mov    rax,QWORD PTR [rbp-0x8]
  40404e:	mov    rdi,rax
  404051:	call   4033fc <_start@@Base+0x20c>
  404056:	movzx  eax,ax
  404059:	movzx  edx,WORD PTR [rbp-0xa]
  40405d:	add    edx,0x3
  404060:	movsxd rdx,edx
  404063:	add    rdx,rdx
  404066:	cmp    rax,rdx
  404069:	jb     40408a <_start@@Base+0xe9a>
  40406b:	movzx  eax,WORD PTR [rbp-0xa]
  40406f:	add    rax,0x2
  404073:	lea    rdx,[rax+rax*1]
  404077:	mov    rax,QWORD PTR [rbp-0x8]
  40407b:	add    rax,rdx
  40407e:	mov    rdi,rax
  404081:	call   4033fc <_start@@Base+0x20c>
  404086:	mov    WORD PTR [rbp-0xc],ax
  40408a:	cmp    WORD PTR [rbp-0xc],0x0
  40408f:	je     4040a6 <_start@@Base+0xeb6>
  404091:	movzx  edx,WORD PTR [rbp-0xc]
  404095:	mov    rax,QWORD PTR [rbp-0x18]
  404099:	add    rax,rdx
  40409c:	mov    rdi,rax
  40409f:	call   403324 <_start@@Base+0x134>
  4040a4:	jmp    4040ab <_start@@Base+0xebb>
  4040a6:	mov    eax,0x0
  4040ab:	leave  
  4040ac:	ret    
  4040ad:	push   rbp
  4040ae:	mov    rbp,rsp
  4040b1:	sub    rsp,0x20
  4040b5:	mov    QWORD PTR [rbp-0x8],rdi
  4040b9:	mov    QWORD PTR [rbp-0x10],rsi
  4040bd:	mov    QWORD PTR [rbp-0x18],rdx
  4040c1:	mov    rdx,QWORD PTR [rbp-0x18]
  4040c5:	mov    rsi,QWORD PTR [rbp-0x10]
  4040c9:	mov    rax,QWORD PTR [rbp-0x8]
  4040cd:	mov    r9d,0xffffffff
  4040d3:	mov    r8d,0x1
  4040d9:	mov    ecx,0x1
  4040de:	mov    rdi,rax
  4040e1:	call   40939c <flatcc_builder_create_vector@@Base>
  4040e6:	leave  
  4040e7:	ret    
  4040e8:	push   rbp
  4040e9:	mov    rbp,rsp
  4040ec:	sub    rsp,0x10
  4040f0:	mov    QWORD PTR [rbp-0x8],rdi
  4040f4:	mov    eax,esi
  4040f6:	mov    WORD PTR [rbp-0xc],ax
  4040fa:	movsx  eax,WORD PTR [rbp-0xc]
  4040fe:	mov    edi,eax
  404100:	call   403314 <_start@@Base+0x124>
  404105:	mov    edx,eax
  404107:	mov    rax,QWORD PTR [rbp-0x8]
  40410b:	mov    WORD PTR [rax],dx
  40410e:	mov    rax,QWORD PTR [rbp-0x8]
  404112:	leave  
  404113:	ret    
  404114:	push   rbp
  404115:	mov    rbp,rsp
  404118:	sub    rsp,0x10
  40411c:	mov    QWORD PTR [rbp-0x8],rdi
  404120:	mov    QWORD PTR [rbp-0x10],rsi
  404124:	mov    rax,QWORD PTR [rbp-0x10]
  404128:	mov    eax,DWORD PTR [rax]
  40412a:	vmovd  xmm0,eax
  40412e:	call   403341 <_start@@Base+0x151>
  404133:	vmovd  eax,xmm0
  404137:	mov    rdx,QWORD PTR [rbp-0x8]
  40413b:	mov    DWORD PTR [rdx],eax
  40413d:	mov    rax,QWORD PTR [rbp-0x8]
  404141:	leave  
  404142:	ret    
  404143:	push   rbp
  404144:	mov    rbp,rsp
  404147:	sub    rsp,0x10
  40414b:	mov    QWORD PTR [rbp-0x8],rdi
  40414f:	mov    QWORD PTR [rbp-0x10],rsi
  404153:	mov    rax,QWORD PTR [rbp-0x10]
  404157:	mov    eax,DWORD PTR [rax]
  404159:	vmovd  xmm0,eax
  40415d:	call   403361 <_start@@Base+0x171>
  404162:	vmovd  eax,xmm0
  404166:	mov    rdx,QWORD PTR [rbp-0x8]
  40416a:	mov    DWORD PTR [rdx],eax
  40416c:	mov    rax,QWORD PTR [rbp-0x8]
  404170:	leave  
  404171:	ret    
  404172:	push   rbp
  404173:	mov    rbp,rsp
  404176:	sub    rsp,0x10
  40417a:	mov    QWORD PTR [rbp-0x8],rdi
  40417e:	vmovss DWORD PTR [rbp-0xc],xmm0
  404183:	mov    eax,DWORD PTR [rbp-0xc]
  404186:	vmovd  xmm0,eax
  40418a:	call   403361 <_start@@Base+0x171>
  40418f:	vmovd  eax,xmm0
  404193:	mov    rdx,QWORD PTR [rbp-0x8]
  404197:	mov    DWORD PTR [rdx],eax
  404199:	mov    rax,QWORD PTR [rbp-0x8]
  40419d:	leave  
  40419e:	ret    
  40419f:	push   rbp
  4041a0:	mov    rbp,rsp
  4041a3:	sub    rsp,0x10
  4041a7:	mov    QWORD PTR [rbp-0x8],rdi
  4041ab:	mov    QWORD PTR [rbp-0x10],rsi
  4041af:	mov    rdx,QWORD PTR [rbp-0x10]
  4041b3:	mov    rax,QWORD PTR [rbp-0x8]
  4041b7:	mov    rsi,rdx
  4041ba:	mov    rdi,rax
  4041bd:	call   40a6d4 <flatcc_builder_create_string_str@@Base>
  4041c2:	leave  
  4041c3:	ret    
  4041c4:	push   rbp
  4041c5:	mov    rbp,rsp
  4041c8:	sub    rsp,0x10
  4041cc:	mov    QWORD PTR [rbp-0x8],rdi
  4041d0:	mov    QWORD PTR [rbp-0x10],rsi
  4041d4:	mov    rsi,QWORD PTR [rbp-0x10]
  4041d8:	mov    rax,QWORD PTR [rbp-0x8]
  4041dc:	mov    ecx,0x0
  4041e1:	mov    edx,0x0
  4041e6:	mov    rdi,rax
  4041e9:	call   4078c2 <flatcc_builder_start_buffer@@Base>
  4041ee:	leave  
  4041ef:	ret    
  4041f0:	push   rbp
  4041f1:	mov    rbp,rsp
  4041f4:	sub    rsp,0x10
  4041f8:	mov    QWORD PTR [rbp-0x8],rdi
  4041fc:	mov    DWORD PTR [rbp-0xc],esi
  4041ff:	mov    edx,DWORD PTR [rbp-0xc]
  404202:	mov    rax,QWORD PTR [rbp-0x8]
  404206:	mov    esi,edx
  404208:	mov    rdi,rax
  40420b:	call   407a0f <flatcc_builder_end_buffer@@Base>
  404210:	leave  
  404211:	ret    
  404212:	push   rbp
  404213:	mov    rbp,rsp
  404216:	sub    rsp,0x10
  40421a:	mov    QWORD PTR [rbp-0x8],rdi
  40421e:	mov    eax,esi
  404220:	mov    BYTE PTR [rbp-0xc],al
  404223:	movsx  eax,BYTE PTR [rbp-0xc]
  404227:	mov    edi,eax
  404229:	call   4035e5 <_start@@Base+0x3f5>
  40422e:	mov    rdx,QWORD PTR [rbp-0x8]
  404232:	mov    BYTE PTR [rdx],al
  404234:	mov    rax,QWORD PTR [rbp-0x8]
  404238:	leave  
  404239:	ret    
  40423a:	push   rbp
  40423b:	mov    rbp,rsp
  40423e:	sub    rsp,0x18
  404242:	mov    QWORD PTR [rbp-0x8],rdi
  404246:	vmovss DWORD PTR [rbp-0xc],xmm0
  40424b:	vmovss DWORD PTR [rbp-0x10],xmm1
  404250:	vmovss DWORD PTR [rbp-0x14],xmm2
  404255:	mov    rax,QWORD PTR [rbp-0x8]
  404259:	mov    edx,DWORD PTR [rbp-0xc]
  40425c:	vmovd  xmm0,edx
  404260:	mov    rdi,rax
  404263:	call   404172 <_start@@Base+0xf82>
  404268:	mov    rax,QWORD PTR [rbp-0x8]
  40426c:	lea    rdx,[rax+0x4]
  404270:	mov    eax,DWORD PTR [rbp-0x10]
  404273:	vmovd  xmm0,eax
  404277:	mov    rdi,rdx
  40427a:	call   404172 <_start@@Base+0xf82>
  40427f:	mov    rax,QWORD PTR [rbp-0x8]
  404283:	lea    rdx,[rax+0x8]
  404287:	mov    eax,DWORD PTR [rbp-0x14]
  40428a:	vmovd  xmm0,eax
  40428e:	mov    rdi,rdx
  404291:	call   404172 <_start@@Base+0xf82>
  404296:	mov    rax,QWORD PTR [rbp-0x8]
  40429a:	leave  
  40429b:	ret    
  40429c:	push   rbp
  40429d:	mov    rbp,rsp
  4042a0:	sub    rsp,0x10
  4042a4:	mov    QWORD PTR [rbp-0x8],rdi
  4042a8:	mov    QWORD PTR [rbp-0x10],rsi
  4042ac:	mov    rdx,QWORD PTR [rbp-0x10]
  4042b0:	mov    rax,QWORD PTR [rbp-0x8]
  4042b4:	mov    rsi,rdx
  4042b7:	mov    rdi,rax
  4042ba:	call   404143 <_start@@Base+0xf53>
  4042bf:	mov    rax,QWORD PTR [rbp-0x10]
  4042c3:	lea    rdx,[rax+0x4]
  4042c7:	mov    rax,QWORD PTR [rbp-0x8]
  4042cb:	add    rax,0x4
  4042cf:	mov    rsi,rdx
  4042d2:	mov    rdi,rax
  4042d5:	call   404143 <_start@@Base+0xf53>
  4042da:	mov    rax,QWORD PTR [rbp-0x10]
  4042de:	lea    rdx,[rax+0x8]
  4042e2:	mov    rax,QWORD PTR [rbp-0x8]
  4042e6:	add    rax,0x8
  4042ea:	mov    rsi,rdx
  4042ed:	mov    rdi,rax
  4042f0:	call   404143 <_start@@Base+0xf53>
  4042f5:	mov    rax,QWORD PTR [rbp-0x8]
  4042f9:	leave  
  4042fa:	ret    
  4042fb:	push   rbp
  4042fc:	mov    rbp,rsp
  4042ff:	sub    rsp,0x10
  404303:	mov    QWORD PTR [rbp-0x8],rdi
  404307:	mov    QWORD PTR [rbp-0x10],rsi
  40430b:	mov    rdx,QWORD PTR [rbp-0x10]
  40430f:	mov    rax,QWORD PTR [rbp-0x8]
  404313:	mov    rsi,rdx
  404316:	mov    rdi,rax
  404319:	call   404114 <_start@@Base+0xf24>
  40431e:	mov    rax,QWORD PTR [rbp-0x10]
  404322:	lea    rdx,[rax+0x4]
  404326:	mov    rax,QWORD PTR [rbp-0x8]
  40432a:	add    rax,0x4
  40432e:	mov    rsi,rdx
  404331:	mov    rdi,rax
  404334:	call   404114 <_start@@Base+0xf24>
  404339:	mov    rax,QWORD PTR [rbp-0x10]
  40433d:	lea    rdx,[rax+0x8]
  404341:	mov    rax,QWORD PTR [rbp-0x8]
  404345:	add    rax,0x8
  404349:	mov    rsi,rdx
  40434c:	mov    rdi,rax
  40434f:	call   404114 <_start@@Base+0xf24>
  404354:	mov    rax,QWORD PTR [rbp-0x8]
  404358:	leave  
  404359:	ret    
  40435a:	push   rbp
  40435b:	mov    rbp,rsp
  40435e:	sub    rsp,0x10
  404362:	mov    QWORD PTR [rbp-0x8],rdi
  404366:	mov    rax,QWORD PTR [rbp-0x8]
  40436a:	mov    esi,0xa
  40436f:	mov    rdi,rax
  404372:	call   408687 <flatcc_builder_start_table@@Base>
  404377:	leave  
  404378:	ret    
  404379:	push   rbp
  40437a:	mov    rbp,rsp
  40437d:	sub    rsp,0x10
  404381:	mov    QWORD PTR [rbp-0x8],rdi
  404385:	mov    rax,QWORD PTR [rbp-0x8]
  404389:	mov    edx,0x0
  40438e:	lea    rsi,[rip+0x7de9]        # 40c17e <_IO_stdin_used@@Base+0x17e>
  404395:	mov    rdi,rax
  404398:	call   4090e9 <flatcc_builder_check_required@@Base>
  40439d:	test   eax,eax
  40439f:	jne    4043c0 <_start@@Base+0x11d0>
  4043a1:	lea    rcx,[rip+0x8068]        # 40c410 <_IO_stdin_used@@Base+0x410>
  4043a8:	mov    edx,0x32
  4043ad:	lea    rsi,[rip+0x7dcc]        # 40c180 <_IO_stdin_used@@Base+0x180>
  4043b4:	lea    rdi,[rip+0x7e3d]        # 40c1f8 <_IO_stdin_used@@Base+0x1f8>
  4043bb:	call   403160 <__assert_fail@plt>
  4043c0:	mov    rax,QWORD PTR [rbp-0x8]
  4043c4:	mov    rdi,rax
  4043c7:	call   409196 <flatcc_builder_end_table@@Base>
  4043cc:	leave  
  4043cd:	ret    
  4043ce:	push   rbp
  4043cf:	mov    rbp,rsp
  4043d2:	sub    rsp,0x10
  4043d6:	mov    QWORD PTR [rbp-0x8],rdi
  4043da:	mov    rax,QWORD PTR [rbp-0x8]
  4043de:	mov    esi,0x2
  4043e3:	mov    rdi,rax
  4043e6:	call   408687 <flatcc_builder_start_table@@Base>
  4043eb:	leave  
  4043ec:	ret    
  4043ed:	push   rbp
  4043ee:	mov    rbp,rsp
  4043f1:	sub    rsp,0x10
  4043f5:	mov    QWORD PTR [rbp-0x8],rdi
  4043f9:	mov    rax,QWORD PTR [rbp-0x8]
  4043fd:	mov    edx,0x0
  404402:	lea    rsi,[rip+0x7e8f]        # 40c298 <_IO_stdin_used@@Base+0x298>
  404409:	mov    rdi,rax
  40440c:	call   4090e9 <flatcc_builder_check_required@@Base>
  404411:	test   eax,eax
  404413:	jne    404434 <_start@@Base+0x1244>
  404415:	lea    rcx,[rip+0x7fd4]        # 40c3f0 <_IO_stdin_used@@Base+0x3f0>
  40441c:	mov    edx,0x34
  404421:	lea    rsi,[rip+0x7d58]        # 40c180 <_IO_stdin_used@@Base+0x180>
  404428:	lea    rdi,[rip+0x7e71]        # 40c2a0 <_IO_stdin_used@@Base+0x2a0>
  40442f:	call   403160 <__assert_fail@plt>
  404434:	mov    rax,QWORD PTR [rbp-0x8]
  404438:	mov    rdi,rax
  40443b:	call   409196 <flatcc_builder_end_table@@Base>
  404440:	leave  
  404441:	ret    
  404442:	push   rbp
  404443:	mov    rbp,rsp
  404446:	sub    rsp,0x10
  40444a:	mov    QWORD PTR [rbp-0x8],rdi
  40444e:	mov    rax,QWORD PTR [rbp-0x8]
  404452:	mov    rdi,rax
  404455:	call   4084db <flatcc_builder_start_offset_vector@@Base>
  40445a:	leave  
  40445b:	ret    
  40445c:	push   rbp
  40445d:	mov    rbp,rsp
  404460:	sub    rsp,0x10
  404464:	mov    QWORD PTR [rbp-0x8],rdi
  404468:	mov    rax,QWORD PTR [rbp-0x8]
  40446c:	mov    rdi,rax
  40446f:	call   409ad8 <flatcc_builder_end_offset_vector@@Base>
  404474:	leave  
  404475:	ret    
  404476:	push   rbp
  404477:	mov    rbp,rsp
  40447a:	sub    rsp,0x10
  40447e:	mov    QWORD PTR [rbp-0x8],rdi
  404482:	mov    DWORD PTR [rbp-0xc],esi
  404485:	cmp    DWORD PTR [rbp-0xc],0x0
  404489:	je     40449e <_start@@Base+0x12ae>
  40448b:	mov    edx,DWORD PTR [rbp-0xc]
  40448e:	mov    rax,QWORD PTR [rbp-0x8]
  404492:	mov    esi,edx
  404494:	mov    rdi,rax
  404497:	call   407f0d <flatcc_builder_offset_vector_push@@Base>
  40449c:	jmp    4044a3 <_start@@Base+0x12b3>
  40449e:	mov    eax,0x0
  4044a3:	leave  
  4044a4:	ret    
  4044a5:	push   rbp
  4044a6:	mov    rbp,rsp
  4044a9:	mov    DWORD PTR [rbp-0x14],edi
  4044ac:	mov    BYTE PTR [rbp-0x8],0x1
  4044b0:	mov    eax,DWORD PTR [rbp-0x14]
  4044b3:	mov    DWORD PTR [rbp-0x4],eax
  4044b6:	mov    rax,QWORD PTR [rbp-0x8]
  4044ba:	pop    rbp
  4044bb:	ret    
  4044bc:	push   rbp
  4044bd:	mov    rbp,rsp
  4044c0:	sub    rsp,0x10
  4044c4:	mov    QWORD PTR [rbp-0x8],rdi
  4044c8:	mov    rax,QWORD PTR [rbp-0x8]
  4044cc:	mov    ecx,0x4
  4044d1:	mov    edx,0xc
  4044d6:	mov    esi,0x0
  4044db:	mov    rdi,rax
  4044de:	call   40a837 <flatcc_builder_table_add@@Base>
  4044e3:	leave  
  4044e4:	ret    
  4044e5:	push   rbp
  4044e6:	mov    rbp,rsp
  4044e9:	sub    rsp,0x30
  4044ed:	mov    QWORD PTR [rbp-0x18],rdi
  4044f1:	vmovss DWORD PTR [rbp-0x1c],xmm0
  4044f6:	vmovss DWORD PTR [rbp-0x20],xmm1
  4044fb:	vmovss DWORD PTR [rbp-0x24],xmm2
  404500:	mov    rax,QWORD PTR [rbp-0x18]
  404504:	mov    rdi,rax
  404507:	call   4044bc <_start@@Base+0x12cc>
  40450c:	mov    QWORD PTR [rbp-0x8],rax
  404510:	cmp    QWORD PTR [rbp-0x8],0x0
  404515:	jne    40451e <_start@@Base+0x132e>
  404517:	mov    eax,0x0
  40451c:	jmp    404548 <_start@@Base+0x1358>
  40451e:	vmovss xmm1,DWORD PTR [rbp-0x24]
  404523:	vmovss xmm0,DWORD PTR [rbp-0x20]
  404528:	mov    edx,DWORD PTR [rbp-0x1c]
  40452b:	mov    rax,QWORD PTR [rbp-0x8]
  40452f:	vmovaps xmm2,xmm1
  404533:	vmovaps xmm1,xmm0
  404537:	vmovd  xmm0,edx
  40453b:	mov    rdi,rax
  40453e:	call   40423a <_start@@Base+0x104a>
  404543:	mov    eax,0x0
  404548:	leave  
  404549:	ret    
  40454a:	push   rbp
  40454b:	mov    rbp,rsp
  40454e:	sub    rsp,0x20
  404552:	mov    QWORD PTR [rbp-0x18],rdi
  404556:	mov    QWORD PTR [rbp-0x20],rsi
  40455a:	mov    rax,QWORD PTR [rbp-0x18]
  40455e:	mov    rdi,rax
  404561:	call   4044bc <_start@@Base+0x12cc>
  404566:	mov    QWORD PTR [rbp-0x8],rax
  40456a:	cmp    QWORD PTR [rbp-0x8],0x0
  40456f:	jne    404578 <_start@@Base+0x1388>
  404571:	mov    eax,0xffffffff
  404576:	jmp    404590 <_start@@Base+0x13a0>
  404578:	mov    rdx,QWORD PTR [rbp-0x20]
  40457c:	mov    rax,QWORD PTR [rbp-0x8]
  404580:	mov    rsi,rdx
  404583:	mov    rdi,rax
  404586:	call   40429c <_start@@Base+0x10ac>
  40458b:	mov    eax,0x0
  404590:	leave  
  404591:	ret    
  404592:	push   rbp
  404593:	mov    rbp,rsp
  404596:	sub    rsp,0x20
  40459a:	mov    QWORD PTR [rbp-0x18],rdi
  40459e:	mov    eax,esi
  4045a0:	mov    WORD PTR [rbp-0x1c],ax
  4045a4:	cmp    WORD PTR [rbp-0x1c],0x96
  4045aa:	jne    4045b3 <_start@@Base+0x13c3>
  4045ac:	mov    eax,0x0
  4045b1:	jmp    4045f7 <_start@@Base+0x1407>
  4045b3:	mov    rax,QWORD PTR [rbp-0x18]
  4045b7:	mov    ecx,0x2
  4045bc:	mov    edx,0x2
  4045c1:	mov    esi,0x1
  4045c6:	mov    rdi,rax
  4045c9:	call   40a837 <flatcc_builder_table_add@@Base>
  4045ce:	mov    QWORD PTR [rbp-0x8],rax
  4045d2:	cmp    QWORD PTR [rbp-0x8],0x0
  4045d7:	jne    4045e0 <_start@@Base+0x13f0>
  4045d9:	mov    eax,0xffffffff
  4045de:	jmp    4045f7 <_start@@Base+0x1407>
  4045e0:	movsx  edx,WORD PTR [rbp-0x1c]
  4045e4:	mov    rax,QWORD PTR [rbp-0x8]
  4045e8:	mov    esi,edx
  4045ea:	mov    rdi,rax
  4045ed:	call   4040e8 <_start@@Base+0xef8>
  4045f2:	mov    eax,0x0
  4045f7:	leave  
  4045f8:	ret    
  4045f9:	push   rbp
  4045fa:	mov    rbp,rsp
  4045fd:	sub    rsp,0x20
  404601:	mov    QWORD PTR [rbp-0x18],rdi
  404605:	mov    eax,esi
  404607:	mov    WORD PTR [rbp-0x1c],ax
  40460b:	cmp    WORD PTR [rbp-0x1c],0x64
  404610:	jne    404619 <_start@@Base+0x1429>
  404612:	mov    eax,0x0
  404617:	jmp    40465d <_start@@Base+0x146d>
  404619:	mov    rax,QWORD PTR [rbp-0x18]
  40461d:	mov    ecx,0x2
  404622:	mov    edx,0x2
  404627:	mov    esi,0x2
  40462c:	mov    rdi,rax
  40462f:	call   40a837 <flatcc_builder_table_add@@Base>
  404634:	mov    QWORD PTR [rbp-0x8],rax
  404638:	cmp    QWORD PTR [rbp-0x8],0x0
  40463d:	jne    404646 <_start@@Base+0x1456>
  40463f:	mov    eax,0xffffffff
  404644:	jmp    40465d <_start@@Base+0x146d>
  404646:	movsx  edx,WORD PTR [rbp-0x1c]
  40464a:	mov    rax,QWORD PTR [rbp-0x8]
  40464e:	mov    esi,edx
  404650:	mov    rdi,rax
  404653:	call   4040e8 <_start@@Base+0xef8>
  404658:	mov    eax,0x0
  40465d:	leave  
  40465e:	ret    
  40465f:	push   rbp
  404660:	mov    rbp,rsp
  404663:	sub    rsp,0x20
  404667:	mov    QWORD PTR [rbp-0x18],rdi
  40466b:	mov    DWORD PTR [rbp-0x1c],esi
  40466e:	cmp    DWORD PTR [rbp-0x1c],0x0
  404672:	je     4046a0 <_start@@Base+0x14b0>
  404674:	mov    rax,QWORD PTR [rbp-0x18]
  404678:	mov    esi,0x3
  40467d:	mov    rdi,rax
  404680:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  404685:	mov    QWORD PTR [rbp-0x8],rax
  404689:	cmp    QWORD PTR [rbp-0x8],0x0
  40468e:	je     4046a0 <_start@@Base+0x14b0>
  404690:	mov    rax,QWORD PTR [rbp-0x8]
  404694:	mov    edx,DWORD PTR [rbp-0x1c]
  404697:	mov    DWORD PTR [rax],edx
  404699:	mov    eax,0x0
  40469e:	jmp    4046a5 <_start@@Base+0x14b5>
  4046a0:	mov    eax,0xffffffff
  4046a5:	leave  
  4046a6:	ret    
  4046a7:	push   rbp
  4046a8:	mov    rbp,rsp
  4046ab:	sub    rsp,0x10
  4046af:	mov    QWORD PTR [rbp-0x8],rdi
  4046b3:	mov    QWORD PTR [rbp-0x10],rsi
  4046b7:	mov    rdx,QWORD PTR [rbp-0x10]
  4046bb:	mov    rax,QWORD PTR [rbp-0x8]
  4046bf:	mov    rsi,rdx
  4046c2:	mov    rdi,rax
  4046c5:	call   40a6d4 <flatcc_builder_create_string_str@@Base>
  4046ca:	mov    edx,eax
  4046cc:	mov    rax,QWORD PTR [rbp-0x8]
  4046d0:	mov    esi,edx
  4046d2:	mov    rdi,rax
  4046d5:	call   40465f <_start@@Base+0x146f>
  4046da:	leave  
  4046db:	ret    
  4046dc:	push   rbp
  4046dd:	mov    rbp,rsp
  4046e0:	sub    rsp,0x20
  4046e4:	mov    QWORD PTR [rbp-0x18],rdi
  4046e8:	mov    DWORD PTR [rbp-0x1c],esi
  4046eb:	cmp    DWORD PTR [rbp-0x1c],0x0
  4046ef:	je     40471d <_start@@Base+0x152d>
  4046f1:	mov    rax,QWORD PTR [rbp-0x18]
  4046f5:	mov    esi,0x5
  4046fa:	mov    rdi,rax
  4046fd:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  404702:	mov    QWORD PTR [rbp-0x8],rax
  404706:	cmp    QWORD PTR [rbp-0x8],0x0
  40470b:	je     40471d <_start@@Base+0x152d>
  40470d:	mov    rax,QWORD PTR [rbp-0x8]
  404711:	mov    edx,DWORD PTR [rbp-0x1c]
  404714:	mov    DWORD PTR [rax],edx
  404716:	mov    eax,0x0
  40471b:	jmp    404722 <_start@@Base+0x1532>
  40471d:	mov    eax,0xffffffff
  404722:	leave  
  404723:	ret    
  404724:	push   rbp
  404725:	mov    rbp,rsp
  404728:	sub    rsp,0x20
  40472c:	mov    QWORD PTR [rbp-0x8],rdi
  404730:	mov    QWORD PTR [rbp-0x10],rsi
  404734:	mov    QWORD PTR [rbp-0x18],rdx
  404738:	mov    rdx,QWORD PTR [rbp-0x18]
  40473c:	mov    rcx,QWORD PTR [rbp-0x10]
  404740:	mov    rax,QWORD PTR [rbp-0x8]
  404744:	mov    rsi,rcx
  404747:	mov    rdi,rax
  40474a:	call   4040ad <_start@@Base+0xebd>
  40474f:	mov    edx,eax
  404751:	mov    rax,QWORD PTR [rbp-0x8]
  404755:	mov    esi,edx
  404757:	mov    rdi,rax
  40475a:	call   4046dc <_start@@Base+0x14ec>
  40475f:	leave  
  404760:	ret    
  404761:	push   rbp
  404762:	mov    rbp,rsp
  404765:	sub    rsp,0x20
  404769:	mov    QWORD PTR [rbp-0x18],rdi
  40476d:	mov    eax,esi
  40476f:	mov    BYTE PTR [rbp-0x1c],al
  404772:	cmp    BYTE PTR [rbp-0x1c],0x2
  404776:	jne    40477f <_start@@Base+0x158f>
  404778:	mov    eax,0x0
  40477d:	jmp    4047c3 <_start@@Base+0x15d3>
  40477f:	mov    rax,QWORD PTR [rbp-0x18]
  404783:	mov    ecx,0x1
  404788:	mov    edx,0x1
  40478d:	mov    esi,0x6
  404792:	mov    rdi,rax
  404795:	call   40a837 <flatcc_builder_table_add@@Base>
  40479a:	mov    QWORD PTR [rbp-0x8],rax
  40479e:	cmp    QWORD PTR [rbp-0x8],0x0
  4047a3:	jne    4047ac <_start@@Base+0x15bc>
  4047a5:	mov    eax,0xffffffff
  4047aa:	jmp    4047c3 <_start@@Base+0x15d3>
  4047ac:	movsx  edx,BYTE PTR [rbp-0x1c]
  4047b0:	mov    rax,QWORD PTR [rbp-0x8]
  4047b4:	mov    esi,edx
  4047b6:	mov    rdi,rax
  4047b9:	call   404212 <_start@@Base+0x1022>
  4047be:	mov    eax,0x0
  4047c3:	leave  
  4047c4:	ret    
  4047c5:	push   rbp
  4047c6:	mov    rbp,rsp
  4047c9:	sub    rsp,0x20
  4047cd:	mov    QWORD PTR [rbp-0x18],rdi
  4047d1:	mov    DWORD PTR [rbp-0x1c],esi
  4047d4:	cmp    DWORD PTR [rbp-0x1c],0x0
  4047d8:	je     404806 <_start@@Base+0x1616>
  4047da:	mov    rax,QWORD PTR [rbp-0x18]
  4047de:	mov    esi,0x7
  4047e3:	mov    rdi,rax
  4047e6:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  4047eb:	mov    QWORD PTR [rbp-0x8],rax
  4047ef:	cmp    QWORD PTR [rbp-0x8],0x0
  4047f4:	je     404806 <_start@@Base+0x1616>
  4047f6:	mov    rax,QWORD PTR [rbp-0x8]
  4047fa:	mov    edx,DWORD PTR [rbp-0x1c]
  4047fd:	mov    DWORD PTR [rax],edx
  4047ff:	mov    eax,0x0
  404804:	jmp    40480b <_start@@Base+0x161b>
  404806:	mov    eax,0xffffffff
  40480b:	leave  
  40480c:	ret    
  40480d:	push   rbp
  40480e:	mov    rbp,rsp
  404811:	sub    rsp,0x10
  404815:	mov    QWORD PTR [rbp-0x8],rdi
  404819:	mov    rax,QWORD PTR [rbp-0x8]
  40481d:	mov    rdi,rax
  404820:	call   4084db <flatcc_builder_start_offset_vector@@Base>
  404825:	leave  
  404826:	ret    
  404827:	push   rbp
  404828:	mov    rbp,rsp
  40482b:	sub    rsp,0x10
  40482f:	mov    QWORD PTR [rbp-0x8],rdi
  404833:	mov    rax,QWORD PTR [rbp-0x8]
  404837:	mov    rdi,rax
  40483a:	call   409ad8 <flatcc_builder_end_offset_vector@@Base>
  40483f:	mov    edx,eax
  404841:	mov    rax,QWORD PTR [rbp-0x8]
  404845:	mov    esi,edx
  404847:	mov    rdi,rax
  40484a:	call   4047c5 <_start@@Base+0x15d5>
  40484f:	leave  
  404850:	ret    
  404851:	push   rbp
  404852:	mov    rbp,rsp
  404855:	sub    rsp,0x10
  404859:	mov    QWORD PTR [rbp-0x8],rdi
  40485d:	mov    DWORD PTR [rbp-0xc],esi
  404860:	cmp    DWORD PTR [rbp-0xc],0x0
  404864:	je     404879 <_start@@Base+0x1689>
  404866:	mov    edx,DWORD PTR [rbp-0xc]
  404869:	mov    rax,QWORD PTR [rbp-0x8]
  40486d:	mov    esi,edx
  40486f:	mov    rdi,rax
  404872:	call   407f0d <flatcc_builder_offset_vector_push@@Base>
  404877:	jmp    40487e <_start@@Base+0x168e>
  404879:	mov    eax,0x0
  40487e:	leave  
  40487f:	ret    
  404880:	push   rbp
  404881:	mov    rbp,rsp
  404884:	sub    rsp,0x10
  404888:	mov    QWORD PTR [rbp-0x8],rdi
  40488c:	mov    DWORD PTR [rbp-0xc],esi
  40488f:	mov    eax,edx
  404891:	mov    WORD PTR [rbp-0x10],ax
  404895:	movsx  edx,WORD PTR [rbp-0x10]
  404899:	mov    ecx,DWORD PTR [rbp-0xc]
  40489c:	mov    rax,QWORD PTR [rbp-0x8]
  4048a0:	mov    esi,ecx
  4048a2:	mov    rdi,rax
  4048a5:	call   404ced <_start@@Base+0x1afd>
  4048aa:	mov    edx,eax
  4048ac:	mov    rax,QWORD PTR [rbp-0x8]
  4048b0:	mov    esi,edx
  4048b2:	mov    rdi,rax
  4048b5:	call   404851 <_start@@Base+0x1661>
  4048ba:	leave  
  4048bb:	ret    
  4048bc:	push   rbp
  4048bd:	mov    rbp,rsp
  4048c0:	sub    rsp,0x20
  4048c4:	mov    QWORD PTR [rbp-0x18],rdi
  4048c8:	mov    QWORD PTR [rbp-0x20],rsi
  4048cc:	movzx  eax,BYTE PTR [rbp-0x20]
  4048d0:	test   al,al
  4048d2:	jne    4048db <_start@@Base+0x16eb>
  4048d4:	mov    eax,0x0
  4048d9:	jmp    40494a <_start@@Base+0x175a>
  4048db:	mov    eax,DWORD PTR [rbp-0x1c]
  4048de:	test   eax,eax
  4048e0:	jne    4048e9 <_start@@Base+0x16f9>
  4048e2:	mov    eax,0xffffffff
  4048e7:	jmp    40494a <_start@@Base+0x175a>
  4048e9:	mov    rax,QWORD PTR [rbp-0x18]
  4048ed:	mov    ecx,0x1
  4048f2:	mov    edx,0x1
  4048f7:	mov    esi,0x8
  4048fc:	mov    rdi,rax
  4048ff:	call   40a837 <flatcc_builder_table_add@@Base>
  404904:	mov    QWORD PTR [rbp-0x10],rax
  404908:	cmp    QWORD PTR [rbp-0x10],0x0
  40490d:	je     40492b <_start@@Base+0x173b>
  40490f:	mov    rax,QWORD PTR [rbp-0x18]
  404913:	mov    esi,0x9
  404918:	mov    rdi,rax
  40491b:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  404920:	mov    QWORD PTR [rbp-0x8],rax
  404924:	cmp    QWORD PTR [rbp-0x8],0x0
  404929:	jne    404932 <_start@@Base+0x1742>
  40492b:	mov    eax,0xffffffff
  404930:	jmp    40494a <_start@@Base+0x175a>
  404932:	movzx  eax,BYTE PTR [rbp-0x20]
  404936:	mov    rdx,QWORD PTR [rbp-0x10]
  40493a:	mov    BYTE PTR [rdx],al
  40493c:	mov    edx,DWORD PTR [rbp-0x1c]
  40493f:	mov    rax,QWORD PTR [rbp-0x8]
  404943:	mov    DWORD PTR [rax],edx
  404945:	mov    eax,0x0
  40494a:	leave  
  40494b:	ret    
  40494c:	push   rbp
  40494d:	mov    rbp,rsp
  404950:	sub    rsp,0x20
  404954:	mov    QWORD PTR [rbp-0x18],rdi
  404958:	mov    eax,esi
  40495a:	mov    BYTE PTR [rbp-0x1c],al
  40495d:	cmp    BYTE PTR [rbp-0x1c],0x0
  404961:	jne    40496a <_start@@Base+0x177a>
  404963:	mov    eax,0x0
  404968:	jmp    4049a6 <_start@@Base+0x17b6>
  40496a:	mov    rax,QWORD PTR [rbp-0x18]
  40496e:	mov    ecx,0x1
  404973:	mov    edx,0x1
  404978:	mov    esi,0x8
  40497d:	mov    rdi,rax
  404980:	call   40a837 <flatcc_builder_table_add@@Base>
  404985:	mov    QWORD PTR [rbp-0x8],rax
  404989:	cmp    QWORD PTR [rbp-0x8],0x0
  40498e:	je     4049a1 <_start@@Base+0x17b1>
  404990:	mov    rdx,QWORD PTR [rbp-0x8]
  404994:	movzx  eax,BYTE PTR [rbp-0x1c]
  404998:	mov    BYTE PTR [rdx],al
  40499a:	mov    eax,0x0
  40499f:	jmp    4049a6 <_start@@Base+0x17b6>
  4049a1:	mov    eax,0xffffffff
  4049a6:	leave  
  4049a7:	ret    
  4049a8:	push   rbp
  4049a9:	mov    rbp,rsp
  4049ac:	sub    rsp,0x20
  4049b0:	mov    QWORD PTR [rbp-0x18],rdi
  4049b4:	mov    QWORD PTR [rbp-0x20],rsi
  4049b8:	movzx  eax,BYTE PTR [rbp-0x20]
  4049bc:	test   al,al
  4049be:	jne    4049c7 <_start@@Base+0x17d7>
  4049c0:	mov    eax,0x0
  4049c5:	jmp    4049f8 <_start@@Base+0x1808>
  4049c7:	mov    rax,QWORD PTR [rbp-0x18]
  4049cb:	mov    esi,0x9
  4049d0:	mov    rdi,rax
  4049d3:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  4049d8:	mov    QWORD PTR [rbp-0x8],rax
  4049dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4049e1:	je     4049f3 <_start@@Base+0x1803>
  4049e3:	mov    edx,DWORD PTR [rbp-0x1c]
  4049e6:	mov    rax,QWORD PTR [rbp-0x8]
  4049ea:	mov    DWORD PTR [rax],edx
  4049ec:	mov    eax,0x0
  4049f1:	jmp    4049f8 <_start@@Base+0x1808>
  4049f3:	mov    eax,0xffffffff
  4049f8:	leave  
  4049f9:	ret    
  4049fa:	push   rbp
  4049fb:	mov    rbp,rsp
  4049fe:	sub    rsp,0x10
  404a02:	mov    QWORD PTR [rbp-0x8],rdi
  404a06:	mov    DWORD PTR [rbp-0xc],esi
  404a09:	mov    eax,DWORD PTR [rbp-0xc]
  404a0c:	mov    edi,eax
  404a0e:	call   4044a5 <_start@@Base+0x12b5>
  404a13:	mov    rdx,rax
  404a16:	mov    rax,QWORD PTR [rbp-0x8]
  404a1a:	mov    rsi,rdx
  404a1d:	mov    rdi,rax
  404a20:	call   4048bc <_start@@Base+0x16cc>
  404a25:	leave  
  404a26:	ret    
  404a27:	push   rbp
  404a28:	mov    rbp,rsp
  404a2b:	sub    rsp,0x30
  404a2f:	mov    QWORD PTR [rbp-0x8],rdi
  404a33:	mov    QWORD PTR [rbp-0x10],rsi
  404a37:	mov    eax,ecx
  404a39:	mov    DWORD PTR [rbp-0x1c],r8d
  404a3d:	mov    DWORD PTR [rbp-0x20],r9d
  404a41:	mov    ecx,DWORD PTR [rbp+0x10]
  404a44:	mov    WORD PTR [rbp-0x14],dx
  404a48:	mov    WORD PTR [rbp-0x18],ax
  404a4c:	mov    eax,ecx
  404a4e:	mov    BYTE PTR [rbp-0x24],al
  404a51:	mov    rax,QWORD PTR [rbp-0x8]
  404a55:	mov    rdi,rax
  404a58:	call   40435a <_start@@Base+0x116a>
  404a5d:	test   eax,eax
  404a5f:	jne    404b39 <_start@@Base+0x1949>
  404a65:	mov    rdx,QWORD PTR [rbp-0x10]
  404a69:	mov    rax,QWORD PTR [rbp-0x8]
  404a6d:	mov    rsi,rdx
  404a70:	mov    rdi,rax
  404a73:	call   40454a <_start@@Base+0x135a>
  404a78:	test   eax,eax
  404a7a:	jne    404b39 <_start@@Base+0x1949>
  404a80:	mov    edx,DWORD PTR [rbp-0x1c]
  404a83:	mov    rax,QWORD PTR [rbp-0x8]
  404a87:	mov    esi,edx
  404a89:	mov    rdi,rax
  404a8c:	call   40465f <_start@@Base+0x146f>
  404a91:	test   eax,eax
  404a93:	jne    404b39 <_start@@Base+0x1949>
  404a99:	mov    edx,DWORD PTR [rbp-0x20]
  404a9c:	mov    rax,QWORD PTR [rbp-0x8]
  404aa0:	mov    esi,edx
  404aa2:	mov    rdi,rax
  404aa5:	call   4046dc <_start@@Base+0x14ec>
  404aaa:	test   eax,eax
  404aac:	jne    404b39 <_start@@Base+0x1949>
  404ab2:	mov    edx,DWORD PTR [rbp+0x18]
  404ab5:	mov    rax,QWORD PTR [rbp-0x8]
  404ab9:	mov    esi,edx
  404abb:	mov    rdi,rax
  404abe:	call   4047c5 <_start@@Base+0x15d5>
  404ac3:	test   eax,eax
  404ac5:	jne    404b39 <_start@@Base+0x1949>
  404ac7:	mov    rdx,QWORD PTR [rbp+0x20]
  404acb:	mov    rax,QWORD PTR [rbp-0x8]
  404acf:	mov    rsi,rdx
  404ad2:	mov    rdi,rax
  404ad5:	call   4049a8 <_start@@Base+0x17b8>
  404ada:	test   eax,eax
  404adc:	jne    404b39 <_start@@Base+0x1949>
  404ade:	movsx  edx,WORD PTR [rbp-0x14]
  404ae2:	mov    rax,QWORD PTR [rbp-0x8]
  404ae6:	mov    esi,edx
  404ae8:	mov    rdi,rax
  404aeb:	call   404592 <_start@@Base+0x13a2>
  404af0:	test   eax,eax
  404af2:	jne    404b39 <_start@@Base+0x1949>
  404af4:	movsx  edx,WORD PTR [rbp-0x18]
  404af8:	mov    rax,QWORD PTR [rbp-0x8]
  404afc:	mov    esi,edx
  404afe:	mov    rdi,rax
  404b01:	call   4045f9 <_start@@Base+0x1409>
  404b06:	test   eax,eax
  404b08:	jne    404b39 <_start@@Base+0x1949>
  404b0a:	movsx  edx,BYTE PTR [rbp-0x24]
  404b0e:	mov    rax,QWORD PTR [rbp-0x8]
  404b12:	mov    esi,edx
  404b14:	mov    rdi,rax
  404b17:	call   404761 <_start@@Base+0x1571>
  404b1c:	test   eax,eax
  404b1e:	jne    404b39 <_start@@Base+0x1949>
  404b20:	movzx  eax,BYTE PTR [rbp+0x20]
  404b24:	movzx  edx,al
  404b27:	mov    rax,QWORD PTR [rbp-0x8]
  404b2b:	mov    esi,edx
  404b2d:	mov    rdi,rax
  404b30:	call   40494c <_start@@Base+0x175c>
  404b35:	test   eax,eax
  404b37:	je     404b40 <_start@@Base+0x1950>
  404b39:	mov    eax,0x0
  404b3e:	jmp    404b4c <_start@@Base+0x195c>
  404b40:	mov    rax,QWORD PTR [rbp-0x8]
  404b44:	mov    rdi,rax
  404b47:	call   404379 <_start@@Base+0x1189>
  404b4c:	leave  
  404b4d:	ret    
  404b4e:	push   rbp
  404b4f:	mov    rbp,rsp
  404b52:	sub    rsp,0x10
  404b56:	mov    QWORD PTR [rbp-0x8],rdi
  404b5a:	mov    rax,QWORD PTR [rbp-0x8]
  404b5e:	mov    esi,0x0
  404b63:	mov    rdi,rax
  404b66:	call   4041c4 <_start@@Base+0xfd4>
  404b6b:	test   eax,eax
  404b6d:	jne    404b7d <_start@@Base+0x198d>
  404b6f:	mov    rax,QWORD PTR [rbp-0x8]
  404b73:	mov    rdi,rax
  404b76:	call   40435a <_start@@Base+0x116a>
  404b7b:	jmp    404b82 <_start@@Base+0x1992>
  404b7d:	mov    eax,0xffffffff
  404b82:	leave  
  404b83:	ret    
  404b84:	push   rbp
  404b85:	mov    rbp,rsp
  404b88:	sub    rsp,0x10
  404b8c:	mov    QWORD PTR [rbp-0x8],rdi
  404b90:	mov    rax,QWORD PTR [rbp-0x8]
  404b94:	mov    rdi,rax
  404b97:	call   404379 <_start@@Base+0x1189>
  404b9c:	mov    edx,eax
  404b9e:	mov    rax,QWORD PTR [rbp-0x8]
  404ba2:	mov    esi,edx
  404ba4:	mov    rdi,rax
  404ba7:	call   4041f0 <_start@@Base+0x1000>
  404bac:	leave  
  404bad:	ret    
  404bae:	push   rbp
  404baf:	mov    rbp,rsp
  404bb2:	sub    rsp,0x30
  404bb6:	mov    QWORD PTR [rbp-0x8],rdi
  404bba:	mov    QWORD PTR [rbp-0x10],rsi
  404bbe:	mov    eax,ecx
  404bc0:	mov    DWORD PTR [rbp-0x1c],r8d
  404bc4:	mov    DWORD PTR [rbp-0x20],r9d
  404bc8:	mov    ecx,DWORD PTR [rbp+0x10]
  404bcb:	mov    WORD PTR [rbp-0x14],dx
  404bcf:	mov    WORD PTR [rbp-0x18],ax
  404bd3:	mov    eax,ecx
  404bd5:	mov    BYTE PTR [rbp-0x24],al
  404bd8:	mov    rax,QWORD PTR [rbp-0x8]
  404bdc:	mov    esi,0x0
  404be1:	mov    rdi,rax
  404be4:	call   4041c4 <_start@@Base+0xfd4>
  404be9:	test   eax,eax
  404beb:	je     404bf4 <_start@@Base+0x1a04>
  404bed:	mov    eax,0x0
  404bf2:	jmp    404c3d <_start@@Base+0x1a4d>
  404bf4:	movsx  edi,BYTE PTR [rbp-0x24]
  404bf8:	movsx  ecx,WORD PTR [rbp-0x18]
  404bfc:	movsx  edx,WORD PTR [rbp-0x14]
  404c00:	mov    r9d,DWORD PTR [rbp-0x20]
  404c04:	mov    r10d,DWORD PTR [rbp-0x1c]
  404c08:	mov    rsi,QWORD PTR [rbp-0x10]
  404c0c:	mov    rax,QWORD PTR [rbp-0x8]
  404c10:	sub    rsp,0x8
  404c14:	push   QWORD PTR [rbp+0x20]
  404c17:	mov    r8d,DWORD PTR [rbp+0x18]
  404c1b:	push   r8
  404c1d:	push   rdi
  404c1e:	mov    r8d,r10d
  404c21:	mov    rdi,rax
  404c24:	call   404a27 <_start@@Base+0x1837>
  404c29:	add    rsp,0x20
  404c2d:	mov    edx,eax
  404c2f:	mov    rax,QWORD PTR [rbp-0x8]
  404c33:	mov    esi,edx
  404c35:	mov    rdi,rax
  404c38:	call   4041f0 <_start@@Base+0x1000>
  404c3d:	leave  
  404c3e:	ret    
  404c3f:	push   rbp
  404c40:	mov    rbp,rsp
  404c43:	sub    rsp,0x20
  404c47:	mov    QWORD PTR [rbp-0x18],rdi
  404c4b:	mov    DWORD PTR [rbp-0x1c],esi
  404c4e:	cmp    DWORD PTR [rbp-0x1c],0x0
  404c52:	je     404c80 <_start@@Base+0x1a90>
  404c54:	mov    rax,QWORD PTR [rbp-0x18]
  404c58:	mov    esi,0x0
  404c5d:	mov    rdi,rax
  404c60:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  404c65:	mov    QWORD PTR [rbp-0x8],rax
  404c69:	cmp    QWORD PTR [rbp-0x8],0x0
  404c6e:	je     404c80 <_start@@Base+0x1a90>
  404c70:	mov    rax,QWORD PTR [rbp-0x8]
  404c74:	mov    edx,DWORD PTR [rbp-0x1c]
  404c77:	mov    DWORD PTR [rax],edx
  404c79:	mov    eax,0x0
  404c7e:	jmp    404c85 <_start@@Base+0x1a95>
  404c80:	mov    eax,0xffffffff
  404c85:	leave  
  404c86:	ret    
  404c87:	push   rbp
  404c88:	mov    rbp,rsp
  404c8b:	sub    rsp,0x20
  404c8f:	mov    QWORD PTR [rbp-0x18],rdi
  404c93:	mov    eax,esi
  404c95:	mov    WORD PTR [rbp-0x1c],ax
  404c99:	cmp    WORD PTR [rbp-0x1c],0x0
  404c9e:	jne    404ca7 <_start@@Base+0x1ab7>
  404ca0:	mov    eax,0x0
  404ca5:	jmp    404ceb <_start@@Base+0x1afb>
  404ca7:	mov    rax,QWORD PTR [rbp-0x18]
  404cab:	mov    ecx,0x2
  404cb0:	mov    edx,0x2
  404cb5:	mov    esi,0x1
  404cba:	mov    rdi,rax
  404cbd:	call   40a837 <flatcc_builder_table_add@@Base>
  404cc2:	mov    QWORD PTR [rbp-0x8],rax
  404cc6:	cmp    QWORD PTR [rbp-0x8],0x0
  404ccb:	jne    404cd4 <_start@@Base+0x1ae4>
  404ccd:	mov    eax,0xffffffff
  404cd2:	jmp    404ceb <_start@@Base+0x1afb>
  404cd4:	movsx  edx,WORD PTR [rbp-0x1c]
  404cd8:	mov    rax,QWORD PTR [rbp-0x8]
  404cdc:	mov    esi,edx
  404cde:	mov    rdi,rax
  404ce1:	call   4040e8 <_start@@Base+0xef8>
  404ce6:	mov    eax,0x0
  404ceb:	leave  
  404cec:	ret    
  404ced:	push   rbp
  404cee:	mov    rbp,rsp
  404cf1:	sub    rsp,0x10
  404cf5:	mov    QWORD PTR [rbp-0x8],rdi
  404cf9:	mov    DWORD PTR [rbp-0xc],esi
  404cfc:	mov    eax,edx
  404cfe:	mov    WORD PTR [rbp-0x10],ax
  404d02:	mov    rax,QWORD PTR [rbp-0x8]
  404d06:	mov    rdi,rax
  404d09:	call   4043ce <_start@@Base+0x11de>
  404d0e:	test   eax,eax
  404d10:	jne    404d3d <_start@@Base+0x1b4d>
  404d12:	mov    edx,DWORD PTR [rbp-0xc]
  404d15:	mov    rax,QWORD PTR [rbp-0x8]
  404d19:	mov    esi,edx
  404d1b:	mov    rdi,rax
  404d1e:	call   404c3f <_start@@Base+0x1a4f>
  404d23:	test   eax,eax
  404d25:	jne    404d3d <_start@@Base+0x1b4d>
  404d27:	movsx  edx,WORD PTR [rbp-0x10]
  404d2b:	mov    rax,QWORD PTR [rbp-0x8]
  404d2f:	mov    esi,edx
  404d31:	mov    rdi,rax
  404d34:	call   404c87 <_start@@Base+0x1a97>
  404d39:	test   eax,eax
  404d3b:	je     404d44 <_start@@Base+0x1b54>
  404d3d:	mov    eax,0x0
  404d42:	jmp    404d50 <_start@@Base+0x1b60>
  404d44:	mov    rax,QWORD PTR [rbp-0x8]
  404d48:	mov    rdi,rax
  404d4b:	call   4043ed <_start@@Base+0x11fd>
  404d50:	leave  
  404d51:	ret    

0000000000404d52 <create_monster_bottom_up@@Base>:
  404d52:	endbr64 
  404d56:	push   rbp
  404d57:	mov    rbp,rsp
  404d5a:	sub    rsp,0x60
  404d5e:	mov    QWORD PTR [rbp-0x58],rdi
  404d62:	mov    DWORD PTR [rbp-0x5c],esi
  404d65:	mov    rax,QWORD PTR fs:0x28
  404d6e:	mov    QWORD PTR [rbp-0x8],rax
  404d72:	xor    eax,eax
  404d74:	mov    rax,QWORD PTR [rbp-0x58]
  404d78:	lea    rsi,[rip+0x75bd]        # 40c33c <_IO_stdin_used@@Base+0x33c>
  404d7f:	mov    rdi,rax
  404d82:	call   40419f <_start@@Base+0xfaf>
  404d87:	mov    DWORD PTR [rbp-0x44],eax
  404d8a:	mov    WORD PTR [rbp-0x4c],0x3
  404d90:	mov    rax,QWORD PTR [rbp-0x58]
  404d94:	lea    rsi,[rip+0x75a7]        # 40c342 <_IO_stdin_used@@Base+0x342>
  404d9b:	mov    rdi,rax
  404d9e:	call   40419f <_start@@Base+0xfaf>
  404da3:	mov    DWORD PTR [rbp-0x40],eax
  404da6:	mov    WORD PTR [rbp-0x4a],0x5
  404dac:	movzx  eax,WORD PTR [rbp-0x4c]
  404db0:	movsx  edx,ax
  404db3:	mov    ecx,DWORD PTR [rbp-0x44]
  404db6:	mov    rax,QWORD PTR [rbp-0x58]
  404dba:	mov    esi,ecx
  404dbc:	mov    rdi,rax
  404dbf:	call   404ced <_start@@Base+0x1afd>
  404dc4:	mov    DWORD PTR [rbp-0x3c],eax
  404dc7:	movzx  eax,WORD PTR [rbp-0x4a]
  404dcb:	movsx  edx,ax
  404dce:	mov    ecx,DWORD PTR [rbp-0x40]
  404dd1:	mov    rax,QWORD PTR [rbp-0x58]
  404dd5:	mov    esi,ecx
  404dd7:	mov    rdi,rax
  404dda:	call   404ced <_start@@Base+0x1afd>
  404ddf:	mov    DWORD PTR [rbp-0x38],eax
  404de2:	mov    rax,QWORD PTR [rbp-0x58]
  404de6:	lea    rsi,[rip+0x7559]        # 40c346 <_IO_stdin_used@@Base+0x346>
  404ded:	mov    rdi,rax
  404df0:	call   40419f <_start@@Base+0xfaf>
  404df5:	mov    DWORD PTR [rbp-0x34],eax
  404df8:	mov    BYTE PTR [rbp-0x12],0x0
  404dfc:	mov    BYTE PTR [rbp-0x11],0x1
  404e00:	mov    BYTE PTR [rbp-0x10],0x2
  404e04:	mov    BYTE PTR [rbp-0xf],0x3
  404e08:	mov    BYTE PTR [rbp-0xe],0x4
  404e0c:	mov    BYTE PTR [rbp-0xd],0x5
  404e10:	mov    BYTE PTR [rbp-0xc],0x6
  404e14:	mov    BYTE PTR [rbp-0xb],0x7
  404e18:	mov    BYTE PTR [rbp-0xa],0x8
  404e1c:	mov    BYTE PTR [rbp-0x9],0x9
  404e20:	lea    rcx,[rbp-0x12]
  404e24:	mov    rax,QWORD PTR [rbp-0x58]
  404e28:	mov    edx,0xa
  404e2d:	mov    rsi,rcx
  404e30:	mov    rdi,rax
  404e33:	call   4040ad <_start@@Base+0xebd>
  404e38:	mov    DWORD PTR [rbp-0x30],eax
  404e3b:	mov    rax,QWORD PTR [rbp-0x58]
  404e3f:	mov    rdi,rax
  404e42:	call   404442 <_start@@Base+0x1252>
  404e47:	mov    edx,DWORD PTR [rbp-0x3c]
  404e4a:	mov    rax,QWORD PTR [rbp-0x58]
  404e4e:	mov    esi,edx
  404e50:	mov    rdi,rax
  404e53:	call   404476 <_start@@Base+0x1286>
  404e58:	mov    edx,DWORD PTR [rbp-0x38]
  404e5b:	mov    rax,QWORD PTR [rbp-0x58]
  404e5f:	mov    esi,edx
  404e61:	mov    rdi,rax
  404e64:	call   404476 <_start@@Base+0x1286>
  404e69:	mov    rax,QWORD PTR [rbp-0x58]
  404e6d:	mov    rdi,rax
  404e70:	call   40445c <_start@@Base+0x126c>
  404e75:	mov    DWORD PTR [rbp-0x2c],eax
  404e78:	vmovss xmm0,DWORD PTR [rip+0x77f8]        # 40c678 <_IO_stdin_used@@Base+0x678>
  404e80:	vmovss DWORD PTR [rbp-0x20],xmm0
  404e85:	vmovss xmm0,DWORD PTR [rip+0x77ef]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  404e8d:	vmovss DWORD PTR [rbp-0x1c],xmm0
  404e92:	vmovss xmm0,DWORD PTR [rip+0x77e6]        # 40c680 <_IO_stdin_used@@Base+0x680>
  404e9a:	vmovss DWORD PTR [rbp-0x18],xmm0
  404e9f:	mov    WORD PTR [rbp-0x48],0x12c
  404ea5:	mov    WORD PTR [rbp-0x46],0x96
  404eab:	mov    eax,DWORD PTR [rbp-0x38]
  404eae:	mov    edi,eax
  404eb0:	call   4044a5 <_start@@Base+0x12b5>
  404eb5:	mov    QWORD PTR [rbp-0x28],rax
  404eb9:	cmp    DWORD PTR [rbp-0x5c],0x0
  404ebd:	jne    404efb <create_monster_bottom_up@@Base+0x1a9>
  404ebf:	movzx  eax,WORD PTR [rbp-0x48]
  404ec3:	movsx  ecx,ax
  404ec6:	movzx  eax,WORD PTR [rbp-0x46]
  404eca:	movsx  edx,ax
  404ecd:	mov    r9d,DWORD PTR [rbp-0x30]
  404ed1:	mov    r8d,DWORD PTR [rbp-0x34]
  404ed5:	lea    rsi,[rbp-0x20]
  404ed9:	mov    rax,QWORD PTR [rbp-0x58]
  404edd:	sub    rsp,0x8
  404ee1:	push   QWORD PTR [rbp-0x28]
  404ee4:	mov    edi,DWORD PTR [rbp-0x2c]
  404ee7:	push   rdi
  404ee8:	push   0x0
  404eea:	mov    rdi,rax
  404eed:	call   404bae <_start@@Base+0x19be>
  404ef2:	add    rsp,0x20
  404ef6:	jmp    404fa3 <create_monster_bottom_up@@Base+0x251>
  404efb:	mov    rax,QWORD PTR [rbp-0x58]
  404eff:	mov    rdi,rax
  404f02:	call   404b4e <_start@@Base+0x195e>
  404f07:	mov    rax,QWORD PTR [rbp-0x58]
  404f0b:	vmovss xmm2,DWORD PTR [rip+0x776d]        # 40c680 <_IO_stdin_used@@Base+0x680>
  404f13:	vmovss xmm1,DWORD PTR [rip+0x7761]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  404f1b:	vmovss xmm0,DWORD PTR [rip+0x7755]        # 40c678 <_IO_stdin_used@@Base+0x678>
  404f23:	mov    rdi,rax
  404f26:	call   4044e5 <_start@@Base+0x12f5>
  404f2b:	movzx  eax,WORD PTR [rbp-0x48]
  404f2f:	movsx  edx,ax
  404f32:	mov    rax,QWORD PTR [rbp-0x58]
  404f36:	mov    esi,edx
  404f38:	mov    rdi,rax
  404f3b:	call   4045f9 <_start@@Base+0x1409>
  404f40:	mov    edx,DWORD PTR [rbp-0x34]
  404f43:	mov    rax,QWORD PTR [rbp-0x58]
  404f47:	mov    esi,edx
  404f49:	mov    rdi,rax
  404f4c:	call   40465f <_start@@Base+0x146f>
  404f51:	mov    edx,DWORD PTR [rbp-0x30]
  404f54:	mov    rax,QWORD PTR [rbp-0x58]
  404f58:	mov    esi,edx
  404f5a:	mov    rdi,rax
  404f5d:	call   4046dc <_start@@Base+0x14ec>
  404f62:	mov    rax,QWORD PTR [rbp-0x58]
  404f66:	mov    esi,0x0
  404f6b:	mov    rdi,rax
  404f6e:	call   404761 <_start@@Base+0x1571>
  404f73:	mov    edx,DWORD PTR [rbp-0x2c]
  404f76:	mov    rax,QWORD PTR [rbp-0x58]
  404f7a:	mov    esi,edx
  404f7c:	mov    rdi,rax
  404f7f:	call   4047c5 <_start@@Base+0x15d5>
  404f84:	mov    rdx,QWORD PTR [rbp-0x28]
  404f88:	mov    rax,QWORD PTR [rbp-0x58]
  404f8c:	mov    rsi,rdx
  404f8f:	mov    rdi,rax
  404f92:	call   4048bc <_start@@Base+0x16cc>
  404f97:	mov    rax,QWORD PTR [rbp-0x58]
  404f9b:	mov    rdi,rax
  404f9e:	call   404b84 <_start@@Base+0x1994>
  404fa3:	mov    eax,0x0
  404fa8:	mov    rcx,QWORD PTR [rbp-0x8]
  404fac:	xor    rcx,QWORD PTR fs:0x28
  404fb5:	je     404fbc <create_monster_bottom_up@@Base+0x26a>
  404fb7:	call   403150 <__stack_chk_fail@plt>
  404fbc:	leave  
  404fbd:	ret    

0000000000404fbe <create_monster_top_down@@Base>:
  404fbe:	endbr64 
  404fc2:	push   rbp
  404fc3:	mov    rbp,rsp
  404fc6:	sub    rsp,0x40
  404fca:	mov    QWORD PTR [rbp-0x38],rdi
  404fce:	mov    rax,QWORD PTR fs:0x28
  404fd7:	mov    QWORD PTR [rbp-0x8],rax
  404fdb:	xor    eax,eax
  404fdd:	mov    BYTE PTR [rbp-0x12],0x0
  404fe1:	mov    BYTE PTR [rbp-0x11],0x1
  404fe5:	mov    BYTE PTR [rbp-0x10],0x2
  404fe9:	mov    BYTE PTR [rbp-0xf],0x3
  404fed:	mov    BYTE PTR [rbp-0xe],0x4
  404ff1:	mov    BYTE PTR [rbp-0xd],0x5
  404ff5:	mov    BYTE PTR [rbp-0xc],0x6
  404ff9:	mov    BYTE PTR [rbp-0xb],0x7
  404ffd:	mov    BYTE PTR [rbp-0xa],0x8
  405001:	mov    BYTE PTR [rbp-0x9],0x9
  405005:	mov    QWORD PTR [rbp-0x20],0xa
  40500d:	mov    rax,QWORD PTR [rbp-0x38]
  405011:	mov    rdi,rax
  405014:	call   404b4e <_start@@Base+0x195e>
  405019:	mov    rax,QWORD PTR [rbp-0x38]
  40501d:	vmovss xmm2,DWORD PTR [rip+0x765b]        # 40c680 <_IO_stdin_used@@Base+0x680>
  405025:	vmovss xmm1,DWORD PTR [rip+0x764f]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  40502d:	vmovss xmm0,DWORD PTR [rip+0x7643]        # 40c678 <_IO_stdin_used@@Base+0x678>
  405035:	mov    rdi,rax
  405038:	call   4044e5 <_start@@Base+0x12f5>
  40503d:	mov    rax,QWORD PTR [rbp-0x38]
  405041:	mov    esi,0x12c
  405046:	mov    rdi,rax
  405049:	call   4045f9 <_start@@Base+0x1409>
  40504e:	mov    rax,QWORD PTR [rbp-0x38]
  405052:	lea    rsi,[rip+0x72ed]        # 40c346 <_IO_stdin_used@@Base+0x346>
  405059:	mov    rdi,rax
  40505c:	call   4046a7 <_start@@Base+0x14b7>
  405061:	mov    rdx,QWORD PTR [rbp-0x20]
  405065:	lea    rcx,[rbp-0x12]
  405069:	mov    rax,QWORD PTR [rbp-0x38]
  40506d:	mov    rsi,rcx
  405070:	mov    rdi,rax
  405073:	call   404724 <_start@@Base+0x1534>
  405078:	mov    rax,QWORD PTR [rbp-0x38]
  40507c:	mov    esi,0x0
  405081:	mov    rdi,rax
  405084:	call   404761 <_start@@Base+0x1571>
  405089:	mov    rax,QWORD PTR [rbp-0x38]
  40508d:	mov    rdi,rax
  405090:	call   40480d <_start@@Base+0x161d>
  405095:	mov    rax,QWORD PTR [rbp-0x38]
  405099:	lea    rsi,[rip+0x729c]        # 40c33c <_IO_stdin_used@@Base+0x33c>
  4050a0:	mov    rdi,rax
  4050a3:	call   40419f <_start@@Base+0xfaf>
  4050a8:	mov    ecx,eax
  4050aa:	mov    rax,QWORD PTR [rbp-0x38]
  4050ae:	mov    edx,0x3
  4050b3:	mov    esi,ecx
  4050b5:	mov    rdi,rax
  4050b8:	call   404880 <_start@@Base+0x1690>
  4050bd:	mov    rax,QWORD PTR [rbp-0x38]
  4050c1:	lea    rsi,[rip+0x727a]        # 40c342 <_IO_stdin_used@@Base+0x342>
  4050c8:	mov    rdi,rax
  4050cb:	call   40419f <_start@@Base+0xfaf>
  4050d0:	mov    ecx,eax
  4050d2:	mov    rax,QWORD PTR [rbp-0x38]
  4050d6:	mov    edx,0x5
  4050db:	mov    esi,ecx
  4050dd:	mov    rdi,rax
  4050e0:	call   404880 <_start@@Base+0x1690>
  4050e5:	mov    eax,DWORD PTR [rax]
  4050e7:	mov    DWORD PTR [rbp-0x24],eax
  4050ea:	mov    rax,QWORD PTR [rbp-0x38]
  4050ee:	mov    rdi,rax
  4050f1:	call   404827 <_start@@Base+0x1637>
  4050f6:	mov    edx,DWORD PTR [rbp-0x24]
  4050f9:	mov    rax,QWORD PTR [rbp-0x38]
  4050fd:	mov    esi,edx
  4050ff:	mov    rdi,rax
  405102:	call   4049fa <_start@@Base+0x180a>
  405107:	mov    rax,QWORD PTR [rbp-0x38]
  40510b:	mov    rdi,rax
  40510e:	call   404b84 <_start@@Base+0x1994>
  405113:	mov    eax,0x0
  405118:	mov    rcx,QWORD PTR [rbp-0x8]
  40511c:	xor    rcx,QWORD PTR fs:0x28
  405125:	je     40512c <create_monster_top_down@@Base+0x16e>
  405127:	call   403150 <__stack_chk_fail@plt>
  40512c:	leave  
  40512d:	ret    

000000000040512e <access_monster_buffer@@Base>:
  40512e:	endbr64 
  405132:	push   rbp
  405133:	mov    rbp,rsp
  405136:	sub    rsp,0xa0
  40513d:	mov    QWORD PTR [rbp-0x98],rdi
  405144:	mov    rax,QWORD PTR fs:0x28
  40514d:	mov    QWORD PTR [rbp-0x8],rax
  405151:	xor    eax,eax
  405153:	mov    rax,QWORD PTR [rbp-0x98]
  40515a:	mov    rdi,rax
  40515d:	call   40368f <_start@@Base+0x49f>
  405162:	mov    QWORD PTR [rbp-0x70],rax
  405166:	cmp    QWORD PTR [rbp-0x70],0x0
  40516b:	jne    40518c <access_monster_buffer@@Base+0x5e>
  40516d:	lea    rcx,[rip+0x72bc]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405174:	mov    edx,0xd3
  405179:	lea    rsi,[rip+0x71d0]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405180:	lea    rdi,[rip+0x722d]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405187:	call   403160 <__assert_fail@plt>
  40518c:	mov    rax,QWORD PTR [rbp-0x70]
  405190:	mov    rdi,rax
  405193:	call   403901 <_start@@Base+0x711>
  405198:	mov    WORD PTR [rbp-0x8c],ax
  40519f:	mov    rax,QWORD PTR [rbp-0x70]
  4051a3:	mov    rdi,rax
  4051a6:	call   403797 <_start@@Base+0x5a7>
  4051ab:	mov    WORD PTR [rbp-0x8a],ax
  4051b2:	mov    rax,QWORD PTR [rbp-0x70]
  4051b6:	mov    rdi,rax
  4051b9:	call   403a6b <_start@@Base+0x87b>
  4051be:	mov    QWORD PTR [rbp-0x68],rax
  4051c2:	mov    rax,QWORD PTR [rbp-0x68]
  4051c6:	mov    rdi,rax
  4051c9:	call   4034aa <_start@@Base+0x2ba>
  4051ce:	mov    QWORD PTR [rbp-0x60],rax
  4051d2:	cmp    WORD PTR [rbp-0x8c],0x12c
  4051db:	je     4051fc <access_monster_buffer@@Base+0xce>
  4051dd:	lea    rcx,[rip+0x724c]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4051e4:	mov    edx,0xdb
  4051e9:	lea    rsi,[rip+0x7160]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4051f0:	lea    rdi,[rip+0x71bd]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4051f7:	call   403160 <__assert_fail@plt>
  4051fc:	cmp    WORD PTR [rbp-0x8a],0x96
  405205:	je     405226 <access_monster_buffer@@Base+0xf8>
  405207:	lea    rcx,[rip+0x7222]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40520e:	mov    edx,0xdd
  405213:	lea    rsi,[rip+0x7136]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40521a:	lea    rdi,[rip+0x7193]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405221:	call   403160 <__assert_fail@plt>
  405226:	mov    rax,QWORD PTR [rbp-0x68]
  40522a:	lea    rsi,[rip+0x7115]        # 40c346 <_IO_stdin_used@@Base+0x346>
  405231:	mov    rdi,rax
  405234:	call   4031a0 <strcmp@plt>
  405239:	test   eax,eax
  40523b:	je     40525c <access_monster_buffer@@Base+0x12e>
  40523d:	lea    rcx,[rip+0x71ec]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405244:	mov    edx,0xde
  405249:	lea    rsi,[rip+0x7100]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405250:	lea    rdi,[rip+0x715d]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405257:	call   403160 <__assert_fail@plt>
  40525c:	cmp    QWORD PTR [rbp-0x60],0x3
  405261:	je     405282 <access_monster_buffer@@Base+0x154>
  405263:	lea    rcx,[rip+0x71c6]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40526a:	mov    edx,0xdf
  40526f:	lea    rsi,[rip+0x70da]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405276:	lea    rdi,[rip+0x7137]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40527d:	call   403160 <__assert_fail@plt>
  405282:	mov    rax,QWORD PTR [rbp-0x70]
  405286:	mov    rdi,rax
  405289:	call   4039c1 <_start@@Base+0x7d1>
  40528e:	mov    DWORD PTR [rbp-0x84],eax
  405294:	mov    rax,QWORD PTR [rbp-0x70]
  405298:	mov    rdi,rax
  40529b:	call   403857 <_start@@Base+0x667>
  4052a0:	mov    DWORD PTR [rbp-0x80],eax
  4052a3:	cmp    DWORD PTR [rbp-0x84],0x0
  4052aa:	jne    4052cb <access_monster_buffer@@Base+0x19d>
  4052ac:	lea    rcx,[rip+0x717d]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4052b3:	mov    edx,0xe3
  4052b8:	lea    rsi,[rip+0x7091]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4052bf:	lea    rdi,[rip+0x70ee]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4052c6:	call   403160 <__assert_fail@plt>
  4052cb:	cmp    DWORD PTR [rbp-0x80],0x0
  4052cf:	je     4052f0 <access_monster_buffer@@Base+0x1c2>
  4052d1:	lea    rcx,[rip+0x7158]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4052d8:	mov    edx,0xe4
  4052dd:	lea    rsi,[rip+0x706c]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4052e4:	lea    rdi,[rip+0x70c9]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4052eb:	call   403160 <__assert_fail@plt>
  4052f0:	mov    rax,QWORD PTR [rbp-0x70]
  4052f4:	mov    rdi,rax
  4052f7:	call   4036df <_start@@Base+0x4ef>
  4052fc:	mov    QWORD PTR [rbp-0x58],rax
  405300:	cmp    QWORD PTR [rbp-0x58],0x0
  405305:	jne    405326 <access_monster_buffer@@Base+0x1f8>
  405307:	lea    rcx,[rip+0x7122]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40530e:	mov    edx,0xe8
  405313:	lea    rsi,[rip+0x7036]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40531a:	lea    rdi,[rip+0x7093]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405321:	call   403160 <__assert_fail@plt>
  405326:	mov    rax,QWORD PTR [rbp-0x58]
  40532a:	mov    rdi,rax
  40532d:	call   4035f4 <_start@@Base+0x404>
  405332:	vmovd  eax,xmm0
  405336:	mov    DWORD PTR [rbp-0x7c],eax
  405339:	mov    rax,QWORD PTR [rbp-0x58]
  40533d:	mov    rdi,rax
  405340:	call   403625 <_start@@Base+0x435>
  405345:	vmovd  eax,xmm0
  405349:	mov    DWORD PTR [rbp-0x78],eax
  40534c:	mov    rax,QWORD PTR [rbp-0x58]
  405350:	mov    rdi,rax
  405353:	call   40365a <_start@@Base+0x46a>
  405358:	vmovd  eax,xmm0
  40535c:	mov    DWORD PTR [rbp-0x74],eax
  40535f:	vmovss xmm0,DWORD PTR [rip+0x7311]        # 40c678 <_IO_stdin_used@@Base+0x678>
  405367:	vucomiss xmm0,DWORD PTR [rbp-0x7c]
  40536c:	jp     40537d <access_monster_buffer@@Base+0x24f>
  40536e:	vmovss xmm0,DWORD PTR [rip+0x7302]        # 40c678 <_IO_stdin_used@@Base+0x678>
  405376:	vucomiss xmm0,DWORD PTR [rbp-0x7c]
  40537b:	je     40539c <access_monster_buffer@@Base+0x26e>
  40537d:	lea    rcx,[rip+0x70ac]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405384:	mov    edx,0xf0
  405389:	lea    rsi,[rip+0x6fc0]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405390:	lea    rdi,[rip+0x701d]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405397:	call   403160 <__assert_fail@plt>
  40539c:	vmovss xmm0,DWORD PTR [rbp-0x78]
  4053a1:	vucomiss xmm0,DWORD PTR [rip+0x72d3]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  4053a9:	jp     4053ba <access_monster_buffer@@Base+0x28c>
  4053ab:	vmovss xmm0,DWORD PTR [rbp-0x78]
  4053b0:	vucomiss xmm0,DWORD PTR [rip+0x72c4]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  4053b8:	je     4053d9 <access_monster_buffer@@Base+0x2ab>
  4053ba:	lea    rcx,[rip+0x706f]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4053c1:	mov    edx,0xf1
  4053c6:	lea    rsi,[rip+0x6f83]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4053cd:	lea    rdi,[rip+0x6fe0]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4053d4:	call   403160 <__assert_fail@plt>
  4053d9:	vmovss xmm0,DWORD PTR [rbp-0x74]
  4053de:	vucomiss xmm0,DWORD PTR [rip+0x729a]        # 40c680 <_IO_stdin_used@@Base+0x680>
  4053e6:	jp     4053f7 <access_monster_buffer@@Base+0x2c9>
  4053e8:	vmovss xmm0,DWORD PTR [rbp-0x74]
  4053ed:	vucomiss xmm0,DWORD PTR [rip+0x728b]        # 40c680 <_IO_stdin_used@@Base+0x680>
  4053f5:	je     405416 <access_monster_buffer@@Base+0x2e8>
  4053f7:	lea    rcx,[rip+0x7032]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4053fe:	mov    edx,0xf2
  405403:	lea    rsi,[rip+0x6f46]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40540a:	lea    rdi,[rip+0x6fa3]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405411:	call   403160 <__assert_fail@plt>
  405416:	mov    rdx,QWORD PTR [rbp-0x58]
  40541a:	lea    rax,[rbp-0x14]
  40541e:	mov    rsi,rdx
  405421:	mov    rdi,rax
  405424:	call   4042fb <_start@@Base+0x110b>
  405429:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40542e:	vmovss xmm1,DWORD PTR [rip+0x7242]        # 40c678 <_IO_stdin_used@@Base+0x678>
  405436:	vucomiss xmm0,xmm1
  40543a:	jp     40544a <access_monster_buffer@@Base+0x31c>
  40543c:	vmovss xmm1,DWORD PTR [rip+0x7234]        # 40c678 <_IO_stdin_used@@Base+0x678>
  405444:	vucomiss xmm0,xmm1
  405448:	je     405469 <access_monster_buffer@@Base+0x33b>
  40544a:	lea    rcx,[rip+0x6fdf]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405451:	mov    edx,0xfa
  405456:	lea    rsi,[rip+0x6ef3]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40545d:	lea    rdi,[rip+0x6f50]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405464:	call   403160 <__assert_fail@plt>
  405469:	vmovss xmm0,DWORD PTR [rbp-0x10]
  40546e:	vucomiss xmm0,DWORD PTR [rip+0x7206]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  405476:	jp     405482 <access_monster_buffer@@Base+0x354>
  405478:	vucomiss xmm0,DWORD PTR [rip+0x71fc]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  405480:	je     4054a1 <access_monster_buffer@@Base+0x373>
  405482:	lea    rcx,[rip+0x6fa7]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405489:	mov    edx,0xfb
  40548e:	lea    rsi,[rip+0x6ebb]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405495:	lea    rdi,[rip+0x6f18]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40549c:	call   403160 <__assert_fail@plt>
  4054a1:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4054a6:	vucomiss xmm0,DWORD PTR [rip+0x71d2]        # 40c680 <_IO_stdin_used@@Base+0x680>
  4054ae:	jp     4054ba <access_monster_buffer@@Base+0x38c>
  4054b0:	vucomiss xmm0,DWORD PTR [rip+0x71c8]        # 40c680 <_IO_stdin_used@@Base+0x680>
  4054b8:	je     4054d9 <access_monster_buffer@@Base+0x3ab>
  4054ba:	lea    rcx,[rip+0x6f6f]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4054c1:	mov    edx,0xfc
  4054c6:	lea    rsi,[rip+0x6e83]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4054cd:	lea    rdi,[rip+0x6ee0]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4054d4:	call   403160 <__assert_fail@plt>
  4054d9:	mov    rax,QWORD PTR [rbp-0x70]
  4054dd:	mov    rdi,rax
  4054e0:	call   403b40 <_start@@Base+0x950>
  4054e5:	mov    QWORD PTR [rbp-0x50],rax
  4054e9:	mov    rax,QWORD PTR [rbp-0x50]
  4054ed:	mov    rdi,rax
  4054f0:	call   4034d8 <_start@@Base+0x2e8>
  4054f5:	mov    QWORD PTR [rbp-0x48],rax
  4054f9:	cmp    QWORD PTR [rbp-0x50],0x0
  4054fe:	jne    40551f <access_monster_buffer@@Base+0x3f1>
  405500:	lea    rcx,[rip+0x6f29]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405507:	mov    edx,0x105
  40550c:	lea    rsi,[rip+0x6e3d]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405513:	lea    rdi,[rip+0x6e9a]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40551a:	call   403160 <__assert_fail@plt>
  40551f:	cmp    QWORD PTR [rbp-0x48],0xa
  405524:	je     405545 <access_monster_buffer@@Base+0x417>
  405526:	lea    rcx,[rip+0x6f03]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40552d:	mov    edx,0x107
  405532:	lea    rsi,[rip+0x6e17]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405539:	lea    rdi,[rip+0x6e74]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405540:	call   403160 <__assert_fail@plt>
  405545:	mov    rax,QWORD PTR [rbp-0x50]
  405549:	mov    esi,0x2
  40554e:	mov    rdi,rax
  405551:	call   4034f2 <_start@@Base+0x302>
  405556:	mov    BYTE PTR [rbp-0x8d],al
  40555c:	cmp    BYTE PTR [rbp-0x8d],0x2
  405563:	je     405584 <access_monster_buffer@@Base+0x456>
  405565:	lea    rcx,[rip+0x6ec4]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40556c:	mov    edx,0x10b
  405571:	lea    rsi,[rip+0x6dd8]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405578:	lea    rdi,[rip+0x6e35]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40557f:	call   403160 <__assert_fail@plt>
  405584:	mov    rax,QWORD PTR [rbp-0x70]
  405588:	mov    rdi,rax
  40558b:	call   403c15 <_start@@Base+0xa25>
  405590:	mov    QWORD PTR [rbp-0x40],rax
  405594:	mov    rax,QWORD PTR [rbp-0x40]
  405598:	mov    rdi,rax
  40559b:	call   403e7b <_start@@Base+0xc8b>
  4055a0:	mov    QWORD PTR [rbp-0x38],rax
  4055a4:	cmp    QWORD PTR [rbp-0x38],0x2
  4055a9:	je     4055ca <access_monster_buffer@@Base+0x49c>
  4055ab:	lea    rcx,[rip+0x6e7e]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4055b2:	mov    edx,0x10f
  4055b7:	lea    rsi,[rip+0x6d92]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4055be:	lea    rdi,[rip+0x6def]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4055c5:	call   403160 <__assert_fail@plt>
  4055ca:	mov    rax,QWORD PTR [rbp-0x40]
  4055ce:	mov    esi,0x1
  4055d3:	mov    rdi,rax
  4055d6:	call   403ea9 <_start@@Base+0xcb9>
  4055db:	mov    rdi,rax
  4055de:	call   403f18 <_start@@Base+0xd28>
  4055e3:	mov    QWORD PTR [rbp-0x30],rax
  4055e7:	mov    rax,QWORD PTR [rbp-0x40]
  4055eb:	mov    esi,0x1
  4055f0:	mov    rdi,rax
  4055f3:	call   403ea9 <_start@@Base+0xcb9>
  4055f8:	mov    rdi,rax
  4055fb:	call   403fed <_start@@Base+0xdfd>
  405600:	mov    WORD PTR [rbp-0x88],ax
  405607:	cmp    QWORD PTR [rbp-0x30],0x0
  40560c:	je     405625 <access_monster_buffer@@Base+0x4f7>
  40560e:	mov    rax,QWORD PTR [rbp-0x30]
  405612:	lea    rsi,[rip+0x6d29]        # 40c342 <_IO_stdin_used@@Base+0x342>
  405619:	mov    rdi,rax
  40561c:	call   4031a0 <strcmp@plt>
  405621:	test   eax,eax
  405623:	je     405644 <access_monster_buffer@@Base+0x516>
  405625:	lea    rcx,[rip+0x6e04]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40562c:	mov    edx,0x113
  405631:	lea    rsi,[rip+0x6d18]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405638:	lea    rdi,[rip+0x6d75]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40563f:	call   403160 <__assert_fail@plt>
  405644:	cmp    WORD PTR [rbp-0x88],0x5
  40564c:	je     40566d <access_monster_buffer@@Base+0x53f>
  40564e:	lea    rcx,[rip+0x6ddb]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405655:	mov    edx,0x114
  40565a:	lea    rsi,[rip+0x6cef]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405661:	lea    rdi,[rip+0x6d4c]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405668:	call   403160 <__assert_fail@plt>
  40566d:	mov    rax,QWORD PTR [rbp-0x70]
  405671:	mov    rdi,rax
  405674:	call   403cea <_start@@Base+0xafa>
  405679:	cmp    al,0x1
  40567b:	jne    405713 <access_monster_buffer@@Base+0x5e5>
  405681:	mov    rax,QWORD PTR [rbp-0x70]
  405685:	mov    rdi,rax
  405688:	call   403daa <_start@@Base+0xbba>
  40568d:	mov    QWORD PTR [rbp-0x28],rax
  405691:	mov    rax,QWORD PTR [rbp-0x28]
  405695:	mov    rdi,rax
  405698:	call   403f18 <_start@@Base+0xd28>
  40569d:	mov    QWORD PTR [rbp-0x20],rax
  4056a1:	mov    rax,QWORD PTR [rbp-0x28]
  4056a5:	mov    rdi,rax
  4056a8:	call   403fed <_start@@Base+0xdfd>
  4056ad:	mov    WORD PTR [rbp-0x86],ax
  4056b4:	mov    rax,QWORD PTR [rbp-0x20]
  4056b8:	lea    rsi,[rip+0x6c83]        # 40c342 <_IO_stdin_used@@Base+0x342>
  4056bf:	mov    rdi,rax
  4056c2:	call   4031a0 <strcmp@plt>
  4056c7:	test   eax,eax
  4056c9:	je     4056ea <access_monster_buffer@@Base+0x5bc>
  4056cb:	lea    rcx,[rip+0x6d5e]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4056d2:	mov    edx,0x11e
  4056d7:	lea    rsi,[rip+0x6c72]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4056de:	lea    rdi,[rip+0x6ccf]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4056e5:	call   403160 <__assert_fail@plt>
  4056ea:	cmp    WORD PTR [rbp-0x86],0x5
  4056f2:	je     405713 <access_monster_buffer@@Base+0x5e5>
  4056f4:	lea    rcx,[rip+0x6d35]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4056fb:	mov    edx,0x11f
  405700:	lea    rsi,[rip+0x6c49]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405707:	lea    rdi,[rip+0x6ca6]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40570e:	call   403160 <__assert_fail@plt>
  405713:	mov    eax,0x0
  405718:	mov    rcx,QWORD PTR [rbp-0x8]
  40571c:	xor    rcx,QWORD PTR fs:0x28
  405725:	je     40572c <access_monster_buffer@@Base+0x5fe>
  405727:	call   403150 <__stack_chk_fail@plt>
  40572c:	leave  
  40572d:	ret    

000000000040572e <main@@Base>:
  40572e:	endbr64 
  405732:	push   rbp
  405733:	mov    rbp,rsp
  405736:	sub    rsp,0x1b0
  40573d:	mov    DWORD PTR [rbp-0x1a4],edi
  405743:	mov    QWORD PTR [rbp-0x1b0],rsi
  40574a:	mov    rax,QWORD PTR fs:0x28
  405753:	mov    QWORD PTR [rbp-0x8],rax
  405757:	xor    eax,eax
  405759:	lea    rax,[rbp-0x190]
  405760:	mov    rdi,rax
  405763:	call   4063b8 <flatcc_builder_init@@Base>
  405768:	lea    rax,[rbp-0x190]
  40576f:	mov    esi,0x0
  405774:	mov    rdi,rax
  405777:	call   404d52 <create_monster_bottom_up@@Base>
  40577c:	test   eax,eax
  40577e:	je     40579f <main@@Base+0x71>
  405780:	lea    rcx,[rip+0x6ee5]        # 40c66c <_IO_stdin_used@@Base+0x66c>
  405787:	mov    edx,0x134
  40578c:	lea    rsi,[rip+0x6bbd]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405793:	lea    rdi,[rip+0x6c1a]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40579a:	call   403160 <__assert_fail@plt>
  40579f:	lea    rdx,[rbp-0x1a0]
  4057a6:	lea    rax,[rbp-0x190]
  4057ad:	mov    rsi,rdx
  4057b0:	mov    rdi,rax
  4057b3:	call   40aef4 <flatcc_builder_finalize_aligned_buffer@@Base>
  4057b8:	mov    QWORD PTR [rbp-0x198],rax
  4057bf:	mov    rax,QWORD PTR [rbp-0x198]
  4057c6:	mov    rdi,rax
  4057c9:	call   40aff6 <flatcc_builder_aligned_free@@Base>
  4057ce:	lea    rax,[rbp-0x190]
  4057d5:	mov    rdi,rax
  4057d8:	call   4065ff <flatcc_builder_reset@@Base>
  4057dd:	lea    rax,[rbp-0x190]
  4057e4:	mov    esi,0x1
  4057e9:	mov    rdi,rax
  4057ec:	call   404d52 <create_monster_bottom_up@@Base>
  4057f1:	test   eax,eax
  4057f3:	je     405814 <main@@Base+0xe6>
  4057f5:	lea    rcx,[rip+0x6e70]        # 40c66c <_IO_stdin_used@@Base+0x66c>
  4057fc:	mov    edx,0x14f
  405801:	lea    rsi,[rip+0x6b48]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405808:	lea    rdi,[rip+0x6ba5]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40580f:	call   403160 <__assert_fail@plt>
  405814:	lea    rdx,[rbp-0x1a0]
  40581b:	lea    rax,[rbp-0x190]
  405822:	mov    rsi,rdx
  405825:	mov    rdi,rax
  405828:	call   40aef4 <flatcc_builder_finalize_aligned_buffer@@Base>
  40582d:	mov    QWORD PTR [rbp-0x198],rax
  405834:	mov    rax,QWORD PTR [rbp-0x198]
  40583b:	mov    rdi,rax
  40583e:	call   40512e <access_monster_buffer@@Base>
  405843:	mov    rax,QWORD PTR [rbp-0x198]
  40584a:	mov    rdi,rax
  40584d:	call   40aff6 <flatcc_builder_aligned_free@@Base>
  405852:	lea    rax,[rbp-0x190]
  405859:	mov    rdi,rax
  40585c:	call   4065ff <flatcc_builder_reset@@Base>
  405861:	lea    rax,[rbp-0x190]
  405868:	mov    rdi,rax
  40586b:	call   404fbe <create_monster_top_down@@Base>
  405870:	lea    rdx,[rbp-0x1a0]
  405877:	lea    rax,[rbp-0x190]
  40587e:	mov    rsi,rdx
  405881:	mov    rdi,rax
  405884:	call   40ae29 <flatcc_builder_finalize_buffer@@Base>
  405889:	mov    QWORD PTR [rbp-0x198],rax
  405890:	mov    rax,QWORD PTR [rbp-0x198]
  405897:	mov    rdi,rax
  40589a:	call   40512e <access_monster_buffer@@Base>
  40589f:	test   eax,eax
  4058a1:	je     4058c2 <main@@Base+0x194>
  4058a3:	lea    rcx,[rip+0x6dc2]        # 40c66c <_IO_stdin_used@@Base+0x66c>
  4058aa:	mov    edx,0x156
  4058af:	lea    rsi,[rip+0x6a9a]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4058b6:	lea    rdi,[rip+0x6af7]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4058bd:	call   403160 <__assert_fail@plt>
  4058c2:	mov    rax,QWORD PTR [rbp-0x198]
  4058c9:	mov    rdi,rax
  4058cc:	call   403110 <free@plt>
  4058d1:	lea    rax,[rbp-0x190]
  4058d8:	mov    rdi,rax
  4058db:	call   406627 <flatcc_builder_clear@@Base>
  4058e0:	lea    rdi,[rip+0x6ad1]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  4058e7:	call   403130 <puts@plt>
  4058ec:	mov    eax,0x0
  4058f1:	mov    rcx,QWORD PTR [rbp-0x8]
  4058f5:	xor    rcx,QWORD PTR fs:0x28
  4058fe:	je     405905 <main@@Base+0x1d7>
  405900:	call   403150 <__stack_chk_fail@plt>
  405905:	leave  
  405906:	ret    
  405907:	push   rbp
  405908:	mov    rbp,rsp
  40590b:	sub    rsp,0x30
  40590f:	mov    QWORD PTR [rbp-0x28],rdi
  405913:	mov    QWORD PTR [rbp-0x30],rsi
  405917:	mov    rax,QWORD PTR fs:0x28
  405920:	mov    QWORD PTR [rbp-0x8],rax
  405924:	xor    eax,eax
  405926:	mov    QWORD PTR [rbp-0x10],0x0
  40592e:	cmp    QWORD PTR [rbp-0x28],0x7
  405933:	ja     40593d <main@@Base+0x20f>
  405935:	mov    QWORD PTR [rbp-0x28],0x8
  40593d:	mov    rdx,QWORD PTR [rbp-0x30]
  405941:	mov    rcx,QWORD PTR [rbp-0x28]
  405945:	lea    rax,[rbp-0x10]
  405949:	mov    rsi,rcx
  40594c:	mov    rdi,rax
  40594f:	call   4031e0 <posix_memalign@plt>
  405954:	mov    DWORD PTR [rbp-0x14],eax
  405957:	cmp    DWORD PTR [rbp-0x14],0x0
  40595b:	je     40597a <main@@Base+0x24c>
  40595d:	mov    rax,QWORD PTR [rbp-0x10]
  405961:	test   rax,rax
  405964:	je     40597a <main@@Base+0x24c>
  405966:	mov    rax,QWORD PTR [rbp-0x10]
  40596a:	mov    rdi,rax
  40596d:	call   403110 <free@plt>
  405972:	mov    QWORD PTR [rbp-0x10],0x0
  40597a:	mov    rax,QWORD PTR [rbp-0x10]
  40597e:	mov    rcx,QWORD PTR [rbp-0x8]
  405982:	xor    rcx,QWORD PTR fs:0x28
  40598b:	je     405992 <main@@Base+0x264>
  40598d:	call   403150 <__stack_chk_fail@plt>
  405992:	leave  
  405993:	ret    
  405994:	push   rbp
  405995:	mov    rbp,rsp
  405998:	mov    DWORD PTR [rbp-0x4],edi
  40599b:	mov    eax,DWORD PTR [rbp-0x4]
  40599e:	pop    rbp
  40599f:	ret    
  4059a0:	push   rbp
  4059a1:	mov    rbp,rsp
  4059a4:	mov    eax,edi
  4059a6:	mov    BYTE PTR [rbp-0x4],al
  4059a9:	movzx  eax,BYTE PTR [rbp-0x4]
  4059ad:	pop    rbp
  4059ae:	ret    
  4059af:	push   rbp
  4059b0:	mov    rbp,rsp
  4059b3:	mov    DWORD PTR [rbp-0x4],edi
  4059b6:	mov    eax,DWORD PTR [rbp-0x4]
  4059b9:	pop    rbp
  4059ba:	ret    
  4059bb:	push   rbp
  4059bc:	mov    rbp,rsp
  4059bf:	mov    QWORD PTR [rbp-0x8],rdi
  4059c3:	mov    QWORD PTR [rbp-0x10],rsi
  4059c7:	mov    rax,QWORD PTR [rbp-0x8]
  4059cb:	mov    rdx,QWORD PTR [rax]
  4059ce:	mov    rax,QWORD PTR [rbp-0x8]
  4059d2:	mov    rax,QWORD PTR [rax+0x8]
  4059d6:	cmp    rdx,rax
  4059d9:	jne    4059fb <main@@Base+0x2cd>
  4059db:	cmp    QWORD PTR [rbp-0x10],0x0
  4059e0:	je     4059f1 <main@@Base+0x2c3>
  4059e2:	mov    rax,QWORD PTR [rbp-0x8]
  4059e6:	mov    rdx,QWORD PTR [rax+0x30]
  4059ea:	mov    rax,QWORD PTR [rbp-0x10]
  4059ee:	mov    QWORD PTR [rax],rdx
  4059f1:	mov    rax,QWORD PTR [rbp-0x8]
  4059f5:	mov    rax,QWORD PTR [rax+0x10]
  4059f9:	jmp    405a12 <main@@Base+0x2e4>
  4059fb:	cmp    QWORD PTR [rbp-0x10],0x0
  405a00:	je     405a0d <main@@Base+0x2df>
  405a02:	mov    rax,QWORD PTR [rbp-0x10]
  405a06:	mov    QWORD PTR [rax],0x0
  405a0d:	mov    eax,0x0
  405a12:	pop    rbp
  405a13:	ret    
  405a14:	push   rbp
  405a15:	mov    rbp,rsp
  405a18:	sub    rsp,0x20
  405a1c:	mov    QWORD PTR [rbp-0x18],rdi
  405a20:	mov    QWORD PTR [rbp-0x20],rsi
  405a24:	mov    rdx,QWORD PTR [rbp-0x20]
  405a28:	mov    rax,QWORD PTR [rbp-0x18]
  405a2c:	mov    esi,0x0
  405a31:	mov    rdi,rax
  405a34:	call   403180 <memchr@plt>
  405a39:	mov    QWORD PTR [rbp-0x8],rax
  405a3d:	cmp    QWORD PTR [rbp-0x8],0x0
  405a42:	je     405a4e <main@@Base+0x320>
  405a44:	mov    rax,QWORD PTR [rbp-0x8]
  405a48:	sub    rax,QWORD PTR [rbp-0x18]
  405a4c:	jmp    405a52 <main@@Base+0x324>
  405a4e:	mov    rax,QWORD PTR [rbp-0x20]
  405a52:	leave  
  405a53:	ret    

0000000000405a54 <flatcc_builder_default_alloc@@Base>:
  405a54:	endbr64 
  405a58:	push   rbp
  405a59:	mov    rbp,rsp
  405a5c:	sub    rsp,0x30
  405a60:	mov    QWORD PTR [rbp-0x18],rdi
  405a64:	mov    QWORD PTR [rbp-0x20],rsi
  405a68:	mov    QWORD PTR [rbp-0x28],rdx
  405a6c:	mov    DWORD PTR [rbp-0x2c],ecx
  405a6f:	mov    DWORD PTR [rbp-0x30],r8d
  405a73:	cmp    QWORD PTR [rbp-0x28],0x0
  405a78:	jne    405ab6 <flatcc_builder_default_alloc@@Base+0x62>
  405a7a:	mov    rax,QWORD PTR [rbp-0x20]
  405a7e:	mov    rax,QWORD PTR [rax]
  405a81:	test   rax,rax
  405a84:	je     405aac <flatcc_builder_default_alloc@@Base+0x58>
  405a86:	mov    rax,QWORD PTR [rbp-0x20]
  405a8a:	mov    rax,QWORD PTR [rax]
  405a8d:	mov    rdi,rax
  405a90:	call   403110 <free@plt>
  405a95:	mov    rax,QWORD PTR [rbp-0x20]
  405a99:	mov    QWORD PTR [rax],0x0
  405aa0:	mov    rax,QWORD PTR [rbp-0x20]
  405aa4:	mov    QWORD PTR [rax+0x8],0x0
  405aac:	mov    eax,0x0
  405ab1:	jmp    405bc5 <flatcc_builder_default_alloc@@Base+0x171>
  405ab6:	cmp    DWORD PTR [rbp-0x30],0x4
  405aba:	je     405aec <flatcc_builder_default_alloc@@Base+0x98>
  405abc:	cmp    DWORD PTR [rbp-0x30],0x4
  405ac0:	jg     405aca <flatcc_builder_default_alloc@@Base+0x76>
  405ac2:	cmp    DWORD PTR [rbp-0x30],0x1
  405ac6:	je     405ad8 <flatcc_builder_default_alloc@@Base+0x84>
  405ac8:	jmp    405b00 <flatcc_builder_default_alloc@@Base+0xac>
  405aca:	cmp    DWORD PTR [rbp-0x30],0x5
  405ace:	je     405ae2 <flatcc_builder_default_alloc@@Base+0x8e>
  405ad0:	cmp    DWORD PTR [rbp-0x30],0x7
  405ad4:	je     405af6 <flatcc_builder_default_alloc@@Base+0xa2>
  405ad6:	jmp    405b00 <flatcc_builder_default_alloc@@Base+0xac>
  405ad8:	mov    QWORD PTR [rbp-0x10],0x100
  405ae0:	jmp    405b09 <flatcc_builder_default_alloc@@Base+0xb5>
  405ae2:	mov    rax,QWORD PTR [rbp-0x28]
  405ae6:	mov    QWORD PTR [rbp-0x10],rax
  405aea:	jmp    405b09 <flatcc_builder_default_alloc@@Base+0xb5>
  405aec:	mov    QWORD PTR [rbp-0x10],0x120
  405af4:	jmp    405b09 <flatcc_builder_default_alloc@@Base+0xb5>
  405af6:	mov    QWORD PTR [rbp-0x10],0x40
  405afe:	jmp    405b09 <flatcc_builder_default_alloc@@Base+0xb5>
  405b00:	mov    QWORD PTR [rbp-0x10],0x20
  405b08:	nop
  405b09:	jmp    405b0f <flatcc_builder_default_alloc@@Base+0xbb>
  405b0b:	shl    QWORD PTR [rbp-0x10],1
  405b0f:	mov    rax,QWORD PTR [rbp-0x10]
  405b13:	cmp    rax,QWORD PTR [rbp-0x28]
  405b17:	jb     405b0b <flatcc_builder_default_alloc@@Base+0xb7>
  405b19:	mov    rax,QWORD PTR [rbp-0x20]
  405b1d:	mov    rax,QWORD PTR [rax+0x8]
  405b21:	cmp    QWORD PTR [rbp-0x28],rax
  405b25:	ja     405b42 <flatcc_builder_default_alloc@@Base+0xee>
  405b27:	mov    rax,QWORD PTR [rbp-0x20]
  405b2b:	mov    rax,QWORD PTR [rax+0x8]
  405b2f:	shr    rax,1
  405b32:	cmp    QWORD PTR [rbp-0x10],rax
  405b36:	ja     405b42 <flatcc_builder_default_alloc@@Base+0xee>
  405b38:	mov    eax,0x0
  405b3d:	jmp    405bc5 <flatcc_builder_default_alloc@@Base+0x171>
  405b42:	mov    rax,QWORD PTR [rbp-0x20]
  405b46:	mov    rax,QWORD PTR [rax]
  405b49:	mov    rdx,QWORD PTR [rbp-0x10]
  405b4d:	mov    rsi,rdx
  405b50:	mov    rdi,rax
  405b53:	call   4031d0 <realloc@plt>
  405b58:	mov    QWORD PTR [rbp-0x8],rax
  405b5c:	cmp    QWORD PTR [rbp-0x8],0x0
  405b61:	jne    405b6a <flatcc_builder_default_alloc@@Base+0x116>
  405b63:	mov    eax,0xffffffff
  405b68:	jmp    405bc5 <flatcc_builder_default_alloc@@Base+0x171>
  405b6a:	cmp    DWORD PTR [rbp-0x2c],0x0
  405b6e:	je     405ba9 <flatcc_builder_default_alloc@@Base+0x155>
  405b70:	mov    rax,QWORD PTR [rbp-0x20]
  405b74:	mov    rax,QWORD PTR [rax+0x8]
  405b78:	cmp    QWORD PTR [rbp-0x10],rax
  405b7c:	jbe    405ba9 <flatcc_builder_default_alloc@@Base+0x155>
  405b7e:	mov    rax,QWORD PTR [rbp-0x20]
  405b82:	mov    rax,QWORD PTR [rax+0x8]
  405b86:	mov    rdx,QWORD PTR [rbp-0x10]
  405b8a:	sub    rdx,rax
  405b8d:	mov    rax,QWORD PTR [rbp-0x20]
  405b91:	mov    rcx,QWORD PTR [rax+0x8]
  405b95:	mov    rax,QWORD PTR [rbp-0x8]
  405b99:	add    rax,rcx
  405b9c:	mov    esi,0x0
  405ba1:	mov    rdi,rax
  405ba4:	call   403170 <memset@plt>
  405ba9:	mov    rax,QWORD PTR [rbp-0x20]
  405bad:	mov    rdx,QWORD PTR [rbp-0x8]
  405bb1:	mov    QWORD PTR [rax],rdx
  405bb4:	mov    rax,QWORD PTR [rbp-0x20]
  405bb8:	mov    rdx,QWORD PTR [rbp-0x10]
  405bbc:	mov    QWORD PTR [rax+0x8],rdx
  405bc0:	mov    eax,0x0
  405bc5:	leave  
  405bc6:	ret    
  405bc7:	push   rbp
  405bc8:	mov    rbp,rsp
  405bcb:	mov    QWORD PTR [rbp-0x18],rdi
  405bcf:	mov    DWORD PTR [rbp-0x1c],esi
  405bd2:	mov    rax,QWORD PTR [rbp-0x18]
  405bd6:	add    rax,0x58
  405bda:	add    rax,0x10
  405bde:	mov    QWORD PTR [rbp-0x8],rax
  405be2:	mov    rax,QWORD PTR [rbp-0x18]
  405be6:	mov    rdx,QWORD PTR [rax+0x68]
  405bea:	mov    rax,QWORD PTR [rbp-0x18]
  405bee:	mov    eax,DWORD PTR [rax+0x28]
  405bf1:	mov    eax,eax
  405bf3:	add    rdx,rax
  405bf6:	mov    rax,QWORD PTR [rbp-0x18]
  405bfa:	mov    QWORD PTR [rax+0x18],rdx
  405bfe:	mov    rax,QWORD PTR [rbp-0x8]
  405c02:	mov    rax,QWORD PTR [rax+0x8]
  405c06:	mov    edx,eax
  405c08:	mov    rax,QWORD PTR [rbp-0x18]
  405c0c:	mov    eax,DWORD PTR [rax+0x28]
  405c0f:	sub    edx,eax
  405c11:	mov    rax,QWORD PTR [rbp-0x18]
  405c15:	mov    DWORD PTR [rax+0x24],edx
  405c18:	mov    rax,QWORD PTR [rbp-0x18]
  405c1c:	mov    eax,DWORD PTR [rax+0x24]
  405c1f:	cmp    DWORD PTR [rbp-0x1c],eax
  405c22:	jae    405c2e <flatcc_builder_default_alloc@@Base+0x1da>
  405c24:	mov    rax,QWORD PTR [rbp-0x18]
  405c28:	mov    edx,DWORD PTR [rbp-0x1c]
  405c2b:	mov    DWORD PTR [rax+0x24],edx
  405c2e:	mov    rax,QWORD PTR [rbp-0x18]
  405c32:	mov    rax,QWORD PTR [rax+0x30]
  405c36:	mov    edx,DWORD PTR [rbp-0x1c]
  405c39:	mov    DWORD PTR [rax+0x4],edx
  405c3c:	nop
  405c3d:	pop    rbp
  405c3e:	ret    
  405c3f:	endbr64 
  405c43:	push   rbp
  405c44:	mov    rbp,rsp
  405c47:	sub    rsp,0x30
  405c4b:	mov    QWORD PTR [rbp-0x18],rdi
  405c4f:	mov    QWORD PTR [rbp-0x20],rsi
  405c53:	mov    DWORD PTR [rbp-0x24],edx
  405c56:	mov    rax,QWORD PTR [rbp-0x18]
  405c5a:	add    rax,0x58
  405c5e:	add    rax,0x10
  405c62:	mov    QWORD PTR [rbp-0x8],rax
  405c66:	mov    rax,QWORD PTR [rbp-0x18]
  405c6a:	mov    rax,QWORD PTR [rax+0x50]
  405c6e:	mov    rdx,QWORD PTR [rbp-0x18]
  405c72:	mov    edx,DWORD PTR [rdx+0x28]
  405c75:	mov    ecx,edx
  405c77:	mov    rdx,QWORD PTR [rbp-0x20]
  405c7b:	lea    r9,[rcx+rdx*1]
  405c7f:	mov    rdx,QWORD PTR [rbp-0x18]
  405c83:	mov    rdi,QWORD PTR [rdx+0x40]
  405c87:	mov    rsi,QWORD PTR [rbp-0x8]
  405c8b:	mov    r8d,0x1
  405c91:	mov    ecx,0x1
  405c96:	mov    rdx,r9
  405c99:	call   rax
  405c9b:	test   eax,eax
  405c9d:	je     405ca6 <flatcc_builder_default_alloc@@Base+0x252>
  405c9f:	mov    eax,0xffffffff
  405ca4:	jmp    405cbc <flatcc_builder_default_alloc@@Base+0x268>
  405ca6:	mov    edx,DWORD PTR [rbp-0x24]
  405ca9:	mov    rax,QWORD PTR [rbp-0x18]
  405cad:	mov    esi,edx
  405caf:	mov    rdi,rax
  405cb2:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  405cb7:	mov    eax,0x0
  405cbc:	leave  
  405cbd:	ret    
  405cbe:	push   rbp
  405cbf:	mov    rbp,rsp
  405cc2:	sub    rsp,0x20
  405cc6:	mov    QWORD PTR [rbp-0x18],rdi
  405cca:	mov    DWORD PTR [rbp-0x1c],esi
  405ccd:	mov    rax,QWORD PTR [rbp-0x18]
  405cd1:	mov    eax,DWORD PTR [rax+0x20]
  405cd4:	mov    eax,eax
  405cd6:	mov    QWORD PTR [rbp-0x8],rax
  405cda:	mov    rax,QWORD PTR [rbp-0x18]
  405cde:	mov    edx,DWORD PTR [rax+0x20]
  405ce1:	mov    eax,DWORD PTR [rbp-0x1c]
  405ce4:	add    edx,eax
  405ce6:	mov    rax,QWORD PTR [rbp-0x18]
  405cea:	mov    DWORD PTR [rax+0x20],edx
  405ced:	mov    rax,QWORD PTR [rbp-0x18]
  405cf1:	mov    edx,DWORD PTR [rax+0x20]
  405cf4:	mov    rax,QWORD PTR [rbp-0x18]
  405cf8:	mov    eax,DWORD PTR [rax+0x24]
  405cfb:	cmp    edx,eax
  405cfd:	jb     405d29 <flatcc_builder_default_alloc@@Base+0x2d5>
  405cff:	mov    rax,QWORD PTR [rbp-0x18]
  405d03:	mov    eax,DWORD PTR [rax+0x20]
  405d06:	inc    eax
  405d08:	mov    ecx,eax
  405d0a:	mov    rax,QWORD PTR [rbp-0x18]
  405d0e:	mov    edx,0xfffffffc
  405d13:	mov    rsi,rcx
  405d16:	mov    rdi,rax
  405d19:	call   405c3f <flatcc_builder_default_alloc@@Base+0x1eb>
  405d1e:	test   eax,eax
  405d20:	je     405d29 <flatcc_builder_default_alloc@@Base+0x2d5>
  405d22:	mov    eax,0x0
  405d27:	jmp    405d38 <flatcc_builder_default_alloc@@Base+0x2e4>
  405d29:	mov    rax,QWORD PTR [rbp-0x18]
  405d2d:	mov    rdx,QWORD PTR [rax+0x18]
  405d31:	mov    rax,QWORD PTR [rbp-0x8]
  405d35:	add    rax,rdx
  405d38:	leave  
  405d39:	ret    
  405d3a:	push   rbp
  405d3b:	mov    rbp,rsp
  405d3e:	sub    rsp,0x10
  405d42:	mov    QWORD PTR [rbp-0x8],rdi
  405d46:	mov    DWORD PTR [rbp-0xc],esi
  405d49:	mov    rax,QWORD PTR [rbp-0x8]
  405d4d:	mov    eax,DWORD PTR [rax+0x20]
  405d50:	sub    eax,DWORD PTR [rbp-0xc]
  405d53:	mov    edx,eax
  405d55:	mov    rax,QWORD PTR [rbp-0x8]
  405d59:	mov    DWORD PTR [rax+0x20],edx
  405d5c:	mov    eax,DWORD PTR [rbp-0xc]
  405d5f:	mov    rdx,QWORD PTR [rbp-0x8]
  405d63:	mov    rcx,QWORD PTR [rdx+0x18]
  405d67:	mov    rdx,QWORD PTR [rbp-0x8]
  405d6b:	mov    edx,DWORD PTR [rdx+0x20]
  405d6e:	mov    edx,edx
  405d70:	add    rcx,rdx
  405d73:	mov    rdx,rax
  405d76:	mov    esi,0x0
  405d7b:	mov    rdi,rcx
  405d7e:	call   403170 <memset@plt>
  405d83:	nop
  405d84:	leave  
  405d85:	ret    
  405d86:	push   rbp
  405d87:	mov    rbp,rsp
  405d8a:	sub    rsp,0x30
  405d8e:	mov    QWORD PTR [rbp-0x18],rdi
  405d92:	mov    QWORD PTR [rbp-0x20],rsi
  405d96:	mov    DWORD PTR [rbp-0x24],edx
  405d99:	mov    edx,DWORD PTR [rbp-0x24]
  405d9c:	mov    rax,QWORD PTR [rbp-0x18]
  405da0:	mov    esi,edx
  405da2:	mov    rdi,rax
  405da5:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  405daa:	mov    QWORD PTR [rbp-0x8],rax
  405dae:	cmp    QWORD PTR [rbp-0x8],0x0
  405db3:	jne    405dbc <flatcc_builder_default_alloc@@Base+0x368>
  405db5:	mov    eax,0x0
  405dba:	jmp    405dd6 <flatcc_builder_default_alloc@@Base+0x382>
  405dbc:	mov    edx,DWORD PTR [rbp-0x24]
  405dbf:	mov    rcx,QWORD PTR [rbp-0x20]
  405dc3:	mov    rax,QWORD PTR [rbp-0x8]
  405dc7:	mov    rsi,rcx
  405dca:	mov    rdi,rax
  405dcd:	call   4031b0 <memcpy@plt>
  405dd2:	mov    rax,QWORD PTR [rbp-0x8]
  405dd6:	leave  
  405dd7:	ret    
  405dd8:	push   rbp
  405dd9:	mov    rbp,rsp
  405ddc:	sub    rsp,0x30
  405de0:	mov    QWORD PTR [rbp-0x18],rdi
  405de4:	mov    DWORD PTR [rbp-0x1c],esi
  405de7:	mov    eax,ecx
  405de9:	mov    WORD PTR [rbp-0x20],dx
  405ded:	mov    WORD PTR [rbp-0x24],ax
  405df1:	mov    rax,QWORD PTR [rbp-0x18]
  405df5:	mov    edx,DWORD PTR [rax+0x20]
  405df8:	movzx  eax,WORD PTR [rbp-0x20]
  405dfc:	add    eax,edx
  405dfe:	lea    edx,[rax-0x1]
  405e01:	movzx  eax,WORD PTR [rbp-0x20]
  405e05:	neg    eax
  405e07:	and    eax,edx
  405e09:	mov    DWORD PTR [rbp-0x4],eax
  405e0c:	mov    edx,DWORD PTR [rbp-0x4]
  405e0f:	mov    eax,DWORD PTR [rbp-0x1c]
  405e12:	add    edx,eax
  405e14:	mov    rax,QWORD PTR [rbp-0x18]
  405e18:	mov    DWORD PTR [rax+0x20],edx
  405e1b:	mov    rax,QWORD PTR [rbp-0x18]
  405e1f:	mov    edx,DWORD PTR [rax+0x20]
  405e22:	mov    rax,QWORD PTR [rbp-0x18]
  405e26:	mov    eax,DWORD PTR [rax+0x24]
  405e29:	cmp    edx,eax
  405e2b:	jb     405e57 <flatcc_builder_default_alloc@@Base+0x403>
  405e2d:	mov    rax,QWORD PTR [rbp-0x18]
  405e31:	mov    eax,DWORD PTR [rax+0x20]
  405e34:	inc    eax
  405e36:	mov    ecx,eax
  405e38:	mov    rax,QWORD PTR [rbp-0x18]
  405e3c:	mov    edx,0xfffc
  405e41:	mov    rsi,rcx
  405e44:	mov    rdi,rax
  405e47:	call   405c3f <flatcc_builder_default_alloc@@Base+0x1eb>
  405e4c:	test   eax,eax
  405e4e:	je     405e57 <flatcc_builder_default_alloc@@Base+0x403>
  405e50:	mov    eax,0x0
  405e55:	jmp    405e9e <flatcc_builder_default_alloc@@Base+0x44a>
  405e57:	mov    eax,DWORD PTR [rbp-0x4]
  405e5a:	mov    ecx,eax
  405e5c:	mov    rax,QWORD PTR [rbp-0x18]
  405e60:	mov    rax,QWORD PTR [rax+0x8]
  405e64:	movzx  edx,WORD PTR [rbp-0x24]
  405e68:	add    rdx,rdx
  405e6b:	add    rdx,rax
  405e6e:	lea    eax,[rcx+0x4]
  405e71:	mov    WORD PTR [rdx],ax
  405e74:	mov    rax,QWORD PTR [rbp-0x18]
  405e78:	movzx  eax,WORD PTR [rax+0x10]
  405e7c:	cmp    WORD PTR [rbp-0x24],ax
  405e80:	jb     405e90 <flatcc_builder_default_alloc@@Base+0x43c>
  405e82:	movzx  eax,WORD PTR [rbp-0x24]
  405e86:	inc    eax
  405e88:	mov    rdx,QWORD PTR [rbp-0x18]
  405e8c:	mov    WORD PTR [rdx+0x10],ax
  405e90:	mov    rax,QWORD PTR [rbp-0x18]
  405e94:	mov    rdx,QWORD PTR [rax+0x18]
  405e98:	mov    eax,DWORD PTR [rbp-0x4]
  405e9b:	add    rax,rdx
  405e9e:	leave  
  405e9f:	ret    
  405ea0:	push   rbp
  405ea1:	mov    rbp,rsp
  405ea4:	sub    rsp,0x20
  405ea8:	mov    QWORD PTR [rbp-0x18],rdi
  405eac:	mov    eax,esi
  405eae:	mov    WORD PTR [rbp-0x1c],ax
  405eb2:	mov    rax,QWORD PTR [rbp-0x18]
  405eb6:	mov    eax,DWORD PTR [rax+0x20]
  405eb9:	add    eax,0x3
  405ebc:	and    eax,0xfffffffc
  405ebf:	mov    DWORD PTR [rbp-0x4],eax
  405ec2:	mov    eax,DWORD PTR [rbp-0x4]
  405ec5:	lea    edx,[rax+0x4]
  405ec8:	mov    rax,QWORD PTR [rbp-0x18]
  405ecc:	mov    DWORD PTR [rax+0x20],edx
  405ecf:	mov    rax,QWORD PTR [rbp-0x18]
  405ed3:	mov    edx,DWORD PTR [rax+0x20]
  405ed6:	mov    rax,QWORD PTR [rbp-0x18]
  405eda:	mov    eax,DWORD PTR [rax+0x24]
  405edd:	cmp    edx,eax
  405edf:	jbe    405f09 <flatcc_builder_default_alloc@@Base+0x4b5>
  405ee1:	mov    rax,QWORD PTR [rbp-0x18]
  405ee5:	mov    eax,DWORD PTR [rax+0x20]
  405ee8:	mov    ecx,eax
  405eea:	mov    rax,QWORD PTR [rbp-0x18]
  405eee:	mov    edx,0xfffc
  405ef3:	mov    rsi,rcx
  405ef6:	mov    rdi,rax
  405ef9:	call   405c3f <flatcc_builder_default_alloc@@Base+0x1eb>
  405efe:	test   eax,eax
  405f00:	je     405f09 <flatcc_builder_default_alloc@@Base+0x4b5>
  405f02:	mov    eax,0x0
  405f07:	jmp    405f68 <flatcc_builder_default_alloc@@Base+0x514>
  405f09:	mov    eax,DWORD PTR [rbp-0x4]
  405f0c:	mov    ecx,eax
  405f0e:	mov    rax,QWORD PTR [rbp-0x18]
  405f12:	mov    rax,QWORD PTR [rax+0x8]
  405f16:	movzx  edx,WORD PTR [rbp-0x1c]
  405f1a:	add    rdx,rdx
  405f1d:	add    rdx,rax
  405f20:	lea    eax,[rcx+0x4]
  405f23:	mov    WORD PTR [rdx],ax
  405f26:	mov    rax,QWORD PTR [rbp-0x18]
  405f2a:	movzx  eax,WORD PTR [rax+0x10]
  405f2e:	cmp    WORD PTR [rbp-0x1c],ax
  405f32:	jb     405f42 <flatcc_builder_default_alloc@@Base+0x4ee>
  405f34:	movzx  eax,WORD PTR [rbp-0x1c]
  405f38:	inc    eax
  405f3a:	mov    rdx,QWORD PTR [rbp-0x18]
  405f3e:	mov    WORD PTR [rdx+0x10],ax
  405f42:	mov    rax,QWORD PTR [rbp-0x18]
  405f46:	mov    rax,QWORD PTR [rax]
  405f49:	lea    rcx,[rax+0x2]
  405f4d:	mov    rdx,QWORD PTR [rbp-0x18]
  405f51:	mov    QWORD PTR [rdx],rcx
  405f54:	mov    edx,DWORD PTR [rbp-0x4]
  405f57:	mov    WORD PTR [rax],dx
  405f5a:	mov    rax,QWORD PTR [rbp-0x18]
  405f5e:	mov    rdx,QWORD PTR [rax+0x18]
  405f62:	mov    eax,DWORD PTR [rbp-0x4]
  405f65:	add    rax,rdx
  405f68:	leave  
  405f69:	ret    
  405f6a:	push   rbp
  405f6b:	mov    rbp,rsp
  405f6e:	sub    rsp,0x30
  405f72:	mov    QWORD PTR [rbp-0x18],rdi
  405f76:	mov    DWORD PTR [rbp-0x1c],esi
  405f79:	mov    QWORD PTR [rbp-0x28],rdx
  405f7d:	mov    QWORD PTR [rbp-0x30],rcx
  405f81:	mov    DWORD PTR [rbp-0x20],r8d
  405f85:	mov    rax,QWORD PTR [rbp-0x18]
  405f89:	lea    rdx,[rax+0x58]
  405f8d:	mov    eax,DWORD PTR [rbp-0x1c]
  405f90:	cdqe   
  405f92:	shl    rax,0x4
  405f96:	add    rax,rdx
  405f99:	mov    QWORD PTR [rbp-0x8],rax
  405f9d:	mov    rdx,QWORD PTR [rbp-0x28]
  405fa1:	mov    rax,QWORD PTR [rbp-0x30]
  405fa5:	add    rdx,rax
  405fa8:	mov    rax,QWORD PTR [rbp-0x8]
  405fac:	mov    rax,QWORD PTR [rax+0x8]
  405fb0:	cmp    rdx,rax
  405fb3:	jbe    406008 <flatcc_builder_default_alloc@@Base+0x5b4>
  405fb5:	mov    rax,QWORD PTR [rbp-0x18]
  405fb9:	mov    rax,QWORD PTR [rax+0x50]
  405fbd:	mov    rcx,QWORD PTR [rbp-0x28]
  405fc1:	mov    rdx,QWORD PTR [rbp-0x30]
  405fc5:	lea    r9,[rcx+rdx*1]
  405fc9:	mov    rdx,QWORD PTR [rbp-0x18]
  405fcd:	mov    rdi,QWORD PTR [rdx+0x40]
  405fd1:	mov    ecx,DWORD PTR [rbp-0x1c]
  405fd4:	mov    edx,DWORD PTR [rbp-0x20]
  405fd7:	mov    rsi,QWORD PTR [rbp-0x8]
  405fdb:	mov    r8d,ecx
  405fde:	mov    ecx,edx
  405fe0:	mov    rdx,r9
  405fe3:	call   rax
  405fe5:	test   eax,eax
  405fe7:	je     406008 <flatcc_builder_default_alloc@@Base+0x5b4>
  405fe9:	lea    rcx,[rip+0x6d28]        # 40cd18 <flatcc_builder_padding_base@@Base+0x658>
  405ff0:	mov    edx,0x134
  405ff5:	lea    rsi,[rip+0x68c4]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  405ffc:	lea    rdi,[rip+0x691d]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406003:	call   403160 <__assert_fail@plt>
  406008:	mov    rax,QWORD PTR [rbp-0x8]
  40600c:	mov    rax,QWORD PTR [rax]
  40600f:	mov    rdx,rax
  406012:	mov    rax,QWORD PTR [rbp-0x28]
  406016:	add    rax,rdx
  406019:	leave  
  40601a:	ret    
  40601b:	push   rbp
  40601c:	mov    rbp,rsp
  40601f:	sub    rsp,0x20
  406023:	mov    QWORD PTR [rbp-0x18],rdi
  406027:	mov    DWORD PTR [rbp-0x1c],esi
  40602a:	mov    rax,QWORD PTR [rbp-0x18]
  40602e:	mov    rax,QWORD PTR [rax+0x30]
  406032:	mov    edx,DWORD PTR [rax+0x10]
  406035:	mov    rax,QWORD PTR [rbp-0x18]
  406039:	mov    rax,QWORD PTR [rax+0x30]
  40603d:	movzx  eax,WORD PTR [rax+0x1c]
  406041:	movzx  eax,ax
  406044:	add    eax,eax
  406046:	add    eax,edx
  406048:	mov    DWORD PTR [rbp-0x8],eax
  40604b:	mov    eax,DWORD PTR [rbp-0x1c]
  40604e:	add    eax,0x2
  406051:	cdqe   
  406053:	add    eax,eax
  406055:	mov    DWORD PTR [rbp-0x4],eax
  406058:	mov    ecx,DWORD PTR [rbp-0x4]
  40605b:	mov    edx,DWORD PTR [rbp-0x8]
  40605e:	mov    rax,QWORD PTR [rbp-0x18]
  406062:	mov    r8d,0x1
  406068:	mov    esi,0x0
  40606d:	mov    rdi,rax
  406070:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  406075:	mov    rdx,rax
  406078:	mov    rax,QWORD PTR [rbp-0x18]
  40607c:	mov    QWORD PTR [rax+0x8],rdx
  406080:	mov    rax,QWORD PTR [rbp-0x18]
  406084:	mov    rax,QWORD PTR [rax+0x8]
  406088:	test   rax,rax
  40608b:	jne    406094 <flatcc_builder_default_alloc@@Base+0x640>
  40608d:	mov    eax,0xffffffff
  406092:	jmp    406101 <flatcc_builder_default_alloc@@Base+0x6ad>
  406094:	mov    rax,QWORD PTR [rbp-0x18]
  406098:	mov    rax,QWORD PTR [rax+0x8]
  40609c:	lea    rdx,[rax+0x4]
  4060a0:	mov    rax,QWORD PTR [rbp-0x18]
  4060a4:	mov    QWORD PTR [rax+0x8],rdx
  4060a8:	mov    rax,QWORD PTR [rbp-0x18]
  4060ac:	mov    rax,QWORD PTR [rax+0x30]
  4060b0:	mov    eax,DWORD PTR [rax+0x14]
  4060b3:	mov    DWORD PTR [rbp-0x8],eax
  4060b6:	mov    eax,DWORD PTR [rbp-0x1c]
  4060b9:	cdqe   
  4060bb:	add    eax,eax
  4060bd:	inc    eax
  4060bf:	mov    DWORD PTR [rbp-0x4],eax
  4060c2:	mov    ecx,DWORD PTR [rbp-0x4]
  4060c5:	mov    edx,DWORD PTR [rbp-0x8]
  4060c8:	mov    rax,QWORD PTR [rbp-0x18]
  4060cc:	mov    r8d,0x0
  4060d2:	mov    esi,0x3
  4060d7:	mov    rdi,rax
  4060da:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  4060df:	mov    rdx,rax
  4060e2:	mov    rax,QWORD PTR [rbp-0x18]
  4060e6:	mov    QWORD PTR [rax],rdx
  4060e9:	mov    rax,QWORD PTR [rbp-0x18]
  4060ed:	mov    rax,QWORD PTR [rax]
  4060f0:	test   rax,rax
  4060f3:	jne    4060fc <flatcc_builder_default_alloc@@Base+0x6a8>
  4060f5:	mov    eax,0xffffffff
  4060fa:	jmp    406101 <flatcc_builder_default_alloc@@Base+0x6ad>
  4060fc:	mov    eax,0x0
  406101:	leave  
  406102:	ret    
  406103:	endbr64 
  406107:	push   rbp
  406108:	mov    rbp,rsp
  40610b:	sub    rsp,0x30
  40610f:	mov    QWORD PTR [rbp-0x28],rdi
  406113:	mov    rax,QWORD PTR [rbp-0x28]
  406117:	add    rax,0x58
  40611b:	add    rax,0x50
  40611f:	mov    QWORD PTR [rbp-0x8],rax
  406123:	mov    rax,QWORD PTR [rbp-0x28]
  406127:	mov    eax,DWORD PTR [rax+0xe4]
  40612d:	test   eax,eax
  40612f:	je     406150 <flatcc_builder_default_alloc@@Base+0x6fc>
  406131:	lea    rcx,[rip+0x6bd0]        # 40cd08 <flatcc_builder_padding_base@@Base+0x648>
  406138:	mov    edx,0x156
  40613d:	lea    rsi,[rip+0x677c]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406144:	lea    rdi,[rip+0x67d7]        # 40c922 <flatcc_builder_padding_base@@Base+0x262>
  40614b:	call   403160 <__assert_fail@plt>
  406150:	mov    rax,QWORD PTR [rbp-0x28]
  406154:	mov    eax,DWORD PTR [rax+0xe4]
  40615a:	mov    edx,eax
  40615c:	mov    rax,QWORD PTR [rbp-0x28]
  406160:	mov    r8d,0x0
  406166:	mov    ecx,0x10
  40616b:	mov    esi,0x6
  406170:	mov    rdi,rax
  406173:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  406178:	test   rax,rax
  40617b:	jne    406187 <flatcc_builder_default_alloc@@Base+0x733>
  40617d:	mov    eax,0xffffffff
  406182:	jmp    406228 <flatcc_builder_default_alloc@@Base+0x7d4>
  406187:	mov    rax,QWORD PTR [rbp-0x28]
  40618b:	mov    DWORD PTR [rax+0xe4],0x10
  406195:	mov    QWORD PTR [rbp-0x18],0x100
  40619d:	mov    rax,QWORD PTR [rbp-0x28]
  4061a1:	mov    rax,QWORD PTR [rax+0x50]
  4061a5:	mov    rdx,QWORD PTR [rbp-0x28]
  4061a9:	mov    rdi,QWORD PTR [rdx+0x40]
  4061ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4061b1:	mov    rsi,QWORD PTR [rbp-0x8]
  4061b5:	mov    r8d,0x5
  4061bb:	mov    ecx,0x1
  4061c0:	call   rax
  4061c2:	test   eax,eax
  4061c4:	je     4061d1 <flatcc_builder_default_alloc@@Base+0x77d>
  4061c6:	mov    eax,0xffffffff
  4061cb:	jmp    406228 <flatcc_builder_default_alloc@@Base+0x7d4>
  4061cd:	shl    QWORD PTR [rbp-0x18],1
  4061d1:	mov    rax,QWORD PTR [rbp-0x18]
  4061d5:	lea    rdx,[rax+rax*1]
  4061d9:	mov    rax,QWORD PTR [rbp-0x8]
  4061dd:	mov    rax,QWORD PTR [rax+0x8]
  4061e1:	cmp    rdx,rax
  4061e4:	jbe    4061cd <flatcc_builder_default_alloc@@Base+0x779>
  4061e6:	mov    rax,QWORD PTR [rbp-0x18]
  4061ea:	shr    rax,0x2
  4061ee:	mov    QWORD PTR [rbp-0x18],rax
  4061f2:	mov    QWORD PTR [rbp-0x10],0x0
  4061fa:	jmp    406200 <flatcc_builder_default_alloc@@Base+0x7ac>
  4061fc:	inc    QWORD PTR [rbp-0x10]
  406200:	mov    rax,QWORD PTR [rbp-0x10]
  406204:	mov    edx,0x1
  406209:	shlx   rax,rdx,rax
  40620e:	cmp    QWORD PTR [rbp-0x18],rax
  406212:	ja     4061fc <flatcc_builder_default_alloc@@Base+0x7a8>
  406214:	mov    rax,QWORD PTR [rbp-0x28]
  406218:	mov    rdx,QWORD PTR [rbp-0x10]
  40621c:	mov    QWORD PTR [rax+0xd8],rdx
  406223:	mov    eax,0x0
  406228:	leave  
  406229:	ret    
  40622a:	push   rbp
  40622b:	mov    rbp,rsp
  40622e:	sub    rsp,0x20
  406232:	mov    QWORD PTR [rbp-0x18],rdi
  406236:	mov    DWORD PTR [rbp-0x1c],esi
  406239:	mov    rax,QWORD PTR [rbp-0x18]
  40623d:	mov    rax,QWORD PTR [rax+0xd8]
  406244:	test   rax,rax
  406247:	jne    406260 <flatcc_builder_default_alloc@@Base+0x80c>
  406249:	mov    rax,QWORD PTR [rbp-0x18]
  40624d:	mov    rdi,rax
  406250:	call   406103 <flatcc_builder_default_alloc@@Base+0x6af>
  406255:	test   eax,eax
  406257:	je     406260 <flatcc_builder_default_alloc@@Base+0x80c>
  406259:	mov    eax,0x0
  40625e:	jmp    40629c <flatcc_builder_default_alloc@@Base+0x848>
  406260:	mov    rax,QWORD PTR [rbp-0x18]
  406264:	mov    rax,QWORD PTR [rax+0xa8]
  40626b:	mov    QWORD PTR [rbp-0x8],rax
  40626f:	mov    rax,QWORD PTR [rbp-0x18]
  406273:	mov    rax,QWORD PTR [rax+0xd8]
  40627a:	mov    edx,0x20
  40627f:	sub    edx,eax
  406281:	mov    eax,edx
  406283:	mov    edx,DWORD PTR [rbp-0x1c]
  406286:	shrx   eax,edx,eax
  40628b:	mov    eax,eax
  40628d:	lea    rdx,[rax*4+0x0]
  406295:	mov    rax,QWORD PTR [rbp-0x8]
  406299:	add    rax,rdx
  40629c:	leave  
  40629d:	ret    

000000000040629e <flatcc_builder_flush_vtable_cache@@Base>:
  40629e:	endbr64 
  4062a2:	push   rbp
  4062a3:	mov    rbp,rsp
  4062a6:	sub    rsp,0x20
  4062aa:	mov    QWORD PTR [rbp-0x18],rdi
  4062ae:	mov    rax,QWORD PTR [rbp-0x18]
  4062b2:	add    rax,0x58
  4062b6:	add    rax,0x50
  4062ba:	mov    QWORD PTR [rbp-0x8],rax
  4062be:	mov    rax,QWORD PTR [rbp-0x18]
  4062c2:	mov    rax,QWORD PTR [rax+0xd8]
  4062c9:	test   rax,rax
  4062cc:	je     406308 <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  4062ce:	mov    rax,QWORD PTR [rbp-0x8]
  4062d2:	mov    rdx,QWORD PTR [rax+0x8]
  4062d6:	mov    rax,QWORD PTR [rbp-0x8]
  4062da:	mov    rax,QWORD PTR [rax]
  4062dd:	mov    esi,0x0
  4062e2:	mov    rdi,rax
  4062e5:	call   403170 <memset@plt>
  4062ea:	mov    rax,QWORD PTR [rbp-0x18]
  4062ee:	mov    DWORD PTR [rax+0xe4],0x10
  4062f8:	mov    rax,QWORD PTR [rbp-0x18]
  4062fc:	mov    DWORD PTR [rax+0xe0],0x0
  406306:	jmp    406309 <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  406308:	nop
  406309:	leave  
  40630a:	ret    

000000000040630b <flatcc_builder_custom_init@@Base>:
  40630b:	endbr64 
  40630f:	push   rbp
  406310:	mov    rbp,rsp
  406313:	sub    rsp,0x30
  406317:	mov    QWORD PTR [rbp-0x8],rdi
  40631b:	mov    QWORD PTR [rbp-0x10],rsi
  40631f:	mov    QWORD PTR [rbp-0x18],rdx
  406323:	mov    QWORD PTR [rbp-0x20],rcx
  406327:	mov    QWORD PTR [rbp-0x28],r8
  40632b:	mov    rax,QWORD PTR [rbp-0x8]
  40632f:	mov    edx,0x188
  406334:	mov    esi,0x0
  406339:	mov    rdi,rax
  40633c:	call   403170 <memset@plt>
  406341:	cmp    QWORD PTR [rbp-0x10],0x0
  406346:	jne    40636f <flatcc_builder_custom_init@@Base+0x64>
  406348:	mov    rax,QWORD PTR [rbp-0x8]
  40634c:	mov    DWORD PTR [rax+0x128],0x1
  406356:	mov    rax,0x40b8a8
  40635d:	mov    QWORD PTR [rbp-0x10],rax
  406361:	mov    rax,QWORD PTR [rbp-0x8]
  406365:	add    rax,0x130
  40636b:	mov    QWORD PTR [rbp-0x18],rax
  40636f:	cmp    QWORD PTR [rbp-0x20],0x0
  406374:	jne    406381 <flatcc_builder_custom_init@@Base+0x76>
  406376:	mov    rax,0x405a54
  40637d:	mov    QWORD PTR [rbp-0x20],rax
  406381:	mov    rax,QWORD PTR [rbp-0x8]
  406385:	mov    rdx,QWORD PTR [rbp-0x28]
  406389:	mov    QWORD PTR [rax+0x40],rdx
  40638d:	mov    rax,QWORD PTR [rbp-0x8]
  406391:	mov    rdx,QWORD PTR [rbp-0x20]
  406395:	mov    QWORD PTR [rax+0x50],rdx
  406399:	mov    rax,QWORD PTR [rbp-0x8]
  40639d:	mov    rdx,QWORD PTR [rbp-0x18]
  4063a1:	mov    QWORD PTR [rax+0x38],rdx
  4063a5:	mov    rax,QWORD PTR [rbp-0x8]
  4063a9:	mov    rdx,QWORD PTR [rbp-0x10]
  4063ad:	mov    QWORD PTR [rax+0x48],rdx
  4063b1:	mov    eax,0x0
  4063b6:	leave  
  4063b7:	ret    

00000000004063b8 <flatcc_builder_init@@Base>:
  4063b8:	endbr64 
  4063bc:	push   rbp
  4063bd:	mov    rbp,rsp
  4063c0:	sub    rsp,0x10
  4063c4:	mov    QWORD PTR [rbp-0x8],rdi
  4063c8:	mov    rax,QWORD PTR [rbp-0x8]
  4063cc:	mov    r8d,0x0
  4063d2:	mov    ecx,0x0
  4063d7:	mov    edx,0x0
  4063dc:	mov    esi,0x0
  4063e1:	mov    rdi,rax
  4063e4:	call   40630b <flatcc_builder_custom_init@@Base>
  4063e9:	leave  
  4063ea:	ret    

00000000004063eb <flatcc_builder_custom_reset@@Base>:
  4063eb:	endbr64 
  4063ef:	push   rbp
  4063f0:	mov    rbp,rsp
  4063f3:	sub    rsp,0x20
  4063f7:	mov    QWORD PTR [rbp-0x18],rdi
  4063fb:	mov    DWORD PTR [rbp-0x1c],esi
  4063fe:	mov    DWORD PTR [rbp-0x20],edx
  406401:	mov    DWORD PTR [rbp-0xc],0x0
  406408:	jmp    4064be <flatcc_builder_custom_reset@@Base+0xd3>
  40640d:	mov    rax,QWORD PTR [rbp-0x18]
  406411:	lea    rdx,[rax+0x58]
  406415:	mov    eax,DWORD PTR [rbp-0xc]
  406418:	cdqe   
  40641a:	shl    rax,0x4
  40641e:	add    rax,rdx
  406421:	mov    QWORD PTR [rbp-0x8],rax
  406425:	mov    rax,QWORD PTR [rbp-0x8]
  406429:	mov    rax,QWORD PTR [rax]
  40642c:	test   rax,rax
  40642f:	je     40648f <flatcc_builder_custom_reset@@Base+0xa4>
  406431:	cmp    DWORD PTR [rbp-0xc],0x5
  406435:	je     406471 <flatcc_builder_custom_reset@@Base+0x86>
  406437:	cmp    DWORD PTR [rbp-0x20],0x0
  40643b:	je     406471 <flatcc_builder_custom_reset@@Base+0x86>
  40643d:	mov    rax,QWORD PTR [rbp-0x18]
  406441:	mov    rax,QWORD PTR [rax+0x50]
  406445:	mov    rdx,QWORD PTR [rbp-0x18]
  406449:	mov    rdi,QWORD PTR [rdx+0x40]
  40644d:	mov    edx,DWORD PTR [rbp-0xc]
  406450:	mov    rsi,QWORD PTR [rbp-0x8]
  406454:	mov    r8d,edx
  406457:	mov    ecx,0x1
  40645c:	mov    edx,0x1
  406461:	call   rax
  406463:	test   eax,eax
  406465:	je     406471 <flatcc_builder_custom_reset@@Base+0x86>
  406467:	mov    eax,0xffffffff
  40646c:	jmp    4065fd <flatcc_builder_custom_reset@@Base+0x212>
  406471:	mov    rax,QWORD PTR [rbp-0x8]
  406475:	mov    rdx,QWORD PTR [rax+0x8]
  406479:	mov    rax,QWORD PTR [rbp-0x8]
  40647d:	mov    rax,QWORD PTR [rax]
  406480:	mov    esi,0x0
  406485:	mov    rdi,rax
  406488:	call   403170 <memset@plt>
  40648d:	jmp    4064bb <flatcc_builder_custom_reset@@Base+0xd0>
  40648f:	mov    rax,QWORD PTR [rbp-0x8]
  406493:	mov    rax,QWORD PTR [rax+0x8]
  406497:	test   rax,rax
  40649a:	je     4064bb <flatcc_builder_custom_reset@@Base+0xd0>
  40649c:	lea    rcx,[rip+0x688d]        # 40cd30 <flatcc_builder_padding_base@@Base+0x670>
  4064a3:	mov    edx,0x1b2
  4064a8:	lea    rsi,[rip+0x6411]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4064af:	lea    rdi,[rip+0x647b]        # 40c931 <flatcc_builder_padding_base@@Base+0x271>
  4064b6:	call   403160 <__assert_fail@plt>
  4064bb:	inc    DWORD PTR [rbp-0xc]
  4064be:	cmp    DWORD PTR [rbp-0xc],0x7
  4064c2:	jle    40640d <flatcc_builder_custom_reset@@Base+0x22>
  4064c8:	mov    rax,QWORD PTR [rbp-0x18]
  4064cc:	mov    DWORD PTR [rax+0xe0],0x0
  4064d6:	mov    rax,QWORD PTR [rbp-0x18]
  4064da:	mov    eax,DWORD PTR [rax+0xe4]
  4064e0:	test   eax,eax
  4064e2:	je     4064f2 <flatcc_builder_custom_reset@@Base+0x107>
  4064e4:	mov    rax,QWORD PTR [rbp-0x18]
  4064e8:	mov    DWORD PTR [rax+0xe4],0x10
  4064f2:	mov    rax,QWORD PTR [rbp-0x18]
  4064f6:	mov    WORD PTR [rax+0xe8],0x0
  4064ff:	mov    rax,QWORD PTR [rbp-0x18]
  406503:	mov    DWORD PTR [rax+0xf0],0x0
  40650d:	mov    rax,QWORD PTR [rbp-0x18]
  406511:	mov    DWORD PTR [rax+0xf4],0x0
  40651b:	mov    rax,QWORD PTR [rbp-0x18]
  40651f:	mov    DWORD PTR [rax+0x104],0x0
  406529:	mov    rax,QWORD PTR [rbp-0x18]
  40652d:	mov    DWORD PTR [rax+0x108],0x0
  406537:	mov    rax,QWORD PTR [rbp-0x18]
  40653b:	mov    DWORD PTR [rax+0x20],0x0
  406542:	mov    rax,QWORD PTR [rbp-0x18]
  406546:	mov    DWORD PTR [rax+0x24],0x0
  40654d:	mov    rax,QWORD PTR [rbp-0x18]
  406551:	mov    DWORD PTR [rax+0xfc],0x0
  40655b:	mov    rax,QWORD PTR [rbp-0x18]
  40655f:	mov    DWORD PTR [rax+0x100],0x0
  406569:	mov    rax,QWORD PTR [rbp-0x18]
  40656d:	mov    rdx,QWORD PTR [rax+0x68]
  406571:	mov    rax,QWORD PTR [rbp-0x18]
  406575:	mov    QWORD PTR [rax+0x18],rdx
  406579:	mov    rax,QWORD PTR [rbp-0x18]
  40657d:	mov    rdx,QWORD PTR [rax+0x88]
  406584:	mov    rax,QWORD PTR [rbp-0x18]
  406588:	mov    QWORD PTR [rax],rdx
  40658b:	mov    rax,QWORD PTR [rbp-0x18]
  40658f:	mov    rdx,QWORD PTR [rax+0x58]
  406593:	mov    rax,QWORD PTR [rbp-0x18]
  406597:	mov    QWORD PTR [rax+0x8],rdx
  40659b:	mov    rax,QWORD PTR [rbp-0x18]
  40659f:	mov    QWORD PTR [rax+0x30],0x0
  4065a7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4065ab:	je     4065d8 <flatcc_builder_custom_reset@@Base+0x1ed>
  4065ad:	mov    rax,QWORD PTR [rbp-0x18]
  4065b1:	mov    QWORD PTR [rax+0x118],0x0
  4065bc:	mov    rax,QWORD PTR [rbp-0x18]
  4065c0:	mov    DWORD PTR [rax+0x120],0x0
  4065ca:	mov    rax,QWORD PTR [rbp-0x18]
  4065ce:	mov    DWORD PTR [rax+0x124],0x0
  4065d8:	mov    rax,QWORD PTR [rbp-0x18]
  4065dc:	mov    eax,DWORD PTR [rax+0x128]
  4065e2:	test   eax,eax
  4065e4:	je     4065f8 <flatcc_builder_custom_reset@@Base+0x20d>
  4065e6:	mov    rax,QWORD PTR [rbp-0x18]
  4065ea:	add    rax,0x130
  4065f0:	mov    rdi,rax
  4065f3:	call   40b683 <flatcc_emitter_reset@@Base>
  4065f8:	mov    eax,0x0
  4065fd:	leave  
  4065fe:	ret    

00000000004065ff <flatcc_builder_reset@@Base>:
  4065ff:	endbr64 
  406603:	push   rbp
  406604:	mov    rbp,rsp
  406607:	sub    rsp,0x10
  40660b:	mov    QWORD PTR [rbp-0x8],rdi
  40660f:	mov    rax,QWORD PTR [rbp-0x8]
  406613:	mov    edx,0x0
  406618:	mov    esi,0x0
  40661d:	mov    rdi,rax
  406620:	call   4063eb <flatcc_builder_custom_reset@@Base>
  406625:	leave  
  406626:	ret    

0000000000406627 <flatcc_builder_clear@@Base>:
  406627:	endbr64 
  40662b:	push   rbp
  40662c:	mov    rbp,rsp
  40662f:	sub    rsp,0x20
  406633:	mov    QWORD PTR [rbp-0x18],rdi
  406637:	mov    DWORD PTR [rbp-0xc],0x0
  40663e:	jmp    406681 <flatcc_builder_clear@@Base+0x5a>
  406640:	mov    rax,QWORD PTR [rbp-0x18]
  406644:	lea    rdx,[rax+0x58]
  406648:	mov    eax,DWORD PTR [rbp-0xc]
  40664b:	cdqe   
  40664d:	shl    rax,0x4
  406651:	add    rax,rdx
  406654:	mov    QWORD PTR [rbp-0x8],rax
  406658:	mov    rax,QWORD PTR [rbp-0x18]
  40665c:	mov    rax,QWORD PTR [rax+0x50]
  406660:	mov    rdx,QWORD PTR [rbp-0x18]
  406664:	mov    rdi,QWORD PTR [rdx+0x40]
  406668:	mov    edx,DWORD PTR [rbp-0xc]
  40666b:	mov    rsi,QWORD PTR [rbp-0x8]
  40666f:	mov    r8d,edx
  406672:	mov    ecx,0x0
  406677:	mov    edx,0x0
  40667c:	call   rax
  40667e:	inc    DWORD PTR [rbp-0xc]
  406681:	cmp    DWORD PTR [rbp-0xc],0x7
  406685:	jle    406640 <flatcc_builder_clear@@Base+0x19>
  406687:	mov    rax,QWORD PTR [rbp-0x18]
  40668b:	mov    eax,DWORD PTR [rax+0x128]
  406691:	test   eax,eax
  406693:	je     4066a7 <flatcc_builder_clear@@Base+0x80>
  406695:	mov    rax,QWORD PTR [rbp-0x18]
  406699:	add    rax,0x130
  40669f:	mov    rdi,rax
  4066a2:	call   40b815 <flatcc_emitter_clear@@Base>
  4066a7:	mov    rax,QWORD PTR [rbp-0x18]
  4066ab:	mov    edx,0x188
  4066b0:	mov    esi,0x0
  4066b5:	mov    rdi,rax
  4066b8:	call   403170 <memset@plt>
  4066bd:	nop
  4066be:	leave  
  4066bf:	ret    
  4066c0:	push   rbp
  4066c1:	mov    rbp,rsp
  4066c4:	mov    QWORD PTR [rbp-0x8],rdi
  4066c8:	mov    eax,esi
  4066ca:	mov    WORD PTR [rbp-0xc],ax
  4066ce:	mov    rax,QWORD PTR [rbp-0x8]
  4066d2:	movzx  eax,WORD PTR [rax+0xe8]
  4066d9:	cmp    WORD PTR [rbp-0xc],ax
  4066dd:	jbe    4066ee <flatcc_builder_clear@@Base+0xc7>
  4066df:	mov    rdx,QWORD PTR [rbp-0x8]
  4066e3:	movzx  eax,WORD PTR [rbp-0xc]
  4066e7:	mov    WORD PTR [rdx+0xe8],ax
  4066ee:	nop
  4066ef:	pop    rbp
  4066f0:	ret    
  4066f1:	push   rbp
  4066f2:	mov    rbp,rsp
  4066f5:	mov    QWORD PTR [rbp-0x8],rdi
  4066f9:	mov    eax,esi
  4066fb:	mov    WORD PTR [rbp-0xc],ax
  4066ff:	mov    rax,QWORD PTR [rbp-0x8]
  406703:	movzx  eax,WORD PTR [rax]
  406706:	cmp    WORD PTR [rbp-0xc],ax
  40670a:	jbe    406717 <flatcc_builder_clear@@Base+0xf0>
  40670c:	mov    rdx,QWORD PTR [rbp-0x8]
  406710:	movzx  eax,WORD PTR [rbp-0xc]
  406714:	mov    WORD PTR [rdx],ax
  406717:	nop
  406718:	pop    rbp
  406719:	ret    

000000000040671a <flatcc_builder_enter_user_frame_ptr@@Base>:
  40671a:	endbr64 
  40671e:	push   rbp
  40671f:	mov    rbp,rsp
  406722:	sub    rsp,0x20
  406726:	mov    QWORD PTR [rbp-0x18],rdi
  40672a:	mov    QWORD PTR [rbp-0x20],rsi
  40672e:	mov    rax,QWORD PTR [rbp-0x20]
  406732:	add    rax,0x7
  406736:	and    rax,0xfffffffffffffff8
  40673a:	add    rax,0x8
  40673e:	mov    QWORD PTR [rbp-0x20],rax
  406742:	mov    rax,QWORD PTR [rbp-0x18]
  406746:	mov    rdx,QWORD PTR [rax+0x180]
  40674d:	mov    rcx,QWORD PTR [rbp-0x20]
  406751:	mov    rax,QWORD PTR [rbp-0x18]
  406755:	mov    r8d,0x0
  40675b:	mov    esi,0x7
  406760:	mov    rdi,rax
  406763:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  406768:	mov    QWORD PTR [rbp-0x8],rax
  40676c:	cmp    QWORD PTR [rbp-0x8],0x0
  406771:	jne    40677a <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  406773:	mov    eax,0x0
  406778:	jmp    4067e4 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  40677a:	mov    rdx,QWORD PTR [rbp-0x20]
  40677e:	mov    rax,QWORD PTR [rbp-0x8]
  406782:	mov    esi,0x0
  406787:	mov    rdi,rax
  40678a:	call   403170 <memset@plt>
  40678f:	mov    rax,QWORD PTR [rbp-0x8]
  406793:	lea    rdx,[rax+0x8]
  406797:	mov    QWORD PTR [rbp-0x8],rdx
  40679b:	mov    rdx,QWORD PTR [rbp-0x18]
  40679f:	mov    rdx,QWORD PTR [rdx+0x178]
  4067a6:	mov    QWORD PTR [rax],rdx
  4067a9:	mov    rax,QWORD PTR [rbp-0x18]
  4067ad:	mov    rax,QWORD PTR [rax+0x180]
  4067b4:	lea    rdx,[rax+0x8]
  4067b8:	mov    rax,QWORD PTR [rbp-0x18]
  4067bc:	mov    QWORD PTR [rax+0x178],rdx
  4067c3:	mov    rax,QWORD PTR [rbp-0x18]
  4067c7:	mov    rdx,QWORD PTR [rax+0x180]
  4067ce:	mov    rax,QWORD PTR [rbp-0x20]
  4067d2:	add    rdx,rax
  4067d5:	mov    rax,QWORD PTR [rbp-0x18]
  4067d9:	mov    QWORD PTR [rax+0x180],rdx
  4067e0:	mov    rax,QWORD PTR [rbp-0x8]
  4067e4:	leave  
  4067e5:	ret    

00000000004067e6 <flatcc_builder_enter_user_frame@@Base>:
  4067e6:	endbr64 
  4067ea:	push   rbp
  4067eb:	mov    rbp,rsp
  4067ee:	sub    rsp,0x20
  4067f2:	mov    QWORD PTR [rbp-0x18],rdi
  4067f6:	mov    QWORD PTR [rbp-0x20],rsi
  4067fa:	mov    rax,QWORD PTR [rbp-0x20]
  4067fe:	add    rax,0x7
  406802:	and    rax,0xfffffffffffffff8
  406806:	add    rax,0x8
  40680a:	mov    QWORD PTR [rbp-0x20],rax
  40680e:	mov    rax,QWORD PTR [rbp-0x18]
  406812:	mov    rdx,QWORD PTR [rax+0x180]
  406819:	mov    rcx,QWORD PTR [rbp-0x20]
  40681d:	mov    rax,QWORD PTR [rbp-0x18]
  406821:	mov    r8d,0x0
  406827:	mov    esi,0x7
  40682c:	mov    rdi,rax
  40682f:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  406834:	mov    QWORD PTR [rbp-0x8],rax
  406838:	cmp    QWORD PTR [rbp-0x8],0x0
  40683d:	jne    406846 <flatcc_builder_enter_user_frame@@Base+0x60>
  40683f:	mov    eax,0x0
  406844:	jmp    4068b7 <flatcc_builder_enter_user_frame@@Base+0xd1>
  406846:	mov    rdx,QWORD PTR [rbp-0x20]
  40684a:	mov    rax,QWORD PTR [rbp-0x8]
  40684e:	mov    esi,0x0
  406853:	mov    rdi,rax
  406856:	call   403170 <memset@plt>
  40685b:	mov    rax,QWORD PTR [rbp-0x8]
  40685f:	lea    rdx,[rax+0x8]
  406863:	mov    QWORD PTR [rbp-0x8],rdx
  406867:	mov    rdx,QWORD PTR [rbp-0x18]
  40686b:	mov    rdx,QWORD PTR [rdx+0x178]
  406872:	mov    QWORD PTR [rax],rdx
  406875:	mov    rax,QWORD PTR [rbp-0x18]
  406879:	mov    rax,QWORD PTR [rax+0x180]
  406880:	lea    rdx,[rax+0x8]
  406884:	mov    rax,QWORD PTR [rbp-0x18]
  406888:	mov    QWORD PTR [rax+0x178],rdx
  40688f:	mov    rax,QWORD PTR [rbp-0x18]
  406893:	mov    rdx,QWORD PTR [rax+0x180]
  40689a:	mov    rax,QWORD PTR [rbp-0x20]
  40689e:	add    rdx,rax
  4068a1:	mov    rax,QWORD PTR [rbp-0x18]
  4068a5:	mov    QWORD PTR [rax+0x180],rdx
  4068ac:	mov    rax,QWORD PTR [rbp-0x18]
  4068b0:	mov    rax,QWORD PTR [rax+0x178]
  4068b7:	leave  
  4068b8:	ret    

00000000004068b9 <flatcc_builder_exit_user_frame@@Base>:
  4068b9:	endbr64 
  4068bd:	push   rbp
  4068be:	mov    rbp,rsp
  4068c1:	sub    rsp,0x20
  4068c5:	mov    QWORD PTR [rbp-0x18],rdi
  4068c9:	mov    rax,QWORD PTR [rbp-0x18]
  4068cd:	mov    rax,QWORD PTR [rax+0x178]
  4068d4:	test   rax,rax
  4068d7:	jne    4068f8 <flatcc_builder_exit_user_frame@@Base+0x3f>
  4068d9:	lea    rcx,[rip+0x6470]        # 40cd50 <flatcc_builder_padding_base@@Base+0x690>
  4068e0:	mov    edx,0x21e
  4068e5:	lea    rsi,[rip+0x5fd4]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4068ec:	lea    rdi,[rip+0x6050]        # 40c943 <flatcc_builder_padding_base@@Base+0x283>
  4068f3:	call   403160 <__assert_fail@plt>
  4068f8:	mov    rax,QWORD PTR [rbp-0x18]
  4068fc:	mov    rdx,QWORD PTR [rax+0xc8]
  406903:	mov    rax,QWORD PTR [rbp-0x18]
  406907:	mov    rax,QWORD PTR [rax+0x178]
  40690e:	mov    eax,eax
  406910:	add    rax,rdx
  406913:	mov    QWORD PTR [rbp-0x8],rax
  406917:	mov    rax,QWORD PTR [rbp-0x18]
  40691b:	mov    rax,QWORD PTR [rax+0x178]
  406922:	lea    rdx,[rax-0x8]
  406926:	mov    rax,QWORD PTR [rbp-0x18]
  40692a:	mov    QWORD PTR [rax+0x180],rdx
  406931:	mov    rax,QWORD PTR [rbp-0x8]
  406935:	mov    rdx,QWORD PTR [rax-0x8]
  406939:	mov    rax,QWORD PTR [rbp-0x18]
  40693d:	mov    QWORD PTR [rax+0x178],rdx
  406944:	mov    rax,QWORD PTR [rbp-0x18]
  406948:	mov    rax,QWORD PTR [rax+0x178]
  40694f:	leave  
  406950:	ret    

0000000000406951 <flatcc_builder_exit_user_frame_at@@Base>:
  406951:	endbr64 
  406955:	push   rbp
  406956:	mov    rbp,rsp
  406959:	sub    rsp,0x10
  40695d:	mov    QWORD PTR [rbp-0x8],rdi
  406961:	mov    QWORD PTR [rbp-0x10],rsi
  406965:	mov    rax,QWORD PTR [rbp-0x8]
  406969:	mov    rax,QWORD PTR [rax+0x178]
  406970:	cmp    QWORD PTR [rbp-0x10],rax
  406974:	jbe    406995 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  406976:	lea    rcx,[rip+0x6403]        # 40cd80 <flatcc_builder_padding_base@@Base+0x6c0>
  40697d:	mov    edx,0x227
  406982:	lea    rsi,[rip+0x5f37]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406989:	lea    rdi,[rip+0x5fd0]        # 40c960 <flatcc_builder_padding_base@@Base+0x2a0>
  406990:	call   403160 <__assert_fail@plt>
  406995:	mov    rax,QWORD PTR [rbp-0x8]
  406999:	mov    rdx,QWORD PTR [rbp-0x10]
  40699d:	mov    QWORD PTR [rax+0x178],rdx
  4069a4:	mov    rax,QWORD PTR [rbp-0x8]
  4069a8:	mov    rdi,rax
  4069ab:	call   4068b9 <flatcc_builder_exit_user_frame@@Base>
  4069b0:	leave  
  4069b1:	ret    

00000000004069b2 <flatcc_builder_get_current_user_frame@@Base>:
  4069b2:	endbr64 
  4069b6:	push   rbp
  4069b7:	mov    rbp,rsp
  4069ba:	mov    QWORD PTR [rbp-0x8],rdi
  4069be:	mov    rax,QWORD PTR [rbp-0x8]
  4069c2:	mov    rax,QWORD PTR [rax+0x178]
  4069c9:	pop    rbp
  4069ca:	ret    

00000000004069cb <flatcc_builder_get_user_frame_ptr@@Base>:
  4069cb:	endbr64 
  4069cf:	push   rbp
  4069d0:	mov    rbp,rsp
  4069d3:	mov    QWORD PTR [rbp-0x8],rdi
  4069d7:	mov    QWORD PTR [rbp-0x10],rsi
  4069db:	mov    rax,QWORD PTR [rbp-0x8]
  4069df:	mov    rax,QWORD PTR [rax+0xc8]
  4069e6:	mov    rdx,QWORD PTR [rbp-0x10]
  4069ea:	mov    edx,edx
  4069ec:	add    rax,rdx
  4069ef:	pop    rbp
  4069f0:	ret    
  4069f1:	endbr64 
  4069f5:	push   rbp
  4069f6:	mov    rbp,rsp
  4069f9:	sub    rsp,0x10
  4069fd:	mov    QWORD PTR [rbp-0x8],rdi
  406a01:	mov    eax,esi
  406a03:	mov    WORD PTR [rbp-0xc],ax
  406a07:	mov    rax,QWORD PTR [rbp-0x8]
  406a0b:	mov    eax,DWORD PTR [rax+0x104]
  406a11:	lea    edx,[rax+0x1]
  406a14:	mov    rax,QWORD PTR [rbp-0x8]
  406a18:	mov    DWORD PTR [rax+0x104],edx
  406a1e:	mov    rax,QWORD PTR [rbp-0x8]
  406a22:	mov    edx,DWORD PTR [rax+0x104]
  406a28:	mov    rax,QWORD PTR [rbp-0x8]
  406a2c:	mov    eax,DWORD PTR [rax+0x108]
  406a32:	cmp    edx,eax
  406a34:	jle    406b2f <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  406a3a:	mov    rax,QWORD PTR [rbp-0x8]
  406a3e:	mov    eax,DWORD PTR [rax+0x120]
  406a44:	test   eax,eax
  406a46:	jle    406a6a <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  406a48:	mov    rax,QWORD PTR [rbp-0x8]
  406a4c:	mov    edx,DWORD PTR [rax+0x104]
  406a52:	mov    rax,QWORD PTR [rbp-0x8]
  406a56:	mov    eax,DWORD PTR [rax+0x120]
  406a5c:	cmp    edx,eax
  406a5e:	jle    406a6a <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  406a60:	mov    eax,0xffffffff
  406a65:	jmp    406bca <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  406a6a:	mov    rax,QWORD PTR [rbp-0x8]
  406a6e:	mov    eax,DWORD PTR [rax+0x104]
  406a74:	dec    eax
  406a76:	movsxd rdx,eax
  406a79:	mov    rax,rdx
  406a7c:	shl    rax,0x3
  406a80:	add    rax,rdx
  406a83:	shl    rax,0x2
  406a87:	mov    rdx,rax
  406a8a:	mov    rax,QWORD PTR [rbp-0x8]
  406a8e:	mov    r8d,0x0
  406a94:	mov    ecx,0x24
  406a99:	mov    esi,0x4
  406a9e:	mov    rdi,rax
  406aa1:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  406aa6:	mov    rdx,rax
  406aa9:	mov    rax,QWORD PTR [rbp-0x8]
  406aad:	mov    QWORD PTR [rax+0x30],rdx
  406ab1:	mov    rax,QWORD PTR [rbp-0x8]
  406ab5:	mov    rax,QWORD PTR [rax+0x30]
  406ab9:	test   rax,rax
  406abc:	jne    406ac8 <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  406abe:	mov    eax,0xffffffff
  406ac3:	jmp    406bca <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  406ac8:	mov    rax,QWORD PTR [rbp-0x8]
  406acc:	mov    rax,QWORD PTR [rax+0xa0]
  406ad3:	movabs rdx,0xe38e38e38e38e38f
  406add:	mul    rdx
  406ae0:	mov    rax,rdx
  406ae3:	shr    rax,0x5
  406ae7:	mov    edx,eax
  406ae9:	mov    rax,QWORD PTR [rbp-0x8]
  406aed:	mov    DWORD PTR [rax+0x108],edx
  406af3:	mov    rax,QWORD PTR [rbp-0x8]
  406af7:	mov    eax,DWORD PTR [rax+0x120]
  406afd:	test   eax,eax
  406aff:	jle    406b43 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  406b01:	mov    rax,QWORD PTR [rbp-0x8]
  406b05:	mov    edx,DWORD PTR [rax+0x120]
  406b0b:	mov    rax,QWORD PTR [rbp-0x8]
  406b0f:	mov    eax,DWORD PTR [rax+0x108]
  406b15:	cmp    edx,eax
  406b17:	jge    406b43 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  406b19:	mov    rax,QWORD PTR [rbp-0x8]
  406b1d:	mov    edx,DWORD PTR [rax+0x120]
  406b23:	mov    rax,QWORD PTR [rbp-0x8]
  406b27:	mov    DWORD PTR [rax+0x108],edx
  406b2d:	jmp    406b43 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  406b2f:	mov    rax,QWORD PTR [rbp-0x8]
  406b33:	mov    rax,QWORD PTR [rax+0x30]
  406b37:	lea    rdx,[rax+0x24]
  406b3b:	mov    rax,QWORD PTR [rbp-0x8]
  406b3f:	mov    QWORD PTR [rax+0x30],rdx
  406b43:	mov    rax,QWORD PTR [rbp-0x8]
  406b47:	mov    rax,QWORD PTR [rax+0x30]
  406b4b:	mov    rdx,QWORD PTR [rbp-0x8]
  406b4f:	mov    edx,DWORD PTR [rdx+0x20]
  406b52:	mov    DWORD PTR [rax+0x8],edx
  406b55:	mov    rax,QWORD PTR [rbp-0x8]
  406b59:	mov    rdx,QWORD PTR [rax+0x30]
  406b5d:	mov    rax,QWORD PTR [rbp-0x8]
  406b61:	movzx  eax,WORD PTR [rax+0xea]
  406b68:	mov    WORD PTR [rdx+0xc],ax
  406b6c:	mov    rdx,QWORD PTR [rbp-0x8]
  406b70:	movzx  eax,WORD PTR [rbp-0xc]
  406b74:	mov    WORD PTR [rdx+0xea],ax
  406b7b:	mov    rax,QWORD PTR [rbp-0x8]
  406b7f:	mov    rax,QWORD PTR [rax+0x30]
  406b83:	mov    rdx,QWORD PTR [rbp-0x8]
  406b87:	mov    edx,DWORD PTR [rdx+0x28]
  406b8a:	mov    DWORD PTR [rax],edx
  406b8c:	mov    rax,QWORD PTR [rbp-0x8]
  406b90:	mov    rax,QWORD PTR [rax+0x30]
  406b94:	mov    DWORD PTR [rax+0x4],0xfffffffc
  406b9b:	mov    rax,QWORD PTR [rbp-0x8]
  406b9f:	mov    edx,DWORD PTR [rax+0x28]
  406ba2:	mov    rax,QWORD PTR [rbp-0x8]
  406ba6:	mov    eax,DWORD PTR [rax+0x20]
  406ba9:	add    eax,edx
  406bab:	add    eax,0x7
  406bae:	and    eax,0xfffffff8
  406bb1:	mov    edx,eax
  406bb3:	mov    rax,QWORD PTR [rbp-0x8]
  406bb7:	mov    DWORD PTR [rax+0x28],edx
  406bba:	mov    rax,QWORD PTR [rbp-0x8]
  406bbe:	mov    DWORD PTR [rax+0x20],0x0
  406bc5:	mov    eax,0x0
  406bca:	leave  
  406bcb:	ret    
  406bcc:	push   rbp
  406bcd:	mov    rbp,rsp
  406bd0:	sub    rsp,0x10
  406bd4:	mov    QWORD PTR [rbp-0x8],rdi
  406bd8:	mov    rax,QWORD PTR [rbp-0x8]
  406bdc:	mov    eax,DWORD PTR [rax+0x20]
  406bdf:	mov    edx,eax
  406be1:	mov    rax,QWORD PTR [rbp-0x8]
  406be5:	mov    rax,QWORD PTR [rax+0x18]
  406be9:	mov    esi,0x0
  406bee:	mov    rdi,rax
  406bf1:	call   403170 <memset@plt>
  406bf6:	mov    rax,QWORD PTR [rbp-0x8]
  406bfa:	mov    rax,QWORD PTR [rax+0x30]
  406bfe:	mov    edx,DWORD PTR [rax+0x8]
  406c01:	mov    rax,QWORD PTR [rbp-0x8]
  406c05:	mov    DWORD PTR [rax+0x20],edx
  406c08:	mov    rax,QWORD PTR [rbp-0x8]
  406c0c:	mov    rax,QWORD PTR [rax+0x30]
  406c10:	mov    edx,DWORD PTR [rax]
  406c12:	mov    rax,QWORD PTR [rbp-0x8]
  406c16:	mov    DWORD PTR [rax+0x28],edx
  406c19:	mov    rax,QWORD PTR [rbp-0x8]
  406c1d:	mov    rax,QWORD PTR [rax+0x30]
  406c21:	mov    edx,DWORD PTR [rax+0x4]
  406c24:	mov    rax,QWORD PTR [rbp-0x8]
  406c28:	mov    esi,edx
  406c2a:	mov    rdi,rax
  406c2d:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  406c32:	mov    rax,QWORD PTR [rbp-0x8]
  406c36:	movzx  eax,WORD PTR [rax+0xea]
  406c3d:	movzx  edx,ax
  406c40:	mov    rax,QWORD PTR [rbp-0x8]
  406c44:	mov    esi,edx
  406c46:	mov    rdi,rax
  406c49:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  406c4e:	mov    rax,QWORD PTR [rbp-0x8]
  406c52:	mov    rax,QWORD PTR [rax+0x30]
  406c56:	movzx  eax,WORD PTR [rax+0xc]
  406c5a:	mov    rdx,QWORD PTR [rbp-0x8]
  406c5e:	mov    WORD PTR [rdx+0xea],ax
  406c65:	mov    rax,QWORD PTR [rbp-0x8]
  406c69:	mov    rax,QWORD PTR [rax+0x30]
  406c6d:	lea    rdx,[rax-0x24]
  406c71:	mov    rax,QWORD PTR [rbp-0x8]
  406c75:	mov    QWORD PTR [rax+0x30],rdx
  406c79:	mov    rax,QWORD PTR [rbp-0x8]
  406c7d:	mov    eax,DWORD PTR [rax+0x104]
  406c83:	lea    edx,[rax-0x1]
  406c86:	mov    rax,QWORD PTR [rbp-0x8]
  406c8a:	mov    DWORD PTR [rax+0x104],edx
  406c90:	nop
  406c91:	leave  
  406c92:	ret    
  406c93:	push   rbp
  406c94:	mov    rbp,rsp
  406c97:	mov    QWORD PTR [rbp-0x8],rdi
  406c9b:	mov    DWORD PTR [rbp-0xc],esi
  406c9e:	mov    eax,edx
  406ca0:	mov    WORD PTR [rbp-0x10],ax
  406ca4:	mov    rax,QWORD PTR [rbp-0x8]
  406ca8:	mov    eax,DWORD PTR [rax+0xf0]
  406cae:	sub    eax,DWORD PTR [rbp-0xc]
  406cb1:	movzx  edx,WORD PTR [rbp-0x10]
  406cb5:	dec    edx
  406cb7:	and    eax,edx
  406cb9:	pop    rbp
  406cba:	ret    
  406cbb:	push   rbp
  406cbc:	mov    rbp,rsp
  406cbf:	mov    QWORD PTR [rbp-0x8],rdi
  406cc3:	mov    eax,esi
  406cc5:	mov    WORD PTR [rbp-0xc],ax
  406cc9:	mov    rax,QWORD PTR [rbp-0x8]
  406ccd:	mov    eax,DWORD PTR [rax+0xf4]
  406cd3:	movzx  edx,WORD PTR [rbp-0xc]
  406cd7:	dec    edx
  406cd9:	and    eax,edx
  406cdb:	pop    rbp
  406cdc:	ret    
  406cdd:	push   rbp
  406cde:	mov    rbp,rsp
  406ce1:	sub    rsp,0x20
  406ce5:	mov    QWORD PTR [rbp-0x18],rdi
  406ce9:	mov    QWORD PTR [rbp-0x20],rsi
  406ced:	mov    rax,QWORD PTR [rbp-0x18]
  406cf1:	mov    edx,DWORD PTR [rax+0xf0]
  406cf7:	mov    rax,QWORD PTR [rbp-0x20]
  406cfb:	mov    rax,QWORD PTR [rax]
  406cfe:	sub    edx,eax
  406d00:	mov    eax,edx
  406d02:	mov    DWORD PTR [rbp-0x4],eax
  406d05:	mov    rax,QWORD PTR [rbp-0x20]
  406d09:	mov    rax,QWORD PTR [rax]
  406d0c:	cmp    rax,0x10
  406d10:	jbe    406d27 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  406d12:	mov    rax,QWORD PTR [rbp-0x20]
  406d16:	mov    rax,QWORD PTR [rax]
  406d19:	lea    rdx,[rax-0x10]
  406d1d:	mov    eax,0xffffffff
  406d22:	cmp    rdx,rax
  406d25:	ja     406d36 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  406d27:	mov    rax,QWORD PTR [rbp-0x18]
  406d2b:	mov    eax,DWORD PTR [rax+0xf0]
  406d31:	cmp    DWORD PTR [rbp-0x4],eax
  406d34:	jl     406d55 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  406d36:	lea    rcx,[rip+0x608b]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x708>
  406d3d:	mov    edx,0x287
  406d42:	lea    rsi,[rip+0x5b77]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406d49:	lea    rdi,[rip+0x5bd0]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406d50:	call   403160 <__assert_fail@plt>
  406d55:	mov    rax,QWORD PTR [rbp-0x18]
  406d59:	mov    rax,QWORD PTR [rax+0x48]
  406d5d:	mov    rdx,QWORD PTR [rbp-0x20]
  406d61:	mov    r8,QWORD PTR [rdx]
  406d64:	mov    rdx,QWORD PTR [rbp-0x20]
  406d68:	mov    edx,DWORD PTR [rdx+0x8]
  406d6b:	mov    rcx,QWORD PTR [rbp-0x20]
  406d6f:	lea    rsi,[rcx+0x10]
  406d73:	mov    rcx,QWORD PTR [rbp-0x18]
  406d77:	mov    rdi,QWORD PTR [rcx+0x38]
  406d7b:	mov    ecx,DWORD PTR [rbp-0x4]
  406d7e:	call   rax
  406d80:	test   eax,eax
  406d82:	je     406da3 <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  406d84:	lea    rcx,[rip+0x603d]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x708>
  406d8b:	mov    edx,0x28b
  406d90:	lea    rsi,[rip+0x5b29]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406d97:	lea    rdi,[rip+0x5b82]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406d9e:	call   403160 <__assert_fail@plt>
  406da3:	mov    rax,QWORD PTR [rbp-0x18]
  406da7:	mov    edx,DWORD PTR [rbp-0x4]
  406daa:	mov    DWORD PTR [rax+0xf0],edx
  406db0:	mov    rax,QWORD PTR [rbp-0x18]
  406db4:	mov    eax,DWORD PTR [rax+0xf0]
  406dba:	leave  
  406dbb:	ret    
  406dbc:	push   rbp
  406dbd:	mov    rbp,rsp
  406dc0:	sub    rsp,0x20
  406dc4:	mov    QWORD PTR [rbp-0x18],rdi
  406dc8:	mov    QWORD PTR [rbp-0x20],rsi
  406dcc:	mov    rax,QWORD PTR [rbp-0x18]
  406dd0:	mov    eax,DWORD PTR [rax+0xf4]
  406dd6:	mov    DWORD PTR [rbp-0x4],eax
  406dd9:	mov    rax,QWORD PTR [rbp-0x20]
  406ddd:	mov    rax,QWORD PTR [rax]
  406de0:	mov    edx,eax
  406de2:	mov    eax,DWORD PTR [rbp-0x4]
  406de5:	add    edx,eax
  406de7:	mov    rax,QWORD PTR [rbp-0x18]
  406deb:	mov    DWORD PTR [rax+0xf4],edx
  406df1:	mov    rax,QWORD PTR [rbp-0x18]
  406df5:	mov    eax,DWORD PTR [rax+0xf4]
  406dfb:	cmp    DWORD PTR [rbp-0x4],eax
  406dfe:	jle    406e1f <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  406e00:	lea    rcx,[rip+0x5fb1]        # 40cdb8 <flatcc_builder_padding_base@@Base+0x6f8>
  406e07:	mov    edx,0x2a1
  406e0c:	lea    rsi,[rip+0x5aad]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406e13:	lea    rdi,[rip+0x5b06]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406e1a:	call   403160 <__assert_fail@plt>
  406e1f:	mov    rax,QWORD PTR [rbp-0x18]
  406e23:	mov    rax,QWORD PTR [rax+0x48]
  406e27:	mov    rdx,QWORD PTR [rbp-0x20]
  406e2b:	mov    r8,QWORD PTR [rdx]
  406e2e:	mov    rdx,QWORD PTR [rbp-0x20]
  406e32:	mov    edx,DWORD PTR [rdx+0x8]
  406e35:	mov    rcx,QWORD PTR [rbp-0x20]
  406e39:	lea    rsi,[rcx+0x10]
  406e3d:	mov    rcx,QWORD PTR [rbp-0x18]
  406e41:	mov    rdi,QWORD PTR [rcx+0x38]
  406e45:	mov    ecx,DWORD PTR [rbp-0x4]
  406e48:	call   rax
  406e4a:	test   eax,eax
  406e4c:	je     406e6d <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  406e4e:	lea    rcx,[rip+0x5f63]        # 40cdb8 <flatcc_builder_padding_base@@Base+0x6f8>
  406e55:	mov    edx,0x2a5
  406e5a:	lea    rsi,[rip+0x5a5f]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406e61:	lea    rdi,[rip+0x5ab8]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406e68:	call   403160 <__assert_fail@plt>
  406e6d:	mov    eax,DWORD PTR [rbp-0x4]
  406e70:	inc    eax
  406e72:	leave  
  406e73:	ret    
  406e74:	endbr64 
  406e78:	push   rbp
  406e79:	mov    rbp,rsp
  406e7c:	sub    rsp,0xd0
  406e83:	mov    QWORD PTR [rbp-0xb8],rdi
  406e8a:	mov    QWORD PTR [rbp-0xc0],rsi
  406e91:	mov    eax,edx
  406e93:	mov    DWORD PTR [rbp-0xc8],ecx
  406e99:	mov    WORD PTR [rbp-0xc4],ax
  406ea0:	mov    rax,QWORD PTR fs:0x28
  406ea9:	mov    QWORD PTR [rbp-0x8],rax
  406ead:	xor    eax,eax
  406eaf:	cmp    WORD PTR [rbp-0xc4],0x0
  406eb7:	jne    406ee3 <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  406eb9:	mov    rax,QWORD PTR [rbp-0xb8]
  406ec0:	movzx  eax,WORD PTR [rax+0xec]
  406ec7:	test   ax,ax
  406eca:	je     406edc <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  406ecc:	mov    rax,QWORD PTR [rbp-0xb8]
  406ed3:	movzx  eax,WORD PTR [rax+0xec]
  406eda:	jmp    406eea <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  406edc:	mov    eax,0x1
  406ee1:	jmp    406eea <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  406ee3:	movzx  eax,WORD PTR [rbp-0xc4]
  406eea:	mov    WORD PTR [rbp-0xc4],ax
  406ef1:	mov    rax,QWORD PTR [rbp-0xc0]
  406ef8:	mov    esi,0x4
  406efd:	mov    rdi,rax
  406f00:	call   4066f1 <flatcc_builder_clear@@Base+0xca>
  406f05:	movzx  edx,WORD PTR [rbp-0xc4]
  406f0c:	mov    rax,QWORD PTR [rbp-0xc0]
  406f13:	mov    esi,edx
  406f15:	mov    rdi,rax
  406f18:	call   4066f1 <flatcc_builder_clear@@Base+0xca>
  406f1d:	cmp    DWORD PTR [rbp-0xc8],0x0
  406f24:	jne    407019 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  406f2a:	movzx  edx,WORD PTR [rbp-0xc4]
  406f31:	mov    rax,QWORD PTR [rbp-0xb8]
  406f38:	mov    esi,edx
  406f3a:	mov    rdi,rax
  406f3d:	call   406cbb <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  406f42:	mov    eax,eax
  406f44:	mov    QWORD PTR [rbp-0xa8],rax
  406f4b:	cmp    QWORD PTR [rbp-0xa8],0x0
  406f53:	je     407019 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  406f59:	mov    QWORD PTR [rbp-0xa0],0x0
  406f64:	mov    DWORD PTR [rbp-0x98],0x0
  406f6e:	cmp    QWORD PTR [rbp-0xa8],0x0
  406f76:	je     406fdd <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  406f78:	mov    rdx,QWORD PTR [rbp-0xa0]
  406f7f:	mov    rax,QWORD PTR [rbp-0xa8]
  406f86:	add    rax,rdx
  406f89:	mov    QWORD PTR [rbp-0xa0],rax
  406f90:	mov    eax,DWORD PTR [rbp-0x98]
  406f96:	cdqe   
  406f98:	shl    rax,0x4
  406f9c:	add    rax,rbp
  406f9f:	sub    rax,0x90
  406fa5:	mov    rdx,0x40c6c0
  406fac:	mov    QWORD PTR [rax],rdx
  406faf:	mov    eax,DWORD PTR [rbp-0x98]
  406fb5:	cdqe   
  406fb7:	shl    rax,0x4
  406fbb:	add    rax,rbp
  406fbe:	lea    rdx,[rax-0x88]
  406fc5:	mov    rax,QWORD PTR [rbp-0xa8]
  406fcc:	mov    QWORD PTR [rdx],rax
  406fcf:	mov    eax,DWORD PTR [rbp-0x98]
  406fd5:	inc    eax
  406fd7:	mov    DWORD PTR [rbp-0x98],eax
  406fdd:	lea    rdx,[rbp-0xa0]
  406fe4:	mov    rax,QWORD PTR [rbp-0xb8]
  406feb:	mov    rsi,rdx
  406fee:	mov    rdi,rax
  406ff1:	call   406dbc <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  406ff6:	test   eax,eax
  406ff8:	jne    407019 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  406ffa:	lea    rcx,[rip+0x5da7]        # 40cda8 <flatcc_builder_padding_base@@Base+0x6e8>
  407001:	mov    edx,0x2be
  407006:	lea    rsi,[rip+0x58b3]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40700d:	lea    rdi,[rip+0x590c]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  407014:	call   403160 <__assert_fail@plt>
  407019:	mov    eax,0x0
  40701e:	mov    rcx,QWORD PTR [rbp-0x8]
  407022:	xor    rcx,QWORD PTR fs:0x28
  40702b:	je     407032 <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  40702d:	call   403150 <__stack_chk_fail@plt>
  407032:	leave  
  407033:	ret    

0000000000407034 <flatcc_builder_embed_buffer@@Base>:
  407034:	endbr64 
  407038:	push   rbp
  407039:	mov    rbp,rsp
  40703c:	sub    rsp,0xe0
  407043:	mov    QWORD PTR [rbp-0xb8],rdi
  40704a:	mov    eax,esi
  40704c:	mov    QWORD PTR [rbp-0xc8],rdx
  407053:	mov    QWORD PTR [rbp-0xd0],rcx
  40705a:	mov    edx,r8d
  40705d:	mov    DWORD PTR [rbp-0xd4],r9d
  407064:	mov    WORD PTR [rbp-0xbc],ax
  40706b:	mov    eax,edx
  40706d:	mov    WORD PTR [rbp-0xc0],ax
  407074:	mov    rax,QWORD PTR fs:0x28
  40707d:	mov    QWORD PTR [rbp-0x8],rax
  407081:	xor    eax,eax
  407083:	mov    eax,DWORD PTR [rbp-0xd4]
  407089:	and    eax,0x2
  40708c:	mov    DWORD PTR [rbp-0xa8],eax
  407092:	mov    rax,QWORD PTR [rbp-0xb8]
  407099:	mov    eax,DWORD PTR [rax+0x100]
  40709f:	test   eax,eax
  4070a1:	setne  al
  4070a4:	movzx  ecx,al
  4070a7:	movzx  edx,WORD PTR [rbp-0xbc]
  4070ae:	lea    rsi,[rbp-0xc0]
  4070b5:	mov    rax,QWORD PTR [rbp-0xb8]
  4070bc:	mov    rdi,rax
  4070bf:	call   406e74 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  4070c4:	test   eax,eax
  4070c6:	je     4070d2 <flatcc_builder_embed_buffer@@Base+0x9e>
  4070c8:	mov    eax,0x0
  4070cd:	jmp    4072a9 <flatcc_builder_embed_buffer@@Base+0x275>
  4070d2:	movzx  eax,WORD PTR [rbp-0xc0]
  4070d9:	movzx  edx,ax
  4070dc:	mov    rax,QWORD PTR [rbp-0xd0]
  4070e3:	mov    ecx,eax
  4070e5:	cmp    DWORD PTR [rbp-0xa8],0x0
  4070ec:	je     4070f5 <flatcc_builder_embed_buffer@@Base+0xc1>
  4070ee:	mov    eax,0x4
  4070f3:	jmp    4070fa <flatcc_builder_embed_buffer@@Base+0xc6>
  4070f5:	mov    eax,0x0
  4070fa:	add    ecx,eax
  4070fc:	mov    rax,QWORD PTR [rbp-0xb8]
  407103:	mov    esi,ecx
  407105:	mov    rdi,rax
  407108:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40710d:	mov    DWORD PTR [rbp-0xa4],eax
  407113:	mov    rax,QWORD PTR [rbp-0xd0]
  40711a:	mov    edx,eax
  40711c:	mov    eax,DWORD PTR [rbp-0xa4]
  407122:	add    eax,edx
  407124:	mov    edi,eax
  407126:	call   405994 <main@@Base+0x266>
  40712b:	mov    DWORD PTR [rbp-0xac],eax
  407131:	mov    QWORD PTR [rbp-0xa0],0x0
  40713c:	mov    DWORD PTR [rbp-0x98],0x0
  407146:	mov    rax,QWORD PTR [rbp-0xb8]
  40714d:	mov    eax,DWORD PTR [rax+0x100]
  407153:	test   eax,eax
  407155:	je     4071b3 <flatcc_builder_embed_buffer@@Base+0x17f>
  407157:	mov    rax,QWORD PTR [rbp-0xa0]
  40715e:	add    rax,0x4
  407162:	mov    QWORD PTR [rbp-0xa0],rax
  407169:	mov    eax,DWORD PTR [rbp-0x98]
  40716f:	cdqe   
  407171:	shl    rax,0x4
  407175:	add    rax,rbp
  407178:	lea    rdx,[rax-0x90]
  40717f:	lea    rax,[rbp-0xac]
  407186:	mov    QWORD PTR [rdx],rax
  407189:	mov    eax,DWORD PTR [rbp-0x98]
  40718f:	cdqe   
  407191:	shl    rax,0x4
  407195:	add    rax,rbp
  407198:	sub    rax,0x88
  40719e:	mov    QWORD PTR [rax],0x4
  4071a5:	mov    eax,DWORD PTR [rbp-0x98]
  4071ab:	inc    eax
  4071ad:	mov    DWORD PTR [rbp-0x98],eax
  4071b3:	cmp    QWORD PTR [rbp-0xd0],0x0
  4071bb:	je     407223 <flatcc_builder_embed_buffer@@Base+0x1ef>
  4071bd:	mov    rdx,QWORD PTR [rbp-0xa0]
  4071c4:	mov    rax,QWORD PTR [rbp-0xd0]
  4071cb:	add    rax,rdx
  4071ce:	mov    QWORD PTR [rbp-0xa0],rax
  4071d5:	mov    eax,DWORD PTR [rbp-0x98]
  4071db:	cdqe   
  4071dd:	shl    rax,0x4
  4071e1:	add    rax,rbp
  4071e4:	lea    rdx,[rax-0x90]
  4071eb:	mov    rax,QWORD PTR [rbp-0xc8]
  4071f2:	mov    QWORD PTR [rdx],rax
  4071f5:	mov    eax,DWORD PTR [rbp-0x98]
  4071fb:	cdqe   
  4071fd:	shl    rax,0x4
  407201:	add    rax,rbp
  407204:	lea    rdx,[rax-0x88]
  40720b:	mov    rax,QWORD PTR [rbp-0xd0]
  407212:	mov    QWORD PTR [rdx],rax
  407215:	mov    eax,DWORD PTR [rbp-0x98]
  40721b:	inc    eax
  40721d:	mov    DWORD PTR [rbp-0x98],eax
  407223:	cmp    DWORD PTR [rbp-0xa4],0x0
  40722a:	je     407290 <flatcc_builder_embed_buffer@@Base+0x25c>
  40722c:	mov    rdx,QWORD PTR [rbp-0xa0]
  407233:	mov    eax,DWORD PTR [rbp-0xa4]
  407239:	add    rax,rdx
  40723c:	mov    QWORD PTR [rbp-0xa0],rax
  407243:	mov    eax,DWORD PTR [rbp-0x98]
  407249:	cdqe   
  40724b:	shl    rax,0x4
  40724f:	add    rax,rbp
  407252:	sub    rax,0x90
  407258:	mov    rdx,0x40c6c0
  40725f:	mov    QWORD PTR [rax],rdx
  407262:	mov    edx,DWORD PTR [rbp-0x98]
  407268:	mov    eax,DWORD PTR [rbp-0xa4]
  40726e:	movsxd rdx,edx
  407271:	shl    rdx,0x4
  407275:	add    rdx,rbp
  407278:	sub    rdx,0x88
  40727f:	mov    QWORD PTR [rdx],rax
  407282:	mov    eax,DWORD PTR [rbp-0x98]
  407288:	inc    eax
  40728a:	mov    DWORD PTR [rbp-0x98],eax
  407290:	lea    rdx,[rbp-0xa0]
  407297:	mov    rax,QWORD PTR [rbp-0xb8]
  40729e:	mov    rsi,rdx
  4072a1:	mov    rdi,rax
  4072a4:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4072a9:	mov    rdi,QWORD PTR [rbp-0x8]
  4072ad:	xor    rdi,QWORD PTR fs:0x28
  4072b6:	je     4072bd <flatcc_builder_embed_buffer@@Base+0x289>
  4072b8:	call   403150 <__stack_chk_fail@plt>
  4072bd:	leave  
  4072be:	ret    

00000000004072bf <flatcc_builder_create_buffer@@Base>:
  4072bf:	endbr64 
  4072c3:	push   rbp
  4072c4:	mov    rbp,rsp
  4072c7:	sub    rsp,0xf0
  4072ce:	mov    QWORD PTR [rbp-0xd8],rdi
  4072d5:	mov    QWORD PTR [rbp-0xe0],rsi
  4072dc:	mov    eax,edx
  4072de:	mov    DWORD PTR [rbp-0xe8],ecx
  4072e4:	mov    edx,r8d
  4072e7:	mov    DWORD PTR [rbp-0xf0],r9d
  4072ee:	mov    WORD PTR [rbp-0xe4],ax
  4072f5:	mov    eax,edx
  4072f7:	mov    WORD PTR [rbp-0xec],ax
  4072fe:	mov    rax,QWORD PTR fs:0x28
  407307:	mov    QWORD PTR [rbp-0x8],rax
  40730b:	xor    eax,eax
  40730d:	mov    DWORD PTR [rbp-0xb8],0x0
  407317:	mov    DWORD PTR [rbp-0xbc],0x0
  407321:	mov    eax,DWORD PTR [rbp-0xf0]
  407327:	and    eax,0x1
  40732a:	test   eax,eax
  40732c:	setne  al
  40732f:	movzx  eax,al
  407332:	mov    DWORD PTR [rbp-0xb4],eax
  407338:	mov    eax,DWORD PTR [rbp-0xf0]
  40733e:	and    eax,0x2
  407341:	test   eax,eax
  407343:	setne  al
  407346:	movzx  eax,al
  407349:	mov    DWORD PTR [rbp-0xb0],eax
  40734f:	movzx  edx,WORD PTR [rbp-0xe4]
  407356:	mov    ecx,DWORD PTR [rbp-0xb4]
  40735c:	lea    rsi,[rbp-0xec]
  407363:	mov    rax,QWORD PTR [rbp-0xd8]
  40736a:	mov    rdi,rax
  40736d:	call   406e74 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  407372:	test   eax,eax
  407374:	je     407380 <flatcc_builder_create_buffer@@Base+0xc1>
  407376:	mov    eax,0x0
  40737b:	jmp    4076e2 <flatcc_builder_create_buffer@@Base+0x423>
  407380:	movzx  eax,WORD PTR [rbp-0xec]
  407387:	movzx  edx,ax
  40738a:	mov    rax,QWORD PTR [rbp-0xd8]
  407391:	mov    esi,edx
  407393:	mov    rdi,rax
  407396:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  40739b:	cmp    QWORD PTR [rbp-0xe0],0x0
  4073a3:	je     4073da <flatcc_builder_create_buffer@@Base+0x11b>
  4073a5:	mov    rax,QWORD PTR [rbp-0xe0]
  4073ac:	mov    eax,DWORD PTR [rax]
  4073ae:	mov    DWORD PTR [rbp-0xbc],eax
  4073b4:	mov    eax,DWORD PTR [rbp-0xbc]
  4073ba:	mov    edi,eax
  4073bc:	call   4059af <main@@Base+0x281>
  4073c1:	mov    DWORD PTR [rbp-0xbc],eax
  4073c7:	mov    eax,DWORD PTR [rbp-0xbc]
  4073cd:	mov    edi,eax
  4073cf:	call   405994 <main@@Base+0x266>
  4073d4:	mov    DWORD PTR [rbp-0xbc],eax
  4073da:	mov    eax,DWORD PTR [rbp-0xbc]
  4073e0:	test   eax,eax
  4073e2:	je     4073eb <flatcc_builder_create_buffer@@Base+0x12c>
  4073e4:	mov    eax,0x4
  4073e9:	jmp    4073f0 <flatcc_builder_create_buffer@@Base+0x131>
  4073eb:	mov    eax,0x0
  4073f0:	mov    DWORD PTR [rbp-0xb8],eax
  4073f6:	movzx  eax,WORD PTR [rbp-0xec]
  4073fd:	movzx  edx,ax
  407400:	cmp    DWORD PTR [rbp-0xb0],0x0
  407407:	je     407410 <flatcc_builder_create_buffer@@Base+0x151>
  407409:	mov    ecx,0x4
  40740e:	jmp    407415 <flatcc_builder_create_buffer@@Base+0x156>
  407410:	mov    ecx,0x0
  407415:	mov    eax,DWORD PTR [rbp-0xb8]
  40741b:	add    eax,ecx
  40741d:	lea    ecx,[rax+0x4]
  407420:	mov    rax,QWORD PTR [rbp-0xd8]
  407427:	mov    esi,ecx
  407429:	mov    rdi,rax
  40742c:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407431:	mov    DWORD PTR [rbp-0xac],eax
  407437:	mov    QWORD PTR [rbp-0xa0],0x0
  407442:	mov    DWORD PTR [rbp-0x98],0x0
  40744c:	cmp    DWORD PTR [rbp-0xb4],0x0
  407453:	jne    40745e <flatcc_builder_create_buffer@@Base+0x19f>
  407455:	cmp    DWORD PTR [rbp-0xb0],0x0
  40745c:	je     4074ba <flatcc_builder_create_buffer@@Base+0x1fb>
  40745e:	mov    rax,QWORD PTR [rbp-0xa0]
  407465:	add    rax,0x4
  407469:	mov    QWORD PTR [rbp-0xa0],rax
  407470:	mov    eax,DWORD PTR [rbp-0x98]
  407476:	cdqe   
  407478:	shl    rax,0x4
  40747c:	add    rax,rbp
  40747f:	lea    rdx,[rax-0x90]
  407486:	lea    rax,[rbp-0xc0]
  40748d:	mov    QWORD PTR [rdx],rax
  407490:	mov    eax,DWORD PTR [rbp-0x98]
  407496:	cdqe   
  407498:	shl    rax,0x4
  40749c:	add    rax,rbp
  40749f:	sub    rax,0x88
  4074a5:	mov    QWORD PTR [rax],0x4
  4074ac:	mov    eax,DWORD PTR [rbp-0x98]
  4074b2:	inc    eax
  4074b4:	mov    DWORD PTR [rbp-0x98],eax
  4074ba:	mov    rax,QWORD PTR [rbp-0xa0]
  4074c1:	add    rax,0x4
  4074c5:	mov    QWORD PTR [rbp-0xa0],rax
  4074cc:	mov    eax,DWORD PTR [rbp-0x98]
  4074d2:	cdqe   
  4074d4:	shl    rax,0x4
  4074d8:	add    rax,rbp
  4074db:	lea    rdx,[rax-0x90]
  4074e2:	lea    rax,[rbp-0xc4]
  4074e9:	mov    QWORD PTR [rdx],rax
  4074ec:	mov    eax,DWORD PTR [rbp-0x98]
  4074f2:	cdqe   
  4074f4:	shl    rax,0x4
  4074f8:	add    rax,rbp
  4074fb:	sub    rax,0x88
  407501:	mov    QWORD PTR [rax],0x4
  407508:	mov    eax,DWORD PTR [rbp-0x98]
  40750e:	inc    eax
  407510:	mov    DWORD PTR [rbp-0x98],eax
  407516:	cmp    DWORD PTR [rbp-0xb8],0x0
  40751d:	je     407584 <flatcc_builder_create_buffer@@Base+0x2c5>
  40751f:	mov    rdx,QWORD PTR [rbp-0xa0]
  407526:	mov    eax,DWORD PTR [rbp-0xb8]
  40752c:	add    rax,rdx
  40752f:	mov    QWORD PTR [rbp-0xa0],rax
  407536:	mov    eax,DWORD PTR [rbp-0x98]
  40753c:	cdqe   
  40753e:	shl    rax,0x4
  407542:	add    rax,rbp
  407545:	lea    rdx,[rax-0x90]
  40754c:	lea    rax,[rbp-0xbc]
  407553:	mov    QWORD PTR [rdx],rax
  407556:	mov    edx,DWORD PTR [rbp-0x98]
  40755c:	mov    eax,DWORD PTR [rbp-0xb8]
  407562:	movsxd rdx,edx
  407565:	shl    rdx,0x4
  407569:	add    rdx,rbp
  40756c:	sub    rdx,0x88
  407573:	mov    QWORD PTR [rdx],rax
  407576:	mov    eax,DWORD PTR [rbp-0x98]
  40757c:	inc    eax
  40757e:	mov    DWORD PTR [rbp-0x98],eax
  407584:	cmp    DWORD PTR [rbp-0xac],0x0
  40758b:	je     4075f1 <flatcc_builder_create_buffer@@Base+0x332>
  40758d:	mov    rdx,QWORD PTR [rbp-0xa0]
  407594:	mov    eax,DWORD PTR [rbp-0xac]
  40759a:	add    rax,rdx
  40759d:	mov    QWORD PTR [rbp-0xa0],rax
  4075a4:	mov    eax,DWORD PTR [rbp-0x98]
  4075aa:	cdqe   
  4075ac:	shl    rax,0x4
  4075b0:	add    rax,rbp
  4075b3:	sub    rax,0x90
  4075b9:	mov    rdx,0x40c6c0
  4075c0:	mov    QWORD PTR [rax],rdx
  4075c3:	mov    edx,DWORD PTR [rbp-0x98]
  4075c9:	mov    eax,DWORD PTR [rbp-0xac]
  4075cf:	movsxd rdx,edx
  4075d2:	shl    rdx,0x4
  4075d6:	add    rdx,rbp
  4075d9:	sub    rdx,0x88
  4075e0:	mov    QWORD PTR [rdx],rax
  4075e3:	mov    eax,DWORD PTR [rbp-0x98]
  4075e9:	inc    eax
  4075eb:	mov    DWORD PTR [rbp-0x98],eax
  4075f1:	mov    rax,QWORD PTR [rbp-0xd8]
  4075f8:	mov    eax,DWORD PTR [rax+0xf0]
  4075fe:	mov    edx,eax
  407600:	mov    rax,QWORD PTR [rbp-0xa0]
  407607:	sub    edx,eax
  407609:	mov    eax,edx
  40760b:	cmp    DWORD PTR [rbp-0xb4],0x0
  407612:	jne    40761d <flatcc_builder_create_buffer@@Base+0x35e>
  407614:	cmp    DWORD PTR [rbp-0xb0],0x0
  40761b:	je     407624 <flatcc_builder_create_buffer@@Base+0x365>
  40761d:	mov    edx,0x4
  407622:	jmp    407629 <flatcc_builder_create_buffer@@Base+0x36a>
  407624:	mov    edx,0x0
  407629:	add    eax,edx
  40762b:	mov    DWORD PTR [rbp-0xa8],eax
  407631:	cmp    DWORD PTR [rbp-0xb4],0x0
  407638:	je     40765c <flatcc_builder_create_buffer@@Base+0x39d>
  40763a:	mov    rax,QWORD PTR [rbp-0xd8]
  407641:	mov    eax,DWORD PTR [rax+0xf8]
  407647:	sub    eax,DWORD PTR [rbp-0xa8]
  40764d:	mov    edi,eax
  40764f:	call   405994 <main@@Base+0x266>
  407654:	mov    DWORD PTR [rbp-0xc0],eax
  40765a:	jmp    40767c <flatcc_builder_create_buffer@@Base+0x3bd>
  40765c:	mov    rax,QWORD PTR [rbp-0xd8]
  407663:	mov    eax,DWORD PTR [rax+0xf4]
  407669:	sub    eax,DWORD PTR [rbp-0xa8]
  40766f:	mov    edi,eax
  407671:	call   405994 <main@@Base+0x266>
  407676:	mov    DWORD PTR [rbp-0xc0],eax
  40767c:	mov    eax,DWORD PTR [rbp-0xe8]
  407682:	sub    eax,DWORD PTR [rbp-0xa8]
  407688:	mov    edi,eax
  40768a:	call   405994 <main@@Base+0x266>
  40768f:	mov    DWORD PTR [rbp-0xc4],eax
  407695:	lea    rdx,[rbp-0xa0]
  40769c:	mov    rax,QWORD PTR [rbp-0xd8]
  4076a3:	mov    rsi,rdx
  4076a6:	mov    rdi,rax
  4076a9:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4076ae:	mov    DWORD PTR [rbp-0xa4],eax
  4076b4:	cmp    DWORD PTR [rbp-0xa4],0x0
  4076bb:	jne    4076dc <flatcc_builder_create_buffer@@Base+0x41d>
  4076bd:	lea    rcx,[rip+0x571c]        # 40cde0 <flatcc_builder_padding_base@@Base+0x720>
  4076c4:	mov    edx,0x304
  4076c9:	lea    rsi,[rip+0x51f0]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4076d0:	lea    rdi,[rip+0x5249]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  4076d7:	call   403160 <__assert_fail@plt>
  4076dc:	mov    eax,DWORD PTR [rbp-0xa4]
  4076e2:	mov    rsi,QWORD PTR [rbp-0x8]
  4076e6:	xor    rsi,QWORD PTR fs:0x28
  4076ef:	je     4076f6 <flatcc_builder_create_buffer@@Base+0x437>
  4076f1:	call   403150 <__stack_chk_fail@plt>
  4076f6:	leave  
  4076f7:	ret    

00000000004076f8 <flatcc_builder_create_struct@@Base>:
  4076f8:	endbr64 
  4076fc:	push   rbp
  4076fd:	mov    rbp,rsp
  407700:	sub    rsp,0xd0
  407707:	mov    QWORD PTR [rbp-0xb8],rdi
  40770e:	mov    QWORD PTR [rbp-0xc0],rsi
  407715:	mov    QWORD PTR [rbp-0xc8],rdx
  40771c:	mov    eax,ecx
  40771e:	mov    WORD PTR [rbp-0xcc],ax
  407725:	mov    rax,QWORD PTR fs:0x28
  40772e:	mov    QWORD PTR [rbp-0x8],rax
  407732:	xor    eax,eax
  407734:	cmp    WORD PTR [rbp-0xcc],0x0
  40773c:	jne    40775d <flatcc_builder_create_struct@@Base+0x65>
  40773e:	lea    rcx,[rip+0x56bb]        # 40ce00 <flatcc_builder_padding_base@@Base+0x740>
  407745:	mov    edx,0x30f
  40774a:	lea    rsi,[rip+0x516f]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407751:	lea    rdi,[rip+0x5227]        # 40c97f <flatcc_builder_padding_base@@Base+0x2bf>
  407758:	call   403160 <__assert_fail@plt>
  40775d:	movzx  edx,WORD PTR [rbp-0xcc]
  407764:	mov    rax,QWORD PTR [rbp-0xb8]
  40776b:	mov    esi,edx
  40776d:	mov    rdi,rax
  407770:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  407775:	movzx  edx,WORD PTR [rbp-0xcc]
  40777c:	mov    rax,QWORD PTR [rbp-0xc8]
  407783:	mov    ecx,eax
  407785:	mov    rax,QWORD PTR [rbp-0xb8]
  40778c:	mov    esi,ecx
  40778e:	mov    rdi,rax
  407791:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407796:	mov    eax,eax
  407798:	mov    QWORD PTR [rbp-0xa8],rax
  40779f:	mov    QWORD PTR [rbp-0xa0],0x0
  4077aa:	mov    DWORD PTR [rbp-0x98],0x0
  4077b4:	cmp    QWORD PTR [rbp-0xc8],0x0
  4077bc:	je     407824 <flatcc_builder_create_struct@@Base+0x12c>
  4077be:	mov    rdx,QWORD PTR [rbp-0xa0]
  4077c5:	mov    rax,QWORD PTR [rbp-0xc8]
  4077cc:	add    rax,rdx
  4077cf:	mov    QWORD PTR [rbp-0xa0],rax
  4077d6:	mov    eax,DWORD PTR [rbp-0x98]
  4077dc:	cdqe   
  4077de:	shl    rax,0x4
  4077e2:	add    rax,rbp
  4077e5:	lea    rdx,[rax-0x90]
  4077ec:	mov    rax,QWORD PTR [rbp-0xc0]
  4077f3:	mov    QWORD PTR [rdx],rax
  4077f6:	mov    eax,DWORD PTR [rbp-0x98]
  4077fc:	cdqe   
  4077fe:	shl    rax,0x4
  407802:	add    rax,rbp
  407805:	lea    rdx,[rax-0x88]
  40780c:	mov    rax,QWORD PTR [rbp-0xc8]
  407813:	mov    QWORD PTR [rdx],rax
  407816:	mov    eax,DWORD PTR [rbp-0x98]
  40781c:	inc    eax
  40781e:	mov    DWORD PTR [rbp-0x98],eax
  407824:	cmp    QWORD PTR [rbp-0xa8],0x0
  40782c:	je     407893 <flatcc_builder_create_struct@@Base+0x19b>
  40782e:	mov    rdx,QWORD PTR [rbp-0xa0]
  407835:	mov    rax,QWORD PTR [rbp-0xa8]
  40783c:	add    rax,rdx
  40783f:	mov    QWORD PTR [rbp-0xa0],rax
  407846:	mov    eax,DWORD PTR [rbp-0x98]
  40784c:	cdqe   
  40784e:	shl    rax,0x4
  407852:	add    rax,rbp
  407855:	sub    rax,0x90
  40785b:	mov    rdx,0x40c6c0
  407862:	mov    QWORD PTR [rax],rdx
  407865:	mov    eax,DWORD PTR [rbp-0x98]
  40786b:	cdqe   
  40786d:	shl    rax,0x4
  407871:	add    rax,rbp
  407874:	lea    rdx,[rax-0x88]
  40787b:	mov    rax,QWORD PTR [rbp-0xa8]
  407882:	mov    QWORD PTR [rdx],rax
  407885:	mov    eax,DWORD PTR [rbp-0x98]
  40788b:	inc    eax
  40788d:	mov    DWORD PTR [rbp-0x98],eax
  407893:	lea    rdx,[rbp-0xa0]
  40789a:	mov    rax,QWORD PTR [rbp-0xb8]
  4078a1:	mov    rsi,rdx
  4078a4:	mov    rdi,rax
  4078a7:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4078ac:	mov    rcx,QWORD PTR [rbp-0x8]
  4078b0:	xor    rcx,QWORD PTR fs:0x28
  4078b9:	je     4078c0 <flatcc_builder_create_struct@@Base+0x1c8>
  4078bb:	call   403150 <__stack_chk_fail@plt>
  4078c0:	leave  
  4078c1:	ret    

00000000004078c2 <flatcc_builder_start_buffer@@Base>:
  4078c2:	endbr64 
  4078c6:	push   rbp
  4078c7:	mov    rbp,rsp
  4078ca:	sub    rsp,0x20
  4078ce:	mov    QWORD PTR [rbp-0x8],rdi
  4078d2:	mov    QWORD PTR [rbp-0x10],rsi
  4078d6:	mov    eax,edx
  4078d8:	mov    DWORD PTR [rbp-0x18],ecx
  4078db:	mov    WORD PTR [rbp-0x14],ax
  4078df:	mov    rax,QWORD PTR [rbp-0x8]
  4078e3:	movzx  eax,WORD PTR [rax+0xe8]
  4078ea:	movzx  edx,ax
  4078ed:	mov    rax,QWORD PTR [rbp-0x8]
  4078f1:	mov    esi,edx
  4078f3:	mov    rdi,rax
  4078f6:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4078fb:	test   eax,eax
  4078fd:	je     407909 <flatcc_builder_start_buffer@@Base+0x47>
  4078ff:	mov    eax,0xffffffff
  407904:	jmp    407a0d <flatcc_builder_start_buffer@@Base+0x14b>
  407909:	mov    rax,QWORD PTR [rbp-0x8]
  40790d:	mov    WORD PTR [rax+0xe8],0x1
  407916:	mov    rax,QWORD PTR [rbp-0x8]
  40791a:	mov    rdx,QWORD PTR [rax+0x30]
  40791e:	mov    rax,QWORD PTR [rbp-0x8]
  407922:	movzx  eax,WORD PTR [rax+0xec]
  407929:	mov    WORD PTR [rdx+0x22],ax
  40792d:	mov    rdx,QWORD PTR [rbp-0x8]
  407931:	movzx  eax,WORD PTR [rbp-0x14]
  407935:	mov    WORD PTR [rdx+0xec],ax
  40793c:	mov    rax,QWORD PTR [rbp-0x8]
  407940:	mov    rdx,QWORD PTR [rax+0x30]
  407944:	mov    rax,QWORD PTR [rbp-0x8]
  407948:	movzx  eax,WORD PTR [rax+0x10c]
  40794f:	mov    WORD PTR [rdx+0x20],ax
  407953:	mov    eax,DWORD PTR [rbp-0x18]
  407956:	mov    edx,eax
  407958:	mov    rax,QWORD PTR [rbp-0x8]
  40795c:	mov    WORD PTR [rax+0x10c],dx
  407963:	mov    rax,QWORD PTR [rbp-0x8]
  407967:	mov    rax,QWORD PTR [rax+0x30]
  40796b:	mov    rdx,QWORD PTR [rbp-0x8]
  40796f:	mov    edx,DWORD PTR [rdx+0xf8]
  407975:	mov    DWORD PTR [rax+0x14],edx
  407978:	mov    rax,QWORD PTR [rbp-0x8]
  40797c:	mov    rax,QWORD PTR [rax+0x30]
  407980:	mov    rdx,QWORD PTR [rbp-0x8]
  407984:	mov    edx,DWORD PTR [rdx+0x100]
  40798a:	mov    DWORD PTR [rax+0x1c],edx
  40798d:	mov    rax,QWORD PTR [rbp-0x8]
  407991:	mov    edx,DWORD PTR [rax+0xf0]
  407997:	mov    rax,QWORD PTR [rbp-0x8]
  40799b:	mov    DWORD PTR [rax+0xf8],edx
  4079a1:	mov    rax,QWORD PTR [rbp-0x8]
  4079a5:	mov    eax,DWORD PTR [rax+0xfc]
  4079ab:	lea    ecx,[rax+0x1]
  4079ae:	mov    rdx,QWORD PTR [rbp-0x8]
  4079b2:	mov    DWORD PTR [rdx+0xfc],ecx
  4079b8:	mov    rdx,QWORD PTR [rbp-0x8]
  4079bc:	mov    DWORD PTR [rdx+0x100],eax
  4079c2:	mov    rax,QWORD PTR [rbp-0x8]
  4079c6:	mov    rax,QWORD PTR [rax+0x30]
  4079ca:	mov    rdx,QWORD PTR [rbp-0x8]
  4079ce:	mov    edx,DWORD PTR [rdx+0x110]
  4079d4:	mov    DWORD PTR [rax+0x10],edx
  4079d7:	cmp    QWORD PTR [rbp-0x10],0x0
  4079dc:	je     4079e4 <flatcc_builder_start_buffer@@Base+0x122>
  4079de:	mov    rax,QWORD PTR [rbp-0x10]
  4079e2:	jmp    4079eb <flatcc_builder_start_buffer@@Base+0x129>
  4079e4:	mov    rax,0x40c6c0
  4079eb:	mov    rdx,QWORD PTR [rbp-0x8]
  4079ef:	add    rdx,0x110
  4079f6:	mov    eax,DWORD PTR [rax]
  4079f8:	mov    DWORD PTR [rdx],eax
  4079fa:	mov    rax,QWORD PTR [rbp-0x8]
  4079fe:	mov    rax,QWORD PTR [rax+0x30]
  407a02:	mov    WORD PTR [rax+0xe],0x1
  407a08:	mov    eax,0x0
  407a0d:	leave  
  407a0e:	ret    

0000000000407a0f <flatcc_builder_end_buffer@@Base>:
  407a0f:	endbr64 
  407a13:	push   rbp
  407a14:	mov    rbp,rsp
  407a17:	sub    rsp,0x20
  407a1b:	mov    QWORD PTR [rbp-0x18],rdi
  407a1f:	mov    DWORD PTR [rbp-0x1c],esi
  407a22:	mov    rax,QWORD PTR [rbp-0x18]
  407a26:	movzx  eax,WORD PTR [rax+0x10c]
  407a2d:	movzx  eax,ax
  407a30:	and    eax,0x2
  407a33:	mov    DWORD PTR [rbp-0x8],eax
  407a36:	mov    rax,QWORD PTR [rbp-0x18]
  407a3a:	mov    eax,DWORD PTR [rax+0x100]
  407a40:	test   eax,eax
  407a42:	setne  al
  407a45:	movzx  eax,al
  407a48:	or     DWORD PTR [rbp-0x8],eax
  407a4b:	mov    rax,QWORD PTR [rbp-0x18]
  407a4f:	mov    rax,QWORD PTR [rax+0x30]
  407a53:	movzx  eax,WORD PTR [rax+0xe]
  407a57:	cmp    ax,0x1
  407a5b:	je     407a7c <flatcc_builder_end_buffer@@Base+0x6d>
  407a5d:	lea    rcx,[rip+0x53bc]        # 40ce20 <flatcc_builder_padding_base@@Base+0x760>
  407a64:	mov    edx,0x346
  407a69:	lea    rsi,[rip+0x4e50]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407a70:	lea    rdi,[rip+0x4f19]        # 40c990 <flatcc_builder_padding_base@@Base+0x2d0>
  407a77:	call   403160 <__assert_fail@plt>
  407a7c:	mov    rax,QWORD PTR [rbp-0x18]
  407a80:	movzx  eax,WORD PTR [rax+0xec]
  407a87:	movzx  edx,ax
  407a8a:	mov    rax,QWORD PTR [rbp-0x18]
  407a8e:	mov    esi,edx
  407a90:	mov    rdi,rax
  407a93:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  407a98:	mov    rax,QWORD PTR [rbp-0x18]
  407a9c:	movzx  eax,WORD PTR [rax+0xe8]
  407aa3:	movzx  edi,ax
  407aa6:	mov    rax,QWORD PTR [rbp-0x18]
  407aaa:	movzx  eax,WORD PTR [rax+0xec]
  407ab1:	movzx  edx,ax
  407ab4:	mov    rax,QWORD PTR [rbp-0x18]
  407ab8:	lea    rsi,[rax+0x110]
  407abf:	mov    r8d,DWORD PTR [rbp-0x8]
  407ac3:	mov    ecx,DWORD PTR [rbp-0x1c]
  407ac6:	mov    rax,QWORD PTR [rbp-0x18]
  407aca:	mov    r9d,r8d
  407acd:	mov    r8d,edi
  407ad0:	mov    rdi,rax
  407ad3:	call   4072bf <flatcc_builder_create_buffer@@Base>
  407ad8:	mov    DWORD PTR [rbp-0x4],eax
  407adb:	cmp    DWORD PTR [rbp-0x4],0x0
  407adf:	jne    407ae8 <flatcc_builder_end_buffer@@Base+0xd9>
  407ae1:	mov    eax,0x0
  407ae6:	jmp    407b4d <flatcc_builder_end_buffer@@Base+0x13e>
  407ae8:	mov    rax,QWORD PTR [rbp-0x18]
  407aec:	mov    rax,QWORD PTR [rax+0x30]
  407af0:	mov    edx,DWORD PTR [rax+0x14]
  407af3:	mov    rax,QWORD PTR [rbp-0x18]
  407af7:	mov    DWORD PTR [rax+0xf8],edx
  407afd:	mov    rax,QWORD PTR [rbp-0x18]
  407b01:	mov    rax,QWORD PTR [rax+0x30]
  407b05:	mov    edx,DWORD PTR [rax+0x1c]
  407b08:	mov    rax,QWORD PTR [rbp-0x18]
  407b0c:	mov    DWORD PTR [rax+0x100],edx
  407b12:	mov    rax,QWORD PTR [rbp-0x18]
  407b16:	mov    rax,QWORD PTR [rax+0x30]
  407b1a:	mov    edx,DWORD PTR [rax+0x10]
  407b1d:	mov    rax,QWORD PTR [rbp-0x18]
  407b21:	mov    DWORD PTR [rax+0x110],edx
  407b27:	mov    rax,QWORD PTR [rbp-0x18]
  407b2b:	mov    rax,QWORD PTR [rax+0x30]
  407b2f:	movzx  eax,WORD PTR [rax+0x20]
  407b33:	mov    rdx,QWORD PTR [rbp-0x18]
  407b37:	mov    WORD PTR [rdx+0x10c],ax
  407b3e:	mov    rax,QWORD PTR [rbp-0x18]
  407b42:	mov    rdi,rax
  407b45:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  407b4a:	mov    eax,DWORD PTR [rbp-0x4]
  407b4d:	leave  
  407b4e:	ret    

0000000000407b4f <flatcc_builder_start_struct@@Base>:
  407b4f:	endbr64 
  407b53:	push   rbp
  407b54:	mov    rbp,rsp
  407b57:	sub    rsp,0x20
  407b5b:	mov    QWORD PTR [rbp-0x8],rdi
  407b5f:	mov    QWORD PTR [rbp-0x10],rsi
  407b63:	mov    eax,edx
  407b65:	mov    WORD PTR [rbp-0x14],ax
  407b69:	movzx  edx,WORD PTR [rbp-0x14]
  407b6d:	mov    rax,QWORD PTR [rbp-0x8]
  407b71:	mov    esi,edx
  407b73:	mov    rdi,rax
  407b76:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  407b7b:	test   eax,eax
  407b7d:	je     407b86 <flatcc_builder_start_struct@@Base+0x37>
  407b7f:	mov    eax,0x0
  407b84:	jmp    407bb9 <flatcc_builder_start_struct@@Base+0x6a>
  407b86:	mov    rax,QWORD PTR [rbp-0x8]
  407b8a:	mov    rax,QWORD PTR [rax+0x30]
  407b8e:	mov    WORD PTR [rax+0xe],0x2
  407b94:	mov    rax,QWORD PTR [rbp-0x8]
  407b98:	mov    esi,0xfffffffc
  407b9d:	mov    rdi,rax
  407ba0:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  407ba5:	mov    rax,QWORD PTR [rbp-0x10]
  407ba9:	mov    edx,eax
  407bab:	mov    rax,QWORD PTR [rbp-0x8]
  407baf:	mov    esi,edx
  407bb1:	mov    rdi,rax
  407bb4:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  407bb9:	leave  
  407bba:	ret    

0000000000407bbb <flatcc_builder_struct_edit@@Base>:
  407bbb:	endbr64 
  407bbf:	push   rbp
  407bc0:	mov    rbp,rsp
  407bc3:	mov    QWORD PTR [rbp-0x8],rdi
  407bc7:	mov    rax,QWORD PTR [rbp-0x8]
  407bcb:	mov    rax,QWORD PTR [rax+0x18]
  407bcf:	pop    rbp
  407bd0:	ret    

0000000000407bd1 <flatcc_builder_end_struct@@Base>:
  407bd1:	endbr64 
  407bd5:	push   rbp
  407bd6:	mov    rbp,rsp
  407bd9:	sub    rsp,0x20
  407bdd:	mov    QWORD PTR [rbp-0x18],rdi
  407be1:	mov    rax,QWORD PTR [rbp-0x18]
  407be5:	mov    rax,QWORD PTR [rax+0x30]
  407be9:	movzx  eax,WORD PTR [rax+0xe]
  407bed:	cmp    ax,0x2
  407bf1:	je     407c12 <flatcc_builder_end_struct@@Base+0x41>
  407bf3:	lea    rcx,[rip+0x5246]        # 40ce40 <flatcc_builder_padding_base@@Base+0x780>
  407bfa:	mov    edx,0x368
  407bff:	lea    rsi,[rip+0x4cba]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407c06:	lea    rdi,[rip+0x4db3]        # 40c9c0 <flatcc_builder_padding_base@@Base+0x300>
  407c0d:	call   403160 <__assert_fail@plt>
  407c12:	mov    rax,QWORD PTR [rbp-0x18]
  407c16:	movzx  eax,WORD PTR [rax+0xea]
  407c1d:	movzx  edx,ax
  407c20:	mov    rax,QWORD PTR [rbp-0x18]
  407c24:	mov    eax,DWORD PTR [rax+0x20]
  407c27:	mov    edi,eax
  407c29:	mov    rax,QWORD PTR [rbp-0x18]
  407c2d:	mov    rsi,QWORD PTR [rax+0x18]
  407c31:	mov    rax,QWORD PTR [rbp-0x18]
  407c35:	mov    ecx,edx
  407c37:	mov    rdx,rdi
  407c3a:	mov    rdi,rax
  407c3d:	call   4076f8 <flatcc_builder_create_struct@@Base>
  407c42:	mov    DWORD PTR [rbp-0x4],eax
  407c45:	cmp    DWORD PTR [rbp-0x4],0x0
  407c49:	jne    407c52 <flatcc_builder_end_struct@@Base+0x81>
  407c4b:	mov    eax,0x0
  407c50:	jmp    407c61 <flatcc_builder_end_struct@@Base+0x90>
  407c52:	mov    rax,QWORD PTR [rbp-0x18]
  407c56:	mov    rdi,rax
  407c59:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  407c5e:	mov    eax,DWORD PTR [rbp-0x4]
  407c61:	leave  
  407c62:	ret    
  407c63:	push   rbp
  407c64:	mov    rbp,rsp
  407c67:	sub    rsp,0x20
  407c6b:	mov    QWORD PTR [rbp-0x18],rdi
  407c6f:	mov    DWORD PTR [rbp-0x1c],esi
  407c72:	mov    DWORD PTR [rbp-0x20],edx
  407c75:	mov    rax,QWORD PTR [rbp-0x18]
  407c79:	mov    rax,QWORD PTR [rax+0x30]
  407c7d:	mov    eax,DWORD PTR [rax+0x14]
  407c80:	mov    DWORD PTR [rbp-0x8],eax
  407c83:	mov    edx,DWORD PTR [rbp-0x8]
  407c86:	mov    eax,DWORD PTR [rbp-0x1c]
  407c89:	add    eax,edx
  407c8b:	mov    DWORD PTR [rbp-0x4],eax
  407c8e:	mov    eax,DWORD PTR [rbp-0x8]
  407c91:	cmp    eax,DWORD PTR [rbp-0x4]
  407c94:	ja     407c9e <flatcc_builder_end_struct@@Base+0xcd>
  407c96:	mov    eax,DWORD PTR [rbp-0x4]
  407c99:	cmp    eax,DWORD PTR [rbp-0x20]
  407c9c:	jbe    407cd4 <flatcc_builder_end_struct@@Base+0x103>
  407c9e:	mov    eax,DWORD PTR [rbp-0x8]
  407ca1:	cmp    eax,DWORD PTR [rbp-0x4]
  407ca4:	ja     407cae <flatcc_builder_end_struct@@Base+0xdd>
  407ca6:	mov    eax,DWORD PTR [rbp-0x4]
  407ca9:	cmp    eax,DWORD PTR [rbp-0x20]
  407cac:	jbe    407ccd <flatcc_builder_end_struct@@Base+0xfc>
  407cae:	lea    rcx,[rip+0x51ab]        # 40ce60 <flatcc_builder_padding_base@@Base+0x7a0>
  407cb5:	mov    edx,0x37c
  407cba:	lea    rsi,[rip+0x4bff]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407cc1:	lea    rdi,[rip+0x4d24]        # 40c9ec <flatcc_builder_padding_base@@Base+0x32c>
  407cc8:	call   403160 <__assert_fail@plt>
  407ccd:	mov    eax,0xffffffff
  407cd2:	jmp    407ce7 <flatcc_builder_end_struct@@Base+0x116>
  407cd4:	mov    rax,QWORD PTR [rbp-0x18]
  407cd8:	mov    rax,QWORD PTR [rax+0x30]
  407cdc:	mov    edx,DWORD PTR [rbp-0x4]
  407cdf:	mov    DWORD PTR [rax+0x14],edx
  407ce2:	mov    eax,0x0
  407ce7:	leave  
  407ce8:	ret    

0000000000407ce9 <flatcc_builder_extend_vector@@Base>:
  407ce9:	endbr64 
  407ced:	push   rbp
  407cee:	mov    rbp,rsp
  407cf1:	sub    rsp,0x10
  407cf5:	mov    QWORD PTR [rbp-0x8],rdi
  407cf9:	mov    QWORD PTR [rbp-0x10],rsi
  407cfd:	mov    rax,QWORD PTR [rbp-0x8]
  407d01:	mov    rax,QWORD PTR [rax+0x30]
  407d05:	mov    edx,DWORD PTR [rax+0x18]
  407d08:	mov    rax,QWORD PTR [rbp-0x10]
  407d0c:	mov    ecx,eax
  407d0e:	mov    rax,QWORD PTR [rbp-0x8]
  407d12:	mov    esi,ecx
  407d14:	mov    rdi,rax
  407d17:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  407d1c:	test   eax,eax
  407d1e:	je     407d27 <flatcc_builder_extend_vector@@Base+0x3e>
  407d20:	mov    eax,0x0
  407d25:	jmp    407d47 <flatcc_builder_extend_vector@@Base+0x5e>
  407d27:	mov    rax,QWORD PTR [rbp-0x8]
  407d2b:	mov    rax,QWORD PTR [rax+0x30]
  407d2f:	mov    eax,DWORD PTR [rax+0x10]
  407d32:	mov    rdx,QWORD PTR [rbp-0x10]
  407d36:	imul   edx,eax
  407d39:	mov    rax,QWORD PTR [rbp-0x8]
  407d3d:	mov    esi,edx
  407d3f:	mov    rdi,rax
  407d42:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  407d47:	leave  
  407d48:	ret    

0000000000407d49 <flatcc_builder_vector_push@@Base>:
  407d49:	endbr64 
  407d4d:	push   rbp
  407d4e:	mov    rbp,rsp
  407d51:	sub    rsp,0x10
  407d55:	mov    QWORD PTR [rbp-0x8],rdi
  407d59:	mov    QWORD PTR [rbp-0x10],rsi
  407d5d:	mov    rax,QWORD PTR [rbp-0x8]
  407d61:	mov    rax,QWORD PTR [rax+0x30]
  407d65:	movzx  eax,WORD PTR [rax+0xe]
  407d69:	cmp    ax,0x4
  407d6d:	je     407d8e <flatcc_builder_vector_push@@Base+0x45>
  407d6f:	lea    rcx,[rip+0x510a]        # 40ce80 <flatcc_builder_padding_base@@Base+0x7c0>
  407d76:	mov    edx,0x38b
  407d7b:	lea    rsi,[rip+0x4b3e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407d82:	lea    rdi,[rip+0x4c7f]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  407d89:	call   403160 <__assert_fail@plt>
  407d8e:	mov    rax,QWORD PTR [rbp-0x8]
  407d92:	mov    rax,QWORD PTR [rax+0x30]
  407d96:	mov    edx,DWORD PTR [rax+0x14]
  407d99:	mov    rax,QWORD PTR [rbp-0x8]
  407d9d:	mov    rax,QWORD PTR [rax+0x30]
  407da1:	mov    eax,DWORD PTR [rax+0x18]
  407da4:	cmp    edx,eax
  407da6:	jbe    407de8 <flatcc_builder_vector_push@@Base+0x9f>
  407da8:	mov    rax,QWORD PTR [rbp-0x8]
  407dac:	mov    rax,QWORD PTR [rax+0x30]
  407db0:	mov    edx,DWORD PTR [rax+0x14]
  407db3:	mov    rax,QWORD PTR [rbp-0x8]
  407db7:	mov    rax,QWORD PTR [rax+0x30]
  407dbb:	mov    eax,DWORD PTR [rax+0x18]
  407dbe:	cmp    edx,eax
  407dc0:	jbe    407de1 <flatcc_builder_vector_push@@Base+0x98>
  407dc2:	lea    rcx,[rip+0x50b7]        # 40ce80 <flatcc_builder_padding_base@@Base+0x7c0>
  407dc9:	mov    edx,0x38c
  407dce:	lea    rsi,[rip+0x4aeb]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407dd5:	lea    rdi,[rip+0x4c5c]        # 40ca38 <flatcc_builder_padding_base@@Base+0x378>
  407ddc:	call   403160 <__assert_fail@plt>
  407de1:	mov    eax,0x0
  407de6:	jmp    407e1e <flatcc_builder_vector_push@@Base+0xd5>
  407de8:	mov    rax,QWORD PTR [rbp-0x8]
  407dec:	mov    rax,QWORD PTR [rax+0x30]
  407df0:	mov    edx,DWORD PTR [rax+0x14]
  407df3:	mov    rax,QWORD PTR [rbp-0x8]
  407df7:	mov    rax,QWORD PTR [rax+0x30]
  407dfb:	inc    edx
  407dfd:	mov    DWORD PTR [rax+0x14],edx
  407e00:	mov    rax,QWORD PTR [rbp-0x8]
  407e04:	mov    rax,QWORD PTR [rax+0x30]
  407e08:	mov    edx,DWORD PTR [rax+0x10]
  407e0b:	mov    rcx,QWORD PTR [rbp-0x10]
  407e0f:	mov    rax,QWORD PTR [rbp-0x8]
  407e13:	mov    rsi,rcx
  407e16:	mov    rdi,rax
  407e19:	call   405d86 <flatcc_builder_default_alloc@@Base+0x332>
  407e1e:	leave  
  407e1f:	ret    

0000000000407e20 <flatcc_builder_append_vector@@Base>:
  407e20:	endbr64 
  407e24:	push   rbp
  407e25:	mov    rbp,rsp
  407e28:	sub    rsp,0x20
  407e2c:	mov    QWORD PTR [rbp-0x8],rdi
  407e30:	mov    QWORD PTR [rbp-0x10],rsi
  407e34:	mov    QWORD PTR [rbp-0x18],rdx
  407e38:	mov    rax,QWORD PTR [rbp-0x8]
  407e3c:	mov    rax,QWORD PTR [rax+0x30]
  407e40:	movzx  eax,WORD PTR [rax+0xe]
  407e44:	cmp    ax,0x4
  407e48:	je     407e69 <flatcc_builder_append_vector@@Base+0x49>
  407e4a:	lea    rcx,[rip+0x504f]        # 40cea0 <flatcc_builder_padding_base@@Base+0x7e0>
  407e51:	mov    edx,0x393
  407e56:	lea    rsi,[rip+0x4a63]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407e5d:	lea    rdi,[rip+0x4ba4]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  407e64:	call   403160 <__assert_fail@plt>
  407e69:	mov    rax,QWORD PTR [rbp-0x8]
  407e6d:	mov    rax,QWORD PTR [rax+0x30]
  407e71:	mov    edx,DWORD PTR [rax+0x18]
  407e74:	mov    rax,QWORD PTR [rbp-0x18]
  407e78:	mov    ecx,eax
  407e7a:	mov    rax,QWORD PTR [rbp-0x8]
  407e7e:	mov    esi,ecx
  407e80:	mov    rdi,rax
  407e83:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  407e88:	test   eax,eax
  407e8a:	je     407e93 <flatcc_builder_append_vector@@Base+0x73>
  407e8c:	mov    eax,0x0
  407e91:	jmp    407eb8 <flatcc_builder_append_vector@@Base+0x98>
  407e93:	mov    rax,QWORD PTR [rbp-0x8]
  407e97:	mov    rax,QWORD PTR [rax+0x30]
  407e9b:	mov    eax,DWORD PTR [rax+0x10]
  407e9e:	mov    rdx,QWORD PTR [rbp-0x18]
  407ea2:	imul   edx,eax
  407ea5:	mov    rcx,QWORD PTR [rbp-0x10]
  407ea9:	mov    rax,QWORD PTR [rbp-0x8]
  407ead:	mov    rsi,rcx
  407eb0:	mov    rdi,rax
  407eb3:	call   405d86 <flatcc_builder_default_alloc@@Base+0x332>
  407eb8:	leave  
  407eb9:	ret    

0000000000407eba <flatcc_builder_extend_offset_vector@@Base>:
  407eba:	endbr64 
  407ebe:	push   rbp
  407ebf:	mov    rbp,rsp
  407ec2:	sub    rsp,0x10
  407ec6:	mov    QWORD PTR [rbp-0x8],rdi
  407eca:	mov    QWORD PTR [rbp-0x10],rsi
  407ece:	mov    rax,QWORD PTR [rbp-0x10]
  407ed2:	mov    ecx,eax
  407ed4:	mov    rax,QWORD PTR [rbp-0x8]
  407ed8:	mov    edx,0x3fffffff
  407edd:	mov    esi,ecx
  407edf:	mov    rdi,rax
  407ee2:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  407ee7:	test   eax,eax
  407ee9:	je     407ef2 <flatcc_builder_extend_offset_vector@@Base+0x38>
  407eeb:	mov    eax,0x0
  407ef0:	jmp    407f0b <flatcc_builder_extend_offset_vector@@Base+0x51>
  407ef2:	mov    rax,QWORD PTR [rbp-0x10]
  407ef6:	lea    edx,[rax*4+0x0]
  407efd:	mov    rax,QWORD PTR [rbp-0x8]
  407f01:	mov    esi,edx
  407f03:	mov    rdi,rax
  407f06:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  407f0b:	leave  
  407f0c:	ret    

0000000000407f0d <flatcc_builder_offset_vector_push@@Base>:
  407f0d:	endbr64 
  407f11:	push   rbp
  407f12:	mov    rbp,rsp
  407f15:	sub    rsp,0x20
  407f19:	mov    QWORD PTR [rbp-0x18],rdi
  407f1d:	mov    DWORD PTR [rbp-0x1c],esi
  407f20:	mov    rax,QWORD PTR [rbp-0x18]
  407f24:	mov    rax,QWORD PTR [rax+0x30]
  407f28:	movzx  eax,WORD PTR [rax+0xe]
  407f2c:	cmp    ax,0x5
  407f30:	je     407f51 <flatcc_builder_offset_vector_push@@Base+0x44>
  407f32:	lea    rcx,[rip+0x4f87]        # 40cec0 <flatcc_builder_padding_base@@Base+0x800>
  407f39:	mov    edx,0x3a6
  407f3e:	lea    rsi,[rip+0x497b]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407f45:	lea    rdi,[rip+0x4b2c]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  407f4c:	call   403160 <__assert_fail@plt>
  407f51:	mov    rax,QWORD PTR [rbp-0x18]
  407f55:	mov    rax,QWORD PTR [rax+0x30]
  407f59:	mov    eax,DWORD PTR [rax+0x14]
  407f5c:	cmp    eax,0x3fffffff
  407f61:	jne    407f6a <flatcc_builder_offset_vector_push@@Base+0x5d>
  407f63:	mov    eax,0x0
  407f68:	jmp    407fb2 <flatcc_builder_offset_vector_push@@Base+0xa5>
  407f6a:	mov    rax,QWORD PTR [rbp-0x18]
  407f6e:	mov    rax,QWORD PTR [rax+0x30]
  407f72:	mov    edx,DWORD PTR [rax+0x14]
  407f75:	mov    rax,QWORD PTR [rbp-0x18]
  407f79:	mov    rax,QWORD PTR [rax+0x30]
  407f7d:	inc    edx
  407f7f:	mov    DWORD PTR [rax+0x14],edx
  407f82:	mov    rax,QWORD PTR [rbp-0x18]
  407f86:	mov    esi,0x4
  407f8b:	mov    rdi,rax
  407f8e:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  407f93:	mov    QWORD PTR [rbp-0x8],rax
  407f97:	cmp    QWORD PTR [rbp-0x8],0x0
  407f9c:	jne    407fa5 <flatcc_builder_offset_vector_push@@Base+0x98>
  407f9e:	mov    eax,0x0
  407fa3:	jmp    407fb2 <flatcc_builder_offset_vector_push@@Base+0xa5>
  407fa5:	mov    rax,QWORD PTR [rbp-0x8]
  407fa9:	mov    edx,DWORD PTR [rbp-0x1c]
  407fac:	mov    DWORD PTR [rax],edx
  407fae:	mov    rax,QWORD PTR [rbp-0x8]
  407fb2:	leave  
  407fb3:	ret    

0000000000407fb4 <flatcc_builder_append_offset_vector@@Base>:
  407fb4:	endbr64 
  407fb8:	push   rbp
  407fb9:	mov    rbp,rsp
  407fbc:	sub    rsp,0x20
  407fc0:	mov    QWORD PTR [rbp-0x8],rdi
  407fc4:	mov    QWORD PTR [rbp-0x10],rsi
  407fc8:	mov    QWORD PTR [rbp-0x18],rdx
  407fcc:	mov    rax,QWORD PTR [rbp-0x8]
  407fd0:	mov    rax,QWORD PTR [rax+0x30]
  407fd4:	movzx  eax,WORD PTR [rax+0xe]
  407fd8:	cmp    ax,0x5
  407fdc:	je     407ffd <flatcc_builder_append_offset_vector@@Base+0x49>
  407fde:	lea    rcx,[rip+0x4f1b]        # 40cf00 <flatcc_builder_padding_base@@Base+0x840>
  407fe5:	mov    edx,0x3b4
  407fea:	lea    rsi,[rip+0x48cf]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407ff1:	lea    rdi,[rip+0x4a80]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  407ff8:	call   403160 <__assert_fail@plt>
  407ffd:	mov    rax,QWORD PTR [rbp-0x18]
  408001:	mov    ecx,eax
  408003:	mov    rax,QWORD PTR [rbp-0x8]
  408007:	mov    edx,0x3fffffff
  40800c:	mov    esi,ecx
  40800e:	mov    rdi,rax
  408011:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  408016:	test   eax,eax
  408018:	je     408021 <flatcc_builder_append_offset_vector@@Base+0x6d>
  40801a:	mov    eax,0x0
  40801f:	jmp    40803f <flatcc_builder_append_offset_vector@@Base+0x8b>
  408021:	mov    rax,QWORD PTR [rbp-0x18]
  408025:	lea    edx,[rax*4+0x0]
  40802c:	mov    rcx,QWORD PTR [rbp-0x10]
  408030:	mov    rax,QWORD PTR [rbp-0x8]
  408034:	mov    rsi,rcx
  408037:	mov    rdi,rax
  40803a:	call   405d86 <flatcc_builder_default_alloc@@Base+0x332>
  40803f:	leave  
  408040:	ret    

0000000000408041 <flatcc_builder_extend_string@@Base>:
  408041:	endbr64 
  408045:	push   rbp
  408046:	mov    rbp,rsp
  408049:	sub    rsp,0x10
  40804d:	mov    QWORD PTR [rbp-0x8],rdi
  408051:	mov    QWORD PTR [rbp-0x10],rsi
  408055:	mov    rax,QWORD PTR [rbp-0x8]
  408059:	mov    rax,QWORD PTR [rax+0x30]
  40805d:	movzx  eax,WORD PTR [rax+0xe]
  408061:	cmp    ax,0x6
  408065:	je     408086 <flatcc_builder_extend_string@@Base+0x45>
  408067:	lea    rcx,[rip+0x4ec2]        # 40cf30 <flatcc_builder_padding_base@@Base+0x870>
  40806e:	mov    edx,0x3bd
  408073:	lea    rsi,[rip+0x4846]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40807a:	lea    rdi,[rip+0x4a2f]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  408081:	call   403160 <__assert_fail@plt>
  408086:	mov    rax,QWORD PTR [rbp-0x10]
  40808a:	mov    ecx,eax
  40808c:	mov    rax,QWORD PTR [rbp-0x8]
  408090:	mov    edx,0xffffffff
  408095:	mov    esi,ecx
  408097:	mov    rdi,rax
  40809a:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  40809f:	test   eax,eax
  4080a1:	je     4080aa <flatcc_builder_extend_string@@Base+0x69>
  4080a3:	mov    eax,0x0
  4080a8:	jmp    4080be <flatcc_builder_extend_string@@Base+0x7d>
  4080aa:	mov    rax,QWORD PTR [rbp-0x10]
  4080ae:	mov    edx,eax
  4080b0:	mov    rax,QWORD PTR [rbp-0x8]
  4080b4:	mov    esi,edx
  4080b6:	mov    rdi,rax
  4080b9:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  4080be:	leave  
  4080bf:	ret    

00000000004080c0 <flatcc_builder_append_string@@Base>:
  4080c0:	endbr64 
  4080c4:	push   rbp
  4080c5:	mov    rbp,rsp
  4080c8:	sub    rsp,0x20
  4080cc:	mov    QWORD PTR [rbp-0x8],rdi
  4080d0:	mov    QWORD PTR [rbp-0x10],rsi
  4080d4:	mov    QWORD PTR [rbp-0x18],rdx
  4080d8:	mov    rax,QWORD PTR [rbp-0x8]
  4080dc:	mov    rax,QWORD PTR [rax+0x30]
  4080e0:	movzx  eax,WORD PTR [rax+0xe]
  4080e4:	cmp    ax,0x6
  4080e8:	je     408109 <flatcc_builder_append_string@@Base+0x49>
  4080ea:	lea    rcx,[rip+0x4e5f]        # 40cf50 <flatcc_builder_padding_base@@Base+0x890>
  4080f1:	mov    edx,0x3c6
  4080f6:	lea    rsi,[rip+0x47c3]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4080fd:	lea    rdi,[rip+0x49ac]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  408104:	call   403160 <__assert_fail@plt>
  408109:	mov    rax,QWORD PTR [rbp-0x18]
  40810d:	mov    ecx,eax
  40810f:	mov    rax,QWORD PTR [rbp-0x8]
  408113:	mov    edx,0xffffffff
  408118:	mov    esi,ecx
  40811a:	mov    rdi,rax
  40811d:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  408122:	test   eax,eax
  408124:	je     40812d <flatcc_builder_append_string@@Base+0x6d>
  408126:	mov    eax,0x0
  40812b:	jmp    408146 <flatcc_builder_append_string@@Base+0x86>
  40812d:	mov    rax,QWORD PTR [rbp-0x18]
  408131:	mov    edx,eax
  408133:	mov    rcx,QWORD PTR [rbp-0x10]
  408137:	mov    rax,QWORD PTR [rbp-0x8]
  40813b:	mov    rsi,rcx
  40813e:	mov    rdi,rax
  408141:	call   405d86 <flatcc_builder_default_alloc@@Base+0x332>
  408146:	leave  
  408147:	ret    

0000000000408148 <flatcc_builder_append_string_str@@Base>:
  408148:	endbr64 
  40814c:	push   rbp
  40814d:	mov    rbp,rsp
  408150:	sub    rsp,0x10
  408154:	mov    QWORD PTR [rbp-0x8],rdi
  408158:	mov    QWORD PTR [rbp-0x10],rsi
  40815c:	mov    rax,QWORD PTR [rbp-0x10]
  408160:	mov    rdi,rax
  408163:	call   403140 <strlen@plt>
  408168:	mov    rdx,rax
  40816b:	mov    rcx,QWORD PTR [rbp-0x10]
  40816f:	mov    rax,QWORD PTR [rbp-0x8]
  408173:	mov    rsi,rcx
  408176:	mov    rdi,rax
  408179:	call   4080c0 <flatcc_builder_append_string@@Base>
  40817e:	leave  
  40817f:	ret    

0000000000408180 <flatcc_builder_append_string_strn@@Base>:
  408180:	endbr64 
  408184:	push   rbp
  408185:	mov    rbp,rsp
  408188:	sub    rsp,0x20
  40818c:	mov    QWORD PTR [rbp-0x8],rdi
  408190:	mov    QWORD PTR [rbp-0x10],rsi
  408194:	mov    QWORD PTR [rbp-0x18],rdx
  408198:	mov    rdx,QWORD PTR [rbp-0x18]
  40819c:	mov    rax,QWORD PTR [rbp-0x10]
  4081a0:	mov    rsi,rdx
  4081a3:	mov    rdi,rax
  4081a6:	call   405a14 <main@@Base+0x2e6>
  4081ab:	mov    rdx,rax
  4081ae:	mov    rcx,QWORD PTR [rbp-0x10]
  4081b2:	mov    rax,QWORD PTR [rbp-0x8]
  4081b6:	mov    rsi,rcx
  4081b9:	mov    rdi,rax
  4081bc:	call   4080c0 <flatcc_builder_append_string@@Base>
  4081c1:	leave  
  4081c2:	ret    

00000000004081c3 <flatcc_builder_truncate_vector@@Base>:
  4081c3:	endbr64 
  4081c7:	push   rbp
  4081c8:	mov    rbp,rsp
  4081cb:	sub    rsp,0x10
  4081cf:	mov    QWORD PTR [rbp-0x8],rdi
  4081d3:	mov    QWORD PTR [rbp-0x10],rsi
  4081d7:	mov    rax,QWORD PTR [rbp-0x8]
  4081db:	mov    rax,QWORD PTR [rax+0x30]
  4081df:	movzx  eax,WORD PTR [rax+0xe]
  4081e3:	cmp    ax,0x4
  4081e7:	je     408208 <flatcc_builder_truncate_vector@@Base+0x45>
  4081e9:	lea    rcx,[rip+0x4d80]        # 40cf70 <flatcc_builder_padding_base@@Base+0x8b0>
  4081f0:	mov    edx,0x3d9
  4081f5:	lea    rsi,[rip+0x46c4]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4081fc:	lea    rdi,[rip+0x4805]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  408203:	call   403160 <__assert_fail@plt>
  408208:	mov    rax,QWORD PTR [rbp-0x8]
  40820c:	mov    rax,QWORD PTR [rax+0x30]
  408210:	mov    eax,DWORD PTR [rax+0x14]
  408213:	mov    eax,eax
  408215:	cmp    QWORD PTR [rbp-0x10],rax
  408219:	jbe    408254 <flatcc_builder_truncate_vector@@Base+0x91>
  40821b:	mov    rax,QWORD PTR [rbp-0x8]
  40821f:	mov    rax,QWORD PTR [rax+0x30]
  408223:	mov    eax,DWORD PTR [rax+0x14]
  408226:	mov    eax,eax
  408228:	cmp    QWORD PTR [rbp-0x10],rax
  40822c:	jbe    40824d <flatcc_builder_truncate_vector@@Base+0x8a>
  40822e:	lea    rcx,[rip+0x4d3b]        # 40cf70 <flatcc_builder_padding_base@@Base+0x8b0>
  408235:	mov    edx,0x3da
  40823a:	lea    rsi,[rip+0x467f]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408241:	lea    rdi,[rip+0x4898]        # 40cae0 <flatcc_builder_padding_base@@Base+0x420>
  408248:	call   403160 <__assert_fail@plt>
  40824d:	mov    eax,0xffffffff
  408252:	jmp    408297 <flatcc_builder_truncate_vector@@Base+0xd4>
  408254:	mov    rax,QWORD PTR [rbp-0x8]
  408258:	mov    rax,QWORD PTR [rax+0x30]
  40825c:	mov    edx,DWORD PTR [rax+0x14]
  40825f:	mov    rax,QWORD PTR [rbp-0x10]
  408263:	mov    ecx,eax
  408265:	mov    rax,QWORD PTR [rbp-0x8]
  408269:	mov    rax,QWORD PTR [rax+0x30]
  40826d:	sub    edx,ecx
  40826f:	mov    DWORD PTR [rax+0x14],edx
  408272:	mov    rax,QWORD PTR [rbp-0x8]
  408276:	mov    rax,QWORD PTR [rax+0x30]
  40827a:	mov    eax,DWORD PTR [rax+0x10]
  40827d:	mov    rdx,QWORD PTR [rbp-0x10]
  408281:	imul   edx,eax
  408284:	mov    rax,QWORD PTR [rbp-0x8]
  408288:	mov    esi,edx
  40828a:	mov    rdi,rax
  40828d:	call   405d3a <flatcc_builder_default_alloc@@Base+0x2e6>
  408292:	mov    eax,0x0
  408297:	leave  
  408298:	ret    

0000000000408299 <flatcc_builder_truncate_offset_vector@@Base>:
  408299:	endbr64 
  40829d:	push   rbp
  40829e:	mov    rbp,rsp
  4082a1:	sub    rsp,0x10
  4082a5:	mov    QWORD PTR [rbp-0x8],rdi
  4082a9:	mov    QWORD PTR [rbp-0x10],rsi
  4082ad:	mov    rax,QWORD PTR [rbp-0x8]
  4082b1:	mov    rax,QWORD PTR [rax+0x30]
  4082b5:	movzx  eax,WORD PTR [rax+0xe]
  4082b9:	cmp    ax,0x5
  4082bd:	je     4082de <flatcc_builder_truncate_offset_vector@@Base+0x45>
  4082bf:	lea    rcx,[rip+0x4cda]        # 40cfa0 <flatcc_builder_padding_base@@Base+0x8e0>
  4082c6:	mov    edx,0x3e2
  4082cb:	lea    rsi,[rip+0x45ee]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4082d2:	lea    rdi,[rip+0x479f]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  4082d9:	call   403160 <__assert_fail@plt>
  4082de:	mov    rax,QWORD PTR [rbp-0x8]
  4082e2:	mov    rax,QWORD PTR [rax+0x30]
  4082e6:	mov    eax,DWORD PTR [rax+0x14]
  4082e9:	mov    rdx,QWORD PTR [rbp-0x10]
  4082ed:	cmp    eax,edx
  4082ef:	jae    40832a <flatcc_builder_truncate_offset_vector@@Base+0x91>
  4082f1:	mov    rax,QWORD PTR [rbp-0x8]
  4082f5:	mov    rax,QWORD PTR [rax+0x30]
  4082f9:	mov    eax,DWORD PTR [rax+0x14]
  4082fc:	mov    rdx,QWORD PTR [rbp-0x10]
  408300:	cmp    eax,edx
  408302:	jae    408323 <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  408304:	lea    rcx,[rip+0x4c95]        # 40cfa0 <flatcc_builder_padding_base@@Base+0x8e0>
  40830b:	mov    edx,0x3e3
  408310:	lea    rsi,[rip+0x45a9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408317:	lea    rdi,[rip+0x47ea]        # 40cb08 <flatcc_builder_padding_base@@Base+0x448>
  40831e:	call   403160 <__assert_fail@plt>
  408323:	mov    eax,0xffffffff
  408328:	jmp    40836d <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  40832a:	mov    rax,QWORD PTR [rbp-0x8]
  40832e:	mov    rax,QWORD PTR [rax+0x30]
  408332:	mov    edx,DWORD PTR [rax+0x14]
  408335:	mov    rax,QWORD PTR [rbp-0x10]
  408339:	mov    ecx,eax
  40833b:	mov    rax,QWORD PTR [rbp-0x8]
  40833f:	mov    rax,QWORD PTR [rax+0x30]
  408343:	sub    edx,ecx
  408345:	mov    DWORD PTR [rax+0x14],edx
  408348:	mov    rax,QWORD PTR [rbp-0x8]
  40834c:	mov    rax,QWORD PTR [rax+0x30]
  408350:	mov    eax,DWORD PTR [rax+0x10]
  408353:	mov    rdx,QWORD PTR [rbp-0x10]
  408357:	imul   edx,eax
  40835a:	mov    rax,QWORD PTR [rbp-0x8]
  40835e:	mov    esi,edx
  408360:	mov    rdi,rax
  408363:	call   405d3a <flatcc_builder_default_alloc@@Base+0x2e6>
  408368:	mov    eax,0x0
  40836d:	leave  
  40836e:	ret    

000000000040836f <flatcc_builder_truncate_string@@Base>:
  40836f:	endbr64 
  408373:	push   rbp
  408374:	mov    rbp,rsp
  408377:	sub    rsp,0x10
  40837b:	mov    QWORD PTR [rbp-0x8],rdi
  40837f:	mov    QWORD PTR [rbp-0x10],rsi
  408383:	mov    rax,QWORD PTR [rbp-0x8]
  408387:	mov    rax,QWORD PTR [rax+0x30]
  40838b:	movzx  eax,WORD PTR [rax+0xe]
  40838f:	cmp    ax,0x6
  408393:	je     4083b4 <flatcc_builder_truncate_string@@Base+0x45>
  408395:	lea    rcx,[rip+0x4c34]        # 40cfd0 <flatcc_builder_padding_base@@Base+0x910>
  40839c:	mov    edx,0x3eb
  4083a1:	lea    rsi,[rip+0x4518]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4083a8:	lea    rdi,[rip+0x4701]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  4083af:	call   403160 <__assert_fail@plt>
  4083b4:	mov    rax,QWORD PTR [rbp-0x8]
  4083b8:	mov    rax,QWORD PTR [rax+0x30]
  4083bc:	mov    eax,DWORD PTR [rax+0x14]
  4083bf:	mov    eax,eax
  4083c1:	cmp    QWORD PTR [rbp-0x10],rax
  4083c5:	jbe    408400 <flatcc_builder_truncate_string@@Base+0x91>
  4083c7:	mov    rax,QWORD PTR [rbp-0x8]
  4083cb:	mov    rax,QWORD PTR [rax+0x30]
  4083cf:	mov    eax,DWORD PTR [rax+0x14]
  4083d2:	mov    eax,eax
  4083d4:	cmp    QWORD PTR [rbp-0x10],rax
  4083d8:	jbe    4083f9 <flatcc_builder_truncate_string@@Base+0x8a>
  4083da:	lea    rcx,[rip+0x4bef]        # 40cfd0 <flatcc_builder_padding_base@@Base+0x910>
  4083e1:	mov    edx,0x3ec
  4083e6:	lea    rsi,[rip+0x44d3]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4083ed:	lea    rdi,[rip+0x4754]        # 40cb48 <flatcc_builder_padding_base@@Base+0x488>
  4083f4:	call   403160 <__assert_fail@plt>
  4083f9:	mov    eax,0xffffffff
  4083fe:	jmp    408437 <flatcc_builder_truncate_string@@Base+0xc8>
  408400:	mov    rax,QWORD PTR [rbp-0x8]
  408404:	mov    rax,QWORD PTR [rax+0x30]
  408408:	mov    edx,DWORD PTR [rax+0x14]
  40840b:	mov    rax,QWORD PTR [rbp-0x10]
  40840f:	mov    ecx,eax
  408411:	mov    rax,QWORD PTR [rbp-0x8]
  408415:	mov    rax,QWORD PTR [rax+0x30]
  408419:	sub    edx,ecx
  40841b:	mov    DWORD PTR [rax+0x14],edx
  40841e:	mov    rax,QWORD PTR [rbp-0x10]
  408422:	mov    edx,eax
  408424:	mov    rax,QWORD PTR [rbp-0x8]
  408428:	mov    esi,edx
  40842a:	mov    rdi,rax
  40842d:	call   405d3a <flatcc_builder_default_alloc@@Base+0x2e6>
  408432:	mov    eax,0x0
  408437:	leave  
  408438:	ret    

0000000000408439 <flatcc_builder_start_vector@@Base>:
  408439:	endbr64 
  40843d:	push   rbp
  40843e:	mov    rbp,rsp
  408441:	sub    rsp,0x20
  408445:	mov    QWORD PTR [rbp-0x8],rdi
  408449:	mov    QWORD PTR [rbp-0x10],rsi
  40844d:	mov    eax,edx
  40844f:	mov    QWORD PTR [rbp-0x20],rcx
  408453:	mov    WORD PTR [rbp-0x14],ax
  408457:	lea    rax,[rbp-0x14]
  40845b:	mov    esi,0x4
  408460:	mov    rdi,rax
  408463:	call   4066f1 <flatcc_builder_clear@@Base+0xca>
  408468:	movzx  eax,WORD PTR [rbp-0x14]
  40846c:	movzx  edx,ax
  40846f:	mov    rax,QWORD PTR [rbp-0x8]
  408473:	mov    esi,edx
  408475:	mov    rdi,rax
  408478:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40847d:	test   eax,eax
  40847f:	je     408488 <flatcc_builder_start_vector@@Base+0x4f>
  408481:	mov    eax,0xffffffff
  408486:	jmp    4084d9 <flatcc_builder_start_vector@@Base+0xa0>
  408488:	mov    rax,QWORD PTR [rbp-0x8]
  40848c:	mov    rax,QWORD PTR [rax+0x30]
  408490:	mov    rdx,QWORD PTR [rbp-0x10]
  408494:	mov    DWORD PTR [rax+0x10],edx
  408497:	mov    rax,QWORD PTR [rbp-0x8]
  40849b:	mov    rax,QWORD PTR [rax+0x30]
  40849f:	mov    DWORD PTR [rax+0x14],0x0
  4084a6:	mov    rax,QWORD PTR [rbp-0x8]
  4084aa:	mov    rax,QWORD PTR [rax+0x30]
  4084ae:	mov    rdx,QWORD PTR [rbp-0x20]
  4084b2:	mov    DWORD PTR [rax+0x18],edx
  4084b5:	mov    rax,QWORD PTR [rbp-0x8]
  4084b9:	mov    rax,QWORD PTR [rax+0x30]
  4084bd:	mov    WORD PTR [rax+0xe],0x4
  4084c3:	mov    rax,QWORD PTR [rbp-0x8]
  4084c7:	mov    esi,0xfffffffc
  4084cc:	mov    rdi,rax
  4084cf:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  4084d4:	mov    eax,0x0
  4084d9:	leave  
  4084da:	ret    

00000000004084db <flatcc_builder_start_offset_vector@@Base>:
  4084db:	endbr64 
  4084df:	push   rbp
  4084e0:	mov    rbp,rsp
  4084e3:	sub    rsp,0x10
  4084e7:	mov    QWORD PTR [rbp-0x8],rdi
  4084eb:	mov    rax,QWORD PTR [rbp-0x8]
  4084ef:	mov    esi,0x4
  4084f4:	mov    rdi,rax
  4084f7:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4084fc:	test   eax,eax
  4084fe:	je     408507 <flatcc_builder_start_offset_vector@@Base+0x2c>
  408500:	mov    eax,0xffffffff
  408505:	jmp    408549 <flatcc_builder_start_offset_vector@@Base+0x6e>
  408507:	mov    rax,QWORD PTR [rbp-0x8]
  40850b:	mov    rax,QWORD PTR [rax+0x30]
  40850f:	mov    DWORD PTR [rax+0x10],0x4
  408516:	mov    rax,QWORD PTR [rbp-0x8]
  40851a:	mov    rax,QWORD PTR [rax+0x30]
  40851e:	mov    DWORD PTR [rax+0x14],0x0
  408525:	mov    rax,QWORD PTR [rbp-0x8]
  408529:	mov    rax,QWORD PTR [rax+0x30]
  40852d:	mov    WORD PTR [rax+0xe],0x5
  408533:	mov    rax,QWORD PTR [rbp-0x8]
  408537:	mov    esi,0xfffffffc
  40853c:	mov    rdi,rax
  40853f:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  408544:	mov    eax,0x0
  408549:	leave  
  40854a:	ret    

000000000040854b <flatcc_builder_create_offset_vector@@Base>:
  40854b:	endbr64 
  40854f:	push   rbp
  408550:	mov    rbp,rsp
  408553:	sub    rsp,0x30
  408557:	mov    QWORD PTR [rbp-0x18],rdi
  40855b:	mov    QWORD PTR [rbp-0x20],rsi
  40855f:	mov    QWORD PTR [rbp-0x28],rdx
  408563:	mov    rax,QWORD PTR [rbp-0x18]
  408567:	mov    rdi,rax
  40856a:	call   4084db <flatcc_builder_start_offset_vector@@Base>
  40856f:	test   eax,eax
  408571:	je     40857a <flatcc_builder_create_offset_vector@@Base+0x2f>
  408573:	mov    eax,0x0
  408578:	jmp    4085ca <flatcc_builder_create_offset_vector@@Base+0x7f>
  40857a:	mov    rdx,QWORD PTR [rbp-0x28]
  40857e:	mov    rax,QWORD PTR [rbp-0x18]
  408582:	mov    rsi,rdx
  408585:	mov    rdi,rax
  408588:	call   407eba <flatcc_builder_extend_offset_vector@@Base>
  40858d:	mov    QWORD PTR [rbp-0x8],rax
  408591:	cmp    QWORD PTR [rbp-0x8],0x0
  408596:	jne    40859f <flatcc_builder_create_offset_vector@@Base+0x54>
  408598:	mov    eax,0x0
  40859d:	jmp    4085ca <flatcc_builder_create_offset_vector@@Base+0x7f>
  40859f:	mov    rax,QWORD PTR [rbp-0x28]
  4085a3:	lea    rdx,[rax*4+0x0]
  4085ab:	mov    rcx,QWORD PTR [rbp-0x20]
  4085af:	mov    rax,QWORD PTR [rbp-0x8]
  4085b3:	mov    rsi,rcx
  4085b6:	mov    rdi,rax
  4085b9:	call   4031b0 <memcpy@plt>
  4085be:	mov    rax,QWORD PTR [rbp-0x18]
  4085c2:	mov    rdi,rax
  4085c5:	call   409ad8 <flatcc_builder_end_offset_vector@@Base>
  4085ca:	leave  
  4085cb:	ret    

00000000004085cc <flatcc_builder_start_string@@Base>:
  4085cc:	endbr64 
  4085d0:	push   rbp
  4085d1:	mov    rbp,rsp
  4085d4:	sub    rsp,0x10
  4085d8:	mov    QWORD PTR [rbp-0x8],rdi
  4085dc:	mov    rax,QWORD PTR [rbp-0x8]
  4085e0:	mov    esi,0x1
  4085e5:	mov    rdi,rax
  4085e8:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4085ed:	test   eax,eax
  4085ef:	je     4085f8 <flatcc_builder_start_string@@Base+0x2c>
  4085f1:	mov    eax,0xffffffff
  4085f6:	jmp    40863a <flatcc_builder_start_string@@Base+0x6e>
  4085f8:	mov    rax,QWORD PTR [rbp-0x8]
  4085fc:	mov    rax,QWORD PTR [rax+0x30]
  408600:	mov    DWORD PTR [rax+0x10],0x1
  408607:	mov    rax,QWORD PTR [rbp-0x8]
  40860b:	mov    rax,QWORD PTR [rax+0x30]
  40860f:	mov    DWORD PTR [rax+0x14],0x0
  408616:	mov    rax,QWORD PTR [rbp-0x8]
  40861a:	mov    rax,QWORD PTR [rax+0x30]
  40861e:	mov    WORD PTR [rax+0xe],0x6
  408624:	mov    rax,QWORD PTR [rbp-0x8]
  408628:	mov    esi,0xfffffffc
  40862d:	mov    rdi,rax
  408630:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  408635:	mov    eax,0x0
  40863a:	leave  
  40863b:	ret    

000000000040863c <flatcc_builder_reserve_table@@Base>:
  40863c:	endbr64 
  408640:	push   rbp
  408641:	mov    rbp,rsp
  408644:	sub    rsp,0x10
  408648:	mov    QWORD PTR [rbp-0x8],rdi
  40864c:	mov    DWORD PTR [rbp-0xc],esi
  40864f:	cmp    DWORD PTR [rbp-0xc],0x0
  408653:	jns    408674 <flatcc_builder_reserve_table@@Base+0x38>
  408655:	lea    rcx,[rip+0x4994]        # 40cff0 <flatcc_builder_padding_base@@Base+0x930>
  40865c:	mov    edx,0x429
  408661:	lea    rsi,[rip+0x4258]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408668:	lea    rdi,[rip+0x44fb]        # 40cb6a <flatcc_builder_padding_base@@Base+0x4aa>
  40866f:	call   403160 <__assert_fail@plt>
  408674:	mov    edx,DWORD PTR [rbp-0xc]
  408677:	mov    rax,QWORD PTR [rbp-0x8]
  40867b:	mov    esi,edx
  40867d:	mov    rdi,rax
  408680:	call   40601b <flatcc_builder_default_alloc@@Base+0x5c7>
  408685:	leave  
  408686:	ret    

0000000000408687 <flatcc_builder_start_table@@Base>:
  408687:	endbr64 
  40868b:	push   rbp
  40868c:	mov    rbp,rsp
  40868f:	sub    rsp,0x10
  408693:	mov    QWORD PTR [rbp-0x8],rdi
  408697:	mov    DWORD PTR [rbp-0xc],esi
  40869a:	mov    rax,QWORD PTR [rbp-0x8]
  40869e:	mov    esi,0x4
  4086a3:	mov    rdi,rax
  4086a6:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4086ab:	test   eax,eax
  4086ad:	je     4086b9 <flatcc_builder_start_table@@Base+0x32>
  4086af:	mov    eax,0xffffffff
  4086b4:	jmp    408783 <flatcc_builder_start_table@@Base+0xfc>
  4086b9:	mov    rax,QWORD PTR [rbp-0x8]
  4086bd:	mov    rax,QWORD PTR [rax+0x8]
  4086c1:	mov    rdx,rax
  4086c4:	mov    rax,QWORD PTR [rbp-0x8]
  4086c8:	mov    rax,QWORD PTR [rax+0x58]
  4086cc:	sub    rdx,rax
  4086cf:	mov    rax,QWORD PTR [rbp-0x8]
  4086d3:	mov    rax,QWORD PTR [rax+0x30]
  4086d7:	mov    DWORD PTR [rax+0x10],edx
  4086da:	mov    rax,QWORD PTR [rbp-0x8]
  4086de:	mov    rax,QWORD PTR [rax]
  4086e1:	mov    rdx,rax
  4086e4:	mov    rax,QWORD PTR [rbp-0x8]
  4086e8:	mov    rax,QWORD PTR [rax+0x88]
  4086ef:	sub    rdx,rax
  4086f2:	mov    rax,QWORD PTR [rbp-0x8]
  4086f6:	mov    rax,QWORD PTR [rax+0x30]
  4086fa:	mov    DWORD PTR [rax+0x14],edx
  4086fd:	mov    rax,QWORD PTR [rbp-0x8]
  408701:	mov    rax,QWORD PTR [rax+0x30]
  408705:	mov    rdx,QWORD PTR [rbp-0x8]
  408709:	mov    edx,DWORD PTR [rdx+0x14]
  40870c:	mov    DWORD PTR [rax+0x18],edx
  40870f:	mov    rax,QWORD PTR [rbp-0x8]
  408713:	mov    rdx,QWORD PTR [rax+0x30]
  408717:	mov    rax,QWORD PTR [rbp-0x8]
  40871b:	movzx  eax,WORD PTR [rax+0x10]
  40871f:	mov    WORD PTR [rdx+0x1c],ax
  408723:	mov    rax,QWORD PTR [rbp-0x8]
  408727:	mov    DWORD PTR [rax+0x14],0x0
  40872e:	mov    rax,QWORD PTR [rbp-0x8]
  408732:	mov    DWORD PTR [rax+0x14],0x2f693b52
  408739:	mov    rax,QWORD PTR [rbp-0x8]
  40873d:	mov    WORD PTR [rax+0x10],0x0
  408743:	mov    rax,QWORD PTR [rbp-0x8]
  408747:	mov    rax,QWORD PTR [rax+0x30]
  40874b:	mov    WORD PTR [rax+0xe],0x3
  408751:	mov    edx,DWORD PTR [rbp-0xc]
  408754:	mov    rax,QWORD PTR [rbp-0x8]
  408758:	mov    esi,edx
  40875a:	mov    rdi,rax
  40875d:	call   40601b <flatcc_builder_default_alloc@@Base+0x5c7>
  408762:	test   eax,eax
  408764:	je     40876d <flatcc_builder_start_table@@Base+0xe6>
  408766:	mov    eax,0xffffffff
  40876b:	jmp    408783 <flatcc_builder_start_table@@Base+0xfc>
  40876d:	mov    rax,QWORD PTR [rbp-0x8]
  408771:	mov    esi,0xfffc
  408776:	mov    rdi,rax
  408779:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  40877e:	mov    eax,0x0
  408783:	leave  
  408784:	ret    

0000000000408785 <flatcc_builder_create_vtable@@Base>:
  408785:	endbr64 
  408789:	push   rbp
  40878a:	mov    rbp,rsp
  40878d:	sub    rsp,0xd0
  408794:	mov    QWORD PTR [rbp-0xb8],rdi
  40879b:	mov    QWORD PTR [rbp-0xc0],rsi
  4087a2:	mov    eax,edx
  4087a4:	mov    WORD PTR [rbp-0xc4],ax
  4087ab:	mov    rax,QWORD PTR fs:0x28
  4087b4:	mov    QWORD PTR [rbp-0x8],rax
  4087b8:	xor    eax,eax
  4087ba:	mov    QWORD PTR [rbp-0xa0],0x0
  4087c5:	mov    DWORD PTR [rbp-0x98],0x0
  4087cf:	cmp    WORD PTR [rbp-0xc4],0x0
  4087d7:	je     408840 <flatcc_builder_create_vtable@@Base+0xbb>
  4087d9:	mov    rdx,QWORD PTR [rbp-0xa0]
  4087e0:	movzx  eax,WORD PTR [rbp-0xc4]
  4087e7:	add    rax,rdx
  4087ea:	mov    QWORD PTR [rbp-0xa0],rax
  4087f1:	mov    eax,DWORD PTR [rbp-0x98]
  4087f7:	cdqe   
  4087f9:	shl    rax,0x4
  4087fd:	add    rax,rbp
  408800:	lea    rdx,[rax-0x90]
  408807:	mov    rax,QWORD PTR [rbp-0xc0]
  40880e:	mov    QWORD PTR [rdx],rax
  408811:	mov    edx,DWORD PTR [rbp-0x98]
  408817:	movzx  eax,WORD PTR [rbp-0xc4]
  40881e:	movsxd rdx,edx
  408821:	shl    rdx,0x4
  408825:	add    rdx,rbp
  408828:	sub    rdx,0x88
  40882f:	mov    QWORD PTR [rdx],rax
  408832:	mov    eax,DWORD PTR [rbp-0x98]
  408838:	inc    eax
  40883a:	mov    DWORD PTR [rbp-0x98],eax
  408840:	mov    rax,QWORD PTR [rbp-0xb8]
  408847:	mov    eax,DWORD PTR [rax+0x100]
  40884d:	test   eax,eax
  40884f:	jne    408891 <flatcc_builder_create_vtable@@Base+0x10c>
  408851:	mov    rax,QWORD PTR [rbp-0xb8]
  408858:	mov    eax,DWORD PTR [rax+0x124]
  40885e:	test   eax,eax
  408860:	jne    408891 <flatcc_builder_create_vtable@@Base+0x10c>
  408862:	lea    rdx,[rbp-0xa0]
  408869:	mov    rax,QWORD PTR [rbp-0xb8]
  408870:	mov    rsi,rdx
  408873:	mov    rdi,rax
  408876:	call   406dbc <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  40887b:	mov    DWORD PTR [rbp-0xa4],eax
  408881:	cmp    DWORD PTR [rbp-0xa4],0x0
  408888:	jne    4088c6 <flatcc_builder_create_vtable@@Base+0x141>
  40888a:	mov    eax,0x0
  40888f:	jmp    4088cc <flatcc_builder_create_vtable@@Base+0x147>
  408891:	lea    rdx,[rbp-0xa0]
  408898:	mov    rax,QWORD PTR [rbp-0xb8]
  40889f:	mov    rsi,rdx
  4088a2:	mov    rdi,rax
  4088a5:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4088aa:	mov    DWORD PTR [rbp-0xa4],eax
  4088b0:	cmp    DWORD PTR [rbp-0xa4],0x0
  4088b7:	jne    4088c0 <flatcc_builder_create_vtable@@Base+0x13b>
  4088b9:	mov    eax,0x0
  4088be:	jmp    4088cc <flatcc_builder_create_vtable@@Base+0x147>
  4088c0:	inc    DWORD PTR [rbp-0xa4]
  4088c6:	mov    eax,DWORD PTR [rbp-0xa4]
  4088cc:	mov    rcx,QWORD PTR [rbp-0x8]
  4088d0:	xor    rcx,QWORD PTR fs:0x28
  4088d9:	je     4088e0 <flatcc_builder_create_vtable@@Base+0x15b>
  4088db:	call   403150 <__stack_chk_fail@plt>
  4088e0:	leave  
  4088e1:	ret    

00000000004088e2 <flatcc_builder_create_cached_vtable@@Base>:
  4088e2:	endbr64 
  4088e6:	push   rbp
  4088e7:	mov    rbp,rsp
  4088ea:	sub    rsp,0x50
  4088ee:	mov    QWORD PTR [rbp-0x38],rdi
  4088f2:	mov    QWORD PTR [rbp-0x40],rsi
  4088f6:	mov    eax,edx
  4088f8:	mov    DWORD PTR [rbp-0x48],ecx
  4088fb:	mov    WORD PTR [rbp-0x44],ax
  4088ff:	mov    edx,DWORD PTR [rbp-0x48]
  408902:	mov    rax,QWORD PTR [rbp-0x38]
  408906:	mov    esi,edx
  408908:	mov    rdi,rax
  40890b:	call   40622a <flatcc_builder_default_alloc@@Base+0x7d6>
  408910:	mov    QWORD PTR [rbp-0x18],rax
  408914:	cmp    QWORD PTR [rbp-0x18],0x0
  408919:	jne    408925 <flatcc_builder_create_cached_vtable@@Base+0x43>
  40891b:	mov    eax,0x0
  408920:	jmp    408bc6 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  408925:	mov    rax,QWORD PTR [rbp-0x18]
  408929:	mov    QWORD PTR [rbp-0x20],rax
  40892d:	mov    rax,QWORD PTR [rbp-0x20]
  408931:	mov    eax,DWORD PTR [rax]
  408933:	mov    DWORD PTR [rbp-0x2c],eax
  408936:	mov    QWORD PTR [rbp-0x28],0x0
  40893e:	jmp    408a1d <flatcc_builder_create_cached_vtable@@Base+0x13b>
  408943:	mov    rax,QWORD PTR [rbp-0x38]
  408947:	mov    rdx,QWORD PTR [rax+0xb8]
  40894e:	mov    eax,DWORD PTR [rbp-0x2c]
  408951:	add    rax,rdx
  408954:	mov    QWORD PTR [rbp-0x10],rax
  408958:	mov    rax,QWORD PTR [rbp-0x38]
  40895c:	mov    rdx,QWORD PTR [rax+0x78]
  408960:	mov    rax,QWORD PTR [rbp-0x10]
  408964:	mov    eax,DWORD PTR [rax+0x8]
  408967:	mov    eax,eax
  408969:	add    rax,rdx
  40896c:	mov    QWORD PTR [rbp-0x8],rax
  408970:	mov    rax,QWORD PTR [rbp-0x8]
  408974:	movzx  eax,WORD PTR [rax]
  408977:	cmp    WORD PTR [rbp-0x44],ax
  40897b:	jne    408998 <flatcc_builder_create_cached_vtable@@Base+0xb6>
  40897d:	movzx  edx,WORD PTR [rbp-0x44]
  408981:	mov    rcx,QWORD PTR [rbp-0x8]
  408985:	mov    rax,QWORD PTR [rbp-0x40]
  408989:	mov    rsi,rcx
  40898c:	mov    rdi,rax
  40898f:	call   403190 <memcmp@plt>
  408994:	test   eax,eax
  408996:	je     4089b0 <flatcc_builder_create_cached_vtable@@Base+0xce>
  408998:	mov    rax,QWORD PTR [rbp-0x10]
  40899c:	add    rax,0xc
  4089a0:	mov    QWORD PTR [rbp-0x20],rax
  4089a4:	mov    rax,QWORD PTR [rbp-0x10]
  4089a8:	mov    eax,DWORD PTR [rax+0xc]
  4089ab:	mov    DWORD PTR [rbp-0x2c],eax
  4089ae:	jmp    408a1d <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4089b0:	mov    rax,QWORD PTR [rbp-0x10]
  4089b4:	mov    edx,DWORD PTR [rax+0x4]
  4089b7:	mov    rax,QWORD PTR [rbp-0x38]
  4089bb:	mov    eax,DWORD PTR [rax+0x100]
  4089c1:	cmp    edx,eax
  4089c3:	je     4089e5 <flatcc_builder_create_cached_vtable@@Base+0x103>
  4089c5:	mov    rax,QWORD PTR [rbp-0x10]
  4089c9:	mov    QWORD PTR [rbp-0x28],rax
  4089cd:	mov    rax,QWORD PTR [rbp-0x10]
  4089d1:	add    rax,0xc
  4089d5:	mov    QWORD PTR [rbp-0x20],rax
  4089d9:	mov    rax,QWORD PTR [rbp-0x10]
  4089dd:	mov    eax,DWORD PTR [rax+0xc]
  4089e0:	mov    DWORD PTR [rbp-0x2c],eax
  4089e3:	jmp    408a1d <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4089e5:	mov    rax,QWORD PTR [rbp-0x20]
  4089e9:	cmp    rax,QWORD PTR [rbp-0x18]
  4089ed:	je     408a12 <flatcc_builder_create_cached_vtable@@Base+0x130>
  4089ef:	mov    rax,QWORD PTR [rbp-0x10]
  4089f3:	mov    edx,DWORD PTR [rax+0xc]
  4089f6:	mov    rax,QWORD PTR [rbp-0x20]
  4089fa:	mov    DWORD PTR [rax],edx
  4089fc:	mov    rax,QWORD PTR [rbp-0x18]
  408a00:	mov    edx,DWORD PTR [rax]
  408a02:	mov    rax,QWORD PTR [rbp-0x10]
  408a06:	mov    DWORD PTR [rax+0xc],edx
  408a09:	mov    rax,QWORD PTR [rbp-0x18]
  408a0d:	mov    edx,DWORD PTR [rbp-0x2c]
  408a10:	mov    DWORD PTR [rax],edx
  408a12:	mov    rax,QWORD PTR [rbp-0x10]
  408a16:	mov    eax,DWORD PTR [rax]
  408a18:	jmp    408bc6 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  408a1d:	cmp    DWORD PTR [rbp-0x2c],0x0
  408a21:	jne    408943 <flatcc_builder_create_cached_vtable@@Base+0x61>
  408a27:	mov    rax,QWORD PTR [rbp-0x38]
  408a2b:	mov    eax,DWORD PTR [rax+0xe4]
  408a31:	mov    edx,eax
  408a33:	mov    rax,QWORD PTR [rbp-0x38]
  408a37:	mov    r8d,0x0
  408a3d:	mov    ecx,0x10
  408a42:	mov    esi,0x6
  408a47:	mov    rdi,rax
  408a4a:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  408a4f:	mov    QWORD PTR [rbp-0x10],rax
  408a53:	cmp    QWORD PTR [rbp-0x10],0x0
  408a58:	jne    408a64 <flatcc_builder_create_cached_vtable@@Base+0x182>
  408a5a:	mov    eax,0x0
  408a5f:	jmp    408bc6 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  408a64:	mov    rax,QWORD PTR [rbp-0x38]
  408a68:	mov    eax,DWORD PTR [rax+0xe4]
  408a6e:	mov    DWORD PTR [rbp-0x2c],eax
  408a71:	mov    rax,QWORD PTR [rbp-0x38]
  408a75:	mov    eax,DWORD PTR [rax+0xe4]
  408a7b:	lea    edx,[rax+0x10]
  408a7e:	mov    rax,QWORD PTR [rbp-0x38]
  408a82:	mov    DWORD PTR [rax+0xe4],edx
  408a88:	mov    rax,QWORD PTR [rbp-0x38]
  408a8c:	mov    edx,DWORD PTR [rax+0x100]
  408a92:	mov    rax,QWORD PTR [rbp-0x10]
  408a96:	mov    DWORD PTR [rax+0x4],edx
  408a99:	mov    rax,QWORD PTR [rbp-0x18]
  408a9d:	mov    edx,DWORD PTR [rax]
  408a9f:	mov    rax,QWORD PTR [rbp-0x10]
  408aa3:	mov    DWORD PTR [rax+0xc],edx
  408aa6:	mov    rax,QWORD PTR [rbp-0x18]
  408aaa:	mov    edx,DWORD PTR [rbp-0x2c]
  408aad:	mov    DWORD PTR [rax],edx
  408aaf:	movzx  edx,WORD PTR [rbp-0x44]
  408ab3:	mov    rcx,QWORD PTR [rbp-0x40]
  408ab7:	mov    rax,QWORD PTR [rbp-0x38]
  408abb:	mov    rsi,rcx
  408abe:	mov    rdi,rax
  408ac1:	call   408785 <flatcc_builder_create_vtable@@Base>
  408ac6:	mov    edx,eax
  408ac8:	mov    rax,QWORD PTR [rbp-0x10]
  408acc:	mov    DWORD PTR [rax],edx
  408ace:	mov    rax,QWORD PTR [rbp-0x10]
  408ad2:	mov    eax,DWORD PTR [rax]
  408ad4:	test   eax,eax
  408ad6:	jne    408ae2 <flatcc_builder_create_cached_vtable@@Base+0x200>
  408ad8:	mov    eax,0x0
  408add:	jmp    408bc6 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  408ae2:	cmp    QWORD PTR [rbp-0x28],0x0
  408ae7:	je     408afc <flatcc_builder_create_cached_vtable@@Base+0x21a>
  408ae9:	mov    rax,QWORD PTR [rbp-0x28]
  408aed:	mov    edx,DWORD PTR [rax+0x8]
  408af0:	mov    rax,QWORD PTR [rbp-0x10]
  408af4:	mov    DWORD PTR [rax+0x8],edx
  408af7:	jmp    408bc0 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  408afc:	mov    rax,QWORD PTR [rbp-0x38]
  408b00:	mov    rax,QWORD PTR [rax+0x118]
  408b07:	test   rax,rax
  408b0a:	je     408b3f <flatcc_builder_create_cached_vtable@@Base+0x25d>
  408b0c:	mov    rax,QWORD PTR [rbp-0x38]
  408b10:	mov    rdx,QWORD PTR [rax+0x118]
  408b17:	mov    rax,QWORD PTR [rbp-0x38]
  408b1b:	mov    ecx,DWORD PTR [rax+0xe0]
  408b21:	movzx  eax,WORD PTR [rbp-0x44]
  408b25:	add    eax,ecx
  408b27:	mov    eax,eax
  408b29:	cmp    rdx,rax
  408b2c:	jae    408b3f <flatcc_builder_create_cached_vtable@@Base+0x25d>
  408b2e:	mov    rax,QWORD PTR [rbp-0x38]
  408b32:	mov    rdi,rax
  408b35:	call   40629e <flatcc_builder_flush_vtable_cache@@Base>
  408b3a:	jmp    408bc0 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  408b3f:	movzx  edx,WORD PTR [rbp-0x44]
  408b43:	mov    rax,QWORD PTR [rbp-0x38]
  408b47:	mov    eax,DWORD PTR [rax+0xe0]
  408b4d:	mov    esi,eax
  408b4f:	mov    rax,QWORD PTR [rbp-0x38]
  408b53:	mov    r8d,0x0
  408b59:	mov    rcx,rdx
  408b5c:	mov    rdx,rsi
  408b5f:	mov    esi,0x2
  408b64:	mov    rdi,rax
  408b67:	call   405f6a <flatcc_builder_default_alloc@@Base+0x516>
  408b6c:	mov    QWORD PTR [rbp-0x8],rax
  408b70:	cmp    QWORD PTR [rbp-0x8],0x0
  408b75:	jne    408b7e <flatcc_builder_create_cached_vtable@@Base+0x29c>
  408b77:	mov    eax,0xffffffff
  408b7c:	jmp    408bc6 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  408b7e:	mov    rax,QWORD PTR [rbp-0x38]
  408b82:	mov    edx,DWORD PTR [rax+0xe0]
  408b88:	mov    rax,QWORD PTR [rbp-0x10]
  408b8c:	mov    DWORD PTR [rax+0x8],edx
  408b8f:	mov    rax,QWORD PTR [rbp-0x38]
  408b93:	mov    edx,DWORD PTR [rax+0xe0]
  408b99:	movzx  eax,WORD PTR [rbp-0x44]
  408b9d:	add    edx,eax
  408b9f:	mov    rax,QWORD PTR [rbp-0x38]
  408ba3:	mov    DWORD PTR [rax+0xe0],edx
  408ba9:	movzx  edx,WORD PTR [rbp-0x44]
  408bad:	mov    rcx,QWORD PTR [rbp-0x40]
  408bb1:	mov    rax,QWORD PTR [rbp-0x8]
  408bb5:	mov    rsi,rcx
  408bb8:	mov    rdi,rax
  408bbb:	call   4031b0 <memcpy@plt>
  408bc0:	mov    rax,QWORD PTR [rbp-0x10]
  408bc4:	mov    eax,DWORD PTR [rax]
  408bc6:	leave  
  408bc7:	ret    

0000000000408bc8 <flatcc_builder_create_table@@Base>:
  408bc8:	endbr64 
  408bcc:	push   rbp
  408bcd:	mov    rbp,rsp
  408bd0:	sub    rsp,0x100
  408bd7:	mov    QWORD PTR [rbp-0xd8],rdi
  408bde:	mov    QWORD PTR [rbp-0xe0],rsi
  408be5:	mov    QWORD PTR [rbp-0xe8],rdx
  408bec:	mov    eax,ecx
  408bee:	mov    QWORD PTR [rbp-0xf8],r8
  408bf5:	mov    DWORD PTR [rbp-0xf0],r9d
  408bfc:	mov    WORD PTR [rbp-0xec],ax
  408c03:	mov    rax,QWORD PTR fs:0x28
  408c0c:	mov    QWORD PTR [rbp-0x8],rax
  408c10:	xor    eax,eax
  408c12:	cmp    DWORD PTR [rbp-0xf0],0x0
  408c19:	jns    408c3a <flatcc_builder_create_table@@Base+0x72>
  408c1b:	lea    rcx,[rip+0x43ee]        # 40d010 <flatcc_builder_padding_base@@Base+0x950>
  408c22:	mov    edx,0x4d5
  408c27:	lea    rsi,[rip+0x3c92]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408c2e:	lea    rdi,[rip+0x3f40]        # 40cb75 <flatcc_builder_padding_base@@Base+0x4b5>
  408c35:	call   403160 <__assert_fail@plt>
  408c3a:	mov    eax,DWORD PTR [rbp+0x10]
  408c3d:	and    eax,0x1
  408c40:	test   eax,eax
  408c42:	jne    408c63 <flatcc_builder_create_table@@Base+0x9b>
  408c44:	lea    rcx,[rip+0x43c5]        # 40d010 <flatcc_builder_padding_base@@Base+0x950>
  408c4b:	mov    edx,0x4db
  408c50:	lea    rsi,[rip+0x3c69]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408c57:	lea    rdi,[rip+0x3f29]        # 40cb87 <flatcc_builder_padding_base@@Base+0x4c7>
  408c5e:	call   403160 <__assert_fail@plt>
  408c63:	lea    rax,[rbp-0xec]
  408c6a:	mov    esi,0x4
  408c6f:	mov    rdi,rax
  408c72:	call   4066f1 <flatcc_builder_clear@@Base+0xca>
  408c77:	movzx  eax,WORD PTR [rbp-0xec]
  408c7e:	movzx  edx,ax
  408c81:	mov    rax,QWORD PTR [rbp-0xd8]
  408c88:	mov    esi,edx
  408c8a:	mov    rdi,rax
  408c8d:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  408c92:	movzx  eax,WORD PTR [rbp-0xec]
  408c99:	movzx  edx,ax
  408c9c:	mov    rax,QWORD PTR [rbp-0xe8]
  408ca3:	mov    ecx,eax
  408ca5:	mov    rax,QWORD PTR [rbp-0xd8]
  408cac:	mov    esi,ecx
  408cae:	mov    rdi,rax
  408cb1:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408cb6:	mov    DWORD PTR [rbp-0xbc],eax
  408cbc:	mov    rax,QWORD PTR [rbp-0xd8]
  408cc3:	mov    eax,DWORD PTR [rax+0xf0]
  408cc9:	mov    edx,eax
  408ccb:	mov    rax,QWORD PTR [rbp-0xe8]
  408cd2:	mov    ecx,eax
  408cd4:	mov    eax,DWORD PTR [rbp-0xbc]
  408cda:	add    eax,ecx
  408cdc:	sub    edx,eax
  408cde:	mov    eax,edx
  408ce0:	sub    eax,0x4
  408ce3:	mov    DWORD PTR [rbp-0xb8],eax
  408ce9:	mov    eax,DWORD PTR [rbp+0x10]
  408cec:	dec    eax
  408cee:	mov    DWORD PTR [rbp-0xb4],eax
  408cf4:	mov    eax,DWORD PTR [rbp-0xb8]
  408cfa:	sub    eax,DWORD PTR [rbp-0xb4]
  408d00:	mov    DWORD PTR [rbp-0xb0],eax
  408d06:	mov    eax,DWORD PTR [rbp-0xb8]
  408d0c:	sub    eax,DWORD PTR [rbp-0xb0]
  408d12:	cmp    DWORD PTR [rbp-0xb4],eax
  408d18:	je     408d24 <flatcc_builder_create_table@@Base+0x15c>
  408d1a:	mov    eax,0xffffffff
  408d1f:	jmp    408f44 <flatcc_builder_create_table@@Base+0x37c>
  408d24:	mov    eax,DWORD PTR [rbp-0xb0]
  408d2a:	mov    edi,eax
  408d2c:	call   405994 <main@@Base+0x266>
  408d31:	mov    DWORD PTR [rbp-0xc4],eax
  408d37:	mov    DWORD PTR [rbp-0xc0],0x0
  408d41:	jmp    408dcb <flatcc_builder_create_table@@Base+0x203>
  408d46:	mov    eax,DWORD PTR [rbp-0xc0]
  408d4c:	cdqe   
  408d4e:	lea    rdx,[rax+rax*1]
  408d52:	mov    rax,QWORD PTR [rbp-0xf8]
  408d59:	add    rax,rdx
  408d5c:	movzx  eax,WORD PTR [rax]
  408d5f:	movzx  edx,ax
  408d62:	mov    rax,QWORD PTR [rbp-0xe0]
  408d69:	add    rax,rdx
  408d6c:	mov    QWORD PTR [rbp-0xa8],rax
  408d73:	mov    rax,QWORD PTR [rbp-0xa8]
  408d7a:	mov    eax,DWORD PTR [rax]
  408d7c:	sub    eax,DWORD PTR [rbp-0xb8]
  408d82:	mov    edx,eax
  408d84:	mov    eax,DWORD PTR [rbp-0xc0]
  408d8a:	cdqe   
  408d8c:	lea    rcx,[rax+rax*1]
  408d90:	mov    rax,QWORD PTR [rbp-0xf8]
  408d97:	add    rax,rcx
  408d9a:	movzx  eax,WORD PTR [rax]
  408d9d:	movzx  eax,ax
  408da0:	sub    edx,eax
  408da2:	mov    eax,edx
  408da4:	sub    eax,0x4
  408da7:	mov    DWORD PTR [rbp-0xac],eax
  408dad:	mov    eax,DWORD PTR [rbp-0xac]
  408db3:	mov    edi,eax
  408db5:	call   405994 <main@@Base+0x266>
  408dba:	mov    edx,eax
  408dbc:	mov    rax,QWORD PTR [rbp-0xa8]
  408dc3:	mov    DWORD PTR [rax],edx
  408dc5:	inc    DWORD PTR [rbp-0xc0]
  408dcb:	mov    eax,DWORD PTR [rbp-0xc0]
  408dd1:	cmp    eax,DWORD PTR [rbp-0xf0]
  408dd7:	jl     408d46 <flatcc_builder_create_table@@Base+0x17e>
  408ddd:	mov    QWORD PTR [rbp-0xa0],0x0
  408de8:	mov    DWORD PTR [rbp-0x98],0x0
  408df2:	mov    rax,QWORD PTR [rbp-0xa0]
  408df9:	add    rax,0x4
  408dfd:	mov    QWORD PTR [rbp-0xa0],rax
  408e04:	mov    eax,DWORD PTR [rbp-0x98]
  408e0a:	cdqe   
  408e0c:	shl    rax,0x4
  408e10:	add    rax,rbp
  408e13:	lea    rdx,[rax-0x90]
  408e1a:	lea    rax,[rbp-0xc4]
  408e21:	mov    QWORD PTR [rdx],rax
  408e24:	mov    eax,DWORD PTR [rbp-0x98]
  408e2a:	cdqe   
  408e2c:	shl    rax,0x4
  408e30:	add    rax,rbp
  408e33:	sub    rax,0x88
  408e39:	mov    QWORD PTR [rax],0x4
  408e40:	mov    eax,DWORD PTR [rbp-0x98]
  408e46:	inc    eax
  408e48:	mov    DWORD PTR [rbp-0x98],eax
  408e4e:	cmp    QWORD PTR [rbp-0xe8],0x0
  408e56:	je     408ebe <flatcc_builder_create_table@@Base+0x2f6>
  408e58:	mov    rdx,QWORD PTR [rbp-0xa0]
  408e5f:	mov    rax,QWORD PTR [rbp-0xe8]
  408e66:	add    rax,rdx
  408e69:	mov    QWORD PTR [rbp-0xa0],rax
  408e70:	mov    eax,DWORD PTR [rbp-0x98]
  408e76:	cdqe   
  408e78:	shl    rax,0x4
  408e7c:	add    rax,rbp
  408e7f:	lea    rdx,[rax-0x90]
  408e86:	mov    rax,QWORD PTR [rbp-0xe0]
  408e8d:	mov    QWORD PTR [rdx],rax
  408e90:	mov    eax,DWORD PTR [rbp-0x98]
  408e96:	cdqe   
  408e98:	shl    rax,0x4
  408e9c:	add    rax,rbp
  408e9f:	lea    rdx,[rax-0x88]
  408ea6:	mov    rax,QWORD PTR [rbp-0xe8]
  408ead:	mov    QWORD PTR [rdx],rax
  408eb0:	mov    eax,DWORD PTR [rbp-0x98]
  408eb6:	inc    eax
  408eb8:	mov    DWORD PTR [rbp-0x98],eax
  408ebe:	cmp    DWORD PTR [rbp-0xbc],0x0
  408ec5:	je     408f2b <flatcc_builder_create_table@@Base+0x363>
  408ec7:	mov    rdx,QWORD PTR [rbp-0xa0]
  408ece:	mov    eax,DWORD PTR [rbp-0xbc]
  408ed4:	add    rax,rdx
  408ed7:	mov    QWORD PTR [rbp-0xa0],rax
  408ede:	mov    eax,DWORD PTR [rbp-0x98]
  408ee4:	cdqe   
  408ee6:	shl    rax,0x4
  408eea:	add    rax,rbp
  408eed:	sub    rax,0x90
  408ef3:	mov    rdx,0x40c6c0
  408efa:	mov    QWORD PTR [rax],rdx
  408efd:	mov    edx,DWORD PTR [rbp-0x98]
  408f03:	mov    eax,DWORD PTR [rbp-0xbc]
  408f09:	movsxd rdx,edx
  408f0c:	shl    rdx,0x4
  408f10:	add    rdx,rbp
  408f13:	sub    rdx,0x88
  408f1a:	mov    QWORD PTR [rdx],rax
  408f1d:	mov    eax,DWORD PTR [rbp-0x98]
  408f23:	inc    eax
  408f25:	mov    DWORD PTR [rbp-0x98],eax
  408f2b:	lea    rdx,[rbp-0xa0]
  408f32:	mov    rax,QWORD PTR [rbp-0xd8]
  408f39:	mov    rsi,rdx
  408f3c:	mov    rdi,rax
  408f3f:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  408f44:	mov    rsi,QWORD PTR [rbp-0x8]
  408f48:	xor    rsi,QWORD PTR fs:0x28
  408f51:	je     408f58 <flatcc_builder_create_table@@Base+0x390>
  408f53:	call   403150 <__stack_chk_fail@plt>
  408f58:	leave  
  408f59:	ret    

0000000000408f5a <flatcc_builder_check_required_field@@Base>:
  408f5a:	endbr64 
  408f5e:	push   rbp
  408f5f:	mov    rbp,rsp
  408f62:	sub    rsp,0x10
  408f66:	mov    QWORD PTR [rbp-0x8],rdi
  408f6a:	mov    eax,esi
  408f6c:	mov    WORD PTR [rbp-0xc],ax
  408f70:	mov    rax,QWORD PTR [rbp-0x8]
  408f74:	mov    rax,QWORD PTR [rax+0x30]
  408f78:	movzx  eax,WORD PTR [rax+0xe]
  408f7c:	cmp    ax,0x3
  408f80:	je     408fa1 <flatcc_builder_check_required_field@@Base+0x47>
  408f82:	lea    rcx,[rip+0x40b7]        # 40d040 <flatcc_builder_padding_base@@Base+0x980>
  408f89:	mov    edx,0x4f8
  408f8e:	lea    rsi,[rip+0x392b]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408f95:	lea    rdi,[rip+0x3bfc]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  408f9c:	call   403160 <__assert_fail@plt>
  408fa1:	mov    rax,QWORD PTR [rbp-0x8]
  408fa5:	movzx  eax,WORD PTR [rax+0x10]
  408fa9:	cmp    WORD PTR [rbp-0xc],ax
  408fad:	jae    408fd0 <flatcc_builder_check_required_field@@Base+0x76>
  408faf:	mov    rax,QWORD PTR [rbp-0x8]
  408fb3:	mov    rax,QWORD PTR [rax+0x8]
  408fb7:	movzx  edx,WORD PTR [rbp-0xc]
  408fbb:	add    rdx,rdx
  408fbe:	add    rax,rdx
  408fc1:	movzx  eax,WORD PTR [rax]
  408fc4:	test   ax,ax
  408fc7:	je     408fd0 <flatcc_builder_check_required_field@@Base+0x76>
  408fc9:	mov    eax,0x1
  408fce:	jmp    408fd5 <flatcc_builder_check_required_field@@Base+0x7b>
  408fd0:	mov    eax,0x0
  408fd5:	leave  
  408fd6:	ret    

0000000000408fd7 <flatcc_builder_check_union_field@@Base>:
  408fd7:	endbr64 
  408fdb:	push   rbp
  408fdc:	mov    rbp,rsp
  408fdf:	sub    rsp,0x10
  408fe3:	mov    QWORD PTR [rbp-0x8],rdi
  408fe7:	mov    eax,esi
  408fe9:	mov    WORD PTR [rbp-0xc],ax
  408fed:	mov    rax,QWORD PTR [rbp-0x8]
  408ff1:	mov    rax,QWORD PTR [rax+0x30]
  408ff5:	movzx  eax,WORD PTR [rax+0xe]
  408ff9:	cmp    ax,0x3
  408ffd:	je     40901e <flatcc_builder_check_union_field@@Base+0x47>
  408fff:	lea    rcx,[rip+0x407a]        # 40d080 <flatcc_builder_padding_base@@Base+0x9c0>
  409006:	mov    edx,0x4ff
  40900b:	lea    rsi,[rip+0x38ae]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409012:	lea    rdi,[rip+0x3b7f]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  409019:	call   403160 <__assert_fail@plt>
  40901e:	cmp    WORD PTR [rbp-0xc],0x0
  409023:	je     409033 <flatcc_builder_check_union_field@@Base+0x5c>
  409025:	mov    rax,QWORD PTR [rbp-0x8]
  409029:	movzx  eax,WORD PTR [rax+0x10]
  40902d:	cmp    WORD PTR [rbp-0xc],ax
  409031:	jb     40903d <flatcc_builder_check_union_field@@Base+0x66>
  409033:	mov    eax,0x0
  409038:	jmp    4090e7 <flatcc_builder_check_union_field@@Base+0x110>
  40903d:	mov    rax,QWORD PTR [rbp-0x8]
  409041:	mov    rax,QWORD PTR [rax+0x8]
  409045:	movzx  edx,WORD PTR [rbp-0xc]
  409049:	add    rdx,rdx
  40904c:	sub    rdx,0x2
  409050:	add    rax,rdx
  409053:	movzx  eax,WORD PTR [rax]
  409056:	test   ax,ax
  409059:	jne    40907b <flatcc_builder_check_union_field@@Base+0xa4>
  40905b:	mov    rax,QWORD PTR [rbp-0x8]
  40905f:	mov    rax,QWORD PTR [rax+0x8]
  409063:	movzx  edx,WORD PTR [rbp-0xc]
  409067:	add    rdx,rdx
  40906a:	add    rax,rdx
  40906d:	movzx  eax,WORD PTR [rax]
  409070:	test   ax,ax
  409073:	sete   al
  409076:	movzx  eax,al
  409079:	jmp    4090e7 <flatcc_builder_check_union_field@@Base+0x110>
  40907b:	mov    rax,QWORD PTR [rbp-0x8]
  40907f:	mov    rdx,QWORD PTR [rax+0x18]
  409083:	mov    rax,QWORD PTR [rbp-0x8]
  409087:	mov    rax,QWORD PTR [rax+0x8]
  40908b:	movzx  ecx,WORD PTR [rbp-0xc]
  40908f:	add    rcx,rcx
  409092:	sub    rcx,0x2
  409096:	add    rax,rcx
  409099:	movzx  eax,WORD PTR [rax]
  40909c:	movzx  eax,ax
  40909f:	add    rax,rdx
  4090a2:	movzx  eax,BYTE PTR [rax]
  4090a5:	test   al,al
  4090a7:	je     4090c9 <flatcc_builder_check_union_field@@Base+0xf2>
  4090a9:	mov    rax,QWORD PTR [rbp-0x8]
  4090ad:	mov    rax,QWORD PTR [rax+0x8]
  4090b1:	movzx  edx,WORD PTR [rbp-0xc]
  4090b5:	add    rdx,rdx
  4090b8:	add    rax,rdx
  4090bb:	movzx  eax,WORD PTR [rax]
  4090be:	test   ax,ax
  4090c1:	setne  al
  4090c4:	movzx  eax,al
  4090c7:	jmp    4090e7 <flatcc_builder_check_union_field@@Base+0x110>
  4090c9:	mov    rax,QWORD PTR [rbp-0x8]
  4090cd:	mov    rax,QWORD PTR [rax+0x8]
  4090d1:	movzx  edx,WORD PTR [rbp-0xc]
  4090d5:	add    rdx,rdx
  4090d8:	add    rax,rdx
  4090db:	movzx  eax,WORD PTR [rax]
  4090de:	test   ax,ax
  4090e1:	sete   al
  4090e4:	movzx  eax,al
  4090e7:	leave  
  4090e8:	ret    

00000000004090e9 <flatcc_builder_check_required@@Base>:
  4090e9:	endbr64 
  4090ed:	push   rbp
  4090ee:	mov    rbp,rsp
  4090f1:	sub    rsp,0x30
  4090f5:	mov    QWORD PTR [rbp-0x18],rdi
  4090f9:	mov    QWORD PTR [rbp-0x20],rsi
  4090fd:	mov    DWORD PTR [rbp-0x24],edx
  409100:	mov    rax,QWORD PTR [rbp-0x18]
  409104:	mov    rax,QWORD PTR [rax+0x30]
  409108:	movzx  eax,WORD PTR [rax+0xe]
  40910c:	cmp    ax,0x3
  409110:	je     409131 <flatcc_builder_check_required@@Base+0x48>
  409112:	lea    rcx,[rip+0x3f97]        # 40d0b0 <flatcc_builder_padding_base@@Base+0x9f0>
  409119:	mov    edx,0x511
  40911e:	lea    rsi,[rip+0x379b]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409125:	lea    rdi,[rip+0x3a6c]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40912c:	call   403160 <__assert_fail@plt>
  409131:	mov    rax,QWORD PTR [rbp-0x18]
  409135:	movzx  eax,WORD PTR [rax+0x10]
  409139:	movzx  eax,ax
  40913c:	cmp    DWORD PTR [rbp-0x24],eax
  40913f:	jle    409148 <flatcc_builder_check_required@@Base+0x5f>
  409141:	mov    eax,0x0
  409146:	jmp    409194 <flatcc_builder_check_required@@Base+0xab>
  409148:	mov    DWORD PTR [rbp-0x4],0x0
  40914f:	jmp    409187 <flatcc_builder_check_required@@Base+0x9e>
  409151:	mov    rax,QWORD PTR [rbp-0x18]
  409155:	mov    rdx,QWORD PTR [rax+0x8]
  409159:	mov    eax,DWORD PTR [rbp-0x4]
  40915c:	cdqe   
  40915e:	lea    rcx,[rax+rax*1]
  409162:	mov    rax,QWORD PTR [rbp-0x20]
  409166:	add    rax,rcx
  409169:	movzx  eax,WORD PTR [rax]
  40916c:	movzx  eax,ax
  40916f:	add    rax,rax
  409172:	add    rax,rdx
  409175:	movzx  eax,WORD PTR [rax]
  409178:	test   ax,ax
  40917b:	jne    409184 <flatcc_builder_check_required@@Base+0x9b>
  40917d:	mov    eax,0x0
  409182:	jmp    409194 <flatcc_builder_check_required@@Base+0xab>
  409184:	inc    DWORD PTR [rbp-0x4]
  409187:	mov    eax,DWORD PTR [rbp-0x4]
  40918a:	cmp    eax,DWORD PTR [rbp-0x24]
  40918d:	jl     409151 <flatcc_builder_check_required@@Base+0x68>
  40918f:	mov    eax,0x1
  409194:	leave  
  409195:	ret    

0000000000409196 <flatcc_builder_end_table@@Base>:
  409196:	endbr64 
  40919a:	push   rbp
  40919b:	mov    rbp,rsp
  40919e:	sub    rsp,0x30
  4091a2:	mov    QWORD PTR [rbp-0x28],rdi
  4091a6:	mov    rax,QWORD PTR [rbp-0x28]
  4091aa:	mov    rax,QWORD PTR [rax+0x30]
  4091ae:	movzx  eax,WORD PTR [rax+0xe]
  4091b2:	cmp    ax,0x3
  4091b6:	je     4091d7 <flatcc_builder_end_table@@Base+0x41>
  4091b8:	lea    rcx,[rip+0x3f11]        # 40d0d0 <flatcc_builder_padding_base@@Base+0xa10>
  4091bf:	mov    edx,0x525
  4091c4:	lea    rsi,[rip+0x36f5]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4091cb:	lea    rdi,[rip+0x39c6]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  4091d2:	call   403160 <__assert_fail@plt>
  4091d7:	mov    rax,QWORD PTR [rbp-0x28]
  4091db:	mov    rax,QWORD PTR [rax+0x8]
  4091df:	sub    rax,0x4
  4091e3:	mov    QWORD PTR [rbp-0x10],rax
  4091e7:	mov    rax,QWORD PTR [rbp-0x28]
  4091eb:	movzx  eax,WORD PTR [rax+0x10]
  4091ef:	movzx  eax,ax
  4091f2:	add    eax,0x2
  4091f5:	cdqe   
  4091f7:	add    eax,eax
  4091f9:	mov    WORD PTR [rbp-0x1e],ax
  4091fd:	mov    rdx,QWORD PTR [rbp-0x10]
  409201:	movzx  eax,WORD PTR [rbp-0x1e]
  409205:	mov    WORD PTR [rdx],ax
  409208:	mov    rax,QWORD PTR [rbp-0x28]
  40920c:	mov    eax,DWORD PTR [rax+0x20]
  40920f:	mov    ecx,eax
  409211:	mov    rax,QWORD PTR [rbp-0x10]
  409215:	lea    rdx,[rax+0x2]
  409219:	lea    eax,[rcx+0x4]
  40921c:	mov    WORD PTR [rdx],ax
  40921f:	mov    rax,QWORD PTR [rbp-0x10]
  409223:	movzx  eax,WORD PTR [rax]
  409226:	movzx  edx,ax
  409229:	mov    rax,QWORD PTR [rbp-0x28]
  40922d:	mov    eax,DWORD PTR [rax+0x14]
  409230:	xor    eax,edx
  409232:	imul   edx,eax,0x9e3779b1
  409238:	mov    rax,QWORD PTR [rbp-0x10]
  40923c:	add    rax,0x2
  409240:	movzx  eax,WORD PTR [rax]
  409243:	movzx  eax,ax
  409246:	xor    eax,edx
  409248:	imul   edx,eax,0x9e3779b1
  40924e:	mov    rax,QWORD PTR [rbp-0x28]
  409252:	mov    DWORD PTR [rax+0x14],edx
  409255:	mov    rax,QWORD PTR [rbp-0x28]
  409259:	mov    ecx,DWORD PTR [rax+0x14]
  40925c:	movzx  edx,WORD PTR [rbp-0x1e]
  409260:	mov    rsi,QWORD PTR [rbp-0x10]
  409264:	mov    rax,QWORD PTR [rbp-0x28]
  409268:	mov    rdi,rax
  40926b:	call   4088e2 <flatcc_builder_create_cached_vtable@@Base>
  409270:	mov    DWORD PTR [rbp-0x1c],eax
  409273:	cmp    DWORD PTR [rbp-0x1c],0x0
  409277:	jne    409283 <flatcc_builder_end_table@@Base+0xed>
  409279:	mov    eax,0x0
  40927e:	jmp    40939a <flatcc_builder_end_table@@Base+0x204>
  409283:	movzx  edx,WORD PTR [rbp-0x1e]
  409287:	mov    rax,QWORD PTR [rbp-0x10]
  40928b:	mov    esi,0x0
  409290:	mov    rdi,rax
  409293:	call   403170 <memset@plt>
  409298:	mov    rax,QWORD PTR [rbp-0x28]
  40929c:	mov    rdx,QWORD PTR [rax+0x88]
  4092a3:	mov    rax,QWORD PTR [rbp-0x28]
  4092a7:	mov    rax,QWORD PTR [rax+0x30]
  4092ab:	mov    eax,DWORD PTR [rax+0x14]
  4092ae:	mov    eax,eax
  4092b0:	add    rax,rdx
  4092b3:	mov    QWORD PTR [rbp-0x8],rax
  4092b7:	mov    rax,QWORD PTR [rbp-0x28]
  4092bb:	mov    rax,QWORD PTR [rax]
  4092be:	sub    rax,QWORD PTR [rbp-0x8]
  4092c2:	sar    rax,1
  4092c5:	mov    DWORD PTR [rbp-0x18],eax
  4092c8:	mov    rax,QWORD PTR [rbp-0x28]
  4092cc:	movzx  eax,WORD PTR [rax+0xea]
  4092d3:	movzx  edx,ax
  4092d6:	mov    rax,QWORD PTR [rbp-0x28]
  4092da:	mov    eax,DWORD PTR [rax+0x20]
  4092dd:	mov    r10d,eax
  4092e0:	mov    rax,QWORD PTR [rbp-0x28]
  4092e4:	mov    rsi,QWORD PTR [rax+0x18]
  4092e8:	mov    r8d,DWORD PTR [rbp-0x18]
  4092ec:	mov    rdi,QWORD PTR [rbp-0x8]
  4092f0:	mov    rax,QWORD PTR [rbp-0x28]
  4092f4:	sub    rsp,0x8
  4092f8:	mov    ecx,DWORD PTR [rbp-0x1c]
  4092fb:	push   rcx
  4092fc:	mov    r9d,r8d
  4092ff:	mov    r8,rdi
  409302:	mov    ecx,edx
  409304:	mov    rdx,r10
  409307:	mov    rdi,rax
  40930a:	call   408bc8 <flatcc_builder_create_table@@Base>
  40930f:	add    rsp,0x10
  409313:	mov    DWORD PTR [rbp-0x14],eax
  409316:	cmp    DWORD PTR [rbp-0x14],0x0
  40931a:	jne    409323 <flatcc_builder_end_table@@Base+0x18d>
  40931c:	mov    eax,0x0
  409321:	jmp    40939a <flatcc_builder_end_table@@Base+0x204>
  409323:	mov    rax,QWORD PTR [rbp-0x28]
  409327:	mov    rax,QWORD PTR [rax+0x30]
  40932b:	mov    edx,DWORD PTR [rax+0x18]
  40932e:	mov    rax,QWORD PTR [rbp-0x28]
  409332:	mov    DWORD PTR [rax+0x14],edx
  409335:	mov    rax,QWORD PTR [rbp-0x28]
  409339:	mov    rax,QWORD PTR [rax+0x30]
  40933d:	movzx  eax,WORD PTR [rax+0x1c]
  409341:	mov    rdx,QWORD PTR [rbp-0x28]
  409345:	mov    WORD PTR [rdx+0x10],ax
  409349:	mov    rax,QWORD PTR [rbp-0x28]
  40934d:	mov    rdx,QWORD PTR [rax+0x58]
  409351:	mov    rax,QWORD PTR [rbp-0x28]
  409355:	mov    rax,QWORD PTR [rax+0x30]
  409359:	mov    eax,DWORD PTR [rax+0x10]
  40935c:	mov    eax,eax
  40935e:	add    rdx,rax
  409361:	mov    rax,QWORD PTR [rbp-0x28]
  409365:	mov    QWORD PTR [rax+0x8],rdx
  409369:	mov    rax,QWORD PTR [rbp-0x28]
  40936d:	mov    rdx,QWORD PTR [rax+0x88]
  409374:	mov    rax,QWORD PTR [rbp-0x28]
  409378:	mov    rax,QWORD PTR [rax+0x30]
  40937c:	mov    eax,DWORD PTR [rax+0x14]
  40937f:	mov    eax,eax
  409381:	add    rdx,rax
  409384:	mov    rax,QWORD PTR [rbp-0x28]
  409388:	mov    QWORD PTR [rax],rdx
  40938b:	mov    rax,QWORD PTR [rbp-0x28]
  40938f:	mov    rdi,rax
  409392:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  409397:	mov    eax,DWORD PTR [rbp-0x14]
  40939a:	leave  
  40939b:	ret    

000000000040939c <flatcc_builder_create_vector@@Base>:
  40939c:	endbr64 
  4093a0:	push   rbp
  4093a1:	mov    rbp,rsp
  4093a4:	sub    rsp,0xe0
  4093ab:	mov    QWORD PTR [rbp-0xb8],rdi
  4093b2:	mov    QWORD PTR [rbp-0xc0],rsi
  4093b9:	mov    QWORD PTR [rbp-0xc8],rdx
  4093c0:	mov    QWORD PTR [rbp-0xd0],rcx
  4093c7:	mov    eax,r8d
  4093ca:	mov    QWORD PTR [rbp-0xe0],r9
  4093d1:	mov    WORD PTR [rbp-0xd4],ax
  4093d8:	mov    rax,QWORD PTR fs:0x28
  4093e1:	mov    QWORD PTR [rbp-0x8],rax
  4093e5:	xor    eax,eax
  4093e7:	mov    rax,QWORD PTR [rbp-0xc8]
  4093ee:	cmp    rax,QWORD PTR [rbp-0xe0]
  4093f5:	jbe    409430 <flatcc_builder_create_vector@@Base+0x94>
  4093f7:	mov    rax,QWORD PTR [rbp-0xc8]
  4093fe:	cmp    rax,QWORD PTR [rbp-0xe0]
  409405:	jbe    409426 <flatcc_builder_create_vector@@Base+0x8a>
  409407:	lea    rcx,[rip+0x3ce2]        # 40d0f0 <flatcc_builder_padding_base@@Base+0xa30>
  40940e:	mov    edx,0x555
  409413:	lea    rsi,[rip+0x34a6]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40941a:	lea    rdi,[rip+0x37a2]        # 40cbc3 <flatcc_builder_padding_base@@Base+0x503>
  409421:	call   403160 <__assert_fail@plt>
  409426:	mov    eax,0x0
  40942b:	jmp    409618 <flatcc_builder_create_vector@@Base+0x27c>
  409430:	lea    rax,[rbp-0xd4]
  409437:	mov    esi,0x4
  40943c:	mov    rdi,rax
  40943f:	call   4066f1 <flatcc_builder_clear@@Base+0xca>
  409444:	movzx  eax,WORD PTR [rbp-0xd4]
  40944b:	movzx  edx,ax
  40944e:	mov    rax,QWORD PTR [rbp-0xb8]
  409455:	mov    esi,edx
  409457:	mov    rdi,rax
  40945a:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  40945f:	mov    rax,QWORD PTR [rbp-0xc8]
  409466:	mov    edx,eax
  409468:	mov    rax,QWORD PTR [rbp-0xd0]
  40946f:	imul   eax,edx
  409472:	mov    DWORD PTR [rbp-0xa8],eax
  409478:	mov    rax,QWORD PTR [rbp-0xc8]
  40947f:	mov    edi,eax
  409481:	call   405994 <main@@Base+0x266>
  409486:	mov    DWORD PTR [rbp-0xac],eax
  40948c:	movzx  eax,WORD PTR [rbp-0xd4]
  409493:	movzx  edx,ax
  409496:	mov    ecx,DWORD PTR [rbp-0xa8]
  40949c:	mov    rax,QWORD PTR [rbp-0xb8]
  4094a3:	mov    esi,ecx
  4094a5:	mov    rdi,rax
  4094a8:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4094ad:	mov    DWORD PTR [rbp-0xa4],eax
  4094b3:	mov    QWORD PTR [rbp-0xa0],0x0
  4094be:	mov    DWORD PTR [rbp-0x98],0x0
  4094c8:	mov    rax,QWORD PTR [rbp-0xa0]
  4094cf:	add    rax,0x4
  4094d3:	mov    QWORD PTR [rbp-0xa0],rax
  4094da:	mov    eax,DWORD PTR [rbp-0x98]
  4094e0:	cdqe   
  4094e2:	shl    rax,0x4
  4094e6:	add    rax,rbp
  4094e9:	lea    rdx,[rax-0x90]
  4094f0:	lea    rax,[rbp-0xac]
  4094f7:	mov    QWORD PTR [rdx],rax
  4094fa:	mov    eax,DWORD PTR [rbp-0x98]
  409500:	cdqe   
  409502:	shl    rax,0x4
  409506:	add    rax,rbp
  409509:	sub    rax,0x88
  40950f:	mov    QWORD PTR [rax],0x4
  409516:	mov    eax,DWORD PTR [rbp-0x98]
  40951c:	inc    eax
  40951e:	mov    DWORD PTR [rbp-0x98],eax
  409524:	cmp    DWORD PTR [rbp-0xa8],0x0
  40952b:	je     409592 <flatcc_builder_create_vector@@Base+0x1f6>
  40952d:	mov    rdx,QWORD PTR [rbp-0xa0]
  409534:	mov    eax,DWORD PTR [rbp-0xa8]
  40953a:	add    rax,rdx
  40953d:	mov    QWORD PTR [rbp-0xa0],rax
  409544:	mov    eax,DWORD PTR [rbp-0x98]
  40954a:	cdqe   
  40954c:	shl    rax,0x4
  409550:	add    rax,rbp
  409553:	lea    rdx,[rax-0x90]
  40955a:	mov    rax,QWORD PTR [rbp-0xc0]
  409561:	mov    QWORD PTR [rdx],rax
  409564:	mov    edx,DWORD PTR [rbp-0x98]
  40956a:	mov    eax,DWORD PTR [rbp-0xa8]
  409570:	movsxd rdx,edx
  409573:	shl    rdx,0x4
  409577:	add    rdx,rbp
  40957a:	sub    rdx,0x88
  409581:	mov    QWORD PTR [rdx],rax
  409584:	mov    eax,DWORD PTR [rbp-0x98]
  40958a:	inc    eax
  40958c:	mov    DWORD PTR [rbp-0x98],eax
  409592:	cmp    DWORD PTR [rbp-0xa4],0x0
  409599:	je     4095ff <flatcc_builder_create_vector@@Base+0x263>
  40959b:	mov    rdx,QWORD PTR [rbp-0xa0]
  4095a2:	mov    eax,DWORD PTR [rbp-0xa4]
  4095a8:	add    rax,rdx
  4095ab:	mov    QWORD PTR [rbp-0xa0],rax
  4095b2:	mov    eax,DWORD PTR [rbp-0x98]
  4095b8:	cdqe   
  4095ba:	shl    rax,0x4
  4095be:	add    rax,rbp
  4095c1:	sub    rax,0x90
  4095c7:	mov    rdx,0x40c6c0
  4095ce:	mov    QWORD PTR [rax],rdx
  4095d1:	mov    edx,DWORD PTR [rbp-0x98]
  4095d7:	mov    eax,DWORD PTR [rbp-0xa4]
  4095dd:	movsxd rdx,edx
  4095e0:	shl    rdx,0x4
  4095e4:	add    rdx,rbp
  4095e7:	sub    rdx,0x88
  4095ee:	mov    QWORD PTR [rdx],rax
  4095f1:	mov    eax,DWORD PTR [rbp-0x98]
  4095f7:	inc    eax
  4095f9:	mov    DWORD PTR [rbp-0x98],eax
  4095ff:	lea    rdx,[rbp-0xa0]
  409606:	mov    rax,QWORD PTR [rbp-0xb8]
  40960d:	mov    rsi,rdx
  409610:	mov    rdi,rax
  409613:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  409618:	mov    rcx,QWORD PTR [rbp-0x8]
  40961c:	xor    rcx,QWORD PTR fs:0x28
  409625:	je     40962c <flatcc_builder_create_vector@@Base+0x290>
  409627:	call   403150 <__stack_chk_fail@plt>
  40962c:	leave  
  40962d:	ret    

000000000040962e <flatcc_builder_end_vector@@Base>:
  40962e:	endbr64 
  409632:	push   rbp
  409633:	mov    rbp,rsp
  409636:	sub    rsp,0x20
  40963a:	mov    QWORD PTR [rbp-0x18],rdi
  40963e:	mov    rax,QWORD PTR [rbp-0x18]
  409642:	mov    rax,QWORD PTR [rax+0x30]
  409646:	movzx  eax,WORD PTR [rax+0xe]
  40964a:	cmp    ax,0x4
  40964e:	je     40966f <flatcc_builder_end_vector@@Base+0x41>
  409650:	lea    rcx,[rip+0x3ab9]        # 40d110 <flatcc_builder_padding_base@@Base+0xa50>
  409657:	mov    edx,0x578
  40965c:	lea    rsi,[rip+0x325d]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409663:	lea    rdi,[rip+0x339e]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  40966a:	call   403160 <__assert_fail@plt>
  40966f:	mov    rax,QWORD PTR [rbp-0x18]
  409673:	mov    rax,QWORD PTR [rax+0x30]
  409677:	mov    eax,DWORD PTR [rax+0x18]
  40967a:	mov    r8d,eax
  40967d:	mov    rax,QWORD PTR [rbp-0x18]
  409681:	movzx  eax,WORD PTR [rax+0xea]
  409688:	movzx  edx,ax
  40968b:	mov    rax,QWORD PTR [rbp-0x18]
  40968f:	mov    rax,QWORD PTR [rax+0x30]
  409693:	mov    eax,DWORD PTR [rax+0x10]
  409696:	mov    ecx,eax
  409698:	mov    rax,QWORD PTR [rbp-0x18]
  40969c:	mov    rax,QWORD PTR [rax+0x30]
  4096a0:	mov    eax,DWORD PTR [rax+0x14]
  4096a3:	mov    edi,eax
  4096a5:	mov    rax,QWORD PTR [rbp-0x18]
  4096a9:	mov    rsi,QWORD PTR [rax+0x18]
  4096ad:	mov    rax,QWORD PTR [rbp-0x18]
  4096b1:	mov    r9,r8
  4096b4:	mov    r8d,edx
  4096b7:	mov    rdx,rdi
  4096ba:	mov    rdi,rax
  4096bd:	call   40939c <flatcc_builder_create_vector@@Base>
  4096c2:	mov    DWORD PTR [rbp-0x4],eax
  4096c5:	cmp    DWORD PTR [rbp-0x4],0x0
  4096c9:	jne    4096d2 <flatcc_builder_end_vector@@Base+0xa4>
  4096cb:	mov    eax,0x0
  4096d0:	jmp    4096e1 <flatcc_builder_end_vector@@Base+0xb3>
  4096d2:	mov    rax,QWORD PTR [rbp-0x18]
  4096d6:	mov    rdi,rax
  4096d9:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4096de:	mov    eax,DWORD PTR [rbp-0x4]
  4096e1:	leave  
  4096e2:	ret    

00000000004096e3 <flatcc_builder_vector_count@@Base>:
  4096e3:	endbr64 
  4096e7:	push   rbp
  4096e8:	mov    rbp,rsp
  4096eb:	mov    QWORD PTR [rbp-0x8],rdi
  4096ef:	mov    rax,QWORD PTR [rbp-0x8]
  4096f3:	mov    rax,QWORD PTR [rax+0x30]
  4096f7:	mov    eax,DWORD PTR [rax+0x14]
  4096fa:	mov    eax,eax
  4096fc:	pop    rbp
  4096fd:	ret    

00000000004096fe <flatcc_builder_vector_edit@@Base>:
  4096fe:	endbr64 
  409702:	push   rbp
  409703:	mov    rbp,rsp
  409706:	mov    QWORD PTR [rbp-0x8],rdi
  40970a:	mov    rax,QWORD PTR [rbp-0x8]
  40970e:	mov    rax,QWORD PTR [rax+0x18]
  409712:	pop    rbp
  409713:	ret    
  409714:	endbr64 
  409718:	push   rbp
  409719:	mov    rbp,rsp
  40971c:	sub    rsp,0xe0
  409723:	mov    QWORD PTR [rbp-0xc8],rdi
  40972a:	mov    QWORD PTR [rbp-0xd0],rsi
  409731:	mov    QWORD PTR [rbp-0xd8],rdx
  409738:	mov    QWORD PTR [rbp-0xe0],rcx
  40973f:	mov    rax,QWORD PTR fs:0x28
  409748:	mov    QWORD PTR [rbp-0x8],rax
  40974c:	xor    eax,eax
  40974e:	mov    rax,QWORD PTR [rbp-0xd8]
  409755:	cmp    eax,0x3fffffff
  40975a:	jbe    409766 <flatcc_builder_vector_edit@@Base+0x68>
  40975c:	mov    eax,0x0
  409761:	jmp    409a8f <flatcc_builder_vector_edit@@Base+0x391>
  409766:	mov    rax,QWORD PTR [rbp-0xc8]
  40976d:	mov    esi,0x4
  409772:	mov    rdi,rax
  409775:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  40977a:	mov    rax,QWORD PTR [rbp-0xd8]
  409781:	shl    eax,0x2
  409784:	mov    DWORD PTR [rbp-0xb0],eax
  40978a:	mov    rax,QWORD PTR [rbp-0xd8]
  409791:	mov    edi,eax
  409793:	call   405994 <main@@Base+0x266>
  409798:	mov    DWORD PTR [rbp-0xb8],eax
  40979e:	mov    ecx,DWORD PTR [rbp-0xb0]
  4097a4:	mov    rax,QWORD PTR [rbp-0xc8]
  4097ab:	mov    edx,0x4
  4097b0:	mov    esi,ecx
  4097b2:	mov    rdi,rax
  4097b5:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4097ba:	mov    DWORD PTR [rbp-0xac],eax
  4097c0:	mov    QWORD PTR [rbp-0xa0],0x0
  4097cb:	mov    DWORD PTR [rbp-0x98],0x0
  4097d5:	mov    rax,QWORD PTR [rbp-0xa0]
  4097dc:	add    rax,0x4
  4097e0:	mov    QWORD PTR [rbp-0xa0],rax
  4097e7:	mov    eax,DWORD PTR [rbp-0x98]
  4097ed:	cdqe   
  4097ef:	shl    rax,0x4
  4097f3:	add    rax,rbp
  4097f6:	lea    rdx,[rax-0x90]
  4097fd:	lea    rax,[rbp-0xb8]
  409804:	mov    QWORD PTR [rdx],rax
  409807:	mov    eax,DWORD PTR [rbp-0x98]
  40980d:	cdqe   
  40980f:	shl    rax,0x4
  409813:	add    rax,rbp
  409816:	sub    rax,0x88
  40981c:	mov    QWORD PTR [rax],0x4
  409823:	mov    eax,DWORD PTR [rbp-0x98]
  409829:	inc    eax
  40982b:	mov    DWORD PTR [rbp-0x98],eax
  409831:	cmp    DWORD PTR [rbp-0xb0],0x0
  409838:	je     40989f <flatcc_builder_vector_edit@@Base+0x1a1>
  40983a:	mov    rdx,QWORD PTR [rbp-0xa0]
  409841:	mov    eax,DWORD PTR [rbp-0xb0]
  409847:	add    rax,rdx
  40984a:	mov    QWORD PTR [rbp-0xa0],rax
  409851:	mov    eax,DWORD PTR [rbp-0x98]
  409857:	cdqe   
  409859:	shl    rax,0x4
  40985d:	add    rax,rbp
  409860:	lea    rdx,[rax-0x90]
  409867:	mov    rax,QWORD PTR [rbp-0xd0]
  40986e:	mov    QWORD PTR [rdx],rax
  409871:	mov    edx,DWORD PTR [rbp-0x98]
  409877:	mov    eax,DWORD PTR [rbp-0xb0]
  40987d:	movsxd rdx,edx
  409880:	shl    rdx,0x4
  409884:	add    rdx,rbp
  409887:	sub    rdx,0x88
  40988e:	mov    QWORD PTR [rdx],rax
  409891:	mov    eax,DWORD PTR [rbp-0x98]
  409897:	inc    eax
  409899:	mov    DWORD PTR [rbp-0x98],eax
  40989f:	cmp    DWORD PTR [rbp-0xac],0x0
  4098a6:	je     40990c <flatcc_builder_vector_edit@@Base+0x20e>
  4098a8:	mov    rdx,QWORD PTR [rbp-0xa0]
  4098af:	mov    eax,DWORD PTR [rbp-0xac]
  4098b5:	add    rax,rdx
  4098b8:	mov    QWORD PTR [rbp-0xa0],rax
  4098bf:	mov    eax,DWORD PTR [rbp-0x98]
  4098c5:	cdqe   
  4098c7:	shl    rax,0x4
  4098cb:	add    rax,rbp
  4098ce:	sub    rax,0x90
  4098d4:	mov    rdx,0x40c6c0
  4098db:	mov    QWORD PTR [rax],rdx
  4098de:	mov    edx,DWORD PTR [rbp-0x98]
  4098e4:	mov    eax,DWORD PTR [rbp-0xac]
  4098ea:	movsxd rdx,edx
  4098ed:	shl    rdx,0x4
  4098f1:	add    rdx,rbp
  4098f4:	sub    rdx,0x88
  4098fb:	mov    QWORD PTR [rdx],rax
  4098fe:	mov    eax,DWORD PTR [rbp-0x98]
  409904:	inc    eax
  409906:	mov    DWORD PTR [rbp-0x98],eax
  40990c:	mov    rax,QWORD PTR [rbp-0xc8]
  409913:	mov    eax,DWORD PTR [rax+0xf0]
  409919:	mov    edx,eax
  40991b:	mov    rax,QWORD PTR [rbp-0xa0]
  409922:	sub    edx,eax
  409924:	mov    eax,edx
  409926:	mov    DWORD PTR [rbp-0xa8],eax
  40992c:	mov    DWORD PTR [rbp-0xb4],0x0
  409936:	jmp    409a63 <flatcc_builder_vector_edit@@Base+0x365>
  40993b:	mov    eax,DWORD PTR [rbp-0xb4]
  409941:	lea    rdx,[rax*4+0x0]
  409949:	mov    rax,QWORD PTR [rbp-0xd0]
  409950:	add    rax,rdx
  409953:	mov    eax,DWORD PTR [rax]
  409955:	test   eax,eax
  409957:	je     4099fe <flatcc_builder_vector_edit@@Base+0x300>
  40995d:	mov    eax,DWORD PTR [rbp-0xb4]
  409963:	lea    rdx,[rax*4+0x0]
  40996b:	mov    rax,QWORD PTR [rbp-0xd0]
  409972:	add    rax,rdx
  409975:	mov    eax,DWORD PTR [rax]
  409977:	sub    eax,DWORD PTR [rbp-0xa8]
  40997d:	mov    edx,DWORD PTR [rbp-0xb4]
  409983:	shl    edx,0x2
  409986:	sub    eax,edx
  409988:	sub    eax,0x4
  40998b:	mov    DWORD PTR [rbp-0xa4],eax
  409991:	mov    eax,DWORD PTR [rbp-0xa4]
  409997:	mov    edi,eax
  409999:	call   405994 <main@@Base+0x266>
  40999e:	mov    edx,eax
  4099a0:	mov    eax,DWORD PTR [rbp-0xb4]
  4099a6:	lea    rcx,[rax*4+0x0]
  4099ae:	mov    rax,QWORD PTR [rbp-0xd0]
  4099b5:	add    rax,rcx
  4099b8:	mov    DWORD PTR [rax],edx
  4099ba:	cmp    QWORD PTR [rbp-0xe0],0x0
  4099c2:	je     409a5d <flatcc_builder_vector_edit@@Base+0x35f>
  4099c8:	mov    edx,DWORD PTR [rbp-0xb4]
  4099ce:	mov    rax,QWORD PTR [rbp-0xe0]
  4099d5:	add    rax,rdx
  4099d8:	movzx  eax,BYTE PTR [rax]
  4099db:	test   al,al
  4099dd:	jne    409a5d <flatcc_builder_vector_edit@@Base+0x35f>
  4099df:	lea    rcx,[rip+0x374a]        # 40d130 <flatcc_builder_padding_base@@Base+0xa70>
  4099e6:	mov    edx,0x5b1
  4099eb:	lea    rsi,[rip+0x2ece]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4099f2:	lea    rdi,[rip+0x31dd]        # 40cbd6 <flatcc_builder_padding_base@@Base+0x516>
  4099f9:	call   403160 <__assert_fail@plt>
  4099fe:	cmp    QWORD PTR [rbp-0xe0],0x0
  409a06:	je     409a3e <flatcc_builder_vector_edit@@Base+0x340>
  409a08:	mov    edx,DWORD PTR [rbp-0xb4]
  409a0e:	mov    rax,QWORD PTR [rbp-0xe0]
  409a15:	add    rax,rdx
  409a18:	movzx  eax,BYTE PTR [rax]
  409a1b:	test   al,al
  409a1d:	je     409a5d <flatcc_builder_vector_edit@@Base+0x35f>
  409a1f:	lea    rcx,[rip+0x370a]        # 40d130 <flatcc_builder_padding_base@@Base+0xa70>
  409a26:	mov    edx,0x5b5
  409a2b:	lea    rsi,[rip+0x2e8e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409a32:	lea    rdi,[rip+0x31ab]        # 40cbe4 <flatcc_builder_padding_base@@Base+0x524>
  409a39:	call   403160 <__assert_fail@plt>
  409a3e:	lea    rcx,[rip+0x36eb]        # 40d130 <flatcc_builder_padding_base@@Base+0xa70>
  409a45:	mov    edx,0x5b7
  409a4a:	lea    rsi,[rip+0x2e6f]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409a51:	lea    rdi,[rip+0x2ec8]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  409a58:	call   403160 <__assert_fail@plt>
  409a5d:	inc    DWORD PTR [rbp-0xb4]
  409a63:	mov    rax,QWORD PTR [rbp-0xd8]
  409a6a:	cmp    DWORD PTR [rbp-0xb4],eax
  409a70:	jb     40993b <flatcc_builder_vector_edit@@Base+0x23d>
  409a76:	lea    rdx,[rbp-0xa0]
  409a7d:	mov    rax,QWORD PTR [rbp-0xc8]
  409a84:	mov    rsi,rdx
  409a87:	mov    rdi,rax
  409a8a:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  409a8f:	mov    rsi,QWORD PTR [rbp-0x8]
  409a93:	xor    rsi,QWORD PTR fs:0x28
  409a9c:	je     409aa3 <flatcc_builder_vector_edit@@Base+0x3a5>
  409a9e:	call   403150 <__stack_chk_fail@plt>
  409aa3:	leave  
  409aa4:	ret    

0000000000409aa5 <flatcc_builder_create_offset_vector_direct@@Base>:
  409aa5:	endbr64 
  409aa9:	push   rbp
  409aaa:	mov    rbp,rsp
  409aad:	sub    rsp,0x20
  409ab1:	mov    QWORD PTR [rbp-0x8],rdi
  409ab5:	mov    QWORD PTR [rbp-0x10],rsi
  409ab9:	mov    QWORD PTR [rbp-0x18],rdx
  409abd:	mov    rdx,QWORD PTR [rbp-0x18]
  409ac1:	mov    rsi,QWORD PTR [rbp-0x10]
  409ac5:	mov    rax,QWORD PTR [rbp-0x8]
  409ac9:	mov    ecx,0x0
  409ace:	mov    rdi,rax
  409ad1:	call   409714 <flatcc_builder_vector_edit@@Base+0x16>
  409ad6:	leave  
  409ad7:	ret    

0000000000409ad8 <flatcc_builder_end_offset_vector@@Base>:
  409ad8:	endbr64 
  409adc:	push   rbp
  409add:	mov    rbp,rsp
  409ae0:	sub    rsp,0x20
  409ae4:	mov    QWORD PTR [rbp-0x18],rdi
  409ae8:	mov    rax,QWORD PTR [rbp-0x18]
  409aec:	mov    rax,QWORD PTR [rax+0x30]
  409af0:	movzx  eax,WORD PTR [rax+0xe]
  409af4:	cmp    ax,0x5
  409af8:	je     409b19 <flatcc_builder_end_offset_vector@@Base+0x41>
  409afa:	lea    rcx,[rip+0x365f]        # 40d160 <flatcc_builder_padding_base@@Base+0xaa0>
  409b01:	mov    edx,0x5c8
  409b06:	lea    rsi,[rip+0x2db3]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409b0d:	lea    rdi,[rip+0x2f64]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  409b14:	call   403160 <__assert_fail@plt>
  409b19:	mov    rax,QWORD PTR [rbp-0x18]
  409b1d:	mov    rax,QWORD PTR [rax+0x30]
  409b21:	mov    eax,DWORD PTR [rax+0x14]
  409b24:	mov    edx,eax
  409b26:	mov    rax,QWORD PTR [rbp-0x18]
  409b2a:	mov    rcx,QWORD PTR [rax+0x18]
  409b2e:	mov    rax,QWORD PTR [rbp-0x18]
  409b32:	mov    rsi,rcx
  409b35:	mov    rdi,rax
  409b38:	call   409aa5 <flatcc_builder_create_offset_vector_direct@@Base>
  409b3d:	mov    DWORD PTR [rbp-0x4],eax
  409b40:	cmp    DWORD PTR [rbp-0x4],0x0
  409b44:	jne    409b4d <flatcc_builder_end_offset_vector@@Base+0x75>
  409b46:	mov    eax,0x0
  409b4b:	jmp    409b5c <flatcc_builder_end_offset_vector@@Base+0x84>
  409b4d:	mov    rax,QWORD PTR [rbp-0x18]
  409b51:	mov    rdi,rax
  409b54:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  409b59:	mov    eax,DWORD PTR [rbp-0x4]
  409b5c:	leave  
  409b5d:	ret    

0000000000409b5e <flatcc_builder_end_offset_vector_for_unions@@Base>:
  409b5e:	endbr64 
  409b62:	push   rbp
  409b63:	mov    rbp,rsp
  409b66:	sub    rsp,0x20
  409b6a:	mov    QWORD PTR [rbp-0x18],rdi
  409b6e:	mov    QWORD PTR [rbp-0x20],rsi
  409b72:	mov    rax,QWORD PTR [rbp-0x18]
  409b76:	mov    rax,QWORD PTR [rax+0x30]
  409b7a:	movzx  eax,WORD PTR [rax+0xe]
  409b7e:	cmp    ax,0x5
  409b82:	je     409ba3 <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  409b84:	lea    rcx,[rip+0x3615]        # 40d1a0 <flatcc_builder_padding_base@@Base+0xae0>
  409b8b:	mov    edx,0x5d5
  409b90:	lea    rsi,[rip+0x2d29]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409b97:	lea    rdi,[rip+0x2eda]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  409b9e:	call   403160 <__assert_fail@plt>
  409ba3:	mov    rax,QWORD PTR [rbp-0x18]
  409ba7:	mov    rax,QWORD PTR [rax+0x30]
  409bab:	mov    eax,DWORD PTR [rax+0x14]
  409bae:	mov    edi,eax
  409bb0:	mov    rax,QWORD PTR [rbp-0x18]
  409bb4:	mov    rsi,QWORD PTR [rax+0x18]
  409bb8:	mov    rdx,QWORD PTR [rbp-0x20]
  409bbc:	mov    rax,QWORD PTR [rbp-0x18]
  409bc0:	mov    rcx,rdx
  409bc3:	mov    rdx,rdi
  409bc6:	mov    rdi,rax
  409bc9:	call   409714 <flatcc_builder_vector_edit@@Base+0x16>
  409bce:	mov    DWORD PTR [rbp-0x4],eax
  409bd1:	cmp    DWORD PTR [rbp-0x4],0x0
  409bd5:	jne    409bde <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  409bd7:	mov    eax,0x0
  409bdc:	jmp    409bed <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  409bde:	mov    rax,QWORD PTR [rbp-0x18]
  409be2:	mov    rdi,rax
  409be5:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  409bea:	mov    eax,DWORD PTR [rbp-0x4]
  409bed:	leave  
  409bee:	ret    

0000000000409bef <flatcc_builder_offset_vector_edit@@Base>:
  409bef:	endbr64 
  409bf3:	push   rbp
  409bf4:	mov    rbp,rsp
  409bf7:	mov    QWORD PTR [rbp-0x8],rdi
  409bfb:	mov    rax,QWORD PTR [rbp-0x8]
  409bff:	mov    rax,QWORD PTR [rax+0x18]
  409c03:	pop    rbp
  409c04:	ret    

0000000000409c05 <flatcc_builder_offset_vector_count@@Base>:
  409c05:	endbr64 
  409c09:	push   rbp
  409c0a:	mov    rbp,rsp
  409c0d:	mov    QWORD PTR [rbp-0x8],rdi
  409c11:	mov    rax,QWORD PTR [rbp-0x8]
  409c15:	mov    rax,QWORD PTR [rax+0x30]
  409c19:	mov    eax,DWORD PTR [rax+0x14]
  409c1c:	mov    eax,eax
  409c1e:	pop    rbp
  409c1f:	ret    

0000000000409c20 <flatcc_builder_table_add_union@@Base>:
  409c20:	endbr64 
  409c24:	push   rbp
  409c25:	mov    rbp,rsp
  409c28:	sub    rsp,0x30
  409c2c:	mov    QWORD PTR [rbp-0x18],rdi
  409c30:	mov    DWORD PTR [rbp-0x1c],esi
  409c33:	mov    QWORD PTR [rbp-0x24],rdx
  409c37:	mov    rax,QWORD PTR [rbp-0x18]
  409c3b:	mov    rax,QWORD PTR [rax+0x30]
  409c3f:	movzx  eax,WORD PTR [rax+0xe]
  409c43:	cmp    ax,0x3
  409c47:	je     409c68 <flatcc_builder_table_add_union@@Base+0x48>
  409c49:	lea    rcx,[rip+0x3580]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409c50:	mov    edx,0x5ee
  409c55:	lea    rsi,[rip+0x2c64]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409c5c:	lea    rdi,[rip+0x2f35]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  409c63:	call   403160 <__assert_fail@plt>
  409c68:	movzx  eax,BYTE PTR [rbp-0x24]
  409c6c:	test   al,al
  409c6e:	jne    409caf <flatcc_builder_table_add_union@@Base+0x8f>
  409c70:	mov    eax,DWORD PTR [rbp-0x20]
  409c73:	test   eax,eax
  409c75:	je     409caf <flatcc_builder_table_add_union@@Base+0x8f>
  409c77:	movzx  eax,BYTE PTR [rbp-0x24]
  409c7b:	test   al,al
  409c7d:	jne    409ca5 <flatcc_builder_table_add_union@@Base+0x85>
  409c7f:	mov    eax,DWORD PTR [rbp-0x20]
  409c82:	test   eax,eax
  409c84:	je     409ca5 <flatcc_builder_table_add_union@@Base+0x85>
  409c86:	lea    rcx,[rip+0x3543]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409c8d:	mov    edx,0x5ef
  409c92:	lea    rsi,[rip+0x2c27]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409c99:	lea    rdi,[rip+0x2f58]        # 40cbf8 <flatcc_builder_padding_base@@Base+0x538>
  409ca0:	call   403160 <__assert_fail@plt>
  409ca5:	mov    eax,0xffffffff
  409caa:	jmp    409d75 <flatcc_builder_table_add_union@@Base+0x155>
  409caf:	mov    eax,DWORD PTR [rbp-0x20]
  409cb2:	test   eax,eax
  409cb4:	je     409d08 <flatcc_builder_table_add_union@@Base+0xe8>
  409cb6:	mov    edx,DWORD PTR [rbp-0x1c]
  409cb9:	mov    rax,QWORD PTR [rbp-0x18]
  409cbd:	mov    esi,edx
  409cbf:	mov    rdi,rax
  409cc2:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  409cc7:	mov    QWORD PTR [rbp-0x10],rax
  409ccb:	cmp    QWORD PTR [rbp-0x10],0x0
  409cd0:	jne    409cff <flatcc_builder_table_add_union@@Base+0xdf>
  409cd2:	cmp    QWORD PTR [rbp-0x10],0x0
  409cd7:	jne    409cf8 <flatcc_builder_table_add_union@@Base+0xd8>
  409cd9:	lea    rcx,[rip+0x34f0]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409ce0:	mov    edx,0x5f2
  409ce5:	lea    rsi,[rip+0x2bd4]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409cec:	lea    rdi,[rip+0x2f27]        # 40cc1a <flatcc_builder_padding_base@@Base+0x55a>
  409cf3:	call   403160 <__assert_fail@plt>
  409cf8:	mov    eax,0xffffffff
  409cfd:	jmp    409d75 <flatcc_builder_table_add_union@@Base+0x155>
  409cff:	mov    edx,DWORD PTR [rbp-0x20]
  409d02:	mov    rax,QWORD PTR [rbp-0x10]
  409d06:	mov    DWORD PTR [rax],edx
  409d08:	mov    eax,DWORD PTR [rbp-0x1c]
  409d0b:	lea    esi,[rax-0x1]
  409d0e:	mov    rax,QWORD PTR [rbp-0x18]
  409d12:	mov    ecx,0x1
  409d17:	mov    edx,0x1
  409d1c:	mov    rdi,rax
  409d1f:	call   40a837 <flatcc_builder_table_add@@Base>
  409d24:	mov    QWORD PTR [rbp-0x8],rax
  409d28:	cmp    QWORD PTR [rbp-0x8],0x0
  409d2d:	jne    409d5c <flatcc_builder_table_add_union@@Base+0x13c>
  409d2f:	cmp    QWORD PTR [rbp-0x8],0x0
  409d34:	jne    409d55 <flatcc_builder_table_add_union@@Base+0x135>
  409d36:	lea    rcx,[rip+0x3493]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409d3d:	mov    edx,0x5f6
  409d42:	lea    rsi,[rip+0x2b77]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409d49:	lea    rdi,[rip+0x2ed4]        # 40cc24 <flatcc_builder_padding_base@@Base+0x564>
  409d50:	call   403160 <__assert_fail@plt>
  409d55:	mov    eax,0xffffffff
  409d5a:	jmp    409d75 <flatcc_builder_table_add_union@@Base+0x155>
  409d5c:	movzx  eax,BYTE PTR [rbp-0x24]
  409d60:	movzx  eax,al
  409d63:	mov    edi,eax
  409d65:	call   4059a0 <main@@Base+0x272>
  409d6a:	mov    rdx,QWORD PTR [rbp-0x8]
  409d6e:	mov    BYTE PTR [rdx],al
  409d70:	mov    eax,0x0
  409d75:	leave  
  409d76:	ret    

0000000000409d77 <flatcc_builder_table_add_union_vector@@Base>:
  409d77:	endbr64 
  409d7b:	push   rbp
  409d7c:	mov    rbp,rsp
  409d7f:	sub    rsp,0x30
  409d83:	mov    QWORD PTR [rbp-0x18],rdi
  409d87:	mov    DWORD PTR [rbp-0x1c],esi
  409d8a:	mov    QWORD PTR [rbp-0x24],rdx
  409d8e:	mov    rax,QWORD PTR [rbp-0x18]
  409d92:	mov    rax,QWORD PTR [rax+0x30]
  409d96:	movzx  eax,WORD PTR [rax+0xe]
  409d9a:	cmp    ax,0x3
  409d9e:	je     409dbf <flatcc_builder_table_add_union_vector@@Base+0x48>
  409da0:	lea    rcx,[rip+0x3459]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409da7:	mov    edx,0x600
  409dac:	lea    rsi,[rip+0x2b0d]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409db3:	lea    rdi,[rip+0x2dde]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  409dba:	call   403160 <__assert_fail@plt>
  409dbf:	mov    eax,DWORD PTR [rbp-0x24]
  409dc2:	test   eax,eax
  409dc4:	sete   dl
  409dc7:	mov    eax,DWORD PTR [rbp-0x20]
  409dca:	test   eax,eax
  409dcc:	sete   al
  409dcf:	xor    eax,edx
  409dd1:	test   al,al
  409dd3:	je     409e14 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  409dd5:	mov    eax,DWORD PTR [rbp-0x24]
  409dd8:	test   eax,eax
  409dda:	setne  dl
  409ddd:	mov    eax,DWORD PTR [rbp-0x20]
  409de0:	test   eax,eax
  409de2:	sete   al
  409de5:	xor    eax,edx
  409de7:	test   al,al
  409de9:	jne    409e0a <flatcc_builder_table_add_union_vector@@Base+0x93>
  409deb:	lea    rcx,[rip+0x340e]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409df2:	mov    edx,0x601
  409df7:	lea    rsi,[rip+0x2ac2]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409dfe:	lea    rdi,[rip+0x2e2b]        # 40cc30 <flatcc_builder_padding_base@@Base+0x570>
  409e05:	call   403160 <__assert_fail@plt>
  409e0a:	mov    eax,0xffffffff
  409e0f:	jmp    409ecb <flatcc_builder_table_add_union_vector@@Base+0x154>
  409e14:	mov    eax,DWORD PTR [rbp-0x24]
  409e17:	test   eax,eax
  409e19:	je     409ec6 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  409e1f:	mov    eax,DWORD PTR [rbp-0x1c]
  409e22:	lea    edx,[rax-0x1]
  409e25:	mov    rax,QWORD PTR [rbp-0x18]
  409e29:	mov    esi,edx
  409e2b:	mov    rdi,rax
  409e2e:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  409e33:	mov    QWORD PTR [rbp-0x8],rax
  409e37:	cmp    QWORD PTR [rbp-0x8],0x0
  409e3c:	jne    409e6b <flatcc_builder_table_add_union_vector@@Base+0xf4>
  409e3e:	cmp    QWORD PTR [rbp-0x8],0x0
  409e43:	jne    409e64 <flatcc_builder_table_add_union_vector@@Base+0xed>
  409e45:	lea    rcx,[rip+0x33b4]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409e4c:	mov    edx,0x604
  409e51:	lea    rsi,[rip+0x2a68]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409e58:	lea    rdi,[rip+0x2dbb]        # 40cc1a <flatcc_builder_padding_base@@Base+0x55a>
  409e5f:	call   403160 <__assert_fail@plt>
  409e64:	mov    eax,0xffffffff
  409e69:	jmp    409ecb <flatcc_builder_table_add_union_vector@@Base+0x154>
  409e6b:	mov    edx,DWORD PTR [rbp-0x24]
  409e6e:	mov    rax,QWORD PTR [rbp-0x8]
  409e72:	mov    DWORD PTR [rax],edx
  409e74:	mov    edx,DWORD PTR [rbp-0x1c]
  409e77:	mov    rax,QWORD PTR [rbp-0x18]
  409e7b:	mov    esi,edx
  409e7d:	mov    rdi,rax
  409e80:	call   40aa11 <flatcc_builder_table_add_offset@@Base>
  409e85:	mov    QWORD PTR [rbp-0x8],rax
  409e89:	cmp    QWORD PTR [rbp-0x8],0x0
  409e8e:	jne    409ebd <flatcc_builder_table_add_union_vector@@Base+0x146>
  409e90:	cmp    QWORD PTR [rbp-0x8],0x0
  409e95:	jne    409eb6 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  409e97:	lea    rcx,[rip+0x3362]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409e9e:	mov    edx,0x608
  409ea3:	lea    rsi,[rip+0x2a16]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409eaa:	lea    rdi,[rip+0x2d69]        # 40cc1a <flatcc_builder_padding_base@@Base+0x55a>
  409eb1:	call   403160 <__assert_fail@plt>
  409eb6:	mov    eax,0xffffffff
  409ebb:	jmp    409ecb <flatcc_builder_table_add_union_vector@@Base+0x154>
  409ebd:	mov    edx,DWORD PTR [rbp-0x20]
  409ec0:	mov    rax,QWORD PTR [rbp-0x8]
  409ec4:	mov    DWORD PTR [rax],edx
  409ec6:	mov    eax,0x0
  409ecb:	leave  
  409ecc:	ret    

0000000000409ecd <flatcc_builder_create_union_vector@@Base>:
  409ecd:	endbr64 
  409ed1:	push   rbp
  409ed2:	mov    rbp,rsp
  409ed5:	sub    rsp,0x40
  409ed9:	mov    QWORD PTR [rbp-0x28],rdi
  409edd:	mov    QWORD PTR [rbp-0x30],rsi
  409ee1:	mov    QWORD PTR [rbp-0x38],rdx
  409ee5:	mov    DWORD PTR [rbp-0x8],0x0
  409eec:	mov    DWORD PTR [rbp-0x4],0x0
  409ef3:	mov    rax,QWORD PTR [rbp-0x28]
  409ef7:	mov    rdi,rax
  409efa:	call   4084db <flatcc_builder_start_offset_vector@@Base>
  409eff:	test   eax,eax
  409f01:	je     409f0c <flatcc_builder_create_union_vector@@Base+0x3f>
  409f03:	mov    rax,QWORD PTR [rbp-0x8]
  409f07:	jmp    409ff7 <flatcc_builder_create_union_vector@@Base+0x12a>
  409f0c:	mov    rdx,QWORD PTR [rbp-0x38]
  409f10:	mov    rax,QWORD PTR [rbp-0x28]
  409f14:	mov    rsi,rdx
  409f17:	mov    rdi,rax
  409f1a:	call   407eba <flatcc_builder_extend_offset_vector@@Base>
  409f1f:	test   rax,rax
  409f22:	jne    409f2d <flatcc_builder_create_union_vector@@Base+0x60>
  409f24:	mov    rax,QWORD PTR [rbp-0x8]
  409f28:	jmp    409ff7 <flatcc_builder_create_union_vector@@Base+0x12a>
  409f2d:	mov    rax,QWORD PTR [rbp-0x38]
  409f31:	mov    edx,eax
  409f33:	mov    rax,QWORD PTR [rbp-0x28]
  409f37:	mov    esi,edx
  409f39:	mov    rdi,rax
  409f3c:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  409f41:	mov    QWORD PTR [rbp-0x18],rax
  409f45:	cmp    QWORD PTR [rbp-0x18],0x0
  409f4a:	jne    409f55 <flatcc_builder_create_union_vector@@Base+0x88>
  409f4c:	mov    rax,QWORD PTR [rbp-0x8]
  409f50:	jmp    409ff7 <flatcc_builder_create_union_vector@@Base+0x12a>
  409f55:	mov    rax,QWORD PTR [rbp-0x28]
  409f59:	mov    rdi,rax
  409f5c:	call   409bef <flatcc_builder_offset_vector_edit@@Base>
  409f61:	mov    QWORD PTR [rbp-0x10],rax
  409f65:	mov    QWORD PTR [rbp-0x20],0x0
  409f6d:	jmp    409fc1 <flatcc_builder_create_union_vector@@Base+0xf4>
  409f6f:	mov    rax,QWORD PTR [rbp-0x20]
  409f73:	lea    rdx,[rax*8+0x0]
  409f7b:	mov    rax,QWORD PTR [rbp-0x30]
  409f7f:	add    rax,rdx
  409f82:	mov    rcx,QWORD PTR [rbp-0x18]
  409f86:	mov    rdx,QWORD PTR [rbp-0x20]
  409f8a:	add    rdx,rcx
  409f8d:	movzx  eax,BYTE PTR [rax]
  409f90:	mov    BYTE PTR [rdx],al
  409f92:	mov    rax,QWORD PTR [rbp-0x20]
  409f96:	lea    rdx,[rax*8+0x0]
  409f9e:	mov    rax,QWORD PTR [rbp-0x30]
  409fa2:	add    rax,rdx
  409fa5:	mov    rdx,QWORD PTR [rbp-0x20]
  409fa9:	lea    rcx,[rdx*4+0x0]
  409fb1:	mov    rdx,QWORD PTR [rbp-0x10]
  409fb5:	add    rdx,rcx
  409fb8:	mov    eax,DWORD PTR [rax+0x4]
  409fbb:	mov    DWORD PTR [rdx],eax
  409fbd:	inc    QWORD PTR [rbp-0x20]
  409fc1:	mov    rax,QWORD PTR [rbp-0x20]
  409fc5:	cmp    rax,QWORD PTR [rbp-0x38]
  409fc9:	jb     409f6f <flatcc_builder_create_union_vector@@Base+0xa2>
  409fcb:	mov    rcx,QWORD PTR [rbp-0x38]
  409fcf:	mov    rdx,QWORD PTR [rbp-0x10]
  409fd3:	mov    rsi,QWORD PTR [rbp-0x18]
  409fd7:	mov    rax,QWORD PTR [rbp-0x28]
  409fdb:	mov    rdi,rax
  409fde:	call   409ff9 <flatcc_builder_create_union_vector_direct@@Base>
  409fe3:	mov    QWORD PTR [rbp-0x8],rax
  409fe7:	mov    rax,QWORD PTR [rbp-0x28]
  409feb:	mov    rdi,rax
  409fee:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  409ff3:	mov    rax,QWORD PTR [rbp-0x8]
  409ff7:	leave  
  409ff8:	ret    

0000000000409ff9 <flatcc_builder_create_union_vector_direct@@Base>:
  409ff9:	endbr64 
  409ffd:	push   rbp
  409ffe:	mov    rbp,rsp
  40a001:	sub    rsp,0x30
  40a005:	mov    QWORD PTR [rbp-0x18],rdi
  40a009:	mov    QWORD PTR [rbp-0x20],rsi
  40a00d:	mov    QWORD PTR [rbp-0x28],rdx
  40a011:	mov    QWORD PTR [rbp-0x30],rcx
  40a015:	mov    DWORD PTR [rbp-0x8],0x0
  40a01c:	mov    DWORD PTR [rbp-0x4],0x0
  40a023:	mov    rcx,QWORD PTR [rbp-0x20]
  40a027:	mov    rdx,QWORD PTR [rbp-0x30]
  40a02b:	mov    rsi,QWORD PTR [rbp-0x28]
  40a02f:	mov    rax,QWORD PTR [rbp-0x18]
  40a033:	mov    rdi,rax
  40a036:	call   409714 <flatcc_builder_vector_edit@@Base+0x16>
  40a03b:	mov    DWORD PTR [rbp-0x4],eax
  40a03e:	mov    eax,DWORD PTR [rbp-0x4]
  40a041:	test   eax,eax
  40a043:	jne    40a04b <flatcc_builder_create_union_vector_direct@@Base+0x52>
  40a045:	mov    rax,QWORD PTR [rbp-0x8]
  40a049:	jmp    40a084 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  40a04b:	mov    rdx,QWORD PTR [rbp-0x30]
  40a04f:	mov    rsi,QWORD PTR [rbp-0x20]
  40a053:	mov    rax,QWORD PTR [rbp-0x18]
  40a057:	mov    r9d,0xffffffff
  40a05d:	mov    r8d,0x1
  40a063:	mov    ecx,0x1
  40a068:	mov    rdi,rax
  40a06b:	call   40939c <flatcc_builder_create_vector@@Base>
  40a070:	mov    DWORD PTR [rbp-0x8],eax
  40a073:	mov    eax,DWORD PTR [rbp-0x8]
  40a076:	test   eax,eax
  40a078:	jne    40a080 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  40a07a:	mov    rax,QWORD PTR [rbp-0x8]
  40a07e:	jmp    40a084 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  40a080:	mov    rax,QWORD PTR [rbp-0x8]
  40a084:	leave  
  40a085:	ret    

000000000040a086 <flatcc_builder_start_union_vector@@Base>:
  40a086:	endbr64 
  40a08a:	push   rbp
  40a08b:	mov    rbp,rsp
  40a08e:	sub    rsp,0x10
  40a092:	mov    QWORD PTR [rbp-0x8],rdi
  40a096:	mov    rax,QWORD PTR [rbp-0x8]
  40a09a:	mov    esi,0x4
  40a09f:	mov    rdi,rax
  40a0a2:	call   4069f1 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40a0a7:	test   eax,eax
  40a0a9:	je     40a0b2 <flatcc_builder_start_union_vector@@Base+0x2c>
  40a0ab:	mov    eax,0xffffffff
  40a0b0:	jmp    40a0f4 <flatcc_builder_start_union_vector@@Base+0x6e>
  40a0b2:	mov    rax,QWORD PTR [rbp-0x8]
  40a0b6:	mov    rax,QWORD PTR [rax+0x30]
  40a0ba:	mov    DWORD PTR [rax+0x10],0x8
  40a0c1:	mov    rax,QWORD PTR [rbp-0x8]
  40a0c5:	mov    rax,QWORD PTR [rax+0x30]
  40a0c9:	mov    DWORD PTR [rax+0x14],0x0
  40a0d0:	mov    rax,QWORD PTR [rbp-0x8]
  40a0d4:	mov    rax,QWORD PTR [rax+0x30]
  40a0d8:	mov    WORD PTR [rax+0xe],0x7
  40a0de:	mov    rax,QWORD PTR [rbp-0x8]
  40a0e2:	mov    esi,0xfffffffc
  40a0e7:	mov    rdi,rax
  40a0ea:	call   405bc7 <flatcc_builder_default_alloc@@Base+0x173>
  40a0ef:	mov    eax,0x0
  40a0f4:	leave  
  40a0f5:	ret    

000000000040a0f6 <flatcc_builder_end_union_vector@@Base>:
  40a0f6:	endbr64 
  40a0fa:	push   rbp
  40a0fb:	mov    rbp,rsp
  40a0fe:	sub    rsp,0x40
  40a102:	mov    QWORD PTR [rbp-0x38],rdi
  40a106:	mov    DWORD PTR [rbp-0x8],0x0
  40a10d:	mov    DWORD PTR [rbp-0x4],0x0
  40a114:	mov    rax,QWORD PTR [rbp-0x38]
  40a118:	mov    rax,QWORD PTR [rax+0x30]
  40a11c:	movzx  eax,WORD PTR [rax+0xe]
  40a120:	cmp    ax,0x7
  40a124:	je     40a145 <flatcc_builder_end_union_vector@@Base+0x4f>
  40a126:	lea    rcx,[rip+0x3113]        # 40d240 <flatcc_builder_padding_base@@Base+0xb80>
  40a12d:	mov    edx,0x651
  40a132:	lea    rsi,[rip+0x2787]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a139:	lea    rdi,[rip+0x2b18]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a140:	call   403160 <__assert_fail@plt>
  40a145:	mov    rax,QWORD PTR [rbp-0x38]
  40a149:	mov    rdi,rax
  40a14c:	call   40a255 <flatcc_builder_union_vector_count@@Base>
  40a151:	mov    QWORD PTR [rbp-0x28],rax
  40a155:	mov    rax,QWORD PTR [rbp-0x28]
  40a159:	mov    edx,eax
  40a15b:	mov    eax,edx
  40a15d:	shl    eax,0x2
  40a160:	add    edx,eax
  40a162:	mov    rax,QWORD PTR [rbp-0x38]
  40a166:	mov    esi,edx
  40a168:	mov    rdi,rax
  40a16b:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  40a170:	mov    QWORD PTR [rbp-0x20],rax
  40a174:	cmp    QWORD PTR [rbp-0x20],0x0
  40a179:	jne    40a184 <flatcc_builder_end_union_vector@@Base+0x8e>
  40a17b:	mov    rax,QWORD PTR [rbp-0x8]
  40a17f:	jmp    40a23d <flatcc_builder_end_union_vector@@Base+0x147>
  40a184:	mov    rax,QWORD PTR [rbp-0x28]
  40a188:	lea    rdx,[rax*4+0x0]
  40a190:	mov    rax,QWORD PTR [rbp-0x20]
  40a194:	add    rax,rdx
  40a197:	mov    QWORD PTR [rbp-0x18],rax
  40a19b:	mov    rax,QWORD PTR [rbp-0x38]
  40a19f:	mov    rdi,rax
  40a1a2:	call   40a23f <flatcc_builder_union_vector_edit@@Base>
  40a1a7:	mov    QWORD PTR [rbp-0x10],rax
  40a1ab:	mov    QWORD PTR [rbp-0x30],0x0
  40a1b3:	jmp    40a207 <flatcc_builder_end_union_vector@@Base+0x111>
  40a1b5:	mov    rax,QWORD PTR [rbp-0x30]
  40a1b9:	lea    rdx,[rax*8+0x0]
  40a1c1:	mov    rax,QWORD PTR [rbp-0x10]
  40a1c5:	add    rax,rdx
  40a1c8:	mov    rcx,QWORD PTR [rbp-0x18]
  40a1cc:	mov    rdx,QWORD PTR [rbp-0x30]
  40a1d0:	add    rdx,rcx
  40a1d3:	movzx  eax,BYTE PTR [rax]
  40a1d6:	mov    BYTE PTR [rdx],al
  40a1d8:	mov    rax,QWORD PTR [rbp-0x30]
  40a1dc:	lea    rdx,[rax*8+0x0]
  40a1e4:	mov    rax,QWORD PTR [rbp-0x10]
  40a1e8:	add    rax,rdx
  40a1eb:	mov    rdx,QWORD PTR [rbp-0x30]
  40a1ef:	lea    rcx,[rdx*4+0x0]
  40a1f7:	mov    rdx,QWORD PTR [rbp-0x20]
  40a1fb:	add    rdx,rcx
  40a1fe:	mov    eax,DWORD PTR [rax+0x4]
  40a201:	mov    DWORD PTR [rdx],eax
  40a203:	inc    QWORD PTR [rbp-0x30]
  40a207:	mov    rax,QWORD PTR [rbp-0x30]
  40a20b:	cmp    rax,QWORD PTR [rbp-0x28]
  40a20f:	jb     40a1b5 <flatcc_builder_end_union_vector@@Base+0xbf>
  40a211:	mov    rcx,QWORD PTR [rbp-0x28]
  40a215:	mov    rdx,QWORD PTR [rbp-0x20]
  40a219:	mov    rsi,QWORD PTR [rbp-0x18]
  40a21d:	mov    rax,QWORD PTR [rbp-0x38]
  40a221:	mov    rdi,rax
  40a224:	call   409ff9 <flatcc_builder_create_union_vector_direct@@Base>
  40a229:	mov    QWORD PTR [rbp-0x8],rax
  40a22d:	mov    rax,QWORD PTR [rbp-0x38]
  40a231:	mov    rdi,rax
  40a234:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40a239:	mov    rax,QWORD PTR [rbp-0x8]
  40a23d:	leave  
  40a23e:	ret    

000000000040a23f <flatcc_builder_union_vector_edit@@Base>:
  40a23f:	endbr64 
  40a243:	push   rbp
  40a244:	mov    rbp,rsp
  40a247:	mov    QWORD PTR [rbp-0x8],rdi
  40a24b:	mov    rax,QWORD PTR [rbp-0x8]
  40a24f:	mov    rax,QWORD PTR [rax+0x18]
  40a253:	pop    rbp
  40a254:	ret    

000000000040a255 <flatcc_builder_union_vector_count@@Base>:
  40a255:	endbr64 
  40a259:	push   rbp
  40a25a:	mov    rbp,rsp
  40a25d:	mov    QWORD PTR [rbp-0x8],rdi
  40a261:	mov    rax,QWORD PTR [rbp-0x8]
  40a265:	mov    rax,QWORD PTR [rax+0x30]
  40a269:	mov    eax,DWORD PTR [rax+0x14]
  40a26c:	mov    eax,eax
  40a26e:	pop    rbp
  40a26f:	ret    

000000000040a270 <flatcc_builder_extend_union_vector@@Base>:
  40a270:	endbr64 
  40a274:	push   rbp
  40a275:	mov    rbp,rsp
  40a278:	sub    rsp,0x10
  40a27c:	mov    QWORD PTR [rbp-0x8],rdi
  40a280:	mov    QWORD PTR [rbp-0x10],rsi
  40a284:	mov    rax,QWORD PTR [rbp-0x10]
  40a288:	mov    ecx,eax
  40a28a:	mov    rax,QWORD PTR [rbp-0x8]
  40a28e:	mov    edx,0x1fffffff
  40a293:	mov    esi,ecx
  40a295:	mov    rdi,rax
  40a298:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  40a29d:	test   eax,eax
  40a29f:	je     40a2a8 <flatcc_builder_extend_union_vector@@Base+0x38>
  40a2a1:	mov    eax,0x0
  40a2a6:	jmp    40a2c1 <flatcc_builder_extend_union_vector@@Base+0x51>
  40a2a8:	mov    rax,QWORD PTR [rbp-0x10]
  40a2ac:	lea    edx,[rax*8+0x0]
  40a2b3:	mov    rax,QWORD PTR [rbp-0x8]
  40a2b7:	mov    esi,edx
  40a2b9:	mov    rdi,rax
  40a2bc:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  40a2c1:	leave  
  40a2c2:	ret    

000000000040a2c3 <flatcc_builder_truncate_union_vector@@Base>:
  40a2c3:	endbr64 
  40a2c7:	push   rbp
  40a2c8:	mov    rbp,rsp
  40a2cb:	sub    rsp,0x10
  40a2cf:	mov    QWORD PTR [rbp-0x8],rdi
  40a2d3:	mov    QWORD PTR [rbp-0x10],rsi
  40a2d7:	mov    rax,QWORD PTR [rbp-0x8]
  40a2db:	mov    rax,QWORD PTR [rax+0x30]
  40a2df:	movzx  eax,WORD PTR [rax+0xe]
  40a2e3:	cmp    ax,0x7
  40a2e7:	je     40a308 <flatcc_builder_truncate_union_vector@@Base+0x45>
  40a2e9:	lea    rcx,[rip+0x2f70]        # 40d260 <flatcc_builder_padding_base@@Base+0xba0>
  40a2f0:	mov    edx,0x681
  40a2f5:	lea    rsi,[rip+0x25c4]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a2fc:	lea    rdi,[rip+0x2955]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a303:	call   403160 <__assert_fail@plt>
  40a308:	mov    rax,QWORD PTR [rbp-0x8]
  40a30c:	mov    rax,QWORD PTR [rax+0x30]
  40a310:	mov    eax,DWORD PTR [rax+0x14]
  40a313:	mov    rdx,QWORD PTR [rbp-0x10]
  40a317:	cmp    eax,edx
  40a319:	jae    40a354 <flatcc_builder_truncate_union_vector@@Base+0x91>
  40a31b:	mov    rax,QWORD PTR [rbp-0x8]
  40a31f:	mov    rax,QWORD PTR [rax+0x30]
  40a323:	mov    eax,DWORD PTR [rax+0x14]
  40a326:	mov    rdx,QWORD PTR [rbp-0x10]
  40a32a:	cmp    eax,edx
  40a32c:	jae    40a34d <flatcc_builder_truncate_union_vector@@Base+0x8a>
  40a32e:	lea    rcx,[rip+0x2f2b]        # 40d260 <flatcc_builder_padding_base@@Base+0xba0>
  40a335:	mov    edx,0x682
  40a33a:	lea    rsi,[rip+0x257f]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a341:	lea    rdi,[rip+0x27c0]        # 40cb08 <flatcc_builder_padding_base@@Base+0x448>
  40a348:	call   403160 <__assert_fail@plt>
  40a34d:	mov    eax,0xffffffff
  40a352:	jmp    40a397 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  40a354:	mov    rax,QWORD PTR [rbp-0x8]
  40a358:	mov    rax,QWORD PTR [rax+0x30]
  40a35c:	mov    edx,DWORD PTR [rax+0x14]
  40a35f:	mov    rax,QWORD PTR [rbp-0x10]
  40a363:	mov    ecx,eax
  40a365:	mov    rax,QWORD PTR [rbp-0x8]
  40a369:	mov    rax,QWORD PTR [rax+0x30]
  40a36d:	sub    edx,ecx
  40a36f:	mov    DWORD PTR [rax+0x14],edx
  40a372:	mov    rax,QWORD PTR [rbp-0x8]
  40a376:	mov    rax,QWORD PTR [rax+0x30]
  40a37a:	mov    eax,DWORD PTR [rax+0x10]
  40a37d:	mov    rdx,QWORD PTR [rbp-0x10]
  40a381:	imul   edx,eax
  40a384:	mov    rax,QWORD PTR [rbp-0x8]
  40a388:	mov    esi,edx
  40a38a:	mov    rdi,rax
  40a38d:	call   405d3a <flatcc_builder_default_alloc@@Base+0x2e6>
  40a392:	mov    eax,0x0
  40a397:	leave  
  40a398:	ret    

000000000040a399 <flatcc_builder_union_vector_push@@Base>:
  40a399:	endbr64 
  40a39d:	push   rbp
  40a39e:	mov    rbp,rsp
  40a3a1:	sub    rsp,0x20
  40a3a5:	mov    QWORD PTR [rbp-0x18],rdi
  40a3a9:	mov    QWORD PTR [rbp-0x20],rsi
  40a3ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a3b1:	mov    rax,QWORD PTR [rax+0x30]
  40a3b5:	movzx  eax,WORD PTR [rax+0xe]
  40a3b9:	cmp    ax,0x7
  40a3bd:	je     40a3de <flatcc_builder_union_vector_push@@Base+0x45>
  40a3bf:	lea    rcx,[rip+0x2eda]        # 40d2a0 <flatcc_builder_padding_base@@Base+0xbe0>
  40a3c6:	mov    edx,0x68d
  40a3cb:	lea    rsi,[rip+0x24ee]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a3d2:	lea    rdi,[rip+0x287f]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a3d9:	call   403160 <__assert_fail@plt>
  40a3de:	mov    rax,QWORD PTR [rbp-0x18]
  40a3e2:	mov    rax,QWORD PTR [rax+0x30]
  40a3e6:	mov    eax,DWORD PTR [rax+0x14]
  40a3e9:	cmp    eax,0x1fffffff
  40a3ee:	jne    40a3f7 <flatcc_builder_union_vector_push@@Base+0x5e>
  40a3f0:	mov    eax,0x0
  40a3f5:	jmp    40a441 <flatcc_builder_union_vector_push@@Base+0xa8>
  40a3f7:	mov    rax,QWORD PTR [rbp-0x18]
  40a3fb:	mov    rax,QWORD PTR [rax+0x30]
  40a3ff:	mov    edx,DWORD PTR [rax+0x14]
  40a402:	mov    rax,QWORD PTR [rbp-0x18]
  40a406:	mov    rax,QWORD PTR [rax+0x30]
  40a40a:	inc    edx
  40a40c:	mov    DWORD PTR [rax+0x14],edx
  40a40f:	mov    rax,QWORD PTR [rbp-0x18]
  40a413:	mov    esi,0x8
  40a418:	mov    rdi,rax
  40a41b:	call   405cbe <flatcc_builder_default_alloc@@Base+0x26a>
  40a420:	mov    QWORD PTR [rbp-0x8],rax
  40a424:	cmp    QWORD PTR [rbp-0x8],0x0
  40a429:	jne    40a432 <flatcc_builder_union_vector_push@@Base+0x99>
  40a42b:	mov    eax,0x0
  40a430:	jmp    40a441 <flatcc_builder_union_vector_push@@Base+0xa8>
  40a432:	mov    rax,QWORD PTR [rbp-0x8]
  40a436:	mov    rdx,QWORD PTR [rbp-0x20]
  40a43a:	mov    QWORD PTR [rax],rdx
  40a43d:	mov    rax,QWORD PTR [rbp-0x8]
  40a441:	leave  
  40a442:	ret    

000000000040a443 <flatcc_builder_append_union_vector@@Base>:
  40a443:	endbr64 
  40a447:	push   rbp
  40a448:	mov    rbp,rsp
  40a44b:	sub    rsp,0x20
  40a44f:	mov    QWORD PTR [rbp-0x8],rdi
  40a453:	mov    QWORD PTR [rbp-0x10],rsi
  40a457:	mov    QWORD PTR [rbp-0x18],rdx
  40a45b:	mov    rax,QWORD PTR [rbp-0x8]
  40a45f:	mov    rax,QWORD PTR [rax+0x30]
  40a463:	movzx  eax,WORD PTR [rax+0xe]
  40a467:	cmp    ax,0x7
  40a46b:	je     40a48c <flatcc_builder_append_union_vector@@Base+0x49>
  40a46d:	lea    rcx,[rip+0x2e6c]        # 40d2e0 <flatcc_builder_padding_base@@Base+0xc20>
  40a474:	mov    edx,0x69c
  40a479:	lea    rsi,[rip+0x2440]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a480:	lea    rdi,[rip+0x27d1]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a487:	call   403160 <__assert_fail@plt>
  40a48c:	mov    rax,QWORD PTR [rbp-0x18]
  40a490:	mov    ecx,eax
  40a492:	mov    rax,QWORD PTR [rbp-0x8]
  40a496:	mov    edx,0x1fffffff
  40a49b:	mov    esi,ecx
  40a49d:	mov    rdi,rax
  40a4a0:	call   407c63 <flatcc_builder_end_struct@@Base+0x92>
  40a4a5:	test   eax,eax
  40a4a7:	je     40a4b0 <flatcc_builder_append_union_vector@@Base+0x6d>
  40a4a9:	mov    eax,0x0
  40a4ae:	jmp    40a4ce <flatcc_builder_append_union_vector@@Base+0x8b>
  40a4b0:	mov    rax,QWORD PTR [rbp-0x18]
  40a4b4:	lea    edx,[rax*8+0x0]
  40a4bb:	mov    rcx,QWORD PTR [rbp-0x10]
  40a4bf:	mov    rax,QWORD PTR [rbp-0x8]
  40a4c3:	mov    rsi,rcx
  40a4c6:	mov    rdi,rax
  40a4c9:	call   405d86 <flatcc_builder_default_alloc@@Base+0x332>
  40a4ce:	leave  
  40a4cf:	ret    

000000000040a4d0 <flatcc_builder_create_string@@Base>:
  40a4d0:	endbr64 
  40a4d4:	push   rbp
  40a4d5:	mov    rbp,rsp
  40a4d8:	sub    rsp,0xd0
  40a4df:	mov    QWORD PTR [rbp-0xb8],rdi
  40a4e6:	mov    QWORD PTR [rbp-0xc0],rsi
  40a4ed:	mov    QWORD PTR [rbp-0xc8],rdx
  40a4f4:	mov    rax,QWORD PTR fs:0x28
  40a4fd:	mov    QWORD PTR [rbp-0x8],rax
  40a501:	xor    eax,eax
  40a503:	mov    eax,0xffffffff
  40a508:	cmp    QWORD PTR [rbp-0xc8],rax
  40a50f:	jbe    40a51b <flatcc_builder_create_string@@Base+0x4b>
  40a511:	mov    eax,0x0
  40a516:	jmp    40a6be <flatcc_builder_create_string@@Base+0x1ee>
  40a51b:	mov    rax,QWORD PTR [rbp-0xc8]
  40a522:	mov    edi,eax
  40a524:	call   405994 <main@@Base+0x266>
  40a529:	mov    DWORD PTR [rbp-0xa8],eax
  40a52f:	mov    rax,QWORD PTR [rbp-0xc8]
  40a536:	lea    ecx,[rax+0x1]
  40a539:	mov    rax,QWORD PTR [rbp-0xb8]
  40a540:	mov    edx,0x4
  40a545:	mov    esi,ecx
  40a547:	mov    rdi,rax
  40a54a:	call   406c93 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40a54f:	inc    eax
  40a551:	mov    DWORD PTR [rbp-0xa4],eax
  40a557:	mov    QWORD PTR [rbp-0xa0],0x0
  40a562:	mov    DWORD PTR [rbp-0x98],0x0
  40a56c:	mov    rax,QWORD PTR [rbp-0xa0]
  40a573:	add    rax,0x4
  40a577:	mov    QWORD PTR [rbp-0xa0],rax
  40a57e:	mov    eax,DWORD PTR [rbp-0x98]
  40a584:	cdqe   
  40a586:	shl    rax,0x4
  40a58a:	add    rax,rbp
  40a58d:	lea    rdx,[rax-0x90]
  40a594:	lea    rax,[rbp-0xa8]
  40a59b:	mov    QWORD PTR [rdx],rax
  40a59e:	mov    eax,DWORD PTR [rbp-0x98]
  40a5a4:	cdqe   
  40a5a6:	shl    rax,0x4
  40a5aa:	add    rax,rbp
  40a5ad:	sub    rax,0x88
  40a5b3:	mov    QWORD PTR [rax],0x4
  40a5ba:	mov    eax,DWORD PTR [rbp-0x98]
  40a5c0:	inc    eax
  40a5c2:	mov    DWORD PTR [rbp-0x98],eax
  40a5c8:	cmp    QWORD PTR [rbp-0xc8],0x0
  40a5d0:	je     40a638 <flatcc_builder_create_string@@Base+0x168>
  40a5d2:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a5d9:	mov    rax,QWORD PTR [rbp-0xc8]
  40a5e0:	add    rax,rdx
  40a5e3:	mov    QWORD PTR [rbp-0xa0],rax
  40a5ea:	mov    eax,DWORD PTR [rbp-0x98]
  40a5f0:	cdqe   
  40a5f2:	shl    rax,0x4
  40a5f6:	add    rax,rbp
  40a5f9:	lea    rdx,[rax-0x90]
  40a600:	mov    rax,QWORD PTR [rbp-0xc0]
  40a607:	mov    QWORD PTR [rdx],rax
  40a60a:	mov    eax,DWORD PTR [rbp-0x98]
  40a610:	cdqe   
  40a612:	shl    rax,0x4
  40a616:	add    rax,rbp
  40a619:	lea    rdx,[rax-0x88]
  40a620:	mov    rax,QWORD PTR [rbp-0xc8]
  40a627:	mov    QWORD PTR [rdx],rax
  40a62a:	mov    eax,DWORD PTR [rbp-0x98]
  40a630:	inc    eax
  40a632:	mov    DWORD PTR [rbp-0x98],eax
  40a638:	cmp    DWORD PTR [rbp-0xa4],0x0
  40a63f:	je     40a6a5 <flatcc_builder_create_string@@Base+0x1d5>
  40a641:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a648:	mov    eax,DWORD PTR [rbp-0xa4]
  40a64e:	add    rax,rdx
  40a651:	mov    QWORD PTR [rbp-0xa0],rax
  40a658:	mov    eax,DWORD PTR [rbp-0x98]
  40a65e:	cdqe   
  40a660:	shl    rax,0x4
  40a664:	add    rax,rbp
  40a667:	sub    rax,0x90
  40a66d:	mov    rdx,0x40c6c0
  40a674:	mov    QWORD PTR [rax],rdx
  40a677:	mov    edx,DWORD PTR [rbp-0x98]
  40a67d:	mov    eax,DWORD PTR [rbp-0xa4]
  40a683:	movsxd rdx,edx
  40a686:	shl    rdx,0x4
  40a68a:	add    rdx,rbp
  40a68d:	sub    rdx,0x88
  40a694:	mov    QWORD PTR [rdx],rax
  40a697:	mov    eax,DWORD PTR [rbp-0x98]
  40a69d:	inc    eax
  40a69f:	mov    DWORD PTR [rbp-0x98],eax
  40a6a5:	lea    rdx,[rbp-0xa0]
  40a6ac:	mov    rax,QWORD PTR [rbp-0xb8]
  40a6b3:	mov    rsi,rdx
  40a6b6:	mov    rdi,rax
  40a6b9:	call   406cdd <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40a6be:	mov    rcx,QWORD PTR [rbp-0x8]
  40a6c2:	xor    rcx,QWORD PTR fs:0x28
  40a6cb:	je     40a6d2 <flatcc_builder_create_string@@Base+0x202>
  40a6cd:	call   403150 <__stack_chk_fail@plt>
  40a6d2:	leave  
  40a6d3:	ret    

000000000040a6d4 <flatcc_builder_create_string_str@@Base>:
  40a6d4:	endbr64 
  40a6d8:	push   rbp
  40a6d9:	mov    rbp,rsp
  40a6dc:	sub    rsp,0x10
  40a6e0:	mov    QWORD PTR [rbp-0x8],rdi
  40a6e4:	mov    QWORD PTR [rbp-0x10],rsi
  40a6e8:	mov    rax,QWORD PTR [rbp-0x10]
  40a6ec:	mov    rdi,rax
  40a6ef:	call   403140 <strlen@plt>
  40a6f4:	mov    rdx,rax
  40a6f7:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6fb:	mov    rax,QWORD PTR [rbp-0x8]
  40a6ff:	mov    rsi,rcx
  40a702:	mov    rdi,rax
  40a705:	call   40a4d0 <flatcc_builder_create_string@@Base>
  40a70a:	leave  
  40a70b:	ret    

000000000040a70c <flatcc_builder_create_string_strn@@Base>:
  40a70c:	endbr64 
  40a710:	push   rbp
  40a711:	mov    rbp,rsp
  40a714:	sub    rsp,0x20
  40a718:	mov    QWORD PTR [rbp-0x8],rdi
  40a71c:	mov    QWORD PTR [rbp-0x10],rsi
  40a720:	mov    QWORD PTR [rbp-0x18],rdx
  40a724:	mov    rdx,QWORD PTR [rbp-0x18]
  40a728:	mov    rax,QWORD PTR [rbp-0x10]
  40a72c:	mov    rsi,rdx
  40a72f:	mov    rdi,rax
  40a732:	call   405a14 <main@@Base+0x2e6>
  40a737:	mov    rdx,rax
  40a73a:	mov    rcx,QWORD PTR [rbp-0x10]
  40a73e:	mov    rax,QWORD PTR [rbp-0x8]
  40a742:	mov    rsi,rcx
  40a745:	mov    rdi,rax
  40a748:	call   40a4d0 <flatcc_builder_create_string@@Base>
  40a74d:	leave  
  40a74e:	ret    

000000000040a74f <flatcc_builder_end_string@@Base>:
  40a74f:	endbr64 
  40a753:	push   rbp
  40a754:	mov    rbp,rsp
  40a757:	sub    rsp,0x20
  40a75b:	mov    QWORD PTR [rbp-0x18],rdi
  40a75f:	mov    rax,QWORD PTR [rbp-0x18]
  40a763:	mov    rax,QWORD PTR [rax+0x30]
  40a767:	movzx  eax,WORD PTR [rax+0xe]
  40a76b:	cmp    ax,0x6
  40a76f:	je     40a790 <flatcc_builder_end_string@@Base+0x41>
  40a771:	lea    rcx,[rip+0x2b98]        # 40d310 <flatcc_builder_padding_base@@Base+0xc50>
  40a778:	mov    edx,0x6c4
  40a77d:	lea    rsi,[rip+0x213c]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a784:	lea    rdi,[rip+0x2325]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  40a78b:	call   403160 <__assert_fail@plt>
  40a790:	mov    rax,QWORD PTR [rbp-0x18]
  40a794:	mov    rax,QWORD PTR [rax+0x30]
  40a798:	mov    edx,DWORD PTR [rax+0x14]
  40a79b:	mov    rax,QWORD PTR [rbp-0x18]
  40a79f:	mov    eax,DWORD PTR [rax+0x20]
  40a7a2:	cmp    edx,eax
  40a7a4:	je     40a7c5 <flatcc_builder_end_string@@Base+0x76>
  40a7a6:	lea    rcx,[rip+0x2b63]        # 40d310 <flatcc_builder_padding_base@@Base+0xc50>
  40a7ad:	mov    edx,0x6c5
  40a7b2:	lea    rsi,[rip+0x2107]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a7b9:	lea    rdi,[rip+0x24d0]        # 40cc90 <flatcc_builder_padding_base@@Base+0x5d0>
  40a7c0:	call   403160 <__assert_fail@plt>
  40a7c5:	mov    rax,QWORD PTR [rbp-0x18]
  40a7c9:	mov    eax,DWORD PTR [rax+0x20]
  40a7cc:	mov    edx,eax
  40a7ce:	mov    rax,QWORD PTR [rbp-0x18]
  40a7d2:	mov    rcx,QWORD PTR [rax+0x18]
  40a7d6:	mov    rax,QWORD PTR [rbp-0x18]
  40a7da:	mov    rsi,rcx
  40a7dd:	mov    rdi,rax
  40a7e0:	call   40a4d0 <flatcc_builder_create_string@@Base>
  40a7e5:	mov    DWORD PTR [rbp-0x4],eax
  40a7e8:	cmp    DWORD PTR [rbp-0x4],0x0
  40a7ec:	jne    40a7f5 <flatcc_builder_end_string@@Base+0xa6>
  40a7ee:	mov    eax,0x0
  40a7f3:	jmp    40a804 <flatcc_builder_end_string@@Base+0xb5>
  40a7f5:	mov    rax,QWORD PTR [rbp-0x18]
  40a7f9:	mov    rdi,rax
  40a7fc:	call   406bcc <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40a801:	mov    eax,DWORD PTR [rbp-0x4]
  40a804:	leave  
  40a805:	ret    

000000000040a806 <flatcc_builder_string_edit@@Base>:
  40a806:	endbr64 
  40a80a:	push   rbp
  40a80b:	mov    rbp,rsp
  40a80e:	mov    QWORD PTR [rbp-0x8],rdi
  40a812:	mov    rax,QWORD PTR [rbp-0x8]
  40a816:	mov    rax,QWORD PTR [rax+0x18]
  40a81a:	pop    rbp
  40a81b:	ret    

000000000040a81c <flatcc_builder_string_len@@Base>:
  40a81c:	endbr64 
  40a820:	push   rbp
  40a821:	mov    rbp,rsp
  40a824:	mov    QWORD PTR [rbp-0x8],rdi
  40a828:	mov    rax,QWORD PTR [rbp-0x8]
  40a82c:	mov    rax,QWORD PTR [rax+0x30]
  40a830:	mov    eax,DWORD PTR [rax+0x14]
  40a833:	mov    eax,eax
  40a835:	pop    rbp
  40a836:	ret    

000000000040a837 <flatcc_builder_table_add@@Base>:
  40a837:	endbr64 
  40a83b:	push   rbp
  40a83c:	mov    rbp,rsp
  40a83f:	sub    rsp,0x20
  40a843:	mov    QWORD PTR [rbp-0x8],rdi
  40a847:	mov    DWORD PTR [rbp-0xc],esi
  40a84a:	mov    QWORD PTR [rbp-0x18],rdx
  40a84e:	mov    eax,ecx
  40a850:	mov    WORD PTR [rbp-0x10],ax
  40a854:	mov    rax,QWORD PTR [rbp-0x8]
  40a858:	mov    rax,QWORD PTR [rax+0x30]
  40a85c:	movzx  eax,WORD PTR [rax+0xe]
  40a860:	cmp    ax,0x3
  40a864:	je     40a885 <flatcc_builder_table_add@@Base+0x4e>
  40a866:	lea    rcx,[rip+0x2ac3]        # 40d330 <flatcc_builder_padding_base@@Base+0xc70>
  40a86d:	mov    edx,0x6ed
  40a872:	lea    rsi,[rip+0x2047]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a879:	lea    rdi,[rip+0x2318]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40a880:	call   403160 <__assert_fail@plt>
  40a885:	cmp    DWORD PTR [rbp-0xc],0x0
  40a889:	js     40a894 <flatcc_builder_table_add@@Base+0x5d>
  40a88b:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a892:	jle    40a8b3 <flatcc_builder_table_add@@Base+0x7c>
  40a894:	lea    rcx,[rip+0x2a95]        # 40d330 <flatcc_builder_padding_base@@Base+0xc70>
  40a89b:	mov    edx,0x6ee
  40a8a0:	lea    rsi,[rip+0x2019]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a8a7:	lea    rdi,[rip+0x240a]        # 40ccb8 <flatcc_builder_padding_base@@Base+0x5f8>
  40a8ae:	call   403160 <__assert_fail@plt>
  40a8b3:	mov    rax,QWORD PTR [rbp-0x8]
  40a8b7:	movzx  eax,WORD PTR [rax+0xea]
  40a8be:	cmp    WORD PTR [rbp-0x10],ax
  40a8c2:	jbe    40a8d3 <flatcc_builder_table_add@@Base+0x9c>
  40a8c4:	mov    rdx,QWORD PTR [rbp-0x8]
  40a8c8:	movzx  eax,WORD PTR [rbp-0x10]
  40a8cc:	mov    WORD PTR [rdx+0xea],ax
  40a8d3:	mov    rax,QWORD PTR [rbp-0x8]
  40a8d7:	mov    rax,QWORD PTR [rax+0x8]
  40a8db:	mov    edx,DWORD PTR [rbp-0xc]
  40a8de:	movsxd rdx,edx
  40a8e1:	add    rdx,rdx
  40a8e4:	add    rax,rdx
  40a8e7:	movzx  eax,WORD PTR [rax]
  40a8ea:	test   ax,ax
  40a8ed:	je     40a90e <flatcc_builder_table_add@@Base+0xd7>
  40a8ef:	lea    rcx,[rip+0x2a3a]        # 40d330 <flatcc_builder_padding_base@@Base+0xc70>
  40a8f6:	mov    edx,0x6f8
  40a8fb:	lea    rsi,[rip+0x1fbe]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a902:	lea    rdi,[rip+0x2017]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40a909:	call   403160 <__assert_fail@plt>
  40a90e:	mov    rax,QWORD PTR [rbp-0x8]
  40a912:	mov    edx,DWORD PTR [rax+0x14]
  40a915:	mov    eax,DWORD PTR [rbp-0xc]
  40a918:	xor    eax,edx
  40a91a:	imul   eax,eax,0x9e3779b1
  40a920:	mov    rdx,QWORD PTR [rbp-0x18]
  40a924:	xor    eax,edx
  40a926:	imul   edx,eax,0x9e3779b1
  40a92c:	mov    rax,QWORD PTR [rbp-0x8]
  40a930:	mov    DWORD PTR [rax+0x14],edx
  40a933:	mov    eax,DWORD PTR [rbp-0xc]
  40a936:	movzx  ecx,ax
  40a939:	movzx  edx,WORD PTR [rbp-0x10]
  40a93d:	mov    rax,QWORD PTR [rbp-0x18]
  40a941:	mov    esi,eax
  40a943:	mov    rax,QWORD PTR [rbp-0x8]
  40a947:	mov    rdi,rax
  40a94a:	call   405dd8 <flatcc_builder_default_alloc@@Base+0x384>
  40a94f:	leave  
  40a950:	ret    

000000000040a951 <flatcc_builder_table_edit@@Base>:
  40a951:	endbr64 
  40a955:	push   rbp
  40a956:	mov    rbp,rsp
  40a959:	sub    rsp,0x10
  40a95d:	mov    QWORD PTR [rbp-0x8],rdi
  40a961:	mov    QWORD PTR [rbp-0x10],rsi
  40a965:	mov    rax,QWORD PTR [rbp-0x8]
  40a969:	mov    rax,QWORD PTR [rax+0x30]
  40a96d:	movzx  eax,WORD PTR [rax+0xe]
  40a971:	cmp    ax,0x3
  40a975:	je     40a996 <flatcc_builder_table_edit@@Base+0x45>
  40a977:	lea    rcx,[rip+0x29d2]        # 40d350 <flatcc_builder_padding_base@@Base+0xc90>
  40a97e:	mov    edx,0x702
  40a983:	lea    rsi,[rip+0x1f36]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a98a:	lea    rdi,[rip+0x2207]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40a991:	call   403160 <__assert_fail@plt>
  40a996:	mov    rax,QWORD PTR [rbp-0x8]
  40a99a:	mov    rdx,QWORD PTR [rax+0x18]
  40a99e:	mov    rax,QWORD PTR [rbp-0x8]
  40a9a2:	mov    eax,DWORD PTR [rax+0x20]
  40a9a5:	mov    eax,eax
  40a9a7:	sub    rax,QWORD PTR [rbp-0x10]
  40a9ab:	add    rax,rdx
  40a9ae:	leave  
  40a9af:	ret    

000000000040a9b0 <flatcc_builder_table_add_copy@@Base>:
  40a9b0:	endbr64 
  40a9b4:	push   rbp
  40a9b5:	mov    rbp,rsp
  40a9b8:	sub    rsp,0x30
  40a9bc:	mov    QWORD PTR [rbp-0x18],rdi
  40a9c0:	mov    DWORD PTR [rbp-0x1c],esi
  40a9c3:	mov    QWORD PTR [rbp-0x28],rdx
  40a9c7:	mov    QWORD PTR [rbp-0x30],rcx
  40a9cb:	mov    eax,r8d
  40a9ce:	mov    WORD PTR [rbp-0x20],ax
  40a9d2:	movzx  ecx,WORD PTR [rbp-0x20]
  40a9d6:	mov    rdx,QWORD PTR [rbp-0x30]
  40a9da:	mov    esi,DWORD PTR [rbp-0x1c]
  40a9dd:	mov    rax,QWORD PTR [rbp-0x18]
  40a9e1:	mov    rdi,rax
  40a9e4:	call   40a837 <flatcc_builder_table_add@@Base>
  40a9e9:	mov    QWORD PTR [rbp-0x8],rax
  40a9ed:	cmp    QWORD PTR [rbp-0x8],0x0
  40a9f2:	je     40aa0b <flatcc_builder_table_add_copy@@Base+0x5b>
  40a9f4:	mov    rdx,QWORD PTR [rbp-0x30]
  40a9f8:	mov    rcx,QWORD PTR [rbp-0x28]
  40a9fc:	mov    rax,QWORD PTR [rbp-0x8]
  40aa00:	mov    rsi,rcx
  40aa03:	mov    rdi,rax
  40aa06:	call   4031b0 <memcpy@plt>
  40aa0b:	mov    rax,QWORD PTR [rbp-0x8]
  40aa0f:	leave  
  40aa10:	ret    

000000000040aa11 <flatcc_builder_table_add_offset@@Base>:
  40aa11:	endbr64 
  40aa15:	push   rbp
  40aa16:	mov    rbp,rsp
  40aa19:	sub    rsp,0x10
  40aa1d:	mov    QWORD PTR [rbp-0x8],rdi
  40aa21:	mov    DWORD PTR [rbp-0xc],esi
  40aa24:	mov    rax,QWORD PTR [rbp-0x8]
  40aa28:	mov    rax,QWORD PTR [rax+0x30]
  40aa2c:	movzx  eax,WORD PTR [rax+0xe]
  40aa30:	cmp    ax,0x3
  40aa34:	je     40aa55 <flatcc_builder_table_add_offset@@Base+0x44>
  40aa36:	lea    rcx,[rip+0x2943]        # 40d380 <flatcc_builder_padding_base@@Base+0xcc0>
  40aa3d:	mov    edx,0x713
  40aa42:	lea    rsi,[rip+0x1e77]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40aa49:	lea    rdi,[rip+0x2148]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40aa50:	call   403160 <__assert_fail@plt>
  40aa55:	cmp    DWORD PTR [rbp-0xc],0x0
  40aa59:	js     40aa64 <flatcc_builder_table_add_offset@@Base+0x53>
  40aa5b:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40aa62:	jle    40aa83 <flatcc_builder_table_add_offset@@Base+0x72>
  40aa64:	lea    rcx,[rip+0x2915]        # 40d380 <flatcc_builder_padding_base@@Base+0xcc0>
  40aa6b:	mov    edx,0x714
  40aa70:	lea    rsi,[rip+0x1e49]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40aa77:	lea    rdi,[rip+0x223a]        # 40ccb8 <flatcc_builder_padding_base@@Base+0x5f8>
  40aa7e:	call   403160 <__assert_fail@plt>
  40aa83:	mov    rax,QWORD PTR [rbp-0x8]
  40aa87:	mov    rax,QWORD PTR [rax+0x8]
  40aa8b:	mov    edx,DWORD PTR [rbp-0xc]
  40aa8e:	movsxd rdx,edx
  40aa91:	add    rdx,rdx
  40aa94:	add    rax,rdx
  40aa97:	movzx  eax,WORD PTR [rax]
  40aa9a:	test   ax,ax
  40aa9d:	je     40aabe <flatcc_builder_table_add_offset@@Base+0xad>
  40aa9f:	lea    rcx,[rip+0x28da]        # 40d380 <flatcc_builder_padding_base@@Base+0xcc0>
  40aaa6:	mov    edx,0x71b
  40aaab:	lea    rsi,[rip+0x1e0e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40aab2:	lea    rdi,[rip+0x1e67]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40aab9:	call   403160 <__assert_fail@plt>
  40aabe:	mov    rax,QWORD PTR [rbp-0x8]
  40aac2:	mov    edx,DWORD PTR [rax+0x14]
  40aac5:	mov    eax,DWORD PTR [rbp-0xc]
  40aac8:	xor    eax,edx
  40aaca:	imul   eax,eax,0x9e3779b1
  40aad0:	xor    eax,0x4
  40aad3:	imul   edx,eax,0x9e3779b1
  40aad9:	mov    rax,QWORD PTR [rbp-0x8]
  40aadd:	mov    DWORD PTR [rax+0x14],edx
  40aae0:	mov    eax,DWORD PTR [rbp-0xc]
  40aae3:	movzx  edx,ax
  40aae6:	mov    rax,QWORD PTR [rbp-0x8]
  40aaea:	mov    esi,edx
  40aaec:	mov    rdi,rax
  40aaef:	call   405ea0 <flatcc_builder_default_alloc@@Base+0x44c>
  40aaf4:	leave  
  40aaf5:	ret    

000000000040aaf6 <flatcc_builder_push_buffer_alignment@@Base>:
  40aaf6:	endbr64 
  40aafa:	push   rbp
  40aafb:	mov    rbp,rsp
  40aafe:	mov    QWORD PTR [rbp-0x18],rdi
  40ab02:	mov    rax,QWORD PTR [rbp-0x18]
  40ab06:	movzx  eax,WORD PTR [rax+0xe8]
  40ab0d:	mov    WORD PTR [rbp-0x2],ax
  40ab11:	mov    rax,QWORD PTR [rbp-0x18]
  40ab15:	mov    WORD PTR [rax+0xe8],0x4
  40ab1e:	movzx  eax,WORD PTR [rbp-0x2]
  40ab22:	pop    rbp
  40ab23:	ret    

000000000040ab24 <flatcc_builder_pop_buffer_alignment@@Base>:
  40ab24:	endbr64 
  40ab28:	push   rbp
  40ab29:	mov    rbp,rsp
  40ab2c:	sub    rsp,0x10
  40ab30:	mov    QWORD PTR [rbp-0x8],rdi
  40ab34:	mov    eax,esi
  40ab36:	mov    WORD PTR [rbp-0xc],ax
  40ab3a:	movzx  edx,WORD PTR [rbp-0xc]
  40ab3e:	mov    rax,QWORD PTR [rbp-0x8]
  40ab42:	mov    esi,edx
  40ab44:	mov    rdi,rax
  40ab47:	call   4066c0 <flatcc_builder_clear@@Base+0x99>
  40ab4c:	nop
  40ab4d:	leave  
  40ab4e:	ret    

000000000040ab4f <flatcc_builder_get_buffer_alignment@@Base>:
  40ab4f:	endbr64 
  40ab53:	push   rbp
  40ab54:	mov    rbp,rsp
  40ab57:	mov    QWORD PTR [rbp-0x8],rdi
  40ab5b:	mov    rax,QWORD PTR [rbp-0x8]
  40ab5f:	movzx  eax,WORD PTR [rax+0xe8]
  40ab66:	pop    rbp
  40ab67:	ret    

000000000040ab68 <flatcc_builder_set_vtable_clustering@@Base>:
  40ab68:	endbr64 
  40ab6c:	push   rbp
  40ab6d:	mov    rbp,rsp
  40ab70:	mov    QWORD PTR [rbp-0x8],rdi
  40ab74:	mov    DWORD PTR [rbp-0xc],esi
  40ab77:	cmp    DWORD PTR [rbp-0xc],0x0
  40ab7b:	sete   al
  40ab7e:	movzx  edx,al
  40ab81:	mov    rax,QWORD PTR [rbp-0x8]
  40ab85:	mov    DWORD PTR [rax+0x124],edx
  40ab8b:	nop
  40ab8c:	pop    rbp
  40ab8d:	ret    

000000000040ab8e <flatcc_builder_set_block_align@@Base>:
  40ab8e:	endbr64 
  40ab92:	push   rbp
  40ab93:	mov    rbp,rsp
  40ab96:	mov    QWORD PTR [rbp-0x8],rdi
  40ab9a:	mov    eax,esi
  40ab9c:	mov    WORD PTR [rbp-0xc],ax
  40aba0:	mov    rdx,QWORD PTR [rbp-0x8]
  40aba4:	movzx  eax,WORD PTR [rbp-0xc]
  40aba8:	mov    WORD PTR [rdx+0xec],ax
  40abaf:	nop
  40abb0:	pop    rbp
  40abb1:	ret    

000000000040abb2 <flatcc_builder_get_level@@Base>:
  40abb2:	endbr64 
  40abb6:	push   rbp
  40abb7:	mov    rbp,rsp
  40abba:	mov    QWORD PTR [rbp-0x8],rdi
  40abbe:	mov    rax,QWORD PTR [rbp-0x8]
  40abc2:	mov    eax,DWORD PTR [rax+0x104]
  40abc8:	pop    rbp
  40abc9:	ret    

000000000040abca <flatcc_builder_set_max_level@@Base>:
  40abca:	endbr64 
  40abce:	push   rbp
  40abcf:	mov    rbp,rsp
  40abd2:	mov    QWORD PTR [rbp-0x8],rdi
  40abd6:	mov    DWORD PTR [rbp-0xc],esi
  40abd9:	mov    rax,QWORD PTR [rbp-0x8]
  40abdd:	mov    edx,DWORD PTR [rbp-0xc]
  40abe0:	mov    DWORD PTR [rax+0x120],edx
  40abe6:	mov    rax,QWORD PTR [rbp-0x8]
  40abea:	mov    edx,DWORD PTR [rax+0x108]
  40abf0:	mov    rax,QWORD PTR [rbp-0x8]
  40abf4:	mov    eax,DWORD PTR [rax+0x120]
  40abfa:	cmp    edx,eax
  40abfc:	jge    40ac12 <flatcc_builder_set_max_level@@Base+0x48>
  40abfe:	mov    rax,QWORD PTR [rbp-0x8]
  40ac02:	mov    edx,DWORD PTR [rax+0x120]
  40ac08:	mov    rax,QWORD PTR [rbp-0x8]
  40ac0c:	mov    DWORD PTR [rax+0x108],edx
  40ac12:	nop
  40ac13:	pop    rbp
  40ac14:	ret    

000000000040ac15 <flatcc_builder_get_buffer_size@@Base>:
  40ac15:	endbr64 
  40ac19:	push   rbp
  40ac1a:	mov    rbp,rsp
  40ac1d:	mov    QWORD PTR [rbp-0x8],rdi
  40ac21:	mov    rax,QWORD PTR [rbp-0x8]
  40ac25:	mov    edx,DWORD PTR [rax+0xf4]
  40ac2b:	mov    rax,QWORD PTR [rbp-0x8]
  40ac2f:	mov    eax,DWORD PTR [rax+0xf0]
  40ac35:	sub    edx,eax
  40ac37:	mov    eax,edx
  40ac39:	cdqe   
  40ac3b:	pop    rbp
  40ac3c:	ret    

000000000040ac3d <flatcc_builder_get_buffer_start@@Base>:
  40ac3d:	endbr64 
  40ac41:	push   rbp
  40ac42:	mov    rbp,rsp
  40ac45:	mov    QWORD PTR [rbp-0x8],rdi
  40ac49:	mov    rax,QWORD PTR [rbp-0x8]
  40ac4d:	mov    eax,DWORD PTR [rax+0xf0]
  40ac53:	pop    rbp
  40ac54:	ret    

000000000040ac55 <flatcc_builder_get_buffer_end@@Base>:
  40ac55:	endbr64 
  40ac59:	push   rbp
  40ac5a:	mov    rbp,rsp
  40ac5d:	mov    QWORD PTR [rbp-0x8],rdi
  40ac61:	mov    rax,QWORD PTR [rbp-0x8]
  40ac65:	mov    eax,DWORD PTR [rax+0xf4]
  40ac6b:	pop    rbp
  40ac6c:	ret    

000000000040ac6d <flatcc_builder_set_vtable_cache_limit@@Base>:
  40ac6d:	endbr64 
  40ac71:	push   rbp
  40ac72:	mov    rbp,rsp
  40ac75:	mov    QWORD PTR [rbp-0x8],rdi
  40ac79:	mov    QWORD PTR [rbp-0x10],rsi
  40ac7d:	mov    rax,QWORD PTR [rbp-0x8]
  40ac81:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac85:	mov    QWORD PTR [rax+0x118],rdx
  40ac8c:	nop
  40ac8d:	pop    rbp
  40ac8e:	ret    

000000000040ac8f <flatcc_builder_set_identifier@@Base>:
  40ac8f:	endbr64 
  40ac93:	push   rbp
  40ac94:	mov    rbp,rsp
  40ac97:	mov    QWORD PTR [rbp-0x8],rdi
  40ac9b:	mov    QWORD PTR [rbp-0x10],rsi
  40ac9f:	cmp    QWORD PTR [rbp-0x10],0x0
  40aca4:	je     40acac <flatcc_builder_set_identifier@@Base+0x1d>
  40aca6:	mov    rax,QWORD PTR [rbp-0x10]
  40acaa:	jmp    40acb3 <flatcc_builder_set_identifier@@Base+0x24>
  40acac:	mov    rax,0x40c6c0
  40acb3:	mov    rdx,QWORD PTR [rbp-0x8]
  40acb7:	add    rdx,0x110
  40acbe:	mov    eax,DWORD PTR [rax]
  40acc0:	mov    DWORD PTR [rdx],eax
  40acc2:	nop
  40acc3:	pop    rbp
  40acc4:	ret    

000000000040acc5 <flatcc_builder_get_type@@Base>:
  40acc5:	endbr64 
  40acc9:	push   rbp
  40acca:	mov    rbp,rsp
  40accd:	mov    QWORD PTR [rbp-0x8],rdi
  40acd1:	mov    rax,QWORD PTR [rbp-0x8]
  40acd5:	mov    rax,QWORD PTR [rax+0x30]
  40acd9:	test   rax,rax
  40acdc:	je     40acef <flatcc_builder_get_type@@Base+0x2a>
  40acde:	mov    rax,QWORD PTR [rbp-0x8]
  40ace2:	mov    rax,QWORD PTR [rax+0x30]
  40ace6:	movzx  eax,WORD PTR [rax+0xe]
  40acea:	movzx  eax,ax
  40aced:	jmp    40acf4 <flatcc_builder_get_type@@Base+0x2f>
  40acef:	mov    eax,0x0
  40acf4:	pop    rbp
  40acf5:	ret    

000000000040acf6 <flatcc_builder_get_type_at@@Base>:
  40acf6:	endbr64 
  40acfa:	push   rbp
  40acfb:	mov    rbp,rsp
  40acfe:	mov    QWORD PTR [rbp-0x8],rdi
  40ad02:	mov    DWORD PTR [rbp-0xc],esi
  40ad05:	cmp    DWORD PTR [rbp-0xc],0x0
  40ad09:	jle    40ad1a <flatcc_builder_get_type_at@@Base+0x24>
  40ad0b:	mov    rax,QWORD PTR [rbp-0x8]
  40ad0f:	mov    eax,DWORD PTR [rax+0x104]
  40ad15:	cmp    DWORD PTR [rbp-0xc],eax
  40ad18:	jle    40ad21 <flatcc_builder_get_type_at@@Base+0x2b>
  40ad1a:	mov    eax,0x0
  40ad1f:	jmp    40ad55 <flatcc_builder_get_type_at@@Base+0x5f>
  40ad21:	mov    rax,QWORD PTR [rbp-0x8]
  40ad25:	mov    rcx,QWORD PTR [rax+0x30]
  40ad29:	mov    rax,QWORD PTR [rbp-0x8]
  40ad2d:	mov    eax,DWORD PTR [rax+0x104]
  40ad33:	mov    edx,DWORD PTR [rbp-0xc]
  40ad36:	sub    edx,eax
  40ad38:	mov    eax,edx
  40ad3a:	movsxd rdx,eax
  40ad3d:	mov    rax,rdx
  40ad40:	shl    rax,0x3
  40ad44:	add    rax,rdx
  40ad47:	shl    rax,0x2
  40ad4b:	add    rax,rcx
  40ad4e:	movzx  eax,WORD PTR [rax+0xe]
  40ad52:	movzx  eax,ax
  40ad55:	pop    rbp
  40ad56:	ret    

000000000040ad57 <flatcc_builder_get_direct_buffer@@Base>:
  40ad57:	endbr64 
  40ad5b:	push   rbp
  40ad5c:	mov    rbp,rsp
  40ad5f:	sub    rsp,0x10
  40ad63:	mov    QWORD PTR [rbp-0x8],rdi
  40ad67:	mov    QWORD PTR [rbp-0x10],rsi
  40ad6b:	mov    rax,QWORD PTR [rbp-0x8]
  40ad6f:	mov    eax,DWORD PTR [rax+0x128]
  40ad75:	test   eax,eax
  40ad77:	je     40ad95 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  40ad79:	mov    rax,QWORD PTR [rbp-0x8]
  40ad7d:	lea    rdx,[rax+0x130]
  40ad84:	mov    rax,QWORD PTR [rbp-0x10]
  40ad88:	mov    rsi,rax
  40ad8b:	mov    rdi,rdx
  40ad8e:	call   4059bb <main@@Base+0x28d>
  40ad93:	jmp    40adac <flatcc_builder_get_direct_buffer@@Base+0x55>
  40ad95:	cmp    QWORD PTR [rbp-0x10],0x0
  40ad9a:	je     40ada7 <flatcc_builder_get_direct_buffer@@Base+0x50>
  40ad9c:	mov    rax,QWORD PTR [rbp-0x10]
  40ada0:	mov    QWORD PTR [rax],0x0
  40ada7:	mov    eax,0x0
  40adac:	leave  
  40adad:	ret    

000000000040adae <flatcc_builder_copy_buffer@@Base>:
  40adae:	endbr64 
  40adb2:	push   rbp
  40adb3:	mov    rbp,rsp
  40adb6:	sub    rsp,0x20
  40adba:	mov    QWORD PTR [rbp-0x8],rdi
  40adbe:	mov    QWORD PTR [rbp-0x10],rsi
  40adc2:	mov    QWORD PTR [rbp-0x18],rdx
  40adc6:	mov    rax,QWORD PTR [rbp-0x8]
  40adca:	mov    eax,DWORD PTR [rax+0x128]
  40add0:	test   eax,eax
  40add2:	jne    40addb <flatcc_builder_copy_buffer@@Base+0x2d>
  40add4:	mov    eax,0x0
  40add9:	jmp    40ae27 <flatcc_builder_copy_buffer@@Base+0x79>
  40addb:	mov    rax,QWORD PTR [rbp-0x8]
  40addf:	lea    rcx,[rax+0x130]
  40ade6:	mov    rdx,QWORD PTR [rbp-0x18]
  40adea:	mov    rax,QWORD PTR [rbp-0x10]
  40adee:	mov    rsi,rax
  40adf1:	mov    rdi,rcx
  40adf4:	call   40ba62 <flatcc_emitter_copy_buffer@@Base>
  40adf9:	mov    QWORD PTR [rbp-0x10],rax
  40adfd:	cmp    QWORD PTR [rbp-0x10],0x0
  40ae02:	jne    40ae23 <flatcc_builder_copy_buffer@@Base+0x75>
  40ae04:	lea    rcx,[rip+0x2595]        # 40d3a0 <flatcc_builder_padding_base@@Base+0xce0>
  40ae0b:	mov    edx,0x786
  40ae10:	lea    rsi,[rip+0x1aa9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40ae17:	lea    rdi,[rip+0x1ede]        # 40ccfc <flatcc_builder_padding_base@@Base+0x63c>
  40ae1e:	call   403160 <__assert_fail@plt>
  40ae23:	mov    rax,QWORD PTR [rbp-0x10]
  40ae27:	leave  
  40ae28:	ret    

000000000040ae29 <flatcc_builder_finalize_buffer@@Base>:
  40ae29:	endbr64 
  40ae2d:	push   rbp
  40ae2e:	mov    rbp,rsp
  40ae31:	sub    rsp,0x20
  40ae35:	mov    QWORD PTR [rbp-0x18],rdi
  40ae39:	mov    QWORD PTR [rbp-0x20],rsi
  40ae3d:	mov    rax,QWORD PTR [rbp-0x18]
  40ae41:	mov    rdi,rax
  40ae44:	call   40ac15 <flatcc_builder_get_buffer_size@@Base>
  40ae49:	mov    QWORD PTR [rbp-0x10],rax
  40ae4d:	cmp    QWORD PTR [rbp-0x20],0x0
  40ae52:	je     40ae5f <flatcc_builder_finalize_buffer@@Base+0x36>
  40ae54:	mov    rax,QWORD PTR [rbp-0x20]
  40ae58:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae5c:	mov    QWORD PTR [rax],rdx
  40ae5f:	mov    rax,QWORD PTR [rbp-0x10]
  40ae63:	mov    rdi,rax
  40ae66:	call   4031c0 <malloc@plt>
  40ae6b:	mov    QWORD PTR [rbp-0x8],rax
  40ae6f:	cmp    QWORD PTR [rbp-0x8],0x0
  40ae74:	jne    40ae95 <flatcc_builder_finalize_buffer@@Base+0x6c>
  40ae76:	lea    rcx,[rip+0x2543]        # 40d3c0 <flatcc_builder_padding_base@@Base+0xd00>
  40ae7d:	mov    edx,0x798
  40ae82:	lea    rsi,[rip+0x1a37]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40ae89:	lea    rdi,[rip+0x1a90]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40ae90:	call   403160 <__assert_fail@plt>
  40ae95:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae99:	mov    rcx,QWORD PTR [rbp-0x8]
  40ae9d:	mov    rax,QWORD PTR [rbp-0x18]
  40aea1:	mov    rsi,rcx
  40aea4:	mov    rdi,rax
  40aea7:	call   40adae <flatcc_builder_copy_buffer@@Base>
  40aeac:	test   rax,rax
  40aeaf:	jne    40aed0 <flatcc_builder_finalize_buffer@@Base+0xa7>
  40aeb1:	lea    rcx,[rip+0x2508]        # 40d3c0 <flatcc_builder_padding_base@@Base+0xd00>
  40aeb8:	mov    edx,0x79c
  40aebd:	lea    rsi,[rip+0x19fc]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40aec4:	lea    rdi,[rip+0x1a55]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40aecb:	call   403160 <__assert_fail@plt>
  40aed0:	nop
  40aed1:	endbr64 
  40aed5:	cmp    QWORD PTR [rbp-0x8],0x0
  40aeda:	jne    40aeee <flatcc_builder_finalize_buffer@@Base+0xc5>
  40aedc:	cmp    QWORD PTR [rbp-0x20],0x0
  40aee1:	je     40aeee <flatcc_builder_finalize_buffer@@Base+0xc5>
  40aee3:	mov    rax,QWORD PTR [rbp-0x20]
  40aee7:	mov    QWORD PTR [rax],0x0
  40aeee:	mov    rax,QWORD PTR [rbp-0x8]
  40aef2:	leave  
  40aef3:	ret    

000000000040aef4 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40aef4:	endbr64 
  40aef8:	push   rbp
  40aef9:	mov    rbp,rsp
  40aefc:	sub    rsp,0x30
  40af00:	mov    QWORD PTR [rbp-0x28],rdi
  40af04:	mov    QWORD PTR [rbp-0x30],rsi
  40af08:	mov    rax,QWORD PTR [rbp-0x28]
  40af0c:	mov    rdi,rax
  40af0f:	call   40ac15 <flatcc_builder_get_buffer_size@@Base>
  40af14:	mov    QWORD PTR [rbp-0x10],rax
  40af18:	cmp    QWORD PTR [rbp-0x30],0x0
  40af1d:	je     40af2a <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  40af1f:	mov    rax,QWORD PTR [rbp-0x30]
  40af23:	mov    rdx,QWORD PTR [rbp-0x10]
  40af27:	mov    QWORD PTR [rax],rdx
  40af2a:	mov    rax,QWORD PTR [rbp-0x28]
  40af2e:	mov    rdi,rax
  40af31:	call   40ab4f <flatcc_builder_get_buffer_alignment@@Base>
  40af36:	movzx  eax,ax
  40af39:	mov    QWORD PTR [rbp-0x8],rax
  40af3d:	mov    rdx,QWORD PTR [rbp-0x10]
  40af41:	mov    rax,QWORD PTR [rbp-0x8]
  40af45:	add    rax,rdx
  40af48:	lea    rdx,[rax-0x1]
  40af4c:	mov    rax,QWORD PTR [rbp-0x8]
  40af50:	neg    rax
  40af53:	and    rax,rdx
  40af56:	mov    QWORD PTR [rbp-0x10],rax
  40af5a:	mov    rdx,QWORD PTR [rbp-0x10]
  40af5e:	mov    rax,QWORD PTR [rbp-0x8]
  40af62:	mov    rsi,rdx
  40af65:	mov    rdi,rax
  40af68:	call   405907 <main@@Base+0x1d9>
  40af6d:	mov    QWORD PTR [rbp-0x18],rax
  40af71:	cmp    QWORD PTR [rbp-0x18],0x0
  40af76:	je     40afaa <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40af78:	mov    rdx,QWORD PTR [rbp-0x10]
  40af7c:	mov    rcx,QWORD PTR [rbp-0x18]
  40af80:	mov    rax,QWORD PTR [rbp-0x28]
  40af84:	mov    rsi,rcx
  40af87:	mov    rdi,rax
  40af8a:	call   40adae <flatcc_builder_copy_buffer@@Base>
  40af8f:	test   rax,rax
  40af92:	jne    40afad <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  40af94:	mov    rax,QWORD PTR [rbp-0x18]
  40af98:	mov    rdi,rax
  40af9b:	call   403110 <free@plt>
  40afa0:	mov    QWORD PTR [rbp-0x18],0x0
  40afa8:	jmp    40afae <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  40afaa:	nop
  40afab:	jmp    40afae <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  40afad:	nop
  40afae:	cmp    QWORD PTR [rbp-0x18],0x0
  40afb3:	jne    40afc7 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  40afb5:	cmp    QWORD PTR [rbp-0x30],0x0
  40afba:	je     40afc7 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  40afbc:	mov    rax,QWORD PTR [rbp-0x30]
  40afc0:	mov    QWORD PTR [rax],0x0
  40afc7:	mov    rax,QWORD PTR [rbp-0x18]
  40afcb:	leave  
  40afcc:	ret    

000000000040afcd <flatcc_builder_aligned_alloc@@Base>:
  40afcd:	endbr64 
  40afd1:	push   rbp
  40afd2:	mov    rbp,rsp
  40afd5:	sub    rsp,0x10
  40afd9:	mov    QWORD PTR [rbp-0x8],rdi
  40afdd:	mov    QWORD PTR [rbp-0x10],rsi
  40afe1:	mov    rdx,QWORD PTR [rbp-0x10]
  40afe5:	mov    rax,QWORD PTR [rbp-0x8]
  40afe9:	mov    rsi,rdx
  40afec:	mov    rdi,rax
  40afef:	call   405907 <main@@Base+0x1d9>
  40aff4:	leave  
  40aff5:	ret    

000000000040aff6 <flatcc_builder_aligned_free@@Base>:
  40aff6:	endbr64 
  40affa:	push   rbp
  40affb:	mov    rbp,rsp
  40affe:	sub    rsp,0x10
  40b002:	mov    QWORD PTR [rbp-0x8],rdi
  40b006:	mov    rax,QWORD PTR [rbp-0x8]
  40b00a:	mov    rdi,rax
  40b00d:	call   403110 <free@plt>
  40b012:	nop
  40b013:	leave  
  40b014:	ret    

000000000040b015 <flatcc_builder_get_emit_context@@Base>:
  40b015:	endbr64 
  40b019:	push   rbp
  40b01a:	mov    rbp,rsp
  40b01d:	mov    QWORD PTR [rbp-0x8],rdi
  40b021:	mov    rax,QWORD PTR [rbp-0x8]
  40b025:	mov    rax,QWORD PTR [rax+0x38]
  40b029:	pop    rbp
  40b02a:	ret    
  40b02b:	endbr64 
  40b02f:	push   rbp
  40b030:	mov    rbp,rsp
  40b033:	sub    rsp,0x20
  40b037:	mov    QWORD PTR [rbp-0x18],rdi
  40b03b:	mov    QWORD PTR [rbp-0x8],0x0
  40b043:	mov    rax,QWORD PTR [rbp-0x18]
  40b047:	mov    rax,QWORD PTR [rax]
  40b04a:	test   rax,rax
  40b04d:	je     40b0ab <flatcc_builder_get_emit_context@@Base+0x96>
  40b04f:	mov    rax,QWORD PTR [rbp-0x18]
  40b053:	mov    rax,QWORD PTR [rax]
  40b056:	mov    rdx,QWORD PTR [rax+0xb88]
  40b05d:	mov    rax,QWORD PTR [rbp-0x18]
  40b061:	mov    rax,QWORD PTR [rax+0x8]
  40b065:	cmp    rdx,rax
  40b068:	je     40b0ab <flatcc_builder_get_emit_context@@Base+0x96>
  40b06a:	mov    rax,QWORD PTR [rbp-0x18]
  40b06e:	mov    rax,QWORD PTR [rax]
  40b071:	mov    edx,DWORD PTR [rax+0xb90]
  40b077:	mov    rax,QWORD PTR [rbp-0x18]
  40b07b:	mov    rax,QWORD PTR [rax]
  40b07e:	mov    rax,QWORD PTR [rax+0xb88]
  40b085:	sub    edx,0xb80
  40b08b:	mov    DWORD PTR [rax+0xb90],edx
  40b091:	mov    rax,QWORD PTR [rbp-0x18]
  40b095:	mov    rax,QWORD PTR [rax]
  40b098:	mov    rdx,QWORD PTR [rax+0xb88]
  40b09f:	mov    rax,QWORD PTR [rbp-0x18]
  40b0a3:	mov    QWORD PTR [rax],rdx
  40b0a6:	jmp    40b1e3 <flatcc_builder_get_emit_context@@Base+0x1ce>
  40b0ab:	mov    edi,0xb98
  40b0b0:	call   4031c0 <malloc@plt>
  40b0b5:	mov    QWORD PTR [rbp-0x8],rax
  40b0b9:	cmp    QWORD PTR [rbp-0x8],0x0
  40b0be:	jne    40b0ca <flatcc_builder_get_emit_context@@Base+0xb5>
  40b0c0:	mov    eax,0xffffffff
  40b0c5:	jmp    40b231 <flatcc_builder_get_emit_context@@Base+0x21c>
  40b0ca:	mov    rax,QWORD PTR [rbp-0x18]
  40b0ce:	mov    rax,QWORD PTR [rax+0x38]
  40b0d2:	lea    rdx,[rax+0xb80]
  40b0d9:	mov    rax,QWORD PTR [rbp-0x18]
  40b0dd:	mov    QWORD PTR [rax+0x38],rdx
  40b0e1:	mov    rax,QWORD PTR [rbp-0x18]
  40b0e5:	mov    rax,QWORD PTR [rax]
  40b0e8:	test   rax,rax
  40b0eb:	je     40b147 <flatcc_builder_get_emit_context@@Base+0x132>
  40b0ed:	mov    rax,QWORD PTR [rbp-0x18]
  40b0f1:	mov    rdx,QWORD PTR [rax+0x8]
  40b0f5:	mov    rax,QWORD PTR [rbp-0x8]
  40b0f9:	mov    QWORD PTR [rax+0xb88],rdx
  40b100:	mov    rax,QWORD PTR [rbp-0x18]
  40b104:	mov    rdx,QWORD PTR [rax]
  40b107:	mov    rax,QWORD PTR [rbp-0x8]
  40b10b:	mov    QWORD PTR [rax+0xb80],rdx
  40b112:	mov    rax,QWORD PTR [rbp-0x18]
  40b116:	mov    rax,QWORD PTR [rax]
  40b119:	mov    rdx,QWORD PTR [rbp-0x8]
  40b11d:	mov    QWORD PTR [rax+0xb88],rdx
  40b124:	mov    rax,QWORD PTR [rbp-0x18]
  40b128:	mov    rax,QWORD PTR [rax+0x8]
  40b12c:	mov    rdx,QWORD PTR [rbp-0x8]
  40b130:	mov    QWORD PTR [rax+0xb80],rdx
  40b137:	mov    rax,QWORD PTR [rbp-0x18]
  40b13b:	mov    rdx,QWORD PTR [rbp-0x8]
  40b13f:	mov    QWORD PTR [rax],rdx
  40b142:	jmp    40b1e3 <flatcc_builder_get_emit_context@@Base+0x1ce>
  40b147:	mov    rax,QWORD PTR [rbp-0x18]
  40b14b:	mov    rdx,QWORD PTR [rbp-0x8]
  40b14f:	mov    QWORD PTR [rax],rdx
  40b152:	mov    rax,QWORD PTR [rbp-0x18]
  40b156:	mov    rdx,QWORD PTR [rbp-0x8]
  40b15a:	mov    QWORD PTR [rax+0x8],rdx
  40b15e:	mov    rax,QWORD PTR [rbp-0x8]
  40b162:	mov    rdx,QWORD PTR [rbp-0x8]
  40b166:	mov    QWORD PTR [rax+0xb80],rdx
  40b16d:	mov    rax,QWORD PTR [rbp-0x8]
  40b171:	mov    rdx,QWORD PTR [rbp-0x8]
  40b175:	mov    QWORD PTR [rax+0xb88],rdx
  40b17c:	mov    rax,QWORD PTR [rbp-0x18]
  40b180:	mov    rax,QWORD PTR [rax]
  40b183:	lea    rdx,[rax+0x5c0]
  40b18a:	mov    rax,QWORD PTR [rbp-0x18]
  40b18e:	mov    QWORD PTR [rax+0x10],rdx
  40b192:	mov    rax,QWORD PTR [rbp-0x18]
  40b196:	mov    rdx,QWORD PTR [rax+0x10]
  40b19a:	mov    rax,QWORD PTR [rbp-0x18]
  40b19e:	mov    QWORD PTR [rax+0x20],rdx
  40b1a2:	mov    rax,QWORD PTR [rbp-0x18]
  40b1a6:	mov    QWORD PTR [rax+0x18],0x5c0
  40b1ae:	mov    rax,QWORD PTR [rbp-0x18]
  40b1b2:	mov    rax,QWORD PTR [rax+0x18]
  40b1b6:	mov    edx,0xb80
  40b1bb:	sub    rdx,rax
  40b1be:	mov    rax,QWORD PTR [rbp-0x18]
  40b1c2:	mov    QWORD PTR [rax+0x28],rdx
  40b1c6:	mov    rax,QWORD PTR [rbp-0x18]
  40b1ca:	mov    rax,QWORD PTR [rax+0x18]
  40b1ce:	neg    eax
  40b1d0:	mov    edx,eax
  40b1d2:	mov    rax,QWORD PTR [rbp-0x8]
  40b1d6:	mov    DWORD PTR [rax+0xb90],edx
  40b1dc:	mov    eax,0x0
  40b1e1:	jmp    40b231 <flatcc_builder_get_emit_context@@Base+0x21c>
  40b1e3:	mov    rax,QWORD PTR [rbp-0x18]
  40b1e7:	mov    rax,QWORD PTR [rax]
  40b1ea:	lea    rdx,[rax+0xb80]
  40b1f1:	mov    rax,QWORD PTR [rbp-0x18]
  40b1f5:	mov    QWORD PTR [rax+0x10],rdx
  40b1f9:	mov    rax,QWORD PTR [rbp-0x18]
  40b1fd:	mov    QWORD PTR [rax+0x18],0xb80
  40b205:	mov    rax,QWORD PTR [rbp-0x18]
  40b209:	mov    rax,QWORD PTR [rax]
  40b20c:	mov    rax,QWORD PTR [rax+0xb80]
  40b213:	mov    edx,DWORD PTR [rax+0xb90]
  40b219:	mov    rax,QWORD PTR [rbp-0x18]
  40b21d:	mov    rax,QWORD PTR [rax]
  40b220:	sub    edx,0xb80
  40b226:	mov    DWORD PTR [rax+0xb90],edx
  40b22c:	mov    eax,0x0
  40b231:	leave  
  40b232:	ret    
  40b233:	endbr64 
  40b237:	push   rbp
  40b238:	mov    rbp,rsp
  40b23b:	sub    rsp,0x20
  40b23f:	mov    QWORD PTR [rbp-0x18],rdi
  40b243:	mov    QWORD PTR [rbp-0x8],0x0
  40b24b:	mov    rax,QWORD PTR [rbp-0x18]
  40b24f:	mov    rax,QWORD PTR [rax+0x8]
  40b253:	test   rax,rax
  40b256:	je     40b28f <flatcc_builder_get_emit_context@@Base+0x27a>
  40b258:	mov    rax,QWORD PTR [rbp-0x18]
  40b25c:	mov    rax,QWORD PTR [rax+0x8]
  40b260:	mov    rdx,QWORD PTR [rax+0xb80]
  40b267:	mov    rax,QWORD PTR [rbp-0x18]
  40b26b:	mov    rax,QWORD PTR [rax]
  40b26e:	cmp    rdx,rax
  40b271:	je     40b28f <flatcc_builder_get_emit_context@@Base+0x27a>
  40b273:	mov    rax,QWORD PTR [rbp-0x18]
  40b277:	mov    rax,QWORD PTR [rax+0x8]
  40b27b:	mov    rdx,QWORD PTR [rax+0xb80]
  40b282:	mov    rax,QWORD PTR [rbp-0x18]
  40b286:	mov    QWORD PTR [rax+0x8],rdx
  40b28a:	jmp    40b3c9 <flatcc_builder_get_emit_context@@Base+0x3b4>
  40b28f:	mov    edi,0xb98
  40b294:	call   4031c0 <malloc@plt>
  40b299:	mov    QWORD PTR [rbp-0x8],rax
  40b29d:	cmp    QWORD PTR [rbp-0x8],0x0
  40b2a2:	jne    40b2ae <flatcc_builder_get_emit_context@@Base+0x299>
  40b2a4:	mov    eax,0xffffffff
  40b2a9:	jmp    40b416 <flatcc_builder_get_emit_context@@Base+0x401>
  40b2ae:	mov    rax,QWORD PTR [rbp-0x18]
  40b2b2:	mov    rax,QWORD PTR [rax+0x38]
  40b2b6:	lea    rdx,[rax+0xb80]
  40b2bd:	mov    rax,QWORD PTR [rbp-0x18]
  40b2c1:	mov    QWORD PTR [rax+0x38],rdx
  40b2c5:	mov    rax,QWORD PTR [rbp-0x18]
  40b2c9:	mov    rax,QWORD PTR [rax+0x8]
  40b2cd:	test   rax,rax
  40b2d0:	je     40b32d <flatcc_builder_get_emit_context@@Base+0x318>
  40b2d2:	mov    rax,QWORD PTR [rbp-0x18]
  40b2d6:	mov    rdx,QWORD PTR [rax+0x8]
  40b2da:	mov    rax,QWORD PTR [rbp-0x8]
  40b2de:	mov    QWORD PTR [rax+0xb88],rdx
  40b2e5:	mov    rax,QWORD PTR [rbp-0x18]
  40b2e9:	mov    rdx,QWORD PTR [rax]
  40b2ec:	mov    rax,QWORD PTR [rbp-0x8]
  40b2f0:	mov    QWORD PTR [rax+0xb80],rdx
  40b2f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b2fb:	mov    rax,QWORD PTR [rax]
  40b2fe:	mov    rdx,QWORD PTR [rbp-0x8]
  40b302:	mov    QWORD PTR [rax+0xb88],rdx
  40b309:	mov    rax,QWORD PTR [rbp-0x18]
  40b30d:	mov    rax,QWORD PTR [rax+0x8]
  40b311:	mov    rdx,QWORD PTR [rbp-0x8]
  40b315:	mov    QWORD PTR [rax+0xb80],rdx
  40b31c:	mov    rax,QWORD PTR [rbp-0x18]
  40b320:	mov    rdx,QWORD PTR [rbp-0x8]
  40b324:	mov    QWORD PTR [rax+0x8],rdx
  40b328:	jmp    40b3c9 <flatcc_builder_get_emit_context@@Base+0x3b4>
  40b32d:	mov    rax,QWORD PTR [rbp-0x18]
  40b331:	mov    rdx,QWORD PTR [rbp-0x8]
  40b335:	mov    QWORD PTR [rax],rdx
  40b338:	mov    rax,QWORD PTR [rbp-0x18]
  40b33c:	mov    rdx,QWORD PTR [rbp-0x8]
  40b340:	mov    QWORD PTR [rax+0x8],rdx
  40b344:	mov    rax,QWORD PTR [rbp-0x8]
  40b348:	mov    rdx,QWORD PTR [rbp-0x8]
  40b34c:	mov    QWORD PTR [rax+0xb80],rdx
  40b353:	mov    rax,QWORD PTR [rbp-0x8]
  40b357:	mov    rdx,QWORD PTR [rbp-0x8]
  40b35b:	mov    QWORD PTR [rax+0xb88],rdx
  40b362:	mov    rax,QWORD PTR [rbp-0x18]
  40b366:	mov    rax,QWORD PTR [rax]
  40b369:	lea    rdx,[rax+0x5c0]
  40b370:	mov    rax,QWORD PTR [rbp-0x18]
  40b374:	mov    QWORD PTR [rax+0x10],rdx
  40b378:	mov    rax,QWORD PTR [rbp-0x18]
  40b37c:	mov    rdx,QWORD PTR [rax+0x10]
  40b380:	mov    rax,QWORD PTR [rbp-0x18]
  40b384:	mov    QWORD PTR [rax+0x20],rdx
  40b388:	mov    rax,QWORD PTR [rbp-0x18]
  40b38c:	mov    QWORD PTR [rax+0x18],0x5c0
  40b394:	mov    rax,QWORD PTR [rbp-0x18]
  40b398:	mov    rax,QWORD PTR [rax+0x18]
  40b39c:	mov    edx,0xb80
  40b3a1:	sub    rdx,rax
  40b3a4:	mov    rax,QWORD PTR [rbp-0x18]
  40b3a8:	mov    QWORD PTR [rax+0x28],rdx
  40b3ac:	mov    rax,QWORD PTR [rbp-0x18]
  40b3b0:	mov    rax,QWORD PTR [rax+0x18]
  40b3b4:	neg    eax
  40b3b6:	mov    edx,eax
  40b3b8:	mov    rax,QWORD PTR [rbp-0x8]
  40b3bc:	mov    DWORD PTR [rax+0xb90],edx
  40b3c2:	mov    eax,0x0
  40b3c7:	jmp    40b416 <flatcc_builder_get_emit_context@@Base+0x401>
  40b3c9:	mov    rax,QWORD PTR [rbp-0x18]
  40b3cd:	mov    rax,QWORD PTR [rax+0x8]
  40b3d1:	mov    rdx,rax
  40b3d4:	mov    rax,QWORD PTR [rbp-0x18]
  40b3d8:	mov    QWORD PTR [rax+0x20],rdx
  40b3dc:	mov    rax,QWORD PTR [rbp-0x18]
  40b3e0:	mov    QWORD PTR [rax+0x28],0xb80
  40b3e8:	mov    rax,QWORD PTR [rbp-0x18]
  40b3ec:	mov    rax,QWORD PTR [rax+0x8]
  40b3f0:	mov    rax,QWORD PTR [rax+0xb88]
  40b3f7:	mov    edx,DWORD PTR [rax+0xb90]
  40b3fd:	mov    rax,QWORD PTR [rbp-0x18]
  40b401:	mov    rax,QWORD PTR [rax+0x8]
  40b405:	add    edx,0xb80
  40b40b:	mov    DWORD PTR [rax+0xb90],edx
  40b411:	mov    eax,0x0
  40b416:	leave  
  40b417:	ret    
  40b418:	endbr64 
  40b41c:	push   rbp
  40b41d:	mov    rbp,rsp
  40b420:	sub    rsp,0x30
  40b424:	mov    QWORD PTR [rbp-0x18],rdi
  40b428:	mov    QWORD PTR [rbp-0x20],rsi
  40b42c:	mov    QWORD PTR [rbp-0x28],rdx
  40b430:	mov    rax,QWORD PTR [rbp-0x28]
  40b434:	add    QWORD PTR [rbp-0x20],rax
  40b438:	jmp    40b4dc <flatcc_builder_get_emit_context@@Base+0x4c7>
  40b43d:	mov    rax,QWORD PTR [rbp-0x28]
  40b441:	mov    QWORD PTR [rbp-0x8],rax
  40b445:	mov    rax,QWORD PTR [rbp-0x18]
  40b449:	mov    rax,QWORD PTR [rax+0x18]
  40b44d:	cmp    QWORD PTR [rbp-0x8],rax
  40b451:	jbe    40b47d <flatcc_builder_get_emit_context@@Base+0x468>
  40b453:	mov    rax,QWORD PTR [rbp-0x18]
  40b457:	mov    rax,QWORD PTR [rax+0x18]
  40b45b:	mov    QWORD PTR [rbp-0x8],rax
  40b45f:	cmp    QWORD PTR [rbp-0x8],0x0
  40b464:	jne    40b47d <flatcc_builder_get_emit_context@@Base+0x468>
  40b466:	mov    rax,QWORD PTR [rbp-0x18]
  40b46a:	mov    rdi,rax
  40b46d:	call   40b02b <flatcc_builder_get_emit_context@@Base+0x16>
  40b472:	test   eax,eax
  40b474:	je     40b4dc <flatcc_builder_get_emit_context@@Base+0x4c7>
  40b476:	mov    eax,0xffffffff
  40b47b:	jmp    40b4ec <flatcc_builder_get_emit_context@@Base+0x4d7>
  40b47d:	mov    rax,QWORD PTR [rbp-0x18]
  40b481:	mov    rax,QWORD PTR [rax+0x10]
  40b485:	mov    rdx,QWORD PTR [rbp-0x8]
  40b489:	neg    rdx
  40b48c:	add    rdx,rax
  40b48f:	mov    rax,QWORD PTR [rbp-0x18]
  40b493:	mov    QWORD PTR [rax+0x10],rdx
  40b497:	mov    rax,QWORD PTR [rbp-0x18]
  40b49b:	mov    rax,QWORD PTR [rax+0x18]
  40b49f:	sub    rax,QWORD PTR [rbp-0x8]
  40b4a3:	mov    rdx,rax
  40b4a6:	mov    rax,QWORD PTR [rbp-0x18]
  40b4aa:	mov    QWORD PTR [rax+0x18],rdx
  40b4ae:	mov    rax,QWORD PTR [rbp-0x8]
  40b4b2:	neg    rax
  40b4b5:	add    QWORD PTR [rbp-0x20],rax
  40b4b9:	mov    rax,QWORD PTR [rbp-0x8]
  40b4bd:	sub    QWORD PTR [rbp-0x28],rax
  40b4c1:	mov    rax,QWORD PTR [rbp-0x18]
  40b4c5:	mov    rax,QWORD PTR [rax+0x10]
  40b4c9:	mov    rdx,QWORD PTR [rbp-0x8]
  40b4cd:	mov    rcx,QWORD PTR [rbp-0x20]
  40b4d1:	mov    rsi,rcx
  40b4d4:	mov    rdi,rax
  40b4d7:	call   4031b0 <memcpy@plt>
  40b4dc:	cmp    QWORD PTR [rbp-0x28],0x0
  40b4e1:	jne    40b43d <flatcc_builder_get_emit_context@@Base+0x428>
  40b4e7:	mov    eax,0x0
  40b4ec:	leave  
  40b4ed:	ret    
  40b4ee:	endbr64 
  40b4f2:	push   rbp
  40b4f3:	mov    rbp,rsp
  40b4f6:	sub    rsp,0x30
  40b4fa:	mov    QWORD PTR [rbp-0x18],rdi
  40b4fe:	mov    QWORD PTR [rbp-0x20],rsi
  40b502:	mov    QWORD PTR [rbp-0x28],rdx
  40b506:	jmp    40b5a4 <flatcc_builder_get_emit_context@@Base+0x58f>
  40b50b:	mov    rax,QWORD PTR [rbp-0x28]
  40b50f:	mov    QWORD PTR [rbp-0x8],rax
  40b513:	mov    rax,QWORD PTR [rbp-0x18]
  40b517:	mov    rax,QWORD PTR [rax+0x28]
  40b51b:	cmp    QWORD PTR [rbp-0x8],rax
  40b51f:	jbe    40b54b <flatcc_builder_get_emit_context@@Base+0x536>
  40b521:	mov    rax,QWORD PTR [rbp-0x18]
  40b525:	mov    rax,QWORD PTR [rax+0x28]
  40b529:	mov    QWORD PTR [rbp-0x8],rax
  40b52d:	cmp    QWORD PTR [rbp-0x8],0x0
  40b532:	jne    40b54b <flatcc_builder_get_emit_context@@Base+0x536>
  40b534:	mov    rax,QWORD PTR [rbp-0x18]
  40b538:	mov    rdi,rax
  40b53b:	call   40b233 <flatcc_builder_get_emit_context@@Base+0x21e>
  40b540:	test   eax,eax
  40b542:	je     40b5a4 <flatcc_builder_get_emit_context@@Base+0x58f>
  40b544:	mov    eax,0xffffffff
  40b549:	jmp    40b5b4 <flatcc_builder_get_emit_context@@Base+0x59f>
  40b54b:	mov    rax,QWORD PTR [rbp-0x18]
  40b54f:	mov    rax,QWORD PTR [rax+0x20]
  40b553:	mov    rdx,QWORD PTR [rbp-0x8]
  40b557:	mov    rcx,QWORD PTR [rbp-0x20]
  40b55b:	mov    rsi,rcx
  40b55e:	mov    rdi,rax
  40b561:	call   4031b0 <memcpy@plt>
  40b566:	mov    rax,QWORD PTR [rbp-0x8]
  40b56a:	sub    QWORD PTR [rbp-0x28],rax
  40b56e:	mov    rax,QWORD PTR [rbp-0x8]
  40b572:	add    QWORD PTR [rbp-0x20],rax
  40b576:	mov    rax,QWORD PTR [rbp-0x18]
  40b57a:	mov    rdx,QWORD PTR [rax+0x20]
  40b57e:	mov    rax,QWORD PTR [rbp-0x8]
  40b582:	add    rdx,rax
  40b585:	mov    rax,QWORD PTR [rbp-0x18]
  40b589:	mov    QWORD PTR [rax+0x20],rdx
  40b58d:	mov    rax,QWORD PTR [rbp-0x18]
  40b591:	mov    rax,QWORD PTR [rax+0x28]
  40b595:	sub    rax,QWORD PTR [rbp-0x8]
  40b599:	mov    rdx,rax
  40b59c:	mov    rax,QWORD PTR [rbp-0x18]
  40b5a0:	mov    QWORD PTR [rax+0x28],rdx
  40b5a4:	cmp    QWORD PTR [rbp-0x28],0x0
  40b5a9:	jne    40b50b <flatcc_builder_get_emit_context@@Base+0x4f6>
  40b5af:	mov    eax,0x0
  40b5b4:	leave  
  40b5b5:	ret    

000000000040b5b6 <flatcc_emitter_recycle_page@@Base>:
  40b5b6:	endbr64 
  40b5ba:	push   rbp
  40b5bb:	mov    rbp,rsp
  40b5be:	mov    QWORD PTR [rbp-0x8],rdi
  40b5c2:	mov    QWORD PTR [rbp-0x10],rsi
  40b5c6:	mov    rax,QWORD PTR [rbp-0x8]
  40b5ca:	mov    rax,QWORD PTR [rax]
  40b5cd:	cmp    QWORD PTR [rbp-0x10],rax
  40b5d1:	je     40b5e1 <flatcc_emitter_recycle_page@@Base+0x2b>
  40b5d3:	mov    rax,QWORD PTR [rbp-0x8]
  40b5d7:	mov    rax,QWORD PTR [rax+0x8]
  40b5db:	cmp    QWORD PTR [rbp-0x10],rax
  40b5df:	jne    40b5eb <flatcc_emitter_recycle_page@@Base+0x35>
  40b5e1:	mov    eax,0xffffffff
  40b5e6:	jmp    40b681 <flatcc_emitter_recycle_page@@Base+0xcb>
  40b5eb:	mov    rax,QWORD PTR [rbp-0x10]
  40b5ef:	mov    rax,QWORD PTR [rax+0xb80]
  40b5f6:	mov    rdx,QWORD PTR [rbp-0x10]
  40b5fa:	mov    rdx,QWORD PTR [rdx+0xb88]
  40b601:	mov    QWORD PTR [rax+0xb88],rdx
  40b608:	mov    rax,QWORD PTR [rbp-0x10]
  40b60c:	mov    rax,QWORD PTR [rax+0xb88]
  40b613:	mov    rdx,QWORD PTR [rbp-0x10]
  40b617:	mov    rdx,QWORD PTR [rdx+0xb80]
  40b61e:	mov    QWORD PTR [rax+0xb80],rdx
  40b625:	mov    rax,QWORD PTR [rbp-0x8]
  40b629:	mov    rax,QWORD PTR [rax]
  40b62c:	mov    rdx,QWORD PTR [rax+0xb88]
  40b633:	mov    rax,QWORD PTR [rbp-0x10]
  40b637:	mov    QWORD PTR [rax+0xb88],rdx
  40b63e:	mov    rax,QWORD PTR [rbp-0x8]
  40b642:	mov    rdx,QWORD PTR [rax]
  40b645:	mov    rax,QWORD PTR [rbp-0x10]
  40b649:	mov    QWORD PTR [rax+0xb80],rdx
  40b650:	mov    rax,QWORD PTR [rbp-0x10]
  40b654:	mov    rax,QWORD PTR [rax+0xb88]
  40b65b:	mov    rdx,QWORD PTR [rbp-0x10]
  40b65f:	mov    QWORD PTR [rax+0xb80],rdx
  40b666:	mov    rax,QWORD PTR [rbp-0x10]
  40b66a:	mov    rax,QWORD PTR [rax+0xb80]
  40b671:	mov    rdx,QWORD PTR [rbp-0x10]
  40b675:	mov    QWORD PTR [rax+0xb88],rdx
  40b67c:	mov    eax,0x0
  40b681:	pop    rbp
  40b682:	ret    

000000000040b683 <flatcc_emitter_reset@@Base>:
  40b683:	endbr64 
  40b687:	push   rbp
  40b688:	mov    rbp,rsp
  40b68b:	sub    rsp,0x20
  40b68f:	mov    QWORD PTR [rbp-0x18],rdi
  40b693:	mov    rax,QWORD PTR [rbp-0x18]
  40b697:	mov    rax,QWORD PTR [rax]
  40b69a:	mov    QWORD PTR [rbp-0x8],rax
  40b69e:	mov    rax,QWORD PTR [rbp-0x18]
  40b6a2:	mov    rax,QWORD PTR [rax]
  40b6a5:	test   rax,rax
  40b6a8:	je     40b812 <flatcc_emitter_reset@@Base+0x18f>
  40b6ae:	mov    rax,QWORD PTR [rbp-0x18]
  40b6b2:	mov    rdx,QWORD PTR [rax]
  40b6b5:	mov    rax,QWORD PTR [rbp-0x18]
  40b6b9:	mov    QWORD PTR [rax+0x8],rdx
  40b6bd:	mov    rax,QWORD PTR [rbp-0x18]
  40b6c1:	mov    rax,QWORD PTR [rax]
  40b6c4:	lea    rdx,[rax+0x5c0]
  40b6cb:	mov    rax,QWORD PTR [rbp-0x18]
  40b6cf:	mov    QWORD PTR [rax+0x10],rdx
  40b6d3:	mov    rax,QWORD PTR [rbp-0x18]
  40b6d7:	mov    rdx,QWORD PTR [rax+0x10]
  40b6db:	mov    rax,QWORD PTR [rbp-0x18]
  40b6df:	mov    QWORD PTR [rax+0x20],rdx
  40b6e3:	mov    rax,QWORD PTR [rbp-0x18]
  40b6e7:	mov    QWORD PTR [rax+0x18],0x5c0
  40b6ef:	mov    rax,QWORD PTR [rbp-0x18]
  40b6f3:	mov    QWORD PTR [rax+0x28],0x5c0
  40b6fb:	mov    rax,QWORD PTR [rbp-0x18]
  40b6ff:	mov    rax,QWORD PTR [rax+0x18]
  40b703:	mov    edx,eax
  40b705:	mov    rax,QWORD PTR [rbp-0x18]
  40b709:	mov    rax,QWORD PTR [rax]
  40b70c:	neg    edx
  40b70e:	mov    DWORD PTR [rax+0xb90],edx
  40b714:	mov    rax,QWORD PTR [rbp-0x18]
  40b718:	mov    rax,QWORD PTR [rax+0x40]
  40b71c:	test   rax,rax
  40b71f:	jne    40b731 <flatcc_emitter_reset@@Base+0xae>
  40b721:	mov    rax,QWORD PTR [rbp-0x18]
  40b725:	mov    rdx,QWORD PTR [rax+0x30]
  40b729:	mov    rax,QWORD PTR [rbp-0x18]
  40b72d:	mov    QWORD PTR [rax+0x40],rdx
  40b731:	mov    rax,QWORD PTR [rbp-0x18]
  40b735:	mov    rdx,QWORD PTR [rax+0x40]
  40b739:	mov    rax,rdx
  40b73c:	add    rax,rax
  40b73f:	add    rax,rdx
  40b742:	shr    rax,0x2
  40b746:	mov    rdx,rax
  40b749:	mov    rax,QWORD PTR [rbp-0x18]
  40b74d:	mov    rax,QWORD PTR [rax+0x30]
  40b751:	shr    rax,0x2
  40b755:	add    rdx,rax
  40b758:	mov    rax,QWORD PTR [rbp-0x18]
  40b75c:	mov    QWORD PTR [rax+0x40],rdx
  40b760:	mov    rax,QWORD PTR [rbp-0x18]
  40b764:	mov    QWORD PTR [rax+0x30],0x0
  40b76c:	jmp    40b7d8 <flatcc_emitter_reset@@Base+0x155>
  40b76e:	mov    rax,QWORD PTR [rbp-0x18]
  40b772:	mov    rax,QWORD PTR [rax+0x8]
  40b776:	mov    rax,QWORD PTR [rax+0xb80]
  40b77d:	mov    QWORD PTR [rbp-0x8],rax
  40b781:	mov    rax,QWORD PTR [rbp-0x18]
  40b785:	mov    rax,QWORD PTR [rax+0x8]
  40b789:	mov    rdx,QWORD PTR [rbp-0x8]
  40b78d:	mov    rdx,QWORD PTR [rdx+0xb80]
  40b794:	mov    QWORD PTR [rax+0xb80],rdx
  40b79b:	mov    rax,QWORD PTR [rbp-0x8]
  40b79f:	mov    rax,QWORD PTR [rax+0xb80]
  40b7a6:	mov    rdx,QWORD PTR [rbp-0x18]
  40b7aa:	mov    rdx,QWORD PTR [rdx+0x8]
  40b7ae:	mov    QWORD PTR [rax+0xb88],rdx
  40b7b5:	mov    rax,QWORD PTR [rbp-0x8]
  40b7b9:	mov    rdi,rax
  40b7bc:	call   403110 <free@plt>
  40b7c1:	mov    rax,QWORD PTR [rbp-0x18]
  40b7c5:	mov    rax,QWORD PTR [rax+0x38]
  40b7c9:	lea    rdx,[rax-0xb80]
  40b7d0:	mov    rax,QWORD PTR [rbp-0x18]
  40b7d4:	mov    QWORD PTR [rax+0x38],rdx
  40b7d8:	mov    rax,QWORD PTR [rbp-0x18]
  40b7dc:	mov    rax,QWORD PTR [rax+0x40]
  40b7e0:	lea    rdx,[rax+rax*1]
  40b7e4:	mov    rax,QWORD PTR [rbp-0x18]
  40b7e8:	mov    rax,QWORD PTR [rax+0x38]
  40b7ec:	cmp    rdx,rax
  40b7ef:	jae    40b813 <flatcc_emitter_reset@@Base+0x190>
  40b7f1:	mov    rax,QWORD PTR [rbp-0x18]
  40b7f5:	mov    rax,QWORD PTR [rax+0x8]
  40b7f9:	mov    rdx,QWORD PTR [rax+0xb80]
  40b800:	mov    rax,QWORD PTR [rbp-0x18]
  40b804:	mov    rax,QWORD PTR [rax]
  40b807:	cmp    rdx,rax
  40b80a:	jne    40b76e <flatcc_emitter_reset@@Base+0xeb>
  40b810:	jmp    40b813 <flatcc_emitter_reset@@Base+0x190>
  40b812:	nop
  40b813:	leave  
  40b814:	ret    

000000000040b815 <flatcc_emitter_clear@@Base>:
  40b815:	endbr64 
  40b819:	push   rbp
  40b81a:	mov    rbp,rsp
  40b81d:	sub    rsp,0x20
  40b821:	mov    QWORD PTR [rbp-0x18],rdi
  40b825:	mov    rax,QWORD PTR [rbp-0x18]
  40b829:	mov    rax,QWORD PTR [rax]
  40b82c:	mov    QWORD PTR [rbp-0x8],rax
  40b830:	cmp    QWORD PTR [rbp-0x8],0x0
  40b835:	je     40b8a5 <flatcc_emitter_clear@@Base+0x90>
  40b837:	mov    rax,QWORD PTR [rbp-0x8]
  40b83b:	mov    rax,QWORD PTR [rax+0xb88]
  40b842:	mov    QWORD PTR [rax+0xb80],0x0
  40b84d:	jmp    40b871 <flatcc_emitter_clear@@Base+0x5c>
  40b84f:	mov    rax,QWORD PTR [rbp-0x8]
  40b853:	mov    rax,QWORD PTR [rax+0xb80]
  40b85a:	mov    QWORD PTR [rbp-0x8],rax
  40b85e:	mov    rax,QWORD PTR [rbp-0x8]
  40b862:	mov    rax,QWORD PTR [rax+0xb88]
  40b869:	mov    rdi,rax
  40b86c:	call   403110 <free@plt>
  40b871:	mov    rax,QWORD PTR [rbp-0x8]
  40b875:	mov    rax,QWORD PTR [rax+0xb80]
  40b87c:	test   rax,rax
  40b87f:	jne    40b84f <flatcc_emitter_clear@@Base+0x3a>
  40b881:	mov    rax,QWORD PTR [rbp-0x8]
  40b885:	mov    rdi,rax
  40b888:	call   403110 <free@plt>
  40b88d:	mov    rax,QWORD PTR [rbp-0x18]
  40b891:	mov    edx,0x48
  40b896:	mov    esi,0x0
  40b89b:	mov    rdi,rax
  40b89e:	call   403170 <memset@plt>
  40b8a3:	jmp    40b8a6 <flatcc_emitter_clear@@Base+0x91>
  40b8a5:	nop
  40b8a6:	leave  
  40b8a7:	ret    

000000000040b8a8 <flatcc_emitter@@Base>:
  40b8a8:	endbr64 
  40b8ac:	push   rbp
  40b8ad:	mov    rbp,rsp
  40b8b0:	sub    rsp,0x30
  40b8b4:	mov    QWORD PTR [rbp-0x18],rdi
  40b8b8:	mov    QWORD PTR [rbp-0x20],rsi
  40b8bc:	mov    DWORD PTR [rbp-0x24],edx
  40b8bf:	mov    DWORD PTR [rbp-0x28],ecx
  40b8c2:	mov    QWORD PTR [rbp-0x30],r8
  40b8c6:	mov    rax,QWORD PTR [rbp-0x18]
  40b8ca:	mov    QWORD PTR [rbp-0x8],rax
  40b8ce:	mov    rax,QWORD PTR [rbp-0x8]
  40b8d2:	mov    rdx,QWORD PTR [rax+0x30]
  40b8d6:	mov    rax,QWORD PTR [rbp-0x30]
  40b8da:	add    rdx,rax
  40b8dd:	mov    rax,QWORD PTR [rbp-0x8]
  40b8e1:	mov    QWORD PTR [rax+0x30],rdx
  40b8e5:	cmp    DWORD PTR [rbp-0x28],0x0
  40b8e9:	jns    40b991 <flatcc_emitter@@Base+0xe9>
  40b8ef:	mov    rax,QWORD PTR [rbp-0x8]
  40b8f3:	mov    rax,QWORD PTR [rax+0x18]
  40b8f7:	cmp    QWORD PTR [rbp-0x30],rax
  40b8fb:	ja     40b93f <flatcc_emitter@@Base+0x97>
  40b8fd:	mov    rax,QWORD PTR [rbp-0x8]
  40b901:	mov    rax,QWORD PTR [rax+0x10]
  40b905:	mov    rdx,QWORD PTR [rbp-0x30]
  40b909:	neg    rdx
  40b90c:	add    rdx,rax
  40b90f:	mov    rax,QWORD PTR [rbp-0x8]
  40b913:	mov    QWORD PTR [rax+0x10],rdx
  40b917:	mov    rax,QWORD PTR [rbp-0x8]
  40b91b:	mov    rax,QWORD PTR [rax+0x18]
  40b91f:	sub    rax,QWORD PTR [rbp-0x30]
  40b923:	mov    rdx,rax
  40b926:	mov    rax,QWORD PTR [rbp-0x8]
  40b92a:	mov    QWORD PTR [rax+0x18],rdx
  40b92e:	mov    rax,QWORD PTR [rbp-0x8]
  40b932:	mov    rax,QWORD PTR [rax+0x10]
  40b936:	mov    QWORD PTR [rbp-0x10],rax
  40b93a:	jmp    40ba1d <flatcc_emitter@@Base+0x175>
  40b93f:	mov    eax,DWORD PTR [rbp-0x24]
  40b942:	cdqe   
  40b944:	shl    rax,0x4
  40b948:	add    QWORD PTR [rbp-0x20],rax
  40b94c:	jmp    40b97f <flatcc_emitter@@Base+0xd7>
  40b94e:	sub    QWORD PTR [rbp-0x20],0x10
  40b953:	mov    rax,QWORD PTR [rbp-0x20]
  40b957:	mov    rdx,QWORD PTR [rax+0x8]
  40b95b:	mov    rax,QWORD PTR [rbp-0x20]
  40b95f:	mov    rcx,QWORD PTR [rax]
  40b962:	mov    rax,QWORD PTR [rbp-0x8]
  40b966:	mov    rsi,rcx
  40b969:	mov    rdi,rax
  40b96c:	call   40b418 <flatcc_builder_get_emit_context@@Base+0x403>
  40b971:	test   eax,eax
  40b973:	je     40b97f <flatcc_emitter@@Base+0xd7>
  40b975:	mov    eax,0xffffffff
  40b97a:	jmp    40ba60 <flatcc_emitter@@Base+0x1b8>
  40b97f:	mov    eax,DWORD PTR [rbp-0x24]
  40b982:	lea    edx,[rax-0x1]
  40b985:	mov    DWORD PTR [rbp-0x24],edx
  40b988:	test   eax,eax
  40b98a:	jne    40b94e <flatcc_emitter@@Base+0xa6>
  40b98c:	jmp    40ba16 <flatcc_emitter@@Base+0x16e>
  40b991:	mov    rax,QWORD PTR [rbp-0x8]
  40b995:	mov    rax,QWORD PTR [rax+0x28]
  40b999:	cmp    QWORD PTR [rbp-0x30],rax
  40b99d:	ja     40ba09 <flatcc_emitter@@Base+0x161>
  40b99f:	mov    rax,QWORD PTR [rbp-0x8]
  40b9a3:	mov    rax,QWORD PTR [rax+0x20]
  40b9a7:	mov    QWORD PTR [rbp-0x10],rax
  40b9ab:	mov    rax,QWORD PTR [rbp-0x8]
  40b9af:	mov    rdx,QWORD PTR [rax+0x20]
  40b9b3:	mov    rax,QWORD PTR [rbp-0x30]
  40b9b7:	add    rdx,rax
  40b9ba:	mov    rax,QWORD PTR [rbp-0x8]
  40b9be:	mov    QWORD PTR [rax+0x20],rdx
  40b9c2:	mov    rax,QWORD PTR [rbp-0x8]
  40b9c6:	mov    rax,QWORD PTR [rax+0x28]
  40b9ca:	sub    rax,QWORD PTR [rbp-0x30]
  40b9ce:	mov    rdx,rax
  40b9d1:	mov    rax,QWORD PTR [rbp-0x8]
  40b9d5:	mov    QWORD PTR [rax+0x28],rdx
  40b9d9:	jmp    40ba1d <flatcc_emitter@@Base+0x175>
  40b9db:	mov    rax,QWORD PTR [rbp-0x20]
  40b9df:	mov    rdx,QWORD PTR [rax+0x8]
  40b9e3:	mov    rax,QWORD PTR [rbp-0x20]
  40b9e7:	mov    rcx,QWORD PTR [rax]
  40b9ea:	mov    rax,QWORD PTR [rbp-0x8]
  40b9ee:	mov    rsi,rcx
  40b9f1:	mov    rdi,rax
  40b9f4:	call   40b4ee <flatcc_builder_get_emit_context@@Base+0x4d9>
  40b9f9:	test   eax,eax
  40b9fb:	je     40ba04 <flatcc_emitter@@Base+0x15c>
  40b9fd:	mov    eax,0xffffffff
  40ba02:	jmp    40ba60 <flatcc_emitter@@Base+0x1b8>
  40ba04:	add    QWORD PTR [rbp-0x20],0x10
  40ba09:	mov    eax,DWORD PTR [rbp-0x24]
  40ba0c:	lea    edx,[rax-0x1]
  40ba0f:	mov    DWORD PTR [rbp-0x24],edx
  40ba12:	test   eax,eax
  40ba14:	jne    40b9db <flatcc_emitter@@Base+0x133>
  40ba16:	mov    eax,0x0
  40ba1b:	jmp    40ba60 <flatcc_emitter@@Base+0x1b8>
  40ba1d:	jmp    40ba4e <flatcc_emitter@@Base+0x1a6>
  40ba1f:	mov    rax,QWORD PTR [rbp-0x20]
  40ba23:	mov    rdx,QWORD PTR [rax+0x8]
  40ba27:	mov    rax,QWORD PTR [rbp-0x20]
  40ba2b:	mov    rcx,QWORD PTR [rax]
  40ba2e:	mov    rax,QWORD PTR [rbp-0x10]
  40ba32:	mov    rsi,rcx
  40ba35:	mov    rdi,rax
  40ba38:	call   4031b0 <memcpy@plt>
  40ba3d:	mov    rax,QWORD PTR [rbp-0x20]
  40ba41:	mov    rax,QWORD PTR [rax+0x8]
  40ba45:	add    QWORD PTR [rbp-0x10],rax
  40ba49:	add    QWORD PTR [rbp-0x20],0x10
  40ba4e:	mov    eax,DWORD PTR [rbp-0x24]
  40ba51:	lea    edx,[rax-0x1]
  40ba54:	mov    DWORD PTR [rbp-0x24],edx
  40ba57:	test   eax,eax
  40ba59:	jne    40ba1f <flatcc_emitter@@Base+0x177>
  40ba5b:	mov    eax,0x0
  40ba60:	leave  
  40ba61:	ret    

000000000040ba62 <flatcc_emitter_copy_buffer@@Base>:
  40ba62:	endbr64 
  40ba66:	push   rbp
  40ba67:	mov    rbp,rsp
  40ba6a:	sub    rsp,0x30
  40ba6e:	mov    QWORD PTR [rbp-0x18],rdi
  40ba72:	mov    QWORD PTR [rbp-0x20],rsi
  40ba76:	mov    QWORD PTR [rbp-0x28],rdx
  40ba7a:	mov    rax,QWORD PTR [rbp-0x18]
  40ba7e:	mov    rax,QWORD PTR [rax+0x30]
  40ba82:	cmp    QWORD PTR [rbp-0x28],rax
  40ba86:	jae    40ba92 <flatcc_emitter_copy_buffer@@Base+0x30>
  40ba88:	mov    eax,0x0
  40ba8d:	jmp    40bb96 <flatcc_emitter_copy_buffer@@Base+0x134>
  40ba92:	mov    rax,QWORD PTR [rbp-0x18]
  40ba96:	mov    rax,QWORD PTR [rax]
  40ba99:	test   rax,rax
  40ba9c:	jne    40baa8 <flatcc_emitter_copy_buffer@@Base+0x46>
  40ba9e:	mov    eax,0x0
  40baa3:	jmp    40bb96 <flatcc_emitter_copy_buffer@@Base+0x134>
  40baa8:	mov    rax,QWORD PTR [rbp-0x18]
  40baac:	mov    rdx,QWORD PTR [rax]
  40baaf:	mov    rax,QWORD PTR [rbp-0x18]
  40bab3:	mov    rax,QWORD PTR [rax+0x8]
  40bab7:	cmp    rdx,rax
  40baba:	jne    40bae4 <flatcc_emitter_copy_buffer@@Base+0x82>
  40babc:	mov    rax,QWORD PTR [rbp-0x18]
  40bac0:	mov    rdx,QWORD PTR [rax+0x30]
  40bac4:	mov    rax,QWORD PTR [rbp-0x18]
  40bac8:	mov    rcx,QWORD PTR [rax+0x10]
  40bacc:	mov    rax,QWORD PTR [rbp-0x20]
  40bad0:	mov    rsi,rcx
  40bad3:	mov    rdi,rax
  40bad6:	call   4031b0 <memcpy@plt>
  40badb:	mov    rax,QWORD PTR [rbp-0x20]
  40badf:	jmp    40bb96 <flatcc_emitter_copy_buffer@@Base+0x134>
  40bae4:	mov    rax,QWORD PTR [rbp-0x18]
  40bae8:	mov    rax,QWORD PTR [rax+0x18]
  40baec:	mov    edx,0xb80
  40baf1:	sub    rdx,rax
  40baf4:	mov    rax,rdx
  40baf7:	mov    QWORD PTR [rbp-0x8],rax
  40bafb:	mov    rax,QWORD PTR [rbp-0x18]
  40baff:	mov    rcx,QWORD PTR [rax+0x10]
  40bb03:	mov    rdx,QWORD PTR [rbp-0x8]
  40bb07:	mov    rax,QWORD PTR [rbp-0x20]
  40bb0b:	mov    rsi,rcx
  40bb0e:	mov    rdi,rax
  40bb11:	call   4031b0 <memcpy@plt>
  40bb16:	mov    rax,QWORD PTR [rbp-0x8]
  40bb1a:	add    QWORD PTR [rbp-0x20],rax
  40bb1e:	mov    rax,QWORD PTR [rbp-0x18]
  40bb22:	mov    rax,QWORD PTR [rax]
  40bb25:	mov    rax,QWORD PTR [rax+0xb80]
  40bb2c:	mov    QWORD PTR [rbp-0x10],rax
  40bb30:	jmp    40bb61 <flatcc_emitter_copy_buffer@@Base+0xff>
  40bb32:	mov    rcx,QWORD PTR [rbp-0x10]
  40bb36:	mov    rax,QWORD PTR [rbp-0x20]
  40bb3a:	mov    edx,0xb80
  40bb3f:	mov    rsi,rcx
  40bb42:	mov    rdi,rax
  40bb45:	call   4031b0 <memcpy@plt>
  40bb4a:	add    QWORD PTR [rbp-0x20],0xb80
  40bb52:	mov    rax,QWORD PTR [rbp-0x10]
  40bb56:	mov    rax,QWORD PTR [rax+0xb80]
  40bb5d:	mov    QWORD PTR [rbp-0x10],rax
  40bb61:	mov    rax,QWORD PTR [rbp-0x18]
  40bb65:	mov    rax,QWORD PTR [rax+0x8]
  40bb69:	cmp    QWORD PTR [rbp-0x10],rax
  40bb6d:	jne    40bb32 <flatcc_emitter_copy_buffer@@Base+0xd0>
  40bb6f:	mov    rax,QWORD PTR [rbp-0x18]
  40bb73:	mov    rax,QWORD PTR [rax+0x28]
  40bb77:	mov    edx,0xb80
  40bb7c:	sub    rdx,rax
  40bb7f:	mov    rcx,QWORD PTR [rbp-0x10]
  40bb83:	mov    rax,QWORD PTR [rbp-0x20]
  40bb87:	mov    rsi,rcx
  40bb8a:	mov    rdi,rax
  40bb8d:	call   4031b0 <memcpy@plt>
  40bb92:	mov    rax,QWORD PTR [rbp-0x20]
  40bb96:	leave  
  40bb97:	ret    
  40bb98:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bba0 <__libc_csu_init@@Base>:
  40bba0:	endbr64 
  40bba4:	push   r15
  40bba6:	lea    r15,[rip+0x5263]        # 410e10 <flatcc_builder_padding_base@@Base+0x4750>
  40bbad:	push   r14
  40bbaf:	mov    r14,rdx
  40bbb2:	push   r13
  40bbb4:	mov    r13,rsi
  40bbb7:	push   r12
  40bbb9:	mov    r12d,edi
  40bbbc:	push   rbp
  40bbbd:	lea    rbp,[rip+0x5254]        # 410e18 <flatcc_builder_padding_base@@Base+0x4758>
  40bbc4:	push   rbx
  40bbc5:	sub    rbp,r15
  40bbc8:	sub    rsp,0x8
  40bbcc:	call   403000 <free@plt-0x110>
  40bbd1:	sar    rbp,0x3
  40bbd5:	je     40bbf6 <__libc_csu_init@@Base+0x56>
  40bbd7:	xor    ebx,ebx
  40bbd9:	nop    DWORD PTR [rax+0x0]
  40bbe0:	mov    rdx,r14
  40bbe3:	mov    rsi,r13
  40bbe6:	mov    edi,r12d
  40bbe9:	call   QWORD PTR [r15+rbx*8]
  40bbed:	add    rbx,0x1
  40bbf1:	cmp    rbp,rbx
  40bbf4:	jne    40bbe0 <__libc_csu_init@@Base+0x40>
  40bbf6:	add    rsp,0x8
  40bbfa:	pop    rbx
  40bbfb:	pop    rbp
  40bbfc:	pop    r12
  40bbfe:	pop    r13
  40bc00:	pop    r14
  40bc02:	pop    r15
  40bc04:	ret    
  40bc05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040bc10 <__libc_csu_fini@@Base>:
  40bc10:	endbr64 
  40bc14:	ret    

Disassembly of section .fini:

000000000040bc18 <.fini>:
  40bc18:	endbr64 
  40bc1c:	sub    rsp,0x8
  40bc20:	add    rsp,0x8
  40bc24:	ret    
