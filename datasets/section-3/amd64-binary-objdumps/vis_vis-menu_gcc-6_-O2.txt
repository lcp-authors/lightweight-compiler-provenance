
../repos/vis/vis-menu:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 405fe8 <__ctype_b_loc@plt+0x4df8>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x4eba]        # 405ee0 <__ctype_b_loc@plt+0x4cf0>
  401026:	jmp    QWORD PTR [rip+0x4ebc]        # 405ee8 <__ctype_b_loc@plt+0x4cf8>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x4eba]        # 405ef0 <__ctype_b_loc@plt+0x4d00>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <__errno_location@plt>:
  401040:	jmp    QWORD PTR [rip+0x4eb2]        # 405ef8 <__ctype_b_loc@plt+0x4d08>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncpy@plt>:
  401050:	jmp    QWORD PTR [rip+0x4eaa]        # 405f00 <__ctype_b_loc@plt+0x4d10>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <puts@plt>:
  401060:	jmp    QWORD PTR [rip+0x4ea2]        # 405f08 <__ctype_b_loc@plt+0x4d18>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <strlen@plt>:
  401070:	jmp    QWORD PTR [rip+0x4e9a]        # 405f10 <__ctype_b_loc@plt+0x4d20>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <__stack_chk_fail@plt>:
  401080:	jmp    QWORD PTR [rip+0x4e92]        # 405f18 <__ctype_b_loc@plt+0x4d28>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strchr@plt>:
  401090:	jmp    QWORD PTR [rip+0x4e8a]        # 405f20 <__ctype_b_loc@plt+0x4d30>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <memset@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x4e82]        # 405f28 <__ctype_b_loc@plt+0x4d38>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <freopen@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x4e7a]        # 405f30 <__ctype_b_loc@plt+0x4d40>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <ioctl@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x4e72]        # 405f38 <__ctype_b_loc@plt+0x4d48>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <close@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x4e6a]        # 405f40 <__ctype_b_loc@plt+0x4d50>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <read@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x4e62]        # 405f48 <__ctype_b_loc@plt+0x4d58>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x4e5a]        # 405f50 <__ctype_b_loc@plt+0x4d60>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <calloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x4e52]        # 405f58 <__ctype_b_loc@plt+0x4d68>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <memcpy@plt>:
  401110:	jmp    QWORD PTR [rip+0x4e4a]        # 405f60 <__ctype_b_loc@plt+0x4d70>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <fflush@plt>:
  401120:	jmp    QWORD PTR [rip+0x4e42]        # 405f68 <__ctype_b_loc@plt+0x4d78>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <realloc@plt>:
  401130:	jmp    QWORD PTR [rip+0x4e3a]        # 405f70 <__ctype_b_loc@plt+0x4d80>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <__strcpy_chk@plt>:
  401140:	jmp    QWORD PTR [rip+0x4e32]        # 405f78 <__ctype_b_loc@plt+0x4d88>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <memmove@plt>:
  401150:	jmp    QWORD PTR [rip+0x4e2a]        # 405f80 <__ctype_b_loc@plt+0x4d90>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <tcgetattr@plt>:
  401160:	jmp    QWORD PTR [rip+0x4e22]        # 405f88 <__ctype_b_loc@plt+0x4d98>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <tcsetattr@plt>:
  401170:	jmp    QWORD PTR [rip+0x4e1a]        # 405f90 <__ctype_b_loc@plt+0x4da0>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <open@plt>:
  401180:	jmp    QWORD PTR [rip+0x4e12]        # 405f98 <__ctype_b_loc@plt+0x4da8>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <strtok@plt>:
  401190:	jmp    QWORD PTR [rip+0x4e0a]        # 405fa0 <__ctype_b_loc@plt+0x4db0>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <strtoul@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x4e02]        # 405fa8 <__ctype_b_loc@plt+0x4db8>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <exit@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x4dfa]        # 405fb0 <__ctype_b_loc@plt+0x4dc0>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <fwrite@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x4df2]        # 405fb8 <__ctype_b_loc@plt+0x4dc8>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <__fprintf_chk@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x4dea]        # 405fc0 <__ctype_b_loc@plt+0x4dd0>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

00000000004011e0 <strdup@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x4de2]        # 405fc8 <__ctype_b_loc@plt+0x4dd8>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <free@plt-0x10>

00000000004011f0 <__ctype_b_loc@plt>:
  4011f0:	jmp    QWORD PTR [rip+0x4dda]        # 405fd0 <__ctype_b_loc@plt+0x4de0>
  4011f6:	push   0x1c
  4011fb:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401200 <.text>:
  401200:	sub    rsp,0x18
  401204:	lea    rdi,[rip+0x2df5]        # 404000 <__ctype_b_loc@plt+0x2e10>
  40120b:	mov    edx,0x48
  401210:	mov    rax,QWORD PTR fs:0x28
  401219:	mov    QWORD PTR [rsp+0x8],rax
  40121e:	xor    eax,eax
  401220:	mov    rax,QWORD PTR [rip+0x4dd1]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  401227:	mov    esi,0x1
  40122c:	mov    rcx,QWORD PTR [rax]
  40122f:	call   4011c0 <fwrite@plt>
  401234:	mov    edi,0x2
  401239:	call   4011b0 <exit@plt>
  40123e:	xchg   ax,ax
  401240:	push   r15
  401242:	push   r14
  401244:	push   r13
  401246:	push   r12
  401248:	push   rbp
  401249:	push   rbx
  40124a:	sub    rsp,0x58
  40124e:	mov    rax,QWORD PTR fs:0x28
  401257:	mov    QWORD PTR [rsp+0x48],rax
  40125c:	xor    eax,eax
  40125e:	cmp    edi,0x1
  401261:	jle    4012fa <__ctype_b_loc@plt+0x10a>
  401267:	mov    ebp,edi
  401269:	mov    r14,rsi
  40126c:	mov    ebx,0x1
  401271:	lea    r15,[rip+0x2e5a]        # 4040d2 <__ctype_b_loc@plt+0x2ee2>
  401278:	lea    r12,[rip+0x2e56]        # 4040d5 <__ctype_b_loc@plt+0x2ee5>
  40127f:	lea    r13,[rip+0x2e52]        # 4040d8 <__ctype_b_loc@plt+0x2ee8>
  401286:	jmp    4012a5 <__ctype_b_loc@plt+0xb5>
  401288:	nop    DWORD PTR [rax+rax*1+0x0]
  401290:	mov    rax,QWORD PTR [rip+0x4d59]        # 405ff0 <__ctype_b_loc@plt+0x4e00>
  401297:	mov    QWORD PTR [rip+0x4d62],rax        # 406000 <__ctype_b_loc@plt+0x4e10>
  40129e:	add    ebx,0x1
  4012a1:	cmp    ebp,ebx
  4012a3:	jle    4012fa <__ctype_b_loc@plt+0x10a>
  4012a5:	movsxd rax,ebx
  4012a8:	mov    ecx,0x3
  4012ad:	mov    rdi,r15
  4012b0:	lea    rdx,[rax*8+0x0]
  4012b8:	mov    rax,QWORD PTR [r14+rax*8]
  4012bc:	mov    rsi,rax
  4012bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4012c1:	je     4020db <__ctype_b_loc@plt+0xeeb>
  4012c7:	mov    ecx,0x3
  4012cc:	mov    rsi,rax
  4012cf:	mov    rdi,r12
  4012d2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4012d4:	je     401290 <__ctype_b_loc@plt+0xa0>
  4012d6:	mov    ecx,0x3
  4012db:	mov    rsi,rax
  4012de:	mov    rdi,r13
  4012e1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4012e3:	jne    401578 <__ctype_b_loc@plt+0x388>
  4012e9:	add    ebx,0x1
  4012ec:	mov    DWORD PTR [rip+0x4e3a],0x1        # 406130 <__ctype_b_loc@plt+0x4f40>
  4012f6:	cmp    ebp,ebx
  4012f8:	jg     4012a5 <__ctype_b_loc@plt+0xb5>
  4012fa:	xor    eax,eax
  4012fc:	call   402510 <__ctype_b_loc@plt+0x1320>
  401301:	mov    rax,QWORD PTR [rip+0x4cd0]        # 405fd8 <__ctype_b_loc@plt+0x4de8>
  401308:	lea    rsi,[rip+0x2db8]        # 4040c7 <__ctype_b_loc@plt+0x2ed7>
  40130f:	lea    rdi,[rip+0x2db3]        # 4040c9 <__ctype_b_loc@plt+0x2ed9>
  401316:	mov    rdx,QWORD PTR [rax]
  401319:	call   4010b0 <freopen@plt>
  40131e:	test   rax,rax
  401321:	je     40211c <__ctype_b_loc@plt+0xf2c>
  401327:	mov    rax,QWORD PTR [rip+0x4cca]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  40132e:	lea    rsi,[rip+0x2dca]        # 4040ff <__ctype_b_loc@plt+0x2f0f>
  401335:	lea    rdi,[rip+0x2d8d]        # 4040c9 <__ctype_b_loc@plt+0x2ed9>
  40133c:	mov    rdx,QWORD PTR [rax]
  40133f:	call   4010b0 <freopen@plt>
  401344:	test   rax,rax
  401347:	je     402110 <__ctype_b_loc@plt+0xf20>
  40134d:	lea    rdi,[rip+0x2d75]        # 4040c9 <__ctype_b_loc@plt+0x2ed9>
  401354:	xor    eax,eax
  401356:	mov    esi,0x2
  40135b:	call   401180 <open@plt>
  401360:	cmp    eax,0xffffffff
  401363:	mov    ebx,eax
  401365:	je     401c4b <__ctype_b_loc@plt+0xa5b>
  40136b:	lea    r13,[rsp+0x18]
  401370:	mov    edi,eax
  401372:	mov    esi,0x5413
  401377:	xor    eax,eax
  401379:	mov    rdx,r13
  40137c:	call   4010c0 <ioctl@plt>
  401381:	mov    edi,ebx
  401383:	mov    ebp,eax
  401385:	call   4010d0 <close@plt>
  40138a:	test   ebp,ebp
  40138c:	js     401cee <__ctype_b_loc@plt+0xafe>
  401392:	movzx  eax,WORD PTR [rsp+0x1a]
  401397:	mov    QWORD PTR [rip+0x4d8a],rax        # 406128 <__ctype_b_loc@plt+0x4f38>
  40139e:	movzx  eax,WORD PTR [rsp+0x18]
  4013a3:	mov    QWORD PTR [rip+0x4d76],rax        # 406120 <__ctype_b_loc@plt+0x4f30>
  4013aa:	lea    rsi,[rip+0x4ccf]        # 406080 <__ctype_b_loc@plt+0x4e90>
  4013b1:	xor    edi,edi
  4013b3:	call   401160 <tcgetattr@plt>
  4013b8:	mov    rcx,QWORD PTR [rip+0x4cd1]        # 406090 <__ctype_b_loc@plt+0x4ea0>
  4013bf:	mov    rax,QWORD PTR [rip+0x4cc2]        # 406088 <__ctype_b_loc@plt+0x4e98>
  4013c6:	xor    esi,esi
  4013c8:	mov    rdx,QWORD PTR [rip+0x4cb1]        # 406080 <__ctype_b_loc@plt+0x4e90>
  4013cf:	xor    edi,edi
  4013d1:	mov    QWORD PTR [rip+0x4c78],rcx        # 406050 <__ctype_b_loc@plt+0x4e60>
  4013d8:	mov    rcx,QWORD PTR [rip+0x4cb9]        # 406098 <__ctype_b_loc@plt+0x4ea8>
  4013df:	mov    rbx,rax
  4013e2:	mov    QWORD PTR [rip+0x4c57],rdx        # 406040 <__ctype_b_loc@plt+0x4e50>
  4013e9:	shr    rbx,0x20
  4013ed:	and    edx,0xfffffa15
  4013f3:	mov    DWORD PTR [rip+0x4c47],edx        # 406040 <__ctype_b_loc@plt+0x4e50>
  4013f9:	mov    rdx,rbx
  4013fc:	and    eax,0xfffffecf
  401401:	mov    QWORD PTR [rip+0x4c50],rcx        # 406058 <__ctype_b_loc@plt+0x4e68>
  401408:	mov    rcx,QWORD PTR [rip+0x4c91]        # 4060a0 <__ctype_b_loc@plt+0x4eb0>
  40140f:	and    edx,0xffff7fb4
  401415:	mov    DWORD PTR [rip+0x4c31],edx        # 40604c <__ctype_b_loc@plt+0x4e5c>
  40141b:	lea    rdx,[rip+0x4c1e]        # 406040 <__ctype_b_loc@plt+0x4e50>
  401422:	or     eax,0x30
  401425:	mov    DWORD PTR [rip+0x4c1d],eax        # 406048 <__ctype_b_loc@plt+0x4e58>
  40142b:	mov    BYTE PTR [rip+0x4c25],0x1        # 406057 <__ctype_b_loc@plt+0x4e67>
  401432:	mov    QWORD PTR [rip+0x4c27],rcx        # 406060 <__ctype_b_loc@plt+0x4e70>
  401439:	mov    rcx,QWORD PTR [rip+0x4c68]        # 4060a8 <__ctype_b_loc@plt+0x4eb8>
  401440:	mov    QWORD PTR [rip+0x4c21],rcx        # 406068 <__ctype_b_loc@plt+0x4e78>
  401447:	mov    rcx,QWORD PTR [rip+0x4c62]        # 4060b0 <__ctype_b_loc@plt+0x4ec0>
  40144e:	mov    QWORD PTR [rip+0x4c1b],rcx        # 406070 <__ctype_b_loc@plt+0x4e80>
  401455:	mov    ecx,DWORD PTR [rip+0x4c5d]        # 4060b8 <__ctype_b_loc@plt+0x4ec8>
  40145b:	mov    DWORD PTR [rip+0x4c17],ecx        # 406078 <__ctype_b_loc@plt+0x4e88>
  401461:	call   401170 <tcsetattr@plt>
  401466:	mov    rax,QWORD PTR [rip+0x4cab]        # 406118 <__ctype_b_loc@plt+0x4f28>
  40146d:	cmp    QWORD PTR [rip+0x4cac],rax        # 406120 <__ctype_b_loc@plt+0x4f30>
  401474:	cmovbe rax,QWORD PTR [rip+0x4ca4]        # 406120 <__ctype_b_loc@plt+0x4f30>
  40147c:	mov    rdx,QWORD PTR [rip+0x4c75]        # 4060f8 <__ctype_b_loc@plt+0x4f08>
  401483:	test   rdx,rdx
  401486:	mov    QWORD PTR [rip+0x4c8b],rax        # 406118 <__ctype_b_loc@plt+0x4f28>
  40148d:	je     401d3d <__ctype_b_loc@plt+0xb4d>
  401493:	movzx  eax,BYTE PTR [rdx]
  401496:	xor    ecx,ecx
  401498:	add    rdx,0x1
  40149c:	test   al,al
  40149e:	je     4014bc <__ctype_b_loc@plt+0x2cc>
  4014a0:	and    eax,0xc0
  4014a5:	add    eax,0xffffff80
  4014a8:	setne  al
  4014ab:	add    rdx,0x1
  4014af:	movzx  eax,al
  4014b2:	add    ecx,eax
  4014b4:	movzx  eax,BYTE PTR [rdx-0x1]
  4014b8:	test   al,al
  4014ba:	jne    4014a0 <__ctype_b_loc@plt+0x2b0>
  4014bc:	add    ecx,0x4
  4014bf:	movsxd rcx,ecx
  4014c2:	movabs rdx,0xaaaaaaaaaaaaaaab
  4014cc:	mov    QWORD PTR [rip+0x4c35],rcx        # 406108 <__ctype_b_loc@plt+0x4f18>
  4014d3:	mov    rax,rdx
  4014d6:	mul    QWORD PTR [rip+0x4c4b]        # 406128 <__ctype_b_loc@plt+0x4f38>
  4014dd:	mov    rax,QWORD PTR [rip+0x4c2c]        # 406110 <__ctype_b_loc@plt+0x4f20>
  4014e4:	shr    rdx,1
  4014e7:	cmp    rdx,rax
  4014ea:	cmova  rdx,rax
  4014ee:	mov    QWORD PTR [rip+0x4c1b],rdx        # 406110 <__ctype_b_loc@plt+0x4f20>
  4014f5:	call   402700 <__ctype_b_loc@plt+0x1510>
  4014fa:	mov    edx,DWORD PTR [rip+0x4c30]        # 406130 <__ctype_b_loc@plt+0x4f40>
  401500:	test   edx,edx
  401502:	je     401509 <__ctype_b_loc@plt+0x319>
  401504:	call   402bf0 <__ctype_b_loc@plt+0x1a00>
  401509:	lea    rbx,[rsp+0x20]
  40150e:	lea    r12,[rip+0x2c37]        # 40414c <__ctype_b_loc@plt+0x2f5c>
  401515:	lea    r15,[rip+0x2e30]        # 40434c <__ctype_b_loc@plt+0x315c>
  40151c:	lea    r14,[rip+0x4c1e]        # 406141 <__ctype_b_loc@plt+0x4f51>
  401523:	call   402e00 <__ctype_b_loc@plt+0x1c10>
  401528:	nop    DWORD PTR [rax+rax*1+0x0]
  401530:	mov    rdi,r13
  401533:	call   403280 <__ctype_b_loc@plt+0x2090>
  401538:	movzx  eax,BYTE PTR [rsp+0x18]
  40153d:	mov    QWORD PTR [rbx],0x0
  401544:	mov    QWORD PTR [rbx+0x8],0x0
  40154c:	mov    QWORD PTR [rbx+0x10],0x0
  401554:	mov    QWORD PTR [rbx+0x18],0x0
  40155c:	mov    BYTE PTR [rsp+0x20],al
  401560:	cmp    al,0x7f
  401562:	ja     401c11 <__ctype_b_loc@plt+0xa21>
  401568:	movsxd rax,DWORD PTR [r12+rax*4]
  40156c:	add    rax,r12
  40156f:	jmp    rax
  401571:	nop    DWORD PTR [rax+0x0]
  401578:	lea    rdi,[rip+0x2b5c]        # 4040db <__ctype_b_loc@plt+0x2eeb>
  40157f:	mov    ecx,0x3
  401584:	mov    rsi,rax
  401587:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401589:	jne    4015a0 <__ctype_b_loc@plt+0x3b0>
  40158b:	mov    DWORD PTR [rip+0x4b9b],0xffffffff        # 406130 <__ctype_b_loc@plt+0x4f40>
  401595:	jmp    40129e <__ctype_b_loc@plt+0xae>
  40159a:	nop    WORD PTR [rax+rax*1+0x0]
  4015a0:	cmp    BYTE PTR [rax],0x2d
  4015a3:	je     401610 <__ctype_b_loc@plt+0x420>
  4015a5:	lea    rdi,[rip+0x4b94]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4015ac:	mov    edx,0x1fff
  4015b1:	mov    rsi,rax
  4015b4:	call   401050 <strncpy@plt>
  4015b9:	lea    rsi,[rip+0x4b80]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4015c0:	mov    rdx,rsi
  4015c3:	mov    ecx,DWORD PTR [rdx]
  4015c5:	add    rdx,0x4
  4015c9:	lea    eax,[rcx-0x1010101]
  4015cf:	andn   eax,ecx,eax
  4015d4:	and    eax,0x80808080
  4015d9:	je     4015c3 <__ctype_b_loc@plt+0x3d3>
  4015db:	mov    ecx,eax
  4015dd:	shr    ecx,0x10
  4015e0:	test   eax,0x8080
  4015e5:	cmove  eax,ecx
  4015e8:	lea    rcx,[rdx+0x2]
  4015ec:	mov    edi,eax
  4015ee:	cmove  rdx,rcx
  4015f2:	add    dil,al
  4015f5:	sbb    rdx,0x3
  4015f9:	sub    rdx,rsi
  4015fc:	mov    QWORD PTR [rip+0x4afd],rdx        # 406100 <__ctype_b_loc@plt+0x4f10>
  401603:	jmp    40129e <__ctype_b_loc@plt+0xae>
  401608:	nop    DWORD PTR [rax+rax*1+0x0]
  401610:	add    ebx,0x1
  401613:	cmp    ebp,ebx
  401615:	je     4016b2 <__ctype_b_loc@plt+0x4c2>
  40161b:	lea    rdi,[rip+0x2abc]        # 4040de <__ctype_b_loc@plt+0x2eee>
  401622:	mov    ecx,0x3
  401627:	mov    rsi,rax
  40162a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40162c:	jne    401660 <__ctype_b_loc@plt+0x470>
  40162e:	mov    rax,QWORD PTR [r14+rdx*1+0x8]
  401633:	test   rax,rax
  401636:	mov    QWORD PTR [rip+0x4abb],rax        # 4060f8 <__ctype_b_loc@plt+0x4f08>
  40163d:	je     40129e <__ctype_b_loc@plt+0xae>
  401643:	cmp    BYTE PTR [rax],0x0
  401646:	jne    40129e <__ctype_b_loc@plt+0xae>
  40164c:	mov    QWORD PTR [rip+0x4aa1],0x0        # 4060f8 <__ctype_b_loc@plt+0x4f08>
  401657:	jmp    40129e <__ctype_b_loc@plt+0xae>
  40165c:	nop    DWORD PTR [rax+0x0]
  401660:	lea    rdi,[rip+0x2a7a]        # 4040e1 <__ctype_b_loc@plt+0x2ef1>
  401667:	mov    QWORD PTR [rsp+0x8],rdx
  40166c:	mov    ecx,0x3
  401671:	mov    rsi,rax
  401674:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401676:	jne    4016b2 <__ctype_b_loc@plt+0x4c2>
  401678:	call   401040 <__errno_location@plt>
  40167d:	mov    rdx,QWORD PTR [rsp+0x8]
  401682:	xor    esi,esi
  401684:	mov    DWORD PTR [rax],0x0
  40168a:	mov    QWORD PTR [rsp],rax
  40168e:	mov    rdi,QWORD PTR [r14+rdx*1+0x8]
  401693:	mov    edx,0xa
  401698:	call   4011a0 <strtoul@plt>
  40169d:	mov    rcx,QWORD PTR [rsp]
  4016a1:	mov    QWORD PTR [rip+0x4a70],rax        # 406118 <__ctype_b_loc@plt+0x4f28>
  4016a8:	mov    ecx,DWORD PTR [rcx]
  4016aa:	test   ecx,ecx
  4016ac:	je     40129e <__ctype_b_loc@plt+0xae>
  4016b2:	call   401200 <__ctype_b_loc@plt+0x10>
  4016b7:	mov    rax,QWORD PTR [rip+0x4a02]        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  4016be:	test   rax,rax
  4016c1:	je     4016d7 <__ctype_b_loc@plt+0x4e7>
  4016c3:	mov    rsi,QWORD PTR [rax]
  4016c6:	lea    rdi,[rip+0x4a73]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4016cd:	mov    edx,0x1fff
  4016d2:	call   401050 <strncpy@plt>
  4016d7:	lea    rdi,[rip+0x4a62]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4016de:	xor    eax,eax
  4016e0:	or     rcx,0xffffffffffffffff
  4016e4:	repnz scas al,BYTE PTR es:[rdi]
  4016e6:	mov    rax,rcx
  4016e9:	not    rax
  4016ec:	sub    rax,0x1
  4016f0:	mov    QWORD PTR [rip+0x4a09],rax        # 406100 <__ctype_b_loc@plt+0x4f10>
  4016f7:	call   402700 <__ctype_b_loc@plt+0x1510>
  4016fc:	call   402e00 <__ctype_b_loc@plt+0x1c10>
  401701:	lea    rdi,[rip+0x4a38]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401708:	xor    ebx,ebx
  40170a:	call   401060 <puts@plt>
  40170f:	mov    eax,DWORD PTR [rip+0x4a1b]        # 406130 <__ctype_b_loc@plt+0x4f40>
  401715:	lea    rdx,[rip+0x292f]        # 40404b <__ctype_b_loc@plt+0x2e5b>
  40171c:	test   eax,eax
  40171e:	je     401727 <__ctype_b_loc@plt+0x537>
  401720:	lea    rdx,[rip+0x29f6]        # 40411d <__ctype_b_loc@plt+0x2f2d>
  401727:	mov    rax,QWORD PTR [rip+0x48ca]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  40172e:	mov    esi,0x1
  401733:	mov    rdi,QWORD PTR [rax]
  401736:	xor    eax,eax
  401738:	call   4011d0 <__fprintf_chk@plt>
  40173d:	lea    rdx,[rip+0x493c]        # 406080 <__ctype_b_loc@plt+0x4e90>
  401744:	xor    esi,esi
  401746:	xor    edi,edi
  401748:	call   401170 <tcsetattr@plt>
  40174d:	mov    eax,ebx
  40174f:	mov    rbx,QWORD PTR [rsp+0x48]
  401754:	xor    rbx,QWORD PTR fs:0x28
  40175d:	jne    40210b <__ctype_b_loc@plt+0xf1b>
  401763:	add    rsp,0x58
  401767:	pop    rbx
  401768:	pop    rbp
  401769:	pop    r12
  40176b:	pop    r13
  40176d:	pop    r14
  40176f:	pop    r15
  401771:	ret    
  401772:	mov    rax,QWORD PTR [rip+0x4987]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401779:	test   rax,rax
  40177c:	jne    401c6b <__ctype_b_loc@plt+0xa7b>
  401782:	mov    rax,QWORD PTR [rip+0x4937]        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  401789:	test   rax,rax
  40178c:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  40178e:	mov    rax,QWORD PTR [rax+0x8]
  401792:	test   rax,rax
  401795:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  401797:	mov    rdi,QWORD PTR [rip+0x4932]        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  40179e:	cmp    QWORD PTR [rax+0x10],rdi
  4017a2:	mov    QWORD PTR [rip+0x4917],rax        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  4017a9:	je     401fe1 <__ctype_b_loc@plt+0xdf1>
  4017af:	nop
  4017b0:	call   402e00 <__ctype_b_loc@plt+0x1c10>
  4017b5:	jmp    401530 <__ctype_b_loc@plt+0x340>
  4017ba:	mov    rax,QWORD PTR [rip+0x493f]        # 406100 <__ctype_b_loc@plt+0x4f10>
  4017c1:	lea    rbp,[rip+0x4978]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4017c8:	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
  4017cd:	jne    401cbe <__ctype_b_loc@plt+0xace>
  4017d3:	mov    rax,QWORD PTR [rip+0x48e6]        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  4017da:	test   rax,rax
  4017dd:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  4017df:	mov    rax,QWORD PTR [rax+0x10]
  4017e3:	test   rax,rax
  4017e6:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  4017e8:	cmp    rax,QWORD PTR [rip+0x48d9]        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  4017ef:	mov    QWORD PTR [rip+0x48ca],rax        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  4017f6:	jne    4017b0 <__ctype_b_loc@plt+0x5c0>
  4017f8:	mov    QWORD PTR [rip+0x48d1],rax        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  4017ff:	call   402240 <__ctype_b_loc@plt+0x1050>
  401804:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401806:	mov    rax,QWORD PTR [rip+0x48f3]        # 406100 <__ctype_b_loc@plt+0x4f10>
  40180d:	lea    rbp,[rip+0x492c]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401814:	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
  401819:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  40181b:	add    rax,0x1
  40181f:	lea    rsi,[rip+0x4919]        # 40613f <__ctype_b_loc@plt+0x4f4f>
  401826:	jmp    401843 <__ctype_b_loc@plt+0x653>
  401828:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	movsx  edx,BYTE PTR [rsi+rax*1+0x1]
  401835:	and    edx,0xc0
  40183b:	add    edx,0xffffff80
  40183e:	jne    40184c <__ctype_b_loc@plt+0x65c>
  401840:	mov    rax,rcx
  401843:	mov    rcx,rax
  401846:	add    rcx,0x1
  40184a:	jns    401830 <__ctype_b_loc@plt+0x640>
  40184c:	mov    QWORD PTR [rip+0x48ad],rax        # 406100 <__ctype_b_loc@plt+0x4f10>
  401853:	mov    rcx,QWORD PTR [rip+0x48a6]        # 406100 <__ctype_b_loc@plt+0x4f10>
  40185a:	test   rcx,rcx
  40185d:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  401863:	lea    rsi,[rcx-0x1]
  401867:	jmp    401883 <__ctype_b_loc@plt+0x693>
  401869:	nop    DWORD PTR [rax+0x0]
  401870:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  401876:	and    eax,0xc0
  40187b:	add    eax,0xffffff80
  40187e:	jne    40188c <__ctype_b_loc@plt+0x69c>
  401880:	mov    rsi,rdx
  401883:	mov    rdx,rsi
  401886:	sub    rdx,0x1
  40188a:	jns    401870 <__ctype_b_loc@plt+0x680>
  40188c:	sub    rsi,rcx
  40188f:	xor    edi,edi
  401891:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401896:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  40189b:	mov    ebx,0x1
  4018a0:	jmp    40170f <__ctype_b_loc@plt+0x51f>
  4018a5:	mov    rdi,QWORD PTR [rip+0x4854]        # 406100 <__ctype_b_loc@plt+0x4f10>
  4018ac:	lea    rbp,[rip+0x488d]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4018b3:	test   rdi,rdi
  4018b6:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  4018bc:	nop    DWORD PTR [rax+0x0]
  4018c0:	lea    rsi,[rdi-0x1]
  4018c4:	mov    rax,rsi
  4018c7:	jmp    4018e4 <__ctype_b_loc@plt+0x6f4>
  4018c9:	nop    DWORD PTR [rax+0x0]
  4018d0:	movsx  edx,BYTE PTR [r14+rax*1-0x1]
  4018d6:	and    edx,0xc0
  4018dc:	add    edx,0xffffff80
  4018df:	jne    4018ed <__ctype_b_loc@plt+0x6fd>
  4018e1:	mov    rax,rcx
  4018e4:	mov    rcx,rax
  4018e7:	sub    rcx,0x1
  4018eb:	jns    4018d0 <__ctype_b_loc@plt+0x6e0>
  4018ed:	cmp    BYTE PTR [rbp+rax*1+0x0],0x20
  4018f2:	je     401913 <__ctype_b_loc@plt+0x723>
  4018f4:	jmp    40197d <__ctype_b_loc@plt+0x78d>
  4018f9:	nop    DWORD PTR [rax+0x0]
  401900:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  401906:	and    eax,0xc0
  40190b:	add    eax,0xffffff80
  40190e:	jne    40191c <__ctype_b_loc@plt+0x72c>
  401910:	mov    rsi,rdx
  401913:	mov    rdx,rsi
  401916:	sub    rdx,0x1
  40191a:	jns    401900 <__ctype_b_loc@plt+0x710>
  40191c:	sub    rsi,rdi
  40191f:	xor    edi,edi
  401921:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401926:	mov    rdi,QWORD PTR [rip+0x47d3]        # 406100 <__ctype_b_loc@plt+0x4f10>
  40192d:	test   rdi,rdi
  401930:	jne    4018c0 <__ctype_b_loc@plt+0x6d0>
  401932:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401937:	nop    WORD PTR [rax+rax*1+0x0]
  401940:	cmp    BYTE PTR [rbp+rax*1+0x0],0x20
  401945:	jne    401963 <__ctype_b_loc@plt+0x773>
  401947:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  40194c:	nop    DWORD PTR [rax+0x0]
  401950:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  401956:	and    eax,0xc0
  40195b:	add    eax,0xffffff80
  40195e:	jne    40196c <__ctype_b_loc@plt+0x77c>
  401960:	mov    rsi,rdx
  401963:	mov    rdx,rsi
  401966:	sub    rdx,0x1
  40196a:	jns    401950 <__ctype_b_loc@plt+0x760>
  40196c:	sub    rsi,rdi
  40196f:	xor    edi,edi
  401971:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401976:	mov    rdi,QWORD PTR [rip+0x4783]        # 406100 <__ctype_b_loc@plt+0x4f10>
  40197d:	test   rdi,rdi
  401980:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  401986:	lea    rsi,[rdi-0x1]
  40198a:	mov    rax,rsi
  40198d:	jmp    4019a4 <__ctype_b_loc@plt+0x7b4>
  40198f:	nop
  401990:	movsx  edx,BYTE PTR [r14+rax*1-0x1]
  401996:	and    edx,0xc0
  40199c:	add    edx,0xffffff80
  40199f:	jne    401940 <__ctype_b_loc@plt+0x750>
  4019a1:	mov    rax,rcx
  4019a4:	mov    rcx,rax
  4019a7:	sub    rcx,0x1
  4019ab:	jns    401990 <__ctype_b_loc@plt+0x7a0>
  4019ad:	jmp    401940 <__ctype_b_loc@plt+0x750>
  4019af:	mov    rax,QWORD PTR [rip+0x4722]        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  4019b6:	test   rax,rax
  4019b9:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  4019bf:	mov    QWORD PTR [rip+0x470a],rax        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  4019c6:	mov    QWORD PTR [rip+0x46f3],rax        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  4019cd:	call   402240 <__ctype_b_loc@plt+0x1050>
  4019d2:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  4019d7:	mov    rdi,r13
  4019da:	call   403280 <__ctype_b_loc@plt+0x2090>
  4019df:	movzx  eax,BYTE PTR [rsp+0x18]
  4019e4:	cmp    al,0x62
  4019e6:	je     401e26 <__ctype_b_loc@plt+0xc36>
  4019ec:	jle    401d09 <__ctype_b_loc@plt+0xb19>
  4019f2:	cmp    al,0x66
  4019f4:	je     401d8b <__ctype_b_loc@plt+0xb9b>
  4019fa:	cmp    al,0x76
  4019fc:	je     401d76 <__ctype_b_loc@plt+0xb86>
  401a02:	cmp    al,0x64
  401a04:	jne    4017b0 <__ctype_b_loc@plt+0x5c0>
  401a0a:	lea    rbp,[rip+0x472f]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401a11:	lea    rcx,[rip+0x4727]        # 40613f <__ctype_b_loc@plt+0x4f4f>
  401a18:	mov    rdi,QWORD PTR [rip+0x46e1]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401a1f:	cmp    BYTE PTR [rbp+rdi*1+0x0],0x0
  401a24:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  401a2a:	lea    rax,[rdi+0x1]
  401a2e:	mov    rdx,rax
  401a31:	jmp    401a4b <__ctype_b_loc@plt+0x85b>
  401a33:	nop    DWORD PTR [rax+rax*1+0x0]
  401a38:	movsx  esi,BYTE PTR [rcx+rdx*1+0x1]
  401a3d:	and    esi,0xc0
  401a43:	add    esi,0xffffff80
  401a46:	jne    401a54 <__ctype_b_loc@plt+0x864>
  401a48:	mov    rdx,r9
  401a4b:	mov    r9,rdx
  401a4e:	add    r9,0x1
  401a52:	jns    401a38 <__ctype_b_loc@plt+0x848>
  401a54:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x20
  401a59:	je     401a73 <__ctype_b_loc@plt+0x883>
  401a5b:	jmp    401f5a <__ctype_b_loc@plt+0xd6a>
  401a60:	movsx  edx,BYTE PTR [rcx+rax*1+0x1]
  401a65:	and    edx,0xc0
  401a6b:	add    edx,0xffffff80
  401a6e:	jne    401a7c <__ctype_b_loc@plt+0x88c>
  401a70:	mov    rax,rsi
  401a73:	mov    rsi,rax
  401a76:	add    rsi,0x1
  401a7a:	jns    401a60 <__ctype_b_loc@plt+0x870>
  401a7c:	mov    QWORD PTR [rip+0x467d],rax        # 406100 <__ctype_b_loc@plt+0x4f10>
  401a83:	lea    rsi,[rax-0x1]
  401a87:	jmp    401aa4 <__ctype_b_loc@plt+0x8b4>
  401a89:	nop    DWORD PTR [rax+0x0]
  401a90:	movsx  edx,BYTE PTR [r14+rsi*1-0x1]
  401a96:	and    edx,0xc0
  401a9c:	add    edx,0xffffff80
  401a9f:	jne    401aad <__ctype_b_loc@plt+0x8bd>
  401aa1:	mov    rsi,rdi
  401aa4:	mov    rdi,rsi
  401aa7:	sub    rdi,0x1
  401aab:	jns    401a90 <__ctype_b_loc@plt+0x8a0>
  401aad:	sub    rsi,rax
  401ab0:	xor    edi,edi
  401ab2:	mov    QWORD PTR [rsp],rcx
  401ab6:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401abb:	mov    rcx,QWORD PTR [rsp]
  401abf:	jmp    401a18 <__ctype_b_loc@plt+0x828>
  401ac4:	mov    rsi,QWORD PTR [rip+0x4635]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401acb:	xor    edi,edi
  401acd:	neg    rsi
  401ad0:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401ad5:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401ada:	mov    rax,QWORD PTR [rip+0x4607]        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  401ae1:	cmp    QWORD PTR [rip+0x45d8],rax        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  401ae8:	jne    4019bf <__ctype_b_loc@plt+0x7cf>
  401aee:	mov    QWORD PTR [rip+0x4607],0x0        # 406100 <__ctype_b_loc@plt+0x4f10>
  401af9:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401afe:	mov    rax,QWORD PTR [rip+0x45fb]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401b05:	lea    rbp,[rip+0x4634]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401b0c:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  401b11:	call   402700 <__ctype_b_loc@plt+0x1510>
  401b16:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401b1b:	mov    rax,QWORD PTR [rip+0x459e]        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  401b22:	test   rax,rax
  401b25:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  401b2b:	mov    rsi,QWORD PTR [rax]
  401b2e:	lea    rdi,[rip+0x460b]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401b35:	lea    rbp,[rip+0x4604]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401b3c:	mov    edx,0x2000
  401b41:	call   401050 <strncpy@plt>
  401b46:	xor    eax,eax
  401b48:	or     rcx,0xffffffffffffffff
  401b4c:	mov    rdi,rbp
  401b4f:	repnz scas al,BYTE PTR es:[rdi]
  401b51:	mov    rax,rcx
  401b54:	not    rax
  401b57:	sub    rax,0x1
  401b5b:	mov    QWORD PTR [rip+0x459e],rax        # 406100 <__ctype_b_loc@plt+0x4f10>
  401b62:	call   402700 <__ctype_b_loc@plt+0x1510>
  401b67:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401b6c:	mov    rax,QWORD PTR [rip+0x458d]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401b73:	lea    rbp,[rip+0x45c6]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401b7a:	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
  401b7f:	jne    401c9d <__ctype_b_loc@plt+0xaad>
  401b85:	cmp    QWORD PTR [rip+0x453b],0x0        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  401b8d:	je     401bfe <__ctype_b_loc@plt+0xa0e>
  401b8f:	mov    rax,QWORD PTR [rip+0x454a]        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  401b96:	mov    QWORD PTR [rip+0x4533],rax        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  401b9d:	call   402240 <__ctype_b_loc@plt+0x1050>
  401ba2:	mov    rbp,QWORD PTR [rip+0x452f]        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  401ba9:	mov    QWORD PTR [rip+0x4520],rbp        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  401bb0:	call   402240 <__ctype_b_loc@plt+0x1050>
  401bb5:	cmp    QWORD PTR [rip+0x450b],0x0        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  401bbd:	je     401bfe <__ctype_b_loc@plt+0xa0e>
  401bbf:	mov    rax,QWORD PTR [rbp+0x10]
  401bc3:	test   rax,rax
  401bc6:	mov    QWORD PTR [rip+0x4503],rax        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  401bcd:	jne    401bef <__ctype_b_loc@plt+0x9ff>
  401bcf:	jmp    401bfe <__ctype_b_loc@plt+0xa0e>
  401bd1:	nop    DWORD PTR [rax+0x0]
  401bd8:	mov    rax,QWORD PTR [rip+0x44f1]        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  401bdf:	mov    rax,QWORD PTR [rax+0x10]
  401be3:	test   rax,rax
  401be6:	mov    QWORD PTR [rip+0x44e3],rax        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  401bed:	je     401bfe <__ctype_b_loc@plt+0xa0e>
  401bef:	call   402240 <__ctype_b_loc@plt+0x1050>
  401bf4:	cmp    QWORD PTR [rip+0x44cc],0x0        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  401bfc:	jne    401bd8 <__ctype_b_loc@plt+0x9e8>
  401bfe:	mov    rax,QWORD PTR [rip+0x44db]        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  401c05:	mov    QWORD PTR [rip+0x44b4],rax        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  401c0c:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401c11:	call   4011f0 <__ctype_b_loc@plt>
  401c16:	movsx  rdx,BYTE PTR [rsp+0x20]
  401c1c:	mov    rax,QWORD PTR [rax]
  401c1f:	test   BYTE PTR [rax+rdx*2],0x2
  401c23:	jne    4017b0 <__ctype_b_loc@plt+0x5c0>
  401c29:	xor    eax,eax
  401c2b:	mov    rdi,rbx
  401c2e:	or     rcx,0xffffffffffffffff
  401c32:	repnz scas al,BYTE PTR es:[rdi]
  401c34:	mov    rdi,rbx
  401c37:	mov    rax,rcx
  401c3a:	not    rax
  401c3d:	lea    rsi,[rax-0x1]
  401c41:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401c46:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401c4b:	mov    QWORD PTR [rip+0x44ca],0x18        # 406120 <__ctype_b_loc@plt+0x4f30>
  401c56:	mov    QWORD PTR [rip+0x44c7],0x50        # 406128 <__ctype_b_loc@plt+0x4f38>
  401c61:	lea    r13,[rsp+0x18]
  401c66:	jmp    4013aa <__ctype_b_loc@plt+0x1ba>
  401c6b:	mov    rdx,QWORD PTR [rip+0x444e]        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  401c72:	test   rdx,rdx
  401c75:	je     401d44 <__ctype_b_loc@plt+0xb54>
  401c7b:	cmp    QWORD PTR [rdx+0x8],0x0
  401c80:	je     401d44 <__ctype_b_loc@plt+0xb54>
  401c86:	cmp    QWORD PTR [rip+0x448a],0x0        # 406118 <__ctype_b_loc@plt+0x4f28>
  401c8e:	jne    401d44 <__ctype_b_loc@plt+0xb54>
  401c94:	mov    rax,QWORD PTR [rdx+0x8]
  401c98:	jmp    401797 <__ctype_b_loc@plt+0x5a7>
  401c9d:	xor    eax,eax
  401c9f:	or     rcx,0xffffffffffffffff
  401ca3:	mov    rdi,rbp
  401ca6:	repnz scas al,BYTE PTR es:[rdi]
  401ca8:	mov    rax,rcx
  401cab:	not    rax
  401cae:	sub    rax,0x1
  401cb2:	mov    QWORD PTR [rip+0x4447],rax        # 406100 <__ctype_b_loc@plt+0x4f10>
  401cb9:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401cbe:	add    rax,0x1
  401cc2:	lea    rsi,[rip+0x4476]        # 40613f <__ctype_b_loc@plt+0x4f4f>
  401cc9:	jmp    401ce3 <__ctype_b_loc@plt+0xaf3>
  401ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd0:	movsx  edx,BYTE PTR [rsi+rax*1+0x1]
  401cd5:	and    edx,0xc0
  401cdb:	add    edx,0xffffff80
  401cde:	jne    401cb2 <__ctype_b_loc@plt+0xac2>
  401ce0:	mov    rax,rcx
  401ce3:	mov    rcx,rax
  401ce6:	add    rcx,0x1
  401cea:	jns    401cd0 <__ctype_b_loc@plt+0xae0>
  401cec:	jmp    401cb2 <__ctype_b_loc@plt+0xac2>
  401cee:	mov    QWORD PTR [rip+0x442f],0x50        # 406128 <__ctype_b_loc@plt+0x4f38>
  401cf9:	mov    QWORD PTR [rip+0x441c],0x18        # 406120 <__ctype_b_loc@plt+0x4f30>
  401d04:	jmp    4013aa <__ctype_b_loc@plt+0x1ba>
  401d09:	cmp    al,0x1b
  401d0b:	je     401e17 <__ctype_b_loc@plt+0xc27>
  401d11:	cmp    al,0x5b
  401d13:	jne    4017b0 <__ctype_b_loc@plt+0x5c0>
  401d19:	mov    rdi,r13
  401d1c:	call   403280 <__ctype_b_loc@plt+0x2090>
  401d21:	movzx  edx,BYTE PTR [rsp+0x18]
  401d26:	lea    eax,[rdx-0x31]
  401d29:	cmp    al,0x17
  401d2b:	ja     4017b0 <__ctype_b_loc@plt+0x5c0>
  401d31:	movzx  eax,al
  401d34:	movsxd rax,DWORD PTR [r15+rax*4]
  401d38:	add    rax,r15
  401d3b:	jmp    rax
  401d3d:	xor    ecx,ecx
  401d3f:	jmp    4014c2 <__ctype_b_loc@plt+0x2d2>
  401d44:	sub    rax,0x1
  401d48:	jmp    401d68 <__ctype_b_loc@plt+0xb78>
  401d4a:	nop    WORD PTR [rax+rax*1+0x0]
  401d50:	movsx  edx,BYTE PTR [r14+rax*1-0x1]
  401d56:	and    edx,0xc0
  401d5c:	add    edx,0xffffff80
  401d5f:	jne    401cb2 <__ctype_b_loc@plt+0xac2>
  401d65:	mov    rax,rcx
  401d68:	mov    rcx,rax
  401d6b:	sub    rcx,0x1
  401d6f:	jns    401d50 <__ctype_b_loc@plt+0xb60>
  401d71:	jmp    401cb2 <__ctype_b_loc@plt+0xac2>
  401d76:	mov    rax,QWORD PTR [rip+0x434b]        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  401d7d:	test   rax,rax
  401d80:	jne    4019bf <__ctype_b_loc@plt+0x7cf>
  401d86:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401d8b:	mov    rdi,QWORD PTR [rip+0x436e]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401d92:	lea    rbp,[rip+0x43a7]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401d99:	lea    r9,[rip+0x439f]        # 40613f <__ctype_b_loc@plt+0x4f4f>
  401da0:	xor    r11d,r11d
  401da3:	mov    r10,rdi
  401da6:	cmp    BYTE PTR [rbp+r10*1+0x0],0x0
  401dac:	je     401f45 <__ctype_b_loc@plt+0xd55>
  401db2:	lea    rdx,[r10+0x1]
  401db6:	mov    rax,rdx
  401db9:	jmp    401dd4 <__ctype_b_loc@plt+0xbe4>
  401dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401dc0:	movsx  ecx,BYTE PTR [r9+rax*1+0x1]
  401dc6:	and    ecx,0xc0
  401dcc:	add    ecx,0xffffff80
  401dcf:	jne    401ddd <__ctype_b_loc@plt+0xbed>
  401dd1:	mov    rax,rsi
  401dd4:	mov    rsi,rax
  401dd7:	add    rsi,0x1
  401ddb:	jns    401dc0 <__ctype_b_loc@plt+0xbd0>
  401ddd:	cmp    BYTE PTR [rbp+rax*1+0x0],0x20
  401de2:	je     401e03 <__ctype_b_loc@plt+0xc13>
  401de4:	jmp    402092 <__ctype_b_loc@plt+0xea2>
  401de9:	nop    DWORD PTR [rax+0x0]
  401df0:	movsx  eax,BYTE PTR [r9+rdx*1+0x1]
  401df6:	and    eax,0xc0
  401dfb:	add    eax,0xffffff80
  401dfe:	jne    401e0c <__ctype_b_loc@plt+0xc1c>
  401e00:	mov    rdx,rcx
  401e03:	mov    rcx,rdx
  401e06:	add    rcx,0x1
  401e0a:	jns    401df0 <__ctype_b_loc@plt+0xc00>
  401e0c:	mov    r10,rdx
  401e0f:	mov    r11d,0x1
  401e15:	jmp    401da6 <__ctype_b_loc@plt+0xbb6>
  401e17:	mov    BYTE PTR [rsp+0x18],0x3
  401e1c:	movzx  eax,BYTE PTR [rsp+0x18]
  401e21:	jmp    401560 <__ctype_b_loc@plt+0x370>
  401e26:	mov    rdi,QWORD PTR [rip+0x42d3]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401e2d:	lea    rsi,[rip+0x430c]        # 406140 <__ctype_b_loc@plt+0x4f50>
  401e34:	xor    r11d,r11d
  401e37:	mov    r10,rdi
  401e3a:	test   r10,r10
  401e3d:	je     402084 <__ctype_b_loc@plt+0xe94>
  401e43:	lea    rdx,[r10-0x1]
  401e47:	mov    rax,rdx
  401e4a:	jmp    401e64 <__ctype_b_loc@plt+0xc74>
  401e4c:	nop    DWORD PTR [rax+0x0]
  401e50:	movsx  ecx,BYTE PTR [r14+rax*1-0x1]
  401e56:	and    ecx,0xc0
  401e5c:	add    ecx,0xffffff80
  401e5f:	jne    401e6d <__ctype_b_loc@plt+0xc7d>
  401e61:	mov    rax,r9
  401e64:	mov    r9,rax
  401e67:	sub    r9,0x1
  401e6b:	jns    401e50 <__ctype_b_loc@plt+0xc60>
  401e6d:	cmp    BYTE PTR [rsi+rax*1],0x20
  401e71:	je     401e93 <__ctype_b_loc@plt+0xca3>
  401e73:	jmp    401ff9 <__ctype_b_loc@plt+0xe09>
  401e78:	nop    DWORD PTR [rax+rax*1+0x0]
  401e80:	movsx  eax,BYTE PTR [r14+rdx*1-0x1]
  401e86:	and    eax,0xc0
  401e8b:	add    eax,0xffffff80
  401e8e:	jne    401e9c <__ctype_b_loc@plt+0xcac>
  401e90:	mov    rdx,rcx
  401e93:	mov    rcx,rdx
  401e96:	sub    rcx,0x1
  401e9a:	jns    401e80 <__ctype_b_loc@plt+0xc90>
  401e9c:	mov    r10,rdx
  401e9f:	mov    r11d,0x1
  401ea5:	jmp    401e3a <__ctype_b_loc@plt+0xc4a>
  401ea7:	mov    BYTE PTR [rsp+0x18],0x2
  401eac:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401eb1:	mov    BYTE PTR [rsp+0x18],0x6
  401eb6:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401ebb:	mov    BYTE PTR [rsp+0x18],0xe
  401ec0:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401ec5:	mov    BYTE PTR [rsp+0x18],0x10
  401eca:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401ecf:	mov    rdi,r13
  401ed2:	call   403280 <__ctype_b_loc@plt+0x2090>
  401ed7:	mov    BYTE PTR [rsp+0x18],0x76
  401edc:	jmp    4019df <__ctype_b_loc@plt+0x7ef>
  401ee1:	mov    rdi,r13
  401ee4:	call   403280 <__ctype_b_loc@plt+0x2090>
  401ee9:	mov    BYTE PTR [rsp+0x18],0x16
  401eee:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401ef3:	cmp    dl,0x46
  401ef6:	je     401f00 <__ctype_b_loc@plt+0xd10>
  401ef8:	mov    rdi,r13
  401efb:	call   403280 <__ctype_b_loc@plt+0x2090>
  401f00:	mov    BYTE PTR [rsp+0x18],0x5
  401f05:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401f0a:	mov    rdi,r13
  401f0d:	call   403280 <__ctype_b_loc@plt+0x2090>
  401f12:	mov    BYTE PTR [rsp+0x18],0x4
  401f17:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401f1c:	mov    rdi,r13
  401f1f:	call   403280 <__ctype_b_loc@plt+0x2090>
  401f24:	mov    BYTE PTR [rsp+0x18],0x19
  401f29:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401f2e:	cmp    dl,0x48
  401f31:	je     401f3b <__ctype_b_loc@plt+0xd4b>
  401f33:	mov    rdi,r13
  401f36:	call   403280 <__ctype_b_loc@plt+0x2090>
  401f3b:	mov    BYTE PTR [rsp+0x18],0x1
  401f40:	jmp    401e1c <__ctype_b_loc@plt+0xc2c>
  401f45:	test   r11b,r11b
  401f48:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  401f4e:	mov    QWORD PTR [rip+0x41ab],r10        # 406100 <__ctype_b_loc@plt+0x4f10>
  401f55:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401f5a:	lea    rdx,[rip+0x41de]        # 40613f <__ctype_b_loc@plt+0x4f4f>
  401f61:	add    rdi,0x1
  401f65:	jmp    401f82 <__ctype_b_loc@plt+0xd92>
  401f67:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	movsx  eax,BYTE PTR [rdx+rdi*1+0x1]
  401f75:	and    eax,0xc0
  401f7a:	add    eax,0xffffff80
  401f7d:	jne    401f8b <__ctype_b_loc@plt+0xd9b>
  401f7f:	mov    rdi,rcx
  401f82:	mov    rcx,rdi
  401f85:	add    rcx,0x1
  401f89:	jns    401f70 <__ctype_b_loc@plt+0xd80>
  401f8b:	mov    QWORD PTR [rip+0x416e],rdi        # 406100 <__ctype_b_loc@plt+0x4f10>
  401f92:	lea    rsi,[rdi-0x1]
  401f96:	jmp    401fb3 <__ctype_b_loc@plt+0xdc3>
  401f98:	nop    DWORD PTR [rax+rax*1+0x0]
  401fa0:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  401fa6:	and    eax,0xc0
  401fab:	add    eax,0xffffff80
  401fae:	jne    401fbc <__ctype_b_loc@plt+0xdcc>
  401fb0:	mov    rsi,rcx
  401fb3:	mov    rcx,rsi
  401fb6:	sub    rcx,0x1
  401fba:	jns    401fa0 <__ctype_b_loc@plt+0xdb0>
  401fbc:	sub    rsi,rdi
  401fbf:	xor    edi,edi
  401fc1:	mov    QWORD PTR [rsp],rdx
  401fc5:	call   402af0 <__ctype_b_loc@plt+0x1900>
  401fca:	mov    rdi,QWORD PTR [rip+0x412f]        # 406100 <__ctype_b_loc@plt+0x4f10>
  401fd1:	mov    rdx,QWORD PTR [rsp]
  401fd5:	test   BYTE PTR [rbp+rdi*1+0x0],0xdf
  401fda:	jne    401f61 <__ctype_b_loc@plt+0xd71>
  401fdc:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401fe1:	mov    rax,QWORD PTR [rip+0x40f0]        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  401fe8:	mov    QWORD PTR [rip+0x40e1],rax        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  401fef:	call   402240 <__ctype_b_loc@plt+0x1050>
  401ff4:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  401ff9:	test   r11b,r11b
  401ffc:	jne    4020ee <__ctype_b_loc@plt+0xefe>
  402002:	xor    r10d,r10d
  402005:	test   rdi,rdi
  402008:	je     4020fd <__ctype_b_loc@plt+0xf0d>
  40200e:	lea    rdx,[rdi-0x1]
  402012:	mov    rax,rdx
  402015:	jmp    402034 <__ctype_b_loc@plt+0xe44>
  402017:	nop    WORD PTR [rax+rax*1+0x0]
  402020:	movsx  ecx,BYTE PTR [r14+rax*1-0x1]
  402026:	and    ecx,0xc0
  40202c:	add    ecx,0xffffff80
  40202f:	jne    40203d <__ctype_b_loc@plt+0xe4d>
  402031:	mov    rax,r9
  402034:	mov    r9,rax
  402037:	sub    r9,0x1
  40203b:	jns    402020 <__ctype_b_loc@plt+0xe30>
  40203d:	cmp    BYTE PTR [rsi+rax*1],0x20
  402041:	jne    40205b <__ctype_b_loc@plt+0xe6b>
  402043:	jmp    40206f <__ctype_b_loc@plt+0xe7f>
  402045:	nop    DWORD PTR [rax]
  402048:	movsx  eax,BYTE PTR [r14+rdx*1-0x1]
  40204e:	and    eax,0xc0
  402053:	add    eax,0xffffff80
  402056:	jne    402064 <__ctype_b_loc@plt+0xe74>
  402058:	mov    rdx,rcx
  40205b:	mov    rcx,rdx
  40205e:	sub    rcx,0x1
  402062:	jns    402048 <__ctype_b_loc@plt+0xe58>
  402064:	mov    rdi,rdx
  402067:	mov    r10d,0x1
  40206d:	jmp    402005 <__ctype_b_loc@plt+0xe15>
  40206f:	test   r10b,r10b
  402072:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  402078:	mov    QWORD PTR [rip+0x4081],rdi        # 406100 <__ctype_b_loc@plt+0x4f10>
  40207f:	jmp    4017b0 <__ctype_b_loc@plt+0x5c0>
  402084:	test   r11b,r11b
  402087:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  40208d:	jmp    401aee <__ctype_b_loc@plt+0x8fe>
  402092:	test   r11b,r11b
  402095:	lea    rsi,[rip+0x40a3]        # 40613f <__ctype_b_loc@plt+0x4f4f>
  40209c:	cmovne rdi,r10
  4020a0:	lea    rax,[rdi+0x1]
  4020a4:	jmp    4020c3 <__ctype_b_loc@plt+0xed3>
  4020a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020b0:	movsx  edx,BYTE PTR [rsi+rax*1+0x1]
  4020b5:	and    edx,0xc0
  4020bb:	add    edx,0xffffff80
  4020be:	jne    4020cc <__ctype_b_loc@plt+0xedc>
  4020c0:	mov    rax,rcx
  4020c3:	mov    rcx,rax
  4020c6:	add    rcx,0x1
  4020ca:	jns    4020b0 <__ctype_b_loc@plt+0xec0>
  4020cc:	test   BYTE PTR [rbp+rax*1+0x0],0xdf
  4020d1:	mov    rdi,rax
  4020d4:	jne    4020a0 <__ctype_b_loc@plt+0xeb0>
  4020d6:	jmp    401cb2 <__ctype_b_loc@plt+0xac2>
  4020db:	lea    rdi,[rip+0x2046]        # 404128 <__ctype_b_loc@plt+0x2f38>
  4020e2:	call   401060 <puts@plt>
  4020e7:	xor    edi,edi
  4020e9:	call   4011b0 <exit@plt>
  4020ee:	mov    QWORD PTR [rip+0x400b],r10        # 406100 <__ctype_b_loc@plt+0x4f10>
  4020f5:	mov    rdi,r10
  4020f8:	jmp    402002 <__ctype_b_loc@plt+0xe12>
  4020fd:	test   r10b,r10b
  402100:	je     4017b0 <__ctype_b_loc@plt+0x5c0>
  402106:	jmp    401aee <__ctype_b_loc@plt+0x8fe>
  40210b:	call   401080 <__stack_chk_fail@plt>
  402110:	lea    rdi,[rip+0x1fea]        # 404101 <__ctype_b_loc@plt+0x2f11>
  402117:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  40211c:	lea    rdi,[rip+0x1fc1]        # 4040e4 <__ctype_b_loc@plt+0x2ef4>
  402123:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  402128:	nop    DWORD PTR [rax+rax*1+0x0]
  402130:	endbr64 
  402134:	xor    ebp,ebp
  402136:	mov    r9,rdx
  402139:	pop    rsi
  40213a:	mov    rdx,rsp
  40213d:	and    rsp,0xfffffffffffffff0
  402141:	push   rax
  402142:	push   rsp
  402143:	mov    r8,0x403340
  40214a:	mov    rcx,0x4032d0
  402151:	mov    rdi,0x401240
  402158:	call   QWORD PTR [rip+0x3e82]        # 405fe0 <__ctype_b_loc@plt+0x4df0>
  40215e:	hlt    
  40215f:	nop
  402160:	endbr64 
  402164:	ret    
  402165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40216f:	nop
  402170:	mov    eax,0x40600f
  402175:	push   rbp
  402176:	sub    rax,0x406008
  40217c:	cmp    rax,0xe
  402180:	mov    rbp,rsp
  402183:	jbe    4021a0 <__ctype_b_loc@plt+0xfb0>
  402185:	mov    eax,0x0
  40218a:	test   rax,rax
  40218d:	je     4021a0 <__ctype_b_loc@plt+0xfb0>
  40218f:	pop    rbp
  402190:	mov    edi,0x406008
  402195:	jmp    rax
  402197:	nop    WORD PTR [rax+rax*1+0x0]
  4021a0:	pop    rbp
  4021a1:	ret    
  4021a2:	nop    DWORD PTR [rax+0x0]
  4021a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021b0:	mov    esi,0x406008
  4021b5:	push   rbp
  4021b6:	sub    rsi,0x406008
  4021bd:	sar    rsi,0x3
  4021c1:	mov    rbp,rsp
  4021c4:	mov    rax,rsi
  4021c7:	shr    rax,0x3f
  4021cb:	add    rsi,rax
  4021ce:	sar    rsi,1
  4021d1:	je     4021e8 <__ctype_b_loc@plt+0xff8>
  4021d3:	mov    eax,0x0
  4021d8:	test   rax,rax
  4021db:	je     4021e8 <__ctype_b_loc@plt+0xff8>
  4021dd:	pop    rbp
  4021de:	mov    edi,0x406008
  4021e3:	jmp    rax
  4021e5:	nop    DWORD PTR [rax]
  4021e8:	pop    rbp
  4021e9:	ret    
  4021ea:	nop    WORD PTR [rax+rax*1+0x0]
  4021f0:	cmp    BYTE PTR [rip+0x3e29],0x0        # 406020 <__ctype_b_loc@plt+0x4e30>
  4021f7:	jne    40220a <__ctype_b_loc@plt+0x101a>
  4021f9:	push   rbp
  4021fa:	mov    rbp,rsp
  4021fd:	call   402170 <__ctype_b_loc@plt+0xf80>
  402202:	pop    rbp
  402203:	mov    BYTE PTR [rip+0x3e16],0x1        # 406020 <__ctype_b_loc@plt+0x4e30>
  40220a:	repz ret 
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	mov    edi,0x405ce0
  402215:	cmp    QWORD PTR [rdi],0x0
  402219:	jne    402220 <__ctype_b_loc@plt+0x1030>
  40221b:	jmp    4021b0 <__ctype_b_loc@plt+0xfc0>
  40221d:	nop    DWORD PTR [rax]
  402220:	mov    eax,0x0
  402225:	test   rax,rax
  402228:	je     40221b <__ctype_b_loc@plt+0x102b>
  40222a:	push   rbp
  40222b:	mov    rbp,rsp
  40222e:	call   rax
  402230:	pop    rbp
  402231:	jmp    4021b0 <__ctype_b_loc@plt+0xfc0>
  402236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402240:	push   r12
  402242:	push   rbp
  402243:	push   rbx
  402244:	sub    rsp,0x10
  402248:	mov    r8,QWORD PTR [rip+0x3ec9]        # 406118 <__ctype_b_loc@plt+0x4f28>
  40224f:	mov    rax,QWORD PTR fs:0x28
  402258:	mov    QWORD PTR [rsp+0x8],rax
  40225d:	xor    eax,eax
  40225f:	test   r8,r8
  402262:	mov    rdi,r8
  402265:	jne    402280 <__ctype_b_loc@plt+0x1090>
  402267:	mov    rax,QWORD PTR [rip+0x3eba]        # 406128 <__ctype_b_loc@plt+0x4f38>
  40226e:	lea    rdi,[rax-0xa]
  402272:	sub    rdi,QWORD PTR [rip+0x3e8f]        # 406108 <__ctype_b_loc@plt+0x4f18>
  402279:	sub    rdi,QWORD PTR [rip+0x3e90]        # 406110 <__ctype_b_loc@plt+0x4f20>
  402280:	mov    r9,QWORD PTR [rip+0x3e49]        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  402287:	test   r9,r9
  40228a:	mov    QWORD PTR [rip+0x3e37],r9        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  402291:	je     402498 <__ctype_b_loc@plt+0x12a8>
  402297:	mov    r11,r9
  40229a:	xor    ebp,ebp
  40229c:	xor    ebx,ebx
  40229e:	mov    r12d,0x4
  4022a4:	nop    DWORD PTR [rax+0x0]
  4022a8:	test   r8,r8
  4022ab:	mov    eax,0x1
  4022b0:	jne    402330 <__ctype_b_loc@plt+0x1140>
  4022b2:	mov    r10,QWORD PTR [r11]
  4022b5:	test   r10,r10
  4022b8:	je     402460 <__ctype_b_loc@plt+0x1270>
  4022be:	movzx  ecx,BYTE PTR [r10]
  4022c2:	test   cl,cl
  4022c4:	je     402460 <__ctype_b_loc@plt+0x1270>
  4022ca:	add    r10,0x1
  4022ce:	mov    eax,ecx
  4022d0:	xor    esi,esi
  4022d2:	mov    rdx,r10
  4022d5:	nop    DWORD PTR [rax]
  4022d8:	and    eax,0xc0
  4022dd:	add    eax,0xffffff80
  4022e0:	setne  al
  4022e3:	add    rdx,0x1
  4022e7:	movzx  eax,al
  4022ea:	add    esi,eax
  4022ec:	movzx  eax,BYTE PTR [rdx-0x1]
  4022f0:	test   al,al
  4022f2:	jne    4022d8 <__ctype_b_loc@plt+0x10e8>
  4022f4:	add    esi,0x4
  4022f7:	mov    rax,rdi
  4022fa:	movsxd rsi,esi
  4022fd:	cmp    rdi,rsi
  402300:	jbe    402330 <__ctype_b_loc@plt+0x1140>
  402302:	xor    eax,eax
  402304:	nop    DWORD PTR [rax+0x0]
  402308:	and    ecx,0xc0
  40230e:	xor    edx,edx
  402310:	add    ecx,0xffffff80
  402313:	setne  dl
  402316:	add    r10,0x1
  40231a:	movzx  ecx,BYTE PTR [r10-0x1]
  40231f:	add    eax,edx
  402321:	test   cl,cl
  402323:	jne    402308 <__ctype_b_loc@plt+0x1118>
  402325:	add    eax,0x4
  402328:	cdqe   
  40232a:	nop    WORD PTR [rax+rax*1+0x0]
  402330:	add    rbx,rax
  402333:	cmp    rdi,rbx
  402336:	jb     402449 <__ctype_b_loc@plt+0x1259>
  40233c:	mov    r11,QWORD PTR [r11+0x10]
  402340:	mov    ebp,0x1
  402345:	test   r11,r11
  402348:	jne    4022a8 <__ctype_b_loc@plt+0x10b8>
  40234e:	mov    QWORD PTR [rip+0x3d6f],0x0        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  402359:	mov    r11,QWORD PTR [r9+0x8]
  40235d:	xor    ebp,ebp
  40235f:	xor    ebx,ebx
  402361:	mov    QWORD PTR [rip+0x3d70],r9        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  402368:	mov    r12d,0x4
  40236e:	test   r11,r11
  402371:	je     402430 <__ctype_b_loc@plt+0x1240>
  402377:	nop    WORD PTR [rax+rax*1+0x0]
  402380:	test   r8,r8
  402383:	mov    eax,0x1
  402388:	jne    402408 <__ctype_b_loc@plt+0x1218>
  40238a:	mov    r10,QWORD PTR [r11]
  40238d:	test   r10,r10
  402390:	je     402470 <__ctype_b_loc@plt+0x1280>
  402396:	movzx  ecx,BYTE PTR [r10]
  40239a:	test   cl,cl
  40239c:	je     402470 <__ctype_b_loc@plt+0x1280>
  4023a2:	add    r10,0x1
  4023a6:	mov    eax,ecx
  4023a8:	xor    esi,esi
  4023aa:	mov    rdx,r10
  4023ad:	nop    DWORD PTR [rax]
  4023b0:	and    eax,0xc0
  4023b5:	add    eax,0xffffff80
  4023b8:	setne  al
  4023bb:	add    rdx,0x1
  4023bf:	movzx  eax,al
  4023c2:	add    esi,eax
  4023c4:	movzx  eax,BYTE PTR [rdx-0x1]
  4023c8:	test   al,al
  4023ca:	jne    4023b0 <__ctype_b_loc@plt+0x11c0>
  4023cc:	add    esi,0x4
  4023cf:	mov    rax,rdi
  4023d2:	movsxd rsi,esi
  4023d5:	cmp    rdi,rsi
  4023d8:	jbe    402408 <__ctype_b_loc@plt+0x1218>
  4023da:	xor    eax,eax
  4023dc:	nop    DWORD PTR [rax+0x0]
  4023e0:	and    ecx,0xc0
  4023e6:	xor    edx,edx
  4023e8:	add    ecx,0xffffff80
  4023eb:	setne  dl
  4023ee:	add    r10,0x1
  4023f2:	movzx  ecx,BYTE PTR [r10-0x1]
  4023f7:	add    eax,edx
  4023f9:	test   cl,cl
  4023fb:	jne    4023e0 <__ctype_b_loc@plt+0x11f0>
  4023fd:	add    eax,0x4
  402400:	cdqe   
  402402:	nop    WORD PTR [rax+rax*1+0x0]
  402408:	add    rbx,rax
  40240b:	cmp    rdi,rbx
  40240e:	jb     402483 <__ctype_b_loc@plt+0x1293>
  402410:	mov    rax,QWORD PTR [r11+0x8]
  402414:	mov    r9,r11
  402417:	mov    ebp,0x1
  40241c:	test   rax,rax
  40241f:	je     402429 <__ctype_b_loc@plt+0x1239>
  402421:	mov    r11,rax
  402424:	jmp    402380 <__ctype_b_loc@plt+0x1190>
  402429:	mov    QWORD PTR [rip+0x3ca8],r11        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  402430:	mov    rax,QWORD PTR [rsp+0x8]
  402435:	xor    rax,QWORD PTR fs:0x28
  40243e:	jne    4024a5 <__ctype_b_loc@plt+0x12b5>
  402440:	add    rsp,0x10
  402444:	pop    rbx
  402445:	pop    rbp
  402446:	pop    r12
  402448:	ret    
  402449:	test   bpl,bpl
  40244c:	je     402359 <__ctype_b_loc@plt+0x1169>
  402452:	mov    QWORD PTR [rip+0x3c6f],r11        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  402459:	jmp    402359 <__ctype_b_loc@plt+0x1169>
  40245e:	xchg   ax,ax
  402460:	cmp    rdi,0x4
  402464:	mov    rax,r12
  402467:	cmovbe rax,rdi
  40246b:	jmp    402330 <__ctype_b_loc@plt+0x1140>
  402470:	cmp    rdi,0x4
  402474:	mov    rax,r12
  402477:	cmovbe rax,rdi
  40247b:	add    rbx,rax
  40247e:	cmp    rdi,rbx
  402481:	jae    402410 <__ctype_b_loc@plt+0x1220>
  402483:	test   bpl,bpl
  402486:	je     402430 <__ctype_b_loc@plt+0x1240>
  402488:	mov    QWORD PTR [rip+0x3c49],r9        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  40248f:	jmp    402430 <__ctype_b_loc@plt+0x1240>
  402491:	nop    DWORD PTR [rax+0x0]
  402498:	mov    QWORD PTR [rip+0x3c35],0x0        # 4060d8 <__ctype_b_loc@plt+0x4ee8>
  4024a3:	jmp    402430 <__ctype_b_loc@plt+0x1240>
  4024a5:	call   401080 <__stack_chk_fail@plt>
  4024aa:	nop    WORD PTR [rax+rax*1+0x0]
  4024b0:	push   rbx
  4024b1:	lea    rdx,[rip+0x3bc8]        # 406080 <__ctype_b_loc@plt+0x4e90>
  4024b8:	mov    rbx,rdi
  4024bb:	xor    esi,esi
  4024bd:	xor    edi,edi
  4024bf:	sub    rsp,0x10
  4024c3:	mov    rax,QWORD PTR fs:0x28
  4024cc:	mov    QWORD PTR [rsp+0x8],rax
  4024d1:	xor    eax,eax
  4024d3:	call   401170 <tcsetattr@plt>
  4024d8:	mov    rax,QWORD PTR [rip+0x3b19]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  4024df:	lea    rdx,[rip+0x1b63]        # 404049 <__ctype_b_loc@plt+0x2e59>
  4024e6:	mov    rcx,rbx
  4024e9:	mov    esi,0x1
  4024ee:	mov    rdi,QWORD PTR [rax]
  4024f1:	xor    eax,eax
  4024f3:	call   4011d0 <__fprintf_chk@plt>
  4024f8:	mov    edi,0x2
  4024fd:	call   4011b0 <exit@plt>
  402502:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40250c:	nop    DWORD PTR [rax+0x0]
  402510:	push   r15
  402512:	push   r14
  402514:	xor    r14d,r14d
  402517:	push   r13
  402519:	push   r12
  40251b:	xor    r12d,r12d
  40251e:	push   rbp
  40251f:	push   rbx
  402520:	xor    ebx,ebx
  402522:	sub    rsp,0x2028
  402529:	mov    rax,QWORD PTR fs:0x28
  402532:	mov    QWORD PTR [rsp+0x2018],rax
  40253a:	xor    eax,eax
  40253c:	lea    r13,[rsp+0x10]
  402541:	mov    QWORD PTR [rsp],0x0
  402549:	mov    QWORD PTR [rsp+0x8],0x0
  402552:	nop    WORD PTR [rax+rax*1+0x0]
  402558:	mov    rax,QWORD PTR [rip+0x3a79]        # 405fd8 <__ctype_b_loc@plt+0x4de8>
  40255f:	mov    esi,0x2000
  402564:	mov    rdi,r13
  402567:	mov    rdx,QWORD PTR [rax]
  40256a:	call   4010f0 <fgets@plt>
  40256f:	test   rax,rax
  402572:	je     40264f <__ctype_b_loc@plt+0x145f>
  402578:	movabs rax,0xaaaaaaaaaaaaaaab
  402582:	add    r12,0x1
  402586:	mov    rbp,QWORD PTR [rip+0x3b63]        # 4060f0 <__ctype_b_loc@plt+0x4f00>
  40258d:	mul    QWORD PTR [rsp]
  402591:	shr    rdx,0x4
  402595:	cmp    r12,rdx
  402598:	jae    402620 <__ctype_b_loc@plt+0x1430>
  40259e:	mov    esi,0xa
  4025a3:	mov    rdi,r13
  4025a6:	call   401090 <strchr@plt>
  4025ab:	test   rax,rax
  4025ae:	je     4025b3 <__ctype_b_loc@plt+0x13c3>
  4025b0:	mov    BYTE PTR [rax],0x0
  4025b3:	mov    rdi,r13
  4025b6:	add    rbp,r14
  4025b9:	call   4011e0 <strdup@plt>
  4025be:	test   rax,rax
  4025c1:	mov    r15,rax
  4025c4:	mov    QWORD PTR [rbp+0x0],rax
  4025c8:	je     4026db <__ctype_b_loc@plt+0x14eb>
  4025ce:	mov    rdi,rax
  4025d1:	call   401070 <strlen@plt>
  4025d6:	cmp    rbx,rax
  4025d9:	jae    402617 <__ctype_b_loc@plt+0x1427>
  4025db:	movzx  eax,BYTE PTR [r15]
  4025df:	xor    ebx,ebx
  4025e1:	lea    rdx,[r15+0x1]
  4025e5:	test   al,al
  4025e7:	je     4026cd <__ctype_b_loc@plt+0x14dd>
  4025ed:	nop    DWORD PTR [rax]
  4025f0:	and    eax,0xc0
  4025f5:	add    eax,0xffffff80
  4025f8:	setne  al
  4025fb:	add    rdx,0x1
  4025ff:	movzx  eax,al
  402602:	add    ebx,eax
  402604:	movzx  eax,BYTE PTR [rdx-0x1]
  402608:	test   al,al
  40260a:	jne    4025f0 <__ctype_b_loc@plt+0x1400>
  40260c:	add    ebx,0x4
  40260f:	movsxd rbx,ebx
  402612:	mov    QWORD PTR [rsp+0x8],r15
  402617:	add    r14,0x18
  40261b:	jmp    402558 <__ctype_b_loc@plt+0x1368>
  402620:	add    QWORD PTR [rsp],0x2000
  402628:	mov    rdi,rbp
  40262b:	mov    rax,QWORD PTR [rsp]
  40262f:	mov    rsi,rax
  402632:	call   401130 <realloc@plt>
  402637:	test   rax,rax
  40263a:	mov    QWORD PTR [rip+0x3aaf],rax        # 4060f0 <__ctype_b_loc@plt+0x4f00>
  402641:	je     4026e7 <__ctype_b_loc@plt+0x14f7>
  402647:	mov    rbp,rax
  40264a:	jmp    40259e <__ctype_b_loc@plt+0x13ae>
  40264f:	mov    rax,QWORD PTR [rip+0x3a9a]        # 4060f0 <__ctype_b_loc@plt+0x4f00>
  402656:	test   rax,rax
  402659:	je     402667 <__ctype_b_loc@plt+0x1477>
  40265b:	lea    rdx,[r12+r12*2]
  40265f:	mov    QWORD PTR [rax+rdx*8],0x0
  402667:	mov    rsi,QWORD PTR [rsp+0x8]
  40266c:	test   rsi,rsi
  40266f:	je     4026d7 <__ctype_b_loc@plt+0x14e7>
  402671:	movzx  eax,BYTE PTR [rsi]
  402674:	xor    ecx,ecx
  402676:	lea    rdx,[rsi+0x1]
  40267a:	test   al,al
  40267c:	je     40269c <__ctype_b_loc@plt+0x14ac>
  40267e:	xchg   ax,ax
  402680:	and    eax,0xc0
  402685:	add    eax,0xffffff80
  402688:	setne  al
  40268b:	add    rdx,0x1
  40268f:	movzx  eax,al
  402692:	add    ecx,eax
  402694:	movzx  eax,BYTE PTR [rdx-0x1]
  402698:	test   al,al
  40269a:	jne    402680 <__ctype_b_loc@plt+0x1490>
  40269c:	lea    eax,[rcx+0x4]
  40269f:	cdqe   
  4026a1:	mov    QWORD PTR [rip+0x3a68],rax        # 406110 <__ctype_b_loc@plt+0x4f20>
  4026a8:	mov    rax,QWORD PTR [rsp+0x2018]
  4026b0:	xor    rax,QWORD PTR fs:0x28
  4026b9:	jne    4026f3 <__ctype_b_loc@plt+0x1503>
  4026bb:	add    rsp,0x2028
  4026c2:	pop    rbx
  4026c3:	pop    rbp
  4026c4:	pop    r12
  4026c6:	pop    r13
  4026c8:	pop    r14
  4026ca:	pop    r15
  4026cc:	ret    
  4026cd:	mov    ebx,0x4
  4026d2:	jmp    402612 <__ctype_b_loc@plt+0x1422>
  4026d7:	xor    ecx,ecx
  4026d9:	jmp    40269c <__ctype_b_loc@plt+0x14ac>
  4026db:	lea    rdi,[rip+0x197a]        # 40405c <__ctype_b_loc@plt+0x2e6c>
  4026e2:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  4026e7:	lea    rdi,[rip+0x195f]        # 40404d <__ctype_b_loc@plt+0x2e5d>
  4026ee:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  4026f3:	call   401080 <__stack_chk_fail@plt>
  4026f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402700:	push   r15
  402702:	push   r14
  402704:	lea    rsi,[rip+0x3a35]        # 406140 <__ctype_b_loc@plt+0x4f50>
  40270b:	push   r13
  40270d:	push   r12
  40270f:	mov    edx,0x2000
  402714:	push   rbp
  402715:	push   rbx
  402716:	sub    rsp,0x2058
  40271d:	lea    rbx,[rsp+0x40]
  402722:	mov    rax,QWORD PTR fs:0x28
  40272b:	mov    QWORD PTR [rsp+0x2048],rax
  402733:	xor    eax,eax
  402735:	mov    rdi,rbx
  402738:	call   401140 <__strcpy_chk@plt>
  40273d:	lea    rsi,[rip+0x1926]        # 40406a <__ctype_b_loc@plt+0x2e7a>
  402744:	mov    rdi,rbx
  402747:	call   401190 <strtok@plt>
  40274c:	test   rax,rax
  40274f:	je     402ac2 <__ctype_b_loc@plt+0x18d2>
  402755:	mov    r12,QWORD PTR [rip+0x38cc]        # 406028 <__ctype_b_loc@plt+0x4e38>
  40275c:	lea    rbp,[rip+0x1907]        # 40406a <__ctype_b_loc@plt+0x2e7a>
  402763:	mov    r13,rax
  402766:	xor    ebx,ebx
  402768:	xor    r14d,r14d
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	mov    edx,DWORD PTR [rip+0x38ba]        # 406030 <__ctype_b_loc@plt+0x4e40>
  402776:	add    r14d,0x1
  40277a:	cmp    r14d,edx
  40277d:	jle    4027ae <__ctype_b_loc@plt+0x15be>
  40277f:	add    edx,0x1
  402782:	mov    rdi,r12
  402785:	mov    DWORD PTR [rip+0x38a5],edx        # 406030 <__ctype_b_loc@plt+0x4e40>
  40278b:	movsxd rdx,edx
  40278e:	lea    rsi,[rdx*8+0x0]
  402796:	call   401130 <realloc@plt>
  40279b:	test   rax,rax
  40279e:	mov    QWORD PTR [rip+0x3883],rax        # 406028 <__ctype_b_loc@plt+0x4e38>
  4027a5:	je     402ad3 <__ctype_b_loc@plt+0x18e3>
  4027ab:	mov    r12,rax
  4027ae:	mov    QWORD PTR [r12+rbx*1],r13
  4027b2:	xor    edi,edi
  4027b4:	mov    rsi,rbp
  4027b7:	call   401190 <strtok@plt>
  4027bc:	add    rbx,0x8
  4027c0:	test   rax,rax
  4027c3:	mov    r13,rax
  4027c6:	jne    402770 <__ctype_b_loc@plt+0x1580>
  4027c8:	mov    rdi,QWORD PTR [r12]
  4027cc:	call   401070 <strlen@plt>
  4027d1:	mov    QWORD PTR [rsp+0x30],rax
  4027d6:	lea    rcx,[rip+0x3963]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4027dd:	mov    QWORD PTR [rip+0x38f8],0x0        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  4027e8:	mov    QWORD PTR [rip+0x38f5],0x0        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  4027f3:	mov    rdx,rcx
  4027f6:	mov    esi,DWORD PTR [rdx]
  4027f8:	add    rdx,0x4
  4027fc:	lea    eax,[rsi-0x1010101]
  402802:	andn   eax,esi,eax
  402807:	and    eax,0x80808080
  40280c:	je     4027f6 <__ctype_b_loc@plt+0x1606>
  40280e:	mov    esi,eax
  402810:	shr    esi,0x10
  402813:	test   eax,0x8080
  402818:	cmove  eax,esi
  40281b:	lea    rsi,[rdx+0x2]
  40281f:	cmove  rdx,rsi
  402823:	mov    esi,eax
  402825:	add    sil,al
  402828:	sbb    rdx,0x3
  40282c:	sub    rdx,rcx
  40282f:	lea    rax,[rdx+0x1]
  402833:	mov    QWORD PTR [rsp+0x38],rax
  402838:	mov    rax,QWORD PTR [rip+0x38b1]        # 4060f0 <__ctype_b_loc@plt+0x4f00>
  40283f:	test   rax,rax
  402842:	mov    rsi,rax
  402845:	je     4029a7 <__ctype_b_loc@plt+0x17b7>
  40284b:	cmp    QWORD PTR [rax],0x0
  40284f:	je     402adf <__ctype_b_loc@plt+0x18ef>
  402855:	mov    QWORD PTR [rsp+0x28],0x0
  40285e:	mov    QWORD PTR [rsp+0x20],0x0
  402867:	mov    r15,rax
  40286a:	mov    QWORD PTR [rsp+0x10],0x0
  402873:	mov    QWORD PTR [rsp+0x18],0x0
  40287c:	mov    DWORD PTR [rsp+0xc],r14d
  402881:	mov    eax,DWORD PTR [rsp+0xc]
  402885:	xor    r13d,r13d
  402888:	xor    r12d,r12d
  40288b:	test   eax,eax
  40288d:	je     402905 <__ctype_b_loc@plt+0x1715>
  40288f:	nop
  402890:	mov    rax,QWORD PTR [rip+0x3791]        # 406028 <__ctype_b_loc@plt+0x4e38>
  402897:	mov    r14,QWORD PTR [r15]
  40289a:	mov    rbx,QWORD PTR [rax+r13*1]
  40289e:	mov    rdi,rbx
  4028a1:	call   401070 <strlen@plt>
  4028a6:	cmp    BYTE PTR [r14],0x0
  4028aa:	mov    rbp,rax
  4028ad:	jne    4028c6 <__ctype_b_loc@plt+0x16d6>
  4028af:	jmp    4029e8 <__ctype_b_loc@plt+0x17f8>
  4028b4:	nop    DWORD PTR [rax+0x0]
  4028b8:	add    r14,0x1
  4028bc:	cmp    BYTE PTR [r14],0x0
  4028c0:	je     4029e8 <__ctype_b_loc@plt+0x17f8>
  4028c6:	mov    rdx,rbp
  4028c9:	mov    rsi,rbx
  4028cc:	mov    rdi,r14
  4028cf:	call   QWORD PTR [rip+0x372b]        # 406000 <__ctype_b_loc@plt+0x4e10>
  4028d5:	test   eax,eax
  4028d7:	jne    4028b8 <__ctype_b_loc@plt+0x16c8>
  4028d9:	add    r12d,0x1
  4028dd:	add    r13,0x8
  4028e1:	cmp    r12d,DWORD PTR [rsp+0xc]
  4028e6:	jne    402890 <__ctype_b_loc@plt+0x16a0>
  4028e8:	mov    rdx,QWORD PTR [rsp+0x38]
  4028ed:	mov    rsi,QWORD PTR [r15]
  4028f0:	lea    rdi,[rip+0x3849]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4028f7:	call   QWORD PTR [rip+0x3703]        # 406000 <__ctype_b_loc@plt+0x4e10>
  4028fd:	test   eax,eax
  4028ff:	jne    402a04 <__ctype_b_loc@plt+0x1814>
  402905:	mov    rax,QWORD PTR [rip+0x37d4]        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  40290c:	test   rax,rax
  40290f:	je     4029f8 <__ctype_b_loc@plt+0x1808>
  402915:	mov    QWORD PTR [rax+0x10],r15
  402919:	mov    QWORD PTR [r15+0x8],rax
  40291d:	mov    QWORD PTR [r15+0x10],0x0
  402925:	mov    QWORD PTR [rip+0x37b4],r15        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	add    r15,0x18
  402934:	je     402940 <__ctype_b_loc@plt+0x1750>
  402936:	cmp    QWORD PTR [r15],0x0
  40293a:	jne    402881 <__ctype_b_loc@plt+0x1691>
  402940:	cmp    QWORD PTR [rsp+0x18],0x0
  402946:	mov    rax,QWORD PTR [rip+0x379b]        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  40294d:	mov    rsi,rax
  402950:	je     402a61 <__ctype_b_loc@plt+0x1871>
  402956:	test   rax,rax
  402959:	je     402a4d <__ctype_b_loc@plt+0x185d>
  40295f:	mov    rax,QWORD PTR [rip+0x377a]        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  402966:	mov    rcx,QWORD PTR [rsp+0x18]
  40296b:	mov    QWORD PTR [rax+0x10],rcx
  40296f:	mov    QWORD PTR [rcx+0x8],rax
  402973:	cmp    QWORD PTR [rsp+0x10],0x0
  402979:	mov    rax,QWORD PTR [rsp+0x20]
  40297e:	mov    QWORD PTR [rip+0x375b],rax        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  402985:	je     4029a7 <__ctype_b_loc@plt+0x17b7>
  402987:	mov    rax,QWORD PTR [rip+0x3752]        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  40298e:	mov    rcx,QWORD PTR [rsp+0x10]
  402993:	mov    QWORD PTR [rax+0x10],rcx
  402997:	mov    QWORD PTR [rcx+0x8],rax
  40299b:	mov    rax,QWORD PTR [rsp+0x28]
  4029a0:	mov    QWORD PTR [rip+0x3739],rax        # 4060e0 <__ctype_b_loc@plt+0x4ef0>
  4029a7:	mov    QWORD PTR [rip+0x3712],rsi        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  4029ae:	mov    QWORD PTR [rip+0x371b],rsi        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  4029b5:	call   402240 <__ctype_b_loc@plt+0x1050>
  4029ba:	mov    rax,QWORD PTR [rsp+0x2048]
  4029c2:	xor    rax,QWORD PTR fs:0x28
  4029cb:	jne    402abd <__ctype_b_loc@plt+0x18cd>
  4029d1:	add    rsp,0x2058
  4029d8:	pop    rbx
  4029d9:	pop    rbp
  4029da:	pop    r12
  4029dc:	pop    r13
  4029de:	pop    r14
  4029e0:	pop    r15
  4029e2:	ret    
  4029e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e8:	cmp    r12d,DWORD PTR [rsp+0xc]
  4029ed:	jne    402930 <__ctype_b_loc@plt+0x1740>
  4029f3:	jmp    4028e8 <__ctype_b_loc@plt+0x16f8>
  4029f8:	mov    QWORD PTR [rip+0x36e9],r15        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  4029ff:	jmp    402919 <__ctype_b_loc@plt+0x1729>
  402a04:	mov    rax,QWORD PTR [rip+0x361d]        # 406028 <__ctype_b_loc@plt+0x4e38>
  402a0b:	mov    rdx,QWORD PTR [rsp+0x30]
  402a10:	mov    rsi,QWORD PTR [r15]
  402a13:	mov    rdi,QWORD PTR [rax]
  402a16:	call   QWORD PTR [rip+0x35e4]        # 406000 <__ctype_b_loc@plt+0x4e10>
  402a1c:	test   eax,eax
  402a1e:	jne    402a8a <__ctype_b_loc@plt+0x189a>
  402a20:	mov    rax,QWORD PTR [rsp+0x20]
  402a25:	test   rax,rax
  402a28:	je     402ab3 <__ctype_b_loc@plt+0x18c3>
  402a2e:	mov    QWORD PTR [rax+0x10],r15
  402a32:	mov    rax,QWORD PTR [rsp+0x20]
  402a37:	mov    QWORD PTR [r15+0x10],0x0
  402a3f:	mov    QWORD PTR [rsp+0x20],r15
  402a44:	mov    QWORD PTR [r15+0x8],rax
  402a48:	jmp    402930 <__ctype_b_loc@plt+0x1740>
  402a4d:	mov    rax,QWORD PTR [rsp+0x18]
  402a52:	mov    QWORD PTR [rip+0x368f],rax        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  402a59:	mov    rsi,rax
  402a5c:	jmp    402973 <__ctype_b_loc@plt+0x1783>
  402a61:	cmp    QWORD PTR [rsp+0x10],0x0
  402a67:	je     4029a7 <__ctype_b_loc@plt+0x17b7>
  402a6d:	test   rax,rax
  402a70:	jne    402987 <__ctype_b_loc@plt+0x1797>
  402a76:	mov    rax,QWORD PTR [rsp+0x10]
  402a7b:	mov    QWORD PTR [rip+0x3666],rax        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  402a82:	mov    rsi,rax
  402a85:	jmp    40299b <__ctype_b_loc@plt+0x17ab>
  402a8a:	mov    rax,QWORD PTR [rsp+0x28]
  402a8f:	test   rax,rax
  402a92:	je     402ae6 <__ctype_b_loc@plt+0x18f6>
  402a94:	mov    QWORD PTR [rax+0x10],r15
  402a98:	mov    rax,QWORD PTR [rsp+0x28]
  402a9d:	mov    QWORD PTR [r15+0x10],0x0
  402aa5:	mov    QWORD PTR [rsp+0x28],r15
  402aaa:	mov    QWORD PTR [r15+0x8],rax
  402aae:	jmp    402930 <__ctype_b_loc@plt+0x1740>
  402ab3:	mov    QWORD PTR [rsp+0x18],r15
  402ab8:	jmp    402a32 <__ctype_b_loc@plt+0x1842>
  402abd:	call   401080 <__stack_chk_fail@plt>
  402ac2:	xor    r14d,r14d
  402ac5:	mov    QWORD PTR [rsp+0x30],0x0
  402ace:	jmp    4027d6 <__ctype_b_loc@plt+0x15e6>
  402ad3:	lea    rdi,[rip+0x1573]        # 40404d <__ctype_b_loc@plt+0x2e5d>
  402ada:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  402adf:	xor    esi,esi
  402ae1:	jmp    4029a7 <__ctype_b_loc@plt+0x17b7>
  402ae6:	mov    QWORD PTR [rsp+0x10],r15
  402aeb:	jmp    402a98 <__ctype_b_loc@plt+0x18a8>
  402aed:	nop    DWORD PTR [rax]
  402af0:	push   r13
  402af2:	push   r12
  402af4:	lea    rcx,[rip+0x3645]        # 406140 <__ctype_b_loc@plt+0x4f50>
  402afb:	push   rbp
  402afc:	push   rbx
  402afd:	mov    rbp,rdi
  402b00:	mov    rbx,rsi
  402b03:	mov    rdi,rcx
  402b06:	mov    rdx,rcx
  402b09:	sub    rsp,0x18
  402b0d:	mov    rax,QWORD PTR fs:0x28
  402b16:	mov    QWORD PTR [rsp+0x8],rax
  402b1b:	xor    eax,eax
  402b1d:	mov    esi,DWORD PTR [rdx]
  402b1f:	add    rdx,0x4
  402b23:	lea    eax,[rsi-0x1010101]
  402b29:	andn   eax,esi,eax
  402b2e:	and    eax,0x80808080
  402b33:	je     402b1d <__ctype_b_loc@plt+0x192d>
  402b35:	mov    esi,eax
  402b37:	shr    esi,0x10
  402b3a:	test   eax,0x8080
  402b3f:	cmove  eax,esi
  402b42:	lea    rsi,[rdx+0x2]
  402b46:	cmove  rdx,rsi
  402b4a:	mov    esi,eax
  402b4c:	add    sil,al
  402b4f:	sbb    rdx,0x3
  402b53:	sub    rdx,rcx
  402b56:	add    rdx,rbx
  402b59:	cmp    rdx,0x1fff
  402b60:	jbe    402b80 <__ctype_b_loc@plt+0x1990>
  402b62:	mov    rax,QWORD PTR [rsp+0x8]
  402b67:	xor    rax,QWORD PTR fs:0x28
  402b70:	jne    402bea <__ctype_b_loc@plt+0x19fa>
  402b72:	add    rsp,0x18
  402b76:	pop    rbx
  402b77:	pop    rbp
  402b78:	pop    r12
  402b7a:	pop    r13
  402b7c:	ret    
  402b7d:	nop    DWORD PTR [rax]
  402b80:	mov    rax,QWORD PTR [rip+0x3579]        # 406100 <__ctype_b_loc@plt+0x4f10>
  402b87:	mov    edx,0x2000
  402b8c:	lea    r13,[rdi+rax*1]
  402b90:	sub    rdx,rax
  402b93:	lea    r12,[rbx+rax*1]
  402b97:	test   rbx,rbx
  402b9a:	mov    eax,0x0
  402b9f:	cmovns rax,rbx
  402ba3:	mov    rsi,r13
  402ba6:	add    rdi,r12
  402ba9:	sub    rdx,rax
  402bac:	call   401150 <memmove@plt>
  402bb1:	test   rbx,rbx
  402bb4:	jle    402bc4 <__ctype_b_loc@plt+0x19d4>
  402bb6:	mov    rdx,rbx
  402bb9:	mov    rsi,rbp
  402bbc:	mov    rdi,r13
  402bbf:	call   401110 <memcpy@plt>
  402bc4:	mov    rax,QWORD PTR [rsp+0x8]
  402bc9:	xor    rax,QWORD PTR fs:0x28
  402bd2:	mov    QWORD PTR [rip+0x3527],r12        # 406100 <__ctype_b_loc@plt+0x4f10>
  402bd9:	jne    402bea <__ctype_b_loc@plt+0x19fa>
  402bdb:	add    rsp,0x18
  402bdf:	pop    rbx
  402be0:	pop    rbp
  402be1:	pop    r12
  402be3:	pop    r13
  402be5:	jmp    402700 <__ctype_b_loc@plt+0x1510>
  402bea:	call   401080 <__stack_chk_fail@plt>
  402bef:	nop
  402bf0:	sub    rsp,0x18
  402bf4:	mov    rax,QWORD PTR fs:0x28
  402bfd:	mov    QWORD PTR [rsp+0x8],rax
  402c02:	xor    eax,eax
  402c04:	cmp    DWORD PTR [rip+0x3525],0x0        # 406130 <__ctype_b_loc@plt+0x4f40>
  402c0b:	je     402c60 <__ctype_b_loc@plt+0x1a70>
  402c0d:	mov    ecx,0x0
  402c12:	jle    402c48 <__ctype_b_loc@plt+0x1a58>
  402c14:	mov    rax,QWORD PTR [rsp+0x8]
  402c19:	xor    rax,QWORD PTR fs:0x28
  402c22:	jne    402c80 <__ctype_b_loc@plt+0x1a90>
  402c24:	lea    rdx,[rip+0x1441]        # 40406c <__ctype_b_loc@plt+0x2e7c>
  402c2b:	mov    rax,QWORD PTR [rip+0x33c6]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  402c32:	mov    esi,0x1
  402c37:	mov    rdi,QWORD PTR [rax]
  402c3a:	xor    eax,eax
  402c3c:	add    rsp,0x18
  402c40:	jmp    4011d0 <__fprintf_chk@plt>
  402c45:	nop    DWORD PTR [rax]
  402c48:	mov    rcx,QWORD PTR [rip+0x34d1]        # 406120 <__ctype_b_loc@plt+0x4f30>
  402c4f:	sub    rcx,QWORD PTR [rip+0x34c2]        # 406118 <__ctype_b_loc@plt+0x4f28>
  402c56:	jmp    402c14 <__ctype_b_loc@plt+0x1a24>
  402c58:	nop    DWORD PTR [rax+rax*1+0x0]
  402c60:	mov    rax,QWORD PTR [rsp+0x8]
  402c65:	xor    rax,QWORD PTR fs:0x28
  402c6e:	jne    402c80 <__ctype_b_loc@plt+0x1a90>
  402c70:	mov    rcx,QWORD PTR [rip+0x34a1]        # 406118 <__ctype_b_loc@plt+0x4f28>
  402c77:	lea    rdx,[rip+0x13f5]        # 404073 <__ctype_b_loc@plt+0x2e83>
  402c7e:	jmp    402c2b <__ctype_b_loc@plt+0x1a3b>
  402c80:	call   401080 <__stack_chk_fail@plt>
  402c85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c8f:	nop
  402c90:	push   r15
  402c92:	push   r14
  402c94:	lea    r14,[rsi-0x4]
  402c98:	push   r13
  402c9a:	push   r12
  402c9c:	push   rbp
  402c9d:	push   rbx
  402c9e:	mov    rbp,rsi
  402ca1:	mov    rbx,rdi
  402ca4:	sub    rsi,0x3
  402ca8:	mov    edi,0x1
  402cad:	sub    rsp,0x28
  402cb1:	mov    DWORD PTR [rsp+0xc],edx
  402cb5:	mov    rax,QWORD PTR fs:0x28
  402cbe:	mov    QWORD PTR [rsp+0x18],rax
  402cc3:	xor    eax,eax
  402cc5:	call   401100 <calloc@plt>
  402cca:	test   rax,rax
  402ccd:	mov    edx,DWORD PTR [rsp+0xc]
  402cd1:	je     402df3 <__ctype_b_loc@plt+0x1c03>
  402cd7:	cmp    edx,0x1
  402cda:	mov    r12,rax
  402cdd:	lea    r15,[rip+0x1396]        # 40407a <__ctype_b_loc@plt+0x2e8a>
  402ce4:	lea    r13,[rip+0x1394]        # 40407f <__ctype_b_loc@plt+0x2e8f>
  402ceb:	je     402cf7 <__ctype_b_loc@plt+0x1b07>
  402ced:	lea    r15,[rip+0x1358]        # 40404c <__ctype_b_loc@plt+0x2e5c>
  402cf4:	mov    r13,r15
  402cf7:	mov    rdx,r14
  402cfa:	mov    esi,0x20
  402cff:	mov    rdi,r12
  402d02:	call   4010a0 <memset@plt>
  402d07:	mov    rdi,rbx
  402d0a:	mov    BYTE PTR [r12+rbp*1-0x4],0x0
  402d10:	call   401070 <strlen@plt>
  402d15:	cmp    r14,rax
  402d18:	mov    rdi,r12
  402d1b:	mov    rsi,rbx
  402d1e:	cmovbe rax,r14
  402d22:	mov    rdx,rax
  402d25:	call   401110 <memcpy@plt>
  402d2a:	movzx  eax,BYTE PTR [rbx]
  402d2d:	xor    edx,edx
  402d2f:	lea    rdi,[rbx+0x1]
  402d33:	test   al,al
  402d35:	je     402de4 <__ctype_b_loc@plt+0x1bf4>
  402d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d40:	and    eax,0xc0
  402d45:	add    eax,0xffffff80
  402d48:	setne  al
  402d4b:	add    rdi,0x1
  402d4f:	movzx  eax,al
  402d52:	add    edx,eax
  402d54:	movzx  eax,BYTE PTR [rdi-0x1]
  402d58:	test   al,al
  402d5a:	jne    402d40 <__ctype_b_loc@plt+0x1b50>
  402d5c:	add    edx,0x4
  402d5f:	movsxd rdx,edx
  402d62:	cmp    rbp,rdx
  402d65:	jae    402d8e <__ctype_b_loc@plt+0x1b9e>
  402d67:	cmp    r14,0x4
  402d6b:	je     402de0 <__ctype_b_loc@plt+0x1bf0>
  402d6d:	lea    rsi,[rbp-0x8]
  402d71:	cmp    r14,rsi
  402d74:	jbe    402d8e <__ctype_b_loc@plt+0x1b9e>
  402d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d80:	mov    BYTE PTR [r12+rsi*1],0x2e
  402d85:	add    rsi,0x1
  402d89:	cmp    r14,rsi
  402d8c:	ja     402d80 <__ctype_b_loc@plt+0x1b90>
  402d8e:	mov    rax,QWORD PTR [rip+0x3263]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  402d95:	lea    rdx,[rip+0x12f6]        # 404092 <__ctype_b_loc@plt+0x2ea2>
  402d9c:	mov    r9,r15
  402d9f:	mov    r8,r12
  402da2:	mov    rcx,r13
  402da5:	mov    esi,0x1
  402daa:	mov    rdi,QWORD PTR [rax]
  402dad:	xor    eax,eax
  402daf:	call   4011d0 <__fprintf_chk@plt>
  402db4:	mov    rax,QWORD PTR [rsp+0x18]
  402db9:	xor    rax,QWORD PTR fs:0x28
  402dc2:	jne    402dee <__ctype_b_loc@plt+0x1bfe>
  402dc4:	add    rsp,0x28
  402dc8:	mov    rdi,r12
  402dcb:	pop    rbx
  402dcc:	pop    rbp
  402dcd:	pop    r12
  402dcf:	pop    r13
  402dd1:	pop    r14
  402dd3:	pop    r15
  402dd5:	jmp    401030 <free@plt>
  402dda:	nop    WORD PTR [rax+rax*1+0x0]
  402de0:	xor    esi,esi
  402de2:	jmp    402d80 <__ctype_b_loc@plt+0x1b90>
  402de4:	mov    edx,0x4
  402de9:	jmp    402d62 <__ctype_b_loc@plt+0x1b72>
  402dee:	call   401080 <__stack_chk_fail@plt>
  402df3:	lea    rdi,[rip+0x128a]        # 404084 <__ctype_b_loc@plt+0x2e94>
  402dfa:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  402dff:	nop
  402e00:	push   r13
  402e02:	push   r12
  402e04:	lea    rdx,[rip+0x126f]        # 40407a <__ctype_b_loc@plt+0x2e8a>
  402e0b:	push   rbp
  402e0c:	push   rbx
  402e0d:	mov    esi,0x1
  402e12:	sub    rsp,0x18
  402e16:	mov    rbx,QWORD PTR [rip+0x31db]        # 405ff8 <__ctype_b_loc@plt+0x4e08>
  402e1d:	mov    rax,QWORD PTR fs:0x28
  402e26:	mov    QWORD PTR [rsp+0x8],rax
  402e2b:	xor    eax,eax
  402e2d:	mov    rdi,QWORD PTR [rbx]
  402e30:	call   4011d0 <__fprintf_chk@plt>
  402e35:	mov    rdi,QWORD PTR [rbx]
  402e38:	lea    rdx,[rip+0x125e]        # 40409d <__ctype_b_loc@plt+0x2ead>
  402e3f:	mov    esi,0x1
  402e44:	xor    eax,eax
  402e46:	call   4011d0 <__fprintf_chk@plt>
  402e4b:	mov    rdi,QWORD PTR [rbx]
  402e4e:	lea    rdx,[rip+0x124e]        # 4040a3 <__ctype_b_loc@plt+0x2eb3>
  402e55:	xor    eax,eax
  402e57:	mov    esi,0x1
  402e5c:	call   4011d0 <__fprintf_chk@plt>
  402e61:	mov    rdi,QWORD PTR [rip+0x3290]        # 4060f8 <__ctype_b_loc@plt+0x4f08>
  402e68:	test   rdi,rdi
  402e6b:	je     402e7e <__ctype_b_loc@plt+0x1c8e>
  402e6d:	mov    rsi,QWORD PTR [rip+0x3294]        # 406108 <__ctype_b_loc@plt+0x4f18>
  402e74:	cmp    rsi,0x4
  402e78:	ja     40322f <__ctype_b_loc@plt+0x203f>
  402e7e:	cmp    QWORD PTR [rip+0x3292],0x0        # 406118 <__ctype_b_loc@plt+0x4f28>
  402e86:	jne    403000 <__ctype_b_loc@plt+0x1e10>
  402e8c:	cmp    QWORD PTR [rip+0x3254],0x0        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  402e94:	je     403175 <__ctype_b_loc@plt+0x1f85>
  402e9a:	mov    rsi,QWORD PTR [rip+0x326f]        # 406110 <__ctype_b_loc@plt+0x4f20>
  402ea1:	cmp    rsi,0x4
  402ea5:	ja     403189 <__ctype_b_loc@plt+0x1f99>
  402eab:	mov    rax,QWORD PTR [rip+0x3276]        # 406128 <__ctype_b_loc@plt+0x4f38>
  402eb2:	mov    rbp,QWORD PTR [rip+0x3217]        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  402eb9:	lea    r12,[rax-0x4]
  402ebd:	sub    r12,QWORD PTR [rip+0x3244]        # 406108 <__ctype_b_loc@plt+0x4f18>
  402ec4:	sub    r12,QWORD PTR [rip+0x3245]        # 406110 <__ctype_b_loc@plt+0x4f20>
  402ecb:	cmp    QWORD PTR [rbp+0x8],0x0
  402ed0:	je     402eec <__ctype_b_loc@plt+0x1cfc>
  402ed2:	lea    rdi,[rip+0x11ce]        # 4040a7 <__ctype_b_loc@plt+0x2eb7>
  402ed9:	xor    edx,edx
  402edb:	mov    esi,0x5
  402ee0:	call   402c90 <__ctype_b_loc@plt+0x1aa0>
  402ee5:	mov    rbp,QWORD PTR [rip+0x31e4]        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  402eec:	cmp    QWORD PTR [rip+0x31d5],rbp        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  402ef3:	je     403268 <__ctype_b_loc@plt+0x2078>
  402ef9:	nop    DWORD PTR [rax+0x0]
  402f00:	mov    rdi,QWORD PTR [rbp+0x0]
  402f04:	test   rdi,rdi
  402f07:	je     40323e <__ctype_b_loc@plt+0x204e>
  402f0d:	movzx  ecx,BYTE PTR [rdi]
  402f10:	test   cl,cl
  402f12:	je     402f60 <__ctype_b_loc@plt+0x1d70>
  402f14:	lea    r8,[rdi+0x1]
  402f18:	mov    eax,ecx
  402f1a:	xor    esi,esi
  402f1c:	mov    rdx,r8
  402f1f:	nop
  402f20:	and    eax,0xc0
  402f25:	add    eax,0xffffff80
  402f28:	setne  al
  402f2b:	add    rdx,0x1
  402f2f:	movzx  eax,al
  402f32:	add    esi,eax
  402f34:	movzx  eax,BYTE PTR [rdx-0x1]
  402f38:	test   al,al
  402f3a:	jne    402f20 <__ctype_b_loc@plt+0x1d30>
  402f3c:	add    esi,0x4
  402f3f:	movsxd rsi,esi
  402f42:	cmp    r12,rsi
  402f45:	ja     4031c0 <__ctype_b_loc@plt+0x1fd0>
  402f4b:	cmp    r12,0x4
  402f4f:	mov    rsi,r12
  402f52:	ja     403218 <__ctype_b_loc@plt+0x2028>
  402f58:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	movzx  eax,BYTE PTR [rdi]
  402f63:	xor    edx,edx
  402f65:	add    rdi,0x1
  402f69:	test   al,al
  402f6b:	je     4031fa <__ctype_b_loc@plt+0x200a>
  402f71:	nop    DWORD PTR [rax+0x0]
  402f78:	and    eax,0xc0
  402f7d:	add    eax,0xffffff80
  402f80:	setne  al
  402f83:	add    rdi,0x1
  402f87:	movzx  eax,al
  402f8a:	add    edx,eax
  402f8c:	movzx  eax,BYTE PTR [rdi-0x1]
  402f90:	test   al,al
  402f92:	jne    402f78 <__ctype_b_loc@plt+0x1d88>
  402f94:	add    edx,0x4
  402f97:	movsxd rdx,edx
  402f9a:	sub    r12,rdx
  402f9d:	je     403208 <__ctype_b_loc@plt+0x2018>
  402fa3:	mov    rbp,QWORD PTR [rbp+0x10]
  402fa7:	mov    rax,QWORD PTR [rip+0x311a]        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  402fae:	cmp    rax,rbp
  402fb1:	jne    402f00 <__ctype_b_loc@plt+0x1d10>
  402fb7:	test   rax,rax
  402fba:	je     4030c4 <__ctype_b_loc@plt+0x1ed4>
  402fc0:	mov    rax,QWORD PTR [rip+0x3161]        # 406128 <__ctype_b_loc@plt+0x4f38>
  402fc7:	mov    rdi,QWORD PTR [rbx]
  402fca:	lea    rdx,[rip+0x10d8]        # 4040a9 <__ctype_b_loc@plt+0x2eb9>
  402fd1:	mov    esi,0x1
  402fd6:	lea    rcx,[rax-0x5]
  402fda:	xor    eax,eax
  402fdc:	call   4011d0 <__fprintf_chk@plt>
  402fe1:	lea    rdi,[rip+0x10c8]        # 4040b0 <__ctype_b_loc@plt+0x2ec0>
  402fe8:	xor    edx,edx
  402fea:	mov    esi,0x5
  402fef:	call   402c90 <__ctype_b_loc@plt+0x1aa0>
  402ff4:	jmp    4030c4 <__ctype_b_loc@plt+0x1ed4>
  402ff9:	nop    DWORD PTR [rax+0x0]
  403000:	mov    rsi,QWORD PTR [rip+0x3121]        # 406128 <__ctype_b_loc@plt+0x4f38>
  403007:	sub    rsi,QWORD PTR [rip+0x30fa]        # 406108 <__ctype_b_loc@plt+0x4f18>
  40300e:	cmp    rsi,0x4
  403012:	ja     403189 <__ctype_b_loc@plt+0x1f99>
  403018:	mov    eax,DWORD PTR [rip+0x3112]        # 406130 <__ctype_b_loc@plt+0x4f40>
  40301e:	test   eax,eax
  403020:	jne    403254 <__ctype_b_loc@plt+0x2064>
  403026:	mov    r12,QWORD PTR [rip+0x30a3]        # 4060d0 <__ctype_b_loc@plt+0x4ee0>
  40302d:	xor    ebp,ebp
  40302f:	cmp    r12,QWORD PTR [rip+0x3092]        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  403036:	je     403090 <__ctype_b_loc@plt+0x1ea0>
  403038:	lea    r13,[rip+0x100c]        # 40404b <__ctype_b_loc@plt+0x2e5b>
  40303f:	jmp    40305a <__ctype_b_loc@plt+0x1e6a>
  403041:	nop    DWORD PTR [rax+0x0]
  403048:	add    rbp,0x1
  40304c:	mov    r12,QWORD PTR [r12+0x10]
  403051:	cmp    QWORD PTR [rip+0x3070],r12        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  403058:	je     403090 <__ctype_b_loc@plt+0x1ea0>
  40305a:	mov    rdi,QWORD PTR [rbx]
  40305d:	mov    esi,0x1
  403062:	xor    eax,eax
  403064:	mov    rdx,r13
  403067:	call   4011d0 <__fprintf_chk@plt>
  40306c:	mov    rsi,QWORD PTR [rip+0x30b5]        # 406128 <__ctype_b_loc@plt+0x4f38>
  403073:	cmp    rsi,0x4
  403077:	jbe    403048 <__ctype_b_loc@plt+0x1e58>
  403079:	xor    edx,edx
  40307b:	cmp    QWORD PTR [rip+0x303e],r12        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  403082:	mov    rdi,QWORD PTR [r12]
  403086:	sete   dl
  403089:	call   402c90 <__ctype_b_loc@plt+0x1aa0>
  40308e:	jmp    403048 <__ctype_b_loc@plt+0x1e58>
  403090:	cmp    rbp,QWORD PTR [rip+0x3081]        # 406118 <__ctype_b_loc@plt+0x4f28>
  403097:	lea    r12,[rip+0x1004]        # 4040a2 <__ctype_b_loc@plt+0x2eb2>
  40309e:	jae    4030bf <__ctype_b_loc@plt+0x1ecf>
  4030a0:	mov    rdi,QWORD PTR [rbx]
  4030a3:	xor    eax,eax
  4030a5:	mov    rdx,r12
  4030a8:	mov    esi,0x1
  4030ad:	add    rbp,0x1
  4030b1:	call   4011d0 <__fprintf_chk@plt>
  4030b6:	cmp    QWORD PTR [rip+0x305b],rbp        # 406118 <__ctype_b_loc@plt+0x4f28>
  4030bd:	ja     4030a0 <__ctype_b_loc@plt+0x1eb0>
  4030bf:	call   402bf0 <__ctype_b_loc@plt+0x1a00>
  4030c4:	movzx  eax,BYTE PTR [rip+0x3075]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4030cb:	mov    rdx,QWORD PTR [rip+0x302e]        # 406100 <__ctype_b_loc@plt+0x4f10>
  4030d2:	mov    r8d,edx
  4030d5:	test   al,al
  4030d7:	je     40325e <__ctype_b_loc@plt+0x206e>
  4030dd:	mov    esi,edx
  4030df:	shr    esi,0x1f
  4030e2:	test   edx,edx
  4030e4:	mov    r9d,esi
  4030e7:	je     40325e <__ctype_b_loc@plt+0x206e>
  4030ed:	mov    edx,0x1
  4030f2:	xor    ecx,ecx
  4030f4:	lea    rdi,[rip+0x3045]        # 406140 <__ctype_b_loc@plt+0x4f50>
  4030fb:	jmp    403110 <__ctype_b_loc@plt+0x1f20>
  4030fd:	nop    DWORD PTR [rax]
  403100:	cmp    r8d,edx
  403103:	setg   sil
  403107:	add    rdx,0x1
  40310b:	or     sil,r9b
  40310e:	je     403128 <__ctype_b_loc@plt+0x1f38>
  403110:	and    eax,0xc0
  403115:	add    eax,0xffffff80
  403118:	setne  al
  40311b:	movzx  eax,al
  40311e:	add    ecx,eax
  403120:	movzx  eax,BYTE PTR [rdi+rdx*1]
  403124:	test   al,al
  403126:	jne    403100 <__ctype_b_loc@plt+0x1f10>
  403128:	lea    eax,[rcx+0x4]
  40312b:	cdqe   
  40312d:	mov    rdx,QWORD PTR [rip+0x2fd4]        # 406108 <__ctype_b_loc@plt+0x4f18>
  403134:	mov    rdi,QWORD PTR [rbx]
  403137:	mov    esi,0x1
  40313c:	lea    rcx,[rax+rdx*1-0x1]
  403141:	lea    rdx,[rip+0xf6a]        # 4040b2 <__ctype_b_loc@plt+0x2ec2>
  403148:	xor    eax,eax
  40314a:	call   4011d0 <__fprintf_chk@plt>
  40314f:	mov    rax,QWORD PTR [rsp+0x8]
  403154:	xor    rax,QWORD PTR fs:0x28
  40315d:	jne    403270 <__ctype_b_loc@plt+0x2080>
  403163:	mov    rdi,QWORD PTR [rbx]
  403166:	add    rsp,0x18
  40316a:	pop    rbx
  40316b:	pop    rbp
  40316c:	pop    r12
  40316e:	pop    r13
  403170:	jmp    401120 <fflush@plt>
  403175:	mov    rsi,QWORD PTR [rip+0x2fac]        # 406128 <__ctype_b_loc@plt+0x4f38>
  40317c:	sub    rsi,QWORD PTR [rip+0x2f85]        # 406108 <__ctype_b_loc@plt+0x4f18>
  403183:	cmp    rsi,0x4
  403187:	jbe    4031a5 <__ctype_b_loc@plt+0x1fb5>
  403189:	lea    rdi,[rip+0x2fb0]        # 406140 <__ctype_b_loc@plt+0x4f50>
  403190:	xor    edx,edx
  403192:	call   402c90 <__ctype_b_loc@plt+0x1aa0>
  403197:	cmp    QWORD PTR [rip+0x2f79],0x0        # 406118 <__ctype_b_loc@plt+0x4f28>
  40319f:	jne    403018 <__ctype_b_loc@plt+0x1e28>
  4031a5:	cmp    QWORD PTR [rip+0x2f3b],0x0        # 4060e8 <__ctype_b_loc@plt+0x4ef8>
  4031ad:	jne    402eab <__ctype_b_loc@plt+0x1cbb>
  4031b3:	jmp    4030c4 <__ctype_b_loc@plt+0x1ed4>
  4031b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4031c0:	mov    rax,r8
  4031c3:	xor    edx,edx
  4031c5:	nop    DWORD PTR [rax]
  4031c8:	and    ecx,0xc0
  4031ce:	add    ecx,0xffffff80
  4031d1:	setne  cl
  4031d4:	add    rax,0x1
  4031d8:	movzx  ecx,cl
  4031db:	add    edx,ecx
  4031dd:	movzx  ecx,BYTE PTR [rax-0x1]
  4031e1:	test   cl,cl
  4031e3:	jne    4031c8 <__ctype_b_loc@plt+0x1fd8>
  4031e5:	add    edx,0x4
  4031e8:	movsxd rsi,edx
  4031eb:	cmp    rsi,0x4
  4031ef:	ja     403218 <__ctype_b_loc@plt+0x2028>
  4031f1:	test   rdi,rdi
  4031f4:	jne    402f60 <__ctype_b_loc@plt+0x1d70>
  4031fa:	mov    edx,0x4
  4031ff:	sub    r12,rdx
  403202:	jne    402fa3 <__ctype_b_loc@plt+0x1db3>
  403208:	mov    rax,QWORD PTR [rip+0x2eb9]        # 4060c8 <__ctype_b_loc@plt+0x4ed8>
  40320f:	jmp    402fb7 <__ctype_b_loc@plt+0x1dc7>
  403214:	nop    DWORD PTR [rax+0x0]
  403218:	xor    edx,edx
  40321a:	cmp    QWORD PTR [rip+0x2e9f],rbp        # 4060c0 <__ctype_b_loc@plt+0x4ed0>
  403221:	sete   dl
  403224:	call   402c90 <__ctype_b_loc@plt+0x1aa0>
  403229:	mov    rdi,QWORD PTR [rbp+0x0]
  40322d:	jmp    4031f1 <__ctype_b_loc@plt+0x2001>
  40322f:	mov    edx,0x1
  403234:	call   402c90 <__ctype_b_loc@plt+0x1aa0>
  403239:	jmp    402e7e <__ctype_b_loc@plt+0x1c8e>
  40323e:	cmp    r12,0x4
  403242:	mov    edx,0x4
  403247:	ja     402f9a <__ctype_b_loc@plt+0x1daa>
  40324d:	mov    edx,0x4
  403252:	jmp    4031ff <__ctype_b_loc@plt+0x200f>
  403254:	call   402bf0 <__ctype_b_loc@plt+0x1a00>
  403259:	jmp    403026 <__ctype_b_loc@plt+0x1e36>
  40325e:	mov    eax,0x4
  403263:	jmp    40312d <__ctype_b_loc@plt+0x1f3d>
  403268:	mov    rax,rbp
  40326b:	jmp    402fb7 <__ctype_b_loc@plt+0x1dc7>
  403270:	call   401080 <__stack_chk_fail@plt>
  403275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40327f:	nop
  403280:	sub    rsp,0x18
  403284:	mov    rsi,rdi
  403287:	mov    edx,0x1
  40328c:	xor    edi,edi
  40328e:	mov    rax,QWORD PTR fs:0x28
  403297:	mov    QWORD PTR [rsp+0x8],rax
  40329c:	xor    eax,eax
  40329e:	call   4010e0 <read@plt>
  4032a3:	cmp    rax,0x1
  4032a7:	jne    4032be <__ctype_b_loc@plt+0x20ce>
  4032a9:	mov    rax,QWORD PTR [rsp+0x8]
  4032ae:	xor    rax,QWORD PTR fs:0x28
  4032b7:	jne    4032ca <__ctype_b_loc@plt+0x20da>
  4032b9:	add    rsp,0x18
  4032bd:	ret    
  4032be:	lea    rdi,[rip+0xdf4]        # 4040b9 <__ctype_b_loc@plt+0x2ec9>
  4032c5:	call   4024b0 <__ctype_b_loc@plt+0x12c0>
  4032ca:	call   401080 <__stack_chk_fail@plt>
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	push   r15
  4032d6:	lea    r15,[rip+0x29f3]        # 405cd0 <__ctype_b_loc@plt+0x4ae0>
  4032dd:	push   r14
  4032df:	mov    r14,rdx
  4032e2:	push   r13
  4032e4:	mov    r13,rsi
  4032e7:	push   r12
  4032e9:	mov    r12d,edi
  4032ec:	push   rbp
  4032ed:	lea    rbp,[rip+0x29e4]        # 405cd8 <__ctype_b_loc@plt+0x4ae8>
  4032f4:	push   rbx
  4032f5:	sub    rbp,r15
  4032f8:	sub    rsp,0x8
  4032fc:	call   401000 <free@plt-0x30>
  403301:	sar    rbp,0x3
  403305:	je     403326 <__ctype_b_loc@plt+0x2136>
  403307:	xor    ebx,ebx
  403309:	nop    DWORD PTR [rax+0x0]
  403310:	mov    rdx,r14
  403313:	mov    rsi,r13
  403316:	mov    edi,r12d
  403319:	call   QWORD PTR [r15+rbx*8]
  40331d:	add    rbx,0x1
  403321:	cmp    rbp,rbx
  403324:	jne    403310 <__ctype_b_loc@plt+0x2120>
  403326:	add    rsp,0x8
  40332a:	pop    rbx
  40332b:	pop    rbp
  40332c:	pop    r12
  40332e:	pop    r13
  403330:	pop    r14
  403332:	pop    r15
  403334:	ret    
  403335:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403340:	endbr64 
  403344:	ret    

Disassembly of section .fini:

0000000000403348 <.fini>:
  403348:	endbr64 
  40334c:	sub    rsp,0x8
  403350:	add    rsp,0x8
  403354:	ret    
