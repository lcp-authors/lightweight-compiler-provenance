
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 407ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x6fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  401026:	jmp    QWORD PTR [rip+0x6fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x6fe2]        # 408018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <strncpy@plt>:
  401040:	jmp    QWORD PTR [rip+0x6fda]        # 408020 <strncpy@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <fread@plt>:
  401050:	jmp    QWORD PTR [rip+0x6fd2]        # 408028 <fread@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <fclose@plt>:
  401060:	jmp    QWORD PTR [rip+0x6fca]        # 408030 <fclose@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <__stack_chk_fail@plt>:
  401070:	jmp    QWORD PTR [rip+0x6fc2]        # 408038 <__stack_chk_fail@GLIBC_2.4>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <rewind@plt>:
  401080:	jmp    QWORD PTR [rip+0x6fba]        # 408040 <rewind@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <__assert_fail@plt>:
  401090:	jmp    QWORD PTR [rip+0x6fb2]        # 408048 <__assert_fail@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <ftell@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x6faa]        # 408050 <ftell@GLIBC_2.2.5>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <memcpy@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x6fa2]        # 408058 <memcpy@GLIBC_2.14>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <malloc@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x6f9a]        # 408060 <malloc@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fseek@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x6f92]        # 408068 <fseek@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <__printf_chk@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x6f8a]        # 408070 <__printf_chk@GLIBC_2.3.4>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fopen@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x6f82]        # 408078 <fopen@GLIBC_2.2.5>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <exit@plt>:
  401100:	jmp    QWORD PTR [rip+0x6f7a]        # 408080 <exit@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <__fprintf_chk@plt>:
  401110:	jmp    QWORD PTR [rip+0x6f72]        # 408088 <__fprintf_chk@GLIBC_2.3.4>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <posix_memalign@plt>:
  401120:	jmp    QWORD PTR [rip+0x6f6a]        # 408090 <posix_memalign@GLIBC_2.2.5>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401130 <main@@Base-0x70>:
  401130:	lea    rcx,[rip+0x46f9]        # 405830 <_IO_stdin_used@@Base+0x830>
  401137:	lea    rsi,[rip+0x3eca]        # 405008 <_IO_stdin_used@@Base+0x8>
  40113e:	lea    rdi,[rip+0x3f4b]        # 405090 <_IO_stdin_used@@Base+0x90>
  401145:	sub    rsp,0x8
  401149:	mov    edx,0x6c
  40114e:	call   401090 <__assert_fail@plt>
  401153:	lea    rcx,[rip+0x46b6]        # 405810 <_IO_stdin_used@@Base+0x810>
  40115a:	lea    rsi,[rip+0x3f67]        # 4050c8 <_IO_stdin_used@@Base+0xc8>
  401161:	lea    rdi,[rip+0x3fe0]        # 405148 <_IO_stdin_used@@Base+0x148>
  401168:	sub    rsp,0x8
  40116c:	mov    edx,0x2bb
  401171:	call   401090 <__assert_fail@plt>
  401176:	lea    rcx,[rip+0x4673]        # 4057f0 <_IO_stdin_used@@Base+0x7f0>
  40117d:	lea    rsi,[rip+0x3f44]        # 4050c8 <_IO_stdin_used@@Base+0xc8>
  401184:	lea    rdi,[rip+0x3f05]        # 405090 <_IO_stdin_used@@Base+0x90>
  40118b:	sub    rsp,0x8
  40118f:	mov    edx,0x17c
  401194:	call   401090 <__assert_fail@plt>
  401199:	nop    DWORD PTR [rax+0x0]

00000000004011a0 <main@@Base>:
  4011a0:	push   r15
  4011a2:	push   r14
  4011a4:	push   r13
  4011a6:	push   r12
  4011a8:	push   rbp
  4011a9:	push   rbx
  4011aa:	sub    rsp,0x48
  4011ae:	mov    rax,QWORD PTR fs:0x28
  4011b7:	mov    QWORD PTR [rsp+0x38],rax
  4011bc:	xor    eax,eax
  4011be:	lea    eax,[rdi-0x1]
  4011c1:	cmp    eax,0x1
  4011c4:	ja     40151e <main@@Base+0x37e>
  4011ca:	cmp    edi,0x2
  4011cd:	mov    rax,0x4080a8
  4011d4:	je     4014d8 <main@@Base+0x338>
  4011da:	mov    rdi,QWORD PTR [rax]
  4011dd:	lea    rsi,[rip+0x45ca]        # 4057ae <_IO_stdin_used@@Base+0x7ae>
  4011e4:	call   4010f0 <fopen@plt>
  4011e9:	test   rax,rax
  4011ec:	mov    r13,rax
  4011ef:	je     40150f <main@@Base+0x36f>
  4011f5:	xor    esi,esi
  4011f7:	mov    edx,0x2
  4011fc:	mov    rdi,rax
  4011ff:	call   4010d0 <fseek@plt>
  401204:	mov    rdi,r13
  401207:	call   4010a0 <ftell@plt>
  40120c:	cmp    rax,0x400
  401212:	mov    r12,rax
  401215:	ja     4014f1 <main@@Base+0x351>
  40121b:	mov    rdi,r13
  40121e:	call   401080 <rewind@plt>
  401223:	test   r12,r12
  401226:	mov    edi,0x1
  40122b:	cmovne rdi,r12
  40122f:	call   4010c0 <malloc@plt>
  401234:	test   rax,rax
  401237:	mov    rbp,rax
  40123a:	je     4014f1 <main@@Base+0x351>
  401240:	xor    ebx,ebx
  401242:	jmp    40124b <main@@Base+0xab>
  401244:	nop    DWORD PTR [rax+0x0]
  401248:	add    rbx,rax
  40124b:	mov    rdx,r12
  40124e:	lea    rdi,[rbp+rbx*1+0x0]
  401253:	mov    rcx,r13
  401256:	sub    rdx,rbx
  401259:	mov    esi,0x1
  40125e:	call   401050 <fread@plt>
  401263:	test   rax,rax
  401266:	jne    401248 <main@@Base+0xa8>
  401268:	cmp    r12,rbx
  40126b:	mov    rdi,r13
  40126e:	jne    4013b2 <main@@Base+0x212>
  401274:	call   401060 <fclose@plt>
  401279:	lea    rdx,[r12+0xff]
  401281:	lea    rdi,[rsp+0x18]
  401286:	mov    esi,0x100
  40128b:	mov    QWORD PTR [rsp+0x18],0x0
  401294:	xor    dl,dl
  401296:	call   401120 <posix_memalign@plt>
  40129b:	test   eax,eax
  40129d:	mov    rax,QWORD PTR [rsp+0x18]
  4012a2:	mov    QWORD PTR [rsp],rax
  4012a6:	je     4012c6 <main@@Base+0x126>
  4012a8:	test   rax,rax
  4012ab:	je     4012c6 <main@@Base+0x126>
  4012ad:	mov    rdi,rax
  4012b0:	call   401030 <free@plt>
  4012b5:	mov    QWORD PTR [rsp+0x18],0x0
  4012be:	mov    QWORD PTR [rsp],0x0
  4012c6:	mov    rdi,QWORD PTR [rsp]
  4012ca:	mov    rsi,rbp
  4012cd:	mov    rdx,r12
  4012d0:	mov    r13d,r12d
  4012d3:	call   4010b0 <memcpy@plt>
  4012d8:	mov    rdi,rbp
  4012db:	call   401030 <free@plt>
  4012e0:	mov    rax,QWORD PTR [rip+0x6d11]        # 407ff8 <stderr@GLIBC_2.2.5>
  4012e7:	lea    rcx,[rip+0x44c3]        # 4057b1 <_IO_stdin_used@@Base+0x7b1>
  4012ee:	lea    rdx,[rip+0x44d1]        # 4057c6 <_IO_stdin_used@@Base+0x7c6>
  4012f5:	mov    esi,0x1
  4012fa:	mov    rbp,QWORD PTR [rax]
  4012fd:	xor    eax,eax
  4012ff:	mov    rdi,rbp
  401302:	call   401110 <__fprintf_chk@plt>
  401307:	test   r12d,r12d
  40130a:	je     401500 <main@@Base+0x360>
  401310:	lea    rax,[rsp+0x20]
  401315:	mov    r14,QWORD PTR [rsp]
  401319:	xor    r15d,r15d
  40131c:	mov    QWORD PTR [rsp+0x8],rax
  401321:	jmp    40138c <main@@Base+0x1ec>
  401323:	nop    DWORD PTR [rax+rax*1+0x0]
  401328:	test   r15d,r15d
  40132b:	jne    4013e0 <main@@Base+0x240>
  401331:	lea    rdx,[rip+0x449e]        # 4057d6 <_IO_stdin_used@@Base+0x7d6>
  401338:	mov    ecx,r15d
  40133b:	mov    esi,0x1
  401340:	mov    rdi,rbp
  401343:	xor    eax,eax
  401345:	call   401110 <__fprintf_chk@plt>
  40134a:	movzx  ecx,BYTE PTR [r14]
  40134e:	lea    rdx,[rip+0x4489]        # 4057de <_IO_stdin_used@@Base+0x7de>
  401355:	xor    eax,eax
  401357:	mov    esi,0x1
  40135c:	mov    rdi,rbp
  40135f:	call   401110 <__fprintf_chk@plt>
  401364:	movzx  eax,BYTE PTR [r14]
  401368:	lea    edx,[rax-0x20]
  40136b:	cmp    dl,0x5e
  40136e:	jbe    4013d0 <main@@Base+0x230>
  401370:	mov    eax,ebx
  401372:	mov    BYTE PTR [rsp+rax*1+0x20],0x2e
  401377:	add    r15d,0x1
  40137b:	add    ebx,0x1
  40137e:	add    r14,0x1
  401382:	cmp    r13d,r15d
  401385:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  40138a:	je     401400 <main@@Base+0x260>
  40138c:	mov    ebx,r15d
  40138f:	and    ebx,0xf
  401392:	je     401328 <main@@Base+0x188>
  401394:	test   r15b,0x7
  401398:	jne    40134a <main@@Base+0x1aa>
  40139a:	lea    rdx,[rip+0x4445]        # 4057e6 <_IO_stdin_used@@Base+0x7e6>
  4013a1:	mov    esi,0x1
  4013a6:	mov    rdi,rbp
  4013a9:	xor    eax,eax
  4013ab:	call   401110 <__fprintf_chk@plt>
  4013b0:	jmp    40134a <main@@Base+0x1aa>
  4013b2:	call   401060 <fclose@plt>
  4013b7:	mov    rdi,rbp
  4013ba:	xor    ebp,ebp
  4013bc:	call   401030 <free@plt>
  4013c1:	jmp    401279 <main@@Base+0xd9>
  4013c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013d0:	mov    edx,ebx
  4013d2:	mov    BYTE PTR [rsp+rdx*1+0x20],al
  4013d6:	jmp    401377 <main@@Base+0x1d7>
  4013d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4013e0:	mov    rcx,QWORD PTR [rsp+0x8]
  4013e5:	lea    rdx,[rip+0x43df]        # 4057cb <_IO_stdin_used@@Base+0x7cb>
  4013ec:	mov    esi,0x1
  4013f1:	mov    rdi,rbp
  4013f4:	xor    eax,eax
  4013f6:	call   401110 <__fprintf_chk@plt>
  4013fb:	jmp    401331 <main@@Base+0x191>
  401400:	test   r15b,0xf
  401404:	je     40142c <main@@Base+0x28c>
  401406:	lea    rbx,[rip+0x43d7]        # 4057e4 <_IO_stdin_used@@Base+0x7e4>
  40140d:	nop    DWORD PTR [rax]
  401410:	xor    eax,eax
  401412:	mov    rdx,rbx
  401415:	mov    esi,0x1
  40141a:	mov    rdi,rbp
  40141d:	add    r15d,0x1
  401421:	call   401110 <__fprintf_chk@plt>
  401426:	test   r15b,0xf
  40142a:	jne    401410 <main@@Base+0x270>
  40142c:	mov    rcx,QWORD PTR [rsp+0x8]
  401431:	lea    rdx,[rip+0x4393]        # 4057cb <_IO_stdin_used@@Base+0x7cb>
  401438:	mov    esi,0x1
  40143d:	mov    rdi,rbp
  401440:	xor    eax,eax
  401442:	call   401110 <__fprintf_chk@plt>
  401447:	mov    rdi,QWORD PTR [rsp]
  40144b:	lea    rcx,[rip+0x48e]        # 4018e0 <_start@@Base+0x390>
  401452:	lea    rdx,[rip+0x4378]        # 4057d1 <_IO_stdin_used@@Base+0x7d1>
  401459:	mov    rsi,r12
  40145c:	call   403690 <flatcc_verify_table_as_root@@Base>
  401461:	test   eax,eax
  401463:	je     4014b1 <main@@Base+0x311>
  401465:	lea    rdx,[rip+0x412c]        # 405598 <_IO_stdin_used@@Base+0x598>
  40146c:	mov    rax,QWORD PTR [rip+0x6b85]        # 407ff8 <stderr@GLIBC_2.2.5>
  401473:	mov    esi,0x1
  401478:	mov    ebx,0xffffffff
  40147d:	mov    rdi,QWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	call   401110 <__fprintf_chk@plt>
  401487:	mov    rdi,QWORD PTR [rsp]
  40148b:	call   401030 <free@plt>
  401490:	mov    rsi,QWORD PTR [rsp+0x38]
  401495:	xor    rsi,QWORD PTR fs:0x28
  40149e:	mov    eax,ebx
  4014a0:	jne    401519 <main@@Base+0x379>
  4014a2:	add    rsp,0x48
  4014a6:	pop    rbx
  4014a7:	pop    rbp
  4014a8:	pop    r12
  4014aa:	pop    r13
  4014ac:	pop    r14
  4014ae:	pop    r15
  4014b0:	ret    
  4014b1:	mov    rdi,QWORD PTR [rsp]
  4014b5:	lea    rcx,[rip+0x424]        # 4018e0 <_start@@Base+0x390>
  4014bc:	lea    rdx,[rip+0x430e]        # 4057d1 <_IO_stdin_used@@Base+0x7d1>
  4014c3:	mov    rsi,r12
  4014c6:	call   403690 <flatcc_verify_table_as_root@@Base>
  4014cb:	test   eax,eax
  4014cd:	je     4014e4 <main@@Base+0x344>
  4014cf:	lea    rdx,[rip+0x40ea]        # 4055c0 <_IO_stdin_used@@Base+0x5c0>
  4014d6:	jmp    40146c <main@@Base+0x2cc>
  4014d8:	mov    rdx,QWORD PTR [rsi+0x8]
  4014dc:	mov    QWORD PTR [rax],rdx
  4014df:	jmp    4011da <main@@Base+0x3a>
  4014e4:	mov    rdi,QWORD PTR [rsp]
  4014e8:	call   401fa0 <verify_monster@@Base>
  4014ed:	mov    ebx,eax
  4014ef:	jmp    401487 <main@@Base+0x2e7>
  4014f1:	mov    rdi,r13
  4014f4:	xor    ebp,ebp
  4014f6:	call   401060 <fclose@plt>
  4014fb:	jmp    401279 <main@@Base+0xd9>
  401500:	lea    rax,[rsp+0x20]
  401505:	mov    QWORD PTR [rsp+0x8],rax
  40150a:	jmp    40142c <main@@Base+0x28c>
  40150f:	xor    r12d,r12d
  401512:	xor    ebp,ebp
  401514:	jmp    401279 <main@@Base+0xd9>
  401519:	call   401070 <__stack_chk_fail@plt>
  40151e:	mov    rax,QWORD PTR [rip+0x6ad3]        # 407ff8 <stderr@GLIBC_2.2.5>
  401525:	lea    rdx,[rip+0x402c]        # 405558 <_IO_stdin_used@@Base+0x558>
  40152c:	mov    esi,0x1
  401531:	mov    rdi,QWORD PTR [rax]
  401534:	xor    eax,eax
  401536:	call   401110 <__fprintf_chk@plt>
  40153b:	mov    edi,0x1
  401540:	call   401100 <exit@plt>
  401545:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40154f:	nop

0000000000401550 <_start@@Base>:
  401550:	endbr64 
  401554:	xor    ebp,ebp
  401556:	mov    r9,rdx
  401559:	pop    rsi
  40155a:	mov    rdx,rsp
  40155d:	and    rsp,0xfffffffffffffff0
  401561:	push   rax
  401562:	push   rsp
  401563:	mov    r8,0x4040a0
  40156a:	mov    rcx,0x404030
  401571:	mov    rdi,0x4011a0
  401578:	call   QWORD PTR [rip+0x6a6a]        # 407fe8 <__libc_start_main@GLIBC_2.2.5>
  40157e:	hlt    
  40157f:	nop
  401580:	endbr64 
  401584:	ret    
  401585:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40158f:	nop
  401590:	mov    eax,0x4080b7
  401595:	push   rbp
  401596:	sub    rax,0x4080b0
  40159c:	cmp    rax,0xe
  4015a0:	mov    rbp,rsp
  4015a3:	jbe    4015c0 <_start@@Base+0x70>
  4015a5:	mov    eax,0x0
  4015aa:	test   rax,rax
  4015ad:	je     4015c0 <_start@@Base+0x70>
  4015af:	pop    rbp
  4015b0:	mov    edi,0x4080b0
  4015b5:	jmp    rax
  4015b7:	nop    WORD PTR [rax+rax*1+0x0]
  4015c0:	pop    rbp
  4015c1:	ret    
  4015c2:	nop    DWORD PTR [rax+0x0]
  4015c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015d0:	mov    esi,0x4080b0
  4015d5:	push   rbp
  4015d6:	sub    rsi,0x4080b0
  4015dd:	sar    rsi,0x3
  4015e1:	mov    rbp,rsp
  4015e4:	mov    rax,rsi
  4015e7:	shr    rax,0x3f
  4015eb:	add    rsi,rax
  4015ee:	sar    rsi,1
  4015f1:	je     401608 <_start@@Base+0xb8>
  4015f3:	mov    eax,0x0
  4015f8:	test   rax,rax
  4015fb:	je     401608 <_start@@Base+0xb8>
  4015fd:	pop    rbp
  4015fe:	mov    edi,0x4080b0
  401603:	jmp    rax
  401605:	nop    DWORD PTR [rax]
  401608:	pop    rbp
  401609:	ret    
  40160a:	nop    WORD PTR [rax+rax*1+0x0]
  401610:	cmp    BYTE PTR [rip+0x6a99],0x0        # 4080b0 <__bss_start@@Base>
  401617:	jne    40162a <_start@@Base+0xda>
  401619:	push   rbp
  40161a:	mov    rbp,rsp
  40161d:	call   401590 <_start@@Base+0x40>
  401622:	pop    rbp
  401623:	mov    BYTE PTR [rip+0x6a86],0x1        # 4080b0 <__bss_start@@Base>
  40162a:	repz ret 
  40162c:	nop    DWORD PTR [rax+0x0]
  401630:	mov    edi,0x407e10
  401635:	cmp    QWORD PTR [rdi],0x0
  401639:	jne    401640 <_start@@Base+0xf0>
  40163b:	jmp    4015d0 <_start@@Base+0x80>
  40163d:	nop    DWORD PTR [rax]
  401640:	mov    eax,0x0
  401645:	test   rax,rax
  401648:	je     40163b <_start@@Base+0xeb>
  40164a:	push   rbp
  40164b:	mov    rbp,rsp
  40164e:	call   rax
  401650:	pop    rbp
  401651:	jmp    4015d0 <_start@@Base+0x80>
  401656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401660:	xor    eax,eax
  401662:	ret    
  401663:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40166e:	xchg   ax,ax
  401670:	mov    ecx,0x4
  401675:	mov    edx,0x4
  40167a:	xor    esi,esi
  40167c:	jmp    402a80 <flatcc_verify_field@@Base>
  401681:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40168c:	nop    DWORD PTR [rax+0x0]
  401690:	push   rbx
  401691:	xor    esi,esi
  401693:	mov    ecx,0x8
  401698:	mov    edx,0x8
  40169d:	mov    rbx,rdi
  4016a0:	call   402a80 <flatcc_verify_field@@Base>
  4016a5:	test   eax,eax
  4016a7:	je     4016b0 <_start@@Base+0x160>
  4016a9:	pop    rbx
  4016aa:	ret    
  4016ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4016b0:	mov    rdi,rbx
  4016b3:	mov    ecx,0x4
  4016b8:	mov    edx,0x4
  4016bd:	pop    rbx
  4016be:	mov    esi,0x1
  4016c3:	jmp    402a80 <flatcc_verify_field@@Base>
  4016c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4016d0:	push   rbx
  4016d1:	xor    esi,esi
  4016d3:	mov    ecx,0x1
  4016d8:	mov    edx,0x1
  4016dd:	mov    rbx,rdi
  4016e0:	call   402a80 <flatcc_verify_field@@Base>
  4016e5:	test   eax,eax
  4016e7:	je     4016f0 <_start@@Base+0x1a0>
  4016e9:	pop    rbx
  4016ea:	ret    
  4016eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f0:	mov    ecx,0x1
  4016f5:	mov    edx,0x1
  4016fa:	mov    esi,0x1
  4016ff:	mov    rdi,rbx
  401702:	call   402a80 <flatcc_verify_field@@Base>
  401707:	test   eax,eax
  401709:	jne    4016e9 <_start@@Base+0x199>
  40170b:	mov    ecx,0x1
  401710:	mov    edx,0x1
  401715:	mov    esi,0x2
  40171a:	mov    rdi,rbx
  40171d:	call   402a80 <flatcc_verify_field@@Base>
  401722:	test   eax,eax
  401724:	jne    4016e9 <_start@@Base+0x199>
  401726:	mov    rdi,rbx
  401729:	mov    ecx,0x1
  40172e:	mov    edx,0x1
  401733:	pop    rbx
  401734:	mov    esi,0x3
  401739:	jmp    402a80 <flatcc_verify_field@@Base>
  40173e:	xchg   ax,ax
  401740:	push   rbx
  401741:	xor    edx,edx
  401743:	xor    esi,esi
  401745:	mov    rbx,rdi
  401748:	call   402ae0 <flatcc_verify_string_field@@Base>
  40174d:	test   eax,eax
  40174f:	je     401758 <_start@@Base+0x208>
  401751:	pop    rbx
  401752:	ret    
  401753:	nop    DWORD PTR [rax+rax*1+0x0]
  401758:	mov    ecx,0x8
  40175d:	mov    edx,0x8
  401762:	mov    esi,0x1
  401767:	mov    rdi,rbx
  40176a:	call   402a80 <flatcc_verify_field@@Base>
  40176f:	test   eax,eax
  401771:	jne    401751 <_start@@Base+0x201>
  401773:	mov    rdi,rbx
  401776:	mov    ecx,0x2
  40177b:	mov    edx,0x2
  401780:	pop    rbx
  401781:	mov    esi,0x2
  401786:	jmp    402a80 <flatcc_verify_field@@Base>
  40178b:	nop    DWORD PTR [rax+rax*1+0x0]
  401790:	push   rbx
  401791:	xor    edx,edx
  401793:	xor    esi,esi
  401795:	mov    rbx,rdi
  401798:	call   402ae0 <flatcc_verify_string_field@@Base>
  40179d:	test   eax,eax
  40179f:	je     4017a8 <_start@@Base+0x258>
  4017a1:	pop    rbx
  4017a2:	ret    
  4017a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a8:	mov    ecx,0x4
  4017ad:	mov    edx,0x4
  4017b2:	mov    esi,0x1
  4017b7:	mov    rdi,rbx
  4017ba:	call   402a80 <flatcc_verify_field@@Base>
  4017bf:	test   eax,eax
  4017c1:	jne    4017a1 <_start@@Base+0x251>
  4017c3:	xor    edx,edx
  4017c5:	mov    esi,0x2
  4017ca:	mov    rdi,rbx
  4017cd:	call   402ae0 <flatcc_verify_string_field@@Base>
  4017d2:	test   eax,eax
  4017d4:	jne    4017a1 <_start@@Base+0x251>
  4017d6:	mov    ecx,0x8
  4017db:	mov    edx,0x8
  4017e0:	mov    esi,0x3
  4017e5:	mov    rdi,rbx
  4017e8:	call   402a80 <flatcc_verify_field@@Base>
  4017ed:	test   eax,eax
  4017ef:	jne    4017a1 <_start@@Base+0x251>
  4017f1:	xor    edx,edx
  4017f3:	mov    esi,0x4
  4017f8:	mov    rdi,rbx
  4017fb:	call   402ae0 <flatcc_verify_string_field@@Base>
  401800:	test   eax,eax
  401802:	jne    4017a1 <_start@@Base+0x251>
  401804:	mov    ecx,0x8
  401809:	mov    edx,0x8
  40180e:	mov    esi,0x5
  401813:	mov    rdi,rbx
  401816:	call   402a80 <flatcc_verify_field@@Base>
  40181b:	test   eax,eax
  40181d:	jne    4017a1 <_start@@Base+0x251>
  40181f:	mov    ecx,0x4
  401824:	mov    edx,0x4
  401829:	mov    esi,0x6
  40182e:	mov    rdi,rbx
  401831:	call   402a80 <flatcc_verify_field@@Base>
  401836:	test   eax,eax
  401838:	jne    4017a1 <_start@@Base+0x251>
  40183e:	mov    ecx,0x8
  401843:	mov    edx,0x8
  401848:	mov    esi,0x7
  40184d:	mov    rdi,rbx
  401850:	call   402a80 <flatcc_verify_field@@Base>
  401855:	test   eax,eax
  401857:	jne    4017a1 <_start@@Base+0x251>
  40185d:	mov    rdi,rbx
  401860:	mov    ecx,0x4
  401865:	mov    edx,0x4
  40186a:	pop    rbx
  40186b:	mov    esi,0x8
  401870:	jmp    402a80 <flatcc_verify_field@@Base>
  401875:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401880:	push   rbx
  401881:	lea    rcx,[rip+0xffffffffffffff08]        # 401790 <_start@@Base+0x240>
  401888:	xor    edx,edx
  40188a:	xor    esi,esi
  40188c:	mov    rbx,rdi
  40188f:	call   402e10 <flatcc_verify_table_field@@Base>
  401894:	test   eax,eax
  401896:	je     4018a0 <_start@@Base+0x350>
  401898:	pop    rbx
  401899:	ret    
  40189a:	nop    WORD PTR [rax+rax*1+0x0]
  4018a0:	lea    rcx,[rip+0x6b9]        # 401f60 <_start@@Base+0xa10>
  4018a7:	xor    edx,edx
  4018a9:	mov    esi,0x1
  4018ae:	mov    rdi,rbx
  4018b1:	call   402e10 <flatcc_verify_table_field@@Base>
  4018b6:	test   eax,eax
  4018b8:	jne    401898 <_start@@Base+0x348>
  4018ba:	mov    rdi,rbx
  4018bd:	lea    rcx,[rip+0xfffffffffffffdcc]        # 401690 <_start@@Base+0x140>
  4018c4:	xor    edx,edx
  4018c6:	pop    rbx
  4018c7:	mov    esi,0x2
  4018cc:	jmp    402e10 <flatcc_verify_table_field@@Base>
  4018d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018dc:	nop    DWORD PTR [rax+0x0]
  4018e0:	push   rbx
  4018e1:	xor    esi,esi
  4018e3:	mov    ecx,0x10
  4018e8:	mov    edx,0x20
  4018ed:	mov    rbx,rdi
  4018f0:	call   402a80 <flatcc_verify_field@@Base>
  4018f5:	test   eax,eax
  4018f7:	je     401900 <_start@@Base+0x3b0>
  4018f9:	pop    rbx
  4018fa:	ret    
  4018fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401900:	mov    ecx,0x2
  401905:	mov    edx,0x2
  40190a:	mov    esi,0x2
  40190f:	mov    rdi,rbx
  401912:	call   402a80 <flatcc_verify_field@@Base>
  401917:	test   eax,eax
  401919:	jne    4018f9 <_start@@Base+0x3a9>
  40191b:	mov    ecx,0x2
  401920:	mov    edx,0x2
  401925:	mov    esi,0x1
  40192a:	mov    rdi,rbx
  40192d:	call   402a80 <flatcc_verify_field@@Base>
  401932:	test   eax,eax
  401934:	jne    4018f9 <_start@@Base+0x3a9>
  401936:	mov    edx,0x1
  40193b:	mov    esi,0x3
  401940:	mov    rdi,rbx
  401943:	call   402ae0 <flatcc_verify_string_field@@Base>
  401948:	test   eax,eax
  40194a:	jne    4018f9 <_start@@Base+0x3a9>
  40194c:	mov    ecx,0x1
  401951:	mov    edx,0x1
  401956:	mov    esi,0x6
  40195b:	mov    rdi,rbx
  40195e:	call   402a80 <flatcc_verify_field@@Base>
  401963:	test   eax,eax
  401965:	jne    4018f9 <_start@@Base+0x3a9>
  401967:	xor    edx,edx
  401969:	mov    r9d,0xffffffff
  40196f:	mov    r8d,0x1
  401975:	mov    ecx,0x1
  40197a:	mov    esi,0x5
  40197f:	mov    rdi,rbx
  401982:	call   402b90 <flatcc_verify_vector_field@@Base>
  401987:	test   eax,eax
  401989:	jne    4018f9 <_start@@Base+0x3a9>
  40198f:	lea    rcx,[rip+0xffffffffffffff4a]        # 4018e0 <_start@@Base+0x390>
  401996:	xor    edx,edx
  401998:	mov    esi,0xb
  40199d:	mov    rdi,rbx
  4019a0:	call   402f60 <flatcc_verify_table_vector_field@@Base>
  4019a5:	test   eax,eax
  4019a7:	jne    4018f9 <_start@@Base+0x3a9>
  4019ad:	xor    edx,edx
  4019af:	mov    esi,0xa
  4019b4:	mov    rdi,rbx
  4019b7:	call   402c70 <flatcc_verify_string_vector_field@@Base>
  4019bc:	test   eax,eax
  4019be:	jne    4018f9 <_start@@Base+0x3a9>
  4019c4:	xor    edx,edx
  4019c6:	mov    esi,0x1c
  4019cb:	mov    rdi,rbx
  4019ce:	call   402c70 <flatcc_verify_string_vector_field@@Base>
  4019d3:	test   eax,eax
  4019d5:	jne    4018f9 <_start@@Base+0x3a9>
  4019db:	xor    edx,edx
  4019dd:	mov    r9d,0xffffffff
  4019e3:	mov    r8d,0x1
  4019e9:	mov    ecx,0x1
  4019ee:	mov    esi,0x18
  4019f3:	mov    rdi,rbx
  4019f6:	call   402b90 <flatcc_verify_vector_field@@Base>
  4019fb:	test   eax,eax
  4019fd:	jne    4018f9 <_start@@Base+0x3a9>
  401a03:	xor    edx,edx
  401a05:	mov    r9d,0x1fffffff
  401a0b:	mov    r8d,0x4
  401a11:	mov    ecx,0x8
  401a16:	mov    esi,0x1d
  401a1b:	mov    rdi,rbx
  401a1e:	call   402b90 <flatcc_verify_vector_field@@Base>
  401a23:	test   eax,eax
  401a25:	jne    4018f9 <_start@@Base+0x3a9>
  401a2b:	lea    rcx,[rip+0xfffffffffffffeae]        # 4018e0 <_start@@Base+0x390>
  401a32:	xor    edx,edx
  401a34:	mov    esi,0xc
  401a39:	mov    rdi,rbx
  401a3c:	call   402e10 <flatcc_verify_table_field@@Base>
  401a41:	test   eax,eax
  401a43:	jne    4018f9 <_start@@Base+0x3a9>
  401a49:	lea    rcx,[rip+0x340]        # 401d90 <_start@@Base+0x840>
  401a50:	xor    edx,edx
  401a52:	mov    esi,0x8
  401a57:	mov    rdi,rbx
  401a5a:	call   403c00 <flatcc_verify_union_field@@Base>
  401a5f:	test   eax,eax
  401a61:	jne    4018f9 <_start@@Base+0x3a9>
  401a67:	xor    edx,edx
  401a69:	mov    r9d,0x3fffffff
  401a6f:	mov    r8d,0x2
  401a75:	mov    ecx,0x4
  401a7a:	mov    esi,0x9
  401a7f:	mov    rdi,rbx
  401a82:	call   402b90 <flatcc_verify_vector_field@@Base>
  401a87:	test   eax,eax
  401a89:	jne    4018f9 <_start@@Base+0x3a9>
  401a8f:	xor    edx,edx
  401a91:	mov    r9d,0x3fffffff
  401a97:	mov    r8d,0x2
  401a9d:	mov    ecx,0x4
  401aa2:	mov    esi,0x1f
  401aa7:	mov    rdi,rbx
  401aaa:	call   402b90 <flatcc_verify_vector_field@@Base>
  401aaf:	test   eax,eax
  401ab1:	jne    4018f9 <_start@@Base+0x3a9>
  401ab7:	lea    r9,[rip+0xfffffffffffffe22]        # 4018e0 <_start@@Base+0x390>
  401abe:	xor    ecx,ecx
  401ac0:	xor    edx,edx
  401ac2:	mov    r8d,0x1
  401ac8:	mov    esi,0xd
  401acd:	mov    rdi,rbx
  401ad0:	call   403a10 <flatcc_verify_table_as_nested_root@@Base>
  401ad5:	test   eax,eax
  401ad7:	jne    4018f9 <_start@@Base+0x3a9>
  401add:	lea    rcx,[rip+0xfffffffffffffc5c]        # 401740 <_start@@Base+0x1f0>
  401ae4:	xor    edx,edx
  401ae6:	mov    esi,0xe
  401aeb:	mov    rdi,rbx
  401aee:	call   402e10 <flatcc_verify_table_field@@Base>
  401af3:	test   eax,eax
  401af5:	jne    4018f9 <_start@@Base+0x3a9>
  401afb:	mov    ecx,0x1
  401b00:	mov    edx,0x1
  401b05:	mov    esi,0xf
  401b0a:	mov    rdi,rbx
  401b0d:	call   402a80 <flatcc_verify_field@@Base>
  401b12:	test   eax,eax
  401b14:	jne    4018f9 <_start@@Base+0x3a9>
  401b1a:	mov    ecx,0x4
  401b1f:	mov    edx,0x4
  401b24:	mov    esi,0x10
  401b29:	mov    rdi,rbx
  401b2c:	call   402a80 <flatcc_verify_field@@Base>
  401b31:	test   eax,eax
  401b33:	jne    4018f9 <_start@@Base+0x3a9>
  401b39:	mov    ecx,0x4
  401b3e:	mov    edx,0x4
  401b43:	mov    esi,0x11
  401b48:	mov    rdi,rbx
  401b4b:	call   402a80 <flatcc_verify_field@@Base>
  401b50:	test   eax,eax
  401b52:	jne    4018f9 <_start@@Base+0x3a9>
  401b58:	mov    ecx,0x8
  401b5d:	mov    edx,0x8
  401b62:	mov    esi,0x12
  401b67:	mov    rdi,rbx
  401b6a:	call   402a80 <flatcc_verify_field@@Base>
  401b6f:	test   eax,eax
  401b71:	jne    4018f9 <_start@@Base+0x3a9>
  401b77:	mov    ecx,0x8
  401b7c:	mov    edx,0x8
  401b81:	mov    esi,0x13
  401b86:	mov    rdi,rbx
  401b89:	call   402a80 <flatcc_verify_field@@Base>
  401b8e:	test   eax,eax
  401b90:	jne    4018f9 <_start@@Base+0x3a9>
  401b96:	mov    ecx,0x4
  401b9b:	mov    edx,0x4
  401ba0:	mov    esi,0x14
  401ba5:	mov    rdi,rbx
  401ba8:	call   402a80 <flatcc_verify_field@@Base>
  401bad:	test   eax,eax
  401baf:	jne    4018f9 <_start@@Base+0x3a9>
  401bb5:	mov    ecx,0x4
  401bba:	mov    edx,0x4
  401bbf:	mov    esi,0x15
  401bc4:	mov    rdi,rbx
  401bc7:	call   402a80 <flatcc_verify_field@@Base>
  401bcc:	test   eax,eax
  401bce:	jne    4018f9 <_start@@Base+0x3a9>
  401bd4:	mov    ecx,0x8
  401bd9:	mov    edx,0x8
  401bde:	mov    esi,0x16
  401be3:	mov    rdi,rbx
  401be6:	call   402a80 <flatcc_verify_field@@Base>
  401beb:	test   eax,eax
  401bed:	jne    4018f9 <_start@@Base+0x3a9>
  401bf3:	mov    ecx,0x8
  401bf8:	mov    edx,0x8
  401bfd:	mov    esi,0x17
  401c02:	mov    rdi,rbx
  401c05:	call   402a80 <flatcc_verify_field@@Base>
  401c0a:	test   eax,eax
  401c0c:	jne    4018f9 <_start@@Base+0x3a9>
  401c12:	mov    ecx,0x4
  401c17:	mov    edx,0x4
  401c1c:	mov    esi,0x19
  401c21:	mov    rdi,rbx
  401c24:	call   402a80 <flatcc_verify_field@@Base>
  401c29:	test   eax,eax
  401c2b:	jne    4018f9 <_start@@Base+0x3a9>
  401c31:	mov    ecx,0x4
  401c36:	mov    edx,0x4
  401c3b:	mov    esi,0x1a
  401c40:	mov    rdi,rbx
  401c43:	call   402a80 <flatcc_verify_field@@Base>
  401c48:	test   eax,eax
  401c4a:	jne    4018f9 <_start@@Base+0x3a9>
  401c50:	mov    ecx,0x4
  401c55:	mov    edx,0x4
  401c5a:	mov    esi,0x1b
  401c5f:	mov    rdi,rbx
  401c62:	call   402a80 <flatcc_verify_field@@Base>
  401c67:	test   eax,eax
  401c69:	jne    4018f9 <_start@@Base+0x3a9>
  401c6f:	xor    edx,edx
  401c71:	mov    r9d,0xffffffff
  401c77:	mov    r8d,0x1
  401c7d:	mov    ecx,0x1
  401c82:	mov    esi,0x1e
  401c87:	mov    rdi,rbx
  401c8a:	call   402b90 <flatcc_verify_vector_field@@Base>
  401c8f:	test   eax,eax
  401c91:	jne    4018f9 <_start@@Base+0x3a9>
  401c97:	xor    edx,edx
  401c99:	mov    r9d,0x1fffffff
  401c9f:	mov    r8d,0x8
  401ca5:	mov    ecx,0x8
  401caa:	mov    esi,0x20
  401caf:	mov    rdi,rbx
  401cb2:	call   402b90 <flatcc_verify_vector_field@@Base>
  401cb7:	test   eax,eax
  401cb9:	jne    4018f9 <_start@@Base+0x3a9>
  401cbf:	xor    edx,edx
  401cc1:	mov    r9d,0x1fffffff
  401cc7:	mov    r8d,0x8
  401ccd:	mov    ecx,0x8
  401cd2:	mov    esi,0x21
  401cd7:	mov    rdi,rbx
  401cda:	call   402b90 <flatcc_verify_vector_field@@Base>
  401cdf:	test   eax,eax
  401ce1:	jne    4018f9 <_start@@Base+0x3a9>
  401ce7:	lea    rcx,[rip+0x262]        # 401f50 <_start@@Base+0xa00>
  401cee:	xor    edx,edx
  401cf0:	mov    esi,0x22
  401cf5:	mov    rdi,rbx
  401cf8:	call   402e10 <flatcc_verify_table_field@@Base>
  401cfd:	test   eax,eax
  401cff:	jne    4018f9 <_start@@Base+0x3a9>
  401d05:	mov    rdi,rbx
  401d08:	lea    rcx,[rip+0x11]        # 401d20 <_start@@Base+0x7d0>
  401d0f:	xor    edx,edx
  401d11:	pop    rbx
  401d12:	mov    esi,0x23
  401d17:	jmp    402e10 <flatcc_verify_table_field@@Base>
  401d1c:	nop    DWORD PTR [rax+0x0]
  401d20:	push   rbx
  401d21:	xor    edx,edx
  401d23:	xor    esi,esi
  401d25:	mov    r9d,0xffffffff
  401d2b:	mov    r8d,0x1
  401d31:	mov    ecx,0x1
  401d36:	mov    rbx,rdi
  401d39:	call   402b90 <flatcc_verify_vector_field@@Base>
  401d3e:	test   eax,eax
  401d40:	je     401d48 <_start@@Base+0x7f8>
  401d42:	pop    rbx
  401d43:	ret    
  401d44:	nop    DWORD PTR [rax+0x0]
  401d48:	xor    edx,edx
  401d4a:	mov    r9d,0xffffffff
  401d50:	mov    r8d,0x1
  401d56:	mov    ecx,0x1
  401d5b:	mov    esi,0x1
  401d60:	mov    rdi,rbx
  401d63:	call   402b90 <flatcc_verify_vector_field@@Base>
  401d68:	test   eax,eax
  401d6a:	jne    401d42 <_start@@Base+0x7f2>
  401d6c:	mov    rdi,rbx
  401d6f:	lea    r9,[rip+0xfffffffffffffb6a]        # 4018e0 <_start@@Base+0x390>
  401d76:	mov    r8d,0x1
  401d7c:	pop    rbx
  401d7d:	xor    ecx,ecx
  401d7f:	xor    edx,edx
  401d81:	mov    esi,0x2
  401d86:	jmp    403a10 <flatcc_verify_table_as_nested_root@@Base>
  401d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d90:	movzx  eax,BYTE PTR [rdi+0x10]
  401d94:	cmp    al,0x2
  401d96:	je     401dd8 <_start@@Base+0x888>
  401d98:	jbe    401dc0 <_start@@Base+0x870>
  401d9a:	cmp    al,0x3
  401d9c:	je     401db0 <_start@@Base+0x860>
  401d9e:	cmp    al,0x4
  401da0:	jne    401dd0 <_start@@Base+0x880>
  401da2:	lea    rsi,[rip+0x47]        # 401df0 <_start@@Base+0x8a0>
  401da9:	jmp    403290 <flatcc_verify_union_table@@Base>
  401dae:	xchg   ax,ax
  401db0:	lea    rsi,[rip+0xfffffffffffff8a9]        # 401660 <_start@@Base+0x110>
  401db7:	jmp    403290 <flatcc_verify_union_table@@Base>
  401dbc:	nop    DWORD PTR [rax+0x0]
  401dc0:	cmp    al,0x1
  401dc2:	jne    401dd0 <_start@@Base+0x880>
  401dc4:	lea    rsi,[rip+0xfffffffffffffb15]        # 4018e0 <_start@@Base+0x390>
  401dcb:	jmp    403290 <flatcc_verify_union_table@@Base>
  401dd0:	xor    eax,eax
  401dd2:	ret    
  401dd3:	nop    DWORD PTR [rax+rax*1+0x0]
  401dd8:	lea    rsi,[rip+0xfffffffffffff8f1]        # 4016d0 <_start@@Base+0x180>
  401ddf:	jmp    403290 <flatcc_verify_union_table@@Base>
  401de4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401def:	nop
  401df0:	push   rbx
  401df1:	lea    rcx,[rip+0xfffffffffffffa88]        # 401880 <_start@@Base+0x330>
  401df8:	xor    edx,edx
  401dfa:	xor    esi,esi
  401dfc:	mov    rbx,rdi
  401dff:	call   402e10 <flatcc_verify_table_field@@Base>
  401e04:	test   eax,eax
  401e06:	je     401e10 <_start@@Base+0x8c0>
  401e08:	pop    rbx
  401e09:	ret    
  401e0a:	nop    WORD PTR [rax+rax*1+0x0]
  401e10:	lea    rcx,[rip+0x39]        # 401e50 <_start@@Base+0x900>
  401e17:	xor    edx,edx
  401e19:	mov    esi,0x1
  401e1e:	mov    rdi,rbx
  401e21:	call   402e10 <flatcc_verify_table_field@@Base>
  401e26:	test   eax,eax
  401e28:	jne    401e08 <_start@@Base+0x8b8>
  401e2a:	mov    rdi,rbx
  401e2d:	lea    rcx,[rip+0xffffffffffffff5c]        # 401d90 <_start@@Base+0x840>
  401e34:	xor    edx,edx
  401e36:	pop    rbx
  401e37:	mov    esi,0x3
  401e3c:	jmp    403d60 <flatcc_verify_union_vector_field@@Base>
  401e41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e4c:	nop    DWORD PTR [rax+0x0]
  401e50:	push   rbx
  401e51:	lea    rcx,[rip+0x88]        # 401ee0 <_start@@Base+0x990>
  401e58:	xor    edx,edx
  401e5a:	mov    esi,0x1
  401e5f:	mov    rbx,rdi
  401e62:	call   403c00 <flatcc_verify_union_field@@Base>
  401e67:	test   eax,eax
  401e69:	je     401e70 <_start@@Base+0x920>
  401e6b:	pop    rbx
  401e6c:	ret    
  401e6d:	nop    DWORD PTR [rax]
  401e70:	lea    rcx,[rip+0x69]        # 401ee0 <_start@@Base+0x990>
  401e77:	xor    edx,edx
  401e79:	mov    esi,0x3
  401e7e:	mov    rdi,rbx
  401e81:	call   403c00 <flatcc_verify_union_field@@Base>
  401e86:	test   eax,eax
  401e88:	jne    401e6b <_start@@Base+0x91b>
  401e8a:	lea    rcx,[rip+0x4f]        # 401ee0 <_start@@Base+0x990>
  401e91:	xor    edx,edx
  401e93:	mov    esi,0x5
  401e98:	mov    rdi,rbx
  401e9b:	call   403c00 <flatcc_verify_union_field@@Base>
  401ea0:	test   eax,eax
  401ea2:	jne    401e6b <_start@@Base+0x91b>
  401ea4:	lea    rcx,[rip+0x35]        # 401ee0 <_start@@Base+0x990>
  401eab:	xor    edx,edx
  401ead:	mov    esi,0x7
  401eb2:	mov    rdi,rbx
  401eb5:	call   403c00 <flatcc_verify_union_field@@Base>
  401eba:	test   eax,eax
  401ebc:	jne    401e6b <_start@@Base+0x91b>
  401ebe:	mov    rdi,rbx
  401ec1:	lea    rcx,[rip+0x18]        # 401ee0 <_start@@Base+0x990>
  401ec8:	xor    edx,edx
  401eca:	pop    rbx
  401ecb:	mov    esi,0x9
  401ed0:	jmp    403d60 <flatcc_verify_union_vector_field@@Base>
  401ed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401ee0:	movzx  eax,BYTE PTR [rdi+0x10]
  401ee4:	cmp    al,0x9
  401ee6:	je     401f20 <_start@@Base+0x9d0>
  401ee8:	jbe    401f00 <_start@@Base+0x9b0>
  401eea:	cmp    al,0xb
  401eec:	je     401ef4 <_start@@Base+0x9a4>
  401eee:	jb     401f20 <_start@@Base+0x9d0>
  401ef0:	cmp    al,0xff
  401ef2:	jne    401f30 <_start@@Base+0x9e0>
  401ef4:	jmp    403400 <flatcc_verify_union_string@@Base>
  401ef9:	nop    DWORD PTR [rax+0x0]
  401f00:	cmp    al,0x2
  401f02:	je     401f38 <_start@@Base+0x9e8>
  401f04:	cmp    al,0x8
  401f06:	jne    401f30 <_start@@Base+0x9e0>
  401f08:	mov    edx,0x2
  401f0d:	mov    esi,0x2
  401f12:	jmp    4033b0 <flatcc_verify_union_struct@@Base>
  401f17:	nop    WORD PTR [rax+rax*1+0x0]
  401f20:	mov    edx,0x4
  401f25:	mov    esi,0x4
  401f2a:	jmp    4033b0 <flatcc_verify_union_struct@@Base>
  401f2f:	nop
  401f30:	xor    eax,eax
  401f32:	ret    
  401f33:	nop    DWORD PTR [rax+rax*1+0x0]
  401f38:	lea    rsi,[rip+0xfffffffffffff731]        # 401670 <_start@@Base+0x120>
  401f3f:	jmp    403290 <flatcc_verify_union_table@@Base>
  401f44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f4f:	nop
  401f50:	xor    eax,eax
  401f52:	ret    
  401f53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f5e:	xchg   ax,ax
  401f60:	push   rbx
  401f61:	xor    esi,esi
  401f63:	mov    ecx,0x8
  401f68:	mov    edx,0x8
  401f6d:	mov    rbx,rdi
  401f70:	call   402a80 <flatcc_verify_field@@Base>
  401f75:	test   eax,eax
  401f77:	je     401f80 <_start@@Base+0xa30>
  401f79:	pop    rbx
  401f7a:	ret    
  401f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f80:	mov    rdi,rbx
  401f83:	mov    ecx,0x4
  401f88:	mov    edx,0x4
  401f8d:	pop    rbx
  401f8e:	mov    esi,0x1
  401f93:	jmp    402a80 <flatcc_verify_field@@Base>
  401f98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401fa0 <verify_monster@@Base>:
  401fa0:	sub    rsp,0x8
  401fa4:	test   rdi,rdi
  401fa7:	je     401fb2 <verify_monster@@Base+0x12>
  401fa9:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  401fb0:	je     401fd0 <verify_monster@@Base+0x30>
  401fb2:	lea    rsi,[rip+0x3646]        # 4055ff <_IO_stdin_used@@Base+0x5ff>
  401fb9:	mov    edi,0x1
  401fbe:	xor    eax,eax
  401fc0:	call   4010e0 <__printf_chk@plt>
  401fc5:	mov    eax,0xffffffff
  401fca:	add    rsp,0x8
  401fce:	ret    
  401fcf:	nop
  401fd0:	mov    r8d,DWORD PTR [rdi]
  401fd3:	add    r8,rdi
  401fd6:	je     401fb2 <verify_monster@@Base+0x12>
  401fd8:	movsxd rax,DWORD PTR [r8]
  401fdb:	mov    r10,r8
  401fde:	sub    r10,rax
  401fe1:	movzx  r9d,WORD PTR [r10]
  401fe5:	cmp    r9w,0x9
  401fea:	ja     402010 <verify_monster@@Base+0x70>
  401fec:	lea    rsi,[rip+0x317d]        # 405170 <_IO_stdin_used@@Base+0x170>
  401ff3:	mov    edi,0x1
  401ff8:	xor    eax,eax
  401ffa:	call   4010e0 <__printf_chk@plt>
  401fff:	mov    eax,0xffffffff
  402004:	jmp    401fca <verify_monster@@Base+0x2a>
  402006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402010:	movzx  eax,WORD PTR [r10+0x8]
  402015:	test   ax,ax
  402018:	je     401fec <verify_monster@@Base+0x4c>
  40201a:	cmp    WORD PTR [r8+rax*1],0x50
  402020:	jne    401fec <verify_monster@@Base+0x4c>
  402022:	movzx  eax,WORD PTR [r10+0x4]
  402027:	test   ax,ax
  40202a:	je     402752 <verify_monster@@Base+0x7b2>
  402030:	add    rax,r8
  402033:	je     402752 <verify_monster@@Base+0x7b2>
  402039:	mov    rdx,rax
  40203c:	sub    rdx,rdi
  40203f:	and    edx,0xf
  402042:	jne    4025ff <verify_monster@@Base+0x65f>
  402048:	vmovss xmm0,DWORD PTR [rip+0x3810]        # 405860 <_IO_stdin_used@@Base+0x860>
  402050:	vucomiss xmm0,DWORD PTR [rax]
  402054:	jp     402620 <verify_monster@@Base+0x680>
  40205a:	jne    402620 <verify_monster@@Base+0x680>
  402060:	vmovss xmm0,DWORD PTR [rax+0x4]
  402065:	vucomiss xmm0,DWORD PTR [rip+0x37f7]        # 405864 <_IO_stdin_used@@Base+0x864>
  40206d:	jp     402640 <verify_monster@@Base+0x6a0>
  402073:	jne    402640 <verify_monster@@Base+0x6a0>
  402079:	vmovss xmm0,DWORD PTR [rax+0x8]
  40207e:	vucomiss xmm0,DWORD PTR [rip+0x37e2]        # 405868 <_IO_stdin_used@@Base+0x868>
  402086:	jp     402660 <verify_monster@@Base+0x6c0>
  40208c:	jne    402660 <verify_monster@@Base+0x6c0>
  402092:	vmovsd xmm0,QWORD PTR [rip+0x37d6]        # 405870 <_IO_stdin_used@@Base+0x870>
  40209a:	vucomisd xmm0,QWORD PTR [rax+0x10]
  40209f:	jp     402680 <verify_monster@@Base+0x6e0>
  4020a5:	jne    402680 <verify_monster@@Base+0x6e0>
  4020ab:	cmp    BYTE PTR [rax+0x18],0x2
  4020af:	jne    402568 <verify_monster@@Base+0x5c8>
  4020b5:	cmp    WORD PTR [rax+0x1a],0x5
  4020ba:	jne    402310 <verify_monster@@Base+0x370>
  4020c0:	cmp    BYTE PTR [rax+0x1c],0x6
  4020c4:	jne    402310 <verify_monster@@Base+0x370>
  4020ca:	cmp    r9w,0xb
  4020cf:	ja     4020f0 <verify_monster@@Base+0x150>
  4020d1:	lea    rcx,[rip+0x3738]        # 405810 <_IO_stdin_used@@Base+0x810>
  4020d8:	lea    rsi,[rip+0x2fe9]        # 4050c8 <_IO_stdin_used@@Base+0xc8>
  4020df:	lea    rdi,[rip+0x3152]        # 405238 <_IO_stdin_used@@Base+0x238>
  4020e6:	mov    edx,0x2bb
  4020eb:	call   401090 <__assert_fail@plt>
  4020f0:	movzx  eax,WORD PTR [r10+0xa]
  4020f5:	test   ax,ax
  4020f8:	je     4020d1 <verify_monster@@Base+0x131>
  4020fa:	add    rax,r8
  4020fd:	mov    edx,DWORD PTR [rax]
  4020ff:	lea    rsi,[rax+rdx*1+0x4]
  402104:	test   rsi,rsi
  402107:	je     4025a8 <verify_monster@@Base+0x608>
  40210d:	cmp    DWORD PTR [rsi-0x4],0x9
  402111:	jne    4025a8 <verify_monster@@Base+0x608>
  402117:	lea    rdi,[rip+0x356c]        # 40568a <_IO_stdin_used@@Base+0x68a>
  40211e:	mov    ecx,0xa
  402123:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402125:	jne    402528 <verify_monster@@Base+0x588>
  40212b:	cmp    r9w,0xf
  402130:	ja     402150 <verify_monster@@Base+0x1b0>
  402132:	lea    rsi,[rip+0x3570]        # 4056a9 <_IO_stdin_used@@Base+0x6a9>
  402139:	mov    edi,0x1
  40213e:	xor    eax,eax
  402140:	call   4010e0 <__printf_chk@plt>
  402145:	mov    eax,0xffffffff
  40214a:	jmp    401fca <verify_monster@@Base+0x2a>
  40214f:	nop
  402150:	movzx  eax,WORD PTR [r10+0xe]
  402155:	test   ax,ax
  402158:	je     402132 <verify_monster@@Base+0x192>
  40215a:	add    rax,r8
  40215d:	mov    edx,DWORD PTR [rax]
  40215f:	lea    rcx,[rax+rdx*1+0x4]
  402164:	test   rcx,rcx
  402167:	je     402132 <verify_monster@@Base+0x192>
  402169:	cmp    DWORD PTR [rcx-0x4],0x5
  40216d:	jne    402132 <verify_monster@@Base+0x192>
  40216f:	xor    edx,edx
  402171:	movzx  eax,BYTE PTR [rcx+rdx*1]
  402175:	cmp    eax,edx
  402177:	jne    402508 <verify_monster@@Base+0x568>
  40217d:	add    rdx,0x1
  402181:	cmp    rdx,0x5
  402185:	jne    402171 <verify_monster@@Base+0x1d1>
  402187:	cmp    r9w,0x19
  40218c:	ja     4021b0 <verify_monster@@Base+0x210>
  40218e:	lea    rsi,[rip+0x354d]        # 4056e2 <_IO_stdin_used@@Base+0x6e2>
  402195:	mov    edi,0x1
  40219a:	xor    eax,eax
  40219c:	call   4010e0 <__printf_chk@plt>
  4021a1:	mov    eax,0xffffffff
  4021a6:	jmp    401fca <verify_monster@@Base+0x2a>
  4021ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4021b0:	movzx  eax,WORD PTR [r10+0x18]
  4021b5:	test   ax,ax
  4021b8:	je     40218e <verify_monster@@Base+0x1ee>
  4021ba:	add    rax,r8
  4021bd:	mov    edx,DWORD PTR [rax]
  4021bf:	lea    rax,[rax+rdx*1+0x4]
  4021c4:	test   rax,rax
  4021c7:	je     40218e <verify_monster@@Base+0x1ee>
  4021c9:	cmp    DWORD PTR [rax-0x4],0x2
  4021cd:	jne    4025c5 <verify_monster@@Base+0x625>
  4021d3:	mov    edx,DWORD PTR [rax]
  4021d5:	lea    rdi,[rip+0x3523]        # 4056ff <_IO_stdin_used@@Base+0x6ff>
  4021dc:	mov    ecx,0x6
  4021e1:	lea    rsi,[rax+rdx*1+0x4]
  4021e6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021e8:	jne    402735 <verify_monster@@Base+0x795>
  4021ee:	mov    edx,DWORD PTR [rax+0x4]
  4021f1:	lea    rdi,[rip+0x350d]        # 405705 <_IO_stdin_used@@Base+0x705>
  4021f8:	mov    ecx,0x6
  4021fd:	lea    rsi,[rax+rdx*1+0x8]
  402202:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402204:	jne    4025e2 <verify_monster@@Base+0x642>
  40220a:	movzx  eax,WORD PTR [r10+0x12]
  40220f:	test   ax,ax
  402212:	je     402545 <verify_monster@@Base+0x5a5>
  402218:	cmp    BYTE PTR [r8+rax*1],0x1
  40221d:	jne    402545 <verify_monster@@Base+0x5a5>
  402223:	movzx  eax,WORD PTR [r10+0x14]
  402228:	test   ax,ax
  40222b:	je     40276f <verify_monster@@Base+0x7cf>
  402231:	add    rax,r8
  402234:	mov    edx,DWORD PTR [rax]
  402236:	add    rax,rdx
  402239:	je     40276f <verify_monster@@Base+0x7cf>
  40223f:	movsxd rdx,DWORD PTR [rax]
  402242:	mov    rsi,rax
  402245:	sub    rsi,rdx
  402248:	cmp    WORD PTR [rsi],0xb
  40224c:	jbe    4020d1 <verify_monster@@Base+0x131>
  402252:	movzx  edx,WORD PTR [rsi+0xa]
  402256:	test   dx,dx
  402259:	je     4020d1 <verify_monster@@Base+0x131>
  40225f:	add    rax,rdx
  402262:	lea    rdi,[rip+0x34cb]        # 405734 <_IO_stdin_used@@Base+0x734>
  402269:	mov    ecx,0x5
  40226e:	mov    edx,DWORD PTR [rax]
  402270:	lea    rsi,[rax+rdx*1+0x4]
  402275:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402277:	seta   al
  40227a:	setb   dl
  40227d:	sub    eax,edx
  40227f:	movsx  eax,al
  402282:	test   eax,eax
  402284:	jne    4026ba <verify_monster@@Base+0x71a>
  40228a:	movzx  edx,WORD PTR [r10+0x16]
  40228f:	test   dx,dx
  402292:	je     40269d <verify_monster@@Base+0x6fd>
  402298:	add    rdx,r8
  40229b:	mov    ecx,DWORD PTR [rdx]
  40229d:	lea    rdx,[rdx+rcx*1+0x4]
  4022a2:	test   rdx,rdx
  4022a5:	je     40269d <verify_monster@@Base+0x6fd>
  4022ab:	cmp    DWORD PTR [rdx-0x4],0x2
  4022af:	jne    40269d <verify_monster@@Base+0x6fd>
  4022b5:	cmp    WORD PTR [rdx],0xa
  4022b9:	jne    4026d7 <verify_monster@@Base+0x737>
  4022bf:	cmp    BYTE PTR [rdx+0x2],0x14
  4022c3:	jne    4026f4 <verify_monster@@Base+0x754>
  4022c9:	cmp    rdx,0xfffffffffffffffc
  4022cd:	je     402718 <verify_monster@@Base+0x778>
  4022d3:	cmp    WORD PTR [rdx+0x4],0x1e
  4022d8:	jne    402718 <verify_monster@@Base+0x778>
  4022de:	cmp    BYTE PTR [rdx+0x6],0x28
  4022e2:	jne    402585 <verify_monster@@Base+0x5e5>
  4022e8:	cmp    r9w,0x25
  4022ed:	ja     402330 <verify_monster@@Base+0x390>
  4022ef:	lea    rcx,[rip+0x355a]        # 405850 <_IO_stdin_used@@Base+0x850>
  4022f6:	lea    rsi,[rip+0x300b]        # 405308 <_IO_stdin_used@@Base+0x308>
  4022fd:	lea    rdi,[rip+0x3074]        # 405378 <_IO_stdin_used@@Base+0x378>
  402304:	mov    edx,0x94
  402309:	call   401090 <__assert_fail@plt>
  40230e:	xchg   ax,ax
  402310:	lea    rsi,[rip+0x333e]        # 405655 <_IO_stdin_used@@Base+0x655>
  402317:	mov    edi,0x1
  40231c:	xor    eax,eax
  40231e:	call   4010e0 <__printf_chk@plt>
  402323:	mov    eax,0xffffffff
  402328:	add    rsp,0x8
  40232c:	ret    
  40232d:	nop    DWORD PTR [rax]
  402330:	movzx  edx,WORD PTR [r10+0x24]
  402335:	test   dx,dx
  402338:	je     4022ef <verify_monster@@Base+0x34f>
  40233a:	cmp    DWORD PTR [r8+rdx*1],0xdd79c941
  402342:	jne    4022ef <verify_monster@@Base+0x34f>
  402344:	cmp    r9w,0x27
  402349:	ja     402370 <verify_monster@@Base+0x3d0>
  40234b:	lea    rcx,[rip+0x34fe]        # 405850 <_IO_stdin_used@@Base+0x850>
  402352:	lea    rsi,[rip+0x2faf]        # 405308 <_IO_stdin_used@@Base+0x308>
  402359:	lea    rdi,[rip+0x3050]        # 4053b0 <_IO_stdin_used@@Base+0x3b0>
  402360:	mov    edx,0x95
  402365:	call   401090 <__assert_fail@plt>
  40236a:	nop    WORD PTR [rax+rax*1+0x0]
  402370:	movzx  edx,WORD PTR [r10+0x26]
  402375:	test   dx,dx
  402378:	je     40234b <verify_monster@@Base+0x3ab>
  40237a:	cmp    DWORD PTR [r8+rdx*1],0xdd79c941
  402382:	jne    40234b <verify_monster@@Base+0x3ab>
  402384:	cmp    r9w,0x29
  402389:	ja     4023b0 <verify_monster@@Base+0x410>
  40238b:	lea    rcx,[rip+0x34be]        # 405850 <_IO_stdin_used@@Base+0x850>
  402392:	lea    rsi,[rip+0x2f6f]        # 405308 <_IO_stdin_used@@Base+0x308>
  402399:	lea    rdi,[rip+0x3048]        # 4053e8 <_IO_stdin_used@@Base+0x3e8>
  4023a0:	mov    edx,0x96
  4023a5:	call   401090 <__assert_fail@plt>
  4023aa:	nop    WORD PTR [rax+rax*1+0x0]
  4023b0:	movzx  edx,WORD PTR [r10+0x28]
  4023b5:	test   dx,dx
  4023b8:	je     40238b <verify_monster@@Base+0x3eb>
  4023ba:	movabs rcx,0x6e0f80cdf27b9181
  4023c4:	cmp    QWORD PTR [r8+rdx*1],rcx
  4023c8:	jne    40238b <verify_monster@@Base+0x3eb>
  4023ca:	cmp    r9w,0x2b
  4023cf:	ja     4023f0 <verify_monster@@Base+0x450>
  4023d1:	lea    rcx,[rip+0x3478]        # 405850 <_IO_stdin_used@@Base+0x850>
  4023d8:	lea    rsi,[rip+0x2f29]        # 405308 <_IO_stdin_used@@Base+0x308>
  4023df:	lea    rdi,[rip+0x3042]        # 405428 <_IO_stdin_used@@Base+0x428>
  4023e6:	mov    edx,0x97
  4023eb:	call   401090 <__assert_fail@plt>
  4023f0:	movzx  edx,WORD PTR [r10+0x2a]
  4023f5:	test   dx,dx
  4023f8:	je     4023d1 <verify_monster@@Base+0x431>
  4023fa:	cmp    QWORD PTR [r8+rdx*1],rcx
  4023fe:	jne    4023d1 <verify_monster@@Base+0x431>
  402400:	cmp    r9w,0x2d
  402405:	ja     402430 <verify_monster@@Base+0x490>
  402407:	lea    rcx,[rip+0x3442]        # 405850 <_IO_stdin_used@@Base+0x850>
  40240e:	lea    rsi,[rip+0x2ef3]        # 405308 <_IO_stdin_used@@Base+0x308>
  402415:	lea    rdi,[rip+0x304c]        # 405468 <_IO_stdin_used@@Base+0x468>
  40241c:	mov    edx,0x98
  402421:	call   401090 <__assert_fail@plt>
  402426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402430:	movzx  edx,WORD PTR [r10+0x2c]
  402435:	test   dx,dx
  402438:	je     402407 <verify_monster@@Base+0x467>
  40243a:	cmp    DWORD PTR [r8+rdx*1],0x8e81a471
  402442:	jne    402407 <verify_monster@@Base+0x467>
  402444:	cmp    r9w,0x2f
  402449:	ja     402470 <verify_monster@@Base+0x4d0>
  40244b:	lea    rcx,[rip+0x33fe]        # 405850 <_IO_stdin_used@@Base+0x850>
  402452:	lea    rsi,[rip+0x2eaf]        # 405308 <_IO_stdin_used@@Base+0x308>
  402459:	lea    rdi,[rip+0x3040]        # 4054a0 <_IO_stdin_used@@Base+0x4a0>
  402460:	mov    edx,0x99
  402465:	call   401090 <__assert_fail@plt>
  40246a:	nop    WORD PTR [rax+rax*1+0x0]
  402470:	movzx  edx,WORD PTR [r10+0x2e]
  402475:	test   dx,dx
  402478:	je     40244b <verify_monster@@Base+0x4ab>
  40247a:	cmp    DWORD PTR [r8+rdx*1],0x8e81a471
  402482:	jne    40244b <verify_monster@@Base+0x4ab>
  402484:	cmp    r9w,0x31
  402489:	ja     4024b0 <verify_monster@@Base+0x510>
  40248b:	lea    rcx,[rip+0x33be]        # 405850 <_IO_stdin_used@@Base+0x850>
  402492:	lea    rsi,[rip+0x2e6f]        # 405308 <_IO_stdin_used@@Base+0x308>
  402499:	lea    rdi,[rip+0x3038]        # 4054d8 <_IO_stdin_used@@Base+0x4d8>
  4024a0:	mov    edx,0x9a
  4024a5:	call   401090 <__assert_fail@plt>
  4024aa:	nop    WORD PTR [rax+rax*1+0x0]
  4024b0:	movzx  edx,WORD PTR [r10+0x30]
  4024b5:	test   dx,dx
  4024b8:	je     40248b <verify_monster@@Base+0x4eb>
  4024ba:	movabs rcx,0x43f948dcc767ddf1
  4024c4:	cmp    QWORD PTR [r8+rdx*1],rcx
  4024c8:	jne    40248b <verify_monster@@Base+0x4eb>
  4024ca:	cmp    r9w,0x33
  4024cf:	ja     4024f0 <verify_monster@@Base+0x550>
  4024d1:	lea    rcx,[rip+0x3378]        # 405850 <_IO_stdin_used@@Base+0x850>
  4024d8:	lea    rsi,[rip+0x2e29]        # 405308 <_IO_stdin_used@@Base+0x308>
  4024df:	lea    rdi,[rip+0x3032]        # 405518 <_IO_stdin_used@@Base+0x518>
  4024e6:	mov    edx,0x9b
  4024eb:	call   401090 <__assert_fail@plt>
  4024f0:	movzx  edx,WORD PTR [r10+0x32]
  4024f5:	test   dx,dx
  4024f8:	je     4024d1 <verify_monster@@Base+0x531>
  4024fa:	cmp    QWORD PTR [r8+rdx*1],rcx
  4024fe:	jne    4024d1 <verify_monster@@Base+0x531>
  402500:	add    rsp,0x8
  402504:	ret    
  402505:	nop    DWORD PTR [rax]
  402508:	lea    rsi,[rip+0x31b6]        # 4056c5 <_IO_stdin_used@@Base+0x6c5>
  40250f:	mov    edi,0x1
  402514:	xor    eax,eax
  402516:	call   4010e0 <__printf_chk@plt>
  40251b:	mov    eax,0xffffffff
  402520:	jmp    401fca <verify_monster@@Base+0x2a>
  402525:	nop    DWORD PTR [rax]
  402528:	lea    rsi,[rip+0x3165]        # 405694 <_IO_stdin_used@@Base+0x694>
  40252f:	mov    edi,0x1
  402534:	xor    eax,eax
  402536:	call   4010e0 <__printf_chk@plt>
  40253b:	mov    eax,0xffffffff
  402540:	jmp    401fca <verify_monster@@Base+0x2a>
  402545:	lea    rsi,[rip+0x31bf]        # 40570b <_IO_stdin_used@@Base+0x70b>
  40254c:	mov    edi,0x1
  402551:	xor    eax,eax
  402553:	call   4010e0 <__printf_chk@plt>
  402558:	mov    eax,0xffffffff
  40255d:	jmp    401fca <verify_monster@@Base+0x2a>
  402562:	nop    WORD PTR [rax+rax*1+0x0]
  402568:	lea    rsi,[rip+0x30d0]        # 40563f <_IO_stdin_used@@Base+0x63f>
  40256f:	mov    edi,0x1
  402574:	xor    eax,eax
  402576:	call   4010e0 <__printf_chk@plt>
  40257b:	mov    eax,0xffffffff
  402580:	jmp    401fca <verify_monster@@Base+0x2a>
  402585:	lea    rsi,[rip+0x320b]        # 405797 <_IO_stdin_used@@Base+0x797>
  40258c:	mov    edi,0x1
  402591:	xor    eax,eax
  402593:	call   4010e0 <__printf_chk@plt>
  402598:	mov    eax,0xffffffff
  40259d:	jmp    401fca <verify_monster@@Base+0x2a>
  4025a2:	nop    WORD PTR [rax+rax*1+0x0]
  4025a8:	lea    rsi,[rip+0x30bf]        # 40566e <_IO_stdin_used@@Base+0x66e>
  4025af:	mov    edi,0x1
  4025b4:	xor    eax,eax
  4025b6:	call   4010e0 <__printf_chk@plt>
  4025bb:	mov    eax,0xffffffff
  4025c0:	jmp    401fca <verify_monster@@Base+0x2a>
  4025c5:	lea    rsi,[rip+0x2c94]        # 405260 <_IO_stdin_used@@Base+0x260>
  4025cc:	mov    edi,0x1
  4025d1:	xor    eax,eax
  4025d3:	call   4010e0 <__printf_chk@plt>
  4025d8:	mov    eax,0xffffffff
  4025dd:	jmp    401fca <verify_monster@@Base+0x2a>
  4025e2:	lea    rsi,[rip+0x2ccf]        # 4052b8 <_IO_stdin_used@@Base+0x2b8>
  4025e9:	mov    edi,0x1
  4025ee:	xor    eax,eax
  4025f0:	call   4010e0 <__printf_chk@plt>
  4025f5:	mov    eax,0xffffffff
  4025fa:	jmp    401fca <verify_monster@@Base+0x2a>
  4025ff:	lea    rsi,[rip+0x2b92]        # 405198 <_IO_stdin_used@@Base+0x198>
  402606:	mov    edi,0x1
  40260b:	xor    eax,eax
  40260d:	call   4010e0 <__printf_chk@plt>
  402612:	mov    eax,0xffffffff
  402617:	jmp    401fca <verify_monster@@Base+0x2a>
  40261c:	nop    DWORD PTR [rax+0x0]
  402620:	lea    rsi,[rip+0x2b99]        # 4051c0 <_IO_stdin_used@@Base+0x1c0>
  402627:	mov    edi,0x1
  40262c:	xor    eax,eax
  40262e:	call   4010e0 <__printf_chk@plt>
  402633:	mov    eax,0xffffffff
  402638:	jmp    401fca <verify_monster@@Base+0x2a>
  40263d:	nop    DWORD PTR [rax]
  402640:	lea    rsi,[rip+0x2ba1]        # 4051e8 <_IO_stdin_used@@Base+0x1e8>
  402647:	mov    edi,0x1
  40264c:	xor    eax,eax
  40264e:	call   4010e0 <__printf_chk@plt>
  402653:	mov    eax,0xffffffff
  402658:	jmp    401fca <verify_monster@@Base+0x2a>
  40265d:	nop    DWORD PTR [rax]
  402660:	lea    rsi,[rip+0x2ba9]        # 405210 <_IO_stdin_used@@Base+0x210>
  402667:	mov    edi,0x1
  40266c:	xor    eax,eax
  40266e:	call   4010e0 <__printf_chk@plt>
  402673:	mov    eax,0xffffffff
  402678:	jmp    401fca <verify_monster@@Base+0x2a>
  40267d:	nop    DWORD PTR [rax]
  402680:	lea    rsi,[rip+0x2fa3]        # 40562a <_IO_stdin_used@@Base+0x62a>
  402687:	mov    edi,0x1
  40268c:	xor    eax,eax
  40268e:	call   4010e0 <__printf_chk@plt>
  402693:	mov    eax,0xffffffff
  402698:	jmp    401fca <verify_monster@@Base+0x2a>
  40269d:	lea    rsi,[rip+0x2c3c]        # 4052e0 <_IO_stdin_used@@Base+0x2e0>
  4026a4:	mov    edi,0x1
  4026a9:	xor    eax,eax
  4026ab:	call   4010e0 <__printf_chk@plt>
  4026b0:	mov    eax,0xffffffff
  4026b5:	jmp    401fca <verify_monster@@Base+0x2a>
  4026ba:	lea    rsi,[rip+0x3078]        # 405739 <_IO_stdin_used@@Base+0x739>
  4026c1:	mov    edi,0x1
  4026c6:	xor    eax,eax
  4026c8:	call   4010e0 <__printf_chk@plt>
  4026cd:	mov    eax,0xffffffff
  4026d2:	jmp    401fca <verify_monster@@Base+0x2a>
  4026d7:	lea    rsi,[rip+0x3074]        # 405752 <_IO_stdin_used@@Base+0x752>
  4026de:	mov    edi,0x1
  4026e3:	xor    eax,eax
  4026e5:	call   4010e0 <__printf_chk@plt>
  4026ea:	mov    eax,0xffffffff
  4026ef:	jmp    401fca <verify_monster@@Base+0x2a>
  4026f4:	lea    rsi,[rip+0x306e]        # 405769 <_IO_stdin_used@@Base+0x769>
  4026fb:	mov    edi,0x1
  402700:	xor    eax,eax
  402702:	call   4010e0 <__printf_chk@plt>
  402707:	mov    eax,0xffffffff
  40270c:	jmp    401fca <verify_monster@@Base+0x2a>
  402711:	nop    DWORD PTR [rax+0x0]
  402718:	lea    rsi,[rip+0x3061]        # 405780 <_IO_stdin_used@@Base+0x780>
  40271f:	mov    edi,0x1
  402724:	xor    eax,eax
  402726:	call   4010e0 <__printf_chk@plt>
  40272b:	mov    eax,0xffffffff
  402730:	jmp    401fca <verify_monster@@Base+0x2a>
  402735:	lea    rsi,[rip+0x2b54]        # 405290 <_IO_stdin_used@@Base+0x290>
  40273c:	mov    edi,0x1
  402741:	xor    eax,eax
  402743:	call   4010e0 <__printf_chk@plt>
  402748:	mov    eax,0xffffffff
  40274d:	jmp    401fca <verify_monster@@Base+0x2a>
  402752:	lea    rsi,[rip+0x2ebd]        # 405616 <_IO_stdin_used@@Base+0x616>
  402759:	mov    edi,0x1
  40275e:	xor    eax,eax
  402760:	call   4010e0 <__printf_chk@plt>
  402765:	mov    eax,0xffffffff
  40276a:	jmp    401fca <verify_monster@@Base+0x2a>
  40276f:	lea    rsi,[rip+0x2fa6]        # 40571c <_IO_stdin_used@@Base+0x71c>
  402776:	mov    edi,0x1
  40277b:	xor    eax,eax
  40277d:	call   4010e0 <__printf_chk@plt>
  402782:	mov    eax,0xffffffff
  402787:	jmp    401fca <verify_monster@@Base+0x2a>
  40278c:	nop    DWORD PTR [rax+0x0]
  402790:	mov    eax,0x4
  402795:	lea    esi,[rax+rsi*2]
  402798:	cmp    si,WORD PTR [rdi+0x1e]
  40279c:	jae    4027c8 <verify_monster@@Base+0x828>
  40279e:	mov    rax,QWORD PTR [rdi+0x10]
  4027a2:	movzx  esi,si
  4027a5:	movzx  esi,WORD PTR [rax+rsi*1]
  4027a9:	test   esi,esi
  4027ab:	je     4027c8 <verify_monster@@Base+0x828>
  4027ad:	movzx  edx,WORD PTR [rdi+0x1c]
  4027b1:	lea    r8d,[rsi+0x4]
  4027b5:	mov    eax,0xd
  4027ba:	cmp    r8d,edx
  4027bd:	jbe    4027e0 <verify_monster@@Base+0x840>
  4027bf:	repz ret 
  4027c1:	nop    DWORD PTR [rax+0x0]
  4027c8:	xor    eax,eax
  4027ca:	test   edx,edx
  4027cc:	mov    DWORD PTR [rcx],0x0
  4027d2:	setne  al
  4027d5:	shl    eax,0x2
  4027d8:	ret    
  4027d9:	nop    DWORD PTR [rax+0x0]
  4027e0:	add    esi,DWORD PTR [rdi+0x18]
  4027e3:	mov    eax,0xc
  4027e8:	test   sil,0x3
  4027ec:	jne    4027bf <verify_monster@@Base+0x81f>
  4027ee:	mov    DWORD PTR [rcx],esi
  4027f0:	xor    eax,eax
  4027f2:	ret    
  4027f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4027fe:	xchg   ax,ax

0000000000402800 <flatcc_verify_error_string@@Base>:
  402800:	cmp    edi,0x24
  402803:	ja     402a70 <flatcc_verify_error_string@@Base+0x270>
  402809:	lea    rdx,[rip+0x3500]        # 405d10 <_IO_stdin_used@@Base+0xd10>
  402810:	mov    edi,edi
  402812:	movsxd rax,DWORD PTR [rdx+rdi*4]
  402816:	add    rax,rdx
  402819:	jmp    rax
  40281b:	nop    DWORD PTR [rax+rax*1+0x0]
  402820:	lea    rax,[rip+0x3051]        # 405878 <_IO_stdin_used@@Base+0x878>
  402827:	ret    
  402828:	nop    DWORD PTR [rax+rax*1+0x0]
  402830:	lea    rax,[rip+0x31dd]        # 405a14 <_IO_stdin_used@@Base+0xa14>
  402837:	ret    
  402838:	nop    DWORD PTR [rax+rax*1+0x0]
  402840:	lea    rax,[rip+0x34a1]        # 405ce8 <_IO_stdin_used@@Base+0xce8>
  402847:	ret    
  402848:	nop    DWORD PTR [rax+rax*1+0x0]
  402850:	lea    rax,[rip+0x3459]        # 405cb0 <_IO_stdin_used@@Base+0xcb0>
  402857:	ret    
  402858:	nop    DWORD PTR [rax+rax*1+0x0]
  402860:	lea    rax,[rip+0x3421]        # 405c88 <_IO_stdin_used@@Base+0xc88>
  402867:	ret    
  402868:	nop    DWORD PTR [rax+rax*1+0x0]
  402870:	lea    rax,[rip+0x33e9]        # 405c60 <_IO_stdin_used@@Base+0xc60>
  402877:	ret    
  402878:	nop    DWORD PTR [rax+rax*1+0x0]
  402880:	lea    rax,[rip+0x3178]        # 4059ff <_IO_stdin_used@@Base+0x9ff>
  402887:	ret    
  402888:	nop    DWORD PTR [rax+rax*1+0x0]
  402890:	lea    rax,[rip+0x33a1]        # 405c38 <_IO_stdin_used@@Base+0xc38>
  402897:	ret    
  402898:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	lea    rax,[rip+0x3369]        # 405c10 <_IO_stdin_used@@Base+0xc10>
  4028a7:	ret    
  4028a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	lea    rax,[rip+0x3130]        # 4059e7 <_IO_stdin_used@@Base+0x9e7>
  4028b7:	ret    
  4028b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	lea    rax,[rip+0x3105]        # 4059cc <_IO_stdin_used@@Base+0x9cc>
  4028c7:	ret    
  4028c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	lea    rax,[rip+0x30e1]        # 4059b8 <_IO_stdin_used@@Base+0x9b8>
  4028d7:	ret    
  4028d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	lea    rax,[rip+0x32f9]        # 405be0 <_IO_stdin_used@@Base+0xbe0>
  4028e7:	ret    
  4028e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	lea    rax,[rip+0x32b9]        # 405bb0 <_IO_stdin_used@@Base+0xbb0>
  4028f7:	ret    
  4028f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	lea    rax,[rip+0x3279]        # 405b80 <_IO_stdin_used@@Base+0xb80>
  402907:	ret    
  402908:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	lea    rax,[rip+0x3231]        # 405b48 <_IO_stdin_used@@Base+0xb48>
  402917:	ret    
  402918:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	lea    rax,[rip+0x31f1]        # 405b18 <_IO_stdin_used@@Base+0xb18>
  402927:	ret    
  402928:	nop    DWORD PTR [rax+rax*1+0x0]
  402930:	lea    rax,[rip+0x3069]        # 4059a0 <_IO_stdin_used@@Base+0x9a0>
  402937:	ret    
  402938:	nop    DWORD PTR [rax+rax*1+0x0]
  402940:	lea    rax,[rip+0x31a9]        # 405af0 <_IO_stdin_used@@Base+0xaf0>
  402947:	ret    
  402948:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	lea    rax,[rip+0x3035]        # 40598c <_IO_stdin_used@@Base+0x98c>
  402957:	ret    
  402958:	nop    DWORD PTR [rax+rax*1+0x0]
  402960:	lea    rax,[rip+0x3161]        # 405ac8 <_IO_stdin_used@@Base+0xac8>
  402967:	ret    
  402968:	nop    DWORD PTR [rax+rax*1+0x0]
  402970:	lea    rax,[rip+0x3129]        # 405aa0 <_IO_stdin_used@@Base+0xaa0>
  402977:	ret    
  402978:	nop    DWORD PTR [rax+rax*1+0x0]
  402980:	lea    rax,[rip+0x30f1]        # 405a78 <_IO_stdin_used@@Base+0xa78>
  402987:	ret    
  402988:	nop    DWORD PTR [rax+rax*1+0x0]
  402990:	lea    rax,[rip+0x2fdb]        # 405972 <_IO_stdin_used@@Base+0x972>
  402997:	ret    
  402998:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	lea    rax,[rip+0x2fb2]        # 405959 <_IO_stdin_used@@Base+0x959>
  4029a7:	ret    
  4029a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029b0:	lea    rax,[rip+0x2f8a]        # 405941 <_IO_stdin_used@@Base+0x941>
  4029b7:	ret    
  4029b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029c0:	lea    rax,[rip+0x2f69]        # 405930 <_IO_stdin_used@@Base+0x930>
  4029c7:	ret    
  4029c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	lea    rax,[rip+0x2f44]        # 40591b <_IO_stdin_used@@Base+0x91b>
  4029d7:	ret    
  4029d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	lea    rax,[rip+0x2f20]        # 405907 <_IO_stdin_used@@Base+0x907>
  4029e7:	ret    
  4029e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	lea    rax,[rip+0x2efc]        # 4058f3 <_IO_stdin_used@@Base+0x8f3>
  4029f7:	ret    
  4029f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402a00:	lea    rax,[rip+0x2ed1]        # 4058d8 <_IO_stdin_used@@Base+0x8d8>
  402a07:	ret    
  402a08:	nop    DWORD PTR [rax+rax*1+0x0]
  402a10:	lea    rax,[rip+0x3041]        # 405a58 <_IO_stdin_used@@Base+0xa58>
  402a17:	ret    
  402a18:	nop    DWORD PTR [rax+rax*1+0x0]
  402a20:	lea    rax,[rip+0x3009]        # 405a30 <_IO_stdin_used@@Base+0xa30>
  402a27:	ret    
  402a28:	nop    DWORD PTR [rax+rax*1+0x0]
  402a30:	lea    rax,[rip+0x2e8a]        # 4058c1 <_IO_stdin_used@@Base+0x8c1>
  402a37:	ret    
  402a38:	nop    DWORD PTR [rax+rax*1+0x0]
  402a40:	lea    rax,[rip+0x2e60]        # 4058a7 <_IO_stdin_used@@Base+0x8a7>
  402a47:	ret    
  402a48:	nop    DWORD PTR [rax+rax*1+0x0]
  402a50:	lea    rax,[rip+0x2e3c]        # 405893 <_IO_stdin_used@@Base+0x893>
  402a57:	ret    
  402a58:	nop    DWORD PTR [rax+rax*1+0x0]
  402a60:	lea    rax,[rip+0x2e14]        # 40587b <_IO_stdin_used@@Base+0x87b>
  402a67:	ret    
  402a68:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	lea    rax,[rip+0x2fab]        # 405a22 <_IO_stdin_used@@Base+0xa22>
  402a77:	ret    
  402a78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a80 <flatcc_verify_field@@Base>:
  402a80:	mov    eax,0x4
  402a85:	lea    esi,[rax+rsi*2]
  402a88:	xor    eax,eax
  402a8a:	cmp    si,WORD PTR [rdi+0x1e]
  402a8e:	jae    402ab9 <flatcc_verify_field@@Base+0x39>
  402a90:	mov    r8,QWORD PTR [rdi+0x10]
  402a94:	movzx  esi,si
  402a97:	movzx  r8d,WORD PTR [r8+rsi*1]
  402a9c:	test   r8d,r8d
  402a9f:	je     402ab9 <flatcc_verify_field@@Base+0x39>
  402aa1:	movzx  r9d,WORD PTR [rdi+0x1c]
  402aa6:	add    edx,r8d
  402aa9:	movzx  ecx,cx
  402aac:	mov    rsi,QWORD PTR [rdi]
  402aaf:	mov    eax,0xd
  402ab4:	cmp    edx,r9d
  402ab7:	jbe    402ac0 <flatcc_verify_field@@Base+0x40>
  402ab9:	repz ret 
  402abb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ac0:	add    esi,DWORD PTR [rdi+0x18]
  402ac3:	sub    ecx,0x1
  402ac6:	add    esi,r8d
  402ac9:	and    ecx,esi
  402acb:	cmp    ecx,0x1
  402ace:	sbb    eax,eax
  402ad0:	not    eax
  402ad2:	and    eax,0xc
  402ad5:	ret    
  402ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402ae0 <flatcc_verify_string_field@@Base>:
  402ae0:	sub    rsp,0x18
  402ae4:	movzx  esi,si
  402ae7:	mov    r9,rdi
  402aea:	lea    rcx,[rsp+0x4]
  402aef:	mov    rax,QWORD PTR fs:0x28
  402af8:	mov    QWORD PTR [rsp+0x8],rax
  402afd:	xor    eax,eax
  402aff:	call   402790 <verify_monster@@Base+0x7f0>
  402b04:	test   eax,eax
  402b06:	jne    402b50 <flatcc_verify_string_field@@Base+0x70>
  402b08:	mov    edx,DWORD PTR [rsp+0x4]
  402b0c:	test   edx,edx
  402b0e:	je     402b50 <flatcc_verify_string_field@@Base+0x70>
  402b10:	mov    rsi,QWORD PTR [rdi]
  402b13:	mov    ecx,edx
  402b15:	mov    edi,DWORD PTR [rsi+rcx*1]
  402b18:	add    edi,edx
  402b1a:	cmp    edx,edi
  402b1c:	mov    ecx,edi
  402b1e:	jae    402b68 <flatcc_verify_string_field@@Base+0x88>
  402b20:	mov    r8d,DWORD PTR [r9+0x8]
  402b24:	mov    edi,edi
  402b26:	lea    r9,[rdi+0x4]
  402b2a:	cmp    r9,r8
  402b2d:	mov    rdx,r8
  402b30:	ja     402b68 <flatcc_verify_string_field@@Base+0x88>
  402b32:	test   cl,0x3
  402b35:	jne    402b68 <flatcc_verify_string_field@@Base+0x88>
  402b37:	mov    edi,DWORD PTR [rsi+rdi*1]
  402b3a:	add    ecx,0x4
  402b3d:	sub    edx,ecx
  402b3f:	lea    r8d,[rdi+0x1]
  402b43:	cmp    edx,r8d
  402b46:	jae    402b70 <flatcc_verify_string_field@@Base+0x90>
  402b48:	mov    eax,0x8
  402b4d:	nop    DWORD PTR [rax]
  402b50:	mov    rdi,QWORD PTR [rsp+0x8]
  402b55:	xor    rdi,QWORD PTR fs:0x28
  402b5e:	jne    402b81 <flatcc_verify_string_field@@Base+0xa1>
  402b60:	add    rsp,0x18
  402b64:	ret    
  402b65:	nop    DWORD PTR [rax]
  402b68:	mov    eax,0x11
  402b6d:	jmp    402b50 <flatcc_verify_string_field@@Base+0x70>
  402b6f:	nop
  402b70:	add    rcx,rsi
  402b73:	mov    edx,0x7
  402b78:	cmp    BYTE PTR [rcx+rdi*1],0x0
  402b7c:	cmovne eax,edx
  402b7f:	jmp    402b50 <flatcc_verify_string_field@@Base+0x70>
  402b81:	call   401070 <__stack_chk_fail@plt>
  402b86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402b90 <flatcc_verify_vector_field@@Base>:
  402b90:	push   rbx
  402b91:	mov    rbx,rcx
  402b94:	movzx  esi,si
  402b97:	mov    r10,rdi
  402b9a:	mov    r11d,r8d
  402b9d:	sub    rsp,0x10
  402ba1:	lea    rcx,[rsp+0x4]
  402ba6:	mov    rax,QWORD PTR fs:0x28
  402baf:	mov    QWORD PTR [rsp+0x8],rax
  402bb4:	xor    eax,eax
  402bb6:	call   402790 <verify_monster@@Base+0x7f0>
  402bbb:	test   eax,eax
  402bbd:	jne    402c20 <flatcc_verify_vector_field@@Base+0x90>
  402bbf:	mov    edx,DWORD PTR [rsp+0x4]
  402bc3:	test   edx,edx
  402bc5:	je     402c20 <flatcc_verify_vector_field@@Base+0x90>
  402bc7:	mov    rsi,QWORD PTR [rdi]
  402bca:	mov    ecx,edx
  402bcc:	mov    edi,DWORD PTR [rsi+rcx*1]
  402bcf:	add    edi,edx
  402bd1:	cmp    edx,edi
  402bd3:	mov    ecx,edi
  402bd5:	jae    402c40 <flatcc_verify_vector_field@@Base+0xb0>
  402bd7:	mov    edx,DWORD PTR [r10+0x8]
  402bdb:	mov    r10d,ecx
  402bde:	lea    r8,[r10+0x4]
  402be2:	cmp    r8,rdx
  402be5:	mov    rdi,rdx
  402be8:	ja     402c40 <flatcc_verify_vector_field@@Base+0xb0>
  402bea:	cmp    r11w,0x4
  402bef:	mov    edx,0x4
  402bf4:	cmovae edx,r11d
  402bf8:	movzx  edx,dx
  402bfb:	sub    edx,0x1
  402bfe:	or     edx,0x3
  402c01:	movsxd rdx,edx
  402c04:	test   rdx,r8
  402c07:	jne    402c40 <flatcc_verify_vector_field@@Base+0xb0>
  402c09:	mov    edx,DWORD PTR [rsi+r10*1]
  402c0d:	cmp    edx,r9d
  402c10:	jbe    402c50 <flatcc_verify_vector_field@@Base+0xc0>
  402c12:	mov    eax,0x19
  402c17:	nop    WORD PTR [rax+rax*1+0x0]
  402c20:	mov    rbx,QWORD PTR [rsp+0x8]
  402c25:	xor    rbx,QWORD PTR fs:0x28
  402c2e:	jne    402c64 <flatcc_verify_vector_field@@Base+0xd4>
  402c30:	add    rsp,0x10
  402c34:	pop    rbx
  402c35:	ret    
  402c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c40:	mov    eax,0x10
  402c45:	jmp    402c20 <flatcc_verify_vector_field@@Base+0x90>
  402c47:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	imul   ebx,edx
  402c53:	sub    edi,0x4
  402c56:	mov    edx,0x1a
  402c5b:	sub    edi,ecx
  402c5d:	cmp    edi,ebx
  402c5f:	cmovb  eax,edx
  402c62:	jmp    402c20 <flatcc_verify_vector_field@@Base+0x90>
  402c64:	call   401070 <__stack_chk_fail@plt>
  402c69:	nop    DWORD PTR [rax+0x0]

0000000000402c70 <flatcc_verify_string_vector_field@@Base>:
  402c70:	push   rbp
  402c71:	push   rbx
  402c72:	movzx  esi,si
  402c75:	mov    r9,rdi
  402c78:	sub    rsp,0x18
  402c7c:	lea    rcx,[rsp+0x4]
  402c81:	mov    rax,QWORD PTR fs:0x28
  402c8a:	mov    QWORD PTR [rsp+0x8],rax
  402c8f:	xor    eax,eax
  402c91:	call   402790 <verify_monster@@Base+0x7f0>
  402c96:	test   eax,eax
  402c98:	jne    402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402c9a:	mov    edx,DWORD PTR [rsp+0x4]
  402c9e:	test   edx,edx
  402ca0:	je     402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402ca2:	mov    rsi,QWORD PTR [rdi]
  402ca5:	mov    ecx,edx
  402ca7:	mov    edi,DWORD PTR [rsi+rcx*1]
  402caa:	add    edi,edx
  402cac:	cmp    edx,edi
  402cae:	mov    ecx,edi
  402cb0:	jae    402d10 <flatcc_verify_string_vector_field@@Base+0xa0>
  402cb2:	mov    r10d,DWORD PTR [r9+0x8]
  402cb6:	mov    r9d,edi
  402cb9:	lea    rbx,[r9+0x4]
  402cbd:	cmp    rbx,r10
  402cc0:	mov    r11,r10
  402cc3:	ja     402d10 <flatcc_verify_string_vector_field@@Base+0xa0>
  402cc5:	test   bl,0x3
  402cc8:	jne    402cd6 <flatcc_verify_string_vector_field@@Base+0x66>
  402cca:	mov    edi,DWORD PTR [rsi+r9*1]
  402cce:	cmp    edi,0x3fffffff
  402cd4:	jbe    402d20 <flatcc_verify_string_vector_field@@Base+0xb0>
  402cd6:	and    ebx,0x3
  402cd9:	jne    402d10 <flatcc_verify_string_vector_field@@Base+0xa0>
  402cdb:	mov    edx,DWORD PTR [rsi+r9*1]
  402cdf:	cmp    edx,0x3fffffff
  402ce5:	jbe    402d90 <flatcc_verify_string_vector_field@@Base+0x120>
  402ceb:	mov    eax,0x19
  402cf0:	mov    rdi,QWORD PTR [rsp+0x8]
  402cf5:	xor    rdi,QWORD PTR fs:0x28
  402cfe:	jne    402e0b <flatcc_verify_string_vector_field@@Base+0x19b>
  402d04:	add    rsp,0x18
  402d08:	pop    rbx
  402d09:	pop    rbp
  402d0a:	ret    
  402d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d10:	mov    eax,0x10
  402d15:	jmp    402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402d17:	nop    WORD PTR [rax+rax*1+0x0]
  402d20:	lea    edx,[rcx+0x4]
  402d23:	lea    r8d,[rdi*4+0x0]
  402d2b:	mov    ebp,r11d
  402d2e:	sub    ebp,edx
  402d30:	cmp    ebp,r8d
  402d33:	jb     402cd6 <flatcc_verify_string_vector_field@@Base+0x66>
  402d35:	test   edi,edi
  402d37:	je     402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402d39:	mov    ecx,edx
  402d3b:	mov    ebx,DWORD PTR [rsi+rcx*1]
  402d3e:	add    ebx,edx
  402d40:	cmp    edx,ebx
  402d42:	mov    ecx,ebx
  402d44:	jae    402d80 <flatcc_verify_string_vector_field@@Base+0x110>
  402d46:	mov    edi,ebx
  402d48:	lea    r9,[rdi+0x4]
  402d4c:	cmp    r10,r9
  402d4f:	jb     402d80 <flatcc_verify_string_vector_field@@Base+0x110>
  402d51:	test   bl,0x3
  402d54:	jne    402d80 <flatcc_verify_string_vector_field@@Base+0x110>
  402d56:	mov    edi,DWORD PTR [rsi+rdi*1]
  402d59:	add    ecx,0x4
  402d5c:	mov    ebx,r11d
  402d5f:	sub    ebx,ecx
  402d61:	lea    r9d,[rdi+0x1]
  402d65:	cmp    ebx,r9d
  402d68:	jae    402daa <flatcc_verify_string_vector_field@@Base+0x13a>
  402d6a:	nop    WORD PTR [rax+rax*1+0x0]
  402d70:	mov    eax,0x8
  402d75:	jmp    402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402d7a:	nop    WORD PTR [rax+rax*1+0x0]
  402d80:	mov    eax,0x11
  402d85:	jmp    402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402d8a:	nop    WORD PTR [rax+rax*1+0x0]
  402d90:	sub    r11d,0x4
  402d94:	shl    edx,0x2
  402d97:	sub    r11d,ecx
  402d9a:	cmp    r11d,edx
  402d9d:	mov    edx,0x1a
  402da2:	cmovb  eax,edx
  402da5:	jmp    402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402daa:	add    r8d,edx
  402dad:	nop    DWORD PTR [rax]
  402db0:	add    rcx,rsi
  402db3:	cmp    BYTE PTR [rcx+rdi*1],0x0
  402db7:	je     402dc8 <flatcc_verify_string_vector_field@@Base+0x158>
  402db9:	mov    eax,0x7
  402dbe:	jmp    402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402dc3:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc8:	add    edx,0x4
  402dcb:	cmp    r8d,edx
  402dce:	je     402cf0 <flatcc_verify_string_vector_field@@Base+0x80>
  402dd4:	mov    ecx,edx
  402dd6:	mov    ebx,DWORD PTR [rsi+rcx*1]
  402dd9:	add    ebx,edx
  402ddb:	cmp    edx,ebx
  402ddd:	mov    ecx,ebx
  402ddf:	jae    402d80 <flatcc_verify_string_vector_field@@Base+0x110>
  402de1:	mov    edi,ebx
  402de3:	lea    r9,[rdi+0x4]
  402de7:	cmp    r10,r9
  402dea:	jb     402d80 <flatcc_verify_string_vector_field@@Base+0x110>
  402dec:	test   bl,0x3
  402def:	jne    402d80 <flatcc_verify_string_vector_field@@Base+0x110>
  402df1:	mov    edi,DWORD PTR [rsi+rdi*1]
  402df4:	add    ecx,0x4
  402df7:	mov    ebx,r11d
  402dfa:	sub    ebx,ecx
  402dfc:	lea    r9d,[rdi+0x1]
  402e00:	cmp    ebx,r9d
  402e03:	jb     402d70 <flatcc_verify_string_vector_field@@Base+0x100>
  402e09:	jmp    402db0 <flatcc_verify_string_vector_field@@Base+0x140>
  402e0b:	call   401070 <__stack_chk_fail@plt>

0000000000402e10 <flatcc_verify_table_field@@Base>:
  402e10:	sub    rsp,0x48
  402e14:	mov    r10,rcx
  402e17:	movzx  esi,si
  402e1a:	lea    rcx,[rsp+0xc]
  402e1f:	mov    r9,rdi
  402e22:	mov    rax,QWORD PTR fs:0x28
  402e2b:	mov    QWORD PTR [rsp+0x38],rax
  402e30:	xor    eax,eax
  402e32:	call   402790 <verify_monster@@Base+0x7f0>
  402e37:	test   eax,eax
  402e39:	jne    402e43 <flatcc_verify_table_field@@Base+0x33>
  402e3b:	mov    edx,DWORD PTR [rsp+0xc]
  402e3f:	test   edx,edx
  402e41:	jne    402e60 <flatcc_verify_table_field@@Base+0x50>
  402e43:	mov    rdi,QWORD PTR [rsp+0x38]
  402e48:	xor    rdi,QWORD PTR fs:0x28
  402e51:	jne    402f52 <flatcc_verify_table_field@@Base+0x142>
  402e57:	add    rsp,0x48
  402e5b:	ret    
  402e5c:	nop    DWORD PTR [rax+0x0]
  402e60:	mov    ecx,DWORD PTR [r9+0xc]
  402e64:	mov    rdi,QWORD PTR [rdi]
  402e67:	mov    eax,edx
  402e69:	mov    r8d,DWORD PTR [r9+0x8]
  402e6d:	sub    ecx,0x1
  402e70:	mov    esi,DWORD PTR [rdi+rax*1]
  402e73:	mov    eax,0x3
  402e78:	test   ecx,ecx
  402e7a:	mov    DWORD PTR [rsp+0x1c],ecx
  402e7e:	je     402e43 <flatcc_verify_table_field@@Base+0x33>
  402e80:	add    esi,edx
  402e82:	mov    eax,0xf
  402e87:	cmp    edx,esi
  402e89:	jae    402e43 <flatcc_verify_table_field@@Base+0x33>
  402e8b:	mov    edx,esi
  402e8d:	mov    ecx,r8d
  402e90:	lea    r9,[rdx+0x4]
  402e94:	cmp    r9,rcx
  402e97:	ja     402e43 <flatcc_verify_table_field@@Base+0x33>
  402e99:	test   sil,0x3
  402e9d:	jne    402e43 <flatcc_verify_table_field@@Base+0x33>
  402e9f:	mov    DWORD PTR [rsp+0x28],esi
  402ea3:	mov    eax,esi
  402ea5:	sub    eax,DWORD PTR [rdi+rdx*1]
  402ea8:	mov    edx,eax
  402eaa:	js     402f48 <flatcc_verify_table_field@@Base+0x138>
  402eb0:	test   dl,0x1
  402eb3:	jne    402f48 <flatcc_verify_table_field@@Base+0x138>
  402eb9:	mov    r9d,edx
  402ebc:	mov    eax,0x1b
  402ec1:	lea    r11,[r9+0x2]
  402ec5:	cmp    rcx,r11
  402ec8:	jb     402e43 <flatcc_verify_table_field@@Base+0x33>
  402ece:	add    r9,rdi
  402ed1:	mov    eax,0x1e
  402ed6:	movzx  r11d,WORD PTR [r9]
  402eda:	mov    ecx,r11d
  402edd:	mov    WORD PTR [rsp+0x2e],r11w
  402ee3:	add    r11d,edx
  402ee6:	cmp    r8d,r11d
  402ee9:	jb     402e43 <flatcc_verify_table_field@@Base+0x33>
  402eef:	test   cl,0x1
  402ef2:	jne    402e43 <flatcc_verify_table_field@@Base+0x33>
  402ef8:	cmp    cx,0x3
  402efc:	mov    eax,0x1c
  402f01:	jbe    402e43 <flatcc_verify_table_field@@Base+0x33>
  402f07:	lea    eax,[rdx+0x2]
  402f0a:	mov    ecx,r8d
  402f0d:	sub    ecx,esi
  402f0f:	movzx  edx,WORD PTR [rdi+rax*1]
  402f13:	mov    eax,0x14
  402f18:	cmp    ecx,edx
  402f1a:	mov    WORD PTR [rsp+0x2c],dx
  402f1f:	jb     402e43 <flatcc_verify_table_field@@Base+0x33>
  402f25:	mov    QWORD PTR [rsp+0x10],rdi
  402f2a:	mov    QWORD PTR [rsp+0x20],r9
  402f2f:	lea    rdi,[rsp+0x10]
  402f34:	mov    DWORD PTR [rsp+0x18],r8d
  402f39:	call   r10
  402f3c:	jmp    402e43 <flatcc_verify_table_field@@Base+0x33>
  402f41:	nop    DWORD PTR [rax+0x0]
  402f48:	mov    eax,0x1d
  402f4d:	jmp    402e43 <flatcc_verify_table_field@@Base+0x33>
  402f52:	call   401070 <__stack_chk_fail@plt>
  402f57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402f60 <flatcc_verify_table_vector_field@@Base>:
  402f60:	push   r15
  402f62:	push   r14
  402f64:	movzx  esi,si
  402f67:	push   r13
  402f69:	push   r12
  402f6b:	mov    r12,rcx
  402f6e:	push   rbp
  402f6f:	push   rbx
  402f70:	mov    r9,rdi
  402f73:	sub    rsp,0x68
  402f77:	lea    rcx,[rsp+0x2c]
  402f7c:	mov    rax,QWORD PTR fs:0x28
  402f85:	mov    QWORD PTR [rsp+0x58],rax
  402f8a:	xor    eax,eax
  402f8c:	call   402790 <verify_monster@@Base+0x7f0>
  402f91:	test   eax,eax
  402f93:	mov    ebp,eax
  402f95:	jne    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  402f97:	mov    eax,DWORD PTR [rsp+0x2c]
  402f9b:	test   eax,eax
  402f9d:	jne    402fc8 <flatcc_verify_table_vector_field@@Base+0x68>
  402f9f:	mov    rdi,QWORD PTR [rsp+0x58]
  402fa4:	xor    rdi,QWORD PTR fs:0x28
  402fad:	mov    eax,ebp
  402faf:	jne    403286 <flatcc_verify_table_vector_field@@Base+0x326>
  402fb5:	add    rsp,0x68
  402fb9:	pop    rbx
  402fba:	pop    rbp
  402fbb:	pop    r12
  402fbd:	pop    r13
  402fbf:	pop    r14
  402fc1:	pop    r15
  402fc3:	ret    
  402fc4:	nop    DWORD PTR [rax+0x0]
  402fc8:	mov    r14d,DWORD PTR [rdi+0xc]
  402fcc:	test   r14d,r14d
  402fcf:	jle    403018 <flatcc_verify_table_vector_field@@Base+0xb8>
  402fd1:	mov    r15,QWORD PTR [rdi]
  402fd4:	mov    edx,eax
  402fd6:	mov    edi,DWORD PTR [r15+rdx*1]
  402fda:	add    edi,eax
  402fdc:	cmp    eax,edi
  402fde:	jae    403020 <flatcc_verify_table_vector_field@@Base+0xc0>
  402fe0:	mov    ecx,DWORD PTR [r9+0x8]
  402fe4:	mov    r8d,edi
  402fe7:	lea    r9,[r8+0x4]
  402feb:	cmp    r9,rcx
  402fee:	mov    rsi,rcx
  402ff1:	ja     403020 <flatcc_verify_table_vector_field@@Base+0xc0>
  402ff3:	test   r9b,0x3
  402ff7:	je     403030 <flatcc_verify_table_vector_field@@Base+0xd0>
  402ff9:	and    r9d,0x3
  402ffd:	jne    403020 <flatcc_verify_table_vector_field@@Base+0xc0>
  402fff:	mov    eax,DWORD PTR [r15+r8*1]
  403003:	cmp    eax,0x3fffffff
  403008:	jbe    403265 <flatcc_verify_table_vector_field@@Base+0x305>
  40300e:	mov    ebp,0x19
  403013:	jmp    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403015:	nop    DWORD PTR [rax]
  403018:	mov    ebp,0x3
  40301d:	jmp    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  40301f:	nop
  403020:	mov    ebp,0x10
  403025:	jmp    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  40302a:	nop    WORD PTR [rax+rax*1+0x0]
  403030:	mov    eax,DWORD PTR [r15+r8*1]
  403034:	cmp    eax,0x3fffffff
  403039:	ja     402ff9 <flatcc_verify_table_vector_field@@Base+0x99>
  40303b:	lea    ebx,[rdi+0x4]
  40303e:	lea    edx,[rax*4+0x0]
  403045:	mov    r10d,esi
  403048:	sub    r10d,ebx
  40304b:	cmp    r10d,edx
  40304e:	jb     402ff9 <flatcc_verify_table_vector_field@@Base+0x99>
  403050:	test   eax,eax
  403052:	je     402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403058:	sub    r14d,0x2
  40305c:	mov    r13d,ebx
  40305f:	add    r13,r15
  403062:	test   r14d,r14d
  403065:	mov    eax,DWORD PTR [r13+0x0]
  403069:	mov    DWORD PTR [rsp+0x3c],r14d
  40306e:	je     403018 <flatcc_verify_table_vector_field@@Base+0xb8>
  403070:	add    eax,ebx
  403072:	cmp    ebx,eax
  403074:	jae    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403076:	mov    edi,eax
  403078:	lea    r8,[rdi+0x4]
  40307c:	cmp    rcx,r8
  40307f:	jb     4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403081:	test   al,0x3
  403083:	jne    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403085:	lea    r8,[rsp+0x30]
  40308a:	add    edx,ebx
  40308c:	nop    DWORD PTR [rax+0x0]
  403090:	mov    DWORD PTR [rsp+0x48],eax
  403094:	mov    r11d,eax
  403097:	sub    r11d,DWORD PTR [r15+rdi*1]
  40309b:	mov    edi,r11d
  40309e:	js     4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  4030a0:	test   dil,0x1
  4030a4:	jne    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  4030a6:	mov    r9d,edi
  4030a9:	lea    r10,[r9+0x2]
  4030ad:	cmp    rcx,r10
  4030b0:	jae    403198 <flatcc_verify_table_vector_field@@Base+0x238>
  4030b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030c0:	mov    eax,DWORD PTR [r13+0x0]
  4030c4:	mov    ebp,0xf
  4030c9:	mov    DWORD PTR [rsp+0x3c],r14d
  4030ce:	add    eax,ebx
  4030d0:	cmp    ebx,eax
  4030d2:	jae    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  4030d8:	mov    edx,eax
  4030da:	lea    rdi,[rdx+0x4]
  4030de:	cmp    rcx,rdi
  4030e1:	jb     402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  4030e7:	test   al,0x3
  4030e9:	jne    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  4030ef:	mov    DWORD PTR [rsp+0x48],eax
  4030f3:	mov    ebx,eax
  4030f5:	sub    ebx,DWORD PTR [r15+rdx*1]
  4030f9:	mov    edx,ebx
  4030fb:	js     40327c <flatcc_verify_table_vector_field@@Base+0x31c>
  403101:	test   dl,0x1
  403104:	jne    40327c <flatcc_verify_table_vector_field@@Base+0x31c>
  40310a:	mov    edi,edx
  40310c:	mov    ebp,0x1b
  403111:	lea    r8,[rdi+0x2]
  403115:	cmp    rcx,r8
  403118:	jb     402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  40311e:	lea    rcx,[r15+rdi*1]
  403122:	mov    ebp,0x1e
  403127:	movzx  r8d,WORD PTR [rcx]
  40312b:	mov    edi,r8d
  40312e:	mov    WORD PTR [rsp+0x4e],r8w
  403134:	add    r8d,edx
  403137:	cmp    esi,r8d
  40313a:	jb     402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403140:	test   dil,0x1
  403144:	jne    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  40314a:	cmp    di,0x3
  40314e:	mov    ebp,0x1c
  403153:	jbe    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403159:	add    edx,0x2
  40315c:	mov    ebx,esi
  40315e:	mov    ebp,0x14
  403163:	movzx  edx,WORD PTR [r15+rdx*1]
  403168:	sub    ebx,eax
  40316a:	cmp    ebx,edx
  40316c:	mov    WORD PTR [rsp+0x4c],dx
  403171:	jb     402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403177:	mov    QWORD PTR [rsp+0x40],rcx
  40317c:	mov    QWORD PTR [rsp+0x30],r15
  403181:	lea    rdi,[rsp+0x30]
  403186:	mov    DWORD PTR [rsp+0x38],esi
  40318a:	call   r12
  40318d:	mov    ebp,eax
  40318f:	jmp    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403194:	nop    DWORD PTR [rax+0x0]
  403198:	add    r9,r15
  40319b:	movzx  r10d,WORD PTR [r9]
  40319f:	mov    r11d,r10d
  4031a2:	mov    WORD PTR [rsp+0x4e],r10w
  4031a8:	add    r10d,edi
  4031ab:	cmp    esi,r10d
  4031ae:	jb     4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  4031b4:	test   r11b,0x1
  4031b8:	jne    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  4031be:	cmp    r11w,0x3
  4031c3:	jbe    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  4031c9:	add    edi,0x2
  4031cc:	mov    r10d,esi
  4031cf:	movzx  edi,WORD PTR [r15+rdi*1]
  4031d4:	sub    r10d,eax
  4031d7:	cmp    r10d,edi
  4031da:	mov    WORD PTR [rsp+0x4c],di
  4031df:	jb     4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  4031e5:	mov    DWORD PTR [rsp+0x1c],edx
  4031e9:	mov    QWORD PTR [rsp+0x10],rcx
  4031ee:	mov    rdi,r8
  4031f1:	mov    DWORD PTR [rsp+0x38],esi
  4031f5:	mov    DWORD PTR [rsp+0x18],esi
  4031f9:	mov    QWORD PTR [rsp+0x8],r8
  4031fe:	mov    QWORD PTR [rsp+0x40],r9
  403203:	mov    QWORD PTR [rsp+0x30],r15
  403208:	call   r12
  40320b:	test   eax,eax
  40320d:	mov    r8,QWORD PTR [rsp+0x8]
  403212:	mov    esi,DWORD PTR [rsp+0x18]
  403216:	mov    rcx,QWORD PTR [rsp+0x10]
  40321b:	mov    edx,DWORD PTR [rsp+0x1c]
  40321f:	jne    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403225:	add    ebx,0x4
  403228:	cmp    ebx,edx
  40322a:	je     402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403230:	mov    r13d,ebx
  403233:	add    r13,r15
  403236:	mov    eax,DWORD PTR [r13+0x0]
  40323a:	mov    DWORD PTR [rsp+0x3c],r14d
  40323f:	add    eax,ebx
  403241:	cmp    ebx,eax
  403243:	jae    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403249:	mov    edi,eax
  40324b:	lea    r9,[rdi+0x4]
  40324f:	cmp    rcx,r9
  403252:	jb     4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403258:	test   al,0x3
  40325a:	je     403090 <flatcc_verify_table_vector_field@@Base+0x130>
  403260:	jmp    4030c0 <flatcc_verify_table_vector_field@@Base+0x160>
  403265:	sub    esi,0x4
  403268:	shl    eax,0x2
  40326b:	sub    esi,edi
  40326d:	cmp    esi,eax
  40326f:	mov    eax,0x1a
  403274:	cmovb  ebp,eax
  403277:	jmp    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  40327c:	mov    ebp,0x1d
  403281:	jmp    402f9f <flatcc_verify_table_vector_field@@Base+0x3f>
  403286:	call   401070 <__stack_chk_fail@plt>
  40328b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403290 <flatcc_verify_union_table@@Base>:
  403290:	sub    rsp,0x38
  403294:	mov    edx,DWORD PTR [rdi+0xc]
  403297:	mov    r8d,DWORD PTR [rdi+0x18]
  40329b:	mov    rax,QWORD PTR fs:0x28
  4032a4:	mov    QWORD PTR [rsp+0x28],rax
  4032a9:	xor    eax,eax
  4032ab:	mov    ecx,DWORD PTR [rdi+0x14]
  4032ae:	mov    r10d,DWORD PTR [rdi+0x8]
  4032b2:	mov    eax,0x3
  4032b7:	sub    edx,0x1
  4032ba:	mov    r9,QWORD PTR [rdi]
  4032bd:	test   edx,edx
  4032bf:	mov    DWORD PTR [rsp+0xc],edx
  4032c3:	jne    4032e0 <flatcc_verify_union_table@@Base+0x50>
  4032c5:	mov    rsi,QWORD PTR [rsp+0x28]
  4032ca:	xor    rsi,QWORD PTR fs:0x28
  4032d3:	jne    4033aa <flatcc_verify_union_table@@Base+0x11a>
  4032d9:	add    rsp,0x38
  4032dd:	ret    
  4032de:	xchg   ax,ax
  4032e0:	add    r8d,ecx
  4032e3:	mov    eax,0xf
  4032e8:	cmp    ecx,r8d
  4032eb:	jae    4032c5 <flatcc_verify_union_table@@Base+0x35>
  4032ed:	mov    edx,r8d
  4032f0:	mov    ecx,r10d
  4032f3:	lea    rdi,[rdx+0x4]
  4032f7:	cmp    rdi,rcx
  4032fa:	ja     4032c5 <flatcc_verify_union_table@@Base+0x35>
  4032fc:	test   r8b,0x3
  403300:	jne    4032c5 <flatcc_verify_union_table@@Base+0x35>
  403302:	mov    DWORD PTR [rsp+0x18],r8d
  403307:	mov    eax,r8d
  40330a:	sub    eax,DWORD PTR [r9+rdx*1]
  40330e:	mov    edx,eax
  403310:	js     4033a0 <flatcc_verify_union_table@@Base+0x110>
  403316:	test   dl,0x1
  403319:	jne    4033a0 <flatcc_verify_union_table@@Base+0x110>
  40331f:	mov    edi,edx
  403321:	mov    eax,0x1b
  403326:	lea    r11,[rdi+0x2]
  40332a:	cmp    rcx,r11
  40332d:	jb     4032c5 <flatcc_verify_union_table@@Base+0x35>
  40332f:	add    rdi,r9
  403332:	mov    eax,0x1e
  403337:	movzx  ecx,WORD PTR [rdi]
  40333a:	mov    r11d,ecx
  40333d:	mov    WORD PTR [rsp+0x1e],cx
  403342:	add    ecx,edx
  403344:	cmp    r10d,ecx
  403347:	jb     4032c5 <flatcc_verify_union_table@@Base+0x35>
  40334d:	test   r11b,0x1
  403351:	jne    4032c5 <flatcc_verify_union_table@@Base+0x35>
  403357:	cmp    r11w,0x3
  40335c:	mov    eax,0x1c
  403361:	jbe    4032c5 <flatcc_verify_union_table@@Base+0x35>
  403367:	lea    eax,[rdx+0x2]
  40336a:	mov    ecx,r10d
  40336d:	sub    ecx,r8d
  403370:	movzx  edx,WORD PTR [r9+rax*1]
  403375:	mov    eax,0x14
  40337a:	cmp    ecx,edx
  40337c:	mov    WORD PTR [rsp+0x1c],dx
  403381:	jb     4032c5 <flatcc_verify_union_table@@Base+0x35>
  403387:	mov    QWORD PTR [rsp+0x10],rdi
  40338c:	mov    QWORD PTR [rsp],r9
  403390:	mov    rdi,rsp
  403393:	mov    DWORD PTR [rsp+0x8],r10d
  403398:	call   rsi
  40339a:	jmp    4032c5 <flatcc_verify_union_table@@Base+0x35>
  40339f:	nop
  4033a0:	mov    eax,0x1d
  4033a5:	jmp    4032c5 <flatcc_verify_union_table@@Base+0x35>
  4033aa:	call   401070 <__stack_chk_fail@plt>
  4033af:	nop

00000000004033b0 <flatcc_verify_union_struct@@Base>:
  4033b0:	mov    ecx,DWORD PTR [rdi+0x18]
  4033b3:	mov    r8d,DWORD PTR [rdi+0x14]
  4033b7:	mov    eax,0x12
  4033bc:	mov    edi,DWORD PTR [rdi+0x8]
  4033bf:	test   ecx,ecx
  4033c1:	jne    4033c8 <flatcc_verify_union_struct@@Base+0x18>
  4033c3:	repz ret 
  4033c5:	nop    DWORD PTR [rax]
  4033c8:	add    ecx,r8d
  4033cb:	cmp    edi,ecx
  4033cd:	jb     4033c3 <flatcc_verify_union_struct@@Base+0x13>
  4033cf:	add    esi,ecx
  4033d1:	jb     4033ef <flatcc_verify_union_struct@@Base+0x3f>
  4033d3:	cmp    edi,esi
  4033d5:	mov    eax,0x9
  4033da:	jb     4033c3 <flatcc_verify_union_struct@@Base+0x13>
  4033dc:	movzx  eax,dx
  4033df:	sub    eax,0x1
  4033e2:	and    ecx,eax
  4033e4:	cmp    ecx,0x1
  4033e7:	sbb    eax,eax
  4033e9:	not    eax
  4033eb:	and    eax,0xb
  4033ee:	ret    
  4033ef:	mov    eax,0xa
  4033f4:	ret    
  4033f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000403400 <flatcc_verify_union_string@@Base>:
  403400:	mov    ecx,DWORD PTR [rdi+0x14]
  403403:	mov    edx,DWORD PTR [rdi+0x18]
  403406:	mov    eax,0x11
  40340b:	add    edx,ecx
  40340d:	cmp    ecx,edx
  40340f:	jae    403441 <flatcc_verify_union_string@@Base+0x41>
  403411:	mov    r8d,DWORD PTR [rdi+0x8]
  403415:	mov    esi,edx
  403417:	lea    r9,[rsi+0x4]
  40341b:	cmp    r9,r8
  40341e:	mov    rcx,r8
  403421:	ja     403441 <flatcc_verify_union_string@@Base+0x41>
  403423:	test   dl,0x3
  403426:	jne    403448 <flatcc_verify_union_string@@Base+0x48>
  403428:	mov    rdi,QWORD PTR [rdi]
  40342b:	add    edx,0x4
  40342e:	mov    eax,0x8
  403433:	sub    ecx,edx
  403435:	mov    esi,DWORD PTR [rdi+rsi*1]
  403438:	lea    r8d,[rsi+0x1]
  40343c:	cmp    ecx,r8d
  40343f:	jae    403450 <flatcc_verify_union_string@@Base+0x50>
  403441:	repz ret 
  403443:	nop    DWORD PTR [rax+rax*1+0x0]
  403448:	repz ret 
  40344a:	nop    WORD PTR [rax+rax*1+0x0]
  403450:	add    rdx,rdi
  403453:	add    rdx,rsi
  403456:	cmp    BYTE PTR [rdx],0x1
  403459:	sbb    eax,eax
  40345b:	not    eax
  40345d:	and    eax,0x7
  403460:	ret    
  403461:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40346c:	nop    DWORD PTR [rax+0x0]

0000000000403470 <flatcc_verify_buffer_header@@Base>:
  403470:	push   rbx
  403471:	sub    rsp,0x10
  403475:	mov    rax,QWORD PTR fs:0x28
  40347e:	mov    QWORD PTR [rsp+0x8],rax
  403483:	xor    eax,eax
  403485:	test   dil,0x3
  403489:	mov    eax,0x5
  40348e:	je     4034b0 <flatcc_verify_buffer_header@@Base+0x40>
  403490:	mov    rcx,QWORD PTR [rsp+0x8]
  403495:	xor    rcx,QWORD PTR fs:0x28
  40349e:	jne    403505 <flatcc_verify_buffer_header@@Base+0x95>
  4034a0:	add    rsp,0x10
  4034a4:	pop    rbx
  4034a5:	ret    
  4034a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034b0:	mov    rcx,rdx
  4034b3:	mov    edx,0xfffffff7
  4034b8:	mov    eax,0x6
  4034bd:	cmp    rsi,rdx
  4034c0:	ja     403490 <flatcc_verify_buffer_header@@Base+0x20>
  4034c2:	cmp    rsi,0x7
  4034c6:	mov    eax,0x1
  4034cb:	jbe    403490 <flatcc_verify_buffer_header@@Base+0x20>
  4034cd:	test   rcx,rcx
  4034d0:	je     403501 <flatcc_verify_buffer_header@@Base+0x91>
  4034d2:	mov    rbx,rdi
  4034d5:	lea    rdi,[rsp+0x4]
  4034da:	mov    edx,0x4
  4034df:	mov    rsi,rcx
  4034e2:	mov    DWORD PTR [rsp+0x4],0x0
  4034ea:	call   401040 <strncpy@plt>
  4034ef:	mov    edx,DWORD PTR [rsp+0x4]
  4034f3:	cmp    DWORD PTR [rbx+0x4],edx
  4034f6:	je     403501 <flatcc_verify_buffer_header@@Base+0x91>
  4034f8:	test   edx,edx
  4034fa:	mov    eax,0x2
  4034ff:	jne    403490 <flatcc_verify_buffer_header@@Base+0x20>
  403501:	xor    eax,eax
  403503:	jmp    403490 <flatcc_verify_buffer_header@@Base+0x20>
  403505:	call   401070 <__stack_chk_fail@plt>
  40350a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403510 <flatcc_verify_typed_buffer_header@@Base>:
  403510:	test   dil,0x3
  403514:	mov    eax,0x5
  403519:	je     403520 <flatcc_verify_typed_buffer_header@@Base+0x10>
  40351b:	repz ret 
  40351d:	nop    DWORD PTR [rax]
  403520:	mov    ecx,0xfffffff7
  403525:	mov    eax,0x6
  40352a:	cmp    rsi,rcx
  40352d:	ja     40351b <flatcc_verify_typed_buffer_header@@Base+0xb>
  40352f:	cmp    rsi,0x7
  403533:	mov    eax,0x1
  403538:	jbe    40351b <flatcc_verify_typed_buffer_header@@Base+0xb>
  40353a:	xor    eax,eax
  40353c:	test   edx,edx
  40353e:	je     40351b <flatcc_verify_typed_buffer_header@@Base+0xb>
  403540:	xor    eax,eax
  403542:	cmp    edx,DWORD PTR [rdi+0x4]
  403545:	setne  al
  403548:	add    eax,eax
  40354a:	ret    
  40354b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403550 <flatcc_verify_struct_as_root@@Base>:
  403550:	push   r14
  403552:	push   r13
  403554:	mov    r14d,r8d
  403557:	push   r12
  403559:	push   rbp
  40355a:	mov    r12,rdx
  40355d:	push   rbx
  40355e:	mov    rbp,rdi
  403561:	mov    rbx,rsi
  403564:	mov    r13,rcx
  403567:	call   403470 <flatcc_verify_buffer_header@@Base>
  40356c:	test   eax,eax
  40356e:	jne    403590 <flatcc_verify_struct_as_root@@Base+0x40>
  403570:	mov    edx,DWORD PTR [rbp+0x0]
  403573:	cmp    edx,ebx
  403575:	ja     40357b <flatcc_verify_struct_as_root@@Base+0x2b>
  403577:	test   edx,edx
  403579:	jne    4035b0 <flatcc_verify_struct_as_root@@Base+0x60>
  40357b:	mov    eax,0x12
  403580:	pop    rbx
  403581:	pop    rbp
  403582:	pop    r12
  403584:	pop    r13
  403586:	pop    r14
  403588:	ret    
  403589:	nop    DWORD PTR [rax+0x0]
  403590:	mov    rdx,r12
  403593:	mov    rsi,rbx
  403596:	mov    rdi,rbp
  403599:	pop    rbx
  40359a:	pop    rbp
  40359b:	pop    r12
  40359d:	pop    r13
  40359f:	pop    r14
  4035a1:	jmp    403470 <flatcc_verify_buffer_header@@Base>
  4035a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035b0:	add    r13d,edx
  4035b3:	jb     4035db <flatcc_verify_struct_as_root@@Base+0x8b>
  4035b5:	cmp    ebx,r13d
  4035b8:	jae    4035c8 <flatcc_verify_struct_as_root@@Base+0x78>
  4035ba:	mov    eax,0x9
  4035bf:	jmp    403580 <flatcc_verify_struct_as_root@@Base+0x30>
  4035c1:	nop    DWORD PTR [rax+0x0]
  4035c8:	movzx  ecx,r14w
  4035cc:	sub    ecx,0x1
  4035cf:	test   ecx,edx
  4035d1:	mov    edx,0xb
  4035d6:	cmovne eax,edx
  4035d9:	jmp    403580 <flatcc_verify_struct_as_root@@Base+0x30>
  4035db:	mov    eax,0xa
  4035e0:	jmp    403580 <flatcc_verify_struct_as_root@@Base+0x30>
  4035e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4035ed:	nop    DWORD PTR [rax]

00000000004035f0 <flatcc_verify_struct_as_typed_root@@Base>:
  4035f0:	push   r14
  4035f2:	push   r13
  4035f4:	mov    r14d,r8d
  4035f7:	push   r12
  4035f9:	push   rbp
  4035fa:	mov    r12d,edx
  4035fd:	push   rbx
  4035fe:	mov    rbp,rdi
  403601:	mov    rbx,rsi
  403604:	mov    r13,rcx
  403607:	call   403510 <flatcc_verify_typed_buffer_header@@Base>
  40360c:	test   eax,eax
  40360e:	jne    403630 <flatcc_verify_struct_as_typed_root@@Base+0x40>
  403610:	mov    edx,DWORD PTR [rbp+0x0]
  403613:	cmp    edx,ebx
  403615:	ja     40361b <flatcc_verify_struct_as_typed_root@@Base+0x2b>
  403617:	test   edx,edx
  403619:	jne    403650 <flatcc_verify_struct_as_typed_root@@Base+0x60>
  40361b:	mov    eax,0x12
  403620:	pop    rbx
  403621:	pop    rbp
  403622:	pop    r12
  403624:	pop    r13
  403626:	pop    r14
  403628:	ret    
  403629:	nop    DWORD PTR [rax+0x0]
  403630:	mov    edx,r12d
  403633:	mov    rsi,rbx
  403636:	mov    rdi,rbp
  403639:	pop    rbx
  40363a:	pop    rbp
  40363b:	pop    r12
  40363d:	pop    r13
  40363f:	pop    r14
  403641:	jmp    403510 <flatcc_verify_typed_buffer_header@@Base>
  403646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403650:	add    r13d,edx
  403653:	jb     40367b <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  403655:	cmp    ebx,r13d
  403658:	jae    403668 <flatcc_verify_struct_as_typed_root@@Base+0x78>
  40365a:	mov    eax,0x9
  40365f:	jmp    403620 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  403661:	nop    DWORD PTR [rax+0x0]
  403668:	movzx  ecx,r14w
  40366c:	sub    ecx,0x1
  40366f:	test   ecx,edx
  403671:	mov    edx,0xb
  403676:	cmovne eax,edx
  403679:	jmp    403620 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  40367b:	mov    eax,0xa
  403680:	jmp    403620 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  403682:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40368d:	nop    DWORD PTR [rax]

0000000000403690 <flatcc_verify_table_as_root@@Base>:
  403690:	push   r14
  403692:	push   r13
  403694:	mov    r13,rsi
  403697:	push   r12
  403699:	push   rbp
  40369a:	mov    ebp,esi
  40369c:	push   rbx
  40369d:	mov    rsi,rbp
  4036a0:	mov    rbx,rdi
  4036a3:	mov    r12,rdx
  4036a6:	mov    r14,rcx
  4036a9:	sub    rsp,0x30
  4036ad:	mov    rax,QWORD PTR fs:0x28
  4036b6:	mov    QWORD PTR [rsp+0x28],rax
  4036bb:	xor    eax,eax
  4036bd:	call   403470 <flatcc_verify_buffer_header@@Base>
  4036c2:	test   eax,eax
  4036c4:	jne    403718 <flatcc_verify_table_as_root@@Base+0x88>
  4036c6:	mov    edx,DWORD PTR [rbx]
  4036c8:	mov    DWORD PTR [rsp+0xc],0x63
  4036d0:	mov    eax,0xf
  4036d5:	test   edx,edx
  4036d7:	je     4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  4036d9:	mov    ecx,edx
  4036db:	lea    rsi,[rcx+0x4]
  4036df:	cmp    rbp,rsi
  4036e2:	jb     4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  4036e4:	test   dl,0x3
  4036e7:	je     403730 <flatcc_verify_table_as_root@@Base+0xa0>
  4036e9:	nop    DWORD PTR [rax+0x0]
  4036f0:	mov    rcx,QWORD PTR [rsp+0x28]
  4036f5:	xor    rcx,QWORD PTR fs:0x28
  4036fe:	jne    4037da <flatcc_verify_table_as_root@@Base+0x14a>
  403704:	add    rsp,0x30
  403708:	pop    rbx
  403709:	pop    rbp
  40370a:	pop    r12
  40370c:	pop    r13
  40370e:	pop    r14
  403710:	ret    
  403711:	nop    DWORD PTR [rax+0x0]
  403718:	mov    rdx,r12
  40371b:	mov    rsi,rbp
  40371e:	mov    rdi,rbx
  403721:	call   403470 <flatcc_verify_buffer_header@@Base>
  403726:	jmp    4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  403728:	nop    DWORD PTR [rax+rax*1+0x0]
  403730:	mov    eax,edx
  403732:	sub    eax,DWORD PTR [rbx+rcx*1]
  403735:	mov    DWORD PTR [rsp+0x18],edx
  403739:	mov    ecx,eax
  40373b:	js     4037d0 <flatcc_verify_table_as_root@@Base+0x140>
  403741:	test   cl,0x1
  403744:	jne    4037d0 <flatcc_verify_table_as_root@@Base+0x140>
  40374a:	mov    esi,ecx
  40374c:	mov    eax,0x1b
  403751:	lea    rdi,[rsi+0x2]
  403755:	cmp    rbp,rdi
  403758:	jb     4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  40375a:	add    rsi,rbx
  40375d:	mov    eax,0x1e
  403762:	movzx  edi,WORD PTR [rsi]
  403765:	mov    r8d,edi
  403768:	mov    WORD PTR [rsp+0x1e],di
  40376d:	add    edi,ecx
  40376f:	cmp    r13d,edi
  403772:	jb     4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  403778:	test   r8b,0x1
  40377c:	jne    4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  403782:	cmp    r8w,0x3
  403787:	mov    eax,0x1c
  40378c:	jbe    4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  403792:	lea    eax,[rcx+0x2]
  403795:	mov    ecx,r13d
  403798:	sub    ecx,edx
  40379a:	movzx  eax,WORD PTR [rbx+rax*1]
  40379e:	movzx  edx,ax
  4037a1:	mov    WORD PTR [rsp+0x1c],ax
  4037a6:	mov    eax,0x14
  4037ab:	cmp    ecx,edx
  4037ad:	jb     4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  4037b3:	mov    QWORD PTR [rsp+0x10],rsi
  4037b8:	mov    QWORD PTR [rsp],rbx
  4037bc:	mov    rdi,rsp
  4037bf:	mov    DWORD PTR [rsp+0x8],r13d
  4037c4:	call   r14
  4037c7:	jmp    4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  4037cc:	nop    DWORD PTR [rax+0x0]
  4037d0:	mov    eax,0x1d
  4037d5:	jmp    4036f0 <flatcc_verify_table_as_root@@Base+0x60>
  4037da:	call   401070 <__stack_chk_fail@plt>
  4037df:	nop

00000000004037e0 <flatcc_verify_table_as_typed_root@@Base>:
  4037e0:	push   r14
  4037e2:	push   r13
  4037e4:	mov    r13,rsi
  4037e7:	push   r12
  4037e9:	push   rbp
  4037ea:	mov    ebp,esi
  4037ec:	push   rbx
  4037ed:	mov    rsi,rbp
  4037f0:	mov    rbx,rdi
  4037f3:	mov    r12d,edx
  4037f6:	mov    r14,rcx
  4037f9:	sub    rsp,0x30
  4037fd:	mov    rax,QWORD PTR fs:0x28
  403806:	mov    QWORD PTR [rsp+0x28],rax
  40380b:	xor    eax,eax
  40380d:	call   403510 <flatcc_verify_typed_buffer_header@@Base>
  403812:	test   eax,eax
  403814:	jne    403868 <flatcc_verify_table_as_typed_root@@Base+0x88>
  403816:	mov    edx,DWORD PTR [rbx]
  403818:	mov    DWORD PTR [rsp+0xc],0x63
  403820:	mov    eax,0xf
  403825:	test   edx,edx
  403827:	je     403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  403829:	mov    ecx,edx
  40382b:	lea    rsi,[rcx+0x4]
  40382f:	cmp    rbp,rsi
  403832:	jb     403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  403834:	test   dl,0x3
  403837:	je     403880 <flatcc_verify_table_as_typed_root@@Base+0xa0>
  403839:	nop    DWORD PTR [rax+0x0]
  403840:	mov    rcx,QWORD PTR [rsp+0x28]
  403845:	xor    rcx,QWORD PTR fs:0x28
  40384e:	jne    40392a <flatcc_verify_table_as_typed_root@@Base+0x14a>
  403854:	add    rsp,0x30
  403858:	pop    rbx
  403859:	pop    rbp
  40385a:	pop    r12
  40385c:	pop    r13
  40385e:	pop    r14
  403860:	ret    
  403861:	nop    DWORD PTR [rax+0x0]
  403868:	mov    edx,r12d
  40386b:	mov    rsi,rbp
  40386e:	mov    rdi,rbx
  403871:	call   403510 <flatcc_verify_typed_buffer_header@@Base>
  403876:	jmp    403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  403878:	nop    DWORD PTR [rax+rax*1+0x0]
  403880:	mov    eax,edx
  403882:	sub    eax,DWORD PTR [rbx+rcx*1]
  403885:	mov    DWORD PTR [rsp+0x18],edx
  403889:	mov    ecx,eax
  40388b:	js     403920 <flatcc_verify_table_as_typed_root@@Base+0x140>
  403891:	test   cl,0x1
  403894:	jne    403920 <flatcc_verify_table_as_typed_root@@Base+0x140>
  40389a:	mov    esi,ecx
  40389c:	mov    eax,0x1b
  4038a1:	lea    rdi,[rsi+0x2]
  4038a5:	cmp    rbp,rdi
  4038a8:	jb     403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4038aa:	add    rsi,rbx
  4038ad:	mov    eax,0x1e
  4038b2:	movzx  edi,WORD PTR [rsi]
  4038b5:	mov    r8d,edi
  4038b8:	mov    WORD PTR [rsp+0x1e],di
  4038bd:	add    edi,ecx
  4038bf:	cmp    r13d,edi
  4038c2:	jb     403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4038c8:	test   r8b,0x1
  4038cc:	jne    403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4038d2:	cmp    r8w,0x3
  4038d7:	mov    eax,0x1c
  4038dc:	jbe    403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4038e2:	lea    eax,[rcx+0x2]
  4038e5:	mov    ecx,r13d
  4038e8:	sub    ecx,edx
  4038ea:	movzx  eax,WORD PTR [rbx+rax*1]
  4038ee:	movzx  edx,ax
  4038f1:	mov    WORD PTR [rsp+0x1c],ax
  4038f6:	mov    eax,0x14
  4038fb:	cmp    ecx,edx
  4038fd:	jb     403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  403903:	mov    QWORD PTR [rsp+0x10],rsi
  403908:	mov    QWORD PTR [rsp],rbx
  40390c:	mov    rdi,rsp
  40390f:	mov    DWORD PTR [rsp+0x8],r13d
  403914:	call   r14
  403917:	jmp    403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  40391c:	nop    DWORD PTR [rax+0x0]
  403920:	mov    eax,0x1d
  403925:	jmp    403840 <flatcc_verify_table_as_typed_root@@Base+0x60>
  40392a:	call   401070 <__stack_chk_fail@plt>
  40392f:	nop

0000000000403930 <flatcc_verify_struct_as_nested_root@@Base>:
  403930:	push   r15
  403932:	push   r14
  403934:	mov    r14,r8
  403937:	push   r13
  403939:	push   r12
  40393b:	movzx  r12d,r9w
  40393f:	push   rbp
  403940:	push   rbx
  403941:	movzx  ebx,si
  403944:	mov    r13d,r9d
  403947:	mov    r8d,0x1
  40394d:	mov    r9d,0xffffffff
  403953:	sub    rsp,0x18
  403957:	mov    esi,ebx
  403959:	mov    r15,rdi
  40395c:	mov    QWORD PTR [rsp+0x8],rcx
  403961:	mov    rcx,r12
  403964:	mov    ebp,edx
  403966:	call   402b90 <flatcc_verify_vector_field@@Base>
  40396b:	test   eax,eax
  40396d:	jne    4039c8 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  40396f:	add    ebx,0x2
  403972:	add    ebx,ebx
  403974:	cmp    bx,WORD PTR [r15+0x1e]
  403979:	jae    4039f8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  40397b:	mov    rax,QWORD PTR [r15+0x10]
  40397f:	movzx  ebx,bx
  403982:	movzx  eax,WORD PTR [rax+rbx*1]
  403986:	test   ax,ax
  403989:	je     4039f8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  40398b:	mov    edi,DWORD PTR [r15+0x18]
  40398f:	add    rdi,rax
  403992:	add    rdi,QWORD PTR [r15]
  403995:	je     4039f8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  403997:	mov    eax,DWORD PTR [rdi]
  403999:	mov    rdx,QWORD PTR [rsp+0x8]
  40399e:	movzx  r8d,r13w
  4039a2:	mov    rcx,r14
  4039a5:	add    rdi,rax
  4039a8:	mov    esi,DWORD PTR [rdi]
  4039aa:	add    rsp,0x18
  4039ae:	add    rdi,0x4
  4039b2:	pop    rbx
  4039b3:	pop    rbp
  4039b4:	pop    r12
  4039b6:	pop    r13
  4039b8:	pop    r14
  4039ba:	pop    r15
  4039bc:	jmp    403550 <flatcc_verify_struct_as_root@@Base>
  4039c1:	nop    DWORD PTR [rax+0x0]
  4039c8:	add    rsp,0x18
  4039cc:	mov    rcx,r12
  4039cf:	mov    edx,ebp
  4039d1:	mov    esi,ebx
  4039d3:	mov    rdi,r15
  4039d6:	mov    r9d,0xffffffff
  4039dc:	pop    rbx
  4039dd:	pop    rbp
  4039de:	pop    r12
  4039e0:	pop    r13
  4039e2:	pop    r14
  4039e4:	pop    r15
  4039e6:	mov    r8d,0x1
  4039ec:	jmp    402b90 <flatcc_verify_vector_field@@Base>
  4039f1:	nop    DWORD PTR [rax+0x0]
  4039f8:	add    rsp,0x18
  4039fc:	xor    eax,eax
  4039fe:	pop    rbx
  4039ff:	pop    rbp
  403a00:	pop    r12
  403a02:	pop    r13
  403a04:	pop    r14
  403a06:	pop    r15
  403a08:	ret    
  403a09:	nop    DWORD PTR [rax+0x0]

0000000000403a10 <flatcc_verify_table_as_nested_root@@Base>:
  403a10:	push   r15
  403a12:	push   r14
  403a14:	movzx  r14d,r8w
  403a18:	push   r13
  403a1a:	push   r12
  403a1c:	mov    r8d,0x1
  403a22:	push   rbp
  403a23:	push   rbx
  403a24:	movzx  ebx,si
  403a27:	mov    r12,rcx
  403a2a:	mov    esi,ebx
  403a2c:	mov    rcx,r14
  403a2f:	sub    rsp,0x48
  403a33:	mov    r15,rdi
  403a36:	mov    ebp,edx
  403a38:	mov    QWORD PTR [rsp+0x8],r9
  403a3d:	mov    r9d,0xffffffff
  403a43:	mov    rax,QWORD PTR fs:0x28
  403a4c:	mov    QWORD PTR [rsp+0x38],rax
  403a51:	xor    eax,eax
  403a53:	call   402b90 <flatcc_verify_vector_field@@Base>
  403a58:	test   eax,eax
  403a5a:	jne    403b00 <flatcc_verify_table_as_nested_root@@Base+0xf0>
  403a60:	add    ebx,0x2
  403a63:	add    ebx,ebx
  403a65:	cmp    bx,WORD PTR [r15+0x1e]
  403a6a:	jae    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403a6c:	mov    rdx,QWORD PTR [r15+0x10]
  403a70:	movzx  ebx,bx
  403a73:	movzx  edx,WORD PTR [rdx+rbx*1]
  403a77:	test   dx,dx
  403a7a:	je     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403a7c:	mov    ebx,DWORD PTR [r15+0x18]
  403a80:	add    rbx,rdx
  403a83:	add    rbx,QWORD PTR [r15]
  403a86:	je     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403a88:	mov    eax,DWORD PTR [rbx]
  403a8a:	mov    rdx,r12
  403a8d:	add    rbx,rax
  403a90:	mov    r14d,DWORD PTR [rbx]
  403a93:	lea    r13,[rbx+0x4]
  403a97:	mov    rdi,r13
  403a9a:	mov    rsi,r14
  403a9d:	mov    rbp,r14
  403aa0:	call   403470 <flatcc_verify_buffer_header@@Base>
  403aa5:	test   eax,eax
  403aa7:	jne    403ae8 <flatcc_verify_table_as_nested_root@@Base+0xd8>
  403aa9:	mov    edx,DWORD PTR [r15+0xc]
  403aad:	mov    esi,DWORD PTR [rbx+0x4]
  403ab0:	mov    eax,0x3
  403ab5:	sub    edx,0x1
  403ab8:	test   edx,edx
  403aba:	mov    DWORD PTR [rsp+0x1c],edx
  403abe:	jne    403b20 <flatcc_verify_table_as_nested_root@@Base+0x110>
  403ac0:	mov    rcx,QWORD PTR [rsp+0x38]
  403ac5:	xor    rcx,QWORD PTR fs:0x28
  403ace:	jne    403bf2 <flatcc_verify_table_as_nested_root@@Base+0x1e2>
  403ad4:	add    rsp,0x48
  403ad8:	pop    rbx
  403ad9:	pop    rbp
  403ada:	pop    r12
  403adc:	pop    r13
  403ade:	pop    r14
  403ae0:	pop    r15
  403ae2:	ret    
  403ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  403ae8:	mov    rdx,r12
  403aeb:	mov    rsi,r14
  403aee:	mov    rdi,r13
  403af1:	call   403470 <flatcc_verify_buffer_header@@Base>
  403af6:	jmp    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403af8:	nop    DWORD PTR [rax+rax*1+0x0]
  403b00:	mov    r9d,0xffffffff
  403b06:	mov    r8d,0x1
  403b0c:	mov    rcx,r14
  403b0f:	mov    edx,ebp
  403b11:	mov    esi,ebx
  403b13:	mov    rdi,r15
  403b16:	call   402b90 <flatcc_verify_vector_field@@Base>
  403b1b:	jmp    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b1d:	nop    DWORD PTR [rax]
  403b20:	test   esi,esi
  403b22:	mov    eax,0xf
  403b27:	je     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b29:	mov    edx,esi
  403b2b:	lea    rdi,[rdx+0x4]
  403b2f:	cmp    r14,rdi
  403b32:	jb     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b34:	test   sil,0x3
  403b38:	jne    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b3a:	mov    DWORD PTR [rsp+0x28],esi
  403b3e:	mov    eax,esi
  403b40:	sub    eax,DWORD PTR [rbx+rdx*1+0x4]
  403b44:	mov    edx,eax
  403b46:	js     403be8 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  403b4c:	test   dl,0x1
  403b4f:	jne    403be8 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  403b55:	mov    edi,edx
  403b57:	mov    eax,0x1b
  403b5c:	lea    r8,[rdi+0x2]
  403b60:	cmp    r14,r8
  403b63:	jb     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b69:	add    rdi,r13
  403b6c:	mov    eax,0x1e
  403b71:	movzx  r8d,WORD PTR [rdi]
  403b75:	mov    r9d,r8d
  403b78:	mov    WORD PTR [rsp+0x2e],r8w
  403b7e:	add    r8d,edx
  403b81:	cmp    ebp,r8d
  403b84:	jb     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b8a:	test   r9b,0x1
  403b8e:	jne    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403b94:	cmp    r9w,0x3
  403b99:	mov    eax,0x1c
  403b9e:	jbe    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403ba4:	lea    eax,[rdx+0x2]
  403ba7:	mov    ecx,ebp
  403ba9:	sub    ecx,esi
  403bab:	movzx  edx,WORD PTR [rbx+rax*1+0x4]
  403bb0:	mov    eax,0x14
  403bb5:	cmp    ecx,edx
  403bb7:	mov    WORD PTR [rsp+0x2c],dx
  403bbc:	jb     403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403bc2:	mov    QWORD PTR [rsp+0x20],rdi
  403bc7:	mov    QWORD PTR [rsp+0x10],r13
  403bcc:	lea    rdi,[rsp+0x10]
  403bd1:	mov    DWORD PTR [rsp+0x18],ebp
  403bd5:	mov    rax,QWORD PTR [rsp+0x8]
  403bda:	call   rax
  403bdc:	jmp    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403be1:	nop    DWORD PTR [rax+0x0]
  403be8:	mov    eax,0x1d
  403bed:	jmp    403ac0 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  403bf2:	call   401070 <__stack_chk_fail@plt>
  403bf7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403c00 <flatcc_verify_union_field@@Base>:
  403c00:	push   rbx
  403c01:	mov    r10,rcx
  403c04:	mov    r9,rdi
  403c07:	sub    rsp,0x40
  403c0b:	movzx  ecx,WORD PTR [rdi+0x1e]
  403c0f:	mov    rax,QWORD PTR fs:0x28
  403c18:	mov    QWORD PTR [rsp+0x38],rax
  403c1d:	xor    eax,eax
  403c1f:	lea    eax,[rsi+rsi*1]
  403c22:	add    eax,0x2
  403c25:	cmp    ax,cx
  403c28:	jae    403c70 <flatcc_verify_union_field@@Base+0x70>
  403c2a:	mov    rbx,QWORD PTR [rdi+0x10]
  403c2e:	movzx  eax,ax
  403c31:	movzx  eax,WORD PTR [rbx+rax*1]
  403c35:	test   eax,eax
  403c37:	mov    r8,rax
  403c3a:	je     403c70 <flatcc_verify_union_field@@Base+0x70>
  403c3c:	movzx  r11d,WORD PTR [r9+0x1c]
  403c41:	lea    edi,[rax+0x1]
  403c44:	mov    eax,0xd
  403c49:	cmp    edi,r11d
  403c4c:	jbe    403c98 <flatcc_verify_union_field@@Base+0x98>
  403c4e:	mov    rbx,QWORD PTR [rsp+0x38]
  403c53:	xor    rbx,QWORD PTR fs:0x28
  403c5c:	jne    403d50 <flatcc_verify_union_field@@Base+0x150>
  403c62:	add    rsp,0x40
  403c66:	pop    rbx
  403c67:	ret    
  403c68:	nop    DWORD PTR [rax+rax*1+0x0]
  403c70:	mov    eax,0x4
  403c75:	lea    esi,[rax+rsi*2]
  403c78:	cmp    cx,si
  403c7b:	jbe    403cd0 <flatcc_verify_union_field@@Base+0xd0>
  403c7d:	mov    rax,QWORD PTR [r9+0x10]
  403c81:	movzx  esi,si
  403c84:	cmp    WORD PTR [rax+rsi*1],0x0
  403c89:	je     403cd0 <flatcc_verify_union_field@@Base+0xd0>
  403c8b:	mov    eax,0x17
  403c90:	jmp    403c4e <flatcc_verify_union_field@@Base+0x4e>
  403c92:	nop    WORD PTR [rax+rax*1+0x0]
  403c98:	movzx  esi,si
  403c9b:	mov    rdi,QWORD PTR [r9]
  403c9e:	lea    eax,[rsi+0x2]
  403ca1:	add    eax,eax
  403ca3:	cmp    cx,ax
  403ca6:	jbe    403ce8 <flatcc_verify_union_field@@Base+0xe8>
  403ca8:	mov    r11d,DWORD PTR [r9+0x18]
  403cac:	movzx  eax,ax
  403caf:	add    r11,r8
  403cb2:	add    r11,rdi
  403cb5:	cmp    WORD PTR [rbx+rax*1],0x0
  403cba:	movzx  ecx,BYTE PTR [r11]
  403cbe:	je     403cf7 <flatcc_verify_union_field@@Base+0xf7>
  403cc0:	test   cl,cl
  403cc2:	jne    403cf7 <flatcc_verify_union_field@@Base+0xf7>
  403cc4:	mov    eax,0x18
  403cc9:	jmp    403c4e <flatcc_verify_union_field@@Base+0x4e>
  403ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  403cd0:	test   edx,edx
  403cd2:	mov    eax,0x15
  403cd7:	jne    403c4e <flatcc_verify_union_field@@Base+0x4e>
  403cdd:	xor    eax,eax
  403cdf:	jmp    403c4e <flatcc_verify_union_field@@Base+0x4e>
  403ce4:	nop    DWORD PTR [rax+0x0]
  403ce8:	mov    r11d,DWORD PTR [r9+0x18]
  403cec:	add    r8,r11
  403cef:	lea    r11,[rdi+r8*1]
  403cf3:	movzx  ecx,BYTE PTR [r11]
  403cf7:	test   cl,cl
  403cf9:	je     403cdd <flatcc_verify_union_field@@Base+0xdd>
  403cfb:	lea    rcx,[rsp+0xc]
  403d00:	mov    rdi,r9
  403d03:	call   402790 <verify_monster@@Base+0x7f0>
  403d08:	test   eax,eax
  403d0a:	jne    403c4e <flatcc_verify_union_field@@Base+0x4e>
  403d10:	mov    eax,DWORD PTR [rsp+0xc]
  403d14:	test   eax,eax
  403d16:	je     403cdd <flatcc_verify_union_field@@Base+0xdd>
  403d18:	mov    ecx,DWORD PTR [r9+0x8]
  403d1c:	mov    rdx,QWORD PTR [r9]
  403d1f:	lea    rdi,[rsp+0x10]
  403d24:	mov    DWORD PTR [rsp+0x24],eax
  403d28:	mov    DWORD PTR [rsp+0x18],ecx
  403d2c:	mov    ecx,DWORD PTR [r9+0xc]
  403d30:	mov    QWORD PTR [rsp+0x10],rdx
  403d35:	mov    DWORD PTR [rsp+0x1c],ecx
  403d39:	mov    eax,DWORD PTR [rdx+rax*1]
  403d3c:	mov    DWORD PTR [rsp+0x28],eax
  403d40:	movzx  eax,BYTE PTR [r11]
  403d44:	mov    BYTE PTR [rsp+0x20],al
  403d48:	call   r10
  403d4b:	jmp    403c4e <flatcc_verify_union_field@@Base+0x4e>
  403d50:	call   401070 <__stack_chk_fail@plt>
  403d55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000403d60 <flatcc_verify_union_vector_field@@Base>:
  403d60:	push   r15
  403d62:	push   r14
  403d64:	mov    r15d,edx
  403d67:	push   r13
  403d69:	push   r12
  403d6b:	lea    r12d,[rsi-0x1]
  403d6f:	push   rbp
  403d70:	push   rbx
  403d71:	mov    r14d,esi
  403d74:	movzx  r12d,r12w
  403d78:	mov    rbx,rdi
  403d7b:	mov    r13,rcx
  403d7e:	sub    rsp,0x48
  403d82:	movzx  edx,WORD PTR [rdi+0x1e]
  403d86:	lea    ebp,[r12+0x2]
  403d8b:	mov    rax,QWORD PTR fs:0x28
  403d94:	mov    QWORD PTR [rsp+0x38],rax
  403d99:	xor    eax,eax
  403d9b:	add    ebp,ebp
  403d9d:	cmp    bp,dx
  403da0:	jae    403e60 <flatcc_verify_union_vector_field@@Base+0x100>
  403da6:	mov    rcx,QWORD PTR [rdi+0x10]
  403daa:	movzx  eax,bp
  403dad:	cmp    WORD PTR [rcx+rax*1],0x0
  403db2:	je     403e60 <flatcc_verify_union_vector_field@@Base+0x100>
  403db8:	mov    r9d,0xffffffff
  403dbe:	mov    r8d,0x1
  403dc4:	mov    ecx,0x1
  403dc9:	mov    edx,r15d
  403dcc:	mov    esi,r12d
  403dcf:	mov    rdi,rbx
  403dd2:	call   402b90 <flatcc_verify_vector_field@@Base>
  403dd7:	test   eax,eax
  403dd9:	mov    r9d,eax
  403ddc:	jne    403f30 <flatcc_verify_union_vector_field@@Base+0x1d0>
  403de2:	cmp    bp,WORD PTR [rbx+0x1e]
  403de6:	jae    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403de8:	mov    rax,QWORD PTR [rbx+0x10]
  403dec:	movzx  ebp,bp
  403def:	movzx  edx,WORD PTR [rax+rbp*1]
  403df3:	test   dx,dx
  403df6:	je     403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403df8:	mov    eax,DWORD PTR [rbx+0x18]
  403dfb:	add    rax,rdx
  403dfe:	add    rax,QWORD PTR [rbx]
  403e01:	je     403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403e03:	mov    r10d,DWORD PTR [rax]
  403e06:	lea    rcx,[rsp+0xc]
  403e0b:	movzx  esi,r14w
  403e0f:	mov    edx,r15d
  403e12:	mov    rdi,rbx
  403e15:	add    r10,rax
  403e18:	mov    r11d,DWORD PTR [r10]
  403e1b:	call   402790 <verify_monster@@Base+0x7f0>
  403e20:	test   eax,eax
  403e22:	jne    403f20 <flatcc_verify_union_vector_field@@Base+0x1c0>
  403e28:	mov    eax,DWORD PTR [rsp+0xc]
  403e2c:	test   eax,eax
  403e2e:	jne    403e98 <flatcc_verify_union_vector_field@@Base+0x138>
  403e30:	mov    rdi,QWORD PTR [rsp+0x38]
  403e35:	xor    rdi,QWORD PTR fs:0x28
  403e3e:	mov    eax,r9d
  403e41:	jne    404022 <flatcc_verify_union_vector_field@@Base+0x2c2>
  403e47:	add    rsp,0x48
  403e4b:	pop    rbx
  403e4c:	pop    rbp
  403e4d:	pop    r12
  403e4f:	pop    r13
  403e51:	pop    r14
  403e53:	pop    r15
  403e55:	ret    
  403e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e60:	lea    eax,[r14+r14*1]
  403e64:	add    eax,0x4
  403e67:	cmp    dx,ax
  403e6a:	ja     403e80 <flatcc_verify_union_vector_field@@Base+0x120>
  403e6c:	test   r15d,r15d
  403e6f:	mov    r9d,0x16
  403e75:	jne    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403e77:	jmp    403db8 <flatcc_verify_union_vector_field@@Base+0x58>
  403e7c:	nop    DWORD PTR [rax+0x0]
  403e80:	mov    rdx,QWORD PTR [rbx+0x10]
  403e84:	movzx  eax,ax
  403e87:	cmp    WORD PTR [rdx+rax*1],0x0
  403e8c:	jne    403db8 <flatcc_verify_union_vector_field@@Base+0x58>
  403e92:	jmp    403e6c <flatcc_verify_union_vector_field@@Base+0x10c>
  403e94:	nop    DWORD PTR [rax+0x0]
  403e98:	mov    edx,DWORD PTR [rbx+0xc]
  403e9b:	mov    r9d,0x3
  403ea1:	test   edx,edx
  403ea3:	jle    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403ea5:	mov    r12,QWORD PTR [rbx]
  403ea8:	mov    ecx,eax
  403eaa:	mov    r9d,0x10
  403eb0:	mov    esi,DWORD PTR [r12+rcx*1]
  403eb4:	add    esi,eax
  403eb6:	cmp    eax,esi
  403eb8:	mov    ecx,esi
  403eba:	jae    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403ec0:	mov    eax,DWORD PTR [rbx+0x8]
  403ec3:	mov    esi,esi
  403ec5:	lea    r8,[rsi+0x4]
  403ec9:	cmp    r8,rax
  403ecc:	mov    rdi,rax
  403ecf:	ja     403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403ed5:	test   r8b,0x3
  403ed9:	je     403f57 <flatcc_verify_union_vector_field@@Base+0x1f7>
  403edb:	and    r8d,0x3
  403edf:	mov    r9d,0x10
  403ee5:	jne    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403eeb:	mov    eax,DWORD PTR [r12+rsi*1]
  403eef:	mov    r9d,0x19
  403ef5:	cmp    eax,0x3fffffff
  403efa:	ja     403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403f00:	sub    edi,0x4
  403f03:	shl    eax,0x2
  403f06:	mov    r9d,0x1a
  403f0c:	sub    edi,ecx
  403f0e:	cmp    edi,eax
  403f10:	jb     403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403f16:	xor    r9d,r9d
  403f19:	jmp    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403f1e:	xchg   ax,ax
  403f20:	mov    r9d,eax
  403f23:	jmp    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403f28:	nop    DWORD PTR [rax+rax*1+0x0]
  403f30:	mov    r9d,0xffffffff
  403f36:	mov    r8d,0x1
  403f3c:	mov    ecx,0x1
  403f41:	mov    edx,r15d
  403f44:	mov    esi,r12d
  403f47:	mov    rdi,rbx
  403f4a:	call   402b90 <flatcc_verify_vector_field@@Base>
  403f4f:	mov    r9d,eax
  403f52:	jmp    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403f57:	mov    eax,DWORD PTR [r12+rsi*1]
  403f5b:	cmp    eax,0x3fffffff
  403f60:	ja     403edb <flatcc_verify_union_vector_field@@Base+0x17b>
  403f66:	lea    ebx,[rcx+0x4]
  403f69:	lea    r14d,[rax*4+0x0]
  403f71:	mov    r9d,edi
  403f74:	sub    r9d,ebx
  403f77:	cmp    r9d,r14d
  403f7a:	jb     403edb <flatcc_verify_union_vector_field@@Base+0x17b>
  403f80:	cmp    r11d,eax
  403f83:	mov    r9d,0x22
  403f89:	jne    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  403f8f:	sub    edx,0x1
  403f92:	test   r11d,r11d
  403f95:	mov    QWORD PTR [rsp+0x10],r12
  403f9a:	mov    DWORD PTR [rsp+0x18],edi
  403f9e:	mov    DWORD PTR [rsp+0x1c],edx
  403fa2:	je     403f16 <flatcc_verify_union_vector_field@@Base+0x1b6>
  403fa8:	lea    rbp,[r10+0x4]
  403fac:	add    r14d,ebx
  403faf:	lea    r15,[rsp+0x10]
  403fb4:	jmp    403fd6 <flatcc_verify_union_vector_field@@Base+0x276>
  403fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fc0:	cmp    BYTE PTR [rbp+0x0],0x0
  403fc4:	jne    40400c <flatcc_verify_union_vector_field@@Base+0x2ac>
  403fc6:	add    ebx,0x4
  403fc9:	add    rbp,0x1
  403fcd:	cmp    ebx,r14d
  403fd0:	je     403f16 <flatcc_verify_union_vector_field@@Base+0x1b6>
  403fd6:	mov    eax,ebx
  403fd8:	mov    eax,DWORD PTR [r12+rax*1]
  403fdc:	test   eax,eax
  403fde:	je     403fc0 <flatcc_verify_union_vector_field@@Base+0x260>
  403fe0:	movzx  edx,BYTE PTR [rbp+0x0]
  403fe4:	test   dl,dl
  403fe6:	je     404017 <flatcc_verify_union_vector_field@@Base+0x2b7>
  403fe8:	mov    BYTE PTR [rsp+0x20],dl
  403fec:	mov    DWORD PTR [rsp+0x24],ebx
  403ff0:	mov    rdi,r15
  403ff3:	mov    DWORD PTR [rsp+0x28],eax
  403ff7:	call   r13
  403ffa:	test   eax,eax
  403ffc:	je     403fc6 <flatcc_verify_union_vector_field@@Base+0x266>
  403ffe:	mov    rdi,r15
  404001:	call   r13
  404004:	mov    r9d,eax
  404007:	jmp    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  40400c:	mov    r9d,0x20
  404012:	jmp    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  404017:	mov    r9d,0x21
  40401d:	jmp    403e30 <flatcc_verify_union_vector_field@@Base+0xd0>
  404022:	call   401070 <__stack_chk_fail@plt>
  404027:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404030 <__libc_csu_init@@Base>:
  404030:	endbr64 
  404034:	push   r15
  404036:	lea    r15,[rip+0x3dc3]        # 407e00 <_IO_stdin_used@@Base+0x2e00>
  40403d:	push   r14
  40403f:	mov    r14,rdx
  404042:	push   r13
  404044:	mov    r13,rsi
  404047:	push   r12
  404049:	mov    r12d,edi
  40404c:	push   rbp
  40404d:	lea    rbp,[rip+0x3db4]        # 407e08 <_IO_stdin_used@@Base+0x2e08>
  404054:	push   rbx
  404055:	sub    rbp,r15
  404058:	sub    rsp,0x8
  40405c:	call   401000 <free@plt-0x30>
  404061:	sar    rbp,0x3
  404065:	je     404086 <__libc_csu_init@@Base+0x56>
  404067:	xor    ebx,ebx
  404069:	nop    DWORD PTR [rax+0x0]
  404070:	mov    rdx,r14
  404073:	mov    rsi,r13
  404076:	mov    edi,r12d
  404079:	call   QWORD PTR [r15+rbx*8]
  40407d:	add    rbx,0x1
  404081:	cmp    rbp,rbx
  404084:	jne    404070 <__libc_csu_init@@Base+0x40>
  404086:	add    rsp,0x8
  40408a:	pop    rbx
  40408b:	pop    rbp
  40408c:	pop    r12
  40408e:	pop    r13
  404090:	pop    r14
  404092:	pop    r15
  404094:	ret    
  404095:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004040a0 <__libc_csu_fini@@Base>:
  4040a0:	endbr64 
  4040a4:	ret    

Disassembly of section .fini:

00000000004040a8 <.fini>:
  4040a8:	endbr64 
  4040ac:	sub    rsp,0x8
  4040b0:	add    rsp,0x8
  4040b4:	ret    
