
../repos/prog2/7.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 405ff8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x3fe2]        # 406008 <_IO_stdin_used@@Base+0x2008>
  402026:	jmp    QWORD PTR [rip+0x3fe4]        # 406010 <_IO_stdin_used@@Base+0x2010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x3fe2]        # 406018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <putchar@plt>:
  402040:	jmp    QWORD PTR [rip+0x3fda]        # 406020 <putchar@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <strcpy@plt>:
  402050:	jmp    QWORD PTR [rip+0x3fd2]        # 406028 <strcpy@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <puts@plt>:
  402060:	jmp    QWORD PTR [rip+0x3fca]        # 406030 <puts@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <fclose@plt>:
  402070:	jmp    QWORD PTR [rip+0x3fc2]        # 406038 <fclose@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <strlen@plt>:
  402080:	jmp    QWORD PTR [rip+0x3fba]        # 406040 <strlen@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <printf@plt>:
  402090:	jmp    QWORD PTR [rip+0x3fb2]        # 406048 <printf@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <strcmp@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x3faa]        # 406050 <strcmp@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <fgets_unlocked@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x3fa2]        # 406058 <fgets_unlocked@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <malloc@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x3f9a]        # 406060 <malloc@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <realloc@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x3f92]        # 406068 <realloc@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fopen@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x3f8a]        # 406070 <fopen@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <strtok@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x3f82]        # 406078 <strtok@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

Disassembly of section .text:

0000000000402100 <_start@@Base>:
  402100:	endbr64 
  402104:	xor    ebp,ebp
  402106:	mov    r9,rdx
  402109:	pop    rsi
  40210a:	mov    rdx,rsp
  40210d:	and    rsp,0xfffffffffffffff0
  402111:	push   rax
  402112:	push   rsp
  402113:	mov    r8,0x403490
  40211a:	mov    rcx,0x403420
  402121:	mov    rdi,0x4021f0
  402128:	call   QWORD PTR [rip+0x3ec2]        # 405ff0 <__libc_start_main@GLIBC_2.2.5>
  40212e:	hlt    
  40212f:	nop
  402130:	endbr64 
  402134:	ret    
  402135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40213f:	nop
  402140:	mov    eax,0x406090
  402145:	cmp    rax,0x406090
  40214b:	je     402160 <_start@@Base+0x60>
  40214d:	mov    eax,0x0
  402152:	test   rax,rax
  402155:	je     402160 <_start@@Base+0x60>
  402157:	mov    edi,0x406090
  40215c:	jmp    rax
  40215e:	xchg   ax,ax
  402160:	ret    
  402161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40216c:	nop    DWORD PTR [rax+0x0]
  402170:	mov    esi,0x406090
  402175:	sub    rsi,0x406090
  40217c:	mov    rax,rsi
  40217f:	shr    rsi,0x3f
  402183:	sar    rax,0x3
  402187:	add    rsi,rax
  40218a:	sar    rsi,1
  40218d:	je     4021a0 <_start@@Base+0xa0>
  40218f:	mov    eax,0x0
  402194:	test   rax,rax
  402197:	je     4021a0 <_start@@Base+0xa0>
  402199:	mov    edi,0x406090
  40219e:	jmp    rax
  4021a0:	ret    
  4021a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021ac:	nop    DWORD PTR [rax+0x0]
  4021b0:	endbr64 
  4021b4:	cmp    BYTE PTR [rip+0x3ed5],0x0        # 406090 <__bss_start@@Base>
  4021bb:	jne    4021d0 <_start@@Base+0xd0>
  4021bd:	push   rbp
  4021be:	mov    rbp,rsp
  4021c1:	call   402140 <_start@@Base+0x40>
  4021c6:	mov    BYTE PTR [rip+0x3ec3],0x1        # 406090 <__bss_start@@Base>
  4021cd:	pop    rbp
  4021ce:	ret    
  4021cf:	nop
  4021d0:	ret    
  4021d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	endbr64 
  4021e4:	jmp    402170 <_start@@Base+0x70>
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004021f0 <main@@Base>:
  4021f0:	push   r15
  4021f2:	push   r14
  4021f4:	push   r12
  4021f6:	push   rbx
  4021f7:	sub    rsp,0x68
  4021fb:	lea    rdi,[rip+0x1e57]        # 404059 <_IO_stdin_used@@Base+0x59>
  402202:	call   402060 <puts@plt>
  402207:	xor    eax,eax
  402209:	call   402f70 <bst_nova@@Base>
  40220e:	mov    rbx,rax
  402211:	lea    rsi,[rip+0x1dec]        # 404004 <_IO_stdin_used@@Base+0x4>
  402218:	mov    rdi,rax
  40221b:	call   403190 <bst_insere@@Base>
  402220:	lea    rsi,[rip+0x1ddf]        # 404006 <_IO_stdin_used@@Base+0x6>
  402227:	mov    rdi,rbx
  40222a:	call   403190 <bst_insere@@Base>
  40222f:	lea    rsi,[rip+0x1dd2]        # 404008 <_IO_stdin_used@@Base+0x8>
  402236:	mov    rdi,rbx
  402239:	call   403190 <bst_insere@@Base>
  40223e:	lea    rsi,[rip+0x1dc5]        # 40400a <_IO_stdin_used@@Base+0xa>
  402245:	mov    rdi,rbx
  402248:	call   403190 <bst_insere@@Base>
  40224d:	lea    rsi,[rip+0x1e0b]        # 40405f <_IO_stdin_used@@Base+0x5f>
  402254:	mov    rdi,rbx
  402257:	call   403190 <bst_insere@@Base>
  40225c:	lea    rsi,[rip+0x1da9]        # 40400c <_IO_stdin_used@@Base+0xc>
  402263:	mov    rdi,rbx
  402266:	call   403190 <bst_insere@@Base>
  40226b:	lea    rsi,[rip+0x1d9c]        # 40400e <_IO_stdin_used@@Base+0xe>
  402272:	mov    rdi,rbx
  402275:	call   403190 <bst_insere@@Base>
  40227a:	lea    rsi,[rip+0x1d8f]        # 404010 <_IO_stdin_used@@Base+0x10>
  402281:	mov    rdi,rbx
  402284:	call   403190 <bst_insere@@Base>
  402289:	lea    rsi,[rip+0x1d82]        # 404012 <_IO_stdin_used@@Base+0x12>
  402290:	mov    rdi,rbx
  402293:	call   403190 <bst_insere@@Base>
  402298:	lea    rsi,[rip+0x1d75]        # 404014 <_IO_stdin_used@@Base+0x14>
  40229f:	mov    rdi,rbx
  4022a2:	call   403190 <bst_insere@@Base>
  4022a7:	mov    rdi,QWORD PTR [rbx]
  4022aa:	call   4033d0 <bst_altura@@Base>
  4022af:	lea    rdi,[rip+0x1d60]        # 404016 <_IO_stdin_used@@Base+0x16>
  4022b6:	mov    esi,eax
  4022b8:	xor    eax,eax
  4022ba:	call   402090 <printf@plt>
  4022bf:	mov    rdi,rbx
  4022c2:	call   403300 <bst_imprime@@Base>
  4022c7:	lea    rdi,[rip+0x1d8f]        # 40405d <_IO_stdin_used@@Base+0x5d>
  4022ce:	call   402060 <puts@plt>
  4022d3:	xor    eax,eax
  4022d5:	call   402410 <avl_nova@@Base>
  4022da:	mov    r14,rax
  4022dd:	lea    rdi,[rip+0x1d46]        # 40402a <_IO_stdin_used@@Base+0x2a>
  4022e4:	lea    rsi,[rip+0x1d4b]        # 404036 <_IO_stdin_used@@Base+0x36>
  4022eb:	call   4020e0 <fopen@plt>
  4022f0:	mov    r15,rax
  4022f3:	mov    rbx,rsp
  4022f6:	mov    rdi,rbx
  4022f9:	mov    esi,0x64
  4022fe:	mov    rdx,rax
  402301:	call   4020b0 <fgets_unlocked@plt>
  402306:	test   rax,rax
  402309:	je     402378 <main@@Base+0x188>
  40230b:	lea    r12,[rip+0x1d26]        # 404038 <_IO_stdin_used@@Base+0x38>
  402312:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40231c:	nop    DWORD PTR [rax+0x0]
  402320:	mov    rdi,rbx
  402323:	mov    rsi,r12
  402326:	call   4020f0 <strtok@plt>
  40232b:	mov    rdi,rbx
  40232e:	mov    rsi,rax
  402331:	call   402050 <strcpy@plt>
  402336:	xor    edi,edi
  402338:	mov    rsi,r12
  40233b:	call   4020f0 <strtok@plt>
  402340:	mov    rdi,rbx
  402343:	mov    rsi,rax
  402346:	call   402050 <strcpy@plt>
  40234b:	mov    rdi,rbx
  40234e:	call   402080 <strlen@plt>
  402353:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
  402358:	mov    rdi,r14
  40235b:	mov    rsi,rbx
  40235e:	call   402930 <avl_insere@@Base>
  402363:	mov    rdi,rbx
  402366:	mov    esi,0x64
  40236b:	mov    rdx,r15
  40236e:	call   4020b0 <fgets_unlocked@plt>
  402373:	test   rax,rax
  402376:	jne    402320 <main@@Base+0x130>
  402378:	mov    rdi,r15
  40237b:	call   402070 <fclose@plt>
  402380:	lea    rsi,[rip+0x1cb3]        # 40403a <_IO_stdin_used@@Base+0x3a>
  402387:	mov    rdi,r14
  40238a:	call   402880 <avl_pesquisa@@Base>
  40238f:	test   rax,rax
  402392:	je     4023a8 <main@@Base+0x1b8>
  402394:	mov    rsi,QWORD PTR [rax]
  402397:	mov    edx,DWORD PTR [rax+0x1c]
  40239a:	lea    rdi,[rip+0x1ca2]        # 404043 <_IO_stdin_used@@Base+0x43>
  4023a1:	xor    eax,eax
  4023a3:	call   402090 <printf@plt>
  4023a8:	lea    rsi,[rip+0x1c9d]        # 40404c <_IO_stdin_used@@Base+0x4c>
  4023af:	mov    rdi,r14
  4023b2:	call   402880 <avl_pesquisa@@Base>
  4023b7:	test   rax,rax
  4023ba:	je     4023d0 <main@@Base+0x1e0>
  4023bc:	mov    rsi,QWORD PTR [rax]
  4023bf:	mov    edx,DWORD PTR [rax+0x1c]
  4023c2:	lea    rdi,[rip+0x1c7a]        # 404043 <_IO_stdin_used@@Base+0x43>
  4023c9:	xor    eax,eax
  4023cb:	call   402090 <printf@plt>
  4023d0:	lea    rsi,[rip+0x1c7b]        # 404052 <_IO_stdin_used@@Base+0x52>
  4023d7:	mov    rdi,r14
  4023da:	call   402880 <avl_pesquisa@@Base>
  4023df:	test   rax,rax
  4023e2:	je     4023f8 <main@@Base+0x208>
  4023e4:	mov    rsi,QWORD PTR [rax]
  4023e7:	mov    edx,DWORD PTR [rax+0x1c]
  4023ea:	lea    rdi,[rip+0x1c52]        # 404043 <_IO_stdin_used@@Base+0x43>
  4023f1:	xor    eax,eax
  4023f3:	call   402090 <printf@plt>
  4023f8:	xor    eax,eax
  4023fa:	add    rsp,0x68
  4023fe:	pop    rbx
  4023ff:	pop    r12
  402401:	pop    r14
  402403:	pop    r15
  402405:	ret    
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402410 <avl_nova@@Base>:
  402410:	push   rax
  402411:	mov    edi,0x8
  402416:	call   4020c0 <malloc@plt>
  40241b:	test   rax,rax
  40241e:	je     402429 <avl_nova@@Base+0x19>
  402420:	mov    QWORD PTR [rax],0x0
  402427:	pop    rcx
  402428:	ret    
  402429:	xor    eax,eax
  40242b:	pop    rcx
  40242c:	ret    
  40242d:	nop    DWORD PTR [rax]

0000000000402430 <avl_apaga@@Base>:
  402430:	test   rdi,rdi
  402433:	je     40246c <avl_apaga@@Base+0x3c>
  402435:	push   rbx
  402436:	mov    rbx,rdi
  402439:	mov    rax,QWORD PTR [rdi]
  40243c:	test   rax,rax
  40243f:	je     402463 <avl_apaga@@Base+0x33>
  402441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]
  402450:	mov    rsi,QWORD PTR [rax]
  402453:	mov    rdi,rax
  402456:	call   402470 <avl_remove_impl@@Base>
  40245b:	mov    QWORD PTR [rbx],rax
  40245e:	test   rax,rax
  402461:	jne    402450 <avl_apaga@@Base+0x20>
  402463:	mov    rdi,rbx
  402466:	pop    rbx
  402467:	jmp    402030 <free@plt>
  40246c:	ret    
  40246d:	nop    DWORD PTR [rax]

0000000000402470 <avl_remove_impl@@Base>:
  402470:	push   r15
  402472:	push   r14
  402474:	push   r12
  402476:	push   rbx
  402477:	push   rax
  402478:	test   rdi,rdi
  40247b:	je     40286c <avl_remove_impl@@Base+0x3fc>
  402481:	mov    rbx,rsi
  402484:	mov    r12,rdi
  402487:	mov    r14,QWORD PTR [rdi]
  40248a:	mov    rdi,rsi
  40248d:	mov    rsi,r14
  402490:	call   4020a0 <strcmp@plt>
  402495:	test   eax,eax
  402497:	jns    4024a5 <avl_remove_impl@@Base+0x35>
  402499:	lea    r15,[r12+0x8]
  40249e:	mov    rdi,QWORD PTR [r12+0x8]
  4024a3:	jmp    4024b5 <avl_remove_impl@@Base+0x45>
  4024a5:	je     4026e4 <avl_remove_impl@@Base+0x274>
  4024ab:	lea    r15,[r12+0x10]
  4024b0:	mov    rdi,QWORD PTR [r12+0x10]
  4024b5:	mov    rsi,rbx
  4024b8:	call   402470 <avl_remove_impl@@Base>
  4024bd:	mov    QWORD PTR [r15],rax
  4024c0:	mov    rdx,QWORD PTR [r12+0x8]
  4024c5:	test   rdx,rdx
  4024c8:	je     4024cf <avl_remove_impl@@Base+0x5f>
  4024ca:	mov    edi,DWORD PTR [rdx+0x18]
  4024cd:	jmp    4024d4 <avl_remove_impl@@Base+0x64>
  4024cf:	mov    edi,0xffffffff
  4024d4:	mov    rsi,QWORD PTR [r12+0x10]
  4024d9:	test   rsi,rsi
  4024dc:	je     4024ff <avl_remove_impl@@Base+0x8f>
  4024de:	mov    eax,DWORD PTR [rsi+0x18]
  4024e1:	cmp    edi,eax
  4024e3:	cmovge eax,edi
  4024e6:	inc    eax
  4024e8:	lea    r8,[r12+0x18]
  4024ed:	mov    DWORD PTR [r12+0x18],eax
  4024f2:	mov    eax,DWORD PTR [rsi+0x18]
  4024f5:	test   rdx,rdx
  4024f8:	je     40251b <avl_remove_impl@@Base+0xab>
  4024fa:	mov    edi,DWORD PTR [rdx+0x18]
  4024fd:	jmp    402520 <avl_remove_impl@@Base+0xb0>
  4024ff:	cmp    edi,0xfffffffe
  402502:	mov    eax,0xffffffff
  402507:	cmovle edi,eax
  40250a:	inc    edi
  40250c:	lea    r8,[r12+0x18]
  402511:	mov    DWORD PTR [r12+0x18],edi
  402516:	test   rdx,rdx
  402519:	jne    4024fa <avl_remove_impl@@Base+0x8a>
  40251b:	mov    edi,0xffffffff
  402520:	sub    eax,edi
  402522:	cmp    eax,0x2
  402525:	jl     4025ff <avl_remove_impl@@Base+0x18f>
  40252b:	test   rsi,rsi
  40252e:	je     40274c <avl_remove_impl@@Base+0x2dc>
  402534:	mov    rax,QWORD PTR [rsi+0x10]
  402538:	mov    edx,0xffffffff
  40253d:	mov    edi,0xffffffff
  402542:	test   rax,rax
  402545:	je     40254a <avl_remove_impl@@Base+0xda>
  402547:	mov    edi,DWORD PTR [rax+0x18]
  40254a:	mov    rax,QWORD PTR [rsi+0x8]
  40254e:	test   rax,rax
  402551:	je     402556 <avl_remove_impl@@Base+0xe6>
  402553:	mov    edx,DWORD PTR [rax+0x18]
  402556:	cmp    edi,edx
  402558:	jge    402754 <avl_remove_impl@@Base+0x2e4>
  40255e:	mov    rbx,QWORD PTR [rax+0x10]
  402562:	mov    QWORD PTR [rax+0x10],rsi
  402566:	mov    QWORD PTR [rsi+0x8],rbx
  40256a:	mov    edx,0xffffffff
  40256f:	mov    edi,0xffffffff
  402574:	test   rbx,rbx
  402577:	je     40257c <avl_remove_impl@@Base+0x10c>
  402579:	mov    edi,DWORD PTR [rbx+0x18]
  40257c:	mov    rcx,QWORD PTR [rsi+0x10]
  402580:	test   rcx,rcx
  402583:	je     402588 <avl_remove_impl@@Base+0x118>
  402585:	mov    edx,DWORD PTR [rcx+0x18]
  402588:	cmp    edi,edx
  40258a:	cmovge edx,edi
  40258d:	inc    edx
  40258f:	mov    DWORD PTR [rsi+0x18],edx
  402592:	mov    rdi,QWORD PTR [rax+0x8]
  402596:	mov    esi,0xffffffff
  40259b:	mov    ebx,0xffffffff
  4025a0:	test   rdi,rdi
  4025a3:	je     4025a8 <avl_remove_impl@@Base+0x138>
  4025a5:	mov    ebx,DWORD PTR [rdi+0x18]
  4025a8:	cmp    ebx,edx
  4025aa:	cmovge edx,ebx
  4025ad:	inc    edx
  4025af:	mov    DWORD PTR [rax+0x18],edx
  4025b2:	mov    QWORD PTR [rax+0x8],r12
  4025b6:	mov    QWORD PTR [r12+0x10],rdi
  4025bb:	mov    rcx,QWORD PTR [r12+0x8]
  4025c0:	test   rcx,rcx
  4025c3:	je     4025c8 <avl_remove_impl@@Base+0x158>
  4025c5:	mov    esi,DWORD PTR [rcx+0x18]
  4025c8:	mov    edx,0xffffffff
  4025cd:	mov    ebx,0xffffffff
  4025d2:	test   rdi,rdi
  4025d5:	je     4025da <avl_remove_impl@@Base+0x16a>
  4025d7:	mov    ebx,DWORD PTR [rdi+0x18]
  4025da:	cmp    esi,ebx
  4025dc:	cmovge ebx,esi
  4025df:	inc    ebx
  4025e1:	mov    DWORD PTR [r8],ebx
  4025e4:	mov    rcx,QWORD PTR [rax+0x10]
  4025e8:	test   rcx,rcx
  4025eb:	je     4025f0 <avl_remove_impl@@Base+0x180>
  4025ed:	mov    edx,DWORD PTR [rcx+0x18]
  4025f0:	cmp    ebx,edx
  4025f2:	cmovge edx,ebx
  4025f5:	inc    edx
  4025f7:	mov    DWORD PTR [rax+0x18],edx
  4025fa:	jmp    40286e <avl_remove_impl@@Base+0x3fe>
  4025ff:	cmp    eax,0xfffffffe
  402602:	jg     4026dc <avl_remove_impl@@Base+0x26c>
  402608:	test   rdx,rdx
  40260b:	je     4027ab <avl_remove_impl@@Base+0x33b>
  402611:	mov    rax,QWORD PTR [rdx+0x10]
  402615:	mov    esi,0xffffffff
  40261a:	mov    edi,0xffffffff
  40261f:	test   rax,rax
  402622:	je     402627 <avl_remove_impl@@Base+0x1b7>
  402624:	mov    edi,DWORD PTR [rax+0x18]
  402627:	mov    rcx,QWORD PTR [rdx+0x8]
  40262b:	test   rcx,rcx
  40262e:	je     402633 <avl_remove_impl@@Base+0x1c3>
  402630:	mov    esi,DWORD PTR [rcx+0x18]
  402633:	cmp    edi,esi
  402635:	jle    4027b3 <avl_remove_impl@@Base+0x343>
  40263b:	mov    rdi,QWORD PTR [rax+0x8]
  40263f:	mov    QWORD PTR [rax+0x8],rdx
  402643:	mov    QWORD PTR [rdx+0x10],rdi
  402647:	mov    rcx,QWORD PTR [rdx+0x8]
  40264b:	mov    esi,0xffffffff
  402650:	mov    ebx,0xffffffff
  402655:	test   rcx,rcx
  402658:	je     40265d <avl_remove_impl@@Base+0x1ed>
  40265a:	mov    ebx,DWORD PTR [rcx+0x18]
  40265d:	test   rdi,rdi
  402660:	je     402665 <avl_remove_impl@@Base+0x1f5>
  402662:	mov    esi,DWORD PTR [rdi+0x18]
  402665:	cmp    ebx,esi
  402667:	cmovge esi,ebx
  40266a:	inc    esi
  40266c:	mov    DWORD PTR [rdx+0x18],esi
  40266f:	mov    rdi,QWORD PTR [rax+0x10]
  402673:	mov    edx,0xffffffff
  402678:	mov    ebx,0xffffffff
  40267d:	test   rdi,rdi
  402680:	je     402685 <avl_remove_impl@@Base+0x215>
  402682:	mov    ebx,DWORD PTR [rdi+0x18]
  402685:	cmp    esi,ebx
  402687:	cmovge ebx,esi
  40268a:	inc    ebx
  40268c:	mov    DWORD PTR [rax+0x18],ebx
  40268f:	mov    QWORD PTR [rax+0x10],r12
  402693:	mov    QWORD PTR [r12+0x8],rdi
  402698:	test   rdi,rdi
  40269b:	je     4026a0 <avl_remove_impl@@Base+0x230>
  40269d:	mov    edx,DWORD PTR [rdi+0x18]
  4026a0:	mov    rcx,QWORD PTR [r12+0x10]
  4026a5:	mov    edi,0xffffffff
  4026aa:	mov    esi,0xffffffff
  4026af:	test   rcx,rcx
  4026b2:	je     4026b7 <avl_remove_impl@@Base+0x247>
  4026b4:	mov    esi,DWORD PTR [rcx+0x18]
  4026b7:	cmp    edx,esi
  4026b9:	cmovge esi,edx
  4026bc:	inc    esi
  4026be:	mov    DWORD PTR [r8],esi
  4026c1:	mov    rcx,QWORD PTR [rax+0x8]
  4026c5:	test   rcx,rcx
  4026c8:	je     4026cd <avl_remove_impl@@Base+0x25d>
  4026ca:	mov    edi,DWORD PTR [rcx+0x18]
  4026cd:	cmp    edi,esi
  4026cf:	cmovge esi,edi
  4026d2:	inc    esi
  4026d4:	mov    DWORD PTR [rax+0x18],esi
  4026d7:	jmp    40286e <avl_remove_impl@@Base+0x3fe>
  4026dc:	mov    rax,r12
  4026df:	jmp    40286e <avl_remove_impl@@Base+0x3fe>
  4026e4:	mov    r15,QWORD PTR [r12+0x8]
  4026e9:	mov    rax,QWORD PTR [r12+0x10]
  4026ee:	test   r15,r15
  4026f1:	je     4027f3 <avl_remove_impl@@Base+0x383>
  4026f7:	test   rax,rax
  4026fa:	je     4027fb <avl_remove_impl@@Base+0x38b>
  402700:	lea    r15,[r12+0x10]
  402705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40270f:	nop
  402710:	mov    rbx,rax
  402713:	mov    rax,QWORD PTR [rax+0x8]
  402717:	test   rax,rax
  40271a:	jne    402710 <avl_remove_impl@@Base+0x2a0>
  40271c:	mov    rdi,QWORD PTR [rbx]
  40271f:	call   402080 <strlen@plt>
  402724:	lea    rsi,[rax+0x1]
  402728:	mov    rdi,r14
  40272b:	call   4020d0 <realloc@plt>
  402730:	mov    QWORD PTR [r12],rax
  402734:	mov    rsi,QWORD PTR [rbx]
  402737:	mov    rdi,rax
  40273a:	call   402050 <strcpy@plt>
  40273f:	mov    rdi,QWORD PTR [r12+0x10]
  402744:	mov    rsi,QWORD PTR [rbx]
  402747:	jmp    4024b8 <avl_remove_impl@@Base+0x48>
  40274c:	mov    rax,QWORD PTR ds:0x8
  402754:	mov    QWORD PTR [rsi+0x8],r12
  402758:	mov    QWORD PTR [r12+0x10],rax
  40275d:	mov    rbx,QWORD PTR [r12+0x8]
  402762:	mov    edx,0xffffffff
  402767:	mov    edi,0xffffffff
  40276c:	test   rbx,rbx
  40276f:	je     402774 <avl_remove_impl@@Base+0x304>
  402771:	mov    edi,DWORD PTR [rbx+0x18]
  402774:	test   rax,rax
  402777:	je     40277c <avl_remove_impl@@Base+0x30c>
  402779:	mov    edx,DWORD PTR [rax+0x18]
  40277c:	cmp    edi,edx
  40277e:	cmovge edx,edi
  402781:	inc    edx
  402783:	mov    DWORD PTR [r8],edx
  402786:	mov    rax,QWORD PTR [rsi+0x10]
  40278a:	test   rax,rax
  40278d:	je     402794 <avl_remove_impl@@Base+0x324>
  40278f:	mov    eax,DWORD PTR [rax+0x18]
  402792:	jmp    402799 <avl_remove_impl@@Base+0x329>
  402794:	mov    eax,0xffffffff
  402799:	cmp    edx,eax
  40279b:	cmovge eax,edx
  40279e:	inc    eax
  4027a0:	mov    DWORD PTR [rsi+0x18],eax
  4027a3:	mov    rax,rsi
  4027a6:	jmp    40286e <avl_remove_impl@@Base+0x3fe>
  4027ab:	mov    rax,QWORD PTR ds:0x10
  4027b3:	mov    QWORD PTR [rdx+0x10],r12
  4027b7:	mov    QWORD PTR [r12+0x8],rax
  4027bc:	mov    esi,0xffffffff
  4027c1:	mov    edi,0xffffffff
  4027c6:	test   rax,rax
  4027c9:	je     4027ce <avl_remove_impl@@Base+0x35e>
  4027cb:	mov    edi,DWORD PTR [rax+0x18]
  4027ce:	mov    rax,QWORD PTR [r12+0x10]
  4027d3:	test   rax,rax
  4027d6:	je     4027db <avl_remove_impl@@Base+0x36b>
  4027d8:	mov    esi,DWORD PTR [rax+0x18]
  4027db:	cmp    edi,esi
  4027dd:	cmovge esi,edi
  4027e0:	inc    esi
  4027e2:	mov    DWORD PTR [r8],esi
  4027e5:	mov    rax,QWORD PTR [rdx+0x8]
  4027e9:	test   rax,rax
  4027ec:	je     402839 <avl_remove_impl@@Base+0x3c9>
  4027ee:	mov    eax,DWORD PTR [rax+0x18]
  4027f1:	jmp    40283e <avl_remove_impl@@Base+0x3ce>
  4027f3:	mov    r15,rax
  4027f6:	test   rax,rax
  4027f9:	je     40284d <avl_remove_impl@@Base+0x3dd>
  4027fb:	mov    rdi,QWORD PTR [r15]
  4027fe:	call   402080 <strlen@plt>
  402803:	lea    rsi,[rax+0x1]
  402807:	mov    rdi,r14
  40280a:	call   4020d0 <realloc@plt>
  40280f:	mov    QWORD PTR [r12],rax
  402813:	mov    rsi,QWORD PTR [r15]
  402816:	mov    rdi,rax
  402819:	call   402050 <strcpy@plt>
  40281e:	vmovups xmm0,XMMWORD PTR [r15+0x8]
  402824:	vmovups XMMWORD PTR [r12+0x8],xmm0
  40282b:	mov    eax,DWORD PTR [r15+0x18]
  40282f:	mov    DWORD PTR [r12+0x18],eax
  402834:	mov    r14,QWORD PTR [r15]
  402837:	jmp    402853 <avl_remove_impl@@Base+0x3e3>
  402839:	mov    eax,0xffffffff
  40283e:	cmp    eax,esi
  402840:	cmovge esi,eax
  402843:	inc    esi
  402845:	mov    DWORD PTR [rdx+0x18],esi
  402848:	mov    rax,rdx
  40284b:	jmp    40286e <avl_remove_impl@@Base+0x3fe>
  40284d:	mov    r15,r12
  402850:	xor    r12d,r12d
  402853:	mov    rdi,r14
  402856:	call   402030 <free@plt>
  40285b:	mov    rdi,r15
  40285e:	call   402030 <free@plt>
  402863:	test   r12,r12
  402866:	jne    4024c0 <avl_remove_impl@@Base+0x50>
  40286c:	xor    eax,eax
  40286e:	add    rsp,0x8
  402872:	pop    rbx
  402873:	pop    r12
  402875:	pop    r14
  402877:	pop    r15
  402879:	ret    
  40287a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402880 <avl_pesquisa@@Base>:
  402880:	push   r14
  402882:	push   rbx
  402883:	push   rax
  402884:	xor    ebx,ebx
  402886:	test   rdi,rdi
  402889:	je     4028cb <avl_pesquisa@@Base+0x4b>
  40288b:	mov    r14,rsi
  40288e:	test   rsi,rsi
  402891:	je     4028cb <avl_pesquisa@@Base+0x4b>
  402893:	mov    rbx,QWORD PTR [rdi]
  402896:	test   rbx,rbx
  402899:	jne    4028ac <avl_pesquisa@@Base+0x2c>
  40289b:	jmp    4028c9 <avl_pesquisa@@Base+0x49>
  40289d:	nop    DWORD PTR [rax]
  4028a0:	add    rbx,0x8
  4028a4:	mov    rbx,QWORD PTR [rbx]
  4028a7:	test   rbx,rbx
  4028aa:	je     4028c9 <avl_pesquisa@@Base+0x49>
  4028ac:	mov    rsi,QWORD PTR [rbx]
  4028af:	mov    rdi,r14
  4028b2:	call   4020a0 <strcmp@plt>
  4028b7:	test   eax,eax
  4028b9:	js     4028a0 <avl_pesquisa@@Base+0x20>
  4028bb:	je     4028cb <avl_pesquisa@@Base+0x4b>
  4028bd:	add    rbx,0x10
  4028c1:	mov    rbx,QWORD PTR [rbx]
  4028c4:	test   rbx,rbx
  4028c7:	jne    4028ac <avl_pesquisa@@Base+0x2c>
  4028c9:	xor    ebx,ebx
  4028cb:	mov    rax,rbx
  4028ce:	add    rsp,0x8
  4028d2:	pop    rbx
  4028d3:	pop    r14
  4028d5:	ret    
  4028d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004028e0 <avl_pesquisa_impl@@Base>:
  4028e0:	push   r14
  4028e2:	push   rbx
  4028e3:	push   rax
  4028e4:	test   rdi,rdi
  4028e7:	je     402923 <avl_pesquisa_impl@@Base+0x43>
  4028e9:	mov    r14,rsi
  4028ec:	mov    rbx,rdi
  4028ef:	jmp    40290c <avl_pesquisa_impl@@Base+0x2c>
  4028f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	add    rbx,0x8
  402904:	mov    rbx,QWORD PTR [rbx]
  402907:	test   rbx,rbx
  40290a:	je     402923 <avl_pesquisa_impl@@Base+0x43>
  40290c:	mov    rsi,QWORD PTR [rbx]
  40290f:	mov    rdi,r14
  402912:	call   4020a0 <strcmp@plt>
  402917:	test   eax,eax
  402919:	js     402900 <avl_pesquisa_impl@@Base+0x20>
  40291b:	je     402925 <avl_pesquisa_impl@@Base+0x45>
  40291d:	add    rbx,0x10
  402921:	jmp    402904 <avl_pesquisa_impl@@Base+0x24>
  402923:	xor    ebx,ebx
  402925:	mov    rax,rbx
  402928:	add    rsp,0x8
  40292c:	pop    rbx
  40292d:	pop    r14
  40292f:	ret    

0000000000402930 <avl_insere@@Base>:
  402930:	mov    eax,0xffffffff
  402935:	test   rdi,rdi
  402938:	je     402951 <avl_insere@@Base+0x21>
  40293a:	test   rsi,rsi
  40293d:	je     402951 <avl_insere@@Base+0x21>
  40293f:	push   rbx
  402940:	mov    rbx,rdi
  402943:	mov    rdi,QWORD PTR [rdi]
  402946:	call   402960 <avl_insere_impl@@Base>
  40294b:	mov    QWORD PTR [rbx],rax
  40294e:	xor    eax,eax
  402950:	pop    rbx
  402951:	ret    
  402952:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40295c:	nop    DWORD PTR [rax+0x0]

0000000000402960 <avl_insere_impl@@Base>:
  402960:	push   r15
  402962:	push   r14
  402964:	push   rbx
  402965:	mov    rbx,rsi
  402968:	test   rdi,rdi
  40296b:	je     402999 <avl_insere_impl@@Base+0x39>
  40296d:	mov    r15,rdi
  402970:	mov    rsi,QWORD PTR [rdi]
  402973:	mov    rdi,rbx
  402976:	call   4020a0 <strcmp@plt>
  40297b:	test   eax,eax
  40297d:	jns    4029e2 <avl_insere_impl@@Base+0x82>
  40297f:	mov    rdi,QWORD PTR [r15+0x8]
  402983:	mov    rsi,rbx
  402986:	call   402960 <avl_insere_impl@@Base>
  40298b:	mov    QWORD PTR [r15+0x8],rax
  40298f:	test   rax,rax
  402992:	je     402a01 <avl_insere_impl@@Base+0xa1>
  402994:	mov    edi,DWORD PTR [rax+0x18]
  402997:	jmp    402a06 <avl_insere_impl@@Base+0xa6>
  402999:	mov    edi,0x20
  40299e:	call   4020c0 <malloc@plt>
  4029a3:	mov    r14,rax
  4029a6:	mov    rdi,rbx
  4029a9:	call   402080 <strlen@plt>
  4029ae:	lea    rdi,[rax+0x1]
  4029b2:	call   4020c0 <malloc@plt>
  4029b7:	mov    QWORD PTR [r14],rax
  4029ba:	mov    rdi,rax
  4029bd:	mov    rsi,rbx
  4029c0:	call   402050 <strcpy@plt>
  4029c5:	vxorps xmm0,xmm0,xmm0
  4029c9:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4029cf:	movabs rax,0x100000000
  4029d9:	mov    QWORD PTR [r14+0x18],rax
  4029dd:	jmp    402ccf <avl_insere_impl@@Base+0x36f>
  4029e2:	je     402c11 <avl_insere_impl@@Base+0x2b1>
  4029e8:	mov    rdi,QWORD PTR [r15+0x10]
  4029ec:	mov    rsi,rbx
  4029ef:	call   402960 <avl_insere_impl@@Base>
  4029f4:	mov    QWORD PTR [r15+0x10],rax
  4029f8:	mov    rax,QWORD PTR [r15+0x8]
  4029fc:	test   rax,rax
  4029ff:	jne    402994 <avl_insere_impl@@Base+0x34>
  402a01:	mov    edi,0xffffffff
  402a06:	mov    rdx,QWORD PTR [r15+0x10]
  402a0a:	test   rdx,rdx
  402a0d:	je     402a2e <avl_insere_impl@@Base+0xce>
  402a0f:	mov    esi,DWORD PTR [rdx+0x18]
  402a12:	cmp    edi,esi
  402a14:	cmovge esi,edi
  402a17:	inc    esi
  402a19:	lea    rcx,[r15+0x18]
  402a1d:	mov    DWORD PTR [r15+0x18],esi
  402a21:	mov    esi,DWORD PTR [rdx+0x18]
  402a24:	test   rax,rax
  402a27:	je     402a48 <avl_insere_impl@@Base+0xe8>
  402a29:	mov    edi,DWORD PTR [rax+0x18]
  402a2c:	jmp    402a4d <avl_insere_impl@@Base+0xed>
  402a2e:	cmp    edi,0xfffffffe
  402a31:	mov    esi,0xffffffff
  402a36:	cmovle edi,esi
  402a39:	inc    edi
  402a3b:	lea    rcx,[r15+0x18]
  402a3f:	mov    DWORD PTR [r15+0x18],edi
  402a43:	test   rax,rax
  402a46:	jne    402a29 <avl_insere_impl@@Base+0xc9>
  402a48:	mov    edi,0xffffffff
  402a4d:	sub    esi,edi
  402a4f:	cmp    esi,0x2
  402a52:	jl     402b2c <avl_insere_impl@@Base+0x1cc>
  402a58:	test   rdx,rdx
  402a5b:	je     402c1d <avl_insere_impl@@Base+0x2bd>
  402a61:	mov    rdi,QWORD PTR [rdx+0x10]
  402a65:	mov    eax,0xffffffff
  402a6a:	mov    esi,0xffffffff
  402a6f:	test   rdi,rdi
  402a72:	je     402a77 <avl_insere_impl@@Base+0x117>
  402a74:	mov    esi,DWORD PTR [rdi+0x18]
  402a77:	mov    r14,QWORD PTR [rdx+0x8]
  402a7b:	test   r14,r14
  402a7e:	je     402a84 <avl_insere_impl@@Base+0x124>
  402a80:	mov    eax,DWORD PTR [r14+0x18]
  402a84:	cmp    esi,eax
  402a86:	jge    402c25 <avl_insere_impl@@Base+0x2c5>
  402a8c:	mov    rdi,QWORD PTR [r14+0x10]
  402a90:	mov    QWORD PTR [r14+0x10],rdx
  402a94:	mov    QWORD PTR [rdx+0x8],rdi
  402a98:	mov    eax,0xffffffff
  402a9d:	mov    esi,0xffffffff
  402aa2:	test   rdi,rdi
  402aa5:	je     402aaa <avl_insere_impl@@Base+0x14a>
  402aa7:	mov    esi,DWORD PTR [rdi+0x18]
  402aaa:	mov    rdi,QWORD PTR [rdx+0x10]
  402aae:	test   rdi,rdi
  402ab1:	je     402ab6 <avl_insere_impl@@Base+0x156>
  402ab3:	mov    eax,DWORD PTR [rdi+0x18]
  402ab6:	cmp    esi,eax
  402ab8:	cmovge eax,esi
  402abb:	inc    eax
  402abd:	mov    DWORD PTR [rdx+0x18],eax
  402ac0:	mov    rsi,QWORD PTR [r14+0x8]
  402ac4:	mov    edx,0xffffffff
  402ac9:	mov    edi,0xffffffff
  402ace:	test   rsi,rsi
  402ad1:	je     402ad6 <avl_insere_impl@@Base+0x176>
  402ad3:	mov    edi,DWORD PTR [rsi+0x18]
  402ad6:	cmp    edi,eax
  402ad8:	cmovge eax,edi
  402adb:	inc    eax
  402add:	mov    DWORD PTR [r14+0x18],eax
  402ae1:	mov    QWORD PTR [r14+0x8],r15
  402ae5:	mov    QWORD PTR [r15+0x10],rsi
  402ae9:	mov    rax,QWORD PTR [r15+0x8]
  402aed:	test   rax,rax
  402af0:	je     402af5 <avl_insere_impl@@Base+0x195>
  402af2:	mov    edx,DWORD PTR [rax+0x18]
  402af5:	mov    eax,0xffffffff
  402afa:	mov    edi,0xffffffff
  402aff:	test   rsi,rsi
  402b02:	je     402b07 <avl_insere_impl@@Base+0x1a7>
  402b04:	mov    edi,DWORD PTR [rsi+0x18]
  402b07:	cmp    edx,edi
  402b09:	cmovge edi,edx
  402b0c:	inc    edi
  402b0e:	mov    DWORD PTR [rcx],edi
  402b10:	mov    rcx,QWORD PTR [r14+0x10]
  402b14:	test   rcx,rcx
  402b17:	je     402b1c <avl_insere_impl@@Base+0x1bc>
  402b19:	mov    eax,DWORD PTR [rcx+0x18]
  402b1c:	cmp    edi,eax
  402b1e:	cmovge eax,edi
  402b21:	inc    eax
  402b23:	mov    DWORD PTR [r14+0x18],eax
  402b27:	jmp    402ccf <avl_insere_impl@@Base+0x36f>
  402b2c:	cmp    esi,0xfffffffe
  402b2f:	jg     402c09 <avl_insere_impl@@Base+0x2a9>
  402b35:	test   rax,rax
  402b38:	je     402c77 <avl_insere_impl@@Base+0x317>
  402b3e:	mov    r14,QWORD PTR [rax+0x10]
  402b42:	mov    edx,0xffffffff
  402b47:	mov    esi,0xffffffff
  402b4c:	test   r14,r14
  402b4f:	je     402b55 <avl_insere_impl@@Base+0x1f5>
  402b51:	mov    esi,DWORD PTR [r14+0x18]
  402b55:	mov    rdi,QWORD PTR [rax+0x8]
  402b59:	test   rdi,rdi
  402b5c:	je     402b61 <avl_insere_impl@@Base+0x201>
  402b5e:	mov    edx,DWORD PTR [rdi+0x18]
  402b61:	cmp    esi,edx
  402b63:	jle    402c7f <avl_insere_impl@@Base+0x31f>
  402b69:	mov    rsi,QWORD PTR [r14+0x8]
  402b6d:	mov    QWORD PTR [r14+0x8],rax
  402b71:	mov    QWORD PTR [rax+0x10],rsi
  402b75:	mov    rbx,QWORD PTR [rax+0x8]
  402b79:	mov    edx,0xffffffff
  402b7e:	mov    edi,0xffffffff
  402b83:	test   rbx,rbx
  402b86:	je     402b8b <avl_insere_impl@@Base+0x22b>
  402b88:	mov    edi,DWORD PTR [rbx+0x18]
  402b8b:	test   rsi,rsi
  402b8e:	je     402b93 <avl_insere_impl@@Base+0x233>
  402b90:	mov    edx,DWORD PTR [rsi+0x18]
  402b93:	cmp    edi,edx
  402b95:	cmovge edx,edi
  402b98:	inc    edx
  402b9a:	mov    DWORD PTR [rax+0x18],edx
  402b9d:	mov    rsi,QWORD PTR [r14+0x10]
  402ba1:	mov    eax,0xffffffff
  402ba6:	mov    edi,0xffffffff
  402bab:	test   rsi,rsi
  402bae:	je     402bb3 <avl_insere_impl@@Base+0x253>
  402bb0:	mov    edi,DWORD PTR [rsi+0x18]
  402bb3:	cmp    edx,edi
  402bb5:	cmovge edi,edx
  402bb8:	inc    edi
  402bba:	mov    DWORD PTR [r14+0x18],edi
  402bbe:	mov    QWORD PTR [r14+0x10],r15
  402bc2:	mov    QWORD PTR [r15+0x8],rsi
  402bc6:	test   rsi,rsi
  402bc9:	je     402bce <avl_insere_impl@@Base+0x26e>
  402bcb:	mov    eax,DWORD PTR [rsi+0x18]
  402bce:	mov    rdi,QWORD PTR [r15+0x10]
  402bd2:	mov    esi,0xffffffff
  402bd7:	mov    edx,0xffffffff
  402bdc:	test   rdi,rdi
  402bdf:	je     402be4 <avl_insere_impl@@Base+0x284>
  402be1:	mov    edx,DWORD PTR [rdi+0x18]
  402be4:	cmp    eax,edx
  402be6:	cmovge edx,eax
  402be9:	inc    edx
  402beb:	mov    DWORD PTR [rcx],edx
  402bed:	mov    rax,QWORD PTR [r14+0x8]
  402bf1:	test   rax,rax
  402bf4:	je     402bf9 <avl_insere_impl@@Base+0x299>
  402bf6:	mov    esi,DWORD PTR [rax+0x18]
  402bf9:	cmp    esi,edx
  402bfb:	cmovge edx,esi
  402bfe:	inc    edx
  402c00:	mov    DWORD PTR [r14+0x18],edx
  402c04:	jmp    402ccf <avl_insere_impl@@Base+0x36f>
  402c09:	mov    r14,r15
  402c0c:	jmp    402ccf <avl_insere_impl@@Base+0x36f>
  402c11:	inc    DWORD PTR [r15+0x1c]
  402c15:	mov    r14,r15
  402c18:	jmp    402ccf <avl_insere_impl@@Base+0x36f>
  402c1d:	mov    r14,QWORD PTR ds:0x8
  402c25:	mov    QWORD PTR [rdx+0x8],r15
  402c29:	mov    QWORD PTR [r15+0x10],r14
  402c2d:	mov    rdi,QWORD PTR [r15+0x8]
  402c31:	mov    eax,0xffffffff
  402c36:	mov    esi,0xffffffff
  402c3b:	test   rdi,rdi
  402c3e:	je     402c43 <avl_insere_impl@@Base+0x2e3>
  402c40:	mov    esi,DWORD PTR [rdi+0x18]
  402c43:	test   r14,r14
  402c46:	je     402c4c <avl_insere_impl@@Base+0x2ec>
  402c48:	mov    eax,DWORD PTR [r14+0x18]
  402c4c:	cmp    esi,eax
  402c4e:	cmovge eax,esi
  402c51:	inc    eax
  402c53:	mov    DWORD PTR [rcx],eax
  402c55:	mov    rcx,QWORD PTR [rdx+0x10]
  402c59:	test   rcx,rcx
  402c5c:	je     402c63 <avl_insere_impl@@Base+0x303>
  402c5e:	mov    ecx,DWORD PTR [rcx+0x18]
  402c61:	jmp    402c68 <avl_insere_impl@@Base+0x308>
  402c63:	mov    ecx,0xffffffff
  402c68:	cmp    eax,ecx
  402c6a:	cmovge ecx,eax
  402c6d:	inc    ecx
  402c6f:	mov    DWORD PTR [rdx+0x18],ecx
  402c72:	mov    r14,rdx
  402c75:	jmp    402ccf <avl_insere_impl@@Base+0x36f>
  402c77:	mov    r14,QWORD PTR ds:0x10
  402c7f:	mov    QWORD PTR [rax+0x10],r15
  402c83:	mov    QWORD PTR [r15+0x8],r14
  402c87:	mov    edx,0xffffffff
  402c8c:	mov    esi,0xffffffff
  402c91:	test   r14,r14
  402c94:	je     402c9a <avl_insere_impl@@Base+0x33a>
  402c96:	mov    esi,DWORD PTR [r14+0x18]
  402c9a:	mov    rdi,QWORD PTR [r15+0x10]
  402c9e:	test   rdi,rdi
  402ca1:	je     402ca6 <avl_insere_impl@@Base+0x346>
  402ca3:	mov    edx,DWORD PTR [rdi+0x18]
  402ca6:	cmp    esi,edx
  402ca8:	cmovge edx,esi
  402cab:	inc    edx
  402cad:	mov    DWORD PTR [rcx],edx
  402caf:	mov    rcx,QWORD PTR [rax+0x8]
  402cb3:	test   rcx,rcx
  402cb6:	je     402cbd <avl_insere_impl@@Base+0x35d>
  402cb8:	mov    ecx,DWORD PTR [rcx+0x18]
  402cbb:	jmp    402cc2 <avl_insere_impl@@Base+0x362>
  402cbd:	mov    ecx,0xffffffff
  402cc2:	cmp    ecx,edx
  402cc4:	cmovge edx,ecx
  402cc7:	inc    edx
  402cc9:	mov    DWORD PTR [rax+0x18],edx
  402ccc:	mov    r14,rax
  402ccf:	mov    rax,r14
  402cd2:	pop    rbx
  402cd3:	pop    r14
  402cd5:	pop    r15
  402cd7:	ret    
  402cd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402ce0 <avl_remove@@Base>:
  402ce0:	mov    eax,0xffffffff
  402ce5:	test   rdi,rdi
  402ce8:	je     402d01 <avl_remove@@Base+0x21>
  402cea:	test   rsi,rsi
  402ced:	je     402d01 <avl_remove@@Base+0x21>
  402cef:	push   rbx
  402cf0:	mov    rbx,rdi
  402cf3:	mov    rdi,QWORD PTR [rdi]
  402cf6:	call   402470 <avl_remove_impl@@Base>
  402cfb:	mov    QWORD PTR [rbx],rax
  402cfe:	xor    eax,eax
  402d00:	pop    rbx
  402d01:	ret    
  402d02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d0c:	nop    DWORD PTR [rax+0x0]

0000000000402d10 <avl_min@@Base>:
  402d10:	test   rdi,rdi
  402d13:	je     402d30 <avl_min@@Base+0x20>
  402d15:	mov    rax,QWORD PTR [rdi]
  402d18:	nop    DWORD PTR [rax+rax*1+0x0]
  402d20:	mov    rcx,rax
  402d23:	mov    rax,QWORD PTR [rax+0x8]
  402d27:	test   rax,rax
  402d2a:	jne    402d20 <avl_min@@Base+0x10>
  402d2c:	mov    rax,QWORD PTR [rcx]
  402d2f:	ret    
  402d30:	xor    eax,eax
  402d32:	ret    
  402d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d3d:	nop    DWORD PTR [rax]

0000000000402d40 <avl_no_valormin@@Base>:
  402d40:	mov    rax,rdi
  402d43:	mov    rdi,QWORD PTR [rdi+0x8]
  402d47:	test   rdi,rdi
  402d4a:	jne    402d40 <avl_no_valormin@@Base>
  402d4c:	ret    
  402d4d:	nop    DWORD PTR [rax]

0000000000402d50 <avl_max@@Base>:
  402d50:	test   rdi,rdi
  402d53:	je     402d70 <avl_max@@Base+0x20>
  402d55:	mov    rax,QWORD PTR [rdi]
  402d58:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	mov    rcx,rax
  402d63:	mov    rax,QWORD PTR [rax+0x10]
  402d67:	test   rax,rax
  402d6a:	jne    402d60 <avl_max@@Base+0x10>
  402d6c:	mov    rax,QWORD PTR [rcx]
  402d6f:	ret    
  402d70:	xor    eax,eax
  402d72:	ret    
  402d73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d7d:	nop    DWORD PTR [rax]

0000000000402d80 <avl_no_valormax@@Base>:
  402d80:	mov    rax,rdi
  402d83:	mov    rdi,QWORD PTR [rdi+0x10]
  402d87:	test   rdi,rdi
  402d8a:	jne    402d80 <avl_no_valormax@@Base>
  402d8c:	ret    
  402d8d:	nop    DWORD PTR [rax]

0000000000402d90 <avl_imprime@@Base>:
  402d90:	test   rdi,rdi
  402d93:	je     402da9 <avl_imprime@@Base+0x19>
  402d95:	push   rax
  402d96:	mov    rdi,QWORD PTR [rdi]
  402d99:	call   402db0 <avl_preordem_impl@@Base>
  402d9e:	mov    edi,0xa
  402da3:	pop    rax
  402da4:	jmp    402040 <putchar@plt>
  402da9:	ret    
  402daa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402db0 <avl_preordem_impl@@Base>:
  402db0:	push   r14
  402db2:	push   rbx
  402db3:	push   rax
  402db4:	test   rdi,rdi
  402db7:	je     402df2 <avl_preordem_impl@@Base+0x42>
  402db9:	mov    rbx,rdi
  402dbc:	lea    r14,[rip+0x129e]        # 404061 <_IO_stdin_used@@Base+0x61>
  402dc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dcd:	nop    DWORD PTR [rax]
  402dd0:	mov    rsi,QWORD PTR [rbx]
  402dd3:	mov    edx,DWORD PTR [rbx+0x1c]
  402dd6:	mov    rdi,r14
  402dd9:	xor    eax,eax
  402ddb:	call   402090 <printf@plt>
  402de0:	mov    rdi,QWORD PTR [rbx+0x8]
  402de4:	call   402db0 <avl_preordem_impl@@Base>
  402de9:	mov    rbx,QWORD PTR [rbx+0x10]
  402ded:	test   rbx,rbx
  402df0:	jne    402dd0 <avl_preordem_impl@@Base+0x20>
  402df2:	add    rsp,0x8
  402df6:	pop    rbx
  402df7:	pop    r14
  402df9:	ret    
  402dfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402e00 <avl_altura@@Base>:
  402e00:	test   rdi,rdi
  402e03:	je     402e09 <avl_altura@@Base+0x9>
  402e05:	mov    eax,DWORD PTR [rdi+0x18]
  402e08:	ret    
  402e09:	mov    eax,0xffffffff
  402e0e:	ret    
  402e0f:	nop

0000000000402e10 <max@@Base>:
  402e10:	mov    eax,esi
  402e12:	cmp    edi,esi
  402e14:	cmovge eax,edi
  402e17:	ret    
  402e18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402e20 <avl_novo_no@@Base>:
  402e20:	push   r14
  402e22:	push   rbx
  402e23:	push   rax
  402e24:	mov    r14,rdi
  402e27:	mov    edi,0x20
  402e2c:	call   4020c0 <malloc@plt>
  402e31:	mov    rbx,rax
  402e34:	mov    rdi,r14
  402e37:	call   402080 <strlen@plt>
  402e3c:	lea    rdi,[rax+0x1]
  402e40:	call   4020c0 <malloc@plt>
  402e45:	mov    QWORD PTR [rbx],rax
  402e48:	mov    rdi,rax
  402e4b:	mov    rsi,r14
  402e4e:	call   402050 <strcpy@plt>
  402e53:	vxorps xmm0,xmm0,xmm0
  402e57:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  402e5c:	movabs rax,0x100000000
  402e66:	mov    QWORD PTR [rbx+0x18],rax
  402e6a:	mov    rax,rbx
  402e6d:	add    rsp,0x8
  402e71:	pop    rbx
  402e72:	pop    r14
  402e74:	ret    
  402e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e7f:	nop

0000000000402e80 <roda_direita@@Base>:
  402e80:	mov    rax,QWORD PTR [rdi+0x8]
  402e84:	mov    rsi,QWORD PTR [rax+0x10]
  402e88:	mov    QWORD PTR [rax+0x10],rdi
  402e8c:	mov    QWORD PTR [rdi+0x8],rsi
  402e90:	mov    ecx,0xffffffff
  402e95:	mov    edx,0xffffffff
  402e9a:	test   rsi,rsi
  402e9d:	je     402ea2 <roda_direita@@Base+0x22>
  402e9f:	mov    edx,DWORD PTR [rsi+0x18]
  402ea2:	mov    rsi,QWORD PTR [rdi+0x10]
  402ea6:	test   rsi,rsi
  402ea9:	je     402eae <roda_direita@@Base+0x2e>
  402eab:	mov    ecx,DWORD PTR [rsi+0x18]
  402eae:	cmp    edx,ecx
  402eb0:	cmovge ecx,edx
  402eb3:	inc    ecx
  402eb5:	mov    DWORD PTR [rdi+0x18],ecx
  402eb8:	mov    rdx,QWORD PTR [rax+0x8]
  402ebc:	test   rdx,rdx
  402ebf:	je     402ec6 <roda_direita@@Base+0x46>
  402ec1:	mov    edx,DWORD PTR [rdx+0x18]
  402ec4:	jmp    402ecb <roda_direita@@Base+0x4b>
  402ec6:	mov    edx,0xffffffff
  402ecb:	cmp    edx,ecx
  402ecd:	cmovge ecx,edx
  402ed0:	inc    ecx
  402ed2:	mov    DWORD PTR [rax+0x18],ecx
  402ed5:	ret    
  402ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402ee0 <roda_esquerda@@Base>:
  402ee0:	mov    rax,QWORD PTR [rdi+0x10]
  402ee4:	mov    rdx,QWORD PTR [rax+0x8]
  402ee8:	mov    QWORD PTR [rax+0x8],rdi
  402eec:	mov    QWORD PTR [rdi+0x10],rdx
  402ef0:	mov    r8,QWORD PTR [rdi+0x8]
  402ef4:	mov    ecx,0xffffffff
  402ef9:	mov    esi,0xffffffff
  402efe:	test   r8,r8
  402f01:	je     402f07 <roda_esquerda@@Base+0x27>
  402f03:	mov    esi,DWORD PTR [r8+0x18]
  402f07:	test   rdx,rdx
  402f0a:	je     402f0f <roda_esquerda@@Base+0x2f>
  402f0c:	mov    ecx,DWORD PTR [rdx+0x18]
  402f0f:	cmp    esi,ecx
  402f11:	cmovge ecx,esi
  402f14:	inc    ecx
  402f16:	mov    DWORD PTR [rdi+0x18],ecx
  402f19:	mov    rdx,QWORD PTR [rax+0x10]
  402f1d:	test   rdx,rdx
  402f20:	je     402f27 <roda_esquerda@@Base+0x47>
  402f22:	mov    edx,DWORD PTR [rdx+0x18]
  402f25:	jmp    402f2c <roda_esquerda@@Base+0x4c>
  402f27:	mov    edx,0xffffffff
  402f2c:	cmp    ecx,edx
  402f2e:	cmovge edx,ecx
  402f31:	inc    edx
  402f33:	mov    DWORD PTR [rax+0x18],edx
  402f36:	ret    
  402f37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402f40 <calc_balanceamento@@Base>:
  402f40:	test   rdi,rdi
  402f43:	je     402f6a <calc_balanceamento@@Base+0x2a>
  402f45:	mov    rdx,QWORD PTR [rdi+0x10]
  402f49:	mov    ecx,0xffffffff
  402f4e:	mov    eax,0xffffffff
  402f53:	test   rdx,rdx
  402f56:	je     402f5b <calc_balanceamento@@Base+0x1b>
  402f58:	mov    eax,DWORD PTR [rdx+0x18]
  402f5b:	mov    rdx,QWORD PTR [rdi+0x8]
  402f5f:	test   rdx,rdx
  402f62:	je     402f67 <calc_balanceamento@@Base+0x27>
  402f64:	mov    ecx,DWORD PTR [rdx+0x18]
  402f67:	sub    eax,ecx
  402f69:	ret    
  402f6a:	xor    eax,eax
  402f6c:	ret    
  402f6d:	nop    DWORD PTR [rax]

0000000000402f70 <bst_nova@@Base>:
  402f70:	push   rax
  402f71:	mov    edi,0x8
  402f76:	call   4020c0 <malloc@plt>
  402f7b:	test   rax,rax
  402f7e:	je     402f89 <bst_nova@@Base+0x19>
  402f80:	mov    QWORD PTR [rax],0x0
  402f87:	pop    rcx
  402f88:	ret    
  402f89:	xor    eax,eax
  402f8b:	pop    rcx
  402f8c:	ret    
  402f8d:	nop    DWORD PTR [rax]

0000000000402f90 <bst_apaga@@Base>:
  402f90:	push   rbx
  402f91:	mov    rbx,rdi
  402f94:	mov    rax,QWORD PTR [rdi]
  402f97:	test   rax,rax
  402f9a:	je     402fb3 <bst_apaga@@Base+0x23>
  402f9c:	nop    DWORD PTR [rax+0x0]
  402fa0:	mov    rsi,QWORD PTR [rax]
  402fa3:	mov    rdi,rax
  402fa6:	call   402fc0 <bst_remove_impl@@Base>
  402fab:	mov    QWORD PTR [rbx],rax
  402fae:	test   rax,rax
  402fb1:	jne    402fa0 <bst_apaga@@Base+0x10>
  402fb3:	mov    rdi,rbx
  402fb6:	pop    rbx
  402fb7:	jmp    402030 <free@plt>
  402fbc:	nop    DWORD PTR [rax+0x0]

0000000000402fc0 <bst_remove_impl@@Base>:
  402fc0:	push   r15
  402fc2:	push   r14
  402fc4:	push   r12
  402fc6:	push   rbx
  402fc7:	push   rax
  402fc8:	test   rdi,rdi
  402fcb:	je     402ff9 <bst_remove_impl@@Base+0x39>
  402fcd:	mov    rbx,rsi
  402fd0:	mov    r12,rdi
  402fd3:	mov    r14,QWORD PTR [rdi]
  402fd6:	mov    rdi,rsi
  402fd9:	mov    rsi,r14
  402fdc:	call   4020a0 <strcmp@plt>
  402fe1:	test   eax,eax
  402fe3:	jns    403001 <bst_remove_impl@@Base+0x41>
  402fe5:	mov    rdi,QWORD PTR [r12+0x8]
  402fea:	mov    rsi,rbx
  402fed:	call   402fc0 <bst_remove_impl@@Base>
  402ff2:	mov    QWORD PTR [r12+0x8],rax
  402ff7:	jmp    403015 <bst_remove_impl@@Base+0x55>
  402ff9:	xor    r15d,r15d
  402ffc:	mov    rax,r15
  402fff:	jmp    403018 <bst_remove_impl@@Base+0x58>
  403001:	je     403024 <bst_remove_impl@@Base+0x64>
  403003:	mov    rdi,QWORD PTR [r12+0x10]
  403008:	mov    rsi,rbx
  40300b:	call   402fc0 <bst_remove_impl@@Base>
  403010:	mov    QWORD PTR [r12+0x10],rax
  403015:	mov    rax,r12
  403018:	add    rsp,0x8
  40301c:	pop    rbx
  40301d:	pop    r12
  40301f:	pop    r14
  403021:	pop    r15
  403023:	ret    
  403024:	mov    rbx,QWORD PTR [r12+0x8]
  403029:	mov    rax,QWORD PTR [r12+0x10]
  40302e:	test   rbx,rbx
  403031:	je     403079 <bst_remove_impl@@Base+0xb9>
  403033:	test   rax,rax
  403036:	je     403081 <bst_remove_impl@@Base+0xc1>
  403038:	nop    DWORD PTR [rax+rax*1+0x0]
  403040:	mov    rbx,rax
  403043:	mov    rax,QWORD PTR [rax+0x8]
  403047:	test   rax,rax
  40304a:	jne    403040 <bst_remove_impl@@Base+0x80>
  40304c:	mov    rdi,QWORD PTR [rbx]
  40304f:	call   402080 <strlen@plt>
  403054:	lea    rsi,[rax+0x1]
  403058:	mov    rdi,r14
  40305b:	call   4020d0 <realloc@plt>
  403060:	mov    QWORD PTR [r12],rax
  403064:	mov    rsi,QWORD PTR [rbx]
  403067:	mov    rdi,rax
  40306a:	call   402050 <strcpy@plt>
  40306f:	mov    rdi,QWORD PTR [r12+0x10]
  403074:	mov    rsi,QWORD PTR [rbx]
  403077:	jmp    40300b <bst_remove_impl@@Base+0x4b>
  403079:	mov    rbx,rax
  40307c:	test   rax,rax
  40307f:	je     4030bb <bst_remove_impl@@Base+0xfb>
  403081:	mov    rdi,QWORD PTR [rbx]
  403084:	call   402080 <strlen@plt>
  403089:	lea    rsi,[rax+0x1]
  40308d:	mov    rdi,r14
  403090:	call   4020d0 <realloc@plt>
  403095:	mov    QWORD PTR [r12],rax
  403099:	mov    rsi,QWORD PTR [rbx]
  40309c:	mov    rdi,rax
  40309f:	call   402050 <strcpy@plt>
  4030a4:	vmovups xmm0,XMMWORD PTR [rbx+0x8]
  4030a9:	vmovups XMMWORD PTR [r12+0x8],xmm0
  4030b0:	mov    r14,QWORD PTR [rbx]
  4030b3:	mov    r15,r12
  4030b6:	mov    r12,rbx
  4030b9:	jmp    4030be <bst_remove_impl@@Base+0xfe>
  4030bb:	xor    r15d,r15d
  4030be:	mov    rdi,r14
  4030c1:	call   402030 <free@plt>
  4030c6:	mov    rdi,r12
  4030c9:	call   402030 <free@plt>
  4030ce:	mov    rax,r15
  4030d1:	jmp    403018 <bst_remove_impl@@Base+0x58>
  4030d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004030e0 <bst_pesquisa@@Base>:
  4030e0:	push   r14
  4030e2:	push   rbx
  4030e3:	push   rax
  4030e4:	xor    ebx,ebx
  4030e6:	test   rdi,rdi
  4030e9:	je     40312b <bst_pesquisa@@Base+0x4b>
  4030eb:	mov    r14,rsi
  4030ee:	test   rsi,rsi
  4030f1:	je     40312b <bst_pesquisa@@Base+0x4b>
  4030f3:	mov    rbx,QWORD PTR [rdi]
  4030f6:	test   rbx,rbx
  4030f9:	jne    40310c <bst_pesquisa@@Base+0x2c>
  4030fb:	jmp    403129 <bst_pesquisa@@Base+0x49>
  4030fd:	nop    DWORD PTR [rax]
  403100:	add    rbx,0x8
  403104:	mov    rbx,QWORD PTR [rbx]
  403107:	test   rbx,rbx
  40310a:	je     403129 <bst_pesquisa@@Base+0x49>
  40310c:	mov    rsi,QWORD PTR [rbx]
  40310f:	mov    rdi,r14
  403112:	call   4020a0 <strcmp@plt>
  403117:	test   eax,eax
  403119:	js     403100 <bst_pesquisa@@Base+0x20>
  40311b:	je     40312b <bst_pesquisa@@Base+0x4b>
  40311d:	add    rbx,0x10
  403121:	mov    rbx,QWORD PTR [rbx]
  403124:	test   rbx,rbx
  403127:	jne    40310c <bst_pesquisa@@Base+0x2c>
  403129:	xor    ebx,ebx
  40312b:	mov    rax,rbx
  40312e:	add    rsp,0x8
  403132:	pop    rbx
  403133:	pop    r14
  403135:	ret    
  403136:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403140 <bst_pesquisa_impl@@Base>:
  403140:	push   r14
  403142:	push   rbx
  403143:	push   rax
  403144:	test   rdi,rdi
  403147:	je     403183 <bst_pesquisa_impl@@Base+0x43>
  403149:	mov    r14,rsi
  40314c:	mov    rbx,rdi
  40314f:	jmp    40316c <bst_pesquisa_impl@@Base+0x2c>
  403151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]
  403160:	add    rbx,0x8
  403164:	mov    rbx,QWORD PTR [rbx]
  403167:	test   rbx,rbx
  40316a:	je     403183 <bst_pesquisa_impl@@Base+0x43>
  40316c:	mov    rsi,QWORD PTR [rbx]
  40316f:	mov    rdi,r14
  403172:	call   4020a0 <strcmp@plt>
  403177:	test   eax,eax
  403179:	js     403160 <bst_pesquisa_impl@@Base+0x20>
  40317b:	je     403185 <bst_pesquisa_impl@@Base+0x45>
  40317d:	add    rbx,0x10
  403181:	jmp    403164 <bst_pesquisa_impl@@Base+0x24>
  403183:	xor    ebx,ebx
  403185:	mov    rax,rbx
  403188:	add    rsp,0x8
  40318c:	pop    rbx
  40318d:	pop    r14
  40318f:	ret    

0000000000403190 <bst_insere@@Base>:
  403190:	mov    eax,0xffffffff
  403195:	test   rdi,rdi
  403198:	je     4031b1 <bst_insere@@Base+0x21>
  40319a:	test   rsi,rsi
  40319d:	je     4031b1 <bst_insere@@Base+0x21>
  40319f:	push   rbx
  4031a0:	mov    rbx,rdi
  4031a3:	mov    rdi,QWORD PTR [rdi]
  4031a6:	call   4031c0 <bst_insere_impl@@Base>
  4031ab:	mov    QWORD PTR [rbx],rax
  4031ae:	xor    eax,eax
  4031b0:	pop    rbx
  4031b1:	ret    
  4031b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031bc:	nop    DWORD PTR [rax+0x0]

00000000004031c0 <bst_insere_impl@@Base>:
  4031c0:	push   r14
  4031c2:	push   rbx
  4031c3:	push   rax
  4031c4:	mov    r14,rsi
  4031c7:	test   rdi,rdi
  4031ca:	je     4031f0 <bst_insere_impl@@Base+0x30>
  4031cc:	mov    rbx,rdi
  4031cf:	mov    rsi,QWORD PTR [rdi]
  4031d2:	mov    rdi,r14
  4031d5:	call   4020a0 <strcmp@plt>
  4031da:	test   eax,eax
  4031dc:	jns    403227 <bst_insere_impl@@Base+0x67>
  4031de:	mov    rdi,QWORD PTR [rbx+0x8]
  4031e2:	mov    rsi,r14
  4031e5:	call   4031c0 <bst_insere_impl@@Base>
  4031ea:	mov    QWORD PTR [rbx+0x8],rax
  4031ee:	jmp    403239 <bst_insere_impl@@Base+0x79>
  4031f0:	mov    edi,0x18
  4031f5:	call   4020c0 <malloc@plt>
  4031fa:	mov    rbx,rax
  4031fd:	mov    rdi,r14
  403200:	call   402080 <strlen@plt>
  403205:	lea    rdi,[rax+0x1]
  403209:	call   4020c0 <malloc@plt>
  40320e:	mov    QWORD PTR [rbx],rax
  403211:	mov    rdi,rax
  403214:	mov    rsi,r14
  403217:	call   402050 <strcpy@plt>
  40321c:	vxorps xmm0,xmm0,xmm0
  403220:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  403225:	jmp    403239 <bst_insere_impl@@Base+0x79>
  403227:	je     403239 <bst_insere_impl@@Base+0x79>
  403229:	mov    rdi,QWORD PTR [rbx+0x10]
  40322d:	mov    rsi,r14
  403230:	call   4031c0 <bst_insere_impl@@Base>
  403235:	mov    QWORD PTR [rbx+0x10],rax
  403239:	mov    rax,rbx
  40323c:	add    rsp,0x8
  403240:	pop    rbx
  403241:	pop    r14
  403243:	ret    
  403244:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40324e:	xchg   ax,ax

0000000000403250 <bst_remove@@Base>:
  403250:	mov    eax,0xffffffff
  403255:	test   rdi,rdi
  403258:	je     403271 <bst_remove@@Base+0x21>
  40325a:	test   rsi,rsi
  40325d:	je     403271 <bst_remove@@Base+0x21>
  40325f:	push   rbx
  403260:	mov    rbx,rdi
  403263:	mov    rdi,QWORD PTR [rdi]
  403266:	call   402fc0 <bst_remove_impl@@Base>
  40326b:	mov    QWORD PTR [rbx],rax
  40326e:	xor    eax,eax
  403270:	pop    rbx
  403271:	ret    
  403272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40327c:	nop    DWORD PTR [rax+0x0]

0000000000403280 <bst_min@@Base>:
  403280:	test   rdi,rdi
  403283:	je     4032a0 <bst_min@@Base+0x20>
  403285:	mov    rax,QWORD PTR [rdi]
  403288:	nop    DWORD PTR [rax+rax*1+0x0]
  403290:	mov    rcx,rax
  403293:	mov    rax,QWORD PTR [rax+0x8]
  403297:	test   rax,rax
  40329a:	jne    403290 <bst_min@@Base+0x10>
  40329c:	mov    rax,QWORD PTR [rcx]
  40329f:	ret    
  4032a0:	xor    eax,eax
  4032a2:	ret    
  4032a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032ad:	nop    DWORD PTR [rax]

00000000004032b0 <bst_no_valormin@@Base>:
  4032b0:	mov    rax,rdi
  4032b3:	mov    rdi,QWORD PTR [rdi+0x8]
  4032b7:	test   rdi,rdi
  4032ba:	jne    4032b0 <bst_no_valormin@@Base>
  4032bc:	ret    
  4032bd:	nop    DWORD PTR [rax]

00000000004032c0 <bst_max@@Base>:
  4032c0:	test   rdi,rdi
  4032c3:	je     4032e0 <bst_max@@Base+0x20>
  4032c5:	mov    rax,QWORD PTR [rdi]
  4032c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032d0:	mov    rcx,rax
  4032d3:	mov    rax,QWORD PTR [rax+0x10]
  4032d7:	test   rax,rax
  4032da:	jne    4032d0 <bst_max@@Base+0x10>
  4032dc:	mov    rax,QWORD PTR [rcx]
  4032df:	ret    
  4032e0:	xor    eax,eax
  4032e2:	ret    
  4032e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032ed:	nop    DWORD PTR [rax]

00000000004032f0 <bst_no_valormax@@Base>:
  4032f0:	mov    rax,rdi
  4032f3:	mov    rdi,QWORD PTR [rdi+0x10]
  4032f7:	test   rdi,rdi
  4032fa:	jne    4032f0 <bst_no_valormax@@Base>
  4032fc:	ret    
  4032fd:	nop    DWORD PTR [rax]

0000000000403300 <bst_imprime@@Base>:
  403300:	test   rdi,rdi
  403303:	je     40332a <bst_imprime@@Base+0x2a>
  403305:	push   rbx
  403306:	mov    rbx,rdi
  403309:	lea    rdi,[rip+0xd58]        # 404068 <_IO_stdin_used@@Base+0x68>
  403310:	xor    eax,eax
  403312:	call   402090 <printf@plt>
  403317:	mov    rdi,QWORD PTR [rbx]
  40331a:	call   403330 <bst_preordem_impl@@Base>
  40331f:	mov    edi,0xa
  403324:	pop    rbx
  403325:	jmp    402040 <putchar@plt>
  40332a:	ret    
  40332b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403330 <bst_preordem_impl@@Base>:
  403330:	push   r14
  403332:	push   rbx
  403333:	push   rax
  403334:	test   rdi,rdi
  403337:	je     40336f <bst_preordem_impl@@Base+0x3f>
  403339:	mov    rbx,rdi
  40333c:	lea    r14,[rip+0xd30]        # 404073 <_IO_stdin_used@@Base+0x73>
  403343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40334d:	nop    DWORD PTR [rax]
  403350:	mov    rsi,QWORD PTR [rbx]
  403353:	mov    rdi,r14
  403356:	xor    eax,eax
  403358:	call   402090 <printf@plt>
  40335d:	mov    rdi,QWORD PTR [rbx+0x8]
  403361:	call   403330 <bst_preordem_impl@@Base>
  403366:	mov    rbx,QWORD PTR [rbx+0x10]
  40336a:	test   rbx,rbx
  40336d:	jne    403350 <bst_preordem_impl@@Base+0x20>
  40336f:	add    rsp,0x8
  403373:	pop    rbx
  403374:	pop    r14
  403376:	ret    
  403377:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403380 <bst_novo_no@@Base>:
  403380:	push   r14
  403382:	push   rbx
  403383:	push   rax
  403384:	mov    r14,rdi
  403387:	mov    edi,0x18
  40338c:	call   4020c0 <malloc@plt>
  403391:	mov    rbx,rax
  403394:	mov    rdi,r14
  403397:	call   402080 <strlen@plt>
  40339c:	lea    rdi,[rax+0x1]
  4033a0:	call   4020c0 <malloc@plt>
  4033a5:	mov    QWORD PTR [rbx],rax
  4033a8:	mov    rdi,rax
  4033ab:	mov    rsi,r14
  4033ae:	call   402050 <strcpy@plt>
  4033b3:	vxorps xmm0,xmm0,xmm0
  4033b7:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  4033bc:	mov    rax,rbx
  4033bf:	add    rsp,0x8
  4033c3:	pop    rbx
  4033c4:	pop    r14
  4033c6:	ret    
  4033c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004033d0 <bst_altura@@Base>:
  4033d0:	push   r14
  4033d2:	push   rbx
  4033d3:	push   rax
  4033d4:	test   rdi,rdi
  4033d7:	je     403405 <bst_altura@@Base+0x35>
  4033d9:	mov    rax,rdi
  4033dc:	mov    rdi,QWORD PTR [rdi+0x8]
  4033e0:	mov    r14,QWORD PTR [rax+0x10]
  4033e4:	xor    ebx,ebx
  4033e6:	mov    rax,r14
  4033e9:	or     rax,rdi
  4033ec:	je     403410 <bst_altura@@Base+0x40>
  4033ee:	call   4033d0 <bst_altura@@Base>
  4033f3:	mov    ebx,eax
  4033f5:	mov    rdi,r14
  4033f8:	call   4033d0 <bst_altura@@Base>
  4033fd:	cmp    ebx,eax
  4033ff:	jle    40340c <bst_altura@@Base+0x3c>
  403401:	inc    ebx
  403403:	jmp    403410 <bst_altura@@Base+0x40>
  403405:	mov    ebx,0xffffffff
  40340a:	jmp    403410 <bst_altura@@Base+0x40>
  40340c:	inc    eax
  40340e:	mov    ebx,eax
  403410:	mov    eax,ebx
  403412:	add    rsp,0x8
  403416:	pop    rbx
  403417:	pop    r14
  403419:	ret    
  40341a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403420 <__libc_csu_init@@Base>:
  403420:	endbr64 
  403424:	push   r15
  403426:	lea    r15,[rip+0x29d3]        # 405e00 <_IO_stdin_used@@Base+0x1e00>
  40342d:	push   r14
  40342f:	mov    r14,rdx
  403432:	push   r13
  403434:	mov    r13,rsi
  403437:	push   r12
  403439:	mov    r12d,edi
  40343c:	push   rbp
  40343d:	lea    rbp,[rip+0x29c4]        # 405e08 <_IO_stdin_used@@Base+0x1e08>
  403444:	push   rbx
  403445:	sub    rbp,r15
  403448:	sub    rsp,0x8
  40344c:	call   402000 <free@plt-0x30>
  403451:	sar    rbp,0x3
  403455:	je     403476 <__libc_csu_init@@Base+0x56>
  403457:	xor    ebx,ebx
  403459:	nop    DWORD PTR [rax+0x0]
  403460:	mov    rdx,r14
  403463:	mov    rsi,r13
  403466:	mov    edi,r12d
  403469:	call   QWORD PTR [r15+rbx*8]
  40346d:	add    rbx,0x1
  403471:	cmp    rbp,rbx
  403474:	jne    403460 <__libc_csu_init@@Base+0x40>
  403476:	add    rsp,0x8
  40347a:	pop    rbx
  40347b:	pop    rbp
  40347c:	pop    r12
  40347e:	pop    r13
  403480:	pop    r14
  403482:	pop    r15
  403484:	ret    
  403485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000403490 <__libc_csu_fini@@Base>:
  403490:	endbr64 
  403494:	ret    

Disassembly of section .fini:

0000000000403498 <.fini>:
  403498:	endbr64 
  40349c:	sub    rsp,0x8
  4034a0:	add    rsp,0x8
  4034a4:	ret    
