
../repos/prog2/0.11.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strcpy@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strcpy@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strcpy@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strcpy@plt-0x10>

0000000000401040 <strlen@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <strlen@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <strcpy@plt-0x10>

0000000000401050 <printf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <printf@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strcpy@plt-0x10>

0000000000401060 <memset@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <memset@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <strcpy@plt-0x10>

0000000000401070 <strcmp@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <strcmp@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <strcpy@plt-0x10>

0000000000401080 <__isoc99_scanf@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <__isoc99_scanf@GLIBC_2.7>
  401086:	push   0x5
  40108b:	jmp    401020 <strcpy@plt-0x10>

0000000000401090 <strcat@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <strcat@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <strcpy@plt-0x10>

Disassembly of section .text:

00000000004010a0 <_start@@Base>:
  4010a0:	endbr64 
  4010a4:	xor    ebp,ebp
  4010a6:	mov    r9,rdx
  4010a9:	pop    rsi
  4010aa:	mov    rdx,rsp
  4010ad:	and    rsp,0xfffffffffffffff0
  4010b1:	push   rax
  4010b2:	push   rsp
  4010b3:	mov    r8,0x4014d0
  4010ba:	mov    rcx,0x401460
  4010c1:	mov    rdi,0x401190
  4010c8:	call   QWORD PTR [rip+0x2f22]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ce:	hlt    
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	ret    
  4010d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010df:	nop
  4010e0:	mov    eax,0x404060
  4010e5:	cmp    rax,0x404060
  4010eb:	je     401100 <_start@@Base+0x60>
  4010ed:	mov    eax,0x0
  4010f2:	test   rax,rax
  4010f5:	je     401100 <_start@@Base+0x60>
  4010f7:	mov    edi,0x404060
  4010fc:	jmp    rax
  4010fe:	xchg   ax,ax
  401100:	ret    
  401101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40110c:	nop    DWORD PTR [rax+0x0]
  401110:	mov    esi,0x404060
  401115:	sub    rsi,0x404060
  40111c:	mov    rax,rsi
  40111f:	shr    rsi,0x3f
  401123:	sar    rax,0x3
  401127:	add    rsi,rax
  40112a:	sar    rsi,1
  40112d:	je     401140 <_start@@Base+0xa0>
  40112f:	mov    eax,0x0
  401134:	test   rax,rax
  401137:	je     401140 <_start@@Base+0xa0>
  401139:	mov    edi,0x404060
  40113e:	jmp    rax
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	cmp    BYTE PTR [rip+0x2f05],0x0        # 404060 <__bss_start@@Base>
  40115b:	jne    401170 <_start@@Base+0xd0>
  40115d:	push   rbp
  40115e:	mov    rbp,rsp
  401161:	call   4010e0 <_start@@Base+0x40>
  401166:	mov    BYTE PTR [rip+0x2ef3],0x1        # 404060 <__bss_start@@Base>
  40116d:	pop    rbp
  40116e:	ret    
  40116f:	nop
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	endbr64 
  401184:	jmp    401110 <_start@@Base+0x70>
  401186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401190 <main@@Base>:
  401190:	push   rbp
  401191:	mov    rbp,rsp
  401194:	sub    rsp,0xa0
  40119b:	xor    esi,esi
  40119d:	mov    eax,0x1a
  4011a2:	mov    edx,eax
  4011a4:	mov    DWORD PTR [rbp-0x4],0x0
  4011ab:	lea    rcx,[rbp-0x30]
  4011af:	mov    rdi,rcx
  4011b2:	call   401060 <memset@plt>
  4011b7:	mov    DWORD PTR [rbp-0x78],0x0
  4011be:	lea    rsi,[rbp-0xe]
  4011c2:	lea    rdi,[rip+0xe3b]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011c9:	mov    al,0x0
  4011cb:	call   401080 <__isoc99_scanf@plt>
  4011d0:	movsx  ecx,BYTE PTR [rbp-0xe]
  4011d4:	cmp    ecx,0x2e
  4011d7:	mov    DWORD PTR [rbp-0x7c],eax
  4011da:	jne    4011e5 <main@@Base+0x55>
  4011e0:	jmp    4012a8 <main@@Base+0x118>
  4011e5:	lea    rdi,[rip+0xe1b]        # 402007 <_IO_stdin_used@@Base+0x7>
  4011ec:	lea    rsi,[rbp-0x74]
  4011f0:	mov    al,0x0
  4011f2:	call   401080 <__isoc99_scanf@plt>
  4011f7:	lea    rsi,[rbp-0x30]
  4011fb:	lea    rdi,[rbp-0xe]
  4011ff:	mov    DWORD PTR [rbp-0x78],0x0
  401206:	mov    edx,DWORD PTR [rbp-0x74]
  401209:	mov    DWORD PTR [rbp-0x80],eax
  40120c:	call   4012c0 <StringSet@@Base>
  401211:	lea    rsi,[rbp-0x50]
  401215:	lea    rdi,[rbp-0x30]
  401219:	call   401320 <R_ShiftString@@Base>
  40121e:	cmp    DWORD PTR [rbp-0x78],0x0
  401222:	setne  al
  401225:	xor    al,0xff
  401227:	test   al,0x1
  401229:	jne    401234 <main@@Base+0xa4>
  40122f:	jmp    4012a3 <main@@Base+0x113>
  401234:	lea    rsi,[rbp-0x50]
  401238:	lea    rdi,[rbp-0x30]
  40123c:	call   401070 <strcmp@plt>
  401241:	cmp    eax,0x0
  401244:	jne    401251 <main@@Base+0xc1>
  40124a:	mov    DWORD PTR [rbp-0x78],0x1
  401251:	lea    rsi,[rbp-0x30]
  401255:	lea    rdi,[rip+0xdae]        # 40200a <_IO_stdin_used@@Base+0xa>
  40125c:	mov    al,0x0
  40125e:	call   401050 <printf@plt>
  401263:	lea    rsi,[rbp-0x30]
  401267:	lea    rdi,[rbp-0x70]
  40126b:	mov    QWORD PTR [rbp-0x88],rdi
  401272:	mov    QWORD PTR [rbp-0x90],rsi
  401279:	mov    DWORD PTR [rbp-0x94],eax
  40127f:	call   401030 <strcpy@plt>
  401284:	mov    rdi,QWORD PTR [rbp-0x88]
  40128b:	mov    rsi,QWORD PTR [rbp-0x90]
  401292:	mov    QWORD PTR [rbp-0xa0],rax
  401299:	call   4013c0 <L_ShiftString@@Base>
  40129e:	jmp    40121e <main@@Base+0x8e>
  4012a3:	jmp    4011be <main@@Base+0x2e>
  4012a8:	mov    eax,DWORD PTR [rbp-0x4]
  4012ab:	add    rsp,0xa0
  4012b2:	pop    rbp
  4012b3:	ret    
  4012b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012be:	xchg   ax,ax

00000000004012c0 <StringSet@@Base>:
  4012c0:	push   rbp
  4012c1:	mov    rbp,rsp
  4012c4:	sub    rsp,0x30
  4012c8:	mov    QWORD PTR [rbp-0x8],rdi
  4012cc:	mov    QWORD PTR [rbp-0x10],rsi
  4012d0:	mov    DWORD PTR [rbp-0x14],edx
  4012d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4012d7:	lea    rsi,[rip+0xd2f]        # 40200d <_IO_stdin_used@@Base+0xd>
  4012de:	call   401030 <strcpy@plt>
  4012e3:	mov    DWORD PTR [rbp-0x18],0x0
  4012ea:	mov    QWORD PTR [rbp-0x20],rax
  4012ee:	mov    eax,DWORD PTR [rbp-0x18]
  4012f1:	cmp    eax,DWORD PTR [rbp-0x14]
  4012f4:	jge    401319 <StringSet@@Base+0x59>
  4012fa:	mov    rdi,QWORD PTR [rbp-0x10]
  4012fe:	mov    rsi,QWORD PTR [rbp-0x8]
  401302:	call   401090 <strcat@plt>
  401307:	mov    QWORD PTR [rbp-0x28],rax
  40130b:	mov    eax,DWORD PTR [rbp-0x18]
  40130e:	add    eax,0x1
  401311:	mov    DWORD PTR [rbp-0x18],eax
  401314:	jmp    4012ee <StringSet@@Base+0x2e>
  401319:	add    rsp,0x30
  40131d:	pop    rbp
  40131e:	ret    
  40131f:	nop

0000000000401320 <R_ShiftString@@Base>:
  401320:	push   rbp
  401321:	mov    rbp,rsp
  401324:	sub    rsp,0x30
  401328:	mov    QWORD PTR [rbp-0x8],rdi
  40132c:	mov    QWORD PTR [rbp-0x10],rsi
  401330:	mov    rsi,QWORD PTR [rbp-0x8]
  401334:	mov    rdi,QWORD PTR [rbp-0x8]
  401338:	mov    QWORD PTR [rbp-0x20],rsi
  40133c:	call   401040 <strlen@plt>
  401341:	sub    rax,0x1
  401345:	mov    rsi,QWORD PTR [rbp-0x20]
  401349:	mov    cl,BYTE PTR [rsi+rax*1]
  40134c:	mov    rax,QWORD PTR [rbp-0x10]
  401350:	mov    BYTE PTR [rax],cl
  401352:	mov    DWORD PTR [rbp-0x14],0x1
  401359:	movsxd rax,DWORD PTR [rbp-0x14]
  40135d:	mov    rdi,QWORD PTR [rbp-0x8]
  401361:	mov    QWORD PTR [rbp-0x28],rax
  401365:	call   401040 <strlen@plt>
  40136a:	mov    rdi,QWORD PTR [rbp-0x28]
  40136e:	cmp    rdi,rax
  401371:	jae    4013a2 <R_ShiftString@@Base+0x82>
  401377:	mov    rax,QWORD PTR [rbp-0x8]
  40137b:	mov    ecx,DWORD PTR [rbp-0x14]
  40137e:	sub    ecx,0x1
  401381:	movsxd rdx,ecx
  401384:	mov    sil,BYTE PTR [rax+rdx*1]
  401388:	mov    rax,QWORD PTR [rbp-0x10]
  40138c:	movsxd rdx,DWORD PTR [rbp-0x14]
  401390:	mov    BYTE PTR [rax+rdx*1],sil
  401394:	mov    eax,DWORD PTR [rbp-0x14]
  401397:	add    eax,0x1
  40139a:	mov    DWORD PTR [rbp-0x14],eax
  40139d:	jmp    401359 <R_ShiftString@@Base+0x39>
  4013a2:	mov    rax,QWORD PTR [rbp-0x10]
  4013a6:	movsxd rcx,DWORD PTR [rbp-0x14]
  4013aa:	mov    BYTE PTR [rax+rcx*1],0x0
  4013ae:	add    rsp,0x30
  4013b2:	pop    rbp
  4013b3:	ret    
  4013b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013be:	xchg   ax,ax

00000000004013c0 <L_ShiftString@@Base>:
  4013c0:	push   rbp
  4013c1:	mov    rbp,rsp
  4013c4:	sub    rsp,0x30
  4013c8:	mov    QWORD PTR [rbp-0x8],rdi
  4013cc:	mov    QWORD PTR [rbp-0x10],rsi
  4013d0:	mov    rsi,QWORD PTR [rbp-0x8]
  4013d4:	mov    al,BYTE PTR [rsi]
  4013d6:	mov    rsi,QWORD PTR [rbp-0x10]
  4013da:	mov    rdi,QWORD PTR [rbp-0x8]
  4013de:	mov    BYTE PTR [rbp-0x15],al
  4013e1:	mov    QWORD PTR [rbp-0x20],rsi
  4013e5:	call   401040 <strlen@plt>
  4013ea:	sub    rax,0x1
  4013ee:	mov    rsi,QWORD PTR [rbp-0x20]
  4013f2:	mov    cl,BYTE PTR [rbp-0x15]
  4013f5:	mov    BYTE PTR [rsi+rax*1],cl
  4013f8:	mov    DWORD PTR [rbp-0x14],0x1
  4013ff:	movsxd rax,DWORD PTR [rbp-0x14]
  401403:	mov    rdi,QWORD PTR [rbp-0x8]
  401407:	mov    QWORD PTR [rbp-0x28],rax
  40140b:	call   401040 <strlen@plt>
  401410:	mov    rdi,QWORD PTR [rbp-0x28]
  401414:	cmp    rdi,rax
  401417:	jae    401446 <L_ShiftString@@Base+0x86>
  40141d:	mov    rax,QWORD PTR [rbp-0x8]
  401421:	movsxd rcx,DWORD PTR [rbp-0x14]
  401425:	mov    dl,BYTE PTR [rax+rcx*1]
  401428:	mov    rax,QWORD PTR [rbp-0x10]
  40142c:	mov    esi,DWORD PTR [rbp-0x14]
  40142f:	sub    esi,0x1
  401432:	movsxd rcx,esi
  401435:	mov    BYTE PTR [rax+rcx*1],dl
  401438:	mov    eax,DWORD PTR [rbp-0x14]
  40143b:	add    eax,0x1
  40143e:	mov    DWORD PTR [rbp-0x14],eax
  401441:	jmp    4013ff <L_ShiftString@@Base+0x3f>
  401446:	mov    rax,QWORD PTR [rbp-0x10]
  40144a:	movsxd rcx,DWORD PTR [rbp-0x14]
  40144e:	mov    BYTE PTR [rax+rcx*1],0x0
  401452:	add    rsp,0x30
  401456:	pop    rbp
  401457:	ret    
  401458:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401460 <__libc_csu_init@@Base>:
  401460:	endbr64 
  401464:	push   r15
  401466:	lea    r15,[rip+0x2993]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  40146d:	push   r14
  40146f:	mov    r14,rdx
  401472:	push   r13
  401474:	mov    r13,rsi
  401477:	push   r12
  401479:	mov    r12d,edi
  40147c:	push   rbp
  40147d:	lea    rbp,[rip+0x2984]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401484:	push   rbx
  401485:	sub    rbp,r15
  401488:	sub    rsp,0x8
  40148c:	call   401000 <strcpy@plt-0x30>
  401491:	sar    rbp,0x3
  401495:	je     4014b6 <__libc_csu_init@@Base+0x56>
  401497:	xor    ebx,ebx
  401499:	nop    DWORD PTR [rax+0x0]
  4014a0:	mov    rdx,r14
  4014a3:	mov    rsi,r13
  4014a6:	mov    edi,r12d
  4014a9:	call   QWORD PTR [r15+rbx*8]
  4014ad:	add    rbx,0x1
  4014b1:	cmp    rbp,rbx
  4014b4:	jne    4014a0 <__libc_csu_init@@Base+0x40>
  4014b6:	add    rsp,0x8
  4014ba:	pop    rbx
  4014bb:	pop    rbp
  4014bc:	pop    r12
  4014be:	pop    r13
  4014c0:	pop    r14
  4014c2:	pop    r15
  4014c4:	ret    
  4014c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004014d0 <__libc_csu_fini@@Base>:
  4014d0:	endbr64 
  4014d4:	ret    

Disassembly of section .fini:

00000000004014d8 <.fini>:
  4014d8:	endbr64 
  4014dc:	sub    rsp,0x8
  4014e0:	add    rsp,0x8
  4014e4:	ret    
