
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x3efd1]        # 443fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <free@plt-0x1a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <free@plt-0x10>:
  405020:	push   QWORD PTR [rip+0x3efe2]        # 444008 <flatcc_builder_padding_base@@Base+0xbda8>
  405026:	jmp    QWORD PTR [rip+0x3efe4]        # 444010 <flatcc_builder_padding_base@@Base+0xbdb0>
  40502c:	nop    DWORD PTR [rax+0x0]

0000000000405030 <free@plt>:
  405030:	jmp    QWORD PTR [rip+0x3efe2]        # 444018 <free@GLIBC_2.2.5>
  405036:	push   0x0
  40503b:	jmp    405020 <free@plt-0x10>

0000000000405040 <strncpy@plt>:
  405040:	jmp    QWORD PTR [rip+0x3efda]        # 444020 <strncpy@GLIBC_2.2.5>
  405046:	push   0x1
  40504b:	jmp    405020 <free@plt-0x10>

0000000000405050 <strtod@plt>:
  405050:	jmp    QWORD PTR [rip+0x3efd2]        # 444028 <strtod@GLIBC_2.2.5>
  405056:	push   0x2
  40505b:	jmp    405020 <free@plt-0x10>

0000000000405060 <strlen@plt>:
  405060:	jmp    QWORD PTR [rip+0x3efca]        # 444030 <strlen@GLIBC_2.2.5>
  405066:	push   0x3
  40506b:	jmp    405020 <free@plt-0x10>

0000000000405070 <__stack_chk_fail@plt>:
  405070:	jmp    QWORD PTR [rip+0x3efc2]        # 444038 <__stack_chk_fail@GLIBC_2.4>
  405076:	push   0x4
  40507b:	jmp    405020 <free@plt-0x10>

0000000000405080 <__assert_fail@plt>:
  405080:	jmp    QWORD PTR [rip+0x3efba]        # 444040 <__assert_fail@GLIBC_2.2.5>
  405086:	push   0x5
  40508b:	jmp    405020 <free@plt-0x10>

0000000000405090 <memset@plt>:
  405090:	jmp    QWORD PTR [rip+0x3efb2]        # 444048 <memset@GLIBC_2.2.5>
  405096:	push   0x6
  40509b:	jmp    405020 <free@plt-0x10>

00000000004050a0 <fputc@plt>:
  4050a0:	jmp    QWORD PTR [rip+0x3efaa]        # 444050 <fputc@GLIBC_2.2.5>
  4050a6:	push   0x7
  4050ab:	jmp    405020 <free@plt-0x10>

00000000004050b0 <memchr@plt>:
  4050b0:	jmp    QWORD PTR [rip+0x3efa2]        # 444058 <memchr@GLIBC_2.2.5>
  4050b6:	push   0x8
  4050bb:	jmp    405020 <free@plt-0x10>

00000000004050c0 <memcmp@plt>:
  4050c0:	jmp    QWORD PTR [rip+0x3ef9a]        # 444060 <memcmp@GLIBC_2.2.5>
  4050c6:	push   0x9
  4050cb:	jmp    405020 <free@plt-0x10>

00000000004050d0 <strcmp@plt>:
  4050d0:	jmp    QWORD PTR [rip+0x3ef92]        # 444068 <strcmp@GLIBC_2.2.5>
  4050d6:	push   0xa
  4050db:	jmp    405020 <free@plt-0x10>

00000000004050e0 <fprintf@plt>:
  4050e0:	jmp    QWORD PTR [rip+0x3ef8a]        # 444070 <fprintf@GLIBC_2.2.5>
  4050e6:	push   0xb
  4050eb:	jmp    405020 <free@plt-0x10>

00000000004050f0 <memcpy@plt>:
  4050f0:	jmp    QWORD PTR [rip+0x3ef82]        # 444078 <memcpy@GLIBC_2.14>
  4050f6:	push   0xc
  4050fb:	jmp    405020 <free@plt-0x10>

0000000000405100 <malloc@plt>:
  405100:	jmp    QWORD PTR [rip+0x3ef7a]        # 444080 <malloc@GLIBC_2.2.5>
  405106:	push   0xd
  40510b:	jmp    405020 <free@plt-0x10>

0000000000405110 <realloc@plt>:
  405110:	jmp    QWORD PTR [rip+0x3ef72]        # 444088 <realloc@GLIBC_2.2.5>
  405116:	push   0xe
  40511b:	jmp    405020 <free@plt-0x10>

0000000000405120 <memmove@plt>:
  405120:	jmp    QWORD PTR [rip+0x3ef6a]        # 444090 <memmove@GLIBC_2.2.5>
  405126:	push   0xf
  40512b:	jmp    405020 <free@plt-0x10>

0000000000405130 <sprintf@plt>:
  405130:	jmp    QWORD PTR [rip+0x3ef62]        # 444098 <sprintf@GLIBC_2.2.5>
  405136:	push   0x10
  40513b:	jmp    405020 <free@plt-0x10>

0000000000405140 <fwrite@plt>:
  405140:	jmp    QWORD PTR [rip+0x3ef5a]        # 4440a0 <fwrite@GLIBC_2.2.5>
  405146:	push   0x11
  40514b:	jmp    405020 <free@plt-0x10>

0000000000405150 <posix_memalign@plt>:
  405150:	jmp    QWORD PTR [rip+0x3ef52]        # 4440a8 <posix_memalign@GLIBC_2.2.5>
  405156:	push   0x12
  40515b:	jmp    405020 <free@plt-0x10>

Disassembly of section .text:

0000000000405160 <_start@@Base>:
  405160:	endbr64 
  405164:	xor    ebp,ebp
  405166:	mov    r9,rdx
  405169:	pop    rsi
  40516a:	mov    rdx,rsp
  40516d:	and    rsp,0xfffffffffffffff0
  405171:	push   rax
  405172:	push   rsp
  405173:	mov    r8,0x434520
  40517a:	mov    rcx,0x4344b0
  405181:	mov    rdi,0x41967b
  405188:	call   QWORD PTR [rip+0x3ee4a]        # 443fd8 <__libc_start_main@GLIBC_2.2.5>
  40518e:	hlt    
  40518f:	nop
  405190:	endbr64 
  405194:	ret    
  405195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40519f:	nop
  4051a0:	mov    eax,0x444a77
  4051a5:	push   rbp
  4051a6:	sub    rax,0x444a70
  4051ac:	cmp    rax,0xe
  4051b0:	mov    rbp,rsp
  4051b3:	jbe    4051d0 <_start@@Base+0x70>
  4051b5:	mov    eax,0x0
  4051ba:	test   rax,rax
  4051bd:	je     4051d0 <_start@@Base+0x70>
  4051bf:	pop    rbp
  4051c0:	mov    edi,0x444a70
  4051c5:	jmp    rax
  4051c7:	nop    WORD PTR [rax+rax*1+0x0]
  4051d0:	pop    rbp
  4051d1:	ret    
  4051d2:	nop    DWORD PTR [rax+0x0]
  4051d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051e0:	mov    esi,0x444a70
  4051e5:	push   rbp
  4051e6:	sub    rsi,0x444a70
  4051ed:	sar    rsi,0x3
  4051f1:	mov    rbp,rsp
  4051f4:	mov    rax,rsi
  4051f7:	shr    rax,0x3f
  4051fb:	add    rsi,rax
  4051fe:	sar    rsi,1
  405201:	je     405218 <_start@@Base+0xb8>
  405203:	mov    eax,0x0
  405208:	test   rax,rax
  40520b:	je     405218 <_start@@Base+0xb8>
  40520d:	pop    rbp
  40520e:	mov    edi,0x444a70
  405213:	jmp    rax
  405215:	nop    DWORD PTR [rax]
  405218:	pop    rbp
  405219:	ret    
  40521a:	nop    WORD PTR [rax+rax*1+0x0]
  405220:	cmp    BYTE PTR [rip+0x3f849],0x0        # 444a70 <__bss_start@@Base>
  405227:	jne    40523a <_start@@Base+0xda>
  405229:	push   rbp
  40522a:	mov    rbp,rsp
  40522d:	call   4051a0 <_start@@Base+0x40>
  405232:	pop    rbp
  405233:	mov    BYTE PTR [rip+0x3f836],0x1        # 444a70 <__bss_start@@Base>
  40523a:	repz ret 
  40523c:	nop    DWORD PTR [rax+0x0]
  405240:	mov    edi,0x443d98
  405245:	cmp    QWORD PTR [rdi],0x0
  405249:	jne    405250 <_start@@Base+0xf0>
  40524b:	jmp    4051e0 <_start@@Base+0x80>
  40524d:	nop    DWORD PTR [rax]
  405250:	mov    eax,0x0
  405255:	test   rax,rax
  405258:	je     40524b <_start@@Base+0xeb>
  40525a:	push   rbp
  40525b:	mov    rbp,rsp
  40525e:	call   rax
  405260:	pop    rbp
  405261:	jmp    4051e0 <_start@@Base+0x80>
  405266:	push   rbp
  405267:	mov    rbp,rsp
  40526a:	mov    eax,edi
  40526c:	mov    BYTE PTR [rbp-0x4],al
  40526f:	movzx  eax,BYTE PTR [rbp-0x4]
  405273:	pop    rbp
  405274:	ret    
  405275:	push   rbp
  405276:	mov    rbp,rsp
  405279:	sub    rsp,0x10
  40527d:	mov    QWORD PTR [rbp-0x8],rdi
  405281:	mov    eax,esi
  405283:	mov    BYTE PTR [rbp-0xc],al
  405286:	movzx  eax,BYTE PTR [rbp-0xc]
  40528a:	mov    edi,eax
  40528c:	call   405266 <_start@@Base+0x106>
  405291:	mov    edx,eax
  405293:	mov    rax,QWORD PTR [rbp-0x8]
  405297:	mov    BYTE PTR [rax],dl
  405299:	nop
  40529a:	leave  
  40529b:	ret    
  40529c:	push   rbp
  40529d:	mov    rbp,rsp
  4052a0:	mov    eax,edi
  4052a2:	mov    WORD PTR [rbp-0x4],ax
  4052a6:	movzx  eax,WORD PTR [rbp-0x4]
  4052aa:	pop    rbp
  4052ab:	ret    
  4052ac:	push   rbp
  4052ad:	mov    rbp,rsp
  4052b0:	sub    rsp,0x10
  4052b4:	mov    QWORD PTR [rbp-0x8],rdi
  4052b8:	mov    eax,esi
  4052ba:	mov    WORD PTR [rbp-0xc],ax
  4052be:	movzx  eax,WORD PTR [rbp-0xc]
  4052c2:	mov    edi,eax
  4052c4:	call   40529c <_start@@Base+0x13c>
  4052c9:	mov    edx,eax
  4052cb:	mov    rax,QWORD PTR [rbp-0x8]
  4052cf:	mov    WORD PTR [rax],dx
  4052d2:	nop
  4052d3:	leave  
  4052d4:	ret    
  4052d5:	push   rbp
  4052d6:	mov    rbp,rsp
  4052d9:	mov    DWORD PTR [rbp-0x4],edi
  4052dc:	mov    eax,DWORD PTR [rbp-0x4]
  4052df:	pop    rbp
  4052e0:	ret    
  4052e1:	push   rbp
  4052e2:	mov    rbp,rsp
  4052e5:	sub    rsp,0x10
  4052e9:	mov    QWORD PTR [rbp-0x8],rdi
  4052ed:	mov    DWORD PTR [rbp-0xc],esi
  4052f0:	mov    eax,DWORD PTR [rbp-0xc]
  4052f3:	mov    edi,eax
  4052f5:	call   4052d5 <_start@@Base+0x175>
  4052fa:	mov    edx,eax
  4052fc:	mov    rax,QWORD PTR [rbp-0x8]
  405300:	mov    DWORD PTR [rax],edx
  405302:	nop
  405303:	leave  
  405304:	ret    
  405305:	push   rbp
  405306:	mov    rbp,rsp
  405309:	mov    QWORD PTR [rbp-0x8],rdi
  40530d:	mov    rax,QWORD PTR [rbp-0x8]
  405311:	pop    rbp
  405312:	ret    
  405313:	push   rbp
  405314:	mov    rbp,rsp
  405317:	sub    rsp,0x10
  40531b:	mov    QWORD PTR [rbp-0x8],rdi
  40531f:	mov    QWORD PTR [rbp-0x10],rsi
  405323:	mov    rax,QWORD PTR [rbp-0x10]
  405327:	mov    rdi,rax
  40532a:	call   405305 <_start@@Base+0x1a5>
  40532f:	mov    rdx,rax
  405332:	mov    rax,QWORD PTR [rbp-0x8]
  405336:	mov    QWORD PTR [rax],rdx
  405339:	nop
  40533a:	leave  
  40533b:	ret    
  40533c:	push   rbp
  40533d:	mov    rbp,rsp
  405340:	mov    eax,edi
  405342:	mov    BYTE PTR [rbp-0x4],al
  405345:	movzx  eax,BYTE PTR [rbp-0x4]
  405349:	pop    rbp
  40534a:	ret    
  40534b:	push   rbp
  40534c:	mov    rbp,rsp
  40534f:	sub    rsp,0x10
  405353:	mov    QWORD PTR [rbp-0x8],rdi
  405357:	mov    eax,esi
  405359:	mov    BYTE PTR [rbp-0xc],al
  40535c:	movsx  eax,BYTE PTR [rbp-0xc]
  405360:	mov    edi,eax
  405362:	call   40533c <_start@@Base+0x1dc>
  405367:	mov    edx,eax
  405369:	mov    rax,QWORD PTR [rbp-0x8]
  40536d:	mov    BYTE PTR [rax],dl
  40536f:	nop
  405370:	leave  
  405371:	ret    
  405372:	push   rbp
  405373:	mov    rbp,rsp
  405376:	mov    eax,edi
  405378:	mov    WORD PTR [rbp-0x4],ax
  40537c:	movzx  eax,WORD PTR [rbp-0x4]
  405380:	pop    rbp
  405381:	ret    
  405382:	push   rbp
  405383:	mov    rbp,rsp
  405386:	sub    rsp,0x10
  40538a:	mov    QWORD PTR [rbp-0x8],rdi
  40538e:	mov    eax,esi
  405390:	mov    WORD PTR [rbp-0xc],ax
  405394:	movsx  eax,WORD PTR [rbp-0xc]
  405398:	mov    edi,eax
  40539a:	call   405372 <_start@@Base+0x212>
  40539f:	mov    edx,eax
  4053a1:	mov    rax,QWORD PTR [rbp-0x8]
  4053a5:	mov    WORD PTR [rax],dx
  4053a8:	nop
  4053a9:	leave  
  4053aa:	ret    
  4053ab:	push   rbp
  4053ac:	mov    rbp,rsp
  4053af:	mov    DWORD PTR [rbp-0x4],edi
  4053b2:	mov    eax,DWORD PTR [rbp-0x4]
  4053b5:	pop    rbp
  4053b6:	ret    
  4053b7:	push   rbp
  4053b8:	mov    rbp,rsp
  4053bb:	sub    rsp,0x10
  4053bf:	mov    QWORD PTR [rbp-0x8],rdi
  4053c3:	mov    DWORD PTR [rbp-0xc],esi
  4053c6:	mov    eax,DWORD PTR [rbp-0xc]
  4053c9:	mov    edi,eax
  4053cb:	call   4053ab <_start@@Base+0x24b>
  4053d0:	mov    edx,eax
  4053d2:	mov    rax,QWORD PTR [rbp-0x8]
  4053d6:	mov    DWORD PTR [rax],edx
  4053d8:	nop
  4053d9:	leave  
  4053da:	ret    
  4053db:	push   rbp
  4053dc:	mov    rbp,rsp
  4053df:	mov    QWORD PTR [rbp-0x8],rdi
  4053e3:	mov    rax,QWORD PTR [rbp-0x8]
  4053e7:	pop    rbp
  4053e8:	ret    
  4053e9:	push   rbp
  4053ea:	mov    rbp,rsp
  4053ed:	sub    rsp,0x10
  4053f1:	mov    QWORD PTR [rbp-0x8],rdi
  4053f5:	mov    QWORD PTR [rbp-0x10],rsi
  4053f9:	mov    rax,QWORD PTR [rbp-0x10]
  4053fd:	mov    rdi,rax
  405400:	call   4053db <_start@@Base+0x27b>
  405405:	mov    rdx,rax
  405408:	mov    rax,QWORD PTR [rbp-0x8]
  40540c:	mov    QWORD PTR [rax],rdx
  40540f:	nop
  405410:	leave  
  405411:	ret    
  405412:	push   rbp
  405413:	mov    rbp,rsp
  405416:	vmovss DWORD PTR [rbp-0x14],xmm0
  40541b:	vmovss xmm0,DWORD PTR [rbp-0x14]
  405420:	vmovss DWORD PTR [rbp-0x4],xmm0
  405425:	mov    eax,DWORD PTR [rbp-0x4]
  405428:	mov    DWORD PTR [rbp-0x4],eax
  40542b:	vmovss xmm0,DWORD PTR [rbp-0x4]
  405430:	pop    rbp
  405431:	ret    
  405432:	push   rbp
  405433:	mov    rbp,rsp
  405436:	sub    rsp,0x10
  40543a:	mov    QWORD PTR [rbp-0x8],rdi
  40543e:	vmovss DWORD PTR [rbp-0xc],xmm0
  405443:	mov    eax,DWORD PTR [rbp-0xc]
  405446:	mov    DWORD PTR [rbp-0x10],eax
  405449:	vmovss xmm0,DWORD PTR [rbp-0x10]
  40544e:	call   405412 <_start@@Base+0x2b2>
  405453:	vmovd  edx,xmm0
  405457:	mov    rax,QWORD PTR [rbp-0x8]
  40545b:	mov    DWORD PTR [rax],edx
  40545d:	nop
  40545e:	leave  
  40545f:	ret    
  405460:	push   rbp
  405461:	mov    rbp,rsp
  405464:	vmovsd QWORD PTR [rbp-0x18],xmm0
  405469:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40546e:	vmovsd QWORD PTR [rbp-0x8],xmm0
  405473:	mov    rax,QWORD PTR [rbp-0x8]
  405477:	mov    QWORD PTR [rbp-0x8],rax
  40547b:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  405480:	pop    rbp
  405481:	ret    
  405482:	push   rbp
  405483:	mov    rbp,rsp
  405486:	sub    rsp,0x18
  40548a:	mov    QWORD PTR [rbp-0x8],rdi
  40548e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  405493:	mov    rax,QWORD PTR [rbp-0x10]
  405497:	mov    QWORD PTR [rbp-0x18],rax
  40549b:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4054a0:	call   405460 <_start@@Base+0x300>
  4054a5:	vmovq  rdx,xmm0
  4054aa:	mov    rax,QWORD PTR [rbp-0x8]
  4054ae:	mov    QWORD PTR [rax],rdx
  4054b1:	nop
  4054b2:	leave  
  4054b3:	ret    
  4054b4:	push   rbp
  4054b5:	mov    rbp,rsp
  4054b8:	mov    eax,edi
  4054ba:	mov    BYTE PTR [rbp-0x4],al
  4054bd:	movzx  eax,BYTE PTR [rbp-0x4]
  4054c1:	pop    rbp
  4054c2:	ret    
  4054c3:	push   rbp
  4054c4:	mov    rbp,rsp
  4054c7:	sub    rsp,0x10
  4054cb:	mov    QWORD PTR [rbp-0x8],rdi
  4054cf:	mov    eax,esi
  4054d1:	mov    BYTE PTR [rbp-0xc],al
  4054d4:	movzx  eax,BYTE PTR [rbp-0xc]
  4054d8:	mov    edi,eax
  4054da:	call   4054b4 <_start@@Base+0x354>
  4054df:	mov    edx,eax
  4054e1:	mov    rax,QWORD PTR [rbp-0x8]
  4054e5:	mov    BYTE PTR [rax],dl
  4054e7:	nop
  4054e8:	leave  
  4054e9:	ret    
  4054ea:	push   rbp
  4054eb:	mov    rbp,rsp
  4054ee:	sub    rsp,0x30
  4054f2:	mov    QWORD PTR [rbp-0x8],rdi
  4054f6:	mov    QWORD PTR [rbp-0x10],rsi
  4054fa:	mov    QWORD PTR [rbp-0x18],rdx
  4054fe:	mov    QWORD PTR [rbp-0x20],rcx
  405502:	mov    DWORD PTR [rbp-0x24],r8d
  405506:	mov    rax,QWORD PTR [rbp-0x8]
  40550a:	mov    edx,0x40
  40550f:	mov    esi,0x0
  405514:	mov    rdi,rax
  405517:	call   405090 <memset@plt>
  40551c:	mov    rax,QWORD PTR [rbp-0x8]
  405520:	mov    rdx,QWORD PTR [rbp-0x10]
  405524:	mov    QWORD PTR [rax],rdx
  405527:	mov    rax,QWORD PTR [rbp-0x8]
  40552b:	mov    rdx,QWORD PTR [rbp-0x18]
  40552f:	mov    QWORD PTR [rax+0x8],rdx
  405533:	mov    rax,QWORD PTR [rbp-0x8]
  405537:	mov    DWORD PTR [rax+0x14],0x1
  40553e:	mov    rax,QWORD PTR [rbp-0x8]
  405542:	mov    edx,DWORD PTR [rbp-0x24]
  405545:	mov    DWORD PTR [rax+0x10],edx
  405548:	mov    rax,QWORD PTR [rbp-0x8]
  40554c:	mov    rdx,QWORD PTR [rbp-0x18]
  405550:	mov    QWORD PTR [rax+0x20],rdx
  405554:	mov    rax,QWORD PTR [rbp-0x8]
  405558:	mov    rdx,QWORD PTR [rbp-0x20]
  40555c:	mov    QWORD PTR [rax+0x28],rdx
  405560:	mov    rax,QWORD PTR [rbp-0x8]
  405564:	mov    rdx,QWORD PTR [rbp-0x18]
  405568:	mov    QWORD PTR [rax+0x30],rdx
  40556c:	nop
  40556d:	leave  
  40556e:	ret    
  40556f:	push   rbp
  405570:	mov    rbp,rsp
  405573:	sub    rsp,0x20
  405577:	mov    QWORD PTR [rbp-0x8],rdi
  40557b:	mov    QWORD PTR [rbp-0x10],rsi
  40557f:	mov    QWORD PTR [rbp-0x18],rdx
  405583:	mov    rdx,QWORD PTR [rbp-0x18]
  405587:	mov    rax,QWORD PTR [rbp-0x10]
  40558b:	sub    rdx,rax
  40558e:	mov    rax,rdx
  405591:	cmp    rax,0x1
  405595:	jle    4055cc <_start@@Base+0x46c>
  405597:	mov    rax,QWORD PTR [rbp-0x10]
  40559b:	movzx  eax,BYTE PTR [rax]
  40559e:	cmp    al,0x20
  4055a0:	jle    4055a8 <_start@@Base+0x448>
  4055a2:	mov    rax,QWORD PTR [rbp-0x10]
  4055a6:	jmp    4055e3 <_start@@Base+0x483>
  4055a8:	mov    rax,QWORD PTR [rbp-0x10]
  4055ac:	movzx  eax,BYTE PTR [rax]
  4055af:	cmp    al,0x20
  4055b1:	jne    4055cc <_start@@Base+0x46c>
  4055b3:	mov    rax,QWORD PTR [rbp-0x10]
  4055b7:	add    rax,0x1
  4055bb:	movzx  eax,BYTE PTR [rax]
  4055be:	cmp    al,0x20
  4055c0:	jle    4055cc <_start@@Base+0x46c>
  4055c2:	mov    rax,QWORD PTR [rbp-0x10]
  4055c6:	add    rax,0x1
  4055ca:	jmp    4055e3 <_start@@Base+0x483>
  4055cc:	mov    rdx,QWORD PTR [rbp-0x18]
  4055d0:	mov    rcx,QWORD PTR [rbp-0x10]
  4055d4:	mov    rax,QWORD PTR [rbp-0x8]
  4055d8:	mov    rsi,rcx
  4055db:	mov    rdi,rax
  4055de:	call   425cce <flatcc_json_parser_space_ext@@Base>
  4055e3:	leave  
  4055e4:	ret    
  4055e5:	push   rbp
  4055e6:	mov    rbp,rsp
  4055e9:	sub    rsp,0x20
  4055ed:	mov    QWORD PTR [rbp-0x8],rdi
  4055f1:	mov    QWORD PTR [rbp-0x10],rsi
  4055f5:	mov    QWORD PTR [rbp-0x18],rdx
  4055f9:	mov    rax,QWORD PTR [rbp-0x10]
  4055fd:	cmp    rax,QWORD PTR [rbp-0x18]
  405601:	jne    405609 <_start@@Base+0x4a9>
  405603:	mov    rax,QWORD PTR [rbp-0x10]
  405607:	jmp    405638 <_start@@Base+0x4d8>
  405609:	mov    rax,QWORD PTR [rbp-0x10]
  40560d:	movzx  eax,BYTE PTR [rax]
  405610:	cmp    al,0x22
  405612:	jne    40561f <_start@@Base+0x4bf>
  405614:	add    QWORD PTR [rbp-0x10],0x1
  405619:	mov    rax,QWORD PTR [rbp-0x10]
  40561d:	jmp    405638 <_start@@Base+0x4d8>
  40561f:	mov    rdx,QWORD PTR [rbp-0x18]
  405623:	mov    rsi,QWORD PTR [rbp-0x10]
  405627:	mov    rax,QWORD PTR [rbp-0x8]
  40562b:	mov    ecx,0x5
  405630:	mov    rdi,rax
  405633:	call   425bce <flatcc_json_parser_set_error@@Base>
  405638:	leave  
  405639:	ret    
  40563a:	push   rbp
  40563b:	mov    rbp,rsp
  40563e:	mov    QWORD PTR [rbp-0x18],rdi
  405642:	mov    QWORD PTR [rbp-0x20],rsi
  405646:	mov    QWORD PTR [rbp-0x10],0x0
  40564e:	mov    rdx,QWORD PTR [rbp-0x20]
  405652:	mov    rax,QWORD PTR [rbp-0x18]
  405656:	sub    rdx,rax
  405659:	mov    rax,rdx
  40565c:	mov    QWORD PTR [rbp-0x8],rax
  405660:	cmp    QWORD PTR [rbp-0x8],0x8
  405665:	jbe    40566f <_start@@Base+0x50f>
  405667:	mov    QWORD PTR [rbp-0x8],0x8
  40566f:	cmp    QWORD PTR [rbp-0x8],0x8
  405674:	ja     405750 <_start@@Base+0x5f0>
  40567a:	mov    rax,QWORD PTR [rbp-0x8]
  40567e:	lea    rdx,[rax*4+0x0]
  405686:	lea    rax,[rip+0x2f987]        # 435014 <_IO_stdin_used@@Base+0x14>
  40568d:	mov    eax,DWORD PTR [rdx+rax*1]
  405690:	movsxd rdx,eax
  405693:	lea    rax,[rip+0x2f97a]        # 435014 <_IO_stdin_used@@Base+0x14>
  40569a:	add    rax,rdx
  40569d:	jmp    rax
  40569f:	mov    rax,QWORD PTR [rbp-0x18]
  4056a3:	add    rax,0x7
  4056a7:	movzx  eax,BYTE PTR [rax]
  4056aa:	movsx  rax,al
  4056ae:	or     QWORD PTR [rbp-0x10],rax
  4056b2:	mov    rax,QWORD PTR [rbp-0x18]
  4056b6:	add    rax,0x6
  4056ba:	movzx  eax,BYTE PTR [rax]
  4056bd:	movsx  rax,al
  4056c1:	shl    rax,0x8
  4056c5:	or     QWORD PTR [rbp-0x10],rax
  4056c9:	mov    rax,QWORD PTR [rbp-0x18]
  4056cd:	add    rax,0x5
  4056d1:	movzx  eax,BYTE PTR [rax]
  4056d4:	movsx  rax,al
  4056d8:	shl    rax,0x10
  4056dc:	or     QWORD PTR [rbp-0x10],rax
  4056e0:	mov    rax,QWORD PTR [rbp-0x18]
  4056e4:	add    rax,0x4
  4056e8:	movzx  eax,BYTE PTR [rax]
  4056eb:	movsx  rax,al
  4056ef:	shl    rax,0x18
  4056f3:	or     QWORD PTR [rbp-0x10],rax
  4056f7:	mov    rax,QWORD PTR [rbp-0x18]
  4056fb:	add    rax,0x3
  4056ff:	movzx  eax,BYTE PTR [rax]
  405702:	movsx  rax,al
  405706:	shl    rax,0x20
  40570a:	or     QWORD PTR [rbp-0x10],rax
  40570e:	mov    rax,QWORD PTR [rbp-0x18]
  405712:	add    rax,0x2
  405716:	movzx  eax,BYTE PTR [rax]
  405719:	movsx  rax,al
  40571d:	shl    rax,0x28
  405721:	or     QWORD PTR [rbp-0x10],rax
  405725:	mov    rax,QWORD PTR [rbp-0x18]
  405729:	add    rax,0x1
  40572d:	movzx  eax,BYTE PTR [rax]
  405730:	movsx  rax,al
  405734:	shl    rax,0x30
  405738:	or     QWORD PTR [rbp-0x10],rax
  40573c:	mov    rax,QWORD PTR [rbp-0x18]
  405740:	movzx  eax,BYTE PTR [rax]
  405743:	movsx  rax,al
  405747:	shl    rax,0x38
  40574b:	or     QWORD PTR [rbp-0x10],rax
  40574f:	nop
  405750:	mov    rax,QWORD PTR [rbp-0x10]
  405754:	pop    rbp
  405755:	ret    
  405756:	push   rbp
  405757:	mov    rbp,rsp
  40575a:	sub    rsp,0x20
  40575e:	mov    QWORD PTR [rbp-0x18],rdi
  405762:	mov    QWORD PTR [rbp-0x20],rsi
  405766:	mov    rdx,QWORD PTR [rbp-0x20]
  40576a:	mov    rax,QWORD PTR [rbp-0x18]
  40576e:	sub    rdx,rax
  405771:	mov    rax,rdx
  405774:	mov    QWORD PTR [rbp-0x8],rax
  405778:	cmp    QWORD PTR [rbp-0x8],0x7
  40577d:	jbe    40578b <_start@@Base+0x62b>
  40577f:	mov    rax,QWORD PTR [rbp-0x18]
  405783:	mov    rax,QWORD PTR [rax]
  405786:	bswap  rax
  405789:	jmp    40579e <_start@@Base+0x63e>
  40578b:	mov    rdx,QWORD PTR [rbp-0x20]
  40578f:	mov    rax,QWORD PTR [rbp-0x18]
  405793:	mov    rsi,rdx
  405796:	mov    rdi,rax
  405799:	call   40563a <_start@@Base+0x4da>
  40579e:	leave  
  40579f:	ret    
  4057a0:	push   rbp
  4057a1:	mov    rbp,rsp
  4057a4:	mov    QWORD PTR [rbp-0x18],rdi
  4057a8:	mov    QWORD PTR [rbp-0x20],rsi
  4057ac:	mov    QWORD PTR [rbp-0x28],rdx
  4057b0:	mov    DWORD PTR [rbp-0x2c],ecx
  4057b3:	mov    rax,QWORD PTR [rbp-0x20]
  4057b7:	mov    QWORD PTR [rbp-0x8],rax
  4057bb:	mov    rdx,QWORD PTR [rbp-0x28]
  4057bf:	mov    rax,QWORD PTR [rbp-0x20]
  4057c3:	sub    rdx,rax
  4057c6:	mov    eax,DWORD PTR [rbp-0x2c]
  4057c9:	cdqe   
  4057cb:	cmp    rdx,rax
  4057ce:	jg     4057d6 <_start@@Base+0x676>
  4057d0:	mov    rax,QWORD PTR [rbp-0x8]
  4057d4:	jmp    405800 <_start@@Base+0x6a0>
  4057d6:	mov    eax,DWORD PTR [rbp-0x2c]
  4057d9:	movsxd rdx,eax
  4057dc:	mov    rax,QWORD PTR [rbp-0x20]
  4057e0:	add    rax,rdx
  4057e3:	movzx  eax,BYTE PTR [rax]
  4057e6:	cmp    al,0x2e
  4057e8:	je     4057f0 <_start@@Base+0x690>
  4057ea:	mov    rax,QWORD PTR [rbp-0x8]
  4057ee:	jmp    405800 <_start@@Base+0x6a0>
  4057f0:	mov    eax,DWORD PTR [rbp-0x2c]
  4057f3:	cdqe   
  4057f5:	lea    rdx,[rax+0x1]
  4057f9:	mov    rax,QWORD PTR [rbp-0x20]
  4057fd:	add    rax,rdx
  405800:	pop    rbp
  405801:	ret    
  405802:	push   rbp
  405803:	mov    rbp,rsp
  405806:	sub    rsp,0x20
  40580a:	mov    QWORD PTR [rbp-0x8],rdi
  40580e:	mov    QWORD PTR [rbp-0x10],rsi
  405812:	mov    QWORD PTR [rbp-0x18],rdx
  405816:	mov    rdx,QWORD PTR [rbp-0x18]
  40581a:	mov    rcx,QWORD PTR [rbp-0x10]
  40581e:	mov    rax,QWORD PTR [rbp-0x8]
  405822:	mov    rsi,rcx
  405825:	mov    rdi,rax
  405828:	call   4055e5 <_start@@Base+0x485>
  40582d:	mov    QWORD PTR [rbp-0x10],rax
  405831:	mov    rdx,QWORD PTR [rbp-0x18]
  405835:	mov    rcx,QWORD PTR [rbp-0x10]
  405839:	mov    rax,QWORD PTR [rbp-0x8]
  40583d:	mov    rsi,rcx
  405840:	mov    rdi,rax
  405843:	call   40556f <_start@@Base+0x40f>
  405848:	mov    QWORD PTR [rbp-0x10],rax
  40584c:	mov    rax,QWORD PTR [rbp-0x10]
  405850:	leave  
  405851:	ret    
  405852:	push   rbp
  405853:	mov    rbp,rsp
  405856:	sub    rsp,0x20
  40585a:	mov    QWORD PTR [rbp-0x8],rdi
  40585e:	mov    QWORD PTR [rbp-0x10],rsi
  405862:	mov    QWORD PTR [rbp-0x18],rdx
  405866:	mov    QWORD PTR [rbp-0x20],rcx
  40586a:	mov    rax,QWORD PTR [rbp-0x10]
  40586e:	cmp    rax,QWORD PTR [rbp-0x18]
  405872:	je     40587f <_start@@Base+0x71f>
  405874:	mov    rax,QWORD PTR [rbp-0x10]
  405878:	movzx  eax,BYTE PTR [rax]
  40587b:	cmp    al,0x7b
  40587d:	je     4058a4 <_start@@Base+0x744>
  40587f:	mov    rax,QWORD PTR [rbp-0x20]
  405883:	mov    DWORD PTR [rax],0x0
  405889:	mov    rdx,QWORD PTR [rbp-0x18]
  40588d:	mov    rsi,QWORD PTR [rbp-0x10]
  405891:	mov    rax,QWORD PTR [rbp-0x8]
  405895:	mov    ecx,0x15
  40589a:	mov    rdi,rax
  40589d:	call   425bce <flatcc_json_parser_set_error@@Base>
  4058a2:	jmp    40590d <_start@@Base+0x7ad>
  4058a4:	mov    rax,QWORD PTR [rbp-0x10]
  4058a8:	lea    rcx,[rax+0x1]
  4058ac:	mov    rdx,QWORD PTR [rbp-0x18]
  4058b0:	mov    rax,QWORD PTR [rbp-0x8]
  4058b4:	mov    rsi,rcx
  4058b7:	mov    rdi,rax
  4058ba:	call   40556f <_start@@Base+0x40f>
  4058bf:	mov    QWORD PTR [rbp-0x10],rax
  4058c3:	mov    rax,QWORD PTR [rbp-0x10]
  4058c7:	cmp    rax,QWORD PTR [rbp-0x18]
  4058cb:	je     4058ff <_start@@Base+0x79f>
  4058cd:	mov    rax,QWORD PTR [rbp-0x10]
  4058d1:	movzx  eax,BYTE PTR [rax]
  4058d4:	cmp    al,0x7d
  4058d6:	jne    4058ff <_start@@Base+0x79f>
  4058d8:	mov    rax,QWORD PTR [rbp-0x20]
  4058dc:	mov    DWORD PTR [rax],0x0
  4058e2:	mov    rax,QWORD PTR [rbp-0x10]
  4058e6:	lea    rcx,[rax+0x1]
  4058ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4058ee:	mov    rax,QWORD PTR [rbp-0x8]
  4058f2:	mov    rsi,rcx
  4058f5:	mov    rdi,rax
  4058f8:	call   40556f <_start@@Base+0x40f>
  4058fd:	jmp    40590d <_start@@Base+0x7ad>
  4058ff:	mov    rax,QWORD PTR [rbp-0x20]
  405903:	mov    DWORD PTR [rax],0x1
  405909:	mov    rax,QWORD PTR [rbp-0x10]
  40590d:	leave  
  40590e:	ret    
  40590f:	push   rbp
  405910:	mov    rbp,rsp
  405913:	sub    rsp,0x20
  405917:	mov    QWORD PTR [rbp-0x8],rdi
  40591b:	mov    QWORD PTR [rbp-0x10],rsi
  40591f:	mov    QWORD PTR [rbp-0x18],rdx
  405923:	mov    QWORD PTR [rbp-0x20],rcx
  405927:	mov    rdx,QWORD PTR [rbp-0x18]
  40592b:	mov    rcx,QWORD PTR [rbp-0x10]
  40592f:	mov    rax,QWORD PTR [rbp-0x8]
  405933:	mov    rsi,rcx
  405936:	mov    rdi,rax
  405939:	call   40556f <_start@@Base+0x40f>
  40593e:	mov    QWORD PTR [rbp-0x10],rax
  405942:	mov    rax,QWORD PTR [rbp-0x10]
  405946:	cmp    rax,QWORD PTR [rbp-0x18]
  40594a:	jne    40595f <_start@@Base+0x7ff>
  40594c:	mov    rax,QWORD PTR [rbp-0x20]
  405950:	mov    DWORD PTR [rax],0x0
  405956:	mov    rax,QWORD PTR [rbp-0x10]
  40595a:	jmp    405a4b <_start@@Base+0x8eb>
  40595f:	mov    rax,QWORD PTR [rbp-0x10]
  405963:	movzx  eax,BYTE PTR [rax]
  405966:	cmp    al,0x2c
  405968:	je     4059bd <_start@@Base+0x85d>
  40596a:	mov    rax,QWORD PTR [rbp-0x20]
  40596e:	mov    DWORD PTR [rax],0x0
  405974:	mov    rax,QWORD PTR [rbp-0x10]
  405978:	movzx  eax,BYTE PTR [rax]
  40597b:	cmp    al,0x7d
  40597d:	je     40599d <_start@@Base+0x83d>
  40597f:	mov    rdx,QWORD PTR [rbp-0x18]
  405983:	mov    rsi,QWORD PTR [rbp-0x10]
  405987:	mov    rax,QWORD PTR [rbp-0x8]
  40598b:	mov    ecx,0xa
  405990:	mov    rdi,rax
  405993:	call   425bce <flatcc_json_parser_set_error@@Base>
  405998:	jmp    405a4b <_start@@Base+0x8eb>
  40599d:	mov    rax,QWORD PTR [rbp-0x10]
  4059a1:	lea    rcx,[rax+0x1]
  4059a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4059a9:	mov    rax,QWORD PTR [rbp-0x8]
  4059ad:	mov    rsi,rcx
  4059b0:	mov    rdi,rax
  4059b3:	call   40556f <_start@@Base+0x40f>
  4059b8:	jmp    405a4b <_start@@Base+0x8eb>
  4059bd:	mov    rax,QWORD PTR [rbp-0x10]
  4059c1:	lea    rcx,[rax+0x1]
  4059c5:	mov    rdx,QWORD PTR [rbp-0x18]
  4059c9:	mov    rax,QWORD PTR [rbp-0x8]
  4059cd:	mov    rsi,rcx
  4059d0:	mov    rdi,rax
  4059d3:	call   40556f <_start@@Base+0x40f>
  4059d8:	mov    QWORD PTR [rbp-0x10],rax
  4059dc:	mov    rax,QWORD PTR [rbp-0x10]
  4059e0:	cmp    rax,QWORD PTR [rbp-0x18]
  4059e4:	jne    405a0b <_start@@Base+0x8ab>
  4059e6:	mov    rax,QWORD PTR [rbp-0x20]
  4059ea:	mov    DWORD PTR [rax],0x0
  4059f0:	mov    rdx,QWORD PTR [rbp-0x18]
  4059f4:	mov    rsi,QWORD PTR [rbp-0x10]
  4059f8:	mov    rax,QWORD PTR [rbp-0x8]
  4059fc:	mov    ecx,0xa
  405a01:	mov    rdi,rax
  405a04:	call   425bce <flatcc_json_parser_set_error@@Base>
  405a09:	jmp    405a4b <_start@@Base+0x8eb>
  405a0b:	mov    rax,QWORD PTR [rbp-0x10]
  405a0f:	movzx  eax,BYTE PTR [rax]
  405a12:	cmp    al,0x7d
  405a14:	jne    405a3d <_start@@Base+0x8dd>
  405a16:	mov    rax,QWORD PTR [rbp-0x20]
  405a1a:	mov    DWORD PTR [rax],0x0
  405a20:	mov    rax,QWORD PTR [rbp-0x10]
  405a24:	lea    rcx,[rax+0x1]
  405a28:	mov    rdx,QWORD PTR [rbp-0x18]
  405a2c:	mov    rax,QWORD PTR [rbp-0x8]
  405a30:	mov    rsi,rcx
  405a33:	mov    rdi,rax
  405a36:	call   40556f <_start@@Base+0x40f>
  405a3b:	jmp    405a4b <_start@@Base+0x8eb>
  405a3d:	mov    rax,QWORD PTR [rbp-0x20]
  405a41:	mov    DWORD PTR [rax],0x1
  405a47:	mov    rax,QWORD PTR [rbp-0x10]
  405a4b:	leave  
  405a4c:	ret    
  405a4d:	push   rbp
  405a4e:	mov    rbp,rsp
  405a51:	sub    rsp,0x20
  405a55:	mov    QWORD PTR [rbp-0x8],rdi
  405a59:	mov    QWORD PTR [rbp-0x10],rsi
  405a5d:	mov    QWORD PTR [rbp-0x18],rdx
  405a61:	mov    QWORD PTR [rbp-0x20],rcx
  405a65:	mov    rax,QWORD PTR [rbp-0x10]
  405a69:	cmp    rax,QWORD PTR [rbp-0x18]
  405a6d:	je     405a7a <_start@@Base+0x91a>
  405a6f:	mov    rax,QWORD PTR [rbp-0x10]
  405a73:	movzx  eax,BYTE PTR [rax]
  405a76:	cmp    al,0x5b
  405a78:	je     405a9f <_start@@Base+0x93f>
  405a7a:	mov    rax,QWORD PTR [rbp-0x20]
  405a7e:	mov    DWORD PTR [rax],0x0
  405a84:	mov    rdx,QWORD PTR [rbp-0x18]
  405a88:	mov    rsi,QWORD PTR [rbp-0x10]
  405a8c:	mov    rax,QWORD PTR [rbp-0x8]
  405a90:	mov    ecx,0x16
  405a95:	mov    rdi,rax
  405a98:	call   425bce <flatcc_json_parser_set_error@@Base>
  405a9d:	jmp    405b08 <_start@@Base+0x9a8>
  405a9f:	mov    rax,QWORD PTR [rbp-0x10]
  405aa3:	lea    rcx,[rax+0x1]
  405aa7:	mov    rdx,QWORD PTR [rbp-0x18]
  405aab:	mov    rax,QWORD PTR [rbp-0x8]
  405aaf:	mov    rsi,rcx
  405ab2:	mov    rdi,rax
  405ab5:	call   40556f <_start@@Base+0x40f>
  405aba:	mov    QWORD PTR [rbp-0x10],rax
  405abe:	mov    rax,QWORD PTR [rbp-0x10]
  405ac2:	cmp    rax,QWORD PTR [rbp-0x18]
  405ac6:	je     405afa <_start@@Base+0x99a>
  405ac8:	mov    rax,QWORD PTR [rbp-0x10]
  405acc:	movzx  eax,BYTE PTR [rax]
  405acf:	cmp    al,0x5d
  405ad1:	jne    405afa <_start@@Base+0x99a>
  405ad3:	mov    rax,QWORD PTR [rbp-0x20]
  405ad7:	mov    DWORD PTR [rax],0x0
  405add:	mov    rax,QWORD PTR [rbp-0x10]
  405ae1:	lea    rcx,[rax+0x1]
  405ae5:	mov    rdx,QWORD PTR [rbp-0x18]
  405ae9:	mov    rax,QWORD PTR [rbp-0x8]
  405aed:	mov    rsi,rcx
  405af0:	mov    rdi,rax
  405af3:	call   40556f <_start@@Base+0x40f>
  405af8:	jmp    405b08 <_start@@Base+0x9a8>
  405afa:	mov    rax,QWORD PTR [rbp-0x20]
  405afe:	mov    DWORD PTR [rax],0x1
  405b04:	mov    rax,QWORD PTR [rbp-0x10]
  405b08:	leave  
  405b09:	ret    
  405b0a:	push   rbp
  405b0b:	mov    rbp,rsp
  405b0e:	sub    rsp,0x20
  405b12:	mov    QWORD PTR [rbp-0x8],rdi
  405b16:	mov    QWORD PTR [rbp-0x10],rsi
  405b1a:	mov    QWORD PTR [rbp-0x18],rdx
  405b1e:	mov    QWORD PTR [rbp-0x20],rcx
  405b22:	mov    rdx,QWORD PTR [rbp-0x18]
  405b26:	mov    rcx,QWORD PTR [rbp-0x10]
  405b2a:	mov    rax,QWORD PTR [rbp-0x8]
  405b2e:	mov    rsi,rcx
  405b31:	mov    rdi,rax
  405b34:	call   40556f <_start@@Base+0x40f>
  405b39:	mov    QWORD PTR [rbp-0x10],rax
  405b3d:	mov    rax,QWORD PTR [rbp-0x10]
  405b41:	cmp    rax,QWORD PTR [rbp-0x18]
  405b45:	jne    405b5a <_start@@Base+0x9fa>
  405b47:	mov    rax,QWORD PTR [rbp-0x20]
  405b4b:	mov    DWORD PTR [rax],0x0
  405b51:	mov    rax,QWORD PTR [rbp-0x10]
  405b55:	jmp    405c46 <_start@@Base+0xae6>
  405b5a:	mov    rax,QWORD PTR [rbp-0x10]
  405b5e:	movzx  eax,BYTE PTR [rax]
  405b61:	cmp    al,0x2c
  405b63:	je     405bb8 <_start@@Base+0xa58>
  405b65:	mov    rax,QWORD PTR [rbp-0x20]
  405b69:	mov    DWORD PTR [rax],0x0
  405b6f:	mov    rax,QWORD PTR [rbp-0x10]
  405b73:	movzx  eax,BYTE PTR [rax]
  405b76:	cmp    al,0x5d
  405b78:	je     405b98 <_start@@Base+0xa38>
  405b7a:	mov    rdx,QWORD PTR [rbp-0x18]
  405b7e:	mov    rsi,QWORD PTR [rbp-0x10]
  405b82:	mov    rax,QWORD PTR [rbp-0x8]
  405b86:	mov    ecx,0x9
  405b8b:	mov    rdi,rax
  405b8e:	call   425bce <flatcc_json_parser_set_error@@Base>
  405b93:	jmp    405c46 <_start@@Base+0xae6>
  405b98:	mov    rax,QWORD PTR [rbp-0x10]
  405b9c:	lea    rcx,[rax+0x1]
  405ba0:	mov    rdx,QWORD PTR [rbp-0x18]
  405ba4:	mov    rax,QWORD PTR [rbp-0x8]
  405ba8:	mov    rsi,rcx
  405bab:	mov    rdi,rax
  405bae:	call   40556f <_start@@Base+0x40f>
  405bb3:	jmp    405c46 <_start@@Base+0xae6>
  405bb8:	mov    rax,QWORD PTR [rbp-0x10]
  405bbc:	lea    rcx,[rax+0x1]
  405bc0:	mov    rdx,QWORD PTR [rbp-0x18]
  405bc4:	mov    rax,QWORD PTR [rbp-0x8]
  405bc8:	mov    rsi,rcx
  405bcb:	mov    rdi,rax
  405bce:	call   40556f <_start@@Base+0x40f>
  405bd3:	mov    QWORD PTR [rbp-0x10],rax
  405bd7:	mov    rax,QWORD PTR [rbp-0x10]
  405bdb:	cmp    rax,QWORD PTR [rbp-0x18]
  405bdf:	jne    405c06 <_start@@Base+0xaa6>
  405be1:	mov    rax,QWORD PTR [rbp-0x20]
  405be5:	mov    DWORD PTR [rax],0x0
  405beb:	mov    rdx,QWORD PTR [rbp-0x18]
  405bef:	mov    rsi,QWORD PTR [rbp-0x10]
  405bf3:	mov    rax,QWORD PTR [rbp-0x8]
  405bf7:	mov    ecx,0x9
  405bfc:	mov    rdi,rax
  405bff:	call   425bce <flatcc_json_parser_set_error@@Base>
  405c04:	jmp    405c46 <_start@@Base+0xae6>
  405c06:	mov    rax,QWORD PTR [rbp-0x10]
  405c0a:	movzx  eax,BYTE PTR [rax]
  405c0d:	cmp    al,0x5d
  405c0f:	jne    405c38 <_start@@Base+0xad8>
  405c11:	mov    rax,QWORD PTR [rbp-0x20]
  405c15:	mov    DWORD PTR [rax],0x0
  405c1b:	mov    rax,QWORD PTR [rbp-0x10]
  405c1f:	lea    rcx,[rax+0x1]
  405c23:	mov    rdx,QWORD PTR [rbp-0x18]
  405c27:	mov    rax,QWORD PTR [rbp-0x8]
  405c2b:	mov    rsi,rcx
  405c2e:	mov    rdi,rax
  405c31:	call   40556f <_start@@Base+0x40f>
  405c36:	jmp    405c46 <_start@@Base+0xae6>
  405c38:	mov    rax,QWORD PTR [rbp-0x20]
  405c3c:	mov    DWORD PTR [rax],0x1
  405c42:	mov    rax,QWORD PTR [rbp-0x10]
  405c46:	leave  
  405c47:	ret    
  405c48:	push   rbp
  405c49:	mov    rbp,rsp
  405c4c:	sub    rsp,0x30
  405c50:	mov    QWORD PTR [rbp-0x18],rdi
  405c54:	mov    QWORD PTR [rbp-0x20],rsi
  405c58:	mov    QWORD PTR [rbp-0x28],rdx
  405c5c:	mov    DWORD PTR [rbp-0x2c],ecx
  405c5f:	mov    rax,QWORD PTR [rbp-0x20]
  405c63:	mov    QWORD PTR [rbp-0x8],rax
  405c67:	mov    rdx,QWORD PTR [rbp-0x28]
  405c6b:	mov    rax,QWORD PTR [rbp-0x20]
  405c6f:	sub    rdx,rax
  405c72:	mov    eax,DWORD PTR [rbp-0x2c]
  405c75:	cdqe   
  405c77:	cmp    rdx,rax
  405c7a:	jg     405c85 <_start@@Base+0xb25>
  405c7c:	mov    rax,QWORD PTR [rbp-0x8]
  405c80:	jmp    405d13 <_start@@Base+0xbb3>
  405c85:	mov    eax,DWORD PTR [rbp-0x2c]
  405c88:	movsxd rdx,eax
  405c8b:	mov    rax,QWORD PTR [rbp-0x20]
  405c8f:	add    rax,rdx
  405c92:	movzx  eax,BYTE PTR [rax]
  405c95:	cmp    al,0x22
  405c97:	je     405c9f <_start@@Base+0xb3f>
  405c99:	mov    rax,QWORD PTR [rbp-0x8]
  405c9d:	jmp    405d13 <_start@@Base+0xbb3>
  405c9f:	mov    eax,DWORD PTR [rbp-0x2c]
  405ca2:	cdqe   
  405ca4:	add    rax,0x1
  405ca8:	add    QWORD PTR [rbp-0x20],rax
  405cac:	mov    rdx,QWORD PTR [rbp-0x28]
  405cb0:	mov    rcx,QWORD PTR [rbp-0x20]
  405cb4:	mov    rax,QWORD PTR [rbp-0x18]
  405cb8:	mov    rsi,rcx
  405cbb:	mov    rdi,rax
  405cbe:	call   40556f <_start@@Base+0x40f>
  405cc3:	mov    QWORD PTR [rbp-0x20],rax
  405cc7:	mov    rax,QWORD PTR [rbp-0x20]
  405ccb:	cmp    rax,QWORD PTR [rbp-0x28]
  405ccf:	je     405cfa <_start@@Base+0xb9a>
  405cd1:	mov    rax,QWORD PTR [rbp-0x20]
  405cd5:	movzx  eax,BYTE PTR [rax]
  405cd8:	cmp    al,0x3a
  405cda:	jne    405cfa <_start@@Base+0xb9a>
  405cdc:	add    QWORD PTR [rbp-0x20],0x1
  405ce1:	mov    rdx,QWORD PTR [rbp-0x28]
  405ce5:	mov    rcx,QWORD PTR [rbp-0x20]
  405ce9:	mov    rax,QWORD PTR [rbp-0x18]
  405ced:	mov    rsi,rcx
  405cf0:	mov    rdi,rax
  405cf3:	call   40556f <_start@@Base+0x40f>
  405cf8:	jmp    405d13 <_start@@Base+0xbb3>
  405cfa:	mov    rdx,QWORD PTR [rbp-0x28]
  405cfe:	mov    rsi,QWORD PTR [rbp-0x20]
  405d02:	mov    rax,QWORD PTR [rbp-0x18]
  405d06:	mov    ecx,0x4
  405d0b:	mov    rdi,rax
  405d0e:	call   425bce <flatcc_json_parser_set_error@@Base>
  405d13:	leave  
  405d14:	ret    
  405d15:	push   rbp
  405d16:	mov    rbp,rsp
  405d19:	sub    rsp,0x30
  405d1d:	mov    QWORD PTR [rbp-0x8],rdi
  405d21:	mov    QWORD PTR [rbp-0x10],rsi
  405d25:	mov    QWORD PTR [rbp-0x18],rdx
  405d29:	mov    DWORD PTR [rbp-0x1c],ecx
  405d2c:	mov    QWORD PTR [rbp-0x28],r8
  405d30:	mov    QWORD PTR [rbp-0x30],r9
  405d34:	cmp    DWORD PTR [rbp-0x1c],0x0
  405d38:	je     405d55 <_start@@Base+0xbf5>
  405d3a:	mov    rdx,QWORD PTR [rbp-0x18]
  405d3e:	mov    rsi,QWORD PTR [rbp-0x10]
  405d42:	mov    rax,QWORD PTR [rbp-0x8]
  405d46:	mov    ecx,0x8
  405d4b:	mov    rdi,rax
  405d4e:	call   425bce <flatcc_json_parser_set_error@@Base>
  405d53:	jmp    405d64 <_start@@Base+0xc04>
  405d55:	mov    rax,QWORD PTR [rbp-0x30]
  405d59:	mov    rdx,QWORD PTR [rbp-0x28]
  405d5d:	mov    QWORD PTR [rax],rdx
  405d60:	mov    rax,QWORD PTR [rbp-0x10]
  405d64:	leave  
  405d65:	ret    
  405d66:	push   rbp
  405d67:	mov    rbp,rsp
  405d6a:	sub    rsp,0x30
  405d6e:	mov    QWORD PTR [rbp-0x8],rdi
  405d72:	mov    QWORD PTR [rbp-0x10],rsi
  405d76:	mov    QWORD PTR [rbp-0x18],rdx
  405d7a:	mov    DWORD PTR [rbp-0x1c],ecx
  405d7d:	mov    QWORD PTR [rbp-0x28],r8
  405d81:	mov    QWORD PTR [rbp-0x30],r9
  405d85:	cmp    DWORD PTR [rbp-0x1c],0x0
  405d89:	je     405da6 <_start@@Base+0xc46>
  405d8b:	mov    rdx,QWORD PTR [rbp-0x18]
  405d8f:	mov    rsi,QWORD PTR [rbp-0x10]
  405d93:	mov    rax,QWORD PTR [rbp-0x8]
  405d97:	mov    ecx,0x8
  405d9c:	mov    rdi,rax
  405d9f:	call   425bce <flatcc_json_parser_set_error@@Base>
  405da4:	jmp    405dba <_start@@Base+0xc5a>
  405da6:	cmp    QWORD PTR [rbp-0x28],0x0
  405dab:	setne  al
  405dae:	mov    edx,eax
  405db0:	mov    rax,QWORD PTR [rbp-0x30]
  405db4:	mov    BYTE PTR [rax],dl
  405db6:	mov    rax,QWORD PTR [rbp-0x10]
  405dba:	leave  
  405dbb:	ret    
  405dbc:	push   rbp
  405dbd:	mov    rbp,rsp
  405dc0:	sub    rsp,0x30
  405dc4:	mov    QWORD PTR [rbp-0x8],rdi
  405dc8:	mov    QWORD PTR [rbp-0x10],rsi
  405dcc:	mov    QWORD PTR [rbp-0x18],rdx
  405dd0:	mov    DWORD PTR [rbp-0x1c],ecx
  405dd3:	mov    QWORD PTR [rbp-0x28],r8
  405dd7:	mov    QWORD PTR [rbp-0x30],r9
  405ddb:	cmp    DWORD PTR [rbp-0x1c],0x0
  405ddf:	je     405dfc <_start@@Base+0xc9c>
  405de1:	mov    rdx,QWORD PTR [rbp-0x18]
  405de5:	mov    rsi,QWORD PTR [rbp-0x10]
  405de9:	mov    rax,QWORD PTR [rbp-0x8]
  405ded:	mov    ecx,0x8
  405df2:	mov    rdi,rax
  405df5:	call   425bce <flatcc_json_parser_set_error@@Base>
  405dfa:	jmp    405e32 <_start@@Base+0xcd2>
  405dfc:	mov    eax,0xffffffff
  405e01:	cmp    QWORD PTR [rbp-0x28],rax
  405e05:	jbe    405e22 <_start@@Base+0xcc2>
  405e07:	mov    rdx,QWORD PTR [rbp-0x18]
  405e0b:	mov    rsi,QWORD PTR [rbp-0x10]
  405e0f:	mov    rax,QWORD PTR [rbp-0x8]
  405e13:	mov    ecx,0x7
  405e18:	mov    rdi,rax
  405e1b:	call   425bce <flatcc_json_parser_set_error@@Base>
  405e20:	jmp    405e32 <_start@@Base+0xcd2>
  405e22:	mov    rax,QWORD PTR [rbp-0x28]
  405e26:	mov    edx,eax
  405e28:	mov    rax,QWORD PTR [rbp-0x30]
  405e2c:	mov    DWORD PTR [rax],edx
  405e2e:	mov    rax,QWORD PTR [rbp-0x10]
  405e32:	leave  
  405e33:	ret    
  405e34:	push   rbp
  405e35:	mov    rbp,rsp
  405e38:	sub    rsp,0x30
  405e3c:	mov    QWORD PTR [rbp-0x8],rdi
  405e40:	mov    QWORD PTR [rbp-0x10],rsi
  405e44:	mov    QWORD PTR [rbp-0x18],rdx
  405e48:	mov    DWORD PTR [rbp-0x1c],ecx
  405e4b:	mov    QWORD PTR [rbp-0x28],r8
  405e4f:	mov    QWORD PTR [rbp-0x30],r9
  405e53:	cmp    DWORD PTR [rbp-0x1c],0x0
  405e57:	je     405e74 <_start@@Base+0xd14>
  405e59:	mov    rdx,QWORD PTR [rbp-0x18]
  405e5d:	mov    rsi,QWORD PTR [rbp-0x10]
  405e61:	mov    rax,QWORD PTR [rbp-0x8]
  405e65:	mov    ecx,0x8
  405e6a:	mov    rdi,rax
  405e6d:	call   425bce <flatcc_json_parser_set_error@@Base>
  405e72:	jmp    405eaa <_start@@Base+0xd4a>
  405e74:	cmp    QWORD PTR [rbp-0x28],0xffff
  405e7c:	jbe    405e99 <_start@@Base+0xd39>
  405e7e:	mov    rdx,QWORD PTR [rbp-0x18]
  405e82:	mov    rsi,QWORD PTR [rbp-0x10]
  405e86:	mov    rax,QWORD PTR [rbp-0x8]
  405e8a:	mov    ecx,0x7
  405e8f:	mov    rdi,rax
  405e92:	call   425bce <flatcc_json_parser_set_error@@Base>
  405e97:	jmp    405eaa <_start@@Base+0xd4a>
  405e99:	mov    rax,QWORD PTR [rbp-0x28]
  405e9d:	mov    edx,eax
  405e9f:	mov    rax,QWORD PTR [rbp-0x30]
  405ea3:	mov    WORD PTR [rax],dx
  405ea6:	mov    rax,QWORD PTR [rbp-0x10]
  405eaa:	leave  
  405eab:	ret    
  405eac:	push   rbp
  405ead:	mov    rbp,rsp
  405eb0:	sub    rsp,0x30
  405eb4:	mov    QWORD PTR [rbp-0x8],rdi
  405eb8:	mov    QWORD PTR [rbp-0x10],rsi
  405ebc:	mov    QWORD PTR [rbp-0x18],rdx
  405ec0:	mov    DWORD PTR [rbp-0x1c],ecx
  405ec3:	mov    QWORD PTR [rbp-0x28],r8
  405ec7:	mov    QWORD PTR [rbp-0x30],r9
  405ecb:	cmp    DWORD PTR [rbp-0x1c],0x0
  405ecf:	je     405eec <_start@@Base+0xd8c>
  405ed1:	mov    rdx,QWORD PTR [rbp-0x18]
  405ed5:	mov    rsi,QWORD PTR [rbp-0x10]
  405ed9:	mov    rax,QWORD PTR [rbp-0x8]
  405edd:	mov    ecx,0x8
  405ee2:	mov    rdi,rax
  405ee5:	call   425bce <flatcc_json_parser_set_error@@Base>
  405eea:	jmp    405f21 <_start@@Base+0xdc1>
  405eec:	cmp    QWORD PTR [rbp-0x28],0xff
  405ef4:	jbe    405f11 <_start@@Base+0xdb1>
  405ef6:	mov    rdx,QWORD PTR [rbp-0x18]
  405efa:	mov    rsi,QWORD PTR [rbp-0x10]
  405efe:	mov    rax,QWORD PTR [rbp-0x8]
  405f02:	mov    ecx,0x7
  405f07:	mov    rdi,rax
  405f0a:	call   425bce <flatcc_json_parser_set_error@@Base>
  405f0f:	jmp    405f21 <_start@@Base+0xdc1>
  405f11:	mov    rax,QWORD PTR [rbp-0x28]
  405f15:	mov    edx,eax
  405f17:	mov    rax,QWORD PTR [rbp-0x30]
  405f1b:	mov    BYTE PTR [rax],dl
  405f1d:	mov    rax,QWORD PTR [rbp-0x10]
  405f21:	leave  
  405f22:	ret    
  405f23:	push   rbp
  405f24:	mov    rbp,rsp
  405f27:	sub    rsp,0x30
  405f2b:	mov    QWORD PTR [rbp-0x8],rdi
  405f2f:	mov    QWORD PTR [rbp-0x10],rsi
  405f33:	mov    QWORD PTR [rbp-0x18],rdx
  405f37:	mov    DWORD PTR [rbp-0x1c],ecx
  405f3a:	mov    QWORD PTR [rbp-0x28],r8
  405f3e:	mov    QWORD PTR [rbp-0x30],r9
  405f42:	cmp    DWORD PTR [rbp-0x1c],0x0
  405f46:	je     405f86 <_start@@Base+0xe26>
  405f48:	movabs rax,0x8000000000000000
  405f52:	cmp    QWORD PTR [rbp-0x28],rax
  405f56:	jbe    405f73 <_start@@Base+0xe13>
  405f58:	mov    rdx,QWORD PTR [rbp-0x18]
  405f5c:	mov    rsi,QWORD PTR [rbp-0x10]
  405f60:	mov    rax,QWORD PTR [rbp-0x8]
  405f64:	mov    ecx,0x8
  405f69:	mov    rdi,rax
  405f6c:	call   425bce <flatcc_json_parser_set_error@@Base>
  405f71:	jmp    405fb9 <_start@@Base+0xe59>
  405f73:	mov    rax,QWORD PTR [rbp-0x28]
  405f77:	neg    rax
  405f7a:	mov    rdx,rax
  405f7d:	mov    rax,QWORD PTR [rbp-0x30]
  405f81:	mov    QWORD PTR [rax],rdx
  405f84:	jmp    405fb5 <_start@@Base+0xe55>
  405f86:	mov    rax,QWORD PTR [rbp-0x28]
  405f8a:	test   rax,rax
  405f8d:	jns    405faa <_start@@Base+0xe4a>
  405f8f:	mov    rdx,QWORD PTR [rbp-0x18]
  405f93:	mov    rsi,QWORD PTR [rbp-0x10]
  405f97:	mov    rax,QWORD PTR [rbp-0x8]
  405f9b:	mov    ecx,0x7
  405fa0:	mov    rdi,rax
  405fa3:	call   425bce <flatcc_json_parser_set_error@@Base>
  405fa8:	jmp    405fb9 <_start@@Base+0xe59>
  405faa:	mov    rdx,QWORD PTR [rbp-0x28]
  405fae:	mov    rax,QWORD PTR [rbp-0x30]
  405fb2:	mov    QWORD PTR [rax],rdx
  405fb5:	mov    rax,QWORD PTR [rbp-0x10]
  405fb9:	leave  
  405fba:	ret    
  405fbb:	push   rbp
  405fbc:	mov    rbp,rsp
  405fbf:	sub    rsp,0x30
  405fc3:	mov    QWORD PTR [rbp-0x8],rdi
  405fc7:	mov    QWORD PTR [rbp-0x10],rsi
  405fcb:	mov    QWORD PTR [rbp-0x18],rdx
  405fcf:	mov    DWORD PTR [rbp-0x1c],ecx
  405fd2:	mov    QWORD PTR [rbp-0x28],r8
  405fd6:	mov    QWORD PTR [rbp-0x30],r9
  405fda:	cmp    DWORD PTR [rbp-0x1c],0x0
  405fde:	je     406016 <_start@@Base+0xeb6>
  405fe0:	mov    eax,0x80000000
  405fe5:	cmp    QWORD PTR [rbp-0x28],rax
  405fe9:	jbe    406006 <_start@@Base+0xea6>
  405feb:	mov    rdx,QWORD PTR [rbp-0x18]
  405fef:	mov    rsi,QWORD PTR [rbp-0x10]
  405ff3:	mov    rax,QWORD PTR [rbp-0x8]
  405ff7:	mov    ecx,0x8
  405ffc:	mov    rdi,rax
  405fff:	call   425bce <flatcc_json_parser_set_error@@Base>
  406004:	jmp    40604b <_start@@Base+0xeeb>
  406006:	mov    rax,QWORD PTR [rbp-0x28]
  40600a:	neg    eax
  40600c:	mov    edx,eax
  40600e:	mov    rax,QWORD PTR [rbp-0x30]
  406012:	mov    DWORD PTR [rax],edx
  406014:	jmp    406047 <_start@@Base+0xee7>
  406016:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  40601e:	jbe    40603b <_start@@Base+0xedb>
  406020:	mov    rdx,QWORD PTR [rbp-0x18]
  406024:	mov    rsi,QWORD PTR [rbp-0x10]
  406028:	mov    rax,QWORD PTR [rbp-0x8]
  40602c:	mov    ecx,0x7
  406031:	mov    rdi,rax
  406034:	call   425bce <flatcc_json_parser_set_error@@Base>
  406039:	jmp    40604b <_start@@Base+0xeeb>
  40603b:	mov    rax,QWORD PTR [rbp-0x28]
  40603f:	mov    edx,eax
  406041:	mov    rax,QWORD PTR [rbp-0x30]
  406045:	mov    DWORD PTR [rax],edx
  406047:	mov    rax,QWORD PTR [rbp-0x10]
  40604b:	leave  
  40604c:	ret    
  40604d:	push   rbp
  40604e:	mov    rbp,rsp
  406051:	sub    rsp,0x30
  406055:	mov    QWORD PTR [rbp-0x8],rdi
  406059:	mov    QWORD PTR [rbp-0x10],rsi
  40605d:	mov    QWORD PTR [rbp-0x18],rdx
  406061:	mov    DWORD PTR [rbp-0x1c],ecx
  406064:	mov    QWORD PTR [rbp-0x28],r8
  406068:	mov    QWORD PTR [rbp-0x30],r9
  40606c:	cmp    DWORD PTR [rbp-0x1c],0x0
  406070:	je     4060a8 <_start@@Base+0xf48>
  406072:	cmp    QWORD PTR [rbp-0x28],0x8000
  40607a:	jbe    406097 <_start@@Base+0xf37>
  40607c:	mov    rdx,QWORD PTR [rbp-0x18]
  406080:	mov    rsi,QWORD PTR [rbp-0x10]
  406084:	mov    rax,QWORD PTR [rbp-0x8]
  406088:	mov    ecx,0x8
  40608d:	mov    rdi,rax
  406090:	call   425bce <flatcc_json_parser_set_error@@Base>
  406095:	jmp    4060de <_start@@Base+0xf7e>
  406097:	mov    rax,QWORD PTR [rbp-0x28]
  40609b:	neg    eax
  40609d:	mov    edx,eax
  40609f:	mov    rax,QWORD PTR [rbp-0x30]
  4060a3:	mov    WORD PTR [rax],dx
  4060a6:	jmp    4060da <_start@@Base+0xf7a>
  4060a8:	cmp    QWORD PTR [rbp-0x28],0x7fff
  4060b0:	jbe    4060cd <_start@@Base+0xf6d>
  4060b2:	mov    rdx,QWORD PTR [rbp-0x18]
  4060b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4060ba:	mov    rax,QWORD PTR [rbp-0x8]
  4060be:	mov    ecx,0x7
  4060c3:	mov    rdi,rax
  4060c6:	call   425bce <flatcc_json_parser_set_error@@Base>
  4060cb:	jmp    4060de <_start@@Base+0xf7e>
  4060cd:	mov    rax,QWORD PTR [rbp-0x28]
  4060d1:	mov    edx,eax
  4060d3:	mov    rax,QWORD PTR [rbp-0x30]
  4060d7:	mov    WORD PTR [rax],dx
  4060da:	mov    rax,QWORD PTR [rbp-0x10]
  4060de:	leave  
  4060df:	ret    
  4060e0:	push   rbp
  4060e1:	mov    rbp,rsp
  4060e4:	sub    rsp,0x30
  4060e8:	mov    QWORD PTR [rbp-0x8],rdi
  4060ec:	mov    QWORD PTR [rbp-0x10],rsi
  4060f0:	mov    QWORD PTR [rbp-0x18],rdx
  4060f4:	mov    DWORD PTR [rbp-0x1c],ecx
  4060f7:	mov    QWORD PTR [rbp-0x28],r8
  4060fb:	mov    QWORD PTR [rbp-0x30],r9
  4060ff:	cmp    DWORD PTR [rbp-0x1c],0x0
  406103:	je     40613a <_start@@Base+0xfda>
  406105:	cmp    QWORD PTR [rbp-0x28],0x80
  40610d:	jbe    40612a <_start@@Base+0xfca>
  40610f:	mov    rdx,QWORD PTR [rbp-0x18]
  406113:	mov    rsi,QWORD PTR [rbp-0x10]
  406117:	mov    rax,QWORD PTR [rbp-0x8]
  40611b:	mov    ecx,0x8
  406120:	mov    rdi,rax
  406123:	call   425bce <flatcc_json_parser_set_error@@Base>
  406128:	jmp    40616c <_start@@Base+0x100c>
  40612a:	mov    rax,QWORD PTR [rbp-0x28]
  40612e:	neg    eax
  406130:	mov    edx,eax
  406132:	mov    rax,QWORD PTR [rbp-0x30]
  406136:	mov    BYTE PTR [rax],dl
  406138:	jmp    406168 <_start@@Base+0x1008>
  40613a:	cmp    QWORD PTR [rbp-0x28],0x7f
  40613f:	jbe    40615c <_start@@Base+0xffc>
  406141:	mov    rdx,QWORD PTR [rbp-0x18]
  406145:	mov    rsi,QWORD PTR [rbp-0x10]
  406149:	mov    rax,QWORD PTR [rbp-0x8]
  40614d:	mov    ecx,0x7
  406152:	mov    rdi,rax
  406155:	call   425bce <flatcc_json_parser_set_error@@Base>
  40615a:	jmp    40616c <_start@@Base+0x100c>
  40615c:	mov    rax,QWORD PTR [rbp-0x28]
  406160:	mov    edx,eax
  406162:	mov    rax,QWORD PTR [rbp-0x30]
  406166:	mov    BYTE PTR [rax],dl
  406168:	mov    rax,QWORD PTR [rbp-0x10]
  40616c:	leave  
  40616d:	ret    
  40616e:	push   rbp
  40616f:	mov    rbp,rsp
  406172:	mov    QWORD PTR [rbp-0x8],rdi
  406176:	mov    QWORD PTR [rbp-0x10],rsi
  40617a:	mov    QWORD PTR [rbp-0x18],rdx
  40617e:	mov    DWORD PTR [rbp-0x1c],ecx
  406181:	mov    QWORD PTR [rbp-0x28],r8
  406185:	mov    QWORD PTR [rbp-0x30],r9
  406189:	cmp    DWORD PTR [rbp-0x1c],0x0
  40618d:	je     4061ca <_start@@Base+0x106a>
  40618f:	mov    rax,QWORD PTR [rbp-0x28]
  406193:	test   rax,rax
  406196:	js     4061a3 <_start@@Base+0x1043>
  406198:	vxorps xmm0,xmm0,xmm0
  40619c:	vcvtsi2ss xmm0,xmm0,rax
  4061a1:	jmp    4061bc <_start@@Base+0x105c>
  4061a3:	mov    rdx,rax
  4061a6:	shr    rdx,1
  4061a9:	and    eax,0x1
  4061ac:	or     rdx,rax
  4061af:	vxorps xmm0,xmm0,xmm0
  4061b3:	vcvtsi2ss xmm0,xmm0,rdx
  4061b8:	vaddss xmm0,xmm0,xmm0
  4061bc:	vmovss xmm1,DWORD PTR [rip+0x3203c]        # 438200 <_IO_stdin_used@@Base+0x3200>
  4061c4:	vxorps xmm0,xmm0,xmm1
  4061c8:	jmp    4061f7 <_start@@Base+0x1097>
  4061ca:	mov    rax,QWORD PTR [rbp-0x28]
  4061ce:	test   rax,rax
  4061d1:	js     4061de <_start@@Base+0x107e>
  4061d3:	vxorps xmm0,xmm0,xmm0
  4061d7:	vcvtsi2ss xmm0,xmm0,rax
  4061dc:	jmp    4061f7 <_start@@Base+0x1097>
  4061de:	mov    rdx,rax
  4061e1:	shr    rdx,1
  4061e4:	and    eax,0x1
  4061e7:	or     rdx,rax
  4061ea:	vxorps xmm0,xmm0,xmm0
  4061ee:	vcvtsi2ss xmm0,xmm0,rdx
  4061f3:	vaddss xmm0,xmm0,xmm0
  4061f7:	mov    rax,QWORD PTR [rbp-0x30]
  4061fb:	vmovss DWORD PTR [rax],xmm0
  4061ff:	mov    rax,QWORD PTR [rbp-0x10]
  406203:	pop    rbp
  406204:	ret    
  406205:	push   rbp
  406206:	mov    rbp,rsp
  406209:	mov    QWORD PTR [rbp-0x8],rdi
  40620d:	mov    QWORD PTR [rbp-0x10],rsi
  406211:	mov    QWORD PTR [rbp-0x18],rdx
  406215:	mov    DWORD PTR [rbp-0x1c],ecx
  406218:	mov    QWORD PTR [rbp-0x28],r8
  40621c:	mov    QWORD PTR [rbp-0x30],r9
  406220:	cmp    DWORD PTR [rbp-0x1c],0x0
  406224:	je     406261 <_start@@Base+0x1101>
  406226:	mov    rax,QWORD PTR [rbp-0x28]
  40622a:	test   rax,rax
  40622d:	js     40623a <_start@@Base+0x10da>
  40622f:	vxorpd xmm0,xmm0,xmm0
  406233:	vcvtsi2sd xmm0,xmm0,rax
  406238:	jmp    406253 <_start@@Base+0x10f3>
  40623a:	mov    rdx,rax
  40623d:	shr    rdx,1
  406240:	and    eax,0x1
  406243:	or     rdx,rax
  406246:	vxorpd xmm0,xmm0,xmm0
  40624a:	vcvtsi2sd xmm0,xmm0,rdx
  40624f:	vaddsd xmm0,xmm0,xmm0
  406253:	vmovsd xmm1,QWORD PTR [rip+0x31fb5]        # 438210 <_IO_stdin_used@@Base+0x3210>
  40625b:	vxorpd xmm0,xmm0,xmm1
  40625f:	jmp    40628e <_start@@Base+0x112e>
  406261:	mov    rax,QWORD PTR [rbp-0x28]
  406265:	test   rax,rax
  406268:	js     406275 <_start@@Base+0x1115>
  40626a:	vxorpd xmm0,xmm0,xmm0
  40626e:	vcvtsi2sd xmm0,xmm0,rax
  406273:	jmp    40628e <_start@@Base+0x112e>
  406275:	mov    rdx,rax
  406278:	shr    rdx,1
  40627b:	and    eax,0x1
  40627e:	or     rdx,rax
  406281:	vxorpd xmm0,xmm0,xmm0
  406285:	vcvtsi2sd xmm0,xmm0,rdx
  40628a:	vaddsd xmm0,xmm0,xmm0
  40628e:	mov    rax,QWORD PTR [rbp-0x30]
  406292:	vmovsd QWORD PTR [rax],xmm0
  406296:	mov    rax,QWORD PTR [rbp-0x10]
  40629a:	pop    rbp
  40629b:	ret    
  40629c:	push   rbp
  40629d:	mov    rbp,rsp
  4062a0:	sub    rsp,0x20
  4062a4:	mov    QWORD PTR [rbp-0x8],rdi
  4062a8:	mov    QWORD PTR [rbp-0x10],rsi
  4062ac:	mov    QWORD PTR [rbp-0x18],rdx
  4062b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4062b4:	mov    rax,QWORD PTR [rbp-0x10]
  4062b8:	sub    rdx,rax
  4062bb:	mov    rax,rdx
  4062be:	cmp    rax,0x3
  4062c2:	jle    4062ea <_start@@Base+0x118a>
  4062c4:	mov    rax,QWORD PTR [rbp-0x10]
  4062c8:	mov    edx,0x4
  4062cd:	lea    rsi,[rip+0x2ed64]        # 435038 <_IO_stdin_used@@Base+0x38>
  4062d4:	mov    rdi,rax
  4062d7:	call   4050c0 <memcmp@plt>
  4062dc:	test   eax,eax
  4062de:	jne    4062ea <_start@@Base+0x118a>
  4062e0:	mov    rax,QWORD PTR [rbp-0x10]
  4062e4:	add    rax,0x4
  4062e8:	jmp    406303 <_start@@Base+0x11a3>
  4062ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4062ee:	mov    rsi,QWORD PTR [rbp-0x10]
  4062f2:	mov    rax,QWORD PTR [rbp-0x8]
  4062f6:	mov    ecx,0x1a
  4062fb:	mov    rdi,rax
  4062fe:	call   425bce <flatcc_json_parser_set_error@@Base>
  406303:	leave  
  406304:	ret    
  406305:	push   rbp
  406306:	mov    rbp,rsp
  406309:	sub    rsp,0x40
  40630d:	mov    QWORD PTR [rbp-0x28],rdi
  406311:	mov    QWORD PTR [rbp-0x30],rsi
  406315:	mov    QWORD PTR [rbp-0x38],rdx
  406319:	mov    QWORD PTR [rbp-0x40],rcx
  40631d:	mov    rax,QWORD PTR fs:0x28
  406326:	mov    QWORD PTR [rbp-0x8],rax
  40632a:	xor    eax,eax
  40632c:	mov    QWORD PTR [rbp-0x18],0x0
  406334:	mov    DWORD PTR [rbp-0x1c],0x0
  40633b:	mov    rax,QWORD PTR [rbp-0x30]
  40633f:	mov    QWORD PTR [rbp-0x10],rax
  406343:	mov    rax,QWORD PTR [rbp-0x40]
  406347:	mov    QWORD PTR [rax],0x0
  40634e:	mov    rax,QWORD PTR [rbp-0x30]
  406352:	cmp    rax,QWORD PTR [rbp-0x38]
  406356:	jne    40635e <_start@@Base+0x11fe>
  406358:	mov    rax,QWORD PTR [rbp-0x30]
  40635c:	jmp    4063b6 <_start@@Base+0x1256>
  40635e:	lea    rdi,[rbp-0x18]
  406362:	lea    rcx,[rbp-0x1c]
  406366:	mov    rdx,QWORD PTR [rbp-0x38]
  40636a:	mov    rsi,QWORD PTR [rbp-0x30]
  40636e:	mov    rax,QWORD PTR [rbp-0x28]
  406372:	mov    r8,rdi
  406375:	mov    rdi,rax
  406378:	call   427279 <flatcc_json_parser_integer@@Base>
  40637d:	mov    QWORD PTR [rbp-0x30],rax
  406381:	mov    rax,QWORD PTR [rbp-0x30]
  406385:	cmp    rax,QWORD PTR [rbp-0x10]
  406389:	je     4063b2 <_start@@Base+0x1252>
  40638b:	mov    rdi,QWORD PTR [rbp-0x18]
  40638f:	mov    ecx,DWORD PTR [rbp-0x1c]
  406392:	mov    r8,QWORD PTR [rbp-0x40]
  406396:	mov    rdx,QWORD PTR [rbp-0x38]
  40639a:	mov    rsi,QWORD PTR [rbp-0x30]
  40639e:	mov    rax,QWORD PTR [rbp-0x28]
  4063a2:	mov    r9,r8
  4063a5:	mov    r8,rdi
  4063a8:	mov    rdi,rax
  4063ab:	call   405d15 <_start@@Base+0xbb5>
  4063b0:	jmp    4063b6 <_start@@Base+0x1256>
  4063b2:	mov    rax,QWORD PTR [rbp-0x30]
  4063b6:	mov    rdx,QWORD PTR [rbp-0x8]
  4063ba:	xor    rdx,QWORD PTR fs:0x28
  4063c3:	je     4063ca <_start@@Base+0x126a>
  4063c5:	call   405070 <__stack_chk_fail@plt>
  4063ca:	leave  
  4063cb:	ret    
  4063cc:	push   rbp
  4063cd:	mov    rbp,rsp
  4063d0:	sub    rsp,0x40
  4063d4:	mov    QWORD PTR [rbp-0x28],rdi
  4063d8:	mov    QWORD PTR [rbp-0x30],rsi
  4063dc:	mov    QWORD PTR [rbp-0x38],rdx
  4063e0:	mov    QWORD PTR [rbp-0x40],rcx
  4063e4:	mov    rax,QWORD PTR fs:0x28
  4063ed:	mov    QWORD PTR [rbp-0x8],rax
  4063f1:	xor    eax,eax
  4063f3:	mov    QWORD PTR [rbp-0x18],0x0
  4063fb:	mov    DWORD PTR [rbp-0x1c],0x0
  406402:	mov    rax,QWORD PTR [rbp-0x30]
  406406:	mov    QWORD PTR [rbp-0x10],rax
  40640a:	mov    rax,QWORD PTR [rbp-0x40]
  40640e:	mov    DWORD PTR [rax],0x0
  406414:	mov    rax,QWORD PTR [rbp-0x30]
  406418:	cmp    rax,QWORD PTR [rbp-0x38]
  40641c:	jne    406424 <_start@@Base+0x12c4>
  40641e:	mov    rax,QWORD PTR [rbp-0x30]
  406422:	jmp    40647c <_start@@Base+0x131c>
  406424:	lea    rdi,[rbp-0x18]
  406428:	lea    rcx,[rbp-0x1c]
  40642c:	mov    rdx,QWORD PTR [rbp-0x38]
  406430:	mov    rsi,QWORD PTR [rbp-0x30]
  406434:	mov    rax,QWORD PTR [rbp-0x28]
  406438:	mov    r8,rdi
  40643b:	mov    rdi,rax
  40643e:	call   427279 <flatcc_json_parser_integer@@Base>
  406443:	mov    QWORD PTR [rbp-0x30],rax
  406447:	mov    rax,QWORD PTR [rbp-0x30]
  40644b:	cmp    rax,QWORD PTR [rbp-0x10]
  40644f:	je     406478 <_start@@Base+0x1318>
  406451:	mov    rdi,QWORD PTR [rbp-0x18]
  406455:	mov    ecx,DWORD PTR [rbp-0x1c]
  406458:	mov    r8,QWORD PTR [rbp-0x40]
  40645c:	mov    rdx,QWORD PTR [rbp-0x38]
  406460:	mov    rsi,QWORD PTR [rbp-0x30]
  406464:	mov    rax,QWORD PTR [rbp-0x28]
  406468:	mov    r9,r8
  40646b:	mov    r8,rdi
  40646e:	mov    rdi,rax
  406471:	call   405dbc <_start@@Base+0xc5c>
  406476:	jmp    40647c <_start@@Base+0x131c>
  406478:	mov    rax,QWORD PTR [rbp-0x30]
  40647c:	mov    rdx,QWORD PTR [rbp-0x8]
  406480:	xor    rdx,QWORD PTR fs:0x28
  406489:	je     406490 <_start@@Base+0x1330>
  40648b:	call   405070 <__stack_chk_fail@plt>
  406490:	leave  
  406491:	ret    
  406492:	push   rbp
  406493:	mov    rbp,rsp
  406496:	sub    rsp,0x40
  40649a:	mov    QWORD PTR [rbp-0x28],rdi
  40649e:	mov    QWORD PTR [rbp-0x30],rsi
  4064a2:	mov    QWORD PTR [rbp-0x38],rdx
  4064a6:	mov    QWORD PTR [rbp-0x40],rcx
  4064aa:	mov    rax,QWORD PTR fs:0x28
  4064b3:	mov    QWORD PTR [rbp-0x8],rax
  4064b7:	xor    eax,eax
  4064b9:	mov    QWORD PTR [rbp-0x18],0x0
  4064c1:	mov    DWORD PTR [rbp-0x1c],0x0
  4064c8:	mov    rax,QWORD PTR [rbp-0x30]
  4064cc:	mov    QWORD PTR [rbp-0x10],rax
  4064d0:	mov    rax,QWORD PTR [rbp-0x40]
  4064d4:	mov    WORD PTR [rax],0x0
  4064d9:	mov    rax,QWORD PTR [rbp-0x30]
  4064dd:	cmp    rax,QWORD PTR [rbp-0x38]
  4064e1:	jne    4064e9 <_start@@Base+0x1389>
  4064e3:	mov    rax,QWORD PTR [rbp-0x30]
  4064e7:	jmp    406541 <_start@@Base+0x13e1>
  4064e9:	lea    rdi,[rbp-0x18]
  4064ed:	lea    rcx,[rbp-0x1c]
  4064f1:	mov    rdx,QWORD PTR [rbp-0x38]
  4064f5:	mov    rsi,QWORD PTR [rbp-0x30]
  4064f9:	mov    rax,QWORD PTR [rbp-0x28]
  4064fd:	mov    r8,rdi
  406500:	mov    rdi,rax
  406503:	call   427279 <flatcc_json_parser_integer@@Base>
  406508:	mov    QWORD PTR [rbp-0x30],rax
  40650c:	mov    rax,QWORD PTR [rbp-0x30]
  406510:	cmp    rax,QWORD PTR [rbp-0x10]
  406514:	je     40653d <_start@@Base+0x13dd>
  406516:	mov    rdi,QWORD PTR [rbp-0x18]
  40651a:	mov    ecx,DWORD PTR [rbp-0x1c]
  40651d:	mov    r8,QWORD PTR [rbp-0x40]
  406521:	mov    rdx,QWORD PTR [rbp-0x38]
  406525:	mov    rsi,QWORD PTR [rbp-0x30]
  406529:	mov    rax,QWORD PTR [rbp-0x28]
  40652d:	mov    r9,r8
  406530:	mov    r8,rdi
  406533:	mov    rdi,rax
  406536:	call   405e34 <_start@@Base+0xcd4>
  40653b:	jmp    406541 <_start@@Base+0x13e1>
  40653d:	mov    rax,QWORD PTR [rbp-0x30]
  406541:	mov    rdx,QWORD PTR [rbp-0x8]
  406545:	xor    rdx,QWORD PTR fs:0x28
  40654e:	je     406555 <_start@@Base+0x13f5>
  406550:	call   405070 <__stack_chk_fail@plt>
  406555:	leave  
  406556:	ret    
  406557:	push   rbp
  406558:	mov    rbp,rsp
  40655b:	sub    rsp,0x40
  40655f:	mov    QWORD PTR [rbp-0x28],rdi
  406563:	mov    QWORD PTR [rbp-0x30],rsi
  406567:	mov    QWORD PTR [rbp-0x38],rdx
  40656b:	mov    QWORD PTR [rbp-0x40],rcx
  40656f:	mov    rax,QWORD PTR fs:0x28
  406578:	mov    QWORD PTR [rbp-0x8],rax
  40657c:	xor    eax,eax
  40657e:	mov    QWORD PTR [rbp-0x18],0x0
  406586:	mov    DWORD PTR [rbp-0x1c],0x0
  40658d:	mov    rax,QWORD PTR [rbp-0x30]
  406591:	mov    QWORD PTR [rbp-0x10],rax
  406595:	mov    rax,QWORD PTR [rbp-0x40]
  406599:	mov    BYTE PTR [rax],0x0
  40659c:	mov    rax,QWORD PTR [rbp-0x30]
  4065a0:	cmp    rax,QWORD PTR [rbp-0x38]
  4065a4:	jne    4065ac <_start@@Base+0x144c>
  4065a6:	mov    rax,QWORD PTR [rbp-0x30]
  4065aa:	jmp    406604 <_start@@Base+0x14a4>
  4065ac:	lea    rdi,[rbp-0x18]
  4065b0:	lea    rcx,[rbp-0x1c]
  4065b4:	mov    rdx,QWORD PTR [rbp-0x38]
  4065b8:	mov    rsi,QWORD PTR [rbp-0x30]
  4065bc:	mov    rax,QWORD PTR [rbp-0x28]
  4065c0:	mov    r8,rdi
  4065c3:	mov    rdi,rax
  4065c6:	call   427279 <flatcc_json_parser_integer@@Base>
  4065cb:	mov    QWORD PTR [rbp-0x30],rax
  4065cf:	mov    rax,QWORD PTR [rbp-0x30]
  4065d3:	cmp    rax,QWORD PTR [rbp-0x10]
  4065d7:	je     406600 <_start@@Base+0x14a0>
  4065d9:	mov    rdi,QWORD PTR [rbp-0x18]
  4065dd:	mov    ecx,DWORD PTR [rbp-0x1c]
  4065e0:	mov    r8,QWORD PTR [rbp-0x40]
  4065e4:	mov    rdx,QWORD PTR [rbp-0x38]
  4065e8:	mov    rsi,QWORD PTR [rbp-0x30]
  4065ec:	mov    rax,QWORD PTR [rbp-0x28]
  4065f0:	mov    r9,r8
  4065f3:	mov    r8,rdi
  4065f6:	mov    rdi,rax
  4065f9:	call   405eac <_start@@Base+0xd4c>
  4065fe:	jmp    406604 <_start@@Base+0x14a4>
  406600:	mov    rax,QWORD PTR [rbp-0x30]
  406604:	mov    rdx,QWORD PTR [rbp-0x8]
  406608:	xor    rdx,QWORD PTR fs:0x28
  406611:	je     406618 <_start@@Base+0x14b8>
  406613:	call   405070 <__stack_chk_fail@plt>
  406618:	leave  
  406619:	ret    
  40661a:	push   rbp
  40661b:	mov    rbp,rsp
  40661e:	sub    rsp,0x40
  406622:	mov    QWORD PTR [rbp-0x28],rdi
  406626:	mov    QWORD PTR [rbp-0x30],rsi
  40662a:	mov    QWORD PTR [rbp-0x38],rdx
  40662e:	mov    QWORD PTR [rbp-0x40],rcx
  406632:	mov    rax,QWORD PTR fs:0x28
  40663b:	mov    QWORD PTR [rbp-0x8],rax
  40663f:	xor    eax,eax
  406641:	mov    QWORD PTR [rbp-0x18],0x0
  406649:	mov    DWORD PTR [rbp-0x1c],0x0
  406650:	mov    rax,QWORD PTR [rbp-0x30]
  406654:	mov    QWORD PTR [rbp-0x10],rax
  406658:	mov    rax,QWORD PTR [rbp-0x40]
  40665c:	mov    QWORD PTR [rax],0x0
  406663:	mov    rax,QWORD PTR [rbp-0x30]
  406667:	cmp    rax,QWORD PTR [rbp-0x38]
  40666b:	jne    406673 <_start@@Base+0x1513>
  40666d:	mov    rax,QWORD PTR [rbp-0x30]
  406671:	jmp    4066cb <_start@@Base+0x156b>
  406673:	lea    rdi,[rbp-0x18]
  406677:	lea    rcx,[rbp-0x1c]
  40667b:	mov    rdx,QWORD PTR [rbp-0x38]
  40667f:	mov    rsi,QWORD PTR [rbp-0x30]
  406683:	mov    rax,QWORD PTR [rbp-0x28]
  406687:	mov    r8,rdi
  40668a:	mov    rdi,rax
  40668d:	call   427279 <flatcc_json_parser_integer@@Base>
  406692:	mov    QWORD PTR [rbp-0x30],rax
  406696:	mov    rax,QWORD PTR [rbp-0x30]
  40669a:	cmp    rax,QWORD PTR [rbp-0x10]
  40669e:	je     4066c7 <_start@@Base+0x1567>
  4066a0:	mov    rdi,QWORD PTR [rbp-0x18]
  4066a4:	mov    ecx,DWORD PTR [rbp-0x1c]
  4066a7:	mov    r8,QWORD PTR [rbp-0x40]
  4066ab:	mov    rdx,QWORD PTR [rbp-0x38]
  4066af:	mov    rsi,QWORD PTR [rbp-0x30]
  4066b3:	mov    rax,QWORD PTR [rbp-0x28]
  4066b7:	mov    r9,r8
  4066ba:	mov    r8,rdi
  4066bd:	mov    rdi,rax
  4066c0:	call   405f23 <_start@@Base+0xdc3>
  4066c5:	jmp    4066cb <_start@@Base+0x156b>
  4066c7:	mov    rax,QWORD PTR [rbp-0x30]
  4066cb:	mov    rdx,QWORD PTR [rbp-0x8]
  4066cf:	xor    rdx,QWORD PTR fs:0x28
  4066d8:	je     4066df <_start@@Base+0x157f>
  4066da:	call   405070 <__stack_chk_fail@plt>
  4066df:	leave  
  4066e0:	ret    
  4066e1:	push   rbp
  4066e2:	mov    rbp,rsp
  4066e5:	sub    rsp,0x40
  4066e9:	mov    QWORD PTR [rbp-0x28],rdi
  4066ed:	mov    QWORD PTR [rbp-0x30],rsi
  4066f1:	mov    QWORD PTR [rbp-0x38],rdx
  4066f5:	mov    QWORD PTR [rbp-0x40],rcx
  4066f9:	mov    rax,QWORD PTR fs:0x28
  406702:	mov    QWORD PTR [rbp-0x8],rax
  406706:	xor    eax,eax
  406708:	mov    QWORD PTR [rbp-0x18],0x0
  406710:	mov    DWORD PTR [rbp-0x1c],0x0
  406717:	mov    rax,QWORD PTR [rbp-0x30]
  40671b:	mov    QWORD PTR [rbp-0x10],rax
  40671f:	mov    rax,QWORD PTR [rbp-0x40]
  406723:	mov    DWORD PTR [rax],0x0
  406729:	mov    rax,QWORD PTR [rbp-0x30]
  40672d:	cmp    rax,QWORD PTR [rbp-0x38]
  406731:	jne    406739 <_start@@Base+0x15d9>
  406733:	mov    rax,QWORD PTR [rbp-0x30]
  406737:	jmp    406791 <_start@@Base+0x1631>
  406739:	lea    rdi,[rbp-0x18]
  40673d:	lea    rcx,[rbp-0x1c]
  406741:	mov    rdx,QWORD PTR [rbp-0x38]
  406745:	mov    rsi,QWORD PTR [rbp-0x30]
  406749:	mov    rax,QWORD PTR [rbp-0x28]
  40674d:	mov    r8,rdi
  406750:	mov    rdi,rax
  406753:	call   427279 <flatcc_json_parser_integer@@Base>
  406758:	mov    QWORD PTR [rbp-0x30],rax
  40675c:	mov    rax,QWORD PTR [rbp-0x30]
  406760:	cmp    rax,QWORD PTR [rbp-0x10]
  406764:	je     40678d <_start@@Base+0x162d>
  406766:	mov    rdi,QWORD PTR [rbp-0x18]
  40676a:	mov    ecx,DWORD PTR [rbp-0x1c]
  40676d:	mov    r8,QWORD PTR [rbp-0x40]
  406771:	mov    rdx,QWORD PTR [rbp-0x38]
  406775:	mov    rsi,QWORD PTR [rbp-0x30]
  406779:	mov    rax,QWORD PTR [rbp-0x28]
  40677d:	mov    r9,r8
  406780:	mov    r8,rdi
  406783:	mov    rdi,rax
  406786:	call   405fbb <_start@@Base+0xe5b>
  40678b:	jmp    406791 <_start@@Base+0x1631>
  40678d:	mov    rax,QWORD PTR [rbp-0x30]
  406791:	mov    rdx,QWORD PTR [rbp-0x8]
  406795:	xor    rdx,QWORD PTR fs:0x28
  40679e:	je     4067a5 <_start@@Base+0x1645>
  4067a0:	call   405070 <__stack_chk_fail@plt>
  4067a5:	leave  
  4067a6:	ret    
  4067a7:	push   rbp
  4067a8:	mov    rbp,rsp
  4067ab:	sub    rsp,0x40
  4067af:	mov    QWORD PTR [rbp-0x28],rdi
  4067b3:	mov    QWORD PTR [rbp-0x30],rsi
  4067b7:	mov    QWORD PTR [rbp-0x38],rdx
  4067bb:	mov    QWORD PTR [rbp-0x40],rcx
  4067bf:	mov    rax,QWORD PTR fs:0x28
  4067c8:	mov    QWORD PTR [rbp-0x8],rax
  4067cc:	xor    eax,eax
  4067ce:	mov    QWORD PTR [rbp-0x18],0x0
  4067d6:	mov    DWORD PTR [rbp-0x1c],0x0
  4067dd:	mov    rax,QWORD PTR [rbp-0x30]
  4067e1:	mov    QWORD PTR [rbp-0x10],rax
  4067e5:	mov    rax,QWORD PTR [rbp-0x40]
  4067e9:	mov    WORD PTR [rax],0x0
  4067ee:	mov    rax,QWORD PTR [rbp-0x30]
  4067f2:	cmp    rax,QWORD PTR [rbp-0x38]
  4067f6:	jne    4067fe <_start@@Base+0x169e>
  4067f8:	mov    rax,QWORD PTR [rbp-0x30]
  4067fc:	jmp    406856 <_start@@Base+0x16f6>
  4067fe:	lea    rdi,[rbp-0x18]
  406802:	lea    rcx,[rbp-0x1c]
  406806:	mov    rdx,QWORD PTR [rbp-0x38]
  40680a:	mov    rsi,QWORD PTR [rbp-0x30]
  40680e:	mov    rax,QWORD PTR [rbp-0x28]
  406812:	mov    r8,rdi
  406815:	mov    rdi,rax
  406818:	call   427279 <flatcc_json_parser_integer@@Base>
  40681d:	mov    QWORD PTR [rbp-0x30],rax
  406821:	mov    rax,QWORD PTR [rbp-0x30]
  406825:	cmp    rax,QWORD PTR [rbp-0x10]
  406829:	je     406852 <_start@@Base+0x16f2>
  40682b:	mov    rdi,QWORD PTR [rbp-0x18]
  40682f:	mov    ecx,DWORD PTR [rbp-0x1c]
  406832:	mov    r8,QWORD PTR [rbp-0x40]
  406836:	mov    rdx,QWORD PTR [rbp-0x38]
  40683a:	mov    rsi,QWORD PTR [rbp-0x30]
  40683e:	mov    rax,QWORD PTR [rbp-0x28]
  406842:	mov    r9,r8
  406845:	mov    r8,rdi
  406848:	mov    rdi,rax
  40684b:	call   40604d <_start@@Base+0xeed>
  406850:	jmp    406856 <_start@@Base+0x16f6>
  406852:	mov    rax,QWORD PTR [rbp-0x30]
  406856:	mov    rdx,QWORD PTR [rbp-0x8]
  40685a:	xor    rdx,QWORD PTR fs:0x28
  406863:	je     40686a <_start@@Base+0x170a>
  406865:	call   405070 <__stack_chk_fail@plt>
  40686a:	leave  
  40686b:	ret    
  40686c:	push   rbp
  40686d:	mov    rbp,rsp
  406870:	sub    rsp,0x40
  406874:	mov    QWORD PTR [rbp-0x28],rdi
  406878:	mov    QWORD PTR [rbp-0x30],rsi
  40687c:	mov    QWORD PTR [rbp-0x38],rdx
  406880:	mov    QWORD PTR [rbp-0x40],rcx
  406884:	mov    rax,QWORD PTR fs:0x28
  40688d:	mov    QWORD PTR [rbp-0x8],rax
  406891:	xor    eax,eax
  406893:	mov    QWORD PTR [rbp-0x18],0x0
  40689b:	mov    DWORD PTR [rbp-0x1c],0x0
  4068a2:	mov    rax,QWORD PTR [rbp-0x30]
  4068a6:	mov    QWORD PTR [rbp-0x10],rax
  4068aa:	mov    rax,QWORD PTR [rbp-0x40]
  4068ae:	mov    BYTE PTR [rax],0x0
  4068b1:	mov    rax,QWORD PTR [rbp-0x30]
  4068b5:	cmp    rax,QWORD PTR [rbp-0x38]
  4068b9:	jne    4068c1 <_start@@Base+0x1761>
  4068bb:	mov    rax,QWORD PTR [rbp-0x30]
  4068bf:	jmp    406919 <_start@@Base+0x17b9>
  4068c1:	lea    rdi,[rbp-0x18]
  4068c5:	lea    rcx,[rbp-0x1c]
  4068c9:	mov    rdx,QWORD PTR [rbp-0x38]
  4068cd:	mov    rsi,QWORD PTR [rbp-0x30]
  4068d1:	mov    rax,QWORD PTR [rbp-0x28]
  4068d5:	mov    r8,rdi
  4068d8:	mov    rdi,rax
  4068db:	call   427279 <flatcc_json_parser_integer@@Base>
  4068e0:	mov    QWORD PTR [rbp-0x30],rax
  4068e4:	mov    rax,QWORD PTR [rbp-0x30]
  4068e8:	cmp    rax,QWORD PTR [rbp-0x10]
  4068ec:	je     406915 <_start@@Base+0x17b5>
  4068ee:	mov    rdi,QWORD PTR [rbp-0x18]
  4068f2:	mov    ecx,DWORD PTR [rbp-0x1c]
  4068f5:	mov    r8,QWORD PTR [rbp-0x40]
  4068f9:	mov    rdx,QWORD PTR [rbp-0x38]
  4068fd:	mov    rsi,QWORD PTR [rbp-0x30]
  406901:	mov    rax,QWORD PTR [rbp-0x28]
  406905:	mov    r9,r8
  406908:	mov    r8,rdi
  40690b:	mov    rdi,rax
  40690e:	call   4060e0 <_start@@Base+0xf80>
  406913:	jmp    406919 <_start@@Base+0x17b9>
  406915:	mov    rax,QWORD PTR [rbp-0x30]
  406919:	mov    rdx,QWORD PTR [rbp-0x8]
  40691d:	xor    rdx,QWORD PTR fs:0x28
  406926:	je     40692d <_start@@Base+0x17cd>
  406928:	call   405070 <__stack_chk_fail@plt>
  40692d:	leave  
  40692e:	ret    
  40692f:	push   rbp
  406930:	mov    rbp,rsp
  406933:	sub    rsp,0x40
  406937:	mov    QWORD PTR [rbp-0x28],rdi
  40693b:	mov    QWORD PTR [rbp-0x30],rsi
  40693f:	mov    QWORD PTR [rbp-0x38],rdx
  406943:	mov    QWORD PTR [rbp-0x40],rcx
  406947:	mov    rax,QWORD PTR fs:0x28
  406950:	mov    QWORD PTR [rbp-0x8],rax
  406954:	xor    eax,eax
  406956:	mov    rax,QWORD PTR [rbp-0x30]
  40695a:	mov    QWORD PTR [rbp-0x10],rax
  40695e:	mov    rdx,QWORD PTR [rbp-0x38]
  406962:	mov    rax,QWORD PTR [rbp-0x30]
  406966:	sub    rdx,rax
  406969:	mov    rax,rdx
  40696c:	cmp    rax,0x3
  406970:	jle    40699f <_start@@Base+0x183f>
  406972:	mov    rax,QWORD PTR [rbp-0x30]
  406976:	mov    edx,0x4
  40697b:	lea    rsi,[rip+0x2e6bb]        # 43503d <_IO_stdin_used@@Base+0x3d>
  406982:	mov    rdi,rax
  406985:	call   4050c0 <memcmp@plt>
  40698a:	test   eax,eax
  40698c:	jne    40699f <_start@@Base+0x183f>
  40698e:	mov    rax,QWORD PTR [rbp-0x40]
  406992:	mov    BYTE PTR [rax],0x1
  406995:	mov    rax,QWORD PTR [rbp-0x10]
  406999:	add    rax,0x4
  40699d:	jmp    406a11 <_start@@Base+0x18b1>
  40699f:	mov    rdx,QWORD PTR [rbp-0x38]
  4069a3:	mov    rax,QWORD PTR [rbp-0x30]
  4069a7:	sub    rdx,rax
  4069aa:	mov    rax,rdx
  4069ad:	cmp    rax,0x4
  4069b1:	jle    4069e0 <_start@@Base+0x1880>
  4069b3:	mov    rax,QWORD PTR [rbp-0x30]
  4069b7:	mov    edx,0x5
  4069bc:	lea    rsi,[rip+0x2e67f]        # 435042 <_IO_stdin_used@@Base+0x42>
  4069c3:	mov    rdi,rax
  4069c6:	call   4050c0 <memcmp@plt>
  4069cb:	test   eax,eax
  4069cd:	jne    4069e0 <_start@@Base+0x1880>
  4069cf:	mov    rax,QWORD PTR [rbp-0x40]
  4069d3:	mov    BYTE PTR [rax],0x0
  4069d6:	mov    rax,QWORD PTR [rbp-0x10]
  4069da:	add    rax,0x5
  4069de:	jmp    406a11 <_start@@Base+0x18b1>
  4069e0:	lea    rcx,[rbp-0x11]
  4069e4:	mov    rdx,QWORD PTR [rbp-0x38]
  4069e8:	mov    rsi,QWORD PTR [rbp-0x30]
  4069ec:	mov    rax,QWORD PTR [rbp-0x28]
  4069f0:	mov    rdi,rax
  4069f3:	call   406557 <_start@@Base+0x13f7>
  4069f8:	mov    QWORD PTR [rbp-0x30],rax
  4069fc:	movzx  eax,BYTE PTR [rbp-0x11]
  406a00:	test   al,al
  406a02:	setne  al
  406a05:	mov    edx,eax
  406a07:	mov    rax,QWORD PTR [rbp-0x40]
  406a0b:	mov    BYTE PTR [rax],dl
  406a0d:	mov    rax,QWORD PTR [rbp-0x30]
  406a11:	mov    rcx,QWORD PTR [rbp-0x8]
  406a15:	xor    rcx,QWORD PTR fs:0x28
  406a1e:	je     406a25 <_start@@Base+0x18c5>
  406a20:	call   405070 <__stack_chk_fail@plt>
  406a25:	leave  
  406a26:	ret    
  406a27:	push   rbp
  406a28:	mov    rbp,rsp
  406a2b:	sub    rsp,0x60
  406a2f:	mov    QWORD PTR [rbp-0x38],rdi
  406a33:	mov    QWORD PTR [rbp-0x40],rsi
  406a37:	mov    QWORD PTR [rbp-0x48],rdx
  406a3b:	mov    QWORD PTR [rbp-0x50],rcx
  406a3f:	mov    QWORD PTR [rbp-0x58],r8
  406a43:	mov    rax,QWORD PTR fs:0x28
  406a4c:	mov    QWORD PTR [rbp-0x8],rax
  406a50:	xor    eax,eax
  406a52:	mov    QWORD PTR [rbp-0x28],0x0
  406a5a:	mov    rax,QWORD PTR [rbp-0x58]
  406a5e:	mov    QWORD PTR [rax],0x0
  406a65:	mov    rdx,QWORD PTR [rbp-0x48]
  406a69:	mov    rcx,QWORD PTR [rbp-0x40]
  406a6d:	mov    rax,QWORD PTR [rbp-0x38]
  406a71:	mov    rsi,rcx
  406a74:	mov    rdi,rax
  406a77:	call   405802 <_start@@Base+0x6a2>
  406a7c:	mov    QWORD PTR [rbp-0x40],rax
  406a80:	mov    rax,QWORD PTR [rbp-0x40]
  406a84:	cmp    rax,QWORD PTR [rbp-0x48]
  406a88:	jne    406a93 <_start@@Base+0x1933>
  406a8a:	mov    rax,QWORD PTR [rbp-0x40]
  406a8e:	jmp    406b70 <_start@@Base+0x1a10>
  406a93:	mov    rax,QWORD PTR [rbp-0x50]
  406a97:	mov    QWORD PTR [rbp-0x18],rax
  406a9b:	mov    rax,QWORD PTR [rbp-0x18]
  406a9f:	mov    rax,QWORD PTR [rax]
  406aa2:	mov    rdx,QWORD PTR [rbp-0x40]
  406aa6:	mov    QWORD PTR [rbp-0x10],rdx
  406aaa:	lea    r9,[rbp-0x2c]
  406aae:	lea    r8,[rbp-0x20]
  406ab2:	lea    rcx,[rbp-0x30]
  406ab6:	mov    rdx,QWORD PTR [rbp-0x48]
  406aba:	mov    rsi,QWORD PTR [rbp-0x10]
  406abe:	mov    rdi,QWORD PTR [rbp-0x38]
  406ac2:	call   rax
  406ac4:	mov    QWORD PTR [rbp-0x40],rax
  406ac8:	mov    rax,QWORD PTR [rbp-0x40]
  406acc:	cmp    rax,QWORD PTR [rbp-0x48]
  406ad0:	jne    406adb <_start@@Base+0x197b>
  406ad2:	mov    rax,QWORD PTR [rbp-0x40]
  406ad6:	jmp    406b70 <_start@@Base+0x1a10>
  406adb:	mov    rax,QWORD PTR [rbp-0x40]
  406adf:	cmp    rax,QWORD PTR [rbp-0x10]
  406ae3:	jne    406af6 <_start@@Base+0x1996>
  406ae5:	add    QWORD PTR [rbp-0x18],0x8
  406aea:	mov    rax,QWORD PTR [rbp-0x18]
  406aee:	mov    rax,QWORD PTR [rax]
  406af1:	test   rax,rax
  406af4:	jne    406a9b <_start@@Base+0x193b>
  406af6:	mov    rax,QWORD PTR [rbp-0x10]
  406afa:	cmp    rax,QWORD PTR [rbp-0x40]
  406afe:	jne    406b1b <_start@@Base+0x19bb>
  406b00:	mov    rdx,QWORD PTR [rbp-0x48]
  406b04:	mov    rsi,QWORD PTR [rbp-0x40]
  406b08:	mov    rax,QWORD PTR [rbp-0x38]
  406b0c:	mov    ecx,0x17
  406b11:	mov    rdi,rax
  406b14:	call   425bce <flatcc_json_parser_set_error@@Base>
  406b19:	jmp    406b70 <_start@@Base+0x1a10>
  406b1b:	mov    rdi,QWORD PTR [rbp-0x20]
  406b1f:	mov    ecx,DWORD PTR [rbp-0x30]
  406b22:	lea    r8,[rbp-0x28]
  406b26:	mov    rdx,QWORD PTR [rbp-0x48]
  406b2a:	mov    rsi,QWORD PTR [rbp-0x40]
  406b2e:	mov    rax,QWORD PTR [rbp-0x38]
  406b32:	mov    r9,r8
  406b35:	mov    r8,rdi
  406b38:	mov    rdi,rax
  406b3b:	call   405d15 <_start@@Base+0xbb5>
  406b40:	cmp    rax,QWORD PTR [rbp-0x48]
  406b44:	jne    406b4c <_start@@Base+0x19ec>
  406b46:	mov    rax,QWORD PTR [rbp-0x48]
  406b4a:	jmp    406b70 <_start@@Base+0x1a10>
  406b4c:	mov    rax,QWORD PTR [rbp-0x58]
  406b50:	mov    rdx,QWORD PTR [rax]
  406b53:	mov    rax,QWORD PTR [rbp-0x28]
  406b57:	add    rdx,rax
  406b5a:	mov    rax,QWORD PTR [rbp-0x58]
  406b5e:	mov    QWORD PTR [rax],rdx
  406b61:	mov    eax,DWORD PTR [rbp-0x2c]
  406b64:	test   eax,eax
  406b66:	jne    406a93 <_start@@Base+0x1933>
  406b6c:	mov    rax,QWORD PTR [rbp-0x40]
  406b70:	mov    rdi,QWORD PTR [rbp-0x8]
  406b74:	xor    rdi,QWORD PTR fs:0x28
  406b7d:	je     406b84 <_start@@Base+0x1a24>
  406b7f:	call   405070 <__stack_chk_fail@plt>
  406b84:	leave  
  406b85:	ret    
  406b86:	push   rbp
  406b87:	mov    rbp,rsp
  406b8a:	sub    rsp,0x60
  406b8e:	mov    QWORD PTR [rbp-0x38],rdi
  406b92:	mov    QWORD PTR [rbp-0x40],rsi
  406b96:	mov    QWORD PTR [rbp-0x48],rdx
  406b9a:	mov    QWORD PTR [rbp-0x50],rcx
  406b9e:	mov    QWORD PTR [rbp-0x58],r8
  406ba2:	mov    rax,QWORD PTR fs:0x28
  406bab:	mov    QWORD PTR [rbp-0x8],rax
  406baf:	xor    eax,eax
  406bb1:	mov    DWORD PTR [rbp-0x2c],0x0
  406bb8:	mov    rax,QWORD PTR [rbp-0x58]
  406bbc:	mov    DWORD PTR [rax],0x0
  406bc2:	mov    rdx,QWORD PTR [rbp-0x48]
  406bc6:	mov    rcx,QWORD PTR [rbp-0x40]
  406bca:	mov    rax,QWORD PTR [rbp-0x38]
  406bce:	mov    rsi,rcx
  406bd1:	mov    rdi,rax
  406bd4:	call   405802 <_start@@Base+0x6a2>
  406bd9:	mov    QWORD PTR [rbp-0x40],rax
  406bdd:	mov    rax,QWORD PTR [rbp-0x40]
  406be1:	cmp    rax,QWORD PTR [rbp-0x48]
  406be5:	jne    406bf0 <_start@@Base+0x1a90>
  406be7:	mov    rax,QWORD PTR [rbp-0x40]
  406beb:	jmp    406cc9 <_start@@Base+0x1b69>
  406bf0:	mov    rax,QWORD PTR [rbp-0x50]
  406bf4:	mov    QWORD PTR [rbp-0x18],rax
  406bf8:	mov    rax,QWORD PTR [rbp-0x18]
  406bfc:	mov    rax,QWORD PTR [rax]
  406bff:	mov    rdx,QWORD PTR [rbp-0x40]
  406c03:	mov    QWORD PTR [rbp-0x10],rdx
  406c07:	lea    r9,[rbp-0x24]
  406c0b:	lea    r8,[rbp-0x20]
  406c0f:	lea    rcx,[rbp-0x28]
  406c13:	mov    rdx,QWORD PTR [rbp-0x48]
  406c17:	mov    rsi,QWORD PTR [rbp-0x10]
  406c1b:	mov    rdi,QWORD PTR [rbp-0x38]
  406c1f:	call   rax
  406c21:	mov    QWORD PTR [rbp-0x40],rax
  406c25:	mov    rax,QWORD PTR [rbp-0x40]
  406c29:	cmp    rax,QWORD PTR [rbp-0x48]
  406c2d:	jne    406c38 <_start@@Base+0x1ad8>
  406c2f:	mov    rax,QWORD PTR [rbp-0x40]
  406c33:	jmp    406cc9 <_start@@Base+0x1b69>
  406c38:	mov    rax,QWORD PTR [rbp-0x40]
  406c3c:	cmp    rax,QWORD PTR [rbp-0x10]
  406c40:	jne    406c53 <_start@@Base+0x1af3>
  406c42:	add    QWORD PTR [rbp-0x18],0x8
  406c47:	mov    rax,QWORD PTR [rbp-0x18]
  406c4b:	mov    rax,QWORD PTR [rax]
  406c4e:	test   rax,rax
  406c51:	jne    406bf8 <_start@@Base+0x1a98>
  406c53:	mov    rax,QWORD PTR [rbp-0x10]
  406c57:	cmp    rax,QWORD PTR [rbp-0x40]
  406c5b:	jne    406c78 <_start@@Base+0x1b18>
  406c5d:	mov    rdx,QWORD PTR [rbp-0x48]
  406c61:	mov    rsi,QWORD PTR [rbp-0x40]
  406c65:	mov    rax,QWORD PTR [rbp-0x38]
  406c69:	mov    ecx,0x17
  406c6e:	mov    rdi,rax
  406c71:	call   425bce <flatcc_json_parser_set_error@@Base>
  406c76:	jmp    406cc9 <_start@@Base+0x1b69>
  406c78:	mov    rdi,QWORD PTR [rbp-0x20]
  406c7c:	mov    ecx,DWORD PTR [rbp-0x28]
  406c7f:	lea    r8,[rbp-0x2c]
  406c83:	mov    rdx,QWORD PTR [rbp-0x48]
  406c87:	mov    rsi,QWORD PTR [rbp-0x40]
  406c8b:	mov    rax,QWORD PTR [rbp-0x38]
  406c8f:	mov    r9,r8
  406c92:	mov    r8,rdi
  406c95:	mov    rdi,rax
  406c98:	call   405dbc <_start@@Base+0xc5c>
  406c9d:	cmp    rax,QWORD PTR [rbp-0x48]
  406ca1:	jne    406ca9 <_start@@Base+0x1b49>
  406ca3:	mov    rax,QWORD PTR [rbp-0x48]
  406ca7:	jmp    406cc9 <_start@@Base+0x1b69>
  406ca9:	mov    rax,QWORD PTR [rbp-0x58]
  406cad:	mov    edx,DWORD PTR [rax]
  406caf:	mov    eax,DWORD PTR [rbp-0x2c]
  406cb2:	add    edx,eax
  406cb4:	mov    rax,QWORD PTR [rbp-0x58]
  406cb8:	mov    DWORD PTR [rax],edx
  406cba:	mov    eax,DWORD PTR [rbp-0x24]
  406cbd:	test   eax,eax
  406cbf:	jne    406bf0 <_start@@Base+0x1a90>
  406cc5:	mov    rax,QWORD PTR [rbp-0x40]
  406cc9:	mov    rdi,QWORD PTR [rbp-0x8]
  406ccd:	xor    rdi,QWORD PTR fs:0x28
  406cd6:	je     406cdd <_start@@Base+0x1b7d>
  406cd8:	call   405070 <__stack_chk_fail@plt>
  406cdd:	leave  
  406cde:	ret    
  406cdf:	push   rbp
  406ce0:	mov    rbp,rsp
  406ce3:	sub    rsp,0x60
  406ce7:	mov    QWORD PTR [rbp-0x38],rdi
  406ceb:	mov    QWORD PTR [rbp-0x40],rsi
  406cef:	mov    QWORD PTR [rbp-0x48],rdx
  406cf3:	mov    QWORD PTR [rbp-0x50],rcx
  406cf7:	mov    QWORD PTR [rbp-0x58],r8
  406cfb:	mov    rax,QWORD PTR fs:0x28
  406d04:	mov    QWORD PTR [rbp-0x8],rax
  406d08:	xor    eax,eax
  406d0a:	mov    WORD PTR [rbp-0x2a],0x0
  406d10:	mov    rax,QWORD PTR [rbp-0x58]
  406d14:	mov    WORD PTR [rax],0x0
  406d19:	mov    rdx,QWORD PTR [rbp-0x48]
  406d1d:	mov    rcx,QWORD PTR [rbp-0x40]
  406d21:	mov    rax,QWORD PTR [rbp-0x38]
  406d25:	mov    rsi,rcx
  406d28:	mov    rdi,rax
  406d2b:	call   405802 <_start@@Base+0x6a2>
  406d30:	mov    QWORD PTR [rbp-0x40],rax
  406d34:	mov    rax,QWORD PTR [rbp-0x40]
  406d38:	cmp    rax,QWORD PTR [rbp-0x48]
  406d3c:	jne    406d47 <_start@@Base+0x1be7>
  406d3e:	mov    rax,QWORD PTR [rbp-0x40]
  406d42:	jmp    406e23 <_start@@Base+0x1cc3>
  406d47:	mov    rax,QWORD PTR [rbp-0x50]
  406d4b:	mov    QWORD PTR [rbp-0x18],rax
  406d4f:	mov    rax,QWORD PTR [rbp-0x18]
  406d53:	mov    rax,QWORD PTR [rax]
  406d56:	mov    rdx,QWORD PTR [rbp-0x40]
  406d5a:	mov    QWORD PTR [rbp-0x10],rdx
  406d5e:	lea    r9,[rbp-0x24]
  406d62:	lea    r8,[rbp-0x20]
  406d66:	lea    rcx,[rbp-0x28]
  406d6a:	mov    rdx,QWORD PTR [rbp-0x48]
  406d6e:	mov    rsi,QWORD PTR [rbp-0x10]
  406d72:	mov    rdi,QWORD PTR [rbp-0x38]
  406d76:	call   rax
  406d78:	mov    QWORD PTR [rbp-0x40],rax
  406d7c:	mov    rax,QWORD PTR [rbp-0x40]
  406d80:	cmp    rax,QWORD PTR [rbp-0x48]
  406d84:	jne    406d8f <_start@@Base+0x1c2f>
  406d86:	mov    rax,QWORD PTR [rbp-0x40]
  406d8a:	jmp    406e23 <_start@@Base+0x1cc3>
  406d8f:	mov    rax,QWORD PTR [rbp-0x40]
  406d93:	cmp    rax,QWORD PTR [rbp-0x10]
  406d97:	jne    406daa <_start@@Base+0x1c4a>
  406d99:	add    QWORD PTR [rbp-0x18],0x8
  406d9e:	mov    rax,QWORD PTR [rbp-0x18]
  406da2:	mov    rax,QWORD PTR [rax]
  406da5:	test   rax,rax
  406da8:	jne    406d4f <_start@@Base+0x1bef>
  406daa:	mov    rax,QWORD PTR [rbp-0x10]
  406dae:	cmp    rax,QWORD PTR [rbp-0x40]
  406db2:	jne    406dcf <_start@@Base+0x1c6f>
  406db4:	mov    rdx,QWORD PTR [rbp-0x48]
  406db8:	mov    rsi,QWORD PTR [rbp-0x40]
  406dbc:	mov    rax,QWORD PTR [rbp-0x38]
  406dc0:	mov    ecx,0x17
  406dc5:	mov    rdi,rax
  406dc8:	call   425bce <flatcc_json_parser_set_error@@Base>
  406dcd:	jmp    406e23 <_start@@Base+0x1cc3>
  406dcf:	mov    rdi,QWORD PTR [rbp-0x20]
  406dd3:	mov    ecx,DWORD PTR [rbp-0x28]
  406dd6:	lea    r8,[rbp-0x2a]
  406dda:	mov    rdx,QWORD PTR [rbp-0x48]
  406dde:	mov    rsi,QWORD PTR [rbp-0x40]
  406de2:	mov    rax,QWORD PTR [rbp-0x38]
  406de6:	mov    r9,r8
  406de9:	mov    r8,rdi
  406dec:	mov    rdi,rax
  406def:	call   405e34 <_start@@Base+0xcd4>
  406df4:	cmp    rax,QWORD PTR [rbp-0x48]
  406df8:	jne    406e00 <_start@@Base+0x1ca0>
  406dfa:	mov    rax,QWORD PTR [rbp-0x48]
  406dfe:	jmp    406e23 <_start@@Base+0x1cc3>
  406e00:	mov    rax,QWORD PTR [rbp-0x58]
  406e04:	movzx  edx,WORD PTR [rax]
  406e07:	movzx  eax,WORD PTR [rbp-0x2a]
  406e0b:	add    edx,eax
  406e0d:	mov    rax,QWORD PTR [rbp-0x58]
  406e11:	mov    WORD PTR [rax],dx
  406e14:	mov    eax,DWORD PTR [rbp-0x24]
  406e17:	test   eax,eax
  406e19:	jne    406d47 <_start@@Base+0x1be7>
  406e1f:	mov    rax,QWORD PTR [rbp-0x40]
  406e23:	mov    rdi,QWORD PTR [rbp-0x8]
  406e27:	xor    rdi,QWORD PTR fs:0x28
  406e30:	je     406e37 <_start@@Base+0x1cd7>
  406e32:	call   405070 <__stack_chk_fail@plt>
  406e37:	leave  
  406e38:	ret    
  406e39:	push   rbp
  406e3a:	mov    rbp,rsp
  406e3d:	sub    rsp,0x60
  406e41:	mov    QWORD PTR [rbp-0x38],rdi
  406e45:	mov    QWORD PTR [rbp-0x40],rsi
  406e49:	mov    QWORD PTR [rbp-0x48],rdx
  406e4d:	mov    QWORD PTR [rbp-0x50],rcx
  406e51:	mov    QWORD PTR [rbp-0x58],r8
  406e55:	mov    rax,QWORD PTR fs:0x28
  406e5e:	mov    QWORD PTR [rbp-0x8],rax
  406e62:	xor    eax,eax
  406e64:	mov    BYTE PTR [rbp-0x29],0x0
  406e68:	mov    rax,QWORD PTR [rbp-0x58]
  406e6c:	mov    BYTE PTR [rax],0x0
  406e6f:	mov    rdx,QWORD PTR [rbp-0x48]
  406e73:	mov    rcx,QWORD PTR [rbp-0x40]
  406e77:	mov    rax,QWORD PTR [rbp-0x38]
  406e7b:	mov    rsi,rcx
  406e7e:	mov    rdi,rax
  406e81:	call   405802 <_start@@Base+0x6a2>
  406e86:	mov    QWORD PTR [rbp-0x40],rax
  406e8a:	mov    rax,QWORD PTR [rbp-0x40]
  406e8e:	cmp    rax,QWORD PTR [rbp-0x48]
  406e92:	jne    406e9d <_start@@Base+0x1d3d>
  406e94:	mov    rax,QWORD PTR [rbp-0x40]
  406e98:	jmp    406f78 <_start@@Base+0x1e18>
  406e9d:	mov    rax,QWORD PTR [rbp-0x50]
  406ea1:	mov    QWORD PTR [rbp-0x18],rax
  406ea5:	mov    rax,QWORD PTR [rbp-0x18]
  406ea9:	mov    rax,QWORD PTR [rax]
  406eac:	mov    rdx,QWORD PTR [rbp-0x40]
  406eb0:	mov    QWORD PTR [rbp-0x10],rdx
  406eb4:	lea    r9,[rbp-0x24]
  406eb8:	lea    r8,[rbp-0x20]
  406ebc:	lea    rcx,[rbp-0x28]
  406ec0:	mov    rdx,QWORD PTR [rbp-0x48]
  406ec4:	mov    rsi,QWORD PTR [rbp-0x10]
  406ec8:	mov    rdi,QWORD PTR [rbp-0x38]
  406ecc:	call   rax
  406ece:	mov    QWORD PTR [rbp-0x40],rax
  406ed2:	mov    rax,QWORD PTR [rbp-0x40]
  406ed6:	cmp    rax,QWORD PTR [rbp-0x48]
  406eda:	jne    406ee5 <_start@@Base+0x1d85>
  406edc:	mov    rax,QWORD PTR [rbp-0x40]
  406ee0:	jmp    406f78 <_start@@Base+0x1e18>
  406ee5:	mov    rax,QWORD PTR [rbp-0x40]
  406ee9:	cmp    rax,QWORD PTR [rbp-0x10]
  406eed:	jne    406f00 <_start@@Base+0x1da0>
  406eef:	add    QWORD PTR [rbp-0x18],0x8
  406ef4:	mov    rax,QWORD PTR [rbp-0x18]
  406ef8:	mov    rax,QWORD PTR [rax]
  406efb:	test   rax,rax
  406efe:	jne    406ea5 <_start@@Base+0x1d45>
  406f00:	mov    rax,QWORD PTR [rbp-0x10]
  406f04:	cmp    rax,QWORD PTR [rbp-0x40]
  406f08:	jne    406f25 <_start@@Base+0x1dc5>
  406f0a:	mov    rdx,QWORD PTR [rbp-0x48]
  406f0e:	mov    rsi,QWORD PTR [rbp-0x40]
  406f12:	mov    rax,QWORD PTR [rbp-0x38]
  406f16:	mov    ecx,0x17
  406f1b:	mov    rdi,rax
  406f1e:	call   425bce <flatcc_json_parser_set_error@@Base>
  406f23:	jmp    406f78 <_start@@Base+0x1e18>
  406f25:	mov    rdi,QWORD PTR [rbp-0x20]
  406f29:	mov    ecx,DWORD PTR [rbp-0x28]
  406f2c:	lea    r8,[rbp-0x29]
  406f30:	mov    rdx,QWORD PTR [rbp-0x48]
  406f34:	mov    rsi,QWORD PTR [rbp-0x40]
  406f38:	mov    rax,QWORD PTR [rbp-0x38]
  406f3c:	mov    r9,r8
  406f3f:	mov    r8,rdi
  406f42:	mov    rdi,rax
  406f45:	call   405eac <_start@@Base+0xd4c>
  406f4a:	cmp    rax,QWORD PTR [rbp-0x48]
  406f4e:	jne    406f56 <_start@@Base+0x1df6>
  406f50:	mov    rax,QWORD PTR [rbp-0x48]
  406f54:	jmp    406f78 <_start@@Base+0x1e18>
  406f56:	mov    rax,QWORD PTR [rbp-0x58]
  406f5a:	movzx  edx,BYTE PTR [rax]
  406f5d:	movzx  eax,BYTE PTR [rbp-0x29]
  406f61:	add    edx,eax
  406f63:	mov    rax,QWORD PTR [rbp-0x58]
  406f67:	mov    BYTE PTR [rax],dl
  406f69:	mov    eax,DWORD PTR [rbp-0x24]
  406f6c:	test   eax,eax
  406f6e:	jne    406e9d <_start@@Base+0x1d3d>
  406f74:	mov    rax,QWORD PTR [rbp-0x40]
  406f78:	mov    rdi,QWORD PTR [rbp-0x8]
  406f7c:	xor    rdi,QWORD PTR fs:0x28
  406f85:	je     406f8c <_start@@Base+0x1e2c>
  406f87:	call   405070 <__stack_chk_fail@plt>
  406f8c:	leave  
  406f8d:	ret    
  406f8e:	push   rbp
  406f8f:	mov    rbp,rsp
  406f92:	sub    rsp,0x60
  406f96:	mov    QWORD PTR [rbp-0x38],rdi
  406f9a:	mov    QWORD PTR [rbp-0x40],rsi
  406f9e:	mov    QWORD PTR [rbp-0x48],rdx
  406fa2:	mov    QWORD PTR [rbp-0x50],rcx
  406fa6:	mov    QWORD PTR [rbp-0x58],r8
  406faa:	mov    rax,QWORD PTR fs:0x28
  406fb3:	mov    QWORD PTR [rbp-0x8],rax
  406fb7:	xor    eax,eax
  406fb9:	mov    QWORD PTR [rbp-0x28],0x0
  406fc1:	mov    rax,QWORD PTR [rbp-0x58]
  406fc5:	mov    QWORD PTR [rax],0x0
  406fcc:	mov    rdx,QWORD PTR [rbp-0x48]
  406fd0:	mov    rcx,QWORD PTR [rbp-0x40]
  406fd4:	mov    rax,QWORD PTR [rbp-0x38]
  406fd8:	mov    rsi,rcx
  406fdb:	mov    rdi,rax
  406fde:	call   405802 <_start@@Base+0x6a2>
  406fe3:	mov    QWORD PTR [rbp-0x40],rax
  406fe7:	mov    rax,QWORD PTR [rbp-0x40]
  406feb:	cmp    rax,QWORD PTR [rbp-0x48]
  406fef:	jne    406ffa <_start@@Base+0x1e9a>
  406ff1:	mov    rax,QWORD PTR [rbp-0x40]
  406ff5:	jmp    4070d7 <_start@@Base+0x1f77>
  406ffa:	mov    rax,QWORD PTR [rbp-0x50]
  406ffe:	mov    QWORD PTR [rbp-0x18],rax
  407002:	mov    rax,QWORD PTR [rbp-0x18]
  407006:	mov    rax,QWORD PTR [rax]
  407009:	mov    rdx,QWORD PTR [rbp-0x40]
  40700d:	mov    QWORD PTR [rbp-0x10],rdx
  407011:	lea    r9,[rbp-0x2c]
  407015:	lea    r8,[rbp-0x20]
  407019:	lea    rcx,[rbp-0x30]
  40701d:	mov    rdx,QWORD PTR [rbp-0x48]
  407021:	mov    rsi,QWORD PTR [rbp-0x10]
  407025:	mov    rdi,QWORD PTR [rbp-0x38]
  407029:	call   rax
  40702b:	mov    QWORD PTR [rbp-0x40],rax
  40702f:	mov    rax,QWORD PTR [rbp-0x40]
  407033:	cmp    rax,QWORD PTR [rbp-0x48]
  407037:	jne    407042 <_start@@Base+0x1ee2>
  407039:	mov    rax,QWORD PTR [rbp-0x40]
  40703d:	jmp    4070d7 <_start@@Base+0x1f77>
  407042:	mov    rax,QWORD PTR [rbp-0x40]
  407046:	cmp    rax,QWORD PTR [rbp-0x10]
  40704a:	jne    40705d <_start@@Base+0x1efd>
  40704c:	add    QWORD PTR [rbp-0x18],0x8
  407051:	mov    rax,QWORD PTR [rbp-0x18]
  407055:	mov    rax,QWORD PTR [rax]
  407058:	test   rax,rax
  40705b:	jne    407002 <_start@@Base+0x1ea2>
  40705d:	mov    rax,QWORD PTR [rbp-0x10]
  407061:	cmp    rax,QWORD PTR [rbp-0x40]
  407065:	jne    407082 <_start@@Base+0x1f22>
  407067:	mov    rdx,QWORD PTR [rbp-0x48]
  40706b:	mov    rsi,QWORD PTR [rbp-0x40]
  40706f:	mov    rax,QWORD PTR [rbp-0x38]
  407073:	mov    ecx,0x17
  407078:	mov    rdi,rax
  40707b:	call   425bce <flatcc_json_parser_set_error@@Base>
  407080:	jmp    4070d7 <_start@@Base+0x1f77>
  407082:	mov    rdi,QWORD PTR [rbp-0x20]
  407086:	mov    ecx,DWORD PTR [rbp-0x30]
  407089:	lea    r8,[rbp-0x28]
  40708d:	mov    rdx,QWORD PTR [rbp-0x48]
  407091:	mov    rsi,QWORD PTR [rbp-0x40]
  407095:	mov    rax,QWORD PTR [rbp-0x38]
  407099:	mov    r9,r8
  40709c:	mov    r8,rdi
  40709f:	mov    rdi,rax
  4070a2:	call   405f23 <_start@@Base+0xdc3>
  4070a7:	cmp    rax,QWORD PTR [rbp-0x48]
  4070ab:	jne    4070b3 <_start@@Base+0x1f53>
  4070ad:	mov    rax,QWORD PTR [rbp-0x48]
  4070b1:	jmp    4070d7 <_start@@Base+0x1f77>
  4070b3:	mov    rax,QWORD PTR [rbp-0x58]
  4070b7:	mov    rdx,QWORD PTR [rax]
  4070ba:	mov    rax,QWORD PTR [rbp-0x28]
  4070be:	add    rdx,rax
  4070c1:	mov    rax,QWORD PTR [rbp-0x58]
  4070c5:	mov    QWORD PTR [rax],rdx
  4070c8:	mov    eax,DWORD PTR [rbp-0x2c]
  4070cb:	test   eax,eax
  4070cd:	jne    406ffa <_start@@Base+0x1e9a>
  4070d3:	mov    rax,QWORD PTR [rbp-0x40]
  4070d7:	mov    rdi,QWORD PTR [rbp-0x8]
  4070db:	xor    rdi,QWORD PTR fs:0x28
  4070e4:	je     4070eb <_start@@Base+0x1f8b>
  4070e6:	call   405070 <__stack_chk_fail@plt>
  4070eb:	leave  
  4070ec:	ret    
  4070ed:	push   rbp
  4070ee:	mov    rbp,rsp
  4070f1:	sub    rsp,0x60
  4070f5:	mov    QWORD PTR [rbp-0x38],rdi
  4070f9:	mov    QWORD PTR [rbp-0x40],rsi
  4070fd:	mov    QWORD PTR [rbp-0x48],rdx
  407101:	mov    QWORD PTR [rbp-0x50],rcx
  407105:	mov    QWORD PTR [rbp-0x58],r8
  407109:	mov    rax,QWORD PTR fs:0x28
  407112:	mov    QWORD PTR [rbp-0x8],rax
  407116:	xor    eax,eax
  407118:	mov    DWORD PTR [rbp-0x2c],0x0
  40711f:	mov    rax,QWORD PTR [rbp-0x58]
  407123:	mov    DWORD PTR [rax],0x0
  407129:	mov    rdx,QWORD PTR [rbp-0x48]
  40712d:	mov    rcx,QWORD PTR [rbp-0x40]
  407131:	mov    rax,QWORD PTR [rbp-0x38]
  407135:	mov    rsi,rcx
  407138:	mov    rdi,rax
  40713b:	call   405802 <_start@@Base+0x6a2>
  407140:	mov    QWORD PTR [rbp-0x40],rax
  407144:	mov    rax,QWORD PTR [rbp-0x40]
  407148:	cmp    rax,QWORD PTR [rbp-0x48]
  40714c:	jne    407157 <_start@@Base+0x1ff7>
  40714e:	mov    rax,QWORD PTR [rbp-0x40]
  407152:	jmp    407230 <_start@@Base+0x20d0>
  407157:	mov    rax,QWORD PTR [rbp-0x50]
  40715b:	mov    QWORD PTR [rbp-0x18],rax
  40715f:	mov    rax,QWORD PTR [rbp-0x18]
  407163:	mov    rax,QWORD PTR [rax]
  407166:	mov    rdx,QWORD PTR [rbp-0x40]
  40716a:	mov    QWORD PTR [rbp-0x10],rdx
  40716e:	lea    r9,[rbp-0x24]
  407172:	lea    r8,[rbp-0x20]
  407176:	lea    rcx,[rbp-0x28]
  40717a:	mov    rdx,QWORD PTR [rbp-0x48]
  40717e:	mov    rsi,QWORD PTR [rbp-0x10]
  407182:	mov    rdi,QWORD PTR [rbp-0x38]
  407186:	call   rax
  407188:	mov    QWORD PTR [rbp-0x40],rax
  40718c:	mov    rax,QWORD PTR [rbp-0x40]
  407190:	cmp    rax,QWORD PTR [rbp-0x48]
  407194:	jne    40719f <_start@@Base+0x203f>
  407196:	mov    rax,QWORD PTR [rbp-0x40]
  40719a:	jmp    407230 <_start@@Base+0x20d0>
  40719f:	mov    rax,QWORD PTR [rbp-0x40]
  4071a3:	cmp    rax,QWORD PTR [rbp-0x10]
  4071a7:	jne    4071ba <_start@@Base+0x205a>
  4071a9:	add    QWORD PTR [rbp-0x18],0x8
  4071ae:	mov    rax,QWORD PTR [rbp-0x18]
  4071b2:	mov    rax,QWORD PTR [rax]
  4071b5:	test   rax,rax
  4071b8:	jne    40715f <_start@@Base+0x1fff>
  4071ba:	mov    rax,QWORD PTR [rbp-0x10]
  4071be:	cmp    rax,QWORD PTR [rbp-0x40]
  4071c2:	jne    4071df <_start@@Base+0x207f>
  4071c4:	mov    rdx,QWORD PTR [rbp-0x48]
  4071c8:	mov    rsi,QWORD PTR [rbp-0x40]
  4071cc:	mov    rax,QWORD PTR [rbp-0x38]
  4071d0:	mov    ecx,0x17
  4071d5:	mov    rdi,rax
  4071d8:	call   425bce <flatcc_json_parser_set_error@@Base>
  4071dd:	jmp    407230 <_start@@Base+0x20d0>
  4071df:	mov    rdi,QWORD PTR [rbp-0x20]
  4071e3:	mov    ecx,DWORD PTR [rbp-0x28]
  4071e6:	lea    r8,[rbp-0x2c]
  4071ea:	mov    rdx,QWORD PTR [rbp-0x48]
  4071ee:	mov    rsi,QWORD PTR [rbp-0x40]
  4071f2:	mov    rax,QWORD PTR [rbp-0x38]
  4071f6:	mov    r9,r8
  4071f9:	mov    r8,rdi
  4071fc:	mov    rdi,rax
  4071ff:	call   405fbb <_start@@Base+0xe5b>
  407204:	cmp    rax,QWORD PTR [rbp-0x48]
  407208:	jne    407210 <_start@@Base+0x20b0>
  40720a:	mov    rax,QWORD PTR [rbp-0x48]
  40720e:	jmp    407230 <_start@@Base+0x20d0>
  407210:	mov    rax,QWORD PTR [rbp-0x58]
  407214:	mov    edx,DWORD PTR [rax]
  407216:	mov    eax,DWORD PTR [rbp-0x2c]
  407219:	add    edx,eax
  40721b:	mov    rax,QWORD PTR [rbp-0x58]
  40721f:	mov    DWORD PTR [rax],edx
  407221:	mov    eax,DWORD PTR [rbp-0x24]
  407224:	test   eax,eax
  407226:	jne    407157 <_start@@Base+0x1ff7>
  40722c:	mov    rax,QWORD PTR [rbp-0x40]
  407230:	mov    rdi,QWORD PTR [rbp-0x8]
  407234:	xor    rdi,QWORD PTR fs:0x28
  40723d:	je     407244 <_start@@Base+0x20e4>
  40723f:	call   405070 <__stack_chk_fail@plt>
  407244:	leave  
  407245:	ret    
  407246:	push   rbp
  407247:	mov    rbp,rsp
  40724a:	sub    rsp,0x60
  40724e:	mov    QWORD PTR [rbp-0x38],rdi
  407252:	mov    QWORD PTR [rbp-0x40],rsi
  407256:	mov    QWORD PTR [rbp-0x48],rdx
  40725a:	mov    QWORD PTR [rbp-0x50],rcx
  40725e:	mov    QWORD PTR [rbp-0x58],r8
  407262:	mov    rax,QWORD PTR fs:0x28
  40726b:	mov    QWORD PTR [rbp-0x8],rax
  40726f:	xor    eax,eax
  407271:	mov    WORD PTR [rbp-0x2a],0x0
  407277:	mov    rax,QWORD PTR [rbp-0x58]
  40727b:	mov    WORD PTR [rax],0x0
  407280:	mov    rdx,QWORD PTR [rbp-0x48]
  407284:	mov    rcx,QWORD PTR [rbp-0x40]
  407288:	mov    rax,QWORD PTR [rbp-0x38]
  40728c:	mov    rsi,rcx
  40728f:	mov    rdi,rax
  407292:	call   405802 <_start@@Base+0x6a2>
  407297:	mov    QWORD PTR [rbp-0x40],rax
  40729b:	mov    rax,QWORD PTR [rbp-0x40]
  40729f:	cmp    rax,QWORD PTR [rbp-0x48]
  4072a3:	jne    4072ae <_start@@Base+0x214e>
  4072a5:	mov    rax,QWORD PTR [rbp-0x40]
  4072a9:	jmp    40738e <_start@@Base+0x222e>
  4072ae:	mov    rax,QWORD PTR [rbp-0x50]
  4072b2:	mov    QWORD PTR [rbp-0x18],rax
  4072b6:	mov    rax,QWORD PTR [rbp-0x18]
  4072ba:	mov    rax,QWORD PTR [rax]
  4072bd:	mov    rdx,QWORD PTR [rbp-0x40]
  4072c1:	mov    QWORD PTR [rbp-0x10],rdx
  4072c5:	lea    r9,[rbp-0x24]
  4072c9:	lea    r8,[rbp-0x20]
  4072cd:	lea    rcx,[rbp-0x28]
  4072d1:	mov    rdx,QWORD PTR [rbp-0x48]
  4072d5:	mov    rsi,QWORD PTR [rbp-0x10]
  4072d9:	mov    rdi,QWORD PTR [rbp-0x38]
  4072dd:	call   rax
  4072df:	mov    QWORD PTR [rbp-0x40],rax
  4072e3:	mov    rax,QWORD PTR [rbp-0x40]
  4072e7:	cmp    rax,QWORD PTR [rbp-0x48]
  4072eb:	jne    4072f6 <_start@@Base+0x2196>
  4072ed:	mov    rax,QWORD PTR [rbp-0x40]
  4072f1:	jmp    40738e <_start@@Base+0x222e>
  4072f6:	mov    rax,QWORD PTR [rbp-0x40]
  4072fa:	cmp    rax,QWORD PTR [rbp-0x10]
  4072fe:	jne    407311 <_start@@Base+0x21b1>
  407300:	add    QWORD PTR [rbp-0x18],0x8
  407305:	mov    rax,QWORD PTR [rbp-0x18]
  407309:	mov    rax,QWORD PTR [rax]
  40730c:	test   rax,rax
  40730f:	jne    4072b6 <_start@@Base+0x2156>
  407311:	mov    rax,QWORD PTR [rbp-0x10]
  407315:	cmp    rax,QWORD PTR [rbp-0x40]
  407319:	jne    407336 <_start@@Base+0x21d6>
  40731b:	mov    rdx,QWORD PTR [rbp-0x48]
  40731f:	mov    rsi,QWORD PTR [rbp-0x40]
  407323:	mov    rax,QWORD PTR [rbp-0x38]
  407327:	mov    ecx,0x17
  40732c:	mov    rdi,rax
  40732f:	call   425bce <flatcc_json_parser_set_error@@Base>
  407334:	jmp    40738e <_start@@Base+0x222e>
  407336:	mov    rdi,QWORD PTR [rbp-0x20]
  40733a:	mov    ecx,DWORD PTR [rbp-0x28]
  40733d:	lea    r8,[rbp-0x2a]
  407341:	mov    rdx,QWORD PTR [rbp-0x48]
  407345:	mov    rsi,QWORD PTR [rbp-0x40]
  407349:	mov    rax,QWORD PTR [rbp-0x38]
  40734d:	mov    r9,r8
  407350:	mov    r8,rdi
  407353:	mov    rdi,rax
  407356:	call   40604d <_start@@Base+0xeed>
  40735b:	cmp    rax,QWORD PTR [rbp-0x48]
  40735f:	jne    407367 <_start@@Base+0x2207>
  407361:	mov    rax,QWORD PTR [rbp-0x48]
  407365:	jmp    40738e <_start@@Base+0x222e>
  407367:	mov    rax,QWORD PTR [rbp-0x58]
  40736b:	movzx  eax,WORD PTR [rax]
  40736e:	mov    edx,eax
  407370:	movzx  eax,WORD PTR [rbp-0x2a]
  407374:	add    eax,edx
  407376:	mov    edx,eax
  407378:	mov    rax,QWORD PTR [rbp-0x58]
  40737c:	mov    WORD PTR [rax],dx
  40737f:	mov    eax,DWORD PTR [rbp-0x24]
  407382:	test   eax,eax
  407384:	jne    4072ae <_start@@Base+0x214e>
  40738a:	mov    rax,QWORD PTR [rbp-0x40]
  40738e:	mov    rdi,QWORD PTR [rbp-0x8]
  407392:	xor    rdi,QWORD PTR fs:0x28
  40739b:	je     4073a2 <_start@@Base+0x2242>
  40739d:	call   405070 <__stack_chk_fail@plt>
  4073a2:	leave  
  4073a3:	ret    
  4073a4:	push   rbp
  4073a5:	mov    rbp,rsp
  4073a8:	sub    rsp,0x60
  4073ac:	mov    QWORD PTR [rbp-0x38],rdi
  4073b0:	mov    QWORD PTR [rbp-0x40],rsi
  4073b4:	mov    QWORD PTR [rbp-0x48],rdx
  4073b8:	mov    QWORD PTR [rbp-0x50],rcx
  4073bc:	mov    QWORD PTR [rbp-0x58],r8
  4073c0:	mov    rax,QWORD PTR fs:0x28
  4073c9:	mov    QWORD PTR [rbp-0x8],rax
  4073cd:	xor    eax,eax
  4073cf:	mov    BYTE PTR [rbp-0x29],0x0
  4073d3:	mov    rax,QWORD PTR [rbp-0x58]
  4073d7:	mov    BYTE PTR [rax],0x0
  4073da:	mov    rdx,QWORD PTR [rbp-0x48]
  4073de:	mov    rcx,QWORD PTR [rbp-0x40]
  4073e2:	mov    rax,QWORD PTR [rbp-0x38]
  4073e6:	mov    rsi,rcx
  4073e9:	mov    rdi,rax
  4073ec:	call   405802 <_start@@Base+0x6a2>
  4073f1:	mov    QWORD PTR [rbp-0x40],rax
  4073f5:	mov    rax,QWORD PTR [rbp-0x40]
  4073f9:	cmp    rax,QWORD PTR [rbp-0x48]
  4073fd:	jne    407408 <_start@@Base+0x22a8>
  4073ff:	mov    rax,QWORD PTR [rbp-0x40]
  407403:	jmp    4074e7 <_start@@Base+0x2387>
  407408:	mov    rax,QWORD PTR [rbp-0x50]
  40740c:	mov    QWORD PTR [rbp-0x18],rax
  407410:	mov    rax,QWORD PTR [rbp-0x18]
  407414:	mov    rax,QWORD PTR [rax]
  407417:	mov    rdx,QWORD PTR [rbp-0x40]
  40741b:	mov    QWORD PTR [rbp-0x10],rdx
  40741f:	lea    r9,[rbp-0x24]
  407423:	lea    r8,[rbp-0x20]
  407427:	lea    rcx,[rbp-0x28]
  40742b:	mov    rdx,QWORD PTR [rbp-0x48]
  40742f:	mov    rsi,QWORD PTR [rbp-0x10]
  407433:	mov    rdi,QWORD PTR [rbp-0x38]
  407437:	call   rax
  407439:	mov    QWORD PTR [rbp-0x40],rax
  40743d:	mov    rax,QWORD PTR [rbp-0x40]
  407441:	cmp    rax,QWORD PTR [rbp-0x48]
  407445:	jne    407450 <_start@@Base+0x22f0>
  407447:	mov    rax,QWORD PTR [rbp-0x40]
  40744b:	jmp    4074e7 <_start@@Base+0x2387>
  407450:	mov    rax,QWORD PTR [rbp-0x40]
  407454:	cmp    rax,QWORD PTR [rbp-0x10]
  407458:	jne    40746b <_start@@Base+0x230b>
  40745a:	add    QWORD PTR [rbp-0x18],0x8
  40745f:	mov    rax,QWORD PTR [rbp-0x18]
  407463:	mov    rax,QWORD PTR [rax]
  407466:	test   rax,rax
  407469:	jne    407410 <_start@@Base+0x22b0>
  40746b:	mov    rax,QWORD PTR [rbp-0x10]
  40746f:	cmp    rax,QWORD PTR [rbp-0x40]
  407473:	jne    407490 <_start@@Base+0x2330>
  407475:	mov    rdx,QWORD PTR [rbp-0x48]
  407479:	mov    rsi,QWORD PTR [rbp-0x40]
  40747d:	mov    rax,QWORD PTR [rbp-0x38]
  407481:	mov    ecx,0x17
  407486:	mov    rdi,rax
  407489:	call   425bce <flatcc_json_parser_set_error@@Base>
  40748e:	jmp    4074e7 <_start@@Base+0x2387>
  407490:	mov    rdi,QWORD PTR [rbp-0x20]
  407494:	mov    ecx,DWORD PTR [rbp-0x28]
  407497:	lea    r8,[rbp-0x29]
  40749b:	mov    rdx,QWORD PTR [rbp-0x48]
  40749f:	mov    rsi,QWORD PTR [rbp-0x40]
  4074a3:	mov    rax,QWORD PTR [rbp-0x38]
  4074a7:	mov    r9,r8
  4074aa:	mov    r8,rdi
  4074ad:	mov    rdi,rax
  4074b0:	call   4060e0 <_start@@Base+0xf80>
  4074b5:	cmp    rax,QWORD PTR [rbp-0x48]
  4074b9:	jne    4074c1 <_start@@Base+0x2361>
  4074bb:	mov    rax,QWORD PTR [rbp-0x48]
  4074bf:	jmp    4074e7 <_start@@Base+0x2387>
  4074c1:	mov    rax,QWORD PTR [rbp-0x58]
  4074c5:	movzx  eax,BYTE PTR [rax]
  4074c8:	mov    edx,eax
  4074ca:	movzx  eax,BYTE PTR [rbp-0x29]
  4074ce:	add    eax,edx
  4074d0:	mov    edx,eax
  4074d2:	mov    rax,QWORD PTR [rbp-0x58]
  4074d6:	mov    BYTE PTR [rax],dl
  4074d8:	mov    eax,DWORD PTR [rbp-0x24]
  4074db:	test   eax,eax
  4074dd:	jne    407408 <_start@@Base+0x22a8>
  4074e3:	mov    rax,QWORD PTR [rbp-0x40]
  4074e7:	mov    rdi,QWORD PTR [rbp-0x8]
  4074eb:	xor    rdi,QWORD PTR fs:0x28
  4074f4:	je     4074fb <_start@@Base+0x239b>
  4074f6:	call   405070 <__stack_chk_fail@plt>
  4074fb:	leave  
  4074fc:	ret    
  4074fd:	push   rbp
  4074fe:	mov    rbp,rsp
  407501:	sub    rsp,0x60
  407505:	mov    QWORD PTR [rbp-0x38],rdi
  407509:	mov    QWORD PTR [rbp-0x40],rsi
  40750d:	mov    QWORD PTR [rbp-0x48],rdx
  407511:	mov    QWORD PTR [rbp-0x50],rcx
  407515:	mov    QWORD PTR [rbp-0x58],r8
  407519:	mov    rax,QWORD PTR fs:0x28
  407522:	mov    QWORD PTR [rbp-0x8],rax
  407526:	xor    eax,eax
  407528:	mov    BYTE PTR [rbp-0x29],0x0
  40752c:	mov    rax,QWORD PTR [rbp-0x58]
  407530:	mov    BYTE PTR [rax],0x0
  407533:	mov    rdx,QWORD PTR [rbp-0x48]
  407537:	mov    rcx,QWORD PTR [rbp-0x40]
  40753b:	mov    rax,QWORD PTR [rbp-0x38]
  40753f:	mov    rsi,rcx
  407542:	mov    rdi,rax
  407545:	call   405802 <_start@@Base+0x6a2>
  40754a:	mov    QWORD PTR [rbp-0x40],rax
  40754e:	mov    rax,QWORD PTR [rbp-0x40]
  407552:	cmp    rax,QWORD PTR [rbp-0x48]
  407556:	jne    407561 <_start@@Base+0x2401>
  407558:	mov    rax,QWORD PTR [rbp-0x40]
  40755c:	jmp    40763c <_start@@Base+0x24dc>
  407561:	mov    rax,QWORD PTR [rbp-0x50]
  407565:	mov    QWORD PTR [rbp-0x18],rax
  407569:	mov    rax,QWORD PTR [rbp-0x18]
  40756d:	mov    rax,QWORD PTR [rax]
  407570:	mov    rdx,QWORD PTR [rbp-0x40]
  407574:	mov    QWORD PTR [rbp-0x10],rdx
  407578:	lea    r9,[rbp-0x24]
  40757c:	lea    r8,[rbp-0x20]
  407580:	lea    rcx,[rbp-0x28]
  407584:	mov    rdx,QWORD PTR [rbp-0x48]
  407588:	mov    rsi,QWORD PTR [rbp-0x10]
  40758c:	mov    rdi,QWORD PTR [rbp-0x38]
  407590:	call   rax
  407592:	mov    QWORD PTR [rbp-0x40],rax
  407596:	mov    rax,QWORD PTR [rbp-0x40]
  40759a:	cmp    rax,QWORD PTR [rbp-0x48]
  40759e:	jne    4075a9 <_start@@Base+0x2449>
  4075a0:	mov    rax,QWORD PTR [rbp-0x40]
  4075a4:	jmp    40763c <_start@@Base+0x24dc>
  4075a9:	mov    rax,QWORD PTR [rbp-0x40]
  4075ad:	cmp    rax,QWORD PTR [rbp-0x10]
  4075b1:	jne    4075c4 <_start@@Base+0x2464>
  4075b3:	add    QWORD PTR [rbp-0x18],0x8
  4075b8:	mov    rax,QWORD PTR [rbp-0x18]
  4075bc:	mov    rax,QWORD PTR [rax]
  4075bf:	test   rax,rax
  4075c2:	jne    407569 <_start@@Base+0x2409>
  4075c4:	mov    rax,QWORD PTR [rbp-0x10]
  4075c8:	cmp    rax,QWORD PTR [rbp-0x40]
  4075cc:	jne    4075e9 <_start@@Base+0x2489>
  4075ce:	mov    rdx,QWORD PTR [rbp-0x48]
  4075d2:	mov    rsi,QWORD PTR [rbp-0x40]
  4075d6:	mov    rax,QWORD PTR [rbp-0x38]
  4075da:	mov    ecx,0x17
  4075df:	mov    rdi,rax
  4075e2:	call   425bce <flatcc_json_parser_set_error@@Base>
  4075e7:	jmp    40763c <_start@@Base+0x24dc>
  4075e9:	mov    rdi,QWORD PTR [rbp-0x20]
  4075ed:	mov    ecx,DWORD PTR [rbp-0x28]
  4075f0:	lea    r8,[rbp-0x29]
  4075f4:	mov    rdx,QWORD PTR [rbp-0x48]
  4075f8:	mov    rsi,QWORD PTR [rbp-0x40]
  4075fc:	mov    rax,QWORD PTR [rbp-0x38]
  407600:	mov    r9,r8
  407603:	mov    r8,rdi
  407606:	mov    rdi,rax
  407609:	call   405d66 <_start@@Base+0xc06>
  40760e:	cmp    rax,QWORD PTR [rbp-0x48]
  407612:	jne    40761a <_start@@Base+0x24ba>
  407614:	mov    rax,QWORD PTR [rbp-0x48]
  407618:	jmp    40763c <_start@@Base+0x24dc>
  40761a:	mov    rax,QWORD PTR [rbp-0x58]
  40761e:	movzx  edx,BYTE PTR [rax]
  407621:	movzx  eax,BYTE PTR [rbp-0x29]
  407625:	add    edx,eax
  407627:	mov    rax,QWORD PTR [rbp-0x58]
  40762b:	mov    BYTE PTR [rax],dl
  40762d:	mov    eax,DWORD PTR [rbp-0x24]
  407630:	test   eax,eax
  407632:	jne    407561 <_start@@Base+0x2401>
  407638:	mov    rax,QWORD PTR [rbp-0x40]
  40763c:	mov    rdi,QWORD PTR [rbp-0x8]
  407640:	xor    rdi,QWORD PTR fs:0x28
  407649:	je     407650 <_start@@Base+0x24f0>
  40764b:	call   405070 <__stack_chk_fail@plt>
  407650:	leave  
  407651:	ret    
  407652:	push   rbp
  407653:	mov    rbp,rsp
  407656:	sub    rsp,0x60
  40765a:	mov    QWORD PTR [rbp-0x38],rdi
  40765e:	mov    QWORD PTR [rbp-0x40],rsi
  407662:	mov    QWORD PTR [rbp-0x48],rdx
  407666:	mov    QWORD PTR [rbp-0x50],rcx
  40766a:	mov    QWORD PTR [rbp-0x58],r8
  40766e:	mov    rax,QWORD PTR fs:0x28
  407677:	mov    QWORD PTR [rbp-0x8],rax
  40767b:	xor    eax,eax
  40767d:	vxorps xmm0,xmm0,xmm0
  407681:	vmovss DWORD PTR [rbp-0x2c],xmm0
  407686:	mov    rax,QWORD PTR [rbp-0x58]
  40768a:	vxorps xmm0,xmm0,xmm0
  40768e:	vmovss DWORD PTR [rax],xmm0
  407692:	mov    rdx,QWORD PTR [rbp-0x48]
  407696:	mov    rcx,QWORD PTR [rbp-0x40]
  40769a:	mov    rax,QWORD PTR [rbp-0x38]
  40769e:	mov    rsi,rcx
  4076a1:	mov    rdi,rax
  4076a4:	call   405802 <_start@@Base+0x6a2>
  4076a9:	mov    QWORD PTR [rbp-0x40],rax
  4076ad:	mov    rax,QWORD PTR [rbp-0x40]
  4076b1:	cmp    rax,QWORD PTR [rbp-0x48]
  4076b5:	jne    4076c0 <_start@@Base+0x2560>
  4076b7:	mov    rax,QWORD PTR [rbp-0x40]
  4076bb:	jmp    4077a1 <_start@@Base+0x2641>
  4076c0:	mov    rax,QWORD PTR [rbp-0x50]
  4076c4:	mov    QWORD PTR [rbp-0x18],rax
  4076c8:	mov    rax,QWORD PTR [rbp-0x18]
  4076cc:	mov    rax,QWORD PTR [rax]
  4076cf:	mov    rdx,QWORD PTR [rbp-0x40]
  4076d3:	mov    QWORD PTR [rbp-0x10],rdx
  4076d7:	lea    r9,[rbp-0x24]
  4076db:	lea    r8,[rbp-0x20]
  4076df:	lea    rcx,[rbp-0x28]
  4076e3:	mov    rdx,QWORD PTR [rbp-0x48]
  4076e7:	mov    rsi,QWORD PTR [rbp-0x10]
  4076eb:	mov    rdi,QWORD PTR [rbp-0x38]
  4076ef:	call   rax
  4076f1:	mov    QWORD PTR [rbp-0x40],rax
  4076f5:	mov    rax,QWORD PTR [rbp-0x40]
  4076f9:	cmp    rax,QWORD PTR [rbp-0x48]
  4076fd:	jne    407708 <_start@@Base+0x25a8>
  4076ff:	mov    rax,QWORD PTR [rbp-0x40]
  407703:	jmp    4077a1 <_start@@Base+0x2641>
  407708:	mov    rax,QWORD PTR [rbp-0x40]
  40770c:	cmp    rax,QWORD PTR [rbp-0x10]
  407710:	jne    407723 <_start@@Base+0x25c3>
  407712:	add    QWORD PTR [rbp-0x18],0x8
  407717:	mov    rax,QWORD PTR [rbp-0x18]
  40771b:	mov    rax,QWORD PTR [rax]
  40771e:	test   rax,rax
  407721:	jne    4076c8 <_start@@Base+0x2568>
  407723:	mov    rax,QWORD PTR [rbp-0x10]
  407727:	cmp    rax,QWORD PTR [rbp-0x40]
  40772b:	jne    407748 <_start@@Base+0x25e8>
  40772d:	mov    rdx,QWORD PTR [rbp-0x48]
  407731:	mov    rsi,QWORD PTR [rbp-0x40]
  407735:	mov    rax,QWORD PTR [rbp-0x38]
  407739:	mov    ecx,0x17
  40773e:	mov    rdi,rax
  407741:	call   425bce <flatcc_json_parser_set_error@@Base>
  407746:	jmp    4077a1 <_start@@Base+0x2641>
  407748:	mov    rdi,QWORD PTR [rbp-0x20]
  40774c:	mov    ecx,DWORD PTR [rbp-0x28]
  40774f:	lea    r8,[rbp-0x2c]
  407753:	mov    rdx,QWORD PTR [rbp-0x48]
  407757:	mov    rsi,QWORD PTR [rbp-0x40]
  40775b:	mov    rax,QWORD PTR [rbp-0x38]
  40775f:	mov    r9,r8
  407762:	mov    r8,rdi
  407765:	mov    rdi,rax
  407768:	call   40616e <_start@@Base+0x100e>
  40776d:	cmp    rax,QWORD PTR [rbp-0x48]
  407771:	jne    407779 <_start@@Base+0x2619>
  407773:	mov    rax,QWORD PTR [rbp-0x48]
  407777:	jmp    4077a1 <_start@@Base+0x2641>
  407779:	mov    rax,QWORD PTR [rbp-0x58]
  40777d:	vmovss xmm1,DWORD PTR [rax]
  407781:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  407786:	vaddss xmm0,xmm1,xmm0
  40778a:	mov    rax,QWORD PTR [rbp-0x58]
  40778e:	vmovss DWORD PTR [rax],xmm0
  407792:	mov    eax,DWORD PTR [rbp-0x24]
  407795:	test   eax,eax
  407797:	jne    4076c0 <_start@@Base+0x2560>
  40779d:	mov    rax,QWORD PTR [rbp-0x40]
  4077a1:	mov    rdi,QWORD PTR [rbp-0x8]
  4077a5:	xor    rdi,QWORD PTR fs:0x28
  4077ae:	je     4077b5 <_start@@Base+0x2655>
  4077b0:	call   405070 <__stack_chk_fail@plt>
  4077b5:	leave  
  4077b6:	ret    
  4077b7:	push   rbp
  4077b8:	mov    rbp,rsp
  4077bb:	sub    rsp,0x60
  4077bf:	mov    QWORD PTR [rbp-0x38],rdi
  4077c3:	mov    QWORD PTR [rbp-0x40],rsi
  4077c7:	mov    QWORD PTR [rbp-0x48],rdx
  4077cb:	mov    QWORD PTR [rbp-0x50],rcx
  4077cf:	mov    QWORD PTR [rbp-0x58],r8
  4077d3:	mov    rax,QWORD PTR fs:0x28
  4077dc:	mov    QWORD PTR [rbp-0x8],rax
  4077e0:	xor    eax,eax
  4077e2:	vxorpd xmm0,xmm0,xmm0
  4077e6:	vmovsd QWORD PTR [rbp-0x28],xmm0
  4077eb:	mov    rax,QWORD PTR [rbp-0x58]
  4077ef:	vxorpd xmm0,xmm0,xmm0
  4077f3:	vmovsd QWORD PTR [rax],xmm0
  4077f7:	mov    rdx,QWORD PTR [rbp-0x48]
  4077fb:	mov    rcx,QWORD PTR [rbp-0x40]
  4077ff:	mov    rax,QWORD PTR [rbp-0x38]
  407803:	mov    rsi,rcx
  407806:	mov    rdi,rax
  407809:	call   405802 <_start@@Base+0x6a2>
  40780e:	mov    QWORD PTR [rbp-0x40],rax
  407812:	mov    rax,QWORD PTR [rbp-0x40]
  407816:	cmp    rax,QWORD PTR [rbp-0x48]
  40781a:	jne    407825 <_start@@Base+0x26c5>
  40781c:	mov    rax,QWORD PTR [rbp-0x40]
  407820:	jmp    407906 <_start@@Base+0x27a6>
  407825:	mov    rax,QWORD PTR [rbp-0x50]
  407829:	mov    QWORD PTR [rbp-0x18],rax
  40782d:	mov    rax,QWORD PTR [rbp-0x18]
  407831:	mov    rax,QWORD PTR [rax]
  407834:	mov    rdx,QWORD PTR [rbp-0x40]
  407838:	mov    QWORD PTR [rbp-0x10],rdx
  40783c:	lea    r9,[rbp-0x2c]
  407840:	lea    r8,[rbp-0x20]
  407844:	lea    rcx,[rbp-0x30]
  407848:	mov    rdx,QWORD PTR [rbp-0x48]
  40784c:	mov    rsi,QWORD PTR [rbp-0x10]
  407850:	mov    rdi,QWORD PTR [rbp-0x38]
  407854:	call   rax
  407856:	mov    QWORD PTR [rbp-0x40],rax
  40785a:	mov    rax,QWORD PTR [rbp-0x40]
  40785e:	cmp    rax,QWORD PTR [rbp-0x48]
  407862:	jne    40786d <_start@@Base+0x270d>
  407864:	mov    rax,QWORD PTR [rbp-0x40]
  407868:	jmp    407906 <_start@@Base+0x27a6>
  40786d:	mov    rax,QWORD PTR [rbp-0x40]
  407871:	cmp    rax,QWORD PTR [rbp-0x10]
  407875:	jne    407888 <_start@@Base+0x2728>
  407877:	add    QWORD PTR [rbp-0x18],0x8
  40787c:	mov    rax,QWORD PTR [rbp-0x18]
  407880:	mov    rax,QWORD PTR [rax]
  407883:	test   rax,rax
  407886:	jne    40782d <_start@@Base+0x26cd>
  407888:	mov    rax,QWORD PTR [rbp-0x10]
  40788c:	cmp    rax,QWORD PTR [rbp-0x40]
  407890:	jne    4078ad <_start@@Base+0x274d>
  407892:	mov    rdx,QWORD PTR [rbp-0x48]
  407896:	mov    rsi,QWORD PTR [rbp-0x40]
  40789a:	mov    rax,QWORD PTR [rbp-0x38]
  40789e:	mov    ecx,0x17
  4078a3:	mov    rdi,rax
  4078a6:	call   425bce <flatcc_json_parser_set_error@@Base>
  4078ab:	jmp    407906 <_start@@Base+0x27a6>
  4078ad:	mov    rdi,QWORD PTR [rbp-0x20]
  4078b1:	mov    ecx,DWORD PTR [rbp-0x30]
  4078b4:	lea    r8,[rbp-0x28]
  4078b8:	mov    rdx,QWORD PTR [rbp-0x48]
  4078bc:	mov    rsi,QWORD PTR [rbp-0x40]
  4078c0:	mov    rax,QWORD PTR [rbp-0x38]
  4078c4:	mov    r9,r8
  4078c7:	mov    r8,rdi
  4078ca:	mov    rdi,rax
  4078cd:	call   406205 <_start@@Base+0x10a5>
  4078d2:	cmp    rax,QWORD PTR [rbp-0x48]
  4078d6:	jne    4078de <_start@@Base+0x277e>
  4078d8:	mov    rax,QWORD PTR [rbp-0x48]
  4078dc:	jmp    407906 <_start@@Base+0x27a6>
  4078de:	mov    rax,QWORD PTR [rbp-0x58]
  4078e2:	vmovsd xmm1,QWORD PTR [rax]
  4078e6:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  4078eb:	vaddsd xmm0,xmm1,xmm0
  4078ef:	mov    rax,QWORD PTR [rbp-0x58]
  4078f3:	vmovsd QWORD PTR [rax],xmm0
  4078f7:	mov    eax,DWORD PTR [rbp-0x2c]
  4078fa:	test   eax,eax
  4078fc:	jne    407825 <_start@@Base+0x26c5>
  407902:	mov    rax,QWORD PTR [rbp-0x40]
  407906:	mov    rdi,QWORD PTR [rbp-0x8]
  40790a:	xor    rdi,QWORD PTR fs:0x28
  407913:	je     40791a <_start@@Base+0x27ba>
  407915:	call   405070 <__stack_chk_fail@plt>
  40791a:	leave  
  40791b:	ret    
  40791c:	push   rbp
  40791d:	mov    rbp,rsp
  407920:	sub    rsp,0x50
  407924:	mov    QWORD PTR [rbp-0x28],rdi
  407928:	mov    QWORD PTR [rbp-0x30],rsi
  40792c:	mov    QWORD PTR [rbp-0x38],rdx
  407930:	mov    QWORD PTR [rbp-0x40],rcx
  407934:	mov    QWORD PTR [rbp-0x48],r8
  407938:	mov    QWORD PTR [rbp-0x50],r9
  40793c:	mov    rax,QWORD PTR [rbp-0x30]
  407940:	mov    QWORD PTR [rbp-0x18],rax
  407944:	mov    rdx,QWORD PTR [rbp-0x38]
  407948:	mov    rax,QWORD PTR [rbp-0x30]
  40794c:	mov    rsi,rdx
  40794f:	mov    rdi,rax
  407952:	call   405756 <_start@@Base+0x5f6>
  407957:	mov    QWORD PTR [rbp-0x10],rax
  40795b:	movabs rax,0xffffff0000000000
  407965:	and    rax,QWORD PTR [rbp-0x10]
  407969:	mov    rdx,rax
  40796c:	movabs rax,0x466f6f0000000000
  407976:	cmp    rdx,rax
  407979:	jne    4079cb <_start@@Base+0x286b>
  40797b:	mov    rax,QWORD PTR [rbp-0x30]
  40797f:	mov    QWORD PTR [rbp-0x8],rax
  407983:	mov    rcx,QWORD PTR [rbp-0x50]
  407987:	mov    rdx,QWORD PTR [rbp-0x38]
  40798b:	mov    rsi,QWORD PTR [rbp-0x8]
  40798f:	mov    rax,QWORD PTR [rbp-0x28]
  407993:	mov    r8,rcx
  407996:	mov    ecx,0x3
  40799b:	mov    rdi,rax
  40799e:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  4079a3:	mov    QWORD PTR [rbp-0x30],rax
  4079a7:	mov    rax,QWORD PTR [rbp-0x30]
  4079ab:	cmp    rax,QWORD PTR [rbp-0x8]
  4079af:	je     4079ce <_start@@Base+0x286e>
  4079b1:	mov    rax,QWORD PTR [rbp-0x48]
  4079b5:	mov    QWORD PTR [rax],0x11
  4079bc:	mov    rax,QWORD PTR [rbp-0x40]
  4079c0:	mov    DWORD PTR [rax],0x0
  4079c6:	jmp    407a7e <_start@@Base+0x291e>
  4079cb:	nop
  4079cc:	jmp    4079cf <_start@@Base+0x286f>
  4079ce:	nop
  4079cf:	movabs rax,0x496e636c75646556
  4079d9:	cmp    QWORD PTR [rbp-0x10],rax
  4079dd:	jne    407a78 <_start@@Base+0x2918>
  4079e3:	add    QWORD PTR [rbp-0x30],0x8
  4079e8:	mov    rdx,QWORD PTR [rbp-0x38]
  4079ec:	mov    rax,QWORD PTR [rbp-0x30]
  4079f0:	mov    rsi,rdx
  4079f3:	mov    rdi,rax
  4079f6:	call   405756 <_start@@Base+0x5f6>
  4079fb:	mov    QWORD PTR [rbp-0x10],rax
  4079ff:	movabs rax,0xffff000000000000
  407a09:	and    rax,QWORD PTR [rbp-0x10]
  407a0d:	mov    rdx,rax
  407a10:	movabs rax,0x616c000000000000
  407a1a:	cmp    rdx,rax
  407a1d:	jne    407a72 <_start@@Base+0x2912>
  407a1f:	mov    rax,QWORD PTR [rbp-0x30]
  407a23:	mov    QWORD PTR [rbp-0x8],rax
  407a27:	mov    rcx,QWORD PTR [rbp-0x50]
  407a2b:	mov    rdx,QWORD PTR [rbp-0x38]
  407a2f:	mov    rsi,QWORD PTR [rbp-0x8]
  407a33:	mov    rax,QWORD PTR [rbp-0x28]
  407a37:	mov    r8,rcx
  407a3a:	mov    ecx,0x2
  407a3f:	mov    rdi,rax
  407a42:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  407a47:	mov    QWORD PTR [rbp-0x30],rax
  407a4b:	mov    rax,QWORD PTR [rbp-0x30]
  407a4f:	cmp    rax,QWORD PTR [rbp-0x8]
  407a53:	je     407a6c <_start@@Base+0x290c>
  407a55:	mov    rax,QWORD PTR [rbp-0x48]
  407a59:	mov    QWORD PTR [rax],0x0
  407a60:	mov    rax,QWORD PTR [rbp-0x40]
  407a64:	mov    DWORD PTR [rax],0x0
  407a6a:	jmp    407a7e <_start@@Base+0x291e>
  407a6c:	mov    rax,QWORD PTR [rbp-0x18]
  407a70:	jmp    407a82 <_start@@Base+0x2922>
  407a72:	mov    rax,QWORD PTR [rbp-0x18]
  407a76:	jmp    407a82 <_start@@Base+0x2922>
  407a78:	mov    rax,QWORD PTR [rbp-0x18]
  407a7c:	jmp    407a82 <_start@@Base+0x2922>
  407a7e:	mov    rax,QWORD PTR [rbp-0x30]
  407a82:	leave  
  407a83:	ret    
  407a84:	push   rbp
  407a85:	mov    rbp,rsp
  407a88:	sub    rsp,0x30
  407a8c:	mov    QWORD PTR [rbp-0x18],rdi
  407a90:	mov    QWORD PTR [rbp-0x20],rsi
  407a94:	mov    QWORD PTR [rbp-0x28],rdx
  407a98:	mov    QWORD PTR [rbp-0x30],rcx
  407a9c:	mov    rax,QWORD PTR fs:0x28
  407aa5:	mov    QWORD PTR [rbp-0x8],rax
  407aa9:	xor    eax,eax
  407aab:	lea    rcx,[rbp-0xc]
  407aaf:	mov    rdx,QWORD PTR [rbp-0x28]
  407ab3:	mov    rsi,QWORD PTR [rbp-0x20]
  407ab7:	mov    rax,QWORD PTR [rbp-0x18]
  407abb:	mov    rdi,rax
  407abe:	call   405852 <_start@@Base+0x6f2>
  407ac3:	mov    QWORD PTR [rbp-0x20],rax
  407ac7:	jmp    407b00 <_start@@Base+0x29a0>
  407ac9:	mov    rdx,QWORD PTR [rbp-0x28]
  407acd:	mov    rcx,QWORD PTR [rbp-0x20]
  407ad1:	mov    rax,QWORD PTR [rbp-0x18]
  407ad5:	mov    rsi,rcx
  407ad8:	mov    rdi,rax
  407adb:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  407ae0:	mov    QWORD PTR [rbp-0x20],rax
  407ae4:	lea    rcx,[rbp-0xc]
  407ae8:	mov    rdx,QWORD PTR [rbp-0x28]
  407aec:	mov    rsi,QWORD PTR [rbp-0x20]
  407af0:	mov    rax,QWORD PTR [rbp-0x18]
  407af4:	mov    rdi,rax
  407af7:	call   40590f <_start@@Base+0x7af>
  407afc:	mov    QWORD PTR [rbp-0x20],rax
  407b00:	mov    eax,DWORD PTR [rbp-0xc]
  407b03:	test   eax,eax
  407b05:	jne    407ac9 <_start@@Base+0x2969>
  407b07:	mov    rax,QWORD PTR [rbp-0x20]
  407b0b:	mov    rdi,QWORD PTR [rbp-0x8]
  407b0f:	xor    rdi,QWORD PTR fs:0x28
  407b18:	je     407b1f <_start@@Base+0x29bf>
  407b1a:	call   405070 <__stack_chk_fail@plt>
  407b1f:	leave  
  407b20:	ret    
  407b21:	push   rbp
  407b22:	mov    rbp,rsp
  407b25:	sub    rsp,0x30
  407b29:	mov    QWORD PTR [rbp-0x18],rdi
  407b2d:	mov    QWORD PTR [rbp-0x20],rsi
  407b31:	mov    QWORD PTR [rbp-0x28],rdx
  407b35:	mov    QWORD PTR [rbp-0x30],rcx
  407b39:	mov    rax,QWORD PTR [rbp-0x30]
  407b3d:	mov    DWORD PTR [rax],0x0
  407b43:	mov    rax,QWORD PTR [rbp-0x18]
  407b47:	mov    rax,QWORD PTR [rax]
  407b4a:	mov    edx,0x1
  407b4f:	mov    esi,0x0
  407b54:	mov    rdi,rax
  407b57:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  407b5c:	mov    QWORD PTR [rbp-0x8],rax
  407b60:	cmp    QWORD PTR [rbp-0x8],0x0
  407b65:	je     407bb4 <_start@@Base+0x2a54>
  407b67:	mov    rcx,QWORD PTR [rbp-0x8]
  407b6b:	mov    rdx,QWORD PTR [rbp-0x28]
  407b6f:	mov    rsi,QWORD PTR [rbp-0x20]
  407b73:	mov    rax,QWORD PTR [rbp-0x18]
  407b77:	mov    rdi,rax
  407b7a:	call   407a84 <_start@@Base+0x2924>
  407b7f:	mov    QWORD PTR [rbp-0x20],rax
  407b83:	mov    rax,QWORD PTR [rbp-0x20]
  407b87:	cmp    rax,QWORD PTR [rbp-0x28]
  407b8b:	je     407bb5 <_start@@Base+0x2a55>
  407b8d:	mov    rax,QWORD PTR [rbp-0x18]
  407b91:	mov    rax,QWORD PTR [rax]
  407b94:	mov    rdi,rax
  407b97:	call   41c263 <flatcc_builder_end_struct@@Base>
  407b9c:	mov    edx,eax
  407b9e:	mov    rax,QWORD PTR [rbp-0x30]
  407ba2:	mov    DWORD PTR [rax],edx
  407ba4:	mov    rax,QWORD PTR [rbp-0x30]
  407ba8:	mov    eax,DWORD PTR [rax]
  407baa:	test   eax,eax
  407bac:	je     407bb5 <_start@@Base+0x2a55>
  407bae:	mov    rax,QWORD PTR [rbp-0x20]
  407bb2:	jmp    407bce <_start@@Base+0x2a6e>
  407bb4:	nop
  407bb5:	mov    rdx,QWORD PTR [rbp-0x28]
  407bb9:	mov    rsi,QWORD PTR [rbp-0x20]
  407bbd:	mov    rax,QWORD PTR [rbp-0x18]
  407bc1:	mov    ecx,0x21
  407bc6:	mov    rdi,rax
  407bc9:	call   425bce <flatcc_json_parser_set_error@@Base>
  407bce:	leave  
  407bcf:	ret    
  407bd0:	push   rbp
  407bd1:	mov    rbp,rsp
  407bd4:	mov    QWORD PTR [rbp-0x8],rdi
  407bd8:	mov    QWORD PTR [rbp-0x10],rsi
  407bdc:	mov    QWORD PTR [rbp-0x18],rdx
  407be0:	mov    QWORD PTR [rbp-0x20],rcx
  407be4:	mov    QWORD PTR [rbp-0x28],r8
  407be8:	mov    QWORD PTR [rbp-0x30],r9
  407bec:	mov    rax,QWORD PTR [rbp-0x10]
  407bf0:	pop    rbp
  407bf1:	ret    
  407bf2:	push   rbp
  407bf3:	mov    rbp,rsp
  407bf6:	mov    QWORD PTR [rbp-0x8],rdi
  407bfa:	mov    QWORD PTR [rbp-0x10],rsi
  407bfe:	mov    QWORD PTR [rbp-0x18],rdx
  407c02:	mov    QWORD PTR [rbp-0x20],rcx
  407c06:	mov    QWORD PTR [rbp-0x28],r8
  407c0a:	mov    QWORD PTR [rbp-0x30],r9
  407c0e:	mov    rax,QWORD PTR [rbp-0x10]
  407c12:	pop    rbp
  407c13:	ret    
  407c14:	push   rbp
  407c15:	mov    rbp,rsp
  407c18:	mov    QWORD PTR [rbp-0x8],rdi
  407c1c:	mov    QWORD PTR [rbp-0x10],rsi
  407c20:	mov    QWORD PTR [rbp-0x18],rdx
  407c24:	mov    QWORD PTR [rbp-0x20],rcx
  407c28:	mov    QWORD PTR [rbp-0x28],r8
  407c2c:	mov    QWORD PTR [rbp-0x30],r9
  407c30:	mov    rax,QWORD PTR [rbp-0x10]
  407c34:	pop    rbp
  407c35:	ret    
  407c36:	push   rbp
  407c37:	mov    rbp,rsp
  407c3a:	mov    QWORD PTR [rbp-0x8],rdi
  407c3e:	mov    QWORD PTR [rbp-0x10],rsi
  407c42:	mov    QWORD PTR [rbp-0x18],rdx
  407c46:	mov    QWORD PTR [rbp-0x20],rcx
  407c4a:	mov    QWORD PTR [rbp-0x28],r8
  407c4e:	mov    QWORD PTR [rbp-0x30],r9
  407c52:	mov    rax,QWORD PTR [rbp-0x10]
  407c56:	pop    rbp
  407c57:	ret    
  407c58:	push   rbp
  407c59:	mov    rbp,rsp
  407c5c:	mov    QWORD PTR [rbp-0x8],rdi
  407c60:	mov    QWORD PTR [rbp-0x10],rsi
  407c64:	mov    QWORD PTR [rbp-0x18],rdx
  407c68:	mov    QWORD PTR [rbp-0x20],rcx
  407c6c:	mov    QWORD PTR [rbp-0x28],r8
  407c70:	mov    QWORD PTR [rbp-0x30],r9
  407c74:	mov    rax,QWORD PTR [rbp-0x10]
  407c78:	pop    rbp
  407c79:	ret    
  407c7a:	push   rbp
  407c7b:	mov    rbp,rsp
  407c7e:	sub    rsp,0x50
  407c82:	mov    QWORD PTR [rbp-0x28],rdi
  407c86:	mov    QWORD PTR [rbp-0x30],rsi
  407c8a:	mov    QWORD PTR [rbp-0x38],rdx
  407c8e:	mov    QWORD PTR [rbp-0x40],rcx
  407c92:	mov    QWORD PTR [rbp-0x48],r8
  407c96:	mov    QWORD PTR [rbp-0x50],r9
  407c9a:	mov    rax,QWORD PTR [rbp-0x30]
  407c9e:	mov    QWORD PTR [rbp-0x18],rax
  407ca2:	mov    rdx,QWORD PTR [rbp-0x38]
  407ca6:	mov    rax,QWORD PTR [rbp-0x30]
  407caa:	mov    rsi,rdx
  407cad:	mov    rdi,rax
  407cb0:	call   405756 <_start@@Base+0x5f6>
  407cb5:	mov    QWORD PTR [rbp-0x10],rax
  407cb9:	movabs rax,0x46726f6d496e636c
  407cc3:	cmp    QWORD PTR [rbp-0x10],rax
  407cc7:	jne    407d74 <_start@@Base+0x2c14>
  407ccd:	add    QWORD PTR [rbp-0x30],0x8
  407cd2:	mov    rdx,QWORD PTR [rbp-0x38]
  407cd6:	mov    rax,QWORD PTR [rbp-0x30]
  407cda:	mov    rsi,rdx
  407cdd:	mov    rdi,rax
  407ce0:	call   405756 <_start@@Base+0x5f6>
  407ce5:	mov    QWORD PTR [rbp-0x10],rax
  407ce9:	movabs rax,0xffffff0000000000
  407cf3:	and    rax,QWORD PTR [rbp-0x10]
  407cf7:	mov    rdx,rax
  407cfa:	movabs rax,0x7564650000000000
  407d04:	cmp    rdx,rax
  407d07:	jne    407d6e <_start@@Base+0x2c0e>
  407d09:	mov    rax,QWORD PTR [rbp-0x30]
  407d0d:	mov    QWORD PTR [rbp-0x8],rax
  407d11:	mov    rdx,QWORD PTR [rbp-0x38]
  407d15:	mov    rsi,QWORD PTR [rbp-0x8]
  407d19:	mov    rax,QWORD PTR [rbp-0x28]
  407d1d:	mov    ecx,0x3
  407d22:	mov    rdi,rax
  407d25:	call   4057a0 <_start@@Base+0x640>
  407d2a:	mov    QWORD PTR [rbp-0x30],rax
  407d2e:	mov    rax,QWORD PTR [rbp-0x30]
  407d32:	cmp    rax,QWORD PTR [rbp-0x8]
  407d36:	je     407d68 <_start@@Base+0x2c08>
  407d38:	mov    r8,QWORD PTR [rbp-0x50]
  407d3c:	mov    rdi,QWORD PTR [rbp-0x48]
  407d40:	mov    rcx,QWORD PTR [rbp-0x40]
  407d44:	mov    rdx,QWORD PTR [rbp-0x38]
  407d48:	mov    rsi,QWORD PTR [rbp-0x30]
  407d4c:	mov    rax,QWORD PTR [rbp-0x28]
  407d50:	mov    r9,r8
  407d53:	mov    r8,rdi
  407d56:	mov    rdi,rax
  407d59:	call   40791c <_start@@Base+0x27bc>
  407d5e:	mov    QWORD PTR [rbp-0x30],rax
  407d62:	mov    rax,QWORD PTR [rbp-0x30]
  407d66:	jmp    407d78 <_start@@Base+0x2c18>
  407d68:	mov    rax,QWORD PTR [rbp-0x18]
  407d6c:	jmp    407d78 <_start@@Base+0x2c18>
  407d6e:	mov    rax,QWORD PTR [rbp-0x18]
  407d72:	jmp    407d78 <_start@@Base+0x2c18>
  407d74:	mov    rax,QWORD PTR [rbp-0x18]
  407d78:	leave  
  407d79:	ret    
  407d7a:	push   rbp
  407d7b:	mov    rbp,rsp
  407d7e:	sub    rsp,0x50
  407d82:	mov    QWORD PTR [rbp-0x28],rdi
  407d86:	mov    QWORD PTR [rbp-0x30],rsi
  407d8a:	mov    QWORD PTR [rbp-0x38],rdx
  407d8e:	mov    QWORD PTR [rbp-0x40],rcx
  407d92:	mov    QWORD PTR [rbp-0x48],r8
  407d96:	mov    QWORD PTR [rbp-0x50],r9
  407d9a:	mov    rax,QWORD PTR [rbp-0x30]
  407d9e:	mov    QWORD PTR [rbp-0x18],rax
  407da2:	mov    rdx,QWORD PTR [rbp-0x38]
  407da6:	mov    rax,QWORD PTR [rbp-0x30]
  407daa:	mov    rsi,rdx
  407dad:	mov    rdi,rax
  407db0:	call   405756 <_start@@Base+0x5f6>
  407db5:	mov    QWORD PTR [rbp-0x10],rax
  407db9:	movabs rax,0x4d7947616d652e4f
  407dc3:	cmp    QWORD PTR [rbp-0x10],rax
  407dc7:	jne    407f16 <_start@@Base+0x2db6>
  407dcd:	add    QWORD PTR [rbp-0x30],0x8
  407dd2:	mov    rdx,QWORD PTR [rbp-0x38]
  407dd6:	mov    rax,QWORD PTR [rbp-0x30]
  407dda:	mov    rsi,rdx
  407ddd:	mov    rdi,rax
  407de0:	call   405756 <_start@@Base+0x5f6>
  407de5:	mov    QWORD PTR [rbp-0x10],rax
  407de9:	movabs rax,0x746865724e616d65
  407df3:	cmp    QWORD PTR [rbp-0x10],rax
  407df7:	jne    407f10 <_start@@Base+0x2db0>
  407dfd:	add    QWORD PTR [rbp-0x30],0x8
  407e02:	mov    rdx,QWORD PTR [rbp-0x38]
  407e06:	mov    rax,QWORD PTR [rbp-0x30]
  407e0a:	mov    rsi,rdx
  407e0d:	mov    rdi,rax
  407e10:	call   405756 <_start@@Base+0x5f6>
  407e15:	mov    QWORD PTR [rbp-0x10],rax
  407e19:	movabs rax,0x53706163652e4672
  407e23:	cmp    QWORD PTR [rbp-0x10],rax
  407e27:	jne    407f0a <_start@@Base+0x2daa>
  407e2d:	add    QWORD PTR [rbp-0x30],0x8
  407e32:	mov    rdx,QWORD PTR [rbp-0x38]
  407e36:	mov    rax,QWORD PTR [rbp-0x30]
  407e3a:	mov    rsi,rdx
  407e3d:	mov    rdi,rax
  407e40:	call   405756 <_start@@Base+0x5f6>
  407e45:	mov    QWORD PTR [rbp-0x10],rax
  407e49:	movabs rax,0x6f6d496e636c7564
  407e53:	cmp    QWORD PTR [rbp-0x10],rax
  407e57:	jne    407f04 <_start@@Base+0x2da4>
  407e5d:	add    QWORD PTR [rbp-0x30],0x8
  407e62:	mov    rdx,QWORD PTR [rbp-0x38]
  407e66:	mov    rax,QWORD PTR [rbp-0x30]
  407e6a:	mov    rsi,rdx
  407e6d:	mov    rdi,rax
  407e70:	call   405756 <_start@@Base+0x5f6>
  407e75:	mov    QWORD PTR [rbp-0x10],rax
  407e79:	movabs rax,0xff00000000000000
  407e83:	and    rax,QWORD PTR [rbp-0x10]
  407e87:	mov    rdx,rax
  407e8a:	movabs rax,0x6500000000000000
  407e94:	cmp    rdx,rax
  407e97:	jne    407efe <_start@@Base+0x2d9e>
  407e99:	mov    rax,QWORD PTR [rbp-0x30]
  407e9d:	mov    QWORD PTR [rbp-0x8],rax
  407ea1:	mov    rdx,QWORD PTR [rbp-0x38]
  407ea5:	mov    rsi,QWORD PTR [rbp-0x8]
  407ea9:	mov    rax,QWORD PTR [rbp-0x28]
  407ead:	mov    ecx,0x1
  407eb2:	mov    rdi,rax
  407eb5:	call   4057a0 <_start@@Base+0x640>
  407eba:	mov    QWORD PTR [rbp-0x30],rax
  407ebe:	mov    rax,QWORD PTR [rbp-0x30]
  407ec2:	cmp    rax,QWORD PTR [rbp-0x8]
  407ec6:	je     407ef8 <_start@@Base+0x2d98>
  407ec8:	mov    r8,QWORD PTR [rbp-0x50]
  407ecc:	mov    rdi,QWORD PTR [rbp-0x48]
  407ed0:	mov    rcx,QWORD PTR [rbp-0x40]
  407ed4:	mov    rdx,QWORD PTR [rbp-0x38]
  407ed8:	mov    rsi,QWORD PTR [rbp-0x30]
  407edc:	mov    rax,QWORD PTR [rbp-0x28]
  407ee0:	mov    r9,r8
  407ee3:	mov    r8,rdi
  407ee6:	mov    rdi,rax
  407ee9:	call   40791c <_start@@Base+0x27bc>
  407eee:	mov    QWORD PTR [rbp-0x30],rax
  407ef2:	mov    rax,QWORD PTR [rbp-0x30]
  407ef6:	jmp    407f1a <_start@@Base+0x2dba>
  407ef8:	mov    rax,QWORD PTR [rbp-0x18]
  407efc:	jmp    407f1a <_start@@Base+0x2dba>
  407efe:	mov    rax,QWORD PTR [rbp-0x18]
  407f02:	jmp    407f1a <_start@@Base+0x2dba>
  407f04:	mov    rax,QWORD PTR [rbp-0x18]
  407f08:	jmp    407f1a <_start@@Base+0x2dba>
  407f0a:	mov    rax,QWORD PTR [rbp-0x18]
  407f0e:	jmp    407f1a <_start@@Base+0x2dba>
  407f10:	mov    rax,QWORD PTR [rbp-0x18]
  407f14:	jmp    407f1a <_start@@Base+0x2dba>
  407f16:	mov    rax,QWORD PTR [rbp-0x18]
  407f1a:	leave  
  407f1b:	ret    
  407f1c:	push   rbp
  407f1d:	mov    rbp,rsp
  407f20:	mov    QWORD PTR [rbp-0x8],rdi
  407f24:	mov    QWORD PTR [rbp-0x10],rsi
  407f28:	mov    QWORD PTR [rbp-0x18],rdx
  407f2c:	mov    QWORD PTR [rbp-0x20],rcx
  407f30:	mov    QWORD PTR [rbp-0x28],r8
  407f34:	mov    QWORD PTR [rbp-0x30],r9
  407f38:	mov    rax,QWORD PTR [rbp-0x10]
  407f3c:	pop    rbp
  407f3d:	ret    
  407f3e:	push   rbp
  407f3f:	mov    rbp,rsp
  407f42:	mov    QWORD PTR [rbp-0x8],rdi
  407f46:	mov    QWORD PTR [rbp-0x10],rsi
  407f4a:	mov    QWORD PTR [rbp-0x18],rdx
  407f4e:	mov    QWORD PTR [rbp-0x20],rcx
  407f52:	mov    QWORD PTR [rbp-0x28],r8
  407f56:	mov    QWORD PTR [rbp-0x30],r9
  407f5a:	mov    rax,QWORD PTR [rbp-0x10]
  407f5e:	pop    rbp
  407f5f:	ret    
  407f60:	push   rbp
  407f61:	mov    rbp,rsp
  407f64:	mov    QWORD PTR [rbp-0x8],rdi
  407f68:	mov    QWORD PTR [rbp-0x10],rsi
  407f6c:	mov    QWORD PTR [rbp-0x18],rdx
  407f70:	mov    QWORD PTR [rbp-0x20],rcx
  407f74:	mov    QWORD PTR [rbp-0x28],r8
  407f78:	mov    QWORD PTR [rbp-0x30],r9
  407f7c:	mov    rax,QWORD PTR [rbp-0x10]
  407f80:	pop    rbp
  407f81:	ret    
  407f82:	push   rbp
  407f83:	mov    rbp,rsp
  407f86:	mov    QWORD PTR [rbp-0x8],rdi
  407f8a:	mov    QWORD PTR [rbp-0x10],rsi
  407f8e:	mov    QWORD PTR [rbp-0x18],rdx
  407f92:	mov    QWORD PTR [rbp-0x20],rcx
  407f96:	mov    QWORD PTR [rbp-0x28],r8
  407f9a:	mov    QWORD PTR [rbp-0x30],r9
  407f9e:	mov    rax,QWORD PTR [rbp-0x10]
  407fa2:	pop    rbp
  407fa3:	ret    
  407fa4:	push   rbp
  407fa5:	mov    rbp,rsp
  407fa8:	mov    QWORD PTR [rbp-0x8],rdi
  407fac:	mov    QWORD PTR [rbp-0x10],rsi
  407fb0:	mov    QWORD PTR [rbp-0x18],rdx
  407fb4:	mov    QWORD PTR [rbp-0x20],rcx
  407fb8:	mov    QWORD PTR [rbp-0x28],r8
  407fbc:	mov    QWORD PTR [rbp-0x30],r9
  407fc0:	mov    rax,QWORD PTR [rbp-0x10]
  407fc4:	pop    rbp
  407fc5:	ret    
  407fc6:	push   rbp
  407fc7:	mov    rbp,rsp
  407fca:	sub    rsp,0x50
  407fce:	mov    QWORD PTR [rbp-0x28],rdi
  407fd2:	mov    QWORD PTR [rbp-0x30],rsi
  407fd6:	mov    QWORD PTR [rbp-0x38],rdx
  407fda:	mov    QWORD PTR [rbp-0x40],rcx
  407fde:	mov    QWORD PTR [rbp-0x48],r8
  407fe2:	mov    QWORD PTR [rbp-0x50],r9
  407fe6:	mov    rax,QWORD PTR [rbp-0x30]
  407fea:	mov    QWORD PTR [rbp-0x18],rax
  407fee:	mov    rdx,QWORD PTR [rbp-0x38]
  407ff2:	mov    rax,QWORD PTR [rbp-0x30]
  407ff6:	mov    rsi,rdx
  407ff9:	mov    rdi,rax
  407ffc:	call   405756 <_start@@Base+0x5f6>
  408001:	mov    QWORD PTR [rbp-0x10],rax
  408005:	movabs rax,0x46726f6d496e636c
  40800f:	cmp    QWORD PTR [rbp-0x10],rax
  408013:	jne    4080c0 <_start@@Base+0x2f60>
  408019:	add    QWORD PTR [rbp-0x30],0x8
  40801e:	mov    rdx,QWORD PTR [rbp-0x38]
  408022:	mov    rax,QWORD PTR [rbp-0x30]
  408026:	mov    rsi,rdx
  408029:	mov    rdi,rax
  40802c:	call   405756 <_start@@Base+0x5f6>
  408031:	mov    QWORD PTR [rbp-0x10],rax
  408035:	movabs rax,0xffffff0000000000
  40803f:	and    rax,QWORD PTR [rbp-0x10]
  408043:	mov    rdx,rax
  408046:	movabs rax,0x7564650000000000
  408050:	cmp    rdx,rax
  408053:	jne    4080ba <_start@@Base+0x2f5a>
  408055:	mov    rax,QWORD PTR [rbp-0x30]
  408059:	mov    QWORD PTR [rbp-0x8],rax
  40805d:	mov    rdx,QWORD PTR [rbp-0x38]
  408061:	mov    rsi,QWORD PTR [rbp-0x8]
  408065:	mov    rax,QWORD PTR [rbp-0x28]
  408069:	mov    ecx,0x3
  40806e:	mov    rdi,rax
  408071:	call   4057a0 <_start@@Base+0x640>
  408076:	mov    QWORD PTR [rbp-0x30],rax
  40807a:	mov    rax,QWORD PTR [rbp-0x30]
  40807e:	cmp    rax,QWORD PTR [rbp-0x8]
  408082:	je     4080b4 <_start@@Base+0x2f54>
  408084:	mov    r8,QWORD PTR [rbp-0x50]
  408088:	mov    rdi,QWORD PTR [rbp-0x48]
  40808c:	mov    rcx,QWORD PTR [rbp-0x40]
  408090:	mov    rdx,QWORD PTR [rbp-0x38]
  408094:	mov    rsi,QWORD PTR [rbp-0x30]
  408098:	mov    rax,QWORD PTR [rbp-0x28]
  40809c:	mov    r9,r8
  40809f:	mov    r8,rdi
  4080a2:	mov    rdi,rax
  4080a5:	call   40791c <_start@@Base+0x27bc>
  4080aa:	mov    QWORD PTR [rbp-0x30],rax
  4080ae:	mov    rax,QWORD PTR [rbp-0x30]
  4080b2:	jmp    4080c4 <_start@@Base+0x2f64>
  4080b4:	mov    rax,QWORD PTR [rbp-0x18]
  4080b8:	jmp    4080c4 <_start@@Base+0x2f64>
  4080ba:	mov    rax,QWORD PTR [rbp-0x18]
  4080be:	jmp    4080c4 <_start@@Base+0x2f64>
  4080c0:	mov    rax,QWORD PTR [rbp-0x18]
  4080c4:	leave  
  4080c5:	ret    
  4080c6:	push   rbp
  4080c7:	mov    rbp,rsp
  4080ca:	sub    rsp,0x50
  4080ce:	mov    QWORD PTR [rbp-0x28],rdi
  4080d2:	mov    QWORD PTR [rbp-0x30],rsi
  4080d6:	mov    QWORD PTR [rbp-0x38],rdx
  4080da:	mov    QWORD PTR [rbp-0x40],rcx
  4080de:	mov    QWORD PTR [rbp-0x48],r8
  4080e2:	mov    QWORD PTR [rbp-0x50],r9
  4080e6:	mov    rax,QWORD PTR [rbp-0x30]
  4080ea:	mov    QWORD PTR [rbp-0x18],rax
  4080ee:	mov    rdx,QWORD PTR [rbp-0x38]
  4080f2:	mov    rax,QWORD PTR [rbp-0x30]
  4080f6:	mov    rsi,rdx
  4080f9:	mov    rdi,rax
  4080fc:	call   405756 <_start@@Base+0x5f6>
  408101:	mov    QWORD PTR [rbp-0x10],rax
  408105:	movabs rax,0x4d7947616d652e4f
  40810f:	cmp    QWORD PTR [rbp-0x10],rax
  408113:	jne    408262 <_start@@Base+0x3102>
  408119:	add    QWORD PTR [rbp-0x30],0x8
  40811e:	mov    rdx,QWORD PTR [rbp-0x38]
  408122:	mov    rax,QWORD PTR [rbp-0x30]
  408126:	mov    rsi,rdx
  408129:	mov    rdi,rax
  40812c:	call   405756 <_start@@Base+0x5f6>
  408131:	mov    QWORD PTR [rbp-0x10],rax
  408135:	movabs rax,0x746865724e616d65
  40813f:	cmp    QWORD PTR [rbp-0x10],rax
  408143:	jne    40825c <_start@@Base+0x30fc>
  408149:	add    QWORD PTR [rbp-0x30],0x8
  40814e:	mov    rdx,QWORD PTR [rbp-0x38]
  408152:	mov    rax,QWORD PTR [rbp-0x30]
  408156:	mov    rsi,rdx
  408159:	mov    rdi,rax
  40815c:	call   405756 <_start@@Base+0x5f6>
  408161:	mov    QWORD PTR [rbp-0x10],rax
  408165:	movabs rax,0x53706163652e4672
  40816f:	cmp    QWORD PTR [rbp-0x10],rax
  408173:	jne    408256 <_start@@Base+0x30f6>
  408179:	add    QWORD PTR [rbp-0x30],0x8
  40817e:	mov    rdx,QWORD PTR [rbp-0x38]
  408182:	mov    rax,QWORD PTR [rbp-0x30]
  408186:	mov    rsi,rdx
  408189:	mov    rdi,rax
  40818c:	call   405756 <_start@@Base+0x5f6>
  408191:	mov    QWORD PTR [rbp-0x10],rax
  408195:	movabs rax,0x6f6d496e636c7564
  40819f:	cmp    QWORD PTR [rbp-0x10],rax
  4081a3:	jne    408250 <_start@@Base+0x30f0>
  4081a9:	add    QWORD PTR [rbp-0x30],0x8
  4081ae:	mov    rdx,QWORD PTR [rbp-0x38]
  4081b2:	mov    rax,QWORD PTR [rbp-0x30]
  4081b6:	mov    rsi,rdx
  4081b9:	mov    rdi,rax
  4081bc:	call   405756 <_start@@Base+0x5f6>
  4081c1:	mov    QWORD PTR [rbp-0x10],rax
  4081c5:	movabs rax,0xff00000000000000
  4081cf:	and    rax,QWORD PTR [rbp-0x10]
  4081d3:	mov    rdx,rax
  4081d6:	movabs rax,0x6500000000000000
  4081e0:	cmp    rdx,rax
  4081e3:	jne    40824a <_start@@Base+0x30ea>
  4081e5:	mov    rax,QWORD PTR [rbp-0x30]
  4081e9:	mov    QWORD PTR [rbp-0x8],rax
  4081ed:	mov    rdx,QWORD PTR [rbp-0x38]
  4081f1:	mov    rsi,QWORD PTR [rbp-0x8]
  4081f5:	mov    rax,QWORD PTR [rbp-0x28]
  4081f9:	mov    ecx,0x1
  4081fe:	mov    rdi,rax
  408201:	call   4057a0 <_start@@Base+0x640>
  408206:	mov    QWORD PTR [rbp-0x30],rax
  40820a:	mov    rax,QWORD PTR [rbp-0x30]
  40820e:	cmp    rax,QWORD PTR [rbp-0x8]
  408212:	je     408244 <_start@@Base+0x30e4>
  408214:	mov    r8,QWORD PTR [rbp-0x50]
  408218:	mov    rdi,QWORD PTR [rbp-0x48]
  40821c:	mov    rcx,QWORD PTR [rbp-0x40]
  408220:	mov    rdx,QWORD PTR [rbp-0x38]
  408224:	mov    rsi,QWORD PTR [rbp-0x30]
  408228:	mov    rax,QWORD PTR [rbp-0x28]
  40822c:	mov    r9,r8
  40822f:	mov    r8,rdi
  408232:	mov    rdi,rax
  408235:	call   40791c <_start@@Base+0x27bc>
  40823a:	mov    QWORD PTR [rbp-0x30],rax
  40823e:	mov    rax,QWORD PTR [rbp-0x30]
  408242:	jmp    408266 <_start@@Base+0x3106>
  408244:	mov    rax,QWORD PTR [rbp-0x18]
  408248:	jmp    408266 <_start@@Base+0x3106>
  40824a:	mov    rax,QWORD PTR [rbp-0x18]
  40824e:	jmp    408266 <_start@@Base+0x3106>
  408250:	mov    rax,QWORD PTR [rbp-0x18]
  408254:	jmp    408266 <_start@@Base+0x3106>
  408256:	mov    rax,QWORD PTR [rbp-0x18]
  40825a:	jmp    408266 <_start@@Base+0x3106>
  40825c:	mov    rax,QWORD PTR [rbp-0x18]
  408260:	jmp    408266 <_start@@Base+0x3106>
  408262:	mov    rax,QWORD PTR [rbp-0x18]
  408266:	leave  
  408267:	ret    
  408268:	push   rbp
  408269:	mov    rbp,rsp
  40826c:	mov    QWORD PTR [rbp-0x8],rdi
  408270:	mov    QWORD PTR [rbp-0x10],rsi
  408274:	mov    QWORD PTR [rbp-0x18],rdx
  408278:	mov    QWORD PTR [rbp-0x20],rcx
  40827c:	mov    QWORD PTR [rbp-0x28],r8
  408280:	mov    QWORD PTR [rbp-0x30],r9
  408284:	mov    rax,QWORD PTR [rbp-0x10]
  408288:	pop    rbp
  408289:	ret    
  40828a:	push   rbp
  40828b:	mov    rbp,rsp
  40828e:	mov    QWORD PTR [rbp-0x8],rdi
  408292:	mov    QWORD PTR [rbp-0x10],rsi
  408296:	mov    QWORD PTR [rbp-0x18],rdx
  40829a:	mov    QWORD PTR [rbp-0x20],rcx
  40829e:	mov    QWORD PTR [rbp-0x28],r8
  4082a2:	mov    QWORD PTR [rbp-0x30],r9
  4082a6:	mov    rax,QWORD PTR [rbp-0x10]
  4082aa:	pop    rbp
  4082ab:	ret    
  4082ac:	push   rbp
  4082ad:	mov    rbp,rsp
  4082b0:	mov    QWORD PTR [rbp-0x8],rdi
  4082b4:	mov    QWORD PTR [rbp-0x10],rsi
  4082b8:	mov    QWORD PTR [rbp-0x18],rdx
  4082bc:	mov    QWORD PTR [rbp-0x20],rcx
  4082c0:	mov    QWORD PTR [rbp-0x28],r8
  4082c4:	mov    QWORD PTR [rbp-0x30],r9
  4082c8:	mov    rax,QWORD PTR [rbp-0x10]
  4082cc:	pop    rbp
  4082cd:	ret    
  4082ce:	push   rbp
  4082cf:	mov    rbp,rsp
  4082d2:	mov    QWORD PTR [rbp-0x8],rdi
  4082d6:	mov    QWORD PTR [rbp-0x10],rsi
  4082da:	mov    QWORD PTR [rbp-0x18],rdx
  4082de:	mov    QWORD PTR [rbp-0x20],rcx
  4082e2:	mov    QWORD PTR [rbp-0x28],r8
  4082e6:	mov    QWORD PTR [rbp-0x30],r9
  4082ea:	mov    rax,QWORD PTR [rbp-0x10]
  4082ee:	pop    rbp
  4082ef:	ret    
  4082f0:	push   rbp
  4082f1:	mov    rbp,rsp
  4082f4:	mov    QWORD PTR [rbp-0x8],rdi
  4082f8:	mov    QWORD PTR [rbp-0x10],rsi
  4082fc:	mov    QWORD PTR [rbp-0x18],rdx
  408300:	mov    QWORD PTR [rbp-0x20],rcx
  408304:	mov    QWORD PTR [rbp-0x28],r8
  408308:	mov    QWORD PTR [rbp-0x30],r9
  40830c:	mov    rax,QWORD PTR [rbp-0x10]
  408310:	pop    rbp
  408311:	ret    
  408312:	push   rbp
  408313:	mov    rbp,rsp
  408316:	mov    QWORD PTR [rbp-0x8],rdi
  40831a:	mov    QWORD PTR [rbp-0x10],rsi
  40831e:	mov    QWORD PTR [rbp-0x18],rdx
  408322:	mov    QWORD PTR [rbp-0x20],rcx
  408326:	mov    QWORD PTR [rbp-0x28],r8
  40832a:	mov    QWORD PTR [rbp-0x30],r9
  40832e:	mov    rax,QWORD PTR [rbp-0x10]
  408332:	pop    rbp
  408333:	ret    
  408334:	push   rbp
  408335:	mov    rbp,rsp
  408338:	mov    QWORD PTR [rbp-0x8],rdi
  40833c:	mov    QWORD PTR [rbp-0x10],rsi
  408340:	mov    QWORD PTR [rbp-0x18],rdx
  408344:	mov    QWORD PTR [rbp-0x20],rcx
  408348:	mov    QWORD PTR [rbp-0x28],r8
  40834c:	mov    QWORD PTR [rbp-0x30],r9
  408350:	mov    rax,QWORD PTR [rbp-0x10]
  408354:	pop    rbp
  408355:	ret    
  408356:	push   rbp
  408357:	mov    rbp,rsp
  40835a:	sub    rsp,0x30
  40835e:	mov    QWORD PTR [rbp-0x18],rdi
  408362:	mov    QWORD PTR [rbp-0x20],rsi
  408366:	mov    QWORD PTR [rbp-0x28],rdx
  40836a:	mov    QWORD PTR [rbp-0x30],rcx
  40836e:	mov    rax,QWORD PTR fs:0x28
  408377:	mov    QWORD PTR [rbp-0x8],rax
  40837b:	xor    eax,eax
  40837d:	lea    rcx,[rbp-0xc]
  408381:	mov    rdx,QWORD PTR [rbp-0x28]
  408385:	mov    rsi,QWORD PTR [rbp-0x20]
  408389:	mov    rax,QWORD PTR [rbp-0x18]
  40838d:	mov    rdi,rax
  408390:	call   405852 <_start@@Base+0x6f2>
  408395:	mov    QWORD PTR [rbp-0x20],rax
  408399:	jmp    4083d2 <_start@@Base+0x3272>
  40839b:	mov    rdx,QWORD PTR [rbp-0x28]
  40839f:	mov    rcx,QWORD PTR [rbp-0x20]
  4083a3:	mov    rax,QWORD PTR [rbp-0x18]
  4083a7:	mov    rsi,rcx
  4083aa:	mov    rdi,rax
  4083ad:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4083b2:	mov    QWORD PTR [rbp-0x20],rax
  4083b6:	lea    rcx,[rbp-0xc]
  4083ba:	mov    rdx,QWORD PTR [rbp-0x28]
  4083be:	mov    rsi,QWORD PTR [rbp-0x20]
  4083c2:	mov    rax,QWORD PTR [rbp-0x18]
  4083c6:	mov    rdi,rax
  4083c9:	call   40590f <_start@@Base+0x7af>
  4083ce:	mov    QWORD PTR [rbp-0x20],rax
  4083d2:	mov    eax,DWORD PTR [rbp-0xc]
  4083d5:	test   eax,eax
  4083d7:	jne    40839b <_start@@Base+0x323b>
  4083d9:	mov    rax,QWORD PTR [rbp-0x20]
  4083dd:	mov    rdi,QWORD PTR [rbp-0x8]
  4083e1:	xor    rdi,QWORD PTR fs:0x28
  4083ea:	je     4083f1 <_start@@Base+0x3291>
  4083ec:	call   405070 <__stack_chk_fail@plt>
  4083f1:	leave  
  4083f2:	ret    
  4083f3:	push   rbp
  4083f4:	mov    rbp,rsp
  4083f7:	sub    rsp,0x30
  4083fb:	mov    QWORD PTR [rbp-0x18],rdi
  4083ff:	mov    QWORD PTR [rbp-0x20],rsi
  408403:	mov    QWORD PTR [rbp-0x28],rdx
  408407:	mov    QWORD PTR [rbp-0x30],rcx
  40840b:	mov    rax,QWORD PTR [rbp-0x30]
  40840f:	mov    DWORD PTR [rax],0x0
  408415:	mov    rax,QWORD PTR [rbp-0x18]
  408419:	mov    rax,QWORD PTR [rax]
  40841c:	mov    edx,0x1
  408421:	mov    esi,0x0
  408426:	mov    rdi,rax
  408429:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  40842e:	mov    QWORD PTR [rbp-0x8],rax
  408432:	cmp    QWORD PTR [rbp-0x8],0x0
  408437:	je     408486 <_start@@Base+0x3326>
  408439:	mov    rcx,QWORD PTR [rbp-0x8]
  40843d:	mov    rdx,QWORD PTR [rbp-0x28]
  408441:	mov    rsi,QWORD PTR [rbp-0x20]
  408445:	mov    rax,QWORD PTR [rbp-0x18]
  408449:	mov    rdi,rax
  40844c:	call   408356 <_start@@Base+0x31f6>
  408451:	mov    QWORD PTR [rbp-0x20],rax
  408455:	mov    rax,QWORD PTR [rbp-0x20]
  408459:	cmp    rax,QWORD PTR [rbp-0x28]
  40845d:	je     408487 <_start@@Base+0x3327>
  40845f:	mov    rax,QWORD PTR [rbp-0x18]
  408463:	mov    rax,QWORD PTR [rax]
  408466:	mov    rdi,rax
  408469:	call   41c263 <flatcc_builder_end_struct@@Base>
  40846e:	mov    edx,eax
  408470:	mov    rax,QWORD PTR [rbp-0x30]
  408474:	mov    DWORD PTR [rax],edx
  408476:	mov    rax,QWORD PTR [rbp-0x30]
  40847a:	mov    eax,DWORD PTR [rax]
  40847c:	test   eax,eax
  40847e:	je     408487 <_start@@Base+0x3327>
  408480:	mov    rax,QWORD PTR [rbp-0x20]
  408484:	jmp    4084a0 <_start@@Base+0x3340>
  408486:	nop
  408487:	mov    rdx,QWORD PTR [rbp-0x28]
  40848b:	mov    rsi,QWORD PTR [rbp-0x20]
  40848f:	mov    rax,QWORD PTR [rbp-0x18]
  408493:	mov    ecx,0x21
  408498:	mov    rdi,rax
  40849b:	call   425bce <flatcc_json_parser_set_error@@Base>
  4084a0:	leave  
  4084a1:	ret    
  4084a2:	push   rbp
  4084a3:	mov    rbp,rsp
  4084a6:	sub    rsp,0x30
  4084aa:	mov    QWORD PTR [rbp-0x18],rdi
  4084ae:	mov    QWORD PTR [rbp-0x20],rsi
  4084b2:	mov    QWORD PTR [rbp-0x28],rdx
  4084b6:	mov    QWORD PTR [rbp-0x30],rcx
  4084ba:	mov    rax,QWORD PTR fs:0x28
  4084c3:	mov    QWORD PTR [rbp-0x8],rax
  4084c7:	xor    eax,eax
  4084c9:	mov    rax,QWORD PTR [rbp-0x30]
  4084cd:	mov    DWORD PTR [rax],0x0
  4084d3:	mov    rax,QWORD PTR [rbp-0x18]
  4084d7:	mov    rax,QWORD PTR [rax]
  4084da:	mov    esi,0x0
  4084df:	mov    rdi,rax
  4084e2:	call   41ccc9 <flatcc_builder_start_table@@Base>
  4084e7:	test   eax,eax
  4084e9:	jne    408598 <_start@@Base+0x3438>
  4084ef:	lea    rcx,[rbp-0xc]
  4084f3:	mov    rdx,QWORD PTR [rbp-0x28]
  4084f7:	mov    rsi,QWORD PTR [rbp-0x20]
  4084fb:	mov    rax,QWORD PTR [rbp-0x18]
  4084ff:	mov    rdi,rax
  408502:	call   405852 <_start@@Base+0x6f2>
  408507:	mov    QWORD PTR [rbp-0x20],rax
  40850b:	jmp    40855f <_start@@Base+0x33ff>
  40850d:	mov    rdx,QWORD PTR [rbp-0x28]
  408511:	mov    rcx,QWORD PTR [rbp-0x20]
  408515:	mov    rax,QWORD PTR [rbp-0x18]
  408519:	mov    rsi,rcx
  40851c:	mov    rdi,rax
  40851f:	call   4055e5 <_start@@Base+0x485>
  408524:	mov    QWORD PTR [rbp-0x20],rax
  408528:	mov    rdx,QWORD PTR [rbp-0x28]
  40852c:	mov    rcx,QWORD PTR [rbp-0x20]
  408530:	mov    rax,QWORD PTR [rbp-0x18]
  408534:	mov    rsi,rcx
  408537:	mov    rdi,rax
  40853a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40853f:	mov    QWORD PTR [rbp-0x20],rax
  408543:	lea    rcx,[rbp-0xc]
  408547:	mov    rdx,QWORD PTR [rbp-0x28]
  40854b:	mov    rsi,QWORD PTR [rbp-0x20]
  40854f:	mov    rax,QWORD PTR [rbp-0x18]
  408553:	mov    rdi,rax
  408556:	call   40590f <_start@@Base+0x7af>
  40855b:	mov    QWORD PTR [rbp-0x20],rax
  40855f:	mov    eax,DWORD PTR [rbp-0xc]
  408562:	test   eax,eax
  408564:	jne    40850d <_start@@Base+0x33ad>
  408566:	mov    rax,QWORD PTR [rbp-0x18]
  40856a:	mov    eax,DWORD PTR [rax+0x1c]
  40856d:	test   eax,eax
  40856f:	jne    40859b <_start@@Base+0x343b>
  408571:	mov    rax,QWORD PTR [rbp-0x18]
  408575:	mov    rax,QWORD PTR [rax]
  408578:	mov    rdi,rax
  40857b:	call   41d7cb <flatcc_builder_end_table@@Base>
  408580:	mov    edx,eax
  408582:	mov    rax,QWORD PTR [rbp-0x30]
  408586:	mov    DWORD PTR [rax],edx
  408588:	mov    rax,QWORD PTR [rbp-0x30]
  40858c:	mov    eax,DWORD PTR [rax]
  40858e:	test   eax,eax
  408590:	je     40859e <_start@@Base+0x343e>
  408592:	mov    rax,QWORD PTR [rbp-0x20]
  408596:	jmp    4085b8 <_start@@Base+0x3458>
  408598:	nop
  408599:	jmp    40859f <_start@@Base+0x343f>
  40859b:	nop
  40859c:	jmp    40859f <_start@@Base+0x343f>
  40859e:	nop
  40859f:	mov    rdx,QWORD PTR [rbp-0x28]
  4085a3:	mov    rsi,QWORD PTR [rbp-0x20]
  4085a7:	mov    rax,QWORD PTR [rbp-0x18]
  4085ab:	mov    ecx,0x21
  4085b0:	mov    rdi,rax
  4085b3:	call   425bce <flatcc_json_parser_set_error@@Base>
  4085b8:	mov    rdi,QWORD PTR [rbp-0x8]
  4085bc:	xor    rdi,QWORD PTR fs:0x28
  4085c5:	je     4085cc <_start@@Base+0x346c>
  4085c7:	call   405070 <__stack_chk_fail@plt>
  4085cc:	leave  
  4085cd:	ret    
  4085ce:	push   rbp
  4085cf:	mov    rbp,rsp
  4085d2:	sub    rsp,0x30
  4085d6:	mov    QWORD PTR [rbp-0x18],rdi
  4085da:	mov    QWORD PTR [rbp-0x20],rsi
  4085de:	mov    QWORD PTR [rbp-0x28],rdx
  4085e2:	mov    QWORD PTR [rbp-0x30],rcx
  4085e6:	mov    rax,QWORD PTR fs:0x28
  4085ef:	mov    QWORD PTR [rbp-0x8],rax
  4085f3:	xor    eax,eax
  4085f5:	mov    rax,QWORD PTR [rbp-0x30]
  4085f9:	mov    DWORD PTR [rax],0x0
  4085ff:	mov    rax,QWORD PTR [rbp-0x18]
  408603:	mov    rax,QWORD PTR [rax]
  408606:	mov    esi,0x0
  40860b:	mov    rdi,rax
  40860e:	call   41ccc9 <flatcc_builder_start_table@@Base>
  408613:	test   eax,eax
  408615:	jne    4086c4 <_start@@Base+0x3564>
  40861b:	lea    rcx,[rbp-0xc]
  40861f:	mov    rdx,QWORD PTR [rbp-0x28]
  408623:	mov    rsi,QWORD PTR [rbp-0x20]
  408627:	mov    rax,QWORD PTR [rbp-0x18]
  40862b:	mov    rdi,rax
  40862e:	call   405852 <_start@@Base+0x6f2>
  408633:	mov    QWORD PTR [rbp-0x20],rax
  408637:	jmp    40868b <_start@@Base+0x352b>
  408639:	mov    rdx,QWORD PTR [rbp-0x28]
  40863d:	mov    rcx,QWORD PTR [rbp-0x20]
  408641:	mov    rax,QWORD PTR [rbp-0x18]
  408645:	mov    rsi,rcx
  408648:	mov    rdi,rax
  40864b:	call   4055e5 <_start@@Base+0x485>
  408650:	mov    QWORD PTR [rbp-0x20],rax
  408654:	mov    rdx,QWORD PTR [rbp-0x28]
  408658:	mov    rcx,QWORD PTR [rbp-0x20]
  40865c:	mov    rax,QWORD PTR [rbp-0x18]
  408660:	mov    rsi,rcx
  408663:	mov    rdi,rax
  408666:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40866b:	mov    QWORD PTR [rbp-0x20],rax
  40866f:	lea    rcx,[rbp-0xc]
  408673:	mov    rdx,QWORD PTR [rbp-0x28]
  408677:	mov    rsi,QWORD PTR [rbp-0x20]
  40867b:	mov    rax,QWORD PTR [rbp-0x18]
  40867f:	mov    rdi,rax
  408682:	call   40590f <_start@@Base+0x7af>
  408687:	mov    QWORD PTR [rbp-0x20],rax
  40868b:	mov    eax,DWORD PTR [rbp-0xc]
  40868e:	test   eax,eax
  408690:	jne    408639 <_start@@Base+0x34d9>
  408692:	mov    rax,QWORD PTR [rbp-0x18]
  408696:	mov    eax,DWORD PTR [rax+0x1c]
  408699:	test   eax,eax
  40869b:	jne    4086c7 <_start@@Base+0x3567>
  40869d:	mov    rax,QWORD PTR [rbp-0x18]
  4086a1:	mov    rax,QWORD PTR [rax]
  4086a4:	mov    rdi,rax
  4086a7:	call   41d7cb <flatcc_builder_end_table@@Base>
  4086ac:	mov    edx,eax
  4086ae:	mov    rax,QWORD PTR [rbp-0x30]
  4086b2:	mov    DWORD PTR [rax],edx
  4086b4:	mov    rax,QWORD PTR [rbp-0x30]
  4086b8:	mov    eax,DWORD PTR [rax]
  4086ba:	test   eax,eax
  4086bc:	je     4086ca <_start@@Base+0x356a>
  4086be:	mov    rax,QWORD PTR [rbp-0x20]
  4086c2:	jmp    4086e4 <_start@@Base+0x3584>
  4086c4:	nop
  4086c5:	jmp    4086cb <_start@@Base+0x356b>
  4086c7:	nop
  4086c8:	jmp    4086cb <_start@@Base+0x356b>
  4086ca:	nop
  4086cb:	mov    rdx,QWORD PTR [rbp-0x28]
  4086cf:	mov    rsi,QWORD PTR [rbp-0x20]
  4086d3:	mov    rax,QWORD PTR [rbp-0x18]
  4086d7:	mov    ecx,0x21
  4086dc:	mov    rdi,rax
  4086df:	call   425bce <flatcc_json_parser_set_error@@Base>
  4086e4:	mov    rdi,QWORD PTR [rbp-0x8]
  4086e8:	xor    rdi,QWORD PTR fs:0x28
  4086f1:	je     4086f8 <_start@@Base+0x3598>
  4086f3:	call   405070 <__stack_chk_fail@plt>
  4086f8:	leave  
  4086f9:	ret    
  4086fa:	push   rbp
  4086fb:	mov    rbp,rsp
  4086fe:	sub    rsp,0x30
  408702:	mov    QWORD PTR [rbp-0x8],rdi
  408706:	mov    QWORD PTR [rbp-0x10],rsi
  40870a:	mov    QWORD PTR [rbp-0x18],rdx
  40870e:	mov    eax,ecx
  408710:	mov    QWORD PTR [rbp-0x28],r8
  408714:	mov    BYTE PTR [rbp-0x1c],al
  408717:	mov    rax,QWORD PTR [rbp-0x28]
  40871b:	mov    DWORD PTR [rax],0x0
  408721:	movzx  eax,BYTE PTR [rbp-0x1c]
  408725:	test   eax,eax
  408727:	je     408730 <_start@@Base+0x35d0>
  408729:	cmp    eax,0x1
  40872c:	je     40874c <_start@@Base+0x35ec>
  40872e:	jmp    408776 <_start@@Base+0x3616>
  408730:	mov    rdx,QWORD PTR [rbp-0x18]
  408734:	mov    rcx,QWORD PTR [rbp-0x10]
  408738:	mov    rax,QWORD PTR [rbp-0x8]
  40873c:	mov    rsi,rcx
  40873f:	mov    rdi,rax
  408742:	call   40629c <_start@@Base+0x113c>
  408747:	jmp    4087e7 <_start@@Base+0x3687>
  40874c:	mov    rcx,QWORD PTR [rbp-0x28]
  408750:	mov    rdx,QWORD PTR [rbp-0x18]
  408754:	mov    rsi,QWORD PTR [rbp-0x10]
  408758:	mov    rax,QWORD PTR [rbp-0x8]
  40875c:	mov    rdi,rax
  40875f:	call   4084a2 <_start@@Base+0x3342>
  408764:	mov    QWORD PTR [rbp-0x10],rax
  408768:	nop
  408769:	mov    rax,QWORD PTR [rbp-0x8]
  40876d:	mov    eax,DWORD PTR [rax+0x1c]
  408770:	test   eax,eax
  408772:	je     4087be <_start@@Base+0x365e>
  408774:	jmp    4087b8 <_start@@Base+0x3658>
  408776:	mov    rax,QWORD PTR [rbp-0x8]
  40877a:	mov    eax,DWORD PTR [rax+0x10]
  40877d:	and    eax,0x1
  408780:	test   eax,eax
  408782:	jne    40879f <_start@@Base+0x363f>
  408784:	mov    rdx,QWORD PTR [rbp-0x18]
  408788:	mov    rsi,QWORD PTR [rbp-0x10]
  40878c:	mov    rax,QWORD PTR [rbp-0x8]
  408790:	mov    ecx,0xf
  408795:	mov    rdi,rax
  408798:	call   425bce <flatcc_json_parser_set_error@@Base>
  40879d:	jmp    4087e7 <_start@@Base+0x3687>
  40879f:	mov    rdx,QWORD PTR [rbp-0x18]
  4087a3:	mov    rcx,QWORD PTR [rbp-0x10]
  4087a7:	mov    rax,QWORD PTR [rbp-0x8]
  4087ab:	mov    rsi,rcx
  4087ae:	mov    rdi,rax
  4087b1:	call   426bfb <flatcc_json_parser_generic_json@@Base>
  4087b6:	jmp    4087e7 <_start@@Base+0x3687>
  4087b8:	mov    rax,QWORD PTR [rbp-0x10]
  4087bc:	jmp    4087e7 <_start@@Base+0x3687>
  4087be:	mov    rax,QWORD PTR [rbp-0x28]
  4087c2:	mov    eax,DWORD PTR [rax]
  4087c4:	test   eax,eax
  4087c6:	jne    4087e3 <_start@@Base+0x3683>
  4087c8:	mov    rdx,QWORD PTR [rbp-0x18]
  4087cc:	mov    rsi,QWORD PTR [rbp-0x10]
  4087d0:	mov    rax,QWORD PTR [rbp-0x8]
  4087d4:	mov    ecx,0x21
  4087d9:	mov    rdi,rax
  4087dc:	call   425bce <flatcc_json_parser_set_error@@Base>
  4087e1:	jmp    4087e7 <_start@@Base+0x3687>
  4087e3:	mov    rax,QWORD PTR [rbp-0x10]
  4087e7:	leave  
  4087e8:	ret    
  4087e9:	push   rbp
  4087ea:	mov    rbp,rsp
  4087ed:	mov    eax,edi
  4087ef:	mov    BYTE PTR [rbp-0x4],al
  4087f2:	movzx  eax,BYTE PTR [rbp-0x4]
  4087f6:	test   eax,eax
  4087f8:	je     408801 <_start@@Base+0x36a1>
  4087fa:	cmp    eax,0x1
  4087fd:	je     408808 <_start@@Base+0x36a8>
  4087ff:	jmp    40880f <_start@@Base+0x36af>
  408801:	mov    eax,0x1
  408806:	jmp    408814 <_start@@Base+0x36b4>
  408808:	mov    eax,0x1
  40880d:	jmp    408814 <_start@@Base+0x36b4>
  40880f:	mov    eax,0x0
  408814:	pop    rbp
  408815:	ret    
  408816:	push   rbp
  408817:	mov    rbp,rsp
  40881a:	sub    rsp,0x50
  40881e:	mov    QWORD PTR [rbp-0x28],rdi
  408822:	mov    QWORD PTR [rbp-0x30],rsi
  408826:	mov    QWORD PTR [rbp-0x38],rdx
  40882a:	mov    QWORD PTR [rbp-0x40],rcx
  40882e:	mov    QWORD PTR [rbp-0x48],r8
  408832:	mov    QWORD PTR [rbp-0x50],r9
  408836:	mov    rax,QWORD PTR [rbp-0x30]
  40883a:	mov    QWORD PTR [rbp-0x18],rax
  40883e:	mov    rdx,QWORD PTR [rbp-0x38]
  408842:	mov    rax,QWORD PTR [rbp-0x30]
  408846:	mov    rsi,rdx
  408849:	mov    rdi,rax
  40884c:	call   405756 <_start@@Base+0x5f6>
  408851:	mov    QWORD PTR [rbp-0x10],rax
  408855:	movabs rax,0x496e506172656e74
  40885f:	cmp    QWORD PTR [rbp-0x10],rax
  408863:	jne    40893d <_start@@Base+0x37dd>
  408869:	add    QWORD PTR [rbp-0x30],0x8
  40886e:	mov    rdx,QWORD PTR [rbp-0x38]
  408872:	mov    rax,QWORD PTR [rbp-0x30]
  408876:	mov    rsi,rdx
  408879:	mov    rdi,rax
  40887c:	call   405756 <_start@@Base+0x5f6>
  408881:	mov    QWORD PTR [rbp-0x10],rax
  408885:	movabs rax,0x4e616d6573706163
  40888f:	cmp    QWORD PTR [rbp-0x10],rax
  408893:	jne    408937 <_start@@Base+0x37d7>
  408899:	add    QWORD PTR [rbp-0x30],0x8
  40889e:	mov    rdx,QWORD PTR [rbp-0x38]
  4088a2:	mov    rax,QWORD PTR [rbp-0x30]
  4088a6:	mov    rsi,rdx
  4088a9:	mov    rdi,rax
  4088ac:	call   405756 <_start@@Base+0x5f6>
  4088b1:	mov    QWORD PTR [rbp-0x10],rax
  4088b5:	movabs rax,0xff00000000000000
  4088bf:	and    rax,QWORD PTR [rbp-0x10]
  4088c3:	mov    rdx,rax
  4088c6:	movabs rax,0x6500000000000000
  4088d0:	cmp    rdx,rax
  4088d3:	jne    40892e <_start@@Base+0x37ce>
  4088d5:	mov    rax,QWORD PTR [rbp-0x30]
  4088d9:	mov    QWORD PTR [rbp-0x8],rax
  4088dd:	mov    rcx,QWORD PTR [rbp-0x50]
  4088e1:	mov    rdx,QWORD PTR [rbp-0x38]
  4088e5:	mov    rsi,QWORD PTR [rbp-0x8]
  4088e9:	mov    rax,QWORD PTR [rbp-0x28]
  4088ed:	mov    r8,rcx
  4088f0:	mov    ecx,0x1
  4088f5:	mov    rdi,rax
  4088f8:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  4088fd:	mov    QWORD PTR [rbp-0x30],rax
  408901:	mov    rax,QWORD PTR [rbp-0x30]
  408905:	cmp    rax,QWORD PTR [rbp-0x8]
  408909:	je     408925 <_start@@Base+0x37c5>
  40890b:	mov    rax,QWORD PTR [rbp-0x48]
  40890f:	mov    QWORD PTR [rax],0x1
  408916:	mov    rax,QWORD PTR [rbp-0x40]
  40891a:	mov    DWORD PTR [rax],0x0
  408920:	jmp    4089b6 <_start@@Base+0x3856>
  408925:	mov    rax,QWORD PTR [rbp-0x18]
  408929:	jmp    4089ba <_start@@Base+0x385a>
  40892e:	mov    rax,QWORD PTR [rbp-0x18]
  408932:	jmp    4089ba <_start@@Base+0x385a>
  408937:	mov    rax,QWORD PTR [rbp-0x18]
  40893b:	jmp    4089ba <_start@@Base+0x385a>
  40893d:	movabs rax,0xffffffff00000000
  408947:	and    rax,QWORD PTR [rbp-0x10]
  40894b:	mov    rdx,rax
  40894e:	movabs rax,0x4e4f4e4500000000
  408958:	cmp    rdx,rax
  40895b:	jne    4089b0 <_start@@Base+0x3850>
  40895d:	mov    rax,QWORD PTR [rbp-0x30]
  408961:	mov    QWORD PTR [rbp-0x8],rax
  408965:	mov    rcx,QWORD PTR [rbp-0x50]
  408969:	mov    rdx,QWORD PTR [rbp-0x38]
  40896d:	mov    rsi,QWORD PTR [rbp-0x8]
  408971:	mov    rax,QWORD PTR [rbp-0x28]
  408975:	mov    r8,rcx
  408978:	mov    ecx,0x4
  40897d:	mov    rdi,rax
  408980:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408985:	mov    QWORD PTR [rbp-0x30],rax
  408989:	mov    rax,QWORD PTR [rbp-0x30]
  40898d:	cmp    rax,QWORD PTR [rbp-0x8]
  408991:	je     4089aa <_start@@Base+0x384a>
  408993:	mov    rax,QWORD PTR [rbp-0x48]
  408997:	mov    QWORD PTR [rax],0x0
  40899e:	mov    rax,QWORD PTR [rbp-0x40]
  4089a2:	mov    DWORD PTR [rax],0x0
  4089a8:	jmp    4089b6 <_start@@Base+0x3856>
  4089aa:	mov    rax,QWORD PTR [rbp-0x18]
  4089ae:	jmp    4089ba <_start@@Base+0x385a>
  4089b0:	mov    rax,QWORD PTR [rbp-0x18]
  4089b4:	jmp    4089ba <_start@@Base+0x385a>
  4089b6:	mov    rax,QWORD PTR [rbp-0x30]
  4089ba:	leave  
  4089bb:	ret    
  4089bc:	push   rbp
  4089bd:	mov    rbp,rsp
  4089c0:	sub    rsp,0x50
  4089c4:	mov    QWORD PTR [rbp-0x28],rdi
  4089c8:	mov    QWORD PTR [rbp-0x30],rsi
  4089cc:	mov    QWORD PTR [rbp-0x38],rdx
  4089d0:	mov    QWORD PTR [rbp-0x40],rcx
  4089d4:	mov    QWORD PTR [rbp-0x48],r8
  4089d8:	mov    QWORD PTR [rbp-0x50],r9
  4089dc:	mov    rax,QWORD PTR [rbp-0x30]
  4089e0:	mov    QWORD PTR [rbp-0x18],rax
  4089e4:	mov    rdx,QWORD PTR [rbp-0x38]
  4089e8:	mov    rax,QWORD PTR [rbp-0x30]
  4089ec:	mov    rsi,rdx
  4089ef:	mov    rdi,rax
  4089f2:	call   405756 <_start@@Base+0x5f6>
  4089f7:	mov    QWORD PTR [rbp-0x10],rax
  4089fb:	movabs rax,0x6e656731ffffffff
  408a05:	cmp    QWORD PTR [rbp-0x10],rax
  408a09:	ja     408a91 <_start@@Base+0x3931>
  408a0f:	movabs rax,0xffffffff00000000
  408a19:	and    rax,QWORD PTR [rbp-0x10]
  408a1d:	mov    rdx,rax
  408a20:	movabs rax,0x6e65673100000000
  408a2a:	cmp    rdx,rax
  408a2d:	jne    408a88 <_start@@Base+0x3928>
  408a2f:	mov    rax,QWORD PTR [rbp-0x30]
  408a33:	mov    QWORD PTR [rbp-0x8],rax
  408a37:	mov    rcx,QWORD PTR [rbp-0x50]
  408a3b:	mov    rdx,QWORD PTR [rbp-0x38]
  408a3f:	mov    rsi,QWORD PTR [rbp-0x8]
  408a43:	mov    rax,QWORD PTR [rbp-0x28]
  408a47:	mov    r8,rcx
  408a4a:	mov    ecx,0x4
  408a4f:	mov    rdi,rax
  408a52:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408a57:	mov    QWORD PTR [rbp-0x30],rax
  408a5b:	mov    rax,QWORD PTR [rbp-0x30]
  408a5f:	cmp    rax,QWORD PTR [rbp-0x8]
  408a63:	je     408a7f <_start@@Base+0x391f>
  408a65:	mov    rax,QWORD PTR [rbp-0x48]
  408a69:	mov    QWORD PTR [rax],0xfffffffffffffff4
  408a70:	mov    rax,QWORD PTR [rbp-0x40]
  408a74:	mov    DWORD PTR [rax],0x1
  408a7a:	jmp    408b7d <_start@@Base+0x3a1d>
  408a7f:	mov    rax,QWORD PTR [rbp-0x18]
  408a83:	jmp    408b81 <_start@@Base+0x3a21>
  408a88:	mov    rax,QWORD PTR [rbp-0x18]
  408a8c:	jmp    408b81 <_start@@Base+0x3a21>
  408a91:	movabs rax,0xffffffff00000000
  408a9b:	and    rax,QWORD PTR [rbp-0x10]
  408a9f:	mov    rdx,rax
  408aa2:	movabs rax,0x6e65673300000000
  408aac:	cmp    rdx,rax
  408aaf:	jne    408b04 <_start@@Base+0x39a4>
  408ab1:	mov    rax,QWORD PTR [rbp-0x30]
  408ab5:	mov    QWORD PTR [rbp-0x8],rax
  408ab9:	mov    rcx,QWORD PTR [rbp-0x50]
  408abd:	mov    rdx,QWORD PTR [rbp-0x38]
  408ac1:	mov    rsi,QWORD PTR [rbp-0x8]
  408ac5:	mov    rax,QWORD PTR [rbp-0x28]
  408ac9:	mov    r8,rcx
  408acc:	mov    ecx,0x4
  408ad1:	mov    rdi,rax
  408ad4:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408ad9:	mov    QWORD PTR [rbp-0x30],rax
  408add:	mov    rax,QWORD PTR [rbp-0x30]
  408ae1:	cmp    rax,QWORD PTR [rbp-0x8]
  408ae5:	je     408afe <_start@@Base+0x399e>
  408ae7:	mov    rax,QWORD PTR [rbp-0x48]
  408aeb:	mov    QWORD PTR [rax],0xfffffffffffffff6
  408af2:	mov    rax,QWORD PTR [rbp-0x40]
  408af6:	mov    DWORD PTR [rax],0x1
  408afc:	jmp    408b7d <_start@@Base+0x3a1d>
  408afe:	mov    rax,QWORD PTR [rbp-0x18]
  408b02:	jmp    408b81 <_start@@Base+0x3a21>
  408b04:	movabs rax,0xffffffff00000000
  408b0e:	and    rax,QWORD PTR [rbp-0x10]
  408b12:	mov    rdx,rax
  408b15:	movabs rax,0x6e65673200000000
  408b1f:	cmp    rdx,rax
  408b22:	jne    408b77 <_start@@Base+0x3a17>
  408b24:	mov    rax,QWORD PTR [rbp-0x30]
  408b28:	mov    QWORD PTR [rbp-0x8],rax
  408b2c:	mov    rcx,QWORD PTR [rbp-0x50]
  408b30:	mov    rdx,QWORD PTR [rbp-0x38]
  408b34:	mov    rsi,QWORD PTR [rbp-0x8]
  408b38:	mov    rax,QWORD PTR [rbp-0x28]
  408b3c:	mov    r8,rcx
  408b3f:	mov    ecx,0x4
  408b44:	mov    rdi,rax
  408b47:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408b4c:	mov    QWORD PTR [rbp-0x30],rax
  408b50:	mov    rax,QWORD PTR [rbp-0x30]
  408b54:	cmp    rax,QWORD PTR [rbp-0x8]
  408b58:	je     408b71 <_start@@Base+0x3a11>
  408b5a:	mov    rax,QWORD PTR [rbp-0x48]
  408b5e:	mov    QWORD PTR [rax],0xfffffffffffffff5
  408b65:	mov    rax,QWORD PTR [rbp-0x40]
  408b69:	mov    DWORD PTR [rax],0x1
  408b6f:	jmp    408b7d <_start@@Base+0x3a1d>
  408b71:	mov    rax,QWORD PTR [rbp-0x18]
  408b75:	jmp    408b81 <_start@@Base+0x3a21>
  408b77:	mov    rax,QWORD PTR [rbp-0x18]
  408b7b:	jmp    408b81 <_start@@Base+0x3a21>
  408b7d:	mov    rax,QWORD PTR [rbp-0x30]
  408b81:	leave  
  408b82:	ret    
  408b83:	push   rbp
  408b84:	mov    rbp,rsp
  408b87:	sub    rsp,0x50
  408b8b:	mov    QWORD PTR [rbp-0x28],rdi
  408b8f:	mov    QWORD PTR [rbp-0x30],rsi
  408b93:	mov    QWORD PTR [rbp-0x38],rdx
  408b97:	mov    QWORD PTR [rbp-0x40],rcx
  408b9b:	mov    QWORD PTR [rbp-0x48],r8
  408b9f:	mov    QWORD PTR [rbp-0x50],r9
  408ba3:	mov    rax,QWORD PTR [rbp-0x30]
  408ba7:	mov    QWORD PTR [rbp-0x18],rax
  408bab:	mov    rdx,QWORD PTR [rbp-0x38]
  408baf:	mov    rax,QWORD PTR [rbp-0x30]
  408bb3:	mov    rsi,rdx
  408bb6:	mov    rdi,rax
  408bb9:	call   405756 <_start@@Base+0x5f6>
  408bbe:	mov    QWORD PTR [rbp-0x10],rax
  408bc2:	movabs rax,0x696e7431ffffffff
  408bcc:	cmp    QWORD PTR [rbp-0x10],rax
  408bd0:	ja     408c58 <_start@@Base+0x3af8>
  408bd6:	movabs rax,0xffffffff00000000
  408be0:	and    rax,QWORD PTR [rbp-0x10]
  408be4:	mov    rdx,rax
  408be7:	movabs rax,0x696e743100000000
  408bf1:	cmp    rdx,rax
  408bf4:	jne    408c4f <_start@@Base+0x3aef>
  408bf6:	mov    rax,QWORD PTR [rbp-0x30]
  408bfa:	mov    QWORD PTR [rbp-0x8],rax
  408bfe:	mov    rcx,QWORD PTR [rbp-0x50]
  408c02:	mov    rdx,QWORD PTR [rbp-0x38]
  408c06:	mov    rsi,QWORD PTR [rbp-0x8]
  408c0a:	mov    rax,QWORD PTR [rbp-0x28]
  408c0e:	mov    r8,rcx
  408c11:	mov    ecx,0x4
  408c16:	mov    rdi,rax
  408c19:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408c1e:	mov    QWORD PTR [rbp-0x30],rax
  408c22:	mov    rax,QWORD PTR [rbp-0x30]
  408c26:	cmp    rax,QWORD PTR [rbp-0x8]
  408c2a:	je     408c46 <_start@@Base+0x3ae6>
  408c2c:	mov    rax,QWORD PTR [rbp-0x48]
  408c30:	mov    QWORD PTR [rax],0x2
  408c37:	mov    rax,QWORD PTR [rbp-0x40]
  408c3b:	mov    DWORD PTR [rax],0x0
  408c41:	jmp    408dcc <_start@@Base+0x3c6c>
  408c46:	mov    rax,QWORD PTR [rbp-0x18]
  408c4a:	jmp    408dd0 <_start@@Base+0x3c70>
  408c4f:	mov    rax,QWORD PTR [rbp-0x18]
  408c53:	jmp    408dd0 <_start@@Base+0x3c70>
  408c58:	movabs rax,0x696e746e6566ffff
  408c62:	cmp    QWORD PTR [rbp-0x10],rax
  408c66:	ja     408cee <_start@@Base+0x3b8e>
  408c6c:	movabs rax,0xffffffff00000000
  408c76:	and    rax,QWORD PTR [rbp-0x10]
  408c7a:	mov    rdx,rax
  408c7d:	movabs rax,0x696e743200000000
  408c87:	cmp    rdx,rax
  408c8a:	jne    408ce5 <_start@@Base+0x3b85>
  408c8c:	mov    rax,QWORD PTR [rbp-0x30]
  408c90:	mov    QWORD PTR [rbp-0x8],rax
  408c94:	mov    rcx,QWORD PTR [rbp-0x50]
  408c98:	mov    rdx,QWORD PTR [rbp-0x38]
  408c9c:	mov    rsi,QWORD PTR [rbp-0x8]
  408ca0:	mov    rax,QWORD PTR [rbp-0x28]
  408ca4:	mov    r8,rcx
  408ca7:	mov    ecx,0x4
  408cac:	mov    rdi,rax
  408caf:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408cb4:	mov    QWORD PTR [rbp-0x30],rax
  408cb8:	mov    rax,QWORD PTR [rbp-0x30]
  408cbc:	cmp    rax,QWORD PTR [rbp-0x8]
  408cc0:	je     408cdc <_start@@Base+0x3b7c>
  408cc2:	mov    rax,QWORD PTR [rbp-0x48]
  408cc6:	mov    QWORD PTR [rax],0x2a
  408ccd:	mov    rax,QWORD PTR [rbp-0x40]
  408cd1:	mov    DWORD PTR [rax],0x0
  408cd7:	jmp    408dcc <_start@@Base+0x3c6c>
  408cdc:	mov    rax,QWORD PTR [rbp-0x18]
  408ce0:	jmp    408dd0 <_start@@Base+0x3c70>
  408ce5:	mov    rax,QWORD PTR [rbp-0x18]
  408ce9:	jmp    408dd0 <_start@@Base+0x3c70>
  408cee:	mov    rax,QWORD PTR [rbp-0x10]
  408cf2:	mov    al,0x0
  408cf4:	mov    rdx,rax
  408cf7:	movabs rax,0x696e746e65673200
  408d01:	cmp    rdx,rax
  408d04:	jne    408d59 <_start@@Base+0x3bf9>
  408d06:	mov    rax,QWORD PTR [rbp-0x30]
  408d0a:	mov    QWORD PTR [rbp-0x8],rax
  408d0e:	mov    rcx,QWORD PTR [rbp-0x50]
  408d12:	mov    rdx,QWORD PTR [rbp-0x38]
  408d16:	mov    rsi,QWORD PTR [rbp-0x8]
  408d1a:	mov    rax,QWORD PTR [rbp-0x28]
  408d1e:	mov    r8,rcx
  408d21:	mov    ecx,0x7
  408d26:	mov    rdi,rax
  408d29:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408d2e:	mov    QWORD PTR [rbp-0x30],rax
  408d32:	mov    rax,QWORD PTR [rbp-0x30]
  408d36:	cmp    rax,QWORD PTR [rbp-0x8]
  408d3a:	je     408d53 <_start@@Base+0x3bf3>
  408d3c:	mov    rax,QWORD PTR [rbp-0x48]
  408d40:	mov    QWORD PTR [rax],0xffffffffffffffff
  408d47:	mov    rax,QWORD PTR [rbp-0x40]
  408d4b:	mov    DWORD PTR [rax],0x1
  408d51:	jmp    408dcc <_start@@Base+0x3c6c>
  408d53:	mov    rax,QWORD PTR [rbp-0x18]
  408d57:	jmp    408dd0 <_start@@Base+0x3c70>
  408d59:	mov    rax,QWORD PTR [rbp-0x10]
  408d5d:	mov    ax,0x0
  408d61:	mov    rdx,rax
  408d64:	movabs rax,0x696e746e65670000
  408d6e:	cmp    rdx,rax
  408d71:	jne    408dc6 <_start@@Base+0x3c66>
  408d73:	mov    rax,QWORD PTR [rbp-0x30]
  408d77:	mov    QWORD PTR [rbp-0x8],rax
  408d7b:	mov    rcx,QWORD PTR [rbp-0x50]
  408d7f:	mov    rdx,QWORD PTR [rbp-0x38]
  408d83:	mov    rsi,QWORD PTR [rbp-0x8]
  408d87:	mov    rax,QWORD PTR [rbp-0x28]
  408d8b:	mov    r8,rcx
  408d8e:	mov    ecx,0x6
  408d93:	mov    rdi,rax
  408d96:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408d9b:	mov    QWORD PTR [rbp-0x30],rax
  408d9f:	mov    rax,QWORD PTR [rbp-0x30]
  408da3:	cmp    rax,QWORD PTR [rbp-0x8]
  408da7:	je     408dc0 <_start@@Base+0x3c60>
  408da9:	mov    rax,QWORD PTR [rbp-0x48]
  408dad:	mov    QWORD PTR [rax],0xfffffffffffffffe
  408db4:	mov    rax,QWORD PTR [rbp-0x40]
  408db8:	mov    DWORD PTR [rax],0x1
  408dbe:	jmp    408dcc <_start@@Base+0x3c6c>
  408dc0:	mov    rax,QWORD PTR [rbp-0x18]
  408dc4:	jmp    408dd0 <_start@@Base+0x3c70>
  408dc6:	mov    rax,QWORD PTR [rbp-0x18]
  408dca:	jmp    408dd0 <_start@@Base+0x3c70>
  408dcc:	mov    rax,QWORD PTR [rbp-0x30]
  408dd0:	leave  
  408dd1:	ret    
  408dd2:	push   rbp
  408dd3:	mov    rbp,rsp
  408dd6:	sub    rsp,0x50
  408dda:	mov    QWORD PTR [rbp-0x28],rdi
  408dde:	mov    QWORD PTR [rbp-0x30],rsi
  408de2:	mov    QWORD PTR [rbp-0x38],rdx
  408de6:	mov    QWORD PTR [rbp-0x40],rcx
  408dea:	mov    QWORD PTR [rbp-0x48],r8
  408dee:	mov    QWORD PTR [rbp-0x50],r9
  408df2:	mov    rax,QWORD PTR [rbp-0x30]
  408df6:	mov    QWORD PTR [rbp-0x18],rax
  408dfa:	mov    rdx,QWORD PTR [rbp-0x38]
  408dfe:	mov    rax,QWORD PTR [rbp-0x30]
  408e02:	mov    rsi,rdx
  408e05:	mov    rdi,rax
  408e08:	call   405756 <_start@@Base+0x5f6>
  408e0d:	mov    QWORD PTR [rbp-0x10],rax
  408e11:	movabs rax,0x68657831ffffffff
  408e1b:	cmp    QWORD PTR [rbp-0x10],rax
  408e1f:	ja     408ea7 <_start@@Base+0x3d47>
  408e25:	movabs rax,0xffffffff00000000
  408e2f:	and    rax,QWORD PTR [rbp-0x10]
  408e33:	mov    rdx,rax
  408e36:	movabs rax,0x6865783100000000
  408e40:	cmp    rdx,rax
  408e43:	jne    408e9e <_start@@Base+0x3d3e>
  408e45:	mov    rax,QWORD PTR [rbp-0x30]
  408e49:	mov    QWORD PTR [rbp-0x8],rax
  408e4d:	mov    rcx,QWORD PTR [rbp-0x50]
  408e51:	mov    rdx,QWORD PTR [rbp-0x38]
  408e55:	mov    rsi,QWORD PTR [rbp-0x8]
  408e59:	mov    rax,QWORD PTR [rbp-0x28]
  408e5d:	mov    r8,rcx
  408e60:	mov    ecx,0x4
  408e65:	mov    rdi,rax
  408e68:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408e6d:	mov    QWORD PTR [rbp-0x30],rax
  408e71:	mov    rax,QWORD PTR [rbp-0x30]
  408e75:	cmp    rax,QWORD PTR [rbp-0x8]
  408e79:	je     408e95 <_start@@Base+0x3d35>
  408e7b:	mov    rax,QWORD PTR [rbp-0x48]
  408e7f:	mov    QWORD PTR [rax],0x3
  408e86:	mov    rax,QWORD PTR [rbp-0x40]
  408e8a:	mov    DWORD PTR [rax],0x0
  408e90:	jmp    408f8d <_start@@Base+0x3e2d>
  408e95:	mov    rax,QWORD PTR [rbp-0x18]
  408e99:	jmp    408f91 <_start@@Base+0x3e31>
  408e9e:	mov    rax,QWORD PTR [rbp-0x18]
  408ea2:	jmp    408f91 <_start@@Base+0x3e31>
  408ea7:	mov    rax,QWORD PTR [rbp-0x10]
  408eab:	mov    ax,0x0
  408eaf:	mov    rdx,rax
  408eb2:	movabs rax,0x6865786e65670000
  408ebc:	cmp    rdx,rax
  408ebf:	jne    408f14 <_start@@Base+0x3db4>
  408ec1:	mov    rax,QWORD PTR [rbp-0x30]
  408ec5:	mov    QWORD PTR [rbp-0x8],rax
  408ec9:	mov    rcx,QWORD PTR [rbp-0x50]
  408ecd:	mov    rdx,QWORD PTR [rbp-0x38]
  408ed1:	mov    rsi,QWORD PTR [rbp-0x8]
  408ed5:	mov    rax,QWORD PTR [rbp-0x28]
  408ed9:	mov    r8,rcx
  408edc:	mov    ecx,0x6
  408ee1:	mov    rdi,rax
  408ee4:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408ee9:	mov    QWORD PTR [rbp-0x30],rax
  408eed:	mov    rax,QWORD PTR [rbp-0x30]
  408ef1:	cmp    rax,QWORD PTR [rbp-0x8]
  408ef5:	je     408f0e <_start@@Base+0x3dae>
  408ef7:	mov    rax,QWORD PTR [rbp-0x48]
  408efb:	mov    QWORD PTR [rax],0xfffffffffffffffe
  408f02:	mov    rax,QWORD PTR [rbp-0x40]
  408f06:	mov    DWORD PTR [rax],0x1
  408f0c:	jmp    408f8d <_start@@Base+0x3e2d>
  408f0e:	mov    rax,QWORD PTR [rbp-0x18]
  408f12:	jmp    408f91 <_start@@Base+0x3e31>
  408f14:	movabs rax,0xffffffff00000000
  408f1e:	and    rax,QWORD PTR [rbp-0x10]
  408f22:	mov    rdx,rax
  408f25:	movabs rax,0x6865783200000000
  408f2f:	cmp    rdx,rax
  408f32:	jne    408f87 <_start@@Base+0x3e27>
  408f34:	mov    rax,QWORD PTR [rbp-0x30]
  408f38:	mov    QWORD PTR [rbp-0x8],rax
  408f3c:	mov    rcx,QWORD PTR [rbp-0x50]
  408f40:	mov    rdx,QWORD PTR [rbp-0x38]
  408f44:	mov    rsi,QWORD PTR [rbp-0x8]
  408f48:	mov    rax,QWORD PTR [rbp-0x28]
  408f4c:	mov    r8,rcx
  408f4f:	mov    ecx,0x4
  408f54:	mov    rdi,rax
  408f57:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  408f5c:	mov    QWORD PTR [rbp-0x30],rax
  408f60:	mov    rax,QWORD PTR [rbp-0x30]
  408f64:	cmp    rax,QWORD PTR [rbp-0x8]
  408f68:	je     408f81 <_start@@Base+0x3e21>
  408f6a:	mov    rax,QWORD PTR [rbp-0x48]
  408f6e:	mov    QWORD PTR [rax],0x7eafbeaf
  408f75:	mov    rax,QWORD PTR [rbp-0x40]
  408f79:	mov    DWORD PTR [rax],0x0
  408f7f:	jmp    408f8d <_start@@Base+0x3e2d>
  408f81:	mov    rax,QWORD PTR [rbp-0x18]
  408f85:	jmp    408f91 <_start@@Base+0x3e31>
  408f87:	mov    rax,QWORD PTR [rbp-0x18]
  408f8b:	jmp    408f91 <_start@@Base+0x3e31>
  408f8d:	mov    rax,QWORD PTR [rbp-0x30]
  408f91:	leave  
  408f92:	ret    
  408f93:	push   rbp
  408f94:	mov    rbp,rsp
  408f97:	sub    rsp,0x50
  408f9b:	mov    QWORD PTR [rbp-0x28],rdi
  408f9f:	mov    QWORD PTR [rbp-0x30],rsi
  408fa3:	mov    QWORD PTR [rbp-0x38],rdx
  408fa7:	mov    QWORD PTR [rbp-0x40],rcx
  408fab:	mov    QWORD PTR [rbp-0x48],r8
  408faf:	mov    QWORD PTR [rbp-0x50],r9
  408fb3:	mov    rax,QWORD PTR [rbp-0x30]
  408fb7:	mov    QWORD PTR [rbp-0x18],rax
  408fbb:	mov    rdx,QWORD PTR [rbp-0x38]
  408fbf:	mov    rax,QWORD PTR [rbp-0x30]
  408fc3:	mov    rsi,rdx
  408fc6:	mov    rdi,rax
  408fc9:	call   405756 <_start@@Base+0x5f6>
  408fce:	mov    QWORD PTR [rbp-0x10],rax
  408fd2:	movabs rax,0x477265656dffffff
  408fdc:	cmp    QWORD PTR [rbp-0x10],rax
  408fe0:	ja     409068 <_start@@Base+0x3f08>
  408fe6:	movabs rax,0xffffffff00000000
  408ff0:	and    rax,QWORD PTR [rbp-0x10]
  408ff4:	mov    rdx,rax
  408ff7:	movabs rax,0x426c756500000000
  409001:	cmp    rdx,rax
  409004:	jne    40905f <_start@@Base+0x3eff>
  409006:	mov    rax,QWORD PTR [rbp-0x30]
  40900a:	mov    QWORD PTR [rbp-0x8],rax
  40900e:	mov    rcx,QWORD PTR [rbp-0x50]
  409012:	mov    rdx,QWORD PTR [rbp-0x38]
  409016:	mov    rsi,QWORD PTR [rbp-0x8]
  40901a:	mov    rax,QWORD PTR [rbp-0x28]
  40901e:	mov    r8,rcx
  409021:	mov    ecx,0x4
  409026:	mov    rdi,rax
  409029:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  40902e:	mov    QWORD PTR [rbp-0x30],rax
  409032:	mov    rax,QWORD PTR [rbp-0x30]
  409036:	cmp    rax,QWORD PTR [rbp-0x8]
  40903a:	je     409056 <_start@@Base+0x3ef6>
  40903c:	mov    rax,QWORD PTR [rbp-0x48]
  409040:	mov    QWORD PTR [rax],0x8
  409047:	mov    rax,QWORD PTR [rbp-0x40]
  40904b:	mov    DWORD PTR [rax],0x0
  409051:	jmp    409150 <_start@@Base+0x3ff0>
  409056:	mov    rax,QWORD PTR [rbp-0x18]
  40905a:	jmp    409154 <_start@@Base+0x3ff4>
  40905f:	mov    rax,QWORD PTR [rbp-0x18]
  409063:	jmp    409154 <_start@@Base+0x3ff4>
  409068:	movabs rax,0xffffff0000000000
  409072:	and    rax,QWORD PTR [rbp-0x10]
  409076:	mov    rdx,rax
  409079:	movabs rax,0x5265640000000000
  409083:	cmp    rdx,rax
  409086:	jne    4090db <_start@@Base+0x3f7b>
  409088:	mov    rax,QWORD PTR [rbp-0x30]
  40908c:	mov    QWORD PTR [rbp-0x8],rax
  409090:	mov    rcx,QWORD PTR [rbp-0x50]
  409094:	mov    rdx,QWORD PTR [rbp-0x38]
  409098:	mov    rsi,QWORD PTR [rbp-0x8]
  40909c:	mov    rax,QWORD PTR [rbp-0x28]
  4090a0:	mov    r8,rcx
  4090a3:	mov    ecx,0x3
  4090a8:	mov    rdi,rax
  4090ab:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  4090b0:	mov    QWORD PTR [rbp-0x30],rax
  4090b4:	mov    rax,QWORD PTR [rbp-0x30]
  4090b8:	cmp    rax,QWORD PTR [rbp-0x8]
  4090bc:	je     4090d5 <_start@@Base+0x3f75>
  4090be:	mov    rax,QWORD PTR [rbp-0x48]
  4090c2:	mov    QWORD PTR [rax],0x1
  4090c9:	mov    rax,QWORD PTR [rbp-0x40]
  4090cd:	mov    DWORD PTR [rax],0x0
  4090d3:	jmp    409150 <_start@@Base+0x3ff0>
  4090d5:	mov    rax,QWORD PTR [rbp-0x18]
  4090d9:	jmp    409154 <_start@@Base+0x3ff4>
  4090db:	mov    rax,QWORD PTR [rbp-0x10]
  4090df:	and    rax,0xffffffffff000000
  4090e5:	mov    rdx,rax
  4090e8:	movabs rax,0x477265656e000000
  4090f2:	cmp    rdx,rax
  4090f5:	jne    40914a <_start@@Base+0x3fea>
  4090f7:	mov    rax,QWORD PTR [rbp-0x30]
  4090fb:	mov    QWORD PTR [rbp-0x8],rax
  4090ff:	mov    rcx,QWORD PTR [rbp-0x50]
  409103:	mov    rdx,QWORD PTR [rbp-0x38]
  409107:	mov    rsi,QWORD PTR [rbp-0x8]
  40910b:	mov    rax,QWORD PTR [rbp-0x28]
  40910f:	mov    r8,rcx
  409112:	mov    ecx,0x5
  409117:	mov    rdi,rax
  40911a:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  40911f:	mov    QWORD PTR [rbp-0x30],rax
  409123:	mov    rax,QWORD PTR [rbp-0x30]
  409127:	cmp    rax,QWORD PTR [rbp-0x8]
  40912b:	je     409144 <_start@@Base+0x3fe4>
  40912d:	mov    rax,QWORD PTR [rbp-0x48]
  409131:	mov    QWORD PTR [rax],0x2
  409138:	mov    rax,QWORD PTR [rbp-0x40]
  40913c:	mov    DWORD PTR [rax],0x0
  409142:	jmp    409150 <_start@@Base+0x3ff0>
  409144:	mov    rax,QWORD PTR [rbp-0x18]
  409148:	jmp    409154 <_start@@Base+0x3ff4>
  40914a:	mov    rax,QWORD PTR [rbp-0x18]
  40914e:	jmp    409154 <_start@@Base+0x3ff4>
  409150:	mov    rax,QWORD PTR [rbp-0x30]
  409154:	leave  
  409155:	ret    
  409156:	push   rbp
  409157:	mov    rbp,rsp
  40915a:	sub    rsp,0x30
  40915e:	mov    QWORD PTR [rbp-0x8],rdi
  409162:	mov    QWORD PTR [rbp-0x10],rsi
  409166:	mov    QWORD PTR [rbp-0x18],rdx
  40916a:	mov    eax,ecx
  40916c:	mov    QWORD PTR [rbp-0x28],r8
  409170:	mov    BYTE PTR [rbp-0x1c],al
  409173:	mov    rax,QWORD PTR [rbp-0x28]
  409177:	mov    DWORD PTR [rax],0x0
  40917d:	movzx  eax,BYTE PTR [rbp-0x1c]
  409181:	cmp    eax,0x4
  409184:	ja     409244 <_start@@Base+0x40e4>
  40918a:	mov    eax,eax
  40918c:	lea    rdx,[rax*4+0x0]
  409194:	lea    rax,[rip+0x2bead]        # 435048 <_IO_stdin_used@@Base+0x48>
  40919b:	mov    eax,DWORD PTR [rdx+rax*1]
  40919e:	movsxd rdx,eax
  4091a1:	lea    rax,[rip+0x2bea0]        # 435048 <_IO_stdin_used@@Base+0x48>
  4091a8:	add    rax,rdx
  4091ab:	jmp    rax
  4091ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4091b1:	mov    rcx,QWORD PTR [rbp-0x10]
  4091b5:	mov    rax,QWORD PTR [rbp-0x8]
  4091b9:	mov    rsi,rcx
  4091bc:	mov    rdi,rax
  4091bf:	call   40629c <_start@@Base+0x113c>
  4091c4:	jmp    4092c0 <_start@@Base+0x4160>
  4091c9:	mov    rcx,QWORD PTR [rbp-0x28]
  4091cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4091d1:	mov    rsi,QWORD PTR [rbp-0x10]
  4091d5:	mov    rax,QWORD PTR [rbp-0x8]
  4091d9:	mov    rdi,rax
  4091dc:	call   40e0e4 <_start@@Base+0x8f84>
  4091e1:	mov    QWORD PTR [rbp-0x10],rax
  4091e5:	jmp    409286 <_start@@Base+0x4126>
  4091ea:	mov    rcx,QWORD PTR [rbp-0x28]
  4091ee:	mov    rdx,QWORD PTR [rbp-0x18]
  4091f2:	mov    rsi,QWORD PTR [rbp-0x10]
  4091f6:	mov    rax,QWORD PTR [rbp-0x8]
  4091fa:	mov    rdi,rax
  4091fd:	call   409f1e <_start@@Base+0x4dbe>
  409202:	mov    QWORD PTR [rbp-0x10],rax
  409206:	jmp    409286 <_start@@Base+0x4126>
  409208:	mov    rcx,QWORD PTR [rbp-0x28]
  40920c:	mov    rdx,QWORD PTR [rbp-0x18]
  409210:	mov    rsi,QWORD PTR [rbp-0x10]
  409214:	mov    rax,QWORD PTR [rbp-0x8]
  409218:	mov    rdi,rax
  40921b:	call   4085ce <_start@@Base+0x346e>
  409220:	mov    QWORD PTR [rbp-0x10],rax
  409224:	jmp    409286 <_start@@Base+0x4126>
  409226:	mov    rcx,QWORD PTR [rbp-0x28]
  40922a:	mov    rdx,QWORD PTR [rbp-0x18]
  40922e:	mov    rsi,QWORD PTR [rbp-0x10]
  409232:	mov    rax,QWORD PTR [rbp-0x8]
  409236:	mov    rdi,rax
  409239:	call   40bfa9 <_start@@Base+0x6e49>
  40923e:	mov    QWORD PTR [rbp-0x10],rax
  409242:	jmp    409286 <_start@@Base+0x4126>
  409244:	mov    rax,QWORD PTR [rbp-0x8]
  409248:	mov    eax,DWORD PTR [rax+0x10]
  40924b:	and    eax,0x1
  40924e:	test   eax,eax
  409250:	jne    40926d <_start@@Base+0x410d>
  409252:	mov    rdx,QWORD PTR [rbp-0x18]
  409256:	mov    rsi,QWORD PTR [rbp-0x10]
  40925a:	mov    rax,QWORD PTR [rbp-0x8]
  40925e:	mov    ecx,0xf
  409263:	mov    rdi,rax
  409266:	call   425bce <flatcc_json_parser_set_error@@Base>
  40926b:	jmp    4092c0 <_start@@Base+0x4160>
  40926d:	mov    rdx,QWORD PTR [rbp-0x18]
  409271:	mov    rcx,QWORD PTR [rbp-0x10]
  409275:	mov    rax,QWORD PTR [rbp-0x8]
  409279:	mov    rsi,rcx
  40927c:	mov    rdi,rax
  40927f:	call   426bfb <flatcc_json_parser_generic_json@@Base>
  409284:	jmp    4092c0 <_start@@Base+0x4160>
  409286:	mov    rax,QWORD PTR [rbp-0x8]
  40928a:	mov    eax,DWORD PTR [rax+0x1c]
  40928d:	test   eax,eax
  40928f:	je     409297 <_start@@Base+0x4137>
  409291:	mov    rax,QWORD PTR [rbp-0x10]
  409295:	jmp    4092c0 <_start@@Base+0x4160>
  409297:	mov    rax,QWORD PTR [rbp-0x28]
  40929b:	mov    eax,DWORD PTR [rax]
  40929d:	test   eax,eax
  40929f:	jne    4092bc <_start@@Base+0x415c>
  4092a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4092a5:	mov    rsi,QWORD PTR [rbp-0x10]
  4092a9:	mov    rax,QWORD PTR [rbp-0x8]
  4092ad:	mov    ecx,0x21
  4092b2:	mov    rdi,rax
  4092b5:	call   425bce <flatcc_json_parser_set_error@@Base>
  4092ba:	jmp    4092c0 <_start@@Base+0x4160>
  4092bc:	mov    rax,QWORD PTR [rbp-0x10]
  4092c0:	leave  
  4092c1:	ret    
  4092c2:	push   rbp
  4092c3:	mov    rbp,rsp
  4092c6:	mov    eax,edi
  4092c8:	mov    BYTE PTR [rbp-0x4],al
  4092cb:	movzx  eax,BYTE PTR [rbp-0x4]
  4092cf:	cmp    eax,0x4
  4092d2:	ja     40931a <_start@@Base+0x41ba>
  4092d4:	mov    eax,eax
  4092d6:	lea    rdx,[rax*4+0x0]
  4092de:	lea    rax,[rip+0x2bd77]        # 43505c <_IO_stdin_used@@Base+0x5c>
  4092e5:	mov    eax,DWORD PTR [rdx+rax*1]
  4092e8:	movsxd rdx,eax
  4092eb:	lea    rax,[rip+0x2bd6a]        # 43505c <_IO_stdin_used@@Base+0x5c>
  4092f2:	add    rax,rdx
  4092f5:	jmp    rax
  4092f7:	mov    eax,0x1
  4092fc:	jmp    40931f <_start@@Base+0x41bf>
  4092fe:	mov    eax,0x1
  409303:	jmp    40931f <_start@@Base+0x41bf>
  409305:	mov    eax,0x1
  40930a:	jmp    40931f <_start@@Base+0x41bf>
  40930c:	mov    eax,0x1
  409311:	jmp    40931f <_start@@Base+0x41bf>
  409313:	mov    eax,0x1
  409318:	jmp    40931f <_start@@Base+0x41bf>
  40931a:	mov    eax,0x0
  40931f:	pop    rbp
  409320:	ret    
  409321:	push   rbp
  409322:	mov    rbp,rsp
  409325:	sub    rsp,0x50
  409329:	mov    QWORD PTR [rbp-0x28],rdi
  40932d:	mov    QWORD PTR [rbp-0x30],rsi
  409331:	mov    QWORD PTR [rbp-0x38],rdx
  409335:	mov    QWORD PTR [rbp-0x40],rcx
  409339:	mov    QWORD PTR [rbp-0x48],r8
  40933d:	mov    QWORD PTR [rbp-0x50],r9
  409341:	mov    rax,QWORD PTR [rbp-0x30]
  409345:	mov    QWORD PTR [rbp-0x18],rax
  409349:	mov    rdx,QWORD PTR [rbp-0x38]
  40934d:	mov    rax,QWORD PTR [rbp-0x30]
  409351:	mov    rsi,rdx
  409354:	mov    rdi,rax
  409357:	call   405756 <_start@@Base+0x5f6>
  40935c:	mov    QWORD PTR [rbp-0x10],rax
  409360:	movabs rax,0x4d6f6e73746571ff
  40936a:	cmp    QWORD PTR [rbp-0x10],rax
  40936e:	ja     4093f6 <_start@@Base+0x4296>
  409374:	movabs rax,0xffffff0000000000
  40937e:	and    rax,QWORD PTR [rbp-0x10]
  409382:	mov    rdx,rax
  409385:	movabs rax,0x416c740000000000
  40938f:	cmp    rdx,rax
  409392:	jne    4093ed <_start@@Base+0x428d>
  409394:	mov    rax,QWORD PTR [rbp-0x30]
  409398:	mov    QWORD PTR [rbp-0x8],rax
  40939c:	mov    rcx,QWORD PTR [rbp-0x50]
  4093a0:	mov    rdx,QWORD PTR [rbp-0x38]
  4093a4:	mov    rsi,QWORD PTR [rbp-0x8]
  4093a8:	mov    rax,QWORD PTR [rbp-0x28]
  4093ac:	mov    r8,rcx
  4093af:	mov    ecx,0x3
  4093b4:	mov    rdi,rax
  4093b7:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  4093bc:	mov    QWORD PTR [rbp-0x30],rax
  4093c0:	mov    rax,QWORD PTR [rbp-0x30]
  4093c4:	cmp    rax,QWORD PTR [rbp-0x8]
  4093c8:	je     4093e4 <_start@@Base+0x4284>
  4093ca:	mov    rax,QWORD PTR [rbp-0x48]
  4093ce:	mov    QWORD PTR [rax],0x4
  4093d5:	mov    rax,QWORD PTR [rbp-0x40]
  4093d9:	mov    DWORD PTR [rax],0x0
  4093df:	jmp    40961a <_start@@Base+0x44ba>
  4093e4:	mov    rax,QWORD PTR [rbp-0x18]
  4093e8:	jmp    40961e <_start@@Base+0x44be>
  4093ed:	mov    rax,QWORD PTR [rbp-0x18]
  4093f1:	jmp    40961e <_start@@Base+0x44be>
  4093f6:	movabs rax,0x4d6f6e7374657232
  409400:	cmp    QWORD PTR [rbp-0x10],rax
  409404:	jne    40945a <_start@@Base+0x42fa>
  409406:	mov    rax,QWORD PTR [rbp-0x30]
  40940a:	mov    QWORD PTR [rbp-0x8],rax
  40940e:	mov    rcx,QWORD PTR [rbp-0x50]
  409412:	mov    rdx,QWORD PTR [rbp-0x38]
  409416:	mov    rsi,QWORD PTR [rbp-0x8]
  40941a:	mov    rax,QWORD PTR [rbp-0x28]
  40941e:	mov    r8,rcx
  409421:	mov    ecx,0x8
  409426:	mov    rdi,rax
  409429:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  40942e:	mov    QWORD PTR [rbp-0x30],rax
  409432:	mov    rax,QWORD PTR [rbp-0x30]
  409436:	cmp    rax,QWORD PTR [rbp-0x8]
  40943a:	je     4094c2 <_start@@Base+0x4362>
  409440:	mov    rax,QWORD PTR [rbp-0x48]
  409444:	mov    QWORD PTR [rax],0x3
  40944b:	mov    rax,QWORD PTR [rbp-0x40]
  40944f:	mov    DWORD PTR [rax],0x0
  409455:	jmp    40961a <_start@@Base+0x44ba>
  40945a:	mov    rax,QWORD PTR [rbp-0x10]
  40945e:	mov    al,0x0
  409460:	mov    rdx,rax
  409463:	movabs rax,0x4d6f6e7374657200
  40946d:	cmp    rdx,rax
  409470:	jne    4094c5 <_start@@Base+0x4365>
  409472:	mov    rax,QWORD PTR [rbp-0x30]
  409476:	mov    QWORD PTR [rbp-0x8],rax
  40947a:	mov    rcx,QWORD PTR [rbp-0x50]
  40947e:	mov    rdx,QWORD PTR [rbp-0x38]
  409482:	mov    rsi,QWORD PTR [rbp-0x8]
  409486:	mov    rax,QWORD PTR [rbp-0x28]
  40948a:	mov    r8,rcx
  40948d:	mov    ecx,0x7
  409492:	mov    rdi,rax
  409495:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  40949a:	mov    QWORD PTR [rbp-0x30],rax
  40949e:	mov    rax,QWORD PTR [rbp-0x30]
  4094a2:	cmp    rax,QWORD PTR [rbp-0x8]
  4094a6:	je     4094c8 <_start@@Base+0x4368>
  4094a8:	mov    rax,QWORD PTR [rbp-0x48]
  4094ac:	mov    QWORD PTR [rax],0x1
  4094b3:	mov    rax,QWORD PTR [rbp-0x40]
  4094b7:	mov    DWORD PTR [rax],0x0
  4094bd:	jmp    40961a <_start@@Base+0x44ba>
  4094c2:	nop
  4094c3:	jmp    4094c9 <_start@@Base+0x4369>
  4094c5:	nop
  4094c6:	jmp    4094c9 <_start@@Base+0x4369>
  4094c8:	nop
  4094c9:	movabs rax,0xffffffff00000000
  4094d3:	and    rax,QWORD PTR [rbp-0x10]
  4094d7:	mov    rdx,rax
  4094da:	movabs rax,0x4e4f4e4500000000
  4094e4:	cmp    rdx,rax
  4094e7:	jne    409539 <_start@@Base+0x43d9>
  4094e9:	mov    rax,QWORD PTR [rbp-0x30]
  4094ed:	mov    QWORD PTR [rbp-0x8],rax
  4094f1:	mov    rcx,QWORD PTR [rbp-0x50]
  4094f5:	mov    rdx,QWORD PTR [rbp-0x38]
  4094f9:	mov    rsi,QWORD PTR [rbp-0x8]
  4094fd:	mov    rax,QWORD PTR [rbp-0x28]
  409501:	mov    r8,rcx
  409504:	mov    ecx,0x4
  409509:	mov    rdi,rax
  40950c:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  409511:	mov    QWORD PTR [rbp-0x30],rax
  409515:	mov    rax,QWORD PTR [rbp-0x30]
  409519:	cmp    rax,QWORD PTR [rbp-0x8]
  40951d:	je     40953c <_start@@Base+0x43dc>
  40951f:	mov    rax,QWORD PTR [rbp-0x48]
  409523:	mov    QWORD PTR [rax],0x0
  40952a:	mov    rax,QWORD PTR [rbp-0x40]
  40952e:	mov    DWORD PTR [rax],0x0
  409534:	jmp    40961a <_start@@Base+0x44ba>
  409539:	nop
  40953a:	jmp    40953d <_start@@Base+0x43dd>
  40953c:	nop
  40953d:	movabs rax,0x5465737453696d70
  409547:	cmp    QWORD PTR [rbp-0x10],rax
  40954b:	jne    409614 <_start@@Base+0x44b4>
  409551:	add    QWORD PTR [rbp-0x30],0x8
  409556:	mov    rdx,QWORD PTR [rbp-0x38]
  40955a:	mov    rax,QWORD PTR [rbp-0x30]
  40955e:	mov    rsi,rdx
  409561:	mov    rdi,rax
  409564:	call   405756 <_start@@Base+0x5f6>
  409569:	mov    QWORD PTR [rbp-0x10],rax
  40956d:	movabs rax,0x6c655461626c6557
  409577:	cmp    QWORD PTR [rbp-0x10],rax
  40957b:	jne    40960e <_start@@Base+0x44ae>
  409581:	add    QWORD PTR [rbp-0x30],0x8
  409586:	mov    rdx,QWORD PTR [rbp-0x38]
  40958a:	mov    rax,QWORD PTR [rbp-0x30]
  40958e:	mov    rsi,rdx
  409591:	mov    rdi,rax
  409594:	call   405756 <_start@@Base+0x5f6>
  409599:	mov    QWORD PTR [rbp-0x10],rax
  40959d:	mov    rax,QWORD PTR [rbp-0x10]
  4095a1:	mov    al,0x0
  4095a3:	mov    rdx,rax
  4095a6:	movabs rax,0x697468456e756d00
  4095b0:	cmp    rdx,rax
  4095b3:	jne    409608 <_start@@Base+0x44a8>
  4095b5:	mov    rax,QWORD PTR [rbp-0x30]
  4095b9:	mov    QWORD PTR [rbp-0x8],rax
  4095bd:	mov    rcx,QWORD PTR [rbp-0x50]
  4095c1:	mov    rdx,QWORD PTR [rbp-0x38]
  4095c5:	mov    rsi,QWORD PTR [rbp-0x8]
  4095c9:	mov    rax,QWORD PTR [rbp-0x28]
  4095cd:	mov    r8,rcx
  4095d0:	mov    ecx,0x7
  4095d5:	mov    rdi,rax
  4095d8:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  4095dd:	mov    QWORD PTR [rbp-0x30],rax
  4095e1:	mov    rax,QWORD PTR [rbp-0x30]
  4095e5:	cmp    rax,QWORD PTR [rbp-0x8]
  4095e9:	je     409602 <_start@@Base+0x44a2>
  4095eb:	mov    rax,QWORD PTR [rbp-0x48]
  4095ef:	mov    QWORD PTR [rax],0x2
  4095f6:	mov    rax,QWORD PTR [rbp-0x40]
  4095fa:	mov    DWORD PTR [rax],0x0
  409600:	jmp    40961a <_start@@Base+0x44ba>
  409602:	mov    rax,QWORD PTR [rbp-0x18]
  409606:	jmp    40961e <_start@@Base+0x44be>
  409608:	mov    rax,QWORD PTR [rbp-0x18]
  40960c:	jmp    40961e <_start@@Base+0x44be>
  40960e:	mov    rax,QWORD PTR [rbp-0x18]
  409612:	jmp    40961e <_start@@Base+0x44be>
  409614:	mov    rax,QWORD PTR [rbp-0x18]
  409618:	jmp    40961e <_start@@Base+0x44be>
  40961a:	mov    rax,QWORD PTR [rbp-0x30]
  40961e:	leave  
  40961f:	ret    
  409620:	push   rbp
  409621:	mov    rbp,rsp
  409624:	sub    rsp,0x50
  409628:	mov    QWORD PTR [rbp-0x38],rdi
  40962c:	mov    QWORD PTR [rbp-0x40],rsi
  409630:	mov    QWORD PTR [rbp-0x48],rdx
  409634:	mov    QWORD PTR [rbp-0x50],rcx
  409638:	mov    rax,QWORD PTR fs:0x28
  409641:	mov    QWORD PTR [rbp-0x8],rax
  409645:	xor    eax,eax
  409647:	lea    rcx,[rbp-0x24]
  40964b:	mov    rdx,QWORD PTR [rbp-0x48]
  40964f:	mov    rsi,QWORD PTR [rbp-0x40]
  409653:	mov    rax,QWORD PTR [rbp-0x38]
  409657:	mov    rdi,rax
  40965a:	call   405852 <_start@@Base+0x6f2>
  40965f:	mov    QWORD PTR [rbp-0x40],rax
  409663:	jmp    4098f7 <_start@@Base+0x4797>
  409668:	mov    rdx,QWORD PTR [rbp-0x48]
  40966c:	mov    rcx,QWORD PTR [rbp-0x40]
  409670:	mov    rax,QWORD PTR [rbp-0x38]
  409674:	mov    rsi,rcx
  409677:	mov    rdi,rax
  40967a:	call   4055e5 <_start@@Base+0x485>
  40967f:	mov    QWORD PTR [rbp-0x40],rax
  409683:	mov    rdx,QWORD PTR [rbp-0x48]
  409687:	mov    rax,QWORD PTR [rbp-0x40]
  40968b:	mov    rsi,rdx
  40968e:	mov    rdi,rax
  409691:	call   405756 <_start@@Base+0x5f6>
  409696:	mov    QWORD PTR [rbp-0x20],rax
  40969a:	movabs rax,0xff00000000000000
  4096a4:	and    rax,QWORD PTR [rbp-0x20]
  4096a8:	mov    rdx,rax
  4096ab:	movabs rax,0x6200000000000000
  4096b5:	cmp    rdx,rax
  4096b8:	jne    4097b3 <_start@@Base+0x4653>
  4096be:	mov    rax,QWORD PTR [rbp-0x40]
  4096c2:	mov    QWORD PTR [rbp-0x18],rax
  4096c6:	mov    rdx,QWORD PTR [rbp-0x48]
  4096ca:	mov    rsi,QWORD PTR [rbp-0x18]
  4096ce:	mov    rax,QWORD PTR [rbp-0x38]
  4096d2:	mov    ecx,0x1
  4096d7:	mov    rdi,rax
  4096da:	call   405c48 <_start@@Base+0xae8>
  4096df:	mov    QWORD PTR [rbp-0x40],rax
  4096e3:	mov    rax,QWORD PTR [rbp-0x18]
  4096e7:	cmp    rax,QWORD PTR [rbp-0x40]
  4096eb:	je     409793 <_start@@Base+0x4633>
  4096f1:	mov    BYTE PTR [rbp-0x26],0x0
  4096f5:	mov    rax,QWORD PTR [rbp-0x50]
  4096f9:	add    rax,0x2
  4096fd:	mov    QWORD PTR [rbp-0x10],rax
  409701:	mov    rax,QWORD PTR [rbp-0x40]
  409705:	mov    QWORD PTR [rbp-0x18],rax
  409709:	lea    rcx,[rbp-0x26]
  40970d:	mov    rdx,QWORD PTR [rbp-0x48]
  409711:	mov    rsi,QWORD PTR [rbp-0x18]
  409715:	mov    rax,QWORD PTR [rbp-0x38]
  409719:	mov    rdi,rax
  40971c:	call   40686c <_start@@Base+0x170c>
  409721:	mov    QWORD PTR [rbp-0x40],rax
  409725:	mov    rax,QWORD PTR [rbp-0x18]
  409729:	cmp    rax,QWORD PTR [rbp-0x40]
  40972d:	jne    409779 <_start@@Base+0x4619>
  40972f:	mov    rax,QWORD PTR [rbp-0x40]
  409733:	mov    QWORD PTR [rbp-0x18],rax
  409737:	lea    rcx,[rbp-0x26]
  40973b:	mov    rdx,QWORD PTR [rbp-0x48]
  40973f:	mov    rsi,QWORD PTR [rbp-0x18]
  409743:	mov    rax,QWORD PTR [rbp-0x38]
  409747:	mov    r8,rcx
  40974a:	lea    rcx,[rip+0x3a98f]        # 4440e0 <__data_start@@Base+0x20>
  409751:	mov    rdi,rax
  409754:	call   4073a4 <_start@@Base+0x2244>
  409759:	mov    QWORD PTR [rbp-0x40],rax
  40975d:	mov    rax,QWORD PTR [rbp-0x40]
  409761:	cmp    rax,QWORD PTR [rbp-0x18]
  409765:	je     409908 <_start@@Base+0x47a8>
  40976b:	mov    rax,QWORD PTR [rbp-0x40]
  40976f:	cmp    rax,QWORD PTR [rbp-0x48]
  409773:	je     409908 <_start@@Base+0x47a8>
  409779:	movzx  eax,BYTE PTR [rbp-0x26]
  40977d:	movsx  edx,al
  409780:	mov    rax,QWORD PTR [rbp-0x10]
  409784:	mov    esi,edx
  409786:	mov    rdi,rax
  409789:	call   40534b <_start@@Base+0x1eb>
  40978e:	jmp    4098db <_start@@Base+0x477b>
  409793:	mov    rdx,QWORD PTR [rbp-0x48]
  409797:	mov    rcx,QWORD PTR [rbp-0x40]
  40979b:	mov    rax,QWORD PTR [rbp-0x38]
  40979f:	mov    rsi,rcx
  4097a2:	mov    rdi,rax
  4097a5:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4097aa:	mov    QWORD PTR [rbp-0x40],rax
  4097ae:	jmp    4098db <_start@@Base+0x477b>
  4097b3:	movabs rax,0xff00000000000000
  4097bd:	and    rax,QWORD PTR [rbp-0x20]
  4097c1:	mov    rdx,rax
  4097c4:	movabs rax,0x6100000000000000
  4097ce:	cmp    rdx,rax
  4097d1:	jne    4098c0 <_start@@Base+0x4760>
  4097d7:	mov    rax,QWORD PTR [rbp-0x40]
  4097db:	mov    QWORD PTR [rbp-0x18],rax
  4097df:	mov    rdx,QWORD PTR [rbp-0x48]
  4097e3:	mov    rsi,QWORD PTR [rbp-0x18]
  4097e7:	mov    rax,QWORD PTR [rbp-0x38]
  4097eb:	mov    ecx,0x1
  4097f0:	mov    rdi,rax
  4097f3:	call   405c48 <_start@@Base+0xae8>
  4097f8:	mov    QWORD PTR [rbp-0x40],rax
  4097fc:	mov    rax,QWORD PTR [rbp-0x18]
  409800:	cmp    rax,QWORD PTR [rbp-0x40]
  409804:	je     4098a3 <_start@@Base+0x4743>
  40980a:	mov    WORD PTR [rbp-0x26],0x0
  409810:	mov    rax,QWORD PTR [rbp-0x50]
  409814:	mov    QWORD PTR [rbp-0x10],rax
  409818:	mov    rax,QWORD PTR [rbp-0x40]
  40981c:	mov    QWORD PTR [rbp-0x18],rax
  409820:	lea    rcx,[rbp-0x26]
  409824:	mov    rdx,QWORD PTR [rbp-0x48]
  409828:	mov    rsi,QWORD PTR [rbp-0x18]
  40982c:	mov    rax,QWORD PTR [rbp-0x38]
  409830:	mov    rdi,rax
  409833:	call   4067a7 <_start@@Base+0x1647>
  409838:	mov    QWORD PTR [rbp-0x40],rax
  40983c:	mov    rax,QWORD PTR [rbp-0x18]
  409840:	cmp    rax,QWORD PTR [rbp-0x40]
  409844:	jne    40988c <_start@@Base+0x472c>
  409846:	mov    rax,QWORD PTR [rbp-0x40]
  40984a:	mov    QWORD PTR [rbp-0x18],rax
  40984e:	lea    rcx,[rbp-0x26]
  409852:	mov    rdx,QWORD PTR [rbp-0x48]
  409856:	mov    rsi,QWORD PTR [rbp-0x18]
  40985a:	mov    rax,QWORD PTR [rbp-0x38]
  40985e:	mov    r8,rcx
  409861:	lea    rcx,[rip+0x3a898]        # 444100 <__data_start@@Base+0x40>
  409868:	mov    rdi,rax
  40986b:	call   407246 <_start@@Base+0x20e6>
  409870:	mov    QWORD PTR [rbp-0x40],rax
  409874:	mov    rax,QWORD PTR [rbp-0x40]
  409878:	cmp    rax,QWORD PTR [rbp-0x18]
  40987c:	je     409908 <_start@@Base+0x47a8>
  409882:	mov    rax,QWORD PTR [rbp-0x40]
  409886:	cmp    rax,QWORD PTR [rbp-0x48]
  40988a:	je     409908 <_start@@Base+0x47a8>
  40988c:	movzx  eax,WORD PTR [rbp-0x26]
  409890:	movsx  edx,ax
  409893:	mov    rax,QWORD PTR [rbp-0x10]
  409897:	mov    esi,edx
  409899:	mov    rdi,rax
  40989c:	call   405382 <_start@@Base+0x222>
  4098a1:	jmp    4098db <_start@@Base+0x477b>
  4098a3:	mov    rdx,QWORD PTR [rbp-0x48]
  4098a7:	mov    rcx,QWORD PTR [rbp-0x40]
  4098ab:	mov    rax,QWORD PTR [rbp-0x38]
  4098af:	mov    rsi,rcx
  4098b2:	mov    rdi,rax
  4098b5:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4098ba:	mov    QWORD PTR [rbp-0x40],rax
  4098be:	jmp    4098db <_start@@Base+0x477b>
  4098c0:	mov    rdx,QWORD PTR [rbp-0x48]
  4098c4:	mov    rcx,QWORD PTR [rbp-0x40]
  4098c8:	mov    rax,QWORD PTR [rbp-0x38]
  4098cc:	mov    rsi,rcx
  4098cf:	mov    rdi,rax
  4098d2:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4098d7:	mov    QWORD PTR [rbp-0x40],rax
  4098db:	lea    rcx,[rbp-0x24]
  4098df:	mov    rdx,QWORD PTR [rbp-0x48]
  4098e3:	mov    rsi,QWORD PTR [rbp-0x40]
  4098e7:	mov    rax,QWORD PTR [rbp-0x38]
  4098eb:	mov    rdi,rax
  4098ee:	call   40590f <_start@@Base+0x7af>
  4098f3:	mov    QWORD PTR [rbp-0x40],rax
  4098f7:	mov    eax,DWORD PTR [rbp-0x24]
  4098fa:	test   eax,eax
  4098fc:	jne    409668 <_start@@Base+0x4508>
  409902:	mov    rax,QWORD PTR [rbp-0x40]
  409906:	jmp    409921 <_start@@Base+0x47c1>
  409908:	mov    rdx,QWORD PTR [rbp-0x48]
  40990c:	mov    rsi,QWORD PTR [rbp-0x40]
  409910:	mov    rax,QWORD PTR [rbp-0x38]
  409914:	mov    ecx,0x21
  409919:	mov    rdi,rax
  40991c:	call   425bce <flatcc_json_parser_set_error@@Base>
  409921:	mov    rdi,QWORD PTR [rbp-0x8]
  409925:	xor    rdi,QWORD PTR fs:0x28
  40992e:	je     409935 <_start@@Base+0x47d5>
  409930:	call   405070 <__stack_chk_fail@plt>
  409935:	leave  
  409936:	ret    
  409937:	push   rbp
  409938:	mov    rbp,rsp
  40993b:	sub    rsp,0x30
  40993f:	mov    QWORD PTR [rbp-0x18],rdi
  409943:	mov    QWORD PTR [rbp-0x20],rsi
  409947:	mov    QWORD PTR [rbp-0x28],rdx
  40994b:	mov    QWORD PTR [rbp-0x30],rcx
  40994f:	mov    rax,QWORD PTR [rbp-0x30]
  409953:	mov    DWORD PTR [rax],0x0
  409959:	mov    rax,QWORD PTR [rbp-0x18]
  40995d:	mov    rax,QWORD PTR [rax]
  409960:	mov    edx,0x2
  409965:	mov    esi,0x4
  40996a:	mov    rdi,rax
  40996d:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  409972:	mov    QWORD PTR [rbp-0x8],rax
  409976:	cmp    QWORD PTR [rbp-0x8],0x0
  40997b:	je     4099ca <_start@@Base+0x486a>
  40997d:	mov    rcx,QWORD PTR [rbp-0x8]
  409981:	mov    rdx,QWORD PTR [rbp-0x28]
  409985:	mov    rsi,QWORD PTR [rbp-0x20]
  409989:	mov    rax,QWORD PTR [rbp-0x18]
  40998d:	mov    rdi,rax
  409990:	call   409620 <_start@@Base+0x44c0>
  409995:	mov    QWORD PTR [rbp-0x20],rax
  409999:	mov    rax,QWORD PTR [rbp-0x20]
  40999d:	cmp    rax,QWORD PTR [rbp-0x28]
  4099a1:	je     4099cb <_start@@Base+0x486b>
  4099a3:	mov    rax,QWORD PTR [rbp-0x18]
  4099a7:	mov    rax,QWORD PTR [rax]
  4099aa:	mov    rdi,rax
  4099ad:	call   41c263 <flatcc_builder_end_struct@@Base>
  4099b2:	mov    edx,eax
  4099b4:	mov    rax,QWORD PTR [rbp-0x30]
  4099b8:	mov    DWORD PTR [rax],edx
  4099ba:	mov    rax,QWORD PTR [rbp-0x30]
  4099be:	mov    eax,DWORD PTR [rax]
  4099c0:	test   eax,eax
  4099c2:	je     4099cb <_start@@Base+0x486b>
  4099c4:	mov    rax,QWORD PTR [rbp-0x20]
  4099c8:	jmp    4099e4 <_start@@Base+0x4884>
  4099ca:	nop
  4099cb:	mov    rdx,QWORD PTR [rbp-0x28]
  4099cf:	mov    rsi,QWORD PTR [rbp-0x20]
  4099d3:	mov    rax,QWORD PTR [rbp-0x18]
  4099d7:	mov    ecx,0x21
  4099dc:	mov    rdi,rax
  4099df:	call   425bce <flatcc_json_parser_set_error@@Base>
  4099e4:	leave  
  4099e5:	ret    
  4099e6:	push   rbp
  4099e7:	mov    rbp,rsp
  4099ea:	sub    rsp,0x30
  4099ee:	mov    QWORD PTR [rbp-0x18],rdi
  4099f2:	mov    QWORD PTR [rbp-0x20],rsi
  4099f6:	mov    QWORD PTR [rbp-0x28],rdx
  4099fa:	mov    QWORD PTR [rbp-0x30],rcx
  4099fe:	mov    rax,QWORD PTR fs:0x28
  409a07:	mov    QWORD PTR [rbp-0x8],rax
  409a0b:	xor    eax,eax
  409a0d:	lea    rcx,[rbp-0xc]
  409a11:	mov    rdx,QWORD PTR [rbp-0x28]
  409a15:	mov    rsi,QWORD PTR [rbp-0x20]
  409a19:	mov    rax,QWORD PTR [rbp-0x18]
  409a1d:	mov    rdi,rax
  409a20:	call   405852 <_start@@Base+0x6f2>
  409a25:	mov    QWORD PTR [rbp-0x20],rax
  409a29:	jmp    409a62 <_start@@Base+0x4902>
  409a2b:	mov    rdx,QWORD PTR [rbp-0x28]
  409a2f:	mov    rcx,QWORD PTR [rbp-0x20]
  409a33:	mov    rax,QWORD PTR [rbp-0x18]
  409a37:	mov    rsi,rcx
  409a3a:	mov    rdi,rax
  409a3d:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  409a42:	mov    QWORD PTR [rbp-0x20],rax
  409a46:	lea    rcx,[rbp-0xc]
  409a4a:	mov    rdx,QWORD PTR [rbp-0x28]
  409a4e:	mov    rsi,QWORD PTR [rbp-0x20]
  409a52:	mov    rax,QWORD PTR [rbp-0x18]
  409a56:	mov    rdi,rax
  409a59:	call   40590f <_start@@Base+0x7af>
  409a5e:	mov    QWORD PTR [rbp-0x20],rax
  409a62:	mov    eax,DWORD PTR [rbp-0xc]
  409a65:	test   eax,eax
  409a67:	jne    409a2b <_start@@Base+0x48cb>
  409a69:	mov    rax,QWORD PTR [rbp-0x20]
  409a6d:	mov    rdi,QWORD PTR [rbp-0x8]
  409a71:	xor    rdi,QWORD PTR fs:0x28
  409a7a:	je     409a81 <_start@@Base+0x4921>
  409a7c:	call   405070 <__stack_chk_fail@plt>
  409a81:	leave  
  409a82:	ret    
  409a83:	push   rbp
  409a84:	mov    rbp,rsp
  409a87:	sub    rsp,0x30
  409a8b:	mov    QWORD PTR [rbp-0x18],rdi
  409a8f:	mov    QWORD PTR [rbp-0x20],rsi
  409a93:	mov    QWORD PTR [rbp-0x28],rdx
  409a97:	mov    QWORD PTR [rbp-0x30],rcx
  409a9b:	mov    rax,QWORD PTR [rbp-0x30]
  409a9f:	mov    DWORD PTR [rax],0x0
  409aa5:	mov    rax,QWORD PTR [rbp-0x18]
  409aa9:	mov    rax,QWORD PTR [rax]
  409aac:	mov    edx,0x1
  409ab1:	mov    esi,0x0
  409ab6:	mov    rdi,rax
  409ab9:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  409abe:	mov    QWORD PTR [rbp-0x8],rax
  409ac2:	cmp    QWORD PTR [rbp-0x8],0x0
  409ac7:	je     409b16 <_start@@Base+0x49b6>
  409ac9:	mov    rcx,QWORD PTR [rbp-0x8]
  409acd:	mov    rdx,QWORD PTR [rbp-0x28]
  409ad1:	mov    rsi,QWORD PTR [rbp-0x20]
  409ad5:	mov    rax,QWORD PTR [rbp-0x18]
  409ad9:	mov    rdi,rax
  409adc:	call   4099e6 <_start@@Base+0x4886>
  409ae1:	mov    QWORD PTR [rbp-0x20],rax
  409ae5:	mov    rax,QWORD PTR [rbp-0x20]
  409ae9:	cmp    rax,QWORD PTR [rbp-0x28]
  409aed:	je     409b17 <_start@@Base+0x49b7>
  409aef:	mov    rax,QWORD PTR [rbp-0x18]
  409af3:	mov    rax,QWORD PTR [rax]
  409af6:	mov    rdi,rax
  409af9:	call   41c263 <flatcc_builder_end_struct@@Base>
  409afe:	mov    edx,eax
  409b00:	mov    rax,QWORD PTR [rbp-0x30]
  409b04:	mov    DWORD PTR [rax],edx
  409b06:	mov    rax,QWORD PTR [rbp-0x30]
  409b0a:	mov    eax,DWORD PTR [rax]
  409b0c:	test   eax,eax
  409b0e:	je     409b17 <_start@@Base+0x49b7>
  409b10:	mov    rax,QWORD PTR [rbp-0x20]
  409b14:	jmp    409b30 <_start@@Base+0x49d0>
  409b16:	nop
  409b17:	mov    rdx,QWORD PTR [rbp-0x28]
  409b1b:	mov    rsi,QWORD PTR [rbp-0x20]
  409b1f:	mov    rax,QWORD PTR [rbp-0x18]
  409b23:	mov    ecx,0x21
  409b28:	mov    rdi,rax
  409b2b:	call   425bce <flatcc_json_parser_set_error@@Base>
  409b30:	leave  
  409b31:	ret    
  409b32:	push   rbp
  409b33:	mov    rbp,rsp
  409b36:	sub    rsp,0x30
  409b3a:	mov    QWORD PTR [rbp-0x18],rdi
  409b3e:	mov    QWORD PTR [rbp-0x20],rsi
  409b42:	mov    QWORD PTR [rbp-0x28],rdx
  409b46:	mov    QWORD PTR [rbp-0x30],rcx
  409b4a:	mov    rax,QWORD PTR fs:0x28
  409b53:	mov    QWORD PTR [rbp-0x8],rax
  409b57:	xor    eax,eax
  409b59:	mov    rax,QWORD PTR [rbp-0x30]
  409b5d:	mov    DWORD PTR [rax],0x0
  409b63:	mov    rax,QWORD PTR [rbp-0x18]
  409b67:	mov    rax,QWORD PTR [rax]
  409b6a:	mov    esi,0x0
  409b6f:	mov    rdi,rax
  409b72:	call   41ccc9 <flatcc_builder_start_table@@Base>
  409b77:	test   eax,eax
  409b79:	jne    409c28 <_start@@Base+0x4ac8>
  409b7f:	lea    rcx,[rbp-0xc]
  409b83:	mov    rdx,QWORD PTR [rbp-0x28]
  409b87:	mov    rsi,QWORD PTR [rbp-0x20]
  409b8b:	mov    rax,QWORD PTR [rbp-0x18]
  409b8f:	mov    rdi,rax
  409b92:	call   405852 <_start@@Base+0x6f2>
  409b97:	mov    QWORD PTR [rbp-0x20],rax
  409b9b:	jmp    409bef <_start@@Base+0x4a8f>
  409b9d:	mov    rdx,QWORD PTR [rbp-0x28]
  409ba1:	mov    rcx,QWORD PTR [rbp-0x20]
  409ba5:	mov    rax,QWORD PTR [rbp-0x18]
  409ba9:	mov    rsi,rcx
  409bac:	mov    rdi,rax
  409baf:	call   4055e5 <_start@@Base+0x485>
  409bb4:	mov    QWORD PTR [rbp-0x20],rax
  409bb8:	mov    rdx,QWORD PTR [rbp-0x28]
  409bbc:	mov    rcx,QWORD PTR [rbp-0x20]
  409bc0:	mov    rax,QWORD PTR [rbp-0x18]
  409bc4:	mov    rsi,rcx
  409bc7:	mov    rdi,rax
  409bca:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  409bcf:	mov    QWORD PTR [rbp-0x20],rax
  409bd3:	lea    rcx,[rbp-0xc]
  409bd7:	mov    rdx,QWORD PTR [rbp-0x28]
  409bdb:	mov    rsi,QWORD PTR [rbp-0x20]
  409bdf:	mov    rax,QWORD PTR [rbp-0x18]
  409be3:	mov    rdi,rax
  409be6:	call   40590f <_start@@Base+0x7af>
  409beb:	mov    QWORD PTR [rbp-0x20],rax
  409bef:	mov    eax,DWORD PTR [rbp-0xc]
  409bf2:	test   eax,eax
  409bf4:	jne    409b9d <_start@@Base+0x4a3d>
  409bf6:	mov    rax,QWORD PTR [rbp-0x18]
  409bfa:	mov    eax,DWORD PTR [rax+0x1c]
  409bfd:	test   eax,eax
  409bff:	jne    409c2b <_start@@Base+0x4acb>
  409c01:	mov    rax,QWORD PTR [rbp-0x18]
  409c05:	mov    rax,QWORD PTR [rax]
  409c08:	mov    rdi,rax
  409c0b:	call   41d7cb <flatcc_builder_end_table@@Base>
  409c10:	mov    edx,eax
  409c12:	mov    rax,QWORD PTR [rbp-0x30]
  409c16:	mov    DWORD PTR [rax],edx
  409c18:	mov    rax,QWORD PTR [rbp-0x30]
  409c1c:	mov    eax,DWORD PTR [rax]
  409c1e:	test   eax,eax
  409c20:	je     409c2e <_start@@Base+0x4ace>
  409c22:	mov    rax,QWORD PTR [rbp-0x20]
  409c26:	jmp    409c48 <_start@@Base+0x4ae8>
  409c28:	nop
  409c29:	jmp    409c2f <_start@@Base+0x4acf>
  409c2b:	nop
  409c2c:	jmp    409c2f <_start@@Base+0x4acf>
  409c2e:	nop
  409c2f:	mov    rdx,QWORD PTR [rbp-0x28]
  409c33:	mov    rsi,QWORD PTR [rbp-0x20]
  409c37:	mov    rax,QWORD PTR [rbp-0x18]
  409c3b:	mov    ecx,0x21
  409c40:	mov    rdi,rax
  409c43:	call   425bce <flatcc_json_parser_set_error@@Base>
  409c48:	mov    rdi,QWORD PTR [rbp-0x8]
  409c4c:	xor    rdi,QWORD PTR fs:0x28
  409c55:	je     409c5c <_start@@Base+0x4afc>
  409c57:	call   405070 <__stack_chk_fail@plt>
  409c5c:	leave  
  409c5d:	ret    
  409c5e:	push   rbp
  409c5f:	mov    rbp,rsp
  409c62:	sub    rsp,0x50
  409c66:	mov    QWORD PTR [rbp-0x38],rdi
  409c6a:	mov    QWORD PTR [rbp-0x40],rsi
  409c6e:	mov    QWORD PTR [rbp-0x48],rdx
  409c72:	mov    QWORD PTR [rbp-0x50],rcx
  409c76:	mov    rax,QWORD PTR fs:0x28
  409c7f:	mov    QWORD PTR [rbp-0x8],rax
  409c83:	xor    eax,eax
  409c85:	mov    rax,QWORD PTR [rbp-0x50]
  409c89:	mov    DWORD PTR [rax],0x0
  409c8f:	mov    rax,QWORD PTR [rbp-0x38]
  409c93:	mov    rax,QWORD PTR [rax]
  409c96:	mov    esi,0x1
  409c9b:	mov    rdi,rax
  409c9e:	call   41ccc9 <flatcc_builder_start_table@@Base>
  409ca3:	test   eax,eax
  409ca5:	jne    409e29 <_start@@Base+0x4cc9>
  409cab:	lea    rcx,[rbp-0x24]
  409caf:	mov    rdx,QWORD PTR [rbp-0x48]
  409cb3:	mov    rsi,QWORD PTR [rbp-0x40]
  409cb7:	mov    rax,QWORD PTR [rbp-0x38]
  409cbb:	mov    rdi,rax
  409cbe:	call   405852 <_start@@Base+0x6f2>
  409cc3:	mov    QWORD PTR [rbp-0x40],rax
  409cc7:	jmp    409dec <_start@@Base+0x4c8c>
  409ccc:	mov    rdx,QWORD PTR [rbp-0x48]
  409cd0:	mov    rcx,QWORD PTR [rbp-0x40]
  409cd4:	mov    rax,QWORD PTR [rbp-0x38]
  409cd8:	mov    rsi,rcx
  409cdb:	mov    rdi,rax
  409cde:	call   4055e5 <_start@@Base+0x485>
  409ce3:	mov    QWORD PTR [rbp-0x40],rax
  409ce7:	mov    rdx,QWORD PTR [rbp-0x48]
  409ceb:	mov    rax,QWORD PTR [rbp-0x40]
  409cef:	mov    rsi,rdx
  409cf2:	mov    rdi,rax
  409cf5:	call   405756 <_start@@Base+0x5f6>
  409cfa:	mov    QWORD PTR [rbp-0x20],rax
  409cfe:	mov    rax,QWORD PTR [rbp-0x20]
  409d02:	and    rax,0xffffffffff000000
  409d08:	mov    rdx,rax
  409d0b:	movabs rax,0x656d707479000000
  409d15:	cmp    rdx,rax
  409d18:	jne    409db5 <_start@@Base+0x4c55>
  409d1e:	mov    rax,QWORD PTR [rbp-0x40]
  409d22:	mov    QWORD PTR [rbp-0x18],rax
  409d26:	mov    rdx,QWORD PTR [rbp-0x48]
  409d2a:	mov    rsi,QWORD PTR [rbp-0x18]
  409d2e:	mov    rax,QWORD PTR [rbp-0x38]
  409d32:	mov    ecx,0x5
  409d37:	mov    rdi,rax
  409d3a:	call   405c48 <_start@@Base+0xae8>
  409d3f:	mov    QWORD PTR [rbp-0x40],rax
  409d43:	mov    rax,QWORD PTR [rbp-0x18]
  409d47:	cmp    rax,QWORD PTR [rbp-0x40]
  409d4b:	je     409d98 <_start@@Base+0x4c38>
  409d4d:	mov    rax,QWORD PTR [rbp-0x38]
  409d51:	mov    rax,QWORD PTR [rax]
  409d54:	mov    ecx,0x1
  409d59:	mov    edx,0x0
  409d5e:	mov    esi,0x0
  409d63:	mov    rdi,rax
  409d66:	call   41ee2d <flatcc_builder_table_add@@Base>
  409d6b:	mov    QWORD PTR [rbp-0x10],rax
  409d6f:	cmp    QWORD PTR [rbp-0x10],0x0
  409d74:	je     409e2c <_start@@Base+0x4ccc>
  409d7a:	mov    rcx,QWORD PTR [rbp-0x10]
  409d7e:	mov    rdx,QWORD PTR [rbp-0x48]
  409d82:	mov    rsi,QWORD PTR [rbp-0x40]
  409d86:	mov    rax,QWORD PTR [rbp-0x38]
  409d8a:	mov    rdi,rax
  409d8d:	call   4099e6 <_start@@Base+0x4886>
  409d92:	mov    QWORD PTR [rbp-0x40],rax
  409d96:	jmp    409dd0 <_start@@Base+0x4c70>
  409d98:	mov    rdx,QWORD PTR [rbp-0x48]
  409d9c:	mov    rcx,QWORD PTR [rbp-0x40]
  409da0:	mov    rax,QWORD PTR [rbp-0x38]
  409da4:	mov    rsi,rcx
  409da7:	mov    rdi,rax
  409daa:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  409daf:	mov    QWORD PTR [rbp-0x40],rax
  409db3:	jmp    409dd0 <_start@@Base+0x4c70>
  409db5:	mov    rdx,QWORD PTR [rbp-0x48]
  409db9:	mov    rcx,QWORD PTR [rbp-0x40]
  409dbd:	mov    rax,QWORD PTR [rbp-0x38]
  409dc1:	mov    rsi,rcx
  409dc4:	mov    rdi,rax
  409dc7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  409dcc:	mov    QWORD PTR [rbp-0x40],rax
  409dd0:	lea    rcx,[rbp-0x24]
  409dd4:	mov    rdx,QWORD PTR [rbp-0x48]
  409dd8:	mov    rsi,QWORD PTR [rbp-0x40]
  409ddc:	mov    rax,QWORD PTR [rbp-0x38]
  409de0:	mov    rdi,rax
  409de3:	call   40590f <_start@@Base+0x7af>
  409de8:	mov    QWORD PTR [rbp-0x40],rax
  409dec:	mov    eax,DWORD PTR [rbp-0x24]
  409def:	test   eax,eax
  409df1:	jne    409ccc <_start@@Base+0x4b6c>
  409df7:	mov    rax,QWORD PTR [rbp-0x38]
  409dfb:	mov    eax,DWORD PTR [rax+0x1c]
  409dfe:	test   eax,eax
  409e00:	jne    409e2f <_start@@Base+0x4ccf>
  409e02:	mov    rax,QWORD PTR [rbp-0x38]
  409e06:	mov    rax,QWORD PTR [rax]
  409e09:	mov    rdi,rax
  409e0c:	call   41d7cb <flatcc_builder_end_table@@Base>
  409e11:	mov    edx,eax
  409e13:	mov    rax,QWORD PTR [rbp-0x50]
  409e17:	mov    DWORD PTR [rax],edx
  409e19:	mov    rax,QWORD PTR [rbp-0x50]
  409e1d:	mov    eax,DWORD PTR [rax]
  409e1f:	test   eax,eax
  409e21:	je     409e32 <_start@@Base+0x4cd2>
  409e23:	mov    rax,QWORD PTR [rbp-0x40]
  409e27:	jmp    409e4c <_start@@Base+0x4cec>
  409e29:	nop
  409e2a:	jmp    409e33 <_start@@Base+0x4cd3>
  409e2c:	nop
  409e2d:	jmp    409e33 <_start@@Base+0x4cd3>
  409e2f:	nop
  409e30:	jmp    409e33 <_start@@Base+0x4cd3>
  409e32:	nop
  409e33:	mov    rdx,QWORD PTR [rbp-0x48]
  409e37:	mov    rsi,QWORD PTR [rbp-0x40]
  409e3b:	mov    rax,QWORD PTR [rbp-0x38]
  409e3f:	mov    ecx,0x21
  409e44:	mov    rdi,rax
  409e47:	call   425bce <flatcc_json_parser_set_error@@Base>
  409e4c:	mov    rdi,QWORD PTR [rbp-0x8]
  409e50:	xor    rdi,QWORD PTR fs:0x28
  409e59:	je     409e60 <_start@@Base+0x4d00>
  409e5b:	call   405070 <__stack_chk_fail@plt>
  409e60:	leave  
  409e61:	ret    
  409e62:	push   rbp
  409e63:	mov    rbp,rsp
  409e66:	sub    rsp,0x50
  409e6a:	mov    QWORD PTR [rbp-0x28],rdi
  409e6e:	mov    QWORD PTR [rbp-0x30],rsi
  409e72:	mov    QWORD PTR [rbp-0x38],rdx
  409e76:	mov    QWORD PTR [rbp-0x40],rcx
  409e7a:	mov    QWORD PTR [rbp-0x48],r8
  409e7e:	mov    QWORD PTR [rbp-0x50],r9
  409e82:	mov    rax,QWORD PTR [rbp-0x30]
  409e86:	mov    QWORD PTR [rbp-0x18],rax
  409e8a:	mov    rdx,QWORD PTR [rbp-0x38]
  409e8e:	mov    rax,QWORD PTR [rbp-0x30]
  409e92:	mov    rsi,rdx
  409e95:	mov    rdi,rax
  409e98:	call   405756 <_start@@Base+0x5f6>
  409e9d:	mov    QWORD PTR [rbp-0x10],rax
  409ea1:	movabs rax,0xff00000000000000
  409eab:	and    rax,QWORD PTR [rbp-0x10]
  409eaf:	mov    rdx,rax
  409eb2:	movabs rax,0x7800000000000000
  409ebc:	cmp    rdx,rax
  409ebf:	jne    409f18 <_start@@Base+0x4db8>
  409ec1:	mov    rax,QWORD PTR [rbp-0x30]
  409ec5:	mov    QWORD PTR [rbp-0x8],rax
  409ec9:	mov    rcx,QWORD PTR [rbp-0x50]
  409ecd:	mov    rdx,QWORD PTR [rbp-0x38]
  409ed1:	mov    rsi,QWORD PTR [rbp-0x8]
  409ed5:	mov    rax,QWORD PTR [rbp-0x28]
  409ed9:	mov    r8,rcx
  409edc:	mov    ecx,0x1
  409ee1:	mov    rdi,rax
  409ee4:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  409ee9:	mov    QWORD PTR [rbp-0x30],rax
  409eed:	mov    rax,QWORD PTR [rbp-0x30]
  409ef1:	cmp    rax,QWORD PTR [rbp-0x8]
  409ef5:	je     409f12 <_start@@Base+0x4db2>
  409ef7:	mov    rax,QWORD PTR [rbp-0x48]
  409efb:	mov    QWORD PTR [rax],0x0
  409f02:	mov    rax,QWORD PTR [rbp-0x40]
  409f06:	mov    DWORD PTR [rax],0x0
  409f0c:	mov    rax,QWORD PTR [rbp-0x30]
  409f10:	jmp    409f1c <_start@@Base+0x4dbc>
  409f12:	mov    rax,QWORD PTR [rbp-0x18]
  409f16:	jmp    409f1c <_start@@Base+0x4dbc>
  409f18:	mov    rax,QWORD PTR [rbp-0x18]
  409f1c:	leave  
  409f1d:	ret    
  409f1e:	push   rbp
  409f1f:	mov    rbp,rsp
  409f22:	sub    rsp,0x50
  409f26:	mov    QWORD PTR [rbp-0x38],rdi
  409f2a:	mov    QWORD PTR [rbp-0x40],rsi
  409f2e:	mov    QWORD PTR [rbp-0x48],rdx
  409f32:	mov    QWORD PTR [rbp-0x50],rcx
  409f36:	mov    rax,QWORD PTR fs:0x28
  409f3f:	mov    QWORD PTR [rbp-0x8],rax
  409f43:	xor    eax,eax
  409f45:	mov    rax,QWORD PTR [rbp-0x50]
  409f49:	mov    DWORD PTR [rax],0x0
  409f4f:	mov    rax,QWORD PTR [rbp-0x38]
  409f53:	mov    rax,QWORD PTR [rax]
  409f56:	mov    esi,0x4
  409f5b:	mov    rdi,rax
  409f5e:	call   41ccc9 <flatcc_builder_start_table@@Base>
  409f63:	test   eax,eax
  409f65:	jne    40a538 <_start@@Base+0x53d8>
  409f6b:	lea    rcx,[rbp-0x24]
  409f6f:	mov    rdx,QWORD PTR [rbp-0x48]
  409f73:	mov    rsi,QWORD PTR [rbp-0x40]
  409f77:	mov    rax,QWORD PTR [rbp-0x38]
  409f7b:	mov    rdi,rax
  409f7e:	call   405852 <_start@@Base+0x6f2>
  409f83:	mov    QWORD PTR [rbp-0x40],rax
  409f87:	jmp    40a4fb <_start@@Base+0x539b>
  409f8c:	mov    rdx,QWORD PTR [rbp-0x48]
  409f90:	mov    rcx,QWORD PTR [rbp-0x40]
  409f94:	mov    rax,QWORD PTR [rbp-0x38]
  409f98:	mov    rsi,rcx
  409f9b:	mov    rdi,rax
  409f9e:	call   4055e5 <_start@@Base+0x485>
  409fa3:	mov    QWORD PTR [rbp-0x40],rax
  409fa7:	mov    rdx,QWORD PTR [rbp-0x48]
  409fab:	mov    rax,QWORD PTR [rbp-0x40]
  409faf:	mov    rsi,rdx
  409fb2:	mov    rdi,rax
  409fb5:	call   405756 <_start@@Base+0x5f6>
  409fba:	mov    QWORD PTR [rbp-0x20],rax
  409fbe:	mov    rax,QWORD PTR [rbp-0x20]
  409fc2:	mov    ax,0x0
  409fc6:	mov    rdx,rax
  409fc9:	movabs rax,0x636f6c6f72320000
  409fd3:	cmp    rdx,rax
  409fd6:	jne    40a0ec <_start@@Base+0x4f8c>
  409fdc:	mov    rax,QWORD PTR [rbp-0x40]
  409fe0:	mov    QWORD PTR [rbp-0x18],rax
  409fe4:	mov    rdx,QWORD PTR [rbp-0x48]
  409fe8:	mov    rsi,QWORD PTR [rbp-0x18]
  409fec:	mov    rax,QWORD PTR [rbp-0x38]
  409ff0:	mov    ecx,0x6
  409ff5:	mov    rdi,rax
  409ff8:	call   405c48 <_start@@Base+0xae8>
  409ffd:	mov    QWORD PTR [rbp-0x40],rax
  40a001:	mov    rax,QWORD PTR [rbp-0x18]
  40a005:	cmp    rax,QWORD PTR [rbp-0x40]
  40a009:	je     40a21c <_start@@Base+0x50bc>
  40a00f:	mov    BYTE PTR [rbp-0x25],0x0
  40a013:	mov    rax,QWORD PTR [rbp-0x40]
  40a017:	mov    QWORD PTR [rbp-0x18],rax
  40a01b:	lea    rcx,[rbp-0x25]
  40a01f:	mov    rdx,QWORD PTR [rbp-0x48]
  40a023:	mov    rsi,QWORD PTR [rbp-0x18]
  40a027:	mov    rax,QWORD PTR [rbp-0x38]
  40a02b:	mov    rdi,rax
  40a02e:	call   40686c <_start@@Base+0x170c>
  40a033:	mov    QWORD PTR [rbp-0x40],rax
  40a037:	mov    rax,QWORD PTR [rbp-0x18]
  40a03b:	cmp    rax,QWORD PTR [rbp-0x40]
  40a03f:	jne    40a08b <_start@@Base+0x4f2b>
  40a041:	mov    rax,QWORD PTR [rbp-0x40]
  40a045:	mov    QWORD PTR [rbp-0x18],rax
  40a049:	lea    rcx,[rbp-0x25]
  40a04d:	mov    rdx,QWORD PTR [rbp-0x48]
  40a051:	mov    rsi,QWORD PTR [rbp-0x18]
  40a055:	mov    rax,QWORD PTR [rbp-0x38]
  40a059:	mov    r8,rcx
  40a05c:	lea    rcx,[rip+0x3a0bd]        # 444120 <__data_start@@Base+0x60>
  40a063:	mov    rdi,rax
  40a066:	call   4073a4 <_start@@Base+0x2244>
  40a06b:	mov    QWORD PTR [rbp-0x40],rax
  40a06f:	mov    rax,QWORD PTR [rbp-0x40]
  40a073:	cmp    rax,QWORD PTR [rbp-0x18]
  40a077:	je     40a54b <_start@@Base+0x53eb>
  40a07d:	mov    rax,QWORD PTR [rbp-0x40]
  40a081:	cmp    rax,QWORD PTR [rbp-0x48]
  40a085:	je     40a54b <_start@@Base+0x53eb>
  40a08b:	movzx  eax,BYTE PTR [rbp-0x25]
  40a08f:	cmp    al,0x2
  40a091:	jne    40a0a5 <_start@@Base+0x4f45>
  40a093:	mov    rax,QWORD PTR [rbp-0x38]
  40a097:	mov    eax,DWORD PTR [rax+0x10]
  40a09a:	and    eax,0x2
  40a09d:	test   eax,eax
  40a09f:	je     40a4de <_start@@Base+0x537e>
  40a0a5:	mov    rax,QWORD PTR [rbp-0x38]
  40a0a9:	mov    rax,QWORD PTR [rax]
  40a0ac:	mov    ecx,0x1
  40a0b1:	mov    edx,0x1
  40a0b6:	mov    esi,0x1
  40a0bb:	mov    rdi,rax
  40a0be:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a0c3:	mov    QWORD PTR [rbp-0x10],rax
  40a0c7:	cmp    QWORD PTR [rbp-0x10],0x0
  40a0cc:	je     40a53b <_start@@Base+0x53db>
  40a0d2:	movzx  eax,BYTE PTR [rbp-0x25]
  40a0d6:	movsx  edx,al
  40a0d9:	mov    rax,QWORD PTR [rbp-0x10]
  40a0dd:	mov    esi,edx
  40a0df:	mov    rdi,rax
  40a0e2:	call   40534b <_start@@Base+0x1eb>
  40a0e7:	jmp    40a4de <_start@@Base+0x537e>
  40a0ec:	mov    rax,QWORD PTR [rbp-0x20]
  40a0f0:	and    rax,0xffffffffff000000
  40a0f6:	mov    rdx,rax
  40a0f9:	movabs rax,0x636f6c6f72000000
  40a103:	cmp    rdx,rax
  40a106:	jne    40a21f <_start@@Base+0x50bf>
  40a10c:	mov    rax,QWORD PTR [rbp-0x40]
  40a110:	mov    QWORD PTR [rbp-0x18],rax
  40a114:	mov    rdx,QWORD PTR [rbp-0x48]
  40a118:	mov    rsi,QWORD PTR [rbp-0x18]
  40a11c:	mov    rax,QWORD PTR [rbp-0x38]
  40a120:	mov    ecx,0x5
  40a125:	mov    rdi,rax
  40a128:	call   405c48 <_start@@Base+0xae8>
  40a12d:	mov    QWORD PTR [rbp-0x40],rax
  40a131:	mov    rax,QWORD PTR [rbp-0x18]
  40a135:	cmp    rax,QWORD PTR [rbp-0x40]
  40a139:	je     40a222 <_start@@Base+0x50c2>
  40a13f:	mov    BYTE PTR [rbp-0x25],0x0
  40a143:	mov    rax,QWORD PTR [rbp-0x40]
  40a147:	mov    QWORD PTR [rbp-0x18],rax
  40a14b:	lea    rcx,[rbp-0x25]
  40a14f:	mov    rdx,QWORD PTR [rbp-0x48]
  40a153:	mov    rsi,QWORD PTR [rbp-0x18]
  40a157:	mov    rax,QWORD PTR [rbp-0x38]
  40a15b:	mov    rdi,rax
  40a15e:	call   40686c <_start@@Base+0x170c>
  40a163:	mov    QWORD PTR [rbp-0x40],rax
  40a167:	mov    rax,QWORD PTR [rbp-0x18]
  40a16b:	cmp    rax,QWORD PTR [rbp-0x40]
  40a16f:	jne    40a1bb <_start@@Base+0x505b>
  40a171:	mov    rax,QWORD PTR [rbp-0x40]
  40a175:	mov    QWORD PTR [rbp-0x18],rax
  40a179:	lea    rcx,[rbp-0x25]
  40a17d:	mov    rdx,QWORD PTR [rbp-0x48]
  40a181:	mov    rsi,QWORD PTR [rbp-0x18]
  40a185:	mov    rax,QWORD PTR [rbp-0x38]
  40a189:	mov    r8,rcx
  40a18c:	lea    rcx,[rip+0x39fad]        # 444140 <__data_start@@Base+0x80>
  40a193:	mov    rdi,rax
  40a196:	call   4073a4 <_start@@Base+0x2244>
  40a19b:	mov    QWORD PTR [rbp-0x40],rax
  40a19f:	mov    rax,QWORD PTR [rbp-0x40]
  40a1a3:	cmp    rax,QWORD PTR [rbp-0x18]
  40a1a7:	je     40a54b <_start@@Base+0x53eb>
  40a1ad:	mov    rax,QWORD PTR [rbp-0x40]
  40a1b1:	cmp    rax,QWORD PTR [rbp-0x48]
  40a1b5:	je     40a54b <_start@@Base+0x53eb>
  40a1bb:	movzx  eax,BYTE PTR [rbp-0x25]
  40a1bf:	cmp    al,0x2
  40a1c1:	jne    40a1d5 <_start@@Base+0x5075>
  40a1c3:	mov    rax,QWORD PTR [rbp-0x38]
  40a1c7:	mov    eax,DWORD PTR [rax+0x10]
  40a1ca:	and    eax,0x2
  40a1cd:	test   eax,eax
  40a1cf:	je     40a4de <_start@@Base+0x537e>
  40a1d5:	mov    rax,QWORD PTR [rbp-0x38]
  40a1d9:	mov    rax,QWORD PTR [rax]
  40a1dc:	mov    ecx,0x1
  40a1e1:	mov    edx,0x1
  40a1e6:	mov    esi,0x0
  40a1eb:	mov    rdi,rax
  40a1ee:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a1f3:	mov    QWORD PTR [rbp-0x10],rax
  40a1f7:	cmp    QWORD PTR [rbp-0x10],0x0
  40a1fc:	je     40a53e <_start@@Base+0x53de>
  40a202:	movzx  eax,BYTE PTR [rbp-0x25]
  40a206:	movsx  edx,al
  40a209:	mov    rax,QWORD PTR [rbp-0x10]
  40a20d:	mov    esi,edx
  40a20f:	mov    rdi,rax
  40a212:	call   40534b <_start@@Base+0x1eb>
  40a217:	jmp    40a4de <_start@@Base+0x537e>
  40a21c:	nop
  40a21d:	jmp    40a223 <_start@@Base+0x50c3>
  40a21f:	nop
  40a220:	jmp    40a223 <_start@@Base+0x50c3>
  40a222:	nop
  40a223:	movabs rax,0xffffff0000000000
  40a22d:	and    rax,QWORD PTR [rbp-0x20]
  40a231:	mov    rdx,rax
  40a234:	movabs rax,0x7563320000000000
  40a23e:	cmp    rdx,rax
  40a241:	jne    40a377 <_start@@Base+0x5217>
  40a247:	mov    rax,QWORD PTR [rbp-0x40]
  40a24b:	mov    QWORD PTR [rbp-0x18],rax
  40a24f:	mov    rdx,QWORD PTR [rbp-0x48]
  40a253:	mov    rsi,QWORD PTR [rbp-0x18]
  40a257:	mov    rax,QWORD PTR [rbp-0x38]
  40a25b:	mov    ecx,0x3
  40a260:	mov    rdi,rax
  40a263:	call   405c48 <_start@@Base+0xae8>
  40a268:	mov    QWORD PTR [rbp-0x40],rax
  40a26c:	mov    rax,QWORD PTR [rbp-0x18]
  40a270:	cmp    rax,QWORD PTR [rbp-0x40]
  40a274:	je     40a357 <_start@@Base+0x51f7>
  40a27a:	mov    BYTE PTR [rbp-0x25],0x0
  40a27e:	mov    rax,QWORD PTR [rbp-0x40]
  40a282:	mov    QWORD PTR [rbp-0x18],rax
  40a286:	lea    rcx,[rbp-0x25]
  40a28a:	mov    rdx,QWORD PTR [rbp-0x48]
  40a28e:	mov    rsi,QWORD PTR [rbp-0x18]
  40a292:	mov    rax,QWORD PTR [rbp-0x38]
  40a296:	mov    rdi,rax
  40a299:	call   406557 <_start@@Base+0x13f7>
  40a29e:	mov    QWORD PTR [rbp-0x40],rax
  40a2a2:	mov    rax,QWORD PTR [rbp-0x18]
  40a2a6:	cmp    rax,QWORD PTR [rbp-0x40]
  40a2aa:	jne    40a2f6 <_start@@Base+0x5196>
  40a2ac:	mov    rax,QWORD PTR [rbp-0x40]
  40a2b0:	mov    QWORD PTR [rbp-0x18],rax
  40a2b4:	lea    rcx,[rbp-0x25]
  40a2b8:	mov    rdx,QWORD PTR [rbp-0x48]
  40a2bc:	mov    rsi,QWORD PTR [rbp-0x18]
  40a2c0:	mov    rax,QWORD PTR [rbp-0x38]
  40a2c4:	mov    r8,rcx
  40a2c7:	lea    rcx,[rip+0x39e92]        # 444160 <__data_start@@Base+0xa0>
  40a2ce:	mov    rdi,rax
  40a2d1:	call   406e39 <_start@@Base+0x1cd9>
  40a2d6:	mov    QWORD PTR [rbp-0x40],rax
  40a2da:	mov    rax,QWORD PTR [rbp-0x40]
  40a2de:	cmp    rax,QWORD PTR [rbp-0x18]
  40a2e2:	je     40a54b <_start@@Base+0x53eb>
  40a2e8:	mov    rax,QWORD PTR [rbp-0x40]
  40a2ec:	cmp    rax,QWORD PTR [rbp-0x48]
  40a2f0:	je     40a54b <_start@@Base+0x53eb>
  40a2f6:	movzx  eax,BYTE PTR [rbp-0x25]
  40a2fa:	cmp    al,0x2
  40a2fc:	jne    40a310 <_start@@Base+0x51b0>
  40a2fe:	mov    rax,QWORD PTR [rbp-0x38]
  40a302:	mov    eax,DWORD PTR [rax+0x10]
  40a305:	and    eax,0x2
  40a308:	test   eax,eax
  40a30a:	je     40a4df <_start@@Base+0x537f>
  40a310:	mov    rax,QWORD PTR [rbp-0x38]
  40a314:	mov    rax,QWORD PTR [rax]
  40a317:	mov    ecx,0x1
  40a31c:	mov    edx,0x1
  40a321:	mov    esi,0x3
  40a326:	mov    rdi,rax
  40a329:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a32e:	mov    QWORD PTR [rbp-0x10],rax
  40a332:	cmp    QWORD PTR [rbp-0x10],0x0
  40a337:	je     40a541 <_start@@Base+0x53e1>
  40a33d:	movzx  eax,BYTE PTR [rbp-0x25]
  40a341:	movzx  edx,al
  40a344:	mov    rax,QWORD PTR [rbp-0x10]
  40a348:	mov    esi,edx
  40a34a:	mov    rdi,rax
  40a34d:	call   405275 <_start@@Base+0x115>
  40a352:	jmp    40a4df <_start@@Base+0x537f>
  40a357:	mov    rdx,QWORD PTR [rbp-0x48]
  40a35b:	mov    rcx,QWORD PTR [rbp-0x40]
  40a35f:	mov    rax,QWORD PTR [rbp-0x38]
  40a363:	mov    rsi,rcx
  40a366:	mov    rdi,rax
  40a369:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a36e:	mov    QWORD PTR [rbp-0x40],rax
  40a372:	jmp    40a4df <_start@@Base+0x537f>
  40a377:	movabs rax,0xffff000000000000
  40a381:	and    rax,QWORD PTR [rbp-0x20]
  40a385:	mov    rdx,rax
  40a388:	movabs rax,0x7563000000000000
  40a392:	cmp    rdx,rax
  40a395:	jne    40a4c1 <_start@@Base+0x5361>
  40a39b:	mov    rax,QWORD PTR [rbp-0x40]
  40a39f:	mov    QWORD PTR [rbp-0x18],rax
  40a3a3:	mov    rdx,QWORD PTR [rbp-0x48]
  40a3a7:	mov    rsi,QWORD PTR [rbp-0x18]
  40a3ab:	mov    rax,QWORD PTR [rbp-0x38]
  40a3af:	mov    ecx,0x2
  40a3b4:	mov    rdi,rax
  40a3b7:	call   405c48 <_start@@Base+0xae8>
  40a3bc:	mov    QWORD PTR [rbp-0x40],rax
  40a3c0:	mov    rax,QWORD PTR [rbp-0x18]
  40a3c4:	cmp    rax,QWORD PTR [rbp-0x40]
  40a3c8:	je     40a4a4 <_start@@Base+0x5344>
  40a3ce:	mov    BYTE PTR [rbp-0x25],0x0
  40a3d2:	mov    rax,QWORD PTR [rbp-0x40]
  40a3d6:	mov    QWORD PTR [rbp-0x18],rax
  40a3da:	lea    rcx,[rbp-0x25]
  40a3de:	mov    rdx,QWORD PTR [rbp-0x48]
  40a3e2:	mov    rsi,QWORD PTR [rbp-0x18]
  40a3e6:	mov    rax,QWORD PTR [rbp-0x38]
  40a3ea:	mov    rdi,rax
  40a3ed:	call   406557 <_start@@Base+0x13f7>
  40a3f2:	mov    QWORD PTR [rbp-0x40],rax
  40a3f6:	mov    rax,QWORD PTR [rbp-0x18]
  40a3fa:	cmp    rax,QWORD PTR [rbp-0x40]
  40a3fe:	jne    40a44a <_start@@Base+0x52ea>
  40a400:	mov    rax,QWORD PTR [rbp-0x40]
  40a404:	mov    QWORD PTR [rbp-0x18],rax
  40a408:	lea    rcx,[rbp-0x25]
  40a40c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a410:	mov    rsi,QWORD PTR [rbp-0x18]
  40a414:	mov    rax,QWORD PTR [rbp-0x38]
  40a418:	mov    r8,rcx
  40a41b:	lea    rcx,[rip+0x39d5e]        # 444180 <__data_start@@Base+0xc0>
  40a422:	mov    rdi,rax
  40a425:	call   406e39 <_start@@Base+0x1cd9>
  40a42a:	mov    QWORD PTR [rbp-0x40],rax
  40a42e:	mov    rax,QWORD PTR [rbp-0x40]
  40a432:	cmp    rax,QWORD PTR [rbp-0x18]
  40a436:	je     40a54b <_start@@Base+0x53eb>
  40a43c:	mov    rax,QWORD PTR [rbp-0x40]
  40a440:	cmp    rax,QWORD PTR [rbp-0x48]
  40a444:	je     40a54b <_start@@Base+0x53eb>
  40a44a:	movzx  eax,BYTE PTR [rbp-0x25]
  40a44e:	cmp    al,0x2
  40a450:	jne    40a460 <_start@@Base+0x5300>
  40a452:	mov    rax,QWORD PTR [rbp-0x38]
  40a456:	mov    eax,DWORD PTR [rax+0x10]
  40a459:	and    eax,0x2
  40a45c:	test   eax,eax
  40a45e:	je     40a4df <_start@@Base+0x537f>
  40a460:	mov    rax,QWORD PTR [rbp-0x38]
  40a464:	mov    rax,QWORD PTR [rax]
  40a467:	mov    ecx,0x1
  40a46c:	mov    edx,0x1
  40a471:	mov    esi,0x2
  40a476:	mov    rdi,rax
  40a479:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a47e:	mov    QWORD PTR [rbp-0x10],rax
  40a482:	cmp    QWORD PTR [rbp-0x10],0x0
  40a487:	je     40a544 <_start@@Base+0x53e4>
  40a48d:	movzx  eax,BYTE PTR [rbp-0x25]
  40a491:	movzx  edx,al
  40a494:	mov    rax,QWORD PTR [rbp-0x10]
  40a498:	mov    esi,edx
  40a49a:	mov    rdi,rax
  40a49d:	call   405275 <_start@@Base+0x115>
  40a4a2:	jmp    40a4df <_start@@Base+0x537f>
  40a4a4:	mov    rdx,QWORD PTR [rbp-0x48]
  40a4a8:	mov    rcx,QWORD PTR [rbp-0x40]
  40a4ac:	mov    rax,QWORD PTR [rbp-0x38]
  40a4b0:	mov    rsi,rcx
  40a4b3:	mov    rdi,rax
  40a4b6:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a4bb:	mov    QWORD PTR [rbp-0x40],rax
  40a4bf:	jmp    40a4df <_start@@Base+0x537f>
  40a4c1:	mov    rdx,QWORD PTR [rbp-0x48]
  40a4c5:	mov    rcx,QWORD PTR [rbp-0x40]
  40a4c9:	mov    rax,QWORD PTR [rbp-0x38]
  40a4cd:	mov    rsi,rcx
  40a4d0:	mov    rdi,rax
  40a4d3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a4d8:	mov    QWORD PTR [rbp-0x40],rax
  40a4dc:	jmp    40a4df <_start@@Base+0x537f>
  40a4de:	nop
  40a4df:	lea    rcx,[rbp-0x24]
  40a4e3:	mov    rdx,QWORD PTR [rbp-0x48]
  40a4e7:	mov    rsi,QWORD PTR [rbp-0x40]
  40a4eb:	mov    rax,QWORD PTR [rbp-0x38]
  40a4ef:	mov    rdi,rax
  40a4f2:	call   40590f <_start@@Base+0x7af>
  40a4f7:	mov    QWORD PTR [rbp-0x40],rax
  40a4fb:	mov    eax,DWORD PTR [rbp-0x24]
  40a4fe:	test   eax,eax
  40a500:	jne    409f8c <_start@@Base+0x4e2c>
  40a506:	mov    rax,QWORD PTR [rbp-0x38]
  40a50a:	mov    eax,DWORD PTR [rax+0x1c]
  40a50d:	test   eax,eax
  40a50f:	jne    40a547 <_start@@Base+0x53e7>
  40a511:	mov    rax,QWORD PTR [rbp-0x38]
  40a515:	mov    rax,QWORD PTR [rax]
  40a518:	mov    rdi,rax
  40a51b:	call   41d7cb <flatcc_builder_end_table@@Base>
  40a520:	mov    edx,eax
  40a522:	mov    rax,QWORD PTR [rbp-0x50]
  40a526:	mov    DWORD PTR [rax],edx
  40a528:	mov    rax,QWORD PTR [rbp-0x50]
  40a52c:	mov    eax,DWORD PTR [rax]
  40a52e:	test   eax,eax
  40a530:	je     40a54a <_start@@Base+0x53ea>
  40a532:	mov    rax,QWORD PTR [rbp-0x40]
  40a536:	jmp    40a564 <_start@@Base+0x5404>
  40a538:	nop
  40a539:	jmp    40a54b <_start@@Base+0x53eb>
  40a53b:	nop
  40a53c:	jmp    40a54b <_start@@Base+0x53eb>
  40a53e:	nop
  40a53f:	jmp    40a54b <_start@@Base+0x53eb>
  40a541:	nop
  40a542:	jmp    40a54b <_start@@Base+0x53eb>
  40a544:	nop
  40a545:	jmp    40a54b <_start@@Base+0x53eb>
  40a547:	nop
  40a548:	jmp    40a54b <_start@@Base+0x53eb>
  40a54a:	nop
  40a54b:	mov    rdx,QWORD PTR [rbp-0x48]
  40a54f:	mov    rsi,QWORD PTR [rbp-0x40]
  40a553:	mov    rax,QWORD PTR [rbp-0x38]
  40a557:	mov    ecx,0x21
  40a55c:	mov    rdi,rax
  40a55f:	call   425bce <flatcc_json_parser_set_error@@Base>
  40a564:	mov    rdi,QWORD PTR [rbp-0x8]
  40a568:	xor    rdi,QWORD PTR fs:0x28
  40a571:	je     40a578 <_start@@Base+0x5418>
  40a573:	call   405070 <__stack_chk_fail@plt>
  40a578:	leave  
  40a579:	ret    
  40a57a:	push   rbp
  40a57b:	mov    rbp,rsp
  40a57e:	sub    rsp,0x50
  40a582:	mov    QWORD PTR [rbp-0x38],rdi
  40a586:	mov    QWORD PTR [rbp-0x40],rsi
  40a58a:	mov    QWORD PTR [rbp-0x48],rdx
  40a58e:	mov    QWORD PTR [rbp-0x50],rcx
  40a592:	mov    rax,QWORD PTR fs:0x28
  40a59b:	mov    QWORD PTR [rbp-0x8],rax
  40a59f:	xor    eax,eax
  40a5a1:	mov    rax,QWORD PTR [rbp-0x50]
  40a5a5:	mov    DWORD PTR [rax],0x0
  40a5ab:	mov    rax,QWORD PTR [rbp-0x38]
  40a5af:	mov    rax,QWORD PTR [rax]
  40a5b2:	mov    esi,0x6
  40a5b7:	mov    rdi,rax
  40a5ba:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40a5bf:	test   eax,eax
  40a5c1:	jne    40ae63 <_start@@Base+0x5d03>
  40a5c7:	lea    rcx,[rbp-0x2c]
  40a5cb:	mov    rdx,QWORD PTR [rbp-0x48]
  40a5cf:	mov    rsi,QWORD PTR [rbp-0x40]
  40a5d3:	mov    rax,QWORD PTR [rbp-0x38]
  40a5d7:	mov    rdi,rax
  40a5da:	call   405852 <_start@@Base+0x6f2>
  40a5df:	mov    QWORD PTR [rbp-0x40],rax
  40a5e3:	jmp    40ae26 <_start@@Base+0x5cc6>
  40a5e8:	mov    rdx,QWORD PTR [rbp-0x48]
  40a5ec:	mov    rcx,QWORD PTR [rbp-0x40]
  40a5f0:	mov    rax,QWORD PTR [rbp-0x38]
  40a5f4:	mov    rsi,rcx
  40a5f7:	mov    rdi,rax
  40a5fa:	call   4055e5 <_start@@Base+0x485>
  40a5ff:	mov    QWORD PTR [rbp-0x40],rax
  40a603:	mov    rdx,QWORD PTR [rbp-0x48]
  40a607:	mov    rax,QWORD PTR [rbp-0x40]
  40a60b:	mov    rsi,rdx
  40a60e:	mov    rdi,rax
  40a611:	call   405756 <_start@@Base+0x5f6>
  40a616:	mov    QWORD PTR [rbp-0x20],rax
  40a61a:	movabs rax,0x696e6376616bffff
  40a624:	cmp    QWORD PTR [rbp-0x20],rax
  40a628:	ja     40a709 <_start@@Base+0x55a9>
  40a62e:	mov    rax,QWORD PTR [rbp-0x20]
  40a632:	mov    ax,0x0
  40a636:	mov    rdx,rax
  40a639:	movabs rax,0x676c6f62616c0000
  40a643:	cmp    rdx,rax
  40a646:	jne    40a6e9 <_start@@Base+0x5589>
  40a64c:	mov    rax,QWORD PTR [rbp-0x40]
  40a650:	mov    QWORD PTR [rbp-0x18],rax
  40a654:	mov    rdx,QWORD PTR [rbp-0x48]
  40a658:	mov    rsi,QWORD PTR [rbp-0x18]
  40a65c:	mov    rax,QWORD PTR [rbp-0x38]
  40a660:	mov    ecx,0x6
  40a665:	mov    rdi,rax
  40a668:	call   405c48 <_start@@Base+0xae8>
  40a66d:	mov    QWORD PTR [rbp-0x40],rax
  40a671:	mov    rax,QWORD PTR [rbp-0x18]
  40a675:	cmp    rax,QWORD PTR [rbp-0x40]
  40a679:	je     40a6c9 <_start@@Base+0x5569>
  40a67b:	mov    rax,QWORD PTR [rbp-0x38]
  40a67f:	mov    rax,QWORD PTR [rax]
  40a682:	mov    ecx,0x1
  40a687:	mov    edx,0x0
  40a68c:	mov    esi,0x0
  40a691:	mov    rdi,rax
  40a694:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a699:	mov    QWORD PTR [rbp-0x10],rax
  40a69d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a6a2:	je     40ae66 <_start@@Base+0x5d06>
  40a6a8:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6ac:	mov    rdx,QWORD PTR [rbp-0x48]
  40a6b0:	mov    rsi,QWORD PTR [rbp-0x40]
  40a6b4:	mov    rax,QWORD PTR [rbp-0x38]
  40a6b8:	mov    rdi,rax
  40a6bb:	call   408356 <_start@@Base+0x31f6>
  40a6c0:	mov    QWORD PTR [rbp-0x40],rax
  40a6c4:	jmp    40ae0a <_start@@Base+0x5caa>
  40a6c9:	mov    rdx,QWORD PTR [rbp-0x48]
  40a6cd:	mov    rcx,QWORD PTR [rbp-0x40]
  40a6d1:	mov    rax,QWORD PTR [rbp-0x38]
  40a6d5:	mov    rsi,rcx
  40a6d8:	mov    rdi,rax
  40a6db:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a6e0:	mov    QWORD PTR [rbp-0x40],rax
  40a6e4:	jmp    40ae0a <_start@@Base+0x5caa>
  40a6e9:	mov    rdx,QWORD PTR [rbp-0x48]
  40a6ed:	mov    rcx,QWORD PTR [rbp-0x40]
  40a6f1:	mov    rax,QWORD PTR [rbp-0x38]
  40a6f5:	mov    rsi,rcx
  40a6f8:	mov    rdi,rax
  40a6fb:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a700:	mov    QWORD PTR [rbp-0x40],rax
  40a704:	jmp    40ae0a <_start@@Base+0x5caa>
  40a709:	movabs rax,0x696e6376616c32ff
  40a713:	cmp    QWORD PTR [rbp-0x20],rax
  40a717:	ja     40a9dd <_start@@Base+0x587d>
  40a71d:	mov    rax,QWORD PTR [rbp-0x20]
  40a721:	mov    al,0x0
  40a723:	mov    rdx,rax
  40a726:	movabs rax,0x696e6376616c3200
  40a730:	cmp    rdx,rax
  40a733:	jne    40a86c <_start@@Base+0x570c>
  40a739:	mov    rax,QWORD PTR [rbp-0x40]
  40a73d:	mov    QWORD PTR [rbp-0x18],rax
  40a741:	mov    rdx,QWORD PTR [rbp-0x48]
  40a745:	mov    rsi,QWORD PTR [rbp-0x18]
  40a749:	mov    rax,QWORD PTR [rbp-0x38]
  40a74d:	mov    ecx,0x7
  40a752:	mov    rdi,rax
  40a755:	call   405c48 <_start@@Base+0xae8>
  40a75a:	mov    QWORD PTR [rbp-0x40],rax
  40a75e:	mov    rax,QWORD PTR [rbp-0x18]
  40a762:	cmp    rax,QWORD PTR [rbp-0x40]
  40a766:	je     40a84c <_start@@Base+0x56ec>
  40a76c:	mov    QWORD PTR [rbp-0x28],0x0
  40a774:	mov    rax,QWORD PTR [rbp-0x40]
  40a778:	mov    QWORD PTR [rbp-0x18],rax
  40a77c:	lea    rcx,[rbp-0x28]
  40a780:	mov    rdx,QWORD PTR [rbp-0x48]
  40a784:	mov    rsi,QWORD PTR [rbp-0x18]
  40a788:	mov    rax,QWORD PTR [rbp-0x38]
  40a78c:	mov    rdi,rax
  40a78f:	call   40661a <_start@@Base+0x14ba>
  40a794:	mov    QWORD PTR [rbp-0x40],rax
  40a798:	mov    rax,QWORD PTR [rbp-0x18]
  40a79c:	cmp    rax,QWORD PTR [rbp-0x40]
  40a7a0:	jne    40a7ec <_start@@Base+0x568c>
  40a7a2:	mov    rax,QWORD PTR [rbp-0x40]
  40a7a6:	mov    QWORD PTR [rbp-0x18],rax
  40a7aa:	lea    rcx,[rbp-0x28]
  40a7ae:	mov    rdx,QWORD PTR [rbp-0x48]
  40a7b2:	mov    rsi,QWORD PTR [rbp-0x18]
  40a7b6:	mov    rax,QWORD PTR [rbp-0x38]
  40a7ba:	mov    r8,rcx
  40a7bd:	lea    rcx,[rip+0x399dc]        # 4441a0 <__data_start@@Base+0xe0>
  40a7c4:	mov    rdi,rax
  40a7c7:	call   406f8e <_start@@Base+0x1e2e>
  40a7cc:	mov    QWORD PTR [rbp-0x40],rax
  40a7d0:	mov    rax,QWORD PTR [rbp-0x40]
  40a7d4:	cmp    rax,QWORD PTR [rbp-0x18]
  40a7d8:	je     40ae7c <_start@@Base+0x5d1c>
  40a7de:	mov    rax,QWORD PTR [rbp-0x40]
  40a7e2:	cmp    rax,QWORD PTR [rbp-0x48]
  40a7e6:	je     40ae7c <_start@@Base+0x5d1c>
  40a7ec:	mov    rax,QWORD PTR [rbp-0x28]
  40a7f0:	test   rax,rax
  40a7f3:	jne    40a807 <_start@@Base+0x56a7>
  40a7f5:	mov    rax,QWORD PTR [rbp-0x38]
  40a7f9:	mov    eax,DWORD PTR [rax+0x10]
  40a7fc:	and    eax,0x2
  40a7ff:	test   eax,eax
  40a801:	je     40ae0a <_start@@Base+0x5caa>
  40a807:	mov    rax,QWORD PTR [rbp-0x38]
  40a80b:	mov    rax,QWORD PTR [rax]
  40a80e:	mov    ecx,0x8
  40a813:	mov    edx,0x8
  40a818:	mov    esi,0x2
  40a81d:	mov    rdi,rax
  40a820:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a825:	mov    QWORD PTR [rbp-0x10],rax
  40a829:	cmp    QWORD PTR [rbp-0x10],0x0
  40a82e:	je     40ae69 <_start@@Base+0x5d09>
  40a834:	mov    rdx,QWORD PTR [rbp-0x28]
  40a838:	mov    rax,QWORD PTR [rbp-0x10]
  40a83c:	mov    rsi,rdx
  40a83f:	mov    rdi,rax
  40a842:	call   4053e9 <_start@@Base+0x289>
  40a847:	jmp    40ae0a <_start@@Base+0x5caa>
  40a84c:	mov    rdx,QWORD PTR [rbp-0x48]
  40a850:	mov    rcx,QWORD PTR [rbp-0x40]
  40a854:	mov    rax,QWORD PTR [rbp-0x38]
  40a858:	mov    rsi,rcx
  40a85b:	mov    rdi,rax
  40a85e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a863:	mov    QWORD PTR [rbp-0x40],rax
  40a867:	jmp    40ae0a <_start@@Base+0x5caa>
  40a86c:	mov    rax,QWORD PTR [rbp-0x20]
  40a870:	mov    ax,0x0
  40a874:	mov    rdx,rax
  40a877:	movabs rax,0x696e6376616c0000
  40a881:	cmp    rdx,rax
  40a884:	jne    40a9bd <_start@@Base+0x585d>
  40a88a:	mov    rax,QWORD PTR [rbp-0x40]
  40a88e:	mov    QWORD PTR [rbp-0x18],rax
  40a892:	mov    rdx,QWORD PTR [rbp-0x48]
  40a896:	mov    rsi,QWORD PTR [rbp-0x18]
  40a89a:	mov    rax,QWORD PTR [rbp-0x38]
  40a89e:	mov    ecx,0x6
  40a8a3:	mov    rdi,rax
  40a8a6:	call   405c48 <_start@@Base+0xae8>
  40a8ab:	mov    QWORD PTR [rbp-0x40],rax
  40a8af:	mov    rax,QWORD PTR [rbp-0x18]
  40a8b3:	cmp    rax,QWORD PTR [rbp-0x40]
  40a8b7:	je     40a99d <_start@@Base+0x583d>
  40a8bd:	mov    QWORD PTR [rbp-0x28],0x0
  40a8c5:	mov    rax,QWORD PTR [rbp-0x40]
  40a8c9:	mov    QWORD PTR [rbp-0x18],rax
  40a8cd:	lea    rcx,[rbp-0x28]
  40a8d1:	mov    rdx,QWORD PTR [rbp-0x48]
  40a8d5:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8d9:	mov    rax,QWORD PTR [rbp-0x38]
  40a8dd:	mov    rdi,rax
  40a8e0:	call   40661a <_start@@Base+0x14ba>
  40a8e5:	mov    QWORD PTR [rbp-0x40],rax
  40a8e9:	mov    rax,QWORD PTR [rbp-0x18]
  40a8ed:	cmp    rax,QWORD PTR [rbp-0x40]
  40a8f1:	jne    40a93d <_start@@Base+0x57dd>
  40a8f3:	mov    rax,QWORD PTR [rbp-0x40]
  40a8f7:	mov    QWORD PTR [rbp-0x18],rax
  40a8fb:	lea    rcx,[rbp-0x28]
  40a8ff:	mov    rdx,QWORD PTR [rbp-0x48]
  40a903:	mov    rsi,QWORD PTR [rbp-0x18]
  40a907:	mov    rax,QWORD PTR [rbp-0x38]
  40a90b:	mov    r8,rcx
  40a90e:	lea    rcx,[rip+0x398ab]        # 4441c0 <__data_start@@Base+0x100>
  40a915:	mov    rdi,rax
  40a918:	call   406f8e <_start@@Base+0x1e2e>
  40a91d:	mov    QWORD PTR [rbp-0x40],rax
  40a921:	mov    rax,QWORD PTR [rbp-0x40]
  40a925:	cmp    rax,QWORD PTR [rbp-0x18]
  40a929:	je     40ae7c <_start@@Base+0x5d1c>
  40a92f:	mov    rax,QWORD PTR [rbp-0x40]
  40a933:	cmp    rax,QWORD PTR [rbp-0x48]
  40a937:	je     40ae7c <_start@@Base+0x5d1c>
  40a93d:	mov    rax,QWORD PTR [rbp-0x28]
  40a941:	test   rax,rax
  40a944:	jne    40a958 <_start@@Base+0x57f8>
  40a946:	mov    rax,QWORD PTR [rbp-0x38]
  40a94a:	mov    eax,DWORD PTR [rax+0x10]
  40a94d:	and    eax,0x2
  40a950:	test   eax,eax
  40a952:	je     40ae0a <_start@@Base+0x5caa>
  40a958:	mov    rax,QWORD PTR [rbp-0x38]
  40a95c:	mov    rax,QWORD PTR [rax]
  40a95f:	mov    ecx,0x8
  40a964:	mov    edx,0x8
  40a969:	mov    esi,0x1
  40a96e:	mov    rdi,rax
  40a971:	call   41ee2d <flatcc_builder_table_add@@Base>
  40a976:	mov    QWORD PTR [rbp-0x10],rax
  40a97a:	cmp    QWORD PTR [rbp-0x10],0x0
  40a97f:	je     40ae6c <_start@@Base+0x5d0c>
  40a985:	mov    rdx,QWORD PTR [rbp-0x28]
  40a989:	mov    rax,QWORD PTR [rbp-0x10]
  40a98d:	mov    rsi,rdx
  40a990:	mov    rdi,rax
  40a993:	call   4053e9 <_start@@Base+0x289>
  40a998:	jmp    40ae0a <_start@@Base+0x5caa>
  40a99d:	mov    rdx,QWORD PTR [rbp-0x48]
  40a9a1:	mov    rcx,QWORD PTR [rbp-0x40]
  40a9a5:	mov    rax,QWORD PTR [rbp-0x38]
  40a9a9:	mov    rsi,rcx
  40a9ac:	mov    rdi,rax
  40a9af:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a9b4:	mov    QWORD PTR [rbp-0x40],rax
  40a9b8:	jmp    40ae0a <_start@@Base+0x5caa>
  40a9bd:	mov    rdx,QWORD PTR [rbp-0x48]
  40a9c1:	mov    rcx,QWORD PTR [rbp-0x40]
  40a9c5:	mov    rax,QWORD PTR [rbp-0x38]
  40a9c9:	mov    rsi,rcx
  40a9cc:	mov    rdi,rax
  40a9cf:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40a9d4:	mov    QWORD PTR [rbp-0x40],rax
  40a9d8:	jmp    40ae0a <_start@@Base+0x5caa>
  40a9dd:	movabs rax,0x696e6376616c33ff
  40a9e7:	cmp    QWORD PTR [rbp-0x20],rax
  40a9eb:	ja     40ab5b <_start@@Base+0x59fb>
  40a9f1:	mov    rax,QWORD PTR [rbp-0x20]
  40a9f5:	mov    al,0x0
  40a9f7:	mov    rdx,rax
  40a9fa:	movabs rax,0x696e6376616c3300
  40aa04:	cmp    rdx,rax
  40aa07:	jne    40ab3b <_start@@Base+0x59db>
  40aa0d:	mov    rax,QWORD PTR [rbp-0x40]
  40aa11:	mov    QWORD PTR [rbp-0x18],rax
  40aa15:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa19:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa1d:	mov    rax,QWORD PTR [rbp-0x38]
  40aa21:	mov    ecx,0x7
  40aa26:	mov    rdi,rax
  40aa29:	call   405c48 <_start@@Base+0xae8>
  40aa2e:	mov    QWORD PTR [rbp-0x40],rax
  40aa32:	mov    rax,QWORD PTR [rbp-0x18]
  40aa36:	cmp    rax,QWORD PTR [rbp-0x40]
  40aa3a:	je     40ab1b <_start@@Base+0x59bb>
  40aa40:	mov    DWORD PTR [rbp-0x28],0x0
  40aa47:	mov    rax,QWORD PTR [rbp-0x40]
  40aa4b:	mov    QWORD PTR [rbp-0x18],rax
  40aa4f:	lea    rcx,[rbp-0x28]
  40aa53:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa57:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa5b:	mov    rax,QWORD PTR [rbp-0x38]
  40aa5f:	mov    rdi,rax
  40aa62:	call   4066e1 <_start@@Base+0x1581>
  40aa67:	mov    QWORD PTR [rbp-0x40],rax
  40aa6b:	mov    rax,QWORD PTR [rbp-0x18]
  40aa6f:	cmp    rax,QWORD PTR [rbp-0x40]
  40aa73:	jne    40aabf <_start@@Base+0x595f>
  40aa75:	mov    rax,QWORD PTR [rbp-0x40]
  40aa79:	mov    QWORD PTR [rbp-0x18],rax
  40aa7d:	lea    rcx,[rbp-0x28]
  40aa81:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa85:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa89:	mov    rax,QWORD PTR [rbp-0x38]
  40aa8d:	mov    r8,rcx
  40aa90:	lea    rcx,[rip+0x39749]        # 4441e0 <__data_start@@Base+0x120>
  40aa97:	mov    rdi,rax
  40aa9a:	call   4070ed <_start@@Base+0x1f8d>
  40aa9f:	mov    QWORD PTR [rbp-0x40],rax
  40aaa3:	mov    rax,QWORD PTR [rbp-0x40]
  40aaa7:	cmp    rax,QWORD PTR [rbp-0x18]
  40aaab:	je     40ae7c <_start@@Base+0x5d1c>
  40aab1:	mov    rax,QWORD PTR [rbp-0x40]
  40aab5:	cmp    rax,QWORD PTR [rbp-0x48]
  40aab9:	je     40ae7c <_start@@Base+0x5d1c>
  40aabf:	mov    eax,DWORD PTR [rbp-0x28]
  40aac2:	test   eax,eax
  40aac4:	jne    40aad8 <_start@@Base+0x5978>
  40aac6:	mov    rax,QWORD PTR [rbp-0x38]
  40aaca:	mov    eax,DWORD PTR [rax+0x10]
  40aacd:	and    eax,0x2
  40aad0:	test   eax,eax
  40aad2:	je     40ae0a <_start@@Base+0x5caa>
  40aad8:	mov    rax,QWORD PTR [rbp-0x38]
  40aadc:	mov    rax,QWORD PTR [rax]
  40aadf:	mov    ecx,0x4
  40aae4:	mov    edx,0x4
  40aae9:	mov    esi,0x3
  40aaee:	mov    rdi,rax
  40aaf1:	call   41ee2d <flatcc_builder_table_add@@Base>
  40aaf6:	mov    QWORD PTR [rbp-0x10],rax
  40aafa:	cmp    QWORD PTR [rbp-0x10],0x0
  40aaff:	je     40ae6f <_start@@Base+0x5d0f>
  40ab05:	mov    edx,DWORD PTR [rbp-0x28]
  40ab08:	mov    rax,QWORD PTR [rbp-0x10]
  40ab0c:	mov    esi,edx
  40ab0e:	mov    rdi,rax
  40ab11:	call   4053b7 <_start@@Base+0x257>
  40ab16:	jmp    40ae0a <_start@@Base+0x5caa>
  40ab1b:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab1f:	mov    rcx,QWORD PTR [rbp-0x40]
  40ab23:	mov    rax,QWORD PTR [rbp-0x38]
  40ab27:	mov    rsi,rcx
  40ab2a:	mov    rdi,rax
  40ab2d:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ab32:	mov    QWORD PTR [rbp-0x40],rax
  40ab36:	jmp    40ae0a <_start@@Base+0x5caa>
  40ab3b:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab3f:	mov    rcx,QWORD PTR [rbp-0x40]
  40ab43:	mov    rax,QWORD PTR [rbp-0x38]
  40ab47:	mov    rsi,rcx
  40ab4a:	mov    rdi,rax
  40ab4d:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ab52:	mov    QWORD PTR [rbp-0x40],rax
  40ab56:	jmp    40ae0a <_start@@Base+0x5caa>
  40ab5b:	mov    rax,QWORD PTR [rbp-0x20]
  40ab5f:	mov    al,0x0
  40ab61:	mov    rdx,rax
  40ab64:	movabs rax,0x696e6376616c3500
  40ab6e:	cmp    rdx,rax
  40ab71:	jne    40acaa <_start@@Base+0x5b4a>
  40ab77:	mov    rax,QWORD PTR [rbp-0x40]
  40ab7b:	mov    QWORD PTR [rbp-0x18],rax
  40ab7f:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab83:	mov    rsi,QWORD PTR [rbp-0x18]
  40ab87:	mov    rax,QWORD PTR [rbp-0x38]
  40ab8b:	mov    ecx,0x7
  40ab90:	mov    rdi,rax
  40ab93:	call   405c48 <_start@@Base+0xae8>
  40ab98:	mov    QWORD PTR [rbp-0x40],rax
  40ab9c:	mov    rax,QWORD PTR [rbp-0x18]
  40aba0:	cmp    rax,QWORD PTR [rbp-0x40]
  40aba4:	je     40ac8a <_start@@Base+0x5b2a>
  40abaa:	mov    QWORD PTR [rbp-0x28],0x0
  40abb2:	mov    rax,QWORD PTR [rbp-0x40]
  40abb6:	mov    QWORD PTR [rbp-0x18],rax
  40abba:	lea    rcx,[rbp-0x28]
  40abbe:	mov    rdx,QWORD PTR [rbp-0x48]
  40abc2:	mov    rsi,QWORD PTR [rbp-0x18]
  40abc6:	mov    rax,QWORD PTR [rbp-0x38]
  40abca:	mov    rdi,rax
  40abcd:	call   40661a <_start@@Base+0x14ba>
  40abd2:	mov    QWORD PTR [rbp-0x40],rax
  40abd6:	mov    rax,QWORD PTR [rbp-0x18]
  40abda:	cmp    rax,QWORD PTR [rbp-0x40]
  40abde:	jne    40ac2a <_start@@Base+0x5aca>
  40abe0:	mov    rax,QWORD PTR [rbp-0x40]
  40abe4:	mov    QWORD PTR [rbp-0x18],rax
  40abe8:	lea    rcx,[rbp-0x28]
  40abec:	mov    rdx,QWORD PTR [rbp-0x48]
  40abf0:	mov    rsi,QWORD PTR [rbp-0x18]
  40abf4:	mov    rax,QWORD PTR [rbp-0x38]
  40abf8:	mov    r8,rcx
  40abfb:	lea    rcx,[rip+0x395fe]        # 444200 <__data_start@@Base+0x140>
  40ac02:	mov    rdi,rax
  40ac05:	call   406f8e <_start@@Base+0x1e2e>
  40ac0a:	mov    QWORD PTR [rbp-0x40],rax
  40ac0e:	mov    rax,QWORD PTR [rbp-0x40]
  40ac12:	cmp    rax,QWORD PTR [rbp-0x18]
  40ac16:	je     40ae7c <_start@@Base+0x5d1c>
  40ac1c:	mov    rax,QWORD PTR [rbp-0x40]
  40ac20:	cmp    rax,QWORD PTR [rbp-0x48]
  40ac24:	je     40ae7c <_start@@Base+0x5d1c>
  40ac2a:	mov    rax,QWORD PTR [rbp-0x28]
  40ac2e:	test   rax,rax
  40ac31:	jne    40ac45 <_start@@Base+0x5ae5>
  40ac33:	mov    rax,QWORD PTR [rbp-0x38]
  40ac37:	mov    eax,DWORD PTR [rax+0x10]
  40ac3a:	and    eax,0x2
  40ac3d:	test   eax,eax
  40ac3f:	je     40ae0a <_start@@Base+0x5caa>
  40ac45:	mov    rax,QWORD PTR [rbp-0x38]
  40ac49:	mov    rax,QWORD PTR [rax]
  40ac4c:	mov    ecx,0x8
  40ac51:	mov    edx,0x8
  40ac56:	mov    esi,0x5
  40ac5b:	mov    rdi,rax
  40ac5e:	call   41ee2d <flatcc_builder_table_add@@Base>
  40ac63:	mov    QWORD PTR [rbp-0x10],rax
  40ac67:	cmp    QWORD PTR [rbp-0x10],0x0
  40ac6c:	je     40ae72 <_start@@Base+0x5d12>
  40ac72:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac76:	mov    rax,QWORD PTR [rbp-0x10]
  40ac7a:	mov    rsi,rdx
  40ac7d:	mov    rdi,rax
  40ac80:	call   4053e9 <_start@@Base+0x289>
  40ac85:	jmp    40ae0a <_start@@Base+0x5caa>
  40ac8a:	mov    rdx,QWORD PTR [rbp-0x48]
  40ac8e:	mov    rcx,QWORD PTR [rbp-0x40]
  40ac92:	mov    rax,QWORD PTR [rbp-0x38]
  40ac96:	mov    rsi,rcx
  40ac99:	mov    rdi,rax
  40ac9c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40aca1:	mov    QWORD PTR [rbp-0x40],rax
  40aca5:	jmp    40ae0a <_start@@Base+0x5caa>
  40acaa:	mov    rax,QWORD PTR [rbp-0x20]
  40acae:	mov    al,0x0
  40acb0:	mov    rdx,rax
  40acb3:	movabs rax,0x696e6376616c3400
  40acbd:	cmp    rdx,rax
  40acc0:	jne    40adef <_start@@Base+0x5c8f>
  40acc6:	mov    rax,QWORD PTR [rbp-0x40]
  40acca:	mov    QWORD PTR [rbp-0x18],rax
  40acce:	mov    rdx,QWORD PTR [rbp-0x48]
  40acd2:	mov    rsi,QWORD PTR [rbp-0x18]
  40acd6:	mov    rax,QWORD PTR [rbp-0x38]
  40acda:	mov    ecx,0x7
  40acdf:	mov    rdi,rax
  40ace2:	call   405c48 <_start@@Base+0xae8>
  40ace7:	mov    QWORD PTR [rbp-0x40],rax
  40aceb:	mov    rax,QWORD PTR [rbp-0x18]
  40acef:	cmp    rax,QWORD PTR [rbp-0x40]
  40acf3:	je     40add2 <_start@@Base+0x5c72>
  40acf9:	mov    QWORD PTR [rbp-0x28],0x0
  40ad01:	mov    rax,QWORD PTR [rbp-0x40]
  40ad05:	mov    QWORD PTR [rbp-0x18],rax
  40ad09:	lea    rcx,[rbp-0x28]
  40ad0d:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad11:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad15:	mov    rax,QWORD PTR [rbp-0x38]
  40ad19:	mov    rdi,rax
  40ad1c:	call   40661a <_start@@Base+0x14ba>
  40ad21:	mov    QWORD PTR [rbp-0x40],rax
  40ad25:	mov    rax,QWORD PTR [rbp-0x18]
  40ad29:	cmp    rax,QWORD PTR [rbp-0x40]
  40ad2d:	jne    40ad79 <_start@@Base+0x5c19>
  40ad2f:	mov    rax,QWORD PTR [rbp-0x40]
  40ad33:	mov    QWORD PTR [rbp-0x18],rax
  40ad37:	lea    rcx,[rbp-0x28]
  40ad3b:	mov    rdx,QWORD PTR [rbp-0x48]
  40ad3f:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad43:	mov    rax,QWORD PTR [rbp-0x38]
  40ad47:	mov    r8,rcx
  40ad4a:	lea    rcx,[rip+0x394cf]        # 444220 <__data_start@@Base+0x160>
  40ad51:	mov    rdi,rax
  40ad54:	call   406f8e <_start@@Base+0x1e2e>
  40ad59:	mov    QWORD PTR [rbp-0x40],rax
  40ad5d:	mov    rax,QWORD PTR [rbp-0x40]
  40ad61:	cmp    rax,QWORD PTR [rbp-0x18]
  40ad65:	je     40ae7c <_start@@Base+0x5d1c>
  40ad6b:	mov    rax,QWORD PTR [rbp-0x40]
  40ad6f:	cmp    rax,QWORD PTR [rbp-0x48]
  40ad73:	je     40ae7c <_start@@Base+0x5d1c>
  40ad79:	mov    rax,QWORD PTR [rbp-0x28]
  40ad7d:	test   rax,rax
  40ad80:	jne    40ad90 <_start@@Base+0x5c30>
  40ad82:	mov    rax,QWORD PTR [rbp-0x38]
  40ad86:	mov    eax,DWORD PTR [rax+0x10]
  40ad89:	and    eax,0x2
  40ad8c:	test   eax,eax
  40ad8e:	je     40ae0a <_start@@Base+0x5caa>
  40ad90:	mov    rax,QWORD PTR [rbp-0x38]
  40ad94:	mov    rax,QWORD PTR [rax]
  40ad97:	mov    ecx,0x8
  40ad9c:	mov    edx,0x8
  40ada1:	mov    esi,0x4
  40ada6:	mov    rdi,rax
  40ada9:	call   41ee2d <flatcc_builder_table_add@@Base>
  40adae:	mov    QWORD PTR [rbp-0x10],rax
  40adb2:	cmp    QWORD PTR [rbp-0x10],0x0
  40adb7:	je     40ae75 <_start@@Base+0x5d15>
  40adbd:	mov    rdx,QWORD PTR [rbp-0x28]
  40adc1:	mov    rax,QWORD PTR [rbp-0x10]
  40adc5:	mov    rsi,rdx
  40adc8:	mov    rdi,rax
  40adcb:	call   4053e9 <_start@@Base+0x289>
  40add0:	jmp    40ae0a <_start@@Base+0x5caa>
  40add2:	mov    rdx,QWORD PTR [rbp-0x48]
  40add6:	mov    rcx,QWORD PTR [rbp-0x40]
  40adda:	mov    rax,QWORD PTR [rbp-0x38]
  40adde:	mov    rsi,rcx
  40ade1:	mov    rdi,rax
  40ade4:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ade9:	mov    QWORD PTR [rbp-0x40],rax
  40aded:	jmp    40ae0a <_start@@Base+0x5caa>
  40adef:	mov    rdx,QWORD PTR [rbp-0x48]
  40adf3:	mov    rcx,QWORD PTR [rbp-0x40]
  40adf7:	mov    rax,QWORD PTR [rbp-0x38]
  40adfb:	mov    rsi,rcx
  40adfe:	mov    rdi,rax
  40ae01:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ae06:	mov    QWORD PTR [rbp-0x40],rax
  40ae0a:	lea    rcx,[rbp-0x2c]
  40ae0e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae12:	mov    rsi,QWORD PTR [rbp-0x40]
  40ae16:	mov    rax,QWORD PTR [rbp-0x38]
  40ae1a:	mov    rdi,rax
  40ae1d:	call   40590f <_start@@Base+0x7af>
  40ae22:	mov    QWORD PTR [rbp-0x40],rax
  40ae26:	mov    eax,DWORD PTR [rbp-0x2c]
  40ae29:	test   eax,eax
  40ae2b:	jne    40a5e8 <_start@@Base+0x5488>
  40ae31:	mov    rax,QWORD PTR [rbp-0x38]
  40ae35:	mov    eax,DWORD PTR [rax+0x1c]
  40ae38:	test   eax,eax
  40ae3a:	jne    40ae78 <_start@@Base+0x5d18>
  40ae3c:	mov    rax,QWORD PTR [rbp-0x38]
  40ae40:	mov    rax,QWORD PTR [rax]
  40ae43:	mov    rdi,rax
  40ae46:	call   41d7cb <flatcc_builder_end_table@@Base>
  40ae4b:	mov    edx,eax
  40ae4d:	mov    rax,QWORD PTR [rbp-0x50]
  40ae51:	mov    DWORD PTR [rax],edx
  40ae53:	mov    rax,QWORD PTR [rbp-0x50]
  40ae57:	mov    eax,DWORD PTR [rax]
  40ae59:	test   eax,eax
  40ae5b:	je     40ae7b <_start@@Base+0x5d1b>
  40ae5d:	mov    rax,QWORD PTR [rbp-0x40]
  40ae61:	jmp    40ae95 <_start@@Base+0x5d35>
  40ae63:	nop
  40ae64:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae66:	nop
  40ae67:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae69:	nop
  40ae6a:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae6c:	nop
  40ae6d:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae6f:	nop
  40ae70:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae72:	nop
  40ae73:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae75:	nop
  40ae76:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae78:	nop
  40ae79:	jmp    40ae7c <_start@@Base+0x5d1c>
  40ae7b:	nop
  40ae7c:	mov    rdx,QWORD PTR [rbp-0x48]
  40ae80:	mov    rsi,QWORD PTR [rbp-0x40]
  40ae84:	mov    rax,QWORD PTR [rbp-0x38]
  40ae88:	mov    ecx,0x21
  40ae8d:	mov    rdi,rax
  40ae90:	call   425bce <flatcc_json_parser_set_error@@Base>
  40ae95:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae99:	xor    rdi,QWORD PTR fs:0x28
  40aea2:	je     40aea9 <_start@@Base+0x5d49>
  40aea4:	call   405070 <__stack_chk_fail@plt>
  40aea9:	leave  
  40aeaa:	ret    
  40aeab:	push   rbp
  40aeac:	mov    rbp,rsp
  40aeaf:	sub    rsp,0x60
  40aeb3:	mov    QWORD PTR [rbp-0x38],rdi
  40aeb7:	mov    QWORD PTR [rbp-0x40],rsi
  40aebb:	mov    QWORD PTR [rbp-0x48],rdx
  40aebf:	mov    QWORD PTR [rbp-0x50],rcx
  40aec3:	mov    rax,QWORD PTR fs:0x28
  40aecc:	mov    QWORD PTR [rbp-0x8],rax
  40aed0:	xor    eax,eax
  40aed2:	lea    rcx,[rbp-0x2c]
  40aed6:	mov    rdx,QWORD PTR [rbp-0x48]
  40aeda:	mov    rsi,QWORD PTR [rbp-0x40]
  40aede:	mov    rax,QWORD PTR [rbp-0x38]
  40aee2:	mov    rdi,rax
  40aee5:	call   405852 <_start@@Base+0x6f2>
  40aeea:	mov    QWORD PTR [rbp-0x40],rax
  40aeee:	jmp    40b615 <_start@@Base+0x64b5>
  40aef3:	mov    rdx,QWORD PTR [rbp-0x48]
  40aef7:	mov    rcx,QWORD PTR [rbp-0x40]
  40aefb:	mov    rax,QWORD PTR [rbp-0x38]
  40aeff:	mov    rsi,rcx
  40af02:	mov    rdi,rax
  40af05:	call   4055e5 <_start@@Base+0x485>
  40af0a:	mov    QWORD PTR [rbp-0x40],rax
  40af0e:	mov    rdx,QWORD PTR [rbp-0x48]
  40af12:	mov    rax,QWORD PTR [rbp-0x40]
  40af16:	mov    rsi,rdx
  40af19:	mov    rdi,rax
  40af1c:	call   405756 <_start@@Base+0x5f6>
  40af21:	mov    QWORD PTR [rbp-0x20],rax
  40af25:	movabs rax,0x7465737432ffffff
  40af2f:	cmp    QWORD PTR [rbp-0x20],rax
  40af33:	ja     40b18c <_start@@Base+0x602c>
  40af39:	mov    rax,QWORD PTR [rbp-0x20]
  40af3d:	and    rax,0xffffffffff000000
  40af43:	mov    rdx,rax
  40af46:	movabs rax,0x7465737432000000
  40af50:	cmp    rdx,rax
  40af53:	jne    40b04e <_start@@Base+0x5eee>
  40af59:	mov    rax,QWORD PTR [rbp-0x40]
  40af5d:	mov    QWORD PTR [rbp-0x18],rax
  40af61:	mov    rdx,QWORD PTR [rbp-0x48]
  40af65:	mov    rsi,QWORD PTR [rbp-0x18]
  40af69:	mov    rax,QWORD PTR [rbp-0x38]
  40af6d:	mov    ecx,0x5
  40af72:	mov    rdi,rax
  40af75:	call   405c48 <_start@@Base+0xae8>
  40af7a:	mov    QWORD PTR [rbp-0x40],rax
  40af7e:	mov    rax,QWORD PTR [rbp-0x18]
  40af82:	cmp    rax,QWORD PTR [rbp-0x40]
  40af86:	je     40b02e <_start@@Base+0x5ece>
  40af8c:	mov    BYTE PTR [rbp-0x28],0x0
  40af90:	mov    rax,QWORD PTR [rbp-0x50]
  40af94:	add    rax,0x18
  40af98:	mov    QWORD PTR [rbp-0x10],rax
  40af9c:	mov    rax,QWORD PTR [rbp-0x40]
  40afa0:	mov    QWORD PTR [rbp-0x18],rax
  40afa4:	lea    rcx,[rbp-0x28]
  40afa8:	mov    rdx,QWORD PTR [rbp-0x48]
  40afac:	mov    rsi,QWORD PTR [rbp-0x18]
  40afb0:	mov    rax,QWORD PTR [rbp-0x38]
  40afb4:	mov    rdi,rax
  40afb7:	call   40686c <_start@@Base+0x170c>
  40afbc:	mov    QWORD PTR [rbp-0x40],rax
  40afc0:	mov    rax,QWORD PTR [rbp-0x18]
  40afc4:	cmp    rax,QWORD PTR [rbp-0x40]
  40afc8:	jne    40b014 <_start@@Base+0x5eb4>
  40afca:	mov    rax,QWORD PTR [rbp-0x40]
  40afce:	mov    QWORD PTR [rbp-0x18],rax
  40afd2:	lea    rcx,[rbp-0x28]
  40afd6:	mov    rdx,QWORD PTR [rbp-0x48]
  40afda:	mov    rsi,QWORD PTR [rbp-0x18]
  40afde:	mov    rax,QWORD PTR [rbp-0x38]
  40afe2:	mov    r8,rcx
  40afe5:	lea    rcx,[rip+0x39254]        # 444240 <__data_start@@Base+0x180>
  40afec:	mov    rdi,rax
  40afef:	call   4073a4 <_start@@Base+0x2244>
  40aff4:	mov    QWORD PTR [rbp-0x40],rax
  40aff8:	mov    rax,QWORD PTR [rbp-0x40]
  40affc:	cmp    rax,QWORD PTR [rbp-0x18]
  40b000:	je     40b626 <_start@@Base+0x64c6>
  40b006:	mov    rax,QWORD PTR [rbp-0x40]
  40b00a:	cmp    rax,QWORD PTR [rbp-0x48]
  40b00e:	je     40b626 <_start@@Base+0x64c6>
  40b014:	movzx  eax,BYTE PTR [rbp-0x28]
  40b018:	movsx  edx,al
  40b01b:	mov    rax,QWORD PTR [rbp-0x10]
  40b01f:	mov    esi,edx
  40b021:	mov    rdi,rax
  40b024:	call   40534b <_start@@Base+0x1eb>
  40b029:	jmp    40b5f9 <_start@@Base+0x6499>
  40b02e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b032:	mov    rcx,QWORD PTR [rbp-0x40]
  40b036:	mov    rax,QWORD PTR [rbp-0x38]
  40b03a:	mov    rsi,rcx
  40b03d:	mov    rdi,rax
  40b040:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b045:	mov    QWORD PTR [rbp-0x40],rax
  40b049:	jmp    40b5f9 <_start@@Base+0x6499>
  40b04e:	mov    rax,QWORD PTR [rbp-0x20]
  40b052:	and    rax,0xffffffffff000000
  40b058:	mov    rdx,rax
  40b05b:	movabs rax,0x7465737431000000
  40b065:	cmp    rdx,rax
  40b068:	jne    40b16c <_start@@Base+0x600c>
  40b06e:	mov    rax,QWORD PTR [rbp-0x40]
  40b072:	mov    QWORD PTR [rbp-0x18],rax
  40b076:	mov    rdx,QWORD PTR [rbp-0x48]
  40b07a:	mov    rsi,QWORD PTR [rbp-0x18]
  40b07e:	mov    rax,QWORD PTR [rbp-0x38]
  40b082:	mov    ecx,0x5
  40b087:	mov    rdi,rax
  40b08a:	call   405c48 <_start@@Base+0xae8>
  40b08f:	mov    QWORD PTR [rbp-0x40],rax
  40b093:	mov    rax,QWORD PTR [rbp-0x18]
  40b097:	cmp    rax,QWORD PTR [rbp-0x40]
  40b09b:	je     40b14c <_start@@Base+0x5fec>
  40b0a1:	vxorpd xmm0,xmm0,xmm0
  40b0a5:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40b0aa:	mov    rax,QWORD PTR [rbp-0x50]
  40b0ae:	add    rax,0x10
  40b0b2:	mov    QWORD PTR [rbp-0x10],rax
  40b0b6:	mov    rax,QWORD PTR [rbp-0x40]
  40b0ba:	mov    QWORD PTR [rbp-0x18],rax
  40b0be:	lea    rcx,[rbp-0x28]
  40b0c2:	mov    rdx,QWORD PTR [rbp-0x48]
  40b0c6:	mov    rsi,QWORD PTR [rbp-0x18]
  40b0ca:	mov    rax,QWORD PTR [rbp-0x38]
  40b0ce:	mov    rdi,rax
  40b0d1:	call   42695d <flatcc_json_parser_double@@Base>
  40b0d6:	mov    QWORD PTR [rbp-0x40],rax
  40b0da:	mov    rax,QWORD PTR [rbp-0x18]
  40b0de:	cmp    rax,QWORD PTR [rbp-0x40]
  40b0e2:	jne    40b12e <_start@@Base+0x5fce>
  40b0e4:	mov    rax,QWORD PTR [rbp-0x40]
  40b0e8:	mov    QWORD PTR [rbp-0x18],rax
  40b0ec:	lea    rcx,[rbp-0x28]
  40b0f0:	mov    rdx,QWORD PTR [rbp-0x48]
  40b0f4:	mov    rsi,QWORD PTR [rbp-0x18]
  40b0f8:	mov    rax,QWORD PTR [rbp-0x38]
  40b0fc:	mov    r8,rcx
  40b0ff:	lea    rcx,[rip+0x3915a]        # 444260 <__data_start@@Base+0x1a0>
  40b106:	mov    rdi,rax
  40b109:	call   4077b7 <_start@@Base+0x2657>
  40b10e:	mov    QWORD PTR [rbp-0x40],rax
  40b112:	mov    rax,QWORD PTR [rbp-0x40]
  40b116:	cmp    rax,QWORD PTR [rbp-0x18]
  40b11a:	je     40b626 <_start@@Base+0x64c6>
  40b120:	mov    rax,QWORD PTR [rbp-0x40]
  40b124:	cmp    rax,QWORD PTR [rbp-0x48]
  40b128:	je     40b626 <_start@@Base+0x64c6>
  40b12e:	mov    rdx,QWORD PTR [rbp-0x28]
  40b132:	mov    rax,QWORD PTR [rbp-0x10]
  40b136:	mov    QWORD PTR [rbp-0x58],rdx
  40b13a:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  40b13f:	mov    rdi,rax
  40b142:	call   405482 <_start@@Base+0x322>
  40b147:	jmp    40b5f9 <_start@@Base+0x6499>
  40b14c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b150:	mov    rcx,QWORD PTR [rbp-0x40]
  40b154:	mov    rax,QWORD PTR [rbp-0x38]
  40b158:	mov    rsi,rcx
  40b15b:	mov    rdi,rax
  40b15e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b163:	mov    QWORD PTR [rbp-0x40],rax
  40b167:	jmp    40b5f9 <_start@@Base+0x6499>
  40b16c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b170:	mov    rcx,QWORD PTR [rbp-0x40]
  40b174:	mov    rax,QWORD PTR [rbp-0x38]
  40b178:	mov    rsi,rcx
  40b17b:	mov    rdi,rax
  40b17e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b183:	mov    QWORD PTR [rbp-0x40],rax
  40b187:	jmp    40b5f9 <_start@@Base+0x6499>
  40b18c:	movabs rax,0x77ffffffffffffff
  40b196:	cmp    QWORD PTR [rbp-0x20],rax
  40b19a:	ja     40b258 <_start@@Base+0x60f8>
  40b1a0:	mov    rax,QWORD PTR [rbp-0x20]
  40b1a4:	and    rax,0xffffffffff000000
  40b1aa:	mov    rdx,rax
  40b1ad:	movabs rax,0x7465737433000000
  40b1b7:	cmp    rdx,rax
  40b1ba:	jne    40b238 <_start@@Base+0x60d8>
  40b1bc:	mov    rax,QWORD PTR [rbp-0x40]
  40b1c0:	mov    QWORD PTR [rbp-0x18],rax
  40b1c4:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1c8:	mov    rsi,QWORD PTR [rbp-0x18]
  40b1cc:	mov    rax,QWORD PTR [rbp-0x38]
  40b1d0:	mov    ecx,0x5
  40b1d5:	mov    rdi,rax
  40b1d8:	call   405c48 <_start@@Base+0xae8>
  40b1dd:	mov    QWORD PTR [rbp-0x40],rax
  40b1e1:	mov    rax,QWORD PTR [rbp-0x18]
  40b1e5:	cmp    rax,QWORD PTR [rbp-0x40]
  40b1e9:	je     40b218 <_start@@Base+0x60b8>
  40b1eb:	mov    rax,QWORD PTR [rbp-0x50]
  40b1ef:	add    rax,0x1a
  40b1f3:	mov    QWORD PTR [rbp-0x10],rax
  40b1f7:	mov    rcx,QWORD PTR [rbp-0x10]
  40b1fb:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1ff:	mov    rsi,QWORD PTR [rbp-0x40]
  40b203:	mov    rax,QWORD PTR [rbp-0x38]
  40b207:	mov    rdi,rax
  40b20a:	call   409620 <_start@@Base+0x44c0>
  40b20f:	mov    QWORD PTR [rbp-0x40],rax
  40b213:	jmp    40b5f9 <_start@@Base+0x6499>
  40b218:	mov    rdx,QWORD PTR [rbp-0x48]
  40b21c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b220:	mov    rax,QWORD PTR [rbp-0x38]
  40b224:	mov    rsi,rcx
  40b227:	mov    rdi,rax
  40b22a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b22f:	mov    QWORD PTR [rbp-0x40],rax
  40b233:	jmp    40b5f9 <_start@@Base+0x6499>
  40b238:	mov    rdx,QWORD PTR [rbp-0x48]
  40b23c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b240:	mov    rax,QWORD PTR [rbp-0x38]
  40b244:	mov    rsi,rcx
  40b247:	mov    rdi,rax
  40b24a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b24f:	mov    QWORD PTR [rbp-0x40],rax
  40b253:	jmp    40b5f9 <_start@@Base+0x6499>
  40b258:	movabs rax,0x78ffffffffffffff
  40b262:	cmp    QWORD PTR [rbp-0x20],rax
  40b266:	ja     40b3a8 <_start@@Base+0x6248>
  40b26c:	movabs rax,0xff00000000000000
  40b276:	and    rax,QWORD PTR [rbp-0x20]
  40b27a:	mov    rdx,rax
  40b27d:	movabs rax,0x7800000000000000
  40b287:	cmp    rdx,rax
  40b28a:	jne    40b388 <_start@@Base+0x6228>
  40b290:	mov    rax,QWORD PTR [rbp-0x40]
  40b294:	mov    QWORD PTR [rbp-0x18],rax
  40b298:	mov    rdx,QWORD PTR [rbp-0x48]
  40b29c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b2a0:	mov    rax,QWORD PTR [rbp-0x38]
  40b2a4:	mov    ecx,0x1
  40b2a9:	mov    rdi,rax
  40b2ac:	call   405c48 <_start@@Base+0xae8>
  40b2b1:	mov    QWORD PTR [rbp-0x40],rax
  40b2b5:	mov    rax,QWORD PTR [rbp-0x18]
  40b2b9:	cmp    rax,QWORD PTR [rbp-0x40]
  40b2bd:	je     40b368 <_start@@Base+0x6208>
  40b2c3:	vxorps xmm0,xmm0,xmm0
  40b2c7:	vmovss DWORD PTR [rbp-0x28],xmm0
  40b2cc:	mov    rax,QWORD PTR [rbp-0x50]
  40b2d0:	mov    QWORD PTR [rbp-0x10],rax
  40b2d4:	mov    rax,QWORD PTR [rbp-0x40]
  40b2d8:	mov    QWORD PTR [rbp-0x18],rax
  40b2dc:	lea    rcx,[rbp-0x28]
  40b2e0:	mov    rdx,QWORD PTR [rbp-0x48]
  40b2e4:	mov    rsi,QWORD PTR [rbp-0x18]
  40b2e8:	mov    rax,QWORD PTR [rbp-0x38]
  40b2ec:	mov    rdi,rax
  40b2ef:	call   426aac <flatcc_json_parser_float@@Base>
  40b2f4:	mov    QWORD PTR [rbp-0x40],rax
  40b2f8:	mov    rax,QWORD PTR [rbp-0x18]
  40b2fc:	cmp    rax,QWORD PTR [rbp-0x40]
  40b300:	jne    40b34c <_start@@Base+0x61ec>
  40b302:	mov    rax,QWORD PTR [rbp-0x40]
  40b306:	mov    QWORD PTR [rbp-0x18],rax
  40b30a:	lea    rcx,[rbp-0x28]
  40b30e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b312:	mov    rsi,QWORD PTR [rbp-0x18]
  40b316:	mov    rax,QWORD PTR [rbp-0x38]
  40b31a:	mov    r8,rcx
  40b31d:	lea    rcx,[rip+0x38f5c]        # 444280 <__data_start@@Base+0x1c0>
  40b324:	mov    rdi,rax
  40b327:	call   407652 <_start@@Base+0x24f2>
  40b32c:	mov    QWORD PTR [rbp-0x40],rax
  40b330:	mov    rax,QWORD PTR [rbp-0x40]
  40b334:	cmp    rax,QWORD PTR [rbp-0x18]
  40b338:	je     40b626 <_start@@Base+0x64c6>
  40b33e:	mov    rax,QWORD PTR [rbp-0x40]
  40b342:	cmp    rax,QWORD PTR [rbp-0x48]
  40b346:	je     40b626 <_start@@Base+0x64c6>
  40b34c:	mov    edx,DWORD PTR [rbp-0x28]
  40b34f:	mov    rax,QWORD PTR [rbp-0x10]
  40b353:	mov    DWORD PTR [rbp-0x58],edx
  40b356:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40b35b:	mov    rdi,rax
  40b35e:	call   405432 <_start@@Base+0x2d2>
  40b363:	jmp    40b5f9 <_start@@Base+0x6499>
  40b368:	mov    rdx,QWORD PTR [rbp-0x48]
  40b36c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b370:	mov    rax,QWORD PTR [rbp-0x38]
  40b374:	mov    rsi,rcx
  40b377:	mov    rdi,rax
  40b37a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b37f:	mov    QWORD PTR [rbp-0x40],rax
  40b383:	jmp    40b5f9 <_start@@Base+0x6499>
  40b388:	mov    rdx,QWORD PTR [rbp-0x48]
  40b38c:	mov    rcx,QWORD PTR [rbp-0x40]
  40b390:	mov    rax,QWORD PTR [rbp-0x38]
  40b394:	mov    rsi,rcx
  40b397:	mov    rdi,rax
  40b39a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b39f:	mov    QWORD PTR [rbp-0x40],rax
  40b3a3:	jmp    40b5f9 <_start@@Base+0x6499>
  40b3a8:	movabs rax,0xff00000000000000
  40b3b2:	and    rax,QWORD PTR [rbp-0x20]
  40b3b6:	mov    rdx,rax
  40b3b9:	movabs rax,0x7a00000000000000
  40b3c3:	cmp    rdx,rax
  40b3c6:	jne    40b4c8 <_start@@Base+0x6368>
  40b3cc:	mov    rax,QWORD PTR [rbp-0x40]
  40b3d0:	mov    QWORD PTR [rbp-0x18],rax
  40b3d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40b3d8:	mov    rsi,QWORD PTR [rbp-0x18]
  40b3dc:	mov    rax,QWORD PTR [rbp-0x38]
  40b3e0:	mov    ecx,0x1
  40b3e5:	mov    rdi,rax
  40b3e8:	call   405c48 <_start@@Base+0xae8>
  40b3ed:	mov    QWORD PTR [rbp-0x40],rax
  40b3f1:	mov    rax,QWORD PTR [rbp-0x18]
  40b3f5:	cmp    rax,QWORD PTR [rbp-0x40]
  40b3f9:	je     40b4a8 <_start@@Base+0x6348>
  40b3ff:	vxorps xmm0,xmm0,xmm0
  40b403:	vmovss DWORD PTR [rbp-0x28],xmm0
  40b408:	mov    rax,QWORD PTR [rbp-0x50]
  40b40c:	add    rax,0x8
  40b410:	mov    QWORD PTR [rbp-0x10],rax
  40b414:	mov    rax,QWORD PTR [rbp-0x40]
  40b418:	mov    QWORD PTR [rbp-0x18],rax
  40b41c:	lea    rcx,[rbp-0x28]
  40b420:	mov    rdx,QWORD PTR [rbp-0x48]
  40b424:	mov    rsi,QWORD PTR [rbp-0x18]
  40b428:	mov    rax,QWORD PTR [rbp-0x38]
  40b42c:	mov    rdi,rax
  40b42f:	call   426aac <flatcc_json_parser_float@@Base>
  40b434:	mov    QWORD PTR [rbp-0x40],rax
  40b438:	mov    rax,QWORD PTR [rbp-0x18]
  40b43c:	cmp    rax,QWORD PTR [rbp-0x40]
  40b440:	jne    40b48c <_start@@Base+0x632c>
  40b442:	mov    rax,QWORD PTR [rbp-0x40]
  40b446:	mov    QWORD PTR [rbp-0x18],rax
  40b44a:	lea    rcx,[rbp-0x28]
  40b44e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b452:	mov    rsi,QWORD PTR [rbp-0x18]
  40b456:	mov    rax,QWORD PTR [rbp-0x38]
  40b45a:	mov    r8,rcx
  40b45d:	lea    rcx,[rip+0x38e3c]        # 4442a0 <__data_start@@Base+0x1e0>
  40b464:	mov    rdi,rax
  40b467:	call   407652 <_start@@Base+0x24f2>
  40b46c:	mov    QWORD PTR [rbp-0x40],rax
  40b470:	mov    rax,QWORD PTR [rbp-0x40]
  40b474:	cmp    rax,QWORD PTR [rbp-0x18]
  40b478:	je     40b626 <_start@@Base+0x64c6>
  40b47e:	mov    rax,QWORD PTR [rbp-0x40]
  40b482:	cmp    rax,QWORD PTR [rbp-0x48]
  40b486:	je     40b626 <_start@@Base+0x64c6>
  40b48c:	mov    edx,DWORD PTR [rbp-0x28]
  40b48f:	mov    rax,QWORD PTR [rbp-0x10]
  40b493:	mov    DWORD PTR [rbp-0x58],edx
  40b496:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40b49b:	mov    rdi,rax
  40b49e:	call   405432 <_start@@Base+0x2d2>
  40b4a3:	jmp    40b5f9 <_start@@Base+0x6499>
  40b4a8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b4ac:	mov    rcx,QWORD PTR [rbp-0x40]
  40b4b0:	mov    rax,QWORD PTR [rbp-0x38]
  40b4b4:	mov    rsi,rcx
  40b4b7:	mov    rdi,rax
  40b4ba:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b4bf:	mov    QWORD PTR [rbp-0x40],rax
  40b4c3:	jmp    40b5f9 <_start@@Base+0x6499>
  40b4c8:	movabs rax,0xff00000000000000
  40b4d2:	and    rax,QWORD PTR [rbp-0x20]
  40b4d6:	mov    rdx,rax
  40b4d9:	movabs rax,0x7900000000000000
  40b4e3:	cmp    rdx,rax
  40b4e6:	jne    40b5de <_start@@Base+0x647e>
  40b4ec:	mov    rax,QWORD PTR [rbp-0x40]
  40b4f0:	mov    QWORD PTR [rbp-0x18],rax
  40b4f4:	mov    rdx,QWORD PTR [rbp-0x48]
  40b4f8:	mov    rsi,QWORD PTR [rbp-0x18]
  40b4fc:	mov    rax,QWORD PTR [rbp-0x38]
  40b500:	mov    ecx,0x1
  40b505:	mov    rdi,rax
  40b508:	call   405c48 <_start@@Base+0xae8>
  40b50d:	mov    QWORD PTR [rbp-0x40],rax
  40b511:	mov    rax,QWORD PTR [rbp-0x18]
  40b515:	cmp    rax,QWORD PTR [rbp-0x40]
  40b519:	je     40b5c1 <_start@@Base+0x6461>
  40b51f:	vxorps xmm0,xmm0,xmm0
  40b523:	vmovss DWORD PTR [rbp-0x28],xmm0
  40b528:	mov    rax,QWORD PTR [rbp-0x50]
  40b52c:	add    rax,0x4
  40b530:	mov    QWORD PTR [rbp-0x10],rax
  40b534:	mov    rax,QWORD PTR [rbp-0x40]
  40b538:	mov    QWORD PTR [rbp-0x18],rax
  40b53c:	lea    rcx,[rbp-0x28]
  40b540:	mov    rdx,QWORD PTR [rbp-0x48]
  40b544:	mov    rsi,QWORD PTR [rbp-0x18]
  40b548:	mov    rax,QWORD PTR [rbp-0x38]
  40b54c:	mov    rdi,rax
  40b54f:	call   426aac <flatcc_json_parser_float@@Base>
  40b554:	mov    QWORD PTR [rbp-0x40],rax
  40b558:	mov    rax,QWORD PTR [rbp-0x18]
  40b55c:	cmp    rax,QWORD PTR [rbp-0x40]
  40b560:	jne    40b5a8 <_start@@Base+0x6448>
  40b562:	mov    rax,QWORD PTR [rbp-0x40]
  40b566:	mov    QWORD PTR [rbp-0x18],rax
  40b56a:	lea    rcx,[rbp-0x28]
  40b56e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b572:	mov    rsi,QWORD PTR [rbp-0x18]
  40b576:	mov    rax,QWORD PTR [rbp-0x38]
  40b57a:	mov    r8,rcx
  40b57d:	lea    rcx,[rip+0x38d3c]        # 4442c0 <__data_start@@Base+0x200>
  40b584:	mov    rdi,rax
  40b587:	call   407652 <_start@@Base+0x24f2>
  40b58c:	mov    QWORD PTR [rbp-0x40],rax
  40b590:	mov    rax,QWORD PTR [rbp-0x40]
  40b594:	cmp    rax,QWORD PTR [rbp-0x18]
  40b598:	je     40b626 <_start@@Base+0x64c6>
  40b59e:	mov    rax,QWORD PTR [rbp-0x40]
  40b5a2:	cmp    rax,QWORD PTR [rbp-0x48]
  40b5a6:	je     40b626 <_start@@Base+0x64c6>
  40b5a8:	mov    edx,DWORD PTR [rbp-0x28]
  40b5ab:	mov    rax,QWORD PTR [rbp-0x10]
  40b5af:	mov    DWORD PTR [rbp-0x58],edx
  40b5b2:	vmovss xmm0,DWORD PTR [rbp-0x58]
  40b5b7:	mov    rdi,rax
  40b5ba:	call   405432 <_start@@Base+0x2d2>
  40b5bf:	jmp    40b5f9 <_start@@Base+0x6499>
  40b5c1:	mov    rdx,QWORD PTR [rbp-0x48]
  40b5c5:	mov    rcx,QWORD PTR [rbp-0x40]
  40b5c9:	mov    rax,QWORD PTR [rbp-0x38]
  40b5cd:	mov    rsi,rcx
  40b5d0:	mov    rdi,rax
  40b5d3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b5d8:	mov    QWORD PTR [rbp-0x40],rax
  40b5dc:	jmp    40b5f9 <_start@@Base+0x6499>
  40b5de:	mov    rdx,QWORD PTR [rbp-0x48]
  40b5e2:	mov    rcx,QWORD PTR [rbp-0x40]
  40b5e6:	mov    rax,QWORD PTR [rbp-0x38]
  40b5ea:	mov    rsi,rcx
  40b5ed:	mov    rdi,rax
  40b5f0:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b5f5:	mov    QWORD PTR [rbp-0x40],rax
  40b5f9:	lea    rcx,[rbp-0x2c]
  40b5fd:	mov    rdx,QWORD PTR [rbp-0x48]
  40b601:	mov    rsi,QWORD PTR [rbp-0x40]
  40b605:	mov    rax,QWORD PTR [rbp-0x38]
  40b609:	mov    rdi,rax
  40b60c:	call   40590f <_start@@Base+0x7af>
  40b611:	mov    QWORD PTR [rbp-0x40],rax
  40b615:	mov    eax,DWORD PTR [rbp-0x2c]
  40b618:	test   eax,eax
  40b61a:	jne    40aef3 <_start@@Base+0x5d93>
  40b620:	mov    rax,QWORD PTR [rbp-0x40]
  40b624:	jmp    40b63f <_start@@Base+0x64df>
  40b626:	mov    rdx,QWORD PTR [rbp-0x48]
  40b62a:	mov    rsi,QWORD PTR [rbp-0x40]
  40b62e:	mov    rax,QWORD PTR [rbp-0x38]
  40b632:	mov    ecx,0x21
  40b637:	mov    rdi,rax
  40b63a:	call   425bce <flatcc_json_parser_set_error@@Base>
  40b63f:	mov    rdi,QWORD PTR [rbp-0x8]
  40b643:	xor    rdi,QWORD PTR fs:0x28
  40b64c:	je     40b653 <_start@@Base+0x64f3>
  40b64e:	call   405070 <__stack_chk_fail@plt>
  40b653:	leave  
  40b654:	ret    
  40b655:	push   rbp
  40b656:	mov    rbp,rsp
  40b659:	sub    rsp,0x30
  40b65d:	mov    QWORD PTR [rbp-0x18],rdi
  40b661:	mov    QWORD PTR [rbp-0x20],rsi
  40b665:	mov    QWORD PTR [rbp-0x28],rdx
  40b669:	mov    QWORD PTR [rbp-0x30],rcx
  40b66d:	mov    rax,QWORD PTR [rbp-0x30]
  40b671:	mov    DWORD PTR [rax],0x0
  40b677:	mov    rax,QWORD PTR [rbp-0x18]
  40b67b:	mov    rax,QWORD PTR [rax]
  40b67e:	mov    edx,0x10
  40b683:	mov    esi,0x20
  40b688:	mov    rdi,rax
  40b68b:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  40b690:	mov    QWORD PTR [rbp-0x8],rax
  40b694:	cmp    QWORD PTR [rbp-0x8],0x0
  40b699:	je     40b6e8 <_start@@Base+0x6588>
  40b69b:	mov    rcx,QWORD PTR [rbp-0x8]
  40b69f:	mov    rdx,QWORD PTR [rbp-0x28]
  40b6a3:	mov    rsi,QWORD PTR [rbp-0x20]
  40b6a7:	mov    rax,QWORD PTR [rbp-0x18]
  40b6ab:	mov    rdi,rax
  40b6ae:	call   40aeab <_start@@Base+0x5d4b>
  40b6b3:	mov    QWORD PTR [rbp-0x20],rax
  40b6b7:	mov    rax,QWORD PTR [rbp-0x20]
  40b6bb:	cmp    rax,QWORD PTR [rbp-0x28]
  40b6bf:	je     40b6e9 <_start@@Base+0x6589>
  40b6c1:	mov    rax,QWORD PTR [rbp-0x18]
  40b6c5:	mov    rax,QWORD PTR [rax]
  40b6c8:	mov    rdi,rax
  40b6cb:	call   41c263 <flatcc_builder_end_struct@@Base>
  40b6d0:	mov    edx,eax
  40b6d2:	mov    rax,QWORD PTR [rbp-0x30]
  40b6d6:	mov    DWORD PTR [rax],edx
  40b6d8:	mov    rax,QWORD PTR [rbp-0x30]
  40b6dc:	mov    eax,DWORD PTR [rax]
  40b6de:	test   eax,eax
  40b6e0:	je     40b6e9 <_start@@Base+0x6589>
  40b6e2:	mov    rax,QWORD PTR [rbp-0x20]
  40b6e6:	jmp    40b702 <_start@@Base+0x65a2>
  40b6e8:	nop
  40b6e9:	mov    rdx,QWORD PTR [rbp-0x28]
  40b6ed:	mov    rsi,QWORD PTR [rbp-0x20]
  40b6f1:	mov    rax,QWORD PTR [rbp-0x18]
  40b6f5:	mov    ecx,0x21
  40b6fa:	mov    rdi,rax
  40b6fd:	call   425bce <flatcc_json_parser_set_error@@Base>
  40b702:	leave  
  40b703:	ret    
  40b704:	push   rbp
  40b705:	mov    rbp,rsp
  40b708:	sub    rsp,0x50
  40b70c:	mov    QWORD PTR [rbp-0x38],rdi
  40b710:	mov    QWORD PTR [rbp-0x40],rsi
  40b714:	mov    QWORD PTR [rbp-0x48],rdx
  40b718:	mov    QWORD PTR [rbp-0x50],rcx
  40b71c:	mov    rax,QWORD PTR fs:0x28
  40b725:	mov    QWORD PTR [rbp-0x8],rax
  40b729:	xor    eax,eax
  40b72b:	lea    rcx,[rbp-0x28]
  40b72f:	mov    rdx,QWORD PTR [rbp-0x48]
  40b733:	mov    rsi,QWORD PTR [rbp-0x40]
  40b737:	mov    rax,QWORD PTR [rbp-0x38]
  40b73b:	mov    rdi,rax
  40b73e:	call   405852 <_start@@Base+0x6f2>
  40b743:	mov    QWORD PTR [rbp-0x40],rax
  40b747:	jmp    40b9c7 <_start@@Base+0x6867>
  40b74c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b750:	mov    rcx,QWORD PTR [rbp-0x40]
  40b754:	mov    rax,QWORD PTR [rbp-0x38]
  40b758:	mov    rsi,rcx
  40b75b:	mov    rdi,rax
  40b75e:	call   4055e5 <_start@@Base+0x485>
  40b763:	mov    QWORD PTR [rbp-0x40],rax
  40b767:	mov    rdx,QWORD PTR [rbp-0x48]
  40b76b:	mov    rax,QWORD PTR [rbp-0x40]
  40b76f:	mov    rsi,rdx
  40b772:	mov    rdi,rax
  40b775:	call   405756 <_start@@Base+0x5f6>
  40b77a:	mov    QWORD PTR [rbp-0x20],rax
  40b77e:	movabs rax,0xffff000000000000
  40b788:	and    rax,QWORD PTR [rbp-0x20]
  40b78c:	mov    rdx,rax
  40b78f:	movabs rax,0x6964000000000000
  40b799:	cmp    rdx,rax
  40b79c:	jne    40b892 <_start@@Base+0x6732>
  40b7a2:	mov    rax,QWORD PTR [rbp-0x40]
  40b7a6:	mov    QWORD PTR [rbp-0x18],rax
  40b7aa:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7ae:	mov    rsi,QWORD PTR [rbp-0x18]
  40b7b2:	mov    rax,QWORD PTR [rbp-0x38]
  40b7b6:	mov    ecx,0x2
  40b7bb:	mov    rdi,rax
  40b7be:	call   405c48 <_start@@Base+0xae8>
  40b7c3:	mov    QWORD PTR [rbp-0x40],rax
  40b7c7:	mov    rax,QWORD PTR [rbp-0x18]
  40b7cb:	cmp    rax,QWORD PTR [rbp-0x40]
  40b7cf:	je     40b872 <_start@@Base+0x6712>
  40b7d5:	mov    DWORD PTR [rbp-0x24],0x0
  40b7dc:	mov    rax,QWORD PTR [rbp-0x50]
  40b7e0:	mov    QWORD PTR [rbp-0x10],rax
  40b7e4:	mov    rax,QWORD PTR [rbp-0x40]
  40b7e8:	mov    QWORD PTR [rbp-0x18],rax
  40b7ec:	lea    rcx,[rbp-0x24]
  40b7f0:	mov    rdx,QWORD PTR [rbp-0x48]
  40b7f4:	mov    rsi,QWORD PTR [rbp-0x18]
  40b7f8:	mov    rax,QWORD PTR [rbp-0x38]
  40b7fc:	mov    rdi,rax
  40b7ff:	call   4063cc <_start@@Base+0x126c>
  40b804:	mov    QWORD PTR [rbp-0x40],rax
  40b808:	mov    rax,QWORD PTR [rbp-0x18]
  40b80c:	cmp    rax,QWORD PTR [rbp-0x40]
  40b810:	jne    40b85c <_start@@Base+0x66fc>
  40b812:	mov    rax,QWORD PTR [rbp-0x40]
  40b816:	mov    QWORD PTR [rbp-0x18],rax
  40b81a:	lea    rcx,[rbp-0x24]
  40b81e:	mov    rdx,QWORD PTR [rbp-0x48]
  40b822:	mov    rsi,QWORD PTR [rbp-0x18]
  40b826:	mov    rax,QWORD PTR [rbp-0x38]
  40b82a:	mov    r8,rcx
  40b82d:	lea    rcx,[rip+0x38aac]        # 4442e0 <__data_start@@Base+0x220>
  40b834:	mov    rdi,rax
  40b837:	call   406b86 <_start@@Base+0x1a26>
  40b83c:	mov    QWORD PTR [rbp-0x40],rax
  40b840:	mov    rax,QWORD PTR [rbp-0x40]
  40b844:	cmp    rax,QWORD PTR [rbp-0x18]
  40b848:	je     40b9d8 <_start@@Base+0x6878>
  40b84e:	mov    rax,QWORD PTR [rbp-0x40]
  40b852:	cmp    rax,QWORD PTR [rbp-0x48]
  40b856:	je     40b9d8 <_start@@Base+0x6878>
  40b85c:	mov    edx,DWORD PTR [rbp-0x24]
  40b85f:	mov    rax,QWORD PTR [rbp-0x10]
  40b863:	mov    esi,edx
  40b865:	mov    rdi,rax
  40b868:	call   4052e1 <_start@@Base+0x181>
  40b86d:	jmp    40b9ab <_start@@Base+0x684b>
  40b872:	mov    rdx,QWORD PTR [rbp-0x48]
  40b876:	mov    rcx,QWORD PTR [rbp-0x40]
  40b87a:	mov    rax,QWORD PTR [rbp-0x38]
  40b87e:	mov    rsi,rcx
  40b881:	mov    rdi,rax
  40b884:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b889:	mov    QWORD PTR [rbp-0x40],rax
  40b88d:	jmp    40b9ab <_start@@Base+0x684b>
  40b892:	movabs rax,0x64697374616e6365
  40b89c:	cmp    QWORD PTR [rbp-0x20],rax
  40b8a0:	jne    40b990 <_start@@Base+0x6830>
  40b8a6:	mov    rax,QWORD PTR [rbp-0x40]
  40b8aa:	mov    QWORD PTR [rbp-0x18],rax
  40b8ae:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8b2:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8b6:	mov    rax,QWORD PTR [rbp-0x38]
  40b8ba:	mov    ecx,0x8
  40b8bf:	mov    rdi,rax
  40b8c2:	call   405c48 <_start@@Base+0xae8>
  40b8c7:	mov    QWORD PTR [rbp-0x40],rax
  40b8cb:	mov    rax,QWORD PTR [rbp-0x18]
  40b8cf:	cmp    rax,QWORD PTR [rbp-0x40]
  40b8d3:	je     40b973 <_start@@Base+0x6813>
  40b8d9:	mov    DWORD PTR [rbp-0x24],0x0
  40b8e0:	mov    rax,QWORD PTR [rbp-0x50]
  40b8e4:	add    rax,0x4
  40b8e8:	mov    QWORD PTR [rbp-0x10],rax
  40b8ec:	mov    rax,QWORD PTR [rbp-0x40]
  40b8f0:	mov    QWORD PTR [rbp-0x18],rax
  40b8f4:	lea    rcx,[rbp-0x24]
  40b8f8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8fc:	mov    rsi,QWORD PTR [rbp-0x18]
  40b900:	mov    rax,QWORD PTR [rbp-0x38]
  40b904:	mov    rdi,rax
  40b907:	call   4063cc <_start@@Base+0x126c>
  40b90c:	mov    QWORD PTR [rbp-0x40],rax
  40b910:	mov    rax,QWORD PTR [rbp-0x18]
  40b914:	cmp    rax,QWORD PTR [rbp-0x40]
  40b918:	jne    40b960 <_start@@Base+0x6800>
  40b91a:	mov    rax,QWORD PTR [rbp-0x40]
  40b91e:	mov    QWORD PTR [rbp-0x18],rax
  40b922:	lea    rcx,[rbp-0x24]
  40b926:	mov    rdx,QWORD PTR [rbp-0x48]
  40b92a:	mov    rsi,QWORD PTR [rbp-0x18]
  40b92e:	mov    rax,QWORD PTR [rbp-0x38]
  40b932:	mov    r8,rcx
  40b935:	lea    rcx,[rip+0x389c4]        # 444300 <__data_start@@Base+0x240>
  40b93c:	mov    rdi,rax
  40b93f:	call   406b86 <_start@@Base+0x1a26>
  40b944:	mov    QWORD PTR [rbp-0x40],rax
  40b948:	mov    rax,QWORD PTR [rbp-0x40]
  40b94c:	cmp    rax,QWORD PTR [rbp-0x18]
  40b950:	je     40b9d8 <_start@@Base+0x6878>
  40b956:	mov    rax,QWORD PTR [rbp-0x40]
  40b95a:	cmp    rax,QWORD PTR [rbp-0x48]
  40b95e:	je     40b9d8 <_start@@Base+0x6878>
  40b960:	mov    edx,DWORD PTR [rbp-0x24]
  40b963:	mov    rax,QWORD PTR [rbp-0x10]
  40b967:	mov    esi,edx
  40b969:	mov    rdi,rax
  40b96c:	call   4052e1 <_start@@Base+0x181>
  40b971:	jmp    40b9ab <_start@@Base+0x684b>
  40b973:	mov    rdx,QWORD PTR [rbp-0x48]
  40b977:	mov    rcx,QWORD PTR [rbp-0x40]
  40b97b:	mov    rax,QWORD PTR [rbp-0x38]
  40b97f:	mov    rsi,rcx
  40b982:	mov    rdi,rax
  40b985:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b98a:	mov    QWORD PTR [rbp-0x40],rax
  40b98e:	jmp    40b9ab <_start@@Base+0x684b>
  40b990:	mov    rdx,QWORD PTR [rbp-0x48]
  40b994:	mov    rcx,QWORD PTR [rbp-0x40]
  40b998:	mov    rax,QWORD PTR [rbp-0x38]
  40b99c:	mov    rsi,rcx
  40b99f:	mov    rdi,rax
  40b9a2:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40b9a7:	mov    QWORD PTR [rbp-0x40],rax
  40b9ab:	lea    rcx,[rbp-0x28]
  40b9af:	mov    rdx,QWORD PTR [rbp-0x48]
  40b9b3:	mov    rsi,QWORD PTR [rbp-0x40]
  40b9b7:	mov    rax,QWORD PTR [rbp-0x38]
  40b9bb:	mov    rdi,rax
  40b9be:	call   40590f <_start@@Base+0x7af>
  40b9c3:	mov    QWORD PTR [rbp-0x40],rax
  40b9c7:	mov    eax,DWORD PTR [rbp-0x28]
  40b9ca:	test   eax,eax
  40b9cc:	jne    40b74c <_start@@Base+0x65ec>
  40b9d2:	mov    rax,QWORD PTR [rbp-0x40]
  40b9d6:	jmp    40b9f1 <_start@@Base+0x6891>
  40b9d8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b9dc:	mov    rsi,QWORD PTR [rbp-0x40]
  40b9e0:	mov    rax,QWORD PTR [rbp-0x38]
  40b9e4:	mov    ecx,0x21
  40b9e9:	mov    rdi,rax
  40b9ec:	call   425bce <flatcc_json_parser_set_error@@Base>
  40b9f1:	mov    rdi,QWORD PTR [rbp-0x8]
  40b9f5:	xor    rdi,QWORD PTR fs:0x28
  40b9fe:	je     40ba05 <_start@@Base+0x68a5>
  40ba00:	call   405070 <__stack_chk_fail@plt>
  40ba05:	leave  
  40ba06:	ret    
  40ba07:	push   rbp
  40ba08:	mov    rbp,rsp
  40ba0b:	sub    rsp,0x30
  40ba0f:	mov    QWORD PTR [rbp-0x18],rdi
  40ba13:	mov    QWORD PTR [rbp-0x20],rsi
  40ba17:	mov    QWORD PTR [rbp-0x28],rdx
  40ba1b:	mov    QWORD PTR [rbp-0x30],rcx
  40ba1f:	mov    rax,QWORD PTR [rbp-0x30]
  40ba23:	mov    DWORD PTR [rax],0x0
  40ba29:	mov    rax,QWORD PTR [rbp-0x18]
  40ba2d:	mov    rax,QWORD PTR [rax]
  40ba30:	mov    edx,0x4
  40ba35:	mov    esi,0x8
  40ba3a:	mov    rdi,rax
  40ba3d:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  40ba42:	mov    QWORD PTR [rbp-0x8],rax
  40ba46:	cmp    QWORD PTR [rbp-0x8],0x0
  40ba4b:	je     40ba9a <_start@@Base+0x693a>
  40ba4d:	mov    rcx,QWORD PTR [rbp-0x8]
  40ba51:	mov    rdx,QWORD PTR [rbp-0x28]
  40ba55:	mov    rsi,QWORD PTR [rbp-0x20]
  40ba59:	mov    rax,QWORD PTR [rbp-0x18]
  40ba5d:	mov    rdi,rax
  40ba60:	call   40b704 <_start@@Base+0x65a4>
  40ba65:	mov    QWORD PTR [rbp-0x20],rax
  40ba69:	mov    rax,QWORD PTR [rbp-0x20]
  40ba6d:	cmp    rax,QWORD PTR [rbp-0x28]
  40ba71:	je     40ba9b <_start@@Base+0x693b>
  40ba73:	mov    rax,QWORD PTR [rbp-0x18]
  40ba77:	mov    rax,QWORD PTR [rax]
  40ba7a:	mov    rdi,rax
  40ba7d:	call   41c263 <flatcc_builder_end_struct@@Base>
  40ba82:	mov    edx,eax
  40ba84:	mov    rax,QWORD PTR [rbp-0x30]
  40ba88:	mov    DWORD PTR [rax],edx
  40ba8a:	mov    rax,QWORD PTR [rbp-0x30]
  40ba8e:	mov    eax,DWORD PTR [rax]
  40ba90:	test   eax,eax
  40ba92:	je     40ba9b <_start@@Base+0x693b>
  40ba94:	mov    rax,QWORD PTR [rbp-0x20]
  40ba98:	jmp    40bab4 <_start@@Base+0x6954>
  40ba9a:	nop
  40ba9b:	mov    rdx,QWORD PTR [rbp-0x28]
  40ba9f:	mov    rsi,QWORD PTR [rbp-0x20]
  40baa3:	mov    rax,QWORD PTR [rbp-0x18]
  40baa7:	mov    ecx,0x21
  40baac:	mov    rdi,rax
  40baaf:	call   425bce <flatcc_json_parser_set_error@@Base>
  40bab4:	leave  
  40bab5:	ret    
  40bab6:	push   rbp
  40bab7:	mov    rbp,rsp
  40baba:	sub    rsp,0x60
  40babe:	mov    QWORD PTR [rbp-0x48],rdi
  40bac2:	mov    QWORD PTR [rbp-0x50],rsi
  40bac6:	mov    QWORD PTR [rbp-0x58],rdx
  40baca:	mov    QWORD PTR [rbp-0x60],rcx
  40bace:	mov    rax,QWORD PTR fs:0x28
  40bad7:	mov    QWORD PTR [rbp-0x8],rax
  40badb:	xor    eax,eax
  40badd:	mov    rax,QWORD PTR [rbp-0x60]
  40bae1:	mov    DWORD PTR [rax],0x0
  40bae7:	mov    rax,QWORD PTR [rbp-0x48]
  40baeb:	mov    rax,QWORD PTR [rax]
  40baee:	mov    esi,0x3
  40baf3:	mov    rdi,rax
  40baf6:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40bafb:	test   eax,eax
  40bafd:	jne    40bf6d <_start@@Base+0x6e0d>
  40bb03:	lea    rcx,[rbp-0x38]
  40bb07:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb0b:	mov    rsi,QWORD PTR [rbp-0x50]
  40bb0f:	mov    rax,QWORD PTR [rbp-0x48]
  40bb13:	mov    rdi,rax
  40bb16:	call   405852 <_start@@Base+0x6f2>
  40bb1b:	mov    QWORD PTR [rbp-0x50],rax
  40bb1f:	jmp    40bf30 <_start@@Base+0x6dd0>
  40bb24:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb28:	mov    rcx,QWORD PTR [rbp-0x50]
  40bb2c:	mov    rax,QWORD PTR [rbp-0x48]
  40bb30:	mov    rsi,rcx
  40bb33:	mov    rdi,rax
  40bb36:	call   4055e5 <_start@@Base+0x485>
  40bb3b:	mov    QWORD PTR [rbp-0x50],rax
  40bb3f:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb43:	mov    rax,QWORD PTR [rbp-0x50]
  40bb47:	mov    rsi,rdx
  40bb4a:	mov    rdi,rax
  40bb4d:	call   405756 <_start@@Base+0x5f6>
  40bb52:	mov    QWORD PTR [rbp-0x28],rax
  40bb56:	movabs rax,0x6963ffffffffffff
  40bb60:	cmp    QWORD PTR [rbp-0x28],rax
  40bb64:	ja     40bcdd <_start@@Base+0x6b7d>
  40bb6a:	mov    rax,QWORD PTR [rbp-0x28]
  40bb6e:	and    rax,0xffffffffff000000
  40bb74:	mov    rdx,rax
  40bb77:	movabs rax,0x636f756e74000000
  40bb81:	cmp    rdx,rax
  40bb84:	jne    40bcbd <_start@@Base+0x6b5d>
  40bb8a:	mov    rax,QWORD PTR [rbp-0x50]
  40bb8e:	mov    QWORD PTR [rbp-0x20],rax
  40bb92:	mov    rdx,QWORD PTR [rbp-0x58]
  40bb96:	mov    rsi,QWORD PTR [rbp-0x20]
  40bb9a:	mov    rax,QWORD PTR [rbp-0x48]
  40bb9e:	mov    ecx,0x5
  40bba3:	mov    rdi,rax
  40bba6:	call   405c48 <_start@@Base+0xae8>
  40bbab:	mov    QWORD PTR [rbp-0x50],rax
  40bbaf:	mov    rax,QWORD PTR [rbp-0x20]
  40bbb3:	cmp    rax,QWORD PTR [rbp-0x50]
  40bbb7:	je     40bc9d <_start@@Base+0x6b3d>
  40bbbd:	mov    WORD PTR [rbp-0x30],0x0
  40bbc3:	mov    rax,QWORD PTR [rbp-0x50]
  40bbc7:	mov    QWORD PTR [rbp-0x20],rax
  40bbcb:	lea    rcx,[rbp-0x30]
  40bbcf:	mov    rdx,QWORD PTR [rbp-0x58]
  40bbd3:	mov    rsi,QWORD PTR [rbp-0x20]
  40bbd7:	mov    rax,QWORD PTR [rbp-0x48]
  40bbdb:	mov    rdi,rax
  40bbde:	call   406492 <_start@@Base+0x1332>
  40bbe3:	mov    QWORD PTR [rbp-0x50],rax
  40bbe7:	mov    rax,QWORD PTR [rbp-0x20]
  40bbeb:	cmp    rax,QWORD PTR [rbp-0x50]
  40bbef:	jne    40bc3b <_start@@Base+0x6adb>
  40bbf1:	mov    rax,QWORD PTR [rbp-0x50]
  40bbf5:	mov    QWORD PTR [rbp-0x20],rax
  40bbf9:	lea    rcx,[rbp-0x30]
  40bbfd:	mov    rdx,QWORD PTR [rbp-0x58]
  40bc01:	mov    rsi,QWORD PTR [rbp-0x20]
  40bc05:	mov    rax,QWORD PTR [rbp-0x48]
  40bc09:	mov    r8,rcx
  40bc0c:	lea    rcx,[rip+0x3870d]        # 444320 <__data_start@@Base+0x260>
  40bc13:	mov    rdi,rax
  40bc16:	call   406cdf <_start@@Base+0x1b7f>
  40bc1b:	mov    QWORD PTR [rbp-0x50],rax
  40bc1f:	mov    rax,QWORD PTR [rbp-0x50]
  40bc23:	cmp    rax,QWORD PTR [rbp-0x20]
  40bc27:	je     40bf7a <_start@@Base+0x6e1a>
  40bc2d:	mov    rax,QWORD PTR [rbp-0x50]
  40bc31:	cmp    rax,QWORD PTR [rbp-0x58]
  40bc35:	je     40bf7a <_start@@Base+0x6e1a>
  40bc3b:	movzx  eax,WORD PTR [rbp-0x30]
  40bc3f:	test   ax,ax
  40bc42:	jne    40bc56 <_start@@Base+0x6af6>
  40bc44:	mov    rax,QWORD PTR [rbp-0x48]
  40bc48:	mov    eax,DWORD PTR [rax+0x10]
  40bc4b:	and    eax,0x2
  40bc4e:	test   eax,eax
  40bc50:	je     40bf14 <_start@@Base+0x6db4>
  40bc56:	mov    rax,QWORD PTR [rbp-0x48]
  40bc5a:	mov    rax,QWORD PTR [rax]
  40bc5d:	mov    ecx,0x2
  40bc62:	mov    edx,0x2
  40bc67:	mov    esi,0x2
  40bc6c:	mov    rdi,rax
  40bc6f:	call   41ee2d <flatcc_builder_table_add@@Base>
  40bc74:	mov    QWORD PTR [rbp-0x18],rax
  40bc78:	cmp    QWORD PTR [rbp-0x18],0x0
  40bc7d:	je     40bf70 <_start@@Base+0x6e10>
  40bc83:	movzx  eax,WORD PTR [rbp-0x30]
  40bc87:	movzx  edx,ax
  40bc8a:	mov    rax,QWORD PTR [rbp-0x18]
  40bc8e:	mov    esi,edx
  40bc90:	mov    rdi,rax
  40bc93:	call   4052ac <_start@@Base+0x14c>
  40bc98:	jmp    40bf14 <_start@@Base+0x6db4>
  40bc9d:	mov    rdx,QWORD PTR [rbp-0x58]
  40bca1:	mov    rcx,QWORD PTR [rbp-0x50]
  40bca5:	mov    rax,QWORD PTR [rbp-0x48]
  40bca9:	mov    rsi,rcx
  40bcac:	mov    rdi,rax
  40bcaf:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40bcb4:	mov    QWORD PTR [rbp-0x50],rax
  40bcb8:	jmp    40bf14 <_start@@Base+0x6db4>
  40bcbd:	mov    rdx,QWORD PTR [rbp-0x58]
  40bcc1:	mov    rcx,QWORD PTR [rbp-0x50]
  40bcc5:	mov    rax,QWORD PTR [rbp-0x48]
  40bcc9:	mov    rsi,rcx
  40bccc:	mov    rdi,rax
  40bccf:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40bcd4:	mov    QWORD PTR [rbp-0x50],rax
  40bcd8:	jmp    40bf14 <_start@@Base+0x6db4>
  40bcdd:	movabs rax,0xffffff0000000000
  40bce7:	and    rax,QWORD PTR [rbp-0x28]
  40bceb:	mov    rdx,rax
  40bcee:	movabs rax,0x76616c0000000000
  40bcf8:	cmp    rdx,rax
  40bcfb:	jne    40be34 <_start@@Base+0x6cd4>
  40bd01:	mov    rax,QWORD PTR [rbp-0x50]
  40bd05:	mov    QWORD PTR [rbp-0x20],rax
  40bd09:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd0d:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd11:	mov    rax,QWORD PTR [rbp-0x48]
  40bd15:	mov    ecx,0x3
  40bd1a:	mov    rdi,rax
  40bd1d:	call   405c48 <_start@@Base+0xae8>
  40bd22:	mov    QWORD PTR [rbp-0x50],rax
  40bd26:	mov    rax,QWORD PTR [rbp-0x20]
  40bd2a:	cmp    rax,QWORD PTR [rbp-0x50]
  40bd2e:	je     40be14 <_start@@Base+0x6cb4>
  40bd34:	mov    QWORD PTR [rbp-0x30],0x0
  40bd3c:	mov    rax,QWORD PTR [rbp-0x50]
  40bd40:	mov    QWORD PTR [rbp-0x20],rax
  40bd44:	lea    rcx,[rbp-0x30]
  40bd48:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd4c:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd50:	mov    rax,QWORD PTR [rbp-0x48]
  40bd54:	mov    rdi,rax
  40bd57:	call   40661a <_start@@Base+0x14ba>
  40bd5c:	mov    QWORD PTR [rbp-0x50],rax
  40bd60:	mov    rax,QWORD PTR [rbp-0x20]
  40bd64:	cmp    rax,QWORD PTR [rbp-0x50]
  40bd68:	jne    40bdb4 <_start@@Base+0x6c54>
  40bd6a:	mov    rax,QWORD PTR [rbp-0x50]
  40bd6e:	mov    QWORD PTR [rbp-0x20],rax
  40bd72:	lea    rcx,[rbp-0x30]
  40bd76:	mov    rdx,QWORD PTR [rbp-0x58]
  40bd7a:	mov    rsi,QWORD PTR [rbp-0x20]
  40bd7e:	mov    rax,QWORD PTR [rbp-0x48]
  40bd82:	mov    r8,rcx
  40bd85:	lea    rcx,[rip+0x385b4]        # 444340 <__data_start@@Base+0x280>
  40bd8c:	mov    rdi,rax
  40bd8f:	call   406f8e <_start@@Base+0x1e2e>
  40bd94:	mov    QWORD PTR [rbp-0x50],rax
  40bd98:	mov    rax,QWORD PTR [rbp-0x50]
  40bd9c:	cmp    rax,QWORD PTR [rbp-0x20]
  40bda0:	je     40bf7a <_start@@Base+0x6e1a>
  40bda6:	mov    rax,QWORD PTR [rbp-0x50]
  40bdaa:	cmp    rax,QWORD PTR [rbp-0x58]
  40bdae:	je     40bf7a <_start@@Base+0x6e1a>
  40bdb4:	mov    rax,QWORD PTR [rbp-0x30]
  40bdb8:	test   rax,rax
  40bdbb:	jne    40bdcf <_start@@Base+0x6c6f>
  40bdbd:	mov    rax,QWORD PTR [rbp-0x48]
  40bdc1:	mov    eax,DWORD PTR [rax+0x10]
  40bdc4:	and    eax,0x2
  40bdc7:	test   eax,eax
  40bdc9:	je     40bf14 <_start@@Base+0x6db4>
  40bdcf:	mov    rax,QWORD PTR [rbp-0x48]
  40bdd3:	mov    rax,QWORD PTR [rax]
  40bdd6:	mov    ecx,0x8
  40bddb:	mov    edx,0x8
  40bde0:	mov    esi,0x1
  40bde5:	mov    rdi,rax
  40bde8:	call   41ee2d <flatcc_builder_table_add@@Base>
  40bded:	mov    QWORD PTR [rbp-0x18],rax
  40bdf1:	cmp    QWORD PTR [rbp-0x18],0x0
  40bdf6:	je     40bf73 <_start@@Base+0x6e13>
  40bdfc:	mov    rdx,QWORD PTR [rbp-0x30]
  40be00:	mov    rax,QWORD PTR [rbp-0x18]
  40be04:	mov    rsi,rdx
  40be07:	mov    rdi,rax
  40be0a:	call   4053e9 <_start@@Base+0x289>
  40be0f:	jmp    40bf14 <_start@@Base+0x6db4>
  40be14:	mov    rdx,QWORD PTR [rbp-0x58]
  40be18:	mov    rcx,QWORD PTR [rbp-0x50]
  40be1c:	mov    rax,QWORD PTR [rbp-0x48]
  40be20:	mov    rsi,rcx
  40be23:	mov    rdi,rax
  40be26:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40be2b:	mov    QWORD PTR [rbp-0x50],rax
  40be2f:	jmp    40bf14 <_start@@Base+0x6db4>
  40be34:	movabs rax,0xffff000000000000
  40be3e:	and    rax,QWORD PTR [rbp-0x28]
  40be42:	mov    rdx,rax
  40be45:	movabs rax,0x6964000000000000
  40be4f:	cmp    rdx,rax
  40be52:	jne    40bef9 <_start@@Base+0x6d99>
  40be58:	mov    rax,QWORD PTR [rbp-0x50]
  40be5c:	mov    QWORD PTR [rbp-0x20],rax
  40be60:	mov    rdx,QWORD PTR [rbp-0x58]
  40be64:	mov    rsi,QWORD PTR [rbp-0x20]
  40be68:	mov    rax,QWORD PTR [rbp-0x48]
  40be6c:	mov    ecx,0x2
  40be71:	mov    rdi,rax
  40be74:	call   405c48 <_start@@Base+0xae8>
  40be79:	mov    QWORD PTR [rbp-0x50],rax
  40be7d:	mov    rax,QWORD PTR [rbp-0x20]
  40be81:	cmp    rax,QWORD PTR [rbp-0x50]
  40be85:	je     40bedc <_start@@Base+0x6d7c>
  40be87:	lea    rcx,[rbp-0x34]
  40be8b:	mov    rdx,QWORD PTR [rbp-0x58]
  40be8f:	mov    rsi,QWORD PTR [rbp-0x50]
  40be93:	mov    rax,QWORD PTR [rbp-0x48]
  40be97:	mov    rdi,rax
  40be9a:	call   427628 <flatcc_json_parser_build_string@@Base>
  40be9f:	mov    QWORD PTR [rbp-0x50],rax
  40bea3:	mov    eax,DWORD PTR [rbp-0x34]
  40bea6:	test   eax,eax
  40bea8:	je     40bf7a <_start@@Base+0x6e1a>
  40beae:	mov    rax,QWORD PTR [rbp-0x48]
  40beb2:	mov    rax,QWORD PTR [rax]
  40beb5:	mov    esi,0x0
  40beba:	mov    rdi,rax
  40bebd:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40bec2:	mov    QWORD PTR [rbp-0x10],rax
  40bec6:	cmp    QWORD PTR [rbp-0x10],0x0
  40becb:	je     40bf7a <_start@@Base+0x6e1a>
  40bed1:	mov    edx,DWORD PTR [rbp-0x34]
  40bed4:	mov    rax,QWORD PTR [rbp-0x10]
  40bed8:	mov    DWORD PTR [rax],edx
  40beda:	jmp    40bf14 <_start@@Base+0x6db4>
  40bedc:	mov    rdx,QWORD PTR [rbp-0x58]
  40bee0:	mov    rcx,QWORD PTR [rbp-0x50]
  40bee4:	mov    rax,QWORD PTR [rbp-0x48]
  40bee8:	mov    rsi,rcx
  40beeb:	mov    rdi,rax
  40beee:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40bef3:	mov    QWORD PTR [rbp-0x50],rax
  40bef7:	jmp    40bf14 <_start@@Base+0x6db4>
  40bef9:	mov    rdx,QWORD PTR [rbp-0x58]
  40befd:	mov    rcx,QWORD PTR [rbp-0x50]
  40bf01:	mov    rax,QWORD PTR [rbp-0x48]
  40bf05:	mov    rsi,rcx
  40bf08:	mov    rdi,rax
  40bf0b:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40bf10:	mov    QWORD PTR [rbp-0x50],rax
  40bf14:	lea    rcx,[rbp-0x38]
  40bf18:	mov    rdx,QWORD PTR [rbp-0x58]
  40bf1c:	mov    rsi,QWORD PTR [rbp-0x50]
  40bf20:	mov    rax,QWORD PTR [rbp-0x48]
  40bf24:	mov    rdi,rax
  40bf27:	call   40590f <_start@@Base+0x7af>
  40bf2c:	mov    QWORD PTR [rbp-0x50],rax
  40bf30:	mov    eax,DWORD PTR [rbp-0x38]
  40bf33:	test   eax,eax
  40bf35:	jne    40bb24 <_start@@Base+0x69c4>
  40bf3b:	mov    rax,QWORD PTR [rbp-0x48]
  40bf3f:	mov    eax,DWORD PTR [rax+0x1c]
  40bf42:	test   eax,eax
  40bf44:	jne    40bf76 <_start@@Base+0x6e16>
  40bf46:	mov    rax,QWORD PTR [rbp-0x48]
  40bf4a:	mov    rax,QWORD PTR [rax]
  40bf4d:	mov    rdi,rax
  40bf50:	call   41d7cb <flatcc_builder_end_table@@Base>
  40bf55:	mov    edx,eax
  40bf57:	mov    rax,QWORD PTR [rbp-0x60]
  40bf5b:	mov    DWORD PTR [rax],edx
  40bf5d:	mov    rax,QWORD PTR [rbp-0x60]
  40bf61:	mov    eax,DWORD PTR [rax]
  40bf63:	test   eax,eax
  40bf65:	je     40bf79 <_start@@Base+0x6e19>
  40bf67:	mov    rax,QWORD PTR [rbp-0x50]
  40bf6b:	jmp    40bf93 <_start@@Base+0x6e33>
  40bf6d:	nop
  40bf6e:	jmp    40bf7a <_start@@Base+0x6e1a>
  40bf70:	nop
  40bf71:	jmp    40bf7a <_start@@Base+0x6e1a>
  40bf73:	nop
  40bf74:	jmp    40bf7a <_start@@Base+0x6e1a>
  40bf76:	nop
  40bf77:	jmp    40bf7a <_start@@Base+0x6e1a>
  40bf79:	nop
  40bf7a:	mov    rdx,QWORD PTR [rbp-0x58]
  40bf7e:	mov    rsi,QWORD PTR [rbp-0x50]
  40bf82:	mov    rax,QWORD PTR [rbp-0x48]
  40bf86:	mov    ecx,0x21
  40bf8b:	mov    rdi,rax
  40bf8e:	call   425bce <flatcc_json_parser_set_error@@Base>
  40bf93:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf97:	xor    rdi,QWORD PTR fs:0x28
  40bfa0:	je     40bfa7 <_start@@Base+0x6e47>
  40bfa2:	call   405070 <__stack_chk_fail@plt>
  40bfa7:	leave  
  40bfa8:	ret    
  40bfa9:	push   rbp
  40bfaa:	mov    rbp,rsp
  40bfad:	sub    rsp,0x50
  40bfb1:	mov    QWORD PTR [rbp-0x38],rdi
  40bfb5:	mov    QWORD PTR [rbp-0x40],rsi
  40bfb9:	mov    QWORD PTR [rbp-0x48],rdx
  40bfbd:	mov    QWORD PTR [rbp-0x50],rcx
  40bfc1:	mov    rax,QWORD PTR fs:0x28
  40bfca:	mov    QWORD PTR [rbp-0x8],rax
  40bfce:	xor    eax,eax
  40bfd0:	mov    rax,QWORD PTR [rbp-0x50]
  40bfd4:	mov    DWORD PTR [rax],0x0
  40bfda:	mov    rax,QWORD PTR [rbp-0x38]
  40bfde:	mov    rax,QWORD PTR [rax]
  40bfe1:	mov    esi,0x4
  40bfe6:	mov    rdi,rax
  40bfe9:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40bfee:	test   eax,eax
  40bff0:	jne    40c425 <_start@@Base+0x72c5>
  40bff6:	lea    rcx,[rbp-0x28]
  40bffa:	mov    rdx,QWORD PTR [rbp-0x48]
  40bffe:	mov    rsi,QWORD PTR [rbp-0x40]
  40c002:	mov    rax,QWORD PTR [rbp-0x38]
  40c006:	mov    r8,rcx
  40c009:	mov    ecx,0x1
  40c00e:	mov    rdi,rax
  40c011:	call   427833 <flatcc_json_parser_prepare_unions@@Base>
  40c016:	cmp    rax,QWORD PTR [rbp-0x48]
  40c01a:	je     40c428 <_start@@Base+0x72c8>
  40c020:	lea    rcx,[rbp-0x30]
  40c024:	mov    rdx,QWORD PTR [rbp-0x48]
  40c028:	mov    rsi,QWORD PTR [rbp-0x40]
  40c02c:	mov    rax,QWORD PTR [rbp-0x38]
  40c030:	mov    rdi,rax
  40c033:	call   405852 <_start@@Base+0x6f2>
  40c038:	mov    QWORD PTR [rbp-0x40],rax
  40c03c:	jmp    40c3cc <_start@@Base+0x726c>
  40c041:	mov    rdx,QWORD PTR [rbp-0x48]
  40c045:	mov    rcx,QWORD PTR [rbp-0x40]
  40c049:	mov    rax,QWORD PTR [rbp-0x38]
  40c04d:	mov    rsi,rcx
  40c050:	mov    rdi,rax
  40c053:	call   4055e5 <_start@@Base+0x485>
  40c058:	mov    QWORD PTR [rbp-0x40],rax
  40c05c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c060:	mov    rax,QWORD PTR [rbp-0x40]
  40c064:	mov    rsi,rdx
  40c067:	mov    rdi,rax
  40c06a:	call   405756 <_start@@Base+0x5f6>
  40c06f:	mov    QWORD PTR [rbp-0x20],rax
  40c073:	movabs rax,0x6d616e79616e795f
  40c07d:	cmp    QWORD PTR [rbp-0x20],rax
  40c081:	jne    40c185 <_start@@Base+0x7025>
  40c087:	add    QWORD PTR [rbp-0x40],0x8
  40c08c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c090:	mov    rax,QWORD PTR [rbp-0x40]
  40c094:	mov    rsi,rdx
  40c097:	mov    rdi,rax
  40c09a:	call   405756 <_start@@Base+0x5f6>
  40c09f:	mov    QWORD PTR [rbp-0x20],rax
  40c0a3:	movabs rax,0xffffffff00000000
  40c0ad:	and    rax,QWORD PTR [rbp-0x20]
  40c0b1:	mov    rdx,rax
  40c0b4:	movabs rax,0x7479706500000000
  40c0be:	cmp    rdx,rax
  40c0c1:	jne    40c165 <_start@@Base+0x7005>
  40c0c7:	mov    rax,QWORD PTR [rbp-0x40]
  40c0cb:	mov    QWORD PTR [rbp-0x18],rax
  40c0cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0d3:	mov    rsi,QWORD PTR [rbp-0x18]
  40c0d7:	mov    rax,QWORD PTR [rbp-0x38]
  40c0db:	mov    ecx,0x4
  40c0e0:	mov    rdi,rax
  40c0e3:	call   405c48 <_start@@Base+0xae8>
  40c0e8:	mov    QWORD PTR [rbp-0x40],rax
  40c0ec:	mov    rax,QWORD PTR [rbp-0x18]
  40c0f0:	cmp    rax,QWORD PTR [rbp-0x40]
  40c0f4:	je     40c145 <_start@@Base+0x6fe5>
  40c0f6:	mov    rdi,QWORD PTR [rbp-0x28]
  40c0fa:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0fe:	mov    rsi,QWORD PTR [rbp-0x40]
  40c102:	mov    rax,QWORD PTR [rbp-0x38]
  40c106:	sub    rsp,0x8
  40c10a:	lea    rcx,[rip+0xffffffffffffd1b1]        # 4092c2 <_start@@Base+0x4162>
  40c111:	push   rcx
  40c112:	lea    rcx,[rip+0xffffffffffffd03d]        # 409156 <_start@@Base+0x3ff6>
  40c119:	push   rcx
  40c11a:	lea    rcx,[rip+0x3823f]        # 444360 <__data_start@@Base+0x2a0>
  40c121:	push   rcx
  40c122:	mov    r9,rdi
  40c125:	mov    r8d,0x3
  40c12b:	mov    ecx,0x0
  40c130:	mov    rdi,rax
  40c133:	call   4280eb <flatcc_json_parser_union_type_vector@@Base>
  40c138:	add    rsp,0x20
  40c13c:	mov    QWORD PTR [rbp-0x40],rax
  40c140:	jmp    40c3b0 <_start@@Base+0x7250>
  40c145:	mov    rdx,QWORD PTR [rbp-0x48]
  40c149:	mov    rcx,QWORD PTR [rbp-0x40]
  40c14d:	mov    rax,QWORD PTR [rbp-0x38]
  40c151:	mov    rsi,rcx
  40c154:	mov    rdi,rax
  40c157:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c15c:	mov    QWORD PTR [rbp-0x40],rax
  40c160:	jmp    40c3b0 <_start@@Base+0x7250>
  40c165:	mov    rdx,QWORD PTR [rbp-0x48]
  40c169:	mov    rcx,QWORD PTR [rbp-0x40]
  40c16d:	mov    rax,QWORD PTR [rbp-0x38]
  40c171:	mov    rsi,rcx
  40c174:	mov    rdi,rax
  40c177:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c17c:	mov    QWORD PTR [rbp-0x40],rax
  40c180:	jmp    40c3b0 <_start@@Base+0x7250>
  40c185:	mov    rax,QWORD PTR [rbp-0x20]
  40c189:	mov    al,0x0
  40c18b:	mov    rdx,rax
  40c18e:	movabs rax,0x6d616e79616e7900
  40c198:	cmp    rdx,rax
  40c19b:	jne    40c20b <_start@@Base+0x70ab>
  40c19d:	mov    rax,QWORD PTR [rbp-0x40]
  40c1a1:	mov    QWORD PTR [rbp-0x18],rax
  40c1a5:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1a9:	mov    rsi,QWORD PTR [rbp-0x18]
  40c1ad:	mov    rax,QWORD PTR [rbp-0x38]
  40c1b1:	mov    ecx,0x7
  40c1b6:	mov    rdi,rax
  40c1b9:	call   405c48 <_start@@Base+0xae8>
  40c1be:	mov    QWORD PTR [rbp-0x40],rax
  40c1c2:	mov    rax,QWORD PTR [rbp-0x18]
  40c1c6:	cmp    rax,QWORD PTR [rbp-0x40]
  40c1ca:	je     40c20e <_start@@Base+0x70ae>
  40c1cc:	mov    rdi,QWORD PTR [rbp-0x28]
  40c1d0:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1d4:	mov    rsi,QWORD PTR [rbp-0x40]
  40c1d8:	mov    rax,QWORD PTR [rbp-0x38]
  40c1dc:	sub    rsp,0x8
  40c1e0:	lea    rcx,[rip+0xffffffffffffcf6f]        # 409156 <_start@@Base+0x3ff6>
  40c1e7:	push   rcx
  40c1e8:	mov    r9,rdi
  40c1eb:	mov    r8d,0x3
  40c1f1:	mov    ecx,0x0
  40c1f6:	mov    rdi,rax
  40c1f9:	call   427fa3 <flatcc_json_parser_union_vector@@Base>
  40c1fe:	add    rsp,0x10
  40c202:	mov    QWORD PTR [rbp-0x40],rax
  40c206:	jmp    40c3b0 <_start@@Base+0x7250>
  40c20b:	nop
  40c20c:	jmp    40c20f <_start@@Base+0x70af>
  40c20e:	nop
  40c20f:	mov    rax,QWORD PTR [rbp-0x20]
  40c213:	mov    ax,0x0
  40c217:	mov    rdx,rax
  40c21a:	movabs rax,0x7072656669780000
  40c224:	cmp    rdx,rax
  40c227:	jne    40c2d4 <_start@@Base+0x7174>
  40c22d:	mov    rax,QWORD PTR [rbp-0x40]
  40c231:	mov    QWORD PTR [rbp-0x18],rax
  40c235:	mov    rdx,QWORD PTR [rbp-0x48]
  40c239:	mov    rsi,QWORD PTR [rbp-0x18]
  40c23d:	mov    rax,QWORD PTR [rbp-0x38]
  40c241:	mov    ecx,0x6
  40c246:	mov    rdi,rax
  40c249:	call   405c48 <_start@@Base+0xae8>
  40c24e:	mov    QWORD PTR [rbp-0x40],rax
  40c252:	mov    rax,QWORD PTR [rbp-0x18]
  40c256:	cmp    rax,QWORD PTR [rbp-0x40]
  40c25a:	je     40c2b4 <_start@@Base+0x7154>
  40c25c:	lea    rcx,[rbp-0x2c]
  40c260:	mov    rdx,QWORD PTR [rbp-0x48]
  40c264:	mov    rsi,QWORD PTR [rbp-0x40]
  40c268:	mov    rax,QWORD PTR [rbp-0x38]
  40c26c:	mov    rdi,rax
  40c26f:	call   40c45e <_start@@Base+0x72fe>
  40c274:	mov    QWORD PTR [rbp-0x40],rax
  40c278:	mov    eax,DWORD PTR [rbp-0x2c]
  40c27b:	test   eax,eax
  40c27d:	je     40c42f <_start@@Base+0x72cf>
  40c283:	mov    rax,QWORD PTR [rbp-0x38]
  40c287:	mov    rax,QWORD PTR [rax]
  40c28a:	mov    esi,0x0
  40c28f:	mov    rdi,rax
  40c292:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40c297:	mov    QWORD PTR [rbp-0x10],rax
  40c29b:	cmp    QWORD PTR [rbp-0x10],0x0
  40c2a0:	je     40c42f <_start@@Base+0x72cf>
  40c2a6:	mov    edx,DWORD PTR [rbp-0x2c]
  40c2a9:	mov    rax,QWORD PTR [rbp-0x10]
  40c2ad:	mov    DWORD PTR [rax],edx
  40c2af:	jmp    40c3b0 <_start@@Base+0x7250>
  40c2b4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2b8:	mov    rcx,QWORD PTR [rbp-0x40]
  40c2bc:	mov    rax,QWORD PTR [rbp-0x38]
  40c2c0:	mov    rsi,rcx
  40c2c3:	mov    rdi,rax
  40c2c6:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c2cb:	mov    QWORD PTR [rbp-0x40],rax
  40c2cf:	jmp    40c3b0 <_start@@Base+0x7250>
  40c2d4:	mov    rax,QWORD PTR [rbp-0x20]
  40c2d8:	and    rax,0xffffffffff000000
  40c2de:	mov    rdx,rax
  40c2e1:	movabs rax,0x6d6f766965000000
  40c2eb:	cmp    rdx,rax
  40c2ee:	jne    40c395 <_start@@Base+0x7235>
  40c2f4:	mov    rax,QWORD PTR [rbp-0x40]
  40c2f8:	mov    QWORD PTR [rbp-0x18],rax
  40c2fc:	mov    rdx,QWORD PTR [rbp-0x48]
  40c300:	mov    rsi,QWORD PTR [rbp-0x18]
  40c304:	mov    rax,QWORD PTR [rbp-0x38]
  40c308:	mov    ecx,0x5
  40c30d:	mov    rdi,rax
  40c310:	call   405c48 <_start@@Base+0xae8>
  40c315:	mov    QWORD PTR [rbp-0x40],rax
  40c319:	mov    rax,QWORD PTR [rbp-0x18]
  40c31d:	cmp    rax,QWORD PTR [rbp-0x40]
  40c321:	je     40c378 <_start@@Base+0x7218>
  40c323:	lea    rcx,[rbp-0x2c]
  40c327:	mov    rdx,QWORD PTR [rbp-0x48]
  40c32b:	mov    rsi,QWORD PTR [rbp-0x40]
  40c32f:	mov    rax,QWORD PTR [rbp-0x38]
  40c333:	mov    rdi,rax
  40c336:	call   413c98 <_start@@Base+0xeb38>
  40c33b:	mov    QWORD PTR [rbp-0x40],rax
  40c33f:	mov    eax,DWORD PTR [rbp-0x2c]
  40c342:	test   eax,eax
  40c344:	je     40c42f <_start@@Base+0x72cf>
  40c34a:	mov    rax,QWORD PTR [rbp-0x38]
  40c34e:	mov    rax,QWORD PTR [rax]
  40c351:	mov    esi,0x1
  40c356:	mov    rdi,rax
  40c359:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40c35e:	mov    QWORD PTR [rbp-0x10],rax
  40c362:	cmp    QWORD PTR [rbp-0x10],0x0
  40c367:	je     40c42f <_start@@Base+0x72cf>
  40c36d:	mov    edx,DWORD PTR [rbp-0x2c]
  40c370:	mov    rax,QWORD PTR [rbp-0x10]
  40c374:	mov    DWORD PTR [rax],edx
  40c376:	jmp    40c3b0 <_start@@Base+0x7250>
  40c378:	mov    rdx,QWORD PTR [rbp-0x48]
  40c37c:	mov    rcx,QWORD PTR [rbp-0x40]
  40c380:	mov    rax,QWORD PTR [rbp-0x38]
  40c384:	mov    rsi,rcx
  40c387:	mov    rdi,rax
  40c38a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c38f:	mov    QWORD PTR [rbp-0x40],rax
  40c393:	jmp    40c3b0 <_start@@Base+0x7250>
  40c395:	mov    rdx,QWORD PTR [rbp-0x48]
  40c399:	mov    rcx,QWORD PTR [rbp-0x40]
  40c39d:	mov    rax,QWORD PTR [rbp-0x38]
  40c3a1:	mov    rsi,rcx
  40c3a4:	mov    rdi,rax
  40c3a7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c3ac:	mov    QWORD PTR [rbp-0x40],rax
  40c3b0:	lea    rcx,[rbp-0x30]
  40c3b4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3b8:	mov    rsi,QWORD PTR [rbp-0x40]
  40c3bc:	mov    rax,QWORD PTR [rbp-0x38]
  40c3c0:	mov    rdi,rax
  40c3c3:	call   40590f <_start@@Base+0x7af>
  40c3c8:	mov    QWORD PTR [rbp-0x40],rax
  40c3cc:	mov    eax,DWORD PTR [rbp-0x30]
  40c3cf:	test   eax,eax
  40c3d1:	jne    40c041 <_start@@Base+0x6ee1>
  40c3d7:	mov    rax,QWORD PTR [rbp-0x38]
  40c3db:	mov    eax,DWORD PTR [rax+0x1c]
  40c3de:	test   eax,eax
  40c3e0:	jne    40c42b <_start@@Base+0x72cb>
  40c3e2:	mov    rcx,QWORD PTR [rbp-0x28]
  40c3e6:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3ea:	mov    rsi,QWORD PTR [rbp-0x40]
  40c3ee:	mov    rax,QWORD PTR [rbp-0x38]
  40c3f2:	mov    rdi,rax
  40c3f5:	call   4278d6 <flatcc_json_parser_finalize_unions@@Base>
  40c3fa:	mov    QWORD PTR [rbp-0x40],rax
  40c3fe:	mov    rax,QWORD PTR [rbp-0x38]
  40c402:	mov    rax,QWORD PTR [rax]
  40c405:	mov    rdi,rax
  40c408:	call   41d7cb <flatcc_builder_end_table@@Base>
  40c40d:	mov    edx,eax
  40c40f:	mov    rax,QWORD PTR [rbp-0x50]
  40c413:	mov    DWORD PTR [rax],edx
  40c415:	mov    rax,QWORD PTR [rbp-0x50]
  40c419:	mov    eax,DWORD PTR [rax]
  40c41b:	test   eax,eax
  40c41d:	je     40c42e <_start@@Base+0x72ce>
  40c41f:	mov    rax,QWORD PTR [rbp-0x40]
  40c423:	jmp    40c448 <_start@@Base+0x72e8>
  40c425:	nop
  40c426:	jmp    40c42f <_start@@Base+0x72cf>
  40c428:	nop
  40c429:	jmp    40c42f <_start@@Base+0x72cf>
  40c42b:	nop
  40c42c:	jmp    40c42f <_start@@Base+0x72cf>
  40c42e:	nop
  40c42f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c433:	mov    rsi,QWORD PTR [rbp-0x40]
  40c437:	mov    rax,QWORD PTR [rbp-0x38]
  40c43b:	mov    ecx,0x21
  40c440:	mov    rdi,rax
  40c443:	call   425bce <flatcc_json_parser_set_error@@Base>
  40c448:	mov    rdi,QWORD PTR [rbp-0x8]
  40c44c:	xor    rdi,QWORD PTR fs:0x28
  40c455:	je     40c45c <_start@@Base+0x72fc>
  40c457:	call   405070 <__stack_chk_fail@plt>
  40c45c:	leave  
  40c45d:	ret    
  40c45e:	push   rbp
  40c45f:	mov    rbp,rsp
  40c462:	sub    rsp,0x50
  40c466:	mov    QWORD PTR [rbp-0x38],rdi
  40c46a:	mov    QWORD PTR [rbp-0x40],rsi
  40c46e:	mov    QWORD PTR [rbp-0x48],rdx
  40c472:	mov    QWORD PTR [rbp-0x50],rcx
  40c476:	mov    rax,QWORD PTR fs:0x28
  40c47f:	mov    QWORD PTR [rbp-0x8],rax
  40c483:	xor    eax,eax
  40c485:	mov    rax,QWORD PTR [rbp-0x50]
  40c489:	mov    DWORD PTR [rax],0x0
  40c48f:	mov    rax,QWORD PTR [rbp-0x38]
  40c493:	mov    rax,QWORD PTR [rax]
  40c496:	mov    esi,0x3
  40c49b:	mov    rdi,rax
  40c49e:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40c4a3:	test   eax,eax
  40c4a5:	jne    40c822 <_start@@Base+0x76c2>
  40c4ab:	lea    rcx,[rbp-0x28]
  40c4af:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4b3:	mov    rsi,QWORD PTR [rbp-0x40]
  40c4b7:	mov    rax,QWORD PTR [rbp-0x38]
  40c4bb:	mov    rdi,rax
  40c4be:	call   405852 <_start@@Base+0x6f2>
  40c4c3:	mov    QWORD PTR [rbp-0x40],rax
  40c4c7:	jmp    40c7e5 <_start@@Base+0x7685>
  40c4cc:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4d0:	mov    rcx,QWORD PTR [rbp-0x40]
  40c4d4:	mov    rax,QWORD PTR [rbp-0x38]
  40c4d8:	mov    rsi,rcx
  40c4db:	mov    rdi,rax
  40c4de:	call   4055e5 <_start@@Base+0x485>
  40c4e3:	mov    QWORD PTR [rbp-0x40],rax
  40c4e7:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4eb:	mov    rax,QWORD PTR [rbp-0x40]
  40c4ef:	mov    rsi,rdx
  40c4f2:	mov    rdi,rax
  40c4f5:	call   405756 <_start@@Base+0x5f6>
  40c4fa:	mov    QWORD PTR [rbp-0x20],rax
  40c4fe:	movabs rax,0x746573746a736f6e
  40c508:	cmp    QWORD PTR [rbp-0x20],rax
  40c50c:	jne    40c7ae <_start@@Base+0x764e>
  40c512:	add    QWORD PTR [rbp-0x40],0x8
  40c517:	mov    rdx,QWORD PTR [rbp-0x48]
  40c51b:	mov    rax,QWORD PTR [rbp-0x40]
  40c51f:	mov    rsi,rdx
  40c522:	mov    rdi,rax
  40c525:	call   405756 <_start@@Base+0x5f6>
  40c52a:	mov    QWORD PTR [rbp-0x20],rax
  40c52e:	movabs rax,0x7072656669787061
  40c538:	cmp    QWORD PTR [rbp-0x20],rax
  40c53c:	jne    40c791 <_start@@Base+0x7631>
  40c542:	add    QWORD PTR [rbp-0x40],0x8
  40c547:	mov    rdx,QWORD PTR [rbp-0x48]
  40c54b:	mov    rax,QWORD PTR [rbp-0x40]
  40c54f:	mov    rsi,rdx
  40c552:	mov    rdi,rax
  40c555:	call   405756 <_start@@Base+0x5f6>
  40c55a:	mov    QWORD PTR [rbp-0x20],rax
  40c55e:	mov    rax,QWORD PTR [rbp-0x20]
  40c562:	mov    ax,0x0
  40c566:	mov    rdx,rax
  40c569:	movabs rax,0x7273696e67320000
  40c573:	cmp    rdx,rax
  40c576:	jne    40c607 <_start@@Base+0x74a7>
  40c57c:	mov    rax,QWORD PTR [rbp-0x40]
  40c580:	mov    QWORD PTR [rbp-0x18],rax
  40c584:	mov    rdx,QWORD PTR [rbp-0x48]
  40c588:	mov    rsi,QWORD PTR [rbp-0x18]
  40c58c:	mov    rax,QWORD PTR [rbp-0x38]
  40c590:	mov    ecx,0x6
  40c595:	mov    rdi,rax
  40c598:	call   405c48 <_start@@Base+0xae8>
  40c59d:	mov    QWORD PTR [rbp-0x40],rax
  40c5a1:	mov    rax,QWORD PTR [rbp-0x18]
  40c5a5:	cmp    rax,QWORD PTR [rbp-0x40]
  40c5a9:	je     40c6ae <_start@@Base+0x754e>
  40c5af:	lea    rcx,[rbp-0x24]
  40c5b3:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5b7:	mov    rsi,QWORD PTR [rbp-0x40]
  40c5bb:	mov    rax,QWORD PTR [rbp-0x38]
  40c5bf:	mov    rdi,rax
  40c5c2:	call   40d45b <_start@@Base+0x82fb>
  40c5c7:	mov    QWORD PTR [rbp-0x40],rax
  40c5cb:	mov    eax,DWORD PTR [rbp-0x24]
  40c5ce:	test   eax,eax
  40c5d0:	je     40c829 <_start@@Base+0x76c9>
  40c5d6:	mov    rax,QWORD PTR [rbp-0x38]
  40c5da:	mov    rax,QWORD PTR [rax]
  40c5dd:	mov    esi,0x1
  40c5e2:	mov    rdi,rax
  40c5e5:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40c5ea:	mov    QWORD PTR [rbp-0x10],rax
  40c5ee:	cmp    QWORD PTR [rbp-0x10],0x0
  40c5f3:	je     40c829 <_start@@Base+0x76c9>
  40c5f9:	mov    edx,DWORD PTR [rbp-0x24]
  40c5fc:	mov    rax,QWORD PTR [rbp-0x10]
  40c600:	mov    DWORD PTR [rax],edx
  40c602:	jmp    40c7c9 <_start@@Base+0x7669>
  40c607:	mov    rax,QWORD PTR [rbp-0x20]
  40c60b:	and    rax,0xffffffffff000000
  40c611:	mov    rdx,rax
  40c614:	movabs rax,0x7273696e67000000
  40c61e:	cmp    rdx,rax
  40c621:	jne    40c6b1 <_start@@Base+0x7551>
  40c627:	mov    rax,QWORD PTR [rbp-0x40]
  40c62b:	mov    QWORD PTR [rbp-0x18],rax
  40c62f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c633:	mov    rsi,QWORD PTR [rbp-0x18]
  40c637:	mov    rax,QWORD PTR [rbp-0x38]
  40c63b:	mov    ecx,0x5
  40c640:	mov    rdi,rax
  40c643:	call   405c48 <_start@@Base+0xae8>
  40c648:	mov    QWORD PTR [rbp-0x40],rax
  40c64c:	mov    rax,QWORD PTR [rbp-0x18]
  40c650:	cmp    rax,QWORD PTR [rbp-0x40]
  40c654:	je     40c6b4 <_start@@Base+0x7554>
  40c656:	lea    rcx,[rbp-0x24]
  40c65a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c65e:	mov    rsi,QWORD PTR [rbp-0x40]
  40c662:	mov    rax,QWORD PTR [rbp-0x38]
  40c666:	mov    rdi,rax
  40c669:	call   40c858 <_start@@Base+0x76f8>
  40c66e:	mov    QWORD PTR [rbp-0x40],rax
  40c672:	mov    eax,DWORD PTR [rbp-0x24]
  40c675:	test   eax,eax
  40c677:	je     40c829 <_start@@Base+0x76c9>
  40c67d:	mov    rax,QWORD PTR [rbp-0x38]
  40c681:	mov    rax,QWORD PTR [rax]
  40c684:	mov    esi,0x0
  40c689:	mov    rdi,rax
  40c68c:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40c691:	mov    QWORD PTR [rbp-0x10],rax
  40c695:	cmp    QWORD PTR [rbp-0x10],0x0
  40c69a:	je     40c829 <_start@@Base+0x76c9>
  40c6a0:	mov    edx,DWORD PTR [rbp-0x24]
  40c6a3:	mov    rax,QWORD PTR [rbp-0x10]
  40c6a7:	mov    DWORD PTR [rax],edx
  40c6a9:	jmp    40c7c9 <_start@@Base+0x7669>
  40c6ae:	nop
  40c6af:	jmp    40c6b5 <_start@@Base+0x7555>
  40c6b1:	nop
  40c6b2:	jmp    40c6b5 <_start@@Base+0x7555>
  40c6b4:	nop
  40c6b5:	mov    rax,QWORD PTR [rbp-0x20]
  40c6b9:	mov    ax,0x0
  40c6bd:	mov    rdx,rax
  40c6c0:	movabs rax,0x7273696e67330000
  40c6ca:	cmp    rdx,rax
  40c6cd:	jne    40c774 <_start@@Base+0x7614>
  40c6d3:	mov    rax,QWORD PTR [rbp-0x40]
  40c6d7:	mov    QWORD PTR [rbp-0x18],rax
  40c6db:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6df:	mov    rsi,QWORD PTR [rbp-0x18]
  40c6e3:	mov    rax,QWORD PTR [rbp-0x38]
  40c6e7:	mov    ecx,0x6
  40c6ec:	mov    rdi,rax
  40c6ef:	call   405c48 <_start@@Base+0xae8>
  40c6f4:	mov    QWORD PTR [rbp-0x40],rax
  40c6f8:	mov    rax,QWORD PTR [rbp-0x18]
  40c6fc:	cmp    rax,QWORD PTR [rbp-0x40]
  40c700:	je     40c757 <_start@@Base+0x75f7>
  40c702:	lea    rcx,[rbp-0x24]
  40c706:	mov    rdx,QWORD PTR [rbp-0x48]
  40c70a:	mov    rsi,QWORD PTR [rbp-0x40]
  40c70e:	mov    rax,QWORD PTR [rbp-0x38]
  40c712:	mov    rdi,rax
  40c715:	call   40d883 <_start@@Base+0x8723>
  40c71a:	mov    QWORD PTR [rbp-0x40],rax
  40c71e:	mov    eax,DWORD PTR [rbp-0x24]
  40c721:	test   eax,eax
  40c723:	je     40c829 <_start@@Base+0x76c9>
  40c729:	mov    rax,QWORD PTR [rbp-0x38]
  40c72d:	mov    rax,QWORD PTR [rax]
  40c730:	mov    esi,0x2
  40c735:	mov    rdi,rax
  40c738:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40c73d:	mov    QWORD PTR [rbp-0x10],rax
  40c741:	cmp    QWORD PTR [rbp-0x10],0x0
  40c746:	je     40c829 <_start@@Base+0x76c9>
  40c74c:	mov    edx,DWORD PTR [rbp-0x24]
  40c74f:	mov    rax,QWORD PTR [rbp-0x10]
  40c753:	mov    DWORD PTR [rax],edx
  40c755:	jmp    40c7c9 <_start@@Base+0x7669>
  40c757:	mov    rdx,QWORD PTR [rbp-0x48]
  40c75b:	mov    rcx,QWORD PTR [rbp-0x40]
  40c75f:	mov    rax,QWORD PTR [rbp-0x38]
  40c763:	mov    rsi,rcx
  40c766:	mov    rdi,rax
  40c769:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c76e:	mov    QWORD PTR [rbp-0x40],rax
  40c772:	jmp    40c7c9 <_start@@Base+0x7669>
  40c774:	mov    rdx,QWORD PTR [rbp-0x48]
  40c778:	mov    rcx,QWORD PTR [rbp-0x40]
  40c77c:	mov    rax,QWORD PTR [rbp-0x38]
  40c780:	mov    rsi,rcx
  40c783:	mov    rdi,rax
  40c786:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c78b:	mov    QWORD PTR [rbp-0x40],rax
  40c78f:	jmp    40c7c9 <_start@@Base+0x7669>
  40c791:	mov    rdx,QWORD PTR [rbp-0x48]
  40c795:	mov    rcx,QWORD PTR [rbp-0x40]
  40c799:	mov    rax,QWORD PTR [rbp-0x38]
  40c79d:	mov    rsi,rcx
  40c7a0:	mov    rdi,rax
  40c7a3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c7a8:	mov    QWORD PTR [rbp-0x40],rax
  40c7ac:	jmp    40c7c9 <_start@@Base+0x7669>
  40c7ae:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7b2:	mov    rcx,QWORD PTR [rbp-0x40]
  40c7b6:	mov    rax,QWORD PTR [rbp-0x38]
  40c7ba:	mov    rsi,rcx
  40c7bd:	mov    rdi,rax
  40c7c0:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40c7c5:	mov    QWORD PTR [rbp-0x40],rax
  40c7c9:	lea    rcx,[rbp-0x28]
  40c7cd:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7d1:	mov    rsi,QWORD PTR [rbp-0x40]
  40c7d5:	mov    rax,QWORD PTR [rbp-0x38]
  40c7d9:	mov    rdi,rax
  40c7dc:	call   40590f <_start@@Base+0x7af>
  40c7e1:	mov    QWORD PTR [rbp-0x40],rax
  40c7e5:	mov    eax,DWORD PTR [rbp-0x28]
  40c7e8:	test   eax,eax
  40c7ea:	jne    40c4cc <_start@@Base+0x736c>
  40c7f0:	mov    rax,QWORD PTR [rbp-0x38]
  40c7f4:	mov    eax,DWORD PTR [rax+0x1c]
  40c7f7:	test   eax,eax
  40c7f9:	jne    40c825 <_start@@Base+0x76c5>
  40c7fb:	mov    rax,QWORD PTR [rbp-0x38]
  40c7ff:	mov    rax,QWORD PTR [rax]
  40c802:	mov    rdi,rax
  40c805:	call   41d7cb <flatcc_builder_end_table@@Base>
  40c80a:	mov    edx,eax
  40c80c:	mov    rax,QWORD PTR [rbp-0x50]
  40c810:	mov    DWORD PTR [rax],edx
  40c812:	mov    rax,QWORD PTR [rbp-0x50]
  40c816:	mov    eax,DWORD PTR [rax]
  40c818:	test   eax,eax
  40c81a:	je     40c828 <_start@@Base+0x76c8>
  40c81c:	mov    rax,QWORD PTR [rbp-0x40]
  40c820:	jmp    40c842 <_start@@Base+0x76e2>
  40c822:	nop
  40c823:	jmp    40c829 <_start@@Base+0x76c9>
  40c825:	nop
  40c826:	jmp    40c829 <_start@@Base+0x76c9>
  40c828:	nop
  40c829:	mov    rdx,QWORD PTR [rbp-0x48]
  40c82d:	mov    rsi,QWORD PTR [rbp-0x40]
  40c831:	mov    rax,QWORD PTR [rbp-0x38]
  40c835:	mov    ecx,0x21
  40c83a:	mov    rdi,rax
  40c83d:	call   425bce <flatcc_json_parser_set_error@@Base>
  40c842:	mov    rdi,QWORD PTR [rbp-0x8]
  40c846:	xor    rdi,QWORD PTR fs:0x28
  40c84f:	je     40c856 <_start@@Base+0x76f6>
  40c851:	call   405070 <__stack_chk_fail@plt>
  40c856:	leave  
  40c857:	ret    
  40c858:	push   rbp
  40c859:	mov    rbp,rsp
  40c85c:	sub    rsp,0x60
  40c860:	mov    QWORD PTR [rbp-0x48],rdi
  40c864:	mov    QWORD PTR [rbp-0x50],rsi
  40c868:	mov    QWORD PTR [rbp-0x58],rdx
  40c86c:	mov    QWORD PTR [rbp-0x60],rcx
  40c870:	mov    rax,QWORD PTR fs:0x28
  40c879:	mov    QWORD PTR [rbp-0x8],rax
  40c87d:	xor    eax,eax
  40c87f:	mov    rax,QWORD PTR [rbp-0x60]
  40c883:	mov    DWORD PTR [rax],0x0
  40c889:	mov    rax,QWORD PTR [rbp-0x48]
  40c88d:	mov    rax,QWORD PTR [rax]
  40c890:	mov    esi,0x9
  40c895:	mov    rdi,rax
  40c898:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40c89d:	test   eax,eax
  40c89f:	jne    40d413 <_start@@Base+0x82b3>
  40c8a5:	lea    rcx,[rbp-0x38]
  40c8a9:	mov    rdx,QWORD PTR [rbp-0x58]
  40c8ad:	mov    rsi,QWORD PTR [rbp-0x50]
  40c8b1:	mov    rax,QWORD PTR [rbp-0x48]
  40c8b5:	mov    rdi,rax
  40c8b8:	call   405852 <_start@@Base+0x6f2>
  40c8bd:	mov    QWORD PTR [rbp-0x50],rax
  40c8c1:	jmp    40d3d6 <_start@@Base+0x8276>
  40c8c6:	mov    rdx,QWORD PTR [rbp-0x58]
  40c8ca:	mov    rcx,QWORD PTR [rbp-0x50]
  40c8ce:	mov    rax,QWORD PTR [rbp-0x48]
  40c8d2:	mov    rsi,rcx
  40c8d5:	mov    rdi,rax
  40c8d8:	call   4055e5 <_start@@Base+0x485>
  40c8dd:	mov    QWORD PTR [rbp-0x50],rax
  40c8e1:	mov    rdx,QWORD PTR [rbp-0x58]
  40c8e5:	mov    rax,QWORD PTR [rbp-0x50]
  40c8e9:	mov    rsi,rdx
  40c8ec:	mov    rdi,rax
  40c8ef:	call   405756 <_start@@Base+0x5f6>
  40c8f4:	mov    QWORD PTR [rbp-0x28],rax
  40c8f8:	movabs rax,0x63636362ffffffff
  40c902:	cmp    QWORD PTR [rbp-0x28],rax
  40c906:	ja     40cd8f <_start@@Base+0x7c2f>
  40c90c:	movabs rax,0x6161616131323334
  40c916:	cmp    QWORD PTR [rbp-0x28],rax
  40c91a:	jne    40caae <_start@@Base+0x794e>
  40c920:	add    QWORD PTR [rbp-0x50],0x8
  40c925:	mov    rdx,QWORD PTR [rbp-0x58]
  40c929:	mov    rax,QWORD PTR [rbp-0x50]
  40c92d:	mov    rsi,rdx
  40c930:	mov    rdi,rax
  40c933:	call   405756 <_start@@Base+0x5f6>
  40c938:	mov    QWORD PTR [rbp-0x28],rax
  40c93c:	movabs rax,0xff00000000000000
  40c946:	and    rax,QWORD PTR [rbp-0x28]
  40c94a:	mov    rdx,rax
  40c94d:	movabs rax,0x3500000000000000
  40c957:	cmp    rdx,rax
  40c95a:	jne    40ca8e <_start@@Base+0x792e>
  40c960:	mov    rax,QWORD PTR [rbp-0x50]
  40c964:	mov    QWORD PTR [rbp-0x20],rax
  40c968:	mov    rdx,QWORD PTR [rbp-0x58]
  40c96c:	mov    rsi,QWORD PTR [rbp-0x20]
  40c970:	mov    rax,QWORD PTR [rbp-0x48]
  40c974:	mov    ecx,0x1
  40c979:	mov    rdi,rax
  40c97c:	call   405c48 <_start@@Base+0xae8>
  40c981:	mov    QWORD PTR [rbp-0x50],rax
  40c985:	mov    rax,QWORD PTR [rbp-0x20]
  40c989:	cmp    rax,QWORD PTR [rbp-0x50]
  40c98d:	je     40ca6e <_start@@Base+0x790e>
  40c993:	mov    DWORD PTR [rbp-0x30],0x0
  40c99a:	mov    rax,QWORD PTR [rbp-0x50]
  40c99e:	mov    QWORD PTR [rbp-0x20],rax
  40c9a2:	lea    rcx,[rbp-0x30]
  40c9a6:	mov    rdx,QWORD PTR [rbp-0x58]
  40c9aa:	mov    rsi,QWORD PTR [rbp-0x20]
  40c9ae:	mov    rax,QWORD PTR [rbp-0x48]
  40c9b2:	mov    rdi,rax
  40c9b5:	call   4063cc <_start@@Base+0x126c>
  40c9ba:	mov    QWORD PTR [rbp-0x50],rax
  40c9be:	mov    rax,QWORD PTR [rbp-0x20]
  40c9c2:	cmp    rax,QWORD PTR [rbp-0x50]
  40c9c6:	jne    40ca12 <_start@@Base+0x78b2>
  40c9c8:	mov    rax,QWORD PTR [rbp-0x50]
  40c9cc:	mov    QWORD PTR [rbp-0x20],rax
  40c9d0:	lea    rcx,[rbp-0x30]
  40c9d4:	mov    rdx,QWORD PTR [rbp-0x58]
  40c9d8:	mov    rsi,QWORD PTR [rbp-0x20]
  40c9dc:	mov    rax,QWORD PTR [rbp-0x48]
  40c9e0:	mov    r8,rcx
  40c9e3:	lea    rcx,[rip+0x37996]        # 444380 <__data_start@@Base+0x2c0>
  40c9ea:	mov    rdi,rax
  40c9ed:	call   406b86 <_start@@Base+0x1a26>
  40c9f2:	mov    QWORD PTR [rbp-0x50],rax
  40c9f6:	mov    rax,QWORD PTR [rbp-0x50]
  40c9fa:	cmp    rax,QWORD PTR [rbp-0x20]
  40c9fe:	je     40d42c <_start@@Base+0x82cc>
  40ca04:	mov    rax,QWORD PTR [rbp-0x50]
  40ca08:	cmp    rax,QWORD PTR [rbp-0x58]
  40ca0c:	je     40d42c <_start@@Base+0x82cc>
  40ca12:	mov    eax,DWORD PTR [rbp-0x30]
  40ca15:	test   eax,eax
  40ca17:	jne    40ca2b <_start@@Base+0x78cb>
  40ca19:	mov    rax,QWORD PTR [rbp-0x48]
  40ca1d:	mov    eax,DWORD PTR [rax+0x10]
  40ca20:	and    eax,0x2
  40ca23:	test   eax,eax
  40ca25:	je     40d3ba <_start@@Base+0x825a>
  40ca2b:	mov    rax,QWORD PTR [rbp-0x48]
  40ca2f:	mov    rax,QWORD PTR [rax]
  40ca32:	mov    ecx,0x4
  40ca37:	mov    edx,0x4
  40ca3c:	mov    esi,0x1
  40ca41:	mov    rdi,rax
  40ca44:	call   41ee2d <flatcc_builder_table_add@@Base>
  40ca49:	mov    QWORD PTR [rbp-0x18],rax
  40ca4d:	cmp    QWORD PTR [rbp-0x18],0x0
  40ca52:	je     40d416 <_start@@Base+0x82b6>
  40ca58:	mov    edx,DWORD PTR [rbp-0x30]
  40ca5b:	mov    rax,QWORD PTR [rbp-0x18]
  40ca5f:	mov    esi,edx
  40ca61:	mov    rdi,rax
  40ca64:	call   4052e1 <_start@@Base+0x181>
  40ca69:	jmp    40d3ba <_start@@Base+0x825a>
  40ca6e:	mov    rdx,QWORD PTR [rbp-0x58]
  40ca72:	mov    rcx,QWORD PTR [rbp-0x50]
  40ca76:	mov    rax,QWORD PTR [rbp-0x48]
  40ca7a:	mov    rsi,rcx
  40ca7d:	mov    rdi,rax
  40ca80:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ca85:	mov    QWORD PTR [rbp-0x50],rax
  40ca89:	jmp    40d3ba <_start@@Base+0x825a>
  40ca8e:	mov    rdx,QWORD PTR [rbp-0x58]
  40ca92:	mov    rcx,QWORD PTR [rbp-0x50]
  40ca96:	mov    rax,QWORD PTR [rbp-0x48]
  40ca9a:	mov    rsi,rcx
  40ca9d:	mov    rdi,rax
  40caa0:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40caa5:	mov    QWORD PTR [rbp-0x50],rax
  40caa9:	jmp    40d3ba <_start@@Base+0x825a>
  40caae:	movabs rax,0xffffffff00000000
  40cab8:	and    rax,QWORD PTR [rbp-0x28]
  40cabc:	mov    rdx,rax
  40cabf:	movabs rax,0x6161616100000000
  40cac9:	cmp    rdx,rax
  40cacc:	jne    40cb59 <_start@@Base+0x79f9>
  40cad2:	mov    rax,QWORD PTR [rbp-0x50]
  40cad6:	mov    QWORD PTR [rbp-0x20],rax
  40cada:	mov    rdx,QWORD PTR [rbp-0x58]
  40cade:	mov    rsi,QWORD PTR [rbp-0x20]
  40cae2:	mov    rax,QWORD PTR [rbp-0x48]
  40cae6:	mov    ecx,0x4
  40caeb:	mov    rdi,rax
  40caee:	call   405c48 <_start@@Base+0xae8>
  40caf3:	mov    QWORD PTR [rbp-0x50],rax
  40caf7:	mov    rax,QWORD PTR [rbp-0x20]
  40cafb:	cmp    rax,QWORD PTR [rbp-0x50]
  40caff:	je     40cb5c <_start@@Base+0x79fc>
  40cb01:	lea    rcx,[rbp-0x34]
  40cb05:	mov    rdx,QWORD PTR [rbp-0x58]
  40cb09:	mov    rsi,QWORD PTR [rbp-0x50]
  40cb0d:	mov    rax,QWORD PTR [rbp-0x48]
  40cb11:	mov    rdi,rax
  40cb14:	call   427628 <flatcc_json_parser_build_string@@Base>
  40cb19:	mov    QWORD PTR [rbp-0x50],rax
  40cb1d:	mov    eax,DWORD PTR [rbp-0x34]
  40cb20:	test   eax,eax
  40cb22:	je     40d42c <_start@@Base+0x82cc>
  40cb28:	mov    rax,QWORD PTR [rbp-0x48]
  40cb2c:	mov    rax,QWORD PTR [rax]
  40cb2f:	mov    esi,0x0
  40cb34:	mov    rdi,rax
  40cb37:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40cb3c:	mov    QWORD PTR [rbp-0x10],rax
  40cb40:	cmp    QWORD PTR [rbp-0x10],0x0
  40cb45:	je     40d42c <_start@@Base+0x82cc>
  40cb4b:	mov    edx,DWORD PTR [rbp-0x34]
  40cb4e:	mov    rax,QWORD PTR [rbp-0x10]
  40cb52:	mov    DWORD PTR [rax],edx
  40cb54:	jmp    40d3ba <_start@@Base+0x825a>
  40cb59:	nop
  40cb5a:	jmp    40cb5d <_start@@Base+0x79fd>
  40cb5c:	nop
  40cb5d:	movabs rax,0x6262626231323334
  40cb67:	cmp    QWORD PTR [rbp-0x28],rax
  40cb6b:	jne    40cca4 <_start@@Base+0x7b44>
  40cb71:	mov    rax,QWORD PTR [rbp-0x50]
  40cb75:	mov    QWORD PTR [rbp-0x20],rax
  40cb79:	mov    rdx,QWORD PTR [rbp-0x58]
  40cb7d:	mov    rsi,QWORD PTR [rbp-0x20]
  40cb81:	mov    rax,QWORD PTR [rbp-0x48]
  40cb85:	mov    ecx,0x8
  40cb8a:	mov    rdi,rax
  40cb8d:	call   405c48 <_start@@Base+0xae8>
  40cb92:	mov    QWORD PTR [rbp-0x50],rax
  40cb96:	mov    rax,QWORD PTR [rbp-0x20]
  40cb9a:	cmp    rax,QWORD PTR [rbp-0x50]
  40cb9e:	je     40cc84 <_start@@Base+0x7b24>
  40cba4:	mov    QWORD PTR [rbp-0x30],0x0
  40cbac:	mov    rax,QWORD PTR [rbp-0x50]
  40cbb0:	mov    QWORD PTR [rbp-0x20],rax
  40cbb4:	lea    rcx,[rbp-0x30]
  40cbb8:	mov    rdx,QWORD PTR [rbp-0x58]
  40cbbc:	mov    rsi,QWORD PTR [rbp-0x20]
  40cbc0:	mov    rax,QWORD PTR [rbp-0x48]
  40cbc4:	mov    rdi,rax
  40cbc7:	call   40661a <_start@@Base+0x14ba>
  40cbcc:	mov    QWORD PTR [rbp-0x50],rax
  40cbd0:	mov    rax,QWORD PTR [rbp-0x20]
  40cbd4:	cmp    rax,QWORD PTR [rbp-0x50]
  40cbd8:	jne    40cc24 <_start@@Base+0x7ac4>
  40cbda:	mov    rax,QWORD PTR [rbp-0x50]
  40cbde:	mov    QWORD PTR [rbp-0x20],rax
  40cbe2:	lea    rcx,[rbp-0x30]
  40cbe6:	mov    rdx,QWORD PTR [rbp-0x58]
  40cbea:	mov    rsi,QWORD PTR [rbp-0x20]
  40cbee:	mov    rax,QWORD PTR [rbp-0x48]
  40cbf2:	mov    r8,rcx
  40cbf5:	lea    rcx,[rip+0x377a4]        # 4443a0 <__data_start@@Base+0x2e0>
  40cbfc:	mov    rdi,rax
  40cbff:	call   406f8e <_start@@Base+0x1e2e>
  40cc04:	mov    QWORD PTR [rbp-0x50],rax
  40cc08:	mov    rax,QWORD PTR [rbp-0x50]
  40cc0c:	cmp    rax,QWORD PTR [rbp-0x20]
  40cc10:	je     40d42c <_start@@Base+0x82cc>
  40cc16:	mov    rax,QWORD PTR [rbp-0x50]
  40cc1a:	cmp    rax,QWORD PTR [rbp-0x58]
  40cc1e:	je     40d42c <_start@@Base+0x82cc>
  40cc24:	mov    rax,QWORD PTR [rbp-0x30]
  40cc28:	test   rax,rax
  40cc2b:	jne    40cc3f <_start@@Base+0x7adf>
  40cc2d:	mov    rax,QWORD PTR [rbp-0x48]
  40cc31:	mov    eax,DWORD PTR [rax+0x10]
  40cc34:	and    eax,0x2
  40cc37:	test   eax,eax
  40cc39:	je     40d3ba <_start@@Base+0x825a>
  40cc3f:	mov    rax,QWORD PTR [rbp-0x48]
  40cc43:	mov    rax,QWORD PTR [rax]
  40cc46:	mov    ecx,0x8
  40cc4b:	mov    edx,0x8
  40cc50:	mov    esi,0x3
  40cc55:	mov    rdi,rax
  40cc58:	call   41ee2d <flatcc_builder_table_add@@Base>
  40cc5d:	mov    QWORD PTR [rbp-0x18],rax
  40cc61:	cmp    QWORD PTR [rbp-0x18],0x0
  40cc66:	je     40d419 <_start@@Base+0x82b9>
  40cc6c:	mov    rdx,QWORD PTR [rbp-0x30]
  40cc70:	mov    rax,QWORD PTR [rbp-0x18]
  40cc74:	mov    rsi,rdx
  40cc77:	mov    rdi,rax
  40cc7a:	call   4053e9 <_start@@Base+0x289>
  40cc7f:	jmp    40d3ba <_start@@Base+0x825a>
  40cc84:	mov    rdx,QWORD PTR [rbp-0x58]
  40cc88:	mov    rcx,QWORD PTR [rbp-0x50]
  40cc8c:	mov    rax,QWORD PTR [rbp-0x48]
  40cc90:	mov    rsi,rcx
  40cc93:	mov    rdi,rax
  40cc96:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40cc9b:	mov    QWORD PTR [rbp-0x50],rax
  40cc9f:	jmp    40d3ba <_start@@Base+0x825a>
  40cca4:	movabs rax,0xffffffff00000000
  40ccae:	and    rax,QWORD PTR [rbp-0x28]
  40ccb2:	mov    rdx,rax
  40ccb5:	movabs rax,0x6262626200000000
  40ccbf:	cmp    rdx,rax
  40ccc2:	jne    40cd6f <_start@@Base+0x7c0f>
  40ccc8:	mov    rax,QWORD PTR [rbp-0x50]
  40cccc:	mov    QWORD PTR [rbp-0x20],rax
  40ccd0:	mov    rdx,QWORD PTR [rbp-0x58]
  40ccd4:	mov    rsi,QWORD PTR [rbp-0x20]
  40ccd8:	mov    rax,QWORD PTR [rbp-0x48]
  40ccdc:	mov    ecx,0x4
  40cce1:	mov    rdi,rax
  40cce4:	call   405c48 <_start@@Base+0xae8>
  40cce9:	mov    QWORD PTR [rbp-0x50],rax
  40cced:	mov    rax,QWORD PTR [rbp-0x20]
  40ccf1:	cmp    rax,QWORD PTR [rbp-0x50]
  40ccf5:	je     40cd4f <_start@@Base+0x7bef>
  40ccf7:	lea    rcx,[rbp-0x34]
  40ccfb:	mov    rdx,QWORD PTR [rbp-0x58]
  40ccff:	mov    rsi,QWORD PTR [rbp-0x50]
  40cd03:	mov    rax,QWORD PTR [rbp-0x48]
  40cd07:	mov    rdi,rax
  40cd0a:	call   427628 <flatcc_json_parser_build_string@@Base>
  40cd0f:	mov    QWORD PTR [rbp-0x50],rax
  40cd13:	mov    eax,DWORD PTR [rbp-0x34]
  40cd16:	test   eax,eax
  40cd18:	je     40d42c <_start@@Base+0x82cc>
  40cd1e:	mov    rax,QWORD PTR [rbp-0x48]
  40cd22:	mov    rax,QWORD PTR [rax]
  40cd25:	mov    esi,0x2
  40cd2a:	mov    rdi,rax
  40cd2d:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40cd32:	mov    QWORD PTR [rbp-0x10],rax
  40cd36:	cmp    QWORD PTR [rbp-0x10],0x0
  40cd3b:	je     40d42c <_start@@Base+0x82cc>
  40cd41:	mov    edx,DWORD PTR [rbp-0x34]
  40cd44:	mov    rax,QWORD PTR [rbp-0x10]
  40cd48:	mov    DWORD PTR [rax],edx
  40cd4a:	jmp    40d3ba <_start@@Base+0x825a>
  40cd4f:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd53:	mov    rcx,QWORD PTR [rbp-0x50]
  40cd57:	mov    rax,QWORD PTR [rbp-0x48]
  40cd5b:	mov    rsi,rcx
  40cd5e:	mov    rdi,rax
  40cd61:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40cd66:	mov    QWORD PTR [rbp-0x50],rax
  40cd6a:	jmp    40d3ba <_start@@Base+0x825a>
  40cd6f:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd73:	mov    rcx,QWORD PTR [rbp-0x50]
  40cd77:	mov    rax,QWORD PTR [rbp-0x48]
  40cd7b:	mov    rsi,rcx
  40cd7e:	mov    rdi,rax
  40cd81:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40cd86:	mov    QWORD PTR [rbp-0x50],rax
  40cd8a:	jmp    40d3ba <_start@@Base+0x825a>
  40cd8f:	movabs rax,0x6363636331323334
  40cd99:	cmp    QWORD PTR [rbp-0x28],rax
  40cd9d:	jne    40d044 <_start@@Base+0x7ee4>
  40cda3:	mov    rax,QWORD PTR [rbp-0x50]
  40cda7:	mov    QWORD PTR [rbp-0x20],rax
  40cdab:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdaf:	mov    rsi,QWORD PTR [rbp-0x20]
  40cdb3:	mov    rax,QWORD PTR [rbp-0x48]
  40cdb7:	mov    ecx,0x8
  40cdbc:	mov    rdi,rax
  40cdbf:	call   405c48 <_start@@Base+0xae8>
  40cdc4:	mov    QWORD PTR [rbp-0x50],rax
  40cdc8:	mov    rax,QWORD PTR [rbp-0x20]
  40cdcc:	cmp    rax,QWORD PTR [rbp-0x50]
  40cdd0:	je     40ceb6 <_start@@Base+0x7d56>
  40cdd6:	mov    QWORD PTR [rbp-0x30],0x0
  40cdde:	mov    rax,QWORD PTR [rbp-0x50]
  40cde2:	mov    QWORD PTR [rbp-0x20],rax
  40cde6:	lea    rcx,[rbp-0x30]
  40cdea:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdee:	mov    rsi,QWORD PTR [rbp-0x20]
  40cdf2:	mov    rax,QWORD PTR [rbp-0x48]
  40cdf6:	mov    rdi,rax
  40cdf9:	call   40661a <_start@@Base+0x14ba>
  40cdfe:	mov    QWORD PTR [rbp-0x50],rax
  40ce02:	mov    rax,QWORD PTR [rbp-0x20]
  40ce06:	cmp    rax,QWORD PTR [rbp-0x50]
  40ce0a:	jne    40ce56 <_start@@Base+0x7cf6>
  40ce0c:	mov    rax,QWORD PTR [rbp-0x50]
  40ce10:	mov    QWORD PTR [rbp-0x20],rax
  40ce14:	lea    rcx,[rbp-0x30]
  40ce18:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce1c:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce20:	mov    rax,QWORD PTR [rbp-0x48]
  40ce24:	mov    r8,rcx
  40ce27:	lea    rcx,[rip+0x37592]        # 4443c0 <__data_start@@Base+0x300>
  40ce2e:	mov    rdi,rax
  40ce31:	call   406f8e <_start@@Base+0x1e2e>
  40ce36:	mov    QWORD PTR [rbp-0x50],rax
  40ce3a:	mov    rax,QWORD PTR [rbp-0x50]
  40ce3e:	cmp    rax,QWORD PTR [rbp-0x20]
  40ce42:	je     40d42c <_start@@Base+0x82cc>
  40ce48:	mov    rax,QWORD PTR [rbp-0x50]
  40ce4c:	cmp    rax,QWORD PTR [rbp-0x58]
  40ce50:	je     40d42c <_start@@Base+0x82cc>
  40ce56:	mov    rax,QWORD PTR [rbp-0x30]
  40ce5a:	test   rax,rax
  40ce5d:	jne    40ce71 <_start@@Base+0x7d11>
  40ce5f:	mov    rax,QWORD PTR [rbp-0x48]
  40ce63:	mov    eax,DWORD PTR [rax+0x10]
  40ce66:	and    eax,0x2
  40ce69:	test   eax,eax
  40ce6b:	je     40d3ba <_start@@Base+0x825a>
  40ce71:	mov    rax,QWORD PTR [rbp-0x48]
  40ce75:	mov    rax,QWORD PTR [rax]
  40ce78:	mov    ecx,0x8
  40ce7d:	mov    edx,0x8
  40ce82:	mov    esi,0x5
  40ce87:	mov    rdi,rax
  40ce8a:	call   41ee2d <flatcc_builder_table_add@@Base>
  40ce8f:	mov    QWORD PTR [rbp-0x18],rax
  40ce93:	cmp    QWORD PTR [rbp-0x18],0x0
  40ce98:	je     40d41c <_start@@Base+0x82bc>
  40ce9e:	mov    rdx,QWORD PTR [rbp-0x30]
  40cea2:	mov    rax,QWORD PTR [rbp-0x18]
  40cea6:	mov    rsi,rdx
  40cea9:	mov    rdi,rax
  40ceac:	call   4053e9 <_start@@Base+0x289>
  40ceb1:	jmp    40d3ba <_start@@Base+0x825a>
  40ceb6:	add    QWORD PTR [rbp-0x50],0x8
  40cebb:	mov    rdx,QWORD PTR [rbp-0x58]
  40cebf:	mov    rax,QWORD PTR [rbp-0x50]
  40cec3:	mov    rsi,rdx
  40cec6:	mov    rdi,rax
  40cec9:	call   405756 <_start@@Base+0x5f6>
  40cece:	mov    QWORD PTR [rbp-0x28],rax
  40ced2:	movabs rax,0xff00000000000000
  40cedc:	and    rax,QWORD PTR [rbp-0x28]
  40cee0:	mov    rdx,rax
  40cee3:	movabs rax,0x3500000000000000
  40ceed:	cmp    rdx,rax
  40cef0:	jne    40d024 <_start@@Base+0x7ec4>
  40cef6:	mov    rax,QWORD PTR [rbp-0x50]
  40cefa:	mov    QWORD PTR [rbp-0x20],rax
  40cefe:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf02:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf06:	mov    rax,QWORD PTR [rbp-0x48]
  40cf0a:	mov    ecx,0x1
  40cf0f:	mov    rdi,rax
  40cf12:	call   405c48 <_start@@Base+0xae8>
  40cf17:	mov    QWORD PTR [rbp-0x50],rax
  40cf1b:	mov    rax,QWORD PTR [rbp-0x20]
  40cf1f:	cmp    rax,QWORD PTR [rbp-0x50]
  40cf23:	je     40d004 <_start@@Base+0x7ea4>
  40cf29:	mov    DWORD PTR [rbp-0x30],0x0
  40cf30:	mov    rax,QWORD PTR [rbp-0x50]
  40cf34:	mov    QWORD PTR [rbp-0x20],rax
  40cf38:	lea    rcx,[rbp-0x30]
  40cf3c:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf40:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf44:	mov    rax,QWORD PTR [rbp-0x48]
  40cf48:	mov    rdi,rax
  40cf4b:	call   4063cc <_start@@Base+0x126c>
  40cf50:	mov    QWORD PTR [rbp-0x50],rax
  40cf54:	mov    rax,QWORD PTR [rbp-0x20]
  40cf58:	cmp    rax,QWORD PTR [rbp-0x50]
  40cf5c:	jne    40cfa8 <_start@@Base+0x7e48>
  40cf5e:	mov    rax,QWORD PTR [rbp-0x50]
  40cf62:	mov    QWORD PTR [rbp-0x20],rax
  40cf66:	lea    rcx,[rbp-0x30]
  40cf6a:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf6e:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf72:	mov    rax,QWORD PTR [rbp-0x48]
  40cf76:	mov    r8,rcx
  40cf79:	lea    rcx,[rip+0x37460]        # 4443e0 <__data_start@@Base+0x320>
  40cf80:	mov    rdi,rax
  40cf83:	call   406b86 <_start@@Base+0x1a26>
  40cf88:	mov    QWORD PTR [rbp-0x50],rax
  40cf8c:	mov    rax,QWORD PTR [rbp-0x50]
  40cf90:	cmp    rax,QWORD PTR [rbp-0x20]
  40cf94:	je     40d42c <_start@@Base+0x82cc>
  40cf9a:	mov    rax,QWORD PTR [rbp-0x50]
  40cf9e:	cmp    rax,QWORD PTR [rbp-0x58]
  40cfa2:	je     40d42c <_start@@Base+0x82cc>
  40cfa8:	mov    eax,DWORD PTR [rbp-0x30]
  40cfab:	test   eax,eax
  40cfad:	jne    40cfc1 <_start@@Base+0x7e61>
  40cfaf:	mov    rax,QWORD PTR [rbp-0x48]
  40cfb3:	mov    eax,DWORD PTR [rax+0x10]
  40cfb6:	and    eax,0x2
  40cfb9:	test   eax,eax
  40cfbb:	je     40d3ba <_start@@Base+0x825a>
  40cfc1:	mov    rax,QWORD PTR [rbp-0x48]
  40cfc5:	mov    rax,QWORD PTR [rax]
  40cfc8:	mov    ecx,0x4
  40cfcd:	mov    edx,0x4
  40cfd2:	mov    esi,0x6
  40cfd7:	mov    rdi,rax
  40cfda:	call   41ee2d <flatcc_builder_table_add@@Base>
  40cfdf:	mov    QWORD PTR [rbp-0x18],rax
  40cfe3:	cmp    QWORD PTR [rbp-0x18],0x0
  40cfe8:	je     40d41f <_start@@Base+0x82bf>
  40cfee:	mov    edx,DWORD PTR [rbp-0x30]
  40cff1:	mov    rax,QWORD PTR [rbp-0x18]
  40cff5:	mov    esi,edx
  40cff7:	mov    rdi,rax
  40cffa:	call   4052e1 <_start@@Base+0x181>
  40cfff:	jmp    40d3ba <_start@@Base+0x825a>
  40d004:	mov    rdx,QWORD PTR [rbp-0x58]
  40d008:	mov    rcx,QWORD PTR [rbp-0x50]
  40d00c:	mov    rax,QWORD PTR [rbp-0x48]
  40d010:	mov    rsi,rcx
  40d013:	mov    rdi,rax
  40d016:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d01b:	mov    QWORD PTR [rbp-0x50],rax
  40d01f:	jmp    40d3ba <_start@@Base+0x825a>
  40d024:	mov    rdx,QWORD PTR [rbp-0x58]
  40d028:	mov    rcx,QWORD PTR [rbp-0x50]
  40d02c:	mov    rax,QWORD PTR [rbp-0x48]
  40d030:	mov    rsi,rcx
  40d033:	mov    rdi,rax
  40d036:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d03b:	mov    QWORD PTR [rbp-0x50],rax
  40d03f:	jmp    40d3ba <_start@@Base+0x825a>
  40d044:	movabs rax,0xffffffff00000000
  40d04e:	and    rax,QWORD PTR [rbp-0x28]
  40d052:	mov    rdx,rax
  40d055:	movabs rax,0x6363636300000000
  40d05f:	cmp    rdx,rax
  40d062:	jne    40d0ef <_start@@Base+0x7f8f>
  40d068:	mov    rax,QWORD PTR [rbp-0x50]
  40d06c:	mov    QWORD PTR [rbp-0x20],rax
  40d070:	mov    rdx,QWORD PTR [rbp-0x58]
  40d074:	mov    rsi,QWORD PTR [rbp-0x20]
  40d078:	mov    rax,QWORD PTR [rbp-0x48]
  40d07c:	mov    ecx,0x4
  40d081:	mov    rdi,rax
  40d084:	call   405c48 <_start@@Base+0xae8>
  40d089:	mov    QWORD PTR [rbp-0x50],rax
  40d08d:	mov    rax,QWORD PTR [rbp-0x20]
  40d091:	cmp    rax,QWORD PTR [rbp-0x50]
  40d095:	je     40d0f2 <_start@@Base+0x7f92>
  40d097:	lea    rcx,[rbp-0x34]
  40d09b:	mov    rdx,QWORD PTR [rbp-0x58]
  40d09f:	mov    rsi,QWORD PTR [rbp-0x50]
  40d0a3:	mov    rax,QWORD PTR [rbp-0x48]
  40d0a7:	mov    rdi,rax
  40d0aa:	call   427628 <flatcc_json_parser_build_string@@Base>
  40d0af:	mov    QWORD PTR [rbp-0x50],rax
  40d0b3:	mov    eax,DWORD PTR [rbp-0x34]
  40d0b6:	test   eax,eax
  40d0b8:	je     40d42c <_start@@Base+0x82cc>
  40d0be:	mov    rax,QWORD PTR [rbp-0x48]
  40d0c2:	mov    rax,QWORD PTR [rax]
  40d0c5:	mov    esi,0x4
  40d0ca:	mov    rdi,rax
  40d0cd:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40d0d2:	mov    QWORD PTR [rbp-0x10],rax
  40d0d6:	cmp    QWORD PTR [rbp-0x10],0x0
  40d0db:	je     40d42c <_start@@Base+0x82cc>
  40d0e1:	mov    edx,DWORD PTR [rbp-0x34]
  40d0e4:	mov    rax,QWORD PTR [rbp-0x10]
  40d0e8:	mov    DWORD PTR [rax],edx
  40d0ea:	jmp    40d3ba <_start@@Base+0x825a>
  40d0ef:	nop
  40d0f0:	jmp    40d0f3 <_start@@Base+0x7f93>
  40d0f2:	nop
  40d0f3:	movabs rax,0x6464646431323334
  40d0fd:	cmp    QWORD PTR [rbp-0x28],rax
  40d101:	jne    40d39f <_start@@Base+0x823f>
  40d107:	mov    rax,QWORD PTR [rbp-0x50]
  40d10b:	mov    QWORD PTR [rbp-0x20],rax
  40d10f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d113:	mov    rsi,QWORD PTR [rbp-0x20]
  40d117:	mov    rax,QWORD PTR [rbp-0x48]
  40d11b:	mov    ecx,0x8
  40d120:	mov    rdi,rax
  40d123:	call   405c48 <_start@@Base+0xae8>
  40d128:	mov    QWORD PTR [rbp-0x50],rax
  40d12c:	mov    rax,QWORD PTR [rbp-0x20]
  40d130:	cmp    rax,QWORD PTR [rbp-0x50]
  40d134:	je     40d21a <_start@@Base+0x80ba>
  40d13a:	mov    QWORD PTR [rbp-0x30],0x0
  40d142:	mov    rax,QWORD PTR [rbp-0x50]
  40d146:	mov    QWORD PTR [rbp-0x20],rax
  40d14a:	lea    rcx,[rbp-0x30]
  40d14e:	mov    rdx,QWORD PTR [rbp-0x58]
  40d152:	mov    rsi,QWORD PTR [rbp-0x20]
  40d156:	mov    rax,QWORD PTR [rbp-0x48]
  40d15a:	mov    rdi,rax
  40d15d:	call   40661a <_start@@Base+0x14ba>
  40d162:	mov    QWORD PTR [rbp-0x50],rax
  40d166:	mov    rax,QWORD PTR [rbp-0x20]
  40d16a:	cmp    rax,QWORD PTR [rbp-0x50]
  40d16e:	jne    40d1ba <_start@@Base+0x805a>
  40d170:	mov    rax,QWORD PTR [rbp-0x50]
  40d174:	mov    QWORD PTR [rbp-0x20],rax
  40d178:	lea    rcx,[rbp-0x30]
  40d17c:	mov    rdx,QWORD PTR [rbp-0x58]
  40d180:	mov    rsi,QWORD PTR [rbp-0x20]
  40d184:	mov    rax,QWORD PTR [rbp-0x48]
  40d188:	mov    r8,rcx
  40d18b:	lea    rcx,[rip+0x3726e]        # 444400 <__data_start@@Base+0x340>
  40d192:	mov    rdi,rax
  40d195:	call   406f8e <_start@@Base+0x1e2e>
  40d19a:	mov    QWORD PTR [rbp-0x50],rax
  40d19e:	mov    rax,QWORD PTR [rbp-0x50]
  40d1a2:	cmp    rax,QWORD PTR [rbp-0x20]
  40d1a6:	je     40d42c <_start@@Base+0x82cc>
  40d1ac:	mov    rax,QWORD PTR [rbp-0x50]
  40d1b0:	cmp    rax,QWORD PTR [rbp-0x58]
  40d1b4:	je     40d42c <_start@@Base+0x82cc>
  40d1ba:	mov    rax,QWORD PTR [rbp-0x30]
  40d1be:	test   rax,rax
  40d1c1:	jne    40d1d5 <_start@@Base+0x8075>
  40d1c3:	mov    rax,QWORD PTR [rbp-0x48]
  40d1c7:	mov    eax,DWORD PTR [rax+0x10]
  40d1ca:	and    eax,0x2
  40d1cd:	test   eax,eax
  40d1cf:	je     40d3ba <_start@@Base+0x825a>
  40d1d5:	mov    rax,QWORD PTR [rbp-0x48]
  40d1d9:	mov    rax,QWORD PTR [rax]
  40d1dc:	mov    ecx,0x8
  40d1e1:	mov    edx,0x8
  40d1e6:	mov    esi,0x7
  40d1eb:	mov    rdi,rax
  40d1ee:	call   41ee2d <flatcc_builder_table_add@@Base>
  40d1f3:	mov    QWORD PTR [rbp-0x18],rax
  40d1f7:	cmp    QWORD PTR [rbp-0x18],0x0
  40d1fc:	je     40d422 <_start@@Base+0x82c2>
  40d202:	mov    rdx,QWORD PTR [rbp-0x30]
  40d206:	mov    rax,QWORD PTR [rbp-0x18]
  40d20a:	mov    rsi,rdx
  40d20d:	mov    rdi,rax
  40d210:	call   4053e9 <_start@@Base+0x289>
  40d215:	jmp    40d3ba <_start@@Base+0x825a>
  40d21a:	add    QWORD PTR [rbp-0x50],0x8
  40d21f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d223:	mov    rax,QWORD PTR [rbp-0x50]
  40d227:	mov    rsi,rdx
  40d22a:	mov    rdi,rax
  40d22d:	call   405756 <_start@@Base+0x5f6>
  40d232:	mov    QWORD PTR [rbp-0x28],rax
  40d236:	movabs rax,0xff00000000000000
  40d240:	and    rax,QWORD PTR [rbp-0x28]
  40d244:	mov    rdx,rax
  40d247:	movabs rax,0x3500000000000000
  40d251:	cmp    rdx,rax
  40d254:	jne    40d382 <_start@@Base+0x8222>
  40d25a:	mov    rax,QWORD PTR [rbp-0x50]
  40d25e:	mov    QWORD PTR [rbp-0x20],rax
  40d262:	mov    rdx,QWORD PTR [rbp-0x58]
  40d266:	mov    rsi,QWORD PTR [rbp-0x20]
  40d26a:	mov    rax,QWORD PTR [rbp-0x48]
  40d26e:	mov    ecx,0x1
  40d273:	mov    rdi,rax
  40d276:	call   405c48 <_start@@Base+0xae8>
  40d27b:	mov    QWORD PTR [rbp-0x50],rax
  40d27f:	mov    rax,QWORD PTR [rbp-0x20]
  40d283:	cmp    rax,QWORD PTR [rbp-0x50]
  40d287:	je     40d365 <_start@@Base+0x8205>
  40d28d:	mov    DWORD PTR [rbp-0x30],0x0
  40d294:	mov    rax,QWORD PTR [rbp-0x50]
  40d298:	mov    QWORD PTR [rbp-0x20],rax
  40d29c:	lea    rcx,[rbp-0x30]
  40d2a0:	mov    rdx,QWORD PTR [rbp-0x58]
  40d2a4:	mov    rsi,QWORD PTR [rbp-0x20]
  40d2a8:	mov    rax,QWORD PTR [rbp-0x48]
  40d2ac:	mov    rdi,rax
  40d2af:	call   4063cc <_start@@Base+0x126c>
  40d2b4:	mov    QWORD PTR [rbp-0x50],rax
  40d2b8:	mov    rax,QWORD PTR [rbp-0x20]
  40d2bc:	cmp    rax,QWORD PTR [rbp-0x50]
  40d2c0:	jne    40d30c <_start@@Base+0x81ac>
  40d2c2:	mov    rax,QWORD PTR [rbp-0x50]
  40d2c6:	mov    QWORD PTR [rbp-0x20],rax
  40d2ca:	lea    rcx,[rbp-0x30]
  40d2ce:	mov    rdx,QWORD PTR [rbp-0x58]
  40d2d2:	mov    rsi,QWORD PTR [rbp-0x20]
  40d2d6:	mov    rax,QWORD PTR [rbp-0x48]
  40d2da:	mov    r8,rcx
  40d2dd:	lea    rcx,[rip+0x3713c]        # 444420 <__data_start@@Base+0x360>
  40d2e4:	mov    rdi,rax
  40d2e7:	call   406b86 <_start@@Base+0x1a26>
  40d2ec:	mov    QWORD PTR [rbp-0x50],rax
  40d2f0:	mov    rax,QWORD PTR [rbp-0x50]
  40d2f4:	cmp    rax,QWORD PTR [rbp-0x20]
  40d2f8:	je     40d42c <_start@@Base+0x82cc>
  40d2fe:	mov    rax,QWORD PTR [rbp-0x50]
  40d302:	cmp    rax,QWORD PTR [rbp-0x58]
  40d306:	je     40d42c <_start@@Base+0x82cc>
  40d30c:	mov    eax,DWORD PTR [rbp-0x30]
  40d30f:	test   eax,eax
  40d311:	jne    40d325 <_start@@Base+0x81c5>
  40d313:	mov    rax,QWORD PTR [rbp-0x48]
  40d317:	mov    eax,DWORD PTR [rax+0x10]
  40d31a:	and    eax,0x2
  40d31d:	test   eax,eax
  40d31f:	je     40d3ba <_start@@Base+0x825a>
  40d325:	mov    rax,QWORD PTR [rbp-0x48]
  40d329:	mov    rax,QWORD PTR [rax]
  40d32c:	mov    ecx,0x4
  40d331:	mov    edx,0x4
  40d336:	mov    esi,0x8
  40d33b:	mov    rdi,rax
  40d33e:	call   41ee2d <flatcc_builder_table_add@@Base>
  40d343:	mov    QWORD PTR [rbp-0x18],rax
  40d347:	cmp    QWORD PTR [rbp-0x18],0x0
  40d34c:	je     40d425 <_start@@Base+0x82c5>
  40d352:	mov    edx,DWORD PTR [rbp-0x30]
  40d355:	mov    rax,QWORD PTR [rbp-0x18]
  40d359:	mov    esi,edx
  40d35b:	mov    rdi,rax
  40d35e:	call   4052e1 <_start@@Base+0x181>
  40d363:	jmp    40d3ba <_start@@Base+0x825a>
  40d365:	mov    rdx,QWORD PTR [rbp-0x58]
  40d369:	mov    rcx,QWORD PTR [rbp-0x50]
  40d36d:	mov    rax,QWORD PTR [rbp-0x48]
  40d371:	mov    rsi,rcx
  40d374:	mov    rdi,rax
  40d377:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d37c:	mov    QWORD PTR [rbp-0x50],rax
  40d380:	jmp    40d3ba <_start@@Base+0x825a>
  40d382:	mov    rdx,QWORD PTR [rbp-0x58]
  40d386:	mov    rcx,QWORD PTR [rbp-0x50]
  40d38a:	mov    rax,QWORD PTR [rbp-0x48]
  40d38e:	mov    rsi,rcx
  40d391:	mov    rdi,rax
  40d394:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d399:	mov    QWORD PTR [rbp-0x50],rax
  40d39d:	jmp    40d3ba <_start@@Base+0x825a>
  40d39f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d3a3:	mov    rcx,QWORD PTR [rbp-0x50]
  40d3a7:	mov    rax,QWORD PTR [rbp-0x48]
  40d3ab:	mov    rsi,rcx
  40d3ae:	mov    rdi,rax
  40d3b1:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d3b6:	mov    QWORD PTR [rbp-0x50],rax
  40d3ba:	lea    rcx,[rbp-0x38]
  40d3be:	mov    rdx,QWORD PTR [rbp-0x58]
  40d3c2:	mov    rsi,QWORD PTR [rbp-0x50]
  40d3c6:	mov    rax,QWORD PTR [rbp-0x48]
  40d3ca:	mov    rdi,rax
  40d3cd:	call   40590f <_start@@Base+0x7af>
  40d3d2:	mov    QWORD PTR [rbp-0x50],rax
  40d3d6:	mov    eax,DWORD PTR [rbp-0x38]
  40d3d9:	test   eax,eax
  40d3db:	jne    40c8c6 <_start@@Base+0x7766>
  40d3e1:	mov    rax,QWORD PTR [rbp-0x48]
  40d3e5:	mov    eax,DWORD PTR [rax+0x1c]
  40d3e8:	test   eax,eax
  40d3ea:	jne    40d428 <_start@@Base+0x82c8>
  40d3ec:	mov    rax,QWORD PTR [rbp-0x48]
  40d3f0:	mov    rax,QWORD PTR [rax]
  40d3f3:	mov    rdi,rax
  40d3f6:	call   41d7cb <flatcc_builder_end_table@@Base>
  40d3fb:	mov    edx,eax
  40d3fd:	mov    rax,QWORD PTR [rbp-0x60]
  40d401:	mov    DWORD PTR [rax],edx
  40d403:	mov    rax,QWORD PTR [rbp-0x60]
  40d407:	mov    eax,DWORD PTR [rax]
  40d409:	test   eax,eax
  40d40b:	je     40d42b <_start@@Base+0x82cb>
  40d40d:	mov    rax,QWORD PTR [rbp-0x50]
  40d411:	jmp    40d445 <_start@@Base+0x82e5>
  40d413:	nop
  40d414:	jmp    40d42c <_start@@Base+0x82cc>
  40d416:	nop
  40d417:	jmp    40d42c <_start@@Base+0x82cc>
  40d419:	nop
  40d41a:	jmp    40d42c <_start@@Base+0x82cc>
  40d41c:	nop
  40d41d:	jmp    40d42c <_start@@Base+0x82cc>
  40d41f:	nop
  40d420:	jmp    40d42c <_start@@Base+0x82cc>
  40d422:	nop
  40d423:	jmp    40d42c <_start@@Base+0x82cc>
  40d425:	nop
  40d426:	jmp    40d42c <_start@@Base+0x82cc>
  40d428:	nop
  40d429:	jmp    40d42c <_start@@Base+0x82cc>
  40d42b:	nop
  40d42c:	mov    rdx,QWORD PTR [rbp-0x58]
  40d430:	mov    rsi,QWORD PTR [rbp-0x50]
  40d434:	mov    rax,QWORD PTR [rbp-0x48]
  40d438:	mov    ecx,0x21
  40d43d:	mov    rdi,rax
  40d440:	call   425bce <flatcc_json_parser_set_error@@Base>
  40d445:	mov    rdi,QWORD PTR [rbp-0x8]
  40d449:	xor    rdi,QWORD PTR fs:0x28
  40d452:	je     40d459 <_start@@Base+0x82f9>
  40d454:	call   405070 <__stack_chk_fail@plt>
  40d459:	leave  
  40d45a:	ret    
  40d45b:	push   rbp
  40d45c:	mov    rbp,rsp
  40d45f:	sub    rsp,0x50
  40d463:	mov    QWORD PTR [rbp-0x38],rdi
  40d467:	mov    QWORD PTR [rbp-0x40],rsi
  40d46b:	mov    QWORD PTR [rbp-0x48],rdx
  40d46f:	mov    QWORD PTR [rbp-0x50],rcx
  40d473:	mov    rax,QWORD PTR fs:0x28
  40d47c:	mov    QWORD PTR [rbp-0x8],rax
  40d480:	xor    eax,eax
  40d482:	mov    rax,QWORD PTR [rbp-0x50]
  40d486:	mov    DWORD PTR [rax],0x0
  40d48c:	mov    rax,QWORD PTR [rbp-0x38]
  40d490:	mov    rax,QWORD PTR [rax]
  40d493:	mov    esi,0x2
  40d498:	mov    rdi,rax
  40d49b:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40d4a0:	test   eax,eax
  40d4a2:	jne    40d847 <_start@@Base+0x86e7>
  40d4a8:	lea    rcx,[rbp-0x2c]
  40d4ac:	mov    rdx,QWORD PTR [rbp-0x48]
  40d4b0:	mov    rsi,QWORD PTR [rbp-0x40]
  40d4b4:	mov    rax,QWORD PTR [rbp-0x38]
  40d4b8:	mov    rdi,rax
  40d4bb:	call   405852 <_start@@Base+0x6f2>
  40d4c0:	mov    QWORD PTR [rbp-0x40],rax
  40d4c4:	jmp    40d80a <_start@@Base+0x86aa>
  40d4c9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d4cd:	mov    rcx,QWORD PTR [rbp-0x40]
  40d4d1:	mov    rax,QWORD PTR [rbp-0x38]
  40d4d5:	mov    rsi,rcx
  40d4d8:	mov    rdi,rax
  40d4db:	call   4055e5 <_start@@Base+0x485>
  40d4e0:	mov    QWORD PTR [rbp-0x40],rax
  40d4e4:	mov    rdx,QWORD PTR [rbp-0x48]
  40d4e8:	mov    rax,QWORD PTR [rbp-0x40]
  40d4ec:	mov    rsi,rdx
  40d4ef:	mov    rdi,rax
  40d4f2:	call   405756 <_start@@Base+0x5f6>
  40d4f7:	mov    QWORD PTR [rbp-0x20],rax
  40d4fb:	movabs rax,0x616161615f626262
  40d505:	cmp    QWORD PTR [rbp-0x20],rax
  40d509:	jne    40d7d3 <_start@@Base+0x8673>
  40d50f:	add    QWORD PTR [rbp-0x40],0x8
  40d514:	mov    rdx,QWORD PTR [rbp-0x48]
  40d518:	mov    rax,QWORD PTR [rbp-0x40]
  40d51c:	mov    rsi,rdx
  40d51f:	mov    rdi,rax
  40d522:	call   405756 <_start@@Base+0x5f6>
  40d527:	mov    QWORD PTR [rbp-0x20],rax
  40d52b:	mov    rax,QWORD PTR [rbp-0x20]
  40d52f:	mov    al,0x0
  40d531:	mov    rdx,rax
  40d534:	movabs rax,0x625f737465707300
  40d53e:	cmp    rdx,rax
  40d541:	jne    40d67a <_start@@Base+0x851a>
  40d547:	mov    rax,QWORD PTR [rbp-0x40]
  40d54b:	mov    QWORD PTR [rbp-0x18],rax
  40d54f:	mov    rdx,QWORD PTR [rbp-0x48]
  40d553:	mov    rsi,QWORD PTR [rbp-0x18]
  40d557:	mov    rax,QWORD PTR [rbp-0x38]
  40d55b:	mov    ecx,0x7
  40d560:	mov    rdi,rax
  40d563:	call   405c48 <_start@@Base+0xae8>
  40d568:	mov    QWORD PTR [rbp-0x40],rax
  40d56c:	mov    rax,QWORD PTR [rbp-0x18]
  40d570:	cmp    rax,QWORD PTR [rbp-0x40]
  40d574:	je     40d65a <_start@@Base+0x84fa>
  40d57a:	mov    QWORD PTR [rbp-0x28],0x0
  40d582:	mov    rax,QWORD PTR [rbp-0x40]
  40d586:	mov    QWORD PTR [rbp-0x18],rax
  40d58a:	lea    rcx,[rbp-0x28]
  40d58e:	mov    rdx,QWORD PTR [rbp-0x48]
  40d592:	mov    rsi,QWORD PTR [rbp-0x18]
  40d596:	mov    rax,QWORD PTR [rbp-0x38]
  40d59a:	mov    rdi,rax
  40d59d:	call   40661a <_start@@Base+0x14ba>
  40d5a2:	mov    QWORD PTR [rbp-0x40],rax
  40d5a6:	mov    rax,QWORD PTR [rbp-0x18]
  40d5aa:	cmp    rax,QWORD PTR [rbp-0x40]
  40d5ae:	jne    40d5fa <_start@@Base+0x849a>
  40d5b0:	mov    rax,QWORD PTR [rbp-0x40]
  40d5b4:	mov    QWORD PTR [rbp-0x18],rax
  40d5b8:	lea    rcx,[rbp-0x28]
  40d5bc:	mov    rdx,QWORD PTR [rbp-0x48]
  40d5c0:	mov    rsi,QWORD PTR [rbp-0x18]
  40d5c4:	mov    rax,QWORD PTR [rbp-0x38]
  40d5c8:	mov    r8,rcx
  40d5cb:	lea    rcx,[rip+0x36e6e]        # 444440 <__data_start@@Base+0x380>
  40d5d2:	mov    rdi,rax
  40d5d5:	call   406f8e <_start@@Base+0x1e2e>
  40d5da:	mov    QWORD PTR [rbp-0x40],rax
  40d5de:	mov    rax,QWORD PTR [rbp-0x40]
  40d5e2:	cmp    rax,QWORD PTR [rbp-0x18]
  40d5e6:	je     40d854 <_start@@Base+0x86f4>
  40d5ec:	mov    rax,QWORD PTR [rbp-0x40]
  40d5f0:	cmp    rax,QWORD PTR [rbp-0x48]
  40d5f4:	je     40d854 <_start@@Base+0x86f4>
  40d5fa:	mov    rax,QWORD PTR [rbp-0x28]
  40d5fe:	test   rax,rax
  40d601:	jne    40d615 <_start@@Base+0x84b5>
  40d603:	mov    rax,QWORD PTR [rbp-0x38]
  40d607:	mov    eax,DWORD PTR [rax+0x10]
  40d60a:	and    eax,0x2
  40d60d:	test   eax,eax
  40d60f:	je     40d7ee <_start@@Base+0x868e>
  40d615:	mov    rax,QWORD PTR [rbp-0x38]
  40d619:	mov    rax,QWORD PTR [rax]
  40d61c:	mov    ecx,0x8
  40d621:	mov    edx,0x8
  40d626:	mov    esi,0x0
  40d62b:	mov    rdi,rax
  40d62e:	call   41ee2d <flatcc_builder_table_add@@Base>
  40d633:	mov    QWORD PTR [rbp-0x10],rax
  40d637:	cmp    QWORD PTR [rbp-0x10],0x0
  40d63c:	je     40d84a <_start@@Base+0x86ea>
  40d642:	mov    rdx,QWORD PTR [rbp-0x28]
  40d646:	mov    rax,QWORD PTR [rbp-0x10]
  40d64a:	mov    rsi,rdx
  40d64d:	mov    rdi,rax
  40d650:	call   4053e9 <_start@@Base+0x289>
  40d655:	jmp    40d7ee <_start@@Base+0x868e>
  40d65a:	mov    rdx,QWORD PTR [rbp-0x48]
  40d65e:	mov    rcx,QWORD PTR [rbp-0x40]
  40d662:	mov    rax,QWORD PTR [rbp-0x38]
  40d666:	mov    rsi,rcx
  40d669:	mov    rdi,rax
  40d66c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d671:	mov    QWORD PTR [rbp-0x40],rax
  40d675:	jmp    40d7ee <_start@@Base+0x868e>
  40d67a:	movabs rax,0x625f73746172745f
  40d684:	cmp    QWORD PTR [rbp-0x20],rax
  40d688:	jne    40d7b6 <_start@@Base+0x8656>
  40d68e:	mov    rax,QWORD PTR [rbp-0x40]
  40d692:	mov    QWORD PTR [rbp-0x18],rax
  40d696:	mov    rdx,QWORD PTR [rbp-0x48]
  40d69a:	mov    rsi,QWORD PTR [rbp-0x18]
  40d69e:	mov    rax,QWORD PTR [rbp-0x38]
  40d6a2:	mov    ecx,0x8
  40d6a7:	mov    rdi,rax
  40d6aa:	call   405c48 <_start@@Base+0xae8>
  40d6af:	mov    QWORD PTR [rbp-0x40],rax
  40d6b3:	mov    rax,QWORD PTR [rbp-0x18]
  40d6b7:	cmp    rax,QWORD PTR [rbp-0x40]
  40d6bb:	je     40d799 <_start@@Base+0x8639>
  40d6c1:	mov    DWORD PTR [rbp-0x28],0x0
  40d6c8:	mov    rax,QWORD PTR [rbp-0x40]
  40d6cc:	mov    QWORD PTR [rbp-0x18],rax
  40d6d0:	lea    rcx,[rbp-0x28]
  40d6d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6d8:	mov    rsi,QWORD PTR [rbp-0x18]
  40d6dc:	mov    rax,QWORD PTR [rbp-0x38]
  40d6e0:	mov    rdi,rax
  40d6e3:	call   4063cc <_start@@Base+0x126c>
  40d6e8:	mov    QWORD PTR [rbp-0x40],rax
  40d6ec:	mov    rax,QWORD PTR [rbp-0x18]
  40d6f0:	cmp    rax,QWORD PTR [rbp-0x40]
  40d6f4:	jne    40d740 <_start@@Base+0x85e0>
  40d6f6:	mov    rax,QWORD PTR [rbp-0x40]
  40d6fa:	mov    QWORD PTR [rbp-0x18],rax
  40d6fe:	lea    rcx,[rbp-0x28]
  40d702:	mov    rdx,QWORD PTR [rbp-0x48]
  40d706:	mov    rsi,QWORD PTR [rbp-0x18]
  40d70a:	mov    rax,QWORD PTR [rbp-0x38]
  40d70e:	mov    r8,rcx
  40d711:	lea    rcx,[rip+0x36d48]        # 444460 <__data_start@@Base+0x3a0>
  40d718:	mov    rdi,rax
  40d71b:	call   406b86 <_start@@Base+0x1a26>
  40d720:	mov    QWORD PTR [rbp-0x40],rax
  40d724:	mov    rax,QWORD PTR [rbp-0x40]
  40d728:	cmp    rax,QWORD PTR [rbp-0x18]
  40d72c:	je     40d854 <_start@@Base+0x86f4>
  40d732:	mov    rax,QWORD PTR [rbp-0x40]
  40d736:	cmp    rax,QWORD PTR [rbp-0x48]
  40d73a:	je     40d854 <_start@@Base+0x86f4>
  40d740:	mov    eax,DWORD PTR [rbp-0x28]
  40d743:	test   eax,eax
  40d745:	jne    40d759 <_start@@Base+0x85f9>
  40d747:	mov    rax,QWORD PTR [rbp-0x38]
  40d74b:	mov    eax,DWORD PTR [rax+0x10]
  40d74e:	and    eax,0x2
  40d751:	test   eax,eax
  40d753:	je     40d7ee <_start@@Base+0x868e>
  40d759:	mov    rax,QWORD PTR [rbp-0x38]
  40d75d:	mov    rax,QWORD PTR [rax]
  40d760:	mov    ecx,0x4
  40d765:	mov    edx,0x4
  40d76a:	mov    esi,0x1
  40d76f:	mov    rdi,rax
  40d772:	call   41ee2d <flatcc_builder_table_add@@Base>
  40d777:	mov    QWORD PTR [rbp-0x10],rax
  40d77b:	cmp    QWORD PTR [rbp-0x10],0x0
  40d780:	je     40d84d <_start@@Base+0x86ed>
  40d786:	mov    edx,DWORD PTR [rbp-0x28]
  40d789:	mov    rax,QWORD PTR [rbp-0x10]
  40d78d:	mov    esi,edx
  40d78f:	mov    rdi,rax
  40d792:	call   4052e1 <_start@@Base+0x181>
  40d797:	jmp    40d7ee <_start@@Base+0x868e>
  40d799:	mov    rdx,QWORD PTR [rbp-0x48]
  40d79d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d7a1:	mov    rax,QWORD PTR [rbp-0x38]
  40d7a5:	mov    rsi,rcx
  40d7a8:	mov    rdi,rax
  40d7ab:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d7b0:	mov    QWORD PTR [rbp-0x40],rax
  40d7b4:	jmp    40d7ee <_start@@Base+0x868e>
  40d7b6:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7ba:	mov    rcx,QWORD PTR [rbp-0x40]
  40d7be:	mov    rax,QWORD PTR [rbp-0x38]
  40d7c2:	mov    rsi,rcx
  40d7c5:	mov    rdi,rax
  40d7c8:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d7cd:	mov    QWORD PTR [rbp-0x40],rax
  40d7d1:	jmp    40d7ee <_start@@Base+0x868e>
  40d7d3:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7d7:	mov    rcx,QWORD PTR [rbp-0x40]
  40d7db:	mov    rax,QWORD PTR [rbp-0x38]
  40d7df:	mov    rsi,rcx
  40d7e2:	mov    rdi,rax
  40d7e5:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40d7ea:	mov    QWORD PTR [rbp-0x40],rax
  40d7ee:	lea    rcx,[rbp-0x2c]
  40d7f2:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7f6:	mov    rsi,QWORD PTR [rbp-0x40]
  40d7fa:	mov    rax,QWORD PTR [rbp-0x38]
  40d7fe:	mov    rdi,rax
  40d801:	call   40590f <_start@@Base+0x7af>
  40d806:	mov    QWORD PTR [rbp-0x40],rax
  40d80a:	mov    eax,DWORD PTR [rbp-0x2c]
  40d80d:	test   eax,eax
  40d80f:	jne    40d4c9 <_start@@Base+0x8369>
  40d815:	mov    rax,QWORD PTR [rbp-0x38]
  40d819:	mov    eax,DWORD PTR [rax+0x1c]
  40d81c:	test   eax,eax
  40d81e:	jne    40d850 <_start@@Base+0x86f0>
  40d820:	mov    rax,QWORD PTR [rbp-0x38]
  40d824:	mov    rax,QWORD PTR [rax]
  40d827:	mov    rdi,rax
  40d82a:	call   41d7cb <flatcc_builder_end_table@@Base>
  40d82f:	mov    edx,eax
  40d831:	mov    rax,QWORD PTR [rbp-0x50]
  40d835:	mov    DWORD PTR [rax],edx
  40d837:	mov    rax,QWORD PTR [rbp-0x50]
  40d83b:	mov    eax,DWORD PTR [rax]
  40d83d:	test   eax,eax
  40d83f:	je     40d853 <_start@@Base+0x86f3>
  40d841:	mov    rax,QWORD PTR [rbp-0x40]
  40d845:	jmp    40d86d <_start@@Base+0x870d>
  40d847:	nop
  40d848:	jmp    40d854 <_start@@Base+0x86f4>
  40d84a:	nop
  40d84b:	jmp    40d854 <_start@@Base+0x86f4>
  40d84d:	nop
  40d84e:	jmp    40d854 <_start@@Base+0x86f4>
  40d850:	nop
  40d851:	jmp    40d854 <_start@@Base+0x86f4>
  40d853:	nop
  40d854:	mov    rdx,QWORD PTR [rbp-0x48]
  40d858:	mov    rsi,QWORD PTR [rbp-0x40]
  40d85c:	mov    rax,QWORD PTR [rbp-0x38]
  40d860:	mov    ecx,0x21
  40d865:	mov    rdi,rax
  40d868:	call   425bce <flatcc_json_parser_set_error@@Base>
  40d86d:	mov    rdi,QWORD PTR [rbp-0x8]
  40d871:	xor    rdi,QWORD PTR fs:0x28
  40d87a:	je     40d881 <_start@@Base+0x8721>
  40d87c:	call   405070 <__stack_chk_fail@plt>
  40d881:	leave  
  40d882:	ret    
  40d883:	push   rbp
  40d884:	mov    rbp,rsp
  40d887:	sub    rsp,0x50
  40d88b:	mov    QWORD PTR [rbp-0x38],rdi
  40d88f:	mov    QWORD PTR [rbp-0x40],rsi
  40d893:	mov    QWORD PTR [rbp-0x48],rdx
  40d897:	mov    QWORD PTR [rbp-0x50],rcx
  40d89b:	mov    rax,QWORD PTR fs:0x28
  40d8a4:	mov    QWORD PTR [rbp-0x8],rax
  40d8a8:	xor    eax,eax
  40d8aa:	mov    rax,QWORD PTR [rbp-0x50]
  40d8ae:	mov    DWORD PTR [rax],0x0
  40d8b4:	mov    rax,QWORD PTR [rbp-0x38]
  40d8b8:	mov    rax,QWORD PTR [rax]
  40d8bb:	mov    esi,0x2
  40d8c0:	mov    rdi,rax
  40d8c3:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40d8c8:	test   eax,eax
  40d8ca:	jne    40dccb <_start@@Base+0x8b6b>
  40d8d0:	lea    rcx,[rbp-0x2c]
  40d8d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8d8:	mov    rsi,QWORD PTR [rbp-0x40]
  40d8dc:	mov    rax,QWORD PTR [rbp-0x38]
  40d8e0:	mov    rdi,rax
  40d8e3:	call   405852 <_start@@Base+0x6f2>
  40d8e8:	mov    QWORD PTR [rbp-0x40],rax
  40d8ec:	jmp    40dc8e <_start@@Base+0x8b2e>
  40d8f1:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8f5:	mov    rcx,QWORD PTR [rbp-0x40]
  40d8f9:	mov    rax,QWORD PTR [rbp-0x38]
  40d8fd:	mov    rsi,rcx
  40d900:	mov    rdi,rax
  40d903:	call   4055e5 <_start@@Base+0x485>
  40d908:	mov    QWORD PTR [rbp-0x40],rax
  40d90c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d910:	mov    rax,QWORD PTR [rbp-0x40]
  40d914:	mov    rsi,rdx
  40d917:	mov    rdi,rax
  40d91a:	call   405756 <_start@@Base+0x5f6>
  40d91f:	mov    QWORD PTR [rbp-0x20],rax
  40d923:	movabs rax,0x616161615f626262
  40d92d:	cmp    QWORD PTR [rbp-0x20],rax
  40d931:	jne    40dc57 <_start@@Base+0x8af7>
  40d937:	add    QWORD PTR [rbp-0x40],0x8
  40d93c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d940:	mov    rax,QWORD PTR [rbp-0x40]
  40d944:	mov    rsi,rdx
  40d947:	mov    rdi,rax
  40d94a:	call   405756 <_start@@Base+0x5f6>
  40d94f:	mov    QWORD PTR [rbp-0x20],rax
  40d953:	movabs rax,0x625f73746172745f
  40d95d:	cmp    QWORD PTR [rbp-0x20],rax
  40d961:	jne    40daf1 <_start@@Base+0x8991>
  40d967:	add    QWORD PTR [rbp-0x40],0x8
  40d96c:	mov    rdx,QWORD PTR [rbp-0x48]
  40d970:	mov    rax,QWORD PTR [rbp-0x40]
  40d974:	mov    rsi,rdx
  40d977:	mov    rdi,rax
  40d97a:	call   405756 <_start@@Base+0x5f6>
  40d97f:	mov    QWORD PTR [rbp-0x20],rax
  40d983:	mov    rax,QWORD PTR [rbp-0x20]
  40d987:	and    rax,0xffffffffff000000
  40d98d:	mov    rdx,rax
  40d990:	movabs rax,0x7374657073000000
  40d99a:	cmp    rdx,rax
  40d99d:	jne    40dad1 <_start@@Base+0x8971>
  40d9a3:	mov    rax,QWORD PTR [rbp-0x40]
  40d9a7:	mov    QWORD PTR [rbp-0x18],rax
  40d9ab:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9af:	mov    rsi,QWORD PTR [rbp-0x18]
  40d9b3:	mov    rax,QWORD PTR [rbp-0x38]
  40d9b7:	mov    ecx,0x5
  40d9bc:	mov    rdi,rax
  40d9bf:	call   405c48 <_start@@Base+0xae8>
  40d9c4:	mov    QWORD PTR [rbp-0x40],rax
  40d9c8:	mov    rax,QWORD PTR [rbp-0x18]
  40d9cc:	cmp    rax,QWORD PTR [rbp-0x40]
  40d9d0:	je     40dab1 <_start@@Base+0x8951>
  40d9d6:	mov    DWORD PTR [rbp-0x28],0x0
  40d9dd:	mov    rax,QWORD PTR [rbp-0x40]
  40d9e1:	mov    QWORD PTR [rbp-0x18],rax
  40d9e5:	lea    rcx,[rbp-0x28]
  40d9e9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9ed:	mov    rsi,QWORD PTR [rbp-0x18]
  40d9f1:	mov    rax,QWORD PTR [rbp-0x38]
  40d9f5:	mov    rdi,rax
  40d9f8:	call   4063cc <_start@@Base+0x126c>
  40d9fd:	mov    QWORD PTR [rbp-0x40],rax
  40da01:	mov    rax,QWORD PTR [rbp-0x18]
  40da05:	cmp    rax,QWORD PTR [rbp-0x40]
  40da09:	jne    40da55 <_start@@Base+0x88f5>
  40da0b:	mov    rax,QWORD PTR [rbp-0x40]
  40da0f:	mov    QWORD PTR [rbp-0x18],rax
  40da13:	lea    rcx,[rbp-0x28]
  40da17:	mov    rdx,QWORD PTR [rbp-0x48]
  40da1b:	mov    rsi,QWORD PTR [rbp-0x18]
  40da1f:	mov    rax,QWORD PTR [rbp-0x38]
  40da23:	mov    r8,rcx
  40da26:	lea    rcx,[rip+0x36a53]        # 444480 <__data_start@@Base+0x3c0>
  40da2d:	mov    rdi,rax
  40da30:	call   406b86 <_start@@Base+0x1a26>
  40da35:	mov    QWORD PTR [rbp-0x40],rax
  40da39:	mov    rax,QWORD PTR [rbp-0x40]
  40da3d:	cmp    rax,QWORD PTR [rbp-0x18]
  40da41:	je     40dcd8 <_start@@Base+0x8b78>
  40da47:	mov    rax,QWORD PTR [rbp-0x40]
  40da4b:	cmp    rax,QWORD PTR [rbp-0x48]
  40da4f:	je     40dcd8 <_start@@Base+0x8b78>
  40da55:	mov    eax,DWORD PTR [rbp-0x28]
  40da58:	test   eax,eax
  40da5a:	jne    40da6e <_start@@Base+0x890e>
  40da5c:	mov    rax,QWORD PTR [rbp-0x38]
  40da60:	mov    eax,DWORD PTR [rax+0x10]
  40da63:	and    eax,0x2
  40da66:	test   eax,eax
  40da68:	je     40dc72 <_start@@Base+0x8b12>
  40da6e:	mov    rax,QWORD PTR [rbp-0x38]
  40da72:	mov    rax,QWORD PTR [rax]
  40da75:	mov    ecx,0x4
  40da7a:	mov    edx,0x4
  40da7f:	mov    esi,0x1
  40da84:	mov    rdi,rax
  40da87:	call   41ee2d <flatcc_builder_table_add@@Base>
  40da8c:	mov    QWORD PTR [rbp-0x10],rax
  40da90:	cmp    QWORD PTR [rbp-0x10],0x0
  40da95:	je     40dcce <_start@@Base+0x8b6e>
  40da9b:	mov    edx,DWORD PTR [rbp-0x28]
  40da9e:	mov    rax,QWORD PTR [rbp-0x10]
  40daa2:	mov    esi,edx
  40daa4:	mov    rdi,rax
  40daa7:	call   4052e1 <_start@@Base+0x181>
  40daac:	jmp    40dc72 <_start@@Base+0x8b12>
  40dab1:	mov    rdx,QWORD PTR [rbp-0x48]
  40dab5:	mov    rcx,QWORD PTR [rbp-0x40]
  40dab9:	mov    rax,QWORD PTR [rbp-0x38]
  40dabd:	mov    rsi,rcx
  40dac0:	mov    rdi,rax
  40dac3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40dac8:	mov    QWORD PTR [rbp-0x40],rax
  40dacc:	jmp    40dc72 <_start@@Base+0x8b12>
  40dad1:	mov    rdx,QWORD PTR [rbp-0x48]
  40dad5:	mov    rcx,QWORD PTR [rbp-0x40]
  40dad9:	mov    rax,QWORD PTR [rbp-0x38]
  40dadd:	mov    rsi,rcx
  40dae0:	mov    rdi,rax
  40dae3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40dae8:	mov    QWORD PTR [rbp-0x40],rax
  40daec:	jmp    40dc72 <_start@@Base+0x8b12>
  40daf1:	mov    rax,QWORD PTR [rbp-0x20]
  40daf5:	mov    al,0x0
  40daf7:	mov    rdx,rax
  40dafa:	movabs rax,0x625f737465707300
  40db04:	cmp    rdx,rax
  40db07:	jne    40dc3a <_start@@Base+0x8ada>
  40db0d:	mov    rax,QWORD PTR [rbp-0x40]
  40db11:	mov    QWORD PTR [rbp-0x18],rax
  40db15:	mov    rdx,QWORD PTR [rbp-0x48]
  40db19:	mov    rsi,QWORD PTR [rbp-0x18]
  40db1d:	mov    rax,QWORD PTR [rbp-0x38]
  40db21:	mov    ecx,0x7
  40db26:	mov    rdi,rax
  40db29:	call   405c48 <_start@@Base+0xae8>
  40db2e:	mov    QWORD PTR [rbp-0x40],rax
  40db32:	mov    rax,QWORD PTR [rbp-0x18]
  40db36:	cmp    rax,QWORD PTR [rbp-0x40]
  40db3a:	je     40dc1d <_start@@Base+0x8abd>
  40db40:	mov    QWORD PTR [rbp-0x28],0x0
  40db48:	mov    rax,QWORD PTR [rbp-0x40]
  40db4c:	mov    QWORD PTR [rbp-0x18],rax
  40db50:	lea    rcx,[rbp-0x28]
  40db54:	mov    rdx,QWORD PTR [rbp-0x48]
  40db58:	mov    rsi,QWORD PTR [rbp-0x18]
  40db5c:	mov    rax,QWORD PTR [rbp-0x38]
  40db60:	mov    rdi,rax
  40db63:	call   40661a <_start@@Base+0x14ba>
  40db68:	mov    QWORD PTR [rbp-0x40],rax
  40db6c:	mov    rax,QWORD PTR [rbp-0x18]
  40db70:	cmp    rax,QWORD PTR [rbp-0x40]
  40db74:	jne    40dbc0 <_start@@Base+0x8a60>
  40db76:	mov    rax,QWORD PTR [rbp-0x40]
  40db7a:	mov    QWORD PTR [rbp-0x18],rax
  40db7e:	lea    rcx,[rbp-0x28]
  40db82:	mov    rdx,QWORD PTR [rbp-0x48]
  40db86:	mov    rsi,QWORD PTR [rbp-0x18]
  40db8a:	mov    rax,QWORD PTR [rbp-0x38]
  40db8e:	mov    r8,rcx
  40db91:	lea    rcx,[rip+0x36908]        # 4444a0 <__data_start@@Base+0x3e0>
  40db98:	mov    rdi,rax
  40db9b:	call   406f8e <_start@@Base+0x1e2e>
  40dba0:	mov    QWORD PTR [rbp-0x40],rax
  40dba4:	mov    rax,QWORD PTR [rbp-0x40]
  40dba8:	cmp    rax,QWORD PTR [rbp-0x18]
  40dbac:	je     40dcd8 <_start@@Base+0x8b78>
  40dbb2:	mov    rax,QWORD PTR [rbp-0x40]
  40dbb6:	cmp    rax,QWORD PTR [rbp-0x48]
  40dbba:	je     40dcd8 <_start@@Base+0x8b78>
  40dbc0:	mov    rax,QWORD PTR [rbp-0x28]
  40dbc4:	test   rax,rax
  40dbc7:	jne    40dbdb <_start@@Base+0x8a7b>
  40dbc9:	mov    rax,QWORD PTR [rbp-0x38]
  40dbcd:	mov    eax,DWORD PTR [rax+0x10]
  40dbd0:	and    eax,0x2
  40dbd3:	test   eax,eax
  40dbd5:	je     40dc72 <_start@@Base+0x8b12>
  40dbdb:	mov    rax,QWORD PTR [rbp-0x38]
  40dbdf:	mov    rax,QWORD PTR [rax]
  40dbe2:	mov    ecx,0x8
  40dbe7:	mov    edx,0x8
  40dbec:	mov    esi,0x0
  40dbf1:	mov    rdi,rax
  40dbf4:	call   41ee2d <flatcc_builder_table_add@@Base>
  40dbf9:	mov    QWORD PTR [rbp-0x10],rax
  40dbfd:	cmp    QWORD PTR [rbp-0x10],0x0
  40dc02:	je     40dcd1 <_start@@Base+0x8b71>
  40dc08:	mov    rdx,QWORD PTR [rbp-0x28]
  40dc0c:	mov    rax,QWORD PTR [rbp-0x10]
  40dc10:	mov    rsi,rdx
  40dc13:	mov    rdi,rax
  40dc16:	call   4053e9 <_start@@Base+0x289>
  40dc1b:	jmp    40dc72 <_start@@Base+0x8b12>
  40dc1d:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc21:	mov    rcx,QWORD PTR [rbp-0x40]
  40dc25:	mov    rax,QWORD PTR [rbp-0x38]
  40dc29:	mov    rsi,rcx
  40dc2c:	mov    rdi,rax
  40dc2f:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40dc34:	mov    QWORD PTR [rbp-0x40],rax
  40dc38:	jmp    40dc72 <_start@@Base+0x8b12>
  40dc3a:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc3e:	mov    rcx,QWORD PTR [rbp-0x40]
  40dc42:	mov    rax,QWORD PTR [rbp-0x38]
  40dc46:	mov    rsi,rcx
  40dc49:	mov    rdi,rax
  40dc4c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40dc51:	mov    QWORD PTR [rbp-0x40],rax
  40dc55:	jmp    40dc72 <_start@@Base+0x8b12>
  40dc57:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc5b:	mov    rcx,QWORD PTR [rbp-0x40]
  40dc5f:	mov    rax,QWORD PTR [rbp-0x38]
  40dc63:	mov    rsi,rcx
  40dc66:	mov    rdi,rax
  40dc69:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40dc6e:	mov    QWORD PTR [rbp-0x40],rax
  40dc72:	lea    rcx,[rbp-0x2c]
  40dc76:	mov    rdx,QWORD PTR [rbp-0x48]
  40dc7a:	mov    rsi,QWORD PTR [rbp-0x40]
  40dc7e:	mov    rax,QWORD PTR [rbp-0x38]
  40dc82:	mov    rdi,rax
  40dc85:	call   40590f <_start@@Base+0x7af>
  40dc8a:	mov    QWORD PTR [rbp-0x40],rax
  40dc8e:	mov    eax,DWORD PTR [rbp-0x2c]
  40dc91:	test   eax,eax
  40dc93:	jne    40d8f1 <_start@@Base+0x8791>
  40dc99:	mov    rax,QWORD PTR [rbp-0x38]
  40dc9d:	mov    eax,DWORD PTR [rax+0x1c]
  40dca0:	test   eax,eax
  40dca2:	jne    40dcd4 <_start@@Base+0x8b74>
  40dca4:	mov    rax,QWORD PTR [rbp-0x38]
  40dca8:	mov    rax,QWORD PTR [rax]
  40dcab:	mov    rdi,rax
  40dcae:	call   41d7cb <flatcc_builder_end_table@@Base>
  40dcb3:	mov    edx,eax
  40dcb5:	mov    rax,QWORD PTR [rbp-0x50]
  40dcb9:	mov    DWORD PTR [rax],edx
  40dcbb:	mov    rax,QWORD PTR [rbp-0x50]
  40dcbf:	mov    eax,DWORD PTR [rax]
  40dcc1:	test   eax,eax
  40dcc3:	je     40dcd7 <_start@@Base+0x8b77>
  40dcc5:	mov    rax,QWORD PTR [rbp-0x40]
  40dcc9:	jmp    40dcf1 <_start@@Base+0x8b91>
  40dccb:	nop
  40dccc:	jmp    40dcd8 <_start@@Base+0x8b78>
  40dcce:	nop
  40dccf:	jmp    40dcd8 <_start@@Base+0x8b78>
  40dcd1:	nop
  40dcd2:	jmp    40dcd8 <_start@@Base+0x8b78>
  40dcd4:	nop
  40dcd5:	jmp    40dcd8 <_start@@Base+0x8b78>
  40dcd7:	nop
  40dcd8:	mov    rdx,QWORD PTR [rbp-0x48]
  40dcdc:	mov    rsi,QWORD PTR [rbp-0x40]
  40dce0:	mov    rax,QWORD PTR [rbp-0x38]
  40dce4:	mov    ecx,0x21
  40dce9:	mov    rdi,rax
  40dcec:	call   425bce <flatcc_json_parser_set_error@@Base>
  40dcf1:	mov    rdi,QWORD PTR [rbp-0x8]
  40dcf5:	xor    rdi,QWORD PTR fs:0x28
  40dcfe:	je     40dd05 <_start@@Base+0x8ba5>
  40dd00:	call   405070 <__stack_chk_fail@plt>
  40dd05:	leave  
  40dd06:	ret    
  40dd07:	push   rbp
  40dd08:	mov    rbp,rsp
  40dd0b:	sub    rsp,0x50
  40dd0f:	mov    QWORD PTR [rbp-0x38],rdi
  40dd13:	mov    QWORD PTR [rbp-0x40],rsi
  40dd17:	mov    QWORD PTR [rbp-0x48],rdx
  40dd1b:	mov    QWORD PTR [rbp-0x50],rcx
  40dd1f:	mov    rax,QWORD PTR fs:0x28
  40dd28:	mov    QWORD PTR [rbp-0x8],rax
  40dd2c:	xor    eax,eax
  40dd2e:	mov    rax,QWORD PTR [rbp-0x50]
  40dd32:	mov    DWORD PTR [rax],0x0
  40dd38:	mov    rax,QWORD PTR [rbp-0x38]
  40dd3c:	mov    rax,QWORD PTR [rax]
  40dd3f:	mov    esi,0x3
  40dd44:	mov    rdi,rax
  40dd47:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40dd4c:	test   eax,eax
  40dd4e:	jne    40e0ae <_start@@Base+0x8f4e>
  40dd54:	lea    rcx,[rbp-0x28]
  40dd58:	mov    rdx,QWORD PTR [rbp-0x48]
  40dd5c:	mov    rsi,QWORD PTR [rbp-0x40]
  40dd60:	mov    rax,QWORD PTR [rbp-0x38]
  40dd64:	mov    rdi,rax
  40dd67:	call   405852 <_start@@Base+0x6f2>
  40dd6c:	mov    QWORD PTR [rbp-0x40],rax
  40dd70:	jmp    40e071 <_start@@Base+0x8f11>
  40dd75:	mov    rdx,QWORD PTR [rbp-0x48]
  40dd79:	mov    rcx,QWORD PTR [rbp-0x40]
  40dd7d:	mov    rax,QWORD PTR [rbp-0x38]
  40dd81:	mov    rsi,rcx
  40dd84:	mov    rdi,rax
  40dd87:	call   4055e5 <_start@@Base+0x485>
  40dd8c:	mov    QWORD PTR [rbp-0x40],rax
  40dd90:	mov    rdx,QWORD PTR [rbp-0x48]
  40dd94:	mov    rax,QWORD PTR [rbp-0x40]
  40dd98:	mov    rsi,rdx
  40dd9b:	mov    rdi,rax
  40dd9e:	call   405756 <_start@@Base+0x5f6>
  40dda3:	mov    QWORD PTR [rbp-0x20],rax
  40dda7:	movabs rax,0x6e6573746563ffff
  40ddb1:	cmp    QWORD PTR [rbp-0x20],rax
  40ddb5:	ja     40deac <_start@@Base+0x8d4c>
  40ddbb:	movabs rax,0xffffffff00000000
  40ddc5:	and    rax,QWORD PTR [rbp-0x20]
  40ddc9:	mov    rdx,rax
  40ddcc:	movabs rax,0x6461746100000000
  40ddd6:	cmp    rdx,rax
  40ddd9:	jne    40de8c <_start@@Base+0x8d2c>
  40dddf:	mov    rax,QWORD PTR [rbp-0x40]
  40dde3:	mov    QWORD PTR [rbp-0x18],rax
  40dde7:	mov    rdx,QWORD PTR [rbp-0x48]
  40ddeb:	mov    rsi,QWORD PTR [rbp-0x18]
  40ddef:	mov    rax,QWORD PTR [rbp-0x38]
  40ddf3:	mov    ecx,0x4
  40ddf8:	mov    rdi,rax
  40ddfb:	call   405c48 <_start@@Base+0xae8>
  40de00:	mov    QWORD PTR [rbp-0x40],rax
  40de04:	mov    rax,QWORD PTR [rbp-0x18]
  40de08:	cmp    rax,QWORD PTR [rbp-0x40]
  40de0c:	je     40de6c <_start@@Base+0x8d0c>
  40de0e:	lea    rcx,[rbp-0x24]
  40de12:	mov    rdx,QWORD PTR [rbp-0x48]
  40de16:	mov    rsi,QWORD PTR [rbp-0x40]
  40de1a:	mov    rax,QWORD PTR [rbp-0x38]
  40de1e:	mov    r8d,0x0
  40de24:	mov    rdi,rax
  40de27:	call   4273d3 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40de2c:	mov    QWORD PTR [rbp-0x40],rax
  40de30:	mov    eax,DWORD PTR [rbp-0x24]
  40de33:	test   eax,eax
  40de35:	je     40e0b5 <_start@@Base+0x8f55>
  40de3b:	mov    rax,QWORD PTR [rbp-0x38]
  40de3f:	mov    rax,QWORD PTR [rax]
  40de42:	mov    esi,0x0
  40de47:	mov    rdi,rax
  40de4a:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40de4f:	mov    QWORD PTR [rbp-0x10],rax
  40de53:	cmp    QWORD PTR [rbp-0x10],0x0
  40de58:	je     40e0b5 <_start@@Base+0x8f55>
  40de5e:	mov    edx,DWORD PTR [rbp-0x24]
  40de61:	mov    rax,QWORD PTR [rbp-0x10]
  40de65:	mov    DWORD PTR [rax],edx
  40de67:	jmp    40e055 <_start@@Base+0x8ef5>
  40de6c:	mov    rdx,QWORD PTR [rbp-0x48]
  40de70:	mov    rcx,QWORD PTR [rbp-0x40]
  40de74:	mov    rax,QWORD PTR [rbp-0x38]
  40de78:	mov    rsi,rcx
  40de7b:	mov    rdi,rax
  40de7e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40de83:	mov    QWORD PTR [rbp-0x40],rax
  40de87:	jmp    40e055 <_start@@Base+0x8ef5>
  40de8c:	mov    rdx,QWORD PTR [rbp-0x48]
  40de90:	mov    rcx,QWORD PTR [rbp-0x40]
  40de94:	mov    rax,QWORD PTR [rbp-0x38]
  40de98:	mov    rsi,rcx
  40de9b:	mov    rdi,rax
  40de9e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40dea3:	mov    QWORD PTR [rbp-0x40],rax
  40dea7:	jmp    40e055 <_start@@Base+0x8ef5>
  40deac:	mov    rax,QWORD PTR [rbp-0x20]
  40deb0:	mov    al,0x0
  40deb2:	mov    rdx,rax
  40deb5:	movabs rax,0x75726c6461746100
  40debf:	cmp    rdx,rax
  40dec2:	jne    40df75 <_start@@Base+0x8e15>
  40dec8:	mov    rax,QWORD PTR [rbp-0x40]
  40decc:	mov    QWORD PTR [rbp-0x18],rax
  40ded0:	mov    rdx,QWORD PTR [rbp-0x48]
  40ded4:	mov    rsi,QWORD PTR [rbp-0x18]
  40ded8:	mov    rax,QWORD PTR [rbp-0x38]
  40dedc:	mov    ecx,0x7
  40dee1:	mov    rdi,rax
  40dee4:	call   405c48 <_start@@Base+0xae8>
  40dee9:	mov    QWORD PTR [rbp-0x40],rax
  40deed:	mov    rax,QWORD PTR [rbp-0x18]
  40def1:	cmp    rax,QWORD PTR [rbp-0x40]
  40def5:	je     40df55 <_start@@Base+0x8df5>
  40def7:	lea    rcx,[rbp-0x24]
  40defb:	mov    rdx,QWORD PTR [rbp-0x48]
  40deff:	mov    rsi,QWORD PTR [rbp-0x40]
  40df03:	mov    rax,QWORD PTR [rbp-0x38]
  40df07:	mov    r8d,0x1
  40df0d:	mov    rdi,rax
  40df10:	call   4273d3 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40df15:	mov    QWORD PTR [rbp-0x40],rax
  40df19:	mov    eax,DWORD PTR [rbp-0x24]
  40df1c:	test   eax,eax
  40df1e:	je     40e0b5 <_start@@Base+0x8f55>
  40df24:	mov    rax,QWORD PTR [rbp-0x38]
  40df28:	mov    rax,QWORD PTR [rax]
  40df2b:	mov    esi,0x1
  40df30:	mov    rdi,rax
  40df33:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40df38:	mov    QWORD PTR [rbp-0x10],rax
  40df3c:	cmp    QWORD PTR [rbp-0x10],0x0
  40df41:	je     40e0b5 <_start@@Base+0x8f55>
  40df47:	mov    edx,DWORD PTR [rbp-0x24]
  40df4a:	mov    rax,QWORD PTR [rbp-0x10]
  40df4e:	mov    DWORD PTR [rax],edx
  40df50:	jmp    40e055 <_start@@Base+0x8ef5>
  40df55:	mov    rdx,QWORD PTR [rbp-0x48]
  40df59:	mov    rcx,QWORD PTR [rbp-0x40]
  40df5d:	mov    rax,QWORD PTR [rbp-0x38]
  40df61:	mov    rsi,rcx
  40df64:	mov    rdi,rax
  40df67:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40df6c:	mov    QWORD PTR [rbp-0x40],rax
  40df70:	jmp    40e055 <_start@@Base+0x8ef5>
  40df75:	mov    rax,QWORD PTR [rbp-0x20]
  40df79:	mov    ax,0x0
  40df7d:	mov    rdx,rax
  40df80:	movabs rax,0x6e65737465640000
  40df8a:	cmp    rdx,rax
  40df8d:	jne    40e03a <_start@@Base+0x8eda>
  40df93:	mov    rax,QWORD PTR [rbp-0x40]
  40df97:	mov    QWORD PTR [rbp-0x18],rax
  40df9b:	mov    rdx,QWORD PTR [rbp-0x48]
  40df9f:	mov    rsi,QWORD PTR [rbp-0x18]
  40dfa3:	mov    rax,QWORD PTR [rbp-0x38]
  40dfa7:	mov    ecx,0x6
  40dfac:	mov    rdi,rax
  40dfaf:	call   405c48 <_start@@Base+0xae8>
  40dfb4:	mov    QWORD PTR [rbp-0x40],rax
  40dfb8:	mov    rax,QWORD PTR [rbp-0x18]
  40dfbc:	cmp    rax,QWORD PTR [rbp-0x40]
  40dfc0:	je     40e01d <_start@@Base+0x8ebd>
  40dfc2:	lea    rcx,[rbp-0x24]
  40dfc6:	mov    rdx,QWORD PTR [rbp-0x48]
  40dfca:	mov    rsi,QWORD PTR [rbp-0x40]
  40dfce:	mov    rax,QWORD PTR [rbp-0x38]
  40dfd2:	mov    r8d,0x0
  40dfd8:	mov    rdi,rax
  40dfdb:	call   4273d3 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40dfe0:	mov    QWORD PTR [rbp-0x40],rax
  40dfe4:	mov    eax,DWORD PTR [rbp-0x24]
  40dfe7:	test   eax,eax
  40dfe9:	je     40e0b5 <_start@@Base+0x8f55>
  40dfef:	mov    rax,QWORD PTR [rbp-0x38]
  40dff3:	mov    rax,QWORD PTR [rax]
  40dff6:	mov    esi,0x2
  40dffb:	mov    rdi,rax
  40dffe:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40e003:	mov    QWORD PTR [rbp-0x10],rax
  40e007:	cmp    QWORD PTR [rbp-0x10],0x0
  40e00c:	je     40e0b5 <_start@@Base+0x8f55>
  40e012:	mov    edx,DWORD PTR [rbp-0x24]
  40e015:	mov    rax,QWORD PTR [rbp-0x10]
  40e019:	mov    DWORD PTR [rax],edx
  40e01b:	jmp    40e055 <_start@@Base+0x8ef5>
  40e01d:	mov    rdx,QWORD PTR [rbp-0x48]
  40e021:	mov    rcx,QWORD PTR [rbp-0x40]
  40e025:	mov    rax,QWORD PTR [rbp-0x38]
  40e029:	mov    rsi,rcx
  40e02c:	mov    rdi,rax
  40e02f:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e034:	mov    QWORD PTR [rbp-0x40],rax
  40e038:	jmp    40e055 <_start@@Base+0x8ef5>
  40e03a:	mov    rdx,QWORD PTR [rbp-0x48]
  40e03e:	mov    rcx,QWORD PTR [rbp-0x40]
  40e042:	mov    rax,QWORD PTR [rbp-0x38]
  40e046:	mov    rsi,rcx
  40e049:	mov    rdi,rax
  40e04c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e051:	mov    QWORD PTR [rbp-0x40],rax
  40e055:	lea    rcx,[rbp-0x28]
  40e059:	mov    rdx,QWORD PTR [rbp-0x48]
  40e05d:	mov    rsi,QWORD PTR [rbp-0x40]
  40e061:	mov    rax,QWORD PTR [rbp-0x38]
  40e065:	mov    rdi,rax
  40e068:	call   40590f <_start@@Base+0x7af>
  40e06d:	mov    QWORD PTR [rbp-0x40],rax
  40e071:	mov    eax,DWORD PTR [rbp-0x28]
  40e074:	test   eax,eax
  40e076:	jne    40dd75 <_start@@Base+0x8c15>
  40e07c:	mov    rax,QWORD PTR [rbp-0x38]
  40e080:	mov    eax,DWORD PTR [rax+0x1c]
  40e083:	test   eax,eax
  40e085:	jne    40e0b1 <_start@@Base+0x8f51>
  40e087:	mov    rax,QWORD PTR [rbp-0x38]
  40e08b:	mov    rax,QWORD PTR [rax]
  40e08e:	mov    rdi,rax
  40e091:	call   41d7cb <flatcc_builder_end_table@@Base>
  40e096:	mov    edx,eax
  40e098:	mov    rax,QWORD PTR [rbp-0x50]
  40e09c:	mov    DWORD PTR [rax],edx
  40e09e:	mov    rax,QWORD PTR [rbp-0x50]
  40e0a2:	mov    eax,DWORD PTR [rax]
  40e0a4:	test   eax,eax
  40e0a6:	je     40e0b4 <_start@@Base+0x8f54>
  40e0a8:	mov    rax,QWORD PTR [rbp-0x40]
  40e0ac:	jmp    40e0ce <_start@@Base+0x8f6e>
  40e0ae:	nop
  40e0af:	jmp    40e0b5 <_start@@Base+0x8f55>
  40e0b1:	nop
  40e0b2:	jmp    40e0b5 <_start@@Base+0x8f55>
  40e0b4:	nop
  40e0b5:	mov    rdx,QWORD PTR [rbp-0x48]
  40e0b9:	mov    rsi,QWORD PTR [rbp-0x40]
  40e0bd:	mov    rax,QWORD PTR [rbp-0x38]
  40e0c1:	mov    ecx,0x21
  40e0c6:	mov    rdi,rax
  40e0c9:	call   425bce <flatcc_json_parser_set_error@@Base>
  40e0ce:	mov    rdi,QWORD PTR [rbp-0x8]
  40e0d2:	xor    rdi,QWORD PTR fs:0x28
  40e0db:	je     40e0e2 <_start@@Base+0x8f82>
  40e0dd:	call   405070 <__stack_chk_fail@plt>
  40e0e2:	leave  
  40e0e3:	ret    
  40e0e4:	push   rbp
  40e0e5:	mov    rbp,rsp
  40e0e8:	sub    rsp,0x70
  40e0ec:	mov    QWORD PTR [rbp-0x48],rdi
  40e0f0:	mov    QWORD PTR [rbp-0x50],rsi
  40e0f4:	mov    QWORD PTR [rbp-0x58],rdx
  40e0f8:	mov    QWORD PTR [rbp-0x60],rcx
  40e0fc:	mov    rax,QWORD PTR fs:0x28
  40e105:	mov    QWORD PTR [rbp-0x8],rax
  40e109:	xor    eax,eax
  40e10b:	mov    rax,QWORD PTR [rbp-0x60]
  40e10f:	mov    DWORD PTR [rax],0x0
  40e115:	mov    rax,QWORD PTR [rbp-0x48]
  40e119:	mov    rax,QWORD PTR [rax]
  40e11c:	mov    esi,0x24
  40e121:	mov    rdi,rax
  40e124:	call   41ccc9 <flatcc_builder_start_table@@Base>
  40e129:	test   eax,eax
  40e12b:	jne    411886 <_start@@Base+0xc726>
  40e131:	lea    rcx,[rbp-0x38]
  40e135:	mov    rdx,QWORD PTR [rbp-0x58]
  40e139:	mov    rsi,QWORD PTR [rbp-0x50]
  40e13d:	mov    rax,QWORD PTR [rbp-0x48]
  40e141:	mov    r8,rcx
  40e144:	mov    ecx,0x1
  40e149:	mov    rdi,rax
  40e14c:	call   427833 <flatcc_json_parser_prepare_unions@@Base>
  40e151:	cmp    rax,QWORD PTR [rbp-0x58]
  40e155:	je     411889 <_start@@Base+0xc729>
  40e15b:	lea    rcx,[rbp-0x40]
  40e15f:	mov    rdx,QWORD PTR [rbp-0x58]
  40e163:	mov    rsi,QWORD PTR [rbp-0x50]
  40e167:	mov    rax,QWORD PTR [rbp-0x48]
  40e16b:	mov    rdi,rax
  40e16e:	call   405852 <_start@@Base+0x6f2>
  40e173:	mov    QWORD PTR [rbp-0x50],rax
  40e177:	jmp    4117e8 <_start@@Base+0xc688>
  40e17c:	mov    rdx,QWORD PTR [rbp-0x58]
  40e180:	mov    rcx,QWORD PTR [rbp-0x50]
  40e184:	mov    rax,QWORD PTR [rbp-0x48]
  40e188:	mov    rsi,rcx
  40e18b:	mov    rdi,rax
  40e18e:	call   4055e5 <_start@@Base+0x485>
  40e193:	mov    QWORD PTR [rbp-0x50],rax
  40e197:	mov    rdx,QWORD PTR [rbp-0x58]
  40e19b:	mov    rax,QWORD PTR [rbp-0x50]
  40e19f:	mov    rsi,rdx
  40e1a2:	mov    rdi,rax
  40e1a5:	call   405756 <_start@@Base+0x5f6>
  40e1aa:	mov    QWORD PTR [rbp-0x28],rax
  40e1ae:	movabs rax,0x7465737461727260
  40e1b8:	cmp    QWORD PTR [rbp-0x28],rax
  40e1bc:	ja     40f31f <_start@@Base+0xa1bf>
  40e1c2:	movabs rax,0x6e616d64ffffffff
  40e1cc:	cmp    QWORD PTR [rbp-0x28],rax
  40e1d0:	ja     40eb77 <_start@@Base+0x9a17>
  40e1d6:	movabs rax,0x666c6577ffffffff
  40e1e0:	cmp    QWORD PTR [rbp-0x28],rax
  40e1e4:	ja     40e421 <_start@@Base+0x92c1>
  40e1ea:	mov    rax,QWORD PTR [rbp-0x28]
  40e1ee:	and    rax,0xffffffffff000000
  40e1f4:	mov    rdx,rax
  40e1f7:	movabs rax,0x656e656d79000000
  40e201:	cmp    rdx,rax
  40e204:	jne    40e2b1 <_start@@Base+0x9151>
  40e20a:	mov    rax,QWORD PTR [rbp-0x50]
  40e20e:	mov    QWORD PTR [rbp-0x20],rax
  40e212:	mov    rdx,QWORD PTR [rbp-0x58]
  40e216:	mov    rsi,QWORD PTR [rbp-0x20]
  40e21a:	mov    rax,QWORD PTR [rbp-0x48]
  40e21e:	mov    ecx,0x5
  40e223:	mov    rdi,rax
  40e226:	call   405c48 <_start@@Base+0xae8>
  40e22b:	mov    QWORD PTR [rbp-0x50],rax
  40e22f:	mov    rax,QWORD PTR [rbp-0x20]
  40e233:	cmp    rax,QWORD PTR [rbp-0x50]
  40e237:	je     40e291 <_start@@Base+0x9131>
  40e239:	lea    rcx,[rbp-0x3c]
  40e23d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e241:	mov    rsi,QWORD PTR [rbp-0x50]
  40e245:	mov    rax,QWORD PTR [rbp-0x48]
  40e249:	mov    rdi,rax
  40e24c:	call   40e0e4 <_start@@Base+0x8f84>
  40e251:	mov    QWORD PTR [rbp-0x50],rax
  40e255:	mov    eax,DWORD PTR [rbp-0x3c]
  40e258:	test   eax,eax
  40e25a:	je     411905 <_start@@Base+0xc7a5>
  40e260:	mov    rax,QWORD PTR [rbp-0x48]
  40e264:	mov    rax,QWORD PTR [rax]
  40e267:	mov    esi,0xc
  40e26c:	mov    rdi,rax
  40e26f:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40e274:	mov    QWORD PTR [rbp-0x18],rax
  40e278:	cmp    QWORD PTR [rbp-0x18],0x0
  40e27d:	je     411905 <_start@@Base+0xc7a5>
  40e283:	mov    edx,DWORD PTR [rbp-0x3c]
  40e286:	mov    rax,QWORD PTR [rbp-0x18]
  40e28a:	mov    DWORD PTR [rax],edx
  40e28c:	jmp    4117cc <_start@@Base+0xc66c>
  40e291:	mov    rdx,QWORD PTR [rbp-0x58]
  40e295:	mov    rcx,QWORD PTR [rbp-0x50]
  40e299:	mov    rax,QWORD PTR [rbp-0x48]
  40e29d:	mov    rsi,rcx
  40e2a0:	mov    rdi,rax
  40e2a3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e2a8:	mov    QWORD PTR [rbp-0x50],rax
  40e2ac:	jmp    4117cc <_start@@Base+0xc66c>
  40e2b1:	mov    rax,QWORD PTR [rbp-0x28]
  40e2b5:	and    rax,0xffffffffff000000
  40e2bb:	mov    rdx,rax
  40e2be:	movabs rax,0x636f6c6f72000000
  40e2c8:	cmp    rdx,rax
  40e2cb:	jne    40e401 <_start@@Base+0x92a1>
  40e2d1:	mov    rax,QWORD PTR [rbp-0x50]
  40e2d5:	mov    QWORD PTR [rbp-0x20],rax
  40e2d9:	mov    rdx,QWORD PTR [rbp-0x58]
  40e2dd:	mov    rsi,QWORD PTR [rbp-0x20]
  40e2e1:	mov    rax,QWORD PTR [rbp-0x48]
  40e2e5:	mov    ecx,0x5
  40e2ea:	mov    rdi,rax
  40e2ed:	call   405c48 <_start@@Base+0xae8>
  40e2f2:	mov    QWORD PTR [rbp-0x50],rax
  40e2f6:	mov    rax,QWORD PTR [rbp-0x20]
  40e2fa:	cmp    rax,QWORD PTR [rbp-0x50]
  40e2fe:	je     40e3e1 <_start@@Base+0x9281>
  40e304:	mov    BYTE PTR [rbp-0x30],0x0
  40e308:	mov    rax,QWORD PTR [rbp-0x50]
  40e30c:	mov    QWORD PTR [rbp-0x20],rax
  40e310:	lea    rcx,[rbp-0x30]
  40e314:	mov    rdx,QWORD PTR [rbp-0x58]
  40e318:	mov    rsi,QWORD PTR [rbp-0x20]
  40e31c:	mov    rax,QWORD PTR [rbp-0x48]
  40e320:	mov    rdi,rax
  40e323:	call   40686c <_start@@Base+0x170c>
  40e328:	mov    QWORD PTR [rbp-0x50],rax
  40e32c:	mov    rax,QWORD PTR [rbp-0x20]
  40e330:	cmp    rax,QWORD PTR [rbp-0x50]
  40e334:	jne    40e380 <_start@@Base+0x9220>
  40e336:	mov    rax,QWORD PTR [rbp-0x50]
  40e33a:	mov    QWORD PTR [rbp-0x20],rax
  40e33e:	lea    rcx,[rbp-0x30]
  40e342:	mov    rdx,QWORD PTR [rbp-0x58]
  40e346:	mov    rsi,QWORD PTR [rbp-0x20]
  40e34a:	mov    rax,QWORD PTR [rbp-0x48]
  40e34e:	mov    r8,rcx
  40e351:	lea    rcx,[rip+0x36168]        # 4444c0 <__data_start@@Base+0x400>
  40e358:	mov    rdi,rax
  40e35b:	call   4073a4 <_start@@Base+0x2244>
  40e360:	mov    QWORD PTR [rbp-0x50],rax
  40e364:	mov    rax,QWORD PTR [rbp-0x50]
  40e368:	cmp    rax,QWORD PTR [rbp-0x20]
  40e36c:	je     411905 <_start@@Base+0xc7a5>
  40e372:	mov    rax,QWORD PTR [rbp-0x50]
  40e376:	cmp    rax,QWORD PTR [rbp-0x58]
  40e37a:	je     411905 <_start@@Base+0xc7a5>
  40e380:	movzx  eax,BYTE PTR [rbp-0x30]
  40e384:	cmp    al,0x8
  40e386:	jne    40e39a <_start@@Base+0x923a>
  40e388:	mov    rax,QWORD PTR [rbp-0x48]
  40e38c:	mov    eax,DWORD PTR [rax+0x10]
  40e38f:	and    eax,0x2
  40e392:	test   eax,eax
  40e394:	je     4117cc <_start@@Base+0xc66c>
  40e39a:	mov    rax,QWORD PTR [rbp-0x48]
  40e39e:	mov    rax,QWORD PTR [rax]
  40e3a1:	mov    ecx,0x1
  40e3a6:	mov    edx,0x1
  40e3ab:	mov    esi,0x6
  40e3b0:	mov    rdi,rax
  40e3b3:	call   41ee2d <flatcc_builder_table_add@@Base>
  40e3b8:	mov    QWORD PTR [rbp-0x10],rax
  40e3bc:	cmp    QWORD PTR [rbp-0x10],0x0
  40e3c1:	je     41188c <_start@@Base+0xc72c>
  40e3c7:	movzx  eax,BYTE PTR [rbp-0x30]
  40e3cb:	movsx  edx,al
  40e3ce:	mov    rax,QWORD PTR [rbp-0x10]
  40e3d2:	mov    esi,edx
  40e3d4:	mov    rdi,rax
  40e3d7:	call   40534b <_start@@Base+0x1eb>
  40e3dc:	jmp    4117cc <_start@@Base+0xc66c>
  40e3e1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e3e5:	mov    rcx,QWORD PTR [rbp-0x50]
  40e3e9:	mov    rax,QWORD PTR [rbp-0x48]
  40e3ed:	mov    rsi,rcx
  40e3f0:	mov    rdi,rax
  40e3f3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e3f8:	mov    QWORD PTR [rbp-0x50],rax
  40e3fc:	jmp    4117cc <_start@@Base+0xc66c>
  40e401:	mov    rdx,QWORD PTR [rbp-0x58]
  40e405:	mov    rcx,QWORD PTR [rbp-0x50]
  40e409:	mov    rax,QWORD PTR [rbp-0x48]
  40e40d:	mov    rsi,rcx
  40e410:	mov    rdi,rax
  40e413:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e418:	mov    QWORD PTR [rbp-0x50],rax
  40e41c:	jmp    4117cc <_start@@Base+0xc66c>
  40e421:	movabs rax,0x686fffffffffffff
  40e42b:	cmp    QWORD PTR [rbp-0x28],rax
  40e42f:	ja     40e63c <_start@@Base+0x94dc>
  40e435:	movabs rax,0xffffffff00000000
  40e43f:	and    rax,QWORD PTR [rbp-0x28]
  40e443:	mov    rdx,rax
  40e446:	movabs rax,0x666c657800000000
  40e450:	cmp    rdx,rax
  40e453:	jne    40e61c <_start@@Base+0x94bc>
  40e459:	mov    rax,QWORD PTR [rbp-0x50]
  40e45d:	mov    QWORD PTR [rbp-0x20],rax
  40e461:	mov    rdx,QWORD PTR [rbp-0x58]
  40e465:	mov    rsi,QWORD PTR [rbp-0x20]
  40e469:	mov    rax,QWORD PTR [rbp-0x48]
  40e46d:	mov    ecx,0x4
  40e472:	mov    rdi,rax
  40e475:	call   405c48 <_start@@Base+0xae8>
  40e47a:	mov    QWORD PTR [rbp-0x50],rax
  40e47e:	mov    rax,QWORD PTR [rbp-0x20]
  40e482:	cmp    rax,QWORD PTR [rbp-0x50]
  40e486:	je     40e5fc <_start@@Base+0x949c>
  40e48c:	mov    rax,QWORD PTR [rbp-0x48]
  40e490:	mov    rax,QWORD PTR [rax]
  40e493:	mov    ecx,0xffffffff
  40e498:	mov    edx,0x1
  40e49d:	mov    esi,0x1
  40e4a2:	mov    rdi,rax
  40e4a5:	call   41ca8f <flatcc_builder_start_vector@@Base>
  40e4aa:	test   eax,eax
  40e4ac:	jne    41188f <_start@@Base+0xc72f>
  40e4b2:	lea    rcx,[rbp-0x40]
  40e4b6:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4ba:	mov    rsi,QWORD PTR [rbp-0x50]
  40e4be:	mov    rax,QWORD PTR [rbp-0x48]
  40e4c2:	mov    rdi,rax
  40e4c5:	call   405a4d <_start@@Base+0x8ed>
  40e4ca:	mov    QWORD PTR [rbp-0x50],rax
  40e4ce:	jmp    40e5a3 <_start@@Base+0x9443>
  40e4d3:	mov    BYTE PTR [rbp-0x30],0x0
  40e4d7:	mov    rax,QWORD PTR [rbp-0x48]
  40e4db:	mov    rax,QWORD PTR [rax]
  40e4de:	mov    esi,0x1
  40e4e3:	mov    rdi,rax
  40e4e6:	call   41c377 <flatcc_builder_extend_vector@@Base>
  40e4eb:	mov    QWORD PTR [rbp-0x10],rax
  40e4ef:	cmp    QWORD PTR [rbp-0x10],0x0
  40e4f4:	je     411892 <_start@@Base+0xc732>
  40e4fa:	mov    rax,QWORD PTR [rbp-0x50]
  40e4fe:	mov    QWORD PTR [rbp-0x20],rax
  40e502:	lea    rcx,[rbp-0x30]
  40e506:	mov    rdx,QWORD PTR [rbp-0x58]
  40e50a:	mov    rsi,QWORD PTR [rbp-0x20]
  40e50e:	mov    rax,QWORD PTR [rbp-0x48]
  40e512:	mov    rdi,rax
  40e515:	call   406557 <_start@@Base+0x13f7>
  40e51a:	mov    QWORD PTR [rbp-0x50],rax
  40e51e:	mov    rax,QWORD PTR [rbp-0x20]
  40e522:	cmp    rax,QWORD PTR [rbp-0x50]
  40e526:	jne    40e572 <_start@@Base+0x9412>
  40e528:	mov    rax,QWORD PTR [rbp-0x50]
  40e52c:	mov    QWORD PTR [rbp-0x20],rax
  40e530:	lea    rcx,[rbp-0x30]
  40e534:	mov    rdx,QWORD PTR [rbp-0x58]
  40e538:	mov    rsi,QWORD PTR [rbp-0x20]
  40e53c:	mov    rax,QWORD PTR [rbp-0x48]
  40e540:	mov    r8,rcx
  40e543:	lea    rcx,[rip+0x35f96]        # 4444e0 <__data_start@@Base+0x420>
  40e54a:	mov    rdi,rax
  40e54d:	call   406e39 <_start@@Base+0x1cd9>
  40e552:	mov    QWORD PTR [rbp-0x50],rax
  40e556:	mov    rax,QWORD PTR [rbp-0x50]
  40e55a:	cmp    rax,QWORD PTR [rbp-0x20]
  40e55e:	je     411892 <_start@@Base+0xc732>
  40e564:	mov    rax,QWORD PTR [rbp-0x50]
  40e568:	cmp    rax,QWORD PTR [rbp-0x58]
  40e56c:	je     411892 <_start@@Base+0xc732>
  40e572:	movzx  eax,BYTE PTR [rbp-0x30]
  40e576:	movzx  edx,al
  40e579:	mov    rax,QWORD PTR [rbp-0x10]
  40e57d:	mov    esi,edx
  40e57f:	mov    rdi,rax
  40e582:	call   405275 <_start@@Base+0x115>
  40e587:	lea    rcx,[rbp-0x40]
  40e58b:	mov    rdx,QWORD PTR [rbp-0x58]
  40e58f:	mov    rsi,QWORD PTR [rbp-0x50]
  40e593:	mov    rax,QWORD PTR [rbp-0x48]
  40e597:	mov    rdi,rax
  40e59a:	call   405b0a <_start@@Base+0x9aa>
  40e59f:	mov    QWORD PTR [rbp-0x50],rax
  40e5a3:	mov    eax,DWORD PTR [rbp-0x40]
  40e5a6:	test   eax,eax
  40e5a8:	jne    40e4d3 <_start@@Base+0x9373>
  40e5ae:	mov    rax,QWORD PTR [rbp-0x48]
  40e5b2:	mov    rax,QWORD PTR [rax]
  40e5b5:	mov    rdi,rax
  40e5b8:	call   41dc65 <flatcc_builder_end_vector@@Base>
  40e5bd:	mov    DWORD PTR [rbp-0x3c],eax
  40e5c0:	mov    eax,DWORD PTR [rbp-0x3c]
  40e5c3:	test   eax,eax
  40e5c5:	je     411905 <_start@@Base+0xc7a5>
  40e5cb:	mov    rax,QWORD PTR [rbp-0x48]
  40e5cf:	mov    rax,QWORD PTR [rax]
  40e5d2:	mov    esi,0x1e
  40e5d7:	mov    rdi,rax
  40e5da:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40e5df:	mov    QWORD PTR [rbp-0x18],rax
  40e5e3:	cmp    QWORD PTR [rbp-0x18],0x0
  40e5e8:	je     411905 <_start@@Base+0xc7a5>
  40e5ee:	mov    edx,DWORD PTR [rbp-0x3c]
  40e5f1:	mov    rax,QWORD PTR [rbp-0x18]
  40e5f5:	mov    DWORD PTR [rax],edx
  40e5f7:	jmp    4117cc <_start@@Base+0xc66c>
  40e5fc:	mov    rdx,QWORD PTR [rbp-0x58]
  40e600:	mov    rcx,QWORD PTR [rbp-0x50]
  40e604:	mov    rax,QWORD PTR [rbp-0x48]
  40e608:	mov    rsi,rcx
  40e60b:	mov    rdi,rax
  40e60e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e613:	mov    QWORD PTR [rbp-0x50],rax
  40e617:	jmp    4117cc <_start@@Base+0xc66c>
  40e61c:	mov    rdx,QWORD PTR [rbp-0x58]
  40e620:	mov    rcx,QWORD PTR [rbp-0x50]
  40e624:	mov    rax,QWORD PTR [rbp-0x48]
  40e628:	mov    rsi,rcx
  40e62b:	mov    rdi,rax
  40e62e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e633:	mov    QWORD PTR [rbp-0x50],rax
  40e637:	jmp    4117cc <_start@@Base+0xc66c>
  40e63c:	movabs rax,0x696e76656e746f71
  40e646:	cmp    QWORD PTR [rbp-0x28],rax
  40e64a:	ja     40e7c8 <_start@@Base+0x9668>
  40e650:	movabs rax,0xffff000000000000
  40e65a:	and    rax,QWORD PTR [rbp-0x28]
  40e65e:	mov    rdx,rax
  40e661:	movabs rax,0x6870000000000000
  40e66b:	cmp    rdx,rax
  40e66e:	jne    40e7a8 <_start@@Base+0x9648>
  40e674:	mov    rax,QWORD PTR [rbp-0x50]
  40e678:	mov    QWORD PTR [rbp-0x20],rax
  40e67c:	mov    rdx,QWORD PTR [rbp-0x58]
  40e680:	mov    rsi,QWORD PTR [rbp-0x20]
  40e684:	mov    rax,QWORD PTR [rbp-0x48]
  40e688:	mov    ecx,0x2
  40e68d:	mov    rdi,rax
  40e690:	call   405c48 <_start@@Base+0xae8>
  40e695:	mov    QWORD PTR [rbp-0x50],rax
  40e699:	mov    rax,QWORD PTR [rbp-0x20]
  40e69d:	cmp    rax,QWORD PTR [rbp-0x50]
  40e6a1:	je     40e788 <_start@@Base+0x9628>
  40e6a7:	mov    WORD PTR [rbp-0x30],0x0
  40e6ad:	mov    rax,QWORD PTR [rbp-0x50]
  40e6b1:	mov    QWORD PTR [rbp-0x20],rax
  40e6b5:	lea    rcx,[rbp-0x30]
  40e6b9:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6bd:	mov    rsi,QWORD PTR [rbp-0x20]
  40e6c1:	mov    rax,QWORD PTR [rbp-0x48]
  40e6c5:	mov    rdi,rax
  40e6c8:	call   4067a7 <_start@@Base+0x1647>
  40e6cd:	mov    QWORD PTR [rbp-0x50],rax
  40e6d1:	mov    rax,QWORD PTR [rbp-0x20]
  40e6d5:	cmp    rax,QWORD PTR [rbp-0x50]
  40e6d9:	jne    40e725 <_start@@Base+0x95c5>
  40e6db:	mov    rax,QWORD PTR [rbp-0x50]
  40e6df:	mov    QWORD PTR [rbp-0x20],rax
  40e6e3:	lea    rcx,[rbp-0x30]
  40e6e7:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6eb:	mov    rsi,QWORD PTR [rbp-0x20]
  40e6ef:	mov    rax,QWORD PTR [rbp-0x48]
  40e6f3:	mov    r8,rcx
  40e6f6:	lea    rcx,[rip+0x35e03]        # 444500 <__data_start@@Base+0x440>
  40e6fd:	mov    rdi,rax
  40e700:	call   407246 <_start@@Base+0x20e6>
  40e705:	mov    QWORD PTR [rbp-0x50],rax
  40e709:	mov    rax,QWORD PTR [rbp-0x50]
  40e70d:	cmp    rax,QWORD PTR [rbp-0x20]
  40e711:	je     411905 <_start@@Base+0xc7a5>
  40e717:	mov    rax,QWORD PTR [rbp-0x50]
  40e71b:	cmp    rax,QWORD PTR [rbp-0x58]
  40e71f:	je     411905 <_start@@Base+0xc7a5>
  40e725:	movzx  eax,WORD PTR [rbp-0x30]
  40e729:	cmp    ax,0x64
  40e72d:	jne    40e741 <_start@@Base+0x95e1>
  40e72f:	mov    rax,QWORD PTR [rbp-0x48]
  40e733:	mov    eax,DWORD PTR [rax+0x10]
  40e736:	and    eax,0x2
  40e739:	test   eax,eax
  40e73b:	je     4117cc <_start@@Base+0xc66c>
  40e741:	mov    rax,QWORD PTR [rbp-0x48]
  40e745:	mov    rax,QWORD PTR [rax]
  40e748:	mov    ecx,0x2
  40e74d:	mov    edx,0x2
  40e752:	mov    esi,0x2
  40e757:	mov    rdi,rax
  40e75a:	call   41ee2d <flatcc_builder_table_add@@Base>
  40e75f:	mov    QWORD PTR [rbp-0x10],rax
  40e763:	cmp    QWORD PTR [rbp-0x10],0x0
  40e768:	je     411895 <_start@@Base+0xc735>
  40e76e:	movzx  eax,WORD PTR [rbp-0x30]
  40e772:	movsx  edx,ax
  40e775:	mov    rax,QWORD PTR [rbp-0x10]
  40e779:	mov    esi,edx
  40e77b:	mov    rdi,rax
  40e77e:	call   405382 <_start@@Base+0x222>
  40e783:	jmp    4117cc <_start@@Base+0xc66c>
  40e788:	mov    rdx,QWORD PTR [rbp-0x58]
  40e78c:	mov    rcx,QWORD PTR [rbp-0x50]
  40e790:	mov    rax,QWORD PTR [rbp-0x48]
  40e794:	mov    rsi,rcx
  40e797:	mov    rdi,rax
  40e79a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e79f:	mov    QWORD PTR [rbp-0x50],rax
  40e7a3:	jmp    4117cc <_start@@Base+0xc66c>
  40e7a8:	mov    rdx,QWORD PTR [rbp-0x58]
  40e7ac:	mov    rcx,QWORD PTR [rbp-0x50]
  40e7b0:	mov    rax,QWORD PTR [rbp-0x48]
  40e7b4:	mov    rsi,rcx
  40e7b7:	mov    rdi,rax
  40e7ba:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e7bf:	mov    QWORD PTR [rbp-0x50],rax
  40e7c3:	jmp    4117cc <_start@@Base+0xc66c>
  40e7c8:	movabs rax,0x696e76656e746f72
  40e7d2:	cmp    QWORD PTR [rbp-0x28],rax
  40e7d6:	jne    40e9ff <_start@@Base+0x989f>
  40e7dc:	add    QWORD PTR [rbp-0x50],0x8
  40e7e1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e7e5:	mov    rax,QWORD PTR [rbp-0x50]
  40e7e9:	mov    rsi,rdx
  40e7ec:	mov    rdi,rax
  40e7ef:	call   405756 <_start@@Base+0x5f6>
  40e7f4:	mov    QWORD PTR [rbp-0x28],rax
  40e7f8:	movabs rax,0xff00000000000000
  40e802:	and    rax,QWORD PTR [rbp-0x28]
  40e806:	mov    rdx,rax
  40e809:	movabs rax,0x7900000000000000
  40e813:	cmp    rdx,rax
  40e816:	jne    40e9df <_start@@Base+0x987f>
  40e81c:	mov    rax,QWORD PTR [rbp-0x50]
  40e820:	mov    QWORD PTR [rbp-0x20],rax
  40e824:	mov    rdx,QWORD PTR [rbp-0x58]
  40e828:	mov    rsi,QWORD PTR [rbp-0x20]
  40e82c:	mov    rax,QWORD PTR [rbp-0x48]
  40e830:	mov    ecx,0x1
  40e835:	mov    rdi,rax
  40e838:	call   405c48 <_start@@Base+0xae8>
  40e83d:	mov    QWORD PTR [rbp-0x50],rax
  40e841:	mov    rax,QWORD PTR [rbp-0x20]
  40e845:	cmp    rax,QWORD PTR [rbp-0x50]
  40e849:	je     40e9bf <_start@@Base+0x985f>
  40e84f:	mov    rax,QWORD PTR [rbp-0x48]
  40e853:	mov    rax,QWORD PTR [rax]
  40e856:	mov    ecx,0xffffffff
  40e85b:	mov    edx,0x1
  40e860:	mov    esi,0x1
  40e865:	mov    rdi,rax
  40e868:	call   41ca8f <flatcc_builder_start_vector@@Base>
  40e86d:	test   eax,eax
  40e86f:	jne    411898 <_start@@Base+0xc738>
  40e875:	lea    rcx,[rbp-0x40]
  40e879:	mov    rdx,QWORD PTR [rbp-0x58]
  40e87d:	mov    rsi,QWORD PTR [rbp-0x50]
  40e881:	mov    rax,QWORD PTR [rbp-0x48]
  40e885:	mov    rdi,rax
  40e888:	call   405a4d <_start@@Base+0x8ed>
  40e88d:	mov    QWORD PTR [rbp-0x50],rax
  40e891:	jmp    40e966 <_start@@Base+0x9806>
  40e896:	mov    BYTE PTR [rbp-0x30],0x0
  40e89a:	mov    rax,QWORD PTR [rbp-0x48]
  40e89e:	mov    rax,QWORD PTR [rax]
  40e8a1:	mov    esi,0x1
  40e8a6:	mov    rdi,rax
  40e8a9:	call   41c377 <flatcc_builder_extend_vector@@Base>
  40e8ae:	mov    QWORD PTR [rbp-0x10],rax
  40e8b2:	cmp    QWORD PTR [rbp-0x10],0x0
  40e8b7:	je     41189b <_start@@Base+0xc73b>
  40e8bd:	mov    rax,QWORD PTR [rbp-0x50]
  40e8c1:	mov    QWORD PTR [rbp-0x20],rax
  40e8c5:	lea    rcx,[rbp-0x30]
  40e8c9:	mov    rdx,QWORD PTR [rbp-0x58]
  40e8cd:	mov    rsi,QWORD PTR [rbp-0x20]
  40e8d1:	mov    rax,QWORD PTR [rbp-0x48]
  40e8d5:	mov    rdi,rax
  40e8d8:	call   406557 <_start@@Base+0x13f7>
  40e8dd:	mov    QWORD PTR [rbp-0x50],rax
  40e8e1:	mov    rax,QWORD PTR [rbp-0x20]
  40e8e5:	cmp    rax,QWORD PTR [rbp-0x50]
  40e8e9:	jne    40e935 <_start@@Base+0x97d5>
  40e8eb:	mov    rax,QWORD PTR [rbp-0x50]
  40e8ef:	mov    QWORD PTR [rbp-0x20],rax
  40e8f3:	lea    rcx,[rbp-0x30]
  40e8f7:	mov    rdx,QWORD PTR [rbp-0x58]
  40e8fb:	mov    rsi,QWORD PTR [rbp-0x20]
  40e8ff:	mov    rax,QWORD PTR [rbp-0x48]
  40e903:	mov    r8,rcx
  40e906:	lea    rcx,[rip+0x35c13]        # 444520 <__data_start@@Base+0x460>
  40e90d:	mov    rdi,rax
  40e910:	call   406e39 <_start@@Base+0x1cd9>
  40e915:	mov    QWORD PTR [rbp-0x50],rax
  40e919:	mov    rax,QWORD PTR [rbp-0x50]
  40e91d:	cmp    rax,QWORD PTR [rbp-0x20]
  40e921:	je     41189b <_start@@Base+0xc73b>
  40e927:	mov    rax,QWORD PTR [rbp-0x50]
  40e92b:	cmp    rax,QWORD PTR [rbp-0x58]
  40e92f:	je     41189b <_start@@Base+0xc73b>
  40e935:	movzx  eax,BYTE PTR [rbp-0x30]
  40e939:	movzx  edx,al
  40e93c:	mov    rax,QWORD PTR [rbp-0x10]
  40e940:	mov    esi,edx
  40e942:	mov    rdi,rax
  40e945:	call   405275 <_start@@Base+0x115>
  40e94a:	lea    rcx,[rbp-0x40]
  40e94e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e952:	mov    rsi,QWORD PTR [rbp-0x50]
  40e956:	mov    rax,QWORD PTR [rbp-0x48]
  40e95a:	mov    rdi,rax
  40e95d:	call   405b0a <_start@@Base+0x9aa>
  40e962:	mov    QWORD PTR [rbp-0x50],rax
  40e966:	mov    eax,DWORD PTR [rbp-0x40]
  40e969:	test   eax,eax
  40e96b:	jne    40e896 <_start@@Base+0x9736>
  40e971:	mov    rax,QWORD PTR [rbp-0x48]
  40e975:	mov    rax,QWORD PTR [rax]
  40e978:	mov    rdi,rax
  40e97b:	call   41dc65 <flatcc_builder_end_vector@@Base>
  40e980:	mov    DWORD PTR [rbp-0x3c],eax
  40e983:	mov    eax,DWORD PTR [rbp-0x3c]
  40e986:	test   eax,eax
  40e988:	je     411905 <_start@@Base+0xc7a5>
  40e98e:	mov    rax,QWORD PTR [rbp-0x48]
  40e992:	mov    rax,QWORD PTR [rax]
  40e995:	mov    esi,0x5
  40e99a:	mov    rdi,rax
  40e99d:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40e9a2:	mov    QWORD PTR [rbp-0x18],rax
  40e9a6:	cmp    QWORD PTR [rbp-0x18],0x0
  40e9ab:	je     411905 <_start@@Base+0xc7a5>
  40e9b1:	mov    edx,DWORD PTR [rbp-0x3c]
  40e9b4:	mov    rax,QWORD PTR [rbp-0x18]
  40e9b8:	mov    DWORD PTR [rax],edx
  40e9ba:	jmp    4117cc <_start@@Base+0xc66c>
  40e9bf:	mov    rdx,QWORD PTR [rbp-0x58]
  40e9c3:	mov    rcx,QWORD PTR [rbp-0x50]
  40e9c7:	mov    rax,QWORD PTR [rbp-0x48]
  40e9cb:	mov    rsi,rcx
  40e9ce:	mov    rdi,rax
  40e9d1:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e9d6:	mov    QWORD PTR [rbp-0x50],rax
  40e9da:	jmp    4117cc <_start@@Base+0xc66c>
  40e9df:	mov    rdx,QWORD PTR [rbp-0x58]
  40e9e3:	mov    rcx,QWORD PTR [rbp-0x50]
  40e9e7:	mov    rax,QWORD PTR [rbp-0x48]
  40e9eb:	mov    rsi,rcx
  40e9ee:	mov    rdi,rax
  40e9f1:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40e9f6:	mov    QWORD PTR [rbp-0x50],rax
  40e9fa:	jmp    4117cc <_start@@Base+0xc66c>
  40e9ff:	movabs rax,0xffffffff00000000
  40ea09:	and    rax,QWORD PTR [rbp-0x28]
  40ea0d:	mov    rdx,rax
  40ea10:	movabs rax,0x6d616e6100000000
  40ea1a:	cmp    rdx,rax
  40ea1d:	jne    40eb57 <_start@@Base+0x99f7>
  40ea23:	mov    rax,QWORD PTR [rbp-0x50]
  40ea27:	mov    QWORD PTR [rbp-0x20],rax
  40ea2b:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea2f:	mov    rsi,QWORD PTR [rbp-0x20]
  40ea33:	mov    rax,QWORD PTR [rbp-0x48]
  40ea37:	mov    ecx,0x4
  40ea3c:	mov    rdi,rax
  40ea3f:	call   405c48 <_start@@Base+0xae8>
  40ea44:	mov    QWORD PTR [rbp-0x50],rax
  40ea48:	mov    rax,QWORD PTR [rbp-0x20]
  40ea4c:	cmp    rax,QWORD PTR [rbp-0x50]
  40ea50:	je     40eb37 <_start@@Base+0x99d7>
  40ea56:	mov    WORD PTR [rbp-0x30],0x0
  40ea5c:	mov    rax,QWORD PTR [rbp-0x50]
  40ea60:	mov    QWORD PTR [rbp-0x20],rax
  40ea64:	lea    rcx,[rbp-0x30]
  40ea68:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea6c:	mov    rsi,QWORD PTR [rbp-0x20]
  40ea70:	mov    rax,QWORD PTR [rbp-0x48]
  40ea74:	mov    rdi,rax
  40ea77:	call   4067a7 <_start@@Base+0x1647>
  40ea7c:	mov    QWORD PTR [rbp-0x50],rax
  40ea80:	mov    rax,QWORD PTR [rbp-0x20]
  40ea84:	cmp    rax,QWORD PTR [rbp-0x50]
  40ea88:	jne    40ead4 <_start@@Base+0x9974>
  40ea8a:	mov    rax,QWORD PTR [rbp-0x50]
  40ea8e:	mov    QWORD PTR [rbp-0x20],rax
  40ea92:	lea    rcx,[rbp-0x30]
  40ea96:	mov    rdx,QWORD PTR [rbp-0x58]
  40ea9a:	mov    rsi,QWORD PTR [rbp-0x20]
  40ea9e:	mov    rax,QWORD PTR [rbp-0x48]
  40eaa2:	mov    r8,rcx
  40eaa5:	lea    rcx,[rip+0x35a94]        # 444540 <__data_start@@Base+0x480>
  40eaac:	mov    rdi,rax
  40eaaf:	call   407246 <_start@@Base+0x20e6>
  40eab4:	mov    QWORD PTR [rbp-0x50],rax
  40eab8:	mov    rax,QWORD PTR [rbp-0x50]
  40eabc:	cmp    rax,QWORD PTR [rbp-0x20]
  40eac0:	je     411905 <_start@@Base+0xc7a5>
  40eac6:	mov    rax,QWORD PTR [rbp-0x50]
  40eaca:	cmp    rax,QWORD PTR [rbp-0x58]
  40eace:	je     411905 <_start@@Base+0xc7a5>
  40ead4:	movzx  eax,WORD PTR [rbp-0x30]
  40ead8:	cmp    ax,0x96
  40eadc:	jne    40eaf0 <_start@@Base+0x9990>
  40eade:	mov    rax,QWORD PTR [rbp-0x48]
  40eae2:	mov    eax,DWORD PTR [rax+0x10]
  40eae5:	and    eax,0x2
  40eae8:	test   eax,eax
  40eaea:	je     4117cc <_start@@Base+0xc66c>
  40eaf0:	mov    rax,QWORD PTR [rbp-0x48]
  40eaf4:	mov    rax,QWORD PTR [rax]
  40eaf7:	mov    ecx,0x2
  40eafc:	mov    edx,0x2
  40eb01:	mov    esi,0x1
  40eb06:	mov    rdi,rax
  40eb09:	call   41ee2d <flatcc_builder_table_add@@Base>
  40eb0e:	mov    QWORD PTR [rbp-0x10],rax
  40eb12:	cmp    QWORD PTR [rbp-0x10],0x0
  40eb17:	je     41189e <_start@@Base+0xc73e>
  40eb1d:	movzx  eax,WORD PTR [rbp-0x30]
  40eb21:	movsx  edx,ax
  40eb24:	mov    rax,QWORD PTR [rbp-0x10]
  40eb28:	mov    esi,edx
  40eb2a:	mov    rdi,rax
  40eb2d:	call   405382 <_start@@Base+0x222>
  40eb32:	jmp    4117cc <_start@@Base+0xc66c>
  40eb37:	mov    rdx,QWORD PTR [rbp-0x58]
  40eb3b:	mov    rcx,QWORD PTR [rbp-0x50]
  40eb3f:	mov    rax,QWORD PTR [rbp-0x48]
  40eb43:	mov    rsi,rcx
  40eb46:	mov    rdi,rax
  40eb49:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40eb4e:	mov    QWORD PTR [rbp-0x50],rax
  40eb52:	jmp    4117cc <_start@@Base+0xc66c>
  40eb57:	mov    rdx,QWORD PTR [rbp-0x58]
  40eb5b:	mov    rcx,QWORD PTR [rbp-0x50]
  40eb5f:	mov    rax,QWORD PTR [rbp-0x48]
  40eb63:	mov    rsi,rcx
  40eb66:	mov    rdi,rax
  40eb69:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40eb6e:	mov    QWORD PTR [rbp-0x50],rax
  40eb72:	jmp    4117cc <_start@@Base+0xc66c>
  40eb77:	movabs rax,0x74657373ffffffff
  40eb81:	cmp    QWORD PTR [rbp-0x28],rax
  40eb85:	ja     40eed2 <_start@@Base+0x9d72>
  40eb8b:	movabs rax,0x706172656e745f6d
  40eb95:	cmp    QWORD PTR [rbp-0x28],rax
  40eb99:	ja     40ec8a <_start@@Base+0x9b2a>
  40eb9f:	movabs rax,0xffffffff00000000
  40eba9:	and    rax,QWORD PTR [rbp-0x28]
  40ebad:	mov    rdx,rax
  40ebb0:	movabs rax,0x6e616d6500000000
  40ebba:	cmp    rdx,rax
  40ebbd:	jne    40ec6a <_start@@Base+0x9b0a>
  40ebc3:	mov    rax,QWORD PTR [rbp-0x50]
  40ebc7:	mov    QWORD PTR [rbp-0x20],rax
  40ebcb:	mov    rdx,QWORD PTR [rbp-0x58]
  40ebcf:	mov    rsi,QWORD PTR [rbp-0x20]
  40ebd3:	mov    rax,QWORD PTR [rbp-0x48]
  40ebd7:	mov    ecx,0x4
  40ebdc:	mov    rdi,rax
  40ebdf:	call   405c48 <_start@@Base+0xae8>
  40ebe4:	mov    QWORD PTR [rbp-0x50],rax
  40ebe8:	mov    rax,QWORD PTR [rbp-0x20]
  40ebec:	cmp    rax,QWORD PTR [rbp-0x50]
  40ebf0:	je     40ec4a <_start@@Base+0x9aea>
  40ebf2:	lea    rcx,[rbp-0x3c]
  40ebf6:	mov    rdx,QWORD PTR [rbp-0x58]
  40ebfa:	mov    rsi,QWORD PTR [rbp-0x50]
  40ebfe:	mov    rax,QWORD PTR [rbp-0x48]
  40ec02:	mov    rdi,rax
  40ec05:	call   427628 <flatcc_json_parser_build_string@@Base>
  40ec0a:	mov    QWORD PTR [rbp-0x50],rax
  40ec0e:	mov    eax,DWORD PTR [rbp-0x3c]
  40ec11:	test   eax,eax
  40ec13:	je     411905 <_start@@Base+0xc7a5>
  40ec19:	mov    rax,QWORD PTR [rbp-0x48]
  40ec1d:	mov    rax,QWORD PTR [rax]
  40ec20:	mov    esi,0x3
  40ec25:	mov    rdi,rax
  40ec28:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40ec2d:	mov    QWORD PTR [rbp-0x18],rax
  40ec31:	cmp    QWORD PTR [rbp-0x18],0x0
  40ec36:	je     411905 <_start@@Base+0xc7a5>
  40ec3c:	mov    edx,DWORD PTR [rbp-0x3c]
  40ec3f:	mov    rax,QWORD PTR [rbp-0x18]
  40ec43:	mov    DWORD PTR [rax],edx
  40ec45:	jmp    4117cc <_start@@Base+0xc66c>
  40ec4a:	mov    rdx,QWORD PTR [rbp-0x58]
  40ec4e:	mov    rcx,QWORD PTR [rbp-0x50]
  40ec52:	mov    rax,QWORD PTR [rbp-0x48]
  40ec56:	mov    rsi,rcx
  40ec59:	mov    rdi,rax
  40ec5c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ec61:	mov    QWORD PTR [rbp-0x50],rax
  40ec65:	jmp    4117cc <_start@@Base+0xc66c>
  40ec6a:	mov    rdx,QWORD PTR [rbp-0x58]
  40ec6e:	mov    rcx,QWORD PTR [rbp-0x50]
  40ec72:	mov    rax,QWORD PTR [rbp-0x48]
  40ec76:	mov    rsi,rcx
  40ec79:	mov    rdi,rax
  40ec7c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ec81:	mov    QWORD PTR [rbp-0x50],rax
  40ec85:	jmp    4117cc <_start@@Base+0xc66c>
  40ec8a:	movabs rax,0x706172656e745f6e
  40ec94:	cmp    QWORD PTR [rbp-0x28],rax
  40ec98:	jne    40edf1 <_start@@Base+0x9c91>
  40ec9e:	add    QWORD PTR [rbp-0x50],0x8
  40eca3:	mov    rdx,QWORD PTR [rbp-0x58]
  40eca7:	mov    rax,QWORD PTR [rbp-0x50]
  40ecab:	mov    rsi,rdx
  40ecae:	mov    rdi,rax
  40ecb1:	call   405756 <_start@@Base+0x5f6>
  40ecb6:	mov    QWORD PTR [rbp-0x28],rax
  40ecba:	movabs rax,0x616d657370616365
  40ecc4:	cmp    QWORD PTR [rbp-0x28],rax
  40ecc8:	jne    40edd1 <_start@@Base+0x9c71>
  40ecce:	add    QWORD PTR [rbp-0x50],0x8
  40ecd3:	mov    rdx,QWORD PTR [rbp-0x58]
  40ecd7:	mov    rax,QWORD PTR [rbp-0x50]
  40ecdb:	mov    rsi,rdx
  40ecde:	mov    rdi,rax
  40ece1:	call   405756 <_start@@Base+0x5f6>
  40ece6:	mov    QWORD PTR [rbp-0x28],rax
  40ecea:	mov    rax,QWORD PTR [rbp-0x28]
  40ecee:	and    rax,0xffffffffff000000
  40ecf4:	mov    rdx,rax
  40ecf7:	movabs rax,0x5f74657374000000
  40ed01:	cmp    rdx,rax
  40ed04:	jne    40edb1 <_start@@Base+0x9c51>
  40ed0a:	mov    rax,QWORD PTR [rbp-0x50]
  40ed0e:	mov    QWORD PTR [rbp-0x20],rax
  40ed12:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed16:	mov    rsi,QWORD PTR [rbp-0x20]
  40ed1a:	mov    rax,QWORD PTR [rbp-0x48]
  40ed1e:	mov    ecx,0x5
  40ed23:	mov    rdi,rax
  40ed26:	call   405c48 <_start@@Base+0xae8>
  40ed2b:	mov    QWORD PTR [rbp-0x50],rax
  40ed2f:	mov    rax,QWORD PTR [rbp-0x20]
  40ed33:	cmp    rax,QWORD PTR [rbp-0x50]
  40ed37:	je     40ed91 <_start@@Base+0x9c31>
  40ed39:	lea    rcx,[rbp-0x3c]
  40ed3d:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed41:	mov    rsi,QWORD PTR [rbp-0x50]
  40ed45:	mov    rax,QWORD PTR [rbp-0x48]
  40ed49:	mov    rdi,rax
  40ed4c:	call   4084a2 <_start@@Base+0x3342>
  40ed51:	mov    QWORD PTR [rbp-0x50],rax
  40ed55:	mov    eax,DWORD PTR [rbp-0x3c]
  40ed58:	test   eax,eax
  40ed5a:	je     411905 <_start@@Base+0xc7a5>
  40ed60:	mov    rax,QWORD PTR [rbp-0x48]
  40ed64:	mov    rax,QWORD PTR [rax]
  40ed67:	mov    esi,0x22
  40ed6c:	mov    rdi,rax
  40ed6f:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40ed74:	mov    QWORD PTR [rbp-0x18],rax
  40ed78:	cmp    QWORD PTR [rbp-0x18],0x0
  40ed7d:	je     411905 <_start@@Base+0xc7a5>
  40ed83:	mov    edx,DWORD PTR [rbp-0x3c]
  40ed86:	mov    rax,QWORD PTR [rbp-0x18]
  40ed8a:	mov    DWORD PTR [rax],edx
  40ed8c:	jmp    4117cc <_start@@Base+0xc66c>
  40ed91:	mov    rdx,QWORD PTR [rbp-0x58]
  40ed95:	mov    rcx,QWORD PTR [rbp-0x50]
  40ed99:	mov    rax,QWORD PTR [rbp-0x48]
  40ed9d:	mov    rsi,rcx
  40eda0:	mov    rdi,rax
  40eda3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40eda8:	mov    QWORD PTR [rbp-0x50],rax
  40edac:	jmp    4117cc <_start@@Base+0xc66c>
  40edb1:	mov    rdx,QWORD PTR [rbp-0x58]
  40edb5:	mov    rcx,QWORD PTR [rbp-0x50]
  40edb9:	mov    rax,QWORD PTR [rbp-0x48]
  40edbd:	mov    rsi,rcx
  40edc0:	mov    rdi,rax
  40edc3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40edc8:	mov    QWORD PTR [rbp-0x50],rax
  40edcc:	jmp    4117cc <_start@@Base+0xc66c>
  40edd1:	mov    rdx,QWORD PTR [rbp-0x58]
  40edd5:	mov    rcx,QWORD PTR [rbp-0x50]
  40edd9:	mov    rax,QWORD PTR [rbp-0x48]
  40eddd:	mov    rsi,rcx
  40ede0:	mov    rdi,rax
  40ede3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ede8:	mov    QWORD PTR [rbp-0x50],rax
  40edec:	jmp    4117cc <_start@@Base+0xc66c>
  40edf1:	movabs rax,0xffffff0000000000
  40edfb:	and    rax,QWORD PTR [rbp-0x28]
  40edff:	mov    rdx,rax
  40ee02:	movabs rax,0x706f730000000000
  40ee0c:	cmp    rdx,rax
  40ee0f:	jne    40eeb2 <_start@@Base+0x9d52>
  40ee15:	mov    rax,QWORD PTR [rbp-0x50]
  40ee19:	mov    QWORD PTR [rbp-0x20],rax
  40ee1d:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee21:	mov    rsi,QWORD PTR [rbp-0x20]
  40ee25:	mov    rax,QWORD PTR [rbp-0x48]
  40ee29:	mov    ecx,0x3
  40ee2e:	mov    rdi,rax
  40ee31:	call   405c48 <_start@@Base+0xae8>
  40ee36:	mov    QWORD PTR [rbp-0x50],rax
  40ee3a:	mov    rax,QWORD PTR [rbp-0x20]
  40ee3e:	cmp    rax,QWORD PTR [rbp-0x50]
  40ee42:	je     40ee92 <_start@@Base+0x9d32>
  40ee44:	mov    rax,QWORD PTR [rbp-0x48]
  40ee48:	mov    rax,QWORD PTR [rax]
  40ee4b:	mov    ecx,0x10
  40ee50:	mov    edx,0x20
  40ee55:	mov    esi,0x0
  40ee5a:	mov    rdi,rax
  40ee5d:	call   41ee2d <flatcc_builder_table_add@@Base>
  40ee62:	mov    QWORD PTR [rbp-0x10],rax
  40ee66:	cmp    QWORD PTR [rbp-0x10],0x0
  40ee6b:	je     4118a1 <_start@@Base+0xc741>
  40ee71:	mov    rcx,QWORD PTR [rbp-0x10]
  40ee75:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee79:	mov    rsi,QWORD PTR [rbp-0x50]
  40ee7d:	mov    rax,QWORD PTR [rbp-0x48]
  40ee81:	mov    rdi,rax
  40ee84:	call   40aeab <_start@@Base+0x5d4b>
  40ee89:	mov    QWORD PTR [rbp-0x50],rax
  40ee8d:	jmp    4117cc <_start@@Base+0xc66c>
  40ee92:	mov    rdx,QWORD PTR [rbp-0x58]
  40ee96:	mov    rcx,QWORD PTR [rbp-0x50]
  40ee9a:	mov    rax,QWORD PTR [rbp-0x48]
  40ee9e:	mov    rsi,rcx
  40eea1:	mov    rdi,rax
  40eea4:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40eea9:	mov    QWORD PTR [rbp-0x50],rax
  40eead:	jmp    4117cc <_start@@Base+0xc66c>
  40eeb2:	mov    rdx,QWORD PTR [rbp-0x58]
  40eeb6:	mov    rcx,QWORD PTR [rbp-0x50]
  40eeba:	mov    rax,QWORD PTR [rbp-0x48]
  40eebe:	mov    rsi,rcx
  40eec1:	mov    rdi,rax
  40eec4:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40eec9:	mov    QWORD PTR [rbp-0x50],rax
  40eecd:	jmp    4117cc <_start@@Base+0xc66c>
  40eed2:	mov    rax,QWORD PTR [rbp-0x28]
  40eed6:	and    rax,0xffffffffff000000
  40eedc:	mov    rdx,rax
  40eedf:	movabs rax,0x7465737434000000
  40eee9:	cmp    rdx,rax
  40eeec:	jne    40f019 <_start@@Base+0x9eb9>
  40eef2:	mov    rax,QWORD PTR [rbp-0x50]
  40eef6:	mov    QWORD PTR [rbp-0x20],rax
  40eefa:	mov    rdx,QWORD PTR [rbp-0x58]
  40eefe:	mov    rsi,QWORD PTR [rbp-0x20]
  40ef02:	mov    rax,QWORD PTR [rbp-0x48]
  40ef06:	mov    ecx,0x5
  40ef0b:	mov    rdi,rax
  40ef0e:	call   405c48 <_start@@Base+0xae8>
  40ef13:	mov    QWORD PTR [rbp-0x50],rax
  40ef17:	mov    rax,QWORD PTR [rbp-0x20]
  40ef1b:	cmp    rax,QWORD PTR [rbp-0x50]
  40ef1f:	je     40f0a7 <_start@@Base+0x9f47>
  40ef25:	mov    rax,QWORD PTR [rbp-0x48]
  40ef29:	mov    rax,QWORD PTR [rax]
  40ef2c:	mov    ecx,0x3fffffff
  40ef31:	mov    edx,0x2
  40ef36:	mov    esi,0x4
  40ef3b:	mov    rdi,rax
  40ef3e:	call   41ca8f <flatcc_builder_start_vector@@Base>
  40ef43:	test   eax,eax
  40ef45:	jne    4118a4 <_start@@Base+0xc744>
  40ef4b:	lea    rcx,[rbp-0x40]
  40ef4f:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef53:	mov    rsi,QWORD PTR [rbp-0x50]
  40ef57:	mov    rax,QWORD PTR [rbp-0x48]
  40ef5b:	mov    rdi,rax
  40ef5e:	call   405a4d <_start@@Base+0x8ed>
  40ef63:	mov    QWORD PTR [rbp-0x50],rax
  40ef67:	jmp    40efc4 <_start@@Base+0x9e64>
  40ef69:	mov    rax,QWORD PTR [rbp-0x48]
  40ef6d:	mov    rax,QWORD PTR [rax]
  40ef70:	mov    esi,0x1
  40ef75:	mov    rdi,rax
  40ef78:	call   41c377 <flatcc_builder_extend_vector@@Base>
  40ef7d:	mov    QWORD PTR [rbp-0x10],rax
  40ef81:	cmp    QWORD PTR [rbp-0x10],0x0
  40ef86:	je     4118a7 <_start@@Base+0xc747>
  40ef8c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ef90:	mov    rdx,QWORD PTR [rbp-0x58]
  40ef94:	mov    rsi,QWORD PTR [rbp-0x50]
  40ef98:	mov    rax,QWORD PTR [rbp-0x48]
  40ef9c:	mov    rdi,rax
  40ef9f:	call   409620 <_start@@Base+0x44c0>
  40efa4:	mov    QWORD PTR [rbp-0x50],rax
  40efa8:	lea    rcx,[rbp-0x40]
  40efac:	mov    rdx,QWORD PTR [rbp-0x58]
  40efb0:	mov    rsi,QWORD PTR [rbp-0x50]
  40efb4:	mov    rax,QWORD PTR [rbp-0x48]
  40efb8:	mov    rdi,rax
  40efbb:	call   405b0a <_start@@Base+0x9aa>
  40efc0:	mov    QWORD PTR [rbp-0x50],rax
  40efc4:	mov    eax,DWORD PTR [rbp-0x40]
  40efc7:	test   eax,eax
  40efc9:	jne    40ef69 <_start@@Base+0x9e09>
  40efcb:	mov    rax,QWORD PTR [rbp-0x48]
  40efcf:	mov    rax,QWORD PTR [rax]
  40efd2:	mov    rdi,rax
  40efd5:	call   41dc65 <flatcc_builder_end_vector@@Base>
  40efda:	mov    DWORD PTR [rbp-0x3c],eax
  40efdd:	mov    eax,DWORD PTR [rbp-0x3c]
  40efe0:	test   eax,eax
  40efe2:	je     411905 <_start@@Base+0xc7a5>
  40efe8:	mov    rax,QWORD PTR [rbp-0x48]
  40efec:	mov    rax,QWORD PTR [rax]
  40efef:	mov    esi,0x9
  40eff4:	mov    rdi,rax
  40eff7:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40effc:	mov    QWORD PTR [rbp-0x18],rax
  40f000:	cmp    QWORD PTR [rbp-0x18],0x0
  40f005:	je     411905 <_start@@Base+0xc7a5>
  40f00b:	mov    edx,DWORD PTR [rbp-0x3c]
  40f00e:	mov    rax,QWORD PTR [rbp-0x18]
  40f012:	mov    DWORD PTR [rax],edx
  40f014:	jmp    4117cc <_start@@Base+0xc66c>
  40f019:	movabs rax,0xffffffff00000000
  40f023:	and    rax,QWORD PTR [rbp-0x28]
  40f027:	mov    rdx,rax
  40f02a:	movabs rax,0x7465737400000000
  40f034:	cmp    rdx,rax
  40f037:	jne    40f0aa <_start@@Base+0x9f4a>
  40f039:	mov    rax,QWORD PTR [rbp-0x50]
  40f03d:	mov    QWORD PTR [rbp-0x20],rax
  40f041:	mov    rdx,QWORD PTR [rbp-0x58]
  40f045:	mov    rsi,QWORD PTR [rbp-0x20]
  40f049:	mov    rax,QWORD PTR [rbp-0x48]
  40f04d:	mov    ecx,0x4
  40f052:	mov    rdi,rax
  40f055:	call   405c48 <_start@@Base+0xae8>
  40f05a:	mov    QWORD PTR [rbp-0x50],rax
  40f05e:	mov    rax,QWORD PTR [rbp-0x20]
  40f062:	cmp    rax,QWORD PTR [rbp-0x50]
  40f066:	je     40f0ad <_start@@Base+0x9f4d>
  40f068:	mov    rdi,QWORD PTR [rbp-0x38]
  40f06c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f070:	mov    rsi,QWORD PTR [rbp-0x50]
  40f074:	mov    rax,QWORD PTR [rbp-0x48]
  40f078:	sub    rsp,0x8
  40f07c:	lea    rcx,[rip+0xffffffffffffa0d3]        # 409156 <_start@@Base+0x3ff6>
  40f083:	push   rcx
  40f084:	mov    r9,rdi
  40f087:	mov    r8d,0x8
  40f08d:	mov    ecx,0x0
  40f092:	mov    rdi,rax
  40f095:	call   42794e <flatcc_json_parser_union@@Base>
  40f09a:	add    rsp,0x10
  40f09e:	mov    QWORD PTR [rbp-0x50],rax
  40f0a2:	jmp    4117cc <_start@@Base+0xc66c>
  40f0a7:	nop
  40f0a8:	jmp    40f0ae <_start@@Base+0x9f4e>
  40f0aa:	nop
  40f0ab:	jmp    40f0ae <_start@@Base+0x9f4e>
  40f0ad:	nop
  40f0ae:	mov    rax,QWORD PTR [rbp-0x28]
  40f0b2:	and    rax,0xffffffffff000000
  40f0b8:	mov    rdx,rax
  40f0bb:	movabs rax,0x7465737435000000
  40f0c5:	cmp    rdx,rax
  40f0c8:	jne    40f1f5 <_start@@Base+0xa095>
  40f0ce:	mov    rax,QWORD PTR [rbp-0x50]
  40f0d2:	mov    QWORD PTR [rbp-0x20],rax
  40f0d6:	mov    rdx,QWORD PTR [rbp-0x58]
  40f0da:	mov    rsi,QWORD PTR [rbp-0x20]
  40f0de:	mov    rax,QWORD PTR [rbp-0x48]
  40f0e2:	mov    ecx,0x5
  40f0e7:	mov    rdi,rax
  40f0ea:	call   405c48 <_start@@Base+0xae8>
  40f0ef:	mov    QWORD PTR [rbp-0x50],rax
  40f0f3:	mov    rax,QWORD PTR [rbp-0x20]
  40f0f7:	cmp    rax,QWORD PTR [rbp-0x50]
  40f0fb:	je     40f1f8 <_start@@Base+0xa098>
  40f101:	mov    rax,QWORD PTR [rbp-0x48]
  40f105:	mov    rax,QWORD PTR [rax]
  40f108:	mov    ecx,0x3fffffff
  40f10d:	mov    edx,0x2
  40f112:	mov    esi,0x4
  40f117:	mov    rdi,rax
  40f11a:	call   41ca8f <flatcc_builder_start_vector@@Base>
  40f11f:	test   eax,eax
  40f121:	jne    4118aa <_start@@Base+0xc74a>
  40f127:	lea    rcx,[rbp-0x40]
  40f12b:	mov    rdx,QWORD PTR [rbp-0x58]
  40f12f:	mov    rsi,QWORD PTR [rbp-0x50]
  40f133:	mov    rax,QWORD PTR [rbp-0x48]
  40f137:	mov    rdi,rax
  40f13a:	call   405a4d <_start@@Base+0x8ed>
  40f13f:	mov    QWORD PTR [rbp-0x50],rax
  40f143:	jmp    40f1a0 <_start@@Base+0xa040>
  40f145:	mov    rax,QWORD PTR [rbp-0x48]
  40f149:	mov    rax,QWORD PTR [rax]
  40f14c:	mov    esi,0x1
  40f151:	mov    rdi,rax
  40f154:	call   41c377 <flatcc_builder_extend_vector@@Base>
  40f159:	mov    QWORD PTR [rbp-0x10],rax
  40f15d:	cmp    QWORD PTR [rbp-0x10],0x0
  40f162:	je     4118ad <_start@@Base+0xc74d>
  40f168:	mov    rcx,QWORD PTR [rbp-0x10]
  40f16c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f170:	mov    rsi,QWORD PTR [rbp-0x50]
  40f174:	mov    rax,QWORD PTR [rbp-0x48]
  40f178:	mov    rdi,rax
  40f17b:	call   409620 <_start@@Base+0x44c0>
  40f180:	mov    QWORD PTR [rbp-0x50],rax
  40f184:	lea    rcx,[rbp-0x40]
  40f188:	mov    rdx,QWORD PTR [rbp-0x58]
  40f18c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f190:	mov    rax,QWORD PTR [rbp-0x48]
  40f194:	mov    rdi,rax
  40f197:	call   405b0a <_start@@Base+0x9aa>
  40f19c:	mov    QWORD PTR [rbp-0x50],rax
  40f1a0:	mov    eax,DWORD PTR [rbp-0x40]
  40f1a3:	test   eax,eax
  40f1a5:	jne    40f145 <_start@@Base+0x9fe5>
  40f1a7:	mov    rax,QWORD PTR [rbp-0x48]
  40f1ab:	mov    rax,QWORD PTR [rax]
  40f1ae:	mov    rdi,rax
  40f1b1:	call   41dc65 <flatcc_builder_end_vector@@Base>
  40f1b6:	mov    DWORD PTR [rbp-0x3c],eax
  40f1b9:	mov    eax,DWORD PTR [rbp-0x3c]
  40f1bc:	test   eax,eax
  40f1be:	je     411905 <_start@@Base+0xc7a5>
  40f1c4:	mov    rax,QWORD PTR [rbp-0x48]
  40f1c8:	mov    rax,QWORD PTR [rax]
  40f1cb:	mov    esi,0x1f
  40f1d0:	mov    rdi,rax
  40f1d3:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40f1d8:	mov    QWORD PTR [rbp-0x18],rax
  40f1dc:	cmp    QWORD PTR [rbp-0x18],0x0
  40f1e1:	je     411905 <_start@@Base+0xc7a5>
  40f1e7:	mov    edx,DWORD PTR [rbp-0x3c]
  40f1ea:	mov    rax,QWORD PTR [rbp-0x18]
  40f1ee:	mov    DWORD PTR [rax],edx
  40f1f0:	jmp    4117cc <_start@@Base+0xc66c>
  40f1f5:	nop
  40f1f6:	jmp    40f1f9 <_start@@Base+0xa099>
  40f1f8:	nop
  40f1f9:	movabs rax,0x746573745f747970
  40f203:	cmp    QWORD PTR [rbp-0x28],rax
  40f207:	jne    40f2ff <_start@@Base+0xa19f>
  40f20d:	add    QWORD PTR [rbp-0x50],0x8
  40f212:	mov    rdx,QWORD PTR [rbp-0x58]
  40f216:	mov    rax,QWORD PTR [rbp-0x50]
  40f21a:	mov    rsi,rdx
  40f21d:	mov    rdi,rax
  40f220:	call   405756 <_start@@Base+0x5f6>
  40f225:	mov    QWORD PTR [rbp-0x28],rax
  40f229:	movabs rax,0xff00000000000000
  40f233:	and    rax,QWORD PTR [rbp-0x28]
  40f237:	mov    rdx,rax
  40f23a:	movabs rax,0x6500000000000000
  40f244:	cmp    rdx,rax
  40f247:	jne    40f2df <_start@@Base+0xa17f>
  40f24d:	mov    rax,QWORD PTR [rbp-0x50]
  40f251:	mov    QWORD PTR [rbp-0x20],rax
  40f255:	mov    rdx,QWORD PTR [rbp-0x58]
  40f259:	mov    rsi,QWORD PTR [rbp-0x20]
  40f25d:	mov    rax,QWORD PTR [rbp-0x48]
  40f261:	mov    ecx,0x1
  40f266:	mov    rdi,rax
  40f269:	call   405c48 <_start@@Base+0xae8>
  40f26e:	mov    QWORD PTR [rbp-0x50],rax
  40f272:	mov    rax,QWORD PTR [rbp-0x20]
  40f276:	cmp    rax,QWORD PTR [rbp-0x50]
  40f27a:	je     40f2bf <_start@@Base+0xa15f>
  40f27c:	mov    rdi,QWORD PTR [rbp-0x38]
  40f280:	mov    rdx,QWORD PTR [rbp-0x58]
  40f284:	mov    rsi,QWORD PTR [rbp-0x50]
  40f288:	mov    rax,QWORD PTR [rbp-0x48]
  40f28c:	lea    rcx,[rip+0xffffffffffff9ec3]        # 409156 <_start@@Base+0x3ff6>
  40f293:	push   rcx
  40f294:	lea    rcx,[rip+0x352c5]        # 444560 <__data_start@@Base+0x4a0>
  40f29b:	push   rcx
  40f29c:	mov    r9,rdi
  40f29f:	mov    r8d,0x8
  40f2a5:	mov    ecx,0x0
  40f2aa:	mov    rdi,rax
  40f2ad:	call   427b27 <flatcc_json_parser_union_type@@Base>
  40f2b2:	add    rsp,0x10
  40f2b6:	mov    QWORD PTR [rbp-0x50],rax
  40f2ba:	jmp    4117cc <_start@@Base+0xc66c>
  40f2bf:	mov    rdx,QWORD PTR [rbp-0x58]
  40f2c3:	mov    rcx,QWORD PTR [rbp-0x50]
  40f2c7:	mov    rax,QWORD PTR [rbp-0x48]
  40f2cb:	mov    rsi,rcx
  40f2ce:	mov    rdi,rax
  40f2d1:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f2d6:	mov    QWORD PTR [rbp-0x50],rax
  40f2da:	jmp    4117cc <_start@@Base+0xc66c>
  40f2df:	mov    rdx,QWORD PTR [rbp-0x58]
  40f2e3:	mov    rcx,QWORD PTR [rbp-0x50]
  40f2e7:	mov    rax,QWORD PTR [rbp-0x48]
  40f2eb:	mov    rsi,rcx
  40f2ee:	mov    rdi,rax
  40f2f1:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f2f6:	mov    QWORD PTR [rbp-0x50],rax
  40f2fa:	jmp    4117cc <_start@@Base+0xc66c>
  40f2ff:	mov    rdx,QWORD PTR [rbp-0x58]
  40f303:	mov    rcx,QWORD PTR [rbp-0x50]
  40f307:	mov    rax,QWORD PTR [rbp-0x48]
  40f30b:	mov    rsi,rcx
  40f30e:	mov    rdi,rax
  40f311:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f316:	mov    QWORD PTR [rbp-0x50],rax
  40f31a:	jmp    4117cc <_start@@Base+0xc66c>
  40f31f:	movabs rax,0x746573746632ffff
  40f329:	cmp    QWORD PTR [rbp-0x28],rax
  40f32d:	ja     4102e5 <_start@@Base+0xb185>
  40f333:	movabs rax,0x7465737461727261
  40f33d:	cmp    QWORD PTR [rbp-0x28],rax
  40f341:	jne    40fc15 <_start@@Base+0xaab5>
  40f347:	add    QWORD PTR [rbp-0x50],0x8
  40f34c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f350:	mov    rax,QWORD PTR [rbp-0x50]
  40f354:	mov    rsi,rdx
  40f357:	mov    rdi,rax
  40f35a:	call   405756 <_start@@Base+0x5f6>
  40f35f:	mov    QWORD PTR [rbp-0x28],rax
  40f363:	movabs rax,0x796f66737472696d
  40f36d:	cmp    QWORD PTR [rbp-0x28],rax
  40f371:	ja     40f705 <_start@@Base+0xa5a5>
  40f377:	movabs rax,0x796f66626f6f6c73
  40f381:	cmp    QWORD PTR [rbp-0x28],rax
  40f385:	jne    40f52e <_start@@Base+0xa3ce>
  40f38b:	mov    rax,QWORD PTR [rbp-0x50]
  40f38f:	mov    QWORD PTR [rbp-0x20],rax
  40f393:	mov    rdx,QWORD PTR [rbp-0x58]
  40f397:	mov    rsi,QWORD PTR [rbp-0x20]
  40f39b:	mov    rax,QWORD PTR [rbp-0x48]
  40f39f:	mov    ecx,0x8
  40f3a4:	mov    rdi,rax
  40f3a7:	call   405c48 <_start@@Base+0xae8>
  40f3ac:	mov    QWORD PTR [rbp-0x50],rax
  40f3b0:	mov    rax,QWORD PTR [rbp-0x20]
  40f3b4:	cmp    rax,QWORD PTR [rbp-0x50]
  40f3b8:	je     40f531 <_start@@Base+0xa3d1>
  40f3be:	mov    rax,QWORD PTR [rbp-0x48]
  40f3c2:	mov    rax,QWORD PTR [rax]
  40f3c5:	mov    ecx,0xffffffff
  40f3ca:	mov    edx,0x1
  40f3cf:	mov    esi,0x1
  40f3d4:	mov    rdi,rax
  40f3d7:	call   41ca8f <flatcc_builder_start_vector@@Base>
  40f3dc:	test   eax,eax
  40f3de:	jne    4118b0 <_start@@Base+0xc750>
  40f3e4:	lea    rcx,[rbp-0x40]
  40f3e8:	mov    rdx,QWORD PTR [rbp-0x58]
  40f3ec:	mov    rsi,QWORD PTR [rbp-0x50]
  40f3f0:	mov    rax,QWORD PTR [rbp-0x48]
  40f3f4:	mov    rdi,rax
  40f3f7:	call   405a4d <_start@@Base+0x8ed>
  40f3fc:	mov    QWORD PTR [rbp-0x50],rax
  40f400:	jmp    40f4d5 <_start@@Base+0xa375>
  40f405:	mov    BYTE PTR [rbp-0x30],0x0
  40f409:	mov    rax,QWORD PTR [rbp-0x48]
  40f40d:	mov    rax,QWORD PTR [rax]
  40f410:	mov    esi,0x1
  40f415:	mov    rdi,rax
  40f418:	call   41c377 <flatcc_builder_extend_vector@@Base>
  40f41d:	mov    QWORD PTR [rbp-0x10],rax
  40f421:	cmp    QWORD PTR [rbp-0x10],0x0
  40f426:	je     4118b3 <_start@@Base+0xc753>
  40f42c:	mov    rax,QWORD PTR [rbp-0x50]
  40f430:	mov    QWORD PTR [rbp-0x20],rax
  40f434:	lea    rcx,[rbp-0x30]
  40f438:	mov    rdx,QWORD PTR [rbp-0x58]
  40f43c:	mov    rsi,QWORD PTR [rbp-0x20]
  40f440:	mov    rax,QWORD PTR [rbp-0x48]
  40f444:	mov    rdi,rax
  40f447:	call   40692f <_start@@Base+0x17cf>
  40f44c:	mov    QWORD PTR [rbp-0x50],rax
  40f450:	mov    rax,QWORD PTR [rbp-0x20]
  40f454:	cmp    rax,QWORD PTR [rbp-0x50]
  40f458:	jne    40f4a4 <_start@@Base+0xa344>
  40f45a:	mov    rax,QWORD PTR [rbp-0x50]
  40f45e:	mov    QWORD PTR [rbp-0x20],rax
  40f462:	lea    rcx,[rbp-0x30]
  40f466:	mov    rdx,QWORD PTR [rbp-0x58]
  40f46a:	mov    rsi,QWORD PTR [rbp-0x20]
  40f46e:	mov    rax,QWORD PTR [rbp-0x48]
  40f472:	mov    r8,rcx
  40f475:	lea    rcx,[rip+0x35104]        # 444580 <__data_start@@Base+0x4c0>
  40f47c:	mov    rdi,rax
  40f47f:	call   4074fd <_start@@Base+0x239d>
  40f484:	mov    QWORD PTR [rbp-0x50],rax
  40f488:	mov    rax,QWORD PTR [rbp-0x50]
  40f48c:	cmp    rax,QWORD PTR [rbp-0x20]
  40f490:	je     4118b3 <_start@@Base+0xc753>
  40f496:	mov    rax,QWORD PTR [rbp-0x50]
  40f49a:	cmp    rax,QWORD PTR [rbp-0x58]
  40f49e:	je     4118b3 <_start@@Base+0xc753>
  40f4a4:	movzx  eax,BYTE PTR [rbp-0x30]
  40f4a8:	movzx  edx,al
  40f4ab:	mov    rax,QWORD PTR [rbp-0x10]
  40f4af:	mov    esi,edx
  40f4b1:	mov    rdi,rax
  40f4b4:	call   4054c3 <_start@@Base+0x363>
  40f4b9:	lea    rcx,[rbp-0x40]
  40f4bd:	mov    rdx,QWORD PTR [rbp-0x58]
  40f4c1:	mov    rsi,QWORD PTR [rbp-0x50]
  40f4c5:	mov    rax,QWORD PTR [rbp-0x48]
  40f4c9:	mov    rdi,rax
  40f4cc:	call   405b0a <_start@@Base+0x9aa>
  40f4d1:	mov    QWORD PTR [rbp-0x50],rax
  40f4d5:	mov    eax,DWORD PTR [rbp-0x40]
  40f4d8:	test   eax,eax
  40f4da:	jne    40f405 <_start@@Base+0xa2a5>
  40f4e0:	mov    rax,QWORD PTR [rbp-0x48]
  40f4e4:	mov    rax,QWORD PTR [rax]
  40f4e7:	mov    rdi,rax
  40f4ea:	call   41dc65 <flatcc_builder_end_vector@@Base>
  40f4ef:	mov    DWORD PTR [rbp-0x3c],eax
  40f4f2:	mov    eax,DWORD PTR [rbp-0x3c]
  40f4f5:	test   eax,eax
  40f4f7:	je     411905 <_start@@Base+0xc7a5>
  40f4fd:	mov    rax,QWORD PTR [rbp-0x48]
  40f501:	mov    rax,QWORD PTR [rax]
  40f504:	mov    esi,0x18
  40f509:	mov    rdi,rax
  40f50c:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40f511:	mov    QWORD PTR [rbp-0x18],rax
  40f515:	cmp    QWORD PTR [rbp-0x18],0x0
  40f51a:	je     411905 <_start@@Base+0xc7a5>
  40f520:	mov    edx,DWORD PTR [rbp-0x3c]
  40f523:	mov    rax,QWORD PTR [rbp-0x18]
  40f527:	mov    DWORD PTR [rax],edx
  40f529:	jmp    4117cc <_start@@Base+0xc66c>
  40f52e:	nop
  40f52f:	jmp    40f532 <_start@@Base+0xa3d2>
  40f531:	nop
  40f532:	movabs rax,0x796f66736f727465
  40f53c:	cmp    QWORD PTR [rbp-0x28],rax
  40f540:	jne    40f6e5 <_start@@Base+0xa585>
  40f546:	add    QWORD PTR [rbp-0x50],0x8
  40f54b:	mov    rdx,QWORD PTR [rbp-0x58]
  40f54f:	mov    rax,QWORD PTR [rbp-0x50]
  40f553:	mov    rsi,rdx
  40f556:	mov    rdi,rax
  40f559:	call   405756 <_start@@Base+0x5f6>
  40f55e:	mov    QWORD PTR [rbp-0x28],rax
  40f562:	mov    rax,QWORD PTR [rbp-0x28]
  40f566:	mov    al,0x0
  40f568:	mov    rdx,rax
  40f56b:	movabs rax,0x6473747275637400
  40f575:	cmp    rdx,rax
  40f578:	jne    40f6c5 <_start@@Base+0xa565>
  40f57e:	mov    rax,QWORD PTR [rbp-0x50]
  40f582:	mov    QWORD PTR [rbp-0x20],rax
  40f586:	mov    rdx,QWORD PTR [rbp-0x58]
  40f58a:	mov    rsi,QWORD PTR [rbp-0x20]
  40f58e:	mov    rax,QWORD PTR [rbp-0x48]
  40f592:	mov    ecx,0x7
  40f597:	mov    rdi,rax
  40f59a:	call   405c48 <_start@@Base+0xae8>
  40f59f:	mov    QWORD PTR [rbp-0x50],rax
  40f5a3:	mov    rax,QWORD PTR [rbp-0x20]
  40f5a7:	cmp    rax,QWORD PTR [rbp-0x50]
  40f5ab:	je     40f6a5 <_start@@Base+0xa545>
  40f5b1:	mov    rax,QWORD PTR [rbp-0x48]
  40f5b5:	mov    rax,QWORD PTR [rax]
  40f5b8:	mov    ecx,0x1fffffff
  40f5bd:	mov    edx,0x4
  40f5c2:	mov    esi,0x8
  40f5c7:	mov    rdi,rax
  40f5ca:	call   41ca8f <flatcc_builder_start_vector@@Base>
  40f5cf:	test   eax,eax
  40f5d1:	jne    4118b6 <_start@@Base+0xc756>
  40f5d7:	lea    rcx,[rbp-0x40]
  40f5db:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5df:	mov    rsi,QWORD PTR [rbp-0x50]
  40f5e3:	mov    rax,QWORD PTR [rbp-0x48]
  40f5e7:	mov    rdi,rax
  40f5ea:	call   405a4d <_start@@Base+0x8ed>
  40f5ef:	mov    QWORD PTR [rbp-0x50],rax
  40f5f3:	jmp    40f650 <_start@@Base+0xa4f0>
  40f5f5:	mov    rax,QWORD PTR [rbp-0x48]
  40f5f9:	mov    rax,QWORD PTR [rax]
  40f5fc:	mov    esi,0x1
  40f601:	mov    rdi,rax
  40f604:	call   41c377 <flatcc_builder_extend_vector@@Base>
  40f609:	mov    QWORD PTR [rbp-0x10],rax
  40f60d:	cmp    QWORD PTR [rbp-0x10],0x0
  40f612:	je     4118b9 <_start@@Base+0xc759>
  40f618:	mov    rcx,QWORD PTR [rbp-0x10]
  40f61c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f620:	mov    rsi,QWORD PTR [rbp-0x50]
  40f624:	mov    rax,QWORD PTR [rbp-0x48]
  40f628:	mov    rdi,rax
  40f62b:	call   40b704 <_start@@Base+0x65a4>
  40f630:	mov    QWORD PTR [rbp-0x50],rax
  40f634:	lea    rcx,[rbp-0x40]
  40f638:	mov    rdx,QWORD PTR [rbp-0x58]
  40f63c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f640:	mov    rax,QWORD PTR [rbp-0x48]
  40f644:	mov    rdi,rax
  40f647:	call   405b0a <_start@@Base+0x9aa>
  40f64c:	mov    QWORD PTR [rbp-0x50],rax
  40f650:	mov    eax,DWORD PTR [rbp-0x40]
  40f653:	test   eax,eax
  40f655:	jne    40f5f5 <_start@@Base+0xa495>
  40f657:	mov    rax,QWORD PTR [rbp-0x48]
  40f65b:	mov    rax,QWORD PTR [rax]
  40f65e:	mov    rdi,rax
  40f661:	call   41dc65 <flatcc_builder_end_vector@@Base>
  40f666:	mov    DWORD PTR [rbp-0x3c],eax
  40f669:	mov    eax,DWORD PTR [rbp-0x3c]
  40f66c:	test   eax,eax
  40f66e:	je     411905 <_start@@Base+0xc7a5>
  40f674:	mov    rax,QWORD PTR [rbp-0x48]
  40f678:	mov    rax,QWORD PTR [rax]
  40f67b:	mov    esi,0x1d
  40f680:	mov    rdi,rax
  40f683:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40f688:	mov    QWORD PTR [rbp-0x18],rax
  40f68c:	cmp    QWORD PTR [rbp-0x18],0x0
  40f691:	je     411905 <_start@@Base+0xc7a5>
  40f697:	mov    edx,DWORD PTR [rbp-0x3c]
  40f69a:	mov    rax,QWORD PTR [rbp-0x18]
  40f69e:	mov    DWORD PTR [rax],edx
  40f6a0:	jmp    4117cc <_start@@Base+0xc66c>
  40f6a5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6a9:	mov    rcx,QWORD PTR [rbp-0x50]
  40f6ad:	mov    rax,QWORD PTR [rbp-0x48]
  40f6b1:	mov    rsi,rcx
  40f6b4:	mov    rdi,rax
  40f6b7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f6bc:	mov    QWORD PTR [rbp-0x50],rax
  40f6c0:	jmp    4117cc <_start@@Base+0xc66c>
  40f6c5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6c9:	mov    rcx,QWORD PTR [rbp-0x50]
  40f6cd:	mov    rax,QWORD PTR [rbp-0x48]
  40f6d1:	mov    rsi,rcx
  40f6d4:	mov    rdi,rax
  40f6d7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f6dc:	mov    QWORD PTR [rbp-0x50],rax
  40f6e0:	jmp    4117cc <_start@@Base+0xc66c>
  40f6e5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6e9:	mov    rcx,QWORD PTR [rbp-0x50]
  40f6ed:	mov    rax,QWORD PTR [rbp-0x48]
  40f6f1:	mov    rsi,rcx
  40f6f4:	mov    rdi,rax
  40f6f7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f6fc:	mov    QWORD PTR [rbp-0x50],rax
  40f700:	jmp    4117cc <_start@@Base+0xc66c>
  40f705:	movabs rax,0x796f66737472696e
  40f70f:	cmp    QWORD PTR [rbp-0x28],rax
  40f713:	jne    40fa35 <_start@@Base+0xa8d5>
  40f719:	add    QWORD PTR [rbp-0x50],0x8
  40f71e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f722:	mov    rax,QWORD PTR [rbp-0x50]
  40f726:	mov    rsi,rdx
  40f729:	mov    rdi,rax
  40f72c:	call   405756 <_start@@Base+0x5f6>
  40f731:	mov    QWORD PTR [rbp-0x28],rax
  40f735:	movabs rax,0xffff000000000000
  40f73f:	and    rax,QWORD PTR [rbp-0x28]
  40f743:	mov    rdx,rax
  40f746:	movabs rax,0x6732000000000000
  40f750:	cmp    rdx,rax
  40f753:	jne    40f8a5 <_start@@Base+0xa745>
  40f759:	mov    rax,QWORD PTR [rbp-0x50]
  40f75d:	mov    QWORD PTR [rbp-0x20],rax
  40f761:	mov    rdx,QWORD PTR [rbp-0x58]
  40f765:	mov    rsi,QWORD PTR [rbp-0x20]
  40f769:	mov    rax,QWORD PTR [rbp-0x48]
  40f76d:	mov    ecx,0x2
  40f772:	mov    rdi,rax
  40f775:	call   405c48 <_start@@Base+0xae8>
  40f77a:	mov    QWORD PTR [rbp-0x50],rax
  40f77e:	mov    rax,QWORD PTR [rbp-0x20]
  40f782:	cmp    rax,QWORD PTR [rbp-0x50]
  40f786:	je     40f885 <_start@@Base+0xa725>
  40f78c:	mov    rax,QWORD PTR [rbp-0x48]
  40f790:	mov    rax,QWORD PTR [rax]
  40f793:	mov    rdi,rax
  40f796:	call   41cb2d <flatcc_builder_start_offset_vector@@Base>
  40f79b:	test   eax,eax
  40f79d:	jne    4118bc <_start@@Base+0xc75c>
  40f7a3:	lea    rcx,[rbp-0x40]
  40f7a7:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7ab:	mov    rsi,QWORD PTR [rbp-0x50]
  40f7af:	mov    rax,QWORD PTR [rbp-0x48]
  40f7b3:	mov    rdi,rax
  40f7b6:	call   405a4d <_start@@Base+0x8ed>
  40f7bb:	mov    QWORD PTR [rbp-0x50],rax
  40f7bf:	jmp    40f830 <_start@@Base+0xa6d0>
  40f7c1:	lea    rcx,[rbp-0x3c]
  40f7c5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7c9:	mov    rsi,QWORD PTR [rbp-0x50]
  40f7cd:	mov    rax,QWORD PTR [rbp-0x48]
  40f7d1:	mov    rdi,rax
  40f7d4:	call   427628 <flatcc_json_parser_build_string@@Base>
  40f7d9:	mov    QWORD PTR [rbp-0x50],rax
  40f7dd:	mov    eax,DWORD PTR [rbp-0x3c]
  40f7e0:	test   eax,eax
  40f7e2:	je     411905 <_start@@Base+0xc7a5>
  40f7e8:	mov    rax,QWORD PTR [rbp-0x48]
  40f7ec:	mov    rax,QWORD PTR [rax]
  40f7ef:	mov    esi,0x1
  40f7f4:	mov    rdi,rax
  40f7f7:	call   41c53d <flatcc_builder_extend_offset_vector@@Base>
  40f7fc:	mov    QWORD PTR [rbp-0x18],rax
  40f800:	cmp    QWORD PTR [rbp-0x18],0x0
  40f805:	je     411905 <_start@@Base+0xc7a5>
  40f80b:	mov    edx,DWORD PTR [rbp-0x3c]
  40f80e:	mov    rax,QWORD PTR [rbp-0x18]
  40f812:	mov    DWORD PTR [rax],edx
  40f814:	lea    rcx,[rbp-0x40]
  40f818:	mov    rdx,QWORD PTR [rbp-0x58]
  40f81c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f820:	mov    rax,QWORD PTR [rbp-0x48]
  40f824:	mov    rdi,rax
  40f827:	call   405b0a <_start@@Base+0x9aa>
  40f82c:	mov    QWORD PTR [rbp-0x50],rax
  40f830:	mov    eax,DWORD PTR [rbp-0x40]
  40f833:	test   eax,eax
  40f835:	jne    40f7c1 <_start@@Base+0xa661>
  40f837:	mov    rax,QWORD PTR [rbp-0x48]
  40f83b:	mov    rax,QWORD PTR [rax]
  40f83e:	mov    rdi,rax
  40f841:	call   41e11f <flatcc_builder_end_offset_vector@@Base>
  40f846:	mov    DWORD PTR [rbp-0x3c],eax
  40f849:	mov    eax,DWORD PTR [rbp-0x3c]
  40f84c:	test   eax,eax
  40f84e:	je     411905 <_start@@Base+0xc7a5>
  40f854:	mov    rax,QWORD PTR [rbp-0x48]
  40f858:	mov    rax,QWORD PTR [rax]
  40f85b:	mov    esi,0x1c
  40f860:	mov    rdi,rax
  40f863:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40f868:	mov    QWORD PTR [rbp-0x18],rax
  40f86c:	cmp    QWORD PTR [rbp-0x18],0x0
  40f871:	je     411905 <_start@@Base+0xc7a5>
  40f877:	mov    edx,DWORD PTR [rbp-0x3c]
  40f87a:	mov    rax,QWORD PTR [rbp-0x18]
  40f87e:	mov    DWORD PTR [rax],edx
  40f880:	jmp    4117cc <_start@@Base+0xc66c>
  40f885:	mov    rdx,QWORD PTR [rbp-0x58]
  40f889:	mov    rcx,QWORD PTR [rbp-0x50]
  40f88d:	mov    rax,QWORD PTR [rbp-0x48]
  40f891:	mov    rsi,rcx
  40f894:	mov    rdi,rax
  40f897:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40f89c:	mov    QWORD PTR [rbp-0x50],rax
  40f8a0:	jmp    4117cc <_start@@Base+0xc66c>
  40f8a5:	movabs rax,0xff00000000000000
  40f8af:	and    rax,QWORD PTR [rbp-0x28]
  40f8b3:	mov    rdx,rax
  40f8b6:	movabs rax,0x6700000000000000
  40f8c0:	cmp    rdx,rax
  40f8c3:	jne    40fa15 <_start@@Base+0xa8b5>
  40f8c9:	mov    rax,QWORD PTR [rbp-0x50]
  40f8cd:	mov    QWORD PTR [rbp-0x20],rax
  40f8d1:	mov    rdx,QWORD PTR [rbp-0x58]
  40f8d5:	mov    rsi,QWORD PTR [rbp-0x20]
  40f8d9:	mov    rax,QWORD PTR [rbp-0x48]
  40f8dd:	mov    ecx,0x1
  40f8e2:	mov    rdi,rax
  40f8e5:	call   405c48 <_start@@Base+0xae8>
  40f8ea:	mov    QWORD PTR [rbp-0x50],rax
  40f8ee:	mov    rax,QWORD PTR [rbp-0x20]
  40f8f2:	cmp    rax,QWORD PTR [rbp-0x50]
  40f8f6:	je     40f9f5 <_start@@Base+0xa895>
  40f8fc:	mov    rax,QWORD PTR [rbp-0x48]
  40f900:	mov    rax,QWORD PTR [rax]
  40f903:	mov    rdi,rax
  40f906:	call   41cb2d <flatcc_builder_start_offset_vector@@Base>
  40f90b:	test   eax,eax
  40f90d:	jne    4118bf <_start@@Base+0xc75f>
  40f913:	lea    rcx,[rbp-0x40]
  40f917:	mov    rdx,QWORD PTR [rbp-0x58]
  40f91b:	mov    rsi,QWORD PTR [rbp-0x50]
  40f91f:	mov    rax,QWORD PTR [rbp-0x48]
  40f923:	mov    rdi,rax
  40f926:	call   405a4d <_start@@Base+0x8ed>
  40f92b:	mov    QWORD PTR [rbp-0x50],rax
  40f92f:	jmp    40f9a0 <_start@@Base+0xa840>
  40f931:	lea    rcx,[rbp-0x3c]
  40f935:	mov    rdx,QWORD PTR [rbp-0x58]
  40f939:	mov    rsi,QWORD PTR [rbp-0x50]
  40f93d:	mov    rax,QWORD PTR [rbp-0x48]
  40f941:	mov    rdi,rax
  40f944:	call   427628 <flatcc_json_parser_build_string@@Base>
  40f949:	mov    QWORD PTR [rbp-0x50],rax
  40f94d:	mov    eax,DWORD PTR [rbp-0x3c]
  40f950:	test   eax,eax
  40f952:	je     411905 <_start@@Base+0xc7a5>
  40f958:	mov    rax,QWORD PTR [rbp-0x48]
  40f95c:	mov    rax,QWORD PTR [rax]
  40f95f:	mov    esi,0x1
  40f964:	mov    rdi,rax
  40f967:	call   41c53d <flatcc_builder_extend_offset_vector@@Base>
  40f96c:	mov    QWORD PTR [rbp-0x18],rax
  40f970:	cmp    QWORD PTR [rbp-0x18],0x0
  40f975:	je     411905 <_start@@Base+0xc7a5>
  40f97b:	mov    edx,DWORD PTR [rbp-0x3c]
  40f97e:	mov    rax,QWORD PTR [rbp-0x18]
  40f982:	mov    DWORD PTR [rax],edx
  40f984:	lea    rcx,[rbp-0x40]
  40f988:	mov    rdx,QWORD PTR [rbp-0x58]
  40f98c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f990:	mov    rax,QWORD PTR [rbp-0x48]
  40f994:	mov    rdi,rax
  40f997:	call   405b0a <_start@@Base+0x9aa>
  40f99c:	mov    QWORD PTR [rbp-0x50],rax
  40f9a0:	mov    eax,DWORD PTR [rbp-0x40]
  40f9a3:	test   eax,eax
  40f9a5:	jne    40f931 <_start@@Base+0xa7d1>
  40f9a7:	mov    rax,QWORD PTR [rbp-0x48]
  40f9ab:	mov    rax,QWORD PTR [rax]
  40f9ae:	mov    rdi,rax
  40f9b1:	call   41e11f <flatcc_builder_end_offset_vector@@Base>
  40f9b6:	mov    DWORD PTR [rbp-0x3c],eax
  40f9b9:	mov    eax,DWORD PTR [rbp-0x3c]
  40f9bc:	test   eax,eax
  40f9be:	je     411905 <_start@@Base+0xc7a5>
  40f9c4:	mov    rax,QWORD PTR [rbp-0x48]
  40f9c8:	mov    rax,QWORD PTR [rax]
  40f9cb:	mov    esi,0xa
  40f9d0:	mov    rdi,rax
  40f9d3:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40f9d8:	mov    QWORD PTR [rbp-0x18],rax
  40f9dc:	cmp    QWORD PTR [rbp-0x18],0x0
  40f9e1:	je     411905 <_start@@Base+0xc7a5>
  40f9e7:	mov    edx,DWORD PTR [rbp-0x3c]
  40f9ea:	mov    rax,QWORD PTR [rbp-0x18]
  40f9ee:	mov    DWORD PTR [rax],edx
  40f9f0:	jmp    4117cc <_start@@Base+0xc66c>
  40f9f5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9f9:	mov    rcx,QWORD PTR [rbp-0x50]
  40f9fd:	mov    rax,QWORD PTR [rbp-0x48]
  40fa01:	mov    rsi,rcx
  40fa04:	mov    rdi,rax
  40fa07:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fa0c:	mov    QWORD PTR [rbp-0x50],rax
  40fa10:	jmp    4117cc <_start@@Base+0xc66c>
  40fa15:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa19:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa1d:	mov    rax,QWORD PTR [rbp-0x48]
  40fa21:	mov    rsi,rcx
  40fa24:	mov    rdi,rax
  40fa27:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fa2c:	mov    QWORD PTR [rbp-0x50],rax
  40fa30:	jmp    4117cc <_start@@Base+0xc66c>
  40fa35:	movabs rax,0x796f667461626c65
  40fa3f:	cmp    QWORD PTR [rbp-0x28],rax
  40fa43:	jne    40fbf5 <_start@@Base+0xaa95>
  40fa49:	add    QWORD PTR [rbp-0x50],0x8
  40fa4e:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa52:	mov    rax,QWORD PTR [rbp-0x50]
  40fa56:	mov    rsi,rdx
  40fa59:	mov    rdi,rax
  40fa5c:	call   405756 <_start@@Base+0x5f6>
  40fa61:	mov    QWORD PTR [rbp-0x28],rax
  40fa65:	movabs rax,0xff00000000000000
  40fa6f:	and    rax,QWORD PTR [rbp-0x28]
  40fa73:	mov    rdx,rax
  40fa76:	movabs rax,0x7300000000000000
  40fa80:	cmp    rdx,rax
  40fa83:	jne    40fbd5 <_start@@Base+0xaa75>
  40fa89:	mov    rax,QWORD PTR [rbp-0x50]
  40fa8d:	mov    QWORD PTR [rbp-0x20],rax
  40fa91:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa95:	mov    rsi,QWORD PTR [rbp-0x20]
  40fa99:	mov    rax,QWORD PTR [rbp-0x48]
  40fa9d:	mov    ecx,0x1
  40faa2:	mov    rdi,rax
  40faa5:	call   405c48 <_start@@Base+0xae8>
  40faaa:	mov    QWORD PTR [rbp-0x50],rax
  40faae:	mov    rax,QWORD PTR [rbp-0x20]
  40fab2:	cmp    rax,QWORD PTR [rbp-0x50]
  40fab6:	je     40fbb5 <_start@@Base+0xaa55>
  40fabc:	mov    rax,QWORD PTR [rbp-0x48]
  40fac0:	mov    rax,QWORD PTR [rax]
  40fac3:	mov    rdi,rax
  40fac6:	call   41cb2d <flatcc_builder_start_offset_vector@@Base>
  40facb:	test   eax,eax
  40facd:	jne    4118c2 <_start@@Base+0xc762>
  40fad3:	lea    rcx,[rbp-0x40]
  40fad7:	mov    rdx,QWORD PTR [rbp-0x58]
  40fadb:	mov    rsi,QWORD PTR [rbp-0x50]
  40fadf:	mov    rax,QWORD PTR [rbp-0x48]
  40fae3:	mov    rdi,rax
  40fae6:	call   405a4d <_start@@Base+0x8ed>
  40faeb:	mov    QWORD PTR [rbp-0x50],rax
  40faef:	jmp    40fb60 <_start@@Base+0xaa00>
  40faf1:	lea    rcx,[rbp-0x3c]
  40faf5:	mov    rdx,QWORD PTR [rbp-0x58]
  40faf9:	mov    rsi,QWORD PTR [rbp-0x50]
  40fafd:	mov    rax,QWORD PTR [rbp-0x48]
  40fb01:	mov    rdi,rax
  40fb04:	call   40e0e4 <_start@@Base+0x8f84>
  40fb09:	mov    QWORD PTR [rbp-0x50],rax
  40fb0d:	mov    eax,DWORD PTR [rbp-0x3c]
  40fb10:	test   eax,eax
  40fb12:	je     411905 <_start@@Base+0xc7a5>
  40fb18:	mov    rax,QWORD PTR [rbp-0x48]
  40fb1c:	mov    rax,QWORD PTR [rax]
  40fb1f:	mov    esi,0x1
  40fb24:	mov    rdi,rax
  40fb27:	call   41c53d <flatcc_builder_extend_offset_vector@@Base>
  40fb2c:	mov    QWORD PTR [rbp-0x18],rax
  40fb30:	cmp    QWORD PTR [rbp-0x18],0x0
  40fb35:	je     411905 <_start@@Base+0xc7a5>
  40fb3b:	mov    edx,DWORD PTR [rbp-0x3c]
  40fb3e:	mov    rax,QWORD PTR [rbp-0x18]
  40fb42:	mov    DWORD PTR [rax],edx
  40fb44:	lea    rcx,[rbp-0x40]
  40fb48:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb4c:	mov    rsi,QWORD PTR [rbp-0x50]
  40fb50:	mov    rax,QWORD PTR [rbp-0x48]
  40fb54:	mov    rdi,rax
  40fb57:	call   405b0a <_start@@Base+0x9aa>
  40fb5c:	mov    QWORD PTR [rbp-0x50],rax
  40fb60:	mov    eax,DWORD PTR [rbp-0x40]
  40fb63:	test   eax,eax
  40fb65:	jne    40faf1 <_start@@Base+0xa991>
  40fb67:	mov    rax,QWORD PTR [rbp-0x48]
  40fb6b:	mov    rax,QWORD PTR [rax]
  40fb6e:	mov    rdi,rax
  40fb71:	call   41e11f <flatcc_builder_end_offset_vector@@Base>
  40fb76:	mov    DWORD PTR [rbp-0x3c],eax
  40fb79:	mov    eax,DWORD PTR [rbp-0x3c]
  40fb7c:	test   eax,eax
  40fb7e:	je     411905 <_start@@Base+0xc7a5>
  40fb84:	mov    rax,QWORD PTR [rbp-0x48]
  40fb88:	mov    rax,QWORD PTR [rax]
  40fb8b:	mov    esi,0xb
  40fb90:	mov    rdi,rax
  40fb93:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40fb98:	mov    QWORD PTR [rbp-0x18],rax
  40fb9c:	cmp    QWORD PTR [rbp-0x18],0x0
  40fba1:	je     411905 <_start@@Base+0xc7a5>
  40fba7:	mov    edx,DWORD PTR [rbp-0x3c]
  40fbaa:	mov    rax,QWORD PTR [rbp-0x18]
  40fbae:	mov    DWORD PTR [rax],edx
  40fbb0:	jmp    4117cc <_start@@Base+0xc66c>
  40fbb5:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbb9:	mov    rcx,QWORD PTR [rbp-0x50]
  40fbbd:	mov    rax,QWORD PTR [rbp-0x48]
  40fbc1:	mov    rsi,rcx
  40fbc4:	mov    rdi,rax
  40fbc7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fbcc:	mov    QWORD PTR [rbp-0x50],rax
  40fbd0:	jmp    4117cc <_start@@Base+0xc66c>
  40fbd5:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbd9:	mov    rcx,QWORD PTR [rbp-0x50]
  40fbdd:	mov    rax,QWORD PTR [rbp-0x48]
  40fbe1:	mov    rsi,rcx
  40fbe4:	mov    rdi,rax
  40fbe7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fbec:	mov    QWORD PTR [rbp-0x50],rax
  40fbf0:	jmp    4117cc <_start@@Base+0xc66c>
  40fbf5:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbf9:	mov    rcx,QWORD PTR [rbp-0x50]
  40fbfd:	mov    rax,QWORD PTR [rbp-0x48]
  40fc01:	mov    rsi,rcx
  40fc04:	mov    rdi,rax
  40fc07:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fc0c:	mov    QWORD PTR [rbp-0x50],rax
  40fc10:	jmp    4117cc <_start@@Base+0xc66c>
  40fc15:	movabs rax,0x74657374656d7073
  40fc1f:	cmp    QWORD PTR [rbp-0x28],rax
  40fc23:	ja     40fea8 <_start@@Base+0xad48>
  40fc29:	movabs rax,0x7465737462617365
  40fc33:	cmp    QWORD PTR [rbp-0x28],rax
  40fc37:	jne    40fd44 <_start@@Base+0xabe4>
  40fc3d:	add    QWORD PTR [rbp-0x50],0x8
  40fc42:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc46:	mov    rax,QWORD PTR [rbp-0x50]
  40fc4a:	mov    rsi,rdx
  40fc4d:	mov    rdi,rax
  40fc50:	call   405756 <_start@@Base+0x5f6>
  40fc55:	mov    QWORD PTR [rbp-0x28],rax
  40fc59:	movabs rax,0xffff000000000000
  40fc63:	and    rax,QWORD PTR [rbp-0x28]
  40fc67:	mov    rdx,rax
  40fc6a:	movabs rax,0x3634000000000000
  40fc74:	cmp    rdx,rax
  40fc77:	jne    40fd24 <_start@@Base+0xabc4>
  40fc7d:	mov    rax,QWORD PTR [rbp-0x50]
  40fc81:	mov    QWORD PTR [rbp-0x20],rax
  40fc85:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc89:	mov    rsi,QWORD PTR [rbp-0x20]
  40fc8d:	mov    rax,QWORD PTR [rbp-0x48]
  40fc91:	mov    ecx,0x2
  40fc96:	mov    rdi,rax
  40fc99:	call   405c48 <_start@@Base+0xae8>
  40fc9e:	mov    QWORD PTR [rbp-0x50],rax
  40fca2:	mov    rax,QWORD PTR [rbp-0x20]
  40fca6:	cmp    rax,QWORD PTR [rbp-0x50]
  40fcaa:	je     40fd04 <_start@@Base+0xaba4>
  40fcac:	lea    rcx,[rbp-0x3c]
  40fcb0:	mov    rdx,QWORD PTR [rbp-0x58]
  40fcb4:	mov    rsi,QWORD PTR [rbp-0x50]
  40fcb8:	mov    rax,QWORD PTR [rbp-0x48]
  40fcbc:	mov    rdi,rax
  40fcbf:	call   40dd07 <_start@@Base+0x8ba7>
  40fcc4:	mov    QWORD PTR [rbp-0x50],rax
  40fcc8:	mov    eax,DWORD PTR [rbp-0x3c]
  40fccb:	test   eax,eax
  40fccd:	je     411905 <_start@@Base+0xc7a5>
  40fcd3:	mov    rax,QWORD PTR [rbp-0x48]
  40fcd7:	mov    rax,QWORD PTR [rax]
  40fcda:	mov    esi,0x23
  40fcdf:	mov    rdi,rax
  40fce2:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40fce7:	mov    QWORD PTR [rbp-0x18],rax
  40fceb:	cmp    QWORD PTR [rbp-0x18],0x0
  40fcf0:	je     411905 <_start@@Base+0xc7a5>
  40fcf6:	mov    edx,DWORD PTR [rbp-0x3c]
  40fcf9:	mov    rax,QWORD PTR [rbp-0x18]
  40fcfd:	mov    DWORD PTR [rax],edx
  40fcff:	jmp    4117cc <_start@@Base+0xc66c>
  40fd04:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd08:	mov    rcx,QWORD PTR [rbp-0x50]
  40fd0c:	mov    rax,QWORD PTR [rbp-0x48]
  40fd10:	mov    rsi,rcx
  40fd13:	mov    rdi,rax
  40fd16:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fd1b:	mov    QWORD PTR [rbp-0x50],rax
  40fd1f:	jmp    4117cc <_start@@Base+0xc66c>
  40fd24:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd28:	mov    rcx,QWORD PTR [rbp-0x50]
  40fd2c:	mov    rax,QWORD PTR [rbp-0x48]
  40fd30:	mov    rsi,rcx
  40fd33:	mov    rdi,rax
  40fd36:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fd3b:	mov    QWORD PTR [rbp-0x50],rax
  40fd3f:	jmp    4117cc <_start@@Base+0xc66c>
  40fd44:	movabs rax,0x74657374626f6f6c
  40fd4e:	cmp    QWORD PTR [rbp-0x28],rax
  40fd52:	jne    40fe88 <_start@@Base+0xad28>
  40fd58:	mov    rax,QWORD PTR [rbp-0x50]
  40fd5c:	mov    QWORD PTR [rbp-0x20],rax
  40fd60:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd64:	mov    rsi,QWORD PTR [rbp-0x20]
  40fd68:	mov    rax,QWORD PTR [rbp-0x48]
  40fd6c:	mov    ecx,0x8
  40fd71:	mov    rdi,rax
  40fd74:	call   405c48 <_start@@Base+0xae8>
  40fd79:	mov    QWORD PTR [rbp-0x50],rax
  40fd7d:	mov    rax,QWORD PTR [rbp-0x20]
  40fd81:	cmp    rax,QWORD PTR [rbp-0x50]
  40fd85:	je     40fe68 <_start@@Base+0xad08>
  40fd8b:	mov    BYTE PTR [rbp-0x30],0x0
  40fd8f:	mov    rax,QWORD PTR [rbp-0x50]
  40fd93:	mov    QWORD PTR [rbp-0x20],rax
  40fd97:	lea    rcx,[rbp-0x30]
  40fd9b:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd9f:	mov    rsi,QWORD PTR [rbp-0x20]
  40fda3:	mov    rax,QWORD PTR [rbp-0x48]
  40fda7:	mov    rdi,rax
  40fdaa:	call   40692f <_start@@Base+0x17cf>
  40fdaf:	mov    QWORD PTR [rbp-0x50],rax
  40fdb3:	mov    rax,QWORD PTR [rbp-0x20]
  40fdb7:	cmp    rax,QWORD PTR [rbp-0x50]
  40fdbb:	jne    40fe07 <_start@@Base+0xaca7>
  40fdbd:	mov    rax,QWORD PTR [rbp-0x50]
  40fdc1:	mov    QWORD PTR [rbp-0x20],rax
  40fdc5:	lea    rcx,[rbp-0x30]
  40fdc9:	mov    rdx,QWORD PTR [rbp-0x58]
  40fdcd:	mov    rsi,QWORD PTR [rbp-0x20]
  40fdd1:	mov    rax,QWORD PTR [rbp-0x48]
  40fdd5:	mov    r8,rcx
  40fdd8:	lea    rcx,[rip+0x347c1]        # 4445a0 <__data_start@@Base+0x4e0>
  40fddf:	mov    rdi,rax
  40fde2:	call   4074fd <_start@@Base+0x239d>
  40fde7:	mov    QWORD PTR [rbp-0x50],rax
  40fdeb:	mov    rax,QWORD PTR [rbp-0x50]
  40fdef:	cmp    rax,QWORD PTR [rbp-0x20]
  40fdf3:	je     411905 <_start@@Base+0xc7a5>
  40fdf9:	mov    rax,QWORD PTR [rbp-0x50]
  40fdfd:	cmp    rax,QWORD PTR [rbp-0x58]
  40fe01:	je     411905 <_start@@Base+0xc7a5>
  40fe07:	movzx  eax,BYTE PTR [rbp-0x30]
  40fe0b:	cmp    al,0x1
  40fe0d:	jne    40fe21 <_start@@Base+0xacc1>
  40fe0f:	mov    rax,QWORD PTR [rbp-0x48]
  40fe13:	mov    eax,DWORD PTR [rax+0x10]
  40fe16:	and    eax,0x2
  40fe19:	test   eax,eax
  40fe1b:	je     4117cc <_start@@Base+0xc66c>
  40fe21:	mov    rax,QWORD PTR [rbp-0x48]
  40fe25:	mov    rax,QWORD PTR [rax]
  40fe28:	mov    ecx,0x1
  40fe2d:	mov    edx,0x1
  40fe32:	mov    esi,0xf
  40fe37:	mov    rdi,rax
  40fe3a:	call   41ee2d <flatcc_builder_table_add@@Base>
  40fe3f:	mov    QWORD PTR [rbp-0x10],rax
  40fe43:	cmp    QWORD PTR [rbp-0x10],0x0
  40fe48:	je     4118c5 <_start@@Base+0xc765>
  40fe4e:	movzx  eax,BYTE PTR [rbp-0x30]
  40fe52:	movzx  edx,al
  40fe55:	mov    rax,QWORD PTR [rbp-0x10]
  40fe59:	mov    esi,edx
  40fe5b:	mov    rdi,rax
  40fe5e:	call   4054c3 <_start@@Base+0x363>
  40fe63:	jmp    4117cc <_start@@Base+0xc66c>
  40fe68:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe6c:	mov    rcx,QWORD PTR [rbp-0x50]
  40fe70:	mov    rax,QWORD PTR [rbp-0x48]
  40fe74:	mov    rsi,rcx
  40fe77:	mov    rdi,rax
  40fe7a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fe7f:	mov    QWORD PTR [rbp-0x50],rax
  40fe83:	jmp    4117cc <_start@@Base+0xc66c>
  40fe88:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe8c:	mov    rcx,QWORD PTR [rbp-0x50]
  40fe90:	mov    rax,QWORD PTR [rbp-0x48]
  40fe94:	mov    rsi,rcx
  40fe97:	mov    rdi,rax
  40fe9a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40fe9f:	mov    QWORD PTR [rbp-0x50],rax
  40fea3:	jmp    4117cc <_start@@Base+0xc66c>
  40fea8:	movabs rax,0x7465737465ffffff
  40feb2:	cmp    QWORD PTR [rbp-0x28],rax
  40feb6:	ja     40fff7 <_start@@Base+0xae97>
  40febc:	movabs rax,0x74657374656d7074
  40fec6:	cmp    QWORD PTR [rbp-0x28],rax
  40feca:	jne    40ffd7 <_start@@Base+0xae77>
  40fed0:	add    QWORD PTR [rbp-0x50],0x8
  40fed5:	mov    rdx,QWORD PTR [rbp-0x58]
  40fed9:	mov    rax,QWORD PTR [rbp-0x50]
  40fedd:	mov    rsi,rdx
  40fee0:	mov    rdi,rax
  40fee3:	call   405756 <_start@@Base+0x5f6>
  40fee8:	mov    QWORD PTR [rbp-0x28],rax
  40feec:	movabs rax,0xff00000000000000
  40fef6:	and    rax,QWORD PTR [rbp-0x28]
  40fefa:	mov    rdx,rax
  40fefd:	movabs rax,0x7900000000000000
  40ff07:	cmp    rdx,rax
  40ff0a:	jne    40ffb7 <_start@@Base+0xae57>
  40ff10:	mov    rax,QWORD PTR [rbp-0x50]
  40ff14:	mov    QWORD PTR [rbp-0x20],rax
  40ff18:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff1c:	mov    rsi,QWORD PTR [rbp-0x20]
  40ff20:	mov    rax,QWORD PTR [rbp-0x48]
  40ff24:	mov    ecx,0x1
  40ff29:	mov    rdi,rax
  40ff2c:	call   405c48 <_start@@Base+0xae8>
  40ff31:	mov    QWORD PTR [rbp-0x50],rax
  40ff35:	mov    rax,QWORD PTR [rbp-0x20]
  40ff39:	cmp    rax,QWORD PTR [rbp-0x50]
  40ff3d:	je     40ff97 <_start@@Base+0xae37>
  40ff3f:	lea    rcx,[rbp-0x3c]
  40ff43:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff47:	mov    rsi,QWORD PTR [rbp-0x50]
  40ff4b:	mov    rax,QWORD PTR [rbp-0x48]
  40ff4f:	mov    rdi,rax
  40ff52:	call   40bab6 <_start@@Base+0x6956>
  40ff57:	mov    QWORD PTR [rbp-0x50],rax
  40ff5b:	mov    eax,DWORD PTR [rbp-0x3c]
  40ff5e:	test   eax,eax
  40ff60:	je     411905 <_start@@Base+0xc7a5>
  40ff66:	mov    rax,QWORD PTR [rbp-0x48]
  40ff6a:	mov    rax,QWORD PTR [rax]
  40ff6d:	mov    esi,0xe
  40ff72:	mov    rdi,rax
  40ff75:	call   41effb <flatcc_builder_table_add_offset@@Base>
  40ff7a:	mov    QWORD PTR [rbp-0x18],rax
  40ff7e:	cmp    QWORD PTR [rbp-0x18],0x0
  40ff83:	je     411905 <_start@@Base+0xc7a5>
  40ff89:	mov    edx,DWORD PTR [rbp-0x3c]
  40ff8c:	mov    rax,QWORD PTR [rbp-0x18]
  40ff90:	mov    DWORD PTR [rax],edx
  40ff92:	jmp    4117cc <_start@@Base+0xc66c>
  40ff97:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff9b:	mov    rcx,QWORD PTR [rbp-0x50]
  40ff9f:	mov    rax,QWORD PTR [rbp-0x48]
  40ffa3:	mov    rsi,rcx
  40ffa6:	mov    rdi,rax
  40ffa9:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ffae:	mov    QWORD PTR [rbp-0x50],rax
  40ffb2:	jmp    4117cc <_start@@Base+0xc66c>
  40ffb7:	mov    rdx,QWORD PTR [rbp-0x58]
  40ffbb:	mov    rcx,QWORD PTR [rbp-0x50]
  40ffbf:	mov    rax,QWORD PTR [rbp-0x48]
  40ffc3:	mov    rsi,rcx
  40ffc6:	mov    rdi,rax
  40ffc9:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ffce:	mov    QWORD PTR [rbp-0x50],rax
  40ffd2:	jmp    4117cc <_start@@Base+0xc66c>
  40ffd7:	mov    rdx,QWORD PTR [rbp-0x58]
  40ffdb:	mov    rcx,QWORD PTR [rbp-0x50]
  40ffdf:	mov    rax,QWORD PTR [rbp-0x48]
  40ffe3:	mov    rsi,rcx
  40ffe6:	mov    rdi,rax
  40ffe9:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  40ffee:	mov    QWORD PTR [rbp-0x50],rax
  40fff2:	jmp    4117cc <_start@@Base+0xc66c>
  40fff7:	mov    rax,QWORD PTR [rbp-0x28]
  40fffb:	mov    ax,0x0
  40ffff:	mov    rdx,rax
  410002:	movabs rax,0x7465737466320000
  41000c:	cmp    rdx,rax
  41000f:	jne    41015d <_start@@Base+0xaffd>
  410015:	mov    rax,QWORD PTR [rbp-0x50]
  410019:	mov    QWORD PTR [rbp-0x20],rax
  41001d:	mov    rdx,QWORD PTR [rbp-0x58]
  410021:	mov    rsi,QWORD PTR [rbp-0x20]
  410025:	mov    rax,QWORD PTR [rbp-0x48]
  410029:	mov    ecx,0x6
  41002e:	mov    rdi,rax
  410031:	call   405c48 <_start@@Base+0xae8>
  410036:	mov    QWORD PTR [rbp-0x50],rax
  41003a:	mov    rax,QWORD PTR [rbp-0x20]
  41003e:	cmp    rax,QWORD PTR [rbp-0x50]
  410042:	je     41013d <_start@@Base+0xafdd>
  410048:	vxorps xmm0,xmm0,xmm0
  41004c:	vmovss DWORD PTR [rbp-0x30],xmm0
  410051:	mov    rax,QWORD PTR [rbp-0x50]
  410055:	mov    QWORD PTR [rbp-0x20],rax
  410059:	lea    rcx,[rbp-0x30]
  41005d:	mov    rdx,QWORD PTR [rbp-0x58]
  410061:	mov    rsi,QWORD PTR [rbp-0x20]
  410065:	mov    rax,QWORD PTR [rbp-0x48]
  410069:	mov    rdi,rax
  41006c:	call   426aac <flatcc_json_parser_float@@Base>
  410071:	mov    QWORD PTR [rbp-0x50],rax
  410075:	mov    rax,QWORD PTR [rbp-0x20]
  410079:	cmp    rax,QWORD PTR [rbp-0x50]
  41007d:	jne    4100c9 <_start@@Base+0xaf69>
  41007f:	mov    rax,QWORD PTR [rbp-0x50]
  410083:	mov    QWORD PTR [rbp-0x20],rax
  410087:	lea    rcx,[rbp-0x30]
  41008b:	mov    rdx,QWORD PTR [rbp-0x58]
  41008f:	mov    rsi,QWORD PTR [rbp-0x20]
  410093:	mov    rax,QWORD PTR [rbp-0x48]
  410097:	mov    r8,rcx
  41009a:	lea    rcx,[rip+0x3451f]        # 4445c0 <__data_start@@Base+0x500>
  4100a1:	mov    rdi,rax
  4100a4:	call   407652 <_start@@Base+0x24f2>
  4100a9:	mov    QWORD PTR [rbp-0x50],rax
  4100ad:	mov    rax,QWORD PTR [rbp-0x50]
  4100b1:	cmp    rax,QWORD PTR [rbp-0x20]
  4100b5:	je     411905 <_start@@Base+0xc7a5>
  4100bb:	mov    rax,QWORD PTR [rbp-0x50]
  4100bf:	cmp    rax,QWORD PTR [rbp-0x58]
  4100c3:	je     411905 <_start@@Base+0xc7a5>
  4100c9:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4100ce:	vucomiss xmm0,DWORD PTR [rip+0x2814a]        # 438220 <_IO_stdin_used@@Base+0x3220>
  4100d6:	jp     4100f4 <_start@@Base+0xaf94>
  4100d8:	vucomiss xmm0,DWORD PTR [rip+0x28140]        # 438220 <_IO_stdin_used@@Base+0x3220>
  4100e0:	jne    4100f4 <_start@@Base+0xaf94>
  4100e2:	mov    rax,QWORD PTR [rbp-0x48]
  4100e6:	mov    eax,DWORD PTR [rax+0x10]
  4100e9:	and    eax,0x2
  4100ec:	test   eax,eax
  4100ee:	je     4117cc <_start@@Base+0xc66c>
  4100f4:	mov    rax,QWORD PTR [rbp-0x48]
  4100f8:	mov    rax,QWORD PTR [rax]
  4100fb:	mov    ecx,0x4
  410100:	mov    edx,0x4
  410105:	mov    esi,0x1a
  41010a:	mov    rdi,rax
  41010d:	call   41ee2d <flatcc_builder_table_add@@Base>
  410112:	mov    QWORD PTR [rbp-0x10],rax
  410116:	cmp    QWORD PTR [rbp-0x10],0x0
  41011b:	je     4118c8 <_start@@Base+0xc768>
  410121:	mov    edx,DWORD PTR [rbp-0x30]
  410124:	mov    rax,QWORD PTR [rbp-0x10]
  410128:	mov    DWORD PTR [rbp-0x68],edx
  41012b:	vmovss xmm0,DWORD PTR [rbp-0x68]
  410130:	mov    rdi,rax
  410133:	call   405432 <_start@@Base+0x2d2>
  410138:	jmp    4117cc <_start@@Base+0xc66c>
  41013d:	mov    rdx,QWORD PTR [rbp-0x58]
  410141:	mov    rcx,QWORD PTR [rbp-0x50]
  410145:	mov    rax,QWORD PTR [rbp-0x48]
  410149:	mov    rsi,rcx
  41014c:	mov    rdi,rax
  41014f:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410154:	mov    QWORD PTR [rbp-0x50],rax
  410158:	jmp    4117cc <_start@@Base+0xc66c>
  41015d:	mov    rax,QWORD PTR [rbp-0x28]
  410161:	and    rax,0xffffffffff000000
  410167:	mov    rdx,rax
  41016a:	movabs rax,0x7465737466000000
  410174:	cmp    rdx,rax
  410177:	jne    4102c5 <_start@@Base+0xb165>
  41017d:	mov    rax,QWORD PTR [rbp-0x50]
  410181:	mov    QWORD PTR [rbp-0x20],rax
  410185:	mov    rdx,QWORD PTR [rbp-0x58]
  410189:	mov    rsi,QWORD PTR [rbp-0x20]
  41018d:	mov    rax,QWORD PTR [rbp-0x48]
  410191:	mov    ecx,0x5
  410196:	mov    rdi,rax
  410199:	call   405c48 <_start@@Base+0xae8>
  41019e:	mov    QWORD PTR [rbp-0x50],rax
  4101a2:	mov    rax,QWORD PTR [rbp-0x20]
  4101a6:	cmp    rax,QWORD PTR [rbp-0x50]
  4101aa:	je     4102a5 <_start@@Base+0xb145>
  4101b0:	vxorps xmm0,xmm0,xmm0
  4101b4:	vmovss DWORD PTR [rbp-0x30],xmm0
  4101b9:	mov    rax,QWORD PTR [rbp-0x50]
  4101bd:	mov    QWORD PTR [rbp-0x20],rax
  4101c1:	lea    rcx,[rbp-0x30]
  4101c5:	mov    rdx,QWORD PTR [rbp-0x58]
  4101c9:	mov    rsi,QWORD PTR [rbp-0x20]
  4101cd:	mov    rax,QWORD PTR [rbp-0x48]
  4101d1:	mov    rdi,rax
  4101d4:	call   426aac <flatcc_json_parser_float@@Base>
  4101d9:	mov    QWORD PTR [rbp-0x50],rax
  4101dd:	mov    rax,QWORD PTR [rbp-0x20]
  4101e1:	cmp    rax,QWORD PTR [rbp-0x50]
  4101e5:	jne    410231 <_start@@Base+0xb0d1>
  4101e7:	mov    rax,QWORD PTR [rbp-0x50]
  4101eb:	mov    QWORD PTR [rbp-0x20],rax
  4101ef:	lea    rcx,[rbp-0x30]
  4101f3:	mov    rdx,QWORD PTR [rbp-0x58]
  4101f7:	mov    rsi,QWORD PTR [rbp-0x20]
  4101fb:	mov    rax,QWORD PTR [rbp-0x48]
  4101ff:	mov    r8,rcx
  410202:	lea    rcx,[rip+0x343d7]        # 4445e0 <__data_start@@Base+0x520>
  410209:	mov    rdi,rax
  41020c:	call   407652 <_start@@Base+0x24f2>
  410211:	mov    QWORD PTR [rbp-0x50],rax
  410215:	mov    rax,QWORD PTR [rbp-0x50]
  410219:	cmp    rax,QWORD PTR [rbp-0x20]
  41021d:	je     411905 <_start@@Base+0xc7a5>
  410223:	mov    rax,QWORD PTR [rbp-0x50]
  410227:	cmp    rax,QWORD PTR [rbp-0x58]
  41022b:	je     411905 <_start@@Base+0xc7a5>
  410231:	vmovss xmm0,DWORD PTR [rbp-0x30]
  410236:	vucomiss xmm0,DWORD PTR [rip+0x27fe6]        # 438224 <_IO_stdin_used@@Base+0x3224>
  41023e:	jp     41025c <_start@@Base+0xb0fc>
  410240:	vucomiss xmm0,DWORD PTR [rip+0x27fdc]        # 438224 <_IO_stdin_used@@Base+0x3224>
  410248:	jne    41025c <_start@@Base+0xb0fc>
  41024a:	mov    rax,QWORD PTR [rbp-0x48]
  41024e:	mov    eax,DWORD PTR [rax+0x10]
  410251:	and    eax,0x2
  410254:	test   eax,eax
  410256:	je     4117cc <_start@@Base+0xc66c>
  41025c:	mov    rax,QWORD PTR [rbp-0x48]
  410260:	mov    rax,QWORD PTR [rax]
  410263:	mov    ecx,0x4
  410268:	mov    edx,0x4
  41026d:	mov    esi,0x19
  410272:	mov    rdi,rax
  410275:	call   41ee2d <flatcc_builder_table_add@@Base>
  41027a:	mov    QWORD PTR [rbp-0x10],rax
  41027e:	cmp    QWORD PTR [rbp-0x10],0x0
  410283:	je     4118cb <_start@@Base+0xc76b>
  410289:	mov    edx,DWORD PTR [rbp-0x30]
  41028c:	mov    rax,QWORD PTR [rbp-0x10]
  410290:	mov    DWORD PTR [rbp-0x68],edx
  410293:	vmovss xmm0,DWORD PTR [rbp-0x68]
  410298:	mov    rdi,rax
  41029b:	call   405432 <_start@@Base+0x2d2>
  4102a0:	jmp    4117cc <_start@@Base+0xc66c>
  4102a5:	mov    rdx,QWORD PTR [rbp-0x58]
  4102a9:	mov    rcx,QWORD PTR [rbp-0x50]
  4102ad:	mov    rax,QWORD PTR [rbp-0x48]
  4102b1:	mov    rsi,rcx
  4102b4:	mov    rdi,rax
  4102b7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4102bc:	mov    QWORD PTR [rbp-0x50],rax
  4102c0:	jmp    4117cc <_start@@Base+0xc66c>
  4102c5:	mov    rdx,QWORD PTR [rbp-0x58]
  4102c9:	mov    rcx,QWORD PTR [rbp-0x50]
  4102cd:	mov    rax,QWORD PTR [rbp-0x48]
  4102d1:	mov    rsi,rcx
  4102d4:	mov    rdi,rax
  4102d7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4102dc:	mov    QWORD PTR [rbp-0x50],rax
  4102e0:	jmp    4117cc <_start@@Base+0xc66c>
  4102e5:	movabs rax,0x7465737468617367
  4102ef:	cmp    QWORD PTR [rbp-0x28],rax
  4102f3:	ja     41047f <_start@@Base+0xb31f>
  4102f9:	mov    rax,QWORD PTR [rbp-0x28]
  4102fd:	mov    ax,0x0
  410301:	mov    rdx,rax
  410304:	movabs rax,0x7465737466330000
  41030e:	cmp    rdx,rax
  410311:	jne    41045f <_start@@Base+0xb2ff>
  410317:	mov    rax,QWORD PTR [rbp-0x50]
  41031b:	mov    QWORD PTR [rbp-0x20],rax
  41031f:	mov    rdx,QWORD PTR [rbp-0x58]
  410323:	mov    rsi,QWORD PTR [rbp-0x20]
  410327:	mov    rax,QWORD PTR [rbp-0x48]
  41032b:	mov    ecx,0x6
  410330:	mov    rdi,rax
  410333:	call   405c48 <_start@@Base+0xae8>
  410338:	mov    QWORD PTR [rbp-0x50],rax
  41033c:	mov    rax,QWORD PTR [rbp-0x20]
  410340:	cmp    rax,QWORD PTR [rbp-0x50]
  410344:	je     41043f <_start@@Base+0xb2df>
  41034a:	vxorps xmm0,xmm0,xmm0
  41034e:	vmovss DWORD PTR [rbp-0x30],xmm0
  410353:	mov    rax,QWORD PTR [rbp-0x50]
  410357:	mov    QWORD PTR [rbp-0x20],rax
  41035b:	lea    rcx,[rbp-0x30]
  41035f:	mov    rdx,QWORD PTR [rbp-0x58]
  410363:	mov    rsi,QWORD PTR [rbp-0x20]
  410367:	mov    rax,QWORD PTR [rbp-0x48]
  41036b:	mov    rdi,rax
  41036e:	call   426aac <flatcc_json_parser_float@@Base>
  410373:	mov    QWORD PTR [rbp-0x50],rax
  410377:	mov    rax,QWORD PTR [rbp-0x20]
  41037b:	cmp    rax,QWORD PTR [rbp-0x50]
  41037f:	jne    4103cb <_start@@Base+0xb26b>
  410381:	mov    rax,QWORD PTR [rbp-0x50]
  410385:	mov    QWORD PTR [rbp-0x20],rax
  410389:	lea    rcx,[rbp-0x30]
  41038d:	mov    rdx,QWORD PTR [rbp-0x58]
  410391:	mov    rsi,QWORD PTR [rbp-0x20]
  410395:	mov    rax,QWORD PTR [rbp-0x48]
  410399:	mov    r8,rcx
  41039c:	lea    rcx,[rip+0x3425d]        # 444600 <__data_start@@Base+0x540>
  4103a3:	mov    rdi,rax
  4103a6:	call   407652 <_start@@Base+0x24f2>
  4103ab:	mov    QWORD PTR [rbp-0x50],rax
  4103af:	mov    rax,QWORD PTR [rbp-0x50]
  4103b3:	cmp    rax,QWORD PTR [rbp-0x20]
  4103b7:	je     411905 <_start@@Base+0xc7a5>
  4103bd:	mov    rax,QWORD PTR [rbp-0x50]
  4103c1:	cmp    rax,QWORD PTR [rbp-0x58]
  4103c5:	je     411905 <_start@@Base+0xc7a5>
  4103cb:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4103d0:	vxorps xmm1,xmm1,xmm1
  4103d4:	vucomiss xmm0,xmm1
  4103d8:	jp     4103f6 <_start@@Base+0xb296>
  4103da:	vxorps xmm1,xmm1,xmm1
  4103de:	vucomiss xmm0,xmm1
  4103e2:	jne    4103f6 <_start@@Base+0xb296>
  4103e4:	mov    rax,QWORD PTR [rbp-0x48]
  4103e8:	mov    eax,DWORD PTR [rax+0x10]
  4103eb:	and    eax,0x2
  4103ee:	test   eax,eax
  4103f0:	je     4117cc <_start@@Base+0xc66c>
  4103f6:	mov    rax,QWORD PTR [rbp-0x48]
  4103fa:	mov    rax,QWORD PTR [rax]
  4103fd:	mov    ecx,0x4
  410402:	mov    edx,0x4
  410407:	mov    esi,0x1b
  41040c:	mov    rdi,rax
  41040f:	call   41ee2d <flatcc_builder_table_add@@Base>
  410414:	mov    QWORD PTR [rbp-0x10],rax
  410418:	cmp    QWORD PTR [rbp-0x10],0x0
  41041d:	je     4118ce <_start@@Base+0xc76e>
  410423:	mov    edx,DWORD PTR [rbp-0x30]
  410426:	mov    rax,QWORD PTR [rbp-0x10]
  41042a:	mov    DWORD PTR [rbp-0x68],edx
  41042d:	vmovss xmm0,DWORD PTR [rbp-0x68]
  410432:	mov    rdi,rax
  410435:	call   405432 <_start@@Base+0x2d2>
  41043a:	jmp    4117cc <_start@@Base+0xc66c>
  41043f:	mov    rdx,QWORD PTR [rbp-0x58]
  410443:	mov    rcx,QWORD PTR [rbp-0x50]
  410447:	mov    rax,QWORD PTR [rbp-0x48]
  41044b:	mov    rsi,rcx
  41044e:	mov    rdi,rax
  410451:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410456:	mov    QWORD PTR [rbp-0x50],rax
  41045a:	jmp    4117cc <_start@@Base+0xc66c>
  41045f:	mov    rdx,QWORD PTR [rbp-0x58]
  410463:	mov    rcx,QWORD PTR [rbp-0x50]
  410467:	mov    rax,QWORD PTR [rbp-0x48]
  41046b:	mov    rsi,rcx
  41046e:	mov    rdi,rax
  410471:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410476:	mov    QWORD PTR [rbp-0x50],rax
  41047a:	jmp    4117cc <_start@@Base+0xc66c>
  41047f:	movabs rax,0x7465737468617368
  410489:	cmp    QWORD PTR [rbp-0x28],rax
  41048d:	jne    41100b <_start@@Base+0xbeab>
  410493:	add    QWORD PTR [rbp-0x50],0x8
  410498:	mov    rdx,QWORD PTR [rbp-0x58]
  41049c:	mov    rax,QWORD PTR [rbp-0x50]
  4104a0:	mov    rsi,rdx
  4104a3:	mov    rdi,rax
  4104a6:	call   405756 <_start@@Base+0x5f6>
  4104ab:	mov    QWORD PTR [rbp-0x28],rax
  4104af:	movabs rax,0x7336345f666e7630
  4104b9:	cmp    QWORD PTR [rbp-0x28],rax
  4104bd:	ja     410793 <_start@@Base+0xb633>
  4104c3:	movabs rax,0x7333325f666e7631
  4104cd:	cmp    QWORD PTR [rbp-0x28],rax
  4104d1:	jne    410773 <_start@@Base+0xb613>
  4104d7:	mov    rax,QWORD PTR [rbp-0x50]
  4104db:	mov    QWORD PTR [rbp-0x20],rax
  4104df:	mov    rdx,QWORD PTR [rbp-0x58]
  4104e3:	mov    rsi,QWORD PTR [rbp-0x20]
  4104e7:	mov    rax,QWORD PTR [rbp-0x48]
  4104eb:	mov    ecx,0x8
  4104f0:	mov    rdi,rax
  4104f3:	call   405c48 <_start@@Base+0xae8>
  4104f8:	mov    QWORD PTR [rbp-0x50],rax
  4104fc:	mov    rax,QWORD PTR [rbp-0x20]
  410500:	cmp    rax,QWORD PTR [rbp-0x50]
  410504:	je     4105e5 <_start@@Base+0xb485>
  41050a:	mov    DWORD PTR [rbp-0x30],0x0
  410511:	mov    rax,QWORD PTR [rbp-0x50]
  410515:	mov    QWORD PTR [rbp-0x20],rax
  410519:	lea    rcx,[rbp-0x30]
  41051d:	mov    rdx,QWORD PTR [rbp-0x58]
  410521:	mov    rsi,QWORD PTR [rbp-0x20]
  410525:	mov    rax,QWORD PTR [rbp-0x48]
  410529:	mov    rdi,rax
  41052c:	call   4066e1 <_start@@Base+0x1581>
  410531:	mov    QWORD PTR [rbp-0x50],rax
  410535:	mov    rax,QWORD PTR [rbp-0x20]
  410539:	cmp    rax,QWORD PTR [rbp-0x50]
  41053d:	jne    410589 <_start@@Base+0xb429>
  41053f:	mov    rax,QWORD PTR [rbp-0x50]
  410543:	mov    QWORD PTR [rbp-0x20],rax
  410547:	lea    rcx,[rbp-0x30]
  41054b:	mov    rdx,QWORD PTR [rbp-0x58]
  41054f:	mov    rsi,QWORD PTR [rbp-0x20]
  410553:	mov    rax,QWORD PTR [rbp-0x48]
  410557:	mov    r8,rcx
  41055a:	lea    rcx,[rip+0x340bf]        # 444620 <__data_start@@Base+0x560>
  410561:	mov    rdi,rax
  410564:	call   4070ed <_start@@Base+0x1f8d>
  410569:	mov    QWORD PTR [rbp-0x50],rax
  41056d:	mov    rax,QWORD PTR [rbp-0x50]
  410571:	cmp    rax,QWORD PTR [rbp-0x20]
  410575:	je     411905 <_start@@Base+0xc7a5>
  41057b:	mov    rax,QWORD PTR [rbp-0x50]
  41057f:	cmp    rax,QWORD PTR [rbp-0x58]
  410583:	je     411905 <_start@@Base+0xc7a5>
  410589:	mov    eax,DWORD PTR [rbp-0x30]
  41058c:	test   eax,eax
  41058e:	jne    4105a2 <_start@@Base+0xb442>
  410590:	mov    rax,QWORD PTR [rbp-0x48]
  410594:	mov    eax,DWORD PTR [rax+0x10]
  410597:	and    eax,0x2
  41059a:	test   eax,eax
  41059c:	je     4117cc <_start@@Base+0xc66c>
  4105a2:	mov    rax,QWORD PTR [rbp-0x48]
  4105a6:	mov    rax,QWORD PTR [rax]
  4105a9:	mov    ecx,0x4
  4105ae:	mov    edx,0x4
  4105b3:	mov    esi,0x10
  4105b8:	mov    rdi,rax
  4105bb:	call   41ee2d <flatcc_builder_table_add@@Base>
  4105c0:	mov    QWORD PTR [rbp-0x10],rax
  4105c4:	cmp    QWORD PTR [rbp-0x10],0x0
  4105c9:	je     4118d1 <_start@@Base+0xc771>
  4105cf:	mov    edx,DWORD PTR [rbp-0x30]
  4105d2:	mov    rax,QWORD PTR [rbp-0x10]
  4105d6:	mov    esi,edx
  4105d8:	mov    rdi,rax
  4105db:	call   4053b7 <_start@@Base+0x257>
  4105e0:	jmp    4117cc <_start@@Base+0xc66c>
  4105e5:	add    QWORD PTR [rbp-0x50],0x8
  4105ea:	mov    rdx,QWORD PTR [rbp-0x58]
  4105ee:	mov    rax,QWORD PTR [rbp-0x50]
  4105f2:	mov    rsi,rdx
  4105f5:	mov    rdi,rax
  4105f8:	call   405756 <_start@@Base+0x5f6>
  4105fd:	mov    QWORD PTR [rbp-0x28],rax
  410601:	movabs rax,0xff00000000000000
  41060b:	and    rax,QWORD PTR [rbp-0x28]
  41060f:	mov    rdx,rax
  410612:	movabs rax,0x6100000000000000
  41061c:	cmp    rdx,rax
  41061f:	jne    410753 <_start@@Base+0xb5f3>
  410625:	mov    rax,QWORD PTR [rbp-0x50]
  410629:	mov    QWORD PTR [rbp-0x20],rax
  41062d:	mov    rdx,QWORD PTR [rbp-0x58]
  410631:	mov    rsi,QWORD PTR [rbp-0x20]
  410635:	mov    rax,QWORD PTR [rbp-0x48]
  410639:	mov    ecx,0x1
  41063e:	mov    rdi,rax
  410641:	call   405c48 <_start@@Base+0xae8>
  410646:	mov    QWORD PTR [rbp-0x50],rax
  41064a:	mov    rax,QWORD PTR [rbp-0x20]
  41064e:	cmp    rax,QWORD PTR [rbp-0x50]
  410652:	je     410733 <_start@@Base+0xb5d3>
  410658:	mov    DWORD PTR [rbp-0x30],0x0
  41065f:	mov    rax,QWORD PTR [rbp-0x50]
  410663:	mov    QWORD PTR [rbp-0x20],rax
  410667:	lea    rcx,[rbp-0x30]
  41066b:	mov    rdx,QWORD PTR [rbp-0x58]
  41066f:	mov    rsi,QWORD PTR [rbp-0x20]
  410673:	mov    rax,QWORD PTR [rbp-0x48]
  410677:	mov    rdi,rax
  41067a:	call   4066e1 <_start@@Base+0x1581>
  41067f:	mov    QWORD PTR [rbp-0x50],rax
  410683:	mov    rax,QWORD PTR [rbp-0x20]
  410687:	cmp    rax,QWORD PTR [rbp-0x50]
  41068b:	jne    4106d7 <_start@@Base+0xb577>
  41068d:	mov    rax,QWORD PTR [rbp-0x50]
  410691:	mov    QWORD PTR [rbp-0x20],rax
  410695:	lea    rcx,[rbp-0x30]
  410699:	mov    rdx,QWORD PTR [rbp-0x58]
  41069d:	mov    rsi,QWORD PTR [rbp-0x20]
  4106a1:	mov    rax,QWORD PTR [rbp-0x48]
  4106a5:	mov    r8,rcx
  4106a8:	lea    rcx,[rip+0x33f91]        # 444640 <__data_start@@Base+0x580>
  4106af:	mov    rdi,rax
  4106b2:	call   4070ed <_start@@Base+0x1f8d>
  4106b7:	mov    QWORD PTR [rbp-0x50],rax
  4106bb:	mov    rax,QWORD PTR [rbp-0x50]
  4106bf:	cmp    rax,QWORD PTR [rbp-0x20]
  4106c3:	je     411905 <_start@@Base+0xc7a5>
  4106c9:	mov    rax,QWORD PTR [rbp-0x50]
  4106cd:	cmp    rax,QWORD PTR [rbp-0x58]
  4106d1:	je     411905 <_start@@Base+0xc7a5>
  4106d7:	mov    eax,DWORD PTR [rbp-0x30]
  4106da:	test   eax,eax
  4106dc:	jne    4106f0 <_start@@Base+0xb590>
  4106de:	mov    rax,QWORD PTR [rbp-0x48]
  4106e2:	mov    eax,DWORD PTR [rax+0x10]
  4106e5:	and    eax,0x2
  4106e8:	test   eax,eax
  4106ea:	je     4117cc <_start@@Base+0xc66c>
  4106f0:	mov    rax,QWORD PTR [rbp-0x48]
  4106f4:	mov    rax,QWORD PTR [rax]
  4106f7:	mov    ecx,0x4
  4106fc:	mov    edx,0x4
  410701:	mov    esi,0x14
  410706:	mov    rdi,rax
  410709:	call   41ee2d <flatcc_builder_table_add@@Base>
  41070e:	mov    QWORD PTR [rbp-0x10],rax
  410712:	cmp    QWORD PTR [rbp-0x10],0x0
  410717:	je     4118d4 <_start@@Base+0xc774>
  41071d:	mov    edx,DWORD PTR [rbp-0x30]
  410720:	mov    rax,QWORD PTR [rbp-0x10]
  410724:	mov    esi,edx
  410726:	mov    rdi,rax
  410729:	call   4053b7 <_start@@Base+0x257>
  41072e:	jmp    4117cc <_start@@Base+0xc66c>
  410733:	mov    rdx,QWORD PTR [rbp-0x58]
  410737:	mov    rcx,QWORD PTR [rbp-0x50]
  41073b:	mov    rax,QWORD PTR [rbp-0x48]
  41073f:	mov    rsi,rcx
  410742:	mov    rdi,rax
  410745:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41074a:	mov    QWORD PTR [rbp-0x50],rax
  41074e:	jmp    4117cc <_start@@Base+0xc66c>
  410753:	mov    rdx,QWORD PTR [rbp-0x58]
  410757:	mov    rcx,QWORD PTR [rbp-0x50]
  41075b:	mov    rax,QWORD PTR [rbp-0x48]
  41075f:	mov    rsi,rcx
  410762:	mov    rdi,rax
  410765:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41076a:	mov    QWORD PTR [rbp-0x50],rax
  41076e:	jmp    4117cc <_start@@Base+0xc66c>
  410773:	mov    rdx,QWORD PTR [rbp-0x58]
  410777:	mov    rcx,QWORD PTR [rbp-0x50]
  41077b:	mov    rax,QWORD PTR [rbp-0x48]
  41077f:	mov    rsi,rcx
  410782:	mov    rdi,rax
  410785:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41078a:	mov    QWORD PTR [rbp-0x50],rax
  41078e:	jmp    4117cc <_start@@Base+0xc66c>
  410793:	movabs rax,0x7533325f666e7630
  41079d:	cmp    QWORD PTR [rbp-0x28],rax
  4107a1:	ja     410a81 <_start@@Base+0xb921>
  4107a7:	movabs rax,0x7336345f666e7631
  4107b1:	cmp    QWORD PTR [rbp-0x28],rax
  4107b5:	jne    410a61 <_start@@Base+0xb901>
  4107bb:	mov    rax,QWORD PTR [rbp-0x50]
  4107bf:	mov    QWORD PTR [rbp-0x20],rax
  4107c3:	mov    rdx,QWORD PTR [rbp-0x58]
  4107c7:	mov    rsi,QWORD PTR [rbp-0x20]
  4107cb:	mov    rax,QWORD PTR [rbp-0x48]
  4107cf:	mov    ecx,0x8
  4107d4:	mov    rdi,rax
  4107d7:	call   405c48 <_start@@Base+0xae8>
  4107dc:	mov    QWORD PTR [rbp-0x50],rax
  4107e0:	mov    rax,QWORD PTR [rbp-0x20]
  4107e4:	cmp    rax,QWORD PTR [rbp-0x50]
  4107e8:	je     4108ce <_start@@Base+0xb76e>
  4107ee:	mov    QWORD PTR [rbp-0x30],0x0
  4107f6:	mov    rax,QWORD PTR [rbp-0x50]
  4107fa:	mov    QWORD PTR [rbp-0x20],rax
  4107fe:	lea    rcx,[rbp-0x30]
  410802:	mov    rdx,QWORD PTR [rbp-0x58]
  410806:	mov    rsi,QWORD PTR [rbp-0x20]
  41080a:	mov    rax,QWORD PTR [rbp-0x48]
  41080e:	mov    rdi,rax
  410811:	call   40661a <_start@@Base+0x14ba>
  410816:	mov    QWORD PTR [rbp-0x50],rax
  41081a:	mov    rax,QWORD PTR [rbp-0x20]
  41081e:	cmp    rax,QWORD PTR [rbp-0x50]
  410822:	jne    41086e <_start@@Base+0xb70e>
  410824:	mov    rax,QWORD PTR [rbp-0x50]
  410828:	mov    QWORD PTR [rbp-0x20],rax
  41082c:	lea    rcx,[rbp-0x30]
  410830:	mov    rdx,QWORD PTR [rbp-0x58]
  410834:	mov    rsi,QWORD PTR [rbp-0x20]
  410838:	mov    rax,QWORD PTR [rbp-0x48]
  41083c:	mov    r8,rcx
  41083f:	lea    rcx,[rip+0x33e1a]        # 444660 <__data_start@@Base+0x5a0>
  410846:	mov    rdi,rax
  410849:	call   406f8e <_start@@Base+0x1e2e>
  41084e:	mov    QWORD PTR [rbp-0x50],rax
  410852:	mov    rax,QWORD PTR [rbp-0x50]
  410856:	cmp    rax,QWORD PTR [rbp-0x20]
  41085a:	je     411905 <_start@@Base+0xc7a5>
  410860:	mov    rax,QWORD PTR [rbp-0x50]
  410864:	cmp    rax,QWORD PTR [rbp-0x58]
  410868:	je     411905 <_start@@Base+0xc7a5>
  41086e:	mov    rax,QWORD PTR [rbp-0x30]
  410872:	test   rax,rax
  410875:	jne    410889 <_start@@Base+0xb729>
  410877:	mov    rax,QWORD PTR [rbp-0x48]
  41087b:	mov    eax,DWORD PTR [rax+0x10]
  41087e:	and    eax,0x2
  410881:	test   eax,eax
  410883:	je     4117cc <_start@@Base+0xc66c>
  410889:	mov    rax,QWORD PTR [rbp-0x48]
  41088d:	mov    rax,QWORD PTR [rax]
  410890:	mov    ecx,0x8
  410895:	mov    edx,0x8
  41089a:	mov    esi,0x12
  41089f:	mov    rdi,rax
  4108a2:	call   41ee2d <flatcc_builder_table_add@@Base>
  4108a7:	mov    QWORD PTR [rbp-0x10],rax
  4108ab:	cmp    QWORD PTR [rbp-0x10],0x0
  4108b0:	je     4118d7 <_start@@Base+0xc777>
  4108b6:	mov    rdx,QWORD PTR [rbp-0x30]
  4108ba:	mov    rax,QWORD PTR [rbp-0x10]
  4108be:	mov    rsi,rdx
  4108c1:	mov    rdi,rax
  4108c4:	call   4053e9 <_start@@Base+0x289>
  4108c9:	jmp    4117cc <_start@@Base+0xc66c>
  4108ce:	add    QWORD PTR [rbp-0x50],0x8
  4108d3:	mov    rdx,QWORD PTR [rbp-0x58]
  4108d7:	mov    rax,QWORD PTR [rbp-0x50]
  4108db:	mov    rsi,rdx
  4108de:	mov    rdi,rax
  4108e1:	call   405756 <_start@@Base+0x5f6>
  4108e6:	mov    QWORD PTR [rbp-0x28],rax
  4108ea:	movabs rax,0xff00000000000000
  4108f4:	and    rax,QWORD PTR [rbp-0x28]
  4108f8:	mov    rdx,rax
  4108fb:	movabs rax,0x6100000000000000
  410905:	cmp    rdx,rax
  410908:	jne    410a41 <_start@@Base+0xb8e1>
  41090e:	mov    rax,QWORD PTR [rbp-0x50]
  410912:	mov    QWORD PTR [rbp-0x20],rax
  410916:	mov    rdx,QWORD PTR [rbp-0x58]
  41091a:	mov    rsi,QWORD PTR [rbp-0x20]
  41091e:	mov    rax,QWORD PTR [rbp-0x48]
  410922:	mov    ecx,0x1
  410927:	mov    rdi,rax
  41092a:	call   405c48 <_start@@Base+0xae8>
  41092f:	mov    QWORD PTR [rbp-0x50],rax
  410933:	mov    rax,QWORD PTR [rbp-0x20]
  410937:	cmp    rax,QWORD PTR [rbp-0x50]
  41093b:	je     410a21 <_start@@Base+0xb8c1>
  410941:	mov    QWORD PTR [rbp-0x30],0x0
  410949:	mov    rax,QWORD PTR [rbp-0x50]
  41094d:	mov    QWORD PTR [rbp-0x20],rax
  410951:	lea    rcx,[rbp-0x30]
  410955:	mov    rdx,QWORD PTR [rbp-0x58]
  410959:	mov    rsi,QWORD PTR [rbp-0x20]
  41095d:	mov    rax,QWORD PTR [rbp-0x48]
  410961:	mov    rdi,rax
  410964:	call   40661a <_start@@Base+0x14ba>
  410969:	mov    QWORD PTR [rbp-0x50],rax
  41096d:	mov    rax,QWORD PTR [rbp-0x20]
  410971:	cmp    rax,QWORD PTR [rbp-0x50]
  410975:	jne    4109c1 <_start@@Base+0xb861>
  410977:	mov    rax,QWORD PTR [rbp-0x50]
  41097b:	mov    QWORD PTR [rbp-0x20],rax
  41097f:	lea    rcx,[rbp-0x30]
  410983:	mov    rdx,QWORD PTR [rbp-0x58]
  410987:	mov    rsi,QWORD PTR [rbp-0x20]
  41098b:	mov    rax,QWORD PTR [rbp-0x48]
  41098f:	mov    r8,rcx
  410992:	lea    rcx,[rip+0x33ce7]        # 444680 <__data_start@@Base+0x5c0>
  410999:	mov    rdi,rax
  41099c:	call   406f8e <_start@@Base+0x1e2e>
  4109a1:	mov    QWORD PTR [rbp-0x50],rax
  4109a5:	mov    rax,QWORD PTR [rbp-0x50]
  4109a9:	cmp    rax,QWORD PTR [rbp-0x20]
  4109ad:	je     411905 <_start@@Base+0xc7a5>
  4109b3:	mov    rax,QWORD PTR [rbp-0x50]
  4109b7:	cmp    rax,QWORD PTR [rbp-0x58]
  4109bb:	je     411905 <_start@@Base+0xc7a5>
  4109c1:	mov    rax,QWORD PTR [rbp-0x30]
  4109c5:	test   rax,rax
  4109c8:	jne    4109dc <_start@@Base+0xb87c>
  4109ca:	mov    rax,QWORD PTR [rbp-0x48]
  4109ce:	mov    eax,DWORD PTR [rax+0x10]
  4109d1:	and    eax,0x2
  4109d4:	test   eax,eax
  4109d6:	je     4117cc <_start@@Base+0xc66c>
  4109dc:	mov    rax,QWORD PTR [rbp-0x48]
  4109e0:	mov    rax,QWORD PTR [rax]
  4109e3:	mov    ecx,0x8
  4109e8:	mov    edx,0x8
  4109ed:	mov    esi,0x16
  4109f2:	mov    rdi,rax
  4109f5:	call   41ee2d <flatcc_builder_table_add@@Base>
  4109fa:	mov    QWORD PTR [rbp-0x10],rax
  4109fe:	cmp    QWORD PTR [rbp-0x10],0x0
  410a03:	je     4118da <_start@@Base+0xc77a>
  410a09:	mov    rdx,QWORD PTR [rbp-0x30]
  410a0d:	mov    rax,QWORD PTR [rbp-0x10]
  410a11:	mov    rsi,rdx
  410a14:	mov    rdi,rax
  410a17:	call   4053e9 <_start@@Base+0x289>
  410a1c:	jmp    4117cc <_start@@Base+0xc66c>
  410a21:	mov    rdx,QWORD PTR [rbp-0x58]
  410a25:	mov    rcx,QWORD PTR [rbp-0x50]
  410a29:	mov    rax,QWORD PTR [rbp-0x48]
  410a2d:	mov    rsi,rcx
  410a30:	mov    rdi,rax
  410a33:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410a38:	mov    QWORD PTR [rbp-0x50],rax
  410a3c:	jmp    4117cc <_start@@Base+0xc66c>
  410a41:	mov    rdx,QWORD PTR [rbp-0x58]
  410a45:	mov    rcx,QWORD PTR [rbp-0x50]
  410a49:	mov    rax,QWORD PTR [rbp-0x48]
  410a4d:	mov    rsi,rcx
  410a50:	mov    rdi,rax
  410a53:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410a58:	mov    QWORD PTR [rbp-0x50],rax
  410a5c:	jmp    4117cc <_start@@Base+0xc66c>
  410a61:	mov    rdx,QWORD PTR [rbp-0x58]
  410a65:	mov    rcx,QWORD PTR [rbp-0x50]
  410a69:	mov    rax,QWORD PTR [rbp-0x48]
  410a6d:	mov    rsi,rcx
  410a70:	mov    rdi,rax
  410a73:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410a78:	mov    QWORD PTR [rbp-0x50],rax
  410a7c:	jmp    4117cc <_start@@Base+0xc66c>
  410a81:	movabs rax,0x7533325f666e7631
  410a8b:	cmp    QWORD PTR [rbp-0x28],rax
  410a8f:	jne    410d31 <_start@@Base+0xbbd1>
  410a95:	mov    rax,QWORD PTR [rbp-0x50]
  410a99:	mov    QWORD PTR [rbp-0x20],rax
  410a9d:	mov    rdx,QWORD PTR [rbp-0x58]
  410aa1:	mov    rsi,QWORD PTR [rbp-0x20]
  410aa5:	mov    rax,QWORD PTR [rbp-0x48]
  410aa9:	mov    ecx,0x8
  410aae:	mov    rdi,rax
  410ab1:	call   405c48 <_start@@Base+0xae8>
  410ab6:	mov    QWORD PTR [rbp-0x50],rax
  410aba:	mov    rax,QWORD PTR [rbp-0x20]
  410abe:	cmp    rax,QWORD PTR [rbp-0x50]
  410ac2:	je     410ba3 <_start@@Base+0xba43>
  410ac8:	mov    DWORD PTR [rbp-0x30],0x0
  410acf:	mov    rax,QWORD PTR [rbp-0x50]
  410ad3:	mov    QWORD PTR [rbp-0x20],rax
  410ad7:	lea    rcx,[rbp-0x30]
  410adb:	mov    rdx,QWORD PTR [rbp-0x58]
  410adf:	mov    rsi,QWORD PTR [rbp-0x20]
  410ae3:	mov    rax,QWORD PTR [rbp-0x48]
  410ae7:	mov    rdi,rax
  410aea:	call   4063cc <_start@@Base+0x126c>
  410aef:	mov    QWORD PTR [rbp-0x50],rax
  410af3:	mov    rax,QWORD PTR [rbp-0x20]
  410af7:	cmp    rax,QWORD PTR [rbp-0x50]
  410afb:	jne    410b47 <_start@@Base+0xb9e7>
  410afd:	mov    rax,QWORD PTR [rbp-0x50]
  410b01:	mov    QWORD PTR [rbp-0x20],rax
  410b05:	lea    rcx,[rbp-0x30]
  410b09:	mov    rdx,QWORD PTR [rbp-0x58]
  410b0d:	mov    rsi,QWORD PTR [rbp-0x20]
  410b11:	mov    rax,QWORD PTR [rbp-0x48]
  410b15:	mov    r8,rcx
  410b18:	lea    rcx,[rip+0x33b81]        # 4446a0 <__data_start@@Base+0x5e0>
  410b1f:	mov    rdi,rax
  410b22:	call   406b86 <_start@@Base+0x1a26>
  410b27:	mov    QWORD PTR [rbp-0x50],rax
  410b2b:	mov    rax,QWORD PTR [rbp-0x50]
  410b2f:	cmp    rax,QWORD PTR [rbp-0x20]
  410b33:	je     411905 <_start@@Base+0xc7a5>
  410b39:	mov    rax,QWORD PTR [rbp-0x50]
  410b3d:	cmp    rax,QWORD PTR [rbp-0x58]
  410b41:	je     411905 <_start@@Base+0xc7a5>
  410b47:	mov    eax,DWORD PTR [rbp-0x30]
  410b4a:	test   eax,eax
  410b4c:	jne    410b60 <_start@@Base+0xba00>
  410b4e:	mov    rax,QWORD PTR [rbp-0x48]
  410b52:	mov    eax,DWORD PTR [rax+0x10]
  410b55:	and    eax,0x2
  410b58:	test   eax,eax
  410b5a:	je     4117cc <_start@@Base+0xc66c>
  410b60:	mov    rax,QWORD PTR [rbp-0x48]
  410b64:	mov    rax,QWORD PTR [rax]
  410b67:	mov    ecx,0x4
  410b6c:	mov    edx,0x4
  410b71:	mov    esi,0x11
  410b76:	mov    rdi,rax
  410b79:	call   41ee2d <flatcc_builder_table_add@@Base>
  410b7e:	mov    QWORD PTR [rbp-0x10],rax
  410b82:	cmp    QWORD PTR [rbp-0x10],0x0
  410b87:	je     4118dd <_start@@Base+0xc77d>
  410b8d:	mov    edx,DWORD PTR [rbp-0x30]
  410b90:	mov    rax,QWORD PTR [rbp-0x10]
  410b94:	mov    esi,edx
  410b96:	mov    rdi,rax
  410b99:	call   4052e1 <_start@@Base+0x181>
  410b9e:	jmp    4117cc <_start@@Base+0xc66c>
  410ba3:	add    QWORD PTR [rbp-0x50],0x8
  410ba8:	mov    rdx,QWORD PTR [rbp-0x58]
  410bac:	mov    rax,QWORD PTR [rbp-0x50]
  410bb0:	mov    rsi,rdx
  410bb3:	mov    rdi,rax
  410bb6:	call   405756 <_start@@Base+0x5f6>
  410bbb:	mov    QWORD PTR [rbp-0x28],rax
  410bbf:	movabs rax,0xff00000000000000
  410bc9:	and    rax,QWORD PTR [rbp-0x28]
  410bcd:	mov    rdx,rax
  410bd0:	movabs rax,0x6100000000000000
  410bda:	cmp    rdx,rax
  410bdd:	jne    410d11 <_start@@Base+0xbbb1>
  410be3:	mov    rax,QWORD PTR [rbp-0x50]
  410be7:	mov    QWORD PTR [rbp-0x20],rax
  410beb:	mov    rdx,QWORD PTR [rbp-0x58]
  410bef:	mov    rsi,QWORD PTR [rbp-0x20]
  410bf3:	mov    rax,QWORD PTR [rbp-0x48]
  410bf7:	mov    ecx,0x1
  410bfc:	mov    rdi,rax
  410bff:	call   405c48 <_start@@Base+0xae8>
  410c04:	mov    QWORD PTR [rbp-0x50],rax
  410c08:	mov    rax,QWORD PTR [rbp-0x20]
  410c0c:	cmp    rax,QWORD PTR [rbp-0x50]
  410c10:	je     410cf1 <_start@@Base+0xbb91>
  410c16:	mov    DWORD PTR [rbp-0x30],0x0
  410c1d:	mov    rax,QWORD PTR [rbp-0x50]
  410c21:	mov    QWORD PTR [rbp-0x20],rax
  410c25:	lea    rcx,[rbp-0x30]
  410c29:	mov    rdx,QWORD PTR [rbp-0x58]
  410c2d:	mov    rsi,QWORD PTR [rbp-0x20]
  410c31:	mov    rax,QWORD PTR [rbp-0x48]
  410c35:	mov    rdi,rax
  410c38:	call   4063cc <_start@@Base+0x126c>
  410c3d:	mov    QWORD PTR [rbp-0x50],rax
  410c41:	mov    rax,QWORD PTR [rbp-0x20]
  410c45:	cmp    rax,QWORD PTR [rbp-0x50]
  410c49:	jne    410c95 <_start@@Base+0xbb35>
  410c4b:	mov    rax,QWORD PTR [rbp-0x50]
  410c4f:	mov    QWORD PTR [rbp-0x20],rax
  410c53:	lea    rcx,[rbp-0x30]
  410c57:	mov    rdx,QWORD PTR [rbp-0x58]
  410c5b:	mov    rsi,QWORD PTR [rbp-0x20]
  410c5f:	mov    rax,QWORD PTR [rbp-0x48]
  410c63:	mov    r8,rcx
  410c66:	lea    rcx,[rip+0x33a53]        # 4446c0 <__data_start@@Base+0x600>
  410c6d:	mov    rdi,rax
  410c70:	call   406b86 <_start@@Base+0x1a26>
  410c75:	mov    QWORD PTR [rbp-0x50],rax
  410c79:	mov    rax,QWORD PTR [rbp-0x50]
  410c7d:	cmp    rax,QWORD PTR [rbp-0x20]
  410c81:	je     411905 <_start@@Base+0xc7a5>
  410c87:	mov    rax,QWORD PTR [rbp-0x50]
  410c8b:	cmp    rax,QWORD PTR [rbp-0x58]
  410c8f:	je     411905 <_start@@Base+0xc7a5>
  410c95:	mov    eax,DWORD PTR [rbp-0x30]
  410c98:	test   eax,eax
  410c9a:	jne    410cae <_start@@Base+0xbb4e>
  410c9c:	mov    rax,QWORD PTR [rbp-0x48]
  410ca0:	mov    eax,DWORD PTR [rax+0x10]
  410ca3:	and    eax,0x2
  410ca6:	test   eax,eax
  410ca8:	je     4117cc <_start@@Base+0xc66c>
  410cae:	mov    rax,QWORD PTR [rbp-0x48]
  410cb2:	mov    rax,QWORD PTR [rax]
  410cb5:	mov    ecx,0x4
  410cba:	mov    edx,0x4
  410cbf:	mov    esi,0x15
  410cc4:	mov    rdi,rax
  410cc7:	call   41ee2d <flatcc_builder_table_add@@Base>
  410ccc:	mov    QWORD PTR [rbp-0x10],rax
  410cd0:	cmp    QWORD PTR [rbp-0x10],0x0
  410cd5:	je     4118e0 <_start@@Base+0xc780>
  410cdb:	mov    edx,DWORD PTR [rbp-0x30]
  410cde:	mov    rax,QWORD PTR [rbp-0x10]
  410ce2:	mov    esi,edx
  410ce4:	mov    rdi,rax
  410ce7:	call   4052e1 <_start@@Base+0x181>
  410cec:	jmp    4117cc <_start@@Base+0xc66c>
  410cf1:	mov    rdx,QWORD PTR [rbp-0x58]
  410cf5:	mov    rcx,QWORD PTR [rbp-0x50]
  410cf9:	mov    rax,QWORD PTR [rbp-0x48]
  410cfd:	mov    rsi,rcx
  410d00:	mov    rdi,rax
  410d03:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410d08:	mov    QWORD PTR [rbp-0x50],rax
  410d0c:	jmp    4117cc <_start@@Base+0xc66c>
  410d11:	mov    rdx,QWORD PTR [rbp-0x58]
  410d15:	mov    rcx,QWORD PTR [rbp-0x50]
  410d19:	mov    rax,QWORD PTR [rbp-0x48]
  410d1d:	mov    rsi,rcx
  410d20:	mov    rdi,rax
  410d23:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410d28:	mov    QWORD PTR [rbp-0x50],rax
  410d2c:	jmp    4117cc <_start@@Base+0xc66c>
  410d31:	movabs rax,0x7536345f666e7631
  410d3b:	cmp    QWORD PTR [rbp-0x28],rax
  410d3f:	jne    410feb <_start@@Base+0xbe8b>
  410d45:	mov    rax,QWORD PTR [rbp-0x50]
  410d49:	mov    QWORD PTR [rbp-0x20],rax
  410d4d:	mov    rdx,QWORD PTR [rbp-0x58]
  410d51:	mov    rsi,QWORD PTR [rbp-0x20]
  410d55:	mov    rax,QWORD PTR [rbp-0x48]
  410d59:	mov    ecx,0x8
  410d5e:	mov    rdi,rax
  410d61:	call   405c48 <_start@@Base+0xae8>
  410d66:	mov    QWORD PTR [rbp-0x50],rax
  410d6a:	mov    rax,QWORD PTR [rbp-0x20]
  410d6e:	cmp    rax,QWORD PTR [rbp-0x50]
  410d72:	je     410e58 <_start@@Base+0xbcf8>
  410d78:	mov    QWORD PTR [rbp-0x30],0x0
  410d80:	mov    rax,QWORD PTR [rbp-0x50]
  410d84:	mov    QWORD PTR [rbp-0x20],rax
  410d88:	lea    rcx,[rbp-0x30]
  410d8c:	mov    rdx,QWORD PTR [rbp-0x58]
  410d90:	mov    rsi,QWORD PTR [rbp-0x20]
  410d94:	mov    rax,QWORD PTR [rbp-0x48]
  410d98:	mov    rdi,rax
  410d9b:	call   406305 <_start@@Base+0x11a5>
  410da0:	mov    QWORD PTR [rbp-0x50],rax
  410da4:	mov    rax,QWORD PTR [rbp-0x20]
  410da8:	cmp    rax,QWORD PTR [rbp-0x50]
  410dac:	jne    410df8 <_start@@Base+0xbc98>
  410dae:	mov    rax,QWORD PTR [rbp-0x50]
  410db2:	mov    QWORD PTR [rbp-0x20],rax
  410db6:	lea    rcx,[rbp-0x30]
  410dba:	mov    rdx,QWORD PTR [rbp-0x58]
  410dbe:	mov    rsi,QWORD PTR [rbp-0x20]
  410dc2:	mov    rax,QWORD PTR [rbp-0x48]
  410dc6:	mov    r8,rcx
  410dc9:	lea    rcx,[rip+0x33910]        # 4446e0 <__data_start@@Base+0x620>
  410dd0:	mov    rdi,rax
  410dd3:	call   406a27 <_start@@Base+0x18c7>
  410dd8:	mov    QWORD PTR [rbp-0x50],rax
  410ddc:	mov    rax,QWORD PTR [rbp-0x50]
  410de0:	cmp    rax,QWORD PTR [rbp-0x20]
  410de4:	je     411905 <_start@@Base+0xc7a5>
  410dea:	mov    rax,QWORD PTR [rbp-0x50]
  410dee:	cmp    rax,QWORD PTR [rbp-0x58]
  410df2:	je     411905 <_start@@Base+0xc7a5>
  410df8:	mov    rax,QWORD PTR [rbp-0x30]
  410dfc:	test   rax,rax
  410dff:	jne    410e13 <_start@@Base+0xbcb3>
  410e01:	mov    rax,QWORD PTR [rbp-0x48]
  410e05:	mov    eax,DWORD PTR [rax+0x10]
  410e08:	and    eax,0x2
  410e0b:	test   eax,eax
  410e0d:	je     4117cc <_start@@Base+0xc66c>
  410e13:	mov    rax,QWORD PTR [rbp-0x48]
  410e17:	mov    rax,QWORD PTR [rax]
  410e1a:	mov    ecx,0x8
  410e1f:	mov    edx,0x8
  410e24:	mov    esi,0x13
  410e29:	mov    rdi,rax
  410e2c:	call   41ee2d <flatcc_builder_table_add@@Base>
  410e31:	mov    QWORD PTR [rbp-0x10],rax
  410e35:	cmp    QWORD PTR [rbp-0x10],0x0
  410e3a:	je     4118e3 <_start@@Base+0xc783>
  410e40:	mov    rdx,QWORD PTR [rbp-0x30]
  410e44:	mov    rax,QWORD PTR [rbp-0x10]
  410e48:	mov    rsi,rdx
  410e4b:	mov    rdi,rax
  410e4e:	call   405313 <_start@@Base+0x1b3>
  410e53:	jmp    4117cc <_start@@Base+0xc66c>
  410e58:	add    QWORD PTR [rbp-0x50],0x8
  410e5d:	mov    rdx,QWORD PTR [rbp-0x58]
  410e61:	mov    rax,QWORD PTR [rbp-0x50]
  410e65:	mov    rsi,rdx
  410e68:	mov    rdi,rax
  410e6b:	call   405756 <_start@@Base+0x5f6>
  410e70:	mov    QWORD PTR [rbp-0x28],rax
  410e74:	movabs rax,0xff00000000000000
  410e7e:	and    rax,QWORD PTR [rbp-0x28]
  410e82:	mov    rdx,rax
  410e85:	movabs rax,0x6100000000000000
  410e8f:	cmp    rdx,rax
  410e92:	jne    410fcb <_start@@Base+0xbe6b>
  410e98:	mov    rax,QWORD PTR [rbp-0x50]
  410e9c:	mov    QWORD PTR [rbp-0x20],rax
  410ea0:	mov    rdx,QWORD PTR [rbp-0x58]
  410ea4:	mov    rsi,QWORD PTR [rbp-0x20]
  410ea8:	mov    rax,QWORD PTR [rbp-0x48]
  410eac:	mov    ecx,0x1
  410eb1:	mov    rdi,rax
  410eb4:	call   405c48 <_start@@Base+0xae8>
  410eb9:	mov    QWORD PTR [rbp-0x50],rax
  410ebd:	mov    rax,QWORD PTR [rbp-0x20]
  410ec1:	cmp    rax,QWORD PTR [rbp-0x50]
  410ec5:	je     410fab <_start@@Base+0xbe4b>
  410ecb:	mov    QWORD PTR [rbp-0x30],0x0
  410ed3:	mov    rax,QWORD PTR [rbp-0x50]
  410ed7:	mov    QWORD PTR [rbp-0x20],rax
  410edb:	lea    rcx,[rbp-0x30]
  410edf:	mov    rdx,QWORD PTR [rbp-0x58]
  410ee3:	mov    rsi,QWORD PTR [rbp-0x20]
  410ee7:	mov    rax,QWORD PTR [rbp-0x48]
  410eeb:	mov    rdi,rax
  410eee:	call   406305 <_start@@Base+0x11a5>
  410ef3:	mov    QWORD PTR [rbp-0x50],rax
  410ef7:	mov    rax,QWORD PTR [rbp-0x20]
  410efb:	cmp    rax,QWORD PTR [rbp-0x50]
  410eff:	jne    410f4b <_start@@Base+0xbdeb>
  410f01:	mov    rax,QWORD PTR [rbp-0x50]
  410f05:	mov    QWORD PTR [rbp-0x20],rax
  410f09:	lea    rcx,[rbp-0x30]
  410f0d:	mov    rdx,QWORD PTR [rbp-0x58]
  410f11:	mov    rsi,QWORD PTR [rbp-0x20]
  410f15:	mov    rax,QWORD PTR [rbp-0x48]
  410f19:	mov    r8,rcx
  410f1c:	lea    rcx,[rip+0x337dd]        # 444700 <__data_start@@Base+0x640>
  410f23:	mov    rdi,rax
  410f26:	call   406a27 <_start@@Base+0x18c7>
  410f2b:	mov    QWORD PTR [rbp-0x50],rax
  410f2f:	mov    rax,QWORD PTR [rbp-0x50]
  410f33:	cmp    rax,QWORD PTR [rbp-0x20]
  410f37:	je     411905 <_start@@Base+0xc7a5>
  410f3d:	mov    rax,QWORD PTR [rbp-0x50]
  410f41:	cmp    rax,QWORD PTR [rbp-0x58]
  410f45:	je     411905 <_start@@Base+0xc7a5>
  410f4b:	mov    rax,QWORD PTR [rbp-0x30]
  410f4f:	test   rax,rax
  410f52:	jne    410f66 <_start@@Base+0xbe06>
  410f54:	mov    rax,QWORD PTR [rbp-0x48]
  410f58:	mov    eax,DWORD PTR [rax+0x10]
  410f5b:	and    eax,0x2
  410f5e:	test   eax,eax
  410f60:	je     4117cc <_start@@Base+0xc66c>
  410f66:	mov    rax,QWORD PTR [rbp-0x48]
  410f6a:	mov    rax,QWORD PTR [rax]
  410f6d:	mov    ecx,0x8
  410f72:	mov    edx,0x8
  410f77:	mov    esi,0x17
  410f7c:	mov    rdi,rax
  410f7f:	call   41ee2d <flatcc_builder_table_add@@Base>
  410f84:	mov    QWORD PTR [rbp-0x10],rax
  410f88:	cmp    QWORD PTR [rbp-0x10],0x0
  410f8d:	je     4118e6 <_start@@Base+0xc786>
  410f93:	mov    rdx,QWORD PTR [rbp-0x30]
  410f97:	mov    rax,QWORD PTR [rbp-0x10]
  410f9b:	mov    rsi,rdx
  410f9e:	mov    rdi,rax
  410fa1:	call   405313 <_start@@Base+0x1b3>
  410fa6:	jmp    4117cc <_start@@Base+0xc66c>
  410fab:	mov    rdx,QWORD PTR [rbp-0x58]
  410faf:	mov    rcx,QWORD PTR [rbp-0x50]
  410fb3:	mov    rax,QWORD PTR [rbp-0x48]
  410fb7:	mov    rsi,rcx
  410fba:	mov    rdi,rax
  410fbd:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410fc2:	mov    QWORD PTR [rbp-0x50],rax
  410fc6:	jmp    4117cc <_start@@Base+0xc66c>
  410fcb:	mov    rdx,QWORD PTR [rbp-0x58]
  410fcf:	mov    rcx,QWORD PTR [rbp-0x50]
  410fd3:	mov    rax,QWORD PTR [rbp-0x48]
  410fd7:	mov    rsi,rcx
  410fda:	mov    rdi,rax
  410fdd:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  410fe2:	mov    QWORD PTR [rbp-0x50],rax
  410fe6:	jmp    4117cc <_start@@Base+0xc66c>
  410feb:	mov    rdx,QWORD PTR [rbp-0x58]
  410fef:	mov    rcx,QWORD PTR [rbp-0x50]
  410ff3:	mov    rax,QWORD PTR [rbp-0x48]
  410ff7:	mov    rsi,rcx
  410ffa:	mov    rdi,rax
  410ffd:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411002:	mov    QWORD PTR [rbp-0x50],rax
  411006:	jmp    4117cc <_start@@Base+0xc66c>
  41100b:	movabs rax,0x766563746f725f6e
  411015:	cmp    QWORD PTR [rbp-0x28],rax
  411019:	ja     411349 <_start@@Base+0xc1e9>
  41101f:	movabs rax,0x746573746e657374
  411029:	cmp    QWORD PTR [rbp-0x28],rax
  41102d:	jne    411329 <_start@@Base+0xc1c9>
  411033:	add    QWORD PTR [rbp-0x50],0x8
  411038:	mov    rdx,QWORD PTR [rbp-0x58]
  41103c:	mov    rax,QWORD PTR [rbp-0x50]
  411040:	mov    rsi,rdx
  411043:	mov    rdi,rax
  411046:	call   405756 <_start@@Base+0x5f6>
  41104b:	mov    QWORD PTR [rbp-0x28],rax
  41104f:	movabs rax,0x6564666c61746275
  411059:	cmp    QWORD PTR [rbp-0x28],rax
  41105d:	jne    411309 <_start@@Base+0xc1a9>
  411063:	add    QWORD PTR [rbp-0x50],0x8
  411068:	mov    rdx,QWORD PTR [rbp-0x58]
  41106c:	mov    rax,QWORD PTR [rbp-0x50]
  411070:	mov    rsi,rdx
  411073:	mov    rdi,rax
  411076:	call   405756 <_start@@Base+0x5f6>
  41107b:	mov    QWORD PTR [rbp-0x28],rax
  41107f:	movabs rax,0xffffffff00000000
  411089:	and    rax,QWORD PTR [rbp-0x28]
  41108d:	mov    rdx,rax
  411090:	movabs rax,0x6666657200000000
  41109a:	cmp    rdx,rax
  41109d:	jne    4112e9 <_start@@Base+0xc189>
  4110a3:	mov    rax,QWORD PTR [rbp-0x50]
  4110a7:	mov    QWORD PTR [rbp-0x20],rax
  4110ab:	mov    rdx,QWORD PTR [rbp-0x58]
  4110af:	mov    rsi,QWORD PTR [rbp-0x20]
  4110b3:	mov    rax,QWORD PTR [rbp-0x48]
  4110b7:	mov    ecx,0x4
  4110bc:	mov    rdi,rax
  4110bf:	call   405c48 <_start@@Base+0xae8>
  4110c4:	mov    QWORD PTR [rbp-0x50],rax
  4110c8:	mov    rax,QWORD PTR [rbp-0x20]
  4110cc:	cmp    rax,QWORD PTR [rbp-0x50]
  4110d0:	je     4112c9 <_start@@Base+0xc169>
  4110d6:	mov    rax,QWORD PTR [rbp-0x50]
  4110da:	cmp    rax,QWORD PTR [rbp-0x58]
  4110de:	je     411229 <_start@@Base+0xc0c9>
  4110e4:	mov    rax,QWORD PTR [rbp-0x50]
  4110e8:	movzx  eax,BYTE PTR [rax]
  4110eb:	cmp    al,0x5b
  4110ed:	jne    411229 <_start@@Base+0xc0c9>
  4110f3:	mov    rax,QWORD PTR [rbp-0x48]
  4110f7:	mov    rax,QWORD PTR [rax]
  4110fa:	mov    ecx,0xffffffff
  4110ff:	mov    edx,0x1
  411104:	mov    esi,0x1
  411109:	mov    rdi,rax
  41110c:	call   41ca8f <flatcc_builder_start_vector@@Base>
  411111:	test   eax,eax
  411113:	jne    4118e9 <_start@@Base+0xc789>
  411119:	lea    rcx,[rbp-0x40]
  41111d:	mov    rdx,QWORD PTR [rbp-0x58]
  411121:	mov    rsi,QWORD PTR [rbp-0x50]
  411125:	mov    rax,QWORD PTR [rbp-0x48]
  411129:	mov    rdi,rax
  41112c:	call   405a4d <_start@@Base+0x8ed>
  411131:	mov    QWORD PTR [rbp-0x50],rax
  411135:	jmp    41120a <_start@@Base+0xc0aa>
  41113a:	mov    BYTE PTR [rbp-0x30],0x0
  41113e:	mov    rax,QWORD PTR [rbp-0x48]
  411142:	mov    rax,QWORD PTR [rax]
  411145:	mov    esi,0x1
  41114a:	mov    rdi,rax
  41114d:	call   41c377 <flatcc_builder_extend_vector@@Base>
  411152:	mov    QWORD PTR [rbp-0x10],rax
  411156:	cmp    QWORD PTR [rbp-0x10],0x0
  41115b:	je     4118ec <_start@@Base+0xc78c>
  411161:	mov    rax,QWORD PTR [rbp-0x50]
  411165:	mov    QWORD PTR [rbp-0x20],rax
  411169:	lea    rcx,[rbp-0x30]
  41116d:	mov    rdx,QWORD PTR [rbp-0x58]
  411171:	mov    rsi,QWORD PTR [rbp-0x20]
  411175:	mov    rax,QWORD PTR [rbp-0x48]
  411179:	mov    rdi,rax
  41117c:	call   406557 <_start@@Base+0x13f7>
  411181:	mov    QWORD PTR [rbp-0x50],rax
  411185:	mov    rax,QWORD PTR [rbp-0x20]
  411189:	cmp    rax,QWORD PTR [rbp-0x50]
  41118d:	jne    4111d9 <_start@@Base+0xc079>
  41118f:	mov    rax,QWORD PTR [rbp-0x50]
  411193:	mov    QWORD PTR [rbp-0x20],rax
  411197:	lea    rcx,[rbp-0x30]
  41119b:	mov    rdx,QWORD PTR [rbp-0x58]
  41119f:	mov    rsi,QWORD PTR [rbp-0x20]
  4111a3:	mov    rax,QWORD PTR [rbp-0x48]
  4111a7:	mov    r8,rcx
  4111aa:	lea    rcx,[rip+0x3356f]        # 444720 <__data_start@@Base+0x660>
  4111b1:	mov    rdi,rax
  4111b4:	call   406e39 <_start@@Base+0x1cd9>
  4111b9:	mov    QWORD PTR [rbp-0x50],rax
  4111bd:	mov    rax,QWORD PTR [rbp-0x50]
  4111c1:	cmp    rax,QWORD PTR [rbp-0x20]
  4111c5:	je     4118ec <_start@@Base+0xc78c>
  4111cb:	mov    rax,QWORD PTR [rbp-0x50]
  4111cf:	cmp    rax,QWORD PTR [rbp-0x58]
  4111d3:	je     4118ec <_start@@Base+0xc78c>
  4111d9:	movzx  eax,BYTE PTR [rbp-0x30]
  4111dd:	movzx  edx,al
  4111e0:	mov    rax,QWORD PTR [rbp-0x10]
  4111e4:	mov    esi,edx
  4111e6:	mov    rdi,rax
  4111e9:	call   405275 <_start@@Base+0x115>
  4111ee:	lea    rcx,[rbp-0x40]
  4111f2:	mov    rdx,QWORD PTR [rbp-0x58]
  4111f6:	mov    rsi,QWORD PTR [rbp-0x50]
  4111fa:	mov    rax,QWORD PTR [rbp-0x48]
  4111fe:	mov    rdi,rax
  411201:	call   405b0a <_start@@Base+0x9aa>
  411206:	mov    QWORD PTR [rbp-0x50],rax
  41120a:	mov    eax,DWORD PTR [rbp-0x40]
  41120d:	test   eax,eax
  41120f:	jne    41113a <_start@@Base+0xbfda>
  411215:	mov    rax,QWORD PTR [rbp-0x48]
  411219:	mov    rax,QWORD PTR [rax]
  41121c:	mov    rdi,rax
  41121f:	call   41dc65 <flatcc_builder_end_vector@@Base>
  411224:	mov    DWORD PTR [rbp-0x3c],eax
  411227:	jmp    41128d <_start@@Base+0xc12d>
  411229:	mov    rax,QWORD PTR [rbp-0x48]
  41122d:	mov    rax,QWORD PTR [rax]
  411230:	mov    ecx,0x0
  411235:	mov    edx,0x0
  41123a:	mov    esi,0x0
  41123f:	mov    rdi,rax
  411242:	call   41bf64 <flatcc_builder_start_buffer@@Base>
  411247:	test   eax,eax
  411249:	jne    4118ef <_start@@Base+0xc78f>
  41124f:	lea    rcx,[rbp-0x3c]
  411253:	mov    rdx,QWORD PTR [rbp-0x58]
  411257:	mov    rsi,QWORD PTR [rbp-0x50]
  41125b:	mov    rax,QWORD PTR [rbp-0x48]
  41125f:	mov    rdi,rax
  411262:	call   40e0e4 <_start@@Base+0x8f84>
  411267:	mov    QWORD PTR [rbp-0x50],rax
  41126b:	mov    eax,DWORD PTR [rbp-0x3c]
  41126e:	test   eax,eax
  411270:	je     4118f2 <_start@@Base+0xc792>
  411276:	mov    edx,DWORD PTR [rbp-0x3c]
  411279:	mov    rax,QWORD PTR [rbp-0x48]
  41127d:	mov    rax,QWORD PTR [rax]
  411280:	mov    esi,edx
  411282:	mov    rdi,rax
  411285:	call   41c0ad <flatcc_builder_end_buffer@@Base>
  41128a:	mov    DWORD PTR [rbp-0x3c],eax
  41128d:	mov    eax,DWORD PTR [rbp-0x3c]
  411290:	test   eax,eax
  411292:	je     411905 <_start@@Base+0xc7a5>
  411298:	mov    rax,QWORD PTR [rbp-0x48]
  41129c:	mov    rax,QWORD PTR [rax]
  41129f:	mov    esi,0xd
  4112a4:	mov    rdi,rax
  4112a7:	call   41effb <flatcc_builder_table_add_offset@@Base>
  4112ac:	mov    QWORD PTR [rbp-0x18],rax
  4112b0:	cmp    QWORD PTR [rbp-0x18],0x0
  4112b5:	je     411905 <_start@@Base+0xc7a5>
  4112bb:	mov    edx,DWORD PTR [rbp-0x3c]
  4112be:	mov    rax,QWORD PTR [rbp-0x18]
  4112c2:	mov    DWORD PTR [rax],edx
  4112c4:	jmp    4117cc <_start@@Base+0xc66c>
  4112c9:	mov    rdx,QWORD PTR [rbp-0x58]
  4112cd:	mov    rcx,QWORD PTR [rbp-0x50]
  4112d1:	mov    rax,QWORD PTR [rbp-0x48]
  4112d5:	mov    rsi,rcx
  4112d8:	mov    rdi,rax
  4112db:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4112e0:	mov    QWORD PTR [rbp-0x50],rax
  4112e4:	jmp    4117cc <_start@@Base+0xc66c>
  4112e9:	mov    rdx,QWORD PTR [rbp-0x58]
  4112ed:	mov    rcx,QWORD PTR [rbp-0x50]
  4112f1:	mov    rax,QWORD PTR [rbp-0x48]
  4112f5:	mov    rsi,rcx
  4112f8:	mov    rdi,rax
  4112fb:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411300:	mov    QWORD PTR [rbp-0x50],rax
  411304:	jmp    4117cc <_start@@Base+0xc66c>
  411309:	mov    rdx,QWORD PTR [rbp-0x58]
  41130d:	mov    rcx,QWORD PTR [rbp-0x50]
  411311:	mov    rax,QWORD PTR [rbp-0x48]
  411315:	mov    rsi,rcx
  411318:	mov    rdi,rax
  41131b:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411320:	mov    QWORD PTR [rbp-0x50],rax
  411324:	jmp    4117cc <_start@@Base+0xc66c>
  411329:	mov    rdx,QWORD PTR [rbp-0x58]
  41132d:	mov    rcx,QWORD PTR [rbp-0x50]
  411331:	mov    rax,QWORD PTR [rbp-0x48]
  411335:	mov    rsi,rcx
  411338:	mov    rdi,rax
  41133b:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411340:	mov    QWORD PTR [rbp-0x50],rax
  411344:	jmp    4117cc <_start@@Base+0xc66c>
  411349:	movabs rax,0x766563746f725f6f
  411353:	cmp    QWORD PTR [rbp-0x28],rax
  411357:	jne    4117b1 <_start@@Base+0xc651>
  41135d:	add    QWORD PTR [rbp-0x50],0x8
  411362:	mov    rdx,QWORD PTR [rbp-0x58]
  411366:	mov    rax,QWORD PTR [rbp-0x50]
  41136a:	mov    rsi,rdx
  41136d:	mov    rdi,rax
  411370:	call   405756 <_start@@Base+0x5f6>
  411375:	mov    QWORD PTR [rbp-0x28],rax
  411379:	movabs rax,0x665f646f75626c65
  411383:	cmp    QWORD PTR [rbp-0x28],rax
  411387:	jne    4115b9 <_start@@Base+0xc459>
  41138d:	add    QWORD PTR [rbp-0x50],0x8
  411392:	mov    rdx,QWORD PTR [rbp-0x58]
  411396:	mov    rax,QWORD PTR [rbp-0x50]
  41139a:	mov    rsi,rdx
  41139d:	mov    rdi,rax
  4113a0:	call   405756 <_start@@Base+0x5f6>
  4113a5:	mov    QWORD PTR [rbp-0x28],rax
  4113a9:	movabs rax,0xff00000000000000
  4113b3:	and    rax,QWORD PTR [rbp-0x28]
  4113b7:	mov    rdx,rax
  4113ba:	movabs rax,0x7300000000000000
  4113c4:	cmp    rdx,rax
  4113c7:	jne    411599 <_start@@Base+0xc439>
  4113cd:	mov    rax,QWORD PTR [rbp-0x50]
  4113d1:	mov    QWORD PTR [rbp-0x20],rax
  4113d5:	mov    rdx,QWORD PTR [rbp-0x58]
  4113d9:	mov    rsi,QWORD PTR [rbp-0x20]
  4113dd:	mov    rax,QWORD PTR [rbp-0x48]
  4113e1:	mov    ecx,0x1
  4113e6:	mov    rdi,rax
  4113e9:	call   405c48 <_start@@Base+0xae8>
  4113ee:	mov    QWORD PTR [rbp-0x50],rax
  4113f2:	mov    rax,QWORD PTR [rbp-0x20]
  4113f6:	cmp    rax,QWORD PTR [rbp-0x50]
  4113fa:	je     411579 <_start@@Base+0xc419>
  411400:	mov    rax,QWORD PTR [rbp-0x48]
  411404:	mov    rax,QWORD PTR [rax]
  411407:	mov    ecx,0x1fffffff
  41140c:	mov    edx,0x8
  411411:	mov    esi,0x8
  411416:	mov    rdi,rax
  411419:	call   41ca8f <flatcc_builder_start_vector@@Base>
  41141e:	test   eax,eax
  411420:	jne    4118f5 <_start@@Base+0xc795>
  411426:	lea    rcx,[rbp-0x40]
  41142a:	mov    rdx,QWORD PTR [rbp-0x58]
  41142e:	mov    rsi,QWORD PTR [rbp-0x50]
  411432:	mov    rax,QWORD PTR [rbp-0x48]
  411436:	mov    rdi,rax
  411439:	call   405a4d <_start@@Base+0x8ed>
  41143e:	mov    QWORD PTR [rbp-0x50],rax
  411442:	jmp    411520 <_start@@Base+0xc3c0>
  411447:	vxorpd xmm0,xmm0,xmm0
  41144b:	vmovsd QWORD PTR [rbp-0x30],xmm0
  411450:	mov    rax,QWORD PTR [rbp-0x48]
  411454:	mov    rax,QWORD PTR [rax]
  411457:	mov    esi,0x1
  41145c:	mov    rdi,rax
  41145f:	call   41c377 <flatcc_builder_extend_vector@@Base>
  411464:	mov    QWORD PTR [rbp-0x10],rax
  411468:	cmp    QWORD PTR [rbp-0x10],0x0
  41146d:	je     4118f8 <_start@@Base+0xc798>
  411473:	mov    rax,QWORD PTR [rbp-0x50]
  411477:	mov    QWORD PTR [rbp-0x20],rax
  41147b:	lea    rcx,[rbp-0x30]
  41147f:	mov    rdx,QWORD PTR [rbp-0x58]
  411483:	mov    rsi,QWORD PTR [rbp-0x20]
  411487:	mov    rax,QWORD PTR [rbp-0x48]
  41148b:	mov    rdi,rax
  41148e:	call   42695d <flatcc_json_parser_double@@Base>
  411493:	mov    QWORD PTR [rbp-0x50],rax
  411497:	mov    rax,QWORD PTR [rbp-0x20]
  41149b:	cmp    rax,QWORD PTR [rbp-0x50]
  41149f:	jne    4114eb <_start@@Base+0xc38b>
  4114a1:	mov    rax,QWORD PTR [rbp-0x50]
  4114a5:	mov    QWORD PTR [rbp-0x20],rax
  4114a9:	lea    rcx,[rbp-0x30]
  4114ad:	mov    rdx,QWORD PTR [rbp-0x58]
  4114b1:	mov    rsi,QWORD PTR [rbp-0x20]
  4114b5:	mov    rax,QWORD PTR [rbp-0x48]
  4114b9:	mov    r8,rcx
  4114bc:	lea    rcx,[rip+0x3327d]        # 444740 <__data_start@@Base+0x680>
  4114c3:	mov    rdi,rax
  4114c6:	call   4077b7 <_start@@Base+0x2657>
  4114cb:	mov    QWORD PTR [rbp-0x50],rax
  4114cf:	mov    rax,QWORD PTR [rbp-0x50]
  4114d3:	cmp    rax,QWORD PTR [rbp-0x20]
  4114d7:	je     4118f8 <_start@@Base+0xc798>
  4114dd:	mov    rax,QWORD PTR [rbp-0x50]
  4114e1:	cmp    rax,QWORD PTR [rbp-0x58]
  4114e5:	je     4118f8 <_start@@Base+0xc798>
  4114eb:	mov    rdx,QWORD PTR [rbp-0x30]
  4114ef:	mov    rax,QWORD PTR [rbp-0x10]
  4114f3:	mov    QWORD PTR [rbp-0x68],rdx
  4114f7:	vmovsd xmm0,QWORD PTR [rbp-0x68]
  4114fc:	mov    rdi,rax
  4114ff:	call   405482 <_start@@Base+0x322>
  411504:	lea    rcx,[rbp-0x40]
  411508:	mov    rdx,QWORD PTR [rbp-0x58]
  41150c:	mov    rsi,QWORD PTR [rbp-0x50]
  411510:	mov    rax,QWORD PTR [rbp-0x48]
  411514:	mov    rdi,rax
  411517:	call   405b0a <_start@@Base+0x9aa>
  41151c:	mov    QWORD PTR [rbp-0x50],rax
  411520:	mov    eax,DWORD PTR [rbp-0x40]
  411523:	test   eax,eax
  411525:	jne    411447 <_start@@Base+0xc2e7>
  41152b:	mov    rax,QWORD PTR [rbp-0x48]
  41152f:	mov    rax,QWORD PTR [rax]
  411532:	mov    rdi,rax
  411535:	call   41dc65 <flatcc_builder_end_vector@@Base>
  41153a:	mov    DWORD PTR [rbp-0x3c],eax
  41153d:	mov    eax,DWORD PTR [rbp-0x3c]
  411540:	test   eax,eax
  411542:	je     411905 <_start@@Base+0xc7a5>
  411548:	mov    rax,QWORD PTR [rbp-0x48]
  41154c:	mov    rax,QWORD PTR [rax]
  41154f:	mov    esi,0x21
  411554:	mov    rdi,rax
  411557:	call   41effb <flatcc_builder_table_add_offset@@Base>
  41155c:	mov    QWORD PTR [rbp-0x18],rax
  411560:	cmp    QWORD PTR [rbp-0x18],0x0
  411565:	je     411905 <_start@@Base+0xc7a5>
  41156b:	mov    edx,DWORD PTR [rbp-0x3c]
  41156e:	mov    rax,QWORD PTR [rbp-0x18]
  411572:	mov    DWORD PTR [rax],edx
  411574:	jmp    4117cc <_start@@Base+0xc66c>
  411579:	mov    rdx,QWORD PTR [rbp-0x58]
  41157d:	mov    rcx,QWORD PTR [rbp-0x50]
  411581:	mov    rax,QWORD PTR [rbp-0x48]
  411585:	mov    rsi,rcx
  411588:	mov    rdi,rax
  41158b:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411590:	mov    QWORD PTR [rbp-0x50],rax
  411594:	jmp    4117cc <_start@@Base+0xc66c>
  411599:	mov    rdx,QWORD PTR [rbp-0x58]
  41159d:	mov    rcx,QWORD PTR [rbp-0x50]
  4115a1:	mov    rax,QWORD PTR [rbp-0x48]
  4115a5:	mov    rsi,rcx
  4115a8:	mov    rdi,rax
  4115ab:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4115b0:	mov    QWORD PTR [rbp-0x50],rax
  4115b4:	jmp    4117cc <_start@@Base+0xc66c>
  4115b9:	mov    rax,QWORD PTR [rbp-0x28]
  4115bd:	mov    al,0x0
  4115bf:	mov    rdx,rax
  4115c2:	movabs rax,0x665f6c6f6e677300
  4115cc:	cmp    rdx,rax
  4115cf:	jne    411794 <_start@@Base+0xc634>
  4115d5:	mov    rax,QWORD PTR [rbp-0x50]
  4115d9:	mov    QWORD PTR [rbp-0x20],rax
  4115dd:	mov    rdx,QWORD PTR [rbp-0x58]
  4115e1:	mov    rsi,QWORD PTR [rbp-0x20]
  4115e5:	mov    rax,QWORD PTR [rbp-0x48]
  4115e9:	mov    ecx,0x7
  4115ee:	mov    rdi,rax
  4115f1:	call   405c48 <_start@@Base+0xae8>
  4115f6:	mov    QWORD PTR [rbp-0x50],rax
  4115fa:	mov    rax,QWORD PTR [rbp-0x20]
  4115fe:	cmp    rax,QWORD PTR [rbp-0x50]
  411602:	je     411777 <_start@@Base+0xc617>
  411608:	mov    rax,QWORD PTR [rbp-0x48]
  41160c:	mov    rax,QWORD PTR [rax]
  41160f:	mov    ecx,0x1fffffff
  411614:	mov    edx,0x8
  411619:	mov    esi,0x8
  41161e:	mov    rdi,rax
  411621:	call   41ca8f <flatcc_builder_start_vector@@Base>
  411626:	test   eax,eax
  411628:	jne    4118fb <_start@@Base+0xc79b>
  41162e:	lea    rcx,[rbp-0x40]
  411632:	mov    rdx,QWORD PTR [rbp-0x58]
  411636:	mov    rsi,QWORD PTR [rbp-0x50]
  41163a:	mov    rax,QWORD PTR [rbp-0x48]
  41163e:	mov    rdi,rax
  411641:	call   405a4d <_start@@Base+0x8ed>
  411646:	mov    QWORD PTR [rbp-0x50],rax
  41164a:	jmp    411721 <_start@@Base+0xc5c1>
  41164f:	mov    QWORD PTR [rbp-0x30],0x0
  411657:	mov    rax,QWORD PTR [rbp-0x48]
  41165b:	mov    rax,QWORD PTR [rax]
  41165e:	mov    esi,0x1
  411663:	mov    rdi,rax
  411666:	call   41c377 <flatcc_builder_extend_vector@@Base>
  41166b:	mov    QWORD PTR [rbp-0x10],rax
  41166f:	cmp    QWORD PTR [rbp-0x10],0x0
  411674:	je     4118fe <_start@@Base+0xc79e>
  41167a:	mov    rax,QWORD PTR [rbp-0x50]
  41167e:	mov    QWORD PTR [rbp-0x20],rax
  411682:	lea    rcx,[rbp-0x30]
  411686:	mov    rdx,QWORD PTR [rbp-0x58]
  41168a:	mov    rsi,QWORD PTR [rbp-0x20]
  41168e:	mov    rax,QWORD PTR [rbp-0x48]
  411692:	mov    rdi,rax
  411695:	call   40661a <_start@@Base+0x14ba>
  41169a:	mov    QWORD PTR [rbp-0x50],rax
  41169e:	mov    rax,QWORD PTR [rbp-0x20]
  4116a2:	cmp    rax,QWORD PTR [rbp-0x50]
  4116a6:	jne    4116f2 <_start@@Base+0xc592>
  4116a8:	mov    rax,QWORD PTR [rbp-0x50]
  4116ac:	mov    QWORD PTR [rbp-0x20],rax
  4116b0:	lea    rcx,[rbp-0x30]
  4116b4:	mov    rdx,QWORD PTR [rbp-0x58]
  4116b8:	mov    rsi,QWORD PTR [rbp-0x20]
  4116bc:	mov    rax,QWORD PTR [rbp-0x48]
  4116c0:	mov    r8,rcx
  4116c3:	lea    rcx,[rip+0x33096]        # 444760 <__data_start@@Base+0x6a0>
  4116ca:	mov    rdi,rax
  4116cd:	call   406f8e <_start@@Base+0x1e2e>
  4116d2:	mov    QWORD PTR [rbp-0x50],rax
  4116d6:	mov    rax,QWORD PTR [rbp-0x50]
  4116da:	cmp    rax,QWORD PTR [rbp-0x20]
  4116de:	je     4118fe <_start@@Base+0xc79e>
  4116e4:	mov    rax,QWORD PTR [rbp-0x50]
  4116e8:	cmp    rax,QWORD PTR [rbp-0x58]
  4116ec:	je     4118fe <_start@@Base+0xc79e>
  4116f2:	mov    rdx,QWORD PTR [rbp-0x30]
  4116f6:	mov    rax,QWORD PTR [rbp-0x10]
  4116fa:	mov    rsi,rdx
  4116fd:	mov    rdi,rax
  411700:	call   4053e9 <_start@@Base+0x289>
  411705:	lea    rcx,[rbp-0x40]
  411709:	mov    rdx,QWORD PTR [rbp-0x58]
  41170d:	mov    rsi,QWORD PTR [rbp-0x50]
  411711:	mov    rax,QWORD PTR [rbp-0x48]
  411715:	mov    rdi,rax
  411718:	call   405b0a <_start@@Base+0x9aa>
  41171d:	mov    QWORD PTR [rbp-0x50],rax
  411721:	mov    eax,DWORD PTR [rbp-0x40]
  411724:	test   eax,eax
  411726:	jne    41164f <_start@@Base+0xc4ef>
  41172c:	mov    rax,QWORD PTR [rbp-0x48]
  411730:	mov    rax,QWORD PTR [rax]
  411733:	mov    rdi,rax
  411736:	call   41dc65 <flatcc_builder_end_vector@@Base>
  41173b:	mov    DWORD PTR [rbp-0x3c],eax
  41173e:	mov    eax,DWORD PTR [rbp-0x3c]
  411741:	test   eax,eax
  411743:	je     411905 <_start@@Base+0xc7a5>
  411749:	mov    rax,QWORD PTR [rbp-0x48]
  41174d:	mov    rax,QWORD PTR [rax]
  411750:	mov    esi,0x20
  411755:	mov    rdi,rax
  411758:	call   41effb <flatcc_builder_table_add_offset@@Base>
  41175d:	mov    QWORD PTR [rbp-0x18],rax
  411761:	cmp    QWORD PTR [rbp-0x18],0x0
  411766:	je     411905 <_start@@Base+0xc7a5>
  41176c:	mov    edx,DWORD PTR [rbp-0x3c]
  41176f:	mov    rax,QWORD PTR [rbp-0x18]
  411773:	mov    DWORD PTR [rax],edx
  411775:	jmp    4117cc <_start@@Base+0xc66c>
  411777:	mov    rdx,QWORD PTR [rbp-0x58]
  41177b:	mov    rcx,QWORD PTR [rbp-0x50]
  41177f:	mov    rax,QWORD PTR [rbp-0x48]
  411783:	mov    rsi,rcx
  411786:	mov    rdi,rax
  411789:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41178e:	mov    QWORD PTR [rbp-0x50],rax
  411792:	jmp    4117cc <_start@@Base+0xc66c>
  411794:	mov    rdx,QWORD PTR [rbp-0x58]
  411798:	mov    rcx,QWORD PTR [rbp-0x50]
  41179c:	mov    rax,QWORD PTR [rbp-0x48]
  4117a0:	mov    rsi,rcx
  4117a3:	mov    rdi,rax
  4117a6:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4117ab:	mov    QWORD PTR [rbp-0x50],rax
  4117af:	jmp    4117cc <_start@@Base+0xc66c>
  4117b1:	mov    rdx,QWORD PTR [rbp-0x58]
  4117b5:	mov    rcx,QWORD PTR [rbp-0x50]
  4117b9:	mov    rax,QWORD PTR [rbp-0x48]
  4117bd:	mov    rsi,rcx
  4117c0:	mov    rdi,rax
  4117c3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4117c8:	mov    QWORD PTR [rbp-0x50],rax
  4117cc:	lea    rcx,[rbp-0x40]
  4117d0:	mov    rdx,QWORD PTR [rbp-0x58]
  4117d4:	mov    rsi,QWORD PTR [rbp-0x50]
  4117d8:	mov    rax,QWORD PTR [rbp-0x48]
  4117dc:	mov    rdi,rax
  4117df:	call   40590f <_start@@Base+0x7af>
  4117e4:	mov    QWORD PTR [rbp-0x50],rax
  4117e8:	mov    eax,DWORD PTR [rbp-0x40]
  4117eb:	test   eax,eax
  4117ed:	jne    40e17c <_start@@Base+0x901c>
  4117f3:	mov    rax,QWORD PTR [rbp-0x48]
  4117f7:	mov    eax,DWORD PTR [rax+0x1c]
  4117fa:	test   eax,eax
  4117fc:	jne    411901 <_start@@Base+0xc7a1>
  411802:	mov    rax,QWORD PTR [rbp-0x48]
  411806:	mov    rax,QWORD PTR [rax]
  411809:	mov    esi,0x3
  41180e:	mov    rdi,rax
  411811:	call   41d599 <flatcc_builder_check_required_field@@Base>
  411816:	test   eax,eax
  411818:	jne    41183c <_start@@Base+0xc6dc>
  41181a:	mov    rdx,QWORD PTR [rbp-0x58]
  41181e:	mov    rsi,QWORD PTR [rbp-0x50]
  411822:	mov    rax,QWORD PTR [rbp-0x48]
  411826:	mov    ecx,0x1d
  41182b:	mov    rdi,rax
  41182e:	call   425bce <flatcc_json_parser_set_error@@Base>
  411833:	mov    QWORD PTR [rbp-0x50],rax
  411837:	jmp    411905 <_start@@Base+0xc7a5>
  41183c:	mov    rcx,QWORD PTR [rbp-0x38]
  411840:	mov    rdx,QWORD PTR [rbp-0x58]
  411844:	mov    rsi,QWORD PTR [rbp-0x50]
  411848:	mov    rax,QWORD PTR [rbp-0x48]
  41184c:	mov    rdi,rax
  41184f:	call   4278d6 <flatcc_json_parser_finalize_unions@@Base>
  411854:	mov    QWORD PTR [rbp-0x50],rax
  411858:	mov    rax,QWORD PTR [rbp-0x48]
  41185c:	mov    rax,QWORD PTR [rax]
  41185f:	mov    rdi,rax
  411862:	call   41d7cb <flatcc_builder_end_table@@Base>
  411867:	mov    edx,eax
  411869:	mov    rax,QWORD PTR [rbp-0x60]
  41186d:	mov    DWORD PTR [rax],edx
  41186f:	mov    rax,QWORD PTR [rbp-0x60]
  411873:	mov    eax,DWORD PTR [rax]
  411875:	test   eax,eax
  411877:	je     411904 <_start@@Base+0xc7a4>
  41187d:	mov    rax,QWORD PTR [rbp-0x50]
  411881:	jmp    41191e <_start@@Base+0xc7be>
  411886:	nop
  411887:	jmp    411905 <_start@@Base+0xc7a5>
  411889:	nop
  41188a:	jmp    411905 <_start@@Base+0xc7a5>
  41188c:	nop
  41188d:	jmp    411905 <_start@@Base+0xc7a5>
  41188f:	nop
  411890:	jmp    411905 <_start@@Base+0xc7a5>
  411892:	nop
  411893:	jmp    411905 <_start@@Base+0xc7a5>
  411895:	nop
  411896:	jmp    411905 <_start@@Base+0xc7a5>
  411898:	nop
  411899:	jmp    411905 <_start@@Base+0xc7a5>
  41189b:	nop
  41189c:	jmp    411905 <_start@@Base+0xc7a5>
  41189e:	nop
  41189f:	jmp    411905 <_start@@Base+0xc7a5>
  4118a1:	nop
  4118a2:	jmp    411905 <_start@@Base+0xc7a5>
  4118a4:	nop
  4118a5:	jmp    411905 <_start@@Base+0xc7a5>
  4118a7:	nop
  4118a8:	jmp    411905 <_start@@Base+0xc7a5>
  4118aa:	nop
  4118ab:	jmp    411905 <_start@@Base+0xc7a5>
  4118ad:	nop
  4118ae:	jmp    411905 <_start@@Base+0xc7a5>
  4118b0:	nop
  4118b1:	jmp    411905 <_start@@Base+0xc7a5>
  4118b3:	nop
  4118b4:	jmp    411905 <_start@@Base+0xc7a5>
  4118b6:	nop
  4118b7:	jmp    411905 <_start@@Base+0xc7a5>
  4118b9:	nop
  4118ba:	jmp    411905 <_start@@Base+0xc7a5>
  4118bc:	nop
  4118bd:	jmp    411905 <_start@@Base+0xc7a5>
  4118bf:	nop
  4118c0:	jmp    411905 <_start@@Base+0xc7a5>
  4118c2:	nop
  4118c3:	jmp    411905 <_start@@Base+0xc7a5>
  4118c5:	nop
  4118c6:	jmp    411905 <_start@@Base+0xc7a5>
  4118c8:	nop
  4118c9:	jmp    411905 <_start@@Base+0xc7a5>
  4118cb:	nop
  4118cc:	jmp    411905 <_start@@Base+0xc7a5>
  4118ce:	nop
  4118cf:	jmp    411905 <_start@@Base+0xc7a5>
  4118d1:	nop
  4118d2:	jmp    411905 <_start@@Base+0xc7a5>
  4118d4:	nop
  4118d5:	jmp    411905 <_start@@Base+0xc7a5>
  4118d7:	nop
  4118d8:	jmp    411905 <_start@@Base+0xc7a5>
  4118da:	nop
  4118db:	jmp    411905 <_start@@Base+0xc7a5>
  4118dd:	nop
  4118de:	jmp    411905 <_start@@Base+0xc7a5>
  4118e0:	nop
  4118e1:	jmp    411905 <_start@@Base+0xc7a5>
  4118e3:	nop
  4118e4:	jmp    411905 <_start@@Base+0xc7a5>
  4118e6:	nop
  4118e7:	jmp    411905 <_start@@Base+0xc7a5>
  4118e9:	nop
  4118ea:	jmp    411905 <_start@@Base+0xc7a5>
  4118ec:	nop
  4118ed:	jmp    411905 <_start@@Base+0xc7a5>
  4118ef:	nop
  4118f0:	jmp    411905 <_start@@Base+0xc7a5>
  4118f2:	nop
  4118f3:	jmp    411905 <_start@@Base+0xc7a5>
  4118f5:	nop
  4118f6:	jmp    411905 <_start@@Base+0xc7a5>
  4118f8:	nop
  4118f9:	jmp    411905 <_start@@Base+0xc7a5>
  4118fb:	nop
  4118fc:	jmp    411905 <_start@@Base+0xc7a5>
  4118fe:	nop
  4118ff:	jmp    411905 <_start@@Base+0xc7a5>
  411901:	nop
  411902:	jmp    411905 <_start@@Base+0xc7a5>
  411904:	nop
  411905:	mov    rdx,QWORD PTR [rbp-0x58]
  411909:	mov    rsi,QWORD PTR [rbp-0x50]
  41190d:	mov    rax,QWORD PTR [rbp-0x48]
  411911:	mov    ecx,0x21
  411916:	mov    rdi,rax
  411919:	call   425bce <flatcc_json_parser_set_error@@Base>
  41191e:	mov    rdi,QWORD PTR [rbp-0x8]
  411922:	xor    rdi,QWORD PTR fs:0x28
  41192b:	je     411932 <_start@@Base+0xc7d2>
  41192d:	call   405070 <__stack_chk_fail@plt>
  411932:	leave  
  411933:	ret    
  411934:	push   rbp
  411935:	mov    rbp,rsp
  411938:	sub    rsp,0x70
  41193c:	mov    QWORD PTR [rbp-0x48],rdi
  411940:	mov    QWORD PTR [rbp-0x50],rsi
  411944:	mov    QWORD PTR [rbp-0x58],rdx
  411948:	mov    QWORD PTR [rbp-0x60],rcx
  41194c:	mov    rax,QWORD PTR fs:0x28
  411955:	mov    QWORD PTR [rbp-0x8],rax
  411959:	xor    eax,eax
  41195b:	mov    rax,QWORD PTR [rbp-0x60]
  41195f:	mov    DWORD PTR [rax],0x0
  411965:	mov    rax,QWORD PTR [rbp-0x48]
  411969:	mov    rax,QWORD PTR [rax]
  41196c:	mov    esi,0xc
  411971:	mov    rdi,rax
  411974:	call   41ccc9 <flatcc_builder_start_table@@Base>
  411979:	test   eax,eax
  41197b:	jne    412d05 <_start@@Base+0xdba5>
  411981:	lea    rcx,[rbp-0x38]
  411985:	mov    rdx,QWORD PTR [rbp-0x58]
  411989:	mov    rsi,QWORD PTR [rbp-0x50]
  41198d:	mov    rax,QWORD PTR [rbp-0x48]
  411991:	mov    rdi,rax
  411994:	call   405852 <_start@@Base+0x6f2>
  411999:	mov    QWORD PTR [rbp-0x50],rax
  41199d:	jmp    412cc8 <_start@@Base+0xdb68>
  4119a2:	mov    rdx,QWORD PTR [rbp-0x58]
  4119a6:	mov    rcx,QWORD PTR [rbp-0x50]
  4119aa:	mov    rax,QWORD PTR [rbp-0x48]
  4119ae:	mov    rsi,rcx
  4119b1:	mov    rdi,rax
  4119b4:	call   4055e5 <_start@@Base+0x485>
  4119b9:	mov    QWORD PTR [rbp-0x50],rax
  4119bd:	mov    rdx,QWORD PTR [rbp-0x58]
  4119c1:	mov    rax,QWORD PTR [rbp-0x50]
  4119c5:	mov    rsi,rdx
  4119c8:	mov    rdi,rax
  4119cb:	call   405756 <_start@@Base+0x5f6>
  4119d0:	mov    QWORD PTR [rbp-0x28],rax
  4119d4:	movabs rax,0x6937ffffffffffff
  4119de:	cmp    QWORD PTR [rbp-0x28],rax
  4119e2:	ja     41214a <_start@@Base+0xcfea>
  4119e8:	movabs rax,0x693135ffffffffff
  4119f2:	cmp    QWORD PTR [rbp-0x28],rax
  4119f6:	ja     411cf6 <_start@@Base+0xcb96>
  4119fc:	movabs rax,0xffffff0000000000
  411a06:	and    rax,QWORD PTR [rbp-0x28]
  411a0a:	mov    rdx,rax
  411a0d:	movabs rax,0x6636340000000000
  411a17:	cmp    rdx,rax
  411a1a:	jne    411b6a <_start@@Base+0xca0a>
  411a20:	mov    rax,QWORD PTR [rbp-0x50]
  411a24:	mov    QWORD PTR [rbp-0x20],rax
  411a28:	mov    rdx,QWORD PTR [rbp-0x58]
  411a2c:	mov    rsi,QWORD PTR [rbp-0x20]
  411a30:	mov    rax,QWORD PTR [rbp-0x48]
  411a34:	mov    ecx,0x3
  411a39:	mov    rdi,rax
  411a3c:	call   405c48 <_start@@Base+0xae8>
  411a41:	mov    QWORD PTR [rbp-0x50],rax
  411a45:	mov    rax,QWORD PTR [rbp-0x20]
  411a49:	cmp    rax,QWORD PTR [rbp-0x50]
  411a4d:	je     411b4a <_start@@Base+0xc9ea>
  411a53:	vxorpd xmm0,xmm0,xmm0
  411a57:	vmovsd QWORD PTR [rbp-0x30],xmm0
  411a5c:	mov    rax,QWORD PTR [rbp-0x50]
  411a60:	mov    QWORD PTR [rbp-0x20],rax
  411a64:	lea    rcx,[rbp-0x30]
  411a68:	mov    rdx,QWORD PTR [rbp-0x58]
  411a6c:	mov    rsi,QWORD PTR [rbp-0x20]
  411a70:	mov    rax,QWORD PTR [rbp-0x48]
  411a74:	mov    rdi,rax
  411a77:	call   42695d <flatcc_json_parser_double@@Base>
  411a7c:	mov    QWORD PTR [rbp-0x50],rax
  411a80:	mov    rax,QWORD PTR [rbp-0x20]
  411a84:	cmp    rax,QWORD PTR [rbp-0x50]
  411a88:	jne    411ad4 <_start@@Base+0xc974>
  411a8a:	mov    rax,QWORD PTR [rbp-0x50]
  411a8e:	mov    QWORD PTR [rbp-0x20],rax
  411a92:	lea    rcx,[rbp-0x30]
  411a96:	mov    rdx,QWORD PTR [rbp-0x58]
  411a9a:	mov    rsi,QWORD PTR [rbp-0x20]
  411a9e:	mov    rax,QWORD PTR [rbp-0x48]
  411aa2:	mov    r8,rcx
  411aa5:	lea    rcx,[rip+0x32cd4]        # 444780 <__data_start@@Base+0x6c0>
  411aac:	mov    rdi,rax
  411aaf:	call   4077b7 <_start@@Base+0x2657>
  411ab4:	mov    QWORD PTR [rbp-0x50],rax
  411ab8:	mov    rax,QWORD PTR [rbp-0x50]
  411abc:	cmp    rax,QWORD PTR [rbp-0x20]
  411ac0:	je     412d36 <_start@@Base+0xdbd6>
  411ac6:	mov    rax,QWORD PTR [rbp-0x50]
  411aca:	cmp    rax,QWORD PTR [rbp-0x58]
  411ace:	je     412d36 <_start@@Base+0xdbd6>
  411ad4:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  411ad9:	vxorpd xmm1,xmm1,xmm1
  411add:	vucomisd xmm0,xmm1
  411ae1:	jp     411aff <_start@@Base+0xc99f>
  411ae3:	vxorpd xmm1,xmm1,xmm1
  411ae7:	vucomisd xmm0,xmm1
  411aeb:	jne    411aff <_start@@Base+0xc99f>
  411aed:	mov    rax,QWORD PTR [rbp-0x48]
  411af1:	mov    eax,DWORD PTR [rax+0x10]
  411af4:	and    eax,0x2
  411af7:	test   eax,eax
  411af9:	je     412cac <_start@@Base+0xdb4c>
  411aff:	mov    rax,QWORD PTR [rbp-0x48]
  411b03:	mov    rax,QWORD PTR [rax]
  411b06:	mov    ecx,0x8
  411b0b:	mov    edx,0x8
  411b10:	mov    esi,0x9
  411b15:	mov    rdi,rax
  411b18:	call   41ee2d <flatcc_builder_table_add@@Base>
  411b1d:	mov    QWORD PTR [rbp-0x18],rax
  411b21:	cmp    QWORD PTR [rbp-0x18],0x0
  411b26:	je     412d08 <_start@@Base+0xdba8>
  411b2c:	mov    rdx,QWORD PTR [rbp-0x30]
  411b30:	mov    rax,QWORD PTR [rbp-0x18]
  411b34:	mov    QWORD PTR [rbp-0x68],rdx
  411b38:	vmovsd xmm0,QWORD PTR [rbp-0x68]
  411b3d:	mov    rdi,rax
  411b40:	call   405482 <_start@@Base+0x322>
  411b45:	jmp    412cac <_start@@Base+0xdb4c>
  411b4a:	mov    rdx,QWORD PTR [rbp-0x58]
  411b4e:	mov    rcx,QWORD PTR [rbp-0x50]
  411b52:	mov    rax,QWORD PTR [rbp-0x48]
  411b56:	mov    rsi,rcx
  411b59:	mov    rdi,rax
  411b5c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411b61:	mov    QWORD PTR [rbp-0x50],rax
  411b65:	jmp    412cac <_start@@Base+0xdb4c>
  411b6a:	movabs rax,0xffffff0000000000
  411b74:	and    rax,QWORD PTR [rbp-0x28]
  411b78:	mov    rdx,rax
  411b7b:	movabs rax,0x6633320000000000
  411b85:	cmp    rdx,rax
  411b88:	jne    411cd6 <_start@@Base+0xcb76>
  411b8e:	mov    rax,QWORD PTR [rbp-0x50]
  411b92:	mov    QWORD PTR [rbp-0x20],rax
  411b96:	mov    rdx,QWORD PTR [rbp-0x58]
  411b9a:	mov    rsi,QWORD PTR [rbp-0x20]
  411b9e:	mov    rax,QWORD PTR [rbp-0x48]
  411ba2:	mov    ecx,0x3
  411ba7:	mov    rdi,rax
  411baa:	call   405c48 <_start@@Base+0xae8>
  411baf:	mov    QWORD PTR [rbp-0x50],rax
  411bb3:	mov    rax,QWORD PTR [rbp-0x20]
  411bb7:	cmp    rax,QWORD PTR [rbp-0x50]
  411bbb:	je     411cb6 <_start@@Base+0xcb56>
  411bc1:	vxorps xmm0,xmm0,xmm0
  411bc5:	vmovss DWORD PTR [rbp-0x30],xmm0
  411bca:	mov    rax,QWORD PTR [rbp-0x50]
  411bce:	mov    QWORD PTR [rbp-0x20],rax
  411bd2:	lea    rcx,[rbp-0x30]
  411bd6:	mov    rdx,QWORD PTR [rbp-0x58]
  411bda:	mov    rsi,QWORD PTR [rbp-0x20]
  411bde:	mov    rax,QWORD PTR [rbp-0x48]
  411be2:	mov    rdi,rax
  411be5:	call   426aac <flatcc_json_parser_float@@Base>
  411bea:	mov    QWORD PTR [rbp-0x50],rax
  411bee:	mov    rax,QWORD PTR [rbp-0x20]
  411bf2:	cmp    rax,QWORD PTR [rbp-0x50]
  411bf6:	jne    411c42 <_start@@Base+0xcae2>
  411bf8:	mov    rax,QWORD PTR [rbp-0x50]
  411bfc:	mov    QWORD PTR [rbp-0x20],rax
  411c00:	lea    rcx,[rbp-0x30]
  411c04:	mov    rdx,QWORD PTR [rbp-0x58]
  411c08:	mov    rsi,QWORD PTR [rbp-0x20]
  411c0c:	mov    rax,QWORD PTR [rbp-0x48]
  411c10:	mov    r8,rcx
  411c13:	lea    rcx,[rip+0x32b86]        # 4447a0 <__data_start@@Base+0x6e0>
  411c1a:	mov    rdi,rax
  411c1d:	call   407652 <_start@@Base+0x24f2>
  411c22:	mov    QWORD PTR [rbp-0x50],rax
  411c26:	mov    rax,QWORD PTR [rbp-0x50]
  411c2a:	cmp    rax,QWORD PTR [rbp-0x20]
  411c2e:	je     412d36 <_start@@Base+0xdbd6>
  411c34:	mov    rax,QWORD PTR [rbp-0x50]
  411c38:	cmp    rax,QWORD PTR [rbp-0x58]
  411c3c:	je     412d36 <_start@@Base+0xdbd6>
  411c42:	vmovss xmm0,DWORD PTR [rbp-0x30]
  411c47:	vxorps xmm1,xmm1,xmm1
  411c4b:	vucomiss xmm0,xmm1
  411c4f:	jp     411c6d <_start@@Base+0xcb0d>
  411c51:	vxorps xmm1,xmm1,xmm1
  411c55:	vucomiss xmm0,xmm1
  411c59:	jne    411c6d <_start@@Base+0xcb0d>
  411c5b:	mov    rax,QWORD PTR [rbp-0x48]
  411c5f:	mov    eax,DWORD PTR [rax+0x10]
  411c62:	and    eax,0x2
  411c65:	test   eax,eax
  411c67:	je     412cac <_start@@Base+0xdb4c>
  411c6d:	mov    rax,QWORD PTR [rbp-0x48]
  411c71:	mov    rax,QWORD PTR [rax]
  411c74:	mov    ecx,0x4
  411c79:	mov    edx,0x4
  411c7e:	mov    esi,0x8
  411c83:	mov    rdi,rax
  411c86:	call   41ee2d <flatcc_builder_table_add@@Base>
  411c8b:	mov    QWORD PTR [rbp-0x18],rax
  411c8f:	cmp    QWORD PTR [rbp-0x18],0x0
  411c94:	je     412d0b <_start@@Base+0xdbab>
  411c9a:	mov    edx,DWORD PTR [rbp-0x30]
  411c9d:	mov    rax,QWORD PTR [rbp-0x18]
  411ca1:	mov    DWORD PTR [rbp-0x68],edx
  411ca4:	vmovss xmm0,DWORD PTR [rbp-0x68]
  411ca9:	mov    rdi,rax
  411cac:	call   405432 <_start@@Base+0x2d2>
  411cb1:	jmp    412cac <_start@@Base+0xdb4c>
  411cb6:	mov    rdx,QWORD PTR [rbp-0x58]
  411cba:	mov    rcx,QWORD PTR [rbp-0x50]
  411cbe:	mov    rax,QWORD PTR [rbp-0x48]
  411cc2:	mov    rsi,rcx
  411cc5:	mov    rdi,rax
  411cc8:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411ccd:	mov    QWORD PTR [rbp-0x50],rax
  411cd1:	jmp    412cac <_start@@Base+0xdb4c>
  411cd6:	mov    rdx,QWORD PTR [rbp-0x58]
  411cda:	mov    rcx,QWORD PTR [rbp-0x50]
  411cde:	mov    rax,QWORD PTR [rbp-0x48]
  411ce2:	mov    rsi,rcx
  411ce5:	mov    rdi,rax
  411ce8:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411ced:	mov    QWORD PTR [rbp-0x50],rax
  411cf1:	jmp    412cac <_start@@Base+0xdb4c>
  411cf6:	movabs rax,0x693331ffffffffff
  411d00:	cmp    QWORD PTR [rbp-0x28],rax
  411d04:	ja     411e81 <_start@@Base+0xcd21>
  411d0a:	movabs rax,0xffffff0000000000
  411d14:	and    rax,QWORD PTR [rbp-0x28]
  411d18:	mov    rdx,rax
  411d1b:	movabs rax,0x6931360000000000
  411d25:	cmp    rdx,rax
  411d28:	jne    411e61 <_start@@Base+0xcd01>
  411d2e:	mov    rax,QWORD PTR [rbp-0x50]
  411d32:	mov    QWORD PTR [rbp-0x20],rax
  411d36:	mov    rdx,QWORD PTR [rbp-0x58]
  411d3a:	mov    rsi,QWORD PTR [rbp-0x20]
  411d3e:	mov    rax,QWORD PTR [rbp-0x48]
  411d42:	mov    ecx,0x3
  411d47:	mov    rdi,rax
  411d4a:	call   405c48 <_start@@Base+0xae8>
  411d4f:	mov    QWORD PTR [rbp-0x50],rax
  411d53:	mov    rax,QWORD PTR [rbp-0x20]
  411d57:	cmp    rax,QWORD PTR [rbp-0x50]
  411d5b:	je     411e41 <_start@@Base+0xcce1>
  411d61:	mov    WORD PTR [rbp-0x30],0x0
  411d67:	mov    rax,QWORD PTR [rbp-0x50]
  411d6b:	mov    QWORD PTR [rbp-0x20],rax
  411d6f:	lea    rcx,[rbp-0x30]
  411d73:	mov    rdx,QWORD PTR [rbp-0x58]
  411d77:	mov    rsi,QWORD PTR [rbp-0x20]
  411d7b:	mov    rax,QWORD PTR [rbp-0x48]
  411d7f:	mov    rdi,rax
  411d82:	call   4067a7 <_start@@Base+0x1647>
  411d87:	mov    QWORD PTR [rbp-0x50],rax
  411d8b:	mov    rax,QWORD PTR [rbp-0x20]
  411d8f:	cmp    rax,QWORD PTR [rbp-0x50]
  411d93:	jne    411ddf <_start@@Base+0xcc7f>
  411d95:	mov    rax,QWORD PTR [rbp-0x50]
  411d99:	mov    QWORD PTR [rbp-0x20],rax
  411d9d:	lea    rcx,[rbp-0x30]
  411da1:	mov    rdx,QWORD PTR [rbp-0x58]
  411da5:	mov    rsi,QWORD PTR [rbp-0x20]
  411da9:	mov    rax,QWORD PTR [rbp-0x48]
  411dad:	mov    r8,rcx
  411db0:	lea    rcx,[rip+0x32a09]        # 4447c0 <__data_start@@Base+0x700>
  411db7:	mov    rdi,rax
  411dba:	call   407246 <_start@@Base+0x20e6>
  411dbf:	mov    QWORD PTR [rbp-0x50],rax
  411dc3:	mov    rax,QWORD PTR [rbp-0x50]
  411dc7:	cmp    rax,QWORD PTR [rbp-0x20]
  411dcb:	je     412d36 <_start@@Base+0xdbd6>
  411dd1:	mov    rax,QWORD PTR [rbp-0x50]
  411dd5:	cmp    rax,QWORD PTR [rbp-0x58]
  411dd9:	je     412d36 <_start@@Base+0xdbd6>
  411ddf:	movzx  eax,WORD PTR [rbp-0x30]
  411de3:	test   ax,ax
  411de6:	jne    411dfa <_start@@Base+0xcc9a>
  411de8:	mov    rax,QWORD PTR [rbp-0x48]
  411dec:	mov    eax,DWORD PTR [rax+0x10]
  411def:	and    eax,0x2
  411df2:	test   eax,eax
  411df4:	je     412cac <_start@@Base+0xdb4c>
  411dfa:	mov    rax,QWORD PTR [rbp-0x48]
  411dfe:	mov    rax,QWORD PTR [rax]
  411e01:	mov    ecx,0x2
  411e06:	mov    edx,0x2
  411e0b:	mov    esi,0x2
  411e10:	mov    rdi,rax
  411e13:	call   41ee2d <flatcc_builder_table_add@@Base>
  411e18:	mov    QWORD PTR [rbp-0x18],rax
  411e1c:	cmp    QWORD PTR [rbp-0x18],0x0
  411e21:	je     412d0e <_start@@Base+0xdbae>
  411e27:	movzx  eax,WORD PTR [rbp-0x30]
  411e2b:	movsx  edx,ax
  411e2e:	mov    rax,QWORD PTR [rbp-0x18]
  411e32:	mov    esi,edx
  411e34:	mov    rdi,rax
  411e37:	call   405382 <_start@@Base+0x222>
  411e3c:	jmp    412cac <_start@@Base+0xdb4c>
  411e41:	mov    rdx,QWORD PTR [rbp-0x58]
  411e45:	mov    rcx,QWORD PTR [rbp-0x50]
  411e49:	mov    rax,QWORD PTR [rbp-0x48]
  411e4d:	mov    rsi,rcx
  411e50:	mov    rdi,rax
  411e53:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411e58:	mov    QWORD PTR [rbp-0x50],rax
  411e5c:	jmp    412cac <_start@@Base+0xdb4c>
  411e61:	mov    rdx,QWORD PTR [rbp-0x58]
  411e65:	mov    rcx,QWORD PTR [rbp-0x50]
  411e69:	mov    rax,QWORD PTR [rbp-0x48]
  411e6d:	mov    rsi,rcx
  411e70:	mov    rdi,rax
  411e73:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411e78:	mov    QWORD PTR [rbp-0x50],rax
  411e7c:	jmp    412cac <_start@@Base+0xdb4c>
  411e81:	movabs rax,0xffffff0000000000
  411e8b:	and    rax,QWORD PTR [rbp-0x28]
  411e8f:	mov    rdx,rax
  411e92:	movabs rax,0x6936340000000000
  411e9c:	cmp    rdx,rax
  411e9f:	jne    411fd8 <_start@@Base+0xce78>
  411ea5:	mov    rax,QWORD PTR [rbp-0x50]
  411ea9:	mov    QWORD PTR [rbp-0x20],rax
  411ead:	mov    rdx,QWORD PTR [rbp-0x58]
  411eb1:	mov    rsi,QWORD PTR [rbp-0x20]
  411eb5:	mov    rax,QWORD PTR [rbp-0x48]
  411eb9:	mov    ecx,0x3
  411ebe:	mov    rdi,rax
  411ec1:	call   405c48 <_start@@Base+0xae8>
  411ec6:	mov    QWORD PTR [rbp-0x50],rax
  411eca:	mov    rax,QWORD PTR [rbp-0x20]
  411ece:	cmp    rax,QWORD PTR [rbp-0x50]
  411ed2:	je     411fb8 <_start@@Base+0xce58>
  411ed8:	mov    QWORD PTR [rbp-0x30],0x0
  411ee0:	mov    rax,QWORD PTR [rbp-0x50]
  411ee4:	mov    QWORD PTR [rbp-0x20],rax
  411ee8:	lea    rcx,[rbp-0x30]
  411eec:	mov    rdx,QWORD PTR [rbp-0x58]
  411ef0:	mov    rsi,QWORD PTR [rbp-0x20]
  411ef4:	mov    rax,QWORD PTR [rbp-0x48]
  411ef8:	mov    rdi,rax
  411efb:	call   40661a <_start@@Base+0x14ba>
  411f00:	mov    QWORD PTR [rbp-0x50],rax
  411f04:	mov    rax,QWORD PTR [rbp-0x20]
  411f08:	cmp    rax,QWORD PTR [rbp-0x50]
  411f0c:	jne    411f58 <_start@@Base+0xcdf8>
  411f0e:	mov    rax,QWORD PTR [rbp-0x50]
  411f12:	mov    QWORD PTR [rbp-0x20],rax
  411f16:	lea    rcx,[rbp-0x30]
  411f1a:	mov    rdx,QWORD PTR [rbp-0x58]
  411f1e:	mov    rsi,QWORD PTR [rbp-0x20]
  411f22:	mov    rax,QWORD PTR [rbp-0x48]
  411f26:	mov    r8,rcx
  411f29:	lea    rcx,[rip+0x328b0]        # 4447e0 <__data_start@@Base+0x720>
  411f30:	mov    rdi,rax
  411f33:	call   406f8e <_start@@Base+0x1e2e>
  411f38:	mov    QWORD PTR [rbp-0x50],rax
  411f3c:	mov    rax,QWORD PTR [rbp-0x50]
  411f40:	cmp    rax,QWORD PTR [rbp-0x20]
  411f44:	je     412d36 <_start@@Base+0xdbd6>
  411f4a:	mov    rax,QWORD PTR [rbp-0x50]
  411f4e:	cmp    rax,QWORD PTR [rbp-0x58]
  411f52:	je     412d36 <_start@@Base+0xdbd6>
  411f58:	mov    rax,QWORD PTR [rbp-0x30]
  411f5c:	test   rax,rax
  411f5f:	jne    411f73 <_start@@Base+0xce13>
  411f61:	mov    rax,QWORD PTR [rbp-0x48]
  411f65:	mov    eax,DWORD PTR [rax+0x10]
  411f68:	and    eax,0x2
  411f6b:	test   eax,eax
  411f6d:	je     412cac <_start@@Base+0xdb4c>
  411f73:	mov    rax,QWORD PTR [rbp-0x48]
  411f77:	mov    rax,QWORD PTR [rax]
  411f7a:	mov    ecx,0x8
  411f7f:	mov    edx,0x8
  411f84:	mov    esi,0x6
  411f89:	mov    rdi,rax
  411f8c:	call   41ee2d <flatcc_builder_table_add@@Base>
  411f91:	mov    QWORD PTR [rbp-0x18],rax
  411f95:	cmp    QWORD PTR [rbp-0x18],0x0
  411f9a:	je     412d11 <_start@@Base+0xdbb1>
  411fa0:	mov    rdx,QWORD PTR [rbp-0x30]
  411fa4:	mov    rax,QWORD PTR [rbp-0x18]
  411fa8:	mov    rsi,rdx
  411fab:	mov    rdi,rax
  411fae:	call   4053e9 <_start@@Base+0x289>
  411fb3:	jmp    412cac <_start@@Base+0xdb4c>
  411fb8:	mov    rdx,QWORD PTR [rbp-0x58]
  411fbc:	mov    rcx,QWORD PTR [rbp-0x50]
  411fc0:	mov    rax,QWORD PTR [rbp-0x48]
  411fc4:	mov    rsi,rcx
  411fc7:	mov    rdi,rax
  411fca:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  411fcf:	mov    QWORD PTR [rbp-0x50],rax
  411fd3:	jmp    412cac <_start@@Base+0xdb4c>
  411fd8:	movabs rax,0xffffff0000000000
  411fe2:	and    rax,QWORD PTR [rbp-0x28]
  411fe6:	mov    rdx,rax
  411fe9:	movabs rax,0x6933320000000000
  411ff3:	cmp    rdx,rax
  411ff6:	jne    41212a <_start@@Base+0xcfca>
  411ffc:	mov    rax,QWORD PTR [rbp-0x50]
  412000:	mov    QWORD PTR [rbp-0x20],rax
  412004:	mov    rdx,QWORD PTR [rbp-0x58]
  412008:	mov    rsi,QWORD PTR [rbp-0x20]
  41200c:	mov    rax,QWORD PTR [rbp-0x48]
  412010:	mov    ecx,0x3
  412015:	mov    rdi,rax
  412018:	call   405c48 <_start@@Base+0xae8>
  41201d:	mov    QWORD PTR [rbp-0x50],rax
  412021:	mov    rax,QWORD PTR [rbp-0x20]
  412025:	cmp    rax,QWORD PTR [rbp-0x50]
  412029:	je     41210a <_start@@Base+0xcfaa>
  41202f:	mov    DWORD PTR [rbp-0x30],0x0
  412036:	mov    rax,QWORD PTR [rbp-0x50]
  41203a:	mov    QWORD PTR [rbp-0x20],rax
  41203e:	lea    rcx,[rbp-0x30]
  412042:	mov    rdx,QWORD PTR [rbp-0x58]
  412046:	mov    rsi,QWORD PTR [rbp-0x20]
  41204a:	mov    rax,QWORD PTR [rbp-0x48]
  41204e:	mov    rdi,rax
  412051:	call   4066e1 <_start@@Base+0x1581>
  412056:	mov    QWORD PTR [rbp-0x50],rax
  41205a:	mov    rax,QWORD PTR [rbp-0x20]
  41205e:	cmp    rax,QWORD PTR [rbp-0x50]
  412062:	jne    4120ae <_start@@Base+0xcf4e>
  412064:	mov    rax,QWORD PTR [rbp-0x50]
  412068:	mov    QWORD PTR [rbp-0x20],rax
  41206c:	lea    rcx,[rbp-0x30]
  412070:	mov    rdx,QWORD PTR [rbp-0x58]
  412074:	mov    rsi,QWORD PTR [rbp-0x20]
  412078:	mov    rax,QWORD PTR [rbp-0x48]
  41207c:	mov    r8,rcx
  41207f:	lea    rcx,[rip+0x3277a]        # 444800 <__data_start@@Base+0x740>
  412086:	mov    rdi,rax
  412089:	call   4070ed <_start@@Base+0x1f8d>
  41208e:	mov    QWORD PTR [rbp-0x50],rax
  412092:	mov    rax,QWORD PTR [rbp-0x50]
  412096:	cmp    rax,QWORD PTR [rbp-0x20]
  41209a:	je     412d36 <_start@@Base+0xdbd6>
  4120a0:	mov    rax,QWORD PTR [rbp-0x50]
  4120a4:	cmp    rax,QWORD PTR [rbp-0x58]
  4120a8:	je     412d36 <_start@@Base+0xdbd6>
  4120ae:	mov    eax,DWORD PTR [rbp-0x30]
  4120b1:	test   eax,eax
  4120b3:	jne    4120c7 <_start@@Base+0xcf67>
  4120b5:	mov    rax,QWORD PTR [rbp-0x48]
  4120b9:	mov    eax,DWORD PTR [rax+0x10]
  4120bc:	and    eax,0x2
  4120bf:	test   eax,eax
  4120c1:	je     412cac <_start@@Base+0xdb4c>
  4120c7:	mov    rax,QWORD PTR [rbp-0x48]
  4120cb:	mov    rax,QWORD PTR [rax]
  4120ce:	mov    ecx,0x4
  4120d3:	mov    edx,0x4
  4120d8:	mov    esi,0x4
  4120dd:	mov    rdi,rax
  4120e0:	call   41ee2d <flatcc_builder_table_add@@Base>
  4120e5:	mov    QWORD PTR [rbp-0x18],rax
  4120e9:	cmp    QWORD PTR [rbp-0x18],0x0
  4120ee:	je     412d14 <_start@@Base+0xdbb4>
  4120f4:	mov    edx,DWORD PTR [rbp-0x30]
  4120f7:	mov    rax,QWORD PTR [rbp-0x18]
  4120fb:	mov    esi,edx
  4120fd:	mov    rdi,rax
  412100:	call   4053b7 <_start@@Base+0x257>
  412105:	jmp    412cac <_start@@Base+0xdb4c>
  41210a:	mov    rdx,QWORD PTR [rbp-0x58]
  41210e:	mov    rcx,QWORD PTR [rbp-0x50]
  412112:	mov    rax,QWORD PTR [rbp-0x48]
  412116:	mov    rsi,rcx
  412119:	mov    rdi,rax
  41211c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412121:	mov    QWORD PTR [rbp-0x50],rax
  412125:	jmp    412cac <_start@@Base+0xdb4c>
  41212a:	mov    rdx,QWORD PTR [rbp-0x58]
  41212e:	mov    rcx,QWORD PTR [rbp-0x50]
  412132:	mov    rax,QWORD PTR [rbp-0x48]
  412136:	mov    rsi,rcx
  412139:	mov    rdi,rax
  41213c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412141:	mov    QWORD PTR [rbp-0x50],rax
  412145:	jmp    412cac <_start@@Base+0xdb4c>
  41214a:	movabs rax,0x753633ffffffffff
  412154:	cmp    QWORD PTR [rbp-0x28],rax
  412158:	ja     4125af <_start@@Base+0xd44f>
  41215e:	movabs rax,0x753135ffffffffff
  412168:	cmp    QWORD PTR [rbp-0x28],rax
  41216c:	ja     4122e6 <_start@@Base+0xd186>
  412172:	movabs rax,0xffff000000000000
  41217c:	and    rax,QWORD PTR [rbp-0x28]
  412180:	mov    rdx,rax
  412183:	movabs rax,0x6938000000000000
  41218d:	cmp    rdx,rax
  412190:	jne    4122c6 <_start@@Base+0xd166>
  412196:	mov    rax,QWORD PTR [rbp-0x50]
  41219a:	mov    QWORD PTR [rbp-0x20],rax
  41219e:	mov    rdx,QWORD PTR [rbp-0x58]
  4121a2:	mov    rsi,QWORD PTR [rbp-0x20]
  4121a6:	mov    rax,QWORD PTR [rbp-0x48]
  4121aa:	mov    ecx,0x2
  4121af:	mov    rdi,rax
  4121b2:	call   405c48 <_start@@Base+0xae8>
  4121b7:	mov    QWORD PTR [rbp-0x50],rax
  4121bb:	mov    rax,QWORD PTR [rbp-0x20]
  4121bf:	cmp    rax,QWORD PTR [rbp-0x50]
  4121c3:	je     4122a6 <_start@@Base+0xd146>
  4121c9:	mov    BYTE PTR [rbp-0x30],0x0
  4121cd:	mov    rax,QWORD PTR [rbp-0x50]
  4121d1:	mov    QWORD PTR [rbp-0x20],rax
  4121d5:	lea    rcx,[rbp-0x30]
  4121d9:	mov    rdx,QWORD PTR [rbp-0x58]
  4121dd:	mov    rsi,QWORD PTR [rbp-0x20]
  4121e1:	mov    rax,QWORD PTR [rbp-0x48]
  4121e5:	mov    rdi,rax
  4121e8:	call   40686c <_start@@Base+0x170c>
  4121ed:	mov    QWORD PTR [rbp-0x50],rax
  4121f1:	mov    rax,QWORD PTR [rbp-0x20]
  4121f5:	cmp    rax,QWORD PTR [rbp-0x50]
  4121f9:	jne    412245 <_start@@Base+0xd0e5>
  4121fb:	mov    rax,QWORD PTR [rbp-0x50]
  4121ff:	mov    QWORD PTR [rbp-0x20],rax
  412203:	lea    rcx,[rbp-0x30]
  412207:	mov    rdx,QWORD PTR [rbp-0x58]
  41220b:	mov    rsi,QWORD PTR [rbp-0x20]
  41220f:	mov    rax,QWORD PTR [rbp-0x48]
  412213:	mov    r8,rcx
  412216:	lea    rcx,[rip+0x32603]        # 444820 <__data_start@@Base+0x760>
  41221d:	mov    rdi,rax
  412220:	call   4073a4 <_start@@Base+0x2244>
  412225:	mov    QWORD PTR [rbp-0x50],rax
  412229:	mov    rax,QWORD PTR [rbp-0x50]
  41222d:	cmp    rax,QWORD PTR [rbp-0x20]
  412231:	je     412d36 <_start@@Base+0xdbd6>
  412237:	mov    rax,QWORD PTR [rbp-0x50]
  41223b:	cmp    rax,QWORD PTR [rbp-0x58]
  41223f:	je     412d36 <_start@@Base+0xdbd6>
  412245:	movzx  eax,BYTE PTR [rbp-0x30]
  412249:	test   al,al
  41224b:	jne    41225f <_start@@Base+0xd0ff>
  41224d:	mov    rax,QWORD PTR [rbp-0x48]
  412251:	mov    eax,DWORD PTR [rax+0x10]
  412254:	and    eax,0x2
  412257:	test   eax,eax
  412259:	je     412cac <_start@@Base+0xdb4c>
  41225f:	mov    rax,QWORD PTR [rbp-0x48]
  412263:	mov    rax,QWORD PTR [rax]
  412266:	mov    ecx,0x1
  41226b:	mov    edx,0x1
  412270:	mov    esi,0x0
  412275:	mov    rdi,rax
  412278:	call   41ee2d <flatcc_builder_table_add@@Base>
  41227d:	mov    QWORD PTR [rbp-0x18],rax
  412281:	cmp    QWORD PTR [rbp-0x18],0x0
  412286:	je     412d17 <_start@@Base+0xdbb7>
  41228c:	movzx  eax,BYTE PTR [rbp-0x30]
  412290:	movsx  edx,al
  412293:	mov    rax,QWORD PTR [rbp-0x18]
  412297:	mov    esi,edx
  412299:	mov    rdi,rax
  41229c:	call   40534b <_start@@Base+0x1eb>
  4122a1:	jmp    412cac <_start@@Base+0xdb4c>
  4122a6:	mov    rdx,QWORD PTR [rbp-0x58]
  4122aa:	mov    rcx,QWORD PTR [rbp-0x50]
  4122ae:	mov    rax,QWORD PTR [rbp-0x48]
  4122b2:	mov    rsi,rcx
  4122b5:	mov    rdi,rax
  4122b8:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4122bd:	mov    QWORD PTR [rbp-0x50],rax
  4122c1:	jmp    412cac <_start@@Base+0xdb4c>
  4122c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4122ca:	mov    rcx,QWORD PTR [rbp-0x50]
  4122ce:	mov    rax,QWORD PTR [rbp-0x48]
  4122d2:	mov    rsi,rcx
  4122d5:	mov    rdi,rax
  4122d8:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4122dd:	mov    QWORD PTR [rbp-0x50],rax
  4122e1:	jmp    412cac <_start@@Base+0xdb4c>
  4122e6:	movabs rax,0xffffff0000000000
  4122f0:	and    rax,QWORD PTR [rbp-0x28]
  4122f4:	mov    rdx,rax
  4122f7:	movabs rax,0x7533320000000000
  412301:	cmp    rdx,rax
  412304:	jne    412438 <_start@@Base+0xd2d8>
  41230a:	mov    rax,QWORD PTR [rbp-0x50]
  41230e:	mov    QWORD PTR [rbp-0x20],rax
  412312:	mov    rdx,QWORD PTR [rbp-0x58]
  412316:	mov    rsi,QWORD PTR [rbp-0x20]
  41231a:	mov    rax,QWORD PTR [rbp-0x48]
  41231e:	mov    ecx,0x3
  412323:	mov    rdi,rax
  412326:	call   405c48 <_start@@Base+0xae8>
  41232b:	mov    QWORD PTR [rbp-0x50],rax
  41232f:	mov    rax,QWORD PTR [rbp-0x20]
  412333:	cmp    rax,QWORD PTR [rbp-0x50]
  412337:	je     412418 <_start@@Base+0xd2b8>
  41233d:	mov    DWORD PTR [rbp-0x30],0x0
  412344:	mov    rax,QWORD PTR [rbp-0x50]
  412348:	mov    QWORD PTR [rbp-0x20],rax
  41234c:	lea    rcx,[rbp-0x30]
  412350:	mov    rdx,QWORD PTR [rbp-0x58]
  412354:	mov    rsi,QWORD PTR [rbp-0x20]
  412358:	mov    rax,QWORD PTR [rbp-0x48]
  41235c:	mov    rdi,rax
  41235f:	call   4063cc <_start@@Base+0x126c>
  412364:	mov    QWORD PTR [rbp-0x50],rax
  412368:	mov    rax,QWORD PTR [rbp-0x20]
  41236c:	cmp    rax,QWORD PTR [rbp-0x50]
  412370:	jne    4123bc <_start@@Base+0xd25c>
  412372:	mov    rax,QWORD PTR [rbp-0x50]
  412376:	mov    QWORD PTR [rbp-0x20],rax
  41237a:	lea    rcx,[rbp-0x30]
  41237e:	mov    rdx,QWORD PTR [rbp-0x58]
  412382:	mov    rsi,QWORD PTR [rbp-0x20]
  412386:	mov    rax,QWORD PTR [rbp-0x48]
  41238a:	mov    r8,rcx
  41238d:	lea    rcx,[rip+0x324ac]        # 444840 <__data_start@@Base+0x780>
  412394:	mov    rdi,rax
  412397:	call   406b86 <_start@@Base+0x1a26>
  41239c:	mov    QWORD PTR [rbp-0x50],rax
  4123a0:	mov    rax,QWORD PTR [rbp-0x50]
  4123a4:	cmp    rax,QWORD PTR [rbp-0x20]
  4123a8:	je     412d36 <_start@@Base+0xdbd6>
  4123ae:	mov    rax,QWORD PTR [rbp-0x50]
  4123b2:	cmp    rax,QWORD PTR [rbp-0x58]
  4123b6:	je     412d36 <_start@@Base+0xdbd6>
  4123bc:	mov    eax,DWORD PTR [rbp-0x30]
  4123bf:	test   eax,eax
  4123c1:	jne    4123d5 <_start@@Base+0xd275>
  4123c3:	mov    rax,QWORD PTR [rbp-0x48]
  4123c7:	mov    eax,DWORD PTR [rax+0x10]
  4123ca:	and    eax,0x2
  4123cd:	test   eax,eax
  4123cf:	je     412cac <_start@@Base+0xdb4c>
  4123d5:	mov    rax,QWORD PTR [rbp-0x48]
  4123d9:	mov    rax,QWORD PTR [rax]
  4123dc:	mov    ecx,0x4
  4123e1:	mov    edx,0x4
  4123e6:	mov    esi,0x5
  4123eb:	mov    rdi,rax
  4123ee:	call   41ee2d <flatcc_builder_table_add@@Base>
  4123f3:	mov    QWORD PTR [rbp-0x18],rax
  4123f7:	cmp    QWORD PTR [rbp-0x18],0x0
  4123fc:	je     412d1a <_start@@Base+0xdbba>
  412402:	mov    edx,DWORD PTR [rbp-0x30]
  412405:	mov    rax,QWORD PTR [rbp-0x18]
  412409:	mov    esi,edx
  41240b:	mov    rdi,rax
  41240e:	call   4052e1 <_start@@Base+0x181>
  412413:	jmp    412cac <_start@@Base+0xdb4c>
  412418:	mov    rdx,QWORD PTR [rbp-0x58]
  41241c:	mov    rcx,QWORD PTR [rbp-0x50]
  412420:	mov    rax,QWORD PTR [rbp-0x48]
  412424:	mov    rsi,rcx
  412427:	mov    rdi,rax
  41242a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41242f:	mov    QWORD PTR [rbp-0x50],rax
  412433:	jmp    412cac <_start@@Base+0xdb4c>
  412438:	movabs rax,0xffffff0000000000
  412442:	and    rax,QWORD PTR [rbp-0x28]
  412446:	mov    rdx,rax
  412449:	movabs rax,0x7531360000000000
  412453:	cmp    rdx,rax
  412456:	jne    41258f <_start@@Base+0xd42f>
  41245c:	mov    rax,QWORD PTR [rbp-0x50]
  412460:	mov    QWORD PTR [rbp-0x20],rax
  412464:	mov    rdx,QWORD PTR [rbp-0x58]
  412468:	mov    rsi,QWORD PTR [rbp-0x20]
  41246c:	mov    rax,QWORD PTR [rbp-0x48]
  412470:	mov    ecx,0x3
  412475:	mov    rdi,rax
  412478:	call   405c48 <_start@@Base+0xae8>
  41247d:	mov    QWORD PTR [rbp-0x50],rax
  412481:	mov    rax,QWORD PTR [rbp-0x20]
  412485:	cmp    rax,QWORD PTR [rbp-0x50]
  412489:	je     41256f <_start@@Base+0xd40f>
  41248f:	mov    WORD PTR [rbp-0x30],0x0
  412495:	mov    rax,QWORD PTR [rbp-0x50]
  412499:	mov    QWORD PTR [rbp-0x20],rax
  41249d:	lea    rcx,[rbp-0x30]
  4124a1:	mov    rdx,QWORD PTR [rbp-0x58]
  4124a5:	mov    rsi,QWORD PTR [rbp-0x20]
  4124a9:	mov    rax,QWORD PTR [rbp-0x48]
  4124ad:	mov    rdi,rax
  4124b0:	call   406492 <_start@@Base+0x1332>
  4124b5:	mov    QWORD PTR [rbp-0x50],rax
  4124b9:	mov    rax,QWORD PTR [rbp-0x20]
  4124bd:	cmp    rax,QWORD PTR [rbp-0x50]
  4124c1:	jne    41250d <_start@@Base+0xd3ad>
  4124c3:	mov    rax,QWORD PTR [rbp-0x50]
  4124c7:	mov    QWORD PTR [rbp-0x20],rax
  4124cb:	lea    rcx,[rbp-0x30]
  4124cf:	mov    rdx,QWORD PTR [rbp-0x58]
  4124d3:	mov    rsi,QWORD PTR [rbp-0x20]
  4124d7:	mov    rax,QWORD PTR [rbp-0x48]
  4124db:	mov    r8,rcx
  4124de:	lea    rcx,[rip+0x3237b]        # 444860 <__data_start@@Base+0x7a0>
  4124e5:	mov    rdi,rax
  4124e8:	call   406cdf <_start@@Base+0x1b7f>
  4124ed:	mov    QWORD PTR [rbp-0x50],rax
  4124f1:	mov    rax,QWORD PTR [rbp-0x50]
  4124f5:	cmp    rax,QWORD PTR [rbp-0x20]
  4124f9:	je     412d36 <_start@@Base+0xdbd6>
  4124ff:	mov    rax,QWORD PTR [rbp-0x50]
  412503:	cmp    rax,QWORD PTR [rbp-0x58]
  412507:	je     412d36 <_start@@Base+0xdbd6>
  41250d:	movzx  eax,WORD PTR [rbp-0x30]
  412511:	test   ax,ax
  412514:	jne    412528 <_start@@Base+0xd3c8>
  412516:	mov    rax,QWORD PTR [rbp-0x48]
  41251a:	mov    eax,DWORD PTR [rax+0x10]
  41251d:	and    eax,0x2
  412520:	test   eax,eax
  412522:	je     412cac <_start@@Base+0xdb4c>
  412528:	mov    rax,QWORD PTR [rbp-0x48]
  41252c:	mov    rax,QWORD PTR [rax]
  41252f:	mov    ecx,0x2
  412534:	mov    edx,0x2
  412539:	mov    esi,0x3
  41253e:	mov    rdi,rax
  412541:	call   41ee2d <flatcc_builder_table_add@@Base>
  412546:	mov    QWORD PTR [rbp-0x18],rax
  41254a:	cmp    QWORD PTR [rbp-0x18],0x0
  41254f:	je     412d1d <_start@@Base+0xdbbd>
  412555:	movzx  eax,WORD PTR [rbp-0x30]
  412559:	movzx  edx,ax
  41255c:	mov    rax,QWORD PTR [rbp-0x18]
  412560:	mov    esi,edx
  412562:	mov    rdi,rax
  412565:	call   4052ac <_start@@Base+0x14c>
  41256a:	jmp    412cac <_start@@Base+0xdb4c>
  41256f:	mov    rdx,QWORD PTR [rbp-0x58]
  412573:	mov    rcx,QWORD PTR [rbp-0x50]
  412577:	mov    rax,QWORD PTR [rbp-0x48]
  41257b:	mov    rsi,rcx
  41257e:	mov    rdi,rax
  412581:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412586:	mov    QWORD PTR [rbp-0x50],rax
  41258a:	jmp    412cac <_start@@Base+0xdb4c>
  41258f:	mov    rdx,QWORD PTR [rbp-0x58]
  412593:	mov    rcx,QWORD PTR [rbp-0x50]
  412597:	mov    rax,QWORD PTR [rbp-0x48]
  41259b:	mov    rsi,rcx
  41259e:	mov    rdi,rax
  4125a1:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4125a6:	mov    QWORD PTR [rbp-0x50],rax
  4125aa:	jmp    412cac <_start@@Base+0xdb4c>
  4125af:	movabs rax,0x7537ffffffffffff
  4125b9:	cmp    QWORD PTR [rbp-0x28],rax
  4125bd:	ja     41273a <_start@@Base+0xd5da>
  4125c3:	movabs rax,0xffffff0000000000
  4125cd:	and    rax,QWORD PTR [rbp-0x28]
  4125d1:	mov    rdx,rax
  4125d4:	movabs rax,0x7536340000000000
  4125de:	cmp    rdx,rax
  4125e1:	jne    41271a <_start@@Base+0xd5ba>
  4125e7:	mov    rax,QWORD PTR [rbp-0x50]
  4125eb:	mov    QWORD PTR [rbp-0x20],rax
  4125ef:	mov    rdx,QWORD PTR [rbp-0x58]
  4125f3:	mov    rsi,QWORD PTR [rbp-0x20]
  4125f7:	mov    rax,QWORD PTR [rbp-0x48]
  4125fb:	mov    ecx,0x3
  412600:	mov    rdi,rax
  412603:	call   405c48 <_start@@Base+0xae8>
  412608:	mov    QWORD PTR [rbp-0x50],rax
  41260c:	mov    rax,QWORD PTR [rbp-0x20]
  412610:	cmp    rax,QWORD PTR [rbp-0x50]
  412614:	je     4126fa <_start@@Base+0xd59a>
  41261a:	mov    QWORD PTR [rbp-0x30],0x0
  412622:	mov    rax,QWORD PTR [rbp-0x50]
  412626:	mov    QWORD PTR [rbp-0x20],rax
  41262a:	lea    rcx,[rbp-0x30]
  41262e:	mov    rdx,QWORD PTR [rbp-0x58]
  412632:	mov    rsi,QWORD PTR [rbp-0x20]
  412636:	mov    rax,QWORD PTR [rbp-0x48]
  41263a:	mov    rdi,rax
  41263d:	call   406305 <_start@@Base+0x11a5>
  412642:	mov    QWORD PTR [rbp-0x50],rax
  412646:	mov    rax,QWORD PTR [rbp-0x20]
  41264a:	cmp    rax,QWORD PTR [rbp-0x50]
  41264e:	jne    41269a <_start@@Base+0xd53a>
  412650:	mov    rax,QWORD PTR [rbp-0x50]
  412654:	mov    QWORD PTR [rbp-0x20],rax
  412658:	lea    rcx,[rbp-0x30]
  41265c:	mov    rdx,QWORD PTR [rbp-0x58]
  412660:	mov    rsi,QWORD PTR [rbp-0x20]
  412664:	mov    rax,QWORD PTR [rbp-0x48]
  412668:	mov    r8,rcx
  41266b:	lea    rcx,[rip+0x3220e]        # 444880 <__data_start@@Base+0x7c0>
  412672:	mov    rdi,rax
  412675:	call   406a27 <_start@@Base+0x18c7>
  41267a:	mov    QWORD PTR [rbp-0x50],rax
  41267e:	mov    rax,QWORD PTR [rbp-0x50]
  412682:	cmp    rax,QWORD PTR [rbp-0x20]
  412686:	je     412d36 <_start@@Base+0xdbd6>
  41268c:	mov    rax,QWORD PTR [rbp-0x50]
  412690:	cmp    rax,QWORD PTR [rbp-0x58]
  412694:	je     412d36 <_start@@Base+0xdbd6>
  41269a:	mov    rax,QWORD PTR [rbp-0x30]
  41269e:	test   rax,rax
  4126a1:	jne    4126b5 <_start@@Base+0xd555>
  4126a3:	mov    rax,QWORD PTR [rbp-0x48]
  4126a7:	mov    eax,DWORD PTR [rax+0x10]
  4126aa:	and    eax,0x2
  4126ad:	test   eax,eax
  4126af:	je     412cac <_start@@Base+0xdb4c>
  4126b5:	mov    rax,QWORD PTR [rbp-0x48]
  4126b9:	mov    rax,QWORD PTR [rax]
  4126bc:	mov    ecx,0x8
  4126c1:	mov    edx,0x8
  4126c6:	mov    esi,0x7
  4126cb:	mov    rdi,rax
  4126ce:	call   41ee2d <flatcc_builder_table_add@@Base>
  4126d3:	mov    QWORD PTR [rbp-0x18],rax
  4126d7:	cmp    QWORD PTR [rbp-0x18],0x0
  4126dc:	je     412d20 <_start@@Base+0xdbc0>
  4126e2:	mov    rdx,QWORD PTR [rbp-0x30]
  4126e6:	mov    rax,QWORD PTR [rbp-0x18]
  4126ea:	mov    rsi,rdx
  4126ed:	mov    rdi,rax
  4126f0:	call   405313 <_start@@Base+0x1b3>
  4126f5:	jmp    412cac <_start@@Base+0xdb4c>
  4126fa:	mov    rdx,QWORD PTR [rbp-0x58]
  4126fe:	mov    rcx,QWORD PTR [rbp-0x50]
  412702:	mov    rax,QWORD PTR [rbp-0x48]
  412706:	mov    rsi,rcx
  412709:	mov    rdi,rax
  41270c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412711:	mov    QWORD PTR [rbp-0x50],rax
  412715:	jmp    412cac <_start@@Base+0xdb4c>
  41271a:	mov    rdx,QWORD PTR [rbp-0x58]
  41271e:	mov    rcx,QWORD PTR [rbp-0x50]
  412722:	mov    rax,QWORD PTR [rbp-0x48]
  412726:	mov    rsi,rcx
  412729:	mov    rdi,rax
  41272c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412731:	mov    QWORD PTR [rbp-0x50],rax
  412735:	jmp    412cac <_start@@Base+0xdb4c>
  41273a:	movabs rax,0x7637ffffffffffff
  412744:	cmp    QWORD PTR [rbp-0x28],rax
  412748:	ja     4128c2 <_start@@Base+0xd762>
  41274e:	movabs rax,0xffff000000000000
  412758:	and    rax,QWORD PTR [rbp-0x28]
  41275c:	mov    rdx,rax
  41275f:	movabs rax,0x7538000000000000
  412769:	cmp    rdx,rax
  41276c:	jne    4128a2 <_start@@Base+0xd742>
  412772:	mov    rax,QWORD PTR [rbp-0x50]
  412776:	mov    QWORD PTR [rbp-0x20],rax
  41277a:	mov    rdx,QWORD PTR [rbp-0x58]
  41277e:	mov    rsi,QWORD PTR [rbp-0x20]
  412782:	mov    rax,QWORD PTR [rbp-0x48]
  412786:	mov    ecx,0x2
  41278b:	mov    rdi,rax
  41278e:	call   405c48 <_start@@Base+0xae8>
  412793:	mov    QWORD PTR [rbp-0x50],rax
  412797:	mov    rax,QWORD PTR [rbp-0x20]
  41279b:	cmp    rax,QWORD PTR [rbp-0x50]
  41279f:	je     412882 <_start@@Base+0xd722>
  4127a5:	mov    BYTE PTR [rbp-0x30],0x0
  4127a9:	mov    rax,QWORD PTR [rbp-0x50]
  4127ad:	mov    QWORD PTR [rbp-0x20],rax
  4127b1:	lea    rcx,[rbp-0x30]
  4127b5:	mov    rdx,QWORD PTR [rbp-0x58]
  4127b9:	mov    rsi,QWORD PTR [rbp-0x20]
  4127bd:	mov    rax,QWORD PTR [rbp-0x48]
  4127c1:	mov    rdi,rax
  4127c4:	call   406557 <_start@@Base+0x13f7>
  4127c9:	mov    QWORD PTR [rbp-0x50],rax
  4127cd:	mov    rax,QWORD PTR [rbp-0x20]
  4127d1:	cmp    rax,QWORD PTR [rbp-0x50]
  4127d5:	jne    412821 <_start@@Base+0xd6c1>
  4127d7:	mov    rax,QWORD PTR [rbp-0x50]
  4127db:	mov    QWORD PTR [rbp-0x20],rax
  4127df:	lea    rcx,[rbp-0x30]
  4127e3:	mov    rdx,QWORD PTR [rbp-0x58]
  4127e7:	mov    rsi,QWORD PTR [rbp-0x20]
  4127eb:	mov    rax,QWORD PTR [rbp-0x48]
  4127ef:	mov    r8,rcx
  4127f2:	lea    rcx,[rip+0x320a7]        # 4448a0 <__data_start@@Base+0x7e0>
  4127f9:	mov    rdi,rax
  4127fc:	call   406e39 <_start@@Base+0x1cd9>
  412801:	mov    QWORD PTR [rbp-0x50],rax
  412805:	mov    rax,QWORD PTR [rbp-0x50]
  412809:	cmp    rax,QWORD PTR [rbp-0x20]
  41280d:	je     412d36 <_start@@Base+0xdbd6>
  412813:	mov    rax,QWORD PTR [rbp-0x50]
  412817:	cmp    rax,QWORD PTR [rbp-0x58]
  41281b:	je     412d36 <_start@@Base+0xdbd6>
  412821:	movzx  eax,BYTE PTR [rbp-0x30]
  412825:	test   al,al
  412827:	jne    41283b <_start@@Base+0xd6db>
  412829:	mov    rax,QWORD PTR [rbp-0x48]
  41282d:	mov    eax,DWORD PTR [rax+0x10]
  412830:	and    eax,0x2
  412833:	test   eax,eax
  412835:	je     412cac <_start@@Base+0xdb4c>
  41283b:	mov    rax,QWORD PTR [rbp-0x48]
  41283f:	mov    rax,QWORD PTR [rax]
  412842:	mov    ecx,0x1
  412847:	mov    edx,0x1
  41284c:	mov    esi,0x1
  412851:	mov    rdi,rax
  412854:	call   41ee2d <flatcc_builder_table_add@@Base>
  412859:	mov    QWORD PTR [rbp-0x18],rax
  41285d:	cmp    QWORD PTR [rbp-0x18],0x0
  412862:	je     412d23 <_start@@Base+0xdbc3>
  412868:	movzx  eax,BYTE PTR [rbp-0x30]
  41286c:	movzx  edx,al
  41286f:	mov    rax,QWORD PTR [rbp-0x18]
  412873:	mov    esi,edx
  412875:	mov    rdi,rax
  412878:	call   405275 <_start@@Base+0x115>
  41287d:	jmp    412cac <_start@@Base+0xdb4c>
  412882:	mov    rdx,QWORD PTR [rbp-0x58]
  412886:	mov    rcx,QWORD PTR [rbp-0x50]
  41288a:	mov    rax,QWORD PTR [rbp-0x48]
  41288e:	mov    rsi,rcx
  412891:	mov    rdi,rax
  412894:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412899:	mov    QWORD PTR [rbp-0x50],rax
  41289d:	jmp    412cac <_start@@Base+0xdb4c>
  4128a2:	mov    rdx,QWORD PTR [rbp-0x58]
  4128a6:	mov    rcx,QWORD PTR [rbp-0x50]
  4128aa:	mov    rax,QWORD PTR [rbp-0x48]
  4128ae:	mov    rsi,rcx
  4128b1:	mov    rdi,rax
  4128b4:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4128b9:	mov    QWORD PTR [rbp-0x50],rax
  4128bd:	jmp    412cac <_start@@Base+0xdb4c>
  4128c2:	movabs rax,0xffffffff00000000
  4128cc:	and    rax,QWORD PTR [rbp-0x28]
  4128d0:	mov    rdx,rax
  4128d3:	movabs rax,0x7666363400000000
  4128dd:	cmp    rdx,rax
  4128e0:	jne    412ab1 <_start@@Base+0xd951>
  4128e6:	mov    rax,QWORD PTR [rbp-0x50]
  4128ea:	mov    QWORD PTR [rbp-0x20],rax
  4128ee:	mov    rdx,QWORD PTR [rbp-0x58]
  4128f2:	mov    rsi,QWORD PTR [rbp-0x20]
  4128f6:	mov    rax,QWORD PTR [rbp-0x48]
  4128fa:	mov    ecx,0x4
  4128ff:	mov    rdi,rax
  412902:	call   405c48 <_start@@Base+0xae8>
  412907:	mov    QWORD PTR [rbp-0x50],rax
  41290b:	mov    rax,QWORD PTR [rbp-0x20]
  41290f:	cmp    rax,QWORD PTR [rbp-0x50]
  412913:	je     412a91 <_start@@Base+0xd931>
  412919:	mov    rax,QWORD PTR [rbp-0x48]
  41291d:	mov    rax,QWORD PTR [rax]
  412920:	mov    ecx,0x1fffffff
  412925:	mov    edx,0x8
  41292a:	mov    esi,0x8
  41292f:	mov    rdi,rax
  412932:	call   41ca8f <flatcc_builder_start_vector@@Base>
  412937:	test   eax,eax
  412939:	jne    412d26 <_start@@Base+0xdbc6>
  41293f:	lea    rcx,[rbp-0x38]
  412943:	mov    rdx,QWORD PTR [rbp-0x58]
  412947:	mov    rsi,QWORD PTR [rbp-0x50]
  41294b:	mov    rax,QWORD PTR [rbp-0x48]
  41294f:	mov    rdi,rax
  412952:	call   405a4d <_start@@Base+0x8ed>
  412957:	mov    QWORD PTR [rbp-0x50],rax
  41295b:	jmp    412a39 <_start@@Base+0xd8d9>
  412960:	vxorpd xmm0,xmm0,xmm0
  412964:	vmovsd QWORD PTR [rbp-0x30],xmm0
  412969:	mov    rax,QWORD PTR [rbp-0x48]
  41296d:	mov    rax,QWORD PTR [rax]
  412970:	mov    esi,0x1
  412975:	mov    rdi,rax
  412978:	call   41c377 <flatcc_builder_extend_vector@@Base>
  41297d:	mov    QWORD PTR [rbp-0x18],rax
  412981:	cmp    QWORD PTR [rbp-0x18],0x0
  412986:	je     412d29 <_start@@Base+0xdbc9>
  41298c:	mov    rax,QWORD PTR [rbp-0x50]
  412990:	mov    QWORD PTR [rbp-0x20],rax
  412994:	lea    rcx,[rbp-0x30]
  412998:	mov    rdx,QWORD PTR [rbp-0x58]
  41299c:	mov    rsi,QWORD PTR [rbp-0x20]
  4129a0:	mov    rax,QWORD PTR [rbp-0x48]
  4129a4:	mov    rdi,rax
  4129a7:	call   42695d <flatcc_json_parser_double@@Base>
  4129ac:	mov    QWORD PTR [rbp-0x50],rax
  4129b0:	mov    rax,QWORD PTR [rbp-0x20]
  4129b4:	cmp    rax,QWORD PTR [rbp-0x50]
  4129b8:	jne    412a04 <_start@@Base+0xd8a4>
  4129ba:	mov    rax,QWORD PTR [rbp-0x50]
  4129be:	mov    QWORD PTR [rbp-0x20],rax
  4129c2:	lea    rcx,[rbp-0x30]
  4129c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4129ca:	mov    rsi,QWORD PTR [rbp-0x20]
  4129ce:	mov    rax,QWORD PTR [rbp-0x48]
  4129d2:	mov    r8,rcx
  4129d5:	lea    rcx,[rip+0x31ee4]        # 4448c0 <__data_start@@Base+0x800>
  4129dc:	mov    rdi,rax
  4129df:	call   4077b7 <_start@@Base+0x2657>
  4129e4:	mov    QWORD PTR [rbp-0x50],rax
  4129e8:	mov    rax,QWORD PTR [rbp-0x50]
  4129ec:	cmp    rax,QWORD PTR [rbp-0x20]
  4129f0:	je     412d29 <_start@@Base+0xdbc9>
  4129f6:	mov    rax,QWORD PTR [rbp-0x50]
  4129fa:	cmp    rax,QWORD PTR [rbp-0x58]
  4129fe:	je     412d29 <_start@@Base+0xdbc9>
  412a04:	mov    rdx,QWORD PTR [rbp-0x30]
  412a08:	mov    rax,QWORD PTR [rbp-0x18]
  412a0c:	mov    QWORD PTR [rbp-0x68],rdx
  412a10:	vmovsd xmm0,QWORD PTR [rbp-0x68]
  412a15:	mov    rdi,rax
  412a18:	call   405482 <_start@@Base+0x322>
  412a1d:	lea    rcx,[rbp-0x38]
  412a21:	mov    rdx,QWORD PTR [rbp-0x58]
  412a25:	mov    rsi,QWORD PTR [rbp-0x50]
  412a29:	mov    rax,QWORD PTR [rbp-0x48]
  412a2d:	mov    rdi,rax
  412a30:	call   405b0a <_start@@Base+0x9aa>
  412a35:	mov    QWORD PTR [rbp-0x50],rax
  412a39:	mov    eax,DWORD PTR [rbp-0x38]
  412a3c:	test   eax,eax
  412a3e:	jne    412960 <_start@@Base+0xd800>
  412a44:	mov    rax,QWORD PTR [rbp-0x48]
  412a48:	mov    rax,QWORD PTR [rax]
  412a4b:	mov    rdi,rax
  412a4e:	call   41dc65 <flatcc_builder_end_vector@@Base>
  412a53:	mov    DWORD PTR [rbp-0x34],eax
  412a56:	cmp    DWORD PTR [rbp-0x34],0x0
  412a5a:	je     412d36 <_start@@Base+0xdbd6>
  412a60:	mov    rax,QWORD PTR [rbp-0x48]
  412a64:	mov    rax,QWORD PTR [rax]
  412a67:	mov    esi,0xb
  412a6c:	mov    rdi,rax
  412a6f:	call   41effb <flatcc_builder_table_add_offset@@Base>
  412a74:	mov    QWORD PTR [rbp-0x10],rax
  412a78:	cmp    QWORD PTR [rbp-0x10],0x0
  412a7d:	je     412d36 <_start@@Base+0xdbd6>
  412a83:	mov    rax,QWORD PTR [rbp-0x10]
  412a87:	mov    edx,DWORD PTR [rbp-0x34]
  412a8a:	mov    DWORD PTR [rax],edx
  412a8c:	jmp    412cac <_start@@Base+0xdb4c>
  412a91:	mov    rdx,QWORD PTR [rbp-0x58]
  412a95:	mov    rcx,QWORD PTR [rbp-0x50]
  412a99:	mov    rax,QWORD PTR [rbp-0x48]
  412a9d:	mov    rsi,rcx
  412aa0:	mov    rdi,rax
  412aa3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412aa8:	mov    QWORD PTR [rbp-0x50],rax
  412aac:	jmp    412cac <_start@@Base+0xdb4c>
  412ab1:	movabs rax,0xffff000000000000
  412abb:	and    rax,QWORD PTR [rbp-0x28]
  412abf:	mov    rdx,rax
  412ac2:	movabs rax,0x7638000000000000
  412acc:	cmp    rdx,rax
  412acf:	jne    412c91 <_start@@Base+0xdb31>
  412ad5:	mov    rax,QWORD PTR [rbp-0x50]
  412ad9:	mov    QWORD PTR [rbp-0x20],rax
  412add:	mov    rdx,QWORD PTR [rbp-0x58]
  412ae1:	mov    rsi,QWORD PTR [rbp-0x20]
  412ae5:	mov    rax,QWORD PTR [rbp-0x48]
  412ae9:	mov    ecx,0x2
  412aee:	mov    rdi,rax
  412af1:	call   405c48 <_start@@Base+0xae8>
  412af6:	mov    QWORD PTR [rbp-0x50],rax
  412afa:	mov    rax,QWORD PTR [rbp-0x20]
  412afe:	cmp    rax,QWORD PTR [rbp-0x50]
  412b02:	je     412c74 <_start@@Base+0xdb14>
  412b08:	mov    rax,QWORD PTR [rbp-0x48]
  412b0c:	mov    rax,QWORD PTR [rax]
  412b0f:	mov    ecx,0xffffffff
  412b14:	mov    edx,0x1
  412b19:	mov    esi,0x1
  412b1e:	mov    rdi,rax
  412b21:	call   41ca8f <flatcc_builder_start_vector@@Base>
  412b26:	test   eax,eax
  412b28:	jne    412d2c <_start@@Base+0xdbcc>
  412b2e:	lea    rcx,[rbp-0x38]
  412b32:	mov    rdx,QWORD PTR [rbp-0x58]
  412b36:	mov    rsi,QWORD PTR [rbp-0x50]
  412b3a:	mov    rax,QWORD PTR [rbp-0x48]
  412b3e:	mov    rdi,rax
  412b41:	call   405a4d <_start@@Base+0x8ed>
  412b46:	mov    QWORD PTR [rbp-0x50],rax
  412b4a:	jmp    412c1f <_start@@Base+0xdabf>
  412b4f:	mov    BYTE PTR [rbp-0x30],0x0
  412b53:	mov    rax,QWORD PTR [rbp-0x48]
  412b57:	mov    rax,QWORD PTR [rax]
  412b5a:	mov    esi,0x1
  412b5f:	mov    rdi,rax
  412b62:	call   41c377 <flatcc_builder_extend_vector@@Base>
  412b67:	mov    QWORD PTR [rbp-0x18],rax
  412b6b:	cmp    QWORD PTR [rbp-0x18],0x0
  412b70:	je     412d2f <_start@@Base+0xdbcf>
  412b76:	mov    rax,QWORD PTR [rbp-0x50]
  412b7a:	mov    QWORD PTR [rbp-0x20],rax
  412b7e:	lea    rcx,[rbp-0x30]
  412b82:	mov    rdx,QWORD PTR [rbp-0x58]
  412b86:	mov    rsi,QWORD PTR [rbp-0x20]
  412b8a:	mov    rax,QWORD PTR [rbp-0x48]
  412b8e:	mov    rdi,rax
  412b91:	call   40686c <_start@@Base+0x170c>
  412b96:	mov    QWORD PTR [rbp-0x50],rax
  412b9a:	mov    rax,QWORD PTR [rbp-0x20]
  412b9e:	cmp    rax,QWORD PTR [rbp-0x50]
  412ba2:	jne    412bee <_start@@Base+0xda8e>
  412ba4:	mov    rax,QWORD PTR [rbp-0x50]
  412ba8:	mov    QWORD PTR [rbp-0x20],rax
  412bac:	lea    rcx,[rbp-0x30]
  412bb0:	mov    rdx,QWORD PTR [rbp-0x58]
  412bb4:	mov    rsi,QWORD PTR [rbp-0x20]
  412bb8:	mov    rax,QWORD PTR [rbp-0x48]
  412bbc:	mov    r8,rcx
  412bbf:	lea    rcx,[rip+0x31d1a]        # 4448e0 <__data_start@@Base+0x820>
  412bc6:	mov    rdi,rax
  412bc9:	call   4073a4 <_start@@Base+0x2244>
  412bce:	mov    QWORD PTR [rbp-0x50],rax
  412bd2:	mov    rax,QWORD PTR [rbp-0x50]
  412bd6:	cmp    rax,QWORD PTR [rbp-0x20]
  412bda:	je     412d2f <_start@@Base+0xdbcf>
  412be0:	mov    rax,QWORD PTR [rbp-0x50]
  412be4:	cmp    rax,QWORD PTR [rbp-0x58]
  412be8:	je     412d2f <_start@@Base+0xdbcf>
  412bee:	movzx  eax,BYTE PTR [rbp-0x30]
  412bf2:	movsx  edx,al
  412bf5:	mov    rax,QWORD PTR [rbp-0x18]
  412bf9:	mov    esi,edx
  412bfb:	mov    rdi,rax
  412bfe:	call   40534b <_start@@Base+0x1eb>
  412c03:	lea    rcx,[rbp-0x38]
  412c07:	mov    rdx,QWORD PTR [rbp-0x58]
  412c0b:	mov    rsi,QWORD PTR [rbp-0x50]
  412c0f:	mov    rax,QWORD PTR [rbp-0x48]
  412c13:	mov    rdi,rax
  412c16:	call   405b0a <_start@@Base+0x9aa>
  412c1b:	mov    QWORD PTR [rbp-0x50],rax
  412c1f:	mov    eax,DWORD PTR [rbp-0x38]
  412c22:	test   eax,eax
  412c24:	jne    412b4f <_start@@Base+0xd9ef>
  412c2a:	mov    rax,QWORD PTR [rbp-0x48]
  412c2e:	mov    rax,QWORD PTR [rax]
  412c31:	mov    rdi,rax
  412c34:	call   41dc65 <flatcc_builder_end_vector@@Base>
  412c39:	mov    DWORD PTR [rbp-0x34],eax
  412c3c:	cmp    DWORD PTR [rbp-0x34],0x0
  412c40:	je     412d36 <_start@@Base+0xdbd6>
  412c46:	mov    rax,QWORD PTR [rbp-0x48]
  412c4a:	mov    rax,QWORD PTR [rax]
  412c4d:	mov    esi,0xa
  412c52:	mov    rdi,rax
  412c55:	call   41effb <flatcc_builder_table_add_offset@@Base>
  412c5a:	mov    QWORD PTR [rbp-0x10],rax
  412c5e:	cmp    QWORD PTR [rbp-0x10],0x0
  412c63:	je     412d36 <_start@@Base+0xdbd6>
  412c69:	mov    rax,QWORD PTR [rbp-0x10]
  412c6d:	mov    edx,DWORD PTR [rbp-0x34]
  412c70:	mov    DWORD PTR [rax],edx
  412c72:	jmp    412cac <_start@@Base+0xdb4c>
  412c74:	mov    rdx,QWORD PTR [rbp-0x58]
  412c78:	mov    rcx,QWORD PTR [rbp-0x50]
  412c7c:	mov    rax,QWORD PTR [rbp-0x48]
  412c80:	mov    rsi,rcx
  412c83:	mov    rdi,rax
  412c86:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412c8b:	mov    QWORD PTR [rbp-0x50],rax
  412c8f:	jmp    412cac <_start@@Base+0xdb4c>
  412c91:	mov    rdx,QWORD PTR [rbp-0x58]
  412c95:	mov    rcx,QWORD PTR [rbp-0x50]
  412c99:	mov    rax,QWORD PTR [rbp-0x48]
  412c9d:	mov    rsi,rcx
  412ca0:	mov    rdi,rax
  412ca3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412ca8:	mov    QWORD PTR [rbp-0x50],rax
  412cac:	lea    rcx,[rbp-0x38]
  412cb0:	mov    rdx,QWORD PTR [rbp-0x58]
  412cb4:	mov    rsi,QWORD PTR [rbp-0x50]
  412cb8:	mov    rax,QWORD PTR [rbp-0x48]
  412cbc:	mov    rdi,rax
  412cbf:	call   40590f <_start@@Base+0x7af>
  412cc4:	mov    QWORD PTR [rbp-0x50],rax
  412cc8:	mov    eax,DWORD PTR [rbp-0x38]
  412ccb:	test   eax,eax
  412ccd:	jne    4119a2 <_start@@Base+0xc842>
  412cd3:	mov    rax,QWORD PTR [rbp-0x48]
  412cd7:	mov    eax,DWORD PTR [rax+0x1c]
  412cda:	test   eax,eax
  412cdc:	jne    412d32 <_start@@Base+0xdbd2>
  412cde:	mov    rax,QWORD PTR [rbp-0x48]
  412ce2:	mov    rax,QWORD PTR [rax]
  412ce5:	mov    rdi,rax
  412ce8:	call   41d7cb <flatcc_builder_end_table@@Base>
  412ced:	mov    edx,eax
  412cef:	mov    rax,QWORD PTR [rbp-0x60]
  412cf3:	mov    DWORD PTR [rax],edx
  412cf5:	mov    rax,QWORD PTR [rbp-0x60]
  412cf9:	mov    eax,DWORD PTR [rax]
  412cfb:	test   eax,eax
  412cfd:	je     412d35 <_start@@Base+0xdbd5>
  412cff:	mov    rax,QWORD PTR [rbp-0x50]
  412d03:	jmp    412d4f <_start@@Base+0xdbef>
  412d05:	nop
  412d06:	jmp    412d36 <_start@@Base+0xdbd6>
  412d08:	nop
  412d09:	jmp    412d36 <_start@@Base+0xdbd6>
  412d0b:	nop
  412d0c:	jmp    412d36 <_start@@Base+0xdbd6>
  412d0e:	nop
  412d0f:	jmp    412d36 <_start@@Base+0xdbd6>
  412d11:	nop
  412d12:	jmp    412d36 <_start@@Base+0xdbd6>
  412d14:	nop
  412d15:	jmp    412d36 <_start@@Base+0xdbd6>
  412d17:	nop
  412d18:	jmp    412d36 <_start@@Base+0xdbd6>
  412d1a:	nop
  412d1b:	jmp    412d36 <_start@@Base+0xdbd6>
  412d1d:	nop
  412d1e:	jmp    412d36 <_start@@Base+0xdbd6>
  412d20:	nop
  412d21:	jmp    412d36 <_start@@Base+0xdbd6>
  412d23:	nop
  412d24:	jmp    412d36 <_start@@Base+0xdbd6>
  412d26:	nop
  412d27:	jmp    412d36 <_start@@Base+0xdbd6>
  412d29:	nop
  412d2a:	jmp    412d36 <_start@@Base+0xdbd6>
  412d2c:	nop
  412d2d:	jmp    412d36 <_start@@Base+0xdbd6>
  412d2f:	nop
  412d30:	jmp    412d36 <_start@@Base+0xdbd6>
  412d32:	nop
  412d33:	jmp    412d36 <_start@@Base+0xdbd6>
  412d35:	nop
  412d36:	mov    rdx,QWORD PTR [rbp-0x58]
  412d3a:	mov    rsi,QWORD PTR [rbp-0x50]
  412d3e:	mov    rax,QWORD PTR [rbp-0x48]
  412d42:	mov    ecx,0x21
  412d47:	mov    rdi,rax
  412d4a:	call   425bce <flatcc_json_parser_set_error@@Base>
  412d4f:	mov    rdi,QWORD PTR [rbp-0x8]
  412d53:	xor    rdi,QWORD PTR fs:0x28
  412d5c:	je     412d63 <_start@@Base+0xdc03>
  412d5e:	call   405070 <__stack_chk_fail@plt>
  412d63:	leave  
  412d64:	ret    
  412d65:	push   rbp
  412d66:	mov    rbp,rsp
  412d69:	sub    rsp,0x50
  412d6d:	mov    QWORD PTR [rbp-0x38],rdi
  412d71:	mov    QWORD PTR [rbp-0x40],rsi
  412d75:	mov    QWORD PTR [rbp-0x48],rdx
  412d79:	mov    QWORD PTR [rbp-0x50],rcx
  412d7d:	mov    rax,QWORD PTR fs:0x28
  412d86:	mov    QWORD PTR [rbp-0x8],rax
  412d8a:	xor    eax,eax
  412d8c:	mov    rax,QWORD PTR [rbp-0x50]
  412d90:	mov    DWORD PTR [rax],0x0
  412d96:	mov    rax,QWORD PTR [rbp-0x38]
  412d9a:	mov    rax,QWORD PTR [rax]
  412d9d:	mov    esi,0x1
  412da2:	mov    rdi,rax
  412da5:	call   41ccc9 <flatcc_builder_start_table@@Base>
  412daa:	test   eax,eax
  412dac:	jne    41305f <_start@@Base+0xdeff>
  412db2:	lea    rcx,[rbp-0x28]
  412db6:	mov    rdx,QWORD PTR [rbp-0x48]
  412dba:	mov    rsi,QWORD PTR [rbp-0x40]
  412dbe:	mov    rax,QWORD PTR [rbp-0x38]
  412dc2:	mov    rdi,rax
  412dc5:	call   405852 <_start@@Base+0x6f2>
  412dca:	mov    QWORD PTR [rbp-0x40],rax
  412dce:	jmp    413022 <_start@@Base+0xdec2>
  412dd3:	mov    rdx,QWORD PTR [rbp-0x48]
  412dd7:	mov    rcx,QWORD PTR [rbp-0x40]
  412ddb:	mov    rax,QWORD PTR [rbp-0x38]
  412ddf:	mov    rsi,rcx
  412de2:	mov    rdi,rax
  412de5:	call   4055e5 <_start@@Base+0x485>
  412dea:	mov    QWORD PTR [rbp-0x40],rax
  412dee:	mov    rdx,QWORD PTR [rbp-0x48]
  412df2:	mov    rax,QWORD PTR [rbp-0x40]
  412df6:	mov    rsi,rdx
  412df9:	mov    rdi,rax
  412dfc:	call   405756 <_start@@Base+0x5f6>
  412e01:	mov    QWORD PTR [rbp-0x20],rax
  412e05:	movabs rax,0x73776f72645f6174
  412e0f:	cmp    QWORD PTR [rbp-0x20],rax
  412e13:	jne    412feb <_start@@Base+0xde8b>
  412e19:	add    QWORD PTR [rbp-0x40],0x8
  412e1e:	mov    rdx,QWORD PTR [rbp-0x48]
  412e22:	mov    rax,QWORD PTR [rbp-0x40]
  412e26:	mov    rsi,rdx
  412e29:	mov    rdi,rax
  412e2c:	call   405756 <_start@@Base+0x5f6>
  412e31:	mov    QWORD PTR [rbp-0x20],rax
  412e35:	movabs rax,0x7461636b5f64616d
  412e3f:	cmp    QWORD PTR [rbp-0x20],rax
  412e43:	jne    412fce <_start@@Base+0xde6e>
  412e49:	add    QWORD PTR [rbp-0x40],0x8
  412e4e:	mov    rdx,QWORD PTR [rbp-0x48]
  412e52:	mov    rax,QWORD PTR [rbp-0x40]
  412e56:	mov    rsi,rdx
  412e59:	mov    rdi,rax
  412e5c:	call   405756 <_start@@Base+0x5f6>
  412e61:	mov    QWORD PTR [rbp-0x20],rax
  412e65:	movabs rax,0xffffff0000000000
  412e6f:	and    rax,QWORD PTR [rbp-0x20]
  412e73:	mov    rdx,rax
  412e76:	movabs rax,0x6167650000000000
  412e80:	cmp    rdx,rax
  412e83:	jne    412fb1 <_start@@Base+0xde51>
  412e89:	mov    rax,QWORD PTR [rbp-0x40]
  412e8d:	mov    QWORD PTR [rbp-0x18],rax
  412e91:	mov    rdx,QWORD PTR [rbp-0x48]
  412e95:	mov    rsi,QWORD PTR [rbp-0x18]
  412e99:	mov    rax,QWORD PTR [rbp-0x38]
  412e9d:	mov    ecx,0x3
  412ea2:	mov    rdi,rax
  412ea5:	call   405c48 <_start@@Base+0xae8>
  412eaa:	mov    QWORD PTR [rbp-0x40],rax
  412eae:	mov    rax,QWORD PTR [rbp-0x18]
  412eb2:	cmp    rax,QWORD PTR [rbp-0x40]
  412eb6:	je     412f94 <_start@@Base+0xde34>
  412ebc:	mov    DWORD PTR [rbp-0x24],0x0
  412ec3:	mov    rax,QWORD PTR [rbp-0x40]
  412ec7:	mov    QWORD PTR [rbp-0x18],rax
  412ecb:	lea    rcx,[rbp-0x24]
  412ecf:	mov    rdx,QWORD PTR [rbp-0x48]
  412ed3:	mov    rsi,QWORD PTR [rbp-0x18]
  412ed7:	mov    rax,QWORD PTR [rbp-0x38]
  412edb:	mov    rdi,rax
  412ede:	call   4066e1 <_start@@Base+0x1581>
  412ee3:	mov    QWORD PTR [rbp-0x40],rax
  412ee7:	mov    rax,QWORD PTR [rbp-0x18]
  412eeb:	cmp    rax,QWORD PTR [rbp-0x40]
  412eef:	jne    412f3b <_start@@Base+0xdddb>
  412ef1:	mov    rax,QWORD PTR [rbp-0x40]
  412ef5:	mov    QWORD PTR [rbp-0x18],rax
  412ef9:	lea    rcx,[rbp-0x24]
  412efd:	mov    rdx,QWORD PTR [rbp-0x48]
  412f01:	mov    rsi,QWORD PTR [rbp-0x18]
  412f05:	mov    rax,QWORD PTR [rbp-0x38]
  412f09:	mov    r8,rcx
  412f0c:	lea    rcx,[rip+0x319ed]        # 444900 <__data_start@@Base+0x840>
  412f13:	mov    rdi,rax
  412f16:	call   4070ed <_start@@Base+0x1f8d>
  412f1b:	mov    QWORD PTR [rbp-0x40],rax
  412f1f:	mov    rax,QWORD PTR [rbp-0x40]
  412f23:	cmp    rax,QWORD PTR [rbp-0x18]
  412f27:	je     413069 <_start@@Base+0xdf09>
  412f2d:	mov    rax,QWORD PTR [rbp-0x40]
  412f31:	cmp    rax,QWORD PTR [rbp-0x48]
  412f35:	je     413069 <_start@@Base+0xdf09>
  412f3b:	mov    eax,DWORD PTR [rbp-0x24]
  412f3e:	test   eax,eax
  412f40:	jne    412f54 <_start@@Base+0xddf4>
  412f42:	mov    rax,QWORD PTR [rbp-0x38]
  412f46:	mov    eax,DWORD PTR [rax+0x10]
  412f49:	and    eax,0x2
  412f4c:	test   eax,eax
  412f4e:	je     413006 <_start@@Base+0xdea6>
  412f54:	mov    rax,QWORD PTR [rbp-0x38]
  412f58:	mov    rax,QWORD PTR [rax]
  412f5b:	mov    ecx,0x4
  412f60:	mov    edx,0x4
  412f65:	mov    esi,0x0
  412f6a:	mov    rdi,rax
  412f6d:	call   41ee2d <flatcc_builder_table_add@@Base>
  412f72:	mov    QWORD PTR [rbp-0x10],rax
  412f76:	cmp    QWORD PTR [rbp-0x10],0x0
  412f7b:	je     413062 <_start@@Base+0xdf02>
  412f81:	mov    edx,DWORD PTR [rbp-0x24]
  412f84:	mov    rax,QWORD PTR [rbp-0x10]
  412f88:	mov    esi,edx
  412f8a:	mov    rdi,rax
  412f8d:	call   4053b7 <_start@@Base+0x257>
  412f92:	jmp    413006 <_start@@Base+0xdea6>
  412f94:	mov    rdx,QWORD PTR [rbp-0x48]
  412f98:	mov    rcx,QWORD PTR [rbp-0x40]
  412f9c:	mov    rax,QWORD PTR [rbp-0x38]
  412fa0:	mov    rsi,rcx
  412fa3:	mov    rdi,rax
  412fa6:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412fab:	mov    QWORD PTR [rbp-0x40],rax
  412faf:	jmp    413006 <_start@@Base+0xdea6>
  412fb1:	mov    rdx,QWORD PTR [rbp-0x48]
  412fb5:	mov    rcx,QWORD PTR [rbp-0x40]
  412fb9:	mov    rax,QWORD PTR [rbp-0x38]
  412fbd:	mov    rsi,rcx
  412fc0:	mov    rdi,rax
  412fc3:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412fc8:	mov    QWORD PTR [rbp-0x40],rax
  412fcc:	jmp    413006 <_start@@Base+0xdea6>
  412fce:	mov    rdx,QWORD PTR [rbp-0x48]
  412fd2:	mov    rcx,QWORD PTR [rbp-0x40]
  412fd6:	mov    rax,QWORD PTR [rbp-0x38]
  412fda:	mov    rsi,rcx
  412fdd:	mov    rdi,rax
  412fe0:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  412fe5:	mov    QWORD PTR [rbp-0x40],rax
  412fe9:	jmp    413006 <_start@@Base+0xdea6>
  412feb:	mov    rdx,QWORD PTR [rbp-0x48]
  412fef:	mov    rcx,QWORD PTR [rbp-0x40]
  412ff3:	mov    rax,QWORD PTR [rbp-0x38]
  412ff7:	mov    rsi,rcx
  412ffa:	mov    rdi,rax
  412ffd:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413002:	mov    QWORD PTR [rbp-0x40],rax
  413006:	lea    rcx,[rbp-0x28]
  41300a:	mov    rdx,QWORD PTR [rbp-0x48]
  41300e:	mov    rsi,QWORD PTR [rbp-0x40]
  413012:	mov    rax,QWORD PTR [rbp-0x38]
  413016:	mov    rdi,rax
  413019:	call   40590f <_start@@Base+0x7af>
  41301e:	mov    QWORD PTR [rbp-0x40],rax
  413022:	mov    eax,DWORD PTR [rbp-0x28]
  413025:	test   eax,eax
  413027:	jne    412dd3 <_start@@Base+0xdc73>
  41302d:	mov    rax,QWORD PTR [rbp-0x38]
  413031:	mov    eax,DWORD PTR [rax+0x1c]
  413034:	test   eax,eax
  413036:	jne    413065 <_start@@Base+0xdf05>
  413038:	mov    rax,QWORD PTR [rbp-0x38]
  41303c:	mov    rax,QWORD PTR [rax]
  41303f:	mov    rdi,rax
  413042:	call   41d7cb <flatcc_builder_end_table@@Base>
  413047:	mov    edx,eax
  413049:	mov    rax,QWORD PTR [rbp-0x50]
  41304d:	mov    DWORD PTR [rax],edx
  41304f:	mov    rax,QWORD PTR [rbp-0x50]
  413053:	mov    eax,DWORD PTR [rax]
  413055:	test   eax,eax
  413057:	je     413068 <_start@@Base+0xdf08>
  413059:	mov    rax,QWORD PTR [rbp-0x40]
  41305d:	jmp    413082 <_start@@Base+0xdf22>
  41305f:	nop
  413060:	jmp    413069 <_start@@Base+0xdf09>
  413062:	nop
  413063:	jmp    413069 <_start@@Base+0xdf09>
  413065:	nop
  413066:	jmp    413069 <_start@@Base+0xdf09>
  413068:	nop
  413069:	mov    rdx,QWORD PTR [rbp-0x48]
  41306d:	mov    rsi,QWORD PTR [rbp-0x40]
  413071:	mov    rax,QWORD PTR [rbp-0x38]
  413075:	mov    ecx,0x21
  41307a:	mov    rdi,rax
  41307d:	call   425bce <flatcc_json_parser_set_error@@Base>
  413082:	mov    rdi,QWORD PTR [rbp-0x8]
  413086:	xor    rdi,QWORD PTR fs:0x28
  41308f:	je     413096 <_start@@Base+0xdf36>
  413091:	call   405070 <__stack_chk_fail@plt>
  413096:	leave  
  413097:	ret    
  413098:	push   rbp
  413099:	mov    rbp,rsp
  41309c:	sub    rsp,0x50
  4130a0:	mov    QWORD PTR [rbp-0x38],rdi
  4130a4:	mov    QWORD PTR [rbp-0x40],rsi
  4130a8:	mov    QWORD PTR [rbp-0x48],rdx
  4130ac:	mov    QWORD PTR [rbp-0x50],rcx
  4130b0:	mov    rax,QWORD PTR fs:0x28
  4130b9:	mov    QWORD PTR [rbp-0x8],rax
  4130bd:	xor    eax,eax
  4130bf:	lea    rcx,[rbp-0x24]
  4130c3:	mov    rdx,QWORD PTR [rbp-0x48]
  4130c7:	mov    rsi,QWORD PTR [rbp-0x40]
  4130cb:	mov    rax,QWORD PTR [rbp-0x38]
  4130cf:	mov    rdi,rax
  4130d2:	call   405852 <_start@@Base+0x6f2>
  4130d7:	mov    QWORD PTR [rbp-0x40],rax
  4130db:	jmp    4132a7 <_start@@Base+0xe147>
  4130e0:	mov    rdx,QWORD PTR [rbp-0x48]
  4130e4:	mov    rcx,QWORD PTR [rbp-0x40]
  4130e8:	mov    rax,QWORD PTR [rbp-0x38]
  4130ec:	mov    rsi,rcx
  4130ef:	mov    rdi,rax
  4130f2:	call   4055e5 <_start@@Base+0x485>
  4130f7:	mov    QWORD PTR [rbp-0x40],rax
  4130fb:	mov    rdx,QWORD PTR [rbp-0x48]
  4130ff:	mov    rax,QWORD PTR [rbp-0x40]
  413103:	mov    rsi,rdx
  413106:	mov    rdi,rax
  413109:	call   405756 <_start@@Base+0x5f6>
  41310e:	mov    QWORD PTR [rbp-0x20],rax
  413112:	movabs rax,0x686169725f6c656e
  41311c:	cmp    QWORD PTR [rbp-0x20],rax
  413120:	jne    413270 <_start@@Base+0xe110>
  413126:	add    QWORD PTR [rbp-0x40],0x8
  41312b:	mov    rdx,QWORD PTR [rbp-0x48]
  41312f:	mov    rax,QWORD PTR [rbp-0x40]
  413133:	mov    rsi,rdx
  413136:	mov    rdi,rax
  413139:	call   405756 <_start@@Base+0x5f6>
  41313e:	mov    QWORD PTR [rbp-0x20],rax
  413142:	movabs rax,0xffffff0000000000
  41314c:	and    rax,QWORD PTR [rbp-0x20]
  413150:	mov    rdx,rax
  413153:	movabs rax,0x6774680000000000
  41315d:	cmp    rdx,rax
  413160:	jne    413253 <_start@@Base+0xe0f3>
  413166:	mov    rax,QWORD PTR [rbp-0x40]
  41316a:	mov    QWORD PTR [rbp-0x18],rax
  41316e:	mov    rdx,QWORD PTR [rbp-0x48]
  413172:	mov    rsi,QWORD PTR [rbp-0x18]
  413176:	mov    rax,QWORD PTR [rbp-0x38]
  41317a:	mov    ecx,0x3
  41317f:	mov    rdi,rax
  413182:	call   405c48 <_start@@Base+0xae8>
  413187:	mov    QWORD PTR [rbp-0x40],rax
  41318b:	mov    rax,QWORD PTR [rbp-0x18]
  41318f:	cmp    rax,QWORD PTR [rbp-0x40]
  413193:	je     413236 <_start@@Base+0xe0d6>
  413199:	mov    WORD PTR [rbp-0x26],0x0
  41319f:	mov    rax,QWORD PTR [rbp-0x50]
  4131a3:	mov    QWORD PTR [rbp-0x10],rax
  4131a7:	mov    rax,QWORD PTR [rbp-0x40]
  4131ab:	mov    QWORD PTR [rbp-0x18],rax
  4131af:	lea    rcx,[rbp-0x26]
  4131b3:	mov    rdx,QWORD PTR [rbp-0x48]
  4131b7:	mov    rsi,QWORD PTR [rbp-0x18]
  4131bb:	mov    rax,QWORD PTR [rbp-0x38]
  4131bf:	mov    rdi,rax
  4131c2:	call   406492 <_start@@Base+0x1332>
  4131c7:	mov    QWORD PTR [rbp-0x40],rax
  4131cb:	mov    rax,QWORD PTR [rbp-0x18]
  4131cf:	cmp    rax,QWORD PTR [rbp-0x40]
  4131d3:	jne    41321f <_start@@Base+0xe0bf>
  4131d5:	mov    rax,QWORD PTR [rbp-0x40]
  4131d9:	mov    QWORD PTR [rbp-0x18],rax
  4131dd:	lea    rcx,[rbp-0x26]
  4131e1:	mov    rdx,QWORD PTR [rbp-0x48]
  4131e5:	mov    rsi,QWORD PTR [rbp-0x18]
  4131e9:	mov    rax,QWORD PTR [rbp-0x38]
  4131ed:	mov    r8,rcx
  4131f0:	lea    rcx,[rip+0x31729]        # 444920 <__data_start@@Base+0x860>
  4131f7:	mov    rdi,rax
  4131fa:	call   406cdf <_start@@Base+0x1b7f>
  4131ff:	mov    QWORD PTR [rbp-0x40],rax
  413203:	mov    rax,QWORD PTR [rbp-0x40]
  413207:	cmp    rax,QWORD PTR [rbp-0x18]
  41320b:	je     4132b8 <_start@@Base+0xe158>
  413211:	mov    rax,QWORD PTR [rbp-0x40]
  413215:	cmp    rax,QWORD PTR [rbp-0x48]
  413219:	je     4132b8 <_start@@Base+0xe158>
  41321f:	movzx  eax,WORD PTR [rbp-0x26]
  413223:	movzx  edx,ax
  413226:	mov    rax,QWORD PTR [rbp-0x10]
  41322a:	mov    esi,edx
  41322c:	mov    rdi,rax
  41322f:	call   4052ac <_start@@Base+0x14c>
  413234:	jmp    41328b <_start@@Base+0xe12b>
  413236:	mov    rdx,QWORD PTR [rbp-0x48]
  41323a:	mov    rcx,QWORD PTR [rbp-0x40]
  41323e:	mov    rax,QWORD PTR [rbp-0x38]
  413242:	mov    rsi,rcx
  413245:	mov    rdi,rax
  413248:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41324d:	mov    QWORD PTR [rbp-0x40],rax
  413251:	jmp    41328b <_start@@Base+0xe12b>
  413253:	mov    rdx,QWORD PTR [rbp-0x48]
  413257:	mov    rcx,QWORD PTR [rbp-0x40]
  41325b:	mov    rax,QWORD PTR [rbp-0x38]
  41325f:	mov    rsi,rcx
  413262:	mov    rdi,rax
  413265:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41326a:	mov    QWORD PTR [rbp-0x40],rax
  41326e:	jmp    41328b <_start@@Base+0xe12b>
  413270:	mov    rdx,QWORD PTR [rbp-0x48]
  413274:	mov    rcx,QWORD PTR [rbp-0x40]
  413278:	mov    rax,QWORD PTR [rbp-0x38]
  41327c:	mov    rsi,rcx
  41327f:	mov    rdi,rax
  413282:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413287:	mov    QWORD PTR [rbp-0x40],rax
  41328b:	lea    rcx,[rbp-0x24]
  41328f:	mov    rdx,QWORD PTR [rbp-0x48]
  413293:	mov    rsi,QWORD PTR [rbp-0x40]
  413297:	mov    rax,QWORD PTR [rbp-0x38]
  41329b:	mov    rdi,rax
  41329e:	call   40590f <_start@@Base+0x7af>
  4132a3:	mov    QWORD PTR [rbp-0x40],rax
  4132a7:	mov    eax,DWORD PTR [rbp-0x24]
  4132aa:	test   eax,eax
  4132ac:	jne    4130e0 <_start@@Base+0xdf80>
  4132b2:	mov    rax,QWORD PTR [rbp-0x40]
  4132b6:	jmp    4132d1 <_start@@Base+0xe171>
  4132b8:	mov    rdx,QWORD PTR [rbp-0x48]
  4132bc:	mov    rsi,QWORD PTR [rbp-0x40]
  4132c0:	mov    rax,QWORD PTR [rbp-0x38]
  4132c4:	mov    ecx,0x21
  4132c9:	mov    rdi,rax
  4132cc:	call   425bce <flatcc_json_parser_set_error@@Base>
  4132d1:	mov    rdi,QWORD PTR [rbp-0x8]
  4132d5:	xor    rdi,QWORD PTR fs:0x28
  4132de:	je     4132e5 <_start@@Base+0xe185>
  4132e0:	call   405070 <__stack_chk_fail@plt>
  4132e5:	leave  
  4132e6:	ret    
  4132e7:	push   rbp
  4132e8:	mov    rbp,rsp
  4132eb:	sub    rsp,0x30
  4132ef:	mov    QWORD PTR [rbp-0x18],rdi
  4132f3:	mov    QWORD PTR [rbp-0x20],rsi
  4132f7:	mov    QWORD PTR [rbp-0x28],rdx
  4132fb:	mov    QWORD PTR [rbp-0x30],rcx
  4132ff:	mov    rax,QWORD PTR [rbp-0x30]
  413303:	mov    DWORD PTR [rax],0x0
  413309:	mov    rax,QWORD PTR [rbp-0x18]
  41330d:	mov    rax,QWORD PTR [rax]
  413310:	mov    edx,0x2
  413315:	mov    esi,0x2
  41331a:	mov    rdi,rax
  41331d:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  413322:	mov    QWORD PTR [rbp-0x8],rax
  413326:	cmp    QWORD PTR [rbp-0x8],0x0
  41332b:	je     41337a <_start@@Base+0xe21a>
  41332d:	mov    rcx,QWORD PTR [rbp-0x8]
  413331:	mov    rdx,QWORD PTR [rbp-0x28]
  413335:	mov    rsi,QWORD PTR [rbp-0x20]
  413339:	mov    rax,QWORD PTR [rbp-0x18]
  41333d:	mov    rdi,rax
  413340:	call   413098 <_start@@Base+0xdf38>
  413345:	mov    QWORD PTR [rbp-0x20],rax
  413349:	mov    rax,QWORD PTR [rbp-0x20]
  41334d:	cmp    rax,QWORD PTR [rbp-0x28]
  413351:	je     41337b <_start@@Base+0xe21b>
  413353:	mov    rax,QWORD PTR [rbp-0x18]
  413357:	mov    rax,QWORD PTR [rax]
  41335a:	mov    rdi,rax
  41335d:	call   41c263 <flatcc_builder_end_struct@@Base>
  413362:	mov    edx,eax
  413364:	mov    rax,QWORD PTR [rbp-0x30]
  413368:	mov    DWORD PTR [rax],edx
  41336a:	mov    rax,QWORD PTR [rbp-0x30]
  41336e:	mov    eax,DWORD PTR [rax]
  413370:	test   eax,eax
  413372:	je     41337b <_start@@Base+0xe21b>
  413374:	mov    rax,QWORD PTR [rbp-0x20]
  413378:	jmp    413394 <_start@@Base+0xe234>
  41337a:	nop
  41337b:	mov    rdx,QWORD PTR [rbp-0x28]
  41337f:	mov    rsi,QWORD PTR [rbp-0x20]
  413383:	mov    rax,QWORD PTR [rbp-0x18]
  413387:	mov    ecx,0x21
  41338c:	mov    rdi,rax
  41338f:	call   425bce <flatcc_json_parser_set_error@@Base>
  413394:	leave  
  413395:	ret    
  413396:	push   rbp
  413397:	mov    rbp,rsp
  41339a:	sub    rsp,0x50
  41339e:	mov    QWORD PTR [rbp-0x38],rdi
  4133a2:	mov    QWORD PTR [rbp-0x40],rsi
  4133a6:	mov    QWORD PTR [rbp-0x48],rdx
  4133aa:	mov    QWORD PTR [rbp-0x50],rcx
  4133ae:	mov    rax,QWORD PTR fs:0x28
  4133b7:	mov    QWORD PTR [rbp-0x8],rax
  4133bb:	xor    eax,eax
  4133bd:	lea    rcx,[rbp-0x28]
  4133c1:	mov    rdx,QWORD PTR [rbp-0x48]
  4133c5:	mov    rsi,QWORD PTR [rbp-0x40]
  4133c9:	mov    rax,QWORD PTR [rbp-0x38]
  4133cd:	mov    rdi,rax
  4133d0:	call   405852 <_start@@Base+0x6f2>
  4133d5:	mov    QWORD PTR [rbp-0x40],rax
  4133d9:	jmp    4135a2 <_start@@Base+0xe442>
  4133de:	mov    rdx,QWORD PTR [rbp-0x48]
  4133e2:	mov    rcx,QWORD PTR [rbp-0x40]
  4133e6:	mov    rax,QWORD PTR [rbp-0x38]
  4133ea:	mov    rsi,rcx
  4133ed:	mov    rdi,rax
  4133f0:	call   4055e5 <_start@@Base+0x485>
  4133f5:	mov    QWORD PTR [rbp-0x40],rax
  4133f9:	mov    rdx,QWORD PTR [rbp-0x48]
  4133fd:	mov    rax,QWORD PTR [rbp-0x40]
  413401:	mov    rsi,rdx
  413404:	mov    rdi,rax
  413407:	call   405756 <_start@@Base+0x5f6>
  41340c:	mov    QWORD PTR [rbp-0x20],rax
  413410:	movabs rax,0x626f6f6b735f7265
  41341a:	cmp    QWORD PTR [rbp-0x20],rax
  41341e:	jne    41356b <_start@@Base+0xe40b>
  413424:	add    QWORD PTR [rbp-0x40],0x8
  413429:	mov    rdx,QWORD PTR [rbp-0x48]
  41342d:	mov    rax,QWORD PTR [rbp-0x40]
  413431:	mov    rsi,rdx
  413434:	mov    rdi,rax
  413437:	call   405756 <_start@@Base+0x5f6>
  41343c:	mov    QWORD PTR [rbp-0x20],rax
  413440:	movabs rax,0xffff000000000000
  41344a:	and    rax,QWORD PTR [rbp-0x20]
  41344e:	mov    rdx,rax
  413451:	movabs rax,0x6164000000000000
  41345b:	cmp    rdx,rax
  41345e:	jne    41354e <_start@@Base+0xe3ee>
  413464:	mov    rax,QWORD PTR [rbp-0x40]
  413468:	mov    QWORD PTR [rbp-0x18],rax
  41346c:	mov    rdx,QWORD PTR [rbp-0x48]
  413470:	mov    rsi,QWORD PTR [rbp-0x18]
  413474:	mov    rax,QWORD PTR [rbp-0x38]
  413478:	mov    ecx,0x2
  41347d:	mov    rdi,rax
  413480:	call   405c48 <_start@@Base+0xae8>
  413485:	mov    QWORD PTR [rbp-0x40],rax
  413489:	mov    rax,QWORD PTR [rbp-0x18]
  41348d:	cmp    rax,QWORD PTR [rbp-0x40]
  413491:	je     413531 <_start@@Base+0xe3d1>
  413497:	mov    DWORD PTR [rbp-0x24],0x0
  41349e:	mov    rax,QWORD PTR [rbp-0x50]
  4134a2:	mov    QWORD PTR [rbp-0x10],rax
  4134a6:	mov    rax,QWORD PTR [rbp-0x40]
  4134aa:	mov    QWORD PTR [rbp-0x18],rax
  4134ae:	lea    rcx,[rbp-0x24]
  4134b2:	mov    rdx,QWORD PTR [rbp-0x48]
  4134b6:	mov    rsi,QWORD PTR [rbp-0x18]
  4134ba:	mov    rax,QWORD PTR [rbp-0x38]
  4134be:	mov    rdi,rax
  4134c1:	call   4066e1 <_start@@Base+0x1581>
  4134c6:	mov    QWORD PTR [rbp-0x40],rax
  4134ca:	mov    rax,QWORD PTR [rbp-0x18]
  4134ce:	cmp    rax,QWORD PTR [rbp-0x40]
  4134d2:	jne    41351e <_start@@Base+0xe3be>
  4134d4:	mov    rax,QWORD PTR [rbp-0x40]
  4134d8:	mov    QWORD PTR [rbp-0x18],rax
  4134dc:	lea    rcx,[rbp-0x24]
  4134e0:	mov    rdx,QWORD PTR [rbp-0x48]
  4134e4:	mov    rsi,QWORD PTR [rbp-0x18]
  4134e8:	mov    rax,QWORD PTR [rbp-0x38]
  4134ec:	mov    r8,rcx
  4134ef:	lea    rcx,[rip+0x3144a]        # 444940 <__data_start@@Base+0x880>
  4134f6:	mov    rdi,rax
  4134f9:	call   4070ed <_start@@Base+0x1f8d>
  4134fe:	mov    QWORD PTR [rbp-0x40],rax
  413502:	mov    rax,QWORD PTR [rbp-0x40]
  413506:	cmp    rax,QWORD PTR [rbp-0x18]
  41350a:	je     4135b3 <_start@@Base+0xe453>
  413510:	mov    rax,QWORD PTR [rbp-0x40]
  413514:	cmp    rax,QWORD PTR [rbp-0x48]
  413518:	je     4135b3 <_start@@Base+0xe453>
  41351e:	mov    edx,DWORD PTR [rbp-0x24]
  413521:	mov    rax,QWORD PTR [rbp-0x10]
  413525:	mov    esi,edx
  413527:	mov    rdi,rax
  41352a:	call   4053b7 <_start@@Base+0x257>
  41352f:	jmp    413586 <_start@@Base+0xe426>
  413531:	mov    rdx,QWORD PTR [rbp-0x48]
  413535:	mov    rcx,QWORD PTR [rbp-0x40]
  413539:	mov    rax,QWORD PTR [rbp-0x38]
  41353d:	mov    rsi,rcx
  413540:	mov    rdi,rax
  413543:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413548:	mov    QWORD PTR [rbp-0x40],rax
  41354c:	jmp    413586 <_start@@Base+0xe426>
  41354e:	mov    rdx,QWORD PTR [rbp-0x48]
  413552:	mov    rcx,QWORD PTR [rbp-0x40]
  413556:	mov    rax,QWORD PTR [rbp-0x38]
  41355a:	mov    rsi,rcx
  41355d:	mov    rdi,rax
  413560:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413565:	mov    QWORD PTR [rbp-0x40],rax
  413569:	jmp    413586 <_start@@Base+0xe426>
  41356b:	mov    rdx,QWORD PTR [rbp-0x48]
  41356f:	mov    rcx,QWORD PTR [rbp-0x40]
  413573:	mov    rax,QWORD PTR [rbp-0x38]
  413577:	mov    rsi,rcx
  41357a:	mov    rdi,rax
  41357d:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413582:	mov    QWORD PTR [rbp-0x40],rax
  413586:	lea    rcx,[rbp-0x28]
  41358a:	mov    rdx,QWORD PTR [rbp-0x48]
  41358e:	mov    rsi,QWORD PTR [rbp-0x40]
  413592:	mov    rax,QWORD PTR [rbp-0x38]
  413596:	mov    rdi,rax
  413599:	call   40590f <_start@@Base+0x7af>
  41359e:	mov    QWORD PTR [rbp-0x40],rax
  4135a2:	mov    eax,DWORD PTR [rbp-0x28]
  4135a5:	test   eax,eax
  4135a7:	jne    4133de <_start@@Base+0xe27e>
  4135ad:	mov    rax,QWORD PTR [rbp-0x40]
  4135b1:	jmp    4135cc <_start@@Base+0xe46c>
  4135b3:	mov    rdx,QWORD PTR [rbp-0x48]
  4135b7:	mov    rsi,QWORD PTR [rbp-0x40]
  4135bb:	mov    rax,QWORD PTR [rbp-0x38]
  4135bf:	mov    ecx,0x21
  4135c4:	mov    rdi,rax
  4135c7:	call   425bce <flatcc_json_parser_set_error@@Base>
  4135cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4135d0:	xor    rdi,QWORD PTR fs:0x28
  4135d9:	je     4135e0 <_start@@Base+0xe480>
  4135db:	call   405070 <__stack_chk_fail@plt>
  4135e0:	leave  
  4135e1:	ret    
  4135e2:	push   rbp
  4135e3:	mov    rbp,rsp
  4135e6:	sub    rsp,0x30
  4135ea:	mov    QWORD PTR [rbp-0x18],rdi
  4135ee:	mov    QWORD PTR [rbp-0x20],rsi
  4135f2:	mov    QWORD PTR [rbp-0x28],rdx
  4135f6:	mov    QWORD PTR [rbp-0x30],rcx
  4135fa:	mov    rax,QWORD PTR [rbp-0x30]
  4135fe:	mov    DWORD PTR [rax],0x0
  413604:	mov    rax,QWORD PTR [rbp-0x18]
  413608:	mov    rax,QWORD PTR [rax]
  41360b:	mov    edx,0x4
  413610:	mov    esi,0x4
  413615:	mov    rdi,rax
  413618:	call   41c1e9 <flatcc_builder_start_struct@@Base>
  41361d:	mov    QWORD PTR [rbp-0x8],rax
  413621:	cmp    QWORD PTR [rbp-0x8],0x0
  413626:	je     413675 <_start@@Base+0xe515>
  413628:	mov    rcx,QWORD PTR [rbp-0x8]
  41362c:	mov    rdx,QWORD PTR [rbp-0x28]
  413630:	mov    rsi,QWORD PTR [rbp-0x20]
  413634:	mov    rax,QWORD PTR [rbp-0x18]
  413638:	mov    rdi,rax
  41363b:	call   413396 <_start@@Base+0xe236>
  413640:	mov    QWORD PTR [rbp-0x20],rax
  413644:	mov    rax,QWORD PTR [rbp-0x20]
  413648:	cmp    rax,QWORD PTR [rbp-0x28]
  41364c:	je     413676 <_start@@Base+0xe516>
  41364e:	mov    rax,QWORD PTR [rbp-0x18]
  413652:	mov    rax,QWORD PTR [rax]
  413655:	mov    rdi,rax
  413658:	call   41c263 <flatcc_builder_end_struct@@Base>
  41365d:	mov    edx,eax
  41365f:	mov    rax,QWORD PTR [rbp-0x30]
  413663:	mov    DWORD PTR [rax],edx
  413665:	mov    rax,QWORD PTR [rbp-0x30]
  413669:	mov    eax,DWORD PTR [rax]
  41366b:	test   eax,eax
  41366d:	je     413676 <_start@@Base+0xe516>
  41366f:	mov    rax,QWORD PTR [rbp-0x20]
  413673:	jmp    41368f <_start@@Base+0xe52f>
  413675:	nop
  413676:	mov    rdx,QWORD PTR [rbp-0x28]
  41367a:	mov    rsi,QWORD PTR [rbp-0x20]
  41367e:	mov    rax,QWORD PTR [rbp-0x18]
  413682:	mov    ecx,0x21
  413687:	mov    rdi,rax
  41368a:	call   425bce <flatcc_json_parser_set_error@@Base>
  41368f:	leave  
  413690:	ret    
  413691:	push   rbp
  413692:	mov    rbp,rsp
  413695:	sub    rsp,0x30
  413699:	mov    QWORD PTR [rbp-0x8],rdi
  41369d:	mov    QWORD PTR [rbp-0x10],rsi
  4136a1:	mov    QWORD PTR [rbp-0x18],rdx
  4136a5:	mov    eax,ecx
  4136a7:	mov    QWORD PTR [rbp-0x28],r8
  4136ab:	mov    BYTE PTR [rbp-0x1c],al
  4136ae:	mov    rax,QWORD PTR [rbp-0x28]
  4136b2:	mov    DWORD PTR [rax],0x0
  4136b8:	movzx  eax,BYTE PTR [rbp-0x1c]
  4136bc:	cmp    eax,0x9
  4136bf:	je     41375d <_start@@Base+0xe5fd>
  4136c5:	cmp    eax,0x9
  4136c8:	jg     4136dd <_start@@Base+0xe57d>
  4136ca:	cmp    eax,0x2
  4136cd:	je     41371b <_start@@Base+0xe5bb>
  4136cf:	cmp    eax,0x8
  4136d2:	je     41373c <_start@@Base+0xe5dc>
  4136d4:	test   eax,eax
  4136d6:	je     4136ff <_start@@Base+0xe59f>
  4136d8:	jmp    4137d8 <_start@@Base+0xe678>
  4136dd:	cmp    eax,0xb
  4136e0:	je     41379c <_start@@Base+0xe63c>
  4136e6:	cmp    eax,0xb
  4136e9:	jl     41377e <_start@@Base+0xe61e>
  4136ef:	cmp    eax,0xff
  4136f4:	je     4137ba <_start@@Base+0xe65a>
  4136fa:	jmp    4137d8 <_start@@Base+0xe678>
  4136ff:	mov    rdx,QWORD PTR [rbp-0x18]
  413703:	mov    rcx,QWORD PTR [rbp-0x10]
  413707:	mov    rax,QWORD PTR [rbp-0x8]
  41370b:	mov    rsi,rcx
  41370e:	mov    rdi,rax
  413711:	call   40629c <_start@@Base+0x113c>
  413716:	jmp    413854 <_start@@Base+0xe6f4>
  41371b:	mov    rcx,QWORD PTR [rbp-0x28]
  41371f:	mov    rdx,QWORD PTR [rbp-0x18]
  413723:	mov    rsi,QWORD PTR [rbp-0x10]
  413727:	mov    rax,QWORD PTR [rbp-0x8]
  41372b:	mov    rdi,rax
  41372e:	call   412d65 <_start@@Base+0xdc05>
  413733:	mov    QWORD PTR [rbp-0x10],rax
  413737:	jmp    41381a <_start@@Base+0xe6ba>
  41373c:	mov    rcx,QWORD PTR [rbp-0x28]
  413740:	mov    rdx,QWORD PTR [rbp-0x18]
  413744:	mov    rsi,QWORD PTR [rbp-0x10]
  413748:	mov    rax,QWORD PTR [rbp-0x8]
  41374c:	mov    rdi,rax
  41374f:	call   4132e7 <_start@@Base+0xe187>
  413754:	mov    QWORD PTR [rbp-0x10],rax
  413758:	jmp    41381a <_start@@Base+0xe6ba>
  41375d:	mov    rcx,QWORD PTR [rbp-0x28]
  413761:	mov    rdx,QWORD PTR [rbp-0x18]
  413765:	mov    rsi,QWORD PTR [rbp-0x10]
  413769:	mov    rax,QWORD PTR [rbp-0x8]
  41376d:	mov    rdi,rax
  413770:	call   4135e2 <_start@@Base+0xe482>
  413775:	mov    QWORD PTR [rbp-0x10],rax
  413779:	jmp    41381a <_start@@Base+0xe6ba>
  41377e:	mov    rcx,QWORD PTR [rbp-0x28]
  413782:	mov    rdx,QWORD PTR [rbp-0x18]
  413786:	mov    rsi,QWORD PTR [rbp-0x10]
  41378a:	mov    rax,QWORD PTR [rbp-0x8]
  41378e:	mov    rdi,rax
  413791:	call   4135e2 <_start@@Base+0xe482>
  413796:	mov    QWORD PTR [rbp-0x10],rax
  41379a:	jmp    41381a <_start@@Base+0xe6ba>
  41379c:	mov    rcx,QWORD PTR [rbp-0x28]
  4137a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4137a4:	mov    rsi,QWORD PTR [rbp-0x10]
  4137a8:	mov    rax,QWORD PTR [rbp-0x8]
  4137ac:	mov    rdi,rax
  4137af:	call   427628 <flatcc_json_parser_build_string@@Base>
  4137b4:	mov    QWORD PTR [rbp-0x10],rax
  4137b8:	jmp    41381a <_start@@Base+0xe6ba>
  4137ba:	mov    rcx,QWORD PTR [rbp-0x28]
  4137be:	mov    rdx,QWORD PTR [rbp-0x18]
  4137c2:	mov    rsi,QWORD PTR [rbp-0x10]
  4137c6:	mov    rax,QWORD PTR [rbp-0x8]
  4137ca:	mov    rdi,rax
  4137cd:	call   427628 <flatcc_json_parser_build_string@@Base>
  4137d2:	mov    QWORD PTR [rbp-0x10],rax
  4137d6:	jmp    41381a <_start@@Base+0xe6ba>
  4137d8:	mov    rax,QWORD PTR [rbp-0x8]
  4137dc:	mov    eax,DWORD PTR [rax+0x10]
  4137df:	and    eax,0x1
  4137e2:	test   eax,eax
  4137e4:	jne    413801 <_start@@Base+0xe6a1>
  4137e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4137ea:	mov    rsi,QWORD PTR [rbp-0x10]
  4137ee:	mov    rax,QWORD PTR [rbp-0x8]
  4137f2:	mov    ecx,0xf
  4137f7:	mov    rdi,rax
  4137fa:	call   425bce <flatcc_json_parser_set_error@@Base>
  4137ff:	jmp    413854 <_start@@Base+0xe6f4>
  413801:	mov    rdx,QWORD PTR [rbp-0x18]
  413805:	mov    rcx,QWORD PTR [rbp-0x10]
  413809:	mov    rax,QWORD PTR [rbp-0x8]
  41380d:	mov    rsi,rcx
  413810:	mov    rdi,rax
  413813:	call   426bfb <flatcc_json_parser_generic_json@@Base>
  413818:	jmp    413854 <_start@@Base+0xe6f4>
  41381a:	mov    rax,QWORD PTR [rbp-0x8]
  41381e:	mov    eax,DWORD PTR [rax+0x1c]
  413821:	test   eax,eax
  413823:	je     41382b <_start@@Base+0xe6cb>
  413825:	mov    rax,QWORD PTR [rbp-0x10]
  413829:	jmp    413854 <_start@@Base+0xe6f4>
  41382b:	mov    rax,QWORD PTR [rbp-0x28]
  41382f:	mov    eax,DWORD PTR [rax]
  413831:	test   eax,eax
  413833:	jne    413850 <_start@@Base+0xe6f0>
  413835:	mov    rdx,QWORD PTR [rbp-0x18]
  413839:	mov    rsi,QWORD PTR [rbp-0x10]
  41383d:	mov    rax,QWORD PTR [rbp-0x8]
  413841:	mov    ecx,0x21
  413846:	mov    rdi,rax
  413849:	call   425bce <flatcc_json_parser_set_error@@Base>
  41384e:	jmp    413854 <_start@@Base+0xe6f4>
  413850:	mov    rax,QWORD PTR [rbp-0x10]
  413854:	leave  
  413855:	ret    
  413856:	push   rbp
  413857:	mov    rbp,rsp
  41385a:	mov    eax,edi
  41385c:	mov    BYTE PTR [rbp-0x4],al
  41385f:	movzx  eax,BYTE PTR [rbp-0x4]
  413863:	cmp    eax,0x9
  413866:	je     4138a5 <_start@@Base+0xe745>
  413868:	cmp    eax,0x9
  41386b:	jg     41387d <_start@@Base+0xe71d>
  41386d:	cmp    eax,0x2
  413870:	je     413897 <_start@@Base+0xe737>
  413872:	cmp    eax,0x8
  413875:	je     41389e <_start@@Base+0xe73e>
  413877:	test   eax,eax
  413879:	je     413890 <_start@@Base+0xe730>
  41387b:	jmp    4138c1 <_start@@Base+0xe761>
  41387d:	cmp    eax,0xb
  413880:	je     4138b3 <_start@@Base+0xe753>
  413882:	cmp    eax,0xb
  413885:	jl     4138ac <_start@@Base+0xe74c>
  413887:	cmp    eax,0xff
  41388c:	je     4138ba <_start@@Base+0xe75a>
  41388e:	jmp    4138c1 <_start@@Base+0xe761>
  413890:	mov    eax,0x1
  413895:	jmp    4138c6 <_start@@Base+0xe766>
  413897:	mov    eax,0x1
  41389c:	jmp    4138c6 <_start@@Base+0xe766>
  41389e:	mov    eax,0x1
  4138a3:	jmp    4138c6 <_start@@Base+0xe766>
  4138a5:	mov    eax,0x1
  4138aa:	jmp    4138c6 <_start@@Base+0xe766>
  4138ac:	mov    eax,0x1
  4138b1:	jmp    4138c6 <_start@@Base+0xe766>
  4138b3:	mov    eax,0x1
  4138b8:	jmp    4138c6 <_start@@Base+0xe766>
  4138ba:	mov    eax,0x1
  4138bf:	jmp    4138c6 <_start@@Base+0xe766>
  4138c1:	mov    eax,0x0
  4138c6:	pop    rbp
  4138c7:	ret    
  4138c8:	push   rbp
  4138c9:	mov    rbp,rsp
  4138cc:	sub    rsp,0x50
  4138d0:	mov    QWORD PTR [rbp-0x28],rdi
  4138d4:	mov    QWORD PTR [rbp-0x30],rsi
  4138d8:	mov    QWORD PTR [rbp-0x38],rdx
  4138dc:	mov    QWORD PTR [rbp-0x40],rcx
  4138e0:	mov    QWORD PTR [rbp-0x48],r8
  4138e4:	mov    QWORD PTR [rbp-0x50],r9
  4138e8:	mov    rax,QWORD PTR [rbp-0x30]
  4138ec:	mov    QWORD PTR [rbp-0x18],rax
  4138f0:	mov    rdx,QWORD PTR [rbp-0x38]
  4138f4:	mov    rax,QWORD PTR [rbp-0x30]
  4138f8:	mov    rsi,rdx
  4138fb:	mov    rdi,rax
  4138fe:	call   405756 <_start@@Base+0x5f6>
  413903:	mov    QWORD PTR [rbp-0x10],rax
  413907:	movabs rax,0x4e4f4e44ffffffff
  413911:	cmp    QWORD PTR [rbp-0x10],rax
  413915:	ja     413a98 <_start@@Base+0xe938>
  41391b:	movabs rax,0x426f6f6b46616dff
  413925:	cmp    QWORD PTR [rbp-0x10],rax
  413929:	ja     4139a9 <_start@@Base+0xe849>
  41392b:	mov    rax,QWORD PTR [rbp-0x10]
  41392f:	and    rax,0xffffffffff000000
  413935:	mov    rdx,rax
  413938:	movabs rax,0x42656c6c65000000
  413942:	cmp    rdx,rax
  413945:	jne    4139a0 <_start@@Base+0xe840>
  413947:	mov    rax,QWORD PTR [rbp-0x30]
  41394b:	mov    QWORD PTR [rbp-0x8],rax
  41394f:	mov    rcx,QWORD PTR [rbp-0x50]
  413953:	mov    rdx,QWORD PTR [rbp-0x38]
  413957:	mov    rsi,QWORD PTR [rbp-0x8]
  41395b:	mov    rax,QWORD PTR [rbp-0x28]
  41395f:	mov    r8,rcx
  413962:	mov    ecx,0x5
  413967:	mov    rdi,rax
  41396a:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  41396f:	mov    QWORD PTR [rbp-0x30],rax
  413973:	mov    rax,QWORD PTR [rbp-0x30]
  413977:	cmp    rax,QWORD PTR [rbp-0x8]
  41397b:	je     413997 <_start@@Base+0xe837>
  41397d:	mov    rax,QWORD PTR [rbp-0x48]
  413981:	mov    QWORD PTR [rax],0x9
  413988:	mov    rax,QWORD PTR [rbp-0x40]
  41398c:	mov    DWORD PTR [rax],0x0
  413992:	jmp    413c92 <_start@@Base+0xeb32>
  413997:	mov    rax,QWORD PTR [rbp-0x18]
  41399b:	jmp    413c96 <_start@@Base+0xeb36>
  4139a0:	mov    rax,QWORD PTR [rbp-0x18]
  4139a4:	jmp    413c96 <_start@@Base+0xeb36>
  4139a9:	mov    rax,QWORD PTR [rbp-0x10]
  4139ad:	and    rax,0xffffffffff000000
  4139b3:	mov    rdx,rax
  4139b6:	movabs rax,0x4d754c616e000000
  4139c0:	cmp    rdx,rax
  4139c3:	jne    413a1e <_start@@Base+0xe8be>
  4139c5:	mov    rax,QWORD PTR [rbp-0x30]
  4139c9:	mov    QWORD PTR [rbp-0x8],rax
  4139cd:	mov    rcx,QWORD PTR [rbp-0x50]
  4139d1:	mov    rdx,QWORD PTR [rbp-0x38]
  4139d5:	mov    rsi,QWORD PTR [rbp-0x8]
  4139d9:	mov    rax,QWORD PTR [rbp-0x28]
  4139dd:	mov    r8,rcx
  4139e0:	mov    ecx,0x5
  4139e5:	mov    rdi,rax
  4139e8:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  4139ed:	mov    QWORD PTR [rbp-0x30],rax
  4139f1:	mov    rax,QWORD PTR [rbp-0x30]
  4139f5:	cmp    rax,QWORD PTR [rbp-0x8]
  4139f9:	je     413a15 <_start@@Base+0xe8b5>
  4139fb:	mov    rax,QWORD PTR [rbp-0x48]
  4139ff:	mov    QWORD PTR [rax],0x2
  413a06:	mov    rax,QWORD PTR [rbp-0x40]
  413a0a:	mov    DWORD PTR [rax],0x0
  413a10:	jmp    413c92 <_start@@Base+0xeb32>
  413a15:	mov    rax,QWORD PTR [rbp-0x18]
  413a19:	jmp    413c96 <_start@@Base+0xeb36>
  413a1e:	mov    rax,QWORD PTR [rbp-0x10]
  413a22:	mov    al,0x0
  413a24:	mov    rdx,rax
  413a27:	movabs rax,0x426f6f6b46616e00
  413a31:	cmp    rdx,rax
  413a34:	jne    413a8f <_start@@Base+0xe92f>
  413a36:	mov    rax,QWORD PTR [rbp-0x30]
  413a3a:	mov    QWORD PTR [rbp-0x8],rax
  413a3e:	mov    rcx,QWORD PTR [rbp-0x50]
  413a42:	mov    rdx,QWORD PTR [rbp-0x38]
  413a46:	mov    rsi,QWORD PTR [rbp-0x8]
  413a4a:	mov    rax,QWORD PTR [rbp-0x28]
  413a4e:	mov    r8,rcx
  413a51:	mov    ecx,0x7
  413a56:	mov    rdi,rax
  413a59:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  413a5e:	mov    QWORD PTR [rbp-0x30],rax
  413a62:	mov    rax,QWORD PTR [rbp-0x30]
  413a66:	cmp    rax,QWORD PTR [rbp-0x8]
  413a6a:	je     413a86 <_start@@Base+0xe926>
  413a6c:	mov    rax,QWORD PTR [rbp-0x48]
  413a70:	mov    QWORD PTR [rax],0xa
  413a77:	mov    rax,QWORD PTR [rbp-0x40]
  413a7b:	mov    DWORD PTR [rax],0x0
  413a81:	jmp    413c92 <_start@@Base+0xeb32>
  413a86:	mov    rax,QWORD PTR [rbp-0x18]
  413a8a:	jmp    413c96 <_start@@Base+0xeb36>
  413a8f:	mov    rax,QWORD PTR [rbp-0x18]
  413a93:	jmp    413c96 <_start@@Base+0xeb36>
  413a98:	movabs rax,0x4f74686571ffffff
  413aa2:	cmp    QWORD PTR [rbp-0x10],rax
  413aa6:	ja     413b2e <_start@@Base+0xe9ce>
  413aac:	movabs rax,0xffffffff00000000
  413ab6:	and    rax,QWORD PTR [rbp-0x10]
  413aba:	mov    rdx,rax
  413abd:	movabs rax,0x4e4f4e4500000000
  413ac7:	cmp    rdx,rax
  413aca:	jne    413b25 <_start@@Base+0xe9c5>
  413acc:	mov    rax,QWORD PTR [rbp-0x30]
  413ad0:	mov    QWORD PTR [rbp-0x8],rax
  413ad4:	mov    rcx,QWORD PTR [rbp-0x50]
  413ad8:	mov    rdx,QWORD PTR [rbp-0x38]
  413adc:	mov    rsi,QWORD PTR [rbp-0x8]
  413ae0:	mov    rax,QWORD PTR [rbp-0x28]
  413ae4:	mov    r8,rcx
  413ae7:	mov    ecx,0x4
  413aec:	mov    rdi,rax
  413aef:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  413af4:	mov    QWORD PTR [rbp-0x30],rax
  413af8:	mov    rax,QWORD PTR [rbp-0x30]
  413afc:	cmp    rax,QWORD PTR [rbp-0x8]
  413b00:	je     413b1c <_start@@Base+0xe9bc>
  413b02:	mov    rax,QWORD PTR [rbp-0x48]
  413b06:	mov    QWORD PTR [rax],0x0
  413b0d:	mov    rax,QWORD PTR [rbp-0x40]
  413b11:	mov    DWORD PTR [rax],0x0
  413b17:	jmp    413c92 <_start@@Base+0xeb32>
  413b1c:	mov    rax,QWORD PTR [rbp-0x18]
  413b20:	jmp    413c96 <_start@@Base+0xeb36>
  413b25:	mov    rax,QWORD PTR [rbp-0x18]
  413b29:	jmp    413c96 <_start@@Base+0xeb36>
  413b2e:	movabs rax,0x526170756e7a656b
  413b38:	cmp    QWORD PTR [rbp-0x10],rax
  413b3c:	ja     413bbc <_start@@Base+0xea5c>
  413b3e:	mov    rax,QWORD PTR [rbp-0x10]
  413b42:	and    rax,0xffffffffff000000
  413b48:	mov    rdx,rax
  413b4b:	movabs rax,0x4f74686572000000
  413b55:	cmp    rdx,rax
  413b58:	jne    413bb3 <_start@@Base+0xea53>
  413b5a:	mov    rax,QWORD PTR [rbp-0x30]
  413b5e:	mov    QWORD PTR [rbp-0x8],rax
  413b62:	mov    rcx,QWORD PTR [rbp-0x50]
  413b66:	mov    rdx,QWORD PTR [rbp-0x38]
  413b6a:	mov    rsi,QWORD PTR [rbp-0x8]
  413b6e:	mov    rax,QWORD PTR [rbp-0x28]
  413b72:	mov    r8,rcx
  413b75:	mov    ecx,0x5
  413b7a:	mov    rdi,rax
  413b7d:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  413b82:	mov    QWORD PTR [rbp-0x30],rax
  413b86:	mov    rax,QWORD PTR [rbp-0x30]
  413b8a:	cmp    rax,QWORD PTR [rbp-0x8]
  413b8e:	je     413baa <_start@@Base+0xea4a>
  413b90:	mov    rax,QWORD PTR [rbp-0x48]
  413b94:	mov    QWORD PTR [rax],0xb
  413b9b:	mov    rax,QWORD PTR [rbp-0x40]
  413b9f:	mov    DWORD PTR [rax],0x0
  413ba5:	jmp    413c92 <_start@@Base+0xeb32>
  413baa:	mov    rax,QWORD PTR [rbp-0x18]
  413bae:	jmp    413c96 <_start@@Base+0xeb36>
  413bb3:	mov    rax,QWORD PTR [rbp-0x18]
  413bb7:	jmp    413c96 <_start@@Base+0xeb36>
  413bbc:	mov    rax,QWORD PTR [rbp-0x10]
  413bc0:	mov    ax,0x0
  413bc4:	mov    rdx,rax
  413bc7:	movabs rax,0x556e757365640000
  413bd1:	cmp    rdx,rax
  413bd4:	jne    413c29 <_start@@Base+0xeac9>
  413bd6:	mov    rax,QWORD PTR [rbp-0x30]
  413bda:	mov    QWORD PTR [rbp-0x8],rax
  413bde:	mov    rcx,QWORD PTR [rbp-0x50]
  413be2:	mov    rdx,QWORD PTR [rbp-0x38]
  413be6:	mov    rsi,QWORD PTR [rbp-0x8]
  413bea:	mov    rax,QWORD PTR [rbp-0x28]
  413bee:	mov    r8,rcx
  413bf1:	mov    ecx,0x6
  413bf6:	mov    rdi,rax
  413bf9:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  413bfe:	mov    QWORD PTR [rbp-0x30],rax
  413c02:	mov    rax,QWORD PTR [rbp-0x30]
  413c06:	cmp    rax,QWORD PTR [rbp-0x8]
  413c0a:	je     413c23 <_start@@Base+0xeac3>
  413c0c:	mov    rax,QWORD PTR [rbp-0x48]
  413c10:	mov    QWORD PTR [rax],0xff
  413c17:	mov    rax,QWORD PTR [rbp-0x40]
  413c1b:	mov    DWORD PTR [rax],0x0
  413c21:	jmp    413c92 <_start@@Base+0xeb32>
  413c23:	mov    rax,QWORD PTR [rbp-0x18]
  413c27:	jmp    413c96 <_start@@Base+0xeb36>
  413c29:	movabs rax,0x526170756e7a656c
  413c33:	cmp    QWORD PTR [rbp-0x10],rax
  413c37:	jne    413c8c <_start@@Base+0xeb2c>
  413c39:	mov    rax,QWORD PTR [rbp-0x30]
  413c3d:	mov    QWORD PTR [rbp-0x8],rax
  413c41:	mov    rcx,QWORD PTR [rbp-0x50]
  413c45:	mov    rdx,QWORD PTR [rbp-0x38]
  413c49:	mov    rsi,QWORD PTR [rbp-0x8]
  413c4d:	mov    rax,QWORD PTR [rbp-0x28]
  413c51:	mov    r8,rcx
  413c54:	mov    ecx,0x8
  413c59:	mov    rdi,rax
  413c5c:	call   4264ac <flatcc_json_parser_match_constant@@Base>
  413c61:	mov    QWORD PTR [rbp-0x30],rax
  413c65:	mov    rax,QWORD PTR [rbp-0x30]
  413c69:	cmp    rax,QWORD PTR [rbp-0x8]
  413c6d:	je     413c86 <_start@@Base+0xeb26>
  413c6f:	mov    rax,QWORD PTR [rbp-0x48]
  413c73:	mov    QWORD PTR [rax],0x8
  413c7a:	mov    rax,QWORD PTR [rbp-0x40]
  413c7e:	mov    DWORD PTR [rax],0x0
  413c84:	jmp    413c92 <_start@@Base+0xeb32>
  413c86:	mov    rax,QWORD PTR [rbp-0x18]
  413c8a:	jmp    413c96 <_start@@Base+0xeb36>
  413c8c:	mov    rax,QWORD PTR [rbp-0x18]
  413c90:	jmp    413c96 <_start@@Base+0xeb36>
  413c92:	mov    rax,QWORD PTR [rbp-0x30]
  413c96:	leave  
  413c97:	ret    
  413c98:	push   rbp
  413c99:	mov    rbp,rsp
  413c9c:	sub    rsp,0x50
  413ca0:	mov    QWORD PTR [rbp-0x38],rdi
  413ca4:	mov    QWORD PTR [rbp-0x40],rsi
  413ca8:	mov    QWORD PTR [rbp-0x48],rdx
  413cac:	mov    QWORD PTR [rbp-0x50],rcx
  413cb0:	mov    rax,QWORD PTR fs:0x28
  413cb9:	mov    QWORD PTR [rbp-0x8],rax
  413cbd:	xor    eax,eax
  413cbf:	mov    rax,QWORD PTR [rbp-0x50]
  413cc3:	mov    DWORD PTR [rax],0x0
  413cc9:	mov    rax,QWORD PTR [rbp-0x38]
  413ccd:	mov    rax,QWORD PTR [rax]
  413cd0:	mov    esi,0xa
  413cd5:	mov    rdi,rax
  413cd8:	call   41ccc9 <flatcc_builder_start_table@@Base>
  413cdd:	test   eax,eax
  413cdf:	jne    414725 <_start@@Base+0xf5c5>
  413ce5:	lea    rcx,[rbp-0x20]
  413ce9:	mov    rdx,QWORD PTR [rbp-0x48]
  413ced:	mov    rsi,QWORD PTR [rbp-0x40]
  413cf1:	mov    rax,QWORD PTR [rbp-0x38]
  413cf5:	mov    r8,rcx
  413cf8:	mov    ecx,0x5
  413cfd:	mov    rdi,rax
  413d00:	call   427833 <flatcc_json_parser_prepare_unions@@Base>
  413d05:	cmp    rax,QWORD PTR [rbp-0x48]
  413d09:	je     414728 <_start@@Base+0xf5c8>
  413d0f:	lea    rcx,[rbp-0x24]
  413d13:	mov    rdx,QWORD PTR [rbp-0x48]
  413d17:	mov    rsi,QWORD PTR [rbp-0x40]
  413d1b:	mov    rax,QWORD PTR [rbp-0x38]
  413d1f:	mov    rdi,rax
  413d22:	call   405852 <_start@@Base+0x6f2>
  413d27:	mov    QWORD PTR [rbp-0x40],rax
  413d2b:	jmp    4146cc <_start@@Base+0xf56c>
  413d30:	mov    rdx,QWORD PTR [rbp-0x48]
  413d34:	mov    rcx,QWORD PTR [rbp-0x40]
  413d38:	mov    rax,QWORD PTR [rbp-0x38]
  413d3c:	mov    rsi,rcx
  413d3f:	mov    rdi,rax
  413d42:	call   4055e5 <_start@@Base+0x485>
  413d47:	mov    QWORD PTR [rbp-0x40],rax
  413d4b:	mov    rdx,QWORD PTR [rbp-0x48]
  413d4f:	mov    rax,QWORD PTR [rbp-0x40]
  413d53:	mov    rsi,rdx
  413d56:	mov    rdi,rax
  413d59:	call   405756 <_start@@Base+0x5f6>
  413d5e:	mov    QWORD PTR [rbp-0x18],rax
  413d62:	movabs rax,0x6368617261637464
  413d6c:	cmp    QWORD PTR [rbp-0x18],rax
  413d70:	ja     4140fa <_start@@Base+0xef9a>
  413d76:	movabs rax,0x616e7461676f6e69
  413d80:	cmp    QWORD PTR [rbp-0x18],rax
  413d84:	jne    413f26 <_start@@Base+0xedc6>
  413d8a:	add    QWORD PTR [rbp-0x40],0x8
  413d8f:	mov    rdx,QWORD PTR [rbp-0x48]
  413d93:	mov    rax,QWORD PTR [rbp-0x40]
  413d97:	mov    rsi,rdx
  413d9a:	mov    rdi,rax
  413d9d:	call   405756 <_start@@Base+0x5f6>
  413da2:	mov    QWORD PTR [rbp-0x18],rax
  413da6:	mov    rax,QWORD PTR [rbp-0x18]
  413daa:	mov    al,0x0
  413dac:	mov    rdx,rax
  413daf:	movabs rax,0x73745f7479706500
  413db9:	cmp    rdx,rax
  413dbc:	jne    413e54 <_start@@Base+0xecf4>
  413dc2:	mov    rax,QWORD PTR [rbp-0x40]
  413dc6:	mov    QWORD PTR [rbp-0x10],rax
  413dca:	mov    rdx,QWORD PTR [rbp-0x48]
  413dce:	mov    rsi,QWORD PTR [rbp-0x10]
  413dd2:	mov    rax,QWORD PTR [rbp-0x38]
  413dd6:	mov    ecx,0x7
  413ddb:	mov    rdi,rax
  413dde:	call   405c48 <_start@@Base+0xae8>
  413de3:	mov    QWORD PTR [rbp-0x40],rax
  413de7:	mov    rax,QWORD PTR [rbp-0x10]
  413deb:	cmp    rax,QWORD PTR [rbp-0x40]
  413def:	je     413e34 <_start@@Base+0xecd4>
  413df1:	mov    rdi,QWORD PTR [rbp-0x20]
  413df5:	mov    rdx,QWORD PTR [rbp-0x48]
  413df9:	mov    rsi,QWORD PTR [rbp-0x40]
  413dfd:	mov    rax,QWORD PTR [rbp-0x38]
  413e01:	lea    rcx,[rip+0xfffffffffffff889]        # 413691 <_start@@Base+0xe531>
  413e08:	push   rcx
  413e09:	lea    rcx,[rip+0x30b50]        # 444960 <__data_start@@Base+0x8a0>
  413e10:	push   rcx
  413e11:	mov    r9,rdi
  413e14:	mov    r8d,0x3
  413e1a:	mov    ecx,0x1
  413e1f:	mov    rdi,rax
  413e22:	call   427b27 <flatcc_json_parser_union_type@@Base>
  413e27:	add    rsp,0x10
  413e2b:	mov    QWORD PTR [rbp-0x40],rax
  413e2f:	jmp    4146b0 <_start@@Base+0xf550>
  413e34:	mov    rdx,QWORD PTR [rbp-0x48]
  413e38:	mov    rcx,QWORD PTR [rbp-0x40]
  413e3c:	mov    rax,QWORD PTR [rbp-0x38]
  413e40:	mov    rsi,rcx
  413e43:	mov    rdi,rax
  413e46:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413e4b:	mov    QWORD PTR [rbp-0x40],rax
  413e4f:	jmp    4146b0 <_start@@Base+0xf550>
  413e54:	movabs rax,0xffff000000000000
  413e5e:	and    rax,QWORD PTR [rbp-0x18]
  413e62:	mov    rdx,rax
  413e65:	movabs rax,0x7374000000000000
  413e6f:	cmp    rdx,rax
  413e72:	jne    413f06 <_start@@Base+0xeda6>
  413e78:	mov    rax,QWORD PTR [rbp-0x40]
  413e7c:	mov    QWORD PTR [rbp-0x10],rax
  413e80:	mov    rdx,QWORD PTR [rbp-0x48]
  413e84:	mov    rsi,QWORD PTR [rbp-0x10]
  413e88:	mov    rax,QWORD PTR [rbp-0x38]
  413e8c:	mov    ecx,0x2
  413e91:	mov    rdi,rax
  413e94:	call   405c48 <_start@@Base+0xae8>
  413e99:	mov    QWORD PTR [rbp-0x40],rax
  413e9d:	mov    rax,QWORD PTR [rbp-0x10]
  413ea1:	cmp    rax,QWORD PTR [rbp-0x40]
  413ea5:	je     413ee6 <_start@@Base+0xed86>
  413ea7:	mov    rdi,QWORD PTR [rbp-0x20]
  413eab:	mov    rdx,QWORD PTR [rbp-0x48]
  413eaf:	mov    rsi,QWORD PTR [rbp-0x40]
  413eb3:	mov    rax,QWORD PTR [rbp-0x38]
  413eb7:	sub    rsp,0x8
  413ebb:	lea    rcx,[rip+0xfffffffffffff7cf]        # 413691 <_start@@Base+0xe531>
  413ec2:	push   rcx
  413ec3:	mov    r9,rdi
  413ec6:	mov    r8d,0x3
  413ecc:	mov    ecx,0x1
  413ed1:	mov    rdi,rax
  413ed4:	call   42794e <flatcc_json_parser_union@@Base>
  413ed9:	add    rsp,0x10
  413edd:	mov    QWORD PTR [rbp-0x40],rax
  413ee1:	jmp    4146b0 <_start@@Base+0xf550>
  413ee6:	mov    rdx,QWORD PTR [rbp-0x48]
  413eea:	mov    rcx,QWORD PTR [rbp-0x40]
  413eee:	mov    rax,QWORD PTR [rbp-0x38]
  413ef2:	mov    rsi,rcx
  413ef5:	mov    rdi,rax
  413ef8:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413efd:	mov    QWORD PTR [rbp-0x40],rax
  413f01:	jmp    4146b0 <_start@@Base+0xf550>
  413f06:	mov    rdx,QWORD PTR [rbp-0x48]
  413f0a:	mov    rcx,QWORD PTR [rbp-0x40]
  413f0e:	mov    rax,QWORD PTR [rbp-0x38]
  413f12:	mov    rsi,rcx
  413f15:	mov    rdi,rax
  413f18:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  413f1d:	mov    QWORD PTR [rbp-0x40],rax
  413f21:	jmp    4146b0 <_start@@Base+0xf550>
  413f26:	movabs rax,0x63616d656f5f7479
  413f30:	cmp    QWORD PTR [rbp-0x18],rax
  413f34:	jne    41402c <_start@@Base+0xeecc>
  413f3a:	add    QWORD PTR [rbp-0x40],0x8
  413f3f:	mov    rdx,QWORD PTR [rbp-0x48]
  413f43:	mov    rax,QWORD PTR [rbp-0x40]
  413f47:	mov    rsi,rdx
  413f4a:	mov    rdi,rax
  413f4d:	call   405756 <_start@@Base+0x5f6>
  413f52:	mov    QWORD PTR [rbp-0x18],rax
  413f56:	movabs rax,0xffff000000000000
  413f60:	and    rax,QWORD PTR [rbp-0x18]
  413f64:	mov    rdx,rax
  413f67:	movabs rax,0x7065000000000000
  413f71:	cmp    rdx,rax
  413f74:	jne    41400c <_start@@Base+0xeeac>
  413f7a:	mov    rax,QWORD PTR [rbp-0x40]
  413f7e:	mov    QWORD PTR [rbp-0x10],rax
  413f82:	mov    rdx,QWORD PTR [rbp-0x48]
  413f86:	mov    rsi,QWORD PTR [rbp-0x10]
  413f8a:	mov    rax,QWORD PTR [rbp-0x38]
  413f8e:	mov    ecx,0x2
  413f93:	mov    rdi,rax
  413f96:	call   405c48 <_start@@Base+0xae8>
  413f9b:	mov    QWORD PTR [rbp-0x40],rax
  413f9f:	mov    rax,QWORD PTR [rbp-0x10]
  413fa3:	cmp    rax,QWORD PTR [rbp-0x40]
  413fa7:	je     413fec <_start@@Base+0xee8c>
  413fa9:	mov    rdi,QWORD PTR [rbp-0x20]
  413fad:	mov    rdx,QWORD PTR [rbp-0x48]
  413fb1:	mov    rsi,QWORD PTR [rbp-0x40]
  413fb5:	mov    rax,QWORD PTR [rbp-0x38]
  413fb9:	lea    rcx,[rip+0xfffffffffffff6d1]        # 413691 <_start@@Base+0xe531>
  413fc0:	push   rcx
  413fc1:	lea    rcx,[rip+0x309b8]        # 444980 <__data_start@@Base+0x8c0>
  413fc8:	push   rcx
  413fc9:	mov    r9,rdi
  413fcc:	mov    r8d,0x7
  413fd2:	mov    ecx,0x3
  413fd7:	mov    rdi,rax
  413fda:	call   427b27 <flatcc_json_parser_union_type@@Base>
  413fdf:	add    rsp,0x10
  413fe3:	mov    QWORD PTR [rbp-0x40],rax
  413fe7:	jmp    4146b0 <_start@@Base+0xf550>
  413fec:	mov    rdx,QWORD PTR [rbp-0x48]
  413ff0:	mov    rcx,QWORD PTR [rbp-0x40]
  413ff4:	mov    rax,QWORD PTR [rbp-0x38]
  413ff8:	mov    rsi,rcx
  413ffb:	mov    rdi,rax
  413ffe:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  414003:	mov    QWORD PTR [rbp-0x40],rax
  414007:	jmp    4146b0 <_start@@Base+0xf550>
  41400c:	mov    rdx,QWORD PTR [rbp-0x48]
  414010:	mov    rcx,QWORD PTR [rbp-0x40]
  414014:	mov    rax,QWORD PTR [rbp-0x38]
  414018:	mov    rsi,rcx
  41401b:	mov    rdi,rax
  41401e:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  414023:	mov    QWORD PTR [rbp-0x40],rax
  414027:	jmp    4146b0 <_start@@Base+0xf550>
  41402c:	mov    rax,QWORD PTR [rbp-0x18]
  414030:	and    rax,0xffffffffff000000
  414036:	mov    rdx,rax
  414039:	movabs rax,0x63616d656f000000
  414043:	cmp    rdx,rax
  414046:	jne    4140da <_start@@Base+0xef7a>
  41404c:	mov    rax,QWORD PTR [rbp-0x40]
  414050:	mov    QWORD PTR [rbp-0x10],rax
  414054:	mov    rdx,QWORD PTR [rbp-0x48]
  414058:	mov    rsi,QWORD PTR [rbp-0x10]
  41405c:	mov    rax,QWORD PTR [rbp-0x38]
  414060:	mov    ecx,0x5
  414065:	mov    rdi,rax
  414068:	call   405c48 <_start@@Base+0xae8>
  41406d:	mov    QWORD PTR [rbp-0x40],rax
  414071:	mov    rax,QWORD PTR [rbp-0x10]
  414075:	cmp    rax,QWORD PTR [rbp-0x40]
  414079:	je     4140ba <_start@@Base+0xef5a>
  41407b:	mov    rdi,QWORD PTR [rbp-0x20]
  41407f:	mov    rdx,QWORD PTR [rbp-0x48]
  414083:	mov    rsi,QWORD PTR [rbp-0x40]
  414087:	mov    rax,QWORD PTR [rbp-0x38]
  41408b:	sub    rsp,0x8
  41408f:	lea    rcx,[rip+0xfffffffffffff5fb]        # 413691 <_start@@Base+0xe531>
  414096:	push   rcx
  414097:	mov    r9,rdi
  41409a:	mov    r8d,0x7
  4140a0:	mov    ecx,0x3
  4140a5:	mov    rdi,rax
  4140a8:	call   42794e <flatcc_json_parser_union@@Base>
  4140ad:	add    rsp,0x10
  4140b1:	mov    QWORD PTR [rbp-0x40],rax
  4140b5:	jmp    4146b0 <_start@@Base+0xf550>
  4140ba:	mov    rdx,QWORD PTR [rbp-0x48]
  4140be:	mov    rcx,QWORD PTR [rbp-0x40]
  4140c2:	mov    rax,QWORD PTR [rbp-0x38]
  4140c6:	mov    rsi,rcx
  4140c9:	mov    rdi,rax
  4140cc:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4140d1:	mov    QWORD PTR [rbp-0x40],rax
  4140d5:	jmp    4146b0 <_start@@Base+0xf550>
  4140da:	mov    rdx,QWORD PTR [rbp-0x48]
  4140de:	mov    rcx,QWORD PTR [rbp-0x40]
  4140e2:	mov    rax,QWORD PTR [rbp-0x38]
  4140e6:	mov    rsi,rcx
  4140e9:	mov    rdi,rax
  4140ec:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4140f1:	mov    QWORD PTR [rbp-0x40],rax
  4140f5:	jmp    4146b0 <_start@@Base+0xf550>
  4140fa:	movabs rax,0x6d61696e5f636860
  414104:	cmp    QWORD PTR [rbp-0x18],rax
  414108:	ja     4142ea <_start@@Base+0xf18a>
  41410e:	movabs rax,0x6368617261637465
  414118:	cmp    QWORD PTR [rbp-0x18],rax
  41411c:	jne    4142ca <_start@@Base+0xf16a>
  414122:	add    QWORD PTR [rbp-0x40],0x8
  414127:	mov    rdx,QWORD PTR [rbp-0x48]
  41412b:	mov    rax,QWORD PTR [rbp-0x40]
  41412f:	mov    rsi,rdx
  414132:	mov    rdi,rax
  414135:	call   405756 <_start@@Base+0x5f6>
  41413a:	mov    QWORD PTR [rbp-0x18],rax
  41413e:	mov    rax,QWORD PTR [rbp-0x18]
  414142:	mov    al,0x0
  414144:	mov    rdx,rax
  414147:	movabs rax,0x72735f7479706500
  414151:	cmp    rdx,rax
  414154:	jne    4141f8 <_start@@Base+0xf098>
  41415a:	mov    rax,QWORD PTR [rbp-0x40]
  41415e:	mov    QWORD PTR [rbp-0x10],rax
  414162:	mov    rdx,QWORD PTR [rbp-0x48]
  414166:	mov    rsi,QWORD PTR [rbp-0x10]
  41416a:	mov    rax,QWORD PTR [rbp-0x38]
  41416e:	mov    ecx,0x7
  414173:	mov    rdi,rax
  414176:	call   405c48 <_start@@Base+0xae8>
  41417b:	mov    QWORD PTR [rbp-0x40],rax
  41417f:	mov    rax,QWORD PTR [rbp-0x10]
  414183:	cmp    rax,QWORD PTR [rbp-0x40]
  414187:	je     4141d8 <_start@@Base+0xf078>
  414189:	mov    rdi,QWORD PTR [rbp-0x20]
  41418d:	mov    rdx,QWORD PTR [rbp-0x48]
  414191:	mov    rsi,QWORD PTR [rbp-0x40]
  414195:	mov    rax,QWORD PTR [rbp-0x38]
  414199:	sub    rsp,0x8
  41419d:	lea    rcx,[rip+0xfffffffffffff6b2]        # 413856 <_start@@Base+0xe6f6>
  4141a4:	push   rcx
  4141a5:	lea    rcx,[rip+0xfffffffffffff4e5]        # 413691 <_start@@Base+0xe531>
  4141ac:	push   rcx
  4141ad:	lea    rcx,[rip+0x307ec]        # 4449a0 <__data_start@@Base+0x8e0>
  4141b4:	push   rcx
  4141b5:	mov    r9,rdi
  4141b8:	mov    r8d,0x9
  4141be:	mov    ecx,0x4
  4141c3:	mov    rdi,rax
  4141c6:	call   4280eb <flatcc_json_parser_union_type_vector@@Base>
  4141cb:	add    rsp,0x20
  4141cf:	mov    QWORD PTR [rbp-0x40],rax
  4141d3:	jmp    4146b0 <_start@@Base+0xf550>
  4141d8:	mov    rdx,QWORD PTR [rbp-0x48]
  4141dc:	mov    rcx,QWORD PTR [rbp-0x40]
  4141e0:	mov    rax,QWORD PTR [rbp-0x38]
  4141e4:	mov    rsi,rcx
  4141e7:	mov    rdi,rax
  4141ea:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4141ef:	mov    QWORD PTR [rbp-0x40],rax
  4141f3:	jmp    4146b0 <_start@@Base+0xf550>
  4141f8:	movabs rax,0xffff000000000000
  414202:	and    rax,QWORD PTR [rbp-0x18]
  414206:	mov    rdx,rax
  414209:	movabs rax,0x7273000000000000
  414213:	cmp    rdx,rax
  414216:	jne    4142aa <_start@@Base+0xf14a>
  41421c:	mov    rax,QWORD PTR [rbp-0x40]
  414220:	mov    QWORD PTR [rbp-0x10],rax
  414224:	mov    rdx,QWORD PTR [rbp-0x48]
  414228:	mov    rsi,QWORD PTR [rbp-0x10]
  41422c:	mov    rax,QWORD PTR [rbp-0x38]
  414230:	mov    ecx,0x2
  414235:	mov    rdi,rax
  414238:	call   405c48 <_start@@Base+0xae8>
  41423d:	mov    QWORD PTR [rbp-0x40],rax
  414241:	mov    rax,QWORD PTR [rbp-0x10]
  414245:	cmp    rax,QWORD PTR [rbp-0x40]
  414249:	je     41428a <_start@@Base+0xf12a>
  41424b:	mov    rdi,QWORD PTR [rbp-0x20]
  41424f:	mov    rdx,QWORD PTR [rbp-0x48]
  414253:	mov    rsi,QWORD PTR [rbp-0x40]
  414257:	mov    rax,QWORD PTR [rbp-0x38]
  41425b:	sub    rsp,0x8
  41425f:	lea    rcx,[rip+0xfffffffffffff42b]        # 413691 <_start@@Base+0xe531>
  414266:	push   rcx
  414267:	mov    r9,rdi
  41426a:	mov    r8d,0x9
  414270:	mov    ecx,0x4
  414275:	mov    rdi,rax
  414278:	call   427fa3 <flatcc_json_parser_union_vector@@Base>
  41427d:	add    rsp,0x10
  414281:	mov    QWORD PTR [rbp-0x40],rax
  414285:	jmp    4146b0 <_start@@Base+0xf550>
  41428a:	mov    rdx,QWORD PTR [rbp-0x48]
  41428e:	mov    rcx,QWORD PTR [rbp-0x40]
  414292:	mov    rax,QWORD PTR [rbp-0x38]
  414296:	mov    rsi,rcx
  414299:	mov    rdi,rax
  41429c:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4142a1:	mov    QWORD PTR [rbp-0x40],rax
  4142a5:	jmp    4146b0 <_start@@Base+0xf550>
  4142aa:	mov    rdx,QWORD PTR [rbp-0x48]
  4142ae:	mov    rcx,QWORD PTR [rbp-0x40]
  4142b2:	mov    rax,QWORD PTR [rbp-0x38]
  4142b6:	mov    rsi,rcx
  4142b9:	mov    rdi,rax
  4142bc:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4142c1:	mov    QWORD PTR [rbp-0x40],rax
  4142c5:	jmp    4146b0 <_start@@Base+0xf550>
  4142ca:	mov    rdx,QWORD PTR [rbp-0x48]
  4142ce:	mov    rcx,QWORD PTR [rbp-0x40]
  4142d2:	mov    rax,QWORD PTR [rbp-0x38]
  4142d6:	mov    rsi,rcx
  4142d9:	mov    rdi,rax
  4142dc:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4142e1:	mov    QWORD PTR [rbp-0x40],rax
  4142e5:	jmp    4146b0 <_start@@Base+0xf550>
  4142ea:	movabs rax,0x6d61696e5f636861
  4142f4:	cmp    QWORD PTR [rbp-0x18],rax
  4142f8:	jne    4144ec <_start@@Base+0xf38c>
  4142fe:	add    QWORD PTR [rbp-0x40],0x8
  414303:	mov    rdx,QWORD PTR [rbp-0x48]
  414307:	mov    rax,QWORD PTR [rbp-0x40]
  41430b:	mov    rsi,rdx
  41430e:	mov    rdi,rax
  414311:	call   405756 <_start@@Base+0x5f6>
  414316:	mov    QWORD PTR [rbp-0x18],rax
  41431a:	movabs rax,0x7261637465725f74
  414324:	cmp    QWORD PTR [rbp-0x18],rax
  414328:	jne    414420 <_start@@Base+0xf2c0>
  41432e:	add    QWORD PTR [rbp-0x40],0x8
  414333:	mov    rdx,QWORD PTR [rbp-0x48]
  414337:	mov    rax,QWORD PTR [rbp-0x40]
  41433b:	mov    rsi,rdx
  41433e:	mov    rdi,rax
  414341:	call   405756 <_start@@Base+0x5f6>
  414346:	mov    QWORD PTR [rbp-0x18],rax
  41434a:	movabs rax,0xffffff0000000000
  414354:	and    rax,QWORD PTR [rbp-0x18]
  414358:	mov    rdx,rax
  41435b:	movabs rax,0x7970650000000000
  414365:	cmp    rdx,rax
  414368:	jne    414400 <_start@@Base+0xf2a0>
  41436e:	mov    rax,QWORD PTR [rbp-0x40]
  414372:	mov    QWORD PTR [rbp-0x10],rax
  414376:	mov    rdx,QWORD PTR [rbp-0x48]
  41437a:	mov    rsi,QWORD PTR [rbp-0x10]
  41437e:	mov    rax,QWORD PTR [rbp-0x38]
  414382:	mov    ecx,0x3
  414387:	mov    rdi,rax
  41438a:	call   405c48 <_start@@Base+0xae8>
  41438f:	mov    QWORD PTR [rbp-0x40],rax
  414393:	mov    rax,QWORD PTR [rbp-0x10]
  414397:	cmp    rax,QWORD PTR [rbp-0x40]
  41439b:	je     4143e0 <_start@@Base+0xf280>
  41439d:	mov    rdi,QWORD PTR [rbp-0x20]
  4143a1:	mov    rdx,QWORD PTR [rbp-0x48]
  4143a5:	mov    rsi,QWORD PTR [rbp-0x40]
  4143a9:	mov    rax,QWORD PTR [rbp-0x38]
  4143ad:	lea    rcx,[rip+0xfffffffffffff2dd]        # 413691 <_start@@Base+0xe531>
  4143b4:	push   rcx
  4143b5:	lea    rcx,[rip+0x30604]        # 4449c0 <__data_start@@Base+0x900>
  4143bc:	push   rcx
  4143bd:	mov    r9,rdi
  4143c0:	mov    r8d,0x1
  4143c6:	mov    ecx,0x0
  4143cb:	mov    rdi,rax
  4143ce:	call   427b27 <flatcc_json_parser_union_type@@Base>
  4143d3:	add    rsp,0x10
  4143d7:	mov    QWORD PTR [rbp-0x40],rax
  4143db:	jmp    4146b0 <_start@@Base+0xf550>
  4143e0:	mov    rdx,QWORD PTR [rbp-0x48]
  4143e4:	mov    rcx,QWORD PTR [rbp-0x40]
  4143e8:	mov    rax,QWORD PTR [rbp-0x38]
  4143ec:	mov    rsi,rcx
  4143ef:	mov    rdi,rax
  4143f2:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4143f7:	mov    QWORD PTR [rbp-0x40],rax
  4143fb:	jmp    4146b0 <_start@@Base+0xf550>
  414400:	mov    rdx,QWORD PTR [rbp-0x48]
  414404:	mov    rcx,QWORD PTR [rbp-0x40]
  414408:	mov    rax,QWORD PTR [rbp-0x38]
  41440c:	mov    rsi,rcx
  41440f:	mov    rdi,rax
  414412:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  414417:	mov    QWORD PTR [rbp-0x40],rax
  41441b:	jmp    4146b0 <_start@@Base+0xf550>
  414420:	mov    rax,QWORD PTR [rbp-0x18]
  414424:	mov    ax,0x0
  414428:	mov    rdx,rax
  41442b:	movabs rax,0x7261637465720000
  414435:	cmp    rdx,rax
  414438:	jne    4144cc <_start@@Base+0xf36c>
  41443e:	mov    rax,QWORD PTR [rbp-0x40]
  414442:	mov    QWORD PTR [rbp-0x10],rax
  414446:	mov    rdx,QWORD PTR [rbp-0x48]
  41444a:	mov    rsi,QWORD PTR [rbp-0x10]
  41444e:	mov    rax,QWORD PTR [rbp-0x38]
  414452:	mov    ecx,0x6
  414457:	mov    rdi,rax
  41445a:	call   405c48 <_start@@Base+0xae8>
  41445f:	mov    QWORD PTR [rbp-0x40],rax
  414463:	mov    rax,QWORD PTR [rbp-0x10]
  414467:	cmp    rax,QWORD PTR [rbp-0x40]
  41446b:	je     4144ac <_start@@Base+0xf34c>
  41446d:	mov    rdi,QWORD PTR [rbp-0x20]
  414471:	mov    rdx,QWORD PTR [rbp-0x48]
  414475:	mov    rsi,QWORD PTR [rbp-0x40]
  414479:	mov    rax,QWORD PTR [rbp-0x38]
  41447d:	sub    rsp,0x8
  414481:	lea    rcx,[rip+0xfffffffffffff209]        # 413691 <_start@@Base+0xe531>
  414488:	push   rcx
  414489:	mov    r9,rdi
  41448c:	mov    r8d,0x1
  414492:	mov    ecx,0x0
  414497:	mov    rdi,rax
  41449a:	call   42794e <flatcc_json_parser_union@@Base>
  41449f:	add    rsp,0x10
  4144a3:	mov    QWORD PTR [rbp-0x40],rax
  4144a7:	jmp    4146b0 <_start@@Base+0xf550>
  4144ac:	mov    rdx,QWORD PTR [rbp-0x48]
  4144b0:	mov    rcx,QWORD PTR [rbp-0x40]
  4144b4:	mov    rax,QWORD PTR [rbp-0x38]
  4144b8:	mov    rsi,rcx
  4144bb:	mov    rdi,rax
  4144be:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4144c3:	mov    QWORD PTR [rbp-0x40],rax
  4144c7:	jmp    4146b0 <_start@@Base+0xf550>
  4144cc:	mov    rdx,QWORD PTR [rbp-0x48]
  4144d0:	mov    rcx,QWORD PTR [rbp-0x40]
  4144d4:	mov    rax,QWORD PTR [rbp-0x38]
  4144d8:	mov    rsi,rcx
  4144db:	mov    rdi,rax
  4144de:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4144e3:	mov    QWORD PTR [rbp-0x40],rax
  4144e7:	jmp    4146b0 <_start@@Base+0xf550>
  4144ec:	movabs rax,0x736964655f6b6963
  4144f6:	cmp    QWORD PTR [rbp-0x18],rax
  4144fa:	jne    414695 <_start@@Base+0xf535>
  414500:	add    QWORD PTR [rbp-0x40],0x8
  414505:	mov    rdx,QWORD PTR [rbp-0x48]
  414509:	mov    rax,QWORD PTR [rbp-0x40]
  41450d:	mov    rsi,rdx
  414510:	mov    rdi,rax
  414513:	call   405756 <_start@@Base+0x5f6>
  414518:	mov    QWORD PTR [rbp-0x18],rax
  41451c:	mov    rax,QWORD PTR [rbp-0x18]
  414520:	mov    ax,0x0
  414524:	mov    rdx,rax
  414527:	movabs rax,0x6b5f747970650000
  414531:	cmp    rdx,rax
  414534:	jne    4145cc <_start@@Base+0xf46c>
  41453a:	mov    rax,QWORD PTR [rbp-0x40]
  41453e:	mov    QWORD PTR [rbp-0x10],rax
  414542:	mov    rdx,QWORD PTR [rbp-0x48]
  414546:	mov    rsi,QWORD PTR [rbp-0x10]
  41454a:	mov    rax,QWORD PTR [rbp-0x38]
  41454e:	mov    ecx,0x6
  414553:	mov    rdi,rax
  414556:	call   405c48 <_start@@Base+0xae8>
  41455b:	mov    QWORD PTR [rbp-0x40],rax
  41455f:	mov    rax,QWORD PTR [rbp-0x10]
  414563:	cmp    rax,QWORD PTR [rbp-0x40]
  414567:	je     4145ac <_start@@Base+0xf44c>
  414569:	mov    rdi,QWORD PTR [rbp-0x20]
  41456d:	mov    rdx,QWORD PTR [rbp-0x48]
  414571:	mov    rsi,QWORD PTR [rbp-0x40]
  414575:	mov    rax,QWORD PTR [rbp-0x38]
  414579:	lea    rcx,[rip+0xfffffffffffff111]        # 413691 <_start@@Base+0xe531>
  414580:	push   rcx
  414581:	lea    rcx,[rip+0x30458]        # 4449e0 <__data_start@@Base+0x920>
  414588:	push   rcx
  414589:	mov    r9,rdi
  41458c:	mov    r8d,0x5
  414592:	mov    ecx,0x2
  414597:	mov    rdi,rax
  41459a:	call   427b27 <flatcc_json_parser_union_type@@Base>
  41459f:	add    rsp,0x10
  4145a3:	mov    QWORD PTR [rbp-0x40],rax
  4145a7:	jmp    4146b0 <_start@@Base+0xf550>
  4145ac:	mov    rdx,QWORD PTR [rbp-0x48]
  4145b0:	mov    rcx,QWORD PTR [rbp-0x40]
  4145b4:	mov    rax,QWORD PTR [rbp-0x38]
  4145b8:	mov    rsi,rcx
  4145bb:	mov    rdi,rax
  4145be:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4145c3:	mov    QWORD PTR [rbp-0x40],rax
  4145c7:	jmp    4146b0 <_start@@Base+0xf550>
  4145cc:	movabs rax,0xff00000000000000
  4145d6:	and    rax,QWORD PTR [rbp-0x18]
  4145da:	mov    rdx,rax
  4145dd:	movabs rax,0x6b00000000000000
  4145e7:	cmp    rdx,rax
  4145ea:	jne    414678 <_start@@Base+0xf518>
  4145f0:	mov    rax,QWORD PTR [rbp-0x40]
  4145f4:	mov    QWORD PTR [rbp-0x10],rax
  4145f8:	mov    rdx,QWORD PTR [rbp-0x48]
  4145fc:	mov    rsi,QWORD PTR [rbp-0x10]
  414600:	mov    rax,QWORD PTR [rbp-0x38]
  414604:	mov    ecx,0x1
  414609:	mov    rdi,rax
  41460c:	call   405c48 <_start@@Base+0xae8>
  414611:	mov    QWORD PTR [rbp-0x40],rax
  414615:	mov    rax,QWORD PTR [rbp-0x10]
  414619:	cmp    rax,QWORD PTR [rbp-0x40]
  41461d:	je     41465b <_start@@Base+0xf4fb>
  41461f:	mov    rdi,QWORD PTR [rbp-0x20]
  414623:	mov    rdx,QWORD PTR [rbp-0x48]
  414627:	mov    rsi,QWORD PTR [rbp-0x40]
  41462b:	mov    rax,QWORD PTR [rbp-0x38]
  41462f:	sub    rsp,0x8
  414633:	lea    rcx,[rip+0xfffffffffffff057]        # 413691 <_start@@Base+0xe531>
  41463a:	push   rcx
  41463b:	mov    r9,rdi
  41463e:	mov    r8d,0x5
  414644:	mov    ecx,0x2
  414649:	mov    rdi,rax
  41464c:	call   42794e <flatcc_json_parser_union@@Base>
  414651:	add    rsp,0x10
  414655:	mov    QWORD PTR [rbp-0x40],rax
  414659:	jmp    4146b0 <_start@@Base+0xf550>
  41465b:	mov    rdx,QWORD PTR [rbp-0x48]
  41465f:	mov    rcx,QWORD PTR [rbp-0x40]
  414663:	mov    rax,QWORD PTR [rbp-0x38]
  414667:	mov    rsi,rcx
  41466a:	mov    rdi,rax
  41466d:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  414672:	mov    QWORD PTR [rbp-0x40],rax
  414676:	jmp    4146b0 <_start@@Base+0xf550>
  414678:	mov    rdx,QWORD PTR [rbp-0x48]
  41467c:	mov    rcx,QWORD PTR [rbp-0x40]
  414680:	mov    rax,QWORD PTR [rbp-0x38]
  414684:	mov    rsi,rcx
  414687:	mov    rdi,rax
  41468a:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  41468f:	mov    QWORD PTR [rbp-0x40],rax
  414693:	jmp    4146b0 <_start@@Base+0xf550>
  414695:	mov    rdx,QWORD PTR [rbp-0x48]
  414699:	mov    rcx,QWORD PTR [rbp-0x40]
  41469d:	mov    rax,QWORD PTR [rbp-0x38]
  4146a1:	mov    rsi,rcx
  4146a4:	mov    rdi,rax
  4146a7:	call   4265ed <flatcc_json_parser_unmatched_symbol@@Base>
  4146ac:	mov    QWORD PTR [rbp-0x40],rax
  4146b0:	lea    rcx,[rbp-0x24]
  4146b4:	mov    rdx,QWORD PTR [rbp-0x48]
  4146b8:	mov    rsi,QWORD PTR [rbp-0x40]
  4146bc:	mov    rax,QWORD PTR [rbp-0x38]
  4146c0:	mov    rdi,rax
  4146c3:	call   40590f <_start@@Base+0x7af>
  4146c8:	mov    QWORD PTR [rbp-0x40],rax
  4146cc:	mov    eax,DWORD PTR [rbp-0x24]
  4146cf:	test   eax,eax
  4146d1:	jne    413d30 <_start@@Base+0xebd0>
  4146d7:	mov    rax,QWORD PTR [rbp-0x38]
  4146db:	mov    eax,DWORD PTR [rax+0x1c]
  4146de:	test   eax,eax
  4146e0:	jne    41472b <_start@@Base+0xf5cb>
  4146e2:	mov    rcx,QWORD PTR [rbp-0x20]
  4146e6:	mov    rdx,QWORD PTR [rbp-0x48]
  4146ea:	mov    rsi,QWORD PTR [rbp-0x40]
  4146ee:	mov    rax,QWORD PTR [rbp-0x38]
  4146f2:	mov    rdi,rax
  4146f5:	call   4278d6 <flatcc_json_parser_finalize_unions@@Base>
  4146fa:	mov    QWORD PTR [rbp-0x40],rax
  4146fe:	mov    rax,QWORD PTR [rbp-0x38]
  414702:	mov    rax,QWORD PTR [rax]
  414705:	mov    rdi,rax
  414708:	call   41d7cb <flatcc_builder_end_table@@Base>
  41470d:	mov    edx,eax
  41470f:	mov    rax,QWORD PTR [rbp-0x50]
  414713:	mov    DWORD PTR [rax],edx
  414715:	mov    rax,QWORD PTR [rbp-0x50]
  414719:	mov    eax,DWORD PTR [rax]
  41471b:	test   eax,eax
  41471d:	je     41472e <_start@@Base+0xf5ce>
  41471f:	mov    rax,QWORD PTR [rbp-0x40]
  414723:	jmp    414748 <_start@@Base+0xf5e8>
  414725:	nop
  414726:	jmp    41472f <_start@@Base+0xf5cf>
  414728:	nop
  414729:	jmp    41472f <_start@@Base+0xf5cf>
  41472b:	nop
  41472c:	jmp    41472f <_start@@Base+0xf5cf>
  41472e:	nop
  41472f:	mov    rdx,QWORD PTR [rbp-0x48]
  414733:	mov    rsi,QWORD PTR [rbp-0x40]
  414737:	mov    rax,QWORD PTR [rbp-0x38]
  41473b:	mov    ecx,0x21
  414740:	mov    rdi,rax
  414743:	call   425bce <flatcc_json_parser_set_error@@Base>
  414748:	mov    rdi,QWORD PTR [rbp-0x8]
  41474c:	xor    rdi,QWORD PTR fs:0x28
  414755:	je     41475c <_start@@Base+0xf5fc>
  414757:	call   405070 <__stack_chk_fail@plt>
  41475c:	leave  
  41475d:	ret    
  41475e:	push   rbp
  41475f:	mov    rbp,rsp
  414762:	mov    QWORD PTR [rbp-0x8],rdi
  414766:	mov    QWORD PTR [rbp-0x10],rsi
  41476a:	mov    QWORD PTR [rbp-0x18],rdx
  41476e:	mov    QWORD PTR [rbp-0x20],rcx
  414772:	mov    QWORD PTR [rbp-0x28],r8
  414776:	mov    QWORD PTR [rbp-0x30],r9
  41477a:	mov    rax,QWORD PTR [rbp-0x10]
  41477e:	pop    rbp
  41477f:	ret    
  414780:	push   rbp
  414781:	mov    rbp,rsp
  414784:	sub    rsp,0x50
  414788:	mov    QWORD PTR [rbp-0x28],rdi
  41478c:	mov    QWORD PTR [rbp-0x30],rsi
  414790:	mov    QWORD PTR [rbp-0x38],rdx
  414794:	mov    QWORD PTR [rbp-0x40],rcx
  414798:	mov    QWORD PTR [rbp-0x48],r8
  41479c:	mov    QWORD PTR [rbp-0x50],r9
  4147a0:	mov    rax,QWORD PTR [rbp-0x30]
  4147a4:	mov    QWORD PTR [rbp-0x18],rax
  4147a8:	mov    rdx,QWORD PTR [rbp-0x38]
  4147ac:	mov    rax,QWORD PTR [rbp-0x30]
  4147b0:	mov    rsi,rdx
  4147b3:	mov    rdi,rax
  4147b6:	call   405756 <_start@@Base+0x5f6>
  4147bb:	mov    QWORD PTR [rbp-0x10],rax
  4147bf:	movabs rax,0x6865785f656e756c
  4147c9:	cmp    QWORD PTR [rbp-0x10],rax
  4147cd:	ja     41498a <_start@@Base+0xf82a>
  4147d3:	movabs rax,0x436f6c6f71ffffff
  4147dd:	cmp    QWORD PTR [rbp-0x10],rax
  4147e1:	ja     414877 <_start@@Base+0xf717>
  4147e7:	movabs rax,0xffffff0000000000
  4147f1:	and    rax,QWORD PTR [rbp-0x10]
  4147f5:	mov    rdx,rax
  4147f8:	movabs rax,0x416e790000000000
  414802:	cmp    rdx,rax
  414805:	jne    41486e <_start@@Base+0xf70e>
  414807:	mov    rax,QWORD PTR [rbp-0x30]
  41480b:	mov    QWORD PTR [rbp-0x8],rax
  41480f:	mov    rdx,QWORD PTR [rbp-0x38]
  414813:	mov    rsi,QWORD PTR [rbp-0x8]
  414817:	mov    rax,QWORD PTR [rbp-0x28]
  41481b:	mov    ecx,0x3
  414820:	mov    rdi,rax
  414823:	call   4057a0 <_start@@Base+0x640>
  414828:	mov    QWORD PTR [rbp-0x30],rax
  41482c:	mov    rax,QWORD PTR [rbp-0x30]
  414830:	cmp    rax,QWORD PTR [rbp-0x8]
  414834:	je     414865 <_start@@Base+0xf705>
  414836:	mov    r8,QWORD PTR [rbp-0x50]
  41483a:	mov    rdi,QWORD PTR [rbp-0x48]
  41483e:	mov    rcx,QWORD PTR [rbp-0x40]
  414842:	mov    rdx,QWORD PTR [rbp-0x38]
  414846:	mov    rsi,QWORD PTR [rbp-0x30]
  41484a:	mov    rax,QWORD PTR [rbp-0x28]
  41484e:	mov    r9,r8
  414851:	mov    r8,rdi
  414854:	mov    rdi,rax
  414857:	call   409321 <_start@@Base+0x41c1>
  41485c:	mov    QWORD PTR [rbp-0x30],rax
  414860:	jmp    414be1 <_start@@Base+0xfa81>
  414865:	mov    rax,QWORD PTR [rbp-0x18]
  414869:	jmp    414be5 <_start@@Base+0xfa85>
  41486e:	mov    rax,QWORD PTR [rbp-0x18]
  414872:	jmp    414be5 <_start@@Base+0xfa85>
  414877:	movabs rax,0xffffff0000000000
  414881:	and    rax,QWORD PTR [rbp-0x10]
  414885:	mov    rdx,rax
  414888:	movabs rax,0x466f6f0000000000
  414892:	cmp    rdx,rax
  414895:	jne    4148fe <_start@@Base+0xf79e>
  414897:	mov    rax,QWORD PTR [rbp-0x30]
  41489b:	mov    QWORD PTR [rbp-0x8],rax
  41489f:	mov    rdx,QWORD PTR [rbp-0x38]
  4148a3:	mov    rsi,QWORD PTR [rbp-0x8]
  4148a7:	mov    rax,QWORD PTR [rbp-0x28]
  4148ab:	mov    ecx,0x3
  4148b0:	mov    rdi,rax
  4148b3:	call   4057a0 <_start@@Base+0x640>
  4148b8:	mov    QWORD PTR [rbp-0x30],rax
  4148bc:	mov    rax,QWORD PTR [rbp-0x30]
  4148c0:	cmp    rax,QWORD PTR [rbp-0x8]
  4148c4:	je     4148f5 <_start@@Base+0xf795>
  4148c6:	mov    r8,QWORD PTR [rbp-0x50]
  4148ca:	mov    rdi,QWORD PTR [rbp-0x48]
  4148ce:	mov    rcx,QWORD PTR [rbp-0x40]
  4148d2:	mov    rdx,QWORD PTR [rbp-0x38]
  4148d6:	mov    rsi,QWORD PTR [rbp-0x30]
  4148da:	mov    rax,QWORD PTR [rbp-0x28]
  4148de:	mov    r9,r8
  4148e1:	mov    r8,rdi
  4148e4:	mov    rdi,rax
  4148e7:	call   408816 <_start@@Base+0x36b6>
  4148ec:	mov    QWORD PTR [rbp-0x30],rax
  4148f0:	jmp    414be1 <_start@@Base+0xfa81>
  4148f5:	mov    rax,QWORD PTR [rbp-0x18]
  4148f9:	jmp    414be5 <_start@@Base+0xfa85>
  4148fe:	mov    rax,QWORD PTR [rbp-0x10]
  414902:	and    rax,0xffffffffff000000
  414908:	mov    rdx,rax
  41490b:	movabs rax,0x436f6c6f72000000
  414915:	cmp    rdx,rax
  414918:	jne    414981 <_start@@Base+0xf821>
  41491a:	mov    rax,QWORD PTR [rbp-0x30]
  41491e:	mov    QWORD PTR [rbp-0x8],rax
  414922:	mov    rdx,QWORD PTR [rbp-0x38]
  414926:	mov    rsi,QWORD PTR [rbp-0x8]
  41492a:	mov    rax,QWORD PTR [rbp-0x28]
  41492e:	mov    ecx,0x5
  414933:	mov    rdi,rax
  414936:	call   4057a0 <_start@@Base+0x640>
  41493b:	mov    QWORD PTR [rbp-0x30],rax
  41493f:	mov    rax,QWORD PTR [rbp-0x30]
  414943:	cmp    rax,QWORD PTR [rbp-0x8]
  414947:	je     414978 <_start@@Base+0xf818>
  414949:	mov    r8,QWORD PTR [rbp-0x50]
  41494d:	mov    rdi,QWORD PTR [rbp-0x48]
  414951:	mov    rcx,QWORD PTR [rbp-0x40]
  414955:	mov    rdx,QWORD PTR [rbp-0x38]
  414959:	mov    rsi,QWORD PTR [rbp-0x30]
  41495d:	mov    rax,QWORD PTR [rbp-0x28]
  414961:	mov    r9,r8
  414964:	mov    r8,rdi
  414967:	mov    rdi,rax
  41496a:	call   408f93 <_start@@Base+0x3e33>
  41496f:	mov    QWORD PTR [rbp-0x30],rax
  414973:	jmp    414be1 <_start@@Base+0xfa81>
  414978:	mov    rax,QWORD PTR [rbp-0x18]
  41497c:	jmp    414be5 <_start@@Base+0xfa85>
  414981:	mov    rax,QWORD PTR [rbp-0x18]
  414985:	jmp    414be5 <_start@@Base+0xfa85>
  41498a:	movabs rax,0x696e745f656e756c
  414994:	cmp    QWORD PTR [rbp-0x10],rax
  414998:	ja     414a1e <_start@@Base+0xf8be>
  41499e:	movabs rax,0x6865785f656e756d
  4149a8:	cmp    QWORD PTR [rbp-0x10],rax
  4149ac:	jne    414a15 <_start@@Base+0xf8b5>
  4149ae:	mov    rax,QWORD PTR [rbp-0x30]
  4149b2:	mov    QWORD PTR [rbp-0x8],rax
  4149b6:	mov    rdx,QWORD PTR [rbp-0x38]
  4149ba:	mov    rsi,QWORD PTR [rbp-0x8]
  4149be:	mov    rax,QWORD PTR [rbp-0x28]
  4149c2:	mov    ecx,0x8
  4149c7:	mov    rdi,rax
  4149ca:	call   4057a0 <_start@@Base+0x640>
  4149cf:	mov    QWORD PTR [rbp-0x30],rax
  4149d3:	mov    rax,QWORD PTR [rbp-0x30]
  4149d7:	cmp    rax,QWORD PTR [rbp-0x8]
  4149db:	je     414a0c <_start@@Base+0xf8ac>
  4149dd:	mov    r8,QWORD PTR [rbp-0x50]
  4149e1:	mov    rdi,QWORD PTR [rbp-0x48]
  4149e5:	mov    rcx,QWORD PTR [rbp-0x40]
  4149e9:	mov    rdx,QWORD PTR [rbp-0x38]
  4149ed:	mov    rsi,QWORD PTR [rbp-0x30]
  4149f1:	mov    rax,QWORD PTR [rbp-0x28]
  4149f5:	mov    r9,r8
  4149f8:	mov    r8,rdi
  4149fb:	mov    rdi,rax
  4149fe:	call   408dd2 <_start@@Base+0x3c72>
  414a03:	mov    QWORD PTR [rbp-0x30],rax
  414a07:	jmp    414be1 <_start@@Base+0xfa81>
  414a0c:	mov    rax,QWORD PTR [rbp-0x18]
  414a10:	jmp    414be5 <_start@@Base+0xfa85>
  414a15:	mov    rax,QWORD PTR [rbp-0x18]
  414a19:	jmp    414be5 <_start@@Base+0xfa85>
  414a1e:	movabs rax,0x6e65675f656e756c
  414a28:	cmp    QWORD PTR [rbp-0x10],rax
  414a2c:	ja     414ab2 <_start@@Base+0xf952>
  414a32:	movabs rax,0x696e745f656e756d
  414a3c:	cmp    QWORD PTR [rbp-0x10],rax
  414a40:	jne    414aa9 <_start@@Base+0xf949>
  414a42:	mov    rax,QWORD PTR [rbp-0x30]
  414a46:	mov    QWORD PTR [rbp-0x8],rax
  414a4a:	mov    rdx,QWORD PTR [rbp-0x38]
  414a4e:	mov    rsi,QWORD PTR [rbp-0x8]
  414a52:	mov    rax,QWORD PTR [rbp-0x28]
  414a56:	mov    ecx,0x8
  414a5b:	mov    rdi,rax
  414a5e:	call   4057a0 <_start@@Base+0x640>
  414a63:	mov    QWORD PTR [rbp-0x30],rax
  414a67:	mov    rax,QWORD PTR [rbp-0x30]
  414a6b:	cmp    rax,QWORD PTR [rbp-0x8]
  414a6f:	je     414aa0 <_start@@Base+0xf940>
  414a71:	mov    r8,QWORD PTR [rbp-0x50]
  414a75:	mov    rdi,QWORD PTR [rbp-0x48]
  414a79:	mov    rcx,QWORD PTR [rbp-0x40]
  414a7d:	mov    rdx,QWORD PTR [rbp-0x38]
  414a81:	mov    rsi,QWORD PTR [rbp-0x30]
  414a85:	mov    rax,QWORD PTR [rbp-0x28]
  414a89:	mov    r9,r8
  414a8c:	mov    r8,rdi
  414a8f:	mov    rdi,rax
  414a92:	call   408b83 <_start@@Base+0x3a23>
  414a97:	mov    QWORD PTR [rbp-0x30],rax
  414a9b:	jmp    414be1 <_start@@Base+0xfa81>
  414aa0:	mov    rax,QWORD PTR [rbp-0x18]
  414aa4:	jmp    414be5 <_start@@Base+0xfa85>
  414aa9:	mov    rax,QWORD PTR [rbp-0x18]
  414aad:	jmp    414be5 <_start@@Base+0xfa85>
  414ab2:	movabs rax,0x6e65675f656e756d
  414abc:	cmp    QWORD PTR [rbp-0x10],rax
  414ac0:	jne    414b20 <_start@@Base+0xf9c0>
  414ac2:	mov    rax,QWORD PTR [rbp-0x30]
  414ac6:	mov    QWORD PTR [rbp-0x8],rax
  414aca:	mov    rdx,QWORD PTR [rbp-0x38]
  414ace:	mov    rsi,QWORD PTR [rbp-0x8]
  414ad2:	mov    rax,QWORD PTR [rbp-0x28]
  414ad6:	mov    ecx,0x8
  414adb:	mov    rdi,rax
  414ade:	call   4057a0 <_start@@Base+0x640>
  414ae3:	mov    QWORD PTR [rbp-0x30],rax
  414ae7:	mov    rax,QWORD PTR [rbp-0x30]
  414aeb:	cmp    rax,QWORD PTR [rbp-0x8]
  414aef:	je     414b23 <_start@@Base+0xf9c3>
  414af1:	mov    r8,QWORD PTR [rbp-0x50]
  414af5:	mov    rdi,QWORD PTR [rbp-0x48]
  414af9:	mov    rcx,QWORD PTR [rbp-0x40]
  414afd:	mov    rdx,QWORD PTR [rbp-0x38]
  414b01:	mov    rsi,QWORD PTR [rbp-0x30]
  414b05:	mov    rax,QWORD PTR [rbp-0x28]
  414b09:	mov    r9,r8
  414b0c:	mov    r8,rdi
  414b0f:	mov    rdi,rax
  414b12:	call   4089bc <_start@@Base+0x385c>
  414b17:	mov    QWORD PTR [rbp-0x30],rax
  414b1b:	jmp    414be1 <_start@@Base+0xfa81>
  414b20:	nop
  414b21:	jmp    414b24 <_start@@Base+0xf9c4>
  414b23:	nop
  414b24:	movabs rax,0x6e6f74656d707479
  414b2e:	cmp    QWORD PTR [rbp-0x10],rax
  414b32:	jne    414bdb <_start@@Base+0xfa7b>
  414b38:	add    QWORD PTR [rbp-0x30],0x8
  414b3d:	mov    rdx,QWORD PTR [rbp-0x38]
  414b41:	mov    rax,QWORD PTR [rbp-0x30]
  414b45:	mov    rsi,rdx
  414b48:	mov    rdi,rax
  414b4b:	call   405756 <_start@@Base+0x5f6>
  414b50:	mov    QWORD PTR [rbp-0x10],rax
  414b54:	movabs rax,0xffffffff00000000
  414b5e:	and    rax,QWORD PTR [rbp-0x10]
  414b62:	mov    rdx,rax
  414b65:	movabs rax,0x656e756d00000000
  414b6f:	cmp    rdx,rax
  414b72:	jne    414bd5 <_start@@Base+0xfa75>
  414b74:	mov    rax,QWORD PTR [rbp-0x30]
  414b78:	mov    QWORD PTR [rbp-0x8],rax
  414b7c:	mov    rdx,QWORD PTR [rbp-0x38]
  414b80:	mov    rsi,QWORD PTR [rbp-0x8]
  414b84:	mov    rax,QWORD PTR [rbp-0x28]
  414b88:	mov    ecx,0x4
  414b8d:	mov    rdi,rax
  414b90:	call   4057a0 <_start@@Base+0x640>
  414b95:	mov    QWORD PTR [rbp-0x30],rax
  414b99:	mov    rax,QWORD PTR [rbp-0x30]
  414b9d:	cmp    rax,QWORD PTR [rbp-0x8]
  414ba1:	je     414bcf <_start@@Base+0xfa6f>
  414ba3:	mov    r8,QWORD PTR [rbp-0x50]
  414ba7:	mov    rdi,QWORD PTR [rbp-0x48]
  414bab:	mov    rcx,QWORD PTR [rbp-0x40]
  414baf:	mov    rdx,QWORD PTR [rbp-0x38]
  414bb3:	mov    rsi,QWORD PTR [rbp-0x30]
  414bb7:	mov    rax,QWORD PTR [rbp-0x28]
  414bbb:	mov    r9,r8
  414bbe:	mov    r8,rdi
  414bc1:	mov    rdi,rax
  414bc4:	call   409e62 <_start@@Base+0x4d02>
  414bc9:	mov    QWORD PTR [rbp-0x30],rax
  414bcd:	jmp    414be1 <_start@@Base+0xfa81>
  414bcf:	mov    rax,QWORD PTR [rbp-0x18]
  414bd3:	jmp    414be5 <_start@@Base+0xfa85>
  414bd5:	mov    rax,QWORD PTR [rbp-0x18]
  414bd9:	jmp    414be5 <_start@@Base+0xfa85>
  414bdb:	mov    rax,QWORD PTR [rbp-0x18]
  414bdf:	jmp    414be5 <_start@@Base+0xfa85>
  414be1:	mov    rax,QWORD PTR [rbp-0x30]
  414be5:	leave  
  414be6:	ret    
  414be7:	push   rbp
  414be8:	mov    rbp,rsp
  414beb:	mov    QWORD PTR [rbp-0x8],rdi
  414bef:	mov    QWORD PTR [rbp-0x10],rsi
  414bf3:	mov    QWORD PTR [rbp-0x18],rdx
  414bf7:	mov    QWORD PTR [rbp-0x20],rcx
  414bfb:	mov    QWORD PTR [rbp-0x28],r8
  414bff:	mov    QWORD PTR [rbp-0x30],r9
  414c03:	mov    rax,QWORD PTR [rbp-0x10]
  414c07:	pop    rbp
  414c08:	ret    
  414c09:	push   rbp
  414c0a:	mov    rbp,rsp
  414c0d:	mov    QWORD PTR [rbp-0x8],rdi
  414c11:	mov    QWORD PTR [rbp-0x10],rsi
  414c15:	mov    QWORD PTR [rbp-0x18],rdx
  414c19:	mov    QWORD PTR [rbp-0x20],rcx
  414c1d:	mov    QWORD PTR [rbp-0x28],r8
  414c21:	mov    QWORD PTR [rbp-0x30],r9
  414c25:	mov    rax,QWORD PTR [rbp-0x10]
  414c29:	pop    rbp
  414c2a:	ret    
  414c2b:	push   rbp
  414c2c:	mov    rbp,rsp
  414c2f:	sub    rsp,0x50
  414c33:	mov    QWORD PTR [rbp-0x28],rdi
  414c37:	mov    QWORD PTR [rbp-0x30],rsi
  414c3b:	mov    QWORD PTR [rbp-0x38],rdx
  414c3f:	mov    QWORD PTR [rbp-0x40],rcx
  414c43:	mov    QWORD PTR [rbp-0x48],r8
  414c47:	mov    QWORD PTR [rbp-0x50],r9
  414c4b:	mov    rax,QWORD PTR [rbp-0x30]
  414c4f:	mov    QWORD PTR [rbp-0x18],rax
  414c53:	mov    rdx,QWORD PTR [rbp-0x38]
  414c57:	mov    rax,QWORD PTR [rbp-0x30]
  414c5b:	mov    rsi,rdx
  414c5e:	mov    rdi,rax
  414c61:	call   405756 <_start@@Base+0x5f6>
  414c66:	mov    QWORD PTR [rbp-0x10],rax
  414c6a:	movabs rax,0x4368617261637465
  414c74:	cmp    QWORD PTR [rbp-0x10],rax
  414c78:	jne    414d25 <_start@@Base+0xfbc5>
  414c7e:	add    QWORD PTR [rbp-0x30],0x8
  414c83:	mov    rdx,QWORD PTR [rbp-0x38]
  414c87:	mov    rax,QWORD PTR [rbp-0x30]
  414c8b:	mov    rsi,rdx
  414c8e:	mov    rdi,rax
  414c91:	call   405756 <_start@@Base+0x5f6>
  414c96:	mov    QWORD PTR [rbp-0x10],rax
  414c9a:	movabs rax,0xff00000000000000
  414ca4:	and    rax,QWORD PTR [rbp-0x10]
  414ca8:	mov    rdx,rax
  414cab:	movabs rax,0x7200000000000000
  414cb5:	cmp    rdx,rax
  414cb8:	jne    414d1f <_start@@Base+0xfbbf>
  414cba:	mov    rax,QWORD PTR [rbp-0x30]
  414cbe:	mov    QWORD PTR [rbp-0x8],rax
  414cc2:	mov    rdx,QWORD PTR [rbp-0x38]
  414cc6:	mov    rsi,QWORD PTR [rbp-0x8]
  414cca:	mov    rax,QWORD PTR [rbp-0x28]
  414cce:	mov    ecx,0x1
  414cd3:	mov    rdi,rax
  414cd6:	call   4057a0 <_start@@Base+0x640>
  414cdb:	mov    QWORD PTR [rbp-0x30],rax
  414cdf:	mov    rax,QWORD PTR [rbp-0x30]
  414ce3:	cmp    rax,QWORD PTR [rbp-0x8]
  414ce7:	je     414d19 <_start@@Base+0xfbb9>
  414ce9:	mov    r8,QWORD PTR [rbp-0x50]
  414ced:	mov    rdi,QWORD PTR [rbp-0x48]
  414cf1:	mov    rcx,QWORD PTR [rbp-0x40]
  414cf5:	mov    rdx,QWORD PTR [rbp-0x38]
  414cf9:	mov    rsi,QWORD PTR [rbp-0x30]
  414cfd:	mov    rax,QWORD PTR [rbp-0x28]
  414d01:	mov    r9,r8
  414d04:	mov    r8,rdi
  414d07:	mov    rdi,rax
  414d0a:	call   4138c8 <_start@@Base+0xe768>
  414d0f:	mov    QWORD PTR [rbp-0x30],rax
  414d13:	mov    rax,QWORD PTR [rbp-0x30]
  414d17:	jmp    414d29 <_start@@Base+0xfbc9>
  414d19:	mov    rax,QWORD PTR [rbp-0x18]
  414d1d:	jmp    414d29 <_start@@Base+0xfbc9>
  414d1f:	mov    rax,QWORD PTR [rbp-0x18]
  414d23:	jmp    414d29 <_start@@Base+0xfbc9>
  414d25:	mov    rax,QWORD PTR [rbp-0x18]
  414d29:	leave  
  414d2a:	ret    
  414d2b:	push   rbp
  414d2c:	mov    rbp,rsp
  414d2f:	sub    rsp,0x50
  414d33:	mov    QWORD PTR [rbp-0x28],rdi
  414d37:	mov    QWORD PTR [rbp-0x30],rsi
  414d3b:	mov    QWORD PTR [rbp-0x38],rdx
  414d3f:	mov    QWORD PTR [rbp-0x40],rcx
  414d43:	mov    QWORD PTR [rbp-0x48],r8
  414d47:	mov    QWORD PTR [rbp-0x50],r9
  414d4b:	mov    rax,QWORD PTR [rbp-0x30]
  414d4f:	mov    QWORD PTR [rbp-0x18],rax
  414d53:	mov    rdx,QWORD PTR [rbp-0x38]
  414d57:	mov    rax,QWORD PTR [rbp-0x30]
  414d5b:	mov    rsi,rdx
  414d5e:	mov    rdi,rax
  414d61:	call   405756 <_start@@Base+0x5f6>
  414d66:	mov    QWORD PTR [rbp-0x10],rax
  414d6a:	movabs rax,0x46726f6d496e636c
  414d74:	cmp    QWORD PTR [rbp-0x10],rax
  414d78:	jne    414e25 <_start@@Base+0xfcc5>
  414d7e:	add    QWORD PTR [rbp-0x30],0x8
  414d83:	mov    rdx,QWORD PTR [rbp-0x38]
  414d87:	mov    rax,QWORD PTR [rbp-0x30]
  414d8b:	mov    rsi,rdx
  414d8e:	mov    rdi,rax
  414d91:	call   405756 <_start@@Base+0x5f6>
  414d96:	mov    QWORD PTR [rbp-0x10],rax
  414d9a:	movabs rax,0xffffff0000000000
  414da4:	and    rax,QWORD PTR [rbp-0x10]
  414da8:	mov    rdx,rax
  414dab:	movabs rax,0x7564650000000000
  414db5:	cmp    rdx,rax
  414db8:	jne    414e1f <_start@@Base+0xfcbf>
  414dba:	mov    rax,QWORD PTR [rbp-0x30]
  414dbe:	mov    QWORD PTR [rbp-0x8],rax
  414dc2:	mov    rdx,QWORD PTR [rbp-0x38]
  414dc6:	mov    rsi,QWORD PTR [rbp-0x8]
  414dca:	mov    rax,QWORD PTR [rbp-0x28]
  414dce:	mov    ecx,0x3
  414dd3:	mov    rdi,rax
  414dd6:	call   4057a0 <_start@@Base+0x640>
  414ddb:	mov    QWORD PTR [rbp-0x30],rax
  414ddf:	mov    rax,QWORD PTR [rbp-0x30]
  414de3:	cmp    rax,QWORD PTR [rbp-0x8]
  414de7:	je     414e19 <_start@@Base+0xfcb9>
  414de9:	mov    r8,QWORD PTR [rbp-0x50]
  414ded:	mov    rdi,QWORD PTR [rbp-0x48]
  414df1:	mov    rcx,QWORD PTR [rbp-0x40]
  414df5:	mov    rdx,QWORD PTR [rbp-0x38]
  414df9:	mov    rsi,QWORD PTR [rbp-0x30]
  414dfd:	mov    rax,QWORD PTR [rbp-0x28]
  414e01:	mov    r9,r8
  414e04:	mov    r8,rdi
  414e07:	mov    rdi,rax
  414e0a:	call   40791c <_start@@Base+0x27bc>
  414e0f:	mov    QWORD PTR [rbp-0x30],rax
  414e13:	mov    rax,QWORD PTR [rbp-0x30]
  414e17:	jmp    414e29 <_start@@Base+0xfcc9>
  414e19:	mov    rax,QWORD PTR [rbp-0x18]
  414e1d:	jmp    414e29 <_start@@Base+0xfcc9>
  414e1f:	mov    rax,QWORD PTR [rbp-0x18]
  414e23:	jmp    414e29 <_start@@Base+0xfcc9>
  414e25:	mov    rax,QWORD PTR [rbp-0x18]
  414e29:	leave  
  414e2a:	ret    
  414e2b:	push   rbp
  414e2c:	mov    rbp,rsp
  414e2f:	sub    rsp,0x50
  414e33:	mov    QWORD PTR [rbp-0x28],rdi
  414e37:	mov    QWORD PTR [rbp-0x30],rsi
  414e3b:	mov    QWORD PTR [rbp-0x38],rdx
  414e3f:	mov    QWORD PTR [rbp-0x40],rcx
  414e43:	mov    QWORD PTR [rbp-0x48],r8
  414e47:	mov    QWORD PTR [rbp-0x50],r9
  414e4b:	mov    rax,QWORD PTR [rbp-0x30]
  414e4f:	mov    QWORD PTR [rbp-0x18],rax
  414e53:	mov    rdx,QWORD PTR [rbp-0x38]
  414e57:	mov    rax,QWORD PTR [rbp-0x30]
  414e5b:	mov    rsi,rdx
  414e5e:	mov    rdi,rax
  414e61:	call   405756 <_start@@Base+0x5f6>
  414e66:	mov    QWORD PTR [rbp-0x10],rax
  414e6a:	movabs rax,0x4d7947616d652e44
  414e74:	cmp    QWORD PTR [rbp-0x10],rax
  414e78:	ja     414f80 <_start@@Base+0xfe20>
  414e7e:	movabs rax,0x46616e746173792e
  414e88:	cmp    QWORD PTR [rbp-0x10],rax
  414e8c:	jne    414f77 <_start@@Base+0xfe17>
  414e92:	add    QWORD PTR [rbp-0x30],0x8
  414e97:	mov    rdx,QWORD PTR [rbp-0x38]
  414e9b:	mov    rax,QWORD PTR [rbp-0x30]
  414e9f:	mov    rsi,rdx
  414ea2:	mov    rdi,rax
  414ea5:	call   405756 <_start@@Base+0x5f6>
  414eaa:	mov    QWORD PTR [rbp-0x10],rax
  414eae:	movabs rax,0x4368617261637465
  414eb8:	cmp    QWORD PTR [rbp-0x10],rax
  414ebc:	jne    414f6e <_start@@Base+0xfe0e>
  414ec2:	add    QWORD PTR [rbp-0x30],0x8
  414ec7:	mov    rdx,QWORD PTR [rbp-0x38]
  414ecb:	mov    rax,QWORD PTR [rbp-0x30]
  414ecf:	mov    rsi,rdx
  414ed2:	mov    rdi,rax
  414ed5:	call   405756 <_start@@Base+0x5f6>
  414eda:	mov    QWORD PTR [rbp-0x10],rax
  414ede:	movabs rax,0xff00000000000000
  414ee8:	and    rax,QWORD PTR [rbp-0x10]
  414eec:	mov    rdx,rax
  414eef:	movabs rax,0x7200000000000000
  414ef9:	cmp    rdx,rax
  414efc:	jne    414f65 <_start@@Base+0xfe05>
  414efe:	mov    rax,QWORD PTR [rbp-0x30]
  414f02:	mov    QWORD PTR [rbp-0x8],rax
  414f06:	mov    rdx,QWORD PTR [rbp-0x38]
  414f0a:	mov    rsi,QWORD PTR [rbp-0x8]
  414f0e:	mov    rax,QWORD PTR [rbp-0x28]
  414f12:	mov    ecx,0x1
  414f17:	mov    rdi,rax
  414f1a:	call   4057a0 <_start@@Base+0x640>
  414f1f:	mov    QWORD PTR [rbp-0x30],rax
  414f23:	mov    rax,QWORD PTR [rbp-0x30]
  414f27:	cmp    rax,QWORD PTR [rbp-0x8]
  414f2b:	je     414f5c <_start@@Base+0xfdfc>
  414f2d:	mov    r8,QWORD PTR [rbp-0x50]
  414f31:	mov    rdi,QWORD PTR [rbp-0x48]
  414f35:	mov    rcx,QWORD PTR [rbp-0x40]
  414f39:	mov    rdx,QWORD PTR [rbp-0x38]
  414f3d:	mov    rsi,QWORD PTR [rbp-0x30]
  414f41:	mov    rax,QWORD PTR [rbp-0x28]
  414f45:	mov    r9,r8
  414f48:	mov    r8,rdi
  414f4b:	mov    rdi,rax
  414f4e:	call   4138c8 <_start@@Base+0xe768>
  414f53:	mov    QWORD PTR [rbp-0x30],rax
  414f57:	jmp    4156af <_start@@Base+0x1054f>
  414f5c:	mov    rax,QWORD PTR [rbp-0x18]
  414f60:	jmp    4156b3 <_start@@Base+0x10553>
  414f65:	mov    rax,QWORD PTR [rbp-0x18]
  414f69:	jmp    4156b3 <_start@@Base+0x10553>
  414f6e:	mov    rax,QWORD PTR [rbp-0x18]
  414f72:	jmp    4156b3 <_start@@Base+0x10553>
  414f77:	mov    rax,QWORD PTR [rbp-0x18]
  414f7b:	jmp    4156b3 <_start@@Base+0x10553>
  414f80:	movabs rax,0x4d7947616d652e45
  414f8a:	cmp    QWORD PTR [rbp-0x10],rax
  414f8e:	jne    415550 <_start@@Base+0x103f0>
  414f94:	add    QWORD PTR [rbp-0x30],0x8
  414f99:	mov    rdx,QWORD PTR [rbp-0x38]
  414f9d:	mov    rax,QWORD PTR [rbp-0x30]
  414fa1:	mov    rsi,rdx
  414fa4:	mov    rdi,rax
  414fa7:	call   405756 <_start@@Base+0x5f6>
  414fac:	mov    QWORD PTR [rbp-0x10],rax
  414fb0:	movabs rax,0x78616d706c652e67
  414fba:	cmp    QWORD PTR [rbp-0x10],rax
  414fbe:	ja     41522a <_start@@Base+0x100ca>
  414fc4:	movabs rax,0x78616d706c652e42
  414fce:	cmp    QWORD PTR [rbp-0x10],rax
  414fd2:	ja     4150a1 <_start@@Base+0xff41>
  414fd8:	movabs rax,0x78616d706c652e41
  414fe2:	cmp    QWORD PTR [rbp-0x10],rax
  414fe6:	jne    415098 <_start@@Base+0xff38>
  414fec:	add    QWORD PTR [rbp-0x30],0x8
  414ff1:	mov    rdx,QWORD PTR [rbp-0x38]
  414ff5:	mov    rax,QWORD PTR [rbp-0x30]
  414ff9:	mov    rsi,rdx
  414ffc:	mov    rdi,rax
  414fff:	call   405756 <_start@@Base+0x5f6>
  415004:	mov    QWORD PTR [rbp-0x10],rax
  415008:	movabs rax,0xffff000000000000
  415012:	and    rax,QWORD PTR [rbp-0x10]
  415016:	mov    rdx,rax
  415019:	movabs rax,0x6e79000000000000
  415023:	cmp    rdx,rax
  415026:	jne    41508f <_start@@Base+0xff2f>
  415028:	mov    rax,QWORD PTR [rbp-0x30]
  41502c:	mov    QWORD PTR [rbp-0x8],rax
  415030:	mov    rdx,QWORD PTR [rbp-0x38]
  415034:	mov    rsi,QWORD PTR [rbp-0x8]
  415038:	mov    rax,QWORD PTR [rbp-0x28]
  41503c:	mov    ecx,0x2
  415041:	mov    rdi,rax
  415044:	call   4057a0 <_start@@Base+0x640>
  415049:	mov    QWORD PTR [rbp-0x30],rax
  41504d:	mov    rax,QWORD PTR [rbp-0x30]
  415051:	cmp    rax,QWORD PTR [rbp-0x8]
  415055:	je     415086 <_start@@Base+0xff26>
  415057:	mov    r8,QWORD PTR [rbp-0x50]
  41505b:	mov    rdi,QWORD PTR [rbp-0x48]
  41505f:	mov    rcx,QWORD PTR [rbp-0x40]
  415063:	mov    rdx,QWORD PTR [rbp-0x38]
  415067:	mov    rsi,QWORD PTR [rbp-0x30]
  41506b:	mov    rax,QWORD PTR [rbp-0x28]
  41506f:	mov    r9,r8
  415072:	mov    r8,rdi
  415075:	mov    rdi,rax
  415078:	call   409321 <_start@@Base+0x41c1>
  41507d:	mov    QWORD PTR [rbp-0x30],rax
  415081:	jmp    4156af <_start@@Base+0x1054f>
  415086:	mov    rax,QWORD PTR [rbp-0x18]
  41508a:	jmp    4156b3 <_start@@Base+0x10553>
  41508f:	mov    rax,QWORD PTR [rbp-0x18]
  415093:	jmp    4156b3 <_start@@Base+0x10553>
  415098:	mov    rax,QWORD PTR [rbp-0x18]
  41509c:	jmp    4156b3 <_start@@Base+0x10553>
  4150a1:	movabs rax,0x78616d706c652e43
  4150ab:	cmp    QWORD PTR [rbp-0x10],rax
  4150af:	jne    415161 <_start@@Base+0x10001>
  4150b5:	add    QWORD PTR [rbp-0x30],0x8
  4150ba:	mov    rdx,QWORD PTR [rbp-0x38]
  4150be:	mov    rax,QWORD PTR [rbp-0x30]
  4150c2:	mov    rsi,rdx
  4150c5:	mov    rdi,rax
  4150c8:	call   405756 <_start@@Base+0x5f6>
  4150cd:	mov    QWORD PTR [rbp-0x10],rax
  4150d1:	movabs rax,0xffffffff00000000
  4150db:	and    rax,QWORD PTR [rbp-0x10]
  4150df:	mov    rdx,rax
  4150e2:	movabs rax,0x6f6c6f7200000000
  4150ec:	cmp    rdx,rax
  4150ef:	jne    415158 <_start@@Base+0xfff8>
  4150f1:	mov    rax,QWORD PTR [rbp-0x30]
  4150f5:	mov    QWORD PTR [rbp-0x8],rax
  4150f9:	mov    rdx,QWORD PTR [rbp-0x38]
  4150fd:	mov    rsi,QWORD PTR [rbp-0x8]
  415101:	mov    rax,QWORD PTR [rbp-0x28]
  415105:	mov    ecx,0x4
  41510a:	mov    rdi,rax
  41510d:	call   4057a0 <_start@@Base+0x640>
  415112:	mov    QWORD PTR [rbp-0x30],rax
  415116:	mov    rax,QWORD PTR [rbp-0x30]
  41511a:	cmp    rax,QWORD PTR [rbp-0x8]
  41511e:	je     41514f <_start@@Base+0xffef>
  415120:	mov    r8,QWORD PTR [rbp-0x50]
  415124:	mov    rdi,QWORD PTR [rbp-0x48]
  415128:	mov    rcx,QWORD PTR [rbp-0x40]
  41512c:	mov    rdx,QWORD PTR [rbp-0x38]
  415130:	mov    rsi,QWORD PTR [rbp-0x30]
  415134:	mov    rax,QWORD PTR [rbp-0x28]
  415138:	mov    r9,r8
  41513b:	mov    r8,rdi
  41513e:	mov    rdi,rax
  415141:	call   408f93 <_start@@Base+0x3e33>
  415146:	mov    QWORD PTR [rbp-0x30],rax
  41514a:	jmp    4156af <_start@@Base+0x1054f>
  41514f:	mov    rax,QWORD PTR [rbp-0x18]
  415153:	jmp    4156b3 <_start@@Base+0x10553>
  415158:	mov    rax,QWORD PTR [rbp-0x18]
  41515c:	jmp    4156b3 <_start@@Base+0x10553>
  415161:	movabs rax,0x78616d706c652e46
  41516b:	cmp    QWORD PTR [rbp-0x10],rax
  41516f:	jne    415221 <_start@@Base+0x100c1>
  415175:	add    QWORD PTR [rbp-0x30],0x8
  41517a:	mov    rdx,QWORD PTR [rbp-0x38]
  41517e:	mov    rax,QWORD PTR [rbp-0x30]
  415182:	mov    rsi,rdx
  415185:	mov    rdi,rax
  415188:	call   405756 <_start@@Base+0x5f6>
  41518d:	mov    QWORD PTR [rbp-0x10],rax
  415191:	movabs rax,0xffff000000000000
  41519b:	and    rax,QWORD PTR [rbp-0x10]
  41519f:	mov    rdx,rax
  4151a2:	movabs rax,0x6f6f000000000000
  4151ac:	cmp    rdx,rax
  4151af:	jne    415218 <_start@@Base+0x100b8>
  4151b1:	mov    rax,QWORD PTR [rbp-0x30]
  4151b5:	mov    QWORD PTR [rbp-0x8],rax
  4151b9:	mov    rdx,QWORD PTR [rbp-0x38]
  4151bd:	mov    rsi,QWORD PTR [rbp-0x8]
  4151c1:	mov    rax,QWORD PTR [rbp-0x28]
  4151c5:	mov    ecx,0x2
  4151ca:	mov    rdi,rax
  4151cd:	call   4057a0 <_start@@Base+0x640>
  4151d2:	mov    QWORD PTR [rbp-0x30],rax
  4151d6:	mov    rax,QWORD PTR [rbp-0x30]
  4151da:	cmp    rax,QWORD PTR [rbp-0x8]
  4151de:	je     41520f <_start@@Base+0x100af>
  4151e0:	mov    r8,QWORD PTR [rbp-0x50]
  4151e4:	mov    rdi,QWORD PTR [rbp-0x48]
  4151e8:	mov    rcx,QWORD PTR [rbp-0x40]
  4151ec:	mov    rdx,QWORD PTR [rbp-0x38]
  4151f0:	mov    rsi,QWORD PTR [rbp-0x30]
  4151f4:	mov    rax,QWORD PTR [rbp-0x28]
  4151f8:	mov    r9,r8
  4151fb:	mov    r8,rdi
  4151fe:	mov    rdi,rax
  415201:	call   408816 <_start@@Base+0x36b6>
  415206:	mov    QWORD PTR [rbp-0x30],rax
  41520a:	jmp    4156af <_start@@Base+0x1054f>
  41520f:	mov    rax,QWORD PTR [rbp-0x18]
  415213:	jmp    4156b3 <_start@@Base+0x10553>
  415218:	mov    rax,QWORD PTR [rbp-0x18]
  41521c:	jmp    4156b3 <_start@@Base+0x10553>
  415221:	mov    rax,QWORD PTR [rbp-0x18]
  415225:	jmp    4156b3 <_start@@Base+0x10553>
  41522a:	movabs rax,0x78616d706c652e68
  415234:	cmp    QWORD PTR [rbp-0x10],rax
  415238:	ja     4152ff <_start@@Base+0x1019f>
  41523e:	movabs rax,0x78616d706c652e68
  415248:	cmp    QWORD PTR [rbp-0x10],rax
  41524c:	jne    4152f6 <_start@@Base+0x10196>
  415252:	add    QWORD PTR [rbp-0x30],0x8
  415257:	mov    rdx,QWORD PTR [rbp-0x38]
  41525b:	mov    rax,QWORD PTR [rbp-0x30]
  41525f:	mov    rsi,rdx
  415262:	mov    rdi,rax
  415265:	call   405756 <_start@@Base+0x5f6>
  41526a:	mov    QWORD PTR [rbp-0x10],rax
  41526e:	mov    rax,QWORD PTR [rbp-0x10]
  415272:	mov    al,0x0
  415274:	mov    rdx,rax
  415277:	movabs rax,0x65785f656e756d00
  415281:	cmp    rdx,rax
  415284:	jne    4152ed <_start@@Base+0x1018d>
  415286:	mov    rax,QWORD PTR [rbp-0x30]
  41528a:	mov    QWORD PTR [rbp-0x8],rax
  41528e:	mov    rdx,QWORD PTR [rbp-0x38]
  415292:	mov    rsi,QWORD PTR [rbp-0x8]
  415296:	mov    rax,QWORD PTR [rbp-0x28]
  41529a:	mov    ecx,0x7
  41529f:	mov    rdi,rax
  4152a2:	call   4057a0 <_start@@Base+0x640>
  4152a7:	mov    QWORD PTR [rbp-0x30],rax
  4152ab:	mov    rax,QWORD PTR [rbp-0x30]
  4152af:	cmp    rax,QWORD PTR [rbp-0x8]
  4152b3:	je     4152e4 <_start@@Base+0x10184>
  4152b5:	mov    r8,QWORD PTR [rbp-0x50]
  4152b9:	mov    rdi,QWORD PTR [rbp-0x48]
  4152bd:	mov    rcx,QWORD PTR [rbp-0x40]
  4152c1:	mov    rdx,QWORD PTR [rbp-0x38]
  4152c5:	mov    rsi,QWORD PTR [rbp-0x30]
  4152c9:	mov    rax,QWORD PTR [rbp-0x28]
  4152cd:	mov    r9,r8
  4152d0:	mov    r8,rdi
  4152d3:	mov    rdi,rax
  4152d6:	call   408dd2 <_start@@Base+0x3c72>
  4152db:	mov    QWORD PTR [rbp-0x30],rax
  4152df:	jmp    4156af <_start@@Base+0x1054f>
  4152e4:	mov    rax,QWORD PTR [rbp-0x18]
  4152e8:	jmp    4156b3 <_start@@Base+0x10553>
  4152ed:	mov    rax,QWORD PTR [rbp-0x18]
  4152f1:	jmp    4156b3 <_start@@Base+0x10553>
  4152f6:	mov    rax,QWORD PTR [rbp-0x18]
  4152fa:	jmp    4156b3 <_start@@Base+0x10553>
  4152ff:	movabs rax,0x78616d706c652e6d
  415309:	cmp    QWORD PTR [rbp-0x10],rax
  41530d:	ja     4153d4 <_start@@Base+0x10274>
  415313:	movabs rax,0x78616d706c652e69
  41531d:	cmp    QWORD PTR [rbp-0x10],rax
  415321:	jne    4153cb <_start@@Base+0x1026b>
  415327:	add    QWORD PTR [rbp-0x30],0x8
  41532c:	mov    rdx,QWORD PTR [rbp-0x38]
  415330:	mov    rax,QWORD PTR [rbp-0x30]
  415334:	mov    rsi,rdx
  415337:	mov    rdi,rax
  41533a:	call   405756 <_start@@Base+0x5f6>
  41533f:	mov    QWORD PTR [rbp-0x10],rax
  415343:	mov    rax,QWORD PTR [rbp-0x10]
  415347:	mov    al,0x0
  415349:	mov    rdx,rax
  41534c:	movabs rax,0x6e745f656e756d00
  415356:	cmp    rdx,rax
  415359:	jne    4153c2 <_start@@Base+0x10262>
  41535b:	mov    rax,QWORD PTR [rbp-0x30]
  41535f:	mov    QWORD PTR [rbp-0x8],rax
  415363:	mov    rdx,QWORD PTR [rbp-0x38]
  415367:	mov    rsi,QWORD PTR [rbp-0x8]
  41536b:	mov    rax,QWORD PTR [rbp-0x28]
  41536f:	mov    ecx,0x7
  415374:	mov    rdi,rax
  415377:	call   4057a0 <_start@@Base+0x640>
  41537c:	mov    QWORD PTR [rbp-0x30],rax
  415380:	mov    rax,QWORD PTR [rbp-0x30]
  415384:	cmp    rax,QWORD PTR [rbp-0x8]
  415388:	je     4153b9 <_start@@Base+0x10259>
  41538a:	mov    r8,QWORD PTR [rbp-0x50]
  41538e:	mov    rdi,QWORD PTR [rbp-0x48]
  415392:	mov    rcx,QWORD PTR [rbp-0x40]
  415396:	mov    rdx,QWORD PTR [rbp-0x38]
  41539a:	mov    rsi,QWORD PTR [rbp-0x30]
  41539e:	mov    rax,QWORD PTR [rbp-0x28]
  4153a2:	mov    r9,r8
  4153a5:	mov    r8,rdi
  4153a8:	mov    rdi,rax
  4153ab:	call   408b83 <_start@@Base+0x3a23>
  4153b0:	mov    QWORD PTR [rbp-0x30],rax
  4153b4:	jmp    4156af <_start@@Base+0x1054f>
  4153b9:	mov    rax,QWORD PTR [rbp-0x18]
  4153bd:	jmp    4156b3 <_start@@Base+0x10553>
  4153c2:	mov    rax,QWORD PTR [rbp-0x18]
  4153c6:	jmp    4156b3 <_start@@Base+0x10553>
  4153cb:	mov    rax,QWORD PTR [rbp-0x18]
  4153cf:	jmp    4156b3 <_start@@Base+0x10553>
  4153d4:	movabs rax,0x78616d706c652e6e
  4153de:	cmp    QWORD PTR [rbp-0x10],rax
  4153e2:	jne    415547 <_start@@Base+0x103e7>
  4153e8:	add    QWORD PTR [rbp-0x30],0x8
  4153ed:	mov    rdx,QWORD PTR [rbp-0x38]
  4153f1:	mov    rax,QWORD PTR [rbp-0x30]
  4153f5:	mov    rsi,rdx
  4153f8:	mov    rdi,rax
  4153fb:	call   405756 <_start@@Base+0x5f6>
  415400:	mov    QWORD PTR [rbp-0x10],rax
  415404:	mov    rax,QWORD PTR [rbp-0x10]
  415408:	mov    al,0x0
  41540a:	mov    rdx,rax
  41540d:	movabs rax,0x65675f656e756d00
  415417:	cmp    rdx,rax
  41541a:	jne    41547a <_start@@Base+0x1031a>
  41541c:	mov    rax,QWORD PTR [rbp-0x30]
  415420:	mov    QWORD PTR [rbp-0x8],rax
  415424:	mov    rdx,QWORD PTR [rbp-0x38]
  415428:	mov    rsi,QWORD PTR [rbp-0x8]
  41542c:	mov    rax,QWORD PTR [rbp-0x28]
  415430:	mov    ecx,0x7
  415435:	mov    rdi,rax
  415438:	call   4057a0 <_start@@Base+0x640>
  41543d:	mov    QWORD PTR [rbp-0x30],rax
  415441:	mov    rax,QWORD PTR [rbp-0x30]
  415445:	cmp    rax,QWORD PTR [rbp-0x8]
  415449:	je     41547d <_start@@Base+0x1031d>
  41544b:	mov    r8,QWORD PTR [rbp-0x50]
  41544f:	mov    rdi,QWORD PTR [rbp-0x48]
  415453:	mov    rcx,QWORD PTR [rbp-0x40]
  415457:	mov    rdx,QWORD PTR [rbp-0x38]
  41545b:	mov    rsi,QWORD PTR [rbp-0x30]
  41545f:	mov    rax,QWORD PTR [rbp-0x28]
  415463:	mov    r9,r8
  415466:	mov    r8,rdi
  415469:	mov    rdi,rax
  41546c:	call   4089bc <_start@@Base+0x385c>
  415471:	mov    QWORD PTR [rbp-0x30],rax
  415475:	jmp    4156af <_start@@Base+0x1054f>
  41547a:	nop
  41547b:	jmp    41547e <_start@@Base+0x1031e>
  41547d:	nop
  41547e:	movabs rax,0x6f74656d70747965
  415488:	cmp    QWORD PTR [rbp-0x10],rax
  41548c:	jne    41553e <_start@@Base+0x103de>
  415492:	add    QWORD PTR [rbp-0x30],0x8
  415497:	mov    rdx,QWORD PTR [rbp-0x38]
  41549b:	mov    rax,QWORD PTR [rbp-0x30]
  41549f:	mov    rsi,rdx
  4154a2:	mov    rdi,rax
  4154a5:	call   405756 <_start@@Base+0x5f6>
  4154aa:	mov    QWORD PTR [rbp-0x10],rax
  4154ae:	movabs rax,0xffffff0000000000
  4154b8:	and    rax,QWORD PTR [rbp-0x10]
  4154bc:	mov    rdx,rax
  4154bf:	movabs rax,0x6e756d0000000000
  4154c9:	cmp    rdx,rax
  4154cc:	jne    415535 <_start@@Base+0x103d5>
  4154ce:	mov    rax,QWORD PTR [rbp-0x30]
  4154d2:	mov    QWORD PTR [rbp-0x8],rax
  4154d6:	mov    rdx,QWORD PTR [rbp-0x38]
  4154da:	mov    rsi,QWORD PTR [rbp-0x8]
  4154de:	mov    rax,QWORD PTR [rbp-0x28]
  4154e2:	mov    ecx,0x3
  4154e7:	mov    rdi,rax
  4154ea:	call   4057a0 <_start@@Base+0x640>
  4154ef:	mov    QWORD PTR [rbp-0x30],rax
  4154f3:	mov    rax,QWORD PTR [rbp-0x30]
  4154f7:	cmp    rax,QWORD PTR [rbp-0x8]
  4154fb:	je     41552c <_start@@Base+0x103cc>
  4154fd:	mov    r8,QWORD PTR [rbp-0x50]
  415501:	mov    rdi,QWORD PTR [rbp-0x48]
  415505:	mov    rcx,QWORD PTR [rbp-0x40]
  415509:	mov    rdx,QWORD PTR [rbp-0x38]
  41550d:	mov    rsi,QWORD PTR [rbp-0x30]
  415511:	mov    rax,QWORD PTR [rbp-0x28]
  415515:	mov    r9,r8
  415518:	mov    r8,rdi
  41551b:	mov    rdi,rax
  41551e:	call   409e62 <_start@@Base+0x4d02>
  415523:	mov    QWORD PTR [rbp-0x30],rax
  415527:	jmp    4156af <_start@@Base+0x1054f>
  41552c:	mov    rax,QWORD PTR [rbp-0x18]
  415530:	jmp    4156b3 <_start@@Base+0x10553>
  415535:	mov    rax,QWORD PTR [rbp-0x18]
  415539:	jmp    4156b3 <_start@@Base+0x10553>
  41553e:	mov    rax,QWORD PTR [rbp-0x18]
  415542:	jmp    4156b3 <_start@@Base+0x10553>
  415547:	mov    rax,QWORD PTR [rbp-0x18]
  41554b:	jmp    4156b3 <_start@@Base+0x10553>
  415550:	movabs rax,0x4d7947616d652e4f
  41555a:	cmp    QWORD PTR [rbp-0x10],rax
  41555e:	jne    4156a9 <_start@@Base+0x10549>
  415564:	add    QWORD PTR [rbp-0x30],0x8
  415569:	mov    rdx,QWORD PTR [rbp-0x38]
  41556d:	mov    rax,QWORD PTR [rbp-0x30]
  415571:	mov    rsi,rdx
  415574:	mov    rdi,rax
  415577:	call   405756 <_start@@Base+0x5f6>
  41557c:	mov    QWORD PTR [rbp-0x10],rax
  415580:	movabs rax,0x746865724e616d65
  41558a:	cmp    QWORD PTR [rbp-0x10],rax
  41558e:	jne    4156a3 <_start@@Base+0x10543>
  415594:	add    QWORD PTR [rbp-0x30],0x8
  415599:	mov    rdx,QWORD PTR [rbp-0x38]
  41559d:	mov    rax,QWORD PTR [rbp-0x30]
  4155a1:	mov    rsi,rdx
  4155a4:	mov    rdi,rax
  4155a7:	call   405756 <_start@@Base+0x5f6>
  4155ac:	mov    QWORD PTR [rbp-0x10],rax
  4155b0:	movabs rax,0x53706163652e4672
  4155ba:	cmp    QWORD PTR [rbp-0x10],rax
  4155be:	jne    41569d <_start@@Base+0x1053d>
  4155c4:	add    QWORD PTR [rbp-0x30],0x8
  4155c9:	mov    rdx,QWORD PTR [rbp-0x38]
  4155cd:	mov    rax,QWORD PTR [rbp-0x30]
  4155d1:	mov    rsi,rdx
  4155d4:	mov    rdi,rax
  4155d7:	call   405756 <_start@@Base+0x5f6>
  4155dc:	mov    QWORD PTR [rbp-0x10],rax
  4155e0:	movabs rax,0x6f6d496e636c7564
  4155ea:	cmp    QWORD PTR [rbp-0x10],rax
  4155ee:	jne    415697 <_start@@Base+0x10537>
  4155f4:	add    QWORD PTR [rbp-0x30],0x8
  4155f9:	mov    rdx,QWORD PTR [rbp-0x38]
  4155fd:	mov    rax,QWORD PTR [rbp-0x30]
  415601:	mov    rsi,rdx
  415604:	mov    rdi,rax
  415607:	call   405756 <_start@@Base+0x5f6>
  41560c:	mov    QWORD PTR [rbp-0x10],rax
  415610:	movabs rax,0xff00000000000000
  41561a:	and    rax,QWORD PTR [rbp-0x10]
  41561e:	mov    rdx,rax
  415621:	movabs rax,0x6500000000000000
  41562b:	cmp    rdx,rax
  41562e:	jne    415691 <_start@@Base+0x10531>
  415630:	mov    rax,QWORD PTR [rbp-0x30]
  415634:	mov    QWORD PTR [rbp-0x8],rax
  415638:	mov    rdx,QWORD PTR [rbp-0x38]
  41563c:	mov    rsi,QWORD PTR [rbp-0x8]
  415640:	mov    rax,QWORD PTR [rbp-0x28]
  415644:	mov    ecx,0x1
  415649:	mov    rdi,rax
  41564c:	call   4057a0 <_start@@Base+0x640>
  415651:	mov    QWORD PTR [rbp-0x30],rax
  415655:	mov    rax,QWORD PTR [rbp-0x30]
  415659:	cmp    rax,QWORD PTR [rbp-0x8]
  41565d:	je     41568b <_start@@Base+0x1052b>
  41565f:	mov    r8,QWORD PTR [rbp-0x50]
  415663:	mov    rdi,QWORD PTR [rbp-0x48]
  415667:	mov    rcx,QWORD PTR [rbp-0x40]
  41566b:	mov    rdx,QWORD PTR [rbp-0x38]
  41566f:	mov    rsi,QWORD PTR [rbp-0x30]
  415673:	mov    rax,QWORD PTR [rbp-0x28]
  415677:	mov    r9,r8
  41567a:	mov    r8,rdi
  41567d:	mov    rdi,rax
  415680:	call   40791c <_start@@Base+0x27bc>
  415685:	mov    QWORD PTR [rbp-0x30],rax
  415689:	jmp    4156af <_start@@Base+0x1054f>
  41568b:	mov    rax,QWORD PTR [rbp-0x18]
  41568f:	jmp    4156b3 <_start@@Base+0x10553>
  415691:	mov    rax,QWORD PTR [rbp-0x18]
  415695:	jmp    4156b3 <_start@@Base+0x10553>
  415697:	mov    rax,QWORD PTR [rbp-0x18]
  41569b:	jmp    4156b3 <_start@@Base+0x10553>
  41569d:	mov    rax,QWORD PTR [rbp-0x18]
  4156a1:	jmp    4156b3 <_start@@Base+0x10553>
  4156a3:	mov    rax,QWORD PTR [rbp-0x18]
  4156a7:	jmp    4156b3 <_start@@Base+0x10553>
  4156a9:	mov    rax,QWORD PTR [rbp-0x18]
  4156ad:	jmp    4156b3 <_start@@Base+0x10553>
  4156af:	mov    rax,QWORD PTR [rbp-0x30]
  4156b3:	leave  
  4156b4:	ret    
  4156b5:	push   rbp
  4156b6:	mov    rbp,rsp
  4156b9:	sub    rsp,0x90
  4156c0:	mov    QWORD PTR [rbp-0x68],rdi
  4156c4:	mov    QWORD PTR [rbp-0x70],rsi
  4156c8:	mov    QWORD PTR [rbp-0x78],rdx
  4156cc:	mov    QWORD PTR [rbp-0x80],rcx
  4156d0:	mov    DWORD PTR [rbp-0x84],r8d
  4156d7:	mov    rax,QWORD PTR fs:0x28
  4156e0:	mov    QWORD PTR [rbp-0x8],rax
  4156e4:	xor    eax,eax
  4156e6:	cmp    QWORD PTR [rbp-0x70],0x0
  4156eb:	jne    4156f3 <_start@@Base+0x10593>
  4156ed:	lea    rax,[rbp-0x50]
  4156f1:	jmp    4156f7 <_start@@Base+0x10597>
  4156f3:	mov    rax,QWORD PTR [rbp-0x70]
  4156f7:	mov    QWORD PTR [rbp-0x70],rax
  4156fb:	mov    rdx,QWORD PTR [rbp-0x78]
  4156ff:	mov    rax,QWORD PTR [rbp-0x80]
  415703:	lea    rcx,[rdx+rax*1]
  415707:	mov    edi,DWORD PTR [rbp-0x84]
  41570d:	mov    rdx,QWORD PTR [rbp-0x78]
  415711:	mov    rsi,QWORD PTR [rbp-0x68]
  415715:	mov    rax,QWORD PTR [rbp-0x70]
  415719:	mov    r8d,edi
  41571c:	mov    rdi,rax
  41571f:	call   4054ea <_start@@Base+0x38a>
  415724:	mov    rax,QWORD PTR [rbp-0x68]
  415728:	mov    ecx,0x0
  41572d:	mov    edx,0x0
  415732:	lea    rsi,[rip+0x1f937]        # 435070 <_IO_stdin_used@@Base+0x70>
  415739:	mov    rdi,rax
  41573c:	call   41bf64 <flatcc_builder_start_buffer@@Base>
  415741:	test   eax,eax
  415743:	je     41574c <_start@@Base+0x105ec>
  415745:	mov    eax,0xffffffff
  41574a:	jmp    4157b3 <_start@@Base+0x10653>
  41574c:	mov    rdx,QWORD PTR [rbp-0x78]
  415750:	mov    rax,QWORD PTR [rbp-0x80]
  415754:	lea    rdi,[rdx+rax*1]
  415758:	lea    rdx,[rbp-0x54]
  41575c:	mov    rsi,QWORD PTR [rbp-0x78]
  415760:	mov    rax,QWORD PTR [rbp-0x70]
  415764:	mov    rcx,rdx
  415767:	mov    rdx,rdi
  41576a:	mov    rdi,rax
  41576d:	call   40e0e4 <_start@@Base+0x8f84>
  415772:	mov    rax,QWORD PTR [rbp-0x70]
  415776:	mov    eax,DWORD PTR [rax+0x1c]
  415779:	test   eax,eax
  41577b:	je     415786 <_start@@Base+0x10626>
  41577d:	mov    rax,QWORD PTR [rbp-0x70]
  415781:	mov    eax,DWORD PTR [rax+0x1c]
  415784:	jmp    4157b3 <_start@@Base+0x10653>
  415786:	mov    edx,DWORD PTR [rbp-0x54]
  415789:	mov    rax,QWORD PTR [rbp-0x68]
  41578d:	mov    esi,edx
  41578f:	mov    rdi,rax
  415792:	call   41c0ad <flatcc_builder_end_buffer@@Base>
  415797:	test   eax,eax
  415799:	jne    4157a2 <_start@@Base+0x10642>
  41579b:	mov    eax,0xffffffff
  4157a0:	jmp    4157b3 <_start@@Base+0x10653>
  4157a2:	mov    rax,QWORD PTR [rbp-0x70]
  4157a6:	mov    rdx,QWORD PTR [rbp-0x78]
  4157aa:	mov    QWORD PTR [rax+0x38],rdx
  4157ae:	mov    eax,0x0
  4157b3:	mov    rcx,QWORD PTR [rbp-0x8]
  4157b7:	xor    rcx,QWORD PTR fs:0x28
  4157c0:	je     4157c7 <_start@@Base+0x10667>
  4157c2:	call   405070 <__stack_chk_fail@plt>
  4157c7:	leave  
  4157c8:	ret    
  4157c9:	push   rbp
  4157ca:	mov    rbp,rsp
  4157cd:	mov    QWORD PTR [rbp-0x8],rdi
  4157d1:	mov    DWORD PTR [rbp-0xc],esi
  4157d4:	cmp    DWORD PTR [rbp-0xc],0x0
  4157d8:	setne  al
  4157db:	mov    edx,eax
  4157dd:	mov    rax,QWORD PTR [rbp-0x8]
  4157e1:	mov    BYTE PTR [rax+0x32],dl
  4157e4:	nop
  4157e5:	pop    rbp
  4157e6:	ret    
  4157e7:	push   rbp
  4157e8:	mov    rbp,rsp
  4157eb:	mov    QWORD PTR [rbp-0x8],rdi
  4157ef:	mov    DWORD PTR [rbp-0xc],esi
  4157f2:	cmp    DWORD PTR [rbp-0xc],0x0
  4157f6:	setne  al
  4157f9:	mov    edx,eax
  4157fb:	mov    rax,QWORD PTR [rbp-0x8]
  4157ff:	mov    BYTE PTR [rax+0x33],dl
  415802:	nop
  415803:	pop    rbp
  415804:	ret    
  415805:	push   rbp
  415806:	mov    rbp,rsp
  415809:	mov    QWORD PTR [rbp-0x8],rdi
  41580d:	mov    eax,esi
  41580f:	mov    BYTE PTR [rbp-0xc],al
  415812:	mov    rax,QWORD PTR [rbp-0x8]
  415816:	movzx  edx,BYTE PTR [rbp-0xc]
  41581a:	mov    BYTE PTR [rax+0x31],dl
  41581d:	nop
  41581e:	pop    rbp
  41581f:	ret    
  415820:	push   rbp
  415821:	mov    rbp,rsp
  415824:	sub    rsp,0x8
  415828:	mov    QWORD PTR [rbp-0x8],rdi
  41582c:	mov    rax,QWORD PTR [rbp-0x8]
  415830:	mov    esi,0x2
  415835:	mov    rdi,rax
  415838:	call   415805 <_start@@Base+0x106a5>
  41583d:	mov    rax,QWORD PTR [rbp-0x8]
  415841:	mov    esi,0x1
  415846:	mov    rdi,rax
  415849:	call   4157c9 <_start@@Base+0x10669>
  41584e:	mov    rax,QWORD PTR [rbp-0x8]
  415852:	mov    esi,0x0
  415857:	mov    rdi,rax
  41585a:	call   4157e7 <_start@@Base+0x10687>
  41585f:	nop
  415860:	leave  
  415861:	ret    
  415862:	push   rbp
  415863:	mov    rbp,rsp
  415866:	sub    rsp,0x10
  41586a:	mov    QWORD PTR [rbp-0x8],rdi
  41586e:	mov    DWORD PTR [rbp-0xc],esi
  415871:	mov    eax,DWORD PTR [rbp-0xc]
  415874:	and    eax,0x1
  415877:	test   eax,eax
  415879:	setne  al
  41587c:	mov    edx,eax
  41587e:	mov    rax,QWORD PTR [rbp-0x8]
  415882:	mov    BYTE PTR [rax+0x32],dl
  415885:	mov    eax,DWORD PTR [rbp-0xc]
  415888:	and    eax,0x2
  41588b:	test   eax,eax
  41588d:	setne  al
  415890:	mov    edx,eax
  415892:	mov    rax,QWORD PTR [rbp-0x8]
  415896:	mov    BYTE PTR [rax+0x33],dl
  415899:	mov    eax,DWORD PTR [rbp-0xc]
  41589c:	and    eax,0x4
  41589f:	test   eax,eax
  4158a1:	setne  al
  4158a4:	mov    edx,eax
  4158a6:	mov    rax,QWORD PTR [rbp-0x8]
  4158aa:	mov    BYTE PTR [rax+0x34],dl
  4158ad:	mov    eax,DWORD PTR [rbp-0xc]
  4158b0:	and    eax,0x8
  4158b3:	test   eax,eax
  4158b5:	setne  al
  4158b8:	mov    edx,eax
  4158ba:	mov    rax,QWORD PTR [rbp-0x8]
  4158be:	mov    BYTE PTR [rax+0x35],dl
  4158c1:	mov    eax,DWORD PTR [rbp-0xc]
  4158c4:	and    eax,0x10
  4158c7:	test   eax,eax
  4158c9:	je     4158dc <_start@@Base+0x1077c>
  4158cb:	mov    rax,QWORD PTR [rbp-0x8]
  4158cf:	mov    esi,0x2
  4158d4:	mov    rdi,rax
  4158d7:	call   415805 <_start@@Base+0x106a5>
  4158dc:	mov    eax,DWORD PTR [rbp-0xc]
  4158df:	and    eax,0x20
  4158e2:	test   eax,eax
  4158e4:	je     4158f2 <_start@@Base+0x10792>
  4158e6:	mov    rax,QWORD PTR [rbp-0x8]
  4158ea:	mov    rdi,rax
  4158ed:	call   415820 <_start@@Base+0x106c0>
  4158f2:	nop
  4158f3:	leave  
  4158f4:	ret    
  4158f5:	push   rbp
  4158f6:	mov    rbp,rsp
  4158f9:	sub    rsp,0x10
  4158fd:	mov    QWORD PTR [rbp-0x8],rdi
  415901:	mov    QWORD PTR [rbp-0x10],rsi
  415905:	mov    rax,QWORD PTR [rbp-0x10]
  415909:	test   rax,rax
  41590c:	je     415916 <_start@@Base+0x107b6>
  41590e:	cmp    rax,0x11
  415912:	je     415930 <_start@@Base+0x107d0>
  415914:	jmp    41594a <_start@@Base+0x107ea>
  415916:	mov    rax,QWORD PTR [rbp-0x8]
  41591a:	mov    edx,0xa
  41591f:	lea    rsi,[rip+0x1f74f]        # 435075 <_IO_stdin_used@@Base+0x75>
  415926:	mov    rdi,rax
  415929:	call   42cb39 <flatcc_json_printer_enum@@Base>
  41592e:	jmp    41595e <_start@@Base+0x107fe>
  415930:	mov    rax,QWORD PTR [rbp-0x8]
  415934:	mov    edx,0x3
  415939:	lea    rsi,[rip+0x1f740]        # 435080 <_IO_stdin_used@@Base+0x80>
  415940:	mov    rdi,rax
  415943:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415948:	jmp    41595e <_start@@Base+0x107fe>
  41594a:	mov    rdx,QWORD PTR [rbp-0x10]
  41594e:	mov    rax,QWORD PTR [rbp-0x8]
  415952:	mov    rsi,rdx
  415955:	mov    rdi,rax
  415958:	call   42ca6d <flatcc_json_printer_int64@@Base>
  41595d:	nop
  41595e:	nop
  41595f:	leave  
  415960:	ret    
  415961:	push   rbp
  415962:	mov    rbp,rsp
  415965:	mov    QWORD PTR [rbp-0x8],rdi
  415969:	mov    QWORD PTR [rbp-0x10],rsi
  41596d:	nop
  41596e:	pop    rbp
  41596f:	ret    
  415970:	push   rbp
  415971:	mov    rbp,rsp
  415974:	sub    rsp,0x10
  415978:	mov    QWORD PTR [rbp-0x8],rdi
  41597c:	mov    DWORD PTR [rbp-0xc],esi
  41597f:	mov    eax,DWORD PTR [rbp-0xc]
  415982:	cmp    eax,0xfffffff5
  415985:	je     4159ab <_start@@Base+0x1084b>
  415987:	cmp    eax,0xfffffff6
  41598a:	je     4159c5 <_start@@Base+0x10865>
  41598c:	cmp    eax,0xfffffff4
  41598f:	jne    4159df <_start@@Base+0x1087f>
  415991:	mov    rax,QWORD PTR [rbp-0x8]
  415995:	mov    edx,0x4
  41599a:	lea    rsi,[rip+0x1f6e3]        # 435084 <_IO_stdin_used@@Base+0x84>
  4159a1:	mov    rdi,rax
  4159a4:	call   42cb39 <flatcc_json_printer_enum@@Base>
  4159a9:	jmp    4159f1 <_start@@Base+0x10891>
  4159ab:	mov    rax,QWORD PTR [rbp-0x8]
  4159af:	mov    edx,0x4
  4159b4:	lea    rsi,[rip+0x1f6ce]        # 435089 <_IO_stdin_used@@Base+0x89>
  4159bb:	mov    rdi,rax
  4159be:	call   42cb39 <flatcc_json_printer_enum@@Base>
  4159c3:	jmp    4159f1 <_start@@Base+0x10891>
  4159c5:	mov    rax,QWORD PTR [rbp-0x8]
  4159c9:	mov    edx,0x4
  4159ce:	lea    rsi,[rip+0x1f6b9]        # 43508e <_IO_stdin_used@@Base+0x8e>
  4159d5:	mov    rdi,rax
  4159d8:	call   42cb39 <flatcc_json_printer_enum@@Base>
  4159dd:	jmp    4159f1 <_start@@Base+0x10891>
  4159df:	mov    edx,DWORD PTR [rbp-0xc]
  4159e2:	mov    rax,QWORD PTR [rbp-0x8]
  4159e6:	mov    esi,edx
  4159e8:	mov    rdi,rax
  4159eb:	call   42ca2e <flatcc_json_printer_int32@@Base>
  4159f0:	nop
  4159f1:	nop
  4159f2:	leave  
  4159f3:	ret    
  4159f4:	push   rbp
  4159f5:	mov    rbp,rsp
  4159f8:	sub    rsp,0x10
  4159fc:	mov    QWORD PTR [rbp-0x8],rdi
  415a00:	mov    DWORD PTR [rbp-0xc],esi
  415a03:	mov    eax,DWORD PTR [rbp-0xc]
  415a06:	cmp    eax,0xffffffff
  415a09:	je     415a3d <_start@@Base+0x108dd>
  415a0b:	cmp    eax,0xffffffff
  415a0e:	jg     415a17 <_start@@Base+0x108b7>
  415a10:	cmp    eax,0xfffffffe
  415a13:	je     415a23 <_start@@Base+0x108c3>
  415a15:	jmp    415a8b <_start@@Base+0x1092b>
  415a17:	cmp    eax,0x2
  415a1a:	je     415a57 <_start@@Base+0x108f7>
  415a1c:	cmp    eax,0x2a
  415a1f:	je     415a71 <_start@@Base+0x10911>
  415a21:	jmp    415a8b <_start@@Base+0x1092b>
  415a23:	mov    rax,QWORD PTR [rbp-0x8]
  415a27:	mov    edx,0x6
  415a2c:	lea    rsi,[rip+0x1f660]        # 435093 <_IO_stdin_used@@Base+0x93>
  415a33:	mov    rdi,rax
  415a36:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415a3b:	jmp    415a9d <_start@@Base+0x1093d>
  415a3d:	mov    rax,QWORD PTR [rbp-0x8]
  415a41:	mov    edx,0x7
  415a46:	lea    rsi,[rip+0x1f64d]        # 43509a <_IO_stdin_used@@Base+0x9a>
  415a4d:	mov    rdi,rax
  415a50:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415a55:	jmp    415a9d <_start@@Base+0x1093d>
  415a57:	mov    rax,QWORD PTR [rbp-0x8]
  415a5b:	mov    edx,0x4
  415a60:	lea    rsi,[rip+0x1f63b]        # 4350a2 <_IO_stdin_used@@Base+0xa2>
  415a67:	mov    rdi,rax
  415a6a:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415a6f:	jmp    415a9d <_start@@Base+0x1093d>
  415a71:	mov    rax,QWORD PTR [rbp-0x8]
  415a75:	mov    edx,0x4
  415a7a:	lea    rsi,[rip+0x1f626]        # 4350a7 <_IO_stdin_used@@Base+0xa7>
  415a81:	mov    rdi,rax
  415a84:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415a89:	jmp    415a9d <_start@@Base+0x1093d>
  415a8b:	mov    edx,DWORD PTR [rbp-0xc]
  415a8e:	mov    rax,QWORD PTR [rbp-0x8]
  415a92:	mov    esi,edx
  415a94:	mov    rdi,rax
  415a97:	call   42ca2e <flatcc_json_printer_int32@@Base>
  415a9c:	nop
  415a9d:	nop
  415a9e:	leave  
  415a9f:	ret    
  415aa0:	push   rbp
  415aa1:	mov    rbp,rsp
  415aa4:	sub    rsp,0x10
  415aa8:	mov    QWORD PTR [rbp-0x8],rdi
  415aac:	mov    DWORD PTR [rbp-0xc],esi
  415aaf:	mov    eax,DWORD PTR [rbp-0xc]
  415ab2:	cmp    eax,0x3
  415ab5:	je     415add <_start@@Base+0x1097d>
  415ab7:	cmp    eax,0x7eafbeaf
  415abc:	je     415af7 <_start@@Base+0x10997>
  415abe:	cmp    eax,0xfffffffe
  415ac1:	jne    415b11 <_start@@Base+0x109b1>
  415ac3:	mov    rax,QWORD PTR [rbp-0x8]
  415ac7:	mov    edx,0x6
  415acc:	lea    rsi,[rip+0x1f5d9]        # 4350ac <_IO_stdin_used@@Base+0xac>
  415ad3:	mov    rdi,rax
  415ad6:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415adb:	jmp    415b23 <_start@@Base+0x109c3>
  415add:	mov    rax,QWORD PTR [rbp-0x8]
  415ae1:	mov    edx,0x4
  415ae6:	lea    rsi,[rip+0x1f5c6]        # 4350b3 <_IO_stdin_used@@Base+0xb3>
  415aed:	mov    rdi,rax
  415af0:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415af5:	jmp    415b23 <_start@@Base+0x109c3>
  415af7:	mov    rax,QWORD PTR [rbp-0x8]
  415afb:	mov    edx,0x4
  415b00:	lea    rsi,[rip+0x1f5b1]        # 4350b8 <_IO_stdin_used@@Base+0xb8>
  415b07:	mov    rdi,rax
  415b0a:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415b0f:	jmp    415b23 <_start@@Base+0x109c3>
  415b11:	mov    edx,DWORD PTR [rbp-0xc]
  415b14:	mov    rax,QWORD PTR [rbp-0x8]
  415b18:	mov    esi,edx
  415b1a:	mov    rdi,rax
  415b1d:	call   42ca2e <flatcc_json_printer_int32@@Base>
  415b22:	nop
  415b23:	nop
  415b24:	leave  
  415b25:	ret    
  415b26:	push   rbp
  415b27:	mov    rbp,rsp
  415b2a:	sub    rsp,0x20
  415b2e:	mov    QWORD PTR [rbp-0x18],rdi
  415b32:	mov    eax,esi
  415b34:	mov    BYTE PTR [rbp-0x1c],al
  415b37:	movzx  eax,BYTE PTR [rbp-0x1c]
  415b3b:	mov    BYTE PTR [rbp-0x9],al
  415b3e:	movzx  eax,BYTE PTR [rbp-0x9]
  415b42:	movzx  edx,BYTE PTR [rbp-0x9]
  415b46:	sub    edx,0x1
  415b49:	and    eax,edx
  415b4b:	test   eax,eax
  415b4d:	setne  al
  415b50:	movzx  eax,al
  415b53:	mov    DWORD PTR [rbp-0x4],eax
  415b56:	mov    DWORD PTR [rbp-0x8],0x0
  415b5d:	movzx  eax,BYTE PTR [rbp-0x9]
  415b61:	and    eax,0xf4
  415b66:	test   eax,eax
  415b68:	jne    415b70 <_start@@Base+0x10a10>
  415b6a:	cmp    BYTE PTR [rbp-0x9],0x0
  415b6e:	jne    415b87 <_start@@Base+0x10a27>
  415b70:	movsx  edx,BYTE PTR [rbp-0x1c]
  415b74:	mov    rax,QWORD PTR [rbp-0x18]
  415b78:	mov    esi,edx
  415b7a:	mov    rdi,rax
  415b7d:	call   42c9a9 <flatcc_json_printer_int8@@Base>
  415b82:	jmp    415c2a <_start@@Base+0x10aca>
  415b87:	mov    edx,DWORD PTR [rbp-0x4]
  415b8a:	mov    rax,QWORD PTR [rbp-0x18]
  415b8e:	mov    esi,edx
  415b90:	mov    rdi,rax
  415b93:	call   42cb68 <flatcc_json_printer_delimit_enum_flags@@Base>
  415b98:	movzx  eax,BYTE PTR [rbp-0x9]
  415b9c:	and    eax,0x1
  415b9f:	test   eax,eax
  415ba1:	je     415bc3 <_start@@Base+0x10a63>
  415ba3:	mov    eax,DWORD PTR [rbp-0x8]
  415ba6:	lea    edx,[rax+0x1]
  415ba9:	mov    DWORD PTR [rbp-0x8],edx
  415bac:	mov    rdi,QWORD PTR [rbp-0x18]
  415bb0:	mov    ecx,0x3
  415bb5:	lea    rdx,[rip+0x1f501]        # 4350bd <_IO_stdin_used@@Base+0xbd>
  415bbc:	mov    esi,eax
  415bbe:	call   42cbba <flatcc_json_printer_enum_flag@@Base>
  415bc3:	movzx  eax,BYTE PTR [rbp-0x9]
  415bc7:	and    eax,0x2
  415bca:	test   eax,eax
  415bcc:	je     415bee <_start@@Base+0x10a8e>
  415bce:	mov    eax,DWORD PTR [rbp-0x8]
  415bd1:	lea    edx,[rax+0x1]
  415bd4:	mov    DWORD PTR [rbp-0x8],edx
  415bd7:	mov    rdi,QWORD PTR [rbp-0x18]
  415bdb:	mov    ecx,0x5
  415be0:	lea    rdx,[rip+0x1f4da]        # 4350c1 <_IO_stdin_used@@Base+0xc1>
  415be7:	mov    esi,eax
  415be9:	call   42cbba <flatcc_json_printer_enum_flag@@Base>
  415bee:	movzx  eax,BYTE PTR [rbp-0x9]
  415bf2:	and    eax,0x8
  415bf5:	test   eax,eax
  415bf7:	je     415c19 <_start@@Base+0x10ab9>
  415bf9:	mov    eax,DWORD PTR [rbp-0x8]
  415bfc:	lea    edx,[rax+0x1]
  415bff:	mov    DWORD PTR [rbp-0x8],edx
  415c02:	mov    rdi,QWORD PTR [rbp-0x18]
  415c06:	mov    ecx,0x4
  415c0b:	lea    rdx,[rip+0x1f4b5]        # 4350c7 <_IO_stdin_used@@Base+0xc7>
  415c12:	mov    esi,eax
  415c14:	call   42cbba <flatcc_json_printer_enum_flag@@Base>
  415c19:	mov    edx,DWORD PTR [rbp-0x4]
  415c1c:	mov    rax,QWORD PTR [rbp-0x18]
  415c20:	mov    esi,edx
  415c22:	mov    rdi,rax
  415c25:	call   42cb68 <flatcc_json_printer_delimit_enum_flags@@Base>
  415c2a:	leave  
  415c2b:	ret    
  415c2c:	push   rbp
  415c2d:	mov    rbp,rsp
  415c30:	sub    rsp,0x10
  415c34:	mov    QWORD PTR [rbp-0x8],rdi
  415c38:	mov    DWORD PTR [rbp-0xc],esi
  415c3b:	mov    eax,DWORD PTR [rbp-0xc]
  415c3e:	test   eax,eax
  415c40:	jne    415c5c <_start@@Base+0x10afc>
  415c42:	mov    rax,QWORD PTR [rbp-0x8]
  415c46:	mov    edx,0x1
  415c4b:	lea    rsi,[rip+0x1f47a]        # 4350cc <_IO_stdin_used@@Base+0xcc>
  415c52:	mov    rdi,rax
  415c55:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415c5a:	jmp    415c6e <_start@@Base+0x10b0e>
  415c5c:	mov    edx,DWORD PTR [rbp-0xc]
  415c5f:	mov    rax,QWORD PTR [rbp-0x8]
  415c63:	mov    esi,edx
  415c65:	mov    rdi,rax
  415c68:	call   42ca2e <flatcc_json_printer_int32@@Base>
  415c6d:	nop
  415c6e:	nop
  415c6f:	leave  
  415c70:	ret    
  415c71:	push   rbp
  415c72:	mov    rbp,rsp
  415c75:	sub    rsp,0x10
  415c79:	mov    QWORD PTR [rbp-0x8],rdi
  415c7d:	mov    eax,esi
  415c7f:	mov    BYTE PTR [rbp-0xc],al
  415c82:	movzx  eax,BYTE PTR [rbp-0xc]
  415c86:	cmp    eax,0x1
  415c89:	jne    415ca5 <_start@@Base+0x10b45>
  415c8b:	mov    rax,QWORD PTR [rbp-0x8]
  415c8f:	mov    edx,0x11
  415c94:	lea    rsi,[rip+0x1f433]        # 4350ce <_IO_stdin_used@@Base+0xce>
  415c9b:	mov    rdi,rax
  415c9e:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415ca3:	jmp    415cbe <_start@@Base+0x10b5e>
  415ca5:	mov    rax,QWORD PTR [rbp-0x8]
  415ca9:	mov    edx,0x4
  415cae:	lea    rsi,[rip+0x1f42b]        # 4350e0 <_IO_stdin_used@@Base+0xe0>
  415cb5:	mov    rdi,rax
  415cb8:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415cbd:	nop
  415cbe:	nop
  415cbf:	leave  
  415cc0:	ret    
  415cc1:	push   rbp
  415cc2:	mov    rbp,rsp
  415cc5:	sub    rsp,0x10
  415cc9:	mov    QWORD PTR [rbp-0x8],rdi
  415ccd:	mov    QWORD PTR [rbp-0x10],rsi
  415cd1:	mov    rax,QWORD PTR [rbp-0x10]
  415cd5:	movzx  eax,BYTE PTR [rax+0xc]
  415cd9:	movzx  eax,al
  415cdc:	cmp    eax,0x1
  415cdf:	je     415ce3 <_start@@Base+0x10b83>
  415ce1:	jmp    415cfe <_start@@Base+0x10b9e>
  415ce3:	mov    rcx,QWORD PTR [rbp-0x10]
  415ce7:	mov    rax,QWORD PTR [rbp-0x8]
  415ceb:	lea    rdx,[rip+0x5d8]        # 4162ca <_start@@Base+0x1116a>
  415cf2:	mov    rsi,rcx
  415cf5:	mov    rdi,rax
  415cf8:	call   433520 <flatcc_json_printer_union_table@@Base>
  415cfd:	nop
  415cfe:	nop
  415cff:	leave  
  415d00:	ret    
  415d01:	push   rbp
  415d02:	mov    rbp,rsp
  415d05:	sub    rsp,0x10
  415d09:	mov    QWORD PTR [rbp-0x8],rdi
  415d0d:	mov    eax,esi
  415d0f:	mov    BYTE PTR [rbp-0xc],al
  415d12:	movzx  eax,BYTE PTR [rbp-0xc]
  415d16:	cmp    eax,0x2
  415d19:	je     415d4d <_start@@Base+0x10bed>
  415d1b:	cmp    eax,0x2
  415d1e:	jg     415d27 <_start@@Base+0x10bc7>
  415d20:	cmp    eax,0x1
  415d23:	je     415d33 <_start@@Base+0x10bd3>
  415d25:	jmp    415d9b <_start@@Base+0x10c3b>
  415d27:	cmp    eax,0x3
  415d2a:	je     415d67 <_start@@Base+0x10c07>
  415d2c:	cmp    eax,0x4
  415d2f:	je     415d81 <_start@@Base+0x10c21>
  415d31:	jmp    415d9b <_start@@Base+0x10c3b>
  415d33:	mov    rax,QWORD PTR [rbp-0x8]
  415d37:	mov    edx,0x7
  415d3c:	lea    rsi,[rip+0x1f3a2]        # 4350e5 <_IO_stdin_used@@Base+0xe5>
  415d43:	mov    rdi,rax
  415d46:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415d4b:	jmp    415db4 <_start@@Base+0x10c54>
  415d4d:	mov    rax,QWORD PTR [rbp-0x8]
  415d51:	mov    edx,0x17
  415d56:	lea    rsi,[rip+0x1f390]        # 4350ed <_IO_stdin_used@@Base+0xed>
  415d5d:	mov    rdi,rax
  415d60:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415d65:	jmp    415db4 <_start@@Base+0x10c54>
  415d67:	mov    rax,QWORD PTR [rbp-0x8]
  415d6b:	mov    edx,0x8
  415d70:	lea    rsi,[rip+0x1f38e]        # 435105 <_IO_stdin_used@@Base+0x105>
  415d77:	mov    rdi,rax
  415d7a:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415d7f:	jmp    415db4 <_start@@Base+0x10c54>
  415d81:	mov    rax,QWORD PTR [rbp-0x8]
  415d85:	mov    edx,0x3
  415d8a:	lea    rsi,[rip+0x1f37d]        # 43510e <_IO_stdin_used@@Base+0x10e>
  415d91:	mov    rdi,rax
  415d94:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415d99:	jmp    415db4 <_start@@Base+0x10c54>
  415d9b:	mov    rax,QWORD PTR [rbp-0x8]
  415d9f:	mov    edx,0x4
  415da4:	lea    rsi,[rip+0x1f335]        # 4350e0 <_IO_stdin_used@@Base+0xe0>
  415dab:	mov    rdi,rax
  415dae:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415db3:	nop
  415db4:	nop
  415db5:	leave  
  415db6:	ret    
  415db7:	push   rbp
  415db8:	mov    rbp,rsp
  415dbb:	sub    rsp,0x10
  415dbf:	mov    QWORD PTR [rbp-0x8],rdi
  415dc3:	mov    QWORD PTR [rbp-0x10],rsi
  415dc7:	mov    rax,QWORD PTR [rbp-0x10]
  415dcb:	movzx  eax,BYTE PTR [rax+0xc]
  415dcf:	movzx  eax,al
  415dd2:	cmp    eax,0x2
  415dd5:	je     415e0b <_start@@Base+0x10cab>
  415dd7:	cmp    eax,0x2
  415dda:	jg     415de3 <_start@@Base+0x10c83>
  415ddc:	cmp    eax,0x1
  415ddf:	je     415def <_start@@Base+0x10c8f>
  415de1:	jmp    415e5e <_start@@Base+0x10cfe>
  415de3:	cmp    eax,0x3
  415de6:	je     415e27 <_start@@Base+0x10cc7>
  415de8:	cmp    eax,0x4
  415deb:	je     415e43 <_start@@Base+0x10ce3>
  415ded:	jmp    415e5e <_start@@Base+0x10cfe>
  415def:	mov    rcx,QWORD PTR [rbp-0x10]
  415df3:	mov    rax,QWORD PTR [rbp-0x8]
  415df7:	lea    rdx,[rip+0xba7]        # 4169a5 <_start@@Base+0x11845>
  415dfe:	mov    rsi,rcx
  415e01:	mov    rdi,rax
  415e04:	call   433520 <flatcc_json_printer_union_table@@Base>
  415e09:	jmp    415e5e <_start@@Base+0x10cfe>
  415e0b:	mov    rcx,QWORD PTR [rbp-0x10]
  415e0f:	mov    rax,QWORD PTR [rbp-0x8]
  415e13:	lea    rdx,[rip+0x519]        # 416333 <_start@@Base+0x111d3>
  415e1a:	mov    rsi,rcx
  415e1d:	mov    rdi,rax
  415e20:	call   433520 <flatcc_json_printer_union_table@@Base>
  415e25:	jmp    415e5e <_start@@Base+0x10cfe>
  415e27:	mov    rcx,QWORD PTR [rbp-0x10]
  415e2b:	mov    rax,QWORD PTR [rbp-0x8]
  415e2f:	lea    rdx,[rip+0x4a3]        # 4162d9 <_start@@Base+0x11179>
  415e36:	mov    rsi,rcx
  415e39:	mov    rdi,rax
  415e3c:	call   433520 <flatcc_json_printer_union_table@@Base>
  415e41:	jmp    415e5e <_start@@Base+0x10cfe>
  415e43:	mov    rcx,QWORD PTR [rbp-0x10]
  415e47:	mov    rax,QWORD PTR [rbp-0x8]
  415e4b:	lea    rdx,[rip+0x76d]        # 4165bf <_start@@Base+0x1145f>
  415e52:	mov    rsi,rcx
  415e55:	mov    rdi,rax
  415e58:	call   433520 <flatcc_json_printer_union_table@@Base>
  415e5d:	nop
  415e5e:	nop
  415e5f:	leave  
  415e60:	ret    
  415e61:	push   rbp
  415e62:	mov    rbp,rsp
  415e65:	sub    rsp,0x10
  415e69:	mov    QWORD PTR [rbp-0x8],rdi
  415e6d:	mov    eax,esi
  415e6f:	mov    BYTE PTR [rbp-0xc],al
  415e72:	movzx  eax,BYTE PTR [rbp-0xc]
  415e76:	cmp    eax,0x9
  415e79:	je     415ee7 <_start@@Base+0x10d87>
  415e7b:	cmp    eax,0x9
  415e7e:	jg     415e8f <_start@@Base+0x10d2f>
  415e80:	cmp    eax,0x2
  415e83:	je     415ead <_start@@Base+0x10d4d>
  415e85:	cmp    eax,0x8
  415e88:	je     415eca <_start@@Base+0x10d6a>
  415e8a:	jmp    415f4f <_start@@Base+0x10def>
  415e8f:	cmp    eax,0xb
  415e92:	je     415f1b <_start@@Base+0x10dbb>
  415e98:	cmp    eax,0xb
  415e9b:	jl     415f01 <_start@@Base+0x10da1>
  415e9d:	cmp    eax,0xff
  415ea2:	je     415f35 <_start@@Base+0x10dd5>
  415ea8:	jmp    415f4f <_start@@Base+0x10def>
  415ead:	mov    rax,QWORD PTR [rbp-0x8]
  415eb1:	mov    edx,0x5
  415eb6:	lea    rsi,[rip+0x1f255]        # 435112 <_IO_stdin_used@@Base+0x112>
  415ebd:	mov    rdi,rax
  415ec0:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415ec5:	jmp    415f68 <_start@@Base+0x10e08>
  415eca:	mov    rax,QWORD PTR [rbp-0x8]
  415ece:	mov    edx,0x8
  415ed3:	lea    rsi,[rip+0x1f23e]        # 435118 <_IO_stdin_used@@Base+0x118>
  415eda:	mov    rdi,rax
  415edd:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415ee2:	jmp    415f68 <_start@@Base+0x10e08>
  415ee7:	mov    rax,QWORD PTR [rbp-0x8]
  415eeb:	mov    edx,0x5
  415ef0:	lea    rsi,[rip+0x1f22a]        # 435121 <_IO_stdin_used@@Base+0x121>
  415ef7:	mov    rdi,rax
  415efa:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415eff:	jmp    415f68 <_start@@Base+0x10e08>
  415f01:	mov    rax,QWORD PTR [rbp-0x8]
  415f05:	mov    edx,0x7
  415f0a:	lea    rsi,[rip+0x1f216]        # 435127 <_IO_stdin_used@@Base+0x127>
  415f11:	mov    rdi,rax
  415f14:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415f19:	jmp    415f68 <_start@@Base+0x10e08>
  415f1b:	mov    rax,QWORD PTR [rbp-0x8]
  415f1f:	mov    edx,0x5
  415f24:	lea    rsi,[rip+0x1f204]        # 43512f <_IO_stdin_used@@Base+0x12f>
  415f2b:	mov    rdi,rax
  415f2e:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415f33:	jmp    415f68 <_start@@Base+0x10e08>
  415f35:	mov    rax,QWORD PTR [rbp-0x8]
  415f39:	mov    edx,0x6
  415f3e:	lea    rsi,[rip+0x1f1f0]        # 435135 <_IO_stdin_used@@Base+0x135>
  415f45:	mov    rdi,rax
  415f48:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415f4d:	jmp    415f68 <_start@@Base+0x10e08>
  415f4f:	mov    rax,QWORD PTR [rbp-0x8]
  415f53:	mov    edx,0x4
  415f58:	lea    rsi,[rip+0x1f181]        # 4350e0 <_IO_stdin_used@@Base+0xe0>
  415f5f:	mov    rdi,rax
  415f62:	call   42cb39 <flatcc_json_printer_enum@@Base>
  415f67:	nop
  415f68:	nop
  415f69:	leave  
  415f6a:	ret    
  415f6b:	push   rbp
  415f6c:	mov    rbp,rsp
  415f6f:	sub    rsp,0x10
  415f73:	mov    QWORD PTR [rbp-0x8],rdi
  415f77:	mov    QWORD PTR [rbp-0x10],rsi
  415f7b:	mov    rax,QWORD PTR [rbp-0x10]
  415f7f:	movzx  eax,BYTE PTR [rax+0xc]
  415f83:	movzx  eax,al
  415f86:	cmp    eax,0x9
  415f89:	je     415ff5 <_start@@Base+0x10e95>
  415f8b:	cmp    eax,0x9
  415f8e:	jg     415f9f <_start@@Base+0x10e3f>
  415f90:	cmp    eax,0x2
  415f93:	je     415fbd <_start@@Base+0x10e5d>
  415f95:	cmp    eax,0x8
  415f98:	je     415fd9 <_start@@Base+0x10e79>
  415f9a:	jmp    416056 <_start@@Base+0x10ef6>
  415f9f:	cmp    eax,0xb
  415fa2:	je     41602d <_start@@Base+0x10ecd>
  415fa8:	cmp    eax,0xb
  415fab:	jl     416011 <_start@@Base+0x10eb1>
  415fad:	cmp    eax,0xff
  415fb2:	je     416042 <_start@@Base+0x10ee2>
  415fb8:	jmp    416056 <_start@@Base+0x10ef6>
  415fbd:	mov    rcx,QWORD PTR [rbp-0x10]
  415fc1:	mov    rax,QWORD PTR [rbp-0x8]
  415fc5:	lea    rdx,[rip+0x1191]        # 41715d <_start@@Base+0x11ffd>
  415fcc:	mov    rsi,rcx
  415fcf:	mov    rdi,rax
  415fd2:	call   433520 <flatcc_json_printer_union_table@@Base>
  415fd7:	jmp    416056 <_start@@Base+0x10ef6>
  415fd9:	mov    rcx,QWORD PTR [rbp-0x10]
  415fdd:	mov    rax,QWORD PTR [rbp-0x8]
  415fe1:	lea    rdx,[rip+0x26e]        # 416256 <_start@@Base+0x110f6>
  415fe8:	mov    rsi,rcx
  415feb:	mov    rdi,rax
  415fee:	call   43356b <flatcc_json_printer_union_struct@@Base>
  415ff3:	jmp    416056 <_start@@Base+0x10ef6>
  415ff5:	mov    rcx,QWORD PTR [rbp-0x10]
  415ff9:	mov    rax,QWORD PTR [rbp-0x8]
  415ffd:	lea    rdx,[rip+0x28c]        # 416290 <_start@@Base+0x11130>
  416004:	mov    rsi,rcx
  416007:	mov    rdi,rax
  41600a:	call   43356b <flatcc_json_printer_union_struct@@Base>
  41600f:	jmp    416056 <_start@@Base+0x10ef6>
  416011:	mov    rcx,QWORD PTR [rbp-0x10]
  416015:	mov    rax,QWORD PTR [rbp-0x8]
  416019:	lea    rdx,[rip+0x270]        # 416290 <_start@@Base+0x11130>
  416020:	mov    rsi,rcx
  416023:	mov    rdi,rax
  416026:	call   43356b <flatcc_json_printer_union_struct@@Base>
  41602b:	jmp    416056 <_start@@Base+0x10ef6>
  41602d:	mov    rdx,QWORD PTR [rbp-0x10]
  416031:	mov    rax,QWORD PTR [rbp-0x8]
  416035:	mov    rsi,rdx
  416038:	mov    rdi,rax
  41603b:	call   433623 <flatcc_json_printer_union_string@@Base>
  416040:	jmp    416056 <_start@@Base+0x10ef6>
  416042:	mov    rdx,QWORD PTR [rbp-0x10]
  416046:	mov    rax,QWORD PTR [rbp-0x8]
  41604a:	mov    rsi,rdx
  41604d:	mov    rdi,rax
  416050:	call   433623 <flatcc_json_printer_union_string@@Base>
  416055:	nop
  416056:	nop
  416057:	leave  
  416058:	ret    
  416059:	push   rbp
  41605a:	mov    rbp,rsp
  41605d:	mov    QWORD PTR [rbp-0x8],rdi
  416061:	mov    QWORD PTR [rbp-0x10],rsi
  416065:	nop
  416066:	pop    rbp
  416067:	ret    
  416068:	push   rbp
  416069:	mov    rbp,rsp
  41606c:	sub    rsp,0x10
  416070:	mov    QWORD PTR [rbp-0x8],rdi
  416074:	mov    QWORD PTR [rbp-0x10],rsi
  416078:	mov    rdx,QWORD PTR [rbp-0x10]
  41607c:	mov    rax,QWORD PTR [rbp-0x8]
  416080:	mov    r9d,0x1
  416086:	lea    r8,[rip+0x1f0af]        # 43513c <_IO_stdin_used@@Base+0x13c>
  41608d:	mov    ecx,0x0
  416092:	mov    esi,0x0
  416097:	mov    rdi,rax
  41609a:	call   42e64f <flatcc_json_printer_int16_struct_field@@Base>
  41609f:	mov    rdx,QWORD PTR [rbp-0x10]
  4160a3:	mov    rax,QWORD PTR [rbp-0x8]
  4160a7:	mov    r9d,0x1
  4160ad:	lea    r8,[rip+0x1f08a]        # 43513e <_IO_stdin_used@@Base+0x13e>
  4160b4:	mov    ecx,0x2
  4160b9:	mov    esi,0x1
  4160be:	mov    rdi,rax
  4160c1:	call   42e5b3 <flatcc_json_printer_int8_struct_field@@Base>
  4160c6:	nop
  4160c7:	leave  
  4160c8:	ret    
  4160c9:	push   rbp
  4160ca:	mov    rbp,rsp
  4160cd:	mov    QWORD PTR [rbp-0x8],rdi
  4160d1:	mov    QWORD PTR [rbp-0x10],rsi
  4160d5:	nop
  4160d6:	pop    rbp
  4160d7:	ret    
  4160d8:	push   rbp
  4160d9:	mov    rbp,rsp
  4160dc:	sub    rsp,0x10
  4160e0:	mov    QWORD PTR [rbp-0x8],rdi
  4160e4:	mov    QWORD PTR [rbp-0x10],rsi
  4160e8:	mov    rdx,QWORD PTR [rbp-0x10]
  4160ec:	mov    rax,QWORD PTR [rbp-0x8]
  4160f0:	mov    r9d,0x1
  4160f6:	lea    r8,[rip+0x1efcf]        # 4350cc <_IO_stdin_used@@Base+0xcc>
  4160fd:	mov    ecx,0x0
  416102:	mov    esi,0x0
  416107:	mov    rdi,rax
  41610a:	call   42e8c1 <flatcc_json_printer_float_struct_field@@Base>
  41610f:	mov    rdx,QWORD PTR [rbp-0x10]
  416113:	mov    rax,QWORD PTR [rbp-0x8]
  416117:	mov    r9d,0x1
  41611d:	lea    r8,[rip+0x1f01c]        # 435140 <_IO_stdin_used@@Base+0x140>
  416124:	mov    ecx,0x4
  416129:	mov    esi,0x1
  41612e:	mov    rdi,rax
  416131:	call   42e8c1 <flatcc_json_printer_float_struct_field@@Base>
  416136:	mov    rdx,QWORD PTR [rbp-0x10]
  41613a:	mov    rax,QWORD PTR [rbp-0x8]
  41613e:	mov    r9d,0x1
  416144:	lea    r8,[rip+0x1eff7]        # 435142 <_IO_stdin_used@@Base+0x142>
  41614b:	mov    ecx,0x8
  416150:	mov    esi,0x2
  416155:	mov    rdi,rax
  416158:	call   42e8c1 <flatcc_json_printer_float_struct_field@@Base>
  41615d:	mov    rdx,QWORD PTR [rbp-0x10]
  416161:	mov    rax,QWORD PTR [rbp-0x8]
  416165:	mov    r9d,0x5
  41616b:	lea    r8,[rip+0x1efd2]        # 435144 <_IO_stdin_used@@Base+0x144>
  416172:	mov    ecx,0x10
  416177:	mov    esi,0x3
  41617c:	mov    rdi,rax
  41617f:	call   42e960 <flatcc_json_printer_double_struct_field@@Base>
  416184:	mov    rdx,QWORD PTR [rbp-0x10]
  416188:	mov    rax,QWORD PTR [rbp-0x8]
  41618c:	sub    rsp,0x8
  416190:	lea    rcx,[rip+0xfffffffffffff98f]        # 415b26 <_start@@Base+0x109c6>
  416197:	push   rcx
  416198:	mov    r9d,0x5
  41619e:	lea    r8,[rip+0x1efa5]        # 43514a <_IO_stdin_used@@Base+0x14a>
  4161a5:	mov    ecx,0x18
  4161aa:	mov    esi,0x4
  4161af:	mov    rdi,rax
  4161b2:	call   42ecff <flatcc_json_printer_int8_enum_struct_field@@Base>
  4161b7:	add    rsp,0x10
  4161bb:	mov    rdx,QWORD PTR [rbp-0x10]
  4161bf:	mov    rax,QWORD PTR [rbp-0x8]
  4161c3:	sub    rsp,0x8
  4161c7:	lea    rcx,[rip+0xfffffffffffffe9a]        # 416068 <_start@@Base+0x10f08>
  4161ce:	push   rcx
  4161cf:	mov    r9d,0x5
  4161d5:	lea    r8,[rip+0x1ef74]        # 435150 <_IO_stdin_used@@Base+0x150>
  4161dc:	mov    ecx,0x1a
  4161e1:	mov    esi,0x5
  4161e6:	mov    rdi,rax
  4161e9:	call   433657 <flatcc_json_printer_embedded_struct_field@@Base>
  4161ee:	add    rsp,0x10
  4161f2:	nop
  4161f3:	leave  
  4161f4:	ret    
  4161f5:	push   rbp
  4161f6:	mov    rbp,rsp
  4161f9:	sub    rsp,0x10
  4161fd:	mov    QWORD PTR [rbp-0x8],rdi
  416201:	mov    QWORD PTR [rbp-0x10],rsi
  416205:	mov    rdx,QWORD PTR [rbp-0x10]
  416209:	mov    rax,QWORD PTR [rbp-0x8]
  41620d:	mov    r9d,0x2
  416213:	lea    r8,[rip+0x1ef3c]        # 435156 <_IO_stdin_used@@Base+0x156>
  41621a:	mov    ecx,0x0
  41621f:	mov    esi,0x0
  416224:	mov    rdi,rax
  416227:	call   42e47a <flatcc_json_printer_uint32_struct_field@@Base>
  41622c:	mov    rdx,QWORD PTR [rbp-0x10]
  416230:	mov    rax,QWORD PTR [rbp-0x8]
  416234:	mov    r9d,0x8
  41623a:	lea    r8,[rip+0x1ef18]        # 435159 <_IO_stdin_used@@Base+0x159>
  416241:	mov    ecx,0x4
  416246:	mov    esi,0x1
  41624b:	mov    rdi,rax
  41624e:	call   42e47a <flatcc_json_printer_uint32_struct_field@@Base>
  416253:	nop
  416254:	leave  
  416255:	ret    
  416256:	push   rbp
  416257:	mov    rbp,rsp
  41625a:	sub    rsp,0x10
  41625e:	mov    QWORD PTR [rbp-0x8],rdi
  416262:	mov    QWORD PTR [rbp-0x10],rsi
  416266:	mov    rdx,QWORD PTR [rbp-0x10]
  41626a:	mov    rax,QWORD PTR [rbp-0x8]
  41626e:	mov    r9d,0xb
  416274:	lea    r8,[rip+0x1eee7]        # 435162 <_IO_stdin_used@@Base+0x162>
  41627b:	mov    ecx,0x0
  416280:	mov    esi,0x0
  416285:	mov    rdi,rax
  416288:	call   42e3dd <flatcc_json_printer_uint16_struct_field@@Base>
  41628d:	nop
  41628e:	leave  
  41628f:	ret    
  416290:	push   rbp
  416291:	mov    rbp,rsp
  416294:	sub    rsp,0x10
  416298:	mov    QWORD PTR [rbp-0x8],rdi
  41629c:	mov    QWORD PTR [rbp-0x10],rsi
  4162a0:	mov    rdx,QWORD PTR [rbp-0x10]
  4162a4:	mov    rax,QWORD PTR [rbp-0x8]
  4162a8:	mov    r9d,0xa
  4162ae:	lea    r8,[rip+0x1eeb9]        # 43516e <_IO_stdin_used@@Base+0x16e>
  4162b5:	mov    ecx,0x0
  4162ba:	mov    esi,0x0
  4162bf:	mov    rdi,rax
  4162c2:	call   42e6ec <flatcc_json_printer_int32_struct_field@@Base>
  4162c7:	nop
  4162c8:	leave  
  4162c9:	ret    
  4162ca:	push   rbp
  4162cb:	mov    rbp,rsp
  4162ce:	mov    QWORD PTR [rbp-0x8],rdi
  4162d2:	mov    QWORD PTR [rbp-0x10],rsi
  4162d6:	nop
  4162d7:	pop    rbp
  4162d8:	ret    
  4162d9:	push   rbp
  4162da:	mov    rbp,rsp
  4162dd:	mov    QWORD PTR [rbp-0x8],rdi
  4162e1:	mov    QWORD PTR [rbp-0x10],rsi
  4162e5:	nop
  4162e6:	pop    rbp
  4162e7:	ret    
  4162e8:	push   rbp
  4162e9:	mov    rbp,rsp
  4162ec:	mov    QWORD PTR [rbp-0x8],rdi
  4162f0:	mov    QWORD PTR [rbp-0x10],rsi
  4162f4:	nop
  4162f5:	pop    rbp
  4162f6:	ret    
  4162f7:	push   rbp
  4162f8:	mov    rbp,rsp
  4162fb:	sub    rsp,0x10
  4162ff:	mov    QWORD PTR [rbp-0x8],rdi
  416303:	mov    QWORD PTR [rbp-0x10],rsi
  416307:	mov    rsi,QWORD PTR [rbp-0x10]
  41630b:	mov    rax,QWORD PTR [rbp-0x8]
  41630f:	lea    r9,[rip+0xfffffffffffffdb3]        # 4160c9 <_start@@Base+0x10f69>
  416316:	mov    r8d,0x5
  41631c:	lea    rcx,[rip+0x1ee56]        # 435179 <_IO_stdin_used@@Base+0x179>
  416323:	mov    edx,0x0
  416328:	mov    rdi,rax
  41632b:	call   43374a <flatcc_json_printer_struct_field@@Base>
  416330:	nop
  416331:	leave  
  416332:	ret    
  416333:	push   rbp
  416334:	mov    rbp,rsp
  416337:	sub    rsp,0x10
  41633b:	mov    QWORD PTR [rbp-0x8],rdi
  41633f:	mov    QWORD PTR [rbp-0x10],rsi
  416343:	mov    rsi,QWORD PTR [rbp-0x10]
  416347:	mov    rax,QWORD PTR [rbp-0x8]
  41634b:	sub    rsp,0x8
  41634f:	lea    rdx,[rip+0xfffffffffffff7d0]        # 415b26 <_start@@Base+0x109c6>
  416356:	push   rdx
  416357:	mov    r9d,0x2
  41635d:	mov    r8d,0x5
  416363:	lea    rcx,[rip+0x1ee15]        # 43517f <_IO_stdin_used@@Base+0x17f>
  41636a:	mov    edx,0x0
  41636f:	mov    rdi,rax
  416372:	call   42ddd2 <flatcc_json_printer_int8_enum_field@@Base>
  416377:	add    rsp,0x10
  41637b:	mov    rsi,QWORD PTR [rbp-0x10]
  41637f:	mov    rax,QWORD PTR [rbp-0x8]
  416383:	sub    rsp,0x8
  416387:	lea    rdx,[rip+0xfffffffffffff798]        # 415b26 <_start@@Base+0x109c6>
  41638e:	push   rdx
  41638f:	mov    r9d,0x2
  416395:	mov    r8d,0x6
  41639b:	lea    rcx,[rip+0x1ede3]        # 435185 <_IO_stdin_used@@Base+0x185>
  4163a2:	mov    edx,0x1
  4163a7:	mov    rdi,rax
  4163aa:	call   42ddd2 <flatcc_json_printer_int8_enum_field@@Base>
  4163af:	add    rsp,0x10
  4163b3:	mov    rsi,QWORD PTR [rbp-0x10]
  4163b7:	mov    rax,QWORD PTR [rbp-0x8]
  4163bb:	mov    r9d,0x2
  4163c1:	mov    r8d,0x2
  4163c7:	lea    rcx,[rip+0x1edbe]        # 43518c <_IO_stdin_used@@Base+0x18c>
  4163ce:	mov    edx,0x2
  4163d3:	mov    rdi,rax
  4163d6:	call   42cee6 <flatcc_json_printer_uint8_field@@Base>
  4163db:	mov    rsi,QWORD PTR [rbp-0x10]
  4163df:	mov    rax,QWORD PTR [rbp-0x8]
  4163e3:	mov    r9d,0x2
  4163e9:	mov    r8d,0x3
  4163ef:	lea    rcx,[rip+0x1ed99]        # 43518f <_IO_stdin_used@@Base+0x18f>
  4163f6:	mov    edx,0x3
  4163fb:	mov    rdi,rax
  4163fe:	call   42cee6 <flatcc_json_printer_uint8_field@@Base>
  416403:	nop
  416404:	leave  
  416405:	ret    
  416406:	push   rbp
  416407:	mov    rbp,rsp
  41640a:	sub    rsp,0x10
  41640e:	mov    QWORD PTR [rbp-0x8],rdi
  416412:	mov    QWORD PTR [rbp-0x10],rsi
  416416:	mov    rsi,QWORD PTR [rbp-0x10]
  41641a:	mov    rax,QWORD PTR [rbp-0x8]
  41641e:	lea    r9,[rip+0xfffffffffffffc34]        # 416059 <_start@@Base+0x10ef9>
  416425:	mov    r8d,0x6
  41642b:	lea    rcx,[rip+0x1ed61]        # 435193 <_IO_stdin_used@@Base+0x193>
  416432:	mov    edx,0x0
  416437:	mov    rdi,rax
  41643a:	call   43374a <flatcc_json_printer_struct_field@@Base>
  41643f:	mov    rsi,QWORD PTR [rbp-0x10]
  416443:	mov    rax,QWORD PTR [rbp-0x8]
  416447:	sub    rsp,0x8
  41644b:	lea    rdx,[rip+0xfffffffffffff4a3]        # 4158f5 <_start@@Base+0x10795>
  416452:	push   rdx
  416453:	mov    r9d,0x0
  416459:	mov    r8d,0x6
  41645f:	lea    rcx,[rip+0x1ed34]        # 43519a <_IO_stdin_used@@Base+0x19a>
  416466:	mov    edx,0x1
  41646b:	mov    rdi,rax
  41646e:	call   42e112 <flatcc_json_printer_int64_enum_field@@Base>
  416473:	add    rsp,0x10
  416477:	mov    rsi,QWORD PTR [rbp-0x10]
  41647b:	mov    rax,QWORD PTR [rbp-0x8]
  41647f:	sub    rsp,0x8
  416483:	lea    rdx,[rip+0xfffffffffffff46b]        # 4158f5 <_start@@Base+0x10795>
  41648a:	push   rdx
  41648b:	mov    r9d,0x0
  416491:	mov    r8d,0x7
  416497:	lea    rcx,[rip+0x1ed03]        # 4351a1 <_IO_stdin_used@@Base+0x1a1>
  41649e:	mov    edx,0x2
  4164a3:	mov    rdi,rax
  4164a6:	call   42e112 <flatcc_json_printer_int64_enum_field@@Base>
  4164ab:	add    rsp,0x10
  4164af:	mov    rsi,QWORD PTR [rbp-0x10]
  4164b3:	mov    rax,QWORD PTR [rbp-0x8]
  4164b7:	mov    r9d,0x0
  4164bd:	mov    r8d,0x7
  4164c3:	lea    rcx,[rip+0x1ecdf]        # 4351a9 <_IO_stdin_used@@Base+0x1a9>
  4164ca:	mov    edx,0x3
  4164cf:	mov    rdi,rax
  4164d2:	call   42d491 <flatcc_json_printer_int32_field@@Base>
  4164d7:	mov    rsi,QWORD PTR [rbp-0x10]
  4164db:	mov    rax,QWORD PTR [rbp-0x8]
  4164df:	sub    rsp,0x8
  4164e3:	lea    rdx,[rip+0xfffffffffffff40b]        # 4158f5 <_start@@Base+0x10795>
  4164ea:	push   rdx
  4164eb:	mov    r9d,0x0
  4164f1:	mov    r8d,0x7
  4164f7:	lea    rcx,[rip+0x1ecb3]        # 4351b1 <_IO_stdin_used@@Base+0x1b1>
  4164fe:	mov    edx,0x4
  416503:	mov    rdi,rax
  416506:	call   42e112 <flatcc_json_printer_int64_enum_field@@Base>
  41650b:	add    rsp,0x10
  41650f:	mov    rsi,QWORD PTR [rbp-0x10]
  416513:	mov    rax,QWORD PTR [rbp-0x8]
  416517:	mov    r9d,0x0
  41651d:	mov    r8d,0x7
  416523:	lea    rcx,[rip+0x1ec8f]        # 4351b9 <_IO_stdin_used@@Base+0x1b9>
  41652a:	mov    edx,0x5
  41652f:	mov    rdi,rax
  416532:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  416537:	nop
  416538:	leave  
  416539:	ret    
  41653a:	push   rbp
  41653b:	mov    rbp,rsp
  41653e:	sub    rsp,0x10
  416542:	mov    QWORD PTR [rbp-0x8],rdi
  416546:	mov    QWORD PTR [rbp-0x10],rsi
  41654a:	mov    rsi,QWORD PTR [rbp-0x10]
  41654e:	mov    rax,QWORD PTR [rbp-0x8]
  416552:	mov    r8d,0x2
  416558:	lea    rcx,[rip+0x1ebf7]        # 435156 <_IO_stdin_used@@Base+0x156>
  41655f:	mov    edx,0x0
  416564:	mov    rdi,rax
  416567:	call   42cd91 <flatcc_json_printer_string_field@@Base>
  41656c:	mov    rsi,QWORD PTR [rbp-0x10]
  416570:	mov    rax,QWORD PTR [rbp-0x8]
  416574:	mov    r9d,0x0
  41657a:	mov    r8d,0x3
  416580:	lea    rcx,[rip+0x1ec3a]        # 4351c1 <_IO_stdin_used@@Base+0x1c1>
  416587:	mov    edx,0x1
  41658c:	mov    rdi,rax
  41658f:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  416594:	mov    rsi,QWORD PTR [rbp-0x10]
  416598:	mov    rax,QWORD PTR [rbp-0x8]
  41659c:	mov    r9d,0x0
  4165a2:	mov    r8d,0x5
  4165a8:	lea    rcx,[rip+0x1ec16]        # 4351c5 <_IO_stdin_used@@Base+0x1c5>
  4165af:	mov    edx,0x2
  4165b4:	mov    rdi,rax
  4165b7:	call   42cfd7 <flatcc_json_printer_uint16_field@@Base>
  4165bc:	nop
  4165bd:	leave  
  4165be:	ret    
  4165bf:	push   rbp
  4165c0:	mov    rbp,rsp
  4165c3:	sub    rsp,0x10
  4165c7:	mov    QWORD PTR [rbp-0x8],rdi
  4165cb:	mov    QWORD PTR [rbp-0x10],rsi
  4165cf:	mov    rsi,QWORD PTR [rbp-0x10]
  4165d3:	mov    rax,QWORD PTR [rbp-0x8]
  4165d7:	lea    r9,[rip+0x7f]        # 41665d <_start@@Base+0x114fd>
  4165de:	mov    r8d,0x6
  4165e4:	lea    rcx,[rip+0x1ebe0]        # 4351cb <_IO_stdin_used@@Base+0x1cb>
  4165eb:	mov    edx,0x0
  4165f0:	mov    rdi,rax
  4165f3:	call   43318a <flatcc_json_printer_table_field@@Base>
  4165f8:	mov    rsi,QWORD PTR [rbp-0x10]
  4165fc:	mov    rax,QWORD PTR [rbp-0x8]
  416600:	lea    r9,[rip+0xb91]        # 417198 <_start@@Base+0x12038>
  416607:	mov    r8d,0x5
  41660d:	lea    rcx,[rip+0x1ebbe]        # 4351d2 <_IO_stdin_used@@Base+0x1d2>
  416614:	mov    edx,0x1
  416619:	mov    rdi,rax
  41661c:	call   43318a <flatcc_json_printer_table_field@@Base>
  416621:	mov    rsi,QWORD PTR [rbp-0x10]
  416625:	mov    rax,QWORD PTR [rbp-0x8]
  416629:	sub    rsp,0x8
  41662d:	lea    rdx,[rip+0xfffffffffffff783]        # 415db7 <_start@@Base+0x10c57>
  416634:	push   rdx
  416635:	lea    r9,[rip+0xfffffffffffff6c5]        # 415d01 <_start@@Base+0x10ba1>
  41663c:	mov    r8d,0x7
  416642:	lea    rcx,[rip+0x1eb8f]        # 4351d8 <_IO_stdin_used@@Base+0x1d8>
  416649:	mov    edx,0x3
  41664e:	mov    rdi,rax
  416651:	call   432caf <flatcc_json_printer_union_vector_field@@Base>
  416656:	add    rsp,0x10
  41665a:	nop
  41665b:	leave  
  41665c:	ret    
  41665d:	push   rbp
  41665e:	mov    rbp,rsp
  416661:	sub    rsp,0x10
  416665:	mov    QWORD PTR [rbp-0x8],rdi
  416669:	mov    QWORD PTR [rbp-0x10],rsi
  41666d:	mov    rsi,QWORD PTR [rbp-0x10]
  416671:	mov    rax,QWORD PTR [rbp-0x8]
  416675:	lea    r9,[rip+0x6f]        # 4166eb <_start@@Base+0x1158b>
  41667c:	mov    r8d,0x15
  416682:	lea    rcx,[rip+0x1eb57]        # 4351e0 <_IO_stdin_used@@Base+0x1e0>
  416689:	mov    edx,0x0
  41668e:	mov    rdi,rax
  416691:	call   43318a <flatcc_json_printer_table_field@@Base>
  416696:	mov    rsi,QWORD PTR [rbp-0x10]
  41669a:	mov    rax,QWORD PTR [rbp-0x8]
  41669e:	lea    r9,[rip+0x1af]        # 416854 <_start@@Base+0x116f4>
  4166a5:	mov    r8d,0x16
  4166ab:	lea    rcx,[rip+0x1eb44]        # 4351f6 <_IO_stdin_used@@Base+0x1f6>
  4166b2:	mov    edx,0x1
  4166b7:	mov    rdi,rax
  4166ba:	call   43318a <flatcc_json_printer_table_field@@Base>
  4166bf:	mov    rsi,QWORD PTR [rbp-0x10]
  4166c3:	mov    rax,QWORD PTR [rbp-0x8]
  4166c7:	lea    r9,[rip+0x1e9]        # 4168b7 <_start@@Base+0x11757>
  4166ce:	mov    r8d,0x16
  4166d4:	lea    rcx,[rip+0x1eb32]        # 43520d <_IO_stdin_used@@Base+0x20d>
  4166db:	mov    edx,0x2
  4166e0:	mov    rdi,rax
  4166e3:	call   43318a <flatcc_json_printer_table_field@@Base>
  4166e8:	nop
  4166e9:	leave  
  4166ea:	ret    
  4166eb:	push   rbp
  4166ec:	mov    rbp,rsp
  4166ef:	sub    rsp,0x10
  4166f3:	mov    QWORD PTR [rbp-0x8],rdi
  4166f7:	mov    QWORD PTR [rbp-0x10],rsi
  4166fb:	mov    rsi,QWORD PTR [rbp-0x10]
  4166ff:	mov    rax,QWORD PTR [rbp-0x8]
  416703:	mov    r8d,0x4
  416709:	lea    rcx,[rip+0x1eb14]        # 435224 <_IO_stdin_used@@Base+0x224>
  416710:	mov    edx,0x0
  416715:	mov    rdi,rax
  416718:	call   42cd91 <flatcc_json_printer_string_field@@Base>
  41671d:	mov    rsi,QWORD PTR [rbp-0x10]
  416721:	mov    rax,QWORD PTR [rbp-0x8]
  416725:	mov    r9d,0x0
  41672b:	mov    r8d,0x9
  416731:	lea    rcx,[rip+0x1eaf1]        # 435229 <_IO_stdin_used@@Base+0x229>
  416738:	mov    edx,0x1
  41673d:	mov    rdi,rax
  416740:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  416745:	mov    rsi,QWORD PTR [rbp-0x10]
  416749:	mov    rax,QWORD PTR [rbp-0x8]
  41674d:	mov    r8d,0x4
  416753:	lea    rcx,[rip+0x1ead9]        # 435233 <_IO_stdin_used@@Base+0x233>
  41675a:	mov    edx,0x2
  41675f:	mov    rdi,rax
  416762:	call   42cd91 <flatcc_json_printer_string_field@@Base>
  416767:	mov    rsi,QWORD PTR [rbp-0x10]
  41676b:	mov    rax,QWORD PTR [rbp-0x8]
  41676f:	mov    r9d,0x0
  416775:	mov    r8d,0x8
  41677b:	lea    rcx,[rip+0x1eab6]        # 435238 <_IO_stdin_used@@Base+0x238>
  416782:	mov    edx,0x3
  416787:	mov    rdi,rax
  41678a:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  41678f:	mov    rsi,QWORD PTR [rbp-0x10]
  416793:	mov    rax,QWORD PTR [rbp-0x8]
  416797:	mov    r8d,0x4
  41679d:	lea    rcx,[rip+0x1ea9d]        # 435241 <_IO_stdin_used@@Base+0x241>
  4167a4:	mov    edx,0x4
  4167a9:	mov    rdi,rax
  4167ac:	call   42cd91 <flatcc_json_printer_string_field@@Base>
  4167b1:	mov    rsi,QWORD PTR [rbp-0x10]
  4167b5:	mov    rax,QWORD PTR [rbp-0x8]
  4167b9:	mov    r9d,0x0
  4167bf:	mov    r8d,0x8
  4167c5:	lea    rcx,[rip+0x1ea7a]        # 435246 <_IO_stdin_used@@Base+0x246>
  4167cc:	mov    edx,0x5
  4167d1:	mov    rdi,rax
  4167d4:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  4167d9:	mov    rsi,QWORD PTR [rbp-0x10]
  4167dd:	mov    rax,QWORD PTR [rbp-0x8]
  4167e1:	mov    r9d,0x0
  4167e7:	mov    r8d,0x9
  4167ed:	lea    rcx,[rip+0x1ea5b]        # 43524f <_IO_stdin_used@@Base+0x24f>
  4167f4:	mov    edx,0x6
  4167f9:	mov    rdi,rax
  4167fc:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  416801:	mov    rsi,QWORD PTR [rbp-0x10]
  416805:	mov    rax,QWORD PTR [rbp-0x8]
  416809:	mov    r9d,0x0
  41680f:	mov    r8d,0x8
  416815:	lea    rcx,[rip+0x1ea3d]        # 435259 <_IO_stdin_used@@Base+0x259>
  41681c:	mov    edx,0x7
  416821:	mov    rdi,rax
  416824:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  416829:	mov    rsi,QWORD PTR [rbp-0x10]
  41682d:	mov    rax,QWORD PTR [rbp-0x8]
  416831:	mov    r9d,0x0
  416837:	mov    r8d,0x9
  41683d:	lea    rcx,[rip+0x1ea1e]        # 435262 <_IO_stdin_used@@Base+0x262>
  416844:	mov    edx,0x8
  416849:	mov    rdi,rax
  41684c:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  416851:	nop
  416852:	leave  
  416853:	ret    
  416854:	push   rbp
  416855:	mov    rbp,rsp
  416858:	sub    rsp,0x10
  41685c:	mov    QWORD PTR [rbp-0x8],rdi
  416860:	mov    QWORD PTR [rbp-0x10],rsi
  416864:	mov    rsi,QWORD PTR [rbp-0x10]
  416868:	mov    rax,QWORD PTR [rbp-0x8]
  41686c:	mov    r9d,0x0
  416872:	mov    r8d,0xf
  416878:	lea    rcx,[rip+0x1e9ed]        # 43526c <_IO_stdin_used@@Base+0x26c>
  41687f:	mov    edx,0x0
  416884:	mov    rdi,rax
  416887:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  41688c:	mov    rsi,QWORD PTR [rbp-0x10]
  416890:	mov    rax,QWORD PTR [rbp-0x8]
  416894:	mov    r9d,0x0
  41689a:	mov    r8d,0x10
  4168a0:	lea    rcx,[rip+0x1e9d5]        # 43527c <_IO_stdin_used@@Base+0x27c>
  4168a7:	mov    edx,0x1
  4168ac:	mov    rdi,rax
  4168af:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  4168b4:	nop
  4168b5:	leave  
  4168b6:	ret    
  4168b7:	push   rbp
  4168b8:	mov    rbp,rsp
  4168bb:	sub    rsp,0x10
  4168bf:	mov    QWORD PTR [rbp-0x8],rdi
  4168c3:	mov    QWORD PTR [rbp-0x10],rsi
  4168c7:	mov    rsi,QWORD PTR [rbp-0x10]
  4168cb:	mov    rax,QWORD PTR [rbp-0x8]
  4168cf:	mov    r9d,0x0
  4168d5:	mov    r8d,0xf
  4168db:	lea    rcx,[rip+0x1e98a]        # 43526c <_IO_stdin_used@@Base+0x26c>
  4168e2:	mov    edx,0x0
  4168e7:	mov    rdi,rax
  4168ea:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  4168ef:	mov    rsi,QWORD PTR [rbp-0x10]
  4168f3:	mov    rax,QWORD PTR [rbp-0x8]
  4168f7:	mov    r9d,0x0
  4168fd:	mov    r8d,0x15
  416903:	lea    rcx,[rip+0x1e983]        # 43528d <_IO_stdin_used@@Base+0x28d>
  41690a:	mov    edx,0x1
  41690f:	mov    rdi,rax
  416912:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  416917:	nop
  416918:	leave  
  416919:	ret    
  41691a:	push   rbp
  41691b:	mov    rbp,rsp
  41691e:	sub    rsp,0x10
  416922:	mov    QWORD PTR [rbp-0x8],rdi
  416926:	mov    QWORD PTR [rbp-0x10],rsi
  41692a:	mov    rsi,QWORD PTR [rbp-0x10]
  41692e:	mov    rax,QWORD PTR [rbp-0x8]
  416932:	mov    r9d,0x0
  416938:	mov    r8d,0x4
  41693e:	lea    rcx,[rip+0x1e95e]        # 4352a3 <_IO_stdin_used@@Base+0x2a3>
  416945:	mov    edx,0x0
  41694a:	mov    rdi,rax
  41694d:	call   42ce2e <flatcc_json_printer_uint8_vector_base64_field@@Base>
  416952:	mov    rsi,QWORD PTR [rbp-0x10]
  416956:	mov    rax,QWORD PTR [rbp-0x8]
  41695a:	mov    r9d,0x1
  416960:	mov    r8d,0x7
  416966:	lea    rcx,[rip+0x1e93b]        # 4352a8 <_IO_stdin_used@@Base+0x2a8>
  41696d:	mov    edx,0x1
  416972:	mov    rdi,rax
  416975:	call   42ce2e <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41697a:	mov    rsi,QWORD PTR [rbp-0x10]
  41697e:	mov    rax,QWORD PTR [rbp-0x8]
  416982:	mov    r9d,0x0
  416988:	mov    r8d,0x6
  41698e:	lea    rcx,[rip+0x1e91b]        # 4352b0 <_IO_stdin_used@@Base+0x2b0>
  416995:	mov    edx,0x2
  41699a:	mov    rdi,rax
  41699d:	call   42ce2e <flatcc_json_printer_uint8_vector_base64_field@@Base>
  4169a2:	nop
  4169a3:	leave  
  4169a4:	ret    
  4169a5:	push   rbp
  4169a6:	mov    rbp,rsp
  4169a9:	sub    rsp,0x10
  4169ad:	mov    QWORD PTR [rbp-0x8],rdi
  4169b1:	mov    QWORD PTR [rbp-0x10],rsi
  4169b5:	mov    rsi,QWORD PTR [rbp-0x10]
  4169b9:	mov    rax,QWORD PTR [rbp-0x8]
  4169bd:	lea    r9,[rip+0xfffffffffffff714]        # 4160d8 <_start@@Base+0x10f78>
  4169c4:	mov    r8d,0x3
  4169ca:	lea    rcx,[rip+0x1e8e6]        # 4352b7 <_IO_stdin_used@@Base+0x2b7>
  4169d1:	mov    edx,0x0
  4169d6:	mov    rdi,rax
  4169d9:	call   43374a <flatcc_json_printer_struct_field@@Base>
  4169de:	mov    rsi,QWORD PTR [rbp-0x10]
  4169e2:	mov    rax,QWORD PTR [rbp-0x8]
  4169e6:	mov    r9d,0x96
  4169ec:	mov    r8d,0x4
  4169f2:	lea    rcx,[rip+0x1e8c2]        # 4352bb <_IO_stdin_used@@Base+0x2bb>
  4169f9:	mov    edx,0x1
  4169fe:	mov    rdi,rax
  416a01:	call   42d39c <flatcc_json_printer_int16_field@@Base>
  416a06:	mov    rsi,QWORD PTR [rbp-0x10]
  416a0a:	mov    rax,QWORD PTR [rbp-0x8]
  416a0e:	mov    r9d,0x64
  416a14:	mov    r8d,0x2
  416a1a:	lea    rcx,[rip+0x1e89f]        # 4352c0 <_IO_stdin_used@@Base+0x2c0>
  416a21:	mov    edx,0x2
  416a26:	mov    rdi,rax
  416a29:	call   42d39c <flatcc_json_printer_int16_field@@Base>
  416a2e:	mov    rsi,QWORD PTR [rbp-0x10]
  416a32:	mov    rax,QWORD PTR [rbp-0x8]
  416a36:	mov    r8d,0x4
  416a3c:	lea    rcx,[rip+0x1e880]        # 4352c3 <_IO_stdin_used@@Base+0x2c3>
  416a43:	mov    edx,0x3
  416a48:	mov    rdi,rax
  416a4b:	call   42cd91 <flatcc_json_printer_string_field@@Base>
  416a50:	mov    rsi,QWORD PTR [rbp-0x10]
  416a54:	mov    rax,QWORD PTR [rbp-0x8]
  416a58:	mov    r8d,0x9
  416a5e:	lea    rcx,[rip+0x1e863]        # 4352c8 <_IO_stdin_used@@Base+0x2c8>
  416a65:	mov    edx,0x5
  416a6a:	mov    rdi,rax
  416a6d:	call   42f324 <flatcc_json_printer_uint8_vector_field@@Base>
  416a72:	mov    rsi,QWORD PTR [rbp-0x10]
  416a76:	mov    rax,QWORD PTR [rbp-0x8]
  416a7a:	sub    rsp,0x8
  416a7e:	lea    rdx,[rip+0xfffffffffffff0a1]        # 415b26 <_start@@Base+0x109c6>
  416a85:	push   rdx
  416a86:	mov    r9d,0x8
  416a8c:	mov    r8d,0x5
  416a92:	lea    rcx,[rip+0x1e6e6]        # 43517f <_IO_stdin_used@@Base+0x17f>
  416a99:	mov    edx,0x6
  416a9e:	mov    rdi,rax
  416aa1:	call   42ddd2 <flatcc_json_printer_int8_enum_field@@Base>
  416aa6:	add    rsp,0x10
  416aaa:	mov    rsi,QWORD PTR [rbp-0x10]
  416aae:	mov    rax,QWORD PTR [rbp-0x8]
  416ab2:	sub    rsp,0x8
  416ab6:	lea    rdx,[rip+0xfffffffffffff2fa]        # 415db7 <_start@@Base+0x10c57>
  416abd:	push   rdx
  416abe:	lea    r9,[rip+0xfffffffffffff23c]        # 415d01 <_start@@Base+0x10ba1>
  416ac5:	mov    r8d,0x4
  416acb:	lea    rcx,[rip+0x1e800]        # 4352d2 <_IO_stdin_used@@Base+0x2d2>
  416ad2:	mov    edx,0x8
  416ad7:	mov    rdi,rax
  416ada:	call   43323e <flatcc_json_printer_union_field@@Base>
  416adf:	add    rsp,0x10
  416ae3:	mov    rsi,QWORD PTR [rbp-0x10]
  416ae7:	mov    rax,QWORD PTR [rbp-0x8]
  416aeb:	sub    rsp,0x8
  416aef:	lea    rdx,[rip+0xfffffffffffff572]        # 416068 <_start@@Base+0x10f08>
  416af6:	push   rdx
  416af7:	mov    r9d,0x4
  416afd:	mov    r8d,0x5
  416b03:	lea    rcx,[rip+0x1e7cd]        # 4352d7 <_IO_stdin_used@@Base+0x2d7>
  416b0a:	mov    edx,0x9
  416b0f:	mov    rdi,rax
  416b12:	call   4325ce <flatcc_json_printer_struct_vector_field@@Base>
  416b17:	add    rsp,0x10
  416b1b:	mov    rsi,QWORD PTR [rbp-0x10]
  416b1f:	mov    rax,QWORD PTR [rbp-0x8]
  416b23:	mov    r8d,0x11
  416b29:	lea    rcx,[rip+0x1e7ad]        # 4352dd <_IO_stdin_used@@Base+0x2dd>
  416b30:	mov    edx,0xa
  416b35:	mov    rdi,rax
  416b38:	call   4328db <flatcc_json_printer_string_vector_field@@Base>
  416b3d:	mov    rsi,QWORD PTR [rbp-0x10]
  416b41:	mov    rax,QWORD PTR [rbp-0x8]
  416b45:	lea    r9,[rip+0xfffffffffffffe59]        # 4169a5 <_start@@Base+0x11845>
  416b4c:	mov    r8d,0x11
  416b52:	lea    rcx,[rip+0x1e796]        # 4352ef <_IO_stdin_used@@Base+0x2ef>
  416b59:	mov    edx,0xb
  416b5e:	mov    rdi,rax
  416b61:	call   432af4 <flatcc_json_printer_table_vector_field@@Base>
  416b66:	mov    rsi,QWORD PTR [rbp-0x10]
  416b6a:	mov    rax,QWORD PTR [rbp-0x8]
  416b6e:	lea    r9,[rip+0xfffffffffffffe30]        # 4169a5 <_start@@Base+0x11845>
  416b75:	mov    r8d,0x5
  416b7b:	lea    rcx,[rip+0x1e77f]        # 435301 <_IO_stdin_used@@Base+0x301>
  416b82:	mov    edx,0xc
  416b87:	mov    rdi,rax
  416b8a:	call   43318a <flatcc_json_printer_table_field@@Base>
  416b8f:	mov    rsi,QWORD PTR [rbp-0x10]
  416b93:	mov    rax,QWORD PTR [rbp-0x8]
  416b97:	sub    rsp,0x8
  416b9b:	lea    rdx,[rip+0xfffffffffffffe03]        # 4169a5 <_start@@Base+0x11845>
  416ba2:	push   rdx
  416ba3:	mov    r9d,0x0
  416ba9:	mov    r8d,0x14
  416baf:	lea    rcx,[rip+0x1e751]        # 435307 <_IO_stdin_used@@Base+0x307>
  416bb6:	mov    edx,0xd
  416bbb:	mov    rdi,rax
  416bbe:	call   433d25 <flatcc_json_printer_table_as_nested_root@@Base>
  416bc3:	add    rsp,0x10
  416bc7:	mov    rsi,QWORD PTR [rbp-0x10]
  416bcb:	mov    rax,QWORD PTR [rbp-0x8]
  416bcf:	lea    r9,[rip+0xfffffffffffff964]        # 41653a <_start@@Base+0x113da>
  416bd6:	mov    r8d,0x9
  416bdc:	lea    rcx,[rip+0x1e739]        # 43531c <_IO_stdin_used@@Base+0x31c>
  416be3:	mov    edx,0xe
  416be8:	mov    rdi,rax
  416beb:	call   43318a <flatcc_json_printer_table_field@@Base>
  416bf0:	mov    rsi,QWORD PTR [rbp-0x10]
  416bf4:	mov    rax,QWORD PTR [rbp-0x8]
  416bf8:	mov    r9d,0x1
  416bfe:	mov    r8d,0x8
  416c04:	lea    rcx,[rip+0x1e71b]        # 435326 <_IO_stdin_used@@Base+0x326>
  416c0b:	mov    edx,0xf
  416c10:	mov    rdi,rax
  416c13:	call   42d670 <flatcc_json_printer_bool_field@@Base>
  416c18:	mov    rsi,QWORD PTR [rbp-0x10]
  416c1c:	mov    rax,QWORD PTR [rbp-0x8]
  416c20:	mov    r9d,0x0
  416c26:	mov    r8d,0x10
  416c2c:	lea    rcx,[rip+0x1e6fc]        # 43532f <_IO_stdin_used@@Base+0x32f>
  416c33:	mov    edx,0x10
  416c38:	mov    rdi,rax
  416c3b:	call   42d491 <flatcc_json_printer_int32_field@@Base>
  416c40:	mov    rsi,QWORD PTR [rbp-0x10]
  416c44:	mov    rax,QWORD PTR [rbp-0x8]
  416c48:	mov    r9d,0x0
  416c4e:	mov    r8d,0x10
  416c54:	lea    rcx,[rip+0x1e6e5]        # 435340 <_IO_stdin_used@@Base+0x340>
  416c5b:	mov    edx,0x11
  416c60:	mov    rdi,rax
  416c63:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  416c68:	mov    rsi,QWORD PTR [rbp-0x10]
  416c6c:	mov    rax,QWORD PTR [rbp-0x8]
  416c70:	mov    r9d,0x0
  416c76:	mov    r8d,0x10
  416c7c:	lea    rcx,[rip+0x1e6ce]        # 435351 <_IO_stdin_used@@Base+0x351>
  416c83:	mov    edx,0x12
  416c88:	mov    rdi,rax
  416c8b:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  416c90:	mov    rsi,QWORD PTR [rbp-0x10]
  416c94:	mov    rax,QWORD PTR [rbp-0x8]
  416c98:	mov    r9d,0x0
  416c9e:	mov    r8d,0x10
  416ca4:	lea    rcx,[rip+0x1e6b7]        # 435362 <_IO_stdin_used@@Base+0x362>
  416cab:	mov    edx,0x13
  416cb0:	mov    rdi,rax
  416cb3:	call   42d1b8 <flatcc_json_printer_uint64_field@@Base>
  416cb8:	mov    rsi,QWORD PTR [rbp-0x10]
  416cbc:	mov    rax,QWORD PTR [rbp-0x8]
  416cc0:	mov    r9d,0x0
  416cc6:	mov    r8d,0x11
  416ccc:	lea    rcx,[rip+0x1e6a0]        # 435373 <_IO_stdin_used@@Base+0x373>
  416cd3:	mov    edx,0x14
  416cd8:	mov    rdi,rax
  416cdb:	call   42d491 <flatcc_json_printer_int32_field@@Base>
  416ce0:	mov    rsi,QWORD PTR [rbp-0x10]
  416ce4:	mov    rax,QWORD PTR [rbp-0x8]
  416ce8:	mov    r9d,0x0
  416cee:	mov    r8d,0x11
  416cf4:	lea    rcx,[rip+0x1e68a]        # 435385 <_IO_stdin_used@@Base+0x385>
  416cfb:	mov    edx,0x15
  416d00:	mov    rdi,rax
  416d03:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  416d08:	mov    rsi,QWORD PTR [rbp-0x10]
  416d0c:	mov    rax,QWORD PTR [rbp-0x8]
  416d10:	mov    r9d,0x0
  416d16:	mov    r8d,0x11
  416d1c:	lea    rcx,[rip+0x1e674]        # 435397 <_IO_stdin_used@@Base+0x397>
  416d23:	mov    edx,0x16
  416d28:	mov    rdi,rax
  416d2b:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  416d30:	mov    rsi,QWORD PTR [rbp-0x10]
  416d34:	mov    rax,QWORD PTR [rbp-0x8]
  416d38:	mov    r9d,0x0
  416d3e:	mov    r8d,0x11
  416d44:	lea    rcx,[rip+0x1e65e]        # 4353a9 <_IO_stdin_used@@Base+0x3a9>
  416d4b:	mov    edx,0x17
  416d50:	mov    rdi,rax
  416d53:	call   42d1b8 <flatcc_json_printer_uint64_field@@Base>
  416d58:	mov    rsi,QWORD PTR [rbp-0x10]
  416d5c:	mov    rax,QWORD PTR [rbp-0x8]
  416d60:	mov    r8d,0x10
  416d66:	lea    rcx,[rip+0x1e64e]        # 4353bb <_IO_stdin_used@@Base+0x3bb>
  416d6d:	mov    edx,0x18
  416d72:	mov    rdi,rax
  416d75:	call   43069c <flatcc_json_printer_bool_vector_field@@Base>
  416d7a:	mov    rsi,QWORD PTR [rbp-0x10]
  416d7e:	mov    rax,QWORD PTR [rbp-0x8]
  416d82:	vmovss xmm0,DWORD PTR [rip+0x2149a]        # 438224 <_IO_stdin_used@@Base+0x3224>
  416d8a:	mov    r8d,0x5
  416d90:	lea    rcx,[rip+0x1e635]        # 4353cc <_IO_stdin_used@@Base+0x3cc>
  416d97:	mov    edx,0x19
  416d9c:	mov    rdi,rax
  416d9f:	call   42d761 <flatcc_json_printer_float_field@@Base>
  416da4:	mov    rsi,QWORD PTR [rbp-0x10]
  416da8:	mov    rax,QWORD PTR [rbp-0x8]
  416dac:	vmovss xmm0,DWORD PTR [rip+0x2146c]        # 438220 <_IO_stdin_used@@Base+0x3220>
  416db4:	mov    r8d,0x6
  416dba:	lea    rcx,[rip+0x1e611]        # 4353d2 <_IO_stdin_used@@Base+0x3d2>
  416dc1:	mov    edx,0x1a
  416dc6:	mov    rdi,rax
  416dc9:	call   42d761 <flatcc_json_printer_float_field@@Base>
  416dce:	mov    rsi,QWORD PTR [rbp-0x10]
  416dd2:	mov    rax,QWORD PTR [rbp-0x8]
  416dd6:	vxorps xmm0,xmm0,xmm0
  416dda:	mov    r8d,0x6
  416de0:	lea    rcx,[rip+0x1e5f2]        # 4353d9 <_IO_stdin_used@@Base+0x3d9>
  416de7:	mov    edx,0x1b
  416dec:	mov    rdi,rax
  416def:	call   42d761 <flatcc_json_printer_float_field@@Base>
  416df4:	mov    rsi,QWORD PTR [rbp-0x10]
  416df8:	mov    rax,QWORD PTR [rbp-0x8]
  416dfc:	mov    r8d,0x12
  416e02:	lea    rcx,[rip+0x1e5d7]        # 4353e0 <_IO_stdin_used@@Base+0x3e0>
  416e09:	mov    edx,0x1c
  416e0e:	mov    rdi,rax
  416e11:	call   4328db <flatcc_json_printer_string_vector_field@@Base>
  416e16:	mov    rsi,QWORD PTR [rbp-0x10]
  416e1a:	mov    rax,QWORD PTR [rbp-0x8]
  416e1e:	sub    rsp,0x8
  416e22:	lea    rdx,[rip+0xfffffffffffff3cc]        # 4161f5 <_start@@Base+0x11095>
  416e29:	push   rdx
  416e2a:	mov    r9d,0x8
  416e30:	mov    r8d,0x17
  416e36:	lea    rcx,[rip+0x1e5b6]        # 4353f3 <_IO_stdin_used@@Base+0x3f3>
  416e3d:	mov    edx,0x1d
  416e42:	mov    rdi,rax
  416e45:	call   4325ce <flatcc_json_printer_struct_vector_field@@Base>
  416e4a:	add    rsp,0x10
  416e4e:	mov    rsi,QWORD PTR [rbp-0x10]
  416e52:	mov    rax,QWORD PTR [rbp-0x8]
  416e56:	mov    r8d,0x4
  416e5c:	lea    rcx,[rip+0x1e5a8]        # 43540b <_IO_stdin_used@@Base+0x40b>
  416e63:	mov    edx,0x1e
  416e68:	mov    rdi,rax
  416e6b:	call   42f324 <flatcc_json_printer_uint8_vector_field@@Base>
  416e70:	mov    rsi,QWORD PTR [rbp-0x10]
  416e74:	mov    rax,QWORD PTR [rbp-0x8]
  416e78:	sub    rsp,0x8
  416e7c:	lea    rdx,[rip+0xfffffffffffff1e5]        # 416068 <_start@@Base+0x10f08>
  416e83:	push   rdx
  416e84:	mov    r9d,0x4
  416e8a:	mov    r8d,0x5
  416e90:	lea    rcx,[rip+0x1e579]        # 435410 <_IO_stdin_used@@Base+0x410>
  416e97:	mov    edx,0x1f
  416e9c:	mov    rdi,rax
  416e9f:	call   4325ce <flatcc_json_printer_struct_vector_field@@Base>
  416ea4:	add    rsp,0x10
  416ea8:	mov    rsi,QWORD PTR [rbp-0x10]
  416eac:	mov    rax,QWORD PTR [rbp-0x8]
  416eb0:	mov    r8d,0xf
  416eb6:	lea    rcx,[rip+0x1e559]        # 435416 <_IO_stdin_used@@Base+0x416>
  416ebd:	mov    edx,0x20
  416ec2:	mov    rdi,rax
  416ec5:	call   43042e <flatcc_json_printer_int64_vector_field@@Base>
  416eca:	mov    rsi,QWORD PTR [rbp-0x10]
  416ece:	mov    rax,QWORD PTR [rbp-0x8]
  416ed2:	mov    r8d,0x11
  416ed8:	lea    rcx,[rip+0x1e547]        # 435426 <_IO_stdin_used@@Base+0x426>
  416edf:	mov    edx,0x21
  416ee4:	mov    rdi,rax
  416ee7:	call   430b7e <flatcc_json_printer_double_vector_field@@Base>
  416eec:	mov    rsi,QWORD PTR [rbp-0x10]
  416ef0:	mov    rax,QWORD PTR [rbp-0x8]
  416ef4:	lea    r9,[rip+0xfffffffffffff3cf]        # 4162ca <_start@@Base+0x1116a>
  416efb:	mov    r8d,0x15
  416f01:	lea    rcx,[rip+0x1e530]        # 435438 <_IO_stdin_used@@Base+0x438>
  416f08:	mov    edx,0x22
  416f0d:	mov    rdi,rax
  416f10:	call   43318a <flatcc_json_printer_table_field@@Base>
  416f15:	mov    rsi,QWORD PTR [rbp-0x10]
  416f19:	mov    rax,QWORD PTR [rbp-0x8]
  416f1d:	lea    r9,[rip+0xfffffffffffff9f6]        # 41691a <_start@@Base+0x117ba>
  416f24:	mov    r8d,0xa
  416f2a:	lea    rcx,[rip+0x1e51d]        # 43544e <_IO_stdin_used@@Base+0x44e>
  416f31:	mov    edx,0x23
  416f36:	mov    rdi,rax
  416f39:	call   43318a <flatcc_json_printer_table_field@@Base>
  416f3e:	nop
  416f3f:	leave  
  416f40:	ret    
  416f41:	push   rbp
  416f42:	mov    rbp,rsp
  416f45:	sub    rsp,0x20
  416f49:	mov    QWORD PTR [rbp-0x8],rdi
  416f4d:	mov    QWORD PTR [rbp-0x10],rsi
  416f51:	mov    QWORD PTR [rbp-0x18],rdx
  416f55:	mov    QWORD PTR [rbp-0x20],rcx
  416f59:	mov    rcx,QWORD PTR [rbp-0x20]
  416f5d:	mov    rdx,QWORD PTR [rbp-0x18]
  416f61:	mov    rsi,QWORD PTR [rbp-0x10]
  416f65:	mov    rax,QWORD PTR [rbp-0x8]
  416f69:	lea    r8,[rip+0xfffffffffffffa35]        # 4169a5 <_start@@Base+0x11845>
  416f70:	mov    rdi,rax
  416f73:	call   433aca <flatcc_json_printer_table_as_root@@Base>
  416f78:	leave  
  416f79:	ret    
  416f7a:	push   rbp
  416f7b:	mov    rbp,rsp
  416f7e:	sub    rsp,0x10
  416f82:	mov    QWORD PTR [rbp-0x8],rdi
  416f86:	mov    QWORD PTR [rbp-0x10],rsi
  416f8a:	mov    rsi,QWORD PTR [rbp-0x10]
  416f8e:	mov    rax,QWORD PTR [rbp-0x8]
  416f92:	mov    r9d,0x0
  416f98:	mov    r8d,0x2
  416f9e:	lea    rcx,[rip+0x1e4b4]        # 435459 <_IO_stdin_used@@Base+0x459>
  416fa5:	mov    edx,0x0
  416faa:	mov    rdi,rax
  416fad:	call   42d2ab <flatcc_json_printer_int8_field@@Base>
  416fb2:	mov    rsi,QWORD PTR [rbp-0x10]
  416fb6:	mov    rax,QWORD PTR [rbp-0x8]
  416fba:	mov    r9d,0x0
  416fc0:	mov    r8d,0x2
  416fc6:	lea    rcx,[rip+0x1e48f]        # 43545c <_IO_stdin_used@@Base+0x45c>
  416fcd:	mov    edx,0x1
  416fd2:	mov    rdi,rax
  416fd5:	call   42cee6 <flatcc_json_printer_uint8_field@@Base>
  416fda:	mov    rsi,QWORD PTR [rbp-0x10]
  416fde:	mov    rax,QWORD PTR [rbp-0x8]
  416fe2:	mov    r9d,0x0
  416fe8:	mov    r8d,0x3
  416fee:	lea    rcx,[rip+0x1e46a]        # 43545f <_IO_stdin_used@@Base+0x45f>
  416ff5:	mov    edx,0x2
  416ffa:	mov    rdi,rax
  416ffd:	call   42d39c <flatcc_json_printer_int16_field@@Base>
  417002:	mov    rsi,QWORD PTR [rbp-0x10]
  417006:	mov    rax,QWORD PTR [rbp-0x8]
  41700a:	mov    r9d,0x0
  417010:	mov    r8d,0x3
  417016:	lea    rcx,[rip+0x1e446]        # 435463 <_IO_stdin_used@@Base+0x463>
  41701d:	mov    edx,0x3
  417022:	mov    rdi,rax
  417025:	call   42cfd7 <flatcc_json_printer_uint16_field@@Base>
  41702a:	mov    rsi,QWORD PTR [rbp-0x10]
  41702e:	mov    rax,QWORD PTR [rbp-0x8]
  417032:	mov    r9d,0x0
  417038:	mov    r8d,0x3
  41703e:	lea    rcx,[rip+0x1e422]        # 435467 <_IO_stdin_used@@Base+0x467>
  417045:	mov    edx,0x4
  41704a:	mov    rdi,rax
  41704d:	call   42d491 <flatcc_json_printer_int32_field@@Base>
  417052:	mov    rsi,QWORD PTR [rbp-0x10]
  417056:	mov    rax,QWORD PTR [rbp-0x8]
  41705a:	mov    r9d,0x0
  417060:	mov    r8d,0x3
  417066:	lea    rcx,[rip+0x1e3fe]        # 43546b <_IO_stdin_used@@Base+0x46b>
  41706d:	mov    edx,0x5
  417072:	mov    rdi,rax
  417075:	call   42d0cc <flatcc_json_printer_uint32_field@@Base>
  41707a:	mov    rsi,QWORD PTR [rbp-0x10]
  41707e:	mov    rax,QWORD PTR [rbp-0x8]
  417082:	mov    r9d,0x0
  417088:	mov    r8d,0x3
  41708e:	lea    rcx,[rip+0x1e3da]        # 43546f <_IO_stdin_used@@Base+0x46f>
  417095:	mov    edx,0x6
  41709a:	mov    rdi,rax
  41709d:	call   42d57d <flatcc_json_printer_int64_field@@Base>
  4170a2:	mov    rsi,QWORD PTR [rbp-0x10]
  4170a6:	mov    rax,QWORD PTR [rbp-0x8]
  4170aa:	mov    r9d,0x0
  4170b0:	mov    r8d,0x3
  4170b6:	lea    rcx,[rip+0x1e3b6]        # 435473 <_IO_stdin_used@@Base+0x473>
  4170bd:	mov    edx,0x7
  4170c2:	mov    rdi,rax
  4170c5:	call   42d1b8 <flatcc_json_printer_uint64_field@@Base>
  4170ca:	mov    rsi,QWORD PTR [rbp-0x10]
  4170ce:	mov    rax,QWORD PTR [rbp-0x8]
  4170d2:	vxorps xmm0,xmm0,xmm0
  4170d6:	mov    r8d,0x3
  4170dc:	lea    rcx,[rip+0x1e394]        # 435477 <_IO_stdin_used@@Base+0x477>
  4170e3:	mov    edx,0x8
  4170e8:	mov    rdi,rax
  4170eb:	call   42d761 <flatcc_json_printer_float_field@@Base>
  4170f0:	mov    rsi,QWORD PTR [rbp-0x10]
  4170f4:	mov    rax,QWORD PTR [rbp-0x8]
  4170f8:	vxorpd xmm0,xmm0,xmm0
  4170fc:	mov    r8d,0x3
  417102:	lea    rcx,[rip+0x1e372]        # 43547b <_IO_stdin_used@@Base+0x47b>
  417109:	mov    edx,0x9
  41710e:	mov    rdi,rax
  417111:	call   42d866 <flatcc_json_printer_double_field@@Base>
  417116:	mov    rsi,QWORD PTR [rbp-0x10]
  41711a:	mov    rax,QWORD PTR [rbp-0x8]
  41711e:	mov    r8d,0x2
  417124:	lea    rcx,[rip+0x1e354]        # 43547f <_IO_stdin_used@@Base+0x47f>
  41712b:	mov    edx,0xa
  417130:	mov    rdi,rax
  417133:	call   42fce2 <flatcc_json_printer_int8_vector_field@@Base>
  417138:	mov    rsi,QWORD PTR [rbp-0x10]
  41713c:	mov    rax,QWORD PTR [rbp-0x8]
  417140:	mov    r8d,0x4
  417146:	lea    rcx,[rip+0x1e335]        # 435482 <_IO_stdin_used@@Base+0x482>
  41714d:	mov    edx,0xb
  417152:	mov    rdi,rax
  417155:	call   430b7e <flatcc_json_printer_double_vector_field@@Base>
  41715a:	nop
  41715b:	leave  
  41715c:	ret    
  41715d:	push   rbp
  41715e:	mov    rbp,rsp
  417161:	sub    rsp,0x10
  417165:	mov    QWORD PTR [rbp-0x8],rdi
  417169:	mov    QWORD PTR [rbp-0x10],rsi
  41716d:	mov    rsi,QWORD PTR [rbp-0x10]
  417171:	mov    rax,QWORD PTR [rbp-0x8]
  417175:	mov    r9d,0x0
  41717b:	mov    r8d,0x13
  417181:	lea    rcx,[rip+0x1e2ff]        # 435487 <_IO_stdin_used@@Base+0x487>
  417188:	mov    edx,0x0
  41718d:	mov    rdi,rax
  417190:	call   42d491 <flatcc_json_printer_int32_field@@Base>
  417195:	nop
  417196:	leave  
  417197:	ret    
  417198:	push   rbp
  417199:	mov    rbp,rsp
  41719c:	sub    rsp,0x10
  4171a0:	mov    QWORD PTR [rbp-0x8],rdi
  4171a4:	mov    QWORD PTR [rbp-0x10],rsi
  4171a8:	mov    rsi,QWORD PTR [rbp-0x10]
  4171ac:	mov    rax,QWORD PTR [rbp-0x8]
  4171b0:	sub    rsp,0x8
  4171b4:	lea    rdx,[rip+0xffffffffffffedb0]        # 415f6b <_start@@Base+0x10e0b>
  4171bb:	push   rdx
  4171bc:	lea    r9,[rip+0xffffffffffffec9e]        # 415e61 <_start@@Base+0x10d01>
  4171c3:	mov    r8d,0xe
  4171c9:	lea    rcx,[rip+0x1e2cb]        # 43549b <_IO_stdin_used@@Base+0x49b>
  4171d0:	mov    edx,0x1
  4171d5:	mov    rdi,rax
  4171d8:	call   43323e <flatcc_json_printer_union_field@@Base>
  4171dd:	add    rsp,0x10
  4171e1:	mov    rsi,QWORD PTR [rbp-0x10]
  4171e5:	mov    rax,QWORD PTR [rbp-0x8]
  4171e9:	sub    rsp,0x8
  4171ed:	lea    rdx,[rip+0xffffffffffffed77]        # 415f6b <_start@@Base+0x10e0b>
  4171f4:	push   rdx
  4171f5:	lea    r9,[rip+0xffffffffffffec65]        # 415e61 <_start@@Base+0x10d01>
  4171fc:	mov    r8d,0xa
  417202:	lea    rcx,[rip+0x1e2a1]        # 4354aa <_IO_stdin_used@@Base+0x4aa>
  417209:	mov    edx,0x3
  41720e:	mov    rdi,rax
  417211:	call   43323e <flatcc_json_printer_union_field@@Base>
  417216:	add    rsp,0x10
  41721a:	mov    rsi,QWORD PTR [rbp-0x10]
  41721e:	mov    rax,QWORD PTR [rbp-0x8]
  417222:	sub    rsp,0x8
  417226:	lea    rdx,[rip+0xffffffffffffed3e]        # 415f6b <_start@@Base+0x10e0b>
  41722d:	push   rdx
  41722e:	lea    r9,[rip+0xffffffffffffec2c]        # 415e61 <_start@@Base+0x10d01>
  417235:	mov    r8d,0x9
  41723b:	lea    rcx,[rip+0x1e273]        # 4354b5 <_IO_stdin_used@@Base+0x4b5>
  417242:	mov    edx,0x5
  417247:	mov    rdi,rax
  41724a:	call   43323e <flatcc_json_printer_union_field@@Base>
  41724f:	add    rsp,0x10
  417253:	mov    rsi,QWORD PTR [rbp-0x10]
  417257:	mov    rax,QWORD PTR [rbp-0x8]
  41725b:	sub    rsp,0x8
  41725f:	lea    rdx,[rip+0xffffffffffffed05]        # 415f6b <_start@@Base+0x10e0b>
  417266:	push   rdx
  417267:	lea    r9,[rip+0xffffffffffffebf3]        # 415e61 <_start@@Base+0x10d01>
  41726e:	mov    r8d,0x5
  417274:	lea    rcx,[rip+0x1e244]        # 4354bf <_IO_stdin_used@@Base+0x4bf>
  41727b:	mov    edx,0x7
  417280:	mov    rdi,rax
  417283:	call   43323e <flatcc_json_printer_union_field@@Base>
  417288:	add    rsp,0x10
  41728c:	mov    rsi,QWORD PTR [rbp-0x10]
  417290:	mov    rax,QWORD PTR [rbp-0x8]
  417294:	sub    rsp,0x8
  417298:	lea    rdx,[rip+0xffffffffffffeccc]        # 415f6b <_start@@Base+0x10e0b>
  41729f:	push   rdx
  4172a0:	lea    r9,[rip+0xffffffffffffebba]        # 415e61 <_start@@Base+0x10d01>
  4172a7:	mov    r8d,0xa
  4172ad:	lea    rcx,[rip+0x1e211]        # 4354c5 <_IO_stdin_used@@Base+0x4c5>
  4172b4:	mov    edx,0x9
  4172b9:	mov    rdi,rax
  4172bc:	call   432caf <flatcc_json_printer_union_vector_field@@Base>
  4172c1:	add    rsp,0x10
  4172c5:	nop
  4172c6:	leave  
  4172c7:	ret    
  4172c8:	push   rbp
  4172c9:	mov    rbp,rsp
  4172cc:	add    rsp,0xffffffffffffff80
  4172d0:	mov    QWORD PTR [rbp-0x68],rdi
  4172d4:	mov    QWORD PTR [rbp-0x70],rsi
  4172d8:	mov    QWORD PTR [rbp-0x78],rdx
  4172dc:	mov    rax,QWORD PTR fs:0x28
  4172e5:	mov    QWORD PTR [rbp-0x8],rax
  4172e9:	xor    eax,eax
  4172eb:	cmp    QWORD PTR [rbp-0x68],0x0
  4172f0:	jne    41730b <_start@@Base+0x121ab>
  4172f2:	lea    rax,[rbp-0x60]
  4172f6:	mov    QWORD PTR [rbp-0x68],rax
  4172fa:	mov    rax,QWORD PTR [rbp-0x68]
  4172fe:	mov    esi,0x0
  417303:	mov    rdi,rax
  417306:	call   433f6c <flatcc_json_printer_init@@Base>
  41730b:	mov    rdx,QWORD PTR [rbp-0x78]
  41730f:	mov    rsi,QWORD PTR [rbp-0x70]
  417313:	mov    rax,QWORD PTR [rbp-0x68]
  417317:	lea    rcx,[rip+0x1dd52]        # 435070 <_IO_stdin_used@@Base+0x70>
  41731e:	mov    rdi,rax
  417321:	call   416f41 <_start@@Base+0x11de1>
  417326:	mov    rcx,QWORD PTR [rbp-0x8]
  41732a:	xor    rcx,QWORD PTR fs:0x28
  417333:	je     41733a <_start@@Base+0x121da>
  417335:	call   405070 <__stack_chk_fail@plt>
  41733a:	leave  
  41733b:	ret    
  41733c:	push   rbp
  41733d:	mov    rbp,rsp
  417340:	sub    rsp,0x10
  417344:	mov    QWORD PTR [rbp-0x8],rdi
  417348:	mov    rax,QWORD PTR [rbp-0x8]
  41734c:	movzx  eax,BYTE PTR [rax+0x10]
  417350:	movzx  eax,al
  417353:	cmp    eax,0x1
  417356:	jne    41736d <_start@@Base+0x1220d>
  417358:	mov    rax,QWORD PTR [rbp-0x8]
  41735c:	lea    rsi,[rip+0x163]        # 4174c6 <_start@@Base+0x12366>
  417363:	mov    rdi,rax
  417366:	call   42134b <flatcc_verify_union_table@@Base>
  41736b:	jmp    417372 <_start@@Base+0x12212>
  41736d:	mov    eax,0x0
  417372:	leave  
  417373:	ret    
  417374:	push   rbp
  417375:	mov    rbp,rsp
  417378:	sub    rsp,0x10
  41737c:	mov    QWORD PTR [rbp-0x8],rdi
  417380:	mov    rax,QWORD PTR [rbp-0x8]
  417384:	movzx  eax,BYTE PTR [rax+0x10]
  417388:	movzx  eax,al
  41738b:	cmp    eax,0x2
  41738e:	je     4173bd <_start@@Base+0x1225d>
  417390:	cmp    eax,0x2
  417393:	jg     41739c <_start@@Base+0x1223c>
  417395:	cmp    eax,0x1
  417398:	je     4173a8 <_start@@Base+0x12248>
  41739a:	jmp    4173fc <_start@@Base+0x1229c>
  41739c:	cmp    eax,0x3
  41739f:	je     4173d2 <_start@@Base+0x12272>
  4173a1:	cmp    eax,0x4
  4173a4:	je     4173e7 <_start@@Base+0x12287>
  4173a6:	jmp    4173fc <_start@@Base+0x1229c>
  4173a8:	mov    rax,QWORD PTR [rbp-0x8]
  4173ac:	lea    rsi,[rip+0x7fd]        # 417bb0 <_start@@Base+0x12a50>
  4173b3:	mov    rdi,rax
  4173b6:	call   42134b <flatcc_verify_union_table@@Base>
  4173bb:	jmp    417401 <_start@@Base+0x122a1>
  4173bd:	mov    rax,QWORD PTR [rbp-0x8]
  4173c1:	lea    rsi,[rip+0x167]        # 41752f <_start@@Base+0x123cf>
  4173c8:	mov    rdi,rax
  4173cb:	call   42134b <flatcc_verify_union_table@@Base>
  4173d0:	jmp    417401 <_start@@Base+0x122a1>
  4173d2:	mov    rax,QWORD PTR [rbp-0x8]
  4173d6:	lea    rsi,[rip+0xf8]        # 4174d5 <_start@@Base+0x12375>
  4173dd:	mov    rdi,rax
  4173e0:	call   42134b <flatcc_verify_union_table@@Base>
  4173e5:	jmp    417401 <_start@@Base+0x122a1>
  4173e7:	mov    rax,QWORD PTR [rbp-0x8]
  4173eb:	lea    rsi,[rip+0x392]        # 417784 <_start@@Base+0x12624>
  4173f2:	mov    rdi,rax
  4173f5:	call   42134b <flatcc_verify_union_table@@Base>
  4173fa:	jmp    417401 <_start@@Base+0x122a1>
  4173fc:	mov    eax,0x0
  417401:	leave  
  417402:	ret    
  417403:	push   rbp
  417404:	mov    rbp,rsp
  417407:	sub    rsp,0x10
  41740b:	mov    QWORD PTR [rbp-0x8],rdi
  41740f:	mov    rax,QWORD PTR [rbp-0x8]
  417413:	movzx  eax,BYTE PTR [rax+0x10]
  417417:	movzx  eax,al
  41741a:	cmp    eax,0x9
  41741d:	je     417473 <_start@@Base+0x12313>
  41741f:	cmp    eax,0x9
  417422:	jg     417433 <_start@@Base+0x122d3>
  417424:	cmp    eax,0x2
  417427:	je     417446 <_start@@Base+0x122e6>
  417429:	cmp    eax,0x8
  41742c:	je     41745b <_start@@Base+0x122fb>
  41742e:	jmp    4174bf <_start@@Base+0x1235f>
  417433:	cmp    eax,0xb
  417436:	je     4174a3 <_start@@Base+0x12343>
  417438:	cmp    eax,0xb
  41743b:	jl     41748b <_start@@Base+0x1232b>
  41743d:	cmp    eax,0xff
  417442:	je     4174b1 <_start@@Base+0x12351>
  417444:	jmp    4174bf <_start@@Base+0x1235f>
  417446:	mov    rax,QWORD PTR [rbp-0x8]
  41744a:	lea    rsi,[rip+0xfdd]        # 41842e <_start@@Base+0x132ce>
  417451:	mov    rdi,rax
  417454:	call   42134b <flatcc_verify_union_table@@Base>
  417459:	jmp    4174c4 <_start@@Base+0x12364>
  41745b:	mov    rax,QWORD PTR [rbp-0x8]
  41745f:	mov    edx,0x2
  417464:	mov    esi,0x2
  417469:	mov    rdi,rax
  41746c:	call   421392 <flatcc_verify_union_struct@@Base>
  417471:	jmp    4174c4 <_start@@Base+0x12364>
  417473:	mov    rax,QWORD PTR [rbp-0x8]
  417477:	mov    edx,0x4
  41747c:	mov    esi,0x4
  417481:	mov    rdi,rax
  417484:	call   421392 <flatcc_verify_union_struct@@Base>
  417489:	jmp    4174c4 <_start@@Base+0x12364>
  41748b:	mov    rax,QWORD PTR [rbp-0x8]
  41748f:	mov    edx,0x4
  417494:	mov    esi,0x4
  417499:	mov    rdi,rax
  41749c:	call   421392 <flatcc_verify_union_struct@@Base>
  4174a1:	jmp    4174c4 <_start@@Base+0x12364>
  4174a3:	mov    rax,QWORD PTR [rbp-0x8]
  4174a7:	mov    rdi,rax
  4174aa:	call   4213d5 <flatcc_verify_union_string@@Base>
  4174af:	jmp    4174c4 <_start@@Base+0x12364>
  4174b1:	mov    rax,QWORD PTR [rbp-0x8]
  4174b5:	mov    rdi,rax
  4174b8:	call   4213d5 <flatcc_verify_union_string@@Base>
  4174bd:	jmp    4174c4 <_start@@Base+0x12364>
  4174bf:	mov    eax,0x0
  4174c4:	leave  
  4174c5:	ret    
  4174c6:	push   rbp
  4174c7:	mov    rbp,rsp
  4174ca:	mov    QWORD PTR [rbp-0x8],rdi
  4174ce:	mov    eax,0x0
  4174d3:	pop    rbp
  4174d4:	ret    
  4174d5:	push   rbp
  4174d6:	mov    rbp,rsp
  4174d9:	mov    QWORD PTR [rbp-0x8],rdi
  4174dd:	mov    eax,0x0
  4174e2:	pop    rbp
  4174e3:	ret    
  4174e4:	push   rbp
  4174e5:	mov    rbp,rsp
  4174e8:	mov    QWORD PTR [rbp-0x8],rdi
  4174ec:	mov    eax,0x0
  4174f1:	pop    rbp
  4174f2:	ret    
  4174f3:	push   rbp
  4174f4:	mov    rbp,rsp
  4174f7:	sub    rsp,0x20
  4174fb:	mov    QWORD PTR [rbp-0x18],rdi
  4174ff:	mov    rax,QWORD PTR [rbp-0x18]
  417503:	mov    ecx,0x1
  417508:	mov    edx,0x0
  41750d:	mov    esi,0x0
  417512:	mov    rdi,rax
  417515:	call   420f82 <flatcc_verify_field@@Base>
  41751a:	mov    DWORD PTR [rbp-0x4],eax
  41751d:	cmp    DWORD PTR [rbp-0x4],0x0
  417521:	je     417528 <_start@@Base+0x123c8>
  417523:	mov    eax,DWORD PTR [rbp-0x4]
  417526:	jmp    41752d <_start@@Base+0x123cd>
  417528:	mov    eax,0x0
  41752d:	leave  
  41752e:	ret    
  41752f:	push   rbp
  417530:	mov    rbp,rsp
  417533:	sub    rsp,0x20
  417537:	mov    QWORD PTR [rbp-0x18],rdi
  41753b:	mov    rax,QWORD PTR [rbp-0x18]
  41753f:	mov    ecx,0x1
  417544:	mov    edx,0x1
  417549:	mov    esi,0x0
  41754e:	mov    rdi,rax
  417551:	call   420f82 <flatcc_verify_field@@Base>
  417556:	mov    DWORD PTR [rbp-0x4],eax
  417559:	cmp    DWORD PTR [rbp-0x4],0x0
  41755d:	je     417567 <_start@@Base+0x12407>
  41755f:	mov    eax,DWORD PTR [rbp-0x4]
  417562:	jmp    4175e7 <_start@@Base+0x12487>
  417567:	mov    rax,QWORD PTR [rbp-0x18]
  41756b:	mov    ecx,0x1
  417570:	mov    edx,0x1
  417575:	mov    esi,0x1
  41757a:	mov    rdi,rax
  41757d:	call   420f82 <flatcc_verify_field@@Base>
  417582:	mov    DWORD PTR [rbp-0x4],eax
  417585:	cmp    DWORD PTR [rbp-0x4],0x0
  417589:	je     417590 <_start@@Base+0x12430>
  41758b:	mov    eax,DWORD PTR [rbp-0x4]
  41758e:	jmp    4175e7 <_start@@Base+0x12487>
  417590:	mov    rax,QWORD PTR [rbp-0x18]
  417594:	mov    ecx,0x1
  417599:	mov    edx,0x1
  41759e:	mov    esi,0x2
  4175a3:	mov    rdi,rax
  4175a6:	call   420f82 <flatcc_verify_field@@Base>
  4175ab:	mov    DWORD PTR [rbp-0x4],eax
  4175ae:	cmp    DWORD PTR [rbp-0x4],0x0
  4175b2:	je     4175b9 <_start@@Base+0x12459>
  4175b4:	mov    eax,DWORD PTR [rbp-0x4]
  4175b7:	jmp    4175e7 <_start@@Base+0x12487>
  4175b9:	mov    rax,QWORD PTR [rbp-0x18]
  4175bd:	mov    ecx,0x1
  4175c2:	mov    edx,0x1
  4175c7:	mov    esi,0x3
  4175cc:	mov    rdi,rax
  4175cf:	call   420f82 <flatcc_verify_field@@Base>
  4175d4:	mov    DWORD PTR [rbp-0x4],eax
  4175d7:	cmp    DWORD PTR [rbp-0x4],0x0
  4175db:	je     4175e2 <_start@@Base+0x12482>
  4175dd:	mov    eax,DWORD PTR [rbp-0x4]
  4175e0:	jmp    4175e7 <_start@@Base+0x12487>
  4175e2:	mov    eax,0x0
  4175e7:	leave  
  4175e8:	ret    
  4175e9:	push   rbp
  4175ea:	mov    rbp,rsp
  4175ed:	sub    rsp,0x20
  4175f1:	mov    QWORD PTR [rbp-0x18],rdi
  4175f5:	mov    rax,QWORD PTR [rbp-0x18]
  4175f9:	mov    ecx,0x1
  4175fe:	mov    edx,0x0
  417603:	mov    esi,0x0
  417608:	mov    rdi,rax
  41760b:	call   420f82 <flatcc_verify_field@@Base>
  417610:	mov    DWORD PTR [rbp-0x4],eax
  417613:	cmp    DWORD PTR [rbp-0x4],0x0
  417617:	je     417621 <_start@@Base+0x124c1>
  417619:	mov    eax,DWORD PTR [rbp-0x4]
  41761c:	jmp    4176f9 <_start@@Base+0x12599>
  417621:	mov    rax,QWORD PTR [rbp-0x18]
  417625:	mov    ecx,0x8
  41762a:	mov    edx,0x8
  41762f:	mov    esi,0x1
  417634:	mov    rdi,rax
  417637:	call   420f82 <flatcc_verify_field@@Base>
  41763c:	mov    DWORD PTR [rbp-0x4],eax
  41763f:	cmp    DWORD PTR [rbp-0x4],0x0
  417643:	je     41764d <_start@@Base+0x124ed>
  417645:	mov    eax,DWORD PTR [rbp-0x4]
  417648:	jmp    4176f9 <_start@@Base+0x12599>
  41764d:	mov    rax,QWORD PTR [rbp-0x18]
  417651:	mov    ecx,0x8
  417656:	mov    edx,0x8
  41765b:	mov    esi,0x2
  417660:	mov    rdi,rax
  417663:	call   420f82 <flatcc_verify_field@@Base>
  417668:	mov    DWORD PTR [rbp-0x4],eax
  41766b:	cmp    DWORD PTR [rbp-0x4],0x0
  41766f:	je     417679 <_start@@Base+0x12519>
  417671:	mov    eax,DWORD PTR [rbp-0x4]
  417674:	jmp    4176f9 <_start@@Base+0x12599>
  417679:	mov    rax,QWORD PTR [rbp-0x18]
  41767d:	mov    ecx,0x4
  417682:	mov    edx,0x4
  417687:	mov    esi,0x3
  41768c:	mov    rdi,rax
  41768f:	call   420f82 <flatcc_verify_field@@Base>
  417694:	mov    DWORD PTR [rbp-0x4],eax
  417697:	cmp    DWORD PTR [rbp-0x4],0x0
  41769b:	je     4176a2 <_start@@Base+0x12542>
  41769d:	mov    eax,DWORD PTR [rbp-0x4]
  4176a0:	jmp    4176f9 <_start@@Base+0x12599>
  4176a2:	mov    rax,QWORD PTR [rbp-0x18]
  4176a6:	mov    ecx,0x8
  4176ab:	mov    edx,0x8
  4176b0:	mov    esi,0x4
  4176b5:	mov    rdi,rax
  4176b8:	call   420f82 <flatcc_verify_field@@Base>
  4176bd:	mov    DWORD PTR [rbp-0x4],eax
  4176c0:	cmp    DWORD PTR [rbp-0x4],0x0
  4176c4:	je     4176cb <_start@@Base+0x1256b>
  4176c6:	mov    eax,DWORD PTR [rbp-0x4]
  4176c9:	jmp    4176f9 <_start@@Base+0x12599>
  4176cb:	mov    rax,QWORD PTR [rbp-0x18]
  4176cf:	mov    ecx,0x8
  4176d4:	mov    edx,0x8
  4176d9:	mov    esi,0x5
  4176de:	mov    rdi,rax
  4176e1:	call   420f82 <flatcc_verify_field@@Base>
  4176e6:	mov    DWORD PTR [rbp-0x4],eax
  4176e9:	cmp    DWORD PTR [rbp-0x4],0x0
  4176ed:	je     4176f4 <_start@@Base+0x12594>
  4176ef:	mov    eax,DWORD PTR [rbp-0x4]
  4176f2:	jmp    4176f9 <_start@@Base+0x12599>
  4176f4:	mov    eax,0x0
  4176f9:	leave  
  4176fa:	ret    
  4176fb:	push   rbp
  4176fc:	mov    rbp,rsp
  4176ff:	sub    rsp,0x20
  417703:	mov    QWORD PTR [rbp-0x18],rdi
  417707:	mov    rax,QWORD PTR [rbp-0x18]
  41770b:	mov    edx,0x0
  417710:	mov    esi,0x0
  417715:	mov    rdi,rax
  417718:	call   420fed <flatcc_verify_string_field@@Base>
  41771d:	mov    DWORD PTR [rbp-0x4],eax
  417720:	cmp    DWORD PTR [rbp-0x4],0x0
  417724:	je     41772b <_start@@Base+0x125cb>
  417726:	mov    eax,DWORD PTR [rbp-0x4]
  417729:	jmp    417782 <_start@@Base+0x12622>
  41772b:	mov    rax,QWORD PTR [rbp-0x18]
  41772f:	mov    ecx,0x8
  417734:	mov    edx,0x8
  417739:	mov    esi,0x1
  41773e:	mov    rdi,rax
  417741:	call   420f82 <flatcc_verify_field@@Base>
  417746:	mov    DWORD PTR [rbp-0x4],eax
  417749:	cmp    DWORD PTR [rbp-0x4],0x0
  41774d:	je     417754 <_start@@Base+0x125f4>
  41774f:	mov    eax,DWORD PTR [rbp-0x4]
  417752:	jmp    417782 <_start@@Base+0x12622>
  417754:	mov    rax,QWORD PTR [rbp-0x18]
  417758:	mov    ecx,0x2
  41775d:	mov    edx,0x2
  417762:	mov    esi,0x2
  417767:	mov    rdi,rax
  41776a:	call   420f82 <flatcc_verify_field@@Base>
  41776f:	mov    DWORD PTR [rbp-0x4],eax
  417772:	cmp    DWORD PTR [rbp-0x4],0x0
  417776:	je     41777d <_start@@Base+0x1261d>
  417778:	mov    eax,DWORD PTR [rbp-0x4]
  41777b:	jmp    417782 <_start@@Base+0x12622>
  41777d:	mov    eax,0x0
  417782:	leave  
  417783:	ret    
  417784:	push   rbp
  417785:	mov    rbp,rsp
  417788:	sub    rsp,0x20
  41778c:	mov    QWORD PTR [rbp-0x18],rdi
  417790:	mov    rax,QWORD PTR [rbp-0x18]
  417794:	lea    rcx,[rip+0x7d]        # 417818 <_start@@Base+0x126b8>
  41779b:	mov    edx,0x0
  4177a0:	mov    esi,0x0
  4177a5:	mov    rdi,rax
  4177a8:	call   4211e7 <flatcc_verify_table_field@@Base>
  4177ad:	mov    DWORD PTR [rbp-0x4],eax
  4177b0:	cmp    DWORD PTR [rbp-0x4],0x0
  4177b4:	je     4177bb <_start@@Base+0x1265b>
  4177b6:	mov    eax,DWORD PTR [rbp-0x4]
  4177b9:	jmp    417816 <_start@@Base+0x126b6>
  4177bb:	mov    rax,QWORD PTR [rbp-0x18]
  4177bf:	lea    rcx,[rip+0xca4]        # 41846a <_start@@Base+0x1330a>
  4177c6:	mov    edx,0x0
  4177cb:	mov    esi,0x1
  4177d0:	mov    rdi,rax
  4177d3:	call   4211e7 <flatcc_verify_table_field@@Base>
  4177d8:	mov    DWORD PTR [rbp-0x4],eax
  4177db:	cmp    DWORD PTR [rbp-0x4],0x0
  4177df:	je     4177e6 <_start@@Base+0x12686>
  4177e1:	mov    eax,DWORD PTR [rbp-0x4]
  4177e4:	jmp    417816 <_start@@Base+0x126b6>
  4177e6:	mov    rax,QWORD PTR [rbp-0x18]
  4177ea:	lea    rcx,[rip+0xfffffffffffffb83]        # 417374 <_start@@Base+0x12214>
  4177f1:	mov    edx,0x0
  4177f6:	mov    esi,0x3
  4177fb:	mov    rdi,rax
  4177fe:	call   421bfb <flatcc_verify_union_vector_field@@Base>
  417803:	mov    DWORD PTR [rbp-0x4],eax
  417806:	cmp    DWORD PTR [rbp-0x4],0x0
  41780a:	je     417811 <_start@@Base+0x126b1>
  41780c:	mov    eax,DWORD PTR [rbp-0x4]
  41780f:	jmp    417816 <_start@@Base+0x126b6>
  417811:	mov    eax,0x0
  417816:	leave  
  417817:	ret    
  417818:	push   rbp
  417819:	mov    rbp,rsp
  41781c:	sub    rsp,0x20
  417820:	mov    QWORD PTR [rbp-0x18],rdi
  417824:	mov    rax,QWORD PTR [rbp-0x18]
  417828:	lea    rcx,[rip+0x7d]        # 4178ac <_start@@Base+0x1274c>
  41782f:	mov    edx,0x0
  417834:	mov    esi,0x0
  417839:	mov    rdi,rax
  41783c:	call   4211e7 <flatcc_verify_table_field@@Base>
  417841:	mov    DWORD PTR [rbp-0x4],eax
  417844:	cmp    DWORD PTR [rbp-0x4],0x0
  417848:	je     41784f <_start@@Base+0x126ef>
  41784a:	mov    eax,DWORD PTR [rbp-0x4]
  41784d:	jmp    4178aa <_start@@Base+0x1274a>
  41784f:	mov    rax,QWORD PTR [rbp-0x18]
  417853:	lea    rcx,[rip+0x1d9]        # 417a33 <_start@@Base+0x128d3>
  41785a:	mov    edx,0x0
  41785f:	mov    esi,0x1
  417864:	mov    rdi,rax
  417867:	call   4211e7 <flatcc_verify_table_field@@Base>
  41786c:	mov    DWORD PTR [rbp-0x4],eax
  41786f:	cmp    DWORD PTR [rbp-0x4],0x0
  417873:	je     41787a <_start@@Base+0x1271a>
  417875:	mov    eax,DWORD PTR [rbp-0x4]
  417878:	jmp    4178aa <_start@@Base+0x1274a>
  41787a:	mov    rax,QWORD PTR [rbp-0x18]
  41787e:	lea    rcx,[rip+0x213]        # 417a98 <_start@@Base+0x12938>
  417885:	mov    edx,0x0
  41788a:	mov    esi,0x2
  41788f:	mov    rdi,rax
  417892:	call   4211e7 <flatcc_verify_table_field@@Base>
  417897:	mov    DWORD PTR [rbp-0x4],eax
  41789a:	cmp    DWORD PTR [rbp-0x4],0x0
  41789e:	je     4178a5 <_start@@Base+0x12745>
  4178a0:	mov    eax,DWORD PTR [rbp-0x4]
  4178a3:	jmp    4178aa <_start@@Base+0x1274a>
  4178a5:	mov    eax,0x0
  4178aa:	leave  
  4178ab:	ret    
  4178ac:	push   rbp
  4178ad:	mov    rbp,rsp
  4178b0:	sub    rsp,0x20
  4178b4:	mov    QWORD PTR [rbp-0x18],rdi
  4178b8:	mov    rax,QWORD PTR [rbp-0x18]
  4178bc:	mov    edx,0x0
  4178c1:	mov    esi,0x0
  4178c6:	mov    rdi,rax
  4178c9:	call   420fed <flatcc_verify_string_field@@Base>
  4178ce:	mov    DWORD PTR [rbp-0x4],eax
  4178d1:	cmp    DWORD PTR [rbp-0x4],0x0
  4178d5:	je     4178df <_start@@Base+0x1277f>
  4178d7:	mov    eax,DWORD PTR [rbp-0x4]
  4178da:	jmp    417a31 <_start@@Base+0x128d1>
  4178df:	mov    rax,QWORD PTR [rbp-0x18]
  4178e3:	mov    ecx,0x4
  4178e8:	mov    edx,0x4
  4178ed:	mov    esi,0x1
  4178f2:	mov    rdi,rax
  4178f5:	call   420f82 <flatcc_verify_field@@Base>
  4178fa:	mov    DWORD PTR [rbp-0x4],eax
  4178fd:	cmp    DWORD PTR [rbp-0x4],0x0
  417901:	je     41790b <_start@@Base+0x127ab>
  417903:	mov    eax,DWORD PTR [rbp-0x4]
  417906:	jmp    417a31 <_start@@Base+0x128d1>
  41790b:	mov    rax,QWORD PTR [rbp-0x18]
  41790f:	mov    edx,0x0
  417914:	mov    esi,0x2
  417919:	mov    rdi,rax
  41791c:	call   420fed <flatcc_verify_string_field@@Base>
  417921:	mov    DWORD PTR [rbp-0x4],eax
  417924:	cmp    DWORD PTR [rbp-0x4],0x0
  417928:	je     417932 <_start@@Base+0x127d2>
  41792a:	mov    eax,DWORD PTR [rbp-0x4]
  41792d:	jmp    417a31 <_start@@Base+0x128d1>
  417932:	mov    rax,QWORD PTR [rbp-0x18]
  417936:	mov    ecx,0x8
  41793b:	mov    edx,0x8
  417940:	mov    esi,0x3
  417945:	mov    rdi,rax
  417948:	call   420f82 <flatcc_verify_field@@Base>
  41794d:	mov    DWORD PTR [rbp-0x4],eax
  417950:	cmp    DWORD PTR [rbp-0x4],0x0
  417954:	je     41795e <_start@@Base+0x127fe>
  417956:	mov    eax,DWORD PTR [rbp-0x4]
  417959:	jmp    417a31 <_start@@Base+0x128d1>
  41795e:	mov    rax,QWORD PTR [rbp-0x18]
  417962:	mov    edx,0x0
  417967:	mov    esi,0x4
  41796c:	mov    rdi,rax
  41796f:	call   420fed <flatcc_verify_string_field@@Base>
  417974:	mov    DWORD PTR [rbp-0x4],eax
  417977:	cmp    DWORD PTR [rbp-0x4],0x0
  41797b:	je     417985 <_start@@Base+0x12825>
  41797d:	mov    eax,DWORD PTR [rbp-0x4]
  417980:	jmp    417a31 <_start@@Base+0x128d1>
  417985:	mov    rax,QWORD PTR [rbp-0x18]
  417989:	mov    ecx,0x8
  41798e:	mov    edx,0x8
  417993:	mov    esi,0x5
  417998:	mov    rdi,rax
  41799b:	call   420f82 <flatcc_verify_field@@Base>
  4179a0:	mov    DWORD PTR [rbp-0x4],eax
  4179a3:	cmp    DWORD PTR [rbp-0x4],0x0
  4179a7:	je     4179b1 <_start@@Base+0x12851>
  4179a9:	mov    eax,DWORD PTR [rbp-0x4]
  4179ac:	jmp    417a31 <_start@@Base+0x128d1>
  4179b1:	mov    rax,QWORD PTR [rbp-0x18]
  4179b5:	mov    ecx,0x4
  4179ba:	mov    edx,0x4
  4179bf:	mov    esi,0x6
  4179c4:	mov    rdi,rax
  4179c7:	call   420f82 <flatcc_verify_field@@Base>
  4179cc:	mov    DWORD PTR [rbp-0x4],eax
  4179cf:	cmp    DWORD PTR [rbp-0x4],0x0
  4179d3:	je     4179da <_start@@Base+0x1287a>
  4179d5:	mov    eax,DWORD PTR [rbp-0x4]
  4179d8:	jmp    417a31 <_start@@Base+0x128d1>
  4179da:	mov    rax,QWORD PTR [rbp-0x18]
  4179de:	mov    ecx,0x8
  4179e3:	mov    edx,0x8
  4179e8:	mov    esi,0x7
  4179ed:	mov    rdi,rax
  4179f0:	call   420f82 <flatcc_verify_field@@Base>
  4179f5:	mov    DWORD PTR [rbp-0x4],eax
  4179f8:	cmp    DWORD PTR [rbp-0x4],0x0
  4179fc:	je     417a03 <_start@@Base+0x128a3>
  4179fe:	mov    eax,DWORD PTR [rbp-0x4]
  417a01:	jmp    417a31 <_start@@Base+0x128d1>
  417a03:	mov    rax,QWORD PTR [rbp-0x18]
  417a07:	mov    ecx,0x4
  417a0c:	mov    edx,0x4
  417a11:	mov    esi,0x8
  417a16:	mov    rdi,rax
  417a19:	call   420f82 <flatcc_verify_field@@Base>
  417a1e:	mov    DWORD PTR [rbp-0x4],eax
  417a21:	cmp    DWORD PTR [rbp-0x4],0x0
  417a25:	je     417a2c <_start@@Base+0x128cc>
  417a27:	mov    eax,DWORD PTR [rbp-0x4]
  417a2a:	jmp    417a31 <_start@@Base+0x128d1>
  417a2c:	mov    eax,0x0
  417a31:	leave  
  417a32:	ret    
  417a33:	push   rbp
  417a34:	mov    rbp,rsp
  417a37:	sub    rsp,0x20
  417a3b:	mov    QWORD PTR [rbp-0x18],rdi
  417a3f:	mov    rax,QWORD PTR [rbp-0x18]
  417a43:	mov    ecx,0x8
  417a48:	mov    edx,0x8
  417a4d:	mov    esi,0x0
  417a52:	mov    rdi,rax
  417a55:	call   420f82 <flatcc_verify_field@@Base>
  417a5a:	mov    DWORD PTR [rbp-0x4],eax
  417a5d:	cmp    DWORD PTR [rbp-0x4],0x0
  417a61:	je     417a68 <_start@@Base+0x12908>
  417a63:	mov    eax,DWORD PTR [rbp-0x4]
  417a66:	jmp    417a96 <_start@@Base+0x12936>
  417a68:	mov    rax,QWORD PTR [rbp-0x18]
  417a6c:	mov    ecx,0x4
  417a71:	mov    edx,0x4
  417a76:	mov    esi,0x1
  417a7b:	mov    rdi,rax
  417a7e:	call   420f82 <flatcc_verify_field@@Base>
  417a83:	mov    DWORD PTR [rbp-0x4],eax
  417a86:	cmp    DWORD PTR [rbp-0x4],0x0
  417a8a:	je     417a91 <_start@@Base+0x12931>
  417a8c:	mov    eax,DWORD PTR [rbp-0x4]
  417a8f:	jmp    417a96 <_start@@Base+0x12936>
  417a91:	mov    eax,0x0
  417a96:	leave  
  417a97:	ret    
  417a98:	push   rbp
  417a99:	mov    rbp,rsp
  417a9c:	sub    rsp,0x20
  417aa0:	mov    QWORD PTR [rbp-0x18],rdi
  417aa4:	mov    rax,QWORD PTR [rbp-0x18]
  417aa8:	mov    ecx,0x8
  417aad:	mov    edx,0x8
  417ab2:	mov    esi,0x0
  417ab7:	mov    rdi,rax
  417aba:	call   420f82 <flatcc_verify_field@@Base>
  417abf:	mov    DWORD PTR [rbp-0x4],eax
  417ac2:	cmp    DWORD PTR [rbp-0x4],0x0
  417ac6:	je     417acd <_start@@Base+0x1296d>
  417ac8:	mov    eax,DWORD PTR [rbp-0x4]
  417acb:	jmp    417afb <_start@@Base+0x1299b>
  417acd:	mov    rax,QWORD PTR [rbp-0x18]
  417ad1:	mov    ecx,0x4
  417ad6:	mov    edx,0x4
  417adb:	mov    esi,0x1
  417ae0:	mov    rdi,rax
  417ae3:	call   420f82 <flatcc_verify_field@@Base>
  417ae8:	mov    DWORD PTR [rbp-0x4],eax
  417aeb:	cmp    DWORD PTR [rbp-0x4],0x0
  417aef:	je     417af6 <_start@@Base+0x12996>
  417af1:	mov    eax,DWORD PTR [rbp-0x4]
  417af4:	jmp    417afb <_start@@Base+0x1299b>
  417af6:	mov    eax,0x0
  417afb:	leave  
  417afc:	ret    
  417afd:	push   rbp
  417afe:	mov    rbp,rsp
  417b01:	sub    rsp,0x20
  417b05:	mov    QWORD PTR [rbp-0x18],rdi
  417b09:	mov    rax,QWORD PTR [rbp-0x18]
  417b0d:	mov    r9d,0xffffffff
  417b13:	mov    r8d,0x1
  417b19:	mov    ecx,0x1
  417b1e:	mov    edx,0x0
  417b23:	mov    esi,0x0
  417b28:	mov    rdi,rax
  417b2b:	call   421082 <flatcc_verify_vector_field@@Base>
  417b30:	mov    DWORD PTR [rbp-0x4],eax
  417b33:	cmp    DWORD PTR [rbp-0x4],0x0
  417b37:	je     417b3e <_start@@Base+0x129de>
  417b39:	mov    eax,DWORD PTR [rbp-0x4]
  417b3c:	jmp    417bae <_start@@Base+0x12a4e>
  417b3e:	mov    rax,QWORD PTR [rbp-0x18]
  417b42:	mov    r9d,0xffffffff
  417b48:	mov    r8d,0x1
  417b4e:	mov    ecx,0x1
  417b53:	mov    edx,0x0
  417b58:	mov    esi,0x1
  417b5d:	mov    rdi,rax
  417b60:	call   421082 <flatcc_verify_vector_field@@Base>
  417b65:	mov    DWORD PTR [rbp-0x4],eax
  417b68:	cmp    DWORD PTR [rbp-0x4],0x0
  417b6c:	je     417b73 <_start@@Base+0x12a13>
  417b6e:	mov    eax,DWORD PTR [rbp-0x4]
  417b71:	jmp    417bae <_start@@Base+0x12a4e>
  417b73:	mov    rax,QWORD PTR [rbp-0x18]
  417b77:	lea    r9,[rip+0x32]        # 417bb0 <_start@@Base+0x12a50>
  417b7e:	mov    r8d,0x1
  417b84:	mov    ecx,0x0
  417b89:	mov    edx,0x0
  417b8e:	mov    esi,0x2
  417b93:	mov    rdi,rax
  417b96:	call   4218b1 <flatcc_verify_table_as_nested_root@@Base>
  417b9b:	mov    DWORD PTR [rbp-0x4],eax
  417b9e:	cmp    DWORD PTR [rbp-0x4],0x0
  417ba2:	je     417ba9 <_start@@Base+0x12a49>
  417ba4:	mov    eax,DWORD PTR [rbp-0x4]
  417ba7:	jmp    417bae <_start@@Base+0x12a4e>
  417ba9:	mov    eax,0x0
  417bae:	leave  
  417baf:	ret    
  417bb0:	push   rbp
  417bb1:	mov    rbp,rsp
  417bb4:	sub    rsp,0x20
  417bb8:	mov    QWORD PTR [rbp-0x18],rdi
  417bbc:	mov    rax,QWORD PTR [rbp-0x18]
  417bc0:	mov    ecx,0x10
  417bc5:	mov    edx,0x20
  417bca:	mov    esi,0x0
  417bcf:	mov    rdi,rax
  417bd2:	call   420f82 <flatcc_verify_field@@Base>
  417bd7:	mov    DWORD PTR [rbp-0x4],eax
  417bda:	cmp    DWORD PTR [rbp-0x4],0x0
  417bde:	je     417be8 <_start@@Base+0x12a88>
  417be0:	mov    eax,DWORD PTR [rbp-0x4]
  417be3:	jmp    4181fa <_start@@Base+0x1309a>
  417be8:	mov    rax,QWORD PTR [rbp-0x18]
  417bec:	mov    ecx,0x2
  417bf1:	mov    edx,0x2
  417bf6:	mov    esi,0x2
  417bfb:	mov    rdi,rax
  417bfe:	call   420f82 <flatcc_verify_field@@Base>
  417c03:	mov    DWORD PTR [rbp-0x4],eax
  417c06:	cmp    DWORD PTR [rbp-0x4],0x0
  417c0a:	je     417c14 <_start@@Base+0x12ab4>
  417c0c:	mov    eax,DWORD PTR [rbp-0x4]
  417c0f:	jmp    4181fa <_start@@Base+0x1309a>
  417c14:	mov    rax,QWORD PTR [rbp-0x18]
  417c18:	mov    ecx,0x2
  417c1d:	mov    edx,0x2
  417c22:	mov    esi,0x1
  417c27:	mov    rdi,rax
  417c2a:	call   420f82 <flatcc_verify_field@@Base>
  417c2f:	mov    DWORD PTR [rbp-0x4],eax
  417c32:	cmp    DWORD PTR [rbp-0x4],0x0
  417c36:	je     417c40 <_start@@Base+0x12ae0>
  417c38:	mov    eax,DWORD PTR [rbp-0x4]
  417c3b:	jmp    4181fa <_start@@Base+0x1309a>
  417c40:	mov    rax,QWORD PTR [rbp-0x18]
  417c44:	mov    edx,0x1
  417c49:	mov    esi,0x3
  417c4e:	mov    rdi,rax
  417c51:	call   420fed <flatcc_verify_string_field@@Base>
  417c56:	mov    DWORD PTR [rbp-0x4],eax
  417c59:	cmp    DWORD PTR [rbp-0x4],0x0
  417c5d:	je     417c67 <_start@@Base+0x12b07>
  417c5f:	mov    eax,DWORD PTR [rbp-0x4]
  417c62:	jmp    4181fa <_start@@Base+0x1309a>
  417c67:	mov    rax,QWORD PTR [rbp-0x18]
  417c6b:	mov    ecx,0x1
  417c70:	mov    edx,0x1
  417c75:	mov    esi,0x6
  417c7a:	mov    rdi,rax
  417c7d:	call   420f82 <flatcc_verify_field@@Base>
  417c82:	mov    DWORD PTR [rbp-0x4],eax
  417c85:	cmp    DWORD PTR [rbp-0x4],0x0
  417c89:	je     417c93 <_start@@Base+0x12b33>
  417c8b:	mov    eax,DWORD PTR [rbp-0x4]
  417c8e:	jmp    4181fa <_start@@Base+0x1309a>
  417c93:	mov    rax,QWORD PTR [rbp-0x18]
  417c97:	mov    r9d,0xffffffff
  417c9d:	mov    r8d,0x1
  417ca3:	mov    ecx,0x1
  417ca8:	mov    edx,0x0
  417cad:	mov    esi,0x5
  417cb2:	mov    rdi,rax
  417cb5:	call   421082 <flatcc_verify_vector_field@@Base>
  417cba:	mov    DWORD PTR [rbp-0x4],eax
  417cbd:	cmp    DWORD PTR [rbp-0x4],0x0
  417cc1:	je     417ccb <_start@@Base+0x12b6b>
  417cc3:	mov    eax,DWORD PTR [rbp-0x4]
  417cc6:	jmp    4181fa <_start@@Base+0x1309a>
  417ccb:	mov    rax,QWORD PTR [rbp-0x18]
  417ccf:	lea    rcx,[rip+0xfffffffffffffeda]        # 417bb0 <_start@@Base+0x12a50>
  417cd6:	mov    edx,0x0
  417cdb:	mov    esi,0xb
  417ce0:	mov    rdi,rax
  417ce3:	call   421299 <flatcc_verify_table_vector_field@@Base>
  417ce8:	mov    DWORD PTR [rbp-0x4],eax
  417ceb:	cmp    DWORD PTR [rbp-0x4],0x0
  417cef:	je     417cf9 <_start@@Base+0x12b99>
  417cf1:	mov    eax,DWORD PTR [rbp-0x4]
  417cf4:	jmp    4181fa <_start@@Base+0x1309a>
  417cf9:	mov    rax,QWORD PTR [rbp-0x18]
  417cfd:	mov    edx,0x0
  417d02:	mov    esi,0xa
  417d07:	mov    rdi,rax
  417d0a:	call   421152 <flatcc_verify_string_vector_field@@Base>
  417d0f:	mov    DWORD PTR [rbp-0x4],eax
  417d12:	cmp    DWORD PTR [rbp-0x4],0x0
  417d16:	je     417d20 <_start@@Base+0x12bc0>
  417d18:	mov    eax,DWORD PTR [rbp-0x4]
  417d1b:	jmp    4181fa <_start@@Base+0x1309a>
  417d20:	mov    rax,QWORD PTR [rbp-0x18]
  417d24:	mov    edx,0x0
  417d29:	mov    esi,0x1c
  417d2e:	mov    rdi,rax
  417d31:	call   421152 <flatcc_verify_string_vector_field@@Base>
  417d36:	mov    DWORD PTR [rbp-0x4],eax
  417d39:	cmp    DWORD PTR [rbp-0x4],0x0
  417d3d:	je     417d47 <_start@@Base+0x12be7>
  417d3f:	mov    eax,DWORD PTR [rbp-0x4]
  417d42:	jmp    4181fa <_start@@Base+0x1309a>
  417d47:	mov    rax,QWORD PTR [rbp-0x18]
  417d4b:	mov    r9d,0xffffffff
  417d51:	mov    r8d,0x1
  417d57:	mov    ecx,0x1
  417d5c:	mov    edx,0x0
  417d61:	mov    esi,0x18
  417d66:	mov    rdi,rax
  417d69:	call   421082 <flatcc_verify_vector_field@@Base>
  417d6e:	mov    DWORD PTR [rbp-0x4],eax
  417d71:	cmp    DWORD PTR [rbp-0x4],0x0
  417d75:	je     417d7f <_start@@Base+0x12c1f>
  417d77:	mov    eax,DWORD PTR [rbp-0x4]
  417d7a:	jmp    4181fa <_start@@Base+0x1309a>
  417d7f:	mov    rax,QWORD PTR [rbp-0x18]
  417d83:	mov    r9d,0x1fffffff
  417d89:	mov    r8d,0x4
  417d8f:	mov    ecx,0x8
  417d94:	mov    edx,0x0
  417d99:	mov    esi,0x1d
  417d9e:	mov    rdi,rax
  417da1:	call   421082 <flatcc_verify_vector_field@@Base>
  417da6:	mov    DWORD PTR [rbp-0x4],eax
  417da9:	cmp    DWORD PTR [rbp-0x4],0x0
  417dad:	je     417db7 <_start@@Base+0x12c57>
  417daf:	mov    eax,DWORD PTR [rbp-0x4]
  417db2:	jmp    4181fa <_start@@Base+0x1309a>
  417db7:	mov    rax,QWORD PTR [rbp-0x18]
  417dbb:	lea    rcx,[rip+0xfffffffffffffdee]        # 417bb0 <_start@@Base+0x12a50>
  417dc2:	mov    edx,0x0
  417dc7:	mov    esi,0xc
  417dcc:	mov    rdi,rax
  417dcf:	call   4211e7 <flatcc_verify_table_field@@Base>
  417dd4:	mov    DWORD PTR [rbp-0x4],eax
  417dd7:	cmp    DWORD PTR [rbp-0x4],0x0
  417ddb:	je     417de5 <_start@@Base+0x12c85>
  417ddd:	mov    eax,DWORD PTR [rbp-0x4]
  417de0:	jmp    4181fa <_start@@Base+0x1309a>
  417de5:	mov    rax,QWORD PTR [rbp-0x18]
  417de9:	lea    rcx,[rip+0xfffffffffffff584]        # 417374 <_start@@Base+0x12214>
  417df0:	mov    edx,0x0
  417df5:	mov    esi,0x8
  417dfa:	mov    rdi,rax
  417dfd:	call   4219f4 <flatcc_verify_union_field@@Base>
  417e02:	mov    DWORD PTR [rbp-0x4],eax
  417e05:	cmp    DWORD PTR [rbp-0x4],0x0
  417e09:	je     417e13 <_start@@Base+0x12cb3>
  417e0b:	mov    eax,DWORD PTR [rbp-0x4]
  417e0e:	jmp    4181fa <_start@@Base+0x1309a>
  417e13:	mov    rax,QWORD PTR [rbp-0x18]
  417e17:	mov    r9d,0x3fffffff
  417e1d:	mov    r8d,0x2
  417e23:	mov    ecx,0x4
  417e28:	mov    edx,0x0
  417e2d:	mov    esi,0x9
  417e32:	mov    rdi,rax
  417e35:	call   421082 <flatcc_verify_vector_field@@Base>
  417e3a:	mov    DWORD PTR [rbp-0x4],eax
  417e3d:	cmp    DWORD PTR [rbp-0x4],0x0
  417e41:	je     417e4b <_start@@Base+0x12ceb>
  417e43:	mov    eax,DWORD PTR [rbp-0x4]
  417e46:	jmp    4181fa <_start@@Base+0x1309a>
  417e4b:	mov    rax,QWORD PTR [rbp-0x18]
  417e4f:	mov    r9d,0x3fffffff
  417e55:	mov    r8d,0x2
  417e5b:	mov    ecx,0x4
  417e60:	mov    edx,0x0
  417e65:	mov    esi,0x1f
  417e6a:	mov    rdi,rax
  417e6d:	call   421082 <flatcc_verify_vector_field@@Base>
  417e72:	mov    DWORD PTR [rbp-0x4],eax
  417e75:	cmp    DWORD PTR [rbp-0x4],0x0
  417e79:	je     417e83 <_start@@Base+0x12d23>
  417e7b:	mov    eax,DWORD PTR [rbp-0x4]
  417e7e:	jmp    4181fa <_start@@Base+0x1309a>
  417e83:	mov    rax,QWORD PTR [rbp-0x18]
  417e87:	lea    r9,[rip+0xfffffffffffffd22]        # 417bb0 <_start@@Base+0x12a50>
  417e8e:	mov    r8d,0x1
  417e94:	mov    ecx,0x0
  417e99:	mov    edx,0x0
  417e9e:	mov    esi,0xd
  417ea3:	mov    rdi,rax
  417ea6:	call   4218b1 <flatcc_verify_table_as_nested_root@@Base>
  417eab:	mov    DWORD PTR [rbp-0x4],eax
  417eae:	cmp    DWORD PTR [rbp-0x4],0x0
  417eb2:	je     417ebc <_start@@Base+0x12d5c>
  417eb4:	mov    eax,DWORD PTR [rbp-0x4]
  417eb7:	jmp    4181fa <_start@@Base+0x1309a>
  417ebc:	mov    rax,QWORD PTR [rbp-0x18]
  417ec0:	lea    rcx,[rip+0xfffffffffffff834]        # 4176fb <_start@@Base+0x1259b>
  417ec7:	mov    edx,0x0
  417ecc:	mov    esi,0xe
  417ed1:	mov    rdi,rax
  417ed4:	call   4211e7 <flatcc_verify_table_field@@Base>
  417ed9:	mov    DWORD PTR [rbp-0x4],eax
  417edc:	cmp    DWORD PTR [rbp-0x4],0x0
  417ee0:	je     417eea <_start@@Base+0x12d8a>
  417ee2:	mov    eax,DWORD PTR [rbp-0x4]
  417ee5:	jmp    4181fa <_start@@Base+0x1309a>
  417eea:	mov    rax,QWORD PTR [rbp-0x18]
  417eee:	mov    ecx,0x1
  417ef3:	mov    edx,0x1
  417ef8:	mov    esi,0xf
  417efd:	mov    rdi,rax
  417f00:	call   420f82 <flatcc_verify_field@@Base>
  417f05:	mov    DWORD PTR [rbp-0x4],eax
  417f08:	cmp    DWORD PTR [rbp-0x4],0x0
  417f0c:	je     417f16 <_start@@Base+0x12db6>
  417f0e:	mov    eax,DWORD PTR [rbp-0x4]
  417f11:	jmp    4181fa <_start@@Base+0x1309a>
  417f16:	mov    rax,QWORD PTR [rbp-0x18]
  417f1a:	mov    ecx,0x4
  417f1f:	mov    edx,0x4
  417f24:	mov    esi,0x10
  417f29:	mov    rdi,rax
  417f2c:	call   420f82 <flatcc_verify_field@@Base>
  417f31:	mov    DWORD PTR [rbp-0x4],eax
  417f34:	cmp    DWORD PTR [rbp-0x4],0x0
  417f38:	je     417f42 <_start@@Base+0x12de2>
  417f3a:	mov    eax,DWORD PTR [rbp-0x4]
  417f3d:	jmp    4181fa <_start@@Base+0x1309a>
  417f42:	mov    rax,QWORD PTR [rbp-0x18]
  417f46:	mov    ecx,0x4
  417f4b:	mov    edx,0x4
  417f50:	mov    esi,0x11
  417f55:	mov    rdi,rax
  417f58:	call   420f82 <flatcc_verify_field@@Base>
  417f5d:	mov    DWORD PTR [rbp-0x4],eax
  417f60:	cmp    DWORD PTR [rbp-0x4],0x0
  417f64:	je     417f6e <_start@@Base+0x12e0e>
  417f66:	mov    eax,DWORD PTR [rbp-0x4]
  417f69:	jmp    4181fa <_start@@Base+0x1309a>
  417f6e:	mov    rax,QWORD PTR [rbp-0x18]
  417f72:	mov    ecx,0x8
  417f77:	mov    edx,0x8
  417f7c:	mov    esi,0x12
  417f81:	mov    rdi,rax
  417f84:	call   420f82 <flatcc_verify_field@@Base>
  417f89:	mov    DWORD PTR [rbp-0x4],eax
  417f8c:	cmp    DWORD PTR [rbp-0x4],0x0
  417f90:	je     417f9a <_start@@Base+0x12e3a>
  417f92:	mov    eax,DWORD PTR [rbp-0x4]
  417f95:	jmp    4181fa <_start@@Base+0x1309a>
  417f9a:	mov    rax,QWORD PTR [rbp-0x18]
  417f9e:	mov    ecx,0x8
  417fa3:	mov    edx,0x8
  417fa8:	mov    esi,0x13
  417fad:	mov    rdi,rax
  417fb0:	call   420f82 <flatcc_verify_field@@Base>
  417fb5:	mov    DWORD PTR [rbp-0x4],eax
  417fb8:	cmp    DWORD PTR [rbp-0x4],0x0
  417fbc:	je     417fc6 <_start@@Base+0x12e66>
  417fbe:	mov    eax,DWORD PTR [rbp-0x4]
  417fc1:	jmp    4181fa <_start@@Base+0x1309a>
  417fc6:	mov    rax,QWORD PTR [rbp-0x18]
  417fca:	mov    ecx,0x4
  417fcf:	mov    edx,0x4
  417fd4:	mov    esi,0x14
  417fd9:	mov    rdi,rax
  417fdc:	call   420f82 <flatcc_verify_field@@Base>
  417fe1:	mov    DWORD PTR [rbp-0x4],eax
  417fe4:	cmp    DWORD PTR [rbp-0x4],0x0
  417fe8:	je     417ff2 <_start@@Base+0x12e92>
  417fea:	mov    eax,DWORD PTR [rbp-0x4]
  417fed:	jmp    4181fa <_start@@Base+0x1309a>
  417ff2:	mov    rax,QWORD PTR [rbp-0x18]
  417ff6:	mov    ecx,0x4
  417ffb:	mov    edx,0x4
  418000:	mov    esi,0x15
  418005:	mov    rdi,rax
  418008:	call   420f82 <flatcc_verify_field@@Base>
  41800d:	mov    DWORD PTR [rbp-0x4],eax
  418010:	cmp    DWORD PTR [rbp-0x4],0x0
  418014:	je     41801e <_start@@Base+0x12ebe>
  418016:	mov    eax,DWORD PTR [rbp-0x4]
  418019:	jmp    4181fa <_start@@Base+0x1309a>
  41801e:	mov    rax,QWORD PTR [rbp-0x18]
  418022:	mov    ecx,0x8
  418027:	mov    edx,0x8
  41802c:	mov    esi,0x16
  418031:	mov    rdi,rax
  418034:	call   420f82 <flatcc_verify_field@@Base>
  418039:	mov    DWORD PTR [rbp-0x4],eax
  41803c:	cmp    DWORD PTR [rbp-0x4],0x0
  418040:	je     41804a <_start@@Base+0x12eea>
  418042:	mov    eax,DWORD PTR [rbp-0x4]
  418045:	jmp    4181fa <_start@@Base+0x1309a>
  41804a:	mov    rax,QWORD PTR [rbp-0x18]
  41804e:	mov    ecx,0x8
  418053:	mov    edx,0x8
  418058:	mov    esi,0x17
  41805d:	mov    rdi,rax
  418060:	call   420f82 <flatcc_verify_field@@Base>
  418065:	mov    DWORD PTR [rbp-0x4],eax
  418068:	cmp    DWORD PTR [rbp-0x4],0x0
  41806c:	je     418076 <_start@@Base+0x12f16>
  41806e:	mov    eax,DWORD PTR [rbp-0x4]
  418071:	jmp    4181fa <_start@@Base+0x1309a>
  418076:	mov    rax,QWORD PTR [rbp-0x18]
  41807a:	mov    ecx,0x4
  41807f:	mov    edx,0x4
  418084:	mov    esi,0x19
  418089:	mov    rdi,rax
  41808c:	call   420f82 <flatcc_verify_field@@Base>
  418091:	mov    DWORD PTR [rbp-0x4],eax
  418094:	cmp    DWORD PTR [rbp-0x4],0x0
  418098:	je     4180a2 <_start@@Base+0x12f42>
  41809a:	mov    eax,DWORD PTR [rbp-0x4]
  41809d:	jmp    4181fa <_start@@Base+0x1309a>
  4180a2:	mov    rax,QWORD PTR [rbp-0x18]
  4180a6:	mov    ecx,0x4
  4180ab:	mov    edx,0x4
  4180b0:	mov    esi,0x1a
  4180b5:	mov    rdi,rax
  4180b8:	call   420f82 <flatcc_verify_field@@Base>
  4180bd:	mov    DWORD PTR [rbp-0x4],eax
  4180c0:	cmp    DWORD PTR [rbp-0x4],0x0
  4180c4:	je     4180ce <_start@@Base+0x12f6e>
  4180c6:	mov    eax,DWORD PTR [rbp-0x4]
  4180c9:	jmp    4181fa <_start@@Base+0x1309a>
  4180ce:	mov    rax,QWORD PTR [rbp-0x18]
  4180d2:	mov    ecx,0x4
  4180d7:	mov    edx,0x4
  4180dc:	mov    esi,0x1b
  4180e1:	mov    rdi,rax
  4180e4:	call   420f82 <flatcc_verify_field@@Base>
  4180e9:	mov    DWORD PTR [rbp-0x4],eax
  4180ec:	cmp    DWORD PTR [rbp-0x4],0x0
  4180f0:	je     4180fa <_start@@Base+0x12f9a>
  4180f2:	mov    eax,DWORD PTR [rbp-0x4]
  4180f5:	jmp    4181fa <_start@@Base+0x1309a>
  4180fa:	mov    rax,QWORD PTR [rbp-0x18]
  4180fe:	mov    r9d,0xffffffff
  418104:	mov    r8d,0x1
  41810a:	mov    ecx,0x1
  41810f:	mov    edx,0x0
  418114:	mov    esi,0x1e
  418119:	mov    rdi,rax
  41811c:	call   421082 <flatcc_verify_vector_field@@Base>
  418121:	mov    DWORD PTR [rbp-0x4],eax
  418124:	cmp    DWORD PTR [rbp-0x4],0x0
  418128:	je     418132 <_start@@Base+0x12fd2>
  41812a:	mov    eax,DWORD PTR [rbp-0x4]
  41812d:	jmp    4181fa <_start@@Base+0x1309a>
  418132:	mov    rax,QWORD PTR [rbp-0x18]
  418136:	mov    r9d,0x1fffffff
  41813c:	mov    r8d,0x8
  418142:	mov    ecx,0x8
  418147:	mov    edx,0x0
  41814c:	mov    esi,0x20
  418151:	mov    rdi,rax
  418154:	call   421082 <flatcc_verify_vector_field@@Base>
  418159:	mov    DWORD PTR [rbp-0x4],eax
  41815c:	cmp    DWORD PTR [rbp-0x4],0x0
  418160:	je     41816a <_start@@Base+0x1300a>
  418162:	mov    eax,DWORD PTR [rbp-0x4]
  418165:	jmp    4181fa <_start@@Base+0x1309a>
  41816a:	mov    rax,QWORD PTR [rbp-0x18]
  41816e:	mov    r9d,0x1fffffff
  418174:	mov    r8d,0x8
  41817a:	mov    ecx,0x8
  41817f:	mov    edx,0x0
  418184:	mov    esi,0x21
  418189:	mov    rdi,rax
  41818c:	call   421082 <flatcc_verify_vector_field@@Base>
  418191:	mov    DWORD PTR [rbp-0x4],eax
  418194:	cmp    DWORD PTR [rbp-0x4],0x0
  418198:	je     41819f <_start@@Base+0x1303f>
  41819a:	mov    eax,DWORD PTR [rbp-0x4]
  41819d:	jmp    4181fa <_start@@Base+0x1309a>
  41819f:	mov    rax,QWORD PTR [rbp-0x18]
  4181a3:	lea    rcx,[rip+0xfffffffffffff31c]        # 4174c6 <_start@@Base+0x12366>
  4181aa:	mov    edx,0x0
  4181af:	mov    esi,0x22
  4181b4:	mov    rdi,rax
  4181b7:	call   4211e7 <flatcc_verify_table_field@@Base>
  4181bc:	mov    DWORD PTR [rbp-0x4],eax
  4181bf:	cmp    DWORD PTR [rbp-0x4],0x0
  4181c3:	je     4181ca <_start@@Base+0x1306a>
  4181c5:	mov    eax,DWORD PTR [rbp-0x4]
  4181c8:	jmp    4181fa <_start@@Base+0x1309a>
  4181ca:	mov    rax,QWORD PTR [rbp-0x18]
  4181ce:	lea    rcx,[rip+0xfffffffffffff928]        # 417afd <_start@@Base+0x1299d>
  4181d5:	mov    edx,0x0
  4181da:	mov    esi,0x23
  4181df:	mov    rdi,rax
  4181e2:	call   4211e7 <flatcc_verify_table_field@@Base>
  4181e7:	mov    DWORD PTR [rbp-0x4],eax
  4181ea:	cmp    DWORD PTR [rbp-0x4],0x0
  4181ee:	je     4181f5 <_start@@Base+0x13095>
  4181f0:	mov    eax,DWORD PTR [rbp-0x4]
  4181f3:	jmp    4181fa <_start@@Base+0x1309a>
  4181f5:	mov    eax,0x0
  4181fa:	leave  
  4181fb:	ret    
  4181fc:	push   rbp
  4181fd:	mov    rbp,rsp
  418200:	sub    rsp,0x20
  418204:	mov    QWORD PTR [rbp-0x18],rdi
  418208:	mov    rax,QWORD PTR [rbp-0x18]
  41820c:	mov    ecx,0x1
  418211:	mov    edx,0x1
  418216:	mov    esi,0x0
  41821b:	mov    rdi,rax
  41821e:	call   420f82 <flatcc_verify_field@@Base>
  418223:	mov    DWORD PTR [rbp-0x4],eax
  418226:	cmp    DWORD PTR [rbp-0x4],0x0
  41822a:	je     418234 <_start@@Base+0x130d4>
  41822c:	mov    eax,DWORD PTR [rbp-0x4]
  41822f:	jmp    41842c <_start@@Base+0x132cc>
  418234:	mov    rax,QWORD PTR [rbp-0x18]
  418238:	mov    ecx,0x1
  41823d:	mov    edx,0x1
  418242:	mov    esi,0x1
  418247:	mov    rdi,rax
  41824a:	call   420f82 <flatcc_verify_field@@Base>
  41824f:	mov    DWORD PTR [rbp-0x4],eax
  418252:	cmp    DWORD PTR [rbp-0x4],0x0
  418256:	je     418260 <_start@@Base+0x13100>
  418258:	mov    eax,DWORD PTR [rbp-0x4]
  41825b:	jmp    41842c <_start@@Base+0x132cc>
  418260:	mov    rax,QWORD PTR [rbp-0x18]
  418264:	mov    ecx,0x2
  418269:	mov    edx,0x2
  41826e:	mov    esi,0x2
  418273:	mov    rdi,rax
  418276:	call   420f82 <flatcc_verify_field@@Base>
  41827b:	mov    DWORD PTR [rbp-0x4],eax
  41827e:	cmp    DWORD PTR [rbp-0x4],0x0
  418282:	je     41828c <_start@@Base+0x1312c>
  418284:	mov    eax,DWORD PTR [rbp-0x4]
  418287:	jmp    41842c <_start@@Base+0x132cc>
  41828c:	mov    rax,QWORD PTR [rbp-0x18]
  418290:	mov    ecx,0x2
  418295:	mov    edx,0x2
  41829a:	mov    esi,0x3
  41829f:	mov    rdi,rax
  4182a2:	call   420f82 <flatcc_verify_field@@Base>
  4182a7:	mov    DWORD PTR [rbp-0x4],eax
  4182aa:	cmp    DWORD PTR [rbp-0x4],0x0
  4182ae:	je     4182b8 <_start@@Base+0x13158>
  4182b0:	mov    eax,DWORD PTR [rbp-0x4]
  4182b3:	jmp    41842c <_start@@Base+0x132cc>
  4182b8:	mov    rax,QWORD PTR [rbp-0x18]
  4182bc:	mov    ecx,0x4
  4182c1:	mov    edx,0x4
  4182c6:	mov    esi,0x4
  4182cb:	mov    rdi,rax
  4182ce:	call   420f82 <flatcc_verify_field@@Base>
  4182d3:	mov    DWORD PTR [rbp-0x4],eax
  4182d6:	cmp    DWORD PTR [rbp-0x4],0x0
  4182da:	je     4182e4 <_start@@Base+0x13184>
  4182dc:	mov    eax,DWORD PTR [rbp-0x4]
  4182df:	jmp    41842c <_start@@Base+0x132cc>
  4182e4:	mov    rax,QWORD PTR [rbp-0x18]
  4182e8:	mov    ecx,0x4
  4182ed:	mov    edx,0x4
  4182f2:	mov    esi,0x5
  4182f7:	mov    rdi,rax
  4182fa:	call   420f82 <flatcc_verify_field@@Base>
  4182ff:	mov    DWORD PTR [rbp-0x4],eax
  418302:	cmp    DWORD PTR [rbp-0x4],0x0
  418306:	je     418310 <_start@@Base+0x131b0>
  418308:	mov    eax,DWORD PTR [rbp-0x4]
  41830b:	jmp    41842c <_start@@Base+0x132cc>
  418310:	mov    rax,QWORD PTR [rbp-0x18]
  418314:	mov    ecx,0x8
  418319:	mov    edx,0x8
  41831e:	mov    esi,0x6
  418323:	mov    rdi,rax
  418326:	call   420f82 <flatcc_verify_field@@Base>
  41832b:	mov    DWORD PTR [rbp-0x4],eax
  41832e:	cmp    DWORD PTR [rbp-0x4],0x0
  418332:	je     41833c <_start@@Base+0x131dc>
  418334:	mov    eax,DWORD PTR [rbp-0x4]
  418337:	jmp    41842c <_start@@Base+0x132cc>
  41833c:	mov    rax,QWORD PTR [rbp-0x18]
  418340:	mov    ecx,0x8
  418345:	mov    edx,0x8
  41834a:	mov    esi,0x7
  41834f:	mov    rdi,rax
  418352:	call   420f82 <flatcc_verify_field@@Base>
  418357:	mov    DWORD PTR [rbp-0x4],eax
  41835a:	cmp    DWORD PTR [rbp-0x4],0x0
  41835e:	je     418368 <_start@@Base+0x13208>
  418360:	mov    eax,DWORD PTR [rbp-0x4]
  418363:	jmp    41842c <_start@@Base+0x132cc>
  418368:	mov    rax,QWORD PTR [rbp-0x18]
  41836c:	mov    ecx,0x4
  418371:	mov    edx,0x4
  418376:	mov    esi,0x8
  41837b:	mov    rdi,rax
  41837e:	call   420f82 <flatcc_verify_field@@Base>
  418383:	mov    DWORD PTR [rbp-0x4],eax
  418386:	cmp    DWORD PTR [rbp-0x4],0x0
  41838a:	je     418394 <_start@@Base+0x13234>
  41838c:	mov    eax,DWORD PTR [rbp-0x4]
  41838f:	jmp    41842c <_start@@Base+0x132cc>
  418394:	mov    rax,QWORD PTR [rbp-0x18]
  418398:	mov    ecx,0x8
  41839d:	mov    edx,0x8
  4183a2:	mov    esi,0x9
  4183a7:	mov    rdi,rax
  4183aa:	call   420f82 <flatcc_verify_field@@Base>
  4183af:	mov    DWORD PTR [rbp-0x4],eax
  4183b2:	cmp    DWORD PTR [rbp-0x4],0x0
  4183b6:	je     4183bd <_start@@Base+0x1325d>
  4183b8:	mov    eax,DWORD PTR [rbp-0x4]
  4183bb:	jmp    41842c <_start@@Base+0x132cc>
  4183bd:	mov    rax,QWORD PTR [rbp-0x18]
  4183c1:	mov    r9d,0xffffffff
  4183c7:	mov    r8d,0x1
  4183cd:	mov    ecx,0x1
  4183d2:	mov    edx,0x0
  4183d7:	mov    esi,0xa
  4183dc:	mov    rdi,rax
  4183df:	call   421082 <flatcc_verify_vector_field@@Base>
  4183e4:	mov    DWORD PTR [rbp-0x4],eax
  4183e7:	cmp    DWORD PTR [rbp-0x4],0x0
  4183eb:	je     4183f2 <_start@@Base+0x13292>
  4183ed:	mov    eax,DWORD PTR [rbp-0x4]
  4183f0:	jmp    41842c <_start@@Base+0x132cc>
  4183f2:	mov    rax,QWORD PTR [rbp-0x18]
  4183f6:	mov    r9d,0x1fffffff
  4183fc:	mov    r8d,0x8
  418402:	mov    ecx,0x8
  418407:	mov    edx,0x0
  41840c:	mov    esi,0xb
  418411:	mov    rdi,rax
  418414:	call   421082 <flatcc_verify_vector_field@@Base>
  418419:	mov    DWORD PTR [rbp-0x4],eax
  41841c:	cmp    DWORD PTR [rbp-0x4],0x0
  418420:	je     418427 <_start@@Base+0x132c7>
  418422:	mov    eax,DWORD PTR [rbp-0x4]
  418425:	jmp    41842c <_start@@Base+0x132cc>
  418427:	mov    eax,0x0
  41842c:	leave  
  41842d:	ret    
  41842e:	push   rbp
  41842f:	mov    rbp,rsp
  418432:	sub    rsp,0x20
  418436:	mov    QWORD PTR [rbp-0x18],rdi
  41843a:	mov    rax,QWORD PTR [rbp-0x18]
  41843e:	mov    ecx,0x4
  418443:	mov    edx,0x4
  418448:	mov    esi,0x0
  41844d:	mov    rdi,rax
  418450:	call   420f82 <flatcc_verify_field@@Base>
  418455:	mov    DWORD PTR [rbp-0x4],eax
  418458:	cmp    DWORD PTR [rbp-0x4],0x0
  41845c:	je     418463 <_start@@Base+0x13303>
  41845e:	mov    eax,DWORD PTR [rbp-0x4]
  418461:	jmp    418468 <_start@@Base+0x13308>
  418463:	mov    eax,0x0
  418468:	leave  
  418469:	ret    
  41846a:	push   rbp
  41846b:	mov    rbp,rsp
  41846e:	sub    rsp,0x20
  418472:	mov    QWORD PTR [rbp-0x18],rdi
  418476:	mov    rax,QWORD PTR [rbp-0x18]
  41847a:	lea    rcx,[rip+0xffffffffffffef82]        # 417403 <_start@@Base+0x122a3>
  418481:	mov    edx,0x0
  418486:	mov    esi,0x1
  41848b:	mov    rdi,rax
  41848e:	call   4219f4 <flatcc_verify_union_field@@Base>
  418493:	mov    DWORD PTR [rbp-0x4],eax
  418496:	cmp    DWORD PTR [rbp-0x4],0x0
  41849a:	je     4184a4 <_start@@Base+0x13344>
  41849c:	mov    eax,DWORD PTR [rbp-0x4]
  41849f:	jmp    418558 <_start@@Base+0x133f8>
  4184a4:	mov    rax,QWORD PTR [rbp-0x18]
  4184a8:	lea    rcx,[rip+0xffffffffffffef54]        # 417403 <_start@@Base+0x122a3>
  4184af:	mov    edx,0x0
  4184b4:	mov    esi,0x3
  4184b9:	mov    rdi,rax
  4184bc:	call   4219f4 <flatcc_verify_union_field@@Base>
  4184c1:	mov    DWORD PTR [rbp-0x4],eax
  4184c4:	cmp    DWORD PTR [rbp-0x4],0x0
  4184c8:	je     4184d2 <_start@@Base+0x13372>
  4184ca:	mov    eax,DWORD PTR [rbp-0x4]
  4184cd:	jmp    418558 <_start@@Base+0x133f8>
  4184d2:	mov    rax,QWORD PTR [rbp-0x18]
  4184d6:	lea    rcx,[rip+0xffffffffffffef26]        # 417403 <_start@@Base+0x122a3>
  4184dd:	mov    edx,0x0
  4184e2:	mov    esi,0x5
  4184e7:	mov    rdi,rax
  4184ea:	call   4219f4 <flatcc_verify_union_field@@Base>
  4184ef:	mov    DWORD PTR [rbp-0x4],eax
  4184f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4184f6:	je     4184fd <_start@@Base+0x1339d>
  4184f8:	mov    eax,DWORD PTR [rbp-0x4]
  4184fb:	jmp    418558 <_start@@Base+0x133f8>
  4184fd:	mov    rax,QWORD PTR [rbp-0x18]
  418501:	lea    rcx,[rip+0xffffffffffffeefb]        # 417403 <_start@@Base+0x122a3>
  418508:	mov    edx,0x0
  41850d:	mov    esi,0x7
  418512:	mov    rdi,rax
  418515:	call   4219f4 <flatcc_verify_union_field@@Base>
  41851a:	mov    DWORD PTR [rbp-0x4],eax
  41851d:	cmp    DWORD PTR [rbp-0x4],0x0
  418521:	je     418528 <_start@@Base+0x133c8>
  418523:	mov    eax,DWORD PTR [rbp-0x4]
  418526:	jmp    418558 <_start@@Base+0x133f8>
  418528:	mov    rax,QWORD PTR [rbp-0x18]
  41852c:	lea    rcx,[rip+0xffffffffffffeed0]        # 417403 <_start@@Base+0x122a3>
  418533:	mov    edx,0x0
  418538:	mov    esi,0x9
  41853d:	mov    rdi,rax
  418540:	call   421bfb <flatcc_verify_union_vector_field@@Base>
  418545:	mov    DWORD PTR [rbp-0x4],eax
  418548:	cmp    DWORD PTR [rbp-0x4],0x0
  41854c:	je     418553 <_start@@Base+0x133f3>
  41854e:	mov    eax,DWORD PTR [rbp-0x4]
  418551:	jmp    418558 <_start@@Base+0x133f8>
  418553:	mov    eax,0x0
  418558:	leave  
  418559:	ret    
  41855a:	push   rbp
  41855b:	mov    rbp,rsp
  41855e:	sub    rsp,0x50
  418562:	mov    QWORD PTR [rbp-0x38],rdi
  418566:	mov    QWORD PTR [rbp-0x40],rsi
  41856a:	mov    QWORD PTR [rbp-0x48],rdx
  41856e:	mov    QWORD PTR [rbp-0x50],rcx
  418572:	mov    rax,QWORD PTR fs:0x28
  41857b:	mov    QWORD PTR [rbp-0x8],rax
  41857f:	xor    eax,eax
  418581:	mov    rax,QWORD PTR [rbp-0x40]
  418585:	mov    QWORD PTR [rbp-0x28],rax
  418589:	cmp    QWORD PTR [rbp-0x38],0x0
  41858e:	je     4185ac <_start@@Base+0x1344c>
  418590:	mov    rdx,QWORD PTR [rbp-0x38]
  418594:	mov    rax,QWORD PTR [rbp-0x50]
  418598:	lea    rsi,[rip+0x1cf31]        # 4354d0 <_IO_stdin_used@@Base+0x4d0>
  41859f:	mov    rdi,rax
  4185a2:	mov    eax,0x0
  4185a7:	call   4050e0 <fprintf@plt>
  4185ac:	mov    DWORD PTR [rbp-0x2c],0x0
  4185b3:	jmp    4186a4 <_start@@Base+0x13544>
  4185b8:	mov    eax,DWORD PTR [rbp-0x2c]
  4185bb:	and    eax,0xf
  4185be:	test   eax,eax
  4185c0:	jne    418601 <_start@@Base+0x134a1>
  4185c2:	cmp    DWORD PTR [rbp-0x2c],0x0
  4185c6:	je     4185e4 <_start@@Base+0x13484>
  4185c8:	lea    rdx,[rbp-0x20]
  4185cc:	mov    rax,QWORD PTR [rbp-0x50]
  4185d0:	lea    rsi,[rip+0x1cefe]        # 4354d5 <_IO_stdin_used@@Base+0x4d5>
  4185d7:	mov    rdi,rax
  4185da:	mov    eax,0x0
  4185df:	call   4050e0 <fprintf@plt>
  4185e4:	mov    edx,DWORD PTR [rbp-0x2c]
  4185e7:	mov    rax,QWORD PTR [rbp-0x50]
  4185eb:	lea    rsi,[rip+0x1cee9]        # 4354db <_IO_stdin_used@@Base+0x4db>
  4185f2:	mov    rdi,rax
  4185f5:	mov    eax,0x0
  4185fa:	call   4050e0 <fprintf@plt>
  4185ff:	jmp    41861c <_start@@Base+0x134bc>
  418601:	mov    eax,DWORD PTR [rbp-0x2c]
  418604:	and    eax,0x7
  418607:	test   eax,eax
  418609:	jne    41861c <_start@@Base+0x134bc>
  41860b:	mov    rax,QWORD PTR [rbp-0x50]
  41860f:	mov    rsi,rax
  418612:	mov    edi,0x20
  418617:	call   4050a0 <fputc@plt>
  41861c:	mov    edx,DWORD PTR [rbp-0x2c]
  41861f:	mov    rax,QWORD PTR [rbp-0x28]
  418623:	add    rax,rdx
  418626:	movzx  eax,BYTE PTR [rax]
  418629:	movzx  edx,al
  41862c:	mov    rax,QWORD PTR [rbp-0x50]
  418630:	lea    rsi,[rip+0x1ceac]        # 4354e3 <_IO_stdin_used@@Base+0x4e3>
  418637:	mov    rdi,rax
  41863a:	mov    eax,0x0
  41863f:	call   4050e0 <fprintf@plt>
  418644:	mov    edx,DWORD PTR [rbp-0x2c]
  418647:	mov    rax,QWORD PTR [rbp-0x28]
  41864b:	add    rax,rdx
  41864e:	movzx  eax,BYTE PTR [rax]
  418651:	cmp    al,0x1f
  418653:	jbe    418666 <_start@@Base+0x13506>
  418655:	mov    edx,DWORD PTR [rbp-0x2c]
  418658:	mov    rax,QWORD PTR [rbp-0x28]
  41865c:	add    rax,rdx
  41865f:	movzx  eax,BYTE PTR [rax]
  418662:	cmp    al,0x7e
  418664:	jbe    418675 <_start@@Base+0x13515>
  418666:	mov    eax,DWORD PTR [rbp-0x2c]
  418669:	and    eax,0xf
  41866c:	mov    eax,eax
  41866e:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  418673:	jmp    418690 <_start@@Base+0x13530>
  418675:	mov    eax,DWORD PTR [rbp-0x2c]
  418678:	and    eax,0xf
  41867b:	mov    ecx,eax
  41867d:	mov    edx,DWORD PTR [rbp-0x2c]
  418680:	mov    rax,QWORD PTR [rbp-0x28]
  418684:	add    rax,rdx
  418687:	movzx  eax,BYTE PTR [rax]
  41868a:	mov    edx,ecx
  41868c:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  418690:	mov    eax,DWORD PTR [rbp-0x2c]
  418693:	and    eax,0xf
  418696:	add    eax,0x1
  418699:	mov    eax,eax
  41869b:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  4186a0:	add    DWORD PTR [rbp-0x2c],0x1
  4186a4:	mov    rax,QWORD PTR [rbp-0x48]
  4186a8:	cmp    eax,DWORD PTR [rbp-0x2c]
  4186ab:	ja     4185b8 <_start@@Base+0x13458>
  4186b1:	jmp    4186d4 <_start@@Base+0x13574>
  4186b3:	mov    rax,QWORD PTR [rbp-0x50]
  4186b7:	mov    rcx,rax
  4186ba:	mov    edx,0x3
  4186bf:	mov    esi,0x1
  4186c4:	lea    rdi,[rip+0x1ce1e]        # 4354e9 <_IO_stdin_used@@Base+0x4e9>
  4186cb:	call   405140 <fwrite@plt>
  4186d0:	add    DWORD PTR [rbp-0x2c],0x1
  4186d4:	mov    eax,DWORD PTR [rbp-0x2c]
  4186d7:	and    eax,0xf
  4186da:	test   eax,eax
  4186dc:	jne    4186b3 <_start@@Base+0x13553>
  4186de:	lea    rdx,[rbp-0x20]
  4186e2:	mov    rax,QWORD PTR [rbp-0x50]
  4186e6:	lea    rsi,[rip+0x1cde8]        # 4354d5 <_IO_stdin_used@@Base+0x4d5>
  4186ed:	mov    rdi,rax
  4186f0:	mov    eax,0x0
  4186f5:	call   4050e0 <fprintf@plt>
  4186fa:	nop
  4186fb:	mov    rax,QWORD PTR [rbp-0x8]
  4186ff:	xor    rax,QWORD PTR fs:0x28
  418708:	je     41870f <_start@@Base+0x135af>
  41870a:	call   405070 <__stack_chk_fail@plt>
  41870f:	leave  
  418710:	ret    

0000000000418711 <test_json@@Base>:
  418711:	push   rbp
  418712:	mov    rbp,rsp
  418715:	push   r12
  418717:	push   rbx
  418718:	sub    rsp,0x290
  41871f:	mov    QWORD PTR [rbp-0x278],rdi
  418726:	mov    QWORD PTR [rbp-0x280],rsi
  41872d:	mov    QWORD PTR [rbp-0x288],rdx
  418734:	mov    DWORD PTR [rbp-0x28c],ecx
  41873a:	mov    DWORD PTR [rbp-0x290],r8d
  418741:	mov    DWORD PTR [rbp-0x294],r9d
  418748:	mov    rax,QWORD PTR fs:0x28
  418751:	mov    QWORD PTR [rbp-0x18],rax
  418755:	xor    eax,eax
  418757:	mov    DWORD PTR [rbp-0x264],0xffffffff
  418761:	mov    QWORD PTR [rbp-0x248],0x0
  41876c:	mov    QWORD PTR [rbp-0x240],0x0
  418777:	lea    rax,[rbp-0x1a0]
  41877e:	mov    QWORD PTR [rbp-0x238],rax
  418785:	mov    rax,QWORD PTR [rbp-0x238]
  41878c:	mov    rdi,rax
  41878f:	call   41aa8a <flatcc_builder_init@@Base>
  418794:	lea    rax,[rbp-0x1f0]
  41879b:	mov    esi,0x0
  4187a0:	mov    rdi,rax
  4187a3:	call   4342d5 <flatcc_json_printer_init_dynamic_buffer@@Base>
  4187a8:	mov    edx,DWORD PTR [rbp-0x294]
  4187ae:	lea    rax,[rbp-0x1f0]
  4187b5:	mov    esi,edx
  4187b7:	mov    rdi,rax
  4187ba:	call   415862 <_start@@Base+0x10702>
  4187bf:	mov    rax,QWORD PTR [rbp-0x278]
  4187c6:	mov    rbx,QWORD PTR [rax+0x8]
  4187ca:	mov    rax,QWORD PTR [rbp-0x278]
  4187d1:	mov    r12,QWORD PTR [rax]
  4187d4:	mov    rax,QWORD PTR [rbp-0x280]
  4187db:	mov    rdi,rax
  4187de:	call   405060 <strlen@plt>
  4187e3:	mov    rdi,rax
  4187e6:	mov    ecx,DWORD PTR [rbp-0x290]
  4187ec:	mov    rdx,QWORD PTR [rbp-0x280]
  4187f3:	lea    rsi,[rbp-0x230]
  4187fa:	mov    rax,QWORD PTR [rbp-0x238]
  418801:	sub    rsp,0x8
  418805:	push   rbx
  418806:	mov    r9,r12
  418809:	mov    r8d,ecx
  41880c:	mov    rcx,rdi
  41880f:	mov    rdi,rax
  418812:	call   428595 <flatcc_json_parser_table_as_root@@Base>
  418817:	add    rsp,0x10
  41881b:	mov    DWORD PTR [rbp-0x25c],eax
  418821:	mov    eax,DWORD PTR [rbp-0x25c]
  418827:	cmp    eax,DWORD PTR [rbp-0x28c]
  41882d:	je     4189f0 <test_json@@Base+0x2df>
  418833:	cmp    DWORD PTR [rbp-0x28c],0x0
  41883a:	je     418934 <test_json@@Base+0x223>
  418840:	cmp    DWORD PTR [rbp-0x25c],0x0
  418847:	je     4188d9 <test_json@@Base+0x1c8>
  41884d:	mov    eax,DWORD PTR [rbp-0x25c]
  418853:	mov    edi,eax
  418855:	call   425a16 <flatcc_json_parser_error_string@@Base>
  41885a:	mov    rdx,rax
  41885d:	mov    rax,QWORD PTR [rip+0x2b784]        # 443fe8 <stderr@GLIBC_2.2.5>
  418864:	mov    rax,QWORD PTR [rax]
  418867:	mov    rcx,rdx
  41886a:	mov    edx,DWORD PTR [rbp+0x10]
  41886d:	lea    rsi,[rip+0x1cc84]        # 4354f8 <_IO_stdin_used@@Base+0x4f8>
  418874:	mov    rdi,rax
  418877:	mov    eax,0x0
  41887c:	call   4050e0 <fprintf@plt>
  418881:	mov    eax,DWORD PTR [rbp-0x28c]
  418887:	mov    edi,eax
  418889:	call   425a16 <flatcc_json_parser_error_string@@Base>
  41888e:	mov    rdx,rax
  418891:	mov    rax,QWORD PTR [rip+0x2b750]        # 443fe8 <stderr@GLIBC_2.2.5>
  418898:	mov    rax,QWORD PTR [rax]
  41889b:	lea    rsi,[rip+0x1cc7e]        # 435520 <_IO_stdin_used@@Base+0x520>
  4188a2:	mov    rdi,rax
  4188a5:	mov    eax,0x0
  4188aa:	call   4050e0 <fprintf@plt>
  4188af:	mov    rax,QWORD PTR [rip+0x2b732]        # 443fe8 <stderr@GLIBC_2.2.5>
  4188b6:	mov    rax,QWORD PTR [rax]
  4188b9:	mov    rdx,QWORD PTR [rbp-0x280]
  4188c0:	lea    rsi,[rip+0x1cc78]        # 43553f <_IO_stdin_used@@Base+0x53f>
  4188c7:	mov    rdi,rax
  4188ca:	mov    eax,0x0
  4188cf:	call   4050e0 <fprintf@plt>
  4188d4:	jmp    41898d <test_json@@Base+0x27c>
  4188d9:	mov    eax,DWORD PTR [rbp-0x28c]
  4188df:	mov    edi,eax
  4188e1:	call   425a16 <flatcc_json_parser_error_string@@Base>
  4188e6:	mov    rdx,rax
  4188e9:	mov    rax,QWORD PTR [rip+0x2b6f8]        # 443fe8 <stderr@GLIBC_2.2.5>
  4188f0:	mov    rax,QWORD PTR [rax]
  4188f3:	mov    rcx,rdx
  4188f6:	mov    edx,DWORD PTR [rbp+0x10]
  4188f9:	lea    rsi,[rip+0x1cc48]        # 435548 <_IO_stdin_used@@Base+0x548>
  418900:	mov    rdi,rax
  418903:	mov    eax,0x0
  418908:	call   4050e0 <fprintf@plt>
  41890d:	mov    rax,QWORD PTR [rip+0x2b6d4]        # 443fe8 <stderr@GLIBC_2.2.5>
  418914:	mov    rax,QWORD PTR [rax]
  418917:	mov    rdx,QWORD PTR [rbp-0x280]
  41891e:	lea    rsi,[rip+0x1cc1a]        # 43553f <_IO_stdin_used@@Base+0x53f>
  418925:	mov    rdi,rax
  418928:	mov    eax,0x0
  41892d:	call   4050e0 <fprintf@plt>
  418932:	jmp    41898d <test_json@@Base+0x27c>
  418934:	mov    eax,DWORD PTR [rbp-0x25c]
  41893a:	mov    edi,eax
  41893c:	call   425a16 <flatcc_json_parser_error_string@@Base>
  418941:	mov    rdx,rax
  418944:	mov    rax,QWORD PTR [rip+0x2b69d]        # 443fe8 <stderr@GLIBC_2.2.5>
  41894b:	mov    rax,QWORD PTR [rax]
  41894e:	mov    rcx,rdx
  418951:	mov    edx,DWORD PTR [rbp+0x10]
  418954:	lea    rsi,[rip+0x1cc2d]        # 435588 <_IO_stdin_used@@Base+0x588>
  41895b:	mov    rdi,rax
  41895e:	mov    eax,0x0
  418963:	call   4050e0 <fprintf@plt>
  418968:	mov    rax,QWORD PTR [rip+0x2b679]        # 443fe8 <stderr@GLIBC_2.2.5>
  41896f:	mov    rax,QWORD PTR [rax]
  418972:	mov    rdx,QWORD PTR [rbp-0x280]
  418979:	lea    rsi,[rip+0x1cbbf]        # 43553f <_IO_stdin_used@@Base+0x53f>
  418980:	mov    rdi,rax
  418983:	mov    eax,0x0
  418988:	call   4050e0 <fprintf@plt>
  41898d:	mov    DWORD PTR [rbp-0x260],0x0
  418997:	jmp    4189b7 <test_json@@Base+0x2a6>
  418999:	mov    rax,QWORD PTR [rip+0x2b648]        # 443fe8 <stderr@GLIBC_2.2.5>
  4189a0:	mov    rax,QWORD PTR [rax]
  4189a3:	mov    rsi,rax
  4189a6:	mov    edi,0x20
  4189ab:	call   4050a0 <fputc@plt>
  4189b0:	add    DWORD PTR [rbp-0x260],0x1
  4189b7:	mov    eax,DWORD PTR [rbp-0x218]
  4189bd:	sub    eax,0x1
  4189c0:	cmp    eax,DWORD PTR [rbp-0x260]
  4189c6:	jg     418999 <test_json@@Base+0x288>
  4189c8:	mov    rax,QWORD PTR [rip+0x2b619]        # 443fe8 <stderr@GLIBC_2.2.5>
  4189cf:	mov    rax,QWORD PTR [rax]
  4189d2:	mov    rcx,rax
  4189d5:	mov    edx,0x2
  4189da:	mov    esi,0x1
  4189df:	lea    rdi,[rip+0x1cbc3]        # 4355a9 <_IO_stdin_used@@Base+0x5a9>
  4189e6:	call   405140 <fwrite@plt>
  4189eb:	jmp    418c00 <test_json@@Base+0x4ef>
  4189f0:	cmp    DWORD PTR [rbp-0x28c],0x0
  4189f7:	je     418a08 <test_json@@Base+0x2f7>
  4189f9:	mov    DWORD PTR [rbp-0x264],0x0
  418a03:	jmp    418bbc <test_json@@Base+0x4ab>
  418a08:	lea    rdx,[rbp-0x258]
  418a0f:	mov    rax,QWORD PTR [rbp-0x238]
  418a16:	mov    rsi,rdx
  418a19:	mov    rdi,rax
  418a1c:	call   41f491 <flatcc_builder_finalize_aligned_buffer@@Base>
  418a21:	mov    QWORD PTR [rbp-0x248],rax
  418a28:	mov    rax,QWORD PTR [rbp-0x278]
  418a2f:	mov    rcx,QWORD PTR [rax+0x18]
  418a33:	mov    rax,QWORD PTR [rbp-0x278]
  418a3a:	mov    rdx,QWORD PTR [rax]
  418a3d:	mov    rsi,QWORD PTR [rbp-0x258]
  418a44:	mov    rax,QWORD PTR [rbp-0x248]
  418a4b:	mov    rdi,rax
  418a4e:	call   4216b7 <flatcc_verify_table_as_root@@Base>
  418a53:	mov    DWORD PTR [rbp-0x264],eax
  418a59:	cmp    DWORD PTR [rbp-0x264],0x0
  418a60:	je     418aa2 <test_json@@Base+0x391>
  418a62:	mov    eax,DWORD PTR [rbp-0x264]
  418a68:	mov    edi,eax
  418a6a:	call   420185 <flatcc_verify_error_string@@Base>
  418a6f:	mov    rdx,rax
  418a72:	mov    rax,QWORD PTR [rip+0x2b56f]        # 443fe8 <stderr@GLIBC_2.2.5>
  418a79:	mov    rax,QWORD PTR [rax]
  418a7c:	mov    r8,rdx
  418a7f:	mov    ecx,DWORD PTR [rbp+0x10]
  418a82:	lea    rdx,[rip+0x1cb27]        # 4355b0 <_IO_stdin_used@@Base+0x5b0>
  418a89:	lea    rsi,[rip+0x1cb88]        # 435618 <_IO_stdin_used@@Base+0x618>
  418a90:	mov    rdi,rax
  418a93:	mov    eax,0x0
  418a98:	call   4050e0 <fprintf@plt>
  418a9d:	jmp    418c00 <test_json@@Base+0x4ef>
  418aa2:	mov    rax,QWORD PTR [rbp-0x278]
  418aa9:	mov    rdi,QWORD PTR [rax+0x10]
  418aad:	mov    rax,QWORD PTR [rbp-0x278]
  418ab4:	mov    rcx,QWORD PTR [rax]
  418ab7:	mov    rdx,QWORD PTR [rbp-0x258]
  418abe:	mov    rsi,QWORD PTR [rbp-0x248]
  418ac5:	lea    rax,[rbp-0x1f0]
  418acc:	mov    r8,rdi
  418acf:	mov    rdi,rax
  418ad2:	call   433aca <flatcc_json_printer_table_as_root@@Base>
  418ad7:	lea    rdx,[rbp-0x250]
  418ade:	lea    rax,[rbp-0x1f0]
  418ae5:	mov    rsi,rdx
  418ae8:	mov    rdi,rax
  418aeb:	call   4343ba <flatcc_json_printer_get_buffer@@Base>
  418af0:	mov    QWORD PTR [rbp-0x240],rax
  418af7:	cmp    QWORD PTR [rbp-0x240],0x0
  418aff:	je     418b22 <test_json@@Base+0x411>
  418b01:	mov    rdx,QWORD PTR [rbp-0x240]
  418b08:	mov    rax,QWORD PTR [rbp-0x288]
  418b0f:	mov    rsi,rdx
  418b12:	mov    rdi,rax
  418b15:	call   4050d0 <strcmp@plt>
  418b1a:	test   eax,eax
  418b1c:	je     418bb2 <test_json@@Base+0x4a1>
  418b22:	mov    rax,QWORD PTR [rip+0x2b4bf]        # 443fe8 <stderr@GLIBC_2.2.5>
  418b29:	mov    rax,QWORD PTR [rax]
  418b2c:	mov    edx,DWORD PTR [rbp+0x10]
  418b2f:	lea    rsi,[rip+0x1cb0a]        # 435640 <_IO_stdin_used@@Base+0x640>
  418b36:	mov    rdi,rax
  418b39:	mov    eax,0x0
  418b3e:	call   4050e0 <fprintf@plt>
  418b43:	mov    rax,QWORD PTR [rip+0x2b49e]        # 443fe8 <stderr@GLIBC_2.2.5>
  418b4a:	mov    rax,QWORD PTR [rax]
  418b4d:	mov    rdx,QWORD PTR [rbp-0x240]
  418b54:	lea    rsi,[rip+0x1c9e4]        # 43553f <_IO_stdin_used@@Base+0x53f>
  418b5b:	mov    rdi,rax
  418b5e:	mov    eax,0x0
  418b63:	call   4050e0 <fprintf@plt>
  418b68:	mov    rax,QWORD PTR [rip+0x2b479]        # 443fe8 <stderr@GLIBC_2.2.5>
  418b6f:	mov    rax,QWORD PTR [rax]
  418b72:	mov    rcx,rax
  418b75:	mov    edx,0xa
  418b7a:	mov    esi,0x1
  418b7f:	lea    rdi,[rip+0x1caef]        # 435675 <_IO_stdin_used@@Base+0x675>
  418b86:	call   405140 <fwrite@plt>
  418b8b:	mov    rax,QWORD PTR [rip+0x2b456]        # 443fe8 <stderr@GLIBC_2.2.5>
  418b92:	mov    rax,QWORD PTR [rax]
  418b95:	mov    rdx,QWORD PTR [rbp-0x288]
  418b9c:	lea    rsi,[rip+0x1c99c]        # 43553f <_IO_stdin_used@@Base+0x53f>
  418ba3:	mov    rdi,rax
  418ba6:	mov    eax,0x0
  418bab:	call   4050e0 <fprintf@plt>
  418bb0:	jmp    418c00 <test_json@@Base+0x4ef>
  418bb2:	mov    DWORD PTR [rbp-0x264],0x0
  418bbc:	mov    rax,QWORD PTR [rbp-0x248]
  418bc3:	mov    rdi,rax
  418bc6:	call   41f588 <flatcc_builder_aligned_free@@Base>
  418bcb:	mov    rax,QWORD PTR [rbp-0x238]
  418bd2:	mov    rdi,rax
  418bd5:	call   41acee <flatcc_builder_clear@@Base>
  418bda:	lea    rax,[rbp-0x1f0]
  418be1:	mov    rdi,rax
  418be4:	call   434455 <flatcc_json_printer_clear@@Base>
  418be9:	mov    eax,DWORD PTR [rbp-0x264]
  418bef:	mov    rbx,QWORD PTR [rbp-0x18]
  418bf3:	xor    rbx,QWORD PTR fs:0x28
  418bfc:	je     418c45 <test_json@@Base+0x534>
  418bfe:	jmp    418c40 <test_json@@Base+0x52f>
  418c00:	cmp    QWORD PTR [rbp-0x248],0x0
  418c08:	je     418c31 <test_json@@Base+0x520>
  418c0a:	mov    rax,QWORD PTR [rip+0x2b3d7]        # 443fe8 <stderr@GLIBC_2.2.5>
  418c11:	mov    rcx,QWORD PTR [rax]
  418c14:	mov    rdx,QWORD PTR [rbp-0x258]
  418c1b:	mov    rax,QWORD PTR [rbp-0x248]
  418c22:	mov    rsi,rax
  418c25:	lea    rdi,[rip+0x1ca54]        # 435680 <_IO_stdin_used@@Base+0x680>
  418c2c:	call   41855a <_start@@Base+0x133fa>
  418c31:	mov    DWORD PTR [rbp-0x264],0xffffffff
  418c3b:	jmp    418bbc <test_json@@Base+0x4ab>
  418c40:	call   405070 <__stack_chk_fail@plt>
  418c45:	lea    rsp,[rbp-0x10]
  418c49:	pop    rbx
  418c4a:	pop    r12
  418c4c:	pop    rbp
  418c4d:	ret    

0000000000418c4e <edge_case_tests@@Base>:
  418c4e:	push   rbp
  418c4f:	mov    rbp,rsp
  418c52:	sub    rsp,0x10
  418c56:	mov    DWORD PTR [rbp-0xc],0x0
  418c5d:	lea    rax,[rip+0x2b13c]        # 443da0 <flatcc_builder_padding_base@@Base+0xbb40>
  418c64:	mov    QWORD PTR [rbp-0x8],rax
  418c68:	mov    rax,QWORD PTR [rbp-0x8]
  418c6c:	sub    rsp,0x8
  418c70:	push   0x9e
  418c75:	mov    r9d,0x0
  418c7b:	mov    r8d,0x0
  418c81:	mov    ecx,0x0
  418c86:	lea    rdx,[rip+0x1ca01]        # 43568e <_IO_stdin_used@@Base+0x68e>
  418c8d:	lea    rsi,[rip+0x1ca1c]        # 4356b0 <_IO_stdin_used@@Base+0x6b0>
  418c94:	mov    rdi,rax
  418c97:	call   418711 <test_json@@Base>
  418c9c:	add    rsp,0x10
  418ca0:	or     DWORD PTR [rbp-0xc],eax
  418ca3:	mov    rax,QWORD PTR [rbp-0x8]
  418ca7:	sub    rsp,0x8
  418cab:	push   0xa8
  418cb0:	mov    r9d,0x0
  418cb6:	mov    r8d,0x2
  418cbc:	mov    ecx,0x0
  418cc1:	lea    rdx,[rip+0x1ca20]        # 4356e8 <_IO_stdin_used@@Base+0x6e8>
  418cc8:	lea    rsi,[rip+0x1ca41]        # 435710 <_IO_stdin_used@@Base+0x710>
  418ccf:	mov    rdi,rax
  418cd2:	call   418711 <test_json@@Base>
  418cd7:	add    rsp,0x10
  418cdb:	or     DWORD PTR [rbp-0xc],eax
  418cde:	mov    rax,QWORD PTR [rbp-0x8]
  418ce2:	sub    rsp,0x8
  418ce6:	push   0xac
  418ceb:	mov    r9d,0x2
  418cf1:	mov    r8d,0x0
  418cf7:	mov    ecx,0x0
  418cfc:	lea    rdx,[rip+0x1ca2e]        # 435731 <_IO_stdin_used@@Base+0x731>
  418d03:	lea    rsi,[rip+0x1ca46]        # 435750 <_IO_stdin_used@@Base+0x750>
  418d0a:	mov    rdi,rax
  418d0d:	call   418711 <test_json@@Base>
  418d12:	add    rsp,0x10
  418d16:	or     DWORD PTR [rbp-0xc],eax
  418d19:	mov    rax,QWORD PTR [rbp-0x8]
  418d1d:	sub    rsp,0x8
  418d21:	push   0xb0
  418d26:	mov    r9d,0x4
  418d2c:	mov    r8d,0x2
  418d32:	mov    ecx,0x0
  418d37:	lea    rdx,[rip+0x1ca39]        # 435777 <_IO_stdin_used@@Base+0x777>
  418d3e:	lea    rsi,[rip+0x1c9cb]        # 435710 <_IO_stdin_used@@Base+0x710>
  418d45:	mov    rdi,rax
  418d48:	call   418711 <test_json@@Base>
  418d4d:	add    rsp,0x10
  418d51:	or     DWORD PTR [rbp-0xc],eax
  418d54:	mov    rax,QWORD PTR [rbp-0x8]
  418d58:	sub    rsp,0x8
  418d5c:	push   0xb4
  418d61:	mov    r9d,0x8
  418d67:	mov    r8d,0x0
  418d6d:	mov    ecx,0x0
  418d72:	lea    rdx,[rip+0x1ca17]        # 435790 <_IO_stdin_used@@Base+0x790>
  418d79:	lea    rsi,[rip+0x1cb28]        # 4358a8 <_IO_stdin_used@@Base+0x8a8>
  418d80:	mov    rdi,rax
  418d83:	call   418711 <test_json@@Base>
  418d88:	add    rsp,0x10
  418d8c:	or     DWORD PTR [rbp-0xc],eax
  418d8f:	mov    rax,QWORD PTR [rbp-0x8]
  418d93:	sub    rsp,0x8
  418d97:	push   0xc3
  418d9c:	mov    r9d,0x0
  418da2:	mov    r8d,0x2
  418da8:	mov    ecx,0x0
  418dad:	lea    rdx,[rip+0x1c934]        # 4356e8 <_IO_stdin_used@@Base+0x6e8>
  418db4:	lea    rsi,[rip+0x1cb15]        # 4358d0 <_IO_stdin_used@@Base+0x8d0>
  418dbb:	mov    rdi,rax
  418dbe:	call   418711 <test_json@@Base>
  418dc3:	add    rsp,0x10
  418dc7:	or     DWORD PTR [rbp-0xc],eax
  418dca:	mov    rax,QWORD PTR [rbp-0x8]
  418dce:	sub    rsp,0x8
  418dd2:	push   0xc7
  418dd7:	mov    r9d,0x0
  418ddd:	mov    r8d,0x1
  418de3:	mov    ecx,0x0
  418de8:	lea    rdx,[rip+0x1cb07]        # 4358f6 <_IO_stdin_used@@Base+0x8f6>
  418def:	lea    rsi,[rip+0x1cb22]        # 435918 <_IO_stdin_used@@Base+0x918>
  418df6:	mov    rdi,rax
  418df9:	call   418711 <test_json@@Base>
  418dfe:	add    rsp,0x10
  418e02:	or     DWORD PTR [rbp-0xc],eax
  418e05:	mov    rax,QWORD PTR [rbp-0x8]
  418e09:	sub    rsp,0x8
  418e0d:	push   0xcb
  418e12:	mov    r9d,0x1
  418e18:	mov    r8d,0x1
  418e1e:	mov    ecx,0x0
  418e23:	lea    rdx,[rip+0x1cb20]        # 43594a <_IO_stdin_used@@Base+0x94a>
  418e2a:	lea    rsi,[rip+0x1cae7]        # 435918 <_IO_stdin_used@@Base+0x918>
  418e31:	mov    rdi,rax
  418e34:	call   418711 <test_json@@Base>
  418e39:	add    rsp,0x10
  418e3d:	or     DWORD PTR [rbp-0xc],eax
  418e40:	mov    rax,QWORD PTR [rbp-0x8]
  418e44:	sub    rsp,0x8
  418e48:	push   0xd1
  418e4d:	mov    r9d,0x0
  418e53:	mov    r8d,0x1
  418e59:	mov    ecx,0x0
  418e5e:	lea    rdx,[rip+0x1ca91]        # 4358f6 <_IO_stdin_used@@Base+0x8f6>
  418e65:	lea    rsi,[rip+0x1cafc]        # 435968 <_IO_stdin_used@@Base+0x968>
  418e6c:	mov    rdi,rax
  418e6f:	call   418711 <test_json@@Base>
  418e74:	add    rsp,0x10
  418e78:	or     DWORD PTR [rbp-0xc],eax
  418e7b:	mov    eax,DWORD PTR [rbp-0xc]
  418e7e:	leave  
  418e7f:	ret    

0000000000418e80 <error_case_tests@@Base>:
  418e80:	push   rbp
  418e81:	mov    rbp,rsp
  418e84:	sub    rsp,0x10
  418e88:	mov    DWORD PTR [rbp-0xc],0x0
  418e8f:	lea    rax,[rip+0x2af0a]        # 443da0 <flatcc_builder_padding_base@@Base+0xbb40>
  418e96:	mov    QWORD PTR [rbp-0x8],rax
  418e9a:	mov    rax,QWORD PTR [rbp-0x8]
  418e9e:	sub    rsp,0x8
  418ea2:	push   0x11d
  418ea7:	mov    r9d,0x0
  418ead:	mov    r8d,0x0
  418eb3:	mov    ecx,0xd
  418eb8:	mov    edx,0x0
  418ebd:	lea    rsi,[rip+0x1cb15]        # 4359d9 <_IO_stdin_used@@Base+0x9d9>
  418ec4:	mov    rdi,rax
  418ec7:	call   418711 <test_json@@Base>
  418ecc:	add    rsp,0x10
  418ed0:	or     DWORD PTR [rbp-0xc],eax
  418ed3:	mov    rax,QWORD PTR [rbp-0x8]
  418ed7:	sub    rsp,0x8
  418edb:	push   0x11f
  418ee0:	mov    r9d,0x0
  418ee6:	mov    r8d,0x0
  418eec:	mov    ecx,0xd
  418ef1:	mov    edx,0x0
  418ef6:	lea    rsi,[rip+0x1cafb]        # 4359f8 <_IO_stdin_used@@Base+0x9f8>
  418efd:	mov    rdi,rax
  418f00:	call   418711 <test_json@@Base>
  418f05:	add    rsp,0x10
  418f09:	or     DWORD PTR [rbp-0xc],eax
  418f0c:	mov    rax,QWORD PTR [rbp-0x8]
  418f10:	sub    rsp,0x8
  418f14:	push   0x121
  418f19:	mov    r9d,0x0
  418f1f:	mov    r8d,0x0
  418f25:	mov    ecx,0xd
  418f2a:	mov    edx,0x0
  418f2f:	lea    rsi,[rip+0x1cb2a]        # 435a60 <_IO_stdin_used@@Base+0xa60>
  418f36:	mov    rdi,rax
  418f39:	call   418711 <test_json@@Base>
  418f3e:	add    rsp,0x10
  418f42:	or     DWORD PTR [rbp-0xc],eax
  418f45:	mov    rax,QWORD PTR [rbp-0x8]
  418f49:	sub    rsp,0x8
  418f4d:	push   0x123
  418f52:	mov    r9d,0x0
  418f58:	mov    r8d,0x0
  418f5e:	mov    ecx,0xd
  418f63:	mov    edx,0x0
  418f68:	lea    rsi,[rip+0x1cb51]        # 435ac0 <_IO_stdin_used@@Base+0xac0>
  418f6f:	mov    rdi,rax
  418f72:	call   418711 <test_json@@Base>
  418f77:	add    rsp,0x10
  418f7b:	or     DWORD PTR [rbp-0xc],eax
  418f7e:	mov    rax,QWORD PTR [rbp-0x8]
  418f82:	sub    rsp,0x8
  418f86:	push   0x125
  418f8b:	mov    r9d,0x0
  418f91:	mov    r8d,0x0
  418f97:	mov    ecx,0xd
  418f9c:	mov    edx,0x0
  418fa1:	lea    rsi,[rip+0x1cb70]        # 435b18 <_IO_stdin_used@@Base+0xb18>
  418fa8:	mov    rdi,rax
  418fab:	call   418711 <test_json@@Base>
  418fb0:	add    rsp,0x10
  418fb4:	or     DWORD PTR [rbp-0xc],eax
  418fb7:	mov    rax,QWORD PTR [rbp-0x8]
  418fbb:	sub    rsp,0x8
  418fbf:	push   0x128
  418fc4:	mov    r9d,0x0
  418fca:	mov    r8d,0x0
  418fd0:	mov    ecx,0xd
  418fd5:	mov    edx,0x0
  418fda:	lea    rsi,[rip+0x1cb8f]        # 435b70 <_IO_stdin_used@@Base+0xb70>
  418fe1:	mov    rdi,rax
  418fe4:	call   418711 <test_json@@Base>
  418fe9:	add    rsp,0x10
  418fed:	or     DWORD PTR [rbp-0xc],eax
  418ff0:	mov    rax,QWORD PTR [rbp-0x8]
  418ff4:	sub    rsp,0x8
  418ff8:	push   0x12b
  418ffd:	mov    r9d,0x0
  419003:	mov    r8d,0x0
  419009:	mov    ecx,0xd
  41900e:	mov    edx,0x0
  419013:	lea    rsi,[rip+0x1cbf6]        # 435c10 <_IO_stdin_used@@Base+0xc10>
  41901a:	mov    rdi,rax
  41901d:	call   418711 <test_json@@Base>
  419022:	add    rsp,0x10
  419026:	or     DWORD PTR [rbp-0xc],eax
  419029:	mov    rax,QWORD PTR [rbp-0x8]
  41902d:	sub    rsp,0x8
  419031:	push   0x12f
  419036:	mov    r9d,0x0
  41903c:	mov    r8d,0x0
  419042:	mov    ecx,0xd
  419047:	mov    edx,0x0
  41904c:	lea    rsi,[rip+0x1cc5d]        # 435cb0 <_IO_stdin_used@@Base+0xcb0>
  419053:	mov    rdi,rax
  419056:	call   418711 <test_json@@Base>
  41905b:	add    rsp,0x10
  41905f:	or     DWORD PTR [rbp-0xc],eax
  419062:	mov    rax,QWORD PTR [rbp-0x8]
  419066:	sub    rsp,0x8
  41906a:	push   0x133
  41906f:	mov    r9d,0x0
  419075:	mov    r8d,0x0
  41907b:	mov    ecx,0xd
  419080:	mov    edx,0x0
  419085:	lea    rsi,[rip+0x1ccec]        # 435d78 <_IO_stdin_used@@Base+0xd78>
  41908c:	mov    rdi,rax
  41908f:	call   418711 <test_json@@Base>
  419094:	add    rsp,0x10
  419098:	or     DWORD PTR [rbp-0xc],eax
  41909b:	mov    rax,QWORD PTR [rbp-0x8]
  41909f:	sub    rsp,0x8
  4190a3:	push   0x137
  4190a8:	mov    r9d,0x0
  4190ae:	mov    r8d,0x0
  4190b4:	mov    ecx,0x5
  4190b9:	mov    edx,0x0
  4190be:	lea    rsi,[rip+0x1cd7a]        # 435e3f <_IO_stdin_used@@Base+0xe3f>
  4190c5:	mov    rdi,rax
  4190c8:	call   418711 <test_json@@Base>
  4190cd:	add    rsp,0x10
  4190d1:	or     DWORD PTR [rbp-0xc],eax
  4190d4:	mov    rax,QWORD PTR [rbp-0x8]
  4190d8:	sub    rsp,0x8
  4190dc:	push   0x13a
  4190e1:	mov    r9d,0x0
  4190e7:	mov    r8d,0x0
  4190ed:	mov    ecx,0x5
  4190f2:	mov    edx,0x0
  4190f7:	lea    rsi,[rip+0x1cd5a]        # 435e58 <_IO_stdin_used@@Base+0xe58>
  4190fe:	mov    rdi,rax
  419101:	call   418711 <test_json@@Base>
  419106:	add    rsp,0x10
  41910a:	or     DWORD PTR [rbp-0xc],eax
  41910d:	mov    rax,QWORD PTR [rbp-0x8]
  419111:	sub    rsp,0x8
  419115:	push   0x13d
  41911a:	mov    r9d,0x0
  419120:	mov    r8d,0x0
  419126:	mov    ecx,0x5
  41912b:	mov    edx,0x0
  419130:	lea    rsi,[rip+0x1cd49]        # 435e80 <_IO_stdin_used@@Base+0xe80>
  419137:	mov    rdi,rax
  41913a:	call   418711 <test_json@@Base>
  41913f:	add    rsp,0x10
  419143:	or     DWORD PTR [rbp-0xc],eax
  419146:	mov    eax,DWORD PTR [rbp-0xc]
  419149:	leave  
  41914a:	ret    

000000000041914b <base64_tests@@Base>:
  41914b:	push   rbp
  41914c:	mov    rbp,rsp
  41914f:	sub    rsp,0x10
  419153:	mov    DWORD PTR [rbp-0xc],0x0
  41915a:	lea    rax,[rip+0x2ac3f]        # 443da0 <flatcc_builder_padding_base@@Base+0xbb40>
  419161:	mov    QWORD PTR [rbp-0x8],rax
  419165:	mov    rax,QWORD PTR [rbp-0x8]
  419169:	sub    rsp,0x8
  41916d:	push   0x171
  419172:	mov    r9d,0x0
  419178:	mov    r8d,0x0
  41917e:	mov    ecx,0x0
  419183:	lea    rdx,[rip+0x1c5ed]        # 435777 <_IO_stdin_used@@Base+0x777>
  41918a:	lea    rsi,[rip+0x1cd27]        # 435eb8 <_IO_stdin_used@@Base+0xeb8>
  419191:	mov    rdi,rax
  419194:	call   418711 <test_json@@Base>
  419199:	add    rsp,0x10
  41919d:	or     DWORD PTR [rbp-0xc],eax
  4191a0:	mov    rax,QWORD PTR [rbp-0x8]
  4191a4:	sub    rsp,0x8
  4191a8:	push   0x174
  4191ad:	mov    r9d,0x0
  4191b3:	mov    r8d,0x0
  4191b9:	mov    ecx,0x0
  4191be:	lea    rdx,[rip+0x1cd0b]        # 435ed0 <_IO_stdin_used@@Base+0xed0>
  4191c5:	lea    rsi,[rip+0x1cd2c]        # 435ef8 <_IO_stdin_used@@Base+0xef8>
  4191cc:	mov    rdi,rax
  4191cf:	call   418711 <test_json@@Base>
  4191d4:	add    rsp,0x10
  4191d8:	or     DWORD PTR [rbp-0xc],eax
  4191db:	mov    rax,QWORD PTR [rbp-0x8]
  4191df:	sub    rsp,0x8
  4191e3:	push   0x178
  4191e8:	mov    r9d,0x0
  4191ee:	mov    r8d,0x0
  4191f4:	mov    ecx,0x0
  4191f9:	lea    rdx,[rip+0x1cd20]        # 435f20 <_IO_stdin_used@@Base+0xf20>
  419200:	lea    rsi,[rip+0x1cdd1]        # 435fd8 <_IO_stdin_used@@Base+0xfd8>
  419207:	mov    rdi,rax
  41920a:	call   418711 <test_json@@Base>
  41920f:	add    rsp,0x10
  419213:	or     DWORD PTR [rbp-0xc],eax
  419216:	mov    rax,QWORD PTR [rbp-0x8]
  41921a:	sub    rsp,0x8
  41921e:	push   0x17b
  419223:	mov    r9d,0x0
  419229:	mov    r8d,0x0
  41922f:	mov    ecx,0x0
  419234:	lea    rdx,[rip+0x1ce5d]        # 436098 <_IO_stdin_used@@Base+0x1098>
  41923b:	lea    rsi,[rip+0x1cf0e]        # 436150 <_IO_stdin_used@@Base+0x1150>
  419242:	mov    rdi,rax
  419245:	call   418711 <test_json@@Base>
  41924a:	add    rsp,0x10
  41924e:	or     DWORD PTR [rbp-0xc],eax
  419251:	mov    rax,QWORD PTR [rbp-0x8]
  419255:	sub    rsp,0x8
  419259:	push   0x17e
  41925e:	mov    r9d,0x0
  419264:	mov    r8d,0x0
  41926a:	mov    ecx,0x0
  41926f:	lea    rdx,[rip+0x1ccaa]        # 435f20 <_IO_stdin_used@@Base+0xf20>
  419276:	lea    rsi,[rip+0x1cf93]        # 436210 <_IO_stdin_used@@Base+0x1210>
  41927d:	mov    rdi,rax
  419280:	call   418711 <test_json@@Base>
  419285:	add    rsp,0x10
  419289:	or     DWORD PTR [rbp-0xc],eax
  41928c:	mov    rax,QWORD PTR [rbp-0x8]
  419290:	sub    rsp,0x8
  419294:	push   0x181
  419299:	mov    r9d,0x0
  41929f:	mov    r8d,0x0
  4192a5:	mov    ecx,0x0
  4192aa:	lea    rdx,[rip+0x1cde7]        # 436098 <_IO_stdin_used@@Base+0x1098>
  4192b1:	lea    rsi,[rip+0x1d010]        # 4362c8 <_IO_stdin_used@@Base+0x12c8>
  4192b8:	mov    rdi,rax
  4192bb:	call   418711 <test_json@@Base>
  4192c0:	add    rsp,0x10
  4192c4:	or     DWORD PTR [rbp-0xc],eax
  4192c7:	mov    rax,QWORD PTR [rbp-0x8]
  4192cb:	sub    rsp,0x8
  4192cf:	push   0x184
  4192d4:	mov    r9d,0x0
  4192da:	mov    r8d,0x0
  4192e0:	mov    ecx,0x1f
  4192e5:	mov    edx,0x0
  4192ea:	lea    rsi,[rip+0x1d097]        # 436388 <_IO_stdin_used@@Base+0x1388>
  4192f1:	mov    rdi,rax
  4192f4:	call   418711 <test_json@@Base>
  4192f9:	add    rsp,0x10
  4192fd:	or     DWORD PTR [rbp-0xc],eax
  419300:	mov    rax,QWORD PTR [rbp-0x8]
  419304:	sub    rsp,0x8
  419308:	push   0x187
  41930d:	mov    r9d,0x0
  419313:	mov    r8d,0x0
  419319:	mov    ecx,0x20
  41931e:	mov    edx,0x0
  419323:	lea    rsi,[rip+0x1d11e]        # 436448 <_IO_stdin_used@@Base+0x1448>
  41932a:	mov    rdi,rax
  41932d:	call   418711 <test_json@@Base>
  419332:	add    rsp,0x10
  419336:	or     DWORD PTR [rbp-0xc],eax
  419339:	mov    eax,DWORD PTR [rbp-0xc]
  41933c:	leave  
  41933d:	ret    

000000000041933e <mixed_type_union_tests@@Base>:
  41933e:	push   rbp
  41933f:	mov    rbp,rsp
  419342:	sub    rsp,0x10
  419346:	mov    DWORD PTR [rbp-0xc],0x0
  41934d:	lea    rax,[rip+0x2aa8c]        # 443de0 <flatcc_builder_padding_base@@Base+0xbb80>
  419354:	mov    QWORD PTR [rbp-0x8],rax
  419358:	mov    rax,QWORD PTR [rbp-0x8]
  41935c:	sub    rsp,0x8
  419360:	push   0x1b0
  419365:	mov    r9d,0x0
  41936b:	mov    r8d,0x0
  419371:	mov    ecx,0x0
  419376:	lea    rdx,[rip+0x1d18b]        # 436508 <_IO_stdin_used@@Base+0x1508>
  41937d:	lea    rsi,[rip+0x1d1cc]        # 436550 <_IO_stdin_used@@Base+0x1550>
  419384:	mov    rdi,rax
  419387:	call   418711 <test_json@@Base>
  41938c:	add    rsp,0x10
  419390:	or     DWORD PTR [rbp-0xc],eax
  419393:	mov    rax,QWORD PTR [rbp-0x8]
  419397:	sub    rsp,0x8
  41939b:	push   0x1b5
  4193a0:	mov    r9d,0x0
  4193a6:	mov    r8d,0x0
  4193ac:	mov    ecx,0x0
  4193b1:	lea    rdx,[rip+0x1d1e8]        # 4365a0 <_IO_stdin_used@@Base+0x15a0>
  4193b8:	lea    rsi,[rip+0x1d259]        # 436618 <_IO_stdin_used@@Base+0x1618>
  4193bf:	mov    rdi,rax
  4193c2:	call   418711 <test_json@@Base>
  4193c7:	add    rsp,0x10
  4193cb:	or     DWORD PTR [rbp-0xc],eax
  4193ce:	mov    rax,QWORD PTR [rbp-0x8]
  4193d2:	sub    rsp,0x8
  4193d6:	push   0x1ba
  4193db:	mov    r9d,0x0
  4193e1:	mov    r8d,0x0
  4193e7:	mov    ecx,0x0
  4193ec:	lea    rdx,[rip+0x1d1ad]        # 4365a0 <_IO_stdin_used@@Base+0x15a0>
  4193f3:	lea    rsi,[rip+0x1d2a6]        # 4366a0 <_IO_stdin_used@@Base+0x16a0>
  4193fa:	mov    rdi,rax
  4193fd:	call   418711 <test_json@@Base>
  419402:	add    rsp,0x10
  419406:	or     DWORD PTR [rbp-0xc],eax
  419409:	mov    rax,QWORD PTR [rbp-0x8]
  41940d:	sub    rsp,0x8
  419411:	push   0x1c1
  419416:	mov    r9d,0x0
  41941c:	mov    r8d,0x0
  419422:	mov    ecx,0x0
  419427:	lea    rdx,[rip+0x1d30a]        # 436738 <_IO_stdin_used@@Base+0x1738>
  41942e:	lea    rsi,[rip+0x1d3c3]        # 4367f8 <_IO_stdin_used@@Base+0x17f8>
  419435:	mov    rdi,rax
  419438:	call   418711 <test_json@@Base>
  41943d:	add    rsp,0x10
  419441:	or     DWORD PTR [rbp-0xc],eax
  419444:	mov    rax,QWORD PTR [rbp-0x8]
  419448:	sub    rsp,0x8
  41944c:	push   0x1ca
  419451:	mov    r9d,0x0
  419457:	mov    r8d,0x0
  41945d:	mov    ecx,0x0
  419462:	lea    rdx,[rip+0x1d46f]        # 4368d8 <_IO_stdin_used@@Base+0x18d8>
  419469:	lea    rsi,[rip+0x1d548]        # 4369b8 <_IO_stdin_used@@Base+0x19b8>
  419470:	mov    rdi,rax
  419473:	call   418711 <test_json@@Base>
  419478:	add    rsp,0x10
  41947c:	or     DWORD PTR [rbp-0xc],eax
  41947f:	mov    rax,QWORD PTR [rbp-0x8]
  419483:	sub    rsp,0x8
  419487:	push   0x1d5
  41948c:	mov    r9d,0x0
  419492:	mov    r8d,0x0
  419498:	mov    ecx,0x0
  41949d:	lea    rdx,[rip+0x1d61c]        # 436ac0 <_IO_stdin_used@@Base+0x1ac0>
  4194a4:	lea    rsi,[rip+0x1d75d]        # 436c08 <_IO_stdin_used@@Base+0x1c08>
  4194ab:	mov    rdi,rax
  4194ae:	call   418711 <test_json@@Base>
  4194b3:	add    rsp,0x10
  4194b7:	or     DWORD PTR [rbp-0xc],eax
  4194ba:	mov    rax,QWORD PTR [rbp-0x8]
  4194be:	sub    rsp,0x8
  4194c2:	push   0x1da
  4194c7:	mov    r9d,0x0
  4194cd:	mov    r8d,0x0
  4194d3:	mov    ecx,0x0
  4194d8:	lea    rdx,[rip+0x1d0c1]        # 4365a0 <_IO_stdin_used@@Base+0x15a0>
  4194df:	lea    rsi,[rip+0x1d8aa]        # 436d90 <_IO_stdin_used@@Base+0x1d90>
  4194e6:	mov    rdi,rax
  4194e9:	call   418711 <test_json@@Base>
  4194ee:	add    rsp,0x10
  4194f2:	or     DWORD PTR [rbp-0xc],eax
  4194f5:	mov    eax,DWORD PTR [rbp-0xc]
  4194f8:	leave  
  4194f9:	ret    

00000000004194fa <union_vector_tests@@Base>:
  4194fa:	push   rbp
  4194fb:	mov    rbp,rsp
  4194fe:	sub    rsp,0x10
  419502:	mov    DWORD PTR [rbp-0xc],0x0
  419509:	lea    rax,[rip+0x2a8b0]        # 443dc0 <flatcc_builder_padding_base@@Base+0xbb60>
  419510:	mov    QWORD PTR [rbp-0x8],rax
  419514:	mov    rax,QWORD PTR [rbp-0x8]
  419518:	sub    rsp,0x8
  41951c:	push   0x1e5
  419521:	mov    r9d,0x0
  419527:	mov    r8d,0x0
  41952d:	mov    ecx,0x0
  419532:	lea    rdx,[rip+0x1d8e7]        # 436e20 <_IO_stdin_used@@Base+0x1e20>
  419539:	lea    rsi,[rip+0x1d918]        # 436e58 <_IO_stdin_used@@Base+0x1e58>
  419540:	mov    rdi,rax
  419543:	call   418711 <test_json@@Base>
  419548:	add    rsp,0x10
  41954c:	or     DWORD PTR [rbp-0xc],eax
  41954f:	mov    rax,QWORD PTR [rbp-0x8]
  419553:	sub    rsp,0x8
  419557:	push   0x1e8
  41955c:	mov    r9d,0x0
  419562:	mov    r8d,0x0
  419568:	mov    ecx,0x0
  41956d:	lea    rdx,[rip+0x1d924]        # 436e98 <_IO_stdin_used@@Base+0x1e98>
  419574:	lea    rsi,[rip+0x1d94d]        # 436ec8 <_IO_stdin_used@@Base+0x1ec8>
  41957b:	mov    rdi,rax
  41957e:	call   418711 <test_json@@Base>
  419583:	add    rsp,0x10
  419587:	or     DWORD PTR [rbp-0xc],eax
  41958a:	mov    rax,QWORD PTR [rbp-0x8]
  41958e:	sub    rsp,0x8
  419592:	push   0x1eb
  419597:	mov    r9d,0x0
  41959d:	mov    r8d,0x0
  4195a3:	mov    ecx,0x0
  4195a8:	lea    rdx,[rip+0x1d951]        # 436f00 <_IO_stdin_used@@Base+0x1f00>
  4195af:	lea    rsi,[rip+0x1d992]        # 436f48 <_IO_stdin_used@@Base+0x1f48>
  4195b6:	mov    rdi,rax
  4195b9:	call   418711 <test_json@@Base>
  4195be:	add    rsp,0x10
  4195c2:	or     DWORD PTR [rbp-0xc],eax
  4195c5:	mov    rax,QWORD PTR [rbp-0x8]
  4195c9:	sub    rsp,0x8
  4195cd:	push   0x1ee
  4195d2:	mov    r9d,0x0
  4195d8:	mov    r8d,0x0
  4195de:	mov    ecx,0x0
  4195e3:	lea    rdx,[rip+0x1d9ae]        # 436f98 <_IO_stdin_used@@Base+0x1f98>
  4195ea:	lea    rsi,[rip+0x1da17]        # 437008 <_IO_stdin_used@@Base+0x2008>
  4195f1:	mov    rdi,rax
  4195f4:	call   418711 <test_json@@Base>
  4195f9:	add    rsp,0x10
  4195fd:	or     DWORD PTR [rbp-0xc],eax
  419600:	mov    rax,QWORD PTR [rbp-0x8]
  419604:	sub    rsp,0x8
  419608:	push   0x1f1
  41960d:	mov    r9d,0x0
  419613:	mov    r8d,0x0
  419619:	mov    ecx,0x0
  41961e:	lea    rdx,[rip+0x1d7fb]        # 436e20 <_IO_stdin_used@@Base+0x1e20>
  419625:	lea    rsi,[rip+0x1da5c]        # 437088 <_IO_stdin_used@@Base+0x2088>
  41962c:	mov    rdi,rax
  41962f:	call   418711 <test_json@@Base>
  419634:	add    rsp,0x10
  419638:	or     DWORD PTR [rbp-0xc],eax
  41963b:	mov    rax,QWORD PTR [rbp-0x8]
  41963f:	sub    rsp,0x8
  419643:	push   0x1f4
  419648:	mov    r9d,0x0
  41964e:	mov    r8d,0x0
  419654:	mov    ecx,0x0
  419659:	lea    rdx,[rip+0x1da68]        # 4370c8 <_IO_stdin_used@@Base+0x20c8>
  419660:	lea    rsi,[rip+0x1dac1]        # 437128 <_IO_stdin_used@@Base+0x2128>
  419667:	mov    rdi,rax
  41966a:	call   418711 <test_json@@Base>
  41966f:	add    rsp,0x10
  419673:	or     DWORD PTR [rbp-0xc],eax
  419676:	mov    eax,DWORD PTR [rbp-0xc]
  419679:	leave  
  41967a:	ret    

000000000041967b <main@@Base>:
  41967b:	push   rbp
  41967c:	mov    rbp,rsp
  41967f:	sub    rsp,0x10
  419683:	mov    DWORD PTR [rbp-0xc],0x0
  41968a:	lea    rax,[rip+0x2a70f]        # 443da0 <flatcc_builder_padding_base@@Base+0xbb40>
  419691:	mov    QWORD PTR [rbp-0x8],rax
  419695:	mov    eax,0x0
  41969a:	call   418c4e <edge_case_tests@@Base>
  41969f:	or     DWORD PTR [rbp-0xc],eax
  4196a2:	mov    eax,0x0
  4196a7:	call   418e80 <error_case_tests@@Base>
  4196ac:	or     DWORD PTR [rbp-0xc],eax
  4196af:	mov    eax,0x0
  4196b4:	call   4194fa <union_vector_tests@@Base>
  4196b9:	or     DWORD PTR [rbp-0xc],eax
  4196bc:	mov    eax,0x0
  4196c1:	call   41914b <base64_tests@@Base>
  4196c6:	or     DWORD PTR [rbp-0xc],eax
  4196c9:	mov    eax,0x0
  4196ce:	call   41933e <mixed_type_union_tests@@Base>
  4196d3:	or     DWORD PTR [rbp-0xc],eax
  4196d6:	mov    rax,QWORD PTR [rbp-0x8]
  4196da:	sub    rsp,0x8
  4196de:	push   0x20d
  4196e3:	mov    r9d,0x0
  4196e9:	mov    r8d,0x0
  4196ef:	mov    ecx,0x0
  4196f4:	lea    rdx,[rip+0x1c07c]        # 435777 <_IO_stdin_used@@Base+0x777>
  4196fb:	lea    rsi,[rip+0x1da8c]        # 43718e <_IO_stdin_used@@Base+0x218e>
  419702:	mov    rdi,rax
  419705:	call   418711 <test_json@@Base>
  41970a:	add    rsp,0x10
  41970e:	or     DWORD PTR [rbp-0xc],eax
  419711:	mov    rax,QWORD PTR [rbp-0x8]
  419715:	sub    rsp,0x8
  419719:	push   0x210
  41971e:	mov    r9d,0x0
  419724:	mov    r8d,0x0
  41972a:	mov    ecx,0x0
  41972f:	lea    rdx,[rip+0x1da72]        # 4371a8 <_IO_stdin_used@@Base+0x21a8>
  419736:	lea    rsi,[rip+0x1da93]        # 4371d0 <_IO_stdin_used@@Base+0x21d0>
  41973d:	mov    rdi,rax
  419740:	call   418711 <test_json@@Base>
  419745:	add    rsp,0x10
  419749:	or     DWORD PTR [rbp-0xc],eax
  41974c:	mov    rax,QWORD PTR [rbp-0x8]
  419750:	sub    rsp,0x8
  419754:	push   0x213
  419759:	mov    r9d,0x0
  41975f:	mov    r8d,0x0
  419765:	mov    ecx,0x0
  41976a:	lea    rdx,[rip+0x1da87]        # 4371f8 <_IO_stdin_used@@Base+0x21f8>
  419771:	lea    rsi,[rip+0x1daa8]        # 437220 <_IO_stdin_used@@Base+0x2220>
  419778:	mov    rdi,rax
  41977b:	call   418711 <test_json@@Base>
  419780:	add    rsp,0x10
  419784:	or     DWORD PTR [rbp-0xc],eax
  419787:	mov    rax,QWORD PTR [rbp-0x8]
  41978b:	sub    rsp,0x8
  41978f:	push   0x216
  419794:	mov    r9d,0x0
  41979a:	mov    r8d,0x0
  4197a0:	mov    ecx,0x0
  4197a5:	lea    rdx,[rip+0x1da9c]        # 437248 <_IO_stdin_used@@Base+0x2248>
  4197ac:	lea    rsi,[rip+0x1dac5]        # 437278 <_IO_stdin_used@@Base+0x2278>
  4197b3:	mov    rdi,rax
  4197b6:	call   418711 <test_json@@Base>
  4197bb:	add    rsp,0x10
  4197bf:	or     DWORD PTR [rbp-0xc],eax
  4197c2:	mov    rax,QWORD PTR [rbp-0x8]
  4197c6:	sub    rsp,0x8
  4197ca:	push   0x219
  4197cf:	mov    r9d,0x0
  4197d5:	mov    r8d,0x0
  4197db:	mov    ecx,0x0
  4197e0:	lea    rdx,[rip+0x1da61]        # 437248 <_IO_stdin_used@@Base+0x2248>
  4197e7:	lea    rsi,[rip+0x1dac2]        # 4372b0 <_IO_stdin_used@@Base+0x22b0>
  4197ee:	mov    rdi,rax
  4197f1:	call   418711 <test_json@@Base>
  4197f6:	add    rsp,0x10
  4197fa:	or     DWORD PTR [rbp-0xc],eax
  4197fd:	mov    rax,QWORD PTR [rbp-0x8]
  419801:	sub    rsp,0x8
  419805:	push   0x21c
  41980a:	mov    r9d,0x0
  419810:	mov    r8d,0x0
  419816:	mov    ecx,0x0
  41981b:	lea    rdx,[rip+0x1d986]        # 4371a8 <_IO_stdin_used@@Base+0x21a8>
  419822:	lea    rsi,[rip+0x1dac7]        # 4372f0 <_IO_stdin_used@@Base+0x22f0>
  419829:	mov    rdi,rax
  41982c:	call   418711 <test_json@@Base>
  419831:	add    rsp,0x10
  419835:	or     DWORD PTR [rbp-0xc],eax
  419838:	mov    rax,QWORD PTR [rbp-0x8]
  41983c:	sub    rsp,0x8
  419840:	push   0x21f
  419845:	mov    r9d,0x0
  41984b:	mov    r8d,0x0
  419851:	mov    ecx,0x0
  419856:	lea    rdx,[rip+0x1d99b]        # 4371f8 <_IO_stdin_used@@Base+0x21f8>
  41985d:	lea    rsi,[rip+0x1dab4]        # 437318 <_IO_stdin_used@@Base+0x2318>
  419864:	mov    rdi,rax
  419867:	call   418711 <test_json@@Base>
  41986c:	add    rsp,0x10
  419870:	or     DWORD PTR [rbp-0xc],eax
  419873:	mov    rax,QWORD PTR [rbp-0x8]
  419877:	sub    rsp,0x8
  41987b:	push   0x223
  419880:	mov    r9d,0x0
  419886:	mov    r8d,0x0
  41988c:	mov    ecx,0x0
  419891:	lea    rdx,[rip+0x1bedf]        # 435777 <_IO_stdin_used@@Base+0x777>
  419898:	lea    rsi,[rip+0x1daa9]        # 437348 <_IO_stdin_used@@Base+0x2348>
  41989f:	mov    rdi,rax
  4198a2:	call   418711 <test_json@@Base>
  4198a7:	add    rsp,0x10
  4198ab:	or     DWORD PTR [rbp-0xc],eax
  4198ae:	mov    rax,QWORD PTR [rbp-0x8]
  4198b2:	sub    rsp,0x8
  4198b6:	push   0x227
  4198bb:	mov    r9d,0x0
  4198c1:	mov    r8d,0x0
  4198c7:	mov    ecx,0x0
  4198cc:	lea    rdx,[rip+0x1bea4]        # 435777 <_IO_stdin_used@@Base+0x777>
  4198d3:	lea    rsi,[rip+0x1be36]        # 435710 <_IO_stdin_used@@Base+0x710>
  4198da:	mov    rdi,rax
  4198dd:	call   418711 <test_json@@Base>
  4198e2:	add    rsp,0x10
  4198e6:	or     DWORD PTR [rbp-0xc],eax
  4198e9:	mov    rax,QWORD PTR [rbp-0x8]
  4198ed:	sub    rsp,0x8
  4198f1:	push   0x259
  4198f6:	mov    r9d,0x0
  4198fc:	mov    r8d,0x0
  419902:	mov    ecx,0x0
  419907:	lea    rdx,[rip+0x1d89a]        # 4371a8 <_IO_stdin_used@@Base+0x21a8>
  41990e:	lea    rsi,[rip+0x1da5b]        # 437370 <_IO_stdin_used@@Base+0x2370>
  419915:	mov    rdi,rax
  419918:	call   418711 <test_json@@Base>
  41991d:	add    rsp,0x10
  419921:	or     DWORD PTR [rbp-0xc],eax
  419924:	mov    rax,QWORD PTR [rbp-0x8]
  419928:	sub    rsp,0x8
  41992c:	push   0x25c
  419931:	mov    r9d,0x0
  419937:	mov    r8d,0x0
  41993d:	mov    ecx,0x0
  419942:	lea    rdx,[rip+0x1d8af]        # 4371f8 <_IO_stdin_used@@Base+0x21f8>
  419949:	lea    rsi,[rip+0x1da48]        # 437398 <_IO_stdin_used@@Base+0x2398>
  419950:	mov    rdi,rax
  419953:	call   418711 <test_json@@Base>
  419958:	add    rsp,0x10
  41995c:	or     DWORD PTR [rbp-0xc],eax
  41995f:	mov    rax,QWORD PTR [rbp-0x8]
  419963:	sub    rsp,0x8
  419967:	push   0x25f
  41996c:	mov    r9d,0x0
  419972:	mov    r8d,0x0
  419978:	mov    ecx,0x0
  41997d:	lea    rdx,[rip+0x1da3c]        # 4373c0 <_IO_stdin_used@@Base+0x23c0>
  419984:	lea    rsi,[rip+0x1da5d]        # 4373e8 <_IO_stdin_used@@Base+0x23e8>
  41998b:	mov    rdi,rax
  41998e:	call   418711 <test_json@@Base>
  419993:	add    rsp,0x10
  419997:	or     DWORD PTR [rbp-0xc],eax
  41999a:	mov    rax,QWORD PTR [rbp-0x8]
  41999e:	sub    rsp,0x8
  4199a2:	push   0x262
  4199a7:	mov    r9d,0x0
  4199ad:	mov    r8d,0x0
  4199b3:	mov    ecx,0x0
  4199b8:	lea    rdx,[rip+0x1d889]        # 437248 <_IO_stdin_used@@Base+0x2248>
  4199bf:	lea    rsi,[rip+0x1da4a]        # 437410 <_IO_stdin_used@@Base+0x2410>
  4199c6:	mov    rdi,rax
  4199c9:	call   418711 <test_json@@Base>
  4199ce:	add    rsp,0x10
  4199d2:	or     DWORD PTR [rbp-0xc],eax
  4199d5:	mov    rax,QWORD PTR [rbp-0x8]
  4199d9:	sub    rsp,0x8
  4199dd:	push   0x265
  4199e2:	mov    r9d,0x0
  4199e8:	mov    r8d,0x0
  4199ee:	mov    ecx,0x0
  4199f3:	lea    rdx,[rip+0x1da38]        # 437432 <_IO_stdin_used@@Base+0x2432>
  4199fa:	lea    rsi,[rip+0x1da4f]        # 437450 <_IO_stdin_used@@Base+0x2450>
  419a01:	mov    rdi,rax
  419a04:	call   418711 <test_json@@Base>
  419a09:	add    rsp,0x10
  419a0d:	or     DWORD PTR [rbp-0xc],eax
  419a10:	mov    rax,QWORD PTR [rbp-0x8]
  419a14:	sub    rsp,0x8
  419a18:	push   0x268
  419a1d:	mov    r9d,0x0
  419a23:	mov    r8d,0x0
  419a29:	mov    ecx,0x0
  419a2e:	lea    rdx,[rip+0x1da3d]        # 437472 <_IO_stdin_used@@Base+0x2472>
  419a35:	lea    rsi,[rip+0x1da54]        # 437490 <_IO_stdin_used@@Base+0x2490>
  419a3c:	mov    rdi,rax
  419a3f:	call   418711 <test_json@@Base>
  419a44:	add    rsp,0x10
  419a48:	or     DWORD PTR [rbp-0xc],eax
  419a4b:	mov    rax,QWORD PTR [rbp-0x8]
  419a4f:	sub    rsp,0x8
  419a53:	push   0x26b
  419a58:	mov    r9d,0x0
  419a5e:	mov    r8d,0x0
  419a64:	mov    ecx,0x0
  419a69:	lea    rdx,[rip+0x1da42]        # 4374b2 <_IO_stdin_used@@Base+0x24b2>
  419a70:	lea    rsi,[rip+0x1da59]        # 4374d0 <_IO_stdin_used@@Base+0x24d0>
  419a77:	mov    rdi,rax
  419a7a:	call   418711 <test_json@@Base>
  419a7f:	add    rsp,0x10
  419a83:	or     DWORD PTR [rbp-0xc],eax
  419a86:	mov    rax,QWORD PTR [rbp-0x8]
  419a8a:	sub    rsp,0x8
  419a8e:	push   0x26e
  419a93:	mov    r9d,0x0
  419a99:	mov    r8d,0x0
  419a9f:	mov    ecx,0x0
  419aa4:	lea    rdx,[rip+0x1d6fd]        # 4371a8 <_IO_stdin_used@@Base+0x21a8>
  419aab:	lea    rsi,[rip+0x1da46]        # 4374f8 <_IO_stdin_used@@Base+0x24f8>
  419ab2:	mov    rdi,rax
  419ab5:	call   418711 <test_json@@Base>
  419aba:	add    rsp,0x10
  419abe:	or     DWORD PTR [rbp-0xc],eax
  419ac1:	mov    rax,QWORD PTR [rbp-0x8]
  419ac5:	sub    rsp,0x8
  419ac9:	push   0x271
  419ace:	mov    r9d,0x0
  419ad4:	mov    r8d,0x0
  419ada:	mov    ecx,0x0
  419adf:	lea    rdx,[rip+0x1d6c2]        # 4371a8 <_IO_stdin_used@@Base+0x21a8>
  419ae6:	lea    rsi,[rip+0x1da3b]        # 437528 <_IO_stdin_used@@Base+0x2528>
  419aed:	mov    rdi,rax
  419af0:	call   418711 <test_json@@Base>
  419af5:	add    rsp,0x10
  419af9:	or     DWORD PTR [rbp-0xc],eax
  419afc:	mov    rax,QWORD PTR [rbp-0x8]
  419b00:	sub    rsp,0x8
  419b04:	push   0x274
  419b09:	mov    r9d,0x0
  419b0f:	mov    r8d,0x0
  419b15:	mov    ecx,0x0
  419b1a:	lea    rdx,[rip+0x1da41]        # 437562 <_IO_stdin_used@@Base+0x2562>
  419b21:	lea    rsi,[rip+0x1da58]        # 437580 <_IO_stdin_used@@Base+0x2580>
  419b28:	mov    rdi,rax
  419b2b:	call   418711 <test_json@@Base>
  419b30:	add    rsp,0x10
  419b34:	or     DWORD PTR [rbp-0xc],eax
  419b37:	mov    rax,QWORD PTR [rbp-0x8]
  419b3b:	sub    rsp,0x8
  419b3f:	push   0x277
  419b44:	mov    r9d,0x0
  419b4a:	mov    r8d,0x0
  419b50:	mov    ecx,0x0
  419b55:	lea    rdx,[rip+0x1da06]        # 437562 <_IO_stdin_used@@Base+0x2562>
  419b5c:	lea    rsi,[rip+0x1da1d]        # 437580 <_IO_stdin_used@@Base+0x2580>
  419b63:	mov    rdi,rax
  419b66:	call   418711 <test_json@@Base>
  419b6b:	add    rsp,0x10
  419b6f:	or     DWORD PTR [rbp-0xc],eax
  419b72:	mov    rax,QWORD PTR [rbp-0x8]
  419b76:	sub    rsp,0x8
  419b7a:	push   0x27a
  419b7f:	mov    r9d,0x0
  419b85:	mov    r8d,0x0
  419b8b:	mov    ecx,0x0
  419b90:	lea    rdx,[rip+0x1da19]        # 4375b0 <_IO_stdin_used@@Base+0x25b0>
  419b97:	lea    rsi,[rip+0x1da5a]        # 4375f8 <_IO_stdin_used@@Base+0x25f8>
  419b9e:	mov    rdi,rax
  419ba1:	call   418711 <test_json@@Base>
  419ba6:	add    rsp,0x10
  419baa:	or     DWORD PTR [rbp-0xc],eax
  419bad:	mov    rax,QWORD PTR [rbp-0x8]
  419bb1:	sub    rsp,0x8
  419bb5:	push   0x27e
  419bba:	mov    r9d,0x0
  419bc0:	mov    r8d,0x0
  419bc6:	mov    ecx,0x0
  419bcb:	lea    rdx,[rip+0x1da7e]        # 437650 <_IO_stdin_used@@Base+0x2650>
  419bd2:	lea    rsi,[rip+0x1dac7]        # 4376a0 <_IO_stdin_used@@Base+0x26a0>
  419bd9:	mov    rdi,rax
  419bdc:	call   418711 <test_json@@Base>
  419be1:	add    rsp,0x10
  419be5:	or     DWORD PTR [rbp-0xc],eax
  419be8:	mov    rax,QWORD PTR [rbp-0x8]
  419bec:	sub    rsp,0x8
  419bf0:	push   0x282
  419bf5:	mov    r9d,0x0
  419bfb:	mov    r8d,0x0
  419c01:	mov    ecx,0x0
  419c06:	lea    rdx,[rip+0x1daeb]        # 4376f8 <_IO_stdin_used@@Base+0x26f8>
  419c0d:	lea    rsi,[rip+0x1db4c]        # 437760 <_IO_stdin_used@@Base+0x2760>
  419c14:	mov    rdi,rax
  419c17:	call   418711 <test_json@@Base>
  419c1c:	add    rsp,0x10
  419c20:	or     DWORD PTR [rbp-0xc],eax
  419c23:	mov    rax,QWORD PTR [rbp-0x8]
  419c27:	sub    rsp,0x8
  419c2b:	push   0x286
  419c30:	mov    r9d,0x0
  419c36:	mov    r8d,0x0
  419c3c:	mov    ecx,0x0
  419c41:	lea    rdx,[rip+0x1bb2f]        # 435777 <_IO_stdin_used@@Base+0x777>
  419c48:	lea    rsi,[rip+0x1db81]        # 4377d0 <_IO_stdin_used@@Base+0x27d0>
  419c4f:	mov    rdi,rax
  419c52:	call   418711 <test_json@@Base>
  419c57:	add    rsp,0x10
  419c5b:	or     DWORD PTR [rbp-0xc],eax
  419c5e:	mov    rax,QWORD PTR [rbp-0x8]
  419c62:	sub    rsp,0x8
  419c66:	push   0x289
  419c6b:	mov    r9d,0x0
  419c71:	mov    r8d,0x0
  419c77:	mov    ecx,0x0
  419c7c:	lea    rdx,[rip+0x1baf4]        # 435777 <_IO_stdin_used@@Base+0x777>
  419c83:	lea    rsi,[rip+0x1db76]        # 437800 <_IO_stdin_used@@Base+0x2800>
  419c8a:	mov    rdi,rax
  419c8d:	call   418711 <test_json@@Base>
  419c92:	add    rsp,0x10
  419c96:	or     DWORD PTR [rbp-0xc],eax
  419c99:	mov    rax,QWORD PTR [rbp-0x8]
  419c9d:	sub    rsp,0x8
  419ca1:	push   0x2cc
  419ca6:	mov    r9d,0x0
  419cac:	mov    r8d,0x0
  419cb2:	mov    ecx,0x0
  419cb7:	lea    rdx,[rip+0x1db6a]        # 437828 <_IO_stdin_used@@Base+0x2828>
  419cbe:	lea    rsi,[rip+0x1dbc3]        # 437888 <_IO_stdin_used@@Base+0x2888>
  419cc5:	mov    rdi,rax
  419cc8:	call   418711 <test_json@@Base>
  419ccd:	add    rsp,0x10
  419cd1:	or     DWORD PTR [rbp-0xc],eax
  419cd4:	mov    rax,QWORD PTR [rbp-0x8]
  419cd8:	sub    rsp,0x8
  419cdc:	push   0x2db
  419ce1:	mov    r9d,0x0
  419ce7:	mov    r8d,0x0
  419ced:	mov    ecx,0x0
  419cf2:	lea    rdx,[rip+0x1dbff]        # 4378f8 <_IO_stdin_used@@Base+0x28f8>
  419cf9:	lea    rsi,[rip+0x1dc28]        # 437928 <_IO_stdin_used@@Base+0x2928>
  419d00:	mov    rdi,rax
  419d03:	call   418711 <test_json@@Base>
  419d08:	add    rsp,0x10
  419d0c:	or     DWORD PTR [rbp-0xc],eax
  419d0f:	mov    rax,QWORD PTR [rbp-0x8]
  419d13:	sub    rsp,0x8
  419d17:	push   0x2de
  419d1c:	mov    r9d,0x0
  419d22:	mov    r8d,0x0
  419d28:	mov    ecx,0x0
  419d2d:	lea    rdx,[rip+0x1dc31]        # 437965 <_IO_stdin_used@@Base+0x2965>
  419d34:	lea    rsi,[rip+0x1dc3c]        # 437977 <_IO_stdin_used@@Base+0x2977>
  419d3b:	mov    rdi,rax
  419d3e:	call   418711 <test_json@@Base>
  419d43:	add    rsp,0x10
  419d47:	or     DWORD PTR [rbp-0xc],eax
  419d4a:	mov    rax,QWORD PTR [rbp-0x8]
  419d4e:	sub    rsp,0x8
  419d52:	push   0x2e2
  419d57:	mov    r9d,0x0
  419d5d:	mov    r8d,0x0
  419d63:	mov    ecx,0x0
  419d68:	lea    rdx,[rip+0x1dc29]        # 437998 <_IO_stdin_used@@Base+0x2998>
  419d6f:	lea    rsi,[rip+0x1dc6a]        # 4379e0 <_IO_stdin_used@@Base+0x29e0>
  419d76:	mov    rdi,rax
  419d79:	call   418711 <test_json@@Base>
  419d7e:	add    rsp,0x10
  419d82:	or     DWORD PTR [rbp-0xc],eax
  419d85:	mov    rax,QWORD PTR [rbp-0x8]
  419d89:	sub    rsp,0x8
  419d8d:	push   0x2ee
  419d92:	mov    r9d,0x0
  419d98:	mov    r8d,0x0
  419d9e:	mov    ecx,0x0
  419da3:	lea    rdx,[rip+0x1dbee]        # 437998 <_IO_stdin_used@@Base+0x2998>
  419daa:	lea    rsi,[rip+0x1dc77]        # 437a28 <_IO_stdin_used@@Base+0x2a28>
  419db1:	mov    rdi,rax
  419db4:	call   418711 <test_json@@Base>
  419db9:	add    rsp,0x10
  419dbd:	or     DWORD PTR [rbp-0xc],eax
  419dc0:	mov    rax,QWORD PTR [rbp-0x8]
  419dc4:	sub    rsp,0x8
  419dc8:	push   0x2fe
  419dcd:	mov    r9d,0x0
  419dd3:	mov    r8d,0x0
  419dd9:	mov    ecx,0x0
  419dde:	lea    rdx,[rip+0x1dce3]        # 437ac8 <_IO_stdin_used@@Base+0x2ac8>
  419de5:	lea    rsi,[rip+0x1dd04]        # 437af0 <_IO_stdin_used@@Base+0x2af0>
  419dec:	mov    rdi,rax
  419def:	call   418711 <test_json@@Base>
  419df4:	add    rsp,0x10
  419df8:	or     DWORD PTR [rbp-0xc],eax
  419dfb:	mov    rax,QWORD PTR [rbp-0x8]
  419dff:	sub    rsp,0x8
  419e03:	push   0x302
  419e08:	mov    r9d,0x0
  419e0e:	mov    r8d,0x0
  419e14:	mov    ecx,0x0
  419e19:	lea    rdx,[rip+0x1dcf8]        # 437b18 <_IO_stdin_used@@Base+0x2b18>
  419e20:	lea    rsi,[rip+0x1dd21]        # 437b48 <_IO_stdin_used@@Base+0x2b48>
  419e27:	mov    rdi,rax
  419e2a:	call   418711 <test_json@@Base>
  419e2f:	add    rsp,0x10
  419e33:	or     DWORD PTR [rbp-0xc],eax
  419e36:	mov    rax,QWORD PTR [rbp-0x8]
  419e3a:	sub    rsp,0x8
  419e3e:	push   0x308
  419e43:	mov    r9d,0x0
  419e49:	mov    r8d,0x0
  419e4f:	mov    ecx,0x0
  419e54:	lea    rdx,[rip+0x1dd1d]        # 437b78 <_IO_stdin_used@@Base+0x2b78>
  419e5b:	lea    rsi,[rip+0x1dd86]        # 437be8 <_IO_stdin_used@@Base+0x2be8>
  419e62:	mov    rdi,rax
  419e65:	call   418711 <test_json@@Base>
  419e6a:	add    rsp,0x10
  419e6e:	or     DWORD PTR [rbp-0xc],eax
  419e71:	mov    rax,QWORD PTR [rbp-0x8]
  419e75:	sub    rsp,0x8
  419e79:	push   0x30d
  419e7e:	mov    r9d,0x0
  419e84:	mov    r8d,0x0
  419e8a:	mov    ecx,0x0
  419e8f:	lea    rdx,[rip+0x1b8e1]        # 435777 <_IO_stdin_used@@Base+0x777>
  419e96:	lea    rsi,[rip+0x1ddcb]        # 437c68 <_IO_stdin_used@@Base+0x2c68>
  419e9d:	mov    rdi,rax
  419ea0:	call   418711 <test_json@@Base>
  419ea5:	add    rsp,0x10
  419ea9:	or     DWORD PTR [rbp-0xc],eax
  419eac:	mov    rax,QWORD PTR [rbp-0x8]
  419eb0:	sub    rsp,0x8
  419eb4:	push   0x312
  419eb9:	mov    r9d,0x0
  419ebf:	mov    r8d,0x0
  419ec5:	mov    ecx,0x0
  419eca:	lea    rdx,[rip+0x1de0f]        # 437ce0 <_IO_stdin_used@@Base+0x2ce0>
  419ed1:	lea    rsi,[rip+0x1de78]        # 437d50 <_IO_stdin_used@@Base+0x2d50>
  419ed8:	mov    rdi,rax
  419edb:	call   418711 <test_json@@Base>
  419ee0:	add    rsp,0x10
  419ee4:	or     DWORD PTR [rbp-0xc],eax
  419ee7:	mov    rax,QWORD PTR [rbp-0x8]
  419eeb:	sub    rsp,0x8
  419eef:	push   0x317
  419ef4:	mov    r9d,0x0
  419efa:	mov    r8d,0x0
  419f00:	mov    ecx,0x0
  419f05:	lea    rdx,[rip+0x1dec4]        # 437dd0 <_IO_stdin_used@@Base+0x2dd0>
  419f0c:	lea    rsi,[rip+0x1df3d]        # 437e50 <_IO_stdin_used@@Base+0x2e50>
  419f13:	mov    rdi,rax
  419f16:	call   418711 <test_json@@Base>
  419f1b:	add    rsp,0x10
  419f1f:	or     DWORD PTR [rbp-0xc],eax
  419f22:	mov    rax,QWORD PTR [rbp-0x8]
  419f26:	sub    rsp,0x8
  419f2a:	push   0x31c
  419f2f:	mov    r9d,0x0
  419f35:	mov    r8d,0x0
  419f3b:	mov    ecx,0x0
  419f40:	lea    rdx,[rip+0x1df99]        # 437ee0 <_IO_stdin_used@@Base+0x2ee0>
  419f47:	lea    rsi,[rip+0x1e002]        # 437f50 <_IO_stdin_used@@Base+0x2f50>
  419f4e:	mov    rdi,rax
  419f51:	call   418711 <test_json@@Base>
  419f56:	add    rsp,0x10
  419f5a:	or     DWORD PTR [rbp-0xc],eax
  419f5d:	mov    rax,QWORD PTR [rbp-0x8]
  419f61:	sub    rsp,0x8
  419f65:	push   0x321
  419f6a:	mov    r9d,0x0
  419f70:	mov    r8d,0x0
  419f76:	mov    ecx,0x0
  419f7b:	lea    rdx,[rip+0x1e04e]        # 437fd0 <_IO_stdin_used@@Base+0x2fd0>
  419f82:	lea    rsi,[rip+0x1e0c7]        # 438050 <_IO_stdin_used@@Base+0x3050>
  419f89:	mov    rdi,rax
  419f8c:	call   418711 <test_json@@Base>
  419f91:	add    rsp,0x10
  419f95:	or     DWORD PTR [rbp-0xc],eax
  419f98:	mov    rax,QWORD PTR [rbp-0x8]
  419f9c:	sub    rsp,0x8
  419fa0:	push   0x326
  419fa5:	mov    r9d,0x0
  419fab:	mov    r8d,0x0
  419fb1:	mov    ecx,0x0
  419fb6:	lea    rdx,[rip+0x1e123]        # 4380e0 <_IO_stdin_used@@Base+0x30e0>
  419fbd:	lea    rsi,[rip+0x1e1a4]        # 438168 <_IO_stdin_used@@Base+0x3168>
  419fc4:	mov    rdi,rax
  419fc7:	call   418711 <test_json@@Base>
  419fcc:	add    rsp,0x10
  419fd0:	or     DWORD PTR [rbp-0xc],eax
  419fd3:	cmp    DWORD PTR [rbp-0xc],0x0
  419fd7:	je     419fe0 <main@@Base+0x965>
  419fd9:	mov    eax,0xffffffff
  419fde:	jmp    419fe5 <main@@Base+0x96a>
  419fe0:	mov    eax,0x0
  419fe5:	leave  
  419fe6:	ret    
  419fe7:	push   rbp
  419fe8:	mov    rbp,rsp
  419feb:	sub    rsp,0x30
  419fef:	mov    QWORD PTR [rbp-0x28],rdi
  419ff3:	mov    QWORD PTR [rbp-0x30],rsi
  419ff7:	mov    rax,QWORD PTR fs:0x28
  41a000:	mov    QWORD PTR [rbp-0x8],rax
  41a004:	xor    eax,eax
  41a006:	mov    QWORD PTR [rbp-0x10],0x0
  41a00e:	cmp    QWORD PTR [rbp-0x28],0x7
  41a013:	ja     41a01d <main@@Base+0x9a2>
  41a015:	mov    QWORD PTR [rbp-0x28],0x8
  41a01d:	mov    rdx,QWORD PTR [rbp-0x30]
  41a021:	mov    rcx,QWORD PTR [rbp-0x28]
  41a025:	lea    rax,[rbp-0x10]
  41a029:	mov    rsi,rcx
  41a02c:	mov    rdi,rax
  41a02f:	call   405150 <posix_memalign@plt>
  41a034:	mov    DWORD PTR [rbp-0x14],eax
  41a037:	cmp    DWORD PTR [rbp-0x14],0x0
  41a03b:	je     41a05a <main@@Base+0x9df>
  41a03d:	mov    rax,QWORD PTR [rbp-0x10]
  41a041:	test   rax,rax
  41a044:	je     41a05a <main@@Base+0x9df>
  41a046:	mov    rax,QWORD PTR [rbp-0x10]
  41a04a:	mov    rdi,rax
  41a04d:	call   405030 <free@plt>
  41a052:	mov    QWORD PTR [rbp-0x10],0x0
  41a05a:	mov    rax,QWORD PTR [rbp-0x10]
  41a05e:	mov    rcx,QWORD PTR [rbp-0x8]
  41a062:	xor    rcx,QWORD PTR fs:0x28
  41a06b:	je     41a072 <main@@Base+0x9f7>
  41a06d:	call   405070 <__stack_chk_fail@plt>
  41a072:	leave  
  41a073:	ret    
  41a074:	push   rbp
  41a075:	mov    rbp,rsp
  41a078:	mov    DWORD PTR [rbp-0x4],edi
  41a07b:	mov    eax,DWORD PTR [rbp-0x4]
  41a07e:	pop    rbp
  41a07f:	ret    
  41a080:	push   rbp
  41a081:	mov    rbp,rsp
  41a084:	mov    eax,edi
  41a086:	mov    BYTE PTR [rbp-0x4],al
  41a089:	movzx  eax,BYTE PTR [rbp-0x4]
  41a08d:	pop    rbp
  41a08e:	ret    
  41a08f:	push   rbp
  41a090:	mov    rbp,rsp
  41a093:	mov    DWORD PTR [rbp-0x4],edi
  41a096:	mov    eax,DWORD PTR [rbp-0x4]
  41a099:	pop    rbp
  41a09a:	ret    
  41a09b:	push   rbp
  41a09c:	mov    rbp,rsp
  41a09f:	mov    QWORD PTR [rbp-0x8],rdi
  41a0a3:	mov    QWORD PTR [rbp-0x10],rsi
  41a0a7:	mov    rax,QWORD PTR [rbp-0x8]
  41a0ab:	mov    rdx,QWORD PTR [rax]
  41a0ae:	mov    rax,QWORD PTR [rbp-0x8]
  41a0b2:	mov    rax,QWORD PTR [rax+0x8]
  41a0b6:	cmp    rdx,rax
  41a0b9:	jne    41a0db <main@@Base+0xa60>
  41a0bb:	cmp    QWORD PTR [rbp-0x10],0x0
  41a0c0:	je     41a0d1 <main@@Base+0xa56>
  41a0c2:	mov    rax,QWORD PTR [rbp-0x8]
  41a0c6:	mov    rdx,QWORD PTR [rax+0x30]
  41a0ca:	mov    rax,QWORD PTR [rbp-0x10]
  41a0ce:	mov    QWORD PTR [rax],rdx
  41a0d1:	mov    rax,QWORD PTR [rbp-0x8]
  41a0d5:	mov    rax,QWORD PTR [rax+0x10]
  41a0d9:	jmp    41a0f2 <main@@Base+0xa77>
  41a0db:	cmp    QWORD PTR [rbp-0x10],0x0
  41a0e0:	je     41a0ed <main@@Base+0xa72>
  41a0e2:	mov    rax,QWORD PTR [rbp-0x10]
  41a0e6:	mov    QWORD PTR [rax],0x0
  41a0ed:	mov    eax,0x0
  41a0f2:	pop    rbp
  41a0f3:	ret    
  41a0f4:	push   rbp
  41a0f5:	mov    rbp,rsp
  41a0f8:	sub    rsp,0x20
  41a0fc:	mov    QWORD PTR [rbp-0x18],rdi
  41a100:	mov    QWORD PTR [rbp-0x20],rsi
  41a104:	mov    rdx,QWORD PTR [rbp-0x20]
  41a108:	mov    rax,QWORD PTR [rbp-0x18]
  41a10c:	mov    esi,0x0
  41a111:	mov    rdi,rax
  41a114:	call   4050b0 <memchr@plt>
  41a119:	mov    QWORD PTR [rbp-0x8],rax
  41a11d:	cmp    QWORD PTR [rbp-0x8],0x0
  41a122:	je     41a134 <main@@Base+0xab9>
  41a124:	mov    rdx,QWORD PTR [rbp-0x8]
  41a128:	mov    rax,QWORD PTR [rbp-0x18]
  41a12c:	sub    rdx,rax
  41a12f:	mov    rax,rdx
  41a132:	jmp    41a138 <main@@Base+0xabd>
  41a134:	mov    rax,QWORD PTR [rbp-0x20]
  41a138:	leave  
  41a139:	ret    

000000000041a13a <flatcc_builder_default_alloc@@Base>:
  41a13a:	push   rbp
  41a13b:	mov    rbp,rsp
  41a13e:	sub    rsp,0x30
  41a142:	mov    QWORD PTR [rbp-0x18],rdi
  41a146:	mov    QWORD PTR [rbp-0x20],rsi
  41a14a:	mov    QWORD PTR [rbp-0x28],rdx
  41a14e:	mov    DWORD PTR [rbp-0x2c],ecx
  41a151:	mov    DWORD PTR [rbp-0x30],r8d
  41a155:	cmp    QWORD PTR [rbp-0x28],0x0
  41a15a:	jne    41a198 <flatcc_builder_default_alloc@@Base+0x5e>
  41a15c:	mov    rax,QWORD PTR [rbp-0x20]
  41a160:	mov    rax,QWORD PTR [rax]
  41a163:	test   rax,rax
  41a166:	je     41a18e <flatcc_builder_default_alloc@@Base+0x54>
  41a168:	mov    rax,QWORD PTR [rbp-0x20]
  41a16c:	mov    rax,QWORD PTR [rax]
  41a16f:	mov    rdi,rax
  41a172:	call   405030 <free@plt>
  41a177:	mov    rax,QWORD PTR [rbp-0x20]
  41a17b:	mov    QWORD PTR [rax],0x0
  41a182:	mov    rax,QWORD PTR [rbp-0x20]
  41a186:	mov    QWORD PTR [rax+0x8],0x0
  41a18e:	mov    eax,0x0
  41a193:	jmp    41a2a5 <flatcc_builder_default_alloc@@Base+0x16b>
  41a198:	mov    eax,DWORD PTR [rbp-0x30]
  41a19b:	cmp    eax,0x4
  41a19e:	je     41a1cc <flatcc_builder_default_alloc@@Base+0x92>
  41a1a0:	cmp    eax,0x4
  41a1a3:	jg     41a1ac <flatcc_builder_default_alloc@@Base+0x72>
  41a1a5:	cmp    eax,0x1
  41a1a8:	je     41a1b8 <flatcc_builder_default_alloc@@Base+0x7e>
  41a1aa:	jmp    41a1e0 <flatcc_builder_default_alloc@@Base+0xa6>
  41a1ac:	cmp    eax,0x5
  41a1af:	je     41a1c2 <flatcc_builder_default_alloc@@Base+0x88>
  41a1b1:	cmp    eax,0x7
  41a1b4:	je     41a1d6 <flatcc_builder_default_alloc@@Base+0x9c>
  41a1b6:	jmp    41a1e0 <flatcc_builder_default_alloc@@Base+0xa6>
  41a1b8:	mov    QWORD PTR [rbp-0x10],0x100
  41a1c0:	jmp    41a1e9 <flatcc_builder_default_alloc@@Base+0xaf>
  41a1c2:	mov    rax,QWORD PTR [rbp-0x28]
  41a1c6:	mov    QWORD PTR [rbp-0x10],rax
  41a1ca:	jmp    41a1e9 <flatcc_builder_default_alloc@@Base+0xaf>
  41a1cc:	mov    QWORD PTR [rbp-0x10],0x120
  41a1d4:	jmp    41a1e9 <flatcc_builder_default_alloc@@Base+0xaf>
  41a1d6:	mov    QWORD PTR [rbp-0x10],0x40
  41a1de:	jmp    41a1e9 <flatcc_builder_default_alloc@@Base+0xaf>
  41a1e0:	mov    QWORD PTR [rbp-0x10],0x20
  41a1e8:	nop
  41a1e9:	jmp    41a1ef <flatcc_builder_default_alloc@@Base+0xb5>
  41a1eb:	shl    QWORD PTR [rbp-0x10],1
  41a1ef:	mov    rax,QWORD PTR [rbp-0x10]
  41a1f3:	cmp    rax,QWORD PTR [rbp-0x28]
  41a1f7:	jb     41a1eb <flatcc_builder_default_alloc@@Base+0xb1>
  41a1f9:	mov    rax,QWORD PTR [rbp-0x20]
  41a1fd:	mov    rax,QWORD PTR [rax+0x8]
  41a201:	cmp    rax,QWORD PTR [rbp-0x28]
  41a205:	jb     41a222 <flatcc_builder_default_alloc@@Base+0xe8>
  41a207:	mov    rax,QWORD PTR [rbp-0x20]
  41a20b:	mov    rax,QWORD PTR [rax+0x8]
  41a20f:	shr    rax,1
  41a212:	cmp    rax,QWORD PTR [rbp-0x10]
  41a216:	jb     41a222 <flatcc_builder_default_alloc@@Base+0xe8>
  41a218:	mov    eax,0x0
  41a21d:	jmp    41a2a5 <flatcc_builder_default_alloc@@Base+0x16b>
  41a222:	mov    rax,QWORD PTR [rbp-0x20]
  41a226:	mov    rax,QWORD PTR [rax]
  41a229:	mov    rdx,QWORD PTR [rbp-0x10]
  41a22d:	mov    rsi,rdx
  41a230:	mov    rdi,rax
  41a233:	call   405110 <realloc@plt>
  41a238:	mov    QWORD PTR [rbp-0x8],rax
  41a23c:	cmp    QWORD PTR [rbp-0x8],0x0
  41a241:	jne    41a24a <flatcc_builder_default_alloc@@Base+0x110>
  41a243:	mov    eax,0xffffffff
  41a248:	jmp    41a2a5 <flatcc_builder_default_alloc@@Base+0x16b>
  41a24a:	cmp    DWORD PTR [rbp-0x2c],0x0
  41a24e:	je     41a289 <flatcc_builder_default_alloc@@Base+0x14f>
  41a250:	mov    rax,QWORD PTR [rbp-0x20]
  41a254:	mov    rax,QWORD PTR [rax+0x8]
  41a258:	cmp    rax,QWORD PTR [rbp-0x10]
  41a25c:	jae    41a289 <flatcc_builder_default_alloc@@Base+0x14f>
  41a25e:	mov    rax,QWORD PTR [rbp-0x20]
  41a262:	mov    rax,QWORD PTR [rax+0x8]
  41a266:	mov    rdx,QWORD PTR [rbp-0x10]
  41a26a:	sub    rdx,rax
  41a26d:	mov    rax,QWORD PTR [rbp-0x20]
  41a271:	mov    rcx,QWORD PTR [rax+0x8]
  41a275:	mov    rax,QWORD PTR [rbp-0x8]
  41a279:	add    rax,rcx
  41a27c:	mov    esi,0x0
  41a281:	mov    rdi,rax
  41a284:	call   405090 <memset@plt>
  41a289:	mov    rax,QWORD PTR [rbp-0x20]
  41a28d:	mov    rdx,QWORD PTR [rbp-0x8]
  41a291:	mov    QWORD PTR [rax],rdx
  41a294:	mov    rax,QWORD PTR [rbp-0x20]
  41a298:	mov    rdx,QWORD PTR [rbp-0x10]
  41a29c:	mov    QWORD PTR [rax+0x8],rdx
  41a2a0:	mov    eax,0x0
  41a2a5:	leave  
  41a2a6:	ret    
  41a2a7:	push   rbp
  41a2a8:	mov    rbp,rsp
  41a2ab:	mov    QWORD PTR [rbp-0x18],rdi
  41a2af:	mov    DWORD PTR [rbp-0x1c],esi
  41a2b2:	mov    rax,QWORD PTR [rbp-0x18]
  41a2b6:	add    rax,0x58
  41a2ba:	add    rax,0x10
  41a2be:	mov    QWORD PTR [rbp-0x8],rax
  41a2c2:	mov    rax,QWORD PTR [rbp-0x18]
  41a2c6:	mov    rdx,QWORD PTR [rax+0x68]
  41a2ca:	mov    rax,QWORD PTR [rbp-0x18]
  41a2ce:	mov    eax,DWORD PTR [rax+0x28]
  41a2d1:	mov    eax,eax
  41a2d3:	add    rdx,rax
  41a2d6:	mov    rax,QWORD PTR [rbp-0x18]
  41a2da:	mov    QWORD PTR [rax+0x18],rdx
  41a2de:	mov    rax,QWORD PTR [rbp-0x8]
  41a2e2:	mov    rax,QWORD PTR [rax+0x8]
  41a2e6:	mov    edx,eax
  41a2e8:	mov    rax,QWORD PTR [rbp-0x18]
  41a2ec:	mov    eax,DWORD PTR [rax+0x28]
  41a2ef:	sub    edx,eax
  41a2f1:	mov    rax,QWORD PTR [rbp-0x18]
  41a2f5:	mov    DWORD PTR [rax+0x24],edx
  41a2f8:	mov    rax,QWORD PTR [rbp-0x18]
  41a2fc:	mov    eax,DWORD PTR [rax+0x24]
  41a2ff:	cmp    eax,DWORD PTR [rbp-0x1c]
  41a302:	jbe    41a30e <flatcc_builder_default_alloc@@Base+0x1d4>
  41a304:	mov    rax,QWORD PTR [rbp-0x18]
  41a308:	mov    edx,DWORD PTR [rbp-0x1c]
  41a30b:	mov    DWORD PTR [rax+0x24],edx
  41a30e:	mov    rax,QWORD PTR [rbp-0x18]
  41a312:	mov    rax,QWORD PTR [rax+0x30]
  41a316:	mov    edx,DWORD PTR [rbp-0x1c]
  41a319:	mov    DWORD PTR [rax+0x4],edx
  41a31c:	nop
  41a31d:	pop    rbp
  41a31e:	ret    
  41a31f:	push   rbp
  41a320:	mov    rbp,rsp
  41a323:	sub    rsp,0x30
  41a327:	mov    QWORD PTR [rbp-0x18],rdi
  41a32b:	mov    QWORD PTR [rbp-0x20],rsi
  41a32f:	mov    DWORD PTR [rbp-0x24],edx
  41a332:	mov    rax,QWORD PTR [rbp-0x18]
  41a336:	add    rax,0x58
  41a33a:	add    rax,0x10
  41a33e:	mov    QWORD PTR [rbp-0x8],rax
  41a342:	mov    rax,QWORD PTR [rbp-0x18]
  41a346:	mov    rax,QWORD PTR [rax+0x50]
  41a34a:	mov    rdx,QWORD PTR [rbp-0x18]
  41a34e:	mov    edx,DWORD PTR [rdx+0x28]
  41a351:	mov    ecx,edx
  41a353:	mov    rdx,QWORD PTR [rbp-0x20]
  41a357:	lea    r9,[rcx+rdx*1]
  41a35b:	mov    rdx,QWORD PTR [rbp-0x18]
  41a35f:	mov    rdi,QWORD PTR [rdx+0x40]
  41a363:	mov    rsi,QWORD PTR [rbp-0x8]
  41a367:	mov    r8d,0x1
  41a36d:	mov    ecx,0x1
  41a372:	mov    rdx,r9
  41a375:	call   rax
  41a377:	test   eax,eax
  41a379:	je     41a382 <flatcc_builder_default_alloc@@Base+0x248>
  41a37b:	mov    eax,0xffffffff
  41a380:	jmp    41a398 <flatcc_builder_default_alloc@@Base+0x25e>
  41a382:	mov    edx,DWORD PTR [rbp-0x24]
  41a385:	mov    rax,QWORD PTR [rbp-0x18]
  41a389:	mov    esi,edx
  41a38b:	mov    rdi,rax
  41a38e:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41a393:	mov    eax,0x0
  41a398:	leave  
  41a399:	ret    
  41a39a:	push   rbp
  41a39b:	mov    rbp,rsp
  41a39e:	sub    rsp,0x20
  41a3a2:	mov    QWORD PTR [rbp-0x18],rdi
  41a3a6:	mov    DWORD PTR [rbp-0x1c],esi
  41a3a9:	mov    rax,QWORD PTR [rbp-0x18]
  41a3ad:	mov    eax,DWORD PTR [rax+0x20]
  41a3b0:	mov    eax,eax
  41a3b2:	mov    QWORD PTR [rbp-0x8],rax
  41a3b6:	mov    rax,QWORD PTR [rbp-0x18]
  41a3ba:	mov    edx,DWORD PTR [rax+0x20]
  41a3bd:	mov    eax,DWORD PTR [rbp-0x1c]
  41a3c0:	add    edx,eax
  41a3c2:	mov    rax,QWORD PTR [rbp-0x18]
  41a3c6:	mov    DWORD PTR [rax+0x20],edx
  41a3c9:	mov    rax,QWORD PTR [rbp-0x18]
  41a3cd:	mov    edx,DWORD PTR [rax+0x20]
  41a3d0:	mov    rax,QWORD PTR [rbp-0x18]
  41a3d4:	mov    eax,DWORD PTR [rax+0x24]
  41a3d7:	cmp    edx,eax
  41a3d9:	jb     41a406 <flatcc_builder_default_alloc@@Base+0x2cc>
  41a3db:	mov    rax,QWORD PTR [rbp-0x18]
  41a3df:	mov    eax,DWORD PTR [rax+0x20]
  41a3e2:	add    eax,0x1
  41a3e5:	mov    ecx,eax
  41a3e7:	mov    rax,QWORD PTR [rbp-0x18]
  41a3eb:	mov    edx,0xfffffffc
  41a3f0:	mov    rsi,rcx
  41a3f3:	mov    rdi,rax
  41a3f6:	call   41a31f <flatcc_builder_default_alloc@@Base+0x1e5>
  41a3fb:	test   eax,eax
  41a3fd:	je     41a406 <flatcc_builder_default_alloc@@Base+0x2cc>
  41a3ff:	mov    eax,0x0
  41a404:	jmp    41a415 <flatcc_builder_default_alloc@@Base+0x2db>
  41a406:	mov    rax,QWORD PTR [rbp-0x18]
  41a40a:	mov    rdx,QWORD PTR [rax+0x18]
  41a40e:	mov    rax,QWORD PTR [rbp-0x8]
  41a412:	add    rax,rdx
  41a415:	leave  
  41a416:	ret    
  41a417:	push   rbp
  41a418:	mov    rbp,rsp
  41a41b:	sub    rsp,0x10
  41a41f:	mov    QWORD PTR [rbp-0x8],rdi
  41a423:	mov    DWORD PTR [rbp-0xc],esi
  41a426:	mov    rax,QWORD PTR [rbp-0x8]
  41a42a:	mov    eax,DWORD PTR [rax+0x20]
  41a42d:	sub    eax,DWORD PTR [rbp-0xc]
  41a430:	mov    edx,eax
  41a432:	mov    rax,QWORD PTR [rbp-0x8]
  41a436:	mov    DWORD PTR [rax+0x20],edx
  41a439:	mov    eax,DWORD PTR [rbp-0xc]
  41a43c:	mov    rdx,QWORD PTR [rbp-0x8]
  41a440:	mov    rcx,QWORD PTR [rdx+0x18]
  41a444:	mov    rdx,QWORD PTR [rbp-0x8]
  41a448:	mov    edx,DWORD PTR [rdx+0x20]
  41a44b:	mov    edx,edx
  41a44d:	add    rcx,rdx
  41a450:	mov    rdx,rax
  41a453:	mov    esi,0x0
  41a458:	mov    rdi,rcx
  41a45b:	call   405090 <memset@plt>
  41a460:	nop
  41a461:	leave  
  41a462:	ret    
  41a463:	push   rbp
  41a464:	mov    rbp,rsp
  41a467:	sub    rsp,0x30
  41a46b:	mov    QWORD PTR [rbp-0x18],rdi
  41a46f:	mov    QWORD PTR [rbp-0x20],rsi
  41a473:	mov    DWORD PTR [rbp-0x24],edx
  41a476:	mov    edx,DWORD PTR [rbp-0x24]
  41a479:	mov    rax,QWORD PTR [rbp-0x18]
  41a47d:	mov    esi,edx
  41a47f:	mov    rdi,rax
  41a482:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41a487:	mov    QWORD PTR [rbp-0x8],rax
  41a48b:	cmp    QWORD PTR [rbp-0x8],0x0
  41a490:	jne    41a499 <flatcc_builder_default_alloc@@Base+0x35f>
  41a492:	mov    eax,0x0
  41a497:	jmp    41a4b3 <flatcc_builder_default_alloc@@Base+0x379>
  41a499:	mov    edx,DWORD PTR [rbp-0x24]
  41a49c:	mov    rcx,QWORD PTR [rbp-0x20]
  41a4a0:	mov    rax,QWORD PTR [rbp-0x8]
  41a4a4:	mov    rsi,rcx
  41a4a7:	mov    rdi,rax
  41a4aa:	call   4050f0 <memcpy@plt>
  41a4af:	mov    rax,QWORD PTR [rbp-0x8]
  41a4b3:	leave  
  41a4b4:	ret    
  41a4b5:	push   rbp
  41a4b6:	mov    rbp,rsp
  41a4b9:	sub    rsp,0x30
  41a4bd:	mov    QWORD PTR [rbp-0x18],rdi
  41a4c1:	mov    DWORD PTR [rbp-0x1c],esi
  41a4c4:	mov    eax,ecx
  41a4c6:	mov    WORD PTR [rbp-0x20],dx
  41a4ca:	mov    WORD PTR [rbp-0x24],ax
  41a4ce:	mov    rax,QWORD PTR [rbp-0x18]
  41a4d2:	mov    edx,DWORD PTR [rax+0x20]
  41a4d5:	movzx  eax,WORD PTR [rbp-0x20]
  41a4d9:	add    eax,edx
  41a4db:	lea    edx,[rax-0x1]
  41a4de:	movzx  eax,WORD PTR [rbp-0x20]
  41a4e2:	neg    eax
  41a4e4:	and    eax,edx
  41a4e6:	mov    DWORD PTR [rbp-0x4],eax
  41a4e9:	mov    edx,DWORD PTR [rbp-0x4]
  41a4ec:	mov    eax,DWORD PTR [rbp-0x1c]
  41a4ef:	add    edx,eax
  41a4f1:	mov    rax,QWORD PTR [rbp-0x18]
  41a4f5:	mov    DWORD PTR [rax+0x20],edx
  41a4f8:	mov    rax,QWORD PTR [rbp-0x18]
  41a4fc:	mov    edx,DWORD PTR [rax+0x20]
  41a4ff:	mov    rax,QWORD PTR [rbp-0x18]
  41a503:	mov    eax,DWORD PTR [rax+0x24]
  41a506:	cmp    edx,eax
  41a508:	jb     41a535 <flatcc_builder_default_alloc@@Base+0x3fb>
  41a50a:	mov    rax,QWORD PTR [rbp-0x18]
  41a50e:	mov    eax,DWORD PTR [rax+0x20]
  41a511:	add    eax,0x1
  41a514:	mov    ecx,eax
  41a516:	mov    rax,QWORD PTR [rbp-0x18]
  41a51a:	mov    edx,0xfffc
  41a51f:	mov    rsi,rcx
  41a522:	mov    rdi,rax
  41a525:	call   41a31f <flatcc_builder_default_alloc@@Base+0x1e5>
  41a52a:	test   eax,eax
  41a52c:	je     41a535 <flatcc_builder_default_alloc@@Base+0x3fb>
  41a52e:	mov    eax,0x0
  41a533:	jmp    41a57b <flatcc_builder_default_alloc@@Base+0x441>
  41a535:	mov    rax,QWORD PTR [rbp-0x18]
  41a539:	mov    rax,QWORD PTR [rax+0x8]
  41a53d:	movzx  edx,WORD PTR [rbp-0x24]
  41a541:	add    rdx,rdx
  41a544:	add    rax,rdx
  41a547:	mov    edx,DWORD PTR [rbp-0x4]
  41a54a:	add    edx,0x4
  41a54d:	mov    WORD PTR [rax],dx
  41a550:	mov    rax,QWORD PTR [rbp-0x18]
  41a554:	movzx  eax,WORD PTR [rax+0x10]
  41a558:	cmp    ax,WORD PTR [rbp-0x24]
  41a55c:	ja     41a56d <flatcc_builder_default_alloc@@Base+0x433>
  41a55e:	movzx  eax,WORD PTR [rbp-0x24]
  41a562:	lea    edx,[rax+0x1]
  41a565:	mov    rax,QWORD PTR [rbp-0x18]
  41a569:	mov    WORD PTR [rax+0x10],dx
  41a56d:	mov    rax,QWORD PTR [rbp-0x18]
  41a571:	mov    rdx,QWORD PTR [rax+0x18]
  41a575:	mov    eax,DWORD PTR [rbp-0x4]
  41a578:	add    rax,rdx
  41a57b:	leave  
  41a57c:	ret    
  41a57d:	push   rbp
  41a57e:	mov    rbp,rsp
  41a581:	sub    rsp,0x20
  41a585:	mov    QWORD PTR [rbp-0x18],rdi
  41a589:	mov    eax,esi
  41a58b:	mov    WORD PTR [rbp-0x1c],ax
  41a58f:	mov    rax,QWORD PTR [rbp-0x18]
  41a593:	mov    eax,DWORD PTR [rax+0x20]
  41a596:	add    eax,0x3
  41a599:	and    eax,0xfffffffc
  41a59c:	mov    DWORD PTR [rbp-0x4],eax
  41a59f:	mov    eax,DWORD PTR [rbp-0x4]
  41a5a2:	lea    edx,[rax+0x4]
  41a5a5:	mov    rax,QWORD PTR [rbp-0x18]
  41a5a9:	mov    DWORD PTR [rax+0x20],edx
  41a5ac:	mov    rax,QWORD PTR [rbp-0x18]
  41a5b0:	mov    edx,DWORD PTR [rax+0x20]
  41a5b3:	mov    rax,QWORD PTR [rbp-0x18]
  41a5b7:	mov    eax,DWORD PTR [rax+0x24]
  41a5ba:	cmp    edx,eax
  41a5bc:	jbe    41a5e6 <flatcc_builder_default_alloc@@Base+0x4ac>
  41a5be:	mov    rax,QWORD PTR [rbp-0x18]
  41a5c2:	mov    eax,DWORD PTR [rax+0x20]
  41a5c5:	mov    ecx,eax
  41a5c7:	mov    rax,QWORD PTR [rbp-0x18]
  41a5cb:	mov    edx,0xfffc
  41a5d0:	mov    rsi,rcx
  41a5d3:	mov    rdi,rax
  41a5d6:	call   41a31f <flatcc_builder_default_alloc@@Base+0x1e5>
  41a5db:	test   eax,eax
  41a5dd:	je     41a5e6 <flatcc_builder_default_alloc@@Base+0x4ac>
  41a5df:	mov    eax,0x0
  41a5e4:	jmp    41a644 <flatcc_builder_default_alloc@@Base+0x50a>
  41a5e6:	mov    rax,QWORD PTR [rbp-0x18]
  41a5ea:	mov    rax,QWORD PTR [rax+0x8]
  41a5ee:	movzx  edx,WORD PTR [rbp-0x1c]
  41a5f2:	add    rdx,rdx
  41a5f5:	add    rax,rdx
  41a5f8:	mov    edx,DWORD PTR [rbp-0x4]
  41a5fb:	add    edx,0x4
  41a5fe:	mov    WORD PTR [rax],dx
  41a601:	mov    rax,QWORD PTR [rbp-0x18]
  41a605:	movzx  eax,WORD PTR [rax+0x10]
  41a609:	cmp    ax,WORD PTR [rbp-0x1c]
  41a60d:	ja     41a61e <flatcc_builder_default_alloc@@Base+0x4e4>
  41a60f:	movzx  eax,WORD PTR [rbp-0x1c]
  41a613:	lea    edx,[rax+0x1]
  41a616:	mov    rax,QWORD PTR [rbp-0x18]
  41a61a:	mov    WORD PTR [rax+0x10],dx
  41a61e:	mov    rax,QWORD PTR [rbp-0x18]
  41a622:	mov    rax,QWORD PTR [rax]
  41a625:	lea    rcx,[rax+0x2]
  41a629:	mov    rdx,QWORD PTR [rbp-0x18]
  41a62d:	mov    QWORD PTR [rdx],rcx
  41a630:	mov    edx,DWORD PTR [rbp-0x4]
  41a633:	mov    WORD PTR [rax],dx
  41a636:	mov    rax,QWORD PTR [rbp-0x18]
  41a63a:	mov    rdx,QWORD PTR [rax+0x18]
  41a63e:	mov    eax,DWORD PTR [rbp-0x4]
  41a641:	add    rax,rdx
  41a644:	leave  
  41a645:	ret    
  41a646:	push   rbp
  41a647:	mov    rbp,rsp
  41a64a:	sub    rsp,0x30
  41a64e:	mov    QWORD PTR [rbp-0x18],rdi
  41a652:	mov    DWORD PTR [rbp-0x1c],esi
  41a655:	mov    QWORD PTR [rbp-0x28],rdx
  41a659:	mov    QWORD PTR [rbp-0x30],rcx
  41a65d:	mov    DWORD PTR [rbp-0x20],r8d
  41a661:	mov    rax,QWORD PTR [rbp-0x18]
  41a665:	lea    rdx,[rax+0x58]
  41a669:	mov    eax,DWORD PTR [rbp-0x1c]
  41a66c:	cdqe   
  41a66e:	shl    rax,0x4
  41a672:	add    rax,rdx
  41a675:	mov    QWORD PTR [rbp-0x8],rax
  41a679:	mov    rdx,QWORD PTR [rbp-0x28]
  41a67d:	mov    rax,QWORD PTR [rbp-0x30]
  41a681:	add    rdx,rax
  41a684:	mov    rax,QWORD PTR [rbp-0x8]
  41a688:	mov    rax,QWORD PTR [rax+0x8]
  41a68c:	cmp    rdx,rax
  41a68f:	jbe    41a6e4 <flatcc_builder_default_alloc@@Base+0x5aa>
  41a691:	mov    rax,QWORD PTR [rbp-0x18]
  41a695:	mov    rax,QWORD PTR [rax+0x50]
  41a699:	mov    rcx,QWORD PTR [rbp-0x28]
  41a69d:	mov    rdx,QWORD PTR [rbp-0x30]
  41a6a1:	lea    r9,[rcx+rdx*1]
  41a6a5:	mov    rdx,QWORD PTR [rbp-0x18]
  41a6a9:	mov    rdi,QWORD PTR [rdx+0x40]
  41a6ad:	mov    ecx,DWORD PTR [rbp-0x1c]
  41a6b0:	mov    edx,DWORD PTR [rbp-0x20]
  41a6b3:	mov    rsi,QWORD PTR [rbp-0x8]
  41a6b7:	mov    r8d,ecx
  41a6ba:	mov    ecx,edx
  41a6bc:	mov    rdx,r9
  41a6bf:	call   rax
  41a6c1:	test   eax,eax
  41a6c3:	je     41a6e4 <flatcc_builder_default_alloc@@Base+0x5aa>
  41a6c5:	lea    rcx,[rip+0x1e1ec]        # 4388b8 <flatcc_builder_padding_base@@Base+0x658>
  41a6cc:	mov    edx,0x134
  41a6d1:	lea    rsi,[rip+0x1dd88]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41a6d8:	lea    rdi,[rip+0x1dde1]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41a6df:	call   405080 <__assert_fail@plt>
  41a6e4:	mov    rax,QWORD PTR [rbp-0x8]
  41a6e8:	mov    rax,QWORD PTR [rax]
  41a6eb:	mov    rdx,rax
  41a6ee:	mov    rax,QWORD PTR [rbp-0x28]
  41a6f2:	add    rax,rdx
  41a6f5:	leave  
  41a6f6:	ret    
  41a6f7:	push   rbp
  41a6f8:	mov    rbp,rsp
  41a6fb:	sub    rsp,0x20
  41a6ff:	mov    QWORD PTR [rbp-0x18],rdi
  41a703:	mov    DWORD PTR [rbp-0x1c],esi
  41a706:	mov    rax,QWORD PTR [rbp-0x18]
  41a70a:	mov    rax,QWORD PTR [rax+0x30]
  41a70e:	mov    edx,DWORD PTR [rax+0x10]
  41a711:	mov    rax,QWORD PTR [rbp-0x18]
  41a715:	mov    rax,QWORD PTR [rax+0x30]
  41a719:	movzx  eax,WORD PTR [rax+0x1c]
  41a71d:	movzx  eax,ax
  41a720:	add    eax,eax
  41a722:	add    eax,edx
  41a724:	mov    DWORD PTR [rbp-0x8],eax
  41a727:	mov    eax,DWORD PTR [rbp-0x1c]
  41a72a:	add    eax,0x2
  41a72d:	cdqe   
  41a72f:	add    eax,eax
  41a731:	mov    DWORD PTR [rbp-0x4],eax
  41a734:	mov    ecx,DWORD PTR [rbp-0x4]
  41a737:	mov    edx,DWORD PTR [rbp-0x8]
  41a73a:	mov    rax,QWORD PTR [rbp-0x18]
  41a73e:	mov    r8d,0x1
  41a744:	mov    esi,0x0
  41a749:	mov    rdi,rax
  41a74c:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41a751:	mov    rdx,rax
  41a754:	mov    rax,QWORD PTR [rbp-0x18]
  41a758:	mov    QWORD PTR [rax+0x8],rdx
  41a75c:	mov    rax,QWORD PTR [rbp-0x18]
  41a760:	mov    rax,QWORD PTR [rax+0x8]
  41a764:	test   rax,rax
  41a767:	jne    41a770 <flatcc_builder_default_alloc@@Base+0x636>
  41a769:	mov    eax,0xffffffff
  41a76e:	jmp    41a7de <flatcc_builder_default_alloc@@Base+0x6a4>
  41a770:	mov    rax,QWORD PTR [rbp-0x18]
  41a774:	mov    rax,QWORD PTR [rax+0x8]
  41a778:	lea    rdx,[rax+0x4]
  41a77c:	mov    rax,QWORD PTR [rbp-0x18]
  41a780:	mov    QWORD PTR [rax+0x8],rdx
  41a784:	mov    rax,QWORD PTR [rbp-0x18]
  41a788:	mov    rax,QWORD PTR [rax+0x30]
  41a78c:	mov    eax,DWORD PTR [rax+0x14]
  41a78f:	mov    DWORD PTR [rbp-0x8],eax
  41a792:	mov    eax,DWORD PTR [rbp-0x1c]
  41a795:	cdqe   
  41a797:	add    eax,eax
  41a799:	add    eax,0x1
  41a79c:	mov    DWORD PTR [rbp-0x4],eax
  41a79f:	mov    ecx,DWORD PTR [rbp-0x4]
  41a7a2:	mov    edx,DWORD PTR [rbp-0x8]
  41a7a5:	mov    rax,QWORD PTR [rbp-0x18]
  41a7a9:	mov    r8d,0x0
  41a7af:	mov    esi,0x3
  41a7b4:	mov    rdi,rax
  41a7b7:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41a7bc:	mov    rdx,rax
  41a7bf:	mov    rax,QWORD PTR [rbp-0x18]
  41a7c3:	mov    QWORD PTR [rax],rdx
  41a7c6:	mov    rax,QWORD PTR [rbp-0x18]
  41a7ca:	mov    rax,QWORD PTR [rax]
  41a7cd:	test   rax,rax
  41a7d0:	jne    41a7d9 <flatcc_builder_default_alloc@@Base+0x69f>
  41a7d2:	mov    eax,0xffffffff
  41a7d7:	jmp    41a7de <flatcc_builder_default_alloc@@Base+0x6a4>
  41a7d9:	mov    eax,0x0
  41a7de:	leave  
  41a7df:	ret    
  41a7e0:	push   rbp
  41a7e1:	mov    rbp,rsp
  41a7e4:	sub    rsp,0x30
  41a7e8:	mov    QWORD PTR [rbp-0x28],rdi
  41a7ec:	mov    rax,QWORD PTR [rbp-0x28]
  41a7f0:	add    rax,0x58
  41a7f4:	add    rax,0x50
  41a7f8:	mov    QWORD PTR [rbp-0x8],rax
  41a7fc:	mov    rax,QWORD PTR [rbp-0x28]
  41a800:	mov    eax,DWORD PTR [rax+0xe4]
  41a806:	test   eax,eax
  41a808:	je     41a829 <flatcc_builder_default_alloc@@Base+0x6ef>
  41a80a:	lea    rcx,[rip+0x1e097]        # 4388a8 <flatcc_builder_padding_base@@Base+0x648>
  41a811:	mov    edx,0x156
  41a816:	lea    rsi,[rip+0x1dc43]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41a81d:	lea    rdi,[rip+0x1dc9e]        # 4384c2 <flatcc_builder_padding_base@@Base+0x262>
  41a824:	call   405080 <__assert_fail@plt>
  41a829:	mov    rax,QWORD PTR [rbp-0x28]
  41a82d:	mov    eax,DWORD PTR [rax+0xe4]
  41a833:	mov    edx,eax
  41a835:	mov    rax,QWORD PTR [rbp-0x28]
  41a839:	mov    r8d,0x0
  41a83f:	mov    ecx,0x10
  41a844:	mov    esi,0x6
  41a849:	mov    rdi,rax
  41a84c:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41a851:	test   rax,rax
  41a854:	jne    41a860 <flatcc_builder_default_alloc@@Base+0x726>
  41a856:	mov    eax,0xffffffff
  41a85b:	jmp    41a902 <flatcc_builder_default_alloc@@Base+0x7c8>
  41a860:	mov    rax,QWORD PTR [rbp-0x28]
  41a864:	mov    DWORD PTR [rax+0xe4],0x10
  41a86e:	mov    QWORD PTR [rbp-0x18],0x100
  41a876:	mov    rax,QWORD PTR [rbp-0x28]
  41a87a:	mov    rax,QWORD PTR [rax+0x50]
  41a87e:	mov    rdx,QWORD PTR [rbp-0x28]
  41a882:	mov    rdi,QWORD PTR [rdx+0x40]
  41a886:	mov    rdx,QWORD PTR [rbp-0x18]
  41a88a:	mov    rsi,QWORD PTR [rbp-0x8]
  41a88e:	mov    r8d,0x5
  41a894:	mov    ecx,0x1
  41a899:	call   rax
  41a89b:	test   eax,eax
  41a89d:	je     41a8aa <flatcc_builder_default_alloc@@Base+0x770>
  41a89f:	mov    eax,0xffffffff
  41a8a4:	jmp    41a902 <flatcc_builder_default_alloc@@Base+0x7c8>
  41a8a6:	shl    QWORD PTR [rbp-0x18],1
  41a8aa:	mov    rax,QWORD PTR [rbp-0x18]
  41a8ae:	lea    rdx,[rax+rax*1]
  41a8b2:	mov    rax,QWORD PTR [rbp-0x8]
  41a8b6:	mov    rax,QWORD PTR [rax+0x8]
  41a8ba:	cmp    rdx,rax
  41a8bd:	jbe    41a8a6 <flatcc_builder_default_alloc@@Base+0x76c>
  41a8bf:	mov    rax,QWORD PTR [rbp-0x18]
  41a8c3:	shr    rax,0x2
  41a8c7:	mov    QWORD PTR [rbp-0x18],rax
  41a8cb:	mov    QWORD PTR [rbp-0x10],0x0
  41a8d3:	jmp    41a8da <flatcc_builder_default_alloc@@Base+0x7a0>
  41a8d5:	add    QWORD PTR [rbp-0x10],0x1
  41a8da:	mov    rax,QWORD PTR [rbp-0x10]
  41a8de:	mov    edx,0x1
  41a8e3:	shlx   rax,rdx,rax
  41a8e8:	cmp    rax,QWORD PTR [rbp-0x18]
  41a8ec:	jb     41a8d5 <flatcc_builder_default_alloc@@Base+0x79b>
  41a8ee:	mov    rax,QWORD PTR [rbp-0x28]
  41a8f2:	mov    rdx,QWORD PTR [rbp-0x10]
  41a8f6:	mov    QWORD PTR [rax+0xd8],rdx
  41a8fd:	mov    eax,0x0
  41a902:	leave  
  41a903:	ret    
  41a904:	push   rbp
  41a905:	mov    rbp,rsp
  41a908:	sub    rsp,0x20
  41a90c:	mov    QWORD PTR [rbp-0x18],rdi
  41a910:	mov    DWORD PTR [rbp-0x1c],esi
  41a913:	mov    rax,QWORD PTR [rbp-0x18]
  41a917:	mov    rax,QWORD PTR [rax+0xd8]
  41a91e:	test   rax,rax
  41a921:	jne    41a93a <flatcc_builder_default_alloc@@Base+0x800>
  41a923:	mov    rax,QWORD PTR [rbp-0x18]
  41a927:	mov    rdi,rax
  41a92a:	call   41a7e0 <flatcc_builder_default_alloc@@Base+0x6a6>
  41a92f:	test   eax,eax
  41a931:	je     41a93a <flatcc_builder_default_alloc@@Base+0x800>
  41a933:	mov    eax,0x0
  41a938:	jmp    41a976 <flatcc_builder_default_alloc@@Base+0x83c>
  41a93a:	mov    rax,QWORD PTR [rbp-0x18]
  41a93e:	mov    rax,QWORD PTR [rax+0xa8]
  41a945:	mov    QWORD PTR [rbp-0x8],rax
  41a949:	mov    rax,QWORD PTR [rbp-0x18]
  41a94d:	mov    rax,QWORD PTR [rax+0xd8]
  41a954:	mov    edx,0x20
  41a959:	sub    edx,eax
  41a95b:	mov    eax,edx
  41a95d:	mov    edx,DWORD PTR [rbp-0x1c]
  41a960:	shrx   eax,edx,eax
  41a965:	mov    eax,eax
  41a967:	lea    rdx,[rax*4+0x0]
  41a96f:	mov    rax,QWORD PTR [rbp-0x8]
  41a973:	add    rax,rdx
  41a976:	leave  
  41a977:	ret    

000000000041a978 <flatcc_builder_flush_vtable_cache@@Base>:
  41a978:	push   rbp
  41a979:	mov    rbp,rsp
  41a97c:	sub    rsp,0x20
  41a980:	mov    QWORD PTR [rbp-0x18],rdi
  41a984:	mov    rax,QWORD PTR [rbp-0x18]
  41a988:	add    rax,0x58
  41a98c:	add    rax,0x50
  41a990:	mov    QWORD PTR [rbp-0x8],rax
  41a994:	mov    rax,QWORD PTR [rbp-0x18]
  41a998:	mov    rax,QWORD PTR [rax+0xd8]
  41a99f:	test   rax,rax
  41a9a2:	je     41a9de <flatcc_builder_flush_vtable_cache@@Base+0x66>
  41a9a4:	mov    rax,QWORD PTR [rbp-0x8]
  41a9a8:	mov    rdx,QWORD PTR [rax+0x8]
  41a9ac:	mov    rax,QWORD PTR [rbp-0x8]
  41a9b0:	mov    rax,QWORD PTR [rax]
  41a9b3:	mov    esi,0x0
  41a9b8:	mov    rdi,rax
  41a9bb:	call   405090 <memset@plt>
  41a9c0:	mov    rax,QWORD PTR [rbp-0x18]
  41a9c4:	mov    DWORD PTR [rax+0xe4],0x10
  41a9ce:	mov    rax,QWORD PTR [rbp-0x18]
  41a9d2:	mov    DWORD PTR [rax+0xe0],0x0
  41a9dc:	jmp    41a9df <flatcc_builder_flush_vtable_cache@@Base+0x67>
  41a9de:	nop
  41a9df:	leave  
  41a9e0:	ret    

000000000041a9e1 <flatcc_builder_custom_init@@Base>:
  41a9e1:	push   rbp
  41a9e2:	mov    rbp,rsp
  41a9e5:	sub    rsp,0x30
  41a9e9:	mov    QWORD PTR [rbp-0x8],rdi
  41a9ed:	mov    QWORD PTR [rbp-0x10],rsi
  41a9f1:	mov    QWORD PTR [rbp-0x18],rdx
  41a9f5:	mov    QWORD PTR [rbp-0x20],rcx
  41a9f9:	mov    QWORD PTR [rbp-0x28],r8
  41a9fd:	mov    rax,QWORD PTR [rbp-0x8]
  41aa01:	mov    edx,0x188
  41aa06:	mov    esi,0x0
  41aa0b:	mov    rdi,rax
  41aa0e:	call   405090 <memset@plt>
  41aa13:	cmp    QWORD PTR [rbp-0x10],0x0
  41aa18:	jne    41aa41 <flatcc_builder_custom_init@@Base+0x60>
  41aa1a:	mov    rax,QWORD PTR [rbp-0x8]
  41aa1e:	mov    DWORD PTR [rax+0x128],0x1
  41aa28:	mov    rax,0x41fe14
  41aa2f:	mov    QWORD PTR [rbp-0x10],rax
  41aa33:	mov    rax,QWORD PTR [rbp-0x8]
  41aa37:	add    rax,0x130
  41aa3d:	mov    QWORD PTR [rbp-0x18],rax
  41aa41:	cmp    QWORD PTR [rbp-0x20],0x0
  41aa46:	jne    41aa53 <flatcc_builder_custom_init@@Base+0x72>
  41aa48:	mov    rax,0x41a13a
  41aa4f:	mov    QWORD PTR [rbp-0x20],rax
  41aa53:	mov    rax,QWORD PTR [rbp-0x8]
  41aa57:	mov    rdx,QWORD PTR [rbp-0x28]
  41aa5b:	mov    QWORD PTR [rax+0x40],rdx
  41aa5f:	mov    rax,QWORD PTR [rbp-0x8]
  41aa63:	mov    rdx,QWORD PTR [rbp-0x20]
  41aa67:	mov    QWORD PTR [rax+0x50],rdx
  41aa6b:	mov    rax,QWORD PTR [rbp-0x8]
  41aa6f:	mov    rdx,QWORD PTR [rbp-0x18]
  41aa73:	mov    QWORD PTR [rax+0x38],rdx
  41aa77:	mov    rax,QWORD PTR [rbp-0x8]
  41aa7b:	mov    rdx,QWORD PTR [rbp-0x10]
  41aa7f:	mov    QWORD PTR [rax+0x48],rdx
  41aa83:	mov    eax,0x0
  41aa88:	leave  
  41aa89:	ret    

000000000041aa8a <flatcc_builder_init@@Base>:
  41aa8a:	push   rbp
  41aa8b:	mov    rbp,rsp
  41aa8e:	sub    rsp,0x10
  41aa92:	mov    QWORD PTR [rbp-0x8],rdi
  41aa96:	mov    rax,QWORD PTR [rbp-0x8]
  41aa9a:	mov    r8d,0x0
  41aaa0:	mov    ecx,0x0
  41aaa5:	mov    edx,0x0
  41aaaa:	mov    esi,0x0
  41aaaf:	mov    rdi,rax
  41aab2:	call   41a9e1 <flatcc_builder_custom_init@@Base>
  41aab7:	leave  
  41aab8:	ret    

000000000041aab9 <flatcc_builder_custom_reset@@Base>:
  41aab9:	push   rbp
  41aaba:	mov    rbp,rsp
  41aabd:	sub    rsp,0x20
  41aac1:	mov    QWORD PTR [rbp-0x18],rdi
  41aac5:	mov    DWORD PTR [rbp-0x1c],esi
  41aac8:	mov    DWORD PTR [rbp-0x20],edx
  41aacb:	mov    DWORD PTR [rbp-0xc],0x0
  41aad2:	jmp    41ab89 <flatcc_builder_custom_reset@@Base+0xd0>
  41aad7:	mov    rax,QWORD PTR [rbp-0x18]
  41aadb:	lea    rdx,[rax+0x58]
  41aadf:	mov    eax,DWORD PTR [rbp-0xc]
  41aae2:	cdqe   
  41aae4:	shl    rax,0x4
  41aae8:	add    rax,rdx
  41aaeb:	mov    QWORD PTR [rbp-0x8],rax
  41aaef:	mov    rax,QWORD PTR [rbp-0x8]
  41aaf3:	mov    rax,QWORD PTR [rax]
  41aaf6:	test   rax,rax
  41aaf9:	je     41ab59 <flatcc_builder_custom_reset@@Base+0xa0>
  41aafb:	cmp    DWORD PTR [rbp-0xc],0x5
  41aaff:	je     41ab3b <flatcc_builder_custom_reset@@Base+0x82>
  41ab01:	cmp    DWORD PTR [rbp-0x20],0x0
  41ab05:	je     41ab3b <flatcc_builder_custom_reset@@Base+0x82>
  41ab07:	mov    rax,QWORD PTR [rbp-0x18]
  41ab0b:	mov    rax,QWORD PTR [rax+0x50]
  41ab0f:	mov    rdx,QWORD PTR [rbp-0x18]
  41ab13:	mov    rdi,QWORD PTR [rdx+0x40]
  41ab17:	mov    edx,DWORD PTR [rbp-0xc]
  41ab1a:	mov    rsi,QWORD PTR [rbp-0x8]
  41ab1e:	mov    r8d,edx
  41ab21:	mov    ecx,0x1
  41ab26:	mov    edx,0x1
  41ab2b:	call   rax
  41ab2d:	test   eax,eax
  41ab2f:	je     41ab3b <flatcc_builder_custom_reset@@Base+0x82>
  41ab31:	mov    eax,0xffffffff
  41ab36:	jmp    41acc8 <flatcc_builder_custom_reset@@Base+0x20f>
  41ab3b:	mov    rax,QWORD PTR [rbp-0x8]
  41ab3f:	mov    rdx,QWORD PTR [rax+0x8]
  41ab43:	mov    rax,QWORD PTR [rbp-0x8]
  41ab47:	mov    rax,QWORD PTR [rax]
  41ab4a:	mov    esi,0x0
  41ab4f:	mov    rdi,rax
  41ab52:	call   405090 <memset@plt>
  41ab57:	jmp    41ab85 <flatcc_builder_custom_reset@@Base+0xcc>
  41ab59:	mov    rax,QWORD PTR [rbp-0x8]
  41ab5d:	mov    rax,QWORD PTR [rax+0x8]
  41ab61:	test   rax,rax
  41ab64:	je     41ab85 <flatcc_builder_custom_reset@@Base+0xcc>
  41ab66:	lea    rcx,[rip+0x1dd63]        # 4388d0 <flatcc_builder_padding_base@@Base+0x670>
  41ab6d:	mov    edx,0x1b2
  41ab72:	lea    rsi,[rip+0x1d8e7]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ab79:	lea    rdi,[rip+0x1d951]        # 4384d1 <flatcc_builder_padding_base@@Base+0x271>
  41ab80:	call   405080 <__assert_fail@plt>
  41ab85:	add    DWORD PTR [rbp-0xc],0x1
  41ab89:	cmp    DWORD PTR [rbp-0xc],0x7
  41ab8d:	jle    41aad7 <flatcc_builder_custom_reset@@Base+0x1e>
  41ab93:	mov    rax,QWORD PTR [rbp-0x18]
  41ab97:	mov    DWORD PTR [rax+0xe0],0x0
  41aba1:	mov    rax,QWORD PTR [rbp-0x18]
  41aba5:	mov    eax,DWORD PTR [rax+0xe4]
  41abab:	test   eax,eax
  41abad:	je     41abbd <flatcc_builder_custom_reset@@Base+0x104>
  41abaf:	mov    rax,QWORD PTR [rbp-0x18]
  41abb3:	mov    DWORD PTR [rax+0xe4],0x10
  41abbd:	mov    rax,QWORD PTR [rbp-0x18]
  41abc1:	mov    WORD PTR [rax+0xe8],0x0
  41abca:	mov    rax,QWORD PTR [rbp-0x18]
  41abce:	mov    DWORD PTR [rax+0xf0],0x0
  41abd8:	mov    rax,QWORD PTR [rbp-0x18]
  41abdc:	mov    DWORD PTR [rax+0xf4],0x0
  41abe6:	mov    rax,QWORD PTR [rbp-0x18]
  41abea:	mov    DWORD PTR [rax+0x104],0x0
  41abf4:	mov    rax,QWORD PTR [rbp-0x18]
  41abf8:	mov    DWORD PTR [rax+0x108],0x0
  41ac02:	mov    rax,QWORD PTR [rbp-0x18]
  41ac06:	mov    DWORD PTR [rax+0x20],0x0
  41ac0d:	mov    rax,QWORD PTR [rbp-0x18]
  41ac11:	mov    DWORD PTR [rax+0x24],0x0
  41ac18:	mov    rax,QWORD PTR [rbp-0x18]
  41ac1c:	mov    DWORD PTR [rax+0xfc],0x0
  41ac26:	mov    rax,QWORD PTR [rbp-0x18]
  41ac2a:	mov    DWORD PTR [rax+0x100],0x0
  41ac34:	mov    rax,QWORD PTR [rbp-0x18]
  41ac38:	mov    rdx,QWORD PTR [rax+0x68]
  41ac3c:	mov    rax,QWORD PTR [rbp-0x18]
  41ac40:	mov    QWORD PTR [rax+0x18],rdx
  41ac44:	mov    rax,QWORD PTR [rbp-0x18]
  41ac48:	mov    rdx,QWORD PTR [rax+0x88]
  41ac4f:	mov    rax,QWORD PTR [rbp-0x18]
  41ac53:	mov    QWORD PTR [rax],rdx
  41ac56:	mov    rax,QWORD PTR [rbp-0x18]
  41ac5a:	mov    rdx,QWORD PTR [rax+0x58]
  41ac5e:	mov    rax,QWORD PTR [rbp-0x18]
  41ac62:	mov    QWORD PTR [rax+0x8],rdx
  41ac66:	mov    rax,QWORD PTR [rbp-0x18]
  41ac6a:	mov    QWORD PTR [rax+0x30],0x0
  41ac72:	cmp    DWORD PTR [rbp-0x1c],0x0
  41ac76:	je     41aca3 <flatcc_builder_custom_reset@@Base+0x1ea>
  41ac78:	mov    rax,QWORD PTR [rbp-0x18]
  41ac7c:	mov    QWORD PTR [rax+0x118],0x0
  41ac87:	mov    rax,QWORD PTR [rbp-0x18]
  41ac8b:	mov    DWORD PTR [rax+0x120],0x0
  41ac95:	mov    rax,QWORD PTR [rbp-0x18]
  41ac99:	mov    DWORD PTR [rax+0x124],0x0
  41aca3:	mov    rax,QWORD PTR [rbp-0x18]
  41aca7:	mov    eax,DWORD PTR [rax+0x128]
  41acad:	test   eax,eax
  41acaf:	je     41acc3 <flatcc_builder_custom_reset@@Base+0x20a>
  41acb1:	mov    rax,QWORD PTR [rbp-0x18]
  41acb5:	add    rax,0x130
  41acbb:	mov    rdi,rax
  41acbe:	call   41fbf9 <flatcc_emitter_reset@@Base>
  41acc3:	mov    eax,0x0
  41acc8:	leave  
  41acc9:	ret    

000000000041acca <flatcc_builder_reset@@Base>:
  41acca:	push   rbp
  41accb:	mov    rbp,rsp
  41acce:	sub    rsp,0x10
  41acd2:	mov    QWORD PTR [rbp-0x8],rdi
  41acd6:	mov    rax,QWORD PTR [rbp-0x8]
  41acda:	mov    edx,0x0
  41acdf:	mov    esi,0x0
  41ace4:	mov    rdi,rax
  41ace7:	call   41aab9 <flatcc_builder_custom_reset@@Base>
  41acec:	leave  
  41aced:	ret    

000000000041acee <flatcc_builder_clear@@Base>:
  41acee:	push   rbp
  41acef:	mov    rbp,rsp
  41acf2:	sub    rsp,0x20
  41acf6:	mov    QWORD PTR [rbp-0x18],rdi
  41acfa:	mov    DWORD PTR [rbp-0xc],0x0
  41ad01:	jmp    41ad45 <flatcc_builder_clear@@Base+0x57>
  41ad03:	mov    rax,QWORD PTR [rbp-0x18]
  41ad07:	lea    rdx,[rax+0x58]
  41ad0b:	mov    eax,DWORD PTR [rbp-0xc]
  41ad0e:	cdqe   
  41ad10:	shl    rax,0x4
  41ad14:	add    rax,rdx
  41ad17:	mov    QWORD PTR [rbp-0x8],rax
  41ad1b:	mov    rax,QWORD PTR [rbp-0x18]
  41ad1f:	mov    rax,QWORD PTR [rax+0x50]
  41ad23:	mov    rdx,QWORD PTR [rbp-0x18]
  41ad27:	mov    rdi,QWORD PTR [rdx+0x40]
  41ad2b:	mov    edx,DWORD PTR [rbp-0xc]
  41ad2e:	mov    rsi,QWORD PTR [rbp-0x8]
  41ad32:	mov    r8d,edx
  41ad35:	mov    ecx,0x0
  41ad3a:	mov    edx,0x0
  41ad3f:	call   rax
  41ad41:	add    DWORD PTR [rbp-0xc],0x1
  41ad45:	cmp    DWORD PTR [rbp-0xc],0x7
  41ad49:	jle    41ad03 <flatcc_builder_clear@@Base+0x15>
  41ad4b:	mov    rax,QWORD PTR [rbp-0x18]
  41ad4f:	mov    eax,DWORD PTR [rax+0x128]
  41ad55:	test   eax,eax
  41ad57:	je     41ad6b <flatcc_builder_clear@@Base+0x7d>
  41ad59:	mov    rax,QWORD PTR [rbp-0x18]
  41ad5d:	add    rax,0x130
  41ad63:	mov    rdi,rax
  41ad66:	call   41fd85 <flatcc_emitter_clear@@Base>
  41ad6b:	mov    rax,QWORD PTR [rbp-0x18]
  41ad6f:	mov    edx,0x188
  41ad74:	mov    esi,0x0
  41ad79:	mov    rdi,rax
  41ad7c:	call   405090 <memset@plt>
  41ad81:	nop
  41ad82:	leave  
  41ad83:	ret    
  41ad84:	push   rbp
  41ad85:	mov    rbp,rsp
  41ad88:	mov    QWORD PTR [rbp-0x8],rdi
  41ad8c:	mov    eax,esi
  41ad8e:	mov    WORD PTR [rbp-0xc],ax
  41ad92:	mov    rax,QWORD PTR [rbp-0x8]
  41ad96:	movzx  eax,WORD PTR [rax+0xe8]
  41ad9d:	cmp    ax,WORD PTR [rbp-0xc]
  41ada1:	jae    41adb2 <flatcc_builder_clear@@Base+0xc4>
  41ada3:	mov    rax,QWORD PTR [rbp-0x8]
  41ada7:	movzx  edx,WORD PTR [rbp-0xc]
  41adab:	mov    WORD PTR [rax+0xe8],dx
  41adb2:	nop
  41adb3:	pop    rbp
  41adb4:	ret    
  41adb5:	push   rbp
  41adb6:	mov    rbp,rsp
  41adb9:	mov    QWORD PTR [rbp-0x8],rdi
  41adbd:	mov    eax,esi
  41adbf:	mov    WORD PTR [rbp-0xc],ax
  41adc3:	mov    rax,QWORD PTR [rbp-0x8]
  41adc7:	movzx  eax,WORD PTR [rax]
  41adca:	cmp    ax,WORD PTR [rbp-0xc]
  41adce:	jae    41addb <flatcc_builder_clear@@Base+0xed>
  41add0:	mov    rax,QWORD PTR [rbp-0x8]
  41add4:	movzx  edx,WORD PTR [rbp-0xc]
  41add8:	mov    WORD PTR [rax],dx
  41addb:	nop
  41addc:	pop    rbp
  41addd:	ret    

000000000041adde <flatcc_builder_enter_user_frame_ptr@@Base>:
  41adde:	push   rbp
  41addf:	mov    rbp,rsp
  41ade2:	sub    rsp,0x20
  41ade6:	mov    QWORD PTR [rbp-0x18],rdi
  41adea:	mov    QWORD PTR [rbp-0x20],rsi
  41adee:	mov    rax,QWORD PTR [rbp-0x20]
  41adf2:	add    rax,0x7
  41adf6:	and    rax,0xfffffffffffffff8
  41adfa:	add    rax,0x8
  41adfe:	mov    QWORD PTR [rbp-0x20],rax
  41ae02:	mov    rax,QWORD PTR [rbp-0x18]
  41ae06:	mov    rdx,QWORD PTR [rax+0x180]
  41ae0d:	mov    rcx,QWORD PTR [rbp-0x20]
  41ae11:	mov    rax,QWORD PTR [rbp-0x18]
  41ae15:	mov    r8d,0x0
  41ae1b:	mov    esi,0x7
  41ae20:	mov    rdi,rax
  41ae23:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41ae28:	mov    QWORD PTR [rbp-0x8],rax
  41ae2c:	cmp    QWORD PTR [rbp-0x8],0x0
  41ae31:	jne    41ae3a <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  41ae33:	mov    eax,0x0
  41ae38:	jmp    41aea4 <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  41ae3a:	mov    rdx,QWORD PTR [rbp-0x20]
  41ae3e:	mov    rax,QWORD PTR [rbp-0x8]
  41ae42:	mov    esi,0x0
  41ae47:	mov    rdi,rax
  41ae4a:	call   405090 <memset@plt>
  41ae4f:	mov    rax,QWORD PTR [rbp-0x8]
  41ae53:	lea    rdx,[rax+0x8]
  41ae57:	mov    QWORD PTR [rbp-0x8],rdx
  41ae5b:	mov    rdx,QWORD PTR [rbp-0x18]
  41ae5f:	mov    rdx,QWORD PTR [rdx+0x178]
  41ae66:	mov    QWORD PTR [rax],rdx
  41ae69:	mov    rax,QWORD PTR [rbp-0x18]
  41ae6d:	mov    rax,QWORD PTR [rax+0x180]
  41ae74:	lea    rdx,[rax+0x8]
  41ae78:	mov    rax,QWORD PTR [rbp-0x18]
  41ae7c:	mov    QWORD PTR [rax+0x178],rdx
  41ae83:	mov    rax,QWORD PTR [rbp-0x18]
  41ae87:	mov    rdx,QWORD PTR [rax+0x180]
  41ae8e:	mov    rax,QWORD PTR [rbp-0x20]
  41ae92:	add    rdx,rax
  41ae95:	mov    rax,QWORD PTR [rbp-0x18]
  41ae99:	mov    QWORD PTR [rax+0x180],rdx
  41aea0:	mov    rax,QWORD PTR [rbp-0x8]
  41aea4:	leave  
  41aea5:	ret    

000000000041aea6 <flatcc_builder_enter_user_frame@@Base>:
  41aea6:	push   rbp
  41aea7:	mov    rbp,rsp
  41aeaa:	sub    rsp,0x20
  41aeae:	mov    QWORD PTR [rbp-0x18],rdi
  41aeb2:	mov    QWORD PTR [rbp-0x20],rsi
  41aeb6:	mov    rax,QWORD PTR [rbp-0x20]
  41aeba:	add    rax,0x7
  41aebe:	and    rax,0xfffffffffffffff8
  41aec2:	add    rax,0x8
  41aec6:	mov    QWORD PTR [rbp-0x20],rax
  41aeca:	mov    rax,QWORD PTR [rbp-0x18]
  41aece:	mov    rdx,QWORD PTR [rax+0x180]
  41aed5:	mov    rcx,QWORD PTR [rbp-0x20]
  41aed9:	mov    rax,QWORD PTR [rbp-0x18]
  41aedd:	mov    r8d,0x0
  41aee3:	mov    esi,0x7
  41aee8:	mov    rdi,rax
  41aeeb:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41aef0:	mov    QWORD PTR [rbp-0x8],rax
  41aef4:	cmp    QWORD PTR [rbp-0x8],0x0
  41aef9:	jne    41af02 <flatcc_builder_enter_user_frame@@Base+0x5c>
  41aefb:	mov    eax,0x0
  41af00:	jmp    41af73 <flatcc_builder_enter_user_frame@@Base+0xcd>
  41af02:	mov    rdx,QWORD PTR [rbp-0x20]
  41af06:	mov    rax,QWORD PTR [rbp-0x8]
  41af0a:	mov    esi,0x0
  41af0f:	mov    rdi,rax
  41af12:	call   405090 <memset@plt>
  41af17:	mov    rax,QWORD PTR [rbp-0x8]
  41af1b:	lea    rdx,[rax+0x8]
  41af1f:	mov    QWORD PTR [rbp-0x8],rdx
  41af23:	mov    rdx,QWORD PTR [rbp-0x18]
  41af27:	mov    rdx,QWORD PTR [rdx+0x178]
  41af2e:	mov    QWORD PTR [rax],rdx
  41af31:	mov    rax,QWORD PTR [rbp-0x18]
  41af35:	mov    rax,QWORD PTR [rax+0x180]
  41af3c:	lea    rdx,[rax+0x8]
  41af40:	mov    rax,QWORD PTR [rbp-0x18]
  41af44:	mov    QWORD PTR [rax+0x178],rdx
  41af4b:	mov    rax,QWORD PTR [rbp-0x18]
  41af4f:	mov    rdx,QWORD PTR [rax+0x180]
  41af56:	mov    rax,QWORD PTR [rbp-0x20]
  41af5a:	add    rdx,rax
  41af5d:	mov    rax,QWORD PTR [rbp-0x18]
  41af61:	mov    QWORD PTR [rax+0x180],rdx
  41af68:	mov    rax,QWORD PTR [rbp-0x18]
  41af6c:	mov    rax,QWORD PTR [rax+0x178]
  41af73:	leave  
  41af74:	ret    

000000000041af75 <flatcc_builder_exit_user_frame@@Base>:
  41af75:	push   rbp
  41af76:	mov    rbp,rsp
  41af79:	sub    rsp,0x20
  41af7d:	mov    QWORD PTR [rbp-0x18],rdi
  41af81:	mov    rax,QWORD PTR [rbp-0x18]
  41af85:	mov    rax,QWORD PTR [rax+0x178]
  41af8c:	test   rax,rax
  41af8f:	jne    41afb0 <flatcc_builder_exit_user_frame@@Base+0x3b>
  41af91:	lea    rcx,[rip+0x1d958]        # 4388f0 <flatcc_builder_padding_base@@Base+0x690>
  41af98:	mov    edx,0x21e
  41af9d:	lea    rsi,[rip+0x1d4bc]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41afa4:	lea    rdi,[rip+0x1d538]        # 4384e3 <flatcc_builder_padding_base@@Base+0x283>
  41afab:	call   405080 <__assert_fail@plt>
  41afb0:	mov    rax,QWORD PTR [rbp-0x18]
  41afb4:	mov    rdx,QWORD PTR [rax+0xc8]
  41afbb:	mov    rax,QWORD PTR [rbp-0x18]
  41afbf:	mov    rax,QWORD PTR [rax+0x178]
  41afc6:	mov    eax,eax
  41afc8:	add    rax,rdx
  41afcb:	mov    QWORD PTR [rbp-0x8],rax
  41afcf:	mov    rax,QWORD PTR [rbp-0x18]
  41afd3:	mov    rax,QWORD PTR [rax+0x178]
  41afda:	lea    rdx,[rax-0x8]
  41afde:	mov    rax,QWORD PTR [rbp-0x18]
  41afe2:	mov    QWORD PTR [rax+0x180],rdx
  41afe9:	mov    rax,QWORD PTR [rbp-0x8]
  41afed:	mov    rdx,QWORD PTR [rax-0x8]
  41aff1:	mov    rax,QWORD PTR [rbp-0x18]
  41aff5:	mov    QWORD PTR [rax+0x178],rdx
  41affc:	mov    rax,QWORD PTR [rbp-0x18]
  41b000:	mov    rax,QWORD PTR [rax+0x178]
  41b007:	leave  
  41b008:	ret    

000000000041b009 <flatcc_builder_exit_user_frame_at@@Base>:
  41b009:	push   rbp
  41b00a:	mov    rbp,rsp
  41b00d:	sub    rsp,0x10
  41b011:	mov    QWORD PTR [rbp-0x8],rdi
  41b015:	mov    QWORD PTR [rbp-0x10],rsi
  41b019:	mov    rax,QWORD PTR [rbp-0x8]
  41b01d:	mov    rax,QWORD PTR [rax+0x178]
  41b024:	cmp    rax,QWORD PTR [rbp-0x10]
  41b028:	jae    41b049 <flatcc_builder_exit_user_frame_at@@Base+0x40>
  41b02a:	lea    rcx,[rip+0x1d8ef]        # 438920 <flatcc_builder_padding_base@@Base+0x6c0>
  41b031:	mov    edx,0x227
  41b036:	lea    rsi,[rip+0x1d423]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41b03d:	lea    rdi,[rip+0x1d4bc]        # 438500 <flatcc_builder_padding_base@@Base+0x2a0>
  41b044:	call   405080 <__assert_fail@plt>
  41b049:	mov    rax,QWORD PTR [rbp-0x8]
  41b04d:	mov    rdx,QWORD PTR [rbp-0x10]
  41b051:	mov    QWORD PTR [rax+0x178],rdx
  41b058:	mov    rax,QWORD PTR [rbp-0x8]
  41b05c:	mov    rdi,rax
  41b05f:	call   41af75 <flatcc_builder_exit_user_frame@@Base>
  41b064:	leave  
  41b065:	ret    

000000000041b066 <flatcc_builder_get_current_user_frame@@Base>:
  41b066:	push   rbp
  41b067:	mov    rbp,rsp
  41b06a:	mov    QWORD PTR [rbp-0x8],rdi
  41b06e:	mov    rax,QWORD PTR [rbp-0x8]
  41b072:	mov    rax,QWORD PTR [rax+0x178]
  41b079:	pop    rbp
  41b07a:	ret    

000000000041b07b <flatcc_builder_get_user_frame_ptr@@Base>:
  41b07b:	push   rbp
  41b07c:	mov    rbp,rsp
  41b07f:	mov    QWORD PTR [rbp-0x8],rdi
  41b083:	mov    QWORD PTR [rbp-0x10],rsi
  41b087:	mov    rax,QWORD PTR [rbp-0x8]
  41b08b:	mov    rax,QWORD PTR [rax+0xc8]
  41b092:	mov    rdx,QWORD PTR [rbp-0x10]
  41b096:	mov    edx,edx
  41b098:	add    rax,rdx
  41b09b:	pop    rbp
  41b09c:	ret    
  41b09d:	push   rbp
  41b09e:	mov    rbp,rsp
  41b0a1:	sub    rsp,0x10
  41b0a5:	mov    QWORD PTR [rbp-0x8],rdi
  41b0a9:	mov    eax,esi
  41b0ab:	mov    WORD PTR [rbp-0xc],ax
  41b0af:	mov    rax,QWORD PTR [rbp-0x8]
  41b0b3:	mov    eax,DWORD PTR [rax+0x104]
  41b0b9:	lea    edx,[rax+0x1]
  41b0bc:	mov    rax,QWORD PTR [rbp-0x8]
  41b0c0:	mov    DWORD PTR [rax+0x104],edx
  41b0c6:	mov    rax,QWORD PTR [rbp-0x8]
  41b0ca:	mov    edx,DWORD PTR [rax+0x104]
  41b0d0:	mov    rax,QWORD PTR [rbp-0x8]
  41b0d4:	mov    eax,DWORD PTR [rax+0x108]
  41b0da:	cmp    edx,eax
  41b0dc:	jle    41b1d8 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  41b0e2:	mov    rax,QWORD PTR [rbp-0x8]
  41b0e6:	mov    eax,DWORD PTR [rax+0x120]
  41b0ec:	test   eax,eax
  41b0ee:	jle    41b112 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  41b0f0:	mov    rax,QWORD PTR [rbp-0x8]
  41b0f4:	mov    edx,DWORD PTR [rax+0x104]
  41b0fa:	mov    rax,QWORD PTR [rbp-0x8]
  41b0fe:	mov    eax,DWORD PTR [rax+0x120]
  41b104:	cmp    edx,eax
  41b106:	jle    41b112 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  41b108:	mov    eax,0xffffffff
  41b10d:	jmp    41b273 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  41b112:	mov    rax,QWORD PTR [rbp-0x8]
  41b116:	mov    eax,DWORD PTR [rax+0x104]
  41b11c:	sub    eax,0x1
  41b11f:	movsxd rdx,eax
  41b122:	mov    rax,rdx
  41b125:	shl    rax,0x3
  41b129:	add    rax,rdx
  41b12c:	shl    rax,0x2
  41b130:	mov    rdx,rax
  41b133:	mov    rax,QWORD PTR [rbp-0x8]
  41b137:	mov    r8d,0x0
  41b13d:	mov    ecx,0x24
  41b142:	mov    esi,0x4
  41b147:	mov    rdi,rax
  41b14a:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41b14f:	mov    rdx,rax
  41b152:	mov    rax,QWORD PTR [rbp-0x8]
  41b156:	mov    QWORD PTR [rax+0x30],rdx
  41b15a:	mov    rax,QWORD PTR [rbp-0x8]
  41b15e:	mov    rax,QWORD PTR [rax+0x30]
  41b162:	test   rax,rax
  41b165:	jne    41b171 <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  41b167:	mov    eax,0xffffffff
  41b16c:	jmp    41b273 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  41b171:	mov    rax,QWORD PTR [rbp-0x8]
  41b175:	mov    rax,QWORD PTR [rax+0xa0]
  41b17c:	movabs rdx,0xe38e38e38e38e38f
  41b186:	mul    rdx
  41b189:	mov    rax,rdx
  41b18c:	shr    rax,0x5
  41b190:	mov    edx,eax
  41b192:	mov    rax,QWORD PTR [rbp-0x8]
  41b196:	mov    DWORD PTR [rax+0x108],edx
  41b19c:	mov    rax,QWORD PTR [rbp-0x8]
  41b1a0:	mov    eax,DWORD PTR [rax+0x120]
  41b1a6:	test   eax,eax
  41b1a8:	jle    41b1ec <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  41b1aa:	mov    rax,QWORD PTR [rbp-0x8]
  41b1ae:	mov    edx,DWORD PTR [rax+0x120]
  41b1b4:	mov    rax,QWORD PTR [rbp-0x8]
  41b1b8:	mov    eax,DWORD PTR [rax+0x108]
  41b1be:	cmp    edx,eax
  41b1c0:	jge    41b1ec <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  41b1c2:	mov    rax,QWORD PTR [rbp-0x8]
  41b1c6:	mov    edx,DWORD PTR [rax+0x120]
  41b1cc:	mov    rax,QWORD PTR [rbp-0x8]
  41b1d0:	mov    DWORD PTR [rax+0x108],edx
  41b1d6:	jmp    41b1ec <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  41b1d8:	mov    rax,QWORD PTR [rbp-0x8]
  41b1dc:	mov    rax,QWORD PTR [rax+0x30]
  41b1e0:	lea    rdx,[rax+0x24]
  41b1e4:	mov    rax,QWORD PTR [rbp-0x8]
  41b1e8:	mov    QWORD PTR [rax+0x30],rdx
  41b1ec:	mov    rax,QWORD PTR [rbp-0x8]
  41b1f0:	mov    rax,QWORD PTR [rax+0x30]
  41b1f4:	mov    rdx,QWORD PTR [rbp-0x8]
  41b1f8:	mov    edx,DWORD PTR [rdx+0x20]
  41b1fb:	mov    DWORD PTR [rax+0x8],edx
  41b1fe:	mov    rax,QWORD PTR [rbp-0x8]
  41b202:	mov    rax,QWORD PTR [rax+0x30]
  41b206:	mov    rdx,QWORD PTR [rbp-0x8]
  41b20a:	movzx  edx,WORD PTR [rdx+0xea]
  41b211:	mov    WORD PTR [rax+0xc],dx
  41b215:	mov    rax,QWORD PTR [rbp-0x8]
  41b219:	movzx  edx,WORD PTR [rbp-0xc]
  41b21d:	mov    WORD PTR [rax+0xea],dx
  41b224:	mov    rax,QWORD PTR [rbp-0x8]
  41b228:	mov    rax,QWORD PTR [rax+0x30]
  41b22c:	mov    rdx,QWORD PTR [rbp-0x8]
  41b230:	mov    edx,DWORD PTR [rdx+0x28]
  41b233:	mov    DWORD PTR [rax],edx
  41b235:	mov    rax,QWORD PTR [rbp-0x8]
  41b239:	mov    rax,QWORD PTR [rax+0x30]
  41b23d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41b244:	mov    rax,QWORD PTR [rbp-0x8]
  41b248:	mov    edx,DWORD PTR [rax+0x28]
  41b24b:	mov    rax,QWORD PTR [rbp-0x8]
  41b24f:	mov    eax,DWORD PTR [rax+0x20]
  41b252:	add    eax,edx
  41b254:	add    eax,0x7
  41b257:	and    eax,0xfffffff8
  41b25a:	mov    edx,eax
  41b25c:	mov    rax,QWORD PTR [rbp-0x8]
  41b260:	mov    DWORD PTR [rax+0x28],edx
  41b263:	mov    rax,QWORD PTR [rbp-0x8]
  41b267:	mov    DWORD PTR [rax+0x20],0x0
  41b26e:	mov    eax,0x0
  41b273:	leave  
  41b274:	ret    
  41b275:	push   rbp
  41b276:	mov    rbp,rsp
  41b279:	sub    rsp,0x10
  41b27d:	mov    QWORD PTR [rbp-0x8],rdi
  41b281:	mov    rax,QWORD PTR [rbp-0x8]
  41b285:	mov    eax,DWORD PTR [rax+0x20]
  41b288:	mov    edx,eax
  41b28a:	mov    rax,QWORD PTR [rbp-0x8]
  41b28e:	mov    rax,QWORD PTR [rax+0x18]
  41b292:	mov    esi,0x0
  41b297:	mov    rdi,rax
  41b29a:	call   405090 <memset@plt>
  41b29f:	mov    rax,QWORD PTR [rbp-0x8]
  41b2a3:	mov    rax,QWORD PTR [rax+0x30]
  41b2a7:	mov    edx,DWORD PTR [rax+0x8]
  41b2aa:	mov    rax,QWORD PTR [rbp-0x8]
  41b2ae:	mov    DWORD PTR [rax+0x20],edx
  41b2b1:	mov    rax,QWORD PTR [rbp-0x8]
  41b2b5:	mov    rax,QWORD PTR [rax+0x30]
  41b2b9:	mov    edx,DWORD PTR [rax]
  41b2bb:	mov    rax,QWORD PTR [rbp-0x8]
  41b2bf:	mov    DWORD PTR [rax+0x28],edx
  41b2c2:	mov    rax,QWORD PTR [rbp-0x8]
  41b2c6:	mov    rax,QWORD PTR [rax+0x30]
  41b2ca:	mov    edx,DWORD PTR [rax+0x4]
  41b2cd:	mov    rax,QWORD PTR [rbp-0x8]
  41b2d1:	mov    esi,edx
  41b2d3:	mov    rdi,rax
  41b2d6:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41b2db:	mov    rax,QWORD PTR [rbp-0x8]
  41b2df:	movzx  eax,WORD PTR [rax+0xea]
  41b2e6:	movzx  edx,ax
  41b2e9:	mov    rax,QWORD PTR [rbp-0x8]
  41b2ed:	mov    esi,edx
  41b2ef:	mov    rdi,rax
  41b2f2:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41b2f7:	mov    rax,QWORD PTR [rbp-0x8]
  41b2fb:	mov    rax,QWORD PTR [rax+0x30]
  41b2ff:	movzx  edx,WORD PTR [rax+0xc]
  41b303:	mov    rax,QWORD PTR [rbp-0x8]
  41b307:	mov    WORD PTR [rax+0xea],dx
  41b30e:	mov    rax,QWORD PTR [rbp-0x8]
  41b312:	mov    rax,QWORD PTR [rax+0x30]
  41b316:	lea    rdx,[rax-0x24]
  41b31a:	mov    rax,QWORD PTR [rbp-0x8]
  41b31e:	mov    QWORD PTR [rax+0x30],rdx
  41b322:	mov    rax,QWORD PTR [rbp-0x8]
  41b326:	mov    eax,DWORD PTR [rax+0x104]
  41b32c:	lea    edx,[rax-0x1]
  41b32f:	mov    rax,QWORD PTR [rbp-0x8]
  41b333:	mov    DWORD PTR [rax+0x104],edx
  41b339:	nop
  41b33a:	leave  
  41b33b:	ret    
  41b33c:	push   rbp
  41b33d:	mov    rbp,rsp
  41b340:	mov    QWORD PTR [rbp-0x8],rdi
  41b344:	mov    DWORD PTR [rbp-0xc],esi
  41b347:	mov    eax,edx
  41b349:	mov    WORD PTR [rbp-0x10],ax
  41b34d:	mov    rax,QWORD PTR [rbp-0x8]
  41b351:	mov    eax,DWORD PTR [rax+0xf0]
  41b357:	sub    eax,DWORD PTR [rbp-0xc]
  41b35a:	movzx  edx,WORD PTR [rbp-0x10]
  41b35e:	sub    edx,0x1
  41b361:	and    eax,edx
  41b363:	pop    rbp
  41b364:	ret    
  41b365:	push   rbp
  41b366:	mov    rbp,rsp
  41b369:	mov    QWORD PTR [rbp-0x8],rdi
  41b36d:	mov    eax,esi
  41b36f:	mov    WORD PTR [rbp-0xc],ax
  41b373:	mov    rax,QWORD PTR [rbp-0x8]
  41b377:	mov    eax,DWORD PTR [rax+0xf4]
  41b37d:	movzx  edx,WORD PTR [rbp-0xc]
  41b381:	sub    edx,0x1
  41b384:	and    eax,edx
  41b386:	pop    rbp
  41b387:	ret    
  41b388:	push   rbp
  41b389:	mov    rbp,rsp
  41b38c:	sub    rsp,0x20
  41b390:	mov    QWORD PTR [rbp-0x18],rdi
  41b394:	mov    QWORD PTR [rbp-0x20],rsi
  41b398:	mov    rax,QWORD PTR [rbp-0x18]
  41b39c:	mov    edx,DWORD PTR [rax+0xf0]
  41b3a2:	mov    rax,QWORD PTR [rbp-0x20]
  41b3a6:	mov    rax,QWORD PTR [rax]
  41b3a9:	sub    edx,eax
  41b3ab:	mov    eax,edx
  41b3ad:	mov    DWORD PTR [rbp-0x4],eax
  41b3b0:	mov    rax,QWORD PTR [rbp-0x20]
  41b3b4:	mov    rax,QWORD PTR [rax]
  41b3b7:	cmp    rax,0x10
  41b3bb:	jbe    41b3d2 <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  41b3bd:	mov    rax,QWORD PTR [rbp-0x20]
  41b3c1:	mov    rax,QWORD PTR [rax]
  41b3c4:	lea    rdx,[rax-0x10]
  41b3c8:	mov    eax,0xffffffff
  41b3cd:	cmp    rdx,rax
  41b3d0:	ja     41b3e1 <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  41b3d2:	mov    rax,QWORD PTR [rbp-0x18]
  41b3d6:	mov    eax,DWORD PTR [rax+0xf0]
  41b3dc:	cmp    eax,DWORD PTR [rbp-0x4]
  41b3df:	jg     41b400 <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  41b3e1:	lea    rcx,[rip+0x1d580]        # 438968 <flatcc_builder_padding_base@@Base+0x708>
  41b3e8:	mov    edx,0x287
  41b3ed:	lea    rsi,[rip+0x1d06c]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41b3f4:	lea    rdi,[rip+0x1d0c5]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41b3fb:	call   405080 <__assert_fail@plt>
  41b400:	mov    rax,QWORD PTR [rbp-0x18]
  41b404:	mov    rax,QWORD PTR [rax+0x48]
  41b408:	mov    rdx,QWORD PTR [rbp-0x20]
  41b40c:	mov    r8,QWORD PTR [rdx]
  41b40f:	mov    rdx,QWORD PTR [rbp-0x20]
  41b413:	mov    edx,DWORD PTR [rdx+0x8]
  41b416:	mov    rcx,QWORD PTR [rbp-0x20]
  41b41a:	lea    rsi,[rcx+0x10]
  41b41e:	mov    rcx,QWORD PTR [rbp-0x18]
  41b422:	mov    rdi,QWORD PTR [rcx+0x38]
  41b426:	mov    ecx,DWORD PTR [rbp-0x4]
  41b429:	call   rax
  41b42b:	test   eax,eax
  41b42d:	je     41b44e <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  41b42f:	lea    rcx,[rip+0x1d532]        # 438968 <flatcc_builder_padding_base@@Base+0x708>
  41b436:	mov    edx,0x28b
  41b43b:	lea    rsi,[rip+0x1d01e]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41b442:	lea    rdi,[rip+0x1d077]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41b449:	call   405080 <__assert_fail@plt>
  41b44e:	mov    rax,QWORD PTR [rbp-0x18]
  41b452:	mov    edx,DWORD PTR [rbp-0x4]
  41b455:	mov    DWORD PTR [rax+0xf0],edx
  41b45b:	mov    rax,QWORD PTR [rbp-0x18]
  41b45f:	mov    eax,DWORD PTR [rax+0xf0]
  41b465:	leave  
  41b466:	ret    
  41b467:	push   rbp
  41b468:	mov    rbp,rsp
  41b46b:	sub    rsp,0x20
  41b46f:	mov    QWORD PTR [rbp-0x18],rdi
  41b473:	mov    QWORD PTR [rbp-0x20],rsi
  41b477:	mov    rax,QWORD PTR [rbp-0x18]
  41b47b:	mov    eax,DWORD PTR [rax+0xf4]
  41b481:	mov    DWORD PTR [rbp-0x4],eax
  41b484:	mov    rax,QWORD PTR [rbp-0x20]
  41b488:	mov    rax,QWORD PTR [rax]
  41b48b:	mov    edx,eax
  41b48d:	mov    eax,DWORD PTR [rbp-0x4]
  41b490:	add    edx,eax
  41b492:	mov    rax,QWORD PTR [rbp-0x18]
  41b496:	mov    DWORD PTR [rax+0xf4],edx
  41b49c:	mov    rax,QWORD PTR [rbp-0x18]
  41b4a0:	mov    eax,DWORD PTR [rax+0xf4]
  41b4a6:	cmp    eax,DWORD PTR [rbp-0x4]
  41b4a9:	jge    41b4ca <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  41b4ab:	lea    rcx,[rip+0x1d4a6]        # 438958 <flatcc_builder_padding_base@@Base+0x6f8>
  41b4b2:	mov    edx,0x2a1
  41b4b7:	lea    rsi,[rip+0x1cfa2]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41b4be:	lea    rdi,[rip+0x1cffb]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41b4c5:	call   405080 <__assert_fail@plt>
  41b4ca:	mov    rax,QWORD PTR [rbp-0x18]
  41b4ce:	mov    rax,QWORD PTR [rax+0x48]
  41b4d2:	mov    rdx,QWORD PTR [rbp-0x20]
  41b4d6:	mov    r8,QWORD PTR [rdx]
  41b4d9:	mov    rdx,QWORD PTR [rbp-0x20]
  41b4dd:	mov    edx,DWORD PTR [rdx+0x8]
  41b4e0:	mov    rcx,QWORD PTR [rbp-0x20]
  41b4e4:	lea    rsi,[rcx+0x10]
  41b4e8:	mov    rcx,QWORD PTR [rbp-0x18]
  41b4ec:	mov    rdi,QWORD PTR [rcx+0x38]
  41b4f0:	mov    ecx,DWORD PTR [rbp-0x4]
  41b4f3:	call   rax
  41b4f5:	test   eax,eax
  41b4f7:	je     41b518 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  41b4f9:	lea    rcx,[rip+0x1d458]        # 438958 <flatcc_builder_padding_base@@Base+0x6f8>
  41b500:	mov    edx,0x2a5
  41b505:	lea    rsi,[rip+0x1cf54]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41b50c:	lea    rdi,[rip+0x1cfad]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41b513:	call   405080 <__assert_fail@plt>
  41b518:	mov    eax,DWORD PTR [rbp-0x4]
  41b51b:	add    eax,0x1
  41b51e:	leave  
  41b51f:	ret    
  41b520:	push   rbp
  41b521:	mov    rbp,rsp
  41b524:	sub    rsp,0xd0
  41b52b:	mov    QWORD PTR [rbp-0xb8],rdi
  41b532:	mov    QWORD PTR [rbp-0xc0],rsi
  41b539:	mov    eax,edx
  41b53b:	mov    DWORD PTR [rbp-0xc8],ecx
  41b541:	mov    WORD PTR [rbp-0xc4],ax
  41b548:	mov    rax,QWORD PTR fs:0x28
  41b551:	mov    QWORD PTR [rbp-0x8],rax
  41b555:	xor    eax,eax
  41b557:	cmp    WORD PTR [rbp-0xc4],0x0
  41b55f:	jne    41b58b <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  41b561:	mov    rax,QWORD PTR [rbp-0xb8]
  41b568:	movzx  eax,WORD PTR [rax+0xec]
  41b56f:	test   ax,ax
  41b572:	je     41b584 <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  41b574:	mov    rax,QWORD PTR [rbp-0xb8]
  41b57b:	movzx  eax,WORD PTR [rax+0xec]
  41b582:	jmp    41b592 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  41b584:	mov    eax,0x1
  41b589:	jmp    41b592 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  41b58b:	movzx  eax,WORD PTR [rbp-0xc4]
  41b592:	mov    WORD PTR [rbp-0xc4],ax
  41b599:	mov    rax,QWORD PTR [rbp-0xc0]
  41b5a0:	mov    esi,0x4
  41b5a5:	mov    rdi,rax
  41b5a8:	call   41adb5 <flatcc_builder_clear@@Base+0xc7>
  41b5ad:	movzx  edx,WORD PTR [rbp-0xc4]
  41b5b4:	mov    rax,QWORD PTR [rbp-0xc0]
  41b5bb:	mov    esi,edx
  41b5bd:	mov    rdi,rax
  41b5c0:	call   41adb5 <flatcc_builder_clear@@Base+0xc7>
  41b5c5:	cmp    DWORD PTR [rbp-0xc8],0x0
  41b5cc:	jne    41b6c2 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  41b5d2:	movzx  edx,WORD PTR [rbp-0xc4]
  41b5d9:	mov    rax,QWORD PTR [rbp-0xb8]
  41b5e0:	mov    esi,edx
  41b5e2:	mov    rdi,rax
  41b5e5:	call   41b365 <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  41b5ea:	mov    eax,eax
  41b5ec:	mov    QWORD PTR [rbp-0xa8],rax
  41b5f3:	cmp    QWORD PTR [rbp-0xa8],0x0
  41b5fb:	je     41b6c2 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  41b601:	mov    QWORD PTR [rbp-0xa0],0x0
  41b60c:	mov    DWORD PTR [rbp-0x98],0x0
  41b616:	cmp    QWORD PTR [rbp-0xa8],0x0
  41b61e:	je     41b686 <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  41b620:	mov    rdx,QWORD PTR [rbp-0xa0]
  41b627:	mov    rax,QWORD PTR [rbp-0xa8]
  41b62e:	add    rax,rdx
  41b631:	mov    QWORD PTR [rbp-0xa0],rax
  41b638:	mov    eax,DWORD PTR [rbp-0x98]
  41b63e:	cdqe   
  41b640:	shl    rax,0x4
  41b644:	add    rax,rbp
  41b647:	sub    rax,0x90
  41b64d:	mov    rdx,0x438260
  41b654:	mov    QWORD PTR [rax],rdx
  41b657:	mov    eax,DWORD PTR [rbp-0x98]
  41b65d:	cdqe   
  41b65f:	shl    rax,0x4
  41b663:	add    rax,rbp
  41b666:	lea    rdx,[rax-0x88]
  41b66d:	mov    rax,QWORD PTR [rbp-0xa8]
  41b674:	mov    QWORD PTR [rdx],rax
  41b677:	mov    eax,DWORD PTR [rbp-0x98]
  41b67d:	add    eax,0x1
  41b680:	mov    DWORD PTR [rbp-0x98],eax
  41b686:	lea    rdx,[rbp-0xa0]
  41b68d:	mov    rax,QWORD PTR [rbp-0xb8]
  41b694:	mov    rsi,rdx
  41b697:	mov    rdi,rax
  41b69a:	call   41b467 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  41b69f:	test   eax,eax
  41b6a1:	jne    41b6c2 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  41b6a3:	lea    rcx,[rip+0x1d29e]        # 438948 <flatcc_builder_padding_base@@Base+0x6e8>
  41b6aa:	mov    edx,0x2be
  41b6af:	lea    rsi,[rip+0x1cdaa]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41b6b6:	lea    rdi,[rip+0x1ce03]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41b6bd:	call   405080 <__assert_fail@plt>
  41b6c2:	mov    eax,0x0
  41b6c7:	mov    rcx,QWORD PTR [rbp-0x8]
  41b6cb:	xor    rcx,QWORD PTR fs:0x28
  41b6d4:	je     41b6db <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  41b6d6:	call   405070 <__stack_chk_fail@plt>
  41b6db:	leave  
  41b6dc:	ret    

000000000041b6dd <flatcc_builder_embed_buffer@@Base>:
  41b6dd:	push   rbp
  41b6de:	mov    rbp,rsp
  41b6e1:	sub    rsp,0xe0
  41b6e8:	mov    QWORD PTR [rbp-0xb8],rdi
  41b6ef:	mov    eax,esi
  41b6f1:	mov    QWORD PTR [rbp-0xc8],rdx
  41b6f8:	mov    QWORD PTR [rbp-0xd0],rcx
  41b6ff:	mov    edx,r8d
  41b702:	mov    DWORD PTR [rbp-0xd4],r9d
  41b709:	mov    WORD PTR [rbp-0xbc],ax
  41b710:	mov    WORD PTR [rbp-0xc0],dx
  41b717:	mov    rax,QWORD PTR fs:0x28
  41b720:	mov    QWORD PTR [rbp-0x8],rax
  41b724:	xor    eax,eax
  41b726:	mov    eax,DWORD PTR [rbp-0xd4]
  41b72c:	and    eax,0x2
  41b72f:	mov    DWORD PTR [rbp-0xa8],eax
  41b735:	mov    rax,QWORD PTR [rbp-0xb8]
  41b73c:	mov    eax,DWORD PTR [rax+0x100]
  41b742:	test   eax,eax
  41b744:	setne  al
  41b747:	movzx  ecx,al
  41b74a:	movzx  edx,WORD PTR [rbp-0xbc]
  41b751:	lea    rsi,[rbp-0xc0]
  41b758:	mov    rax,QWORD PTR [rbp-0xb8]
  41b75f:	mov    rdi,rax
  41b762:	call   41b520 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  41b767:	test   eax,eax
  41b769:	je     41b775 <flatcc_builder_embed_buffer@@Base+0x98>
  41b76b:	mov    eax,0x0
  41b770:	jmp    41b94f <flatcc_builder_embed_buffer@@Base+0x272>
  41b775:	movzx  eax,WORD PTR [rbp-0xc0]
  41b77c:	movzx  edx,ax
  41b77f:	mov    rax,QWORD PTR [rbp-0xd0]
  41b786:	mov    ecx,eax
  41b788:	cmp    DWORD PTR [rbp-0xa8],0x0
  41b78f:	je     41b798 <flatcc_builder_embed_buffer@@Base+0xbb>
  41b791:	mov    eax,0x4
  41b796:	jmp    41b79d <flatcc_builder_embed_buffer@@Base+0xc0>
  41b798:	mov    eax,0x0
  41b79d:	add    ecx,eax
  41b79f:	mov    rax,QWORD PTR [rbp-0xb8]
  41b7a6:	mov    esi,ecx
  41b7a8:	mov    rdi,rax
  41b7ab:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41b7b0:	mov    DWORD PTR [rbp-0xa4],eax
  41b7b6:	mov    rax,QWORD PTR [rbp-0xd0]
  41b7bd:	mov    edx,eax
  41b7bf:	mov    eax,DWORD PTR [rbp-0xa4]
  41b7c5:	add    eax,edx
  41b7c7:	mov    edi,eax
  41b7c9:	call   41a074 <main@@Base+0x9f9>
  41b7ce:	mov    DWORD PTR [rbp-0xac],eax
  41b7d4:	mov    QWORD PTR [rbp-0xa0],0x0
  41b7df:	mov    DWORD PTR [rbp-0x98],0x0
  41b7e9:	mov    rax,QWORD PTR [rbp-0xb8]
  41b7f0:	mov    eax,DWORD PTR [rax+0x100]
  41b7f6:	test   eax,eax
  41b7f8:	je     41b857 <flatcc_builder_embed_buffer@@Base+0x17a>
  41b7fa:	mov    rax,QWORD PTR [rbp-0xa0]
  41b801:	add    rax,0x4
  41b805:	mov    QWORD PTR [rbp-0xa0],rax
  41b80c:	mov    eax,DWORD PTR [rbp-0x98]
  41b812:	cdqe   
  41b814:	shl    rax,0x4
  41b818:	add    rax,rbp
  41b81b:	lea    rdx,[rax-0x90]
  41b822:	lea    rax,[rbp-0xac]
  41b829:	mov    QWORD PTR [rdx],rax
  41b82c:	mov    eax,DWORD PTR [rbp-0x98]
  41b832:	cdqe   
  41b834:	shl    rax,0x4
  41b838:	add    rax,rbp
  41b83b:	sub    rax,0x88
  41b841:	mov    QWORD PTR [rax],0x4
  41b848:	mov    eax,DWORD PTR [rbp-0x98]
  41b84e:	add    eax,0x1
  41b851:	mov    DWORD PTR [rbp-0x98],eax
  41b857:	cmp    QWORD PTR [rbp-0xd0],0x0
  41b85f:	je     41b8c8 <flatcc_builder_embed_buffer@@Base+0x1eb>
  41b861:	mov    rdx,QWORD PTR [rbp-0xa0]
  41b868:	mov    rax,QWORD PTR [rbp-0xd0]
  41b86f:	add    rax,rdx
  41b872:	mov    QWORD PTR [rbp-0xa0],rax
  41b879:	mov    eax,DWORD PTR [rbp-0x98]
  41b87f:	cdqe   
  41b881:	shl    rax,0x4
  41b885:	add    rax,rbp
  41b888:	lea    rdx,[rax-0x90]
  41b88f:	mov    rax,QWORD PTR [rbp-0xc8]
  41b896:	mov    QWORD PTR [rdx],rax
  41b899:	mov    eax,DWORD PTR [rbp-0x98]
  41b89f:	cdqe   
  41b8a1:	shl    rax,0x4
  41b8a5:	add    rax,rbp
  41b8a8:	lea    rdx,[rax-0x88]
  41b8af:	mov    rax,QWORD PTR [rbp-0xd0]
  41b8b6:	mov    QWORD PTR [rdx],rax
  41b8b9:	mov    eax,DWORD PTR [rbp-0x98]
  41b8bf:	add    eax,0x1
  41b8c2:	mov    DWORD PTR [rbp-0x98],eax
  41b8c8:	cmp    DWORD PTR [rbp-0xa4],0x0
  41b8cf:	je     41b936 <flatcc_builder_embed_buffer@@Base+0x259>
  41b8d1:	mov    rdx,QWORD PTR [rbp-0xa0]
  41b8d8:	mov    eax,DWORD PTR [rbp-0xa4]
  41b8de:	add    rax,rdx
  41b8e1:	mov    QWORD PTR [rbp-0xa0],rax
  41b8e8:	mov    eax,DWORD PTR [rbp-0x98]
  41b8ee:	cdqe   
  41b8f0:	shl    rax,0x4
  41b8f4:	add    rax,rbp
  41b8f7:	sub    rax,0x90
  41b8fd:	mov    rdx,0x438260
  41b904:	mov    QWORD PTR [rax],rdx
  41b907:	mov    edx,DWORD PTR [rbp-0x98]
  41b90d:	mov    eax,DWORD PTR [rbp-0xa4]
  41b913:	movsxd rdx,edx
  41b916:	shl    rdx,0x4
  41b91a:	add    rdx,rbp
  41b91d:	sub    rdx,0x88
  41b924:	mov    QWORD PTR [rdx],rax
  41b927:	mov    eax,DWORD PTR [rbp-0x98]
  41b92d:	add    eax,0x1
  41b930:	mov    DWORD PTR [rbp-0x98],eax
  41b936:	lea    rdx,[rbp-0xa0]
  41b93d:	mov    rax,QWORD PTR [rbp-0xb8]
  41b944:	mov    rsi,rdx
  41b947:	mov    rdi,rax
  41b94a:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41b94f:	mov    rdi,QWORD PTR [rbp-0x8]
  41b953:	xor    rdi,QWORD PTR fs:0x28
  41b95c:	je     41b963 <flatcc_builder_embed_buffer@@Base+0x286>
  41b95e:	call   405070 <__stack_chk_fail@plt>
  41b963:	leave  
  41b964:	ret    

000000000041b965 <flatcc_builder_create_buffer@@Base>:
  41b965:	push   rbp
  41b966:	mov    rbp,rsp
  41b969:	sub    rsp,0xf0
  41b970:	mov    QWORD PTR [rbp-0xd8],rdi
  41b977:	mov    QWORD PTR [rbp-0xe0],rsi
  41b97e:	mov    eax,edx
  41b980:	mov    DWORD PTR [rbp-0xe8],ecx
  41b986:	mov    edx,r8d
  41b989:	mov    DWORD PTR [rbp-0xf0],r9d
  41b990:	mov    WORD PTR [rbp-0xe4],ax
  41b997:	mov    WORD PTR [rbp-0xec],dx
  41b99e:	mov    rax,QWORD PTR fs:0x28
  41b9a7:	mov    QWORD PTR [rbp-0x8],rax
  41b9ab:	xor    eax,eax
  41b9ad:	mov    DWORD PTR [rbp-0xb8],0x0
  41b9b7:	mov    DWORD PTR [rbp-0xbc],0x0
  41b9c1:	mov    eax,DWORD PTR [rbp-0xf0]
  41b9c7:	and    eax,0x1
  41b9ca:	test   eax,eax
  41b9cc:	setne  al
  41b9cf:	movzx  eax,al
  41b9d2:	mov    DWORD PTR [rbp-0xb4],eax
  41b9d8:	mov    eax,DWORD PTR [rbp-0xf0]
  41b9de:	and    eax,0x2
  41b9e1:	test   eax,eax
  41b9e3:	setne  al
  41b9e6:	movzx  eax,al
  41b9e9:	mov    DWORD PTR [rbp-0xb0],eax
  41b9ef:	movzx  edx,WORD PTR [rbp-0xe4]
  41b9f6:	mov    ecx,DWORD PTR [rbp-0xb4]
  41b9fc:	lea    rsi,[rbp-0xec]
  41ba03:	mov    rax,QWORD PTR [rbp-0xd8]
  41ba0a:	mov    rdi,rax
  41ba0d:	call   41b520 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  41ba12:	test   eax,eax
  41ba14:	je     41ba20 <flatcc_builder_create_buffer@@Base+0xbb>
  41ba16:	mov    eax,0x0
  41ba1b:	jmp    41bd86 <flatcc_builder_create_buffer@@Base+0x421>
  41ba20:	movzx  eax,WORD PTR [rbp-0xec]
  41ba27:	movzx  edx,ax
  41ba2a:	mov    rax,QWORD PTR [rbp-0xd8]
  41ba31:	mov    esi,edx
  41ba33:	mov    rdi,rax
  41ba36:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41ba3b:	cmp    QWORD PTR [rbp-0xe0],0x0
  41ba43:	je     41ba7a <flatcc_builder_create_buffer@@Base+0x115>
  41ba45:	mov    rax,QWORD PTR [rbp-0xe0]
  41ba4c:	mov    eax,DWORD PTR [rax]
  41ba4e:	mov    DWORD PTR [rbp-0xbc],eax
  41ba54:	mov    eax,DWORD PTR [rbp-0xbc]
  41ba5a:	mov    edi,eax
  41ba5c:	call   41a08f <main@@Base+0xa14>
  41ba61:	mov    DWORD PTR [rbp-0xbc],eax
  41ba67:	mov    eax,DWORD PTR [rbp-0xbc]
  41ba6d:	mov    edi,eax
  41ba6f:	call   41a074 <main@@Base+0x9f9>
  41ba74:	mov    DWORD PTR [rbp-0xbc],eax
  41ba7a:	mov    eax,DWORD PTR [rbp-0xbc]
  41ba80:	test   eax,eax
  41ba82:	je     41ba8b <flatcc_builder_create_buffer@@Base+0x126>
  41ba84:	mov    eax,0x4
  41ba89:	jmp    41ba90 <flatcc_builder_create_buffer@@Base+0x12b>
  41ba8b:	mov    eax,0x0
  41ba90:	mov    DWORD PTR [rbp-0xb8],eax
  41ba96:	movzx  eax,WORD PTR [rbp-0xec]
  41ba9d:	movzx  edx,ax
  41baa0:	cmp    DWORD PTR [rbp-0xb0],0x0
  41baa7:	je     41bab0 <flatcc_builder_create_buffer@@Base+0x14b>
  41baa9:	mov    ecx,0x4
  41baae:	jmp    41bab5 <flatcc_builder_create_buffer@@Base+0x150>
  41bab0:	mov    ecx,0x0
  41bab5:	mov    eax,DWORD PTR [rbp-0xb8]
  41babb:	add    eax,ecx
  41babd:	lea    ecx,[rax+0x4]
  41bac0:	mov    rax,QWORD PTR [rbp-0xd8]
  41bac7:	mov    esi,ecx
  41bac9:	mov    rdi,rax
  41bacc:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41bad1:	mov    DWORD PTR [rbp-0xac],eax
  41bad7:	mov    QWORD PTR [rbp-0xa0],0x0
  41bae2:	mov    DWORD PTR [rbp-0x98],0x0
  41baec:	cmp    DWORD PTR [rbp-0xb4],0x0
  41baf3:	jne    41bafe <flatcc_builder_create_buffer@@Base+0x199>
  41baf5:	cmp    DWORD PTR [rbp-0xb0],0x0
  41bafc:	je     41bb5b <flatcc_builder_create_buffer@@Base+0x1f6>
  41bafe:	mov    rax,QWORD PTR [rbp-0xa0]
  41bb05:	add    rax,0x4
  41bb09:	mov    QWORD PTR [rbp-0xa0],rax
  41bb10:	mov    eax,DWORD PTR [rbp-0x98]
  41bb16:	cdqe   
  41bb18:	shl    rax,0x4
  41bb1c:	add    rax,rbp
  41bb1f:	lea    rdx,[rax-0x90]
  41bb26:	lea    rax,[rbp-0xc0]
  41bb2d:	mov    QWORD PTR [rdx],rax
  41bb30:	mov    eax,DWORD PTR [rbp-0x98]
  41bb36:	cdqe   
  41bb38:	shl    rax,0x4
  41bb3c:	add    rax,rbp
  41bb3f:	sub    rax,0x88
  41bb45:	mov    QWORD PTR [rax],0x4
  41bb4c:	mov    eax,DWORD PTR [rbp-0x98]
  41bb52:	add    eax,0x1
  41bb55:	mov    DWORD PTR [rbp-0x98],eax
  41bb5b:	mov    rax,QWORD PTR [rbp-0xa0]
  41bb62:	add    rax,0x4
  41bb66:	mov    QWORD PTR [rbp-0xa0],rax
  41bb6d:	mov    eax,DWORD PTR [rbp-0x98]
  41bb73:	cdqe   
  41bb75:	shl    rax,0x4
  41bb79:	add    rax,rbp
  41bb7c:	lea    rdx,[rax-0x90]
  41bb83:	lea    rax,[rbp-0xc4]
  41bb8a:	mov    QWORD PTR [rdx],rax
  41bb8d:	mov    eax,DWORD PTR [rbp-0x98]
  41bb93:	cdqe   
  41bb95:	shl    rax,0x4
  41bb99:	add    rax,rbp
  41bb9c:	sub    rax,0x88
  41bba2:	mov    QWORD PTR [rax],0x4
  41bba9:	mov    eax,DWORD PTR [rbp-0x98]
  41bbaf:	add    eax,0x1
  41bbb2:	mov    DWORD PTR [rbp-0x98],eax
  41bbb8:	cmp    DWORD PTR [rbp-0xb8],0x0
  41bbbf:	je     41bc27 <flatcc_builder_create_buffer@@Base+0x2c2>
  41bbc1:	mov    rdx,QWORD PTR [rbp-0xa0]
  41bbc8:	mov    eax,DWORD PTR [rbp-0xb8]
  41bbce:	add    rax,rdx
  41bbd1:	mov    QWORD PTR [rbp-0xa0],rax
  41bbd8:	mov    eax,DWORD PTR [rbp-0x98]
  41bbde:	cdqe   
  41bbe0:	shl    rax,0x4
  41bbe4:	add    rax,rbp
  41bbe7:	lea    rdx,[rax-0x90]
  41bbee:	lea    rax,[rbp-0xbc]
  41bbf5:	mov    QWORD PTR [rdx],rax
  41bbf8:	mov    edx,DWORD PTR [rbp-0x98]
  41bbfe:	mov    eax,DWORD PTR [rbp-0xb8]
  41bc04:	movsxd rdx,edx
  41bc07:	shl    rdx,0x4
  41bc0b:	add    rdx,rbp
  41bc0e:	sub    rdx,0x88
  41bc15:	mov    QWORD PTR [rdx],rax
  41bc18:	mov    eax,DWORD PTR [rbp-0x98]
  41bc1e:	add    eax,0x1
  41bc21:	mov    DWORD PTR [rbp-0x98],eax
  41bc27:	cmp    DWORD PTR [rbp-0xac],0x0
  41bc2e:	je     41bc95 <flatcc_builder_create_buffer@@Base+0x330>
  41bc30:	mov    rdx,QWORD PTR [rbp-0xa0]
  41bc37:	mov    eax,DWORD PTR [rbp-0xac]
  41bc3d:	add    rax,rdx
  41bc40:	mov    QWORD PTR [rbp-0xa0],rax
  41bc47:	mov    eax,DWORD PTR [rbp-0x98]
  41bc4d:	cdqe   
  41bc4f:	shl    rax,0x4
  41bc53:	add    rax,rbp
  41bc56:	sub    rax,0x90
  41bc5c:	mov    rdx,0x438260
  41bc63:	mov    QWORD PTR [rax],rdx
  41bc66:	mov    edx,DWORD PTR [rbp-0x98]
  41bc6c:	mov    eax,DWORD PTR [rbp-0xac]
  41bc72:	movsxd rdx,edx
  41bc75:	shl    rdx,0x4
  41bc79:	add    rdx,rbp
  41bc7c:	sub    rdx,0x88
  41bc83:	mov    QWORD PTR [rdx],rax
  41bc86:	mov    eax,DWORD PTR [rbp-0x98]
  41bc8c:	add    eax,0x1
  41bc8f:	mov    DWORD PTR [rbp-0x98],eax
  41bc95:	mov    rax,QWORD PTR [rbp-0xd8]
  41bc9c:	mov    eax,DWORD PTR [rax+0xf0]
  41bca2:	mov    edx,eax
  41bca4:	mov    rax,QWORD PTR [rbp-0xa0]
  41bcab:	sub    edx,eax
  41bcad:	mov    eax,edx
  41bcaf:	cmp    DWORD PTR [rbp-0xb4],0x0
  41bcb6:	jne    41bcc1 <flatcc_builder_create_buffer@@Base+0x35c>
  41bcb8:	cmp    DWORD PTR [rbp-0xb0],0x0
  41bcbf:	je     41bcc8 <flatcc_builder_create_buffer@@Base+0x363>
  41bcc1:	mov    edx,0x4
  41bcc6:	jmp    41bccd <flatcc_builder_create_buffer@@Base+0x368>
  41bcc8:	mov    edx,0x0
  41bccd:	add    eax,edx
  41bccf:	mov    DWORD PTR [rbp-0xa8],eax
  41bcd5:	cmp    DWORD PTR [rbp-0xb4],0x0
  41bcdc:	je     41bd00 <flatcc_builder_create_buffer@@Base+0x39b>
  41bcde:	mov    rax,QWORD PTR [rbp-0xd8]
  41bce5:	mov    eax,DWORD PTR [rax+0xf8]
  41bceb:	sub    eax,DWORD PTR [rbp-0xa8]
  41bcf1:	mov    edi,eax
  41bcf3:	call   41a074 <main@@Base+0x9f9>
  41bcf8:	mov    DWORD PTR [rbp-0xc0],eax
  41bcfe:	jmp    41bd20 <flatcc_builder_create_buffer@@Base+0x3bb>
  41bd00:	mov    rax,QWORD PTR [rbp-0xd8]
  41bd07:	mov    eax,DWORD PTR [rax+0xf4]
  41bd0d:	sub    eax,DWORD PTR [rbp-0xa8]
  41bd13:	mov    edi,eax
  41bd15:	call   41a074 <main@@Base+0x9f9>
  41bd1a:	mov    DWORD PTR [rbp-0xc0],eax
  41bd20:	mov    eax,DWORD PTR [rbp-0xe8]
  41bd26:	sub    eax,DWORD PTR [rbp-0xa8]
  41bd2c:	mov    edi,eax
  41bd2e:	call   41a074 <main@@Base+0x9f9>
  41bd33:	mov    DWORD PTR [rbp-0xc4],eax
  41bd39:	lea    rdx,[rbp-0xa0]
  41bd40:	mov    rax,QWORD PTR [rbp-0xd8]
  41bd47:	mov    rsi,rdx
  41bd4a:	mov    rdi,rax
  41bd4d:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41bd52:	mov    DWORD PTR [rbp-0xa4],eax
  41bd58:	cmp    DWORD PTR [rbp-0xa4],0x0
  41bd5f:	jne    41bd80 <flatcc_builder_create_buffer@@Base+0x41b>
  41bd61:	lea    rcx,[rip+0x1cc18]        # 438980 <flatcc_builder_padding_base@@Base+0x720>
  41bd68:	mov    edx,0x304
  41bd6d:	lea    rsi,[rip+0x1c6ec]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41bd74:	lea    rdi,[rip+0x1c745]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41bd7b:	call   405080 <__assert_fail@plt>
  41bd80:	mov    eax,DWORD PTR [rbp-0xa4]
  41bd86:	mov    rsi,QWORD PTR [rbp-0x8]
  41bd8a:	xor    rsi,QWORD PTR fs:0x28
  41bd93:	je     41bd9a <flatcc_builder_create_buffer@@Base+0x435>
  41bd95:	call   405070 <__stack_chk_fail@plt>
  41bd9a:	leave  
  41bd9b:	ret    

000000000041bd9c <flatcc_builder_create_struct@@Base>:
  41bd9c:	push   rbp
  41bd9d:	mov    rbp,rsp
  41bda0:	sub    rsp,0xd0
  41bda7:	mov    QWORD PTR [rbp-0xb8],rdi
  41bdae:	mov    QWORD PTR [rbp-0xc0],rsi
  41bdb5:	mov    QWORD PTR [rbp-0xc8],rdx
  41bdbc:	mov    eax,ecx
  41bdbe:	mov    WORD PTR [rbp-0xcc],ax
  41bdc5:	mov    rax,QWORD PTR fs:0x28
  41bdce:	mov    QWORD PTR [rbp-0x8],rax
  41bdd2:	xor    eax,eax
  41bdd4:	cmp    WORD PTR [rbp-0xcc],0x0
  41bddc:	jne    41bdfd <flatcc_builder_create_struct@@Base+0x61>
  41bdde:	lea    rcx,[rip+0x1cbbb]        # 4389a0 <flatcc_builder_padding_base@@Base+0x740>
  41bde5:	mov    edx,0x30f
  41bdea:	lea    rsi,[rip+0x1c66f]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41bdf1:	lea    rdi,[rip+0x1c727]        # 43851f <flatcc_builder_padding_base@@Base+0x2bf>
  41bdf8:	call   405080 <__assert_fail@plt>
  41bdfd:	movzx  edx,WORD PTR [rbp-0xcc]
  41be04:	mov    rax,QWORD PTR [rbp-0xb8]
  41be0b:	mov    esi,edx
  41be0d:	mov    rdi,rax
  41be10:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41be15:	movzx  edx,WORD PTR [rbp-0xcc]
  41be1c:	mov    rax,QWORD PTR [rbp-0xc8]
  41be23:	mov    ecx,eax
  41be25:	mov    rax,QWORD PTR [rbp-0xb8]
  41be2c:	mov    esi,ecx
  41be2e:	mov    rdi,rax
  41be31:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41be36:	mov    eax,eax
  41be38:	mov    QWORD PTR [rbp-0xa8],rax
  41be3f:	mov    QWORD PTR [rbp-0xa0],0x0
  41be4a:	mov    DWORD PTR [rbp-0x98],0x0
  41be54:	cmp    QWORD PTR [rbp-0xc8],0x0
  41be5c:	je     41bec5 <flatcc_builder_create_struct@@Base+0x129>
  41be5e:	mov    rdx,QWORD PTR [rbp-0xa0]
  41be65:	mov    rax,QWORD PTR [rbp-0xc8]
  41be6c:	add    rax,rdx
  41be6f:	mov    QWORD PTR [rbp-0xa0],rax
  41be76:	mov    eax,DWORD PTR [rbp-0x98]
  41be7c:	cdqe   
  41be7e:	shl    rax,0x4
  41be82:	add    rax,rbp
  41be85:	lea    rdx,[rax-0x90]
  41be8c:	mov    rax,QWORD PTR [rbp-0xc0]
  41be93:	mov    QWORD PTR [rdx],rax
  41be96:	mov    eax,DWORD PTR [rbp-0x98]
  41be9c:	cdqe   
  41be9e:	shl    rax,0x4
  41bea2:	add    rax,rbp
  41bea5:	lea    rdx,[rax-0x88]
  41beac:	mov    rax,QWORD PTR [rbp-0xc8]
  41beb3:	mov    QWORD PTR [rdx],rax
  41beb6:	mov    eax,DWORD PTR [rbp-0x98]
  41bebc:	add    eax,0x1
  41bebf:	mov    DWORD PTR [rbp-0x98],eax
  41bec5:	cmp    QWORD PTR [rbp-0xa8],0x0
  41becd:	je     41bf35 <flatcc_builder_create_struct@@Base+0x199>
  41becf:	mov    rdx,QWORD PTR [rbp-0xa0]
  41bed6:	mov    rax,QWORD PTR [rbp-0xa8]
  41bedd:	add    rax,rdx
  41bee0:	mov    QWORD PTR [rbp-0xa0],rax
  41bee7:	mov    eax,DWORD PTR [rbp-0x98]
  41beed:	cdqe   
  41beef:	shl    rax,0x4
  41bef3:	add    rax,rbp
  41bef6:	sub    rax,0x90
  41befc:	mov    rdx,0x438260
  41bf03:	mov    QWORD PTR [rax],rdx
  41bf06:	mov    eax,DWORD PTR [rbp-0x98]
  41bf0c:	cdqe   
  41bf0e:	shl    rax,0x4
  41bf12:	add    rax,rbp
  41bf15:	lea    rdx,[rax-0x88]
  41bf1c:	mov    rax,QWORD PTR [rbp-0xa8]
  41bf23:	mov    QWORD PTR [rdx],rax
  41bf26:	mov    eax,DWORD PTR [rbp-0x98]
  41bf2c:	add    eax,0x1
  41bf2f:	mov    DWORD PTR [rbp-0x98],eax
  41bf35:	lea    rdx,[rbp-0xa0]
  41bf3c:	mov    rax,QWORD PTR [rbp-0xb8]
  41bf43:	mov    rsi,rdx
  41bf46:	mov    rdi,rax
  41bf49:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41bf4e:	mov    rcx,QWORD PTR [rbp-0x8]
  41bf52:	xor    rcx,QWORD PTR fs:0x28
  41bf5b:	je     41bf62 <flatcc_builder_create_struct@@Base+0x1c6>
  41bf5d:	call   405070 <__stack_chk_fail@plt>
  41bf62:	leave  
  41bf63:	ret    

000000000041bf64 <flatcc_builder_start_buffer@@Base>:
  41bf64:	push   rbp
  41bf65:	mov    rbp,rsp
  41bf68:	sub    rsp,0x20
  41bf6c:	mov    QWORD PTR [rbp-0x8],rdi
  41bf70:	mov    QWORD PTR [rbp-0x10],rsi
  41bf74:	mov    eax,edx
  41bf76:	mov    DWORD PTR [rbp-0x18],ecx
  41bf79:	mov    WORD PTR [rbp-0x14],ax
  41bf7d:	mov    rax,QWORD PTR [rbp-0x8]
  41bf81:	movzx  eax,WORD PTR [rax+0xe8]
  41bf88:	movzx  edx,ax
  41bf8b:	mov    rax,QWORD PTR [rbp-0x8]
  41bf8f:	mov    esi,edx
  41bf91:	mov    rdi,rax
  41bf94:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41bf99:	test   eax,eax
  41bf9b:	je     41bfa7 <flatcc_builder_start_buffer@@Base+0x43>
  41bf9d:	mov    eax,0xffffffff
  41bfa2:	jmp    41c0ab <flatcc_builder_start_buffer@@Base+0x147>
  41bfa7:	mov    rax,QWORD PTR [rbp-0x8]
  41bfab:	mov    WORD PTR [rax+0xe8],0x1
  41bfb4:	mov    rax,QWORD PTR [rbp-0x8]
  41bfb8:	mov    rax,QWORD PTR [rax+0x30]
  41bfbc:	mov    rdx,QWORD PTR [rbp-0x8]
  41bfc0:	movzx  edx,WORD PTR [rdx+0xec]
  41bfc7:	mov    WORD PTR [rax+0x22],dx
  41bfcb:	mov    rax,QWORD PTR [rbp-0x8]
  41bfcf:	movzx  edx,WORD PTR [rbp-0x14]
  41bfd3:	mov    WORD PTR [rax+0xec],dx
  41bfda:	mov    rax,QWORD PTR [rbp-0x8]
  41bfde:	mov    rax,QWORD PTR [rax+0x30]
  41bfe2:	mov    rdx,QWORD PTR [rbp-0x8]
  41bfe6:	movzx  edx,WORD PTR [rdx+0x10c]
  41bfed:	mov    WORD PTR [rax+0x20],dx
  41bff1:	mov    eax,DWORD PTR [rbp-0x18]
  41bff4:	mov    edx,eax
  41bff6:	mov    rax,QWORD PTR [rbp-0x8]
  41bffa:	mov    WORD PTR [rax+0x10c],dx
  41c001:	mov    rax,QWORD PTR [rbp-0x8]
  41c005:	mov    rax,QWORD PTR [rax+0x30]
  41c009:	mov    rdx,QWORD PTR [rbp-0x8]
  41c00d:	mov    edx,DWORD PTR [rdx+0xf8]
  41c013:	mov    DWORD PTR [rax+0x14],edx
  41c016:	mov    rax,QWORD PTR [rbp-0x8]
  41c01a:	mov    rax,QWORD PTR [rax+0x30]
  41c01e:	mov    rdx,QWORD PTR [rbp-0x8]
  41c022:	mov    edx,DWORD PTR [rdx+0x100]
  41c028:	mov    DWORD PTR [rax+0x1c],edx
  41c02b:	mov    rax,QWORD PTR [rbp-0x8]
  41c02f:	mov    edx,DWORD PTR [rax+0xf0]
  41c035:	mov    rax,QWORD PTR [rbp-0x8]
  41c039:	mov    DWORD PTR [rax+0xf8],edx
  41c03f:	mov    rax,QWORD PTR [rbp-0x8]
  41c043:	mov    eax,DWORD PTR [rax+0xfc]
  41c049:	lea    ecx,[rax+0x1]
  41c04c:	mov    rdx,QWORD PTR [rbp-0x8]
  41c050:	mov    DWORD PTR [rdx+0xfc],ecx
  41c056:	mov    rdx,QWORD PTR [rbp-0x8]
  41c05a:	mov    DWORD PTR [rdx+0x100],eax
  41c060:	mov    rax,QWORD PTR [rbp-0x8]
  41c064:	mov    rax,QWORD PTR [rax+0x30]
  41c068:	mov    rdx,QWORD PTR [rbp-0x8]
  41c06c:	mov    edx,DWORD PTR [rdx+0x110]
  41c072:	mov    DWORD PTR [rax+0x10],edx
  41c075:	cmp    QWORD PTR [rbp-0x10],0x0
  41c07a:	je     41c082 <flatcc_builder_start_buffer@@Base+0x11e>
  41c07c:	mov    rax,QWORD PTR [rbp-0x10]
  41c080:	jmp    41c089 <flatcc_builder_start_buffer@@Base+0x125>
  41c082:	mov    rax,0x438260
  41c089:	mov    rdx,QWORD PTR [rbp-0x8]
  41c08d:	add    rdx,0x110
  41c094:	mov    eax,DWORD PTR [rax]
  41c096:	mov    DWORD PTR [rdx],eax
  41c098:	mov    rax,QWORD PTR [rbp-0x8]
  41c09c:	mov    rax,QWORD PTR [rax+0x30]
  41c0a0:	mov    WORD PTR [rax+0xe],0x1
  41c0a6:	mov    eax,0x0
  41c0ab:	leave  
  41c0ac:	ret    

000000000041c0ad <flatcc_builder_end_buffer@@Base>:
  41c0ad:	push   rbp
  41c0ae:	mov    rbp,rsp
  41c0b1:	sub    rsp,0x20
  41c0b5:	mov    QWORD PTR [rbp-0x18],rdi
  41c0b9:	mov    DWORD PTR [rbp-0x1c],esi
  41c0bc:	mov    rax,QWORD PTR [rbp-0x18]
  41c0c0:	movzx  eax,WORD PTR [rax+0x10c]
  41c0c7:	movzx  eax,ax
  41c0ca:	and    eax,0x2
  41c0cd:	mov    DWORD PTR [rbp-0x8],eax
  41c0d0:	mov    rax,QWORD PTR [rbp-0x18]
  41c0d4:	mov    eax,DWORD PTR [rax+0x100]
  41c0da:	test   eax,eax
  41c0dc:	setne  al
  41c0df:	movzx  eax,al
  41c0e2:	or     DWORD PTR [rbp-0x8],eax
  41c0e5:	mov    rax,QWORD PTR [rbp-0x18]
  41c0e9:	mov    rax,QWORD PTR [rax+0x30]
  41c0ed:	movzx  eax,WORD PTR [rax+0xe]
  41c0f1:	cmp    ax,0x1
  41c0f5:	je     41c116 <flatcc_builder_end_buffer@@Base+0x69>
  41c0f7:	lea    rcx,[rip+0x1c8c2]        # 4389c0 <flatcc_builder_padding_base@@Base+0x760>
  41c0fe:	mov    edx,0x346
  41c103:	lea    rsi,[rip+0x1c356]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c10a:	lea    rdi,[rip+0x1c41f]        # 438530 <flatcc_builder_padding_base@@Base+0x2d0>
  41c111:	call   405080 <__assert_fail@plt>
  41c116:	mov    rax,QWORD PTR [rbp-0x18]
  41c11a:	movzx  eax,WORD PTR [rax+0xec]
  41c121:	movzx  edx,ax
  41c124:	mov    rax,QWORD PTR [rbp-0x18]
  41c128:	mov    esi,edx
  41c12a:	mov    rdi,rax
  41c12d:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41c132:	mov    rax,QWORD PTR [rbp-0x18]
  41c136:	movzx  eax,WORD PTR [rax+0xe8]
  41c13d:	movzx  edi,ax
  41c140:	mov    rax,QWORD PTR [rbp-0x18]
  41c144:	movzx  eax,WORD PTR [rax+0xec]
  41c14b:	movzx  edx,ax
  41c14e:	mov    rax,QWORD PTR [rbp-0x18]
  41c152:	lea    rsi,[rax+0x110]
  41c159:	mov    r8d,DWORD PTR [rbp-0x8]
  41c15d:	mov    ecx,DWORD PTR [rbp-0x1c]
  41c160:	mov    rax,QWORD PTR [rbp-0x18]
  41c164:	mov    r9d,r8d
  41c167:	mov    r8d,edi
  41c16a:	mov    rdi,rax
  41c16d:	call   41b965 <flatcc_builder_create_buffer@@Base>
  41c172:	mov    DWORD PTR [rbp-0x4],eax
  41c175:	cmp    DWORD PTR [rbp-0x4],0x0
  41c179:	jne    41c182 <flatcc_builder_end_buffer@@Base+0xd5>
  41c17b:	mov    eax,0x0
  41c180:	jmp    41c1e7 <flatcc_builder_end_buffer@@Base+0x13a>
  41c182:	mov    rax,QWORD PTR [rbp-0x18]
  41c186:	mov    rax,QWORD PTR [rax+0x30]
  41c18a:	mov    edx,DWORD PTR [rax+0x14]
  41c18d:	mov    rax,QWORD PTR [rbp-0x18]
  41c191:	mov    DWORD PTR [rax+0xf8],edx
  41c197:	mov    rax,QWORD PTR [rbp-0x18]
  41c19b:	mov    rax,QWORD PTR [rax+0x30]
  41c19f:	mov    edx,DWORD PTR [rax+0x1c]
  41c1a2:	mov    rax,QWORD PTR [rbp-0x18]
  41c1a6:	mov    DWORD PTR [rax+0x100],edx
  41c1ac:	mov    rax,QWORD PTR [rbp-0x18]
  41c1b0:	mov    rax,QWORD PTR [rax+0x30]
  41c1b4:	mov    edx,DWORD PTR [rax+0x10]
  41c1b7:	mov    rax,QWORD PTR [rbp-0x18]
  41c1bb:	mov    DWORD PTR [rax+0x110],edx
  41c1c1:	mov    rax,QWORD PTR [rbp-0x18]
  41c1c5:	mov    rax,QWORD PTR [rax+0x30]
  41c1c9:	movzx  edx,WORD PTR [rax+0x20]
  41c1cd:	mov    rax,QWORD PTR [rbp-0x18]
  41c1d1:	mov    WORD PTR [rax+0x10c],dx
  41c1d8:	mov    rax,QWORD PTR [rbp-0x18]
  41c1dc:	mov    rdi,rax
  41c1df:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41c1e4:	mov    eax,DWORD PTR [rbp-0x4]
  41c1e7:	leave  
  41c1e8:	ret    

000000000041c1e9 <flatcc_builder_start_struct@@Base>:
  41c1e9:	push   rbp
  41c1ea:	mov    rbp,rsp
  41c1ed:	sub    rsp,0x20
  41c1f1:	mov    QWORD PTR [rbp-0x8],rdi
  41c1f5:	mov    QWORD PTR [rbp-0x10],rsi
  41c1f9:	mov    eax,edx
  41c1fb:	mov    WORD PTR [rbp-0x14],ax
  41c1ff:	movzx  edx,WORD PTR [rbp-0x14]
  41c203:	mov    rax,QWORD PTR [rbp-0x8]
  41c207:	mov    esi,edx
  41c209:	mov    rdi,rax
  41c20c:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41c211:	test   eax,eax
  41c213:	je     41c21c <flatcc_builder_start_struct@@Base+0x33>
  41c215:	mov    eax,0x0
  41c21a:	jmp    41c24f <flatcc_builder_start_struct@@Base+0x66>
  41c21c:	mov    rax,QWORD PTR [rbp-0x8]
  41c220:	mov    rax,QWORD PTR [rax+0x30]
  41c224:	mov    WORD PTR [rax+0xe],0x2
  41c22a:	mov    rax,QWORD PTR [rbp-0x8]
  41c22e:	mov    esi,0xfffffffc
  41c233:	mov    rdi,rax
  41c236:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41c23b:	mov    rax,QWORD PTR [rbp-0x10]
  41c23f:	mov    edx,eax
  41c241:	mov    rax,QWORD PTR [rbp-0x8]
  41c245:	mov    esi,edx
  41c247:	mov    rdi,rax
  41c24a:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41c24f:	leave  
  41c250:	ret    

000000000041c251 <flatcc_builder_struct_edit@@Base>:
  41c251:	push   rbp
  41c252:	mov    rbp,rsp
  41c255:	mov    QWORD PTR [rbp-0x8],rdi
  41c259:	mov    rax,QWORD PTR [rbp-0x8]
  41c25d:	mov    rax,QWORD PTR [rax+0x18]
  41c261:	pop    rbp
  41c262:	ret    

000000000041c263 <flatcc_builder_end_struct@@Base>:
  41c263:	push   rbp
  41c264:	mov    rbp,rsp
  41c267:	sub    rsp,0x20
  41c26b:	mov    QWORD PTR [rbp-0x18],rdi
  41c26f:	mov    rax,QWORD PTR [rbp-0x18]
  41c273:	mov    rax,QWORD PTR [rax+0x30]
  41c277:	movzx  eax,WORD PTR [rax+0xe]
  41c27b:	cmp    ax,0x2
  41c27f:	je     41c2a0 <flatcc_builder_end_struct@@Base+0x3d>
  41c281:	lea    rcx,[rip+0x1c758]        # 4389e0 <flatcc_builder_padding_base@@Base+0x780>
  41c288:	mov    edx,0x368
  41c28d:	lea    rsi,[rip+0x1c1cc]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c294:	lea    rdi,[rip+0x1c2c5]        # 438560 <flatcc_builder_padding_base@@Base+0x300>
  41c29b:	call   405080 <__assert_fail@plt>
  41c2a0:	mov    rax,QWORD PTR [rbp-0x18]
  41c2a4:	movzx  eax,WORD PTR [rax+0xea]
  41c2ab:	movzx  edx,ax
  41c2ae:	mov    rax,QWORD PTR [rbp-0x18]
  41c2b2:	mov    eax,DWORD PTR [rax+0x20]
  41c2b5:	mov    edi,eax
  41c2b7:	mov    rax,QWORD PTR [rbp-0x18]
  41c2bb:	mov    rsi,QWORD PTR [rax+0x18]
  41c2bf:	mov    rax,QWORD PTR [rbp-0x18]
  41c2c3:	mov    ecx,edx
  41c2c5:	mov    rdx,rdi
  41c2c8:	mov    rdi,rax
  41c2cb:	call   41bd9c <flatcc_builder_create_struct@@Base>
  41c2d0:	mov    DWORD PTR [rbp-0x4],eax
  41c2d3:	cmp    DWORD PTR [rbp-0x4],0x0
  41c2d7:	jne    41c2e0 <flatcc_builder_end_struct@@Base+0x7d>
  41c2d9:	mov    eax,0x0
  41c2de:	jmp    41c2ef <flatcc_builder_end_struct@@Base+0x8c>
  41c2e0:	mov    rax,QWORD PTR [rbp-0x18]
  41c2e4:	mov    rdi,rax
  41c2e7:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41c2ec:	mov    eax,DWORD PTR [rbp-0x4]
  41c2ef:	leave  
  41c2f0:	ret    
  41c2f1:	push   rbp
  41c2f2:	mov    rbp,rsp
  41c2f5:	sub    rsp,0x20
  41c2f9:	mov    QWORD PTR [rbp-0x18],rdi
  41c2fd:	mov    DWORD PTR [rbp-0x1c],esi
  41c300:	mov    DWORD PTR [rbp-0x20],edx
  41c303:	mov    rax,QWORD PTR [rbp-0x18]
  41c307:	mov    rax,QWORD PTR [rax+0x30]
  41c30b:	mov    eax,DWORD PTR [rax+0x14]
  41c30e:	mov    DWORD PTR [rbp-0x8],eax
  41c311:	mov    edx,DWORD PTR [rbp-0x8]
  41c314:	mov    eax,DWORD PTR [rbp-0x1c]
  41c317:	add    eax,edx
  41c319:	mov    DWORD PTR [rbp-0x4],eax
  41c31c:	mov    eax,DWORD PTR [rbp-0x8]
  41c31f:	cmp    eax,DWORD PTR [rbp-0x4]
  41c322:	ja     41c32c <flatcc_builder_end_struct@@Base+0xc9>
  41c324:	mov    eax,DWORD PTR [rbp-0x4]
  41c327:	cmp    eax,DWORD PTR [rbp-0x20]
  41c32a:	jbe    41c362 <flatcc_builder_end_struct@@Base+0xff>
  41c32c:	mov    eax,DWORD PTR [rbp-0x8]
  41c32f:	cmp    eax,DWORD PTR [rbp-0x4]
  41c332:	ja     41c33c <flatcc_builder_end_struct@@Base+0xd9>
  41c334:	mov    eax,DWORD PTR [rbp-0x4]
  41c337:	cmp    eax,DWORD PTR [rbp-0x20]
  41c33a:	jbe    41c35b <flatcc_builder_end_struct@@Base+0xf8>
  41c33c:	lea    rcx,[rip+0x1c6bd]        # 438a00 <flatcc_builder_padding_base@@Base+0x7a0>
  41c343:	mov    edx,0x37c
  41c348:	lea    rsi,[rip+0x1c111]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c34f:	lea    rdi,[rip+0x1c236]        # 43858c <flatcc_builder_padding_base@@Base+0x32c>
  41c356:	call   405080 <__assert_fail@plt>
  41c35b:	mov    eax,0xffffffff
  41c360:	jmp    41c375 <flatcc_builder_end_struct@@Base+0x112>
  41c362:	mov    rax,QWORD PTR [rbp-0x18]
  41c366:	mov    rax,QWORD PTR [rax+0x30]
  41c36a:	mov    edx,DWORD PTR [rbp-0x4]
  41c36d:	mov    DWORD PTR [rax+0x14],edx
  41c370:	mov    eax,0x0
  41c375:	leave  
  41c376:	ret    

000000000041c377 <flatcc_builder_extend_vector@@Base>:
  41c377:	push   rbp
  41c378:	mov    rbp,rsp
  41c37b:	sub    rsp,0x10
  41c37f:	mov    QWORD PTR [rbp-0x8],rdi
  41c383:	mov    QWORD PTR [rbp-0x10],rsi
  41c387:	mov    rax,QWORD PTR [rbp-0x8]
  41c38b:	mov    rax,QWORD PTR [rax+0x30]
  41c38f:	mov    edx,DWORD PTR [rax+0x18]
  41c392:	mov    rax,QWORD PTR [rbp-0x10]
  41c396:	mov    ecx,eax
  41c398:	mov    rax,QWORD PTR [rbp-0x8]
  41c39c:	mov    esi,ecx
  41c39e:	mov    rdi,rax
  41c3a1:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41c3a6:	test   eax,eax
  41c3a8:	je     41c3b1 <flatcc_builder_extend_vector@@Base+0x3a>
  41c3aa:	mov    eax,0x0
  41c3af:	jmp    41c3d1 <flatcc_builder_extend_vector@@Base+0x5a>
  41c3b1:	mov    rax,QWORD PTR [rbp-0x8]
  41c3b5:	mov    rax,QWORD PTR [rax+0x30]
  41c3b9:	mov    eax,DWORD PTR [rax+0x10]
  41c3bc:	mov    rdx,QWORD PTR [rbp-0x10]
  41c3c0:	imul   edx,eax
  41c3c3:	mov    rax,QWORD PTR [rbp-0x8]
  41c3c7:	mov    esi,edx
  41c3c9:	mov    rdi,rax
  41c3cc:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41c3d1:	leave  
  41c3d2:	ret    

000000000041c3d3 <flatcc_builder_vector_push@@Base>:
  41c3d3:	push   rbp
  41c3d4:	mov    rbp,rsp
  41c3d7:	sub    rsp,0x10
  41c3db:	mov    QWORD PTR [rbp-0x8],rdi
  41c3df:	mov    QWORD PTR [rbp-0x10],rsi
  41c3e3:	mov    rax,QWORD PTR [rbp-0x8]
  41c3e7:	mov    rax,QWORD PTR [rax+0x30]
  41c3eb:	movzx  eax,WORD PTR [rax+0xe]
  41c3ef:	cmp    ax,0x4
  41c3f3:	je     41c414 <flatcc_builder_vector_push@@Base+0x41>
  41c3f5:	lea    rcx,[rip+0x1c624]        # 438a20 <flatcc_builder_padding_base@@Base+0x7c0>
  41c3fc:	mov    edx,0x38b
  41c401:	lea    rsi,[rip+0x1c058]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c408:	lea    rdi,[rip+0x1c199]        # 4385a8 <flatcc_builder_padding_base@@Base+0x348>
  41c40f:	call   405080 <__assert_fail@plt>
  41c414:	mov    rax,QWORD PTR [rbp-0x8]
  41c418:	mov    rax,QWORD PTR [rax+0x30]
  41c41c:	mov    edx,DWORD PTR [rax+0x14]
  41c41f:	mov    rax,QWORD PTR [rbp-0x8]
  41c423:	mov    rax,QWORD PTR [rax+0x30]
  41c427:	mov    eax,DWORD PTR [rax+0x18]
  41c42a:	cmp    edx,eax
  41c42c:	jbe    41c46e <flatcc_builder_vector_push@@Base+0x9b>
  41c42e:	mov    rax,QWORD PTR [rbp-0x8]
  41c432:	mov    rax,QWORD PTR [rax+0x30]
  41c436:	mov    edx,DWORD PTR [rax+0x14]
  41c439:	mov    rax,QWORD PTR [rbp-0x8]
  41c43d:	mov    rax,QWORD PTR [rax+0x30]
  41c441:	mov    eax,DWORD PTR [rax+0x18]
  41c444:	cmp    edx,eax
  41c446:	jbe    41c467 <flatcc_builder_vector_push@@Base+0x94>
  41c448:	lea    rcx,[rip+0x1c5d1]        # 438a20 <flatcc_builder_padding_base@@Base+0x7c0>
  41c44f:	mov    edx,0x38c
  41c454:	lea    rsi,[rip+0x1c005]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c45b:	lea    rdi,[rip+0x1c176]        # 4385d8 <flatcc_builder_padding_base@@Base+0x378>
  41c462:	call   405080 <__assert_fail@plt>
  41c467:	mov    eax,0x0
  41c46c:	jmp    41c4a5 <flatcc_builder_vector_push@@Base+0xd2>
  41c46e:	mov    rax,QWORD PTR [rbp-0x8]
  41c472:	mov    rax,QWORD PTR [rax+0x30]
  41c476:	mov    rdx,QWORD PTR [rbp-0x8]
  41c47a:	mov    rdx,QWORD PTR [rdx+0x30]
  41c47e:	mov    edx,DWORD PTR [rdx+0x14]
  41c481:	add    edx,0x1
  41c484:	mov    DWORD PTR [rax+0x14],edx
  41c487:	mov    rax,QWORD PTR [rbp-0x8]
  41c48b:	mov    rax,QWORD PTR [rax+0x30]
  41c48f:	mov    edx,DWORD PTR [rax+0x10]
  41c492:	mov    rcx,QWORD PTR [rbp-0x10]
  41c496:	mov    rax,QWORD PTR [rbp-0x8]
  41c49a:	mov    rsi,rcx
  41c49d:	mov    rdi,rax
  41c4a0:	call   41a463 <flatcc_builder_default_alloc@@Base+0x329>
  41c4a5:	leave  
  41c4a6:	ret    

000000000041c4a7 <flatcc_builder_append_vector@@Base>:
  41c4a7:	push   rbp
  41c4a8:	mov    rbp,rsp
  41c4ab:	sub    rsp,0x20
  41c4af:	mov    QWORD PTR [rbp-0x8],rdi
  41c4b3:	mov    QWORD PTR [rbp-0x10],rsi
  41c4b7:	mov    QWORD PTR [rbp-0x18],rdx
  41c4bb:	mov    rax,QWORD PTR [rbp-0x8]
  41c4bf:	mov    rax,QWORD PTR [rax+0x30]
  41c4c3:	movzx  eax,WORD PTR [rax+0xe]
  41c4c7:	cmp    ax,0x4
  41c4cb:	je     41c4ec <flatcc_builder_append_vector@@Base+0x45>
  41c4cd:	lea    rcx,[rip+0x1c56c]        # 438a40 <flatcc_builder_padding_base@@Base+0x7e0>
  41c4d4:	mov    edx,0x393
  41c4d9:	lea    rsi,[rip+0x1bf80]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c4e0:	lea    rdi,[rip+0x1c0c1]        # 4385a8 <flatcc_builder_padding_base@@Base+0x348>
  41c4e7:	call   405080 <__assert_fail@plt>
  41c4ec:	mov    rax,QWORD PTR [rbp-0x8]
  41c4f0:	mov    rax,QWORD PTR [rax+0x30]
  41c4f4:	mov    edx,DWORD PTR [rax+0x18]
  41c4f7:	mov    rax,QWORD PTR [rbp-0x18]
  41c4fb:	mov    ecx,eax
  41c4fd:	mov    rax,QWORD PTR [rbp-0x8]
  41c501:	mov    esi,ecx
  41c503:	mov    rdi,rax
  41c506:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41c50b:	test   eax,eax
  41c50d:	je     41c516 <flatcc_builder_append_vector@@Base+0x6f>
  41c50f:	mov    eax,0x0
  41c514:	jmp    41c53b <flatcc_builder_append_vector@@Base+0x94>
  41c516:	mov    rax,QWORD PTR [rbp-0x8]
  41c51a:	mov    rax,QWORD PTR [rax+0x30]
  41c51e:	mov    eax,DWORD PTR [rax+0x10]
  41c521:	mov    rdx,QWORD PTR [rbp-0x18]
  41c525:	imul   edx,eax
  41c528:	mov    rcx,QWORD PTR [rbp-0x10]
  41c52c:	mov    rax,QWORD PTR [rbp-0x8]
  41c530:	mov    rsi,rcx
  41c533:	mov    rdi,rax
  41c536:	call   41a463 <flatcc_builder_default_alloc@@Base+0x329>
  41c53b:	leave  
  41c53c:	ret    

000000000041c53d <flatcc_builder_extend_offset_vector@@Base>:
  41c53d:	push   rbp
  41c53e:	mov    rbp,rsp
  41c541:	sub    rsp,0x10
  41c545:	mov    QWORD PTR [rbp-0x8],rdi
  41c549:	mov    QWORD PTR [rbp-0x10],rsi
  41c54d:	mov    rax,QWORD PTR [rbp-0x10]
  41c551:	mov    ecx,eax
  41c553:	mov    rax,QWORD PTR [rbp-0x8]
  41c557:	mov    edx,0x3fffffff
  41c55c:	mov    esi,ecx
  41c55e:	mov    rdi,rax
  41c561:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41c566:	test   eax,eax
  41c568:	je     41c571 <flatcc_builder_extend_offset_vector@@Base+0x34>
  41c56a:	mov    eax,0x0
  41c56f:	jmp    41c58a <flatcc_builder_extend_offset_vector@@Base+0x4d>
  41c571:	mov    rax,QWORD PTR [rbp-0x10]
  41c575:	lea    edx,[rax*4+0x0]
  41c57c:	mov    rax,QWORD PTR [rbp-0x8]
  41c580:	mov    esi,edx
  41c582:	mov    rdi,rax
  41c585:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41c58a:	leave  
  41c58b:	ret    

000000000041c58c <flatcc_builder_offset_vector_push@@Base>:
  41c58c:	push   rbp
  41c58d:	mov    rbp,rsp
  41c590:	sub    rsp,0x20
  41c594:	mov    QWORD PTR [rbp-0x18],rdi
  41c598:	mov    DWORD PTR [rbp-0x1c],esi
  41c59b:	mov    rax,QWORD PTR [rbp-0x18]
  41c59f:	mov    rax,QWORD PTR [rax+0x30]
  41c5a3:	movzx  eax,WORD PTR [rax+0xe]
  41c5a7:	cmp    ax,0x5
  41c5ab:	je     41c5cc <flatcc_builder_offset_vector_push@@Base+0x40>
  41c5ad:	lea    rcx,[rip+0x1c4ac]        # 438a60 <flatcc_builder_padding_base@@Base+0x800>
  41c5b4:	mov    edx,0x3a6
  41c5b9:	lea    rsi,[rip+0x1bea0]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c5c0:	lea    rdi,[rip+0x1c051]        # 438618 <flatcc_builder_padding_base@@Base+0x3b8>
  41c5c7:	call   405080 <__assert_fail@plt>
  41c5cc:	mov    rax,QWORD PTR [rbp-0x18]
  41c5d0:	mov    rax,QWORD PTR [rax+0x30]
  41c5d4:	mov    eax,DWORD PTR [rax+0x14]
  41c5d7:	cmp    eax,0x3fffffff
  41c5dc:	jne    41c5e5 <flatcc_builder_offset_vector_push@@Base+0x59>
  41c5de:	mov    eax,0x0
  41c5e3:	jmp    41c62e <flatcc_builder_offset_vector_push@@Base+0xa2>
  41c5e5:	mov    rax,QWORD PTR [rbp-0x18]
  41c5e9:	mov    rax,QWORD PTR [rax+0x30]
  41c5ed:	mov    rdx,QWORD PTR [rbp-0x18]
  41c5f1:	mov    rdx,QWORD PTR [rdx+0x30]
  41c5f5:	mov    edx,DWORD PTR [rdx+0x14]
  41c5f8:	add    edx,0x1
  41c5fb:	mov    DWORD PTR [rax+0x14],edx
  41c5fe:	mov    rax,QWORD PTR [rbp-0x18]
  41c602:	mov    esi,0x4
  41c607:	mov    rdi,rax
  41c60a:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41c60f:	mov    QWORD PTR [rbp-0x8],rax
  41c613:	cmp    QWORD PTR [rbp-0x8],0x0
  41c618:	jne    41c621 <flatcc_builder_offset_vector_push@@Base+0x95>
  41c61a:	mov    eax,0x0
  41c61f:	jmp    41c62e <flatcc_builder_offset_vector_push@@Base+0xa2>
  41c621:	mov    rax,QWORD PTR [rbp-0x8]
  41c625:	mov    edx,DWORD PTR [rbp-0x1c]
  41c628:	mov    DWORD PTR [rax],edx
  41c62a:	mov    rax,QWORD PTR [rbp-0x8]
  41c62e:	leave  
  41c62f:	ret    

000000000041c630 <flatcc_builder_append_offset_vector@@Base>:
  41c630:	push   rbp
  41c631:	mov    rbp,rsp
  41c634:	sub    rsp,0x20
  41c638:	mov    QWORD PTR [rbp-0x8],rdi
  41c63c:	mov    QWORD PTR [rbp-0x10],rsi
  41c640:	mov    QWORD PTR [rbp-0x18],rdx
  41c644:	mov    rax,QWORD PTR [rbp-0x8]
  41c648:	mov    rax,QWORD PTR [rax+0x30]
  41c64c:	movzx  eax,WORD PTR [rax+0xe]
  41c650:	cmp    ax,0x5
  41c654:	je     41c675 <flatcc_builder_append_offset_vector@@Base+0x45>
  41c656:	lea    rcx,[rip+0x1c443]        # 438aa0 <flatcc_builder_padding_base@@Base+0x840>
  41c65d:	mov    edx,0x3b4
  41c662:	lea    rsi,[rip+0x1bdf7]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c669:	lea    rdi,[rip+0x1bfa8]        # 438618 <flatcc_builder_padding_base@@Base+0x3b8>
  41c670:	call   405080 <__assert_fail@plt>
  41c675:	mov    rax,QWORD PTR [rbp-0x18]
  41c679:	mov    ecx,eax
  41c67b:	mov    rax,QWORD PTR [rbp-0x8]
  41c67f:	mov    edx,0x3fffffff
  41c684:	mov    esi,ecx
  41c686:	mov    rdi,rax
  41c689:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41c68e:	test   eax,eax
  41c690:	je     41c699 <flatcc_builder_append_offset_vector@@Base+0x69>
  41c692:	mov    eax,0x0
  41c697:	jmp    41c6b7 <flatcc_builder_append_offset_vector@@Base+0x87>
  41c699:	mov    rax,QWORD PTR [rbp-0x18]
  41c69d:	lea    edx,[rax*4+0x0]
  41c6a4:	mov    rcx,QWORD PTR [rbp-0x10]
  41c6a8:	mov    rax,QWORD PTR [rbp-0x8]
  41c6ac:	mov    rsi,rcx
  41c6af:	mov    rdi,rax
  41c6b2:	call   41a463 <flatcc_builder_default_alloc@@Base+0x329>
  41c6b7:	leave  
  41c6b8:	ret    

000000000041c6b9 <flatcc_builder_extend_string@@Base>:
  41c6b9:	push   rbp
  41c6ba:	mov    rbp,rsp
  41c6bd:	sub    rsp,0x10
  41c6c1:	mov    QWORD PTR [rbp-0x8],rdi
  41c6c5:	mov    QWORD PTR [rbp-0x10],rsi
  41c6c9:	mov    rax,QWORD PTR [rbp-0x8]
  41c6cd:	mov    rax,QWORD PTR [rax+0x30]
  41c6d1:	movzx  eax,WORD PTR [rax+0xe]
  41c6d5:	cmp    ax,0x6
  41c6d9:	je     41c6fa <flatcc_builder_extend_string@@Base+0x41>
  41c6db:	lea    rcx,[rip+0x1c3ee]        # 438ad0 <flatcc_builder_padding_base@@Base+0x870>
  41c6e2:	mov    edx,0x3bd
  41c6e7:	lea    rsi,[rip+0x1bd72]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c6ee:	lea    rdi,[rip+0x1bf5b]        # 438650 <flatcc_builder_padding_base@@Base+0x3f0>
  41c6f5:	call   405080 <__assert_fail@plt>
  41c6fa:	mov    rax,QWORD PTR [rbp-0x10]
  41c6fe:	mov    ecx,eax
  41c700:	mov    rax,QWORD PTR [rbp-0x8]
  41c704:	mov    edx,0xffffffff
  41c709:	mov    esi,ecx
  41c70b:	mov    rdi,rax
  41c70e:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41c713:	test   eax,eax
  41c715:	je     41c71e <flatcc_builder_extend_string@@Base+0x65>
  41c717:	mov    eax,0x0
  41c71c:	jmp    41c732 <flatcc_builder_extend_string@@Base+0x79>
  41c71e:	mov    rax,QWORD PTR [rbp-0x10]
  41c722:	mov    edx,eax
  41c724:	mov    rax,QWORD PTR [rbp-0x8]
  41c728:	mov    esi,edx
  41c72a:	mov    rdi,rax
  41c72d:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41c732:	leave  
  41c733:	ret    

000000000041c734 <flatcc_builder_append_string@@Base>:
  41c734:	push   rbp
  41c735:	mov    rbp,rsp
  41c738:	sub    rsp,0x20
  41c73c:	mov    QWORD PTR [rbp-0x8],rdi
  41c740:	mov    QWORD PTR [rbp-0x10],rsi
  41c744:	mov    QWORD PTR [rbp-0x18],rdx
  41c748:	mov    rax,QWORD PTR [rbp-0x8]
  41c74c:	mov    rax,QWORD PTR [rax+0x30]
  41c750:	movzx  eax,WORD PTR [rax+0xe]
  41c754:	cmp    ax,0x6
  41c758:	je     41c779 <flatcc_builder_append_string@@Base+0x45>
  41c75a:	lea    rcx,[rip+0x1c38f]        # 438af0 <flatcc_builder_padding_base@@Base+0x890>
  41c761:	mov    edx,0x3c6
  41c766:	lea    rsi,[rip+0x1bcf3]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c76d:	lea    rdi,[rip+0x1bedc]        # 438650 <flatcc_builder_padding_base@@Base+0x3f0>
  41c774:	call   405080 <__assert_fail@plt>
  41c779:	mov    rax,QWORD PTR [rbp-0x18]
  41c77d:	mov    ecx,eax
  41c77f:	mov    rax,QWORD PTR [rbp-0x8]
  41c783:	mov    edx,0xffffffff
  41c788:	mov    esi,ecx
  41c78a:	mov    rdi,rax
  41c78d:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41c792:	test   eax,eax
  41c794:	je     41c79d <flatcc_builder_append_string@@Base+0x69>
  41c796:	mov    eax,0x0
  41c79b:	jmp    41c7b6 <flatcc_builder_append_string@@Base+0x82>
  41c79d:	mov    rax,QWORD PTR [rbp-0x18]
  41c7a1:	mov    edx,eax
  41c7a3:	mov    rcx,QWORD PTR [rbp-0x10]
  41c7a7:	mov    rax,QWORD PTR [rbp-0x8]
  41c7ab:	mov    rsi,rcx
  41c7ae:	mov    rdi,rax
  41c7b1:	call   41a463 <flatcc_builder_default_alloc@@Base+0x329>
  41c7b6:	leave  
  41c7b7:	ret    

000000000041c7b8 <flatcc_builder_append_string_str@@Base>:
  41c7b8:	push   rbp
  41c7b9:	mov    rbp,rsp
  41c7bc:	sub    rsp,0x10
  41c7c0:	mov    QWORD PTR [rbp-0x8],rdi
  41c7c4:	mov    QWORD PTR [rbp-0x10],rsi
  41c7c8:	mov    rax,QWORD PTR [rbp-0x10]
  41c7cc:	mov    rdi,rax
  41c7cf:	call   405060 <strlen@plt>
  41c7d4:	mov    rdx,rax
  41c7d7:	mov    rcx,QWORD PTR [rbp-0x10]
  41c7db:	mov    rax,QWORD PTR [rbp-0x8]
  41c7df:	mov    rsi,rcx
  41c7e2:	mov    rdi,rax
  41c7e5:	call   41c734 <flatcc_builder_append_string@@Base>
  41c7ea:	leave  
  41c7eb:	ret    

000000000041c7ec <flatcc_builder_append_string_strn@@Base>:
  41c7ec:	push   rbp
  41c7ed:	mov    rbp,rsp
  41c7f0:	sub    rsp,0x20
  41c7f4:	mov    QWORD PTR [rbp-0x8],rdi
  41c7f8:	mov    QWORD PTR [rbp-0x10],rsi
  41c7fc:	mov    QWORD PTR [rbp-0x18],rdx
  41c800:	mov    rdx,QWORD PTR [rbp-0x18]
  41c804:	mov    rax,QWORD PTR [rbp-0x10]
  41c808:	mov    rsi,rdx
  41c80b:	mov    rdi,rax
  41c80e:	call   41a0f4 <main@@Base+0xa79>
  41c813:	mov    rdx,rax
  41c816:	mov    rcx,QWORD PTR [rbp-0x10]
  41c81a:	mov    rax,QWORD PTR [rbp-0x8]
  41c81e:	mov    rsi,rcx
  41c821:	mov    rdi,rax
  41c824:	call   41c734 <flatcc_builder_append_string@@Base>
  41c829:	leave  
  41c82a:	ret    

000000000041c82b <flatcc_builder_truncate_vector@@Base>:
  41c82b:	push   rbp
  41c82c:	mov    rbp,rsp
  41c82f:	sub    rsp,0x10
  41c833:	mov    QWORD PTR [rbp-0x8],rdi
  41c837:	mov    QWORD PTR [rbp-0x10],rsi
  41c83b:	mov    rax,QWORD PTR [rbp-0x8]
  41c83f:	mov    rax,QWORD PTR [rax+0x30]
  41c843:	movzx  eax,WORD PTR [rax+0xe]
  41c847:	cmp    ax,0x4
  41c84b:	je     41c86c <flatcc_builder_truncate_vector@@Base+0x41>
  41c84d:	lea    rcx,[rip+0x1c2bc]        # 438b10 <flatcc_builder_padding_base@@Base+0x8b0>
  41c854:	mov    edx,0x3d9
  41c859:	lea    rsi,[rip+0x1bc00]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c860:	lea    rdi,[rip+0x1bd41]        # 4385a8 <flatcc_builder_padding_base@@Base+0x348>
  41c867:	call   405080 <__assert_fail@plt>
  41c86c:	mov    rax,QWORD PTR [rbp-0x8]
  41c870:	mov    rax,QWORD PTR [rax+0x30]
  41c874:	mov    eax,DWORD PTR [rax+0x14]
  41c877:	mov    eax,eax
  41c879:	cmp    rax,QWORD PTR [rbp-0x10]
  41c87d:	jae    41c8b8 <flatcc_builder_truncate_vector@@Base+0x8d>
  41c87f:	mov    rax,QWORD PTR [rbp-0x8]
  41c883:	mov    rax,QWORD PTR [rax+0x30]
  41c887:	mov    eax,DWORD PTR [rax+0x14]
  41c88a:	mov    eax,eax
  41c88c:	cmp    rax,QWORD PTR [rbp-0x10]
  41c890:	jae    41c8b1 <flatcc_builder_truncate_vector@@Base+0x86>
  41c892:	lea    rcx,[rip+0x1c277]        # 438b10 <flatcc_builder_padding_base@@Base+0x8b0>
  41c899:	mov    edx,0x3da
  41c89e:	lea    rsi,[rip+0x1bbbb]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c8a5:	lea    rdi,[rip+0x1bdd4]        # 438680 <flatcc_builder_padding_base@@Base+0x420>
  41c8ac:	call   405080 <__assert_fail@plt>
  41c8b1:	mov    eax,0xffffffff
  41c8b6:	jmp    41c8f9 <flatcc_builder_truncate_vector@@Base+0xce>
  41c8b8:	mov    rax,QWORD PTR [rbp-0x8]
  41c8bc:	mov    rax,QWORD PTR [rax+0x30]
  41c8c0:	mov    rdx,QWORD PTR [rbp-0x8]
  41c8c4:	mov    rdx,QWORD PTR [rdx+0x30]
  41c8c8:	mov    edx,DWORD PTR [rdx+0x14]
  41c8cb:	mov    rcx,QWORD PTR [rbp-0x10]
  41c8cf:	sub    edx,ecx
  41c8d1:	mov    DWORD PTR [rax+0x14],edx
  41c8d4:	mov    rax,QWORD PTR [rbp-0x8]
  41c8d8:	mov    rax,QWORD PTR [rax+0x30]
  41c8dc:	mov    eax,DWORD PTR [rax+0x10]
  41c8df:	mov    rdx,QWORD PTR [rbp-0x10]
  41c8e3:	imul   edx,eax
  41c8e6:	mov    rax,QWORD PTR [rbp-0x8]
  41c8ea:	mov    esi,edx
  41c8ec:	mov    rdi,rax
  41c8ef:	call   41a417 <flatcc_builder_default_alloc@@Base+0x2dd>
  41c8f4:	mov    eax,0x0
  41c8f9:	leave  
  41c8fa:	ret    

000000000041c8fb <flatcc_builder_truncate_offset_vector@@Base>:
  41c8fb:	push   rbp
  41c8fc:	mov    rbp,rsp
  41c8ff:	sub    rsp,0x10
  41c903:	mov    QWORD PTR [rbp-0x8],rdi
  41c907:	mov    QWORD PTR [rbp-0x10],rsi
  41c90b:	mov    rax,QWORD PTR [rbp-0x8]
  41c90f:	mov    rax,QWORD PTR [rax+0x30]
  41c913:	movzx  eax,WORD PTR [rax+0xe]
  41c917:	cmp    ax,0x5
  41c91b:	je     41c93c <flatcc_builder_truncate_offset_vector@@Base+0x41>
  41c91d:	lea    rcx,[rip+0x1c21c]        # 438b40 <flatcc_builder_padding_base@@Base+0x8e0>
  41c924:	mov    edx,0x3e2
  41c929:	lea    rsi,[rip+0x1bb30]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c930:	lea    rdi,[rip+0x1bce1]        # 438618 <flatcc_builder_padding_base@@Base+0x3b8>
  41c937:	call   405080 <__assert_fail@plt>
  41c93c:	mov    rax,QWORD PTR [rbp-0x8]
  41c940:	mov    rax,QWORD PTR [rax+0x30]
  41c944:	mov    eax,DWORD PTR [rax+0x14]
  41c947:	mov    rdx,QWORD PTR [rbp-0x10]
  41c94b:	cmp    eax,edx
  41c94d:	jae    41c988 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  41c94f:	mov    rax,QWORD PTR [rbp-0x8]
  41c953:	mov    rax,QWORD PTR [rax+0x30]
  41c957:	mov    eax,DWORD PTR [rax+0x14]
  41c95a:	mov    rdx,QWORD PTR [rbp-0x10]
  41c95e:	cmp    eax,edx
  41c960:	jae    41c981 <flatcc_builder_truncate_offset_vector@@Base+0x86>
  41c962:	lea    rcx,[rip+0x1c1d7]        # 438b40 <flatcc_builder_padding_base@@Base+0x8e0>
  41c969:	mov    edx,0x3e3
  41c96e:	lea    rsi,[rip+0x1baeb]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41c975:	lea    rdi,[rip+0x1bd2c]        # 4386a8 <flatcc_builder_padding_base@@Base+0x448>
  41c97c:	call   405080 <__assert_fail@plt>
  41c981:	mov    eax,0xffffffff
  41c986:	jmp    41c9c9 <flatcc_builder_truncate_offset_vector@@Base+0xce>
  41c988:	mov    rax,QWORD PTR [rbp-0x8]
  41c98c:	mov    rax,QWORD PTR [rax+0x30]
  41c990:	mov    rdx,QWORD PTR [rbp-0x8]
  41c994:	mov    rdx,QWORD PTR [rdx+0x30]
  41c998:	mov    edx,DWORD PTR [rdx+0x14]
  41c99b:	mov    rcx,QWORD PTR [rbp-0x10]
  41c99f:	sub    edx,ecx
  41c9a1:	mov    DWORD PTR [rax+0x14],edx
  41c9a4:	mov    rax,QWORD PTR [rbp-0x8]
  41c9a8:	mov    rax,QWORD PTR [rax+0x30]
  41c9ac:	mov    eax,DWORD PTR [rax+0x10]
  41c9af:	mov    rdx,QWORD PTR [rbp-0x10]
  41c9b3:	imul   edx,eax
  41c9b6:	mov    rax,QWORD PTR [rbp-0x8]
  41c9ba:	mov    esi,edx
  41c9bc:	mov    rdi,rax
  41c9bf:	call   41a417 <flatcc_builder_default_alloc@@Base+0x2dd>
  41c9c4:	mov    eax,0x0
  41c9c9:	leave  
  41c9ca:	ret    

000000000041c9cb <flatcc_builder_truncate_string@@Base>:
  41c9cb:	push   rbp
  41c9cc:	mov    rbp,rsp
  41c9cf:	sub    rsp,0x10
  41c9d3:	mov    QWORD PTR [rbp-0x8],rdi
  41c9d7:	mov    QWORD PTR [rbp-0x10],rsi
  41c9db:	mov    rax,QWORD PTR [rbp-0x8]
  41c9df:	mov    rax,QWORD PTR [rax+0x30]
  41c9e3:	movzx  eax,WORD PTR [rax+0xe]
  41c9e7:	cmp    ax,0x6
  41c9eb:	je     41ca0c <flatcc_builder_truncate_string@@Base+0x41>
  41c9ed:	lea    rcx,[rip+0x1c17c]        # 438b70 <flatcc_builder_padding_base@@Base+0x910>
  41c9f4:	mov    edx,0x3eb
  41c9f9:	lea    rsi,[rip+0x1ba60]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ca00:	lea    rdi,[rip+0x1bc49]        # 438650 <flatcc_builder_padding_base@@Base+0x3f0>
  41ca07:	call   405080 <__assert_fail@plt>
  41ca0c:	mov    rax,QWORD PTR [rbp-0x8]
  41ca10:	mov    rax,QWORD PTR [rax+0x30]
  41ca14:	mov    eax,DWORD PTR [rax+0x14]
  41ca17:	mov    eax,eax
  41ca19:	cmp    rax,QWORD PTR [rbp-0x10]
  41ca1d:	jae    41ca58 <flatcc_builder_truncate_string@@Base+0x8d>
  41ca1f:	mov    rax,QWORD PTR [rbp-0x8]
  41ca23:	mov    rax,QWORD PTR [rax+0x30]
  41ca27:	mov    eax,DWORD PTR [rax+0x14]
  41ca2a:	mov    eax,eax
  41ca2c:	cmp    rax,QWORD PTR [rbp-0x10]
  41ca30:	jae    41ca51 <flatcc_builder_truncate_string@@Base+0x86>
  41ca32:	lea    rcx,[rip+0x1c137]        # 438b70 <flatcc_builder_padding_base@@Base+0x910>
  41ca39:	mov    edx,0x3ec
  41ca3e:	lea    rsi,[rip+0x1ba1b]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ca45:	lea    rdi,[rip+0x1bc9c]        # 4386e8 <flatcc_builder_padding_base@@Base+0x488>
  41ca4c:	call   405080 <__assert_fail@plt>
  41ca51:	mov    eax,0xffffffff
  41ca56:	jmp    41ca8d <flatcc_builder_truncate_string@@Base+0xc2>
  41ca58:	mov    rax,QWORD PTR [rbp-0x8]
  41ca5c:	mov    rax,QWORD PTR [rax+0x30]
  41ca60:	mov    rdx,QWORD PTR [rbp-0x8]
  41ca64:	mov    rdx,QWORD PTR [rdx+0x30]
  41ca68:	mov    edx,DWORD PTR [rdx+0x14]
  41ca6b:	mov    rcx,QWORD PTR [rbp-0x10]
  41ca6f:	sub    edx,ecx
  41ca71:	mov    DWORD PTR [rax+0x14],edx
  41ca74:	mov    rax,QWORD PTR [rbp-0x10]
  41ca78:	mov    edx,eax
  41ca7a:	mov    rax,QWORD PTR [rbp-0x8]
  41ca7e:	mov    esi,edx
  41ca80:	mov    rdi,rax
  41ca83:	call   41a417 <flatcc_builder_default_alloc@@Base+0x2dd>
  41ca88:	mov    eax,0x0
  41ca8d:	leave  
  41ca8e:	ret    

000000000041ca8f <flatcc_builder_start_vector@@Base>:
  41ca8f:	push   rbp
  41ca90:	mov    rbp,rsp
  41ca93:	sub    rsp,0x20
  41ca97:	mov    QWORD PTR [rbp-0x8],rdi
  41ca9b:	mov    QWORD PTR [rbp-0x10],rsi
  41ca9f:	mov    eax,edx
  41caa1:	mov    QWORD PTR [rbp-0x20],rcx
  41caa5:	mov    WORD PTR [rbp-0x14],ax
  41caa9:	lea    rax,[rbp-0x14]
  41caad:	mov    esi,0x4
  41cab2:	mov    rdi,rax
  41cab5:	call   41adb5 <flatcc_builder_clear@@Base+0xc7>
  41caba:	movzx  eax,WORD PTR [rbp-0x14]
  41cabe:	movzx  edx,ax
  41cac1:	mov    rax,QWORD PTR [rbp-0x8]
  41cac5:	mov    esi,edx
  41cac7:	mov    rdi,rax
  41caca:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41cacf:	test   eax,eax
  41cad1:	je     41cada <flatcc_builder_start_vector@@Base+0x4b>
  41cad3:	mov    eax,0xffffffff
  41cad8:	jmp    41cb2b <flatcc_builder_start_vector@@Base+0x9c>
  41cada:	mov    rax,QWORD PTR [rbp-0x8]
  41cade:	mov    rax,QWORD PTR [rax+0x30]
  41cae2:	mov    rdx,QWORD PTR [rbp-0x10]
  41cae6:	mov    DWORD PTR [rax+0x10],edx
  41cae9:	mov    rax,QWORD PTR [rbp-0x8]
  41caed:	mov    rax,QWORD PTR [rax+0x30]
  41caf1:	mov    DWORD PTR [rax+0x14],0x0
  41caf8:	mov    rax,QWORD PTR [rbp-0x8]
  41cafc:	mov    rax,QWORD PTR [rax+0x30]
  41cb00:	mov    rdx,QWORD PTR [rbp-0x20]
  41cb04:	mov    DWORD PTR [rax+0x18],edx
  41cb07:	mov    rax,QWORD PTR [rbp-0x8]
  41cb0b:	mov    rax,QWORD PTR [rax+0x30]
  41cb0f:	mov    WORD PTR [rax+0xe],0x4
  41cb15:	mov    rax,QWORD PTR [rbp-0x8]
  41cb19:	mov    esi,0xfffffffc
  41cb1e:	mov    rdi,rax
  41cb21:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41cb26:	mov    eax,0x0
  41cb2b:	leave  
  41cb2c:	ret    

000000000041cb2d <flatcc_builder_start_offset_vector@@Base>:
  41cb2d:	push   rbp
  41cb2e:	mov    rbp,rsp
  41cb31:	sub    rsp,0x10
  41cb35:	mov    QWORD PTR [rbp-0x8],rdi
  41cb39:	mov    rax,QWORD PTR [rbp-0x8]
  41cb3d:	mov    esi,0x4
  41cb42:	mov    rdi,rax
  41cb45:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41cb4a:	test   eax,eax
  41cb4c:	je     41cb55 <flatcc_builder_start_offset_vector@@Base+0x28>
  41cb4e:	mov    eax,0xffffffff
  41cb53:	jmp    41cb97 <flatcc_builder_start_offset_vector@@Base+0x6a>
  41cb55:	mov    rax,QWORD PTR [rbp-0x8]
  41cb59:	mov    rax,QWORD PTR [rax+0x30]
  41cb5d:	mov    DWORD PTR [rax+0x10],0x4
  41cb64:	mov    rax,QWORD PTR [rbp-0x8]
  41cb68:	mov    rax,QWORD PTR [rax+0x30]
  41cb6c:	mov    DWORD PTR [rax+0x14],0x0
  41cb73:	mov    rax,QWORD PTR [rbp-0x8]
  41cb77:	mov    rax,QWORD PTR [rax+0x30]
  41cb7b:	mov    WORD PTR [rax+0xe],0x5
  41cb81:	mov    rax,QWORD PTR [rbp-0x8]
  41cb85:	mov    esi,0xfffffffc
  41cb8a:	mov    rdi,rax
  41cb8d:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41cb92:	mov    eax,0x0
  41cb97:	leave  
  41cb98:	ret    

000000000041cb99 <flatcc_builder_create_offset_vector@@Base>:
  41cb99:	push   rbp
  41cb9a:	mov    rbp,rsp
  41cb9d:	sub    rsp,0x30
  41cba1:	mov    QWORD PTR [rbp-0x18],rdi
  41cba5:	mov    QWORD PTR [rbp-0x20],rsi
  41cba9:	mov    QWORD PTR [rbp-0x28],rdx
  41cbad:	mov    rax,QWORD PTR [rbp-0x18]
  41cbb1:	mov    rdi,rax
  41cbb4:	call   41cb2d <flatcc_builder_start_offset_vector@@Base>
  41cbb9:	test   eax,eax
  41cbbb:	je     41cbc4 <flatcc_builder_create_offset_vector@@Base+0x2b>
  41cbbd:	mov    eax,0x0
  41cbc2:	jmp    41cc14 <flatcc_builder_create_offset_vector@@Base+0x7b>
  41cbc4:	mov    rdx,QWORD PTR [rbp-0x28]
  41cbc8:	mov    rax,QWORD PTR [rbp-0x18]
  41cbcc:	mov    rsi,rdx
  41cbcf:	mov    rdi,rax
  41cbd2:	call   41c53d <flatcc_builder_extend_offset_vector@@Base>
  41cbd7:	mov    QWORD PTR [rbp-0x8],rax
  41cbdb:	cmp    QWORD PTR [rbp-0x8],0x0
  41cbe0:	jne    41cbe9 <flatcc_builder_create_offset_vector@@Base+0x50>
  41cbe2:	mov    eax,0x0
  41cbe7:	jmp    41cc14 <flatcc_builder_create_offset_vector@@Base+0x7b>
  41cbe9:	mov    rax,QWORD PTR [rbp-0x28]
  41cbed:	lea    rdx,[rax*4+0x0]
  41cbf5:	mov    rcx,QWORD PTR [rbp-0x20]
  41cbf9:	mov    rax,QWORD PTR [rbp-0x8]
  41cbfd:	mov    rsi,rcx
  41cc00:	mov    rdi,rax
  41cc03:	call   4050f0 <memcpy@plt>
  41cc08:	mov    rax,QWORD PTR [rbp-0x18]
  41cc0c:	mov    rdi,rax
  41cc0f:	call   41e11f <flatcc_builder_end_offset_vector@@Base>
  41cc14:	leave  
  41cc15:	ret    

000000000041cc16 <flatcc_builder_start_string@@Base>:
  41cc16:	push   rbp
  41cc17:	mov    rbp,rsp
  41cc1a:	sub    rsp,0x10
  41cc1e:	mov    QWORD PTR [rbp-0x8],rdi
  41cc22:	mov    rax,QWORD PTR [rbp-0x8]
  41cc26:	mov    esi,0x1
  41cc2b:	mov    rdi,rax
  41cc2e:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41cc33:	test   eax,eax
  41cc35:	je     41cc3e <flatcc_builder_start_string@@Base+0x28>
  41cc37:	mov    eax,0xffffffff
  41cc3c:	jmp    41cc80 <flatcc_builder_start_string@@Base+0x6a>
  41cc3e:	mov    rax,QWORD PTR [rbp-0x8]
  41cc42:	mov    rax,QWORD PTR [rax+0x30]
  41cc46:	mov    DWORD PTR [rax+0x10],0x1
  41cc4d:	mov    rax,QWORD PTR [rbp-0x8]
  41cc51:	mov    rax,QWORD PTR [rax+0x30]
  41cc55:	mov    DWORD PTR [rax+0x14],0x0
  41cc5c:	mov    rax,QWORD PTR [rbp-0x8]
  41cc60:	mov    rax,QWORD PTR [rax+0x30]
  41cc64:	mov    WORD PTR [rax+0xe],0x6
  41cc6a:	mov    rax,QWORD PTR [rbp-0x8]
  41cc6e:	mov    esi,0xfffffffc
  41cc73:	mov    rdi,rax
  41cc76:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41cc7b:	mov    eax,0x0
  41cc80:	leave  
  41cc81:	ret    

000000000041cc82 <flatcc_builder_reserve_table@@Base>:
  41cc82:	push   rbp
  41cc83:	mov    rbp,rsp
  41cc86:	sub    rsp,0x10
  41cc8a:	mov    QWORD PTR [rbp-0x8],rdi
  41cc8e:	mov    DWORD PTR [rbp-0xc],esi
  41cc91:	cmp    DWORD PTR [rbp-0xc],0x0
  41cc95:	jns    41ccb6 <flatcc_builder_reserve_table@@Base+0x34>
  41cc97:	lea    rcx,[rip+0x1bef2]        # 438b90 <flatcc_builder_padding_base@@Base+0x930>
  41cc9e:	mov    edx,0x429
  41cca3:	lea    rsi,[rip+0x1b7b6]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ccaa:	lea    rdi,[rip+0x1ba59]        # 43870a <flatcc_builder_padding_base@@Base+0x4aa>
  41ccb1:	call   405080 <__assert_fail@plt>
  41ccb6:	mov    edx,DWORD PTR [rbp-0xc]
  41ccb9:	mov    rax,QWORD PTR [rbp-0x8]
  41ccbd:	mov    esi,edx
  41ccbf:	mov    rdi,rax
  41ccc2:	call   41a6f7 <flatcc_builder_default_alloc@@Base+0x5bd>
  41ccc7:	leave  
  41ccc8:	ret    

000000000041ccc9 <flatcc_builder_start_table@@Base>:
  41ccc9:	push   rbp
  41ccca:	mov    rbp,rsp
  41cccd:	sub    rsp,0x10
  41ccd1:	mov    QWORD PTR [rbp-0x8],rdi
  41ccd5:	mov    DWORD PTR [rbp-0xc],esi
  41ccd8:	mov    rax,QWORD PTR [rbp-0x8]
  41ccdc:	mov    esi,0x4
  41cce1:	mov    rdi,rax
  41cce4:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41cce9:	test   eax,eax
  41cceb:	je     41ccf7 <flatcc_builder_start_table@@Base+0x2e>
  41cced:	mov    eax,0xffffffff
  41ccf2:	jmp    41cdc7 <flatcc_builder_start_table@@Base+0xfe>
  41ccf7:	mov    rax,QWORD PTR [rbp-0x8]
  41ccfb:	mov    rax,QWORD PTR [rax+0x30]
  41ccff:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd03:	mov    rdx,QWORD PTR [rdx+0x8]
  41cd07:	mov    rcx,rdx
  41cd0a:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd0e:	mov    rdx,QWORD PTR [rdx+0x58]
  41cd12:	sub    rcx,rdx
  41cd15:	mov    rdx,rcx
  41cd18:	mov    DWORD PTR [rax+0x10],edx
  41cd1b:	mov    rax,QWORD PTR [rbp-0x8]
  41cd1f:	mov    rax,QWORD PTR [rax+0x30]
  41cd23:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd27:	mov    rdx,QWORD PTR [rdx]
  41cd2a:	mov    rcx,rdx
  41cd2d:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd31:	mov    rdx,QWORD PTR [rdx+0x88]
  41cd38:	sub    rcx,rdx
  41cd3b:	mov    rdx,rcx
  41cd3e:	mov    DWORD PTR [rax+0x14],edx
  41cd41:	mov    rax,QWORD PTR [rbp-0x8]
  41cd45:	mov    rax,QWORD PTR [rax+0x30]
  41cd49:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd4d:	mov    edx,DWORD PTR [rdx+0x14]
  41cd50:	mov    DWORD PTR [rax+0x18],edx
  41cd53:	mov    rax,QWORD PTR [rbp-0x8]
  41cd57:	mov    rax,QWORD PTR [rax+0x30]
  41cd5b:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd5f:	movzx  edx,WORD PTR [rdx+0x10]
  41cd63:	mov    WORD PTR [rax+0x1c],dx
  41cd67:	mov    rax,QWORD PTR [rbp-0x8]
  41cd6b:	mov    DWORD PTR [rax+0x14],0x0
  41cd72:	mov    rax,QWORD PTR [rbp-0x8]
  41cd76:	mov    DWORD PTR [rax+0x14],0x2f693b52
  41cd7d:	mov    rax,QWORD PTR [rbp-0x8]
  41cd81:	mov    WORD PTR [rax+0x10],0x0
  41cd87:	mov    rax,QWORD PTR [rbp-0x8]
  41cd8b:	mov    rax,QWORD PTR [rax+0x30]
  41cd8f:	mov    WORD PTR [rax+0xe],0x3
  41cd95:	mov    edx,DWORD PTR [rbp-0xc]
  41cd98:	mov    rax,QWORD PTR [rbp-0x8]
  41cd9c:	mov    esi,edx
  41cd9e:	mov    rdi,rax
  41cda1:	call   41a6f7 <flatcc_builder_default_alloc@@Base+0x5bd>
  41cda6:	test   eax,eax
  41cda8:	je     41cdb1 <flatcc_builder_start_table@@Base+0xe8>
  41cdaa:	mov    eax,0xffffffff
  41cdaf:	jmp    41cdc7 <flatcc_builder_start_table@@Base+0xfe>
  41cdb1:	mov    rax,QWORD PTR [rbp-0x8]
  41cdb5:	mov    esi,0xfffc
  41cdba:	mov    rdi,rax
  41cdbd:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41cdc2:	mov    eax,0x0
  41cdc7:	leave  
  41cdc8:	ret    

000000000041cdc9 <flatcc_builder_create_vtable@@Base>:
  41cdc9:	push   rbp
  41cdca:	mov    rbp,rsp
  41cdcd:	sub    rsp,0xd0
  41cdd4:	mov    QWORD PTR [rbp-0xb8],rdi
  41cddb:	mov    QWORD PTR [rbp-0xc0],rsi
  41cde2:	mov    eax,edx
  41cde4:	mov    WORD PTR [rbp-0xc4],ax
  41cdeb:	mov    rax,QWORD PTR fs:0x28
  41cdf4:	mov    QWORD PTR [rbp-0x8],rax
  41cdf8:	xor    eax,eax
  41cdfa:	mov    QWORD PTR [rbp-0xa0],0x0
  41ce05:	mov    DWORD PTR [rbp-0x98],0x0
  41ce0f:	cmp    WORD PTR [rbp-0xc4],0x0
  41ce17:	je     41ce81 <flatcc_builder_create_vtable@@Base+0xb8>
  41ce19:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ce20:	movzx  eax,WORD PTR [rbp-0xc4]
  41ce27:	add    rax,rdx
  41ce2a:	mov    QWORD PTR [rbp-0xa0],rax
  41ce31:	mov    eax,DWORD PTR [rbp-0x98]
  41ce37:	cdqe   
  41ce39:	shl    rax,0x4
  41ce3d:	add    rax,rbp
  41ce40:	lea    rdx,[rax-0x90]
  41ce47:	mov    rax,QWORD PTR [rbp-0xc0]
  41ce4e:	mov    QWORD PTR [rdx],rax
  41ce51:	mov    edx,DWORD PTR [rbp-0x98]
  41ce57:	movzx  eax,WORD PTR [rbp-0xc4]
  41ce5e:	movsxd rdx,edx
  41ce61:	shl    rdx,0x4
  41ce65:	add    rdx,rbp
  41ce68:	sub    rdx,0x88
  41ce6f:	mov    QWORD PTR [rdx],rax
  41ce72:	mov    eax,DWORD PTR [rbp-0x98]
  41ce78:	add    eax,0x1
  41ce7b:	mov    DWORD PTR [rbp-0x98],eax
  41ce81:	mov    rax,QWORD PTR [rbp-0xb8]
  41ce88:	mov    eax,DWORD PTR [rax+0x100]
  41ce8e:	test   eax,eax
  41ce90:	jne    41ced2 <flatcc_builder_create_vtable@@Base+0x109>
  41ce92:	mov    rax,QWORD PTR [rbp-0xb8]
  41ce99:	mov    eax,DWORD PTR [rax+0x124]
  41ce9f:	test   eax,eax
  41cea1:	jne    41ced2 <flatcc_builder_create_vtable@@Base+0x109>
  41cea3:	lea    rdx,[rbp-0xa0]
  41ceaa:	mov    rax,QWORD PTR [rbp-0xb8]
  41ceb1:	mov    rsi,rdx
  41ceb4:	mov    rdi,rax
  41ceb7:	call   41b467 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  41cebc:	mov    DWORD PTR [rbp-0xa4],eax
  41cec2:	cmp    DWORD PTR [rbp-0xa4],0x0
  41cec9:	jne    41cf08 <flatcc_builder_create_vtable@@Base+0x13f>
  41cecb:	mov    eax,0x0
  41ced0:	jmp    41cf0e <flatcc_builder_create_vtable@@Base+0x145>
  41ced2:	lea    rdx,[rbp-0xa0]
  41ced9:	mov    rax,QWORD PTR [rbp-0xb8]
  41cee0:	mov    rsi,rdx
  41cee3:	mov    rdi,rax
  41cee6:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41ceeb:	mov    DWORD PTR [rbp-0xa4],eax
  41cef1:	cmp    DWORD PTR [rbp-0xa4],0x0
  41cef8:	jne    41cf01 <flatcc_builder_create_vtable@@Base+0x138>
  41cefa:	mov    eax,0x0
  41ceff:	jmp    41cf0e <flatcc_builder_create_vtable@@Base+0x145>
  41cf01:	add    DWORD PTR [rbp-0xa4],0x1
  41cf08:	mov    eax,DWORD PTR [rbp-0xa4]
  41cf0e:	mov    rcx,QWORD PTR [rbp-0x8]
  41cf12:	xor    rcx,QWORD PTR fs:0x28
  41cf1b:	je     41cf22 <flatcc_builder_create_vtable@@Base+0x159>
  41cf1d:	call   405070 <__stack_chk_fail@plt>
  41cf22:	leave  
  41cf23:	ret    

000000000041cf24 <flatcc_builder_create_cached_vtable@@Base>:
  41cf24:	push   rbp
  41cf25:	mov    rbp,rsp
  41cf28:	sub    rsp,0x50
  41cf2c:	mov    QWORD PTR [rbp-0x38],rdi
  41cf30:	mov    QWORD PTR [rbp-0x40],rsi
  41cf34:	mov    eax,edx
  41cf36:	mov    DWORD PTR [rbp-0x48],ecx
  41cf39:	mov    WORD PTR [rbp-0x44],ax
  41cf3d:	mov    edx,DWORD PTR [rbp-0x48]
  41cf40:	mov    rax,QWORD PTR [rbp-0x38]
  41cf44:	mov    esi,edx
  41cf46:	mov    rdi,rax
  41cf49:	call   41a904 <flatcc_builder_default_alloc@@Base+0x7ca>
  41cf4e:	mov    QWORD PTR [rbp-0x18],rax
  41cf52:	cmp    QWORD PTR [rbp-0x18],0x0
  41cf57:	jne    41cf63 <flatcc_builder_create_cached_vtable@@Base+0x3f>
  41cf59:	mov    eax,0x0
  41cf5e:	jmp    41d204 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41cf63:	mov    rax,QWORD PTR [rbp-0x18]
  41cf67:	mov    QWORD PTR [rbp-0x20],rax
  41cf6b:	mov    rax,QWORD PTR [rbp-0x20]
  41cf6f:	mov    eax,DWORD PTR [rax]
  41cf71:	mov    DWORD PTR [rbp-0x2c],eax
  41cf74:	mov    QWORD PTR [rbp-0x28],0x0
  41cf7c:	jmp    41d05b <flatcc_builder_create_cached_vtable@@Base+0x137>
  41cf81:	mov    rax,QWORD PTR [rbp-0x38]
  41cf85:	mov    rdx,QWORD PTR [rax+0xb8]
  41cf8c:	mov    eax,DWORD PTR [rbp-0x2c]
  41cf8f:	add    rax,rdx
  41cf92:	mov    QWORD PTR [rbp-0x10],rax
  41cf96:	mov    rax,QWORD PTR [rbp-0x38]
  41cf9a:	mov    rdx,QWORD PTR [rax+0x78]
  41cf9e:	mov    rax,QWORD PTR [rbp-0x10]
  41cfa2:	mov    eax,DWORD PTR [rax+0x8]
  41cfa5:	mov    eax,eax
  41cfa7:	add    rax,rdx
  41cfaa:	mov    QWORD PTR [rbp-0x8],rax
  41cfae:	mov    rax,QWORD PTR [rbp-0x8]
  41cfb2:	movzx  eax,WORD PTR [rax]
  41cfb5:	cmp    ax,WORD PTR [rbp-0x44]
  41cfb9:	jne    41cfd6 <flatcc_builder_create_cached_vtable@@Base+0xb2>
  41cfbb:	movzx  edx,WORD PTR [rbp-0x44]
  41cfbf:	mov    rcx,QWORD PTR [rbp-0x8]
  41cfc3:	mov    rax,QWORD PTR [rbp-0x40]
  41cfc7:	mov    rsi,rcx
  41cfca:	mov    rdi,rax
  41cfcd:	call   4050c0 <memcmp@plt>
  41cfd2:	test   eax,eax
  41cfd4:	je     41cfee <flatcc_builder_create_cached_vtable@@Base+0xca>
  41cfd6:	mov    rax,QWORD PTR [rbp-0x10]
  41cfda:	add    rax,0xc
  41cfde:	mov    QWORD PTR [rbp-0x20],rax
  41cfe2:	mov    rax,QWORD PTR [rbp-0x10]
  41cfe6:	mov    eax,DWORD PTR [rax+0xc]
  41cfe9:	mov    DWORD PTR [rbp-0x2c],eax
  41cfec:	jmp    41d05b <flatcc_builder_create_cached_vtable@@Base+0x137>
  41cfee:	mov    rax,QWORD PTR [rbp-0x10]
  41cff2:	mov    edx,DWORD PTR [rax+0x4]
  41cff5:	mov    rax,QWORD PTR [rbp-0x38]
  41cff9:	mov    eax,DWORD PTR [rax+0x100]
  41cfff:	cmp    edx,eax
  41d001:	je     41d023 <flatcc_builder_create_cached_vtable@@Base+0xff>
  41d003:	mov    rax,QWORD PTR [rbp-0x10]
  41d007:	mov    QWORD PTR [rbp-0x28],rax
  41d00b:	mov    rax,QWORD PTR [rbp-0x10]
  41d00f:	add    rax,0xc
  41d013:	mov    QWORD PTR [rbp-0x20],rax
  41d017:	mov    rax,QWORD PTR [rbp-0x10]
  41d01b:	mov    eax,DWORD PTR [rax+0xc]
  41d01e:	mov    DWORD PTR [rbp-0x2c],eax
  41d021:	jmp    41d05b <flatcc_builder_create_cached_vtable@@Base+0x137>
  41d023:	mov    rax,QWORD PTR [rbp-0x20]
  41d027:	cmp    rax,QWORD PTR [rbp-0x18]
  41d02b:	je     41d050 <flatcc_builder_create_cached_vtable@@Base+0x12c>
  41d02d:	mov    rax,QWORD PTR [rbp-0x10]
  41d031:	mov    edx,DWORD PTR [rax+0xc]
  41d034:	mov    rax,QWORD PTR [rbp-0x20]
  41d038:	mov    DWORD PTR [rax],edx
  41d03a:	mov    rax,QWORD PTR [rbp-0x18]
  41d03e:	mov    edx,DWORD PTR [rax]
  41d040:	mov    rax,QWORD PTR [rbp-0x10]
  41d044:	mov    DWORD PTR [rax+0xc],edx
  41d047:	mov    rax,QWORD PTR [rbp-0x18]
  41d04b:	mov    edx,DWORD PTR [rbp-0x2c]
  41d04e:	mov    DWORD PTR [rax],edx
  41d050:	mov    rax,QWORD PTR [rbp-0x10]
  41d054:	mov    eax,DWORD PTR [rax]
  41d056:	jmp    41d204 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41d05b:	cmp    DWORD PTR [rbp-0x2c],0x0
  41d05f:	jne    41cf81 <flatcc_builder_create_cached_vtable@@Base+0x5d>
  41d065:	mov    rax,QWORD PTR [rbp-0x38]
  41d069:	mov    eax,DWORD PTR [rax+0xe4]
  41d06f:	mov    edx,eax
  41d071:	mov    rax,QWORD PTR [rbp-0x38]
  41d075:	mov    r8d,0x0
  41d07b:	mov    ecx,0x10
  41d080:	mov    esi,0x6
  41d085:	mov    rdi,rax
  41d088:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41d08d:	mov    QWORD PTR [rbp-0x10],rax
  41d091:	cmp    QWORD PTR [rbp-0x10],0x0
  41d096:	jne    41d0a2 <flatcc_builder_create_cached_vtable@@Base+0x17e>
  41d098:	mov    eax,0x0
  41d09d:	jmp    41d204 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41d0a2:	mov    rax,QWORD PTR [rbp-0x38]
  41d0a6:	mov    eax,DWORD PTR [rax+0xe4]
  41d0ac:	mov    DWORD PTR [rbp-0x2c],eax
  41d0af:	mov    rax,QWORD PTR [rbp-0x38]
  41d0b3:	mov    eax,DWORD PTR [rax+0xe4]
  41d0b9:	lea    edx,[rax+0x10]
  41d0bc:	mov    rax,QWORD PTR [rbp-0x38]
  41d0c0:	mov    DWORD PTR [rax+0xe4],edx
  41d0c6:	mov    rax,QWORD PTR [rbp-0x38]
  41d0ca:	mov    edx,DWORD PTR [rax+0x100]
  41d0d0:	mov    rax,QWORD PTR [rbp-0x10]
  41d0d4:	mov    DWORD PTR [rax+0x4],edx
  41d0d7:	mov    rax,QWORD PTR [rbp-0x18]
  41d0db:	mov    edx,DWORD PTR [rax]
  41d0dd:	mov    rax,QWORD PTR [rbp-0x10]
  41d0e1:	mov    DWORD PTR [rax+0xc],edx
  41d0e4:	mov    rax,QWORD PTR [rbp-0x18]
  41d0e8:	mov    edx,DWORD PTR [rbp-0x2c]
  41d0eb:	mov    DWORD PTR [rax],edx
  41d0ed:	movzx  edx,WORD PTR [rbp-0x44]
  41d0f1:	mov    rcx,QWORD PTR [rbp-0x40]
  41d0f5:	mov    rax,QWORD PTR [rbp-0x38]
  41d0f9:	mov    rsi,rcx
  41d0fc:	mov    rdi,rax
  41d0ff:	call   41cdc9 <flatcc_builder_create_vtable@@Base>
  41d104:	mov    edx,eax
  41d106:	mov    rax,QWORD PTR [rbp-0x10]
  41d10a:	mov    DWORD PTR [rax],edx
  41d10c:	mov    rax,QWORD PTR [rbp-0x10]
  41d110:	mov    eax,DWORD PTR [rax]
  41d112:	test   eax,eax
  41d114:	jne    41d120 <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  41d116:	mov    eax,0x0
  41d11b:	jmp    41d204 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41d120:	cmp    QWORD PTR [rbp-0x28],0x0
  41d125:	je     41d13a <flatcc_builder_create_cached_vtable@@Base+0x216>
  41d127:	mov    rax,QWORD PTR [rbp-0x28]
  41d12b:	mov    edx,DWORD PTR [rax+0x8]
  41d12e:	mov    rax,QWORD PTR [rbp-0x10]
  41d132:	mov    DWORD PTR [rax+0x8],edx
  41d135:	jmp    41d1fe <flatcc_builder_create_cached_vtable@@Base+0x2da>
  41d13a:	mov    rax,QWORD PTR [rbp-0x38]
  41d13e:	mov    rax,QWORD PTR [rax+0x118]
  41d145:	test   rax,rax
  41d148:	je     41d17d <flatcc_builder_create_cached_vtable@@Base+0x259>
  41d14a:	mov    rax,QWORD PTR [rbp-0x38]
  41d14e:	mov    rdx,QWORD PTR [rax+0x118]
  41d155:	mov    rax,QWORD PTR [rbp-0x38]
  41d159:	mov    ecx,DWORD PTR [rax+0xe0]
  41d15f:	movzx  eax,WORD PTR [rbp-0x44]
  41d163:	add    eax,ecx
  41d165:	mov    eax,eax
  41d167:	cmp    rdx,rax
  41d16a:	jae    41d17d <flatcc_builder_create_cached_vtable@@Base+0x259>
  41d16c:	mov    rax,QWORD PTR [rbp-0x38]
  41d170:	mov    rdi,rax
  41d173:	call   41a978 <flatcc_builder_flush_vtable_cache@@Base>
  41d178:	jmp    41d1fe <flatcc_builder_create_cached_vtable@@Base+0x2da>
  41d17d:	movzx  edx,WORD PTR [rbp-0x44]
  41d181:	mov    rax,QWORD PTR [rbp-0x38]
  41d185:	mov    eax,DWORD PTR [rax+0xe0]
  41d18b:	mov    esi,eax
  41d18d:	mov    rax,QWORD PTR [rbp-0x38]
  41d191:	mov    r8d,0x0
  41d197:	mov    rcx,rdx
  41d19a:	mov    rdx,rsi
  41d19d:	mov    esi,0x2
  41d1a2:	mov    rdi,rax
  41d1a5:	call   41a646 <flatcc_builder_default_alloc@@Base+0x50c>
  41d1aa:	mov    QWORD PTR [rbp-0x8],rax
  41d1ae:	cmp    QWORD PTR [rbp-0x8],0x0
  41d1b3:	jne    41d1bc <flatcc_builder_create_cached_vtable@@Base+0x298>
  41d1b5:	mov    eax,0xffffffff
  41d1ba:	jmp    41d204 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  41d1bc:	mov    rax,QWORD PTR [rbp-0x38]
  41d1c0:	mov    edx,DWORD PTR [rax+0xe0]
  41d1c6:	mov    rax,QWORD PTR [rbp-0x10]
  41d1ca:	mov    DWORD PTR [rax+0x8],edx
  41d1cd:	mov    rax,QWORD PTR [rbp-0x38]
  41d1d1:	mov    edx,DWORD PTR [rax+0xe0]
  41d1d7:	movzx  eax,WORD PTR [rbp-0x44]
  41d1db:	add    edx,eax
  41d1dd:	mov    rax,QWORD PTR [rbp-0x38]
  41d1e1:	mov    DWORD PTR [rax+0xe0],edx
  41d1e7:	movzx  edx,WORD PTR [rbp-0x44]
  41d1eb:	mov    rcx,QWORD PTR [rbp-0x40]
  41d1ef:	mov    rax,QWORD PTR [rbp-0x8]
  41d1f3:	mov    rsi,rcx
  41d1f6:	mov    rdi,rax
  41d1f9:	call   4050f0 <memcpy@plt>
  41d1fe:	mov    rax,QWORD PTR [rbp-0x10]
  41d202:	mov    eax,DWORD PTR [rax]
  41d204:	leave  
  41d205:	ret    

000000000041d206 <flatcc_builder_create_table@@Base>:
  41d206:	push   rbp
  41d207:	mov    rbp,rsp
  41d20a:	sub    rsp,0x100
  41d211:	mov    QWORD PTR [rbp-0xd8],rdi
  41d218:	mov    QWORD PTR [rbp-0xe0],rsi
  41d21f:	mov    QWORD PTR [rbp-0xe8],rdx
  41d226:	mov    eax,ecx
  41d228:	mov    QWORD PTR [rbp-0xf8],r8
  41d22f:	mov    DWORD PTR [rbp-0xf0],r9d
  41d236:	mov    WORD PTR [rbp-0xec],ax
  41d23d:	mov    rax,QWORD PTR fs:0x28
  41d246:	mov    QWORD PTR [rbp-0x8],rax
  41d24a:	xor    eax,eax
  41d24c:	cmp    DWORD PTR [rbp-0xf0],0x0
  41d253:	jns    41d274 <flatcc_builder_create_table@@Base+0x6e>
  41d255:	lea    rcx,[rip+0x1b954]        # 438bb0 <flatcc_builder_padding_base@@Base+0x950>
  41d25c:	mov    edx,0x4d5
  41d261:	lea    rsi,[rip+0x1b1f8]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41d268:	lea    rdi,[rip+0x1b4a6]        # 438715 <flatcc_builder_padding_base@@Base+0x4b5>
  41d26f:	call   405080 <__assert_fail@plt>
  41d274:	mov    eax,DWORD PTR [rbp+0x10]
  41d277:	and    eax,0x1
  41d27a:	test   eax,eax
  41d27c:	jne    41d29d <flatcc_builder_create_table@@Base+0x97>
  41d27e:	lea    rcx,[rip+0x1b92b]        # 438bb0 <flatcc_builder_padding_base@@Base+0x950>
  41d285:	mov    edx,0x4db
  41d28a:	lea    rsi,[rip+0x1b1cf]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41d291:	lea    rdi,[rip+0x1b48f]        # 438727 <flatcc_builder_padding_base@@Base+0x4c7>
  41d298:	call   405080 <__assert_fail@plt>
  41d29d:	lea    rax,[rbp-0xec]
  41d2a4:	mov    esi,0x4
  41d2a9:	mov    rdi,rax
  41d2ac:	call   41adb5 <flatcc_builder_clear@@Base+0xc7>
  41d2b1:	movzx  eax,WORD PTR [rbp-0xec]
  41d2b8:	movzx  edx,ax
  41d2bb:	mov    rax,QWORD PTR [rbp-0xd8]
  41d2c2:	mov    esi,edx
  41d2c4:	mov    rdi,rax
  41d2c7:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41d2cc:	movzx  eax,WORD PTR [rbp-0xec]
  41d2d3:	movzx  edx,ax
  41d2d6:	mov    rax,QWORD PTR [rbp-0xe8]
  41d2dd:	mov    ecx,eax
  41d2df:	mov    rax,QWORD PTR [rbp-0xd8]
  41d2e6:	mov    esi,ecx
  41d2e8:	mov    rdi,rax
  41d2eb:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41d2f0:	mov    DWORD PTR [rbp-0xbc],eax
  41d2f6:	mov    rax,QWORD PTR [rbp-0xd8]
  41d2fd:	mov    eax,DWORD PTR [rax+0xf0]
  41d303:	mov    edx,eax
  41d305:	mov    rax,QWORD PTR [rbp-0xe8]
  41d30c:	mov    ecx,eax
  41d30e:	mov    eax,DWORD PTR [rbp-0xbc]
  41d314:	add    eax,ecx
  41d316:	sub    edx,eax
  41d318:	mov    eax,edx
  41d31a:	sub    eax,0x4
  41d31d:	mov    DWORD PTR [rbp-0xb8],eax
  41d323:	mov    eax,DWORD PTR [rbp+0x10]
  41d326:	sub    eax,0x1
  41d329:	mov    DWORD PTR [rbp-0xb4],eax
  41d32f:	mov    eax,DWORD PTR [rbp-0xb8]
  41d335:	sub    eax,DWORD PTR [rbp-0xb4]
  41d33b:	mov    DWORD PTR [rbp-0xb0],eax
  41d341:	mov    eax,DWORD PTR [rbp-0xb8]
  41d347:	sub    eax,DWORD PTR [rbp-0xb0]
  41d34d:	cmp    eax,DWORD PTR [rbp-0xb4]
  41d353:	je     41d35f <flatcc_builder_create_table@@Base+0x159>
  41d355:	mov    eax,0xffffffff
  41d35a:	jmp    41d583 <flatcc_builder_create_table@@Base+0x37d>
  41d35f:	mov    eax,DWORD PTR [rbp-0xb0]
  41d365:	mov    edi,eax
  41d367:	call   41a074 <main@@Base+0x9f9>
  41d36c:	mov    DWORD PTR [rbp-0xc4],eax
  41d372:	mov    DWORD PTR [rbp-0xc0],0x0
  41d37c:	jmp    41d407 <flatcc_builder_create_table@@Base+0x201>
  41d381:	mov    eax,DWORD PTR [rbp-0xc0]
  41d387:	cdqe   
  41d389:	lea    rdx,[rax+rax*1]
  41d38d:	mov    rax,QWORD PTR [rbp-0xf8]
  41d394:	add    rax,rdx
  41d397:	movzx  eax,WORD PTR [rax]
  41d39a:	movzx  edx,ax
  41d39d:	mov    rax,QWORD PTR [rbp-0xe0]
  41d3a4:	add    rax,rdx
  41d3a7:	mov    QWORD PTR [rbp-0xa8],rax
  41d3ae:	mov    rax,QWORD PTR [rbp-0xa8]
  41d3b5:	mov    eax,DWORD PTR [rax]
  41d3b7:	sub    eax,DWORD PTR [rbp-0xb8]
  41d3bd:	mov    edx,eax
  41d3bf:	mov    eax,DWORD PTR [rbp-0xc0]
  41d3c5:	cdqe   
  41d3c7:	lea    rcx,[rax+rax*1]
  41d3cb:	mov    rax,QWORD PTR [rbp-0xf8]
  41d3d2:	add    rax,rcx
  41d3d5:	movzx  eax,WORD PTR [rax]
  41d3d8:	movzx  eax,ax
  41d3db:	sub    edx,eax
  41d3dd:	mov    eax,edx
  41d3df:	sub    eax,0x4
  41d3e2:	mov    DWORD PTR [rbp-0xac],eax
  41d3e8:	mov    eax,DWORD PTR [rbp-0xac]
  41d3ee:	mov    edi,eax
  41d3f0:	call   41a074 <main@@Base+0x9f9>
  41d3f5:	mov    edx,eax
  41d3f7:	mov    rax,QWORD PTR [rbp-0xa8]
  41d3fe:	mov    DWORD PTR [rax],edx
  41d400:	add    DWORD PTR [rbp-0xc0],0x1
  41d407:	mov    eax,DWORD PTR [rbp-0xc0]
  41d40d:	cmp    eax,DWORD PTR [rbp-0xf0]
  41d413:	jl     41d381 <flatcc_builder_create_table@@Base+0x17b>
  41d419:	mov    QWORD PTR [rbp-0xa0],0x0
  41d424:	mov    DWORD PTR [rbp-0x98],0x0
  41d42e:	mov    rax,QWORD PTR [rbp-0xa0]
  41d435:	add    rax,0x4
  41d439:	mov    QWORD PTR [rbp-0xa0],rax
  41d440:	mov    eax,DWORD PTR [rbp-0x98]
  41d446:	cdqe   
  41d448:	shl    rax,0x4
  41d44c:	add    rax,rbp
  41d44f:	lea    rdx,[rax-0x90]
  41d456:	lea    rax,[rbp-0xc4]
  41d45d:	mov    QWORD PTR [rdx],rax
  41d460:	mov    eax,DWORD PTR [rbp-0x98]
  41d466:	cdqe   
  41d468:	shl    rax,0x4
  41d46c:	add    rax,rbp
  41d46f:	sub    rax,0x88
  41d475:	mov    QWORD PTR [rax],0x4
  41d47c:	mov    eax,DWORD PTR [rbp-0x98]
  41d482:	add    eax,0x1
  41d485:	mov    DWORD PTR [rbp-0x98],eax
  41d48b:	cmp    QWORD PTR [rbp-0xe8],0x0
  41d493:	je     41d4fc <flatcc_builder_create_table@@Base+0x2f6>
  41d495:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d49c:	mov    rax,QWORD PTR [rbp-0xe8]
  41d4a3:	add    rax,rdx
  41d4a6:	mov    QWORD PTR [rbp-0xa0],rax
  41d4ad:	mov    eax,DWORD PTR [rbp-0x98]
  41d4b3:	cdqe   
  41d4b5:	shl    rax,0x4
  41d4b9:	add    rax,rbp
  41d4bc:	lea    rdx,[rax-0x90]
  41d4c3:	mov    rax,QWORD PTR [rbp-0xe0]
  41d4ca:	mov    QWORD PTR [rdx],rax
  41d4cd:	mov    eax,DWORD PTR [rbp-0x98]
  41d4d3:	cdqe   
  41d4d5:	shl    rax,0x4
  41d4d9:	add    rax,rbp
  41d4dc:	lea    rdx,[rax-0x88]
  41d4e3:	mov    rax,QWORD PTR [rbp-0xe8]
  41d4ea:	mov    QWORD PTR [rdx],rax
  41d4ed:	mov    eax,DWORD PTR [rbp-0x98]
  41d4f3:	add    eax,0x1
  41d4f6:	mov    DWORD PTR [rbp-0x98],eax
  41d4fc:	cmp    DWORD PTR [rbp-0xbc],0x0
  41d503:	je     41d56a <flatcc_builder_create_table@@Base+0x364>
  41d505:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d50c:	mov    eax,DWORD PTR [rbp-0xbc]
  41d512:	add    rax,rdx
  41d515:	mov    QWORD PTR [rbp-0xa0],rax
  41d51c:	mov    eax,DWORD PTR [rbp-0x98]
  41d522:	cdqe   
  41d524:	shl    rax,0x4
  41d528:	add    rax,rbp
  41d52b:	sub    rax,0x90
  41d531:	mov    rdx,0x438260
  41d538:	mov    QWORD PTR [rax],rdx
  41d53b:	mov    edx,DWORD PTR [rbp-0x98]
  41d541:	mov    eax,DWORD PTR [rbp-0xbc]
  41d547:	movsxd rdx,edx
  41d54a:	shl    rdx,0x4
  41d54e:	add    rdx,rbp
  41d551:	sub    rdx,0x88
  41d558:	mov    QWORD PTR [rdx],rax
  41d55b:	mov    eax,DWORD PTR [rbp-0x98]
  41d561:	add    eax,0x1
  41d564:	mov    DWORD PTR [rbp-0x98],eax
  41d56a:	lea    rdx,[rbp-0xa0]
  41d571:	mov    rax,QWORD PTR [rbp-0xd8]
  41d578:	mov    rsi,rdx
  41d57b:	mov    rdi,rax
  41d57e:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41d583:	mov    rsi,QWORD PTR [rbp-0x8]
  41d587:	xor    rsi,QWORD PTR fs:0x28
  41d590:	je     41d597 <flatcc_builder_create_table@@Base+0x391>
  41d592:	call   405070 <__stack_chk_fail@plt>
  41d597:	leave  
  41d598:	ret    

000000000041d599 <flatcc_builder_check_required_field@@Base>:
  41d599:	push   rbp
  41d59a:	mov    rbp,rsp
  41d59d:	sub    rsp,0x10
  41d5a1:	mov    QWORD PTR [rbp-0x8],rdi
  41d5a5:	mov    eax,esi
  41d5a7:	mov    WORD PTR [rbp-0xc],ax
  41d5ab:	mov    rax,QWORD PTR [rbp-0x8]
  41d5af:	mov    rax,QWORD PTR [rax+0x30]
  41d5b3:	movzx  eax,WORD PTR [rax+0xe]
  41d5b7:	cmp    ax,0x3
  41d5bb:	je     41d5dc <flatcc_builder_check_required_field@@Base+0x43>
  41d5bd:	lea    rcx,[rip+0x1b61c]        # 438be0 <flatcc_builder_padding_base@@Base+0x980>
  41d5c4:	mov    edx,0x4f8
  41d5c9:	lea    rsi,[rip+0x1ae90]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41d5d0:	lea    rdi,[rip+0x1b161]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41d5d7:	call   405080 <__assert_fail@plt>
  41d5dc:	mov    rax,QWORD PTR [rbp-0x8]
  41d5e0:	movzx  eax,WORD PTR [rax+0x10]
  41d5e4:	cmp    ax,WORD PTR [rbp-0xc]
  41d5e8:	jbe    41d60b <flatcc_builder_check_required_field@@Base+0x72>
  41d5ea:	mov    rax,QWORD PTR [rbp-0x8]
  41d5ee:	mov    rax,QWORD PTR [rax+0x8]
  41d5f2:	movzx  edx,WORD PTR [rbp-0xc]
  41d5f6:	add    rdx,rdx
  41d5f9:	add    rax,rdx
  41d5fc:	movzx  eax,WORD PTR [rax]
  41d5ff:	test   ax,ax
  41d602:	je     41d60b <flatcc_builder_check_required_field@@Base+0x72>
  41d604:	mov    eax,0x1
  41d609:	jmp    41d610 <flatcc_builder_check_required_field@@Base+0x77>
  41d60b:	mov    eax,0x0
  41d610:	leave  
  41d611:	ret    

000000000041d612 <flatcc_builder_check_union_field@@Base>:
  41d612:	push   rbp
  41d613:	mov    rbp,rsp
  41d616:	sub    rsp,0x10
  41d61a:	mov    QWORD PTR [rbp-0x8],rdi
  41d61e:	mov    eax,esi
  41d620:	mov    WORD PTR [rbp-0xc],ax
  41d624:	mov    rax,QWORD PTR [rbp-0x8]
  41d628:	mov    rax,QWORD PTR [rax+0x30]
  41d62c:	movzx  eax,WORD PTR [rax+0xe]
  41d630:	cmp    ax,0x3
  41d634:	je     41d655 <flatcc_builder_check_union_field@@Base+0x43>
  41d636:	lea    rcx,[rip+0x1b5e3]        # 438c20 <flatcc_builder_padding_base@@Base+0x9c0>
  41d63d:	mov    edx,0x4ff
  41d642:	lea    rsi,[rip+0x1ae17]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41d649:	lea    rdi,[rip+0x1b0e8]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41d650:	call   405080 <__assert_fail@plt>
  41d655:	cmp    WORD PTR [rbp-0xc],0x0
  41d65a:	je     41d66a <flatcc_builder_check_union_field@@Base+0x58>
  41d65c:	mov    rax,QWORD PTR [rbp-0x8]
  41d660:	movzx  eax,WORD PTR [rax+0x10]
  41d664:	cmp    ax,WORD PTR [rbp-0xc]
  41d668:	ja     41d674 <flatcc_builder_check_union_field@@Base+0x62>
  41d66a:	mov    eax,0x0
  41d66f:	jmp    41d71e <flatcc_builder_check_union_field@@Base+0x10c>
  41d674:	mov    rax,QWORD PTR [rbp-0x8]
  41d678:	mov    rax,QWORD PTR [rax+0x8]
  41d67c:	movzx  edx,WORD PTR [rbp-0xc]
  41d680:	add    rdx,rdx
  41d683:	sub    rdx,0x2
  41d687:	add    rax,rdx
  41d68a:	movzx  eax,WORD PTR [rax]
  41d68d:	test   ax,ax
  41d690:	jne    41d6b2 <flatcc_builder_check_union_field@@Base+0xa0>
  41d692:	mov    rax,QWORD PTR [rbp-0x8]
  41d696:	mov    rax,QWORD PTR [rax+0x8]
  41d69a:	movzx  edx,WORD PTR [rbp-0xc]
  41d69e:	add    rdx,rdx
  41d6a1:	add    rax,rdx
  41d6a4:	movzx  eax,WORD PTR [rax]
  41d6a7:	test   ax,ax
  41d6aa:	sete   al
  41d6ad:	movzx  eax,al
  41d6b0:	jmp    41d71e <flatcc_builder_check_union_field@@Base+0x10c>
  41d6b2:	mov    rax,QWORD PTR [rbp-0x8]
  41d6b6:	mov    rdx,QWORD PTR [rax+0x18]
  41d6ba:	mov    rax,QWORD PTR [rbp-0x8]
  41d6be:	mov    rax,QWORD PTR [rax+0x8]
  41d6c2:	movzx  ecx,WORD PTR [rbp-0xc]
  41d6c6:	add    rcx,rcx
  41d6c9:	sub    rcx,0x2
  41d6cd:	add    rax,rcx
  41d6d0:	movzx  eax,WORD PTR [rax]
  41d6d3:	movzx  eax,ax
  41d6d6:	add    rax,rdx
  41d6d9:	movzx  eax,BYTE PTR [rax]
  41d6dc:	test   al,al
  41d6de:	je     41d700 <flatcc_builder_check_union_field@@Base+0xee>
  41d6e0:	mov    rax,QWORD PTR [rbp-0x8]
  41d6e4:	mov    rax,QWORD PTR [rax+0x8]
  41d6e8:	movzx  edx,WORD PTR [rbp-0xc]
  41d6ec:	add    rdx,rdx
  41d6ef:	add    rax,rdx
  41d6f2:	movzx  eax,WORD PTR [rax]
  41d6f5:	test   ax,ax
  41d6f8:	setne  al
  41d6fb:	movzx  eax,al
  41d6fe:	jmp    41d71e <flatcc_builder_check_union_field@@Base+0x10c>
  41d700:	mov    rax,QWORD PTR [rbp-0x8]
  41d704:	mov    rax,QWORD PTR [rax+0x8]
  41d708:	movzx  edx,WORD PTR [rbp-0xc]
  41d70c:	add    rdx,rdx
  41d70f:	add    rax,rdx
  41d712:	movzx  eax,WORD PTR [rax]
  41d715:	test   ax,ax
  41d718:	sete   al
  41d71b:	movzx  eax,al
  41d71e:	leave  
  41d71f:	ret    

000000000041d720 <flatcc_builder_check_required@@Base>:
  41d720:	push   rbp
  41d721:	mov    rbp,rsp
  41d724:	sub    rsp,0x30
  41d728:	mov    QWORD PTR [rbp-0x18],rdi
  41d72c:	mov    QWORD PTR [rbp-0x20],rsi
  41d730:	mov    DWORD PTR [rbp-0x24],edx
  41d733:	mov    rax,QWORD PTR [rbp-0x18]
  41d737:	mov    rax,QWORD PTR [rax+0x30]
  41d73b:	movzx  eax,WORD PTR [rax+0xe]
  41d73f:	cmp    ax,0x3
  41d743:	je     41d764 <flatcc_builder_check_required@@Base+0x44>
  41d745:	lea    rcx,[rip+0x1b504]        # 438c50 <flatcc_builder_padding_base@@Base+0x9f0>
  41d74c:	mov    edx,0x511
  41d751:	lea    rsi,[rip+0x1ad08]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41d758:	lea    rdi,[rip+0x1afd9]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41d75f:	call   405080 <__assert_fail@plt>
  41d764:	mov    rax,QWORD PTR [rbp-0x18]
  41d768:	movzx  eax,WORD PTR [rax+0x10]
  41d76c:	movzx  eax,ax
  41d76f:	cmp    eax,DWORD PTR [rbp-0x24]
  41d772:	jge    41d77b <flatcc_builder_check_required@@Base+0x5b>
  41d774:	mov    eax,0x0
  41d779:	jmp    41d7c9 <flatcc_builder_check_required@@Base+0xa9>
  41d77b:	mov    DWORD PTR [rbp-0x4],0x0
  41d782:	jmp    41d7bc <flatcc_builder_check_required@@Base+0x9c>
  41d784:	mov    rax,QWORD PTR [rbp-0x18]
  41d788:	mov    rax,QWORD PTR [rax+0x8]
  41d78c:	mov    edx,DWORD PTR [rbp-0x4]
  41d78f:	movsxd rdx,edx
  41d792:	lea    rcx,[rdx+rdx*1]
  41d796:	mov    rdx,QWORD PTR [rbp-0x20]
  41d79a:	add    rdx,rcx
  41d79d:	movzx  edx,WORD PTR [rdx]
  41d7a0:	movzx  edx,dx
  41d7a3:	add    rdx,rdx
  41d7a6:	add    rax,rdx
  41d7a9:	movzx  eax,WORD PTR [rax]
  41d7ac:	test   ax,ax
  41d7af:	jne    41d7b8 <flatcc_builder_check_required@@Base+0x98>
  41d7b1:	mov    eax,0x0
  41d7b6:	jmp    41d7c9 <flatcc_builder_check_required@@Base+0xa9>
  41d7b8:	add    DWORD PTR [rbp-0x4],0x1
  41d7bc:	mov    eax,DWORD PTR [rbp-0x4]
  41d7bf:	cmp    eax,DWORD PTR [rbp-0x24]
  41d7c2:	jl     41d784 <flatcc_builder_check_required@@Base+0x64>
  41d7c4:	mov    eax,0x1
  41d7c9:	leave  
  41d7ca:	ret    

000000000041d7cb <flatcc_builder_end_table@@Base>:
  41d7cb:	push   rbp
  41d7cc:	mov    rbp,rsp
  41d7cf:	sub    rsp,0x30
  41d7d3:	mov    QWORD PTR [rbp-0x28],rdi
  41d7d7:	mov    rax,QWORD PTR [rbp-0x28]
  41d7db:	mov    rax,QWORD PTR [rax+0x30]
  41d7df:	movzx  eax,WORD PTR [rax+0xe]
  41d7e3:	cmp    ax,0x3
  41d7e7:	je     41d808 <flatcc_builder_end_table@@Base+0x3d>
  41d7e9:	lea    rcx,[rip+0x1b480]        # 438c70 <flatcc_builder_padding_base@@Base+0xa10>
  41d7f0:	mov    edx,0x525
  41d7f5:	lea    rsi,[rip+0x1ac64]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41d7fc:	lea    rdi,[rip+0x1af35]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41d803:	call   405080 <__assert_fail@plt>
  41d808:	mov    rax,QWORD PTR [rbp-0x28]
  41d80c:	mov    rax,QWORD PTR [rax+0x8]
  41d810:	sub    rax,0x4
  41d814:	mov    QWORD PTR [rbp-0x10],rax
  41d818:	mov    rax,QWORD PTR [rbp-0x28]
  41d81c:	movzx  eax,WORD PTR [rax+0x10]
  41d820:	movzx  eax,ax
  41d823:	add    eax,0x2
  41d826:	cdqe   
  41d828:	add    eax,eax
  41d82a:	mov    WORD PTR [rbp-0x1e],ax
  41d82e:	mov    rax,QWORD PTR [rbp-0x10]
  41d832:	movzx  edx,WORD PTR [rbp-0x1e]
  41d836:	mov    WORD PTR [rax],dx
  41d839:	mov    rax,QWORD PTR [rbp-0x10]
  41d83d:	lea    rdx,[rax+0x2]
  41d841:	mov    rax,QWORD PTR [rbp-0x28]
  41d845:	mov    eax,DWORD PTR [rax+0x20]
  41d848:	add    eax,0x4
  41d84b:	mov    WORD PTR [rdx],ax
  41d84e:	mov    rax,QWORD PTR [rbp-0x10]
  41d852:	movzx  eax,WORD PTR [rax]
  41d855:	movzx  edx,ax
  41d858:	mov    rax,QWORD PTR [rbp-0x28]
  41d85c:	mov    eax,DWORD PTR [rax+0x14]
  41d85f:	xor    eax,edx
  41d861:	imul   edx,eax,0x9e3779b1
  41d867:	mov    rax,QWORD PTR [rbp-0x10]
  41d86b:	add    rax,0x2
  41d86f:	movzx  eax,WORD PTR [rax]
  41d872:	movzx  eax,ax
  41d875:	xor    eax,edx
  41d877:	imul   edx,eax,0x9e3779b1
  41d87d:	mov    rax,QWORD PTR [rbp-0x28]
  41d881:	mov    DWORD PTR [rax+0x14],edx
  41d884:	mov    rax,QWORD PTR [rbp-0x28]
  41d888:	mov    ecx,DWORD PTR [rax+0x14]
  41d88b:	movzx  edx,WORD PTR [rbp-0x1e]
  41d88f:	mov    rsi,QWORD PTR [rbp-0x10]
  41d893:	mov    rax,QWORD PTR [rbp-0x28]
  41d897:	mov    rdi,rax
  41d89a:	call   41cf24 <flatcc_builder_create_cached_vtable@@Base>
  41d89f:	mov    DWORD PTR [rbp-0x1c],eax
  41d8a2:	cmp    DWORD PTR [rbp-0x1c],0x0
  41d8a6:	jne    41d8b2 <flatcc_builder_end_table@@Base+0xe7>
  41d8a8:	mov    eax,0x0
  41d8ad:	jmp    41d9d2 <flatcc_builder_end_table@@Base+0x207>
  41d8b2:	movzx  edx,WORD PTR [rbp-0x1e]
  41d8b6:	mov    rax,QWORD PTR [rbp-0x10]
  41d8ba:	mov    esi,0x0
  41d8bf:	mov    rdi,rax
  41d8c2:	call   405090 <memset@plt>
  41d8c7:	mov    rax,QWORD PTR [rbp-0x28]
  41d8cb:	mov    rdx,QWORD PTR [rax+0x88]
  41d8d2:	mov    rax,QWORD PTR [rbp-0x28]
  41d8d6:	mov    rax,QWORD PTR [rax+0x30]
  41d8da:	mov    eax,DWORD PTR [rax+0x14]
  41d8dd:	mov    eax,eax
  41d8df:	add    rax,rdx
  41d8e2:	mov    QWORD PTR [rbp-0x8],rax
  41d8e6:	mov    rax,QWORD PTR [rbp-0x28]
  41d8ea:	mov    rax,QWORD PTR [rax]
  41d8ed:	mov    rdx,rax
  41d8f0:	mov    rax,QWORD PTR [rbp-0x8]
  41d8f4:	sub    rdx,rax
  41d8f7:	mov    rax,rdx
  41d8fa:	sar    rax,1
  41d8fd:	mov    DWORD PTR [rbp-0x18],eax
  41d900:	mov    rax,QWORD PTR [rbp-0x28]
  41d904:	movzx  eax,WORD PTR [rax+0xea]
  41d90b:	movzx  edx,ax
  41d90e:	mov    rax,QWORD PTR [rbp-0x28]
  41d912:	mov    eax,DWORD PTR [rax+0x20]
  41d915:	mov    r10d,eax
  41d918:	mov    rax,QWORD PTR [rbp-0x28]
  41d91c:	mov    rsi,QWORD PTR [rax+0x18]
  41d920:	mov    r8d,DWORD PTR [rbp-0x18]
  41d924:	mov    rdi,QWORD PTR [rbp-0x8]
  41d928:	mov    rax,QWORD PTR [rbp-0x28]
  41d92c:	sub    rsp,0x8
  41d930:	mov    ecx,DWORD PTR [rbp-0x1c]
  41d933:	push   rcx
  41d934:	mov    r9d,r8d
  41d937:	mov    r8,rdi
  41d93a:	mov    ecx,edx
  41d93c:	mov    rdx,r10
  41d93f:	mov    rdi,rax
  41d942:	call   41d206 <flatcc_builder_create_table@@Base>
  41d947:	add    rsp,0x10
  41d94b:	mov    DWORD PTR [rbp-0x14],eax
  41d94e:	cmp    DWORD PTR [rbp-0x14],0x0
  41d952:	jne    41d95b <flatcc_builder_end_table@@Base+0x190>
  41d954:	mov    eax,0x0
  41d959:	jmp    41d9d2 <flatcc_builder_end_table@@Base+0x207>
  41d95b:	mov    rax,QWORD PTR [rbp-0x28]
  41d95f:	mov    rax,QWORD PTR [rax+0x30]
  41d963:	mov    edx,DWORD PTR [rax+0x18]
  41d966:	mov    rax,QWORD PTR [rbp-0x28]
  41d96a:	mov    DWORD PTR [rax+0x14],edx
  41d96d:	mov    rax,QWORD PTR [rbp-0x28]
  41d971:	mov    rax,QWORD PTR [rax+0x30]
  41d975:	movzx  edx,WORD PTR [rax+0x1c]
  41d979:	mov    rax,QWORD PTR [rbp-0x28]
  41d97d:	mov    WORD PTR [rax+0x10],dx
  41d981:	mov    rax,QWORD PTR [rbp-0x28]
  41d985:	mov    rdx,QWORD PTR [rax+0x58]
  41d989:	mov    rax,QWORD PTR [rbp-0x28]
  41d98d:	mov    rax,QWORD PTR [rax+0x30]
  41d991:	mov    eax,DWORD PTR [rax+0x10]
  41d994:	mov    eax,eax
  41d996:	add    rdx,rax
  41d999:	mov    rax,QWORD PTR [rbp-0x28]
  41d99d:	mov    QWORD PTR [rax+0x8],rdx
  41d9a1:	mov    rax,QWORD PTR [rbp-0x28]
  41d9a5:	mov    rdx,QWORD PTR [rax+0x88]
  41d9ac:	mov    rax,QWORD PTR [rbp-0x28]
  41d9b0:	mov    rax,QWORD PTR [rax+0x30]
  41d9b4:	mov    eax,DWORD PTR [rax+0x14]
  41d9b7:	mov    eax,eax
  41d9b9:	add    rdx,rax
  41d9bc:	mov    rax,QWORD PTR [rbp-0x28]
  41d9c0:	mov    QWORD PTR [rax],rdx
  41d9c3:	mov    rax,QWORD PTR [rbp-0x28]
  41d9c7:	mov    rdi,rax
  41d9ca:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41d9cf:	mov    eax,DWORD PTR [rbp-0x14]
  41d9d2:	leave  
  41d9d3:	ret    

000000000041d9d4 <flatcc_builder_create_vector@@Base>:
  41d9d4:	push   rbp
  41d9d5:	mov    rbp,rsp
  41d9d8:	sub    rsp,0xe0
  41d9df:	mov    QWORD PTR [rbp-0xb8],rdi
  41d9e6:	mov    QWORD PTR [rbp-0xc0],rsi
  41d9ed:	mov    QWORD PTR [rbp-0xc8],rdx
  41d9f4:	mov    QWORD PTR [rbp-0xd0],rcx
  41d9fb:	mov    eax,r8d
  41d9fe:	mov    QWORD PTR [rbp-0xe0],r9
  41da05:	mov    WORD PTR [rbp-0xd4],ax
  41da0c:	mov    rax,QWORD PTR fs:0x28
  41da15:	mov    QWORD PTR [rbp-0x8],rax
  41da19:	xor    eax,eax
  41da1b:	mov    rax,QWORD PTR [rbp-0xc8]
  41da22:	cmp    rax,QWORD PTR [rbp-0xe0]
  41da29:	jbe    41da64 <flatcc_builder_create_vector@@Base+0x90>
  41da2b:	mov    rax,QWORD PTR [rbp-0xc8]
  41da32:	cmp    rax,QWORD PTR [rbp-0xe0]
  41da39:	jbe    41da5a <flatcc_builder_create_vector@@Base+0x86>
  41da3b:	lea    rcx,[rip+0x1b24e]        # 438c90 <flatcc_builder_padding_base@@Base+0xa30>
  41da42:	mov    edx,0x555
  41da47:	lea    rsi,[rip+0x1aa12]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41da4e:	lea    rdi,[rip+0x1ad0e]        # 438763 <flatcc_builder_padding_base@@Base+0x503>
  41da55:	call   405080 <__assert_fail@plt>
  41da5a:	mov    eax,0x0
  41da5f:	jmp    41dc4f <flatcc_builder_create_vector@@Base+0x27b>
  41da64:	lea    rax,[rbp-0xd4]
  41da6b:	mov    esi,0x4
  41da70:	mov    rdi,rax
  41da73:	call   41adb5 <flatcc_builder_clear@@Base+0xc7>
  41da78:	movzx  eax,WORD PTR [rbp-0xd4]
  41da7f:	movzx  edx,ax
  41da82:	mov    rax,QWORD PTR [rbp-0xb8]
  41da89:	mov    esi,edx
  41da8b:	mov    rdi,rax
  41da8e:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41da93:	mov    rax,QWORD PTR [rbp-0xc8]
  41da9a:	mov    edx,eax
  41da9c:	mov    rax,QWORD PTR [rbp-0xd0]
  41daa3:	imul   eax,edx
  41daa6:	mov    DWORD PTR [rbp-0xa8],eax
  41daac:	mov    rax,QWORD PTR [rbp-0xc8]
  41dab3:	mov    edi,eax
  41dab5:	call   41a074 <main@@Base+0x9f9>
  41daba:	mov    DWORD PTR [rbp-0xac],eax
  41dac0:	movzx  eax,WORD PTR [rbp-0xd4]
  41dac7:	movzx  edx,ax
  41daca:	mov    ecx,DWORD PTR [rbp-0xa8]
  41dad0:	mov    rax,QWORD PTR [rbp-0xb8]
  41dad7:	mov    esi,ecx
  41dad9:	mov    rdi,rax
  41dadc:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41dae1:	mov    DWORD PTR [rbp-0xa4],eax
  41dae7:	mov    QWORD PTR [rbp-0xa0],0x0
  41daf2:	mov    DWORD PTR [rbp-0x98],0x0
  41dafc:	mov    rax,QWORD PTR [rbp-0xa0]
  41db03:	add    rax,0x4
  41db07:	mov    QWORD PTR [rbp-0xa0],rax
  41db0e:	mov    eax,DWORD PTR [rbp-0x98]
  41db14:	cdqe   
  41db16:	shl    rax,0x4
  41db1a:	add    rax,rbp
  41db1d:	lea    rdx,[rax-0x90]
  41db24:	lea    rax,[rbp-0xac]
  41db2b:	mov    QWORD PTR [rdx],rax
  41db2e:	mov    eax,DWORD PTR [rbp-0x98]
  41db34:	cdqe   
  41db36:	shl    rax,0x4
  41db3a:	add    rax,rbp
  41db3d:	sub    rax,0x88
  41db43:	mov    QWORD PTR [rax],0x4
  41db4a:	mov    eax,DWORD PTR [rbp-0x98]
  41db50:	add    eax,0x1
  41db53:	mov    DWORD PTR [rbp-0x98],eax
  41db59:	cmp    DWORD PTR [rbp-0xa8],0x0
  41db60:	je     41dbc8 <flatcc_builder_create_vector@@Base+0x1f4>
  41db62:	mov    rdx,QWORD PTR [rbp-0xa0]
  41db69:	mov    eax,DWORD PTR [rbp-0xa8]
  41db6f:	add    rax,rdx
  41db72:	mov    QWORD PTR [rbp-0xa0],rax
  41db79:	mov    eax,DWORD PTR [rbp-0x98]
  41db7f:	cdqe   
  41db81:	shl    rax,0x4
  41db85:	add    rax,rbp
  41db88:	lea    rdx,[rax-0x90]
  41db8f:	mov    rax,QWORD PTR [rbp-0xc0]
  41db96:	mov    QWORD PTR [rdx],rax
  41db99:	mov    edx,DWORD PTR [rbp-0x98]
  41db9f:	mov    eax,DWORD PTR [rbp-0xa8]
  41dba5:	movsxd rdx,edx
  41dba8:	shl    rdx,0x4
  41dbac:	add    rdx,rbp
  41dbaf:	sub    rdx,0x88
  41dbb6:	mov    QWORD PTR [rdx],rax
  41dbb9:	mov    eax,DWORD PTR [rbp-0x98]
  41dbbf:	add    eax,0x1
  41dbc2:	mov    DWORD PTR [rbp-0x98],eax
  41dbc8:	cmp    DWORD PTR [rbp-0xa4],0x0
  41dbcf:	je     41dc36 <flatcc_builder_create_vector@@Base+0x262>
  41dbd1:	mov    rdx,QWORD PTR [rbp-0xa0]
  41dbd8:	mov    eax,DWORD PTR [rbp-0xa4]
  41dbde:	add    rax,rdx
  41dbe1:	mov    QWORD PTR [rbp-0xa0],rax
  41dbe8:	mov    eax,DWORD PTR [rbp-0x98]
  41dbee:	cdqe   
  41dbf0:	shl    rax,0x4
  41dbf4:	add    rax,rbp
  41dbf7:	sub    rax,0x90
  41dbfd:	mov    rdx,0x438260
  41dc04:	mov    QWORD PTR [rax],rdx
  41dc07:	mov    edx,DWORD PTR [rbp-0x98]
  41dc0d:	mov    eax,DWORD PTR [rbp-0xa4]
  41dc13:	movsxd rdx,edx
  41dc16:	shl    rdx,0x4
  41dc1a:	add    rdx,rbp
  41dc1d:	sub    rdx,0x88
  41dc24:	mov    QWORD PTR [rdx],rax
  41dc27:	mov    eax,DWORD PTR [rbp-0x98]
  41dc2d:	add    eax,0x1
  41dc30:	mov    DWORD PTR [rbp-0x98],eax
  41dc36:	lea    rdx,[rbp-0xa0]
  41dc3d:	mov    rax,QWORD PTR [rbp-0xb8]
  41dc44:	mov    rsi,rdx
  41dc47:	mov    rdi,rax
  41dc4a:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41dc4f:	mov    rcx,QWORD PTR [rbp-0x8]
  41dc53:	xor    rcx,QWORD PTR fs:0x28
  41dc5c:	je     41dc63 <flatcc_builder_create_vector@@Base+0x28f>
  41dc5e:	call   405070 <__stack_chk_fail@plt>
  41dc63:	leave  
  41dc64:	ret    

000000000041dc65 <flatcc_builder_end_vector@@Base>:
  41dc65:	push   rbp
  41dc66:	mov    rbp,rsp
  41dc69:	sub    rsp,0x20
  41dc6d:	mov    QWORD PTR [rbp-0x18],rdi
  41dc71:	mov    rax,QWORD PTR [rbp-0x18]
  41dc75:	mov    rax,QWORD PTR [rax+0x30]
  41dc79:	movzx  eax,WORD PTR [rax+0xe]
  41dc7d:	cmp    ax,0x4
  41dc81:	je     41dca2 <flatcc_builder_end_vector@@Base+0x3d>
  41dc83:	lea    rcx,[rip+0x1b026]        # 438cb0 <flatcc_builder_padding_base@@Base+0xa50>
  41dc8a:	mov    edx,0x578
  41dc8f:	lea    rsi,[rip+0x1a7ca]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41dc96:	lea    rdi,[rip+0x1a90b]        # 4385a8 <flatcc_builder_padding_base@@Base+0x348>
  41dc9d:	call   405080 <__assert_fail@plt>
  41dca2:	mov    rax,QWORD PTR [rbp-0x18]
  41dca6:	mov    rax,QWORD PTR [rax+0x30]
  41dcaa:	mov    eax,DWORD PTR [rax+0x18]
  41dcad:	mov    r8d,eax
  41dcb0:	mov    rax,QWORD PTR [rbp-0x18]
  41dcb4:	movzx  eax,WORD PTR [rax+0xea]
  41dcbb:	movzx  edx,ax
  41dcbe:	mov    rax,QWORD PTR [rbp-0x18]
  41dcc2:	mov    rax,QWORD PTR [rax+0x30]
  41dcc6:	mov    eax,DWORD PTR [rax+0x10]
  41dcc9:	mov    ecx,eax
  41dccb:	mov    rax,QWORD PTR [rbp-0x18]
  41dccf:	mov    rax,QWORD PTR [rax+0x30]
  41dcd3:	mov    eax,DWORD PTR [rax+0x14]
  41dcd6:	mov    edi,eax
  41dcd8:	mov    rax,QWORD PTR [rbp-0x18]
  41dcdc:	mov    rsi,QWORD PTR [rax+0x18]
  41dce0:	mov    rax,QWORD PTR [rbp-0x18]
  41dce4:	mov    r9,r8
  41dce7:	mov    r8d,edx
  41dcea:	mov    rdx,rdi
  41dced:	mov    rdi,rax
  41dcf0:	call   41d9d4 <flatcc_builder_create_vector@@Base>
  41dcf5:	mov    DWORD PTR [rbp-0x4],eax
  41dcf8:	cmp    DWORD PTR [rbp-0x4],0x0
  41dcfc:	jne    41dd05 <flatcc_builder_end_vector@@Base+0xa0>
  41dcfe:	mov    eax,0x0
  41dd03:	jmp    41dd14 <flatcc_builder_end_vector@@Base+0xaf>
  41dd05:	mov    rax,QWORD PTR [rbp-0x18]
  41dd09:	mov    rdi,rax
  41dd0c:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41dd11:	mov    eax,DWORD PTR [rbp-0x4]
  41dd14:	leave  
  41dd15:	ret    

000000000041dd16 <flatcc_builder_vector_count@@Base>:
  41dd16:	push   rbp
  41dd17:	mov    rbp,rsp
  41dd1a:	mov    QWORD PTR [rbp-0x8],rdi
  41dd1e:	mov    rax,QWORD PTR [rbp-0x8]
  41dd22:	mov    rax,QWORD PTR [rax+0x30]
  41dd26:	mov    eax,DWORD PTR [rax+0x14]
  41dd29:	mov    eax,eax
  41dd2b:	pop    rbp
  41dd2c:	ret    

000000000041dd2d <flatcc_builder_vector_edit@@Base>:
  41dd2d:	push   rbp
  41dd2e:	mov    rbp,rsp
  41dd31:	mov    QWORD PTR [rbp-0x8],rdi
  41dd35:	mov    rax,QWORD PTR [rbp-0x8]
  41dd39:	mov    rax,QWORD PTR [rax+0x18]
  41dd3d:	pop    rbp
  41dd3e:	ret    
  41dd3f:	push   rbp
  41dd40:	mov    rbp,rsp
  41dd43:	push   rbx
  41dd44:	sub    rsp,0xe8
  41dd4b:	mov    QWORD PTR [rbp-0xd8],rdi
  41dd52:	mov    QWORD PTR [rbp-0xe0],rsi
  41dd59:	mov    QWORD PTR [rbp-0xe8],rdx
  41dd60:	mov    QWORD PTR [rbp-0xf0],rcx
  41dd67:	mov    rax,QWORD PTR fs:0x28
  41dd70:	mov    QWORD PTR [rbp-0x18],rax
  41dd74:	xor    eax,eax
  41dd76:	mov    rax,QWORD PTR [rbp-0xe8]
  41dd7d:	cmp    eax,0x3fffffff
  41dd82:	jbe    41dd8e <flatcc_builder_vector_edit@@Base+0x61>
  41dd84:	mov    eax,0x0
  41dd89:	jmp    41e0d2 <flatcc_builder_vector_edit@@Base+0x3a5>
  41dd8e:	mov    rax,QWORD PTR [rbp-0xd8]
  41dd95:	mov    esi,0x4
  41dd9a:	mov    rdi,rax
  41dd9d:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41dda2:	mov    rax,QWORD PTR [rbp-0xe8]
  41dda9:	shl    eax,0x2
  41ddac:	mov    DWORD PTR [rbp-0xc0],eax
  41ddb2:	mov    rax,QWORD PTR [rbp-0xe8]
  41ddb9:	mov    edi,eax
  41ddbb:	call   41a074 <main@@Base+0x9f9>
  41ddc0:	mov    DWORD PTR [rbp-0xc8],eax
  41ddc6:	mov    ecx,DWORD PTR [rbp-0xc0]
  41ddcc:	mov    rax,QWORD PTR [rbp-0xd8]
  41ddd3:	mov    edx,0x4
  41ddd8:	mov    esi,ecx
  41ddda:	mov    rdi,rax
  41dddd:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41dde2:	mov    DWORD PTR [rbp-0xbc],eax
  41dde8:	mov    QWORD PTR [rbp-0xb0],0x0
  41ddf3:	mov    DWORD PTR [rbp-0xa8],0x0
  41ddfd:	mov    rax,QWORD PTR [rbp-0xb0]
  41de04:	add    rax,0x4
  41de08:	mov    QWORD PTR [rbp-0xb0],rax
  41de0f:	mov    eax,DWORD PTR [rbp-0xa8]
  41de15:	cdqe   
  41de17:	shl    rax,0x4
  41de1b:	lea    rbx,[rbp-0x10]
  41de1f:	add    rax,rbx
  41de22:	lea    rdx,[rax-0x90]
  41de29:	lea    rax,[rbp-0xc8]
  41de30:	mov    QWORD PTR [rdx],rax
  41de33:	mov    eax,DWORD PTR [rbp-0xa8]
  41de39:	cdqe   
  41de3b:	shl    rax,0x4
  41de3f:	lea    rbx,[rbp-0x10]
  41de43:	add    rax,rbx
  41de46:	sub    rax,0x88
  41de4c:	mov    QWORD PTR [rax],0x4
  41de53:	mov    eax,DWORD PTR [rbp-0xa8]
  41de59:	add    eax,0x1
  41de5c:	mov    DWORD PTR [rbp-0xa8],eax
  41de62:	cmp    DWORD PTR [rbp-0xc0],0x0
  41de69:	je     41ded9 <flatcc_builder_vector_edit@@Base+0x1ac>
  41de6b:	mov    rdx,QWORD PTR [rbp-0xb0]
  41de72:	mov    eax,DWORD PTR [rbp-0xc0]
  41de78:	add    rax,rdx
  41de7b:	mov    QWORD PTR [rbp-0xb0],rax
  41de82:	mov    eax,DWORD PTR [rbp-0xa8]
  41de88:	cdqe   
  41de8a:	shl    rax,0x4
  41de8e:	lea    rcx,[rbp-0x10]
  41de92:	add    rax,rcx
  41de95:	lea    rdx,[rax-0x90]
  41de9c:	mov    rax,QWORD PTR [rbp-0xe0]
  41dea3:	mov    QWORD PTR [rdx],rax
  41dea6:	mov    edx,DWORD PTR [rbp-0xa8]
  41deac:	mov    eax,DWORD PTR [rbp-0xc0]
  41deb2:	movsxd rdx,edx
  41deb5:	shl    rdx,0x4
  41deb9:	lea    rbx,[rbp-0x10]
  41debd:	add    rdx,rbx
  41dec0:	sub    rdx,0x88
  41dec7:	mov    QWORD PTR [rdx],rax
  41deca:	mov    eax,DWORD PTR [rbp-0xa8]
  41ded0:	add    eax,0x1
  41ded3:	mov    DWORD PTR [rbp-0xa8],eax
  41ded9:	cmp    DWORD PTR [rbp-0xbc],0x0
  41dee0:	je     41df4f <flatcc_builder_vector_edit@@Base+0x222>
  41dee2:	mov    rdx,QWORD PTR [rbp-0xb0]
  41dee9:	mov    eax,DWORD PTR [rbp-0xbc]
  41deef:	add    rax,rdx
  41def2:	mov    QWORD PTR [rbp-0xb0],rax
  41def9:	mov    eax,DWORD PTR [rbp-0xa8]
  41deff:	cdqe   
  41df01:	shl    rax,0x4
  41df05:	lea    rsi,[rbp-0x10]
  41df09:	add    rax,rsi
  41df0c:	sub    rax,0x90
  41df12:	mov    rdx,0x438260
  41df19:	mov    QWORD PTR [rax],rdx
  41df1c:	mov    edx,DWORD PTR [rbp-0xa8]
  41df22:	mov    eax,DWORD PTR [rbp-0xbc]
  41df28:	movsxd rdx,edx
  41df2b:	shl    rdx,0x4
  41df2f:	lea    rcx,[rbp-0x10]
  41df33:	add    rdx,rcx
  41df36:	sub    rdx,0x88
  41df3d:	mov    QWORD PTR [rdx],rax
  41df40:	mov    eax,DWORD PTR [rbp-0xa8]
  41df46:	add    eax,0x1
  41df49:	mov    DWORD PTR [rbp-0xa8],eax
  41df4f:	mov    rax,QWORD PTR [rbp-0xd8]
  41df56:	mov    eax,DWORD PTR [rax+0xf0]
  41df5c:	mov    edx,eax
  41df5e:	mov    rax,QWORD PTR [rbp-0xb0]
  41df65:	sub    edx,eax
  41df67:	mov    eax,edx
  41df69:	mov    DWORD PTR [rbp-0xb8],eax
  41df6f:	mov    DWORD PTR [rbp-0xc4],0x0
  41df79:	jmp    41e0a6 <flatcc_builder_vector_edit@@Base+0x379>
  41df7e:	mov    eax,DWORD PTR [rbp-0xc4]
  41df84:	lea    rdx,[rax*4+0x0]
  41df8c:	mov    rax,QWORD PTR [rbp-0xe0]
  41df93:	add    rax,rdx
  41df96:	mov    eax,DWORD PTR [rax]
  41df98:	test   eax,eax
  41df9a:	je     41e040 <flatcc_builder_vector_edit@@Base+0x313>
  41dfa0:	mov    eax,DWORD PTR [rbp-0xc4]
  41dfa6:	lea    rdx,[rax*4+0x0]
  41dfae:	mov    rax,QWORD PTR [rbp-0xe0]
  41dfb5:	add    rax,rdx
  41dfb8:	mov    eax,DWORD PTR [rax]
  41dfba:	sub    eax,DWORD PTR [rbp-0xb8]
  41dfc0:	mov    edx,DWORD PTR [rbp-0xc4]
  41dfc6:	shl    edx,0x2
  41dfc9:	sub    eax,edx
  41dfcb:	sub    eax,0x4
  41dfce:	mov    DWORD PTR [rbp-0xb4],eax
  41dfd4:	mov    eax,DWORD PTR [rbp-0xc4]
  41dfda:	lea    rdx,[rax*4+0x0]
  41dfe2:	mov    rax,QWORD PTR [rbp-0xe0]
  41dfe9:	lea    rbx,[rdx+rax*1]
  41dfed:	mov    eax,DWORD PTR [rbp-0xb4]
  41dff3:	mov    edi,eax
  41dff5:	call   41a074 <main@@Base+0x9f9>
  41dffa:	mov    DWORD PTR [rbx],eax
  41dffc:	cmp    QWORD PTR [rbp-0xf0],0x0
  41e004:	je     41e09f <flatcc_builder_vector_edit@@Base+0x372>
  41e00a:	mov    edx,DWORD PTR [rbp-0xc4]
  41e010:	mov    rax,QWORD PTR [rbp-0xf0]
  41e017:	add    rax,rdx
  41e01a:	movzx  eax,BYTE PTR [rax]
  41e01d:	test   al,al
  41e01f:	jne    41e09f <flatcc_builder_vector_edit@@Base+0x372>
  41e021:	lea    rcx,[rip+0x1aca8]        # 438cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41e028:	mov    edx,0x5b1
  41e02d:	lea    rsi,[rip+0x1a42c]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e034:	lea    rdi,[rip+0x1a73b]        # 438776 <flatcc_builder_padding_base@@Base+0x516>
  41e03b:	call   405080 <__assert_fail@plt>
  41e040:	cmp    QWORD PTR [rbp-0xf0],0x0
  41e048:	je     41e080 <flatcc_builder_vector_edit@@Base+0x353>
  41e04a:	mov    edx,DWORD PTR [rbp-0xc4]
  41e050:	mov    rax,QWORD PTR [rbp-0xf0]
  41e057:	add    rax,rdx
  41e05a:	movzx  eax,BYTE PTR [rax]
  41e05d:	test   al,al
  41e05f:	je     41e09f <flatcc_builder_vector_edit@@Base+0x372>
  41e061:	lea    rcx,[rip+0x1ac68]        # 438cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41e068:	mov    edx,0x5b5
  41e06d:	lea    rsi,[rip+0x1a3ec]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e074:	lea    rdi,[rip+0x1a709]        # 438784 <flatcc_builder_padding_base@@Base+0x524>
  41e07b:	call   405080 <__assert_fail@plt>
  41e080:	lea    rcx,[rip+0x1ac49]        # 438cd0 <flatcc_builder_padding_base@@Base+0xa70>
  41e087:	mov    edx,0x5b7
  41e08c:	lea    rsi,[rip+0x1a3cd]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e093:	lea    rdi,[rip+0x1a426]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41e09a:	call   405080 <__assert_fail@plt>
  41e09f:	add    DWORD PTR [rbp-0xc4],0x1
  41e0a6:	mov    rax,QWORD PTR [rbp-0xe8]
  41e0ad:	cmp    eax,DWORD PTR [rbp-0xc4]
  41e0b3:	ja     41df7e <flatcc_builder_vector_edit@@Base+0x251>
  41e0b9:	lea    rdx,[rbp-0xb0]
  41e0c0:	mov    rax,QWORD PTR [rbp-0xd8]
  41e0c7:	mov    rsi,rdx
  41e0ca:	mov    rdi,rax
  41e0cd:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41e0d2:	mov    rbx,QWORD PTR [rbp-0x18]
  41e0d6:	xor    rbx,QWORD PTR fs:0x28
  41e0df:	je     41e0e6 <flatcc_builder_vector_edit@@Base+0x3b9>
  41e0e1:	call   405070 <__stack_chk_fail@plt>
  41e0e6:	add    rsp,0xe8
  41e0ed:	pop    rbx
  41e0ee:	pop    rbp
  41e0ef:	ret    

000000000041e0f0 <flatcc_builder_create_offset_vector_direct@@Base>:
  41e0f0:	push   rbp
  41e0f1:	mov    rbp,rsp
  41e0f4:	sub    rsp,0x20
  41e0f8:	mov    QWORD PTR [rbp-0x8],rdi
  41e0fc:	mov    QWORD PTR [rbp-0x10],rsi
  41e100:	mov    QWORD PTR [rbp-0x18],rdx
  41e104:	mov    rdx,QWORD PTR [rbp-0x18]
  41e108:	mov    rsi,QWORD PTR [rbp-0x10]
  41e10c:	mov    rax,QWORD PTR [rbp-0x8]
  41e110:	mov    ecx,0x0
  41e115:	mov    rdi,rax
  41e118:	call   41dd3f <flatcc_builder_vector_edit@@Base+0x12>
  41e11d:	leave  
  41e11e:	ret    

000000000041e11f <flatcc_builder_end_offset_vector@@Base>:
  41e11f:	push   rbp
  41e120:	mov    rbp,rsp
  41e123:	sub    rsp,0x20
  41e127:	mov    QWORD PTR [rbp-0x18],rdi
  41e12b:	mov    rax,QWORD PTR [rbp-0x18]
  41e12f:	mov    rax,QWORD PTR [rax+0x30]
  41e133:	movzx  eax,WORD PTR [rax+0xe]
  41e137:	cmp    ax,0x5
  41e13b:	je     41e15c <flatcc_builder_end_offset_vector@@Base+0x3d>
  41e13d:	lea    rcx,[rip+0x1abbc]        # 438d00 <flatcc_builder_padding_base@@Base+0xaa0>
  41e144:	mov    edx,0x5c8
  41e149:	lea    rsi,[rip+0x1a310]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e150:	lea    rdi,[rip+0x1a4c1]        # 438618 <flatcc_builder_padding_base@@Base+0x3b8>
  41e157:	call   405080 <__assert_fail@plt>
  41e15c:	mov    rax,QWORD PTR [rbp-0x18]
  41e160:	mov    rax,QWORD PTR [rax+0x30]
  41e164:	mov    eax,DWORD PTR [rax+0x14]
  41e167:	mov    edx,eax
  41e169:	mov    rax,QWORD PTR [rbp-0x18]
  41e16d:	mov    rcx,QWORD PTR [rax+0x18]
  41e171:	mov    rax,QWORD PTR [rbp-0x18]
  41e175:	mov    rsi,rcx
  41e178:	mov    rdi,rax
  41e17b:	call   41e0f0 <flatcc_builder_create_offset_vector_direct@@Base>
  41e180:	mov    DWORD PTR [rbp-0x4],eax
  41e183:	cmp    DWORD PTR [rbp-0x4],0x0
  41e187:	jne    41e190 <flatcc_builder_end_offset_vector@@Base+0x71>
  41e189:	mov    eax,0x0
  41e18e:	jmp    41e19f <flatcc_builder_end_offset_vector@@Base+0x80>
  41e190:	mov    rax,QWORD PTR [rbp-0x18]
  41e194:	mov    rdi,rax
  41e197:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41e19c:	mov    eax,DWORD PTR [rbp-0x4]
  41e19f:	leave  
  41e1a0:	ret    

000000000041e1a1 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41e1a1:	push   rbp
  41e1a2:	mov    rbp,rsp
  41e1a5:	sub    rsp,0x20
  41e1a9:	mov    QWORD PTR [rbp-0x18],rdi
  41e1ad:	mov    QWORD PTR [rbp-0x20],rsi
  41e1b1:	mov    rax,QWORD PTR [rbp-0x18]
  41e1b5:	mov    rax,QWORD PTR [rax+0x30]
  41e1b9:	movzx  eax,WORD PTR [rax+0xe]
  41e1bd:	cmp    ax,0x5
  41e1c1:	je     41e1e2 <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  41e1c3:	lea    rcx,[rip+0x1ab76]        # 438d40 <flatcc_builder_padding_base@@Base+0xae0>
  41e1ca:	mov    edx,0x5d5
  41e1cf:	lea    rsi,[rip+0x1a28a]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e1d6:	lea    rdi,[rip+0x1a43b]        # 438618 <flatcc_builder_padding_base@@Base+0x3b8>
  41e1dd:	call   405080 <__assert_fail@plt>
  41e1e2:	mov    rax,QWORD PTR [rbp-0x18]
  41e1e6:	mov    rax,QWORD PTR [rax+0x30]
  41e1ea:	mov    eax,DWORD PTR [rax+0x14]
  41e1ed:	mov    edi,eax
  41e1ef:	mov    rax,QWORD PTR [rbp-0x18]
  41e1f3:	mov    rsi,QWORD PTR [rax+0x18]
  41e1f7:	mov    rdx,QWORD PTR [rbp-0x20]
  41e1fb:	mov    rax,QWORD PTR [rbp-0x18]
  41e1ff:	mov    rcx,rdx
  41e202:	mov    rdx,rdi
  41e205:	mov    rdi,rax
  41e208:	call   41dd3f <flatcc_builder_vector_edit@@Base+0x12>
  41e20d:	mov    DWORD PTR [rbp-0x4],eax
  41e210:	cmp    DWORD PTR [rbp-0x4],0x0
  41e214:	jne    41e21d <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  41e216:	mov    eax,0x0
  41e21b:	jmp    41e22c <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  41e21d:	mov    rax,QWORD PTR [rbp-0x18]
  41e221:	mov    rdi,rax
  41e224:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41e229:	mov    eax,DWORD PTR [rbp-0x4]
  41e22c:	leave  
  41e22d:	ret    

000000000041e22e <flatcc_builder_offset_vector_edit@@Base>:
  41e22e:	push   rbp
  41e22f:	mov    rbp,rsp
  41e232:	mov    QWORD PTR [rbp-0x8],rdi
  41e236:	mov    rax,QWORD PTR [rbp-0x8]
  41e23a:	mov    rax,QWORD PTR [rax+0x18]
  41e23e:	pop    rbp
  41e23f:	ret    

000000000041e240 <flatcc_builder_offset_vector_count@@Base>:
  41e240:	push   rbp
  41e241:	mov    rbp,rsp
  41e244:	mov    QWORD PTR [rbp-0x8],rdi
  41e248:	mov    rax,QWORD PTR [rbp-0x8]
  41e24c:	mov    rax,QWORD PTR [rax+0x30]
  41e250:	mov    eax,DWORD PTR [rax+0x14]
  41e253:	mov    eax,eax
  41e255:	pop    rbp
  41e256:	ret    

000000000041e257 <flatcc_builder_table_add_union@@Base>:
  41e257:	push   rbp
  41e258:	mov    rbp,rsp
  41e25b:	sub    rsp,0x30
  41e25f:	mov    QWORD PTR [rbp-0x18],rdi
  41e263:	mov    DWORD PTR [rbp-0x1c],esi
  41e266:	mov    QWORD PTR [rbp-0x24],rdx
  41e26a:	mov    rax,QWORD PTR [rbp-0x18]
  41e26e:	mov    rax,QWORD PTR [rax+0x30]
  41e272:	movzx  eax,WORD PTR [rax+0xe]
  41e276:	cmp    ax,0x3
  41e27a:	je     41e29b <flatcc_builder_table_add_union@@Base+0x44>
  41e27c:	lea    rcx,[rip+0x1aaed]        # 438d70 <flatcc_builder_padding_base@@Base+0xb10>
  41e283:	mov    edx,0x5ee
  41e288:	lea    rsi,[rip+0x1a1d1]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e28f:	lea    rdi,[rip+0x1a4a2]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41e296:	call   405080 <__assert_fail@plt>
  41e29b:	movzx  eax,BYTE PTR [rbp-0x24]
  41e29f:	test   al,al
  41e2a1:	jne    41e2e2 <flatcc_builder_table_add_union@@Base+0x8b>
  41e2a3:	mov    eax,DWORD PTR [rbp-0x20]
  41e2a6:	test   eax,eax
  41e2a8:	je     41e2e2 <flatcc_builder_table_add_union@@Base+0x8b>
  41e2aa:	movzx  eax,BYTE PTR [rbp-0x24]
  41e2ae:	test   al,al
  41e2b0:	jne    41e2d8 <flatcc_builder_table_add_union@@Base+0x81>
  41e2b2:	mov    eax,DWORD PTR [rbp-0x20]
  41e2b5:	test   eax,eax
  41e2b7:	je     41e2d8 <flatcc_builder_table_add_union@@Base+0x81>
  41e2b9:	lea    rcx,[rip+0x1aab0]        # 438d70 <flatcc_builder_padding_base@@Base+0xb10>
  41e2c0:	mov    edx,0x5ef
  41e2c5:	lea    rsi,[rip+0x1a194]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e2cc:	lea    rdi,[rip+0x1a4c5]        # 438798 <flatcc_builder_padding_base@@Base+0x538>
  41e2d3:	call   405080 <__assert_fail@plt>
  41e2d8:	mov    eax,0xffffffff
  41e2dd:	jmp    41e3aa <flatcc_builder_table_add_union@@Base+0x153>
  41e2e2:	mov    eax,DWORD PTR [rbp-0x20]
  41e2e5:	test   eax,eax
  41e2e7:	je     41e33b <flatcc_builder_table_add_union@@Base+0xe4>
  41e2e9:	mov    edx,DWORD PTR [rbp-0x1c]
  41e2ec:	mov    rax,QWORD PTR [rbp-0x18]
  41e2f0:	mov    esi,edx
  41e2f2:	mov    rdi,rax
  41e2f5:	call   41effb <flatcc_builder_table_add_offset@@Base>
  41e2fa:	mov    QWORD PTR [rbp-0x10],rax
  41e2fe:	cmp    QWORD PTR [rbp-0x10],0x0
  41e303:	jne    41e332 <flatcc_builder_table_add_union@@Base+0xdb>
  41e305:	cmp    QWORD PTR [rbp-0x10],0x0
  41e30a:	jne    41e32b <flatcc_builder_table_add_union@@Base+0xd4>
  41e30c:	lea    rcx,[rip+0x1aa5d]        # 438d70 <flatcc_builder_padding_base@@Base+0xb10>
  41e313:	mov    edx,0x5f2
  41e318:	lea    rsi,[rip+0x1a141]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e31f:	lea    rdi,[rip+0x1a494]        # 4387ba <flatcc_builder_padding_base@@Base+0x55a>
  41e326:	call   405080 <__assert_fail@plt>
  41e32b:	mov    eax,0xffffffff
  41e330:	jmp    41e3aa <flatcc_builder_table_add_union@@Base+0x153>
  41e332:	mov    edx,DWORD PTR [rbp-0x20]
  41e335:	mov    rax,QWORD PTR [rbp-0x10]
  41e339:	mov    DWORD PTR [rax],edx
  41e33b:	mov    eax,DWORD PTR [rbp-0x1c]
  41e33e:	lea    esi,[rax-0x1]
  41e341:	mov    rax,QWORD PTR [rbp-0x18]
  41e345:	mov    ecx,0x1
  41e34a:	mov    edx,0x1
  41e34f:	mov    rdi,rax
  41e352:	call   41ee2d <flatcc_builder_table_add@@Base>
  41e357:	mov    QWORD PTR [rbp-0x8],rax
  41e35b:	cmp    QWORD PTR [rbp-0x8],0x0
  41e360:	jne    41e38f <flatcc_builder_table_add_union@@Base+0x138>
  41e362:	cmp    QWORD PTR [rbp-0x8],0x0
  41e367:	jne    41e388 <flatcc_builder_table_add_union@@Base+0x131>
  41e369:	lea    rcx,[rip+0x1aa00]        # 438d70 <flatcc_builder_padding_base@@Base+0xb10>
  41e370:	mov    edx,0x5f6
  41e375:	lea    rsi,[rip+0x1a0e4]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e37c:	lea    rdi,[rip+0x1a441]        # 4387c4 <flatcc_builder_padding_base@@Base+0x564>
  41e383:	call   405080 <__assert_fail@plt>
  41e388:	mov    eax,0xffffffff
  41e38d:	jmp    41e3aa <flatcc_builder_table_add_union@@Base+0x153>
  41e38f:	movzx  eax,BYTE PTR [rbp-0x24]
  41e393:	movzx  eax,al
  41e396:	mov    edi,eax
  41e398:	call   41a080 <main@@Base+0xa05>
  41e39d:	mov    edx,eax
  41e39f:	mov    rax,QWORD PTR [rbp-0x8]
  41e3a3:	mov    BYTE PTR [rax],dl
  41e3a5:	mov    eax,0x0
  41e3aa:	leave  
  41e3ab:	ret    

000000000041e3ac <flatcc_builder_table_add_union_vector@@Base>:
  41e3ac:	push   rbp
  41e3ad:	mov    rbp,rsp
  41e3b0:	sub    rsp,0x30
  41e3b4:	mov    QWORD PTR [rbp-0x18],rdi
  41e3b8:	mov    DWORD PTR [rbp-0x1c],esi
  41e3bb:	mov    QWORD PTR [rbp-0x24],rdx
  41e3bf:	mov    rax,QWORD PTR [rbp-0x18]
  41e3c3:	mov    rax,QWORD PTR [rax+0x30]
  41e3c7:	movzx  eax,WORD PTR [rax+0xe]
  41e3cb:	cmp    ax,0x3
  41e3cf:	je     41e3f0 <flatcc_builder_table_add_union_vector@@Base+0x44>
  41e3d1:	lea    rcx,[rip+0x1a9c8]        # 438da0 <flatcc_builder_padding_base@@Base+0xb40>
  41e3d8:	mov    edx,0x600
  41e3dd:	lea    rsi,[rip+0x1a07c]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e3e4:	lea    rdi,[rip+0x1a34d]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41e3eb:	call   405080 <__assert_fail@plt>
  41e3f0:	mov    eax,DWORD PTR [rbp-0x24]
  41e3f3:	test   eax,eax
  41e3f5:	sete   dl
  41e3f8:	mov    eax,DWORD PTR [rbp-0x20]
  41e3fb:	test   eax,eax
  41e3fd:	sete   al
  41e400:	xor    eax,edx
  41e402:	test   al,al
  41e404:	je     41e445 <flatcc_builder_table_add_union_vector@@Base+0x99>
  41e406:	mov    eax,DWORD PTR [rbp-0x24]
  41e409:	test   eax,eax
  41e40b:	setne  dl
  41e40e:	mov    eax,DWORD PTR [rbp-0x20]
  41e411:	test   eax,eax
  41e413:	sete   al
  41e416:	xor    eax,edx
  41e418:	test   al,al
  41e41a:	jne    41e43b <flatcc_builder_table_add_union_vector@@Base+0x8f>
  41e41c:	lea    rcx,[rip+0x1a97d]        # 438da0 <flatcc_builder_padding_base@@Base+0xb40>
  41e423:	mov    edx,0x601
  41e428:	lea    rsi,[rip+0x1a031]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e42f:	lea    rdi,[rip+0x1a39a]        # 4387d0 <flatcc_builder_padding_base@@Base+0x570>
  41e436:	call   405080 <__assert_fail@plt>
  41e43b:	mov    eax,0xffffffff
  41e440:	jmp    41e4fc <flatcc_builder_table_add_union_vector@@Base+0x150>
  41e445:	mov    eax,DWORD PTR [rbp-0x24]
  41e448:	test   eax,eax
  41e44a:	je     41e4f7 <flatcc_builder_table_add_union_vector@@Base+0x14b>
  41e450:	mov    eax,DWORD PTR [rbp-0x1c]
  41e453:	lea    edx,[rax-0x1]
  41e456:	mov    rax,QWORD PTR [rbp-0x18]
  41e45a:	mov    esi,edx
  41e45c:	mov    rdi,rax
  41e45f:	call   41effb <flatcc_builder_table_add_offset@@Base>
  41e464:	mov    QWORD PTR [rbp-0x8],rax
  41e468:	cmp    QWORD PTR [rbp-0x8],0x0
  41e46d:	jne    41e49c <flatcc_builder_table_add_union_vector@@Base+0xf0>
  41e46f:	cmp    QWORD PTR [rbp-0x8],0x0
  41e474:	jne    41e495 <flatcc_builder_table_add_union_vector@@Base+0xe9>
  41e476:	lea    rcx,[rip+0x1a923]        # 438da0 <flatcc_builder_padding_base@@Base+0xb40>
  41e47d:	mov    edx,0x604
  41e482:	lea    rsi,[rip+0x19fd7]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e489:	lea    rdi,[rip+0x1a32a]        # 4387ba <flatcc_builder_padding_base@@Base+0x55a>
  41e490:	call   405080 <__assert_fail@plt>
  41e495:	mov    eax,0xffffffff
  41e49a:	jmp    41e4fc <flatcc_builder_table_add_union_vector@@Base+0x150>
  41e49c:	mov    edx,DWORD PTR [rbp-0x24]
  41e49f:	mov    rax,QWORD PTR [rbp-0x8]
  41e4a3:	mov    DWORD PTR [rax],edx
  41e4a5:	mov    edx,DWORD PTR [rbp-0x1c]
  41e4a8:	mov    rax,QWORD PTR [rbp-0x18]
  41e4ac:	mov    esi,edx
  41e4ae:	mov    rdi,rax
  41e4b1:	call   41effb <flatcc_builder_table_add_offset@@Base>
  41e4b6:	mov    QWORD PTR [rbp-0x8],rax
  41e4ba:	cmp    QWORD PTR [rbp-0x8],0x0
  41e4bf:	jne    41e4ee <flatcc_builder_table_add_union_vector@@Base+0x142>
  41e4c1:	cmp    QWORD PTR [rbp-0x8],0x0
  41e4c6:	jne    41e4e7 <flatcc_builder_table_add_union_vector@@Base+0x13b>
  41e4c8:	lea    rcx,[rip+0x1a8d1]        # 438da0 <flatcc_builder_padding_base@@Base+0xb40>
  41e4cf:	mov    edx,0x608
  41e4d4:	lea    rsi,[rip+0x19f85]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e4db:	lea    rdi,[rip+0x1a2d8]        # 4387ba <flatcc_builder_padding_base@@Base+0x55a>
  41e4e2:	call   405080 <__assert_fail@plt>
  41e4e7:	mov    eax,0xffffffff
  41e4ec:	jmp    41e4fc <flatcc_builder_table_add_union_vector@@Base+0x150>
  41e4ee:	mov    edx,DWORD PTR [rbp-0x20]
  41e4f1:	mov    rax,QWORD PTR [rbp-0x8]
  41e4f5:	mov    DWORD PTR [rax],edx
  41e4f7:	mov    eax,0x0
  41e4fc:	leave  
  41e4fd:	ret    

000000000041e4fe <flatcc_builder_create_union_vector@@Base>:
  41e4fe:	push   rbp
  41e4ff:	mov    rbp,rsp
  41e502:	sub    rsp,0x40
  41e506:	mov    QWORD PTR [rbp-0x28],rdi
  41e50a:	mov    QWORD PTR [rbp-0x30],rsi
  41e50e:	mov    QWORD PTR [rbp-0x38],rdx
  41e512:	mov    DWORD PTR [rbp-0x8],0x0
  41e519:	mov    DWORD PTR [rbp-0x4],0x0
  41e520:	mov    rax,QWORD PTR [rbp-0x28]
  41e524:	mov    rdi,rax
  41e527:	call   41cb2d <flatcc_builder_start_offset_vector@@Base>
  41e52c:	test   eax,eax
  41e52e:	je     41e539 <flatcc_builder_create_union_vector@@Base+0x3b>
  41e530:	mov    rax,QWORD PTR [rbp-0x8]
  41e534:	jmp    41e625 <flatcc_builder_create_union_vector@@Base+0x127>
  41e539:	mov    rdx,QWORD PTR [rbp-0x38]
  41e53d:	mov    rax,QWORD PTR [rbp-0x28]
  41e541:	mov    rsi,rdx
  41e544:	mov    rdi,rax
  41e547:	call   41c53d <flatcc_builder_extend_offset_vector@@Base>
  41e54c:	test   rax,rax
  41e54f:	jne    41e55a <flatcc_builder_create_union_vector@@Base+0x5c>
  41e551:	mov    rax,QWORD PTR [rbp-0x8]
  41e555:	jmp    41e625 <flatcc_builder_create_union_vector@@Base+0x127>
  41e55a:	mov    rax,QWORD PTR [rbp-0x38]
  41e55e:	mov    edx,eax
  41e560:	mov    rax,QWORD PTR [rbp-0x28]
  41e564:	mov    esi,edx
  41e566:	mov    rdi,rax
  41e569:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41e56e:	mov    QWORD PTR [rbp-0x18],rax
  41e572:	cmp    QWORD PTR [rbp-0x18],0x0
  41e577:	jne    41e582 <flatcc_builder_create_union_vector@@Base+0x84>
  41e579:	mov    rax,QWORD PTR [rbp-0x8]
  41e57d:	jmp    41e625 <flatcc_builder_create_union_vector@@Base+0x127>
  41e582:	mov    rax,QWORD PTR [rbp-0x28]
  41e586:	mov    rdi,rax
  41e589:	call   41e22e <flatcc_builder_offset_vector_edit@@Base>
  41e58e:	mov    QWORD PTR [rbp-0x10],rax
  41e592:	mov    QWORD PTR [rbp-0x20],0x0
  41e59a:	jmp    41e5ef <flatcc_builder_create_union_vector@@Base+0xf1>
  41e59c:	mov    rdx,QWORD PTR [rbp-0x18]
  41e5a0:	mov    rax,QWORD PTR [rbp-0x20]
  41e5a4:	add    rdx,rax
  41e5a7:	mov    rax,QWORD PTR [rbp-0x20]
  41e5ab:	lea    rcx,[rax*8+0x0]
  41e5b3:	mov    rax,QWORD PTR [rbp-0x30]
  41e5b7:	add    rax,rcx
  41e5ba:	movzx  eax,BYTE PTR [rax]
  41e5bd:	mov    BYTE PTR [rdx],al
  41e5bf:	mov    rax,QWORD PTR [rbp-0x20]
  41e5c3:	lea    rdx,[rax*4+0x0]
  41e5cb:	mov    rax,QWORD PTR [rbp-0x10]
  41e5cf:	add    rdx,rax
  41e5d2:	mov    rax,QWORD PTR [rbp-0x20]
  41e5d6:	lea    rcx,[rax*8+0x0]
  41e5de:	mov    rax,QWORD PTR [rbp-0x30]
  41e5e2:	add    rax,rcx
  41e5e5:	mov    eax,DWORD PTR [rax+0x4]
  41e5e8:	mov    DWORD PTR [rdx],eax
  41e5ea:	add    QWORD PTR [rbp-0x20],0x1
  41e5ef:	mov    rax,QWORD PTR [rbp-0x20]
  41e5f3:	cmp    rax,QWORD PTR [rbp-0x38]
  41e5f7:	jb     41e59c <flatcc_builder_create_union_vector@@Base+0x9e>
  41e5f9:	mov    rcx,QWORD PTR [rbp-0x38]
  41e5fd:	mov    rdx,QWORD PTR [rbp-0x10]
  41e601:	mov    rsi,QWORD PTR [rbp-0x18]
  41e605:	mov    rax,QWORD PTR [rbp-0x28]
  41e609:	mov    rdi,rax
  41e60c:	call   41e627 <flatcc_builder_create_union_vector_direct@@Base>
  41e611:	mov    QWORD PTR [rbp-0x8],rax
  41e615:	mov    rax,QWORD PTR [rbp-0x28]
  41e619:	mov    rdi,rax
  41e61c:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41e621:	mov    rax,QWORD PTR [rbp-0x8]
  41e625:	leave  
  41e626:	ret    

000000000041e627 <flatcc_builder_create_union_vector_direct@@Base>:
  41e627:	push   rbp
  41e628:	mov    rbp,rsp
  41e62b:	sub    rsp,0x30
  41e62f:	mov    QWORD PTR [rbp-0x18],rdi
  41e633:	mov    QWORD PTR [rbp-0x20],rsi
  41e637:	mov    QWORD PTR [rbp-0x28],rdx
  41e63b:	mov    QWORD PTR [rbp-0x30],rcx
  41e63f:	mov    DWORD PTR [rbp-0x8],0x0
  41e646:	mov    DWORD PTR [rbp-0x4],0x0
  41e64d:	mov    rcx,QWORD PTR [rbp-0x20]
  41e651:	mov    rdx,QWORD PTR [rbp-0x30]
  41e655:	mov    rsi,QWORD PTR [rbp-0x28]
  41e659:	mov    rax,QWORD PTR [rbp-0x18]
  41e65d:	mov    rdi,rax
  41e660:	call   41dd3f <flatcc_builder_vector_edit@@Base+0x12>
  41e665:	mov    DWORD PTR [rbp-0x4],eax
  41e668:	mov    eax,DWORD PTR [rbp-0x4]
  41e66b:	test   eax,eax
  41e66d:	jne    41e675 <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  41e66f:	mov    rax,QWORD PTR [rbp-0x8]
  41e673:	jmp    41e6ae <flatcc_builder_create_union_vector_direct@@Base+0x87>
  41e675:	mov    rdx,QWORD PTR [rbp-0x30]
  41e679:	mov    rsi,QWORD PTR [rbp-0x20]
  41e67d:	mov    rax,QWORD PTR [rbp-0x18]
  41e681:	mov    r9d,0xffffffff
  41e687:	mov    r8d,0x1
  41e68d:	mov    ecx,0x1
  41e692:	mov    rdi,rax
  41e695:	call   41d9d4 <flatcc_builder_create_vector@@Base>
  41e69a:	mov    DWORD PTR [rbp-0x8],eax
  41e69d:	mov    eax,DWORD PTR [rbp-0x8]
  41e6a0:	test   eax,eax
  41e6a2:	jne    41e6aa <flatcc_builder_create_union_vector_direct@@Base+0x83>
  41e6a4:	mov    rax,QWORD PTR [rbp-0x8]
  41e6a8:	jmp    41e6ae <flatcc_builder_create_union_vector_direct@@Base+0x87>
  41e6aa:	mov    rax,QWORD PTR [rbp-0x8]
  41e6ae:	leave  
  41e6af:	ret    

000000000041e6b0 <flatcc_builder_start_union_vector@@Base>:
  41e6b0:	push   rbp
  41e6b1:	mov    rbp,rsp
  41e6b4:	sub    rsp,0x10
  41e6b8:	mov    QWORD PTR [rbp-0x8],rdi
  41e6bc:	mov    rax,QWORD PTR [rbp-0x8]
  41e6c0:	mov    esi,0x4
  41e6c5:	mov    rdi,rax
  41e6c8:	call   41b09d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  41e6cd:	test   eax,eax
  41e6cf:	je     41e6d8 <flatcc_builder_start_union_vector@@Base+0x28>
  41e6d1:	mov    eax,0xffffffff
  41e6d6:	jmp    41e71a <flatcc_builder_start_union_vector@@Base+0x6a>
  41e6d8:	mov    rax,QWORD PTR [rbp-0x8]
  41e6dc:	mov    rax,QWORD PTR [rax+0x30]
  41e6e0:	mov    DWORD PTR [rax+0x10],0x8
  41e6e7:	mov    rax,QWORD PTR [rbp-0x8]
  41e6eb:	mov    rax,QWORD PTR [rax+0x30]
  41e6ef:	mov    DWORD PTR [rax+0x14],0x0
  41e6f6:	mov    rax,QWORD PTR [rbp-0x8]
  41e6fa:	mov    rax,QWORD PTR [rax+0x30]
  41e6fe:	mov    WORD PTR [rax+0xe],0x7
  41e704:	mov    rax,QWORD PTR [rbp-0x8]
  41e708:	mov    esi,0xfffffffc
  41e70d:	mov    rdi,rax
  41e710:	call   41a2a7 <flatcc_builder_default_alloc@@Base+0x16d>
  41e715:	mov    eax,0x0
  41e71a:	leave  
  41e71b:	ret    

000000000041e71c <flatcc_builder_end_union_vector@@Base>:
  41e71c:	push   rbp
  41e71d:	mov    rbp,rsp
  41e720:	sub    rsp,0x40
  41e724:	mov    QWORD PTR [rbp-0x38],rdi
  41e728:	mov    DWORD PTR [rbp-0x8],0x0
  41e72f:	mov    DWORD PTR [rbp-0x4],0x0
  41e736:	mov    rax,QWORD PTR [rbp-0x38]
  41e73a:	mov    rax,QWORD PTR [rax+0x30]
  41e73e:	movzx  eax,WORD PTR [rax+0xe]
  41e742:	cmp    ax,0x7
  41e746:	je     41e767 <flatcc_builder_end_union_vector@@Base+0x4b>
  41e748:	lea    rcx,[rip+0x1a691]        # 438de0 <flatcc_builder_padding_base@@Base+0xb80>
  41e74f:	mov    edx,0x651
  41e754:	lea    rsi,[rip+0x19d05]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e75b:	lea    rdi,[rip+0x1a096]        # 4387f8 <flatcc_builder_padding_base@@Base+0x598>
  41e762:	call   405080 <__assert_fail@plt>
  41e767:	mov    rax,QWORD PTR [rbp-0x38]
  41e76b:	mov    rdi,rax
  41e76e:	call   41e874 <flatcc_builder_union_vector_count@@Base>
  41e773:	mov    QWORD PTR [rbp-0x28],rax
  41e777:	mov    rax,QWORD PTR [rbp-0x28]
  41e77b:	mov    edx,eax
  41e77d:	mov    eax,edx
  41e77f:	shl    eax,0x2
  41e782:	add    edx,eax
  41e784:	mov    rax,QWORD PTR [rbp-0x38]
  41e788:	mov    esi,edx
  41e78a:	mov    rdi,rax
  41e78d:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41e792:	mov    QWORD PTR [rbp-0x20],rax
  41e796:	cmp    QWORD PTR [rbp-0x20],0x0
  41e79b:	jne    41e7a6 <flatcc_builder_end_union_vector@@Base+0x8a>
  41e79d:	mov    rax,QWORD PTR [rbp-0x8]
  41e7a1:	jmp    41e860 <flatcc_builder_end_union_vector@@Base+0x144>
  41e7a6:	mov    rax,QWORD PTR [rbp-0x28]
  41e7aa:	lea    rdx,[rax*4+0x0]
  41e7b2:	mov    rax,QWORD PTR [rbp-0x20]
  41e7b6:	add    rax,rdx
  41e7b9:	mov    QWORD PTR [rbp-0x18],rax
  41e7bd:	mov    rax,QWORD PTR [rbp-0x38]
  41e7c1:	mov    rdi,rax
  41e7c4:	call   41e862 <flatcc_builder_union_vector_edit@@Base>
  41e7c9:	mov    QWORD PTR [rbp-0x10],rax
  41e7cd:	mov    QWORD PTR [rbp-0x30],0x0
  41e7d5:	jmp    41e82a <flatcc_builder_end_union_vector@@Base+0x10e>
  41e7d7:	mov    rdx,QWORD PTR [rbp-0x18]
  41e7db:	mov    rax,QWORD PTR [rbp-0x30]
  41e7df:	add    rdx,rax
  41e7e2:	mov    rax,QWORD PTR [rbp-0x30]
  41e7e6:	lea    rcx,[rax*8+0x0]
  41e7ee:	mov    rax,QWORD PTR [rbp-0x10]
  41e7f2:	add    rax,rcx
  41e7f5:	movzx  eax,BYTE PTR [rax]
  41e7f8:	mov    BYTE PTR [rdx],al
  41e7fa:	mov    rax,QWORD PTR [rbp-0x30]
  41e7fe:	lea    rdx,[rax*4+0x0]
  41e806:	mov    rax,QWORD PTR [rbp-0x20]
  41e80a:	add    rdx,rax
  41e80d:	mov    rax,QWORD PTR [rbp-0x30]
  41e811:	lea    rcx,[rax*8+0x0]
  41e819:	mov    rax,QWORD PTR [rbp-0x10]
  41e81d:	add    rax,rcx
  41e820:	mov    eax,DWORD PTR [rax+0x4]
  41e823:	mov    DWORD PTR [rdx],eax
  41e825:	add    QWORD PTR [rbp-0x30],0x1
  41e82a:	mov    rax,QWORD PTR [rbp-0x30]
  41e82e:	cmp    rax,QWORD PTR [rbp-0x28]
  41e832:	jb     41e7d7 <flatcc_builder_end_union_vector@@Base+0xbb>
  41e834:	mov    rcx,QWORD PTR [rbp-0x28]
  41e838:	mov    rdx,QWORD PTR [rbp-0x20]
  41e83c:	mov    rsi,QWORD PTR [rbp-0x18]
  41e840:	mov    rax,QWORD PTR [rbp-0x38]
  41e844:	mov    rdi,rax
  41e847:	call   41e627 <flatcc_builder_create_union_vector_direct@@Base>
  41e84c:	mov    QWORD PTR [rbp-0x8],rax
  41e850:	mov    rax,QWORD PTR [rbp-0x38]
  41e854:	mov    rdi,rax
  41e857:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41e85c:	mov    rax,QWORD PTR [rbp-0x8]
  41e860:	leave  
  41e861:	ret    

000000000041e862 <flatcc_builder_union_vector_edit@@Base>:
  41e862:	push   rbp
  41e863:	mov    rbp,rsp
  41e866:	mov    QWORD PTR [rbp-0x8],rdi
  41e86a:	mov    rax,QWORD PTR [rbp-0x8]
  41e86e:	mov    rax,QWORD PTR [rax+0x18]
  41e872:	pop    rbp
  41e873:	ret    

000000000041e874 <flatcc_builder_union_vector_count@@Base>:
  41e874:	push   rbp
  41e875:	mov    rbp,rsp
  41e878:	mov    QWORD PTR [rbp-0x8],rdi
  41e87c:	mov    rax,QWORD PTR [rbp-0x8]
  41e880:	mov    rax,QWORD PTR [rax+0x30]
  41e884:	mov    eax,DWORD PTR [rax+0x14]
  41e887:	mov    eax,eax
  41e889:	pop    rbp
  41e88a:	ret    

000000000041e88b <flatcc_builder_extend_union_vector@@Base>:
  41e88b:	push   rbp
  41e88c:	mov    rbp,rsp
  41e88f:	sub    rsp,0x10
  41e893:	mov    QWORD PTR [rbp-0x8],rdi
  41e897:	mov    QWORD PTR [rbp-0x10],rsi
  41e89b:	mov    rax,QWORD PTR [rbp-0x10]
  41e89f:	mov    ecx,eax
  41e8a1:	mov    rax,QWORD PTR [rbp-0x8]
  41e8a5:	mov    edx,0x1fffffff
  41e8aa:	mov    esi,ecx
  41e8ac:	mov    rdi,rax
  41e8af:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41e8b4:	test   eax,eax
  41e8b6:	je     41e8bf <flatcc_builder_extend_union_vector@@Base+0x34>
  41e8b8:	mov    eax,0x0
  41e8bd:	jmp    41e8d8 <flatcc_builder_extend_union_vector@@Base+0x4d>
  41e8bf:	mov    rax,QWORD PTR [rbp-0x10]
  41e8c3:	lea    edx,[rax*8+0x0]
  41e8ca:	mov    rax,QWORD PTR [rbp-0x8]
  41e8ce:	mov    esi,edx
  41e8d0:	mov    rdi,rax
  41e8d3:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41e8d8:	leave  
  41e8d9:	ret    

000000000041e8da <flatcc_builder_truncate_union_vector@@Base>:
  41e8da:	push   rbp
  41e8db:	mov    rbp,rsp
  41e8de:	sub    rsp,0x10
  41e8e2:	mov    QWORD PTR [rbp-0x8],rdi
  41e8e6:	mov    QWORD PTR [rbp-0x10],rsi
  41e8ea:	mov    rax,QWORD PTR [rbp-0x8]
  41e8ee:	mov    rax,QWORD PTR [rax+0x30]
  41e8f2:	movzx  eax,WORD PTR [rax+0xe]
  41e8f6:	cmp    ax,0x7
  41e8fa:	je     41e91b <flatcc_builder_truncate_union_vector@@Base+0x41>
  41e8fc:	lea    rcx,[rip+0x1a4fd]        # 438e00 <flatcc_builder_padding_base@@Base+0xba0>
  41e903:	mov    edx,0x681
  41e908:	lea    rsi,[rip+0x19b51]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e90f:	lea    rdi,[rip+0x19ee2]        # 4387f8 <flatcc_builder_padding_base@@Base+0x598>
  41e916:	call   405080 <__assert_fail@plt>
  41e91b:	mov    rax,QWORD PTR [rbp-0x8]
  41e91f:	mov    rax,QWORD PTR [rax+0x30]
  41e923:	mov    eax,DWORD PTR [rax+0x14]
  41e926:	mov    rdx,QWORD PTR [rbp-0x10]
  41e92a:	cmp    eax,edx
  41e92c:	jae    41e967 <flatcc_builder_truncate_union_vector@@Base+0x8d>
  41e92e:	mov    rax,QWORD PTR [rbp-0x8]
  41e932:	mov    rax,QWORD PTR [rax+0x30]
  41e936:	mov    eax,DWORD PTR [rax+0x14]
  41e939:	mov    rdx,QWORD PTR [rbp-0x10]
  41e93d:	cmp    eax,edx
  41e93f:	jae    41e960 <flatcc_builder_truncate_union_vector@@Base+0x86>
  41e941:	lea    rcx,[rip+0x1a4b8]        # 438e00 <flatcc_builder_padding_base@@Base+0xba0>
  41e948:	mov    edx,0x682
  41e94d:	lea    rsi,[rip+0x19b0c]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e954:	lea    rdi,[rip+0x19d4d]        # 4386a8 <flatcc_builder_padding_base@@Base+0x448>
  41e95b:	call   405080 <__assert_fail@plt>
  41e960:	mov    eax,0xffffffff
  41e965:	jmp    41e9a8 <flatcc_builder_truncate_union_vector@@Base+0xce>
  41e967:	mov    rax,QWORD PTR [rbp-0x8]
  41e96b:	mov    rax,QWORD PTR [rax+0x30]
  41e96f:	mov    rdx,QWORD PTR [rbp-0x8]
  41e973:	mov    rdx,QWORD PTR [rdx+0x30]
  41e977:	mov    edx,DWORD PTR [rdx+0x14]
  41e97a:	mov    rcx,QWORD PTR [rbp-0x10]
  41e97e:	sub    edx,ecx
  41e980:	mov    DWORD PTR [rax+0x14],edx
  41e983:	mov    rax,QWORD PTR [rbp-0x8]
  41e987:	mov    rax,QWORD PTR [rax+0x30]
  41e98b:	mov    eax,DWORD PTR [rax+0x10]
  41e98e:	mov    rdx,QWORD PTR [rbp-0x10]
  41e992:	imul   edx,eax
  41e995:	mov    rax,QWORD PTR [rbp-0x8]
  41e999:	mov    esi,edx
  41e99b:	mov    rdi,rax
  41e99e:	call   41a417 <flatcc_builder_default_alloc@@Base+0x2dd>
  41e9a3:	mov    eax,0x0
  41e9a8:	leave  
  41e9a9:	ret    

000000000041e9aa <flatcc_builder_union_vector_push@@Base>:
  41e9aa:	push   rbp
  41e9ab:	mov    rbp,rsp
  41e9ae:	sub    rsp,0x20
  41e9b2:	mov    QWORD PTR [rbp-0x18],rdi
  41e9b6:	mov    QWORD PTR [rbp-0x20],rsi
  41e9ba:	mov    rax,QWORD PTR [rbp-0x18]
  41e9be:	mov    rax,QWORD PTR [rax+0x30]
  41e9c2:	movzx  eax,WORD PTR [rax+0xe]
  41e9c6:	cmp    ax,0x7
  41e9ca:	je     41e9eb <flatcc_builder_union_vector_push@@Base+0x41>
  41e9cc:	lea    rcx,[rip+0x1a46d]        # 438e40 <flatcc_builder_padding_base@@Base+0xbe0>
  41e9d3:	mov    edx,0x68d
  41e9d8:	lea    rsi,[rip+0x19a81]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41e9df:	lea    rdi,[rip+0x19e12]        # 4387f8 <flatcc_builder_padding_base@@Base+0x598>
  41e9e6:	call   405080 <__assert_fail@plt>
  41e9eb:	mov    rax,QWORD PTR [rbp-0x18]
  41e9ef:	mov    rax,QWORD PTR [rax+0x30]
  41e9f3:	mov    eax,DWORD PTR [rax+0x14]
  41e9f6:	cmp    eax,0x1fffffff
  41e9fb:	jne    41ea04 <flatcc_builder_union_vector_push@@Base+0x5a>
  41e9fd:	mov    eax,0x0
  41ea02:	jmp    41ea4f <flatcc_builder_union_vector_push@@Base+0xa5>
  41ea04:	mov    rax,QWORD PTR [rbp-0x18]
  41ea08:	mov    rax,QWORD PTR [rax+0x30]
  41ea0c:	mov    rdx,QWORD PTR [rbp-0x18]
  41ea10:	mov    rdx,QWORD PTR [rdx+0x30]
  41ea14:	mov    edx,DWORD PTR [rdx+0x14]
  41ea17:	add    edx,0x1
  41ea1a:	mov    DWORD PTR [rax+0x14],edx
  41ea1d:	mov    rax,QWORD PTR [rbp-0x18]
  41ea21:	mov    esi,0x8
  41ea26:	mov    rdi,rax
  41ea29:	call   41a39a <flatcc_builder_default_alloc@@Base+0x260>
  41ea2e:	mov    QWORD PTR [rbp-0x8],rax
  41ea32:	cmp    QWORD PTR [rbp-0x8],0x0
  41ea37:	jne    41ea40 <flatcc_builder_union_vector_push@@Base+0x96>
  41ea39:	mov    eax,0x0
  41ea3e:	jmp    41ea4f <flatcc_builder_union_vector_push@@Base+0xa5>
  41ea40:	mov    rax,QWORD PTR [rbp-0x8]
  41ea44:	mov    rdx,QWORD PTR [rbp-0x20]
  41ea48:	mov    QWORD PTR [rax],rdx
  41ea4b:	mov    rax,QWORD PTR [rbp-0x8]
  41ea4f:	leave  
  41ea50:	ret    

000000000041ea51 <flatcc_builder_append_union_vector@@Base>:
  41ea51:	push   rbp
  41ea52:	mov    rbp,rsp
  41ea55:	sub    rsp,0x20
  41ea59:	mov    QWORD PTR [rbp-0x8],rdi
  41ea5d:	mov    QWORD PTR [rbp-0x10],rsi
  41ea61:	mov    QWORD PTR [rbp-0x18],rdx
  41ea65:	mov    rax,QWORD PTR [rbp-0x8]
  41ea69:	mov    rax,QWORD PTR [rax+0x30]
  41ea6d:	movzx  eax,WORD PTR [rax+0xe]
  41ea71:	cmp    ax,0x7
  41ea75:	je     41ea96 <flatcc_builder_append_union_vector@@Base+0x45>
  41ea77:	lea    rcx,[rip+0x1a402]        # 438e80 <flatcc_builder_padding_base@@Base+0xc20>
  41ea7e:	mov    edx,0x69c
  41ea83:	lea    rsi,[rip+0x199d6]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ea8a:	lea    rdi,[rip+0x19d67]        # 4387f8 <flatcc_builder_padding_base@@Base+0x598>
  41ea91:	call   405080 <__assert_fail@plt>
  41ea96:	mov    rax,QWORD PTR [rbp-0x18]
  41ea9a:	mov    ecx,eax
  41ea9c:	mov    rax,QWORD PTR [rbp-0x8]
  41eaa0:	mov    edx,0x1fffffff
  41eaa5:	mov    esi,ecx
  41eaa7:	mov    rdi,rax
  41eaaa:	call   41c2f1 <flatcc_builder_end_struct@@Base+0x8e>
  41eaaf:	test   eax,eax
  41eab1:	je     41eaba <flatcc_builder_append_union_vector@@Base+0x69>
  41eab3:	mov    eax,0x0
  41eab8:	jmp    41ead8 <flatcc_builder_append_union_vector@@Base+0x87>
  41eaba:	mov    rax,QWORD PTR [rbp-0x18]
  41eabe:	lea    edx,[rax*8+0x0]
  41eac5:	mov    rcx,QWORD PTR [rbp-0x10]
  41eac9:	mov    rax,QWORD PTR [rbp-0x8]
  41eacd:	mov    rsi,rcx
  41ead0:	mov    rdi,rax
  41ead3:	call   41a463 <flatcc_builder_default_alloc@@Base+0x329>
  41ead8:	leave  
  41ead9:	ret    

000000000041eada <flatcc_builder_create_string@@Base>:
  41eada:	push   rbp
  41eadb:	mov    rbp,rsp
  41eade:	sub    rsp,0xd0
  41eae5:	mov    QWORD PTR [rbp-0xb8],rdi
  41eaec:	mov    QWORD PTR [rbp-0xc0],rsi
  41eaf3:	mov    QWORD PTR [rbp-0xc8],rdx
  41eafa:	mov    rax,QWORD PTR fs:0x28
  41eb03:	mov    QWORD PTR [rbp-0x8],rax
  41eb07:	xor    eax,eax
  41eb09:	mov    eax,0xffffffff
  41eb0e:	cmp    QWORD PTR [rbp-0xc8],rax
  41eb15:	jbe    41eb21 <flatcc_builder_create_string@@Base+0x47>
  41eb17:	mov    eax,0x0
  41eb1c:	jmp    41ecc8 <flatcc_builder_create_string@@Base+0x1ee>
  41eb21:	mov    rax,QWORD PTR [rbp-0xc8]
  41eb28:	mov    edi,eax
  41eb2a:	call   41a074 <main@@Base+0x9f9>
  41eb2f:	mov    DWORD PTR [rbp-0xa8],eax
  41eb35:	mov    rax,QWORD PTR [rbp-0xc8]
  41eb3c:	lea    ecx,[rax+0x1]
  41eb3f:	mov    rax,QWORD PTR [rbp-0xb8]
  41eb46:	mov    edx,0x4
  41eb4b:	mov    esi,ecx
  41eb4d:	mov    rdi,rax
  41eb50:	call   41b33c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  41eb55:	add    eax,0x1
  41eb58:	mov    DWORD PTR [rbp-0xa4],eax
  41eb5e:	mov    QWORD PTR [rbp-0xa0],0x0
  41eb69:	mov    DWORD PTR [rbp-0x98],0x0
  41eb73:	mov    rax,QWORD PTR [rbp-0xa0]
  41eb7a:	add    rax,0x4
  41eb7e:	mov    QWORD PTR [rbp-0xa0],rax
  41eb85:	mov    eax,DWORD PTR [rbp-0x98]
  41eb8b:	cdqe   
  41eb8d:	shl    rax,0x4
  41eb91:	add    rax,rbp
  41eb94:	lea    rdx,[rax-0x90]
  41eb9b:	lea    rax,[rbp-0xa8]
  41eba2:	mov    QWORD PTR [rdx],rax
  41eba5:	mov    eax,DWORD PTR [rbp-0x98]
  41ebab:	cdqe   
  41ebad:	shl    rax,0x4
  41ebb1:	add    rax,rbp
  41ebb4:	sub    rax,0x88
  41ebba:	mov    QWORD PTR [rax],0x4
  41ebc1:	mov    eax,DWORD PTR [rbp-0x98]
  41ebc7:	add    eax,0x1
  41ebca:	mov    DWORD PTR [rbp-0x98],eax
  41ebd0:	cmp    QWORD PTR [rbp-0xc8],0x0
  41ebd8:	je     41ec41 <flatcc_builder_create_string@@Base+0x167>
  41ebda:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ebe1:	mov    rax,QWORD PTR [rbp-0xc8]
  41ebe8:	add    rax,rdx
  41ebeb:	mov    QWORD PTR [rbp-0xa0],rax
  41ebf2:	mov    eax,DWORD PTR [rbp-0x98]
  41ebf8:	cdqe   
  41ebfa:	shl    rax,0x4
  41ebfe:	add    rax,rbp
  41ec01:	lea    rdx,[rax-0x90]
  41ec08:	mov    rax,QWORD PTR [rbp-0xc0]
  41ec0f:	mov    QWORD PTR [rdx],rax
  41ec12:	mov    eax,DWORD PTR [rbp-0x98]
  41ec18:	cdqe   
  41ec1a:	shl    rax,0x4
  41ec1e:	add    rax,rbp
  41ec21:	lea    rdx,[rax-0x88]
  41ec28:	mov    rax,QWORD PTR [rbp-0xc8]
  41ec2f:	mov    QWORD PTR [rdx],rax
  41ec32:	mov    eax,DWORD PTR [rbp-0x98]
  41ec38:	add    eax,0x1
  41ec3b:	mov    DWORD PTR [rbp-0x98],eax
  41ec41:	cmp    DWORD PTR [rbp-0xa4],0x0
  41ec48:	je     41ecaf <flatcc_builder_create_string@@Base+0x1d5>
  41ec4a:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ec51:	mov    eax,DWORD PTR [rbp-0xa4]
  41ec57:	add    rax,rdx
  41ec5a:	mov    QWORD PTR [rbp-0xa0],rax
  41ec61:	mov    eax,DWORD PTR [rbp-0x98]
  41ec67:	cdqe   
  41ec69:	shl    rax,0x4
  41ec6d:	add    rax,rbp
  41ec70:	sub    rax,0x90
  41ec76:	mov    rdx,0x438260
  41ec7d:	mov    QWORD PTR [rax],rdx
  41ec80:	mov    edx,DWORD PTR [rbp-0x98]
  41ec86:	mov    eax,DWORD PTR [rbp-0xa4]
  41ec8c:	movsxd rdx,edx
  41ec8f:	shl    rdx,0x4
  41ec93:	add    rdx,rbp
  41ec96:	sub    rdx,0x88
  41ec9d:	mov    QWORD PTR [rdx],rax
  41eca0:	mov    eax,DWORD PTR [rbp-0x98]
  41eca6:	add    eax,0x1
  41eca9:	mov    DWORD PTR [rbp-0x98],eax
  41ecaf:	lea    rdx,[rbp-0xa0]
  41ecb6:	mov    rax,QWORD PTR [rbp-0xb8]
  41ecbd:	mov    rsi,rdx
  41ecc0:	mov    rdi,rax
  41ecc3:	call   41b388 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  41ecc8:	mov    rcx,QWORD PTR [rbp-0x8]
  41eccc:	xor    rcx,QWORD PTR fs:0x28
  41ecd5:	je     41ecdc <flatcc_builder_create_string@@Base+0x202>
  41ecd7:	call   405070 <__stack_chk_fail@plt>
  41ecdc:	leave  
  41ecdd:	ret    

000000000041ecde <flatcc_builder_create_string_str@@Base>:
  41ecde:	push   rbp
  41ecdf:	mov    rbp,rsp
  41ece2:	sub    rsp,0x10
  41ece6:	mov    QWORD PTR [rbp-0x8],rdi
  41ecea:	mov    QWORD PTR [rbp-0x10],rsi
  41ecee:	mov    rax,QWORD PTR [rbp-0x10]
  41ecf2:	mov    rdi,rax
  41ecf5:	call   405060 <strlen@plt>
  41ecfa:	mov    rdx,rax
  41ecfd:	mov    rcx,QWORD PTR [rbp-0x10]
  41ed01:	mov    rax,QWORD PTR [rbp-0x8]
  41ed05:	mov    rsi,rcx
  41ed08:	mov    rdi,rax
  41ed0b:	call   41eada <flatcc_builder_create_string@@Base>
  41ed10:	leave  
  41ed11:	ret    

000000000041ed12 <flatcc_builder_create_string_strn@@Base>:
  41ed12:	push   rbp
  41ed13:	mov    rbp,rsp
  41ed16:	sub    rsp,0x20
  41ed1a:	mov    QWORD PTR [rbp-0x8],rdi
  41ed1e:	mov    QWORD PTR [rbp-0x10],rsi
  41ed22:	mov    QWORD PTR [rbp-0x18],rdx
  41ed26:	mov    rdx,QWORD PTR [rbp-0x18]
  41ed2a:	mov    rax,QWORD PTR [rbp-0x10]
  41ed2e:	mov    rsi,rdx
  41ed31:	mov    rdi,rax
  41ed34:	call   41a0f4 <main@@Base+0xa79>
  41ed39:	mov    rdx,rax
  41ed3c:	mov    rcx,QWORD PTR [rbp-0x10]
  41ed40:	mov    rax,QWORD PTR [rbp-0x8]
  41ed44:	mov    rsi,rcx
  41ed47:	mov    rdi,rax
  41ed4a:	call   41eada <flatcc_builder_create_string@@Base>
  41ed4f:	leave  
  41ed50:	ret    

000000000041ed51 <flatcc_builder_end_string@@Base>:
  41ed51:	push   rbp
  41ed52:	mov    rbp,rsp
  41ed55:	sub    rsp,0x20
  41ed59:	mov    QWORD PTR [rbp-0x18],rdi
  41ed5d:	mov    rax,QWORD PTR [rbp-0x18]
  41ed61:	mov    rax,QWORD PTR [rax+0x30]
  41ed65:	movzx  eax,WORD PTR [rax+0xe]
  41ed69:	cmp    ax,0x6
  41ed6d:	je     41ed8e <flatcc_builder_end_string@@Base+0x3d>
  41ed6f:	lea    rcx,[rip+0x1a13a]        # 438eb0 <flatcc_builder_padding_base@@Base+0xc50>
  41ed76:	mov    edx,0x6c4
  41ed7b:	lea    rsi,[rip+0x196de]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ed82:	lea    rdi,[rip+0x198c7]        # 438650 <flatcc_builder_padding_base@@Base+0x3f0>
  41ed89:	call   405080 <__assert_fail@plt>
  41ed8e:	mov    rax,QWORD PTR [rbp-0x18]
  41ed92:	mov    rax,QWORD PTR [rax+0x30]
  41ed96:	mov    edx,DWORD PTR [rax+0x14]
  41ed99:	mov    rax,QWORD PTR [rbp-0x18]
  41ed9d:	mov    eax,DWORD PTR [rax+0x20]
  41eda0:	cmp    edx,eax
  41eda2:	je     41edc3 <flatcc_builder_end_string@@Base+0x72>
  41eda4:	lea    rcx,[rip+0x1a105]        # 438eb0 <flatcc_builder_padding_base@@Base+0xc50>
  41edab:	mov    edx,0x6c5
  41edb0:	lea    rsi,[rip+0x196a9]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41edb7:	lea    rdi,[rip+0x19a72]        # 438830 <flatcc_builder_padding_base@@Base+0x5d0>
  41edbe:	call   405080 <__assert_fail@plt>
  41edc3:	mov    rax,QWORD PTR [rbp-0x18]
  41edc7:	mov    eax,DWORD PTR [rax+0x20]
  41edca:	mov    edx,eax
  41edcc:	mov    rax,QWORD PTR [rbp-0x18]
  41edd0:	mov    rcx,QWORD PTR [rax+0x18]
  41edd4:	mov    rax,QWORD PTR [rbp-0x18]
  41edd8:	mov    rsi,rcx
  41eddb:	mov    rdi,rax
  41edde:	call   41eada <flatcc_builder_create_string@@Base>
  41ede3:	mov    DWORD PTR [rbp-0x4],eax
  41ede6:	cmp    DWORD PTR [rbp-0x4],0x0
  41edea:	jne    41edf3 <flatcc_builder_end_string@@Base+0xa2>
  41edec:	mov    eax,0x0
  41edf1:	jmp    41ee02 <flatcc_builder_end_string@@Base+0xb1>
  41edf3:	mov    rax,QWORD PTR [rbp-0x18]
  41edf7:	mov    rdi,rax
  41edfa:	call   41b275 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  41edff:	mov    eax,DWORD PTR [rbp-0x4]
  41ee02:	leave  
  41ee03:	ret    

000000000041ee04 <flatcc_builder_string_edit@@Base>:
  41ee04:	push   rbp
  41ee05:	mov    rbp,rsp
  41ee08:	mov    QWORD PTR [rbp-0x8],rdi
  41ee0c:	mov    rax,QWORD PTR [rbp-0x8]
  41ee10:	mov    rax,QWORD PTR [rax+0x18]
  41ee14:	pop    rbp
  41ee15:	ret    

000000000041ee16 <flatcc_builder_string_len@@Base>:
  41ee16:	push   rbp
  41ee17:	mov    rbp,rsp
  41ee1a:	mov    QWORD PTR [rbp-0x8],rdi
  41ee1e:	mov    rax,QWORD PTR [rbp-0x8]
  41ee22:	mov    rax,QWORD PTR [rax+0x30]
  41ee26:	mov    eax,DWORD PTR [rax+0x14]
  41ee29:	mov    eax,eax
  41ee2b:	pop    rbp
  41ee2c:	ret    

000000000041ee2d <flatcc_builder_table_add@@Base>:
  41ee2d:	push   rbp
  41ee2e:	mov    rbp,rsp
  41ee31:	sub    rsp,0x20
  41ee35:	mov    QWORD PTR [rbp-0x8],rdi
  41ee39:	mov    DWORD PTR [rbp-0xc],esi
  41ee3c:	mov    QWORD PTR [rbp-0x18],rdx
  41ee40:	mov    eax,ecx
  41ee42:	mov    WORD PTR [rbp-0x10],ax
  41ee46:	mov    rax,QWORD PTR [rbp-0x8]
  41ee4a:	mov    rax,QWORD PTR [rax+0x30]
  41ee4e:	movzx  eax,WORD PTR [rax+0xe]
  41ee52:	cmp    ax,0x3
  41ee56:	je     41ee77 <flatcc_builder_table_add@@Base+0x4a>
  41ee58:	lea    rcx,[rip+0x1a071]        # 438ed0 <flatcc_builder_padding_base@@Base+0xc70>
  41ee5f:	mov    edx,0x6ed
  41ee64:	lea    rsi,[rip+0x195f5]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ee6b:	lea    rdi,[rip+0x198c6]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41ee72:	call   405080 <__assert_fail@plt>
  41ee77:	cmp    DWORD PTR [rbp-0xc],0x0
  41ee7b:	js     41ee86 <flatcc_builder_table_add@@Base+0x59>
  41ee7d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41ee84:	jle    41eea5 <flatcc_builder_table_add@@Base+0x78>
  41ee86:	lea    rcx,[rip+0x1a043]        # 438ed0 <flatcc_builder_padding_base@@Base+0xc70>
  41ee8d:	mov    edx,0x6ee
  41ee92:	lea    rsi,[rip+0x195c7]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ee99:	lea    rdi,[rip+0x199b8]        # 438858 <flatcc_builder_padding_base@@Base+0x5f8>
  41eea0:	call   405080 <__assert_fail@plt>
  41eea5:	mov    rax,QWORD PTR [rbp-0x8]
  41eea9:	movzx  eax,WORD PTR [rax+0xea]
  41eeb0:	cmp    ax,WORD PTR [rbp-0x10]
  41eeb4:	jae    41eec5 <flatcc_builder_table_add@@Base+0x98>
  41eeb6:	mov    rax,QWORD PTR [rbp-0x8]
  41eeba:	movzx  edx,WORD PTR [rbp-0x10]
  41eebe:	mov    WORD PTR [rax+0xea],dx
  41eec5:	mov    rax,QWORD PTR [rbp-0x8]
  41eec9:	mov    rax,QWORD PTR [rax+0x8]
  41eecd:	mov    edx,DWORD PTR [rbp-0xc]
  41eed0:	movsxd rdx,edx
  41eed3:	add    rdx,rdx
  41eed6:	add    rax,rdx
  41eed9:	movzx  eax,WORD PTR [rax]
  41eedc:	test   ax,ax
  41eedf:	je     41ef00 <flatcc_builder_table_add@@Base+0xd3>
  41eee1:	lea    rcx,[rip+0x19fe8]        # 438ed0 <flatcc_builder_padding_base@@Base+0xc70>
  41eee8:	mov    edx,0x6f8
  41eeed:	lea    rsi,[rip+0x1956c]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41eef4:	lea    rdi,[rip+0x195c5]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41eefb:	call   405080 <__assert_fail@plt>
  41ef00:	mov    rax,QWORD PTR [rbp-0x8]
  41ef04:	mov    edx,DWORD PTR [rax+0x14]
  41ef07:	mov    eax,DWORD PTR [rbp-0xc]
  41ef0a:	xor    eax,edx
  41ef0c:	imul   eax,eax,0x9e3779b1
  41ef12:	mov    rdx,QWORD PTR [rbp-0x18]
  41ef16:	xor    eax,edx
  41ef18:	imul   edx,eax,0x9e3779b1
  41ef1e:	mov    rax,QWORD PTR [rbp-0x8]
  41ef22:	mov    DWORD PTR [rax+0x14],edx
  41ef25:	mov    eax,DWORD PTR [rbp-0xc]
  41ef28:	movzx  ecx,ax
  41ef2b:	movzx  edx,WORD PTR [rbp-0x10]
  41ef2f:	mov    rax,QWORD PTR [rbp-0x18]
  41ef33:	mov    esi,eax
  41ef35:	mov    rax,QWORD PTR [rbp-0x8]
  41ef39:	mov    rdi,rax
  41ef3c:	call   41a4b5 <flatcc_builder_default_alloc@@Base+0x37b>
  41ef41:	leave  
  41ef42:	ret    

000000000041ef43 <flatcc_builder_table_edit@@Base>:
  41ef43:	push   rbp
  41ef44:	mov    rbp,rsp
  41ef47:	sub    rsp,0x10
  41ef4b:	mov    QWORD PTR [rbp-0x8],rdi
  41ef4f:	mov    QWORD PTR [rbp-0x10],rsi
  41ef53:	mov    rax,QWORD PTR [rbp-0x8]
  41ef57:	mov    rax,QWORD PTR [rax+0x30]
  41ef5b:	movzx  eax,WORD PTR [rax+0xe]
  41ef5f:	cmp    ax,0x3
  41ef63:	je     41ef84 <flatcc_builder_table_edit@@Base+0x41>
  41ef65:	lea    rcx,[rip+0x19f84]        # 438ef0 <flatcc_builder_padding_base@@Base+0xc90>
  41ef6c:	mov    edx,0x702
  41ef71:	lea    rsi,[rip+0x194e8]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41ef78:	lea    rdi,[rip+0x197b9]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41ef7f:	call   405080 <__assert_fail@plt>
  41ef84:	mov    rax,QWORD PTR [rbp-0x8]
  41ef88:	mov    rdx,QWORD PTR [rax+0x18]
  41ef8c:	mov    rax,QWORD PTR [rbp-0x8]
  41ef90:	mov    eax,DWORD PTR [rax+0x20]
  41ef93:	mov    eax,eax
  41ef95:	sub    rax,QWORD PTR [rbp-0x10]
  41ef99:	add    rax,rdx
  41ef9c:	leave  
  41ef9d:	ret    

000000000041ef9e <flatcc_builder_table_add_copy@@Base>:
  41ef9e:	push   rbp
  41ef9f:	mov    rbp,rsp
  41efa2:	sub    rsp,0x30
  41efa6:	mov    QWORD PTR [rbp-0x18],rdi
  41efaa:	mov    DWORD PTR [rbp-0x1c],esi
  41efad:	mov    QWORD PTR [rbp-0x28],rdx
  41efb1:	mov    QWORD PTR [rbp-0x30],rcx
  41efb5:	mov    eax,r8d
  41efb8:	mov    WORD PTR [rbp-0x20],ax
  41efbc:	movzx  ecx,WORD PTR [rbp-0x20]
  41efc0:	mov    rdx,QWORD PTR [rbp-0x30]
  41efc4:	mov    esi,DWORD PTR [rbp-0x1c]
  41efc7:	mov    rax,QWORD PTR [rbp-0x18]
  41efcb:	mov    rdi,rax
  41efce:	call   41ee2d <flatcc_builder_table_add@@Base>
  41efd3:	mov    QWORD PTR [rbp-0x8],rax
  41efd7:	cmp    QWORD PTR [rbp-0x8],0x0
  41efdc:	je     41eff5 <flatcc_builder_table_add_copy@@Base+0x57>
  41efde:	mov    rdx,QWORD PTR [rbp-0x30]
  41efe2:	mov    rcx,QWORD PTR [rbp-0x28]
  41efe6:	mov    rax,QWORD PTR [rbp-0x8]
  41efea:	mov    rsi,rcx
  41efed:	mov    rdi,rax
  41eff0:	call   4050f0 <memcpy@plt>
  41eff5:	mov    rax,QWORD PTR [rbp-0x8]
  41eff9:	leave  
  41effa:	ret    

000000000041effb <flatcc_builder_table_add_offset@@Base>:
  41effb:	push   rbp
  41effc:	mov    rbp,rsp
  41efff:	sub    rsp,0x10
  41f003:	mov    QWORD PTR [rbp-0x8],rdi
  41f007:	mov    DWORD PTR [rbp-0xc],esi
  41f00a:	mov    rax,QWORD PTR [rbp-0x8]
  41f00e:	mov    rax,QWORD PTR [rax+0x30]
  41f012:	movzx  eax,WORD PTR [rax+0xe]
  41f016:	cmp    ax,0x3
  41f01a:	je     41f03b <flatcc_builder_table_add_offset@@Base+0x40>
  41f01c:	lea    rcx,[rip+0x19efd]        # 438f20 <flatcc_builder_padding_base@@Base+0xcc0>
  41f023:	mov    edx,0x713
  41f028:	lea    rsi,[rip+0x19431]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41f02f:	lea    rdi,[rip+0x19702]        # 438738 <flatcc_builder_padding_base@@Base+0x4d8>
  41f036:	call   405080 <__assert_fail@plt>
  41f03b:	cmp    DWORD PTR [rbp-0xc],0x0
  41f03f:	js     41f04a <flatcc_builder_table_add_offset@@Base+0x4f>
  41f041:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41f048:	jle    41f069 <flatcc_builder_table_add_offset@@Base+0x6e>
  41f04a:	lea    rcx,[rip+0x19ecf]        # 438f20 <flatcc_builder_padding_base@@Base+0xcc0>
  41f051:	mov    edx,0x714
  41f056:	lea    rsi,[rip+0x19403]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41f05d:	lea    rdi,[rip+0x197f4]        # 438858 <flatcc_builder_padding_base@@Base+0x5f8>
  41f064:	call   405080 <__assert_fail@plt>
  41f069:	mov    rax,QWORD PTR [rbp-0x8]
  41f06d:	mov    rax,QWORD PTR [rax+0x8]
  41f071:	mov    edx,DWORD PTR [rbp-0xc]
  41f074:	movsxd rdx,edx
  41f077:	add    rdx,rdx
  41f07a:	add    rax,rdx
  41f07d:	movzx  eax,WORD PTR [rax]
  41f080:	test   ax,ax
  41f083:	je     41f0a4 <flatcc_builder_table_add_offset@@Base+0xa9>
  41f085:	lea    rcx,[rip+0x19e94]        # 438f20 <flatcc_builder_padding_base@@Base+0xcc0>
  41f08c:	mov    edx,0x71b
  41f091:	lea    rsi,[rip+0x193c8]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41f098:	lea    rdi,[rip+0x19421]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41f09f:	call   405080 <__assert_fail@plt>
  41f0a4:	mov    rax,QWORD PTR [rbp-0x8]
  41f0a8:	mov    edx,DWORD PTR [rax+0x14]
  41f0ab:	mov    eax,DWORD PTR [rbp-0xc]
  41f0ae:	xor    eax,edx
  41f0b0:	imul   eax,eax,0x9e3779b1
  41f0b6:	xor    eax,0x4
  41f0b9:	imul   edx,eax,0x9e3779b1
  41f0bf:	mov    rax,QWORD PTR [rbp-0x8]
  41f0c3:	mov    DWORD PTR [rax+0x14],edx
  41f0c6:	mov    eax,DWORD PTR [rbp-0xc]
  41f0c9:	movzx  edx,ax
  41f0cc:	mov    rax,QWORD PTR [rbp-0x8]
  41f0d0:	mov    esi,edx
  41f0d2:	mov    rdi,rax
  41f0d5:	call   41a57d <flatcc_builder_default_alloc@@Base+0x443>
  41f0da:	leave  
  41f0db:	ret    

000000000041f0dc <flatcc_builder_push_buffer_alignment@@Base>:
  41f0dc:	push   rbp
  41f0dd:	mov    rbp,rsp
  41f0e0:	mov    QWORD PTR [rbp-0x18],rdi
  41f0e4:	mov    rax,QWORD PTR [rbp-0x18]
  41f0e8:	movzx  eax,WORD PTR [rax+0xe8]
  41f0ef:	mov    WORD PTR [rbp-0x2],ax
  41f0f3:	mov    rax,QWORD PTR [rbp-0x18]
  41f0f7:	mov    WORD PTR [rax+0xe8],0x4
  41f100:	movzx  eax,WORD PTR [rbp-0x2]
  41f104:	pop    rbp
  41f105:	ret    

000000000041f106 <flatcc_builder_pop_buffer_alignment@@Base>:
  41f106:	push   rbp
  41f107:	mov    rbp,rsp
  41f10a:	sub    rsp,0x10
  41f10e:	mov    QWORD PTR [rbp-0x8],rdi
  41f112:	mov    eax,esi
  41f114:	mov    WORD PTR [rbp-0xc],ax
  41f118:	movzx  edx,WORD PTR [rbp-0xc]
  41f11c:	mov    rax,QWORD PTR [rbp-0x8]
  41f120:	mov    esi,edx
  41f122:	mov    rdi,rax
  41f125:	call   41ad84 <flatcc_builder_clear@@Base+0x96>
  41f12a:	nop
  41f12b:	leave  
  41f12c:	ret    

000000000041f12d <flatcc_builder_get_buffer_alignment@@Base>:
  41f12d:	push   rbp
  41f12e:	mov    rbp,rsp
  41f131:	mov    QWORD PTR [rbp-0x8],rdi
  41f135:	mov    rax,QWORD PTR [rbp-0x8]
  41f139:	movzx  eax,WORD PTR [rax+0xe8]
  41f140:	pop    rbp
  41f141:	ret    

000000000041f142 <flatcc_builder_set_vtable_clustering@@Base>:
  41f142:	push   rbp
  41f143:	mov    rbp,rsp
  41f146:	mov    QWORD PTR [rbp-0x8],rdi
  41f14a:	mov    DWORD PTR [rbp-0xc],esi
  41f14d:	cmp    DWORD PTR [rbp-0xc],0x0
  41f151:	sete   al
  41f154:	movzx  edx,al
  41f157:	mov    rax,QWORD PTR [rbp-0x8]
  41f15b:	mov    DWORD PTR [rax+0x124],edx
  41f161:	nop
  41f162:	pop    rbp
  41f163:	ret    

000000000041f164 <flatcc_builder_set_block_align@@Base>:
  41f164:	push   rbp
  41f165:	mov    rbp,rsp
  41f168:	mov    QWORD PTR [rbp-0x8],rdi
  41f16c:	mov    eax,esi
  41f16e:	mov    WORD PTR [rbp-0xc],ax
  41f172:	mov    rax,QWORD PTR [rbp-0x8]
  41f176:	movzx  edx,WORD PTR [rbp-0xc]
  41f17a:	mov    WORD PTR [rax+0xec],dx
  41f181:	nop
  41f182:	pop    rbp
  41f183:	ret    

000000000041f184 <flatcc_builder_get_level@@Base>:
  41f184:	push   rbp
  41f185:	mov    rbp,rsp
  41f188:	mov    QWORD PTR [rbp-0x8],rdi
  41f18c:	mov    rax,QWORD PTR [rbp-0x8]
  41f190:	mov    eax,DWORD PTR [rax+0x104]
  41f196:	pop    rbp
  41f197:	ret    

000000000041f198 <flatcc_builder_set_max_level@@Base>:
  41f198:	push   rbp
  41f199:	mov    rbp,rsp
  41f19c:	mov    QWORD PTR [rbp-0x8],rdi
  41f1a0:	mov    DWORD PTR [rbp-0xc],esi
  41f1a3:	mov    rax,QWORD PTR [rbp-0x8]
  41f1a7:	mov    edx,DWORD PTR [rbp-0xc]
  41f1aa:	mov    DWORD PTR [rax+0x120],edx
  41f1b0:	mov    rax,QWORD PTR [rbp-0x8]
  41f1b4:	mov    edx,DWORD PTR [rax+0x108]
  41f1ba:	mov    rax,QWORD PTR [rbp-0x8]
  41f1be:	mov    eax,DWORD PTR [rax+0x120]
  41f1c4:	cmp    edx,eax
  41f1c6:	jge    41f1dc <flatcc_builder_set_max_level@@Base+0x44>
  41f1c8:	mov    rax,QWORD PTR [rbp-0x8]
  41f1cc:	mov    edx,DWORD PTR [rax+0x120]
  41f1d2:	mov    rax,QWORD PTR [rbp-0x8]
  41f1d6:	mov    DWORD PTR [rax+0x108],edx
  41f1dc:	nop
  41f1dd:	pop    rbp
  41f1de:	ret    

000000000041f1df <flatcc_builder_get_buffer_size@@Base>:
  41f1df:	push   rbp
  41f1e0:	mov    rbp,rsp
  41f1e3:	mov    QWORD PTR [rbp-0x8],rdi
  41f1e7:	mov    rax,QWORD PTR [rbp-0x8]
  41f1eb:	mov    edx,DWORD PTR [rax+0xf4]
  41f1f1:	mov    rax,QWORD PTR [rbp-0x8]
  41f1f5:	mov    eax,DWORD PTR [rax+0xf0]
  41f1fb:	sub    edx,eax
  41f1fd:	mov    eax,edx
  41f1ff:	cdqe   
  41f201:	pop    rbp
  41f202:	ret    

000000000041f203 <flatcc_builder_get_buffer_start@@Base>:
  41f203:	push   rbp
  41f204:	mov    rbp,rsp
  41f207:	mov    QWORD PTR [rbp-0x8],rdi
  41f20b:	mov    rax,QWORD PTR [rbp-0x8]
  41f20f:	mov    eax,DWORD PTR [rax+0xf0]
  41f215:	pop    rbp
  41f216:	ret    

000000000041f217 <flatcc_builder_get_buffer_end@@Base>:
  41f217:	push   rbp
  41f218:	mov    rbp,rsp
  41f21b:	mov    QWORD PTR [rbp-0x8],rdi
  41f21f:	mov    rax,QWORD PTR [rbp-0x8]
  41f223:	mov    eax,DWORD PTR [rax+0xf4]
  41f229:	pop    rbp
  41f22a:	ret    

000000000041f22b <flatcc_builder_set_vtable_cache_limit@@Base>:
  41f22b:	push   rbp
  41f22c:	mov    rbp,rsp
  41f22f:	mov    QWORD PTR [rbp-0x8],rdi
  41f233:	mov    QWORD PTR [rbp-0x10],rsi
  41f237:	mov    rax,QWORD PTR [rbp-0x8]
  41f23b:	mov    rdx,QWORD PTR [rbp-0x10]
  41f23f:	mov    QWORD PTR [rax+0x118],rdx
  41f246:	nop
  41f247:	pop    rbp
  41f248:	ret    

000000000041f249 <flatcc_builder_set_identifier@@Base>:
  41f249:	push   rbp
  41f24a:	mov    rbp,rsp
  41f24d:	mov    QWORD PTR [rbp-0x8],rdi
  41f251:	mov    QWORD PTR [rbp-0x10],rsi
  41f255:	cmp    QWORD PTR [rbp-0x10],0x0
  41f25a:	je     41f262 <flatcc_builder_set_identifier@@Base+0x19>
  41f25c:	mov    rax,QWORD PTR [rbp-0x10]
  41f260:	jmp    41f269 <flatcc_builder_set_identifier@@Base+0x20>
  41f262:	mov    rax,0x438260
  41f269:	mov    rdx,QWORD PTR [rbp-0x8]
  41f26d:	add    rdx,0x110
  41f274:	mov    eax,DWORD PTR [rax]
  41f276:	mov    DWORD PTR [rdx],eax
  41f278:	nop
  41f279:	pop    rbp
  41f27a:	ret    

000000000041f27b <flatcc_builder_get_type@@Base>:
  41f27b:	push   rbp
  41f27c:	mov    rbp,rsp
  41f27f:	mov    QWORD PTR [rbp-0x8],rdi
  41f283:	mov    rax,QWORD PTR [rbp-0x8]
  41f287:	mov    rax,QWORD PTR [rax+0x30]
  41f28b:	test   rax,rax
  41f28e:	je     41f2a1 <flatcc_builder_get_type@@Base+0x26>
  41f290:	mov    rax,QWORD PTR [rbp-0x8]
  41f294:	mov    rax,QWORD PTR [rax+0x30]
  41f298:	movzx  eax,WORD PTR [rax+0xe]
  41f29c:	movzx  eax,ax
  41f29f:	jmp    41f2a6 <flatcc_builder_get_type@@Base+0x2b>
  41f2a1:	mov    eax,0x0
  41f2a6:	pop    rbp
  41f2a7:	ret    

000000000041f2a8 <flatcc_builder_get_type_at@@Base>:
  41f2a8:	push   rbp
  41f2a9:	mov    rbp,rsp
  41f2ac:	mov    QWORD PTR [rbp-0x8],rdi
  41f2b0:	mov    DWORD PTR [rbp-0xc],esi
  41f2b3:	cmp    DWORD PTR [rbp-0xc],0x0
  41f2b7:	jle    41f2c8 <flatcc_builder_get_type_at@@Base+0x20>
  41f2b9:	mov    rax,QWORD PTR [rbp-0x8]
  41f2bd:	mov    eax,DWORD PTR [rax+0x104]
  41f2c3:	cmp    eax,DWORD PTR [rbp-0xc]
  41f2c6:	jge    41f2cf <flatcc_builder_get_type_at@@Base+0x27>
  41f2c8:	mov    eax,0x0
  41f2cd:	jmp    41f303 <flatcc_builder_get_type_at@@Base+0x5b>
  41f2cf:	mov    rax,QWORD PTR [rbp-0x8]
  41f2d3:	mov    rcx,QWORD PTR [rax+0x30]
  41f2d7:	mov    rax,QWORD PTR [rbp-0x8]
  41f2db:	mov    eax,DWORD PTR [rax+0x104]
  41f2e1:	mov    edx,DWORD PTR [rbp-0xc]
  41f2e4:	sub    edx,eax
  41f2e6:	mov    eax,edx
  41f2e8:	movsxd rdx,eax
  41f2eb:	mov    rax,rdx
  41f2ee:	shl    rax,0x3
  41f2f2:	add    rax,rdx
  41f2f5:	shl    rax,0x2
  41f2f9:	add    rax,rcx
  41f2fc:	movzx  eax,WORD PTR [rax+0xe]
  41f300:	movzx  eax,ax
  41f303:	pop    rbp
  41f304:	ret    

000000000041f305 <flatcc_builder_get_direct_buffer@@Base>:
  41f305:	push   rbp
  41f306:	mov    rbp,rsp
  41f309:	sub    rsp,0x10
  41f30d:	mov    QWORD PTR [rbp-0x8],rdi
  41f311:	mov    QWORD PTR [rbp-0x10],rsi
  41f315:	mov    rax,QWORD PTR [rbp-0x8]
  41f319:	mov    eax,DWORD PTR [rax+0x128]
  41f31f:	test   eax,eax
  41f321:	je     41f33f <flatcc_builder_get_direct_buffer@@Base+0x3a>
  41f323:	mov    rax,QWORD PTR [rbp-0x8]
  41f327:	lea    rdx,[rax+0x130]
  41f32e:	mov    rax,QWORD PTR [rbp-0x10]
  41f332:	mov    rsi,rax
  41f335:	mov    rdi,rdx
  41f338:	call   41a09b <main@@Base+0xa20>
  41f33d:	jmp    41f356 <flatcc_builder_get_direct_buffer@@Base+0x51>
  41f33f:	cmp    QWORD PTR [rbp-0x10],0x0
  41f344:	je     41f351 <flatcc_builder_get_direct_buffer@@Base+0x4c>
  41f346:	mov    rax,QWORD PTR [rbp-0x10]
  41f34a:	mov    QWORD PTR [rax],0x0
  41f351:	mov    eax,0x0
  41f356:	leave  
  41f357:	ret    

000000000041f358 <flatcc_builder_copy_buffer@@Base>:
  41f358:	push   rbp
  41f359:	mov    rbp,rsp
  41f35c:	sub    rsp,0x20
  41f360:	mov    QWORD PTR [rbp-0x8],rdi
  41f364:	mov    QWORD PTR [rbp-0x10],rsi
  41f368:	mov    QWORD PTR [rbp-0x18],rdx
  41f36c:	mov    rax,QWORD PTR [rbp-0x8]
  41f370:	mov    eax,DWORD PTR [rax+0x128]
  41f376:	test   eax,eax
  41f378:	jne    41f381 <flatcc_builder_copy_buffer@@Base+0x29>
  41f37a:	mov    eax,0x0
  41f37f:	jmp    41f3cd <flatcc_builder_copy_buffer@@Base+0x75>
  41f381:	mov    rax,QWORD PTR [rbp-0x8]
  41f385:	lea    rcx,[rax+0x130]
  41f38c:	mov    rdx,QWORD PTR [rbp-0x18]
  41f390:	mov    rax,QWORD PTR [rbp-0x10]
  41f394:	mov    rsi,rax
  41f397:	mov    rdi,rcx
  41f39a:	call   41ffca <flatcc_emitter_copy_buffer@@Base>
  41f39f:	mov    QWORD PTR [rbp-0x10],rax
  41f3a3:	cmp    QWORD PTR [rbp-0x10],0x0
  41f3a8:	jne    41f3c9 <flatcc_builder_copy_buffer@@Base+0x71>
  41f3aa:	lea    rcx,[rip+0x19b8f]        # 438f40 <flatcc_builder_padding_base@@Base+0xce0>
  41f3b1:	mov    edx,0x786
  41f3b6:	lea    rsi,[rip+0x190a3]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41f3bd:	lea    rdi,[rip+0x194d8]        # 43889c <flatcc_builder_padding_base@@Base+0x63c>
  41f3c4:	call   405080 <__assert_fail@plt>
  41f3c9:	mov    rax,QWORD PTR [rbp-0x10]
  41f3cd:	leave  
  41f3ce:	ret    

000000000041f3cf <flatcc_builder_finalize_buffer@@Base>:
  41f3cf:	push   rbp
  41f3d0:	mov    rbp,rsp
  41f3d3:	sub    rsp,0x20
  41f3d7:	mov    QWORD PTR [rbp-0x18],rdi
  41f3db:	mov    QWORD PTR [rbp-0x20],rsi
  41f3df:	mov    rax,QWORD PTR [rbp-0x18]
  41f3e3:	mov    rdi,rax
  41f3e6:	call   41f1df <flatcc_builder_get_buffer_size@@Base>
  41f3eb:	mov    QWORD PTR [rbp-0x10],rax
  41f3ef:	cmp    QWORD PTR [rbp-0x20],0x0
  41f3f4:	je     41f401 <flatcc_builder_finalize_buffer@@Base+0x32>
  41f3f6:	mov    rax,QWORD PTR [rbp-0x20]
  41f3fa:	mov    rdx,QWORD PTR [rbp-0x10]
  41f3fe:	mov    QWORD PTR [rax],rdx
  41f401:	mov    rax,QWORD PTR [rbp-0x10]
  41f405:	mov    rdi,rax
  41f408:	call   405100 <malloc@plt>
  41f40d:	mov    QWORD PTR [rbp-0x8],rax
  41f411:	cmp    QWORD PTR [rbp-0x8],0x0
  41f416:	jne    41f437 <flatcc_builder_finalize_buffer@@Base+0x68>
  41f418:	lea    rcx,[rip+0x19b41]        # 438f60 <flatcc_builder_padding_base@@Base+0xd00>
  41f41f:	mov    edx,0x798
  41f424:	lea    rsi,[rip+0x19035]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41f42b:	lea    rdi,[rip+0x1908e]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41f432:	call   405080 <__assert_fail@plt>
  41f437:	mov    rdx,QWORD PTR [rbp-0x10]
  41f43b:	mov    rcx,QWORD PTR [rbp-0x8]
  41f43f:	mov    rax,QWORD PTR [rbp-0x18]
  41f443:	mov    rsi,rcx
  41f446:	mov    rdi,rax
  41f449:	call   41f358 <flatcc_builder_copy_buffer@@Base>
  41f44e:	test   rax,rax
  41f451:	jne    41f472 <flatcc_builder_finalize_buffer@@Base+0xa3>
  41f453:	lea    rcx,[rip+0x19b06]        # 438f60 <flatcc_builder_padding_base@@Base+0xd00>
  41f45a:	mov    edx,0x79c
  41f45f:	lea    rsi,[rip+0x18ffa]        # 438460 <flatcc_builder_padding_base@@Base+0x200>
  41f466:	lea    rdi,[rip+0x19053]        # 4384c0 <flatcc_builder_padding_base@@Base+0x260>
  41f46d:	call   405080 <__assert_fail@plt>
  41f472:	cmp    QWORD PTR [rbp-0x8],0x0
  41f477:	jne    41f48b <flatcc_builder_finalize_buffer@@Base+0xbc>
  41f479:	cmp    QWORD PTR [rbp-0x20],0x0
  41f47e:	je     41f48b <flatcc_builder_finalize_buffer@@Base+0xbc>
  41f480:	mov    rax,QWORD PTR [rbp-0x20]
  41f484:	mov    QWORD PTR [rax],0x0
  41f48b:	mov    rax,QWORD PTR [rbp-0x8]
  41f48f:	leave  
  41f490:	ret    

000000000041f491 <flatcc_builder_finalize_aligned_buffer@@Base>:
  41f491:	push   rbp
  41f492:	mov    rbp,rsp
  41f495:	sub    rsp,0x30
  41f499:	mov    QWORD PTR [rbp-0x28],rdi
  41f49d:	mov    QWORD PTR [rbp-0x30],rsi
  41f4a1:	mov    rax,QWORD PTR [rbp-0x28]
  41f4a5:	mov    rdi,rax
  41f4a8:	call   41f1df <flatcc_builder_get_buffer_size@@Base>
  41f4ad:	mov    QWORD PTR [rbp-0x10],rax
  41f4b1:	cmp    QWORD PTR [rbp-0x30],0x0
  41f4b6:	je     41f4c3 <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  41f4b8:	mov    rax,QWORD PTR [rbp-0x30]
  41f4bc:	mov    rdx,QWORD PTR [rbp-0x10]
  41f4c0:	mov    QWORD PTR [rax],rdx
  41f4c3:	mov    rax,QWORD PTR [rbp-0x28]
  41f4c7:	mov    rdi,rax
  41f4ca:	call   41f12d <flatcc_builder_get_buffer_alignment@@Base>
  41f4cf:	movzx  eax,ax
  41f4d2:	mov    QWORD PTR [rbp-0x8],rax
  41f4d6:	mov    rdx,QWORD PTR [rbp-0x10]
  41f4da:	mov    rax,QWORD PTR [rbp-0x8]
  41f4de:	add    rax,rdx
  41f4e1:	lea    rdx,[rax-0x1]
  41f4e5:	mov    rax,QWORD PTR [rbp-0x8]
  41f4e9:	neg    rax
  41f4ec:	and    rax,rdx
  41f4ef:	mov    QWORD PTR [rbp-0x10],rax
  41f4f3:	mov    rdx,QWORD PTR [rbp-0x10]
  41f4f7:	mov    rax,QWORD PTR [rbp-0x8]
  41f4fb:	mov    rsi,rdx
  41f4fe:	mov    rdi,rax
  41f501:	call   419fe7 <main@@Base+0x96c>
  41f506:	mov    QWORD PTR [rbp-0x18],rax
  41f50a:	cmp    QWORD PTR [rbp-0x18],0x0
  41f50f:	je     41f543 <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  41f511:	mov    rdx,QWORD PTR [rbp-0x10]
  41f515:	mov    rcx,QWORD PTR [rbp-0x18]
  41f519:	mov    rax,QWORD PTR [rbp-0x28]
  41f51d:	mov    rsi,rcx
  41f520:	mov    rdi,rax
  41f523:	call   41f358 <flatcc_builder_copy_buffer@@Base>
  41f528:	test   rax,rax
  41f52b:	jne    41f544 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  41f52d:	mov    rax,QWORD PTR [rbp-0x18]
  41f531:	mov    rdi,rax
  41f534:	call   405030 <free@plt>
  41f539:	mov    QWORD PTR [rbp-0x18],0x0
  41f541:	jmp    41f544 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  41f543:	nop
  41f544:	cmp    QWORD PTR [rbp-0x18],0x0
  41f549:	jne    41f55d <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  41f54b:	cmp    QWORD PTR [rbp-0x30],0x0
  41f550:	je     41f55d <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  41f552:	mov    rax,QWORD PTR [rbp-0x30]
  41f556:	mov    QWORD PTR [rax],0x0
  41f55d:	mov    rax,QWORD PTR [rbp-0x18]
  41f561:	leave  
  41f562:	ret    

000000000041f563 <flatcc_builder_aligned_alloc@@Base>:
  41f563:	push   rbp
  41f564:	mov    rbp,rsp
  41f567:	sub    rsp,0x10
  41f56b:	mov    QWORD PTR [rbp-0x8],rdi
  41f56f:	mov    QWORD PTR [rbp-0x10],rsi
  41f573:	mov    rdx,QWORD PTR [rbp-0x10]
  41f577:	mov    rax,QWORD PTR [rbp-0x8]
  41f57b:	mov    rsi,rdx
  41f57e:	mov    rdi,rax
  41f581:	call   419fe7 <main@@Base+0x96c>
  41f586:	leave  
  41f587:	ret    

000000000041f588 <flatcc_builder_aligned_free@@Base>:
  41f588:	push   rbp
  41f589:	mov    rbp,rsp
  41f58c:	sub    rsp,0x10
  41f590:	mov    QWORD PTR [rbp-0x8],rdi
  41f594:	mov    rax,QWORD PTR [rbp-0x8]
  41f598:	mov    rdi,rax
  41f59b:	call   405030 <free@plt>
  41f5a0:	nop
  41f5a1:	leave  
  41f5a2:	ret    

000000000041f5a3 <flatcc_builder_get_emit_context@@Base>:
  41f5a3:	push   rbp
  41f5a4:	mov    rbp,rsp
  41f5a7:	mov    QWORD PTR [rbp-0x8],rdi
  41f5ab:	mov    rax,QWORD PTR [rbp-0x8]
  41f5af:	mov    rax,QWORD PTR [rax+0x38]
  41f5b3:	pop    rbp
  41f5b4:	ret    
  41f5b5:	push   rbp
  41f5b6:	mov    rbp,rsp
  41f5b9:	sub    rsp,0x20
  41f5bd:	mov    QWORD PTR [rbp-0x18],rdi
  41f5c1:	mov    QWORD PTR [rbp-0x8],0x0
  41f5c9:	mov    rax,QWORD PTR [rbp-0x18]
  41f5cd:	mov    rax,QWORD PTR [rax]
  41f5d0:	test   rax,rax
  41f5d3:	je     41f631 <flatcc_builder_get_emit_context@@Base+0x8e>
  41f5d5:	mov    rax,QWORD PTR [rbp-0x18]
  41f5d9:	mov    rax,QWORD PTR [rax]
  41f5dc:	mov    rdx,QWORD PTR [rax+0xb88]
  41f5e3:	mov    rax,QWORD PTR [rbp-0x18]
  41f5e7:	mov    rax,QWORD PTR [rax+0x8]
  41f5eb:	cmp    rdx,rax
  41f5ee:	je     41f631 <flatcc_builder_get_emit_context@@Base+0x8e>
  41f5f0:	mov    rax,QWORD PTR [rbp-0x18]
  41f5f4:	mov    rax,QWORD PTR [rax]
  41f5f7:	mov    rax,QWORD PTR [rax+0xb88]
  41f5fe:	mov    rdx,QWORD PTR [rbp-0x18]
  41f602:	mov    rdx,QWORD PTR [rdx]
  41f605:	mov    edx,DWORD PTR [rdx+0xb90]
  41f60b:	sub    edx,0xb80
  41f611:	mov    DWORD PTR [rax+0xb90],edx
  41f617:	mov    rax,QWORD PTR [rbp-0x18]
  41f61b:	mov    rax,QWORD PTR [rax]
  41f61e:	mov    rdx,QWORD PTR [rax+0xb88]
  41f625:	mov    rax,QWORD PTR [rbp-0x18]
  41f629:	mov    QWORD PTR [rax],rdx
  41f62c:	jmp    41f769 <flatcc_builder_get_emit_context@@Base+0x1c6>
  41f631:	mov    edi,0xb98
  41f636:	call   405100 <malloc@plt>
  41f63b:	mov    QWORD PTR [rbp-0x8],rax
  41f63f:	cmp    QWORD PTR [rbp-0x8],0x0
  41f644:	jne    41f650 <flatcc_builder_get_emit_context@@Base+0xad>
  41f646:	mov    eax,0xffffffff
  41f64b:	jmp    41f7b7 <flatcc_builder_get_emit_context@@Base+0x214>
  41f650:	mov    rax,QWORD PTR [rbp-0x18]
  41f654:	mov    rax,QWORD PTR [rax+0x38]
  41f658:	lea    rdx,[rax+0xb80]
  41f65f:	mov    rax,QWORD PTR [rbp-0x18]
  41f663:	mov    QWORD PTR [rax+0x38],rdx
  41f667:	mov    rax,QWORD PTR [rbp-0x18]
  41f66b:	mov    rax,QWORD PTR [rax]
  41f66e:	test   rax,rax
  41f671:	je     41f6cd <flatcc_builder_get_emit_context@@Base+0x12a>
  41f673:	mov    rax,QWORD PTR [rbp-0x18]
  41f677:	mov    rdx,QWORD PTR [rax+0x8]
  41f67b:	mov    rax,QWORD PTR [rbp-0x8]
  41f67f:	mov    QWORD PTR [rax+0xb88],rdx
  41f686:	mov    rax,QWORD PTR [rbp-0x18]
  41f68a:	mov    rdx,QWORD PTR [rax]
  41f68d:	mov    rax,QWORD PTR [rbp-0x8]
  41f691:	mov    QWORD PTR [rax+0xb80],rdx
  41f698:	mov    rax,QWORD PTR [rbp-0x18]
  41f69c:	mov    rax,QWORD PTR [rax]
  41f69f:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6a3:	mov    QWORD PTR [rax+0xb88],rdx
  41f6aa:	mov    rax,QWORD PTR [rbp-0x18]
  41f6ae:	mov    rax,QWORD PTR [rax+0x8]
  41f6b2:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6b6:	mov    QWORD PTR [rax+0xb80],rdx
  41f6bd:	mov    rax,QWORD PTR [rbp-0x18]
  41f6c1:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6c5:	mov    QWORD PTR [rax],rdx
  41f6c8:	jmp    41f769 <flatcc_builder_get_emit_context@@Base+0x1c6>
  41f6cd:	mov    rax,QWORD PTR [rbp-0x18]
  41f6d1:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6d5:	mov    QWORD PTR [rax],rdx
  41f6d8:	mov    rax,QWORD PTR [rbp-0x18]
  41f6dc:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6e0:	mov    QWORD PTR [rax+0x8],rdx
  41f6e4:	mov    rax,QWORD PTR [rbp-0x8]
  41f6e8:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6ec:	mov    QWORD PTR [rax+0xb80],rdx
  41f6f3:	mov    rax,QWORD PTR [rbp-0x8]
  41f6f7:	mov    rdx,QWORD PTR [rbp-0x8]
  41f6fb:	mov    QWORD PTR [rax+0xb88],rdx
  41f702:	mov    rax,QWORD PTR [rbp-0x18]
  41f706:	mov    rax,QWORD PTR [rax]
  41f709:	lea    rdx,[rax+0x5c0]
  41f710:	mov    rax,QWORD PTR [rbp-0x18]
  41f714:	mov    QWORD PTR [rax+0x10],rdx
  41f718:	mov    rax,QWORD PTR [rbp-0x18]
  41f71c:	mov    rdx,QWORD PTR [rax+0x10]
  41f720:	mov    rax,QWORD PTR [rbp-0x18]
  41f724:	mov    QWORD PTR [rax+0x20],rdx
  41f728:	mov    rax,QWORD PTR [rbp-0x18]
  41f72c:	mov    QWORD PTR [rax+0x18],0x5c0
  41f734:	mov    rax,QWORD PTR [rbp-0x18]
  41f738:	mov    rax,QWORD PTR [rax+0x18]
  41f73c:	mov    edx,0xb80
  41f741:	sub    rdx,rax
  41f744:	mov    rax,QWORD PTR [rbp-0x18]
  41f748:	mov    QWORD PTR [rax+0x28],rdx
  41f74c:	mov    rax,QWORD PTR [rbp-0x18]
  41f750:	mov    rax,QWORD PTR [rax+0x18]
  41f754:	neg    eax
  41f756:	mov    edx,eax
  41f758:	mov    rax,QWORD PTR [rbp-0x8]
  41f75c:	mov    DWORD PTR [rax+0xb90],edx
  41f762:	mov    eax,0x0
  41f767:	jmp    41f7b7 <flatcc_builder_get_emit_context@@Base+0x214>
  41f769:	mov    rax,QWORD PTR [rbp-0x18]
  41f76d:	mov    rax,QWORD PTR [rax]
  41f770:	lea    rdx,[rax+0xb80]
  41f777:	mov    rax,QWORD PTR [rbp-0x18]
  41f77b:	mov    QWORD PTR [rax+0x10],rdx
  41f77f:	mov    rax,QWORD PTR [rbp-0x18]
  41f783:	mov    QWORD PTR [rax+0x18],0xb80
  41f78b:	mov    rax,QWORD PTR [rbp-0x18]
  41f78f:	mov    rax,QWORD PTR [rax]
  41f792:	mov    rdx,QWORD PTR [rbp-0x18]
  41f796:	mov    rdx,QWORD PTR [rdx]
  41f799:	mov    rdx,QWORD PTR [rdx+0xb80]
  41f7a0:	mov    edx,DWORD PTR [rdx+0xb90]
  41f7a6:	sub    edx,0xb80
  41f7ac:	mov    DWORD PTR [rax+0xb90],edx
  41f7b2:	mov    eax,0x0
  41f7b7:	leave  
  41f7b8:	ret    
  41f7b9:	push   rbp
  41f7ba:	mov    rbp,rsp
  41f7bd:	sub    rsp,0x20
  41f7c1:	mov    QWORD PTR [rbp-0x18],rdi
  41f7c5:	mov    QWORD PTR [rbp-0x8],0x0
  41f7cd:	mov    rax,QWORD PTR [rbp-0x18]
  41f7d1:	mov    rax,QWORD PTR [rax+0x8]
  41f7d5:	test   rax,rax
  41f7d8:	je     41f811 <flatcc_builder_get_emit_context@@Base+0x26e>
  41f7da:	mov    rax,QWORD PTR [rbp-0x18]
  41f7de:	mov    rax,QWORD PTR [rax+0x8]
  41f7e2:	mov    rdx,QWORD PTR [rax+0xb80]
  41f7e9:	mov    rax,QWORD PTR [rbp-0x18]
  41f7ed:	mov    rax,QWORD PTR [rax]
  41f7f0:	cmp    rdx,rax
  41f7f3:	je     41f811 <flatcc_builder_get_emit_context@@Base+0x26e>
  41f7f5:	mov    rax,QWORD PTR [rbp-0x18]
  41f7f9:	mov    rax,QWORD PTR [rax+0x8]
  41f7fd:	mov    rdx,QWORD PTR [rax+0xb80]
  41f804:	mov    rax,QWORD PTR [rbp-0x18]
  41f808:	mov    QWORD PTR [rax+0x8],rdx
  41f80c:	jmp    41f94b <flatcc_builder_get_emit_context@@Base+0x3a8>
  41f811:	mov    edi,0xb98
  41f816:	call   405100 <malloc@plt>
  41f81b:	mov    QWORD PTR [rbp-0x8],rax
  41f81f:	cmp    QWORD PTR [rbp-0x8],0x0
  41f824:	jne    41f830 <flatcc_builder_get_emit_context@@Base+0x28d>
  41f826:	mov    eax,0xffffffff
  41f82b:	jmp    41f998 <flatcc_builder_get_emit_context@@Base+0x3f5>
  41f830:	mov    rax,QWORD PTR [rbp-0x18]
  41f834:	mov    rax,QWORD PTR [rax+0x38]
  41f838:	lea    rdx,[rax+0xb80]
  41f83f:	mov    rax,QWORD PTR [rbp-0x18]
  41f843:	mov    QWORD PTR [rax+0x38],rdx
  41f847:	mov    rax,QWORD PTR [rbp-0x18]
  41f84b:	mov    rax,QWORD PTR [rax+0x8]
  41f84f:	test   rax,rax
  41f852:	je     41f8af <flatcc_builder_get_emit_context@@Base+0x30c>
  41f854:	mov    rax,QWORD PTR [rbp-0x18]
  41f858:	mov    rdx,QWORD PTR [rax+0x8]
  41f85c:	mov    rax,QWORD PTR [rbp-0x8]
  41f860:	mov    QWORD PTR [rax+0xb88],rdx
  41f867:	mov    rax,QWORD PTR [rbp-0x18]
  41f86b:	mov    rdx,QWORD PTR [rax]
  41f86e:	mov    rax,QWORD PTR [rbp-0x8]
  41f872:	mov    QWORD PTR [rax+0xb80],rdx
  41f879:	mov    rax,QWORD PTR [rbp-0x18]
  41f87d:	mov    rax,QWORD PTR [rax]
  41f880:	mov    rdx,QWORD PTR [rbp-0x8]
  41f884:	mov    QWORD PTR [rax+0xb88],rdx
  41f88b:	mov    rax,QWORD PTR [rbp-0x18]
  41f88f:	mov    rax,QWORD PTR [rax+0x8]
  41f893:	mov    rdx,QWORD PTR [rbp-0x8]
  41f897:	mov    QWORD PTR [rax+0xb80],rdx
  41f89e:	mov    rax,QWORD PTR [rbp-0x18]
  41f8a2:	mov    rdx,QWORD PTR [rbp-0x8]
  41f8a6:	mov    QWORD PTR [rax+0x8],rdx
  41f8aa:	jmp    41f94b <flatcc_builder_get_emit_context@@Base+0x3a8>
  41f8af:	mov    rax,QWORD PTR [rbp-0x18]
  41f8b3:	mov    rdx,QWORD PTR [rbp-0x8]
  41f8b7:	mov    QWORD PTR [rax],rdx
  41f8ba:	mov    rax,QWORD PTR [rbp-0x18]
  41f8be:	mov    rdx,QWORD PTR [rbp-0x8]
  41f8c2:	mov    QWORD PTR [rax+0x8],rdx
  41f8c6:	mov    rax,QWORD PTR [rbp-0x8]
  41f8ca:	mov    rdx,QWORD PTR [rbp-0x8]
  41f8ce:	mov    QWORD PTR [rax+0xb80],rdx
  41f8d5:	mov    rax,QWORD PTR [rbp-0x8]
  41f8d9:	mov    rdx,QWORD PTR [rbp-0x8]
  41f8dd:	mov    QWORD PTR [rax+0xb88],rdx
  41f8e4:	mov    rax,QWORD PTR [rbp-0x18]
  41f8e8:	mov    rax,QWORD PTR [rax]
  41f8eb:	lea    rdx,[rax+0x5c0]
  41f8f2:	mov    rax,QWORD PTR [rbp-0x18]
  41f8f6:	mov    QWORD PTR [rax+0x10],rdx
  41f8fa:	mov    rax,QWORD PTR [rbp-0x18]
  41f8fe:	mov    rdx,QWORD PTR [rax+0x10]
  41f902:	mov    rax,QWORD PTR [rbp-0x18]
  41f906:	mov    QWORD PTR [rax+0x20],rdx
  41f90a:	mov    rax,QWORD PTR [rbp-0x18]
  41f90e:	mov    QWORD PTR [rax+0x18],0x5c0
  41f916:	mov    rax,QWORD PTR [rbp-0x18]
  41f91a:	mov    rax,QWORD PTR [rax+0x18]
  41f91e:	mov    edx,0xb80
  41f923:	sub    rdx,rax
  41f926:	mov    rax,QWORD PTR [rbp-0x18]
  41f92a:	mov    QWORD PTR [rax+0x28],rdx
  41f92e:	mov    rax,QWORD PTR [rbp-0x18]
  41f932:	mov    rax,QWORD PTR [rax+0x18]
  41f936:	neg    eax
  41f938:	mov    edx,eax
  41f93a:	mov    rax,QWORD PTR [rbp-0x8]
  41f93e:	mov    DWORD PTR [rax+0xb90],edx
  41f944:	mov    eax,0x0
  41f949:	jmp    41f998 <flatcc_builder_get_emit_context@@Base+0x3f5>
  41f94b:	mov    rax,QWORD PTR [rbp-0x18]
  41f94f:	mov    rax,QWORD PTR [rax+0x8]
  41f953:	mov    rdx,rax
  41f956:	mov    rax,QWORD PTR [rbp-0x18]
  41f95a:	mov    QWORD PTR [rax+0x20],rdx
  41f95e:	mov    rax,QWORD PTR [rbp-0x18]
  41f962:	mov    QWORD PTR [rax+0x28],0xb80
  41f96a:	mov    rax,QWORD PTR [rbp-0x18]
  41f96e:	mov    rax,QWORD PTR [rax+0x8]
  41f972:	mov    rdx,QWORD PTR [rbp-0x18]
  41f976:	mov    rdx,QWORD PTR [rdx+0x8]
  41f97a:	mov    rdx,QWORD PTR [rdx+0xb88]
  41f981:	mov    edx,DWORD PTR [rdx+0xb90]
  41f987:	add    edx,0xb80
  41f98d:	mov    DWORD PTR [rax+0xb90],edx
  41f993:	mov    eax,0x0
  41f998:	leave  
  41f999:	ret    
  41f99a:	push   rbp
  41f99b:	mov    rbp,rsp
  41f99e:	sub    rsp,0x30
  41f9a2:	mov    QWORD PTR [rbp-0x18],rdi
  41f9a6:	mov    QWORD PTR [rbp-0x20],rsi
  41f9aa:	mov    QWORD PTR [rbp-0x28],rdx
  41f9ae:	mov    rax,QWORD PTR [rbp-0x28]
  41f9b2:	add    QWORD PTR [rbp-0x20],rax
  41f9b6:	jmp    41fa5a <flatcc_builder_get_emit_context@@Base+0x4b7>
  41f9bb:	mov    rax,QWORD PTR [rbp-0x28]
  41f9bf:	mov    QWORD PTR [rbp-0x8],rax
  41f9c3:	mov    rax,QWORD PTR [rbp-0x18]
  41f9c7:	mov    rax,QWORD PTR [rax+0x18]
  41f9cb:	cmp    rax,QWORD PTR [rbp-0x8]
  41f9cf:	jae    41f9fb <flatcc_builder_get_emit_context@@Base+0x458>
  41f9d1:	mov    rax,QWORD PTR [rbp-0x18]
  41f9d5:	mov    rax,QWORD PTR [rax+0x18]
  41f9d9:	mov    QWORD PTR [rbp-0x8],rax
  41f9dd:	cmp    QWORD PTR [rbp-0x8],0x0
  41f9e2:	jne    41f9fb <flatcc_builder_get_emit_context@@Base+0x458>
  41f9e4:	mov    rax,QWORD PTR [rbp-0x18]
  41f9e8:	mov    rdi,rax
  41f9eb:	call   41f5b5 <flatcc_builder_get_emit_context@@Base+0x12>
  41f9f0:	test   eax,eax
  41f9f2:	je     41fa5a <flatcc_builder_get_emit_context@@Base+0x4b7>
  41f9f4:	mov    eax,0xffffffff
  41f9f9:	jmp    41fa6a <flatcc_builder_get_emit_context@@Base+0x4c7>
  41f9fb:	mov    rax,QWORD PTR [rbp-0x18]
  41f9ff:	mov    rax,QWORD PTR [rax+0x10]
  41fa03:	mov    rdx,QWORD PTR [rbp-0x8]
  41fa07:	neg    rdx
  41fa0a:	add    rdx,rax
  41fa0d:	mov    rax,QWORD PTR [rbp-0x18]
  41fa11:	mov    QWORD PTR [rax+0x10],rdx
  41fa15:	mov    rax,QWORD PTR [rbp-0x18]
  41fa19:	mov    rax,QWORD PTR [rax+0x18]
  41fa1d:	sub    rax,QWORD PTR [rbp-0x8]
  41fa21:	mov    rdx,rax
  41fa24:	mov    rax,QWORD PTR [rbp-0x18]
  41fa28:	mov    QWORD PTR [rax+0x18],rdx
  41fa2c:	mov    rax,QWORD PTR [rbp-0x8]
  41fa30:	neg    rax
  41fa33:	add    QWORD PTR [rbp-0x20],rax
  41fa37:	mov    rax,QWORD PTR [rbp-0x8]
  41fa3b:	sub    QWORD PTR [rbp-0x28],rax
  41fa3f:	mov    rax,QWORD PTR [rbp-0x18]
  41fa43:	mov    rax,QWORD PTR [rax+0x10]
  41fa47:	mov    rdx,QWORD PTR [rbp-0x8]
  41fa4b:	mov    rcx,QWORD PTR [rbp-0x20]
  41fa4f:	mov    rsi,rcx
  41fa52:	mov    rdi,rax
  41fa55:	call   4050f0 <memcpy@plt>
  41fa5a:	cmp    QWORD PTR [rbp-0x28],0x0
  41fa5f:	jne    41f9bb <flatcc_builder_get_emit_context@@Base+0x418>
  41fa65:	mov    eax,0x0
  41fa6a:	leave  
  41fa6b:	ret    
  41fa6c:	push   rbp
  41fa6d:	mov    rbp,rsp
  41fa70:	sub    rsp,0x30
  41fa74:	mov    QWORD PTR [rbp-0x18],rdi
  41fa78:	mov    QWORD PTR [rbp-0x20],rsi
  41fa7c:	mov    QWORD PTR [rbp-0x28],rdx
  41fa80:	jmp    41fb1e <flatcc_builder_get_emit_context@@Base+0x57b>
  41fa85:	mov    rax,QWORD PTR [rbp-0x28]
  41fa89:	mov    QWORD PTR [rbp-0x8],rax
  41fa8d:	mov    rax,QWORD PTR [rbp-0x18]
  41fa91:	mov    rax,QWORD PTR [rax+0x28]
  41fa95:	cmp    rax,QWORD PTR [rbp-0x8]
  41fa99:	jae    41fac5 <flatcc_builder_get_emit_context@@Base+0x522>
  41fa9b:	mov    rax,QWORD PTR [rbp-0x18]
  41fa9f:	mov    rax,QWORD PTR [rax+0x28]
  41faa3:	mov    QWORD PTR [rbp-0x8],rax
  41faa7:	cmp    QWORD PTR [rbp-0x8],0x0
  41faac:	jne    41fac5 <flatcc_builder_get_emit_context@@Base+0x522>
  41faae:	mov    rax,QWORD PTR [rbp-0x18]
  41fab2:	mov    rdi,rax
  41fab5:	call   41f7b9 <flatcc_builder_get_emit_context@@Base+0x216>
  41faba:	test   eax,eax
  41fabc:	je     41fb1e <flatcc_builder_get_emit_context@@Base+0x57b>
  41fabe:	mov    eax,0xffffffff
  41fac3:	jmp    41fb2e <flatcc_builder_get_emit_context@@Base+0x58b>
  41fac5:	mov    rax,QWORD PTR [rbp-0x18]
  41fac9:	mov    rax,QWORD PTR [rax+0x20]
  41facd:	mov    rdx,QWORD PTR [rbp-0x8]
  41fad1:	mov    rcx,QWORD PTR [rbp-0x20]
  41fad5:	mov    rsi,rcx
  41fad8:	mov    rdi,rax
  41fadb:	call   4050f0 <memcpy@plt>
  41fae0:	mov    rax,QWORD PTR [rbp-0x8]
  41fae4:	sub    QWORD PTR [rbp-0x28],rax
  41fae8:	mov    rax,QWORD PTR [rbp-0x8]
  41faec:	add    QWORD PTR [rbp-0x20],rax
  41faf0:	mov    rax,QWORD PTR [rbp-0x18]
  41faf4:	mov    rdx,QWORD PTR [rax+0x20]
  41faf8:	mov    rax,QWORD PTR [rbp-0x8]
  41fafc:	add    rdx,rax
  41faff:	mov    rax,QWORD PTR [rbp-0x18]
  41fb03:	mov    QWORD PTR [rax+0x20],rdx
  41fb07:	mov    rax,QWORD PTR [rbp-0x18]
  41fb0b:	mov    rax,QWORD PTR [rax+0x28]
  41fb0f:	sub    rax,QWORD PTR [rbp-0x8]
  41fb13:	mov    rdx,rax
  41fb16:	mov    rax,QWORD PTR [rbp-0x18]
  41fb1a:	mov    QWORD PTR [rax+0x28],rdx
  41fb1e:	cmp    QWORD PTR [rbp-0x28],0x0
  41fb23:	jne    41fa85 <flatcc_builder_get_emit_context@@Base+0x4e2>
  41fb29:	mov    eax,0x0
  41fb2e:	leave  
  41fb2f:	ret    

000000000041fb30 <flatcc_emitter_recycle_page@@Base>:
  41fb30:	push   rbp
  41fb31:	mov    rbp,rsp
  41fb34:	mov    QWORD PTR [rbp-0x8],rdi
  41fb38:	mov    QWORD PTR [rbp-0x10],rsi
  41fb3c:	mov    rax,QWORD PTR [rbp-0x8]
  41fb40:	mov    rax,QWORD PTR [rax]
  41fb43:	cmp    rax,QWORD PTR [rbp-0x10]
  41fb47:	je     41fb57 <flatcc_emitter_recycle_page@@Base+0x27>
  41fb49:	mov    rax,QWORD PTR [rbp-0x8]
  41fb4d:	mov    rax,QWORD PTR [rax+0x8]
  41fb51:	cmp    rax,QWORD PTR [rbp-0x10]
  41fb55:	jne    41fb61 <flatcc_emitter_recycle_page@@Base+0x31>
  41fb57:	mov    eax,0xffffffff
  41fb5c:	jmp    41fbf7 <flatcc_emitter_recycle_page@@Base+0xc7>
  41fb61:	mov    rax,QWORD PTR [rbp-0x10]
  41fb65:	mov    rax,QWORD PTR [rax+0xb80]
  41fb6c:	mov    rdx,QWORD PTR [rbp-0x10]
  41fb70:	mov    rdx,QWORD PTR [rdx+0xb88]
  41fb77:	mov    QWORD PTR [rax+0xb88],rdx
  41fb7e:	mov    rax,QWORD PTR [rbp-0x10]
  41fb82:	mov    rax,QWORD PTR [rax+0xb88]
  41fb89:	mov    rdx,QWORD PTR [rbp-0x10]
  41fb8d:	mov    rdx,QWORD PTR [rdx+0xb80]
  41fb94:	mov    QWORD PTR [rax+0xb80],rdx
  41fb9b:	mov    rax,QWORD PTR [rbp-0x8]
  41fb9f:	mov    rax,QWORD PTR [rax]
  41fba2:	mov    rdx,QWORD PTR [rax+0xb88]
  41fba9:	mov    rax,QWORD PTR [rbp-0x10]
  41fbad:	mov    QWORD PTR [rax+0xb88],rdx
  41fbb4:	mov    rax,QWORD PTR [rbp-0x8]
  41fbb8:	mov    rdx,QWORD PTR [rax]
  41fbbb:	mov    rax,QWORD PTR [rbp-0x10]
  41fbbf:	mov    QWORD PTR [rax+0xb80],rdx
  41fbc6:	mov    rax,QWORD PTR [rbp-0x10]
  41fbca:	mov    rax,QWORD PTR [rax+0xb88]
  41fbd1:	mov    rdx,QWORD PTR [rbp-0x10]
  41fbd5:	mov    QWORD PTR [rax+0xb80],rdx
  41fbdc:	mov    rax,QWORD PTR [rbp-0x10]
  41fbe0:	mov    rax,QWORD PTR [rax+0xb80]
  41fbe7:	mov    rdx,QWORD PTR [rbp-0x10]
  41fbeb:	mov    QWORD PTR [rax+0xb88],rdx
  41fbf2:	mov    eax,0x0
  41fbf7:	pop    rbp
  41fbf8:	ret    

000000000041fbf9 <flatcc_emitter_reset@@Base>:
  41fbf9:	push   rbp
  41fbfa:	mov    rbp,rsp
  41fbfd:	sub    rsp,0x20
  41fc01:	mov    QWORD PTR [rbp-0x18],rdi
  41fc05:	mov    rax,QWORD PTR [rbp-0x18]
  41fc09:	mov    rax,QWORD PTR [rax]
  41fc0c:	mov    QWORD PTR [rbp-0x8],rax
  41fc10:	mov    rax,QWORD PTR [rbp-0x18]
  41fc14:	mov    rax,QWORD PTR [rax]
  41fc17:	test   rax,rax
  41fc1a:	je     41fd82 <flatcc_emitter_reset@@Base+0x189>
  41fc20:	mov    rax,QWORD PTR [rbp-0x18]
  41fc24:	mov    rdx,QWORD PTR [rax]
  41fc27:	mov    rax,QWORD PTR [rbp-0x18]
  41fc2b:	mov    QWORD PTR [rax+0x8],rdx
  41fc2f:	mov    rax,QWORD PTR [rbp-0x18]
  41fc33:	mov    rax,QWORD PTR [rax]
  41fc36:	lea    rdx,[rax+0x5c0]
  41fc3d:	mov    rax,QWORD PTR [rbp-0x18]
  41fc41:	mov    QWORD PTR [rax+0x10],rdx
  41fc45:	mov    rax,QWORD PTR [rbp-0x18]
  41fc49:	mov    rdx,QWORD PTR [rax+0x10]
  41fc4d:	mov    rax,QWORD PTR [rbp-0x18]
  41fc51:	mov    QWORD PTR [rax+0x20],rdx
  41fc55:	mov    rax,QWORD PTR [rbp-0x18]
  41fc59:	mov    QWORD PTR [rax+0x18],0x5c0
  41fc61:	mov    rax,QWORD PTR [rbp-0x18]
  41fc65:	mov    QWORD PTR [rax+0x28],0x5c0
  41fc6d:	mov    rax,QWORD PTR [rbp-0x18]
  41fc71:	mov    rax,QWORD PTR [rax]
  41fc74:	mov    rdx,QWORD PTR [rbp-0x18]
  41fc78:	mov    rdx,QWORD PTR [rdx+0x18]
  41fc7c:	neg    edx
  41fc7e:	mov    DWORD PTR [rax+0xb90],edx
  41fc84:	mov    rax,QWORD PTR [rbp-0x18]
  41fc88:	mov    rax,QWORD PTR [rax+0x40]
  41fc8c:	test   rax,rax
  41fc8f:	jne    41fca1 <flatcc_emitter_reset@@Base+0xa8>
  41fc91:	mov    rax,QWORD PTR [rbp-0x18]
  41fc95:	mov    rdx,QWORD PTR [rax+0x30]
  41fc99:	mov    rax,QWORD PTR [rbp-0x18]
  41fc9d:	mov    QWORD PTR [rax+0x40],rdx
  41fca1:	mov    rax,QWORD PTR [rbp-0x18]
  41fca5:	mov    rdx,QWORD PTR [rax+0x40]
  41fca9:	mov    rax,rdx
  41fcac:	add    rax,rax
  41fcaf:	add    rax,rdx
  41fcb2:	shr    rax,0x2
  41fcb6:	mov    rdx,rax
  41fcb9:	mov    rax,QWORD PTR [rbp-0x18]
  41fcbd:	mov    rax,QWORD PTR [rax+0x30]
  41fcc1:	shr    rax,0x2
  41fcc5:	add    rdx,rax
  41fcc8:	mov    rax,QWORD PTR [rbp-0x18]
  41fccc:	mov    QWORD PTR [rax+0x40],rdx
  41fcd0:	mov    rax,QWORD PTR [rbp-0x18]
  41fcd4:	mov    QWORD PTR [rax+0x30],0x0
  41fcdc:	jmp    41fd48 <flatcc_emitter_reset@@Base+0x14f>
  41fcde:	mov    rax,QWORD PTR [rbp-0x18]
  41fce2:	mov    rax,QWORD PTR [rax+0x8]
  41fce6:	mov    rax,QWORD PTR [rax+0xb80]
  41fced:	mov    QWORD PTR [rbp-0x8],rax
  41fcf1:	mov    rax,QWORD PTR [rbp-0x18]
  41fcf5:	mov    rax,QWORD PTR [rax+0x8]
  41fcf9:	mov    rdx,QWORD PTR [rbp-0x8]
  41fcfd:	mov    rdx,QWORD PTR [rdx+0xb80]
  41fd04:	mov    QWORD PTR [rax+0xb80],rdx
  41fd0b:	mov    rax,QWORD PTR [rbp-0x8]
  41fd0f:	mov    rax,QWORD PTR [rax+0xb80]
  41fd16:	mov    rdx,QWORD PTR [rbp-0x18]
  41fd1a:	mov    rdx,QWORD PTR [rdx+0x8]
  41fd1e:	mov    QWORD PTR [rax+0xb88],rdx
  41fd25:	mov    rax,QWORD PTR [rbp-0x8]
  41fd29:	mov    rdi,rax
  41fd2c:	call   405030 <free@plt>
  41fd31:	mov    rax,QWORD PTR [rbp-0x18]
  41fd35:	mov    rax,QWORD PTR [rax+0x38]
  41fd39:	lea    rdx,[rax-0xb80]
  41fd40:	mov    rax,QWORD PTR [rbp-0x18]
  41fd44:	mov    QWORD PTR [rax+0x38],rdx
  41fd48:	mov    rax,QWORD PTR [rbp-0x18]
  41fd4c:	mov    rax,QWORD PTR [rax+0x40]
  41fd50:	lea    rdx,[rax+rax*1]
  41fd54:	mov    rax,QWORD PTR [rbp-0x18]
  41fd58:	mov    rax,QWORD PTR [rax+0x38]
  41fd5c:	cmp    rdx,rax
  41fd5f:	jae    41fd83 <flatcc_emitter_reset@@Base+0x18a>
  41fd61:	mov    rax,QWORD PTR [rbp-0x18]
  41fd65:	mov    rax,QWORD PTR [rax+0x8]
  41fd69:	mov    rdx,QWORD PTR [rax+0xb80]
  41fd70:	mov    rax,QWORD PTR [rbp-0x18]
  41fd74:	mov    rax,QWORD PTR [rax]
  41fd77:	cmp    rdx,rax
  41fd7a:	jne    41fcde <flatcc_emitter_reset@@Base+0xe5>
  41fd80:	jmp    41fd83 <flatcc_emitter_reset@@Base+0x18a>
  41fd82:	nop
  41fd83:	leave  
  41fd84:	ret    

000000000041fd85 <flatcc_emitter_clear@@Base>:
  41fd85:	push   rbp
  41fd86:	mov    rbp,rsp
  41fd89:	sub    rsp,0x20
  41fd8d:	mov    QWORD PTR [rbp-0x18],rdi
  41fd91:	mov    rax,QWORD PTR [rbp-0x18]
  41fd95:	mov    rax,QWORD PTR [rax]
  41fd98:	mov    QWORD PTR [rbp-0x8],rax
  41fd9c:	cmp    QWORD PTR [rbp-0x8],0x0
  41fda1:	je     41fe11 <flatcc_emitter_clear@@Base+0x8c>
  41fda3:	mov    rax,QWORD PTR [rbp-0x8]
  41fda7:	mov    rax,QWORD PTR [rax+0xb88]
  41fdae:	mov    QWORD PTR [rax+0xb80],0x0
  41fdb9:	jmp    41fddd <flatcc_emitter_clear@@Base+0x58>
  41fdbb:	mov    rax,QWORD PTR [rbp-0x8]
  41fdbf:	mov    rax,QWORD PTR [rax+0xb80]
  41fdc6:	mov    QWORD PTR [rbp-0x8],rax
  41fdca:	mov    rax,QWORD PTR [rbp-0x8]
  41fdce:	mov    rax,QWORD PTR [rax+0xb88]
  41fdd5:	mov    rdi,rax
  41fdd8:	call   405030 <free@plt>
  41fddd:	mov    rax,QWORD PTR [rbp-0x8]
  41fde1:	mov    rax,QWORD PTR [rax+0xb80]
  41fde8:	test   rax,rax
  41fdeb:	jne    41fdbb <flatcc_emitter_clear@@Base+0x36>
  41fded:	mov    rax,QWORD PTR [rbp-0x8]
  41fdf1:	mov    rdi,rax
  41fdf4:	call   405030 <free@plt>
  41fdf9:	mov    rax,QWORD PTR [rbp-0x18]
  41fdfd:	mov    edx,0x48
  41fe02:	mov    esi,0x0
  41fe07:	mov    rdi,rax
  41fe0a:	call   405090 <memset@plt>
  41fe0f:	jmp    41fe12 <flatcc_emitter_clear@@Base+0x8d>
  41fe11:	nop
  41fe12:	leave  
  41fe13:	ret    

000000000041fe14 <flatcc_emitter@@Base>:
  41fe14:	push   rbp
  41fe15:	mov    rbp,rsp
  41fe18:	sub    rsp,0x30
  41fe1c:	mov    QWORD PTR [rbp-0x18],rdi
  41fe20:	mov    QWORD PTR [rbp-0x20],rsi
  41fe24:	mov    DWORD PTR [rbp-0x24],edx
  41fe27:	mov    DWORD PTR [rbp-0x28],ecx
  41fe2a:	mov    QWORD PTR [rbp-0x30],r8
  41fe2e:	mov    rax,QWORD PTR [rbp-0x18]
  41fe32:	mov    QWORD PTR [rbp-0x8],rax
  41fe36:	mov    rax,QWORD PTR [rbp-0x8]
  41fe3a:	mov    rdx,QWORD PTR [rax+0x30]
  41fe3e:	mov    rax,QWORD PTR [rbp-0x30]
  41fe42:	add    rdx,rax
  41fe45:	mov    rax,QWORD PTR [rbp-0x8]
  41fe49:	mov    QWORD PTR [rax+0x30],rdx
  41fe4d:	cmp    DWORD PTR [rbp-0x28],0x0
  41fe51:	jns    41fef9 <flatcc_emitter@@Base+0xe5>
  41fe57:	mov    rax,QWORD PTR [rbp-0x8]
  41fe5b:	mov    rax,QWORD PTR [rax+0x18]
  41fe5f:	cmp    rax,QWORD PTR [rbp-0x30]
  41fe63:	jb     41fea7 <flatcc_emitter@@Base+0x93>
  41fe65:	mov    rax,QWORD PTR [rbp-0x8]
  41fe69:	mov    rax,QWORD PTR [rax+0x10]
  41fe6d:	mov    rdx,QWORD PTR [rbp-0x30]
  41fe71:	neg    rdx
  41fe74:	add    rdx,rax
  41fe77:	mov    rax,QWORD PTR [rbp-0x8]
  41fe7b:	mov    QWORD PTR [rax+0x10],rdx
  41fe7f:	mov    rax,QWORD PTR [rbp-0x8]
  41fe83:	mov    rax,QWORD PTR [rax+0x18]
  41fe87:	sub    rax,QWORD PTR [rbp-0x30]
  41fe8b:	mov    rdx,rax
  41fe8e:	mov    rax,QWORD PTR [rbp-0x8]
  41fe92:	mov    QWORD PTR [rax+0x18],rdx
  41fe96:	mov    rax,QWORD PTR [rbp-0x8]
  41fe9a:	mov    rax,QWORD PTR [rax+0x10]
  41fe9e:	mov    QWORD PTR [rbp-0x10],rax
  41fea2:	jmp    41ff85 <flatcc_emitter@@Base+0x171>
  41fea7:	mov    eax,DWORD PTR [rbp-0x24]
  41feaa:	cdqe   
  41feac:	shl    rax,0x4
  41feb0:	add    QWORD PTR [rbp-0x20],rax
  41feb4:	jmp    41fee7 <flatcc_emitter@@Base+0xd3>
  41feb6:	sub    QWORD PTR [rbp-0x20],0x10
  41febb:	mov    rax,QWORD PTR [rbp-0x20]
  41febf:	mov    rdx,QWORD PTR [rax+0x8]
  41fec3:	mov    rax,QWORD PTR [rbp-0x20]
  41fec7:	mov    rcx,QWORD PTR [rax]
  41feca:	mov    rax,QWORD PTR [rbp-0x8]
  41fece:	mov    rsi,rcx
  41fed1:	mov    rdi,rax
  41fed4:	call   41f99a <flatcc_builder_get_emit_context@@Base+0x3f7>
  41fed9:	test   eax,eax
  41fedb:	je     41fee7 <flatcc_emitter@@Base+0xd3>
  41fedd:	mov    eax,0xffffffff
  41fee2:	jmp    41ffc8 <flatcc_emitter@@Base+0x1b4>
  41fee7:	mov    eax,DWORD PTR [rbp-0x24]
  41feea:	lea    edx,[rax-0x1]
  41feed:	mov    DWORD PTR [rbp-0x24],edx
  41fef0:	test   eax,eax
  41fef2:	jne    41feb6 <flatcc_emitter@@Base+0xa2>
  41fef4:	jmp    41ff7e <flatcc_emitter@@Base+0x16a>
  41fef9:	mov    rax,QWORD PTR [rbp-0x8]
  41fefd:	mov    rax,QWORD PTR [rax+0x28]
  41ff01:	cmp    rax,QWORD PTR [rbp-0x30]
  41ff05:	jb     41ff71 <flatcc_emitter@@Base+0x15d>
  41ff07:	mov    rax,QWORD PTR [rbp-0x8]
  41ff0b:	mov    rax,QWORD PTR [rax+0x20]
  41ff0f:	mov    QWORD PTR [rbp-0x10],rax
  41ff13:	mov    rax,QWORD PTR [rbp-0x8]
  41ff17:	mov    rdx,QWORD PTR [rax+0x20]
  41ff1b:	mov    rax,QWORD PTR [rbp-0x30]
  41ff1f:	add    rdx,rax
  41ff22:	mov    rax,QWORD PTR [rbp-0x8]
  41ff26:	mov    QWORD PTR [rax+0x20],rdx
  41ff2a:	mov    rax,QWORD PTR [rbp-0x8]
  41ff2e:	mov    rax,QWORD PTR [rax+0x28]
  41ff32:	sub    rax,QWORD PTR [rbp-0x30]
  41ff36:	mov    rdx,rax
  41ff39:	mov    rax,QWORD PTR [rbp-0x8]
  41ff3d:	mov    QWORD PTR [rax+0x28],rdx
  41ff41:	jmp    41ff85 <flatcc_emitter@@Base+0x171>
  41ff43:	mov    rax,QWORD PTR [rbp-0x20]
  41ff47:	mov    rdx,QWORD PTR [rax+0x8]
  41ff4b:	mov    rax,QWORD PTR [rbp-0x20]
  41ff4f:	mov    rcx,QWORD PTR [rax]
  41ff52:	mov    rax,QWORD PTR [rbp-0x8]
  41ff56:	mov    rsi,rcx
  41ff59:	mov    rdi,rax
  41ff5c:	call   41fa6c <flatcc_builder_get_emit_context@@Base+0x4c9>
  41ff61:	test   eax,eax
  41ff63:	je     41ff6c <flatcc_emitter@@Base+0x158>
  41ff65:	mov    eax,0xffffffff
  41ff6a:	jmp    41ffc8 <flatcc_emitter@@Base+0x1b4>
  41ff6c:	add    QWORD PTR [rbp-0x20],0x10
  41ff71:	mov    eax,DWORD PTR [rbp-0x24]
  41ff74:	lea    edx,[rax-0x1]
  41ff77:	mov    DWORD PTR [rbp-0x24],edx
  41ff7a:	test   eax,eax
  41ff7c:	jne    41ff43 <flatcc_emitter@@Base+0x12f>
  41ff7e:	mov    eax,0x0
  41ff83:	jmp    41ffc8 <flatcc_emitter@@Base+0x1b4>
  41ff85:	jmp    41ffb6 <flatcc_emitter@@Base+0x1a2>
  41ff87:	mov    rax,QWORD PTR [rbp-0x20]
  41ff8b:	mov    rdx,QWORD PTR [rax+0x8]
  41ff8f:	mov    rax,QWORD PTR [rbp-0x20]
  41ff93:	mov    rcx,QWORD PTR [rax]
  41ff96:	mov    rax,QWORD PTR [rbp-0x10]
  41ff9a:	mov    rsi,rcx
  41ff9d:	mov    rdi,rax
  41ffa0:	call   4050f0 <memcpy@plt>
  41ffa5:	mov    rax,QWORD PTR [rbp-0x20]
  41ffa9:	mov    rax,QWORD PTR [rax+0x8]
  41ffad:	add    QWORD PTR [rbp-0x10],rax
  41ffb1:	add    QWORD PTR [rbp-0x20],0x10
  41ffb6:	mov    eax,DWORD PTR [rbp-0x24]
  41ffb9:	lea    edx,[rax-0x1]
  41ffbc:	mov    DWORD PTR [rbp-0x24],edx
  41ffbf:	test   eax,eax
  41ffc1:	jne    41ff87 <flatcc_emitter@@Base+0x173>
  41ffc3:	mov    eax,0x0
  41ffc8:	leave  
  41ffc9:	ret    

000000000041ffca <flatcc_emitter_copy_buffer@@Base>:
  41ffca:	push   rbp
  41ffcb:	mov    rbp,rsp
  41ffce:	sub    rsp,0x30
  41ffd2:	mov    QWORD PTR [rbp-0x18],rdi
  41ffd6:	mov    QWORD PTR [rbp-0x20],rsi
  41ffda:	mov    QWORD PTR [rbp-0x28],rdx
  41ffde:	mov    rax,QWORD PTR [rbp-0x18]
  41ffe2:	mov    rax,QWORD PTR [rax+0x30]
  41ffe6:	cmp    rax,QWORD PTR [rbp-0x28]
  41ffea:	jbe    41fff6 <flatcc_emitter_copy_buffer@@Base+0x2c>
  41ffec:	mov    eax,0x0
  41fff1:	jmp    4200fa <flatcc_emitter_copy_buffer@@Base+0x130>
  41fff6:	mov    rax,QWORD PTR [rbp-0x18]
  41fffa:	mov    rax,QWORD PTR [rax]
  41fffd:	test   rax,rax
  420000:	jne    42000c <flatcc_emitter_copy_buffer@@Base+0x42>
  420002:	mov    eax,0x0
  420007:	jmp    4200fa <flatcc_emitter_copy_buffer@@Base+0x130>
  42000c:	mov    rax,QWORD PTR [rbp-0x18]
  420010:	mov    rdx,QWORD PTR [rax]
  420013:	mov    rax,QWORD PTR [rbp-0x18]
  420017:	mov    rax,QWORD PTR [rax+0x8]
  42001b:	cmp    rdx,rax
  42001e:	jne    420048 <flatcc_emitter_copy_buffer@@Base+0x7e>
  420020:	mov    rax,QWORD PTR [rbp-0x18]
  420024:	mov    rdx,QWORD PTR [rax+0x30]
  420028:	mov    rax,QWORD PTR [rbp-0x18]
  42002c:	mov    rcx,QWORD PTR [rax+0x10]
  420030:	mov    rax,QWORD PTR [rbp-0x20]
  420034:	mov    rsi,rcx
  420037:	mov    rdi,rax
  42003a:	call   4050f0 <memcpy@plt>
  42003f:	mov    rax,QWORD PTR [rbp-0x20]
  420043:	jmp    4200fa <flatcc_emitter_copy_buffer@@Base+0x130>
  420048:	mov    rax,QWORD PTR [rbp-0x18]
  42004c:	mov    rax,QWORD PTR [rax+0x18]
  420050:	mov    edx,0xb80
  420055:	sub    rdx,rax
  420058:	mov    rax,rdx
  42005b:	mov    QWORD PTR [rbp-0x8],rax
  42005f:	mov    rax,QWORD PTR [rbp-0x18]
  420063:	mov    rcx,QWORD PTR [rax+0x10]
  420067:	mov    rdx,QWORD PTR [rbp-0x8]
  42006b:	mov    rax,QWORD PTR [rbp-0x20]
  42006f:	mov    rsi,rcx
  420072:	mov    rdi,rax
  420075:	call   4050f0 <memcpy@plt>
  42007a:	mov    rax,QWORD PTR [rbp-0x8]
  42007e:	add    QWORD PTR [rbp-0x20],rax
  420082:	mov    rax,QWORD PTR [rbp-0x18]
  420086:	mov    rax,QWORD PTR [rax]
  420089:	mov    rax,QWORD PTR [rax+0xb80]
  420090:	mov    QWORD PTR [rbp-0x10],rax
  420094:	jmp    4200c5 <flatcc_emitter_copy_buffer@@Base+0xfb>
  420096:	mov    rcx,QWORD PTR [rbp-0x10]
  42009a:	mov    rax,QWORD PTR [rbp-0x20]
  42009e:	mov    edx,0xb80
  4200a3:	mov    rsi,rcx
  4200a6:	mov    rdi,rax
  4200a9:	call   4050f0 <memcpy@plt>
  4200ae:	add    QWORD PTR [rbp-0x20],0xb80
  4200b6:	mov    rax,QWORD PTR [rbp-0x10]
  4200ba:	mov    rax,QWORD PTR [rax+0xb80]
  4200c1:	mov    QWORD PTR [rbp-0x10],rax
  4200c5:	mov    rax,QWORD PTR [rbp-0x18]
  4200c9:	mov    rax,QWORD PTR [rax+0x8]
  4200cd:	cmp    rax,QWORD PTR [rbp-0x10]
  4200d1:	jne    420096 <flatcc_emitter_copy_buffer@@Base+0xcc>
  4200d3:	mov    rax,QWORD PTR [rbp-0x18]
  4200d7:	mov    rax,QWORD PTR [rax+0x28]
  4200db:	mov    edx,0xb80
  4200e0:	sub    rdx,rax
  4200e3:	mov    rcx,QWORD PTR [rbp-0x10]
  4200e7:	mov    rax,QWORD PTR [rbp-0x20]
  4200eb:	mov    rsi,rcx
  4200ee:	mov    rdi,rax
  4200f1:	call   4050f0 <memcpy@plt>
  4200f6:	mov    rax,QWORD PTR [rbp-0x20]
  4200fa:	leave  
  4200fb:	ret    
  4200fc:	push   rbp
  4200fd:	mov    rbp,rsp
  420100:	mov    DWORD PTR [rbp-0x4],edi
  420103:	mov    eax,DWORD PTR [rbp-0x4]
  420106:	pop    rbp
  420107:	ret    
  420108:	push   rbp
  420109:	mov    rbp,rsp
  42010c:	sub    rsp,0x8
  420110:	mov    QWORD PTR [rbp-0x8],rdi
  420114:	mov    rax,QWORD PTR [rbp-0x8]
  420118:	mov    eax,DWORD PTR [rax]
  42011a:	mov    edi,eax
  42011c:	call   4200fc <flatcc_emitter_copy_buffer@@Base+0x132>
  420121:	leave  
  420122:	ret    
  420123:	push   rbp
  420124:	mov    rbp,rsp
  420127:	mov    eax,edi
  420129:	mov    WORD PTR [rbp-0x4],ax
  42012d:	movzx  eax,WORD PTR [rbp-0x4]
  420131:	pop    rbp
  420132:	ret    
  420133:	push   rbp
  420134:	mov    rbp,rsp
  420137:	sub    rsp,0x8
  42013b:	mov    QWORD PTR [rbp-0x8],rdi
  42013f:	mov    rax,QWORD PTR [rbp-0x8]
  420143:	movzx  eax,WORD PTR [rax]
  420146:	movzx  eax,ax
  420149:	mov    edi,eax
  42014b:	call   420123 <flatcc_emitter_copy_buffer@@Base+0x159>
  420150:	leave  
  420151:	ret    
  420152:	push   rbp
  420153:	mov    rbp,rsp
  420156:	mov    DWORD PTR [rbp-0x4],edi
  420159:	mov    eax,DWORD PTR [rbp-0x4]
  42015c:	pop    rbp
  42015d:	ret    
  42015e:	push   rbp
  42015f:	mov    rbp,rsp
  420162:	mov    DWORD PTR [rbp-0x4],edi
  420165:	mov    eax,DWORD PTR [rbp-0x4]
  420168:	pop    rbp
  420169:	ret    
  42016a:	push   rbp
  42016b:	mov    rbp,rsp
  42016e:	sub    rsp,0x8
  420172:	mov    QWORD PTR [rbp-0x8],rdi
  420176:	mov    rax,QWORD PTR [rbp-0x8]
  42017a:	mov    eax,DWORD PTR [rax]
  42017c:	mov    edi,eax
  42017e:	call   420152 <flatcc_emitter_copy_buffer@@Base+0x188>
  420183:	leave  
  420184:	ret    

0000000000420185 <flatcc_verify_error_string@@Base>:
  420185:	push   rbp
  420186:	mov    rbp,rsp
  420189:	mov    DWORD PTR [rbp-0x4],edi
  42018c:	cmp    DWORD PTR [rbp-0x4],0x24
  420190:	ja     42034c <flatcc_verify_error_string@@Base+0x1c7>
  420196:	mov    eax,DWORD PTR [rbp-0x4]
  420199:	lea    rdx,[rax*4+0x0]
  4201a1:	lea    rax,[rip+0x19288]        # 439430 <flatcc_builder_padding_base@@Base+0x11d0>
  4201a8:	mov    eax,DWORD PTR [rdx+rax*1]
  4201ab:	movsxd rdx,eax
  4201ae:	lea    rax,[rip+0x1927b]        # 439430 <flatcc_builder_padding_base@@Base+0x11d0>
  4201b5:	add    rax,rdx
  4201b8:	jmp    rax
  4201ba:	lea    rax,[rip+0x18dc9]        # 438f8a <flatcc_builder_padding_base@@Base+0xd2a>
  4201c1:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4201c6:	lea    rax,[rip+0x18dc0]        # 438f8d <flatcc_builder_padding_base@@Base+0xd2d>
  4201cd:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4201d2:	lea    rax,[rip+0x18dcc]        # 438fa5 <flatcc_builder_padding_base@@Base+0xd45>
  4201d9:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4201de:	lea    rax,[rip+0x18dd4]        # 438fb9 <flatcc_builder_padding_base@@Base+0xd59>
  4201e5:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4201ea:	lea    rax,[rip+0x18de2]        # 438fd3 <flatcc_builder_padding_base@@Base+0xd73>
  4201f1:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4201f6:	lea    rax,[rip+0x18df3]        # 438ff0 <flatcc_builder_padding_base@@Base+0xd90>
  4201fd:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420202:	lea    rax,[rip+0x18e0f]        # 439018 <flatcc_builder_padding_base@@Base+0xdb8>
  420209:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42020e:	lea    rax,[rip+0x18e22]        # 439037 <flatcc_builder_padding_base@@Base+0xdd7>
  420215:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42021a:	lea    rax,[rip+0x18e31]        # 439052 <flatcc_builder_padding_base@@Base+0xdf2>
  420221:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420226:	lea    rax,[rip+0x18e39]        # 439066 <flatcc_builder_padding_base@@Base+0xe06>
  42022d:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420232:	lea    rax,[rip+0x18e41]        # 43907a <flatcc_builder_padding_base@@Base+0xe1a>
  420239:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42023e:	lea    rax,[rip+0x18e4a]        # 43908f <flatcc_builder_padding_base@@Base+0xe2f>
  420245:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42024a:	lea    rax,[rip+0x18e4f]        # 4390a0 <flatcc_builder_padding_base@@Base+0xe40>
  420251:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420256:	lea    rax,[rip+0x18e5b]        # 4390b8 <flatcc_builder_padding_base@@Base+0xe58>
  42025d:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420262:	lea    rax,[rip+0x18e68]        # 4390d1 <flatcc_builder_padding_base@@Base+0xe71>
  420269:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42026e:	lea    rax,[rip+0x18e7b]        # 4390f0 <flatcc_builder_padding_base@@Base+0xe90>
  420275:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42027a:	lea    rax,[rip+0x18e97]        # 439118 <flatcc_builder_padding_base@@Base+0xeb8>
  420281:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420286:	lea    rax,[rip+0x18eb3]        # 439140 <flatcc_builder_padding_base@@Base+0xee0>
  42028d:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420292:	lea    rax,[rip+0x18ecf]        # 439168 <flatcc_builder_padding_base@@Base+0xf08>
  420299:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42029e:	lea    rax,[rip+0x18edb]        # 439180 <flatcc_builder_padding_base@@Base+0xf20>
  4202a5:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202aa:	lea    rax,[rip+0x18ef6]        # 4391a7 <flatcc_builder_padding_base@@Base+0xf47>
  4202b1:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202b6:	lea    rax,[rip+0x18f03]        # 4391c0 <flatcc_builder_padding_base@@Base+0xf60>
  4202bd:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202c2:	lea    rax,[rip+0x18f27]        # 4391f0 <flatcc_builder_padding_base@@Base+0xf90>
  4202c9:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202ce:	lea    rax,[rip+0x18f53]        # 439228 <flatcc_builder_padding_base@@Base+0xfc8>
  4202d5:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202d7:	lea    rax,[rip+0x18f7a]        # 439258 <flatcc_builder_padding_base@@Base+0xff8>
  4202de:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202e0:	lea    rax,[rip+0x18fa1]        # 439288 <flatcc_builder_padding_base@@Base+0x1028>
  4202e7:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202e9:	lea    rax,[rip+0x18fc7]        # 4392b7 <flatcc_builder_padding_base@@Base+0x1057>
  4202f0:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202f2:	lea    rax,[rip+0x18fd2]        # 4392cb <flatcc_builder_padding_base@@Base+0x106b>
  4202f9:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  4202fb:	lea    rax,[rip+0x18fe4]        # 4392e6 <flatcc_builder_padding_base@@Base+0x1086>
  420302:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420304:	lea    rax,[rip+0x18ff5]        # 439300 <flatcc_builder_padding_base@@Base+0x10a0>
  42030b:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42030d:	lea    rax,[rip+0x19014]        # 439328 <flatcc_builder_padding_base@@Base+0x10c8>
  420314:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420316:	lea    rax,[rip+0x19031]        # 43934e <flatcc_builder_padding_base@@Base+0x10ee>
  42031d:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42031f:	lea    rax,[rip+0x19042]        # 439368 <flatcc_builder_padding_base@@Base+0x1108>
  420326:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420328:	lea    rax,[rip+0x19061]        # 439390 <flatcc_builder_padding_base@@Base+0x1130>
  42032f:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420331:	lea    rax,[rip+0x19080]        # 4393b8 <flatcc_builder_padding_base@@Base+0x1158>
  420338:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42033a:	lea    rax,[rip+0x190af]        # 4393f0 <flatcc_builder_padding_base@@Base+0x1190>
  420341:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  420343:	lea    rax,[rip+0x190ce]        # 439418 <flatcc_builder_padding_base@@Base+0x11b8>
  42034a:	jmp    420353 <flatcc_verify_error_string@@Base+0x1ce>
  42034c:	lea    rax,[rip+0x190d3]        # 439426 <flatcc_builder_padding_base@@Base+0x11c6>
  420353:	pop    rbp
  420354:	ret    
  420355:	push   rbp
  420356:	mov    rbp,rsp
  420359:	sub    rsp,0x10
  42035d:	mov    QWORD PTR [rbp-0x8],rdi
  420361:	mov    DWORD PTR [rbp-0xc],esi
  420364:	mov    edx,DWORD PTR [rbp-0xc]
  420367:	mov    rax,QWORD PTR [rbp-0x8]
  42036b:	add    rax,rdx
  42036e:	mov    rdi,rax
  420371:	call   420108 <flatcc_emitter_copy_buffer@@Base+0x13e>
  420376:	leave  
  420377:	ret    
  420378:	push   rbp
  420379:	mov    rbp,rsp
  42037c:	sub    rsp,0x20
  420380:	mov    QWORD PTR [rbp-0x18],rdi
  420384:	mov    rax,QWORD PTR fs:0x28
  42038d:	mov    QWORD PTR [rbp-0x8],rax
  420391:	xor    eax,eax
  420393:	mov    DWORD PTR [rbp-0xc],0x0
  42039a:	mov    rcx,QWORD PTR [rbp-0x18]
  42039e:	lea    rax,[rbp-0xc]
  4203a2:	mov    edx,0x4
  4203a7:	mov    rsi,rcx
  4203aa:	mov    rdi,rax
  4203ad:	call   405040 <strncpy@plt>
  4203b2:	mov    eax,DWORD PTR [rbp-0xc]
  4203b5:	mov    edi,eax
  4203b7:	call   42015e <flatcc_emitter_copy_buffer@@Base+0x194>
  4203bc:	mov    rdx,QWORD PTR [rbp-0x8]
  4203c0:	xor    rdx,QWORD PTR fs:0x28
  4203c9:	je     4203d0 <flatcc_verify_error_string@@Base+0x24b>
  4203cb:	call   405070 <__stack_chk_fail@plt>
  4203d0:	leave  
  4203d1:	ret    
  4203d2:	push   rbp
  4203d3:	mov    rbp,rsp
  4203d6:	sub    rsp,0x10
  4203da:	mov    QWORD PTR [rbp-0x8],rdi
  4203de:	mov    DWORD PTR [rbp-0xc],esi
  4203e1:	mov    edx,DWORD PTR [rbp-0xc]
  4203e4:	mov    rax,QWORD PTR [rbp-0x8]
  4203e8:	add    rax,rdx
  4203eb:	mov    rdi,rax
  4203ee:	call   42016a <flatcc_emitter_copy_buffer@@Base+0x1a0>
  4203f3:	leave  
  4203f4:	ret    
  4203f5:	push   rbp
  4203f6:	mov    rbp,rsp
  4203f9:	sub    rsp,0x10
  4203fd:	mov    QWORD PTR [rbp-0x8],rdi
  420401:	mov    DWORD PTR [rbp-0xc],esi
  420404:	mov    edx,DWORD PTR [rbp-0xc]
  420407:	mov    rax,QWORD PTR [rbp-0x8]
  42040b:	add    rax,rdx
  42040e:	mov    rdi,rax
  420411:	call   420133 <flatcc_emitter_copy_buffer@@Base+0x169>
  420416:	leave  
  420417:	ret    
  420418:	push   rbp
  420419:	mov    rbp,rsp
  42041c:	mov    DWORD PTR [rbp-0x14],edi
  42041f:	mov    DWORD PTR [rbp-0x18],esi
  420422:	mov    DWORD PTR [rbp-0x1c],edx
  420425:	mov    edx,DWORD PTR [rbp-0x18]
  420428:	mov    eax,DWORD PTR [rbp-0x1c]
  42042b:	add    eax,edx
  42042d:	mov    DWORD PTR [rbp-0x4],eax
  420430:	mov    eax,DWORD PTR [rbp-0x4]
  420433:	cmp    eax,DWORD PTR [rbp-0x18]
  420436:	jbe    420459 <flatcc_verify_error_string@@Base+0x2d4>
  420438:	mov    eax,DWORD PTR [rbp-0x4]
  42043b:	lea    rdx,[rax+0x4]
  42043f:	mov    eax,DWORD PTR [rbp-0x14]
  420442:	cmp    rdx,rax
  420445:	ja     420459 <flatcc_verify_error_string@@Base+0x2d4>
  420447:	mov    eax,DWORD PTR [rbp-0x4]
  42044a:	and    eax,0x3
  42044d:	test   rax,rax
  420450:	jne    420459 <flatcc_verify_error_string@@Base+0x2d4>
  420452:	mov    eax,0x1
  420457:	jmp    42045e <flatcc_verify_error_string@@Base+0x2d9>
  420459:	mov    eax,0x0
  42045e:	pop    rbp
  42045f:	ret    
  420460:	push   rbp
  420461:	mov    rbp,rsp
  420464:	mov    DWORD PTR [rbp-0x14],edi
  420467:	mov    DWORD PTR [rbp-0x18],esi
  42046a:	mov    DWORD PTR [rbp-0x1c],edx
  42046d:	mov    eax,ecx
  42046f:	mov    WORD PTR [rbp-0x20],ax
  420473:	mov    edx,DWORD PTR [rbp-0x18]
  420476:	mov    eax,DWORD PTR [rbp-0x1c]
  420479:	add    eax,edx
  42047b:	mov    DWORD PTR [rbp-0x4],eax
  42047e:	mov    eax,0x4
  420483:	cmp    WORD PTR [rbp-0x20],0x4
  420488:	cmovae ax,WORD PTR [rbp-0x20]
  42048d:	mov    WORD PTR [rbp-0x20],ax
  420491:	mov    eax,DWORD PTR [rbp-0x4]
  420494:	cmp    eax,DWORD PTR [rbp-0x18]
  420497:	jbe    4204ca <flatcc_verify_error_string@@Base+0x345>
  420499:	mov    eax,DWORD PTR [rbp-0x4]
  42049c:	lea    rdx,[rax+0x4]
  4204a0:	mov    eax,DWORD PTR [rbp-0x14]
  4204a3:	cmp    rdx,rax
  4204a6:	ja     4204ca <flatcc_verify_error_string@@Base+0x345>
  4204a8:	mov    eax,DWORD PTR [rbp-0x4]
  4204ab:	lea    rdx,[rax+0x4]
  4204af:	movzx  eax,WORD PTR [rbp-0x20]
  4204b3:	sub    eax,0x1
  4204b6:	or     eax,0x3
  4204b9:	cdqe   
  4204bb:	and    rax,rdx
  4204be:	test   rax,rax
  4204c1:	jne    4204ca <flatcc_verify_error_string@@Base+0x345>
  4204c3:	mov    eax,0x1
  4204c8:	jmp    4204cf <flatcc_verify_error_string@@Base+0x34a>
  4204ca:	mov    eax,0x0
  4204cf:	pop    rbp
  4204d0:	ret    
  4204d1:	push   rbp
  4204d2:	mov    rbp,rsp
  4204d5:	mov    DWORD PTR [rbp-0x14],edi
  4204d8:	mov    DWORD PTR [rbp-0x18],esi
  4204db:	mov    DWORD PTR [rbp-0x1c],edx
  4204de:	mov    DWORD PTR [rbp-0x20],ecx
  4204e1:	mov    eax,r8d
  4204e4:	mov    WORD PTR [rbp-0x24],ax
  4204e8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4204ec:	je     4204fb <flatcc_verify_error_string@@Base+0x376>
  4204ee:	mov    edx,DWORD PTR [rbp-0x18]
  4204f1:	mov    eax,DWORD PTR [rbp-0x1c]
  4204f4:	add    eax,edx
  4204f6:	cmp    eax,DWORD PTR [rbp-0x14]
  4204f9:	jbe    420502 <flatcc_verify_error_string@@Base+0x37d>
  4204fb:	mov    eax,0x12
  420500:	jmp    420571 <flatcc_verify_error_string@@Base+0x3ec>
  420502:	mov    eax,DWORD PTR [rbp-0x1c]
  420505:	add    DWORD PTR [rbp-0x18],eax
  420508:	mov    edx,DWORD PTR [rbp-0x18]
  42050b:	mov    eax,DWORD PTR [rbp-0x20]
  42050e:	add    eax,edx
  420510:	cmp    eax,DWORD PTR [rbp-0x18]
  420513:	setae  al
  420516:	movzx  eax,al
  420519:	mov    DWORD PTR [rbp-0xc],eax
  42051c:	cmp    DWORD PTR [rbp-0xc],0x0
  420520:	jne    420529 <flatcc_verify_error_string@@Base+0x3a4>
  420522:	mov    eax,0xa
  420527:	jmp    420571 <flatcc_verify_error_string@@Base+0x3ec>
  420529:	mov    edx,DWORD PTR [rbp-0x18]
  42052c:	mov    eax,DWORD PTR [rbp-0x20]
  42052f:	add    eax,edx
  420531:	cmp    eax,DWORD PTR [rbp-0x14]
  420534:	setbe  al
  420537:	movzx  eax,al
  42053a:	mov    DWORD PTR [rbp-0x8],eax
  42053d:	cmp    DWORD PTR [rbp-0x8],0x0
  420541:	jne    42054a <flatcc_verify_error_string@@Base+0x3c5>
  420543:	mov    eax,0x9
  420548:	jmp    420571 <flatcc_verify_error_string@@Base+0x3ec>
  42054a:	movzx  eax,WORD PTR [rbp-0x24]
  42054e:	sub    eax,0x1
  420551:	and    eax,DWORD PTR [rbp-0x18]
  420554:	test   eax,eax
  420556:	sete   al
  420559:	movzx  eax,al
  42055c:	mov    DWORD PTR [rbp-0x4],eax
  42055f:	cmp    DWORD PTR [rbp-0x4],0x0
  420563:	jne    42056c <flatcc_verify_error_string@@Base+0x3e7>
  420565:	mov    eax,0xb
  42056a:	jmp    420571 <flatcc_verify_error_string@@Base+0x3ec>
  42056c:	mov    eax,0x0
  420571:	pop    rbp
  420572:	ret    
  420573:	push   rbp
  420574:	mov    rbp,rsp
  420577:	sub    rsp,0x20
  42057b:	mov    QWORD PTR [rbp-0x18],rdi
  42057f:	mov    eax,esi
  420581:	mov    WORD PTR [rbp-0x1c],ax
  420585:	movzx  eax,WORD PTR [rbp-0x1c]
  420589:	add    eax,0x2
  42058c:	cdqe   
  42058e:	add    eax,eax
  420590:	mov    WORD PTR [rbp-0x2],ax
  420594:	mov    rax,QWORD PTR [rbp-0x18]
  420598:	movzx  eax,WORD PTR [rax+0x1e]
  42059c:	cmp    ax,WORD PTR [rbp-0x2]
  4205a0:	ja     4205a9 <flatcc_verify_error_string@@Base+0x424>
  4205a2:	mov    eax,0x0
  4205a7:	jmp    4205c2 <flatcc_verify_error_string@@Base+0x43d>
  4205a9:	movzx  edx,WORD PTR [rbp-0x2]
  4205ad:	mov    rax,QWORD PTR [rbp-0x18]
  4205b1:	mov    rax,QWORD PTR [rax+0x10]
  4205b5:	mov    esi,edx
  4205b7:	mov    rdi,rax
  4205ba:	call   4203f5 <flatcc_verify_error_string@@Base+0x270>
  4205bf:	movzx  eax,ax
  4205c2:	leave  
  4205c3:	ret    
  4205c4:	push   rbp
  4205c5:	mov    rbp,rsp
  4205c8:	sub    rsp,0x20
  4205cc:	mov    QWORD PTR [rbp-0x18],rdi
  4205d0:	mov    eax,esi
  4205d2:	mov    WORD PTR [rbp-0x1c],ax
  4205d6:	movzx  edx,WORD PTR [rbp-0x1c]
  4205da:	mov    rax,QWORD PTR [rbp-0x18]
  4205de:	mov    esi,edx
  4205e0:	mov    rdi,rax
  4205e3:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  4205e8:	mov    WORD PTR [rbp-0x2],ax
  4205ec:	cmp    WORD PTR [rbp-0x2],0x0
  4205f1:	je     42060f <flatcc_verify_error_string@@Base+0x48a>
  4205f3:	mov    rax,QWORD PTR [rbp-0x18]
  4205f7:	mov    rdx,QWORD PTR [rax]
  4205fa:	mov    rax,QWORD PTR [rbp-0x18]
  4205fe:	mov    eax,DWORD PTR [rax+0x18]
  420601:	mov    ecx,eax
  420603:	movzx  eax,WORD PTR [rbp-0x2]
  420607:	add    rax,rcx
  42060a:	add    rax,rdx
  42060d:	jmp    420614 <flatcc_verify_error_string@@Base+0x48f>
  42060f:	mov    eax,0x0
  420614:	leave  
  420615:	ret    
  420616:	push   rbp
  420617:	mov    rbp,rsp
  42061a:	sub    rsp,0x38
  42061e:	mov    QWORD PTR [rbp-0x28],rdi
  420622:	mov    eax,esi
  420624:	mov    DWORD PTR [rbp-0x30],edx
  420627:	mov    DWORD PTR [rbp-0x34],ecx
  42062a:	mov    edx,r8d
  42062d:	mov    WORD PTR [rbp-0x2c],ax
  420631:	mov    WORD PTR [rbp-0x38],dx
  420635:	mov    rax,QWORD PTR [rbp-0x28]
  420639:	mov    rax,QWORD PTR [rax]
  42063c:	mov    DWORD PTR [rbp-0x1c],eax
  42063f:	movzx  edx,WORD PTR [rbp-0x2c]
  420643:	mov    rax,QWORD PTR [rbp-0x28]
  420647:	mov    esi,edx
  420649:	mov    rdi,rax
  42064c:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  420651:	mov    WORD PTR [rbp-0x1e],ax
  420655:	cmp    WORD PTR [rbp-0x1e],0x0
  42065a:	jne    420683 <flatcc_verify_error_string@@Base+0x4fe>
  42065c:	cmp    DWORD PTR [rbp-0x30],0x0
  420660:	sete   al
  420663:	movzx  eax,al
  420666:	mov    DWORD PTR [rbp-0x18],eax
  420669:	cmp    DWORD PTR [rbp-0x18],0x0
  42066d:	jne    420679 <flatcc_verify_error_string@@Base+0x4f4>
  42066f:	mov    eax,0x4
  420674:	jmp    420703 <flatcc_verify_error_string@@Base+0x57e>
  420679:	mov    eax,0x0
  42067e:	jmp    420703 <flatcc_verify_error_string@@Base+0x57e>
  420683:	movzx  eax,WORD PTR [rbp-0x1e]
  420687:	mov    DWORD PTR [rbp-0x14],eax
  42068a:	mov    edx,DWORD PTR [rbp-0x14]
  42068d:	mov    eax,DWORD PTR [rbp-0x34]
  420690:	add    eax,edx
  420692:	mov    DWORD PTR [rbp-0x10],eax
  420695:	mov    rax,QWORD PTR [rbp-0x28]
  420699:	movzx  eax,WORD PTR [rax+0x1c]
  42069d:	movzx  eax,ax
  4206a0:	cmp    eax,DWORD PTR [rbp-0x10]
  4206a3:	setae  al
  4206a6:	movzx  eax,al
  4206a9:	mov    DWORD PTR [rbp-0xc],eax
  4206ac:	cmp    DWORD PTR [rbp-0xc],0x0
  4206b0:	jne    4206b9 <flatcc_verify_error_string@@Base+0x534>
  4206b2:	mov    eax,0xd
  4206b7:	jmp    420703 <flatcc_verify_error_string@@Base+0x57e>
  4206b9:	mov    DWORD PTR [rbp-0x8],0x1
  4206c0:	cmp    DWORD PTR [rbp-0x8],0x0
  4206c4:	jne    4206cd <flatcc_verify_error_string@@Base+0x548>
  4206c6:	mov    eax,0xe
  4206cb:	jmp    420703 <flatcc_verify_error_string@@Base+0x57e>
  4206cd:	mov    rax,QWORD PTR [rbp-0x28]
  4206d1:	mov    edx,DWORD PTR [rax+0x18]
  4206d4:	mov    eax,DWORD PTR [rbp-0x1c]
  4206d7:	add    eax,edx
  4206d9:	add    DWORD PTR [rbp-0x14],eax
  4206dc:	movzx  eax,WORD PTR [rbp-0x38]
  4206e0:	sub    eax,0x1
  4206e3:	and    eax,DWORD PTR [rbp-0x14]
  4206e6:	test   eax,eax
  4206e8:	sete   al
  4206eb:	movzx  eax,al
  4206ee:	mov    DWORD PTR [rbp-0x4],eax
  4206f1:	cmp    DWORD PTR [rbp-0x4],0x0
  4206f5:	jne    4206fe <flatcc_verify_error_string@@Base+0x579>
  4206f7:	mov    eax,0xc
  4206fc:	jmp    420703 <flatcc_verify_error_string@@Base+0x57e>
  4206fe:	mov    eax,0x0
  420703:	leave  
  420704:	ret    
  420705:	push   rbp
  420706:	mov    rbp,rsp
  420709:	sub    rsp,0x38
  42070d:	mov    QWORD PTR [rbp-0x28],rdi
  420711:	mov    eax,esi
  420713:	mov    DWORD PTR [rbp-0x30],edx
  420716:	mov    QWORD PTR [rbp-0x38],rcx
  42071a:	mov    WORD PTR [rbp-0x2c],ax
  42071e:	movzx  edx,WORD PTR [rbp-0x2c]
  420722:	mov    rax,QWORD PTR [rbp-0x28]
  420726:	mov    esi,edx
  420728:	mov    rdi,rax
  42072b:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  420730:	mov    WORD PTR [rbp-0x16],ax
  420734:	cmp    WORD PTR [rbp-0x16],0x0
  420739:	jne    42075c <flatcc_verify_error_string@@Base+0x5d7>
  42073b:	mov    rax,QWORD PTR [rbp-0x38]
  42073f:	mov    DWORD PTR [rax],0x0
  420745:	cmp    DWORD PTR [rbp-0x30],0x0
  420749:	je     420755 <flatcc_verify_error_string@@Base+0x5d0>
  42074b:	mov    eax,0x4
  420750:	jmp    4207db <flatcc_verify_error_string@@Base+0x656>
  420755:	mov    eax,0x0
  42075a:	jmp    4207db <flatcc_verify_error_string@@Base+0x656>
  42075c:	movzx  eax,WORD PTR [rbp-0x16]
  420760:	mov    DWORD PTR [rbp-0x14],eax
  420763:	mov    eax,DWORD PTR [rbp-0x14]
  420766:	add    eax,0x4
  420769:	mov    DWORD PTR [rbp-0x10],eax
  42076c:	mov    rax,QWORD PTR [rbp-0x28]
  420770:	movzx  eax,WORD PTR [rax+0x1c]
  420774:	movzx  eax,ax
  420777:	cmp    eax,DWORD PTR [rbp-0x10]
  42077a:	setae  al
  42077d:	movzx  eax,al
  420780:	mov    DWORD PTR [rbp-0xc],eax
  420783:	cmp    DWORD PTR [rbp-0xc],0x0
  420787:	jne    420790 <flatcc_verify_error_string@@Base+0x60b>
  420789:	mov    eax,0xd
  42078e:	jmp    4207db <flatcc_verify_error_string@@Base+0x656>
  420790:	mov    DWORD PTR [rbp-0x8],0x1
  420797:	cmp    DWORD PTR [rbp-0x8],0x0
  42079b:	jne    4207a4 <flatcc_verify_error_string@@Base+0x61f>
  42079d:	mov    eax,0xe
  4207a2:	jmp    4207db <flatcc_verify_error_string@@Base+0x656>
  4207a4:	mov    rax,QWORD PTR [rbp-0x28]
  4207a8:	mov    eax,DWORD PTR [rax+0x18]
  4207ab:	add    DWORD PTR [rbp-0x14],eax
  4207ae:	mov    eax,DWORD PTR [rbp-0x14]
  4207b1:	and    eax,0x3
  4207b4:	test   rax,rax
  4207b7:	sete   al
  4207ba:	movzx  eax,al
  4207bd:	mov    DWORD PTR [rbp-0x4],eax
  4207c0:	cmp    DWORD PTR [rbp-0x4],0x0
  4207c4:	jne    4207cd <flatcc_verify_error_string@@Base+0x648>
  4207c6:	mov    eax,0xc
  4207cb:	jmp    4207db <flatcc_verify_error_string@@Base+0x656>
  4207cd:	mov    rax,QWORD PTR [rbp-0x38]
  4207d1:	mov    edx,DWORD PTR [rbp-0x14]
  4207d4:	mov    DWORD PTR [rax],edx
  4207d6:	mov    eax,0x0
  4207db:	leave  
  4207dc:	ret    
  4207dd:	push   rbp
  4207de:	mov    rbp,rsp
  4207e1:	sub    rsp,0x28
  4207e5:	mov    QWORD PTR [rbp-0x18],rdi
  4207e9:	mov    DWORD PTR [rbp-0x1c],esi
  4207ec:	mov    DWORD PTR [rbp-0x20],edx
  4207ef:	mov    DWORD PTR [rbp-0x24],ecx
  4207f2:	mov    edx,DWORD PTR [rbp-0x24]
  4207f5:	mov    ecx,DWORD PTR [rbp-0x20]
  4207f8:	mov    eax,DWORD PTR [rbp-0x1c]
  4207fb:	mov    esi,ecx
  4207fd:	mov    edi,eax
  4207ff:	call   420418 <flatcc_verify_error_string@@Base+0x293>
  420804:	mov    DWORD PTR [rbp-0x10],eax
  420807:	cmp    DWORD PTR [rbp-0x10],0x0
  42080b:	jne    420814 <flatcc_verify_error_string@@Base+0x68f>
  42080d:	mov    eax,0x11
  420812:	jmp    420886 <flatcc_verify_error_string@@Base+0x701>
  420814:	mov    eax,DWORD PTR [rbp-0x24]
  420817:	add    DWORD PTR [rbp-0x20],eax
  42081a:	mov    edx,DWORD PTR [rbp-0x20]
  42081d:	mov    rax,QWORD PTR [rbp-0x18]
  420821:	mov    esi,edx
  420823:	mov    rdi,rax
  420826:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  42082b:	mov    DWORD PTR [rbp-0xc],eax
  42082e:	add    DWORD PTR [rbp-0x20],0x4
  420832:	mov    eax,DWORD PTR [rbp-0x1c]
  420835:	sub    eax,DWORD PTR [rbp-0x20]
  420838:	mov    edx,DWORD PTR [rbp-0xc]
  42083b:	add    edx,0x1
  42083e:	cmp    eax,edx
  420840:	setae  al
  420843:	movzx  eax,al
  420846:	mov    DWORD PTR [rbp-0x8],eax
  420849:	cmp    DWORD PTR [rbp-0x8],0x0
  42084d:	jne    420856 <flatcc_verify_error_string@@Base+0x6d1>
  42084f:	mov    eax,0x8
  420854:	jmp    420886 <flatcc_verify_error_string@@Base+0x701>
  420856:	mov    edx,DWORD PTR [rbp-0x20]
  420859:	mov    eax,DWORD PTR [rbp-0xc]
  42085c:	add    rdx,rax
  42085f:	mov    rax,QWORD PTR [rbp-0x18]
  420863:	add    rax,rdx
  420866:	movzx  eax,BYTE PTR [rax]
  420869:	test   al,al
  42086b:	sete   al
  42086e:	movzx  eax,al
  420871:	mov    DWORD PTR [rbp-0x4],eax
  420874:	cmp    DWORD PTR [rbp-0x4],0x0
  420878:	jne    420881 <flatcc_verify_error_string@@Base+0x6fc>
  42087a:	mov    eax,0x7
  42087f:	jmp    420886 <flatcc_verify_error_string@@Base+0x701>
  420881:	mov    eax,0x0
  420886:	leave  
  420887:	ret    
  420888:	push   rbp
  420889:	mov    rbp,rsp
  42088c:	sub    rsp,0x30
  420890:	mov    QWORD PTR [rbp-0x18],rdi
  420894:	mov    DWORD PTR [rbp-0x1c],esi
  420897:	mov    DWORD PTR [rbp-0x20],edx
  42089a:	mov    DWORD PTR [rbp-0x24],ecx
  42089d:	mov    DWORD PTR [rbp-0x28],r8d
  4208a1:	mov    eax,r9d
  4208a4:	mov    WORD PTR [rbp-0x2c],ax
  4208a8:	movzx  ecx,WORD PTR [rbp-0x2c]
  4208ac:	mov    edx,DWORD PTR [rbp-0x24]
  4208af:	mov    esi,DWORD PTR [rbp-0x20]
  4208b2:	mov    eax,DWORD PTR [rbp-0x1c]
  4208b5:	mov    edi,eax
  4208b7:	call   420460 <flatcc_verify_error_string@@Base+0x2db>
  4208bc:	mov    DWORD PTR [rbp-0x10],eax
  4208bf:	cmp    DWORD PTR [rbp-0x10],0x0
  4208c3:	jne    4208cc <flatcc_verify_error_string@@Base+0x747>
  4208c5:	mov    eax,0x10
  4208ca:	jmp    420932 <flatcc_verify_error_string@@Base+0x7ad>
  4208cc:	mov    eax,DWORD PTR [rbp-0x24]
  4208cf:	add    DWORD PTR [rbp-0x20],eax
  4208d2:	mov    edx,DWORD PTR [rbp-0x20]
  4208d5:	mov    rax,QWORD PTR [rbp-0x18]
  4208d9:	mov    esi,edx
  4208db:	mov    rdi,rax
  4208de:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  4208e3:	mov    DWORD PTR [rbp-0xc],eax
  4208e6:	add    DWORD PTR [rbp-0x20],0x4
  4208ea:	mov    eax,DWORD PTR [rbp-0xc]
  4208ed:	cmp    eax,DWORD PTR [rbp+0x10]
  4208f0:	setbe  al
  4208f3:	movzx  eax,al
  4208f6:	mov    DWORD PTR [rbp-0x8],eax
  4208f9:	cmp    DWORD PTR [rbp-0x8],0x0
  4208fd:	jne    420906 <flatcc_verify_error_string@@Base+0x781>
  4208ff:	mov    eax,0x19
  420904:	jmp    420932 <flatcc_verify_error_string@@Base+0x7ad>
  420906:	mov    eax,DWORD PTR [rbp-0x1c]
  420909:	sub    eax,DWORD PTR [rbp-0x20]
  42090c:	mov    edx,eax
  42090e:	mov    eax,DWORD PTR [rbp-0xc]
  420911:	imul   eax,DWORD PTR [rbp-0x28]
  420915:	cmp    edx,eax
  420917:	setae  al
  42091a:	movzx  eax,al
  42091d:	mov    DWORD PTR [rbp-0x4],eax
  420920:	cmp    DWORD PTR [rbp-0x4],0x0
  420924:	jne    42092d <flatcc_verify_error_string@@Base+0x7a8>
  420926:	mov    eax,0x1a
  42092b:	jmp    420932 <flatcc_verify_error_string@@Base+0x7ad>
  42092d:	mov    eax,0x0
  420932:	leave  
  420933:	ret    
  420934:	push   rbp
  420935:	mov    rbp,rsp
  420938:	sub    rsp,0x28
  42093c:	mov    QWORD PTR [rbp-0x18],rdi
  420940:	mov    DWORD PTR [rbp-0x1c],esi
  420943:	mov    DWORD PTR [rbp-0x20],edx
  420946:	mov    DWORD PTR [rbp-0x24],ecx
  420949:	mov    ecx,DWORD PTR [rbp-0x24]
  42094c:	mov    edx,DWORD PTR [rbp-0x20]
  42094f:	mov    esi,DWORD PTR [rbp-0x1c]
  420952:	mov    rax,QWORD PTR [rbp-0x18]
  420956:	push   0x3fffffff
  42095b:	mov    r9d,0x4
  420961:	mov    r8d,0x4
  420967:	mov    rdi,rax
  42096a:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  42096f:	add    rsp,0x8
  420973:	test   eax,eax
  420975:	je     4209a6 <flatcc_verify_error_string@@Base+0x821>
  420977:	mov    ecx,DWORD PTR [rbp-0x24]
  42097a:	mov    edx,DWORD PTR [rbp-0x20]
  42097d:	mov    esi,DWORD PTR [rbp-0x1c]
  420980:	mov    rax,QWORD PTR [rbp-0x18]
  420984:	push   0x3fffffff
  420989:	mov    r9d,0x4
  42098f:	mov    r8d,0x4
  420995:	mov    rdi,rax
  420998:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  42099d:	add    rsp,0x8
  4209a1:	jmp    420a32 <flatcc_verify_error_string@@Base+0x8ad>
  4209a6:	mov    eax,DWORD PTR [rbp-0x24]
  4209a9:	add    DWORD PTR [rbp-0x20],eax
  4209ac:	mov    edx,DWORD PTR [rbp-0x20]
  4209af:	mov    rax,QWORD PTR [rbp-0x18]
  4209b3:	mov    esi,edx
  4209b5:	mov    rdi,rax
  4209b8:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  4209bd:	mov    DWORD PTR [rbp-0x4],eax
  4209c0:	add    DWORD PTR [rbp-0x20],0x4
  4209c4:	mov    DWORD PTR [rbp-0x8],0x0
  4209cb:	jmp    420a25 <flatcc_verify_error_string@@Base+0x8a0>
  4209cd:	mov    edx,DWORD PTR [rbp-0x20]
  4209d0:	mov    rax,QWORD PTR [rbp-0x18]
  4209d4:	mov    esi,edx
  4209d6:	mov    rdi,rax
  4209d9:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  4209de:	mov    ecx,eax
  4209e0:	mov    edx,DWORD PTR [rbp-0x20]
  4209e3:	mov    esi,DWORD PTR [rbp-0x1c]
  4209e6:	mov    rax,QWORD PTR [rbp-0x18]
  4209ea:	mov    rdi,rax
  4209ed:	call   4207dd <flatcc_verify_error_string@@Base+0x658>
  4209f2:	test   eax,eax
  4209f4:	je     420a1d <flatcc_verify_error_string@@Base+0x898>
  4209f6:	mov    edx,DWORD PTR [rbp-0x20]
  4209f9:	mov    rax,QWORD PTR [rbp-0x18]
  4209fd:	mov    esi,edx
  4209ff:	mov    rdi,rax
  420a02:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420a07:	mov    ecx,eax
  420a09:	mov    edx,DWORD PTR [rbp-0x20]
  420a0c:	mov    esi,DWORD PTR [rbp-0x1c]
  420a0f:	mov    rax,QWORD PTR [rbp-0x18]
  420a13:	mov    rdi,rax
  420a16:	call   4207dd <flatcc_verify_error_string@@Base+0x658>
  420a1b:	jmp    420a32 <flatcc_verify_error_string@@Base+0x8ad>
  420a1d:	add    DWORD PTR [rbp-0x8],0x1
  420a21:	add    DWORD PTR [rbp-0x20],0x4
  420a25:	mov    eax,DWORD PTR [rbp-0x8]
  420a28:	cmp    eax,DWORD PTR [rbp-0x4]
  420a2b:	jb     4209cd <flatcc_verify_error_string@@Base+0x848>
  420a2d:	mov    eax,0x0
  420a32:	leave  
  420a33:	ret    
  420a34:	push   rbp
  420a35:	mov    rbp,rsp
  420a38:	push   rbx
  420a39:	sub    rsp,0x88
  420a40:	mov    QWORD PTR [rbp-0x78],rdi
  420a44:	mov    DWORD PTR [rbp-0x7c],esi
  420a47:	mov    DWORD PTR [rbp-0x80],edx
  420a4a:	mov    DWORD PTR [rbp-0x84],ecx
  420a50:	mov    DWORD PTR [rbp-0x88],r8d
  420a57:	mov    QWORD PTR [rbp-0x90],r9
  420a5e:	mov    rax,QWORD PTR fs:0x28
  420a67:	mov    QWORD PTR [rbp-0x18],rax
  420a6b:	xor    eax,eax
  420a6d:	mov    eax,DWORD PTR [rbp-0x88]
  420a73:	sub    eax,0x1
  420a76:	mov    DWORD PTR [rbp-0x34],eax
  420a79:	mov    eax,DWORD PTR [rbp-0x34]
  420a7c:	mov    DWORD PTR [rbp-0x68],eax
  420a7f:	cmp    DWORD PTR [rbp-0x68],0x0
  420a83:	jne    420a8f <flatcc_verify_error_string@@Base+0x90a>
  420a85:	mov    eax,0x3
  420a8a:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420a8f:	mov    edx,DWORD PTR [rbp-0x84]
  420a95:	mov    ecx,DWORD PTR [rbp-0x80]
  420a98:	mov    eax,DWORD PTR [rbp-0x7c]
  420a9b:	mov    esi,ecx
  420a9d:	mov    edi,eax
  420a9f:	call   420418 <flatcc_verify_error_string@@Base+0x293>
  420aa4:	mov    DWORD PTR [rbp-0x64],eax
  420aa7:	cmp    DWORD PTR [rbp-0x64],0x0
  420aab:	jne    420ab7 <flatcc_verify_error_string@@Base+0x932>
  420aad:	mov    eax,0xf
  420ab2:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420ab7:	mov    edx,DWORD PTR [rbp-0x80]
  420aba:	mov    eax,DWORD PTR [rbp-0x84]
  420ac0:	add    eax,edx
  420ac2:	mov    DWORD PTR [rbp-0x28],eax
  420ac5:	mov    ebx,DWORD PTR [rbp-0x28]
  420ac8:	mov    edx,DWORD PTR [rbp-0x28]
  420acb:	mov    rax,QWORD PTR [rbp-0x78]
  420acf:	mov    esi,edx
  420ad1:	mov    rdi,rax
  420ad4:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420ad9:	sub    ebx,eax
  420adb:	mov    eax,ebx
  420add:	mov    DWORD PTR [rbp-0x60],eax
  420ae0:	mov    eax,DWORD PTR [rbp-0x60]
  420ae3:	test   eax,eax
  420ae5:	js     420af9 <flatcc_verify_error_string@@Base+0x974>
  420ae7:	mov    eax,DWORD PTR [rbp-0x60]
  420aea:	and    eax,0x1
  420aed:	test   rax,rax
  420af0:	jne    420af9 <flatcc_verify_error_string@@Base+0x974>
  420af2:	mov    eax,0x1
  420af7:	jmp    420afe <flatcc_verify_error_string@@Base+0x979>
  420af9:	mov    eax,0x0
  420afe:	mov    DWORD PTR [rbp-0x5c],eax
  420b01:	cmp    DWORD PTR [rbp-0x5c],0x0
  420b05:	jne    420b11 <flatcc_verify_error_string@@Base+0x98c>
  420b07:	mov    eax,0x1d
  420b0c:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420b11:	mov    eax,DWORD PTR [rbp-0x60]
  420b14:	lea    rdx,[rax+0x2]
  420b18:	mov    eax,DWORD PTR [rbp-0x7c]
  420b1b:	cmp    rdx,rax
  420b1e:	setbe  al
  420b21:	movzx  eax,al
  420b24:	mov    DWORD PTR [rbp-0x58],eax
  420b27:	cmp    DWORD PTR [rbp-0x58],0x0
  420b2b:	jne    420b37 <flatcc_verify_error_string@@Base+0x9b2>
  420b2d:	mov    eax,0x1b
  420b32:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420b37:	mov    edx,DWORD PTR [rbp-0x60]
  420b3a:	mov    rax,QWORD PTR [rbp-0x78]
  420b3e:	mov    esi,edx
  420b40:	mov    rdi,rax
  420b43:	call   4203f5 <flatcc_verify_error_string@@Base+0x270>
  420b48:	mov    WORD PTR [rbp-0x22],ax
  420b4c:	movzx  eax,WORD PTR [rbp-0x22]
  420b50:	movzx  edx,ax
  420b53:	mov    eax,DWORD PTR [rbp-0x60]
  420b56:	add    eax,edx
  420b58:	mov    DWORD PTR [rbp-0x54],eax
  420b5b:	mov    eax,DWORD PTR [rbp-0x54]
  420b5e:	cmp    eax,DWORD PTR [rbp-0x7c]
  420b61:	ja     420b79 <flatcc_verify_error_string@@Base+0x9f4>
  420b63:	movzx  eax,WORD PTR [rbp-0x22]
  420b67:	movzx  eax,ax
  420b6a:	and    eax,0x1
  420b6d:	test   rax,rax
  420b70:	jne    420b79 <flatcc_verify_error_string@@Base+0x9f4>
  420b72:	mov    eax,0x1
  420b77:	jmp    420b7e <flatcc_verify_error_string@@Base+0x9f9>
  420b79:	mov    eax,0x0
  420b7e:	mov    DWORD PTR [rbp-0x50],eax
  420b81:	cmp    DWORD PTR [rbp-0x50],0x0
  420b85:	jne    420b91 <flatcc_verify_error_string@@Base+0xa0c>
  420b87:	mov    eax,0x1e
  420b8c:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420b91:	mov    DWORD PTR [rbp-0x4c],0x1
  420b98:	cmp    DWORD PTR [rbp-0x4c],0x0
  420b9c:	jne    420ba8 <flatcc_verify_error_string@@Base+0xa23>
  420b9e:	mov    eax,0x1f
  420ba3:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420ba8:	movzx  eax,WORD PTR [rbp-0x22]
  420bac:	cmp    ax,0x3
  420bb0:	seta   al
  420bb3:	movzx  eax,al
  420bb6:	mov    DWORD PTR [rbp-0x48],eax
  420bb9:	cmp    DWORD PTR [rbp-0x48],0x0
  420bbd:	jne    420bc6 <flatcc_verify_error_string@@Base+0xa41>
  420bbf:	mov    eax,0x1c
  420bc4:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420bc6:	mov    eax,DWORD PTR [rbp-0x60]
  420bc9:	lea    edx,[rax+0x2]
  420bcc:	mov    rax,QWORD PTR [rbp-0x78]
  420bd0:	mov    esi,edx
  420bd2:	mov    rdi,rax
  420bd5:	call   4203f5 <flatcc_verify_error_string@@Base+0x270>
  420bda:	mov    WORD PTR [rbp-0x24],ax
  420bde:	mov    eax,DWORD PTR [rbp-0x28]
  420be1:	mov    edx,DWORD PTR [rbp-0x7c]
  420be4:	sub    edx,eax
  420be6:	movzx  eax,WORD PTR [rbp-0x24]
  420bea:	movzx  eax,ax
  420bed:	cmp    edx,eax
  420bef:	setae  al
  420bf2:	movzx  eax,al
  420bf5:	mov    DWORD PTR [rbp-0x44],eax
  420bf8:	cmp    DWORD PTR [rbp-0x44],0x0
  420bfc:	jne    420c05 <flatcc_verify_error_string@@Base+0xa80>
  420bfe:	mov    eax,0x14
  420c03:	jmp    420c31 <flatcc_verify_error_string@@Base+0xaac>
  420c05:	mov    edx,DWORD PTR [rbp-0x60]
  420c08:	mov    rax,QWORD PTR [rbp-0x78]
  420c0c:	add    rax,rdx
  420c0f:	mov    QWORD PTR [rbp-0x30],rax
  420c13:	mov    rax,QWORD PTR [rbp-0x78]
  420c17:	mov    QWORD PTR [rbp-0x40],rax
  420c1b:	mov    eax,DWORD PTR [rbp-0x7c]
  420c1e:	mov    DWORD PTR [rbp-0x38],eax
  420c21:	lea    rdx,[rbp-0x40]
  420c25:	mov    rax,QWORD PTR [rbp-0x90]
  420c2c:	mov    rdi,rdx
  420c2f:	call   rax
  420c31:	mov    rcx,QWORD PTR [rbp-0x18]
  420c35:	xor    rcx,QWORD PTR fs:0x28
  420c3e:	je     420c45 <flatcc_verify_error_string@@Base+0xac0>
  420c40:	call   405070 <__stack_chk_fail@plt>
  420c45:	add    rsp,0x88
  420c4c:	pop    rbx
  420c4d:	pop    rbp
  420c4e:	ret    
  420c4f:	push   rbp
  420c50:	mov    rbp,rsp
  420c53:	sub    rsp,0x30
  420c57:	mov    QWORD PTR [rbp-0x18],rdi
  420c5b:	mov    DWORD PTR [rbp-0x1c],esi
  420c5e:	mov    DWORD PTR [rbp-0x20],edx
  420c61:	mov    DWORD PTR [rbp-0x24],ecx
  420c64:	mov    DWORD PTR [rbp-0x28],r8d
  420c68:	mov    QWORD PTR [rbp-0x30],r9
  420c6c:	mov    eax,DWORD PTR [rbp-0x28]
  420c6f:	lea    edx,[rax-0x1]
  420c72:	mov    DWORD PTR [rbp-0x28],edx
  420c75:	test   eax,eax
  420c77:	setg   al
  420c7a:	movzx  eax,al
  420c7d:	mov    DWORD PTR [rbp-0x8],eax
  420c80:	cmp    DWORD PTR [rbp-0x8],0x0
  420c84:	jne    420c90 <flatcc_verify_error_string@@Base+0xb0b>
  420c86:	mov    eax,0x3
  420c8b:	jmp    420d9f <flatcc_verify_error_string@@Base+0xc1a>
  420c90:	mov    ecx,DWORD PTR [rbp-0x24]
  420c93:	mov    edx,DWORD PTR [rbp-0x20]
  420c96:	mov    esi,DWORD PTR [rbp-0x1c]
  420c99:	mov    rax,QWORD PTR [rbp-0x18]
  420c9d:	push   0x3fffffff
  420ca2:	mov    r9d,0x4
  420ca8:	mov    r8d,0x4
  420cae:	mov    rdi,rax
  420cb1:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  420cb6:	add    rsp,0x8
  420cba:	test   eax,eax
  420cbc:	je     420ced <flatcc_verify_error_string@@Base+0xb68>
  420cbe:	mov    ecx,DWORD PTR [rbp-0x24]
  420cc1:	mov    edx,DWORD PTR [rbp-0x20]
  420cc4:	mov    esi,DWORD PTR [rbp-0x1c]
  420cc7:	mov    rax,QWORD PTR [rbp-0x18]
  420ccb:	push   0x3fffffff
  420cd0:	mov    r9d,0x4
  420cd6:	mov    r8d,0x4
  420cdc:	mov    rdi,rax
  420cdf:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  420ce4:	add    rsp,0x8
  420ce8:	jmp    420d9f <flatcc_verify_error_string@@Base+0xc1a>
  420ced:	mov    eax,DWORD PTR [rbp-0x24]
  420cf0:	add    DWORD PTR [rbp-0x20],eax
  420cf3:	mov    edx,DWORD PTR [rbp-0x20]
  420cf6:	mov    rax,QWORD PTR [rbp-0x18]
  420cfa:	mov    esi,edx
  420cfc:	mov    rdi,rax
  420cff:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420d04:	mov    DWORD PTR [rbp-0x4],eax
  420d07:	add    DWORD PTR [rbp-0x20],0x4
  420d0b:	mov    DWORD PTR [rbp-0xc],0x0
  420d12:	jmp    420d8e <flatcc_verify_error_string@@Base+0xc09>
  420d14:	mov    edx,DWORD PTR [rbp-0x20]
  420d17:	mov    rax,QWORD PTR [rbp-0x18]
  420d1b:	mov    esi,edx
  420d1d:	mov    rdi,rax
  420d20:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420d25:	mov    r10d,eax
  420d28:	mov    rdi,QWORD PTR [rbp-0x30]
  420d2c:	mov    ecx,DWORD PTR [rbp-0x28]
  420d2f:	mov    edx,DWORD PTR [rbp-0x20]
  420d32:	mov    esi,DWORD PTR [rbp-0x1c]
  420d35:	mov    rax,QWORD PTR [rbp-0x18]
  420d39:	mov    r9,rdi
  420d3c:	mov    r8d,ecx
  420d3f:	mov    ecx,r10d
  420d42:	mov    rdi,rax
  420d45:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  420d4a:	test   eax,eax
  420d4c:	je     420d86 <flatcc_verify_error_string@@Base+0xc01>
  420d4e:	mov    edx,DWORD PTR [rbp-0x20]
  420d51:	mov    rax,QWORD PTR [rbp-0x18]
  420d55:	mov    esi,edx
  420d57:	mov    rdi,rax
  420d5a:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420d5f:	mov    r10d,eax
  420d62:	mov    rdi,QWORD PTR [rbp-0x30]
  420d66:	mov    ecx,DWORD PTR [rbp-0x28]
  420d69:	mov    edx,DWORD PTR [rbp-0x20]
  420d6c:	mov    esi,DWORD PTR [rbp-0x1c]
  420d6f:	mov    rax,QWORD PTR [rbp-0x18]
  420d73:	mov    r9,rdi
  420d76:	mov    r8d,ecx
  420d79:	mov    ecx,r10d
  420d7c:	mov    rdi,rax
  420d7f:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  420d84:	jmp    420d9f <flatcc_verify_error_string@@Base+0xc1a>
  420d86:	add    DWORD PTR [rbp-0xc],0x1
  420d8a:	add    DWORD PTR [rbp-0x20],0x4
  420d8e:	mov    eax,DWORD PTR [rbp-0xc]
  420d91:	cmp    eax,DWORD PTR [rbp-0x4]
  420d94:	jb     420d14 <flatcc_verify_error_string@@Base+0xb8f>
  420d9a:	mov    eax,0x0
  420d9f:	leave  
  420da0:	ret    
  420da1:	push   rbp
  420da2:	mov    rbp,rsp
  420da5:	add    rsp,0xffffffffffffff80
  420da9:	mov    QWORD PTR [rbp-0x58],rdi
  420dad:	mov    DWORD PTR [rbp-0x5c],esi
  420db0:	mov    DWORD PTR [rbp-0x60],edx
  420db3:	mov    DWORD PTR [rbp-0x64],ecx
  420db6:	mov    DWORD PTR [rbp-0x68],r8d
  420dba:	mov    QWORD PTR [rbp-0x70],r9
  420dbe:	mov    rax,QWORD PTR [rbp+0x18]
  420dc2:	mov    QWORD PTR [rbp-0x78],rax
  420dc6:	mov    rax,QWORD PTR fs:0x28
  420dcf:	mov    QWORD PTR [rbp-0x8],rax
  420dd3:	xor    eax,eax
  420dd5:	mov    eax,DWORD PTR [rbp+0x10]
  420dd8:	lea    edx,[rax-0x1]
  420ddb:	mov    DWORD PTR [rbp+0x10],edx
  420dde:	test   eax,eax
  420de0:	setg   al
  420de3:	movzx  eax,al
  420de6:	mov    DWORD PTR [rbp-0x48],eax
  420de9:	cmp    DWORD PTR [rbp-0x48],0x0
  420ded:	jne    420df9 <flatcc_verify_error_string@@Base+0xc74>
  420def:	mov    eax,0x3
  420df4:	jmp    420f6c <flatcc_verify_error_string@@Base+0xde7>
  420df9:	mov    ecx,DWORD PTR [rbp-0x64]
  420dfc:	mov    edx,DWORD PTR [rbp-0x60]
  420dff:	mov    esi,DWORD PTR [rbp-0x5c]
  420e02:	mov    rax,QWORD PTR [rbp-0x58]
  420e06:	push   0x3fffffff
  420e0b:	mov    r9d,0x4
  420e11:	mov    r8d,0x4
  420e17:	mov    rdi,rax
  420e1a:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  420e1f:	add    rsp,0x8
  420e23:	test   eax,eax
  420e25:	je     420e56 <flatcc_verify_error_string@@Base+0xcd1>
  420e27:	mov    ecx,DWORD PTR [rbp-0x64]
  420e2a:	mov    edx,DWORD PTR [rbp-0x60]
  420e2d:	mov    esi,DWORD PTR [rbp-0x5c]
  420e30:	mov    rax,QWORD PTR [rbp-0x58]
  420e34:	push   0x3fffffff
  420e39:	mov    r9d,0x4
  420e3f:	mov    r8d,0x4
  420e45:	mov    rdi,rax
  420e48:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  420e4d:	add    rsp,0x8
  420e51:	jmp    420f6c <flatcc_verify_error_string@@Base+0xde7>
  420e56:	mov    eax,DWORD PTR [rbp-0x64]
  420e59:	add    DWORD PTR [rbp-0x60],eax
  420e5c:	mov    edx,DWORD PTR [rbp-0x60]
  420e5f:	mov    rax,QWORD PTR [rbp-0x58]
  420e63:	mov    esi,edx
  420e65:	mov    rdi,rax
  420e68:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420e6d:	mov    DWORD PTR [rbp-0x44],eax
  420e70:	mov    eax,DWORD PTR [rbp-0x44]
  420e73:	cmp    eax,DWORD PTR [rbp-0x68]
  420e76:	sete   al
  420e79:	movzx  eax,al
  420e7c:	mov    DWORD PTR [rbp-0x40],eax
  420e7f:	cmp    DWORD PTR [rbp-0x40],0x0
  420e83:	jne    420e8f <flatcc_verify_error_string@@Base+0xd0a>
  420e85:	mov    eax,0x22
  420e8a:	jmp    420f6c <flatcc_verify_error_string@@Base+0xde7>
  420e8f:	add    DWORD PTR [rbp-0x60],0x4
  420e93:	mov    rax,QWORD PTR [rbp-0x58]
  420e97:	mov    QWORD PTR [rbp-0x30],rax
  420e9b:	mov    eax,DWORD PTR [rbp-0x5c]
  420e9e:	mov    DWORD PTR [rbp-0x28],eax
  420ea1:	mov    eax,DWORD PTR [rbp+0x10]
  420ea4:	mov    DWORD PTR [rbp-0x24],eax
  420ea7:	mov    DWORD PTR [rbp-0x4c],0x0
  420eae:	jmp    420f5b <flatcc_verify_error_string@@Base+0xdd6>
  420eb3:	mov    edx,DWORD PTR [rbp-0x60]
  420eb6:	mov    rax,QWORD PTR [rbp-0x58]
  420eba:	mov    esi,edx
  420ebc:	mov    rdi,rax
  420ebf:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  420ec4:	mov    DWORD PTR [rbp-0x3c],eax
  420ec7:	cmp    DWORD PTR [rbp-0x3c],0x0
  420ecb:	jne    420ef2 <flatcc_verify_error_string@@Base+0xd6d>
  420ecd:	mov    edx,DWORD PTR [rbp-0x4c]
  420ed0:	mov    rax,QWORD PTR [rbp-0x70]
  420ed4:	add    rax,rdx
  420ed7:	movzx  eax,BYTE PTR [rax]
  420eda:	test   al,al
  420edc:	sete   al
  420edf:	movzx  eax,al
  420ee2:	mov    DWORD PTR [rbp-0x34],eax
  420ee5:	cmp    DWORD PTR [rbp-0x34],0x0
  420ee9:	jne    420f53 <flatcc_verify_error_string@@Base+0xdce>
  420eeb:	mov    eax,0x20
  420ef0:	jmp    420f6c <flatcc_verify_error_string@@Base+0xde7>
  420ef2:	mov    edx,DWORD PTR [rbp-0x4c]
  420ef5:	mov    rax,QWORD PTR [rbp-0x70]
  420ef9:	add    rax,rdx
  420efc:	movzx  eax,BYTE PTR [rax]
  420eff:	test   al,al
  420f01:	setne  al
  420f04:	movzx  eax,al
  420f07:	mov    DWORD PTR [rbp-0x38],eax
  420f0a:	cmp    DWORD PTR [rbp-0x38],0x0
  420f0e:	jne    420f17 <flatcc_verify_error_string@@Base+0xd92>
  420f10:	mov    eax,0x21
  420f15:	jmp    420f6c <flatcc_verify_error_string@@Base+0xde7>
  420f17:	mov    edx,DWORD PTR [rbp-0x4c]
  420f1a:	mov    rax,QWORD PTR [rbp-0x70]
  420f1e:	add    rax,rdx
  420f21:	movzx  eax,BYTE PTR [rax]
  420f24:	mov    BYTE PTR [rbp-0x20],al
  420f27:	mov    eax,DWORD PTR [rbp-0x60]
  420f2a:	mov    DWORD PTR [rbp-0x1c],eax
  420f2d:	mov    eax,DWORD PTR [rbp-0x3c]
  420f30:	mov    DWORD PTR [rbp-0x18],eax
  420f33:	lea    rdx,[rbp-0x30]
  420f37:	mov    rax,QWORD PTR [rbp-0x78]
  420f3b:	mov    rdi,rdx
  420f3e:	call   rax
  420f40:	test   eax,eax
  420f42:	je     420f53 <flatcc_verify_error_string@@Base+0xdce>
  420f44:	lea    rdx,[rbp-0x30]
  420f48:	mov    rax,QWORD PTR [rbp-0x78]
  420f4c:	mov    rdi,rdx
  420f4f:	call   rax
  420f51:	jmp    420f6c <flatcc_verify_error_string@@Base+0xde7>
  420f53:	add    DWORD PTR [rbp-0x4c],0x1
  420f57:	add    DWORD PTR [rbp-0x60],0x4
  420f5b:	mov    eax,DWORD PTR [rbp-0x4c]
  420f5e:	cmp    eax,DWORD PTR [rbp-0x44]
  420f61:	jb     420eb3 <flatcc_verify_error_string@@Base+0xd2e>
  420f67:	mov    eax,0x0
  420f6c:	mov    rcx,QWORD PTR [rbp-0x8]
  420f70:	xor    rcx,QWORD PTR fs:0x28
  420f79:	je     420f80 <flatcc_verify_error_string@@Base+0xdfb>
  420f7b:	call   405070 <__stack_chk_fail@plt>
  420f80:	leave  
  420f81:	ret    

0000000000420f82 <flatcc_verify_field@@Base>:
  420f82:	push   rbp
  420f83:	mov    rbp,rsp
  420f86:	sub    rsp,0x18
  420f8a:	mov    QWORD PTR [rbp-0x8],rdi
  420f8e:	mov    QWORD PTR [rbp-0x18],rdx
  420f92:	mov    eax,ecx
  420f94:	mov    WORD PTR [rbp-0xc],si
  420f98:	mov    WORD PTR [rbp-0x10],ax
  420f9c:	movzx  edx,WORD PTR [rbp-0x10]
  420fa0:	mov    rax,QWORD PTR [rbp-0x18]
  420fa4:	mov    ecx,eax
  420fa6:	movzx  esi,WORD PTR [rbp-0xc]
  420faa:	mov    rax,QWORD PTR [rbp-0x8]
  420fae:	mov    r8d,edx
  420fb1:	mov    edx,0x0
  420fb6:	mov    rdi,rax
  420fb9:	call   420616 <flatcc_verify_error_string@@Base+0x491>
  420fbe:	test   eax,eax
  420fc0:	je     420fe6 <flatcc_verify_field@@Base+0x64>
  420fc2:	movzx  edx,WORD PTR [rbp-0x10]
  420fc6:	mov    rax,QWORD PTR [rbp-0x18]
  420fca:	mov    ecx,eax
  420fcc:	movzx  esi,WORD PTR [rbp-0xc]
  420fd0:	mov    rax,QWORD PTR [rbp-0x8]
  420fd4:	mov    r8d,edx
  420fd7:	mov    edx,0x0
  420fdc:	mov    rdi,rax
  420fdf:	call   420616 <flatcc_verify_error_string@@Base+0x491>
  420fe4:	jmp    420feb <flatcc_verify_field@@Base+0x69>
  420fe6:	mov    eax,0x0
  420feb:	leave  
  420fec:	ret    

0000000000420fed <flatcc_verify_string_field@@Base>:
  420fed:	push   rbp
  420fee:	mov    rbp,rsp
  420ff1:	sub    rsp,0x20
  420ff5:	mov    QWORD PTR [rbp-0x18],rdi
  420ff9:	mov    eax,esi
  420ffb:	mov    DWORD PTR [rbp-0x20],edx
  420ffe:	mov    WORD PTR [rbp-0x1c],ax
  421002:	mov    rax,QWORD PTR fs:0x28
  42100b:	mov    QWORD PTR [rbp-0x8],rax
  42100f:	xor    eax,eax
  421011:	movzx  esi,WORD PTR [rbp-0x1c]
  421015:	lea    rcx,[rbp-0x10]
  421019:	mov    edx,DWORD PTR [rbp-0x20]
  42101c:	mov    rax,QWORD PTR [rbp-0x18]
  421020:	mov    rdi,rax
  421023:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  421028:	mov    DWORD PTR [rbp-0xc],eax
  42102b:	cmp    DWORD PTR [rbp-0xc],0x0
  42102f:	jne    421038 <flatcc_verify_string_field@@Base+0x4b>
  421031:	mov    eax,DWORD PTR [rbp-0x10]
  421034:	test   eax,eax
  421036:	jne    42103d <flatcc_verify_string_field@@Base+0x50>
  421038:	mov    eax,DWORD PTR [rbp-0xc]
  42103b:	jmp    42106c <flatcc_verify_string_field@@Base+0x7f>
  42103d:	mov    edx,DWORD PTR [rbp-0x10]
  421040:	mov    rax,QWORD PTR [rbp-0x18]
  421044:	mov    rax,QWORD PTR [rax]
  421047:	mov    esi,edx
  421049:	mov    rdi,rax
  42104c:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421051:	mov    ecx,eax
  421053:	mov    edx,DWORD PTR [rbp-0x10]
  421056:	mov    rax,QWORD PTR [rbp-0x18]
  42105a:	mov    esi,DWORD PTR [rax+0x8]
  42105d:	mov    rax,QWORD PTR [rbp-0x18]
  421061:	mov    rax,QWORD PTR [rax]
  421064:	mov    rdi,rax
  421067:	call   4207dd <flatcc_verify_error_string@@Base+0x658>
  42106c:	mov    rdi,QWORD PTR [rbp-0x8]
  421070:	xor    rdi,QWORD PTR fs:0x28
  421079:	je     421080 <flatcc_verify_string_field@@Base+0x93>
  42107b:	call   405070 <__stack_chk_fail@plt>
  421080:	leave  
  421081:	ret    

0000000000421082 <flatcc_verify_vector_field@@Base>:
  421082:	push   rbp
  421083:	mov    rbp,rsp
  421086:	push   r13
  421088:	push   r12
  42108a:	push   rbx
  42108b:	sub    rsp,0x48
  42108f:	mov    QWORD PTR [rbp-0x38],rdi
  421093:	mov    eax,esi
  421095:	mov    DWORD PTR [rbp-0x40],edx
  421098:	mov    QWORD PTR [rbp-0x48],rcx
  42109c:	mov    edx,r8d
  42109f:	mov    QWORD PTR [rbp-0x58],r9
  4210a3:	mov    WORD PTR [rbp-0x3c],ax
  4210a7:	mov    WORD PTR [rbp-0x4c],dx
  4210ab:	mov    rax,QWORD PTR fs:0x28
  4210b4:	mov    QWORD PTR [rbp-0x28],rax
  4210b8:	xor    eax,eax
  4210ba:	movzx  esi,WORD PTR [rbp-0x3c]
  4210be:	lea    rcx,[rbp-0x30]
  4210c2:	mov    edx,DWORD PTR [rbp-0x40]
  4210c5:	mov    rax,QWORD PTR [rbp-0x38]
  4210c9:	mov    rdi,rax
  4210cc:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  4210d1:	mov    DWORD PTR [rbp-0x2c],eax
  4210d4:	cmp    DWORD PTR [rbp-0x2c],0x0
  4210d8:	jne    4210e1 <flatcc_verify_vector_field@@Base+0x5f>
  4210da:	mov    eax,DWORD PTR [rbp-0x30]
  4210dd:	test   eax,eax
  4210df:	jne    4210e6 <flatcc_verify_vector_field@@Base+0x64>
  4210e1:	mov    eax,DWORD PTR [rbp-0x2c]
  4210e4:	jmp    421133 <flatcc_verify_vector_field@@Base+0xb1>
  4210e6:	mov    rax,QWORD PTR [rbp-0x58]
  4210ea:	mov    r12d,eax
  4210ed:	movzx  ebx,WORD PTR [rbp-0x4c]
  4210f1:	mov    rax,QWORD PTR [rbp-0x48]
  4210f5:	mov    r13d,eax
  4210f8:	mov    edx,DWORD PTR [rbp-0x30]
  4210fb:	mov    rax,QWORD PTR [rbp-0x38]
  4210ff:	mov    rax,QWORD PTR [rax]
  421102:	mov    esi,edx
  421104:	mov    rdi,rax
  421107:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  42110c:	mov    ecx,eax
  42110e:	mov    edx,DWORD PTR [rbp-0x30]
  421111:	mov    rax,QWORD PTR [rbp-0x38]
  421115:	mov    esi,DWORD PTR [rax+0x8]
  421118:	mov    rax,QWORD PTR [rbp-0x38]
  42111c:	mov    rax,QWORD PTR [rax]
  42111f:	push   r12
  421121:	mov    r9d,ebx
  421124:	mov    r8d,r13d
  421127:	mov    rdi,rax
  42112a:	call   420888 <flatcc_verify_error_string@@Base+0x703>
  42112f:	add    rsp,0x8
  421133:	mov    rbx,QWORD PTR [rbp-0x28]
  421137:	xor    rbx,QWORD PTR fs:0x28
  421140:	je     421147 <flatcc_verify_vector_field@@Base+0xc5>
  421142:	call   405070 <__stack_chk_fail@plt>
  421147:	lea    rsp,[rbp-0x18]
  42114b:	pop    rbx
  42114c:	pop    r12
  42114e:	pop    r13
  421150:	pop    rbp
  421151:	ret    

0000000000421152 <flatcc_verify_string_vector_field@@Base>:
  421152:	push   rbp
  421153:	mov    rbp,rsp
  421156:	sub    rsp,0x20
  42115a:	mov    QWORD PTR [rbp-0x18],rdi
  42115e:	mov    eax,esi
  421160:	mov    DWORD PTR [rbp-0x20],edx
  421163:	mov    WORD PTR [rbp-0x1c],ax
  421167:	mov    rax,QWORD PTR fs:0x28
  421170:	mov    QWORD PTR [rbp-0x8],rax
  421174:	xor    eax,eax
  421176:	movzx  esi,WORD PTR [rbp-0x1c]
  42117a:	lea    rcx,[rbp-0x10]
  42117e:	mov    edx,DWORD PTR [rbp-0x20]
  421181:	mov    rax,QWORD PTR [rbp-0x18]
  421185:	mov    rdi,rax
  421188:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  42118d:	mov    DWORD PTR [rbp-0xc],eax
  421190:	cmp    DWORD PTR [rbp-0xc],0x0
  421194:	jne    42119d <flatcc_verify_string_vector_field@@Base+0x4b>
  421196:	mov    eax,DWORD PTR [rbp-0x10]
  421199:	test   eax,eax
  42119b:	jne    4211a2 <flatcc_verify_string_vector_field@@Base+0x50>
  42119d:	mov    eax,DWORD PTR [rbp-0xc]
  4211a0:	jmp    4211d1 <flatcc_verify_string_vector_field@@Base+0x7f>
  4211a2:	mov    edx,DWORD PTR [rbp-0x10]
  4211a5:	mov    rax,QWORD PTR [rbp-0x18]
  4211a9:	mov    rax,QWORD PTR [rax]
  4211ac:	mov    esi,edx
  4211ae:	mov    rdi,rax
  4211b1:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  4211b6:	mov    ecx,eax
  4211b8:	mov    edx,DWORD PTR [rbp-0x10]
  4211bb:	mov    rax,QWORD PTR [rbp-0x18]
  4211bf:	mov    esi,DWORD PTR [rax+0x8]
  4211c2:	mov    rax,QWORD PTR [rbp-0x18]
  4211c6:	mov    rax,QWORD PTR [rax]
  4211c9:	mov    rdi,rax
  4211cc:	call   420934 <flatcc_verify_error_string@@Base+0x7af>
  4211d1:	mov    rdi,QWORD PTR [rbp-0x8]
  4211d5:	xor    rdi,QWORD PTR fs:0x28
  4211de:	je     4211e5 <flatcc_verify_string_vector_field@@Base+0x93>
  4211e0:	call   405070 <__stack_chk_fail@plt>
  4211e5:	leave  
  4211e6:	ret    

00000000004211e7 <flatcc_verify_table_field@@Base>:
  4211e7:	push   rbp
  4211e8:	mov    rbp,rsp
  4211eb:	push   rbx
  4211ec:	sub    rsp,0x38
  4211f0:	mov    QWORD PTR [rbp-0x28],rdi
  4211f4:	mov    eax,esi
  4211f6:	mov    DWORD PTR [rbp-0x30],edx
  4211f9:	mov    QWORD PTR [rbp-0x38],rcx
  4211fd:	mov    WORD PTR [rbp-0x2c],ax
  421201:	mov    rax,QWORD PTR fs:0x28
  42120a:	mov    QWORD PTR [rbp-0x18],rax
  42120e:	xor    eax,eax
  421210:	movzx  esi,WORD PTR [rbp-0x2c]
  421214:	lea    rcx,[rbp-0x20]
  421218:	mov    edx,DWORD PTR [rbp-0x30]
  42121b:	mov    rax,QWORD PTR [rbp-0x28]
  42121f:	mov    rdi,rax
  421222:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  421227:	mov    DWORD PTR [rbp-0x1c],eax
  42122a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42122e:	jne    421237 <flatcc_verify_table_field@@Base+0x50>
  421230:	mov    eax,DWORD PTR [rbp-0x20]
  421233:	test   eax,eax
  421235:	jne    42123c <flatcc_verify_table_field@@Base+0x55>
  421237:	mov    eax,DWORD PTR [rbp-0x1c]
  42123a:	jmp    42127e <flatcc_verify_table_field@@Base+0x97>
  42123c:	mov    rax,QWORD PTR [rbp-0x28]
  421240:	mov    ebx,DWORD PTR [rax+0xc]
  421243:	mov    edx,DWORD PTR [rbp-0x20]
  421246:	mov    rax,QWORD PTR [rbp-0x28]
  42124a:	mov    rax,QWORD PTR [rax]
  42124d:	mov    esi,edx
  42124f:	mov    rdi,rax
  421252:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421257:	mov    edi,eax
  421259:	mov    edx,DWORD PTR [rbp-0x20]
  42125c:	mov    rax,QWORD PTR [rbp-0x28]
  421260:	mov    esi,DWORD PTR [rax+0x8]
  421263:	mov    rax,QWORD PTR [rbp-0x28]
  421267:	mov    rax,QWORD PTR [rax]
  42126a:	mov    rcx,QWORD PTR [rbp-0x38]
  42126e:	mov    r9,rcx
  421271:	mov    r8d,ebx
  421274:	mov    ecx,edi
  421276:	mov    rdi,rax
  421279:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  42127e:	mov    rbx,QWORD PTR [rbp-0x18]
  421282:	xor    rbx,QWORD PTR fs:0x28
  42128b:	je     421292 <flatcc_verify_table_field@@Base+0xab>
  42128d:	call   405070 <__stack_chk_fail@plt>
  421292:	add    rsp,0x38
  421296:	pop    rbx
  421297:	pop    rbp
  421298:	ret    

0000000000421299 <flatcc_verify_table_vector_field@@Base>:
  421299:	push   rbp
  42129a:	mov    rbp,rsp
  42129d:	push   rbx
  42129e:	sub    rsp,0x38
  4212a2:	mov    QWORD PTR [rbp-0x28],rdi
  4212a6:	mov    eax,esi
  4212a8:	mov    DWORD PTR [rbp-0x30],edx
  4212ab:	mov    QWORD PTR [rbp-0x38],rcx
  4212af:	mov    WORD PTR [rbp-0x2c],ax
  4212b3:	mov    rax,QWORD PTR fs:0x28
  4212bc:	mov    QWORD PTR [rbp-0x18],rax
  4212c0:	xor    eax,eax
  4212c2:	movzx  esi,WORD PTR [rbp-0x2c]
  4212c6:	lea    rcx,[rbp-0x20]
  4212ca:	mov    edx,DWORD PTR [rbp-0x30]
  4212cd:	mov    rax,QWORD PTR [rbp-0x28]
  4212d1:	mov    rdi,rax
  4212d4:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  4212d9:	mov    DWORD PTR [rbp-0x1c],eax
  4212dc:	cmp    DWORD PTR [rbp-0x1c],0x0
  4212e0:	jne    4212e9 <flatcc_verify_table_vector_field@@Base+0x50>
  4212e2:	mov    eax,DWORD PTR [rbp-0x20]
  4212e5:	test   eax,eax
  4212e7:	jne    4212ee <flatcc_verify_table_vector_field@@Base+0x55>
  4212e9:	mov    eax,DWORD PTR [rbp-0x1c]
  4212ec:	jmp    421330 <flatcc_verify_table_vector_field@@Base+0x97>
  4212ee:	mov    rax,QWORD PTR [rbp-0x28]
  4212f2:	mov    ebx,DWORD PTR [rax+0xc]
  4212f5:	mov    edx,DWORD PTR [rbp-0x20]
  4212f8:	mov    rax,QWORD PTR [rbp-0x28]
  4212fc:	mov    rax,QWORD PTR [rax]
  4212ff:	mov    esi,edx
  421301:	mov    rdi,rax
  421304:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421309:	mov    edi,eax
  42130b:	mov    edx,DWORD PTR [rbp-0x20]
  42130e:	mov    rax,QWORD PTR [rbp-0x28]
  421312:	mov    esi,DWORD PTR [rax+0x8]
  421315:	mov    rax,QWORD PTR [rbp-0x28]
  421319:	mov    rax,QWORD PTR [rax]
  42131c:	mov    rcx,QWORD PTR [rbp-0x38]
  421320:	mov    r9,rcx
  421323:	mov    r8d,ebx
  421326:	mov    ecx,edi
  421328:	mov    rdi,rax
  42132b:	call   420c4f <flatcc_verify_error_string@@Base+0xaca>
  421330:	mov    rbx,QWORD PTR [rbp-0x18]
  421334:	xor    rbx,QWORD PTR fs:0x28
  42133d:	je     421344 <flatcc_verify_table_vector_field@@Base+0xab>
  42133f:	call   405070 <__stack_chk_fail@plt>
  421344:	add    rsp,0x38
  421348:	pop    rbx
  421349:	pop    rbp
  42134a:	ret    

000000000042134b <flatcc_verify_union_table@@Base>:
  42134b:	push   rbp
  42134c:	mov    rbp,rsp
  42134f:	sub    rsp,0x10
  421353:	mov    QWORD PTR [rbp-0x8],rdi
  421357:	mov    QWORD PTR [rbp-0x10],rsi
  42135b:	mov    rax,QWORD PTR [rbp-0x8]
  42135f:	mov    edi,DWORD PTR [rax+0xc]
  421362:	mov    rax,QWORD PTR [rbp-0x8]
  421366:	mov    ecx,DWORD PTR [rax+0x18]
  421369:	mov    rax,QWORD PTR [rbp-0x8]
  42136d:	mov    edx,DWORD PTR [rax+0x14]
  421370:	mov    rax,QWORD PTR [rbp-0x8]
  421374:	mov    esi,DWORD PTR [rax+0x8]
  421377:	mov    rax,QWORD PTR [rbp-0x8]
  42137b:	mov    rax,QWORD PTR [rax]
  42137e:	mov    r8,QWORD PTR [rbp-0x10]
  421382:	mov    r9,r8
  421385:	mov    r8d,edi
  421388:	mov    rdi,rax
  42138b:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  421390:	leave  
  421391:	ret    

0000000000421392 <flatcc_verify_union_struct@@Base>:
  421392:	push   rbp
  421393:	mov    rbp,rsp
  421396:	sub    rsp,0x18
  42139a:	mov    QWORD PTR [rbp-0x8],rdi
  42139e:	mov    QWORD PTR [rbp-0x10],rsi
  4213a2:	mov    eax,edx
  4213a4:	mov    WORD PTR [rbp-0x14],ax
  4213a8:	movzx  ecx,WORD PTR [rbp-0x14]
  4213ac:	mov    rax,QWORD PTR [rbp-0x10]
  4213b0:	mov    edi,eax
  4213b2:	mov    rax,QWORD PTR [rbp-0x8]
  4213b6:	mov    edx,DWORD PTR [rax+0x18]
  4213b9:	mov    rax,QWORD PTR [rbp-0x8]
  4213bd:	mov    esi,DWORD PTR [rax+0x14]
  4213c0:	mov    rax,QWORD PTR [rbp-0x8]
  4213c4:	mov    eax,DWORD PTR [rax+0x8]
  4213c7:	mov    r8d,ecx
  4213ca:	mov    ecx,edi
  4213cc:	mov    edi,eax
  4213ce:	call   4204d1 <flatcc_verify_error_string@@Base+0x34c>
  4213d3:	leave  
  4213d4:	ret    

00000000004213d5 <flatcc_verify_union_string@@Base>:
  4213d5:	push   rbp
  4213d6:	mov    rbp,rsp
  4213d9:	sub    rsp,0x8
  4213dd:	mov    QWORD PTR [rbp-0x8],rdi
  4213e1:	mov    rax,QWORD PTR [rbp-0x8]
  4213e5:	mov    ecx,DWORD PTR [rax+0x18]
  4213e8:	mov    rax,QWORD PTR [rbp-0x8]
  4213ec:	mov    edx,DWORD PTR [rax+0x14]
  4213ef:	mov    rax,QWORD PTR [rbp-0x8]
  4213f3:	mov    esi,DWORD PTR [rax+0x8]
  4213f6:	mov    rax,QWORD PTR [rbp-0x8]
  4213fa:	mov    rax,QWORD PTR [rax]
  4213fd:	mov    rdi,rax
  421400:	call   4207dd <flatcc_verify_error_string@@Base+0x658>
  421405:	leave  
  421406:	ret    

0000000000421407 <flatcc_verify_buffer_header@@Base>:
  421407:	push   rbp
  421408:	mov    rbp,rsp
  42140b:	sub    rsp,0x40
  42140f:	mov    QWORD PTR [rbp-0x28],rdi
  421413:	mov    QWORD PTR [rbp-0x30],rsi
  421417:	mov    QWORD PTR [rbp-0x38],rdx
  42141b:	mov    rax,QWORD PTR [rbp-0x28]
  42141f:	and    eax,0x3
  421422:	test   rax,rax
  421425:	sete   al
  421428:	movzx  eax,al
  42142b:	mov    DWORD PTR [rbp-0x18],eax
  42142e:	cmp    DWORD PTR [rbp-0x18],0x0
  421432:	jne    42143e <flatcc_verify_buffer_header@@Base+0x37>
  421434:	mov    eax,0x5
  421439:	jmp    4214d1 <flatcc_verify_buffer_header@@Base+0xca>
  42143e:	mov    eax,0xfffffff7
  421443:	cmp    QWORD PTR [rbp-0x30],rax
  421447:	setbe  al
  42144a:	movzx  eax,al
  42144d:	mov    DWORD PTR [rbp-0x14],eax
  421450:	cmp    DWORD PTR [rbp-0x14],0x0
  421454:	jne    42145d <flatcc_verify_buffer_header@@Base+0x56>
  421456:	mov    eax,0x6
  42145b:	jmp    4214d1 <flatcc_verify_buffer_header@@Base+0xca>
  42145d:	cmp    QWORD PTR [rbp-0x30],0x7
  421462:	seta   al
  421465:	movzx  eax,al
  421468:	mov    DWORD PTR [rbp-0x10],eax
  42146b:	cmp    DWORD PTR [rbp-0x10],0x0
  42146f:	jne    421478 <flatcc_verify_buffer_header@@Base+0x71>
  421471:	mov    eax,0x1
  421476:	jmp    4214d1 <flatcc_verify_buffer_header@@Base+0xca>
  421478:	cmp    QWORD PTR [rbp-0x38],0x0
  42147d:	je     4214cc <flatcc_verify_buffer_header@@Base+0xc5>
  42147f:	mov    rax,QWORD PTR [rbp-0x38]
  421483:	mov    rdi,rax
  421486:	call   420378 <flatcc_verify_error_string@@Base+0x1f3>
  42148b:	mov    DWORD PTR [rbp-0xc],eax
  42148e:	mov    rax,QWORD PTR [rbp-0x28]
  421492:	mov    esi,0x4
  421497:	mov    rdi,rax
  42149a:	call   4203d2 <flatcc_verify_error_string@@Base+0x24d>
  42149f:	mov    DWORD PTR [rbp-0x8],eax
  4214a2:	cmp    DWORD PTR [rbp-0xc],0x0
  4214a6:	je     4214b0 <flatcc_verify_buffer_header@@Base+0xa9>
  4214a8:	mov    eax,DWORD PTR [rbp-0x8]
  4214ab:	cmp    eax,DWORD PTR [rbp-0xc]
  4214ae:	jne    4214b7 <flatcc_verify_buffer_header@@Base+0xb0>
  4214b0:	mov    eax,0x1
  4214b5:	jmp    4214bc <flatcc_verify_buffer_header@@Base+0xb5>
  4214b7:	mov    eax,0x0
  4214bc:	mov    DWORD PTR [rbp-0x4],eax
  4214bf:	cmp    DWORD PTR [rbp-0x4],0x0
  4214c3:	jne    4214cc <flatcc_verify_buffer_header@@Base+0xc5>
  4214c5:	mov    eax,0x2
  4214ca:	jmp    4214d1 <flatcc_verify_buffer_header@@Base+0xca>
  4214cc:	mov    eax,0x0
  4214d1:	leave  
  4214d2:	ret    

00000000004214d3 <flatcc_verify_typed_buffer_header@@Base>:
  4214d3:	push   rbp
  4214d4:	mov    rbp,rsp
  4214d7:	sub    rsp,0x38
  4214db:	mov    QWORD PTR [rbp-0x28],rdi
  4214df:	mov    QWORD PTR [rbp-0x30],rsi
  4214e3:	mov    DWORD PTR [rbp-0x34],edx
  4214e6:	mov    rax,QWORD PTR [rbp-0x28]
  4214ea:	and    eax,0x3
  4214ed:	test   rax,rax
  4214f0:	sete   al
  4214f3:	movzx  eax,al
  4214f6:	mov    DWORD PTR [rbp-0x18],eax
  4214f9:	cmp    DWORD PTR [rbp-0x18],0x0
  4214fd:	jne    421509 <flatcc_verify_typed_buffer_header@@Base+0x36>
  4214ff:	mov    eax,0x5
  421504:	jmp    421592 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  421509:	mov    eax,0xfffffff7
  42150e:	cmp    QWORD PTR [rbp-0x30],rax
  421512:	setbe  al
  421515:	movzx  eax,al
  421518:	mov    DWORD PTR [rbp-0x14],eax
  42151b:	cmp    DWORD PTR [rbp-0x14],0x0
  42151f:	jne    421528 <flatcc_verify_typed_buffer_header@@Base+0x55>
  421521:	mov    eax,0x6
  421526:	jmp    421592 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  421528:	cmp    QWORD PTR [rbp-0x30],0x7
  42152d:	seta   al
  421530:	movzx  eax,al
  421533:	mov    DWORD PTR [rbp-0x10],eax
  421536:	cmp    DWORD PTR [rbp-0x10],0x0
  42153a:	jne    421543 <flatcc_verify_typed_buffer_header@@Base+0x70>
  42153c:	mov    eax,0x1
  421541:	jmp    421592 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  421543:	cmp    DWORD PTR [rbp-0x34],0x0
  421547:	je     42158d <flatcc_verify_typed_buffer_header@@Base+0xba>
  421549:	mov    eax,DWORD PTR [rbp-0x34]
  42154c:	mov    DWORD PTR [rbp-0xc],eax
  42154f:	mov    rax,QWORD PTR [rbp-0x28]
  421553:	mov    esi,0x4
  421558:	mov    rdi,rax
  42155b:	call   4203d2 <flatcc_verify_error_string@@Base+0x24d>
  421560:	mov    DWORD PTR [rbp-0x8],eax
  421563:	cmp    DWORD PTR [rbp-0xc],0x0
  421567:	je     421571 <flatcc_verify_typed_buffer_header@@Base+0x9e>
  421569:	mov    eax,DWORD PTR [rbp-0x8]
  42156c:	cmp    eax,DWORD PTR [rbp-0xc]
  42156f:	jne    421578 <flatcc_verify_typed_buffer_header@@Base+0xa5>
  421571:	mov    eax,0x1
  421576:	jmp    42157d <flatcc_verify_typed_buffer_header@@Base+0xaa>
  421578:	mov    eax,0x0
  42157d:	mov    DWORD PTR [rbp-0x4],eax
  421580:	cmp    DWORD PTR [rbp-0x4],0x0
  421584:	jne    42158d <flatcc_verify_typed_buffer_header@@Base+0xba>
  421586:	mov    eax,0x2
  42158b:	jmp    421592 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  42158d:	mov    eax,0x0
  421592:	leave  
  421593:	ret    

0000000000421594 <flatcc_verify_struct_as_root@@Base>:
  421594:	push   rbp
  421595:	mov    rbp,rsp
  421598:	push   r12
  42159a:	push   rbx
  42159b:	sub    rsp,0x30
  42159f:	mov    QWORD PTR [rbp-0x18],rdi
  4215a3:	mov    QWORD PTR [rbp-0x20],rsi
  4215a7:	mov    QWORD PTR [rbp-0x28],rdx
  4215ab:	mov    QWORD PTR [rbp-0x30],rcx
  4215af:	mov    eax,r8d
  4215b2:	mov    WORD PTR [rbp-0x34],ax
  4215b6:	mov    rdx,QWORD PTR [rbp-0x28]
  4215ba:	mov    rcx,QWORD PTR [rbp-0x20]
  4215be:	mov    rax,QWORD PTR [rbp-0x18]
  4215c2:	mov    rsi,rcx
  4215c5:	mov    rdi,rax
  4215c8:	call   421407 <flatcc_verify_buffer_header@@Base>
  4215cd:	test   eax,eax
  4215cf:	je     4215ea <flatcc_verify_struct_as_root@@Base+0x56>
  4215d1:	mov    rdx,QWORD PTR [rbp-0x28]
  4215d5:	mov    rcx,QWORD PTR [rbp-0x20]
  4215d9:	mov    rax,QWORD PTR [rbp-0x18]
  4215dd:	mov    rsi,rcx
  4215e0:	mov    rdi,rax
  4215e3:	call   421407 <flatcc_verify_buffer_header@@Base>
  4215e8:	jmp    42161e <flatcc_verify_struct_as_root@@Base+0x8a>
  4215ea:	movzx  ebx,WORD PTR [rbp-0x34]
  4215ee:	mov    rax,QWORD PTR [rbp-0x30]
  4215f2:	mov    r12d,eax
  4215f5:	mov    rax,QWORD PTR [rbp-0x18]
  4215f9:	mov    esi,0x0
  4215fe:	mov    rdi,rax
  421601:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421606:	mov    edx,eax
  421608:	mov    rax,QWORD PTR [rbp-0x20]
  42160c:	mov    r8d,ebx
  42160f:	mov    ecx,r12d
  421612:	mov    esi,0x0
  421617:	mov    edi,eax
  421619:	call   4204d1 <flatcc_verify_error_string@@Base+0x34c>
  42161e:	add    rsp,0x30
  421622:	pop    rbx
  421623:	pop    r12
  421625:	pop    rbp
  421626:	ret    

0000000000421627 <flatcc_verify_struct_as_typed_root@@Base>:
  421627:	push   rbp
  421628:	mov    rbp,rsp
  42162b:	push   r12
  42162d:	push   rbx
  42162e:	sub    rsp,0x20
  421632:	mov    QWORD PTR [rbp-0x18],rdi
  421636:	mov    QWORD PTR [rbp-0x20],rsi
  42163a:	mov    DWORD PTR [rbp-0x24],edx
  42163d:	mov    QWORD PTR [rbp-0x30],rcx
  421641:	mov    eax,r8d
  421644:	mov    WORD PTR [rbp-0x28],ax
  421648:	mov    edx,DWORD PTR [rbp-0x24]
  42164b:	mov    rcx,QWORD PTR [rbp-0x20]
  42164f:	mov    rax,QWORD PTR [rbp-0x18]
  421653:	mov    rsi,rcx
  421656:	mov    rdi,rax
  421659:	call   4214d3 <flatcc_verify_typed_buffer_header@@Base>
  42165e:	test   eax,eax
  421660:	je     42167a <flatcc_verify_struct_as_typed_root@@Base+0x53>
  421662:	mov    edx,DWORD PTR [rbp-0x24]
  421665:	mov    rcx,QWORD PTR [rbp-0x20]
  421669:	mov    rax,QWORD PTR [rbp-0x18]
  42166d:	mov    rsi,rcx
  421670:	mov    rdi,rax
  421673:	call   4214d3 <flatcc_verify_typed_buffer_header@@Base>
  421678:	jmp    4216ae <flatcc_verify_struct_as_typed_root@@Base+0x87>
  42167a:	movzx  ebx,WORD PTR [rbp-0x28]
  42167e:	mov    rax,QWORD PTR [rbp-0x30]
  421682:	mov    r12d,eax
  421685:	mov    rax,QWORD PTR [rbp-0x18]
  421689:	mov    esi,0x0
  42168e:	mov    rdi,rax
  421691:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421696:	mov    edx,eax
  421698:	mov    rax,QWORD PTR [rbp-0x20]
  42169c:	mov    r8d,ebx
  42169f:	mov    ecx,r12d
  4216a2:	mov    esi,0x0
  4216a7:	mov    edi,eax
  4216a9:	call   4204d1 <flatcc_verify_error_string@@Base+0x34c>
  4216ae:	add    rsp,0x20
  4216b2:	pop    rbx
  4216b3:	pop    r12
  4216b5:	pop    rbp
  4216b6:	ret    

00000000004216b7 <flatcc_verify_table_as_root@@Base>:
  4216b7:	push   rbp
  4216b8:	mov    rbp,rsp
  4216bb:	sub    rsp,0x20
  4216bf:	mov    QWORD PTR [rbp-0x8],rdi
  4216c3:	mov    QWORD PTR [rbp-0x10],rsi
  4216c7:	mov    QWORD PTR [rbp-0x18],rdx
  4216cb:	mov    QWORD PTR [rbp-0x20],rcx
  4216cf:	mov    rax,QWORD PTR [rbp-0x10]
  4216d3:	mov    ecx,eax
  4216d5:	mov    rdx,QWORD PTR [rbp-0x18]
  4216d9:	mov    rax,QWORD PTR [rbp-0x8]
  4216dd:	mov    rsi,rcx
  4216e0:	mov    rdi,rax
  4216e3:	call   421407 <flatcc_verify_buffer_header@@Base>
  4216e8:	test   eax,eax
  4216ea:	je     421707 <flatcc_verify_table_as_root@@Base+0x50>
  4216ec:	mov    rax,QWORD PTR [rbp-0x10]
  4216f0:	mov    ecx,eax
  4216f2:	mov    rdx,QWORD PTR [rbp-0x18]
  4216f6:	mov    rax,QWORD PTR [rbp-0x8]
  4216fa:	mov    rsi,rcx
  4216fd:	mov    rdi,rax
  421700:	call   421407 <flatcc_verify_buffer_header@@Base>
  421705:	jmp    42173e <flatcc_verify_table_as_root@@Base+0x87>
  421707:	mov    rax,QWORD PTR [rbp-0x8]
  42170b:	mov    esi,0x0
  421710:	mov    rdi,rax
  421713:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421718:	mov    ecx,eax
  42171a:	mov    rax,QWORD PTR [rbp-0x10]
  42171e:	mov    esi,eax
  421720:	mov    rdx,QWORD PTR [rbp-0x20]
  421724:	mov    rax,QWORD PTR [rbp-0x8]
  421728:	mov    r9,rdx
  42172b:	mov    r8d,0x64
  421731:	mov    edx,0x0
  421736:	mov    rdi,rax
  421739:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  42173e:	leave  
  42173f:	ret    

0000000000421740 <flatcc_verify_table_as_typed_root@@Base>:
  421740:	push   rbp
  421741:	mov    rbp,rsp
  421744:	sub    rsp,0x20
  421748:	mov    QWORD PTR [rbp-0x8],rdi
  42174c:	mov    QWORD PTR [rbp-0x10],rsi
  421750:	mov    DWORD PTR [rbp-0x14],edx
  421753:	mov    QWORD PTR [rbp-0x20],rcx
  421757:	mov    rax,QWORD PTR [rbp-0x10]
  42175b:	mov    ecx,eax
  42175d:	mov    edx,DWORD PTR [rbp-0x14]
  421760:	mov    rax,QWORD PTR [rbp-0x8]
  421764:	mov    rsi,rcx
  421767:	mov    rdi,rax
  42176a:	call   4214d3 <flatcc_verify_typed_buffer_header@@Base>
  42176f:	test   eax,eax
  421771:	je     42178d <flatcc_verify_table_as_typed_root@@Base+0x4d>
  421773:	mov    rax,QWORD PTR [rbp-0x10]
  421777:	mov    ecx,eax
  421779:	mov    edx,DWORD PTR [rbp-0x14]
  42177c:	mov    rax,QWORD PTR [rbp-0x8]
  421780:	mov    rsi,rcx
  421783:	mov    rdi,rax
  421786:	call   4214d3 <flatcc_verify_typed_buffer_header@@Base>
  42178b:	jmp    4217c4 <flatcc_verify_table_as_typed_root@@Base+0x84>
  42178d:	mov    rax,QWORD PTR [rbp-0x8]
  421791:	mov    esi,0x0
  421796:	mov    rdi,rax
  421799:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  42179e:	mov    ecx,eax
  4217a0:	mov    rax,QWORD PTR [rbp-0x10]
  4217a4:	mov    esi,eax
  4217a6:	mov    rdx,QWORD PTR [rbp-0x20]
  4217aa:	mov    rax,QWORD PTR [rbp-0x8]
  4217ae:	mov    r9,rdx
  4217b1:	mov    r8d,0x64
  4217b7:	mov    edx,0x0
  4217bc:	mov    rdi,rax
  4217bf:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  4217c4:	leave  
  4217c5:	ret    

00000000004217c6 <flatcc_verify_struct_as_nested_root@@Base>:
  4217c6:	push   rbp
  4217c7:	mov    rbp,rsp
  4217ca:	sub    rsp,0x40
  4217ce:	mov    QWORD PTR [rbp-0x18],rdi
  4217d2:	mov    eax,esi
  4217d4:	mov    DWORD PTR [rbp-0x20],edx
  4217d7:	mov    QWORD PTR [rbp-0x28],rcx
  4217db:	mov    QWORD PTR [rbp-0x30],r8
  4217df:	mov    edx,r9d
  4217e2:	mov    WORD PTR [rbp-0x1c],ax
  4217e6:	mov    WORD PTR [rbp-0x34],dx
  4217ea:	movzx  ecx,WORD PTR [rbp-0x34]
  4217ee:	movzx  esi,WORD PTR [rbp-0x1c]
  4217f2:	mov    edx,DWORD PTR [rbp-0x20]
  4217f5:	mov    rax,QWORD PTR [rbp-0x18]
  4217f9:	mov    r9d,0xffffffff
  4217ff:	mov    r8d,0x1
  421805:	mov    rdi,rax
  421808:	call   421082 <flatcc_verify_vector_field@@Base>
  42180d:	test   eax,eax
  42180f:	je     421836 <flatcc_verify_struct_as_nested_root@@Base+0x70>
  421811:	movzx  ecx,WORD PTR [rbp-0x34]
  421815:	movzx  esi,WORD PTR [rbp-0x1c]
  421819:	mov    edx,DWORD PTR [rbp-0x20]
  42181c:	mov    rax,QWORD PTR [rbp-0x18]
  421820:	mov    r9d,0xffffffff
  421826:	mov    r8d,0x1
  42182c:	mov    rdi,rax
  42182f:	call   421082 <flatcc_verify_vector_field@@Base>
  421834:	jmp    4218af <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  421836:	movzx  edx,WORD PTR [rbp-0x1c]
  42183a:	mov    rax,QWORD PTR [rbp-0x18]
  42183e:	mov    esi,edx
  421840:	mov    rdi,rax
  421843:	call   4205c4 <flatcc_verify_error_string@@Base+0x43f>
  421848:	mov    QWORD PTR [rbp-0x8],rax
  42184c:	cmp    QWORD PTR [rbp-0x8],0x0
  421851:	jne    42185a <flatcc_verify_struct_as_nested_root@@Base+0x94>
  421853:	mov    eax,0x0
  421858:	jmp    4218af <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  42185a:	mov    rax,QWORD PTR [rbp-0x8]
  42185e:	mov    esi,0x0
  421863:	mov    rdi,rax
  421866:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  42186b:	mov    edx,eax
  42186d:	mov    rax,QWORD PTR [rbp-0x8]
  421871:	add    rax,rdx
  421874:	mov    QWORD PTR [rbp-0x8],rax
  421878:	mov    rax,QWORD PTR [rbp-0x8]
  42187c:	mov    esi,0x0
  421881:	mov    rdi,rax
  421884:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421889:	mov    DWORD PTR [rbp-0xc],eax
  42188c:	add    QWORD PTR [rbp-0x8],0x4
  421891:	movzx  edi,WORD PTR [rbp-0x34]
  421895:	mov    esi,DWORD PTR [rbp-0xc]
  421898:	mov    rcx,QWORD PTR [rbp-0x30]
  42189c:	mov    rdx,QWORD PTR [rbp-0x28]
  4218a0:	mov    rax,QWORD PTR [rbp-0x8]
  4218a4:	mov    r8d,edi
  4218a7:	mov    rdi,rax
  4218aa:	call   421594 <flatcc_verify_struct_as_root@@Base>
  4218af:	leave  
  4218b0:	ret    

00000000004218b1 <flatcc_verify_table_as_nested_root@@Base>:
  4218b1:	push   rbp
  4218b2:	mov    rbp,rsp
  4218b5:	push   rbx
  4218b6:	sub    rsp,0x48
  4218ba:	mov    QWORD PTR [rbp-0x28],rdi
  4218be:	mov    eax,esi
  4218c0:	mov    DWORD PTR [rbp-0x30],edx
  4218c3:	mov    QWORD PTR [rbp-0x38],rcx
  4218c7:	mov    edx,r8d
  4218ca:	mov    QWORD PTR [rbp-0x48],r9
  4218ce:	mov    WORD PTR [rbp-0x2c],ax
  4218d2:	mov    WORD PTR [rbp-0x3c],dx
  4218d6:	movzx  ecx,WORD PTR [rbp-0x3c]
  4218da:	movzx  esi,WORD PTR [rbp-0x2c]
  4218de:	mov    edx,DWORD PTR [rbp-0x30]
  4218e1:	mov    rax,QWORD PTR [rbp-0x28]
  4218e5:	mov    r9d,0xffffffff
  4218eb:	mov    r8d,0x1
  4218f1:	mov    rdi,rax
  4218f4:	call   421082 <flatcc_verify_vector_field@@Base>
  4218f9:	test   eax,eax
  4218fb:	je     421925 <flatcc_verify_table_as_nested_root@@Base+0x74>
  4218fd:	movzx  ecx,WORD PTR [rbp-0x3c]
  421901:	movzx  esi,WORD PTR [rbp-0x2c]
  421905:	mov    edx,DWORD PTR [rbp-0x30]
  421908:	mov    rax,QWORD PTR [rbp-0x28]
  42190c:	mov    r9d,0xffffffff
  421912:	mov    r8d,0x1
  421918:	mov    rdi,rax
  42191b:	call   421082 <flatcc_verify_vector_field@@Base>
  421920:	jmp    4219ed <flatcc_verify_table_as_nested_root@@Base+0x13c>
  421925:	movzx  edx,WORD PTR [rbp-0x2c]
  421929:	mov    rax,QWORD PTR [rbp-0x28]
  42192d:	mov    esi,edx
  42192f:	mov    rdi,rax
  421932:	call   4205c4 <flatcc_verify_error_string@@Base+0x43f>
  421937:	mov    QWORD PTR [rbp-0x18],rax
  42193b:	cmp    QWORD PTR [rbp-0x18],0x0
  421940:	jne    42194c <flatcc_verify_table_as_nested_root@@Base+0x9b>
  421942:	mov    eax,0x0
  421947:	jmp    4219ed <flatcc_verify_table_as_nested_root@@Base+0x13c>
  42194c:	mov    rax,QWORD PTR [rbp-0x18]
  421950:	mov    esi,0x0
  421955:	mov    rdi,rax
  421958:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  42195d:	mov    edx,eax
  42195f:	mov    rax,QWORD PTR [rbp-0x18]
  421963:	add    rax,rdx
  421966:	mov    QWORD PTR [rbp-0x18],rax
  42196a:	mov    rax,QWORD PTR [rbp-0x18]
  42196e:	mov    esi,0x0
  421973:	mov    rdi,rax
  421976:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  42197b:	mov    DWORD PTR [rbp-0x1c],eax
  42197e:	add    QWORD PTR [rbp-0x18],0x4
  421983:	mov    ecx,DWORD PTR [rbp-0x1c]
  421986:	mov    rdx,QWORD PTR [rbp-0x38]
  42198a:	mov    rax,QWORD PTR [rbp-0x18]
  42198e:	mov    rsi,rcx
  421991:	mov    rdi,rax
  421994:	call   421407 <flatcc_verify_buffer_header@@Base>
  421999:	test   eax,eax
  42199b:	je     4219b5 <flatcc_verify_table_as_nested_root@@Base+0x104>
  42199d:	mov    ecx,DWORD PTR [rbp-0x1c]
  4219a0:	mov    rdx,QWORD PTR [rbp-0x38]
  4219a4:	mov    rax,QWORD PTR [rbp-0x18]
  4219a8:	mov    rsi,rcx
  4219ab:	mov    rdi,rax
  4219ae:	call   421407 <flatcc_verify_buffer_header@@Base>
  4219b3:	jmp    4219ed <flatcc_verify_table_as_nested_root@@Base+0x13c>
  4219b5:	mov    rax,QWORD PTR [rbp-0x28]
  4219b9:	mov    ebx,DWORD PTR [rax+0xc]
  4219bc:	mov    rax,QWORD PTR [rbp-0x18]
  4219c0:	mov    esi,0x0
  4219c5:	mov    rdi,rax
  4219c8:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  4219cd:	mov    ecx,eax
  4219cf:	mov    rdx,QWORD PTR [rbp-0x48]
  4219d3:	mov    esi,DWORD PTR [rbp-0x1c]
  4219d6:	mov    rax,QWORD PTR [rbp-0x18]
  4219da:	mov    r9,rdx
  4219dd:	mov    r8d,ebx
  4219e0:	mov    edx,0x0
  4219e5:	mov    rdi,rax
  4219e8:	call   420a34 <flatcc_verify_error_string@@Base+0x8af>
  4219ed:	add    rsp,0x48
  4219f1:	pop    rbx
  4219f2:	pop    rbp
  4219f3:	ret    

00000000004219f4 <flatcc_verify_union_field@@Base>:
  4219f4:	push   rbp
  4219f5:	mov    rbp,rsp
  4219f8:	sub    rsp,0x70
  4219fc:	mov    QWORD PTR [rbp-0x58],rdi
  421a00:	mov    eax,esi
  421a02:	mov    DWORD PTR [rbp-0x60],edx
  421a05:	mov    QWORD PTR [rbp-0x68],rcx
  421a09:	mov    WORD PTR [rbp-0x5c],ax
  421a0d:	mov    rax,QWORD PTR fs:0x28
  421a16:	mov    QWORD PTR [rbp-0x8],rax
  421a1a:	xor    eax,eax
  421a1c:	movzx  eax,WORD PTR [rbp-0x5c]
  421a20:	sub    eax,0x1
  421a23:	movzx  edx,ax
  421a26:	mov    rax,QWORD PTR [rbp-0x58]
  421a2a:	mov    esi,edx
  421a2c:	mov    rdi,rax
  421a2f:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  421a34:	mov    WORD PTR [rbp-0x50],ax
  421a38:	cmp    WORD PTR [rbp-0x50],0x0
  421a3d:	jne    421a9a <flatcc_verify_union_field@@Base+0xa6>
  421a3f:	movzx  edx,WORD PTR [rbp-0x5c]
  421a43:	mov    rax,QWORD PTR [rbp-0x58]
  421a47:	mov    esi,edx
  421a49:	mov    rdi,rax
  421a4c:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  421a51:	mov    WORD PTR [rbp-0x4e],ax
  421a55:	cmp    WORD PTR [rbp-0x4e],0x0
  421a5a:	sete   al
  421a5d:	movzx  eax,al
  421a60:	mov    DWORD PTR [rbp-0x48],eax
  421a63:	cmp    DWORD PTR [rbp-0x48],0x0
  421a67:	jne    421a73 <flatcc_verify_union_field@@Base+0x7f>
  421a69:	mov    eax,0x17
  421a6e:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421a73:	cmp    DWORD PTR [rbp-0x60],0x0
  421a77:	sete   al
  421a7a:	movzx  eax,al
  421a7d:	mov    DWORD PTR [rbp-0x44],eax
  421a80:	cmp    DWORD PTR [rbp-0x44],0x0
  421a84:	jne    421a90 <flatcc_verify_union_field@@Base+0x9c>
  421a86:	mov    eax,0x15
  421a8b:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421a90:	mov    eax,0x0
  421a95:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421a9a:	movzx  eax,WORD PTR [rbp-0x5c]
  421a9e:	sub    eax,0x1
  421aa1:	movzx  esi,ax
  421aa4:	mov    rax,QWORD PTR [rbp-0x58]
  421aa8:	mov    r8d,0x1
  421aae:	mov    ecx,0x1
  421ab3:	mov    edx,0x0
  421ab8:	mov    rdi,rax
  421abb:	call   420616 <flatcc_verify_error_string@@Base+0x491>
  421ac0:	test   eax,eax
  421ac2:	je     421aef <flatcc_verify_union_field@@Base+0xfb>
  421ac4:	movzx  eax,WORD PTR [rbp-0x5c]
  421ac8:	sub    eax,0x1
  421acb:	movzx  esi,ax
  421ace:	mov    rax,QWORD PTR [rbp-0x58]
  421ad2:	mov    r8d,0x1
  421ad8:	mov    ecx,0x1
  421add:	mov    edx,0x0
  421ae2:	mov    rdi,rax
  421ae5:	call   420616 <flatcc_verify_error_string@@Base+0x491>
  421aea:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421aef:	movzx  edx,WORD PTR [rbp-0x5c]
  421af3:	mov    rax,QWORD PTR [rbp-0x58]
  421af7:	mov    esi,edx
  421af9:	mov    rdi,rax
  421afc:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  421b01:	mov    WORD PTR [rbp-0x4e],ax
  421b05:	mov    rax,QWORD PTR [rbp-0x58]
  421b09:	mov    rdx,QWORD PTR [rax]
  421b0c:	mov    rax,QWORD PTR [rbp-0x58]
  421b10:	mov    eax,DWORD PTR [rax+0x18]
  421b13:	mov    ecx,eax
  421b15:	movzx  eax,WORD PTR [rbp-0x50]
  421b19:	add    rax,rcx
  421b1c:	add    rax,rdx
  421b1f:	mov    QWORD PTR [rbp-0x38],rax
  421b23:	mov    rax,QWORD PTR [rbp-0x38]
  421b27:	movzx  eax,BYTE PTR [rax]
  421b2a:	test   al,al
  421b2c:	jne    421b35 <flatcc_verify_union_field@@Base+0x141>
  421b2e:	cmp    WORD PTR [rbp-0x4e],0x0
  421b33:	jne    421b3c <flatcc_verify_union_field@@Base+0x148>
  421b35:	mov    eax,0x1
  421b3a:	jmp    421b41 <flatcc_verify_union_field@@Base+0x14d>
  421b3c:	mov    eax,0x0
  421b41:	mov    DWORD PTR [rbp-0x40],eax
  421b44:	cmp    DWORD PTR [rbp-0x40],0x0
  421b48:	jne    421b54 <flatcc_verify_union_field@@Base+0x160>
  421b4a:	mov    eax,0x18
  421b4f:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421b54:	mov    rax,QWORD PTR [rbp-0x38]
  421b58:	movzx  eax,BYTE PTR [rax]
  421b5b:	test   al,al
  421b5d:	jne    421b66 <flatcc_verify_union_field@@Base+0x172>
  421b5f:	mov    eax,0x0
  421b64:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421b66:	movzx  esi,WORD PTR [rbp-0x5c]
  421b6a:	lea    rcx,[rbp-0x4c]
  421b6e:	mov    edx,DWORD PTR [rbp-0x60]
  421b71:	mov    rax,QWORD PTR [rbp-0x58]
  421b75:	mov    rdi,rax
  421b78:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  421b7d:	mov    DWORD PTR [rbp-0x3c],eax
  421b80:	cmp    DWORD PTR [rbp-0x3c],0x0
  421b84:	jne    421b8d <flatcc_verify_union_field@@Base+0x199>
  421b86:	mov    eax,DWORD PTR [rbp-0x4c]
  421b89:	test   eax,eax
  421b8b:	jne    421b92 <flatcc_verify_union_field@@Base+0x19e>
  421b8d:	mov    eax,DWORD PTR [rbp-0x3c]
  421b90:	jmp    421be5 <flatcc_verify_union_field@@Base+0x1f1>
  421b92:	mov    rax,QWORD PTR [rbp-0x58]
  421b96:	mov    rax,QWORD PTR [rax]
  421b99:	mov    QWORD PTR [rbp-0x30],rax
  421b9d:	mov    rax,QWORD PTR [rbp-0x58]
  421ba1:	mov    eax,DWORD PTR [rax+0x8]
  421ba4:	mov    DWORD PTR [rbp-0x28],eax
  421ba7:	mov    rax,QWORD PTR [rbp-0x58]
  421bab:	mov    eax,DWORD PTR [rax+0xc]
  421bae:	mov    DWORD PTR [rbp-0x24],eax
  421bb1:	mov    eax,DWORD PTR [rbp-0x4c]
  421bb4:	mov    DWORD PTR [rbp-0x1c],eax
  421bb7:	mov    edx,DWORD PTR [rbp-0x4c]
  421bba:	mov    rax,QWORD PTR [rbp-0x58]
  421bbe:	mov    rax,QWORD PTR [rax]
  421bc1:	mov    esi,edx
  421bc3:	mov    rdi,rax
  421bc6:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421bcb:	mov    DWORD PTR [rbp-0x18],eax
  421bce:	mov    rax,QWORD PTR [rbp-0x38]
  421bd2:	movzx  eax,BYTE PTR [rax]
  421bd5:	mov    BYTE PTR [rbp-0x20],al
  421bd8:	lea    rdx,[rbp-0x30]
  421bdc:	mov    rax,QWORD PTR [rbp-0x68]
  421be0:	mov    rdi,rdx
  421be3:	call   rax
  421be5:	mov    rcx,QWORD PTR [rbp-0x8]
  421be9:	xor    rcx,QWORD PTR fs:0x28
  421bf2:	je     421bf9 <flatcc_verify_union_field@@Base+0x205>
  421bf4:	call   405070 <__stack_chk_fail@plt>
  421bf9:	leave  
  421bfa:	ret    

0000000000421bfb <flatcc_verify_union_vector_field@@Base>:
  421bfb:	push   rbp
  421bfc:	mov    rbp,rsp
  421bff:	push   rbx
  421c00:	sub    rsp,0x58
  421c04:	mov    QWORD PTR [rbp-0x48],rdi
  421c08:	mov    eax,esi
  421c0a:	mov    DWORD PTR [rbp-0x50],edx
  421c0d:	mov    QWORD PTR [rbp-0x58],rcx
  421c11:	mov    WORD PTR [rbp-0x4c],ax
  421c15:	mov    rax,QWORD PTR fs:0x28
  421c1e:	mov    QWORD PTR [rbp-0x18],rax
  421c22:	xor    eax,eax
  421c24:	movzx  eax,WORD PTR [rbp-0x4c]
  421c28:	sub    eax,0x1
  421c2b:	movzx  edx,ax
  421c2e:	mov    rax,QWORD PTR [rbp-0x48]
  421c32:	mov    esi,edx
  421c34:	mov    rdi,rax
  421c37:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  421c3c:	mov    WORD PTR [rbp-0x3c],ax
  421c40:	cmp    WORD PTR [rbp-0x3c],0x0
  421c45:	jne    421c81 <flatcc_verify_union_vector_field@@Base+0x86>
  421c47:	movzx  edx,WORD PTR [rbp-0x4c]
  421c4b:	mov    rax,QWORD PTR [rbp-0x48]
  421c4f:	mov    esi,edx
  421c51:	mov    rdi,rax
  421c54:	call   420573 <flatcc_verify_error_string@@Base+0x3ee>
  421c59:	mov    WORD PTR [rbp-0x3a],ax
  421c5d:	cmp    WORD PTR [rbp-0x3a],0x0
  421c62:	jne    421c81 <flatcc_verify_union_vector_field@@Base+0x86>
  421c64:	cmp    DWORD PTR [rbp-0x50],0x0
  421c68:	sete   al
  421c6b:	movzx  eax,al
  421c6e:	mov    DWORD PTR [rbp-0x34],eax
  421c71:	cmp    DWORD PTR [rbp-0x34],0x0
  421c75:	jne    421c81 <flatcc_verify_union_vector_field@@Base+0x86>
  421c77:	mov    eax,0x16
  421c7c:	jmp    421dc5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  421c81:	movzx  eax,WORD PTR [rbp-0x4c]
  421c85:	sub    eax,0x1
  421c88:	movzx  esi,ax
  421c8b:	mov    edx,DWORD PTR [rbp-0x50]
  421c8e:	mov    rax,QWORD PTR [rbp-0x48]
  421c92:	mov    r9d,0xffffffff
  421c98:	mov    r8d,0x1
  421c9e:	mov    ecx,0x1
  421ca3:	mov    rdi,rax
  421ca6:	call   421082 <flatcc_verify_vector_field@@Base>
  421cab:	test   eax,eax
  421cad:	je     421cde <flatcc_verify_union_vector_field@@Base+0xe3>
  421caf:	movzx  eax,WORD PTR [rbp-0x4c]
  421cb3:	sub    eax,0x1
  421cb6:	movzx  esi,ax
  421cb9:	mov    edx,DWORD PTR [rbp-0x50]
  421cbc:	mov    rax,QWORD PTR [rbp-0x48]
  421cc0:	mov    r9d,0xffffffff
  421cc6:	mov    r8d,0x1
  421ccc:	mov    ecx,0x1
  421cd1:	mov    rdi,rax
  421cd4:	call   421082 <flatcc_verify_vector_field@@Base>
  421cd9:	jmp    421dc5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  421cde:	movzx  eax,WORD PTR [rbp-0x4c]
  421ce2:	sub    eax,0x1
  421ce5:	movzx  edx,ax
  421ce8:	mov    rax,QWORD PTR [rbp-0x48]
  421cec:	mov    esi,edx
  421cee:	mov    rdi,rax
  421cf1:	call   4205c4 <flatcc_verify_error_string@@Base+0x43f>
  421cf6:	mov    QWORD PTR [rbp-0x28],rax
  421cfa:	cmp    QWORD PTR [rbp-0x28],0x0
  421cff:	jne    421d0b <flatcc_verify_union_vector_field@@Base+0x110>
  421d01:	mov    eax,0x0
  421d06:	jmp    421dc5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  421d0b:	mov    rax,QWORD PTR [rbp-0x28]
  421d0f:	mov    esi,0x0
  421d14:	mov    rdi,rax
  421d17:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421d1c:	mov    edx,eax
  421d1e:	mov    rax,QWORD PTR [rbp-0x28]
  421d22:	add    rax,rdx
  421d25:	mov    QWORD PTR [rbp-0x28],rax
  421d29:	mov    rax,QWORD PTR [rbp-0x28]
  421d2d:	mov    esi,0x0
  421d32:	mov    rdi,rax
  421d35:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421d3a:	mov    DWORD PTR [rbp-0x30],eax
  421d3d:	add    QWORD PTR [rbp-0x28],0x4
  421d42:	mov    rax,QWORD PTR [rbp-0x28]
  421d46:	mov    QWORD PTR [rbp-0x20],rax
  421d4a:	movzx  esi,WORD PTR [rbp-0x4c]
  421d4e:	lea    rcx,[rbp-0x38]
  421d52:	mov    edx,DWORD PTR [rbp-0x50]
  421d55:	mov    rax,QWORD PTR [rbp-0x48]
  421d59:	mov    rdi,rax
  421d5c:	call   420705 <flatcc_verify_error_string@@Base+0x580>
  421d61:	mov    DWORD PTR [rbp-0x2c],eax
  421d64:	cmp    DWORD PTR [rbp-0x2c],0x0
  421d68:	jne    421d71 <flatcc_verify_union_vector_field@@Base+0x176>
  421d6a:	mov    eax,DWORD PTR [rbp-0x38]
  421d6d:	test   eax,eax
  421d6f:	jne    421d76 <flatcc_verify_union_vector_field@@Base+0x17b>
  421d71:	mov    eax,DWORD PTR [rbp-0x2c]
  421d74:	jmp    421dc5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  421d76:	mov    rax,QWORD PTR [rbp-0x48]
  421d7a:	mov    ebx,DWORD PTR [rax+0xc]
  421d7d:	mov    edx,DWORD PTR [rbp-0x38]
  421d80:	mov    rax,QWORD PTR [rbp-0x48]
  421d84:	mov    rax,QWORD PTR [rax]
  421d87:	mov    esi,edx
  421d89:	mov    rdi,rax
  421d8c:	call   420355 <flatcc_verify_error_string@@Base+0x1d0>
  421d91:	mov    r10d,eax
  421d94:	mov    edx,DWORD PTR [rbp-0x38]
  421d97:	mov    rax,QWORD PTR [rbp-0x48]
  421d9b:	mov    esi,DWORD PTR [rax+0x8]
  421d9e:	mov    rax,QWORD PTR [rbp-0x48]
  421da2:	mov    rax,QWORD PTR [rax]
  421da5:	mov    rdi,QWORD PTR [rbp-0x20]
  421da9:	mov    ecx,DWORD PTR [rbp-0x30]
  421dac:	push   QWORD PTR [rbp-0x58]
  421daf:	push   rbx
  421db0:	mov    r9,rdi
  421db3:	mov    r8d,ecx
  421db6:	mov    ecx,r10d
  421db9:	mov    rdi,rax
  421dbc:	call   420da1 <flatcc_verify_error_string@@Base+0xc1c>
  421dc1:	add    rsp,0x10
  421dc5:	mov    rbx,QWORD PTR [rbp-0x18]
  421dc9:	xor    rbx,QWORD PTR fs:0x28
  421dd2:	je     421dd9 <flatcc_verify_union_vector_field@@Base+0x1de>
  421dd4:	call   405070 <__stack_chk_fail@plt>
  421dd9:	mov    rbx,QWORD PTR [rbp-0x8]
  421ddd:	leave  
  421dde:	ret    
  421ddf:	push   rbp
  421de0:	mov    rbp,rsp
  421de3:	mov    eax,edi
  421de5:	mov    BYTE PTR [rbp-0x4],al
  421de8:	movzx  eax,BYTE PTR [rbp-0x4]
  421dec:	pop    rbp
  421ded:	ret    
  421dee:	push   rbp
  421def:	mov    rbp,rsp
  421df2:	sub    rsp,0x10
  421df6:	mov    QWORD PTR [rbp-0x8],rdi
  421dfa:	mov    eax,esi
  421dfc:	mov    BYTE PTR [rbp-0xc],al
  421dff:	movzx  eax,BYTE PTR [rbp-0xc]
  421e03:	mov    edi,eax
  421e05:	call   421ddf <flatcc_verify_union_vector_field@@Base+0x1e4>
  421e0a:	mov    edx,eax
  421e0c:	mov    rax,QWORD PTR [rbp-0x8]
  421e10:	mov    BYTE PTR [rax],dl
  421e12:	nop
  421e13:	leave  
  421e14:	ret    
  421e15:	push   rbp
  421e16:	mov    rbp,rsp
  421e19:	sub    rsp,0x30
  421e1d:	mov    QWORD PTR [rbp-0x8],rdi
  421e21:	mov    QWORD PTR [rbp-0x10],rsi
  421e25:	mov    QWORD PTR [rbp-0x18],rdx
  421e29:	mov    QWORD PTR [rbp-0x20],rcx
  421e2d:	mov    DWORD PTR [rbp-0x24],r8d
  421e31:	mov    rax,QWORD PTR [rbp-0x8]
  421e35:	mov    edx,0x40
  421e3a:	mov    esi,0x0
  421e3f:	mov    rdi,rax
  421e42:	call   405090 <memset@plt>
  421e47:	mov    rax,QWORD PTR [rbp-0x8]
  421e4b:	mov    rdx,QWORD PTR [rbp-0x10]
  421e4f:	mov    QWORD PTR [rax],rdx
  421e52:	mov    rax,QWORD PTR [rbp-0x8]
  421e56:	mov    rdx,QWORD PTR [rbp-0x18]
  421e5a:	mov    QWORD PTR [rax+0x8],rdx
  421e5e:	mov    rax,QWORD PTR [rbp-0x8]
  421e62:	mov    DWORD PTR [rax+0x14],0x1
  421e69:	mov    rax,QWORD PTR [rbp-0x8]
  421e6d:	mov    edx,DWORD PTR [rbp-0x24]
  421e70:	mov    DWORD PTR [rax+0x10],edx
  421e73:	mov    rax,QWORD PTR [rbp-0x8]
  421e77:	mov    rdx,QWORD PTR [rbp-0x18]
  421e7b:	mov    QWORD PTR [rax+0x20],rdx
  421e7f:	mov    rax,QWORD PTR [rbp-0x8]
  421e83:	mov    rdx,QWORD PTR [rbp-0x20]
  421e87:	mov    QWORD PTR [rax+0x28],rdx
  421e8b:	mov    rax,QWORD PTR [rbp-0x8]
  421e8f:	mov    rdx,QWORD PTR [rbp-0x18]
  421e93:	mov    QWORD PTR [rax+0x30],rdx
  421e97:	nop
  421e98:	leave  
  421e99:	ret    
  421e9a:	push   rbp
  421e9b:	mov    rbp,rsp
  421e9e:	sub    rsp,0x20
  421ea2:	mov    QWORD PTR [rbp-0x8],rdi
  421ea6:	mov    QWORD PTR [rbp-0x10],rsi
  421eaa:	mov    QWORD PTR [rbp-0x18],rdx
  421eae:	mov    rdx,QWORD PTR [rbp-0x18]
  421eb2:	mov    rax,QWORD PTR [rbp-0x10]
  421eb6:	sub    rdx,rax
  421eb9:	mov    rax,rdx
  421ebc:	cmp    rax,0x1
  421ec0:	jle    421ef7 <flatcc_verify_union_vector_field@@Base+0x2fc>
  421ec2:	mov    rax,QWORD PTR [rbp-0x10]
  421ec6:	movzx  eax,BYTE PTR [rax]
  421ec9:	cmp    al,0x20
  421ecb:	jle    421ed3 <flatcc_verify_union_vector_field@@Base+0x2d8>
  421ecd:	mov    rax,QWORD PTR [rbp-0x10]
  421ed1:	jmp    421f0e <flatcc_verify_union_vector_field@@Base+0x313>
  421ed3:	mov    rax,QWORD PTR [rbp-0x10]
  421ed7:	movzx  eax,BYTE PTR [rax]
  421eda:	cmp    al,0x20
  421edc:	jne    421ef7 <flatcc_verify_union_vector_field@@Base+0x2fc>
  421ede:	mov    rax,QWORD PTR [rbp-0x10]
  421ee2:	add    rax,0x1
  421ee6:	movzx  eax,BYTE PTR [rax]
  421ee9:	cmp    al,0x20
  421eeb:	jle    421ef7 <flatcc_verify_union_vector_field@@Base+0x2fc>
  421eed:	mov    rax,QWORD PTR [rbp-0x10]
  421ef1:	add    rax,0x1
  421ef5:	jmp    421f0e <flatcc_verify_union_vector_field@@Base+0x313>
  421ef7:	mov    rdx,QWORD PTR [rbp-0x18]
  421efb:	mov    rcx,QWORD PTR [rbp-0x10]
  421eff:	mov    rax,QWORD PTR [rbp-0x8]
  421f03:	mov    rsi,rcx
  421f06:	mov    rdi,rax
  421f09:	call   425cce <flatcc_json_parser_space_ext@@Base>
  421f0e:	leave  
  421f0f:	ret    
  421f10:	push   rbp
  421f11:	mov    rbp,rsp
  421f14:	sub    rsp,0x20
  421f18:	mov    QWORD PTR [rbp-0x8],rdi
  421f1c:	mov    QWORD PTR [rbp-0x10],rsi
  421f20:	mov    QWORD PTR [rbp-0x18],rdx
  421f24:	mov    rax,QWORD PTR [rbp-0x10]
  421f28:	cmp    rax,QWORD PTR [rbp-0x18]
  421f2c:	je     421f39 <flatcc_verify_union_vector_field@@Base+0x33e>
  421f2e:	mov    rax,QWORD PTR [rbp-0x10]
  421f32:	movzx  eax,BYTE PTR [rax]
  421f35:	cmp    al,0x22
  421f37:	je     421f54 <flatcc_verify_union_vector_field@@Base+0x359>
  421f39:	mov    rdx,QWORD PTR [rbp-0x18]
  421f3d:	mov    rsi,QWORD PTR [rbp-0x10]
  421f41:	mov    rax,QWORD PTR [rbp-0x8]
  421f45:	mov    ecx,0x10
  421f4a:	mov    rdi,rax
  421f4d:	call   425bce <flatcc_json_parser_set_error@@Base>
  421f52:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x362>
  421f54:	add    QWORD PTR [rbp-0x10],0x1
  421f59:	mov    rax,QWORD PTR [rbp-0x10]
  421f5d:	leave  
  421f5e:	ret    
  421f5f:	push   rbp
  421f60:	mov    rbp,rsp
  421f63:	sub    rsp,0x20
  421f67:	mov    QWORD PTR [rbp-0x8],rdi
  421f6b:	mov    QWORD PTR [rbp-0x10],rsi
  421f6f:	mov    QWORD PTR [rbp-0x18],rdx
  421f73:	mov    rax,QWORD PTR [rbp-0x10]
  421f77:	cmp    rax,QWORD PTR [rbp-0x18]
  421f7b:	je     421f88 <flatcc_verify_union_vector_field@@Base+0x38d>
  421f7d:	mov    rax,QWORD PTR [rbp-0x10]
  421f81:	movzx  eax,BYTE PTR [rax]
  421f84:	cmp    al,0x22
  421f86:	je     421fa3 <flatcc_verify_union_vector_field@@Base+0x3a8>
  421f88:	mov    rdx,QWORD PTR [rbp-0x18]
  421f8c:	mov    rsi,QWORD PTR [rbp-0x10]
  421f90:	mov    rax,QWORD PTR [rbp-0x8]
  421f94:	mov    ecx,0x14
  421f99:	mov    rdi,rax
  421f9c:	call   425bce <flatcc_json_parser_set_error@@Base>
  421fa1:	jmp    421fac <flatcc_verify_union_vector_field@@Base+0x3b1>
  421fa3:	add    QWORD PTR [rbp-0x10],0x1
  421fa8:	mov    rax,QWORD PTR [rbp-0x10]
  421fac:	leave  
  421fad:	ret    
  421fae:	push   rbp
  421faf:	mov    rbp,rsp
  421fb2:	sub    rsp,0x20
  421fb6:	mov    QWORD PTR [rbp-0x8],rdi
  421fba:	mov    QWORD PTR [rbp-0x10],rsi
  421fbe:	mov    QWORD PTR [rbp-0x18],rdx
  421fc2:	mov    rax,QWORD PTR [rbp-0x10]
  421fc6:	cmp    rax,QWORD PTR [rbp-0x18]
  421fca:	jne    421fd2 <flatcc_verify_union_vector_field@@Base+0x3d7>
  421fcc:	mov    rax,QWORD PTR [rbp-0x10]
  421fd0:	jmp    422001 <flatcc_verify_union_vector_field@@Base+0x406>
  421fd2:	mov    rax,QWORD PTR [rbp-0x10]
  421fd6:	movzx  eax,BYTE PTR [rax]
  421fd9:	cmp    al,0x22
  421fdb:	jne    421fe8 <flatcc_verify_union_vector_field@@Base+0x3ed>
  421fdd:	add    QWORD PTR [rbp-0x10],0x1
  421fe2:	mov    rax,QWORD PTR [rbp-0x10]
  421fe6:	jmp    422001 <flatcc_verify_union_vector_field@@Base+0x406>
  421fe8:	mov    rdx,QWORD PTR [rbp-0x18]
  421fec:	mov    rsi,QWORD PTR [rbp-0x10]
  421ff0:	mov    rax,QWORD PTR [rbp-0x8]
  421ff4:	mov    ecx,0x5
  421ff9:	mov    rdi,rax
  421ffc:	call   425bce <flatcc_json_parser_set_error@@Base>
  422001:	leave  
  422002:	ret    
  422003:	push   rbp
  422004:	mov    rbp,rsp
  422007:	sub    rsp,0x30
  42200b:	mov    QWORD PTR [rbp-0x18],rdi
  42200f:	mov    QWORD PTR [rbp-0x20],rsi
  422013:	mov    QWORD PTR [rbp-0x28],rdx
  422017:	mov    BYTE PTR [rbp-0x1],0x0
  42201b:	jmp    422046 <flatcc_verify_union_vector_field@@Base+0x44b>
  42201d:	mov    rax,QWORD PTR [rbp-0x20]
  422021:	movzx  eax,BYTE PTR [rax]
  422024:	cmp    al,0x5c
  422026:	jne    422041 <flatcc_verify_union_vector_field@@Base+0x446>
  422028:	mov    rdx,QWORD PTR [rbp-0x28]
  42202c:	mov    rax,QWORD PTR [rbp-0x20]
  422030:	sub    rdx,rax
  422033:	mov    rax,rdx
  422036:	cmp    rax,0x1
  42203a:	jle    42205d <flatcc_verify_union_vector_field@@Base+0x462>
  42203c:	add    QWORD PTR [rbp-0x20],0x1
  422041:	add    QWORD PTR [rbp-0x20],0x1
  422046:	mov    rax,QWORD PTR [rbp-0x20]
  42204a:	cmp    rax,QWORD PTR [rbp-0x28]
  42204e:	je     42205e <flatcc_verify_union_vector_field@@Base+0x463>
  422050:	mov    rax,QWORD PTR [rbp-0x20]
  422054:	movzx  eax,BYTE PTR [rax]
  422057:	cmp    al,0x22
  422059:	jne    42201d <flatcc_verify_union_vector_field@@Base+0x422>
  42205b:	jmp    42205e <flatcc_verify_union_vector_field@@Base+0x463>
  42205d:	nop
  42205e:	mov    rax,QWORD PTR [rbp-0x20]
  422062:	cmp    rax,QWORD PTR [rbp-0x28]
  422066:	je     422073 <flatcc_verify_union_vector_field@@Base+0x478>
  422068:	mov    rax,QWORD PTR [rbp-0x20]
  42206c:	movzx  eax,BYTE PTR [rax]
  42206f:	cmp    al,0x22
  422071:	je     42208e <flatcc_verify_union_vector_field@@Base+0x493>
  422073:	mov    rdx,QWORD PTR [rbp-0x28]
  422077:	mov    rsi,QWORD PTR [rbp-0x20]
  42207b:	mov    rax,QWORD PTR [rbp-0x18]
  42207f:	mov    ecx,0x14
  422084:	mov    rdi,rax
  422087:	call   425bce <flatcc_json_parser_set_error@@Base>
  42208c:	jmp    422097 <flatcc_verify_union_vector_field@@Base+0x49c>
  42208e:	add    QWORD PTR [rbp-0x20],0x1
  422093:	mov    rax,QWORD PTR [rbp-0x20]
  422097:	leave  
  422098:	ret    
  422099:	push   rbp
  42209a:	mov    rbp,rsp
  42209d:	sub    rsp,0x20
  4220a1:	mov    QWORD PTR [rbp-0x8],rdi
  4220a5:	mov    QWORD PTR [rbp-0x10],rsi
  4220a9:	mov    QWORD PTR [rbp-0x18],rdx
  4220ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4220b1:	mov    rcx,QWORD PTR [rbp-0x10]
  4220b5:	mov    rax,QWORD PTR [rbp-0x8]
  4220b9:	mov    rsi,rcx
  4220bc:	mov    rdi,rax
  4220bf:	call   421fae <flatcc_verify_union_vector_field@@Base+0x3b3>
  4220c4:	mov    QWORD PTR [rbp-0x10],rax
  4220c8:	mov    rdx,QWORD PTR [rbp-0x18]
  4220cc:	mov    rcx,QWORD PTR [rbp-0x10]
  4220d0:	mov    rax,QWORD PTR [rbp-0x8]
  4220d4:	mov    rsi,rcx
  4220d7:	mov    rdi,rax
  4220da:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  4220df:	mov    QWORD PTR [rbp-0x10],rax
  4220e3:	mov    rax,QWORD PTR [rbp-0x10]
  4220e7:	leave  
  4220e8:	ret    
  4220e9:	push   rbp
  4220ea:	mov    rbp,rsp
  4220ed:	sub    rsp,0x20
  4220f1:	mov    QWORD PTR [rbp-0x8],rdi
  4220f5:	mov    QWORD PTR [rbp-0x10],rsi
  4220f9:	mov    QWORD PTR [rbp-0x18],rdx
  4220fd:	mov    QWORD PTR [rbp-0x20],rcx
  422101:	mov    rdx,QWORD PTR [rbp-0x18]
  422105:	mov    rcx,QWORD PTR [rbp-0x10]
  422109:	mov    rax,QWORD PTR [rbp-0x8]
  42210d:	mov    rsi,rcx
  422110:	mov    rdi,rax
  422113:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  422118:	mov    QWORD PTR [rbp-0x10],rax
  42211c:	mov    rax,QWORD PTR [rbp-0x10]
  422120:	cmp    rax,QWORD PTR [rbp-0x18]
  422124:	jne    422139 <flatcc_verify_union_vector_field@@Base+0x53e>
  422126:	mov    rax,QWORD PTR [rbp-0x20]
  42212a:	mov    DWORD PTR [rax],0x0
  422130:	mov    rax,QWORD PTR [rbp-0x10]
  422134:	jmp    422225 <flatcc_verify_union_vector_field@@Base+0x62a>
  422139:	mov    rax,QWORD PTR [rbp-0x10]
  42213d:	movzx  eax,BYTE PTR [rax]
  422140:	cmp    al,0x2c
  422142:	je     422197 <flatcc_verify_union_vector_field@@Base+0x59c>
  422144:	mov    rax,QWORD PTR [rbp-0x20]
  422148:	mov    DWORD PTR [rax],0x0
  42214e:	mov    rax,QWORD PTR [rbp-0x10]
  422152:	movzx  eax,BYTE PTR [rax]
  422155:	cmp    al,0x7d
  422157:	je     422177 <flatcc_verify_union_vector_field@@Base+0x57c>
  422159:	mov    rdx,QWORD PTR [rbp-0x18]
  42215d:	mov    rsi,QWORD PTR [rbp-0x10]
  422161:	mov    rax,QWORD PTR [rbp-0x8]
  422165:	mov    ecx,0xa
  42216a:	mov    rdi,rax
  42216d:	call   425bce <flatcc_json_parser_set_error@@Base>
  422172:	jmp    422225 <flatcc_verify_union_vector_field@@Base+0x62a>
  422177:	mov    rax,QWORD PTR [rbp-0x10]
  42217b:	lea    rcx,[rax+0x1]
  42217f:	mov    rdx,QWORD PTR [rbp-0x18]
  422183:	mov    rax,QWORD PTR [rbp-0x8]
  422187:	mov    rsi,rcx
  42218a:	mov    rdi,rax
  42218d:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  422192:	jmp    422225 <flatcc_verify_union_vector_field@@Base+0x62a>
  422197:	mov    rax,QWORD PTR [rbp-0x10]
  42219b:	lea    rcx,[rax+0x1]
  42219f:	mov    rdx,QWORD PTR [rbp-0x18]
  4221a3:	mov    rax,QWORD PTR [rbp-0x8]
  4221a7:	mov    rsi,rcx
  4221aa:	mov    rdi,rax
  4221ad:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  4221b2:	mov    QWORD PTR [rbp-0x10],rax
  4221b6:	mov    rax,QWORD PTR [rbp-0x10]
  4221ba:	cmp    rax,QWORD PTR [rbp-0x18]
  4221be:	jne    4221e5 <flatcc_verify_union_vector_field@@Base+0x5ea>
  4221c0:	mov    rax,QWORD PTR [rbp-0x20]
  4221c4:	mov    DWORD PTR [rax],0x0
  4221ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4221ce:	mov    rsi,QWORD PTR [rbp-0x10]
  4221d2:	mov    rax,QWORD PTR [rbp-0x8]
  4221d6:	mov    ecx,0xa
  4221db:	mov    rdi,rax
  4221de:	call   425bce <flatcc_json_parser_set_error@@Base>
  4221e3:	jmp    422225 <flatcc_verify_union_vector_field@@Base+0x62a>
  4221e5:	mov    rax,QWORD PTR [rbp-0x10]
  4221e9:	movzx  eax,BYTE PTR [rax]
  4221ec:	cmp    al,0x7d
  4221ee:	jne    422217 <flatcc_verify_union_vector_field@@Base+0x61c>
  4221f0:	mov    rax,QWORD PTR [rbp-0x20]
  4221f4:	mov    DWORD PTR [rax],0x0
  4221fa:	mov    rax,QWORD PTR [rbp-0x10]
  4221fe:	lea    rcx,[rax+0x1]
  422202:	mov    rdx,QWORD PTR [rbp-0x18]
  422206:	mov    rax,QWORD PTR [rbp-0x8]
  42220a:	mov    rsi,rcx
  42220d:	mov    rdi,rax
  422210:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  422215:	jmp    422225 <flatcc_verify_union_vector_field@@Base+0x62a>
  422217:	mov    rax,QWORD PTR [rbp-0x20]
  42221b:	mov    DWORD PTR [rax],0x1
  422221:	mov    rax,QWORD PTR [rbp-0x10]
  422225:	leave  
  422226:	ret    
  422227:	push   rbp
  422228:	mov    rbp,rsp
  42222b:	sub    rsp,0x20
  42222f:	mov    QWORD PTR [rbp-0x8],rdi
  422233:	mov    QWORD PTR [rbp-0x10],rsi
  422237:	mov    QWORD PTR [rbp-0x18],rdx
  42223b:	mov    QWORD PTR [rbp-0x20],rcx
  42223f:	mov    rax,QWORD PTR [rbp-0x10]
  422243:	cmp    rax,QWORD PTR [rbp-0x18]
  422247:	je     422254 <flatcc_verify_union_vector_field@@Base+0x659>
  422249:	mov    rax,QWORD PTR [rbp-0x10]
  42224d:	movzx  eax,BYTE PTR [rax]
  422250:	cmp    al,0x5b
  422252:	je     422279 <flatcc_verify_union_vector_field@@Base+0x67e>
  422254:	mov    rax,QWORD PTR [rbp-0x20]
  422258:	mov    DWORD PTR [rax],0x0
  42225e:	mov    rdx,QWORD PTR [rbp-0x18]
  422262:	mov    rsi,QWORD PTR [rbp-0x10]
  422266:	mov    rax,QWORD PTR [rbp-0x8]
  42226a:	mov    ecx,0x16
  42226f:	mov    rdi,rax
  422272:	call   425bce <flatcc_json_parser_set_error@@Base>
  422277:	jmp    4222e2 <flatcc_verify_union_vector_field@@Base+0x6e7>
  422279:	mov    rax,QWORD PTR [rbp-0x10]
  42227d:	lea    rcx,[rax+0x1]
  422281:	mov    rdx,QWORD PTR [rbp-0x18]
  422285:	mov    rax,QWORD PTR [rbp-0x8]
  422289:	mov    rsi,rcx
  42228c:	mov    rdi,rax
  42228f:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  422294:	mov    QWORD PTR [rbp-0x10],rax
  422298:	mov    rax,QWORD PTR [rbp-0x10]
  42229c:	cmp    rax,QWORD PTR [rbp-0x18]
  4222a0:	je     4222d4 <flatcc_verify_union_vector_field@@Base+0x6d9>
  4222a2:	mov    rax,QWORD PTR [rbp-0x10]
  4222a6:	movzx  eax,BYTE PTR [rax]
  4222a9:	cmp    al,0x5d
  4222ab:	jne    4222d4 <flatcc_verify_union_vector_field@@Base+0x6d9>
  4222ad:	mov    rax,QWORD PTR [rbp-0x20]
  4222b1:	mov    DWORD PTR [rax],0x0
  4222b7:	mov    rax,QWORD PTR [rbp-0x10]
  4222bb:	lea    rcx,[rax+0x1]
  4222bf:	mov    rdx,QWORD PTR [rbp-0x18]
  4222c3:	mov    rax,QWORD PTR [rbp-0x8]
  4222c7:	mov    rsi,rcx
  4222ca:	mov    rdi,rax
  4222cd:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  4222d2:	jmp    4222e2 <flatcc_verify_union_vector_field@@Base+0x6e7>
  4222d4:	mov    rax,QWORD PTR [rbp-0x20]
  4222d8:	mov    DWORD PTR [rax],0x1
  4222de:	mov    rax,QWORD PTR [rbp-0x10]
  4222e2:	leave  
  4222e3:	ret    
  4222e4:	push   rbp
  4222e5:	mov    rbp,rsp
  4222e8:	sub    rsp,0x20
  4222ec:	mov    QWORD PTR [rbp-0x8],rdi
  4222f0:	mov    QWORD PTR [rbp-0x10],rsi
  4222f4:	mov    QWORD PTR [rbp-0x18],rdx
  4222f8:	mov    QWORD PTR [rbp-0x20],rcx
  4222fc:	mov    rdx,QWORD PTR [rbp-0x18]
  422300:	mov    rcx,QWORD PTR [rbp-0x10]
  422304:	mov    rax,QWORD PTR [rbp-0x8]
  422308:	mov    rsi,rcx
  42230b:	mov    rdi,rax
  42230e:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  422313:	mov    QWORD PTR [rbp-0x10],rax
  422317:	mov    rax,QWORD PTR [rbp-0x10]
  42231b:	cmp    rax,QWORD PTR [rbp-0x18]
  42231f:	jne    422334 <flatcc_verify_union_vector_field@@Base+0x739>
  422321:	mov    rax,QWORD PTR [rbp-0x20]
  422325:	mov    DWORD PTR [rax],0x0
  42232b:	mov    rax,QWORD PTR [rbp-0x10]
  42232f:	jmp    422420 <flatcc_verify_union_vector_field@@Base+0x825>
  422334:	mov    rax,QWORD PTR [rbp-0x10]
  422338:	movzx  eax,BYTE PTR [rax]
  42233b:	cmp    al,0x2c
  42233d:	je     422392 <flatcc_verify_union_vector_field@@Base+0x797>
  42233f:	mov    rax,QWORD PTR [rbp-0x20]
  422343:	mov    DWORD PTR [rax],0x0
  422349:	mov    rax,QWORD PTR [rbp-0x10]
  42234d:	movzx  eax,BYTE PTR [rax]
  422350:	cmp    al,0x5d
  422352:	je     422372 <flatcc_verify_union_vector_field@@Base+0x777>
  422354:	mov    rdx,QWORD PTR [rbp-0x18]
  422358:	mov    rsi,QWORD PTR [rbp-0x10]
  42235c:	mov    rax,QWORD PTR [rbp-0x8]
  422360:	mov    ecx,0x9
  422365:	mov    rdi,rax
  422368:	call   425bce <flatcc_json_parser_set_error@@Base>
  42236d:	jmp    422420 <flatcc_verify_union_vector_field@@Base+0x825>
  422372:	mov    rax,QWORD PTR [rbp-0x10]
  422376:	lea    rcx,[rax+0x1]
  42237a:	mov    rdx,QWORD PTR [rbp-0x18]
  42237e:	mov    rax,QWORD PTR [rbp-0x8]
  422382:	mov    rsi,rcx
  422385:	mov    rdi,rax
  422388:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  42238d:	jmp    422420 <flatcc_verify_union_vector_field@@Base+0x825>
  422392:	mov    rax,QWORD PTR [rbp-0x10]
  422396:	lea    rcx,[rax+0x1]
  42239a:	mov    rdx,QWORD PTR [rbp-0x18]
  42239e:	mov    rax,QWORD PTR [rbp-0x8]
  4223a2:	mov    rsi,rcx
  4223a5:	mov    rdi,rax
  4223a8:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  4223ad:	mov    QWORD PTR [rbp-0x10],rax
  4223b1:	mov    rax,QWORD PTR [rbp-0x10]
  4223b5:	cmp    rax,QWORD PTR [rbp-0x18]
  4223b9:	jne    4223e0 <flatcc_verify_union_vector_field@@Base+0x7e5>
  4223bb:	mov    rax,QWORD PTR [rbp-0x20]
  4223bf:	mov    DWORD PTR [rax],0x0
  4223c5:	mov    rdx,QWORD PTR [rbp-0x18]
  4223c9:	mov    rsi,QWORD PTR [rbp-0x10]
  4223cd:	mov    rax,QWORD PTR [rbp-0x8]
  4223d1:	mov    ecx,0x9
  4223d6:	mov    rdi,rax
  4223d9:	call   425bce <flatcc_json_parser_set_error@@Base>
  4223de:	jmp    422420 <flatcc_verify_union_vector_field@@Base+0x825>
  4223e0:	mov    rax,QWORD PTR [rbp-0x10]
  4223e4:	movzx  eax,BYTE PTR [rax]
  4223e7:	cmp    al,0x5d
  4223e9:	jne    422412 <flatcc_verify_union_vector_field@@Base+0x817>
  4223eb:	mov    rax,QWORD PTR [rbp-0x20]
  4223ef:	mov    DWORD PTR [rax],0x0
  4223f5:	mov    rax,QWORD PTR [rbp-0x10]
  4223f9:	lea    rcx,[rax+0x1]
  4223fd:	mov    rdx,QWORD PTR [rbp-0x18]
  422401:	mov    rax,QWORD PTR [rbp-0x8]
  422405:	mov    rsi,rcx
  422408:	mov    rdi,rax
  42240b:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  422410:	jmp    422420 <flatcc_verify_union_vector_field@@Base+0x825>
  422412:	mov    rax,QWORD PTR [rbp-0x20]
  422416:	mov    DWORD PTR [rax],0x1
  42241c:	mov    rax,QWORD PTR [rbp-0x10]
  422420:	leave  
  422421:	ret    
  422422:	push   rbp
  422423:	mov    rbp,rsp
  422426:	sub    rsp,0x30
  42242a:	mov    QWORD PTR [rbp-0x8],rdi
  42242e:	mov    QWORD PTR [rbp-0x10],rsi
  422432:	mov    QWORD PTR [rbp-0x18],rdx
  422436:	mov    DWORD PTR [rbp-0x1c],ecx
  422439:	mov    QWORD PTR [rbp-0x28],r8
  42243d:	mov    QWORD PTR [rbp-0x30],r9
  422441:	cmp    DWORD PTR [rbp-0x1c],0x0
  422445:	je     422462 <flatcc_verify_union_vector_field@@Base+0x867>
  422447:	mov    rdx,QWORD PTR [rbp-0x18]
  42244b:	mov    rsi,QWORD PTR [rbp-0x10]
  42244f:	mov    rax,QWORD PTR [rbp-0x8]
  422453:	mov    ecx,0x8
  422458:	mov    rdi,rax
  42245b:	call   425bce <flatcc_json_parser_set_error@@Base>
  422460:	jmp    422471 <flatcc_verify_union_vector_field@@Base+0x876>
  422462:	mov    rax,QWORD PTR [rbp-0x30]
  422466:	mov    rdx,QWORD PTR [rbp-0x28]
  42246a:	mov    QWORD PTR [rax],rdx
  42246d:	mov    rax,QWORD PTR [rbp-0x10]
  422471:	leave  
  422472:	ret    
  422473:	push   rbp
  422474:	mov    rbp,rsp
  422477:	sub    rsp,0x30
  42247b:	mov    QWORD PTR [rbp-0x8],rdi
  42247f:	mov    QWORD PTR [rbp-0x10],rsi
  422483:	mov    QWORD PTR [rbp-0x18],rdx
  422487:	mov    DWORD PTR [rbp-0x1c],ecx
  42248a:	mov    QWORD PTR [rbp-0x28],r8
  42248e:	mov    QWORD PTR [rbp-0x30],r9
  422492:	cmp    DWORD PTR [rbp-0x1c],0x0
  422496:	je     4224b3 <flatcc_verify_union_vector_field@@Base+0x8b8>
  422498:	mov    rdx,QWORD PTR [rbp-0x18]
  42249c:	mov    rsi,QWORD PTR [rbp-0x10]
  4224a0:	mov    rax,QWORD PTR [rbp-0x8]
  4224a4:	mov    ecx,0x8
  4224a9:	mov    rdi,rax
  4224ac:	call   425bce <flatcc_json_parser_set_error@@Base>
  4224b1:	jmp    4224c7 <flatcc_verify_union_vector_field@@Base+0x8cc>
  4224b3:	cmp    QWORD PTR [rbp-0x28],0x0
  4224b8:	setne  al
  4224bb:	mov    edx,eax
  4224bd:	mov    rax,QWORD PTR [rbp-0x30]
  4224c1:	mov    BYTE PTR [rax],dl
  4224c3:	mov    rax,QWORD PTR [rbp-0x10]
  4224c7:	leave  
  4224c8:	ret    
  4224c9:	push   rbp
  4224ca:	mov    rbp,rsp
  4224cd:	sub    rsp,0x30
  4224d1:	mov    QWORD PTR [rbp-0x8],rdi
  4224d5:	mov    QWORD PTR [rbp-0x10],rsi
  4224d9:	mov    QWORD PTR [rbp-0x18],rdx
  4224dd:	mov    DWORD PTR [rbp-0x1c],ecx
  4224e0:	mov    QWORD PTR [rbp-0x28],r8
  4224e4:	mov    QWORD PTR [rbp-0x30],r9
  4224e8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4224ec:	je     422509 <flatcc_verify_union_vector_field@@Base+0x90e>
  4224ee:	mov    rdx,QWORD PTR [rbp-0x18]
  4224f2:	mov    rsi,QWORD PTR [rbp-0x10]
  4224f6:	mov    rax,QWORD PTR [rbp-0x8]
  4224fa:	mov    ecx,0x8
  4224ff:	mov    rdi,rax
  422502:	call   425bce <flatcc_json_parser_set_error@@Base>
  422507:	jmp    42253f <flatcc_verify_union_vector_field@@Base+0x944>
  422509:	mov    eax,0xffffffff
  42250e:	cmp    QWORD PTR [rbp-0x28],rax
  422512:	jbe    42252f <flatcc_verify_union_vector_field@@Base+0x934>
  422514:	mov    rdx,QWORD PTR [rbp-0x18]
  422518:	mov    rsi,QWORD PTR [rbp-0x10]
  42251c:	mov    rax,QWORD PTR [rbp-0x8]
  422520:	mov    ecx,0x7
  422525:	mov    rdi,rax
  422528:	call   425bce <flatcc_json_parser_set_error@@Base>
  42252d:	jmp    42253f <flatcc_verify_union_vector_field@@Base+0x944>
  42252f:	mov    rax,QWORD PTR [rbp-0x28]
  422533:	mov    edx,eax
  422535:	mov    rax,QWORD PTR [rbp-0x30]
  422539:	mov    DWORD PTR [rax],edx
  42253b:	mov    rax,QWORD PTR [rbp-0x10]
  42253f:	leave  
  422540:	ret    
  422541:	push   rbp
  422542:	mov    rbp,rsp
  422545:	sub    rsp,0x30
  422549:	mov    QWORD PTR [rbp-0x8],rdi
  42254d:	mov    QWORD PTR [rbp-0x10],rsi
  422551:	mov    QWORD PTR [rbp-0x18],rdx
  422555:	mov    DWORD PTR [rbp-0x1c],ecx
  422558:	mov    QWORD PTR [rbp-0x28],r8
  42255c:	mov    QWORD PTR [rbp-0x30],r9
  422560:	cmp    DWORD PTR [rbp-0x1c],0x0
  422564:	je     422581 <flatcc_verify_union_vector_field@@Base+0x986>
  422566:	mov    rdx,QWORD PTR [rbp-0x18]
  42256a:	mov    rsi,QWORD PTR [rbp-0x10]
  42256e:	mov    rax,QWORD PTR [rbp-0x8]
  422572:	mov    ecx,0x8
  422577:	mov    rdi,rax
  42257a:	call   425bce <flatcc_json_parser_set_error@@Base>
  42257f:	jmp    4225b7 <flatcc_verify_union_vector_field@@Base+0x9bc>
  422581:	cmp    QWORD PTR [rbp-0x28],0xffff
  422589:	jbe    4225a6 <flatcc_verify_union_vector_field@@Base+0x9ab>
  42258b:	mov    rdx,QWORD PTR [rbp-0x18]
  42258f:	mov    rsi,QWORD PTR [rbp-0x10]
  422593:	mov    rax,QWORD PTR [rbp-0x8]
  422597:	mov    ecx,0x7
  42259c:	mov    rdi,rax
  42259f:	call   425bce <flatcc_json_parser_set_error@@Base>
  4225a4:	jmp    4225b7 <flatcc_verify_union_vector_field@@Base+0x9bc>
  4225a6:	mov    rax,QWORD PTR [rbp-0x28]
  4225aa:	mov    edx,eax
  4225ac:	mov    rax,QWORD PTR [rbp-0x30]
  4225b0:	mov    WORD PTR [rax],dx
  4225b3:	mov    rax,QWORD PTR [rbp-0x10]
  4225b7:	leave  
  4225b8:	ret    
  4225b9:	push   rbp
  4225ba:	mov    rbp,rsp
  4225bd:	sub    rsp,0x30
  4225c1:	mov    QWORD PTR [rbp-0x8],rdi
  4225c5:	mov    QWORD PTR [rbp-0x10],rsi
  4225c9:	mov    QWORD PTR [rbp-0x18],rdx
  4225cd:	mov    DWORD PTR [rbp-0x1c],ecx
  4225d0:	mov    QWORD PTR [rbp-0x28],r8
  4225d4:	mov    QWORD PTR [rbp-0x30],r9
  4225d8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4225dc:	je     4225f9 <flatcc_verify_union_vector_field@@Base+0x9fe>
  4225de:	mov    rdx,QWORD PTR [rbp-0x18]
  4225e2:	mov    rsi,QWORD PTR [rbp-0x10]
  4225e6:	mov    rax,QWORD PTR [rbp-0x8]
  4225ea:	mov    ecx,0x8
  4225ef:	mov    rdi,rax
  4225f2:	call   425bce <flatcc_json_parser_set_error@@Base>
  4225f7:	jmp    42262e <flatcc_verify_union_vector_field@@Base+0xa33>
  4225f9:	cmp    QWORD PTR [rbp-0x28],0xff
  422601:	jbe    42261e <flatcc_verify_union_vector_field@@Base+0xa23>
  422603:	mov    rdx,QWORD PTR [rbp-0x18]
  422607:	mov    rsi,QWORD PTR [rbp-0x10]
  42260b:	mov    rax,QWORD PTR [rbp-0x8]
  42260f:	mov    ecx,0x7
  422614:	mov    rdi,rax
  422617:	call   425bce <flatcc_json_parser_set_error@@Base>
  42261c:	jmp    42262e <flatcc_verify_union_vector_field@@Base+0xa33>
  42261e:	mov    rax,QWORD PTR [rbp-0x28]
  422622:	mov    edx,eax
  422624:	mov    rax,QWORD PTR [rbp-0x30]
  422628:	mov    BYTE PTR [rax],dl
  42262a:	mov    rax,QWORD PTR [rbp-0x10]
  42262e:	leave  
  42262f:	ret    
  422630:	push   rbp
  422631:	mov    rbp,rsp
  422634:	sub    rsp,0x30
  422638:	mov    QWORD PTR [rbp-0x8],rdi
  42263c:	mov    QWORD PTR [rbp-0x10],rsi
  422640:	mov    QWORD PTR [rbp-0x18],rdx
  422644:	mov    DWORD PTR [rbp-0x1c],ecx
  422647:	mov    QWORD PTR [rbp-0x28],r8
  42264b:	mov    QWORD PTR [rbp-0x30],r9
  42264f:	cmp    DWORD PTR [rbp-0x1c],0x0
  422653:	je     422693 <flatcc_verify_union_vector_field@@Base+0xa98>
  422655:	movabs rax,0x8000000000000000
  42265f:	cmp    QWORD PTR [rbp-0x28],rax
  422663:	jbe    422680 <flatcc_verify_union_vector_field@@Base+0xa85>
  422665:	mov    rdx,QWORD PTR [rbp-0x18]
  422669:	mov    rsi,QWORD PTR [rbp-0x10]
  42266d:	mov    rax,QWORD PTR [rbp-0x8]
  422671:	mov    ecx,0x8
  422676:	mov    rdi,rax
  422679:	call   425bce <flatcc_json_parser_set_error@@Base>
  42267e:	jmp    4226c6 <flatcc_verify_union_vector_field@@Base+0xacb>
  422680:	mov    rax,QWORD PTR [rbp-0x28]
  422684:	neg    rax
  422687:	mov    rdx,rax
  42268a:	mov    rax,QWORD PTR [rbp-0x30]
  42268e:	mov    QWORD PTR [rax],rdx
  422691:	jmp    4226c2 <flatcc_verify_union_vector_field@@Base+0xac7>
  422693:	mov    rax,QWORD PTR [rbp-0x28]
  422697:	test   rax,rax
  42269a:	jns    4226b7 <flatcc_verify_union_vector_field@@Base+0xabc>
  42269c:	mov    rdx,QWORD PTR [rbp-0x18]
  4226a0:	mov    rsi,QWORD PTR [rbp-0x10]
  4226a4:	mov    rax,QWORD PTR [rbp-0x8]
  4226a8:	mov    ecx,0x7
  4226ad:	mov    rdi,rax
  4226b0:	call   425bce <flatcc_json_parser_set_error@@Base>
  4226b5:	jmp    4226c6 <flatcc_verify_union_vector_field@@Base+0xacb>
  4226b7:	mov    rdx,QWORD PTR [rbp-0x28]
  4226bb:	mov    rax,QWORD PTR [rbp-0x30]
  4226bf:	mov    QWORD PTR [rax],rdx
  4226c2:	mov    rax,QWORD PTR [rbp-0x10]
  4226c6:	leave  
  4226c7:	ret    
  4226c8:	push   rbp
  4226c9:	mov    rbp,rsp
  4226cc:	sub    rsp,0x30
  4226d0:	mov    QWORD PTR [rbp-0x8],rdi
  4226d4:	mov    QWORD PTR [rbp-0x10],rsi
  4226d8:	mov    QWORD PTR [rbp-0x18],rdx
  4226dc:	mov    DWORD PTR [rbp-0x1c],ecx
  4226df:	mov    QWORD PTR [rbp-0x28],r8
  4226e3:	mov    QWORD PTR [rbp-0x30],r9
  4226e7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4226eb:	je     422723 <flatcc_verify_union_vector_field@@Base+0xb28>
  4226ed:	mov    eax,0x80000000
  4226f2:	cmp    QWORD PTR [rbp-0x28],rax
  4226f6:	jbe    422713 <flatcc_verify_union_vector_field@@Base+0xb18>
  4226f8:	mov    rdx,QWORD PTR [rbp-0x18]
  4226fc:	mov    rsi,QWORD PTR [rbp-0x10]
  422700:	mov    rax,QWORD PTR [rbp-0x8]
  422704:	mov    ecx,0x8
  422709:	mov    rdi,rax
  42270c:	call   425bce <flatcc_json_parser_set_error@@Base>
  422711:	jmp    422758 <flatcc_verify_union_vector_field@@Base+0xb5d>
  422713:	mov    rax,QWORD PTR [rbp-0x28]
  422717:	neg    eax
  422719:	mov    edx,eax
  42271b:	mov    rax,QWORD PTR [rbp-0x30]
  42271f:	mov    DWORD PTR [rax],edx
  422721:	jmp    422754 <flatcc_verify_union_vector_field@@Base+0xb59>
  422723:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  42272b:	jbe    422748 <flatcc_verify_union_vector_field@@Base+0xb4d>
  42272d:	mov    rdx,QWORD PTR [rbp-0x18]
  422731:	mov    rsi,QWORD PTR [rbp-0x10]
  422735:	mov    rax,QWORD PTR [rbp-0x8]
  422739:	mov    ecx,0x7
  42273e:	mov    rdi,rax
  422741:	call   425bce <flatcc_json_parser_set_error@@Base>
  422746:	jmp    422758 <flatcc_verify_union_vector_field@@Base+0xb5d>
  422748:	mov    rax,QWORD PTR [rbp-0x28]
  42274c:	mov    edx,eax
  42274e:	mov    rax,QWORD PTR [rbp-0x30]
  422752:	mov    DWORD PTR [rax],edx
  422754:	mov    rax,QWORD PTR [rbp-0x10]
  422758:	leave  
  422759:	ret    
  42275a:	push   rbp
  42275b:	mov    rbp,rsp
  42275e:	sub    rsp,0x30
  422762:	mov    QWORD PTR [rbp-0x8],rdi
  422766:	mov    QWORD PTR [rbp-0x10],rsi
  42276a:	mov    QWORD PTR [rbp-0x18],rdx
  42276e:	mov    DWORD PTR [rbp-0x1c],ecx
  422771:	mov    QWORD PTR [rbp-0x28],r8
  422775:	mov    QWORD PTR [rbp-0x30],r9
  422779:	cmp    DWORD PTR [rbp-0x1c],0x0
  42277d:	je     4227b5 <flatcc_verify_union_vector_field@@Base+0xbba>
  42277f:	cmp    QWORD PTR [rbp-0x28],0x8000
  422787:	jbe    4227a4 <flatcc_verify_union_vector_field@@Base+0xba9>
  422789:	mov    rdx,QWORD PTR [rbp-0x18]
  42278d:	mov    rsi,QWORD PTR [rbp-0x10]
  422791:	mov    rax,QWORD PTR [rbp-0x8]
  422795:	mov    ecx,0x8
  42279a:	mov    rdi,rax
  42279d:	call   425bce <flatcc_json_parser_set_error@@Base>
  4227a2:	jmp    4227eb <flatcc_verify_union_vector_field@@Base+0xbf0>
  4227a4:	mov    rax,QWORD PTR [rbp-0x28]
  4227a8:	neg    eax
  4227aa:	mov    edx,eax
  4227ac:	mov    rax,QWORD PTR [rbp-0x30]
  4227b0:	mov    WORD PTR [rax],dx
  4227b3:	jmp    4227e7 <flatcc_verify_union_vector_field@@Base+0xbec>
  4227b5:	cmp    QWORD PTR [rbp-0x28],0x7fff
  4227bd:	jbe    4227da <flatcc_verify_union_vector_field@@Base+0xbdf>
  4227bf:	mov    rdx,QWORD PTR [rbp-0x18]
  4227c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4227c7:	mov    rax,QWORD PTR [rbp-0x8]
  4227cb:	mov    ecx,0x7
  4227d0:	mov    rdi,rax
  4227d3:	call   425bce <flatcc_json_parser_set_error@@Base>
  4227d8:	jmp    4227eb <flatcc_verify_union_vector_field@@Base+0xbf0>
  4227da:	mov    rax,QWORD PTR [rbp-0x28]
  4227de:	mov    edx,eax
  4227e0:	mov    rax,QWORD PTR [rbp-0x30]
  4227e4:	mov    WORD PTR [rax],dx
  4227e7:	mov    rax,QWORD PTR [rbp-0x10]
  4227eb:	leave  
  4227ec:	ret    
  4227ed:	push   rbp
  4227ee:	mov    rbp,rsp
  4227f1:	sub    rsp,0x30
  4227f5:	mov    QWORD PTR [rbp-0x8],rdi
  4227f9:	mov    QWORD PTR [rbp-0x10],rsi
  4227fd:	mov    QWORD PTR [rbp-0x18],rdx
  422801:	mov    DWORD PTR [rbp-0x1c],ecx
  422804:	mov    QWORD PTR [rbp-0x28],r8
  422808:	mov    QWORD PTR [rbp-0x30],r9
  42280c:	cmp    DWORD PTR [rbp-0x1c],0x0
  422810:	je     422847 <flatcc_verify_union_vector_field@@Base+0xc4c>
  422812:	cmp    QWORD PTR [rbp-0x28],0x80
  42281a:	jbe    422837 <flatcc_verify_union_vector_field@@Base+0xc3c>
  42281c:	mov    rdx,QWORD PTR [rbp-0x18]
  422820:	mov    rsi,QWORD PTR [rbp-0x10]
  422824:	mov    rax,QWORD PTR [rbp-0x8]
  422828:	mov    ecx,0x8
  42282d:	mov    rdi,rax
  422830:	call   425bce <flatcc_json_parser_set_error@@Base>
  422835:	jmp    422879 <flatcc_verify_union_vector_field@@Base+0xc7e>
  422837:	mov    rax,QWORD PTR [rbp-0x28]
  42283b:	neg    eax
  42283d:	mov    edx,eax
  42283f:	mov    rax,QWORD PTR [rbp-0x30]
  422843:	mov    BYTE PTR [rax],dl
  422845:	jmp    422875 <flatcc_verify_union_vector_field@@Base+0xc7a>
  422847:	cmp    QWORD PTR [rbp-0x28],0x7f
  42284c:	jbe    422869 <flatcc_verify_union_vector_field@@Base+0xc6e>
  42284e:	mov    rdx,QWORD PTR [rbp-0x18]
  422852:	mov    rsi,QWORD PTR [rbp-0x10]
  422856:	mov    rax,QWORD PTR [rbp-0x8]
  42285a:	mov    ecx,0x7
  42285f:	mov    rdi,rax
  422862:	call   425bce <flatcc_json_parser_set_error@@Base>
  422867:	jmp    422879 <flatcc_verify_union_vector_field@@Base+0xc7e>
  422869:	mov    rax,QWORD PTR [rbp-0x28]
  42286d:	mov    edx,eax
  42286f:	mov    rax,QWORD PTR [rbp-0x30]
  422873:	mov    BYTE PTR [rax],dl
  422875:	mov    rax,QWORD PTR [rbp-0x10]
  422879:	leave  
  42287a:	ret    
  42287b:	push   rbp
  42287c:	mov    rbp,rsp
  42287f:	mov    QWORD PTR [rbp-0x8],rdi
  422883:	mov    QWORD PTR [rbp-0x10],rsi
  422887:	mov    QWORD PTR [rbp-0x18],rdx
  42288b:	mov    DWORD PTR [rbp-0x1c],ecx
  42288e:	mov    QWORD PTR [rbp-0x28],r8
  422892:	mov    QWORD PTR [rbp-0x30],r9
  422896:	cmp    DWORD PTR [rbp-0x1c],0x0
  42289a:	je     4228d7 <flatcc_verify_union_vector_field@@Base+0xcdc>
  42289c:	mov    rax,QWORD PTR [rbp-0x28]
  4228a0:	test   rax,rax
  4228a3:	js     4228b0 <flatcc_verify_union_vector_field@@Base+0xcb5>
  4228a5:	vxorps xmm0,xmm0,xmm0
  4228a9:	vcvtsi2ss xmm0,xmm0,rax
  4228ae:	jmp    4228c9 <flatcc_verify_union_vector_field@@Base+0xcce>
  4228b0:	mov    rdx,rax
  4228b3:	shr    rdx,1
  4228b6:	and    eax,0x1
  4228b9:	or     rdx,rax
  4228bc:	vxorps xmm0,xmm0,xmm0
  4228c0:	vcvtsi2ss xmm0,xmm0,rdx
  4228c5:	vaddss xmm0,xmm0,xmm0
  4228c9:	vmovss xmm1,DWORD PTR [rip+0x1809f]        # 43a970 <flatcc_builder_padding_base@@Base+0x2710>
  4228d1:	vxorps xmm0,xmm0,xmm1
  4228d5:	jmp    422904 <flatcc_verify_union_vector_field@@Base+0xd09>
  4228d7:	mov    rax,QWORD PTR [rbp-0x28]
  4228db:	test   rax,rax
  4228de:	js     4228eb <flatcc_verify_union_vector_field@@Base+0xcf0>
  4228e0:	vxorps xmm0,xmm0,xmm0
  4228e4:	vcvtsi2ss xmm0,xmm0,rax
  4228e9:	jmp    422904 <flatcc_verify_union_vector_field@@Base+0xd09>
  4228eb:	mov    rdx,rax
  4228ee:	shr    rdx,1
  4228f1:	and    eax,0x1
  4228f4:	or     rdx,rax
  4228f7:	vxorps xmm0,xmm0,xmm0
  4228fb:	vcvtsi2ss xmm0,xmm0,rdx
  422900:	vaddss xmm0,xmm0,xmm0
  422904:	mov    rax,QWORD PTR [rbp-0x30]
  422908:	vmovss DWORD PTR [rax],xmm0
  42290c:	mov    rax,QWORD PTR [rbp-0x10]
  422910:	pop    rbp
  422911:	ret    
  422912:	push   rbp
  422913:	mov    rbp,rsp
  422916:	mov    QWORD PTR [rbp-0x8],rdi
  42291a:	mov    QWORD PTR [rbp-0x10],rsi
  42291e:	mov    QWORD PTR [rbp-0x18],rdx
  422922:	mov    DWORD PTR [rbp-0x1c],ecx
  422925:	mov    QWORD PTR [rbp-0x28],r8
  422929:	mov    QWORD PTR [rbp-0x30],r9
  42292d:	cmp    DWORD PTR [rbp-0x1c],0x0
  422931:	je     42296e <flatcc_verify_union_vector_field@@Base+0xd73>
  422933:	mov    rax,QWORD PTR [rbp-0x28]
  422937:	test   rax,rax
  42293a:	js     422947 <flatcc_verify_union_vector_field@@Base+0xd4c>
  42293c:	vxorpd xmm0,xmm0,xmm0
  422940:	vcvtsi2sd xmm0,xmm0,rax
  422945:	jmp    422960 <flatcc_verify_union_vector_field@@Base+0xd65>
  422947:	mov    rdx,rax
  42294a:	shr    rdx,1
  42294d:	and    eax,0x1
  422950:	or     rdx,rax
  422953:	vxorpd xmm0,xmm0,xmm0
  422957:	vcvtsi2sd xmm0,xmm0,rdx
  42295c:	vaddsd xmm0,xmm0,xmm0
  422960:	vmovsd xmm1,QWORD PTR [rip+0x18018]        # 43a980 <flatcc_builder_padding_base@@Base+0x2720>
  422968:	vxorpd xmm0,xmm0,xmm1
  42296c:	jmp    42299b <flatcc_verify_union_vector_field@@Base+0xda0>
  42296e:	mov    rax,QWORD PTR [rbp-0x28]
  422972:	test   rax,rax
  422975:	js     422982 <flatcc_verify_union_vector_field@@Base+0xd87>
  422977:	vxorpd xmm0,xmm0,xmm0
  42297b:	vcvtsi2sd xmm0,xmm0,rax
  422980:	jmp    42299b <flatcc_verify_union_vector_field@@Base+0xda0>
  422982:	mov    rdx,rax
  422985:	shr    rdx,1
  422988:	and    eax,0x1
  42298b:	or     rdx,rax
  42298e:	vxorpd xmm0,xmm0,xmm0
  422992:	vcvtsi2sd xmm0,xmm0,rdx
  422997:	vaddsd xmm0,xmm0,xmm0
  42299b:	mov    rax,QWORD PTR [rbp-0x30]
  42299f:	vmovsd QWORD PTR [rax],xmm0
  4229a3:	mov    rax,QWORD PTR [rbp-0x10]
  4229a7:	pop    rbp
  4229a8:	ret    
  4229a9:	push   rbp
  4229aa:	mov    rbp,rsp
  4229ad:	sub    rsp,0x10
  4229b1:	mov    QWORD PTR [rbp-0x8],rdi
  4229b5:	mov    QWORD PTR [rbp-0x10],rsi
  4229b9:	mov    rdx,QWORD PTR [rbp-0x10]
  4229bd:	mov    rax,QWORD PTR [rbp-0x8]
  4229c1:	sub    rdx,rax
  4229c4:	mov    rax,rdx
  4229c7:	cmp    rax,0x3
  4229cb:	jle    4229f3 <flatcc_verify_union_vector_field@@Base+0xdf8>
  4229cd:	mov    rax,QWORD PTR [rbp-0x8]
  4229d1:	mov    edx,0x4
  4229d6:	lea    rsi,[rip+0x16b05]        # 4394e2 <flatcc_builder_padding_base@@Base+0x1282>
  4229dd:	mov    rdi,rax
  4229e0:	call   4050c0 <memcmp@plt>
  4229e5:	test   eax,eax
  4229e7:	jne    4229f3 <flatcc_verify_union_vector_field@@Base+0xdf8>
  4229e9:	mov    rax,QWORD PTR [rbp-0x8]
  4229ed:	add    rax,0x4
  4229f1:	jmp    4229f7 <flatcc_verify_union_vector_field@@Base+0xdfc>
  4229f3:	mov    rax,QWORD PTR [rbp-0x8]
  4229f7:	leave  
  4229f8:	ret    
  4229f9:	push   rbp
  4229fa:	mov    rbp,rsp
  4229fd:	sub    rsp,0x40
  422a01:	mov    QWORD PTR [rbp-0x28],rdi
  422a05:	mov    QWORD PTR [rbp-0x30],rsi
  422a09:	mov    QWORD PTR [rbp-0x38],rdx
  422a0d:	mov    QWORD PTR [rbp-0x40],rcx
  422a11:	mov    rax,QWORD PTR fs:0x28
  422a1a:	mov    QWORD PTR [rbp-0x8],rax
  422a1e:	xor    eax,eax
  422a20:	mov    QWORD PTR [rbp-0x18],0x0
  422a28:	mov    DWORD PTR [rbp-0x1c],0x0
  422a2f:	mov    rax,QWORD PTR [rbp-0x30]
  422a33:	mov    QWORD PTR [rbp-0x10],rax
  422a37:	mov    rax,QWORD PTR [rbp-0x40]
  422a3b:	mov    BYTE PTR [rax],0x0
  422a3e:	mov    rax,QWORD PTR [rbp-0x30]
  422a42:	cmp    rax,QWORD PTR [rbp-0x38]
  422a46:	jne    422a4e <flatcc_verify_union_vector_field@@Base+0xe53>
  422a48:	mov    rax,QWORD PTR [rbp-0x30]
  422a4c:	jmp    422aa6 <flatcc_verify_union_vector_field@@Base+0xeab>
  422a4e:	lea    rdi,[rbp-0x18]
  422a52:	lea    rcx,[rbp-0x1c]
  422a56:	mov    rdx,QWORD PTR [rbp-0x38]
  422a5a:	mov    rsi,QWORD PTR [rbp-0x30]
  422a5e:	mov    rax,QWORD PTR [rbp-0x28]
  422a62:	mov    r8,rdi
  422a65:	mov    rdi,rax
  422a68:	call   427279 <flatcc_json_parser_integer@@Base>
  422a6d:	mov    QWORD PTR [rbp-0x30],rax
  422a71:	mov    rax,QWORD PTR [rbp-0x30]
  422a75:	cmp    rax,QWORD PTR [rbp-0x10]
  422a79:	je     422aa2 <flatcc_verify_union_vector_field@@Base+0xea7>
  422a7b:	mov    rdi,QWORD PTR [rbp-0x18]
  422a7f:	mov    ecx,DWORD PTR [rbp-0x1c]
  422a82:	mov    r8,QWORD PTR [rbp-0x40]
  422a86:	mov    rdx,QWORD PTR [rbp-0x38]
  422a8a:	mov    rsi,QWORD PTR [rbp-0x30]
  422a8e:	mov    rax,QWORD PTR [rbp-0x28]
  422a92:	mov    r9,r8
  422a95:	mov    r8,rdi
  422a98:	mov    rdi,rax
  422a9b:	call   4225b9 <flatcc_verify_union_vector_field@@Base+0x9be>
  422aa0:	jmp    422aa6 <flatcc_verify_union_vector_field@@Base+0xeab>
  422aa2:	mov    rax,QWORD PTR [rbp-0x30]
  422aa6:	mov    rdx,QWORD PTR [rbp-0x8]
  422aaa:	xor    rdx,QWORD PTR fs:0x28
  422ab3:	je     422aba <flatcc_verify_union_vector_field@@Base+0xebf>
  422ab5:	call   405070 <__stack_chk_fail@plt>
  422aba:	leave  
  422abb:	ret    
  422abc:	push   rbp
  422abd:	mov    rbp,rsp
  422ac0:	sub    rsp,0x40
  422ac4:	mov    QWORD PTR [rbp-0x28],rdi
  422ac8:	mov    QWORD PTR [rbp-0x30],rsi
  422acc:	mov    QWORD PTR [rbp-0x38],rdx
  422ad0:	mov    QWORD PTR [rbp-0x40],rcx
  422ad4:	mov    rax,QWORD PTR fs:0x28
  422add:	mov    QWORD PTR [rbp-0x8],rax
  422ae1:	xor    eax,eax
  422ae3:	mov    rax,QWORD PTR [rbp-0x30]
  422ae7:	mov    QWORD PTR [rbp-0x10],rax
  422aeb:	mov    rdx,QWORD PTR [rbp-0x38]
  422aef:	mov    rax,QWORD PTR [rbp-0x30]
  422af3:	sub    rdx,rax
  422af6:	mov    rax,rdx
  422af9:	cmp    rax,0x3
  422afd:	jle    422b2c <flatcc_verify_union_vector_field@@Base+0xf31>
  422aff:	mov    rax,QWORD PTR [rbp-0x30]
  422b03:	mov    edx,0x4
  422b08:	lea    rsi,[rip+0x169d8]        # 4394e7 <flatcc_builder_padding_base@@Base+0x1287>
  422b0f:	mov    rdi,rax
  422b12:	call   4050c0 <memcmp@plt>
  422b17:	test   eax,eax
  422b19:	jne    422b2c <flatcc_verify_union_vector_field@@Base+0xf31>
  422b1b:	mov    rax,QWORD PTR [rbp-0x40]
  422b1f:	mov    BYTE PTR [rax],0x1
  422b22:	mov    rax,QWORD PTR [rbp-0x10]
  422b26:	add    rax,0x4
  422b2a:	jmp    422b9e <flatcc_verify_union_vector_field@@Base+0xfa3>
  422b2c:	mov    rdx,QWORD PTR [rbp-0x38]
  422b30:	mov    rax,QWORD PTR [rbp-0x30]
  422b34:	sub    rdx,rax
  422b37:	mov    rax,rdx
  422b3a:	cmp    rax,0x4
  422b3e:	jle    422b6d <flatcc_verify_union_vector_field@@Base+0xf72>
  422b40:	mov    rax,QWORD PTR [rbp-0x30]
  422b44:	mov    edx,0x5
  422b49:	lea    rsi,[rip+0x1699c]        # 4394ec <flatcc_builder_padding_base@@Base+0x128c>
  422b50:	mov    rdi,rax
  422b53:	call   4050c0 <memcmp@plt>
  422b58:	test   eax,eax
  422b5a:	jne    422b6d <flatcc_verify_union_vector_field@@Base+0xf72>
  422b5c:	mov    rax,QWORD PTR [rbp-0x40]
  422b60:	mov    BYTE PTR [rax],0x0
  422b63:	mov    rax,QWORD PTR [rbp-0x10]
  422b67:	add    rax,0x5
  422b6b:	jmp    422b9e <flatcc_verify_union_vector_field@@Base+0xfa3>
  422b6d:	lea    rcx,[rbp-0x11]
  422b71:	mov    rdx,QWORD PTR [rbp-0x38]
  422b75:	mov    rsi,QWORD PTR [rbp-0x30]
  422b79:	mov    rax,QWORD PTR [rbp-0x28]
  422b7d:	mov    rdi,rax
  422b80:	call   4229f9 <flatcc_verify_union_vector_field@@Base+0xdfe>
  422b85:	mov    QWORD PTR [rbp-0x30],rax
  422b89:	movzx  eax,BYTE PTR [rbp-0x11]
  422b8d:	test   al,al
  422b8f:	setne  al
  422b92:	mov    edx,eax
  422b94:	mov    rax,QWORD PTR [rbp-0x40]
  422b98:	mov    BYTE PTR [rax],dl
  422b9a:	mov    rax,QWORD PTR [rbp-0x30]
  422b9e:	mov    rcx,QWORD PTR [rbp-0x8]
  422ba2:	xor    rcx,QWORD PTR fs:0x28
  422bab:	je     422bb2 <flatcc_verify_union_vector_field@@Base+0xfb7>
  422bad:	call   405070 <__stack_chk_fail@plt>
  422bb2:	leave  
  422bb3:	ret    
  422bb4:	push   rbp
  422bb5:	mov    rbp,rsp
  422bb8:	sub    rsp,0x60
  422bbc:	mov    QWORD PTR [rbp-0x38],rdi
  422bc0:	mov    QWORD PTR [rbp-0x40],rsi
  422bc4:	mov    QWORD PTR [rbp-0x48],rdx
  422bc8:	mov    QWORD PTR [rbp-0x50],rcx
  422bcc:	mov    QWORD PTR [rbp-0x58],r8
  422bd0:	mov    rax,QWORD PTR fs:0x28
  422bd9:	mov    QWORD PTR [rbp-0x8],rax
  422bdd:	xor    eax,eax
  422bdf:	mov    QWORD PTR [rbp-0x28],0x0
  422be7:	mov    rax,QWORD PTR [rbp-0x58]
  422beb:	mov    QWORD PTR [rax],0x0
  422bf2:	mov    rdx,QWORD PTR [rbp-0x48]
  422bf6:	mov    rcx,QWORD PTR [rbp-0x40]
  422bfa:	mov    rax,QWORD PTR [rbp-0x38]
  422bfe:	mov    rsi,rcx
  422c01:	mov    rdi,rax
  422c04:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  422c09:	mov    QWORD PTR [rbp-0x40],rax
  422c0d:	mov    rax,QWORD PTR [rbp-0x40]
  422c11:	cmp    rax,QWORD PTR [rbp-0x48]
  422c15:	jne    422c20 <flatcc_verify_union_vector_field@@Base+0x1025>
  422c17:	mov    rax,QWORD PTR [rbp-0x40]
  422c1b:	jmp    422cfd <flatcc_verify_union_vector_field@@Base+0x1102>
  422c20:	mov    rax,QWORD PTR [rbp-0x50]
  422c24:	mov    QWORD PTR [rbp-0x18],rax
  422c28:	mov    rax,QWORD PTR [rbp-0x18]
  422c2c:	mov    rax,QWORD PTR [rax]
  422c2f:	mov    rdx,QWORD PTR [rbp-0x40]
  422c33:	mov    QWORD PTR [rbp-0x10],rdx
  422c37:	lea    r9,[rbp-0x2c]
  422c3b:	lea    r8,[rbp-0x20]
  422c3f:	lea    rcx,[rbp-0x30]
  422c43:	mov    rdx,QWORD PTR [rbp-0x48]
  422c47:	mov    rsi,QWORD PTR [rbp-0x10]
  422c4b:	mov    rdi,QWORD PTR [rbp-0x38]
  422c4f:	call   rax
  422c51:	mov    QWORD PTR [rbp-0x40],rax
  422c55:	mov    rax,QWORD PTR [rbp-0x40]
  422c59:	cmp    rax,QWORD PTR [rbp-0x48]
  422c5d:	jne    422c68 <flatcc_verify_union_vector_field@@Base+0x106d>
  422c5f:	mov    rax,QWORD PTR [rbp-0x40]
  422c63:	jmp    422cfd <flatcc_verify_union_vector_field@@Base+0x1102>
  422c68:	mov    rax,QWORD PTR [rbp-0x40]
  422c6c:	cmp    rax,QWORD PTR [rbp-0x10]
  422c70:	jne    422c83 <flatcc_verify_union_vector_field@@Base+0x1088>
  422c72:	add    QWORD PTR [rbp-0x18],0x8
  422c77:	mov    rax,QWORD PTR [rbp-0x18]
  422c7b:	mov    rax,QWORD PTR [rax]
  422c7e:	test   rax,rax
  422c81:	jne    422c28 <flatcc_verify_union_vector_field@@Base+0x102d>
  422c83:	mov    rax,QWORD PTR [rbp-0x10]
  422c87:	cmp    rax,QWORD PTR [rbp-0x40]
  422c8b:	jne    422ca8 <flatcc_verify_union_vector_field@@Base+0x10ad>
  422c8d:	mov    rdx,QWORD PTR [rbp-0x48]
  422c91:	mov    rsi,QWORD PTR [rbp-0x40]
  422c95:	mov    rax,QWORD PTR [rbp-0x38]
  422c99:	mov    ecx,0x17
  422c9e:	mov    rdi,rax
  422ca1:	call   425bce <flatcc_json_parser_set_error@@Base>
  422ca6:	jmp    422cfd <flatcc_verify_union_vector_field@@Base+0x1102>
  422ca8:	mov    rdi,QWORD PTR [rbp-0x20]
  422cac:	mov    ecx,DWORD PTR [rbp-0x30]
  422caf:	lea    r8,[rbp-0x28]
  422cb3:	mov    rdx,QWORD PTR [rbp-0x48]
  422cb7:	mov    rsi,QWORD PTR [rbp-0x40]
  422cbb:	mov    rax,QWORD PTR [rbp-0x38]
  422cbf:	mov    r9,r8
  422cc2:	mov    r8,rdi
  422cc5:	mov    rdi,rax
  422cc8:	call   422422 <flatcc_verify_union_vector_field@@Base+0x827>
  422ccd:	cmp    rax,QWORD PTR [rbp-0x48]
  422cd1:	jne    422cd9 <flatcc_verify_union_vector_field@@Base+0x10de>
  422cd3:	mov    rax,QWORD PTR [rbp-0x48]
  422cd7:	jmp    422cfd <flatcc_verify_union_vector_field@@Base+0x1102>
  422cd9:	mov    rax,QWORD PTR [rbp-0x58]
  422cdd:	mov    rdx,QWORD PTR [rax]
  422ce0:	mov    rax,QWORD PTR [rbp-0x28]
  422ce4:	add    rdx,rax
  422ce7:	mov    rax,QWORD PTR [rbp-0x58]
  422ceb:	mov    QWORD PTR [rax],rdx
  422cee:	mov    eax,DWORD PTR [rbp-0x2c]
  422cf1:	test   eax,eax
  422cf3:	jne    422c20 <flatcc_verify_union_vector_field@@Base+0x1025>
  422cf9:	mov    rax,QWORD PTR [rbp-0x40]
  422cfd:	mov    rdi,QWORD PTR [rbp-0x8]
  422d01:	xor    rdi,QWORD PTR fs:0x28
  422d0a:	je     422d11 <flatcc_verify_union_vector_field@@Base+0x1116>
  422d0c:	call   405070 <__stack_chk_fail@plt>
  422d11:	leave  
  422d12:	ret    
  422d13:	push   rbp
  422d14:	mov    rbp,rsp
  422d17:	sub    rsp,0x60
  422d1b:	mov    QWORD PTR [rbp-0x38],rdi
  422d1f:	mov    QWORD PTR [rbp-0x40],rsi
  422d23:	mov    QWORD PTR [rbp-0x48],rdx
  422d27:	mov    QWORD PTR [rbp-0x50],rcx
  422d2b:	mov    QWORD PTR [rbp-0x58],r8
  422d2f:	mov    rax,QWORD PTR fs:0x28
  422d38:	mov    QWORD PTR [rbp-0x8],rax
  422d3c:	xor    eax,eax
  422d3e:	mov    DWORD PTR [rbp-0x2c],0x0
  422d45:	mov    rax,QWORD PTR [rbp-0x58]
  422d49:	mov    DWORD PTR [rax],0x0
  422d4f:	mov    rdx,QWORD PTR [rbp-0x48]
  422d53:	mov    rcx,QWORD PTR [rbp-0x40]
  422d57:	mov    rax,QWORD PTR [rbp-0x38]
  422d5b:	mov    rsi,rcx
  422d5e:	mov    rdi,rax
  422d61:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  422d66:	mov    QWORD PTR [rbp-0x40],rax
  422d6a:	mov    rax,QWORD PTR [rbp-0x40]
  422d6e:	cmp    rax,QWORD PTR [rbp-0x48]
  422d72:	jne    422d7d <flatcc_verify_union_vector_field@@Base+0x1182>
  422d74:	mov    rax,QWORD PTR [rbp-0x40]
  422d78:	jmp    422e56 <flatcc_verify_union_vector_field@@Base+0x125b>
  422d7d:	mov    rax,QWORD PTR [rbp-0x50]
  422d81:	mov    QWORD PTR [rbp-0x18],rax
  422d85:	mov    rax,QWORD PTR [rbp-0x18]
  422d89:	mov    rax,QWORD PTR [rax]
  422d8c:	mov    rdx,QWORD PTR [rbp-0x40]
  422d90:	mov    QWORD PTR [rbp-0x10],rdx
  422d94:	lea    r9,[rbp-0x24]
  422d98:	lea    r8,[rbp-0x20]
  422d9c:	lea    rcx,[rbp-0x28]
  422da0:	mov    rdx,QWORD PTR [rbp-0x48]
  422da4:	mov    rsi,QWORD PTR [rbp-0x10]
  422da8:	mov    rdi,QWORD PTR [rbp-0x38]
  422dac:	call   rax
  422dae:	mov    QWORD PTR [rbp-0x40],rax
  422db2:	mov    rax,QWORD PTR [rbp-0x40]
  422db6:	cmp    rax,QWORD PTR [rbp-0x48]
  422dba:	jne    422dc5 <flatcc_verify_union_vector_field@@Base+0x11ca>
  422dbc:	mov    rax,QWORD PTR [rbp-0x40]
  422dc0:	jmp    422e56 <flatcc_verify_union_vector_field@@Base+0x125b>
  422dc5:	mov    rax,QWORD PTR [rbp-0x40]
  422dc9:	cmp    rax,QWORD PTR [rbp-0x10]
  422dcd:	jne    422de0 <flatcc_verify_union_vector_field@@Base+0x11e5>
  422dcf:	add    QWORD PTR [rbp-0x18],0x8
  422dd4:	mov    rax,QWORD PTR [rbp-0x18]
  422dd8:	mov    rax,QWORD PTR [rax]
  422ddb:	test   rax,rax
  422dde:	jne    422d85 <flatcc_verify_union_vector_field@@Base+0x118a>
  422de0:	mov    rax,QWORD PTR [rbp-0x10]
  422de4:	cmp    rax,QWORD PTR [rbp-0x40]
  422de8:	jne    422e05 <flatcc_verify_union_vector_field@@Base+0x120a>
  422dea:	mov    rdx,QWORD PTR [rbp-0x48]
  422dee:	mov    rsi,QWORD PTR [rbp-0x40]
  422df2:	mov    rax,QWORD PTR [rbp-0x38]
  422df6:	mov    ecx,0x17
  422dfb:	mov    rdi,rax
  422dfe:	call   425bce <flatcc_json_parser_set_error@@Base>
  422e03:	jmp    422e56 <flatcc_verify_union_vector_field@@Base+0x125b>
  422e05:	mov    rdi,QWORD PTR [rbp-0x20]
  422e09:	mov    ecx,DWORD PTR [rbp-0x28]
  422e0c:	lea    r8,[rbp-0x2c]
  422e10:	mov    rdx,QWORD PTR [rbp-0x48]
  422e14:	mov    rsi,QWORD PTR [rbp-0x40]
  422e18:	mov    rax,QWORD PTR [rbp-0x38]
  422e1c:	mov    r9,r8
  422e1f:	mov    r8,rdi
  422e22:	mov    rdi,rax
  422e25:	call   4224c9 <flatcc_verify_union_vector_field@@Base+0x8ce>
  422e2a:	cmp    rax,QWORD PTR [rbp-0x48]
  422e2e:	jne    422e36 <flatcc_verify_union_vector_field@@Base+0x123b>
  422e30:	mov    rax,QWORD PTR [rbp-0x48]
  422e34:	jmp    422e56 <flatcc_verify_union_vector_field@@Base+0x125b>
  422e36:	mov    rax,QWORD PTR [rbp-0x58]
  422e3a:	mov    edx,DWORD PTR [rax]
  422e3c:	mov    eax,DWORD PTR [rbp-0x2c]
  422e3f:	add    edx,eax
  422e41:	mov    rax,QWORD PTR [rbp-0x58]
  422e45:	mov    DWORD PTR [rax],edx
  422e47:	mov    eax,DWORD PTR [rbp-0x24]
  422e4a:	test   eax,eax
  422e4c:	jne    422d7d <flatcc_verify_union_vector_field@@Base+0x1182>
  422e52:	mov    rax,QWORD PTR [rbp-0x40]
  422e56:	mov    rdi,QWORD PTR [rbp-0x8]
  422e5a:	xor    rdi,QWORD PTR fs:0x28
  422e63:	je     422e6a <flatcc_verify_union_vector_field@@Base+0x126f>
  422e65:	call   405070 <__stack_chk_fail@plt>
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	push   rbp
  422e6d:	mov    rbp,rsp
  422e70:	sub    rsp,0x60
  422e74:	mov    QWORD PTR [rbp-0x38],rdi
  422e78:	mov    QWORD PTR [rbp-0x40],rsi
  422e7c:	mov    QWORD PTR [rbp-0x48],rdx
  422e80:	mov    QWORD PTR [rbp-0x50],rcx
  422e84:	mov    QWORD PTR [rbp-0x58],r8
  422e88:	mov    rax,QWORD PTR fs:0x28
  422e91:	mov    QWORD PTR [rbp-0x8],rax
  422e95:	xor    eax,eax
  422e97:	mov    WORD PTR [rbp-0x2a],0x0
  422e9d:	mov    rax,QWORD PTR [rbp-0x58]
  422ea1:	mov    WORD PTR [rax],0x0
  422ea6:	mov    rdx,QWORD PTR [rbp-0x48]
  422eaa:	mov    rcx,QWORD PTR [rbp-0x40]
  422eae:	mov    rax,QWORD PTR [rbp-0x38]
  422eb2:	mov    rsi,rcx
  422eb5:	mov    rdi,rax
  422eb8:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  422ebd:	mov    QWORD PTR [rbp-0x40],rax
  422ec1:	mov    rax,QWORD PTR [rbp-0x40]
  422ec5:	cmp    rax,QWORD PTR [rbp-0x48]
  422ec9:	jne    422ed4 <flatcc_verify_union_vector_field@@Base+0x12d9>
  422ecb:	mov    rax,QWORD PTR [rbp-0x40]
  422ecf:	jmp    422fb0 <flatcc_verify_union_vector_field@@Base+0x13b5>
  422ed4:	mov    rax,QWORD PTR [rbp-0x50]
  422ed8:	mov    QWORD PTR [rbp-0x18],rax
  422edc:	mov    rax,QWORD PTR [rbp-0x18]
  422ee0:	mov    rax,QWORD PTR [rax]
  422ee3:	mov    rdx,QWORD PTR [rbp-0x40]
  422ee7:	mov    QWORD PTR [rbp-0x10],rdx
  422eeb:	lea    r9,[rbp-0x24]
  422eef:	lea    r8,[rbp-0x20]
  422ef3:	lea    rcx,[rbp-0x28]
  422ef7:	mov    rdx,QWORD PTR [rbp-0x48]
  422efb:	mov    rsi,QWORD PTR [rbp-0x10]
  422eff:	mov    rdi,QWORD PTR [rbp-0x38]
  422f03:	call   rax
  422f05:	mov    QWORD PTR [rbp-0x40],rax
  422f09:	mov    rax,QWORD PTR [rbp-0x40]
  422f0d:	cmp    rax,QWORD PTR [rbp-0x48]
  422f11:	jne    422f1c <flatcc_verify_union_vector_field@@Base+0x1321>
  422f13:	mov    rax,QWORD PTR [rbp-0x40]
  422f17:	jmp    422fb0 <flatcc_verify_union_vector_field@@Base+0x13b5>
  422f1c:	mov    rax,QWORD PTR [rbp-0x40]
  422f20:	cmp    rax,QWORD PTR [rbp-0x10]
  422f24:	jne    422f37 <flatcc_verify_union_vector_field@@Base+0x133c>
  422f26:	add    QWORD PTR [rbp-0x18],0x8
  422f2b:	mov    rax,QWORD PTR [rbp-0x18]
  422f2f:	mov    rax,QWORD PTR [rax]
  422f32:	test   rax,rax
  422f35:	jne    422edc <flatcc_verify_union_vector_field@@Base+0x12e1>
  422f37:	mov    rax,QWORD PTR [rbp-0x10]
  422f3b:	cmp    rax,QWORD PTR [rbp-0x40]
  422f3f:	jne    422f5c <flatcc_verify_union_vector_field@@Base+0x1361>
  422f41:	mov    rdx,QWORD PTR [rbp-0x48]
  422f45:	mov    rsi,QWORD PTR [rbp-0x40]
  422f49:	mov    rax,QWORD PTR [rbp-0x38]
  422f4d:	mov    ecx,0x17
  422f52:	mov    rdi,rax
  422f55:	call   425bce <flatcc_json_parser_set_error@@Base>
  422f5a:	jmp    422fb0 <flatcc_verify_union_vector_field@@Base+0x13b5>
  422f5c:	mov    rdi,QWORD PTR [rbp-0x20]
  422f60:	mov    ecx,DWORD PTR [rbp-0x28]
  422f63:	lea    r8,[rbp-0x2a]
  422f67:	mov    rdx,QWORD PTR [rbp-0x48]
  422f6b:	mov    rsi,QWORD PTR [rbp-0x40]
  422f6f:	mov    rax,QWORD PTR [rbp-0x38]
  422f73:	mov    r9,r8
  422f76:	mov    r8,rdi
  422f79:	mov    rdi,rax
  422f7c:	call   422541 <flatcc_verify_union_vector_field@@Base+0x946>
  422f81:	cmp    rax,QWORD PTR [rbp-0x48]
  422f85:	jne    422f8d <flatcc_verify_union_vector_field@@Base+0x1392>
  422f87:	mov    rax,QWORD PTR [rbp-0x48]
  422f8b:	jmp    422fb0 <flatcc_verify_union_vector_field@@Base+0x13b5>
  422f8d:	mov    rax,QWORD PTR [rbp-0x58]
  422f91:	movzx  edx,WORD PTR [rax]
  422f94:	movzx  eax,WORD PTR [rbp-0x2a]
  422f98:	add    edx,eax
  422f9a:	mov    rax,QWORD PTR [rbp-0x58]
  422f9e:	mov    WORD PTR [rax],dx
  422fa1:	mov    eax,DWORD PTR [rbp-0x24]
  422fa4:	test   eax,eax
  422fa6:	jne    422ed4 <flatcc_verify_union_vector_field@@Base+0x12d9>
  422fac:	mov    rax,QWORD PTR [rbp-0x40]
  422fb0:	mov    rdi,QWORD PTR [rbp-0x8]
  422fb4:	xor    rdi,QWORD PTR fs:0x28
  422fbd:	je     422fc4 <flatcc_verify_union_vector_field@@Base+0x13c9>
  422fbf:	call   405070 <__stack_chk_fail@plt>
  422fc4:	leave  
  422fc5:	ret    
  422fc6:	push   rbp
  422fc7:	mov    rbp,rsp
  422fca:	sub    rsp,0x60
  422fce:	mov    QWORD PTR [rbp-0x38],rdi
  422fd2:	mov    QWORD PTR [rbp-0x40],rsi
  422fd6:	mov    QWORD PTR [rbp-0x48],rdx
  422fda:	mov    QWORD PTR [rbp-0x50],rcx
  422fde:	mov    QWORD PTR [rbp-0x58],r8
  422fe2:	mov    rax,QWORD PTR fs:0x28
  422feb:	mov    QWORD PTR [rbp-0x8],rax
  422fef:	xor    eax,eax
  422ff1:	mov    BYTE PTR [rbp-0x29],0x0
  422ff5:	mov    rax,QWORD PTR [rbp-0x58]
  422ff9:	mov    BYTE PTR [rax],0x0
  422ffc:	mov    rdx,QWORD PTR [rbp-0x48]
  423000:	mov    rcx,QWORD PTR [rbp-0x40]
  423004:	mov    rax,QWORD PTR [rbp-0x38]
  423008:	mov    rsi,rcx
  42300b:	mov    rdi,rax
  42300e:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  423013:	mov    QWORD PTR [rbp-0x40],rax
  423017:	mov    rax,QWORD PTR [rbp-0x40]
  42301b:	cmp    rax,QWORD PTR [rbp-0x48]
  42301f:	jne    42302a <flatcc_verify_union_vector_field@@Base+0x142f>
  423021:	mov    rax,QWORD PTR [rbp-0x40]
  423025:	jmp    423105 <flatcc_verify_union_vector_field@@Base+0x150a>
  42302a:	mov    rax,QWORD PTR [rbp-0x50]
  42302e:	mov    QWORD PTR [rbp-0x18],rax
  423032:	mov    rax,QWORD PTR [rbp-0x18]
  423036:	mov    rax,QWORD PTR [rax]
  423039:	mov    rdx,QWORD PTR [rbp-0x40]
  42303d:	mov    QWORD PTR [rbp-0x10],rdx
  423041:	lea    r9,[rbp-0x24]
  423045:	lea    r8,[rbp-0x20]
  423049:	lea    rcx,[rbp-0x28]
  42304d:	mov    rdx,QWORD PTR [rbp-0x48]
  423051:	mov    rsi,QWORD PTR [rbp-0x10]
  423055:	mov    rdi,QWORD PTR [rbp-0x38]
  423059:	call   rax
  42305b:	mov    QWORD PTR [rbp-0x40],rax
  42305f:	mov    rax,QWORD PTR [rbp-0x40]
  423063:	cmp    rax,QWORD PTR [rbp-0x48]
  423067:	jne    423072 <flatcc_verify_union_vector_field@@Base+0x1477>
  423069:	mov    rax,QWORD PTR [rbp-0x40]
  42306d:	jmp    423105 <flatcc_verify_union_vector_field@@Base+0x150a>
  423072:	mov    rax,QWORD PTR [rbp-0x40]
  423076:	cmp    rax,QWORD PTR [rbp-0x10]
  42307a:	jne    42308d <flatcc_verify_union_vector_field@@Base+0x1492>
  42307c:	add    QWORD PTR [rbp-0x18],0x8
  423081:	mov    rax,QWORD PTR [rbp-0x18]
  423085:	mov    rax,QWORD PTR [rax]
  423088:	test   rax,rax
  42308b:	jne    423032 <flatcc_verify_union_vector_field@@Base+0x1437>
  42308d:	mov    rax,QWORD PTR [rbp-0x10]
  423091:	cmp    rax,QWORD PTR [rbp-0x40]
  423095:	jne    4230b2 <flatcc_verify_union_vector_field@@Base+0x14b7>
  423097:	mov    rdx,QWORD PTR [rbp-0x48]
  42309b:	mov    rsi,QWORD PTR [rbp-0x40]
  42309f:	mov    rax,QWORD PTR [rbp-0x38]
  4230a3:	mov    ecx,0x17
  4230a8:	mov    rdi,rax
  4230ab:	call   425bce <flatcc_json_parser_set_error@@Base>
  4230b0:	jmp    423105 <flatcc_verify_union_vector_field@@Base+0x150a>
  4230b2:	mov    rdi,QWORD PTR [rbp-0x20]
  4230b6:	mov    ecx,DWORD PTR [rbp-0x28]
  4230b9:	lea    r8,[rbp-0x29]
  4230bd:	mov    rdx,QWORD PTR [rbp-0x48]
  4230c1:	mov    rsi,QWORD PTR [rbp-0x40]
  4230c5:	mov    rax,QWORD PTR [rbp-0x38]
  4230c9:	mov    r9,r8
  4230cc:	mov    r8,rdi
  4230cf:	mov    rdi,rax
  4230d2:	call   4225b9 <flatcc_verify_union_vector_field@@Base+0x9be>
  4230d7:	cmp    rax,QWORD PTR [rbp-0x48]
  4230db:	jne    4230e3 <flatcc_verify_union_vector_field@@Base+0x14e8>
  4230dd:	mov    rax,QWORD PTR [rbp-0x48]
  4230e1:	jmp    423105 <flatcc_verify_union_vector_field@@Base+0x150a>
  4230e3:	mov    rax,QWORD PTR [rbp-0x58]
  4230e7:	movzx  edx,BYTE PTR [rax]
  4230ea:	movzx  eax,BYTE PTR [rbp-0x29]
  4230ee:	add    edx,eax
  4230f0:	mov    rax,QWORD PTR [rbp-0x58]
  4230f4:	mov    BYTE PTR [rax],dl
  4230f6:	mov    eax,DWORD PTR [rbp-0x24]
  4230f9:	test   eax,eax
  4230fb:	jne    42302a <flatcc_verify_union_vector_field@@Base+0x142f>
  423101:	mov    rax,QWORD PTR [rbp-0x40]
  423105:	mov    rdi,QWORD PTR [rbp-0x8]
  423109:	xor    rdi,QWORD PTR fs:0x28
  423112:	je     423119 <flatcc_verify_union_vector_field@@Base+0x151e>
  423114:	call   405070 <__stack_chk_fail@plt>
  423119:	leave  
  42311a:	ret    
  42311b:	push   rbp
  42311c:	mov    rbp,rsp
  42311f:	sub    rsp,0x60
  423123:	mov    QWORD PTR [rbp-0x38],rdi
  423127:	mov    QWORD PTR [rbp-0x40],rsi
  42312b:	mov    QWORD PTR [rbp-0x48],rdx
  42312f:	mov    QWORD PTR [rbp-0x50],rcx
  423133:	mov    QWORD PTR [rbp-0x58],r8
  423137:	mov    rax,QWORD PTR fs:0x28
  423140:	mov    QWORD PTR [rbp-0x8],rax
  423144:	xor    eax,eax
  423146:	mov    QWORD PTR [rbp-0x28],0x0
  42314e:	mov    rax,QWORD PTR [rbp-0x58]
  423152:	mov    QWORD PTR [rax],0x0
  423159:	mov    rdx,QWORD PTR [rbp-0x48]
  42315d:	mov    rcx,QWORD PTR [rbp-0x40]
  423161:	mov    rax,QWORD PTR [rbp-0x38]
  423165:	mov    rsi,rcx
  423168:	mov    rdi,rax
  42316b:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  423170:	mov    QWORD PTR [rbp-0x40],rax
  423174:	mov    rax,QWORD PTR [rbp-0x40]
  423178:	cmp    rax,QWORD PTR [rbp-0x48]
  42317c:	jne    423187 <flatcc_verify_union_vector_field@@Base+0x158c>
  42317e:	mov    rax,QWORD PTR [rbp-0x40]
  423182:	jmp    423264 <flatcc_verify_union_vector_field@@Base+0x1669>
  423187:	mov    rax,QWORD PTR [rbp-0x50]
  42318b:	mov    QWORD PTR [rbp-0x18],rax
  42318f:	mov    rax,QWORD PTR [rbp-0x18]
  423193:	mov    rax,QWORD PTR [rax]
  423196:	mov    rdx,QWORD PTR [rbp-0x40]
  42319a:	mov    QWORD PTR [rbp-0x10],rdx
  42319e:	lea    r9,[rbp-0x2c]
  4231a2:	lea    r8,[rbp-0x20]
  4231a6:	lea    rcx,[rbp-0x30]
  4231aa:	mov    rdx,QWORD PTR [rbp-0x48]
  4231ae:	mov    rsi,QWORD PTR [rbp-0x10]
  4231b2:	mov    rdi,QWORD PTR [rbp-0x38]
  4231b6:	call   rax
  4231b8:	mov    QWORD PTR [rbp-0x40],rax
  4231bc:	mov    rax,QWORD PTR [rbp-0x40]
  4231c0:	cmp    rax,QWORD PTR [rbp-0x48]
  4231c4:	jne    4231cf <flatcc_verify_union_vector_field@@Base+0x15d4>
  4231c6:	mov    rax,QWORD PTR [rbp-0x40]
  4231ca:	jmp    423264 <flatcc_verify_union_vector_field@@Base+0x1669>
  4231cf:	mov    rax,QWORD PTR [rbp-0x40]
  4231d3:	cmp    rax,QWORD PTR [rbp-0x10]
  4231d7:	jne    4231ea <flatcc_verify_union_vector_field@@Base+0x15ef>
  4231d9:	add    QWORD PTR [rbp-0x18],0x8
  4231de:	mov    rax,QWORD PTR [rbp-0x18]
  4231e2:	mov    rax,QWORD PTR [rax]
  4231e5:	test   rax,rax
  4231e8:	jne    42318f <flatcc_verify_union_vector_field@@Base+0x1594>
  4231ea:	mov    rax,QWORD PTR [rbp-0x10]
  4231ee:	cmp    rax,QWORD PTR [rbp-0x40]
  4231f2:	jne    42320f <flatcc_verify_union_vector_field@@Base+0x1614>
  4231f4:	mov    rdx,QWORD PTR [rbp-0x48]
  4231f8:	mov    rsi,QWORD PTR [rbp-0x40]
  4231fc:	mov    rax,QWORD PTR [rbp-0x38]
  423200:	mov    ecx,0x17
  423205:	mov    rdi,rax
  423208:	call   425bce <flatcc_json_parser_set_error@@Base>
  42320d:	jmp    423264 <flatcc_verify_union_vector_field@@Base+0x1669>
  42320f:	mov    rdi,QWORD PTR [rbp-0x20]
  423213:	mov    ecx,DWORD PTR [rbp-0x30]
  423216:	lea    r8,[rbp-0x28]
  42321a:	mov    rdx,QWORD PTR [rbp-0x48]
  42321e:	mov    rsi,QWORD PTR [rbp-0x40]
  423222:	mov    rax,QWORD PTR [rbp-0x38]
  423226:	mov    r9,r8
  423229:	mov    r8,rdi
  42322c:	mov    rdi,rax
  42322f:	call   422630 <flatcc_verify_union_vector_field@@Base+0xa35>
  423234:	cmp    rax,QWORD PTR [rbp-0x48]
  423238:	jne    423240 <flatcc_verify_union_vector_field@@Base+0x1645>
  42323a:	mov    rax,QWORD PTR [rbp-0x48]
  42323e:	jmp    423264 <flatcc_verify_union_vector_field@@Base+0x1669>
  423240:	mov    rax,QWORD PTR [rbp-0x58]
  423244:	mov    rdx,QWORD PTR [rax]
  423247:	mov    rax,QWORD PTR [rbp-0x28]
  42324b:	add    rdx,rax
  42324e:	mov    rax,QWORD PTR [rbp-0x58]
  423252:	mov    QWORD PTR [rax],rdx
  423255:	mov    eax,DWORD PTR [rbp-0x2c]
  423258:	test   eax,eax
  42325a:	jne    423187 <flatcc_verify_union_vector_field@@Base+0x158c>
  423260:	mov    rax,QWORD PTR [rbp-0x40]
  423264:	mov    rdi,QWORD PTR [rbp-0x8]
  423268:	xor    rdi,QWORD PTR fs:0x28
  423271:	je     423278 <flatcc_verify_union_vector_field@@Base+0x167d>
  423273:	call   405070 <__stack_chk_fail@plt>
  423278:	leave  
  423279:	ret    
  42327a:	push   rbp
  42327b:	mov    rbp,rsp
  42327e:	sub    rsp,0x60
  423282:	mov    QWORD PTR [rbp-0x38],rdi
  423286:	mov    QWORD PTR [rbp-0x40],rsi
  42328a:	mov    QWORD PTR [rbp-0x48],rdx
  42328e:	mov    QWORD PTR [rbp-0x50],rcx
  423292:	mov    QWORD PTR [rbp-0x58],r8
  423296:	mov    rax,QWORD PTR fs:0x28
  42329f:	mov    QWORD PTR [rbp-0x8],rax
  4232a3:	xor    eax,eax
  4232a5:	mov    DWORD PTR [rbp-0x2c],0x0
  4232ac:	mov    rax,QWORD PTR [rbp-0x58]
  4232b0:	mov    DWORD PTR [rax],0x0
  4232b6:	mov    rdx,QWORD PTR [rbp-0x48]
  4232ba:	mov    rcx,QWORD PTR [rbp-0x40]
  4232be:	mov    rax,QWORD PTR [rbp-0x38]
  4232c2:	mov    rsi,rcx
  4232c5:	mov    rdi,rax
  4232c8:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  4232cd:	mov    QWORD PTR [rbp-0x40],rax
  4232d1:	mov    rax,QWORD PTR [rbp-0x40]
  4232d5:	cmp    rax,QWORD PTR [rbp-0x48]
  4232d9:	jne    4232e4 <flatcc_verify_union_vector_field@@Base+0x16e9>
  4232db:	mov    rax,QWORD PTR [rbp-0x40]
  4232df:	jmp    4233bd <flatcc_verify_union_vector_field@@Base+0x17c2>
  4232e4:	mov    rax,QWORD PTR [rbp-0x50]
  4232e8:	mov    QWORD PTR [rbp-0x18],rax
  4232ec:	mov    rax,QWORD PTR [rbp-0x18]
  4232f0:	mov    rax,QWORD PTR [rax]
  4232f3:	mov    rdx,QWORD PTR [rbp-0x40]
  4232f7:	mov    QWORD PTR [rbp-0x10],rdx
  4232fb:	lea    r9,[rbp-0x24]
  4232ff:	lea    r8,[rbp-0x20]
  423303:	lea    rcx,[rbp-0x28]
  423307:	mov    rdx,QWORD PTR [rbp-0x48]
  42330b:	mov    rsi,QWORD PTR [rbp-0x10]
  42330f:	mov    rdi,QWORD PTR [rbp-0x38]
  423313:	call   rax
  423315:	mov    QWORD PTR [rbp-0x40],rax
  423319:	mov    rax,QWORD PTR [rbp-0x40]
  42331d:	cmp    rax,QWORD PTR [rbp-0x48]
  423321:	jne    42332c <flatcc_verify_union_vector_field@@Base+0x1731>
  423323:	mov    rax,QWORD PTR [rbp-0x40]
  423327:	jmp    4233bd <flatcc_verify_union_vector_field@@Base+0x17c2>
  42332c:	mov    rax,QWORD PTR [rbp-0x40]
  423330:	cmp    rax,QWORD PTR [rbp-0x10]
  423334:	jne    423347 <flatcc_verify_union_vector_field@@Base+0x174c>
  423336:	add    QWORD PTR [rbp-0x18],0x8
  42333b:	mov    rax,QWORD PTR [rbp-0x18]
  42333f:	mov    rax,QWORD PTR [rax]
  423342:	test   rax,rax
  423345:	jne    4232ec <flatcc_verify_union_vector_field@@Base+0x16f1>
  423347:	mov    rax,QWORD PTR [rbp-0x10]
  42334b:	cmp    rax,QWORD PTR [rbp-0x40]
  42334f:	jne    42336c <flatcc_verify_union_vector_field@@Base+0x1771>
  423351:	mov    rdx,QWORD PTR [rbp-0x48]
  423355:	mov    rsi,QWORD PTR [rbp-0x40]
  423359:	mov    rax,QWORD PTR [rbp-0x38]
  42335d:	mov    ecx,0x17
  423362:	mov    rdi,rax
  423365:	call   425bce <flatcc_json_parser_set_error@@Base>
  42336a:	jmp    4233bd <flatcc_verify_union_vector_field@@Base+0x17c2>
  42336c:	mov    rdi,QWORD PTR [rbp-0x20]
  423370:	mov    ecx,DWORD PTR [rbp-0x28]
  423373:	lea    r8,[rbp-0x2c]
  423377:	mov    rdx,QWORD PTR [rbp-0x48]
  42337b:	mov    rsi,QWORD PTR [rbp-0x40]
  42337f:	mov    rax,QWORD PTR [rbp-0x38]
  423383:	mov    r9,r8
  423386:	mov    r8,rdi
  423389:	mov    rdi,rax
  42338c:	call   4226c8 <flatcc_verify_union_vector_field@@Base+0xacd>
  423391:	cmp    rax,QWORD PTR [rbp-0x48]
  423395:	jne    42339d <flatcc_verify_union_vector_field@@Base+0x17a2>
  423397:	mov    rax,QWORD PTR [rbp-0x48]
  42339b:	jmp    4233bd <flatcc_verify_union_vector_field@@Base+0x17c2>
  42339d:	mov    rax,QWORD PTR [rbp-0x58]
  4233a1:	mov    edx,DWORD PTR [rax]
  4233a3:	mov    eax,DWORD PTR [rbp-0x2c]
  4233a6:	add    edx,eax
  4233a8:	mov    rax,QWORD PTR [rbp-0x58]
  4233ac:	mov    DWORD PTR [rax],edx
  4233ae:	mov    eax,DWORD PTR [rbp-0x24]
  4233b1:	test   eax,eax
  4233b3:	jne    4232e4 <flatcc_verify_union_vector_field@@Base+0x16e9>
  4233b9:	mov    rax,QWORD PTR [rbp-0x40]
  4233bd:	mov    rdi,QWORD PTR [rbp-0x8]
  4233c1:	xor    rdi,QWORD PTR fs:0x28
  4233ca:	je     4233d1 <flatcc_verify_union_vector_field@@Base+0x17d6>
  4233cc:	call   405070 <__stack_chk_fail@plt>
  4233d1:	leave  
  4233d2:	ret    
  4233d3:	push   rbp
  4233d4:	mov    rbp,rsp
  4233d7:	sub    rsp,0x60
  4233db:	mov    QWORD PTR [rbp-0x38],rdi
  4233df:	mov    QWORD PTR [rbp-0x40],rsi
  4233e3:	mov    QWORD PTR [rbp-0x48],rdx
  4233e7:	mov    QWORD PTR [rbp-0x50],rcx
  4233eb:	mov    QWORD PTR [rbp-0x58],r8
  4233ef:	mov    rax,QWORD PTR fs:0x28
  4233f8:	mov    QWORD PTR [rbp-0x8],rax
  4233fc:	xor    eax,eax
  4233fe:	mov    WORD PTR [rbp-0x2a],0x0
  423404:	mov    rax,QWORD PTR [rbp-0x58]
  423408:	mov    WORD PTR [rax],0x0
  42340d:	mov    rdx,QWORD PTR [rbp-0x48]
  423411:	mov    rcx,QWORD PTR [rbp-0x40]
  423415:	mov    rax,QWORD PTR [rbp-0x38]
  423419:	mov    rsi,rcx
  42341c:	mov    rdi,rax
  42341f:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  423424:	mov    QWORD PTR [rbp-0x40],rax
  423428:	mov    rax,QWORD PTR [rbp-0x40]
  42342c:	cmp    rax,QWORD PTR [rbp-0x48]
  423430:	jne    42343b <flatcc_verify_union_vector_field@@Base+0x1840>
  423432:	mov    rax,QWORD PTR [rbp-0x40]
  423436:	jmp    42351b <flatcc_verify_union_vector_field@@Base+0x1920>
  42343b:	mov    rax,QWORD PTR [rbp-0x50]
  42343f:	mov    QWORD PTR [rbp-0x18],rax
  423443:	mov    rax,QWORD PTR [rbp-0x18]
  423447:	mov    rax,QWORD PTR [rax]
  42344a:	mov    rdx,QWORD PTR [rbp-0x40]
  42344e:	mov    QWORD PTR [rbp-0x10],rdx
  423452:	lea    r9,[rbp-0x24]
  423456:	lea    r8,[rbp-0x20]
  42345a:	lea    rcx,[rbp-0x28]
  42345e:	mov    rdx,QWORD PTR [rbp-0x48]
  423462:	mov    rsi,QWORD PTR [rbp-0x10]
  423466:	mov    rdi,QWORD PTR [rbp-0x38]
  42346a:	call   rax
  42346c:	mov    QWORD PTR [rbp-0x40],rax
  423470:	mov    rax,QWORD PTR [rbp-0x40]
  423474:	cmp    rax,QWORD PTR [rbp-0x48]
  423478:	jne    423483 <flatcc_verify_union_vector_field@@Base+0x1888>
  42347a:	mov    rax,QWORD PTR [rbp-0x40]
  42347e:	jmp    42351b <flatcc_verify_union_vector_field@@Base+0x1920>
  423483:	mov    rax,QWORD PTR [rbp-0x40]
  423487:	cmp    rax,QWORD PTR [rbp-0x10]
  42348b:	jne    42349e <flatcc_verify_union_vector_field@@Base+0x18a3>
  42348d:	add    QWORD PTR [rbp-0x18],0x8
  423492:	mov    rax,QWORD PTR [rbp-0x18]
  423496:	mov    rax,QWORD PTR [rax]
  423499:	test   rax,rax
  42349c:	jne    423443 <flatcc_verify_union_vector_field@@Base+0x1848>
  42349e:	mov    rax,QWORD PTR [rbp-0x10]
  4234a2:	cmp    rax,QWORD PTR [rbp-0x40]
  4234a6:	jne    4234c3 <flatcc_verify_union_vector_field@@Base+0x18c8>
  4234a8:	mov    rdx,QWORD PTR [rbp-0x48]
  4234ac:	mov    rsi,QWORD PTR [rbp-0x40]
  4234b0:	mov    rax,QWORD PTR [rbp-0x38]
  4234b4:	mov    ecx,0x17
  4234b9:	mov    rdi,rax
  4234bc:	call   425bce <flatcc_json_parser_set_error@@Base>
  4234c1:	jmp    42351b <flatcc_verify_union_vector_field@@Base+0x1920>
  4234c3:	mov    rdi,QWORD PTR [rbp-0x20]
  4234c7:	mov    ecx,DWORD PTR [rbp-0x28]
  4234ca:	lea    r8,[rbp-0x2a]
  4234ce:	mov    rdx,QWORD PTR [rbp-0x48]
  4234d2:	mov    rsi,QWORD PTR [rbp-0x40]
  4234d6:	mov    rax,QWORD PTR [rbp-0x38]
  4234da:	mov    r9,r8
  4234dd:	mov    r8,rdi
  4234e0:	mov    rdi,rax
  4234e3:	call   42275a <flatcc_verify_union_vector_field@@Base+0xb5f>
  4234e8:	cmp    rax,QWORD PTR [rbp-0x48]
  4234ec:	jne    4234f4 <flatcc_verify_union_vector_field@@Base+0x18f9>
  4234ee:	mov    rax,QWORD PTR [rbp-0x48]
  4234f2:	jmp    42351b <flatcc_verify_union_vector_field@@Base+0x1920>
  4234f4:	mov    rax,QWORD PTR [rbp-0x58]
  4234f8:	movzx  eax,WORD PTR [rax]
  4234fb:	mov    edx,eax
  4234fd:	movzx  eax,WORD PTR [rbp-0x2a]
  423501:	add    eax,edx
  423503:	mov    edx,eax
  423505:	mov    rax,QWORD PTR [rbp-0x58]
  423509:	mov    WORD PTR [rax],dx
  42350c:	mov    eax,DWORD PTR [rbp-0x24]
  42350f:	test   eax,eax
  423511:	jne    42343b <flatcc_verify_union_vector_field@@Base+0x1840>
  423517:	mov    rax,QWORD PTR [rbp-0x40]
  42351b:	mov    rdi,QWORD PTR [rbp-0x8]
  42351f:	xor    rdi,QWORD PTR fs:0x28
  423528:	je     42352f <flatcc_verify_union_vector_field@@Base+0x1934>
  42352a:	call   405070 <__stack_chk_fail@plt>
  42352f:	leave  
  423530:	ret    
  423531:	push   rbp
  423532:	mov    rbp,rsp
  423535:	sub    rsp,0x60
  423539:	mov    QWORD PTR [rbp-0x38],rdi
  42353d:	mov    QWORD PTR [rbp-0x40],rsi
  423541:	mov    QWORD PTR [rbp-0x48],rdx
  423545:	mov    QWORD PTR [rbp-0x50],rcx
  423549:	mov    QWORD PTR [rbp-0x58],r8
  42354d:	mov    rax,QWORD PTR fs:0x28
  423556:	mov    QWORD PTR [rbp-0x8],rax
  42355a:	xor    eax,eax
  42355c:	mov    BYTE PTR [rbp-0x29],0x0
  423560:	mov    rax,QWORD PTR [rbp-0x58]
  423564:	mov    BYTE PTR [rax],0x0
  423567:	mov    rdx,QWORD PTR [rbp-0x48]
  42356b:	mov    rcx,QWORD PTR [rbp-0x40]
  42356f:	mov    rax,QWORD PTR [rbp-0x38]
  423573:	mov    rsi,rcx
  423576:	mov    rdi,rax
  423579:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  42357e:	mov    QWORD PTR [rbp-0x40],rax
  423582:	mov    rax,QWORD PTR [rbp-0x40]
  423586:	cmp    rax,QWORD PTR [rbp-0x48]
  42358a:	jne    423595 <flatcc_verify_union_vector_field@@Base+0x199a>
  42358c:	mov    rax,QWORD PTR [rbp-0x40]
  423590:	jmp    423674 <flatcc_verify_union_vector_field@@Base+0x1a79>
  423595:	mov    rax,QWORD PTR [rbp-0x50]
  423599:	mov    QWORD PTR [rbp-0x18],rax
  42359d:	mov    rax,QWORD PTR [rbp-0x18]
  4235a1:	mov    rax,QWORD PTR [rax]
  4235a4:	mov    rdx,QWORD PTR [rbp-0x40]
  4235a8:	mov    QWORD PTR [rbp-0x10],rdx
  4235ac:	lea    r9,[rbp-0x24]
  4235b0:	lea    r8,[rbp-0x20]
  4235b4:	lea    rcx,[rbp-0x28]
  4235b8:	mov    rdx,QWORD PTR [rbp-0x48]
  4235bc:	mov    rsi,QWORD PTR [rbp-0x10]
  4235c0:	mov    rdi,QWORD PTR [rbp-0x38]
  4235c4:	call   rax
  4235c6:	mov    QWORD PTR [rbp-0x40],rax
  4235ca:	mov    rax,QWORD PTR [rbp-0x40]
  4235ce:	cmp    rax,QWORD PTR [rbp-0x48]
  4235d2:	jne    4235dd <flatcc_verify_union_vector_field@@Base+0x19e2>
  4235d4:	mov    rax,QWORD PTR [rbp-0x40]
  4235d8:	jmp    423674 <flatcc_verify_union_vector_field@@Base+0x1a79>
  4235dd:	mov    rax,QWORD PTR [rbp-0x40]
  4235e1:	cmp    rax,QWORD PTR [rbp-0x10]
  4235e5:	jne    4235f8 <flatcc_verify_union_vector_field@@Base+0x19fd>
  4235e7:	add    QWORD PTR [rbp-0x18],0x8
  4235ec:	mov    rax,QWORD PTR [rbp-0x18]
  4235f0:	mov    rax,QWORD PTR [rax]
  4235f3:	test   rax,rax
  4235f6:	jne    42359d <flatcc_verify_union_vector_field@@Base+0x19a2>
  4235f8:	mov    rax,QWORD PTR [rbp-0x10]
  4235fc:	cmp    rax,QWORD PTR [rbp-0x40]
  423600:	jne    42361d <flatcc_verify_union_vector_field@@Base+0x1a22>
  423602:	mov    rdx,QWORD PTR [rbp-0x48]
  423606:	mov    rsi,QWORD PTR [rbp-0x40]
  42360a:	mov    rax,QWORD PTR [rbp-0x38]
  42360e:	mov    ecx,0x17
  423613:	mov    rdi,rax
  423616:	call   425bce <flatcc_json_parser_set_error@@Base>
  42361b:	jmp    423674 <flatcc_verify_union_vector_field@@Base+0x1a79>
  42361d:	mov    rdi,QWORD PTR [rbp-0x20]
  423621:	mov    ecx,DWORD PTR [rbp-0x28]
  423624:	lea    r8,[rbp-0x29]
  423628:	mov    rdx,QWORD PTR [rbp-0x48]
  42362c:	mov    rsi,QWORD PTR [rbp-0x40]
  423630:	mov    rax,QWORD PTR [rbp-0x38]
  423634:	mov    r9,r8
  423637:	mov    r8,rdi
  42363a:	mov    rdi,rax
  42363d:	call   4227ed <flatcc_verify_union_vector_field@@Base+0xbf2>
  423642:	cmp    rax,QWORD PTR [rbp-0x48]
  423646:	jne    42364e <flatcc_verify_union_vector_field@@Base+0x1a53>
  423648:	mov    rax,QWORD PTR [rbp-0x48]
  42364c:	jmp    423674 <flatcc_verify_union_vector_field@@Base+0x1a79>
  42364e:	mov    rax,QWORD PTR [rbp-0x58]
  423652:	movzx  eax,BYTE PTR [rax]
  423655:	mov    edx,eax
  423657:	movzx  eax,BYTE PTR [rbp-0x29]
  42365b:	add    eax,edx
  42365d:	mov    edx,eax
  42365f:	mov    rax,QWORD PTR [rbp-0x58]
  423663:	mov    BYTE PTR [rax],dl
  423665:	mov    eax,DWORD PTR [rbp-0x24]
  423668:	test   eax,eax
  42366a:	jne    423595 <flatcc_verify_union_vector_field@@Base+0x199a>
  423670:	mov    rax,QWORD PTR [rbp-0x40]
  423674:	mov    rdi,QWORD PTR [rbp-0x8]
  423678:	xor    rdi,QWORD PTR fs:0x28
  423681:	je     423688 <flatcc_verify_union_vector_field@@Base+0x1a8d>
  423683:	call   405070 <__stack_chk_fail@plt>
  423688:	leave  
  423689:	ret    
  42368a:	push   rbp
  42368b:	mov    rbp,rsp
  42368e:	sub    rsp,0x60
  423692:	mov    QWORD PTR [rbp-0x38],rdi
  423696:	mov    QWORD PTR [rbp-0x40],rsi
  42369a:	mov    QWORD PTR [rbp-0x48],rdx
  42369e:	mov    QWORD PTR [rbp-0x50],rcx
  4236a2:	mov    QWORD PTR [rbp-0x58],r8
  4236a6:	mov    rax,QWORD PTR fs:0x28
  4236af:	mov    QWORD PTR [rbp-0x8],rax
  4236b3:	xor    eax,eax
  4236b5:	mov    BYTE PTR [rbp-0x29],0x0
  4236b9:	mov    rax,QWORD PTR [rbp-0x58]
  4236bd:	mov    BYTE PTR [rax],0x0
  4236c0:	mov    rdx,QWORD PTR [rbp-0x48]
  4236c4:	mov    rcx,QWORD PTR [rbp-0x40]
  4236c8:	mov    rax,QWORD PTR [rbp-0x38]
  4236cc:	mov    rsi,rcx
  4236cf:	mov    rdi,rax
  4236d2:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  4236d7:	mov    QWORD PTR [rbp-0x40],rax
  4236db:	mov    rax,QWORD PTR [rbp-0x40]
  4236df:	cmp    rax,QWORD PTR [rbp-0x48]
  4236e3:	jne    4236ee <flatcc_verify_union_vector_field@@Base+0x1af3>
  4236e5:	mov    rax,QWORD PTR [rbp-0x40]
  4236e9:	jmp    4237c9 <flatcc_verify_union_vector_field@@Base+0x1bce>
  4236ee:	mov    rax,QWORD PTR [rbp-0x50]
  4236f2:	mov    QWORD PTR [rbp-0x18],rax
  4236f6:	mov    rax,QWORD PTR [rbp-0x18]
  4236fa:	mov    rax,QWORD PTR [rax]
  4236fd:	mov    rdx,QWORD PTR [rbp-0x40]
  423701:	mov    QWORD PTR [rbp-0x10],rdx
  423705:	lea    r9,[rbp-0x24]
  423709:	lea    r8,[rbp-0x20]
  42370d:	lea    rcx,[rbp-0x28]
  423711:	mov    rdx,QWORD PTR [rbp-0x48]
  423715:	mov    rsi,QWORD PTR [rbp-0x10]
  423719:	mov    rdi,QWORD PTR [rbp-0x38]
  42371d:	call   rax
  42371f:	mov    QWORD PTR [rbp-0x40],rax
  423723:	mov    rax,QWORD PTR [rbp-0x40]
  423727:	cmp    rax,QWORD PTR [rbp-0x48]
  42372b:	jne    423736 <flatcc_verify_union_vector_field@@Base+0x1b3b>
  42372d:	mov    rax,QWORD PTR [rbp-0x40]
  423731:	jmp    4237c9 <flatcc_verify_union_vector_field@@Base+0x1bce>
  423736:	mov    rax,QWORD PTR [rbp-0x40]
  42373a:	cmp    rax,QWORD PTR [rbp-0x10]
  42373e:	jne    423751 <flatcc_verify_union_vector_field@@Base+0x1b56>
  423740:	add    QWORD PTR [rbp-0x18],0x8
  423745:	mov    rax,QWORD PTR [rbp-0x18]
  423749:	mov    rax,QWORD PTR [rax]
  42374c:	test   rax,rax
  42374f:	jne    4236f6 <flatcc_verify_union_vector_field@@Base+0x1afb>
  423751:	mov    rax,QWORD PTR [rbp-0x10]
  423755:	cmp    rax,QWORD PTR [rbp-0x40]
  423759:	jne    423776 <flatcc_verify_union_vector_field@@Base+0x1b7b>
  42375b:	mov    rdx,QWORD PTR [rbp-0x48]
  42375f:	mov    rsi,QWORD PTR [rbp-0x40]
  423763:	mov    rax,QWORD PTR [rbp-0x38]
  423767:	mov    ecx,0x17
  42376c:	mov    rdi,rax
  42376f:	call   425bce <flatcc_json_parser_set_error@@Base>
  423774:	jmp    4237c9 <flatcc_verify_union_vector_field@@Base+0x1bce>
  423776:	mov    rdi,QWORD PTR [rbp-0x20]
  42377a:	mov    ecx,DWORD PTR [rbp-0x28]
  42377d:	lea    r8,[rbp-0x29]
  423781:	mov    rdx,QWORD PTR [rbp-0x48]
  423785:	mov    rsi,QWORD PTR [rbp-0x40]
  423789:	mov    rax,QWORD PTR [rbp-0x38]
  42378d:	mov    r9,r8
  423790:	mov    r8,rdi
  423793:	mov    rdi,rax
  423796:	call   422473 <flatcc_verify_union_vector_field@@Base+0x878>
  42379b:	cmp    rax,QWORD PTR [rbp-0x48]
  42379f:	jne    4237a7 <flatcc_verify_union_vector_field@@Base+0x1bac>
  4237a1:	mov    rax,QWORD PTR [rbp-0x48]
  4237a5:	jmp    4237c9 <flatcc_verify_union_vector_field@@Base+0x1bce>
  4237a7:	mov    rax,QWORD PTR [rbp-0x58]
  4237ab:	movzx  edx,BYTE PTR [rax]
  4237ae:	movzx  eax,BYTE PTR [rbp-0x29]
  4237b2:	add    edx,eax
  4237b4:	mov    rax,QWORD PTR [rbp-0x58]
  4237b8:	mov    BYTE PTR [rax],dl
  4237ba:	mov    eax,DWORD PTR [rbp-0x24]
  4237bd:	test   eax,eax
  4237bf:	jne    4236ee <flatcc_verify_union_vector_field@@Base+0x1af3>
  4237c5:	mov    rax,QWORD PTR [rbp-0x40]
  4237c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4237cd:	xor    rdi,QWORD PTR fs:0x28
  4237d6:	je     4237dd <flatcc_verify_union_vector_field@@Base+0x1be2>
  4237d8:	call   405070 <__stack_chk_fail@plt>
  4237dd:	leave  
  4237de:	ret    
  4237df:	push   rbp
  4237e0:	mov    rbp,rsp
  4237e3:	sub    rsp,0x60
  4237e7:	mov    QWORD PTR [rbp-0x38],rdi
  4237eb:	mov    QWORD PTR [rbp-0x40],rsi
  4237ef:	mov    QWORD PTR [rbp-0x48],rdx
  4237f3:	mov    QWORD PTR [rbp-0x50],rcx
  4237f7:	mov    QWORD PTR [rbp-0x58],r8
  4237fb:	mov    rax,QWORD PTR fs:0x28
  423804:	mov    QWORD PTR [rbp-0x8],rax
  423808:	xor    eax,eax
  42380a:	vxorps xmm0,xmm0,xmm0
  42380e:	vmovss DWORD PTR [rbp-0x2c],xmm0
  423813:	mov    rax,QWORD PTR [rbp-0x58]
  423817:	vxorps xmm0,xmm0,xmm0
  42381b:	vmovss DWORD PTR [rax],xmm0
  42381f:	mov    rdx,QWORD PTR [rbp-0x48]
  423823:	mov    rcx,QWORD PTR [rbp-0x40]
  423827:	mov    rax,QWORD PTR [rbp-0x38]
  42382b:	mov    rsi,rcx
  42382e:	mov    rdi,rax
  423831:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  423836:	mov    QWORD PTR [rbp-0x40],rax
  42383a:	mov    rax,QWORD PTR [rbp-0x40]
  42383e:	cmp    rax,QWORD PTR [rbp-0x48]
  423842:	jne    42384d <flatcc_verify_union_vector_field@@Base+0x1c52>
  423844:	mov    rax,QWORD PTR [rbp-0x40]
  423848:	jmp    42392e <flatcc_verify_union_vector_field@@Base+0x1d33>
  42384d:	mov    rax,QWORD PTR [rbp-0x50]
  423851:	mov    QWORD PTR [rbp-0x18],rax
  423855:	mov    rax,QWORD PTR [rbp-0x18]
  423859:	mov    rax,QWORD PTR [rax]
  42385c:	mov    rdx,QWORD PTR [rbp-0x40]
  423860:	mov    QWORD PTR [rbp-0x10],rdx
  423864:	lea    r9,[rbp-0x24]
  423868:	lea    r8,[rbp-0x20]
  42386c:	lea    rcx,[rbp-0x28]
  423870:	mov    rdx,QWORD PTR [rbp-0x48]
  423874:	mov    rsi,QWORD PTR [rbp-0x10]
  423878:	mov    rdi,QWORD PTR [rbp-0x38]
  42387c:	call   rax
  42387e:	mov    QWORD PTR [rbp-0x40],rax
  423882:	mov    rax,QWORD PTR [rbp-0x40]
  423886:	cmp    rax,QWORD PTR [rbp-0x48]
  42388a:	jne    423895 <flatcc_verify_union_vector_field@@Base+0x1c9a>
  42388c:	mov    rax,QWORD PTR [rbp-0x40]
  423890:	jmp    42392e <flatcc_verify_union_vector_field@@Base+0x1d33>
  423895:	mov    rax,QWORD PTR [rbp-0x40]
  423899:	cmp    rax,QWORD PTR [rbp-0x10]
  42389d:	jne    4238b0 <flatcc_verify_union_vector_field@@Base+0x1cb5>
  42389f:	add    QWORD PTR [rbp-0x18],0x8
  4238a4:	mov    rax,QWORD PTR [rbp-0x18]
  4238a8:	mov    rax,QWORD PTR [rax]
  4238ab:	test   rax,rax
  4238ae:	jne    423855 <flatcc_verify_union_vector_field@@Base+0x1c5a>
  4238b0:	mov    rax,QWORD PTR [rbp-0x10]
  4238b4:	cmp    rax,QWORD PTR [rbp-0x40]
  4238b8:	jne    4238d5 <flatcc_verify_union_vector_field@@Base+0x1cda>
  4238ba:	mov    rdx,QWORD PTR [rbp-0x48]
  4238be:	mov    rsi,QWORD PTR [rbp-0x40]
  4238c2:	mov    rax,QWORD PTR [rbp-0x38]
  4238c6:	mov    ecx,0x17
  4238cb:	mov    rdi,rax
  4238ce:	call   425bce <flatcc_json_parser_set_error@@Base>
  4238d3:	jmp    42392e <flatcc_verify_union_vector_field@@Base+0x1d33>
  4238d5:	mov    rdi,QWORD PTR [rbp-0x20]
  4238d9:	mov    ecx,DWORD PTR [rbp-0x28]
  4238dc:	lea    r8,[rbp-0x2c]
  4238e0:	mov    rdx,QWORD PTR [rbp-0x48]
  4238e4:	mov    rsi,QWORD PTR [rbp-0x40]
  4238e8:	mov    rax,QWORD PTR [rbp-0x38]
  4238ec:	mov    r9,r8
  4238ef:	mov    r8,rdi
  4238f2:	mov    rdi,rax
  4238f5:	call   42287b <flatcc_verify_union_vector_field@@Base+0xc80>
  4238fa:	cmp    rax,QWORD PTR [rbp-0x48]
  4238fe:	jne    423906 <flatcc_verify_union_vector_field@@Base+0x1d0b>
  423900:	mov    rax,QWORD PTR [rbp-0x48]
  423904:	jmp    42392e <flatcc_verify_union_vector_field@@Base+0x1d33>
  423906:	mov    rax,QWORD PTR [rbp-0x58]
  42390a:	vmovss xmm1,DWORD PTR [rax]
  42390e:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  423913:	vaddss xmm0,xmm1,xmm0
  423917:	mov    rax,QWORD PTR [rbp-0x58]
  42391b:	vmovss DWORD PTR [rax],xmm0
  42391f:	mov    eax,DWORD PTR [rbp-0x24]
  423922:	test   eax,eax
  423924:	jne    42384d <flatcc_verify_union_vector_field@@Base+0x1c52>
  42392a:	mov    rax,QWORD PTR [rbp-0x40]
  42392e:	mov    rdi,QWORD PTR [rbp-0x8]
  423932:	xor    rdi,QWORD PTR fs:0x28
  42393b:	je     423942 <flatcc_verify_union_vector_field@@Base+0x1d47>
  42393d:	call   405070 <__stack_chk_fail@plt>
  423942:	leave  
  423943:	ret    
  423944:	push   rbp
  423945:	mov    rbp,rsp
  423948:	sub    rsp,0x60
  42394c:	mov    QWORD PTR [rbp-0x38],rdi
  423950:	mov    QWORD PTR [rbp-0x40],rsi
  423954:	mov    QWORD PTR [rbp-0x48],rdx
  423958:	mov    QWORD PTR [rbp-0x50],rcx
  42395c:	mov    QWORD PTR [rbp-0x58],r8
  423960:	mov    rax,QWORD PTR fs:0x28
  423969:	mov    QWORD PTR [rbp-0x8],rax
  42396d:	xor    eax,eax
  42396f:	vxorpd xmm0,xmm0,xmm0
  423973:	vmovsd QWORD PTR [rbp-0x28],xmm0
  423978:	mov    rax,QWORD PTR [rbp-0x58]
  42397c:	vxorpd xmm0,xmm0,xmm0
  423980:	vmovsd QWORD PTR [rax],xmm0
  423984:	mov    rdx,QWORD PTR [rbp-0x48]
  423988:	mov    rcx,QWORD PTR [rbp-0x40]
  42398c:	mov    rax,QWORD PTR [rbp-0x38]
  423990:	mov    rsi,rcx
  423993:	mov    rdi,rax
  423996:	call   422099 <flatcc_verify_union_vector_field@@Base+0x49e>
  42399b:	mov    QWORD PTR [rbp-0x40],rax
  42399f:	mov    rax,QWORD PTR [rbp-0x40]
  4239a3:	cmp    rax,QWORD PTR [rbp-0x48]
  4239a7:	jne    4239b2 <flatcc_verify_union_vector_field@@Base+0x1db7>
  4239a9:	mov    rax,QWORD PTR [rbp-0x40]
  4239ad:	jmp    423a93 <flatcc_verify_union_vector_field@@Base+0x1e98>
  4239b2:	mov    rax,QWORD PTR [rbp-0x50]
  4239b6:	mov    QWORD PTR [rbp-0x18],rax
  4239ba:	mov    rax,QWORD PTR [rbp-0x18]
  4239be:	mov    rax,QWORD PTR [rax]
  4239c1:	mov    rdx,QWORD PTR [rbp-0x40]
  4239c5:	mov    QWORD PTR [rbp-0x10],rdx
  4239c9:	lea    r9,[rbp-0x2c]
  4239cd:	lea    r8,[rbp-0x20]
  4239d1:	lea    rcx,[rbp-0x30]
  4239d5:	mov    rdx,QWORD PTR [rbp-0x48]
  4239d9:	mov    rsi,QWORD PTR [rbp-0x10]
  4239dd:	mov    rdi,QWORD PTR [rbp-0x38]
  4239e1:	call   rax
  4239e3:	mov    QWORD PTR [rbp-0x40],rax
  4239e7:	mov    rax,QWORD PTR [rbp-0x40]
  4239eb:	cmp    rax,QWORD PTR [rbp-0x48]
  4239ef:	jne    4239fa <flatcc_verify_union_vector_field@@Base+0x1dff>
  4239f1:	mov    rax,QWORD PTR [rbp-0x40]
  4239f5:	jmp    423a93 <flatcc_verify_union_vector_field@@Base+0x1e98>
  4239fa:	mov    rax,QWORD PTR [rbp-0x40]
  4239fe:	cmp    rax,QWORD PTR [rbp-0x10]
  423a02:	jne    423a15 <flatcc_verify_union_vector_field@@Base+0x1e1a>
  423a04:	add    QWORD PTR [rbp-0x18],0x8
  423a09:	mov    rax,QWORD PTR [rbp-0x18]
  423a0d:	mov    rax,QWORD PTR [rax]
  423a10:	test   rax,rax
  423a13:	jne    4239ba <flatcc_verify_union_vector_field@@Base+0x1dbf>
  423a15:	mov    rax,QWORD PTR [rbp-0x10]
  423a19:	cmp    rax,QWORD PTR [rbp-0x40]
  423a1d:	jne    423a3a <flatcc_verify_union_vector_field@@Base+0x1e3f>
  423a1f:	mov    rdx,QWORD PTR [rbp-0x48]
  423a23:	mov    rsi,QWORD PTR [rbp-0x40]
  423a27:	mov    rax,QWORD PTR [rbp-0x38]
  423a2b:	mov    ecx,0x17
  423a30:	mov    rdi,rax
  423a33:	call   425bce <flatcc_json_parser_set_error@@Base>
  423a38:	jmp    423a93 <flatcc_verify_union_vector_field@@Base+0x1e98>
  423a3a:	mov    rdi,QWORD PTR [rbp-0x20]
  423a3e:	mov    ecx,DWORD PTR [rbp-0x30]
  423a41:	lea    r8,[rbp-0x28]
  423a45:	mov    rdx,QWORD PTR [rbp-0x48]
  423a49:	mov    rsi,QWORD PTR [rbp-0x40]
  423a4d:	mov    rax,QWORD PTR [rbp-0x38]
  423a51:	mov    r9,r8
  423a54:	mov    r8,rdi
  423a57:	mov    rdi,rax
  423a5a:	call   422912 <flatcc_verify_union_vector_field@@Base+0xd17>
  423a5f:	cmp    rax,QWORD PTR [rbp-0x48]
  423a63:	jne    423a6b <flatcc_verify_union_vector_field@@Base+0x1e70>
  423a65:	mov    rax,QWORD PTR [rbp-0x48]
  423a69:	jmp    423a93 <flatcc_verify_union_vector_field@@Base+0x1e98>
  423a6b:	mov    rax,QWORD PTR [rbp-0x58]
  423a6f:	vmovsd xmm1,QWORD PTR [rax]
  423a73:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  423a78:	vaddsd xmm0,xmm1,xmm0
  423a7c:	mov    rax,QWORD PTR [rbp-0x58]
  423a80:	vmovsd QWORD PTR [rax],xmm0
  423a84:	mov    eax,DWORD PTR [rbp-0x2c]
  423a87:	test   eax,eax
  423a89:	jne    4239b2 <flatcc_verify_union_vector_field@@Base+0x1db7>
  423a8f:	mov    rax,QWORD PTR [rbp-0x40]
  423a93:	mov    rdi,QWORD PTR [rbp-0x8]
  423a97:	xor    rdi,QWORD PTR fs:0x28
  423aa0:	je     423aa7 <flatcc_verify_union_vector_field@@Base+0x1eac>
  423aa2:	call   405070 <__stack_chk_fail@plt>
  423aa7:	leave  
  423aa8:	ret    
  423aa9:	push   rbp
  423aaa:	mov    rbp,rsp
  423aad:	vmovsd QWORD PTR [rbp-0x18],xmm0
  423ab2:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  423ab7:	vmovsd QWORD PTR [rbp-0x8],xmm0
  423abc:	mov    rax,QWORD PTR [rbp-0x8]
  423ac0:	pop    rbp
  423ac1:	ret    
  423ac2:	push   rbp
  423ac3:	mov    rbp,rsp
  423ac6:	mov    QWORD PTR [rbp-0x18],rdi
  423aca:	mov    rax,QWORD PTR [rbp-0x18]
  423ace:	mov    QWORD PTR [rbp-0x8],rax
  423ad2:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  423ad7:	pop    rbp
  423ad8:	ret    
  423ad9:	push   rbp
  423ada:	mov    rbp,rsp
  423add:	vmovsd QWORD PTR [rbp-0x18],xmm0
  423ae2:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  423ae7:	vcvttsd2si eax,xmm0
  423aeb:	mov    DWORD PTR [rbp-0x4],eax
  423aee:	vxorpd xmm0,xmm0,xmm0
  423af2:	vucomisd xmm0,QWORD PTR [rbp-0x18]
  423af7:	jbe    423afe <flatcc_verify_union_vector_field@@Base+0x1f03>
  423af9:	mov    eax,DWORD PTR [rbp-0x4]
  423afc:	jmp    423b2f <flatcc_verify_union_vector_field@@Base+0x1f34>
  423afe:	vxorpd xmm0,xmm0,xmm0
  423b02:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  423b07:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  423b0c:	vsubsd xmm0,xmm1,xmm0
  423b10:	vxorpd xmm1,xmm1,xmm1
  423b14:	vucomisd xmm0,xmm1
  423b18:	jp     423b24 <flatcc_verify_union_vector_field@@Base+0x1f29>
  423b1a:	vxorpd xmm1,xmm1,xmm1
  423b1e:	vucomisd xmm0,xmm1
  423b22:	je     423b2c <flatcc_verify_union_vector_field@@Base+0x1f31>
  423b24:	mov    eax,DWORD PTR [rbp-0x4]
  423b27:	add    eax,0x1
  423b2a:	jmp    423b2f <flatcc_verify_union_vector_field@@Base+0x1f34>
  423b2c:	mov    eax,DWORD PTR [rbp-0x4]
  423b2f:	pop    rbp
  423b30:	ret    
  423b31:	push   rbp
  423b32:	mov    rbp,rsp
  423b35:	sub    rsp,0x20
  423b39:	mov    DWORD PTR [rbp-0x14],edi
  423b3c:	mov    QWORD PTR [rbp-0x20],rsi
  423b40:	mov    eax,DWORD PTR [rbp-0x14]
  423b43:	add    eax,0x3f
  423b46:	vxorpd xmm0,xmm0,xmm0
  423b4a:	vcvtsi2sd xmm0,xmm0,eax
  423b4e:	vmovsd xmm1,QWORD PTR [rip+0x16e42]        # 43a998 <flatcc_builder_padding_base@@Base+0x2738>
  423b56:	vmulsd xmm0,xmm0,xmm1
  423b5a:	call   423ad9 <flatcc_verify_union_vector_field@@Base+0x1ede>
  423b5f:	mov    DWORD PTR [rbp-0x8],eax
  423b62:	mov    eax,DWORD PTR [rbp-0x8]
  423b65:	add    eax,0x15b
  423b6a:	lea    edx,[rax+0x7]
  423b6d:	test   eax,eax
  423b6f:	cmovs  eax,edx
  423b72:	sar    eax,0x3
  423b75:	add    eax,0x1
  423b78:	mov    DWORD PTR [rbp-0x4],eax
  423b7b:	mov    eax,DWORD PTR [rbp-0x4]
  423b7e:	cdqe   
  423b80:	shl    rax,0x4
  423b84:	mov    rdx,rax
  423b87:	lea    rax,[rip+0x15972]        # 439500 <flatcc_builder_padding_base@@Base+0x12a0>
  423b8e:	mov    rdx,QWORD PTR [rdx+rax*1]
  423b92:	mov    rax,QWORD PTR [rbp-0x20]
  423b96:	mov    QWORD PTR [rax],rdx
  423b99:	mov    eax,DWORD PTR [rbp-0x4]
  423b9c:	cdqe   
  423b9e:	shl    rax,0x4
  423ba2:	mov    rdx,rax
  423ba5:	lea    rax,[rip+0x1595c]        # 439508 <flatcc_builder_padding_base@@Base+0x12a8>
  423bac:	movzx  eax,WORD PTR [rdx+rax*1]
  423bb0:	movsx  edx,ax
  423bb3:	mov    rax,QWORD PTR [rbp-0x20]
  423bb7:	mov    DWORD PTR [rax+0x8],edx
  423bba:	mov    eax,DWORD PTR [rbp-0x4]
  423bbd:	cdqe   
  423bbf:	shl    rax,0x4
  423bc3:	mov    rdx,rax
  423bc6:	lea    rax,[rip+0x1593d]        # 43950a <flatcc_builder_padding_base@@Base+0x12aa>
  423bcd:	movzx  eax,WORD PTR [rdx+rax*1]
  423bd1:	cwde   
  423bd2:	leave  
  423bd3:	ret    
  423bd4:	push   rbp
  423bd5:	mov    rbp,rsp
  423bd8:	sub    rsp,0x30
  423bdc:	mov    rax,rdi
  423bdf:	mov    r8,rsi
  423be2:	mov    rsi,rax
  423be5:	mov    rdi,rdx
  423be8:	mov    rdi,r8
  423beb:	mov    QWORD PTR [rbp-0x20],rsi
  423bef:	mov    QWORD PTR [rbp-0x18],rdi
  423bf3:	mov    QWORD PTR [rbp-0x30],rdx
  423bf7:	mov    QWORD PTR [rbp-0x28],rcx
  423bfb:	mov    rdx,QWORD PTR [rbp-0x20]
  423bff:	mov    rax,QWORD PTR [rbp-0x30]
  423c03:	sub    rdx,rax
  423c06:	mov    rax,rdx
  423c09:	mov    QWORD PTR [rbp-0x10],rax
  423c0d:	mov    eax,DWORD PTR [rbp-0x18]
  423c10:	mov    DWORD PTR [rbp-0x8],eax
  423c13:	mov    edx,DWORD PTR [rbp-0x18]
  423c16:	mov    eax,DWORD PTR [rbp-0x28]
  423c19:	cmp    edx,eax
  423c1b:	jne    423c2a <flatcc_verify_union_vector_field@@Base+0x202f>
  423c1d:	mov    rdx,QWORD PTR [rbp-0x20]
  423c21:	mov    rax,QWORD PTR [rbp-0x30]
  423c25:	cmp    rdx,rax
  423c28:	jae    423c49 <flatcc_verify_union_vector_field@@Base+0x204e>
  423c2a:	lea    rcx,[rip+0x1684f]        # 43a480 <flatcc_builder_padding_base@@Base+0x2220>
  423c31:	mov    edx,0xef
  423c36:	lea    rsi,[rip+0x15e33]        # 439a70 <flatcc_builder_padding_base@@Base+0x1810>
  423c3d:	lea    rdi,[rip+0x15e9c]        # 439ae0 <flatcc_builder_padding_base@@Base+0x1880>
  423c44:	call   405080 <__assert_fail@plt>
  423c49:	mov    rax,QWORD PTR [rbp-0x10]
  423c4d:	mov    rdx,QWORD PTR [rbp-0x8]
  423c51:	leave  
  423c52:	ret    
  423c53:	push   rbp
  423c54:	mov    rbp,rsp
  423c57:	sub    rsp,0x8
  423c5b:	mov    rax,rdi
  423c5e:	mov    r8,rsi
  423c61:	mov    rsi,rax
  423c64:	mov    rdi,rdx
  423c67:	mov    rdi,r8
  423c6a:	mov    QWORD PTR [rbp-0x70],rsi
  423c6e:	mov    QWORD PTR [rbp-0x68],rdi
  423c72:	mov    QWORD PTR [rbp-0x80],rdx
  423c76:	mov    QWORD PTR [rbp-0x78],rcx
  423c7a:	mov    rax,QWORD PTR [rbp-0x70]
  423c7e:	shr    rax,0x20
  423c82:	mov    QWORD PTR [rbp-0x58],rax
  423c86:	mov    rax,QWORD PTR [rbp-0x70]
  423c8a:	and    eax,0xffffffff
  423c8d:	mov    QWORD PTR [rbp-0x50],rax
  423c91:	mov    rax,QWORD PTR [rbp-0x80]
  423c95:	shr    rax,0x20
  423c99:	mov    QWORD PTR [rbp-0x48],rax
  423c9d:	mov    rax,QWORD PTR [rbp-0x80]
  423ca1:	and    eax,0xffffffff
  423ca4:	mov    QWORD PTR [rbp-0x40],rax
  423ca8:	mov    rax,QWORD PTR [rbp-0x58]
  423cac:	imul   rax,QWORD PTR [rbp-0x48]
  423cb1:	mov    QWORD PTR [rbp-0x38],rax
  423cb5:	mov    rax,QWORD PTR [rbp-0x50]
  423cb9:	imul   rax,QWORD PTR [rbp-0x48]
  423cbe:	mov    QWORD PTR [rbp-0x30],rax
  423cc2:	mov    rax,QWORD PTR [rbp-0x58]
  423cc6:	imul   rax,QWORD PTR [rbp-0x40]
  423ccb:	mov    QWORD PTR [rbp-0x28],rax
  423ccf:	mov    rax,QWORD PTR [rbp-0x50]
  423cd3:	imul   rax,QWORD PTR [rbp-0x40]
  423cd8:	mov    QWORD PTR [rbp-0x20],rax
  423cdc:	mov    rax,QWORD PTR [rbp-0x20]
  423ce0:	shr    rax,0x20
  423ce4:	mov    rdx,QWORD PTR [rbp-0x28]
  423ce8:	mov    edx,edx
  423cea:	add    rax,rdx
  423ced:	mov    rdx,QWORD PTR [rbp-0x30]
  423cf1:	mov    edx,edx
  423cf3:	add    rax,rdx
  423cf6:	mov    QWORD PTR [rbp-0x18],rax
  423cfa:	mov    eax,0x80000000
  423cff:	add    QWORD PTR [rbp-0x18],rax
  423d03:	mov    rax,QWORD PTR [rbp-0x28]
  423d07:	shr    rax,0x20
  423d0b:	mov    rdx,rax
  423d0e:	mov    rax,QWORD PTR [rbp-0x38]
  423d12:	add    rdx,rax
  423d15:	mov    rax,QWORD PTR [rbp-0x30]
  423d19:	shr    rax,0x20
  423d1d:	add    rdx,rax
  423d20:	mov    rax,QWORD PTR [rbp-0x18]
  423d24:	shr    rax,0x20
  423d28:	add    rax,rdx
  423d2b:	mov    QWORD PTR [rbp-0x10],rax
  423d2f:	mov    edx,DWORD PTR [rbp-0x68]
  423d32:	mov    eax,DWORD PTR [rbp-0x78]
  423d35:	add    eax,edx
  423d37:	add    eax,0x40
  423d3a:	mov    DWORD PTR [rbp-0x8],eax
  423d3d:	mov    rax,QWORD PTR [rbp-0x10]
  423d41:	mov    rdx,QWORD PTR [rbp-0x8]
  423d45:	leave  
  423d46:	ret    
  423d47:	push   rbp
  423d48:	mov    rbp,rsp
  423d4b:	sub    rsp,0x10
  423d4f:	mov    rax,rdi
  423d52:	mov    rcx,rsi
  423d55:	mov    rdx,rcx
  423d58:	mov    QWORD PTR [rbp-0x10],rax
  423d5c:	mov    QWORD PTR [rbp-0x8],rdx
  423d60:	mov    rax,QWORD PTR [rbp-0x10]
  423d64:	test   rax,rax
  423d67:	jne    423d9d <flatcc_verify_union_vector_field@@Base+0x21a2>
  423d69:	lea    rcx,[rip+0x16730]        # 43a4a0 <flatcc_builder_padding_base@@Base+0x2240>
  423d70:	mov    edx,0x104
  423d75:	lea    rsi,[rip+0x15cf4]        # 439a70 <flatcc_builder_padding_base@@Base+0x1810>
  423d7c:	lea    rdi,[rip+0x15d76]        # 439af9 <flatcc_builder_padding_base@@Base+0x1899>
  423d83:	call   405080 <__assert_fail@plt>
  423d88:	mov    rax,QWORD PTR [rbp-0x10]
  423d8c:	shl    rax,0xa
  423d90:	mov    QWORD PTR [rbp-0x10],rax
  423d94:	mov    eax,DWORD PTR [rbp-0x8]
  423d97:	sub    eax,0xa
  423d9a:	mov    DWORD PTR [rbp-0x8],eax
  423d9d:	mov    rdx,QWORD PTR [rbp-0x10]
  423da1:	movabs rax,0xffc0000000000000
  423dab:	and    rax,rdx
  423dae:	test   rax,rax
  423db1:	je     423d88 <flatcc_verify_union_vector_field@@Base+0x218d>
  423db3:	jmp    423dc9 <flatcc_verify_union_vector_field@@Base+0x21ce>
  423db5:	mov    rax,QWORD PTR [rbp-0x10]
  423db9:	add    rax,rax
  423dbc:	mov    QWORD PTR [rbp-0x10],rax
  423dc0:	mov    eax,DWORD PTR [rbp-0x8]
  423dc3:	sub    eax,0x1
  423dc6:	mov    DWORD PTR [rbp-0x8],eax
  423dc9:	mov    rax,QWORD PTR [rbp-0x10]
  423dcd:	test   rax,rax
  423dd0:	jns    423db5 <flatcc_verify_union_vector_field@@Base+0x21ba>
  423dd2:	mov    rax,QWORD PTR [rbp-0x10]
  423dd6:	mov    rdx,QWORD PTR [rbp-0x8]
  423dda:	leave  
  423ddb:	ret    
  423ddc:	push   rbp
  423ddd:	mov    rbp,rsp
  423de0:	sub    rsp,0x30
  423de4:	vmovsd QWORD PTR [rbp-0x28],xmm0
  423de9:	mov    rax,QWORD PTR [rbp-0x28]
  423ded:	mov    QWORD PTR [rbp-0x30],rax
  423df1:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  423df6:	call   423aa9 <flatcc_verify_union_vector_field@@Base+0x1eae>
  423dfb:	mov    QWORD PTR [rbp-0x18],rax
  423dff:	movabs rax,0x7ff0000000000000
  423e09:	and    rax,QWORD PTR [rbp-0x18]
  423e0d:	test   rax,rax
  423e10:	jne    423e2d <flatcc_verify_union_vector_field@@Base+0x2232>
  423e12:	movabs rax,0xfffffffffffff
  423e1c:	and    rax,QWORD PTR [rbp-0x18]
  423e20:	mov    QWORD PTR [rbp-0x10],rax
  423e24:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  423e2b:	jmp    423e64 <flatcc_verify_union_vector_field@@Base+0x2269>
  423e2d:	movabs rax,0xfffffffffffff
  423e37:	and    rax,QWORD PTR [rbp-0x18]
  423e3b:	mov    rdx,rax
  423e3e:	movabs rax,0x10000000000000
  423e48:	add    rax,rdx
  423e4b:	mov    QWORD PTR [rbp-0x10],rax
  423e4f:	mov    rax,QWORD PTR [rbp-0x18]
  423e53:	shr    rax,0x34
  423e57:	and    eax,0x7ff
  423e5c:	sub    eax,0x433
  423e61:	mov    DWORD PTR [rbp-0x8],eax
  423e64:	mov    rax,QWORD PTR [rbp-0x10]
  423e68:	mov    rdx,QWORD PTR [rbp-0x8]
  423e6c:	leave  
  423e6d:	ret    
  423e6e:	push   rbp
  423e6f:	mov    rbp,rsp
  423e72:	sub    rsp,0x60
  423e76:	mov    rax,rdi
  423e79:	mov    rcx,rsi
  423e7c:	mov    rdx,rcx
  423e7f:	mov    QWORD PTR [rbp-0x50],rax
  423e83:	mov    QWORD PTR [rbp-0x48],rdx
  423e87:	movabs rax,0x10000000000000
  423e91:	mov    QWORD PTR [rbp-0x20],rax
  423e95:	movabs rax,0xfffffffffffff
  423e9f:	mov    QWORD PTR [rbp-0x18],rax
  423ea3:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  423eaa:	mov    DWORD PTR [rbp-0x30],0x433
  423eb1:	mov    DWORD PTR [rbp-0x2c],0x34
  423eb8:	mov    rax,QWORD PTR [rbp-0x50]
  423ebc:	mov    rdx,QWORD PTR [rbp-0x48]
  423ec0:	mov    QWORD PTR [rbp-0x10],rax
  423ec4:	mov    QWORD PTR [rbp-0x8],rdx
  423ec8:	jmp    423ede <flatcc_verify_union_vector_field@@Base+0x22e3>
  423eca:	mov    rax,QWORD PTR [rbp-0x10]
  423ece:	shr    rax,1
  423ed1:	mov    QWORD PTR [rbp-0x10],rax
  423ed5:	mov    eax,DWORD PTR [rbp-0x8]
  423ed8:	add    eax,0x1
  423edb:	mov    DWORD PTR [rbp-0x8],eax
  423ede:	mov    rax,QWORD PTR [rbp-0x10]
  423ee2:	mov    rcx,QWORD PTR [rbp-0x20]
  423ee6:	mov    rdx,QWORD PTR [rbp-0x18]
  423eea:	add    rdx,rcx
  423eed:	cmp    rax,rdx
  423ef0:	ja     423eca <flatcc_verify_union_vector_field@@Base+0x22cf>
  423ef2:	mov    eax,DWORD PTR [rbp-0x8]
  423ef5:	cmp    eax,DWORD PTR [rbp-0x34]
  423ef8:	jge    423f17 <flatcc_verify_union_vector_field@@Base+0x231c>
  423efa:	mov    rax,QWORD PTR [rip+0x16a8f]        # 43a990 <flatcc_builder_padding_base@@Base+0x2730>
  423f01:	jmp    423f80 <flatcc_verify_union_vector_field@@Base+0x2385>
  423f03:	mov    rax,QWORD PTR [rbp-0x10]
  423f07:	add    rax,rax
  423f0a:	mov    QWORD PTR [rbp-0x10],rax
  423f0e:	mov    eax,DWORD PTR [rbp-0x8]
  423f11:	sub    eax,0x1
  423f14:	mov    DWORD PTR [rbp-0x8],eax
  423f17:	mov    eax,DWORD PTR [rbp-0x8]
  423f1a:	cmp    eax,DWORD PTR [rbp-0x34]
  423f1d:	jle    423f2c <flatcc_verify_union_vector_field@@Base+0x2331>
  423f1f:	mov    rax,QWORD PTR [rbp-0x10]
  423f23:	and    rax,QWORD PTR [rbp-0x20]
  423f27:	test   rax,rax
  423f2a:	je     423f03 <flatcc_verify_union_vector_field@@Base+0x2308>
  423f2c:	mov    eax,DWORD PTR [rbp-0x8]
  423f2f:	cmp    eax,DWORD PTR [rbp-0x34]
  423f32:	jne    423f4b <flatcc_verify_union_vector_field@@Base+0x2350>
  423f34:	mov    rax,QWORD PTR [rbp-0x10]
  423f38:	and    rax,QWORD PTR [rbp-0x20]
  423f3c:	test   rax,rax
  423f3f:	jne    423f4b <flatcc_verify_union_vector_field@@Base+0x2350>
  423f41:	mov    QWORD PTR [rbp-0x28],0x0
  423f49:	jmp    423f59 <flatcc_verify_union_vector_field@@Base+0x235e>
  423f4b:	mov    edx,DWORD PTR [rbp-0x8]
  423f4e:	mov    eax,DWORD PTR [rbp-0x30]
  423f51:	add    eax,edx
  423f53:	cdqe   
  423f55:	mov    QWORD PTR [rbp-0x28],rax
  423f59:	mov    rax,QWORD PTR [rbp-0x10]
  423f5d:	and    rax,QWORD PTR [rbp-0x18]
  423f61:	mov    rdx,rax
  423f64:	mov    eax,DWORD PTR [rbp-0x2c]
  423f67:	mov    rcx,QWORD PTR [rbp-0x28]
  423f6b:	shlx   rax,rcx,rax
  423f70:	or     rax,rdx
  423f73:	mov    rdi,rax
  423f76:	call   423ac2 <flatcc_verify_union_vector_field@@Base+0x1ec7>
  423f7b:	vmovq  rax,xmm0
  423f80:	mov    QWORD PTR [rbp-0x58],rax
  423f84:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  423f89:	leave  
  423f8a:	ret    
  423f8b:	push   rbp
  423f8c:	mov    rbp,rsp
  423f8f:	mov    DWORD PTR [rbp-0x14],edi
  423f92:	mov    DWORD PTR [rbp-0x18],esi
  423f95:	mov    QWORD PTR [rbp-0x20],rdx
  423f99:	mov    eax,DWORD PTR [rbp-0x18]
  423f9c:	add    eax,0x1
  423f9f:	imul   eax,eax,0x4d1
  423fa5:	sar    eax,0xc
  423fa8:	add    eax,0x1
  423fab:	mov    DWORD PTR [rbp-0x4],eax
  423fae:	mov    eax,DWORD PTR [rbp-0x4]
  423fb1:	cdqe   
  423fb3:	lea    rdx,[rax*4+0x0]
  423fbb:	lea    rax,[rip+0x15b5e]        # 439b20 <flatcc_builder_padding_base@@Base+0x18c0>
  423fc2:	mov    eax,DWORD PTR [rdx+rax*1]
  423fc5:	cmp    eax,DWORD PTR [rbp-0x14]
  423fc8:	jbe    423fce <flatcc_verify_union_vector_field@@Base+0x23d3>
  423fca:	sub    DWORD PTR [rbp-0x4],0x1
  423fce:	mov    eax,DWORD PTR [rbp-0x4]
  423fd1:	cdqe   
  423fd3:	lea    rdx,[rax*4+0x0]
  423fdb:	lea    rax,[rip+0x15b3e]        # 439b20 <flatcc_builder_padding_base@@Base+0x18c0>
  423fe2:	mov    edx,DWORD PTR [rdx+rax*1]
  423fe5:	mov    rax,QWORD PTR [rbp-0x20]
  423fe9:	mov    DWORD PTR [rax],edx
  423feb:	mov    eax,DWORD PTR [rbp-0x4]
  423fee:	pop    rbp
  423fef:	ret    
  423ff0:	push   rbp
  423ff1:	mov    rbp,rsp
  423ff4:	sub    rsp,0x20
  423ff8:	mov    DWORD PTR [rbp-0x14],edi
  423ffb:	mov    QWORD PTR [rbp-0x20],rsi
  423fff:	mov    DWORD PTR [rbp-0x10],0x15c
  424006:	mov    DWORD PTR [rbp-0xc],0x8
  42400d:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  424014:	jge    424035 <flatcc_verify_union_vector_field@@Base+0x243a>
  424016:	lea    rcx,[rip+0x164a3]        # 43a4c0 <flatcc_builder_padding_base@@Base+0x2260>
  42401d:	mov    edx,0x50
  424022:	lea    rsi,[rip+0x15b27]        # 439b50 <flatcc_builder_padding_base@@Base+0x18f0>
  424029:	lea    rdi,[rip+0x15b98]        # 439bc8 <flatcc_builder_padding_base@@Base+0x1968>
  424030:	call   405080 <__assert_fail@plt>
  424035:	mov    eax,DWORD PTR [rbp-0xc]
  424038:	add    eax,0x154
  42403d:	cmp    eax,DWORD PTR [rbp-0x14]
  424040:	jg     424061 <flatcc_verify_union_vector_field@@Base+0x2466>
  424042:	lea    rcx,[rip+0x16477]        # 43a4c0 <flatcc_builder_padding_base@@Base+0x2260>
  424049:	mov    edx,0x51
  42404e:	lea    rsi,[rip+0x15afb]        # 439b50 <flatcc_builder_padding_base@@Base+0x18f0>
  424055:	lea    rdi,[rip+0x15b8c]        # 439be8 <flatcc_builder_padding_base@@Base+0x1988>
  42405c:	call   405080 <__assert_fail@plt>
  424061:	mov    edx,DWORD PTR [rbp-0x14]
  424064:	mov    eax,DWORD PTR [rbp-0x10]
  424067:	add    eax,edx
  424069:	cdq    
  42406a:	idiv   DWORD PTR [rbp-0xc]
  42406d:	mov    DWORD PTR [rbp-0x8],eax
  424070:	mov    eax,DWORD PTR [rbp-0x8]
  424073:	cdqe   
  424075:	shl    rax,0x4
  424079:	mov    rdx,rax
  42407c:	lea    rax,[rip+0x15487]        # 43950a <flatcc_builder_padding_base@@Base+0x12aa>
  424083:	movzx  eax,WORD PTR [rdx+rax*1]
  424087:	cwde   
  424088:	mov    DWORD PTR [rbp-0x4],eax
  42408b:	mov    eax,DWORD PTR [rbp-0x8]
  42408e:	cdqe   
  424090:	shl    rax,0x4
  424094:	mov    rdx,rax
  424097:	lea    rax,[rip+0x15462]        # 439500 <flatcc_builder_padding_base@@Base+0x12a0>
  42409e:	mov    rdx,QWORD PTR [rdx+rax*1]
  4240a2:	mov    rax,QWORD PTR [rbp-0x20]
  4240a6:	mov    QWORD PTR [rax],rdx
  4240a9:	mov    eax,DWORD PTR [rbp-0x8]
  4240ac:	cdqe   
  4240ae:	shl    rax,0x4
  4240b2:	mov    rdx,rax
  4240b5:	lea    rax,[rip+0x1544c]        # 439508 <flatcc_builder_padding_base@@Base+0x12a8>
  4240bc:	movzx  eax,WORD PTR [rdx+rax*1]
  4240c0:	movsx  edx,ax
  4240c3:	mov    rax,QWORD PTR [rbp-0x20]
  4240c7:	mov    DWORD PTR [rax+0x8],edx
  4240ca:	mov    eax,DWORD PTR [rbp-0x4]
  4240cd:	cmp    eax,DWORD PTR [rbp-0x14]
  4240d0:	jle    4240f1 <flatcc_verify_union_vector_field@@Base+0x24f6>
  4240d2:	lea    rcx,[rip+0x163e7]        # 43a4c0 <flatcc_builder_padding_base@@Base+0x2260>
  4240d9:	mov    edx,0x58
  4240de:	lea    rsi,[rip+0x15a6b]        # 439b50 <flatcc_builder_padding_base@@Base+0x18f0>
  4240e5:	lea    rdi,[rip+0x15b27]        # 439c13 <flatcc_builder_padding_base@@Base+0x19b3>
  4240ec:	call   405080 <__assert_fail@plt>
  4240f1:	mov    edx,DWORD PTR [rbp-0x4]
  4240f4:	mov    eax,DWORD PTR [rbp-0xc]
  4240f7:	add    eax,edx
  4240f9:	cmp    eax,DWORD PTR [rbp-0x14]
  4240fc:	jg     42411d <flatcc_verify_union_vector_field@@Base+0x2522>
  4240fe:	lea    rcx,[rip+0x163bb]        # 43a4c0 <flatcc_builder_padding_base@@Base+0x2260>
  424105:	mov    edx,0x59
  42410a:	lea    rsi,[rip+0x15a3f]        # 439b50 <flatcc_builder_padding_base@@Base+0x18f0>
  424111:	lea    rdi,[rip+0x15b0a]        # 439c22 <flatcc_builder_padding_base@@Base+0x19c2>
  424118:	call   405080 <__assert_fail@plt>
  42411d:	mov    eax,DWORD PTR [rbp-0x4]
  424120:	leave  
  424121:	ret    

0000000000424122 <grisu3_diy_fp_encode_double@@Base>:
  424122:	push   rbp
  424123:	mov    rbp,rsp
  424126:	sub    rsp,0xb0
  42412d:	mov    QWORD PTR [rbp-0x98],rdi
  424134:	mov    DWORD PTR [rbp-0x9c],esi
  42413a:	mov    DWORD PTR [rbp-0xa0],edx
  424140:	mov    DWORD PTR [rbp-0xa4],ecx
  424146:	mov    QWORD PTR [rbp-0xb0],r8
  42414d:	mov    rax,QWORD PTR fs:0x28
  424156:	mov    QWORD PTR [rbp-0x8],rax
  42415a:	xor    eax,eax
  42415c:	mov    DWORD PTR [rbp-0x7c],0x3
  424163:	mov    eax,DWORD PTR [rbp-0x7c]
  424166:	mov    edx,0x1
  42416b:	shlx   eax,edx,eax
  424170:	mov    DWORD PTR [rbp-0x78],eax
  424173:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  42417a:	movabs rax,0x10000000000000
  424184:	mov    QWORD PTR [rbp-0x48],rax
  424188:	mov    DWORD PTR [rbp-0x70],0x40
  42418f:	mov    DWORD PTR [rbp-0x6c],0x13
  424196:	cmp    DWORD PTR [rbp-0xa4],0x0
  42419d:	je     4241ad <grisu3_diy_fp_encode_double@@Base+0x8b>
  42419f:	mov    eax,DWORD PTR [rbp-0x78]
  4241a2:	mov    edx,eax
  4241a4:	shr    edx,0x1f
  4241a7:	add    eax,edx
  4241a9:	sar    eax,1
  4241ab:	jmp    4241b2 <grisu3_diy_fp_encode_double@@Base+0x90>
  4241ad:	mov    eax,0x0
  4241b2:	mov    DWORD PTR [rbp-0x84],eax
  4241b8:	mov    eax,DWORD PTR [rbp-0x9c]
  4241be:	sub    eax,DWORD PTR [rbp-0xa0]
  4241c4:	mov    DWORD PTR [rbp-0x68],eax
  4241c7:	mov    rax,QWORD PTR [rbp-0x98]
  4241ce:	mov    QWORD PTR [rbp-0x40],rax
  4241d2:	mov    DWORD PTR [rbp-0x38],0x0
  4241d9:	mov    rdx,QWORD PTR [rbp-0x40]
  4241dd:	mov    rax,QWORD PTR [rbp-0x38]
  4241e1:	mov    rdi,rdx
  4241e4:	mov    rsi,rax
  4241e7:	call   423d47 <flatcc_verify_union_vector_field@@Base+0x214c>
  4241ec:	mov    QWORD PTR [rbp-0x40],rax
  4241f0:	mov    QWORD PTR [rbp-0x38],rdx
  4241f4:	mov    eax,DWORD PTR [rbp-0x38]
  4241f7:	neg    eax
  4241f9:	mov    ecx,eax
  4241fb:	shl    DWORD PTR [rbp-0x84],cl
  424201:	lea    rdx,[rbp-0x30]
  424205:	mov    eax,DWORD PTR [rbp-0x68]
  424208:	mov    rsi,rdx
  42420b:	mov    edi,eax
  42420d:	call   423ff0 <flatcc_verify_union_vector_field@@Base+0x23f5>
  424212:	mov    DWORD PTR [rbp-0x64],eax
  424215:	mov    eax,DWORD PTR [rbp-0x64]
  424218:	cmp    eax,DWORD PTR [rbp-0x68]
  42421b:	je     4242b6 <grisu3_diy_fp_encode_double@@Base+0x194>
  424221:	mov    eax,DWORD PTR [rbp-0x68]
  424224:	sub    eax,DWORD PTR [rbp-0x64]
  424227:	sub    eax,0x1
  42422a:	mov    DWORD PTR [rbp-0x60],eax
  42422d:	cmp    DWORD PTR [rbp-0x60],0x0
  424231:	js     424239 <grisu3_diy_fp_encode_double@@Base+0x117>
  424233:	cmp    DWORD PTR [rbp-0x60],0x6
  424237:	jle    424258 <grisu3_diy_fp_encode_double@@Base+0x136>
  424239:	lea    rcx,[rip+0x162a0]        # 43a4e0 <flatcc_builder_padding_base@@Base+0x2280>
  424240:	mov    edx,0xb9
  424245:	lea    rsi,[rip+0x15904]        # 439b50 <flatcc_builder_padding_base@@Base+0x18f0>
  42424c:	lea    rdi,[rip+0x159ea]        # 439c3d <flatcc_builder_padding_base@@Base+0x19dd>
  424253:	call   405080 <__assert_fail@plt>
  424258:	mov    eax,DWORD PTR [rbp-0x60]
  42425b:	cdqe   
  42425d:	shl    rax,0x4
  424261:	mov    rdx,rax
  424264:	lea    rax,[rip+0x20795]        # 444a00 <__data_start@@Base+0x940>
  42426b:	lea    rdx,[rdx+rax*1]
  42426f:	mov    rax,QWORD PTR [rdx]
  424272:	mov    rdx,QWORD PTR [rdx+0x8]
  424276:	mov    rdi,QWORD PTR [rbp-0x40]
  42427a:	mov    rsi,QWORD PTR [rbp-0x38]
  42427e:	mov    rcx,rdx
  424281:	mov    rdx,rax
  424284:	call   423c53 <flatcc_verify_union_vector_field@@Base+0x2058>
  424289:	mov    QWORD PTR [rbp-0x40],rax
  42428d:	mov    QWORD PTR [rbp-0x38],rdx
  424291:	mov    eax,DWORD PTR [rbp-0xa0]
  424297:	lea    edx,[rax+0x1]
  42429a:	mov    eax,DWORD PTR [rbp-0x60]
  42429d:	add    eax,edx
  42429f:	cmp    eax,DWORD PTR [rbp-0x6c]
  4242a2:	jle    4242b6 <grisu3_diy_fp_encode_double@@Base+0x194>
  4242a4:	mov    eax,DWORD PTR [rbp-0x78]
  4242a7:	mov    edx,eax
  4242a9:	shr    edx,0x1f
  4242ac:	add    eax,edx
  4242ae:	sar    eax,1
  4242b0:	add    DWORD PTR [rbp-0x84],eax
  4242b6:	mov    rax,QWORD PTR [rbp-0x30]
  4242ba:	mov    rdx,QWORD PTR [rbp-0x28]
  4242be:	mov    rdi,QWORD PTR [rbp-0x40]
  4242c2:	mov    rsi,QWORD PTR [rbp-0x38]
  4242c6:	mov    rcx,rdx
  4242c9:	mov    rdx,rax
  4242cc:	call   423c53 <flatcc_verify_union_vector_field@@Base+0x2058>
  4242d1:	mov    QWORD PTR [rbp-0x40],rax
  4242d5:	mov    QWORD PTR [rbp-0x38],rdx
  4242d9:	cmp    DWORD PTR [rbp-0x84],0x0
  4242e0:	setne  al
  4242e3:	movzx  edx,al
  4242e6:	mov    eax,DWORD PTR [rbp-0x78]
  4242e9:	add    eax,edx
  4242eb:	add    DWORD PTR [rbp-0x84],eax
  4242f1:	mov    eax,DWORD PTR [rbp-0x38]
  4242f4:	mov    DWORD PTR [rbp-0x5c],eax
  4242f7:	mov    rdx,QWORD PTR [rbp-0x40]
  4242fb:	mov    rax,QWORD PTR [rbp-0x38]
  4242ff:	mov    rdi,rdx
  424302:	mov    rsi,rax
  424305:	call   423d47 <flatcc_verify_union_vector_field@@Base+0x214c>
  42430a:	mov    QWORD PTR [rbp-0x40],rax
  42430e:	mov    QWORD PTR [rbp-0x38],rdx
  424312:	mov    eax,DWORD PTR [rbp-0x38]
  424315:	mov    edx,DWORD PTR [rbp-0x5c]
  424318:	sub    edx,eax
  42431a:	mov    eax,edx
  42431c:	mov    ecx,eax
  42431e:	shl    DWORD PTR [rbp-0x84],cl
  424324:	mov    edx,DWORD PTR [rbp-0x38]
  424327:	mov    eax,DWORD PTR [rbp-0x70]
  42432a:	add    eax,edx
  42432c:	mov    DWORD PTR [rbp-0x58],eax
  42432f:	mov    edx,DWORD PTR [rbp-0x70]
  424332:	mov    eax,DWORD PTR [rbp-0x74]
  424335:	add    eax,edx
  424337:	cmp    eax,DWORD PTR [rbp-0x58]
  42433a:	jle    424353 <grisu3_diy_fp_encode_double@@Base+0x231>
  42433c:	mov    eax,DWORD PTR [rbp-0x58]
  42433f:	cmp    eax,DWORD PTR [rbp-0x74]
  424342:	jle    42434c <grisu3_diy_fp_encode_double@@Base+0x22a>
  424344:	mov    eax,DWORD PTR [rbp-0x58]
  424347:	sub    eax,DWORD PTR [rbp-0x74]
  42434a:	jmp    424356 <grisu3_diy_fp_encode_double@@Base+0x234>
  42434c:	mov    eax,0x0
  424351:	jmp    424356 <grisu3_diy_fp_encode_double@@Base+0x234>
  424353:	mov    eax,DWORD PTR [rbp-0x70]
  424356:	mov    DWORD PTR [rbp-0x58],eax
  424359:	mov    eax,DWORD PTR [rbp-0x70]
  42435c:	sub    eax,DWORD PTR [rbp-0x58]
  42435f:	mov    DWORD PTR [rbp-0x80],eax
  424362:	mov    edx,DWORD PTR [rbp-0x80]
  424365:	mov    eax,DWORD PTR [rbp-0x7c]
  424368:	add    eax,edx
  42436a:	cmp    eax,DWORD PTR [rbp-0x70]
  42436d:	jl     4243bd <grisu3_diy_fp_encode_double@@Base+0x29b>
  42436f:	mov    edx,DWORD PTR [rbp-0x80]
  424372:	mov    eax,DWORD PTR [rbp-0x7c]
  424375:	add    eax,edx
  424377:	sub    eax,DWORD PTR [rbp-0x70]
  42437a:	sub    eax,0x1
  42437d:	mov    DWORD PTR [rbp-0x54],eax
  424380:	mov    rdx,QWORD PTR [rbp-0x40]
  424384:	mov    eax,DWORD PTR [rbp-0x54]
  424387:	shrx   rax,rdx,rax
  42438c:	mov    QWORD PTR [rbp-0x40],rax
  424390:	mov    edx,DWORD PTR [rbp-0x38]
  424393:	mov    eax,DWORD PTR [rbp-0x54]
  424396:	add    eax,edx
  424398:	mov    DWORD PTR [rbp-0x38],eax
  42439b:	mov    eax,DWORD PTR [rbp-0x54]
  42439e:	mov    edx,DWORD PTR [rbp-0x84]
  4243a4:	sarx   eax,edx,eax
  4243a9:	lea    edx,[rax+0x1]
  4243ac:	mov    eax,DWORD PTR [rbp-0x78]
  4243af:	add    eax,edx
  4243b1:	mov    DWORD PTR [rbp-0x84],eax
  4243b7:	mov    eax,DWORD PTR [rbp-0x54]
  4243ba:	sub    DWORD PTR [rbp-0x80],eax
  4243bd:	mov    rdx,QWORD PTR [rbp-0x40]
  4243c1:	mov    eax,DWORD PTR [rbp-0x80]
  4243c4:	shrx   rax,rdx,rax
  4243c9:	mov    QWORD PTR [rbp-0x20],rax
  4243cd:	mov    edx,DWORD PTR [rbp-0x38]
  4243d0:	mov    eax,DWORD PTR [rbp-0x80]
  4243d3:	add    eax,edx
  4243d5:	mov    DWORD PTR [rbp-0x18],eax
  4243d8:	mov    rax,QWORD PTR [rbp-0x40]
  4243dc:	mov    edx,DWORD PTR [rbp-0x80]
  4243df:	sub    edx,0x1
  4243e2:	mov    ecx,0x1
  4243e7:	shlx   rdx,rcx,rdx
  4243ec:	and    rax,rdx
  4243ef:	mov    edx,eax
  4243f1:	mov    eax,DWORD PTR [rbp-0x78]
  4243f4:	cdqe   
  4243f6:	imul   eax,edx
  4243f9:	mov    DWORD PTR [rbp-0x50],eax
  4243fc:	mov    eax,DWORD PTR [rbp-0x78]
  4243ff:	movsxd rdx,eax
  424402:	mov    eax,DWORD PTR [rbp-0x80]
  424405:	sub    eax,0x1
  424408:	shlx   rax,rdx,rax
  42440d:	mov    DWORD PTR [rbp-0x4c],eax
  424410:	mov    edx,DWORD PTR [rbp-0x4c]
  424413:	mov    eax,DWORD PTR [rbp-0x84]
  424419:	add    eax,edx
  42441b:	cmp    eax,DWORD PTR [rbp-0x80]
  42441e:	jg     424453 <grisu3_diy_fp_encode_double@@Base+0x331>
  424420:	mov    rax,QWORD PTR [rbp-0x20]
  424424:	add    rax,0x1
  424428:	mov    QWORD PTR [rbp-0x20],rax
  42442c:	mov    rax,QWORD PTR [rbp-0x20]
  424430:	mov    rdx,QWORD PTR [rbp-0x48]
  424434:	add    rdx,rdx
  424437:	and    rax,rdx
  42443a:	test   rax,rax
  42443d:	je     424453 <grisu3_diy_fp_encode_double@@Base+0x331>
  42443f:	mov    rax,QWORD PTR [rbp-0x20]
  424443:	shr    rax,1
  424446:	mov    QWORD PTR [rbp-0x20],rax
  42444a:	mov    eax,DWORD PTR [rbp-0x18]
  42444d:	add    eax,0x1
  424450:	mov    DWORD PTR [rbp-0x18],eax
  424453:	mov    rdx,QWORD PTR [rbp-0x20]
  424457:	mov    rax,QWORD PTR [rbp-0x18]
  42445b:	mov    rdi,rdx
  42445e:	mov    rsi,rax
  424461:	call   423e6e <flatcc_verify_union_vector_field@@Base+0x2273>
  424466:	vmovq  rdx,xmm0
  42446b:	mov    rax,QWORD PTR [rbp-0xb0]
  424472:	mov    QWORD PTR [rax],rdx
  424475:	mov    eax,DWORD PTR [rbp-0x4c]
  424478:	sub    eax,DWORD PTR [rbp-0x84]
  42447e:	cmp    eax,DWORD PTR [rbp-0x50]
  424481:	jge    424493 <grisu3_diy_fp_encode_double@@Base+0x371>
  424483:	mov    edx,DWORD PTR [rbp-0x4c]
  424486:	mov    eax,DWORD PTR [rbp-0x84]
  42448c:	add    eax,edx
  42448e:	cmp    eax,DWORD PTR [rbp-0x50]
  424491:	jg     42449a <grisu3_diy_fp_encode_double@@Base+0x378>
  424493:	mov    eax,0x1
  424498:	jmp    42449f <grisu3_diy_fp_encode_double@@Base+0x37d>
  42449a:	mov    eax,0x0
  42449f:	mov    rcx,QWORD PTR [rbp-0x8]
  4244a3:	xor    rcx,QWORD PTR fs:0x28
  4244ac:	je     4244b3 <grisu3_diy_fp_encode_double@@Base+0x391>
  4244ae:	call   405070 <__stack_chk_fail@plt>
  4244b3:	leave  
  4244b4:	ret    
  4244b5:	push   rbp
  4244b6:	mov    rbp,rsp
  4244b9:	sub    rsp,0x50
  4244bd:	mov    QWORD PTR [rbp-0x28],rdi
  4244c1:	mov    QWORD PTR [rbp-0x30],rsi
  4244c5:	mov    DWORD PTR [rbp-0x34],edx
  4244c8:	mov    QWORD PTR [rbp-0x40],rcx
  4244cc:	mov    DWORD PTR [rbp-0x38],r8d
  4244d0:	mov    DWORD PTR [rbp-0x44],r9d
  4244d4:	mov    rax,QWORD PTR [rbp+0x18]
  4244d8:	mov    QWORD PTR [rbp-0x50],rax
  4244dc:	mov    rax,QWORD PTR fs:0x28
  4244e5:	mov    QWORD PTR [rbp-0x8],rax
  4244e9:	xor    eax,eax
  4244eb:	mov    DWORD PTR [rbp-0x20],0x135
  4244f2:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  4244f9:	cmp    QWORD PTR [rbp-0x40],0x0
  4244fe:	je     424508 <grisu3_diy_fp_encode_double@@Base+0x3e6>
  424500:	mov    eax,DWORD PTR [rbp-0x38]
  424503:	cmp    eax,DWORD PTR [rbp-0x1c]
  424506:	jge    424519 <grisu3_diy_fp_encode_double@@Base+0x3f7>
  424508:	mov    rax,QWORD PTR [rbp-0x50]
  42450c:	vxorpd xmm0,xmm0,xmm0
  424510:	vmovsd QWORD PTR [rax],xmm0
  424514:	jmp    424acb <grisu3_diy_fp_encode_double@@Base+0x9a9>
  424519:	mov    eax,DWORD PTR [rbp-0x38]
  42451c:	sub    eax,0x1
  42451f:	cmp    eax,DWORD PTR [rbp-0x20]
  424522:	jle    424544 <grisu3_diy_fp_encode_double@@Base+0x422>
  424524:	movabs rdi,0x7ff0000000000000
  42452e:	call   423ac2 <flatcc_verify_union_vector_field@@Base+0x1ec7>
  424533:	vmovq  rdx,xmm0
  424538:	mov    rax,QWORD PTR [rbp-0x50]
  42453c:	mov    QWORD PTR [rax],rdx
  42453f:	jmp    424acb <grisu3_diy_fp_encode_double@@Base+0x9a9>
  424544:	movabs rax,0x1fffffffffffff
  42454e:	cmp    QWORD PTR [rbp-0x40],rax
  424552:	ja     424a75 <grisu3_diy_fp_encode_double@@Base+0x953>
  424558:	cmp    DWORD PTR [rbp-0x38],0x0
  42455c:	js     424a75 <grisu3_diy_fp_encode_double@@Base+0x953>
  424562:	cmp    DWORD PTR [rbp-0x38],0x16
  424566:	jg     424a75 <grisu3_diy_fp_encode_double@@Base+0x953>
  42456c:	mov    rax,QWORD PTR [rbp-0x40]
  424570:	test   rax,rax
  424573:	js     424580 <grisu3_diy_fp_encode_double@@Base+0x45e>
  424575:	vxorpd xmm0,xmm0,xmm0
  424579:	vcvtsi2sd xmm0,xmm0,rax
  42457e:	jmp    424599 <grisu3_diy_fp_encode_double@@Base+0x477>
  424580:	mov    rdx,rax
  424583:	shr    rdx,1
  424586:	and    eax,0x1
  424589:	or     rdx,rax
  42458c:	vxorpd xmm0,xmm0,xmm0
  424590:	vcvtsi2sd xmm0,xmm0,rdx
  424595:	vaddsd xmm0,xmm0,xmm0
  424599:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42459e:	mov    eax,DWORD PTR [rbp-0x38]
  4245a1:	sub    eax,DWORD PTR [rbp-0x44]
  4245a4:	add    eax,0x16
  4245a7:	cmp    eax,0x2c
  4245aa:	ja     424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4245b0:	mov    eax,eax
  4245b2:	lea    rdx,[rax*4+0x0]
  4245ba:	lea    rax,[rip+0x1569b]        # 439c5c <flatcc_builder_padding_base@@Base+0x19fc>
  4245c1:	mov    eax,DWORD PTR [rdx+rax*1]
  4245c4:	movsxd rdx,eax
  4245c7:	lea    rax,[rip+0x1568e]        # 439c5c <flatcc_builder_padding_base@@Base+0x19fc>
  4245ce:	add    rax,rdx
  4245d1:	jmp    rax
  4245d3:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4245d8:	vmovsd xmm1,QWORD PTR [rip+0x163c0]        # 43a9a0 <flatcc_builder_padding_base@@Base+0x2740>
  4245e0:	vdivsd xmm0,xmm0,xmm1
  4245e4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4245e9:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4245ee:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4245f3:	vmovsd xmm1,QWORD PTR [rip+0x163ad]        # 43a9a8 <flatcc_builder_padding_base@@Base+0x2748>
  4245fb:	vdivsd xmm0,xmm0,xmm1
  4245ff:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424604:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424609:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42460e:	vmovsd xmm1,QWORD PTR [rip+0x1639a]        # 43a9b0 <flatcc_builder_padding_base@@Base+0x2750>
  424616:	vdivsd xmm0,xmm0,xmm1
  42461a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42461f:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424624:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424629:	vmovsd xmm1,QWORD PTR [rip+0x16387]        # 43a9b8 <flatcc_builder_padding_base@@Base+0x2758>
  424631:	vdivsd xmm0,xmm0,xmm1
  424635:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42463a:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42463f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424644:	vmovsd xmm1,QWORD PTR [rip+0x16374]        # 43a9c0 <flatcc_builder_padding_base@@Base+0x2760>
  42464c:	vdivsd xmm0,xmm0,xmm1
  424650:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424655:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42465a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42465f:	vmovsd xmm1,QWORD PTR [rip+0x16361]        # 43a9c8 <flatcc_builder_padding_base@@Base+0x2768>
  424667:	vdivsd xmm0,xmm0,xmm1
  42466b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424670:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424675:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42467a:	vmovsd xmm1,QWORD PTR [rip+0x1634e]        # 43a9d0 <flatcc_builder_padding_base@@Base+0x2770>
  424682:	vdivsd xmm0,xmm0,xmm1
  424686:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42468b:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424690:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424695:	vmovsd xmm1,QWORD PTR [rip+0x1633b]        # 43a9d8 <flatcc_builder_padding_base@@Base+0x2778>
  42469d:	vdivsd xmm0,xmm0,xmm1
  4246a1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4246a6:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4246ab:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4246b0:	vmovsd xmm1,QWORD PTR [rip+0x16328]        # 43a9e0 <flatcc_builder_padding_base@@Base+0x2780>
  4246b8:	vdivsd xmm0,xmm0,xmm1
  4246bc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4246c1:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4246c6:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4246cb:	vmovsd xmm1,QWORD PTR [rip+0x16315]        # 43a9e8 <flatcc_builder_padding_base@@Base+0x2788>
  4246d3:	vdivsd xmm0,xmm0,xmm1
  4246d7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4246dc:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4246e1:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4246e6:	vmovsd xmm1,QWORD PTR [rip+0x16302]        # 43a9f0 <flatcc_builder_padding_base@@Base+0x2790>
  4246ee:	vdivsd xmm0,xmm0,xmm1
  4246f2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4246f7:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4246fc:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424701:	vmovsd xmm1,QWORD PTR [rip+0x162ef]        # 43a9f8 <flatcc_builder_padding_base@@Base+0x2798>
  424709:	vdivsd xmm0,xmm0,xmm1
  42470d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424712:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424717:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42471c:	vmovsd xmm1,QWORD PTR [rip+0x162dc]        # 43aa00 <flatcc_builder_padding_base@@Base+0x27a0>
  424724:	vdivsd xmm0,xmm0,xmm1
  424728:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42472d:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424732:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424737:	vmovsd xmm1,QWORD PTR [rip+0x162c9]        # 43aa08 <flatcc_builder_padding_base@@Base+0x27a8>
  42473f:	vdivsd xmm0,xmm0,xmm1
  424743:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424748:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42474d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424752:	vmovsd xmm1,QWORD PTR [rip+0x162b6]        # 43aa10 <flatcc_builder_padding_base@@Base+0x27b0>
  42475a:	vdivsd xmm0,xmm0,xmm1
  42475e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424763:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424768:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42476d:	vmovsd xmm1,QWORD PTR [rip+0x162a3]        # 43aa18 <flatcc_builder_padding_base@@Base+0x27b8>
  424775:	vdivsd xmm0,xmm0,xmm1
  424779:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42477e:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424783:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424788:	vmovsd xmm1,QWORD PTR [rip+0x16290]        # 43aa20 <flatcc_builder_padding_base@@Base+0x27c0>
  424790:	vdivsd xmm0,xmm0,xmm1
  424794:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424799:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42479e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4247a3:	vmovsd xmm1,QWORD PTR [rip+0x1627d]        # 43aa28 <flatcc_builder_padding_base@@Base+0x27c8>
  4247ab:	vdivsd xmm0,xmm0,xmm1
  4247af:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4247b4:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4247b9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4247be:	vmovsd xmm1,QWORD PTR [rip+0x1626a]        # 43aa30 <flatcc_builder_padding_base@@Base+0x27d0>
  4247c6:	vdivsd xmm0,xmm0,xmm1
  4247ca:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4247cf:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4247d4:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4247d9:	vmovsd xmm1,QWORD PTR [rip+0x16257]        # 43aa38 <flatcc_builder_padding_base@@Base+0x27d8>
  4247e1:	vdivsd xmm0,xmm0,xmm1
  4247e5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4247ea:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4247ef:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4247f4:	vmovsd xmm1,QWORD PTR [rip+0x16244]        # 43aa40 <flatcc_builder_padding_base@@Base+0x27e0>
  4247fc:	vdivsd xmm0,xmm0,xmm1
  424800:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424805:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42480a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42480f:	vmovsd xmm1,QWORD PTR [rip+0x16231]        # 43aa48 <flatcc_builder_padding_base@@Base+0x27e8>
  424817:	vdivsd xmm0,xmm0,xmm1
  42481b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424820:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424825:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42482a:	vmovsd xmm0,QWORD PTR [rip+0x16216]        # 43aa48 <flatcc_builder_padding_base@@Base+0x27e8>
  424832:	vmulsd xmm0,xmm1,xmm0
  424836:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42483b:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424840:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424845:	vmovsd xmm0,QWORD PTR [rip+0x161f3]        # 43aa40 <flatcc_builder_padding_base@@Base+0x27e0>
  42484d:	vmulsd xmm0,xmm1,xmm0
  424851:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424856:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42485b:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424860:	vmovsd xmm0,QWORD PTR [rip+0x161d0]        # 43aa38 <flatcc_builder_padding_base@@Base+0x27d8>
  424868:	vmulsd xmm0,xmm1,xmm0
  42486c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424871:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424876:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42487b:	vmovsd xmm0,QWORD PTR [rip+0x161ad]        # 43aa30 <flatcc_builder_padding_base@@Base+0x27d0>
  424883:	vmulsd xmm0,xmm1,xmm0
  424887:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42488c:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424891:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424896:	vmovsd xmm0,QWORD PTR [rip+0x1618a]        # 43aa28 <flatcc_builder_padding_base@@Base+0x27c8>
  42489e:	vmulsd xmm0,xmm1,xmm0
  4248a2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4248a7:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4248ac:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4248b1:	vmovsd xmm0,QWORD PTR [rip+0x16167]        # 43aa20 <flatcc_builder_padding_base@@Base+0x27c0>
  4248b9:	vmulsd xmm0,xmm1,xmm0
  4248bd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4248c2:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4248c7:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4248cc:	vmovsd xmm0,QWORD PTR [rip+0x16144]        # 43aa18 <flatcc_builder_padding_base@@Base+0x27b8>
  4248d4:	vmulsd xmm0,xmm1,xmm0
  4248d8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4248dd:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4248e2:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4248e7:	vmovsd xmm0,QWORD PTR [rip+0x16121]        # 43aa10 <flatcc_builder_padding_base@@Base+0x27b0>
  4248ef:	vmulsd xmm0,xmm1,xmm0
  4248f3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4248f8:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4248fd:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424902:	vmovsd xmm0,QWORD PTR [rip+0x160fe]        # 43aa08 <flatcc_builder_padding_base@@Base+0x27a8>
  42490a:	vmulsd xmm0,xmm1,xmm0
  42490e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424913:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424918:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42491d:	vmovsd xmm0,QWORD PTR [rip+0x160db]        # 43aa00 <flatcc_builder_padding_base@@Base+0x27a0>
  424925:	vmulsd xmm0,xmm1,xmm0
  424929:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42492e:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424933:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424938:	vmovsd xmm0,QWORD PTR [rip+0x160b8]        # 43a9f8 <flatcc_builder_padding_base@@Base+0x2798>
  424940:	vmulsd xmm0,xmm1,xmm0
  424944:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424949:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42494e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424953:	vmovsd xmm0,QWORD PTR [rip+0x16095]        # 43a9f0 <flatcc_builder_padding_base@@Base+0x2790>
  42495b:	vmulsd xmm0,xmm1,xmm0
  42495f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424964:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424969:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42496e:	vmovsd xmm0,QWORD PTR [rip+0x16072]        # 43a9e8 <flatcc_builder_padding_base@@Base+0x2788>
  424976:	vmulsd xmm0,xmm1,xmm0
  42497a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42497f:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424984:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424989:	vmovsd xmm0,QWORD PTR [rip+0x1604f]        # 43a9e0 <flatcc_builder_padding_base@@Base+0x2780>
  424991:	vmulsd xmm0,xmm1,xmm0
  424995:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42499a:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  42499f:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4249a4:	vmovsd xmm0,QWORD PTR [rip+0x1602c]        # 43a9d8 <flatcc_builder_padding_base@@Base+0x2778>
  4249ac:	vmulsd xmm0,xmm1,xmm0
  4249b0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4249b5:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4249ba:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4249bf:	vmovsd xmm0,QWORD PTR [rip+0x16009]        # 43a9d0 <flatcc_builder_padding_base@@Base+0x2770>
  4249c7:	vmulsd xmm0,xmm1,xmm0
  4249cb:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4249d0:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4249d5:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4249da:	vmovsd xmm0,QWORD PTR [rip+0x15fe6]        # 43a9c8 <flatcc_builder_padding_base@@Base+0x2768>
  4249e2:	vmulsd xmm0,xmm1,xmm0
  4249e6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4249eb:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  4249ed:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4249f2:	vmovsd xmm0,QWORD PTR [rip+0x15fc6]        # 43a9c0 <flatcc_builder_padding_base@@Base+0x2760>
  4249fa:	vmulsd xmm0,xmm1,xmm0
  4249fe:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424a03:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424a05:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424a0a:	vmovsd xmm0,QWORD PTR [rip+0x15fa6]        # 43a9b8 <flatcc_builder_padding_base@@Base+0x2758>
  424a12:	vmulsd xmm0,xmm1,xmm0
  424a16:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424a1b:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424a1d:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424a22:	vmovsd xmm0,QWORD PTR [rip+0x15f86]        # 43a9b0 <flatcc_builder_padding_base@@Base+0x2750>
  424a2a:	vmulsd xmm0,xmm1,xmm0
  424a2e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424a33:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424a35:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424a3a:	vmovsd xmm0,QWORD PTR [rip+0x15f66]        # 43a9a8 <flatcc_builder_padding_base@@Base+0x2748>
  424a42:	vmulsd xmm0,xmm1,xmm0
  424a46:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424a4b:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424a4d:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  424a52:	vmovsd xmm0,QWORD PTR [rip+0x15f46]        # 43a9a0 <flatcc_builder_padding_base@@Base+0x2740>
  424a5a:	vmulsd xmm0,xmm1,xmm0
  424a5e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  424a63:	jmp    424a66 <grisu3_diy_fp_encode_double@@Base+0x944>
  424a65:	nop
  424a66:	mov    rax,QWORD PTR [rbp-0x50]
  424a6a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  424a6f:	vmovsd QWORD PTR [rax],xmm0
  424a73:	jmp    424acb <grisu3_diy_fp_encode_double@@Base+0x9a9>
  424a75:	mov    rcx,QWORD PTR [rbp-0x50]
  424a79:	mov    edx,DWORD PTR [rbp-0x44]
  424a7c:	mov    esi,DWORD PTR [rbp-0x38]
  424a7f:	mov    rax,QWORD PTR [rbp-0x40]
  424a83:	mov    r8,rcx
  424a86:	mov    ecx,DWORD PTR [rbp+0x10]
  424a89:	mov    rdi,rax
  424a8c:	call   424122 <grisu3_diy_fp_encode_double@@Base>
  424a91:	test   eax,eax
  424a93:	jne    424aca <grisu3_diy_fp_encode_double@@Base+0x9a8>
  424a95:	lea    rdx,[rbp-0x18]
  424a99:	mov    rax,QWORD PTR [rbp-0x28]
  424a9d:	mov    rsi,rdx
  424aa0:	mov    rdi,rax
  424aa3:	call   405050 <strtod@plt>
  424aa8:	vmovq  rdx,xmm0
  424aad:	mov    rax,QWORD PTR [rbp-0x50]
  424ab1:	mov    QWORD PTR [rax],rdx
  424ab4:	mov    rax,QWORD PTR [rbp-0x18]
  424ab8:	cmp    rax,QWORD PTR [rbp-0x30]
  424abc:	jae    424ac4 <grisu3_diy_fp_encode_double@@Base+0x9a2>
  424abe:	mov    rax,QWORD PTR [rbp-0x18]
  424ac2:	jmp    424af1 <grisu3_diy_fp_encode_double@@Base+0x9cf>
  424ac4:	mov    rax,QWORD PTR [rbp-0x30]
  424ac8:	jmp    424af1 <grisu3_diy_fp_encode_double@@Base+0x9cf>
  424aca:	nop
  424acb:	cmp    DWORD PTR [rbp-0x34],0x0
  424acf:	je     424aed <grisu3_diy_fp_encode_double@@Base+0x9cb>
  424ad1:	mov    rax,QWORD PTR [rbp-0x50]
  424ad5:	vmovsd xmm1,QWORD PTR [rax]
  424ad9:	vmovsd xmm0,QWORD PTR [rip+0x15e9f]        # 43a980 <flatcc_builder_padding_base@@Base+0x2720>
  424ae1:	vxorpd xmm0,xmm0,xmm1
  424ae5:	mov    rax,QWORD PTR [rbp-0x50]
  424ae9:	vmovsd QWORD PTR [rax],xmm0
  424aed:	mov    rax,QWORD PTR [rbp-0x30]
  424af1:	mov    rcx,QWORD PTR [rbp-0x8]
  424af5:	xor    rcx,QWORD PTR fs:0x28
  424afe:	je     424b05 <grisu3_diy_fp_encode_double@@Base+0x9e3>
  424b00:	call   405070 <__stack_chk_fail@plt>
  424b05:	leave  
  424b06:	ret    
  424b07:	push   rbp
  424b08:	mov    rbp,rsp
  424b0b:	mov    QWORD PTR [rbp-0x8],rdi
  424b0f:	mov    QWORD PTR [rbp-0x10],rsi
  424b13:	mov    DWORD PTR [rbp-0x14],edx
  424b16:	mov    QWORD PTR [rbp-0x20],rcx
  424b1a:	mov    rax,QWORD PTR [rbp-0x20]
  424b1e:	vxorpd xmm0,xmm0,xmm0
  424b22:	vmovsd QWORD PTR [rax],xmm0
  424b26:	mov    rax,QWORD PTR [rbp-0x8]
  424b2a:	pop    rbp
  424b2b:	ret    
  424b2c:	push   rbp
  424b2d:	mov    rbp,rsp
  424b30:	sub    rsp,0x60
  424b34:	mov    QWORD PTR [rbp-0x48],rdi
  424b38:	mov    DWORD PTR [rbp-0x4c],esi
  424b3b:	mov    QWORD PTR [rbp-0x58],rdx
  424b3f:	mov    DWORD PTR [rbp-0x38],0x0
  424b46:	mov    DWORD PTR [rbp-0x34],0x0
  424b4d:	mov    QWORD PTR [rbp-0x18],0x0
  424b55:	mov    DWORD PTR [rbp-0x30],0x0
  424b5c:	mov    DWORD PTR [rbp-0x2c],0x0
  424b63:	mov    DWORD PTR [rbp-0x28],0x0
  424b6a:	mov    DWORD PTR [rbp-0x24],0x0
  424b71:	mov    rax,QWORD PTR [rbp-0x58]
  424b75:	vxorpd xmm0,xmm0,xmm0
  424b79:	vmovsd QWORD PTR [rax],xmm0
  424b7d:	mov    eax,DWORD PTR [rbp-0x4c]
  424b80:	cdqe   
  424b82:	lea    rdx,[rax+0x1]
  424b86:	mov    rax,QWORD PTR [rbp-0x48]
  424b8a:	add    rax,rdx
  424b8d:	mov    QWORD PTR [rbp-0x20],rax
  424b91:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  424b98:	jle    424ba8 <grisu3_diy_fp_encode_double@@Base+0xa86>
  424b9a:	mov    rax,QWORD PTR [rbp-0x48]
  424b9e:	add    rax,0x3e9
  424ba4:	mov    QWORD PTR [rbp-0x20],rax
  424ba8:	mov    rax,QWORD PTR [rbp-0x48]
  424bac:	cmp    rax,QWORD PTR [rbp-0x20]
  424bb0:	jne    424bbb <grisu3_diy_fp_encode_double@@Base+0xa99>
  424bb2:	mov    rax,QWORD PTR [rbp-0x48]
  424bb6:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424bbb:	mov    rax,QWORD PTR [rbp-0x48]
  424bbf:	mov    QWORD PTR [rbp-0x10],rax
  424bc3:	mov    rax,QWORD PTR [rbp-0x48]
  424bc7:	movzx  eax,BYTE PTR [rax]
  424bca:	cmp    al,0x2d
  424bcc:	jne    424bee <grisu3_diy_fp_encode_double@@Base+0xacc>
  424bce:	add    QWORD PTR [rbp-0x48],0x1
  424bd3:	mov    DWORD PTR [rbp-0x38],0x1
  424bda:	mov    rax,QWORD PTR [rbp-0x48]
  424bde:	cmp    rax,QWORD PTR [rbp-0x20]
  424be2:	jne    424bee <grisu3_diy_fp_encode_double@@Base+0xacc>
  424be4:	mov    eax,0x0
  424be9:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424bee:	mov    rax,QWORD PTR [rbp-0x48]
  424bf2:	movzx  eax,BYTE PTR [rax]
  424bf5:	cmp    al,0x30
  424bf7:	jne    424c69 <grisu3_diy_fp_encode_double@@Base+0xb47>
  424bf9:	add    QWORD PTR [rbp-0x48],0x1
  424bfe:	mov    rax,QWORD PTR [rbp-0x48]
  424c02:	cmp    rax,QWORD PTR [rbp-0x20]
  424c06:	je     424c52 <grisu3_diy_fp_encode_double@@Base+0xb30>
  424c08:	mov    rax,QWORD PTR [rbp-0x48]
  424c0c:	movzx  eax,BYTE PTR [rax]
  424c0f:	or     eax,0x20
  424c12:	cmp    al,0x78
  424c14:	jne    424c52 <grisu3_diy_fp_encode_double@@Base+0xb30>
  424c16:	mov    rcx,QWORD PTR [rbp-0x58]
  424c1a:	mov    edx,DWORD PTR [rbp-0x38]
  424c1d:	mov    rsi,QWORD PTR [rbp-0x20]
  424c21:	mov    rax,QWORD PTR [rbp-0x48]
  424c25:	mov    rdi,rax
  424c28:	call   424b07 <grisu3_diy_fp_encode_double@@Base+0x9e5>
  424c2d:	mov    QWORD PTR [rbp-0x8],rax
  424c31:	mov    rax,QWORD PTR [rbp-0x8]
  424c35:	cmp    rax,QWORD PTR [rbp-0x48]
  424c39:	jne    424c44 <grisu3_diy_fp_encode_double@@Base+0xb22>
  424c3b:	mov    rax,QWORD PTR [rbp-0x10]
  424c3f:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424c44:	mov    rax,QWORD PTR [rbp-0x8]
  424c48:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424c4d:	add    QWORD PTR [rbp-0x48],0x1
  424c52:	mov    rax,QWORD PTR [rbp-0x48]
  424c56:	cmp    rax,QWORD PTR [rbp-0x20]
  424c5a:	je     424cb3 <grisu3_diy_fp_encode_double@@Base+0xb91>
  424c5c:	mov    rax,QWORD PTR [rbp-0x48]
  424c60:	movzx  eax,BYTE PTR [rax]
  424c63:	cmp    al,0x30
  424c65:	je     424c4d <grisu3_diy_fp_encode_double@@Base+0xb2b>
  424c67:	jmp    424cb3 <grisu3_diy_fp_encode_double@@Base+0xb91>
  424c69:	mov    rax,QWORD PTR [rbp-0x48]
  424c6d:	movzx  eax,BYTE PTR [rax]
  424c70:	cmp    al,0x30
  424c72:	jle    424c7f <grisu3_diy_fp_encode_double@@Base+0xb5d>
  424c74:	mov    rax,QWORD PTR [rbp-0x48]
  424c78:	movzx  eax,BYTE PTR [rax]
  424c7b:	cmp    al,0x39
  424c7d:	jle    424c98 <grisu3_diy_fp_encode_double@@Base+0xb76>
  424c7f:	cmp    DWORD PTR [rbp-0x38],0x0
  424c83:	jne    424c8e <grisu3_diy_fp_encode_double@@Base+0xb6c>
  424c85:	mov    rax,QWORD PTR [rbp-0x10]
  424c89:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424c8e:	mov    eax,0x0
  424c93:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424c98:	mov    rax,QWORD PTR [rbp-0x48]
  424c9c:	lea    rdx,[rax+0x1]
  424ca0:	mov    QWORD PTR [rbp-0x48],rdx
  424ca4:	movzx  eax,BYTE PTR [rax]
  424ca7:	movsx  eax,al
  424caa:	sub    eax,0x30
  424cad:	cdqe   
  424caf:	mov    QWORD PTR [rbp-0x18],rax
  424cb3:	mov    rax,QWORD PTR [rbp-0x48]
  424cb7:	mov    QWORD PTR [rbp-0x8],rax
  424cbb:	jmp    424d1b <grisu3_diy_fp_encode_double@@Base+0xbf9>
  424cbd:	movabs rax,0x1999999999999998
  424cc7:	cmp    QWORD PTR [rbp-0x18],rax
  424ccb:	jbe    424ce9 <grisu3_diy_fp_encode_double@@Base+0xbc7>
  424ccd:	mov    rax,QWORD PTR [rbp-0x48]
  424cd1:	movzx  eax,BYTE PTR [rax]
  424cd4:	cmp    al,0x34
  424cd6:	setg   al
  424cd9:	movzx  eax,al
  424cdc:	add    QWORD PTR [rbp-0x18],rax
  424ce0:	mov    DWORD PTR [rbp-0x24],0x1
  424ce7:	jmp    424d3b <grisu3_diy_fp_encode_double@@Base+0xc19>
  424ce9:	mov    rdx,QWORD PTR [rbp-0x18]
  424ced:	mov    rax,rdx
  424cf0:	shl    rax,0x2
  424cf4:	add    rax,rdx
  424cf7:	add    rax,rax
  424cfa:	mov    rcx,rax
  424cfd:	mov    rax,QWORD PTR [rbp-0x48]
  424d01:	lea    rdx,[rax+0x1]
  424d05:	mov    QWORD PTR [rbp-0x48],rdx
  424d09:	movzx  eax,BYTE PTR [rax]
  424d0c:	movsx  rax,al
  424d10:	add    rax,rcx
  424d13:	sub    rax,0x30
  424d17:	mov    QWORD PTR [rbp-0x18],rax
  424d1b:	mov    rax,QWORD PTR [rbp-0x48]
  424d1f:	cmp    rax,QWORD PTR [rbp-0x20]
  424d23:	je     424d3b <grisu3_diy_fp_encode_double@@Base+0xc19>
  424d25:	mov    rax,QWORD PTR [rbp-0x48]
  424d29:	movzx  eax,BYTE PTR [rax]
  424d2c:	cmp    al,0x2f
  424d2e:	jle    424d3b <grisu3_diy_fp_encode_double@@Base+0xc19>
  424d30:	mov    rax,QWORD PTR [rbp-0x48]
  424d34:	movzx  eax,BYTE PTR [rax]
  424d37:	cmp    al,0x39
  424d39:	jle    424cbd <grisu3_diy_fp_encode_double@@Base+0xb9b>
  424d3b:	mov    rdx,QWORD PTR [rbp-0x48]
  424d3f:	mov    rax,QWORD PTR [rbp-0x8]
  424d43:	sub    rdx,rax
  424d46:	mov    rax,rdx
  424d49:	mov    DWORD PTR [rbp-0x28],eax
  424d4c:	jmp    424d57 <grisu3_diy_fp_encode_double@@Base+0xc35>
  424d4e:	add    DWORD PTR [rbp-0x30],0x1
  424d52:	add    QWORD PTR [rbp-0x48],0x1
  424d57:	mov    rax,QWORD PTR [rbp-0x48]
  424d5b:	cmp    rax,QWORD PTR [rbp-0x20]
  424d5f:	je     424d6c <grisu3_diy_fp_encode_double@@Base+0xc4a>
  424d61:	mov    rax,QWORD PTR [rbp-0x48]
  424d65:	movzx  eax,BYTE PTR [rax]
  424d68:	cmp    al,0x30
  424d6a:	je     424d4e <grisu3_diy_fp_encode_double@@Base+0xc2c>
  424d6c:	mov    rax,QWORD PTR [rbp-0x48]
  424d70:	cmp    rax,QWORD PTR [rbp-0x20]
  424d74:	je     424dc7 <grisu3_diy_fp_encode_double@@Base+0xca5>
  424d76:	mov    rax,QWORD PTR [rbp-0x48]
  424d7a:	movzx  eax,BYTE PTR [rax]
  424d7d:	cmp    al,0x30
  424d7f:	jle    424dc7 <grisu3_diy_fp_encode_double@@Base+0xca5>
  424d81:	mov    rax,QWORD PTR [rbp-0x48]
  424d85:	movzx  eax,BYTE PTR [rax]
  424d88:	cmp    al,0x39
  424d8a:	jg     424dc7 <grisu3_diy_fp_encode_double@@Base+0xca5>
  424d8c:	mov    DWORD PTR [rbp-0x24],0x1
  424d93:	add    DWORD PTR [rbp-0x30],0x1
  424d97:	add    QWORD PTR [rbp-0x48],0x1
  424d9c:	jmp    424da7 <grisu3_diy_fp_encode_double@@Base+0xc85>
  424d9e:	add    DWORD PTR [rbp-0x30],0x1
  424da2:	add    QWORD PTR [rbp-0x48],0x1
  424da7:	mov    rax,QWORD PTR [rbp-0x48]
  424dab:	cmp    rax,QWORD PTR [rbp-0x20]
  424daf:	je     424dc7 <grisu3_diy_fp_encode_double@@Base+0xca5>
  424db1:	mov    rax,QWORD PTR [rbp-0x48]
  424db5:	movzx  eax,BYTE PTR [rax]
  424db8:	cmp    al,0x2f
  424dba:	jle    424dc7 <grisu3_diy_fp_encode_double@@Base+0xca5>
  424dbc:	mov    rax,QWORD PTR [rbp-0x48]
  424dc0:	movzx  eax,BYTE PTR [rax]
  424dc3:	cmp    al,0x39
  424dc5:	jle    424d9e <grisu3_diy_fp_encode_double@@Base+0xc7c>
  424dc7:	mov    rax,QWORD PTR [rbp-0x48]
  424dcb:	cmp    rax,QWORD PTR [rbp-0x20]
  424dcf:	je     424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424dd5:	mov    rax,QWORD PTR [rbp-0x48]
  424dd9:	movzx  eax,BYTE PTR [rax]
  424ddc:	cmp    al,0x2e
  424dde:	jne    424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424de4:	add    QWORD PTR [rbp-0x48],0x1
  424de9:	mov    rax,QWORD PTR [rbp-0x48]
  424ded:	mov    QWORD PTR [rbp-0x8],rax
  424df1:	mov    rax,QWORD PTR [rbp-0x48]
  424df5:	movzx  eax,BYTE PTR [rax]
  424df8:	cmp    al,0x2f
  424dfa:	jle    424e07 <grisu3_diy_fp_encode_double@@Base+0xce5>
  424dfc:	mov    rax,QWORD PTR [rbp-0x48]
  424e00:	movzx  eax,BYTE PTR [rax]
  424e03:	cmp    al,0x39
  424e05:	jle    424e79 <grisu3_diy_fp_encode_double@@Base+0xd57>
  424e07:	mov    eax,0x0
  424e0c:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424e11:	movabs rax,0x1999999999999998
  424e1b:	cmp    QWORD PTR [rbp-0x18],rax
  424e1f:	jbe    424e43 <grisu3_diy_fp_encode_double@@Base+0xd21>
  424e21:	cmp    DWORD PTR [rbp-0x24],0x0
  424e25:	jne    424e9f <grisu3_diy_fp_encode_double@@Base+0xd7d>
  424e27:	mov    rax,QWORD PTR [rbp-0x48]
  424e2b:	movzx  eax,BYTE PTR [rax]
  424e2e:	cmp    al,0x34
  424e30:	setg   al
  424e33:	movzx  eax,al
  424e36:	add    QWORD PTR [rbp-0x18],rax
  424e3a:	mov    DWORD PTR [rbp-0x24],0x1
  424e41:	jmp    424e9f <grisu3_diy_fp_encode_double@@Base+0xd7d>
  424e43:	mov    rdx,QWORD PTR [rbp-0x18]
  424e47:	mov    rax,rdx
  424e4a:	shl    rax,0x2
  424e4e:	add    rax,rdx
  424e51:	add    rax,rax
  424e54:	mov    rcx,rax
  424e57:	mov    rax,QWORD PTR [rbp-0x48]
  424e5b:	lea    rdx,[rax+0x1]
  424e5f:	mov    QWORD PTR [rbp-0x48],rdx
  424e63:	movzx  eax,BYTE PTR [rax]
  424e66:	movsx  rax,al
  424e6a:	add    rax,rcx
  424e6d:	sub    rax,0x30
  424e71:	mov    QWORD PTR [rbp-0x18],rax
  424e75:	sub    DWORD PTR [rbp-0x30],0x1
  424e79:	mov    rax,QWORD PTR [rbp-0x48]
  424e7d:	cmp    rax,QWORD PTR [rbp-0x20]
  424e81:	je     424ea0 <grisu3_diy_fp_encode_double@@Base+0xd7e>
  424e83:	mov    rax,QWORD PTR [rbp-0x48]
  424e87:	movzx  eax,BYTE PTR [rax]
  424e8a:	cmp    al,0x2f
  424e8c:	jle    424ea0 <grisu3_diy_fp_encode_double@@Base+0xd7e>
  424e8e:	mov    rax,QWORD PTR [rbp-0x48]
  424e92:	movzx  eax,BYTE PTR [rax]
  424e95:	cmp    al,0x39
  424e97:	jle    424e11 <grisu3_diy_fp_encode_double@@Base+0xcef>
  424e9d:	jmp    424ea0 <grisu3_diy_fp_encode_double@@Base+0xd7e>
  424e9f:	nop
  424ea0:	mov    rdx,QWORD PTR [rbp-0x48]
  424ea4:	mov    rax,QWORD PTR [rbp-0x8]
  424ea8:	sub    rdx,rax
  424eab:	mov    rax,rdx
  424eae:	add    DWORD PTR [rbp-0x28],eax
  424eb1:	jmp    424ebc <grisu3_diy_fp_encode_double@@Base+0xd9a>
  424eb3:	add    DWORD PTR [rbp-0x30],0x1
  424eb7:	add    QWORD PTR [rbp-0x48],0x1
  424ebc:	mov    rax,QWORD PTR [rbp-0x48]
  424ec0:	cmp    rax,QWORD PTR [rbp-0x20]
  424ec4:	je     424ed1 <grisu3_diy_fp_encode_double@@Base+0xdaf>
  424ec6:	mov    rax,QWORD PTR [rbp-0x48]
  424eca:	movzx  eax,BYTE PTR [rax]
  424ecd:	cmp    al,0x30
  424ecf:	je     424eb3 <grisu3_diy_fp_encode_double@@Base+0xd91>
  424ed1:	mov    rax,QWORD PTR [rbp-0x48]
  424ed5:	cmp    rax,QWORD PTR [rbp-0x20]
  424ed9:	je     424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424edb:	mov    rax,QWORD PTR [rbp-0x48]
  424edf:	movzx  eax,BYTE PTR [rax]
  424ee2:	cmp    al,0x30
  424ee4:	jle    424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424ee6:	mov    rax,QWORD PTR [rbp-0x48]
  424eea:	movzx  eax,BYTE PTR [rax]
  424eed:	cmp    al,0x39
  424eef:	jg     424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424ef1:	mov    DWORD PTR [rbp-0x24],0x1
  424ef8:	add    QWORD PTR [rbp-0x48],0x1
  424efd:	jmp    424f04 <grisu3_diy_fp_encode_double@@Base+0xde2>
  424eff:	add    QWORD PTR [rbp-0x48],0x1
  424f04:	mov    rax,QWORD PTR [rbp-0x48]
  424f08:	cmp    rax,QWORD PTR [rbp-0x20]
  424f0c:	je     424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424f0e:	mov    rax,QWORD PTR [rbp-0x48]
  424f12:	movzx  eax,BYTE PTR [rax]
  424f15:	cmp    al,0x2f
  424f17:	jle    424f24 <grisu3_diy_fp_encode_double@@Base+0xe02>
  424f19:	mov    rax,QWORD PTR [rbp-0x48]
  424f1d:	movzx  eax,BYTE PTR [rax]
  424f20:	cmp    al,0x39
  424f22:	jle    424eff <grisu3_diy_fp_encode_double@@Base+0xddd>
  424f24:	mov    eax,DWORD PTR [rbp-0x28]
  424f27:	add    DWORD PTR [rbp-0x30],eax
  424f2a:	mov    rax,QWORD PTR [rbp-0x48]
  424f2e:	cmp    rax,QWORD PTR [rbp-0x20]
  424f32:	je     425044 <grisu3_diy_fp_encode_double@@Base+0xf22>
  424f38:	mov    rax,QWORD PTR [rbp-0x48]
  424f3c:	movzx  eax,BYTE PTR [rax]
  424f3f:	or     eax,0x20
  424f42:	cmp    al,0x65
  424f44:	jne    425044 <grisu3_diy_fp_encode_double@@Base+0xf22>
  424f4a:	mov    rdx,QWORD PTR [rbp-0x20]
  424f4e:	mov    rax,QWORD PTR [rbp-0x48]
  424f52:	sub    rdx,rax
  424f55:	mov    rax,rdx
  424f58:	cmp    rax,0x1
  424f5c:	jg     424f68 <grisu3_diy_fp_encode_double@@Base+0xe46>
  424f5e:	mov    eax,0x0
  424f63:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424f68:	add    QWORD PTR [rbp-0x48],0x1
  424f6d:	mov    rax,QWORD PTR [rbp-0x48]
  424f71:	movzx  eax,BYTE PTR [rax]
  424f74:	cmp    al,0x2b
  424f76:	jne    424f91 <grisu3_diy_fp_encode_double@@Base+0xe6f>
  424f78:	add    QWORD PTR [rbp-0x48],0x1
  424f7d:	mov    rax,QWORD PTR [rbp-0x48]
  424f81:	cmp    rax,QWORD PTR [rbp-0x20]
  424f85:	jne    424fbc <grisu3_diy_fp_encode_double@@Base+0xe9a>
  424f87:	mov    eax,0x0
  424f8c:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424f91:	mov    rax,QWORD PTR [rbp-0x48]
  424f95:	movzx  eax,BYTE PTR [rax]
  424f98:	cmp    al,0x2d
  424f9a:	jne    424fbc <grisu3_diy_fp_encode_double@@Base+0xe9a>
  424f9c:	mov    DWORD PTR [rbp-0x34],0x1
  424fa3:	add    QWORD PTR [rbp-0x48],0x1
  424fa8:	mov    rax,QWORD PTR [rbp-0x48]
  424fac:	cmp    rax,QWORD PTR [rbp-0x20]
  424fb0:	jne    424fbc <grisu3_diy_fp_encode_double@@Base+0xe9a>
  424fb2:	mov    eax,0x0
  424fb7:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424fbc:	mov    rax,QWORD PTR [rbp-0x48]
  424fc0:	movzx  eax,BYTE PTR [rax]
  424fc3:	cmp    al,0x2f
  424fc5:	jle    424fd2 <grisu3_diy_fp_encode_double@@Base+0xeb0>
  424fc7:	mov    rax,QWORD PTR [rbp-0x48]
  424fcb:	movzx  eax,BYTE PTR [rax]
  424fce:	cmp    al,0x39
  424fd0:	jle    424fdc <grisu3_diy_fp_encode_double@@Base+0xeba>
  424fd2:	mov    eax,0x0
  424fd7:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  424fdc:	mov    rax,QWORD PTR [rbp-0x48]
  424fe0:	lea    rdx,[rax+0x1]
  424fe4:	mov    QWORD PTR [rbp-0x48],rdx
  424fe8:	movzx  eax,BYTE PTR [rax]
  424feb:	movsx  eax,al
  424fee:	sub    eax,0x30
  424ff1:	mov    DWORD PTR [rbp-0x2c],eax
  424ff4:	jmp    425024 <grisu3_diy_fp_encode_double@@Base+0xf02>
  424ff6:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  424ffd:	jg     42501f <grisu3_diy_fp_encode_double@@Base+0xefd>
  424fff:	mov    edx,DWORD PTR [rbp-0x2c]
  425002:	mov    eax,edx
  425004:	shl    eax,0x2
  425007:	add    eax,edx
  425009:	add    eax,eax
  42500b:	mov    edx,eax
  42500d:	mov    rax,QWORD PTR [rbp-0x48]
  425011:	movzx  eax,BYTE PTR [rax]
  425014:	movsx  eax,al
  425017:	add    eax,edx
  425019:	sub    eax,0x30
  42501c:	mov    DWORD PTR [rbp-0x2c],eax
  42501f:	add    QWORD PTR [rbp-0x48],0x1
  425024:	mov    rax,QWORD PTR [rbp-0x48]
  425028:	cmp    rax,QWORD PTR [rbp-0x20]
  42502c:	je     425044 <grisu3_diy_fp_encode_double@@Base+0xf22>
  42502e:	mov    rax,QWORD PTR [rbp-0x48]
  425032:	movzx  eax,BYTE PTR [rax]
  425035:	cmp    al,0x2f
  425037:	jle    425044 <grisu3_diy_fp_encode_double@@Base+0xf22>
  425039:	mov    rax,QWORD PTR [rbp-0x48]
  42503d:	movzx  eax,BYTE PTR [rax]
  425040:	cmp    al,0x39
  425042:	jle    424ff6 <grisu3_diy_fp_encode_double@@Base+0xed4>
  425044:	cmp    DWORD PTR [rbp-0x34],0x0
  425048:	je     425051 <grisu3_diy_fp_encode_double@@Base+0xf2f>
  42504a:	mov    eax,DWORD PTR [rbp-0x2c]
  42504d:	neg    eax
  42504f:	jmp    425054 <grisu3_diy_fp_encode_double@@Base+0xf32>
  425051:	mov    eax,DWORD PTR [rbp-0x2c]
  425054:	add    DWORD PTR [rbp-0x30],eax
  425057:	mov    rax,QWORD PTR [rbp-0x48]
  42505b:	cmp    rax,QWORD PTR [rbp-0x20]
  42505f:	jne    425068 <grisu3_diy_fp_encode_double@@Base+0xf46>
  425061:	mov    eax,0x0
  425066:	jmp    425092 <grisu3_diy_fp_encode_double@@Base+0xf70>
  425068:	mov    r9d,DWORD PTR [rbp-0x28]
  42506c:	mov    r8d,DWORD PTR [rbp-0x30]
  425070:	mov    rcx,QWORD PTR [rbp-0x18]
  425074:	mov    edx,DWORD PTR [rbp-0x38]
  425077:	mov    rsi,QWORD PTR [rbp-0x48]
  42507b:	mov    rax,QWORD PTR [rbp-0x10]
  42507f:	push   QWORD PTR [rbp-0x58]
  425082:	mov    edi,DWORD PTR [rbp-0x24]
  425085:	push   rdi
  425086:	mov    rdi,rax
  425089:	call   4244b5 <grisu3_diy_fp_encode_double@@Base+0x393>
  42508e:	add    rsp,0x10
  425092:	leave  
  425093:	ret    
  425094:	push   rbp
  425095:	mov    rbp,rsp
  425098:	sub    rsp,0x20
  42509c:	mov    QWORD PTR [rbp-0x8],rdi
  4250a0:	mov    DWORD PTR [rbp-0xc],esi
  4250a3:	mov    QWORD PTR [rbp-0x18],rdx
  4250a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4250ab:	mov    ecx,DWORD PTR [rbp-0xc]
  4250ae:	mov    rax,QWORD PTR [rbp-0x8]
  4250b2:	mov    esi,ecx
  4250b4:	mov    rdi,rax
  4250b7:	call   424b2c <grisu3_diy_fp_encode_double@@Base+0xa0a>
  4250bc:	leave  
  4250bd:	ret    
  4250be:	push   rbp
  4250bf:	mov    rbp,rsp
  4250c2:	sub    rsp,0x40
  4250c6:	mov    QWORD PTR [rbp-0x28],rdi
  4250ca:	mov    DWORD PTR [rbp-0x2c],esi
  4250cd:	mov    QWORD PTR [rbp-0x38],rdx
  4250d1:	mov    rax,QWORD PTR fs:0x28
  4250da:	mov    QWORD PTR [rbp-0x8],rax
  4250de:	xor    eax,eax
  4250e0:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  4250e7:	lea    rdx,[rbp-0x18]
  4250eb:	mov    ecx,DWORD PTR [rbp-0x2c]
  4250ee:	mov    rax,QWORD PTR [rbp-0x28]
  4250f2:	mov    esi,ecx
  4250f4:	mov    rdi,rax
  4250f7:	call   425094 <grisu3_diy_fp_encode_double@@Base+0xf72>
  4250fc:	mov    QWORD PTR [rbp-0x10],rax
  425100:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  425105:	vcvtsd2ss xmm0,xmm0,xmm0
  425109:	mov    rax,QWORD PTR [rbp-0x38]
  42510d:	vmovss DWORD PTR [rax],xmm0
  425111:	mov    rax,QWORD PTR [rbp-0x38]
  425115:	vmovss xmm1,DWORD PTR [rax]
  425119:	vmovss xmm0,DWORD PTR [rip+0x1592f]        # 43aa50 <flatcc_builder_padding_base@@Base+0x27f0>
  425121:	vandps xmm0,xmm0,xmm1
  425125:	vucomiss xmm0,DWORD PTR [rip+0x15933]        # 43aa60 <flatcc_builder_padding_base@@Base+0x2800>
  42512d:	setbe  al
  425130:	xor    eax,0x1
  425133:	test   al,al
  425135:	je     42513e <grisu3_diy_fp_encode_double@@Base+0x101c>
  425137:	mov    eax,0x1
  42513c:	jmp    425143 <grisu3_diy_fp_encode_double@@Base+0x1021>
  42513e:	mov    eax,0x0
  425143:	test   al,al
  425145:	je     42517c <grisu3_diy_fp_encode_double@@Base+0x105a>
  425147:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42514c:	vxorpd xmm0,xmm0,xmm0
  425150:	vucomisd xmm0,xmm1
  425154:	jbe    425169 <grisu3_diy_fp_encode_double@@Base+0x1047>
  425156:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  42515b:	vmovss xmm0,DWORD PTR [rip+0x1580d]        # 43a970 <flatcc_builder_padding_base@@Base+0x2710>
  425163:	vxorps xmm0,xmm0,xmm1
  425167:	jmp    42516e <grisu3_diy_fp_encode_double@@Base+0x104c>
  425169:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  42516e:	mov    rax,QWORD PTR [rbp-0x38]
  425172:	vmovss DWORD PTR [rax],xmm0
  425176:	mov    rax,QWORD PTR [rbp-0x28]
  42517a:	jmp    425180 <grisu3_diy_fp_encode_double@@Base+0x105e>
  42517c:	mov    rax,QWORD PTR [rbp-0x10]
  425180:	mov    rcx,QWORD PTR [rbp-0x8]
  425184:	xor    rcx,QWORD PTR fs:0x28
  42518d:	je     425194 <grisu3_diy_fp_encode_double@@Base+0x1072>
  42518f:	call   405070 <__stack_chk_fail@plt>
  425194:	leave  
  425195:	ret    
  425196:	push   rbp
  425197:	mov    rbp,rsp
  42519a:	mov    DWORD PTR [rbp-0x4],edi
  42519d:	cmp    DWORD PTR [rbp-0x4],0x5
  4251a1:	ja     4251fd <grisu3_diy_fp_encode_double@@Base+0x10db>
  4251a3:	mov    eax,DWORD PTR [rbp-0x4]
  4251a6:	lea    rdx,[rax*4+0x0]
  4251ae:	lea    rax,[rip+0x14bc7]        # 439d7c <flatcc_builder_padding_base@@Base+0x1b1c>
  4251b5:	mov    eax,DWORD PTR [rdx+rax*1]
  4251b8:	movsxd rdx,eax
  4251bb:	lea    rax,[rip+0x14bba]        # 439d7c <flatcc_builder_padding_base@@Base+0x1b1c>
  4251c2:	add    rax,rdx
  4251c5:	jmp    rax
  4251c7:	lea    rax,[rip+0x14b42]        # 439d10 <flatcc_builder_padding_base@@Base+0x1ab0>
  4251ce:	jmp    425204 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  4251d0:	lea    rax,[rip+0x14b3c]        # 439d13 <flatcc_builder_padding_base@@Base+0x1ab3>
  4251d7:	jmp    425204 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  4251d9:	lea    rax,[rip+0x14b44]        # 439d24 <flatcc_builder_padding_base@@Base+0x1ac4>
  4251e0:	jmp    425204 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  4251e2:	lea    rax,[rip+0x14b48]        # 439d31 <flatcc_builder_padding_base@@Base+0x1ad1>
  4251e9:	jmp    425204 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  4251eb:	lea    rax,[rip+0x14b50]        # 439d42 <flatcc_builder_padding_base@@Base+0x1ae2>
  4251f2:	jmp    425204 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  4251f4:	lea    rax,[rip+0x14b5b]        # 439d56 <flatcc_builder_padding_base@@Base+0x1af6>
  4251fb:	jmp    425204 <grisu3_diy_fp_encode_double@@Base+0x10e2>
  4251fd:	lea    rax,[rip+0x14b67]        # 439d6b <flatcc_builder_padding_base@@Base+0x1b0b>
  425204:	pop    rbp
  425205:	ret    
  425206:	push   rbp
  425207:	mov    rbp,rsp
  42520a:	mov    QWORD PTR [rbp-0x28],rdi
  42520e:	mov    DWORD PTR [rbp-0x2c],esi
  425211:	mov    rcx,QWORD PTR [rbp-0x28]
  425215:	movabs rdx,0xaaaaaaaaaaaaaaab
  42521f:	mov    rax,rcx
  425222:	mul    rdx
  425225:	shr    rdx,1
  425228:	mov    rax,rdx
  42522b:	add    rax,rax
  42522e:	add    rax,rdx
  425231:	sub    rcx,rax
  425234:	mov    rax,rcx
  425237:	mov    QWORD PTR [rbp-0x8],rax
  42523b:	mov    rax,QWORD PTR [rbp-0x28]
  42523f:	shl    rax,0x2
  425243:	movabs rdx,0xaaaaaaaaaaaaaaab
  42524d:	mul    rdx
  425250:	mov    rax,rdx
  425253:	shr    rax,1
  425256:	add    rax,0x3
  42525a:	and    rax,0xfffffffffffffffc
  42525e:	mov    QWORD PTR [rbp-0x10],rax
  425262:	mov    eax,DWORD PTR [rbp-0x2c]
  425265:	and    eax,0x80
  42526a:	mov    DWORD PTR [rbp-0x14],eax
  42526d:	cmp    DWORD PTR [rbp-0x14],0x0
  425271:	jne    425292 <grisu3_diy_fp_encode_double@@Base+0x1170>
  425273:	mov    rax,QWORD PTR [rbp-0x8]
  425277:	cmp    rax,0x1
  42527b:	je     42528c <grisu3_diy_fp_encode_double@@Base+0x116a>
  42527d:	cmp    rax,0x2
  425281:	je     425285 <grisu3_diy_fp_encode_double@@Base+0x1163>
  425283:	jmp    425292 <grisu3_diy_fp_encode_double@@Base+0x1170>
  425285:	sub    QWORD PTR [rbp-0x10],0x1
  42528a:	jmp    425292 <grisu3_diy_fp_encode_double@@Base+0x1170>
  42528c:	sub    QWORD PTR [rbp-0x10],0x2
  425291:	nop
  425292:	mov    rax,QWORD PTR [rbp-0x10]
  425296:	pop    rbp
  425297:	ret    
  425298:	push   rbp
  425299:	mov    rbp,rsp
  42529c:	mov    QWORD PTR [rbp-0x18],rdi
  4252a0:	mov    rax,QWORD PTR [rbp-0x18]
  4252a4:	and    eax,0x3
  4252a7:	mov    QWORD PTR [rbp-0x10],rax
  4252ab:	mov    rax,QWORD PTR [rbp-0x18]
  4252af:	shr    rax,0x2
  4252b3:	mov    rdx,rax
  4252b6:	mov    rax,rdx
  4252b9:	add    rax,rax
  4252bc:	add    rax,rdx
  4252bf:	mov    QWORD PTR [rbp-0x8],rax
  4252c3:	mov    rax,QWORD PTR [rbp-0x10]
  4252c7:	cmp    rax,0x2
  4252cb:	je     4252dd <grisu3_diy_fp_encode_double@@Base+0x11bb>
  4252cd:	cmp    rax,0x3
  4252d1:	jne    4252e7 <grisu3_diy_fp_encode_double@@Base+0x11c5>
  4252d3:	mov    rax,QWORD PTR [rbp-0x8]
  4252d7:	add    rax,0x2
  4252db:	jmp    4252eb <grisu3_diy_fp_encode_double@@Base+0x11c9>
  4252dd:	mov    rax,QWORD PTR [rbp-0x8]
  4252e1:	add    rax,0x1
  4252e5:	jmp    4252eb <grisu3_diy_fp_encode_double@@Base+0x11c9>
  4252e7:	mov    rax,QWORD PTR [rbp-0x8]
  4252eb:	pop    rbp
  4252ec:	ret    
  4252ed:	push   rbp
  4252ee:	mov    rbp,rsp
  4252f1:	mov    QWORD PTR [rbp-0x38],rdi
  4252f5:	mov    QWORD PTR [rbp-0x40],rsi
  4252f9:	mov    QWORD PTR [rbp-0x48],rdx
  4252fd:	mov    QWORD PTR [rbp-0x50],rcx
  425301:	mov    DWORD PTR [rbp-0x54],r8d
  425305:	lea    rax,[rip+0x14a8c]        # 439d98 <flatcc_builder_padding_base@@Base+0x1b38>
  42530c:	mov    QWORD PTR [rbp-0x18],rax
  425310:	lea    rax,[rip+0x14ac9]        # 439de0 <flatcc_builder_padding_base@@Base+0x1b80>
  425317:	mov    QWORD PTR [rbp-0x10],rax
  42531b:	mov    rax,QWORD PTR [rbp-0x38]
  42531f:	mov    QWORD PTR [rbp-0x8],rax
  425323:	mov    eax,DWORD PTR [rbp-0x54]
  425326:	and    eax,0x80
  42532b:	mov    DWORD PTR [rbp-0x2c],eax
  42532e:	mov    QWORD PTR [rbp-0x20],0x0
  425336:	mov    DWORD PTR [rbp-0x30],0x3
  42533d:	cmp    QWORD PTR [rbp-0x50],0x0
  425342:	jne    425350 <grisu3_diy_fp_encode_double@@Base+0x122e>
  425344:	mov    DWORD PTR [rbp-0x30],0x2
  42534b:	jmp    4255b1 <grisu3_diy_fp_encode_double@@Base+0x148f>
  425350:	mov    rax,QWORD PTR [rbp-0x50]
  425354:	mov    rax,QWORD PTR [rax]
  425357:	mov    QWORD PTR [rbp-0x20],rax
  42535b:	and    DWORD PTR [rbp-0x54],0xffffff1f
  425362:	mov    eax,DWORD PTR [rbp-0x54]
  425365:	test   eax,eax
  425367:	je     425373 <grisu3_diy_fp_encode_double@@Base+0x1251>
  425369:	cmp    eax,0x1
  42536c:	je     42537d <grisu3_diy_fp_encode_double@@Base+0x125b>
  42536e:	jmp    4255b1 <grisu3_diy_fp_encode_double@@Base+0x148f>
  425373:	mov    rax,QWORD PTR [rbp-0x18]
  425377:	mov    QWORD PTR [rbp-0x28],rax
  42537b:	jmp    425386 <grisu3_diy_fp_encode_double@@Base+0x1264>
  42537d:	mov    rax,QWORD PTR [rbp-0x10]
  425381:	mov    QWORD PTR [rbp-0x28],rax
  425385:	nop
  425386:	mov    DWORD PTR [rbp-0x30],0x0
  42538d:	jmp    425462 <grisu3_diy_fp_encode_double@@Base+0x1340>
  425392:	mov    rax,QWORD PTR [rbp-0x40]
  425396:	movzx  eax,BYTE PTR [rax]
  425399:	shr    al,0x2
  42539c:	movzx  edx,al
  42539f:	mov    rax,QWORD PTR [rbp-0x28]
  4253a3:	add    rax,rdx
  4253a6:	movzx  edx,BYTE PTR [rax]
  4253a9:	mov    rax,QWORD PTR [rbp-0x38]
  4253ad:	mov    BYTE PTR [rax],dl
  4253af:	mov    rax,QWORD PTR [rbp-0x38]
  4253b3:	lea    rdx,[rax+0x1]
  4253b7:	mov    rax,QWORD PTR [rbp-0x40]
  4253bb:	movzx  eax,BYTE PTR [rax]
  4253be:	movzx  eax,al
  4253c1:	shl    eax,0x4
  4253c4:	and    eax,0x30
  4253c7:	mov    ecx,eax
  4253c9:	mov    rax,QWORD PTR [rbp-0x40]
  4253cd:	add    rax,0x1
  4253d1:	movzx  eax,BYTE PTR [rax]
  4253d4:	shr    al,0x4
  4253d7:	movzx  eax,al
  4253da:	or     eax,ecx
  4253dc:	movsxd rcx,eax
  4253df:	mov    rax,QWORD PTR [rbp-0x28]
  4253e3:	add    rax,rcx
  4253e6:	movzx  eax,BYTE PTR [rax]
  4253e9:	mov    BYTE PTR [rdx],al
  4253eb:	mov    rax,QWORD PTR [rbp-0x38]
  4253ef:	lea    rdx,[rax+0x2]
  4253f3:	mov    rax,QWORD PTR [rbp-0x40]
  4253f7:	add    rax,0x1
  4253fb:	movzx  eax,BYTE PTR [rax]
  4253fe:	movzx  eax,al
  425401:	shl    eax,0x2
  425404:	and    eax,0x3c
  425407:	mov    ecx,eax
  425409:	mov    rax,QWORD PTR [rbp-0x40]
  42540d:	add    rax,0x2
  425411:	movzx  eax,BYTE PTR [rax]
  425414:	shr    al,0x6
  425417:	movzx  eax,al
  42541a:	or     eax,ecx
  42541c:	movsxd rcx,eax
  42541f:	mov    rax,QWORD PTR [rbp-0x28]
  425423:	add    rax,rcx
  425426:	movzx  eax,BYTE PTR [rax]
  425429:	mov    BYTE PTR [rdx],al
  42542b:	mov    rax,QWORD PTR [rbp-0x38]
  42542f:	lea    rdx,[rax+0x3]
  425433:	mov    rax,QWORD PTR [rbp-0x40]
  425437:	add    rax,0x2
  42543b:	movzx  eax,BYTE PTR [rax]
  42543e:	movzx  eax,al
  425441:	and    eax,0x3f
  425444:	mov    rcx,rax
  425447:	mov    rax,QWORD PTR [rbp-0x28]
  42544b:	add    rax,rcx
  42544e:	movzx  eax,BYTE PTR [rax]
  425451:	mov    BYTE PTR [rdx],al
  425453:	sub    QWORD PTR [rbp-0x20],0x3
  425458:	add    QWORD PTR [rbp-0x38],0x4
  42545d:	add    QWORD PTR [rbp-0x40],0x3
  425462:	cmp    QWORD PTR [rbp-0x20],0x2
  425467:	ja     425392 <grisu3_diy_fp_encode_double@@Base+0x1270>
  42546d:	mov    rax,QWORD PTR [rbp-0x20]
  425471:	cmp    rax,0x1
  425475:	je     42552b <grisu3_diy_fp_encode_double@@Base+0x1409>
  42547b:	cmp    rax,0x2
  42547f:	jne    42559c <grisu3_diy_fp_encode_double@@Base+0x147a>
  425485:	mov    rax,QWORD PTR [rbp-0x40]
  425489:	movzx  eax,BYTE PTR [rax]
  42548c:	shr    al,0x2
  42548f:	movzx  edx,al
  425492:	mov    rax,QWORD PTR [rbp-0x28]
  425496:	add    rax,rdx
  425499:	movzx  edx,BYTE PTR [rax]
  42549c:	mov    rax,QWORD PTR [rbp-0x38]
  4254a0:	mov    BYTE PTR [rax],dl
  4254a2:	mov    rax,QWORD PTR [rbp-0x38]
  4254a6:	lea    rdx,[rax+0x1]
  4254aa:	mov    rax,QWORD PTR [rbp-0x40]
  4254ae:	movzx  eax,BYTE PTR [rax]
  4254b1:	movzx  eax,al
  4254b4:	shl    eax,0x4
  4254b7:	and    eax,0x30
  4254ba:	mov    ecx,eax
  4254bc:	mov    rax,QWORD PTR [rbp-0x40]
  4254c0:	add    rax,0x1
  4254c4:	movzx  eax,BYTE PTR [rax]
  4254c7:	shr    al,0x4
  4254ca:	movzx  eax,al
  4254cd:	or     eax,ecx
  4254cf:	movsxd rcx,eax
  4254d2:	mov    rax,QWORD PTR [rbp-0x28]
  4254d6:	add    rax,rcx
  4254d9:	movzx  eax,BYTE PTR [rax]
  4254dc:	mov    BYTE PTR [rdx],al
  4254de:	mov    rax,QWORD PTR [rbp-0x38]
  4254e2:	lea    rdx,[rax+0x2]
  4254e6:	mov    rax,QWORD PTR [rbp-0x40]
  4254ea:	add    rax,0x1
  4254ee:	movzx  eax,BYTE PTR [rax]
  4254f1:	movzx  eax,al
  4254f4:	shl    eax,0x2
  4254f7:	cdqe   
  4254f9:	and    eax,0x3c
  4254fc:	mov    rcx,rax
  4254ff:	mov    rax,QWORD PTR [rbp-0x28]
  425503:	add    rax,rcx
  425506:	movzx  eax,BYTE PTR [rax]
  425509:	mov    BYTE PTR [rdx],al
  42550b:	add    QWORD PTR [rbp-0x38],0x3
  425510:	cmp    DWORD PTR [rbp-0x2c],0x0
  425514:	je     4255a5 <grisu3_diy_fp_encode_double@@Base+0x1483>
  42551a:	mov    rax,QWORD PTR [rbp-0x38]
  42551e:	lea    rdx,[rax+0x1]
  425522:	mov    QWORD PTR [rbp-0x38],rdx
  425526:	mov    BYTE PTR [rax],0x3d
  425529:	jmp    4255a5 <grisu3_diy_fp_encode_double@@Base+0x1483>
  42552b:	mov    rax,QWORD PTR [rbp-0x40]
  42552f:	movzx  eax,BYTE PTR [rax]
  425532:	shr    al,0x2
  425535:	movzx  edx,al
  425538:	mov    rax,QWORD PTR [rbp-0x28]
  42553c:	add    rax,rdx
  42553f:	movzx  edx,BYTE PTR [rax]
  425542:	mov    rax,QWORD PTR [rbp-0x38]
  425546:	mov    BYTE PTR [rax],dl
  425548:	mov    rax,QWORD PTR [rbp-0x38]
  42554c:	lea    rdx,[rax+0x1]
  425550:	mov    rax,QWORD PTR [rbp-0x40]
  425554:	movzx  eax,BYTE PTR [rax]
  425557:	movzx  eax,al
  42555a:	shl    eax,0x4
  42555d:	cdqe   
  42555f:	and    eax,0x30
  425562:	mov    rcx,rax
  425565:	mov    rax,QWORD PTR [rbp-0x28]
  425569:	add    rax,rcx
  42556c:	movzx  eax,BYTE PTR [rax]
  42556f:	mov    BYTE PTR [rdx],al
  425571:	add    QWORD PTR [rbp-0x38],0x2
  425576:	cmp    DWORD PTR [rbp-0x2c],0x0
  42557a:	je     4255a8 <grisu3_diy_fp_encode_double@@Base+0x1486>
  42557c:	mov    rax,QWORD PTR [rbp-0x38]
  425580:	lea    rdx,[rax+0x1]
  425584:	mov    QWORD PTR [rbp-0x38],rdx
  425588:	mov    BYTE PTR [rax],0x3d
  42558b:	mov    rax,QWORD PTR [rbp-0x38]
  42558f:	lea    rdx,[rax+0x1]
  425593:	mov    QWORD PTR [rbp-0x38],rdx
  425597:	mov    BYTE PTR [rax],0x3d
  42559a:	jmp    4255a8 <grisu3_diy_fp_encode_double@@Base+0x1486>
  42559c:	mov    DWORD PTR [rbp-0x2c],0x0
  4255a3:	jmp    4255a9 <grisu3_diy_fp_encode_double@@Base+0x1487>
  4255a5:	nop
  4255a6:	jmp    4255a9 <grisu3_diy_fp_encode_double@@Base+0x1487>
  4255a8:	nop
  4255a9:	mov    QWORD PTR [rbp-0x20],0x0
  4255b1:	cmp    QWORD PTR [rbp-0x48],0x0
  4255b6:	je     4255d0 <grisu3_diy_fp_encode_double@@Base+0x14ae>
  4255b8:	mov    rdx,QWORD PTR [rbp-0x38]
  4255bc:	mov    rax,QWORD PTR [rbp-0x8]
  4255c0:	sub    rdx,rax
  4255c3:	mov    rax,rdx
  4255c6:	mov    rdx,rax
  4255c9:	mov    rax,QWORD PTR [rbp-0x48]
  4255cd:	mov    QWORD PTR [rax],rdx
  4255d0:	cmp    QWORD PTR [rbp-0x50],0x0
  4255d5:	je     4255ec <grisu3_diy_fp_encode_double@@Base+0x14ca>
  4255d7:	mov    rax,QWORD PTR [rbp-0x50]
  4255db:	mov    rax,QWORD PTR [rax]
  4255de:	sub    rax,QWORD PTR [rbp-0x20]
  4255e2:	mov    rdx,rax
  4255e5:	mov    rax,QWORD PTR [rbp-0x50]
  4255e9:	mov    QWORD PTR [rax],rdx
  4255ec:	mov    eax,DWORD PTR [rbp-0x30]
  4255ef:	pop    rbp
  4255f0:	ret    
  4255f1:	push   rbp
  4255f2:	mov    rbp,rsp
  4255f5:	add    rsp,0xffffffffffffff80
  4255f9:	mov    QWORD PTR [rbp-0x58],rdi
  4255fd:	mov    QWORD PTR [rbp-0x60],rsi
  425601:	mov    QWORD PTR [rbp-0x68],rdx
  425605:	mov    QWORD PTR [rbp-0x70],rcx
  425609:	mov    DWORD PTR [rbp-0x74],r8d
  42560d:	mov    rax,QWORD PTR fs:0x28
  425616:	mov    QWORD PTR [rbp-0x8],rax
  42561a:	xor    eax,eax
  42561c:	mov    DWORD PTR [rbp-0x50],0x0
  425623:	mov    rax,QWORD PTR [rbp-0x58]
  425627:	mov    QWORD PTR [rbp-0x18],rax
  42562b:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  425633:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  42563b:	lea    rax,[rip+0x14ebe]        # 43a500 <flatcc_builder_padding_base@@Base+0x22a0>
  425642:	mov    QWORD PTR [rbp-0x20],rax
  425646:	mov    eax,DWORD PTR [rbp-0x74]
  425649:	and    eax,0x20
  42564c:	mov    DWORD PTR [rbp-0x4c],eax
  42564f:	cmp    QWORD PTR [rbp-0x70],0x0
  425654:	je     425661 <grisu3_diy_fp_encode_double@@Base+0x153f>
  425656:	mov    rax,QWORD PTR [rbp-0x70]
  42565a:	mov    rax,QWORD PTR [rax]
  42565d:	mov    QWORD PTR [rbp-0x30],rax
  425661:	mov    rax,QWORD PTR [rbp-0x30]
  425665:	mov    QWORD PTR [rbp-0x28],rax
  425669:	and    DWORD PTR [rbp-0x74],0xffffff1f
  425670:	mov    eax,DWORD PTR [rbp-0x74]
  425673:	test   eax,eax
  425675:	je     42567e <grisu3_diy_fp_encode_double@@Base+0x155c>
  425677:	cmp    eax,0x1
  42567a:	je     42569a <grisu3_diy_fp_encode_double@@Base+0x1578>
  42567c:	jmp    4256b6 <grisu3_diy_fp_encode_double@@Base+0x1594>
  42567e:	cmp    DWORD PTR [rbp-0x4c],0x0
  425682:	je     42568d <grisu3_diy_fp_encode_double@@Base+0x156b>
  425684:	lea    rax,[rip+0x14f75]        # 43a600 <flatcc_builder_padding_base@@Base+0x23a0>
  42568b:	jmp    425694 <grisu3_diy_fp_encode_double@@Base+0x1572>
  42568d:	lea    rax,[rip+0x14e6c]        # 43a500 <flatcc_builder_padding_base@@Base+0x22a0>
  425694:	mov    QWORD PTR [rbp-0x20],rax
  425698:	jmp    4256c2 <grisu3_diy_fp_encode_double@@Base+0x15a0>
  42569a:	cmp    DWORD PTR [rbp-0x4c],0x0
  42569e:	je     4256a9 <grisu3_diy_fp_encode_double@@Base+0x1587>
  4256a0:	lea    rax,[rip+0x15059]        # 43a700 <flatcc_builder_padding_base@@Base+0x24a0>
  4256a7:	jmp    4256b0 <grisu3_diy_fp_encode_double@@Base+0x158e>
  4256a9:	lea    rax,[rip+0x15150]        # 43a800 <flatcc_builder_padding_base@@Base+0x25a0>
  4256b0:	mov    QWORD PTR [rbp-0x20],rax
  4256b4:	jmp    4256c2 <grisu3_diy_fp_encode_double@@Base+0x15a0>
  4256b6:	mov    DWORD PTR [rbp-0x50],0x3
  4256bd:	jmp    4258bf <grisu3_diy_fp_encode_double@@Base+0x179d>
  4256c2:	cmp    QWORD PTR [rbp-0x68],0x0
  4256c7:	je     4258b4 <grisu3_diy_fp_encode_double@@Base+0x1792>
  4256cd:	mov    rax,QWORD PTR [rbp-0x68]
  4256d1:	mov    rax,QWORD PTR [rax]
  4256d4:	test   rax,rax
  4256d7:	je     4258b4 <grisu3_diy_fp_encode_double@@Base+0x1792>
  4256dd:	mov    rax,QWORD PTR [rbp-0x68]
  4256e1:	mov    rax,QWORD PTR [rax]
  4256e4:	mov    QWORD PTR [rbp-0x38],rax
  4256e8:	jmp    4258b4 <grisu3_diy_fp_encode_double@@Base+0x1792>
  4256ed:	mov    QWORD PTR [rbp-0x48],0x0
  4256f5:	jmp    42582a <grisu3_diy_fp_encode_double@@Base+0x1708>
  4256fa:	mov    rax,QWORD PTR [rbp-0x30]
  4256fe:	cmp    rax,QWORD PTR [rbp-0x48]
  425702:	jne    425719 <grisu3_diy_fp_encode_double@@Base+0x15f7>
  425704:	mov    rax,QWORD PTR [rbp-0x48]
  425708:	mov    QWORD PTR [rbp-0x40],rax
  42570c:	mov    rax,QWORD PTR [rbp-0x48]
  425710:	sub    QWORD PTR [rbp-0x30],rax
  425714:	jmp    425915 <grisu3_diy_fp_encode_double@@Base+0x17f3>
  425719:	mov    rdx,QWORD PTR [rbp-0x60]
  42571d:	mov    rax,QWORD PTR [rbp-0x48]
  425721:	add    rax,rdx
  425724:	movzx  eax,BYTE PTR [rax]
  425727:	movzx  edx,al
  42572a:	mov    rax,QWORD PTR [rbp-0x20]
  42572e:	add    rax,rdx
  425731:	movzx  eax,BYTE PTR [rax]
  425734:	lea    rcx,[rbp-0xc]
  425738:	mov    rdx,QWORD PTR [rbp-0x48]
  42573c:	add    rdx,rcx
  42573f:	mov    BYTE PTR [rdx],al
  425741:	lea    rdx,[rbp-0xc]
  425745:	mov    rax,QWORD PTR [rbp-0x48]
  425749:	add    rax,rdx
  42574c:	movzx  edx,BYTE PTR [rax]
  42574f:	movzx  eax,BYTE PTR [rip+0x151aa]        # 43a900 <flatcc_builder_padding_base@@Base+0x26a0>
  425756:	cmp    dl,al
  425758:	jb     425825 <grisu3_diy_fp_encode_double@@Base+0x1703>
  42575e:	lea    rdx,[rbp-0xc]
  425762:	mov    rax,QWORD PTR [rbp-0x48]
  425766:	add    rax,rdx
  425769:	movzx  edx,BYTE PTR [rax]
  42576c:	movzx  eax,BYTE PTR [rip+0x1518e]        # 43a901 <flatcc_builder_padding_base@@Base+0x26a1>
  425773:	cmp    dl,al
  425775:	jne    42578b <grisu3_diy_fp_encode_double@@Base+0x1669>
  425777:	add    QWORD PTR [rbp-0x60],0x1
  42577c:	sub    QWORD PTR [rbp-0x30],0x1
  425781:	sub    QWORD PTR [rbp-0x48],0x1
  425786:	jmp    425825 <grisu3_diy_fp_encode_double@@Base+0x1703>
  42578b:	mov    rax,QWORD PTR [rbp-0x48]
  42578f:	mov    QWORD PTR [rbp-0x40],rax
  425793:	lea    rdx,[rbp-0xc]
  425797:	mov    rax,QWORD PTR [rbp-0x48]
  42579b:	add    rax,rdx
  42579e:	movzx  edx,BYTE PTR [rax]
  4257a1:	movzx  eax,BYTE PTR [rip+0x1515a]        # 43a902 <flatcc_builder_padding_base@@Base+0x26a2>
  4257a8:	cmp    dl,al
  4257aa:	jne    425818 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  4257ac:	add    QWORD PTR [rbp-0x48],0x1
  4257b1:	jmp    425804 <grisu3_diy_fp_encode_double@@Base+0x16e2>
  4257b3:	mov    rdx,QWORD PTR [rbp-0x60]
  4257b7:	mov    rax,QWORD PTR [rbp-0x48]
  4257bb:	add    rax,rdx
  4257be:	movzx  eax,BYTE PTR [rax]
  4257c1:	movzx  edx,al
  4257c4:	mov    rax,QWORD PTR [rbp-0x20]
  4257c8:	add    rax,rdx
  4257cb:	movzx  edx,BYTE PTR [rax]
  4257ce:	movzx  eax,BYTE PTR [rip+0x1512d]        # 43a902 <flatcc_builder_padding_base@@Base+0x26a2>
  4257d5:	cmp    dl,al
  4257d7:	je     4257ff <grisu3_diy_fp_encode_double@@Base+0x16dd>
  4257d9:	mov    rdx,QWORD PTR [rbp-0x60]
  4257dd:	mov    rax,QWORD PTR [rbp-0x48]
  4257e1:	add    rax,rdx
  4257e4:	movzx  eax,BYTE PTR [rax]
  4257e7:	movzx  edx,al
  4257ea:	mov    rax,QWORD PTR [rbp-0x20]
  4257ee:	add    rax,rdx
  4257f1:	movzx  edx,BYTE PTR [rax]
  4257f4:	movzx  eax,BYTE PTR [rip+0x15106]        # 43a901 <flatcc_builder_padding_base@@Base+0x26a1>
  4257fb:	cmp    dl,al
  4257fd:	jne    425817 <grisu3_diy_fp_encode_double@@Base+0x16f5>
  4257ff:	add    QWORD PTR [rbp-0x48],0x1
  425804:	mov    rax,QWORD PTR [rbp-0x48]
  425808:	cmp    rax,QWORD PTR [rbp-0x30]
  42580c:	jae    425818 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  42580e:	cmp    QWORD PTR [rbp-0x48],0x7
  425813:	jbe    4257b3 <grisu3_diy_fp_encode_double@@Base+0x1691>
  425815:	jmp    425818 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  425817:	nop
  425818:	mov    rax,QWORD PTR [rbp-0x48]
  42581c:	sub    QWORD PTR [rbp-0x30],rax
  425820:	jmp    425915 <grisu3_diy_fp_encode_double@@Base+0x17f3>
  425825:	add    QWORD PTR [rbp-0x48],0x1
  42582a:	cmp    QWORD PTR [rbp-0x48],0x3
  42582f:	jbe    4256fa <grisu3_diy_fp_encode_double@@Base+0x15d8>
  425835:	cmp    QWORD PTR [rbp-0x38],0x2
  42583a:	jbe    4259fc <grisu3_diy_fp_encode_double@@Base+0x18da>
  425840:	movzx  eax,BYTE PTR [rbp-0xc]
  425844:	movzx  eax,al
  425847:	shl    eax,0x2
  42584a:	mov    edx,eax
  42584c:	movzx  eax,BYTE PTR [rbp-0xb]
  425850:	shr    al,0x4
  425853:	or     eax,edx
  425855:	mov    edx,eax
  425857:	mov    rax,QWORD PTR [rbp-0x58]
  42585b:	mov    BYTE PTR [rax],dl
  42585d:	mov    rax,QWORD PTR [rbp-0x58]
  425861:	add    rax,0x1
  425865:	movzx  edx,BYTE PTR [rbp-0xb]
  425869:	movzx  edx,dl
  42586c:	shl    edx,0x4
  42586f:	mov    ecx,edx
  425871:	movzx  edx,BYTE PTR [rbp-0xa]
  425875:	shr    dl,0x2
  425878:	or     edx,ecx
  42587a:	mov    BYTE PTR [rax],dl
  42587c:	mov    rax,QWORD PTR [rbp-0x58]
  425880:	add    rax,0x2
  425884:	movzx  edx,BYTE PTR [rbp-0xa]
  425888:	movzx  edx,dl
  42588b:	shl    edx,0x6
  42588e:	mov    ecx,edx
  425890:	movzx  edx,BYTE PTR [rbp-0x9]
  425894:	or     edx,ecx
  425896:	mov    BYTE PTR [rax],dl
  425898:	add    QWORD PTR [rbp-0x58],0x3
  42589d:	add    QWORD PTR [rbp-0x60],0x4
  4258a2:	sub    QWORD PTR [rbp-0x38],0x3
  4258a7:	sub    QWORD PTR [rbp-0x30],0x4
  4258ac:	mov    rax,QWORD PTR [rbp-0x30]
  4258b0:	mov    QWORD PTR [rbp-0x28],rax
  4258b4:	cmp    QWORD PTR [rbp-0x38],0x0
  4258b9:	jne    4256ed <grisu3_diy_fp_encode_double@@Base+0x15cb>
  4258bf:	cmp    QWORD PTR [rbp-0x68],0x0
  4258c4:	je     4258de <grisu3_diy_fp_encode_double@@Base+0x17bc>
  4258c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4258ca:	mov    rax,QWORD PTR [rbp-0x18]
  4258ce:	sub    rdx,rax
  4258d1:	mov    rax,rdx
  4258d4:	mov    rdx,rax
  4258d7:	mov    rax,QWORD PTR [rbp-0x68]
  4258db:	mov    QWORD PTR [rax],rdx
  4258de:	cmp    QWORD PTR [rbp-0x70],0x0
  4258e3:	je     4258fa <grisu3_diy_fp_encode_double@@Base+0x17d8>
  4258e5:	mov    rax,QWORD PTR [rbp-0x70]
  4258e9:	mov    rax,QWORD PTR [rax]
  4258ec:	sub    rax,QWORD PTR [rbp-0x28]
  4258f0:	mov    rdx,rax
  4258f3:	mov    rax,QWORD PTR [rbp-0x70]
  4258f7:	mov    QWORD PTR [rax],rdx
  4258fa:	mov    eax,DWORD PTR [rbp-0x50]
  4258fd:	mov    rsi,QWORD PTR [rbp-0x8]
  425901:	xor    rsi,QWORD PTR fs:0x28
  42590a:	je     425a14 <grisu3_diy_fp_encode_double@@Base+0x18f2>
  425910:	jmp    425a0f <grisu3_diy_fp_encode_double@@Base+0x18ed>
  425915:	mov    rax,QWORD PTR [rbp-0x40]
  425919:	cmp    rax,0x2
  42591d:	je     425933 <grisu3_diy_fp_encode_double@@Base+0x1811>
  42591f:	cmp    rax,0x3
  425923:	je     425977 <grisu3_diy_fp_encode_double@@Base+0x1855>
  425925:	test   rax,rax
  425928:	je     4259de <grisu3_diy_fp_encode_double@@Base+0x18bc>
  42592e:	jmp    4259d2 <grisu3_diy_fp_encode_double@@Base+0x18b0>
  425933:	movzx  eax,BYTE PTR [rbp-0xb]
  425937:	movzx  eax,al
  42593a:	shl    eax,0x4
  42593d:	movzx  eax,al
  425940:	test   eax,eax
  425942:	jne    4259ec <grisu3_diy_fp_encode_double@@Base+0x18ca>
  425948:	cmp    QWORD PTR [rbp-0x38],0x0
  42594d:	je     4259ff <grisu3_diy_fp_encode_double@@Base+0x18dd>
  425953:	movzx  eax,BYTE PTR [rbp-0xc]
  425957:	movzx  eax,al
  42595a:	shl    eax,0x2
  42595d:	mov    edx,eax
  42595f:	movzx  eax,BYTE PTR [rbp-0xb]
  425963:	shr    al,0x4
  425966:	or     eax,edx
  425968:	mov    edx,eax
  42596a:	mov    rax,QWORD PTR [rbp-0x58]
  42596e:	mov    BYTE PTR [rax],dl
  425970:	add    QWORD PTR [rbp-0x58],0x1
  425975:	jmp    4259df <grisu3_diy_fp_encode_double@@Base+0x18bd>
  425977:	movzx  eax,BYTE PTR [rbp-0xa]
  42597b:	movzx  eax,al
  42597e:	shl    eax,0x6
  425981:	movzx  eax,al
  425984:	test   eax,eax
  425986:	jne    4259ef <grisu3_diy_fp_encode_double@@Base+0x18cd>
  425988:	cmp    QWORD PTR [rbp-0x38],0x1
  42598d:	jbe    425a02 <grisu3_diy_fp_encode_double@@Base+0x18e0>
  42598f:	movzx  eax,BYTE PTR [rbp-0xc]
  425993:	movzx  eax,al
  425996:	shl    eax,0x2
  425999:	mov    edx,eax
  42599b:	movzx  eax,BYTE PTR [rbp-0xb]
  42599f:	shr    al,0x4
  4259a2:	or     eax,edx
  4259a4:	mov    edx,eax
  4259a6:	mov    rax,QWORD PTR [rbp-0x58]
  4259aa:	mov    BYTE PTR [rax],dl
  4259ac:	mov    rax,QWORD PTR [rbp-0x58]
  4259b0:	add    rax,0x1
  4259b4:	movzx  edx,BYTE PTR [rbp-0xb]
  4259b8:	movzx  edx,dl
  4259bb:	shl    edx,0x4
  4259be:	mov    ecx,edx
  4259c0:	movzx  edx,BYTE PTR [rbp-0xa]
  4259c4:	shr    dl,0x2
  4259c7:	or     edx,ecx
  4259c9:	mov    BYTE PTR [rax],dl
  4259cb:	add    QWORD PTR [rbp-0x58],0x2
  4259d0:	jmp    4259df <grisu3_diy_fp_encode_double@@Base+0x18bd>
  4259d2:	mov    DWORD PTR [rbp-0x50],0x4
  4259d9:	jmp    4258bf <grisu3_diy_fp_encode_double@@Base+0x179d>
  4259de:	nop
  4259df:	mov    rax,QWORD PTR [rbp-0x30]
  4259e3:	mov    QWORD PTR [rbp-0x28],rax
  4259e7:	jmp    4258bf <grisu3_diy_fp_encode_double@@Base+0x179d>
  4259ec:	nop
  4259ed:	jmp    4259f0 <grisu3_diy_fp_encode_double@@Base+0x18ce>
  4259ef:	nop
  4259f0:	mov    DWORD PTR [rbp-0x50],0x5
  4259f7:	jmp    4258bf <grisu3_diy_fp_encode_double@@Base+0x179d>
  4259fc:	nop
  4259fd:	jmp    425a03 <grisu3_diy_fp_encode_double@@Base+0x18e1>
  4259ff:	nop
  425a00:	jmp    425a03 <grisu3_diy_fp_encode_double@@Base+0x18e1>
  425a02:	nop
  425a03:	mov    DWORD PTR [rbp-0x50],0x1
  425a0a:	jmp    4258bf <grisu3_diy_fp_encode_double@@Base+0x179d>
  425a0f:	call   405070 <__stack_chk_fail@plt>
  425a14:	leave  
  425a15:	ret    

0000000000425a16 <flatcc_json_parser_error_string@@Base>:
  425a16:	push   rbp
  425a17:	mov    rbp,rsp
  425a1a:	mov    DWORD PTR [rbp-0x4],edi
  425a1d:	cmp    DWORD PTR [rbp-0x4],0x22
  425a21:	ja     425bc5 <flatcc_json_parser_error_string@@Base+0x1af>
  425a27:	mov    eax,DWORD PTR [rbp-0x4]
  425a2a:	lea    rdx,[rax*4+0x0]
  425a32:	lea    rax,[rip+0x14677]        # 43a0b0 <flatcc_builder_padding_base@@Base+0x1e50>
  425a39:	mov    eax,DWORD PTR [rdx+rax*1]
  425a3c:	movsxd rdx,eax
  425a3f:	lea    rax,[rip+0x1466a]        # 43a0b0 <flatcc_builder_padding_base@@Base+0x1e50>
  425a46:	add    rax,rdx
  425a49:	jmp    rax
  425a4b:	lea    rax,[rip+0x142be]        # 439d10 <flatcc_builder_padding_base@@Base+0x1ab0>
  425a52:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a57:	lea    rax,[rip+0x143c3]        # 439e21 <flatcc_builder_padding_base@@Base+0x1bc1>
  425a5e:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a63:	lea    rax,[rip+0x143bb]        # 439e25 <flatcc_builder_padding_base@@Base+0x1bc5>
  425a6a:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a6f:	lea    rax,[rip+0x143bc]        # 439e32 <flatcc_builder_padding_base@@Base+0x1bd2>
  425a76:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a7b:	lea    rax,[rip+0x143bf]        # 439e41 <flatcc_builder_padding_base@@Base+0x1be1>
  425a82:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a87:	lea    rax,[rip+0x143c2]        # 439e50 <flatcc_builder_padding_base@@Base+0x1bf0>
  425a8e:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a93:	lea    rax,[rip+0x143cb]        # 439e65 <flatcc_builder_padding_base@@Base+0x1c05>
  425a9a:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425a9f:	lea    rax,[rip+0x143cf]        # 439e75 <flatcc_builder_padding_base@@Base+0x1c15>
  425aa6:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425aab:	lea    rax,[rip+0x143cc]        # 439e7e <flatcc_builder_padding_base@@Base+0x1c1e>
  425ab2:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425ab7:	lea    rax,[rip+0x143ca]        # 439e88 <flatcc_builder_padding_base@@Base+0x1c28>
  425abe:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425ac3:	lea    rax,[rip+0x143cf]        # 439e99 <flatcc_builder_padding_base@@Base+0x1c39>
  425aca:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425acf:	lea    rax,[rip+0x143d5]        # 439eab <flatcc_builder_padding_base@@Base+0x1c4b>
  425ad6:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425adb:	lea    rax,[rip+0x143d8]        # 439eba <flatcc_builder_padding_base@@Base+0x1c5a>
  425ae2:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425ae7:	lea    rax,[rip+0x143dd]        # 439ecb <flatcc_builder_padding_base@@Base+0x1c6b>
  425aee:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425af3:	lea    rax,[rip+0x143e0]        # 439eda <flatcc_builder_padding_base@@Base+0x1c7a>
  425afa:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425aff:	lea    rax,[rip+0x143ed]        # 439ef3 <flatcc_builder_padding_base@@Base+0x1c93>
  425b06:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b0b:	lea    rax,[rip+0x143f4]        # 439f06 <flatcc_builder_padding_base@@Base+0x1ca6>
  425b12:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b17:	lea    rax,[rip+0x143f8]        # 439f16 <flatcc_builder_padding_base@@Base+0x1cb6>
  425b1e:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b23:	lea    rax,[rip+0x143fe]        # 439f28 <flatcc_builder_padding_base@@Base+0x1cc8>
  425b2a:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b2f:	lea    rax,[rip+0x14401]        # 439f37 <flatcc_builder_padding_base@@Base+0x1cd7>
  425b36:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b3b:	lea    rax,[rip+0x14402]        # 439f44 <flatcc_builder_padding_base@@Base+0x1ce4>
  425b42:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b47:	lea    rax,[rip+0x1440a]        # 439f58 <flatcc_builder_padding_base@@Base+0x1cf8>
  425b4e:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b50:	lea    rax,[rip+0x14411]        # 439f68 <flatcc_builder_padding_base@@Base+0x1d08>
  425b57:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b59:	lea    rax,[rip+0x14418]        # 439f78 <flatcc_builder_padding_base@@Base+0x1d18>
  425b60:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b62:	lea    rax,[rip+0x14433]        # 439f9c <flatcc_builder_padding_base@@Base+0x1d3c>
  425b69:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b6b:	lea    rax,[rip+0x1443e]        # 439fb0 <flatcc_builder_padding_base@@Base+0x1d50>
  425b72:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b74:	lea    rax,[rip+0x14455]        # 439fd0 <flatcc_builder_padding_base@@Base+0x1d70>
  425b7b:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b7d:	lea    rax,[rip+0x1446b]        # 439fef <flatcc_builder_padding_base@@Base+0x1d8f>
  425b84:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b86:	lea    rax,[rip+0x1447d]        # 43a00a <flatcc_builder_padding_base@@Base+0x1daa>
  425b8d:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b8f:	lea    rax,[rip+0x1448e]        # 43a024 <flatcc_builder_padding_base@@Base+0x1dc4>
  425b96:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425b98:	lea    rax,[rip+0x1449c]        # 43a03b <flatcc_builder_padding_base@@Base+0x1ddb>
  425b9f:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425ba1:	lea    rax,[rip+0x144b0]        # 43a058 <flatcc_builder_padding_base@@Base+0x1df8>
  425ba8:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425baa:	lea    rax,[rip+0x144be]        # 43a06f <flatcc_builder_padding_base@@Base+0x1e0f>
  425bb1:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425bb3:	lea    rax,[rip+0x144cf]        # 43a089 <flatcc_builder_padding_base@@Base+0x1e29>
  425bba:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425bbc:	lea    rax,[rip+0x144d4]        # 43a097 <flatcc_builder_padding_base@@Base+0x1e37>
  425bc3:	jmp    425bcc <flatcc_json_parser_error_string@@Base+0x1b6>
  425bc5:	lea    rax,[rip+0x144d9]        # 43a0a5 <flatcc_builder_padding_base@@Base+0x1e45>
  425bcc:	pop    rbp
  425bcd:	ret    

0000000000425bce <flatcc_json_parser_set_error@@Base>:
  425bce:	push   rbp
  425bcf:	mov    rbp,rsp
  425bd2:	mov    QWORD PTR [rbp-0x8],rdi
  425bd6:	mov    QWORD PTR [rbp-0x10],rsi
  425bda:	mov    QWORD PTR [rbp-0x18],rdx
  425bde:	mov    DWORD PTR [rbp-0x1c],ecx
  425be1:	mov    rax,QWORD PTR [rbp-0x8]
  425be5:	mov    eax,DWORD PTR [rax+0x1c]
  425be8:	test   eax,eax
  425bea:	jne    425c20 <flatcc_json_parser_set_error@@Base+0x52>
  425bec:	mov    rax,QWORD PTR [rbp-0x8]
  425bf0:	mov    edx,DWORD PTR [rbp-0x1c]
  425bf3:	mov    DWORD PTR [rax+0x1c],edx
  425bf6:	mov    rdx,QWORD PTR [rbp-0x10]
  425bfa:	mov    rax,QWORD PTR [rbp-0x8]
  425bfe:	mov    rax,QWORD PTR [rax+0x8]
  425c02:	sub    rdx,rax
  425c05:	mov    rax,rdx
  425c08:	add    eax,0x1
  425c0b:	mov    edx,eax
  425c0d:	mov    rax,QWORD PTR [rbp-0x8]
  425c11:	mov    DWORD PTR [rax+0x18],edx
  425c14:	mov    rax,QWORD PTR [rbp-0x8]
  425c18:	mov    rdx,QWORD PTR [rbp-0x10]
  425c1c:	mov    QWORD PTR [rax+0x30],rdx
  425c20:	mov    rax,QWORD PTR [rbp-0x18]
  425c24:	pop    rbp
  425c25:	ret    

0000000000425c26 <flatcc_json_parser_string_part@@Base>:
  425c26:	push   rbp
  425c27:	mov    rbp,rsp
  425c2a:	sub    rsp,0x20
  425c2e:	mov    QWORD PTR [rbp-0x8],rdi
  425c32:	mov    QWORD PTR [rbp-0x10],rsi
  425c36:	mov    QWORD PTR [rbp-0x18],rdx
  425c3a:	jmp    425c41 <flatcc_json_parser_string_part@@Base+0x1b>
  425c3c:	add    QWORD PTR [rbp-0x10],0x1
  425c41:	mov    rax,QWORD PTR [rbp-0x10]
  425c45:	cmp    rax,QWORD PTR [rbp-0x18]
  425c49:	je     425c6c <flatcc_json_parser_string_part@@Base+0x46>
  425c4b:	mov    rax,QWORD PTR [rbp-0x10]
  425c4f:	movzx  eax,BYTE PTR [rax]
  425c52:	cmp    al,0x22
  425c54:	je     425c6c <flatcc_json_parser_string_part@@Base+0x46>
  425c56:	mov    rax,QWORD PTR [rbp-0x10]
  425c5a:	movzx  eax,BYTE PTR [rax]
  425c5d:	cmp    al,0x1f
  425c5f:	jbe    425c6c <flatcc_json_parser_string_part@@Base+0x46>
  425c61:	mov    rax,QWORD PTR [rbp-0x10]
  425c65:	movzx  eax,BYTE PTR [rax]
  425c68:	cmp    al,0x5c
  425c6a:	jne    425c3c <flatcc_json_parser_string_part@@Base+0x16>
  425c6c:	mov    rax,QWORD PTR [rbp-0x10]
  425c70:	cmp    rax,QWORD PTR [rbp-0x18]
  425c74:	jne    425c91 <flatcc_json_parser_string_part@@Base+0x6b>
  425c76:	mov    rdx,QWORD PTR [rbp-0x18]
  425c7a:	mov    rsi,QWORD PTR [rbp-0x10]
  425c7e:	mov    rax,QWORD PTR [rbp-0x8]
  425c82:	mov    ecx,0x14
  425c87:	mov    rdi,rax
  425c8a:	call   425bce <flatcc_json_parser_set_error@@Base>
  425c8f:	jmp    425ccc <flatcc_json_parser_string_part@@Base+0xa6>
  425c91:	mov    rax,QWORD PTR [rbp-0x10]
  425c95:	movzx  eax,BYTE PTR [rax]
  425c98:	cmp    al,0x22
  425c9a:	jne    425ca2 <flatcc_json_parser_string_part@@Base+0x7c>
  425c9c:	mov    rax,QWORD PTR [rbp-0x10]
  425ca0:	jmp    425ccc <flatcc_json_parser_string_part@@Base+0xa6>
  425ca2:	mov    rax,QWORD PTR [rbp-0x10]
  425ca6:	movzx  eax,BYTE PTR [rax]
  425ca9:	cmp    al,0x1f
  425cab:	jg     425cc8 <flatcc_json_parser_string_part@@Base+0xa2>
  425cad:	mov    rdx,QWORD PTR [rbp-0x18]
  425cb1:	mov    rsi,QWORD PTR [rbp-0x10]
  425cb5:	mov    rax,QWORD PTR [rbp-0x8]
  425cb9:	mov    ecx,0x11
  425cbe:	mov    rdi,rax
  425cc1:	call   425bce <flatcc_json_parser_set_error@@Base>
  425cc6:	jmp    425ccc <flatcc_json_parser_string_part@@Base+0xa6>
  425cc8:	mov    rax,QWORD PTR [rbp-0x10]
  425ccc:	leave  
  425ccd:	ret    

0000000000425cce <flatcc_json_parser_space_ext@@Base>:
  425cce:	push   rbp
  425ccf:	mov    rbp,rsp
  425cd2:	sub    rsp,0x20
  425cd6:	mov    QWORD PTR [rbp-0x8],rdi
  425cda:	mov    QWORD PTR [rbp-0x10],rsi
  425cde:	mov    QWORD PTR [rbp-0x18],rdx
  425ce2:	nop
  425ce3:	mov    rdx,QWORD PTR [rbp-0x18]
  425ce7:	mov    rax,QWORD PTR [rbp-0x10]
  425ceb:	sub    rdx,rax
  425cee:	mov    rax,rdx
  425cf1:	cmp    rax,0xf
  425cf5:	jle    425d49 <flatcc_json_parser_space_ext@@Base+0x7b>
  425cf7:	mov    rax,QWORD PTR [rbp-0x10]
  425cfb:	movzx  eax,BYTE PTR [rax]
  425cfe:	cmp    al,0x20
  425d00:	jle    425d0b <flatcc_json_parser_space_ext@@Base+0x3d>
  425d02:	mov    rax,QWORD PTR [rbp-0x10]
  425d06:	jmp    425e2a <flatcc_json_parser_space_ext@@Base+0x15c>
  425d0b:	mov    rax,QWORD PTR [rbp-0x10]
  425d0f:	movzx  eax,WORD PTR [rax]
  425d12:	cmp    ax,0x2020
  425d16:	jne    425d1d <flatcc_json_parser_space_ext@@Base+0x4f>
  425d18:	add    QWORD PTR [rbp-0x10],0x2
  425d1d:	mov    rax,QWORD PTR [rbp-0x10]
  425d21:	movzx  eax,BYTE PTR [rax]
  425d24:	cmp    al,0x20
  425d26:	jne    425d2d <flatcc_json_parser_space_ext@@Base+0x5f>
  425d28:	add    QWORD PTR [rbp-0x10],0x1
  425d2d:	mov    rax,QWORD PTR [rbp-0x10]
  425d31:	movzx  eax,BYTE PTR [rax]
  425d34:	cmp    al,0x20
  425d36:	jle    425d41 <flatcc_json_parser_space_ext@@Base+0x73>
  425d38:	mov    rax,QWORD PTR [rbp-0x10]
  425d3c:	jmp    425e2a <flatcc_json_parser_space_ext@@Base+0x15c>
  425d41:	nop
  425d42:	jmp    425d49 <flatcc_json_parser_space_ext@@Base+0x7b>
  425d44:	add    QWORD PTR [rbp-0x10],0x1
  425d49:	mov    rax,QWORD PTR [rbp-0x10]
  425d4d:	cmp    rax,QWORD PTR [rbp-0x18]
  425d51:	je     425e0d <flatcc_json_parser_space_ext@@Base+0x13f>
  425d57:	mov    rax,QWORD PTR [rbp-0x10]
  425d5b:	movzx  eax,BYTE PTR [rax]
  425d5e:	cmp    al,0x20
  425d60:	je     425d44 <flatcc_json_parser_space_ext@@Base+0x76>
  425d62:	jmp    425e0d <flatcc_json_parser_space_ext@@Base+0x13f>
  425d67:	mov    rax,QWORD PTR [rbp-0x10]
  425d6b:	movzx  eax,BYTE PTR [rax]
  425d6e:	movsx  eax,al
  425d71:	cmp    eax,0xa
  425d74:	je     425dc7 <flatcc_json_parser_space_ext@@Base+0xf9>
  425d76:	cmp    eax,0xa
  425d79:	jg     425d82 <flatcc_json_parser_space_ext@@Base+0xb4>
  425d7b:	cmp    eax,0x9
  425d7e:	je     425deb <flatcc_json_parser_space_ext@@Base+0x11d>
  425d80:	jmp    425df2 <flatcc_json_parser_space_ext@@Base+0x124>
  425d82:	cmp    eax,0xd
  425d85:	je     425d92 <flatcc_json_parser_space_ext@@Base+0xc4>
  425d87:	cmp    eax,0x20
  425d8a:	je     425ce2 <flatcc_json_parser_space_ext@@Base+0x14>
  425d90:	jmp    425df2 <flatcc_json_parser_space_ext@@Base+0x124>
  425d92:	mov    rdx,QWORD PTR [rbp-0x18]
  425d96:	mov    rax,QWORD PTR [rbp-0x10]
  425d9a:	sub    rdx,rax
  425d9d:	mov    rax,rdx
  425da0:	cmp    rax,0x1
  425da4:	jle    425dbc <flatcc_json_parser_space_ext@@Base+0xee>
  425da6:	mov    rax,QWORD PTR [rbp-0x10]
  425daa:	add    rax,0x1
  425dae:	movzx  eax,BYTE PTR [rax]
  425db1:	cmp    al,0xa
  425db3:	jne    425dbc <flatcc_json_parser_space_ext@@Base+0xee>
  425db5:	mov    eax,0x1
  425dba:	jmp    425dc1 <flatcc_json_parser_space_ext@@Base+0xf3>
  425dbc:	mov    eax,0x0
  425dc1:	cdqe   
  425dc3:	add    QWORD PTR [rbp-0x10],rax
  425dc7:	mov    rax,QWORD PTR [rbp-0x8]
  425dcb:	mov    eax,DWORD PTR [rax+0x14]
  425dce:	lea    edx,[rax+0x1]
  425dd1:	mov    rax,QWORD PTR [rbp-0x8]
  425dd5:	mov    DWORD PTR [rax+0x14],edx
  425dd8:	add    QWORD PTR [rbp-0x10],0x1
  425ddd:	mov    rax,QWORD PTR [rbp-0x8]
  425de1:	mov    rdx,QWORD PTR [rbp-0x10]
  425de5:	mov    QWORD PTR [rax+0x8],rdx
  425de9:	jmp    425e0d <flatcc_json_parser_space_ext@@Base+0x13f>
  425deb:	add    QWORD PTR [rbp-0x10],0x1
  425df0:	jmp    425e0d <flatcc_json_parser_space_ext@@Base+0x13f>
  425df2:	mov    rdx,QWORD PTR [rbp-0x18]
  425df6:	mov    rsi,QWORD PTR [rbp-0x10]
  425dfa:	mov    rax,QWORD PTR [rbp-0x8]
  425dfe:	mov    ecx,0x5
  425e03:	mov    rdi,rax
  425e06:	call   425bce <flatcc_json_parser_set_error@@Base>
  425e0b:	jmp    425e2a <flatcc_json_parser_space_ext@@Base+0x15c>
  425e0d:	mov    rax,QWORD PTR [rbp-0x10]
  425e11:	cmp    rax,QWORD PTR [rbp-0x18]
  425e15:	je     425e26 <flatcc_json_parser_space_ext@@Base+0x158>
  425e17:	mov    rax,QWORD PTR [rbp-0x10]
  425e1b:	movzx  eax,BYTE PTR [rax]
  425e1e:	cmp    al,0x20
  425e20:	jle    425d67 <flatcc_json_parser_space_ext@@Base+0x99>
  425e26:	mov    rax,QWORD PTR [rbp-0x10]
  425e2a:	leave  
  425e2b:	ret    

0000000000425e2c <flatcc_json_parser_string_escape@@Base>:
  425e2c:	push   rbp
  425e2d:	mov    rbp,rsp
  425e30:	sub    rsp,0x30
  425e34:	mov    QWORD PTR [rbp-0x18],rdi
  425e38:	mov    QWORD PTR [rbp-0x20],rsi
  425e3c:	mov    QWORD PTR [rbp-0x28],rdx
  425e40:	mov    QWORD PTR [rbp-0x30],rcx
  425e44:	mov    rdx,QWORD PTR [rbp-0x28]
  425e48:	mov    rax,QWORD PTR [rbp-0x20]
  425e4c:	sub    rdx,rax
  425e4f:	mov    rax,rdx
  425e52:	cmp    rax,0x1
  425e56:	jle    425e63 <flatcc_json_parser_string_escape@@Base+0x37>
  425e58:	mov    rax,QWORD PTR [rbp-0x20]
  425e5c:	movzx  eax,BYTE PTR [rax]
  425e5f:	cmp    al,0x5c
  425e61:	je     425e88 <flatcc_json_parser_string_escape@@Base+0x5c>
  425e63:	mov    rax,QWORD PTR [rbp-0x30]
  425e67:	mov    BYTE PTR [rax],0x0
  425e6a:	mov    rdx,QWORD PTR [rbp-0x28]
  425e6e:	mov    rsi,QWORD PTR [rbp-0x20]
  425e72:	mov    rax,QWORD PTR [rbp-0x18]
  425e76:	mov    ecx,0x12
  425e7b:	mov    rdi,rax
  425e7e:	call   425bce <flatcc_json_parser_set_error@@Base>
  425e83:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  425e88:	mov    rax,QWORD PTR [rbp-0x20]
  425e8c:	add    rax,0x1
  425e90:	movzx  eax,BYTE PTR [rax]
  425e93:	movsx  eax,al
  425e96:	sub    eax,0x22
  425e99:	cmp    eax,0x56
  425e9c:	ja     4263e7 <flatcc_json_parser_string_escape@@Base+0x5bb>
  425ea2:	mov    eax,eax
  425ea4:	lea    rdx,[rax*4+0x0]
  425eac:	lea    rax,[rip+0x14289]        # 43a13c <flatcc_builder_padding_base@@Base+0x1edc>
  425eb3:	mov    eax,DWORD PTR [rdx+rax*1]
  425eb6:	movsxd rdx,eax
  425eb9:	lea    rax,[rip+0x1427c]        # 43a13c <flatcc_builder_padding_base@@Base+0x1edc>
  425ec0:	add    rax,rdx
  425ec3:	jmp    rax
  425ec5:	mov    BYTE PTR [rbp-0x6],0x0
  425ec9:	mov    rax,QWORD PTR [rbp-0x30]
  425ecd:	mov    BYTE PTR [rax],0x1
  425ed0:	mov    rdx,QWORD PTR [rbp-0x28]
  425ed4:	mov    rax,QWORD PTR [rbp-0x20]
  425ed8:	sub    rdx,rax
  425edb:	mov    rax,rdx
  425ede:	cmp    rax,0x3
  425ee2:	jg     425f09 <flatcc_json_parser_string_escape@@Base+0xdd>
  425ee4:	mov    rax,QWORD PTR [rbp-0x30]
  425ee8:	mov    BYTE PTR [rax],0x0
  425eeb:	mov    rdx,QWORD PTR [rbp-0x28]
  425eef:	mov    rsi,QWORD PTR [rbp-0x20]
  425ef3:	mov    rax,QWORD PTR [rbp-0x18]
  425ef7:	mov    ecx,0x12
  425efc:	mov    rdi,rax
  425eff:	call   425bce <flatcc_json_parser_set_error@@Base>
  425f04:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  425f09:	mov    rax,QWORD PTR [rbp-0x20]
  425f0d:	movzx  eax,BYTE PTR [rax+0x2]
  425f11:	mov    BYTE PTR [rbp-0x5],al
  425f14:	cmp    BYTE PTR [rbp-0x5],0x2f
  425f18:	jle    425f2f <flatcc_json_parser_string_escape@@Base+0x103>
  425f1a:	cmp    BYTE PTR [rbp-0x5],0x39
  425f1e:	jg     425f2f <flatcc_json_parser_string_escape@@Base+0x103>
  425f20:	movsx  eax,BYTE PTR [rbp-0x5]
  425f24:	sub    eax,0x30
  425f27:	shl    eax,0x4
  425f2a:	or     BYTE PTR [rbp-0x6],al
  425f2d:	jmp    425f73 <flatcc_json_parser_string_escape@@Base+0x147>
  425f2f:	or     BYTE PTR [rbp-0x5],0x20
  425f33:	cmp    BYTE PTR [rbp-0x5],0x60
  425f37:	jle    425f4e <flatcc_json_parser_string_escape@@Base+0x122>
  425f39:	cmp    BYTE PTR [rbp-0x5],0x66
  425f3d:	jg     425f4e <flatcc_json_parser_string_escape@@Base+0x122>
  425f3f:	movsx  eax,BYTE PTR [rbp-0x5]
  425f43:	sub    eax,0x57
  425f46:	shl    eax,0x4
  425f49:	or     BYTE PTR [rbp-0x6],al
  425f4c:	jmp    425f73 <flatcc_json_parser_string_escape@@Base+0x147>
  425f4e:	mov    rax,QWORD PTR [rbp-0x30]
  425f52:	mov    BYTE PTR [rax],0x0
  425f55:	mov    rdx,QWORD PTR [rbp-0x28]
  425f59:	mov    rsi,QWORD PTR [rbp-0x20]
  425f5d:	mov    rax,QWORD PTR [rbp-0x18]
  425f61:	mov    ecx,0x12
  425f66:	mov    rdi,rax
  425f69:	call   425bce <flatcc_json_parser_set_error@@Base>
  425f6e:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  425f73:	mov    rax,QWORD PTR [rbp-0x20]
  425f77:	movzx  eax,BYTE PTR [rax+0x3]
  425f7b:	mov    BYTE PTR [rbp-0x5],al
  425f7e:	cmp    BYTE PTR [rbp-0x5],0x2f
  425f82:	jle    425f96 <flatcc_json_parser_string_escape@@Base+0x16a>
  425f84:	cmp    BYTE PTR [rbp-0x5],0x39
  425f88:	jg     425f96 <flatcc_json_parser_string_escape@@Base+0x16a>
  425f8a:	movzx  eax,BYTE PTR [rbp-0x5]
  425f8e:	sub    eax,0x30
  425f91:	or     BYTE PTR [rbp-0x6],al
  425f94:	jmp    425fd7 <flatcc_json_parser_string_escape@@Base+0x1ab>
  425f96:	or     BYTE PTR [rbp-0x5],0x20
  425f9a:	cmp    BYTE PTR [rbp-0x5],0x60
  425f9e:	jle    425fb2 <flatcc_json_parser_string_escape@@Base+0x186>
  425fa0:	cmp    BYTE PTR [rbp-0x5],0x66
  425fa4:	jg     425fb2 <flatcc_json_parser_string_escape@@Base+0x186>
  425fa6:	movzx  eax,BYTE PTR [rbp-0x5]
  425faa:	sub    eax,0x57
  425fad:	or     BYTE PTR [rbp-0x6],al
  425fb0:	jmp    425fd7 <flatcc_json_parser_string_escape@@Base+0x1ab>
  425fb2:	mov    rax,QWORD PTR [rbp-0x30]
  425fb6:	mov    BYTE PTR [rax],0x0
  425fb9:	mov    rdx,QWORD PTR [rbp-0x28]
  425fbd:	mov    rsi,QWORD PTR [rbp-0x20]
  425fc1:	mov    rax,QWORD PTR [rbp-0x18]
  425fc5:	mov    ecx,0x12
  425fca:	mov    rdi,rax
  425fcd:	call   425bce <flatcc_json_parser_set_error@@Base>
  425fd2:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  425fd7:	mov    rax,QWORD PTR [rbp-0x30]
  425fdb:	lea    rdx,[rax+0x1]
  425fdf:	movzx  eax,BYTE PTR [rbp-0x6]
  425fe3:	mov    BYTE PTR [rdx],al
  425fe5:	mov    rax,QWORD PTR [rbp-0x20]
  425fe9:	add    rax,0x4
  425fed:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  425ff2:	mov    rdx,QWORD PTR [rbp-0x28]
  425ff6:	mov    rax,QWORD PTR [rbp-0x20]
  425ffa:	sub    rdx,rax
  425ffd:	mov    rax,rdx
  426000:	cmp    rax,0x5
  426004:	jg     42602b <flatcc_json_parser_string_escape@@Base+0x1ff>
  426006:	mov    rax,QWORD PTR [rbp-0x30]
  42600a:	mov    BYTE PTR [rax],0x0
  42600d:	mov    rdx,QWORD PTR [rbp-0x28]
  426011:	mov    rsi,QWORD PTR [rbp-0x20]
  426015:	mov    rax,QWORD PTR [rbp-0x18]
  426019:	mov    ecx,0x12
  42601e:	mov    rdi,rax
  426021:	call   425bce <flatcc_json_parser_set_error@@Base>
  426026:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  42602b:	mov    WORD PTR [rbp-0x4],0x0
  426031:	mov    rax,QWORD PTR [rbp-0x20]
  426035:	movzx  eax,BYTE PTR [rax+0x2]
  426039:	mov    BYTE PTR [rbp-0x5],al
  42603c:	cmp    BYTE PTR [rbp-0x5],0x2f
  426040:	jle    426061 <flatcc_json_parser_string_escape@@Base+0x235>
  426042:	cmp    BYTE PTR [rbp-0x5],0x39
  426046:	jg     426061 <flatcc_json_parser_string_escape@@Base+0x235>
  426048:	movsx  ax,BYTE PTR [rbp-0x5]
  42604d:	sub    eax,0x30
  426050:	mov    WORD PTR [rbp-0x2],ax
  426054:	movzx  eax,WORD PTR [rbp-0x2]
  426058:	shl    eax,0xc
  42605b:	mov    WORD PTR [rbp-0x4],ax
  42605f:	jmp    4260b7 <flatcc_json_parser_string_escape@@Base+0x28b>
  426061:	or     BYTE PTR [rbp-0x5],0x20
  426065:	cmp    BYTE PTR [rbp-0x5],0x60
  426069:	jle    426092 <flatcc_json_parser_string_escape@@Base+0x266>
  42606b:	cmp    BYTE PTR [rbp-0x5],0x66
  42606f:	jg     426092 <flatcc_json_parser_string_escape@@Base+0x266>
  426071:	movsx  ax,BYTE PTR [rbp-0x5]
  426076:	sub    eax,0x57
  426079:	mov    WORD PTR [rbp-0x2],ax
  42607d:	movzx  eax,WORD PTR [rbp-0x2]
  426081:	shl    eax,0xc
  426084:	mov    edx,eax
  426086:	movzx  eax,WORD PTR [rbp-0x4]
  42608a:	or     eax,edx
  42608c:	mov    WORD PTR [rbp-0x4],ax
  426090:	jmp    4260b7 <flatcc_json_parser_string_escape@@Base+0x28b>
  426092:	mov    rax,QWORD PTR [rbp-0x30]
  426096:	mov    BYTE PTR [rax],0x0
  426099:	mov    rdx,QWORD PTR [rbp-0x28]
  42609d:	mov    rsi,QWORD PTR [rbp-0x20]
  4260a1:	mov    rax,QWORD PTR [rbp-0x18]
  4260a5:	mov    ecx,0x12
  4260aa:	mov    rdi,rax
  4260ad:	call   425bce <flatcc_json_parser_set_error@@Base>
  4260b2:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  4260b7:	mov    rax,QWORD PTR [rbp-0x20]
  4260bb:	movzx  eax,BYTE PTR [rax+0x3]
  4260bf:	mov    BYTE PTR [rbp-0x5],al
  4260c2:	cmp    BYTE PTR [rbp-0x5],0x2f
  4260c6:	jle    4260ef <flatcc_json_parser_string_escape@@Base+0x2c3>
  4260c8:	cmp    BYTE PTR [rbp-0x5],0x39
  4260cc:	jg     4260ef <flatcc_json_parser_string_escape@@Base+0x2c3>
  4260ce:	movsx  ax,BYTE PTR [rbp-0x5]
  4260d3:	sub    eax,0x30
  4260d6:	mov    WORD PTR [rbp-0x2],ax
  4260da:	movzx  eax,WORD PTR [rbp-0x2]
  4260de:	shl    eax,0x8
  4260e1:	mov    edx,eax
  4260e3:	movzx  eax,WORD PTR [rbp-0x4]
  4260e7:	or     eax,edx
  4260e9:	mov    WORD PTR [rbp-0x4],ax
  4260ed:	jmp    426145 <flatcc_json_parser_string_escape@@Base+0x319>
  4260ef:	or     BYTE PTR [rbp-0x5],0x20
  4260f3:	cmp    BYTE PTR [rbp-0x5],0x60
  4260f7:	jle    426120 <flatcc_json_parser_string_escape@@Base+0x2f4>
  4260f9:	cmp    BYTE PTR [rbp-0x5],0x66
  4260fd:	jg     426120 <flatcc_json_parser_string_escape@@Base+0x2f4>
  4260ff:	movsx  ax,BYTE PTR [rbp-0x5]
  426104:	sub    eax,0x57
  426107:	mov    WORD PTR [rbp-0x2],ax
  42610b:	movzx  eax,WORD PTR [rbp-0x2]
  42610f:	shl    eax,0x8
  426112:	mov    edx,eax
  426114:	movzx  eax,WORD PTR [rbp-0x4]
  426118:	or     eax,edx
  42611a:	mov    WORD PTR [rbp-0x4],ax
  42611e:	jmp    426145 <flatcc_json_parser_string_escape@@Base+0x319>
  426120:	mov    rax,QWORD PTR [rbp-0x30]
  426124:	mov    BYTE PTR [rax],0x0
  426127:	mov    rdx,QWORD PTR [rbp-0x28]
  42612b:	mov    rsi,QWORD PTR [rbp-0x20]
  42612f:	mov    rax,QWORD PTR [rbp-0x18]
  426133:	mov    ecx,0x12
  426138:	mov    rdi,rax
  42613b:	call   425bce <flatcc_json_parser_set_error@@Base>
  426140:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  426145:	mov    rax,QWORD PTR [rbp-0x20]
  426149:	movzx  eax,BYTE PTR [rax+0x4]
  42614d:	mov    BYTE PTR [rbp-0x5],al
  426150:	cmp    BYTE PTR [rbp-0x5],0x2f
  426154:	jle    42617d <flatcc_json_parser_string_escape@@Base+0x351>
  426156:	cmp    BYTE PTR [rbp-0x5],0x39
  42615a:	jg     42617d <flatcc_json_parser_string_escape@@Base+0x351>
  42615c:	movsx  ax,BYTE PTR [rbp-0x5]
  426161:	sub    eax,0x30
  426164:	mov    WORD PTR [rbp-0x2],ax
  426168:	movzx  eax,WORD PTR [rbp-0x2]
  42616c:	shl    eax,0x4
  42616f:	mov    edx,eax
  426171:	movzx  eax,WORD PTR [rbp-0x4]
  426175:	or     eax,edx
  426177:	mov    WORD PTR [rbp-0x4],ax
  42617b:	jmp    4261d3 <flatcc_json_parser_string_escape@@Base+0x3a7>
  42617d:	or     BYTE PTR [rbp-0x5],0x20
  426181:	cmp    BYTE PTR [rbp-0x5],0x60
  426185:	jle    4261ae <flatcc_json_parser_string_escape@@Base+0x382>
  426187:	cmp    BYTE PTR [rbp-0x5],0x66
  42618b:	jg     4261ae <flatcc_json_parser_string_escape@@Base+0x382>
  42618d:	movsx  ax,BYTE PTR [rbp-0x5]
  426192:	sub    eax,0x57
  426195:	mov    WORD PTR [rbp-0x2],ax
  426199:	movzx  eax,WORD PTR [rbp-0x2]
  42619d:	shl    eax,0x4
  4261a0:	mov    edx,eax
  4261a2:	movzx  eax,WORD PTR [rbp-0x4]
  4261a6:	or     eax,edx
  4261a8:	mov    WORD PTR [rbp-0x4],ax
  4261ac:	jmp    4261d3 <flatcc_json_parser_string_escape@@Base+0x3a7>
  4261ae:	mov    rax,QWORD PTR [rbp-0x30]
  4261b2:	mov    BYTE PTR [rax],0x0
  4261b5:	mov    rdx,QWORD PTR [rbp-0x28]
  4261b9:	mov    rsi,QWORD PTR [rbp-0x20]
  4261bd:	mov    rax,QWORD PTR [rbp-0x18]
  4261c1:	mov    ecx,0x12
  4261c6:	mov    rdi,rax
  4261c9:	call   425bce <flatcc_json_parser_set_error@@Base>
  4261ce:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  4261d3:	mov    rax,QWORD PTR [rbp-0x20]
  4261d7:	movzx  eax,BYTE PTR [rax+0x5]
  4261db:	mov    BYTE PTR [rbp-0x5],al
  4261de:	cmp    BYTE PTR [rbp-0x5],0x2f
  4261e2:	jle    426200 <flatcc_json_parser_string_escape@@Base+0x3d4>
  4261e4:	cmp    BYTE PTR [rbp-0x5],0x39
  4261e8:	jg     426200 <flatcc_json_parser_string_escape@@Base+0x3d4>
  4261ea:	movsx  ax,BYTE PTR [rbp-0x5]
  4261ef:	sub    eax,0x30
  4261f2:	mov    WORD PTR [rbp-0x2],ax
  4261f6:	movzx  eax,WORD PTR [rbp-0x2]
  4261fa:	or     WORD PTR [rbp-0x4],ax
  4261fe:	jmp    42624b <flatcc_json_parser_string_escape@@Base+0x41f>
  426200:	or     BYTE PTR [rbp-0x5],0x20
  426204:	cmp    BYTE PTR [rbp-0x5],0x60
  426208:	jle    426226 <flatcc_json_parser_string_escape@@Base+0x3fa>
  42620a:	cmp    BYTE PTR [rbp-0x5],0x66
  42620e:	jg     426226 <flatcc_json_parser_string_escape@@Base+0x3fa>
  426210:	movsx  ax,BYTE PTR [rbp-0x5]
  426215:	sub    eax,0x57
  426218:	mov    WORD PTR [rbp-0x2],ax
  42621c:	movzx  eax,WORD PTR [rbp-0x2]
  426220:	or     WORD PTR [rbp-0x4],ax
  426224:	jmp    42624b <flatcc_json_parser_string_escape@@Base+0x41f>
  426226:	mov    rax,QWORD PTR [rbp-0x30]
  42622a:	mov    BYTE PTR [rax],0x0
  42622d:	mov    rdx,QWORD PTR [rbp-0x28]
  426231:	mov    rsi,QWORD PTR [rbp-0x20]
  426235:	mov    rax,QWORD PTR [rbp-0x18]
  426239:	mov    ecx,0x12
  42623e:	mov    rdi,rax
  426241:	call   425bce <flatcc_json_parser_set_error@@Base>
  426246:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  42624b:	cmp    WORD PTR [rbp-0x4],0x7f
  426250:	ja     42626c <flatcc_json_parser_string_escape@@Base+0x440>
  426252:	mov    rax,QWORD PTR [rbp-0x30]
  426256:	mov    BYTE PTR [rax],0x1
  426259:	mov    rax,QWORD PTR [rbp-0x30]
  42625d:	add    rax,0x1
  426261:	movzx  edx,WORD PTR [rbp-0x4]
  426265:	mov    BYTE PTR [rax],dl
  426267:	jmp    4262ee <flatcc_json_parser_string_escape@@Base+0x4c2>
  42626c:	cmp    WORD PTR [rbp-0x4],0x7ff
  426272:	ja     4262a6 <flatcc_json_parser_string_escape@@Base+0x47a>
  426274:	mov    rax,QWORD PTR [rbp-0x30]
  426278:	mov    BYTE PTR [rax],0x2
  42627b:	mov    rax,QWORD PTR [rbp-0x30]
  42627f:	add    rax,0x1
  426283:	movzx  edx,WORD PTR [rbp-0x4]
  426287:	shr    dx,0x6
  42628b:	or     edx,0xffffffc0
  42628e:	mov    BYTE PTR [rax],dl
  426290:	mov    rax,QWORD PTR [rbp-0x30]
  426294:	add    rax,0x2
  426298:	movzx  edx,WORD PTR [rbp-0x4]
  42629c:	and    edx,0x3f
  42629f:	or     edx,0xffffff80
  4262a2:	mov    BYTE PTR [rax],dl
  4262a4:	jmp    4262ee <flatcc_json_parser_string_escape@@Base+0x4c2>
  4262a6:	mov    rax,QWORD PTR [rbp-0x30]
  4262aa:	mov    BYTE PTR [rax],0x3
  4262ad:	mov    rax,QWORD PTR [rbp-0x30]
  4262b1:	add    rax,0x1
  4262b5:	movzx  edx,WORD PTR [rbp-0x4]
  4262b9:	shr    dx,0xc
  4262bd:	or     edx,0xffffffe0
  4262c0:	mov    BYTE PTR [rax],dl
  4262c2:	mov    rax,QWORD PTR [rbp-0x30]
  4262c6:	add    rax,0x2
  4262ca:	movzx  edx,WORD PTR [rbp-0x4]
  4262ce:	shr    dx,0x6
  4262d2:	and    edx,0x3f
  4262d5:	or     edx,0xffffff80
  4262d8:	mov    BYTE PTR [rax],dl
  4262da:	mov    rax,QWORD PTR [rbp-0x30]
  4262de:	add    rax,0x3
  4262e2:	movzx  edx,WORD PTR [rbp-0x4]
  4262e6:	and    edx,0x3f
  4262e9:	or     edx,0xffffff80
  4262ec:	mov    BYTE PTR [rax],dl
  4262ee:	mov    rax,QWORD PTR [rbp-0x20]
  4262f2:	add    rax,0x6
  4262f6:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  4262fb:	mov    rax,QWORD PTR [rbp-0x30]
  4262ff:	mov    BYTE PTR [rax],0x1
  426302:	mov    rax,QWORD PTR [rbp-0x30]
  426306:	add    rax,0x1
  42630a:	mov    BYTE PTR [rax],0x9
  42630d:	mov    rax,QWORD PTR [rbp-0x20]
  426311:	add    rax,0x2
  426315:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  42631a:	mov    rax,QWORD PTR [rbp-0x30]
  42631e:	mov    BYTE PTR [rax],0x1
  426321:	mov    rax,QWORD PTR [rbp-0x30]
  426325:	add    rax,0x1
  426329:	mov    BYTE PTR [rax],0xa
  42632c:	mov    rax,QWORD PTR [rbp-0x20]
  426330:	add    rax,0x2
  426334:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  426339:	mov    rax,QWORD PTR [rbp-0x30]
  42633d:	mov    BYTE PTR [rax],0x1
  426340:	mov    rax,QWORD PTR [rbp-0x30]
  426344:	add    rax,0x1
  426348:	mov    BYTE PTR [rax],0xd
  42634b:	mov    rax,QWORD PTR [rbp-0x20]
  42634f:	add    rax,0x2
  426353:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  426358:	mov    rax,QWORD PTR [rbp-0x30]
  42635c:	mov    BYTE PTR [rax],0x1
  42635f:	mov    rax,QWORD PTR [rbp-0x30]
  426363:	add    rax,0x1
  426367:	mov    BYTE PTR [rax],0x8
  42636a:	mov    rax,QWORD PTR [rbp-0x20]
  42636e:	add    rax,0x2
  426372:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  426377:	mov    rax,QWORD PTR [rbp-0x30]
  42637b:	mov    BYTE PTR [rax],0x1
  42637e:	mov    rax,QWORD PTR [rbp-0x30]
  426382:	add    rax,0x1
  426386:	mov    BYTE PTR [rax],0xc
  426389:	mov    rax,QWORD PTR [rbp-0x20]
  42638d:	add    rax,0x2
  426391:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  426393:	mov    rax,QWORD PTR [rbp-0x30]
  426397:	mov    BYTE PTR [rax],0x1
  42639a:	mov    rax,QWORD PTR [rbp-0x30]
  42639e:	add    rax,0x1
  4263a2:	mov    BYTE PTR [rax],0x22
  4263a5:	mov    rax,QWORD PTR [rbp-0x20]
  4263a9:	add    rax,0x2
  4263ad:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  4263af:	mov    rax,QWORD PTR [rbp-0x30]
  4263b3:	mov    BYTE PTR [rax],0x1
  4263b6:	mov    rax,QWORD PTR [rbp-0x30]
  4263ba:	add    rax,0x1
  4263be:	mov    BYTE PTR [rax],0x5c
  4263c1:	mov    rax,QWORD PTR [rbp-0x20]
  4263c5:	add    rax,0x2
  4263c9:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  4263cb:	mov    rax,QWORD PTR [rbp-0x30]
  4263cf:	mov    BYTE PTR [rax],0x1
  4263d2:	mov    rax,QWORD PTR [rbp-0x30]
  4263d6:	add    rax,0x1
  4263da:	mov    BYTE PTR [rax],0x2f
  4263dd:	mov    rax,QWORD PTR [rbp-0x20]
  4263e1:	add    rax,0x2
  4263e5:	jmp    426407 <flatcc_json_parser_string_escape@@Base+0x5db>
  4263e7:	mov    rax,QWORD PTR [rbp-0x30]
  4263eb:	mov    BYTE PTR [rax],0x0
  4263ee:	mov    rdx,QWORD PTR [rbp-0x28]
  4263f2:	mov    rsi,QWORD PTR [rbp-0x20]
  4263f6:	mov    rax,QWORD PTR [rbp-0x18]
  4263fa:	mov    ecx,0x12
  4263ff:	mov    rdi,rax
  426402:	call   425bce <flatcc_json_parser_set_error@@Base>
  426407:	leave  
  426408:	ret    

0000000000426409 <flatcc_json_parser_skip_constant@@Base>:
  426409:	push   rbp
  42640a:	mov    rbp,rsp
  42640d:	sub    rsp,0x30
  426411:	mov    QWORD PTR [rbp-0x18],rdi
  426415:	mov    QWORD PTR [rbp-0x20],rsi
  426419:	mov    QWORD PTR [rbp-0x28],rdx
  42641d:	jmp    426498 <flatcc_json_parser_skip_constant@@Base+0x8f>
  42641f:	mov    rax,QWORD PTR [rbp-0x20]
  426423:	movzx  eax,BYTE PTR [rax]
  426426:	mov    BYTE PTR [rbp-0x9],al
  426429:	cmp    BYTE PTR [rbp-0x9],0x0
  42642d:	js     426447 <flatcc_json_parser_skip_constant@@Base+0x3e>
  42642f:	cmp    BYTE PTR [rbp-0x9],0x5f
  426433:	je     426447 <flatcc_json_parser_skip_constant@@Base+0x3e>
  426435:	cmp    BYTE PTR [rbp-0x9],0x2f
  426439:	jle    426441 <flatcc_json_parser_skip_constant@@Base+0x38>
  42643b:	cmp    BYTE PTR [rbp-0x9],0x39
  42643f:	jle    426447 <flatcc_json_parser_skip_constant@@Base+0x3e>
  426441:	cmp    BYTE PTR [rbp-0x9],0x2e
  426445:	jne    42644e <flatcc_json_parser_skip_constant@@Base+0x45>
  426447:	add    QWORD PTR [rbp-0x20],0x1
  42644c:	jmp    426498 <flatcc_json_parser_skip_constant@@Base+0x8f>
  42644e:	or     BYTE PTR [rbp-0x9],0x20
  426452:	cmp    BYTE PTR [rbp-0x9],0x60
  426456:	jle    426465 <flatcc_json_parser_skip_constant@@Base+0x5c>
  426458:	cmp    BYTE PTR [rbp-0x9],0x7a
  42645c:	jg     426465 <flatcc_json_parser_skip_constant@@Base+0x5c>
  42645e:	add    QWORD PTR [rbp-0x20],0x1
  426463:	jmp    426498 <flatcc_json_parser_skip_constant@@Base+0x8f>
  426465:	mov    rax,QWORD PTR [rbp-0x20]
  426469:	mov    QWORD PTR [rbp-0x8],rax
  42646d:	mov    rdx,QWORD PTR [rbp-0x28]
  426471:	mov    rcx,QWORD PTR [rbp-0x8]
  426475:	mov    rax,QWORD PTR [rbp-0x18]
  426479:	mov    rsi,rcx
  42647c:	mov    rdi,rax
  42647f:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  426484:	mov    QWORD PTR [rbp-0x20],rax
  426488:	mov    rax,QWORD PTR [rbp-0x20]
  42648c:	cmp    rax,QWORD PTR [rbp-0x8]
  426490:	jne    426498 <flatcc_json_parser_skip_constant@@Base+0x8f>
  426492:	mov    rax,QWORD PTR [rbp-0x20]
  426496:	jmp    4264aa <flatcc_json_parser_skip_constant@@Base+0xa1>
  426498:	mov    rax,QWORD PTR [rbp-0x20]
  42649c:	cmp    rax,QWORD PTR [rbp-0x28]
  4264a0:	jne    42641f <flatcc_json_parser_skip_constant@@Base+0x16>
  4264a6:	mov    rax,QWORD PTR [rbp-0x20]
  4264aa:	leave  
  4264ab:	ret    

00000000004264ac <flatcc_json_parser_match_constant@@Base>:
  4264ac:	push   rbp
  4264ad:	mov    rbp,rsp
  4264b0:	sub    rsp,0x40
  4264b4:	mov    QWORD PTR [rbp-0x18],rdi
  4264b8:	mov    QWORD PTR [rbp-0x20],rsi
  4264bc:	mov    QWORD PTR [rbp-0x28],rdx
  4264c0:	mov    DWORD PTR [rbp-0x2c],ecx
  4264c3:	mov    QWORD PTR [rbp-0x38],r8
  4264c7:	mov    rax,QWORD PTR [rbp-0x20]
  4264cb:	mov    QWORD PTR [rbp-0x10],rax
  4264cf:	mov    eax,DWORD PTR [rbp-0x2c]
  4264d2:	movsxd rdx,eax
  4264d5:	mov    rax,QWORD PTR [rbp-0x20]
  4264d9:	add    rax,rdx
  4264dc:	mov    QWORD PTR [rbp-0x8],rax
  4264e0:	mov    rdx,QWORD PTR [rbp-0x28]
  4264e4:	mov    rax,QWORD PTR [rbp-0x20]
  4264e8:	sub    rdx,rax
  4264eb:	mov    eax,DWORD PTR [rbp-0x2c]
  4264ee:	cdqe   
  4264f0:	cmp    rdx,rax
  4264f3:	jg     426508 <flatcc_json_parser_match_constant@@Base+0x5c>
  4264f5:	mov    rax,QWORD PTR [rbp-0x38]
  4264f9:	mov    DWORD PTR [rax],0x0
  4264ff:	mov    rax,QWORD PTR [rbp-0x20]
  426503:	jmp    4265eb <flatcc_json_parser_match_constant@@Base+0x13f>
  426508:	mov    rax,QWORD PTR [rbp-0x8]
  42650c:	mov    QWORD PTR [rbp-0x20],rax
  426510:	mov    rax,QWORD PTR [rbp-0x20]
  426514:	movzx  eax,BYTE PTR [rax]
  426517:	cmp    al,0x20
  426519:	jne    426574 <flatcc_json_parser_match_constant@@Base+0xc8>
  42651b:	add    QWORD PTR [rbp-0x20],0x1
  426520:	jmp    426527 <flatcc_json_parser_match_constant@@Base+0x7b>
  426522:	add    QWORD PTR [rbp-0x20],0x1
  426527:	mov    rax,QWORD PTR [rbp-0x20]
  42652b:	cmp    rax,QWORD PTR [rbp-0x28]
  42652f:	je     42653c <flatcc_json_parser_match_constant@@Base+0x90>
  426531:	mov    rax,QWORD PTR [rbp-0x20]
  426535:	movzx  eax,BYTE PTR [rax]
  426538:	cmp    al,0x20
  42653a:	je     426522 <flatcc_json_parser_match_constant@@Base+0x76>
  42653c:	mov    rax,QWORD PTR [rbp-0x20]
  426540:	cmp    rax,QWORD PTR [rbp-0x28]
  426544:	jne    426559 <flatcc_json_parser_match_constant@@Base+0xad>
  426546:	mov    rax,QWORD PTR [rbp-0x38]
  42654a:	mov    DWORD PTR [rax],0x0
  426550:	mov    rax,QWORD PTR [rbp-0x20]
  426554:	jmp    4265eb <flatcc_json_parser_match_constant@@Base+0x13f>
  426559:	mov    rax,QWORD PTR [rbp-0x20]
  42655d:	movzx  eax,BYTE PTR [rax]
  426560:	cmp    al,0x22
  426562:	je     426574 <flatcc_json_parser_match_constant@@Base+0xc8>
  426564:	mov    rax,QWORD PTR [rbp-0x38]
  426568:	mov    DWORD PTR [rax],0x1
  42656e:	mov    rax,QWORD PTR [rbp-0x20]
  426572:	jmp    4265eb <flatcc_json_parser_match_constant@@Base+0x13f>
  426574:	mov    rax,QWORD PTR [rbp-0x20]
  426578:	movzx  eax,BYTE PTR [rax]
  42657b:	movsx  eax,al
  42657e:	cmp    eax,0x22
  426581:	je     4265ad <flatcc_json_parser_match_constant@@Base+0x101>
  426583:	cmp    eax,0x5c
  426586:	jne    4265dd <flatcc_json_parser_match_constant@@Base+0x131>
  426588:	mov    rax,QWORD PTR [rbp-0x38]
  42658c:	mov    DWORD PTR [rax],0x0
  426592:	mov    rdx,QWORD PTR [rbp-0x28]
  426596:	mov    rsi,QWORD PTR [rbp-0x20]
  42659a:	mov    rax,QWORD PTR [rbp-0x18]
  42659e:	mov    ecx,0x12
  4265a3:	mov    rdi,rax
  4265a6:	call   425bce <flatcc_json_parser_set_error@@Base>
  4265ab:	jmp    4265eb <flatcc_json_parser_match_constant@@Base+0x13f>
  4265ad:	mov    rax,QWORD PTR [rbp-0x20]
  4265b1:	lea    rcx,[rax+0x1]
  4265b5:	mov    rax,QWORD PTR [rbp-0x18]
  4265b9:	mov    edx,0x0
  4265be:	mov    rsi,rcx
  4265c1:	mov    rdi,rax
  4265c4:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  4265c9:	mov    QWORD PTR [rbp-0x20],rax
  4265cd:	mov    rax,QWORD PTR [rbp-0x38]
  4265d1:	mov    DWORD PTR [rax],0x0
  4265d7:	mov    rax,QWORD PTR [rbp-0x20]
  4265db:	jmp    4265eb <flatcc_json_parser_match_constant@@Base+0x13f>
  4265dd:	mov    rax,QWORD PTR [rbp-0x38]
  4265e1:	mov    DWORD PTR [rax],0x0
  4265e7:	mov    rax,QWORD PTR [rbp-0x10]
  4265eb:	leave  
  4265ec:	ret    

00000000004265ed <flatcc_json_parser_unmatched_symbol@@Base>:
  4265ed:	push   rbp
  4265ee:	mov    rbp,rsp
  4265f1:	sub    rsp,0x20
  4265f5:	mov    QWORD PTR [rbp-0x8],rdi
  4265f9:	mov    QWORD PTR [rbp-0x10],rsi
  4265fd:	mov    QWORD PTR [rbp-0x18],rdx
  426601:	mov    rax,QWORD PTR [rbp-0x8]
  426605:	mov    eax,DWORD PTR [rax+0x10]
  426608:	and    eax,0x1
  42660b:	test   eax,eax
  42660d:	je     4266b2 <flatcc_json_parser_unmatched_symbol@@Base+0xc5>
  426613:	mov    rdx,QWORD PTR [rbp-0x18]
  426617:	mov    rcx,QWORD PTR [rbp-0x10]
  42661b:	mov    rax,QWORD PTR [rbp-0x8]
  42661f:	mov    rsi,rcx
  426622:	mov    rdi,rax
  426625:	call   422003 <flatcc_verify_union_vector_field@@Base+0x408>
  42662a:	mov    QWORD PTR [rbp-0x10],rax
  42662e:	mov    rdx,QWORD PTR [rbp-0x18]
  426632:	mov    rcx,QWORD PTR [rbp-0x10]
  426636:	mov    rax,QWORD PTR [rbp-0x8]
  42663a:	mov    rsi,rcx
  42663d:	mov    rdi,rax
  426640:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  426645:	mov    QWORD PTR [rbp-0x10],rax
  426649:	mov    rax,QWORD PTR [rbp-0x10]
  42664d:	cmp    rax,QWORD PTR [rbp-0x18]
  426651:	je     426697 <flatcc_json_parser_unmatched_symbol@@Base+0xaa>
  426653:	mov    rax,QWORD PTR [rbp-0x10]
  426657:	movzx  eax,BYTE PTR [rax]
  42665a:	cmp    al,0x3a
  42665c:	jne    426697 <flatcc_json_parser_unmatched_symbol@@Base+0xaa>
  42665e:	add    QWORD PTR [rbp-0x10],0x1
  426663:	mov    rdx,QWORD PTR [rbp-0x18]
  426667:	mov    rcx,QWORD PTR [rbp-0x10]
  42666b:	mov    rax,QWORD PTR [rbp-0x8]
  42666f:	mov    rsi,rcx
  426672:	mov    rdi,rax
  426675:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  42667a:	mov    QWORD PTR [rbp-0x10],rax
  42667e:	mov    rdx,QWORD PTR [rbp-0x18]
  426682:	mov    rcx,QWORD PTR [rbp-0x10]
  426686:	mov    rax,QWORD PTR [rbp-0x8]
  42668a:	mov    rsi,rcx
  42668d:	mov    rdi,rax
  426690:	call   426bfb <flatcc_json_parser_generic_json@@Base>
  426695:	jmp    4266cb <flatcc_json_parser_unmatched_symbol@@Base+0xde>
  426697:	mov    rdx,QWORD PTR [rbp-0x18]
  42669b:	mov    rsi,QWORD PTR [rbp-0x10]
  42669f:	mov    rax,QWORD PTR [rbp-0x8]
  4266a3:	mov    ecx,0x4
  4266a8:	mov    rdi,rax
  4266ab:	call   425bce <flatcc_json_parser_set_error@@Base>
  4266b0:	jmp    4266cb <flatcc_json_parser_unmatched_symbol@@Base+0xde>
  4266b2:	mov    rdx,QWORD PTR [rbp-0x18]
  4266b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4266ba:	mov    rax,QWORD PTR [rbp-0x8]
  4266be:	mov    ecx,0xd
  4266c3:	mov    rdi,rax
  4266c6:	call   425bce <flatcc_json_parser_set_error@@Base>
  4266cb:	leave  
  4266cc:	ret    
  4266cd:	push   rbp
  4266ce:	mov    rbp,rsp
  4266d1:	sub    rsp,0x20
  4266d5:	mov    QWORD PTR [rbp-0x8],rdi
  4266d9:	mov    QWORD PTR [rbp-0x10],rsi
  4266dd:	mov    QWORD PTR [rbp-0x18],rdx
  4266e1:	mov    rax,QWORD PTR [rbp-0x10]
  4266e5:	cmp    rax,QWORD PTR [rbp-0x18]
  4266e9:	jne    4266f4 <flatcc_json_parser_unmatched_symbol@@Base+0x107>
  4266eb:	mov    rax,QWORD PTR [rbp-0x10]
  4266ef:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4266f4:	mov    rax,QWORD PTR [rbp-0x10]
  4266f8:	movzx  eax,BYTE PTR [rax]
  4266fb:	cmp    al,0x2d
  4266fd:	jne    42672c <flatcc_json_parser_unmatched_symbol@@Base+0x13f>
  4266ff:	add    QWORD PTR [rbp-0x10],0x1
  426704:	mov    rax,QWORD PTR [rbp-0x10]
  426708:	cmp    rax,QWORD PTR [rbp-0x18]
  42670c:	jne    42672c <flatcc_json_parser_unmatched_symbol@@Base+0x13f>
  42670e:	mov    rdx,QWORD PTR [rbp-0x18]
  426712:	mov    rsi,QWORD PTR [rbp-0x10]
  426716:	mov    rax,QWORD PTR [rbp-0x8]
  42671a:	mov    ecx,0x6
  42671f:	mov    rdi,rax
  426722:	call   425bce <flatcc_json_parser_set_error@@Base>
  426727:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  42672c:	mov    rax,QWORD PTR [rbp-0x10]
  426730:	movzx  eax,BYTE PTR [rax]
  426733:	cmp    al,0x30
  426735:	jne    42673e <flatcc_json_parser_unmatched_symbol@@Base+0x151>
  426737:	add    QWORD PTR [rbp-0x10],0x1
  42673c:	jmp    42679e <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  42673e:	mov    rax,QWORD PTR [rbp-0x10]
  426742:	movzx  eax,BYTE PTR [rax]
  426745:	cmp    al,0x30
  426747:	jle    426754 <flatcc_json_parser_unmatched_symbol@@Base+0x167>
  426749:	mov    rax,QWORD PTR [rbp-0x10]
  42674d:	movzx  eax,BYTE PTR [rax]
  426750:	cmp    al,0x39
  426752:	jle    426772 <flatcc_json_parser_unmatched_symbol@@Base+0x185>
  426754:	mov    rdx,QWORD PTR [rbp-0x18]
  426758:	mov    rsi,QWORD PTR [rbp-0x10]
  42675c:	mov    rax,QWORD PTR [rbp-0x8]
  426760:	mov    ecx,0x6
  426765:	mov    rdi,rax
  426768:	call   425bce <flatcc_json_parser_set_error@@Base>
  42676d:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  426772:	add    QWORD PTR [rbp-0x10],0x1
  426777:	jmp    42677e <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  426779:	add    QWORD PTR [rbp-0x10],0x1
  42677e:	mov    rax,QWORD PTR [rbp-0x10]
  426782:	cmp    rax,QWORD PTR [rbp-0x18]
  426786:	je     42679e <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  426788:	mov    rax,QWORD PTR [rbp-0x10]
  42678c:	movzx  eax,BYTE PTR [rax]
  42678f:	cmp    al,0x2f
  426791:	jle    42679e <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  426793:	mov    rax,QWORD PTR [rbp-0x10]
  426797:	movzx  eax,BYTE PTR [rax]
  42679a:	cmp    al,0x39
  42679c:	jle    426779 <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
  42679e:	mov    rax,QWORD PTR [rbp-0x10]
  4267a2:	cmp    rax,QWORD PTR [rbp-0x18]
  4267a6:	je     426818 <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  4267a8:	mov    rax,QWORD PTR [rbp-0x10]
  4267ac:	movzx  eax,BYTE PTR [rax]
  4267af:	cmp    al,0x2e
  4267b1:	jne    426818 <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  4267b3:	add    QWORD PTR [rbp-0x10],0x1
  4267b8:	mov    rax,QWORD PTR [rbp-0x10]
  4267bc:	movzx  eax,BYTE PTR [rax]
  4267bf:	cmp    al,0x2f
  4267c1:	jle    4267ce <flatcc_json_parser_unmatched_symbol@@Base+0x1e1>
  4267c3:	mov    rax,QWORD PTR [rbp-0x10]
  4267c7:	movzx  eax,BYTE PTR [rax]
  4267ca:	cmp    al,0x39
  4267cc:	jle    4267ec <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  4267ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4267d2:	mov    rsi,QWORD PTR [rbp-0x10]
  4267d6:	mov    rax,QWORD PTR [rbp-0x8]
  4267da:	mov    ecx,0x6
  4267df:	mov    rdi,rax
  4267e2:	call   425bce <flatcc_json_parser_set_error@@Base>
  4267e7:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4267ec:	add    QWORD PTR [rbp-0x10],0x1
  4267f1:	jmp    4267f8 <flatcc_json_parser_unmatched_symbol@@Base+0x20b>
  4267f3:	add    QWORD PTR [rbp-0x10],0x1
  4267f8:	mov    rax,QWORD PTR [rbp-0x10]
  4267fc:	cmp    rax,QWORD PTR [rbp-0x18]
  426800:	je     426818 <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  426802:	mov    rax,QWORD PTR [rbp-0x10]
  426806:	movzx  eax,BYTE PTR [rax]
  426809:	cmp    al,0x2f
  42680b:	jle    426818 <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  42680d:	mov    rax,QWORD PTR [rbp-0x10]
  426811:	movzx  eax,BYTE PTR [rax]
  426814:	cmp    al,0x39
  426816:	jle    4267f3 <flatcc_json_parser_unmatched_symbol@@Base+0x206>
  426818:	mov    rax,QWORD PTR [rbp-0x10]
  42681c:	cmp    rax,QWORD PTR [rbp-0x18]
  426820:	je     4268f2 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  426826:	mov    rax,QWORD PTR [rbp-0x10]
  42682a:	movzx  eax,BYTE PTR [rax]
  42682d:	cmp    al,0x65
  42682f:	je     426840 <flatcc_json_parser_unmatched_symbol@@Base+0x253>
  426831:	mov    rax,QWORD PTR [rbp-0x10]
  426835:	movzx  eax,BYTE PTR [rax]
  426838:	cmp    al,0x45
  42683a:	jne    4268f2 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  426840:	add    QWORD PTR [rbp-0x10],0x1
  426845:	mov    rax,QWORD PTR [rbp-0x10]
  426849:	cmp    rax,QWORD PTR [rbp-0x18]
  42684d:	jne    42686d <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  42684f:	mov    rdx,QWORD PTR [rbp-0x18]
  426853:	mov    rsi,QWORD PTR [rbp-0x10]
  426857:	mov    rax,QWORD PTR [rbp-0x8]
  42685b:	mov    ecx,0x6
  426860:	mov    rdi,rax
  426863:	call   425bce <flatcc_json_parser_set_error@@Base>
  426868:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  42686d:	mov    rax,QWORD PTR [rbp-0x10]
  426871:	movzx  eax,BYTE PTR [rax]
  426874:	cmp    al,0x2b
  426876:	je     426883 <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  426878:	mov    rax,QWORD PTR [rbp-0x10]
  42687c:	movzx  eax,BYTE PTR [rax]
  42687f:	cmp    al,0x2d
  426881:	jne    426888 <flatcc_json_parser_unmatched_symbol@@Base+0x29b>
  426883:	add    QWORD PTR [rbp-0x10],0x1
  426888:	mov    rax,QWORD PTR [rbp-0x10]
  42688c:	cmp    rax,QWORD PTR [rbp-0x18]
  426890:	je     4268a8 <flatcc_json_parser_unmatched_symbol@@Base+0x2bb>
  426892:	mov    rax,QWORD PTR [rbp-0x10]
  426896:	movzx  eax,BYTE PTR [rax]
  426899:	cmp    al,0x2f
  42689b:	jle    4268a8 <flatcc_json_parser_unmatched_symbol@@Base+0x2bb>
  42689d:	mov    rax,QWORD PTR [rbp-0x10]
  4268a1:	movzx  eax,BYTE PTR [rax]
  4268a4:	cmp    al,0x39
  4268a6:	jle    4268c6 <flatcc_json_parser_unmatched_symbol@@Base+0x2d9>
  4268a8:	mov    rdx,QWORD PTR [rbp-0x18]
  4268ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4268b0:	mov    rax,QWORD PTR [rbp-0x8]
  4268b4:	mov    ecx,0x6
  4268b9:	mov    rdi,rax
  4268bc:	call   425bce <flatcc_json_parser_set_error@@Base>
  4268c1:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4268c6:	add    QWORD PTR [rbp-0x10],0x1
  4268cb:	jmp    4268d2 <flatcc_json_parser_unmatched_symbol@@Base+0x2e5>
  4268cd:	add    QWORD PTR [rbp-0x10],0x1
  4268d2:	mov    rax,QWORD PTR [rbp-0x10]
  4268d6:	cmp    rax,QWORD PTR [rbp-0x18]
  4268da:	je     4268f2 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  4268dc:	mov    rax,QWORD PTR [rbp-0x10]
  4268e0:	movzx  eax,BYTE PTR [rax]
  4268e3:	cmp    al,0x2f
  4268e5:	jle    4268f2 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  4268e7:	mov    rax,QWORD PTR [rbp-0x10]
  4268eb:	movzx  eax,BYTE PTR [rax]
  4268ee:	cmp    al,0x39
  4268f0:	jle    4268cd <flatcc_json_parser_unmatched_symbol@@Base+0x2e0>
  4268f2:	mov    rax,QWORD PTR [rbp-0x10]
  4268f6:	cmp    rax,QWORD PTR [rbp-0x18]
  4268fa:	je     426942 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  4268fc:	mov    rax,QWORD PTR [rbp-0x10]
  426900:	movzx  eax,BYTE PTR [rax]
  426903:	movsx  eax,al
  426906:	cmp    eax,0x20
  426909:	je     42693c <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  42690b:	cmp    eax,0x20
  42690e:	jg     426921 <flatcc_json_parser_unmatched_symbol@@Base+0x334>
  426910:	cmp    eax,0x9
  426913:	jl     426942 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  426915:	cmp    eax,0xb
  426918:	jle    42693c <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  42691a:	cmp    eax,0xd
  42691d:	je     42693c <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  42691f:	jmp    426942 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  426921:	cmp    eax,0x3a
  426924:	je     42693c <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  426926:	cmp    eax,0x3a
  426929:	jg     426932 <flatcc_json_parser_unmatched_symbol@@Base+0x345>
  42692b:	cmp    eax,0x2c
  42692e:	je     42693c <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  426930:	jmp    426942 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  426932:	cmp    eax,0x5d
  426935:	je     42693c <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  426937:	cmp    eax,0x7d
  42693a:	jne    426942 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  42693c:	mov    rax,QWORD PTR [rbp-0x10]
  426940:	jmp    42695b <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  426942:	mov    rdx,QWORD PTR [rbp-0x18]
  426946:	mov    rsi,QWORD PTR [rbp-0x10]
  42694a:	mov    rax,QWORD PTR [rbp-0x8]
  42694e:	mov    ecx,0x6
  426953:	mov    rdi,rax
  426956:	call   425bce <flatcc_json_parser_set_error@@Base>
  42695b:	leave  
  42695c:	ret    

000000000042695d <flatcc_json_parser_double@@Base>:
  42695d:	push   rbp
  42695e:	mov    rbp,rsp
  426961:	sub    rsp,0x30
  426965:	mov    QWORD PTR [rbp-0x18],rdi
  426969:	mov    QWORD PTR [rbp-0x20],rsi
  42696d:	mov    QWORD PTR [rbp-0x28],rdx
  426971:	mov    QWORD PTR [rbp-0x30],rcx
  426975:	mov    rax,QWORD PTR [rbp-0x30]
  426979:	vxorpd xmm0,xmm0,xmm0
  42697d:	vmovsd QWORD PTR [rax],xmm0
  426981:	mov    rax,QWORD PTR [rbp-0x20]
  426985:	cmp    rax,QWORD PTR [rbp-0x28]
  426989:	jne    426994 <flatcc_json_parser_double@@Base+0x37>
  42698b:	mov    rax,QWORD PTR [rbp-0x20]
  42698f:	jmp    426aaa <flatcc_json_parser_double@@Base+0x14d>
  426994:	mov    rax,QWORD PTR [rbp-0x20]
  426998:	mov    QWORD PTR [rbp-0x10],rax
  42699c:	mov    rax,QWORD PTR [rbp-0x20]
  4269a0:	movzx  eax,BYTE PTR [rax]
  4269a3:	cmp    al,0x2d
  4269a5:	jne    4269ac <flatcc_json_parser_double@@Base+0x4f>
  4269a7:	add    QWORD PTR [rbp-0x10],0x1
  4269ac:	mov    rdx,QWORD PTR [rbp-0x28]
  4269b0:	mov    rax,QWORD PTR [rbp-0x10]
  4269b4:	sub    rdx,rax
  4269b7:	mov    rax,rdx
  4269ba:	cmp    rax,0x1
  4269be:	jle    426a03 <flatcc_json_parser_double@@Base+0xa6>
  4269c0:	mov    rax,QWORD PTR [rbp-0x10]
  4269c4:	movzx  eax,BYTE PTR [rax]
  4269c7:	cmp    al,0x2e
  4269c9:	je     4269e5 <flatcc_json_parser_double@@Base+0x88>
  4269cb:	mov    rax,QWORD PTR [rbp-0x10]
  4269cf:	movzx  eax,BYTE PTR [rax]
  4269d2:	cmp    al,0x30
  4269d4:	jne    426a03 <flatcc_json_parser_double@@Base+0xa6>
  4269d6:	mov    rax,QWORD PTR [rbp-0x10]
  4269da:	add    rax,0x1
  4269de:	movzx  eax,BYTE PTR [rax]
  4269e1:	cmp    al,0x30
  4269e3:	jne    426a03 <flatcc_json_parser_double@@Base+0xa6>
  4269e5:	mov    rdx,QWORD PTR [rbp-0x28]
  4269e9:	mov    rsi,QWORD PTR [rbp-0x20]
  4269ed:	mov    rax,QWORD PTR [rbp-0x18]
  4269f1:	mov    ecx,0x6
  4269f6:	mov    rdi,rax
  4269f9:	call   425bce <flatcc_json_parser_set_error@@Base>
  4269fe:	jmp    426aaa <flatcc_json_parser_double@@Base+0x14d>
  426a03:	mov    rdx,QWORD PTR [rbp-0x28]
  426a07:	mov    rax,QWORD PTR [rbp-0x20]
  426a0b:	sub    rdx,rax
  426a0e:	mov    rax,rdx
  426a11:	mov    ecx,eax
  426a13:	mov    rdx,QWORD PTR [rbp-0x30]
  426a17:	mov    rax,QWORD PTR [rbp-0x20]
  426a1b:	mov    esi,ecx
  426a1d:	mov    rdi,rax
  426a20:	call   425094 <grisu3_diy_fp_encode_double@@Base+0xf72>
  426a25:	mov    QWORD PTR [rbp-0x8],rax
  426a29:	cmp    QWORD PTR [rbp-0x8],0x0
  426a2e:	je     426a3a <flatcc_json_parser_double@@Base+0xdd>
  426a30:	mov    rax,QWORD PTR [rbp-0x8]
  426a34:	cmp    rax,QWORD PTR [rbp-0x20]
  426a38:	jne    426aa6 <flatcc_json_parser_double@@Base+0x149>
  426a3a:	mov    rax,QWORD PTR [rbp-0x30]
  426a3e:	vmovsd xmm1,QWORD PTR [rax]
  426a42:	vmovsd xmm0,QWORD PTR [rip+0x14026]        # 43aa70 <flatcc_builder_padding_base@@Base+0x2810>
  426a4a:	vandpd xmm0,xmm0,xmm1
  426a4e:	vucomisd xmm0,QWORD PTR [rip+0x1402a]        # 43aa80 <flatcc_builder_padding_base@@Base+0x2820>
  426a56:	setbe  al
  426a59:	xor    eax,0x1
  426a5c:	test   al,al
  426a5e:	je     426a67 <flatcc_json_parser_double@@Base+0x10a>
  426a60:	mov    eax,0x1
  426a65:	jmp    426a6c <flatcc_json_parser_double@@Base+0x10f>
  426a67:	mov    eax,0x0
  426a6c:	test   al,al
  426a6e:	je     426a8b <flatcc_json_parser_double@@Base+0x12e>
  426a70:	mov    rdx,QWORD PTR [rbp-0x28]
  426a74:	mov    rsi,QWORD PTR [rbp-0x20]
  426a78:	mov    rax,QWORD PTR [rbp-0x18]
  426a7c:	mov    ecx,0x7
  426a81:	mov    rdi,rax
  426a84:	call   425bce <flatcc_json_parser_set_error@@Base>
  426a89:	jmp    426aaa <flatcc_json_parser_double@@Base+0x14d>
  426a8b:	mov    rdx,QWORD PTR [rbp-0x28]
  426a8f:	mov    rsi,QWORD PTR [rbp-0x20]
  426a93:	mov    rax,QWORD PTR [rbp-0x18]
  426a97:	mov    ecx,0x6
  426a9c:	mov    rdi,rax
  426a9f:	call   425bce <flatcc_json_parser_set_error@@Base>
  426aa4:	jmp    426aaa <flatcc_json_parser_double@@Base+0x14d>
  426aa6:	mov    rax,QWORD PTR [rbp-0x8]
  426aaa:	leave  
  426aab:	ret    

0000000000426aac <flatcc_json_parser_float@@Base>:
  426aac:	push   rbp
  426aad:	mov    rbp,rsp
  426ab0:	sub    rsp,0x30
  426ab4:	mov    QWORD PTR [rbp-0x18],rdi
  426ab8:	mov    QWORD PTR [rbp-0x20],rsi
  426abc:	mov    QWORD PTR [rbp-0x28],rdx
  426ac0:	mov    QWORD PTR [rbp-0x30],rcx
  426ac4:	mov    rax,QWORD PTR [rbp-0x30]
  426ac8:	vxorps xmm0,xmm0,xmm0
  426acc:	vmovss DWORD PTR [rax],xmm0
  426ad0:	mov    rax,QWORD PTR [rbp-0x20]
  426ad4:	cmp    rax,QWORD PTR [rbp-0x28]
  426ad8:	jne    426ae3 <flatcc_json_parser_float@@Base+0x37>
  426ada:	mov    rax,QWORD PTR [rbp-0x20]
  426ade:	jmp    426bf9 <flatcc_json_parser_float@@Base+0x14d>
  426ae3:	mov    rax,QWORD PTR [rbp-0x20]
  426ae7:	mov    QWORD PTR [rbp-0x10],rax
  426aeb:	mov    rax,QWORD PTR [rbp-0x20]
  426aef:	movzx  eax,BYTE PTR [rax]
  426af2:	cmp    al,0x2d
  426af4:	jne    426afb <flatcc_json_parser_float@@Base+0x4f>
  426af6:	add    QWORD PTR [rbp-0x10],0x1
  426afb:	mov    rdx,QWORD PTR [rbp-0x28]
  426aff:	mov    rax,QWORD PTR [rbp-0x10]
  426b03:	sub    rdx,rax
  426b06:	mov    rax,rdx
  426b09:	cmp    rax,0x1
  426b0d:	jle    426b52 <flatcc_json_parser_float@@Base+0xa6>
  426b0f:	mov    rax,QWORD PTR [rbp-0x10]
  426b13:	movzx  eax,BYTE PTR [rax]
  426b16:	cmp    al,0x2e
  426b18:	je     426b34 <flatcc_json_parser_float@@Base+0x88>
  426b1a:	mov    rax,QWORD PTR [rbp-0x10]
  426b1e:	movzx  eax,BYTE PTR [rax]
  426b21:	cmp    al,0x30
  426b23:	jne    426b52 <flatcc_json_parser_float@@Base+0xa6>
  426b25:	mov    rax,QWORD PTR [rbp-0x10]
  426b29:	add    rax,0x1
  426b2d:	movzx  eax,BYTE PTR [rax]
  426b30:	cmp    al,0x30
  426b32:	jne    426b52 <flatcc_json_parser_float@@Base+0xa6>
  426b34:	mov    rdx,QWORD PTR [rbp-0x28]
  426b38:	mov    rsi,QWORD PTR [rbp-0x20]
  426b3c:	mov    rax,QWORD PTR [rbp-0x18]
  426b40:	mov    ecx,0x6
  426b45:	mov    rdi,rax
  426b48:	call   425bce <flatcc_json_parser_set_error@@Base>
  426b4d:	jmp    426bf9 <flatcc_json_parser_float@@Base+0x14d>
  426b52:	mov    rdx,QWORD PTR [rbp-0x28]
  426b56:	mov    rax,QWORD PTR [rbp-0x20]
  426b5a:	sub    rdx,rax
  426b5d:	mov    rax,rdx
  426b60:	mov    ecx,eax
  426b62:	mov    rdx,QWORD PTR [rbp-0x30]
  426b66:	mov    rax,QWORD PTR [rbp-0x20]
  426b6a:	mov    esi,ecx
  426b6c:	mov    rdi,rax
  426b6f:	call   4250be <grisu3_diy_fp_encode_double@@Base+0xf9c>
  426b74:	mov    QWORD PTR [rbp-0x8],rax
  426b78:	cmp    QWORD PTR [rbp-0x8],0x0
  426b7d:	je     426b89 <flatcc_json_parser_float@@Base+0xdd>
  426b7f:	mov    rax,QWORD PTR [rbp-0x8]
  426b83:	cmp    rax,QWORD PTR [rbp-0x20]
  426b87:	jne    426bf5 <flatcc_json_parser_float@@Base+0x149>
  426b89:	mov    rax,QWORD PTR [rbp-0x30]
  426b8d:	vmovss xmm1,DWORD PTR [rax]
  426b91:	vmovss xmm0,DWORD PTR [rip+0x13eb7]        # 43aa50 <flatcc_builder_padding_base@@Base+0x27f0>
  426b99:	vandps xmm0,xmm0,xmm1
  426b9d:	vucomiss xmm0,DWORD PTR [rip+0x13ebb]        # 43aa60 <flatcc_builder_padding_base@@Base+0x2800>
  426ba5:	setbe  al
  426ba8:	xor    eax,0x1
  426bab:	test   al,al
  426bad:	je     426bb6 <flatcc_json_parser_float@@Base+0x10a>
  426baf:	mov    eax,0x1
  426bb4:	jmp    426bbb <flatcc_json_parser_float@@Base+0x10f>
  426bb6:	mov    eax,0x0
  426bbb:	test   al,al
  426bbd:	je     426bda <flatcc_json_parser_float@@Base+0x12e>
  426bbf:	mov    rdx,QWORD PTR [rbp-0x28]
  426bc3:	mov    rsi,QWORD PTR [rbp-0x20]
  426bc7:	mov    rax,QWORD PTR [rbp-0x18]
  426bcb:	mov    ecx,0x7
  426bd0:	mov    rdi,rax
  426bd3:	call   425bce <flatcc_json_parser_set_error@@Base>
  426bd8:	jmp    426bf9 <flatcc_json_parser_float@@Base+0x14d>
  426bda:	mov    rdx,QWORD PTR [rbp-0x28]
  426bde:	mov    rsi,QWORD PTR [rbp-0x20]
  426be2:	mov    rax,QWORD PTR [rbp-0x18]
  426be6:	mov    ecx,0x6
  426beb:	mov    rdi,rax
  426bee:	call   425bce <flatcc_json_parser_set_error@@Base>
  426bf3:	jmp    426bf9 <flatcc_json_parser_float@@Base+0x14d>
  426bf5:	mov    rax,QWORD PTR [rbp-0x8]
  426bf9:	leave  
  426bfa:	ret    

0000000000426bfb <flatcc_json_parser_generic_json@@Base>:
  426bfb:	push   rbp
  426bfc:	mov    rbp,rsp
  426bff:	sub    rsp,0x260
  426c06:	mov    QWORD PTR [rbp-0x248],rdi
  426c0d:	mov    QWORD PTR [rbp-0x250],rsi
  426c14:	mov    QWORD PTR [rbp-0x258],rdx
  426c1b:	mov    rax,QWORD PTR fs:0x28
  426c24:	mov    QWORD PTR [rbp-0x8],rax
  426c28:	xor    eax,eax
  426c2a:	mov    DWORD PTR [rbp-0x234],0x0
  426c34:	lea    rax,[rbp-0x210]
  426c3b:	mov    QWORD PTR [rbp-0x230],rax
  426c42:	mov    rax,QWORD PTR [rbp-0x230]
  426c49:	add    rax,0x200
  426c4f:	mov    QWORD PTR [rbp-0x228],rax
  426c56:	mov    rax,QWORD PTR [rbp-0x250]
  426c5d:	cmp    rax,QWORD PTR [rbp-0x258]
  426c64:	jne    426c72 <flatcc_json_parser_generic_json@@Base+0x77>
  426c66:	mov    rax,QWORD PTR [rbp-0x250]
  426c6d:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  426c72:	lea    rax,[rbp-0x210]
  426c79:	cmp    QWORD PTR [rbp-0x230],rax
  426c80:	je     426da8 <flatcc_json_parser_generic_json@@Base+0x1ad>
  426c86:	mov    rax,QWORD PTR [rbp-0x230]
  426c8d:	sub    rax,0x1
  426c91:	movzx  eax,BYTE PTR [rax]
  426c94:	cmp    al,0x7d
  426c96:	jne    426da8 <flatcc_json_parser_generic_json@@Base+0x1ad>
  426c9c:	mov    rdx,QWORD PTR [rbp-0x258]
  426ca3:	mov    rcx,QWORD PTR [rbp-0x250]
  426caa:	mov    rax,QWORD PTR [rbp-0x248]
  426cb1:	mov    rsi,rcx
  426cb4:	mov    rdi,rax
  426cb7:	call   421fae <flatcc_verify_union_vector_field@@Base+0x3b3>
  426cbc:	mov    QWORD PTR [rbp-0x250],rax
  426cc3:	mov    rdx,QWORD PTR [rbp-0x258]
  426cca:	mov    rcx,QWORD PTR [rbp-0x250]
  426cd1:	mov    rax,QWORD PTR [rbp-0x248]
  426cd8:	mov    rsi,rcx
  426cdb:	mov    rdi,rax
  426cde:	call   422003 <flatcc_verify_union_vector_field@@Base+0x408>
  426ce3:	mov    QWORD PTR [rbp-0x250],rax
  426cea:	mov    rdx,QWORD PTR [rbp-0x258]
  426cf1:	mov    rcx,QWORD PTR [rbp-0x250]
  426cf8:	mov    rax,QWORD PTR [rbp-0x248]
  426cff:	mov    rsi,rcx
  426d02:	mov    rdi,rax
  426d05:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  426d0a:	mov    QWORD PTR [rbp-0x250],rax
  426d11:	mov    rax,QWORD PTR [rbp-0x250]
  426d18:	cmp    rax,QWORD PTR [rbp-0x258]
  426d1f:	jne    426d48 <flatcc_json_parser_generic_json@@Base+0x14d>
  426d21:	mov    rdx,QWORD PTR [rbp-0x258]
  426d28:	mov    rsi,QWORD PTR [rbp-0x250]
  426d2f:	mov    rax,QWORD PTR [rbp-0x248]
  426d36:	mov    ecx,0xa
  426d3b:	mov    rdi,rax
  426d3e:	call   425bce <flatcc_json_parser_set_error@@Base>
  426d43:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  426d48:	mov    rax,QWORD PTR [rbp-0x250]
  426d4f:	movzx  eax,BYTE PTR [rax]
  426d52:	cmp    al,0x3a
  426d54:	je     426d7d <flatcc_json_parser_generic_json@@Base+0x182>
  426d56:	mov    rdx,QWORD PTR [rbp-0x258]
  426d5d:	mov    rsi,QWORD PTR [rbp-0x250]
  426d64:	mov    rax,QWORD PTR [rbp-0x248]
  426d6b:	mov    ecx,0x4
  426d70:	mov    rdi,rax
  426d73:	call   425bce <flatcc_json_parser_set_error@@Base>
  426d78:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  426d7d:	mov    rax,QWORD PTR [rbp-0x250]
  426d84:	lea    rcx,[rax+0x1]
  426d88:	mov    rdx,QWORD PTR [rbp-0x258]
  426d8f:	mov    rax,QWORD PTR [rbp-0x248]
  426d96:	mov    rsi,rcx
  426d99:	mov    rdi,rax
  426d9c:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  426da1:	mov    QWORD PTR [rbp-0x250],rax
  426da8:	mov    rax,QWORD PTR [rbp-0x250]
  426daf:	movzx  eax,BYTE PTR [rax]
  426db2:	movsx  eax,al
  426db5:	sub    eax,0x22
  426db8:	cmp    eax,0x59
  426dbb:	ja     427117 <flatcc_json_parser_generic_json@@Base+0x51c>
  426dc1:	mov    eax,eax
  426dc3:	lea    rdx,[rax*4+0x0]
  426dcb:	lea    rax,[rip+0x134c6]        # 43a298 <flatcc_builder_padding_base@@Base+0x2038>
  426dd2:	mov    eax,DWORD PTR [rdx+rax*1]
  426dd5:	movsxd rdx,eax
  426dd8:	lea    rax,[rip+0x134b9]        # 43a298 <flatcc_builder_padding_base@@Base+0x2038>
  426ddf:	add    rax,rdx
  426de2:	jmp    rax
  426de4:	mov    rdx,QWORD PTR [rbp-0x258]
  426deb:	mov    rcx,QWORD PTR [rbp-0x250]
  426df2:	mov    rax,QWORD PTR [rbp-0x248]
  426df9:	mov    rsi,rcx
  426dfc:	mov    rdi,rax
  426dff:	call   421f10 <flatcc_verify_union_vector_field@@Base+0x315>
  426e04:	mov    QWORD PTR [rbp-0x250],rax
  426e0b:	jmp    426e7d <flatcc_json_parser_generic_json@@Base+0x282>
  426e0d:	mov    rdx,QWORD PTR [rbp-0x258]
  426e14:	mov    rcx,QWORD PTR [rbp-0x250]
  426e1b:	mov    rax,QWORD PTR [rbp-0x248]
  426e22:	mov    rsi,rcx
  426e25:	mov    rdi,rax
  426e28:	call   425c26 <flatcc_json_parser_string_part@@Base>
  426e2d:	mov    QWORD PTR [rbp-0x250],rax
  426e34:	mov    rax,QWORD PTR [rbp-0x250]
  426e3b:	cmp    rax,QWORD PTR [rbp-0x258]
  426e42:	je     426e52 <flatcc_json_parser_generic_json@@Base+0x257>
  426e44:	mov    rax,QWORD PTR [rbp-0x250]
  426e4b:	movzx  eax,BYTE PTR [rax]
  426e4e:	cmp    al,0x22
  426e50:	je     426ea1 <flatcc_json_parser_generic_json@@Base+0x2a6>
  426e52:	lea    rcx,[rbp-0x214]
  426e59:	mov    rdx,QWORD PTR [rbp-0x258]
  426e60:	mov    rsi,QWORD PTR [rbp-0x250]
  426e67:	mov    rax,QWORD PTR [rbp-0x248]
  426e6e:	mov    rdi,rax
  426e71:	call   425e2c <flatcc_json_parser_string_escape@@Base>
  426e76:	mov    QWORD PTR [rbp-0x250],rax
  426e7d:	mov    rax,QWORD PTR [rbp-0x250]
  426e84:	cmp    rax,QWORD PTR [rbp-0x258]
  426e8b:	je     426ea2 <flatcc_json_parser_generic_json@@Base+0x2a7>
  426e8d:	mov    rax,QWORD PTR [rbp-0x250]
  426e94:	movzx  eax,BYTE PTR [rax]
  426e97:	cmp    al,0x22
  426e99:	jne    426e0d <flatcc_json_parser_generic_json@@Base+0x212>
  426e9f:	jmp    426ea2 <flatcc_json_parser_generic_json@@Base+0x2a7>
  426ea1:	nop
  426ea2:	mov    rdx,QWORD PTR [rbp-0x258]
  426ea9:	mov    rcx,QWORD PTR [rbp-0x250]
  426eb0:	mov    rax,QWORD PTR [rbp-0x248]
  426eb7:	mov    rsi,rcx
  426eba:	mov    rdi,rax
  426ebd:	call   421f5f <flatcc_verify_union_vector_field@@Base+0x364>
  426ec2:	mov    QWORD PTR [rbp-0x250],rax
  426ec9:	jmp    427151 <flatcc_json_parser_generic_json@@Base+0x556>
  426ece:	mov    rdx,QWORD PTR [rbp-0x258]
  426ed5:	mov    rcx,QWORD PTR [rbp-0x250]
  426edc:	mov    rax,QWORD PTR [rbp-0x248]
  426ee3:	mov    rsi,rcx
  426ee6:	mov    rdi,rax
  426ee9:	call   4266cd <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
  426eee:	mov    QWORD PTR [rbp-0x250],rax
  426ef5:	jmp    427151 <flatcc_json_parser_generic_json@@Base+0x556>
  426efa:	mov    rax,QWORD PTR [rbp-0x250]
  426f01:	mov    QWORD PTR [rbp-0x220],rax
  426f08:	lea    rcx,[rbp-0x235]
  426f0f:	mov    rdx,QWORD PTR [rbp-0x258]
  426f16:	mov    rsi,QWORD PTR [rbp-0x220]
  426f1d:	mov    rax,QWORD PTR [rbp-0x248]
  426f24:	mov    rdi,rax
  426f27:	call   422abc <flatcc_verify_union_vector_field@@Base+0xec1>
  426f2c:	mov    QWORD PTR [rbp-0x250],rax
  426f33:	mov    rax,QWORD PTR [rbp-0x220]
  426f3a:	cmp    rax,QWORD PTR [rbp-0x250]
  426f41:	jne    42713e <flatcc_json_parser_generic_json@@Base+0x543>
  426f47:	mov    rdx,QWORD PTR [rbp-0x258]
  426f4e:	mov    rsi,QWORD PTR [rbp-0x250]
  426f55:	mov    rax,QWORD PTR [rbp-0x248]
  426f5c:	mov    ecx,0x5
  426f61:	mov    rdi,rax
  426f64:	call   425bce <flatcc_json_parser_set_error@@Base>
  426f69:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  426f6e:	mov    rax,QWORD PTR [rbp-0x250]
  426f75:	mov    QWORD PTR [rbp-0x220],rax
  426f7c:	mov    rdx,QWORD PTR [rbp-0x258]
  426f83:	mov    rax,QWORD PTR [rbp-0x220]
  426f8a:	mov    rsi,rdx
  426f8d:	mov    rdi,rax
  426f90:	call   4229a9 <flatcc_verify_union_vector_field@@Base+0xdae>
  426f95:	mov    QWORD PTR [rbp-0x250],rax
  426f9c:	mov    rax,QWORD PTR [rbp-0x220]
  426fa3:	cmp    rax,QWORD PTR [rbp-0x250]
  426faa:	jne    427144 <flatcc_json_parser_generic_json@@Base+0x549>
  426fb0:	mov    rdx,QWORD PTR [rbp-0x258]
  426fb7:	mov    rsi,QWORD PTR [rbp-0x250]
  426fbe:	mov    rax,QWORD PTR [rbp-0x248]
  426fc5:	mov    ecx,0x5
  426fca:	mov    rdi,rax
  426fcd:	call   425bce <flatcc_json_parser_set_error@@Base>
  426fd2:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  426fd7:	mov    rax,QWORD PTR [rbp-0x230]
  426fde:	cmp    rax,QWORD PTR [rbp-0x228]
  426fe5:	jne    42700e <flatcc_json_parser_generic_json@@Base+0x413>
  426fe7:	mov    rdx,QWORD PTR [rbp-0x258]
  426fee:	mov    rsi,QWORD PTR [rbp-0x250]
  426ff5:	mov    rax,QWORD PTR [rbp-0x248]
  426ffc:	mov    ecx,0x2
  427001:	mov    rdi,rax
  427004:	call   425bce <flatcc_json_parser_set_error@@Base>
  427009:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  42700e:	mov    rax,QWORD PTR [rbp-0x230]
  427015:	lea    rdx,[rax+0x1]
  427019:	mov    QWORD PTR [rbp-0x230],rdx
  427020:	mov    BYTE PTR [rax],0x5d
  427023:	mov    rax,QWORD PTR [rbp-0x250]
  42702a:	lea    rcx,[rax+0x1]
  42702e:	mov    rdx,QWORD PTR [rbp-0x258]
  427035:	mov    rax,QWORD PTR [rbp-0x248]
  42703c:	mov    rsi,rcx
  42703f:	mov    rdi,rax
  427042:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  427047:	mov    QWORD PTR [rbp-0x250],rax
  42704e:	mov    rax,QWORD PTR [rbp-0x250]
  427055:	cmp    rax,QWORD PTR [rbp-0x258]
  42705c:	je     426c56 <flatcc_json_parser_generic_json@@Base+0x5b>
  427062:	mov    rax,QWORD PTR [rbp-0x250]
  427069:	movzx  eax,BYTE PTR [rax]
  42706c:	cmp    al,0x5d
  42706e:	je     42714a <flatcc_json_parser_generic_json@@Base+0x54f>
  427074:	jmp    426c56 <flatcc_json_parser_generic_json@@Base+0x5b>
  427079:	mov    rax,QWORD PTR [rbp-0x230]
  427080:	cmp    rax,QWORD PTR [rbp-0x228]
  427087:	jne    4270b0 <flatcc_json_parser_generic_json@@Base+0x4b5>
  427089:	mov    rdx,QWORD PTR [rbp-0x258]
  427090:	mov    rsi,QWORD PTR [rbp-0x250]
  427097:	mov    rax,QWORD PTR [rbp-0x248]
  42709e:	mov    ecx,0x2
  4270a3:	mov    rdi,rax
  4270a6:	call   425bce <flatcc_json_parser_set_error@@Base>
  4270ab:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  4270b0:	mov    rax,QWORD PTR [rbp-0x230]
  4270b7:	lea    rdx,[rax+0x1]
  4270bb:	mov    QWORD PTR [rbp-0x230],rdx
  4270c2:	mov    BYTE PTR [rax],0x7d
  4270c5:	mov    rax,QWORD PTR [rbp-0x250]
  4270cc:	lea    rcx,[rax+0x1]
  4270d0:	mov    rdx,QWORD PTR [rbp-0x258]
  4270d7:	mov    rax,QWORD PTR [rbp-0x248]
  4270de:	mov    rsi,rcx
  4270e1:	mov    rdi,rax
  4270e4:	call   421e9a <flatcc_verify_union_vector_field@@Base+0x29f>
  4270e9:	mov    QWORD PTR [rbp-0x250],rax
  4270f0:	mov    rax,QWORD PTR [rbp-0x250]
  4270f7:	cmp    rax,QWORD PTR [rbp-0x258]
  4270fe:	je     426c56 <flatcc_json_parser_generic_json@@Base+0x5b>
  427104:	mov    rax,QWORD PTR [rbp-0x250]
  42710b:	movzx  eax,BYTE PTR [rax]
  42710e:	cmp    al,0x7d
  427110:	je     427150 <flatcc_json_parser_generic_json@@Base+0x555>
  427112:	jmp    426c56 <flatcc_json_parser_generic_json@@Base+0x5b>
  427117:	mov    rdx,QWORD PTR [rbp-0x258]
  42711e:	mov    rsi,QWORD PTR [rbp-0x250]
  427125:	mov    rax,QWORD PTR [rbp-0x248]
  42712c:	mov    ecx,0x5
  427131:	mov    rdi,rax
  427134:	call   425bce <flatcc_json_parser_set_error@@Base>
  427139:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  42713e:	nop
  42713f:	jmp    4271db <flatcc_json_parser_generic_json@@Base+0x5e0>
  427144:	nop
  427145:	jmp    4271db <flatcc_json_parser_generic_json@@Base+0x5e0>
  42714a:	nop
  42714b:	jmp    4271db <flatcc_json_parser_generic_json@@Base+0x5e0>
  427150:	nop
  427151:	jmp    4271db <flatcc_json_parser_generic_json@@Base+0x5e0>
  427156:	sub    QWORD PTR [rbp-0x230],0x1
  42715e:	mov    rax,QWORD PTR [rbp-0x230]
  427165:	movzx  eax,BYTE PTR [rax]
  427168:	cmp    al,0x5d
  42716a:	jne    427199 <flatcc_json_parser_generic_json@@Base+0x59e>
  42716c:	lea    rcx,[rbp-0x234]
  427173:	mov    rdx,QWORD PTR [rbp-0x258]
  42717a:	mov    rsi,QWORD PTR [rbp-0x250]
  427181:	mov    rax,QWORD PTR [rbp-0x248]
  427188:	mov    rdi,rax
  42718b:	call   4222e4 <flatcc_verify_union_vector_field@@Base+0x6e9>
  427190:	mov    QWORD PTR [rbp-0x250],rax
  427197:	jmp    4271c4 <flatcc_json_parser_generic_json@@Base+0x5c9>
  427199:	lea    rcx,[rbp-0x234]
  4271a0:	mov    rdx,QWORD PTR [rbp-0x258]
  4271a7:	mov    rsi,QWORD PTR [rbp-0x250]
  4271ae:	mov    rax,QWORD PTR [rbp-0x248]
  4271b5:	mov    rdi,rax
  4271b8:	call   4220e9 <flatcc_verify_union_vector_field@@Base+0x4ee>
  4271bd:	mov    QWORD PTR [rbp-0x250],rax
  4271c4:	mov    eax,DWORD PTR [rbp-0x234]
  4271ca:	test   eax,eax
  4271cc:	je     4271db <flatcc_json_parser_generic_json@@Base+0x5e0>
  4271ce:	add    QWORD PTR [rbp-0x230],0x1
  4271d6:	jmp    426c56 <flatcc_json_parser_generic_json@@Base+0x5b>
  4271db:	mov    rax,QWORD PTR [rbp-0x250]
  4271e2:	cmp    rax,QWORD PTR [rbp-0x258]
  4271e9:	je     4271ff <flatcc_json_parser_generic_json@@Base+0x604>
  4271eb:	lea    rax,[rbp-0x210]
  4271f2:	cmp    QWORD PTR [rbp-0x230],rax
  4271f9:	jne    427156 <flatcc_json_parser_generic_json@@Base+0x55b>
  4271ff:	mov    rax,QWORD PTR [rbp-0x250]
  427206:	cmp    rax,QWORD PTR [rbp-0x258]
  42720d:	jne    42725c <flatcc_json_parser_generic_json@@Base+0x661>
  42720f:	lea    rax,[rbp-0x210]
  427216:	cmp    QWORD PTR [rbp-0x230],rax
  42721d:	je     42725c <flatcc_json_parser_generic_json@@Base+0x661>
  42721f:	mov    rax,QWORD PTR [rbp-0x230]
  427226:	sub    rax,0x1
  42722a:	movzx  eax,BYTE PTR [rax]
  42722d:	cmp    al,0x5d
  42722f:	jne    427238 <flatcc_json_parser_generic_json@@Base+0x63d>
  427231:	mov    ecx,0x9
  427236:	jmp    42723d <flatcc_json_parser_generic_json@@Base+0x642>
  427238:	mov    ecx,0xa
  42723d:	mov    rdx,QWORD PTR [rbp-0x258]
  427244:	mov    rsi,QWORD PTR [rbp-0x250]
  42724b:	mov    rax,QWORD PTR [rbp-0x248]
  427252:	mov    rdi,rax
  427255:	call   425bce <flatcc_json_parser_set_error@@Base>
  42725a:	jmp    427263 <flatcc_json_parser_generic_json@@Base+0x668>
  42725c:	mov    rax,QWORD PTR [rbp-0x250]
  427263:	mov    rdi,QWORD PTR [rbp-0x8]
  427267:	xor    rdi,QWORD PTR fs:0x28
  427270:	je     427277 <flatcc_json_parser_generic_json@@Base+0x67c>
  427272:	call   405070 <__stack_chk_fail@plt>
  427277:	leave  
  427278:	ret    

0000000000427279 <flatcc_json_parser_integer@@Base>:
  427279:	push   rbp
  42727a:	mov    rbp,rsp
  42727d:	sub    rsp,0x50
  427281:	mov    QWORD PTR [rbp-0x28],rdi
  427285:	mov    QWORD PTR [rbp-0x30],rsi
  427289:	mov    QWORD PTR [rbp-0x38],rdx
  42728d:	mov    QWORD PTR [rbp-0x40],rcx
  427291:	mov    QWORD PTR [rbp-0x48],r8
  427295:	mov    QWORD PTR [rbp-0x18],0x0
  42729d:	mov    rax,QWORD PTR [rbp-0x30]
  4272a1:	cmp    rax,QWORD PTR [rbp-0x38]
  4272a5:	jne    4272b0 <flatcc_json_parser_integer@@Base+0x37>
  4272a7:	mov    rax,QWORD PTR [rbp-0x30]
  4272ab:	jmp    4273d1 <flatcc_json_parser_integer@@Base+0x158>
  4272b0:	mov    rax,QWORD PTR [rbp-0x30]
  4272b4:	mov    QWORD PTR [rbp-0x10],rax
  4272b8:	mov    rax,QWORD PTR [rbp-0x30]
  4272bc:	movzx  eax,BYTE PTR [rax]
  4272bf:	cmp    al,0x2d
  4272c1:	sete   al
  4272c4:	movzx  edx,al
  4272c7:	mov    rax,QWORD PTR [rbp-0x40]
  4272cb:	mov    DWORD PTR [rax],edx
  4272cd:	mov    rax,QWORD PTR [rbp-0x40]
  4272d1:	mov    eax,DWORD PTR [rax]
  4272d3:	cdqe   
  4272d5:	add    QWORD PTR [rbp-0x30],rax
  4272d9:	jmp    427348 <flatcc_json_parser_integer@@Base+0xcf>
  4272db:	mov    rax,QWORD PTR [rbp-0x18]
  4272df:	mov    QWORD PTR [rbp-0x8],rax
  4272e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4272e7:	mov    rax,rdx
  4272ea:	shl    rax,0x2
  4272ee:	add    rax,rdx
  4272f1:	add    rax,rax
  4272f4:	mov    rdx,rax
  4272f7:	mov    rax,QWORD PTR [rbp-0x30]
  4272fb:	movzx  eax,BYTE PTR [rax]
  4272fe:	movsx  rax,al
  427302:	add    rax,rdx
  427305:	sub    rax,0x30
  427309:	mov    QWORD PTR [rbp-0x18],rax
  42730d:	mov    rax,QWORD PTR [rbp-0x8]
  427311:	cmp    rax,QWORD PTR [rbp-0x18]
  427315:	jbe    427343 <flatcc_json_parser_integer@@Base+0xca>
  427317:	cmp    QWORD PTR [rbp-0x40],0x0
  42731c:	je     427325 <flatcc_json_parser_integer@@Base+0xac>
  42731e:	mov    ecx,0x8
  427323:	jmp    42732a <flatcc_json_parser_integer@@Base+0xb1>
  427325:	mov    ecx,0x7
  42732a:	mov    rdx,QWORD PTR [rbp-0x38]
  42732e:	mov    rsi,QWORD PTR [rbp-0x30]
  427332:	mov    rax,QWORD PTR [rbp-0x28]
  427336:	mov    rdi,rax
  427339:	call   425bce <flatcc_json_parser_set_error@@Base>
  42733e:	jmp    4273d1 <flatcc_json_parser_integer@@Base+0x158>
  427343:	add    QWORD PTR [rbp-0x30],0x1
  427348:	mov    rax,QWORD PTR [rbp-0x30]
  42734c:	cmp    rax,QWORD PTR [rbp-0x38]
  427350:	je     42736c <flatcc_json_parser_integer@@Base+0xf3>
  427352:	mov    rax,QWORD PTR [rbp-0x30]
  427356:	movzx  eax,BYTE PTR [rax]
  427359:	cmp    al,0x2f
  42735b:	jle    42736c <flatcc_json_parser_integer@@Base+0xf3>
  42735d:	mov    rax,QWORD PTR [rbp-0x30]
  427361:	movzx  eax,BYTE PTR [rax]
  427364:	cmp    al,0x39
  427366:	jle    4272db <flatcc_json_parser_integer@@Base+0x62>
  42736c:	mov    rax,QWORD PTR [rbp-0x30]
  427370:	cmp    rax,QWORD PTR [rbp-0x10]
  427374:	jne    42737c <flatcc_json_parser_integer@@Base+0x103>
  427376:	mov    rax,QWORD PTR [rbp-0x30]
  42737a:	jmp    4273d1 <flatcc_json_parser_integer@@Base+0x158>
  42737c:	mov    rax,QWORD PTR [rbp-0x30]
  427380:	cmp    rax,QWORD PTR [rbp-0x38]
  427384:	je     4273c2 <flatcc_json_parser_integer@@Base+0x149>
  427386:	mov    rax,QWORD PTR [rbp-0x30]
  42738a:	movzx  eax,BYTE PTR [rax]
  42738d:	cmp    al,0x65
  42738f:	je     4273a7 <flatcc_json_parser_integer@@Base+0x12e>
  427391:	mov    rax,QWORD PTR [rbp-0x30]
  427395:	movzx  eax,BYTE PTR [rax]
  427398:	cmp    al,0x45
  42739a:	je     4273a7 <flatcc_json_parser_integer@@Base+0x12e>
  42739c:	mov    rax,QWORD PTR [rbp-0x30]
  4273a0:	movzx  eax,BYTE PTR [rax]
  4273a3:	cmp    al,0x2e
  4273a5:	jne    4273c2 <flatcc_json_parser_integer@@Base+0x149>
  4273a7:	mov    rdx,QWORD PTR [rbp-0x38]
  4273ab:	mov    rsi,QWORD PTR [rbp-0x30]
  4273af:	mov    rax,QWORD PTR [rbp-0x28]
  4273b3:	mov    ecx,0xc
  4273b8:	mov    rdi,rax
  4273bb:	call   425bce <flatcc_json_parser_set_error@@Base>
  4273c0:	jmp    4273d1 <flatcc_json_parser_integer@@Base+0x158>
  4273c2:	mov    rax,QWORD PTR [rbp-0x48]
  4273c6:	mov    rdx,QWORD PTR [rbp-0x18]
  4273ca:	mov    QWORD PTR [rax],rdx
  4273cd:	mov    rax,QWORD PTR [rbp-0x30]
  4273d1:	leave  
  4273d2:	ret    

00000000004273d3 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  4273d3:	push   rbp
  4273d4:	mov    rbp,rsp
  4273d7:	sub    rsp,0x70
  4273db:	mov    QWORD PTR [rbp-0x48],rdi
  4273df:	mov    QWORD PTR [rbp-0x50],rsi
  4273e3:	mov    QWORD PTR [rbp-0x58],rdx
  4273e7:	mov    QWORD PTR [rbp-0x60],rcx
  4273eb:	mov    DWORD PTR [rbp-0x64],r8d
  4273ef:	mov    rax,QWORD PTR fs:0x28
  4273f8:	mov    QWORD PTR [rbp-0x8],rax
  4273fc:	xor    eax,eax
  4273fe:	cmp    DWORD PTR [rbp-0x64],0x0
  427402:	setne  al
  427405:	movzx  eax,al
  427408:	mov    DWORD PTR [rbp-0x38],eax
  42740b:	mov    rdx,QWORD PTR [rbp-0x58]
  42740f:	mov    rcx,QWORD PTR [rbp-0x50]
  427413:	mov    rax,QWORD PTR [rbp-0x48]
  427417:	mov    rsi,rcx
  42741a:	mov    rdi,rax
  42741d:	call   421f10 <flatcc_verify_union_vector_field@@Base+0x315>
  427422:	mov    QWORD PTR [rbp-0x50],rax
  427426:	mov    rax,QWORD PTR [rbp-0x50]
  42742a:	mov    QWORD PTR [rbp-0x20],rax
  42742e:	mov    rdx,QWORD PTR [rbp-0x58]
  427432:	mov    rcx,QWORD PTR [rbp-0x20]
  427436:	mov    rax,QWORD PTR [rbp-0x48]
  42743a:	mov    rsi,rcx
  42743d:	mov    rdi,rax
  427440:	call   425c26 <flatcc_json_parser_string_part@@Base>
  427445:	mov    QWORD PTR [rbp-0x50],rax
  427449:	mov    rax,QWORD PTR [rbp-0x50]
  42744d:	cmp    rax,QWORD PTR [rbp-0x58]
  427451:	je     4275e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  427457:	mov    rax,QWORD PTR [rbp-0x50]
  42745b:	movzx  eax,BYTE PTR [rax]
  42745e:	cmp    al,0x22
  427460:	jne    4275e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  427466:	mov    rdx,QWORD PTR [rbp-0x50]
  42746a:	mov    rax,QWORD PTR [rbp-0x20]
  42746e:	sub    rdx,rax
  427471:	mov    rax,rdx
  427474:	mov    rdi,rax
  427477:	call   425298 <grisu3_diy_fp_encode_double@@Base+0x1176>
  42747c:	mov    QWORD PTR [rbp-0x18],rax
  427480:	mov    rax,QWORD PTR [rbp-0x48]
  427484:	mov    rax,QWORD PTR [rax]
  427487:	mov    ecx,0xffffffff
  42748c:	mov    edx,0x1
  427491:	mov    esi,0x1
  427496:	mov    rdi,rax
  427499:	call   41ca8f <flatcc_builder_start_vector@@Base>
  42749e:	test   eax,eax
  4274a0:	jne    4275b3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e0>
  4274a6:	mov    rax,QWORD PTR [rbp-0x48]
  4274aa:	mov    rax,QWORD PTR [rax]
  4274ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4274b1:	mov    rsi,rdx
  4274b4:	mov    rdi,rax
  4274b7:	call   41c377 <flatcc_builder_extend_vector@@Base>
  4274bc:	mov    QWORD PTR [rbp-0x10],rax
  4274c0:	cmp    QWORD PTR [rbp-0x10],0x0
  4274c5:	je     4275b6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e3>
  4274cb:	mov    rdx,QWORD PTR [rbp-0x50]
  4274cf:	mov    rax,QWORD PTR [rbp-0x20]
  4274d3:	sub    rdx,rax
  4274d6:	mov    rax,rdx
  4274d9:	mov    QWORD PTR [rbp-0x28],rax
  4274dd:	mov    rax,QWORD PTR [rbp-0x18]
  4274e1:	mov    QWORD PTR [rbp-0x30],rax
  4274e5:	mov    edi,DWORD PTR [rbp-0x38]
  4274e8:	lea    rcx,[rbp-0x28]
  4274ec:	lea    rdx,[rbp-0x30]
  4274f0:	mov    rsi,QWORD PTR [rbp-0x20]
  4274f4:	mov    rax,QWORD PTR [rbp-0x10]
  4274f8:	mov    r8d,edi
  4274fb:	mov    rdi,rax
  4274fe:	call   4255f1 <grisu3_diy_fp_encode_double@@Base+0x14cf>
  427503:	mov    DWORD PTR [rbp-0x34],eax
  427506:	cmp    DWORD PTR [rbp-0x34],0x0
  42750a:	je     427520 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  42750c:	mov    rdx,QWORD PTR [rbp-0x28]
  427510:	mov    rax,QWORD PTR [rbp-0x20]
  427514:	add    rax,rdx
  427517:	mov    QWORD PTR [rbp-0x50],rax
  42751b:	jmp    4275e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  427520:	mov    rdx,QWORD PTR [rbp-0x50]
  427524:	mov    rax,QWORD PTR [rbp-0x20]
  427528:	sub    rdx,rax
  42752b:	mov    rax,rdx
  42752e:	mov    rdx,rax
  427531:	mov    rax,QWORD PTR [rbp-0x28]
  427535:	cmp    rdx,rax
  427538:	je     42754e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17b>
  42753a:	mov    rdx,QWORD PTR [rbp-0x28]
  42753e:	mov    rax,QWORD PTR [rbp-0x20]
  427542:	add    rax,rdx
  427545:	mov    QWORD PTR [rbp-0x50],rax
  427549:	jmp    4275e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  42754e:	mov    rax,QWORD PTR [rbp-0x30]
  427552:	cmp    rax,QWORD PTR [rbp-0x18]
  427556:	jae    427579 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1a6>
  427558:	mov    rax,QWORD PTR [rbp-0x30]
  42755c:	mov    rdx,QWORD PTR [rbp-0x18]
  427560:	sub    rdx,rax
  427563:	mov    rax,QWORD PTR [rbp-0x48]
  427567:	mov    rax,QWORD PTR [rax]
  42756a:	mov    rsi,rdx
  42756d:	mov    rdi,rax
  427570:	call   41c82b <flatcc_builder_truncate_vector@@Base>
  427575:	test   eax,eax
  427577:	jne    4275b9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e6>
  427579:	mov    rax,QWORD PTR [rbp-0x48]
  42757d:	mov    rax,QWORD PTR [rax]
  427580:	mov    rdi,rax
  427583:	call   41dc65 <flatcc_builder_end_vector@@Base>
  427588:	mov    edx,eax
  42758a:	mov    rax,QWORD PTR [rbp-0x60]
  42758e:	mov    DWORD PTR [rax],edx
  427590:	mov    rax,QWORD PTR [rbp-0x60]
  427594:	mov    eax,DWORD PTR [rax]
  427596:	test   eax,eax
  427598:	je     4275bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e9>
  42759a:	mov    rdx,QWORD PTR [rbp-0x58]
  42759e:	mov    rcx,QWORD PTR [rbp-0x50]
  4275a2:	mov    rax,QWORD PTR [rbp-0x48]
  4275a6:	mov    rsi,rcx
  4275a9:	mov    rdi,rax
  4275ac:	call   421f5f <flatcc_verify_union_vector_field@@Base+0x364>
  4275b1:	jmp    427612 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x23f>
  4275b3:	nop
  4275b4:	jmp    4275bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4275b6:	nop
  4275b7:	jmp    4275bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4275b9:	nop
  4275ba:	jmp    4275bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4275bc:	nop
  4275bd:	mov    rax,QWORD PTR [rbp-0x60]
  4275c1:	mov    DWORD PTR [rax],0x0
  4275c7:	mov    rdx,QWORD PTR [rbp-0x58]
  4275cb:	mov    rsi,QWORD PTR [rbp-0x50]
  4275cf:	mov    rax,QWORD PTR [rbp-0x48]
  4275d3:	mov    ecx,0x21
  4275d8:	mov    rdi,rax
  4275db:	call   425bce <flatcc_json_parser_set_error@@Base>
  4275e0:	jmp    427612 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x23f>
  4275e2:	mov    rax,QWORD PTR [rbp-0x60]
  4275e6:	mov    DWORD PTR [rax],0x0
  4275ec:	cmp    DWORD PTR [rbp-0x64],0x0
  4275f0:	je     4275f9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x226>
  4275f2:	mov    ecx,0x20
  4275f7:	jmp    4275fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22b>
  4275f9:	mov    ecx,0x1f
  4275fe:	mov    rdx,QWORD PTR [rbp-0x58]
  427602:	mov    rsi,QWORD PTR [rbp-0x50]
  427606:	mov    rax,QWORD PTR [rbp-0x48]
  42760a:	mov    rdi,rax
  42760d:	call   425bce <flatcc_json_parser_set_error@@Base>
  427612:	mov    rdi,QWORD PTR [rbp-0x8]
  427616:	xor    rdi,QWORD PTR fs:0x28
  42761f:	je     427626 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x253>
  427621:	call   405070 <__stack_chk_fail@plt>
  427626:	leave  
  427627:	ret    

0000000000427628 <flatcc_json_parser_build_string@@Base>:
  427628:	push   rbp
  427629:	mov    rbp,rsp
  42762c:	sub    rsp,0x40
  427630:	mov    QWORD PTR [rbp-0x28],rdi
  427634:	mov    QWORD PTR [rbp-0x30],rsi
  427638:	mov    QWORD PTR [rbp-0x38],rdx
  42763c:	mov    QWORD PTR [rbp-0x40],rcx
  427640:	mov    rax,QWORD PTR fs:0x28
  427649:	mov    QWORD PTR [rbp-0x8],rax
  42764d:	xor    eax,eax
  42764f:	mov    rdx,QWORD PTR [rbp-0x38]
  427653:	mov    rcx,QWORD PTR [rbp-0x30]
  427657:	mov    rax,QWORD PTR [rbp-0x28]
  42765b:	mov    rsi,rcx
  42765e:	mov    rdi,rax
  427661:	call   421f10 <flatcc_verify_union_vector_field@@Base+0x315>
  427666:	mov    QWORD PTR [rbp-0x30],rax
  42766a:	mov    rax,QWORD PTR [rbp-0x30]
  42766e:	mov    QWORD PTR [rbp-0x18],rax
  427672:	mov    rdx,QWORD PTR [rbp-0x38]
  427676:	mov    rcx,QWORD PTR [rbp-0x18]
  42767a:	mov    rax,QWORD PTR [rbp-0x28]
  42767e:	mov    rsi,rcx
  427681:	mov    rdi,rax
  427684:	call   425c26 <flatcc_json_parser_string_part@@Base>
  427689:	mov    QWORD PTR [rbp-0x30],rax
  42768d:	mov    rax,QWORD PTR [rbp-0x30]
  427691:	cmp    rax,QWORD PTR [rbp-0x38]
  427695:	je     4276d6 <flatcc_json_parser_build_string@@Base+0xae>
  427697:	mov    rax,QWORD PTR [rbp-0x30]
  42769b:	movzx  eax,BYTE PTR [rax]
  42769e:	cmp    al,0x22
  4276a0:	jne    4276d6 <flatcc_json_parser_build_string@@Base+0xae>
  4276a2:	mov    rdx,QWORD PTR [rbp-0x30]
  4276a6:	mov    rax,QWORD PTR [rbp-0x18]
  4276aa:	sub    rdx,rax
  4276ad:	mov    rax,rdx
  4276b0:	mov    rdx,rax
  4276b3:	mov    rax,QWORD PTR [rbp-0x28]
  4276b7:	mov    rax,QWORD PTR [rax]
  4276ba:	mov    rcx,QWORD PTR [rbp-0x18]
  4276be:	mov    rsi,rcx
  4276c1:	mov    rdi,rax
  4276c4:	call   41eada <flatcc_builder_create_string@@Base>
  4276c9:	mov    edx,eax
  4276cb:	mov    rax,QWORD PTR [rbp-0x40]
  4276cf:	mov    DWORD PTR [rax],edx
  4276d1:	jmp    4277f2 <flatcc_json_parser_build_string@@Base+0x1ca>
  4276d6:	mov    rax,QWORD PTR [rbp-0x28]
  4276da:	mov    rax,QWORD PTR [rax]
  4276dd:	mov    rdi,rax
  4276e0:	call   41cc16 <flatcc_builder_start_string@@Base>
  4276e5:	test   eax,eax
  4276e7:	jne    42780f <flatcc_json_parser_build_string@@Base+0x1e7>
  4276ed:	mov    rdx,QWORD PTR [rbp-0x30]
  4276f1:	mov    rax,QWORD PTR [rbp-0x18]
  4276f5:	sub    rdx,rax
  4276f8:	mov    rax,rdx
  4276fb:	mov    rdx,rax
  4276fe:	mov    rax,QWORD PTR [rbp-0x28]
  427702:	mov    rax,QWORD PTR [rax]
  427705:	mov    rcx,QWORD PTR [rbp-0x18]
  427709:	mov    rsi,rcx
  42770c:	mov    rdi,rax
  42770f:	call   41c734 <flatcc_builder_append_string@@Base>
  427714:	test   rax,rax
  427717:	je     42780f <flatcc_json_parser_build_string@@Base+0x1e7>
  42771d:	jmp    4277c2 <flatcc_json_parser_build_string@@Base+0x19a>
  427722:	lea    rcx,[rbp-0xc]
  427726:	mov    rdx,QWORD PTR [rbp-0x38]
  42772a:	mov    rsi,QWORD PTR [rbp-0x30]
  42772e:	mov    rax,QWORD PTR [rbp-0x28]
  427732:	mov    rdi,rax
  427735:	call   425e2c <flatcc_json_parser_string_escape@@Base>
  42773a:	mov    QWORD PTR [rbp-0x30],rax
  42773e:	movzx  eax,BYTE PTR [rbp-0xc]
  427742:	movsx  rdx,al
  427746:	lea    rax,[rbp-0xc]
  42774a:	add    rax,0x1
  42774e:	mov    rcx,QWORD PTR [rbp-0x28]
  427752:	mov    rcx,QWORD PTR [rcx]
  427755:	mov    rsi,rax
  427758:	mov    rdi,rcx
  42775b:	call   41c734 <flatcc_builder_append_string@@Base>
  427760:	test   rax,rax
  427763:	je     42780b <flatcc_json_parser_build_string@@Base+0x1e3>
  427769:	mov    rax,QWORD PTR [rbp-0x30]
  42776d:	mov    QWORD PTR [rbp-0x18],rax
  427771:	mov    rdx,QWORD PTR [rbp-0x38]
  427775:	mov    rcx,QWORD PTR [rbp-0x18]
  427779:	mov    rax,QWORD PTR [rbp-0x28]
  42777d:	mov    rsi,rcx
  427780:	mov    rdi,rax
  427783:	call   425c26 <flatcc_json_parser_string_part@@Base>
  427788:	mov    QWORD PTR [rbp-0x30],rax
  42778c:	mov    rax,QWORD PTR [rbp-0x30]
  427790:	cmp    rax,QWORD PTR [rbp-0x38]
  427794:	je     4277c2 <flatcc_json_parser_build_string@@Base+0x19a>
  427796:	mov    rdx,QWORD PTR [rbp-0x30]
  42779a:	mov    rax,QWORD PTR [rbp-0x18]
  42779e:	sub    rdx,rax
  4277a1:	mov    rax,rdx
  4277a4:	mov    rdx,rax
  4277a7:	mov    rax,QWORD PTR [rbp-0x28]
  4277ab:	mov    rax,QWORD PTR [rax]
  4277ae:	mov    rcx,QWORD PTR [rbp-0x18]
  4277b2:	mov    rsi,rcx
  4277b5:	mov    rdi,rax
  4277b8:	call   41c734 <flatcc_builder_append_string@@Base>
  4277bd:	test   rax,rax
  4277c0:	je     42780e <flatcc_json_parser_build_string@@Base+0x1e6>
  4277c2:	mov    rax,QWORD PTR [rbp-0x30]
  4277c6:	cmp    rax,QWORD PTR [rbp-0x38]
  4277ca:	je     4277db <flatcc_json_parser_build_string@@Base+0x1b3>
  4277cc:	mov    rax,QWORD PTR [rbp-0x30]
  4277d0:	movzx  eax,BYTE PTR [rax]
  4277d3:	cmp    al,0x22
  4277d5:	jne    427722 <flatcc_json_parser_build_string@@Base+0xfa>
  4277db:	mov    rax,QWORD PTR [rbp-0x28]
  4277df:	mov    rax,QWORD PTR [rax]
  4277e2:	mov    rdi,rax
  4277e5:	call   41ed51 <flatcc_builder_end_string@@Base>
  4277ea:	mov    edx,eax
  4277ec:	mov    rax,QWORD PTR [rbp-0x40]
  4277f0:	mov    DWORD PTR [rax],edx
  4277f2:	mov    rdx,QWORD PTR [rbp-0x38]
  4277f6:	mov    rcx,QWORD PTR [rbp-0x30]
  4277fa:	mov    rax,QWORD PTR [rbp-0x28]
  4277fe:	mov    rsi,rcx
  427801:	mov    rdi,rax
  427804:	call   421f5f <flatcc_verify_union_vector_field@@Base+0x364>
  427809:	jmp    42781d <flatcc_json_parser_build_string@@Base+0x1f5>
  42780b:	nop
  42780c:	jmp    42780f <flatcc_json_parser_build_string@@Base+0x1e7>
  42780e:	nop
  42780f:	mov    rax,QWORD PTR [rbp-0x40]
  427813:	mov    DWORD PTR [rax],0x0
  427819:	mov    rax,QWORD PTR [rbp-0x30]
  42781d:	mov    rsi,QWORD PTR [rbp-0x8]
  427821:	xor    rsi,QWORD PTR fs:0x28
  42782a:	je     427831 <flatcc_json_parser_build_string@@Base+0x209>
  42782c:	call   405070 <__stack_chk_fail@plt>
  427831:	leave  
  427832:	ret    

0000000000427833 <flatcc_json_parser_prepare_unions@@Base>:
  427833:	push   rbp
  427834:	mov    rbp,rsp
  427837:	sub    rsp,0x40
  42783b:	mov    QWORD PTR [rbp-0x18],rdi
  42783f:	mov    QWORD PTR [rbp-0x20],rsi
  427843:	mov    QWORD PTR [rbp-0x28],rdx
  427847:	mov    QWORD PTR [rbp-0x30],rcx
  42784b:	mov    QWORD PTR [rbp-0x38],r8
  42784f:	mov    rdx,QWORD PTR [rbp-0x30]
  427853:	mov    rax,rdx
  427856:	shl    rax,0x2
  42785a:	add    rax,rdx
  42785d:	shl    rax,0x3
  427861:	lea    rdx,[rax+0x10]
  427865:	mov    rax,QWORD PTR [rbp-0x18]
  427869:	mov    rax,QWORD PTR [rax]
  42786c:	mov    rsi,rdx
  42786f:	mov    rdi,rax
  427872:	call   41aea6 <flatcc_builder_enter_user_frame@@Base>
  427877:	mov    rdx,rax
  42787a:	mov    rax,QWORD PTR [rbp-0x38]
  42787e:	mov    QWORD PTR [rax],rdx
  427881:	mov    rax,QWORD PTR [rbp-0x38]
  427885:	mov    rax,QWORD PTR [rax]
  427888:	test   rax,rax
  42788b:	jne    4278a8 <flatcc_json_parser_prepare_unions@@Base+0x75>
  42788d:	mov    rdx,QWORD PTR [rbp-0x28]
  427891:	mov    rsi,QWORD PTR [rbp-0x20]
  427895:	mov    rax,QWORD PTR [rbp-0x18]
  427899:	mov    ecx,0x21
  42789e:	mov    rdi,rax
  4278a1:	call   425bce <flatcc_json_parser_set_error@@Base>
  4278a6:	jmp    4278d4 <flatcc_json_parser_prepare_unions@@Base+0xa1>
  4278a8:	mov    rax,QWORD PTR [rbp-0x38]
  4278ac:	mov    rdx,QWORD PTR [rax]
  4278af:	mov    rax,QWORD PTR [rbp-0x18]
  4278b3:	mov    rax,QWORD PTR [rax]
  4278b6:	mov    rsi,rdx
  4278b9:	mov    rdi,rax
  4278bc:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  4278c1:	mov    QWORD PTR [rbp-0x8],rax
  4278c5:	mov    rax,QWORD PTR [rbp-0x8]
  4278c9:	mov    rdx,QWORD PTR [rbp-0x30]
  4278cd:	mov    QWORD PTR [rax],rdx
  4278d0:	mov    rax,QWORD PTR [rbp-0x20]
  4278d4:	leave  
  4278d5:	ret    

00000000004278d6 <flatcc_json_parser_finalize_unions@@Base>:
  4278d6:	push   rbp
  4278d7:	mov    rbp,rsp
  4278da:	sub    rsp,0x30
  4278de:	mov    QWORD PTR [rbp-0x18],rdi
  4278e2:	mov    QWORD PTR [rbp-0x20],rsi
  4278e6:	mov    QWORD PTR [rbp-0x28],rdx
  4278ea:	mov    QWORD PTR [rbp-0x30],rcx
  4278ee:	mov    rax,QWORD PTR [rbp-0x18]
  4278f2:	mov    rax,QWORD PTR [rax]
  4278f5:	mov    rdx,QWORD PTR [rbp-0x30]
  4278f9:	mov    rsi,rdx
  4278fc:	mov    rdi,rax
  4278ff:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  427904:	mov    QWORD PTR [rbp-0x8],rax
  427908:	mov    rax,QWORD PTR [rbp-0x8]
  42790c:	mov    rax,QWORD PTR [rax+0x8]
  427910:	test   rax,rax
  427913:	je     427932 <flatcc_json_parser_finalize_unions@@Base+0x5c>
  427915:	mov    rdx,QWORD PTR [rbp-0x28]
  427919:	mov    rsi,QWORD PTR [rbp-0x20]
  42791d:	mov    rax,QWORD PTR [rbp-0x18]
  427921:	mov    ecx,0x1b
  427926:	mov    rdi,rax
  427929:	call   425bce <flatcc_json_parser_set_error@@Base>
  42792e:	mov    QWORD PTR [rbp-0x20],rax
  427932:	mov    rax,QWORD PTR [rbp-0x18]
  427936:	mov    rax,QWORD PTR [rax]
  427939:	mov    rdx,QWORD PTR [rbp-0x30]
  42793d:	mov    rsi,rdx
  427940:	mov    rdi,rax
  427943:	call   41b009 <flatcc_builder_exit_user_frame_at@@Base>
  427948:	mov    rax,QWORD PTR [rbp-0x20]
  42794c:	leave  
  42794d:	ret    

000000000042794e <flatcc_json_parser_union@@Base>:
  42794e:	push   rbp
  42794f:	mov    rbp,rsp
  427952:	sub    rsp,0x60
  427956:	mov    QWORD PTR [rbp-0x28],rdi
  42795a:	mov    QWORD PTR [rbp-0x30],rsi
  42795e:	mov    QWORD PTR [rbp-0x38],rdx
  427962:	mov    QWORD PTR [rbp-0x40],rcx
  427966:	mov    eax,r8d
  427969:	mov    QWORD PTR [rbp-0x50],r9
  42796d:	mov    WORD PTR [rbp-0x44],ax
  427971:	mov    rax,QWORD PTR [rbp+0x10]
  427975:	mov    QWORD PTR [rbp-0x58],rax
  427979:	mov    rax,QWORD PTR fs:0x28
  427982:	mov    QWORD PTR [rbp-0x8],rax
  427986:	xor    eax,eax
  427988:	mov    rax,QWORD PTR [rbp-0x28]
  42798c:	mov    rax,QWORD PTR [rax]
  42798f:	mov    rdx,QWORD PTR [rbp-0x50]
  427993:	mov    rsi,rdx
  427996:	mov    rdi,rax
  427999:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  42799e:	mov    QWORD PTR [rbp-0x20],rax
  4279a2:	mov    rdx,QWORD PTR [rbp-0x40]
  4279a6:	mov    rax,rdx
  4279a9:	shl    rax,0x2
  4279ad:	add    rax,rdx
  4279b0:	shl    rax,0x3
  4279b4:	mov    rdx,QWORD PTR [rbp-0x20]
  4279b8:	add    rax,rdx
  4279bb:	add    rax,0x10
  4279bf:	mov    QWORD PTR [rbp-0x18],rax
  4279c3:	mov    rax,QWORD PTR [rbp-0x18]
  4279c7:	mov    rax,QWORD PTR [rax]
  4279ca:	test   rax,rax
  4279cd:	je     4279ed <flatcc_json_parser_union@@Base+0x9f>
  4279cf:	mov    rdx,QWORD PTR [rbp-0x38]
  4279d3:	mov    rsi,QWORD PTR [rbp-0x30]
  4279d7:	mov    rax,QWORD PTR [rbp-0x28]
  4279db:	mov    ecx,0x1c
  4279e0:	mov    rdi,rax
  4279e3:	call   425bce <flatcc_json_parser_set_error@@Base>
  4279e8:	jmp    427b11 <flatcc_json_parser_union@@Base+0x1c3>
  4279ed:	mov    rax,QWORD PTR [rbp-0x18]
  4279f1:	movzx  eax,BYTE PTR [rax+0x14]
  4279f5:	test   al,al
  4279f7:	jne    427a59 <flatcc_json_parser_union@@Base+0x10b>
  4279f9:	mov    rax,QWORD PTR [rbp-0x20]
  4279fd:	mov    rax,QWORD PTR [rax+0x8]
  427a01:	lea    rdx,[rax+0x1]
  427a05:	mov    rax,QWORD PTR [rbp-0x20]
  427a09:	mov    QWORD PTR [rax+0x8],rdx
  427a0d:	mov    rax,QWORD PTR [rbp-0x28]
  427a11:	mov    edx,DWORD PTR [rax+0x14]
  427a14:	mov    rax,QWORD PTR [rbp-0x18]
  427a18:	mov    DWORD PTR [rax+0x10],edx
  427a1b:	mov    rax,QWORD PTR [rbp-0x28]
  427a1f:	mov    rdx,QWORD PTR [rax+0x8]
  427a23:	mov    rax,QWORD PTR [rbp-0x18]
  427a27:	mov    QWORD PTR [rax+0x8],rdx
  427a2b:	mov    rax,QWORD PTR [rbp-0x18]
  427a2f:	mov    rdx,QWORD PTR [rbp-0x30]
  427a33:	mov    QWORD PTR [rax],rdx
  427a36:	mov    rax,QWORD PTR [rbp-0x18]
  427a3a:	mov    rcx,QWORD PTR [rax]
  427a3d:	mov    rdx,QWORD PTR [rbp-0x38]
  427a41:	mov    rax,QWORD PTR [rbp-0x28]
  427a45:	mov    rsi,rcx
  427a48:	mov    rdi,rax
  427a4b:	call   426bfb <flatcc_json_parser_generic_json@@Base>
  427a50:	mov    QWORD PTR [rbp-0x30],rax
  427a54:	jmp    427b0d <flatcc_json_parser_union@@Base+0x1bf>
  427a59:	mov    rax,QWORD PTR [rbp-0x18]
  427a5d:	movzx  eax,BYTE PTR [rax+0x15]
  427a61:	mov    BYTE PTR [rbp-0x10],al
  427a64:	mov    rax,QWORD PTR [rbp-0x18]
  427a68:	movzx  eax,BYTE PTR [rax+0x15]
  427a6c:	test   al,al
  427a6e:	jne    427a8e <flatcc_json_parser_union@@Base+0x140>
  427a70:	mov    rdx,QWORD PTR [rbp-0x38]
  427a74:	mov    rsi,QWORD PTR [rbp-0x30]
  427a78:	mov    rax,QWORD PTR [rbp-0x28]
  427a7c:	mov    ecx,0x19
  427a81:	mov    rdi,rax
  427a84:	call   425bce <flatcc_json_parser_set_error@@Base>
  427a89:	jmp    427b11 <flatcc_json_parser_union@@Base+0x1c3>
  427a8e:	mov    rax,QWORD PTR [rbp-0x20]
  427a92:	mov    rax,QWORD PTR [rax+0x8]
  427a96:	lea    rdx,[rax-0x1]
  427a9a:	mov    rax,QWORD PTR [rbp-0x20]
  427a9e:	mov    QWORD PTR [rax+0x8],rdx
  427aa2:	mov    rax,QWORD PTR [rbp-0x18]
  427aa6:	movzx  eax,BYTE PTR [rax+0x15]
  427aaa:	movzx  ecx,al
  427aad:	lea    rax,[rbp-0x10]
  427ab1:	lea    r8,[rax+0x4]
  427ab5:	mov    rdx,QWORD PTR [rbp-0x38]
  427ab9:	mov    rsi,QWORD PTR [rbp-0x30]
  427abd:	mov    rdi,QWORD PTR [rbp-0x28]
  427ac1:	mov    rax,QWORD PTR [rbp-0x58]
  427ac5:	call   rax
  427ac7:	mov    QWORD PTR [rbp-0x30],rax
  427acb:	mov    rax,QWORD PTR [rbp-0x30]
  427acf:	cmp    rax,QWORD PTR [rbp-0x38]
  427ad3:	je     427b0d <flatcc_json_parser_union@@Base+0x1bf>
  427ad5:	movzx  ecx,WORD PTR [rbp-0x44]
  427ad9:	mov    rax,QWORD PTR [rbp-0x28]
  427add:	mov    rax,QWORD PTR [rax]
  427ae0:	mov    rdx,QWORD PTR [rbp-0x10]
  427ae4:	mov    esi,ecx
  427ae6:	mov    rdi,rax
  427ae9:	call   41e257 <flatcc_builder_table_add_union@@Base>
  427aee:	test   eax,eax
  427af0:	je     427b0d <flatcc_json_parser_union@@Base+0x1bf>
  427af2:	mov    rdx,QWORD PTR [rbp-0x38]
  427af6:	mov    rsi,QWORD PTR [rbp-0x30]
  427afa:	mov    rax,QWORD PTR [rbp-0x28]
  427afe:	mov    ecx,0x1c
  427b03:	mov    rdi,rax
  427b06:	call   425bce <flatcc_json_parser_set_error@@Base>
  427b0b:	jmp    427b11 <flatcc_json_parser_union@@Base+0x1c3>
  427b0d:	mov    rax,QWORD PTR [rbp-0x30]
  427b11:	mov    rdi,QWORD PTR [rbp-0x8]
  427b15:	xor    rdi,QWORD PTR fs:0x28
  427b1e:	je     427b25 <flatcc_json_parser_union@@Base+0x1d7>
  427b20:	call   405070 <__stack_chk_fail@plt>
  427b25:	leave  
  427b26:	ret    

0000000000427b27 <flatcc_json_parser_union_type@@Base>:
  427b27:	push   rbp
  427b28:	mov    rbp,rsp
  427b2b:	add    rsp,0xffffffffffffff80
  427b2f:	mov    QWORD PTR [rbp-0x48],rdi
  427b33:	mov    QWORD PTR [rbp-0x50],rsi
  427b37:	mov    QWORD PTR [rbp-0x58],rdx
  427b3b:	mov    QWORD PTR [rbp-0x60],rcx
  427b3f:	mov    eax,r8d
  427b42:	mov    QWORD PTR [rbp-0x70],r9
  427b46:	mov    WORD PTR [rbp-0x64],ax
  427b4a:	mov    rax,QWORD PTR [rbp+0x10]
  427b4e:	mov    QWORD PTR [rbp-0x78],rax
  427b52:	mov    rax,QWORD PTR [rbp+0x18]
  427b56:	mov    QWORD PTR [rbp-0x80],rax
  427b5a:	mov    rax,QWORD PTR fs:0x28
  427b63:	mov    QWORD PTR [rbp-0x8],rax
  427b67:	xor    eax,eax
  427b69:	mov    rax,QWORD PTR [rbp-0x48]
  427b6d:	mov    rax,QWORD PTR [rax]
  427b70:	mov    rdx,QWORD PTR [rbp-0x70]
  427b74:	mov    rsi,rdx
  427b77:	mov    rdi,rax
  427b7a:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  427b7f:	mov    QWORD PTR [rbp-0x30],rax
  427b83:	mov    rax,QWORD PTR [rbp-0x30]
  427b87:	lea    rcx,[rax+0x10]
  427b8b:	mov    rdx,QWORD PTR [rbp-0x60]
  427b8f:	mov    rax,rdx
  427b92:	shl    rax,0x2
  427b96:	add    rax,rdx
  427b99:	shl    rax,0x3
  427b9d:	add    rax,rcx
  427ba0:	mov    QWORD PTR [rbp-0x28],rax
  427ba4:	mov    rax,QWORD PTR [rbp-0x28]
  427ba8:	movzx  eax,BYTE PTR [rax+0x14]
  427bac:	test   al,al
  427bae:	je     427bce <flatcc_json_parser_union_type@@Base+0xa7>
  427bb0:	mov    rdx,QWORD PTR [rbp-0x58]
  427bb4:	mov    rsi,QWORD PTR [rbp-0x50]
  427bb8:	mov    rax,QWORD PTR [rbp-0x48]
  427bbc:	mov    ecx,0x1c
  427bc1:	mov    rdi,rax
  427bc4:	call   425bce <flatcc_json_parser_set_error@@Base>
  427bc9:	jmp    427d6c <flatcc_json_parser_union_type@@Base+0x245>
  427bce:	mov    rax,QWORD PTR [rbp-0x28]
  427bd2:	mov    BYTE PTR [rax+0x14],0x1
  427bd6:	mov    rax,QWORD PTR [rbp-0x28]
  427bda:	lea    rcx,[rax+0x15]
  427bde:	mov    rax,QWORD PTR [rbp-0x50]
  427be2:	mov    QWORD PTR [rbp-0x20],rax
  427be6:	mov    rdx,QWORD PTR [rbp-0x58]
  427bea:	mov    rsi,QWORD PTR [rbp-0x20]
  427bee:	mov    rax,QWORD PTR [rbp-0x48]
  427bf2:	mov    rdi,rax
  427bf5:	call   4229f9 <flatcc_verify_union_vector_field@@Base+0xdfe>
  427bfa:	mov    QWORD PTR [rbp-0x50],rax
  427bfe:	mov    rax,QWORD PTR [rbp-0x20]
  427c02:	cmp    rax,QWORD PTR [rbp-0x50]
  427c06:	jne    427c2f <flatcc_json_parser_union_type@@Base+0x108>
  427c08:	mov    rax,QWORD PTR [rbp-0x28]
  427c0c:	lea    rdi,[rax+0x15]
  427c10:	mov    rcx,QWORD PTR [rbp-0x78]
  427c14:	mov    rdx,QWORD PTR [rbp-0x58]
  427c18:	mov    rsi,QWORD PTR [rbp-0x50]
  427c1c:	mov    rax,QWORD PTR [rbp-0x48]
  427c20:	mov    r8,rdi
  427c23:	mov    rdi,rax
  427c26:	call   422fc6 <flatcc_verify_union_vector_field@@Base+0x13cb>
  427c2b:	mov    QWORD PTR [rbp-0x50],rax
  427c2f:	mov    rax,QWORD PTR [rbp-0x28]
  427c33:	mov    rax,QWORD PTR [rax]
  427c36:	test   rax,rax
  427c39:	jne    427c67 <flatcc_json_parser_union_type@@Base+0x140>
  427c3b:	mov    rax,QWORD PTR [rbp-0x30]
  427c3f:	mov    rdx,QWORD PTR [rax+0x8]
  427c43:	mov    rax,QWORD PTR [rbp-0x28]
  427c47:	movzx  eax,BYTE PTR [rax+0x15]
  427c4b:	test   al,al
  427c4d:	setne  al
  427c50:	movzx  eax,al
  427c53:	add    rdx,rax
  427c56:	mov    rax,QWORD PTR [rbp-0x30]
  427c5a:	mov    QWORD PTR [rax+0x8],rdx
  427c5e:	mov    rax,QWORD PTR [rbp-0x50]
  427c62:	jmp    427d6c <flatcc_json_parser_union_type@@Base+0x245>
  427c67:	mov    rax,QWORD PTR [rbp-0x30]
  427c6b:	mov    rax,QWORD PTR [rax+0x8]
  427c6f:	test   rax,rax
  427c72:	jne    427c93 <flatcc_json_parser_union_type@@Base+0x16c>
  427c74:	lea    rcx,[rip+0x12c95]        # 43a910 <flatcc_builder_padding_base@@Base+0x26b0>
  427c7b:	mov    edx,0x3c5
  427c80:	lea    rsi,[rip+0x12779]        # 43a400 <flatcc_builder_padding_base@@Base+0x21a0>
  427c87:	lea    rdi,[rip+0x127d6]        # 43a464 <flatcc_builder_padding_base@@Base+0x2204>
  427c8e:	call   405080 <__assert_fail@plt>
  427c93:	mov    rax,QWORD PTR [rbp-0x30]
  427c97:	mov    rax,QWORD PTR [rax+0x8]
  427c9b:	lea    rdx,[rax-0x1]
  427c9f:	mov    rax,QWORD PTR [rbp-0x30]
  427ca3:	mov    QWORD PTR [rax+0x8],rdx
  427ca7:	mov    rax,QWORD PTR [rbp-0x48]
  427cab:	mov    eax,DWORD PTR [rax+0x14]
  427cae:	mov    DWORD PTR [rbp-0x34],eax
  427cb1:	mov    rax,QWORD PTR [rbp-0x48]
  427cb5:	mov    rax,QWORD PTR [rax+0x8]
  427cb9:	mov    QWORD PTR [rbp-0x18],rax
  427cbd:	mov    rax,QWORD PTR [rbp-0x28]
  427cc1:	mov    edx,DWORD PTR [rax+0x10]
  427cc4:	mov    rax,QWORD PTR [rbp-0x48]
  427cc8:	mov    DWORD PTR [rax+0x14],edx
  427ccb:	mov    rax,QWORD PTR [rbp-0x28]
  427ccf:	mov    rdx,QWORD PTR [rax+0x8]
  427cd3:	mov    rax,QWORD PTR [rbp-0x48]
  427cd7:	mov    QWORD PTR [rax+0x8],rdx
  427cdb:	mov    rax,QWORD PTR [rbp-0x28]
  427cdf:	movzx  eax,BYTE PTR [rax+0x15]
  427ce3:	mov    BYTE PTR [rbp-0x10],al
  427ce6:	mov    rax,QWORD PTR [rbp-0x28]
  427cea:	movzx  eax,BYTE PTR [rax+0x15]
  427cee:	movzx  ecx,al
  427cf1:	mov    rax,QWORD PTR [rbp-0x28]
  427cf5:	mov    rsi,QWORD PTR [rax]
  427cf8:	lea    rax,[rbp-0x10]
  427cfc:	lea    r8,[rax+0x4]
  427d00:	mov    rdx,QWORD PTR [rbp-0x58]
  427d04:	mov    rdi,QWORD PTR [rbp-0x48]
  427d08:	mov    rax,QWORD PTR [rbp-0x80]
  427d0c:	call   rax
  427d0e:	cmp    rax,QWORD PTR [rbp-0x58]
  427d12:	jne    427d1a <flatcc_json_parser_union_type@@Base+0x1f3>
  427d14:	mov    rax,QWORD PTR [rbp-0x58]
  427d18:	jmp    427d6c <flatcc_json_parser_union_type@@Base+0x245>
  427d1a:	movzx  ecx,WORD PTR [rbp-0x64]
  427d1e:	mov    rax,QWORD PTR [rbp-0x48]
  427d22:	mov    rax,QWORD PTR [rax]
  427d25:	mov    rdx,QWORD PTR [rbp-0x10]
  427d29:	mov    esi,ecx
  427d2b:	mov    rdi,rax
  427d2e:	call   41e257 <flatcc_builder_table_add_union@@Base>
  427d33:	test   eax,eax
  427d35:	je     427d52 <flatcc_json_parser_union_type@@Base+0x22b>
  427d37:	mov    rdx,QWORD PTR [rbp-0x58]
  427d3b:	mov    rsi,QWORD PTR [rbp-0x50]
  427d3f:	mov    rax,QWORD PTR [rbp-0x48]
  427d43:	mov    ecx,0x1c
  427d48:	mov    rdi,rax
  427d4b:	call   425bce <flatcc_json_parser_set_error@@Base>
  427d50:	jmp    427d6c <flatcc_json_parser_union_type@@Base+0x245>
  427d52:	mov    rax,QWORD PTR [rbp-0x48]
  427d56:	mov    edx,DWORD PTR [rbp-0x34]
  427d59:	mov    DWORD PTR [rax+0x14],edx
  427d5c:	mov    rax,QWORD PTR [rbp-0x48]
  427d60:	mov    rdx,QWORD PTR [rbp-0x18]
  427d64:	mov    QWORD PTR [rax+0x8],rdx
  427d68:	mov    rax,QWORD PTR [rbp-0x50]
  427d6c:	mov    rdi,QWORD PTR [rbp-0x8]
  427d70:	xor    rdi,QWORD PTR fs:0x28
  427d79:	je     427d80 <flatcc_json_parser_union_type@@Base+0x259>
  427d7b:	call   405070 <__stack_chk_fail@plt>
  427d80:	leave  
  427d81:	ret    
  427d82:	push   rbp
  427d83:	mov    rbp,rsp
  427d86:	sub    rsp,0x60
  427d8a:	mov    QWORD PTR [rbp-0x38],rdi
  427d8e:	mov    QWORD PTR [rbp-0x40],rsi
  427d92:	mov    QWORD PTR [rbp-0x48],rdx
  427d96:	mov    QWORD PTR [rbp-0x50],rcx
  427d9a:	mov    DWORD PTR [rbp-0x54],r8d
  427d9e:	mov    eax,r9d
  427da1:	mov    WORD PTR [rbp-0x58],ax
  427da5:	mov    rax,QWORD PTR [rbp+0x10]
  427da9:	mov    QWORD PTR [rbp-0x60],rax
  427dad:	mov    rax,QWORD PTR fs:0x28
  427db6:	mov    QWORD PTR [rbp-0x8],rax
  427dba:	xor    eax,eax
  427dbc:	mov    DWORD PTR [rbp-0x28],0x0
  427dc3:	mov    rax,QWORD PTR [rbp-0x38]
  427dc7:	mov    rax,QWORD PTR [rax]
  427dca:	mov    rdi,rax
  427dcd:	call   41cb2d <flatcc_builder_start_offset_vector@@Base>
  427dd2:	test   eax,eax
  427dd4:	jne    427f6a <flatcc_json_parser_union_type@@Base+0x443>
  427dda:	lea    rcx,[rbp-0x24]
  427dde:	mov    rdx,QWORD PTR [rbp-0x48]
  427de2:	mov    rsi,QWORD PTR [rbp-0x40]
  427de6:	mov    rax,QWORD PTR [rbp-0x38]
  427dea:	mov    rdi,rax
  427ded:	call   422227 <flatcc_verify_union_vector_field@@Base+0x62c>
  427df2:	mov    QWORD PTR [rbp-0x40],rax
  427df6:	mov    QWORD PTR [rbp-0x20],0x0
  427dfe:	jmp    427ecf <flatcc_json_parser_union_type@@Base+0x3a8>
  427e03:	mov    eax,DWORD PTR [rbp-0x54]
  427e06:	cmp    rax,QWORD PTR [rbp-0x20]
  427e0a:	jne    427e2a <flatcc_json_parser_union_type@@Base+0x303>
  427e0c:	mov    rdx,QWORD PTR [rbp-0x48]
  427e10:	mov    rsi,QWORD PTR [rbp-0x40]
  427e14:	mov    rax,QWORD PTR [rbp-0x38]
  427e18:	mov    ecx,0x1e
  427e1d:	mov    rdi,rax
  427e20:	call   425bce <flatcc_json_parser_set_error@@Base>
  427e25:	jmp    427f8d <flatcc_json_parser_union_type@@Base+0x466>
  427e2a:	mov    rax,QWORD PTR [rbp-0x38]
  427e2e:	mov    rax,QWORD PTR [rax]
  427e31:	mov    rdx,QWORD PTR [rbp-0x50]
  427e35:	mov    rsi,rdx
  427e38:	mov    rdi,rax
  427e3b:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  427e40:	mov    QWORD PTR [rbp-0x18],rax
  427e44:	mov    rdx,QWORD PTR [rbp-0x18]
  427e48:	mov    rax,QWORD PTR [rbp-0x20]
  427e4c:	add    rax,rdx
  427e4f:	movzx  eax,BYTE PTR [rax]
  427e52:	movzx  ecx,al
  427e55:	lea    r8,[rbp-0x28]
  427e59:	mov    rdx,QWORD PTR [rbp-0x48]
  427e5d:	mov    rsi,QWORD PTR [rbp-0x40]
  427e61:	mov    rdi,QWORD PTR [rbp-0x38]
  427e65:	mov    rax,QWORD PTR [rbp-0x60]
  427e69:	call   rax
  427e6b:	mov    QWORD PTR [rbp-0x40],rax
  427e6f:	mov    rax,QWORD PTR [rbp-0x40]
  427e73:	cmp    rax,QWORD PTR [rbp-0x48]
  427e77:	jne    427e82 <flatcc_json_parser_union_type@@Base+0x35b>
  427e79:	mov    rax,QWORD PTR [rbp-0x40]
  427e7d:	jmp    427f8d <flatcc_json_parser_union_type@@Base+0x466>
  427e82:	mov    rax,QWORD PTR [rbp-0x38]
  427e86:	mov    rax,QWORD PTR [rax]
  427e89:	mov    esi,0x1
  427e8e:	mov    rdi,rax
  427e91:	call   41c53d <flatcc_builder_extend_offset_vector@@Base>
  427e96:	mov    QWORD PTR [rbp-0x10],rax
  427e9a:	cmp    QWORD PTR [rbp-0x10],0x0
  427e9f:	je     427f6d <flatcc_json_parser_union_type@@Base+0x446>
  427ea5:	mov    edx,DWORD PTR [rbp-0x28]
  427ea8:	mov    rax,QWORD PTR [rbp-0x10]
  427eac:	mov    DWORD PTR [rax],edx
  427eae:	lea    rcx,[rbp-0x24]
  427eb2:	mov    rdx,QWORD PTR [rbp-0x48]
  427eb6:	mov    rsi,QWORD PTR [rbp-0x40]
  427eba:	mov    rax,QWORD PTR [rbp-0x38]
  427ebe:	mov    rdi,rax
  427ec1:	call   4222e4 <flatcc_verify_union_vector_field@@Base+0x6e9>
  427ec6:	mov    QWORD PTR [rbp-0x40],rax
  427eca:	add    QWORD PTR [rbp-0x20],0x1
  427ecf:	mov    eax,DWORD PTR [rbp-0x24]
  427ed2:	test   eax,eax
  427ed4:	jne    427e03 <flatcc_json_parser_union_type@@Base+0x2dc>
  427eda:	mov    eax,DWORD PTR [rbp-0x54]
  427edd:	cmp    rax,QWORD PTR [rbp-0x20]
  427ee1:	je     427f01 <flatcc_json_parser_union_type@@Base+0x3da>
  427ee3:	mov    rdx,QWORD PTR [rbp-0x48]
  427ee7:	mov    rsi,QWORD PTR [rbp-0x40]
  427eeb:	mov    rax,QWORD PTR [rbp-0x38]
  427eef:	mov    ecx,0x1e
  427ef4:	mov    rdi,rax
  427ef7:	call   425bce <flatcc_json_parser_set_error@@Base>
  427efc:	jmp    427f8d <flatcc_json_parser_union_type@@Base+0x466>
  427f01:	mov    rax,QWORD PTR [rbp-0x38]
  427f05:	mov    rax,QWORD PTR [rax]
  427f08:	mov    rdx,QWORD PTR [rbp-0x50]
  427f0c:	mov    rsi,rdx
  427f0f:	mov    rdi,rax
  427f12:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  427f17:	mov    QWORD PTR [rbp-0x18],rax
  427f1b:	mov    rax,QWORD PTR [rbp-0x38]
  427f1f:	mov    rax,QWORD PTR [rax]
  427f22:	mov    rdx,QWORD PTR [rbp-0x18]
  427f26:	mov    rsi,rdx
  427f29:	mov    rdi,rax
  427f2c:	call   41e1a1 <flatcc_builder_end_offset_vector_for_unions@@Base>
  427f31:	mov    DWORD PTR [rbp-0x28],eax
  427f34:	mov    eax,DWORD PTR [rbp-0x28]
  427f37:	test   eax,eax
  427f39:	je     427f70 <flatcc_json_parser_union_type@@Base+0x449>
  427f3b:	movzx  edx,WORD PTR [rbp-0x58]
  427f3f:	mov    rax,QWORD PTR [rbp-0x38]
  427f43:	mov    rax,QWORD PTR [rax]
  427f46:	mov    esi,edx
  427f48:	mov    rdi,rax
  427f4b:	call   41effb <flatcc_builder_table_add_offset@@Base>
  427f50:	mov    QWORD PTR [rbp-0x10],rax
  427f54:	cmp    QWORD PTR [rbp-0x10],0x0
  427f59:	je     427f73 <flatcc_json_parser_union_type@@Base+0x44c>
  427f5b:	mov    edx,DWORD PTR [rbp-0x28]
  427f5e:	mov    rax,QWORD PTR [rbp-0x10]
  427f62:	mov    DWORD PTR [rax],edx
  427f64:	mov    rax,QWORD PTR [rbp-0x40]
  427f68:	jmp    427f8d <flatcc_json_parser_union_type@@Base+0x466>
  427f6a:	nop
  427f6b:	jmp    427f74 <flatcc_json_parser_union_type@@Base+0x44d>
  427f6d:	nop
  427f6e:	jmp    427f74 <flatcc_json_parser_union_type@@Base+0x44d>
  427f70:	nop
  427f71:	jmp    427f74 <flatcc_json_parser_union_type@@Base+0x44d>
  427f73:	nop
  427f74:	mov    rdx,QWORD PTR [rbp-0x48]
  427f78:	mov    rsi,QWORD PTR [rbp-0x40]
  427f7c:	mov    rax,QWORD PTR [rbp-0x38]
  427f80:	mov    ecx,0x21
  427f85:	mov    rdi,rax
  427f88:	call   425bce <flatcc_json_parser_set_error@@Base>
  427f8d:	mov    rcx,QWORD PTR [rbp-0x8]
  427f91:	xor    rcx,QWORD PTR fs:0x28
  427f9a:	je     427fa1 <flatcc_json_parser_union_type@@Base+0x47a>
  427f9c:	call   405070 <__stack_chk_fail@plt>
  427fa1:	leave  
  427fa2:	ret    

0000000000427fa3 <flatcc_json_parser_union_vector@@Base>:
  427fa3:	push   rbp
  427fa4:	mov    rbp,rsp
  427fa7:	sub    rsp,0x40
  427fab:	mov    QWORD PTR [rbp-0x18],rdi
  427faf:	mov    QWORD PTR [rbp-0x20],rsi
  427fb3:	mov    QWORD PTR [rbp-0x28],rdx
  427fb7:	mov    QWORD PTR [rbp-0x30],rcx
  427fbb:	mov    eax,r8d
  427fbe:	mov    QWORD PTR [rbp-0x40],r9
  427fc2:	mov    WORD PTR [rbp-0x34],ax
  427fc6:	mov    rax,QWORD PTR [rbp-0x18]
  427fca:	mov    rax,QWORD PTR [rax]
  427fcd:	mov    rdx,QWORD PTR [rbp-0x40]
  427fd1:	mov    rsi,rdx
  427fd4:	mov    rdi,rax
  427fd7:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  427fdc:	mov    QWORD PTR [rbp-0x10],rax
  427fe0:	mov    rax,QWORD PTR [rbp-0x10]
  427fe4:	lea    rcx,[rax+0x10]
  427fe8:	mov    rdx,QWORD PTR [rbp-0x30]
  427fec:	mov    rax,rdx
  427fef:	shl    rax,0x2
  427ff3:	add    rax,rdx
  427ff6:	shl    rax,0x3
  427ffa:	add    rax,rcx
  427ffd:	mov    QWORD PTR [rbp-0x8],rax
  428001:	mov    rax,QWORD PTR [rbp-0x8]
  428005:	mov    rax,QWORD PTR [rax]
  428008:	test   rax,rax
  42800b:	je     42802b <flatcc_json_parser_union_vector@@Base+0x88>
  42800d:	mov    rdx,QWORD PTR [rbp-0x28]
  428011:	mov    rsi,QWORD PTR [rbp-0x20]
  428015:	mov    rax,QWORD PTR [rbp-0x18]
  428019:	mov    ecx,0x1c
  42801e:	mov    rdi,rax
  428021:	call   425bce <flatcc_json_parser_set_error@@Base>
  428026:	jmp    4280e9 <flatcc_json_parser_union_vector@@Base+0x146>
  42802b:	mov    rax,QWORD PTR [rbp-0x8]
  42802f:	movzx  eax,BYTE PTR [rax+0x14]
  428033:	test   al,al
  428035:	jne    428094 <flatcc_json_parser_union_vector@@Base+0xf1>
  428037:	mov    rax,QWORD PTR [rbp-0x10]
  42803b:	mov    rax,QWORD PTR [rax+0x8]
  42803f:	lea    rdx,[rax+0x1]
  428043:	mov    rax,QWORD PTR [rbp-0x10]
  428047:	mov    QWORD PTR [rax+0x8],rdx
  42804b:	mov    rax,QWORD PTR [rbp-0x18]
  42804f:	mov    edx,DWORD PTR [rax+0x14]
  428052:	mov    rax,QWORD PTR [rbp-0x8]
  428056:	mov    DWORD PTR [rax+0x10],edx
  428059:	mov    rax,QWORD PTR [rbp-0x18]
  42805d:	mov    rdx,QWORD PTR [rax+0x8]
  428061:	mov    rax,QWORD PTR [rbp-0x8]
  428065:	mov    QWORD PTR [rax+0x8],rdx
  428069:	mov    rax,QWORD PTR [rbp-0x8]
  42806d:	mov    rdx,QWORD PTR [rbp-0x20]
  428071:	mov    QWORD PTR [rax],rdx
  428074:	mov    rax,QWORD PTR [rbp-0x8]
  428078:	mov    rcx,QWORD PTR [rax]
  42807b:	mov    rdx,QWORD PTR [rbp-0x28]
  42807f:	mov    rax,QWORD PTR [rbp-0x18]
  428083:	mov    rsi,rcx
  428086:	mov    rdi,rax
  428089:	call   426bfb <flatcc_json_parser_generic_json@@Base>
  42808e:	mov    QWORD PTR [rbp-0x20],rax
  428092:	jmp    4280e5 <flatcc_json_parser_union_vector@@Base+0x142>
  428094:	mov    rax,QWORD PTR [rbp-0x10]
  428098:	mov    rax,QWORD PTR [rax+0x8]
  42809c:	lea    rdx,[rax-0x1]
  4280a0:	mov    rax,QWORD PTR [rbp-0x10]
  4280a4:	mov    QWORD PTR [rax+0x8],rdx
  4280a8:	movzx  r8d,WORD PTR [rbp-0x34]
  4280ad:	mov    rax,QWORD PTR [rbp-0x8]
  4280b1:	mov    edi,DWORD PTR [rax+0x18]
  4280b4:	mov    rax,QWORD PTR [rbp-0x8]
  4280b8:	mov    rcx,QWORD PTR [rax+0x20]
  4280bc:	mov    rdx,QWORD PTR [rbp-0x28]
  4280c0:	mov    rsi,QWORD PTR [rbp-0x20]
  4280c4:	mov    rax,QWORD PTR [rbp-0x18]
  4280c8:	sub    rsp,0x8
  4280cc:	push   QWORD PTR [rbp+0x10]
  4280cf:	mov    r9d,r8d
  4280d2:	mov    r8d,edi
  4280d5:	mov    rdi,rax
  4280d8:	call   427d82 <flatcc_json_parser_union_type@@Base+0x25b>
  4280dd:	add    rsp,0x10
  4280e1:	mov    QWORD PTR [rbp-0x20],rax
  4280e5:	mov    rax,QWORD PTR [rbp-0x20]
  4280e9:	leave  
  4280ea:	ret    

00000000004280eb <flatcc_json_parser_union_type_vector@@Base>:
  4280eb:	push   rbp
  4280ec:	mov    rbp,rsp
  4280ef:	sub    rsp,0xc0
  4280f6:	mov    QWORD PTR [rbp-0x78],rdi
  4280fa:	mov    QWORD PTR [rbp-0x80],rsi
  4280fe:	mov    QWORD PTR [rbp-0x88],rdx
  428105:	mov    QWORD PTR [rbp-0x90],rcx
  42810c:	mov    eax,r8d
  42810f:	mov    QWORD PTR [rbp-0xa0],r9
  428116:	mov    WORD PTR [rbp-0x94],ax
  42811d:	mov    rax,QWORD PTR [rbp+0x10]
  428121:	mov    QWORD PTR [rbp-0xa8],rax
  428128:	mov    rax,QWORD PTR [rbp+0x18]
  42812c:	mov    QWORD PTR [rbp-0xb0],rax
  428133:	mov    rax,QWORD PTR [rbp+0x20]
  428137:	mov    QWORD PTR [rbp-0xb8],rax
  42813e:	mov    rax,QWORD PTR fs:0x28
  428147:	mov    QWORD PTR [rbp-0x8],rax
  42814b:	xor    eax,eax
  42814d:	mov    rax,QWORD PTR [rbp-0x78]
  428151:	mov    rax,QWORD PTR [rax]
  428154:	mov    rdx,QWORD PTR [rbp-0xa0]
  42815b:	mov    rsi,rdx
  42815e:	mov    rdi,rax
  428161:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  428166:	mov    QWORD PTR [rbp-0x50],rax
  42816a:	mov    rax,QWORD PTR [rbp-0x50]
  42816e:	lea    rcx,[rax+0x10]
  428172:	mov    rdx,QWORD PTR [rbp-0x90]
  428179:	mov    rax,rdx
  42817c:	shl    rax,0x2
  428180:	add    rax,rdx
  428183:	shl    rax,0x3
  428187:	add    rax,rcx
  42818a:	mov    QWORD PTR [rbp-0x48],rax
  42818e:	mov    rax,QWORD PTR [rbp-0x48]
  428192:	movzx  eax,BYTE PTR [rax+0x14]
  428196:	test   al,al
  428198:	je     4281bb <flatcc_json_parser_union_type_vector@@Base+0xd0>
  42819a:	mov    rdx,QWORD PTR [rbp-0x88]
  4281a1:	mov    rsi,QWORD PTR [rbp-0x80]
  4281a5:	mov    rax,QWORD PTR [rbp-0x78]
  4281a9:	mov    ecx,0x1c
  4281ae:	mov    rdi,rax
  4281b1:	call   425bce <flatcc_json_parser_set_error@@Base>
  4281b6:	jmp    42857f <flatcc_json_parser_union_type_vector@@Base+0x494>
  4281bb:	mov    rax,QWORD PTR [rbp-0x48]
  4281bf:	mov    BYTE PTR [rax+0x14],0x1
  4281c3:	mov    rax,QWORD PTR [rbp-0x78]
  4281c7:	mov    rax,QWORD PTR [rax]
  4281ca:	mov    ecx,0xffffffff
  4281cf:	mov    edx,0x1
  4281d4:	mov    esi,0x1
  4281d9:	mov    rdi,rax
  4281dc:	call   41ca8f <flatcc_builder_start_vector@@Base>
  4281e1:	test   eax,eax
  4281e3:	jne    428559 <flatcc_json_parser_union_type_vector@@Base+0x46e>
  4281e9:	lea    rcx,[rbp-0x60]
  4281ed:	mov    rdx,QWORD PTR [rbp-0x88]
  4281f4:	mov    rsi,QWORD PTR [rbp-0x80]
  4281f8:	mov    rax,QWORD PTR [rbp-0x78]
  4281fc:	mov    rdi,rax
  4281ff:	call   422227 <flatcc_verify_union_vector_field@@Base+0x62c>
  428204:	mov    QWORD PTR [rbp-0x80],rax
  428208:	jmp    42832e <flatcc_json_parser_union_type_vector@@Base+0x243>
  42820d:	mov    rax,QWORD PTR [rbp-0x78]
  428211:	mov    rax,QWORD PTR [rax]
  428214:	mov    esi,0x1
  428219:	mov    rdi,rax
  42821c:	call   41c377 <flatcc_builder_extend_vector@@Base>
  428221:	mov    QWORD PTR [rbp-0x40],rax
  428225:	cmp    QWORD PTR [rbp-0x40],0x0
  42822a:	je     42855c <flatcc_json_parser_union_type_vector@@Base+0x471>
  428230:	mov    rax,QWORD PTR [rbp-0x80]
  428234:	mov    QWORD PTR [rbp-0x38],rax
  428238:	lea    rcx,[rbp-0x61]
  42823c:	mov    rdx,QWORD PTR [rbp-0x88]
  428243:	mov    rsi,QWORD PTR [rbp-0x38]
  428247:	mov    rax,QWORD PTR [rbp-0x78]
  42824b:	mov    rdi,rax
  42824e:	call   4229f9 <flatcc_verify_union_vector_field@@Base+0xdfe>
  428253:	mov    QWORD PTR [rbp-0x80],rax
  428257:	mov    rax,QWORD PTR [rbp-0x38]
  42825b:	cmp    rax,QWORD PTR [rbp-0x80]
  42825f:	jne    4282b1 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  428261:	mov    rax,QWORD PTR [rbp-0x80]
  428265:	mov    QWORD PTR [rbp-0x38],rax
  428269:	lea    rdi,[rbp-0x61]
  42826d:	mov    rcx,QWORD PTR [rbp-0xa8]
  428274:	mov    rdx,QWORD PTR [rbp-0x88]
  42827b:	mov    rsi,QWORD PTR [rbp-0x38]
  42827f:	mov    rax,QWORD PTR [rbp-0x78]
  428283:	mov    r8,rdi
  428286:	mov    rdi,rax
  428289:	call   422fc6 <flatcc_verify_union_vector_field@@Base+0x13cb>
  42828e:	mov    QWORD PTR [rbp-0x80],rax
  428292:	mov    rax,QWORD PTR [rbp-0x80]
  428296:	cmp    rax,QWORD PTR [rbp-0x38]
  42829a:	je     428563 <flatcc_json_parser_union_type_vector@@Base+0x478>
  4282a0:	mov    rax,QWORD PTR [rbp-0x80]
  4282a4:	cmp    rax,QWORD PTR [rbp-0x88]
  4282ab:	je     428563 <flatcc_json_parser_union_type_vector@@Base+0x478>
  4282b1:	movzx  eax,BYTE PTR [rbp-0x61]
  4282b5:	movzx  edx,al
  4282b8:	mov    rax,QWORD PTR [rbp-0xb8]
  4282bf:	mov    edi,edx
  4282c1:	call   rax
  4282c3:	test   eax,eax
  4282c5:	jne    4282fa <flatcc_json_parser_union_type_vector@@Base+0x20f>
  4282c7:	mov    rax,QWORD PTR [rbp-0x78]
  4282cb:	mov    eax,DWORD PTR [rax+0x10]
  4282ce:	and    eax,0x1
  4282d1:	test   eax,eax
  4282d3:	jne    4282f6 <flatcc_json_parser_union_type_vector@@Base+0x20b>
  4282d5:	mov    rdx,QWORD PTR [rbp-0x88]
  4282dc:	mov    rsi,QWORD PTR [rbp-0x80]
  4282e0:	mov    rax,QWORD PTR [rbp-0x78]
  4282e4:	mov    ecx,0xf
  4282e9:	mov    rdi,rax
  4282ec:	call   425bce <flatcc_json_parser_set_error@@Base>
  4282f1:	jmp    42857f <flatcc_json_parser_union_type_vector@@Base+0x494>
  4282f6:	mov    BYTE PTR [rbp-0x61],0x0
  4282fa:	movzx  eax,BYTE PTR [rbp-0x61]
  4282fe:	movzx  edx,al
  428301:	mov    rax,QWORD PTR [rbp-0x40]
  428305:	mov    esi,edx
  428307:	mov    rdi,rax
  42830a:	call   421dee <flatcc_verify_union_vector_field@@Base+0x1f3>
  42830f:	lea    rcx,[rbp-0x60]
  428313:	mov    rdx,QWORD PTR [rbp-0x88]
  42831a:	mov    rsi,QWORD PTR [rbp-0x80]
  42831e:	mov    rax,QWORD PTR [rbp-0x78]
  428322:	mov    rdi,rax
  428325:	call   4222e4 <flatcc_verify_union_vector_field@@Base+0x6e9>
  42832a:	mov    QWORD PTR [rbp-0x80],rax
  42832e:	mov    eax,DWORD PTR [rbp-0x60]
  428331:	test   eax,eax
  428333:	jne    42820d <flatcc_json_parser_union_type_vector@@Base+0x122>
  428339:	mov    rax,QWORD PTR [rbp-0x78]
  42833d:	mov    rax,QWORD PTR [rax]
  428340:	mov    rdi,rax
  428343:	call   41dd16 <flatcc_builder_vector_count@@Base>
  428348:	mov    DWORD PTR [rbp-0x5c],eax
  42834b:	mov    rax,QWORD PTR [rbp-0x48]
  42834f:	mov    edx,DWORD PTR [rbp-0x5c]
  428352:	mov    DWORD PTR [rax+0x18],edx
  428355:	mov    eax,DWORD PTR [rbp-0x5c]
  428358:	mov    QWORD PTR [rbp-0x30],rax
  42835c:	mov    rax,QWORD PTR [rbp-0x78]
  428360:	mov    rax,QWORD PTR [rax]
  428363:	mov    rdx,QWORD PTR [rbp-0x30]
  428367:	mov    rsi,rdx
  42836a:	mov    rdi,rax
  42836d:	call   41aea6 <flatcc_builder_enter_user_frame@@Base>
  428372:	mov    QWORD PTR [rbp-0x28],rax
  428376:	mov    rax,QWORD PTR [rbp-0x78]
  42837a:	mov    rax,QWORD PTR [rax]
  42837d:	mov    rdx,QWORD PTR [rbp-0x28]
  428381:	mov    rsi,rdx
  428384:	mov    rdi,rax
  428387:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  42838c:	mov    QWORD PTR [rbp-0x20],rax
  428390:	mov    rax,QWORD PTR [rbp-0x78]
  428394:	mov    rax,QWORD PTR [rax]
  428397:	mov    rdi,rax
  42839a:	call   41dd2d <flatcc_builder_vector_edit@@Base>
  42839f:	mov    rcx,rax
  4283a2:	mov    rdx,QWORD PTR [rbp-0x30]
  4283a6:	mov    rax,QWORD PTR [rbp-0x20]
  4283aa:	mov    rsi,rcx
  4283ad:	mov    rdi,rax
  4283b0:	call   4050f0 <memcpy@plt>
  4283b5:	mov    rax,QWORD PTR [rbp-0x78]
  4283b9:	mov    rax,QWORD PTR [rax]
  4283bc:	mov    rdi,rax
  4283bf:	call   41dc65 <flatcc_builder_end_vector@@Base>
  4283c4:	mov    DWORD PTR [rbp-0x58],eax
  4283c7:	cmp    DWORD PTR [rbp-0x58],0x0
  4283cb:	je     42855f <flatcc_json_parser_union_type_vector@@Base+0x474>
  4283d1:	movzx  eax,WORD PTR [rbp-0x94]
  4283d8:	lea    edx,[rax-0x1]
  4283db:	mov    rax,QWORD PTR [rbp-0x78]
  4283df:	mov    rax,QWORD PTR [rax]
  4283e2:	mov    esi,edx
  4283e4:	mov    rdi,rax
  4283e7:	call   41effb <flatcc_builder_table_add_offset@@Base>
  4283ec:	mov    QWORD PTR [rbp-0x18],rax
  4283f0:	cmp    QWORD PTR [rbp-0x18],0x0
  4283f5:	je     428562 <flatcc_json_parser_union_type_vector@@Base+0x477>
  4283fb:	mov    rax,QWORD PTR [rbp-0x18]
  4283ff:	mov    edx,DWORD PTR [rbp-0x58]
  428402:	mov    DWORD PTR [rax],edx
  428404:	mov    rax,QWORD PTR [rbp-0x78]
  428408:	mov    rax,QWORD PTR [rax]
  42840b:	mov    rdx,QWORD PTR [rbp-0xa0]
  428412:	mov    rsi,rdx
  428415:	mov    rdi,rax
  428418:	call   41b07b <flatcc_builder_get_user_frame_ptr@@Base>
  42841d:	mov    QWORD PTR [rbp-0x50],rax
  428421:	mov    rax,QWORD PTR [rbp-0x50]
  428425:	lea    rcx,[rax+0x10]
  428429:	mov    rdx,QWORD PTR [rbp-0x90]
  428430:	mov    rax,rdx
  428433:	shl    rax,0x2
  428437:	add    rax,rdx
  42843a:	shl    rax,0x3
  42843e:	add    rax,rcx
  428441:	mov    QWORD PTR [rbp-0x48],rax
  428445:	mov    rax,QWORD PTR [rbp-0x48]
  428449:	mov    rdx,QWORD PTR [rbp-0x28]
  42844d:	mov    QWORD PTR [rax+0x20],rdx
  428451:	mov    rax,QWORD PTR [rbp-0x48]
  428455:	mov    rax,QWORD PTR [rax]
  428458:	test   rax,rax
  42845b:	jne    42847a <flatcc_json_parser_union_type_vector@@Base+0x38f>
  42845d:	mov    rax,QWORD PTR [rbp-0x50]
  428461:	mov    rax,QWORD PTR [rax+0x8]
  428465:	lea    rdx,[rax+0x1]
  428469:	mov    rax,QWORD PTR [rbp-0x50]
  42846d:	mov    QWORD PTR [rax+0x8],rdx
  428471:	mov    rax,QWORD PTR [rbp-0x80]
  428475:	jmp    42857f <flatcc_json_parser_union_type_vector@@Base+0x494>
  42847a:	mov    rax,QWORD PTR [rbp-0x50]
  42847e:	mov    rax,QWORD PTR [rax+0x8]
  428482:	test   rax,rax
  428485:	jne    4284a6 <flatcc_json_parser_union_type_vector@@Base+0x3bb>
  428487:	lea    rcx,[rip+0x124b2]        # 43a940 <flatcc_builder_padding_base@@Base+0x26e0>
  42848e:	mov    edx,0x462
  428493:	lea    rsi,[rip+0x11f66]        # 43a400 <flatcc_builder_padding_base@@Base+0x21a0>
  42849a:	lea    rdi,[rip+0x11fc3]        # 43a464 <flatcc_builder_padding_base@@Base+0x2204>
  4284a1:	call   405080 <__assert_fail@plt>
  4284a6:	mov    rax,QWORD PTR [rbp-0x50]
  4284aa:	mov    rax,QWORD PTR [rax+0x8]
  4284ae:	lea    rdx,[rax-0x1]
  4284b2:	mov    rax,QWORD PTR [rbp-0x50]
  4284b6:	mov    QWORD PTR [rax+0x8],rdx
  4284ba:	mov    rax,QWORD PTR [rbp-0x78]
  4284be:	mov    eax,DWORD PTR [rax+0x14]
  4284c1:	mov    DWORD PTR [rbp-0x54],eax
  4284c4:	mov    rax,QWORD PTR [rbp-0x78]
  4284c8:	mov    rax,QWORD PTR [rax+0x8]
  4284cc:	mov    QWORD PTR [rbp-0x10],rax
  4284d0:	mov    rax,QWORD PTR [rbp-0x48]
  4284d4:	mov    edx,DWORD PTR [rax+0x10]
  4284d7:	mov    rax,QWORD PTR [rbp-0x78]
  4284db:	mov    DWORD PTR [rax+0x14],edx
  4284de:	mov    rax,QWORD PTR [rbp-0x48]
  4284e2:	mov    rdx,QWORD PTR [rax+0x8]
  4284e6:	mov    rax,QWORD PTR [rbp-0x78]
  4284ea:	mov    QWORD PTR [rax+0x8],rdx
  4284ee:	movzx  r8d,WORD PTR [rbp-0x94]
  4284f6:	mov    rax,QWORD PTR [rbp-0x48]
  4284fa:	mov    rsi,QWORD PTR [rax]
  4284fd:	mov    edi,DWORD PTR [rbp-0x5c]
  428500:	mov    rcx,QWORD PTR [rbp-0x28]
  428504:	mov    rdx,QWORD PTR [rbp-0x88]
  42850b:	mov    rax,QWORD PTR [rbp-0x78]
  42850f:	sub    rsp,0x8
  428513:	push   QWORD PTR [rbp-0xb0]
  428519:	mov    r9d,r8d
  42851c:	mov    r8d,edi
  42851f:	mov    rdi,rax
  428522:	call   427d82 <flatcc_json_parser_union_type@@Base+0x25b>
  428527:	add    rsp,0x10
  42852b:	cmp    rax,QWORD PTR [rbp-0x88]
  428532:	jne    42853d <flatcc_json_parser_union_type_vector@@Base+0x452>
  428534:	mov    rax,QWORD PTR [rbp-0x88]
  42853b:	jmp    42857f <flatcc_json_parser_union_type_vector@@Base+0x494>
  42853d:	mov    rax,QWORD PTR [rbp-0x78]
  428541:	mov    edx,DWORD PTR [rbp-0x54]
  428544:	mov    DWORD PTR [rax+0x14],edx
  428547:	mov    rax,QWORD PTR [rbp-0x78]
  42854b:	mov    rdx,QWORD PTR [rbp-0x10]
  42854f:	mov    QWORD PTR [rax+0x8],rdx
  428553:	mov    rax,QWORD PTR [rbp-0x80]
  428557:	jmp    42857f <flatcc_json_parser_union_type_vector@@Base+0x494>
  428559:	nop
  42855a:	jmp    428563 <flatcc_json_parser_union_type_vector@@Base+0x478>
  42855c:	nop
  42855d:	jmp    428563 <flatcc_json_parser_union_type_vector@@Base+0x478>
  42855f:	nop
  428560:	jmp    428563 <flatcc_json_parser_union_type_vector@@Base+0x478>
  428562:	nop
  428563:	mov    rdx,QWORD PTR [rbp-0x88]
  42856a:	mov    rsi,QWORD PTR [rbp-0x80]
  42856e:	mov    rax,QWORD PTR [rbp-0x78]
  428572:	mov    ecx,0x21
  428577:	mov    rdi,rax
  42857a:	call   425bce <flatcc_json_parser_set_error@@Base>
  42857f:	mov    rcx,QWORD PTR [rbp-0x8]
  428583:	xor    rcx,QWORD PTR fs:0x28
  42858c:	je     428593 <flatcc_json_parser_union_type_vector@@Base+0x4a8>
  42858e:	call   405070 <__stack_chk_fail@plt>
  428593:	leave  
  428594:	ret    

0000000000428595 <flatcc_json_parser_table_as_root@@Base>:
  428595:	push   rbp
  428596:	mov    rbp,rsp
  428599:	sub    rsp,0xa0
  4285a0:	mov    QWORD PTR [rbp-0x68],rdi
  4285a4:	mov    QWORD PTR [rbp-0x70],rsi
  4285a8:	mov    QWORD PTR [rbp-0x78],rdx
  4285ac:	mov    QWORD PTR [rbp-0x80],rcx
  4285b0:	mov    DWORD PTR [rbp-0x84],r8d
  4285b7:	mov    QWORD PTR [rbp-0x90],r9
  4285be:	mov    rax,QWORD PTR [rbp+0x10]
  4285c2:	mov    QWORD PTR [rbp-0x98],rax
  4285c9:	mov    rax,QWORD PTR fs:0x28
  4285d2:	mov    QWORD PTR [rbp-0x8],rax
  4285d6:	xor    eax,eax
  4285d8:	mov    eax,DWORD PTR [rbp-0x84]
  4285de:	and    eax,0x4
  4285e1:	test   eax,eax
  4285e3:	je     4285ec <flatcc_json_parser_table_as_root@@Base+0x57>
  4285e5:	mov    eax,0x2
  4285ea:	jmp    4285f1 <flatcc_json_parser_table_as_root@@Base+0x5c>
  4285ec:	mov    eax,0x0
  4285f1:	mov    DWORD PTR [rbp-0x54],eax
  4285f4:	cmp    QWORD PTR [rbp-0x70],0x0
  4285f9:	jne    428601 <flatcc_json_parser_table_as_root@@Base+0x6c>
  4285fb:	lea    rax,[rbp-0x50]
  4285ff:	jmp    428605 <flatcc_json_parser_table_as_root@@Base+0x70>
  428601:	mov    rax,QWORD PTR [rbp-0x70]
  428605:	mov    QWORD PTR [rbp-0x70],rax
  428609:	mov    rdx,QWORD PTR [rbp-0x78]
  42860d:	mov    rax,QWORD PTR [rbp-0x80]
  428611:	lea    rcx,[rdx+rax*1]
  428615:	mov    edi,DWORD PTR [rbp-0x84]
  42861b:	mov    rdx,QWORD PTR [rbp-0x78]
  42861f:	mov    rsi,QWORD PTR [rbp-0x68]
  428623:	mov    rax,QWORD PTR [rbp-0x70]
  428627:	mov    r8d,edi
  42862a:	mov    rdi,rax
  42862d:	call   421e15 <flatcc_verify_union_vector_field@@Base+0x21a>
  428632:	mov    edx,DWORD PTR [rbp-0x54]
  428635:	mov    rsi,QWORD PTR [rbp-0x90]
  42863c:	mov    rax,QWORD PTR [rbp-0x68]
  428640:	mov    ecx,edx
  428642:	mov    edx,0x0
  428647:	mov    rdi,rax
  42864a:	call   41bf64 <flatcc_builder_start_buffer@@Base>
  42864f:	test   eax,eax
  428651:	je     42865a <flatcc_json_parser_table_as_root@@Base+0xc5>
  428653:	mov    eax,0xffffffff
  428658:	jmp    4286c2 <flatcc_json_parser_table_as_root@@Base+0x12d>
  42865a:	mov    rdx,QWORD PTR [rbp-0x78]
  42865e:	mov    rax,QWORD PTR [rbp-0x80]
  428662:	lea    r8,[rdx+rax*1]
  428666:	lea    rdx,[rbp-0x58]
  42866a:	mov    rsi,QWORD PTR [rbp-0x78]
  42866e:	mov    rdi,QWORD PTR [rbp-0x70]
  428672:	mov    rax,QWORD PTR [rbp-0x98]
  428679:	mov    rcx,rdx
  42867c:	mov    rdx,r8
  42867f:	call   rax
  428681:	mov    rax,QWORD PTR [rbp-0x70]
  428685:	mov    eax,DWORD PTR [rax+0x1c]
  428688:	test   eax,eax
  42868a:	je     428695 <flatcc_json_parser_table_as_root@@Base+0x100>
  42868c:	mov    rax,QWORD PTR [rbp-0x70]
  428690:	mov    eax,DWORD PTR [rax+0x1c]
  428693:	jmp    4286c2 <flatcc_json_parser_table_as_root@@Base+0x12d>
  428695:	mov    edx,DWORD PTR [rbp-0x58]
  428698:	mov    rax,QWORD PTR [rbp-0x68]
  42869c:	mov    esi,edx
  42869e:	mov    rdi,rax
  4286a1:	call   41c0ad <flatcc_builder_end_buffer@@Base>
  4286a6:	test   eax,eax
  4286a8:	jne    4286b1 <flatcc_json_parser_table_as_root@@Base+0x11c>
  4286aa:	mov    eax,0xffffffff
  4286af:	jmp    4286c2 <flatcc_json_parser_table_as_root@@Base+0x12d>
  4286b1:	mov    rax,QWORD PTR [rbp-0x70]
  4286b5:	mov    rdx,QWORD PTR [rbp-0x78]
  4286b9:	mov    QWORD PTR [rax+0x38],rdx
  4286bd:	mov    eax,0x0
  4286c2:	mov    rcx,QWORD PTR [rbp-0x8]
  4286c6:	xor    rcx,QWORD PTR fs:0x28
  4286cf:	je     4286d6 <flatcc_json_parser_table_as_root@@Base+0x141>
  4286d1:	call   405070 <__stack_chk_fail@plt>
  4286d6:	leave  
  4286d7:	ret    

00000000004286d8 <flatcc_json_parser_struct_as_root@@Base>:
  4286d8:	push   rbp
  4286d9:	mov    rbp,rsp
  4286dc:	sub    rsp,0xa0
  4286e3:	mov    QWORD PTR [rbp-0x68],rdi
  4286e7:	mov    QWORD PTR [rbp-0x70],rsi
  4286eb:	mov    QWORD PTR [rbp-0x78],rdx
  4286ef:	mov    QWORD PTR [rbp-0x80],rcx
  4286f3:	mov    DWORD PTR [rbp-0x84],r8d
  4286fa:	mov    QWORD PTR [rbp-0x90],r9
  428701:	mov    rax,QWORD PTR [rbp+0x10]
  428705:	mov    QWORD PTR [rbp-0x98],rax
  42870c:	mov    rax,QWORD PTR fs:0x28
  428715:	mov    QWORD PTR [rbp-0x8],rax
  428719:	xor    eax,eax
  42871b:	mov    eax,DWORD PTR [rbp-0x84]
  428721:	and    eax,0x4
  428724:	test   eax,eax
  428726:	je     42872f <flatcc_json_parser_struct_as_root@@Base+0x57>
  428728:	mov    eax,0x2
  42872d:	jmp    428734 <flatcc_json_parser_struct_as_root@@Base+0x5c>
  42872f:	mov    eax,0x0
  428734:	mov    DWORD PTR [rbp-0x54],eax
  428737:	cmp    QWORD PTR [rbp-0x70],0x0
  42873c:	jne    428744 <flatcc_json_parser_struct_as_root@@Base+0x6c>
  42873e:	lea    rax,[rbp-0x50]
  428742:	jmp    428748 <flatcc_json_parser_struct_as_root@@Base+0x70>
  428744:	mov    rax,QWORD PTR [rbp-0x70]
  428748:	mov    QWORD PTR [rbp-0x70],rax
  42874c:	mov    rdx,QWORD PTR [rbp-0x78]
  428750:	mov    rax,QWORD PTR [rbp-0x80]
  428754:	lea    rcx,[rdx+rax*1]
  428758:	mov    edi,DWORD PTR [rbp-0x84]
  42875e:	mov    rdx,QWORD PTR [rbp-0x78]
  428762:	mov    rsi,QWORD PTR [rbp-0x68]
  428766:	mov    rax,QWORD PTR [rbp-0x70]
  42876a:	mov    r8d,edi
  42876d:	mov    rdi,rax
  428770:	call   421e15 <flatcc_verify_union_vector_field@@Base+0x21a>
  428775:	mov    edx,DWORD PTR [rbp-0x54]
  428778:	mov    rsi,QWORD PTR [rbp-0x90]
  42877f:	mov    rax,QWORD PTR [rbp-0x68]
  428783:	mov    ecx,edx
  428785:	mov    edx,0x0
  42878a:	mov    rdi,rax
  42878d:	call   41bf64 <flatcc_builder_start_buffer@@Base>
  428792:	test   eax,eax
  428794:	je     42879d <flatcc_json_parser_struct_as_root@@Base+0xc5>
  428796:	mov    eax,0xffffffff
  42879b:	jmp    428805 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  42879d:	mov    rdx,QWORD PTR [rbp-0x78]
  4287a1:	mov    rax,QWORD PTR [rbp-0x80]
  4287a5:	lea    r8,[rdx+rax*1]
  4287a9:	lea    rdx,[rbp-0x58]
  4287ad:	mov    rsi,QWORD PTR [rbp-0x78]
  4287b1:	mov    rdi,QWORD PTR [rbp-0x70]
  4287b5:	mov    rax,QWORD PTR [rbp-0x98]
  4287bc:	mov    rcx,rdx
  4287bf:	mov    rdx,r8
  4287c2:	call   rax
  4287c4:	mov    rax,QWORD PTR [rbp-0x70]
  4287c8:	mov    eax,DWORD PTR [rax+0x1c]
  4287cb:	test   eax,eax
  4287cd:	je     4287d8 <flatcc_json_parser_struct_as_root@@Base+0x100>
  4287cf:	mov    rax,QWORD PTR [rbp-0x70]
  4287d3:	mov    eax,DWORD PTR [rax+0x1c]
  4287d6:	jmp    428805 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  4287d8:	mov    edx,DWORD PTR [rbp-0x58]
  4287db:	mov    rax,QWORD PTR [rbp-0x68]
  4287df:	mov    esi,edx
  4287e1:	mov    rdi,rax
  4287e4:	call   41c0ad <flatcc_builder_end_buffer@@Base>
  4287e9:	test   eax,eax
  4287eb:	jne    4287f4 <flatcc_json_parser_struct_as_root@@Base+0x11c>
  4287ed:	mov    eax,0xffffffff
  4287f2:	jmp    428805 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  4287f4:	mov    rax,QWORD PTR [rbp-0x70]
  4287f8:	mov    rdx,QWORD PTR [rbp-0x78]
  4287fc:	mov    QWORD PTR [rax+0x38],rdx
  428800:	mov    eax,0x0
  428805:	mov    rcx,QWORD PTR [rbp-0x8]
  428809:	xor    rcx,QWORD PTR fs:0x28
  428812:	je     428819 <flatcc_json_parser_struct_as_root@@Base+0x141>
  428814:	call   405070 <__stack_chk_fail@plt>
  428819:	leave  
  42881a:	ret    
  42881b:	push   rbp
  42881c:	mov    rbp,rsp
  42881f:	mov    eax,edi
  428821:	mov    BYTE PTR [rbp-0x4],al
  428824:	movzx  eax,BYTE PTR [rbp-0x4]
  428828:	pop    rbp
  428829:	ret    
  42882a:	push   rbp
  42882b:	mov    rbp,rsp
  42882e:	sub    rsp,0x8
  428832:	mov    QWORD PTR [rbp-0x8],rdi
  428836:	mov    rax,QWORD PTR [rbp-0x8]
  42883a:	movzx  eax,BYTE PTR [rax]
  42883d:	movzx  eax,al
  428840:	mov    edi,eax
  428842:	call   42881b <flatcc_json_parser_struct_as_root@@Base+0x143>
  428847:	leave  
  428848:	ret    
  428849:	push   rbp
  42884a:	mov    rbp,rsp
  42884d:	mov    eax,edi
  42884f:	mov    WORD PTR [rbp-0x4],ax
  428853:	movzx  eax,WORD PTR [rbp-0x4]
  428857:	pop    rbp
  428858:	ret    
  428859:	push   rbp
  42885a:	mov    rbp,rsp
  42885d:	sub    rsp,0x8
  428861:	mov    QWORD PTR [rbp-0x8],rdi
  428865:	mov    rax,QWORD PTR [rbp-0x8]
  428869:	movzx  eax,WORD PTR [rax]
  42886c:	movzx  eax,ax
  42886f:	mov    edi,eax
  428871:	call   428849 <flatcc_json_parser_struct_as_root@@Base+0x171>
  428876:	leave  
  428877:	ret    
  428878:	push   rbp
  428879:	mov    rbp,rsp
  42887c:	mov    DWORD PTR [rbp-0x4],edi
  42887f:	mov    eax,DWORD PTR [rbp-0x4]
  428882:	pop    rbp
  428883:	ret    
  428884:	push   rbp
  428885:	mov    rbp,rsp
  428888:	sub    rsp,0x8
  42888c:	mov    QWORD PTR [rbp-0x8],rdi
  428890:	mov    rax,QWORD PTR [rbp-0x8]
  428894:	mov    eax,DWORD PTR [rax]
  428896:	mov    edi,eax
  428898:	call   428878 <flatcc_json_parser_struct_as_root@@Base+0x1a0>
  42889d:	leave  
  42889e:	ret    
  42889f:	push   rbp
  4288a0:	mov    rbp,rsp
  4288a3:	mov    QWORD PTR [rbp-0x8],rdi
  4288a7:	mov    rax,QWORD PTR [rbp-0x8]
  4288ab:	pop    rbp
  4288ac:	ret    
  4288ad:	push   rbp
  4288ae:	mov    rbp,rsp
  4288b1:	sub    rsp,0x8
  4288b5:	mov    QWORD PTR [rbp-0x8],rdi
  4288b9:	mov    rax,QWORD PTR [rbp-0x8]
  4288bd:	mov    rax,QWORD PTR [rax]
  4288c0:	mov    rdi,rax
  4288c3:	call   42889f <flatcc_json_parser_struct_as_root@@Base+0x1c7>
  4288c8:	leave  
  4288c9:	ret    
  4288ca:	push   rbp
  4288cb:	mov    rbp,rsp
  4288ce:	mov    eax,edi
  4288d0:	mov    BYTE PTR [rbp-0x4],al
  4288d3:	movzx  eax,BYTE PTR [rbp-0x4]
  4288d7:	pop    rbp
  4288d8:	ret    
  4288d9:	push   rbp
  4288da:	mov    rbp,rsp
  4288dd:	sub    rsp,0x8
  4288e1:	mov    QWORD PTR [rbp-0x8],rdi
  4288e5:	mov    rax,QWORD PTR [rbp-0x8]
  4288e9:	movzx  eax,BYTE PTR [rax]
  4288ec:	movsx  eax,al
  4288ef:	mov    edi,eax
  4288f1:	call   4288ca <flatcc_json_parser_struct_as_root@@Base+0x1f2>
  4288f6:	leave  
  4288f7:	ret    
  4288f8:	push   rbp
  4288f9:	mov    rbp,rsp
  4288fc:	mov    eax,edi
  4288fe:	mov    WORD PTR [rbp-0x4],ax
  428902:	movzx  eax,WORD PTR [rbp-0x4]
  428906:	pop    rbp
  428907:	ret    
  428908:	push   rbp
  428909:	mov    rbp,rsp
  42890c:	sub    rsp,0x8
  428910:	mov    QWORD PTR [rbp-0x8],rdi
  428914:	mov    rax,QWORD PTR [rbp-0x8]
  428918:	movzx  eax,WORD PTR [rax]
  42891b:	cwde   
  42891c:	mov    edi,eax
  42891e:	call   4288f8 <flatcc_json_parser_struct_as_root@@Base+0x220>
  428923:	leave  
  428924:	ret    
  428925:	push   rbp
  428926:	mov    rbp,rsp
  428929:	mov    DWORD PTR [rbp-0x4],edi
  42892c:	mov    eax,DWORD PTR [rbp-0x4]
  42892f:	pop    rbp
  428930:	ret    
  428931:	push   rbp
  428932:	mov    rbp,rsp
  428935:	sub    rsp,0x8
  428939:	mov    QWORD PTR [rbp-0x8],rdi
  42893d:	mov    rax,QWORD PTR [rbp-0x8]
  428941:	mov    eax,DWORD PTR [rax]
  428943:	mov    edi,eax
  428945:	call   428925 <flatcc_json_parser_struct_as_root@@Base+0x24d>
  42894a:	leave  
  42894b:	ret    
  42894c:	push   rbp
  42894d:	mov    rbp,rsp
  428950:	mov    QWORD PTR [rbp-0x8],rdi
  428954:	mov    rax,QWORD PTR [rbp-0x8]
  428958:	pop    rbp
  428959:	ret    
  42895a:	push   rbp
  42895b:	mov    rbp,rsp
  42895e:	sub    rsp,0x8
  428962:	mov    QWORD PTR [rbp-0x8],rdi
  428966:	mov    rax,QWORD PTR [rbp-0x8]
  42896a:	mov    rax,QWORD PTR [rax]
  42896d:	mov    rdi,rax
  428970:	call   42894c <flatcc_json_parser_struct_as_root@@Base+0x274>
  428975:	leave  
  428976:	ret    
  428977:	push   rbp
  428978:	mov    rbp,rsp
  42897b:	vmovss DWORD PTR [rbp-0x14],xmm0
  428980:	vmovss xmm0,DWORD PTR [rbp-0x14]
  428985:	vmovss DWORD PTR [rbp-0x4],xmm0
  42898a:	mov    eax,DWORD PTR [rbp-0x4]
  42898d:	mov    DWORD PTR [rbp-0x4],eax
  428990:	vmovss xmm0,DWORD PTR [rbp-0x4]
  428995:	pop    rbp
  428996:	ret    
  428997:	push   rbp
  428998:	mov    rbp,rsp
  42899b:	sub    rsp,0x10
  42899f:	mov    QWORD PTR [rbp-0x8],rdi
  4289a3:	mov    rax,QWORD PTR [rbp-0x8]
  4289a7:	mov    eax,DWORD PTR [rax]
  4289a9:	mov    DWORD PTR [rbp-0xc],eax
  4289ac:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4289b1:	call   428977 <flatcc_json_parser_struct_as_root@@Base+0x29f>
  4289b6:	leave  
  4289b7:	ret    
  4289b8:	push   rbp
  4289b9:	mov    rbp,rsp
  4289bc:	vmovsd QWORD PTR [rbp-0x18],xmm0
  4289c1:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4289c6:	vmovsd QWORD PTR [rbp-0x8],xmm0
  4289cb:	mov    rax,QWORD PTR [rbp-0x8]
  4289cf:	mov    QWORD PTR [rbp-0x8],rax
  4289d3:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4289d8:	pop    rbp
  4289d9:	ret    
  4289da:	push   rbp
  4289db:	mov    rbp,rsp
  4289de:	sub    rsp,0x10
  4289e2:	mov    QWORD PTR [rbp-0x8],rdi
  4289e6:	mov    rax,QWORD PTR [rbp-0x8]
  4289ea:	mov    rax,QWORD PTR [rax]
  4289ed:	mov    QWORD PTR [rbp-0x10],rax
  4289f1:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4289f6:	call   4289b8 <flatcc_json_parser_struct_as_root@@Base+0x2e0>
  4289fb:	vmovq  rax,xmm0
  428a00:	mov    QWORD PTR [rbp-0x10],rax
  428a04:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  428a09:	leave  
  428a0a:	ret    
  428a0b:	push   rbp
  428a0c:	mov    rbp,rsp
  428a0f:	mov    eax,edi
  428a11:	mov    BYTE PTR [rbp-0x4],al
  428a14:	movzx  eax,BYTE PTR [rbp-0x4]
  428a18:	pop    rbp
  428a19:	ret    
  428a1a:	push   rbp
  428a1b:	mov    rbp,rsp
  428a1e:	sub    rsp,0x8
  428a22:	mov    QWORD PTR [rbp-0x8],rdi
  428a26:	mov    rax,QWORD PTR [rbp-0x8]
  428a2a:	movzx  eax,BYTE PTR [rax]
  428a2d:	movzx  eax,al
  428a30:	mov    edi,eax
  428a32:	call   428a0b <flatcc_json_parser_struct_as_root@@Base+0x333>
  428a37:	leave  
  428a38:	ret    
  428a39:	push   rbp
  428a3a:	mov    rbp,rsp
  428a3d:	mov    DWORD PTR [rbp-0x4],edi
  428a40:	mov    eax,DWORD PTR [rbp-0x4]
  428a43:	pop    rbp
  428a44:	ret    
  428a45:	push   rbp
  428a46:	mov    rbp,rsp
  428a49:	sub    rsp,0x8
  428a4d:	mov    QWORD PTR [rbp-0x8],rdi
  428a51:	mov    rax,QWORD PTR [rbp-0x8]
  428a55:	mov    eax,DWORD PTR [rax]
  428a57:	mov    edi,eax
  428a59:	call   428a39 <flatcc_json_parser_struct_as_root@@Base+0x361>
  428a5e:	leave  
  428a5f:	ret    
  428a60:	push   rbp
  428a61:	mov    rbp,rsp
  428a64:	mov    DWORD PTR [rbp-0x4],edi
  428a67:	mov    eax,DWORD PTR [rbp-0x4]
  428a6a:	pop    rbp
  428a6b:	ret    
  428a6c:	push   rbp
  428a6d:	mov    rbp,rsp
  428a70:	sub    rsp,0x8
  428a74:	mov    QWORD PTR [rbp-0x8],rdi
  428a78:	mov    rax,QWORD PTR [rbp-0x8]
  428a7c:	mov    eax,DWORD PTR [rax]
  428a7e:	mov    edi,eax
  428a80:	call   428a60 <flatcc_json_parser_struct_as_root@@Base+0x388>
  428a85:	leave  
  428a86:	ret    
  428a87:	push   rbp
  428a88:	mov    rbp,rsp
  428a8b:	mov    eax,edi
  428a8d:	mov    WORD PTR [rbp-0x4],ax
  428a91:	movzx  eax,WORD PTR [rbp-0x4]
  428a95:	pop    rbp
  428a96:	ret    
  428a97:	push   rbp
  428a98:	mov    rbp,rsp
  428a9b:	sub    rsp,0x8
  428a9f:	mov    QWORD PTR [rbp-0x8],rdi
  428aa3:	mov    rax,QWORD PTR [rbp-0x8]
  428aa7:	movzx  eax,WORD PTR [rax]
  428aaa:	movzx  eax,ax
  428aad:	mov    edi,eax
  428aaf:	call   428a87 <flatcc_json_parser_struct_as_root@@Base+0x3af>
  428ab4:	leave  
  428ab5:	ret    
  428ab6:	push   rbp
  428ab7:	mov    rbp,rsp
  428aba:	mov    eax,edi
  428abc:	mov    BYTE PTR [rbp-0x4],al
  428abf:	movzx  eax,BYTE PTR [rbp-0x4]
  428ac3:	pop    rbp
  428ac4:	ret    
  428ac5:	push   rbp
  428ac6:	mov    rbp,rsp
  428ac9:	sub    rsp,0x8
  428acd:	mov    QWORD PTR [rbp-0x8],rdi
  428ad1:	mov    rax,QWORD PTR [rbp-0x8]
  428ad5:	movzx  eax,BYTE PTR [rax]
  428ad8:	movzx  eax,al
  428adb:	mov    edi,eax
  428add:	call   428ab6 <flatcc_json_parser_struct_as_root@@Base+0x3de>
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	push   rbp
  428ae5:	mov    rbp,rsp
  428ae8:	mov    DWORD PTR [rbp-0x4],edi
  428aeb:	mov    eax,DWORD PTR [rbp-0x4]
  428aee:	pop    rbp
  428aef:	ret    
  428af0:	push   rbp
  428af1:	mov    rbp,rsp
  428af4:	mov    DWORD PTR [rbp-0x4],edi
  428af7:	mov    eax,DWORD PTR [rbp-0x4]
  428afa:	pop    rbp
  428afb:	ret    
  428afc:	push   rbp
  428afd:	mov    rbp,rsp
  428b00:	sub    rsp,0x8
  428b04:	mov    QWORD PTR [rbp-0x8],rdi
  428b08:	mov    rax,QWORD PTR [rbp-0x8]
  428b0c:	mov    eax,DWORD PTR [rax]
  428b0e:	mov    edi,eax
  428b10:	call   428ae4 <flatcc_json_parser_struct_as_root@@Base+0x40c>
  428b15:	leave  
  428b16:	ret    
  428b17:	push   rbp
  428b18:	mov    rbp,rsp
  428b1b:	mov    QWORD PTR [rbp-0x8],rdi
  428b1f:	mov    DWORD PTR [rbp-0xc],esi
  428b22:	mov    rax,QWORD PTR [rbp-0x8]
  428b26:	mov    eax,DWORD PTR [rax+0x3c]
  428b29:	test   eax,eax
  428b2b:	jne    428b37 <flatcc_json_parser_struct_as_root@@Base+0x45f>
  428b2d:	mov    rax,QWORD PTR [rbp-0x8]
  428b31:	mov    edx,DWORD PTR [rbp-0xc]
  428b34:	mov    DWORD PTR [rax+0x3c],edx
  428b37:	nop
  428b38:	pop    rbp
  428b39:	ret    
  428b3a:	push   rbp
  428b3b:	mov    rbp,rsp
  428b3e:	mov    QWORD PTR [rbp-0x8],rdi
  428b42:	mov    rax,QWORD PTR [rbp-0x8]
  428b46:	mov    eax,DWORD PTR [rax+0x3c]
  428b49:	pop    rbp
  428b4a:	ret    
  428b4b:	push   rbp
  428b4c:	mov    rbp,rsp
  428b4f:	sub    rsp,0x10
  428b53:	mov    QWORD PTR [rbp-0x8],rdi
  428b57:	mov    rax,QWORD PTR [rbp-0x8]
  428b5b:	mov    rdx,QWORD PTR [rax+0x28]
  428b5f:	mov    rax,QWORD PTR [rbp-0x8]
  428b63:	mov    rax,QWORD PTR [rax+0x20]
  428b67:	cmp    rdx,rax
  428b6a:	jb     428b82 <flatcc_json_parser_struct_as_root@@Base+0x4aa>
  428b6c:	mov    rax,QWORD PTR [rbp-0x8]
  428b70:	mov    rax,QWORD PTR [rax+0x48]
  428b74:	mov    rdx,QWORD PTR [rbp-0x8]
  428b78:	mov    esi,0x0
  428b7d:	mov    rdi,rdx
  428b80:	call   rax
  428b82:	nop
  428b83:	leave  
  428b84:	ret    
  428b85:	push   rbp
  428b86:	mov    rbp,rsp
  428b89:	sub    rsp,0x10
  428b8d:	mov    DWORD PTR [rbp-0x4],edi
  428b90:	mov    QWORD PTR [rbp-0x10],rsi
  428b94:	cmp    DWORD PTR [rbp-0x4],0x0
  428b98:	je     428bb9 <flatcc_json_parser_struct_as_root@@Base+0x4e1>
  428b9a:	mov    rax,QWORD PTR [rbp-0x10]
  428b9e:	mov    edx,0x5
  428ba3:	lea    rsi,[rip+0x11fdf]        # 43ab89 <flatcc_builder_padding_base@@Base+0x2929>
  428baa:	mov    rdi,rax
  428bad:	call   4050f0 <memcpy@plt>
  428bb2:	mov    eax,0x4
  428bb7:	jmp    428bd6 <flatcc_json_parser_struct_as_root@@Base+0x4fe>
  428bb9:	mov    rax,QWORD PTR [rbp-0x10]
  428bbd:	mov    edx,0x6
  428bc2:	lea    rsi,[rip+0x11fc6]        # 43ab8f <flatcc_builder_padding_base@@Base+0x292f>
  428bc9:	mov    rdi,rax
  428bcc:	call   4050f0 <memcpy@plt>
  428bd1:	mov    eax,0x5
  428bd6:	leave  
  428bd7:	ret    
  428bd8:	push   rbp
  428bd9:	mov    rbp,rsp
  428bdc:	mov    eax,edi
  428bde:	mov    QWORD PTR [rbp-0x20],rsi
  428be2:	mov    BYTE PTR [rbp-0x14],al
  428be5:	cmp    BYTE PTR [rbp-0x14],0x63
  428be9:	jbe    428c82 <flatcc_json_parser_struct_as_root@@Base+0x5aa>
  428bef:	add    QWORD PTR [rbp-0x20],0x3
  428bf4:	mov    rax,QWORD PTR [rbp-0x20]
  428bf8:	mov    BYTE PTR [rax],0x0
  428bfb:	sub    QWORD PTR [rbp-0x20],0x2
  428c00:	movzx  ecx,BYTE PTR [rbp-0x14]
  428c04:	movzx  edx,cl
  428c07:	mov    eax,edx
  428c09:	shl    eax,0x2
  428c0c:	add    eax,edx
  428c0e:	shl    eax,0x3
  428c11:	add    eax,edx
  428c13:	shr    ax,0x8
  428c17:	shr    al,0x4
  428c1a:	mov    edx,0x64
  428c1f:	imul   eax,edx
  428c22:	sub    ecx,eax
  428c24:	mov    eax,ecx
  428c26:	movzx  eax,al
  428c29:	add    eax,eax
  428c2b:	movsxd rdx,eax
  428c2e:	lea    rax,[rip+0x11e8b]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  428c35:	add    rax,rdx
  428c38:	mov    QWORD PTR [rbp-0x8],rax
  428c3c:	movzx  eax,BYTE PTR [rbp-0x14]
  428c40:	movzx  edx,al
  428c43:	mov    eax,edx
  428c45:	shl    eax,0x2
  428c48:	add    eax,edx
  428c4a:	shl    eax,0x3
  428c4d:	add    eax,edx
  428c4f:	shr    ax,0x8
  428c53:	shr    al,0x4
  428c56:	mov    BYTE PTR [rbp-0x14],al
  428c59:	mov    rax,QWORD PTR [rbp-0x8]
  428c5d:	movzx  edx,WORD PTR [rax]
  428c60:	mov    rax,QWORD PTR [rbp-0x20]
  428c64:	mov    WORD PTR [rax],dx
  428c67:	mov    rax,QWORD PTR [rbp-0x20]
  428c6b:	sub    rax,0x1
  428c6f:	movzx  edx,BYTE PTR [rbp-0x14]
  428c73:	add    edx,0x30
  428c76:	mov    BYTE PTR [rax],dl
  428c78:	mov    eax,0x3
  428c7d:	jmp    428d26 <flatcc_json_parser_struct_as_root@@Base+0x64e>
  428c82:	cmp    BYTE PTR [rbp-0x14],0x9
  428c86:	jbe    428d07 <flatcc_json_parser_struct_as_root@@Base+0x62f>
  428c88:	add    QWORD PTR [rbp-0x20],0x2
  428c8d:	mov    rax,QWORD PTR [rbp-0x20]
  428c91:	mov    BYTE PTR [rax],0x0
  428c94:	sub    QWORD PTR [rbp-0x20],0x2
  428c99:	movzx  ecx,BYTE PTR [rbp-0x14]
  428c9d:	movzx  edx,cl
  428ca0:	mov    eax,edx
  428ca2:	shl    eax,0x2
  428ca5:	add    eax,edx
  428ca7:	shl    eax,0x3
  428caa:	add    eax,edx
  428cac:	shr    ax,0x8
  428cb0:	shr    al,0x4
  428cb3:	mov    edx,0x64
  428cb8:	imul   eax,edx
  428cbb:	sub    ecx,eax
  428cbd:	mov    eax,ecx
  428cbf:	movzx  eax,al
  428cc2:	add    eax,eax
  428cc4:	movsxd rdx,eax
  428cc7:	lea    rax,[rip+0x11df2]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  428cce:	add    rax,rdx
  428cd1:	mov    QWORD PTR [rbp-0x8],rax
  428cd5:	movzx  eax,BYTE PTR [rbp-0x14]
  428cd9:	movzx  edx,al
  428cdc:	mov    eax,edx
  428cde:	shl    eax,0x2
  428ce1:	add    eax,edx
  428ce3:	shl    eax,0x3
  428ce6:	add    eax,edx
  428ce8:	shr    ax,0x8
  428cec:	shr    al,0x4
  428cef:	mov    BYTE PTR [rbp-0x14],al
  428cf2:	mov    rax,QWORD PTR [rbp-0x8]
  428cf6:	movzx  edx,WORD PTR [rax]
  428cf9:	mov    rax,QWORD PTR [rbp-0x20]
  428cfd:	mov    WORD PTR [rax],dx
  428d00:	mov    eax,0x2
  428d05:	jmp    428d26 <flatcc_json_parser_struct_as_root@@Base+0x64e>
  428d07:	mov    rax,QWORD PTR [rbp-0x20]
  428d0b:	add    rax,0x1
  428d0f:	mov    BYTE PTR [rax],0x0
  428d12:	movzx  eax,BYTE PTR [rbp-0x14]
  428d16:	add    eax,0x30
  428d19:	mov    edx,eax
  428d1b:	mov    rax,QWORD PTR [rbp-0x20]
  428d1f:	mov    BYTE PTR [rax],dl
  428d21:	mov    eax,0x1
  428d26:	pop    rbp
  428d27:	ret    
  428d28:	push   rbp
  428d29:	mov    rbp,rsp
  428d2c:	mov    eax,edi
  428d2e:	mov    QWORD PTR [rbp-0x20],rsi
  428d32:	mov    WORD PTR [rbp-0x14],ax
  428d36:	mov    DWORD PTR [rbp-0xc],0x0
  428d3d:	cmp    WORD PTR [rbp-0x14],0x3e7
  428d43:	jbe    428d5f <flatcc_json_parser_struct_as_root@@Base+0x687>
  428d45:	cmp    WORD PTR [rbp-0x14],0x270f
  428d4b:	jbe    428d56 <flatcc_json_parser_struct_as_root@@Base+0x67e>
  428d4d:	mov    DWORD PTR [rbp-0xc],0x5
  428d54:	jmp    428d86 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  428d56:	mov    DWORD PTR [rbp-0xc],0x4
  428d5d:	jmp    428d86 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  428d5f:	cmp    WORD PTR [rbp-0x14],0x63
  428d64:	jbe    428d6f <flatcc_json_parser_struct_as_root@@Base+0x697>
  428d66:	mov    DWORD PTR [rbp-0xc],0x3
  428d6d:	jmp    428d86 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  428d6f:	cmp    WORD PTR [rbp-0x14],0x9
  428d74:	jbe    428d7f <flatcc_json_parser_struct_as_root@@Base+0x6a7>
  428d76:	mov    DWORD PTR [rbp-0xc],0x2
  428d7d:	jmp    428d86 <flatcc_json_parser_struct_as_root@@Base+0x6ae>
  428d7f:	mov    DWORD PTR [rbp-0xc],0x1
  428d86:	mov    eax,DWORD PTR [rbp-0xc]
  428d89:	cdqe   
  428d8b:	add    QWORD PTR [rbp-0x20],rax
  428d8f:	mov    rax,QWORD PTR [rbp-0x20]
  428d93:	mov    BYTE PTR [rax],0x0
  428d96:	mov    eax,DWORD PTR [rbp-0xc]
  428d99:	and    eax,0x1
  428d9c:	test   eax,eax
  428d9e:	je     428ec5 <flatcc_json_parser_struct_as_root@@Base+0x7ed>
  428da4:	mov    eax,DWORD PTR [rbp-0xc]
  428da7:	cmp    eax,0x3
  428daa:	je     428e39 <flatcc_json_parser_struct_as_root@@Base+0x761>
  428db0:	cmp    eax,0x5
  428db3:	je     428dc3 <flatcc_json_parser_struct_as_root@@Base+0x6eb>
  428db5:	cmp    eax,0x1
  428db8:	je     428eaf <flatcc_json_parser_struct_as_root@@Base+0x7d7>
  428dbe:	jmp    428fc2 <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  428dc3:	sub    QWORD PTR [rbp-0x20],0x2
  428dc8:	movzx  ecx,WORD PTR [rbp-0x14]
  428dcc:	mov    eax,ecx
  428dce:	shr    ax,0x2
  428dd2:	movzx  eax,ax
  428dd5:	imul   eax,eax,0x147b
  428ddb:	shr    eax,0x10
  428dde:	mov    edx,eax
  428de0:	shr    dx,1
  428de3:	mov    eax,edx
  428de5:	shl    eax,0x2
  428de8:	add    eax,edx
  428dea:	lea    edx,[rax*4+0x0]
  428df1:	add    eax,edx
  428df3:	shl    eax,0x2
  428df6:	sub    ecx,eax
  428df8:	mov    edx,ecx
  428dfa:	movzx  eax,dx
  428dfd:	add    eax,eax
  428dff:	movsxd rdx,eax
  428e02:	lea    rax,[rip+0x11cb7]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  428e09:	add    rax,rdx
  428e0c:	mov    QWORD PTR [rbp-0x8],rax
  428e10:	movzx  eax,WORD PTR [rbp-0x14]
  428e14:	shr    ax,0x2
  428e18:	movzx  eax,ax
  428e1b:	imul   eax,eax,0x147b
  428e21:	shr    eax,0x10
  428e24:	shr    ax,1
  428e27:	mov    WORD PTR [rbp-0x14],ax
  428e2b:	mov    rax,QWORD PTR [rbp-0x8]
  428e2f:	movzx  edx,WORD PTR [rax]
  428e32:	mov    rax,QWORD PTR [rbp-0x20]
  428e36:	mov    WORD PTR [rax],dx
  428e39:	sub    QWORD PTR [rbp-0x20],0x2
  428e3e:	movzx  ecx,WORD PTR [rbp-0x14]
  428e42:	mov    eax,ecx
  428e44:	shr    ax,0x2
  428e48:	movzx  eax,ax
  428e4b:	imul   eax,eax,0x147b
  428e51:	shr    eax,0x10
  428e54:	mov    edx,eax
  428e56:	shr    dx,1
  428e59:	mov    eax,edx
  428e5b:	shl    eax,0x2
  428e5e:	add    eax,edx
  428e60:	lea    edx,[rax*4+0x0]
  428e67:	add    eax,edx
  428e69:	shl    eax,0x2
  428e6c:	sub    ecx,eax
  428e6e:	mov    edx,ecx
  428e70:	movzx  eax,dx
  428e73:	add    eax,eax
  428e75:	movsxd rdx,eax
  428e78:	lea    rax,[rip+0x11c41]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  428e7f:	add    rax,rdx
  428e82:	mov    QWORD PTR [rbp-0x8],rax
  428e86:	movzx  eax,WORD PTR [rbp-0x14]
  428e8a:	shr    ax,0x2
  428e8e:	movzx  eax,ax
  428e91:	imul   eax,eax,0x147b
  428e97:	shr    eax,0x10
  428e9a:	shr    ax,1
  428e9d:	mov    WORD PTR [rbp-0x14],ax
  428ea1:	mov    rax,QWORD PTR [rbp-0x8]
  428ea5:	movzx  edx,WORD PTR [rax]
  428ea8:	mov    rax,QWORD PTR [rbp-0x20]
  428eac:	mov    WORD PTR [rax],dx
  428eaf:	mov    rax,QWORD PTR [rbp-0x20]
  428eb3:	sub    rax,0x1
  428eb7:	movzx  edx,WORD PTR [rbp-0x14]
  428ebb:	add    edx,0x30
  428ebe:	mov    BYTE PTR [rax],dl
  428ec0:	jmp    428fc2 <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  428ec5:	mov    eax,DWORD PTR [rbp-0xc]
  428ec8:	cmp    eax,0x2
  428ecb:	je     428f4c <flatcc_json_parser_struct_as_root@@Base+0x874>
  428ecd:	cmp    eax,0x4
  428ed0:	jne    428fc2 <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  428ed6:	sub    QWORD PTR [rbp-0x20],0x2
  428edb:	movzx  ecx,WORD PTR [rbp-0x14]
  428edf:	mov    eax,ecx
  428ee1:	shr    ax,0x2
  428ee5:	movzx  eax,ax
  428ee8:	imul   eax,eax,0x147b
  428eee:	shr    eax,0x10
  428ef1:	mov    edx,eax
  428ef3:	shr    dx,1
  428ef6:	mov    eax,edx
  428ef8:	shl    eax,0x2
  428efb:	add    eax,edx
  428efd:	lea    edx,[rax*4+0x0]
  428f04:	add    eax,edx
  428f06:	shl    eax,0x2
  428f09:	sub    ecx,eax
  428f0b:	mov    edx,ecx
  428f0d:	movzx  eax,dx
  428f10:	add    eax,eax
  428f12:	movsxd rdx,eax
  428f15:	lea    rax,[rip+0x11ba4]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  428f1c:	add    rax,rdx
  428f1f:	mov    QWORD PTR [rbp-0x8],rax
  428f23:	movzx  eax,WORD PTR [rbp-0x14]
  428f27:	shr    ax,0x2
  428f2b:	movzx  eax,ax
  428f2e:	imul   eax,eax,0x147b
  428f34:	shr    eax,0x10
  428f37:	shr    ax,1
  428f3a:	mov    WORD PTR [rbp-0x14],ax
  428f3e:	mov    rax,QWORD PTR [rbp-0x8]
  428f42:	movzx  edx,WORD PTR [rax]
  428f45:	mov    rax,QWORD PTR [rbp-0x20]
  428f49:	mov    WORD PTR [rax],dx
  428f4c:	sub    QWORD PTR [rbp-0x20],0x2
  428f51:	movzx  ecx,WORD PTR [rbp-0x14]
  428f55:	mov    eax,ecx
  428f57:	shr    ax,0x2
  428f5b:	movzx  eax,ax
  428f5e:	imul   eax,eax,0x147b
  428f64:	shr    eax,0x10
  428f67:	mov    edx,eax
  428f69:	shr    dx,1
  428f6c:	mov    eax,edx
  428f6e:	shl    eax,0x2
  428f71:	add    eax,edx
  428f73:	lea    edx,[rax*4+0x0]
  428f7a:	add    eax,edx
  428f7c:	shl    eax,0x2
  428f7f:	sub    ecx,eax
  428f81:	mov    edx,ecx
  428f83:	movzx  eax,dx
  428f86:	add    eax,eax
  428f88:	movsxd rdx,eax
  428f8b:	lea    rax,[rip+0x11b2e]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  428f92:	add    rax,rdx
  428f95:	mov    QWORD PTR [rbp-0x8],rax
  428f99:	movzx  eax,WORD PTR [rbp-0x14]
  428f9d:	shr    ax,0x2
  428fa1:	movzx  eax,ax
  428fa4:	imul   eax,eax,0x147b
  428faa:	shr    eax,0x10
  428fad:	shr    ax,1
  428fb0:	mov    WORD PTR [rbp-0x14],ax
  428fb4:	mov    rax,QWORD PTR [rbp-0x8]
  428fb8:	movzx  edx,WORD PTR [rax]
  428fbb:	mov    rax,QWORD PTR [rbp-0x20]
  428fbf:	mov    WORD PTR [rax],dx
  428fc2:	mov    eax,DWORD PTR [rbp-0xc]
  428fc5:	pop    rbp
  428fc6:	ret    
  428fc7:	push   rbp
  428fc8:	mov    rbp,rsp
  428fcb:	mov    DWORD PTR [rbp-0x14],edi
  428fce:	mov    QWORD PTR [rbp-0x20],rsi
  428fd2:	mov    DWORD PTR [rbp-0xc],0x0
  428fd9:	cmp    DWORD PTR [rbp-0x14],0x270f
  428fe0:	jbe    429045 <flatcc_json_parser_struct_as_root@@Base+0x96d>
  428fe2:	cmp    DWORD PTR [rbp-0x14],0x98967f
  428fe9:	jbe    429018 <flatcc_json_parser_struct_as_root@@Base+0x940>
  428feb:	cmp    DWORD PTR [rbp-0x14],0x3b9ac9ff
  428ff2:	jbe    428ffd <flatcc_json_parser_struct_as_root@@Base+0x925>
  428ff4:	mov    DWORD PTR [rbp-0xc],0xa
  428ffb:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  428ffd:	cmp    DWORD PTR [rbp-0x14],0x5f5e0ff
  429004:	jbe    42900f <flatcc_json_parser_struct_as_root@@Base+0x937>
  429006:	mov    DWORD PTR [rbp-0xc],0x9
  42900d:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  42900f:	mov    DWORD PTR [rbp-0xc],0x8
  429016:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429018:	cmp    DWORD PTR [rbp-0x14],0xf423f
  42901f:	jbe    42902a <flatcc_json_parser_struct_as_root@@Base+0x952>
  429021:	mov    DWORD PTR [rbp-0xc],0x7
  429028:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  42902a:	cmp    DWORD PTR [rbp-0x14],0x1869f
  429031:	jbe    42903c <flatcc_json_parser_struct_as_root@@Base+0x964>
  429033:	mov    DWORD PTR [rbp-0xc],0x6
  42903a:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  42903c:	mov    DWORD PTR [rbp-0xc],0x5
  429043:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429045:	cmp    DWORD PTR [rbp-0x14],0x63
  429049:	jbe    429066 <flatcc_json_parser_struct_as_root@@Base+0x98e>
  42904b:	cmp    DWORD PTR [rbp-0x14],0x3e7
  429052:	jbe    42905d <flatcc_json_parser_struct_as_root@@Base+0x985>
  429054:	mov    DWORD PTR [rbp-0xc],0x4
  42905b:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  42905d:	mov    DWORD PTR [rbp-0xc],0x3
  429064:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429066:	cmp    DWORD PTR [rbp-0x14],0x9
  42906a:	jbe    429075 <flatcc_json_parser_struct_as_root@@Base+0x99d>
  42906c:	mov    DWORD PTR [rbp-0xc],0x2
  429073:	jmp    42907c <flatcc_json_parser_struct_as_root@@Base+0x9a4>
  429075:	mov    DWORD PTR [rbp-0xc],0x1
  42907c:	mov    eax,DWORD PTR [rbp-0xc]
  42907f:	cdqe   
  429081:	add    QWORD PTR [rbp-0x20],rax
  429085:	mov    rax,QWORD PTR [rbp-0x20]
  429089:	mov    BYTE PTR [rax],0x0
  42908c:	mov    eax,DWORD PTR [rbp-0xc]
  42908f:	and    eax,0x1
  429092:	test   eax,eax
  429094:	je     429219 <flatcc_json_parser_struct_as_root@@Base+0xb41>
  42909a:	cmp    DWORD PTR [rbp-0xc],0x9
  42909e:	ja     4293d2 <flatcc_json_parser_struct_as_root@@Base+0xcfa>
  4290a4:	mov    eax,DWORD PTR [rbp-0xc]
  4290a7:	lea    rdx,[rax*4+0x0]
  4290af:	lea    rax,[rip+0x11ae2]        # 43ab98 <flatcc_builder_padding_base@@Base+0x2938>
  4290b6:	mov    eax,DWORD PTR [rdx+rax*1]
  4290b9:	movsxd rdx,eax
  4290bc:	lea    rax,[rip+0x11ad5]        # 43ab98 <flatcc_builder_padding_base@@Base+0x2938>
  4290c3:	add    rax,rdx
  4290c6:	jmp    rax
  4290c8:	sub    QWORD PTR [rbp-0x20],0x2
  4290cd:	mov    ecx,DWORD PTR [rbp-0x14]
  4290d0:	mov    edx,0x51eb851f
  4290d5:	mov    eax,ecx
  4290d7:	mul    edx
  4290d9:	mov    eax,edx
  4290db:	shr    eax,0x5
  4290de:	imul   eax,eax,0x64
  4290e1:	sub    ecx,eax
  4290e3:	mov    eax,ecx
  4290e5:	add    eax,eax
  4290e7:	mov    edx,eax
  4290e9:	lea    rax,[rip+0x119d0]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4290f0:	add    rax,rdx
  4290f3:	mov    QWORD PTR [rbp-0x8],rax
  4290f7:	mov    eax,DWORD PTR [rbp-0x14]
  4290fa:	mov    edx,0x51eb851f
  4290ff:	mul    edx
  429101:	mov    eax,edx
  429103:	shr    eax,0x5
  429106:	mov    DWORD PTR [rbp-0x14],eax
  429109:	mov    rax,QWORD PTR [rbp-0x8]
  42910d:	movzx  edx,WORD PTR [rax]
  429110:	mov    rax,QWORD PTR [rbp-0x20]
  429114:	mov    WORD PTR [rax],dx
  429117:	sub    QWORD PTR [rbp-0x20],0x2
  42911c:	mov    ecx,DWORD PTR [rbp-0x14]
  42911f:	mov    edx,0x51eb851f
  429124:	mov    eax,ecx
  429126:	mul    edx
  429128:	mov    eax,edx
  42912a:	shr    eax,0x5
  42912d:	imul   eax,eax,0x64
  429130:	sub    ecx,eax
  429132:	mov    eax,ecx
  429134:	add    eax,eax
  429136:	mov    edx,eax
  429138:	lea    rax,[rip+0x11981]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42913f:	add    rax,rdx
  429142:	mov    QWORD PTR [rbp-0x8],rax
  429146:	mov    eax,DWORD PTR [rbp-0x14]
  429149:	mov    edx,0x51eb851f
  42914e:	mul    edx
  429150:	mov    eax,edx
  429152:	shr    eax,0x5
  429155:	mov    DWORD PTR [rbp-0x14],eax
  429158:	mov    rax,QWORD PTR [rbp-0x8]
  42915c:	movzx  edx,WORD PTR [rax]
  42915f:	mov    rax,QWORD PTR [rbp-0x20]
  429163:	mov    WORD PTR [rax],dx
  429166:	sub    QWORD PTR [rbp-0x20],0x2
  42916b:	mov    ecx,DWORD PTR [rbp-0x14]
  42916e:	mov    edx,0x51eb851f
  429173:	mov    eax,ecx
  429175:	mul    edx
  429177:	mov    eax,edx
  429179:	shr    eax,0x5
  42917c:	imul   eax,eax,0x64
  42917f:	sub    ecx,eax
  429181:	mov    eax,ecx
  429183:	add    eax,eax
  429185:	mov    edx,eax
  429187:	lea    rax,[rip+0x11932]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42918e:	add    rax,rdx
  429191:	mov    QWORD PTR [rbp-0x8],rax
  429195:	mov    eax,DWORD PTR [rbp-0x14]
  429198:	mov    edx,0x51eb851f
  42919d:	mul    edx
  42919f:	mov    eax,edx
  4291a1:	shr    eax,0x5
  4291a4:	mov    DWORD PTR [rbp-0x14],eax
  4291a7:	mov    rax,QWORD PTR [rbp-0x8]
  4291ab:	movzx  edx,WORD PTR [rax]
  4291ae:	mov    rax,QWORD PTR [rbp-0x20]
  4291b2:	mov    WORD PTR [rax],dx
  4291b5:	sub    QWORD PTR [rbp-0x20],0x2
  4291ba:	mov    ecx,DWORD PTR [rbp-0x14]
  4291bd:	mov    edx,0x51eb851f
  4291c2:	mov    eax,ecx
  4291c4:	mul    edx
  4291c6:	mov    eax,edx
  4291c8:	shr    eax,0x5
  4291cb:	imul   eax,eax,0x64
  4291ce:	sub    ecx,eax
  4291d0:	mov    eax,ecx
  4291d2:	add    eax,eax
  4291d4:	mov    edx,eax
  4291d6:	lea    rax,[rip+0x118e3]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4291dd:	add    rax,rdx
  4291e0:	mov    QWORD PTR [rbp-0x8],rax
  4291e4:	mov    eax,DWORD PTR [rbp-0x14]
  4291e7:	mov    edx,0x51eb851f
  4291ec:	mul    edx
  4291ee:	mov    eax,edx
  4291f0:	shr    eax,0x5
  4291f3:	mov    DWORD PTR [rbp-0x14],eax
  4291f6:	mov    rax,QWORD PTR [rbp-0x8]
  4291fa:	movzx  edx,WORD PTR [rax]
  4291fd:	mov    rax,QWORD PTR [rbp-0x20]
  429201:	mov    WORD PTR [rax],dx
  429204:	mov    rax,QWORD PTR [rbp-0x20]
  429208:	sub    rax,0x1
  42920c:	mov    edx,DWORD PTR [rbp-0x14]
  42920f:	add    edx,0x30
  429212:	mov    BYTE PTR [rax],dl
  429214:	jmp    4293d2 <flatcc_json_parser_struct_as_root@@Base+0xcfa>
  429219:	cmp    DWORD PTR [rbp-0xc],0xa
  42921d:	ja     4293d2 <flatcc_json_parser_struct_as_root@@Base+0xcfa>
  429223:	mov    eax,DWORD PTR [rbp-0xc]
  429226:	lea    rdx,[rax*4+0x0]
  42922e:	lea    rax,[rip+0x1198b]        # 43abc0 <flatcc_builder_padding_base@@Base+0x2960>
  429235:	mov    eax,DWORD PTR [rdx+rax*1]
  429238:	movsxd rdx,eax
  42923b:	lea    rax,[rip+0x1197e]        # 43abc0 <flatcc_builder_padding_base@@Base+0x2960>
  429242:	add    rax,rdx
  429245:	jmp    rax
  429247:	sub    QWORD PTR [rbp-0x20],0x2
  42924c:	mov    ecx,DWORD PTR [rbp-0x14]
  42924f:	mov    edx,0x51eb851f
  429254:	mov    eax,ecx
  429256:	mul    edx
  429258:	mov    eax,edx
  42925a:	shr    eax,0x5
  42925d:	imul   eax,eax,0x64
  429260:	sub    ecx,eax
  429262:	mov    eax,ecx
  429264:	add    eax,eax
  429266:	mov    edx,eax
  429268:	lea    rax,[rip+0x11851]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42926f:	add    rax,rdx
  429272:	mov    QWORD PTR [rbp-0x8],rax
  429276:	mov    eax,DWORD PTR [rbp-0x14]
  429279:	mov    edx,0x51eb851f
  42927e:	mul    edx
  429280:	mov    eax,edx
  429282:	shr    eax,0x5
  429285:	mov    DWORD PTR [rbp-0x14],eax
  429288:	mov    rax,QWORD PTR [rbp-0x8]
  42928c:	movzx  edx,WORD PTR [rax]
  42928f:	mov    rax,QWORD PTR [rbp-0x20]
  429293:	mov    WORD PTR [rax],dx
  429296:	sub    QWORD PTR [rbp-0x20],0x2
  42929b:	mov    ecx,DWORD PTR [rbp-0x14]
  42929e:	mov    edx,0x51eb851f
  4292a3:	mov    eax,ecx
  4292a5:	mul    edx
  4292a7:	mov    eax,edx
  4292a9:	shr    eax,0x5
  4292ac:	imul   eax,eax,0x64
  4292af:	sub    ecx,eax
  4292b1:	mov    eax,ecx
  4292b3:	add    eax,eax
  4292b5:	mov    edx,eax
  4292b7:	lea    rax,[rip+0x11802]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4292be:	add    rax,rdx
  4292c1:	mov    QWORD PTR [rbp-0x8],rax
  4292c5:	mov    eax,DWORD PTR [rbp-0x14]
  4292c8:	mov    edx,0x51eb851f
  4292cd:	mul    edx
  4292cf:	mov    eax,edx
  4292d1:	shr    eax,0x5
  4292d4:	mov    DWORD PTR [rbp-0x14],eax
  4292d7:	mov    rax,QWORD PTR [rbp-0x8]
  4292db:	movzx  edx,WORD PTR [rax]
  4292de:	mov    rax,QWORD PTR [rbp-0x20]
  4292e2:	mov    WORD PTR [rax],dx
  4292e5:	sub    QWORD PTR [rbp-0x20],0x2
  4292ea:	mov    ecx,DWORD PTR [rbp-0x14]
  4292ed:	mov    edx,0x51eb851f
  4292f2:	mov    eax,ecx
  4292f4:	mul    edx
  4292f6:	mov    eax,edx
  4292f8:	shr    eax,0x5
  4292fb:	imul   eax,eax,0x64
  4292fe:	sub    ecx,eax
  429300:	mov    eax,ecx
  429302:	add    eax,eax
  429304:	mov    edx,eax
  429306:	lea    rax,[rip+0x117b3]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42930d:	add    rax,rdx
  429310:	mov    QWORD PTR [rbp-0x8],rax
  429314:	mov    eax,DWORD PTR [rbp-0x14]
  429317:	mov    edx,0x51eb851f
  42931c:	mul    edx
  42931e:	mov    eax,edx
  429320:	shr    eax,0x5
  429323:	mov    DWORD PTR [rbp-0x14],eax
  429326:	mov    rax,QWORD PTR [rbp-0x8]
  42932a:	movzx  edx,WORD PTR [rax]
  42932d:	mov    rax,QWORD PTR [rbp-0x20]
  429331:	mov    WORD PTR [rax],dx
  429334:	sub    QWORD PTR [rbp-0x20],0x2
  429339:	mov    ecx,DWORD PTR [rbp-0x14]
  42933c:	mov    edx,0x51eb851f
  429341:	mov    eax,ecx
  429343:	mul    edx
  429345:	mov    eax,edx
  429347:	shr    eax,0x5
  42934a:	imul   eax,eax,0x64
  42934d:	sub    ecx,eax
  42934f:	mov    eax,ecx
  429351:	add    eax,eax
  429353:	mov    edx,eax
  429355:	lea    rax,[rip+0x11764]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42935c:	add    rax,rdx
  42935f:	mov    QWORD PTR [rbp-0x8],rax
  429363:	mov    eax,DWORD PTR [rbp-0x14]
  429366:	mov    edx,0x51eb851f
  42936b:	mul    edx
  42936d:	mov    eax,edx
  42936f:	shr    eax,0x5
  429372:	mov    DWORD PTR [rbp-0x14],eax
  429375:	mov    rax,QWORD PTR [rbp-0x8]
  429379:	movzx  edx,WORD PTR [rax]
  42937c:	mov    rax,QWORD PTR [rbp-0x20]
  429380:	mov    WORD PTR [rax],dx
  429383:	sub    QWORD PTR [rbp-0x20],0x2
  429388:	mov    ecx,DWORD PTR [rbp-0x14]
  42938b:	mov    edx,0x51eb851f
  429390:	mov    eax,ecx
  429392:	mul    edx
  429394:	mov    eax,edx
  429396:	shr    eax,0x5
  429399:	imul   eax,eax,0x64
  42939c:	sub    ecx,eax
  42939e:	mov    eax,ecx
  4293a0:	add    eax,eax
  4293a2:	mov    edx,eax
  4293a4:	lea    rax,[rip+0x11715]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4293ab:	add    rax,rdx
  4293ae:	mov    QWORD PTR [rbp-0x8],rax
  4293b2:	mov    eax,DWORD PTR [rbp-0x14]
  4293b5:	mov    edx,0x51eb851f
  4293ba:	mul    edx
  4293bc:	mov    eax,edx
  4293be:	shr    eax,0x5
  4293c1:	mov    DWORD PTR [rbp-0x14],eax
  4293c4:	mov    rax,QWORD PTR [rbp-0x8]
  4293c8:	movzx  edx,WORD PTR [rax]
  4293cb:	mov    rax,QWORD PTR [rbp-0x20]
  4293cf:	mov    WORD PTR [rax],dx
  4293d2:	mov    eax,DWORD PTR [rbp-0xc]
  4293d5:	pop    rbp
  4293d6:	ret    
  4293d7:	push   rbp
  4293d8:	mov    rbp,rsp
  4293db:	sub    rsp,0x30
  4293df:	mov    QWORD PTR [rbp-0x28],rdi
  4293e3:	mov    QWORD PTR [rbp-0x30],rsi
  4293e7:	mov    DWORD PTR [rbp-0x14],0x0
  4293ee:	mov    QWORD PTR [rbp-0x10],0x3b9aca00
  4293f6:	mov    rax,QWORD PTR [rbp-0x28]
  4293fa:	cmp    rax,QWORD PTR [rbp-0x10]
  4293fe:	jae    429419 <flatcc_json_parser_struct_as_root@@Base+0xd41>
  429400:	mov    rax,QWORD PTR [rbp-0x28]
  429404:	mov    edx,eax
  429406:	mov    rax,QWORD PTR [rbp-0x30]
  42940a:	mov    rsi,rax
  42940d:	mov    edi,edx
  42940f:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  429414:	jmp    429daa <flatcc_json_parser_struct_as_root@@Base+0x16d2>
  429419:	mov    rax,QWORD PTR [rbp-0x10]
  42941d:	imul   rax,rax,0x2710
  429424:	cmp    rax,QWORD PTR [rbp-0x28]
  429428:	ja     4294e9 <flatcc_json_parser_struct_as_root@@Base+0xe11>
  42942e:	mov    rax,QWORD PTR [rbp-0x10]
  429432:	imul   rax,rax,0x989680
  429439:	cmp    rax,QWORD PTR [rbp-0x28]
  42943d:	ja     4294a9 <flatcc_json_parser_struct_as_root@@Base+0xdd1>
  42943f:	mov    rax,QWORD PTR [rbp-0x10]
  429443:	imul   rax,rax,0x3b9aca00
  42944a:	cmp    rax,QWORD PTR [rbp-0x28]
  42944e:	ja     429480 <flatcc_json_parser_struct_as_root@@Base+0xda8>
  429450:	mov    rdx,QWORD PTR [rbp-0x10]
  429454:	movabs rax,0x2540be400
  42945e:	imul   rax,rdx
  429462:	cmp    rax,QWORD PTR [rbp-0x28]
  429466:	ja     429474 <flatcc_json_parser_struct_as_root@@Base+0xd9c>
  429468:	mov    DWORD PTR [rbp-0x14],0x14
  42946f:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429474:	mov    DWORD PTR [rbp-0x14],0x13
  42947b:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429480:	mov    rax,QWORD PTR [rbp-0x10]
  429484:	imul   rax,rax,0x5f5e100
  42948b:	cmp    rax,QWORD PTR [rbp-0x28]
  42948f:	ja     42949d <flatcc_json_parser_struct_as_root@@Base+0xdc5>
  429491:	mov    DWORD PTR [rbp-0x14],0x12
  429498:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  42949d:	mov    DWORD PTR [rbp-0x14],0x11
  4294a4:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  4294a9:	mov    rax,QWORD PTR [rbp-0x10]
  4294ad:	imul   rax,rax,0xf4240
  4294b4:	cmp    rax,QWORD PTR [rbp-0x28]
  4294b8:	ja     4294c6 <flatcc_json_parser_struct_as_root@@Base+0xdee>
  4294ba:	mov    DWORD PTR [rbp-0x14],0x10
  4294c1:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  4294c6:	mov    rax,QWORD PTR [rbp-0x10]
  4294ca:	imul   rax,rax,0x186a0
  4294d1:	cmp    rax,QWORD PTR [rbp-0x28]
  4294d5:	ja     4294e0 <flatcc_json_parser_struct_as_root@@Base+0xe08>
  4294d7:	mov    DWORD PTR [rbp-0x14],0xf
  4294de:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  4294e0:	mov    DWORD PTR [rbp-0x14],0xe
  4294e7:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  4294e9:	mov    rdx,QWORD PTR [rbp-0x10]
  4294ed:	mov    rax,rdx
  4294f0:	shl    rax,0x2
  4294f4:	add    rax,rdx
  4294f7:	lea    rdx,[rax*4+0x0]
  4294ff:	add    rax,rdx
  429502:	shl    rax,0x2
  429506:	cmp    rax,QWORD PTR [rbp-0x28]
  42950a:	ja     42952f <flatcc_json_parser_struct_as_root@@Base+0xe57>
  42950c:	mov    rax,QWORD PTR [rbp-0x10]
  429510:	imul   rax,rax,0x3e8
  429517:	cmp    rax,QWORD PTR [rbp-0x28]
  42951b:	ja     429526 <flatcc_json_parser_struct_as_root@@Base+0xe4e>
  42951d:	mov    DWORD PTR [rbp-0x14],0xd
  429524:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  429526:	mov    DWORD PTR [rbp-0x14],0xc
  42952d:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  42952f:	mov    rdx,QWORD PTR [rbp-0x10]
  429533:	mov    rax,rdx
  429536:	shl    rax,0x2
  42953a:	add    rax,rdx
  42953d:	add    rax,rax
  429540:	cmp    rax,QWORD PTR [rbp-0x28]
  429544:	ja     42954f <flatcc_json_parser_struct_as_root@@Base+0xe77>
  429546:	mov    DWORD PTR [rbp-0x14],0xb
  42954d:	jmp    429556 <flatcc_json_parser_struct_as_root@@Base+0xe7e>
  42954f:	mov    DWORD PTR [rbp-0x14],0xa
  429556:	mov    eax,DWORD PTR [rbp-0x14]
  429559:	cdqe   
  42955b:	add    QWORD PTR [rbp-0x30],rax
  42955f:	mov    rax,QWORD PTR [rbp-0x30]
  429563:	mov    BYTE PTR [rax],0x0
  429566:	mov    eax,DWORD PTR [rbp-0x14]
  429569:	and    eax,0x1
  42956c:	test   eax,eax
  42956e:	je     42987f <flatcc_json_parser_struct_as_root@@Base+0x11a7>
  429574:	mov    eax,DWORD PTR [rbp-0x14]
  429577:	sub    eax,0xb
  42957a:	cmp    eax,0x8
  42957d:	ja     429bab <flatcc_json_parser_struct_as_root@@Base+0x14d3>
  429583:	mov    eax,eax
  429585:	lea    rdx,[rax*4+0x0]
  42958d:	lea    rax,[rip+0x11658]        # 43abec <flatcc_builder_padding_base@@Base+0x298c>
  429594:	mov    eax,DWORD PTR [rdx+rax*1]
  429597:	movsxd rdx,eax
  42959a:	lea    rax,[rip+0x1164b]        # 43abec <flatcc_builder_padding_base@@Base+0x298c>
  4295a1:	add    rax,rdx
  4295a4:	jmp    rax
  4295a6:	sub    QWORD PTR [rbp-0x30],0x2
  4295ab:	mov    rcx,QWORD PTR [rbp-0x28]
  4295af:	mov    rax,rcx
  4295b2:	shr    rax,0x2
  4295b6:	movabs rdx,0x28f5c28f5c28f5c3
  4295c0:	mul    rdx
  4295c3:	shr    rdx,0x2
  4295c7:	mov    rax,rdx
  4295ca:	shl    rax,0x2
  4295ce:	add    rax,rdx
  4295d1:	lea    rdx,[rax*4+0x0]
  4295d9:	add    rax,rdx
  4295dc:	shl    rax,0x2
  4295e0:	sub    rcx,rax
  4295e3:	mov    rdx,rcx
  4295e6:	add    rdx,rdx
  4295e9:	lea    rax,[rip+0x114d0]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4295f0:	add    rax,rdx
  4295f3:	mov    QWORD PTR [rbp-0x8],rax
  4295f7:	mov    rax,QWORD PTR [rbp-0x28]
  4295fb:	shr    rax,0x2
  4295ff:	movabs rdx,0x28f5c28f5c28f5c3
  429609:	mul    rdx
  42960c:	mov    rax,rdx
  42960f:	shr    rax,0x2
  429613:	mov    QWORD PTR [rbp-0x28],rax
  429617:	mov    rax,QWORD PTR [rbp-0x8]
  42961b:	movzx  edx,WORD PTR [rax]
  42961e:	mov    rax,QWORD PTR [rbp-0x30]
  429622:	mov    WORD PTR [rax],dx
  429625:	sub    QWORD PTR [rbp-0x30],0x2
  42962a:	mov    rcx,QWORD PTR [rbp-0x28]
  42962e:	mov    rax,rcx
  429631:	shr    rax,0x2
  429635:	movabs rdx,0x28f5c28f5c28f5c3
  42963f:	mul    rdx
  429642:	shr    rdx,0x2
  429646:	mov    rax,rdx
  429649:	shl    rax,0x2
  42964d:	add    rax,rdx
  429650:	lea    rdx,[rax*4+0x0]
  429658:	add    rax,rdx
  42965b:	shl    rax,0x2
  42965f:	sub    rcx,rax
  429662:	mov    rdx,rcx
  429665:	add    rdx,rdx
  429668:	lea    rax,[rip+0x11451]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42966f:	add    rax,rdx
  429672:	mov    QWORD PTR [rbp-0x8],rax
  429676:	mov    rax,QWORD PTR [rbp-0x28]
  42967a:	shr    rax,0x2
  42967e:	movabs rdx,0x28f5c28f5c28f5c3
  429688:	mul    rdx
  42968b:	mov    rax,rdx
  42968e:	shr    rax,0x2
  429692:	mov    QWORD PTR [rbp-0x28],rax
  429696:	mov    rax,QWORD PTR [rbp-0x8]
  42969a:	movzx  edx,WORD PTR [rax]
  42969d:	mov    rax,QWORD PTR [rbp-0x30]
  4296a1:	mov    WORD PTR [rax],dx
  4296a4:	sub    QWORD PTR [rbp-0x30],0x2
  4296a9:	mov    rcx,QWORD PTR [rbp-0x28]
  4296ad:	mov    rax,rcx
  4296b0:	shr    rax,0x2
  4296b4:	movabs rdx,0x28f5c28f5c28f5c3
  4296be:	mul    rdx
  4296c1:	shr    rdx,0x2
  4296c5:	mov    rax,rdx
  4296c8:	shl    rax,0x2
  4296cc:	add    rax,rdx
  4296cf:	lea    rdx,[rax*4+0x0]
  4296d7:	add    rax,rdx
  4296da:	shl    rax,0x2
  4296de:	sub    rcx,rax
  4296e1:	mov    rdx,rcx
  4296e4:	add    rdx,rdx
  4296e7:	lea    rax,[rip+0x113d2]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4296ee:	add    rax,rdx
  4296f1:	mov    QWORD PTR [rbp-0x8],rax
  4296f5:	mov    rax,QWORD PTR [rbp-0x28]
  4296f9:	shr    rax,0x2
  4296fd:	movabs rdx,0x28f5c28f5c28f5c3
  429707:	mul    rdx
  42970a:	mov    rax,rdx
  42970d:	shr    rax,0x2
  429711:	mov    QWORD PTR [rbp-0x28],rax
  429715:	mov    rax,QWORD PTR [rbp-0x8]
  429719:	movzx  edx,WORD PTR [rax]
  42971c:	mov    rax,QWORD PTR [rbp-0x30]
  429720:	mov    WORD PTR [rax],dx
  429723:	sub    QWORD PTR [rbp-0x30],0x2
  429728:	mov    rcx,QWORD PTR [rbp-0x28]
  42972c:	mov    rax,rcx
  42972f:	shr    rax,0x2
  429733:	movabs rdx,0x28f5c28f5c28f5c3
  42973d:	mul    rdx
  429740:	shr    rdx,0x2
  429744:	mov    rax,rdx
  429747:	shl    rax,0x2
  42974b:	add    rax,rdx
  42974e:	lea    rdx,[rax*4+0x0]
  429756:	add    rax,rdx
  429759:	shl    rax,0x2
  42975d:	sub    rcx,rax
  429760:	mov    rdx,rcx
  429763:	add    rdx,rdx
  429766:	lea    rax,[rip+0x11353]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42976d:	add    rax,rdx
  429770:	mov    QWORD PTR [rbp-0x8],rax
  429774:	mov    rax,QWORD PTR [rbp-0x28]
  429778:	shr    rax,0x2
  42977c:	movabs rdx,0x28f5c28f5c28f5c3
  429786:	mul    rdx
  429789:	mov    rax,rdx
  42978c:	shr    rax,0x2
  429790:	mov    QWORD PTR [rbp-0x28],rax
  429794:	mov    rax,QWORD PTR [rbp-0x8]
  429798:	movzx  edx,WORD PTR [rax]
  42979b:	mov    rax,QWORD PTR [rbp-0x30]
  42979f:	mov    WORD PTR [rax],dx
  4297a2:	sub    QWORD PTR [rbp-0x30],0x2
  4297a7:	mov    rcx,QWORD PTR [rbp-0x28]
  4297ab:	mov    rax,rcx
  4297ae:	shr    rax,0x2
  4297b2:	movabs rdx,0x28f5c28f5c28f5c3
  4297bc:	mul    rdx
  4297bf:	shr    rdx,0x2
  4297c3:	mov    rax,rdx
  4297c6:	shl    rax,0x2
  4297ca:	add    rax,rdx
  4297cd:	lea    rdx,[rax*4+0x0]
  4297d5:	add    rax,rdx
  4297d8:	shl    rax,0x2
  4297dc:	sub    rcx,rax
  4297df:	mov    rdx,rcx
  4297e2:	add    rdx,rdx
  4297e5:	lea    rax,[rip+0x112d4]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4297ec:	add    rax,rdx
  4297ef:	mov    QWORD PTR [rbp-0x8],rax
  4297f3:	mov    rax,QWORD PTR [rbp-0x28]
  4297f7:	shr    rax,0x2
  4297fb:	movabs rdx,0x28f5c28f5c28f5c3
  429805:	mul    rdx
  429808:	mov    rax,rdx
  42980b:	shr    rax,0x2
  42980f:	mov    QWORD PTR [rbp-0x28],rax
  429813:	mov    rax,QWORD PTR [rbp-0x8]
  429817:	movzx  edx,WORD PTR [rax]
  42981a:	mov    rax,QWORD PTR [rbp-0x30]
  42981e:	mov    WORD PTR [rax],dx
  429821:	sub    QWORD PTR [rbp-0x30],0x1
  429826:	mov    rcx,QWORD PTR [rbp-0x28]
  42982a:	movabs rdx,0xcccccccccccccccd
  429834:	mov    rax,rcx
  429837:	mul    rdx
  42983a:	shr    rdx,0x3
  42983e:	mov    rax,rdx
  429841:	shl    rax,0x2
  429845:	add    rax,rdx
  429848:	add    rax,rax
  42984b:	sub    rcx,rax
  42984e:	mov    rdx,rcx
  429851:	mov    eax,edx
  429853:	add    eax,0x30
  429856:	mov    edx,eax
  429858:	mov    rax,QWORD PTR [rbp-0x30]
  42985c:	mov    BYTE PTR [rax],dl
  42985e:	mov    rax,QWORD PTR [rbp-0x28]
  429862:	movabs rdx,0xcccccccccccccccd
  42986c:	mul    rdx
  42986f:	mov    rax,rdx
  429872:	shr    rax,0x3
  429876:	mov    QWORD PTR [rbp-0x28],rax
  42987a:	jmp    429bab <flatcc_json_parser_struct_as_root@@Base+0x14d3>
  42987f:	mov    eax,DWORD PTR [rbp-0x14]
  429882:	sub    eax,0xa
  429885:	cmp    eax,0xa
  429888:	ja     429bab <flatcc_json_parser_struct_as_root@@Base+0x14d3>
  42988e:	mov    eax,eax
  429890:	lea    rdx,[rax*4+0x0]
  429898:	lea    rax,[rip+0x11371]        # 43ac10 <flatcc_builder_padding_base@@Base+0x29b0>
  42989f:	mov    eax,DWORD PTR [rdx+rax*1]
  4298a2:	movsxd rdx,eax
  4298a5:	lea    rax,[rip+0x11364]        # 43ac10 <flatcc_builder_padding_base@@Base+0x29b0>
  4298ac:	add    rax,rdx
  4298af:	jmp    rax
  4298b1:	sub    QWORD PTR [rbp-0x30],0x2
  4298b6:	mov    rcx,QWORD PTR [rbp-0x28]
  4298ba:	mov    rax,rcx
  4298bd:	shr    rax,0x2
  4298c1:	movabs rdx,0x28f5c28f5c28f5c3
  4298cb:	mul    rdx
  4298ce:	shr    rdx,0x2
  4298d2:	mov    rax,rdx
  4298d5:	shl    rax,0x2
  4298d9:	add    rax,rdx
  4298dc:	lea    rdx,[rax*4+0x0]
  4298e4:	add    rax,rdx
  4298e7:	shl    rax,0x2
  4298eb:	sub    rcx,rax
  4298ee:	mov    rdx,rcx
  4298f1:	add    rdx,rdx
  4298f4:	lea    rax,[rip+0x111c5]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4298fb:	add    rax,rdx
  4298fe:	mov    QWORD PTR [rbp-0x8],rax
  429902:	mov    rax,QWORD PTR [rbp-0x28]
  429906:	shr    rax,0x2
  42990a:	movabs rdx,0x28f5c28f5c28f5c3
  429914:	mul    rdx
  429917:	mov    rax,rdx
  42991a:	shr    rax,0x2
  42991e:	mov    QWORD PTR [rbp-0x28],rax
  429922:	mov    rax,QWORD PTR [rbp-0x8]
  429926:	movzx  edx,WORD PTR [rax]
  429929:	mov    rax,QWORD PTR [rbp-0x30]
  42992d:	mov    WORD PTR [rax],dx
  429930:	sub    QWORD PTR [rbp-0x30],0x2
  429935:	mov    rcx,QWORD PTR [rbp-0x28]
  429939:	mov    rax,rcx
  42993c:	shr    rax,0x2
  429940:	movabs rdx,0x28f5c28f5c28f5c3
  42994a:	mul    rdx
  42994d:	shr    rdx,0x2
  429951:	mov    rax,rdx
  429954:	shl    rax,0x2
  429958:	add    rax,rdx
  42995b:	lea    rdx,[rax*4+0x0]
  429963:	add    rax,rdx
  429966:	shl    rax,0x2
  42996a:	sub    rcx,rax
  42996d:	mov    rdx,rcx
  429970:	add    rdx,rdx
  429973:	lea    rax,[rip+0x11146]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42997a:	add    rax,rdx
  42997d:	mov    QWORD PTR [rbp-0x8],rax
  429981:	mov    rax,QWORD PTR [rbp-0x28]
  429985:	shr    rax,0x2
  429989:	movabs rdx,0x28f5c28f5c28f5c3
  429993:	mul    rdx
  429996:	mov    rax,rdx
  429999:	shr    rax,0x2
  42999d:	mov    QWORD PTR [rbp-0x28],rax
  4299a1:	mov    rax,QWORD PTR [rbp-0x8]
  4299a5:	movzx  edx,WORD PTR [rax]
  4299a8:	mov    rax,QWORD PTR [rbp-0x30]
  4299ac:	mov    WORD PTR [rax],dx
  4299af:	sub    QWORD PTR [rbp-0x30],0x2
  4299b4:	mov    rcx,QWORD PTR [rbp-0x28]
  4299b8:	mov    rax,rcx
  4299bb:	shr    rax,0x2
  4299bf:	movabs rdx,0x28f5c28f5c28f5c3
  4299c9:	mul    rdx
  4299cc:	shr    rdx,0x2
  4299d0:	mov    rax,rdx
  4299d3:	shl    rax,0x2
  4299d7:	add    rax,rdx
  4299da:	lea    rdx,[rax*4+0x0]
  4299e2:	add    rax,rdx
  4299e5:	shl    rax,0x2
  4299e9:	sub    rcx,rax
  4299ec:	mov    rdx,rcx
  4299ef:	add    rdx,rdx
  4299f2:	lea    rax,[rip+0x110c7]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  4299f9:	add    rax,rdx
  4299fc:	mov    QWORD PTR [rbp-0x8],rax
  429a00:	mov    rax,QWORD PTR [rbp-0x28]
  429a04:	shr    rax,0x2
  429a08:	movabs rdx,0x28f5c28f5c28f5c3
  429a12:	mul    rdx
  429a15:	mov    rax,rdx
  429a18:	shr    rax,0x2
  429a1c:	mov    QWORD PTR [rbp-0x28],rax
  429a20:	mov    rax,QWORD PTR [rbp-0x8]
  429a24:	movzx  edx,WORD PTR [rax]
  429a27:	mov    rax,QWORD PTR [rbp-0x30]
  429a2b:	mov    WORD PTR [rax],dx
  429a2e:	sub    QWORD PTR [rbp-0x30],0x2
  429a33:	mov    rcx,QWORD PTR [rbp-0x28]
  429a37:	mov    rax,rcx
  429a3a:	shr    rax,0x2
  429a3e:	movabs rdx,0x28f5c28f5c28f5c3
  429a48:	mul    rdx
  429a4b:	shr    rdx,0x2
  429a4f:	mov    rax,rdx
  429a52:	shl    rax,0x2
  429a56:	add    rax,rdx
  429a59:	lea    rdx,[rax*4+0x0]
  429a61:	add    rax,rdx
  429a64:	shl    rax,0x2
  429a68:	sub    rcx,rax
  429a6b:	mov    rdx,rcx
  429a6e:	add    rdx,rdx
  429a71:	lea    rax,[rip+0x11048]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429a78:	add    rax,rdx
  429a7b:	mov    QWORD PTR [rbp-0x8],rax
  429a7f:	mov    rax,QWORD PTR [rbp-0x28]
  429a83:	shr    rax,0x2
  429a87:	movabs rdx,0x28f5c28f5c28f5c3
  429a91:	mul    rdx
  429a94:	mov    rax,rdx
  429a97:	shr    rax,0x2
  429a9b:	mov    QWORD PTR [rbp-0x28],rax
  429a9f:	mov    rax,QWORD PTR [rbp-0x8]
  429aa3:	movzx  edx,WORD PTR [rax]
  429aa6:	mov    rax,QWORD PTR [rbp-0x30]
  429aaa:	mov    WORD PTR [rax],dx
  429aad:	sub    QWORD PTR [rbp-0x30],0x2
  429ab2:	mov    rcx,QWORD PTR [rbp-0x28]
  429ab6:	mov    rax,rcx
  429ab9:	shr    rax,0x2
  429abd:	movabs rdx,0x28f5c28f5c28f5c3
  429ac7:	mul    rdx
  429aca:	shr    rdx,0x2
  429ace:	mov    rax,rdx
  429ad1:	shl    rax,0x2
  429ad5:	add    rax,rdx
  429ad8:	lea    rdx,[rax*4+0x0]
  429ae0:	add    rax,rdx
  429ae3:	shl    rax,0x2
  429ae7:	sub    rcx,rax
  429aea:	mov    rdx,rcx
  429aed:	add    rdx,rdx
  429af0:	lea    rax,[rip+0x10fc9]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429af7:	add    rax,rdx
  429afa:	mov    QWORD PTR [rbp-0x8],rax
  429afe:	mov    rax,QWORD PTR [rbp-0x28]
  429b02:	shr    rax,0x2
  429b06:	movabs rdx,0x28f5c28f5c28f5c3
  429b10:	mul    rdx
  429b13:	mov    rax,rdx
  429b16:	shr    rax,0x2
  429b1a:	mov    QWORD PTR [rbp-0x28],rax
  429b1e:	mov    rax,QWORD PTR [rbp-0x8]
  429b22:	movzx  edx,WORD PTR [rax]
  429b25:	mov    rax,QWORD PTR [rbp-0x30]
  429b29:	mov    WORD PTR [rax],dx
  429b2c:	sub    QWORD PTR [rbp-0x30],0x2
  429b31:	mov    rcx,QWORD PTR [rbp-0x28]
  429b35:	mov    rax,rcx
  429b38:	shr    rax,0x2
  429b3c:	movabs rdx,0x28f5c28f5c28f5c3
  429b46:	mul    rdx
  429b49:	shr    rdx,0x2
  429b4d:	mov    rax,rdx
  429b50:	shl    rax,0x2
  429b54:	add    rax,rdx
  429b57:	lea    rdx,[rax*4+0x0]
  429b5f:	add    rax,rdx
  429b62:	shl    rax,0x2
  429b66:	sub    rcx,rax
  429b69:	mov    rdx,rcx
  429b6c:	add    rdx,rdx
  429b6f:	lea    rax,[rip+0x10f4a]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429b76:	add    rax,rdx
  429b79:	mov    QWORD PTR [rbp-0x8],rax
  429b7d:	mov    rax,QWORD PTR [rbp-0x28]
  429b81:	shr    rax,0x2
  429b85:	movabs rdx,0x28f5c28f5c28f5c3
  429b8f:	mul    rdx
  429b92:	mov    rax,rdx
  429b95:	shr    rax,0x2
  429b99:	mov    QWORD PTR [rbp-0x28],rax
  429b9d:	mov    rax,QWORD PTR [rbp-0x8]
  429ba1:	movzx  edx,WORD PTR [rax]
  429ba4:	mov    rax,QWORD PTR [rbp-0x30]
  429ba8:	mov    WORD PTR [rax],dx
  429bab:	sub    QWORD PTR [rbp-0x30],0x2
  429bb0:	mov    rcx,QWORD PTR [rbp-0x28]
  429bb4:	mov    rax,rcx
  429bb7:	shr    rax,0x2
  429bbb:	movabs rdx,0x28f5c28f5c28f5c3
  429bc5:	mul    rdx
  429bc8:	shr    rdx,0x2
  429bcc:	mov    rax,rdx
  429bcf:	shl    rax,0x2
  429bd3:	add    rax,rdx
  429bd6:	lea    rdx,[rax*4+0x0]
  429bde:	add    rax,rdx
  429be1:	shl    rax,0x2
  429be5:	sub    rcx,rax
  429be8:	mov    rdx,rcx
  429beb:	add    rdx,rdx
  429bee:	lea    rax,[rip+0x10ecb]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429bf5:	add    rax,rdx
  429bf8:	mov    QWORD PTR [rbp-0x8],rax
  429bfc:	mov    rax,QWORD PTR [rbp-0x28]
  429c00:	shr    rax,0x2
  429c04:	movabs rdx,0x28f5c28f5c28f5c3
  429c0e:	mul    rdx
  429c11:	mov    rax,rdx
  429c14:	shr    rax,0x2
  429c18:	mov    QWORD PTR [rbp-0x28],rax
  429c1c:	mov    rax,QWORD PTR [rbp-0x8]
  429c20:	movzx  edx,WORD PTR [rax]
  429c23:	mov    rax,QWORD PTR [rbp-0x30]
  429c27:	mov    WORD PTR [rax],dx
  429c2a:	sub    QWORD PTR [rbp-0x30],0x2
  429c2f:	mov    rcx,QWORD PTR [rbp-0x28]
  429c33:	mov    rax,rcx
  429c36:	shr    rax,0x2
  429c3a:	movabs rdx,0x28f5c28f5c28f5c3
  429c44:	mul    rdx
  429c47:	shr    rdx,0x2
  429c4b:	mov    rax,rdx
  429c4e:	shl    rax,0x2
  429c52:	add    rax,rdx
  429c55:	lea    rdx,[rax*4+0x0]
  429c5d:	add    rax,rdx
  429c60:	shl    rax,0x2
  429c64:	sub    rcx,rax
  429c67:	mov    rdx,rcx
  429c6a:	add    rdx,rdx
  429c6d:	lea    rax,[rip+0x10e4c]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429c74:	add    rax,rdx
  429c77:	mov    QWORD PTR [rbp-0x8],rax
  429c7b:	mov    rax,QWORD PTR [rbp-0x28]
  429c7f:	shr    rax,0x2
  429c83:	movabs rdx,0x28f5c28f5c28f5c3
  429c8d:	mul    rdx
  429c90:	mov    rax,rdx
  429c93:	shr    rax,0x2
  429c97:	mov    QWORD PTR [rbp-0x28],rax
  429c9b:	mov    rax,QWORD PTR [rbp-0x8]
  429c9f:	movzx  edx,WORD PTR [rax]
  429ca2:	mov    rax,QWORD PTR [rbp-0x30]
  429ca6:	mov    WORD PTR [rax],dx
  429ca9:	sub    QWORD PTR [rbp-0x30],0x2
  429cae:	mov    rcx,QWORD PTR [rbp-0x28]
  429cb2:	mov    rax,rcx
  429cb5:	shr    rax,0x2
  429cb9:	movabs rdx,0x28f5c28f5c28f5c3
  429cc3:	mul    rdx
  429cc6:	shr    rdx,0x2
  429cca:	mov    rax,rdx
  429ccd:	shl    rax,0x2
  429cd1:	add    rax,rdx
  429cd4:	lea    rdx,[rax*4+0x0]
  429cdc:	add    rax,rdx
  429cdf:	shl    rax,0x2
  429ce3:	sub    rcx,rax
  429ce6:	mov    rdx,rcx
  429ce9:	add    rdx,rdx
  429cec:	lea    rax,[rip+0x10dcd]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429cf3:	add    rax,rdx
  429cf6:	mov    QWORD PTR [rbp-0x8],rax
  429cfa:	mov    rax,QWORD PTR [rbp-0x28]
  429cfe:	shr    rax,0x2
  429d02:	movabs rdx,0x28f5c28f5c28f5c3
  429d0c:	mul    rdx
  429d0f:	mov    rax,rdx
  429d12:	shr    rax,0x2
  429d16:	mov    QWORD PTR [rbp-0x28],rax
  429d1a:	mov    rax,QWORD PTR [rbp-0x8]
  429d1e:	movzx  edx,WORD PTR [rax]
  429d21:	mov    rax,QWORD PTR [rbp-0x30]
  429d25:	mov    WORD PTR [rax],dx
  429d28:	sub    QWORD PTR [rbp-0x30],0x2
  429d2d:	mov    rcx,QWORD PTR [rbp-0x28]
  429d31:	mov    rax,rcx
  429d34:	shr    rax,0x2
  429d38:	movabs rdx,0x28f5c28f5c28f5c3
  429d42:	mul    rdx
  429d45:	shr    rdx,0x2
  429d49:	mov    rax,rdx
  429d4c:	shl    rax,0x2
  429d50:	add    rax,rdx
  429d53:	lea    rdx,[rax*4+0x0]
  429d5b:	add    rax,rdx
  429d5e:	shl    rax,0x2
  429d62:	sub    rcx,rax
  429d65:	mov    rdx,rcx
  429d68:	add    rdx,rdx
  429d6b:	lea    rax,[rip+0x10d4e]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429d72:	add    rax,rdx
  429d75:	mov    QWORD PTR [rbp-0x8],rax
  429d79:	mov    rax,QWORD PTR [rbp-0x28]
  429d7d:	shr    rax,0x2
  429d81:	movabs rdx,0x28f5c28f5c28f5c3
  429d8b:	mul    rdx
  429d8e:	mov    rax,rdx
  429d91:	shr    rax,0x2
  429d95:	mov    QWORD PTR [rbp-0x28],rax
  429d99:	mov    rax,QWORD PTR [rbp-0x8]
  429d9d:	movzx  edx,WORD PTR [rax]
  429da0:	mov    rax,QWORD PTR [rbp-0x30]
  429da4:	mov    WORD PTR [rax],dx
  429da7:	mov    eax,DWORD PTR [rbp-0x14]
  429daa:	leave  
  429dab:	ret    
  429dac:	push   rbp
  429dad:	mov    rbp,rsp
  429db0:	sub    rsp,0x20
  429db4:	mov    eax,edi
  429db6:	mov    QWORD PTR [rbp-0x20],rsi
  429dba:	mov    BYTE PTR [rbp-0x14],al
  429dbd:	movzx  eax,BYTE PTR [rbp-0x14]
  429dc1:	shr    al,0x7
  429dc4:	movzx  eax,al
  429dc7:	mov    DWORD PTR [rbp-0x4],eax
  429dca:	cmp    DWORD PTR [rbp-0x4],0x0
  429dce:	je     429de8 <flatcc_json_parser_struct_as_root@@Base+0x1710>
  429dd0:	mov    rax,QWORD PTR [rbp-0x20]
  429dd4:	lea    rdx,[rax+0x1]
  429dd8:	mov    QWORD PTR [rbp-0x20],rdx
  429ddc:	mov    BYTE PTR [rax],0x2d
  429ddf:	movzx  eax,BYTE PTR [rbp-0x14]
  429de3:	neg    eax
  429de5:	mov    BYTE PTR [rbp-0x14],al
  429de8:	movzx  eax,BYTE PTR [rbp-0x14]
  429dec:	movzx  eax,al
  429def:	mov    rdx,QWORD PTR [rbp-0x20]
  429df3:	mov    rsi,rdx
  429df6:	mov    edi,eax
  429df8:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  429dfd:	mov    edx,eax
  429dff:	mov    eax,DWORD PTR [rbp-0x4]
  429e02:	add    eax,edx
  429e04:	leave  
  429e05:	ret    
  429e06:	push   rbp
  429e07:	mov    rbp,rsp
  429e0a:	sub    rsp,0x20
  429e0e:	mov    eax,edi
  429e10:	mov    QWORD PTR [rbp-0x20],rsi
  429e14:	mov    WORD PTR [rbp-0x14],ax
  429e18:	movzx  eax,WORD PTR [rbp-0x14]
  429e1c:	shr    ax,0xf
  429e20:	movzx  eax,al
  429e23:	mov    DWORD PTR [rbp-0x4],eax
  429e26:	cmp    DWORD PTR [rbp-0x4],0x0
  429e2a:	je     429e45 <flatcc_json_parser_struct_as_root@@Base+0x176d>
  429e2c:	mov    rax,QWORD PTR [rbp-0x20]
  429e30:	lea    rdx,[rax+0x1]
  429e34:	mov    QWORD PTR [rbp-0x20],rdx
  429e38:	mov    BYTE PTR [rax],0x2d
  429e3b:	movzx  eax,WORD PTR [rbp-0x14]
  429e3f:	neg    eax
  429e41:	mov    WORD PTR [rbp-0x14],ax
  429e45:	movzx  eax,WORD PTR [rbp-0x14]
  429e49:	movzx  eax,ax
  429e4c:	mov    rdx,QWORD PTR [rbp-0x20]
  429e50:	mov    rsi,rdx
  429e53:	mov    edi,eax
  429e55:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  429e5a:	mov    edx,eax
  429e5c:	mov    eax,DWORD PTR [rbp-0x4]
  429e5f:	add    eax,edx
  429e61:	leave  
  429e62:	ret    
  429e63:	push   rbp
  429e64:	mov    rbp,rsp
  429e67:	sub    rsp,0x20
  429e6b:	mov    DWORD PTR [rbp-0x14],edi
  429e6e:	mov    QWORD PTR [rbp-0x20],rsi
  429e72:	mov    eax,DWORD PTR [rbp-0x14]
  429e75:	shr    eax,0x1f
  429e78:	movzx  eax,al
  429e7b:	mov    DWORD PTR [rbp-0x4],eax
  429e7e:	cmp    DWORD PTR [rbp-0x4],0x0
  429e82:	je     429e96 <flatcc_json_parser_struct_as_root@@Base+0x17be>
  429e84:	mov    rax,QWORD PTR [rbp-0x20]
  429e88:	lea    rdx,[rax+0x1]
  429e8c:	mov    QWORD PTR [rbp-0x20],rdx
  429e90:	mov    BYTE PTR [rax],0x2d
  429e93:	neg    DWORD PTR [rbp-0x14]
  429e96:	mov    eax,DWORD PTR [rbp-0x14]
  429e99:	mov    rdx,QWORD PTR [rbp-0x20]
  429e9d:	mov    rsi,rdx
  429ea0:	mov    edi,eax
  429ea2:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  429ea7:	mov    edx,eax
  429ea9:	mov    eax,DWORD PTR [rbp-0x4]
  429eac:	add    eax,edx
  429eae:	leave  
  429eaf:	ret    
  429eb0:	push   rbp
  429eb1:	mov    rbp,rsp
  429eb4:	sub    rsp,0x20
  429eb8:	mov    QWORD PTR [rbp-0x18],rdi
  429ebc:	mov    QWORD PTR [rbp-0x20],rsi
  429ec0:	mov    rax,QWORD PTR [rbp-0x18]
  429ec4:	shr    rax,0x3f
  429ec8:	movzx  eax,al
  429ecb:	mov    DWORD PTR [rbp-0x4],eax
  429ece:	cmp    DWORD PTR [rbp-0x4],0x0
  429ed2:	je     429ee7 <flatcc_json_parser_struct_as_root@@Base+0x180f>
  429ed4:	mov    rax,QWORD PTR [rbp-0x20]
  429ed8:	lea    rdx,[rax+0x1]
  429edc:	mov    QWORD PTR [rbp-0x20],rdx
  429ee0:	mov    BYTE PTR [rax],0x2d
  429ee3:	neg    QWORD PTR [rbp-0x18]
  429ee7:	mov    rax,QWORD PTR [rbp-0x18]
  429eeb:	mov    rdx,QWORD PTR [rbp-0x20]
  429eef:	mov    rsi,rdx
  429ef2:	mov    rdi,rax
  429ef5:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  429efa:	mov    edx,eax
  429efc:	mov    eax,DWORD PTR [rbp-0x4]
  429eff:	add    eax,edx
  429f01:	leave  
  429f02:	ret    
  429f03:	push   rbp
  429f04:	mov    rbp,rsp
  429f07:	sub    rsp,0x50
  429f0b:	mov    DWORD PTR [rbp-0x44],edi
  429f0e:	mov    QWORD PTR [rbp-0x50],rsi
  429f12:	mov    rax,QWORD PTR fs:0x28
  429f1b:	mov    QWORD PTR [rbp-0x8],rax
  429f1f:	xor    eax,eax
  429f21:	lea    rax,[rbp-0x20]
  429f25:	add    rax,0x14
  429f29:	mov    QWORD PTR [rbp-0x30],rax
  429f2d:	mov    rax,QWORD PTR [rbp-0x30]
  429f31:	mov    QWORD PTR [rbp-0x28],rax
  429f35:	jmp    429f82 <flatcc_json_parser_struct_as_root@@Base+0x18aa>
  429f37:	sub    QWORD PTR [rbp-0x30],0x2
  429f3c:	mov    ecx,DWORD PTR [rbp-0x44]
  429f3f:	mov    edx,0x51eb851f
  429f44:	mov    eax,ecx
  429f46:	mul    edx
  429f48:	mov    eax,edx
  429f4a:	shr    eax,0x5
  429f4d:	imul   eax,eax,0x64
  429f50:	sub    ecx,eax
  429f52:	mov    eax,ecx
  429f54:	add    eax,eax
  429f56:	mov    DWORD PTR [rbp-0x38],eax
  429f59:	mov    eax,DWORD PTR [rbp-0x44]
  429f5c:	mov    edx,0x51eb851f
  429f61:	mul    edx
  429f63:	mov    eax,edx
  429f65:	shr    eax,0x5
  429f68:	mov    DWORD PTR [rbp-0x44],eax
  429f6b:	mov    edx,DWORD PTR [rbp-0x38]
  429f6e:	lea    rax,[rip+0x10b4b]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429f75:	add    rax,rdx
  429f78:	movzx  edx,WORD PTR [rax]
  429f7b:	mov    rax,QWORD PTR [rbp-0x30]
  429f7f:	mov    WORD PTR [rax],dx
  429f82:	cmp    DWORD PTR [rbp-0x44],0x63
  429f86:	ja     429f37 <flatcc_json_parser_struct_as_root@@Base+0x185f>
  429f88:	sub    QWORD PTR [rbp-0x30],0x2
  429f8d:	mov    eax,DWORD PTR [rbp-0x44]
  429f90:	add    eax,eax
  429f92:	mov    DWORD PTR [rbp-0x38],eax
  429f95:	mov    edx,DWORD PTR [rbp-0x38]
  429f98:	lea    rax,[rip+0x10b21]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  429f9f:	add    rax,rdx
  429fa2:	movzx  edx,WORD PTR [rax]
  429fa5:	mov    rax,QWORD PTR [rbp-0x30]
  429fa9:	mov    WORD PTR [rax],dx
  429fac:	cmp    DWORD PTR [rbp-0x44],0x9
  429fb0:	ja     429fb7 <flatcc_json_parser_struct_as_root@@Base+0x18df>
  429fb2:	add    QWORD PTR [rbp-0x30],0x1
  429fb7:	mov    rdx,QWORD PTR [rbp-0x28]
  429fbb:	mov    rax,QWORD PTR [rbp-0x30]
  429fbf:	sub    rdx,rax
  429fc2:	mov    rax,rdx
  429fc5:	mov    DWORD PTR [rbp-0x34],eax
  429fc8:	jmp    429fe7 <flatcc_json_parser_struct_as_root@@Base+0x190f>
  429fca:	mov    rax,QWORD PTR [rbp-0x50]
  429fce:	lea    rdx,[rax+0x1]
  429fd2:	mov    QWORD PTR [rbp-0x50],rdx
  429fd6:	mov    rdx,QWORD PTR [rbp-0x30]
  429fda:	lea    rcx,[rdx+0x1]
  429fde:	mov    QWORD PTR [rbp-0x30],rcx
  429fe2:	movzx  edx,BYTE PTR [rdx]
  429fe5:	mov    BYTE PTR [rax],dl
  429fe7:	mov    rax,QWORD PTR [rbp-0x30]
  429feb:	cmp    rax,QWORD PTR [rbp-0x28]
  429fef:	jne    429fca <flatcc_json_parser_struct_as_root@@Base+0x18f2>
  429ff1:	mov    rax,QWORD PTR [rbp-0x50]
  429ff5:	mov    BYTE PTR [rax],0x0
  429ff8:	mov    eax,DWORD PTR [rbp-0x34]
  429ffb:	mov    rsi,QWORD PTR [rbp-0x8]
  429fff:	xor    rsi,QWORD PTR fs:0x28
  42a008:	je     42a00f <flatcc_json_parser_struct_as_root@@Base+0x1937>
  42a00a:	call   405070 <__stack_chk_fail@plt>
  42a00f:	leave  
  42a010:	ret    
  42a011:	push   rbp
  42a012:	mov    rbp,rsp
  42a015:	sub    rsp,0x20
  42a019:	mov    DWORD PTR [rbp-0x14],edi
  42a01c:	mov    QWORD PTR [rbp-0x20],rsi
  42a020:	mov    eax,DWORD PTR [rbp-0x14]
  42a023:	shr    eax,0x1f
  42a026:	movzx  eax,al
  42a029:	mov    DWORD PTR [rbp-0x4],eax
  42a02c:	cmp    DWORD PTR [rbp-0x4],0x0
  42a030:	je     42a044 <flatcc_json_parser_struct_as_root@@Base+0x196c>
  42a032:	mov    rax,QWORD PTR [rbp-0x20]
  42a036:	lea    rdx,[rax+0x1]
  42a03a:	mov    QWORD PTR [rbp-0x20],rdx
  42a03e:	mov    BYTE PTR [rax],0x2d
  42a041:	neg    DWORD PTR [rbp-0x14]
  42a044:	mov    eax,DWORD PTR [rbp-0x14]
  42a047:	mov    rdx,QWORD PTR [rbp-0x20]
  42a04b:	mov    rsi,rdx
  42a04e:	mov    edi,eax
  42a050:	call   429f03 <flatcc_json_parser_struct_as_root@@Base+0x182b>
  42a055:	mov    edx,eax
  42a057:	mov    eax,DWORD PTR [rbp-0x4]
  42a05a:	add    eax,edx
  42a05c:	leave  
  42a05d:	ret    
  42a05e:	push   rbp
  42a05f:	mov    rbp,rsp
  42a062:	sub    rsp,0x50
  42a066:	mov    QWORD PTR [rbp-0x48],rdi
  42a06a:	mov    QWORD PTR [rbp-0x50],rsi
  42a06e:	mov    rax,QWORD PTR fs:0x28
  42a077:	mov    QWORD PTR [rbp-0x8],rax
  42a07b:	xor    eax,eax
  42a07d:	lea    rax,[rbp-0x20]
  42a081:	add    rax,0x14
  42a085:	mov    QWORD PTR [rbp-0x30],rax
  42a089:	mov    rax,QWORD PTR [rbp-0x30]
  42a08d:	mov    QWORD PTR [rbp-0x28],rax
  42a091:	jmp    42a111 <flatcc_json_parser_struct_as_root@@Base+0x1a39>
  42a093:	sub    QWORD PTR [rbp-0x30],0x2
  42a098:	mov    rcx,QWORD PTR [rbp-0x48]
  42a09c:	mov    rax,rcx
  42a09f:	shr    rax,0x2
  42a0a3:	movabs rdx,0x28f5c28f5c28f5c3
  42a0ad:	mul    rdx
  42a0b0:	shr    rdx,0x2
  42a0b4:	mov    rax,rdx
  42a0b7:	shl    rax,0x2
  42a0bb:	add    rax,rdx
  42a0be:	lea    rdx,[rax*4+0x0]
  42a0c6:	add    rax,rdx
  42a0c9:	shl    rax,0x2
  42a0cd:	sub    rcx,rax
  42a0d0:	mov    rdx,rcx
  42a0d3:	mov    eax,edx
  42a0d5:	add    eax,eax
  42a0d7:	mov    DWORD PTR [rbp-0x38],eax
  42a0da:	mov    rax,QWORD PTR [rbp-0x48]
  42a0de:	shr    rax,0x2
  42a0e2:	movabs rdx,0x28f5c28f5c28f5c3
  42a0ec:	mul    rdx
  42a0ef:	mov    rax,rdx
  42a0f2:	shr    rax,0x2
  42a0f6:	mov    QWORD PTR [rbp-0x48],rax
  42a0fa:	mov    edx,DWORD PTR [rbp-0x38]
  42a0fd:	lea    rax,[rip+0x109bc]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a104:	add    rax,rdx
  42a107:	movzx  edx,WORD PTR [rax]
  42a10a:	mov    rax,QWORD PTR [rbp-0x30]
  42a10e:	mov    WORD PTR [rax],dx
  42a111:	cmp    QWORD PTR [rbp-0x48],0x63
  42a116:	ja     42a093 <flatcc_json_parser_struct_as_root@@Base+0x19bb>
  42a11c:	sub    QWORD PTR [rbp-0x30],0x2
  42a121:	mov    rax,QWORD PTR [rbp-0x48]
  42a125:	add    eax,eax
  42a127:	mov    DWORD PTR [rbp-0x38],eax
  42a12a:	mov    edx,DWORD PTR [rbp-0x38]
  42a12d:	lea    rax,[rip+0x1098c]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2860>
  42a134:	add    rax,rdx
  42a137:	movzx  edx,WORD PTR [rax]
  42a13a:	mov    rax,QWORD PTR [rbp-0x30]
  42a13e:	mov    WORD PTR [rax],dx
  42a141:	cmp    QWORD PTR [rbp-0x48],0x9
  42a146:	ja     42a14d <flatcc_json_parser_struct_as_root@@Base+0x1a75>
  42a148:	add    QWORD PTR [rbp-0x30],0x1
  42a14d:	mov    rdx,QWORD PTR [rbp-0x28]
  42a151:	mov    rax,QWORD PTR [rbp-0x30]
  42a155:	sub    rdx,rax
  42a158:	mov    rax,rdx
  42a15b:	mov    DWORD PTR [rbp-0x34],eax
  42a15e:	jmp    42a17d <flatcc_json_parser_struct_as_root@@Base+0x1aa5>
  42a160:	mov    rax,QWORD PTR [rbp-0x50]
  42a164:	lea    rdx,[rax+0x1]
  42a168:	mov    QWORD PTR [rbp-0x50],rdx
  42a16c:	mov    rdx,QWORD PTR [rbp-0x30]
  42a170:	lea    rcx,[rdx+0x1]
  42a174:	mov    QWORD PTR [rbp-0x30],rcx
  42a178:	movzx  edx,BYTE PTR [rdx]
  42a17b:	mov    BYTE PTR [rax],dl
  42a17d:	mov    rax,QWORD PTR [rbp-0x30]
  42a181:	cmp    rax,QWORD PTR [rbp-0x28]
  42a185:	jne    42a160 <flatcc_json_parser_struct_as_root@@Base+0x1a88>
  42a187:	mov    rax,QWORD PTR [rbp-0x50]
  42a18b:	mov    BYTE PTR [rax],0x0
  42a18e:	mov    eax,DWORD PTR [rbp-0x34]
  42a191:	mov    rsi,QWORD PTR [rbp-0x8]
  42a195:	xor    rsi,QWORD PTR fs:0x28
  42a19e:	je     42a1a5 <flatcc_json_parser_struct_as_root@@Base+0x1acd>
  42a1a0:	call   405070 <__stack_chk_fail@plt>
  42a1a5:	leave  
  42a1a6:	ret    
  42a1a7:	push   rbp
  42a1a8:	mov    rbp,rsp
  42a1ab:	sub    rsp,0x20
  42a1af:	mov    QWORD PTR [rbp-0x18],rdi
  42a1b3:	mov    QWORD PTR [rbp-0x20],rsi
  42a1b7:	mov    rax,QWORD PTR [rbp-0x18]
  42a1bb:	shr    rax,0x3f
  42a1bf:	movzx  eax,al
  42a1c2:	mov    DWORD PTR [rbp-0x4],eax
  42a1c5:	cmp    DWORD PTR [rbp-0x4],0x0
  42a1c9:	je     42a1de <flatcc_json_parser_struct_as_root@@Base+0x1b06>
  42a1cb:	mov    rax,QWORD PTR [rbp-0x20]
  42a1cf:	lea    rdx,[rax+0x1]
  42a1d3:	mov    QWORD PTR [rbp-0x20],rdx
  42a1d7:	mov    BYTE PTR [rax],0x2d
  42a1da:	neg    QWORD PTR [rbp-0x18]
  42a1de:	mov    rax,QWORD PTR [rbp-0x18]
  42a1e2:	mov    rdx,QWORD PTR [rbp-0x20]
  42a1e6:	mov    rsi,rdx
  42a1e9:	mov    rdi,rax
  42a1ec:	call   42a05e <flatcc_json_parser_struct_as_root@@Base+0x1986>
  42a1f1:	mov    edx,eax
  42a1f3:	mov    eax,DWORD PTR [rbp-0x4]
  42a1f6:	add    eax,edx
  42a1f8:	leave  
  42a1f9:	ret    
  42a1fa:	push   rbp
  42a1fb:	mov    rbp,rsp
  42a1fe:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42a203:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42a208:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42a20d:	mov    rax,QWORD PTR [rbp-0x8]
  42a211:	pop    rbp
  42a212:	ret    
  42a213:	push   rbp
  42a214:	mov    rbp,rsp
  42a217:	mov    QWORD PTR [rbp-0x18],rdi
  42a21b:	mov    rax,QWORD PTR [rbp-0x18]
  42a21f:	mov    QWORD PTR [rbp-0x8],rax
  42a223:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42a228:	pop    rbp
  42a229:	ret    
  42a22a:	push   rbp
  42a22b:	mov    rbp,rsp
  42a22e:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42a233:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42a238:	vcvttsd2si eax,xmm0
  42a23c:	mov    DWORD PTR [rbp-0x4],eax
  42a23f:	vxorpd xmm0,xmm0,xmm0
  42a243:	vucomisd xmm0,QWORD PTR [rbp-0x18]
  42a248:	jbe    42a24f <flatcc_json_parser_struct_as_root@@Base+0x1b77>
  42a24a:	mov    eax,DWORD PTR [rbp-0x4]
  42a24d:	jmp    42a280 <flatcc_json_parser_struct_as_root@@Base+0x1ba8>
  42a24f:	vxorpd xmm0,xmm0,xmm0
  42a253:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  42a258:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42a25d:	vsubsd xmm0,xmm1,xmm0
  42a261:	vxorpd xmm1,xmm1,xmm1
  42a265:	vucomisd xmm0,xmm1
  42a269:	jp     42a275 <flatcc_json_parser_struct_as_root@@Base+0x1b9d>
  42a26b:	vxorpd xmm1,xmm1,xmm1
  42a26f:	vucomisd xmm0,xmm1
  42a273:	je     42a27d <flatcc_json_parser_struct_as_root@@Base+0x1ba5>
  42a275:	mov    eax,DWORD PTR [rbp-0x4]
  42a278:	add    eax,0x1
  42a27b:	jmp    42a280 <flatcc_json_parser_struct_as_root@@Base+0x1ba8>
  42a27d:	mov    eax,DWORD PTR [rbp-0x4]
  42a280:	pop    rbp
  42a281:	ret    
  42a282:	push   rbp
  42a283:	mov    rbp,rsp
  42a286:	sub    rsp,0x20
  42a28a:	mov    DWORD PTR [rbp-0x14],edi
  42a28d:	mov    QWORD PTR [rbp-0x20],rsi
  42a291:	mov    eax,DWORD PTR [rbp-0x14]
  42a294:	add    eax,0x3f
  42a297:	vxorpd xmm0,xmm0,xmm0
  42a29b:	vcvtsi2sd xmm0,xmm0,eax
  42a29f:	vmovsd xmm1,QWORD PTR [rip+0x11881]        # 43bb28 <flatcc_builder_padding_base@@Base+0x38c8>
  42a2a7:	vmulsd xmm0,xmm0,xmm1
  42a2ab:	call   42a22a <flatcc_json_parser_struct_as_root@@Base+0x1b52>
  42a2b0:	mov    DWORD PTR [rbp-0x8],eax
  42a2b3:	mov    eax,DWORD PTR [rbp-0x8]
  42a2b6:	add    eax,0x15b
  42a2bb:	lea    edx,[rax+0x7]
  42a2be:	test   eax,eax
  42a2c0:	cmovs  eax,edx
  42a2c3:	sar    eax,0x3
  42a2c6:	add    eax,0x1
  42a2c9:	mov    DWORD PTR [rbp-0x4],eax
  42a2cc:	mov    eax,DWORD PTR [rbp-0x4]
  42a2cf:	cdqe   
  42a2d1:	shl    rax,0x4
  42a2d5:	mov    rdx,rax
  42a2d8:	lea    rax,[rip+0x10961]        # 43ac40 <flatcc_builder_padding_base@@Base+0x29e0>
  42a2df:	mov    rdx,QWORD PTR [rdx+rax*1]
  42a2e3:	mov    rax,QWORD PTR [rbp-0x20]
  42a2e7:	mov    QWORD PTR [rax],rdx
  42a2ea:	mov    eax,DWORD PTR [rbp-0x4]
  42a2ed:	cdqe   
  42a2ef:	shl    rax,0x4
  42a2f3:	mov    rdx,rax
  42a2f6:	lea    rax,[rip+0x1094b]        # 43ac48 <flatcc_builder_padding_base@@Base+0x29e8>
  42a2fd:	movzx  eax,WORD PTR [rdx+rax*1]
  42a301:	movsx  edx,ax
  42a304:	mov    rax,QWORD PTR [rbp-0x20]
  42a308:	mov    DWORD PTR [rax+0x8],edx
  42a30b:	mov    eax,DWORD PTR [rbp-0x4]
  42a30e:	cdqe   
  42a310:	shl    rax,0x4
  42a314:	mov    rdx,rax
  42a317:	lea    rax,[rip+0x1092c]        # 43ac4a <flatcc_builder_padding_base@@Base+0x29ea>
  42a31e:	movzx  eax,WORD PTR [rdx+rax*1]
  42a322:	cwde   
  42a323:	leave  
  42a324:	ret    
  42a325:	push   rbp
  42a326:	mov    rbp,rsp
  42a329:	sub    rsp,0x30
  42a32d:	mov    rax,rdi
  42a330:	mov    r8,rsi
  42a333:	mov    rsi,rax
  42a336:	mov    rdi,rdx
  42a339:	mov    rdi,r8
  42a33c:	mov    QWORD PTR [rbp-0x20],rsi
  42a340:	mov    QWORD PTR [rbp-0x18],rdi
  42a344:	mov    QWORD PTR [rbp-0x30],rdx
  42a348:	mov    QWORD PTR [rbp-0x28],rcx
  42a34c:	mov    rdx,QWORD PTR [rbp-0x20]
  42a350:	mov    rax,QWORD PTR [rbp-0x30]
  42a354:	sub    rdx,rax
  42a357:	mov    rax,rdx
  42a35a:	mov    QWORD PTR [rbp-0x10],rax
  42a35e:	mov    eax,DWORD PTR [rbp-0x18]
  42a361:	mov    DWORD PTR [rbp-0x8],eax
  42a364:	mov    edx,DWORD PTR [rbp-0x18]
  42a367:	mov    eax,DWORD PTR [rbp-0x28]
  42a36a:	cmp    edx,eax
  42a36c:	jne    42a37b <flatcc_json_parser_struct_as_root@@Base+0x1ca3>
  42a36e:	mov    rdx,QWORD PTR [rbp-0x20]
  42a372:	mov    rax,QWORD PTR [rbp-0x30]
  42a376:	cmp    rdx,rax
  42a379:	jae    42a39a <flatcc_json_parser_struct_as_root@@Base+0x1cc2>
  42a37b:	lea    rcx,[rip+0x1124e]        # 43b5d0 <flatcc_builder_padding_base@@Base+0x3370>
  42a382:	mov    edx,0xef
  42a387:	lea    rsi,[rip+0x10e22]        # 43b1b0 <flatcc_builder_padding_base@@Base+0x2f50>
  42a38e:	lea    rdi,[rip+0x10e8b]        # 43b220 <flatcc_builder_padding_base@@Base+0x2fc0>
  42a395:	call   405080 <__assert_fail@plt>
  42a39a:	mov    rax,QWORD PTR [rbp-0x10]
  42a39e:	mov    rdx,QWORD PTR [rbp-0x8]
  42a3a2:	leave  
  42a3a3:	ret    
  42a3a4:	push   rbp
  42a3a5:	mov    rbp,rsp
  42a3a8:	sub    rsp,0x8
  42a3ac:	mov    rax,rdi
  42a3af:	mov    r8,rsi
  42a3b2:	mov    rsi,rax
  42a3b5:	mov    rdi,rdx
  42a3b8:	mov    rdi,r8
  42a3bb:	mov    QWORD PTR [rbp-0x70],rsi
  42a3bf:	mov    QWORD PTR [rbp-0x68],rdi
  42a3c3:	mov    QWORD PTR [rbp-0x80],rdx
  42a3c7:	mov    QWORD PTR [rbp-0x78],rcx
  42a3cb:	mov    rax,QWORD PTR [rbp-0x70]
  42a3cf:	shr    rax,0x20
  42a3d3:	mov    QWORD PTR [rbp-0x58],rax
  42a3d7:	mov    rax,QWORD PTR [rbp-0x70]
  42a3db:	and    eax,0xffffffff
  42a3de:	mov    QWORD PTR [rbp-0x50],rax
  42a3e2:	mov    rax,QWORD PTR [rbp-0x80]
  42a3e6:	shr    rax,0x20
  42a3ea:	mov    QWORD PTR [rbp-0x48],rax
  42a3ee:	mov    rax,QWORD PTR [rbp-0x80]
  42a3f2:	and    eax,0xffffffff
  42a3f5:	mov    QWORD PTR [rbp-0x40],rax
  42a3f9:	mov    rax,QWORD PTR [rbp-0x58]
  42a3fd:	imul   rax,QWORD PTR [rbp-0x48]
  42a402:	mov    QWORD PTR [rbp-0x38],rax
  42a406:	mov    rax,QWORD PTR [rbp-0x50]
  42a40a:	imul   rax,QWORD PTR [rbp-0x48]
  42a40f:	mov    QWORD PTR [rbp-0x30],rax
  42a413:	mov    rax,QWORD PTR [rbp-0x58]
  42a417:	imul   rax,QWORD PTR [rbp-0x40]
  42a41c:	mov    QWORD PTR [rbp-0x28],rax
  42a420:	mov    rax,QWORD PTR [rbp-0x50]
  42a424:	imul   rax,QWORD PTR [rbp-0x40]
  42a429:	mov    QWORD PTR [rbp-0x20],rax
  42a42d:	mov    rax,QWORD PTR [rbp-0x20]
  42a431:	shr    rax,0x20
  42a435:	mov    rdx,QWORD PTR [rbp-0x28]
  42a439:	mov    edx,edx
  42a43b:	add    rax,rdx
  42a43e:	mov    rdx,QWORD PTR [rbp-0x30]
  42a442:	mov    edx,edx
  42a444:	add    rax,rdx
  42a447:	mov    QWORD PTR [rbp-0x18],rax
  42a44b:	mov    eax,0x80000000
  42a450:	add    QWORD PTR [rbp-0x18],rax
  42a454:	mov    rax,QWORD PTR [rbp-0x28]
  42a458:	shr    rax,0x20
  42a45c:	mov    rdx,rax
  42a45f:	mov    rax,QWORD PTR [rbp-0x38]
  42a463:	add    rdx,rax
  42a466:	mov    rax,QWORD PTR [rbp-0x30]
  42a46a:	shr    rax,0x20
  42a46e:	add    rdx,rax
  42a471:	mov    rax,QWORD PTR [rbp-0x18]
  42a475:	shr    rax,0x20
  42a479:	add    rax,rdx
  42a47c:	mov    QWORD PTR [rbp-0x10],rax
  42a480:	mov    edx,DWORD PTR [rbp-0x68]
  42a483:	mov    eax,DWORD PTR [rbp-0x78]
  42a486:	add    eax,edx
  42a488:	add    eax,0x40
  42a48b:	mov    DWORD PTR [rbp-0x8],eax
  42a48e:	mov    rax,QWORD PTR [rbp-0x10]
  42a492:	mov    rdx,QWORD PTR [rbp-0x8]
  42a496:	leave  
  42a497:	ret    
  42a498:	push   rbp
  42a499:	mov    rbp,rsp
  42a49c:	sub    rsp,0x10
  42a4a0:	mov    rax,rdi
  42a4a3:	mov    rcx,rsi
  42a4a6:	mov    rdx,rcx
  42a4a9:	mov    QWORD PTR [rbp-0x10],rax
  42a4ad:	mov    QWORD PTR [rbp-0x8],rdx
  42a4b1:	mov    rax,QWORD PTR [rbp-0x10]
  42a4b5:	test   rax,rax
  42a4b8:	jne    42a4ee <flatcc_json_parser_struct_as_root@@Base+0x1e16>
  42a4ba:	lea    rcx,[rip+0x1112f]        # 43b5f0 <flatcc_builder_padding_base@@Base+0x3390>
  42a4c1:	mov    edx,0x104
  42a4c6:	lea    rsi,[rip+0x10ce3]        # 43b1b0 <flatcc_builder_padding_base@@Base+0x2f50>
  42a4cd:	lea    rdi,[rip+0x10d65]        # 43b239 <flatcc_builder_padding_base@@Base+0x2fd9>
  42a4d4:	call   405080 <__assert_fail@plt>
  42a4d9:	mov    rax,QWORD PTR [rbp-0x10]
  42a4dd:	shl    rax,0xa
  42a4e1:	mov    QWORD PTR [rbp-0x10],rax
  42a4e5:	mov    eax,DWORD PTR [rbp-0x8]
  42a4e8:	sub    eax,0xa
  42a4eb:	mov    DWORD PTR [rbp-0x8],eax
  42a4ee:	mov    rdx,QWORD PTR [rbp-0x10]
  42a4f2:	movabs rax,0xffc0000000000000
  42a4fc:	and    rax,rdx
  42a4ff:	test   rax,rax
  42a502:	je     42a4d9 <flatcc_json_parser_struct_as_root@@Base+0x1e01>
  42a504:	jmp    42a51a <flatcc_json_parser_struct_as_root@@Base+0x1e42>
  42a506:	mov    rax,QWORD PTR [rbp-0x10]
  42a50a:	add    rax,rax
  42a50d:	mov    QWORD PTR [rbp-0x10],rax
  42a511:	mov    eax,DWORD PTR [rbp-0x8]
  42a514:	sub    eax,0x1
  42a517:	mov    DWORD PTR [rbp-0x8],eax
  42a51a:	mov    rax,QWORD PTR [rbp-0x10]
  42a51e:	test   rax,rax
  42a521:	jns    42a506 <flatcc_json_parser_struct_as_root@@Base+0x1e2e>
  42a523:	mov    rax,QWORD PTR [rbp-0x10]
  42a527:	mov    rdx,QWORD PTR [rbp-0x8]
  42a52b:	leave  
  42a52c:	ret    
  42a52d:	push   rbp
  42a52e:	mov    rbp,rsp
  42a531:	sub    rsp,0x30
  42a535:	vmovsd QWORD PTR [rbp-0x28],xmm0
  42a53a:	mov    rax,QWORD PTR [rbp-0x28]
  42a53e:	mov    QWORD PTR [rbp-0x30],rax
  42a542:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  42a547:	call   42a1fa <flatcc_json_parser_struct_as_root@@Base+0x1b22>
  42a54c:	mov    QWORD PTR [rbp-0x18],rax
  42a550:	movabs rax,0x7ff0000000000000
  42a55a:	and    rax,QWORD PTR [rbp-0x18]
  42a55e:	test   rax,rax
  42a561:	jne    42a57e <flatcc_json_parser_struct_as_root@@Base+0x1ea6>
  42a563:	movabs rax,0xfffffffffffff
  42a56d:	and    rax,QWORD PTR [rbp-0x18]
  42a571:	mov    QWORD PTR [rbp-0x10],rax
  42a575:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  42a57c:	jmp    42a5b5 <flatcc_json_parser_struct_as_root@@Base+0x1edd>
  42a57e:	movabs rax,0xfffffffffffff
  42a588:	and    rax,QWORD PTR [rbp-0x18]
  42a58c:	mov    rdx,rax
  42a58f:	movabs rax,0x10000000000000
  42a599:	add    rax,rdx
  42a59c:	mov    QWORD PTR [rbp-0x10],rax
  42a5a0:	mov    rax,QWORD PTR [rbp-0x18]
  42a5a4:	shr    rax,0x34
  42a5a8:	and    eax,0x7ff
  42a5ad:	sub    eax,0x433
  42a5b2:	mov    DWORD PTR [rbp-0x8],eax
  42a5b5:	mov    rax,QWORD PTR [rbp-0x10]
  42a5b9:	mov    rdx,QWORD PTR [rbp-0x8]
  42a5bd:	leave  
  42a5be:	ret    
  42a5bf:	push   rbp
  42a5c0:	mov    rbp,rsp
  42a5c3:	sub    rsp,0x60
  42a5c7:	mov    rax,rdi
  42a5ca:	mov    rcx,rsi
  42a5cd:	mov    rdx,rcx
  42a5d0:	mov    QWORD PTR [rbp-0x50],rax
  42a5d4:	mov    QWORD PTR [rbp-0x48],rdx
  42a5d8:	movabs rax,0x10000000000000
  42a5e2:	mov    QWORD PTR [rbp-0x20],rax
  42a5e6:	movabs rax,0xfffffffffffff
  42a5f0:	mov    QWORD PTR [rbp-0x18],rax
  42a5f4:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  42a5fb:	mov    DWORD PTR [rbp-0x30],0x433
  42a602:	mov    DWORD PTR [rbp-0x2c],0x34
  42a609:	mov    rax,QWORD PTR [rbp-0x50]
  42a60d:	mov    rdx,QWORD PTR [rbp-0x48]
  42a611:	mov    QWORD PTR [rbp-0x10],rax
  42a615:	mov    QWORD PTR [rbp-0x8],rdx
  42a619:	jmp    42a62f <flatcc_json_parser_struct_as_root@@Base+0x1f57>
  42a61b:	mov    rax,QWORD PTR [rbp-0x10]
  42a61f:	shr    rax,1
  42a622:	mov    QWORD PTR [rbp-0x10],rax
  42a626:	mov    eax,DWORD PTR [rbp-0x8]
  42a629:	add    eax,0x1
  42a62c:	mov    DWORD PTR [rbp-0x8],eax
  42a62f:	mov    rax,QWORD PTR [rbp-0x10]
  42a633:	mov    rcx,QWORD PTR [rbp-0x20]
  42a637:	mov    rdx,QWORD PTR [rbp-0x18]
  42a63b:	add    rdx,rcx
  42a63e:	cmp    rax,rdx
  42a641:	ja     42a61b <flatcc_json_parser_struct_as_root@@Base+0x1f43>
  42a643:	mov    eax,DWORD PTR [rbp-0x8]
  42a646:	cmp    eax,DWORD PTR [rbp-0x34]
  42a649:	jge    42a668 <flatcc_json_parser_struct_as_root@@Base+0x1f90>
  42a64b:	mov    rax,QWORD PTR [rip+0x114ce]        # 43bb20 <flatcc_builder_padding_base@@Base+0x38c0>
  42a652:	jmp    42a6d1 <flatcc_json_parser_struct_as_root@@Base+0x1ff9>
  42a654:	mov    rax,QWORD PTR [rbp-0x10]
  42a658:	add    rax,rax
  42a65b:	mov    QWORD PTR [rbp-0x10],rax
  42a65f:	mov    eax,DWORD PTR [rbp-0x8]
  42a662:	sub    eax,0x1
  42a665:	mov    DWORD PTR [rbp-0x8],eax
  42a668:	mov    eax,DWORD PTR [rbp-0x8]
  42a66b:	cmp    eax,DWORD PTR [rbp-0x34]
  42a66e:	jle    42a67d <flatcc_json_parser_struct_as_root@@Base+0x1fa5>
  42a670:	mov    rax,QWORD PTR [rbp-0x10]
  42a674:	and    rax,QWORD PTR [rbp-0x20]
  42a678:	test   rax,rax
  42a67b:	je     42a654 <flatcc_json_parser_struct_as_root@@Base+0x1f7c>
  42a67d:	mov    eax,DWORD PTR [rbp-0x8]
  42a680:	cmp    eax,DWORD PTR [rbp-0x34]
  42a683:	jne    42a69c <flatcc_json_parser_struct_as_root@@Base+0x1fc4>
  42a685:	mov    rax,QWORD PTR [rbp-0x10]
  42a689:	and    rax,QWORD PTR [rbp-0x20]
  42a68d:	test   rax,rax
  42a690:	jne    42a69c <flatcc_json_parser_struct_as_root@@Base+0x1fc4>
  42a692:	mov    QWORD PTR [rbp-0x28],0x0
  42a69a:	jmp    42a6aa <flatcc_json_parser_struct_as_root@@Base+0x1fd2>
  42a69c:	mov    edx,DWORD PTR [rbp-0x8]
  42a69f:	mov    eax,DWORD PTR [rbp-0x30]
  42a6a2:	add    eax,edx
  42a6a4:	cdqe   
  42a6a6:	mov    QWORD PTR [rbp-0x28],rax
  42a6aa:	mov    rax,QWORD PTR [rbp-0x10]
  42a6ae:	and    rax,QWORD PTR [rbp-0x18]
  42a6b2:	mov    rdx,rax
  42a6b5:	mov    eax,DWORD PTR [rbp-0x2c]
  42a6b8:	mov    rcx,QWORD PTR [rbp-0x28]
  42a6bc:	shlx   rax,rcx,rax
  42a6c1:	or     rax,rdx
  42a6c4:	mov    rdi,rax
  42a6c7:	call   42a213 <flatcc_json_parser_struct_as_root@@Base+0x1b3b>
  42a6cc:	vmovq  rax,xmm0
  42a6d1:	mov    QWORD PTR [rbp-0x58],rax
  42a6d5:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  42a6da:	leave  
  42a6db:	ret    
  42a6dc:	push   rbp
  42a6dd:	mov    rbp,rsp
  42a6e0:	mov    DWORD PTR [rbp-0x14],edi
  42a6e3:	mov    DWORD PTR [rbp-0x18],esi
  42a6e6:	mov    QWORD PTR [rbp-0x20],rdx
  42a6ea:	mov    eax,DWORD PTR [rbp-0x18]
  42a6ed:	add    eax,0x1
  42a6f0:	imul   eax,eax,0x4d1
  42a6f6:	sar    eax,0xc
  42a6f9:	add    eax,0x1
  42a6fc:	mov    DWORD PTR [rbp-0x4],eax
  42a6ff:	mov    eax,DWORD PTR [rbp-0x4]
  42a702:	cdqe   
  42a704:	lea    rdx,[rax*4+0x0]
  42a70c:	lea    rax,[rip+0x10b4d]        # 43b260 <flatcc_builder_padding_base@@Base+0x3000>
  42a713:	mov    eax,DWORD PTR [rdx+rax*1]
  42a716:	cmp    eax,DWORD PTR [rbp-0x14]
  42a719:	jbe    42a71f <flatcc_json_parser_struct_as_root@@Base+0x2047>
  42a71b:	sub    DWORD PTR [rbp-0x4],0x1
  42a71f:	mov    eax,DWORD PTR [rbp-0x4]
  42a722:	cdqe   
  42a724:	lea    rdx,[rax*4+0x0]
  42a72c:	lea    rax,[rip+0x10b2d]        # 43b260 <flatcc_builder_padding_base@@Base+0x3000>
  42a733:	mov    edx,DWORD PTR [rdx+rax*1]
  42a736:	mov    rax,QWORD PTR [rbp-0x20]
  42a73a:	mov    DWORD PTR [rax],edx
  42a73c:	mov    eax,DWORD PTR [rbp-0x4]
  42a73f:	pop    rbp
  42a740:	ret    
  42a741:	push   rbp
  42a742:	mov    rbp,rsp
  42a745:	mov    QWORD PTR [rbp-0x18],rdi
  42a749:	mov    DWORD PTR [rbp-0x1c],esi
  42a74c:	mov    QWORD PTR [rbp-0x28],rdx
  42a750:	mov    QWORD PTR [rbp-0x30],rcx
  42a754:	mov    QWORD PTR [rbp-0x38],r8
  42a758:	mov    QWORD PTR [rbp-0x40],r9
  42a75c:	mov    rax,QWORD PTR [rbp-0x28]
  42a760:	sub    rax,QWORD PTR [rbp+0x10]
  42a764:	mov    QWORD PTR [rbp-0x10],rax
  42a768:	mov    rdx,QWORD PTR [rbp-0x28]
  42a76c:	mov    rax,QWORD PTR [rbp+0x10]
  42a770:	add    rax,rdx
  42a773:	mov    QWORD PTR [rbp-0x8],rax
  42a777:	jmp    42a799 <flatcc_json_parser_struct_as_root@@Base+0x20c1>
  42a779:	mov    eax,DWORD PTR [rbp-0x1c]
  42a77c:	cdqe   
  42a77e:	lea    rdx,[rax-0x1]
  42a782:	mov    rax,QWORD PTR [rbp-0x18]
  42a786:	add    rax,rdx
  42a789:	movzx  edx,BYTE PTR [rax]
  42a78c:	sub    edx,0x1
  42a78f:	mov    BYTE PTR [rax],dl
  42a791:	mov    rax,QWORD PTR [rbp-0x40]
  42a795:	add    QWORD PTR [rbp-0x38],rax
  42a799:	mov    rax,QWORD PTR [rbp-0x38]
  42a79d:	cmp    rax,QWORD PTR [rbp-0x10]
  42a7a1:	jae    42a7e1 <flatcc_json_parser_struct_as_root@@Base+0x2109>
  42a7a3:	mov    rax,QWORD PTR [rbp-0x30]
  42a7a7:	sub    rax,QWORD PTR [rbp-0x38]
  42a7ab:	cmp    rax,QWORD PTR [rbp-0x40]
  42a7af:	jb     42a7e1 <flatcc_json_parser_struct_as_root@@Base+0x2109>
  42a7b1:	mov    rdx,QWORD PTR [rbp-0x38]
  42a7b5:	mov    rax,QWORD PTR [rbp-0x40]
  42a7b9:	add    rax,rdx
  42a7bc:	cmp    rax,QWORD PTR [rbp-0x10]
  42a7c0:	jb     42a779 <flatcc_json_parser_struct_as_root@@Base+0x20a1>
  42a7c2:	mov    rax,QWORD PTR [rbp-0x10]
  42a7c6:	sub    rax,QWORD PTR [rbp-0x38]
  42a7ca:	mov    rdx,rax
  42a7cd:	mov    rcx,QWORD PTR [rbp-0x38]
  42a7d1:	mov    rax,QWORD PTR [rbp-0x40]
  42a7d5:	add    rax,rcx
  42a7d8:	sub    rax,QWORD PTR [rbp-0x10]
  42a7dc:	cmp    rdx,rax
  42a7df:	jae    42a779 <flatcc_json_parser_struct_as_root@@Base+0x20a1>
  42a7e1:	mov    rax,QWORD PTR [rbp-0x38]
  42a7e5:	cmp    rax,QWORD PTR [rbp-0x8]
  42a7e9:	jae    42a830 <flatcc_json_parser_struct_as_root@@Base+0x2158>
  42a7eb:	mov    rax,QWORD PTR [rbp-0x30]
  42a7ef:	sub    rax,QWORD PTR [rbp-0x38]
  42a7f3:	cmp    rax,QWORD PTR [rbp-0x40]
  42a7f7:	jb     42a830 <flatcc_json_parser_struct_as_root@@Base+0x2158>
  42a7f9:	mov    rdx,QWORD PTR [rbp-0x38]
  42a7fd:	mov    rax,QWORD PTR [rbp-0x40]
  42a801:	add    rax,rdx
  42a804:	cmp    rax,QWORD PTR [rbp-0x8]
  42a808:	jb     42a829 <flatcc_json_parser_struct_as_root@@Base+0x2151>
  42a80a:	mov    rax,QWORD PTR [rbp-0x8]
  42a80e:	sub    rax,QWORD PTR [rbp-0x38]
  42a812:	mov    rdx,rax
  42a815:	mov    rcx,QWORD PTR [rbp-0x38]
  42a819:	mov    rax,QWORD PTR [rbp-0x40]
  42a81d:	add    rax,rcx
  42a820:	sub    rax,QWORD PTR [rbp-0x8]
  42a824:	cmp    rdx,rax
  42a827:	jbe    42a830 <flatcc_json_parser_struct_as_root@@Base+0x2158>
  42a829:	mov    eax,0x0
  42a82e:	jmp    42a862 <flatcc_json_parser_struct_as_root@@Base+0x218a>
  42a830:	mov    rax,QWORD PTR [rbp+0x10]
  42a834:	add    rax,rax
  42a837:	cmp    rax,QWORD PTR [rbp-0x38]
  42a83b:	ja     42a85d <flatcc_json_parser_struct_as_root@@Base+0x2185>
  42a83d:	mov    rax,QWORD PTR [rbp+0x10]
  42a841:	lea    rdx,[rax*4+0x0]
  42a849:	mov    rax,QWORD PTR [rbp-0x30]
  42a84d:	sub    rax,rdx
  42a850:	cmp    rax,QWORD PTR [rbp-0x38]
  42a854:	jb     42a85d <flatcc_json_parser_struct_as_root@@Base+0x2185>
  42a856:	mov    eax,0x1
  42a85b:	jmp    42a862 <flatcc_json_parser_struct_as_root@@Base+0x218a>
  42a85d:	mov    eax,0x0
  42a862:	pop    rbp
  42a863:	ret    
  42a864:	push   rbp
  42a865:	mov    rbp,rsp
  42a868:	push   r12
  42a86a:	push   rbx
  42a86b:	sub    rsp,0xd0
  42a872:	mov    rax,rdi
  42a875:	mov    r10,rsi
  42a878:	mov    rsi,rax
  42a87b:	mov    rdi,rdx
  42a87e:	mov    rdi,r10
  42a881:	mov    QWORD PTR [rbp-0xa0],rsi
  42a888:	mov    QWORD PTR [rbp-0x98],rdi
  42a88f:	mov    QWORD PTR [rbp-0xb0],rdx
  42a896:	mov    QWORD PTR [rbp-0xa8],rcx
  42a89d:	mov    QWORD PTR [rbp-0xc0],r8
  42a8a4:	mov    QWORD PTR [rbp-0xb8],r9
  42a8ab:	mov    rax,QWORD PTR [rbp+0x10]
  42a8af:	mov    QWORD PTR [rbp-0xc8],rax
  42a8b6:	mov    rax,QWORD PTR [rbp+0x18]
  42a8ba:	mov    QWORD PTR [rbp-0xd0],rax
  42a8c1:	mov    rax,QWORD PTR [rbp+0x20]
  42a8c5:	mov    QWORD PTR [rbp-0xd8],rax
  42a8cc:	mov    rax,QWORD PTR fs:0x28
  42a8d5:	mov    QWORD PTR [rbp-0x18],rax
  42a8d9:	xor    eax,eax
  42a8db:	mov    QWORD PTR [rbp-0x78],0x1
  42a8e3:	mov    rax,QWORD PTR [rbp-0xa0]
  42a8ea:	sub    rax,QWORD PTR [rbp-0x78]
  42a8ee:	mov    QWORD PTR [rbp-0x60],rax
  42a8f2:	mov    eax,DWORD PTR [rbp-0x98]
  42a8f8:	mov    DWORD PTR [rbp-0x58],eax
  42a8fb:	mov    rdx,QWORD PTR [rbp-0xc0]
  42a902:	mov    rax,QWORD PTR [rbp-0x78]
  42a906:	add    rax,rdx
  42a909:	mov    QWORD PTR [rbp-0x50],rax
  42a90d:	mov    eax,DWORD PTR [rbp-0xb8]
  42a913:	mov    DWORD PTR [rbp-0x48],eax
  42a916:	mov    rax,QWORD PTR [rbp-0x60]
  42a91a:	mov    rdx,QWORD PTR [rbp-0x58]
  42a91e:	mov    rdi,QWORD PTR [rbp-0x50]
  42a922:	mov    rsi,QWORD PTR [rbp-0x48]
  42a926:	mov    rcx,rdx
  42a929:	mov    rdx,rax
  42a92c:	call   42a325 <flatcc_json_parser_struct_as_root@@Base+0x1c4d>
  42a931:	mov    QWORD PTR [rbp-0x40],rax
  42a935:	mov    QWORD PTR [rbp-0x38],rdx
  42a939:	mov    eax,DWORD PTR [rbp-0xa8]
  42a93f:	neg    eax
  42a941:	mov    edx,0x1
  42a946:	shlx   rax,rdx,rax
  42a94b:	mov    QWORD PTR [rbp-0x30],rax
  42a94f:	mov    eax,DWORD PTR [rbp-0xa8]
  42a955:	mov    DWORD PTR [rbp-0x28],eax
  42a958:	mov    rdx,QWORD PTR [rbp-0x50]
  42a95c:	mov    eax,DWORD PTR [rbp-0x28]
  42a95f:	neg    eax
  42a961:	shrx   rax,rdx,rax
  42a966:	mov    DWORD PTR [rbp-0x84],eax
  42a96c:	mov    rax,QWORD PTR [rbp-0x50]
  42a970:	mov    rdx,QWORD PTR [rbp-0x30]
  42a974:	sub    rdx,0x1
  42a978:	and    rax,rdx
  42a97b:	mov    QWORD PTR [rbp-0x70],rax
  42a97f:	mov    eax,DWORD PTR [rbp-0x28]
  42a982:	lea    ecx,[rax+0x40]
  42a985:	lea    rdx,[rbp-0x88]
  42a98c:	mov    eax,DWORD PTR [rbp-0x84]
  42a992:	mov    esi,ecx
  42a994:	mov    edi,eax
  42a996:	call   42a6dc <flatcc_json_parser_struct_as_root@@Base+0x2004>
  42a99b:	mov    edx,eax
  42a99d:	mov    rax,QWORD PTR [rbp-0xd8]
  42a9a4:	mov    DWORD PTR [rax],edx
  42a9a6:	mov    rax,QWORD PTR [rbp-0xd0]
  42a9ad:	mov    DWORD PTR [rax],0x0
  42a9b3:	jmp    42aade <flatcc_json_parser_struct_as_root@@Base+0x2406>
  42a9b8:	mov    ebx,DWORD PTR [rbp-0x88]
  42a9be:	mov    eax,DWORD PTR [rbp-0x84]
  42a9c4:	mov    edx,0x0
  42a9c9:	div    ebx
  42a9cb:	mov    DWORD PTR [rbp-0x80],eax
  42a9ce:	mov    rax,QWORD PTR [rbp-0xd0]
  42a9d5:	mov    eax,DWORD PTR [rax]
  42a9d7:	movsxd rdx,eax
  42a9da:	mov    rax,QWORD PTR [rbp-0xc8]
  42a9e1:	add    rax,rdx
  42a9e4:	mov    edx,DWORD PTR [rbp-0x80]
  42a9e7:	add    edx,0x30
  42a9ea:	mov    BYTE PTR [rax],dl
  42a9ec:	mov    rax,QWORD PTR [rbp-0xd0]
  42a9f3:	mov    eax,DWORD PTR [rax]
  42a9f5:	lea    edx,[rax+0x1]
  42a9f8:	mov    rax,QWORD PTR [rbp-0xd0]
  42a9ff:	mov    DWORD PTR [rax],edx
  42aa01:	mov    ecx,DWORD PTR [rbp-0x88]
  42aa07:	mov    eax,DWORD PTR [rbp-0x84]
  42aa0d:	mov    edx,0x0
  42aa12:	div    ecx
  42aa14:	mov    DWORD PTR [rbp-0x84],edx
  42aa1a:	mov    rax,QWORD PTR [rbp-0xd8]
  42aa21:	mov    eax,DWORD PTR [rax]
  42aa23:	lea    edx,[rax-0x1]
  42aa26:	mov    rax,QWORD PTR [rbp-0xd8]
  42aa2d:	mov    DWORD PTR [rax],edx
  42aa2f:	mov    edx,DWORD PTR [rbp-0x84]
  42aa35:	mov    eax,DWORD PTR [rbp-0x28]
  42aa38:	neg    eax
  42aa3a:	shlx   rdx,rdx,rax
  42aa3f:	mov    rax,QWORD PTR [rbp-0x70]
  42aa43:	add    rax,rdx
  42aa46:	mov    QWORD PTR [rbp-0x68],rax
  42aa4a:	mov    rax,QWORD PTR [rbp-0x40]
  42aa4e:	cmp    rax,QWORD PTR [rbp-0x68]
  42aa52:	jbe    42aac6 <flatcc_json_parser_struct_as_root@@Base+0x23ee>
  42aa54:	mov    eax,DWORD PTR [rbp-0x88]
  42aa5a:	mov    edx,eax
  42aa5c:	mov    eax,DWORD PTR [rbp-0x28]
  42aa5f:	neg    eax
  42aa61:	shlx   r12,rdx,rax
  42aa66:	mov    rbx,QWORD PTR [rbp-0x40]
  42aa6a:	mov    rax,QWORD PTR [rbp-0xb0]
  42aa71:	mov    rdx,QWORD PTR [rbp-0xa8]
  42aa78:	mov    rdi,QWORD PTR [rbp-0x50]
  42aa7c:	mov    rsi,QWORD PTR [rbp-0x48]
  42aa80:	mov    rcx,rdx
  42aa83:	mov    rdx,rax
  42aa86:	call   42a325 <flatcc_json_parser_struct_as_root@@Base+0x1c4d>
  42aa8b:	mov    rdi,rax
  42aa8e:	mov    rax,QWORD PTR [rbp-0xd0]
  42aa95:	mov    esi,DWORD PTR [rax]
  42aa97:	mov    rdx,QWORD PTR [rbp-0x68]
  42aa9b:	mov    rax,QWORD PTR [rbp-0xc8]
  42aaa2:	sub    rsp,0x8
  42aaa6:	push   QWORD PTR [rbp-0x78]
  42aaa9:	mov    r9,r12
  42aaac:	mov    r8,rdx
  42aaaf:	mov    rcx,rbx
  42aab2:	mov    rdx,rdi
  42aab5:	mov    rdi,rax
  42aab8:	call   42a741 <flatcc_json_parser_struct_as_root@@Base+0x2069>
  42aabd:	add    rsp,0x10
  42aac1:	jmp    42ac02 <flatcc_json_parser_struct_as_root@@Base+0x252a>
  42aac6:	mov    eax,DWORD PTR [rbp-0x88]
  42aacc:	mov    edx,0xcccccccd
  42aad1:	mul    edx
  42aad3:	mov    eax,edx
  42aad5:	shr    eax,0x3
  42aad8:	mov    DWORD PTR [rbp-0x88],eax
  42aade:	mov    rax,QWORD PTR [rbp-0xd8]
  42aae5:	mov    eax,DWORD PTR [rax]
  42aae7:	test   eax,eax
  42aae9:	jg     42a9b8 <flatcc_json_parser_struct_as_root@@Base+0x22e0>
  42aaef:	mov    rdx,QWORD PTR [rbp-0x70]
  42aaf3:	mov    rax,rdx
  42aaf6:	shl    rax,0x2
  42aafa:	add    rax,rdx
  42aafd:	add    rax,rax
  42ab00:	mov    QWORD PTR [rbp-0x70],rax
  42ab04:	mov    rdx,QWORD PTR [rbp-0x78]
  42ab08:	mov    rax,rdx
  42ab0b:	shl    rax,0x2
  42ab0f:	add    rax,rdx
  42ab12:	add    rax,rax
  42ab15:	mov    QWORD PTR [rbp-0x78],rax
  42ab19:	mov    rdx,QWORD PTR [rbp-0x40]
  42ab1d:	mov    rax,rdx
  42ab20:	shl    rax,0x2
  42ab24:	add    rax,rdx
  42ab27:	add    rax,rax
  42ab2a:	mov    QWORD PTR [rbp-0x40],rax
  42ab2e:	mov    eax,DWORD PTR [rbp-0x28]
  42ab31:	neg    eax
  42ab33:	mov    rdx,QWORD PTR [rbp-0x70]
  42ab37:	shrx   rax,rdx,rax
  42ab3c:	mov    DWORD PTR [rbp-0x7c],eax
  42ab3f:	mov    rax,QWORD PTR [rbp-0xd0]
  42ab46:	mov    eax,DWORD PTR [rax]
  42ab48:	movsxd rdx,eax
  42ab4b:	mov    rax,QWORD PTR [rbp-0xc8]
  42ab52:	add    rax,rdx
  42ab55:	mov    edx,DWORD PTR [rbp-0x7c]
  42ab58:	add    edx,0x30
  42ab5b:	mov    BYTE PTR [rax],dl
  42ab5d:	mov    rax,QWORD PTR [rbp-0xd0]
  42ab64:	mov    eax,DWORD PTR [rax]
  42ab66:	lea    edx,[rax+0x1]
  42ab69:	mov    rax,QWORD PTR [rbp-0xd0]
  42ab70:	mov    DWORD PTR [rax],edx
  42ab72:	mov    rax,QWORD PTR [rbp-0x30]
  42ab76:	sub    rax,0x1
  42ab7a:	and    QWORD PTR [rbp-0x70],rax
  42ab7e:	mov    rax,QWORD PTR [rbp-0xd8]
  42ab85:	mov    eax,DWORD PTR [rax]
  42ab87:	lea    edx,[rax-0x1]
  42ab8a:	mov    rax,QWORD PTR [rbp-0xd8]
  42ab91:	mov    DWORD PTR [rax],edx
  42ab93:	mov    rax,QWORD PTR [rbp-0x40]
  42ab97:	cmp    rax,QWORD PTR [rbp-0x70]
  42ab9b:	jbe    42aaef <flatcc_json_parser_struct_as_root@@Base+0x2417>
  42aba1:	mov    r12,QWORD PTR [rbp-0x30]
  42aba5:	mov    rbx,QWORD PTR [rbp-0x40]
  42aba9:	mov    rax,QWORD PTR [rbp-0xb0]
  42abb0:	mov    rdx,QWORD PTR [rbp-0xa8]
  42abb7:	mov    rdi,QWORD PTR [rbp-0x50]
  42abbb:	mov    rsi,QWORD PTR [rbp-0x48]
  42abbf:	mov    rcx,rdx
  42abc2:	mov    rdx,rax
  42abc5:	call   42a325 <flatcc_json_parser_struct_as_root@@Base+0x1c4d>
  42abca:	imul   rax,QWORD PTR [rbp-0x78]
  42abcf:	mov    rdx,rax
  42abd2:	mov    rax,QWORD PTR [rbp-0xd0]
  42abd9:	mov    esi,DWORD PTR [rax]
  42abdb:	mov    rcx,QWORD PTR [rbp-0x70]
  42abdf:	mov    rax,QWORD PTR [rbp-0xc8]
  42abe6:	sub    rsp,0x8
  42abea:	push   QWORD PTR [rbp-0x78]
  42abed:	mov    r9,r12
  42abf0:	mov    r8,rcx
  42abf3:	mov    rcx,rbx
  42abf6:	mov    rdi,rax
  42abf9:	call   42a741 <flatcc_json_parser_struct_as_root@@Base+0x2069>
  42abfe:	add    rsp,0x10
  42ac02:	mov    rbx,QWORD PTR [rbp-0x18]
  42ac06:	xor    rbx,QWORD PTR fs:0x28
  42ac0f:	je     42ac16 <flatcc_json_parser_struct_as_root@@Base+0x253e>
  42ac11:	call   405070 <__stack_chk_fail@plt>
  42ac16:	lea    rsp,[rbp-0x10]
  42ac1a:	pop    rbx
  42ac1b:	pop    r12
  42ac1d:	pop    rbp
  42ac1e:	ret    
  42ac1f:	push   rbp
  42ac20:	mov    rbp,rsp
  42ac23:	push   rbx
  42ac24:	sub    rsp,0xc8
  42ac2b:	vmovsd QWORD PTR [rbp-0xa8],xmm0
  42ac33:	mov    QWORD PTR [rbp-0xb0],rdi
  42ac3a:	mov    QWORD PTR [rbp-0xb8],rsi
  42ac41:	mov    QWORD PTR [rbp-0xc0],rdx
  42ac48:	mov    rax,QWORD PTR fs:0x28
  42ac51:	mov    QWORD PTR [rbp-0x18],rax
  42ac55:	xor    eax,eax
  42ac57:	mov    rax,QWORD PTR [rbp-0xa8]
  42ac5e:	mov    QWORD PTR [rbp-0xc8],rax
  42ac65:	vmovsd xmm0,QWORD PTR [rbp-0xc8]
  42ac6d:	call   42a52d <flatcc_json_parser_struct_as_root@@Base+0x1e55>
  42ac72:	mov    QWORD PTR [rbp-0x80],rax
  42ac76:	mov    QWORD PTR [rbp-0x78],rdx
  42ac7a:	mov    rdx,QWORD PTR [rbp-0x80]
  42ac7e:	mov    rax,QWORD PTR [rbp-0x78]
  42ac82:	mov    rdi,rdx
  42ac85:	mov    rsi,rax
  42ac88:	call   42a498 <flatcc_json_parser_struct_as_root@@Base+0x1dc0>
  42ac8d:	mov    QWORD PTR [rbp-0x70],rax
  42ac91:	mov    QWORD PTR [rbp-0x68],rdx
  42ac95:	mov    rax,QWORD PTR [rbp-0x80]
  42ac99:	add    rax,rax
  42ac9c:	add    rax,0x1
  42aca0:	mov    QWORD PTR [rbp-0x60],rax
  42aca4:	mov    eax,DWORD PTR [rbp-0x78]
  42aca7:	sub    eax,0x1
  42acaa:	mov    DWORD PTR [rbp-0x58],eax
  42acad:	mov    rdx,QWORD PTR [rbp-0x60]
  42acb1:	mov    rax,QWORD PTR [rbp-0x58]
  42acb5:	mov    rdi,rdx
  42acb8:	mov    rsi,rax
  42acbb:	call   42a498 <flatcc_json_parser_struct_as_root@@Base+0x1dc0>
  42acc0:	mov    QWORD PTR [rbp-0x50],rax
  42acc4:	mov    QWORD PTR [rbp-0x48],rdx
  42acc8:	mov    rax,QWORD PTR [rbp-0xa8]
  42accf:	mov    QWORD PTR [rbp-0xc8],rax
  42acd6:	vmovsd xmm0,QWORD PTR [rbp-0xc8]
  42acde:	call   42a1fa <flatcc_json_parser_struct_as_root@@Base+0x1b22>
  42ace3:	mov    QWORD PTR [rbp-0x88],rax
  42acea:	vmovsd xmm0,QWORD PTR [rbp-0xa8]
  42acf2:	vxorpd xmm1,xmm1,xmm1
  42acf6:	vucomisd xmm0,xmm1
  42acfa:	seta   al
  42acfd:	xor    eax,0x1
  42ad00:	test   al,al
  42ad02:	jne    42ad1e <flatcc_json_parser_struct_as_root@@Base+0x2646>
  42ad04:	vmovsd xmm0,QWORD PTR [rip+0x10e24]        # 43bb30 <flatcc_builder_padding_base@@Base+0x38d0>
  42ad0c:	vucomisd xmm0,QWORD PTR [rbp-0xa8]
  42ad14:	setae  al
  42ad17:	xor    eax,0x1
  42ad1a:	test   al,al
  42ad1c:	je     42ad3d <flatcc_json_parser_struct_as_root@@Base+0x2665>
  42ad1e:	lea    rcx,[rip+0x108e3]        # 43b608 <flatcc_builder_padding_base@@Base+0x33a8>
  42ad25:	mov    edx,0x8a
  42ad2a:	lea    rsi,[rip+0x1055f]        # 43b290 <flatcc_builder_padding_base@@Base+0x3030>
  42ad31:	lea    rdi,[rip+0x105d0]        # 43b308 <flatcc_builder_padding_base@@Base+0x30a8>
  42ad38:	call   405080 <__assert_fail@plt>
  42ad3d:	movabs rax,0xfffffffffffff
  42ad47:	and    rax,QWORD PTR [rbp-0x88]
  42ad4e:	test   rax,rax
  42ad51:	jne    42ad84 <flatcc_json_parser_struct_as_root@@Base+0x26ac>
  42ad53:	movabs rax,0x7ff0000000000000
  42ad5d:	and    rax,QWORD PTR [rbp-0x88]
  42ad64:	test   rax,rax
  42ad67:	je     42ad84 <flatcc_json_parser_struct_as_root@@Base+0x26ac>
  42ad69:	mov    rax,QWORD PTR [rbp-0x80]
  42ad6d:	shl    rax,0x2
  42ad71:	sub    rax,0x1
  42ad75:	mov    QWORD PTR [rbp-0x40],rax
  42ad79:	mov    eax,DWORD PTR [rbp-0x78]
  42ad7c:	sub    eax,0x2
  42ad7f:	mov    DWORD PTR [rbp-0x38],eax
  42ad82:	jmp    42ad9c <flatcc_json_parser_struct_as_root@@Base+0x26c4>
  42ad84:	mov    rax,QWORD PTR [rbp-0x80]
  42ad88:	add    rax,rax
  42ad8b:	sub    rax,0x1
  42ad8f:	mov    QWORD PTR [rbp-0x40],rax
  42ad93:	mov    eax,DWORD PTR [rbp-0x78]
  42ad96:	sub    eax,0x1
  42ad99:	mov    DWORD PTR [rbp-0x38],eax
  42ad9c:	mov    rdx,QWORD PTR [rbp-0x40]
  42ada0:	mov    ecx,DWORD PTR [rbp-0x38]
  42ada3:	mov    eax,DWORD PTR [rbp-0x48]
  42ada6:	sub    ecx,eax
  42ada8:	mov    eax,ecx
  42adaa:	shlx   rax,rdx,rax
  42adaf:	mov    QWORD PTR [rbp-0x40],rax
  42adb3:	mov    eax,DWORD PTR [rbp-0x48]
  42adb6:	mov    DWORD PTR [rbp-0x38],eax
  42adb9:	mov    eax,DWORD PTR [rbp-0x68]
  42adbc:	mov    edx,0xffffff84
  42adc1:	sub    edx,eax
  42adc3:	lea    rax,[rbp-0x30]
  42adc7:	mov    rsi,rax
  42adca:	mov    edi,edx
  42adcc:	call   42a282 <flatcc_json_parser_struct_as_root@@Base+0x1baa>
  42add1:	mov    DWORD PTR [rbp-0x90],eax
  42add7:	mov    rax,QWORD PTR [rbp-0x30]
  42addb:	mov    rdx,QWORD PTR [rbp-0x28]
  42addf:	mov    rdi,QWORD PTR [rbp-0x70]
  42ade3:	mov    rsi,QWORD PTR [rbp-0x68]
  42ade7:	mov    rcx,rdx
  42adea:	mov    rdx,rax
  42aded:	call   42a3a4 <flatcc_json_parser_struct_as_root@@Base+0x1ccc>
  42adf2:	mov    QWORD PTR [rbp-0x70],rax
  42adf6:	mov    QWORD PTR [rbp-0x68],rdx
  42adfa:	mov    rax,QWORD PTR [rbp-0x30]
  42adfe:	mov    rdx,QWORD PTR [rbp-0x28]
  42ae02:	mov    rdi,QWORD PTR [rbp-0x40]
  42ae06:	mov    rsi,QWORD PTR [rbp-0x38]
  42ae0a:	mov    rcx,rdx
  42ae0d:	mov    rdx,rax
  42ae10:	call   42a3a4 <flatcc_json_parser_struct_as_root@@Base+0x1ccc>
  42ae15:	mov    QWORD PTR [rbp-0x40],rax
  42ae19:	mov    QWORD PTR [rbp-0x38],rdx
  42ae1d:	mov    rax,QWORD PTR [rbp-0x30]
  42ae21:	mov    rdx,QWORD PTR [rbp-0x28]
  42ae25:	mov    rdi,QWORD PTR [rbp-0x50]
  42ae29:	mov    rsi,QWORD PTR [rbp-0x48]
  42ae2d:	mov    rcx,rdx
  42ae30:	mov    rdx,rax
  42ae33:	call   42a3a4 <flatcc_json_parser_struct_as_root@@Base+0x1ccc>
  42ae38:	mov    QWORD PTR [rbp-0x50],rax
  42ae3c:	mov    QWORD PTR [rbp-0x48],rdx
  42ae40:	mov    rcx,QWORD PTR [rbp-0x50]
  42ae44:	mov    rbx,QWORD PTR [rbp-0x48]
  42ae48:	mov    rax,QWORD PTR [rbp-0x70]
  42ae4c:	mov    rdx,QWORD PTR [rbp-0x68]
  42ae50:	mov    rdi,QWORD PTR [rbp-0x40]
  42ae54:	mov    rsi,QWORD PTR [rbp-0x38]
  42ae58:	sub    rsp,0x8
  42ae5c:	lea    r8,[rbp-0x94]
  42ae63:	push   r8
  42ae65:	push   QWORD PTR [rbp-0xb8]
  42ae6b:	push   QWORD PTR [rbp-0xb0]
  42ae71:	mov    r8,rcx
  42ae74:	mov    r9,rbx
  42ae77:	mov    rcx,rdx
  42ae7a:	mov    rdx,rax
  42ae7d:	call   42a864 <flatcc_json_parser_struct_as_root@@Base+0x218c>
  42ae82:	add    rsp,0x20
  42ae86:	mov    DWORD PTR [rbp-0x8c],eax
  42ae8c:	mov    eax,DWORD PTR [rbp-0x94]
  42ae92:	sub    eax,DWORD PTR [rbp-0x90]
  42ae98:	mov    edx,eax
  42ae9a:	mov    rax,QWORD PTR [rbp-0xc0]
  42aea1:	mov    DWORD PTR [rax],edx
  42aea3:	mov    eax,DWORD PTR [rbp-0x8c]
  42aea9:	mov    rbx,QWORD PTR [rbp-0x18]
  42aead:	xor    rbx,QWORD PTR fs:0x28
  42aeb6:	je     42aebd <flatcc_json_parser_struct_as_root@@Base+0x27e5>
  42aeb8:	call   405070 <__stack_chk_fail@plt>
  42aebd:	mov    rbx,QWORD PTR [rbp-0x8]
  42aec1:	leave  
  42aec2:	ret    
  42aec3:	push   rbp
  42aec4:	mov    rbp,rsp
  42aec7:	mov    DWORD PTR [rbp-0x34],edi
  42aeca:	mov    QWORD PTR [rbp-0x40],rsi
  42aece:	mov    rax,QWORD PTR [rbp-0x40]
  42aed2:	mov    QWORD PTR [rbp-0x8],rax
  42aed6:	cmp    DWORD PTR [rbp-0x34],0x0
  42aeda:	jns    42aeee <flatcc_json_parser_struct_as_root@@Base+0x2816>
  42aedc:	mov    rax,QWORD PTR [rbp-0x40]
  42aee0:	lea    rdx,[rax+0x1]
  42aee4:	mov    QWORD PTR [rbp-0x40],rdx
  42aee8:	mov    BYTE PTR [rax],0x2d
  42aeeb:	neg    DWORD PTR [rbp-0x34]
  42aeee:	mov    rax,QWORD PTR [rbp-0x40]
  42aef2:	mov    QWORD PTR [rbp-0x10],rax
  42aef6:	mov    ecx,DWORD PTR [rbp-0x34]
  42aef9:	mov    edx,0x66666667
  42aefe:	mov    eax,ecx
  42af00:	imul   edx
  42af02:	sar    edx,0x2
  42af05:	mov    eax,ecx
  42af07:	sar    eax,0x1f
  42af0a:	sub    edx,eax
  42af0c:	mov    eax,edx
  42af0e:	mov    DWORD PTR [rbp-0x1c],eax
  42af11:	mov    edx,DWORD PTR [rbp-0x1c]
  42af14:	mov    eax,edx
  42af16:	shl    eax,0x2
  42af19:	add    eax,edx
  42af1b:	add    eax,eax
  42af1d:	neg    eax
  42af1f:	mov    edx,eax
  42af21:	mov    eax,DWORD PTR [rbp-0x34]
  42af24:	add    eax,edx
  42af26:	mov    DWORD PTR [rbp-0x18],eax
  42af29:	mov    rax,QWORD PTR [rbp-0x10]
  42af2d:	lea    rdx,[rax+0x1]
  42af31:	mov    QWORD PTR [rbp-0x10],rdx
  42af35:	mov    edx,DWORD PTR [rbp-0x18]
  42af38:	add    edx,0x30
  42af3b:	mov    BYTE PTR [rax],dl
  42af3d:	cmp    DWORD PTR [rbp-0x1c],0x0
  42af41:	je     42af4b <flatcc_json_parser_struct_as_root@@Base+0x2873>
  42af43:	mov    eax,DWORD PTR [rbp-0x1c]
  42af46:	mov    DWORD PTR [rbp-0x34],eax
  42af49:	jmp    42aef6 <flatcc_json_parser_struct_as_root@@Base+0x281e>
  42af4b:	nop
  42af4c:	mov    rax,QWORD PTR [rbp-0x10]
  42af50:	mov    BYTE PTR [rax],0x0
  42af53:	mov    rdx,QWORD PTR [rbp-0x10]
  42af57:	mov    rax,QWORD PTR [rbp-0x40]
  42af5b:	sub    rdx,rax
  42af5e:	mov    rax,rdx
  42af61:	mov    DWORD PTR [rbp-0x14],eax
  42af64:	mov    DWORD PTR [rbp-0x20],0x0
  42af6b:	jmp    42afc2 <flatcc_json_parser_struct_as_root@@Base+0x28ea>
  42af6d:	mov    eax,DWORD PTR [rbp-0x20]
  42af70:	movsxd rdx,eax
  42af73:	mov    rax,QWORD PTR [rbp-0x40]
  42af77:	add    rax,rdx
  42af7a:	movzx  eax,BYTE PTR [rax]
  42af7d:	mov    BYTE PTR [rbp-0x21],al
  42af80:	mov    eax,DWORD PTR [rbp-0x20]
  42af83:	movsxd rdx,eax
  42af86:	mov    rax,QWORD PTR [rbp-0x40]
  42af8a:	add    rdx,rax
  42af8d:	mov    eax,DWORD PTR [rbp-0x14]
  42af90:	sub    eax,0x1
  42af93:	sub    eax,DWORD PTR [rbp-0x20]
  42af96:	movsxd rcx,eax
  42af99:	mov    rax,QWORD PTR [rbp-0x40]
  42af9d:	add    rax,rcx
  42afa0:	movzx  eax,BYTE PTR [rax]
  42afa3:	mov    BYTE PTR [rdx],al
  42afa5:	mov    eax,DWORD PTR [rbp-0x14]
  42afa8:	sub    eax,0x1
  42afab:	sub    eax,DWORD PTR [rbp-0x20]
  42afae:	movsxd rdx,eax
  42afb1:	mov    rax,QWORD PTR [rbp-0x40]
  42afb5:	add    rdx,rax
  42afb8:	movzx  eax,BYTE PTR [rbp-0x21]
  42afbc:	mov    BYTE PTR [rdx],al
  42afbe:	add    DWORD PTR [rbp-0x20],0x1
  42afc2:	mov    eax,DWORD PTR [rbp-0x14]
  42afc5:	mov    edx,eax
  42afc7:	shr    edx,0x1f
  42afca:	add    eax,edx
  42afcc:	sar    eax,1
  42afce:	cmp    eax,DWORD PTR [rbp-0x20]
  42afd1:	jg     42af6d <flatcc_json_parser_struct_as_root@@Base+0x2895>
  42afd3:	mov    rdx,QWORD PTR [rbp-0x10]
  42afd7:	mov    rax,QWORD PTR [rbp-0x8]
  42afdb:	sub    rdx,rax
  42afde:	mov    rax,rdx
  42afe1:	pop    rbp
  42afe2:	ret    
  42afe3:	push   rbp
  42afe4:	mov    rbp,rsp
  42afe7:	sub    rsp,0x50
  42afeb:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42aff0:	mov    QWORD PTR [rbp-0x40],rdi
  42aff4:	mov    rax,QWORD PTR fs:0x28
  42affd:	mov    QWORD PTR [rbp-0x8],rax
  42b001:	xor    eax,eax
  42b003:	mov    rax,QWORD PTR [rbp-0x38]
  42b007:	mov    QWORD PTR [rbp-0x48],rax
  42b00b:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  42b010:	call   42a1fa <flatcc_json_parser_struct_as_root@@Base+0x1b22>
  42b015:	mov    QWORD PTR [rbp-0x18],rax
  42b019:	mov    rax,QWORD PTR [rbp-0x40]
  42b01d:	mov    QWORD PTR [rbp-0x10],rax
  42b021:	cmp    QWORD PTR [rbp-0x40],0x0
  42b026:	jne    42b047 <flatcc_json_parser_struct_as_root@@Base+0x296f>
  42b028:	lea    rcx,[rip+0x105e1]        # 43b610 <flatcc_builder_padding_base@@Base+0x33b0>
  42b02f:	mov    edx,0xbd
  42b034:	lea    rsi,[rip+0x10255]        # 43b290 <flatcc_builder_padding_base@@Base+0x3030>
  42b03b:	lea    rdi,[rip+0x102eb]        # 43b32d <flatcc_builder_padding_base@@Base+0x30cd>
  42b042:	call   405080 <__assert_fail@plt>
  42b047:	mov    rax,QWORD PTR [rbp-0x18]
  42b04b:	lea    rdx,[rax+rax*1]
  42b04f:	movabs rax,0xffe0000000000000
  42b059:	cmp    rdx,rax
  42b05c:	jbe    42b08b <flatcc_json_parser_struct_as_root@@Base+0x29b3>
  42b05e:	mov    rax,QWORD PTR [rbp-0x18]
  42b062:	mov    ecx,eax
  42b064:	mov    rax,QWORD PTR [rbp-0x18]
  42b068:	shr    rax,0x20
  42b06c:	mov    edx,eax
  42b06e:	mov    rax,QWORD PTR [rbp-0x40]
  42b072:	lea    rsi,[rip+0x102b8]        # 43b331 <flatcc_builder_padding_base@@Base+0x30d1>
  42b079:	mov    rdi,rax
  42b07c:	mov    eax,0x0
  42b081:	call   405130 <sprintf@plt>
  42b086:	jmp    42b3ec <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42b08b:	mov    rax,QWORD PTR [rbp-0x18]
  42b08f:	test   rax,rax
  42b092:	jns    42b0c7 <flatcc_json_parser_struct_as_root@@Base+0x29ef>
  42b094:	mov    rax,QWORD PTR [rbp-0x10]
  42b098:	lea    rdx,[rax+0x1]
  42b09c:	mov    QWORD PTR [rbp-0x10],rdx
  42b0a0:	mov    BYTE PTR [rax],0x2d
  42b0a3:	vmovsd xmm1,QWORD PTR [rbp-0x38]
  42b0a8:	vmovsd xmm0,QWORD PTR [rip+0x10a90]        # 43bb40 <flatcc_builder_padding_base@@Base+0x38e0>
  42b0b0:	vxorpd xmm0,xmm0,xmm1
  42b0b4:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42b0b9:	movabs rax,0x8000000000000000
  42b0c3:	xor    QWORD PTR [rbp-0x18],rax
  42b0c7:	cmp    QWORD PTR [rbp-0x18],0x0
  42b0cc:	jne    42b0f7 <flatcc_json_parser_struct_as_root@@Base+0x2a1f>
  42b0ce:	mov    rax,QWORD PTR [rbp-0x10]
  42b0d2:	lea    rdx,[rax+0x1]
  42b0d6:	mov    QWORD PTR [rbp-0x10],rdx
  42b0da:	mov    BYTE PTR [rax],0x30
  42b0dd:	mov    rax,QWORD PTR [rbp-0x10]
  42b0e1:	mov    BYTE PTR [rax],0x0
  42b0e4:	mov    rdx,QWORD PTR [rbp-0x10]
  42b0e8:	mov    rax,QWORD PTR [rbp-0x40]
  42b0ec:	sub    rdx,rax
  42b0ef:	mov    rax,rdx
  42b0f2:	jmp    42b3ec <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42b0f7:	movabs rax,0x7ff0000000000000
  42b101:	cmp    QWORD PTR [rbp-0x18],rax
  42b105:	jne    42b14e <flatcc_json_parser_struct_as_root@@Base+0x2a76>
  42b107:	mov    rax,QWORD PTR [rbp-0x10]
  42b10b:	lea    rdx,[rax+0x1]
  42b10f:	mov    QWORD PTR [rbp-0x10],rdx
  42b113:	mov    BYTE PTR [rax],0x69
  42b116:	mov    rax,QWORD PTR [rbp-0x10]
  42b11a:	lea    rdx,[rax+0x1]
  42b11e:	mov    QWORD PTR [rbp-0x10],rdx
  42b122:	mov    BYTE PTR [rax],0x6e
  42b125:	mov    rax,QWORD PTR [rbp-0x10]
  42b129:	lea    rdx,[rax+0x1]
  42b12d:	mov    QWORD PTR [rbp-0x10],rdx
  42b131:	mov    BYTE PTR [rax],0x66
  42b134:	mov    rax,QWORD PTR [rbp-0x10]
  42b138:	mov    BYTE PTR [rax],0x0
  42b13b:	mov    rdx,QWORD PTR [rbp-0x10]
  42b13f:	mov    rax,QWORD PTR [rbp-0x40]
  42b143:	sub    rdx,rax
  42b146:	mov    rax,rdx
  42b149:	jmp    42b3ec <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42b14e:	lea    rdx,[rbp-0x2c]
  42b152:	lea    rsi,[rbp-0x28]
  42b156:	mov    rcx,QWORD PTR [rbp-0x10]
  42b15a:	mov    rax,QWORD PTR [rbp-0x38]
  42b15e:	mov    rdi,rcx
  42b161:	mov    QWORD PTR [rbp-0x48],rax
  42b165:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  42b16a:	call   42ac1f <flatcc_json_parser_struct_as_root@@Base+0x2547>
  42b16f:	mov    DWORD PTR [rbp-0x20],eax
  42b172:	cmp    DWORD PTR [rbp-0x20],0x0
  42b176:	jne    42b1b4 <flatcc_json_parser_struct_as_root@@Base+0x2adc>
  42b178:	mov    rdx,QWORD PTR [rbp-0x38]
  42b17c:	mov    rax,QWORD PTR [rbp-0x10]
  42b180:	mov    QWORD PTR [rbp-0x48],rdx
  42b184:	vmovsd xmm0,QWORD PTR [rbp-0x48]
  42b189:	lea    rsi,[rip+0x101af]        # 43b33f <flatcc_builder_padding_base@@Base+0x30df>
  42b190:	mov    rdi,rax
  42b193:	mov    eax,0x1
  42b198:	call   405130 <sprintf@plt>
  42b19d:	mov    ecx,eax
  42b19f:	mov    rdx,QWORD PTR [rbp-0x10]
  42b1a3:	mov    rax,QWORD PTR [rbp-0x40]
  42b1a7:	sub    rdx,rax
  42b1aa:	mov    rax,rdx
  42b1ad:	add    eax,ecx
  42b1af:	jmp    42b3ec <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42b1b4:	mov    eax,DWORD PTR [rbp-0x2c]
  42b1b7:	neg    eax
  42b1b9:	mov    edx,eax
  42b1bb:	mov    eax,DWORD PTR [rbp-0x28]
  42b1be:	sub    eax,0x1
  42b1c1:	mov    ecx,0x1
  42b1c6:	test   eax,eax
  42b1c8:	cmovle eax,ecx
  42b1cb:	cmp    edx,eax
  42b1cd:	cmovle eax,edx
  42b1d0:	mov    DWORD PTR [rbp-0x1c],eax
  42b1d3:	mov    eax,DWORD PTR [rbp-0x2c]
  42b1d6:	test   eax,eax
  42b1d8:	jns    42b28c <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
  42b1de:	mov    edx,DWORD PTR [rbp-0x28]
  42b1e1:	mov    eax,DWORD PTR [rbp-0x2c]
  42b1e4:	add    eax,edx
  42b1e6:	cmp    eax,0xfffffffe
  42b1e9:	jl     42b28c <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
  42b1ef:	mov    eax,DWORD PTR [rbp-0x2c]
  42b1f2:	neg    eax
  42b1f4:	mov    edx,eax
  42b1f6:	mov    eax,DWORD PTR [rbp-0x28]
  42b1f9:	cmp    edx,eax
  42b1fb:	jl     42b28c <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
  42b201:	mov    eax,DWORD PTR [rbp-0x28]
  42b204:	movsxd rdx,eax
  42b207:	mov    eax,DWORD PTR [rbp-0x2c]
  42b20a:	cdqe   
  42b20c:	neg    rax
  42b20f:	mov    rcx,rax
  42b212:	mov    eax,DWORD PTR [rbp-0x28]
  42b215:	cdqe   
  42b217:	sub    rcx,rax
  42b21a:	mov    rax,rcx
  42b21d:	lea    rcx,[rax+0x2]
  42b221:	mov    rax,QWORD PTR [rbp-0x10]
  42b225:	add    rcx,rax
  42b228:	mov    rax,QWORD PTR [rbp-0x10]
  42b22c:	mov    rsi,rax
  42b22f:	mov    rdi,rcx
  42b232:	call   405120 <memmove@plt>
  42b237:	mov    rax,QWORD PTR [rbp-0x10]
  42b23b:	mov    BYTE PTR [rax],0x30
  42b23e:	mov    rax,QWORD PTR [rbp-0x10]
  42b242:	add    rax,0x1
  42b246:	mov    BYTE PTR [rax],0x2e
  42b249:	mov    DWORD PTR [rbp-0x24],0x2
  42b250:	jmp    42b266 <flatcc_json_parser_struct_as_root@@Base+0x2b8e>
  42b252:	mov    eax,DWORD PTR [rbp-0x24]
  42b255:	movsxd rdx,eax
  42b258:	mov    rax,QWORD PTR [rbp-0x10]
  42b25c:	add    rax,rdx
  42b25f:	mov    BYTE PTR [rax],0x30
  42b262:	add    DWORD PTR [rbp-0x24],0x1
  42b266:	mov    eax,DWORD PTR [rbp-0x2c]
  42b269:	mov    edx,0x2
  42b26e:	sub    edx,eax
  42b270:	mov    eax,DWORD PTR [rbp-0x28]
  42b273:	sub    edx,eax
  42b275:	mov    eax,edx
  42b277:	cmp    eax,DWORD PTR [rbp-0x24]
  42b27a:	jg     42b252 <flatcc_json_parser_struct_as_root@@Base+0x2b7a>
  42b27c:	mov    edx,DWORD PTR [rbp-0x28]
  42b27f:	mov    eax,DWORD PTR [rbp-0x24]
  42b282:	add    eax,edx
  42b284:	mov    DWORD PTR [rbp-0x28],eax
  42b287:	jmp    42b3c2 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42b28c:	mov    eax,DWORD PTR [rbp-0x2c]
  42b28f:	test   eax,eax
  42b291:	jns    42b34b <flatcc_json_parser_struct_as_root@@Base+0x2c73>
  42b297:	mov    eax,DWORD PTR [rbp-0x28]
  42b29a:	cmp    eax,0x1
  42b29d:	jle    42b34b <flatcc_json_parser_struct_as_root@@Base+0x2c73>
  42b2a3:	mov    DWORD PTR [rbp-0x24],0x0
  42b2aa:	jmp    42b2d8 <flatcc_json_parser_struct_as_root@@Base+0x2c00>
  42b2ac:	mov    eax,DWORD PTR [rbp-0x28]
  42b2af:	sub    eax,DWORD PTR [rbp-0x24]
  42b2b2:	movsxd rdx,eax
  42b2b5:	mov    rax,QWORD PTR [rbp-0x10]
  42b2b9:	add    rdx,rax
  42b2bc:	mov    eax,DWORD PTR [rbp-0x28]
  42b2bf:	sub    eax,DWORD PTR [rbp-0x24]
  42b2c2:	cdqe   
  42b2c4:	lea    rcx,[rax-0x1]
  42b2c8:	mov    rax,QWORD PTR [rbp-0x10]
  42b2cc:	add    rax,rcx
  42b2cf:	movzx  eax,BYTE PTR [rax]
  42b2d2:	mov    BYTE PTR [rdx],al
  42b2d4:	add    DWORD PTR [rbp-0x24],0x1
  42b2d8:	mov    eax,DWORD PTR [rbp-0x24]
  42b2db:	cmp    eax,DWORD PTR [rbp-0x1c]
  42b2de:	jl     42b2ac <flatcc_json_parser_struct_as_root@@Base+0x2bd4>
  42b2e0:	mov    eax,DWORD PTR [rbp-0x28]
  42b2e3:	lea    edx,[rax+0x1]
  42b2e6:	mov    DWORD PTR [rbp-0x28],edx
  42b2e9:	sub    eax,DWORD PTR [rbp-0x1c]
  42b2ec:	movsxd rdx,eax
  42b2ef:	mov    rax,QWORD PTR [rbp-0x10]
  42b2f3:	add    rax,rdx
  42b2f6:	mov    BYTE PTR [rax],0x2e
  42b2f9:	mov    edx,DWORD PTR [rbp-0x2c]
  42b2fc:	mov    eax,DWORD PTR [rbp-0x1c]
  42b2ff:	add    eax,edx
  42b301:	mov    DWORD PTR [rbp-0x2c],eax
  42b304:	mov    eax,DWORD PTR [rbp-0x2c]
  42b307:	test   eax,eax
  42b309:	je     42b3c2 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42b30f:	mov    eax,DWORD PTR [rbp-0x28]
  42b312:	lea    edx,[rax+0x1]
  42b315:	mov    DWORD PTR [rbp-0x28],edx
  42b318:	movsxd rdx,eax
  42b31b:	mov    rax,QWORD PTR [rbp-0x10]
  42b31f:	add    rax,rdx
  42b322:	mov    BYTE PTR [rax],0x65
  42b325:	mov    eax,DWORD PTR [rbp-0x28]
  42b328:	movsxd rdx,eax
  42b32b:	mov    rax,QWORD PTR [rbp-0x10]
  42b32f:	add    rdx,rax
  42b332:	mov    eax,DWORD PTR [rbp-0x2c]
  42b335:	mov    rsi,rdx
  42b338:	mov    edi,eax
  42b33a:	call   42aec3 <flatcc_json_parser_struct_as_root@@Base+0x27eb>
  42b33f:	mov    edx,eax
  42b341:	mov    eax,DWORD PTR [rbp-0x28]
  42b344:	add    eax,edx
  42b346:	mov    DWORD PTR [rbp-0x28],eax
  42b349:	jmp    42b3c2 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42b34b:	mov    eax,DWORD PTR [rbp-0x2c]
  42b34e:	test   eax,eax
  42b350:	js     42b35a <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42b352:	mov    eax,DWORD PTR [rbp-0x2c]
  42b355:	cmp    eax,0x2
  42b358:	jle    42b396 <flatcc_json_parser_struct_as_root@@Base+0x2cbe>
  42b35a:	mov    eax,DWORD PTR [rbp-0x28]
  42b35d:	lea    edx,[rax+0x1]
  42b360:	mov    DWORD PTR [rbp-0x28],edx
  42b363:	movsxd rdx,eax
  42b366:	mov    rax,QWORD PTR [rbp-0x10]
  42b36a:	add    rax,rdx
  42b36d:	mov    BYTE PTR [rax],0x65
  42b370:	mov    eax,DWORD PTR [rbp-0x28]
  42b373:	movsxd rdx,eax
  42b376:	mov    rax,QWORD PTR [rbp-0x10]
  42b37a:	add    rdx,rax
  42b37d:	mov    eax,DWORD PTR [rbp-0x2c]
  42b380:	mov    rsi,rdx
  42b383:	mov    edi,eax
  42b385:	call   42aec3 <flatcc_json_parser_struct_as_root@@Base+0x27eb>
  42b38a:	mov    edx,eax
  42b38c:	mov    eax,DWORD PTR [rbp-0x28]
  42b38f:	add    eax,edx
  42b391:	mov    DWORD PTR [rbp-0x28],eax
  42b394:	jmp    42b3c2 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42b396:	mov    eax,DWORD PTR [rbp-0x2c]
  42b399:	test   eax,eax
  42b39b:	jle    42b3c2 <flatcc_json_parser_struct_as_root@@Base+0x2cea>
  42b39d:	jmp    42b3b5 <flatcc_json_parser_struct_as_root@@Base+0x2cdd>
  42b39f:	mov    eax,DWORD PTR [rbp-0x28]
  42b3a2:	lea    edx,[rax+0x1]
  42b3a5:	mov    DWORD PTR [rbp-0x28],edx
  42b3a8:	movsxd rdx,eax
  42b3ab:	mov    rax,QWORD PTR [rbp-0x10]
  42b3af:	add    rax,rdx
  42b3b2:	mov    BYTE PTR [rax],0x30
  42b3b5:	mov    eax,DWORD PTR [rbp-0x2c]
  42b3b8:	lea    edx,[rax-0x1]
  42b3bb:	mov    DWORD PTR [rbp-0x2c],edx
  42b3be:	test   eax,eax
  42b3c0:	jg     42b39f <flatcc_json_parser_struct_as_root@@Base+0x2cc7>
  42b3c2:	mov    eax,DWORD PTR [rbp-0x28]
  42b3c5:	movsxd rdx,eax
  42b3c8:	mov    rax,QWORD PTR [rbp-0x10]
  42b3cc:	add    rax,rdx
  42b3cf:	mov    BYTE PTR [rax],0x0
  42b3d2:	mov    eax,DWORD PTR [rbp-0x28]
  42b3d5:	movsxd rdx,eax
  42b3d8:	mov    rax,QWORD PTR [rbp-0x10]
  42b3dc:	add    rax,rdx
  42b3df:	mov    rdx,rax
  42b3e2:	mov    rax,QWORD PTR [rbp-0x40]
  42b3e6:	sub    rdx,rax
  42b3e9:	mov    rax,rdx
  42b3ec:	mov    rdi,QWORD PTR [rbp-0x8]
  42b3f0:	xor    rdi,QWORD PTR fs:0x28
  42b3f9:	je     42b400 <flatcc_json_parser_struct_as_root@@Base+0x2d28>
  42b3fb:	call   405070 <__stack_chk_fail@plt>
  42b400:	leave  
  42b401:	ret    
  42b402:	push   rbp
  42b403:	mov    rbp,rsp
  42b406:	mov    DWORD PTR [rbp-0x4],edi
  42b409:	cmp    DWORD PTR [rbp-0x4],0x5
  42b40d:	ja     42b469 <flatcc_json_parser_struct_as_root@@Base+0x2d91>
  42b40f:	mov    eax,DWORD PTR [rbp-0x4]
  42b412:	lea    rdx,[rax*4+0x0]
  42b41a:	lea    rax,[rip+0xff8f]        # 43b3b0 <flatcc_builder_padding_base@@Base+0x3150>
  42b421:	mov    eax,DWORD PTR [rdx+rax*1]
  42b424:	movsxd rdx,eax
  42b427:	lea    rax,[rip+0xff82]        # 43b3b0 <flatcc_builder_padding_base@@Base+0x3150>
  42b42e:	add    rax,rdx
  42b431:	jmp    rax
  42b433:	lea    rax,[rip+0xff0b]        # 43b345 <flatcc_builder_padding_base@@Base+0x30e5>
  42b43a:	jmp    42b470 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42b43c:	lea    rax,[rip+0xff05]        # 43b348 <flatcc_builder_padding_base@@Base+0x30e8>
  42b443:	jmp    42b470 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42b445:	lea    rax,[rip+0xff0d]        # 43b359 <flatcc_builder_padding_base@@Base+0x30f9>
  42b44c:	jmp    42b470 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42b44e:	lea    rax,[rip+0xff11]        # 43b366 <flatcc_builder_padding_base@@Base+0x3106>
  42b455:	jmp    42b470 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42b457:	lea    rax,[rip+0xff19]        # 43b377 <flatcc_builder_padding_base@@Base+0x3117>
  42b45e:	jmp    42b470 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42b460:	lea    rax,[rip+0xff24]        # 43b38b <flatcc_builder_padding_base@@Base+0x312b>
  42b467:	jmp    42b470 <flatcc_json_parser_struct_as_root@@Base+0x2d98>
  42b469:	lea    rax,[rip+0xff30]        # 43b3a0 <flatcc_builder_padding_base@@Base+0x3140>
  42b470:	pop    rbp
  42b471:	ret    
  42b472:	push   rbp
  42b473:	mov    rbp,rsp
  42b476:	mov    QWORD PTR [rbp-0x28],rdi
  42b47a:	mov    DWORD PTR [rbp-0x2c],esi
  42b47d:	mov    rcx,QWORD PTR [rbp-0x28]
  42b481:	movabs rdx,0xaaaaaaaaaaaaaaab
  42b48b:	mov    rax,rcx
  42b48e:	mul    rdx
  42b491:	shr    rdx,1
  42b494:	mov    rax,rdx
  42b497:	add    rax,rax
  42b49a:	add    rax,rdx
  42b49d:	sub    rcx,rax
  42b4a0:	mov    rax,rcx
  42b4a3:	mov    QWORD PTR [rbp-0x8],rax
  42b4a7:	mov    rax,QWORD PTR [rbp-0x28]
  42b4ab:	shl    rax,0x2
  42b4af:	movabs rdx,0xaaaaaaaaaaaaaaab
  42b4b9:	mul    rdx
  42b4bc:	mov    rax,rdx
  42b4bf:	shr    rax,1
  42b4c2:	add    rax,0x3
  42b4c6:	and    rax,0xfffffffffffffffc
  42b4ca:	mov    QWORD PTR [rbp-0x10],rax
  42b4ce:	mov    eax,DWORD PTR [rbp-0x2c]
  42b4d1:	and    eax,0x80
  42b4d6:	mov    DWORD PTR [rbp-0x14],eax
  42b4d9:	cmp    DWORD PTR [rbp-0x14],0x0
  42b4dd:	jne    42b4fe <flatcc_json_parser_struct_as_root@@Base+0x2e26>
  42b4df:	mov    rax,QWORD PTR [rbp-0x8]
  42b4e3:	cmp    rax,0x1
  42b4e7:	je     42b4f8 <flatcc_json_parser_struct_as_root@@Base+0x2e20>
  42b4e9:	cmp    rax,0x2
  42b4ed:	je     42b4f1 <flatcc_json_parser_struct_as_root@@Base+0x2e19>
  42b4ef:	jmp    42b4fe <flatcc_json_parser_struct_as_root@@Base+0x2e26>
  42b4f1:	sub    QWORD PTR [rbp-0x10],0x1
  42b4f6:	jmp    42b4fe <flatcc_json_parser_struct_as_root@@Base+0x2e26>
  42b4f8:	sub    QWORD PTR [rbp-0x10],0x2
  42b4fd:	nop
  42b4fe:	mov    rax,QWORD PTR [rbp-0x10]
  42b502:	pop    rbp
  42b503:	ret    
  42b504:	push   rbp
  42b505:	mov    rbp,rsp
  42b508:	mov    QWORD PTR [rbp-0x18],rdi
  42b50c:	mov    rax,QWORD PTR [rbp-0x18]
  42b510:	and    eax,0x3
  42b513:	mov    QWORD PTR [rbp-0x10],rax
  42b517:	mov    rax,QWORD PTR [rbp-0x18]
  42b51b:	shr    rax,0x2
  42b51f:	mov    rdx,rax
  42b522:	mov    rax,rdx
  42b525:	add    rax,rax
  42b528:	add    rax,rdx
  42b52b:	mov    QWORD PTR [rbp-0x8],rax
  42b52f:	mov    rax,QWORD PTR [rbp-0x10]
  42b533:	cmp    rax,0x2
  42b537:	je     42b549 <flatcc_json_parser_struct_as_root@@Base+0x2e71>
  42b539:	cmp    rax,0x3
  42b53d:	jne    42b553 <flatcc_json_parser_struct_as_root@@Base+0x2e7b>
  42b53f:	mov    rax,QWORD PTR [rbp-0x8]
  42b543:	add    rax,0x2
  42b547:	jmp    42b557 <flatcc_json_parser_struct_as_root@@Base+0x2e7f>
  42b549:	mov    rax,QWORD PTR [rbp-0x8]
  42b54d:	add    rax,0x1
  42b551:	jmp    42b557 <flatcc_json_parser_struct_as_root@@Base+0x2e7f>
  42b553:	mov    rax,QWORD PTR [rbp-0x8]
  42b557:	pop    rbp
  42b558:	ret    
  42b559:	push   rbp
  42b55a:	mov    rbp,rsp
  42b55d:	mov    QWORD PTR [rbp-0x38],rdi
  42b561:	mov    QWORD PTR [rbp-0x40],rsi
  42b565:	mov    QWORD PTR [rbp-0x48],rdx
  42b569:	mov    QWORD PTR [rbp-0x50],rcx
  42b56d:	mov    DWORD PTR [rbp-0x54],r8d
  42b571:	lea    rax,[rip+0xfe50]        # 43b3c8 <flatcc_builder_padding_base@@Base+0x3168>
  42b578:	mov    QWORD PTR [rbp-0x18],rax
  42b57c:	lea    rax,[rip+0xfe8d]        # 43b410 <flatcc_builder_padding_base@@Base+0x31b0>
  42b583:	mov    QWORD PTR [rbp-0x10],rax
  42b587:	mov    rax,QWORD PTR [rbp-0x38]
  42b58b:	mov    QWORD PTR [rbp-0x8],rax
  42b58f:	mov    eax,DWORD PTR [rbp-0x54]
  42b592:	and    eax,0x80
  42b597:	mov    DWORD PTR [rbp-0x2c],eax
  42b59a:	mov    QWORD PTR [rbp-0x20],0x0
  42b5a2:	mov    DWORD PTR [rbp-0x30],0x3
  42b5a9:	cmp    QWORD PTR [rbp-0x50],0x0
  42b5ae:	jne    42b5bc <flatcc_json_parser_struct_as_root@@Base+0x2ee4>
  42b5b0:	mov    DWORD PTR [rbp-0x30],0x2
  42b5b7:	jmp    42b81d <flatcc_json_parser_struct_as_root@@Base+0x3145>
  42b5bc:	mov    rax,QWORD PTR [rbp-0x50]
  42b5c0:	mov    rax,QWORD PTR [rax]
  42b5c3:	mov    QWORD PTR [rbp-0x20],rax
  42b5c7:	and    DWORD PTR [rbp-0x54],0xffffff1f
  42b5ce:	mov    eax,DWORD PTR [rbp-0x54]
  42b5d1:	test   eax,eax
  42b5d3:	je     42b5df <flatcc_json_parser_struct_as_root@@Base+0x2f07>
  42b5d5:	cmp    eax,0x1
  42b5d8:	je     42b5e9 <flatcc_json_parser_struct_as_root@@Base+0x2f11>
  42b5da:	jmp    42b81d <flatcc_json_parser_struct_as_root@@Base+0x3145>
  42b5df:	mov    rax,QWORD PTR [rbp-0x18]
  42b5e3:	mov    QWORD PTR [rbp-0x28],rax
  42b5e7:	jmp    42b5f2 <flatcc_json_parser_struct_as_root@@Base+0x2f1a>
  42b5e9:	mov    rax,QWORD PTR [rbp-0x10]
  42b5ed:	mov    QWORD PTR [rbp-0x28],rax
  42b5f1:	nop
  42b5f2:	mov    DWORD PTR [rbp-0x30],0x0
  42b5f9:	jmp    42b6ce <flatcc_json_parser_struct_as_root@@Base+0x2ff6>
  42b5fe:	mov    rax,QWORD PTR [rbp-0x40]
  42b602:	movzx  eax,BYTE PTR [rax]
  42b605:	shr    al,0x2
  42b608:	movzx  edx,al
  42b60b:	mov    rax,QWORD PTR [rbp-0x28]
  42b60f:	add    rax,rdx
  42b612:	movzx  edx,BYTE PTR [rax]
  42b615:	mov    rax,QWORD PTR [rbp-0x38]
  42b619:	mov    BYTE PTR [rax],dl
  42b61b:	mov    rax,QWORD PTR [rbp-0x38]
  42b61f:	lea    rdx,[rax+0x1]
  42b623:	mov    rax,QWORD PTR [rbp-0x40]
  42b627:	movzx  eax,BYTE PTR [rax]
  42b62a:	movzx  eax,al
  42b62d:	shl    eax,0x4
  42b630:	and    eax,0x30
  42b633:	mov    ecx,eax
  42b635:	mov    rax,QWORD PTR [rbp-0x40]
  42b639:	add    rax,0x1
  42b63d:	movzx  eax,BYTE PTR [rax]
  42b640:	shr    al,0x4
  42b643:	movzx  eax,al
  42b646:	or     eax,ecx
  42b648:	movsxd rcx,eax
  42b64b:	mov    rax,QWORD PTR [rbp-0x28]
  42b64f:	add    rax,rcx
  42b652:	movzx  eax,BYTE PTR [rax]
  42b655:	mov    BYTE PTR [rdx],al
  42b657:	mov    rax,QWORD PTR [rbp-0x38]
  42b65b:	lea    rdx,[rax+0x2]
  42b65f:	mov    rax,QWORD PTR [rbp-0x40]
  42b663:	add    rax,0x1
  42b667:	movzx  eax,BYTE PTR [rax]
  42b66a:	movzx  eax,al
  42b66d:	shl    eax,0x2
  42b670:	and    eax,0x3c
  42b673:	mov    ecx,eax
  42b675:	mov    rax,QWORD PTR [rbp-0x40]
  42b679:	add    rax,0x2
  42b67d:	movzx  eax,BYTE PTR [rax]
  42b680:	shr    al,0x6
  42b683:	movzx  eax,al
  42b686:	or     eax,ecx
  42b688:	movsxd rcx,eax
  42b68b:	mov    rax,QWORD PTR [rbp-0x28]
  42b68f:	add    rax,rcx
  42b692:	movzx  eax,BYTE PTR [rax]
  42b695:	mov    BYTE PTR [rdx],al
  42b697:	mov    rax,QWORD PTR [rbp-0x38]
  42b69b:	lea    rdx,[rax+0x3]
  42b69f:	mov    rax,QWORD PTR [rbp-0x40]
  42b6a3:	add    rax,0x2
  42b6a7:	movzx  eax,BYTE PTR [rax]
  42b6aa:	movzx  eax,al
  42b6ad:	and    eax,0x3f
  42b6b0:	mov    rcx,rax
  42b6b3:	mov    rax,QWORD PTR [rbp-0x28]
  42b6b7:	add    rax,rcx
  42b6ba:	movzx  eax,BYTE PTR [rax]
  42b6bd:	mov    BYTE PTR [rdx],al
  42b6bf:	sub    QWORD PTR [rbp-0x20],0x3
  42b6c4:	add    QWORD PTR [rbp-0x38],0x4
  42b6c9:	add    QWORD PTR [rbp-0x40],0x3
  42b6ce:	cmp    QWORD PTR [rbp-0x20],0x2
  42b6d3:	ja     42b5fe <flatcc_json_parser_struct_as_root@@Base+0x2f26>
  42b6d9:	mov    rax,QWORD PTR [rbp-0x20]
  42b6dd:	cmp    rax,0x1
  42b6e1:	je     42b797 <flatcc_json_parser_struct_as_root@@Base+0x30bf>
  42b6e7:	cmp    rax,0x2
  42b6eb:	jne    42b808 <flatcc_json_parser_struct_as_root@@Base+0x3130>
  42b6f1:	mov    rax,QWORD PTR [rbp-0x40]
  42b6f5:	movzx  eax,BYTE PTR [rax]
  42b6f8:	shr    al,0x2
  42b6fb:	movzx  edx,al
  42b6fe:	mov    rax,QWORD PTR [rbp-0x28]
  42b702:	add    rax,rdx
  42b705:	movzx  edx,BYTE PTR [rax]
  42b708:	mov    rax,QWORD PTR [rbp-0x38]
  42b70c:	mov    BYTE PTR [rax],dl
  42b70e:	mov    rax,QWORD PTR [rbp-0x38]
  42b712:	lea    rdx,[rax+0x1]
  42b716:	mov    rax,QWORD PTR [rbp-0x40]
  42b71a:	movzx  eax,BYTE PTR [rax]
  42b71d:	movzx  eax,al
  42b720:	shl    eax,0x4
  42b723:	and    eax,0x30
  42b726:	mov    ecx,eax
  42b728:	mov    rax,QWORD PTR [rbp-0x40]
  42b72c:	add    rax,0x1
  42b730:	movzx  eax,BYTE PTR [rax]
  42b733:	shr    al,0x4
  42b736:	movzx  eax,al
  42b739:	or     eax,ecx
  42b73b:	movsxd rcx,eax
  42b73e:	mov    rax,QWORD PTR [rbp-0x28]
  42b742:	add    rax,rcx
  42b745:	movzx  eax,BYTE PTR [rax]
  42b748:	mov    BYTE PTR [rdx],al
  42b74a:	mov    rax,QWORD PTR [rbp-0x38]
  42b74e:	lea    rdx,[rax+0x2]
  42b752:	mov    rax,QWORD PTR [rbp-0x40]
  42b756:	add    rax,0x1
  42b75a:	movzx  eax,BYTE PTR [rax]
  42b75d:	movzx  eax,al
  42b760:	shl    eax,0x2
  42b763:	cdqe   
  42b765:	and    eax,0x3c
  42b768:	mov    rcx,rax
  42b76b:	mov    rax,QWORD PTR [rbp-0x28]
  42b76f:	add    rax,rcx
  42b772:	movzx  eax,BYTE PTR [rax]
  42b775:	mov    BYTE PTR [rdx],al
  42b777:	add    QWORD PTR [rbp-0x38],0x3
  42b77c:	cmp    DWORD PTR [rbp-0x2c],0x0
  42b780:	je     42b811 <flatcc_json_parser_struct_as_root@@Base+0x3139>
  42b786:	mov    rax,QWORD PTR [rbp-0x38]
  42b78a:	lea    rdx,[rax+0x1]
  42b78e:	mov    QWORD PTR [rbp-0x38],rdx
  42b792:	mov    BYTE PTR [rax],0x3d
  42b795:	jmp    42b811 <flatcc_json_parser_struct_as_root@@Base+0x3139>
  42b797:	mov    rax,QWORD PTR [rbp-0x40]
  42b79b:	movzx  eax,BYTE PTR [rax]
  42b79e:	shr    al,0x2
  42b7a1:	movzx  edx,al
  42b7a4:	mov    rax,QWORD PTR [rbp-0x28]
  42b7a8:	add    rax,rdx
  42b7ab:	movzx  edx,BYTE PTR [rax]
  42b7ae:	mov    rax,QWORD PTR [rbp-0x38]
  42b7b2:	mov    BYTE PTR [rax],dl
  42b7b4:	mov    rax,QWORD PTR [rbp-0x38]
  42b7b8:	lea    rdx,[rax+0x1]
  42b7bc:	mov    rax,QWORD PTR [rbp-0x40]
  42b7c0:	movzx  eax,BYTE PTR [rax]
  42b7c3:	movzx  eax,al
  42b7c6:	shl    eax,0x4
  42b7c9:	cdqe   
  42b7cb:	and    eax,0x30
  42b7ce:	mov    rcx,rax
  42b7d1:	mov    rax,QWORD PTR [rbp-0x28]
  42b7d5:	add    rax,rcx
  42b7d8:	movzx  eax,BYTE PTR [rax]
  42b7db:	mov    BYTE PTR [rdx],al
  42b7dd:	add    QWORD PTR [rbp-0x38],0x2
  42b7e2:	cmp    DWORD PTR [rbp-0x2c],0x0
  42b7e6:	je     42b814 <flatcc_json_parser_struct_as_root@@Base+0x313c>
  42b7e8:	mov    rax,QWORD PTR [rbp-0x38]
  42b7ec:	lea    rdx,[rax+0x1]
  42b7f0:	mov    QWORD PTR [rbp-0x38],rdx
  42b7f4:	mov    BYTE PTR [rax],0x3d
  42b7f7:	mov    rax,QWORD PTR [rbp-0x38]
  42b7fb:	lea    rdx,[rax+0x1]
  42b7ff:	mov    QWORD PTR [rbp-0x38],rdx
  42b803:	mov    BYTE PTR [rax],0x3d
  42b806:	jmp    42b814 <flatcc_json_parser_struct_as_root@@Base+0x313c>
  42b808:	mov    DWORD PTR [rbp-0x2c],0x0
  42b80f:	jmp    42b815 <flatcc_json_parser_struct_as_root@@Base+0x313d>
  42b811:	nop
  42b812:	jmp    42b815 <flatcc_json_parser_struct_as_root@@Base+0x313d>
  42b814:	nop
  42b815:	mov    QWORD PTR [rbp-0x20],0x0
  42b81d:	cmp    QWORD PTR [rbp-0x48],0x0
  42b822:	je     42b83c <flatcc_json_parser_struct_as_root@@Base+0x3164>
  42b824:	mov    rdx,QWORD PTR [rbp-0x38]
  42b828:	mov    rax,QWORD PTR [rbp-0x8]
  42b82c:	sub    rdx,rax
  42b82f:	mov    rax,rdx
  42b832:	mov    rdx,rax
  42b835:	mov    rax,QWORD PTR [rbp-0x48]
  42b839:	mov    QWORD PTR [rax],rdx
  42b83c:	cmp    QWORD PTR [rbp-0x50],0x0
  42b841:	je     42b858 <flatcc_json_parser_struct_as_root@@Base+0x3180>
  42b843:	mov    rax,QWORD PTR [rbp-0x50]
  42b847:	mov    rax,QWORD PTR [rax]
  42b84a:	sub    rax,QWORD PTR [rbp-0x20]
  42b84e:	mov    rdx,rax
  42b851:	mov    rax,QWORD PTR [rbp-0x50]
  42b855:	mov    QWORD PTR [rax],rdx
  42b858:	mov    eax,DWORD PTR [rbp-0x30]
  42b85b:	pop    rbp
  42b85c:	ret    
  42b85d:	push   rbp
  42b85e:	mov    rbp,rsp
  42b861:	add    rsp,0xffffffffffffff80
  42b865:	mov    QWORD PTR [rbp-0x58],rdi
  42b869:	mov    QWORD PTR [rbp-0x60],rsi
  42b86d:	mov    QWORD PTR [rbp-0x68],rdx
  42b871:	mov    QWORD PTR [rbp-0x70],rcx
  42b875:	mov    DWORD PTR [rbp-0x74],r8d
  42b879:	mov    rax,QWORD PTR fs:0x28
  42b882:	mov    QWORD PTR [rbp-0x8],rax
  42b886:	xor    eax,eax
  42b888:	mov    DWORD PTR [rbp-0x50],0x0
  42b88f:	mov    rax,QWORD PTR [rbp-0x58]
  42b893:	mov    QWORD PTR [rbp-0x18],rax
  42b897:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  42b89f:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  42b8a7:	lea    rax,[rip+0xfd92]        # 43b640 <flatcc_builder_padding_base@@Base+0x33e0>
  42b8ae:	mov    QWORD PTR [rbp-0x20],rax
  42b8b2:	mov    eax,DWORD PTR [rbp-0x74]
  42b8b5:	and    eax,0x20
  42b8b8:	mov    DWORD PTR [rbp-0x4c],eax
  42b8bb:	cmp    QWORD PTR [rbp-0x70],0x0
  42b8c0:	je     42b8cd <flatcc_json_parser_struct_as_root@@Base+0x31f5>
  42b8c2:	mov    rax,QWORD PTR [rbp-0x70]
  42b8c6:	mov    rax,QWORD PTR [rax]
  42b8c9:	mov    QWORD PTR [rbp-0x30],rax
  42b8cd:	mov    rax,QWORD PTR [rbp-0x30]
  42b8d1:	mov    QWORD PTR [rbp-0x28],rax
  42b8d5:	and    DWORD PTR [rbp-0x74],0xffffff1f
  42b8dc:	mov    eax,DWORD PTR [rbp-0x74]
  42b8df:	test   eax,eax
  42b8e1:	je     42b8ea <flatcc_json_parser_struct_as_root@@Base+0x3212>
  42b8e3:	cmp    eax,0x1
  42b8e6:	je     42b906 <flatcc_json_parser_struct_as_root@@Base+0x322e>
  42b8e8:	jmp    42b922 <flatcc_json_parser_struct_as_root@@Base+0x324a>
  42b8ea:	cmp    DWORD PTR [rbp-0x4c],0x0
  42b8ee:	je     42b8f9 <flatcc_json_parser_struct_as_root@@Base+0x3221>
  42b8f0:	lea    rax,[rip+0xfe49]        # 43b740 <flatcc_builder_padding_base@@Base+0x34e0>
  42b8f7:	jmp    42b900 <flatcc_json_parser_struct_as_root@@Base+0x3228>
  42b8f9:	lea    rax,[rip+0xfd40]        # 43b640 <flatcc_builder_padding_base@@Base+0x33e0>
  42b900:	mov    QWORD PTR [rbp-0x20],rax
  42b904:	jmp    42b92e <flatcc_json_parser_struct_as_root@@Base+0x3256>
  42b906:	cmp    DWORD PTR [rbp-0x4c],0x0
  42b90a:	je     42b915 <flatcc_json_parser_struct_as_root@@Base+0x323d>
  42b90c:	lea    rax,[rip+0xff2d]        # 43b840 <flatcc_builder_padding_base@@Base+0x35e0>
  42b913:	jmp    42b91c <flatcc_json_parser_struct_as_root@@Base+0x3244>
  42b915:	lea    rax,[rip+0x10024]        # 43b940 <flatcc_builder_padding_base@@Base+0x36e0>
  42b91c:	mov    QWORD PTR [rbp-0x20],rax
  42b920:	jmp    42b92e <flatcc_json_parser_struct_as_root@@Base+0x3256>
  42b922:	mov    DWORD PTR [rbp-0x50],0x3
  42b929:	jmp    42bb2b <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42b92e:	cmp    QWORD PTR [rbp-0x68],0x0
  42b933:	je     42bb20 <flatcc_json_parser_struct_as_root@@Base+0x3448>
  42b939:	mov    rax,QWORD PTR [rbp-0x68]
  42b93d:	mov    rax,QWORD PTR [rax]
  42b940:	test   rax,rax
  42b943:	je     42bb20 <flatcc_json_parser_struct_as_root@@Base+0x3448>
  42b949:	mov    rax,QWORD PTR [rbp-0x68]
  42b94d:	mov    rax,QWORD PTR [rax]
  42b950:	mov    QWORD PTR [rbp-0x38],rax
  42b954:	jmp    42bb20 <flatcc_json_parser_struct_as_root@@Base+0x3448>
  42b959:	mov    QWORD PTR [rbp-0x48],0x0
  42b961:	jmp    42ba96 <flatcc_json_parser_struct_as_root@@Base+0x33be>
  42b966:	mov    rax,QWORD PTR [rbp-0x30]
  42b96a:	cmp    rax,QWORD PTR [rbp-0x48]
  42b96e:	jne    42b985 <flatcc_json_parser_struct_as_root@@Base+0x32ad>
  42b970:	mov    rax,QWORD PTR [rbp-0x48]
  42b974:	mov    QWORD PTR [rbp-0x40],rax
  42b978:	mov    rax,QWORD PTR [rbp-0x48]
  42b97c:	sub    QWORD PTR [rbp-0x30],rax
  42b980:	jmp    42bb81 <flatcc_json_parser_struct_as_root@@Base+0x34a9>
  42b985:	mov    rdx,QWORD PTR [rbp-0x60]
  42b989:	mov    rax,QWORD PTR [rbp-0x48]
  42b98d:	add    rax,rdx
  42b990:	movzx  eax,BYTE PTR [rax]
  42b993:	movzx  edx,al
  42b996:	mov    rax,QWORD PTR [rbp-0x20]
  42b99a:	add    rax,rdx
  42b99d:	movzx  eax,BYTE PTR [rax]
  42b9a0:	lea    rcx,[rbp-0xc]
  42b9a4:	mov    rdx,QWORD PTR [rbp-0x48]
  42b9a8:	add    rdx,rcx
  42b9ab:	mov    BYTE PTR [rdx],al
  42b9ad:	lea    rdx,[rbp-0xc]
  42b9b1:	mov    rax,QWORD PTR [rbp-0x48]
  42b9b5:	add    rax,rdx
  42b9b8:	movzx  edx,BYTE PTR [rax]
  42b9bb:	movzx  eax,BYTE PTR [rip+0x1007e]        # 43ba40 <flatcc_builder_padding_base@@Base+0x37e0>
  42b9c2:	cmp    dl,al
  42b9c4:	jb     42ba91 <flatcc_json_parser_struct_as_root@@Base+0x33b9>
  42b9ca:	lea    rdx,[rbp-0xc]
  42b9ce:	mov    rax,QWORD PTR [rbp-0x48]
  42b9d2:	add    rax,rdx
  42b9d5:	movzx  edx,BYTE PTR [rax]
  42b9d8:	movzx  eax,BYTE PTR [rip+0x10062]        # 43ba41 <flatcc_builder_padding_base@@Base+0x37e1>
  42b9df:	cmp    dl,al
  42b9e1:	jne    42b9f7 <flatcc_json_parser_struct_as_root@@Base+0x331f>
  42b9e3:	add    QWORD PTR [rbp-0x60],0x1
  42b9e8:	sub    QWORD PTR [rbp-0x30],0x1
  42b9ed:	sub    QWORD PTR [rbp-0x48],0x1
  42b9f2:	jmp    42ba91 <flatcc_json_parser_struct_as_root@@Base+0x33b9>
  42b9f7:	mov    rax,QWORD PTR [rbp-0x48]
  42b9fb:	mov    QWORD PTR [rbp-0x40],rax
  42b9ff:	lea    rdx,[rbp-0xc]
  42ba03:	mov    rax,QWORD PTR [rbp-0x48]
  42ba07:	add    rax,rdx
  42ba0a:	movzx  edx,BYTE PTR [rax]
  42ba0d:	movzx  eax,BYTE PTR [rip+0x1002e]        # 43ba42 <flatcc_builder_padding_base@@Base+0x37e2>
  42ba14:	cmp    dl,al
  42ba16:	jne    42ba84 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42ba18:	add    QWORD PTR [rbp-0x48],0x1
  42ba1d:	jmp    42ba70 <flatcc_json_parser_struct_as_root@@Base+0x3398>
  42ba1f:	mov    rdx,QWORD PTR [rbp-0x60]
  42ba23:	mov    rax,QWORD PTR [rbp-0x48]
  42ba27:	add    rax,rdx
  42ba2a:	movzx  eax,BYTE PTR [rax]
  42ba2d:	movzx  edx,al
  42ba30:	mov    rax,QWORD PTR [rbp-0x20]
  42ba34:	add    rax,rdx
  42ba37:	movzx  edx,BYTE PTR [rax]
  42ba3a:	movzx  eax,BYTE PTR [rip+0x10001]        # 43ba42 <flatcc_builder_padding_base@@Base+0x37e2>
  42ba41:	cmp    dl,al
  42ba43:	je     42ba6b <flatcc_json_parser_struct_as_root@@Base+0x3393>
  42ba45:	mov    rdx,QWORD PTR [rbp-0x60]
  42ba49:	mov    rax,QWORD PTR [rbp-0x48]
  42ba4d:	add    rax,rdx
  42ba50:	movzx  eax,BYTE PTR [rax]
  42ba53:	movzx  edx,al
  42ba56:	mov    rax,QWORD PTR [rbp-0x20]
  42ba5a:	add    rax,rdx
  42ba5d:	movzx  edx,BYTE PTR [rax]
  42ba60:	movzx  eax,BYTE PTR [rip+0xffda]        # 43ba41 <flatcc_builder_padding_base@@Base+0x37e1>
  42ba67:	cmp    dl,al
  42ba69:	jne    42ba83 <flatcc_json_parser_struct_as_root@@Base+0x33ab>
  42ba6b:	add    QWORD PTR [rbp-0x48],0x1
  42ba70:	mov    rax,QWORD PTR [rbp-0x48]
  42ba74:	cmp    rax,QWORD PTR [rbp-0x30]
  42ba78:	jae    42ba84 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42ba7a:	cmp    QWORD PTR [rbp-0x48],0x7
  42ba7f:	jbe    42ba1f <flatcc_json_parser_struct_as_root@@Base+0x3347>
  42ba81:	jmp    42ba84 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42ba83:	nop
  42ba84:	mov    rax,QWORD PTR [rbp-0x48]
  42ba88:	sub    QWORD PTR [rbp-0x30],rax
  42ba8c:	jmp    42bb81 <flatcc_json_parser_struct_as_root@@Base+0x34a9>
  42ba91:	add    QWORD PTR [rbp-0x48],0x1
  42ba96:	cmp    QWORD PTR [rbp-0x48],0x3
  42ba9b:	jbe    42b966 <flatcc_json_parser_struct_as_root@@Base+0x328e>
  42baa1:	cmp    QWORD PTR [rbp-0x38],0x2
  42baa6:	jbe    42bc68 <flatcc_json_parser_struct_as_root@@Base+0x3590>
  42baac:	movzx  eax,BYTE PTR [rbp-0xc]
  42bab0:	movzx  eax,al
  42bab3:	shl    eax,0x2
  42bab6:	mov    edx,eax
  42bab8:	movzx  eax,BYTE PTR [rbp-0xb]
  42babc:	shr    al,0x4
  42babf:	or     eax,edx
  42bac1:	mov    edx,eax
  42bac3:	mov    rax,QWORD PTR [rbp-0x58]
  42bac7:	mov    BYTE PTR [rax],dl
  42bac9:	mov    rax,QWORD PTR [rbp-0x58]
  42bacd:	add    rax,0x1
  42bad1:	movzx  edx,BYTE PTR [rbp-0xb]
  42bad5:	movzx  edx,dl
  42bad8:	shl    edx,0x4
  42badb:	mov    ecx,edx
  42badd:	movzx  edx,BYTE PTR [rbp-0xa]
  42bae1:	shr    dl,0x2
  42bae4:	or     edx,ecx
  42bae6:	mov    BYTE PTR [rax],dl
  42bae8:	mov    rax,QWORD PTR [rbp-0x58]
  42baec:	add    rax,0x2
  42baf0:	movzx  edx,BYTE PTR [rbp-0xa]
  42baf4:	movzx  edx,dl
  42baf7:	shl    edx,0x6
  42bafa:	mov    ecx,edx
  42bafc:	movzx  edx,BYTE PTR [rbp-0x9]
  42bb00:	or     edx,ecx
  42bb02:	mov    BYTE PTR [rax],dl
  42bb04:	add    QWORD PTR [rbp-0x58],0x3
  42bb09:	add    QWORD PTR [rbp-0x60],0x4
  42bb0e:	sub    QWORD PTR [rbp-0x38],0x3
  42bb13:	sub    QWORD PTR [rbp-0x30],0x4
  42bb18:	mov    rax,QWORD PTR [rbp-0x30]
  42bb1c:	mov    QWORD PTR [rbp-0x28],rax
  42bb20:	cmp    QWORD PTR [rbp-0x38],0x0
  42bb25:	jne    42b959 <flatcc_json_parser_struct_as_root@@Base+0x3281>
  42bb2b:	cmp    QWORD PTR [rbp-0x68],0x0
  42bb30:	je     42bb4a <flatcc_json_parser_struct_as_root@@Base+0x3472>
  42bb32:	mov    rdx,QWORD PTR [rbp-0x58]
  42bb36:	mov    rax,QWORD PTR [rbp-0x18]
  42bb3a:	sub    rdx,rax
  42bb3d:	mov    rax,rdx
  42bb40:	mov    rdx,rax
  42bb43:	mov    rax,QWORD PTR [rbp-0x68]
  42bb47:	mov    QWORD PTR [rax],rdx
  42bb4a:	cmp    QWORD PTR [rbp-0x70],0x0
  42bb4f:	je     42bb66 <flatcc_json_parser_struct_as_root@@Base+0x348e>
  42bb51:	mov    rax,QWORD PTR [rbp-0x70]
  42bb55:	mov    rax,QWORD PTR [rax]
  42bb58:	sub    rax,QWORD PTR [rbp-0x28]
  42bb5c:	mov    rdx,rax
  42bb5f:	mov    rax,QWORD PTR [rbp-0x70]
  42bb63:	mov    QWORD PTR [rax],rdx
  42bb66:	mov    eax,DWORD PTR [rbp-0x50]
  42bb69:	mov    rsi,QWORD PTR [rbp-0x8]
  42bb6d:	xor    rsi,QWORD PTR fs:0x28
  42bb76:	je     42bc80 <flatcc_json_parser_struct_as_root@@Base+0x35a8>
  42bb7c:	jmp    42bc7b <flatcc_json_parser_struct_as_root@@Base+0x35a3>
  42bb81:	mov    rax,QWORD PTR [rbp-0x40]
  42bb85:	cmp    rax,0x2
  42bb89:	je     42bb9f <flatcc_json_parser_struct_as_root@@Base+0x34c7>
  42bb8b:	cmp    rax,0x3
  42bb8f:	je     42bbe3 <flatcc_json_parser_struct_as_root@@Base+0x350b>
  42bb91:	test   rax,rax
  42bb94:	je     42bc4a <flatcc_json_parser_struct_as_root@@Base+0x3572>
  42bb9a:	jmp    42bc3e <flatcc_json_parser_struct_as_root@@Base+0x3566>
  42bb9f:	movzx  eax,BYTE PTR [rbp-0xb]
  42bba3:	movzx  eax,al
  42bba6:	shl    eax,0x4
  42bba9:	movzx  eax,al
  42bbac:	test   eax,eax
  42bbae:	jne    42bc58 <flatcc_json_parser_struct_as_root@@Base+0x3580>
  42bbb4:	cmp    QWORD PTR [rbp-0x38],0x0
  42bbb9:	je     42bc6b <flatcc_json_parser_struct_as_root@@Base+0x3593>
  42bbbf:	movzx  eax,BYTE PTR [rbp-0xc]
  42bbc3:	movzx  eax,al
  42bbc6:	shl    eax,0x2
  42bbc9:	mov    edx,eax
  42bbcb:	movzx  eax,BYTE PTR [rbp-0xb]
  42bbcf:	shr    al,0x4
  42bbd2:	or     eax,edx
  42bbd4:	mov    edx,eax
  42bbd6:	mov    rax,QWORD PTR [rbp-0x58]
  42bbda:	mov    BYTE PTR [rax],dl
  42bbdc:	add    QWORD PTR [rbp-0x58],0x1
  42bbe1:	jmp    42bc4b <flatcc_json_parser_struct_as_root@@Base+0x3573>
  42bbe3:	movzx  eax,BYTE PTR [rbp-0xa]
  42bbe7:	movzx  eax,al
  42bbea:	shl    eax,0x6
  42bbed:	movzx  eax,al
  42bbf0:	test   eax,eax
  42bbf2:	jne    42bc5b <flatcc_json_parser_struct_as_root@@Base+0x3583>
  42bbf4:	cmp    QWORD PTR [rbp-0x38],0x1
  42bbf9:	jbe    42bc6e <flatcc_json_parser_struct_as_root@@Base+0x3596>
  42bbfb:	movzx  eax,BYTE PTR [rbp-0xc]
  42bbff:	movzx  eax,al
  42bc02:	shl    eax,0x2
  42bc05:	mov    edx,eax
  42bc07:	movzx  eax,BYTE PTR [rbp-0xb]
  42bc0b:	shr    al,0x4
  42bc0e:	or     eax,edx
  42bc10:	mov    edx,eax
  42bc12:	mov    rax,QWORD PTR [rbp-0x58]
  42bc16:	mov    BYTE PTR [rax],dl
  42bc18:	mov    rax,QWORD PTR [rbp-0x58]
  42bc1c:	add    rax,0x1
  42bc20:	movzx  edx,BYTE PTR [rbp-0xb]
  42bc24:	movzx  edx,dl
  42bc27:	shl    edx,0x4
  42bc2a:	mov    ecx,edx
  42bc2c:	movzx  edx,BYTE PTR [rbp-0xa]
  42bc30:	shr    dl,0x2
  42bc33:	or     edx,ecx
  42bc35:	mov    BYTE PTR [rax],dl
  42bc37:	add    QWORD PTR [rbp-0x58],0x2
  42bc3c:	jmp    42bc4b <flatcc_json_parser_struct_as_root@@Base+0x3573>
  42bc3e:	mov    DWORD PTR [rbp-0x50],0x4
  42bc45:	jmp    42bb2b <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42bc4a:	nop
  42bc4b:	mov    rax,QWORD PTR [rbp-0x30]
  42bc4f:	mov    QWORD PTR [rbp-0x28],rax
  42bc53:	jmp    42bb2b <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42bc58:	nop
  42bc59:	jmp    42bc5c <flatcc_json_parser_struct_as_root@@Base+0x3584>
  42bc5b:	nop
  42bc5c:	mov    DWORD PTR [rbp-0x50],0x5
  42bc63:	jmp    42bb2b <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42bc68:	nop
  42bc69:	jmp    42bc6f <flatcc_json_parser_struct_as_root@@Base+0x3597>
  42bc6b:	nop
  42bc6c:	jmp    42bc6f <flatcc_json_parser_struct_as_root@@Base+0x3597>
  42bc6e:	nop
  42bc6f:	mov    DWORD PTR [rbp-0x50],0x1
  42bc76:	jmp    42bb2b <flatcc_json_parser_struct_as_root@@Base+0x3453>
  42bc7b:	call   405070 <__stack_chk_fail@plt>
  42bc80:	leave  
  42bc81:	ret    

000000000042bc82 <flatcc_json_printer_error_string@@Base>:
  42bc82:	push   rbp
  42bc83:	mov    rbp,rsp
  42bc86:	mov    DWORD PTR [rbp-0x4],edi
  42bc89:	mov    eax,DWORD PTR [rbp-0x4]
  42bc8c:	cmp    eax,0x1
  42bc8f:	je     42bcb1 <flatcc_json_printer_error_string@@Base+0x2f>
  42bc91:	cmp    eax,0x1
  42bc94:	jg     42bc9c <flatcc_json_printer_error_string@@Base+0x1a>
  42bc96:	test   eax,eax
  42bc98:	je     42bca8 <flatcc_json_printer_error_string@@Base+0x26>
  42bc9a:	jmp    42bccc <flatcc_json_printer_error_string@@Base+0x4a>
  42bc9c:	cmp    eax,0x2
  42bc9f:	je     42bcba <flatcc_json_printer_error_string@@Base+0x38>
  42bca1:	cmp    eax,0x3
  42bca4:	je     42bcc3 <flatcc_json_printer_error_string@@Base+0x41>
  42bca6:	jmp    42bccc <flatcc_json_printer_error_string@@Base+0x4a>
  42bca8:	lea    rax,[rip+0xf696]        # 43b345 <flatcc_builder_padding_base@@Base+0x30e5>
  42bcaf:	jmp    42bcd3 <flatcc_json_printer_error_string@@Base+0x51>
  42bcb1:	lea    rax,[rip+0xf799]        # 43b451 <flatcc_builder_padding_base@@Base+0x31f1>
  42bcb8:	jmp    42bcd3 <flatcc_json_printer_error_string@@Base+0x51>
  42bcba:	lea    rax,[rip+0xf79a]        # 43b45b <flatcc_builder_padding_base@@Base+0x31fb>
  42bcc1:	jmp    42bcd3 <flatcc_json_printer_error_string@@Base+0x51>
  42bcc3:	lea    rax,[rip+0xf7a0]        # 43b46a <flatcc_builder_padding_base@@Base+0x320a>
  42bcca:	jmp    42bcd3 <flatcc_json_printer_error_string@@Base+0x51>
  42bccc:	lea    rax,[rip+0xf7a0]        # 43b473 <flatcc_builder_padding_base@@Base+0x3213>
  42bcd3:	pop    rbp
  42bcd4:	ret    
  42bcd5:	push   rbp
  42bcd6:	mov    rbp,rsp
  42bcd9:	sub    rsp,0x8
  42bcdd:	mov    QWORD PTR [rbp-0x8],rdi
  42bce1:	mov    rax,QWORD PTR [rbp-0x8]
  42bce5:	mov    rdi,rax
  42bce8:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42bced:	mov    edx,eax
  42bcef:	mov    rax,QWORD PTR [rbp-0x8]
  42bcf3:	add    rax,rdx
  42bcf6:	leave  
  42bcf7:	ret    
  42bcf8:	push   rbp
  42bcf9:	mov    rbp,rsp
  42bcfc:	sub    rsp,0x10
  42bd00:	mov    QWORD PTR [rbp-0x8],rdi
  42bd04:	mov    DWORD PTR [rbp-0xc],esi
  42bd07:	mov    edx,DWORD PTR [rbp-0xc]
  42bd0a:	mov    rax,QWORD PTR [rbp-0x8]
  42bd0e:	add    rax,rdx
  42bd11:	mov    rdi,rax
  42bd14:	call   428a97 <flatcc_json_parser_struct_as_root@@Base+0x3bf>
  42bd19:	leave  
  42bd1a:	ret    
  42bd1b:	push   rbp
  42bd1c:	mov    rbp,rsp
  42bd1f:	sub    rsp,0x20
  42bd23:	mov    QWORD PTR [rbp-0x18],rdi
  42bd27:	mov    DWORD PTR [rbp-0x1c],esi
  42bd2a:	mov    eax,DWORD PTR [rbp-0x1c]
  42bd2d:	add    eax,0x2
  42bd30:	cdqe   
  42bd32:	add    eax,eax
  42bd34:	mov    DWORD PTR [rbp-0x4],eax
  42bd37:	mov    rax,QWORD PTR [rbp-0x18]
  42bd3b:	mov    eax,DWORD PTR [rax+0x10]
  42bd3e:	cmp    eax,DWORD PTR [rbp-0x4]
  42bd41:	jg     42bd4a <flatcc_json_printer_error_string@@Base+0xc8>
  42bd43:	mov    eax,0x0
  42bd48:	jmp    42bd81 <flatcc_json_printer_error_string@@Base+0xff>
  42bd4a:	mov    edx,DWORD PTR [rbp-0x4]
  42bd4d:	mov    rax,QWORD PTR [rbp-0x18]
  42bd51:	mov    rax,QWORD PTR [rax+0x8]
  42bd55:	mov    esi,edx
  42bd57:	mov    rdi,rax
  42bd5a:	call   42bcf8 <flatcc_json_printer_error_string@@Base+0x76>
  42bd5f:	movzx  eax,ax
  42bd62:	mov    DWORD PTR [rbp-0x4],eax
  42bd65:	cmp    DWORD PTR [rbp-0x4],0x0
  42bd69:	jne    42bd72 <flatcc_json_printer_error_string@@Base+0xf0>
  42bd6b:	mov    eax,0x0
  42bd70:	jmp    42bd81 <flatcc_json_printer_error_string@@Base+0xff>
  42bd72:	mov    rax,QWORD PTR [rbp-0x18]
  42bd76:	mov    rdx,QWORD PTR [rax]
  42bd79:	mov    eax,DWORD PTR [rbp-0x4]
  42bd7c:	cdqe   
  42bd7e:	add    rax,rdx
  42bd81:	leave  
  42bd82:	ret    

000000000042bd83 <flatcc_json_printer_fmt_float@@Base>:
  42bd83:	push   rbp
  42bd84:	mov    rbp,rsp
  42bd87:	sub    rsp,0x10
  42bd8b:	mov    QWORD PTR [rbp-0x8],rdi
  42bd8f:	vmovss DWORD PTR [rbp-0xc],xmm0
  42bd94:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0xc]
  42bd99:	mov    rax,QWORD PTR [rbp-0x8]
  42bd9d:	mov    rdi,rax
  42bda0:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42bda5:	leave  
  42bda6:	ret    

000000000042bda7 <flatcc_json_printer_fmt_double@@Base>:
  42bda7:	push   rbp
  42bda8:	mov    rbp,rsp
  42bdab:	sub    rsp,0x20
  42bdaf:	mov    QWORD PTR [rbp-0x8],rdi
  42bdb3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42bdb8:	mov    rdx,QWORD PTR [rbp-0x8]
  42bdbc:	mov    rax,QWORD PTR [rbp-0x10]
  42bdc0:	mov    rdi,rdx
  42bdc3:	mov    QWORD PTR [rbp-0x18],rax
  42bdc7:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42bdcc:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42bdd1:	leave  
  42bdd2:	ret    

000000000042bdd3 <flatcc_json_printer_fmt_bool@@Base>:
  42bdd3:	push   rbp
  42bdd4:	mov    rbp,rsp
  42bdd7:	sub    rsp,0x10
  42bddb:	mov    QWORD PTR [rbp-0x8],rdi
  42bddf:	mov    DWORD PTR [rbp-0xc],esi
  42bde2:	cmp    DWORD PTR [rbp-0xc],0x0
  42bde6:	je     42be07 <flatcc_json_printer_fmt_bool@@Base+0x34>
  42bde8:	mov    rax,QWORD PTR [rbp-0x8]
  42bdec:	mov    edx,0x4
  42bdf1:	lea    rsi,[rip+0xf683]        # 43b47b <flatcc_builder_padding_base@@Base+0x321b>
  42bdf8:	mov    rdi,rax
  42bdfb:	call   4050f0 <memcpy@plt>
  42be00:	mov    eax,0x4
  42be05:	jmp    42be24 <flatcc_json_printer_fmt_bool@@Base+0x51>
  42be07:	mov    rax,QWORD PTR [rbp-0x8]
  42be0b:	mov    edx,0x5
  42be10:	lea    rsi,[rip+0xf669]        # 43b480 <flatcc_builder_padding_base@@Base+0x3220>
  42be17:	mov    rdi,rax
  42be1a:	call   4050f0 <memcpy@plt>
  42be1f:	mov    eax,0x5
  42be24:	leave  
  42be25:	ret    
  42be26:	push   rbp
  42be27:	mov    rbp,rsp
  42be2a:	sub    rsp,0x30
  42be2e:	mov    QWORD PTR [rbp-0x18],rdi
  42be32:	mov    QWORD PTR [rbp-0x20],rsi
  42be36:	mov    QWORD PTR [rbp-0x28],rdx
  42be3a:	mov    rax,QWORD PTR [rbp-0x18]
  42be3e:	mov    rdx,QWORD PTR [rax+0x28]
  42be42:	mov    rax,QWORD PTR [rbp-0x18]
  42be46:	mov    rax,QWORD PTR [rax+0x20]
  42be4a:	cmp    rdx,rax
  42be4d:	jb     42be65 <flatcc_json_printer_fmt_bool@@Base+0x92>
  42be4f:	mov    rax,QWORD PTR [rbp-0x18]
  42be53:	mov    rax,QWORD PTR [rax+0x48]
  42be57:	mov    rdx,QWORD PTR [rbp-0x18]
  42be5b:	mov    esi,0x0
  42be60:	mov    rdi,rdx
  42be63:	call   rax
  42be65:	mov    rax,QWORD PTR [rbp-0x18]
  42be69:	mov    rax,QWORD PTR [rax+0x20]
  42be6d:	mov    rdx,rax
  42be70:	mov    rax,QWORD PTR [rbp-0x18]
  42be74:	mov    rax,QWORD PTR [rax+0x28]
  42be78:	sub    rdx,rax
  42be7b:	mov    rax,rdx
  42be7e:	mov    QWORD PTR [rbp-0x8],rax
  42be82:	jmp    42bef9 <flatcc_json_printer_fmt_bool@@Base+0x126>
  42be84:	mov    rax,QWORD PTR [rbp-0x18]
  42be88:	mov    rax,QWORD PTR [rax+0x28]
  42be8c:	mov    rdx,QWORD PTR [rbp-0x8]
  42be90:	mov    rcx,QWORD PTR [rbp-0x20]
  42be94:	mov    rsi,rcx
  42be97:	mov    rdi,rax
  42be9a:	call   4050f0 <memcpy@plt>
  42be9f:	mov    rax,QWORD PTR [rbp-0x18]
  42bea3:	mov    rdx,QWORD PTR [rax+0x28]
  42bea7:	mov    rax,QWORD PTR [rbp-0x8]
  42beab:	add    rdx,rax
  42beae:	mov    rax,QWORD PTR [rbp-0x18]
  42beb2:	mov    QWORD PTR [rax+0x28],rdx
  42beb6:	mov    rax,QWORD PTR [rbp-0x8]
  42beba:	add    QWORD PTR [rbp-0x20],rax
  42bebe:	mov    rax,QWORD PTR [rbp-0x8]
  42bec2:	sub    QWORD PTR [rbp-0x28],rax
  42bec6:	mov    rax,QWORD PTR [rbp-0x18]
  42beca:	mov    rax,QWORD PTR [rax+0x48]
  42bece:	mov    rdx,QWORD PTR [rbp-0x18]
  42bed2:	mov    esi,0x0
  42bed7:	mov    rdi,rdx
  42beda:	call   rax
  42bedc:	mov    rax,QWORD PTR [rbp-0x18]
  42bee0:	mov    rax,QWORD PTR [rax+0x20]
  42bee4:	mov    rdx,rax
  42bee7:	mov    rax,QWORD PTR [rbp-0x18]
  42beeb:	mov    rax,QWORD PTR [rax+0x28]
  42beef:	sub    rdx,rax
  42bef2:	mov    rax,rdx
  42bef5:	mov    QWORD PTR [rbp-0x8],rax
  42bef9:	mov    rax,QWORD PTR [rbp-0x28]
  42befd:	cmp    rax,QWORD PTR [rbp-0x8]
  42bf01:	ja     42be84 <flatcc_json_printer_fmt_bool@@Base+0xb1>
  42bf03:	mov    rax,QWORD PTR [rbp-0x18]
  42bf07:	mov    rax,QWORD PTR [rax+0x28]
  42bf0b:	mov    rdx,QWORD PTR [rbp-0x28]
  42bf0f:	mov    rcx,QWORD PTR [rbp-0x20]
  42bf13:	mov    rsi,rcx
  42bf16:	mov    rdi,rax
  42bf19:	call   4050f0 <memcpy@plt>
  42bf1e:	mov    rax,QWORD PTR [rbp-0x18]
  42bf22:	mov    rdx,QWORD PTR [rax+0x28]
  42bf26:	mov    rax,QWORD PTR [rbp-0x28]
  42bf2a:	add    rdx,rax
  42bf2d:	mov    rax,QWORD PTR [rbp-0x18]
  42bf31:	mov    QWORD PTR [rax+0x28],rdx
  42bf35:	nop
  42bf36:	leave  
  42bf37:	ret    
  42bf38:	push   rbp
  42bf39:	mov    rbp,rsp
  42bf3c:	sub    rsp,0x20
  42bf40:	mov    QWORD PTR [rbp-0x8],rdi
  42bf44:	mov    QWORD PTR [rbp-0x10],rsi
  42bf48:	mov    QWORD PTR [rbp-0x18],rdx
  42bf4c:	mov    rax,QWORD PTR [rbp-0x8]
  42bf50:	mov    rdx,QWORD PTR [rax+0x28]
  42bf54:	mov    rax,QWORD PTR [rbp-0x18]
  42bf58:	add    rdx,rax
  42bf5b:	mov    rax,QWORD PTR [rbp-0x8]
  42bf5f:	mov    rax,QWORD PTR [rax+0x20]
  42bf63:	cmp    rdx,rax
  42bf66:	jb     42bf81 <flatcc_json_printer_fmt_bool@@Base+0x1ae>
  42bf68:	mov    rdx,QWORD PTR [rbp-0x18]
  42bf6c:	mov    rcx,QWORD PTR [rbp-0x10]
  42bf70:	mov    rax,QWORD PTR [rbp-0x8]
  42bf74:	mov    rsi,rcx
  42bf77:	mov    rdi,rax
  42bf7a:	call   42be26 <flatcc_json_printer_fmt_bool@@Base+0x53>
  42bf7f:	jmp    42bfb3 <flatcc_json_printer_fmt_bool@@Base+0x1e0>
  42bf81:	mov    rax,QWORD PTR [rbp-0x8]
  42bf85:	mov    rax,QWORD PTR [rax+0x28]
  42bf89:	mov    rdx,QWORD PTR [rbp-0x18]
  42bf8d:	mov    rcx,QWORD PTR [rbp-0x10]
  42bf91:	mov    rsi,rcx
  42bf94:	mov    rdi,rax
  42bf97:	call   4050f0 <memcpy@plt>
  42bf9c:	mov    rax,QWORD PTR [rbp-0x8]
  42bfa0:	mov    rdx,QWORD PTR [rax+0x28]
  42bfa4:	mov    rax,QWORD PTR [rbp-0x18]
  42bfa8:	add    rdx,rax
  42bfab:	mov    rax,QWORD PTR [rbp-0x8]
  42bfaf:	mov    QWORD PTR [rax+0x28],rdx
  42bfb3:	nop
  42bfb4:	leave  
  42bfb5:	ret    
  42bfb6:	push   rbp
  42bfb7:	mov    rbp,rsp
  42bfba:	sub    rsp,0x40
  42bfbe:	mov    QWORD PTR [rbp-0x28],rdi
  42bfc2:	mov    QWORD PTR [rbp-0x30],rsi
  42bfc6:	mov    QWORD PTR [rbp-0x38],rdx
  42bfca:	mov    rax,QWORD PTR [rbp-0x30]
  42bfce:	mov    QWORD PTR [rbp-0x10],rax
  42bfd2:	mov    rax,QWORD PTR [rbp-0x28]
  42bfd6:	mov    rax,QWORD PTR [rax+0x28]
  42bfda:	lea    rcx,[rax+0x1]
  42bfde:	mov    rdx,QWORD PTR [rbp-0x28]
  42bfe2:	mov    QWORD PTR [rdx+0x28],rcx
  42bfe6:	mov    BYTE PTR [rax],0x22
  42bfe9:	mov    rax,QWORD PTR [rbp-0x10]
  42bfed:	movzx  eax,BYTE PTR [rax]
  42bff0:	mov    BYTE PTR [rbp-0x12],al
  42bff3:	jmp    42c004 <flatcc_json_printer_fmt_bool@@Base+0x231>
  42bff5:	add    QWORD PTR [rbp-0x10],0x1
  42bffa:	mov    rax,QWORD PTR [rbp-0x10]
  42bffe:	movzx  eax,BYTE PTR [rax]
  42c001:	mov    BYTE PTR [rbp-0x12],al
  42c004:	cmp    BYTE PTR [rbp-0x12],0x1f
  42c008:	jbe    42c016 <flatcc_json_printer_fmt_bool@@Base+0x243>
  42c00a:	cmp    BYTE PTR [rbp-0x12],0x22
  42c00e:	je     42c016 <flatcc_json_printer_fmt_bool@@Base+0x243>
  42c010:	cmp    BYTE PTR [rbp-0x12],0x5c
  42c014:	jne    42bff5 <flatcc_json_printer_fmt_bool@@Base+0x222>
  42c016:	mov    rdx,QWORD PTR [rbp-0x10]
  42c01a:	mov    rax,QWORD PTR [rbp-0x30]
  42c01e:	sub    rdx,rax
  42c021:	mov    rax,rdx
  42c024:	mov    QWORD PTR [rbp-0x8],rax
  42c028:	mov    rdx,QWORD PTR [rbp-0x8]
  42c02c:	mov    rcx,QWORD PTR [rbp-0x30]
  42c030:	mov    rax,QWORD PTR [rbp-0x28]
  42c034:	mov    rsi,rcx
  42c037:	mov    rdi,rax
  42c03a:	call   42bf38 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42c03f:	mov    rax,QWORD PTR [rbp-0x8]
  42c043:	sub    QWORD PTR [rbp-0x38],rax
  42c047:	cmp    QWORD PTR [rbp-0x38],0x0
  42c04c:	je     42c243 <flatcc_json_printer_fmt_bool@@Base+0x470>
  42c052:	mov    rax,QWORD PTR [rbp-0x8]
  42c056:	add    QWORD PTR [rbp-0x30],rax
  42c05a:	mov    rax,QWORD PTR [rbp-0x28]
  42c05e:	mov    rax,QWORD PTR [rax+0x28]
  42c062:	lea    rcx,[rax+0x1]
  42c066:	mov    rdx,QWORD PTR [rbp-0x28]
  42c06a:	mov    QWORD PTR [rdx+0x28],rcx
  42c06e:	mov    BYTE PTR [rax],0x5c
  42c071:	movzx  eax,BYTE PTR [rbp-0x12]
  42c075:	cmp    eax,0xc
  42c078:	je     42c107 <flatcc_json_printer_fmt_bool@@Base+0x334>
  42c07e:	cmp    eax,0xc
  42c081:	jg     42c09f <flatcc_json_printer_fmt_bool@@Base+0x2cc>
  42c083:	cmp    eax,0x9
  42c086:	je     42c0eb <flatcc_json_printer_fmt_bool@@Base+0x318>
  42c088:	cmp    eax,0xa
  42c08b:	je     42c13f <flatcc_json_printer_fmt_bool@@Base+0x36c>
  42c091:	cmp    eax,0x8
  42c094:	je     42c15b <flatcc_json_printer_fmt_bool@@Base+0x388>
  42c09a:	jmp    42c177 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
  42c09f:	cmp    eax,0x22
  42c0a2:	je     42c0b3 <flatcc_json_printer_fmt_bool@@Base+0x2e0>
  42c0a4:	cmp    eax,0x5c
  42c0a7:	je     42c0cf <flatcc_json_printer_fmt_bool@@Base+0x2fc>
  42c0a9:	cmp    eax,0xd
  42c0ac:	je     42c123 <flatcc_json_printer_fmt_bool@@Base+0x350>
  42c0ae:	jmp    42c177 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
  42c0b3:	mov    rax,QWORD PTR [rbp-0x28]
  42c0b7:	mov    rax,QWORD PTR [rax+0x28]
  42c0bb:	lea    rcx,[rax+0x1]
  42c0bf:	mov    rdx,QWORD PTR [rbp-0x28]
  42c0c3:	mov    QWORD PTR [rdx+0x28],rcx
  42c0c7:	mov    BYTE PTR [rax],0x22
  42c0ca:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c0cf:	mov    rax,QWORD PTR [rbp-0x28]
  42c0d3:	mov    rax,QWORD PTR [rax+0x28]
  42c0d7:	lea    rcx,[rax+0x1]
  42c0db:	mov    rdx,QWORD PTR [rbp-0x28]
  42c0df:	mov    QWORD PTR [rdx+0x28],rcx
  42c0e3:	mov    BYTE PTR [rax],0x5c
  42c0e6:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c0eb:	mov    rax,QWORD PTR [rbp-0x28]
  42c0ef:	mov    rax,QWORD PTR [rax+0x28]
  42c0f3:	lea    rcx,[rax+0x1]
  42c0f7:	mov    rdx,QWORD PTR [rbp-0x28]
  42c0fb:	mov    QWORD PTR [rdx+0x28],rcx
  42c0ff:	mov    BYTE PTR [rax],0x74
  42c102:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c107:	mov    rax,QWORD PTR [rbp-0x28]
  42c10b:	mov    rax,QWORD PTR [rax+0x28]
  42c10f:	lea    rcx,[rax+0x1]
  42c113:	mov    rdx,QWORD PTR [rbp-0x28]
  42c117:	mov    QWORD PTR [rdx+0x28],rcx
  42c11b:	mov    BYTE PTR [rax],0x66
  42c11e:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c123:	mov    rax,QWORD PTR [rbp-0x28]
  42c127:	mov    rax,QWORD PTR [rax+0x28]
  42c12b:	lea    rcx,[rax+0x1]
  42c12f:	mov    rdx,QWORD PTR [rbp-0x28]
  42c133:	mov    QWORD PTR [rdx+0x28],rcx
  42c137:	mov    BYTE PTR [rax],0x72
  42c13a:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c13f:	mov    rax,QWORD PTR [rbp-0x28]
  42c143:	mov    rax,QWORD PTR [rax+0x28]
  42c147:	lea    rcx,[rax+0x1]
  42c14b:	mov    rdx,QWORD PTR [rbp-0x28]
  42c14f:	mov    QWORD PTR [rdx+0x28],rcx
  42c153:	mov    BYTE PTR [rax],0x6e
  42c156:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c15b:	mov    rax,QWORD PTR [rbp-0x28]
  42c15f:	mov    rax,QWORD PTR [rax+0x28]
  42c163:	lea    rcx,[rax+0x1]
  42c167:	mov    rdx,QWORD PTR [rbp-0x28]
  42c16b:	mov    QWORD PTR [rdx+0x28],rcx
  42c16f:	mov    BYTE PTR [rax],0x62
  42c172:	jmp    42c22f <flatcc_json_printer_fmt_bool@@Base+0x45c>
  42c177:	mov    rax,QWORD PTR [rbp-0x28]
  42c17b:	mov    rax,QWORD PTR [rax+0x28]
  42c17f:	lea    rcx,[rax+0x1]
  42c183:	mov    rdx,QWORD PTR [rbp-0x28]
  42c187:	mov    QWORD PTR [rdx+0x28],rcx
  42c18b:	mov    BYTE PTR [rax],0x75
  42c18e:	mov    rax,QWORD PTR [rbp-0x28]
  42c192:	mov    rax,QWORD PTR [rax+0x28]
  42c196:	lea    rcx,[rax+0x1]
  42c19a:	mov    rdx,QWORD PTR [rbp-0x28]
  42c19e:	mov    QWORD PTR [rdx+0x28],rcx
  42c1a2:	mov    BYTE PTR [rax],0x30
  42c1a5:	mov    rax,QWORD PTR [rbp-0x28]
  42c1a9:	mov    rax,QWORD PTR [rax+0x28]
  42c1ad:	lea    rcx,[rax+0x1]
  42c1b1:	mov    rdx,QWORD PTR [rbp-0x28]
  42c1b5:	mov    QWORD PTR [rdx+0x28],rcx
  42c1b9:	mov    BYTE PTR [rax],0x30
  42c1bc:	movzx  eax,BYTE PTR [rbp-0x12]
  42c1c0:	shr    al,0x4
  42c1c3:	mov    BYTE PTR [rbp-0x11],al
  42c1c6:	cmp    BYTE PTR [rbp-0x11],0x9
  42c1ca:	ja     42c1d3 <flatcc_json_printer_fmt_bool@@Base+0x400>
  42c1cc:	mov    eax,0x30
  42c1d1:	jmp    42c1d8 <flatcc_json_printer_fmt_bool@@Base+0x405>
  42c1d3:	mov    eax,0x57
  42c1d8:	add    BYTE PTR [rbp-0x11],al
  42c1db:	mov    rax,QWORD PTR [rbp-0x28]
  42c1df:	mov    rax,QWORD PTR [rax+0x28]
  42c1e3:	lea    rcx,[rax+0x1]
  42c1e7:	mov    rdx,QWORD PTR [rbp-0x28]
  42c1eb:	mov    QWORD PTR [rdx+0x28],rcx
  42c1ef:	movzx  edx,BYTE PTR [rbp-0x11]
  42c1f3:	mov    BYTE PTR [rax],dl
  42c1f5:	movzx  eax,BYTE PTR [rbp-0x12]
  42c1f9:	and    eax,0xf
  42c1fc:	mov    BYTE PTR [rbp-0x11],al
  42c1ff:	cmp    BYTE PTR [rbp-0x11],0x9
  42c203:	ja     42c20c <flatcc_json_printer_fmt_bool@@Base+0x439>
  42c205:	mov    eax,0x30
  42c20a:	jmp    42c211 <flatcc_json_printer_fmt_bool@@Base+0x43e>
  42c20c:	mov    eax,0x57
  42c211:	add    BYTE PTR [rbp-0x11],al
  42c214:	mov    rax,QWORD PTR [rbp-0x28]
  42c218:	mov    rax,QWORD PTR [rax+0x28]
  42c21c:	lea    rcx,[rax+0x1]
  42c220:	mov    rdx,QWORD PTR [rbp-0x28]
  42c224:	mov    QWORD PTR [rdx+0x28],rcx
  42c228:	movzx  edx,BYTE PTR [rbp-0x11]
  42c22c:	mov    BYTE PTR [rax],dl
  42c22e:	nop
  42c22f:	add    QWORD PTR [rbp-0x10],0x1
  42c234:	sub    QWORD PTR [rbp-0x38],0x1
  42c239:	add    QWORD PTR [rbp-0x30],0x1
  42c23e:	jmp    42bfe9 <flatcc_json_printer_fmt_bool@@Base+0x216>
  42c243:	nop
  42c244:	mov    rax,QWORD PTR [rbp-0x28]
  42c248:	mov    rax,QWORD PTR [rax+0x28]
  42c24c:	lea    rcx,[rax+0x1]
  42c250:	mov    rdx,QWORD PTR [rbp-0x28]
  42c254:	mov    QWORD PTR [rdx+0x28],rcx
  42c258:	mov    BYTE PTR [rax],0x22
  42c25b:	nop
  42c25c:	leave  
  42c25d:	ret    
  42c25e:	push   rbp
  42c25f:	mov    rbp,rsp
  42c262:	sub    rsp,0x60
  42c266:	mov    QWORD PTR [rbp-0x48],rdi
  42c26a:	mov    QWORD PTR [rbp-0x50],rsi
  42c26e:	mov    DWORD PTR [rbp-0x54],edx
  42c271:	mov    rax,QWORD PTR fs:0x28
  42c27a:	mov    QWORD PTR [rbp-0x8],rax
  42c27e:	xor    eax,eax
  42c280:	mov    eax,DWORD PTR [rbp-0x54]
  42c283:	and    al,0x7f
  42c285:	mov    DWORD PTR [rbp-0x3c],eax
  42c288:	mov    rax,QWORD PTR [rbp-0x50]
  42c28c:	mov    rdi,rax
  42c28f:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42c294:	mov    eax,eax
  42c296:	mov    QWORD PTR [rbp-0x38],rax
  42c29a:	mov    rax,QWORD PTR [rbp-0x50]
  42c29e:	add    rax,0x4
  42c2a2:	mov    QWORD PTR [rbp-0x20],rax
  42c2a6:	mov    rax,QWORD PTR [rbp-0x48]
  42c2aa:	mov    rax,QWORD PTR [rax+0x28]
  42c2ae:	lea    rcx,[rax+0x1]
  42c2b2:	mov    rdx,QWORD PTR [rbp-0x48]
  42c2b6:	mov    QWORD PTR [rdx+0x28],rcx
  42c2ba:	mov    BYTE PTR [rax],0x22
  42c2bd:	mov    rax,QWORD PTR [rbp-0x38]
  42c2c1:	mov    edx,DWORD PTR [rbp-0x54]
  42c2c4:	mov    esi,edx
  42c2c6:	mov    rdi,rax
  42c2c9:	call   42b472 <flatcc_json_parser_struct_as_root@@Base+0x2d9a>
  42c2ce:	mov    QWORD PTR [rbp-0x28],rax
  42c2d2:	mov    rax,QWORD PTR [rbp-0x48]
  42c2d6:	mov    rdx,QWORD PTR [rax+0x28]
  42c2da:	mov    rax,QWORD PTR [rbp-0x28]
  42c2de:	add    rdx,rax
  42c2e1:	mov    rax,QWORD PTR [rbp-0x48]
  42c2e5:	mov    rax,QWORD PTR [rax+0x20]
  42c2e9:	cmp    rdx,rax
  42c2ec:	jb     42c3fa <flatcc_json_printer_fmt_bool@@Base+0x627>
  42c2f2:	mov    rax,QWORD PTR [rbp-0x48]
  42c2f6:	mov    rax,QWORD PTR [rax+0x48]
  42c2fa:	mov    rdx,QWORD PTR [rbp-0x48]
  42c2fe:	mov    esi,0x0
  42c303:	mov    rdi,rdx
  42c306:	call   rax
  42c308:	jmp    42c3fa <flatcc_json_printer_fmt_bool@@Base+0x627>
  42c30d:	mov    rax,QWORD PTR [rbp-0x48]
  42c311:	mov    rax,QWORD PTR [rax+0x20]
  42c315:	mov    rdx,rax
  42c318:	mov    rax,QWORD PTR [rbp-0x48]
  42c31c:	mov    rax,QWORD PTR [rax+0x28]
  42c320:	sub    rdx,rax
  42c323:	mov    rax,rdx
  42c326:	and    rax,0xfffffffffffffffc
  42c32a:	mov    QWORD PTR [rbp-0x18],rax
  42c32e:	mov    rdx,QWORD PTR [rbp-0x18]
  42c332:	mov    rax,rdx
  42c335:	add    rax,rax
  42c338:	add    rax,rdx
  42c33b:	shr    rax,0x2
  42c33f:	mov    QWORD PTR [rbp-0x10],rax
  42c343:	cmp    QWORD PTR [rbp-0x10],0x0
  42c348:	jne    42c369 <flatcc_json_printer_fmt_bool@@Base+0x596>
  42c34a:	lea    rcx,[rip+0xf70f]        # 43ba60 <flatcc_builder_padding_base@@Base+0x3800>
  42c351:	mov    edx,0x115
  42c356:	lea    rsi,[rip+0xf12b]        # 43b488 <flatcc_builder_padding_base@@Base+0x3228>
  42c35d:	lea    rdi,[rip+0xf189]        # 43b4ed <flatcc_builder_padding_base@@Base+0x328d>
  42c364:	call   405080 <__assert_fail@plt>
  42c369:	mov    rdx,QWORD PTR [rbp-0x18]
  42c36d:	mov    rax,rdx
  42c370:	add    rax,rax
  42c373:	add    rax,rdx
  42c376:	shr    rax,0x2
  42c37a:	mov    QWORD PTR [rbp-0x30],rax
  42c37e:	mov    rax,QWORD PTR [rbp-0x48]
  42c382:	mov    rax,QWORD PTR [rax+0x28]
  42c386:	mov    ecx,DWORD PTR [rbp-0x3c]
  42c389:	lea    rdx,[rbp-0x30]
  42c38d:	mov    rsi,QWORD PTR [rbp-0x20]
  42c391:	mov    r8d,ecx
  42c394:	mov    rcx,rdx
  42c397:	mov    edx,0x0
  42c39c:	mov    rdi,rax
  42c39f:	call   42b559 <flatcc_json_parser_struct_as_root@@Base+0x2e81>
  42c3a4:	mov    rax,QWORD PTR [rbp-0x48]
  42c3a8:	mov    rdx,QWORD PTR [rax+0x28]
  42c3ac:	mov    rax,QWORD PTR [rbp-0x18]
  42c3b0:	add    rdx,rax
  42c3b3:	mov    rax,QWORD PTR [rbp-0x48]
  42c3b7:	mov    QWORD PTR [rax+0x28],rdx
  42c3bb:	mov    rax,QWORD PTR [rbp-0x10]
  42c3bf:	add    QWORD PTR [rbp-0x20],rax
  42c3c3:	mov    rax,QWORD PTR [rbp-0x38]
  42c3c7:	sub    rax,QWORD PTR [rbp-0x10]
  42c3cb:	mov    QWORD PTR [rbp-0x38],rax
  42c3cf:	mov    rax,QWORD PTR [rbp-0x48]
  42c3d3:	mov    rax,QWORD PTR [rax+0x48]
  42c3d7:	mov    rdx,QWORD PTR [rbp-0x48]
  42c3db:	mov    esi,0x0
  42c3e0:	mov    rdi,rdx
  42c3e3:	call   rax
  42c3e5:	mov    rax,QWORD PTR [rbp-0x38]
  42c3e9:	mov    edx,DWORD PTR [rbp-0x54]
  42c3ec:	mov    esi,edx
  42c3ee:	mov    rdi,rax
  42c3f1:	call   42b472 <flatcc_json_parser_struct_as_root@@Base+0x2d9a>
  42c3f6:	mov    QWORD PTR [rbp-0x28],rax
  42c3fa:	mov    rax,QWORD PTR [rbp-0x48]
  42c3fe:	mov    rdx,QWORD PTR [rax+0x28]
  42c402:	mov    rax,QWORD PTR [rbp-0x28]
  42c406:	add    rdx,rax
  42c409:	mov    rax,QWORD PTR [rbp-0x48]
  42c40d:	mov    rax,QWORD PTR [rax+0x20]
  42c411:	cmp    rdx,rax
  42c414:	ja     42c30d <flatcc_json_printer_fmt_bool@@Base+0x53a>
  42c41a:	mov    rax,QWORD PTR [rbp-0x48]
  42c41e:	mov    rax,QWORD PTR [rax+0x28]
  42c422:	mov    ecx,DWORD PTR [rbp-0x54]
  42c425:	lea    rdx,[rbp-0x38]
  42c429:	mov    rsi,QWORD PTR [rbp-0x20]
  42c42d:	mov    r8d,ecx
  42c430:	mov    rcx,rdx
  42c433:	mov    edx,0x0
  42c438:	mov    rdi,rax
  42c43b:	call   42b559 <flatcc_json_parser_struct_as_root@@Base+0x2e81>
  42c440:	mov    rax,QWORD PTR [rbp-0x48]
  42c444:	mov    rdx,QWORD PTR [rax+0x28]
  42c448:	mov    rax,QWORD PTR [rbp-0x28]
  42c44c:	add    rdx,rax
  42c44f:	mov    rax,QWORD PTR [rbp-0x48]
  42c453:	mov    QWORD PTR [rax+0x28],rdx
  42c457:	mov    rax,QWORD PTR [rbp-0x48]
  42c45b:	mov    rax,QWORD PTR [rax+0x28]
  42c45f:	lea    rcx,[rax+0x1]
  42c463:	mov    rdx,QWORD PTR [rbp-0x48]
  42c467:	mov    QWORD PTR [rdx+0x28],rcx
  42c46b:	mov    BYTE PTR [rax],0x22
  42c46e:	nop
  42c46f:	mov    rax,QWORD PTR [rbp-0x8]
  42c473:	xor    rax,QWORD PTR fs:0x28
  42c47c:	je     42c483 <flatcc_json_printer_fmt_bool@@Base+0x6b0>
  42c47e:	call   405070 <__stack_chk_fail@plt>
  42c483:	leave  
  42c484:	ret    
  42c485:	push   rbp
  42c486:	mov    rbp,rsp
  42c489:	sub    rsp,0x20
  42c48d:	mov    QWORD PTR [rbp-0x18],rdi
  42c491:	mov    QWORD PTR [rbp-0x20],rsi
  42c495:	mov    rax,QWORD PTR [rbp-0x18]
  42c499:	mov    rdx,QWORD PTR [rax+0x28]
  42c49d:	mov    rax,QWORD PTR [rbp-0x18]
  42c4a1:	mov    rax,QWORD PTR [rax+0x20]
  42c4a5:	cmp    rdx,rax
  42c4a8:	jb     42c4c0 <flatcc_json_printer_fmt_bool@@Base+0x6ed>
  42c4aa:	mov    rax,QWORD PTR [rbp-0x18]
  42c4ae:	mov    rax,QWORD PTR [rax+0x48]
  42c4b2:	mov    rdx,QWORD PTR [rbp-0x18]
  42c4b6:	mov    esi,0x0
  42c4bb:	mov    rdi,rdx
  42c4be:	call   rax
  42c4c0:	mov    rax,QWORD PTR [rbp-0x18]
  42c4c4:	mov    rax,QWORD PTR [rax+0x20]
  42c4c8:	mov    rdx,rax
  42c4cb:	mov    rax,QWORD PTR [rbp-0x18]
  42c4cf:	mov    rax,QWORD PTR [rax+0x28]
  42c4d3:	sub    rdx,rax
  42c4d6:	mov    rax,rdx
  42c4d9:	mov    QWORD PTR [rbp-0x8],rax
  42c4dd:	jmp    42c54a <flatcc_json_printer_fmt_bool@@Base+0x777>
  42c4df:	mov    rax,QWORD PTR [rbp-0x18]
  42c4e3:	mov    rax,QWORD PTR [rax+0x28]
  42c4e7:	mov    rdx,QWORD PTR [rbp-0x8]
  42c4eb:	mov    esi,0x20
  42c4f0:	mov    rdi,rax
  42c4f3:	call   405090 <memset@plt>
  42c4f8:	mov    rax,QWORD PTR [rbp-0x18]
  42c4fc:	mov    rdx,QWORD PTR [rax+0x28]
  42c500:	mov    rax,QWORD PTR [rbp-0x8]
  42c504:	add    rdx,rax
  42c507:	mov    rax,QWORD PTR [rbp-0x18]
  42c50b:	mov    QWORD PTR [rax+0x28],rdx
  42c50f:	mov    rax,QWORD PTR [rbp-0x8]
  42c513:	sub    QWORD PTR [rbp-0x20],rax
  42c517:	mov    rax,QWORD PTR [rbp-0x18]
  42c51b:	mov    rax,QWORD PTR [rax+0x48]
  42c51f:	mov    rdx,QWORD PTR [rbp-0x18]
  42c523:	mov    esi,0x0
  42c528:	mov    rdi,rdx
  42c52b:	call   rax
  42c52d:	mov    rax,QWORD PTR [rbp-0x18]
  42c531:	mov    rax,QWORD PTR [rax+0x20]
  42c535:	mov    rdx,rax
  42c538:	mov    rax,QWORD PTR [rbp-0x18]
  42c53c:	mov    rax,QWORD PTR [rax+0x28]
  42c540:	sub    rdx,rax
  42c543:	mov    rax,rdx
  42c546:	mov    QWORD PTR [rbp-0x8],rax
  42c54a:	mov    rax,QWORD PTR [rbp-0x20]
  42c54e:	cmp    rax,QWORD PTR [rbp-0x8]
  42c552:	ja     42c4df <flatcc_json_printer_fmt_bool@@Base+0x70c>
  42c554:	mov    rax,QWORD PTR [rbp-0x18]
  42c558:	mov    rax,QWORD PTR [rax+0x28]
  42c55c:	mov    rdx,QWORD PTR [rbp-0x20]
  42c560:	mov    esi,0x20
  42c565:	mov    rdi,rax
  42c568:	call   405090 <memset@plt>
  42c56d:	mov    rax,QWORD PTR [rbp-0x18]
  42c571:	mov    rdx,QWORD PTR [rax+0x28]
  42c575:	mov    rax,QWORD PTR [rbp-0x20]
  42c579:	add    rdx,rax
  42c57c:	mov    rax,QWORD PTR [rbp-0x18]
  42c580:	mov    QWORD PTR [rax+0x28],rdx
  42c584:	nop
  42c585:	leave  
  42c586:	ret    
  42c587:	push   rbp
  42c588:	mov    rbp,rsp
  42c58b:	sub    rsp,0x20
  42c58f:	mov    QWORD PTR [rbp-0x18],rdi
  42c593:	mov    rax,QWORD PTR [rbp-0x18]
  42c597:	mov    edx,DWORD PTR [rax+0x38]
  42c59a:	mov    rax,QWORD PTR [rbp-0x18]
  42c59e:	movzx  eax,BYTE PTR [rax+0x31]
  42c5a2:	movzx  eax,al
  42c5a5:	imul   eax,edx
  42c5a8:	cdqe   
  42c5aa:	mov    QWORD PTR [rbp-0x8],rax
  42c5ae:	mov    rax,QWORD PTR [rbp-0x18]
  42c5b2:	mov    rdx,QWORD PTR [rax+0x28]
  42c5b6:	mov    rax,QWORD PTR [rbp-0x8]
  42c5ba:	add    rdx,rax
  42c5bd:	mov    rax,QWORD PTR [rbp-0x18]
  42c5c1:	mov    rax,QWORD PTR [rax+0x20]
  42c5c5:	cmp    rdx,rax
  42c5c8:	jbe    42c5df <flatcc_json_printer_fmt_bool@@Base+0x80c>
  42c5ca:	mov    rdx,QWORD PTR [rbp-0x8]
  42c5ce:	mov    rax,QWORD PTR [rbp-0x18]
  42c5d2:	mov    rsi,rdx
  42c5d5:	mov    rdi,rax
  42c5d8:	call   42c485 <flatcc_json_printer_fmt_bool@@Base+0x6b2>
  42c5dd:	jmp    42c60f <flatcc_json_printer_fmt_bool@@Base+0x83c>
  42c5df:	mov    rax,QWORD PTR [rbp-0x18]
  42c5e3:	mov    rax,QWORD PTR [rax+0x28]
  42c5e7:	mov    rdx,QWORD PTR [rbp-0x8]
  42c5eb:	mov    esi,0x20
  42c5f0:	mov    rdi,rax
  42c5f3:	call   405090 <memset@plt>
  42c5f8:	mov    rax,QWORD PTR [rbp-0x18]
  42c5fc:	mov    rdx,QWORD PTR [rax+0x28]
  42c600:	mov    rax,QWORD PTR [rbp-0x8]
  42c604:	add    rdx,rax
  42c607:	mov    rax,QWORD PTR [rbp-0x18]
  42c60b:	mov    QWORD PTR [rax+0x28],rdx
  42c60f:	nop
  42c610:	leave  
  42c611:	ret    

000000000042c612 <flatcc_json_printer_string@@Base>:
  42c612:	push   rbp
  42c613:	mov    rbp,rsp
  42c616:	sub    rsp,0x20
  42c61a:	mov    QWORD PTR [rbp-0x8],rdi
  42c61e:	mov    QWORD PTR [rbp-0x10],rsi
  42c622:	mov    DWORD PTR [rbp-0x14],edx
  42c625:	mov    eax,DWORD PTR [rbp-0x14]
  42c628:	movsxd rdx,eax
  42c62b:	mov    rcx,QWORD PTR [rbp-0x10]
  42c62f:	mov    rax,QWORD PTR [rbp-0x8]
  42c633:	mov    rsi,rcx
  42c636:	mov    rdi,rax
  42c639:	call   42bfb6 <flatcc_json_printer_fmt_bool@@Base+0x1e3>
  42c63e:	nop
  42c63f:	leave  
  42c640:	ret    

000000000042c641 <flatcc_json_printer_write@@Base>:
  42c641:	push   rbp
  42c642:	mov    rbp,rsp
  42c645:	sub    rsp,0x20
  42c649:	mov    QWORD PTR [rbp-0x8],rdi
  42c64d:	mov    QWORD PTR [rbp-0x10],rsi
  42c651:	mov    DWORD PTR [rbp-0x14],edx
  42c654:	mov    eax,DWORD PTR [rbp-0x14]
  42c657:	movsxd rdx,eax
  42c65a:	mov    rcx,QWORD PTR [rbp-0x10]
  42c65e:	mov    rax,QWORD PTR [rbp-0x8]
  42c662:	mov    rsi,rcx
  42c665:	mov    rdi,rax
  42c668:	call   42bf38 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42c66d:	nop
  42c66e:	leave  
  42c66f:	ret    

000000000042c670 <flatcc_json_printer_nl@@Base>:
  42c670:	push   rbp
  42c671:	mov    rbp,rsp
  42c674:	sub    rsp,0x10
  42c678:	mov    QWORD PTR [rbp-0x8],rdi
  42c67c:	mov    rax,QWORD PTR [rbp-0x8]
  42c680:	mov    rax,QWORD PTR [rax+0x28]
  42c684:	lea    rcx,[rax+0x1]
  42c688:	mov    rdx,QWORD PTR [rbp-0x8]
  42c68c:	mov    QWORD PTR [rdx+0x28],rcx
  42c690:	mov    BYTE PTR [rax],0xa
  42c693:	mov    rax,QWORD PTR [rbp-0x8]
  42c697:	mov    rdi,rax
  42c69a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42c69f:	nop
  42c6a0:	leave  
  42c6a1:	ret    

000000000042c6a2 <flatcc_json_printer_char@@Base>:
  42c6a2:	push   rbp
  42c6a3:	mov    rbp,rsp
  42c6a6:	mov    QWORD PTR [rbp-0x8],rdi
  42c6aa:	mov    eax,esi
  42c6ac:	mov    BYTE PTR [rbp-0xc],al
  42c6af:	mov    rax,QWORD PTR [rbp-0x8]
  42c6b3:	mov    rax,QWORD PTR [rax+0x28]
  42c6b7:	lea    rcx,[rax+0x1]
  42c6bb:	mov    rdx,QWORD PTR [rbp-0x8]
  42c6bf:	mov    QWORD PTR [rdx+0x28],rcx
  42c6c3:	movzx  edx,BYTE PTR [rbp-0xc]
  42c6c7:	mov    BYTE PTR [rax],dl
  42c6c9:	nop
  42c6ca:	pop    rbp
  42c6cb:	ret    

000000000042c6cc <flatcc_json_printer_indent@@Base>:
  42c6cc:	push   rbp
  42c6cd:	mov    rbp,rsp
  42c6d0:	sub    rsp,0x10
  42c6d4:	mov    QWORD PTR [rbp-0x8],rdi
  42c6d8:	mov    rax,QWORD PTR [rbp-0x8]
  42c6dc:	mov    rdi,rax
  42c6df:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42c6e4:	nop
  42c6e5:	leave  
  42c6e6:	ret    

000000000042c6e7 <flatcc_json_printer_add_level@@Base>:
  42c6e7:	push   rbp
  42c6e8:	mov    rbp,rsp
  42c6eb:	mov    QWORD PTR [rbp-0x8],rdi
  42c6ef:	mov    DWORD PTR [rbp-0xc],esi
  42c6f2:	mov    rax,QWORD PTR [rbp-0x8]
  42c6f6:	mov    edx,DWORD PTR [rax+0x38]
  42c6f9:	mov    eax,DWORD PTR [rbp-0xc]
  42c6fc:	add    edx,eax
  42c6fe:	mov    rax,QWORD PTR [rbp-0x8]
  42c702:	mov    DWORD PTR [rax+0x38],edx
  42c705:	nop
  42c706:	pop    rbp
  42c707:	ret    

000000000042c708 <flatcc_json_printer_get_level@@Base>:
  42c708:	push   rbp
  42c709:	mov    rbp,rsp
  42c70c:	mov    QWORD PTR [rbp-0x8],rdi
  42c710:	mov    rax,QWORD PTR [rbp-0x8]
  42c714:	mov    eax,DWORD PTR [rax+0x38]
  42c717:	pop    rbp
  42c718:	ret    
  42c719:	push   rbp
  42c71a:	mov    rbp,rsp
  42c71d:	sub    rsp,0x20
  42c721:	mov    QWORD PTR [rbp-0x8],rdi
  42c725:	mov    QWORD PTR [rbp-0x10],rsi
  42c729:	mov    QWORD PTR [rbp-0x18],rdx
  42c72d:	mov    rax,QWORD PTR [rbp-0x8]
  42c731:	mov    rax,QWORD PTR [rax+0x28]
  42c735:	mov    BYTE PTR [rax],0x22
  42c738:	mov    rax,QWORD PTR [rbp-0x8]
  42c73c:	mov    rdx,QWORD PTR [rax+0x28]
  42c740:	mov    rax,QWORD PTR [rbp-0x8]
  42c744:	movzx  eax,BYTE PTR [rax+0x32]
  42c748:	test   al,al
  42c74a:	sete   al
  42c74d:	movzx  eax,al
  42c750:	add    rdx,rax
  42c753:	mov    rax,QWORD PTR [rbp-0x8]
  42c757:	mov    QWORD PTR [rax+0x28],rdx
  42c75b:	mov    rax,QWORD PTR [rbp-0x8]
  42c75f:	mov    rdx,QWORD PTR [rax+0x28]
  42c763:	mov    rax,QWORD PTR [rbp-0x18]
  42c767:	add    rdx,rax
  42c76a:	mov    rax,QWORD PTR [rbp-0x8]
  42c76e:	mov    rax,QWORD PTR [rax+0x20]
  42c772:	cmp    rdx,rax
  42c775:	jae    42c7ab <flatcc_json_printer_get_level@@Base+0xa3>
  42c777:	mov    rax,QWORD PTR [rbp-0x8]
  42c77b:	mov    rax,QWORD PTR [rax+0x28]
  42c77f:	mov    rdx,QWORD PTR [rbp-0x18]
  42c783:	mov    rcx,QWORD PTR [rbp-0x10]
  42c787:	mov    rsi,rcx
  42c78a:	mov    rdi,rax
  42c78d:	call   4050f0 <memcpy@plt>
  42c792:	mov    rax,QWORD PTR [rbp-0x8]
  42c796:	mov    rdx,QWORD PTR [rax+0x28]
  42c79a:	mov    rax,QWORD PTR [rbp-0x18]
  42c79e:	add    rdx,rax
  42c7a1:	mov    rax,QWORD PTR [rbp-0x8]
  42c7a5:	mov    QWORD PTR [rax+0x28],rdx
  42c7a9:	jmp    42c7c2 <flatcc_json_printer_get_level@@Base+0xba>
  42c7ab:	mov    rdx,QWORD PTR [rbp-0x18]
  42c7af:	mov    rcx,QWORD PTR [rbp-0x10]
  42c7b3:	mov    rax,QWORD PTR [rbp-0x8]
  42c7b7:	mov    rsi,rcx
  42c7ba:	mov    rdi,rax
  42c7bd:	call   42bf38 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42c7c2:	mov    rax,QWORD PTR [rbp-0x8]
  42c7c6:	mov    rax,QWORD PTR [rax+0x28]
  42c7ca:	mov    BYTE PTR [rax],0x22
  42c7cd:	mov    rax,QWORD PTR [rbp-0x8]
  42c7d1:	mov    rdx,QWORD PTR [rax+0x28]
  42c7d5:	mov    rax,QWORD PTR [rbp-0x8]
  42c7d9:	movzx  eax,BYTE PTR [rax+0x32]
  42c7dd:	test   al,al
  42c7df:	sete   al
  42c7e2:	movzx  eax,al
  42c7e5:	add    rdx,rax
  42c7e8:	mov    rax,QWORD PTR [rbp-0x8]
  42c7ec:	mov    QWORD PTR [rax+0x28],rdx
  42c7f0:	nop
  42c7f1:	leave  
  42c7f2:	ret    
  42c7f3:	push   rbp
  42c7f4:	mov    rbp,rsp
  42c7f7:	sub    rsp,0x20
  42c7fb:	mov    QWORD PTR [rbp-0x8],rdi
  42c7ff:	mov    QWORD PTR [rbp-0x10],rsi
  42c803:	mov    QWORD PTR [rbp-0x18],rdx
  42c807:	mov    rax,QWORD PTR [rbp-0x8]
  42c80b:	movzx  eax,BYTE PTR [rax+0x31]
  42c80f:	test   al,al
  42c811:	je     42c838 <flatcc_json_printer_get_level@@Base+0x130>
  42c813:	mov    rax,QWORD PTR [rbp-0x8]
  42c817:	mov    rax,QWORD PTR [rax+0x28]
  42c81b:	lea    rcx,[rax+0x1]
  42c81f:	mov    rdx,QWORD PTR [rbp-0x8]
  42c823:	mov    QWORD PTR [rdx+0x28],rcx
  42c827:	mov    BYTE PTR [rax],0xa
  42c82a:	mov    rax,QWORD PTR [rbp-0x8]
  42c82e:	mov    rdi,rax
  42c831:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42c836:	jmp    42c844 <flatcc_json_printer_get_level@@Base+0x13c>
  42c838:	mov    rax,QWORD PTR [rbp-0x8]
  42c83c:	mov    rdi,rax
  42c83f:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42c844:	mov    rdx,QWORD PTR [rbp-0x18]
  42c848:	mov    rcx,QWORD PTR [rbp-0x10]
  42c84c:	mov    rax,QWORD PTR [rbp-0x8]
  42c850:	mov    rsi,rcx
  42c853:	mov    rdi,rax
  42c856:	call   42c719 <flatcc_json_printer_get_level@@Base+0x11>
  42c85b:	mov    rax,QWORD PTR [rbp-0x8]
  42c85f:	mov    rax,QWORD PTR [rax+0x28]
  42c863:	lea    rcx,[rax+0x1]
  42c867:	mov    rdx,QWORD PTR [rbp-0x8]
  42c86b:	mov    QWORD PTR [rdx+0x28],rcx
  42c86f:	mov    BYTE PTR [rax],0x3a
  42c872:	mov    rax,QWORD PTR [rbp-0x8]
  42c876:	mov    rax,QWORD PTR [rax+0x28]
  42c87a:	mov    BYTE PTR [rax],0x20
  42c87d:	mov    rax,QWORD PTR [rbp-0x8]
  42c881:	mov    rdx,QWORD PTR [rax+0x28]
  42c885:	mov    rax,QWORD PTR [rbp-0x8]
  42c889:	movzx  eax,BYTE PTR [rax+0x31]
  42c88d:	test   al,al
  42c88f:	setne  al
  42c892:	movzx  eax,al
  42c895:	add    rdx,rax
  42c898:	mov    rax,QWORD PTR [rbp-0x8]
  42c89c:	mov    QWORD PTR [rax+0x28],rdx
  42c8a0:	nop
  42c8a1:	leave  
  42c8a2:	ret    

000000000042c8a3 <flatcc_json_printer_uint8@@Base>:
  42c8a3:	push   rbp
  42c8a4:	mov    rbp,rsp
  42c8a7:	sub    rsp,0x10
  42c8ab:	mov    QWORD PTR [rbp-0x8],rdi
  42c8af:	mov    eax,esi
  42c8b1:	mov    BYTE PTR [rbp-0xc],al
  42c8b4:	mov    rax,QWORD PTR [rbp-0x8]
  42c8b8:	mov    rdx,QWORD PTR [rax+0x28]
  42c8bc:	movzx  eax,BYTE PTR [rbp-0xc]
  42c8c0:	mov    rsi,rdx
  42c8c3:	mov    edi,eax
  42c8c5:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42c8ca:	mov    ecx,eax
  42c8cc:	mov    rax,QWORD PTR [rbp-0x8]
  42c8d0:	mov    rdx,QWORD PTR [rax+0x28]
  42c8d4:	movsxd rax,ecx
  42c8d7:	add    rdx,rax
  42c8da:	mov    rax,QWORD PTR [rbp-0x8]
  42c8de:	mov    QWORD PTR [rax+0x28],rdx
  42c8e2:	nop
  42c8e3:	leave  
  42c8e4:	ret    

000000000042c8e5 <flatcc_json_printer_uint16@@Base>:
  42c8e5:	push   rbp
  42c8e6:	mov    rbp,rsp
  42c8e9:	sub    rsp,0x10
  42c8ed:	mov    QWORD PTR [rbp-0x8],rdi
  42c8f1:	mov    eax,esi
  42c8f3:	mov    WORD PTR [rbp-0xc],ax
  42c8f7:	mov    rax,QWORD PTR [rbp-0x8]
  42c8fb:	mov    rdx,QWORD PTR [rax+0x28]
  42c8ff:	movzx  eax,WORD PTR [rbp-0xc]
  42c903:	mov    rsi,rdx
  42c906:	mov    edi,eax
  42c908:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42c90d:	mov    ecx,eax
  42c90f:	mov    rax,QWORD PTR [rbp-0x8]
  42c913:	mov    rdx,QWORD PTR [rax+0x28]
  42c917:	movsxd rax,ecx
  42c91a:	add    rdx,rax
  42c91d:	mov    rax,QWORD PTR [rbp-0x8]
  42c921:	mov    QWORD PTR [rax+0x28],rdx
  42c925:	nop
  42c926:	leave  
  42c927:	ret    

000000000042c928 <flatcc_json_printer_uint32@@Base>:
  42c928:	push   rbp
  42c929:	mov    rbp,rsp
  42c92c:	sub    rsp,0x10
  42c930:	mov    QWORD PTR [rbp-0x8],rdi
  42c934:	mov    DWORD PTR [rbp-0xc],esi
  42c937:	mov    rax,QWORD PTR [rbp-0x8]
  42c93b:	mov    rdx,QWORD PTR [rax+0x28]
  42c93f:	mov    eax,DWORD PTR [rbp-0xc]
  42c942:	mov    rsi,rdx
  42c945:	mov    edi,eax
  42c947:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42c94c:	mov    ecx,eax
  42c94e:	mov    rax,QWORD PTR [rbp-0x8]
  42c952:	mov    rdx,QWORD PTR [rax+0x28]
  42c956:	movsxd rax,ecx
  42c959:	add    rdx,rax
  42c95c:	mov    rax,QWORD PTR [rbp-0x8]
  42c960:	mov    QWORD PTR [rax+0x28],rdx
  42c964:	nop
  42c965:	leave  
  42c966:	ret    

000000000042c967 <flatcc_json_printer_uint64@@Base>:
  42c967:	push   rbp
  42c968:	mov    rbp,rsp
  42c96b:	sub    rsp,0x10
  42c96f:	mov    QWORD PTR [rbp-0x8],rdi
  42c973:	mov    QWORD PTR [rbp-0x10],rsi
  42c977:	mov    rax,QWORD PTR [rbp-0x8]
  42c97b:	mov    rdx,QWORD PTR [rax+0x28]
  42c97f:	mov    rax,QWORD PTR [rbp-0x10]
  42c983:	mov    rsi,rdx
  42c986:	mov    rdi,rax
  42c989:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42c98e:	mov    ecx,eax
  42c990:	mov    rax,QWORD PTR [rbp-0x8]
  42c994:	mov    rdx,QWORD PTR [rax+0x28]
  42c998:	movsxd rax,ecx
  42c99b:	add    rdx,rax
  42c99e:	mov    rax,QWORD PTR [rbp-0x8]
  42c9a2:	mov    QWORD PTR [rax+0x28],rdx
  42c9a6:	nop
  42c9a7:	leave  
  42c9a8:	ret    

000000000042c9a9 <flatcc_json_printer_int8@@Base>:
  42c9a9:	push   rbp
  42c9aa:	mov    rbp,rsp
  42c9ad:	sub    rsp,0x10
  42c9b1:	mov    QWORD PTR [rbp-0x8],rdi
  42c9b5:	mov    eax,esi
  42c9b7:	mov    BYTE PTR [rbp-0xc],al
  42c9ba:	mov    rax,QWORD PTR [rbp-0x8]
  42c9be:	mov    rdx,QWORD PTR [rax+0x28]
  42c9c2:	movsx  eax,BYTE PTR [rbp-0xc]
  42c9c6:	mov    rsi,rdx
  42c9c9:	mov    edi,eax
  42c9cb:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42c9d0:	mov    ecx,eax
  42c9d2:	mov    rax,QWORD PTR [rbp-0x8]
  42c9d6:	mov    rdx,QWORD PTR [rax+0x28]
  42c9da:	movsxd rax,ecx
  42c9dd:	add    rdx,rax
  42c9e0:	mov    rax,QWORD PTR [rbp-0x8]
  42c9e4:	mov    QWORD PTR [rax+0x28],rdx
  42c9e8:	nop
  42c9e9:	leave  
  42c9ea:	ret    

000000000042c9eb <flatcc_json_printer_int16@@Base>:
  42c9eb:	push   rbp
  42c9ec:	mov    rbp,rsp
  42c9ef:	sub    rsp,0x10
  42c9f3:	mov    QWORD PTR [rbp-0x8],rdi
  42c9f7:	mov    eax,esi
  42c9f9:	mov    WORD PTR [rbp-0xc],ax
  42c9fd:	mov    rax,QWORD PTR [rbp-0x8]
  42ca01:	mov    rdx,QWORD PTR [rax+0x28]
  42ca05:	movsx  eax,WORD PTR [rbp-0xc]
  42ca09:	mov    rsi,rdx
  42ca0c:	mov    edi,eax
  42ca0e:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42ca13:	mov    ecx,eax
  42ca15:	mov    rax,QWORD PTR [rbp-0x8]
  42ca19:	mov    rdx,QWORD PTR [rax+0x28]
  42ca1d:	movsxd rax,ecx
  42ca20:	add    rdx,rax
  42ca23:	mov    rax,QWORD PTR [rbp-0x8]
  42ca27:	mov    QWORD PTR [rax+0x28],rdx
  42ca2b:	nop
  42ca2c:	leave  
  42ca2d:	ret    

000000000042ca2e <flatcc_json_printer_int32@@Base>:
  42ca2e:	push   rbp
  42ca2f:	mov    rbp,rsp
  42ca32:	sub    rsp,0x10
  42ca36:	mov    QWORD PTR [rbp-0x8],rdi
  42ca3a:	mov    DWORD PTR [rbp-0xc],esi
  42ca3d:	mov    rax,QWORD PTR [rbp-0x8]
  42ca41:	mov    rdx,QWORD PTR [rax+0x28]
  42ca45:	mov    eax,DWORD PTR [rbp-0xc]
  42ca48:	mov    rsi,rdx
  42ca4b:	mov    edi,eax
  42ca4d:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42ca52:	mov    ecx,eax
  42ca54:	mov    rax,QWORD PTR [rbp-0x8]
  42ca58:	mov    rdx,QWORD PTR [rax+0x28]
  42ca5c:	movsxd rax,ecx
  42ca5f:	add    rdx,rax
  42ca62:	mov    rax,QWORD PTR [rbp-0x8]
  42ca66:	mov    QWORD PTR [rax+0x28],rdx
  42ca6a:	nop
  42ca6b:	leave  
  42ca6c:	ret    

000000000042ca6d <flatcc_json_printer_int64@@Base>:
  42ca6d:	push   rbp
  42ca6e:	mov    rbp,rsp
  42ca71:	sub    rsp,0x10
  42ca75:	mov    QWORD PTR [rbp-0x8],rdi
  42ca79:	mov    QWORD PTR [rbp-0x10],rsi
  42ca7d:	mov    rax,QWORD PTR [rbp-0x8]
  42ca81:	mov    rdx,QWORD PTR [rax+0x28]
  42ca85:	mov    rax,QWORD PTR [rbp-0x10]
  42ca89:	mov    rsi,rdx
  42ca8c:	mov    rdi,rax
  42ca8f:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42ca94:	mov    ecx,eax
  42ca96:	mov    rax,QWORD PTR [rbp-0x8]
  42ca9a:	mov    rdx,QWORD PTR [rax+0x28]
  42ca9e:	movsxd rax,ecx
  42caa1:	add    rdx,rax
  42caa4:	mov    rax,QWORD PTR [rbp-0x8]
  42caa8:	mov    QWORD PTR [rax+0x28],rdx
  42caac:	nop
  42caad:	leave  
  42caae:	ret    

000000000042caaf <flatcc_json_printer_float@@Base>:
  42caaf:	push   rbp
  42cab0:	mov    rbp,rsp
  42cab3:	sub    rsp,0x10
  42cab7:	mov    QWORD PTR [rbp-0x8],rdi
  42cabb:	vmovss DWORD PTR [rbp-0xc],xmm0
  42cac0:	mov    rax,QWORD PTR [rbp-0x8]
  42cac4:	mov    rax,QWORD PTR [rax+0x28]
  42cac8:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0xc]
  42cacd:	mov    rdi,rax
  42cad0:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42cad5:	mov    ecx,eax
  42cad7:	mov    rax,QWORD PTR [rbp-0x8]
  42cadb:	mov    rdx,QWORD PTR [rax+0x28]
  42cadf:	movsxd rax,ecx
  42cae2:	add    rdx,rax
  42cae5:	mov    rax,QWORD PTR [rbp-0x8]
  42cae9:	mov    QWORD PTR [rax+0x28],rdx
  42caed:	nop
  42caee:	leave  
  42caef:	ret    

000000000042caf0 <flatcc_json_printer_double@@Base>:
  42caf0:	push   rbp
  42caf1:	mov    rbp,rsp
  42caf4:	sub    rsp,0x20
  42caf8:	mov    QWORD PTR [rbp-0x8],rdi
  42cafc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42cb01:	mov    rax,QWORD PTR [rbp-0x8]
  42cb05:	mov    rdx,QWORD PTR [rax+0x28]
  42cb09:	mov    rax,QWORD PTR [rbp-0x10]
  42cb0d:	mov    rdi,rdx
  42cb10:	mov    QWORD PTR [rbp-0x18],rax
  42cb14:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42cb19:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42cb1e:	mov    ecx,eax
  42cb20:	mov    rax,QWORD PTR [rbp-0x8]
  42cb24:	mov    rdx,QWORD PTR [rax+0x28]
  42cb28:	movsxd rax,ecx
  42cb2b:	add    rdx,rax
  42cb2e:	mov    rax,QWORD PTR [rbp-0x8]
  42cb32:	mov    QWORD PTR [rax+0x28],rdx
  42cb36:	nop
  42cb37:	leave  
  42cb38:	ret    

000000000042cb39 <flatcc_json_printer_enum@@Base>:
  42cb39:	push   rbp
  42cb3a:	mov    rbp,rsp
  42cb3d:	sub    rsp,0x20
  42cb41:	mov    QWORD PTR [rbp-0x8],rdi
  42cb45:	mov    QWORD PTR [rbp-0x10],rsi
  42cb49:	mov    DWORD PTR [rbp-0x14],edx
  42cb4c:	mov    eax,DWORD PTR [rbp-0x14]
  42cb4f:	movsxd rdx,eax
  42cb52:	mov    rcx,QWORD PTR [rbp-0x10]
  42cb56:	mov    rax,QWORD PTR [rbp-0x8]
  42cb5a:	mov    rsi,rcx
  42cb5d:	mov    rdi,rax
  42cb60:	call   42c719 <flatcc_json_printer_get_level@@Base+0x11>
  42cb65:	nop
  42cb66:	leave  
  42cb67:	ret    

000000000042cb68 <flatcc_json_printer_delimit_enum_flags@@Base>:
  42cb68:	push   rbp
  42cb69:	mov    rbp,rsp
  42cb6c:	mov    QWORD PTR [rbp-0x18],rdi
  42cb70:	mov    DWORD PTR [rbp-0x1c],esi
  42cb73:	mov    rax,QWORD PTR [rbp-0x18]
  42cb77:	movzx  eax,BYTE PTR [rax+0x32]
  42cb7b:	test   al,al
  42cb7d:	je     42cb85 <flatcc_json_printer_delimit_enum_flags@@Base+0x1d>
  42cb7f:	cmp    DWORD PTR [rbp-0x1c],0x0
  42cb83:	je     42cb8c <flatcc_json_printer_delimit_enum_flags@@Base+0x24>
  42cb85:	mov    eax,0x1
  42cb8a:	jmp    42cb91 <flatcc_json_printer_delimit_enum_flags@@Base+0x29>
  42cb8c:	mov    eax,0x0
  42cb91:	mov    DWORD PTR [rbp-0x4],eax
  42cb94:	mov    rax,QWORD PTR [rbp-0x18]
  42cb98:	mov    rax,QWORD PTR [rax+0x28]
  42cb9c:	mov    BYTE PTR [rax],0x22
  42cb9f:	mov    rax,QWORD PTR [rbp-0x18]
  42cba3:	mov    rdx,QWORD PTR [rax+0x28]
  42cba7:	mov    eax,DWORD PTR [rbp-0x4]
  42cbaa:	cdqe   
  42cbac:	add    rdx,rax
  42cbaf:	mov    rax,QWORD PTR [rbp-0x18]
  42cbb3:	mov    QWORD PTR [rax+0x28],rdx
  42cbb7:	nop
  42cbb8:	pop    rbp
  42cbb9:	ret    

000000000042cbba <flatcc_json_printer_enum_flag@@Base>:
  42cbba:	push   rbp
  42cbbb:	mov    rbp,rsp
  42cbbe:	sub    rsp,0x20
  42cbc2:	mov    QWORD PTR [rbp-0x8],rdi
  42cbc6:	mov    DWORD PTR [rbp-0xc],esi
  42cbc9:	mov    QWORD PTR [rbp-0x18],rdx
  42cbcd:	mov    DWORD PTR [rbp-0x10],ecx
  42cbd0:	mov    rax,QWORD PTR [rbp-0x8]
  42cbd4:	mov    rax,QWORD PTR [rax+0x28]
  42cbd8:	mov    BYTE PTR [rax],0x20
  42cbdb:	mov    rax,QWORD PTR [rbp-0x8]
  42cbdf:	mov    rdx,QWORD PTR [rax+0x28]
  42cbe3:	cmp    DWORD PTR [rbp-0xc],0x0
  42cbe7:	setg   al
  42cbea:	movzx  eax,al
  42cbed:	add    rdx,rax
  42cbf0:	mov    rax,QWORD PTR [rbp-0x8]
  42cbf4:	mov    QWORD PTR [rax+0x28],rdx
  42cbf8:	mov    eax,DWORD PTR [rbp-0x10]
  42cbfb:	movsxd rdx,eax
  42cbfe:	mov    rcx,QWORD PTR [rbp-0x18]
  42cc02:	mov    rax,QWORD PTR [rbp-0x8]
  42cc06:	mov    rsi,rcx
  42cc09:	mov    rdi,rax
  42cc0c:	call   42bf38 <flatcc_json_printer_fmt_bool@@Base+0x165>
  42cc11:	nop
  42cc12:	leave  
  42cc13:	ret    
  42cc14:	push   rbp
  42cc15:	mov    rbp,rsp
  42cc18:	sub    rsp,0x20
  42cc1c:	mov    QWORD PTR [rbp-0x18],rdi
  42cc20:	mov    QWORD PTR [rbp-0x20],rsi
  42cc24:	mov    rax,QWORD PTR [rbp-0x20]
  42cc28:	mov    rdi,rax
  42cc2b:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42cc30:	mov    eax,eax
  42cc32:	mov    QWORD PTR [rbp-0x10],rax
  42cc36:	mov    rax,QWORD PTR [rbp-0x20]
  42cc3a:	add    rax,0x4
  42cc3e:	mov    QWORD PTR [rbp-0x8],rax
  42cc42:	mov    rdx,QWORD PTR [rbp-0x10]
  42cc46:	mov    rcx,QWORD PTR [rbp-0x8]
  42cc4a:	mov    rax,QWORD PTR [rbp-0x18]
  42cc4e:	mov    rsi,rcx
  42cc51:	mov    rdi,rax
  42cc54:	call   42bfb6 <flatcc_json_printer_fmt_bool@@Base+0x1e3>
  42cc59:	nop
  42cc5a:	leave  
  42cc5b:	ret    
  42cc5c:	push   rbp
  42cc5d:	mov    rbp,rsp
  42cc60:	sub    rsp,0x50
  42cc64:	mov    QWORD PTR [rbp-0x38],rdi
  42cc68:	mov    QWORD PTR [rbp-0x40],rsi
  42cc6c:	mov    DWORD PTR [rbp-0x44],edx
  42cc6f:	mov    QWORD PTR [rbp-0x50],rcx
  42cc73:	mov    rax,QWORD PTR fs:0x28
  42cc7c:	mov    QWORD PTR [rbp-0x8],rax
  42cc80:	xor    eax,eax
  42cc82:	sub    DWORD PTR [rbp-0x44],0x1
  42cc86:	cmp    DWORD PTR [rbp-0x44],0x0
  42cc8a:	jne    42cca2 <flatcc_json_printer_enum_flag@@Base+0xe8>
  42cc8c:	mov    rax,QWORD PTR [rbp-0x38]
  42cc90:	mov    esi,0x2
  42cc95:	mov    rdi,rax
  42cc98:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  42cc9d:	jmp    42cd7b <flatcc_json_printer_enum_flag@@Base+0x1c1>
  42cca2:	mov    rax,QWORD PTR [rbp-0x38]
  42cca6:	mov    eax,DWORD PTR [rax+0x38]
  42cca9:	lea    edx,[rax+0x1]
  42ccac:	mov    rax,QWORD PTR [rbp-0x38]
  42ccb0:	mov    DWORD PTR [rax+0x38],edx
  42ccb3:	mov    rax,QWORD PTR [rbp-0x38]
  42ccb7:	mov    rax,QWORD PTR [rax+0x28]
  42ccbb:	lea    rcx,[rax+0x1]
  42ccbf:	mov    rdx,QWORD PTR [rbp-0x38]
  42ccc3:	mov    QWORD PTR [rdx+0x28],rcx
  42ccc7:	mov    BYTE PTR [rax],0x7b
  42ccca:	mov    DWORD PTR [rbp-0x18],0x0
  42ccd1:	mov    eax,DWORD PTR [rbp-0x44]
  42ccd4:	mov    DWORD PTR [rbp-0x1c],eax
  42ccd7:	mov    rax,QWORD PTR [rbp-0x40]
  42ccdb:	mov    QWORD PTR [rbp-0x30],rax
  42ccdf:	mov    rax,QWORD PTR [rbp-0x40]
  42cce3:	mov    rdi,rax
  42cce6:	call   428a6c <flatcc_json_parser_struct_as_root@@Base+0x394>
  42cceb:	cdqe   
  42cced:	neg    rax
  42ccf0:	mov    rdx,rax
  42ccf3:	mov    rax,QWORD PTR [rbp-0x40]
  42ccf7:	add    rax,rdx
  42ccfa:	mov    QWORD PTR [rbp-0x28],rax
  42ccfe:	mov    rax,QWORD PTR [rbp-0x28]
  42cd02:	mov    rdi,rax
  42cd05:	call   428a97 <flatcc_json_parser_struct_as_root@@Base+0x3bf>
  42cd0a:	movzx  eax,ax
  42cd0d:	mov    DWORD PTR [rbp-0x20],eax
  42cd10:	lea    rcx,[rbp-0x30]
  42cd14:	mov    rdx,QWORD PTR [rbp-0x38]
  42cd18:	mov    rax,QWORD PTR [rbp-0x50]
  42cd1c:	mov    rsi,rcx
  42cd1f:	mov    rdi,rdx
  42cd22:	call   rax
  42cd24:	mov    rax,QWORD PTR [rbp-0x38]
  42cd28:	movzx  eax,BYTE PTR [rax+0x31]
  42cd2c:	test   al,al
  42cd2e:	je     42cd64 <flatcc_json_printer_enum_flag@@Base+0x1aa>
  42cd30:	mov    rax,QWORD PTR [rbp-0x38]
  42cd34:	mov    rax,QWORD PTR [rax+0x28]
  42cd38:	lea    rcx,[rax+0x1]
  42cd3c:	mov    rdx,QWORD PTR [rbp-0x38]
  42cd40:	mov    QWORD PTR [rdx+0x28],rcx
  42cd44:	mov    BYTE PTR [rax],0xa
  42cd47:	mov    rax,QWORD PTR [rbp-0x38]
  42cd4b:	mov    eax,DWORD PTR [rax+0x38]
  42cd4e:	lea    edx,[rax-0x1]
  42cd51:	mov    rax,QWORD PTR [rbp-0x38]
  42cd55:	mov    DWORD PTR [rax+0x38],edx
  42cd58:	mov    rax,QWORD PTR [rbp-0x38]
  42cd5c:	mov    rdi,rax
  42cd5f:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42cd64:	mov    rax,QWORD PTR [rbp-0x38]
  42cd68:	mov    rax,QWORD PTR [rax+0x28]
  42cd6c:	lea    rcx,[rax+0x1]
  42cd70:	mov    rdx,QWORD PTR [rbp-0x38]
  42cd74:	mov    QWORD PTR [rdx+0x28],rcx
  42cd78:	mov    BYTE PTR [rax],0x7d
  42cd7b:	mov    rax,QWORD PTR [rbp-0x8]
  42cd7f:	xor    rax,QWORD PTR fs:0x28
  42cd88:	je     42cd8f <flatcc_json_printer_enum_flag@@Base+0x1d5>
  42cd8a:	call   405070 <__stack_chk_fail@plt>
  42cd8f:	leave  
  42cd90:	ret    

000000000042cd91 <flatcc_json_printer_string_field@@Base>:
  42cd91:	push   rbp
  42cd92:	mov    rbp,rsp
  42cd95:	sub    rsp,0x30
  42cd99:	mov    QWORD PTR [rbp-0x18],rdi
  42cd9d:	mov    QWORD PTR [rbp-0x20],rsi
  42cda1:	mov    DWORD PTR [rbp-0x24],edx
  42cda4:	mov    QWORD PTR [rbp-0x30],rcx
  42cda8:	mov    DWORD PTR [rbp-0x28],r8d
  42cdac:	mov    edx,DWORD PTR [rbp-0x24]
  42cdaf:	mov    rax,QWORD PTR [rbp-0x20]
  42cdb3:	mov    esi,edx
  42cdb5:	mov    rdi,rax
  42cdb8:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42cdbd:	mov    QWORD PTR [rbp-0x8],rax
  42cdc1:	cmp    QWORD PTR [rbp-0x8],0x0
  42cdc6:	je     42ce2b <flatcc_json_printer_string_field@@Base+0x9a>
  42cdc8:	mov    rax,QWORD PTR [rbp-0x20]
  42cdcc:	mov    eax,DWORD PTR [rax+0x18]
  42cdcf:	lea    ecx,[rax+0x1]
  42cdd2:	mov    rdx,QWORD PTR [rbp-0x20]
  42cdd6:	mov    DWORD PTR [rdx+0x18],ecx
  42cdd9:	test   eax,eax
  42cddb:	je     42cdf4 <flatcc_json_printer_string_field@@Base+0x63>
  42cddd:	mov    rax,QWORD PTR [rbp-0x18]
  42cde1:	mov    rax,QWORD PTR [rax+0x28]
  42cde5:	lea    rcx,[rax+0x1]
  42cde9:	mov    rdx,QWORD PTR [rbp-0x18]
  42cded:	mov    QWORD PTR [rdx+0x28],rcx
  42cdf1:	mov    BYTE PTR [rax],0x2c
  42cdf4:	mov    eax,DWORD PTR [rbp-0x28]
  42cdf7:	movsxd rdx,eax
  42cdfa:	mov    rcx,QWORD PTR [rbp-0x30]
  42cdfe:	mov    rax,QWORD PTR [rbp-0x18]
  42ce02:	mov    rsi,rcx
  42ce05:	mov    rdi,rax
  42ce08:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42ce0d:	mov    rax,QWORD PTR [rbp-0x8]
  42ce11:	mov    rdi,rax
  42ce14:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42ce19:	mov    rdx,rax
  42ce1c:	mov    rax,QWORD PTR [rbp-0x18]
  42ce20:	mov    rsi,rdx
  42ce23:	mov    rdi,rax
  42ce26:	call   42cc14 <flatcc_json_printer_enum_flag@@Base+0x5a>
  42ce2b:	nop
  42ce2c:	leave  
  42ce2d:	ret    

000000000042ce2e <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  42ce2e:	push   rbp
  42ce2f:	mov    rbp,rsp
  42ce32:	sub    rsp,0x40
  42ce36:	mov    QWORD PTR [rbp-0x18],rdi
  42ce3a:	mov    QWORD PTR [rbp-0x20],rsi
  42ce3e:	mov    DWORD PTR [rbp-0x24],edx
  42ce41:	mov    QWORD PTR [rbp-0x30],rcx
  42ce45:	mov    DWORD PTR [rbp-0x28],r8d
  42ce49:	mov    DWORD PTR [rbp-0x34],r9d
  42ce4d:	mov    edx,DWORD PTR [rbp-0x24]
  42ce50:	mov    rax,QWORD PTR [rbp-0x20]
  42ce54:	mov    esi,edx
  42ce56:	mov    rdi,rax
  42ce59:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42ce5e:	mov    QWORD PTR [rbp-0x8],rax
  42ce62:	cmp    DWORD PTR [rbp-0x34],0x0
  42ce66:	setne  al
  42ce69:	movzx  eax,al
  42ce6c:	mov    DWORD PTR [rbp-0xc],eax
  42ce6f:	or     DWORD PTR [rbp-0xc],0x80
  42ce76:	cmp    QWORD PTR [rbp-0x8],0x0
  42ce7b:	je     42cee3 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb5>
  42ce7d:	mov    rax,QWORD PTR [rbp-0x20]
  42ce81:	mov    eax,DWORD PTR [rax+0x18]
  42ce84:	lea    ecx,[rax+0x1]
  42ce87:	mov    rdx,QWORD PTR [rbp-0x20]
  42ce8b:	mov    DWORD PTR [rdx+0x18],ecx
  42ce8e:	test   eax,eax
  42ce90:	je     42cea9 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x7b>
  42ce92:	mov    rax,QWORD PTR [rbp-0x18]
  42ce96:	mov    rax,QWORD PTR [rax+0x28]
  42ce9a:	lea    rcx,[rax+0x1]
  42ce9e:	mov    rdx,QWORD PTR [rbp-0x18]
  42cea2:	mov    QWORD PTR [rdx+0x28],rcx
  42cea6:	mov    BYTE PTR [rax],0x2c
  42cea9:	mov    eax,DWORD PTR [rbp-0x28]
  42ceac:	movsxd rdx,eax
  42ceaf:	mov    rcx,QWORD PTR [rbp-0x30]
  42ceb3:	mov    rax,QWORD PTR [rbp-0x18]
  42ceb7:	mov    rsi,rcx
  42ceba:	mov    rdi,rax
  42cebd:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42cec2:	mov    rax,QWORD PTR [rbp-0x8]
  42cec6:	mov    rdi,rax
  42cec9:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42cece:	mov    rcx,rax
  42ced1:	mov    edx,DWORD PTR [rbp-0xc]
  42ced4:	mov    rax,QWORD PTR [rbp-0x18]
  42ced8:	mov    rsi,rcx
  42cedb:	mov    rdi,rax
  42cede:	call   42c25e <flatcc_json_printer_fmt_bool@@Base+0x48b>
  42cee3:	nop
  42cee4:	leave  
  42cee5:	ret    

000000000042cee6 <flatcc_json_printer_uint8_field@@Base>:
  42cee6:	push   rbp
  42cee7:	mov    rbp,rsp
  42ceea:	sub    rsp,0x40
  42ceee:	mov    QWORD PTR [rbp-0x18],rdi
  42cef2:	mov    QWORD PTR [rbp-0x20],rsi
  42cef6:	mov    DWORD PTR [rbp-0x24],edx
  42cef9:	mov    QWORD PTR [rbp-0x30],rcx
  42cefd:	mov    DWORD PTR [rbp-0x28],r8d
  42cf01:	mov    eax,r9d
  42cf04:	mov    BYTE PTR [rbp-0x34],al
  42cf07:	mov    edx,DWORD PTR [rbp-0x24]
  42cf0a:	mov    rax,QWORD PTR [rbp-0x20]
  42cf0e:	mov    esi,edx
  42cf10:	mov    rdi,rax
  42cf13:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42cf18:	mov    QWORD PTR [rbp-0x8],rax
  42cf1c:	cmp    QWORD PTR [rbp-0x8],0x0
  42cf21:	je     42cf4c <flatcc_json_printer_uint8_field@@Base+0x66>
  42cf23:	mov    rax,QWORD PTR [rbp-0x8]
  42cf27:	mov    rdi,rax
  42cf2a:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  42cf2f:	mov    BYTE PTR [rbp-0x9],al
  42cf32:	movzx  eax,BYTE PTR [rbp-0x9]
  42cf36:	cmp    al,BYTE PTR [rbp-0x34]
  42cf39:	jne    42cf5f <flatcc_json_printer_uint8_field@@Base+0x79>
  42cf3b:	mov    rax,QWORD PTR [rbp-0x18]
  42cf3f:	movzx  eax,BYTE PTR [rax+0x34]
  42cf43:	test   al,al
  42cf45:	je     42cf5f <flatcc_json_printer_uint8_field@@Base+0x79>
  42cf47:	jmp    42cfd5 <flatcc_json_printer_uint8_field@@Base+0xef>
  42cf4c:	mov    rax,QWORD PTR [rbp-0x18]
  42cf50:	movzx  eax,BYTE PTR [rax+0x35]
  42cf54:	test   al,al
  42cf56:	je     42cfd4 <flatcc_json_printer_uint8_field@@Base+0xee>
  42cf58:	movzx  eax,BYTE PTR [rbp-0x34]
  42cf5c:	mov    BYTE PTR [rbp-0x9],al
  42cf5f:	mov    rax,QWORD PTR [rbp-0x20]
  42cf63:	mov    eax,DWORD PTR [rax+0x18]
  42cf66:	lea    ecx,[rax+0x1]
  42cf69:	mov    rdx,QWORD PTR [rbp-0x20]
  42cf6d:	mov    DWORD PTR [rdx+0x18],ecx
  42cf70:	test   eax,eax
  42cf72:	je     42cf8b <flatcc_json_printer_uint8_field@@Base+0xa5>
  42cf74:	mov    rax,QWORD PTR [rbp-0x18]
  42cf78:	mov    rax,QWORD PTR [rax+0x28]
  42cf7c:	lea    rcx,[rax+0x1]
  42cf80:	mov    rdx,QWORD PTR [rbp-0x18]
  42cf84:	mov    QWORD PTR [rdx+0x28],rcx
  42cf88:	mov    BYTE PTR [rax],0x2c
  42cf8b:	mov    eax,DWORD PTR [rbp-0x28]
  42cf8e:	movsxd rdx,eax
  42cf91:	mov    rcx,QWORD PTR [rbp-0x30]
  42cf95:	mov    rax,QWORD PTR [rbp-0x18]
  42cf99:	mov    rsi,rcx
  42cf9c:	mov    rdi,rax
  42cf9f:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42cfa4:	mov    rax,QWORD PTR [rbp-0x18]
  42cfa8:	mov    rdx,QWORD PTR [rax+0x28]
  42cfac:	movzx  eax,BYTE PTR [rbp-0x9]
  42cfb0:	mov    rsi,rdx
  42cfb3:	mov    edi,eax
  42cfb5:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42cfba:	mov    ecx,eax
  42cfbc:	mov    rax,QWORD PTR [rbp-0x18]
  42cfc0:	mov    rdx,QWORD PTR [rax+0x28]
  42cfc4:	movsxd rax,ecx
  42cfc7:	add    rdx,rax
  42cfca:	mov    rax,QWORD PTR [rbp-0x18]
  42cfce:	mov    QWORD PTR [rax+0x28],rdx
  42cfd2:	jmp    42cfd5 <flatcc_json_printer_uint8_field@@Base+0xef>
  42cfd4:	nop
  42cfd5:	leave  
  42cfd6:	ret    

000000000042cfd7 <flatcc_json_printer_uint16_field@@Base>:
  42cfd7:	push   rbp
  42cfd8:	mov    rbp,rsp
  42cfdb:	sub    rsp,0x40
  42cfdf:	mov    QWORD PTR [rbp-0x18],rdi
  42cfe3:	mov    QWORD PTR [rbp-0x20],rsi
  42cfe7:	mov    DWORD PTR [rbp-0x24],edx
  42cfea:	mov    QWORD PTR [rbp-0x30],rcx
  42cfee:	mov    DWORD PTR [rbp-0x28],r8d
  42cff2:	mov    eax,r9d
  42cff5:	mov    WORD PTR [rbp-0x34],ax
  42cff9:	mov    edx,DWORD PTR [rbp-0x24]
  42cffc:	mov    rax,QWORD PTR [rbp-0x20]
  42d000:	mov    esi,edx
  42d002:	mov    rdi,rax
  42d005:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d00a:	mov    QWORD PTR [rbp-0x8],rax
  42d00e:	cmp    QWORD PTR [rbp-0x8],0x0
  42d013:	je     42d040 <flatcc_json_printer_uint16_field@@Base+0x69>
  42d015:	mov    rax,QWORD PTR [rbp-0x8]
  42d019:	mov    rdi,rax
  42d01c:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  42d021:	mov    WORD PTR [rbp-0xa],ax
  42d025:	movzx  eax,WORD PTR [rbp-0xa]
  42d029:	cmp    ax,WORD PTR [rbp-0x34]
  42d02d:	jne    42d054 <flatcc_json_printer_uint16_field@@Base+0x7d>
  42d02f:	mov    rax,QWORD PTR [rbp-0x18]
  42d033:	movzx  eax,BYTE PTR [rax+0x34]
  42d037:	test   al,al
  42d039:	je     42d054 <flatcc_json_printer_uint16_field@@Base+0x7d>
  42d03b:	jmp    42d0ca <flatcc_json_printer_uint16_field@@Base+0xf3>
  42d040:	mov    rax,QWORD PTR [rbp-0x18]
  42d044:	movzx  eax,BYTE PTR [rax+0x35]
  42d048:	test   al,al
  42d04a:	je     42d0c9 <flatcc_json_printer_uint16_field@@Base+0xf2>
  42d04c:	movzx  eax,WORD PTR [rbp-0x34]
  42d050:	mov    WORD PTR [rbp-0xa],ax
  42d054:	mov    rax,QWORD PTR [rbp-0x20]
  42d058:	mov    eax,DWORD PTR [rax+0x18]
  42d05b:	lea    ecx,[rax+0x1]
  42d05e:	mov    rdx,QWORD PTR [rbp-0x20]
  42d062:	mov    DWORD PTR [rdx+0x18],ecx
  42d065:	test   eax,eax
  42d067:	je     42d080 <flatcc_json_printer_uint16_field@@Base+0xa9>
  42d069:	mov    rax,QWORD PTR [rbp-0x18]
  42d06d:	mov    rax,QWORD PTR [rax+0x28]
  42d071:	lea    rcx,[rax+0x1]
  42d075:	mov    rdx,QWORD PTR [rbp-0x18]
  42d079:	mov    QWORD PTR [rdx+0x28],rcx
  42d07d:	mov    BYTE PTR [rax],0x2c
  42d080:	mov    eax,DWORD PTR [rbp-0x28]
  42d083:	movsxd rdx,eax
  42d086:	mov    rcx,QWORD PTR [rbp-0x30]
  42d08a:	mov    rax,QWORD PTR [rbp-0x18]
  42d08e:	mov    rsi,rcx
  42d091:	mov    rdi,rax
  42d094:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d099:	mov    rax,QWORD PTR [rbp-0x18]
  42d09d:	mov    rdx,QWORD PTR [rax+0x28]
  42d0a1:	movzx  eax,WORD PTR [rbp-0xa]
  42d0a5:	mov    rsi,rdx
  42d0a8:	mov    edi,eax
  42d0aa:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42d0af:	mov    ecx,eax
  42d0b1:	mov    rax,QWORD PTR [rbp-0x18]
  42d0b5:	mov    rdx,QWORD PTR [rax+0x28]
  42d0b9:	movsxd rax,ecx
  42d0bc:	add    rdx,rax
  42d0bf:	mov    rax,QWORD PTR [rbp-0x18]
  42d0c3:	mov    QWORD PTR [rax+0x28],rdx
  42d0c7:	jmp    42d0ca <flatcc_json_printer_uint16_field@@Base+0xf3>
  42d0c9:	nop
  42d0ca:	leave  
  42d0cb:	ret    

000000000042d0cc <flatcc_json_printer_uint32_field@@Base>:
  42d0cc:	push   rbp
  42d0cd:	mov    rbp,rsp
  42d0d0:	sub    rsp,0x40
  42d0d4:	mov    QWORD PTR [rbp-0x18],rdi
  42d0d8:	mov    QWORD PTR [rbp-0x20],rsi
  42d0dc:	mov    DWORD PTR [rbp-0x24],edx
  42d0df:	mov    QWORD PTR [rbp-0x30],rcx
  42d0e3:	mov    DWORD PTR [rbp-0x28],r8d
  42d0e7:	mov    DWORD PTR [rbp-0x34],r9d
  42d0eb:	mov    edx,DWORD PTR [rbp-0x24]
  42d0ee:	mov    rax,QWORD PTR [rbp-0x20]
  42d0f2:	mov    esi,edx
  42d0f4:	mov    rdi,rax
  42d0f7:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d0fc:	mov    QWORD PTR [rbp-0x8],rax
  42d100:	cmp    QWORD PTR [rbp-0x8],0x0
  42d105:	je     42d12f <flatcc_json_printer_uint32_field@@Base+0x63>
  42d107:	mov    rax,QWORD PTR [rbp-0x8]
  42d10b:	mov    rdi,rax
  42d10e:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42d113:	mov    DWORD PTR [rbp-0xc],eax
  42d116:	mov    eax,DWORD PTR [rbp-0xc]
  42d119:	cmp    eax,DWORD PTR [rbp-0x34]
  42d11c:	jne    42d141 <flatcc_json_printer_uint32_field@@Base+0x75>
  42d11e:	mov    rax,QWORD PTR [rbp-0x18]
  42d122:	movzx  eax,BYTE PTR [rax+0x34]
  42d126:	test   al,al
  42d128:	je     42d141 <flatcc_json_printer_uint32_field@@Base+0x75>
  42d12a:	jmp    42d1b6 <flatcc_json_printer_uint32_field@@Base+0xea>
  42d12f:	mov    rax,QWORD PTR [rbp-0x18]
  42d133:	movzx  eax,BYTE PTR [rax+0x35]
  42d137:	test   al,al
  42d139:	je     42d1b5 <flatcc_json_printer_uint32_field@@Base+0xe9>
  42d13b:	mov    eax,DWORD PTR [rbp-0x34]
  42d13e:	mov    DWORD PTR [rbp-0xc],eax
  42d141:	mov    rax,QWORD PTR [rbp-0x20]
  42d145:	mov    eax,DWORD PTR [rax+0x18]
  42d148:	lea    ecx,[rax+0x1]
  42d14b:	mov    rdx,QWORD PTR [rbp-0x20]
  42d14f:	mov    DWORD PTR [rdx+0x18],ecx
  42d152:	test   eax,eax
  42d154:	je     42d16d <flatcc_json_printer_uint32_field@@Base+0xa1>
  42d156:	mov    rax,QWORD PTR [rbp-0x18]
  42d15a:	mov    rax,QWORD PTR [rax+0x28]
  42d15e:	lea    rcx,[rax+0x1]
  42d162:	mov    rdx,QWORD PTR [rbp-0x18]
  42d166:	mov    QWORD PTR [rdx+0x28],rcx
  42d16a:	mov    BYTE PTR [rax],0x2c
  42d16d:	mov    eax,DWORD PTR [rbp-0x28]
  42d170:	movsxd rdx,eax
  42d173:	mov    rcx,QWORD PTR [rbp-0x30]
  42d177:	mov    rax,QWORD PTR [rbp-0x18]
  42d17b:	mov    rsi,rcx
  42d17e:	mov    rdi,rax
  42d181:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d186:	mov    rax,QWORD PTR [rbp-0x18]
  42d18a:	mov    rdx,QWORD PTR [rax+0x28]
  42d18e:	mov    eax,DWORD PTR [rbp-0xc]
  42d191:	mov    rsi,rdx
  42d194:	mov    edi,eax
  42d196:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42d19b:	mov    ecx,eax
  42d19d:	mov    rax,QWORD PTR [rbp-0x18]
  42d1a1:	mov    rdx,QWORD PTR [rax+0x28]
  42d1a5:	movsxd rax,ecx
  42d1a8:	add    rdx,rax
  42d1ab:	mov    rax,QWORD PTR [rbp-0x18]
  42d1af:	mov    QWORD PTR [rax+0x28],rdx
  42d1b3:	jmp    42d1b6 <flatcc_json_printer_uint32_field@@Base+0xea>
  42d1b5:	nop
  42d1b6:	leave  
  42d1b7:	ret    

000000000042d1b8 <flatcc_json_printer_uint64_field@@Base>:
  42d1b8:	push   rbp
  42d1b9:	mov    rbp,rsp
  42d1bc:	sub    rsp,0x40
  42d1c0:	mov    QWORD PTR [rbp-0x18],rdi
  42d1c4:	mov    QWORD PTR [rbp-0x20],rsi
  42d1c8:	mov    DWORD PTR [rbp-0x24],edx
  42d1cb:	mov    QWORD PTR [rbp-0x30],rcx
  42d1cf:	mov    DWORD PTR [rbp-0x28],r8d
  42d1d3:	mov    QWORD PTR [rbp-0x38],r9
  42d1d7:	mov    edx,DWORD PTR [rbp-0x24]
  42d1da:	mov    rax,QWORD PTR [rbp-0x20]
  42d1de:	mov    esi,edx
  42d1e0:	mov    rdi,rax
  42d1e3:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d1e8:	mov    QWORD PTR [rbp-0x8],rax
  42d1ec:	cmp    QWORD PTR [rbp-0x8],0x0
  42d1f1:	je     42d21e <flatcc_json_printer_uint64_field@@Base+0x66>
  42d1f3:	mov    rax,QWORD PTR [rbp-0x8]
  42d1f7:	mov    rdi,rax
  42d1fa:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42d1ff:	mov    QWORD PTR [rbp-0x10],rax
  42d203:	mov    rax,QWORD PTR [rbp-0x10]
  42d207:	cmp    rax,QWORD PTR [rbp-0x38]
  42d20b:	jne    42d232 <flatcc_json_printer_uint64_field@@Base+0x7a>
  42d20d:	mov    rax,QWORD PTR [rbp-0x18]
  42d211:	movzx  eax,BYTE PTR [rax+0x34]
  42d215:	test   al,al
  42d217:	je     42d232 <flatcc_json_printer_uint64_field@@Base+0x7a>
  42d219:	jmp    42d2a9 <flatcc_json_printer_uint64_field@@Base+0xf1>
  42d21e:	mov    rax,QWORD PTR [rbp-0x18]
  42d222:	movzx  eax,BYTE PTR [rax+0x35]
  42d226:	test   al,al
  42d228:	je     42d2a8 <flatcc_json_printer_uint64_field@@Base+0xf0>
  42d22a:	mov    rax,QWORD PTR [rbp-0x38]
  42d22e:	mov    QWORD PTR [rbp-0x10],rax
  42d232:	mov    rax,QWORD PTR [rbp-0x20]
  42d236:	mov    eax,DWORD PTR [rax+0x18]
  42d239:	lea    ecx,[rax+0x1]
  42d23c:	mov    rdx,QWORD PTR [rbp-0x20]
  42d240:	mov    DWORD PTR [rdx+0x18],ecx
  42d243:	test   eax,eax
  42d245:	je     42d25e <flatcc_json_printer_uint64_field@@Base+0xa6>
  42d247:	mov    rax,QWORD PTR [rbp-0x18]
  42d24b:	mov    rax,QWORD PTR [rax+0x28]
  42d24f:	lea    rcx,[rax+0x1]
  42d253:	mov    rdx,QWORD PTR [rbp-0x18]
  42d257:	mov    QWORD PTR [rdx+0x28],rcx
  42d25b:	mov    BYTE PTR [rax],0x2c
  42d25e:	mov    eax,DWORD PTR [rbp-0x28]
  42d261:	movsxd rdx,eax
  42d264:	mov    rcx,QWORD PTR [rbp-0x30]
  42d268:	mov    rax,QWORD PTR [rbp-0x18]
  42d26c:	mov    rsi,rcx
  42d26f:	mov    rdi,rax
  42d272:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d277:	mov    rax,QWORD PTR [rbp-0x18]
  42d27b:	mov    rdx,QWORD PTR [rax+0x28]
  42d27f:	mov    rax,QWORD PTR [rbp-0x10]
  42d283:	mov    rsi,rdx
  42d286:	mov    rdi,rax
  42d289:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42d28e:	mov    ecx,eax
  42d290:	mov    rax,QWORD PTR [rbp-0x18]
  42d294:	mov    rdx,QWORD PTR [rax+0x28]
  42d298:	movsxd rax,ecx
  42d29b:	add    rdx,rax
  42d29e:	mov    rax,QWORD PTR [rbp-0x18]
  42d2a2:	mov    QWORD PTR [rax+0x28],rdx
  42d2a6:	jmp    42d2a9 <flatcc_json_printer_uint64_field@@Base+0xf1>
  42d2a8:	nop
  42d2a9:	leave  
  42d2aa:	ret    

000000000042d2ab <flatcc_json_printer_int8_field@@Base>:
  42d2ab:	push   rbp
  42d2ac:	mov    rbp,rsp
  42d2af:	sub    rsp,0x40
  42d2b3:	mov    QWORD PTR [rbp-0x18],rdi
  42d2b7:	mov    QWORD PTR [rbp-0x20],rsi
  42d2bb:	mov    DWORD PTR [rbp-0x24],edx
  42d2be:	mov    QWORD PTR [rbp-0x30],rcx
  42d2c2:	mov    DWORD PTR [rbp-0x28],r8d
  42d2c6:	mov    eax,r9d
  42d2c9:	mov    BYTE PTR [rbp-0x34],al
  42d2cc:	mov    edx,DWORD PTR [rbp-0x24]
  42d2cf:	mov    rax,QWORD PTR [rbp-0x20]
  42d2d3:	mov    esi,edx
  42d2d5:	mov    rdi,rax
  42d2d8:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d2dd:	mov    QWORD PTR [rbp-0x8],rax
  42d2e1:	cmp    QWORD PTR [rbp-0x8],0x0
  42d2e6:	je     42d311 <flatcc_json_printer_int8_field@@Base+0x66>
  42d2e8:	mov    rax,QWORD PTR [rbp-0x8]
  42d2ec:	mov    rdi,rax
  42d2ef:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  42d2f4:	mov    BYTE PTR [rbp-0x9],al
  42d2f7:	movzx  eax,BYTE PTR [rbp-0x9]
  42d2fb:	cmp    al,BYTE PTR [rbp-0x34]
  42d2fe:	jne    42d324 <flatcc_json_printer_int8_field@@Base+0x79>
  42d300:	mov    rax,QWORD PTR [rbp-0x18]
  42d304:	movzx  eax,BYTE PTR [rax+0x34]
  42d308:	test   al,al
  42d30a:	je     42d324 <flatcc_json_printer_int8_field@@Base+0x79>
  42d30c:	jmp    42d39a <flatcc_json_printer_int8_field@@Base+0xef>
  42d311:	mov    rax,QWORD PTR [rbp-0x18]
  42d315:	movzx  eax,BYTE PTR [rax+0x35]
  42d319:	test   al,al
  42d31b:	je     42d399 <flatcc_json_printer_int8_field@@Base+0xee>
  42d31d:	movzx  eax,BYTE PTR [rbp-0x34]
  42d321:	mov    BYTE PTR [rbp-0x9],al
  42d324:	mov    rax,QWORD PTR [rbp-0x20]
  42d328:	mov    eax,DWORD PTR [rax+0x18]
  42d32b:	lea    ecx,[rax+0x1]
  42d32e:	mov    rdx,QWORD PTR [rbp-0x20]
  42d332:	mov    DWORD PTR [rdx+0x18],ecx
  42d335:	test   eax,eax
  42d337:	je     42d350 <flatcc_json_printer_int8_field@@Base+0xa5>
  42d339:	mov    rax,QWORD PTR [rbp-0x18]
  42d33d:	mov    rax,QWORD PTR [rax+0x28]
  42d341:	lea    rcx,[rax+0x1]
  42d345:	mov    rdx,QWORD PTR [rbp-0x18]
  42d349:	mov    QWORD PTR [rdx+0x28],rcx
  42d34d:	mov    BYTE PTR [rax],0x2c
  42d350:	mov    eax,DWORD PTR [rbp-0x28]
  42d353:	movsxd rdx,eax
  42d356:	mov    rcx,QWORD PTR [rbp-0x30]
  42d35a:	mov    rax,QWORD PTR [rbp-0x18]
  42d35e:	mov    rsi,rcx
  42d361:	mov    rdi,rax
  42d364:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d369:	mov    rax,QWORD PTR [rbp-0x18]
  42d36d:	mov    rdx,QWORD PTR [rax+0x28]
  42d371:	movsx  eax,BYTE PTR [rbp-0x9]
  42d375:	mov    rsi,rdx
  42d378:	mov    edi,eax
  42d37a:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42d37f:	mov    ecx,eax
  42d381:	mov    rax,QWORD PTR [rbp-0x18]
  42d385:	mov    rdx,QWORD PTR [rax+0x28]
  42d389:	movsxd rax,ecx
  42d38c:	add    rdx,rax
  42d38f:	mov    rax,QWORD PTR [rbp-0x18]
  42d393:	mov    QWORD PTR [rax+0x28],rdx
  42d397:	jmp    42d39a <flatcc_json_printer_int8_field@@Base+0xef>
  42d399:	nop
  42d39a:	leave  
  42d39b:	ret    

000000000042d39c <flatcc_json_printer_int16_field@@Base>:
  42d39c:	push   rbp
  42d39d:	mov    rbp,rsp
  42d3a0:	sub    rsp,0x40
  42d3a4:	mov    QWORD PTR [rbp-0x18],rdi
  42d3a8:	mov    QWORD PTR [rbp-0x20],rsi
  42d3ac:	mov    DWORD PTR [rbp-0x24],edx
  42d3af:	mov    QWORD PTR [rbp-0x30],rcx
  42d3b3:	mov    DWORD PTR [rbp-0x28],r8d
  42d3b7:	mov    eax,r9d
  42d3ba:	mov    WORD PTR [rbp-0x34],ax
  42d3be:	mov    edx,DWORD PTR [rbp-0x24]
  42d3c1:	mov    rax,QWORD PTR [rbp-0x20]
  42d3c5:	mov    esi,edx
  42d3c7:	mov    rdi,rax
  42d3ca:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d3cf:	mov    QWORD PTR [rbp-0x8],rax
  42d3d3:	cmp    QWORD PTR [rbp-0x8],0x0
  42d3d8:	je     42d405 <flatcc_json_printer_int16_field@@Base+0x69>
  42d3da:	mov    rax,QWORD PTR [rbp-0x8]
  42d3de:	mov    rdi,rax
  42d3e1:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42d3e6:	mov    WORD PTR [rbp-0xa],ax
  42d3ea:	movzx  eax,WORD PTR [rbp-0xa]
  42d3ee:	cmp    ax,WORD PTR [rbp-0x34]
  42d3f2:	jne    42d419 <flatcc_json_printer_int16_field@@Base+0x7d>
  42d3f4:	mov    rax,QWORD PTR [rbp-0x18]
  42d3f8:	movzx  eax,BYTE PTR [rax+0x34]
  42d3fc:	test   al,al
  42d3fe:	je     42d419 <flatcc_json_printer_int16_field@@Base+0x7d>
  42d400:	jmp    42d48f <flatcc_json_printer_int16_field@@Base+0xf3>
  42d405:	mov    rax,QWORD PTR [rbp-0x18]
  42d409:	movzx  eax,BYTE PTR [rax+0x35]
  42d40d:	test   al,al
  42d40f:	je     42d48e <flatcc_json_printer_int16_field@@Base+0xf2>
  42d411:	movzx  eax,WORD PTR [rbp-0x34]
  42d415:	mov    WORD PTR [rbp-0xa],ax
  42d419:	mov    rax,QWORD PTR [rbp-0x20]
  42d41d:	mov    eax,DWORD PTR [rax+0x18]
  42d420:	lea    ecx,[rax+0x1]
  42d423:	mov    rdx,QWORD PTR [rbp-0x20]
  42d427:	mov    DWORD PTR [rdx+0x18],ecx
  42d42a:	test   eax,eax
  42d42c:	je     42d445 <flatcc_json_printer_int16_field@@Base+0xa9>
  42d42e:	mov    rax,QWORD PTR [rbp-0x18]
  42d432:	mov    rax,QWORD PTR [rax+0x28]
  42d436:	lea    rcx,[rax+0x1]
  42d43a:	mov    rdx,QWORD PTR [rbp-0x18]
  42d43e:	mov    QWORD PTR [rdx+0x28],rcx
  42d442:	mov    BYTE PTR [rax],0x2c
  42d445:	mov    eax,DWORD PTR [rbp-0x28]
  42d448:	movsxd rdx,eax
  42d44b:	mov    rcx,QWORD PTR [rbp-0x30]
  42d44f:	mov    rax,QWORD PTR [rbp-0x18]
  42d453:	mov    rsi,rcx
  42d456:	mov    rdi,rax
  42d459:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d45e:	mov    rax,QWORD PTR [rbp-0x18]
  42d462:	mov    rdx,QWORD PTR [rax+0x28]
  42d466:	movsx  eax,WORD PTR [rbp-0xa]
  42d46a:	mov    rsi,rdx
  42d46d:	mov    edi,eax
  42d46f:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42d474:	mov    ecx,eax
  42d476:	mov    rax,QWORD PTR [rbp-0x18]
  42d47a:	mov    rdx,QWORD PTR [rax+0x28]
  42d47e:	movsxd rax,ecx
  42d481:	add    rdx,rax
  42d484:	mov    rax,QWORD PTR [rbp-0x18]
  42d488:	mov    QWORD PTR [rax+0x28],rdx
  42d48c:	jmp    42d48f <flatcc_json_printer_int16_field@@Base+0xf3>
  42d48e:	nop
  42d48f:	leave  
  42d490:	ret    

000000000042d491 <flatcc_json_printer_int32_field@@Base>:
  42d491:	push   rbp
  42d492:	mov    rbp,rsp
  42d495:	sub    rsp,0x40
  42d499:	mov    QWORD PTR [rbp-0x18],rdi
  42d49d:	mov    QWORD PTR [rbp-0x20],rsi
  42d4a1:	mov    DWORD PTR [rbp-0x24],edx
  42d4a4:	mov    QWORD PTR [rbp-0x30],rcx
  42d4a8:	mov    DWORD PTR [rbp-0x28],r8d
  42d4ac:	mov    DWORD PTR [rbp-0x34],r9d
  42d4b0:	mov    edx,DWORD PTR [rbp-0x24]
  42d4b3:	mov    rax,QWORD PTR [rbp-0x20]
  42d4b7:	mov    esi,edx
  42d4b9:	mov    rdi,rax
  42d4bc:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d4c1:	mov    QWORD PTR [rbp-0x8],rax
  42d4c5:	cmp    QWORD PTR [rbp-0x8],0x0
  42d4ca:	je     42d4f4 <flatcc_json_printer_int32_field@@Base+0x63>
  42d4cc:	mov    rax,QWORD PTR [rbp-0x8]
  42d4d0:	mov    rdi,rax
  42d4d3:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42d4d8:	mov    DWORD PTR [rbp-0xc],eax
  42d4db:	mov    eax,DWORD PTR [rbp-0xc]
  42d4de:	cmp    eax,DWORD PTR [rbp-0x34]
  42d4e1:	jne    42d506 <flatcc_json_printer_int32_field@@Base+0x75>
  42d4e3:	mov    rax,QWORD PTR [rbp-0x18]
  42d4e7:	movzx  eax,BYTE PTR [rax+0x34]
  42d4eb:	test   al,al
  42d4ed:	je     42d506 <flatcc_json_printer_int32_field@@Base+0x75>
  42d4ef:	jmp    42d57b <flatcc_json_printer_int32_field@@Base+0xea>
  42d4f4:	mov    rax,QWORD PTR [rbp-0x18]
  42d4f8:	movzx  eax,BYTE PTR [rax+0x35]
  42d4fc:	test   al,al
  42d4fe:	je     42d57a <flatcc_json_printer_int32_field@@Base+0xe9>
  42d500:	mov    eax,DWORD PTR [rbp-0x34]
  42d503:	mov    DWORD PTR [rbp-0xc],eax
  42d506:	mov    rax,QWORD PTR [rbp-0x20]
  42d50a:	mov    eax,DWORD PTR [rax+0x18]
  42d50d:	lea    ecx,[rax+0x1]
  42d510:	mov    rdx,QWORD PTR [rbp-0x20]
  42d514:	mov    DWORD PTR [rdx+0x18],ecx
  42d517:	test   eax,eax
  42d519:	je     42d532 <flatcc_json_printer_int32_field@@Base+0xa1>
  42d51b:	mov    rax,QWORD PTR [rbp-0x18]
  42d51f:	mov    rax,QWORD PTR [rax+0x28]
  42d523:	lea    rcx,[rax+0x1]
  42d527:	mov    rdx,QWORD PTR [rbp-0x18]
  42d52b:	mov    QWORD PTR [rdx+0x28],rcx
  42d52f:	mov    BYTE PTR [rax],0x2c
  42d532:	mov    eax,DWORD PTR [rbp-0x28]
  42d535:	movsxd rdx,eax
  42d538:	mov    rcx,QWORD PTR [rbp-0x30]
  42d53c:	mov    rax,QWORD PTR [rbp-0x18]
  42d540:	mov    rsi,rcx
  42d543:	mov    rdi,rax
  42d546:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d54b:	mov    rax,QWORD PTR [rbp-0x18]
  42d54f:	mov    rdx,QWORD PTR [rax+0x28]
  42d553:	mov    eax,DWORD PTR [rbp-0xc]
  42d556:	mov    rsi,rdx
  42d559:	mov    edi,eax
  42d55b:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42d560:	mov    ecx,eax
  42d562:	mov    rax,QWORD PTR [rbp-0x18]
  42d566:	mov    rdx,QWORD PTR [rax+0x28]
  42d56a:	movsxd rax,ecx
  42d56d:	add    rdx,rax
  42d570:	mov    rax,QWORD PTR [rbp-0x18]
  42d574:	mov    QWORD PTR [rax+0x28],rdx
  42d578:	jmp    42d57b <flatcc_json_printer_int32_field@@Base+0xea>
  42d57a:	nop
  42d57b:	leave  
  42d57c:	ret    

000000000042d57d <flatcc_json_printer_int64_field@@Base>:
  42d57d:	push   rbp
  42d57e:	mov    rbp,rsp
  42d581:	sub    rsp,0x40
  42d585:	mov    QWORD PTR [rbp-0x18],rdi
  42d589:	mov    QWORD PTR [rbp-0x20],rsi
  42d58d:	mov    DWORD PTR [rbp-0x24],edx
  42d590:	mov    QWORD PTR [rbp-0x30],rcx
  42d594:	mov    DWORD PTR [rbp-0x28],r8d
  42d598:	mov    QWORD PTR [rbp-0x38],r9
  42d59c:	mov    edx,DWORD PTR [rbp-0x24]
  42d59f:	mov    rax,QWORD PTR [rbp-0x20]
  42d5a3:	mov    esi,edx
  42d5a5:	mov    rdi,rax
  42d5a8:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d5ad:	mov    QWORD PTR [rbp-0x8],rax
  42d5b1:	cmp    QWORD PTR [rbp-0x8],0x0
  42d5b6:	je     42d5e3 <flatcc_json_printer_int64_field@@Base+0x66>
  42d5b8:	mov    rax,QWORD PTR [rbp-0x8]
  42d5bc:	mov    rdi,rax
  42d5bf:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  42d5c4:	mov    QWORD PTR [rbp-0x10],rax
  42d5c8:	mov    rax,QWORD PTR [rbp-0x10]
  42d5cc:	cmp    rax,QWORD PTR [rbp-0x38]
  42d5d0:	jne    42d5f7 <flatcc_json_printer_int64_field@@Base+0x7a>
  42d5d2:	mov    rax,QWORD PTR [rbp-0x18]
  42d5d6:	movzx  eax,BYTE PTR [rax+0x34]
  42d5da:	test   al,al
  42d5dc:	je     42d5f7 <flatcc_json_printer_int64_field@@Base+0x7a>
  42d5de:	jmp    42d66e <flatcc_json_printer_int64_field@@Base+0xf1>
  42d5e3:	mov    rax,QWORD PTR [rbp-0x18]
  42d5e7:	movzx  eax,BYTE PTR [rax+0x35]
  42d5eb:	test   al,al
  42d5ed:	je     42d66d <flatcc_json_printer_int64_field@@Base+0xf0>
  42d5ef:	mov    rax,QWORD PTR [rbp-0x38]
  42d5f3:	mov    QWORD PTR [rbp-0x10],rax
  42d5f7:	mov    rax,QWORD PTR [rbp-0x20]
  42d5fb:	mov    eax,DWORD PTR [rax+0x18]
  42d5fe:	lea    ecx,[rax+0x1]
  42d601:	mov    rdx,QWORD PTR [rbp-0x20]
  42d605:	mov    DWORD PTR [rdx+0x18],ecx
  42d608:	test   eax,eax
  42d60a:	je     42d623 <flatcc_json_printer_int64_field@@Base+0xa6>
  42d60c:	mov    rax,QWORD PTR [rbp-0x18]
  42d610:	mov    rax,QWORD PTR [rax+0x28]
  42d614:	lea    rcx,[rax+0x1]
  42d618:	mov    rdx,QWORD PTR [rbp-0x18]
  42d61c:	mov    QWORD PTR [rdx+0x28],rcx
  42d620:	mov    BYTE PTR [rax],0x2c
  42d623:	mov    eax,DWORD PTR [rbp-0x28]
  42d626:	movsxd rdx,eax
  42d629:	mov    rcx,QWORD PTR [rbp-0x30]
  42d62d:	mov    rax,QWORD PTR [rbp-0x18]
  42d631:	mov    rsi,rcx
  42d634:	mov    rdi,rax
  42d637:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d63c:	mov    rax,QWORD PTR [rbp-0x18]
  42d640:	mov    rdx,QWORD PTR [rax+0x28]
  42d644:	mov    rax,QWORD PTR [rbp-0x10]
  42d648:	mov    rsi,rdx
  42d64b:	mov    rdi,rax
  42d64e:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42d653:	mov    ecx,eax
  42d655:	mov    rax,QWORD PTR [rbp-0x18]
  42d659:	mov    rdx,QWORD PTR [rax+0x28]
  42d65d:	movsxd rax,ecx
  42d660:	add    rdx,rax
  42d663:	mov    rax,QWORD PTR [rbp-0x18]
  42d667:	mov    QWORD PTR [rax+0x28],rdx
  42d66b:	jmp    42d66e <flatcc_json_printer_int64_field@@Base+0xf1>
  42d66d:	nop
  42d66e:	leave  
  42d66f:	ret    

000000000042d670 <flatcc_json_printer_bool_field@@Base>:
  42d670:	push   rbp
  42d671:	mov    rbp,rsp
  42d674:	sub    rsp,0x40
  42d678:	mov    QWORD PTR [rbp-0x18],rdi
  42d67c:	mov    QWORD PTR [rbp-0x20],rsi
  42d680:	mov    DWORD PTR [rbp-0x24],edx
  42d683:	mov    QWORD PTR [rbp-0x30],rcx
  42d687:	mov    DWORD PTR [rbp-0x28],r8d
  42d68b:	mov    eax,r9d
  42d68e:	mov    BYTE PTR [rbp-0x34],al
  42d691:	mov    edx,DWORD PTR [rbp-0x24]
  42d694:	mov    rax,QWORD PTR [rbp-0x20]
  42d698:	mov    esi,edx
  42d69a:	mov    rdi,rax
  42d69d:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d6a2:	mov    QWORD PTR [rbp-0x8],rax
  42d6a6:	cmp    QWORD PTR [rbp-0x8],0x0
  42d6ab:	je     42d6d6 <flatcc_json_printer_bool_field@@Base+0x66>
  42d6ad:	mov    rax,QWORD PTR [rbp-0x8]
  42d6b1:	mov    rdi,rax
  42d6b4:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  42d6b9:	mov    BYTE PTR [rbp-0x9],al
  42d6bc:	movzx  eax,BYTE PTR [rbp-0x9]
  42d6c0:	cmp    al,BYTE PTR [rbp-0x34]
  42d6c3:	jne    42d6e9 <flatcc_json_printer_bool_field@@Base+0x79>
  42d6c5:	mov    rax,QWORD PTR [rbp-0x18]
  42d6c9:	movzx  eax,BYTE PTR [rax+0x34]
  42d6cd:	test   al,al
  42d6cf:	je     42d6e9 <flatcc_json_printer_bool_field@@Base+0x79>
  42d6d1:	jmp    42d75f <flatcc_json_printer_bool_field@@Base+0xef>
  42d6d6:	mov    rax,QWORD PTR [rbp-0x18]
  42d6da:	movzx  eax,BYTE PTR [rax+0x35]
  42d6de:	test   al,al
  42d6e0:	je     42d75e <flatcc_json_printer_bool_field@@Base+0xee>
  42d6e2:	movzx  eax,BYTE PTR [rbp-0x34]
  42d6e6:	mov    BYTE PTR [rbp-0x9],al
  42d6e9:	mov    rax,QWORD PTR [rbp-0x20]
  42d6ed:	mov    eax,DWORD PTR [rax+0x18]
  42d6f0:	lea    ecx,[rax+0x1]
  42d6f3:	mov    rdx,QWORD PTR [rbp-0x20]
  42d6f7:	mov    DWORD PTR [rdx+0x18],ecx
  42d6fa:	test   eax,eax
  42d6fc:	je     42d715 <flatcc_json_printer_bool_field@@Base+0xa5>
  42d6fe:	mov    rax,QWORD PTR [rbp-0x18]
  42d702:	mov    rax,QWORD PTR [rax+0x28]
  42d706:	lea    rcx,[rax+0x1]
  42d70a:	mov    rdx,QWORD PTR [rbp-0x18]
  42d70e:	mov    QWORD PTR [rdx+0x28],rcx
  42d712:	mov    BYTE PTR [rax],0x2c
  42d715:	mov    eax,DWORD PTR [rbp-0x28]
  42d718:	movsxd rdx,eax
  42d71b:	mov    rcx,QWORD PTR [rbp-0x30]
  42d71f:	mov    rax,QWORD PTR [rbp-0x18]
  42d723:	mov    rsi,rcx
  42d726:	mov    rdi,rax
  42d729:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d72e:	mov    rax,QWORD PTR [rbp-0x18]
  42d732:	mov    rdx,QWORD PTR [rax+0x28]
  42d736:	movzx  eax,BYTE PTR [rbp-0x9]
  42d73a:	mov    rsi,rdx
  42d73d:	mov    edi,eax
  42d73f:	call   428b85 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42d744:	mov    ecx,eax
  42d746:	mov    rax,QWORD PTR [rbp-0x18]
  42d74a:	mov    rdx,QWORD PTR [rax+0x28]
  42d74e:	movsxd rax,ecx
  42d751:	add    rdx,rax
  42d754:	mov    rax,QWORD PTR [rbp-0x18]
  42d758:	mov    QWORD PTR [rax+0x28],rdx
  42d75c:	jmp    42d75f <flatcc_json_printer_bool_field@@Base+0xef>
  42d75e:	nop
  42d75f:	leave  
  42d760:	ret    

000000000042d761 <flatcc_json_printer_float_field@@Base>:
  42d761:	push   rbp
  42d762:	mov    rbp,rsp
  42d765:	sub    rsp,0x40
  42d769:	mov    QWORD PTR [rbp-0x18],rdi
  42d76d:	mov    QWORD PTR [rbp-0x20],rsi
  42d771:	mov    DWORD PTR [rbp-0x24],edx
  42d774:	mov    QWORD PTR [rbp-0x30],rcx
  42d778:	mov    DWORD PTR [rbp-0x28],r8d
  42d77c:	vmovss DWORD PTR [rbp-0x34],xmm0
  42d781:	mov    edx,DWORD PTR [rbp-0x24]
  42d784:	mov    rax,QWORD PTR [rbp-0x20]
  42d788:	mov    esi,edx
  42d78a:	mov    rdi,rax
  42d78d:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d792:	mov    QWORD PTR [rbp-0x8],rax
  42d796:	cmp    QWORD PTR [rbp-0x8],0x0
  42d79b:	je     42d7d9 <flatcc_json_printer_float_field@@Base+0x78>
  42d79d:	mov    rax,QWORD PTR [rbp-0x8]
  42d7a1:	mov    rdi,rax
  42d7a4:	call   428997 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  42d7a9:	vmovd  eax,xmm0
  42d7ad:	mov    DWORD PTR [rbp-0xc],eax
  42d7b0:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42d7b5:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42d7ba:	jp     42d7ef <flatcc_json_printer_float_field@@Base+0x8e>
  42d7bc:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42d7c1:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42d7c6:	jne    42d7ef <flatcc_json_printer_float_field@@Base+0x8e>
  42d7c8:	mov    rax,QWORD PTR [rbp-0x18]
  42d7cc:	movzx  eax,BYTE PTR [rax+0x34]
  42d7d0:	test   al,al
  42d7d2:	je     42d7ef <flatcc_json_printer_float_field@@Base+0x8e>
  42d7d4:	jmp    42d864 <flatcc_json_printer_float_field@@Base+0x103>
  42d7d9:	mov    rax,QWORD PTR [rbp-0x18]
  42d7dd:	movzx  eax,BYTE PTR [rax+0x35]
  42d7e1:	test   al,al
  42d7e3:	je     42d863 <flatcc_json_printer_float_field@@Base+0x102>
  42d7e5:	vmovss xmm0,DWORD PTR [rbp-0x34]
  42d7ea:	vmovss DWORD PTR [rbp-0xc],xmm0
  42d7ef:	mov    rax,QWORD PTR [rbp-0x20]
  42d7f3:	mov    eax,DWORD PTR [rax+0x18]
  42d7f6:	lea    ecx,[rax+0x1]
  42d7f9:	mov    rdx,QWORD PTR [rbp-0x20]
  42d7fd:	mov    DWORD PTR [rdx+0x18],ecx
  42d800:	test   eax,eax
  42d802:	je     42d81b <flatcc_json_printer_float_field@@Base+0xba>
  42d804:	mov    rax,QWORD PTR [rbp-0x18]
  42d808:	mov    rax,QWORD PTR [rax+0x28]
  42d80c:	lea    rcx,[rax+0x1]
  42d810:	mov    rdx,QWORD PTR [rbp-0x18]
  42d814:	mov    QWORD PTR [rdx+0x28],rcx
  42d818:	mov    BYTE PTR [rax],0x2c
  42d81b:	mov    eax,DWORD PTR [rbp-0x28]
  42d81e:	movsxd rdx,eax
  42d821:	mov    rcx,QWORD PTR [rbp-0x30]
  42d825:	mov    rax,QWORD PTR [rbp-0x18]
  42d829:	mov    rsi,rcx
  42d82c:	mov    rdi,rax
  42d82f:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d834:	mov    rax,QWORD PTR [rbp-0x18]
  42d838:	mov    rax,QWORD PTR [rax+0x28]
  42d83c:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0xc]
  42d841:	mov    rdi,rax
  42d844:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42d849:	mov    ecx,eax
  42d84b:	mov    rax,QWORD PTR [rbp-0x18]
  42d84f:	mov    rdx,QWORD PTR [rax+0x28]
  42d853:	movsxd rax,ecx
  42d856:	add    rdx,rax
  42d859:	mov    rax,QWORD PTR [rbp-0x18]
  42d85d:	mov    QWORD PTR [rax+0x28],rdx
  42d861:	jmp    42d864 <flatcc_json_printer_float_field@@Base+0x103>
  42d863:	nop
  42d864:	leave  
  42d865:	ret    

000000000042d866 <flatcc_json_printer_double_field@@Base>:
  42d866:	push   rbp
  42d867:	mov    rbp,rsp
  42d86a:	sub    rsp,0x40
  42d86e:	mov    QWORD PTR [rbp-0x18],rdi
  42d872:	mov    QWORD PTR [rbp-0x20],rsi
  42d876:	mov    DWORD PTR [rbp-0x24],edx
  42d879:	mov    QWORD PTR [rbp-0x30],rcx
  42d87d:	mov    DWORD PTR [rbp-0x28],r8d
  42d881:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42d886:	mov    edx,DWORD PTR [rbp-0x24]
  42d889:	mov    rax,QWORD PTR [rbp-0x20]
  42d88d:	mov    esi,edx
  42d88f:	mov    rdi,rax
  42d892:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d897:	mov    QWORD PTR [rbp-0x8],rax
  42d89b:	cmp    QWORD PTR [rbp-0x8],0x0
  42d8a0:	je     42d8e0 <flatcc_json_printer_double_field@@Base+0x7a>
  42d8a2:	mov    rax,QWORD PTR [rbp-0x8]
  42d8a6:	mov    rdi,rax
  42d8a9:	call   4289da <flatcc_json_parser_struct_as_root@@Base+0x302>
  42d8ae:	vmovq  rax,xmm0
  42d8b3:	mov    QWORD PTR [rbp-0x10],rax
  42d8b7:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42d8bc:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42d8c1:	jp     42d8fa <flatcc_json_printer_double_field@@Base+0x94>
  42d8c3:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42d8c8:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42d8cd:	jne    42d8fa <flatcc_json_printer_double_field@@Base+0x94>
  42d8cf:	mov    rax,QWORD PTR [rbp-0x18]
  42d8d3:	movzx  eax,BYTE PTR [rax+0x34]
  42d8d7:	test   al,al
  42d8d9:	je     42d8fa <flatcc_json_printer_double_field@@Base+0x94>
  42d8db:	jmp    42d977 <flatcc_json_printer_double_field@@Base+0x111>
  42d8e0:	mov    rax,QWORD PTR [rbp-0x18]
  42d8e4:	movzx  eax,BYTE PTR [rax+0x35]
  42d8e8:	test   al,al
  42d8ea:	je     42d976 <flatcc_json_printer_double_field@@Base+0x110>
  42d8f0:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  42d8f5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42d8fa:	mov    rax,QWORD PTR [rbp-0x20]
  42d8fe:	mov    eax,DWORD PTR [rax+0x18]
  42d901:	lea    ecx,[rax+0x1]
  42d904:	mov    rdx,QWORD PTR [rbp-0x20]
  42d908:	mov    DWORD PTR [rdx+0x18],ecx
  42d90b:	test   eax,eax
  42d90d:	je     42d926 <flatcc_json_printer_double_field@@Base+0xc0>
  42d90f:	mov    rax,QWORD PTR [rbp-0x18]
  42d913:	mov    rax,QWORD PTR [rax+0x28]
  42d917:	lea    rcx,[rax+0x1]
  42d91b:	mov    rdx,QWORD PTR [rbp-0x18]
  42d91f:	mov    QWORD PTR [rdx+0x28],rcx
  42d923:	mov    BYTE PTR [rax],0x2c
  42d926:	mov    eax,DWORD PTR [rbp-0x28]
  42d929:	movsxd rdx,eax
  42d92c:	mov    rcx,QWORD PTR [rbp-0x30]
  42d930:	mov    rax,QWORD PTR [rbp-0x18]
  42d934:	mov    rsi,rcx
  42d937:	mov    rdi,rax
  42d93a:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42d93f:	mov    rax,QWORD PTR [rbp-0x18]
  42d943:	mov    rdx,QWORD PTR [rax+0x28]
  42d947:	mov    rax,QWORD PTR [rbp-0x10]
  42d94b:	mov    rdi,rdx
  42d94e:	mov    QWORD PTR [rbp-0x40],rax
  42d952:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  42d957:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42d95c:	mov    ecx,eax
  42d95e:	mov    rax,QWORD PTR [rbp-0x18]
  42d962:	mov    rdx,QWORD PTR [rax+0x28]
  42d966:	movsxd rax,ecx
  42d969:	add    rdx,rax
  42d96c:	mov    rax,QWORD PTR [rbp-0x18]
  42d970:	mov    QWORD PTR [rax+0x28],rdx
  42d974:	jmp    42d977 <flatcc_json_printer_double_field@@Base+0x111>
  42d976:	nop
  42d977:	leave  
  42d978:	ret    

000000000042d979 <flatcc_json_printer_uint8_enum_field@@Base>:
  42d979:	push   rbp
  42d97a:	mov    rbp,rsp
  42d97d:	sub    rsp,0x40
  42d981:	mov    QWORD PTR [rbp-0x18],rdi
  42d985:	mov    QWORD PTR [rbp-0x20],rsi
  42d989:	mov    DWORD PTR [rbp-0x24],edx
  42d98c:	mov    QWORD PTR [rbp-0x30],rcx
  42d990:	mov    DWORD PTR [rbp-0x28],r8d
  42d994:	mov    eax,r9d
  42d997:	mov    BYTE PTR [rbp-0x34],al
  42d99a:	mov    edx,DWORD PTR [rbp-0x24]
  42d99d:	mov    rax,QWORD PTR [rbp-0x20]
  42d9a1:	mov    esi,edx
  42d9a3:	mov    rdi,rax
  42d9a6:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42d9ab:	mov    QWORD PTR [rbp-0x8],rax
  42d9af:	cmp    QWORD PTR [rbp-0x8],0x0
  42d9b4:	je     42d9df <flatcc_json_printer_uint8_enum_field@@Base+0x66>
  42d9b6:	mov    rax,QWORD PTR [rbp-0x8]
  42d9ba:	mov    rdi,rax
  42d9bd:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  42d9c2:	mov    BYTE PTR [rbp-0x9],al
  42d9c5:	movzx  eax,BYTE PTR [rbp-0x9]
  42d9c9:	cmp    al,BYTE PTR [rbp-0x34]
  42d9cc:	jne    42d9f6 <flatcc_json_printer_uint8_enum_field@@Base+0x7d>
  42d9ce:	mov    rax,QWORD PTR [rbp-0x18]
  42d9d2:	movzx  eax,BYTE PTR [rax+0x34]
  42d9d6:	test   al,al
  42d9d8:	je     42d9f6 <flatcc_json_printer_uint8_enum_field@@Base+0x7d>
  42d9da:	jmp    42da8d <flatcc_json_printer_uint8_enum_field@@Base+0x114>
  42d9df:	mov    rax,QWORD PTR [rbp-0x18]
  42d9e3:	movzx  eax,BYTE PTR [rax+0x35]
  42d9e7:	test   al,al
  42d9e9:	je     42da8c <flatcc_json_printer_uint8_enum_field@@Base+0x113>
  42d9ef:	movzx  eax,BYTE PTR [rbp-0x34]
  42d9f3:	mov    BYTE PTR [rbp-0x9],al
  42d9f6:	mov    rax,QWORD PTR [rbp-0x20]
  42d9fa:	mov    eax,DWORD PTR [rax+0x18]
  42d9fd:	lea    ecx,[rax+0x1]
  42da00:	mov    rdx,QWORD PTR [rbp-0x20]
  42da04:	mov    DWORD PTR [rdx+0x18],ecx
  42da07:	test   eax,eax
  42da09:	je     42da22 <flatcc_json_printer_uint8_enum_field@@Base+0xa9>
  42da0b:	mov    rax,QWORD PTR [rbp-0x18]
  42da0f:	mov    rax,QWORD PTR [rax+0x28]
  42da13:	lea    rcx,[rax+0x1]
  42da17:	mov    rdx,QWORD PTR [rbp-0x18]
  42da1b:	mov    QWORD PTR [rdx+0x28],rcx
  42da1f:	mov    BYTE PTR [rax],0x2c
  42da22:	mov    eax,DWORD PTR [rbp-0x28]
  42da25:	movsxd rdx,eax
  42da28:	mov    rcx,QWORD PTR [rbp-0x30]
  42da2c:	mov    rax,QWORD PTR [rbp-0x18]
  42da30:	mov    rsi,rcx
  42da33:	mov    rdi,rax
  42da36:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42da3b:	mov    rax,QWORD PTR [rbp-0x18]
  42da3f:	movzx  eax,BYTE PTR [rax+0x33]
  42da43:	test   al,al
  42da45:	je     42da77 <flatcc_json_printer_uint8_enum_field@@Base+0xfe>
  42da47:	mov    rax,QWORD PTR [rbp-0x18]
  42da4b:	mov    rdx,QWORD PTR [rax+0x28]
  42da4f:	movzx  eax,BYTE PTR [rbp-0x9]
  42da53:	mov    rsi,rdx
  42da56:	mov    edi,eax
  42da58:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42da5d:	mov    ecx,eax
  42da5f:	mov    rax,QWORD PTR [rbp-0x18]
  42da63:	mov    rdx,QWORD PTR [rax+0x28]
  42da67:	movsxd rax,ecx
  42da6a:	add    rdx,rax
  42da6d:	mov    rax,QWORD PTR [rbp-0x18]
  42da71:	mov    QWORD PTR [rax+0x28],rdx
  42da75:	jmp    42da8d <flatcc_json_printer_uint8_enum_field@@Base+0x114>
  42da77:	movzx  ecx,BYTE PTR [rbp-0x9]
  42da7b:	mov    rdx,QWORD PTR [rbp-0x18]
  42da7f:	mov    rax,QWORD PTR [rbp+0x10]
  42da83:	mov    esi,ecx
  42da85:	mov    rdi,rdx
  42da88:	call   rax
  42da8a:	jmp    42da8d <flatcc_json_printer_uint8_enum_field@@Base+0x114>
  42da8c:	nop
  42da8d:	leave  
  42da8e:	ret    

000000000042da8f <flatcc_json_printer_uint16_enum_field@@Base>:
  42da8f:	push   rbp
  42da90:	mov    rbp,rsp
  42da93:	sub    rsp,0x40
  42da97:	mov    QWORD PTR [rbp-0x18],rdi
  42da9b:	mov    QWORD PTR [rbp-0x20],rsi
  42da9f:	mov    DWORD PTR [rbp-0x24],edx
  42daa2:	mov    QWORD PTR [rbp-0x30],rcx
  42daa6:	mov    DWORD PTR [rbp-0x28],r8d
  42daaa:	mov    eax,r9d
  42daad:	mov    WORD PTR [rbp-0x34],ax
  42dab1:	mov    edx,DWORD PTR [rbp-0x24]
  42dab4:	mov    rax,QWORD PTR [rbp-0x20]
  42dab8:	mov    esi,edx
  42daba:	mov    rdi,rax
  42dabd:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42dac2:	mov    QWORD PTR [rbp-0x8],rax
  42dac6:	cmp    QWORD PTR [rbp-0x8],0x0
  42dacb:	je     42daf8 <flatcc_json_printer_uint16_enum_field@@Base+0x69>
  42dacd:	mov    rax,QWORD PTR [rbp-0x8]
  42dad1:	mov    rdi,rax
  42dad4:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  42dad9:	mov    WORD PTR [rbp-0xa],ax
  42dadd:	movzx  eax,WORD PTR [rbp-0xa]
  42dae1:	cmp    ax,WORD PTR [rbp-0x34]
  42dae5:	jne    42db10 <flatcc_json_printer_uint16_enum_field@@Base+0x81>
  42dae7:	mov    rax,QWORD PTR [rbp-0x18]
  42daeb:	movzx  eax,BYTE PTR [rax+0x34]
  42daef:	test   al,al
  42daf1:	je     42db10 <flatcc_json_printer_uint16_enum_field@@Base+0x81>
  42daf3:	jmp    42dba7 <flatcc_json_printer_uint16_enum_field@@Base+0x118>
  42daf8:	mov    rax,QWORD PTR [rbp-0x18]
  42dafc:	movzx  eax,BYTE PTR [rax+0x35]
  42db00:	test   al,al
  42db02:	je     42dba6 <flatcc_json_printer_uint16_enum_field@@Base+0x117>
  42db08:	movzx  eax,WORD PTR [rbp-0x34]
  42db0c:	mov    WORD PTR [rbp-0xa],ax
  42db10:	mov    rax,QWORD PTR [rbp-0x20]
  42db14:	mov    eax,DWORD PTR [rax+0x18]
  42db17:	lea    ecx,[rax+0x1]
  42db1a:	mov    rdx,QWORD PTR [rbp-0x20]
  42db1e:	mov    DWORD PTR [rdx+0x18],ecx
  42db21:	test   eax,eax
  42db23:	je     42db3c <flatcc_json_printer_uint16_enum_field@@Base+0xad>
  42db25:	mov    rax,QWORD PTR [rbp-0x18]
  42db29:	mov    rax,QWORD PTR [rax+0x28]
  42db2d:	lea    rcx,[rax+0x1]
  42db31:	mov    rdx,QWORD PTR [rbp-0x18]
  42db35:	mov    QWORD PTR [rdx+0x28],rcx
  42db39:	mov    BYTE PTR [rax],0x2c
  42db3c:	mov    eax,DWORD PTR [rbp-0x28]
  42db3f:	movsxd rdx,eax
  42db42:	mov    rcx,QWORD PTR [rbp-0x30]
  42db46:	mov    rax,QWORD PTR [rbp-0x18]
  42db4a:	mov    rsi,rcx
  42db4d:	mov    rdi,rax
  42db50:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42db55:	mov    rax,QWORD PTR [rbp-0x18]
  42db59:	movzx  eax,BYTE PTR [rax+0x33]
  42db5d:	test   al,al
  42db5f:	je     42db91 <flatcc_json_printer_uint16_enum_field@@Base+0x102>
  42db61:	mov    rax,QWORD PTR [rbp-0x18]
  42db65:	mov    rdx,QWORD PTR [rax+0x28]
  42db69:	movzx  eax,WORD PTR [rbp-0xa]
  42db6d:	mov    rsi,rdx
  42db70:	mov    edi,eax
  42db72:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42db77:	mov    ecx,eax
  42db79:	mov    rax,QWORD PTR [rbp-0x18]
  42db7d:	mov    rdx,QWORD PTR [rax+0x28]
  42db81:	movsxd rax,ecx
  42db84:	add    rdx,rax
  42db87:	mov    rax,QWORD PTR [rbp-0x18]
  42db8b:	mov    QWORD PTR [rax+0x28],rdx
  42db8f:	jmp    42dba7 <flatcc_json_printer_uint16_enum_field@@Base+0x118>
  42db91:	movzx  ecx,WORD PTR [rbp-0xa]
  42db95:	mov    rdx,QWORD PTR [rbp-0x18]
  42db99:	mov    rax,QWORD PTR [rbp+0x10]
  42db9d:	mov    esi,ecx
  42db9f:	mov    rdi,rdx
  42dba2:	call   rax
  42dba4:	jmp    42dba7 <flatcc_json_printer_uint16_enum_field@@Base+0x118>
  42dba6:	nop
  42dba7:	leave  
  42dba8:	ret    

000000000042dba9 <flatcc_json_printer_uint32_enum_field@@Base>:
  42dba9:	push   rbp
  42dbaa:	mov    rbp,rsp
  42dbad:	sub    rsp,0x40
  42dbb1:	mov    QWORD PTR [rbp-0x18],rdi
  42dbb5:	mov    QWORD PTR [rbp-0x20],rsi
  42dbb9:	mov    DWORD PTR [rbp-0x24],edx
  42dbbc:	mov    QWORD PTR [rbp-0x30],rcx
  42dbc0:	mov    DWORD PTR [rbp-0x28],r8d
  42dbc4:	mov    DWORD PTR [rbp-0x34],r9d
  42dbc8:	mov    edx,DWORD PTR [rbp-0x24]
  42dbcb:	mov    rax,QWORD PTR [rbp-0x20]
  42dbcf:	mov    esi,edx
  42dbd1:	mov    rdi,rax
  42dbd4:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42dbd9:	mov    QWORD PTR [rbp-0x8],rax
  42dbdd:	cmp    QWORD PTR [rbp-0x8],0x0
  42dbe2:	je     42dc0c <flatcc_json_printer_uint32_enum_field@@Base+0x63>
  42dbe4:	mov    rax,QWORD PTR [rbp-0x8]
  42dbe8:	mov    rdi,rax
  42dbeb:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42dbf0:	mov    DWORD PTR [rbp-0xc],eax
  42dbf3:	mov    eax,DWORD PTR [rbp-0xc]
  42dbf6:	cmp    eax,DWORD PTR [rbp-0x34]
  42dbf9:	jne    42dc22 <flatcc_json_printer_uint32_enum_field@@Base+0x79>
  42dbfb:	mov    rax,QWORD PTR [rbp-0x18]
  42dbff:	movzx  eax,BYTE PTR [rax+0x34]
  42dc03:	test   al,al
  42dc05:	je     42dc22 <flatcc_json_printer_uint32_enum_field@@Base+0x79>
  42dc07:	jmp    42dcb7 <flatcc_json_printer_uint32_enum_field@@Base+0x10e>
  42dc0c:	mov    rax,QWORD PTR [rbp-0x18]
  42dc10:	movzx  eax,BYTE PTR [rax+0x35]
  42dc14:	test   al,al
  42dc16:	je     42dcb6 <flatcc_json_printer_uint32_enum_field@@Base+0x10d>
  42dc1c:	mov    eax,DWORD PTR [rbp-0x34]
  42dc1f:	mov    DWORD PTR [rbp-0xc],eax
  42dc22:	mov    rax,QWORD PTR [rbp-0x20]
  42dc26:	mov    eax,DWORD PTR [rax+0x18]
  42dc29:	lea    ecx,[rax+0x1]
  42dc2c:	mov    rdx,QWORD PTR [rbp-0x20]
  42dc30:	mov    DWORD PTR [rdx+0x18],ecx
  42dc33:	test   eax,eax
  42dc35:	je     42dc4e <flatcc_json_printer_uint32_enum_field@@Base+0xa5>
  42dc37:	mov    rax,QWORD PTR [rbp-0x18]
  42dc3b:	mov    rax,QWORD PTR [rax+0x28]
  42dc3f:	lea    rcx,[rax+0x1]
  42dc43:	mov    rdx,QWORD PTR [rbp-0x18]
  42dc47:	mov    QWORD PTR [rdx+0x28],rcx
  42dc4b:	mov    BYTE PTR [rax],0x2c
  42dc4e:	mov    eax,DWORD PTR [rbp-0x28]
  42dc51:	movsxd rdx,eax
  42dc54:	mov    rcx,QWORD PTR [rbp-0x30]
  42dc58:	mov    rax,QWORD PTR [rbp-0x18]
  42dc5c:	mov    rsi,rcx
  42dc5f:	mov    rdi,rax
  42dc62:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42dc67:	mov    rax,QWORD PTR [rbp-0x18]
  42dc6b:	movzx  eax,BYTE PTR [rax+0x33]
  42dc6f:	test   al,al
  42dc71:	je     42dca2 <flatcc_json_printer_uint32_enum_field@@Base+0xf9>
  42dc73:	mov    rax,QWORD PTR [rbp-0x18]
  42dc77:	mov    rdx,QWORD PTR [rax+0x28]
  42dc7b:	mov    eax,DWORD PTR [rbp-0xc]
  42dc7e:	mov    rsi,rdx
  42dc81:	mov    edi,eax
  42dc83:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42dc88:	mov    ecx,eax
  42dc8a:	mov    rax,QWORD PTR [rbp-0x18]
  42dc8e:	mov    rdx,QWORD PTR [rax+0x28]
  42dc92:	movsxd rax,ecx
  42dc95:	add    rdx,rax
  42dc98:	mov    rax,QWORD PTR [rbp-0x18]
  42dc9c:	mov    QWORD PTR [rax+0x28],rdx
  42dca0:	jmp    42dcb7 <flatcc_json_printer_uint32_enum_field@@Base+0x10e>
  42dca2:	mov    ecx,DWORD PTR [rbp-0xc]
  42dca5:	mov    rdx,QWORD PTR [rbp-0x18]
  42dca9:	mov    rax,QWORD PTR [rbp+0x10]
  42dcad:	mov    esi,ecx
  42dcaf:	mov    rdi,rdx
  42dcb2:	call   rax
  42dcb4:	jmp    42dcb7 <flatcc_json_printer_uint32_enum_field@@Base+0x10e>
  42dcb6:	nop
  42dcb7:	leave  
  42dcb8:	ret    

000000000042dcb9 <flatcc_json_printer_uint64_enum_field@@Base>:
  42dcb9:	push   rbp
  42dcba:	mov    rbp,rsp
  42dcbd:	sub    rsp,0x40
  42dcc1:	mov    QWORD PTR [rbp-0x18],rdi
  42dcc5:	mov    QWORD PTR [rbp-0x20],rsi
  42dcc9:	mov    DWORD PTR [rbp-0x24],edx
  42dccc:	mov    QWORD PTR [rbp-0x30],rcx
  42dcd0:	mov    DWORD PTR [rbp-0x28],r8d
  42dcd4:	mov    QWORD PTR [rbp-0x38],r9
  42dcd8:	mov    edx,DWORD PTR [rbp-0x24]
  42dcdb:	mov    rax,QWORD PTR [rbp-0x20]
  42dcdf:	mov    esi,edx
  42dce1:	mov    rdi,rax
  42dce4:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42dce9:	mov    QWORD PTR [rbp-0x8],rax
  42dced:	cmp    QWORD PTR [rbp-0x8],0x0
  42dcf2:	je     42dd1f <flatcc_json_printer_uint64_enum_field@@Base+0x66>
  42dcf4:	mov    rax,QWORD PTR [rbp-0x8]
  42dcf8:	mov    rdi,rax
  42dcfb:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42dd00:	mov    QWORD PTR [rbp-0x10],rax
  42dd04:	mov    rax,QWORD PTR [rbp-0x10]
  42dd08:	cmp    rax,QWORD PTR [rbp-0x38]
  42dd0c:	jne    42dd37 <flatcc_json_printer_uint64_enum_field@@Base+0x7e>
  42dd0e:	mov    rax,QWORD PTR [rbp-0x18]
  42dd12:	movzx  eax,BYTE PTR [rax+0x34]
  42dd16:	test   al,al
  42dd18:	je     42dd37 <flatcc_json_printer_uint64_enum_field@@Base+0x7e>
  42dd1a:	jmp    42ddd0 <flatcc_json_printer_uint64_enum_field@@Base+0x117>
  42dd1f:	mov    rax,QWORD PTR [rbp-0x18]
  42dd23:	movzx  eax,BYTE PTR [rax+0x35]
  42dd27:	test   al,al
  42dd29:	je     42ddcf <flatcc_json_printer_uint64_enum_field@@Base+0x116>
  42dd2f:	mov    rax,QWORD PTR [rbp-0x38]
  42dd33:	mov    QWORD PTR [rbp-0x10],rax
  42dd37:	mov    rax,QWORD PTR [rbp-0x20]
  42dd3b:	mov    eax,DWORD PTR [rax+0x18]
  42dd3e:	lea    ecx,[rax+0x1]
  42dd41:	mov    rdx,QWORD PTR [rbp-0x20]
  42dd45:	mov    DWORD PTR [rdx+0x18],ecx
  42dd48:	test   eax,eax
  42dd4a:	je     42dd63 <flatcc_json_printer_uint64_enum_field@@Base+0xaa>
  42dd4c:	mov    rax,QWORD PTR [rbp-0x18]
  42dd50:	mov    rax,QWORD PTR [rax+0x28]
  42dd54:	lea    rcx,[rax+0x1]
  42dd58:	mov    rdx,QWORD PTR [rbp-0x18]
  42dd5c:	mov    QWORD PTR [rdx+0x28],rcx
  42dd60:	mov    BYTE PTR [rax],0x2c
  42dd63:	mov    eax,DWORD PTR [rbp-0x28]
  42dd66:	movsxd rdx,eax
  42dd69:	mov    rcx,QWORD PTR [rbp-0x30]
  42dd6d:	mov    rax,QWORD PTR [rbp-0x18]
  42dd71:	mov    rsi,rcx
  42dd74:	mov    rdi,rax
  42dd77:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42dd7c:	mov    rax,QWORD PTR [rbp-0x18]
  42dd80:	movzx  eax,BYTE PTR [rax+0x33]
  42dd84:	test   al,al
  42dd86:	je     42ddb9 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
  42dd88:	mov    rax,QWORD PTR [rbp-0x18]
  42dd8c:	mov    rdx,QWORD PTR [rax+0x28]
  42dd90:	mov    rax,QWORD PTR [rbp-0x10]
  42dd94:	mov    rsi,rdx
  42dd97:	mov    rdi,rax
  42dd9a:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42dd9f:	mov    ecx,eax
  42dda1:	mov    rax,QWORD PTR [rbp-0x18]
  42dda5:	mov    rdx,QWORD PTR [rax+0x28]
  42dda9:	movsxd rax,ecx
  42ddac:	add    rdx,rax
  42ddaf:	mov    rax,QWORD PTR [rbp-0x18]
  42ddb3:	mov    QWORD PTR [rax+0x28],rdx
  42ddb7:	jmp    42ddd0 <flatcc_json_printer_uint64_enum_field@@Base+0x117>
  42ddb9:	mov    rcx,QWORD PTR [rbp-0x10]
  42ddbd:	mov    rdx,QWORD PTR [rbp-0x18]
  42ddc1:	mov    rax,QWORD PTR [rbp+0x10]
  42ddc5:	mov    rsi,rcx
  42ddc8:	mov    rdi,rdx
  42ddcb:	call   rax
  42ddcd:	jmp    42ddd0 <flatcc_json_printer_uint64_enum_field@@Base+0x117>
  42ddcf:	nop
  42ddd0:	leave  
  42ddd1:	ret    

000000000042ddd2 <flatcc_json_printer_int8_enum_field@@Base>:
  42ddd2:	push   rbp
  42ddd3:	mov    rbp,rsp
  42ddd6:	sub    rsp,0x40
  42ddda:	mov    QWORD PTR [rbp-0x18],rdi
  42ddde:	mov    QWORD PTR [rbp-0x20],rsi
  42dde2:	mov    DWORD PTR [rbp-0x24],edx
  42dde5:	mov    QWORD PTR [rbp-0x30],rcx
  42dde9:	mov    DWORD PTR [rbp-0x28],r8d
  42dded:	mov    eax,r9d
  42ddf0:	mov    BYTE PTR [rbp-0x34],al
  42ddf3:	mov    edx,DWORD PTR [rbp-0x24]
  42ddf6:	mov    rax,QWORD PTR [rbp-0x20]
  42ddfa:	mov    esi,edx
  42ddfc:	mov    rdi,rax
  42ddff:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42de04:	mov    QWORD PTR [rbp-0x8],rax
  42de08:	cmp    QWORD PTR [rbp-0x8],0x0
  42de0d:	je     42de38 <flatcc_json_printer_int8_enum_field@@Base+0x66>
  42de0f:	mov    rax,QWORD PTR [rbp-0x8]
  42de13:	mov    rdi,rax
  42de16:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  42de1b:	mov    BYTE PTR [rbp-0x9],al
  42de1e:	movzx  eax,BYTE PTR [rbp-0x9]
  42de22:	cmp    al,BYTE PTR [rbp-0x34]
  42de25:	jne    42de4f <flatcc_json_printer_int8_enum_field@@Base+0x7d>
  42de27:	mov    rax,QWORD PTR [rbp-0x18]
  42de2b:	movzx  eax,BYTE PTR [rax+0x34]
  42de2f:	test   al,al
  42de31:	je     42de4f <flatcc_json_printer_int8_enum_field@@Base+0x7d>
  42de33:	jmp    42dee6 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  42de38:	mov    rax,QWORD PTR [rbp-0x18]
  42de3c:	movzx  eax,BYTE PTR [rax+0x35]
  42de40:	test   al,al
  42de42:	je     42dee5 <flatcc_json_printer_int8_enum_field@@Base+0x113>
  42de48:	movzx  eax,BYTE PTR [rbp-0x34]
  42de4c:	mov    BYTE PTR [rbp-0x9],al
  42de4f:	mov    rax,QWORD PTR [rbp-0x20]
  42de53:	mov    eax,DWORD PTR [rax+0x18]
  42de56:	lea    ecx,[rax+0x1]
  42de59:	mov    rdx,QWORD PTR [rbp-0x20]
  42de5d:	mov    DWORD PTR [rdx+0x18],ecx
  42de60:	test   eax,eax
  42de62:	je     42de7b <flatcc_json_printer_int8_enum_field@@Base+0xa9>
  42de64:	mov    rax,QWORD PTR [rbp-0x18]
  42de68:	mov    rax,QWORD PTR [rax+0x28]
  42de6c:	lea    rcx,[rax+0x1]
  42de70:	mov    rdx,QWORD PTR [rbp-0x18]
  42de74:	mov    QWORD PTR [rdx+0x28],rcx
  42de78:	mov    BYTE PTR [rax],0x2c
  42de7b:	mov    eax,DWORD PTR [rbp-0x28]
  42de7e:	movsxd rdx,eax
  42de81:	mov    rcx,QWORD PTR [rbp-0x30]
  42de85:	mov    rax,QWORD PTR [rbp-0x18]
  42de89:	mov    rsi,rcx
  42de8c:	mov    rdi,rax
  42de8f:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42de94:	mov    rax,QWORD PTR [rbp-0x18]
  42de98:	movzx  eax,BYTE PTR [rax+0x33]
  42de9c:	test   al,al
  42de9e:	je     42ded0 <flatcc_json_printer_int8_enum_field@@Base+0xfe>
  42dea0:	mov    rax,QWORD PTR [rbp-0x18]
  42dea4:	mov    rdx,QWORD PTR [rax+0x28]
  42dea8:	movsx  eax,BYTE PTR [rbp-0x9]
  42deac:	mov    rsi,rdx
  42deaf:	mov    edi,eax
  42deb1:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42deb6:	mov    ecx,eax
  42deb8:	mov    rax,QWORD PTR [rbp-0x18]
  42debc:	mov    rdx,QWORD PTR [rax+0x28]
  42dec0:	movsxd rax,ecx
  42dec3:	add    rdx,rax
  42dec6:	mov    rax,QWORD PTR [rbp-0x18]
  42deca:	mov    QWORD PTR [rax+0x28],rdx
  42dece:	jmp    42dee6 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  42ded0:	movsx  ecx,BYTE PTR [rbp-0x9]
  42ded4:	mov    rdx,QWORD PTR [rbp-0x18]
  42ded8:	mov    rax,QWORD PTR [rbp+0x10]
  42dedc:	mov    esi,ecx
  42dede:	mov    rdi,rdx
  42dee1:	call   rax
  42dee3:	jmp    42dee6 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  42dee5:	nop
  42dee6:	leave  
  42dee7:	ret    

000000000042dee8 <flatcc_json_printer_int16_enum_field@@Base>:
  42dee8:	push   rbp
  42dee9:	mov    rbp,rsp
  42deec:	sub    rsp,0x40
  42def0:	mov    QWORD PTR [rbp-0x18],rdi
  42def4:	mov    QWORD PTR [rbp-0x20],rsi
  42def8:	mov    DWORD PTR [rbp-0x24],edx
  42defb:	mov    QWORD PTR [rbp-0x30],rcx
  42deff:	mov    DWORD PTR [rbp-0x28],r8d
  42df03:	mov    eax,r9d
  42df06:	mov    WORD PTR [rbp-0x34],ax
  42df0a:	mov    edx,DWORD PTR [rbp-0x24]
  42df0d:	mov    rax,QWORD PTR [rbp-0x20]
  42df11:	mov    esi,edx
  42df13:	mov    rdi,rax
  42df16:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42df1b:	mov    QWORD PTR [rbp-0x8],rax
  42df1f:	cmp    QWORD PTR [rbp-0x8],0x0
  42df24:	je     42df51 <flatcc_json_printer_int16_enum_field@@Base+0x69>
  42df26:	mov    rax,QWORD PTR [rbp-0x8]
  42df2a:	mov    rdi,rax
  42df2d:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42df32:	mov    WORD PTR [rbp-0xa],ax
  42df36:	movzx  eax,WORD PTR [rbp-0xa]
  42df3a:	cmp    ax,WORD PTR [rbp-0x34]
  42df3e:	jne    42df69 <flatcc_json_printer_int16_enum_field@@Base+0x81>
  42df40:	mov    rax,QWORD PTR [rbp-0x18]
  42df44:	movzx  eax,BYTE PTR [rax+0x34]
  42df48:	test   al,al
  42df4a:	je     42df69 <flatcc_json_printer_int16_enum_field@@Base+0x81>
  42df4c:	jmp    42e000 <flatcc_json_printer_int16_enum_field@@Base+0x118>
  42df51:	mov    rax,QWORD PTR [rbp-0x18]
  42df55:	movzx  eax,BYTE PTR [rax+0x35]
  42df59:	test   al,al
  42df5b:	je     42dfff <flatcc_json_printer_int16_enum_field@@Base+0x117>
  42df61:	movzx  eax,WORD PTR [rbp-0x34]
  42df65:	mov    WORD PTR [rbp-0xa],ax
  42df69:	mov    rax,QWORD PTR [rbp-0x20]
  42df6d:	mov    eax,DWORD PTR [rax+0x18]
  42df70:	lea    ecx,[rax+0x1]
  42df73:	mov    rdx,QWORD PTR [rbp-0x20]
  42df77:	mov    DWORD PTR [rdx+0x18],ecx
  42df7a:	test   eax,eax
  42df7c:	je     42df95 <flatcc_json_printer_int16_enum_field@@Base+0xad>
  42df7e:	mov    rax,QWORD PTR [rbp-0x18]
  42df82:	mov    rax,QWORD PTR [rax+0x28]
  42df86:	lea    rcx,[rax+0x1]
  42df8a:	mov    rdx,QWORD PTR [rbp-0x18]
  42df8e:	mov    QWORD PTR [rdx+0x28],rcx
  42df92:	mov    BYTE PTR [rax],0x2c
  42df95:	mov    eax,DWORD PTR [rbp-0x28]
  42df98:	movsxd rdx,eax
  42df9b:	mov    rcx,QWORD PTR [rbp-0x30]
  42df9f:	mov    rax,QWORD PTR [rbp-0x18]
  42dfa3:	mov    rsi,rcx
  42dfa6:	mov    rdi,rax
  42dfa9:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42dfae:	mov    rax,QWORD PTR [rbp-0x18]
  42dfb2:	movzx  eax,BYTE PTR [rax+0x33]
  42dfb6:	test   al,al
  42dfb8:	je     42dfea <flatcc_json_printer_int16_enum_field@@Base+0x102>
  42dfba:	mov    rax,QWORD PTR [rbp-0x18]
  42dfbe:	mov    rdx,QWORD PTR [rax+0x28]
  42dfc2:	movsx  eax,WORD PTR [rbp-0xa]
  42dfc6:	mov    rsi,rdx
  42dfc9:	mov    edi,eax
  42dfcb:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42dfd0:	mov    ecx,eax
  42dfd2:	mov    rax,QWORD PTR [rbp-0x18]
  42dfd6:	mov    rdx,QWORD PTR [rax+0x28]
  42dfda:	movsxd rax,ecx
  42dfdd:	add    rdx,rax
  42dfe0:	mov    rax,QWORD PTR [rbp-0x18]
  42dfe4:	mov    QWORD PTR [rax+0x28],rdx
  42dfe8:	jmp    42e000 <flatcc_json_printer_int16_enum_field@@Base+0x118>
  42dfea:	movsx  ecx,WORD PTR [rbp-0xa]
  42dfee:	mov    rdx,QWORD PTR [rbp-0x18]
  42dff2:	mov    rax,QWORD PTR [rbp+0x10]
  42dff6:	mov    esi,ecx
  42dff8:	mov    rdi,rdx
  42dffb:	call   rax
  42dffd:	jmp    42e000 <flatcc_json_printer_int16_enum_field@@Base+0x118>
  42dfff:	nop
  42e000:	leave  
  42e001:	ret    

000000000042e002 <flatcc_json_printer_int32_enum_field@@Base>:
  42e002:	push   rbp
  42e003:	mov    rbp,rsp
  42e006:	sub    rsp,0x40
  42e00a:	mov    QWORD PTR [rbp-0x18],rdi
  42e00e:	mov    QWORD PTR [rbp-0x20],rsi
  42e012:	mov    DWORD PTR [rbp-0x24],edx
  42e015:	mov    QWORD PTR [rbp-0x30],rcx
  42e019:	mov    DWORD PTR [rbp-0x28],r8d
  42e01d:	mov    DWORD PTR [rbp-0x34],r9d
  42e021:	mov    edx,DWORD PTR [rbp-0x24]
  42e024:	mov    rax,QWORD PTR [rbp-0x20]
  42e028:	mov    esi,edx
  42e02a:	mov    rdi,rax
  42e02d:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42e032:	mov    QWORD PTR [rbp-0x8],rax
  42e036:	cmp    QWORD PTR [rbp-0x8],0x0
  42e03b:	je     42e065 <flatcc_json_printer_int32_enum_field@@Base+0x63>
  42e03d:	mov    rax,QWORD PTR [rbp-0x8]
  42e041:	mov    rdi,rax
  42e044:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42e049:	mov    DWORD PTR [rbp-0xc],eax
  42e04c:	mov    eax,DWORD PTR [rbp-0xc]
  42e04f:	cmp    eax,DWORD PTR [rbp-0x34]
  42e052:	jne    42e07b <flatcc_json_printer_int32_enum_field@@Base+0x79>
  42e054:	mov    rax,QWORD PTR [rbp-0x18]
  42e058:	movzx  eax,BYTE PTR [rax+0x34]
  42e05c:	test   al,al
  42e05e:	je     42e07b <flatcc_json_printer_int32_enum_field@@Base+0x79>
  42e060:	jmp    42e110 <flatcc_json_printer_int32_enum_field@@Base+0x10e>
  42e065:	mov    rax,QWORD PTR [rbp-0x18]
  42e069:	movzx  eax,BYTE PTR [rax+0x35]
  42e06d:	test   al,al
  42e06f:	je     42e10f <flatcc_json_printer_int32_enum_field@@Base+0x10d>
  42e075:	mov    eax,DWORD PTR [rbp-0x34]
  42e078:	mov    DWORD PTR [rbp-0xc],eax
  42e07b:	mov    rax,QWORD PTR [rbp-0x20]
  42e07f:	mov    eax,DWORD PTR [rax+0x18]
  42e082:	lea    ecx,[rax+0x1]
  42e085:	mov    rdx,QWORD PTR [rbp-0x20]
  42e089:	mov    DWORD PTR [rdx+0x18],ecx
  42e08c:	test   eax,eax
  42e08e:	je     42e0a7 <flatcc_json_printer_int32_enum_field@@Base+0xa5>
  42e090:	mov    rax,QWORD PTR [rbp-0x18]
  42e094:	mov    rax,QWORD PTR [rax+0x28]
  42e098:	lea    rcx,[rax+0x1]
  42e09c:	mov    rdx,QWORD PTR [rbp-0x18]
  42e0a0:	mov    QWORD PTR [rdx+0x28],rcx
  42e0a4:	mov    BYTE PTR [rax],0x2c
  42e0a7:	mov    eax,DWORD PTR [rbp-0x28]
  42e0aa:	movsxd rdx,eax
  42e0ad:	mov    rcx,QWORD PTR [rbp-0x30]
  42e0b1:	mov    rax,QWORD PTR [rbp-0x18]
  42e0b5:	mov    rsi,rcx
  42e0b8:	mov    rdi,rax
  42e0bb:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e0c0:	mov    rax,QWORD PTR [rbp-0x18]
  42e0c4:	movzx  eax,BYTE PTR [rax+0x33]
  42e0c8:	test   al,al
  42e0ca:	je     42e0fb <flatcc_json_printer_int32_enum_field@@Base+0xf9>
  42e0cc:	mov    rax,QWORD PTR [rbp-0x18]
  42e0d0:	mov    rdx,QWORD PTR [rax+0x28]
  42e0d4:	mov    eax,DWORD PTR [rbp-0xc]
  42e0d7:	mov    rsi,rdx
  42e0da:	mov    edi,eax
  42e0dc:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42e0e1:	mov    ecx,eax
  42e0e3:	mov    rax,QWORD PTR [rbp-0x18]
  42e0e7:	mov    rdx,QWORD PTR [rax+0x28]
  42e0eb:	movsxd rax,ecx
  42e0ee:	add    rdx,rax
  42e0f1:	mov    rax,QWORD PTR [rbp-0x18]
  42e0f5:	mov    QWORD PTR [rax+0x28],rdx
  42e0f9:	jmp    42e110 <flatcc_json_printer_int32_enum_field@@Base+0x10e>
  42e0fb:	mov    ecx,DWORD PTR [rbp-0xc]
  42e0fe:	mov    rdx,QWORD PTR [rbp-0x18]
  42e102:	mov    rax,QWORD PTR [rbp+0x10]
  42e106:	mov    esi,ecx
  42e108:	mov    rdi,rdx
  42e10b:	call   rax
  42e10d:	jmp    42e110 <flatcc_json_printer_int32_enum_field@@Base+0x10e>
  42e10f:	nop
  42e110:	leave  
  42e111:	ret    

000000000042e112 <flatcc_json_printer_int64_enum_field@@Base>:
  42e112:	push   rbp
  42e113:	mov    rbp,rsp
  42e116:	sub    rsp,0x40
  42e11a:	mov    QWORD PTR [rbp-0x18],rdi
  42e11e:	mov    QWORD PTR [rbp-0x20],rsi
  42e122:	mov    DWORD PTR [rbp-0x24],edx
  42e125:	mov    QWORD PTR [rbp-0x30],rcx
  42e129:	mov    DWORD PTR [rbp-0x28],r8d
  42e12d:	mov    QWORD PTR [rbp-0x38],r9
  42e131:	mov    edx,DWORD PTR [rbp-0x24]
  42e134:	mov    rax,QWORD PTR [rbp-0x20]
  42e138:	mov    esi,edx
  42e13a:	mov    rdi,rax
  42e13d:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42e142:	mov    QWORD PTR [rbp-0x8],rax
  42e146:	cmp    QWORD PTR [rbp-0x8],0x0
  42e14b:	je     42e178 <flatcc_json_printer_int64_enum_field@@Base+0x66>
  42e14d:	mov    rax,QWORD PTR [rbp-0x8]
  42e151:	mov    rdi,rax
  42e154:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  42e159:	mov    QWORD PTR [rbp-0x10],rax
  42e15d:	mov    rax,QWORD PTR [rbp-0x10]
  42e161:	cmp    rax,QWORD PTR [rbp-0x38]
  42e165:	jne    42e190 <flatcc_json_printer_int64_enum_field@@Base+0x7e>
  42e167:	mov    rax,QWORD PTR [rbp-0x18]
  42e16b:	movzx  eax,BYTE PTR [rax+0x34]
  42e16f:	test   al,al
  42e171:	je     42e190 <flatcc_json_printer_int64_enum_field@@Base+0x7e>
  42e173:	jmp    42e229 <flatcc_json_printer_int64_enum_field@@Base+0x117>
  42e178:	mov    rax,QWORD PTR [rbp-0x18]
  42e17c:	movzx  eax,BYTE PTR [rax+0x35]
  42e180:	test   al,al
  42e182:	je     42e228 <flatcc_json_printer_int64_enum_field@@Base+0x116>
  42e188:	mov    rax,QWORD PTR [rbp-0x38]
  42e18c:	mov    QWORD PTR [rbp-0x10],rax
  42e190:	mov    rax,QWORD PTR [rbp-0x20]
  42e194:	mov    eax,DWORD PTR [rax+0x18]
  42e197:	lea    ecx,[rax+0x1]
  42e19a:	mov    rdx,QWORD PTR [rbp-0x20]
  42e19e:	mov    DWORD PTR [rdx+0x18],ecx
  42e1a1:	test   eax,eax
  42e1a3:	je     42e1bc <flatcc_json_printer_int64_enum_field@@Base+0xaa>
  42e1a5:	mov    rax,QWORD PTR [rbp-0x18]
  42e1a9:	mov    rax,QWORD PTR [rax+0x28]
  42e1ad:	lea    rcx,[rax+0x1]
  42e1b1:	mov    rdx,QWORD PTR [rbp-0x18]
  42e1b5:	mov    QWORD PTR [rdx+0x28],rcx
  42e1b9:	mov    BYTE PTR [rax],0x2c
  42e1bc:	mov    eax,DWORD PTR [rbp-0x28]
  42e1bf:	movsxd rdx,eax
  42e1c2:	mov    rcx,QWORD PTR [rbp-0x30]
  42e1c6:	mov    rax,QWORD PTR [rbp-0x18]
  42e1ca:	mov    rsi,rcx
  42e1cd:	mov    rdi,rax
  42e1d0:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e1d5:	mov    rax,QWORD PTR [rbp-0x18]
  42e1d9:	movzx  eax,BYTE PTR [rax+0x33]
  42e1dd:	test   al,al
  42e1df:	je     42e212 <flatcc_json_printer_int64_enum_field@@Base+0x100>
  42e1e1:	mov    rax,QWORD PTR [rbp-0x18]
  42e1e5:	mov    rdx,QWORD PTR [rax+0x28]
  42e1e9:	mov    rax,QWORD PTR [rbp-0x10]
  42e1ed:	mov    rsi,rdx
  42e1f0:	mov    rdi,rax
  42e1f3:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42e1f8:	mov    ecx,eax
  42e1fa:	mov    rax,QWORD PTR [rbp-0x18]
  42e1fe:	mov    rdx,QWORD PTR [rax+0x28]
  42e202:	movsxd rax,ecx
  42e205:	add    rdx,rax
  42e208:	mov    rax,QWORD PTR [rbp-0x18]
  42e20c:	mov    QWORD PTR [rax+0x28],rdx
  42e210:	jmp    42e229 <flatcc_json_printer_int64_enum_field@@Base+0x117>
  42e212:	mov    rcx,QWORD PTR [rbp-0x10]
  42e216:	mov    rdx,QWORD PTR [rbp-0x18]
  42e21a:	mov    rax,QWORD PTR [rbp+0x10]
  42e21e:	mov    rsi,rcx
  42e221:	mov    rdi,rdx
  42e224:	call   rax
  42e226:	jmp    42e229 <flatcc_json_printer_int64_enum_field@@Base+0x117>
  42e228:	nop
  42e229:	leave  
  42e22a:	ret    

000000000042e22b <flatcc_json_printer_bool_enum_field@@Base>:
  42e22b:	push   rbp
  42e22c:	mov    rbp,rsp
  42e22f:	sub    rsp,0x40
  42e233:	mov    QWORD PTR [rbp-0x18],rdi
  42e237:	mov    QWORD PTR [rbp-0x20],rsi
  42e23b:	mov    DWORD PTR [rbp-0x24],edx
  42e23e:	mov    QWORD PTR [rbp-0x30],rcx
  42e242:	mov    DWORD PTR [rbp-0x28],r8d
  42e246:	mov    eax,r9d
  42e249:	mov    BYTE PTR [rbp-0x34],al
  42e24c:	mov    edx,DWORD PTR [rbp-0x24]
  42e24f:	mov    rax,QWORD PTR [rbp-0x20]
  42e253:	mov    esi,edx
  42e255:	mov    rdi,rax
  42e258:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42e25d:	mov    QWORD PTR [rbp-0x8],rax
  42e261:	cmp    QWORD PTR [rbp-0x8],0x0
  42e266:	je     42e291 <flatcc_json_printer_bool_enum_field@@Base+0x66>
  42e268:	mov    rax,QWORD PTR [rbp-0x8]
  42e26c:	mov    rdi,rax
  42e26f:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  42e274:	mov    BYTE PTR [rbp-0x9],al
  42e277:	movzx  eax,BYTE PTR [rbp-0x9]
  42e27b:	cmp    al,BYTE PTR [rbp-0x34]
  42e27e:	jne    42e2a8 <flatcc_json_printer_bool_enum_field@@Base+0x7d>
  42e280:	mov    rax,QWORD PTR [rbp-0x18]
  42e284:	movzx  eax,BYTE PTR [rax+0x34]
  42e288:	test   al,al
  42e28a:	je     42e2a8 <flatcc_json_printer_bool_enum_field@@Base+0x7d>
  42e28c:	jmp    42e33f <flatcc_json_printer_bool_enum_field@@Base+0x114>
  42e291:	mov    rax,QWORD PTR [rbp-0x18]
  42e295:	movzx  eax,BYTE PTR [rax+0x35]
  42e299:	test   al,al
  42e29b:	je     42e33e <flatcc_json_printer_bool_enum_field@@Base+0x113>
  42e2a1:	movzx  eax,BYTE PTR [rbp-0x34]
  42e2a5:	mov    BYTE PTR [rbp-0x9],al
  42e2a8:	mov    rax,QWORD PTR [rbp-0x20]
  42e2ac:	mov    eax,DWORD PTR [rax+0x18]
  42e2af:	lea    ecx,[rax+0x1]
  42e2b2:	mov    rdx,QWORD PTR [rbp-0x20]
  42e2b6:	mov    DWORD PTR [rdx+0x18],ecx
  42e2b9:	test   eax,eax
  42e2bb:	je     42e2d4 <flatcc_json_printer_bool_enum_field@@Base+0xa9>
  42e2bd:	mov    rax,QWORD PTR [rbp-0x18]
  42e2c1:	mov    rax,QWORD PTR [rax+0x28]
  42e2c5:	lea    rcx,[rax+0x1]
  42e2c9:	mov    rdx,QWORD PTR [rbp-0x18]
  42e2cd:	mov    QWORD PTR [rdx+0x28],rcx
  42e2d1:	mov    BYTE PTR [rax],0x2c
  42e2d4:	mov    eax,DWORD PTR [rbp-0x28]
  42e2d7:	movsxd rdx,eax
  42e2da:	mov    rcx,QWORD PTR [rbp-0x30]
  42e2de:	mov    rax,QWORD PTR [rbp-0x18]
  42e2e2:	mov    rsi,rcx
  42e2e5:	mov    rdi,rax
  42e2e8:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e2ed:	mov    rax,QWORD PTR [rbp-0x18]
  42e2f1:	movzx  eax,BYTE PTR [rax+0x33]
  42e2f5:	test   al,al
  42e2f7:	je     42e329 <flatcc_json_printer_bool_enum_field@@Base+0xfe>
  42e2f9:	mov    rax,QWORD PTR [rbp-0x18]
  42e2fd:	mov    rdx,QWORD PTR [rax+0x28]
  42e301:	movzx  eax,BYTE PTR [rbp-0x9]
  42e305:	mov    rsi,rdx
  42e308:	mov    edi,eax
  42e30a:	call   428b85 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42e30f:	mov    ecx,eax
  42e311:	mov    rax,QWORD PTR [rbp-0x18]
  42e315:	mov    rdx,QWORD PTR [rax+0x28]
  42e319:	movsxd rax,ecx
  42e31c:	add    rdx,rax
  42e31f:	mov    rax,QWORD PTR [rbp-0x18]
  42e323:	mov    QWORD PTR [rax+0x28],rdx
  42e327:	jmp    42e33f <flatcc_json_printer_bool_enum_field@@Base+0x114>
  42e329:	movzx  ecx,BYTE PTR [rbp-0x9]
  42e32d:	mov    rdx,QWORD PTR [rbp-0x18]
  42e331:	mov    rax,QWORD PTR [rbp+0x10]
  42e335:	mov    esi,ecx
  42e337:	mov    rdi,rdx
  42e33a:	call   rax
  42e33c:	jmp    42e33f <flatcc_json_printer_bool_enum_field@@Base+0x114>
  42e33e:	nop
  42e33f:	leave  
  42e340:	ret    

000000000042e341 <flatcc_json_printer_uint8_struct_field@@Base>:
  42e341:	push   rbp
  42e342:	mov    rbp,rsp
  42e345:	sub    rsp,0x40
  42e349:	mov    QWORD PTR [rbp-0x18],rdi
  42e34d:	mov    DWORD PTR [rbp-0x1c],esi
  42e350:	mov    QWORD PTR [rbp-0x28],rdx
  42e354:	mov    QWORD PTR [rbp-0x30],rcx
  42e358:	mov    QWORD PTR [rbp-0x38],r8
  42e35c:	mov    DWORD PTR [rbp-0x20],r9d
  42e360:	mov    rdx,QWORD PTR [rbp-0x28]
  42e364:	mov    rax,QWORD PTR [rbp-0x30]
  42e368:	add    rax,rdx
  42e36b:	mov    rdi,rax
  42e36e:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  42e373:	mov    BYTE PTR [rbp-0x1],al
  42e376:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e37a:	je     42e393 <flatcc_json_printer_uint8_struct_field@@Base+0x52>
  42e37c:	mov    rax,QWORD PTR [rbp-0x18]
  42e380:	mov    rax,QWORD PTR [rax+0x28]
  42e384:	lea    rcx,[rax+0x1]
  42e388:	mov    rdx,QWORD PTR [rbp-0x18]
  42e38c:	mov    QWORD PTR [rdx+0x28],rcx
  42e390:	mov    BYTE PTR [rax],0x2c
  42e393:	mov    eax,DWORD PTR [rbp-0x20]
  42e396:	movsxd rdx,eax
  42e399:	mov    rcx,QWORD PTR [rbp-0x38]
  42e39d:	mov    rax,QWORD PTR [rbp-0x18]
  42e3a1:	mov    rsi,rcx
  42e3a4:	mov    rdi,rax
  42e3a7:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e3ac:	mov    rax,QWORD PTR [rbp-0x18]
  42e3b0:	mov    rdx,QWORD PTR [rax+0x28]
  42e3b4:	movzx  eax,BYTE PTR [rbp-0x1]
  42e3b8:	mov    rsi,rdx
  42e3bb:	mov    edi,eax
  42e3bd:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42e3c2:	mov    ecx,eax
  42e3c4:	mov    rax,QWORD PTR [rbp-0x18]
  42e3c8:	mov    rdx,QWORD PTR [rax+0x28]
  42e3cc:	movsxd rax,ecx
  42e3cf:	add    rdx,rax
  42e3d2:	mov    rax,QWORD PTR [rbp-0x18]
  42e3d6:	mov    QWORD PTR [rax+0x28],rdx
  42e3da:	nop
  42e3db:	leave  
  42e3dc:	ret    

000000000042e3dd <flatcc_json_printer_uint16_struct_field@@Base>:
  42e3dd:	push   rbp
  42e3de:	mov    rbp,rsp
  42e3e1:	sub    rsp,0x40
  42e3e5:	mov    QWORD PTR [rbp-0x18],rdi
  42e3e9:	mov    DWORD PTR [rbp-0x1c],esi
  42e3ec:	mov    QWORD PTR [rbp-0x28],rdx
  42e3f0:	mov    QWORD PTR [rbp-0x30],rcx
  42e3f4:	mov    QWORD PTR [rbp-0x38],r8
  42e3f8:	mov    DWORD PTR [rbp-0x20],r9d
  42e3fc:	mov    rdx,QWORD PTR [rbp-0x28]
  42e400:	mov    rax,QWORD PTR [rbp-0x30]
  42e404:	add    rax,rdx
  42e407:	mov    rdi,rax
  42e40a:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  42e40f:	mov    WORD PTR [rbp-0x2],ax
  42e413:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e417:	je     42e430 <flatcc_json_printer_uint16_struct_field@@Base+0x53>
  42e419:	mov    rax,QWORD PTR [rbp-0x18]
  42e41d:	mov    rax,QWORD PTR [rax+0x28]
  42e421:	lea    rcx,[rax+0x1]
  42e425:	mov    rdx,QWORD PTR [rbp-0x18]
  42e429:	mov    QWORD PTR [rdx+0x28],rcx
  42e42d:	mov    BYTE PTR [rax],0x2c
  42e430:	mov    eax,DWORD PTR [rbp-0x20]
  42e433:	movsxd rdx,eax
  42e436:	mov    rcx,QWORD PTR [rbp-0x38]
  42e43a:	mov    rax,QWORD PTR [rbp-0x18]
  42e43e:	mov    rsi,rcx
  42e441:	mov    rdi,rax
  42e444:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e449:	mov    rax,QWORD PTR [rbp-0x18]
  42e44d:	mov    rdx,QWORD PTR [rax+0x28]
  42e451:	movzx  eax,WORD PTR [rbp-0x2]
  42e455:	mov    rsi,rdx
  42e458:	mov    edi,eax
  42e45a:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42e45f:	mov    ecx,eax
  42e461:	mov    rax,QWORD PTR [rbp-0x18]
  42e465:	mov    rdx,QWORD PTR [rax+0x28]
  42e469:	movsxd rax,ecx
  42e46c:	add    rdx,rax
  42e46f:	mov    rax,QWORD PTR [rbp-0x18]
  42e473:	mov    QWORD PTR [rax+0x28],rdx
  42e477:	nop
  42e478:	leave  
  42e479:	ret    

000000000042e47a <flatcc_json_printer_uint32_struct_field@@Base>:
  42e47a:	push   rbp
  42e47b:	mov    rbp,rsp
  42e47e:	sub    rsp,0x40
  42e482:	mov    QWORD PTR [rbp-0x18],rdi
  42e486:	mov    DWORD PTR [rbp-0x1c],esi
  42e489:	mov    QWORD PTR [rbp-0x28],rdx
  42e48d:	mov    QWORD PTR [rbp-0x30],rcx
  42e491:	mov    QWORD PTR [rbp-0x38],r8
  42e495:	mov    DWORD PTR [rbp-0x20],r9d
  42e499:	mov    rdx,QWORD PTR [rbp-0x28]
  42e49d:	mov    rax,QWORD PTR [rbp-0x30]
  42e4a1:	add    rax,rdx
  42e4a4:	mov    rdi,rax
  42e4a7:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42e4ac:	mov    DWORD PTR [rbp-0x4],eax
  42e4af:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e4b3:	je     42e4cc <flatcc_json_printer_uint32_struct_field@@Base+0x52>
  42e4b5:	mov    rax,QWORD PTR [rbp-0x18]
  42e4b9:	mov    rax,QWORD PTR [rax+0x28]
  42e4bd:	lea    rcx,[rax+0x1]
  42e4c1:	mov    rdx,QWORD PTR [rbp-0x18]
  42e4c5:	mov    QWORD PTR [rdx+0x28],rcx
  42e4c9:	mov    BYTE PTR [rax],0x2c
  42e4cc:	mov    eax,DWORD PTR [rbp-0x20]
  42e4cf:	movsxd rdx,eax
  42e4d2:	mov    rcx,QWORD PTR [rbp-0x38]
  42e4d6:	mov    rax,QWORD PTR [rbp-0x18]
  42e4da:	mov    rsi,rcx
  42e4dd:	mov    rdi,rax
  42e4e0:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e4e5:	mov    rax,QWORD PTR [rbp-0x18]
  42e4e9:	mov    rdx,QWORD PTR [rax+0x28]
  42e4ed:	mov    eax,DWORD PTR [rbp-0x4]
  42e4f0:	mov    rsi,rdx
  42e4f3:	mov    edi,eax
  42e4f5:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42e4fa:	mov    ecx,eax
  42e4fc:	mov    rax,QWORD PTR [rbp-0x18]
  42e500:	mov    rdx,QWORD PTR [rax+0x28]
  42e504:	movsxd rax,ecx
  42e507:	add    rdx,rax
  42e50a:	mov    rax,QWORD PTR [rbp-0x18]
  42e50e:	mov    QWORD PTR [rax+0x28],rdx
  42e512:	nop
  42e513:	leave  
  42e514:	ret    

000000000042e515 <flatcc_json_printer_uint64_struct_field@@Base>:
  42e515:	push   rbp
  42e516:	mov    rbp,rsp
  42e519:	sub    rsp,0x40
  42e51d:	mov    QWORD PTR [rbp-0x18],rdi
  42e521:	mov    DWORD PTR [rbp-0x1c],esi
  42e524:	mov    QWORD PTR [rbp-0x28],rdx
  42e528:	mov    QWORD PTR [rbp-0x30],rcx
  42e52c:	mov    QWORD PTR [rbp-0x38],r8
  42e530:	mov    DWORD PTR [rbp-0x20],r9d
  42e534:	mov    rdx,QWORD PTR [rbp-0x28]
  42e538:	mov    rax,QWORD PTR [rbp-0x30]
  42e53c:	add    rax,rdx
  42e53f:	mov    rdi,rax
  42e542:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42e547:	mov    QWORD PTR [rbp-0x8],rax
  42e54b:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e54f:	je     42e568 <flatcc_json_printer_uint64_struct_field@@Base+0x53>
  42e551:	mov    rax,QWORD PTR [rbp-0x18]
  42e555:	mov    rax,QWORD PTR [rax+0x28]
  42e559:	lea    rcx,[rax+0x1]
  42e55d:	mov    rdx,QWORD PTR [rbp-0x18]
  42e561:	mov    QWORD PTR [rdx+0x28],rcx
  42e565:	mov    BYTE PTR [rax],0x2c
  42e568:	mov    eax,DWORD PTR [rbp-0x20]
  42e56b:	movsxd rdx,eax
  42e56e:	mov    rcx,QWORD PTR [rbp-0x38]
  42e572:	mov    rax,QWORD PTR [rbp-0x18]
  42e576:	mov    rsi,rcx
  42e579:	mov    rdi,rax
  42e57c:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e581:	mov    rax,QWORD PTR [rbp-0x18]
  42e585:	mov    rdx,QWORD PTR [rax+0x28]
  42e589:	mov    rax,QWORD PTR [rbp-0x8]
  42e58d:	mov    rsi,rdx
  42e590:	mov    rdi,rax
  42e593:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42e598:	mov    ecx,eax
  42e59a:	mov    rax,QWORD PTR [rbp-0x18]
  42e59e:	mov    rdx,QWORD PTR [rax+0x28]
  42e5a2:	movsxd rax,ecx
  42e5a5:	add    rdx,rax
  42e5a8:	mov    rax,QWORD PTR [rbp-0x18]
  42e5ac:	mov    QWORD PTR [rax+0x28],rdx
  42e5b0:	nop
  42e5b1:	leave  
  42e5b2:	ret    

000000000042e5b3 <flatcc_json_printer_int8_struct_field@@Base>:
  42e5b3:	push   rbp
  42e5b4:	mov    rbp,rsp
  42e5b7:	sub    rsp,0x40
  42e5bb:	mov    QWORD PTR [rbp-0x18],rdi
  42e5bf:	mov    DWORD PTR [rbp-0x1c],esi
  42e5c2:	mov    QWORD PTR [rbp-0x28],rdx
  42e5c6:	mov    QWORD PTR [rbp-0x30],rcx
  42e5ca:	mov    QWORD PTR [rbp-0x38],r8
  42e5ce:	mov    DWORD PTR [rbp-0x20],r9d
  42e5d2:	mov    rdx,QWORD PTR [rbp-0x28]
  42e5d6:	mov    rax,QWORD PTR [rbp-0x30]
  42e5da:	add    rax,rdx
  42e5dd:	mov    rdi,rax
  42e5e0:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  42e5e5:	mov    BYTE PTR [rbp-0x1],al
  42e5e8:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e5ec:	je     42e605 <flatcc_json_printer_int8_struct_field@@Base+0x52>
  42e5ee:	mov    rax,QWORD PTR [rbp-0x18]
  42e5f2:	mov    rax,QWORD PTR [rax+0x28]
  42e5f6:	lea    rcx,[rax+0x1]
  42e5fa:	mov    rdx,QWORD PTR [rbp-0x18]
  42e5fe:	mov    QWORD PTR [rdx+0x28],rcx
  42e602:	mov    BYTE PTR [rax],0x2c
  42e605:	mov    eax,DWORD PTR [rbp-0x20]
  42e608:	movsxd rdx,eax
  42e60b:	mov    rcx,QWORD PTR [rbp-0x38]
  42e60f:	mov    rax,QWORD PTR [rbp-0x18]
  42e613:	mov    rsi,rcx
  42e616:	mov    rdi,rax
  42e619:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e61e:	mov    rax,QWORD PTR [rbp-0x18]
  42e622:	mov    rdx,QWORD PTR [rax+0x28]
  42e626:	movsx  eax,BYTE PTR [rbp-0x1]
  42e62a:	mov    rsi,rdx
  42e62d:	mov    edi,eax
  42e62f:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42e634:	mov    ecx,eax
  42e636:	mov    rax,QWORD PTR [rbp-0x18]
  42e63a:	mov    rdx,QWORD PTR [rax+0x28]
  42e63e:	movsxd rax,ecx
  42e641:	add    rdx,rax
  42e644:	mov    rax,QWORD PTR [rbp-0x18]
  42e648:	mov    QWORD PTR [rax+0x28],rdx
  42e64c:	nop
  42e64d:	leave  
  42e64e:	ret    

000000000042e64f <flatcc_json_printer_int16_struct_field@@Base>:
  42e64f:	push   rbp
  42e650:	mov    rbp,rsp
  42e653:	sub    rsp,0x40
  42e657:	mov    QWORD PTR [rbp-0x18],rdi
  42e65b:	mov    DWORD PTR [rbp-0x1c],esi
  42e65e:	mov    QWORD PTR [rbp-0x28],rdx
  42e662:	mov    QWORD PTR [rbp-0x30],rcx
  42e666:	mov    QWORD PTR [rbp-0x38],r8
  42e66a:	mov    DWORD PTR [rbp-0x20],r9d
  42e66e:	mov    rdx,QWORD PTR [rbp-0x28]
  42e672:	mov    rax,QWORD PTR [rbp-0x30]
  42e676:	add    rax,rdx
  42e679:	mov    rdi,rax
  42e67c:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42e681:	mov    WORD PTR [rbp-0x2],ax
  42e685:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e689:	je     42e6a2 <flatcc_json_printer_int16_struct_field@@Base+0x53>
  42e68b:	mov    rax,QWORD PTR [rbp-0x18]
  42e68f:	mov    rax,QWORD PTR [rax+0x28]
  42e693:	lea    rcx,[rax+0x1]
  42e697:	mov    rdx,QWORD PTR [rbp-0x18]
  42e69b:	mov    QWORD PTR [rdx+0x28],rcx
  42e69f:	mov    BYTE PTR [rax],0x2c
  42e6a2:	mov    eax,DWORD PTR [rbp-0x20]
  42e6a5:	movsxd rdx,eax
  42e6a8:	mov    rcx,QWORD PTR [rbp-0x38]
  42e6ac:	mov    rax,QWORD PTR [rbp-0x18]
  42e6b0:	mov    rsi,rcx
  42e6b3:	mov    rdi,rax
  42e6b6:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e6bb:	mov    rax,QWORD PTR [rbp-0x18]
  42e6bf:	mov    rdx,QWORD PTR [rax+0x28]
  42e6c3:	movsx  eax,WORD PTR [rbp-0x2]
  42e6c7:	mov    rsi,rdx
  42e6ca:	mov    edi,eax
  42e6cc:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42e6d1:	mov    ecx,eax
  42e6d3:	mov    rax,QWORD PTR [rbp-0x18]
  42e6d7:	mov    rdx,QWORD PTR [rax+0x28]
  42e6db:	movsxd rax,ecx
  42e6de:	add    rdx,rax
  42e6e1:	mov    rax,QWORD PTR [rbp-0x18]
  42e6e5:	mov    QWORD PTR [rax+0x28],rdx
  42e6e9:	nop
  42e6ea:	leave  
  42e6eb:	ret    

000000000042e6ec <flatcc_json_printer_int32_struct_field@@Base>:
  42e6ec:	push   rbp
  42e6ed:	mov    rbp,rsp
  42e6f0:	sub    rsp,0x40
  42e6f4:	mov    QWORD PTR [rbp-0x18],rdi
  42e6f8:	mov    DWORD PTR [rbp-0x1c],esi
  42e6fb:	mov    QWORD PTR [rbp-0x28],rdx
  42e6ff:	mov    QWORD PTR [rbp-0x30],rcx
  42e703:	mov    QWORD PTR [rbp-0x38],r8
  42e707:	mov    DWORD PTR [rbp-0x20],r9d
  42e70b:	mov    rdx,QWORD PTR [rbp-0x28]
  42e70f:	mov    rax,QWORD PTR [rbp-0x30]
  42e713:	add    rax,rdx
  42e716:	mov    rdi,rax
  42e719:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42e71e:	mov    DWORD PTR [rbp-0x4],eax
  42e721:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e725:	je     42e73e <flatcc_json_printer_int32_struct_field@@Base+0x52>
  42e727:	mov    rax,QWORD PTR [rbp-0x18]
  42e72b:	mov    rax,QWORD PTR [rax+0x28]
  42e72f:	lea    rcx,[rax+0x1]
  42e733:	mov    rdx,QWORD PTR [rbp-0x18]
  42e737:	mov    QWORD PTR [rdx+0x28],rcx
  42e73b:	mov    BYTE PTR [rax],0x2c
  42e73e:	mov    eax,DWORD PTR [rbp-0x20]
  42e741:	movsxd rdx,eax
  42e744:	mov    rcx,QWORD PTR [rbp-0x38]
  42e748:	mov    rax,QWORD PTR [rbp-0x18]
  42e74c:	mov    rsi,rcx
  42e74f:	mov    rdi,rax
  42e752:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e757:	mov    rax,QWORD PTR [rbp-0x18]
  42e75b:	mov    rdx,QWORD PTR [rax+0x28]
  42e75f:	mov    eax,DWORD PTR [rbp-0x4]
  42e762:	mov    rsi,rdx
  42e765:	mov    edi,eax
  42e767:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42e76c:	mov    ecx,eax
  42e76e:	mov    rax,QWORD PTR [rbp-0x18]
  42e772:	mov    rdx,QWORD PTR [rax+0x28]
  42e776:	movsxd rax,ecx
  42e779:	add    rdx,rax
  42e77c:	mov    rax,QWORD PTR [rbp-0x18]
  42e780:	mov    QWORD PTR [rax+0x28],rdx
  42e784:	nop
  42e785:	leave  
  42e786:	ret    

000000000042e787 <flatcc_json_printer_int64_struct_field@@Base>:
  42e787:	push   rbp
  42e788:	mov    rbp,rsp
  42e78b:	sub    rsp,0x40
  42e78f:	mov    QWORD PTR [rbp-0x18],rdi
  42e793:	mov    DWORD PTR [rbp-0x1c],esi
  42e796:	mov    QWORD PTR [rbp-0x28],rdx
  42e79a:	mov    QWORD PTR [rbp-0x30],rcx
  42e79e:	mov    QWORD PTR [rbp-0x38],r8
  42e7a2:	mov    DWORD PTR [rbp-0x20],r9d
  42e7a6:	mov    rdx,QWORD PTR [rbp-0x28]
  42e7aa:	mov    rax,QWORD PTR [rbp-0x30]
  42e7ae:	add    rax,rdx
  42e7b1:	mov    rdi,rax
  42e7b4:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  42e7b9:	mov    QWORD PTR [rbp-0x8],rax
  42e7bd:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e7c1:	je     42e7da <flatcc_json_printer_int64_struct_field@@Base+0x53>
  42e7c3:	mov    rax,QWORD PTR [rbp-0x18]
  42e7c7:	mov    rax,QWORD PTR [rax+0x28]
  42e7cb:	lea    rcx,[rax+0x1]
  42e7cf:	mov    rdx,QWORD PTR [rbp-0x18]
  42e7d3:	mov    QWORD PTR [rdx+0x28],rcx
  42e7d7:	mov    BYTE PTR [rax],0x2c
  42e7da:	mov    eax,DWORD PTR [rbp-0x20]
  42e7dd:	movsxd rdx,eax
  42e7e0:	mov    rcx,QWORD PTR [rbp-0x38]
  42e7e4:	mov    rax,QWORD PTR [rbp-0x18]
  42e7e8:	mov    rsi,rcx
  42e7eb:	mov    rdi,rax
  42e7ee:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e7f3:	mov    rax,QWORD PTR [rbp-0x18]
  42e7f7:	mov    rdx,QWORD PTR [rax+0x28]
  42e7fb:	mov    rax,QWORD PTR [rbp-0x8]
  42e7ff:	mov    rsi,rdx
  42e802:	mov    rdi,rax
  42e805:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42e80a:	mov    ecx,eax
  42e80c:	mov    rax,QWORD PTR [rbp-0x18]
  42e810:	mov    rdx,QWORD PTR [rax+0x28]
  42e814:	movsxd rax,ecx
  42e817:	add    rdx,rax
  42e81a:	mov    rax,QWORD PTR [rbp-0x18]
  42e81e:	mov    QWORD PTR [rax+0x28],rdx
  42e822:	nop
  42e823:	leave  
  42e824:	ret    

000000000042e825 <flatcc_json_printer_bool_struct_field@@Base>:
  42e825:	push   rbp
  42e826:	mov    rbp,rsp
  42e829:	sub    rsp,0x40
  42e82d:	mov    QWORD PTR [rbp-0x18],rdi
  42e831:	mov    DWORD PTR [rbp-0x1c],esi
  42e834:	mov    QWORD PTR [rbp-0x28],rdx
  42e838:	mov    QWORD PTR [rbp-0x30],rcx
  42e83c:	mov    QWORD PTR [rbp-0x38],r8
  42e840:	mov    DWORD PTR [rbp-0x20],r9d
  42e844:	mov    rdx,QWORD PTR [rbp-0x28]
  42e848:	mov    rax,QWORD PTR [rbp-0x30]
  42e84c:	add    rax,rdx
  42e84f:	mov    rdi,rax
  42e852:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  42e857:	mov    BYTE PTR [rbp-0x1],al
  42e85a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e85e:	je     42e877 <flatcc_json_printer_bool_struct_field@@Base+0x52>
  42e860:	mov    rax,QWORD PTR [rbp-0x18]
  42e864:	mov    rax,QWORD PTR [rax+0x28]
  42e868:	lea    rcx,[rax+0x1]
  42e86c:	mov    rdx,QWORD PTR [rbp-0x18]
  42e870:	mov    QWORD PTR [rdx+0x28],rcx
  42e874:	mov    BYTE PTR [rax],0x2c
  42e877:	mov    eax,DWORD PTR [rbp-0x20]
  42e87a:	movsxd rdx,eax
  42e87d:	mov    rcx,QWORD PTR [rbp-0x38]
  42e881:	mov    rax,QWORD PTR [rbp-0x18]
  42e885:	mov    rsi,rcx
  42e888:	mov    rdi,rax
  42e88b:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e890:	mov    rax,QWORD PTR [rbp-0x18]
  42e894:	mov    rdx,QWORD PTR [rax+0x28]
  42e898:	movzx  eax,BYTE PTR [rbp-0x1]
  42e89c:	mov    rsi,rdx
  42e89f:	mov    edi,eax
  42e8a1:	call   428b85 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42e8a6:	mov    ecx,eax
  42e8a8:	mov    rax,QWORD PTR [rbp-0x18]
  42e8ac:	mov    rdx,QWORD PTR [rax+0x28]
  42e8b0:	movsxd rax,ecx
  42e8b3:	add    rdx,rax
  42e8b6:	mov    rax,QWORD PTR [rbp-0x18]
  42e8ba:	mov    QWORD PTR [rax+0x28],rdx
  42e8be:	nop
  42e8bf:	leave  
  42e8c0:	ret    

000000000042e8c1 <flatcc_json_printer_float_struct_field@@Base>:
  42e8c1:	push   rbp
  42e8c2:	mov    rbp,rsp
  42e8c5:	sub    rsp,0x40
  42e8c9:	mov    QWORD PTR [rbp-0x18],rdi
  42e8cd:	mov    DWORD PTR [rbp-0x1c],esi
  42e8d0:	mov    QWORD PTR [rbp-0x28],rdx
  42e8d4:	mov    QWORD PTR [rbp-0x30],rcx
  42e8d8:	mov    QWORD PTR [rbp-0x38],r8
  42e8dc:	mov    DWORD PTR [rbp-0x20],r9d
  42e8e0:	mov    rdx,QWORD PTR [rbp-0x28]
  42e8e4:	mov    rax,QWORD PTR [rbp-0x30]
  42e8e8:	add    rax,rdx
  42e8eb:	mov    rdi,rax
  42e8ee:	call   428997 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  42e8f3:	vmovd  eax,xmm0
  42e8f7:	mov    DWORD PTR [rbp-0x4],eax
  42e8fa:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e8fe:	je     42e917 <flatcc_json_printer_float_struct_field@@Base+0x56>
  42e900:	mov    rax,QWORD PTR [rbp-0x18]
  42e904:	mov    rax,QWORD PTR [rax+0x28]
  42e908:	lea    rcx,[rax+0x1]
  42e90c:	mov    rdx,QWORD PTR [rbp-0x18]
  42e910:	mov    QWORD PTR [rdx+0x28],rcx
  42e914:	mov    BYTE PTR [rax],0x2c
  42e917:	mov    eax,DWORD PTR [rbp-0x20]
  42e91a:	movsxd rdx,eax
  42e91d:	mov    rcx,QWORD PTR [rbp-0x38]
  42e921:	mov    rax,QWORD PTR [rbp-0x18]
  42e925:	mov    rsi,rcx
  42e928:	mov    rdi,rax
  42e92b:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e930:	mov    rax,QWORD PTR [rbp-0x18]
  42e934:	mov    rax,QWORD PTR [rax+0x28]
  42e938:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  42e93d:	mov    rdi,rax
  42e940:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42e945:	mov    ecx,eax
  42e947:	mov    rax,QWORD PTR [rbp-0x18]
  42e94b:	mov    rdx,QWORD PTR [rax+0x28]
  42e94f:	movsxd rax,ecx
  42e952:	add    rdx,rax
  42e955:	mov    rax,QWORD PTR [rbp-0x18]
  42e959:	mov    QWORD PTR [rax+0x28],rdx
  42e95d:	nop
  42e95e:	leave  
  42e95f:	ret    

000000000042e960 <flatcc_json_printer_double_struct_field@@Base>:
  42e960:	push   rbp
  42e961:	mov    rbp,rsp
  42e964:	sub    rsp,0x40
  42e968:	mov    QWORD PTR [rbp-0x18],rdi
  42e96c:	mov    DWORD PTR [rbp-0x1c],esi
  42e96f:	mov    QWORD PTR [rbp-0x28],rdx
  42e973:	mov    QWORD PTR [rbp-0x30],rcx
  42e977:	mov    QWORD PTR [rbp-0x38],r8
  42e97b:	mov    DWORD PTR [rbp-0x20],r9d
  42e97f:	mov    rdx,QWORD PTR [rbp-0x28]
  42e983:	mov    rax,QWORD PTR [rbp-0x30]
  42e987:	add    rax,rdx
  42e98a:	mov    rdi,rax
  42e98d:	call   4289da <flatcc_json_parser_struct_as_root@@Base+0x302>
  42e992:	vmovq  rax,xmm0
  42e997:	mov    QWORD PTR [rbp-0x8],rax
  42e99b:	cmp    DWORD PTR [rbp-0x1c],0x0
  42e99f:	je     42e9b8 <flatcc_json_printer_double_struct_field@@Base+0x58>
  42e9a1:	mov    rax,QWORD PTR [rbp-0x18]
  42e9a5:	mov    rax,QWORD PTR [rax+0x28]
  42e9a9:	lea    rcx,[rax+0x1]
  42e9ad:	mov    rdx,QWORD PTR [rbp-0x18]
  42e9b1:	mov    QWORD PTR [rdx+0x28],rcx
  42e9b5:	mov    BYTE PTR [rax],0x2c
  42e9b8:	mov    eax,DWORD PTR [rbp-0x20]
  42e9bb:	movsxd rdx,eax
  42e9be:	mov    rcx,QWORD PTR [rbp-0x38]
  42e9c2:	mov    rax,QWORD PTR [rbp-0x18]
  42e9c6:	mov    rsi,rcx
  42e9c9:	mov    rdi,rax
  42e9cc:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42e9d1:	mov    rax,QWORD PTR [rbp-0x18]
  42e9d5:	mov    rdx,QWORD PTR [rax+0x28]
  42e9d9:	mov    rax,QWORD PTR [rbp-0x8]
  42e9dd:	mov    rdi,rdx
  42e9e0:	mov    QWORD PTR [rbp-0x40],rax
  42e9e4:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  42e9e9:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  42e9ee:	mov    ecx,eax
  42e9f0:	mov    rax,QWORD PTR [rbp-0x18]
  42e9f4:	mov    rdx,QWORD PTR [rax+0x28]
  42e9f8:	movsxd rax,ecx
  42e9fb:	add    rdx,rax
  42e9fe:	mov    rax,QWORD PTR [rbp-0x18]
  42ea02:	mov    QWORD PTR [rax+0x28],rdx
  42ea06:	nop
  42ea07:	leave  
  42ea08:	ret    

000000000042ea09 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  42ea09:	push   rbp
  42ea0a:	mov    rbp,rsp
  42ea0d:	sub    rsp,0x40
  42ea11:	mov    QWORD PTR [rbp-0x18],rdi
  42ea15:	mov    DWORD PTR [rbp-0x1c],esi
  42ea18:	mov    QWORD PTR [rbp-0x28],rdx
  42ea1c:	mov    QWORD PTR [rbp-0x30],rcx
  42ea20:	mov    QWORD PTR [rbp-0x38],r8
  42ea24:	mov    DWORD PTR [rbp-0x20],r9d
  42ea28:	mov    rdx,QWORD PTR [rbp-0x28]
  42ea2c:	mov    rax,QWORD PTR [rbp-0x30]
  42ea30:	add    rax,rdx
  42ea33:	mov    rdi,rax
  42ea36:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  42ea3b:	mov    BYTE PTR [rbp-0x1],al
  42ea3e:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ea42:	je     42ea5b <flatcc_json_printer_uint8_enum_struct_field@@Base+0x52>
  42ea44:	mov    rax,QWORD PTR [rbp-0x18]
  42ea48:	mov    rax,QWORD PTR [rax+0x28]
  42ea4c:	lea    rcx,[rax+0x1]
  42ea50:	mov    rdx,QWORD PTR [rbp-0x18]
  42ea54:	mov    QWORD PTR [rdx+0x28],rcx
  42ea58:	mov    BYTE PTR [rax],0x2c
  42ea5b:	mov    eax,DWORD PTR [rbp-0x20]
  42ea5e:	movsxd rdx,eax
  42ea61:	mov    rcx,QWORD PTR [rbp-0x38]
  42ea65:	mov    rax,QWORD PTR [rbp-0x18]
  42ea69:	mov    rsi,rcx
  42ea6c:	mov    rdi,rax
  42ea6f:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42ea74:	mov    rax,QWORD PTR [rbp-0x18]
  42ea78:	movzx  eax,BYTE PTR [rax+0x33]
  42ea7c:	test   al,al
  42ea7e:	je     42eab0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa7>
  42ea80:	mov    rax,QWORD PTR [rbp-0x18]
  42ea84:	mov    rdx,QWORD PTR [rax+0x28]
  42ea88:	movzx  eax,BYTE PTR [rbp-0x1]
  42ea8c:	mov    rsi,rdx
  42ea8f:	mov    edi,eax
  42ea91:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42ea96:	mov    ecx,eax
  42ea98:	mov    rax,QWORD PTR [rbp-0x18]
  42ea9c:	mov    rdx,QWORD PTR [rax+0x28]
  42eaa0:	movsxd rax,ecx
  42eaa3:	add    rdx,rax
  42eaa6:	mov    rax,QWORD PTR [rbp-0x18]
  42eaaa:	mov    QWORD PTR [rax+0x28],rdx
  42eaae:	jmp    42eac3 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xba>
  42eab0:	movzx  ecx,BYTE PTR [rbp-0x1]
  42eab4:	mov    rdx,QWORD PTR [rbp-0x18]
  42eab8:	mov    rax,QWORD PTR [rbp+0x10]
  42eabc:	mov    esi,ecx
  42eabe:	mov    rdi,rdx
  42eac1:	call   rax
  42eac3:	nop
  42eac4:	leave  
  42eac5:	ret    

000000000042eac6 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  42eac6:	push   rbp
  42eac7:	mov    rbp,rsp
  42eaca:	sub    rsp,0x40
  42eace:	mov    QWORD PTR [rbp-0x18],rdi
  42ead2:	mov    DWORD PTR [rbp-0x1c],esi
  42ead5:	mov    QWORD PTR [rbp-0x28],rdx
  42ead9:	mov    QWORD PTR [rbp-0x30],rcx
  42eadd:	mov    QWORD PTR [rbp-0x38],r8
  42eae1:	mov    DWORD PTR [rbp-0x20],r9d
  42eae5:	mov    rdx,QWORD PTR [rbp-0x28]
  42eae9:	mov    rax,QWORD PTR [rbp-0x30]
  42eaed:	add    rax,rdx
  42eaf0:	mov    rdi,rax
  42eaf3:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  42eaf8:	mov    WORD PTR [rbp-0x2],ax
  42eafc:	cmp    DWORD PTR [rbp-0x1c],0x0
  42eb00:	je     42eb19 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x53>
  42eb02:	mov    rax,QWORD PTR [rbp-0x18]
  42eb06:	mov    rax,QWORD PTR [rax+0x28]
  42eb0a:	lea    rcx,[rax+0x1]
  42eb0e:	mov    rdx,QWORD PTR [rbp-0x18]
  42eb12:	mov    QWORD PTR [rdx+0x28],rcx
  42eb16:	mov    BYTE PTR [rax],0x2c
  42eb19:	mov    eax,DWORD PTR [rbp-0x20]
  42eb1c:	movsxd rdx,eax
  42eb1f:	mov    rcx,QWORD PTR [rbp-0x38]
  42eb23:	mov    rax,QWORD PTR [rbp-0x18]
  42eb27:	mov    rsi,rcx
  42eb2a:	mov    rdi,rax
  42eb2d:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42eb32:	mov    rax,QWORD PTR [rbp-0x18]
  42eb36:	movzx  eax,BYTE PTR [rax+0x33]
  42eb3a:	test   al,al
  42eb3c:	je     42eb6e <flatcc_json_printer_uint16_enum_struct_field@@Base+0xa8>
  42eb3e:	mov    rax,QWORD PTR [rbp-0x18]
  42eb42:	mov    rdx,QWORD PTR [rax+0x28]
  42eb46:	movzx  eax,WORD PTR [rbp-0x2]
  42eb4a:	mov    rsi,rdx
  42eb4d:	mov    edi,eax
  42eb4f:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42eb54:	mov    ecx,eax
  42eb56:	mov    rax,QWORD PTR [rbp-0x18]
  42eb5a:	mov    rdx,QWORD PTR [rax+0x28]
  42eb5e:	movsxd rax,ecx
  42eb61:	add    rdx,rax
  42eb64:	mov    rax,QWORD PTR [rbp-0x18]
  42eb68:	mov    QWORD PTR [rax+0x28],rdx
  42eb6c:	jmp    42eb81 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xbb>
  42eb6e:	movzx  ecx,WORD PTR [rbp-0x2]
  42eb72:	mov    rdx,QWORD PTR [rbp-0x18]
  42eb76:	mov    rax,QWORD PTR [rbp+0x10]
  42eb7a:	mov    esi,ecx
  42eb7c:	mov    rdi,rdx
  42eb7f:	call   rax
  42eb81:	nop
  42eb82:	leave  
  42eb83:	ret    

000000000042eb84 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  42eb84:	push   rbp
  42eb85:	mov    rbp,rsp
  42eb88:	sub    rsp,0x40
  42eb8c:	mov    QWORD PTR [rbp-0x18],rdi
  42eb90:	mov    DWORD PTR [rbp-0x1c],esi
  42eb93:	mov    QWORD PTR [rbp-0x28],rdx
  42eb97:	mov    QWORD PTR [rbp-0x30],rcx
  42eb9b:	mov    QWORD PTR [rbp-0x38],r8
  42eb9f:	mov    DWORD PTR [rbp-0x20],r9d
  42eba3:	mov    rdx,QWORD PTR [rbp-0x28]
  42eba7:	mov    rax,QWORD PTR [rbp-0x30]
  42ebab:	add    rax,rdx
  42ebae:	mov    rdi,rax
  42ebb1:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42ebb6:	mov    DWORD PTR [rbp-0x4],eax
  42ebb9:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ebbd:	je     42ebd6 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x52>
  42ebbf:	mov    rax,QWORD PTR [rbp-0x18]
  42ebc3:	mov    rax,QWORD PTR [rax+0x28]
  42ebc7:	lea    rcx,[rax+0x1]
  42ebcb:	mov    rdx,QWORD PTR [rbp-0x18]
  42ebcf:	mov    QWORD PTR [rdx+0x28],rcx
  42ebd3:	mov    BYTE PTR [rax],0x2c
  42ebd6:	mov    eax,DWORD PTR [rbp-0x20]
  42ebd9:	movsxd rdx,eax
  42ebdc:	mov    rcx,QWORD PTR [rbp-0x38]
  42ebe0:	mov    rax,QWORD PTR [rbp-0x18]
  42ebe4:	mov    rsi,rcx
  42ebe7:	mov    rdi,rax
  42ebea:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42ebef:	mov    rax,QWORD PTR [rbp-0x18]
  42ebf3:	movzx  eax,BYTE PTR [rax+0x33]
  42ebf7:	test   al,al
  42ebf9:	je     42ec2a <flatcc_json_printer_uint32_enum_struct_field@@Base+0xa6>
  42ebfb:	mov    rax,QWORD PTR [rbp-0x18]
  42ebff:	mov    rdx,QWORD PTR [rax+0x28]
  42ec03:	mov    eax,DWORD PTR [rbp-0x4]
  42ec06:	mov    rsi,rdx
  42ec09:	mov    edi,eax
  42ec0b:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42ec10:	mov    ecx,eax
  42ec12:	mov    rax,QWORD PTR [rbp-0x18]
  42ec16:	mov    rdx,QWORD PTR [rax+0x28]
  42ec1a:	movsxd rax,ecx
  42ec1d:	add    rdx,rax
  42ec20:	mov    rax,QWORD PTR [rbp-0x18]
  42ec24:	mov    QWORD PTR [rax+0x28],rdx
  42ec28:	jmp    42ec3c <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb8>
  42ec2a:	mov    ecx,DWORD PTR [rbp-0x4]
  42ec2d:	mov    rdx,QWORD PTR [rbp-0x18]
  42ec31:	mov    rax,QWORD PTR [rbp+0x10]
  42ec35:	mov    esi,ecx
  42ec37:	mov    rdi,rdx
  42ec3a:	call   rax
  42ec3c:	nop
  42ec3d:	leave  
  42ec3e:	ret    

000000000042ec3f <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  42ec3f:	push   rbp
  42ec40:	mov    rbp,rsp
  42ec43:	sub    rsp,0x40
  42ec47:	mov    QWORD PTR [rbp-0x18],rdi
  42ec4b:	mov    DWORD PTR [rbp-0x1c],esi
  42ec4e:	mov    QWORD PTR [rbp-0x28],rdx
  42ec52:	mov    QWORD PTR [rbp-0x30],rcx
  42ec56:	mov    QWORD PTR [rbp-0x38],r8
  42ec5a:	mov    DWORD PTR [rbp-0x20],r9d
  42ec5e:	mov    rdx,QWORD PTR [rbp-0x28]
  42ec62:	mov    rax,QWORD PTR [rbp-0x30]
  42ec66:	add    rax,rdx
  42ec69:	mov    rdi,rax
  42ec6c:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42ec71:	mov    QWORD PTR [rbp-0x8],rax
  42ec75:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ec79:	je     42ec92 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x53>
  42ec7b:	mov    rax,QWORD PTR [rbp-0x18]
  42ec7f:	mov    rax,QWORD PTR [rax+0x28]
  42ec83:	lea    rcx,[rax+0x1]
  42ec87:	mov    rdx,QWORD PTR [rbp-0x18]
  42ec8b:	mov    QWORD PTR [rdx+0x28],rcx
  42ec8f:	mov    BYTE PTR [rax],0x2c
  42ec92:	mov    eax,DWORD PTR [rbp-0x20]
  42ec95:	movsxd rdx,eax
  42ec98:	mov    rcx,QWORD PTR [rbp-0x38]
  42ec9c:	mov    rax,QWORD PTR [rbp-0x18]
  42eca0:	mov    rsi,rcx
  42eca3:	mov    rdi,rax
  42eca6:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42ecab:	mov    rax,QWORD PTR [rbp-0x18]
  42ecaf:	movzx  eax,BYTE PTR [rax+0x33]
  42ecb3:	test   al,al
  42ecb5:	je     42ece8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xa9>
  42ecb7:	mov    rax,QWORD PTR [rbp-0x18]
  42ecbb:	mov    rdx,QWORD PTR [rax+0x28]
  42ecbf:	mov    rax,QWORD PTR [rbp-0x8]
  42ecc3:	mov    rsi,rdx
  42ecc6:	mov    rdi,rax
  42ecc9:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42ecce:	mov    ecx,eax
  42ecd0:	mov    rax,QWORD PTR [rbp-0x18]
  42ecd4:	mov    rdx,QWORD PTR [rax+0x28]
  42ecd8:	movsxd rax,ecx
  42ecdb:	add    rdx,rax
  42ecde:	mov    rax,QWORD PTR [rbp-0x18]
  42ece2:	mov    QWORD PTR [rax+0x28],rdx
  42ece6:	jmp    42ecfc <flatcc_json_printer_uint64_enum_struct_field@@Base+0xbd>
  42ece8:	mov    rcx,QWORD PTR [rbp-0x8]
  42ecec:	mov    rdx,QWORD PTR [rbp-0x18]
  42ecf0:	mov    rax,QWORD PTR [rbp+0x10]
  42ecf4:	mov    rsi,rcx
  42ecf7:	mov    rdi,rdx
  42ecfa:	call   rax
  42ecfc:	nop
  42ecfd:	leave  
  42ecfe:	ret    

000000000042ecff <flatcc_json_printer_int8_enum_struct_field@@Base>:
  42ecff:	push   rbp
  42ed00:	mov    rbp,rsp
  42ed03:	sub    rsp,0x40
  42ed07:	mov    QWORD PTR [rbp-0x18],rdi
  42ed0b:	mov    DWORD PTR [rbp-0x1c],esi
  42ed0e:	mov    QWORD PTR [rbp-0x28],rdx
  42ed12:	mov    QWORD PTR [rbp-0x30],rcx
  42ed16:	mov    QWORD PTR [rbp-0x38],r8
  42ed1a:	mov    DWORD PTR [rbp-0x20],r9d
  42ed1e:	mov    rdx,QWORD PTR [rbp-0x28]
  42ed22:	mov    rax,QWORD PTR [rbp-0x30]
  42ed26:	add    rax,rdx
  42ed29:	mov    rdi,rax
  42ed2c:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  42ed31:	mov    BYTE PTR [rbp-0x1],al
  42ed34:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ed38:	je     42ed51 <flatcc_json_printer_int8_enum_struct_field@@Base+0x52>
  42ed3a:	mov    rax,QWORD PTR [rbp-0x18]
  42ed3e:	mov    rax,QWORD PTR [rax+0x28]
  42ed42:	lea    rcx,[rax+0x1]
  42ed46:	mov    rdx,QWORD PTR [rbp-0x18]
  42ed4a:	mov    QWORD PTR [rdx+0x28],rcx
  42ed4e:	mov    BYTE PTR [rax],0x2c
  42ed51:	mov    eax,DWORD PTR [rbp-0x20]
  42ed54:	movsxd rdx,eax
  42ed57:	mov    rcx,QWORD PTR [rbp-0x38]
  42ed5b:	mov    rax,QWORD PTR [rbp-0x18]
  42ed5f:	mov    rsi,rcx
  42ed62:	mov    rdi,rax
  42ed65:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42ed6a:	mov    rax,QWORD PTR [rbp-0x18]
  42ed6e:	movzx  eax,BYTE PTR [rax+0x33]
  42ed72:	test   al,al
  42ed74:	je     42eda6 <flatcc_json_printer_int8_enum_struct_field@@Base+0xa7>
  42ed76:	mov    rax,QWORD PTR [rbp-0x18]
  42ed7a:	mov    rdx,QWORD PTR [rax+0x28]
  42ed7e:	movsx  eax,BYTE PTR [rbp-0x1]
  42ed82:	mov    rsi,rdx
  42ed85:	mov    edi,eax
  42ed87:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42ed8c:	mov    ecx,eax
  42ed8e:	mov    rax,QWORD PTR [rbp-0x18]
  42ed92:	mov    rdx,QWORD PTR [rax+0x28]
  42ed96:	movsxd rax,ecx
  42ed99:	add    rdx,rax
  42ed9c:	mov    rax,QWORD PTR [rbp-0x18]
  42eda0:	mov    QWORD PTR [rax+0x28],rdx
  42eda4:	jmp    42edb9 <flatcc_json_printer_int8_enum_struct_field@@Base+0xba>
  42eda6:	movsx  ecx,BYTE PTR [rbp-0x1]
  42edaa:	mov    rdx,QWORD PTR [rbp-0x18]
  42edae:	mov    rax,QWORD PTR [rbp+0x10]
  42edb2:	mov    esi,ecx
  42edb4:	mov    rdi,rdx
  42edb7:	call   rax
  42edb9:	nop
  42edba:	leave  
  42edbb:	ret    

000000000042edbc <flatcc_json_printer_int16_enum_struct_field@@Base>:
  42edbc:	push   rbp
  42edbd:	mov    rbp,rsp
  42edc0:	sub    rsp,0x40
  42edc4:	mov    QWORD PTR [rbp-0x18],rdi
  42edc8:	mov    DWORD PTR [rbp-0x1c],esi
  42edcb:	mov    QWORD PTR [rbp-0x28],rdx
  42edcf:	mov    QWORD PTR [rbp-0x30],rcx
  42edd3:	mov    QWORD PTR [rbp-0x38],r8
  42edd7:	mov    DWORD PTR [rbp-0x20],r9d
  42eddb:	mov    rdx,QWORD PTR [rbp-0x28]
  42eddf:	mov    rax,QWORD PTR [rbp-0x30]
  42ede3:	add    rax,rdx
  42ede6:	mov    rdi,rax
  42ede9:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  42edee:	mov    WORD PTR [rbp-0x2],ax
  42edf2:	cmp    DWORD PTR [rbp-0x1c],0x0
  42edf6:	je     42ee0f <flatcc_json_printer_int16_enum_struct_field@@Base+0x53>
  42edf8:	mov    rax,QWORD PTR [rbp-0x18]
  42edfc:	mov    rax,QWORD PTR [rax+0x28]
  42ee00:	lea    rcx,[rax+0x1]
  42ee04:	mov    rdx,QWORD PTR [rbp-0x18]
  42ee08:	mov    QWORD PTR [rdx+0x28],rcx
  42ee0c:	mov    BYTE PTR [rax],0x2c
  42ee0f:	mov    eax,DWORD PTR [rbp-0x20]
  42ee12:	movsxd rdx,eax
  42ee15:	mov    rcx,QWORD PTR [rbp-0x38]
  42ee19:	mov    rax,QWORD PTR [rbp-0x18]
  42ee1d:	mov    rsi,rcx
  42ee20:	mov    rdi,rax
  42ee23:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42ee28:	mov    rax,QWORD PTR [rbp-0x18]
  42ee2c:	movzx  eax,BYTE PTR [rax+0x33]
  42ee30:	test   al,al
  42ee32:	je     42ee64 <flatcc_json_printer_int16_enum_struct_field@@Base+0xa8>
  42ee34:	mov    rax,QWORD PTR [rbp-0x18]
  42ee38:	mov    rdx,QWORD PTR [rax+0x28]
  42ee3c:	movsx  eax,WORD PTR [rbp-0x2]
  42ee40:	mov    rsi,rdx
  42ee43:	mov    edi,eax
  42ee45:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42ee4a:	mov    ecx,eax
  42ee4c:	mov    rax,QWORD PTR [rbp-0x18]
  42ee50:	mov    rdx,QWORD PTR [rax+0x28]
  42ee54:	movsxd rax,ecx
  42ee57:	add    rdx,rax
  42ee5a:	mov    rax,QWORD PTR [rbp-0x18]
  42ee5e:	mov    QWORD PTR [rax+0x28],rdx
  42ee62:	jmp    42ee77 <flatcc_json_printer_int16_enum_struct_field@@Base+0xbb>
  42ee64:	movsx  ecx,WORD PTR [rbp-0x2]
  42ee68:	mov    rdx,QWORD PTR [rbp-0x18]
  42ee6c:	mov    rax,QWORD PTR [rbp+0x10]
  42ee70:	mov    esi,ecx
  42ee72:	mov    rdi,rdx
  42ee75:	call   rax
  42ee77:	nop
  42ee78:	leave  
  42ee79:	ret    

000000000042ee7a <flatcc_json_printer_int32_enum_struct_field@@Base>:
  42ee7a:	push   rbp
  42ee7b:	mov    rbp,rsp
  42ee7e:	sub    rsp,0x40
  42ee82:	mov    QWORD PTR [rbp-0x18],rdi
  42ee86:	mov    DWORD PTR [rbp-0x1c],esi
  42ee89:	mov    QWORD PTR [rbp-0x28],rdx
  42ee8d:	mov    QWORD PTR [rbp-0x30],rcx
  42ee91:	mov    QWORD PTR [rbp-0x38],r8
  42ee95:	mov    DWORD PTR [rbp-0x20],r9d
  42ee99:	mov    rdx,QWORD PTR [rbp-0x28]
  42ee9d:	mov    rax,QWORD PTR [rbp-0x30]
  42eea1:	add    rax,rdx
  42eea4:	mov    rdi,rax
  42eea7:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  42eeac:	mov    DWORD PTR [rbp-0x4],eax
  42eeaf:	cmp    DWORD PTR [rbp-0x1c],0x0
  42eeb3:	je     42eecc <flatcc_json_printer_int32_enum_struct_field@@Base+0x52>
  42eeb5:	mov    rax,QWORD PTR [rbp-0x18]
  42eeb9:	mov    rax,QWORD PTR [rax+0x28]
  42eebd:	lea    rcx,[rax+0x1]
  42eec1:	mov    rdx,QWORD PTR [rbp-0x18]
  42eec5:	mov    QWORD PTR [rdx+0x28],rcx
  42eec9:	mov    BYTE PTR [rax],0x2c
  42eecc:	mov    eax,DWORD PTR [rbp-0x20]
  42eecf:	movsxd rdx,eax
  42eed2:	mov    rcx,QWORD PTR [rbp-0x38]
  42eed6:	mov    rax,QWORD PTR [rbp-0x18]
  42eeda:	mov    rsi,rcx
  42eedd:	mov    rdi,rax
  42eee0:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42eee5:	mov    rax,QWORD PTR [rbp-0x18]
  42eee9:	movzx  eax,BYTE PTR [rax+0x33]
  42eeed:	test   al,al
  42eeef:	je     42ef20 <flatcc_json_printer_int32_enum_struct_field@@Base+0xa6>
  42eef1:	mov    rax,QWORD PTR [rbp-0x18]
  42eef5:	mov    rdx,QWORD PTR [rax+0x28]
  42eef9:	mov    eax,DWORD PTR [rbp-0x4]
  42eefc:	mov    rsi,rdx
  42eeff:	mov    edi,eax
  42ef01:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  42ef06:	mov    ecx,eax
  42ef08:	mov    rax,QWORD PTR [rbp-0x18]
  42ef0c:	mov    rdx,QWORD PTR [rax+0x28]
  42ef10:	movsxd rax,ecx
  42ef13:	add    rdx,rax
  42ef16:	mov    rax,QWORD PTR [rbp-0x18]
  42ef1a:	mov    QWORD PTR [rax+0x28],rdx
  42ef1e:	jmp    42ef32 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb8>
  42ef20:	mov    ecx,DWORD PTR [rbp-0x4]
  42ef23:	mov    rdx,QWORD PTR [rbp-0x18]
  42ef27:	mov    rax,QWORD PTR [rbp+0x10]
  42ef2b:	mov    esi,ecx
  42ef2d:	mov    rdi,rdx
  42ef30:	call   rax
  42ef32:	nop
  42ef33:	leave  
  42ef34:	ret    

000000000042ef35 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  42ef35:	push   rbp
  42ef36:	mov    rbp,rsp
  42ef39:	sub    rsp,0x40
  42ef3d:	mov    QWORD PTR [rbp-0x18],rdi
  42ef41:	mov    DWORD PTR [rbp-0x1c],esi
  42ef44:	mov    QWORD PTR [rbp-0x28],rdx
  42ef48:	mov    QWORD PTR [rbp-0x30],rcx
  42ef4c:	mov    QWORD PTR [rbp-0x38],r8
  42ef50:	mov    DWORD PTR [rbp-0x20],r9d
  42ef54:	mov    rdx,QWORD PTR [rbp-0x28]
  42ef58:	mov    rax,QWORD PTR [rbp-0x30]
  42ef5c:	add    rax,rdx
  42ef5f:	mov    rdi,rax
  42ef62:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  42ef67:	mov    QWORD PTR [rbp-0x8],rax
  42ef6b:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ef6f:	je     42ef88 <flatcc_json_printer_int64_enum_struct_field@@Base+0x53>
  42ef71:	mov    rax,QWORD PTR [rbp-0x18]
  42ef75:	mov    rax,QWORD PTR [rax+0x28]
  42ef79:	lea    rcx,[rax+0x1]
  42ef7d:	mov    rdx,QWORD PTR [rbp-0x18]
  42ef81:	mov    QWORD PTR [rdx+0x28],rcx
  42ef85:	mov    BYTE PTR [rax],0x2c
  42ef88:	mov    eax,DWORD PTR [rbp-0x20]
  42ef8b:	movsxd rdx,eax
  42ef8e:	mov    rcx,QWORD PTR [rbp-0x38]
  42ef92:	mov    rax,QWORD PTR [rbp-0x18]
  42ef96:	mov    rsi,rcx
  42ef99:	mov    rdi,rax
  42ef9c:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42efa1:	mov    rax,QWORD PTR [rbp-0x18]
  42efa5:	movzx  eax,BYTE PTR [rax+0x33]
  42efa9:	test   al,al
  42efab:	je     42efde <flatcc_json_printer_int64_enum_struct_field@@Base+0xa9>
  42efad:	mov    rax,QWORD PTR [rbp-0x18]
  42efb1:	mov    rdx,QWORD PTR [rax+0x28]
  42efb5:	mov    rax,QWORD PTR [rbp-0x8]
  42efb9:	mov    rsi,rdx
  42efbc:	mov    rdi,rax
  42efbf:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  42efc4:	mov    ecx,eax
  42efc6:	mov    rax,QWORD PTR [rbp-0x18]
  42efca:	mov    rdx,QWORD PTR [rax+0x28]
  42efce:	movsxd rax,ecx
  42efd1:	add    rdx,rax
  42efd4:	mov    rax,QWORD PTR [rbp-0x18]
  42efd8:	mov    QWORD PTR [rax+0x28],rdx
  42efdc:	jmp    42eff2 <flatcc_json_printer_int64_enum_struct_field@@Base+0xbd>
  42efde:	mov    rcx,QWORD PTR [rbp-0x8]
  42efe2:	mov    rdx,QWORD PTR [rbp-0x18]
  42efe6:	mov    rax,QWORD PTR [rbp+0x10]
  42efea:	mov    rsi,rcx
  42efed:	mov    rdi,rdx
  42eff0:	call   rax
  42eff2:	nop
  42eff3:	leave  
  42eff4:	ret    

000000000042eff5 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  42eff5:	push   rbp
  42eff6:	mov    rbp,rsp
  42eff9:	sub    rsp,0x40
  42effd:	mov    QWORD PTR [rbp-0x18],rdi
  42f001:	mov    DWORD PTR [rbp-0x1c],esi
  42f004:	mov    QWORD PTR [rbp-0x28],rdx
  42f008:	mov    QWORD PTR [rbp-0x30],rcx
  42f00c:	mov    QWORD PTR [rbp-0x38],r8
  42f010:	mov    DWORD PTR [rbp-0x20],r9d
  42f014:	mov    rdx,QWORD PTR [rbp-0x28]
  42f018:	mov    rax,QWORD PTR [rbp-0x30]
  42f01c:	add    rax,rdx
  42f01f:	mov    rdi,rax
  42f022:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  42f027:	mov    BYTE PTR [rbp-0x1],al
  42f02a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f02e:	je     42f047 <flatcc_json_printer_bool_enum_struct_field@@Base+0x52>
  42f030:	mov    rax,QWORD PTR [rbp-0x18]
  42f034:	mov    rax,QWORD PTR [rax+0x28]
  42f038:	lea    rcx,[rax+0x1]
  42f03c:	mov    rdx,QWORD PTR [rbp-0x18]
  42f040:	mov    QWORD PTR [rdx+0x28],rcx
  42f044:	mov    BYTE PTR [rax],0x2c
  42f047:	mov    eax,DWORD PTR [rbp-0x20]
  42f04a:	movsxd rdx,eax
  42f04d:	mov    rcx,QWORD PTR [rbp-0x38]
  42f051:	mov    rax,QWORD PTR [rbp-0x18]
  42f055:	mov    rsi,rcx
  42f058:	mov    rdi,rax
  42f05b:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42f060:	mov    rax,QWORD PTR [rbp-0x18]
  42f064:	movzx  eax,BYTE PTR [rax+0x33]
  42f068:	test   al,al
  42f06a:	je     42f09c <flatcc_json_printer_bool_enum_struct_field@@Base+0xa7>
  42f06c:	mov    rax,QWORD PTR [rbp-0x18]
  42f070:	mov    rdx,QWORD PTR [rax+0x28]
  42f074:	movzx  eax,BYTE PTR [rbp-0x1]
  42f078:	mov    rsi,rdx
  42f07b:	mov    edi,eax
  42f07d:	call   428b85 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  42f082:	mov    ecx,eax
  42f084:	mov    rax,QWORD PTR [rbp-0x18]
  42f088:	mov    rdx,QWORD PTR [rax+0x28]
  42f08c:	movsxd rax,ecx
  42f08f:	add    rdx,rax
  42f092:	mov    rax,QWORD PTR [rbp-0x18]
  42f096:	mov    QWORD PTR [rax+0x28],rdx
  42f09a:	jmp    42f0af <flatcc_json_printer_bool_enum_struct_field@@Base+0xba>
  42f09c:	movzx  ecx,BYTE PTR [rbp-0x1]
  42f0a0:	mov    rdx,QWORD PTR [rbp-0x18]
  42f0a4:	mov    rax,QWORD PTR [rbp+0x10]
  42f0a8:	mov    esi,ecx
  42f0aa:	mov    rdi,rdx
  42f0ad:	call   rax
  42f0af:	nop
  42f0b0:	leave  
  42f0b1:	ret    

000000000042f0b2 <flatcc_json_printer_utype_vector_field@@Base>:
  42f0b2:	push   rbp
  42f0b3:	mov    rbp,rsp
  42f0b6:	push   rbx
  42f0b7:	sub    rsp,0x38
  42f0bb:	mov    QWORD PTR [rbp-0x28],rdi
  42f0bf:	mov    QWORD PTR [rbp-0x30],rsi
  42f0c3:	mov    DWORD PTR [rbp-0x34],edx
  42f0c6:	mov    QWORD PTR [rbp-0x40],rcx
  42f0ca:	mov    DWORD PTR [rbp-0x38],r8d
  42f0ce:	mov    edx,DWORD PTR [rbp-0x34]
  42f0d1:	mov    rax,QWORD PTR [rbp-0x30]
  42f0d5:	mov    esi,edx
  42f0d7:	mov    rdi,rax
  42f0da:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42f0df:	mov    QWORD PTR [rbp-0x18],rax
  42f0e3:	cmp    QWORD PTR [rbp-0x18],0x0
  42f0e8:	je     42f31c <flatcc_json_printer_utype_vector_field@@Base+0x26a>
  42f0ee:	mov    rax,QWORD PTR [rbp-0x30]
  42f0f2:	mov    eax,DWORD PTR [rax+0x18]
  42f0f5:	lea    ecx,[rax+0x1]
  42f0f8:	mov    rdx,QWORD PTR [rbp-0x30]
  42f0fc:	mov    DWORD PTR [rdx+0x18],ecx
  42f0ff:	test   eax,eax
  42f101:	je     42f11a <flatcc_json_printer_utype_vector_field@@Base+0x68>
  42f103:	mov    rax,QWORD PTR [rbp-0x28]
  42f107:	mov    rax,QWORD PTR [rax+0x28]
  42f10b:	lea    rcx,[rax+0x1]
  42f10f:	mov    rdx,QWORD PTR [rbp-0x28]
  42f113:	mov    QWORD PTR [rdx+0x28],rcx
  42f117:	mov    BYTE PTR [rax],0x2c
  42f11a:	mov    rax,QWORD PTR [rbp-0x18]
  42f11e:	mov    rdi,rax
  42f121:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42f126:	mov    QWORD PTR [rbp-0x18],rax
  42f12a:	mov    rax,QWORD PTR [rbp-0x18]
  42f12e:	mov    rdi,rax
  42f131:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42f136:	mov    DWORD PTR [rbp-0x1c],eax
  42f139:	mov    rax,QWORD PTR [rbp-0x18]
  42f13d:	add    rax,0x4
  42f141:	mov    QWORD PTR [rbp-0x18],rax
  42f145:	mov    eax,DWORD PTR [rbp-0x38]
  42f148:	movsxd rdx,eax
  42f14b:	mov    rcx,QWORD PTR [rbp-0x40]
  42f14f:	mov    rax,QWORD PTR [rbp-0x28]
  42f153:	mov    rsi,rcx
  42f156:	mov    rdi,rax
  42f159:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42f15e:	mov    rax,QWORD PTR [rbp-0x28]
  42f162:	mov    eax,DWORD PTR [rax+0x38]
  42f165:	lea    edx,[rax+0x1]
  42f168:	mov    rax,QWORD PTR [rbp-0x28]
  42f16c:	mov    DWORD PTR [rax+0x38],edx
  42f16f:	mov    rax,QWORD PTR [rbp-0x28]
  42f173:	mov    rax,QWORD PTR [rax+0x28]
  42f177:	lea    rcx,[rax+0x1]
  42f17b:	mov    rdx,QWORD PTR [rbp-0x28]
  42f17f:	mov    QWORD PTR [rdx+0x28],rcx
  42f183:	mov    BYTE PTR [rax],0x5b
  42f186:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f18a:	je     42f2b4 <flatcc_json_printer_utype_vector_field@@Base+0x202>
  42f190:	mov    rax,QWORD PTR [rbp-0x28]
  42f194:	movzx  eax,BYTE PTR [rax+0x31]
  42f198:	test   al,al
  42f19a:	je     42f1c1 <flatcc_json_printer_utype_vector_field@@Base+0x10f>
  42f19c:	mov    rax,QWORD PTR [rbp-0x28]
  42f1a0:	mov    rax,QWORD PTR [rax+0x28]
  42f1a4:	lea    rcx,[rax+0x1]
  42f1a8:	mov    rdx,QWORD PTR [rbp-0x28]
  42f1ac:	mov    QWORD PTR [rdx+0x28],rcx
  42f1b0:	mov    BYTE PTR [rax],0xa
  42f1b3:	mov    rax,QWORD PTR [rbp-0x28]
  42f1b7:	mov    rdi,rax
  42f1ba:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f1bf:	jmp    42f1cd <flatcc_json_printer_utype_vector_field@@Base+0x11b>
  42f1c1:	mov    rax,QWORD PTR [rbp-0x28]
  42f1c5:	mov    rdi,rax
  42f1c8:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f1cd:	mov    rax,QWORD PTR [rbp-0x28]
  42f1d1:	mov    rbx,QWORD PTR [rax+0x28]
  42f1d5:	mov    rax,QWORD PTR [rbp-0x18]
  42f1d9:	mov    rdi,rax
  42f1dc:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  42f1e1:	movzx  eax,al
  42f1e4:	mov    rsi,rbx
  42f1e7:	mov    edi,eax
  42f1e9:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42f1ee:	mov    ecx,eax
  42f1f0:	mov    rax,QWORD PTR [rbp-0x28]
  42f1f4:	mov    rdx,QWORD PTR [rax+0x28]
  42f1f8:	movsxd rax,ecx
  42f1fb:	add    rdx,rax
  42f1fe:	mov    rax,QWORD PTR [rbp-0x28]
  42f202:	mov    QWORD PTR [rax+0x28],rdx
  42f206:	mov    rax,QWORD PTR [rbp-0x18]
  42f20a:	add    rax,0x1
  42f20e:	mov    QWORD PTR [rbp-0x18],rax
  42f212:	sub    DWORD PTR [rbp-0x1c],0x1
  42f216:	jmp    42f2b4 <flatcc_json_printer_utype_vector_field@@Base+0x202>
  42f21b:	mov    rax,QWORD PTR [rbp-0x28]
  42f21f:	mov    rax,QWORD PTR [rax+0x28]
  42f223:	lea    rcx,[rax+0x1]
  42f227:	mov    rdx,QWORD PTR [rbp-0x28]
  42f22b:	mov    QWORD PTR [rdx+0x28],rcx
  42f22f:	mov    BYTE PTR [rax],0x2c
  42f232:	mov    rax,QWORD PTR [rbp-0x28]
  42f236:	movzx  eax,BYTE PTR [rax+0x31]
  42f23a:	test   al,al
  42f23c:	je     42f263 <flatcc_json_printer_utype_vector_field@@Base+0x1b1>
  42f23e:	mov    rax,QWORD PTR [rbp-0x28]
  42f242:	mov    rax,QWORD PTR [rax+0x28]
  42f246:	lea    rcx,[rax+0x1]
  42f24a:	mov    rdx,QWORD PTR [rbp-0x28]
  42f24e:	mov    QWORD PTR [rdx+0x28],rcx
  42f252:	mov    BYTE PTR [rax],0xa
  42f255:	mov    rax,QWORD PTR [rbp-0x28]
  42f259:	mov    rdi,rax
  42f25c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f261:	jmp    42f26f <flatcc_json_printer_utype_vector_field@@Base+0x1bd>
  42f263:	mov    rax,QWORD PTR [rbp-0x28]
  42f267:	mov    rdi,rax
  42f26a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f26f:	mov    rax,QWORD PTR [rbp-0x28]
  42f273:	mov    rbx,QWORD PTR [rax+0x28]
  42f277:	mov    rax,QWORD PTR [rbp-0x18]
  42f27b:	mov    rdi,rax
  42f27e:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  42f283:	movzx  eax,al
  42f286:	mov    rsi,rbx
  42f289:	mov    edi,eax
  42f28b:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42f290:	mov    ecx,eax
  42f292:	mov    rax,QWORD PTR [rbp-0x28]
  42f296:	mov    rdx,QWORD PTR [rax+0x28]
  42f29a:	movsxd rax,ecx
  42f29d:	add    rdx,rax
  42f2a0:	mov    rax,QWORD PTR [rbp-0x28]
  42f2a4:	mov    QWORD PTR [rax+0x28],rdx
  42f2a8:	mov    rax,QWORD PTR [rbp-0x18]
  42f2ac:	add    rax,0x1
  42f2b0:	mov    QWORD PTR [rbp-0x18],rax
  42f2b4:	mov    eax,DWORD PTR [rbp-0x1c]
  42f2b7:	lea    edx,[rax-0x1]
  42f2ba:	mov    DWORD PTR [rbp-0x1c],edx
  42f2bd:	test   eax,eax
  42f2bf:	jne    42f21b <flatcc_json_printer_utype_vector_field@@Base+0x169>
  42f2c5:	mov    rax,QWORD PTR [rbp-0x28]
  42f2c9:	movzx  eax,BYTE PTR [rax+0x31]
  42f2cd:	test   al,al
  42f2cf:	je     42f305 <flatcc_json_printer_utype_vector_field@@Base+0x253>
  42f2d1:	mov    rax,QWORD PTR [rbp-0x28]
  42f2d5:	mov    rax,QWORD PTR [rax+0x28]
  42f2d9:	lea    rcx,[rax+0x1]
  42f2dd:	mov    rdx,QWORD PTR [rbp-0x28]
  42f2e1:	mov    QWORD PTR [rdx+0x28],rcx
  42f2e5:	mov    BYTE PTR [rax],0xa
  42f2e8:	mov    rax,QWORD PTR [rbp-0x28]
  42f2ec:	mov    eax,DWORD PTR [rax+0x38]
  42f2ef:	lea    edx,[rax-0x1]
  42f2f2:	mov    rax,QWORD PTR [rbp-0x28]
  42f2f6:	mov    DWORD PTR [rax+0x38],edx
  42f2f9:	mov    rax,QWORD PTR [rbp-0x28]
  42f2fd:	mov    rdi,rax
  42f300:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f305:	mov    rax,QWORD PTR [rbp-0x28]
  42f309:	mov    rax,QWORD PTR [rax+0x28]
  42f30d:	lea    rcx,[rax+0x1]
  42f311:	mov    rdx,QWORD PTR [rbp-0x28]
  42f315:	mov    QWORD PTR [rdx+0x28],rcx
  42f319:	mov    BYTE PTR [rax],0x5d
  42f31c:	nop
  42f31d:	add    rsp,0x38
  42f321:	pop    rbx
  42f322:	pop    rbp
  42f323:	ret    

000000000042f324 <flatcc_json_printer_uint8_vector_field@@Base>:
  42f324:	push   rbp
  42f325:	mov    rbp,rsp
  42f328:	push   rbx
  42f329:	sub    rsp,0x38
  42f32d:	mov    QWORD PTR [rbp-0x28],rdi
  42f331:	mov    QWORD PTR [rbp-0x30],rsi
  42f335:	mov    DWORD PTR [rbp-0x34],edx
  42f338:	mov    QWORD PTR [rbp-0x40],rcx
  42f33c:	mov    DWORD PTR [rbp-0x38],r8d
  42f340:	mov    edx,DWORD PTR [rbp-0x34]
  42f343:	mov    rax,QWORD PTR [rbp-0x30]
  42f347:	mov    esi,edx
  42f349:	mov    rdi,rax
  42f34c:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42f351:	mov    QWORD PTR [rbp-0x18],rax
  42f355:	cmp    QWORD PTR [rbp-0x18],0x0
  42f35a:	je     42f58e <flatcc_json_printer_uint8_vector_field@@Base+0x26a>
  42f360:	mov    rax,QWORD PTR [rbp-0x30]
  42f364:	mov    eax,DWORD PTR [rax+0x18]
  42f367:	lea    ecx,[rax+0x1]
  42f36a:	mov    rdx,QWORD PTR [rbp-0x30]
  42f36e:	mov    DWORD PTR [rdx+0x18],ecx
  42f371:	test   eax,eax
  42f373:	je     42f38c <flatcc_json_printer_uint8_vector_field@@Base+0x68>
  42f375:	mov    rax,QWORD PTR [rbp-0x28]
  42f379:	mov    rax,QWORD PTR [rax+0x28]
  42f37d:	lea    rcx,[rax+0x1]
  42f381:	mov    rdx,QWORD PTR [rbp-0x28]
  42f385:	mov    QWORD PTR [rdx+0x28],rcx
  42f389:	mov    BYTE PTR [rax],0x2c
  42f38c:	mov    rax,QWORD PTR [rbp-0x18]
  42f390:	mov    rdi,rax
  42f393:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42f398:	mov    QWORD PTR [rbp-0x18],rax
  42f39c:	mov    rax,QWORD PTR [rbp-0x18]
  42f3a0:	mov    rdi,rax
  42f3a3:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42f3a8:	mov    DWORD PTR [rbp-0x1c],eax
  42f3ab:	mov    rax,QWORD PTR [rbp-0x18]
  42f3af:	add    rax,0x4
  42f3b3:	mov    QWORD PTR [rbp-0x18],rax
  42f3b7:	mov    eax,DWORD PTR [rbp-0x38]
  42f3ba:	movsxd rdx,eax
  42f3bd:	mov    rcx,QWORD PTR [rbp-0x40]
  42f3c1:	mov    rax,QWORD PTR [rbp-0x28]
  42f3c5:	mov    rsi,rcx
  42f3c8:	mov    rdi,rax
  42f3cb:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42f3d0:	mov    rax,QWORD PTR [rbp-0x28]
  42f3d4:	mov    eax,DWORD PTR [rax+0x38]
  42f3d7:	lea    edx,[rax+0x1]
  42f3da:	mov    rax,QWORD PTR [rbp-0x28]
  42f3de:	mov    DWORD PTR [rax+0x38],edx
  42f3e1:	mov    rax,QWORD PTR [rbp-0x28]
  42f3e5:	mov    rax,QWORD PTR [rax+0x28]
  42f3e9:	lea    rcx,[rax+0x1]
  42f3ed:	mov    rdx,QWORD PTR [rbp-0x28]
  42f3f1:	mov    QWORD PTR [rdx+0x28],rcx
  42f3f5:	mov    BYTE PTR [rax],0x5b
  42f3f8:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f3fc:	je     42f526 <flatcc_json_printer_uint8_vector_field@@Base+0x202>
  42f402:	mov    rax,QWORD PTR [rbp-0x28]
  42f406:	movzx  eax,BYTE PTR [rax+0x31]
  42f40a:	test   al,al
  42f40c:	je     42f433 <flatcc_json_printer_uint8_vector_field@@Base+0x10f>
  42f40e:	mov    rax,QWORD PTR [rbp-0x28]
  42f412:	mov    rax,QWORD PTR [rax+0x28]
  42f416:	lea    rcx,[rax+0x1]
  42f41a:	mov    rdx,QWORD PTR [rbp-0x28]
  42f41e:	mov    QWORD PTR [rdx+0x28],rcx
  42f422:	mov    BYTE PTR [rax],0xa
  42f425:	mov    rax,QWORD PTR [rbp-0x28]
  42f429:	mov    rdi,rax
  42f42c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f431:	jmp    42f43f <flatcc_json_printer_uint8_vector_field@@Base+0x11b>
  42f433:	mov    rax,QWORD PTR [rbp-0x28]
  42f437:	mov    rdi,rax
  42f43a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f43f:	mov    rax,QWORD PTR [rbp-0x28]
  42f443:	mov    rbx,QWORD PTR [rax+0x28]
  42f447:	mov    rax,QWORD PTR [rbp-0x18]
  42f44b:	mov    rdi,rax
  42f44e:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  42f453:	movzx  eax,al
  42f456:	mov    rsi,rbx
  42f459:	mov    edi,eax
  42f45b:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42f460:	mov    ecx,eax
  42f462:	mov    rax,QWORD PTR [rbp-0x28]
  42f466:	mov    rdx,QWORD PTR [rax+0x28]
  42f46a:	movsxd rax,ecx
  42f46d:	add    rdx,rax
  42f470:	mov    rax,QWORD PTR [rbp-0x28]
  42f474:	mov    QWORD PTR [rax+0x28],rdx
  42f478:	mov    rax,QWORD PTR [rbp-0x18]
  42f47c:	add    rax,0x1
  42f480:	mov    QWORD PTR [rbp-0x18],rax
  42f484:	sub    DWORD PTR [rbp-0x1c],0x1
  42f488:	jmp    42f526 <flatcc_json_printer_uint8_vector_field@@Base+0x202>
  42f48d:	mov    rax,QWORD PTR [rbp-0x28]
  42f491:	mov    rax,QWORD PTR [rax+0x28]
  42f495:	lea    rcx,[rax+0x1]
  42f499:	mov    rdx,QWORD PTR [rbp-0x28]
  42f49d:	mov    QWORD PTR [rdx+0x28],rcx
  42f4a1:	mov    BYTE PTR [rax],0x2c
  42f4a4:	mov    rax,QWORD PTR [rbp-0x28]
  42f4a8:	movzx  eax,BYTE PTR [rax+0x31]
  42f4ac:	test   al,al
  42f4ae:	je     42f4d5 <flatcc_json_printer_uint8_vector_field@@Base+0x1b1>
  42f4b0:	mov    rax,QWORD PTR [rbp-0x28]
  42f4b4:	mov    rax,QWORD PTR [rax+0x28]
  42f4b8:	lea    rcx,[rax+0x1]
  42f4bc:	mov    rdx,QWORD PTR [rbp-0x28]
  42f4c0:	mov    QWORD PTR [rdx+0x28],rcx
  42f4c4:	mov    BYTE PTR [rax],0xa
  42f4c7:	mov    rax,QWORD PTR [rbp-0x28]
  42f4cb:	mov    rdi,rax
  42f4ce:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f4d3:	jmp    42f4e1 <flatcc_json_printer_uint8_vector_field@@Base+0x1bd>
  42f4d5:	mov    rax,QWORD PTR [rbp-0x28]
  42f4d9:	mov    rdi,rax
  42f4dc:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f4e1:	mov    rax,QWORD PTR [rbp-0x28]
  42f4e5:	mov    rbx,QWORD PTR [rax+0x28]
  42f4e9:	mov    rax,QWORD PTR [rbp-0x18]
  42f4ed:	mov    rdi,rax
  42f4f0:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  42f4f5:	movzx  eax,al
  42f4f8:	mov    rsi,rbx
  42f4fb:	mov    edi,eax
  42f4fd:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  42f502:	mov    ecx,eax
  42f504:	mov    rax,QWORD PTR [rbp-0x28]
  42f508:	mov    rdx,QWORD PTR [rax+0x28]
  42f50c:	movsxd rax,ecx
  42f50f:	add    rdx,rax
  42f512:	mov    rax,QWORD PTR [rbp-0x28]
  42f516:	mov    QWORD PTR [rax+0x28],rdx
  42f51a:	mov    rax,QWORD PTR [rbp-0x18]
  42f51e:	add    rax,0x1
  42f522:	mov    QWORD PTR [rbp-0x18],rax
  42f526:	mov    eax,DWORD PTR [rbp-0x1c]
  42f529:	lea    edx,[rax-0x1]
  42f52c:	mov    DWORD PTR [rbp-0x1c],edx
  42f52f:	test   eax,eax
  42f531:	jne    42f48d <flatcc_json_printer_uint8_vector_field@@Base+0x169>
  42f537:	mov    rax,QWORD PTR [rbp-0x28]
  42f53b:	movzx  eax,BYTE PTR [rax+0x31]
  42f53f:	test   al,al
  42f541:	je     42f577 <flatcc_json_printer_uint8_vector_field@@Base+0x253>
  42f543:	mov    rax,QWORD PTR [rbp-0x28]
  42f547:	mov    rax,QWORD PTR [rax+0x28]
  42f54b:	lea    rcx,[rax+0x1]
  42f54f:	mov    rdx,QWORD PTR [rbp-0x28]
  42f553:	mov    QWORD PTR [rdx+0x28],rcx
  42f557:	mov    BYTE PTR [rax],0xa
  42f55a:	mov    rax,QWORD PTR [rbp-0x28]
  42f55e:	mov    eax,DWORD PTR [rax+0x38]
  42f561:	lea    edx,[rax-0x1]
  42f564:	mov    rax,QWORD PTR [rbp-0x28]
  42f568:	mov    DWORD PTR [rax+0x38],edx
  42f56b:	mov    rax,QWORD PTR [rbp-0x28]
  42f56f:	mov    rdi,rax
  42f572:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f577:	mov    rax,QWORD PTR [rbp-0x28]
  42f57b:	mov    rax,QWORD PTR [rax+0x28]
  42f57f:	lea    rcx,[rax+0x1]
  42f583:	mov    rdx,QWORD PTR [rbp-0x28]
  42f587:	mov    QWORD PTR [rdx+0x28],rcx
  42f58b:	mov    BYTE PTR [rax],0x5d
  42f58e:	nop
  42f58f:	add    rsp,0x38
  42f593:	pop    rbx
  42f594:	pop    rbp
  42f595:	ret    

000000000042f596 <flatcc_json_printer_uint16_vector_field@@Base>:
  42f596:	push   rbp
  42f597:	mov    rbp,rsp
  42f59a:	push   rbx
  42f59b:	sub    rsp,0x38
  42f59f:	mov    QWORD PTR [rbp-0x28],rdi
  42f5a3:	mov    QWORD PTR [rbp-0x30],rsi
  42f5a7:	mov    DWORD PTR [rbp-0x34],edx
  42f5aa:	mov    QWORD PTR [rbp-0x40],rcx
  42f5ae:	mov    DWORD PTR [rbp-0x38],r8d
  42f5b2:	mov    edx,DWORD PTR [rbp-0x34]
  42f5b5:	mov    rax,QWORD PTR [rbp-0x30]
  42f5b9:	mov    esi,edx
  42f5bb:	mov    rdi,rax
  42f5be:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42f5c3:	mov    QWORD PTR [rbp-0x18],rax
  42f5c7:	cmp    QWORD PTR [rbp-0x18],0x0
  42f5cc:	je     42f800 <flatcc_json_printer_uint16_vector_field@@Base+0x26a>
  42f5d2:	mov    rax,QWORD PTR [rbp-0x30]
  42f5d6:	mov    eax,DWORD PTR [rax+0x18]
  42f5d9:	lea    ecx,[rax+0x1]
  42f5dc:	mov    rdx,QWORD PTR [rbp-0x30]
  42f5e0:	mov    DWORD PTR [rdx+0x18],ecx
  42f5e3:	test   eax,eax
  42f5e5:	je     42f5fe <flatcc_json_printer_uint16_vector_field@@Base+0x68>
  42f5e7:	mov    rax,QWORD PTR [rbp-0x28]
  42f5eb:	mov    rax,QWORD PTR [rax+0x28]
  42f5ef:	lea    rcx,[rax+0x1]
  42f5f3:	mov    rdx,QWORD PTR [rbp-0x28]
  42f5f7:	mov    QWORD PTR [rdx+0x28],rcx
  42f5fb:	mov    BYTE PTR [rax],0x2c
  42f5fe:	mov    rax,QWORD PTR [rbp-0x18]
  42f602:	mov    rdi,rax
  42f605:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42f60a:	mov    QWORD PTR [rbp-0x18],rax
  42f60e:	mov    rax,QWORD PTR [rbp-0x18]
  42f612:	mov    rdi,rax
  42f615:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42f61a:	mov    DWORD PTR [rbp-0x1c],eax
  42f61d:	mov    rax,QWORD PTR [rbp-0x18]
  42f621:	add    rax,0x4
  42f625:	mov    QWORD PTR [rbp-0x18],rax
  42f629:	mov    eax,DWORD PTR [rbp-0x38]
  42f62c:	movsxd rdx,eax
  42f62f:	mov    rcx,QWORD PTR [rbp-0x40]
  42f633:	mov    rax,QWORD PTR [rbp-0x28]
  42f637:	mov    rsi,rcx
  42f63a:	mov    rdi,rax
  42f63d:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42f642:	mov    rax,QWORD PTR [rbp-0x28]
  42f646:	mov    eax,DWORD PTR [rax+0x38]
  42f649:	lea    edx,[rax+0x1]
  42f64c:	mov    rax,QWORD PTR [rbp-0x28]
  42f650:	mov    DWORD PTR [rax+0x38],edx
  42f653:	mov    rax,QWORD PTR [rbp-0x28]
  42f657:	mov    rax,QWORD PTR [rax+0x28]
  42f65b:	lea    rcx,[rax+0x1]
  42f65f:	mov    rdx,QWORD PTR [rbp-0x28]
  42f663:	mov    QWORD PTR [rdx+0x28],rcx
  42f667:	mov    BYTE PTR [rax],0x5b
  42f66a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f66e:	je     42f798 <flatcc_json_printer_uint16_vector_field@@Base+0x202>
  42f674:	mov    rax,QWORD PTR [rbp-0x28]
  42f678:	movzx  eax,BYTE PTR [rax+0x31]
  42f67c:	test   al,al
  42f67e:	je     42f6a5 <flatcc_json_printer_uint16_vector_field@@Base+0x10f>
  42f680:	mov    rax,QWORD PTR [rbp-0x28]
  42f684:	mov    rax,QWORD PTR [rax+0x28]
  42f688:	lea    rcx,[rax+0x1]
  42f68c:	mov    rdx,QWORD PTR [rbp-0x28]
  42f690:	mov    QWORD PTR [rdx+0x28],rcx
  42f694:	mov    BYTE PTR [rax],0xa
  42f697:	mov    rax,QWORD PTR [rbp-0x28]
  42f69b:	mov    rdi,rax
  42f69e:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f6a3:	jmp    42f6b1 <flatcc_json_printer_uint16_vector_field@@Base+0x11b>
  42f6a5:	mov    rax,QWORD PTR [rbp-0x28]
  42f6a9:	mov    rdi,rax
  42f6ac:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f6b1:	mov    rax,QWORD PTR [rbp-0x28]
  42f6b5:	mov    rbx,QWORD PTR [rax+0x28]
  42f6b9:	mov    rax,QWORD PTR [rbp-0x18]
  42f6bd:	mov    rdi,rax
  42f6c0:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  42f6c5:	movzx  eax,ax
  42f6c8:	mov    rsi,rbx
  42f6cb:	mov    edi,eax
  42f6cd:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42f6d2:	mov    ecx,eax
  42f6d4:	mov    rax,QWORD PTR [rbp-0x28]
  42f6d8:	mov    rdx,QWORD PTR [rax+0x28]
  42f6dc:	movsxd rax,ecx
  42f6df:	add    rdx,rax
  42f6e2:	mov    rax,QWORD PTR [rbp-0x28]
  42f6e6:	mov    QWORD PTR [rax+0x28],rdx
  42f6ea:	mov    rax,QWORD PTR [rbp-0x18]
  42f6ee:	add    rax,0x2
  42f6f2:	mov    QWORD PTR [rbp-0x18],rax
  42f6f6:	sub    DWORD PTR [rbp-0x1c],0x1
  42f6fa:	jmp    42f798 <flatcc_json_printer_uint16_vector_field@@Base+0x202>
  42f6ff:	mov    rax,QWORD PTR [rbp-0x28]
  42f703:	mov    rax,QWORD PTR [rax+0x28]
  42f707:	lea    rcx,[rax+0x1]
  42f70b:	mov    rdx,QWORD PTR [rbp-0x28]
  42f70f:	mov    QWORD PTR [rdx+0x28],rcx
  42f713:	mov    BYTE PTR [rax],0x2c
  42f716:	mov    rax,QWORD PTR [rbp-0x28]
  42f71a:	movzx  eax,BYTE PTR [rax+0x31]
  42f71e:	test   al,al
  42f720:	je     42f747 <flatcc_json_printer_uint16_vector_field@@Base+0x1b1>
  42f722:	mov    rax,QWORD PTR [rbp-0x28]
  42f726:	mov    rax,QWORD PTR [rax+0x28]
  42f72a:	lea    rcx,[rax+0x1]
  42f72e:	mov    rdx,QWORD PTR [rbp-0x28]
  42f732:	mov    QWORD PTR [rdx+0x28],rcx
  42f736:	mov    BYTE PTR [rax],0xa
  42f739:	mov    rax,QWORD PTR [rbp-0x28]
  42f73d:	mov    rdi,rax
  42f740:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f745:	jmp    42f753 <flatcc_json_printer_uint16_vector_field@@Base+0x1bd>
  42f747:	mov    rax,QWORD PTR [rbp-0x28]
  42f74b:	mov    rdi,rax
  42f74e:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f753:	mov    rax,QWORD PTR [rbp-0x28]
  42f757:	mov    rbx,QWORD PTR [rax+0x28]
  42f75b:	mov    rax,QWORD PTR [rbp-0x18]
  42f75f:	mov    rdi,rax
  42f762:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  42f767:	movzx  eax,ax
  42f76a:	mov    rsi,rbx
  42f76d:	mov    edi,eax
  42f76f:	call   428d28 <flatcc_json_parser_struct_as_root@@Base+0x650>
  42f774:	mov    ecx,eax
  42f776:	mov    rax,QWORD PTR [rbp-0x28]
  42f77a:	mov    rdx,QWORD PTR [rax+0x28]
  42f77e:	movsxd rax,ecx
  42f781:	add    rdx,rax
  42f784:	mov    rax,QWORD PTR [rbp-0x28]
  42f788:	mov    QWORD PTR [rax+0x28],rdx
  42f78c:	mov    rax,QWORD PTR [rbp-0x18]
  42f790:	add    rax,0x2
  42f794:	mov    QWORD PTR [rbp-0x18],rax
  42f798:	mov    eax,DWORD PTR [rbp-0x1c]
  42f79b:	lea    edx,[rax-0x1]
  42f79e:	mov    DWORD PTR [rbp-0x1c],edx
  42f7a1:	test   eax,eax
  42f7a3:	jne    42f6ff <flatcc_json_printer_uint16_vector_field@@Base+0x169>
  42f7a9:	mov    rax,QWORD PTR [rbp-0x28]
  42f7ad:	movzx  eax,BYTE PTR [rax+0x31]
  42f7b1:	test   al,al
  42f7b3:	je     42f7e9 <flatcc_json_printer_uint16_vector_field@@Base+0x253>
  42f7b5:	mov    rax,QWORD PTR [rbp-0x28]
  42f7b9:	mov    rax,QWORD PTR [rax+0x28]
  42f7bd:	lea    rcx,[rax+0x1]
  42f7c1:	mov    rdx,QWORD PTR [rbp-0x28]
  42f7c5:	mov    QWORD PTR [rdx+0x28],rcx
  42f7c9:	mov    BYTE PTR [rax],0xa
  42f7cc:	mov    rax,QWORD PTR [rbp-0x28]
  42f7d0:	mov    eax,DWORD PTR [rax+0x38]
  42f7d3:	lea    edx,[rax-0x1]
  42f7d6:	mov    rax,QWORD PTR [rbp-0x28]
  42f7da:	mov    DWORD PTR [rax+0x38],edx
  42f7dd:	mov    rax,QWORD PTR [rbp-0x28]
  42f7e1:	mov    rdi,rax
  42f7e4:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f7e9:	mov    rax,QWORD PTR [rbp-0x28]
  42f7ed:	mov    rax,QWORD PTR [rax+0x28]
  42f7f1:	lea    rcx,[rax+0x1]
  42f7f5:	mov    rdx,QWORD PTR [rbp-0x28]
  42f7f9:	mov    QWORD PTR [rdx+0x28],rcx
  42f7fd:	mov    BYTE PTR [rax],0x5d
  42f800:	nop
  42f801:	add    rsp,0x38
  42f805:	pop    rbx
  42f806:	pop    rbp
  42f807:	ret    

000000000042f808 <flatcc_json_printer_uint32_vector_field@@Base>:
  42f808:	push   rbp
  42f809:	mov    rbp,rsp
  42f80c:	push   rbx
  42f80d:	sub    rsp,0x38
  42f811:	mov    QWORD PTR [rbp-0x28],rdi
  42f815:	mov    QWORD PTR [rbp-0x30],rsi
  42f819:	mov    DWORD PTR [rbp-0x34],edx
  42f81c:	mov    QWORD PTR [rbp-0x40],rcx
  42f820:	mov    DWORD PTR [rbp-0x38],r8d
  42f824:	mov    edx,DWORD PTR [rbp-0x34]
  42f827:	mov    rax,QWORD PTR [rbp-0x30]
  42f82b:	mov    esi,edx
  42f82d:	mov    rdi,rax
  42f830:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42f835:	mov    QWORD PTR [rbp-0x18],rax
  42f839:	cmp    QWORD PTR [rbp-0x18],0x0
  42f83e:	je     42fa6c <flatcc_json_printer_uint32_vector_field@@Base+0x264>
  42f844:	mov    rax,QWORD PTR [rbp-0x30]
  42f848:	mov    eax,DWORD PTR [rax+0x18]
  42f84b:	lea    ecx,[rax+0x1]
  42f84e:	mov    rdx,QWORD PTR [rbp-0x30]
  42f852:	mov    DWORD PTR [rdx+0x18],ecx
  42f855:	test   eax,eax
  42f857:	je     42f870 <flatcc_json_printer_uint32_vector_field@@Base+0x68>
  42f859:	mov    rax,QWORD PTR [rbp-0x28]
  42f85d:	mov    rax,QWORD PTR [rax+0x28]
  42f861:	lea    rcx,[rax+0x1]
  42f865:	mov    rdx,QWORD PTR [rbp-0x28]
  42f869:	mov    QWORD PTR [rdx+0x28],rcx
  42f86d:	mov    BYTE PTR [rax],0x2c
  42f870:	mov    rax,QWORD PTR [rbp-0x18]
  42f874:	mov    rdi,rax
  42f877:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42f87c:	mov    QWORD PTR [rbp-0x18],rax
  42f880:	mov    rax,QWORD PTR [rbp-0x18]
  42f884:	mov    rdi,rax
  42f887:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42f88c:	mov    DWORD PTR [rbp-0x1c],eax
  42f88f:	mov    rax,QWORD PTR [rbp-0x18]
  42f893:	add    rax,0x4
  42f897:	mov    QWORD PTR [rbp-0x18],rax
  42f89b:	mov    eax,DWORD PTR [rbp-0x38]
  42f89e:	movsxd rdx,eax
  42f8a1:	mov    rcx,QWORD PTR [rbp-0x40]
  42f8a5:	mov    rax,QWORD PTR [rbp-0x28]
  42f8a9:	mov    rsi,rcx
  42f8ac:	mov    rdi,rax
  42f8af:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42f8b4:	mov    rax,QWORD PTR [rbp-0x28]
  42f8b8:	mov    eax,DWORD PTR [rax+0x38]
  42f8bb:	lea    edx,[rax+0x1]
  42f8be:	mov    rax,QWORD PTR [rbp-0x28]
  42f8c2:	mov    DWORD PTR [rax+0x38],edx
  42f8c5:	mov    rax,QWORD PTR [rbp-0x28]
  42f8c9:	mov    rax,QWORD PTR [rax+0x28]
  42f8cd:	lea    rcx,[rax+0x1]
  42f8d1:	mov    rdx,QWORD PTR [rbp-0x28]
  42f8d5:	mov    QWORD PTR [rdx+0x28],rcx
  42f8d9:	mov    BYTE PTR [rax],0x5b
  42f8dc:	cmp    DWORD PTR [rbp-0x1c],0x0
  42f8e0:	je     42fa04 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
  42f8e6:	mov    rax,QWORD PTR [rbp-0x28]
  42f8ea:	movzx  eax,BYTE PTR [rax+0x31]
  42f8ee:	test   al,al
  42f8f0:	je     42f917 <flatcc_json_printer_uint32_vector_field@@Base+0x10f>
  42f8f2:	mov    rax,QWORD PTR [rbp-0x28]
  42f8f6:	mov    rax,QWORD PTR [rax+0x28]
  42f8fa:	lea    rcx,[rax+0x1]
  42f8fe:	mov    rdx,QWORD PTR [rbp-0x28]
  42f902:	mov    QWORD PTR [rdx+0x28],rcx
  42f906:	mov    BYTE PTR [rax],0xa
  42f909:	mov    rax,QWORD PTR [rbp-0x28]
  42f90d:	mov    rdi,rax
  42f910:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f915:	jmp    42f923 <flatcc_json_printer_uint32_vector_field@@Base+0x11b>
  42f917:	mov    rax,QWORD PTR [rbp-0x28]
  42f91b:	mov    rdi,rax
  42f91e:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f923:	mov    rax,QWORD PTR [rbp-0x28]
  42f927:	mov    rbx,QWORD PTR [rax+0x28]
  42f92b:	mov    rax,QWORD PTR [rbp-0x18]
  42f92f:	mov    rdi,rax
  42f932:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42f937:	mov    rsi,rbx
  42f93a:	mov    edi,eax
  42f93c:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42f941:	mov    ecx,eax
  42f943:	mov    rax,QWORD PTR [rbp-0x28]
  42f947:	mov    rdx,QWORD PTR [rax+0x28]
  42f94b:	movsxd rax,ecx
  42f94e:	add    rdx,rax
  42f951:	mov    rax,QWORD PTR [rbp-0x28]
  42f955:	mov    QWORD PTR [rax+0x28],rdx
  42f959:	mov    rax,QWORD PTR [rbp-0x18]
  42f95d:	add    rax,0x4
  42f961:	mov    QWORD PTR [rbp-0x18],rax
  42f965:	sub    DWORD PTR [rbp-0x1c],0x1
  42f969:	jmp    42fa04 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
  42f96e:	mov    rax,QWORD PTR [rbp-0x28]
  42f972:	mov    rax,QWORD PTR [rax+0x28]
  42f976:	lea    rcx,[rax+0x1]
  42f97a:	mov    rdx,QWORD PTR [rbp-0x28]
  42f97e:	mov    QWORD PTR [rdx+0x28],rcx
  42f982:	mov    BYTE PTR [rax],0x2c
  42f985:	mov    rax,QWORD PTR [rbp-0x28]
  42f989:	movzx  eax,BYTE PTR [rax+0x31]
  42f98d:	test   al,al
  42f98f:	je     42f9b6 <flatcc_json_printer_uint32_vector_field@@Base+0x1ae>
  42f991:	mov    rax,QWORD PTR [rbp-0x28]
  42f995:	mov    rax,QWORD PTR [rax+0x28]
  42f999:	lea    rcx,[rax+0x1]
  42f99d:	mov    rdx,QWORD PTR [rbp-0x28]
  42f9a1:	mov    QWORD PTR [rdx+0x28],rcx
  42f9a5:	mov    BYTE PTR [rax],0xa
  42f9a8:	mov    rax,QWORD PTR [rbp-0x28]
  42f9ac:	mov    rdi,rax
  42f9af:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42f9b4:	jmp    42f9c2 <flatcc_json_printer_uint32_vector_field@@Base+0x1ba>
  42f9b6:	mov    rax,QWORD PTR [rbp-0x28]
  42f9ba:	mov    rdi,rax
  42f9bd:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42f9c2:	mov    rax,QWORD PTR [rbp-0x28]
  42f9c6:	mov    rbx,QWORD PTR [rax+0x28]
  42f9ca:	mov    rax,QWORD PTR [rbp-0x18]
  42f9ce:	mov    rdi,rax
  42f9d1:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  42f9d6:	mov    rsi,rbx
  42f9d9:	mov    edi,eax
  42f9db:	call   428fc7 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42f9e0:	mov    ecx,eax
  42f9e2:	mov    rax,QWORD PTR [rbp-0x28]
  42f9e6:	mov    rdx,QWORD PTR [rax+0x28]
  42f9ea:	movsxd rax,ecx
  42f9ed:	add    rdx,rax
  42f9f0:	mov    rax,QWORD PTR [rbp-0x28]
  42f9f4:	mov    QWORD PTR [rax+0x28],rdx
  42f9f8:	mov    rax,QWORD PTR [rbp-0x18]
  42f9fc:	add    rax,0x4
  42fa00:	mov    QWORD PTR [rbp-0x18],rax
  42fa04:	mov    eax,DWORD PTR [rbp-0x1c]
  42fa07:	lea    edx,[rax-0x1]
  42fa0a:	mov    DWORD PTR [rbp-0x1c],edx
  42fa0d:	test   eax,eax
  42fa0f:	jne    42f96e <flatcc_json_printer_uint32_vector_field@@Base+0x166>
  42fa15:	mov    rax,QWORD PTR [rbp-0x28]
  42fa19:	movzx  eax,BYTE PTR [rax+0x31]
  42fa1d:	test   al,al
  42fa1f:	je     42fa55 <flatcc_json_printer_uint32_vector_field@@Base+0x24d>
  42fa21:	mov    rax,QWORD PTR [rbp-0x28]
  42fa25:	mov    rax,QWORD PTR [rax+0x28]
  42fa29:	lea    rcx,[rax+0x1]
  42fa2d:	mov    rdx,QWORD PTR [rbp-0x28]
  42fa31:	mov    QWORD PTR [rdx+0x28],rcx
  42fa35:	mov    BYTE PTR [rax],0xa
  42fa38:	mov    rax,QWORD PTR [rbp-0x28]
  42fa3c:	mov    eax,DWORD PTR [rax+0x38]
  42fa3f:	lea    edx,[rax-0x1]
  42fa42:	mov    rax,QWORD PTR [rbp-0x28]
  42fa46:	mov    DWORD PTR [rax+0x38],edx
  42fa49:	mov    rax,QWORD PTR [rbp-0x28]
  42fa4d:	mov    rdi,rax
  42fa50:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fa55:	mov    rax,QWORD PTR [rbp-0x28]
  42fa59:	mov    rax,QWORD PTR [rax+0x28]
  42fa5d:	lea    rcx,[rax+0x1]
  42fa61:	mov    rdx,QWORD PTR [rbp-0x28]
  42fa65:	mov    QWORD PTR [rdx+0x28],rcx
  42fa69:	mov    BYTE PTR [rax],0x5d
  42fa6c:	nop
  42fa6d:	add    rsp,0x38
  42fa71:	pop    rbx
  42fa72:	pop    rbp
  42fa73:	ret    

000000000042fa74 <flatcc_json_printer_uint64_vector_field@@Base>:
  42fa74:	push   rbp
  42fa75:	mov    rbp,rsp
  42fa78:	push   rbx
  42fa79:	sub    rsp,0x38
  42fa7d:	mov    QWORD PTR [rbp-0x28],rdi
  42fa81:	mov    QWORD PTR [rbp-0x30],rsi
  42fa85:	mov    DWORD PTR [rbp-0x34],edx
  42fa88:	mov    QWORD PTR [rbp-0x40],rcx
  42fa8c:	mov    DWORD PTR [rbp-0x38],r8d
  42fa90:	mov    edx,DWORD PTR [rbp-0x34]
  42fa93:	mov    rax,QWORD PTR [rbp-0x30]
  42fa97:	mov    esi,edx
  42fa99:	mov    rdi,rax
  42fa9c:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42faa1:	mov    QWORD PTR [rbp-0x18],rax
  42faa5:	cmp    QWORD PTR [rbp-0x18],0x0
  42faaa:	je     42fcda <flatcc_json_printer_uint64_vector_field@@Base+0x266>
  42fab0:	mov    rax,QWORD PTR [rbp-0x30]
  42fab4:	mov    eax,DWORD PTR [rax+0x18]
  42fab7:	lea    ecx,[rax+0x1]
  42faba:	mov    rdx,QWORD PTR [rbp-0x30]
  42fabe:	mov    DWORD PTR [rdx+0x18],ecx
  42fac1:	test   eax,eax
  42fac3:	je     42fadc <flatcc_json_printer_uint64_vector_field@@Base+0x68>
  42fac5:	mov    rax,QWORD PTR [rbp-0x28]
  42fac9:	mov    rax,QWORD PTR [rax+0x28]
  42facd:	lea    rcx,[rax+0x1]
  42fad1:	mov    rdx,QWORD PTR [rbp-0x28]
  42fad5:	mov    QWORD PTR [rdx+0x28],rcx
  42fad9:	mov    BYTE PTR [rax],0x2c
  42fadc:	mov    rax,QWORD PTR [rbp-0x18]
  42fae0:	mov    rdi,rax
  42fae3:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42fae8:	mov    QWORD PTR [rbp-0x18],rax
  42faec:	mov    rax,QWORD PTR [rbp-0x18]
  42faf0:	mov    rdi,rax
  42faf3:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42faf8:	mov    DWORD PTR [rbp-0x1c],eax
  42fafb:	mov    rax,QWORD PTR [rbp-0x18]
  42faff:	add    rax,0x4
  42fb03:	mov    QWORD PTR [rbp-0x18],rax
  42fb07:	mov    eax,DWORD PTR [rbp-0x38]
  42fb0a:	movsxd rdx,eax
  42fb0d:	mov    rcx,QWORD PTR [rbp-0x40]
  42fb11:	mov    rax,QWORD PTR [rbp-0x28]
  42fb15:	mov    rsi,rcx
  42fb18:	mov    rdi,rax
  42fb1b:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42fb20:	mov    rax,QWORD PTR [rbp-0x28]
  42fb24:	mov    eax,DWORD PTR [rax+0x38]
  42fb27:	lea    edx,[rax+0x1]
  42fb2a:	mov    rax,QWORD PTR [rbp-0x28]
  42fb2e:	mov    DWORD PTR [rax+0x38],edx
  42fb31:	mov    rax,QWORD PTR [rbp-0x28]
  42fb35:	mov    rax,QWORD PTR [rax+0x28]
  42fb39:	lea    rcx,[rax+0x1]
  42fb3d:	mov    rdx,QWORD PTR [rbp-0x28]
  42fb41:	mov    QWORD PTR [rdx+0x28],rcx
  42fb45:	mov    BYTE PTR [rax],0x5b
  42fb48:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fb4c:	je     42fc72 <flatcc_json_printer_uint64_vector_field@@Base+0x1fe>
  42fb52:	mov    rax,QWORD PTR [rbp-0x28]
  42fb56:	movzx  eax,BYTE PTR [rax+0x31]
  42fb5a:	test   al,al
  42fb5c:	je     42fb83 <flatcc_json_printer_uint64_vector_field@@Base+0x10f>
  42fb5e:	mov    rax,QWORD PTR [rbp-0x28]
  42fb62:	mov    rax,QWORD PTR [rax+0x28]
  42fb66:	lea    rcx,[rax+0x1]
  42fb6a:	mov    rdx,QWORD PTR [rbp-0x28]
  42fb6e:	mov    QWORD PTR [rdx+0x28],rcx
  42fb72:	mov    BYTE PTR [rax],0xa
  42fb75:	mov    rax,QWORD PTR [rbp-0x28]
  42fb79:	mov    rdi,rax
  42fb7c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fb81:	jmp    42fb8f <flatcc_json_printer_uint64_vector_field@@Base+0x11b>
  42fb83:	mov    rax,QWORD PTR [rbp-0x28]
  42fb87:	mov    rdi,rax
  42fb8a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42fb8f:	mov    rax,QWORD PTR [rbp-0x28]
  42fb93:	mov    rbx,QWORD PTR [rax+0x28]
  42fb97:	mov    rax,QWORD PTR [rbp-0x18]
  42fb9b:	mov    rdi,rax
  42fb9e:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42fba3:	mov    rsi,rbx
  42fba6:	mov    rdi,rax
  42fba9:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42fbae:	mov    ecx,eax
  42fbb0:	mov    rax,QWORD PTR [rbp-0x28]
  42fbb4:	mov    rdx,QWORD PTR [rax+0x28]
  42fbb8:	movsxd rax,ecx
  42fbbb:	add    rdx,rax
  42fbbe:	mov    rax,QWORD PTR [rbp-0x28]
  42fbc2:	mov    QWORD PTR [rax+0x28],rdx
  42fbc6:	mov    rax,QWORD PTR [rbp-0x18]
  42fbca:	add    rax,0x8
  42fbce:	mov    QWORD PTR [rbp-0x18],rax
  42fbd2:	sub    DWORD PTR [rbp-0x1c],0x1
  42fbd6:	jmp    42fc72 <flatcc_json_printer_uint64_vector_field@@Base+0x1fe>
  42fbdb:	mov    rax,QWORD PTR [rbp-0x28]
  42fbdf:	mov    rax,QWORD PTR [rax+0x28]
  42fbe3:	lea    rcx,[rax+0x1]
  42fbe7:	mov    rdx,QWORD PTR [rbp-0x28]
  42fbeb:	mov    QWORD PTR [rdx+0x28],rcx
  42fbef:	mov    BYTE PTR [rax],0x2c
  42fbf2:	mov    rax,QWORD PTR [rbp-0x28]
  42fbf6:	movzx  eax,BYTE PTR [rax+0x31]
  42fbfa:	test   al,al
  42fbfc:	je     42fc23 <flatcc_json_printer_uint64_vector_field@@Base+0x1af>
  42fbfe:	mov    rax,QWORD PTR [rbp-0x28]
  42fc02:	mov    rax,QWORD PTR [rax+0x28]
  42fc06:	lea    rcx,[rax+0x1]
  42fc0a:	mov    rdx,QWORD PTR [rbp-0x28]
  42fc0e:	mov    QWORD PTR [rdx+0x28],rcx
  42fc12:	mov    BYTE PTR [rax],0xa
  42fc15:	mov    rax,QWORD PTR [rbp-0x28]
  42fc19:	mov    rdi,rax
  42fc1c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fc21:	jmp    42fc2f <flatcc_json_printer_uint64_vector_field@@Base+0x1bb>
  42fc23:	mov    rax,QWORD PTR [rbp-0x28]
  42fc27:	mov    rdi,rax
  42fc2a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42fc2f:	mov    rax,QWORD PTR [rbp-0x28]
  42fc33:	mov    rbx,QWORD PTR [rax+0x28]
  42fc37:	mov    rax,QWORD PTR [rbp-0x18]
  42fc3b:	mov    rdi,rax
  42fc3e:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  42fc43:	mov    rsi,rbx
  42fc46:	mov    rdi,rax
  42fc49:	call   4293d7 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42fc4e:	mov    ecx,eax
  42fc50:	mov    rax,QWORD PTR [rbp-0x28]
  42fc54:	mov    rdx,QWORD PTR [rax+0x28]
  42fc58:	movsxd rax,ecx
  42fc5b:	add    rdx,rax
  42fc5e:	mov    rax,QWORD PTR [rbp-0x28]
  42fc62:	mov    QWORD PTR [rax+0x28],rdx
  42fc66:	mov    rax,QWORD PTR [rbp-0x18]
  42fc6a:	add    rax,0x8
  42fc6e:	mov    QWORD PTR [rbp-0x18],rax
  42fc72:	mov    eax,DWORD PTR [rbp-0x1c]
  42fc75:	lea    edx,[rax-0x1]
  42fc78:	mov    DWORD PTR [rbp-0x1c],edx
  42fc7b:	test   eax,eax
  42fc7d:	jne    42fbdb <flatcc_json_printer_uint64_vector_field@@Base+0x167>
  42fc83:	mov    rax,QWORD PTR [rbp-0x28]
  42fc87:	movzx  eax,BYTE PTR [rax+0x31]
  42fc8b:	test   al,al
  42fc8d:	je     42fcc3 <flatcc_json_printer_uint64_vector_field@@Base+0x24f>
  42fc8f:	mov    rax,QWORD PTR [rbp-0x28]
  42fc93:	mov    rax,QWORD PTR [rax+0x28]
  42fc97:	lea    rcx,[rax+0x1]
  42fc9b:	mov    rdx,QWORD PTR [rbp-0x28]
  42fc9f:	mov    QWORD PTR [rdx+0x28],rcx
  42fca3:	mov    BYTE PTR [rax],0xa
  42fca6:	mov    rax,QWORD PTR [rbp-0x28]
  42fcaa:	mov    eax,DWORD PTR [rax+0x38]
  42fcad:	lea    edx,[rax-0x1]
  42fcb0:	mov    rax,QWORD PTR [rbp-0x28]
  42fcb4:	mov    DWORD PTR [rax+0x38],edx
  42fcb7:	mov    rax,QWORD PTR [rbp-0x28]
  42fcbb:	mov    rdi,rax
  42fcbe:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fcc3:	mov    rax,QWORD PTR [rbp-0x28]
  42fcc7:	mov    rax,QWORD PTR [rax+0x28]
  42fccb:	lea    rcx,[rax+0x1]
  42fccf:	mov    rdx,QWORD PTR [rbp-0x28]
  42fcd3:	mov    QWORD PTR [rdx+0x28],rcx
  42fcd7:	mov    BYTE PTR [rax],0x5d
  42fcda:	nop
  42fcdb:	add    rsp,0x38
  42fcdf:	pop    rbx
  42fce0:	pop    rbp
  42fce1:	ret    

000000000042fce2 <flatcc_json_printer_int8_vector_field@@Base>:
  42fce2:	push   rbp
  42fce3:	mov    rbp,rsp
  42fce6:	push   rbx
  42fce7:	sub    rsp,0x38
  42fceb:	mov    QWORD PTR [rbp-0x28],rdi
  42fcef:	mov    QWORD PTR [rbp-0x30],rsi
  42fcf3:	mov    DWORD PTR [rbp-0x34],edx
  42fcf6:	mov    QWORD PTR [rbp-0x40],rcx
  42fcfa:	mov    DWORD PTR [rbp-0x38],r8d
  42fcfe:	mov    edx,DWORD PTR [rbp-0x34]
  42fd01:	mov    rax,QWORD PTR [rbp-0x30]
  42fd05:	mov    esi,edx
  42fd07:	mov    rdi,rax
  42fd0a:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42fd0f:	mov    QWORD PTR [rbp-0x18],rax
  42fd13:	cmp    QWORD PTR [rbp-0x18],0x0
  42fd18:	je     42ff4c <flatcc_json_printer_int8_vector_field@@Base+0x26a>
  42fd1e:	mov    rax,QWORD PTR [rbp-0x30]
  42fd22:	mov    eax,DWORD PTR [rax+0x18]
  42fd25:	lea    ecx,[rax+0x1]
  42fd28:	mov    rdx,QWORD PTR [rbp-0x30]
  42fd2c:	mov    DWORD PTR [rdx+0x18],ecx
  42fd2f:	test   eax,eax
  42fd31:	je     42fd4a <flatcc_json_printer_int8_vector_field@@Base+0x68>
  42fd33:	mov    rax,QWORD PTR [rbp-0x28]
  42fd37:	mov    rax,QWORD PTR [rax+0x28]
  42fd3b:	lea    rcx,[rax+0x1]
  42fd3f:	mov    rdx,QWORD PTR [rbp-0x28]
  42fd43:	mov    QWORD PTR [rdx+0x28],rcx
  42fd47:	mov    BYTE PTR [rax],0x2c
  42fd4a:	mov    rax,QWORD PTR [rbp-0x18]
  42fd4e:	mov    rdi,rax
  42fd51:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42fd56:	mov    QWORD PTR [rbp-0x18],rax
  42fd5a:	mov    rax,QWORD PTR [rbp-0x18]
  42fd5e:	mov    rdi,rax
  42fd61:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42fd66:	mov    DWORD PTR [rbp-0x1c],eax
  42fd69:	mov    rax,QWORD PTR [rbp-0x18]
  42fd6d:	add    rax,0x4
  42fd71:	mov    QWORD PTR [rbp-0x18],rax
  42fd75:	mov    eax,DWORD PTR [rbp-0x38]
  42fd78:	movsxd rdx,eax
  42fd7b:	mov    rcx,QWORD PTR [rbp-0x40]
  42fd7f:	mov    rax,QWORD PTR [rbp-0x28]
  42fd83:	mov    rsi,rcx
  42fd86:	mov    rdi,rax
  42fd89:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  42fd8e:	mov    rax,QWORD PTR [rbp-0x28]
  42fd92:	mov    eax,DWORD PTR [rax+0x38]
  42fd95:	lea    edx,[rax+0x1]
  42fd98:	mov    rax,QWORD PTR [rbp-0x28]
  42fd9c:	mov    DWORD PTR [rax+0x38],edx
  42fd9f:	mov    rax,QWORD PTR [rbp-0x28]
  42fda3:	mov    rax,QWORD PTR [rax+0x28]
  42fda7:	lea    rcx,[rax+0x1]
  42fdab:	mov    rdx,QWORD PTR [rbp-0x28]
  42fdaf:	mov    QWORD PTR [rdx+0x28],rcx
  42fdb3:	mov    BYTE PTR [rax],0x5b
  42fdb6:	cmp    DWORD PTR [rbp-0x1c],0x0
  42fdba:	je     42fee4 <flatcc_json_printer_int8_vector_field@@Base+0x202>
  42fdc0:	mov    rax,QWORD PTR [rbp-0x28]
  42fdc4:	movzx  eax,BYTE PTR [rax+0x31]
  42fdc8:	test   al,al
  42fdca:	je     42fdf1 <flatcc_json_printer_int8_vector_field@@Base+0x10f>
  42fdcc:	mov    rax,QWORD PTR [rbp-0x28]
  42fdd0:	mov    rax,QWORD PTR [rax+0x28]
  42fdd4:	lea    rcx,[rax+0x1]
  42fdd8:	mov    rdx,QWORD PTR [rbp-0x28]
  42fddc:	mov    QWORD PTR [rdx+0x28],rcx
  42fde0:	mov    BYTE PTR [rax],0xa
  42fde3:	mov    rax,QWORD PTR [rbp-0x28]
  42fde7:	mov    rdi,rax
  42fdea:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fdef:	jmp    42fdfd <flatcc_json_printer_int8_vector_field@@Base+0x11b>
  42fdf1:	mov    rax,QWORD PTR [rbp-0x28]
  42fdf5:	mov    rdi,rax
  42fdf8:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42fdfd:	mov    rax,QWORD PTR [rbp-0x28]
  42fe01:	mov    rbx,QWORD PTR [rax+0x28]
  42fe05:	mov    rax,QWORD PTR [rbp-0x18]
  42fe09:	mov    rdi,rax
  42fe0c:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  42fe11:	movsx  eax,al
  42fe14:	mov    rsi,rbx
  42fe17:	mov    edi,eax
  42fe19:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42fe1e:	mov    ecx,eax
  42fe20:	mov    rax,QWORD PTR [rbp-0x28]
  42fe24:	mov    rdx,QWORD PTR [rax+0x28]
  42fe28:	movsxd rax,ecx
  42fe2b:	add    rdx,rax
  42fe2e:	mov    rax,QWORD PTR [rbp-0x28]
  42fe32:	mov    QWORD PTR [rax+0x28],rdx
  42fe36:	mov    rax,QWORD PTR [rbp-0x18]
  42fe3a:	add    rax,0x1
  42fe3e:	mov    QWORD PTR [rbp-0x18],rax
  42fe42:	sub    DWORD PTR [rbp-0x1c],0x1
  42fe46:	jmp    42fee4 <flatcc_json_printer_int8_vector_field@@Base+0x202>
  42fe4b:	mov    rax,QWORD PTR [rbp-0x28]
  42fe4f:	mov    rax,QWORD PTR [rax+0x28]
  42fe53:	lea    rcx,[rax+0x1]
  42fe57:	mov    rdx,QWORD PTR [rbp-0x28]
  42fe5b:	mov    QWORD PTR [rdx+0x28],rcx
  42fe5f:	mov    BYTE PTR [rax],0x2c
  42fe62:	mov    rax,QWORD PTR [rbp-0x28]
  42fe66:	movzx  eax,BYTE PTR [rax+0x31]
  42fe6a:	test   al,al
  42fe6c:	je     42fe93 <flatcc_json_printer_int8_vector_field@@Base+0x1b1>
  42fe6e:	mov    rax,QWORD PTR [rbp-0x28]
  42fe72:	mov    rax,QWORD PTR [rax+0x28]
  42fe76:	lea    rcx,[rax+0x1]
  42fe7a:	mov    rdx,QWORD PTR [rbp-0x28]
  42fe7e:	mov    QWORD PTR [rdx+0x28],rcx
  42fe82:	mov    BYTE PTR [rax],0xa
  42fe85:	mov    rax,QWORD PTR [rbp-0x28]
  42fe89:	mov    rdi,rax
  42fe8c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42fe91:	jmp    42fe9f <flatcc_json_printer_int8_vector_field@@Base+0x1bd>
  42fe93:	mov    rax,QWORD PTR [rbp-0x28]
  42fe97:	mov    rdi,rax
  42fe9a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  42fe9f:	mov    rax,QWORD PTR [rbp-0x28]
  42fea3:	mov    rbx,QWORD PTR [rax+0x28]
  42fea7:	mov    rax,QWORD PTR [rbp-0x18]
  42feab:	mov    rdi,rax
  42feae:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  42feb3:	movsx  eax,al
  42feb6:	mov    rsi,rbx
  42feb9:	mov    edi,eax
  42febb:	call   429dac <flatcc_json_parser_struct_as_root@@Base+0x16d4>
  42fec0:	mov    ecx,eax
  42fec2:	mov    rax,QWORD PTR [rbp-0x28]
  42fec6:	mov    rdx,QWORD PTR [rax+0x28]
  42feca:	movsxd rax,ecx
  42fecd:	add    rdx,rax
  42fed0:	mov    rax,QWORD PTR [rbp-0x28]
  42fed4:	mov    QWORD PTR [rax+0x28],rdx
  42fed8:	mov    rax,QWORD PTR [rbp-0x18]
  42fedc:	add    rax,0x1
  42fee0:	mov    QWORD PTR [rbp-0x18],rax
  42fee4:	mov    eax,DWORD PTR [rbp-0x1c]
  42fee7:	lea    edx,[rax-0x1]
  42feea:	mov    DWORD PTR [rbp-0x1c],edx
  42feed:	test   eax,eax
  42feef:	jne    42fe4b <flatcc_json_printer_int8_vector_field@@Base+0x169>
  42fef5:	mov    rax,QWORD PTR [rbp-0x28]
  42fef9:	movzx  eax,BYTE PTR [rax+0x31]
  42fefd:	test   al,al
  42feff:	je     42ff35 <flatcc_json_printer_int8_vector_field@@Base+0x253>
  42ff01:	mov    rax,QWORD PTR [rbp-0x28]
  42ff05:	mov    rax,QWORD PTR [rax+0x28]
  42ff09:	lea    rcx,[rax+0x1]
  42ff0d:	mov    rdx,QWORD PTR [rbp-0x28]
  42ff11:	mov    QWORD PTR [rdx+0x28],rcx
  42ff15:	mov    BYTE PTR [rax],0xa
  42ff18:	mov    rax,QWORD PTR [rbp-0x28]
  42ff1c:	mov    eax,DWORD PTR [rax+0x38]
  42ff1f:	lea    edx,[rax-0x1]
  42ff22:	mov    rax,QWORD PTR [rbp-0x28]
  42ff26:	mov    DWORD PTR [rax+0x38],edx
  42ff29:	mov    rax,QWORD PTR [rbp-0x28]
  42ff2d:	mov    rdi,rax
  42ff30:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  42ff35:	mov    rax,QWORD PTR [rbp-0x28]
  42ff39:	mov    rax,QWORD PTR [rax+0x28]
  42ff3d:	lea    rcx,[rax+0x1]
  42ff41:	mov    rdx,QWORD PTR [rbp-0x28]
  42ff45:	mov    QWORD PTR [rdx+0x28],rcx
  42ff49:	mov    BYTE PTR [rax],0x5d
  42ff4c:	nop
  42ff4d:	add    rsp,0x38
  42ff51:	pop    rbx
  42ff52:	pop    rbp
  42ff53:	ret    

000000000042ff54 <flatcc_json_printer_int16_vector_field@@Base>:
  42ff54:	push   rbp
  42ff55:	mov    rbp,rsp
  42ff58:	push   rbx
  42ff59:	sub    rsp,0x38
  42ff5d:	mov    QWORD PTR [rbp-0x28],rdi
  42ff61:	mov    QWORD PTR [rbp-0x30],rsi
  42ff65:	mov    DWORD PTR [rbp-0x34],edx
  42ff68:	mov    QWORD PTR [rbp-0x40],rcx
  42ff6c:	mov    DWORD PTR [rbp-0x38],r8d
  42ff70:	mov    edx,DWORD PTR [rbp-0x34]
  42ff73:	mov    rax,QWORD PTR [rbp-0x30]
  42ff77:	mov    esi,edx
  42ff79:	mov    rdi,rax
  42ff7c:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  42ff81:	mov    QWORD PTR [rbp-0x18],rax
  42ff85:	cmp    QWORD PTR [rbp-0x18],0x0
  42ff8a:	je     4301ba <flatcc_json_printer_int16_vector_field@@Base+0x266>
  42ff90:	mov    rax,QWORD PTR [rbp-0x30]
  42ff94:	mov    eax,DWORD PTR [rax+0x18]
  42ff97:	lea    ecx,[rax+0x1]
  42ff9a:	mov    rdx,QWORD PTR [rbp-0x30]
  42ff9e:	mov    DWORD PTR [rdx+0x18],ecx
  42ffa1:	test   eax,eax
  42ffa3:	je     42ffbc <flatcc_json_printer_int16_vector_field@@Base+0x68>
  42ffa5:	mov    rax,QWORD PTR [rbp-0x28]
  42ffa9:	mov    rax,QWORD PTR [rax+0x28]
  42ffad:	lea    rcx,[rax+0x1]
  42ffb1:	mov    rdx,QWORD PTR [rbp-0x28]
  42ffb5:	mov    QWORD PTR [rdx+0x28],rcx
  42ffb9:	mov    BYTE PTR [rax],0x2c
  42ffbc:	mov    rax,QWORD PTR [rbp-0x18]
  42ffc0:	mov    rdi,rax
  42ffc3:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  42ffc8:	mov    QWORD PTR [rbp-0x18],rax
  42ffcc:	mov    rax,QWORD PTR [rbp-0x18]
  42ffd0:	mov    rdi,rax
  42ffd3:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  42ffd8:	mov    DWORD PTR [rbp-0x1c],eax
  42ffdb:	mov    rax,QWORD PTR [rbp-0x18]
  42ffdf:	add    rax,0x4
  42ffe3:	mov    QWORD PTR [rbp-0x18],rax
  42ffe7:	mov    eax,DWORD PTR [rbp-0x38]
  42ffea:	movsxd rdx,eax
  42ffed:	mov    rcx,QWORD PTR [rbp-0x40]
  42fff1:	mov    rax,QWORD PTR [rbp-0x28]
  42fff5:	mov    rsi,rcx
  42fff8:	mov    rdi,rax
  42fffb:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  430000:	mov    rax,QWORD PTR [rbp-0x28]
  430004:	mov    eax,DWORD PTR [rax+0x38]
  430007:	lea    edx,[rax+0x1]
  43000a:	mov    rax,QWORD PTR [rbp-0x28]
  43000e:	mov    DWORD PTR [rax+0x38],edx
  430011:	mov    rax,QWORD PTR [rbp-0x28]
  430015:	mov    rax,QWORD PTR [rax+0x28]
  430019:	lea    rcx,[rax+0x1]
  43001d:	mov    rdx,QWORD PTR [rbp-0x28]
  430021:	mov    QWORD PTR [rdx+0x28],rcx
  430025:	mov    BYTE PTR [rax],0x5b
  430028:	cmp    DWORD PTR [rbp-0x1c],0x0
  43002c:	je     430152 <flatcc_json_printer_int16_vector_field@@Base+0x1fe>
  430032:	mov    rax,QWORD PTR [rbp-0x28]
  430036:	movzx  eax,BYTE PTR [rax+0x31]
  43003a:	test   al,al
  43003c:	je     430063 <flatcc_json_printer_int16_vector_field@@Base+0x10f>
  43003e:	mov    rax,QWORD PTR [rbp-0x28]
  430042:	mov    rax,QWORD PTR [rax+0x28]
  430046:	lea    rcx,[rax+0x1]
  43004a:	mov    rdx,QWORD PTR [rbp-0x28]
  43004e:	mov    QWORD PTR [rdx+0x28],rcx
  430052:	mov    BYTE PTR [rax],0xa
  430055:	mov    rax,QWORD PTR [rbp-0x28]
  430059:	mov    rdi,rax
  43005c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430061:	jmp    43006f <flatcc_json_printer_int16_vector_field@@Base+0x11b>
  430063:	mov    rax,QWORD PTR [rbp-0x28]
  430067:	mov    rdi,rax
  43006a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43006f:	mov    rax,QWORD PTR [rbp-0x28]
  430073:	mov    rbx,QWORD PTR [rax+0x28]
  430077:	mov    rax,QWORD PTR [rbp-0x18]
  43007b:	mov    rdi,rax
  43007e:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  430083:	cwde   
  430084:	mov    rsi,rbx
  430087:	mov    edi,eax
  430089:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  43008e:	mov    ecx,eax
  430090:	mov    rax,QWORD PTR [rbp-0x28]
  430094:	mov    rdx,QWORD PTR [rax+0x28]
  430098:	movsxd rax,ecx
  43009b:	add    rdx,rax
  43009e:	mov    rax,QWORD PTR [rbp-0x28]
  4300a2:	mov    QWORD PTR [rax+0x28],rdx
  4300a6:	mov    rax,QWORD PTR [rbp-0x18]
  4300aa:	add    rax,0x2
  4300ae:	mov    QWORD PTR [rbp-0x18],rax
  4300b2:	sub    DWORD PTR [rbp-0x1c],0x1
  4300b6:	jmp    430152 <flatcc_json_printer_int16_vector_field@@Base+0x1fe>
  4300bb:	mov    rax,QWORD PTR [rbp-0x28]
  4300bf:	mov    rax,QWORD PTR [rax+0x28]
  4300c3:	lea    rcx,[rax+0x1]
  4300c7:	mov    rdx,QWORD PTR [rbp-0x28]
  4300cb:	mov    QWORD PTR [rdx+0x28],rcx
  4300cf:	mov    BYTE PTR [rax],0x2c
  4300d2:	mov    rax,QWORD PTR [rbp-0x28]
  4300d6:	movzx  eax,BYTE PTR [rax+0x31]
  4300da:	test   al,al
  4300dc:	je     430103 <flatcc_json_printer_int16_vector_field@@Base+0x1af>
  4300de:	mov    rax,QWORD PTR [rbp-0x28]
  4300e2:	mov    rax,QWORD PTR [rax+0x28]
  4300e6:	lea    rcx,[rax+0x1]
  4300ea:	mov    rdx,QWORD PTR [rbp-0x28]
  4300ee:	mov    QWORD PTR [rdx+0x28],rcx
  4300f2:	mov    BYTE PTR [rax],0xa
  4300f5:	mov    rax,QWORD PTR [rbp-0x28]
  4300f9:	mov    rdi,rax
  4300fc:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430101:	jmp    43010f <flatcc_json_printer_int16_vector_field@@Base+0x1bb>
  430103:	mov    rax,QWORD PTR [rbp-0x28]
  430107:	mov    rdi,rax
  43010a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43010f:	mov    rax,QWORD PTR [rbp-0x28]
  430113:	mov    rbx,QWORD PTR [rax+0x28]
  430117:	mov    rax,QWORD PTR [rbp-0x18]
  43011b:	mov    rdi,rax
  43011e:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  430123:	cwde   
  430124:	mov    rsi,rbx
  430127:	mov    edi,eax
  430129:	call   429e06 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  43012e:	mov    ecx,eax
  430130:	mov    rax,QWORD PTR [rbp-0x28]
  430134:	mov    rdx,QWORD PTR [rax+0x28]
  430138:	movsxd rax,ecx
  43013b:	add    rdx,rax
  43013e:	mov    rax,QWORD PTR [rbp-0x28]
  430142:	mov    QWORD PTR [rax+0x28],rdx
  430146:	mov    rax,QWORD PTR [rbp-0x18]
  43014a:	add    rax,0x2
  43014e:	mov    QWORD PTR [rbp-0x18],rax
  430152:	mov    eax,DWORD PTR [rbp-0x1c]
  430155:	lea    edx,[rax-0x1]
  430158:	mov    DWORD PTR [rbp-0x1c],edx
  43015b:	test   eax,eax
  43015d:	jne    4300bb <flatcc_json_printer_int16_vector_field@@Base+0x167>
  430163:	mov    rax,QWORD PTR [rbp-0x28]
  430167:	movzx  eax,BYTE PTR [rax+0x31]
  43016b:	test   al,al
  43016d:	je     4301a3 <flatcc_json_printer_int16_vector_field@@Base+0x24f>
  43016f:	mov    rax,QWORD PTR [rbp-0x28]
  430173:	mov    rax,QWORD PTR [rax+0x28]
  430177:	lea    rcx,[rax+0x1]
  43017b:	mov    rdx,QWORD PTR [rbp-0x28]
  43017f:	mov    QWORD PTR [rdx+0x28],rcx
  430183:	mov    BYTE PTR [rax],0xa
  430186:	mov    rax,QWORD PTR [rbp-0x28]
  43018a:	mov    eax,DWORD PTR [rax+0x38]
  43018d:	lea    edx,[rax-0x1]
  430190:	mov    rax,QWORD PTR [rbp-0x28]
  430194:	mov    DWORD PTR [rax+0x38],edx
  430197:	mov    rax,QWORD PTR [rbp-0x28]
  43019b:	mov    rdi,rax
  43019e:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4301a3:	mov    rax,QWORD PTR [rbp-0x28]
  4301a7:	mov    rax,QWORD PTR [rax+0x28]
  4301ab:	lea    rcx,[rax+0x1]
  4301af:	mov    rdx,QWORD PTR [rbp-0x28]
  4301b3:	mov    QWORD PTR [rdx+0x28],rcx
  4301b7:	mov    BYTE PTR [rax],0x5d
  4301ba:	nop
  4301bb:	add    rsp,0x38
  4301bf:	pop    rbx
  4301c0:	pop    rbp
  4301c1:	ret    

00000000004301c2 <flatcc_json_printer_int32_vector_field@@Base>:
  4301c2:	push   rbp
  4301c3:	mov    rbp,rsp
  4301c6:	push   rbx
  4301c7:	sub    rsp,0x38
  4301cb:	mov    QWORD PTR [rbp-0x28],rdi
  4301cf:	mov    QWORD PTR [rbp-0x30],rsi
  4301d3:	mov    DWORD PTR [rbp-0x34],edx
  4301d6:	mov    QWORD PTR [rbp-0x40],rcx
  4301da:	mov    DWORD PTR [rbp-0x38],r8d
  4301de:	mov    edx,DWORD PTR [rbp-0x34]
  4301e1:	mov    rax,QWORD PTR [rbp-0x30]
  4301e5:	mov    esi,edx
  4301e7:	mov    rdi,rax
  4301ea:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4301ef:	mov    QWORD PTR [rbp-0x18],rax
  4301f3:	cmp    QWORD PTR [rbp-0x18],0x0
  4301f8:	je     430426 <flatcc_json_printer_int32_vector_field@@Base+0x264>
  4301fe:	mov    rax,QWORD PTR [rbp-0x30]
  430202:	mov    eax,DWORD PTR [rax+0x18]
  430205:	lea    ecx,[rax+0x1]
  430208:	mov    rdx,QWORD PTR [rbp-0x30]
  43020c:	mov    DWORD PTR [rdx+0x18],ecx
  43020f:	test   eax,eax
  430211:	je     43022a <flatcc_json_printer_int32_vector_field@@Base+0x68>
  430213:	mov    rax,QWORD PTR [rbp-0x28]
  430217:	mov    rax,QWORD PTR [rax+0x28]
  43021b:	lea    rcx,[rax+0x1]
  43021f:	mov    rdx,QWORD PTR [rbp-0x28]
  430223:	mov    QWORD PTR [rdx+0x28],rcx
  430227:	mov    BYTE PTR [rax],0x2c
  43022a:	mov    rax,QWORD PTR [rbp-0x18]
  43022e:	mov    rdi,rax
  430231:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  430236:	mov    QWORD PTR [rbp-0x18],rax
  43023a:	mov    rax,QWORD PTR [rbp-0x18]
  43023e:	mov    rdi,rax
  430241:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430246:	mov    DWORD PTR [rbp-0x1c],eax
  430249:	mov    rax,QWORD PTR [rbp-0x18]
  43024d:	add    rax,0x4
  430251:	mov    QWORD PTR [rbp-0x18],rax
  430255:	mov    eax,DWORD PTR [rbp-0x38]
  430258:	movsxd rdx,eax
  43025b:	mov    rcx,QWORD PTR [rbp-0x40]
  43025f:	mov    rax,QWORD PTR [rbp-0x28]
  430263:	mov    rsi,rcx
  430266:	mov    rdi,rax
  430269:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  43026e:	mov    rax,QWORD PTR [rbp-0x28]
  430272:	mov    eax,DWORD PTR [rax+0x38]
  430275:	lea    edx,[rax+0x1]
  430278:	mov    rax,QWORD PTR [rbp-0x28]
  43027c:	mov    DWORD PTR [rax+0x38],edx
  43027f:	mov    rax,QWORD PTR [rbp-0x28]
  430283:	mov    rax,QWORD PTR [rax+0x28]
  430287:	lea    rcx,[rax+0x1]
  43028b:	mov    rdx,QWORD PTR [rbp-0x28]
  43028f:	mov    QWORD PTR [rdx+0x28],rcx
  430293:	mov    BYTE PTR [rax],0x5b
  430296:	cmp    DWORD PTR [rbp-0x1c],0x0
  43029a:	je     4303be <flatcc_json_printer_int32_vector_field@@Base+0x1fc>
  4302a0:	mov    rax,QWORD PTR [rbp-0x28]
  4302a4:	movzx  eax,BYTE PTR [rax+0x31]
  4302a8:	test   al,al
  4302aa:	je     4302d1 <flatcc_json_printer_int32_vector_field@@Base+0x10f>
  4302ac:	mov    rax,QWORD PTR [rbp-0x28]
  4302b0:	mov    rax,QWORD PTR [rax+0x28]
  4302b4:	lea    rcx,[rax+0x1]
  4302b8:	mov    rdx,QWORD PTR [rbp-0x28]
  4302bc:	mov    QWORD PTR [rdx+0x28],rcx
  4302c0:	mov    BYTE PTR [rax],0xa
  4302c3:	mov    rax,QWORD PTR [rbp-0x28]
  4302c7:	mov    rdi,rax
  4302ca:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4302cf:	jmp    4302dd <flatcc_json_printer_int32_vector_field@@Base+0x11b>
  4302d1:	mov    rax,QWORD PTR [rbp-0x28]
  4302d5:	mov    rdi,rax
  4302d8:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4302dd:	mov    rax,QWORD PTR [rbp-0x28]
  4302e1:	mov    rbx,QWORD PTR [rax+0x28]
  4302e5:	mov    rax,QWORD PTR [rbp-0x18]
  4302e9:	mov    rdi,rax
  4302ec:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  4302f1:	mov    rsi,rbx
  4302f4:	mov    edi,eax
  4302f6:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  4302fb:	mov    ecx,eax
  4302fd:	mov    rax,QWORD PTR [rbp-0x28]
  430301:	mov    rdx,QWORD PTR [rax+0x28]
  430305:	movsxd rax,ecx
  430308:	add    rdx,rax
  43030b:	mov    rax,QWORD PTR [rbp-0x28]
  43030f:	mov    QWORD PTR [rax+0x28],rdx
  430313:	mov    rax,QWORD PTR [rbp-0x18]
  430317:	add    rax,0x4
  43031b:	mov    QWORD PTR [rbp-0x18],rax
  43031f:	sub    DWORD PTR [rbp-0x1c],0x1
  430323:	jmp    4303be <flatcc_json_printer_int32_vector_field@@Base+0x1fc>
  430328:	mov    rax,QWORD PTR [rbp-0x28]
  43032c:	mov    rax,QWORD PTR [rax+0x28]
  430330:	lea    rcx,[rax+0x1]
  430334:	mov    rdx,QWORD PTR [rbp-0x28]
  430338:	mov    QWORD PTR [rdx+0x28],rcx
  43033c:	mov    BYTE PTR [rax],0x2c
  43033f:	mov    rax,QWORD PTR [rbp-0x28]
  430343:	movzx  eax,BYTE PTR [rax+0x31]
  430347:	test   al,al
  430349:	je     430370 <flatcc_json_printer_int32_vector_field@@Base+0x1ae>
  43034b:	mov    rax,QWORD PTR [rbp-0x28]
  43034f:	mov    rax,QWORD PTR [rax+0x28]
  430353:	lea    rcx,[rax+0x1]
  430357:	mov    rdx,QWORD PTR [rbp-0x28]
  43035b:	mov    QWORD PTR [rdx+0x28],rcx
  43035f:	mov    BYTE PTR [rax],0xa
  430362:	mov    rax,QWORD PTR [rbp-0x28]
  430366:	mov    rdi,rax
  430369:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43036e:	jmp    43037c <flatcc_json_printer_int32_vector_field@@Base+0x1ba>
  430370:	mov    rax,QWORD PTR [rbp-0x28]
  430374:	mov    rdi,rax
  430377:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43037c:	mov    rax,QWORD PTR [rbp-0x28]
  430380:	mov    rbx,QWORD PTR [rax+0x28]
  430384:	mov    rax,QWORD PTR [rbp-0x18]
  430388:	mov    rdi,rax
  43038b:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  430390:	mov    rsi,rbx
  430393:	mov    edi,eax
  430395:	call   429e63 <flatcc_json_parser_struct_as_root@@Base+0x178b>
  43039a:	mov    ecx,eax
  43039c:	mov    rax,QWORD PTR [rbp-0x28]
  4303a0:	mov    rdx,QWORD PTR [rax+0x28]
  4303a4:	movsxd rax,ecx
  4303a7:	add    rdx,rax
  4303aa:	mov    rax,QWORD PTR [rbp-0x28]
  4303ae:	mov    QWORD PTR [rax+0x28],rdx
  4303b2:	mov    rax,QWORD PTR [rbp-0x18]
  4303b6:	add    rax,0x4
  4303ba:	mov    QWORD PTR [rbp-0x18],rax
  4303be:	mov    eax,DWORD PTR [rbp-0x1c]
  4303c1:	lea    edx,[rax-0x1]
  4303c4:	mov    DWORD PTR [rbp-0x1c],edx
  4303c7:	test   eax,eax
  4303c9:	jne    430328 <flatcc_json_printer_int32_vector_field@@Base+0x166>
  4303cf:	mov    rax,QWORD PTR [rbp-0x28]
  4303d3:	movzx  eax,BYTE PTR [rax+0x31]
  4303d7:	test   al,al
  4303d9:	je     43040f <flatcc_json_printer_int32_vector_field@@Base+0x24d>
  4303db:	mov    rax,QWORD PTR [rbp-0x28]
  4303df:	mov    rax,QWORD PTR [rax+0x28]
  4303e3:	lea    rcx,[rax+0x1]
  4303e7:	mov    rdx,QWORD PTR [rbp-0x28]
  4303eb:	mov    QWORD PTR [rdx+0x28],rcx
  4303ef:	mov    BYTE PTR [rax],0xa
  4303f2:	mov    rax,QWORD PTR [rbp-0x28]
  4303f6:	mov    eax,DWORD PTR [rax+0x38]
  4303f9:	lea    edx,[rax-0x1]
  4303fc:	mov    rax,QWORD PTR [rbp-0x28]
  430400:	mov    DWORD PTR [rax+0x38],edx
  430403:	mov    rax,QWORD PTR [rbp-0x28]
  430407:	mov    rdi,rax
  43040a:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43040f:	mov    rax,QWORD PTR [rbp-0x28]
  430413:	mov    rax,QWORD PTR [rax+0x28]
  430417:	lea    rcx,[rax+0x1]
  43041b:	mov    rdx,QWORD PTR [rbp-0x28]
  43041f:	mov    QWORD PTR [rdx+0x28],rcx
  430423:	mov    BYTE PTR [rax],0x5d
  430426:	nop
  430427:	add    rsp,0x38
  43042b:	pop    rbx
  43042c:	pop    rbp
  43042d:	ret    

000000000043042e <flatcc_json_printer_int64_vector_field@@Base>:
  43042e:	push   rbp
  43042f:	mov    rbp,rsp
  430432:	push   rbx
  430433:	sub    rsp,0x38
  430437:	mov    QWORD PTR [rbp-0x28],rdi
  43043b:	mov    QWORD PTR [rbp-0x30],rsi
  43043f:	mov    DWORD PTR [rbp-0x34],edx
  430442:	mov    QWORD PTR [rbp-0x40],rcx
  430446:	mov    DWORD PTR [rbp-0x38],r8d
  43044a:	mov    edx,DWORD PTR [rbp-0x34]
  43044d:	mov    rax,QWORD PTR [rbp-0x30]
  430451:	mov    esi,edx
  430453:	mov    rdi,rax
  430456:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  43045b:	mov    QWORD PTR [rbp-0x18],rax
  43045f:	cmp    QWORD PTR [rbp-0x18],0x0
  430464:	je     430694 <flatcc_json_printer_int64_vector_field@@Base+0x266>
  43046a:	mov    rax,QWORD PTR [rbp-0x30]
  43046e:	mov    eax,DWORD PTR [rax+0x18]
  430471:	lea    ecx,[rax+0x1]
  430474:	mov    rdx,QWORD PTR [rbp-0x30]
  430478:	mov    DWORD PTR [rdx+0x18],ecx
  43047b:	test   eax,eax
  43047d:	je     430496 <flatcc_json_printer_int64_vector_field@@Base+0x68>
  43047f:	mov    rax,QWORD PTR [rbp-0x28]
  430483:	mov    rax,QWORD PTR [rax+0x28]
  430487:	lea    rcx,[rax+0x1]
  43048b:	mov    rdx,QWORD PTR [rbp-0x28]
  43048f:	mov    QWORD PTR [rdx+0x28],rcx
  430493:	mov    BYTE PTR [rax],0x2c
  430496:	mov    rax,QWORD PTR [rbp-0x18]
  43049a:	mov    rdi,rax
  43049d:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4304a2:	mov    QWORD PTR [rbp-0x18],rax
  4304a6:	mov    rax,QWORD PTR [rbp-0x18]
  4304aa:	mov    rdi,rax
  4304ad:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4304b2:	mov    DWORD PTR [rbp-0x1c],eax
  4304b5:	mov    rax,QWORD PTR [rbp-0x18]
  4304b9:	add    rax,0x4
  4304bd:	mov    QWORD PTR [rbp-0x18],rax
  4304c1:	mov    eax,DWORD PTR [rbp-0x38]
  4304c4:	movsxd rdx,eax
  4304c7:	mov    rcx,QWORD PTR [rbp-0x40]
  4304cb:	mov    rax,QWORD PTR [rbp-0x28]
  4304cf:	mov    rsi,rcx
  4304d2:	mov    rdi,rax
  4304d5:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4304da:	mov    rax,QWORD PTR [rbp-0x28]
  4304de:	mov    eax,DWORD PTR [rax+0x38]
  4304e1:	lea    edx,[rax+0x1]
  4304e4:	mov    rax,QWORD PTR [rbp-0x28]
  4304e8:	mov    DWORD PTR [rax+0x38],edx
  4304eb:	mov    rax,QWORD PTR [rbp-0x28]
  4304ef:	mov    rax,QWORD PTR [rax+0x28]
  4304f3:	lea    rcx,[rax+0x1]
  4304f7:	mov    rdx,QWORD PTR [rbp-0x28]
  4304fb:	mov    QWORD PTR [rdx+0x28],rcx
  4304ff:	mov    BYTE PTR [rax],0x5b
  430502:	cmp    DWORD PTR [rbp-0x1c],0x0
  430506:	je     43062c <flatcc_json_printer_int64_vector_field@@Base+0x1fe>
  43050c:	mov    rax,QWORD PTR [rbp-0x28]
  430510:	movzx  eax,BYTE PTR [rax+0x31]
  430514:	test   al,al
  430516:	je     43053d <flatcc_json_printer_int64_vector_field@@Base+0x10f>
  430518:	mov    rax,QWORD PTR [rbp-0x28]
  43051c:	mov    rax,QWORD PTR [rax+0x28]
  430520:	lea    rcx,[rax+0x1]
  430524:	mov    rdx,QWORD PTR [rbp-0x28]
  430528:	mov    QWORD PTR [rdx+0x28],rcx
  43052c:	mov    BYTE PTR [rax],0xa
  43052f:	mov    rax,QWORD PTR [rbp-0x28]
  430533:	mov    rdi,rax
  430536:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43053b:	jmp    430549 <flatcc_json_printer_int64_vector_field@@Base+0x11b>
  43053d:	mov    rax,QWORD PTR [rbp-0x28]
  430541:	mov    rdi,rax
  430544:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430549:	mov    rax,QWORD PTR [rbp-0x28]
  43054d:	mov    rbx,QWORD PTR [rax+0x28]
  430551:	mov    rax,QWORD PTR [rbp-0x18]
  430555:	mov    rdi,rax
  430558:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  43055d:	mov    rsi,rbx
  430560:	mov    rdi,rax
  430563:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  430568:	mov    ecx,eax
  43056a:	mov    rax,QWORD PTR [rbp-0x28]
  43056e:	mov    rdx,QWORD PTR [rax+0x28]
  430572:	movsxd rax,ecx
  430575:	add    rdx,rax
  430578:	mov    rax,QWORD PTR [rbp-0x28]
  43057c:	mov    QWORD PTR [rax+0x28],rdx
  430580:	mov    rax,QWORD PTR [rbp-0x18]
  430584:	add    rax,0x8
  430588:	mov    QWORD PTR [rbp-0x18],rax
  43058c:	sub    DWORD PTR [rbp-0x1c],0x1
  430590:	jmp    43062c <flatcc_json_printer_int64_vector_field@@Base+0x1fe>
  430595:	mov    rax,QWORD PTR [rbp-0x28]
  430599:	mov    rax,QWORD PTR [rax+0x28]
  43059d:	lea    rcx,[rax+0x1]
  4305a1:	mov    rdx,QWORD PTR [rbp-0x28]
  4305a5:	mov    QWORD PTR [rdx+0x28],rcx
  4305a9:	mov    BYTE PTR [rax],0x2c
  4305ac:	mov    rax,QWORD PTR [rbp-0x28]
  4305b0:	movzx  eax,BYTE PTR [rax+0x31]
  4305b4:	test   al,al
  4305b6:	je     4305dd <flatcc_json_printer_int64_vector_field@@Base+0x1af>
  4305b8:	mov    rax,QWORD PTR [rbp-0x28]
  4305bc:	mov    rax,QWORD PTR [rax+0x28]
  4305c0:	lea    rcx,[rax+0x1]
  4305c4:	mov    rdx,QWORD PTR [rbp-0x28]
  4305c8:	mov    QWORD PTR [rdx+0x28],rcx
  4305cc:	mov    BYTE PTR [rax],0xa
  4305cf:	mov    rax,QWORD PTR [rbp-0x28]
  4305d3:	mov    rdi,rax
  4305d6:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4305db:	jmp    4305e9 <flatcc_json_printer_int64_vector_field@@Base+0x1bb>
  4305dd:	mov    rax,QWORD PTR [rbp-0x28]
  4305e1:	mov    rdi,rax
  4305e4:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4305e9:	mov    rax,QWORD PTR [rbp-0x28]
  4305ed:	mov    rbx,QWORD PTR [rax+0x28]
  4305f1:	mov    rax,QWORD PTR [rbp-0x18]
  4305f5:	mov    rdi,rax
  4305f8:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  4305fd:	mov    rsi,rbx
  430600:	mov    rdi,rax
  430603:	call   429eb0 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
  430608:	mov    ecx,eax
  43060a:	mov    rax,QWORD PTR [rbp-0x28]
  43060e:	mov    rdx,QWORD PTR [rax+0x28]
  430612:	movsxd rax,ecx
  430615:	add    rdx,rax
  430618:	mov    rax,QWORD PTR [rbp-0x28]
  43061c:	mov    QWORD PTR [rax+0x28],rdx
  430620:	mov    rax,QWORD PTR [rbp-0x18]
  430624:	add    rax,0x8
  430628:	mov    QWORD PTR [rbp-0x18],rax
  43062c:	mov    eax,DWORD PTR [rbp-0x1c]
  43062f:	lea    edx,[rax-0x1]
  430632:	mov    DWORD PTR [rbp-0x1c],edx
  430635:	test   eax,eax
  430637:	jne    430595 <flatcc_json_printer_int64_vector_field@@Base+0x167>
  43063d:	mov    rax,QWORD PTR [rbp-0x28]
  430641:	movzx  eax,BYTE PTR [rax+0x31]
  430645:	test   al,al
  430647:	je     43067d <flatcc_json_printer_int64_vector_field@@Base+0x24f>
  430649:	mov    rax,QWORD PTR [rbp-0x28]
  43064d:	mov    rax,QWORD PTR [rax+0x28]
  430651:	lea    rcx,[rax+0x1]
  430655:	mov    rdx,QWORD PTR [rbp-0x28]
  430659:	mov    QWORD PTR [rdx+0x28],rcx
  43065d:	mov    BYTE PTR [rax],0xa
  430660:	mov    rax,QWORD PTR [rbp-0x28]
  430664:	mov    eax,DWORD PTR [rax+0x38]
  430667:	lea    edx,[rax-0x1]
  43066a:	mov    rax,QWORD PTR [rbp-0x28]
  43066e:	mov    DWORD PTR [rax+0x38],edx
  430671:	mov    rax,QWORD PTR [rbp-0x28]
  430675:	mov    rdi,rax
  430678:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43067d:	mov    rax,QWORD PTR [rbp-0x28]
  430681:	mov    rax,QWORD PTR [rax+0x28]
  430685:	lea    rcx,[rax+0x1]
  430689:	mov    rdx,QWORD PTR [rbp-0x28]
  43068d:	mov    QWORD PTR [rdx+0x28],rcx
  430691:	mov    BYTE PTR [rax],0x5d
  430694:	nop
  430695:	add    rsp,0x38
  430699:	pop    rbx
  43069a:	pop    rbp
  43069b:	ret    

000000000043069c <flatcc_json_printer_bool_vector_field@@Base>:
  43069c:	push   rbp
  43069d:	mov    rbp,rsp
  4306a0:	push   rbx
  4306a1:	sub    rsp,0x38
  4306a5:	mov    QWORD PTR [rbp-0x28],rdi
  4306a9:	mov    QWORD PTR [rbp-0x30],rsi
  4306ad:	mov    DWORD PTR [rbp-0x34],edx
  4306b0:	mov    QWORD PTR [rbp-0x40],rcx
  4306b4:	mov    DWORD PTR [rbp-0x38],r8d
  4306b8:	mov    edx,DWORD PTR [rbp-0x34]
  4306bb:	mov    rax,QWORD PTR [rbp-0x30]
  4306bf:	mov    esi,edx
  4306c1:	mov    rdi,rax
  4306c4:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4306c9:	mov    QWORD PTR [rbp-0x18],rax
  4306cd:	cmp    QWORD PTR [rbp-0x18],0x0
  4306d2:	je     430906 <flatcc_json_printer_bool_vector_field@@Base+0x26a>
  4306d8:	mov    rax,QWORD PTR [rbp-0x30]
  4306dc:	mov    eax,DWORD PTR [rax+0x18]
  4306df:	lea    ecx,[rax+0x1]
  4306e2:	mov    rdx,QWORD PTR [rbp-0x30]
  4306e6:	mov    DWORD PTR [rdx+0x18],ecx
  4306e9:	test   eax,eax
  4306eb:	je     430704 <flatcc_json_printer_bool_vector_field@@Base+0x68>
  4306ed:	mov    rax,QWORD PTR [rbp-0x28]
  4306f1:	mov    rax,QWORD PTR [rax+0x28]
  4306f5:	lea    rcx,[rax+0x1]
  4306f9:	mov    rdx,QWORD PTR [rbp-0x28]
  4306fd:	mov    QWORD PTR [rdx+0x28],rcx
  430701:	mov    BYTE PTR [rax],0x2c
  430704:	mov    rax,QWORD PTR [rbp-0x18]
  430708:	mov    rdi,rax
  43070b:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  430710:	mov    QWORD PTR [rbp-0x18],rax
  430714:	mov    rax,QWORD PTR [rbp-0x18]
  430718:	mov    rdi,rax
  43071b:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430720:	mov    DWORD PTR [rbp-0x1c],eax
  430723:	mov    rax,QWORD PTR [rbp-0x18]
  430727:	add    rax,0x4
  43072b:	mov    QWORD PTR [rbp-0x18],rax
  43072f:	mov    eax,DWORD PTR [rbp-0x38]
  430732:	movsxd rdx,eax
  430735:	mov    rcx,QWORD PTR [rbp-0x40]
  430739:	mov    rax,QWORD PTR [rbp-0x28]
  43073d:	mov    rsi,rcx
  430740:	mov    rdi,rax
  430743:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  430748:	mov    rax,QWORD PTR [rbp-0x28]
  43074c:	mov    eax,DWORD PTR [rax+0x38]
  43074f:	lea    edx,[rax+0x1]
  430752:	mov    rax,QWORD PTR [rbp-0x28]
  430756:	mov    DWORD PTR [rax+0x38],edx
  430759:	mov    rax,QWORD PTR [rbp-0x28]
  43075d:	mov    rax,QWORD PTR [rax+0x28]
  430761:	lea    rcx,[rax+0x1]
  430765:	mov    rdx,QWORD PTR [rbp-0x28]
  430769:	mov    QWORD PTR [rdx+0x28],rcx
  43076d:	mov    BYTE PTR [rax],0x5b
  430770:	cmp    DWORD PTR [rbp-0x1c],0x0
  430774:	je     43089e <flatcc_json_printer_bool_vector_field@@Base+0x202>
  43077a:	mov    rax,QWORD PTR [rbp-0x28]
  43077e:	movzx  eax,BYTE PTR [rax+0x31]
  430782:	test   al,al
  430784:	je     4307ab <flatcc_json_printer_bool_vector_field@@Base+0x10f>
  430786:	mov    rax,QWORD PTR [rbp-0x28]
  43078a:	mov    rax,QWORD PTR [rax+0x28]
  43078e:	lea    rcx,[rax+0x1]
  430792:	mov    rdx,QWORD PTR [rbp-0x28]
  430796:	mov    QWORD PTR [rdx+0x28],rcx
  43079a:	mov    BYTE PTR [rax],0xa
  43079d:	mov    rax,QWORD PTR [rbp-0x28]
  4307a1:	mov    rdi,rax
  4307a4:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4307a9:	jmp    4307b7 <flatcc_json_printer_bool_vector_field@@Base+0x11b>
  4307ab:	mov    rax,QWORD PTR [rbp-0x28]
  4307af:	mov    rdi,rax
  4307b2:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4307b7:	mov    rax,QWORD PTR [rbp-0x28]
  4307bb:	mov    rbx,QWORD PTR [rax+0x28]
  4307bf:	mov    rax,QWORD PTR [rbp-0x18]
  4307c3:	mov    rdi,rax
  4307c6:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  4307cb:	movzx  eax,al
  4307ce:	mov    rsi,rbx
  4307d1:	mov    edi,eax
  4307d3:	call   428b85 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  4307d8:	mov    ecx,eax
  4307da:	mov    rax,QWORD PTR [rbp-0x28]
  4307de:	mov    rdx,QWORD PTR [rax+0x28]
  4307e2:	movsxd rax,ecx
  4307e5:	add    rdx,rax
  4307e8:	mov    rax,QWORD PTR [rbp-0x28]
  4307ec:	mov    QWORD PTR [rax+0x28],rdx
  4307f0:	mov    rax,QWORD PTR [rbp-0x18]
  4307f4:	add    rax,0x1
  4307f8:	mov    QWORD PTR [rbp-0x18],rax
  4307fc:	sub    DWORD PTR [rbp-0x1c],0x1
  430800:	jmp    43089e <flatcc_json_printer_bool_vector_field@@Base+0x202>
  430805:	mov    rax,QWORD PTR [rbp-0x28]
  430809:	mov    rax,QWORD PTR [rax+0x28]
  43080d:	lea    rcx,[rax+0x1]
  430811:	mov    rdx,QWORD PTR [rbp-0x28]
  430815:	mov    QWORD PTR [rdx+0x28],rcx
  430819:	mov    BYTE PTR [rax],0x2c
  43081c:	mov    rax,QWORD PTR [rbp-0x28]
  430820:	movzx  eax,BYTE PTR [rax+0x31]
  430824:	test   al,al
  430826:	je     43084d <flatcc_json_printer_bool_vector_field@@Base+0x1b1>
  430828:	mov    rax,QWORD PTR [rbp-0x28]
  43082c:	mov    rax,QWORD PTR [rax+0x28]
  430830:	lea    rcx,[rax+0x1]
  430834:	mov    rdx,QWORD PTR [rbp-0x28]
  430838:	mov    QWORD PTR [rdx+0x28],rcx
  43083c:	mov    BYTE PTR [rax],0xa
  43083f:	mov    rax,QWORD PTR [rbp-0x28]
  430843:	mov    rdi,rax
  430846:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43084b:	jmp    430859 <flatcc_json_printer_bool_vector_field@@Base+0x1bd>
  43084d:	mov    rax,QWORD PTR [rbp-0x28]
  430851:	mov    rdi,rax
  430854:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430859:	mov    rax,QWORD PTR [rbp-0x28]
  43085d:	mov    rbx,QWORD PTR [rax+0x28]
  430861:	mov    rax,QWORD PTR [rbp-0x18]
  430865:	mov    rdi,rax
  430868:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  43086d:	movzx  eax,al
  430870:	mov    rsi,rbx
  430873:	mov    edi,eax
  430875:	call   428b85 <flatcc_json_parser_struct_as_root@@Base+0x4ad>
  43087a:	mov    ecx,eax
  43087c:	mov    rax,QWORD PTR [rbp-0x28]
  430880:	mov    rdx,QWORD PTR [rax+0x28]
  430884:	movsxd rax,ecx
  430887:	add    rdx,rax
  43088a:	mov    rax,QWORD PTR [rbp-0x28]
  43088e:	mov    QWORD PTR [rax+0x28],rdx
  430892:	mov    rax,QWORD PTR [rbp-0x18]
  430896:	add    rax,0x1
  43089a:	mov    QWORD PTR [rbp-0x18],rax
  43089e:	mov    eax,DWORD PTR [rbp-0x1c]
  4308a1:	lea    edx,[rax-0x1]
  4308a4:	mov    DWORD PTR [rbp-0x1c],edx
  4308a7:	test   eax,eax
  4308a9:	jne    430805 <flatcc_json_printer_bool_vector_field@@Base+0x169>
  4308af:	mov    rax,QWORD PTR [rbp-0x28]
  4308b3:	movzx  eax,BYTE PTR [rax+0x31]
  4308b7:	test   al,al
  4308b9:	je     4308ef <flatcc_json_printer_bool_vector_field@@Base+0x253>
  4308bb:	mov    rax,QWORD PTR [rbp-0x28]
  4308bf:	mov    rax,QWORD PTR [rax+0x28]
  4308c3:	lea    rcx,[rax+0x1]
  4308c7:	mov    rdx,QWORD PTR [rbp-0x28]
  4308cb:	mov    QWORD PTR [rdx+0x28],rcx
  4308cf:	mov    BYTE PTR [rax],0xa
  4308d2:	mov    rax,QWORD PTR [rbp-0x28]
  4308d6:	mov    eax,DWORD PTR [rax+0x38]
  4308d9:	lea    edx,[rax-0x1]
  4308dc:	mov    rax,QWORD PTR [rbp-0x28]
  4308e0:	mov    DWORD PTR [rax+0x38],edx
  4308e3:	mov    rax,QWORD PTR [rbp-0x28]
  4308e7:	mov    rdi,rax
  4308ea:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4308ef:	mov    rax,QWORD PTR [rbp-0x28]
  4308f3:	mov    rax,QWORD PTR [rax+0x28]
  4308f7:	lea    rcx,[rax+0x1]
  4308fb:	mov    rdx,QWORD PTR [rbp-0x28]
  4308ff:	mov    QWORD PTR [rdx+0x28],rcx
  430903:	mov    BYTE PTR [rax],0x5d
  430906:	nop
  430907:	add    rsp,0x38
  43090b:	pop    rbx
  43090c:	pop    rbp
  43090d:	ret    

000000000043090e <flatcc_json_printer_float_vector_field@@Base>:
  43090e:	push   rbp
  43090f:	mov    rbp,rsp
  430912:	push   rbx
  430913:	sub    rsp,0x38
  430917:	mov    QWORD PTR [rbp-0x28],rdi
  43091b:	mov    QWORD PTR [rbp-0x30],rsi
  43091f:	mov    DWORD PTR [rbp-0x34],edx
  430922:	mov    QWORD PTR [rbp-0x40],rcx
  430926:	mov    DWORD PTR [rbp-0x38],r8d
  43092a:	mov    edx,DWORD PTR [rbp-0x34]
  43092d:	mov    rax,QWORD PTR [rbp-0x30]
  430931:	mov    esi,edx
  430933:	mov    rdi,rax
  430936:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  43093b:	mov    QWORD PTR [rbp-0x18],rax
  43093f:	cmp    QWORD PTR [rbp-0x18],0x0
  430944:	je     430b76 <flatcc_json_printer_float_vector_field@@Base+0x268>
  43094a:	mov    rax,QWORD PTR [rbp-0x30]
  43094e:	mov    eax,DWORD PTR [rax+0x18]
  430951:	lea    ecx,[rax+0x1]
  430954:	mov    rdx,QWORD PTR [rbp-0x30]
  430958:	mov    DWORD PTR [rdx+0x18],ecx
  43095b:	test   eax,eax
  43095d:	je     430976 <flatcc_json_printer_float_vector_field@@Base+0x68>
  43095f:	mov    rax,QWORD PTR [rbp-0x28]
  430963:	mov    rax,QWORD PTR [rax+0x28]
  430967:	lea    rcx,[rax+0x1]
  43096b:	mov    rdx,QWORD PTR [rbp-0x28]
  43096f:	mov    QWORD PTR [rdx+0x28],rcx
  430973:	mov    BYTE PTR [rax],0x2c
  430976:	mov    rax,QWORD PTR [rbp-0x18]
  43097a:	mov    rdi,rax
  43097d:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  430982:	mov    QWORD PTR [rbp-0x18],rax
  430986:	mov    rax,QWORD PTR [rbp-0x18]
  43098a:	mov    rdi,rax
  43098d:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430992:	mov    DWORD PTR [rbp-0x1c],eax
  430995:	mov    rax,QWORD PTR [rbp-0x18]
  430999:	add    rax,0x4
  43099d:	mov    QWORD PTR [rbp-0x18],rax
  4309a1:	mov    eax,DWORD PTR [rbp-0x38]
  4309a4:	movsxd rdx,eax
  4309a7:	mov    rcx,QWORD PTR [rbp-0x40]
  4309ab:	mov    rax,QWORD PTR [rbp-0x28]
  4309af:	mov    rsi,rcx
  4309b2:	mov    rdi,rax
  4309b5:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4309ba:	mov    rax,QWORD PTR [rbp-0x28]
  4309be:	mov    eax,DWORD PTR [rax+0x38]
  4309c1:	lea    edx,[rax+0x1]
  4309c4:	mov    rax,QWORD PTR [rbp-0x28]
  4309c8:	mov    DWORD PTR [rax+0x38],edx
  4309cb:	mov    rax,QWORD PTR [rbp-0x28]
  4309cf:	mov    rax,QWORD PTR [rax+0x28]
  4309d3:	lea    rcx,[rax+0x1]
  4309d7:	mov    rdx,QWORD PTR [rbp-0x28]
  4309db:	mov    QWORD PTR [rdx+0x28],rcx
  4309df:	mov    BYTE PTR [rax],0x5b
  4309e2:	cmp    DWORD PTR [rbp-0x1c],0x0
  4309e6:	je     430b0e <flatcc_json_printer_float_vector_field@@Base+0x200>
  4309ec:	mov    rax,QWORD PTR [rbp-0x28]
  4309f0:	movzx  eax,BYTE PTR [rax+0x31]
  4309f4:	test   al,al
  4309f6:	je     430a1d <flatcc_json_printer_float_vector_field@@Base+0x10f>
  4309f8:	mov    rax,QWORD PTR [rbp-0x28]
  4309fc:	mov    rax,QWORD PTR [rax+0x28]
  430a00:	lea    rcx,[rax+0x1]
  430a04:	mov    rdx,QWORD PTR [rbp-0x28]
  430a08:	mov    QWORD PTR [rdx+0x28],rcx
  430a0c:	mov    BYTE PTR [rax],0xa
  430a0f:	mov    rax,QWORD PTR [rbp-0x28]
  430a13:	mov    rdi,rax
  430a16:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430a1b:	jmp    430a29 <flatcc_json_printer_float_vector_field@@Base+0x11b>
  430a1d:	mov    rax,QWORD PTR [rbp-0x28]
  430a21:	mov    rdi,rax
  430a24:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430a29:	mov    rax,QWORD PTR [rbp-0x28]
  430a2d:	mov    rbx,QWORD PTR [rax+0x28]
  430a31:	mov    rax,QWORD PTR [rbp-0x18]
  430a35:	mov    rdi,rax
  430a38:	call   428997 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  430a3d:	vcvtss2sd xmm0,xmm0,xmm0
  430a41:	mov    rdi,rbx
  430a44:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  430a49:	mov    ecx,eax
  430a4b:	mov    rax,QWORD PTR [rbp-0x28]
  430a4f:	mov    rdx,QWORD PTR [rax+0x28]
  430a53:	movsxd rax,ecx
  430a56:	add    rdx,rax
  430a59:	mov    rax,QWORD PTR [rbp-0x28]
  430a5d:	mov    QWORD PTR [rax+0x28],rdx
  430a61:	mov    rax,QWORD PTR [rbp-0x18]
  430a65:	add    rax,0x4
  430a69:	mov    QWORD PTR [rbp-0x18],rax
  430a6d:	sub    DWORD PTR [rbp-0x1c],0x1
  430a71:	jmp    430b0e <flatcc_json_printer_float_vector_field@@Base+0x200>
  430a76:	mov    rax,QWORD PTR [rbp-0x28]
  430a7a:	mov    rax,QWORD PTR [rax+0x28]
  430a7e:	lea    rcx,[rax+0x1]
  430a82:	mov    rdx,QWORD PTR [rbp-0x28]
  430a86:	mov    QWORD PTR [rdx+0x28],rcx
  430a8a:	mov    BYTE PTR [rax],0x2c
  430a8d:	mov    rax,QWORD PTR [rbp-0x28]
  430a91:	movzx  eax,BYTE PTR [rax+0x31]
  430a95:	test   al,al
  430a97:	je     430abe <flatcc_json_printer_float_vector_field@@Base+0x1b0>
  430a99:	mov    rax,QWORD PTR [rbp-0x28]
  430a9d:	mov    rax,QWORD PTR [rax+0x28]
  430aa1:	lea    rcx,[rax+0x1]
  430aa5:	mov    rdx,QWORD PTR [rbp-0x28]
  430aa9:	mov    QWORD PTR [rdx+0x28],rcx
  430aad:	mov    BYTE PTR [rax],0xa
  430ab0:	mov    rax,QWORD PTR [rbp-0x28]
  430ab4:	mov    rdi,rax
  430ab7:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430abc:	jmp    430aca <flatcc_json_printer_float_vector_field@@Base+0x1bc>
  430abe:	mov    rax,QWORD PTR [rbp-0x28]
  430ac2:	mov    rdi,rax
  430ac5:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430aca:	mov    rax,QWORD PTR [rbp-0x28]
  430ace:	mov    rbx,QWORD PTR [rax+0x28]
  430ad2:	mov    rax,QWORD PTR [rbp-0x18]
  430ad6:	mov    rdi,rax
  430ad9:	call   428997 <flatcc_json_parser_struct_as_root@@Base+0x2bf>
  430ade:	vcvtss2sd xmm0,xmm0,xmm0
  430ae2:	mov    rdi,rbx
  430ae5:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  430aea:	mov    ecx,eax
  430aec:	mov    rax,QWORD PTR [rbp-0x28]
  430af0:	mov    rdx,QWORD PTR [rax+0x28]
  430af4:	movsxd rax,ecx
  430af7:	add    rdx,rax
  430afa:	mov    rax,QWORD PTR [rbp-0x28]
  430afe:	mov    QWORD PTR [rax+0x28],rdx
  430b02:	mov    rax,QWORD PTR [rbp-0x18]
  430b06:	add    rax,0x4
  430b0a:	mov    QWORD PTR [rbp-0x18],rax
  430b0e:	mov    eax,DWORD PTR [rbp-0x1c]
  430b11:	lea    edx,[rax-0x1]
  430b14:	mov    DWORD PTR [rbp-0x1c],edx
  430b17:	test   eax,eax
  430b19:	jne    430a76 <flatcc_json_printer_float_vector_field@@Base+0x168>
  430b1f:	mov    rax,QWORD PTR [rbp-0x28]
  430b23:	movzx  eax,BYTE PTR [rax+0x31]
  430b27:	test   al,al
  430b29:	je     430b5f <flatcc_json_printer_float_vector_field@@Base+0x251>
  430b2b:	mov    rax,QWORD PTR [rbp-0x28]
  430b2f:	mov    rax,QWORD PTR [rax+0x28]
  430b33:	lea    rcx,[rax+0x1]
  430b37:	mov    rdx,QWORD PTR [rbp-0x28]
  430b3b:	mov    QWORD PTR [rdx+0x28],rcx
  430b3f:	mov    BYTE PTR [rax],0xa
  430b42:	mov    rax,QWORD PTR [rbp-0x28]
  430b46:	mov    eax,DWORD PTR [rax+0x38]
  430b49:	lea    edx,[rax-0x1]
  430b4c:	mov    rax,QWORD PTR [rbp-0x28]
  430b50:	mov    DWORD PTR [rax+0x38],edx
  430b53:	mov    rax,QWORD PTR [rbp-0x28]
  430b57:	mov    rdi,rax
  430b5a:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430b5f:	mov    rax,QWORD PTR [rbp-0x28]
  430b63:	mov    rax,QWORD PTR [rax+0x28]
  430b67:	lea    rcx,[rax+0x1]
  430b6b:	mov    rdx,QWORD PTR [rbp-0x28]
  430b6f:	mov    QWORD PTR [rdx+0x28],rcx
  430b73:	mov    BYTE PTR [rax],0x5d
  430b76:	nop
  430b77:	add    rsp,0x38
  430b7b:	pop    rbx
  430b7c:	pop    rbp
  430b7d:	ret    

0000000000430b7e <flatcc_json_printer_double_vector_field@@Base>:
  430b7e:	push   rbp
  430b7f:	mov    rbp,rsp
  430b82:	push   rbx
  430b83:	sub    rsp,0x38
  430b87:	mov    QWORD PTR [rbp-0x28],rdi
  430b8b:	mov    QWORD PTR [rbp-0x30],rsi
  430b8f:	mov    DWORD PTR [rbp-0x34],edx
  430b92:	mov    QWORD PTR [rbp-0x40],rcx
  430b96:	mov    DWORD PTR [rbp-0x38],r8d
  430b9a:	mov    edx,DWORD PTR [rbp-0x34]
  430b9d:	mov    rax,QWORD PTR [rbp-0x30]
  430ba1:	mov    esi,edx
  430ba3:	mov    rdi,rax
  430ba6:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  430bab:	mov    QWORD PTR [rbp-0x18],rax
  430baf:	cmp    QWORD PTR [rbp-0x18],0x0
  430bb4:	je     430dde <flatcc_json_printer_double_vector_field@@Base+0x260>
  430bba:	mov    rax,QWORD PTR [rbp-0x30]
  430bbe:	mov    eax,DWORD PTR [rax+0x18]
  430bc1:	lea    ecx,[rax+0x1]
  430bc4:	mov    rdx,QWORD PTR [rbp-0x30]
  430bc8:	mov    DWORD PTR [rdx+0x18],ecx
  430bcb:	test   eax,eax
  430bcd:	je     430be6 <flatcc_json_printer_double_vector_field@@Base+0x68>
  430bcf:	mov    rax,QWORD PTR [rbp-0x28]
  430bd3:	mov    rax,QWORD PTR [rax+0x28]
  430bd7:	lea    rcx,[rax+0x1]
  430bdb:	mov    rdx,QWORD PTR [rbp-0x28]
  430bdf:	mov    QWORD PTR [rdx+0x28],rcx
  430be3:	mov    BYTE PTR [rax],0x2c
  430be6:	mov    rax,QWORD PTR [rbp-0x18]
  430bea:	mov    rdi,rax
  430bed:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  430bf2:	mov    QWORD PTR [rbp-0x18],rax
  430bf6:	mov    rax,QWORD PTR [rbp-0x18]
  430bfa:	mov    rdi,rax
  430bfd:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430c02:	mov    DWORD PTR [rbp-0x1c],eax
  430c05:	mov    rax,QWORD PTR [rbp-0x18]
  430c09:	add    rax,0x4
  430c0d:	mov    QWORD PTR [rbp-0x18],rax
  430c11:	mov    eax,DWORD PTR [rbp-0x38]
  430c14:	movsxd rdx,eax
  430c17:	mov    rcx,QWORD PTR [rbp-0x40]
  430c1b:	mov    rax,QWORD PTR [rbp-0x28]
  430c1f:	mov    rsi,rcx
  430c22:	mov    rdi,rax
  430c25:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  430c2a:	mov    rax,QWORD PTR [rbp-0x28]
  430c2e:	mov    eax,DWORD PTR [rax+0x38]
  430c31:	lea    edx,[rax+0x1]
  430c34:	mov    rax,QWORD PTR [rbp-0x28]
  430c38:	mov    DWORD PTR [rax+0x38],edx
  430c3b:	mov    rax,QWORD PTR [rbp-0x28]
  430c3f:	mov    rax,QWORD PTR [rax+0x28]
  430c43:	lea    rcx,[rax+0x1]
  430c47:	mov    rdx,QWORD PTR [rbp-0x28]
  430c4b:	mov    QWORD PTR [rdx+0x28],rcx
  430c4f:	mov    BYTE PTR [rax],0x5b
  430c52:	cmp    DWORD PTR [rbp-0x1c],0x0
  430c56:	je     430d76 <flatcc_json_printer_double_vector_field@@Base+0x1f8>
  430c5c:	mov    rax,QWORD PTR [rbp-0x28]
  430c60:	movzx  eax,BYTE PTR [rax+0x31]
  430c64:	test   al,al
  430c66:	je     430c8d <flatcc_json_printer_double_vector_field@@Base+0x10f>
  430c68:	mov    rax,QWORD PTR [rbp-0x28]
  430c6c:	mov    rax,QWORD PTR [rax+0x28]
  430c70:	lea    rcx,[rax+0x1]
  430c74:	mov    rdx,QWORD PTR [rbp-0x28]
  430c78:	mov    QWORD PTR [rdx+0x28],rcx
  430c7c:	mov    BYTE PTR [rax],0xa
  430c7f:	mov    rax,QWORD PTR [rbp-0x28]
  430c83:	mov    rdi,rax
  430c86:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430c8b:	jmp    430c99 <flatcc_json_printer_double_vector_field@@Base+0x11b>
  430c8d:	mov    rax,QWORD PTR [rbp-0x28]
  430c91:	mov    rdi,rax
  430c94:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430c99:	mov    rax,QWORD PTR [rbp-0x28]
  430c9d:	mov    rbx,QWORD PTR [rax+0x28]
  430ca1:	mov    rax,QWORD PTR [rbp-0x18]
  430ca5:	mov    rdi,rax
  430ca8:	call   4289da <flatcc_json_parser_struct_as_root@@Base+0x302>
  430cad:	mov    rdi,rbx
  430cb0:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  430cb5:	mov    ecx,eax
  430cb7:	mov    rax,QWORD PTR [rbp-0x28]
  430cbb:	mov    rdx,QWORD PTR [rax+0x28]
  430cbf:	movsxd rax,ecx
  430cc2:	add    rdx,rax
  430cc5:	mov    rax,QWORD PTR [rbp-0x28]
  430cc9:	mov    QWORD PTR [rax+0x28],rdx
  430ccd:	mov    rax,QWORD PTR [rbp-0x18]
  430cd1:	add    rax,0x8
  430cd5:	mov    QWORD PTR [rbp-0x18],rax
  430cd9:	sub    DWORD PTR [rbp-0x1c],0x1
  430cdd:	jmp    430d76 <flatcc_json_printer_double_vector_field@@Base+0x1f8>
  430ce2:	mov    rax,QWORD PTR [rbp-0x28]
  430ce6:	mov    rax,QWORD PTR [rax+0x28]
  430cea:	lea    rcx,[rax+0x1]
  430cee:	mov    rdx,QWORD PTR [rbp-0x28]
  430cf2:	mov    QWORD PTR [rdx+0x28],rcx
  430cf6:	mov    BYTE PTR [rax],0x2c
  430cf9:	mov    rax,QWORD PTR [rbp-0x28]
  430cfd:	movzx  eax,BYTE PTR [rax+0x31]
  430d01:	test   al,al
  430d03:	je     430d2a <flatcc_json_printer_double_vector_field@@Base+0x1ac>
  430d05:	mov    rax,QWORD PTR [rbp-0x28]
  430d09:	mov    rax,QWORD PTR [rax+0x28]
  430d0d:	lea    rcx,[rax+0x1]
  430d11:	mov    rdx,QWORD PTR [rbp-0x28]
  430d15:	mov    QWORD PTR [rdx+0x28],rcx
  430d19:	mov    BYTE PTR [rax],0xa
  430d1c:	mov    rax,QWORD PTR [rbp-0x28]
  430d20:	mov    rdi,rax
  430d23:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430d28:	jmp    430d36 <flatcc_json_printer_double_vector_field@@Base+0x1b8>
  430d2a:	mov    rax,QWORD PTR [rbp-0x28]
  430d2e:	mov    rdi,rax
  430d31:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430d36:	mov    rax,QWORD PTR [rbp-0x28]
  430d3a:	mov    rbx,QWORD PTR [rax+0x28]
  430d3e:	mov    rax,QWORD PTR [rbp-0x18]
  430d42:	mov    rdi,rax
  430d45:	call   4289da <flatcc_json_parser_struct_as_root@@Base+0x302>
  430d4a:	mov    rdi,rbx
  430d4d:	call   42afe3 <flatcc_json_parser_struct_as_root@@Base+0x290b>
  430d52:	mov    ecx,eax
  430d54:	mov    rax,QWORD PTR [rbp-0x28]
  430d58:	mov    rdx,QWORD PTR [rax+0x28]
  430d5c:	movsxd rax,ecx
  430d5f:	add    rdx,rax
  430d62:	mov    rax,QWORD PTR [rbp-0x28]
  430d66:	mov    QWORD PTR [rax+0x28],rdx
  430d6a:	mov    rax,QWORD PTR [rbp-0x18]
  430d6e:	add    rax,0x8
  430d72:	mov    QWORD PTR [rbp-0x18],rax
  430d76:	mov    eax,DWORD PTR [rbp-0x1c]
  430d79:	lea    edx,[rax-0x1]
  430d7c:	mov    DWORD PTR [rbp-0x1c],edx
  430d7f:	test   eax,eax
  430d81:	jne    430ce2 <flatcc_json_printer_double_vector_field@@Base+0x164>
  430d87:	mov    rax,QWORD PTR [rbp-0x28]
  430d8b:	movzx  eax,BYTE PTR [rax+0x31]
  430d8f:	test   al,al
  430d91:	je     430dc7 <flatcc_json_printer_double_vector_field@@Base+0x249>
  430d93:	mov    rax,QWORD PTR [rbp-0x28]
  430d97:	mov    rax,QWORD PTR [rax+0x28]
  430d9b:	lea    rcx,[rax+0x1]
  430d9f:	mov    rdx,QWORD PTR [rbp-0x28]
  430da3:	mov    QWORD PTR [rdx+0x28],rcx
  430da7:	mov    BYTE PTR [rax],0xa
  430daa:	mov    rax,QWORD PTR [rbp-0x28]
  430dae:	mov    eax,DWORD PTR [rax+0x38]
  430db1:	lea    edx,[rax-0x1]
  430db4:	mov    rax,QWORD PTR [rbp-0x28]
  430db8:	mov    DWORD PTR [rax+0x38],edx
  430dbb:	mov    rax,QWORD PTR [rbp-0x28]
  430dbf:	mov    rdi,rax
  430dc2:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430dc7:	mov    rax,QWORD PTR [rbp-0x28]
  430dcb:	mov    rax,QWORD PTR [rax+0x28]
  430dcf:	lea    rcx,[rax+0x1]
  430dd3:	mov    rdx,QWORD PTR [rbp-0x28]
  430dd7:	mov    QWORD PTR [rdx+0x28],rcx
  430ddb:	mov    BYTE PTR [rax],0x5d
  430dde:	nop
  430ddf:	add    rsp,0x38
  430de3:	pop    rbx
  430de4:	pop    rbp
  430de5:	ret    

0000000000430de6 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  430de6:	push   rbp
  430de7:	mov    rbp,rsp
  430dea:	sub    rsp,0x40
  430dee:	mov    QWORD PTR [rbp-0x18],rdi
  430df2:	mov    QWORD PTR [rbp-0x20],rsi
  430df6:	mov    DWORD PTR [rbp-0x24],edx
  430df9:	mov    QWORD PTR [rbp-0x30],rcx
  430dfd:	mov    DWORD PTR [rbp-0x28],r8d
  430e01:	mov    QWORD PTR [rbp-0x38],r9
  430e05:	mov    rax,QWORD PTR [rbp-0x18]
  430e09:	movzx  eax,BYTE PTR [rax+0x33]
  430e0d:	test   al,al
  430e0f:	je     430e33 <flatcc_json_printer_utype_enum_vector_field@@Base+0x4d>
  430e11:	mov    edi,DWORD PTR [rbp-0x28]
  430e14:	mov    rcx,QWORD PTR [rbp-0x30]
  430e18:	mov    edx,DWORD PTR [rbp-0x24]
  430e1b:	mov    rsi,QWORD PTR [rbp-0x20]
  430e1f:	mov    rax,QWORD PTR [rbp-0x18]
  430e23:	mov    r8d,edi
  430e26:	mov    rdi,rax
  430e29:	call   42f0b2 <flatcc_json_printer_utype_vector_field@@Base>
  430e2e:	jmp    431048 <flatcc_json_printer_utype_enum_vector_field@@Base+0x262>
  430e33:	mov    edx,DWORD PTR [rbp-0x24]
  430e36:	mov    rax,QWORD PTR [rbp-0x20]
  430e3a:	mov    esi,edx
  430e3c:	mov    rdi,rax
  430e3f:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  430e44:	mov    QWORD PTR [rbp-0x8],rax
  430e48:	cmp    QWORD PTR [rbp-0x8],0x0
  430e4d:	je     431048 <flatcc_json_printer_utype_enum_vector_field@@Base+0x262>
  430e53:	mov    rax,QWORD PTR [rbp-0x20]
  430e57:	mov    eax,DWORD PTR [rax+0x18]
  430e5a:	lea    ecx,[rax+0x1]
  430e5d:	mov    rdx,QWORD PTR [rbp-0x20]
  430e61:	mov    DWORD PTR [rdx+0x18],ecx
  430e64:	test   eax,eax
  430e66:	je     430e7f <flatcc_json_printer_utype_enum_vector_field@@Base+0x99>
  430e68:	mov    rax,QWORD PTR [rbp-0x18]
  430e6c:	mov    rax,QWORD PTR [rax+0x28]
  430e70:	lea    rcx,[rax+0x1]
  430e74:	mov    rdx,QWORD PTR [rbp-0x18]
  430e78:	mov    QWORD PTR [rdx+0x28],rcx
  430e7c:	mov    BYTE PTR [rax],0x2c
  430e7f:	mov    rax,QWORD PTR [rbp-0x8]
  430e83:	mov    rdi,rax
  430e86:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  430e8b:	mov    QWORD PTR [rbp-0x8],rax
  430e8f:	mov    rax,QWORD PTR [rbp-0x8]
  430e93:	mov    rdi,rax
  430e96:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  430e9b:	mov    DWORD PTR [rbp-0xc],eax
  430e9e:	mov    rax,QWORD PTR [rbp-0x8]
  430ea2:	add    rax,0x4
  430ea6:	mov    QWORD PTR [rbp-0x8],rax
  430eaa:	mov    eax,DWORD PTR [rbp-0x28]
  430ead:	movsxd rdx,eax
  430eb0:	mov    rcx,QWORD PTR [rbp-0x30]
  430eb4:	mov    rax,QWORD PTR [rbp-0x18]
  430eb8:	mov    rsi,rcx
  430ebb:	mov    rdi,rax
  430ebe:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  430ec3:	mov    rax,QWORD PTR [rbp-0x18]
  430ec7:	mov    eax,DWORD PTR [rax+0x38]
  430eca:	lea    edx,[rax+0x1]
  430ecd:	mov    rax,QWORD PTR [rbp-0x18]
  430ed1:	mov    DWORD PTR [rax+0x38],edx
  430ed4:	mov    rax,QWORD PTR [rbp-0x18]
  430ed8:	mov    rax,QWORD PTR [rax+0x28]
  430edc:	lea    rcx,[rax+0x1]
  430ee0:	mov    rdx,QWORD PTR [rbp-0x18]
  430ee4:	mov    QWORD PTR [rdx+0x28],rcx
  430ee8:	mov    BYTE PTR [rax],0x5b
  430eeb:	cmp    DWORD PTR [rbp-0xc],0x0
  430eef:	je     430fe0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fa>
  430ef5:	mov    rax,QWORD PTR [rbp-0x18]
  430ef9:	movzx  eax,BYTE PTR [rax+0x31]
  430efd:	test   al,al
  430eff:	je     430f26 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
  430f01:	mov    rax,QWORD PTR [rbp-0x18]
  430f05:	mov    rax,QWORD PTR [rax+0x28]
  430f09:	lea    rcx,[rax+0x1]
  430f0d:	mov    rdx,QWORD PTR [rbp-0x18]
  430f11:	mov    QWORD PTR [rdx+0x28],rcx
  430f15:	mov    BYTE PTR [rax],0xa
  430f18:	mov    rax,QWORD PTR [rbp-0x18]
  430f1c:	mov    rdi,rax
  430f1f:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430f24:	jmp    430f32 <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
  430f26:	mov    rax,QWORD PTR [rbp-0x18]
  430f2a:	mov    rdi,rax
  430f2d:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430f32:	mov    rax,QWORD PTR [rbp-0x8]
  430f36:	mov    rdi,rax
  430f39:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  430f3e:	movzx  ecx,al
  430f41:	mov    rdx,QWORD PTR [rbp-0x18]
  430f45:	mov    rax,QWORD PTR [rbp-0x38]
  430f49:	mov    esi,ecx
  430f4b:	mov    rdi,rdx
  430f4e:	call   rax
  430f50:	mov    rax,QWORD PTR [rbp-0x8]
  430f54:	add    rax,0x1
  430f58:	mov    QWORD PTR [rbp-0x8],rax
  430f5c:	sub    DWORD PTR [rbp-0xc],0x1
  430f60:	jmp    430fe0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fa>
  430f62:	mov    rax,QWORD PTR [rbp-0x18]
  430f66:	mov    rax,QWORD PTR [rax+0x28]
  430f6a:	lea    rcx,[rax+0x1]
  430f6e:	mov    rdx,QWORD PTR [rbp-0x18]
  430f72:	mov    QWORD PTR [rdx+0x28],rcx
  430f76:	mov    BYTE PTR [rax],0x2c
  430f79:	mov    rax,QWORD PTR [rbp-0x18]
  430f7d:	movzx  eax,BYTE PTR [rax+0x31]
  430f81:	test   al,al
  430f83:	je     430faa <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c4>
  430f85:	mov    rax,QWORD PTR [rbp-0x18]
  430f89:	mov    rax,QWORD PTR [rax+0x28]
  430f8d:	lea    rcx,[rax+0x1]
  430f91:	mov    rdx,QWORD PTR [rbp-0x18]
  430f95:	mov    QWORD PTR [rdx+0x28],rcx
  430f99:	mov    BYTE PTR [rax],0xa
  430f9c:	mov    rax,QWORD PTR [rbp-0x18]
  430fa0:	mov    rdi,rax
  430fa3:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  430fa8:	jmp    430fb6 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
  430faa:	mov    rax,QWORD PTR [rbp-0x18]
  430fae:	mov    rdi,rax
  430fb1:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  430fb6:	mov    rax,QWORD PTR [rbp-0x8]
  430fba:	mov    rdi,rax
  430fbd:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  430fc2:	movzx  ecx,al
  430fc5:	mov    rdx,QWORD PTR [rbp-0x18]
  430fc9:	mov    rax,QWORD PTR [rbp-0x38]
  430fcd:	mov    esi,ecx
  430fcf:	mov    rdi,rdx
  430fd2:	call   rax
  430fd4:	mov    rax,QWORD PTR [rbp-0x8]
  430fd8:	add    rax,0x1
  430fdc:	mov    QWORD PTR [rbp-0x8],rax
  430fe0:	mov    eax,DWORD PTR [rbp-0xc]
  430fe3:	lea    edx,[rax-0x1]
  430fe6:	mov    DWORD PTR [rbp-0xc],edx
  430fe9:	test   eax,eax
  430feb:	jne    430f62 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
  430ff1:	mov    rax,QWORD PTR [rbp-0x18]
  430ff5:	movzx  eax,BYTE PTR [rax+0x31]
  430ff9:	test   al,al
  430ffb:	je     431031 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24b>
  430ffd:	mov    rax,QWORD PTR [rbp-0x18]
  431001:	mov    rax,QWORD PTR [rax+0x28]
  431005:	lea    rcx,[rax+0x1]
  431009:	mov    rdx,QWORD PTR [rbp-0x18]
  43100d:	mov    QWORD PTR [rdx+0x28],rcx
  431011:	mov    BYTE PTR [rax],0xa
  431014:	mov    rax,QWORD PTR [rbp-0x18]
  431018:	mov    eax,DWORD PTR [rax+0x38]
  43101b:	lea    edx,[rax-0x1]
  43101e:	mov    rax,QWORD PTR [rbp-0x18]
  431022:	mov    DWORD PTR [rax+0x38],edx
  431025:	mov    rax,QWORD PTR [rbp-0x18]
  431029:	mov    rdi,rax
  43102c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431031:	mov    rax,QWORD PTR [rbp-0x18]
  431035:	mov    rax,QWORD PTR [rax+0x28]
  431039:	lea    rcx,[rax+0x1]
  43103d:	mov    rdx,QWORD PTR [rbp-0x18]
  431041:	mov    QWORD PTR [rdx+0x28],rcx
  431045:	mov    BYTE PTR [rax],0x5d
  431048:	leave  
  431049:	ret    

000000000043104a <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  43104a:	push   rbp
  43104b:	mov    rbp,rsp
  43104e:	sub    rsp,0x40
  431052:	mov    QWORD PTR [rbp-0x18],rdi
  431056:	mov    QWORD PTR [rbp-0x20],rsi
  43105a:	mov    DWORD PTR [rbp-0x24],edx
  43105d:	mov    QWORD PTR [rbp-0x30],rcx
  431061:	mov    DWORD PTR [rbp-0x28],r8d
  431065:	mov    QWORD PTR [rbp-0x38],r9
  431069:	mov    rax,QWORD PTR [rbp-0x18]
  43106d:	movzx  eax,BYTE PTR [rax+0x33]
  431071:	test   al,al
  431073:	je     431097 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x4d>
  431075:	mov    edi,DWORD PTR [rbp-0x28]
  431078:	mov    rcx,QWORD PTR [rbp-0x30]
  43107c:	mov    edx,DWORD PTR [rbp-0x24]
  43107f:	mov    rsi,QWORD PTR [rbp-0x20]
  431083:	mov    rax,QWORD PTR [rbp-0x18]
  431087:	mov    r8d,edi
  43108a:	mov    rdi,rax
  43108d:	call   42f324 <flatcc_json_printer_uint8_vector_field@@Base>
  431092:	jmp    4312ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x262>
  431097:	mov    edx,DWORD PTR [rbp-0x24]
  43109a:	mov    rax,QWORD PTR [rbp-0x20]
  43109e:	mov    esi,edx
  4310a0:	mov    rdi,rax
  4310a3:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4310a8:	mov    QWORD PTR [rbp-0x8],rax
  4310ac:	cmp    QWORD PTR [rbp-0x8],0x0
  4310b1:	je     4312ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x262>
  4310b7:	mov    rax,QWORD PTR [rbp-0x20]
  4310bb:	mov    eax,DWORD PTR [rax+0x18]
  4310be:	lea    ecx,[rax+0x1]
  4310c1:	mov    rdx,QWORD PTR [rbp-0x20]
  4310c5:	mov    DWORD PTR [rdx+0x18],ecx
  4310c8:	test   eax,eax
  4310ca:	je     4310e3 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x99>
  4310cc:	mov    rax,QWORD PTR [rbp-0x18]
  4310d0:	mov    rax,QWORD PTR [rax+0x28]
  4310d4:	lea    rcx,[rax+0x1]
  4310d8:	mov    rdx,QWORD PTR [rbp-0x18]
  4310dc:	mov    QWORD PTR [rdx+0x28],rcx
  4310e0:	mov    BYTE PTR [rax],0x2c
  4310e3:	mov    rax,QWORD PTR [rbp-0x8]
  4310e7:	mov    rdi,rax
  4310ea:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4310ef:	mov    QWORD PTR [rbp-0x8],rax
  4310f3:	mov    rax,QWORD PTR [rbp-0x8]
  4310f7:	mov    rdi,rax
  4310fa:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4310ff:	mov    DWORD PTR [rbp-0xc],eax
  431102:	mov    rax,QWORD PTR [rbp-0x8]
  431106:	add    rax,0x4
  43110a:	mov    QWORD PTR [rbp-0x8],rax
  43110e:	mov    eax,DWORD PTR [rbp-0x28]
  431111:	movsxd rdx,eax
  431114:	mov    rcx,QWORD PTR [rbp-0x30]
  431118:	mov    rax,QWORD PTR [rbp-0x18]
  43111c:	mov    rsi,rcx
  43111f:	mov    rdi,rax
  431122:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  431127:	mov    rax,QWORD PTR [rbp-0x18]
  43112b:	mov    eax,DWORD PTR [rax+0x38]
  43112e:	lea    edx,[rax+0x1]
  431131:	mov    rax,QWORD PTR [rbp-0x18]
  431135:	mov    DWORD PTR [rax+0x38],edx
  431138:	mov    rax,QWORD PTR [rbp-0x18]
  43113c:	mov    rax,QWORD PTR [rax+0x28]
  431140:	lea    rcx,[rax+0x1]
  431144:	mov    rdx,QWORD PTR [rbp-0x18]
  431148:	mov    QWORD PTR [rdx+0x28],rcx
  43114c:	mov    BYTE PTR [rax],0x5b
  43114f:	cmp    DWORD PTR [rbp-0xc],0x0
  431153:	je     431244 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fa>
  431159:	mov    rax,QWORD PTR [rbp-0x18]
  43115d:	movzx  eax,BYTE PTR [rax+0x31]
  431161:	test   al,al
  431163:	je     43118a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
  431165:	mov    rax,QWORD PTR [rbp-0x18]
  431169:	mov    rax,QWORD PTR [rax+0x28]
  43116d:	lea    rcx,[rax+0x1]
  431171:	mov    rdx,QWORD PTR [rbp-0x18]
  431175:	mov    QWORD PTR [rdx+0x28],rcx
  431179:	mov    BYTE PTR [rax],0xa
  43117c:	mov    rax,QWORD PTR [rbp-0x18]
  431180:	mov    rdi,rax
  431183:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431188:	jmp    431196 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
  43118a:	mov    rax,QWORD PTR [rbp-0x18]
  43118e:	mov    rdi,rax
  431191:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431196:	mov    rax,QWORD PTR [rbp-0x8]
  43119a:	mov    rdi,rax
  43119d:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  4311a2:	movzx  ecx,al
  4311a5:	mov    rdx,QWORD PTR [rbp-0x18]
  4311a9:	mov    rax,QWORD PTR [rbp-0x38]
  4311ad:	mov    esi,ecx
  4311af:	mov    rdi,rdx
  4311b2:	call   rax
  4311b4:	mov    rax,QWORD PTR [rbp-0x8]
  4311b8:	add    rax,0x1
  4311bc:	mov    QWORD PTR [rbp-0x8],rax
  4311c0:	sub    DWORD PTR [rbp-0xc],0x1
  4311c4:	jmp    431244 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fa>
  4311c6:	mov    rax,QWORD PTR [rbp-0x18]
  4311ca:	mov    rax,QWORD PTR [rax+0x28]
  4311ce:	lea    rcx,[rax+0x1]
  4311d2:	mov    rdx,QWORD PTR [rbp-0x18]
  4311d6:	mov    QWORD PTR [rdx+0x28],rcx
  4311da:	mov    BYTE PTR [rax],0x2c
  4311dd:	mov    rax,QWORD PTR [rbp-0x18]
  4311e1:	movzx  eax,BYTE PTR [rax+0x31]
  4311e5:	test   al,al
  4311e7:	je     43120e <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c4>
  4311e9:	mov    rax,QWORD PTR [rbp-0x18]
  4311ed:	mov    rax,QWORD PTR [rax+0x28]
  4311f1:	lea    rcx,[rax+0x1]
  4311f5:	mov    rdx,QWORD PTR [rbp-0x18]
  4311f9:	mov    QWORD PTR [rdx+0x28],rcx
  4311fd:	mov    BYTE PTR [rax],0xa
  431200:	mov    rax,QWORD PTR [rbp-0x18]
  431204:	mov    rdi,rax
  431207:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43120c:	jmp    43121a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
  43120e:	mov    rax,QWORD PTR [rbp-0x18]
  431212:	mov    rdi,rax
  431215:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43121a:	mov    rax,QWORD PTR [rbp-0x8]
  43121e:	mov    rdi,rax
  431221:	call   42882a <flatcc_json_parser_struct_as_root@@Base+0x152>
  431226:	movzx  ecx,al
  431229:	mov    rdx,QWORD PTR [rbp-0x18]
  43122d:	mov    rax,QWORD PTR [rbp-0x38]
  431231:	mov    esi,ecx
  431233:	mov    rdi,rdx
  431236:	call   rax
  431238:	mov    rax,QWORD PTR [rbp-0x8]
  43123c:	add    rax,0x1
  431240:	mov    QWORD PTR [rbp-0x8],rax
  431244:	mov    eax,DWORD PTR [rbp-0xc]
  431247:	lea    edx,[rax-0x1]
  43124a:	mov    DWORD PTR [rbp-0xc],edx
  43124d:	test   eax,eax
  43124f:	jne    4311c6 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
  431255:	mov    rax,QWORD PTR [rbp-0x18]
  431259:	movzx  eax,BYTE PTR [rax+0x31]
  43125d:	test   al,al
  43125f:	je     431295 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24b>
  431261:	mov    rax,QWORD PTR [rbp-0x18]
  431265:	mov    rax,QWORD PTR [rax+0x28]
  431269:	lea    rcx,[rax+0x1]
  43126d:	mov    rdx,QWORD PTR [rbp-0x18]
  431271:	mov    QWORD PTR [rdx+0x28],rcx
  431275:	mov    BYTE PTR [rax],0xa
  431278:	mov    rax,QWORD PTR [rbp-0x18]
  43127c:	mov    eax,DWORD PTR [rax+0x38]
  43127f:	lea    edx,[rax-0x1]
  431282:	mov    rax,QWORD PTR [rbp-0x18]
  431286:	mov    DWORD PTR [rax+0x38],edx
  431289:	mov    rax,QWORD PTR [rbp-0x18]
  43128d:	mov    rdi,rax
  431290:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431295:	mov    rax,QWORD PTR [rbp-0x18]
  431299:	mov    rax,QWORD PTR [rax+0x28]
  43129d:	lea    rcx,[rax+0x1]
  4312a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4312a5:	mov    QWORD PTR [rdx+0x28],rcx
  4312a9:	mov    BYTE PTR [rax],0x5d
  4312ac:	leave  
  4312ad:	ret    

00000000004312ae <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  4312ae:	push   rbp
  4312af:	mov    rbp,rsp
  4312b2:	sub    rsp,0x40
  4312b6:	mov    QWORD PTR [rbp-0x18],rdi
  4312ba:	mov    QWORD PTR [rbp-0x20],rsi
  4312be:	mov    DWORD PTR [rbp-0x24],edx
  4312c1:	mov    QWORD PTR [rbp-0x30],rcx
  4312c5:	mov    DWORD PTR [rbp-0x28],r8d
  4312c9:	mov    QWORD PTR [rbp-0x38],r9
  4312cd:	mov    rax,QWORD PTR [rbp-0x18]
  4312d1:	movzx  eax,BYTE PTR [rax+0x33]
  4312d5:	test   al,al
  4312d7:	je     4312fb <flatcc_json_printer_uint16_enum_vector_field@@Base+0x4d>
  4312d9:	mov    edi,DWORD PTR [rbp-0x28]
  4312dc:	mov    rcx,QWORD PTR [rbp-0x30]
  4312e0:	mov    edx,DWORD PTR [rbp-0x24]
  4312e3:	mov    rsi,QWORD PTR [rbp-0x20]
  4312e7:	mov    rax,QWORD PTR [rbp-0x18]
  4312eb:	mov    r8d,edi
  4312ee:	mov    rdi,rax
  4312f1:	call   42f596 <flatcc_json_printer_uint16_vector_field@@Base>
  4312f6:	jmp    431510 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x262>
  4312fb:	mov    edx,DWORD PTR [rbp-0x24]
  4312fe:	mov    rax,QWORD PTR [rbp-0x20]
  431302:	mov    esi,edx
  431304:	mov    rdi,rax
  431307:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  43130c:	mov    QWORD PTR [rbp-0x8],rax
  431310:	cmp    QWORD PTR [rbp-0x8],0x0
  431315:	je     431510 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x262>
  43131b:	mov    rax,QWORD PTR [rbp-0x20]
  43131f:	mov    eax,DWORD PTR [rax+0x18]
  431322:	lea    ecx,[rax+0x1]
  431325:	mov    rdx,QWORD PTR [rbp-0x20]
  431329:	mov    DWORD PTR [rdx+0x18],ecx
  43132c:	test   eax,eax
  43132e:	je     431347 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x99>
  431330:	mov    rax,QWORD PTR [rbp-0x18]
  431334:	mov    rax,QWORD PTR [rax+0x28]
  431338:	lea    rcx,[rax+0x1]
  43133c:	mov    rdx,QWORD PTR [rbp-0x18]
  431340:	mov    QWORD PTR [rdx+0x28],rcx
  431344:	mov    BYTE PTR [rax],0x2c
  431347:	mov    rax,QWORD PTR [rbp-0x8]
  43134b:	mov    rdi,rax
  43134e:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  431353:	mov    QWORD PTR [rbp-0x8],rax
  431357:	mov    rax,QWORD PTR [rbp-0x8]
  43135b:	mov    rdi,rax
  43135e:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431363:	mov    DWORD PTR [rbp-0xc],eax
  431366:	mov    rax,QWORD PTR [rbp-0x8]
  43136a:	add    rax,0x4
  43136e:	mov    QWORD PTR [rbp-0x8],rax
  431372:	mov    eax,DWORD PTR [rbp-0x28]
  431375:	movsxd rdx,eax
  431378:	mov    rcx,QWORD PTR [rbp-0x30]
  43137c:	mov    rax,QWORD PTR [rbp-0x18]
  431380:	mov    rsi,rcx
  431383:	mov    rdi,rax
  431386:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  43138b:	mov    rax,QWORD PTR [rbp-0x18]
  43138f:	mov    eax,DWORD PTR [rax+0x38]
  431392:	lea    edx,[rax+0x1]
  431395:	mov    rax,QWORD PTR [rbp-0x18]
  431399:	mov    DWORD PTR [rax+0x38],edx
  43139c:	mov    rax,QWORD PTR [rbp-0x18]
  4313a0:	mov    rax,QWORD PTR [rax+0x28]
  4313a4:	lea    rcx,[rax+0x1]
  4313a8:	mov    rdx,QWORD PTR [rbp-0x18]
  4313ac:	mov    QWORD PTR [rdx+0x28],rcx
  4313b0:	mov    BYTE PTR [rax],0x5b
  4313b3:	cmp    DWORD PTR [rbp-0xc],0x0
  4313b7:	je     4314a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fa>
  4313bd:	mov    rax,QWORD PTR [rbp-0x18]
  4313c1:	movzx  eax,BYTE PTR [rax+0x31]
  4313c5:	test   al,al
  4313c7:	je     4313ee <flatcc_json_printer_uint16_enum_vector_field@@Base+0x140>
  4313c9:	mov    rax,QWORD PTR [rbp-0x18]
  4313cd:	mov    rax,QWORD PTR [rax+0x28]
  4313d1:	lea    rcx,[rax+0x1]
  4313d5:	mov    rdx,QWORD PTR [rbp-0x18]
  4313d9:	mov    QWORD PTR [rdx+0x28],rcx
  4313dd:	mov    BYTE PTR [rax],0xa
  4313e0:	mov    rax,QWORD PTR [rbp-0x18]
  4313e4:	mov    rdi,rax
  4313e7:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4313ec:	jmp    4313fa <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
  4313ee:	mov    rax,QWORD PTR [rbp-0x18]
  4313f2:	mov    rdi,rax
  4313f5:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4313fa:	mov    rax,QWORD PTR [rbp-0x8]
  4313fe:	mov    rdi,rax
  431401:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  431406:	movzx  ecx,ax
  431409:	mov    rdx,QWORD PTR [rbp-0x18]
  43140d:	mov    rax,QWORD PTR [rbp-0x38]
  431411:	mov    esi,ecx
  431413:	mov    rdi,rdx
  431416:	call   rax
  431418:	mov    rax,QWORD PTR [rbp-0x8]
  43141c:	add    rax,0x2
  431420:	mov    QWORD PTR [rbp-0x8],rax
  431424:	sub    DWORD PTR [rbp-0xc],0x1
  431428:	jmp    4314a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fa>
  43142a:	mov    rax,QWORD PTR [rbp-0x18]
  43142e:	mov    rax,QWORD PTR [rax+0x28]
  431432:	lea    rcx,[rax+0x1]
  431436:	mov    rdx,QWORD PTR [rbp-0x18]
  43143a:	mov    QWORD PTR [rdx+0x28],rcx
  43143e:	mov    BYTE PTR [rax],0x2c
  431441:	mov    rax,QWORD PTR [rbp-0x18]
  431445:	movzx  eax,BYTE PTR [rax+0x31]
  431449:	test   al,al
  43144b:	je     431472 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
  43144d:	mov    rax,QWORD PTR [rbp-0x18]
  431451:	mov    rax,QWORD PTR [rax+0x28]
  431455:	lea    rcx,[rax+0x1]
  431459:	mov    rdx,QWORD PTR [rbp-0x18]
  43145d:	mov    QWORD PTR [rdx+0x28],rcx
  431461:	mov    BYTE PTR [rax],0xa
  431464:	mov    rax,QWORD PTR [rbp-0x18]
  431468:	mov    rdi,rax
  43146b:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431470:	jmp    43147e <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d0>
  431472:	mov    rax,QWORD PTR [rbp-0x18]
  431476:	mov    rdi,rax
  431479:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43147e:	mov    rax,QWORD PTR [rbp-0x8]
  431482:	mov    rdi,rax
  431485:	call   428859 <flatcc_json_parser_struct_as_root@@Base+0x181>
  43148a:	movzx  ecx,ax
  43148d:	mov    rdx,QWORD PTR [rbp-0x18]
  431491:	mov    rax,QWORD PTR [rbp-0x38]
  431495:	mov    esi,ecx
  431497:	mov    rdi,rdx
  43149a:	call   rax
  43149c:	mov    rax,QWORD PTR [rbp-0x8]
  4314a0:	add    rax,0x2
  4314a4:	mov    QWORD PTR [rbp-0x8],rax
  4314a8:	mov    eax,DWORD PTR [rbp-0xc]
  4314ab:	lea    edx,[rax-0x1]
  4314ae:	mov    DWORD PTR [rbp-0xc],edx
  4314b1:	test   eax,eax
  4314b3:	jne    43142a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
  4314b9:	mov    rax,QWORD PTR [rbp-0x18]
  4314bd:	movzx  eax,BYTE PTR [rax+0x31]
  4314c1:	test   al,al
  4314c3:	je     4314f9 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24b>
  4314c5:	mov    rax,QWORD PTR [rbp-0x18]
  4314c9:	mov    rax,QWORD PTR [rax+0x28]
  4314cd:	lea    rcx,[rax+0x1]
  4314d1:	mov    rdx,QWORD PTR [rbp-0x18]
  4314d5:	mov    QWORD PTR [rdx+0x28],rcx
  4314d9:	mov    BYTE PTR [rax],0xa
  4314dc:	mov    rax,QWORD PTR [rbp-0x18]
  4314e0:	mov    eax,DWORD PTR [rax+0x38]
  4314e3:	lea    edx,[rax-0x1]
  4314e6:	mov    rax,QWORD PTR [rbp-0x18]
  4314ea:	mov    DWORD PTR [rax+0x38],edx
  4314ed:	mov    rax,QWORD PTR [rbp-0x18]
  4314f1:	mov    rdi,rax
  4314f4:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4314f9:	mov    rax,QWORD PTR [rbp-0x18]
  4314fd:	mov    rax,QWORD PTR [rax+0x28]
  431501:	lea    rcx,[rax+0x1]
  431505:	mov    rdx,QWORD PTR [rbp-0x18]
  431509:	mov    QWORD PTR [rdx+0x28],rcx
  43150d:	mov    BYTE PTR [rax],0x5d
  431510:	leave  
  431511:	ret    

0000000000431512 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  431512:	push   rbp
  431513:	mov    rbp,rsp
  431516:	sub    rsp,0x40
  43151a:	mov    QWORD PTR [rbp-0x18],rdi
  43151e:	mov    QWORD PTR [rbp-0x20],rsi
  431522:	mov    DWORD PTR [rbp-0x24],edx
  431525:	mov    QWORD PTR [rbp-0x30],rcx
  431529:	mov    DWORD PTR [rbp-0x28],r8d
  43152d:	mov    QWORD PTR [rbp-0x38],r9
  431531:	mov    rax,QWORD PTR [rbp-0x18]
  431535:	movzx  eax,BYTE PTR [rax+0x33]
  431539:	test   al,al
  43153b:	je     43155f <flatcc_json_printer_uint32_enum_vector_field@@Base+0x4d>
  43153d:	mov    edi,DWORD PTR [rbp-0x28]
  431540:	mov    rcx,QWORD PTR [rbp-0x30]
  431544:	mov    edx,DWORD PTR [rbp-0x24]
  431547:	mov    rsi,QWORD PTR [rbp-0x20]
  43154b:	mov    rax,QWORD PTR [rbp-0x18]
  43154f:	mov    r8d,edi
  431552:	mov    rdi,rax
  431555:	call   42f808 <flatcc_json_printer_uint32_vector_field@@Base>
  43155a:	jmp    431772 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
  43155f:	mov    edx,DWORD PTR [rbp-0x24]
  431562:	mov    rax,QWORD PTR [rbp-0x20]
  431566:	mov    esi,edx
  431568:	mov    rdi,rax
  43156b:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  431570:	mov    QWORD PTR [rbp-0x8],rax
  431574:	cmp    QWORD PTR [rbp-0x8],0x0
  431579:	je     431772 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
  43157f:	mov    rax,QWORD PTR [rbp-0x20]
  431583:	mov    eax,DWORD PTR [rax+0x18]
  431586:	lea    ecx,[rax+0x1]
  431589:	mov    rdx,QWORD PTR [rbp-0x20]
  43158d:	mov    DWORD PTR [rdx+0x18],ecx
  431590:	test   eax,eax
  431592:	je     4315ab <flatcc_json_printer_uint32_enum_vector_field@@Base+0x99>
  431594:	mov    rax,QWORD PTR [rbp-0x18]
  431598:	mov    rax,QWORD PTR [rax+0x28]
  43159c:	lea    rcx,[rax+0x1]
  4315a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4315a4:	mov    QWORD PTR [rdx+0x28],rcx
  4315a8:	mov    BYTE PTR [rax],0x2c
  4315ab:	mov    rax,QWORD PTR [rbp-0x8]
  4315af:	mov    rdi,rax
  4315b2:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4315b7:	mov    QWORD PTR [rbp-0x8],rax
  4315bb:	mov    rax,QWORD PTR [rbp-0x8]
  4315bf:	mov    rdi,rax
  4315c2:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4315c7:	mov    DWORD PTR [rbp-0xc],eax
  4315ca:	mov    rax,QWORD PTR [rbp-0x8]
  4315ce:	add    rax,0x4
  4315d2:	mov    QWORD PTR [rbp-0x8],rax
  4315d6:	mov    eax,DWORD PTR [rbp-0x28]
  4315d9:	movsxd rdx,eax
  4315dc:	mov    rcx,QWORD PTR [rbp-0x30]
  4315e0:	mov    rax,QWORD PTR [rbp-0x18]
  4315e4:	mov    rsi,rcx
  4315e7:	mov    rdi,rax
  4315ea:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4315ef:	mov    rax,QWORD PTR [rbp-0x18]
  4315f3:	mov    eax,DWORD PTR [rax+0x38]
  4315f6:	lea    edx,[rax+0x1]
  4315f9:	mov    rax,QWORD PTR [rbp-0x18]
  4315fd:	mov    DWORD PTR [rax+0x38],edx
  431600:	mov    rax,QWORD PTR [rbp-0x18]
  431604:	mov    rax,QWORD PTR [rax+0x28]
  431608:	lea    rcx,[rax+0x1]
  43160c:	mov    rdx,QWORD PTR [rbp-0x18]
  431610:	mov    QWORD PTR [rdx+0x28],rcx
  431614:	mov    BYTE PTR [rax],0x5b
  431617:	cmp    DWORD PTR [rbp-0xc],0x0
  43161b:	je     43170a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
  431621:	mov    rax,QWORD PTR [rbp-0x18]
  431625:	movzx  eax,BYTE PTR [rax+0x31]
  431629:	test   al,al
  43162b:	je     431652 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x140>
  43162d:	mov    rax,QWORD PTR [rbp-0x18]
  431631:	mov    rax,QWORD PTR [rax+0x28]
  431635:	lea    rcx,[rax+0x1]
  431639:	mov    rdx,QWORD PTR [rbp-0x18]
  43163d:	mov    QWORD PTR [rdx+0x28],rcx
  431641:	mov    BYTE PTR [rax],0xa
  431644:	mov    rax,QWORD PTR [rbp-0x18]
  431648:	mov    rdi,rax
  43164b:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431650:	jmp    43165e <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
  431652:	mov    rax,QWORD PTR [rbp-0x18]
  431656:	mov    rdi,rax
  431659:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43165e:	mov    rax,QWORD PTR [rbp-0x8]
  431662:	mov    rdi,rax
  431665:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  43166a:	mov    ecx,eax
  43166c:	mov    rdx,QWORD PTR [rbp-0x18]
  431670:	mov    rax,QWORD PTR [rbp-0x38]
  431674:	mov    esi,ecx
  431676:	mov    rdi,rdx
  431679:	call   rax
  43167b:	mov    rax,QWORD PTR [rbp-0x8]
  43167f:	add    rax,0x4
  431683:	mov    QWORD PTR [rbp-0x8],rax
  431687:	sub    DWORD PTR [rbp-0xc],0x1
  43168b:	jmp    43170a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
  43168d:	mov    rax,QWORD PTR [rbp-0x18]
  431691:	mov    rax,QWORD PTR [rax+0x28]
  431695:	lea    rcx,[rax+0x1]
  431699:	mov    rdx,QWORD PTR [rbp-0x18]
  43169d:	mov    QWORD PTR [rdx+0x28],rcx
  4316a1:	mov    BYTE PTR [rax],0x2c
  4316a4:	mov    rax,QWORD PTR [rbp-0x18]
  4316a8:	movzx  eax,BYTE PTR [rax+0x31]
  4316ac:	test   al,al
  4316ae:	je     4316d5 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c3>
  4316b0:	mov    rax,QWORD PTR [rbp-0x18]
  4316b4:	mov    rax,QWORD PTR [rax+0x28]
  4316b8:	lea    rcx,[rax+0x1]
  4316bc:	mov    rdx,QWORD PTR [rbp-0x18]
  4316c0:	mov    QWORD PTR [rdx+0x28],rcx
  4316c4:	mov    BYTE PTR [rax],0xa
  4316c7:	mov    rax,QWORD PTR [rbp-0x18]
  4316cb:	mov    rdi,rax
  4316ce:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4316d3:	jmp    4316e1 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cf>
  4316d5:	mov    rax,QWORD PTR [rbp-0x18]
  4316d9:	mov    rdi,rax
  4316dc:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4316e1:	mov    rax,QWORD PTR [rbp-0x8]
  4316e5:	mov    rdi,rax
  4316e8:	call   428884 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
  4316ed:	mov    ecx,eax
  4316ef:	mov    rdx,QWORD PTR [rbp-0x18]
  4316f3:	mov    rax,QWORD PTR [rbp-0x38]
  4316f7:	mov    esi,ecx
  4316f9:	mov    rdi,rdx
  4316fc:	call   rax
  4316fe:	mov    rax,QWORD PTR [rbp-0x8]
  431702:	add    rax,0x4
  431706:	mov    QWORD PTR [rbp-0x8],rax
  43170a:	mov    eax,DWORD PTR [rbp-0xc]
  43170d:	lea    edx,[rax-0x1]
  431710:	mov    DWORD PTR [rbp-0xc],edx
  431713:	test   eax,eax
  431715:	jne    43168d <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17b>
  43171b:	mov    rax,QWORD PTR [rbp-0x18]
  43171f:	movzx  eax,BYTE PTR [rax+0x31]
  431723:	test   al,al
  431725:	je     43175b <flatcc_json_printer_uint32_enum_vector_field@@Base+0x249>
  431727:	mov    rax,QWORD PTR [rbp-0x18]
  43172b:	mov    rax,QWORD PTR [rax+0x28]
  43172f:	lea    rcx,[rax+0x1]
  431733:	mov    rdx,QWORD PTR [rbp-0x18]
  431737:	mov    QWORD PTR [rdx+0x28],rcx
  43173b:	mov    BYTE PTR [rax],0xa
  43173e:	mov    rax,QWORD PTR [rbp-0x18]
  431742:	mov    eax,DWORD PTR [rax+0x38]
  431745:	lea    edx,[rax-0x1]
  431748:	mov    rax,QWORD PTR [rbp-0x18]
  43174c:	mov    DWORD PTR [rax+0x38],edx
  43174f:	mov    rax,QWORD PTR [rbp-0x18]
  431753:	mov    rdi,rax
  431756:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43175b:	mov    rax,QWORD PTR [rbp-0x18]
  43175f:	mov    rax,QWORD PTR [rax+0x28]
  431763:	lea    rcx,[rax+0x1]
  431767:	mov    rdx,QWORD PTR [rbp-0x18]
  43176b:	mov    QWORD PTR [rdx+0x28],rcx
  43176f:	mov    BYTE PTR [rax],0x5d
  431772:	leave  
  431773:	ret    

0000000000431774 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  431774:	push   rbp
  431775:	mov    rbp,rsp
  431778:	sub    rsp,0x40
  43177c:	mov    QWORD PTR [rbp-0x18],rdi
  431780:	mov    QWORD PTR [rbp-0x20],rsi
  431784:	mov    DWORD PTR [rbp-0x24],edx
  431787:	mov    QWORD PTR [rbp-0x30],rcx
  43178b:	mov    DWORD PTR [rbp-0x28],r8d
  43178f:	mov    QWORD PTR [rbp-0x38],r9
  431793:	mov    rax,QWORD PTR [rbp-0x18]
  431797:	movzx  eax,BYTE PTR [rax+0x33]
  43179b:	test   al,al
  43179d:	je     4317c1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x4d>
  43179f:	mov    edi,DWORD PTR [rbp-0x28]
  4317a2:	mov    rcx,QWORD PTR [rbp-0x30]
  4317a6:	mov    edx,DWORD PTR [rbp-0x24]
  4317a9:	mov    rsi,QWORD PTR [rbp-0x20]
  4317ad:	mov    rax,QWORD PTR [rbp-0x18]
  4317b1:	mov    r8d,edi
  4317b4:	mov    rdi,rax
  4317b7:	call   42fa74 <flatcc_json_printer_uint64_vector_field@@Base>
  4317bc:	jmp    4319d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x264>
  4317c1:	mov    edx,DWORD PTR [rbp-0x24]
  4317c4:	mov    rax,QWORD PTR [rbp-0x20]
  4317c8:	mov    esi,edx
  4317ca:	mov    rdi,rax
  4317cd:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4317d2:	mov    QWORD PTR [rbp-0x8],rax
  4317d6:	cmp    QWORD PTR [rbp-0x8],0x0
  4317db:	je     4319d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x264>
  4317e1:	mov    rax,QWORD PTR [rbp-0x20]
  4317e5:	mov    eax,DWORD PTR [rax+0x18]
  4317e8:	lea    ecx,[rax+0x1]
  4317eb:	mov    rdx,QWORD PTR [rbp-0x20]
  4317ef:	mov    DWORD PTR [rdx+0x18],ecx
  4317f2:	test   eax,eax
  4317f4:	je     43180d <flatcc_json_printer_uint64_enum_vector_field@@Base+0x99>
  4317f6:	mov    rax,QWORD PTR [rbp-0x18]
  4317fa:	mov    rax,QWORD PTR [rax+0x28]
  4317fe:	lea    rcx,[rax+0x1]
  431802:	mov    rdx,QWORD PTR [rbp-0x18]
  431806:	mov    QWORD PTR [rdx+0x28],rcx
  43180a:	mov    BYTE PTR [rax],0x2c
  43180d:	mov    rax,QWORD PTR [rbp-0x8]
  431811:	mov    rdi,rax
  431814:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  431819:	mov    QWORD PTR [rbp-0x8],rax
  43181d:	mov    rax,QWORD PTR [rbp-0x8]
  431821:	mov    rdi,rax
  431824:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431829:	mov    DWORD PTR [rbp-0xc],eax
  43182c:	mov    rax,QWORD PTR [rbp-0x8]
  431830:	add    rax,0x4
  431834:	mov    QWORD PTR [rbp-0x8],rax
  431838:	mov    eax,DWORD PTR [rbp-0x28]
  43183b:	movsxd rdx,eax
  43183e:	mov    rcx,QWORD PTR [rbp-0x30]
  431842:	mov    rax,QWORD PTR [rbp-0x18]
  431846:	mov    rsi,rcx
  431849:	mov    rdi,rax
  43184c:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  431851:	mov    rax,QWORD PTR [rbp-0x18]
  431855:	mov    eax,DWORD PTR [rax+0x38]
  431858:	lea    edx,[rax+0x1]
  43185b:	mov    rax,QWORD PTR [rbp-0x18]
  43185f:	mov    DWORD PTR [rax+0x38],edx
  431862:	mov    rax,QWORD PTR [rbp-0x18]
  431866:	mov    rax,QWORD PTR [rax+0x28]
  43186a:	lea    rcx,[rax+0x1]
  43186e:	mov    rdx,QWORD PTR [rbp-0x18]
  431872:	mov    QWORD PTR [rdx+0x28],rcx
  431876:	mov    BYTE PTR [rax],0x5b
  431879:	cmp    DWORD PTR [rbp-0xc],0x0
  43187d:	je     431970 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1fc>
  431883:	mov    rax,QWORD PTR [rbp-0x18]
  431887:	movzx  eax,BYTE PTR [rax+0x31]
  43188b:	test   al,al
  43188d:	je     4318b4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x140>
  43188f:	mov    rax,QWORD PTR [rbp-0x18]
  431893:	mov    rax,QWORD PTR [rax+0x28]
  431897:	lea    rcx,[rax+0x1]
  43189b:	mov    rdx,QWORD PTR [rbp-0x18]
  43189f:	mov    QWORD PTR [rdx+0x28],rcx
  4318a3:	mov    BYTE PTR [rax],0xa
  4318a6:	mov    rax,QWORD PTR [rbp-0x18]
  4318aa:	mov    rdi,rax
  4318ad:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4318b2:	jmp    4318c0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
  4318b4:	mov    rax,QWORD PTR [rbp-0x18]
  4318b8:	mov    rdi,rax
  4318bb:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4318c0:	mov    rax,QWORD PTR [rbp-0x8]
  4318c4:	mov    rdi,rax
  4318c7:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  4318cc:	mov    rcx,rax
  4318cf:	mov    rdx,QWORD PTR [rbp-0x18]
  4318d3:	mov    rax,QWORD PTR [rbp-0x38]
  4318d7:	mov    rsi,rcx
  4318da:	mov    rdi,rdx
  4318dd:	call   rax
  4318df:	mov    rax,QWORD PTR [rbp-0x8]
  4318e3:	add    rax,0x8
  4318e7:	mov    QWORD PTR [rbp-0x8],rax
  4318eb:	sub    DWORD PTR [rbp-0xc],0x1
  4318ef:	jmp    431970 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1fc>
  4318f1:	mov    rax,QWORD PTR [rbp-0x18]
  4318f5:	mov    rax,QWORD PTR [rax+0x28]
  4318f9:	lea    rcx,[rax+0x1]
  4318fd:	mov    rdx,QWORD PTR [rbp-0x18]
  431901:	mov    QWORD PTR [rdx+0x28],rcx
  431905:	mov    BYTE PTR [rax],0x2c
  431908:	mov    rax,QWORD PTR [rbp-0x18]
  43190c:	movzx  eax,BYTE PTR [rax+0x31]
  431910:	test   al,al
  431912:	je     431939 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c5>
  431914:	mov    rax,QWORD PTR [rbp-0x18]
  431918:	mov    rax,QWORD PTR [rax+0x28]
  43191c:	lea    rcx,[rax+0x1]
  431920:	mov    rdx,QWORD PTR [rbp-0x18]
  431924:	mov    QWORD PTR [rdx+0x28],rcx
  431928:	mov    BYTE PTR [rax],0xa
  43192b:	mov    rax,QWORD PTR [rbp-0x18]
  43192f:	mov    rdi,rax
  431932:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431937:	jmp    431945 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d1>
  431939:	mov    rax,QWORD PTR [rbp-0x18]
  43193d:	mov    rdi,rax
  431940:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431945:	mov    rax,QWORD PTR [rbp-0x8]
  431949:	mov    rdi,rax
  43194c:	call   4288ad <flatcc_json_parser_struct_as_root@@Base+0x1d5>
  431951:	mov    rcx,rax
  431954:	mov    rdx,QWORD PTR [rbp-0x18]
  431958:	mov    rax,QWORD PTR [rbp-0x38]
  43195c:	mov    rsi,rcx
  43195f:	mov    rdi,rdx
  431962:	call   rax
  431964:	mov    rax,QWORD PTR [rbp-0x8]
  431968:	add    rax,0x8
  43196c:	mov    QWORD PTR [rbp-0x8],rax
  431970:	mov    eax,DWORD PTR [rbp-0xc]
  431973:	lea    edx,[rax-0x1]
  431976:	mov    DWORD PTR [rbp-0xc],edx
  431979:	test   eax,eax
  43197b:	jne    4318f1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17d>
  431981:	mov    rax,QWORD PTR [rbp-0x18]
  431985:	movzx  eax,BYTE PTR [rax+0x31]
  431989:	test   al,al
  43198b:	je     4319c1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24d>
  43198d:	mov    rax,QWORD PTR [rbp-0x18]
  431991:	mov    rax,QWORD PTR [rax+0x28]
  431995:	lea    rcx,[rax+0x1]
  431999:	mov    rdx,QWORD PTR [rbp-0x18]
  43199d:	mov    QWORD PTR [rdx+0x28],rcx
  4319a1:	mov    BYTE PTR [rax],0xa
  4319a4:	mov    rax,QWORD PTR [rbp-0x18]
  4319a8:	mov    eax,DWORD PTR [rax+0x38]
  4319ab:	lea    edx,[rax-0x1]
  4319ae:	mov    rax,QWORD PTR [rbp-0x18]
  4319b2:	mov    DWORD PTR [rax+0x38],edx
  4319b5:	mov    rax,QWORD PTR [rbp-0x18]
  4319b9:	mov    rdi,rax
  4319bc:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4319c1:	mov    rax,QWORD PTR [rbp-0x18]
  4319c5:	mov    rax,QWORD PTR [rax+0x28]
  4319c9:	lea    rcx,[rax+0x1]
  4319cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4319d1:	mov    QWORD PTR [rdx+0x28],rcx
  4319d5:	mov    BYTE PTR [rax],0x5d
  4319d8:	leave  
  4319d9:	ret    

00000000004319da <flatcc_json_printer_int8_enum_vector_field@@Base>:
  4319da:	push   rbp
  4319db:	mov    rbp,rsp
  4319de:	sub    rsp,0x40
  4319e2:	mov    QWORD PTR [rbp-0x18],rdi
  4319e6:	mov    QWORD PTR [rbp-0x20],rsi
  4319ea:	mov    DWORD PTR [rbp-0x24],edx
  4319ed:	mov    QWORD PTR [rbp-0x30],rcx
  4319f1:	mov    DWORD PTR [rbp-0x28],r8d
  4319f5:	mov    QWORD PTR [rbp-0x38],r9
  4319f9:	mov    rax,QWORD PTR [rbp-0x18]
  4319fd:	movzx  eax,BYTE PTR [rax+0x33]
  431a01:	test   al,al
  431a03:	je     431a27 <flatcc_json_printer_int8_enum_vector_field@@Base+0x4d>
  431a05:	mov    edi,DWORD PTR [rbp-0x28]
  431a08:	mov    rcx,QWORD PTR [rbp-0x30]
  431a0c:	mov    edx,DWORD PTR [rbp-0x24]
  431a0f:	mov    rsi,QWORD PTR [rbp-0x20]
  431a13:	mov    rax,QWORD PTR [rbp-0x18]
  431a17:	mov    r8d,edi
  431a1a:	mov    rdi,rax
  431a1d:	call   42fce2 <flatcc_json_printer_int8_vector_field@@Base>
  431a22:	jmp    431c3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x262>
  431a27:	mov    edx,DWORD PTR [rbp-0x24]
  431a2a:	mov    rax,QWORD PTR [rbp-0x20]
  431a2e:	mov    esi,edx
  431a30:	mov    rdi,rax
  431a33:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  431a38:	mov    QWORD PTR [rbp-0x8],rax
  431a3c:	cmp    QWORD PTR [rbp-0x8],0x0
  431a41:	je     431c3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x262>
  431a47:	mov    rax,QWORD PTR [rbp-0x20]
  431a4b:	mov    eax,DWORD PTR [rax+0x18]
  431a4e:	lea    ecx,[rax+0x1]
  431a51:	mov    rdx,QWORD PTR [rbp-0x20]
  431a55:	mov    DWORD PTR [rdx+0x18],ecx
  431a58:	test   eax,eax
  431a5a:	je     431a73 <flatcc_json_printer_int8_enum_vector_field@@Base+0x99>
  431a5c:	mov    rax,QWORD PTR [rbp-0x18]
  431a60:	mov    rax,QWORD PTR [rax+0x28]
  431a64:	lea    rcx,[rax+0x1]
  431a68:	mov    rdx,QWORD PTR [rbp-0x18]
  431a6c:	mov    QWORD PTR [rdx+0x28],rcx
  431a70:	mov    BYTE PTR [rax],0x2c
  431a73:	mov    rax,QWORD PTR [rbp-0x8]
  431a77:	mov    rdi,rax
  431a7a:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  431a7f:	mov    QWORD PTR [rbp-0x8],rax
  431a83:	mov    rax,QWORD PTR [rbp-0x8]
  431a87:	mov    rdi,rax
  431a8a:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431a8f:	mov    DWORD PTR [rbp-0xc],eax
  431a92:	mov    rax,QWORD PTR [rbp-0x8]
  431a96:	add    rax,0x4
  431a9a:	mov    QWORD PTR [rbp-0x8],rax
  431a9e:	mov    eax,DWORD PTR [rbp-0x28]
  431aa1:	movsxd rdx,eax
  431aa4:	mov    rcx,QWORD PTR [rbp-0x30]
  431aa8:	mov    rax,QWORD PTR [rbp-0x18]
  431aac:	mov    rsi,rcx
  431aaf:	mov    rdi,rax
  431ab2:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  431ab7:	mov    rax,QWORD PTR [rbp-0x18]
  431abb:	mov    eax,DWORD PTR [rax+0x38]
  431abe:	lea    edx,[rax+0x1]
  431ac1:	mov    rax,QWORD PTR [rbp-0x18]
  431ac5:	mov    DWORD PTR [rax+0x38],edx
  431ac8:	mov    rax,QWORD PTR [rbp-0x18]
  431acc:	mov    rax,QWORD PTR [rax+0x28]
  431ad0:	lea    rcx,[rax+0x1]
  431ad4:	mov    rdx,QWORD PTR [rbp-0x18]
  431ad8:	mov    QWORD PTR [rdx+0x28],rcx
  431adc:	mov    BYTE PTR [rax],0x5b
  431adf:	cmp    DWORD PTR [rbp-0xc],0x0
  431ae3:	je     431bd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fa>
  431ae9:	mov    rax,QWORD PTR [rbp-0x18]
  431aed:	movzx  eax,BYTE PTR [rax+0x31]
  431af1:	test   al,al
  431af3:	je     431b1a <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
  431af5:	mov    rax,QWORD PTR [rbp-0x18]
  431af9:	mov    rax,QWORD PTR [rax+0x28]
  431afd:	lea    rcx,[rax+0x1]
  431b01:	mov    rdx,QWORD PTR [rbp-0x18]
  431b05:	mov    QWORD PTR [rdx+0x28],rcx
  431b09:	mov    BYTE PTR [rax],0xa
  431b0c:	mov    rax,QWORD PTR [rbp-0x18]
  431b10:	mov    rdi,rax
  431b13:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431b18:	jmp    431b26 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
  431b1a:	mov    rax,QWORD PTR [rbp-0x18]
  431b1e:	mov    rdi,rax
  431b21:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431b26:	mov    rax,QWORD PTR [rbp-0x8]
  431b2a:	mov    rdi,rax
  431b2d:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  431b32:	movsx  ecx,al
  431b35:	mov    rdx,QWORD PTR [rbp-0x18]
  431b39:	mov    rax,QWORD PTR [rbp-0x38]
  431b3d:	mov    esi,ecx
  431b3f:	mov    rdi,rdx
  431b42:	call   rax
  431b44:	mov    rax,QWORD PTR [rbp-0x8]
  431b48:	add    rax,0x1
  431b4c:	mov    QWORD PTR [rbp-0x8],rax
  431b50:	sub    DWORD PTR [rbp-0xc],0x1
  431b54:	jmp    431bd4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fa>
  431b56:	mov    rax,QWORD PTR [rbp-0x18]
  431b5a:	mov    rax,QWORD PTR [rax+0x28]
  431b5e:	lea    rcx,[rax+0x1]
  431b62:	mov    rdx,QWORD PTR [rbp-0x18]
  431b66:	mov    QWORD PTR [rdx+0x28],rcx
  431b6a:	mov    BYTE PTR [rax],0x2c
  431b6d:	mov    rax,QWORD PTR [rbp-0x18]
  431b71:	movzx  eax,BYTE PTR [rax+0x31]
  431b75:	test   al,al
  431b77:	je     431b9e <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c4>
  431b79:	mov    rax,QWORD PTR [rbp-0x18]
  431b7d:	mov    rax,QWORD PTR [rax+0x28]
  431b81:	lea    rcx,[rax+0x1]
  431b85:	mov    rdx,QWORD PTR [rbp-0x18]
  431b89:	mov    QWORD PTR [rdx+0x28],rcx
  431b8d:	mov    BYTE PTR [rax],0xa
  431b90:	mov    rax,QWORD PTR [rbp-0x18]
  431b94:	mov    rdi,rax
  431b97:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431b9c:	jmp    431baa <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
  431b9e:	mov    rax,QWORD PTR [rbp-0x18]
  431ba2:	mov    rdi,rax
  431ba5:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431baa:	mov    rax,QWORD PTR [rbp-0x8]
  431bae:	mov    rdi,rax
  431bb1:	call   4288d9 <flatcc_json_parser_struct_as_root@@Base+0x201>
  431bb6:	movsx  ecx,al
  431bb9:	mov    rdx,QWORD PTR [rbp-0x18]
  431bbd:	mov    rax,QWORD PTR [rbp-0x38]
  431bc1:	mov    esi,ecx
  431bc3:	mov    rdi,rdx
  431bc6:	call   rax
  431bc8:	mov    rax,QWORD PTR [rbp-0x8]
  431bcc:	add    rax,0x1
  431bd0:	mov    QWORD PTR [rbp-0x8],rax
  431bd4:	mov    eax,DWORD PTR [rbp-0xc]
  431bd7:	lea    edx,[rax-0x1]
  431bda:	mov    DWORD PTR [rbp-0xc],edx
  431bdd:	test   eax,eax
  431bdf:	jne    431b56 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
  431be5:	mov    rax,QWORD PTR [rbp-0x18]
  431be9:	movzx  eax,BYTE PTR [rax+0x31]
  431bed:	test   al,al
  431bef:	je     431c25 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24b>
  431bf1:	mov    rax,QWORD PTR [rbp-0x18]
  431bf5:	mov    rax,QWORD PTR [rax+0x28]
  431bf9:	lea    rcx,[rax+0x1]
  431bfd:	mov    rdx,QWORD PTR [rbp-0x18]
  431c01:	mov    QWORD PTR [rdx+0x28],rcx
  431c05:	mov    BYTE PTR [rax],0xa
  431c08:	mov    rax,QWORD PTR [rbp-0x18]
  431c0c:	mov    eax,DWORD PTR [rax+0x38]
  431c0f:	lea    edx,[rax-0x1]
  431c12:	mov    rax,QWORD PTR [rbp-0x18]
  431c16:	mov    DWORD PTR [rax+0x38],edx
  431c19:	mov    rax,QWORD PTR [rbp-0x18]
  431c1d:	mov    rdi,rax
  431c20:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431c25:	mov    rax,QWORD PTR [rbp-0x18]
  431c29:	mov    rax,QWORD PTR [rax+0x28]
  431c2d:	lea    rcx,[rax+0x1]
  431c31:	mov    rdx,QWORD PTR [rbp-0x18]
  431c35:	mov    QWORD PTR [rdx+0x28],rcx
  431c39:	mov    BYTE PTR [rax],0x5d
  431c3c:	leave  
  431c3d:	ret    

0000000000431c3e <flatcc_json_printer_int16_enum_vector_field@@Base>:
  431c3e:	push   rbp
  431c3f:	mov    rbp,rsp
  431c42:	sub    rsp,0x40
  431c46:	mov    QWORD PTR [rbp-0x18],rdi
  431c4a:	mov    QWORD PTR [rbp-0x20],rsi
  431c4e:	mov    DWORD PTR [rbp-0x24],edx
  431c51:	mov    QWORD PTR [rbp-0x30],rcx
  431c55:	mov    DWORD PTR [rbp-0x28],r8d
  431c59:	mov    QWORD PTR [rbp-0x38],r9
  431c5d:	mov    rax,QWORD PTR [rbp-0x18]
  431c61:	movzx  eax,BYTE PTR [rax+0x33]
  431c65:	test   al,al
  431c67:	je     431c8b <flatcc_json_printer_int16_enum_vector_field@@Base+0x4d>
  431c69:	mov    edi,DWORD PTR [rbp-0x28]
  431c6c:	mov    rcx,QWORD PTR [rbp-0x30]
  431c70:	mov    edx,DWORD PTR [rbp-0x24]
  431c73:	mov    rsi,QWORD PTR [rbp-0x20]
  431c77:	mov    rax,QWORD PTR [rbp-0x18]
  431c7b:	mov    r8d,edi
  431c7e:	mov    rdi,rax
  431c81:	call   42ff54 <flatcc_json_printer_int16_vector_field@@Base>
  431c86:	jmp    431ea0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x262>
  431c8b:	mov    edx,DWORD PTR [rbp-0x24]
  431c8e:	mov    rax,QWORD PTR [rbp-0x20]
  431c92:	mov    esi,edx
  431c94:	mov    rdi,rax
  431c97:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  431c9c:	mov    QWORD PTR [rbp-0x8],rax
  431ca0:	cmp    QWORD PTR [rbp-0x8],0x0
  431ca5:	je     431ea0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x262>
  431cab:	mov    rax,QWORD PTR [rbp-0x20]
  431caf:	mov    eax,DWORD PTR [rax+0x18]
  431cb2:	lea    ecx,[rax+0x1]
  431cb5:	mov    rdx,QWORD PTR [rbp-0x20]
  431cb9:	mov    DWORD PTR [rdx+0x18],ecx
  431cbc:	test   eax,eax
  431cbe:	je     431cd7 <flatcc_json_printer_int16_enum_vector_field@@Base+0x99>
  431cc0:	mov    rax,QWORD PTR [rbp-0x18]
  431cc4:	mov    rax,QWORD PTR [rax+0x28]
  431cc8:	lea    rcx,[rax+0x1]
  431ccc:	mov    rdx,QWORD PTR [rbp-0x18]
  431cd0:	mov    QWORD PTR [rdx+0x28],rcx
  431cd4:	mov    BYTE PTR [rax],0x2c
  431cd7:	mov    rax,QWORD PTR [rbp-0x8]
  431cdb:	mov    rdi,rax
  431cde:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  431ce3:	mov    QWORD PTR [rbp-0x8],rax
  431ce7:	mov    rax,QWORD PTR [rbp-0x8]
  431ceb:	mov    rdi,rax
  431cee:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431cf3:	mov    DWORD PTR [rbp-0xc],eax
  431cf6:	mov    rax,QWORD PTR [rbp-0x8]
  431cfa:	add    rax,0x4
  431cfe:	mov    QWORD PTR [rbp-0x8],rax
  431d02:	mov    eax,DWORD PTR [rbp-0x28]
  431d05:	movsxd rdx,eax
  431d08:	mov    rcx,QWORD PTR [rbp-0x30]
  431d0c:	mov    rax,QWORD PTR [rbp-0x18]
  431d10:	mov    rsi,rcx
  431d13:	mov    rdi,rax
  431d16:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  431d1b:	mov    rax,QWORD PTR [rbp-0x18]
  431d1f:	mov    eax,DWORD PTR [rax+0x38]
  431d22:	lea    edx,[rax+0x1]
  431d25:	mov    rax,QWORD PTR [rbp-0x18]
  431d29:	mov    DWORD PTR [rax+0x38],edx
  431d2c:	mov    rax,QWORD PTR [rbp-0x18]
  431d30:	mov    rax,QWORD PTR [rax+0x28]
  431d34:	lea    rcx,[rax+0x1]
  431d38:	mov    rdx,QWORD PTR [rbp-0x18]
  431d3c:	mov    QWORD PTR [rdx+0x28],rcx
  431d40:	mov    BYTE PTR [rax],0x5b
  431d43:	cmp    DWORD PTR [rbp-0xc],0x0
  431d47:	je     431e38 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fa>
  431d4d:	mov    rax,QWORD PTR [rbp-0x18]
  431d51:	movzx  eax,BYTE PTR [rax+0x31]
  431d55:	test   al,al
  431d57:	je     431d7e <flatcc_json_printer_int16_enum_vector_field@@Base+0x140>
  431d59:	mov    rax,QWORD PTR [rbp-0x18]
  431d5d:	mov    rax,QWORD PTR [rax+0x28]
  431d61:	lea    rcx,[rax+0x1]
  431d65:	mov    rdx,QWORD PTR [rbp-0x18]
  431d69:	mov    QWORD PTR [rdx+0x28],rcx
  431d6d:	mov    BYTE PTR [rax],0xa
  431d70:	mov    rax,QWORD PTR [rbp-0x18]
  431d74:	mov    rdi,rax
  431d77:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431d7c:	jmp    431d8a <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
  431d7e:	mov    rax,QWORD PTR [rbp-0x18]
  431d82:	mov    rdi,rax
  431d85:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431d8a:	mov    rax,QWORD PTR [rbp-0x8]
  431d8e:	mov    rdi,rax
  431d91:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  431d96:	movsx  ecx,ax
  431d99:	mov    rdx,QWORD PTR [rbp-0x18]
  431d9d:	mov    rax,QWORD PTR [rbp-0x38]
  431da1:	mov    esi,ecx
  431da3:	mov    rdi,rdx
  431da6:	call   rax
  431da8:	mov    rax,QWORD PTR [rbp-0x8]
  431dac:	add    rax,0x2
  431db0:	mov    QWORD PTR [rbp-0x8],rax
  431db4:	sub    DWORD PTR [rbp-0xc],0x1
  431db8:	jmp    431e38 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fa>
  431dba:	mov    rax,QWORD PTR [rbp-0x18]
  431dbe:	mov    rax,QWORD PTR [rax+0x28]
  431dc2:	lea    rcx,[rax+0x1]
  431dc6:	mov    rdx,QWORD PTR [rbp-0x18]
  431dca:	mov    QWORD PTR [rdx+0x28],rcx
  431dce:	mov    BYTE PTR [rax],0x2c
  431dd1:	mov    rax,QWORD PTR [rbp-0x18]
  431dd5:	movzx  eax,BYTE PTR [rax+0x31]
  431dd9:	test   al,al
  431ddb:	je     431e02 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
  431ddd:	mov    rax,QWORD PTR [rbp-0x18]
  431de1:	mov    rax,QWORD PTR [rax+0x28]
  431de5:	lea    rcx,[rax+0x1]
  431de9:	mov    rdx,QWORD PTR [rbp-0x18]
  431ded:	mov    QWORD PTR [rdx+0x28],rcx
  431df1:	mov    BYTE PTR [rax],0xa
  431df4:	mov    rax,QWORD PTR [rbp-0x18]
  431df8:	mov    rdi,rax
  431dfb:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431e00:	jmp    431e0e <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d0>
  431e02:	mov    rax,QWORD PTR [rbp-0x18]
  431e06:	mov    rdi,rax
  431e09:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431e0e:	mov    rax,QWORD PTR [rbp-0x8]
  431e12:	mov    rdi,rax
  431e15:	call   428908 <flatcc_json_parser_struct_as_root@@Base+0x230>
  431e1a:	movsx  ecx,ax
  431e1d:	mov    rdx,QWORD PTR [rbp-0x18]
  431e21:	mov    rax,QWORD PTR [rbp-0x38]
  431e25:	mov    esi,ecx
  431e27:	mov    rdi,rdx
  431e2a:	call   rax
  431e2c:	mov    rax,QWORD PTR [rbp-0x8]
  431e30:	add    rax,0x2
  431e34:	mov    QWORD PTR [rbp-0x8],rax
  431e38:	mov    eax,DWORD PTR [rbp-0xc]
  431e3b:	lea    edx,[rax-0x1]
  431e3e:	mov    DWORD PTR [rbp-0xc],edx
  431e41:	test   eax,eax
  431e43:	jne    431dba <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
  431e49:	mov    rax,QWORD PTR [rbp-0x18]
  431e4d:	movzx  eax,BYTE PTR [rax+0x31]
  431e51:	test   al,al
  431e53:	je     431e89 <flatcc_json_printer_int16_enum_vector_field@@Base+0x24b>
  431e55:	mov    rax,QWORD PTR [rbp-0x18]
  431e59:	mov    rax,QWORD PTR [rax+0x28]
  431e5d:	lea    rcx,[rax+0x1]
  431e61:	mov    rdx,QWORD PTR [rbp-0x18]
  431e65:	mov    QWORD PTR [rdx+0x28],rcx
  431e69:	mov    BYTE PTR [rax],0xa
  431e6c:	mov    rax,QWORD PTR [rbp-0x18]
  431e70:	mov    eax,DWORD PTR [rax+0x38]
  431e73:	lea    edx,[rax-0x1]
  431e76:	mov    rax,QWORD PTR [rbp-0x18]
  431e7a:	mov    DWORD PTR [rax+0x38],edx
  431e7d:	mov    rax,QWORD PTR [rbp-0x18]
  431e81:	mov    rdi,rax
  431e84:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431e89:	mov    rax,QWORD PTR [rbp-0x18]
  431e8d:	mov    rax,QWORD PTR [rax+0x28]
  431e91:	lea    rcx,[rax+0x1]
  431e95:	mov    rdx,QWORD PTR [rbp-0x18]
  431e99:	mov    QWORD PTR [rdx+0x28],rcx
  431e9d:	mov    BYTE PTR [rax],0x5d
  431ea0:	leave  
  431ea1:	ret    

0000000000431ea2 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  431ea2:	push   rbp
  431ea3:	mov    rbp,rsp
  431ea6:	sub    rsp,0x40
  431eaa:	mov    QWORD PTR [rbp-0x18],rdi
  431eae:	mov    QWORD PTR [rbp-0x20],rsi
  431eb2:	mov    DWORD PTR [rbp-0x24],edx
  431eb5:	mov    QWORD PTR [rbp-0x30],rcx
  431eb9:	mov    DWORD PTR [rbp-0x28],r8d
  431ebd:	mov    QWORD PTR [rbp-0x38],r9
  431ec1:	mov    rax,QWORD PTR [rbp-0x18]
  431ec5:	movzx  eax,BYTE PTR [rax+0x33]
  431ec9:	test   al,al
  431ecb:	je     431eef <flatcc_json_printer_int32_enum_vector_field@@Base+0x4d>
  431ecd:	mov    edi,DWORD PTR [rbp-0x28]
  431ed0:	mov    rcx,QWORD PTR [rbp-0x30]
  431ed4:	mov    edx,DWORD PTR [rbp-0x24]
  431ed7:	mov    rsi,QWORD PTR [rbp-0x20]
  431edb:	mov    rax,QWORD PTR [rbp-0x18]
  431edf:	mov    r8d,edi
  431ee2:	mov    rdi,rax
  431ee5:	call   4301c2 <flatcc_json_printer_int32_vector_field@@Base>
  431eea:	jmp    432102 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
  431eef:	mov    edx,DWORD PTR [rbp-0x24]
  431ef2:	mov    rax,QWORD PTR [rbp-0x20]
  431ef6:	mov    esi,edx
  431ef8:	mov    rdi,rax
  431efb:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  431f00:	mov    QWORD PTR [rbp-0x8],rax
  431f04:	cmp    QWORD PTR [rbp-0x8],0x0
  431f09:	je     432102 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
  431f0f:	mov    rax,QWORD PTR [rbp-0x20]
  431f13:	mov    eax,DWORD PTR [rax+0x18]
  431f16:	lea    ecx,[rax+0x1]
  431f19:	mov    rdx,QWORD PTR [rbp-0x20]
  431f1d:	mov    DWORD PTR [rdx+0x18],ecx
  431f20:	test   eax,eax
  431f22:	je     431f3b <flatcc_json_printer_int32_enum_vector_field@@Base+0x99>
  431f24:	mov    rax,QWORD PTR [rbp-0x18]
  431f28:	mov    rax,QWORD PTR [rax+0x28]
  431f2c:	lea    rcx,[rax+0x1]
  431f30:	mov    rdx,QWORD PTR [rbp-0x18]
  431f34:	mov    QWORD PTR [rdx+0x28],rcx
  431f38:	mov    BYTE PTR [rax],0x2c
  431f3b:	mov    rax,QWORD PTR [rbp-0x8]
  431f3f:	mov    rdi,rax
  431f42:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  431f47:	mov    QWORD PTR [rbp-0x8],rax
  431f4b:	mov    rax,QWORD PTR [rbp-0x8]
  431f4f:	mov    rdi,rax
  431f52:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  431f57:	mov    DWORD PTR [rbp-0xc],eax
  431f5a:	mov    rax,QWORD PTR [rbp-0x8]
  431f5e:	add    rax,0x4
  431f62:	mov    QWORD PTR [rbp-0x8],rax
  431f66:	mov    eax,DWORD PTR [rbp-0x28]
  431f69:	movsxd rdx,eax
  431f6c:	mov    rcx,QWORD PTR [rbp-0x30]
  431f70:	mov    rax,QWORD PTR [rbp-0x18]
  431f74:	mov    rsi,rcx
  431f77:	mov    rdi,rax
  431f7a:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  431f7f:	mov    rax,QWORD PTR [rbp-0x18]
  431f83:	mov    eax,DWORD PTR [rax+0x38]
  431f86:	lea    edx,[rax+0x1]
  431f89:	mov    rax,QWORD PTR [rbp-0x18]
  431f8d:	mov    DWORD PTR [rax+0x38],edx
  431f90:	mov    rax,QWORD PTR [rbp-0x18]
  431f94:	mov    rax,QWORD PTR [rax+0x28]
  431f98:	lea    rcx,[rax+0x1]
  431f9c:	mov    rdx,QWORD PTR [rbp-0x18]
  431fa0:	mov    QWORD PTR [rdx+0x28],rcx
  431fa4:	mov    BYTE PTR [rax],0x5b
  431fa7:	cmp    DWORD PTR [rbp-0xc],0x0
  431fab:	je     43209a <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
  431fb1:	mov    rax,QWORD PTR [rbp-0x18]
  431fb5:	movzx  eax,BYTE PTR [rax+0x31]
  431fb9:	test   al,al
  431fbb:	je     431fe2 <flatcc_json_printer_int32_enum_vector_field@@Base+0x140>
  431fbd:	mov    rax,QWORD PTR [rbp-0x18]
  431fc1:	mov    rax,QWORD PTR [rax+0x28]
  431fc5:	lea    rcx,[rax+0x1]
  431fc9:	mov    rdx,QWORD PTR [rbp-0x18]
  431fcd:	mov    QWORD PTR [rdx+0x28],rcx
  431fd1:	mov    BYTE PTR [rax],0xa
  431fd4:	mov    rax,QWORD PTR [rbp-0x18]
  431fd8:	mov    rdi,rax
  431fdb:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  431fe0:	jmp    431fee <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
  431fe2:	mov    rax,QWORD PTR [rbp-0x18]
  431fe6:	mov    rdi,rax
  431fe9:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  431fee:	mov    rax,QWORD PTR [rbp-0x8]
  431ff2:	mov    rdi,rax
  431ff5:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  431ffa:	mov    ecx,eax
  431ffc:	mov    rdx,QWORD PTR [rbp-0x18]
  432000:	mov    rax,QWORD PTR [rbp-0x38]
  432004:	mov    esi,ecx
  432006:	mov    rdi,rdx
  432009:	call   rax
  43200b:	mov    rax,QWORD PTR [rbp-0x8]
  43200f:	add    rax,0x4
  432013:	mov    QWORD PTR [rbp-0x8],rax
  432017:	sub    DWORD PTR [rbp-0xc],0x1
  43201b:	jmp    43209a <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
  43201d:	mov    rax,QWORD PTR [rbp-0x18]
  432021:	mov    rax,QWORD PTR [rax+0x28]
  432025:	lea    rcx,[rax+0x1]
  432029:	mov    rdx,QWORD PTR [rbp-0x18]
  43202d:	mov    QWORD PTR [rdx+0x28],rcx
  432031:	mov    BYTE PTR [rax],0x2c
  432034:	mov    rax,QWORD PTR [rbp-0x18]
  432038:	movzx  eax,BYTE PTR [rax+0x31]
  43203c:	test   al,al
  43203e:	je     432065 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c3>
  432040:	mov    rax,QWORD PTR [rbp-0x18]
  432044:	mov    rax,QWORD PTR [rax+0x28]
  432048:	lea    rcx,[rax+0x1]
  43204c:	mov    rdx,QWORD PTR [rbp-0x18]
  432050:	mov    QWORD PTR [rdx+0x28],rcx
  432054:	mov    BYTE PTR [rax],0xa
  432057:	mov    rax,QWORD PTR [rbp-0x18]
  43205b:	mov    rdi,rax
  43205e:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432063:	jmp    432071 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cf>
  432065:	mov    rax,QWORD PTR [rbp-0x18]
  432069:	mov    rdi,rax
  43206c:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  432071:	mov    rax,QWORD PTR [rbp-0x8]
  432075:	mov    rdi,rax
  432078:	call   428931 <flatcc_json_parser_struct_as_root@@Base+0x259>
  43207d:	mov    ecx,eax
  43207f:	mov    rdx,QWORD PTR [rbp-0x18]
  432083:	mov    rax,QWORD PTR [rbp-0x38]
  432087:	mov    esi,ecx
  432089:	mov    rdi,rdx
  43208c:	call   rax
  43208e:	mov    rax,QWORD PTR [rbp-0x8]
  432092:	add    rax,0x4
  432096:	mov    QWORD PTR [rbp-0x8],rax
  43209a:	mov    eax,DWORD PTR [rbp-0xc]
  43209d:	lea    edx,[rax-0x1]
  4320a0:	mov    DWORD PTR [rbp-0xc],edx
  4320a3:	test   eax,eax
  4320a5:	jne    43201d <flatcc_json_printer_int32_enum_vector_field@@Base+0x17b>
  4320ab:	mov    rax,QWORD PTR [rbp-0x18]
  4320af:	movzx  eax,BYTE PTR [rax+0x31]
  4320b3:	test   al,al
  4320b5:	je     4320eb <flatcc_json_printer_int32_enum_vector_field@@Base+0x249>
  4320b7:	mov    rax,QWORD PTR [rbp-0x18]
  4320bb:	mov    rax,QWORD PTR [rax+0x28]
  4320bf:	lea    rcx,[rax+0x1]
  4320c3:	mov    rdx,QWORD PTR [rbp-0x18]
  4320c7:	mov    QWORD PTR [rdx+0x28],rcx
  4320cb:	mov    BYTE PTR [rax],0xa
  4320ce:	mov    rax,QWORD PTR [rbp-0x18]
  4320d2:	mov    eax,DWORD PTR [rax+0x38]
  4320d5:	lea    edx,[rax-0x1]
  4320d8:	mov    rax,QWORD PTR [rbp-0x18]
  4320dc:	mov    DWORD PTR [rax+0x38],edx
  4320df:	mov    rax,QWORD PTR [rbp-0x18]
  4320e3:	mov    rdi,rax
  4320e6:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4320eb:	mov    rax,QWORD PTR [rbp-0x18]
  4320ef:	mov    rax,QWORD PTR [rax+0x28]
  4320f3:	lea    rcx,[rax+0x1]
  4320f7:	mov    rdx,QWORD PTR [rbp-0x18]
  4320fb:	mov    QWORD PTR [rdx+0x28],rcx
  4320ff:	mov    BYTE PTR [rax],0x5d
  432102:	leave  
  432103:	ret    

0000000000432104 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  432104:	push   rbp
  432105:	mov    rbp,rsp
  432108:	sub    rsp,0x40
  43210c:	mov    QWORD PTR [rbp-0x18],rdi
  432110:	mov    QWORD PTR [rbp-0x20],rsi
  432114:	mov    DWORD PTR [rbp-0x24],edx
  432117:	mov    QWORD PTR [rbp-0x30],rcx
  43211b:	mov    DWORD PTR [rbp-0x28],r8d
  43211f:	mov    QWORD PTR [rbp-0x38],r9
  432123:	mov    rax,QWORD PTR [rbp-0x18]
  432127:	movzx  eax,BYTE PTR [rax+0x33]
  43212b:	test   al,al
  43212d:	je     432151 <flatcc_json_printer_int64_enum_vector_field@@Base+0x4d>
  43212f:	mov    edi,DWORD PTR [rbp-0x28]
  432132:	mov    rcx,QWORD PTR [rbp-0x30]
  432136:	mov    edx,DWORD PTR [rbp-0x24]
  432139:	mov    rsi,QWORD PTR [rbp-0x20]
  43213d:	mov    rax,QWORD PTR [rbp-0x18]
  432141:	mov    r8d,edi
  432144:	mov    rdi,rax
  432147:	call   43042e <flatcc_json_printer_int64_vector_field@@Base>
  43214c:	jmp    432368 <flatcc_json_printer_int64_enum_vector_field@@Base+0x264>
  432151:	mov    edx,DWORD PTR [rbp-0x24]
  432154:	mov    rax,QWORD PTR [rbp-0x20]
  432158:	mov    esi,edx
  43215a:	mov    rdi,rax
  43215d:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  432162:	mov    QWORD PTR [rbp-0x8],rax
  432166:	cmp    QWORD PTR [rbp-0x8],0x0
  43216b:	je     432368 <flatcc_json_printer_int64_enum_vector_field@@Base+0x264>
  432171:	mov    rax,QWORD PTR [rbp-0x20]
  432175:	mov    eax,DWORD PTR [rax+0x18]
  432178:	lea    ecx,[rax+0x1]
  43217b:	mov    rdx,QWORD PTR [rbp-0x20]
  43217f:	mov    DWORD PTR [rdx+0x18],ecx
  432182:	test   eax,eax
  432184:	je     43219d <flatcc_json_printer_int64_enum_vector_field@@Base+0x99>
  432186:	mov    rax,QWORD PTR [rbp-0x18]
  43218a:	mov    rax,QWORD PTR [rax+0x28]
  43218e:	lea    rcx,[rax+0x1]
  432192:	mov    rdx,QWORD PTR [rbp-0x18]
  432196:	mov    QWORD PTR [rdx+0x28],rcx
  43219a:	mov    BYTE PTR [rax],0x2c
  43219d:	mov    rax,QWORD PTR [rbp-0x8]
  4321a1:	mov    rdi,rax
  4321a4:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4321a9:	mov    QWORD PTR [rbp-0x8],rax
  4321ad:	mov    rax,QWORD PTR [rbp-0x8]
  4321b1:	mov    rdi,rax
  4321b4:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  4321b9:	mov    DWORD PTR [rbp-0xc],eax
  4321bc:	mov    rax,QWORD PTR [rbp-0x8]
  4321c0:	add    rax,0x4
  4321c4:	mov    QWORD PTR [rbp-0x8],rax
  4321c8:	mov    eax,DWORD PTR [rbp-0x28]
  4321cb:	movsxd rdx,eax
  4321ce:	mov    rcx,QWORD PTR [rbp-0x30]
  4321d2:	mov    rax,QWORD PTR [rbp-0x18]
  4321d6:	mov    rsi,rcx
  4321d9:	mov    rdi,rax
  4321dc:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4321e1:	mov    rax,QWORD PTR [rbp-0x18]
  4321e5:	mov    eax,DWORD PTR [rax+0x38]
  4321e8:	lea    edx,[rax+0x1]
  4321eb:	mov    rax,QWORD PTR [rbp-0x18]
  4321ef:	mov    DWORD PTR [rax+0x38],edx
  4321f2:	mov    rax,QWORD PTR [rbp-0x18]
  4321f6:	mov    rax,QWORD PTR [rax+0x28]
  4321fa:	lea    rcx,[rax+0x1]
  4321fe:	mov    rdx,QWORD PTR [rbp-0x18]
  432202:	mov    QWORD PTR [rdx+0x28],rcx
  432206:	mov    BYTE PTR [rax],0x5b
  432209:	cmp    DWORD PTR [rbp-0xc],0x0
  43220d:	je     432300 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1fc>
  432213:	mov    rax,QWORD PTR [rbp-0x18]
  432217:	movzx  eax,BYTE PTR [rax+0x31]
  43221b:	test   al,al
  43221d:	je     432244 <flatcc_json_printer_int64_enum_vector_field@@Base+0x140>
  43221f:	mov    rax,QWORD PTR [rbp-0x18]
  432223:	mov    rax,QWORD PTR [rax+0x28]
  432227:	lea    rcx,[rax+0x1]
  43222b:	mov    rdx,QWORD PTR [rbp-0x18]
  43222f:	mov    QWORD PTR [rdx+0x28],rcx
  432233:	mov    BYTE PTR [rax],0xa
  432236:	mov    rax,QWORD PTR [rbp-0x18]
  43223a:	mov    rdi,rax
  43223d:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432242:	jmp    432250 <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
  432244:	mov    rax,QWORD PTR [rbp-0x18]
  432248:	mov    rdi,rax
  43224b:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  432250:	mov    rax,QWORD PTR [rbp-0x8]
  432254:	mov    rdi,rax
  432257:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  43225c:	mov    rcx,rax
  43225f:	mov    rdx,QWORD PTR [rbp-0x18]
  432263:	mov    rax,QWORD PTR [rbp-0x38]
  432267:	mov    rsi,rcx
  43226a:	mov    rdi,rdx
  43226d:	call   rax
  43226f:	mov    rax,QWORD PTR [rbp-0x8]
  432273:	add    rax,0x8
  432277:	mov    QWORD PTR [rbp-0x8],rax
  43227b:	sub    DWORD PTR [rbp-0xc],0x1
  43227f:	jmp    432300 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1fc>
  432281:	mov    rax,QWORD PTR [rbp-0x18]
  432285:	mov    rax,QWORD PTR [rax+0x28]
  432289:	lea    rcx,[rax+0x1]
  43228d:	mov    rdx,QWORD PTR [rbp-0x18]
  432291:	mov    QWORD PTR [rdx+0x28],rcx
  432295:	mov    BYTE PTR [rax],0x2c
  432298:	mov    rax,QWORD PTR [rbp-0x18]
  43229c:	movzx  eax,BYTE PTR [rax+0x31]
  4322a0:	test   al,al
  4322a2:	je     4322c9 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c5>
  4322a4:	mov    rax,QWORD PTR [rbp-0x18]
  4322a8:	mov    rax,QWORD PTR [rax+0x28]
  4322ac:	lea    rcx,[rax+0x1]
  4322b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4322b4:	mov    QWORD PTR [rdx+0x28],rcx
  4322b8:	mov    BYTE PTR [rax],0xa
  4322bb:	mov    rax,QWORD PTR [rbp-0x18]
  4322bf:	mov    rdi,rax
  4322c2:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4322c7:	jmp    4322d5 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d1>
  4322c9:	mov    rax,QWORD PTR [rbp-0x18]
  4322cd:	mov    rdi,rax
  4322d0:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4322d5:	mov    rax,QWORD PTR [rbp-0x8]
  4322d9:	mov    rdi,rax
  4322dc:	call   42895a <flatcc_json_parser_struct_as_root@@Base+0x282>
  4322e1:	mov    rcx,rax
  4322e4:	mov    rdx,QWORD PTR [rbp-0x18]
  4322e8:	mov    rax,QWORD PTR [rbp-0x38]
  4322ec:	mov    rsi,rcx
  4322ef:	mov    rdi,rdx
  4322f2:	call   rax
  4322f4:	mov    rax,QWORD PTR [rbp-0x8]
  4322f8:	add    rax,0x8
  4322fc:	mov    QWORD PTR [rbp-0x8],rax
  432300:	mov    eax,DWORD PTR [rbp-0xc]
  432303:	lea    edx,[rax-0x1]
  432306:	mov    DWORD PTR [rbp-0xc],edx
  432309:	test   eax,eax
  43230b:	jne    432281 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17d>
  432311:	mov    rax,QWORD PTR [rbp-0x18]
  432315:	movzx  eax,BYTE PTR [rax+0x31]
  432319:	test   al,al
  43231b:	je     432351 <flatcc_json_printer_int64_enum_vector_field@@Base+0x24d>
  43231d:	mov    rax,QWORD PTR [rbp-0x18]
  432321:	mov    rax,QWORD PTR [rax+0x28]
  432325:	lea    rcx,[rax+0x1]
  432329:	mov    rdx,QWORD PTR [rbp-0x18]
  43232d:	mov    QWORD PTR [rdx+0x28],rcx
  432331:	mov    BYTE PTR [rax],0xa
  432334:	mov    rax,QWORD PTR [rbp-0x18]
  432338:	mov    eax,DWORD PTR [rax+0x38]
  43233b:	lea    edx,[rax-0x1]
  43233e:	mov    rax,QWORD PTR [rbp-0x18]
  432342:	mov    DWORD PTR [rax+0x38],edx
  432345:	mov    rax,QWORD PTR [rbp-0x18]
  432349:	mov    rdi,rax
  43234c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432351:	mov    rax,QWORD PTR [rbp-0x18]
  432355:	mov    rax,QWORD PTR [rax+0x28]
  432359:	lea    rcx,[rax+0x1]
  43235d:	mov    rdx,QWORD PTR [rbp-0x18]
  432361:	mov    QWORD PTR [rdx+0x28],rcx
  432365:	mov    BYTE PTR [rax],0x5d
  432368:	leave  
  432369:	ret    

000000000043236a <flatcc_json_printer_bool_enum_vector_field@@Base>:
  43236a:	push   rbp
  43236b:	mov    rbp,rsp
  43236e:	sub    rsp,0x40
  432372:	mov    QWORD PTR [rbp-0x18],rdi
  432376:	mov    QWORD PTR [rbp-0x20],rsi
  43237a:	mov    DWORD PTR [rbp-0x24],edx
  43237d:	mov    QWORD PTR [rbp-0x30],rcx
  432381:	mov    DWORD PTR [rbp-0x28],r8d
  432385:	mov    QWORD PTR [rbp-0x38],r9
  432389:	mov    rax,QWORD PTR [rbp-0x18]
  43238d:	movzx  eax,BYTE PTR [rax+0x33]
  432391:	test   al,al
  432393:	je     4323b7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x4d>
  432395:	mov    edi,DWORD PTR [rbp-0x28]
  432398:	mov    rcx,QWORD PTR [rbp-0x30]
  43239c:	mov    edx,DWORD PTR [rbp-0x24]
  43239f:	mov    rsi,QWORD PTR [rbp-0x20]
  4323a3:	mov    rax,QWORD PTR [rbp-0x18]
  4323a7:	mov    r8d,edi
  4323aa:	mov    rdi,rax
  4323ad:	call   43069c <flatcc_json_printer_bool_vector_field@@Base>
  4323b2:	jmp    4325cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x262>
  4323b7:	mov    edx,DWORD PTR [rbp-0x24]
  4323ba:	mov    rax,QWORD PTR [rbp-0x20]
  4323be:	mov    esi,edx
  4323c0:	mov    rdi,rax
  4323c3:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4323c8:	mov    QWORD PTR [rbp-0x8],rax
  4323cc:	cmp    QWORD PTR [rbp-0x8],0x0
  4323d1:	je     4325cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x262>
  4323d7:	mov    rax,QWORD PTR [rbp-0x20]
  4323db:	mov    eax,DWORD PTR [rax+0x18]
  4323de:	lea    ecx,[rax+0x1]
  4323e1:	mov    rdx,QWORD PTR [rbp-0x20]
  4323e5:	mov    DWORD PTR [rdx+0x18],ecx
  4323e8:	test   eax,eax
  4323ea:	je     432403 <flatcc_json_printer_bool_enum_vector_field@@Base+0x99>
  4323ec:	mov    rax,QWORD PTR [rbp-0x18]
  4323f0:	mov    rax,QWORD PTR [rax+0x28]
  4323f4:	lea    rcx,[rax+0x1]
  4323f8:	mov    rdx,QWORD PTR [rbp-0x18]
  4323fc:	mov    QWORD PTR [rdx+0x28],rcx
  432400:	mov    BYTE PTR [rax],0x2c
  432403:	mov    rax,QWORD PTR [rbp-0x8]
  432407:	mov    rdi,rax
  43240a:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  43240f:	mov    QWORD PTR [rbp-0x8],rax
  432413:	mov    rax,QWORD PTR [rbp-0x8]
  432417:	mov    rdi,rax
  43241a:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43241f:	mov    DWORD PTR [rbp-0xc],eax
  432422:	mov    rax,QWORD PTR [rbp-0x8]
  432426:	add    rax,0x4
  43242a:	mov    QWORD PTR [rbp-0x8],rax
  43242e:	mov    eax,DWORD PTR [rbp-0x28]
  432431:	movsxd rdx,eax
  432434:	mov    rcx,QWORD PTR [rbp-0x30]
  432438:	mov    rax,QWORD PTR [rbp-0x18]
  43243c:	mov    rsi,rcx
  43243f:	mov    rdi,rax
  432442:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  432447:	mov    rax,QWORD PTR [rbp-0x18]
  43244b:	mov    eax,DWORD PTR [rax+0x38]
  43244e:	lea    edx,[rax+0x1]
  432451:	mov    rax,QWORD PTR [rbp-0x18]
  432455:	mov    DWORD PTR [rax+0x38],edx
  432458:	mov    rax,QWORD PTR [rbp-0x18]
  43245c:	mov    rax,QWORD PTR [rax+0x28]
  432460:	lea    rcx,[rax+0x1]
  432464:	mov    rdx,QWORD PTR [rbp-0x18]
  432468:	mov    QWORD PTR [rdx+0x28],rcx
  43246c:	mov    BYTE PTR [rax],0x5b
  43246f:	cmp    DWORD PTR [rbp-0xc],0x0
  432473:	je     432564 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fa>
  432479:	mov    rax,QWORD PTR [rbp-0x18]
  43247d:	movzx  eax,BYTE PTR [rax+0x31]
  432481:	test   al,al
  432483:	je     4324aa <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
  432485:	mov    rax,QWORD PTR [rbp-0x18]
  432489:	mov    rax,QWORD PTR [rax+0x28]
  43248d:	lea    rcx,[rax+0x1]
  432491:	mov    rdx,QWORD PTR [rbp-0x18]
  432495:	mov    QWORD PTR [rdx+0x28],rcx
  432499:	mov    BYTE PTR [rax],0xa
  43249c:	mov    rax,QWORD PTR [rbp-0x18]
  4324a0:	mov    rdi,rax
  4324a3:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4324a8:	jmp    4324b6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
  4324aa:	mov    rax,QWORD PTR [rbp-0x18]
  4324ae:	mov    rdi,rax
  4324b1:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4324b6:	mov    rax,QWORD PTR [rbp-0x8]
  4324ba:	mov    rdi,rax
  4324bd:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  4324c2:	movzx  ecx,al
  4324c5:	mov    rdx,QWORD PTR [rbp-0x18]
  4324c9:	mov    rax,QWORD PTR [rbp-0x38]
  4324cd:	mov    esi,ecx
  4324cf:	mov    rdi,rdx
  4324d2:	call   rax
  4324d4:	mov    rax,QWORD PTR [rbp-0x8]
  4324d8:	add    rax,0x1
  4324dc:	mov    QWORD PTR [rbp-0x8],rax
  4324e0:	sub    DWORD PTR [rbp-0xc],0x1
  4324e4:	jmp    432564 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fa>
  4324e6:	mov    rax,QWORD PTR [rbp-0x18]
  4324ea:	mov    rax,QWORD PTR [rax+0x28]
  4324ee:	lea    rcx,[rax+0x1]
  4324f2:	mov    rdx,QWORD PTR [rbp-0x18]
  4324f6:	mov    QWORD PTR [rdx+0x28],rcx
  4324fa:	mov    BYTE PTR [rax],0x2c
  4324fd:	mov    rax,QWORD PTR [rbp-0x18]
  432501:	movzx  eax,BYTE PTR [rax+0x31]
  432505:	test   al,al
  432507:	je     43252e <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c4>
  432509:	mov    rax,QWORD PTR [rbp-0x18]
  43250d:	mov    rax,QWORD PTR [rax+0x28]
  432511:	lea    rcx,[rax+0x1]
  432515:	mov    rdx,QWORD PTR [rbp-0x18]
  432519:	mov    QWORD PTR [rdx+0x28],rcx
  43251d:	mov    BYTE PTR [rax],0xa
  432520:	mov    rax,QWORD PTR [rbp-0x18]
  432524:	mov    rdi,rax
  432527:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43252c:	jmp    43253a <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
  43252e:	mov    rax,QWORD PTR [rbp-0x18]
  432532:	mov    rdi,rax
  432535:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43253a:	mov    rax,QWORD PTR [rbp-0x8]
  43253e:	mov    rdi,rax
  432541:	call   428a1a <flatcc_json_parser_struct_as_root@@Base+0x342>
  432546:	movzx  ecx,al
  432549:	mov    rdx,QWORD PTR [rbp-0x18]
  43254d:	mov    rax,QWORD PTR [rbp-0x38]
  432551:	mov    esi,ecx
  432553:	mov    rdi,rdx
  432556:	call   rax
  432558:	mov    rax,QWORD PTR [rbp-0x8]
  43255c:	add    rax,0x1
  432560:	mov    QWORD PTR [rbp-0x8],rax
  432564:	mov    eax,DWORD PTR [rbp-0xc]
  432567:	lea    edx,[rax-0x1]
  43256a:	mov    DWORD PTR [rbp-0xc],edx
  43256d:	test   eax,eax
  43256f:	jne    4324e6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
  432575:	mov    rax,QWORD PTR [rbp-0x18]
  432579:	movzx  eax,BYTE PTR [rax+0x31]
  43257d:	test   al,al
  43257f:	je     4325b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24b>
  432581:	mov    rax,QWORD PTR [rbp-0x18]
  432585:	mov    rax,QWORD PTR [rax+0x28]
  432589:	lea    rcx,[rax+0x1]
  43258d:	mov    rdx,QWORD PTR [rbp-0x18]
  432591:	mov    QWORD PTR [rdx+0x28],rcx
  432595:	mov    BYTE PTR [rax],0xa
  432598:	mov    rax,QWORD PTR [rbp-0x18]
  43259c:	mov    eax,DWORD PTR [rax+0x38]
  43259f:	lea    edx,[rax-0x1]
  4325a2:	mov    rax,QWORD PTR [rbp-0x18]
  4325a6:	mov    DWORD PTR [rax+0x38],edx
  4325a9:	mov    rax,QWORD PTR [rbp-0x18]
  4325ad:	mov    rdi,rax
  4325b0:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4325b5:	mov    rax,QWORD PTR [rbp-0x18]
  4325b9:	mov    rax,QWORD PTR [rax+0x28]
  4325bd:	lea    rcx,[rax+0x1]
  4325c1:	mov    rdx,QWORD PTR [rbp-0x18]
  4325c5:	mov    QWORD PTR [rdx+0x28],rcx
  4325c9:	mov    BYTE PTR [rax],0x5d
  4325cc:	leave  
  4325cd:	ret    

00000000004325ce <flatcc_json_printer_struct_vector_field@@Base>:
  4325ce:	push   rbp
  4325cf:	mov    rbp,rsp
  4325d2:	sub    rsp,0x40
  4325d6:	mov    QWORD PTR [rbp-0x18],rdi
  4325da:	mov    QWORD PTR [rbp-0x20],rsi
  4325de:	mov    DWORD PTR [rbp-0x24],edx
  4325e1:	mov    QWORD PTR [rbp-0x30],rcx
  4325e5:	mov    DWORD PTR [rbp-0x28],r8d
  4325e9:	mov    QWORD PTR [rbp-0x38],r9
  4325ed:	mov    edx,DWORD PTR [rbp-0x24]
  4325f0:	mov    rax,QWORD PTR [rbp-0x20]
  4325f4:	mov    esi,edx
  4325f6:	mov    rdi,rax
  4325f9:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4325fe:	mov    QWORD PTR [rbp-0x8],rax
  432602:	cmp    QWORD PTR [rbp-0x8],0x0
  432607:	je     4328d8 <flatcc_json_printer_struct_vector_field@@Base+0x30a>
  43260d:	mov    rax,QWORD PTR [rbp-0x20]
  432611:	mov    eax,DWORD PTR [rax+0x18]
  432614:	lea    ecx,[rax+0x1]
  432617:	mov    rdx,QWORD PTR [rbp-0x20]
  43261b:	mov    DWORD PTR [rdx+0x18],ecx
  43261e:	test   eax,eax
  432620:	je     432639 <flatcc_json_printer_struct_vector_field@@Base+0x6b>
  432622:	mov    rax,QWORD PTR [rbp-0x18]
  432626:	mov    rax,QWORD PTR [rax+0x28]
  43262a:	lea    rcx,[rax+0x1]
  43262e:	mov    rdx,QWORD PTR [rbp-0x18]
  432632:	mov    QWORD PTR [rdx+0x28],rcx
  432636:	mov    BYTE PTR [rax],0x2c
  432639:	mov    rax,QWORD PTR [rbp-0x8]
  43263d:	mov    rdi,rax
  432640:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432645:	mov    QWORD PTR [rbp-0x8],rax
  432649:	mov    rax,QWORD PTR [rbp-0x8]
  43264d:	mov    rdi,rax
  432650:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432655:	mov    DWORD PTR [rbp-0xc],eax
  432658:	add    QWORD PTR [rbp-0x8],0x4
  43265d:	mov    eax,DWORD PTR [rbp-0x28]
  432660:	movsxd rdx,eax
  432663:	mov    rcx,QWORD PTR [rbp-0x30]
  432667:	mov    rax,QWORD PTR [rbp-0x18]
  43266b:	mov    rsi,rcx
  43266e:	mov    rdi,rax
  432671:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  432676:	mov    rax,QWORD PTR [rbp-0x18]
  43267a:	mov    eax,DWORD PTR [rax+0x38]
  43267d:	lea    edx,[rax+0x1]
  432680:	mov    rax,QWORD PTR [rbp-0x18]
  432684:	mov    DWORD PTR [rax+0x38],edx
  432687:	mov    rax,QWORD PTR [rbp-0x18]
  43268b:	mov    rax,QWORD PTR [rax+0x28]
  43268f:	lea    rcx,[rax+0x1]
  432693:	mov    rdx,QWORD PTR [rbp-0x18]
  432697:	mov    QWORD PTR [rdx+0x28],rcx
  43269b:	mov    BYTE PTR [rax],0x5b
  43269e:	cmp    DWORD PTR [rbp-0xc],0x0
  4326a2:	je     432870 <flatcc_json_printer_struct_vector_field@@Base+0x2a2>
  4326a8:	mov    rax,QWORD PTR [rbp-0x18]
  4326ac:	movzx  eax,BYTE PTR [rax+0x31]
  4326b0:	test   al,al
  4326b2:	je     4326d9 <flatcc_json_printer_struct_vector_field@@Base+0x10b>
  4326b4:	mov    rax,QWORD PTR [rbp-0x18]
  4326b8:	mov    rax,QWORD PTR [rax+0x28]
  4326bc:	lea    rcx,[rax+0x1]
  4326c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4326c4:	mov    QWORD PTR [rdx+0x28],rcx
  4326c8:	mov    BYTE PTR [rax],0xa
  4326cb:	mov    rax,QWORD PTR [rbp-0x18]
  4326cf:	mov    rdi,rax
  4326d2:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4326d7:	jmp    4326e5 <flatcc_json_printer_struct_vector_field@@Base+0x117>
  4326d9:	mov    rax,QWORD PTR [rbp-0x18]
  4326dd:	mov    rdi,rax
  4326e0:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4326e5:	mov    rax,QWORD PTR [rbp-0x18]
  4326e9:	mov    eax,DWORD PTR [rax+0x38]
  4326ec:	lea    edx,[rax+0x1]
  4326ef:	mov    rax,QWORD PTR [rbp-0x18]
  4326f3:	mov    DWORD PTR [rax+0x38],edx
  4326f6:	mov    rax,QWORD PTR [rbp-0x18]
  4326fa:	mov    rax,QWORD PTR [rax+0x28]
  4326fe:	lea    rcx,[rax+0x1]
  432702:	mov    rdx,QWORD PTR [rbp-0x18]
  432706:	mov    QWORD PTR [rdx+0x28],rcx
  43270a:	mov    BYTE PTR [rax],0x7b
  43270d:	mov    rcx,QWORD PTR [rbp-0x8]
  432711:	mov    rdx,QWORD PTR [rbp-0x18]
  432715:	mov    rax,QWORD PTR [rbp+0x10]
  432719:	mov    rsi,rcx
  43271c:	mov    rdi,rdx
  43271f:	call   rax
  432721:	mov    rax,QWORD PTR [rbp-0x18]
  432725:	movzx  eax,BYTE PTR [rax+0x31]
  432729:	test   al,al
  43272b:	je     432761 <flatcc_json_printer_struct_vector_field@@Base+0x193>
  43272d:	mov    rax,QWORD PTR [rbp-0x18]
  432731:	mov    rax,QWORD PTR [rax+0x28]
  432735:	lea    rcx,[rax+0x1]
  432739:	mov    rdx,QWORD PTR [rbp-0x18]
  43273d:	mov    QWORD PTR [rdx+0x28],rcx
  432741:	mov    BYTE PTR [rax],0xa
  432744:	mov    rax,QWORD PTR [rbp-0x18]
  432748:	mov    eax,DWORD PTR [rax+0x38]
  43274b:	lea    edx,[rax-0x1]
  43274e:	mov    rax,QWORD PTR [rbp-0x18]
  432752:	mov    DWORD PTR [rax+0x38],edx
  432755:	mov    rax,QWORD PTR [rbp-0x18]
  432759:	mov    rdi,rax
  43275c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432761:	mov    rax,QWORD PTR [rbp-0x18]
  432765:	mov    rax,QWORD PTR [rax+0x28]
  432769:	lea    rcx,[rax+0x1]
  43276d:	mov    rdx,QWORD PTR [rbp-0x18]
  432771:	mov    QWORD PTR [rdx+0x28],rcx
  432775:	mov    BYTE PTR [rax],0x7d
  432778:	sub    DWORD PTR [rbp-0xc],0x1
  43277c:	jmp    432870 <flatcc_json_printer_struct_vector_field@@Base+0x2a2>
  432781:	mov    rax,QWORD PTR [rbp-0x38]
  432785:	add    QWORD PTR [rbp-0x8],rax
  432789:	mov    rax,QWORD PTR [rbp-0x18]
  43278d:	mov    rax,QWORD PTR [rax+0x28]
  432791:	lea    rcx,[rax+0x1]
  432795:	mov    rdx,QWORD PTR [rbp-0x18]
  432799:	mov    QWORD PTR [rdx+0x28],rcx
  43279d:	mov    BYTE PTR [rax],0x2c
  4327a0:	mov    rax,QWORD PTR [rbp-0x18]
  4327a4:	movzx  eax,BYTE PTR [rax+0x31]
  4327a8:	test   al,al
  4327aa:	je     4327d1 <flatcc_json_printer_struct_vector_field@@Base+0x203>
  4327ac:	mov    rax,QWORD PTR [rbp-0x18]
  4327b0:	mov    rax,QWORD PTR [rax+0x28]
  4327b4:	lea    rcx,[rax+0x1]
  4327b8:	mov    rdx,QWORD PTR [rbp-0x18]
  4327bc:	mov    QWORD PTR [rdx+0x28],rcx
  4327c0:	mov    BYTE PTR [rax],0xa
  4327c3:	mov    rax,QWORD PTR [rbp-0x18]
  4327c7:	mov    rdi,rax
  4327ca:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4327cf:	jmp    4327dd <flatcc_json_printer_struct_vector_field@@Base+0x20f>
  4327d1:	mov    rax,QWORD PTR [rbp-0x18]
  4327d5:	mov    rdi,rax
  4327d8:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4327dd:	mov    rax,QWORD PTR [rbp-0x18]
  4327e1:	mov    eax,DWORD PTR [rax+0x38]
  4327e4:	lea    edx,[rax+0x1]
  4327e7:	mov    rax,QWORD PTR [rbp-0x18]
  4327eb:	mov    DWORD PTR [rax+0x38],edx
  4327ee:	mov    rax,QWORD PTR [rbp-0x18]
  4327f2:	mov    rax,QWORD PTR [rax+0x28]
  4327f6:	lea    rcx,[rax+0x1]
  4327fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4327fe:	mov    QWORD PTR [rdx+0x28],rcx
  432802:	mov    BYTE PTR [rax],0x7b
  432805:	mov    rcx,QWORD PTR [rbp-0x8]
  432809:	mov    rdx,QWORD PTR [rbp-0x18]
  43280d:	mov    rax,QWORD PTR [rbp+0x10]
  432811:	mov    rsi,rcx
  432814:	mov    rdi,rdx
  432817:	call   rax
  432819:	mov    rax,QWORD PTR [rbp-0x18]
  43281d:	movzx  eax,BYTE PTR [rax+0x31]
  432821:	test   al,al
  432823:	je     432859 <flatcc_json_printer_struct_vector_field@@Base+0x28b>
  432825:	mov    rax,QWORD PTR [rbp-0x18]
  432829:	mov    rax,QWORD PTR [rax+0x28]
  43282d:	lea    rcx,[rax+0x1]
  432831:	mov    rdx,QWORD PTR [rbp-0x18]
  432835:	mov    QWORD PTR [rdx+0x28],rcx
  432839:	mov    BYTE PTR [rax],0xa
  43283c:	mov    rax,QWORD PTR [rbp-0x18]
  432840:	mov    eax,DWORD PTR [rax+0x38]
  432843:	lea    edx,[rax-0x1]
  432846:	mov    rax,QWORD PTR [rbp-0x18]
  43284a:	mov    DWORD PTR [rax+0x38],edx
  43284d:	mov    rax,QWORD PTR [rbp-0x18]
  432851:	mov    rdi,rax
  432854:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432859:	mov    rax,QWORD PTR [rbp-0x18]
  43285d:	mov    rax,QWORD PTR [rax+0x28]
  432861:	lea    rcx,[rax+0x1]
  432865:	mov    rdx,QWORD PTR [rbp-0x18]
  432869:	mov    QWORD PTR [rdx+0x28],rcx
  43286d:	mov    BYTE PTR [rax],0x7d
  432870:	mov    eax,DWORD PTR [rbp-0xc]
  432873:	lea    edx,[rax-0x1]
  432876:	mov    DWORD PTR [rbp-0xc],edx
  432879:	test   eax,eax
  43287b:	jne    432781 <flatcc_json_printer_struct_vector_field@@Base+0x1b3>
  432881:	mov    rax,QWORD PTR [rbp-0x18]
  432885:	movzx  eax,BYTE PTR [rax+0x31]
  432889:	test   al,al
  43288b:	je     4328c1 <flatcc_json_printer_struct_vector_field@@Base+0x2f3>
  43288d:	mov    rax,QWORD PTR [rbp-0x18]
  432891:	mov    rax,QWORD PTR [rax+0x28]
  432895:	lea    rcx,[rax+0x1]
  432899:	mov    rdx,QWORD PTR [rbp-0x18]
  43289d:	mov    QWORD PTR [rdx+0x28],rcx
  4328a1:	mov    BYTE PTR [rax],0xa
  4328a4:	mov    rax,QWORD PTR [rbp-0x18]
  4328a8:	mov    eax,DWORD PTR [rax+0x38]
  4328ab:	lea    edx,[rax-0x1]
  4328ae:	mov    rax,QWORD PTR [rbp-0x18]
  4328b2:	mov    DWORD PTR [rax+0x38],edx
  4328b5:	mov    rax,QWORD PTR [rbp-0x18]
  4328b9:	mov    rdi,rax
  4328bc:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4328c1:	mov    rax,QWORD PTR [rbp-0x18]
  4328c5:	mov    rax,QWORD PTR [rax+0x28]
  4328c9:	lea    rcx,[rax+0x1]
  4328cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4328d1:	mov    QWORD PTR [rdx+0x28],rcx
  4328d5:	mov    BYTE PTR [rax],0x5d
  4328d8:	nop
  4328d9:	leave  
  4328da:	ret    

00000000004328db <flatcc_json_printer_string_vector_field@@Base>:
  4328db:	push   rbp
  4328dc:	mov    rbp,rsp
  4328df:	sub    rsp,0x30
  4328e3:	mov    QWORD PTR [rbp-0x18],rdi
  4328e7:	mov    QWORD PTR [rbp-0x20],rsi
  4328eb:	mov    DWORD PTR [rbp-0x24],edx
  4328ee:	mov    QWORD PTR [rbp-0x30],rcx
  4328f2:	mov    DWORD PTR [rbp-0x28],r8d
  4328f6:	mov    edx,DWORD PTR [rbp-0x24]
  4328f9:	mov    rax,QWORD PTR [rbp-0x20]
  4328fd:	mov    esi,edx
  4328ff:	mov    rdi,rax
  432902:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  432907:	mov    QWORD PTR [rbp-0x8],rax
  43290b:	cmp    QWORD PTR [rbp-0x8],0x0
  432910:	je     432af1 <flatcc_json_printer_string_vector_field@@Base+0x216>
  432916:	mov    rax,QWORD PTR [rbp-0x20]
  43291a:	mov    eax,DWORD PTR [rax+0x18]
  43291d:	lea    ecx,[rax+0x1]
  432920:	mov    rdx,QWORD PTR [rbp-0x20]
  432924:	mov    DWORD PTR [rdx+0x18],ecx
  432927:	test   eax,eax
  432929:	je     432942 <flatcc_json_printer_string_vector_field@@Base+0x67>
  43292b:	mov    rax,QWORD PTR [rbp-0x18]
  43292f:	mov    rax,QWORD PTR [rax+0x28]
  432933:	lea    rcx,[rax+0x1]
  432937:	mov    rdx,QWORD PTR [rbp-0x18]
  43293b:	mov    QWORD PTR [rdx+0x28],rcx
  43293f:	mov    BYTE PTR [rax],0x2c
  432942:	mov    rax,QWORD PTR [rbp-0x8]
  432946:	mov    rdi,rax
  432949:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  43294e:	mov    QWORD PTR [rbp-0x8],rax
  432952:	mov    rax,QWORD PTR [rbp-0x8]
  432956:	mov    rdi,rax
  432959:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  43295e:	mov    DWORD PTR [rbp-0xc],eax
  432961:	add    QWORD PTR [rbp-0x8],0x4
  432966:	mov    eax,DWORD PTR [rbp-0x28]
  432969:	movsxd rdx,eax
  43296c:	mov    rcx,QWORD PTR [rbp-0x30]
  432970:	mov    rax,QWORD PTR [rbp-0x18]
  432974:	mov    rsi,rcx
  432977:	mov    rdi,rax
  43297a:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  43297f:	mov    rax,QWORD PTR [rbp-0x18]
  432983:	mov    eax,DWORD PTR [rax+0x38]
  432986:	lea    edx,[rax+0x1]
  432989:	mov    rax,QWORD PTR [rbp-0x18]
  43298d:	mov    DWORD PTR [rax+0x38],edx
  432990:	mov    rax,QWORD PTR [rbp-0x18]
  432994:	mov    rax,QWORD PTR [rax+0x28]
  432998:	lea    rcx,[rax+0x1]
  43299c:	mov    rdx,QWORD PTR [rbp-0x18]
  4329a0:	mov    QWORD PTR [rdx+0x28],rcx
  4329a4:	mov    BYTE PTR [rax],0x5b
  4329a7:	cmp    DWORD PTR [rbp-0xc],0x0
  4329ab:	je     432a89 <flatcc_json_printer_string_vector_field@@Base+0x1ae>
  4329b1:	mov    rax,QWORD PTR [rbp-0x18]
  4329b5:	movzx  eax,BYTE PTR [rax+0x31]
  4329b9:	test   al,al
  4329bb:	je     4329e2 <flatcc_json_printer_string_vector_field@@Base+0x107>
  4329bd:	mov    rax,QWORD PTR [rbp-0x18]
  4329c1:	mov    rax,QWORD PTR [rax+0x28]
  4329c5:	lea    rcx,[rax+0x1]
  4329c9:	mov    rdx,QWORD PTR [rbp-0x18]
  4329cd:	mov    QWORD PTR [rdx+0x28],rcx
  4329d1:	mov    BYTE PTR [rax],0xa
  4329d4:	mov    rax,QWORD PTR [rbp-0x18]
  4329d8:	mov    rdi,rax
  4329db:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  4329e0:	jmp    4329ee <flatcc_json_printer_string_vector_field@@Base+0x113>
  4329e2:	mov    rax,QWORD PTR [rbp-0x18]
  4329e6:	mov    rdi,rax
  4329e9:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  4329ee:	mov    rax,QWORD PTR [rbp-0x8]
  4329f2:	mov    rdi,rax
  4329f5:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4329fa:	mov    rdx,rax
  4329fd:	mov    rax,QWORD PTR [rbp-0x18]
  432a01:	mov    rsi,rdx
  432a04:	mov    rdi,rax
  432a07:	call   42cc14 <flatcc_json_printer_enum_flag@@Base+0x5a>
  432a0c:	sub    DWORD PTR [rbp-0xc],0x1
  432a10:	jmp    432a89 <flatcc_json_printer_string_vector_field@@Base+0x1ae>
  432a12:	add    QWORD PTR [rbp-0x8],0x4
  432a17:	mov    rax,QWORD PTR [rbp-0x18]
  432a1b:	mov    rax,QWORD PTR [rax+0x28]
  432a1f:	lea    rcx,[rax+0x1]
  432a23:	mov    rdx,QWORD PTR [rbp-0x18]
  432a27:	mov    QWORD PTR [rdx+0x28],rcx
  432a2b:	mov    BYTE PTR [rax],0x2c
  432a2e:	mov    rax,QWORD PTR [rbp-0x18]
  432a32:	movzx  eax,BYTE PTR [rax+0x31]
  432a36:	test   al,al
  432a38:	je     432a5f <flatcc_json_printer_string_vector_field@@Base+0x184>
  432a3a:	mov    rax,QWORD PTR [rbp-0x18]
  432a3e:	mov    rax,QWORD PTR [rax+0x28]
  432a42:	lea    rcx,[rax+0x1]
  432a46:	mov    rdx,QWORD PTR [rbp-0x18]
  432a4a:	mov    QWORD PTR [rdx+0x28],rcx
  432a4e:	mov    BYTE PTR [rax],0xa
  432a51:	mov    rax,QWORD PTR [rbp-0x18]
  432a55:	mov    rdi,rax
  432a58:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432a5d:	jmp    432a6b <flatcc_json_printer_string_vector_field@@Base+0x190>
  432a5f:	mov    rax,QWORD PTR [rbp-0x18]
  432a63:	mov    rdi,rax
  432a66:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  432a6b:	mov    rax,QWORD PTR [rbp-0x8]
  432a6f:	mov    rdi,rax
  432a72:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432a77:	mov    rdx,rax
  432a7a:	mov    rax,QWORD PTR [rbp-0x18]
  432a7e:	mov    rsi,rdx
  432a81:	mov    rdi,rax
  432a84:	call   42cc14 <flatcc_json_printer_enum_flag@@Base+0x5a>
  432a89:	mov    eax,DWORD PTR [rbp-0xc]
  432a8c:	lea    edx,[rax-0x1]
  432a8f:	mov    DWORD PTR [rbp-0xc],edx
  432a92:	test   eax,eax
  432a94:	jne    432a12 <flatcc_json_printer_string_vector_field@@Base+0x137>
  432a9a:	mov    rax,QWORD PTR [rbp-0x18]
  432a9e:	movzx  eax,BYTE PTR [rax+0x31]
  432aa2:	test   al,al
  432aa4:	je     432ada <flatcc_json_printer_string_vector_field@@Base+0x1ff>
  432aa6:	mov    rax,QWORD PTR [rbp-0x18]
  432aaa:	mov    rax,QWORD PTR [rax+0x28]
  432aae:	lea    rcx,[rax+0x1]
  432ab2:	mov    rdx,QWORD PTR [rbp-0x18]
  432ab6:	mov    QWORD PTR [rdx+0x28],rcx
  432aba:	mov    BYTE PTR [rax],0xa
  432abd:	mov    rax,QWORD PTR [rbp-0x18]
  432ac1:	mov    eax,DWORD PTR [rax+0x38]
  432ac4:	lea    edx,[rax-0x1]
  432ac7:	mov    rax,QWORD PTR [rbp-0x18]
  432acb:	mov    DWORD PTR [rax+0x38],edx
  432ace:	mov    rax,QWORD PTR [rbp-0x18]
  432ad2:	mov    rdi,rax
  432ad5:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432ada:	mov    rax,QWORD PTR [rbp-0x18]
  432ade:	mov    rax,QWORD PTR [rax+0x28]
  432ae2:	lea    rcx,[rax+0x1]
  432ae6:	mov    rdx,QWORD PTR [rbp-0x18]
  432aea:	mov    QWORD PTR [rdx+0x28],rcx
  432aee:	mov    BYTE PTR [rax],0x5d
  432af1:	nop
  432af2:	leave  
  432af3:	ret    

0000000000432af4 <flatcc_json_printer_table_vector_field@@Base>:
  432af4:	push   rbp
  432af5:	mov    rbp,rsp
  432af8:	push   rbx
  432af9:	sub    rsp,0x48
  432afd:	mov    QWORD PTR [rbp-0x28],rdi
  432b01:	mov    QWORD PTR [rbp-0x30],rsi
  432b05:	mov    DWORD PTR [rbp-0x34],edx
  432b08:	mov    QWORD PTR [rbp-0x40],rcx
  432b0c:	mov    DWORD PTR [rbp-0x38],r8d
  432b10:	mov    QWORD PTR [rbp-0x48],r9
  432b14:	mov    edx,DWORD PTR [rbp-0x34]
  432b17:	mov    rax,QWORD PTR [rbp-0x30]
  432b1b:	mov    esi,edx
  432b1d:	mov    rdi,rax
  432b20:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  432b25:	mov    QWORD PTR [rbp-0x18],rax
  432b29:	cmp    QWORD PTR [rbp-0x18],0x0
  432b2e:	je     432ca7 <flatcc_json_printer_table_vector_field@@Base+0x1b3>
  432b34:	mov    rax,QWORD PTR [rbp-0x30]
  432b38:	mov    eax,DWORD PTR [rax+0x18]
  432b3b:	lea    ecx,[rax+0x1]
  432b3e:	mov    rdx,QWORD PTR [rbp-0x30]
  432b42:	mov    DWORD PTR [rdx+0x18],ecx
  432b45:	test   eax,eax
  432b47:	je     432b60 <flatcc_json_printer_table_vector_field@@Base+0x6c>
  432b49:	mov    rax,QWORD PTR [rbp-0x28]
  432b4d:	mov    rax,QWORD PTR [rax+0x28]
  432b51:	lea    rcx,[rax+0x1]
  432b55:	mov    rdx,QWORD PTR [rbp-0x28]
  432b59:	mov    QWORD PTR [rdx+0x28],rcx
  432b5d:	mov    BYTE PTR [rax],0x2c
  432b60:	mov    rax,QWORD PTR [rbp-0x18]
  432b64:	mov    rdi,rax
  432b67:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432b6c:	mov    QWORD PTR [rbp-0x18],rax
  432b70:	mov    rax,QWORD PTR [rbp-0x18]
  432b74:	mov    rdi,rax
  432b77:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432b7c:	mov    DWORD PTR [rbp-0x1c],eax
  432b7f:	add    QWORD PTR [rbp-0x18],0x4
  432b84:	mov    eax,DWORD PTR [rbp-0x38]
  432b87:	movsxd rdx,eax
  432b8a:	mov    rcx,QWORD PTR [rbp-0x40]
  432b8e:	mov    rax,QWORD PTR [rbp-0x28]
  432b92:	mov    rsi,rcx
  432b95:	mov    rdi,rax
  432b98:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  432b9d:	mov    rax,QWORD PTR [rbp-0x28]
  432ba1:	mov    eax,DWORD PTR [rax+0x38]
  432ba4:	lea    edx,[rax+0x1]
  432ba7:	mov    rax,QWORD PTR [rbp-0x28]
  432bab:	mov    DWORD PTR [rax+0x38],edx
  432bae:	mov    rax,QWORD PTR [rbp-0x28]
  432bb2:	mov    rax,QWORD PTR [rax+0x28]
  432bb6:	lea    rcx,[rax+0x1]
  432bba:	mov    rdx,QWORD PTR [rbp-0x28]
  432bbe:	mov    QWORD PTR [rdx+0x28],rcx
  432bc2:	mov    BYTE PTR [rax],0x5b
  432bc5:	cmp    DWORD PTR [rbp-0x1c],0x0
  432bc9:	je     432c43 <flatcc_json_printer_table_vector_field@@Base+0x14f>
  432bcb:	mov    rax,QWORD PTR [rbp-0x30]
  432bcf:	mov    ebx,DWORD PTR [rax+0x14]
  432bd2:	mov    rax,QWORD PTR [rbp-0x18]
  432bd6:	mov    rdi,rax
  432bd9:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432bde:	mov    rsi,rax
  432be1:	mov    rdx,QWORD PTR [rbp-0x48]
  432be5:	mov    rax,QWORD PTR [rbp-0x28]
  432be9:	mov    rcx,rdx
  432bec:	mov    edx,ebx
  432bee:	mov    rdi,rax
  432bf1:	call   42cc5c <flatcc_json_printer_enum_flag@@Base+0xa2>
  432bf6:	sub    DWORD PTR [rbp-0x1c],0x1
  432bfa:	jmp    432c43 <flatcc_json_printer_table_vector_field@@Base+0x14f>
  432bfc:	add    QWORD PTR [rbp-0x18],0x4
  432c01:	mov    rax,QWORD PTR [rbp-0x28]
  432c05:	mov    rax,QWORD PTR [rax+0x28]
  432c09:	lea    rcx,[rax+0x1]
  432c0d:	mov    rdx,QWORD PTR [rbp-0x28]
  432c11:	mov    QWORD PTR [rdx+0x28],rcx
  432c15:	mov    BYTE PTR [rax],0x2c
  432c18:	mov    rax,QWORD PTR [rbp-0x30]
  432c1c:	mov    ebx,DWORD PTR [rax+0x14]
  432c1f:	mov    rax,QWORD PTR [rbp-0x18]
  432c23:	mov    rdi,rax
  432c26:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432c2b:	mov    rsi,rax
  432c2e:	mov    rdx,QWORD PTR [rbp-0x48]
  432c32:	mov    rax,QWORD PTR [rbp-0x28]
  432c36:	mov    rcx,rdx
  432c39:	mov    edx,ebx
  432c3b:	mov    rdi,rax
  432c3e:	call   42cc5c <flatcc_json_printer_enum_flag@@Base+0xa2>
  432c43:	mov    eax,DWORD PTR [rbp-0x1c]
  432c46:	lea    edx,[rax-0x1]
  432c49:	mov    DWORD PTR [rbp-0x1c],edx
  432c4c:	test   eax,eax
  432c4e:	jne    432bfc <flatcc_json_printer_table_vector_field@@Base+0x108>
  432c50:	mov    rax,QWORD PTR [rbp-0x28]
  432c54:	movzx  eax,BYTE PTR [rax+0x31]
  432c58:	test   al,al
  432c5a:	je     432c90 <flatcc_json_printer_table_vector_field@@Base+0x19c>
  432c5c:	mov    rax,QWORD PTR [rbp-0x28]
  432c60:	mov    rax,QWORD PTR [rax+0x28]
  432c64:	lea    rcx,[rax+0x1]
  432c68:	mov    rdx,QWORD PTR [rbp-0x28]
  432c6c:	mov    QWORD PTR [rdx+0x28],rcx
  432c70:	mov    BYTE PTR [rax],0xa
  432c73:	mov    rax,QWORD PTR [rbp-0x28]
  432c77:	mov    eax,DWORD PTR [rax+0x38]
  432c7a:	lea    edx,[rax-0x1]
  432c7d:	mov    rax,QWORD PTR [rbp-0x28]
  432c81:	mov    DWORD PTR [rax+0x38],edx
  432c84:	mov    rax,QWORD PTR [rbp-0x28]
  432c88:	mov    rdi,rax
  432c8b:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  432c90:	mov    rax,QWORD PTR [rbp-0x28]
  432c94:	mov    rax,QWORD PTR [rax+0x28]
  432c98:	lea    rcx,[rax+0x1]
  432c9c:	mov    rdx,QWORD PTR [rbp-0x28]
  432ca0:	mov    QWORD PTR [rdx+0x28],rcx
  432ca4:	mov    BYTE PTR [rax],0x5d
  432ca7:	nop
  432ca8:	add    rsp,0x48
  432cac:	pop    rbx
  432cad:	pop    rbp
  432cae:	ret    

0000000000432caf <flatcc_json_printer_union_vector_field@@Base>:
  432caf:	push   rbp
  432cb0:	mov    rbp,rsp
  432cb3:	sub    rsp,0xe0
  432cba:	mov    QWORD PTR [rbp-0xb8],rdi
  432cc1:	mov    QWORD PTR [rbp-0xc0],rsi
  432cc8:	mov    DWORD PTR [rbp-0xc4],edx
  432cce:	mov    QWORD PTR [rbp-0xd0],rcx
  432cd5:	mov    DWORD PTR [rbp-0xc8],r8d
  432cdc:	mov    QWORD PTR [rbp-0xd8],r9
  432ce3:	mov    rax,QWORD PTR [rbp+0x10]
  432ce7:	mov    QWORD PTR [rbp-0xe0],rax
  432cee:	mov    rax,QWORD PTR fs:0x28
  432cf7:	mov    QWORD PTR [rbp-0x8],rax
  432cfb:	xor    eax,eax
  432cfd:	mov    eax,DWORD PTR [rbp-0xc4]
  432d03:	lea    edx,[rax-0x1]
  432d06:	mov    rax,QWORD PTR [rbp-0xc0]
  432d0d:	mov    esi,edx
  432d0f:	mov    rdi,rax
  432d12:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  432d17:	mov    QWORD PTR [rbp-0x98],rax
  432d1e:	mov    edx,DWORD PTR [rbp-0xc4]
  432d24:	mov    rax,QWORD PTR [rbp-0xc0]
  432d2b:	mov    esi,edx
  432d2d:	mov    rdi,rax
  432d30:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  432d35:	mov    QWORD PTR [rbp-0xa8],rax
  432d3c:	mov    rax,QWORD PTR [rbp-0xc0]
  432d43:	mov    eax,DWORD PTR [rax+0x14]
  432d46:	mov    DWORD PTR [rbp-0x88],eax
  432d4c:	cmp    DWORD PTR [rbp-0xc8],0x64
  432d53:	jle    432d88 <flatcc_json_printer_union_vector_field@@Base+0xd9>
  432d55:	mov    rax,QWORD PTR [rbp-0xb8]
  432d5c:	mov    esi,0x1
  432d61:	mov    rdi,rax
  432d64:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  432d69:	lea    rcx,[rip+0x8d30]        # 43baa0 <flatcc_builder_padding_base@@Base+0x3840>
  432d70:	mov    edx,0x34b
  432d75:	lea    rsi,[rip+0x870c]        # 43b488 <flatcc_builder_padding_base@@Base+0x3228>
  432d7c:	lea    rdi,[rip+0x8770]        # 43b4f3 <flatcc_builder_padding_base@@Base+0x3293>
  432d83:	call   405080 <__assert_fail@plt>
  432d88:	mov    eax,DWORD PTR [rbp-0xc8]
  432d8e:	movsxd rdx,eax
  432d91:	mov    rcx,QWORD PTR [rbp-0xd0]
  432d98:	lea    rax,[rbp-0x80]
  432d9c:	mov    rsi,rcx
  432d9f:	mov    rdi,rax
  432da2:	call   4050f0 <memcpy@plt>
  432da7:	mov    eax,DWORD PTR [rbp-0xc8]
  432dad:	cdqe   
  432daf:	lea    rdx,[rbp-0x80]
  432db3:	add    rax,rdx
  432db6:	mov    edx,0x5
  432dbb:	lea    rsi,[rip+0x874c]        # 43b50e <flatcc_builder_padding_base@@Base+0x32ae>
  432dc2:	mov    rdi,rax
  432dc5:	call   4050f0 <memcpy@plt>
  432dca:	cmp    QWORD PTR [rbp-0xa8],0x0
  432dd2:	je     433173 <flatcc_json_printer_union_vector_field@@Base+0x4c4>
  432dd8:	cmp    QWORD PTR [rbp-0x98],0x0
  432de0:	je     433173 <flatcc_json_printer_union_vector_field@@Base+0x4c4>
  432de6:	mov    eax,DWORD PTR [rbp-0xc8]
  432dec:	lea    r8d,[rax+0x5]
  432df0:	mov    eax,DWORD PTR [rbp-0xc4]
  432df6:	lea    edi,[rax-0x1]
  432df9:	mov    rcx,QWORD PTR [rbp-0xd8]
  432e00:	lea    rdx,[rbp-0x80]
  432e04:	mov    rsi,QWORD PTR [rbp-0xc0]
  432e0b:	mov    rax,QWORD PTR [rbp-0xb8]
  432e12:	mov    r9,rcx
  432e15:	mov    rcx,rdx
  432e18:	mov    edx,edi
  432e1a:	mov    rdi,rax
  432e1d:	call   430de6 <flatcc_json_printer_utype_enum_vector_field@@Base>
  432e22:	mov    rax,QWORD PTR [rbp-0xc0]
  432e29:	mov    eax,DWORD PTR [rax+0x18]
  432e2c:	lea    ecx,[rax+0x1]
  432e2f:	mov    rdx,QWORD PTR [rbp-0xc0]
  432e36:	mov    DWORD PTR [rdx+0x18],ecx
  432e39:	test   eax,eax
  432e3b:	je     432e5a <flatcc_json_printer_union_vector_field@@Base+0x1ab>
  432e3d:	mov    rax,QWORD PTR [rbp-0xb8]
  432e44:	mov    rax,QWORD PTR [rax+0x28]
  432e48:	lea    rcx,[rax+0x1]
  432e4c:	mov    rdx,QWORD PTR [rbp-0xb8]
  432e53:	mov    QWORD PTR [rdx+0x28],rcx
  432e57:	mov    BYTE PTR [rax],0x2c
  432e5a:	mov    rax,QWORD PTR [rbp-0xa8]
  432e61:	mov    rdi,rax
  432e64:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432e69:	mov    QWORD PTR [rbp-0xa8],rax
  432e70:	mov    rax,QWORD PTR [rbp-0x98]
  432e77:	mov    rdi,rax
  432e7a:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  432e7f:	mov    QWORD PTR [rbp-0x98],rax
  432e86:	mov    rax,QWORD PTR [rbp-0xa8]
  432e8d:	mov    rdi,rax
  432e90:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  432e95:	mov    DWORD PTR [rbp-0xac],eax
  432e9b:	add    QWORD PTR [rbp-0xa8],0x4
  432ea3:	add    QWORD PTR [rbp-0x98],0x4
  432eab:	mov    rax,QWORD PTR [rbp-0x98]
  432eb2:	mov    QWORD PTR [rbp-0xa0],rax
  432eb9:	mov    eax,DWORD PTR [rbp-0xc8]
  432ebf:	movsxd rdx,eax
  432ec2:	mov    rcx,QWORD PTR [rbp-0xd0]
  432ec9:	mov    rax,QWORD PTR [rbp-0xb8]
  432ed0:	mov    rsi,rcx
  432ed3:	mov    rdi,rax
  432ed6:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  432edb:	mov    rax,QWORD PTR [rbp-0xb8]
  432ee2:	mov    eax,DWORD PTR [rax+0x38]
  432ee5:	lea    edx,[rax+0x1]
  432ee8:	mov    rax,QWORD PTR [rbp-0xb8]
  432eef:	mov    DWORD PTR [rax+0x38],edx
  432ef2:	mov    rax,QWORD PTR [rbp-0xb8]
  432ef9:	mov    rax,QWORD PTR [rax+0x28]
  432efd:	lea    rcx,[rax+0x1]
  432f01:	mov    rdx,QWORD PTR [rbp-0xb8]
  432f08:	mov    QWORD PTR [rdx+0x28],rcx
  432f0c:	mov    BYTE PTR [rax],0x5b
  432f0f:	cmp    DWORD PTR [rbp-0xac],0x0
  432f16:	je     4330ed <flatcc_json_printer_union_vector_field@@Base+0x43e>
  432f1c:	mov    rax,QWORD PTR [rbp-0xa0]
  432f23:	mov    rdi,rax
  432f26:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  432f2b:	mov    BYTE PTR [rbp-0xad],al
  432f31:	cmp    BYTE PTR [rbp-0xad],0x0
  432f38:	je     432f74 <flatcc_json_printer_union_vector_field@@Base+0x2c5>
  432f3a:	movzx  eax,BYTE PTR [rbp-0xad]
  432f41:	mov    BYTE PTR [rbp-0x84],al
  432f47:	mov    rax,QWORD PTR [rbp-0xa8]
  432f4e:	mov    QWORD PTR [rbp-0x90],rax
  432f55:	lea    rcx,[rbp-0x90]
  432f5c:	mov    rdx,QWORD PTR [rbp-0xb8]
  432f63:	mov    rax,QWORD PTR [rbp-0xe0]
  432f6a:	mov    rsi,rcx
  432f6d:	mov    rdi,rdx
  432f70:	call   rax
  432f72:	jmp    432fe8 <flatcc_json_printer_union_vector_field@@Base+0x339>
  432f74:	mov    rax,QWORD PTR [rbp-0xb8]
  432f7b:	mov    rax,QWORD PTR [rax+0x28]
  432f7f:	lea    rcx,[rax+0x1]
  432f83:	mov    rdx,QWORD PTR [rbp-0xb8]
  432f8a:	mov    QWORD PTR [rdx+0x28],rcx
  432f8e:	mov    BYTE PTR [rax],0x6e
  432f91:	mov    rax,QWORD PTR [rbp-0xb8]
  432f98:	mov    rax,QWORD PTR [rax+0x28]
  432f9c:	lea    rcx,[rax+0x1]
  432fa0:	mov    rdx,QWORD PTR [rbp-0xb8]
  432fa7:	mov    QWORD PTR [rdx+0x28],rcx
  432fab:	mov    BYTE PTR [rax],0x75
  432fae:	mov    rax,QWORD PTR [rbp-0xb8]
  432fb5:	mov    rax,QWORD PTR [rax+0x28]
  432fb9:	lea    rcx,[rax+0x1]
  432fbd:	mov    rdx,QWORD PTR [rbp-0xb8]
  432fc4:	mov    QWORD PTR [rdx+0x28],rcx
  432fc8:	mov    BYTE PTR [rax],0x6c
  432fcb:	mov    rax,QWORD PTR [rbp-0xb8]
  432fd2:	mov    rax,QWORD PTR [rax+0x28]
  432fd6:	lea    rcx,[rax+0x1]
  432fda:	mov    rdx,QWORD PTR [rbp-0xb8]
  432fe1:	mov    QWORD PTR [rdx+0x28],rcx
  432fe5:	mov    BYTE PTR [rax],0x6c
  432fe8:	sub    DWORD PTR [rbp-0xac],0x1
  432fef:	jmp    4330ed <flatcc_json_printer_union_vector_field@@Base+0x43e>
  432ff4:	add    QWORD PTR [rbp-0xa8],0x4
  432ffc:	add    QWORD PTR [rbp-0xa0],0x1
  433004:	mov    rax,QWORD PTR [rbp-0xa0]
  43300b:	mov    rdi,rax
  43300e:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  433013:	mov    BYTE PTR [rbp-0xad],al
  433019:	mov    rax,QWORD PTR [rbp-0xb8]
  433020:	mov    rax,QWORD PTR [rax+0x28]
  433024:	lea    rcx,[rax+0x1]
  433028:	mov    rdx,QWORD PTR [rbp-0xb8]
  43302f:	mov    QWORD PTR [rdx+0x28],rcx
  433033:	mov    BYTE PTR [rax],0x2c
  433036:	cmp    BYTE PTR [rbp-0xad],0x0
  43303d:	je     433079 <flatcc_json_printer_union_vector_field@@Base+0x3ca>
  43303f:	movzx  eax,BYTE PTR [rbp-0xad]
  433046:	mov    BYTE PTR [rbp-0x84],al
  43304c:	mov    rax,QWORD PTR [rbp-0xa8]
  433053:	mov    QWORD PTR [rbp-0x90],rax
  43305a:	lea    rcx,[rbp-0x90]
  433061:	mov    rdx,QWORD PTR [rbp-0xb8]
  433068:	mov    rax,QWORD PTR [rbp-0xe0]
  43306f:	mov    rsi,rcx
  433072:	mov    rdi,rdx
  433075:	call   rax
  433077:	jmp    4330ed <flatcc_json_printer_union_vector_field@@Base+0x43e>
  433079:	mov    rax,QWORD PTR [rbp-0xb8]
  433080:	mov    rax,QWORD PTR [rax+0x28]
  433084:	lea    rcx,[rax+0x1]
  433088:	mov    rdx,QWORD PTR [rbp-0xb8]
  43308f:	mov    QWORD PTR [rdx+0x28],rcx
  433093:	mov    BYTE PTR [rax],0x6e
  433096:	mov    rax,QWORD PTR [rbp-0xb8]
  43309d:	mov    rax,QWORD PTR [rax+0x28]
  4330a1:	lea    rcx,[rax+0x1]
  4330a5:	mov    rdx,QWORD PTR [rbp-0xb8]
  4330ac:	mov    QWORD PTR [rdx+0x28],rcx
  4330b0:	mov    BYTE PTR [rax],0x75
  4330b3:	mov    rax,QWORD PTR [rbp-0xb8]
  4330ba:	mov    rax,QWORD PTR [rax+0x28]
  4330be:	lea    rcx,[rax+0x1]
  4330c2:	mov    rdx,QWORD PTR [rbp-0xb8]
  4330c9:	mov    QWORD PTR [rdx+0x28],rcx
  4330cd:	mov    BYTE PTR [rax],0x6c
  4330d0:	mov    rax,QWORD PTR [rbp-0xb8]
  4330d7:	mov    rax,QWORD PTR [rax+0x28]
  4330db:	lea    rcx,[rax+0x1]
  4330df:	mov    rdx,QWORD PTR [rbp-0xb8]
  4330e6:	mov    QWORD PTR [rdx+0x28],rcx
  4330ea:	mov    BYTE PTR [rax],0x6c
  4330ed:	mov    eax,DWORD PTR [rbp-0xac]
  4330f3:	lea    edx,[rax-0x1]
  4330f6:	mov    DWORD PTR [rbp-0xac],edx
  4330fc:	test   eax,eax
  4330fe:	jne    432ff4 <flatcc_json_printer_union_vector_field@@Base+0x345>
  433104:	mov    rax,QWORD PTR [rbp-0xb8]
  43310b:	movzx  eax,BYTE PTR [rax+0x31]
  43310f:	test   al,al
  433111:	je     433156 <flatcc_json_printer_union_vector_field@@Base+0x4a7>
  433113:	mov    rax,QWORD PTR [rbp-0xb8]
  43311a:	mov    rax,QWORD PTR [rax+0x28]
  43311e:	lea    rcx,[rax+0x1]
  433122:	mov    rdx,QWORD PTR [rbp-0xb8]
  433129:	mov    QWORD PTR [rdx+0x28],rcx
  43312d:	mov    BYTE PTR [rax],0xa
  433130:	mov    rax,QWORD PTR [rbp-0xb8]
  433137:	mov    eax,DWORD PTR [rax+0x38]
  43313a:	lea    edx,[rax-0x1]
  43313d:	mov    rax,QWORD PTR [rbp-0xb8]
  433144:	mov    DWORD PTR [rax+0x38],edx
  433147:	mov    rax,QWORD PTR [rbp-0xb8]
  43314e:	mov    rdi,rax
  433151:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433156:	mov    rax,QWORD PTR [rbp-0xb8]
  43315d:	mov    rax,QWORD PTR [rax+0x28]
  433161:	lea    rcx,[rax+0x1]
  433165:	mov    rdx,QWORD PTR [rbp-0xb8]
  43316c:	mov    QWORD PTR [rdx+0x28],rcx
  433170:	mov    BYTE PTR [rax],0x5d
  433173:	nop
  433174:	mov    rax,QWORD PTR [rbp-0x8]
  433178:	xor    rax,QWORD PTR fs:0x28
  433181:	je     433188 <flatcc_json_printer_union_vector_field@@Base+0x4d9>
  433183:	call   405070 <__stack_chk_fail@plt>
  433188:	leave  
  433189:	ret    

000000000043318a <flatcc_json_printer_table_field@@Base>:
  43318a:	push   rbp
  43318b:	mov    rbp,rsp
  43318e:	push   rbx
  43318f:	sub    rsp,0x48
  433193:	mov    QWORD PTR [rbp-0x28],rdi
  433197:	mov    QWORD PTR [rbp-0x30],rsi
  43319b:	mov    DWORD PTR [rbp-0x34],edx
  43319e:	mov    QWORD PTR [rbp-0x40],rcx
  4331a2:	mov    DWORD PTR [rbp-0x38],r8d
  4331a6:	mov    QWORD PTR [rbp-0x48],r9
  4331aa:	mov    edx,DWORD PTR [rbp-0x34]
  4331ad:	mov    rax,QWORD PTR [rbp-0x30]
  4331b1:	mov    esi,edx
  4331b3:	mov    rdi,rax
  4331b6:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  4331bb:	mov    QWORD PTR [rbp-0x18],rax
  4331bf:	cmp    QWORD PTR [rbp-0x18],0x0
  4331c4:	je     433236 <flatcc_json_printer_table_field@@Base+0xac>
  4331c6:	mov    rax,QWORD PTR [rbp-0x30]
  4331ca:	mov    eax,DWORD PTR [rax+0x18]
  4331cd:	lea    ecx,[rax+0x1]
  4331d0:	mov    rdx,QWORD PTR [rbp-0x30]
  4331d4:	mov    DWORD PTR [rdx+0x18],ecx
  4331d7:	test   eax,eax
  4331d9:	je     4331f2 <flatcc_json_printer_table_field@@Base+0x68>
  4331db:	mov    rax,QWORD PTR [rbp-0x28]
  4331df:	mov    rax,QWORD PTR [rax+0x28]
  4331e3:	lea    rcx,[rax+0x1]
  4331e7:	mov    rdx,QWORD PTR [rbp-0x28]
  4331eb:	mov    QWORD PTR [rdx+0x28],rcx
  4331ef:	mov    BYTE PTR [rax],0x2c
  4331f2:	mov    eax,DWORD PTR [rbp-0x38]
  4331f5:	movsxd rdx,eax
  4331f8:	mov    rcx,QWORD PTR [rbp-0x40]
  4331fc:	mov    rax,QWORD PTR [rbp-0x28]
  433200:	mov    rsi,rcx
  433203:	mov    rdi,rax
  433206:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  43320b:	mov    rax,QWORD PTR [rbp-0x30]
  43320f:	mov    ebx,DWORD PTR [rax+0x14]
  433212:	mov    rax,QWORD PTR [rbp-0x18]
  433216:	mov    rdi,rax
  433219:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  43321e:	mov    rsi,rax
  433221:	mov    rdx,QWORD PTR [rbp-0x48]
  433225:	mov    rax,QWORD PTR [rbp-0x28]
  433229:	mov    rcx,rdx
  43322c:	mov    edx,ebx
  43322e:	mov    rdi,rax
  433231:	call   42cc5c <flatcc_json_printer_enum_flag@@Base+0xa2>
  433236:	nop
  433237:	add    rsp,0x48
  43323b:	pop    rbx
  43323c:	pop    rbp
  43323d:	ret    

000000000043323e <flatcc_json_printer_union_field@@Base>:
  43323e:	push   rbp
  43323f:	mov    rbp,rsp
  433242:	sub    rsp,0x70
  433246:	mov    QWORD PTR [rbp-0x48],rdi
  43324a:	mov    QWORD PTR [rbp-0x50],rsi
  43324e:	mov    DWORD PTR [rbp-0x54],edx
  433251:	mov    QWORD PTR [rbp-0x60],rcx
  433255:	mov    DWORD PTR [rbp-0x58],r8d
  433259:	mov    QWORD PTR [rbp-0x68],r9
  43325d:	mov    rax,QWORD PTR [rbp+0x10]
  433261:	mov    QWORD PTR [rbp-0x70],rax
  433265:	mov    rax,QWORD PTR fs:0x28
  43326e:	mov    QWORD PTR [rbp-0x8],rax
  433272:	xor    eax,eax
  433274:	mov    eax,DWORD PTR [rbp-0x54]
  433277:	lea    edx,[rax-0x1]
  43327a:	mov    rax,QWORD PTR [rbp-0x50]
  43327e:	mov    esi,edx
  433280:	mov    rdi,rax
  433283:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  433288:	mov    QWORD PTR [rbp-0x30],rax
  43328c:	mov    edx,DWORD PTR [rbp-0x54]
  43328f:	mov    rax,QWORD PTR [rbp-0x50]
  433293:	mov    esi,edx
  433295:	mov    rdi,rax
  433298:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  43329d:	mov    QWORD PTR [rbp-0x28],rax
  4332a1:	cmp    QWORD PTR [rbp-0x28],0x0
  4332a6:	je     433509 <flatcc_json_printer_union_field@@Base+0x2cb>
  4332ac:	cmp    QWORD PTR [rbp-0x30],0x0
  4332b1:	je     433509 <flatcc_json_printer_union_field@@Base+0x2cb>
  4332b7:	mov    rax,QWORD PTR [rbp-0x30]
  4332bb:	mov    rdi,rax
  4332be:	call   428ac5 <flatcc_json_parser_struct_as_root@@Base+0x3ed>
  4332c3:	mov    BYTE PTR [rbp-0x31],al
  4332c6:	mov    rax,QWORD PTR [rbp-0x50]
  4332ca:	mov    eax,DWORD PTR [rax+0x18]
  4332cd:	lea    ecx,[rax+0x1]
  4332d0:	mov    rdx,QWORD PTR [rbp-0x50]
  4332d4:	mov    DWORD PTR [rdx+0x18],ecx
  4332d7:	test   eax,eax
  4332d9:	je     4332f2 <flatcc_json_printer_union_field@@Base+0xb4>
  4332db:	mov    rax,QWORD PTR [rbp-0x48]
  4332df:	mov    rax,QWORD PTR [rax+0x28]
  4332e3:	lea    rcx,[rax+0x1]
  4332e7:	mov    rdx,QWORD PTR [rbp-0x48]
  4332eb:	mov    QWORD PTR [rdx+0x28],rcx
  4332ef:	mov    BYTE PTR [rax],0x2c
  4332f2:	mov    rax,QWORD PTR [rbp-0x48]
  4332f6:	movzx  eax,BYTE PTR [rax+0x31]
  4332fa:	test   al,al
  4332fc:	je     433323 <flatcc_json_printer_union_field@@Base+0xe5>
  4332fe:	mov    rax,QWORD PTR [rbp-0x48]
  433302:	mov    rax,QWORD PTR [rax+0x28]
  433306:	lea    rcx,[rax+0x1]
  43330a:	mov    rdx,QWORD PTR [rbp-0x48]
  43330e:	mov    QWORD PTR [rdx+0x28],rcx
  433312:	mov    BYTE PTR [rax],0xa
  433315:	mov    rax,QWORD PTR [rbp-0x48]
  433319:	mov    rdi,rax
  43331c:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433321:	jmp    43332f <flatcc_json_printer_union_field@@Base+0xf1>
  433323:	mov    rax,QWORD PTR [rbp-0x48]
  433327:	mov    rdi,rax
  43332a:	call   428b4b <flatcc_json_parser_struct_as_root@@Base+0x473>
  43332f:	mov    rax,QWORD PTR [rbp-0x48]
  433333:	mov    rax,QWORD PTR [rax+0x28]
  433337:	mov    BYTE PTR [rax],0x22
  43333a:	mov    rax,QWORD PTR [rbp-0x48]
  43333e:	mov    rdx,QWORD PTR [rax+0x28]
  433342:	mov    rax,QWORD PTR [rbp-0x48]
  433346:	movzx  eax,BYTE PTR [rax+0x32]
  43334a:	test   al,al
  43334c:	sete   al
  43334f:	movzx  eax,al
  433352:	add    rdx,rax
  433355:	mov    rax,QWORD PTR [rbp-0x48]
  433359:	mov    QWORD PTR [rax+0x28],rdx
  43335d:	mov    rax,QWORD PTR [rbp-0x48]
  433361:	mov    rdx,QWORD PTR [rax+0x28]
  433365:	mov    eax,DWORD PTR [rbp-0x58]
  433368:	cdqe   
  43336a:	add    rdx,rax
  43336d:	mov    rax,QWORD PTR [rbp-0x48]
  433371:	mov    rax,QWORD PTR [rax+0x20]
  433375:	cmp    rdx,rax
  433378:	jae    4333b1 <flatcc_json_printer_union_field@@Base+0x173>
  43337a:	mov    eax,DWORD PTR [rbp-0x58]
  43337d:	movsxd rdx,eax
  433380:	mov    rax,QWORD PTR [rbp-0x48]
  433384:	mov    rax,QWORD PTR [rax+0x28]
  433388:	mov    rcx,QWORD PTR [rbp-0x60]
  43338c:	mov    rsi,rcx
  43338f:	mov    rdi,rax
  433392:	call   4050f0 <memcpy@plt>
  433397:	mov    rax,QWORD PTR [rbp-0x48]
  43339b:	mov    rdx,QWORD PTR [rax+0x28]
  43339f:	mov    eax,DWORD PTR [rbp-0x58]
  4333a2:	cdqe   
  4333a4:	add    rdx,rax
  4333a7:	mov    rax,QWORD PTR [rbp-0x48]
  4333ab:	mov    QWORD PTR [rax+0x28],rdx
  4333af:	jmp    4333ca <flatcc_json_printer_union_field@@Base+0x18c>
  4333b1:	mov    eax,DWORD PTR [rbp-0x58]
  4333b4:	movsxd rdx,eax
  4333b7:	mov    rcx,QWORD PTR [rbp-0x60]
  4333bb:	mov    rax,QWORD PTR [rbp-0x48]
  4333bf:	mov    rsi,rcx
  4333c2:	mov    rdi,rax
  4333c5:	call   42bf38 <flatcc_json_printer_fmt_bool@@Base+0x165>
  4333ca:	mov    rax,QWORD PTR [rbp-0x48]
  4333ce:	mov    edx,0x5
  4333d3:	lea    rsi,[rip+0x8134]        # 43b50e <flatcc_builder_padding_base@@Base+0x32ae>
  4333da:	mov    rdi,rax
  4333dd:	call   42bf38 <flatcc_json_printer_fmt_bool@@Base+0x165>
  4333e2:	mov    rax,QWORD PTR [rbp-0x48]
  4333e6:	mov    rax,QWORD PTR [rax+0x28]
  4333ea:	mov    BYTE PTR [rax],0x22
  4333ed:	mov    rax,QWORD PTR [rbp-0x48]
  4333f1:	mov    rdx,QWORD PTR [rax+0x28]
  4333f5:	mov    rax,QWORD PTR [rbp-0x48]
  4333f9:	movzx  eax,BYTE PTR [rax+0x32]
  4333fd:	test   al,al
  4333ff:	sete   al
  433402:	movzx  eax,al
  433405:	add    rdx,rax
  433408:	mov    rax,QWORD PTR [rbp-0x48]
  43340c:	mov    QWORD PTR [rax+0x28],rdx
  433410:	mov    rax,QWORD PTR [rbp-0x48]
  433414:	mov    rax,QWORD PTR [rax+0x28]
  433418:	lea    rcx,[rax+0x1]
  43341c:	mov    rdx,QWORD PTR [rbp-0x48]
  433420:	mov    QWORD PTR [rdx+0x28],rcx
  433424:	mov    BYTE PTR [rax],0x3a
  433427:	mov    rax,QWORD PTR [rbp-0x48]
  43342b:	mov    rax,QWORD PTR [rax+0x28]
  43342f:	mov    BYTE PTR [rax],0x20
  433432:	mov    rax,QWORD PTR [rbp-0x48]
  433436:	mov    rdx,QWORD PTR [rax+0x28]
  43343a:	mov    rax,QWORD PTR [rbp-0x48]
  43343e:	movzx  eax,BYTE PTR [rax+0x31]
  433442:	test   al,al
  433444:	setne  al
  433447:	movzx  eax,al
  43344a:	add    rdx,rax
  43344d:	mov    rax,QWORD PTR [rbp-0x48]
  433451:	mov    QWORD PTR [rax+0x28],rdx
  433455:	mov    rax,QWORD PTR [rbp-0x48]
  433459:	movzx  eax,BYTE PTR [rax+0x33]
  43345d:	test   al,al
  43345f:	je     433491 <flatcc_json_printer_union_field@@Base+0x253>
  433461:	mov    rax,QWORD PTR [rbp-0x48]
  433465:	mov    rdx,QWORD PTR [rax+0x28]
  433469:	movzx  eax,BYTE PTR [rbp-0x31]
  43346d:	mov    rsi,rdx
  433470:	mov    edi,eax
  433472:	call   428bd8 <flatcc_json_parser_struct_as_root@@Base+0x500>
  433477:	mov    ecx,eax
  433479:	mov    rax,QWORD PTR [rbp-0x48]
  43347d:	mov    rdx,QWORD PTR [rax+0x28]
  433481:	movsxd rax,ecx
  433484:	add    rdx,rax
  433487:	mov    rax,QWORD PTR [rbp-0x48]
  43348b:	mov    QWORD PTR [rax+0x28],rdx
  43348f:	jmp    4334a4 <flatcc_json_printer_union_field@@Base+0x266>
  433491:	movzx  ecx,BYTE PTR [rbp-0x31]
  433495:	mov    rdx,QWORD PTR [rbp-0x48]
  433499:	mov    rax,QWORD PTR [rbp-0x68]
  43349d:	mov    esi,ecx
  43349f:	mov    rdi,rdx
  4334a2:	call   rax
  4334a4:	cmp    BYTE PTR [rbp-0x31],0x0
  4334a8:	je     43350a <flatcc_json_printer_union_field@@Base+0x2cc>
  4334aa:	mov    rax,QWORD PTR [rbp-0x48]
  4334ae:	mov    rax,QWORD PTR [rax+0x28]
  4334b2:	lea    rcx,[rax+0x1]
  4334b6:	mov    rdx,QWORD PTR [rbp-0x48]
  4334ba:	mov    QWORD PTR [rdx+0x28],rcx
  4334be:	mov    BYTE PTR [rax],0x2c
  4334c1:	mov    eax,DWORD PTR [rbp-0x58]
  4334c4:	movsxd rdx,eax
  4334c7:	mov    rcx,QWORD PTR [rbp-0x60]
  4334cb:	mov    rax,QWORD PTR [rbp-0x48]
  4334cf:	mov    rsi,rcx
  4334d2:	mov    rdi,rax
  4334d5:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4334da:	mov    rax,QWORD PTR [rbp-0x50]
  4334de:	mov    eax,DWORD PTR [rax+0x14]
  4334e1:	mov    DWORD PTR [rbp-0x18],eax
  4334e4:	movzx  eax,BYTE PTR [rbp-0x31]
  4334e8:	mov    BYTE PTR [rbp-0x14],al
  4334eb:	mov    rax,QWORD PTR [rbp-0x28]
  4334ef:	mov    QWORD PTR [rbp-0x20],rax
  4334f3:	lea    rcx,[rbp-0x20]
  4334f7:	mov    rdx,QWORD PTR [rbp-0x48]
  4334fb:	mov    rax,QWORD PTR [rbp-0x70]
  4334ff:	mov    rsi,rcx
  433502:	mov    rdi,rdx
  433505:	call   rax
  433507:	jmp    43350a <flatcc_json_printer_union_field@@Base+0x2cc>
  433509:	nop
  43350a:	mov    rax,QWORD PTR [rbp-0x8]
  43350e:	xor    rax,QWORD PTR fs:0x28
  433517:	je     43351e <flatcc_json_printer_union_field@@Base+0x2e0>
  433519:	call   405070 <__stack_chk_fail@plt>
  43351e:	leave  
  43351f:	ret    

0000000000433520 <flatcc_json_printer_union_table@@Base>:
  433520:	push   rbp
  433521:	mov    rbp,rsp
  433524:	push   rbx
  433525:	sub    rsp,0x28
  433529:	mov    QWORD PTR [rbp-0x18],rdi
  43352d:	mov    QWORD PTR [rbp-0x20],rsi
  433531:	mov    QWORD PTR [rbp-0x28],rdx
  433535:	mov    rax,QWORD PTR [rbp-0x20]
  433539:	mov    ebx,DWORD PTR [rax+0x8]
  43353c:	mov    rax,QWORD PTR [rbp-0x20]
  433540:	mov    rax,QWORD PTR [rax]
  433543:	mov    rdi,rax
  433546:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  43354b:	mov    rsi,rax
  43354e:	mov    rdx,QWORD PTR [rbp-0x28]
  433552:	mov    rax,QWORD PTR [rbp-0x18]
  433556:	mov    rcx,rdx
  433559:	mov    edx,ebx
  43355b:	mov    rdi,rax
  43355e:	call   42cc5c <flatcc_json_printer_enum_flag@@Base+0xa2>
  433563:	nop
  433564:	add    rsp,0x28
  433568:	pop    rbx
  433569:	pop    rbp
  43356a:	ret    

000000000043356b <flatcc_json_printer_union_struct@@Base>:
  43356b:	push   rbp
  43356c:	mov    rbp,rsp
  43356f:	sub    rsp,0x20
  433573:	mov    QWORD PTR [rbp-0x8],rdi
  433577:	mov    QWORD PTR [rbp-0x10],rsi
  43357b:	mov    QWORD PTR [rbp-0x18],rdx
  43357f:	mov    rax,QWORD PTR [rbp-0x8]
  433583:	mov    eax,DWORD PTR [rax+0x38]
  433586:	lea    edx,[rax+0x1]
  433589:	mov    rax,QWORD PTR [rbp-0x8]
  43358d:	mov    DWORD PTR [rax+0x38],edx
  433590:	mov    rax,QWORD PTR [rbp-0x8]
  433594:	mov    rax,QWORD PTR [rax+0x28]
  433598:	lea    rcx,[rax+0x1]
  43359c:	mov    rdx,QWORD PTR [rbp-0x8]
  4335a0:	mov    QWORD PTR [rdx+0x28],rcx
  4335a4:	mov    BYTE PTR [rax],0x7b
  4335a7:	mov    rax,QWORD PTR [rbp-0x10]
  4335ab:	mov    rax,QWORD PTR [rax]
  4335ae:	mov    rdi,rax
  4335b1:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4335b6:	mov    rcx,rax
  4335b9:	mov    rdx,QWORD PTR [rbp-0x8]
  4335bd:	mov    rax,QWORD PTR [rbp-0x18]
  4335c1:	mov    rsi,rcx
  4335c4:	mov    rdi,rdx
  4335c7:	call   rax
  4335c9:	mov    rax,QWORD PTR [rbp-0x8]
  4335cd:	movzx  eax,BYTE PTR [rax+0x31]
  4335d1:	test   al,al
  4335d3:	je     433609 <flatcc_json_printer_union_struct@@Base+0x9e>
  4335d5:	mov    rax,QWORD PTR [rbp-0x8]
  4335d9:	mov    rax,QWORD PTR [rax+0x28]
  4335dd:	lea    rcx,[rax+0x1]
  4335e1:	mov    rdx,QWORD PTR [rbp-0x8]
  4335e5:	mov    QWORD PTR [rdx+0x28],rcx
  4335e9:	mov    BYTE PTR [rax],0xa
  4335ec:	mov    rax,QWORD PTR [rbp-0x8]
  4335f0:	mov    eax,DWORD PTR [rax+0x38]
  4335f3:	lea    edx,[rax-0x1]
  4335f6:	mov    rax,QWORD PTR [rbp-0x8]
  4335fa:	mov    DWORD PTR [rax+0x38],edx
  4335fd:	mov    rax,QWORD PTR [rbp-0x8]
  433601:	mov    rdi,rax
  433604:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433609:	mov    rax,QWORD PTR [rbp-0x8]
  43360d:	mov    rax,QWORD PTR [rax+0x28]
  433611:	lea    rcx,[rax+0x1]
  433615:	mov    rdx,QWORD PTR [rbp-0x8]
  433619:	mov    QWORD PTR [rdx+0x28],rcx
  43361d:	mov    BYTE PTR [rax],0x7d
  433620:	nop
  433621:	leave  
  433622:	ret    

0000000000433623 <flatcc_json_printer_union_string@@Base>:
  433623:	push   rbp
  433624:	mov    rbp,rsp
  433627:	sub    rsp,0x10
  43362b:	mov    QWORD PTR [rbp-0x8],rdi
  43362f:	mov    QWORD PTR [rbp-0x10],rsi
  433633:	mov    rax,QWORD PTR [rbp-0x10]
  433637:	mov    rax,QWORD PTR [rax]
  43363a:	mov    rdi,rax
  43363d:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  433642:	mov    rdx,rax
  433645:	mov    rax,QWORD PTR [rbp-0x8]
  433649:	mov    rsi,rdx
  43364c:	mov    rdi,rax
  43364f:	call   42cc14 <flatcc_json_printer_enum_flag@@Base+0x5a>
  433654:	nop
  433655:	leave  
  433656:	ret    

0000000000433657 <flatcc_json_printer_embedded_struct_field@@Base>:
  433657:	push   rbp
  433658:	mov    rbp,rsp
  43365b:	sub    rsp,0x30
  43365f:	mov    QWORD PTR [rbp-0x8],rdi
  433663:	mov    DWORD PTR [rbp-0xc],esi
  433666:	mov    QWORD PTR [rbp-0x18],rdx
  43366a:	mov    QWORD PTR [rbp-0x20],rcx
  43366e:	mov    QWORD PTR [rbp-0x28],r8
  433672:	mov    DWORD PTR [rbp-0x10],r9d
  433676:	cmp    DWORD PTR [rbp-0xc],0x0
  43367a:	je     433693 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
  43367c:	mov    rax,QWORD PTR [rbp-0x8]
  433680:	mov    rax,QWORD PTR [rax+0x28]
  433684:	lea    rcx,[rax+0x1]
  433688:	mov    rdx,QWORD PTR [rbp-0x8]
  43368c:	mov    QWORD PTR [rdx+0x28],rcx
  433690:	mov    BYTE PTR [rax],0x2c
  433693:	mov    eax,DWORD PTR [rbp-0x10]
  433696:	movsxd rdx,eax
  433699:	mov    rcx,QWORD PTR [rbp-0x28]
  43369d:	mov    rax,QWORD PTR [rbp-0x8]
  4336a1:	mov    rsi,rcx
  4336a4:	mov    rdi,rax
  4336a7:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4336ac:	mov    rax,QWORD PTR [rbp-0x8]
  4336b0:	mov    eax,DWORD PTR [rax+0x38]
  4336b3:	lea    edx,[rax+0x1]
  4336b6:	mov    rax,QWORD PTR [rbp-0x8]
  4336ba:	mov    DWORD PTR [rax+0x38],edx
  4336bd:	mov    rax,QWORD PTR [rbp-0x8]
  4336c1:	mov    rax,QWORD PTR [rax+0x28]
  4336c5:	lea    rcx,[rax+0x1]
  4336c9:	mov    rdx,QWORD PTR [rbp-0x8]
  4336cd:	mov    QWORD PTR [rdx+0x28],rcx
  4336d1:	mov    BYTE PTR [rax],0x7b
  4336d4:	mov    rdx,QWORD PTR [rbp-0x18]
  4336d8:	mov    rax,QWORD PTR [rbp-0x20]
  4336dc:	lea    rcx,[rdx+rax*1]
  4336e0:	mov    rdx,QWORD PTR [rbp-0x8]
  4336e4:	mov    rax,QWORD PTR [rbp+0x10]
  4336e8:	mov    rsi,rcx
  4336eb:	mov    rdi,rdx
  4336ee:	call   rax
  4336f0:	mov    rax,QWORD PTR [rbp-0x8]
  4336f4:	movzx  eax,BYTE PTR [rax+0x31]
  4336f8:	test   al,al
  4336fa:	je     433730 <flatcc_json_printer_embedded_struct_field@@Base+0xd9>
  4336fc:	mov    rax,QWORD PTR [rbp-0x8]
  433700:	mov    rax,QWORD PTR [rax+0x28]
  433704:	lea    rcx,[rax+0x1]
  433708:	mov    rdx,QWORD PTR [rbp-0x8]
  43370c:	mov    QWORD PTR [rdx+0x28],rcx
  433710:	mov    BYTE PTR [rax],0xa
  433713:	mov    rax,QWORD PTR [rbp-0x8]
  433717:	mov    eax,DWORD PTR [rax+0x38]
  43371a:	lea    edx,[rax-0x1]
  43371d:	mov    rax,QWORD PTR [rbp-0x8]
  433721:	mov    DWORD PTR [rax+0x38],edx
  433724:	mov    rax,QWORD PTR [rbp-0x8]
  433728:	mov    rdi,rax
  43372b:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433730:	mov    rax,QWORD PTR [rbp-0x8]
  433734:	mov    rax,QWORD PTR [rax+0x28]
  433738:	lea    rcx,[rax+0x1]
  43373c:	mov    rdx,QWORD PTR [rbp-0x8]
  433740:	mov    QWORD PTR [rdx+0x28],rcx
  433744:	mov    BYTE PTR [rax],0x7d
  433747:	nop
  433748:	leave  
  433749:	ret    

000000000043374a <flatcc_json_printer_struct_field@@Base>:
  43374a:	push   rbp
  43374b:	mov    rbp,rsp
  43374e:	sub    rsp,0x40
  433752:	mov    QWORD PTR [rbp-0x18],rdi
  433756:	mov    QWORD PTR [rbp-0x20],rsi
  43375a:	mov    DWORD PTR [rbp-0x24],edx
  43375d:	mov    QWORD PTR [rbp-0x30],rcx
  433761:	mov    DWORD PTR [rbp-0x28],r8d
  433765:	mov    QWORD PTR [rbp-0x38],r9
  433769:	mov    edx,DWORD PTR [rbp-0x24]
  43376c:	mov    rax,QWORD PTR [rbp-0x20]
  433770:	mov    esi,edx
  433772:	mov    rdi,rax
  433775:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  43377a:	mov    QWORD PTR [rbp-0x8],rax
  43377e:	cmp    QWORD PTR [rbp-0x8],0x0
  433783:	je     433861 <flatcc_json_printer_struct_field@@Base+0x117>
  433789:	mov    rax,QWORD PTR [rbp-0x20]
  43378d:	mov    eax,DWORD PTR [rax+0x18]
  433790:	lea    ecx,[rax+0x1]
  433793:	mov    rdx,QWORD PTR [rbp-0x20]
  433797:	mov    DWORD PTR [rdx+0x18],ecx
  43379a:	test   eax,eax
  43379c:	je     4337b5 <flatcc_json_printer_struct_field@@Base+0x6b>
  43379e:	mov    rax,QWORD PTR [rbp-0x18]
  4337a2:	mov    rax,QWORD PTR [rax+0x28]
  4337a6:	lea    rcx,[rax+0x1]
  4337aa:	mov    rdx,QWORD PTR [rbp-0x18]
  4337ae:	mov    QWORD PTR [rdx+0x28],rcx
  4337b2:	mov    BYTE PTR [rax],0x2c
  4337b5:	mov    eax,DWORD PTR [rbp-0x28]
  4337b8:	movsxd rdx,eax
  4337bb:	mov    rcx,QWORD PTR [rbp-0x30]
  4337bf:	mov    rax,QWORD PTR [rbp-0x18]
  4337c3:	mov    rsi,rcx
  4337c6:	mov    rdi,rax
  4337c9:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  4337ce:	mov    rax,QWORD PTR [rbp-0x18]
  4337d2:	mov    eax,DWORD PTR [rax+0x38]
  4337d5:	lea    edx,[rax+0x1]
  4337d8:	mov    rax,QWORD PTR [rbp-0x18]
  4337dc:	mov    DWORD PTR [rax+0x38],edx
  4337df:	mov    rax,QWORD PTR [rbp-0x18]
  4337e3:	mov    rax,QWORD PTR [rax+0x28]
  4337e7:	lea    rcx,[rax+0x1]
  4337eb:	mov    rdx,QWORD PTR [rbp-0x18]
  4337ef:	mov    QWORD PTR [rdx+0x28],rcx
  4337f3:	mov    BYTE PTR [rax],0x7b
  4337f6:	mov    rcx,QWORD PTR [rbp-0x8]
  4337fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4337fe:	mov    rax,QWORD PTR [rbp-0x38]
  433802:	mov    rsi,rcx
  433805:	mov    rdi,rdx
  433808:	call   rax
  43380a:	mov    rax,QWORD PTR [rbp-0x18]
  43380e:	movzx  eax,BYTE PTR [rax+0x31]
  433812:	test   al,al
  433814:	je     43384a <flatcc_json_printer_struct_field@@Base+0x100>
  433816:	mov    rax,QWORD PTR [rbp-0x18]
  43381a:	mov    rax,QWORD PTR [rax+0x28]
  43381e:	lea    rcx,[rax+0x1]
  433822:	mov    rdx,QWORD PTR [rbp-0x18]
  433826:	mov    QWORD PTR [rdx+0x28],rcx
  43382a:	mov    BYTE PTR [rax],0xa
  43382d:	mov    rax,QWORD PTR [rbp-0x18]
  433831:	mov    eax,DWORD PTR [rax+0x38]
  433834:	lea    edx,[rax-0x1]
  433837:	mov    rax,QWORD PTR [rbp-0x18]
  43383b:	mov    DWORD PTR [rax+0x38],edx
  43383e:	mov    rax,QWORD PTR [rbp-0x18]
  433842:	mov    rdi,rax
  433845:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  43384a:	mov    rax,QWORD PTR [rbp-0x18]
  43384e:	mov    rax,QWORD PTR [rax+0x28]
  433852:	lea    rcx,[rax+0x1]
  433856:	mov    rdx,QWORD PTR [rbp-0x18]
  43385a:	mov    QWORD PTR [rdx+0x28],rcx
  43385e:	mov    BYTE PTR [rax],0x7d
  433861:	nop
  433862:	leave  
  433863:	ret    
  433864:	push   rbp
  433865:	mov    rbp,rsp
  433868:	sub    rsp,0x30
  43386c:	mov    QWORD PTR [rbp-0x18],rdi
  433870:	mov    QWORD PTR [rbp-0x20],rsi
  433874:	mov    QWORD PTR [rbp-0x28],rdx
  433878:	mov    QWORD PTR [rbp-0x30],rcx
  43387c:	mov    rax,QWORD PTR fs:0x28
  433885:	mov    QWORD PTR [rbp-0x8],rax
  433889:	xor    eax,eax
  43388b:	mov    DWORD PTR [rbp-0x10],0x0
  433892:	cmp    QWORD PTR [rbp-0x20],0x0
  433897:	je     4338a0 <flatcc_json_printer_struct_field@@Base+0x156>
  433899:	cmp    QWORD PTR [rbp-0x28],0x7
  43389e:	ja     4338d0 <flatcc_json_printer_struct_field@@Base+0x186>
  4338a0:	mov    rax,QWORD PTR [rbp-0x18]
  4338a4:	mov    esi,0x1
  4338a9:	mov    rdi,rax
  4338ac:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  4338b1:	lea    rcx,[rip+0x8210]        # 43bac8 <flatcc_builder_padding_base@@Base+0x3868>
  4338b8:	mov    edx,0x3fb
  4338bd:	lea    rsi,[rip+0x7bc4]        # 43b488 <flatcc_builder_padding_base@@Base+0x3228>
  4338c4:	lea    rdi,[rip+0x7c4d]        # 43b518 <flatcc_builder_padding_base@@Base+0x32b8>
  4338cb:	call   405080 <__assert_fail@plt>
  4338d0:	cmp    QWORD PTR [rbp-0x30],0x0
  4338d5:	je     43394e <flatcc_json_printer_struct_field@@Base+0x204>
  4338d7:	mov    rcx,QWORD PTR [rbp-0x30]
  4338db:	lea    rax,[rbp-0x10]
  4338df:	mov    edx,0x4
  4338e4:	mov    rsi,rcx
  4338e7:	mov    rdi,rax
  4338ea:	call   405040 <strncpy@plt>
  4338ef:	mov    eax,DWORD PTR [rbp-0x10]
  4338f2:	mov    edi,eax
  4338f4:	call   428af0 <flatcc_json_parser_struct_as_root@@Base+0x418>
  4338f9:	mov    DWORD PTR [rbp-0x10],eax
  4338fc:	mov    rax,QWORD PTR [rbp-0x20]
  433900:	add    rax,0x4
  433904:	mov    rdi,rax
  433907:	call   428afc <flatcc_json_parser_struct_as_root@@Base+0x424>
  43390c:	mov    DWORD PTR [rbp-0xc],eax
  43390f:	mov    eax,DWORD PTR [rbp-0x10]
  433912:	test   eax,eax
  433914:	je     43394e <flatcc_json_printer_struct_field@@Base+0x204>
  433916:	mov    eax,DWORD PTR [rbp-0x10]
  433919:	cmp    DWORD PTR [rbp-0xc],eax
  43391c:	je     43394e <flatcc_json_printer_struct_field@@Base+0x204>
  43391e:	mov    rax,QWORD PTR [rbp-0x18]
  433922:	mov    esi,0x1
  433927:	mov    rdi,rax
  43392a:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  43392f:	lea    rcx,[rip+0x8192]        # 43bac8 <flatcc_builder_padding_base@@Base+0x3868>
  433936:	mov    edx,0x404
  43393b:	lea    rsi,[rip+0x7b46]        # 43b488 <flatcc_builder_padding_base@@Base+0x3228>
  433942:	lea    rdi,[rip+0x7bee]        # 43b537 <flatcc_builder_padding_base@@Base+0x32d7>
  433949:	call   405080 <__assert_fail@plt>
  43394e:	mov    eax,0x1
  433953:	mov    rdx,QWORD PTR [rbp-0x8]
  433957:	xor    rdx,QWORD PTR fs:0x28
  433960:	je     433967 <flatcc_json_printer_struct_field@@Base+0x21d>
  433962:	call   405070 <__stack_chk_fail@plt>
  433967:	leave  
  433968:	ret    

0000000000433969 <flatcc_json_printer_struct_as_root@@Base>:
  433969:	push   rbp
  43396a:	mov    rbp,rsp
  43396d:	sub    rsp,0x30
  433971:	mov    QWORD PTR [rbp-0x8],rdi
  433975:	mov    QWORD PTR [rbp-0x10],rsi
  433979:	mov    QWORD PTR [rbp-0x18],rdx
  43397d:	mov    QWORD PTR [rbp-0x20],rcx
  433981:	mov    QWORD PTR [rbp-0x28],r8
  433985:	mov    rcx,QWORD PTR [rbp-0x20]
  433989:	mov    rdx,QWORD PTR [rbp-0x18]
  43398d:	mov    rsi,QWORD PTR [rbp-0x10]
  433991:	mov    rax,QWORD PTR [rbp-0x8]
  433995:	mov    rdi,rax
  433998:	call   433864 <flatcc_json_printer_struct_field@@Base+0x11a>
  43399d:	test   eax,eax
  43399f:	jne    4339ab <flatcc_json_printer_struct_as_root@@Base+0x42>
  4339a1:	mov    eax,0xffffffff
  4339a6:	jmp    433ac8 <flatcc_json_printer_struct_as_root@@Base+0x15f>
  4339ab:	mov    rax,QWORD PTR [rbp-0x8]
  4339af:	mov    eax,DWORD PTR [rax+0x38]
  4339b2:	lea    edx,[rax+0x1]
  4339b5:	mov    rax,QWORD PTR [rbp-0x8]
  4339b9:	mov    DWORD PTR [rax+0x38],edx
  4339bc:	mov    rax,QWORD PTR [rbp-0x8]
  4339c0:	mov    rax,QWORD PTR [rax+0x28]
  4339c4:	lea    rcx,[rax+0x1]
  4339c8:	mov    rdx,QWORD PTR [rbp-0x8]
  4339cc:	mov    QWORD PTR [rdx+0x28],rcx
  4339d0:	mov    BYTE PTR [rax],0x7b
  4339d3:	mov    rax,QWORD PTR [rbp-0x10]
  4339d7:	mov    rdi,rax
  4339da:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  4339df:	mov    rcx,rax
  4339e2:	mov    rdx,QWORD PTR [rbp-0x8]
  4339e6:	mov    rax,QWORD PTR [rbp-0x28]
  4339ea:	mov    rsi,rcx
  4339ed:	mov    rdi,rdx
  4339f0:	call   rax
  4339f2:	mov    rax,QWORD PTR [rbp-0x8]
  4339f6:	movzx  eax,BYTE PTR [rax+0x31]
  4339fa:	test   al,al
  4339fc:	je     433a32 <flatcc_json_printer_struct_as_root@@Base+0xc9>
  4339fe:	mov    rax,QWORD PTR [rbp-0x8]
  433a02:	mov    rax,QWORD PTR [rax+0x28]
  433a06:	lea    rcx,[rax+0x1]
  433a0a:	mov    rdx,QWORD PTR [rbp-0x8]
  433a0e:	mov    QWORD PTR [rdx+0x28],rcx
  433a12:	mov    BYTE PTR [rax],0xa
  433a15:	mov    rax,QWORD PTR [rbp-0x8]
  433a19:	mov    eax,DWORD PTR [rax+0x38]
  433a1c:	lea    edx,[rax-0x1]
  433a1f:	mov    rax,QWORD PTR [rbp-0x8]
  433a23:	mov    DWORD PTR [rax+0x38],edx
  433a26:	mov    rax,QWORD PTR [rbp-0x8]
  433a2a:	mov    rdi,rax
  433a2d:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433a32:	mov    rax,QWORD PTR [rbp-0x8]
  433a36:	mov    rax,QWORD PTR [rax+0x28]
  433a3a:	lea    rcx,[rax+0x1]
  433a3e:	mov    rdx,QWORD PTR [rbp-0x8]
  433a42:	mov    QWORD PTR [rdx+0x28],rcx
  433a46:	mov    BYTE PTR [rax],0x7d
  433a49:	mov    rax,QWORD PTR [rbp-0x8]
  433a4d:	movzx  eax,BYTE PTR [rax+0x31]
  433a51:	test   al,al
  433a53:	je     433a77 <flatcc_json_printer_struct_as_root@@Base+0x10e>
  433a55:	mov    rax,QWORD PTR [rbp-0x8]
  433a59:	mov    eax,DWORD PTR [rax+0x38]
  433a5c:	test   eax,eax
  433a5e:	jne    433a77 <flatcc_json_printer_struct_as_root@@Base+0x10e>
  433a60:	mov    rax,QWORD PTR [rbp-0x8]
  433a64:	mov    rax,QWORD PTR [rax+0x28]
  433a68:	lea    rcx,[rax+0x1]
  433a6c:	mov    rdx,QWORD PTR [rbp-0x8]
  433a70:	mov    QWORD PTR [rdx+0x28],rcx
  433a74:	mov    BYTE PTR [rax],0xa
  433a77:	mov    rax,QWORD PTR [rbp-0x8]
  433a7b:	mov    rax,QWORD PTR [rax+0x48]
  433a7f:	mov    rdx,QWORD PTR [rbp-0x8]
  433a83:	mov    esi,0x1
  433a88:	mov    rdi,rdx
  433a8b:	call   rax
  433a8d:	mov    rax,QWORD PTR [rbp-0x8]
  433a91:	mov    rdi,rax
  433a94:	call   428b3a <flatcc_json_parser_struct_as_root@@Base+0x462>
  433a99:	test   eax,eax
  433a9b:	jne    433ac3 <flatcc_json_printer_struct_as_root@@Base+0x15a>
  433a9d:	mov    rax,QWORD PTR [rbp-0x8]
  433aa1:	mov    rax,QWORD PTR [rax+0x18]
  433aa5:	mov    edx,eax
  433aa7:	mov    rax,QWORD PTR [rbp-0x8]
  433aab:	mov    rax,QWORD PTR [rax+0x28]
  433aaf:	mov    rcx,rax
  433ab2:	mov    rax,QWORD PTR [rbp-0x8]
  433ab6:	mov    rax,QWORD PTR [rax]
  433ab9:	sub    rcx,rax
  433abc:	mov    rax,rcx
  433abf:	add    eax,edx
  433ac1:	jmp    433ac8 <flatcc_json_printer_struct_as_root@@Base+0x15f>
  433ac3:	mov    eax,0xffffffff
  433ac8:	leave  
  433ac9:	ret    

0000000000433aca <flatcc_json_printer_table_as_root@@Base>:
  433aca:	push   rbp
  433acb:	mov    rbp,rsp
  433ace:	sub    rsp,0x30
  433ad2:	mov    QWORD PTR [rbp-0x8],rdi
  433ad6:	mov    QWORD PTR [rbp-0x10],rsi
  433ada:	mov    QWORD PTR [rbp-0x18],rdx
  433ade:	mov    QWORD PTR [rbp-0x20],rcx
  433ae2:	mov    QWORD PTR [rbp-0x28],r8
  433ae6:	mov    rcx,QWORD PTR [rbp-0x20]
  433aea:	mov    rdx,QWORD PTR [rbp-0x18]
  433aee:	mov    rsi,QWORD PTR [rbp-0x10]
  433af2:	mov    rax,QWORD PTR [rbp-0x8]
  433af6:	mov    rdi,rax
  433af9:	call   433864 <flatcc_json_printer_struct_field@@Base+0x11a>
  433afe:	test   eax,eax
  433b00:	jne    433b0c <flatcc_json_printer_table_as_root@@Base+0x42>
  433b02:	mov    eax,0xffffffff
  433b07:	jmp    433bb2 <flatcc_json_printer_table_as_root@@Base+0xe8>
  433b0c:	mov    rax,QWORD PTR [rbp-0x10]
  433b10:	mov    rdi,rax
  433b13:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  433b18:	mov    rsi,rax
  433b1b:	mov    rdx,QWORD PTR [rbp-0x28]
  433b1f:	mov    rax,QWORD PTR [rbp-0x8]
  433b23:	mov    rcx,rdx
  433b26:	mov    edx,0x64
  433b2b:	mov    rdi,rax
  433b2e:	call   42cc5c <flatcc_json_printer_enum_flag@@Base+0xa2>
  433b33:	mov    rax,QWORD PTR [rbp-0x8]
  433b37:	movzx  eax,BYTE PTR [rax+0x31]
  433b3b:	test   al,al
  433b3d:	je     433b61 <flatcc_json_printer_table_as_root@@Base+0x97>
  433b3f:	mov    rax,QWORD PTR [rbp-0x8]
  433b43:	mov    eax,DWORD PTR [rax+0x38]
  433b46:	test   eax,eax
  433b48:	jne    433b61 <flatcc_json_printer_table_as_root@@Base+0x97>
  433b4a:	mov    rax,QWORD PTR [rbp-0x8]
  433b4e:	mov    rax,QWORD PTR [rax+0x28]
  433b52:	lea    rcx,[rax+0x1]
  433b56:	mov    rdx,QWORD PTR [rbp-0x8]
  433b5a:	mov    QWORD PTR [rdx+0x28],rcx
  433b5e:	mov    BYTE PTR [rax],0xa
  433b61:	mov    rax,QWORD PTR [rbp-0x8]
  433b65:	mov    rax,QWORD PTR [rax+0x48]
  433b69:	mov    rdx,QWORD PTR [rbp-0x8]
  433b6d:	mov    esi,0x1
  433b72:	mov    rdi,rdx
  433b75:	call   rax
  433b77:	mov    rax,QWORD PTR [rbp-0x8]
  433b7b:	mov    rdi,rax
  433b7e:	call   428b3a <flatcc_json_parser_struct_as_root@@Base+0x462>
  433b83:	test   eax,eax
  433b85:	jne    433bad <flatcc_json_printer_table_as_root@@Base+0xe3>
  433b87:	mov    rax,QWORD PTR [rbp-0x8]
  433b8b:	mov    rax,QWORD PTR [rax+0x18]
  433b8f:	mov    edx,eax
  433b91:	mov    rax,QWORD PTR [rbp-0x8]
  433b95:	mov    rax,QWORD PTR [rax+0x28]
  433b99:	mov    rcx,rax
  433b9c:	mov    rax,QWORD PTR [rbp-0x8]
  433ba0:	mov    rax,QWORD PTR [rax]
  433ba3:	sub    rcx,rax
  433ba6:	mov    rax,rcx
  433ba9:	add    eax,edx
  433bab:	jmp    433bb2 <flatcc_json_printer_table_as_root@@Base+0xe8>
  433bad:	mov    eax,0xffffffff
  433bb2:	leave  
  433bb3:	ret    

0000000000433bb4 <flatcc_json_printer_struct_as_nested_root@@Base>:
  433bb4:	push   rbp
  433bb5:	mov    rbp,rsp
  433bb8:	sub    rsp,0x40
  433bbc:	mov    QWORD PTR [rbp-0x18],rdi
  433bc0:	mov    QWORD PTR [rbp-0x20],rsi
  433bc4:	mov    DWORD PTR [rbp-0x24],edx
  433bc7:	mov    QWORD PTR [rbp-0x30],rcx
  433bcb:	mov    DWORD PTR [rbp-0x28],r8d
  433bcf:	mov    QWORD PTR [rbp-0x38],r9
  433bd3:	mov    edx,DWORD PTR [rbp-0x24]
  433bd6:	mov    rax,QWORD PTR [rbp-0x20]
  433bda:	mov    esi,edx
  433bdc:	mov    rdi,rax
  433bdf:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  433be4:	mov    QWORD PTR [rbp-0x8],rax
  433be8:	cmp    QWORD PTR [rbp-0x8],0x0
  433bed:	je     433d1f <flatcc_json_printer_struct_as_nested_root@@Base+0x16b>
  433bf3:	mov    rax,QWORD PTR [rbp-0x8]
  433bf7:	mov    rdi,rax
  433bfa:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  433bff:	mov    edx,eax
  433c01:	mov    rax,QWORD PTR [rbp-0x8]
  433c05:	add    rax,rdx
  433c08:	mov    QWORD PTR [rbp-0x8],rax
  433c0c:	mov    rax,QWORD PTR [rbp-0x8]
  433c10:	mov    rdi,rax
  433c13:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  433c18:	mov    DWORD PTR [rbp-0xc],eax
  433c1b:	mov    edx,DWORD PTR [rbp-0xc]
  433c1e:	mov    rcx,QWORD PTR [rbp-0x38]
  433c22:	mov    rsi,QWORD PTR [rbp-0x8]
  433c26:	mov    rax,QWORD PTR [rbp-0x18]
  433c2a:	mov    rdi,rax
  433c2d:	call   433864 <flatcc_json_printer_struct_field@@Base+0x11a>
  433c32:	test   eax,eax
  433c34:	je     433d22 <flatcc_json_printer_struct_as_nested_root@@Base+0x16e>
  433c3a:	mov    rax,QWORD PTR [rbp-0x20]
  433c3e:	mov    eax,DWORD PTR [rax+0x18]
  433c41:	lea    ecx,[rax+0x1]
  433c44:	mov    rdx,QWORD PTR [rbp-0x20]
  433c48:	mov    DWORD PTR [rdx+0x18],ecx
  433c4b:	test   eax,eax
  433c4d:	je     433c66 <flatcc_json_printer_struct_as_nested_root@@Base+0xb2>
  433c4f:	mov    rax,QWORD PTR [rbp-0x18]
  433c53:	mov    rax,QWORD PTR [rax+0x28]
  433c57:	lea    rcx,[rax+0x1]
  433c5b:	mov    rdx,QWORD PTR [rbp-0x18]
  433c5f:	mov    QWORD PTR [rdx+0x28],rcx
  433c63:	mov    BYTE PTR [rax],0x2c
  433c66:	mov    eax,DWORD PTR [rbp-0x28]
  433c69:	movsxd rdx,eax
  433c6c:	mov    rcx,QWORD PTR [rbp-0x30]
  433c70:	mov    rax,QWORD PTR [rbp-0x18]
  433c74:	mov    rsi,rcx
  433c77:	mov    rdi,rax
  433c7a:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  433c7f:	mov    rax,QWORD PTR [rbp-0x18]
  433c83:	mov    eax,DWORD PTR [rax+0x38]
  433c86:	lea    edx,[rax+0x1]
  433c89:	mov    rax,QWORD PTR [rbp-0x18]
  433c8d:	mov    DWORD PTR [rax+0x38],edx
  433c90:	mov    rax,QWORD PTR [rbp-0x18]
  433c94:	mov    rax,QWORD PTR [rax+0x28]
  433c98:	lea    rcx,[rax+0x1]
  433c9c:	mov    rdx,QWORD PTR [rbp-0x18]
  433ca0:	mov    QWORD PTR [rdx+0x28],rcx
  433ca4:	mov    BYTE PTR [rax],0x7b
  433ca7:	mov    rax,QWORD PTR [rbp-0x8]
  433cab:	mov    rdi,rax
  433cae:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  433cb3:	mov    rcx,rax
  433cb6:	mov    rdx,QWORD PTR [rbp-0x18]
  433cba:	mov    rax,QWORD PTR [rbp+0x10]
  433cbe:	mov    rsi,rcx
  433cc1:	mov    rdi,rdx
  433cc4:	call   rax
  433cc6:	mov    rax,QWORD PTR [rbp-0x18]
  433cca:	movzx  eax,BYTE PTR [rax+0x31]
  433cce:	test   al,al
  433cd0:	je     433d06 <flatcc_json_printer_struct_as_nested_root@@Base+0x152>
  433cd2:	mov    rax,QWORD PTR [rbp-0x18]
  433cd6:	mov    rax,QWORD PTR [rax+0x28]
  433cda:	lea    rcx,[rax+0x1]
  433cde:	mov    rdx,QWORD PTR [rbp-0x18]
  433ce2:	mov    QWORD PTR [rdx+0x28],rcx
  433ce6:	mov    BYTE PTR [rax],0xa
  433ce9:	mov    rax,QWORD PTR [rbp-0x18]
  433ced:	mov    eax,DWORD PTR [rax+0x38]
  433cf0:	lea    edx,[rax-0x1]
  433cf3:	mov    rax,QWORD PTR [rbp-0x18]
  433cf7:	mov    DWORD PTR [rax+0x38],edx
  433cfa:	mov    rax,QWORD PTR [rbp-0x18]
  433cfe:	mov    rdi,rax
  433d01:	call   42c587 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
  433d06:	mov    rax,QWORD PTR [rbp-0x18]
  433d0a:	mov    rax,QWORD PTR [rax+0x28]
  433d0e:	lea    rcx,[rax+0x1]
  433d12:	mov    rdx,QWORD PTR [rbp-0x18]
  433d16:	mov    QWORD PTR [rdx+0x28],rcx
  433d1a:	mov    BYTE PTR [rax],0x7d
  433d1d:	jmp    433d23 <flatcc_json_printer_struct_as_nested_root@@Base+0x16f>
  433d1f:	nop
  433d20:	jmp    433d23 <flatcc_json_printer_struct_as_nested_root@@Base+0x16f>
  433d22:	nop
  433d23:	leave  
  433d24:	ret    

0000000000433d25 <flatcc_json_printer_table_as_nested_root@@Base>:
  433d25:	push   rbp
  433d26:	mov    rbp,rsp
  433d29:	push   rbx
  433d2a:	sub    rsp,0x48
  433d2e:	mov    QWORD PTR [rbp-0x28],rdi
  433d32:	mov    QWORD PTR [rbp-0x30],rsi
  433d36:	mov    DWORD PTR [rbp-0x34],edx
  433d39:	mov    QWORD PTR [rbp-0x40],rcx
  433d3d:	mov    DWORD PTR [rbp-0x38],r8d
  433d41:	mov    QWORD PTR [rbp-0x48],r9
  433d45:	mov    edx,DWORD PTR [rbp-0x34]
  433d48:	mov    rax,QWORD PTR [rbp-0x30]
  433d4c:	mov    esi,edx
  433d4e:	mov    rdi,rax
  433d51:	call   42bd1b <flatcc_json_printer_error_string@@Base+0x99>
  433d56:	mov    QWORD PTR [rbp-0x18],rax
  433d5a:	cmp    QWORD PTR [rbp-0x18],0x0
  433d5f:	je     433e1c <flatcc_json_printer_table_as_nested_root@@Base+0xf7>
  433d65:	mov    rax,QWORD PTR [rbp-0x18]
  433d69:	mov    rdi,rax
  433d6c:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  433d71:	mov    edx,eax
  433d73:	mov    rax,QWORD PTR [rbp-0x18]
  433d77:	add    rax,rdx
  433d7a:	mov    QWORD PTR [rbp-0x18],rax
  433d7e:	mov    rax,QWORD PTR [rbp-0x18]
  433d82:	mov    rdi,rax
  433d85:	call   428a45 <flatcc_json_parser_struct_as_root@@Base+0x36d>
  433d8a:	mov    DWORD PTR [rbp-0x1c],eax
  433d8d:	add    QWORD PTR [rbp-0x18],0x4
  433d92:	mov    edx,DWORD PTR [rbp-0x1c]
  433d95:	mov    rcx,QWORD PTR [rbp-0x48]
  433d99:	mov    rsi,QWORD PTR [rbp-0x18]
  433d9d:	mov    rax,QWORD PTR [rbp-0x28]
  433da1:	mov    rdi,rax
  433da4:	call   433864 <flatcc_json_printer_struct_field@@Base+0x11a>
  433da9:	test   eax,eax
  433dab:	je     433e1f <flatcc_json_printer_table_as_nested_root@@Base+0xfa>
  433dad:	mov    rax,QWORD PTR [rbp-0x30]
  433db1:	mov    eax,DWORD PTR [rax+0x18]
  433db4:	lea    ecx,[rax+0x1]
  433db7:	mov    rdx,QWORD PTR [rbp-0x30]
  433dbb:	mov    DWORD PTR [rdx+0x18],ecx
  433dbe:	test   eax,eax
  433dc0:	je     433dd9 <flatcc_json_printer_table_as_nested_root@@Base+0xb4>
  433dc2:	mov    rax,QWORD PTR [rbp-0x28]
  433dc6:	mov    rax,QWORD PTR [rax+0x28]
  433dca:	lea    rcx,[rax+0x1]
  433dce:	mov    rdx,QWORD PTR [rbp-0x28]
  433dd2:	mov    QWORD PTR [rdx+0x28],rcx
  433dd6:	mov    BYTE PTR [rax],0x2c
  433dd9:	mov    eax,DWORD PTR [rbp-0x38]
  433ddc:	movsxd rdx,eax
  433ddf:	mov    rcx,QWORD PTR [rbp-0x40]
  433de3:	mov    rax,QWORD PTR [rbp-0x28]
  433de7:	mov    rsi,rcx
  433dea:	mov    rdi,rax
  433ded:	call   42c7f3 <flatcc_json_printer_get_level@@Base+0xeb>
  433df2:	mov    rax,QWORD PTR [rbp-0x30]
  433df6:	mov    ebx,DWORD PTR [rax+0x14]
  433df9:	mov    rax,QWORD PTR [rbp-0x18]
  433dfd:	mov    rdi,rax
  433e00:	call   42bcd5 <flatcc_json_printer_error_string@@Base+0x53>
  433e05:	mov    rsi,rax
  433e08:	mov    rax,QWORD PTR [rbp-0x28]
  433e0c:	mov    rcx,QWORD PTR [rbp+0x10]
  433e10:	mov    edx,ebx
  433e12:	mov    rdi,rax
  433e15:	call   42cc5c <flatcc_json_printer_enum_flag@@Base+0xa2>
  433e1a:	jmp    433e20 <flatcc_json_printer_table_as_nested_root@@Base+0xfb>
  433e1c:	nop
  433e1d:	jmp    433e20 <flatcc_json_printer_table_as_nested_root@@Base+0xfb>
  433e1f:	nop
  433e20:	add    rsp,0x48
  433e24:	pop    rbx
  433e25:	pop    rbp
  433e26:	ret    
  433e27:	push   rbp
  433e28:	mov    rbp,rsp
  433e2b:	sub    rsp,0x20
  433e2f:	mov    QWORD PTR [rbp-0x18],rdi
  433e33:	mov    DWORD PTR [rbp-0x1c],esi
  433e36:	cmp    DWORD PTR [rbp-0x1c],0x0
  433e3a:	jne    433ef9 <flatcc_json_printer_table_as_nested_root@@Base+0x1d4>
  433e40:	mov    rax,QWORD PTR [rbp-0x18]
  433e44:	mov    rdx,QWORD PTR [rax+0x28]
  433e48:	mov    rax,QWORD PTR [rbp-0x18]
  433e4c:	mov    rax,QWORD PTR [rax+0x20]
  433e50:	cmp    rdx,rax
  433e53:	jb     433ef9 <flatcc_json_printer_table_as_nested_root@@Base+0x1d4>
  433e59:	mov    rax,QWORD PTR [rbp-0x18]
  433e5d:	mov    rax,QWORD PTR [rax+0x28]
  433e61:	mov    rdx,rax
  433e64:	mov    rax,QWORD PTR [rbp-0x18]
  433e68:	mov    rax,QWORD PTR [rax+0x20]
  433e6c:	sub    rdx,rax
  433e6f:	mov    rax,rdx
  433e72:	mov    QWORD PTR [rbp-0x10],rax
  433e76:	mov    rax,QWORD PTR [rbp-0x18]
  433e7a:	mov    rdx,QWORD PTR [rax+0x40]
  433e7e:	mov    rax,QWORD PTR [rbp-0x18]
  433e82:	mov    rsi,QWORD PTR [rax+0x10]
  433e86:	mov    rax,QWORD PTR [rbp-0x18]
  433e8a:	mov    rax,QWORD PTR [rax]
  433e8d:	mov    rcx,rdx
  433e90:	mov    edx,0x1
  433e95:	mov    rdi,rax
  433e98:	call   405140 <fwrite@plt>
  433e9d:	mov    rax,QWORD PTR [rbp-0x18]
  433ea1:	mov    rdx,QWORD PTR [rax]
  433ea4:	mov    rax,QWORD PTR [rbp-0x18]
  433ea8:	mov    rax,QWORD PTR [rax+0x10]
  433eac:	lea    rcx,[rdx+rax*1]
  433eb0:	mov    rax,QWORD PTR [rbp-0x18]
  433eb4:	mov    rax,QWORD PTR [rax]
  433eb7:	mov    rdx,QWORD PTR [rbp-0x10]
  433ebb:	mov    rsi,rcx
  433ebe:	mov    rdi,rax
  433ec1:	call   4050f0 <memcpy@plt>
  433ec6:	mov    rax,QWORD PTR [rbp-0x18]
  433eca:	mov    rdx,QWORD PTR [rax]
  433ecd:	mov    rax,QWORD PTR [rbp-0x10]
  433ed1:	add    rdx,rax
  433ed4:	mov    rax,QWORD PTR [rbp-0x18]
  433ed8:	mov    QWORD PTR [rax+0x28],rdx
  433edc:	mov    rax,QWORD PTR [rbp-0x18]
  433ee0:	mov    rdx,QWORD PTR [rax+0x18]
  433ee4:	mov    rax,QWORD PTR [rbp-0x18]
  433ee8:	mov    rax,QWORD PTR [rax+0x10]
  433eec:	add    rdx,rax
  433eef:	mov    rax,QWORD PTR [rbp-0x18]
  433ef3:	mov    QWORD PTR [rax+0x18],rdx
  433ef7:	jmp    433f5e <flatcc_json_printer_table_as_nested_root@@Base+0x239>
  433ef9:	mov    rax,QWORD PTR [rbp-0x18]
  433efd:	mov    rax,QWORD PTR [rax+0x28]
  433f01:	mov    rdx,rax
  433f04:	mov    rax,QWORD PTR [rbp-0x18]
  433f08:	mov    rax,QWORD PTR [rax]
  433f0b:	sub    rdx,rax
  433f0e:	mov    rax,rdx
  433f11:	mov    QWORD PTR [rbp-0x8],rax
  433f15:	mov    rax,QWORD PTR [rbp-0x18]
  433f19:	mov    rdx,QWORD PTR [rax+0x40]
  433f1d:	mov    rax,QWORD PTR [rbp-0x18]
  433f21:	mov    rax,QWORD PTR [rax]
  433f24:	mov    rsi,QWORD PTR [rbp-0x8]
  433f28:	mov    rcx,rdx
  433f2b:	mov    edx,0x1
  433f30:	mov    rdi,rax
  433f33:	call   405140 <fwrite@plt>
  433f38:	mov    rax,QWORD PTR [rbp-0x18]
  433f3c:	mov    rdx,QWORD PTR [rax]
  433f3f:	mov    rax,QWORD PTR [rbp-0x18]
  433f43:	mov    QWORD PTR [rax+0x28],rdx
  433f47:	mov    rax,QWORD PTR [rbp-0x18]
  433f4b:	mov    rdx,QWORD PTR [rax+0x18]
  433f4f:	mov    rax,QWORD PTR [rbp-0x8]
  433f53:	add    rdx,rax
  433f56:	mov    rax,QWORD PTR [rbp-0x18]
  433f5a:	mov    QWORD PTR [rax+0x18],rdx
  433f5e:	mov    rax,QWORD PTR [rbp-0x18]
  433f62:	mov    rax,QWORD PTR [rax+0x28]
  433f66:	mov    BYTE PTR [rax],0x0
  433f69:	nop
  433f6a:	leave  
  433f6b:	ret    

0000000000433f6c <flatcc_json_printer_init@@Base>:
  433f6c:	push   rbp
  433f6d:	mov    rbp,rsp
  433f70:	sub    rsp,0x10
  433f74:	mov    QWORD PTR [rbp-0x8],rdi
  433f78:	mov    QWORD PTR [rbp-0x10],rsi
  433f7c:	mov    rax,QWORD PTR [rbp-0x8]
  433f80:	mov    edx,0x50
  433f85:	mov    esi,0x0
  433f8a:	mov    rdi,rax
  433f8d:	call   405090 <memset@plt>
  433f92:	cmp    QWORD PTR [rbp-0x10],0x0
  433f97:	je     433f9f <flatcc_json_printer_init@@Base+0x33>
  433f99:	mov    rax,QWORD PTR [rbp-0x10]
  433f9d:	jmp    433fa9 <flatcc_json_printer_init@@Base+0x3d>
  433f9f:	mov    rax,QWORD PTR [rip+0x1002a]        # 443fd0 <stdout@GLIBC_2.2.5>
  433fa6:	mov    rax,QWORD PTR [rax]
  433fa9:	mov    rdx,QWORD PTR [rbp-0x8]
  433fad:	mov    QWORD PTR [rdx+0x40],rax
  433fb1:	mov    rax,QWORD PTR [rbp-0x8]
  433fb5:	lea    rdx,[rip+0xfffffffffffffe6b]        # 433e27 <flatcc_json_printer_table_as_nested_root@@Base+0x102>
  433fbc:	mov    QWORD PTR [rax+0x48],rdx
  433fc0:	mov    edi,0x4040
  433fc5:	call   405100 <malloc@plt>
  433fca:	mov    rdx,rax
  433fcd:	mov    rax,QWORD PTR [rbp-0x8]
  433fd1:	mov    QWORD PTR [rax],rdx
  433fd4:	mov    rax,QWORD PTR [rbp-0x8]
  433fd8:	mov    rax,QWORD PTR [rax]
  433fdb:	test   rax,rax
  433fde:	jne    433fea <flatcc_json_printer_init@@Base+0x7e>
  433fe0:	mov    eax,0xffffffff
  433fe5:	jmp    434070 <flatcc_json_printer_init@@Base+0x104>
  433fea:	mov    rax,QWORD PTR [rbp-0x8]
  433fee:	mov    BYTE PTR [rax+0x30],0x1
  433ff2:	mov    rax,QWORD PTR [rbp-0x8]
  433ff6:	mov    QWORD PTR [rax+0x8],0x4040
  433ffe:	mov    rax,QWORD PTR [rbp-0x8]
  434002:	mov    QWORD PTR [rax+0x10],0x4000
  43400a:	mov    rax,QWORD PTR [rbp-0x8]
  43400e:	mov    rdx,QWORD PTR [rax]
  434011:	mov    rax,QWORD PTR [rbp-0x8]
  434015:	mov    QWORD PTR [rax+0x28],rdx
  434019:	mov    rax,QWORD PTR [rbp-0x8]
  43401d:	mov    rdx,QWORD PTR [rax]
  434020:	mov    rax,QWORD PTR [rbp-0x8]
  434024:	mov    rax,QWORD PTR [rax+0x10]
  434028:	add    rdx,rax
  43402b:	mov    rax,QWORD PTR [rbp-0x8]
  43402f:	mov    QWORD PTR [rax+0x20],rdx
  434033:	mov    rax,QWORD PTR [rbp-0x8]
  434037:	mov    rax,QWORD PTR [rax+0x10]
  43403b:	lea    rdx,[rax+0x40]
  43403f:	mov    rax,QWORD PTR [rbp-0x8]
  434043:	mov    rax,QWORD PTR [rax+0x8]
  434047:	cmp    rdx,rax
  43404a:	jbe    43406b <flatcc_json_printer_init@@Base+0xff>
  43404c:	lea    rcx,[rip+0x7a8d]        # 43bae0 <flatcc_builder_padding_base@@Base+0x3880>
  434053:	mov    edx,0x47b
  434058:	lea    rsi,[rip+0x7429]        # 43b488 <flatcc_builder_padding_base@@Base+0x3228>
  43405f:	lea    rdi,[rip+0x74f2]        # 43b558 <flatcc_builder_padding_base@@Base+0x32f8>
  434066:	call   405080 <__assert_fail@plt>
  43406b:	mov    eax,0x0
  434070:	leave  
  434071:	ret    
  434072:	push   rbp
  434073:	mov    rbp,rsp
  434076:	sub    rsp,0x10
  43407a:	mov    QWORD PTR [rbp-0x8],rdi
  43407e:	mov    DWORD PTR [rbp-0xc],esi
  434081:	mov    rax,QWORD PTR [rbp-0x8]
  434085:	mov    rdx,QWORD PTR [rax+0x28]
  434089:	mov    rax,QWORD PTR [rbp-0x8]
  43408d:	mov    rax,QWORD PTR [rax+0x20]
  434091:	cmp    rdx,rax
  434094:	jb     4340e1 <flatcc_json_printer_init@@Base+0x175>
  434096:	mov    rax,QWORD PTR [rbp-0x8]
  43409a:	mov    esi,0x3
  43409f:	mov    rdi,rax
  4340a2:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  4340a7:	mov    rax,QWORD PTR [rbp-0x8]
  4340ab:	mov    rdx,QWORD PTR [rax+0x18]
  4340af:	mov    rax,QWORD PTR [rbp-0x8]
  4340b3:	mov    rax,QWORD PTR [rax+0x28]
  4340b7:	mov    rcx,rax
  4340ba:	mov    rax,QWORD PTR [rbp-0x8]
  4340be:	mov    rax,QWORD PTR [rax]
  4340c1:	sub    rcx,rax
  4340c4:	mov    rax,rcx
  4340c7:	add    rdx,rax
  4340ca:	mov    rax,QWORD PTR [rbp-0x8]
  4340ce:	mov    QWORD PTR [rax+0x18],rdx
  4340d2:	mov    rax,QWORD PTR [rbp-0x8]
  4340d6:	mov    rdx,QWORD PTR [rax]
  4340d9:	mov    rax,QWORD PTR [rbp-0x8]
  4340dd:	mov    QWORD PTR [rax+0x28],rdx
  4340e1:	mov    rax,QWORD PTR [rbp-0x8]
  4340e5:	mov    rax,QWORD PTR [rax+0x28]
  4340e9:	mov    BYTE PTR [rax],0x0
  4340ec:	nop
  4340ed:	leave  
  4340ee:	ret    

00000000004340ef <flatcc_json_printer_init_buffer@@Base>:
  4340ef:	push   rbp
  4340f0:	mov    rbp,rsp
  4340f3:	sub    rsp,0x20
  4340f7:	mov    QWORD PTR [rbp-0x8],rdi
  4340fb:	mov    QWORD PTR [rbp-0x10],rsi
  4340ff:	mov    QWORD PTR [rbp-0x18],rdx
  434103:	cmp    QWORD PTR [rbp-0x18],0x3f
  434108:	ja     434129 <flatcc_json_printer_init_buffer@@Base+0x3a>
  43410a:	lea    rcx,[rip+0x79ef]        # 43bb00 <flatcc_builder_padding_base@@Base+0x38a0>
  434111:	mov    edx,0x48d
  434116:	lea    rsi,[rip+0x736b]        # 43b488 <flatcc_builder_padding_base@@Base+0x3228>
  43411d:	lea    rdi,[rip+0x7474]        # 43b598 <flatcc_builder_padding_base@@Base+0x3338>
  434124:	call   405080 <__assert_fail@plt>
  434129:	cmp    QWORD PTR [rbp-0x18],0x3f
  43412e:	ja     434137 <flatcc_json_printer_init_buffer@@Base+0x48>
  434130:	mov    eax,0xffffffff
  434135:	jmp    4341b5 <flatcc_json_printer_init_buffer@@Base+0xc6>
  434137:	mov    rax,QWORD PTR [rbp-0x8]
  43413b:	mov    edx,0x50
  434140:	mov    esi,0x0
  434145:	mov    rdi,rax
  434148:	call   405090 <memset@plt>
  43414d:	mov    rax,QWORD PTR [rbp-0x8]
  434151:	mov    rdx,QWORD PTR [rbp-0x10]
  434155:	mov    QWORD PTR [rax],rdx
  434158:	mov    rax,QWORD PTR [rbp-0x8]
  43415c:	mov    rdx,QWORD PTR [rbp-0x18]
  434160:	mov    QWORD PTR [rax+0x8],rdx
  434164:	mov    rax,QWORD PTR [rbp-0x8]
  434168:	mov    rax,QWORD PTR [rax+0x8]
  43416c:	lea    rdx,[rax-0x40]
  434170:	mov    rax,QWORD PTR [rbp-0x8]
  434174:	mov    QWORD PTR [rax+0x10],rdx
  434178:	mov    rax,QWORD PTR [rbp-0x8]
  43417c:	mov    rdx,QWORD PTR [rax]
  43417f:	mov    rax,QWORD PTR [rbp-0x8]
  434183:	mov    QWORD PTR [rax+0x28],rdx
  434187:	mov    rax,QWORD PTR [rbp-0x8]
  43418b:	mov    rdx,QWORD PTR [rax]
  43418e:	mov    rax,QWORD PTR [rbp-0x8]
  434192:	mov    rax,QWORD PTR [rax+0x10]
  434196:	add    rdx,rax
  434199:	mov    rax,QWORD PTR [rbp-0x8]
  43419d:	mov    QWORD PTR [rax+0x20],rdx
  4341a1:	mov    rax,QWORD PTR [rbp-0x8]
  4341a5:	lea    rdx,[rip+0xfffffffffffffec6]        # 434072 <flatcc_json_printer_init@@Base+0x106>
  4341ac:	mov    QWORD PTR [rax+0x48],rdx
  4341b0:	mov    eax,0x0
  4341b5:	leave  
  4341b6:	ret    
  4341b7:	push   rbp
  4341b8:	mov    rbp,rsp
  4341bb:	sub    rsp,0x20
  4341bf:	mov    QWORD PTR [rbp-0x18],rdi
  4341c3:	mov    DWORD PTR [rbp-0x1c],esi
  4341c6:	mov    rax,QWORD PTR [rbp-0x18]
  4341ca:	mov    rax,QWORD PTR [rax+0x28]
  4341ce:	mov    rdx,rax
  4341d1:	mov    rax,QWORD PTR [rbp-0x18]
  4341d5:	mov    rax,QWORD PTR [rax]
  4341d8:	sub    rdx,rax
  4341db:	mov    rax,rdx
  4341de:	mov    QWORD PTR [rbp-0x10],rax
  4341e2:	mov    rax,QWORD PTR [rbp-0x18]
  4341e6:	mov    rax,QWORD PTR [rax+0x28]
  4341ea:	mov    BYTE PTR [rax],0x0
  4341ed:	mov    rax,QWORD PTR [rbp-0x18]
  4341f1:	mov    rdx,QWORD PTR [rax+0x28]
  4341f5:	mov    rax,QWORD PTR [rbp-0x18]
  4341f9:	mov    rax,QWORD PTR [rax+0x20]
  4341fd:	cmp    rdx,rax
  434200:	jb     4342d2 <flatcc_json_printer_init_buffer@@Base+0x1e3>
  434206:	mov    rax,QWORD PTR [rbp-0x18]
  43420a:	mov    rax,QWORD PTR [rax+0x8]
  43420e:	lea    rdx,[rax+rax*1]
  434212:	mov    rax,QWORD PTR [rbp-0x18]
  434216:	mov    rax,QWORD PTR [rax]
  434219:	mov    rsi,rdx
  43421c:	mov    rdi,rax
  43421f:	call   405110 <realloc@plt>
  434224:	mov    QWORD PTR [rbp-0x8],rax
  434228:	cmp    QWORD PTR [rbp-0x8],0x0
  43422d:	jne    434268 <flatcc_json_printer_init_buffer@@Base+0x179>
  43422f:	mov    rax,QWORD PTR [rbp-0x18]
  434233:	mov    esi,0x3
  434238:	mov    rdi,rax
  43423b:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  434240:	mov    rax,QWORD PTR [rbp-0x18]
  434244:	mov    rdx,QWORD PTR [rax+0x18]
  434248:	mov    rax,QWORD PTR [rbp-0x10]
  43424c:	add    rdx,rax
  43424f:	mov    rax,QWORD PTR [rbp-0x18]
  434253:	mov    QWORD PTR [rax+0x18],rdx
  434257:	mov    rax,QWORD PTR [rbp-0x18]
  43425b:	mov    rdx,QWORD PTR [rax]
  43425e:	mov    rax,QWORD PTR [rbp-0x18]
  434262:	mov    QWORD PTR [rax+0x28],rdx
  434266:	jmp    4342c5 <flatcc_json_printer_init_buffer@@Base+0x1d6>
  434268:	mov    rax,QWORD PTR [rbp-0x18]
  43426c:	mov    rax,QWORD PTR [rax+0x8]
  434270:	lea    rdx,[rax+rax*1]
  434274:	mov    rax,QWORD PTR [rbp-0x18]
  434278:	mov    QWORD PTR [rax+0x8],rdx
  43427c:	mov    rax,QWORD PTR [rbp-0x18]
  434280:	mov    rax,QWORD PTR [rax+0x8]
  434284:	lea    rdx,[rax-0x40]
  434288:	mov    rax,QWORD PTR [rbp-0x18]
  43428c:	mov    QWORD PTR [rax+0x10],rdx
  434290:	mov    rax,QWORD PTR [rbp-0x18]
  434294:	mov    rdx,QWORD PTR [rbp-0x8]
  434298:	mov    QWORD PTR [rax],rdx
  43429b:	mov    rdx,QWORD PTR [rbp-0x8]
  43429f:	mov    rax,QWORD PTR [rbp-0x10]
  4342a3:	add    rdx,rax
  4342a6:	mov    rax,QWORD PTR [rbp-0x18]
  4342aa:	mov    QWORD PTR [rax+0x28],rdx
  4342ae:	mov    rax,QWORD PTR [rbp-0x18]
  4342b2:	mov    rdx,QWORD PTR [rax+0x10]
  4342b6:	mov    rax,QWORD PTR [rbp-0x8]
  4342ba:	add    rdx,rax
  4342bd:	mov    rax,QWORD PTR [rbp-0x18]
  4342c1:	mov    QWORD PTR [rax+0x20],rdx
  4342c5:	mov    rax,QWORD PTR [rbp-0x18]
  4342c9:	mov    rax,QWORD PTR [rax+0x28]
  4342cd:	mov    BYTE PTR [rax],0x0
  4342d0:	jmp    4342d3 <flatcc_json_printer_init_buffer@@Base+0x1e4>
  4342d2:	nop
  4342d3:	leave  
  4342d4:	ret    

00000000004342d5 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  4342d5:	push   rbp
  4342d6:	mov    rbp,rsp
  4342d9:	sub    rsp,0x10
  4342dd:	mov    QWORD PTR [rbp-0x8],rdi
  4342e1:	mov    QWORD PTR [rbp-0x10],rsi
  4342e5:	cmp    QWORD PTR [rbp-0x10],0x0
  4342ea:	jne    4342f4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x1f>
  4342ec:	mov    QWORD PTR [rbp-0x10],0x1000
  4342f4:	cmp    QWORD PTR [rbp-0x10],0x3f
  4342f9:	ja     434303 <flatcc_json_printer_init_dynamic_buffer@@Base+0x2e>
  4342fb:	mov    QWORD PTR [rbp-0x10],0x40
  434303:	mov    rax,QWORD PTR [rbp-0x8]
  434307:	mov    edx,0x50
  43430c:	mov    esi,0x0
  434311:	mov    rdi,rax
  434314:	call   405090 <memset@plt>
  434319:	mov    rax,QWORD PTR [rbp-0x10]
  43431d:	mov    rdi,rax
  434320:	call   405100 <malloc@plt>
  434325:	mov    rdx,rax
  434328:	mov    rax,QWORD PTR [rbp-0x8]
  43432c:	mov    QWORD PTR [rax],rdx
  43432f:	mov    rax,QWORD PTR [rbp-0x8]
  434333:	mov    BYTE PTR [rax+0x30],0x1
  434337:	mov    rax,QWORD PTR [rbp-0x8]
  43433b:	mov    rdx,QWORD PTR [rbp-0x10]
  43433f:	mov    QWORD PTR [rax+0x8],rdx
  434343:	mov    rax,QWORD PTR [rbp-0x8]
  434347:	mov    rax,QWORD PTR [rax+0x8]
  43434b:	lea    rdx,[rax-0x40]
  43434f:	mov    rax,QWORD PTR [rbp-0x8]
  434353:	mov    QWORD PTR [rax+0x10],rdx
  434357:	mov    rax,QWORD PTR [rbp-0x8]
  43435b:	mov    rdx,QWORD PTR [rax]
  43435e:	mov    rax,QWORD PTR [rbp-0x8]
  434362:	mov    QWORD PTR [rax+0x28],rdx
  434366:	mov    rax,QWORD PTR [rbp-0x8]
  43436a:	mov    rdx,QWORD PTR [rax]
  43436d:	mov    rax,QWORD PTR [rbp-0x8]
  434371:	mov    rax,QWORD PTR [rax+0x10]
  434375:	add    rdx,rax
  434378:	mov    rax,QWORD PTR [rbp-0x8]
  43437c:	mov    QWORD PTR [rax+0x20],rdx
  434380:	mov    rax,QWORD PTR [rbp-0x8]
  434384:	lea    rdx,[rip+0xfffffffffffffe2c]        # 4341b7 <flatcc_json_printer_init_buffer@@Base+0xc8>
  43438b:	mov    QWORD PTR [rax+0x48],rdx
  43438f:	mov    rax,QWORD PTR [rbp-0x8]
  434393:	mov    rax,QWORD PTR [rax]
  434396:	test   rax,rax
  434399:	jne    4343b3 <flatcc_json_printer_init_dynamic_buffer@@Base+0xde>
  43439b:	mov    rax,QWORD PTR [rbp-0x8]
  43439f:	mov    esi,0x3
  4343a4:	mov    rdi,rax
  4343a7:	call   428b17 <flatcc_json_parser_struct_as_root@@Base+0x43f>
  4343ac:	mov    eax,0xffffffff
  4343b1:	jmp    4343b8 <flatcc_json_printer_init_dynamic_buffer@@Base+0xe3>
  4343b3:	mov    eax,0x0
  4343b8:	leave  
  4343b9:	ret    

00000000004343ba <flatcc_json_printer_get_buffer@@Base>:
  4343ba:	push   rbp
  4343bb:	mov    rbp,rsp
  4343be:	sub    rsp,0x10
  4343c2:	mov    QWORD PTR [rbp-0x8],rdi
  4343c6:	mov    QWORD PTR [rbp-0x10],rsi
  4343ca:	mov    rax,QWORD PTR [rbp-0x8]
  4343ce:	mov    rax,QWORD PTR [rax+0x48]
  4343d2:	mov    rdx,QWORD PTR [rbp-0x8]
  4343d6:	mov    esi,0x0
  4343db:	mov    rdi,rdx
  4343de:	call   rax
  4343e0:	cmp    QWORD PTR [rbp-0x10],0x0
  4343e5:	je     434409 <flatcc_json_printer_get_buffer@@Base+0x4f>
  4343e7:	mov    rax,QWORD PTR [rbp-0x8]
  4343eb:	mov    rax,QWORD PTR [rax+0x28]
  4343ef:	mov    rdx,rax
  4343f2:	mov    rax,QWORD PTR [rbp-0x8]
  4343f6:	mov    rax,QWORD PTR [rax]
  4343f9:	sub    rdx,rax
  4343fc:	mov    rax,rdx
  4343ff:	mov    rdx,rax
  434402:	mov    rax,QWORD PTR [rbp-0x10]
  434406:	mov    QWORD PTR [rax],rdx
  434409:	mov    rax,QWORD PTR [rbp-0x8]
  43440d:	mov    rax,QWORD PTR [rax]
  434410:	leave  
  434411:	ret    

0000000000434412 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  434412:	push   rbp
  434413:	mov    rbp,rsp
  434416:	sub    rsp,0x20
  43441a:	mov    QWORD PTR [rbp-0x18],rdi
  43441e:	mov    QWORD PTR [rbp-0x20],rsi
  434422:	mov    rdx,QWORD PTR [rbp-0x20]
  434426:	mov    rax,QWORD PTR [rbp-0x18]
  43442a:	mov    rsi,rdx
  43442d:	mov    rdi,rax
  434430:	call   4343ba <flatcc_json_printer_get_buffer@@Base>
  434435:	mov    QWORD PTR [rbp-0x8],rax
  434439:	mov    rax,QWORD PTR [rbp-0x18]
  43443d:	mov    edx,0x50
  434442:	mov    esi,0x0
  434447:	mov    rdi,rax
  43444a:	call   405090 <memset@plt>
  43444f:	mov    rax,QWORD PTR [rbp-0x8]
  434453:	leave  
  434454:	ret    

0000000000434455 <flatcc_json_printer_clear@@Base>:
  434455:	push   rbp
  434456:	mov    rbp,rsp
  434459:	sub    rsp,0x10
  43445d:	mov    QWORD PTR [rbp-0x8],rdi
  434461:	mov    rax,QWORD PTR [rbp-0x8]
  434465:	movzx  eax,BYTE PTR [rax+0x30]
  434469:	test   al,al
  43446b:	je     434488 <flatcc_json_printer_clear@@Base+0x33>
  43446d:	mov    rax,QWORD PTR [rbp-0x8]
  434471:	mov    rax,QWORD PTR [rax]
  434474:	test   rax,rax
  434477:	je     434488 <flatcc_json_printer_clear@@Base+0x33>
  434479:	mov    rax,QWORD PTR [rbp-0x8]
  43447d:	mov    rax,QWORD PTR [rax]
  434480:	mov    rdi,rax
  434483:	call   405030 <free@plt>
  434488:	mov    rax,QWORD PTR [rbp-0x8]
  43448c:	mov    edx,0x50
  434491:	mov    esi,0x0
  434496:	mov    rdi,rax
  434499:	call   405090 <memset@plt>
  43449e:	nop
  43449f:	leave  
  4344a0:	ret    
  4344a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4344ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004344b0 <__libc_csu_init@@Base>:
  4344b0:	endbr64 
  4344b4:	push   r15
  4344b6:	lea    r15,[rip+0xf8cb]        # 443d88 <flatcc_builder_padding_base@@Base+0xbb28>
  4344bd:	push   r14
  4344bf:	mov    r14,rdx
  4344c2:	push   r13
  4344c4:	mov    r13,rsi
  4344c7:	push   r12
  4344c9:	mov    r12d,edi
  4344cc:	push   rbp
  4344cd:	lea    rbp,[rip+0xf8bc]        # 443d90 <flatcc_builder_padding_base@@Base+0xbb30>
  4344d4:	push   rbx
  4344d5:	sub    rbp,r15
  4344d8:	sub    rsp,0x8
  4344dc:	call   405000 <free@plt-0x30>
  4344e1:	sar    rbp,0x3
  4344e5:	je     434506 <__libc_csu_init@@Base+0x56>
  4344e7:	xor    ebx,ebx
  4344e9:	nop    DWORD PTR [rax+0x0]
  4344f0:	mov    rdx,r14
  4344f3:	mov    rsi,r13
  4344f6:	mov    edi,r12d
  4344f9:	call   QWORD PTR [r15+rbx*8]
  4344fd:	add    rbx,0x1
  434501:	cmp    rbp,rbx
  434504:	jne    4344f0 <__libc_csu_init@@Base+0x40>
  434506:	add    rsp,0x8
  43450a:	pop    rbx
  43450b:	pop    rbp
  43450c:	pop    r12
  43450e:	pop    r13
  434510:	pop    r14
  434512:	pop    r15
  434514:	ret    
  434515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000434520 <__libc_csu_fini@@Base>:
  434520:	endbr64 
  434524:	ret    

Disassembly of section .fini:

0000000000434528 <.fini>:
  434528:	endbr64 
  43452c:	sub    rsp,0x8
  434530:	add    rsp,0x8
  434534:	ret    
