
../repos/stcorp-coda-3a25f25/codacheck:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe1]        # 403ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <coda_set_option_perform_boundary_checks@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <coda_set_option_perform_boundary_checks@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <coda_set_option_perform_boundary_checks@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <coda_set_option_perform_boundary_checks>
  401036:	push   0x0
  40103b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401040 <coda_set_error@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <coda_set_error>
  401046:	push   0x1
  40104b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401050 <coda_open@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <coda_open>
  401056:	push   0x2
  40105b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401060 <coda_set_option_use_mmap@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <coda_set_option_use_mmap>
  401066:	push   0x3
  40106b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401070 <coda_cursor_print_path@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <coda_cursor_print_path>
  401076:	push   0x4
  40107b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401080 <coda_set_definition_path_conditional@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <coda_set_definition_path_conditional>
  401086:	push   0x5
  40108b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401090 <coda_set_definition_path@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <coda_set_definition_path>
  401096:	push   0x6
  40109b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010a0 <coda_recognize_file@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x2faa]        # 404050 <coda_recognize_file>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010b0 <__assert_fail@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x2fa2]        # 404058 <__assert_fail@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010c0 <coda_type_get_format_name@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x2f9a]        # 404060 <coda_type_get_format_name>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010d0 <coda_done@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x2f92]        # 404068 <coda_done>
  4010d6:	push   0xa
  4010db:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010e0 <strcmp@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x2f8a]        # 404070 <strcmp@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004010f0 <coda_product_check@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x2f82]        # 404078 <coda_product_check>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401100 <getchar@plt>:
  401100:	jmp    QWORD PTR [rip+0x2f7a]        # 404080 <getchar@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401110 <fprintf@plt>:
  401110:	jmp    QWORD PTR [rip+0x2f72]        # 404088 <fprintf@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401120 <coda_init@plt>:
  401120:	jmp    QWORD PTR [rip+0x2f6a]        # 404090 <coda_init>
  401126:	push   0xf
  40112b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401130 <coda_set_option_perform_conversions@plt>:
  401130:	jmp    QWORD PTR [rip+0x2f62]        # 404098 <coda_set_option_perform_conversions>
  401136:	push   0x10
  40113b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401140 <fflush@plt>:
  401140:	jmp    QWORD PTR [rip+0x2f5a]        # 4040a0 <fflush@GLIBC_2.2.5>
  401146:	push   0x11
  40114b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401150 <ungetc@plt>:
  401150:	jmp    QWORD PTR [rip+0x2f52]        # 4040a8 <ungetc@GLIBC_2.2.5>
  401156:	push   0x12
  40115b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401160 <coda_close@plt>:
  401160:	jmp    QWORD PTR [rip+0x2f4a]        # 4040b0 <coda_close>
  401166:	push   0x13
  40116b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401170 <coda_errno_to_string@plt>:
  401170:	jmp    QWORD PTR [rip+0x2f42]        # 4040b8 <coda_errno_to_string>
  401176:	push   0x14
  40117b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401180 <exit@plt>:
  401180:	jmp    QWORD PTR [rip+0x2f3a]        # 4040c0 <exit@GLIBC_2.2.5>
  401186:	push   0x15
  40118b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

0000000000401190 <coda_get_libcoda_version@plt>:
  401190:	jmp    QWORD PTR [rip+0x2f32]        # 4040c8 <coda_get_libcoda_version>
  401196:	push   0x16
  40119b:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

00000000004011a0 <coda_get_errno@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x2f2a]        # 4040d0 <coda_get_errno>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <coda_set_option_perform_boundary_checks@plt-0x10>

Disassembly of section .plt.got:

00000000004011b0 <printf@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x2e2a]        # 403fe0 <printf@GLIBC_2.2.5>
  4011b6:	xchg   ax,ax

Disassembly of section .text:

00000000004011c0 <_start@@Base>:
  4011c0:	endbr64 
  4011c4:	xor    ebp,ebp
  4011c6:	mov    r9,rdx
  4011c9:	pop    rsi
  4011ca:	mov    rdx,rsp
  4011cd:	and    rsp,0xfffffffffffffff0
  4011d1:	push   rax
  4011d2:	push   rsp
  4011d3:	mov    r8,0x401ec0
  4011da:	mov    rcx,0x401e50
  4011e1:	mov    rdi,0x4012b0
  4011e8:	call   QWORD PTR [rip+0x2dfa]        # 403fe8 <__libc_start_main@GLIBC_2.2.5>
  4011ee:	hlt    
  4011ef:	nop
  4011f0:	endbr64 
  4011f4:	ret    
  4011f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011ff:	nop
  401200:	mov    eax,0x4040e8
  401205:	cmp    rax,0x4040e8
  40120b:	je     401220 <_start@@Base+0x60>
  40120d:	mov    eax,0x0
  401212:	test   rax,rax
  401215:	je     401220 <_start@@Base+0x60>
  401217:	mov    edi,0x4040e8
  40121c:	jmp    rax
  40121e:	xchg   ax,ax
  401220:	ret    
  401221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40122c:	nop    DWORD PTR [rax+0x0]
  401230:	mov    esi,0x4040e8
  401235:	sub    rsi,0x4040e8
  40123c:	mov    rax,rsi
  40123f:	shr    rsi,0x3f
  401243:	sar    rax,0x3
  401247:	add    rsi,rax
  40124a:	sar    rsi,1
  40124d:	je     401260 <_start@@Base+0xa0>
  40124f:	mov    eax,0x0
  401254:	test   rax,rax
  401257:	je     401260 <_start@@Base+0xa0>
  401259:	mov    edi,0x4040e8
  40125e:	jmp    rax
  401260:	ret    
  401261:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40126c:	nop    DWORD PTR [rax+0x0]
  401270:	endbr64 
  401274:	cmp    BYTE PTR [rip+0x2e6d],0x0        # 4040e8 <__bss_start@@Base>
  40127b:	jne    401290 <_start@@Base+0xd0>
  40127d:	push   rbp
  40127e:	mov    rbp,rsp
  401281:	call   401200 <_start@@Base+0x40>
  401286:	mov    BYTE PTR [rip+0x2e5b],0x1        # 4040e8 <__bss_start@@Base>
  40128d:	pop    rbp
  40128e:	ret    
  40128f:	nop
  401290:	ret    
  401291:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40129c:	nop    DWORD PTR [rax+0x0]
  4012a0:	endbr64 
  4012a4:	jmp    401230 <_start@@Base+0x70>
  4012a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004012b0 <main@@Base>:
  4012b0:	push   rbp
  4012b1:	mov    rbp,rsp
  4012b4:	sub    rsp,0x460
  4012bb:	lea    rax,[rip+0x2e2a]        # 4040ec <option_require_definition@@Base>
  4012c2:	lea    rcx,[rip+0x2e2f]        # 4040f8 <option_quick@@Base>
  4012c9:	lea    rdx,[rip+0x2e24]        # 4040f4 <option_verbose@@Base>
  4012d0:	mov    DWORD PTR [rbp-0x4],0x0
  4012d7:	mov    DWORD PTR [rbp-0x8],edi
  4012da:	mov    QWORD PTR [rbp-0x10],rsi
  4012de:	mov    DWORD PTR [rbp-0x14],0x0
  4012e5:	mov    DWORD PTR [rdx],0x0
  4012eb:	mov    DWORD PTR [rcx],0x0
  4012f1:	mov    DWORD PTR [rbp-0x18],0x1
  4012f8:	mov    DWORD PTR [rax],0x0
  4012fe:	cmp    DWORD PTR [rbp-0x8],0x1
  401302:	je     401342 <main@@Base+0x92>
  401308:	mov    rax,QWORD PTR [rbp-0x10]
  40130c:	mov    rdi,QWORD PTR [rax+0x8]
  401310:	lea    rsi,[rip+0xced]        # 402004 <_IO_stdin_used@@Base+0x4>
  401317:	call   4010e0 <strcmp@plt>
  40131c:	cmp    eax,0x0
  40131f:	je     401342 <main@@Base+0x92>
  401325:	mov    rax,QWORD PTR [rbp-0x10]
  401329:	mov    rdi,QWORD PTR [rax+0x8]
  40132d:	lea    rsi,[rip+0xcd3]        # 402007 <_IO_stdin_used@@Base+0x7>
  401334:	call   4010e0 <strcmp@plt>
  401339:	cmp    eax,0x0
  40133c:	jne    40134e <main@@Base+0x9e>
  401342:	call   401b30 <main@@Base+0x880>
  401347:	xor    edi,edi
  401349:	call   401180 <exit@plt>
  40134e:	mov    rax,QWORD PTR [rbp-0x10]
  401352:	mov    rdi,QWORD PTR [rax+0x8]
  401356:	lea    rsi,[rip+0xcb1]        # 40200e <_IO_stdin_used@@Base+0xe>
  40135d:	call   4010e0 <strcmp@plt>
  401362:	cmp    eax,0x0
  401365:	je     401388 <main@@Base+0xd8>
  40136b:	mov    rax,QWORD PTR [rbp-0x10]
  40136f:	mov    rdi,QWORD PTR [rax+0x8]
  401373:	lea    rsi,[rip+0xc97]        # 402011 <_IO_stdin_used@@Base+0x11>
  40137a:	call   4010e0 <strcmp@plt>
  40137f:	cmp    eax,0x0
  401382:	jne    401394 <main@@Base+0xe4>
  401388:	call   401d80 <main@@Base+0xad0>
  40138d:	xor    edi,edi
  40138f:	call   401180 <exit@plt>
  401394:	mov    DWORD PTR [rbp-0x1c],0x1
  40139b:	mov    eax,DWORD PTR [rbp-0x1c]
  40139e:	add    eax,0x1
  4013a1:	cmp    eax,DWORD PTR [rbp-0x8]
  4013a4:	jge    4013f5 <main@@Base+0x145>
  4013aa:	mov    rax,QWORD PTR [rbp-0x10]
  4013ae:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4013b2:	mov    rdi,QWORD PTR [rax+rcx*8]
  4013b6:	lea    rsi,[rip+0xc5e]        # 40201b <_IO_stdin_used@@Base+0x1b>
  4013bd:	call   4010e0 <strcmp@plt>
  4013c2:	cmp    eax,0x0
  4013c5:	jne    4013f5 <main@@Base+0x145>
  4013cb:	mov    rax,QWORD PTR [rbp-0x10]
  4013cf:	mov    ecx,DWORD PTR [rbp-0x1c]
  4013d2:	add    ecx,0x1
  4013d5:	movsxd rdx,ecx
  4013d8:	mov    rdi,QWORD PTR [rax+rdx*8]
  4013dc:	call   401090 <coda_set_definition_path@plt>
  4013e1:	mov    ecx,DWORD PTR [rbp-0x1c]
  4013e4:	add    ecx,0x2
  4013e7:	mov    DWORD PTR [rbp-0x1c],ecx
  4013ea:	mov    DWORD PTR [rbp-0x420],eax
  4013f0:	jmp    401467 <main@@Base+0x1b7>
  4013f5:	xor    eax,eax
  4013f7:	mov    esi,eax
  4013f9:	lea    rcx,[rip+0xc1e]        # 40201e <_IO_stdin_used@@Base+0x1e>
  401400:	mov    QWORD PTR [rbp-0x28],rcx
  401404:	mov    rcx,QWORD PTR [rbp-0x10]
  401408:	mov    rdi,QWORD PTR [rcx]
  40140b:	mov    rdx,QWORD PTR [rbp-0x28]
  40140f:	call   401080 <coda_set_definition_path_conditional@plt>
  401414:	cmp    eax,0x0
  401417:	je     401462 <main@@Base+0x1b2>
  40141d:	mov    rax,QWORD PTR [rip+0x2bd4]        # 403ff8 <stderr@GLIBC_2.2.5>
  401424:	mov    rdi,QWORD PTR [rax]
  401427:	mov    QWORD PTR [rbp-0x428],rdi
  40142e:	call   4011a0 <coda_get_errno@plt>
  401433:	mov    edi,DWORD PTR [rax]
  401435:	call   401170 <coda_errno_to_string@plt>
  40143a:	mov    rdi,QWORD PTR [rbp-0x428]
  401441:	lea    rsi,[rip+0x1312]        # 40275a <_IO_stdin_used@@Base+0x75a>
  401448:	mov    rdx,rax
  40144b:	mov    al,0x0
  40144d:	call   401110 <fprintf@plt>
  401452:	mov    edi,0x1
  401457:	mov    DWORD PTR [rbp-0x42c],eax
  40145d:	call   401180 <exit@plt>
  401462:	jmp    401467 <main@@Base+0x1b7>
  401467:	jmp    40146c <main@@Base+0x1bc>
  40146c:	mov    eax,DWORD PTR [rbp-0x1c]
  40146f:	cmp    eax,DWORD PTR [rbp-0x8]
  401472:	jge    401646 <main@@Base+0x396>
  401478:	mov    rax,QWORD PTR [rbp-0x10]
  40147c:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401480:	mov    rdi,QWORD PTR [rax+rcx*8]
  401484:	lea    rsi,[rip+0xbad]        # 402038 <_IO_stdin_used@@Base+0x38>
  40148b:	call   4010e0 <strcmp@plt>
  401490:	cmp    eax,0x0
  401493:	je     4014ba <main@@Base+0x20a>
  401499:	mov    rax,QWORD PTR [rbp-0x10]
  40149d:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4014a1:	mov    rdi,QWORD PTR [rax+rcx*8]
  4014a5:	lea    rsi,[rip+0xb8f]        # 40203b <_IO_stdin_used@@Base+0x3b>
  4014ac:	call   4010e0 <strcmp@plt>
  4014b1:	cmp    eax,0x0
  4014b4:	jne    4014cc <main@@Base+0x21c>
  4014ba:	lea    rax,[rip+0x2c33]        # 4040f4 <option_verbose@@Base>
  4014c1:	mov    DWORD PTR [rax],0x1
  4014c7:	jmp    401638 <main@@Base+0x388>
  4014cc:	mov    rax,QWORD PTR [rbp-0x10]
  4014d0:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4014d4:	mov    rdi,QWORD PTR [rax+rcx*8]
  4014d8:	lea    rsi,[rip+0xb66]        # 402045 <_IO_stdin_used@@Base+0x45>
  4014df:	call   4010e0 <strcmp@plt>
  4014e4:	cmp    eax,0x0
  4014e7:	je     40150e <main@@Base+0x25e>
  4014ed:	mov    rax,QWORD PTR [rbp-0x10]
  4014f1:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4014f5:	mov    rdi,QWORD PTR [rax+rcx*8]
  4014f9:	lea    rsi,[rip+0xb48]        # 402048 <_IO_stdin_used@@Base+0x48>
  401500:	call   4010e0 <strcmp@plt>
  401505:	cmp    eax,0x0
  401508:	jne    401520 <main@@Base+0x270>
  40150e:	lea    rax,[rip+0x2be3]        # 4040f8 <option_quick@@Base>
  401515:	mov    DWORD PTR [rax],0x1
  40151b:	jmp    401633 <main@@Base+0x383>
  401520:	mov    rax,QWORD PTR [rbp-0x10]
  401524:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401528:	mov    rdi,QWORD PTR [rax+rcx*8]
  40152c:	lea    rsi,[rip+0xb1d]        # 402050 <_IO_stdin_used@@Base+0x50>
  401533:	call   4010e0 <strcmp@plt>
  401538:	cmp    eax,0x0
  40153b:	je     401562 <main@@Base+0x2b2>
  401541:	mov    rax,QWORD PTR [rbp-0x10]
  401545:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401549:	mov    rdi,QWORD PTR [rax+rcx*8]
  40154d:	lea    rsi,[rip+0xaff]        # 402053 <_IO_stdin_used@@Base+0x53>
  401554:	call   4010e0 <strcmp@plt>
  401559:	cmp    eax,0x0
  40155c:	jne    401574 <main@@Base+0x2c4>
  401562:	lea    rax,[rip+0x2b83]        # 4040ec <option_require_definition@@Base>
  401569:	mov    DWORD PTR [rax],0x1
  40156f:	jmp    40162e <main@@Base+0x37e>
  401574:	mov    rax,QWORD PTR [rbp-0x10]
  401578:	movsxd rcx,DWORD PTR [rbp-0x1c]
  40157c:	mov    rdi,QWORD PTR [rax+rcx*8]
  401580:	lea    rsi,[rip+0xad9]        # 402060 <_IO_stdin_used@@Base+0x60>
  401587:	call   4010e0 <strcmp@plt>
  40158c:	cmp    eax,0x0
  40158f:	jne    4015a1 <main@@Base+0x2f1>
  401595:	mov    DWORD PTR [rbp-0x18],0x0
  40159c:	jmp    401629 <main@@Base+0x379>
  4015a1:	mov    rax,QWORD PTR [rbp-0x10]
  4015a5:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4015a9:	mov    rdi,QWORD PTR [rax+rcx*8]
  4015ad:	lea    rsi,[rip+0xab6]        # 40206a <_IO_stdin_used@@Base+0x6a>
  4015b4:	call   4010e0 <strcmp@plt>
  4015b9:	cmp    eax,0x0
  4015bc:	jne    4015df <main@@Base+0x32f>
  4015c2:	mov    eax,DWORD PTR [rbp-0x1c]
  4015c5:	mov    ecx,DWORD PTR [rbp-0x8]
  4015c8:	sub    ecx,0x1
  4015cb:	cmp    eax,ecx
  4015cd:	jne    4015df <main@@Base+0x32f>
  4015d3:	mov    DWORD PTR [rbp-0x14],0x1
  4015da:	jmp    401646 <main@@Base+0x396>
  4015df:	mov    rax,QWORD PTR [rbp-0x10]
  4015e3:	movsxd rcx,DWORD PTR [rbp-0x1c]
  4015e7:	mov    rax,QWORD PTR [rax+rcx*8]
  4015eb:	movsx  edx,BYTE PTR [rax]
  4015ee:	cmp    edx,0x2d
  4015f1:	je     4015fc <main@@Base+0x34c>
  4015f7:	jmp    401646 <main@@Base+0x396>
  4015fc:	mov    rax,QWORD PTR [rip+0x29f5]        # 403ff8 <stderr@GLIBC_2.2.5>
  401603:	mov    rdi,QWORD PTR [rax]
  401606:	lea    rsi,[rip+0xa5f]        # 40206c <_IO_stdin_used@@Base+0x6c>
  40160d:	mov    al,0x0
  40160f:	call   401110 <fprintf@plt>
  401614:	mov    DWORD PTR [rbp-0x430],eax
  40161a:	call   401b30 <main@@Base+0x880>
  40161f:	mov    edi,0x1
  401624:	call   401180 <exit@plt>
  401629:	jmp    40162e <main@@Base+0x37e>
  40162e:	jmp    401633 <main@@Base+0x383>
  401633:	jmp    401638 <main@@Base+0x388>
  401638:	mov    eax,DWORD PTR [rbp-0x1c]
  40163b:	add    eax,0x1
  40163e:	mov    DWORD PTR [rbp-0x1c],eax
  401641:	jmp    40146c <main@@Base+0x1bc>
  401646:	call   401120 <coda_init@plt>
  40164b:	cmp    eax,0x0
  40164e:	je     401699 <main@@Base+0x3e9>
  401654:	mov    rax,QWORD PTR [rip+0x299d]        # 403ff8 <stderr@GLIBC_2.2.5>
  40165b:	mov    rdi,QWORD PTR [rax]
  40165e:	mov    QWORD PTR [rbp-0x438],rdi
  401665:	call   4011a0 <coda_get_errno@plt>
  40166a:	mov    edi,DWORD PTR [rax]
  40166c:	call   401170 <coda_errno_to_string@plt>
  401671:	mov    rdi,QWORD PTR [rbp-0x438]
  401678:	lea    rsi,[rip+0x10db]        # 40275a <_IO_stdin_used@@Base+0x75a>
  40167f:	mov    rdx,rax
  401682:	mov    al,0x0
  401684:	call   401110 <fprintf@plt>
  401689:	mov    edi,0x1
  40168e:	mov    DWORD PTR [rbp-0x43c],eax
  401694:	call   401180 <exit@plt>
  401699:	xor    edi,edi
  40169b:	call   401030 <coda_set_option_perform_boundary_checks@plt>
  4016a0:	xor    edi,edi
  4016a2:	mov    DWORD PTR [rbp-0x440],eax
  4016a8:	call   401130 <coda_set_option_perform_conversions@plt>
  4016ad:	mov    edi,DWORD PTR [rbp-0x18]
  4016b0:	mov    DWORD PTR [rbp-0x444],eax
  4016b6:	call   401060 <coda_set_option_use_mmap@plt>
  4016bb:	cmp    DWORD PTR [rbp-0x14],0x0
  4016bf:	mov    DWORD PTR [rbp-0x448],eax
  4016c5:	je     401817 <main@@Base+0x567>
  4016cb:	jmp    4016d0 <main@@Base+0x420>
  4016d0:	mov    DWORD PTR [rbp-0x418],0x0
  4016da:	call   401100 <getchar@plt>
  4016df:	mov    cl,al
  4016e1:	mov    BYTE PTR [rbp-0x411],cl
  4016e7:	movsx  eax,BYTE PTR [rbp-0x411]
  4016ee:	cmp    eax,0xd
  4016f1:	jne    401735 <main@@Base+0x485>
  4016f7:	call   401100 <getchar@plt>
  4016fc:	mov    cl,al
  4016fe:	mov    BYTE PTR [rbp-0x419],cl
  401704:	movsx  eax,BYTE PTR [rbp-0x419]
  40170b:	cmp    eax,0xa
  40170e:	je     401730 <main@@Base+0x480>
  401714:	mov    rax,QWORD PTR [rip+0x28bd]        # 403fd8 <stdin@GLIBC_2.2.5>
  40171b:	movsx  edi,BYTE PTR [rbp-0x419]
  401722:	mov    rsi,QWORD PTR [rax]
  401725:	call   401150 <ungetc@plt>
  40172a:	mov    DWORD PTR [rbp-0x44c],eax
  401730:	jmp    401735 <main@@Base+0x485>
  401735:	movsx  eax,BYTE PTR [rbp-0x411]
  40173c:	cmp    eax,0xffffffff
  40173f:	je     401765 <main@@Base+0x4b5>
  401745:	movsx  eax,BYTE PTR [rbp-0x411]
  40174c:	cmp    eax,0xa
  40174f:	je     401765 <main@@Base+0x4b5>
  401755:	movsx  eax,BYTE PTR [rbp-0x411]
  40175c:	cmp    eax,0xd
  40175f:	jne    401779 <main@@Base+0x4c9>
  401765:	movsxd rax,DWORD PTR [rbp-0x418]
  40176c:	mov    BYTE PTR [rbp+rax*1-0x410],0x0
  401774:	jmp    4017d5 <main@@Base+0x525>
  401779:	mov    al,BYTE PTR [rbp-0x411]
  40177f:	movsxd rcx,DWORD PTR [rbp-0x418]
  401786:	mov    BYTE PTR [rbp+rcx*1-0x410],al
  40178d:	mov    edx,DWORD PTR [rbp-0x418]
  401793:	add    edx,0x1
  401796:	mov    DWORD PTR [rbp-0x418],edx
  40179c:	cmp    DWORD PTR [rbp-0x418],0x3e8
  4017a6:	jge    4017b1 <main@@Base+0x501>
  4017ac:	jmp    4017d0 <main@@Base+0x520>
  4017b1:	lea    rdi,[rip+0x8ce]        # 402086 <_IO_stdin_used@@Base+0x86>
  4017b8:	lea    rsi,[rip+0x8d0]        # 40208f <_IO_stdin_used@@Base+0x8f>
  4017bf:	mov    edx,0x13c
  4017c4:	lea    rcx,[rip+0x925]        # 4020f0 <_IO_stdin_used@@Base+0xf0>
  4017cb:	call   4010b0 <__assert_fail@plt>
  4017d0:	jmp    4016da <main@@Base+0x42a>
  4017d5:	cmp    DWORD PTR [rbp-0x418],0x0
  4017dc:	jle    4017fd <main@@Base+0x54d>
  4017e2:	lea    rdi,[rbp-0x410]
  4017e9:	call   401890 <main@@Base+0x5e0>
  4017ee:	xor    eax,eax
  4017f0:	mov    edi,eax
  4017f2:	call   401140 <fflush@plt>
  4017f7:	mov    DWORD PTR [rbp-0x450],eax
  4017fd:	jmp    401802 <main@@Base+0x552>
  401802:	movsx  eax,BYTE PTR [rbp-0x411]
  401809:	cmp    eax,0xffffffff
  40180c:	jne    4016d0 <main@@Base+0x420>
  401812:	jmp    40185b <main@@Base+0x5ab>
  401817:	jmp    40181c <main@@Base+0x56c>
  40181c:	mov    eax,DWORD PTR [rbp-0x1c]
  40181f:	cmp    eax,DWORD PTR [rbp-0x8]
  401822:	jge    401856 <main@@Base+0x5a6>
  401828:	mov    rax,QWORD PTR [rbp-0x10]
  40182c:	movsxd rcx,DWORD PTR [rbp-0x1c]
  401830:	mov    rdi,QWORD PTR [rax+rcx*8]
  401834:	call   401890 <main@@Base+0x5e0>
  401839:	xor    edx,edx
  40183b:	mov    edi,edx
  40183d:	call   401140 <fflush@plt>
  401842:	mov    edx,DWORD PTR [rbp-0x1c]
  401845:	add    edx,0x1
  401848:	mov    DWORD PTR [rbp-0x1c],edx
  40184b:	mov    DWORD PTR [rbp-0x454],eax
  401851:	jmp    40181c <main@@Base+0x56c>
  401856:	jmp    40185b <main@@Base+0x5ab>
  40185b:	call   4010d0 <coda_done@plt>
  401860:	lea    rax,[rip+0x2889]        # 4040f0 <found_errors@@Base>
  401867:	cmp    DWORD PTR [rax],0x0
  40186a:	je     40187a <main@@Base+0x5ca>
  401870:	mov    edi,0x1
  401875:	call   401180 <exit@plt>
  40187a:	xor    eax,eax
  40187c:	add    rsp,0x460
  401883:	pop    rbp
  401884:	ret    
  401885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40188f:	nop
  401890:	push   rbp
  401891:	mov    rbp,rsp
  401894:	sub    rsp,0x70
  401898:	mov    QWORD PTR [rbp-0x8],rdi
  40189c:	mov    rsi,QWORD PTR [rbp-0x8]
  4018a0:	lea    rdi,[rip+0xeba]        # 402761 <_IO_stdin_used@@Base+0x761>
  4018a7:	mov    al,0x0
  4018a9:	call   4011b0 <printf@plt>
  4018ae:	mov    rdi,QWORD PTR [rbp-0x8]
  4018b2:	lea    rsi,[rbp-0x20]
  4018b6:	lea    rdx,[rbp-0x14]
  4018ba:	lea    rcx,[rbp-0x28]
  4018be:	lea    r8,[rbp-0x30]
  4018c2:	lea    r9,[rbp-0x34]
  4018c6:	mov    DWORD PTR [rbp-0x3c],eax
  4018c9:	call   4010a0 <coda_recognize_file@plt>
  4018ce:	cmp    eax,0x0
  4018d1:	je     401916 <main@@Base+0x666>
  4018d7:	call   4011a0 <coda_get_errno@plt>
  4018dc:	mov    edi,DWORD PTR [rax]
  4018de:	call   401170 <coda_errno_to_string@plt>
  4018e3:	lea    rdi,[rip+0xe14]        # 4026fe <_IO_stdin_used@@Base+0x6fe>
  4018ea:	mov    rsi,rax
  4018ed:	mov    al,0x0
  4018ef:	call   4011b0 <printf@plt>
  4018f4:	xor    edi,edi
  4018f6:	xor    ecx,ecx
  4018f8:	mov    esi,ecx
  4018fa:	mov    DWORD PTR [rbp-0x40],eax
  4018fd:	mov    al,0x0
  4018ff:	call   401040 <coda_set_error@plt>
  401904:	lea    rsi,[rip+0x27e5]        # 4040f0 <found_errors@@Base>
  40190b:	mov    DWORD PTR [rsi],0x1
  401911:	jmp    401b23 <main@@Base+0x873>
  401916:	lea    rax,[rip+0x27cf]        # 4040ec <option_require_definition@@Base>
  40191d:	cmp    DWORD PTR [rax],0x0
  401920:	je     40195f <main@@Base+0x6af>
  401926:	cmp    QWORD PTR [rbp-0x28],0x0
  40192b:	je     40193c <main@@Base+0x68c>
  401931:	cmp    QWORD PTR [rbp-0x30],0x0
  401936:	jne    40195f <main@@Base+0x6af>
  40193c:	lea    rdi,[rip+0xdc9]        # 40270c <_IO_stdin_used@@Base+0x70c>
  401943:	mov    al,0x0
  401945:	call   4011b0 <printf@plt>
  40194a:	lea    rdi,[rip+0x279f]        # 4040f0 <found_errors@@Base>
  401951:	mov    DWORD PTR [rdi],0x1
  401957:	mov    DWORD PTR [rbp-0x44],eax
  40195a:	jmp    401b23 <main@@Base+0x873>
  40195f:	lea    rax,[rip+0x278e]        # 4040f4 <option_verbose@@Base>
  401966:	cmp    DWORD PTR [rax],0x0
  401969:	je     4019ce <main@@Base+0x71e>
  40196f:	mov    edi,DWORD PTR [rbp-0x14]
  401972:	call   4010c0 <coda_type_get_format_name@plt>
  401977:	lea    rdi,[rip+0xdba]        # 402738 <_IO_stdin_used@@Base+0x738>
  40197e:	mov    rsi,rax
  401981:	mov    al,0x0
  401983:	call   4011b0 <printf@plt>
  401988:	cmp    QWORD PTR [rbp-0x28],0x0
  40198d:	mov    DWORD PTR [rbp-0x48],eax
  401990:	je     4019bd <main@@Base+0x70d>
  401996:	cmp    QWORD PTR [rbp-0x30],0x0
  40199b:	je     4019bd <main@@Base+0x70d>
  4019a1:	mov    rsi,QWORD PTR [rbp-0x28]
  4019a5:	mov    rdx,QWORD PTR [rbp-0x30]
  4019a9:	mov    ecx,DWORD PTR [rbp-0x34]
  4019ac:	lea    rdi,[rip+0xd9a]        # 40274d <_IO_stdin_used@@Base+0x74d>
  4019b3:	mov    al,0x0
  4019b5:	call   4011b0 <printf@plt>
  4019ba:	mov    DWORD PTR [rbp-0x4c],eax
  4019bd:	lea    rdi,[rip+0xd72]        # 402736 <_IO_stdin_used@@Base+0x736>
  4019c4:	mov    al,0x0
  4019c6:	call   4011b0 <printf@plt>
  4019cb:	mov    DWORD PTR [rbp-0x50],eax
  4019ce:	mov    rdi,QWORD PTR [rbp-0x8]
  4019d2:	lea    rsi,[rbp-0x10]
  4019d6:	call   401050 <coda_open@plt>
  4019db:	mov    DWORD PTR [rbp-0x38],eax
  4019de:	cmp    DWORD PTR [rbp-0x38],0x0
  4019e2:	je     401a1d <main@@Base+0x76d>
  4019e8:	call   4011a0 <coda_get_errno@plt>
  4019ed:	cmp    DWORD PTR [rax],0xffffffeb
  4019f0:	jne    401a1d <main@@Base+0x76d>
  4019f6:	xor    edi,edi
  4019f8:	call   401060 <coda_set_option_use_mmap@plt>
  4019fd:	mov    rdi,QWORD PTR [rbp-0x8]
  401a01:	lea    rsi,[rbp-0x10]
  401a05:	mov    DWORD PTR [rbp-0x54],eax
  401a08:	call   401050 <coda_open@plt>
  401a0d:	mov    DWORD PTR [rbp-0x38],eax
  401a10:	mov    edi,0x1
  401a15:	call   401060 <coda_set_option_use_mmap@plt>
  401a1a:	mov    DWORD PTR [rbp-0x58],eax
  401a1d:	cmp    DWORD PTR [rbp-0x38],0x0
  401a21:	je     401a59 <main@@Base+0x7a9>
  401a27:	call   4011a0 <coda_get_errno@plt>
  401a2c:	mov    edi,DWORD PTR [rax]
  401a2e:	call   401170 <coda_errno_to_string@plt>
  401a33:	lea    rdi,[rip+0xcc4]        # 4026fe <_IO_stdin_used@@Base+0x6fe>
  401a3a:	mov    rsi,rax
  401a3d:	mov    al,0x0
  401a3f:	call   4011b0 <printf@plt>
  401a44:	lea    rsi,[rip+0x26a5]        # 4040f0 <found_errors@@Base>
  401a4b:	mov    DWORD PTR [rsi],0x1
  401a51:	mov    DWORD PTR [rbp-0x5c],eax
  401a54:	jmp    401b23 <main@@Base+0x873>
  401a59:	xor    eax,eax
  401a5b:	mov    ecx,eax
  401a5d:	lea    rdx,[rip+0x2694]        # 4040f8 <option_quick@@Base>
  401a64:	mov    rdi,QWORD PTR [rbp-0x10]
  401a68:	cmp    DWORD PTR [rdx],0x0
  401a6b:	setne  sil
  401a6f:	xor    sil,0xff
  401a73:	and    sil,0x1
  401a77:	movzx  esi,sil
  401a7b:	lea    rdx,[rip+0x34e]        # 401dd0 <main@@Base+0xb20>
  401a82:	call   4010f0 <coda_product_check@plt>
  401a87:	cmp    eax,0x0
  401a8a:	je     401ace <main@@Base+0x81e>
  401a90:	call   4011a0 <coda_get_errno@plt>
  401a95:	mov    edi,DWORD PTR [rax]
  401a97:	call   401170 <coda_errno_to_string@plt>
  401a9c:	lea    rdi,[rip+0xc5b]        # 4026fe <_IO_stdin_used@@Base+0x6fe>
  401aa3:	mov    rsi,rax
  401aa6:	mov    al,0x0
  401aa8:	call   4011b0 <printf@plt>
  401aad:	lea    rsi,[rip+0x263c]        # 4040f0 <found_errors@@Base>
  401ab4:	mov    DWORD PTR [rsi],0x1
  401aba:	mov    rdi,QWORD PTR [rbp-0x10]
  401abe:	mov    DWORD PTR [rbp-0x60],eax
  401ac1:	call   401160 <coda_close@plt>
  401ac6:	mov    DWORD PTR [rbp-0x64],eax
  401ac9:	jmp    401b23 <main@@Base+0x873>
  401ace:	mov    rdi,QWORD PTR [rbp-0x10]
  401ad2:	call   401160 <coda_close@plt>
  401ad7:	cmp    eax,0x0
  401ada:	je     401b12 <main@@Base+0x862>
  401ae0:	call   4011a0 <coda_get_errno@plt>
  401ae5:	mov    edi,DWORD PTR [rax]
  401ae7:	call   401170 <coda_errno_to_string@plt>
  401aec:	lea    rdi,[rip+0xc65]        # 402758 <_IO_stdin_used@@Base+0x758>
  401af3:	mov    rsi,rax
  401af6:	mov    al,0x0
  401af8:	call   4011b0 <printf@plt>
  401afd:	lea    rsi,[rip+0x25ec]        # 4040f0 <found_errors@@Base>
  401b04:	mov    DWORD PTR [rsi],0x1
  401b0a:	mov    DWORD PTR [rbp-0x68],eax
  401b0d:	jmp    401b23 <main@@Base+0x873>
  401b12:	lea    rdi,[rip+0xc1d]        # 402736 <_IO_stdin_used@@Base+0x736>
  401b19:	mov    al,0x0
  401b1b:	call   4011b0 <printf@plt>
  401b20:	mov    DWORD PTR [rbp-0x6c],eax
  401b23:	add    rsp,0x70
  401b27:	pop    rbp
  401b28:	ret    
  401b29:	nop    DWORD PTR [rax+0x0]
  401b30:	push   rbp
  401b31:	mov    rbp,rsp
  401b34:	sub    rsp,0x90
  401b3b:	lea    rdi,[rip+0x5c5]        # 402107 <_IO_stdin_used@@Base+0x107>
  401b42:	mov    al,0x0
  401b44:	call   4011b0 <printf@plt>
  401b49:	lea    rdi,[rip+0x5bf]        # 40210f <_IO_stdin_used@@Base+0x10f>
  401b50:	mov    DWORD PTR [rbp-0x4],eax
  401b53:	mov    al,0x0
  401b55:	call   4011b0 <printf@plt>
  401b5a:	lea    rdi,[rip+0x5e5]        # 402146 <_IO_stdin_used@@Base+0x146>
  401b61:	mov    DWORD PTR [rbp-0x8],eax
  401b64:	mov    al,0x0
  401b66:	call   4011b0 <printf@plt>
  401b6b:	lea    rdi,[rip+0x61d]        # 40218f <_IO_stdin_used@@Base+0x18f>
  401b72:	mov    DWORD PTR [rbp-0xc],eax
  401b75:	mov    al,0x0
  401b77:	call   4011b0 <printf@plt>
  401b7c:	lea    rdi,[rip+0x61e]        # 4021a1 <_IO_stdin_used@@Base+0x1a1>
  401b83:	mov    DWORD PTR [rbp-0x10],eax
  401b86:	mov    al,0x0
  401b88:	call   4011b0 <printf@plt>
  401b8d:	lea    rdi,[rip+0x62b]        # 4021bf <_IO_stdin_used@@Base+0x1bf>
  401b94:	mov    DWORD PTR [rbp-0x14],eax
  401b97:	mov    al,0x0
  401b99:	call   4011b0 <printf@plt>
  401b9e:	lea    rdi,[rip+0x668]        # 40220d <_IO_stdin_used@@Base+0x20d>
  401ba5:	mov    DWORD PTR [rbp-0x18],eax
  401ba8:	mov    al,0x0
  401baa:	call   4011b0 <printf@plt>
  401baf:	lea    rdi,[rip+0x69d]        # 402253 <_IO_stdin_used@@Base+0x253>
  401bb6:	mov    DWORD PTR [rbp-0x1c],eax
  401bb9:	mov    al,0x0
  401bbb:	call   4011b0 <printf@plt>
  401bc0:	lea    rdi,[rip+0x6d9]        # 4022a0 <_IO_stdin_used@@Base+0x2a0>
  401bc7:	mov    DWORD PTR [rbp-0x20],eax
  401bca:	mov    al,0x0
  401bcc:	call   4011b0 <printf@plt>
  401bd1:	lea    rdi,[rip+0x6e1]        # 4022b9 <_IO_stdin_used@@Base+0x2b9>
  401bd8:	mov    DWORD PTR [rbp-0x24],eax
  401bdb:	mov    al,0x0
  401bdd:	call   4011b0 <printf@plt>
  401be2:	lea    rdi,[rip+0x70f]        # 4022f8 <_IO_stdin_used@@Base+0x2f8>
  401be9:	mov    DWORD PTR [rbp-0x28],eax
  401bec:	mov    al,0x0
  401bee:	call   4011b0 <printf@plt>
  401bf3:	lea    rdi,[rip+0x736]        # 402330 <_IO_stdin_used@@Base+0x330>
  401bfa:	mov    DWORD PTR [rbp-0x2c],eax
  401bfd:	mov    al,0x0
  401bff:	call   4011b0 <printf@plt>
  401c04:	lea    rdi,[rip+0x740]        # 40234b <_IO_stdin_used@@Base+0x34b>
  401c0b:	mov    DWORD PTR [rbp-0x30],eax
  401c0e:	mov    al,0x0
  401c10:	call   4011b0 <printf@plt>
  401c15:	lea    rdi,[rip+0x775]        # 402391 <_IO_stdin_used@@Base+0x391>
  401c1c:	mov    DWORD PTR [rbp-0x34],eax
  401c1f:	mov    al,0x0
  401c21:	call   4011b0 <printf@plt>
  401c26:	lea    rdi,[rip+0x77b]        # 4023a8 <_IO_stdin_used@@Base+0x3a8>
  401c2d:	mov    DWORD PTR [rbp-0x38],eax
  401c30:	mov    al,0x0
  401c32:	call   4011b0 <printf@plt>
  401c37:	lea    rdi,[rip+0xaf8]        # 402736 <_IO_stdin_used@@Base+0x736>
  401c3e:	mov    DWORD PTR [rbp-0x3c],eax
  401c41:	mov    al,0x0
  401c43:	call   4011b0 <printf@plt>
  401c48:	lea    rdi,[rip+0x799]        # 4023e8 <_IO_stdin_used@@Base+0x3e8>
  401c4f:	mov    DWORD PTR [rbp-0x40],eax
  401c52:	mov    al,0x0
  401c54:	call   4011b0 <printf@plt>
  401c59:	lea    rdi,[rip+0x7d7]        # 402437 <_IO_stdin_used@@Base+0x437>
  401c60:	mov    DWORD PTR [rbp-0x44],eax
  401c63:	mov    al,0x0
  401c65:	call   4011b0 <printf@plt>
  401c6a:	lea    rdi,[rip+0xac5]        # 402736 <_IO_stdin_used@@Base+0x736>
  401c71:	mov    DWORD PTR [rbp-0x48],eax
  401c74:	mov    al,0x0
  401c76:	call   4011b0 <printf@plt>
  401c7b:	lea    rdi,[rip+0x7d2]        # 402454 <_IO_stdin_used@@Base+0x454>
  401c82:	mov    DWORD PTR [rbp-0x4c],eax
  401c85:	mov    al,0x0
  401c87:	call   4011b0 <printf@plt>
  401c8c:	lea    rdi,[rip+0x7db]        # 40246e <_IO_stdin_used@@Base+0x46e>
  401c93:	mov    DWORD PTR [rbp-0x50],eax
  401c96:	mov    al,0x0
  401c98:	call   4011b0 <printf@plt>
  401c9d:	lea    rdi,[rip+0xa92]        # 402736 <_IO_stdin_used@@Base+0x736>
  401ca4:	mov    DWORD PTR [rbp-0x54],eax
  401ca7:	mov    al,0x0
  401ca9:	call   4011b0 <printf@plt>
  401cae:	lea    rdi,[rip+0x7d8]        # 40248d <_IO_stdin_used@@Base+0x48d>
  401cb5:	mov    DWORD PTR [rbp-0x58],eax
  401cb8:	mov    al,0x0
  401cba:	call   4011b0 <printf@plt>
  401cbf:	lea    rdi,[rip+0x7e4]        # 4024aa <_IO_stdin_used@@Base+0x4aa>
  401cc6:	mov    DWORD PTR [rbp-0x5c],eax
  401cc9:	mov    al,0x0
  401ccb:	call   4011b0 <printf@plt>
  401cd0:	lea    rdi,[rip+0xa5f]        # 402736 <_IO_stdin_used@@Base+0x736>
  401cd7:	mov    DWORD PTR [rbp-0x60],eax
  401cda:	mov    al,0x0
  401cdc:	call   4011b0 <printf@plt>
  401ce1:	lea    rdi,[rip+0x7f5]        # 4024dd <_IO_stdin_used@@Base+0x4dd>
  401ce8:	mov    DWORD PTR [rbp-0x64],eax
  401ceb:	mov    al,0x0
  401ced:	call   4011b0 <printf@plt>
  401cf2:	lea    rdi,[rip+0x833]        # 40252c <_IO_stdin_used@@Base+0x52c>
  401cf9:	mov    DWORD PTR [rbp-0x68],eax
  401cfc:	mov    al,0x0
  401cfe:	call   4011b0 <printf@plt>
  401d03:	lea    rdi,[rip+0x86c]        # 402576 <_IO_stdin_used@@Base+0x576>
  401d0a:	mov    DWORD PTR [rbp-0x6c],eax
  401d0d:	mov    al,0x0
  401d0f:	call   4011b0 <printf@plt>
  401d14:	lea    rdi,[rip+0x887]        # 4025a2 <_IO_stdin_used@@Base+0x5a2>
  401d1b:	mov    DWORD PTR [rbp-0x70],eax
  401d1e:	mov    al,0x0
  401d20:	call   4011b0 <printf@plt>
  401d25:	lea    rdi,[rip+0x8c3]        # 4025ef <_IO_stdin_used@@Base+0x5ef>
  401d2c:	mov    DWORD PTR [rbp-0x74],eax
  401d2f:	mov    al,0x0
  401d31:	call   4011b0 <printf@plt>
  401d36:	lea    rdi,[rip+0x8f9]        # 402636 <_IO_stdin_used@@Base+0x636>
  401d3d:	mov    DWORD PTR [rbp-0x78],eax
  401d40:	mov    al,0x0
  401d42:	call   4011b0 <printf@plt>
  401d47:	lea    rdi,[rip+0x928]        # 402676 <_IO_stdin_used@@Base+0x676>
  401d4e:	mov    DWORD PTR [rbp-0x7c],eax
  401d51:	mov    al,0x0
  401d53:	call   4011b0 <printf@plt>
  401d58:	lea    rdi,[rip+0x9d7]        # 402736 <_IO_stdin_used@@Base+0x736>
  401d5f:	mov    DWORD PTR [rbp-0x80],eax
  401d62:	mov    al,0x0
  401d64:	call   4011b0 <printf@plt>
  401d69:	mov    DWORD PTR [rbp-0x84],eax
  401d6f:	add    rsp,0x90
  401d76:	pop    rbp
  401d77:	ret    
  401d78:	nop    DWORD PTR [rax+rax*1+0x0]
  401d80:	push   rbp
  401d81:	mov    rbp,rsp
  401d84:	sub    rsp,0x10
  401d88:	call   401190 <coda_get_libcoda_version@plt>
  401d8d:	lea    rdi,[rip+0x923]        # 4026b7 <_IO_stdin_used@@Base+0x6b7>
  401d94:	mov    rsi,rax
  401d97:	mov    al,0x0
  401d99:	call   4011b0 <printf@plt>
  401d9e:	lea    rdi,[rip+0x928]        # 4026cd <_IO_stdin_used@@Base+0x6cd>
  401da5:	mov    DWORD PTR [rbp-0x4],eax
  401da8:	mov    al,0x0
  401daa:	call   4011b0 <printf@plt>
  401daf:	lea    rdi,[rip+0x980]        # 402736 <_IO_stdin_used@@Base+0x736>
  401db6:	mov    DWORD PTR [rbp-0x8],eax
  401db9:	mov    al,0x0
  401dbb:	call   4011b0 <printf@plt>
  401dc0:	mov    DWORD PTR [rbp-0xc],eax
  401dc3:	add    rsp,0x10
  401dc7:	pop    rbp
  401dc8:	ret    
  401dc9:	nop    DWORD PTR [rax+0x0]
  401dd0:	push   rbp
  401dd1:	mov    rbp,rsp
  401dd4:	sub    rsp,0x30
  401dd8:	mov    QWORD PTR [rbp-0x8],rdi
  401ddc:	mov    QWORD PTR [rbp-0x10],rsi
  401de0:	mov    QWORD PTR [rbp-0x18],rdx
  401de4:	mov    rsi,QWORD PTR [rbp-0x10]
  401de8:	lea    rdi,[rip+0x976]        # 402765 <_IO_stdin_used@@Base+0x765>
  401def:	mov    al,0x0
  401df1:	call   4011b0 <printf@plt>
  401df6:	cmp    QWORD PTR [rbp-0x8],0x0
  401dfb:	mov    DWORD PTR [rbp-0x1c],eax
  401dfe:	je     401e28 <main@@Base+0xb78>
  401e04:	lea    rdi,[rip+0x966]        # 402771 <_IO_stdin_used@@Base+0x771>
  401e0b:	mov    al,0x0
  401e0d:	call   4011b0 <printf@plt>
  401e12:	mov    rsi,QWORD PTR [rip+0x21c7]        # 403fe0 <printf@GLIBC_2.2.5>
  401e19:	mov    rdi,QWORD PTR [rbp-0x8]
  401e1d:	mov    DWORD PTR [rbp-0x20],eax
  401e20:	call   401070 <coda_cursor_print_path@plt>
  401e25:	mov    DWORD PTR [rbp-0x24],eax
  401e28:	lea    rdi,[rip+0x907]        # 402736 <_IO_stdin_used@@Base+0x736>
  401e2f:	mov    al,0x0
  401e31:	call   4011b0 <printf@plt>
  401e36:	lea    rdi,[rip+0x22b3]        # 4040f0 <found_errors@@Base>
  401e3d:	mov    DWORD PTR [rdi],0x1
  401e43:	mov    DWORD PTR [rbp-0x28],eax
  401e46:	add    rsp,0x30
  401e4a:	pop    rbp
  401e4b:	ret    
  401e4c:	nop    DWORD PTR [rax+0x0]

0000000000401e50 <__libc_csu_init@@Base>:
  401e50:	endbr64 
  401e54:	push   r15
  401e56:	lea    r15,[rip+0x1f5b]        # 403db8 <_IO_stdin_used@@Base+0x1db8>
  401e5d:	push   r14
  401e5f:	mov    r14,rdx
  401e62:	push   r13
  401e64:	mov    r13,rsi
  401e67:	push   r12
  401e69:	mov    r12d,edi
  401e6c:	push   rbp
  401e6d:	lea    rbp,[rip+0x1f4c]        # 403dc0 <_IO_stdin_used@@Base+0x1dc0>
  401e74:	push   rbx
  401e75:	sub    rbp,r15
  401e78:	sub    rsp,0x8
  401e7c:	call   401000 <coda_set_option_perform_boundary_checks@plt-0x30>
  401e81:	sar    rbp,0x3
  401e85:	je     401ea6 <__libc_csu_init@@Base+0x56>
  401e87:	xor    ebx,ebx
  401e89:	nop    DWORD PTR [rax+0x0]
  401e90:	mov    rdx,r14
  401e93:	mov    rsi,r13
  401e96:	mov    edi,r12d
  401e99:	call   QWORD PTR [r15+rbx*8]
  401e9d:	add    rbx,0x1
  401ea1:	cmp    rbp,rbx
  401ea4:	jne    401e90 <__libc_csu_init@@Base+0x40>
  401ea6:	add    rsp,0x8
  401eaa:	pop    rbx
  401eab:	pop    rbp
  401eac:	pop    r12
  401eae:	pop    r13
  401eb0:	pop    r14
  401eb2:	pop    r15
  401eb4:	ret    
  401eb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401ec0 <__libc_csu_fini@@Base>:
  401ec0:	endbr64 
  401ec4:	ret    

Disassembly of section .fini:

0000000000401ec8 <.fini>:
  401ec8:	endbr64 
  401ecc:	sub    rsp,0x8
  401ed0:	add    rsp,0x8
  401ed4:	ret    
