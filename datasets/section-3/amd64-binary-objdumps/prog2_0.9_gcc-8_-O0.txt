
../repos/prog2/0.9:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x6a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__stack_chk_fail@plt-0x60>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__stack_chk_fail@plt-0x60>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__stack_chk_fail@plt-0x60>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <__stack_chk_fail@plt-0x60>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <__stack_chk_fail@plt-0x60>
  40107f:	nop

Disassembly of section .plt.sec:

0000000000401080 <__stack_chk_fail@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f8d]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401090 <printf@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f85]        # 404020 <printf@GLIBC_2.2.5>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <strcmp@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404028 <strcmp@GLIBC_2.2.5>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <__isoc99_scanf@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404030 <__isoc99_scanf@GLIBC_2.7>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <strcat@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404038 <strcat@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010d0 <_start@@Base>:
  4010d0:	endbr64 
  4010d4:	xor    ebp,ebp
  4010d6:	mov    r9,rdx
  4010d9:	pop    rsi
  4010da:	mov    rdx,rsp
  4010dd:	and    rsp,0xfffffffffffffff0
  4010e1:	push   rax
  4010e2:	push   rsp
  4010e3:	mov    r8,0x4015e0
  4010ea:	mov    rcx,0x401570
  4010f1:	mov    rdi,0x401471
  4010f8:	call   QWORD PTR [rip+0x2ef2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010fe:	hlt    
  4010ff:	nop
  401100:	endbr64 
  401104:	ret    
  401105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40110f:	nop
  401110:	mov    eax,0x404050
  401115:	cmp    rax,0x404050
  40111b:	je     401130 <_start@@Base+0x60>
  40111d:	mov    eax,0x0
  401122:	test   rax,rax
  401125:	je     401130 <_start@@Base+0x60>
  401127:	mov    edi,0x404050
  40112c:	jmp    rax
  40112e:	xchg   ax,ax
  401130:	ret    
  401131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	mov    esi,0x404050
  401145:	sub    rsi,0x404050
  40114c:	sar    rsi,0x3
  401150:	mov    rax,rsi
  401153:	shr    rax,0x3f
  401157:	add    rsi,rax
  40115a:	sar    rsi,1
  40115d:	je     401170 <_start@@Base+0xa0>
  40115f:	mov    eax,0x0
  401164:	test   rax,rax
  401167:	je     401170 <_start@@Base+0xa0>
  401169:	mov    edi,0x404050
  40116e:	jmp    rax
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	endbr64 
  401184:	cmp    BYTE PTR [rip+0x2ec5],0x0        # 404050 <__bss_start@@Base>
  40118b:	jne    4011a0 <_start@@Base+0xd0>
  40118d:	push   rbp
  40118e:	mov    rbp,rsp
  401191:	call   401110 <_start@@Base+0x40>
  401196:	mov    BYTE PTR [rip+0x2eb3],0x1        # 404050 <__bss_start@@Base>
  40119d:	pop    rbp
  40119e:	ret    
  40119f:	nop
  4011a0:	ret    
  4011a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011ac:	nop    DWORD PTR [rax+0x0]
  4011b0:	endbr64 
  4011b4:	jmp    401140 <_start@@Base+0x70>

00000000004011b6 <ler_albuns@@Base>:
  4011b6:	endbr64 
  4011ba:	push   rbp
  4011bb:	mov    rbp,rsp
  4011be:	sub    rsp,0x30
  4011c2:	mov    QWORD PTR [rbp-0x28],rdi
  4011c6:	mov    rax,QWORD PTR fs:0x28
  4011cf:	mov    QWORD PTR [rbp-0x8],rax
  4011d3:	xor    eax,eax
  4011d5:	mov    DWORD PTR [rbp-0x1c],0x0
  4011dc:	mov    QWORD PTR [rbp-0x17],0x0
  4011e4:	mov    DWORD PTR [rbp-0xf],0x0
  4011eb:	mov    WORD PTR [rbp-0xb],0x0
  4011f1:	mov    BYTE PTR [rbp-0x9],0x0
  4011f5:	jmp    40125d <ler_albuns@@Base+0xa7>
  4011f7:	mov    eax,DWORD PTR [rbp-0x1c]
  4011fa:	cdqe   
  4011fc:	imul   rdx,rax,0xd0
  401203:	mov    rax,QWORD PTR [rbp-0x28]
  401207:	add    rax,rdx
  40120a:	mov    rsi,rax
  40120d:	mov    rax,rsi
  401210:	mov    rcx,0xffffffffffffffff
  401217:	mov    rdx,rax
  40121a:	mov    eax,0x0
  40121f:	mov    rdi,rdx
  401222:	repnz scas al,BYTE PTR es:[rdi]
  401224:	mov    rax,rcx
  401227:	not    rax
  40122a:	dec    rax
  40122d:	add    rax,rsi
  401230:	mov    WORD PTR [rax],0x20
  401235:	mov    eax,DWORD PTR [rbp-0x1c]
  401238:	cdqe   
  40123a:	imul   rdx,rax,0xd0
  401241:	mov    rax,QWORD PTR [rbp-0x28]
  401245:	add    rax,rdx
  401248:	mov    rdx,rax
  40124b:	lea    rax,[rbp-0x17]
  40124f:	mov    rsi,rax
  401252:	mov    rdi,rdx
  401255:	call   4010c0 <strcat@plt>
  40125a:	inc    DWORD PTR [rbp-0x1c]
  40125d:	mov    eax,DWORD PTR [rbp-0x1c]
  401260:	cdqe   
  401262:	imul   rdx,rax,0xd0
  401269:	mov    rax,QWORD PTR [rbp-0x28]
  40126d:	add    rax,rdx
  401270:	lea    r8,[rax+0xcc]
  401277:	mov    eax,DWORD PTR [rbp-0x1c]
  40127a:	cdqe   
  40127c:	imul   rdx,rax,0xd0
  401283:	mov    rax,QWORD PTR [rbp-0x28]
  401287:	add    rax,rdx
  40128a:	lea    rdi,[rax+0xc8]
  401291:	mov    eax,DWORD PTR [rbp-0x1c]
  401294:	cdqe   
  401296:	imul   rdx,rax,0xd0
  40129d:	mov    rax,QWORD PTR [rbp-0x28]
  4012a1:	add    rax,rdx
  4012a4:	lea    rdx,[rax+0x64]
  4012a8:	mov    eax,DWORD PTR [rbp-0x1c]
  4012ab:	cdqe   
  4012ad:	imul   rcx,rax,0xd0
  4012b4:	mov    rax,QWORD PTR [rbp-0x28]
  4012b8:	add    rax,rcx
  4012bb:	mov    rsi,rax
  4012be:	lea    rax,[rbp-0x17]
  4012c2:	mov    r9,r8
  4012c5:	mov    r8,rdi
  4012c8:	mov    rcx,rdx
  4012cb:	mov    rdx,rax
  4012ce:	lea    rdi,[rip+0xd33]        # 402008 <_IO_stdin_used@@Base+0x8>
  4012d5:	mov    eax,0x0
  4012da:	call   4010b0 <__isoc99_scanf@plt>
  4012df:	cmp    eax,0x5
  4012e2:	jne    4012ee <ler_albuns@@Base+0x138>
  4012e4:	cmp    DWORD PTR [rbp-0x1c],0x63
  4012e8:	jle    4011f7 <ler_albuns@@Base+0x41>
  4012ee:	mov    eax,DWORD PTR [rbp-0x1c]
  4012f1:	mov    rsi,QWORD PTR [rbp-0x8]
  4012f5:	xor    rsi,QWORD PTR fs:0x28
  4012fe:	je     401305 <ler_albuns@@Base+0x14f>
  401300:	call   401080 <__stack_chk_fail@plt>
  401305:	leave  
  401306:	ret    

0000000000401307 <lista_albuns@@Base>:
  401307:	endbr64 
  40130b:	push   rbp
  40130c:	mov    rbp,rsp
  40130f:	sub    rsp,0x20
  401313:	mov    QWORD PTR [rbp-0x18],rdi
  401317:	mov    DWORD PTR [rbp-0x1c],esi
  40131a:	mov    DWORD PTR [rbp-0x4],0x0
  401321:	jmp    40139a <lista_albuns@@Base+0x93>
  401323:	mov    eax,DWORD PTR [rbp-0x4]
  401326:	cdqe   
  401328:	imul   rdx,rax,0xd0
  40132f:	mov    rax,QWORD PTR [rbp-0x18]
  401333:	add    rax,rdx
  401336:	mov    ecx,DWORD PTR [rax+0xcc]
  40133c:	mov    eax,DWORD PTR [rbp-0x4]
  40133f:	cdqe   
  401341:	imul   rdx,rax,0xd0
  401348:	mov    rax,QWORD PTR [rbp-0x18]
  40134c:	add    rax,rdx
  40134f:	mov    eax,DWORD PTR [rax+0xc8]
  401355:	mov    edx,DWORD PTR [rbp-0x4]
  401358:	movsxd rdx,edx
  40135b:	imul   rsi,rdx,0xd0
  401362:	mov    rdx,QWORD PTR [rbp-0x18]
  401366:	add    rdx,rsi
  401369:	add    rdx,0x64
  40136d:	mov    esi,DWORD PTR [rbp-0x4]
  401370:	movsxd rsi,esi
  401373:	imul   rdi,rsi,0xd0
  40137a:	mov    rsi,QWORD PTR [rbp-0x18]
  40137e:	add    rsi,rdi
  401381:	mov    r8d,ecx
  401384:	mov    ecx,eax
  401386:	lea    rdi,[rip+0xc8a]        # 402017 <_IO_stdin_used@@Base+0x17>
  40138d:	mov    eax,0x0
  401392:	call   401090 <printf@plt>
  401397:	inc    DWORD PTR [rbp-0x4]
  40139a:	mov    eax,DWORD PTR [rbp-0x4]
  40139d:	cmp    eax,DWORD PTR [rbp-0x1c]
  4013a0:	jl     401323 <lista_albuns@@Base+0x1c>
  4013a2:	nop
  4013a3:	leave  
  4013a4:	ret    

00000000004013a5 <albuns_artista@@Base>:
  4013a5:	endbr64 
  4013a9:	push   rbp
  4013aa:	mov    rbp,rsp
  4013ad:	sub    rsp,0x30
  4013b1:	mov    QWORD PTR [rbp-0x18],rdi
  4013b5:	mov    DWORD PTR [rbp-0x1c],esi
  4013b8:	mov    QWORD PTR [rbp-0x28],rdx
  4013bc:	mov    DWORD PTR [rbp-0x20],ecx
  4013bf:	mov    DWORD PTR [rbp-0x4],0x0
  4013c6:	cmp    DWORD PTR [rbp-0x20],0x0
  4013ca:	jne    40140e <albuns_artista@@Base+0x69>
  4013cc:	mov    DWORD PTR [rbp-0x8],0x0
  4013d3:	jmp    401404 <albuns_artista@@Base+0x5f>
  4013d5:	mov    eax,DWORD PTR [rbp-0x8]
  4013d8:	cdqe   
  4013da:	imul   rdx,rax,0xd0
  4013e1:	mov    rax,QWORD PTR [rbp-0x18]
  4013e5:	add    rax,rdx
  4013e8:	mov    rdx,rax
  4013eb:	mov    rax,QWORD PTR [rbp-0x28]
  4013ef:	mov    rsi,rdx
  4013f2:	mov    rdi,rax
  4013f5:	call   4010a0 <strcmp@plt>
  4013fa:	test   eax,eax
  4013fc:	jne    401401 <albuns_artista@@Base+0x5c>
  4013fe:	inc    DWORD PTR [rbp-0x4]
  401401:	inc    DWORD PTR [rbp-0x8]
  401404:	mov    eax,DWORD PTR [rbp-0x8]
  401407:	cmp    eax,DWORD PTR [rbp-0x1c]
  40140a:	jl     4013d5 <albuns_artista@@Base+0x30>
  40140c:	jmp    40146c <albuns_artista@@Base+0xc7>
  40140e:	mov    DWORD PTR [rbp-0x8],0x0
  401415:	jmp    401464 <albuns_artista@@Base+0xbf>
  401417:	mov    eax,DWORD PTR [rbp-0x8]
  40141a:	cdqe   
  40141c:	imul   rdx,rax,0xd0
  401423:	mov    rax,QWORD PTR [rbp-0x18]
  401427:	add    rax,rdx
  40142a:	mov    rdx,rax
  40142d:	mov    rax,QWORD PTR [rbp-0x28]
  401431:	mov    rsi,rdx
  401434:	mov    rdi,rax
  401437:	call   4010a0 <strcmp@plt>
  40143c:	test   eax,eax
  40143e:	jne    401461 <albuns_artista@@Base+0xbc>
  401440:	mov    eax,DWORD PTR [rbp-0x8]
  401443:	cdqe   
  401445:	imul   rdx,rax,0xd0
  40144c:	mov    rax,QWORD PTR [rbp-0x18]
  401450:	add    rax,rdx
  401453:	mov    eax,DWORD PTR [rax+0xcc]
  401459:	cmp    DWORD PTR [rbp-0x20],eax
  40145c:	jne    401461 <albuns_artista@@Base+0xbc>
  40145e:	inc    DWORD PTR [rbp-0x4]
  401461:	inc    DWORD PTR [rbp-0x8]
  401464:	mov    eax,DWORD PTR [rbp-0x8]
  401467:	cmp    eax,DWORD PTR [rbp-0x1c]
  40146a:	jl     401417 <albuns_artista@@Base+0x72>
  40146c:	mov    eax,DWORD PTR [rbp-0x4]
  40146f:	leave  
  401470:	ret    

0000000000401471 <main@@Base>:
  401471:	endbr64 
  401475:	push   rbp
  401476:	mov    rbp,rsp
  401479:	lea    r11,[rsp-0x5000]
  401481:	sub    rsp,0x1000
  401488:	or     QWORD PTR [rsp],0x0
  40148d:	cmp    rsp,r11
  401490:	jne    401481 <main@@Base+0x10>
  401492:	sub    rsp,0x160
  401499:	mov    rax,QWORD PTR fs:0x28
  4014a2:	mov    QWORD PTR [rbp-0x8],rax
  4014a6:	xor    eax,eax
  4014a8:	lea    rax,[rbp-0x5150]
  4014af:	mov    rdi,rax
  4014b2:	call   4011b6 <ler_albuns@@Base>
  4014b7:	mov    DWORD PTR [rbp-0x5154],eax
  4014bd:	mov    edx,DWORD PTR [rbp-0x5154]
  4014c3:	lea    rax,[rbp-0x5150]
  4014ca:	mov    esi,edx
  4014cc:	mov    rdi,rax
  4014cf:	call   401307 <lista_albuns@@Base>
  4014d4:	mov    eax,DWORD PTR [rbp-0x5154]
  4014da:	mov    esi,eax
  4014dc:	lea    rdi,[rip+0xb45]        # 402028 <_IO_stdin_used@@Base+0x28>
  4014e3:	mov    eax,0x0
  4014e8:	call   401090 <printf@plt>
  4014ed:	mov    esi,DWORD PTR [rbp-0x5154]
  4014f3:	lea    rax,[rbp-0x5150]
  4014fa:	mov    ecx,0x1
  4014ff:	lea    rdx,[rip+0xb42]        # 402048 <_IO_stdin_used@@Base+0x48>
  401506:	mov    rdi,rax
  401509:	call   4013a5 <albuns_artista@@Base>
  40150e:	mov    esi,eax
  401510:	lea    rdi,[rip+0xb41]        # 402058 <_IO_stdin_used@@Base+0x58>
  401517:	mov    eax,0x0
  40151c:	call   401090 <printf@plt>
  401521:	mov    esi,DWORD PTR [rbp-0x5154]
  401527:	lea    rax,[rbp-0x5150]
  40152e:	mov    ecx,0x0
  401533:	lea    rdx,[rip+0xb0e]        # 402048 <_IO_stdin_used@@Base+0x48>
  40153a:	mov    rdi,rax
  40153d:	call   4013a5 <albuns_artista@@Base>
  401542:	mov    esi,eax
  401544:	lea    rdi,[rip+0xb45]        # 402090 <_IO_stdin_used@@Base+0x90>
  40154b:	mov    eax,0x0
  401550:	call   401090 <printf@plt>
  401555:	mov    eax,0x0
  40155a:	mov    rcx,QWORD PTR [rbp-0x8]
  40155e:	xor    rcx,QWORD PTR fs:0x28
  401567:	je     40156e <main@@Base+0xfd>
  401569:	call   401080 <__stack_chk_fail@plt>
  40156e:	leave  
  40156f:	ret    

0000000000401570 <__libc_csu_init@@Base>:
  401570:	endbr64 
  401574:	push   r15
  401576:	lea    r15,[rip+0x2893]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40157d:	push   r14
  40157f:	mov    r14,rdx
  401582:	push   r13
  401584:	mov    r13,rsi
  401587:	push   r12
  401589:	mov    r12d,edi
  40158c:	push   rbp
  40158d:	lea    rbp,[rip+0x2884]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401594:	push   rbx
  401595:	sub    rbp,r15
  401598:	sub    rsp,0x8
  40159c:	call   401000 <__stack_chk_fail@plt-0x80>
  4015a1:	sar    rbp,0x3
  4015a5:	je     4015c6 <__libc_csu_init@@Base+0x56>
  4015a7:	xor    ebx,ebx
  4015a9:	nop    DWORD PTR [rax+0x0]
  4015b0:	mov    rdx,r14
  4015b3:	mov    rsi,r13
  4015b6:	mov    edi,r12d
  4015b9:	call   QWORD PTR [r15+rbx*8]
  4015bd:	add    rbx,0x1
  4015c1:	cmp    rbp,rbx
  4015c4:	jne    4015b0 <__libc_csu_init@@Base+0x40>
  4015c6:	add    rsp,0x8
  4015ca:	pop    rbx
  4015cb:	pop    rbp
  4015cc:	pop    r12
  4015ce:	pop    r13
  4015d0:	pop    r14
  4015d2:	pop    r15
  4015d4:	ret    
  4015d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004015e0 <__libc_csu_fini@@Base>:
  4015e0:	endbr64 
  4015e4:	ret    

Disassembly of section .fini:

00000000004015e8 <.fini>:
  4015e8:	endbr64 
  4015ec:	sub    rsp,0x8
  4015f0:	add    rsp,0x8
  4015f4:	ret    
